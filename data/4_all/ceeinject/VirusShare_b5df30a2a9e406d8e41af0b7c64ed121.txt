call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
in
hlt
loopne
xor
test
mov
or
push
add
pusha
add
adc
and
xor
les
hlt
loopne
lock
shlb
popa
adc
jo
inc
and
xor
les
adc
dec
hlt
incb
mov
inc
adc
push
jne
or
inc
adc
or
into
mov
popf
orb
sbb
sti
aas
cmpsl
add
pop
lods
popf
or
inc
jo
inc
scas
push
imul
add
jo
dec
lods
pop
mov
test
adc
and
gs
cmc
fprem1
mov
adc
push
jecxz
jbe
xor
adc
adc
mov
lock
jl
pop
daa
lock
aas
into
rorb
mov
out
xchg
lahf
add
ljmp
mov
jns
or
sbb
add
push
jo
push
jo
mov
inc
sub
mov
test
pop
aas
lods
in
adc
pop
mov
inc
inc
and
and
out
and
hlt
add
mov
inc
stos
push
jbe
and
jp
jb
push
pop
leave
rol
hlt
in
hlt
loope
std
mov
shl
and
jne
adc
jno
pop
xor
mov
xor
fdivs
punpckldq
sbb
adc
int3
sbb
loope
ret
xchg
mov
lock
shlb
add
pusha
add
adc
and
xor
les
hlt
loopne
lock
shlb
add
pusha
add
adc
and
xor
les
mov
das
lock
sub
dec
lods
ret
iret
arpl
adc
ficoml
shll
std
add
mov
data16
jns
jl
ja
cwtl
popa
test
ljmp
outsb
xchg
cmp
push
js
mov
cmpsb
xchg
jae
mov
mov
adc
push
xchg
orl
push
adc
sti
add
sbb
fs
mov
push
mov
cmp
icebp
sahf
out
xlat
std
mov
int
fisubrl
fnstenv
mov
ja
and
cmpl
lods
int
sub
pop
stc
movb
shlb
fcoml
mov
iret
idivb
mov
mov
call
shlb
or
xchg
loop
insl
push
clc
fdivrp
loop
stos
sarb
cmp
lea
popf
testb
xchg
adc
lahf
jns
out
adc
test
xor
dec
cmpsb
cmc
sbb
or
call
jp
mov
add
lahf
shll
sbb
sub
cwtl
pop
aaa
mov
and
loopne
jne
imul
push
xor
scas
jg
movsb
sub
dec
xor
js
xor
xchg
add
mov
jae
cmpsb
sub
mov
dec
in
push
push
arpl
push
fs
sbb
mov
stos
sub
adc
mov
adc
and
pop
in
or
cmp
mov
out
out
je
jb
sbb
sbb
push
fwait
call
lahf
or
sarl
dec
adc
test
call
xor
pop
es
dec
ret
push
loop
xchg
jbe
loope
lods
mov
shr
mov
faddl
mov
xchg
dec
cmp
lds
fidivrs
cmc
mov
xchg
int
or
sti
xchg
push
repz
add
mov
imul
js
mov
push
in
sbb
imul
cmp
and
loope
lods
mov
or
loopne
add
in
add
pop
mov
fstps
test
in
mov
testl
les
pusha
dec
and
lret
fisubrs
mov
shll
iret
pop
mov
mov
push
stc
push
inc
and
xor
outsb
add
scas
sbb
jnp
cld
pop
and
andl
out
js
cwtl
cmc
xchg
out
cltd
loop
jno
mov
cmc
int
in
lods
test
rcll
or
std
int
mov
lret
sbb
aam
gs
dec
das
fwait
cmp
inc
test
and
sbb
outsb
mov
pop
gs
cvtps2pi
fisttpl
add
je
into
dec
xchg
pop
ljmp
sub
lret
out
pop
dec
jmp
outsb
inc
out
ds
imul
dec
lock
insl
movsb
xchg
hlt
addr16
xchg
mov
lret
lock
gs
ljmp
jno
ffreep
ret
push
mov
scas
xchg
sbb
into
scas
jmp
call
inc
ret
insb
data16
loop
int
push
lds
movsb
xlat
mov
cmpsb
pop
lods
dec
adc
loop
and
pop
fisubs
mov
cmp
inc
clc
je
ret
jnp
push
ja
add
fistpll
and
pop
push
xor
loop
cmp
pop
fiadds
stos
jbe
scas
aad
adc
mov
dec
inc
jb
and
jge
and
sbb
xor
das
cmp
in
mov
sarb
xchg
sub
lahf
add
nop
push
add
shl
jne
addb
inc
shrb
hlt
movsb
push
ljmp
movsl
repz
adc
cmp
jne
xchg
mov
lods
mov
pop
xlat
inc
xchg
sbb
inc
imul
adc
test
and
pop
clc
inc
je
push
cmp
xchg
push
enter
dec
cmpsl
add
jg
in
push
mov
adc
pushf
in
jb
mov
dec
sbb
mov
aas
pop
push
dec
adc
setge
and
fcomi
outsl
ffree
imull
sub
bound
add
fdivrl
sub
jbe
xor
aaa
mov
fisubs
je
mov
scas
jae
dec
inc
and
jp
mov
xchg
movsl
int3
dec
jns
mov
lea
mov
insb
xchg
movsb
int3
divb
push
out
cmpsb
sarl
add
and
and
stos
sub
push
jmp
sub
sub
testb
and
clc
fadds
sub
scas
jmp
push
mov
xchg
es
mov
stc
jns
jae
adc
std
ss
sbb
dec
jmp
dec
call
jmp
sub
addr16
in
mov
pop
sarb
fbstp
ja
jno
adcb
iret
scas
lret
lfs
pop
movsl
fsin
lcall
ja
pop
sub
and
push
rclb
pop
int
les
push
adc
test
mov
dec
cmpsb
add
jmp
xchg
xchg
and
fisttpll
or
inc
push
decl
inc
xlat
std
fldcw
jge
loopne
arpl
in
jo
mov
cmpsb
aaa
je
adc
shlb
xlat
xchg
sub
sbb
or
call
repz
rorb
add
loopne
sub
gs
arpl
xchg
pop
dec
add
pop
and
mov
mov
or
inc
add
and
leave
xchg
add
pop
sbb
popa
jnp
and
and
adc
psubb
cmp
loop
pushf
mov
sbb
jo
pop
and
mov
shr
lock
and
inc
movsb
test
jo
out
or
xor
and
cld
push
cli
or
ja
scas
jbe
inc
xchg
xchg
iret
xchg
cmp
xchg
cmpsb
cli
dec
addr16
xor
popa
sbb
stos
es
jmp
icebp
lds
inc
pop
sbb
test
fadds
js
push
rcl
cmpsb
ret
leave
ja
push
add
pop
in
sub
jb
lods
push
sahf
call
js
pop
inc
mov
fs
xor
or
mov
xor
pop
dec
mov
aaa
and
fs
shll
add
rclb
mov
jge
dec
inc
adc
inc
inc
inc
adc
in
cwtl
repnz
push
mov
and
icebp
mov
lds
sahf
and
frstor
adc
sub
sahf
adc
and
lods
outsb
xorb
pop
add
aad
cmp
cltd
in
mov
push
push
stos
jbe
aad
pop
push
leave
xor
sub
dec
xchg
lcall
cld
pop
outsb
js
mov
inc
loope
frstor
sbb
add
xchg
push
inc
sbb
aam
lret
into
mov
aam
adc
out
adc
in
xchg
dec
scas
xchg
and
nop
lea
xchg
xchg
jle
mov
mov
jbe
and
adc
mov
aad
data16
ret
pop
xchg
shrb
cld
xchg
push
pop
mov
jge
js
mov
cmp
cltd
add
dec
daa
push
inc
pop
rorl
fists
sbb
add
cltd
jmp
clc
daa
sahf
sub
add
add
pop
mov
mov
in
ret
mov
ret
hlt
inc
aad
push
insl
pop
add
inc
jl
inc
push
mov
and
adc
sbb
cmp
push
jno
mov
pop
lea
shufps
in
mov
dec
pop
in
je
pop
sub
add
pop
adc
xchg
in
push
dec
stos
daa
push
adc
mov
xor
sbb
mov
lock
aaa
nop
mov
cmp
fsub
sub
jae
xchg
cmp
test
jo
aam
mov
repnz
cmp
or
pop
scas
jb
stos
fdiv
dec
shrb
add
fwait
push
test
mov
mov
ret
aas
pop
lret
inc
xchg
repnz
and
movsl
push
push
jmp
rolb
insb
sbb
imul
add
inc
negb
popf
inc
and
in
int3
jnp
lahf
mov
and
sub
test
dec
sub
scas
mov
ja
dec
ret
test
pop
mov
adc
mov
js
pop
xor
es
push
jns
adc
movsb
or
pushf
mov
pop
dec
jmp
pop
pop
jno
lods
cmp
xchg
lds
pusha
jbe
loope
mov
sbbl
pop
xchg
lods
inc
dec
mov
xor
daa
idiv
mov
xchg
and
out
test
in
cmpsl
push
mov
out
and
push
and
insl
mov
xchg
daa
dec
jo
mov
xor
cmp
lret
dec
lahf
jge
inc
in
push
test
adcl
addl
adc
xchg
pop
insl
inc
add
ja
lcall
sbb
test
jns
loope
cli
sub
xchg
mov
sub
cmp
lcall
cmpsb
xchg
pop
mov
push
jno
xchg
dec
sbb
add
sub
shrb
xchg
pop
icebp
and
sub
sub
popa
rcl
lret
test
lret
and
sub
add
fidivs
mov
sub
pushf
rorb
ret
jo
pushf
push
aaa
int
loop
add
add
xchg
sub
jne
mov
mov
into
in
test
lds
cwtl
sbb
inc
mov
mov
sbb
ret
loop
and
adc
in
sub
shrl
xchg
dec
inc
stos
sub
and
enter
imul
mov
orl
pop
cmpsl
dec
inc
inc
pop
in
inc
outsl
test
xchg
cmc
scas
pop
aam
adc
sub
dec
pop
jmp
popf
popf
gs
pop
stc
jge
and
in
inc
movsl
imul
mov
push
in
stos
addl
mov
xchg
push
aam
pusha
and
dec
call
push
sub
sbb
es
leave
imul
mov
negb
jo
fisttpll
subb
pop
sbb
aas
and
out
daa
push
adc
pop
cmp
jmp
outsl
or
jl
lds
pushf
test
adc
cmpsl
jmp
lods
icebp
mov
enter
dec
lret
repz
in
gs
test
push
push
mov
inc
loopne
icebp
adc
push
data16
mov
mov
add
add
int3
push
test
pop
mov
push
loope
cwtl
int
aad
aaa
repz
addr16
mov
fldenv
adc
bound
and
push
xor
add
dec
or
cmp
daa
add
outsl
jmp
bound
popa
insb
jg
pop
orl
add
int
rorb
inc
jo
and
pop
mov
iret
sub
push
arpl
ret
sbb
popa
nop
cmpsl
imul
stc
shlb
loope
in
cmp
mov
sti
and
fstps
int
sbb
and
std
jg
jecxz
cmpsb
pop
mov
pop
add
mov
cmp
mov
jb
push
cmp
test
push
cmp
add
xchg
or
mov
test
cmpsl
push
mov
fdivs
sub
adc
lret
vpsubw
cld
aad
dec
ret
lock
inc
out
push
jg
cmp
mov
pusha
mov
adc
enter
sbbl
insl
lret
cmpsl
dec
jne
jbe
mov
mov
cmpsb
mov
pop
out
cmc
addl
sub
add
xchg
push
ret
and
std
loop
mov
gs
jecxz
xor
sub
fs
test
and
cli
inc
mov
popf
mov
bound
nop
pushf
outsb
out
repz
jp
and
imul
sub
sub
cld
rorb
loopew
mov
daa
mov
mov
fcompl
xchg
push
push
mov
and
lods
sbb
daa
and
pop
data16
fdiv
sub
cmp
fmuls
rol
inc
sub
xor
sti
dec
xor
lahf
out
dec
inc
sub
push
aaa
mov
mov
hlt
adc
push
andl
sbb
shrl
test
push
fldl
jae
repnz
outsb
cmp
adc
or
cmpsb
gs
jecxz
xor
bound
aaa
cmp
mov
in
pop
fs
pushf
xor
xchg
subb
cmp
movsl
push
mov
xchg
fldenv
rorb
cmpsb
lahf
sub
mov
push
jnp
es
adc
mov
out
inc
faddl
cmp
mov
lds
js
es
in
bound
loope,pt
xor
mov
jo
adc
sbb
out
enter
mov
das
lods
push
mov
call
lret
pop
fld
sti
fcmovnu
les
shlb
lock
adc
sbb
pop
inc
mov
jb
inc
ja
out
es
mov
pop
xchg
xor
pop
lock
incl
push
mov
sub
and
or
pop
iret
pop
jp
push
outsl
ja
inc
repz
jns
shlb
dec
jb
test
inc
or
fcmovnb
mov
xor
aaa
xor
add
push
lods
push
mov
loop
push
and
iret
xchg
xchg
cmc
sub
and
pop
ja
mov
repnz
fmull
pop
pop
xlat
pop
xor
adc
sahf
mov
in
test
movsl
pop
bound
add
fbstp
sub
shlb
test
mov
out
gs
or
lea
scas
jg
xchg
jmp
cmpb
and
in
and
push
call
adc
mov
enter
sub
inc
lds
aas
movsb
sbb
jno
mov
lahf
dec
lea
or
repz
aas
mov
js
sub
mov
jecxz,pt
sbb
sahf
addb
inc
jg
out
ficoms
mov
loop
or
in
out
out
or
mov
mov
popa
fisubl
ljmp
or
add
push
testl
sub
sbb
mov
cmc
loope
cmpb
sti
xchg
add
jge
and
rol
cmpsb
adc
cmp
dec
call
and
insl
ret
das
lcall
jb
pop
xchg
pushl
push
aad
popf
pop
jo
icebp
xor
iret
mov
mov
pop
cbtw
mov
pop
xlat
add
out
cwtl
test
out
push
and
loop
add
rcr
jbe
pop
into
mov
ja
enter
fsubs
repnz
cmp
out
out
repz
dec
xchg
shll
and
fcomps
adc
dec
lods
clc
addb
pop
stc
dec
std
lret
sbb
or
lahf
mov
sti
imul
stc
push
mov
lods
adc
aam
adcb
push
icebp
add
shr
mov
rol
xchg
aaa
sti
arpl
dec
push
and
sarb
or
mov
test
out
movl
push
aas
into
xor
sbb
ljmp
inc
imul
filds
jo
mov
push
sbb
pushf
xchg
jne
int3
xor
lds
pop
aaa
jno
sbb
push
mov
lock
lods
sub
jnp
xor
std
xor
cmc
testl
mov
cmc
in
xchg
pop
fwait
inc
out
lea
xor
mov
lods
and
mull
jge
fidivl
jb
cmp
adc
sbb
or
dec
sbb
mov
sbb
js
push
xor
pushf
les
cmp
inc
xor
test
fnstsw
inc
stos
call
pop
push
jp
and
add
fistpl
mov
xlat
sbb
stos
ds
clc
add
lods
shrb
sbb
loope
cmc
shl
mov
xor
mov
scas
xor
push
sub
enter
pop
popa
call
mov
sbb
rcl
mov
push
cs
cltd
push
add
out
mov
or
sti
hlt
sub
and
pop
scas
sahf
outsb
mov
mov
and
frstor
out
sbb
sub
sti
mov
ds
cmp
push
sbb
pop
adc
fwait
push
movb
pusha
lret
inc
aam
xchg
mov
out
cld
rorl
movsb
sub
dec
adc
or
bound
pusha
xor
mov
xchg
dec
jp
fsubrs
push
dec
xor
mov
mov
gs
lock
adc
int3
push
fcoms
daa
mov
in
dec
xchg
mov
lcall
inc
sub
int
pop
jne
stos
decl
xor
inc
sub
jae
mov
inc
jnp
stos
xchg
out
push
fwait
push
fdivs
je
rclb
ret
inc
or
dec
sbb
loopne
cltd
jne
mov
and
cmpsl
enter
mov
add
inc
cmp
jge
inc
mov
mov
jecxz
cltd
or
daa
lds
pop
mov
and
pop
and
jne
push
inc
cmpsl
sbb
push
sub
mov
cmc
popa
jecxz
cmp
int
or
add
adc
push
in
and
loope
or
mov
jnp
pop
sub
sub
icebp
mov
inc
sahf
aaa
out
outsl
mov
gs
fbstp
mov
pop
in
pusha
in
out
adc
and
inc
mov
sub
aas
or
cmp
cmp
or
sub
iret
and
dec
dec
jp
fistpl
daa
cli
outsl
adc
fdivrs
sub
or
jo
int3
out
out
xchg
push
push
lcall
sbb
xor
mov
push
xchg
dec
adc
add
pop
rcll
into
or
es
xor
jecxz
and
xor
faddl
test
aad
out
les
test
mov
lock
sub
mov
adc
xchg
mov
mov
cltd
fisubrs
xlat
loope
out
dec
ret
mov
xchg
insl
push
and
sti
lock
mov
dec
fidivrl
adc
cmp
dec
xchg
pushf
dec
xchg
mov
pop
sbb
js
push
stc
jecxz
sbb
int3
and
arpl
addl
add
cmc
and
push
out
nop
data16
repnz
adc
fists
pusha
dec
add
add
pop
gs
add
addr16
inc
sub
and
pop
pop
mov
in
in
or
add
fimuls
push
and
sub
icebp
ds
pusha
adc
jge
hlt
dec
adc
fs
push
fnsave
icebp
aas
cwtl
lahf
push
lea
xchg
aaa
repnz
push
mov
fnstsw
cmc
push
leave
fadd
pushf
cwtl
mov
inc
ljmp
push
mov
or
insb
out
pop
sub
jmp
xchg
out
iret
fistpl
adc
and
cmc
das
inc
pop
bound
loopne
xchg
lock
movsb
in
cmp
xchg
icebp
mov
cmpsb
xor
add
popf
cmpb
hlt
jg
insb
icebp
cld
mov
daa
jp
lds
add
imul
sbb
dec
ja,pn
loope
orl
pop
mov
fldt
imul
mov
push
loopne
sbbb
cmp
jae
das
and
or
mov
movsb
hlt
xor
dec
mov
in
mov
lret
cmp
cmpb
fimull
xchg
push
jo
pop
outsb
pop
adc
jo
in
cmp
sbb
mov
cmp
ror
imul
jae
mov
roll
sbb
jecxz
outsb
sub
iret
jb
jnp
add
clc
insb
fdivrs
xchg
xorl
testb
mov
mov
lcall
add
fnstcw
mov
fdivrl
nop
ds
and
fs
jmp
js
ret
jecxz
push
aas
xchg
fistl
jae
sbb
mov
popf
jle
int
rcr
xchg
int
jmp
xor
mov
test
inc
ret
imul
mov
and
mov
jmp
cltd
dec
push
dec
push
jbe
jmp
cmp
hlt
push
jbe
in
jge
sbb
dec
and
rorl
ljmp
lret
arpl
fcompl
in
dec
popa
fdivl
out
sbb
movsb
adc
mov
lds
in
ret
cmp
and
scas
outsl
pop
mov
jbe
out
push
jne
sub
and
insl
loope
lea
jb
cmp
cwtl
xor
jae
sahf
jo
test
cmp
nop
pop
repnz
dec
test
or
aam
or
add
mov
shrl
xchg
jns
mov
jbe
faddl
scas
cmpsb
adc
inc
pushf
jmp
xchg
jl
push
dec
pop
sub
fstpl
jp
pop
lods
xchg
xlat
sbb
shl
fisttps
adc
jo
clc
inc
inc
in
cmc
sbb
mov
sbb
aam
hlt
enter
in
hlt
loopne
lock
shlb
add
pusha
add
adc
and
xor
les
hlt
loopne
lock
shlb
add
pusha
add
adc
and
xor
les
hlt
jo
lock
shlb
lock
pusha
adc
and
xor
in
aam
in
hlt
loopne
loopne
shlb
stos
adc
pop
mov
jmp
fldt
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
daa
outsl
aaa
addb
pop
and
pop
mov
cmpsl
adc
and
push
testl
nop
aaa
addb
pop
mov
inc
lock
xchg
cmpsl
adc
and
aas
testl
add
addb
pop
mov
inc
push
push
clc
cmpsl
iret
mov
hlt
outsl
mov
sub
nop
aaa
out
je
gs
daa
out
dec
int3
in
lods
cmp
insl
mov
insb
lods
out
dec
xor
mov
dec
shl
cmp
mov
mov
or
xor
push
loop
jno
in
fists
lahf
mov
andl
push
mov
test
std
lods
inc
jo
inc
mov
push
ss
jno
xchg
sbb
addr16
or
pop
cmpsl
out
cmpsl
push
or
lahf
mov
fadds
das
and
inc
clc
push
loopne
inc
dec
adc
add
inc
daa
popa
ret
push
inc
mov
mov
mov
adc
push
fistl
mov
jns
aaa
jo
xor
stos
shlb
inc
sub
cmpsl
xchg
mov
xchg
xchg
push
jo
push
popa
ret
jb
or
test
push
mov
in
sti
dec
cmpb
xor
xor
rcll
test
mov
push
mov
jne
push
push
rolb
add
or
push
outsb
loopne
ret
addr16
rolb
loopne
adc
and
push
testl
nop
aaa
addb
pop
mov
inc
lock
loopne
adc
and
push
testl
nop
xchg
push
mov
dec
fninit
scas
dec
stos
into
rol
push
outsb
xor
push
in
sbb
cmpb
call
aam
and
cmp
mov
inc
cmpsl
addb
pop
lret
mov
fwait
bound
mull
jnp
jae
lea
add
lea
mov
lods
inc
ja
or
mov
clc
cmp
fmuls
pop
and
movsl
adc
sub
xchg
test
in
adc
rcr
xchg
or
mov
loope
mov
shr
mov
jno
xchg
xor
sbb
ss
daa
push
pushf
sbb
xor
scas
mov
bound
jbe
lcall
inc
subb
lods
adc
pop
stc
fwait
push
push
mov
or
ret
dec
imul
in
cmp
push
test
mov
and
mov
and
sbb
loopne
lcall
fcomps
xor
fld
popf
sbb
fiadds
sub
not
mov
xlat
movsl
fs
in
jb
leave
mov
adcl
pop
sub
data16
sub
fisubrs
sbb
xchg
cltd
and
repz
mov
pop
shlb
ror
and
loope
push
je
scas
sub
fstpl
rclb
jae
js
lock
jecxz
test
add
cmp
test
pop
lahf
jno
popf
jne
sbb
test
mov
pop
adc
andb
out
mov
fwait
out
addr16
mov
dec
add
pop
into
mov
scas
mov
repnz
mov
push
lods
mov
rorl
cmpsb
arpl
leave
mov
xor
or
add
push
mov
adc
imul
addl
lock
in
adc
dec
mov
loop
dec
jns
ret
imul
loope
jg
xchg
dec
jg
or
adc
outsl
pop
sbb
mov
mov
fnsave
push
cmc
in
cwtl
pop
ja
xchg
std
mov
add
mov
cmp
inc
jae
sbb
out
arpl
out
rcrb
stos
xchg
out
movb
scas
push
push
std
or
xchg
push
js
mov
sbb
fldl
daa
cmp
pop
pop
mov
mov
jmp
add
rorl
inc
lods
push
inc
inc
mov
out
test
dec
test
in
add
or
push
sbb
pop
cmpl
cmp
fcoml
and
pop
push
shlb
sbb
jg
cwtl
and
in
jp
test
add
jmp
inc
mov
push
shll
mov
je
inc
das
cli
xchg
push
dec
loope
clc
in
fadd
arpl
push
jecxz
xor
clc
dec
push
inc
jae
mov
sub
cli
xchg
pop
push
pop
xchg
int
mov
mov
or
fistpll
scas
daa
adc
sbb
adc
jae
sub
rcrl
bound
cmp
scas
lods
in
pop
cmp
adc
cmp
lock
push
scas
lcall
arpl
shlb
stos
test
sbb
push
fxch
jbe
js
adc
and
addr16
push
push
shrl
jp
imul
mov
shrl
mov
in
adc
mov
xchg
popa
int3
mov
sbbb
xor
cmpsl
pop
fsubr
cmp
mov
addr16
ret
xchg
pop
xchg
ss
addb
call
cmp
daa
mov
and
outsb
cmc
es
fiaddl
sbb
dec
mov
sbb
data16
outsb
bound
faddl
xadd
cltd
cmp
stos
xchg
shll
mov
mov
xchg
mov
jecxz
sbb
ds
lcall
enter
inc
inc
or
aad
cmpl
mov
das
imul
mul
in
aas
push
inc
aad
cmpsl
xor
push
xchg
jge
mov
jle
pop
xchg
roll
addb
sub
sub
cs
pop
pop
mov
idivl
into
sti
lods
dec
insl
cmpsb
insl
mov
or
movq
push
push
fcmovnbe
mov
and
add
loop
popa
mov
cwtl
repnz
cmp
hlt
pop
add
rcr
inc
mov
rcll
in
mov
in
ja
xor
push
loopne
xchg
mov
dec
cmp
mov
jo
dec
and
clc
test
pop
iret
jge
js
mov
and
in
ret
fcmovnbe
lods
lods
and
mov
nop
add
fistl
fsubrs
call
jae
jbe
imul
shl
cwtl
es
mov
outsl
mov
push
mov
and
stos
xchg
mov
dec
jne
xchg
or
dec
lds
repnz
lret
loopne
in
inc
cmpsb
clc
sbb
out
les
ffreep
adc
stc
imul
push
lock
in
mov
push
outsb
jne
mov
in
jno
xchg
push
nop
icebp
popf
jg
je
add
ret
scas
cmp
jmp
int3
orl
push
cmp
fmulp
es
loop
cmp
lcall
test
push
cmp
into
fwait
dec
out
das
ss
add
lds
push
xchg
sub
sbbl
mov
je
cmc
roll
cmc
dec
loopne
popf
jo
outsl
cli
adc
mov
movsl
xor
mov
movsl
adc
sbb
pop
jo
sub
pop
lock
pop
mov
or
and
aad
fists
cmp
mov
jge
mov
mov
scas
cmpsb
fwait
and
mov
mov
push
dec
cltd
cmp
mov
cld
fildl
mov
dec
sub
pop
push
stc
addr16
aas
cld
in
sbb
jmp
arpl
rcrl
loope
inc
shl
mov
jecxz
gs
lret
mov
repnz
jnp
xchg
add
cmp
xchg
add
ret
iret
adc
sbbb
pop
jecxz
jmp
sub
rcrb
mov
ss
add
stos
icebp
mov
stc
mov
lahf
xor
insb
sahf
push
fsts
iret
add
ljmp
dec
movsb
xchg
fs
inc
pop
xchg
outsl
sub
div
in
add
push
lea
inc
sbbl
cmp
mov
cmp
stc
out
cmpsl
inc
cmp
ljmp
icebp
repnz
xchg
jle
mov
dec
mov
push
xrelease
sub
fidivs
dec
add
xchg
mov
cmc
xor
mov
xchg
into
mov
pop
andb
das
fistps
mov
dec
adc
lds
rol
lods
lahf
jo
ror
subb
push
repnz
in
pop
push
aad
leave
xchg
jmp
jle
int
cld
dec
push
xchg
dec
xchg
cmp
inc
out
rorb
push
pop
jno
aad
enter
jle
jo
mov
pop
lods
aaa
sbb
in
in
aad
test
fmulp
pop
fdivrp
mov
xorb
adc
mov
call
xor
rcl
outsl
xchg
icebp
enter
pop
push
inc
mov
jo
rol
fisubl
daa
xchg
js
mov
mov
mov
int
xor
jae
push
adc
mov
mov
jl
jae
add
aas
pop
xlat
icebp
in
adc
rcl
cmp
mov
out
pop
mov
cmpsl
inc
imul
in
xor
enter
clc
fistps
push
inc
imull
mov
sbb
mov
xor
mov
and
ret
jae
pusha
mov
fprem
adc
jle
and
mov
fsubrl
clc
out
int
clc
push
jp
pushw
nop
jbe
int
xchg
pop
iret
je
imul
push
jge,pn
jns
adc
fbld
nop
call
rorb
sarb
adc
lods
mov
ljmp
ss
enter
or
sbb
lock
xlat
xchg
hlt
mov
inc
repz
adc
mov
lds
sbb
cmp
jp
rcrb
pop
pop
das
repz
ljmp
mov
test
jmp
movsl
popa
mov
jo
lea
icebp
xor
roll
jecxz
push
and
fnstcw
test
daa
enter
xor
adc
lret
mov
jp
cmp
pop
scas
into
fstpt
mov
xor
loopne
jl
sub
xor
add
aas
xor
cwtl
cmc
mov
in
out
add
cwtl
aam
xchg
jge
mov
mov
push
sub
adc
repz
call
cltd
push
or
jecxz
stos
sub
aad
push
rcrl
mov
jno
sbb
add
stos
mov
out
mov
scas
sbbb
sub
das
xor
clc
inc
jmp
lds
cmp
inc
fsubrl
mov
sbb
push
xor
xchg
inc
and
pop
daa
divl
in
mov
ret
cld
and
adc
out
xorb
adc
dec
cmc
jl
jae
inc
sahf
sub
push
push
inc
fwait
test
push
and
incb
cmpsb
pushf
push
xor
or
mulb
or
dec
lcall
outsl
and
dec
stos
push
pusha
data16
pop
push
insb
clc
cmpl
mov
xchg
mov
lret
mov
cmp
cs
cmpsl
inc
or
cmp
adcb
arpl
popa
jb
xor
ret
adc
fsub
popa
ja
mov
notl
je
aaa
jle
xlat
imul
push
test
xor
test
mov
outsl
inc
fwait
mov
addr16
cmc
push
dec
daa
rep
pop
mov
push
jo
stc
out
sub
test
aad
int
nop
mov
andl
mov
movl
cmp
cs
mov
jecxz
into
out
push
sbb
out
fsubrs
enter
sahf
hlt
insb
pop
jne
mov
adc
push
lods
inc
xor
ja
mov
aam
lret
addr16
dec
sub
int
popf
push
and
jl
xor
lea
loopne
inc
enter
xchg
adc
jp
pop
mov
dec
scas
into
sub
ret
pusha
cmp
pop
mov
jp
call
orl
cli
gs
cltd
insl
inc
js
out
int3
sub
inc
sbb
sbb
leave
lods
cmpsb
mov
lahf
fidivrs
jge
scas
int3
xlat
out
or
fsubs
adc
sbb
xor
mov
imul
insl
fsubl
or
lock
jmp
imul
or
aas
shr
mov
cltd
bound
out
gs
cmp
outsb
repz
ret
push
fisttps
cmpsb
jno
inc
fildl
roll
cs
lock
adc
pusha
addb
leave
push
bound
lds
or
cwtl
mov
mov
into
push
mov
jge
out
adc
push
push
int
arpl
sbb
test
sub
mov
mov
push
jg
cld
fiadds
push
add
repz
xor
mov
out
lret
xor
outsb
out
int
jmp
fistps
sub
sbb
sbb
xchg
stos
mov
xor
mov
push
adc
mov
insb
jg
cmpsl
pop
jg
daa
in
jmp
mov
add
fdivrl
cmpb
and
and
mov
js
adc
into
fwait
mov
dec
jge
inc
es
sub
cmp
push
or
in
dec
xchg
test
push
out
dec
fildl
cltd
dec
test
xor
xchg
pusha
push
in
xor
loope
cmc
push
fdivl
inc
lods
scas
insb
xor
jecxz
addr16
xchg
xchg
mov
insb
push
cltd
dec
cmp
repnz
xlat
insl
lods
nop
adc
repz
inc
outsl
jle
mov
popf
or
jbe
scas
fadd
jge
es
out
jno
sbb
sub
xor
pop
adc
push
jnp
cmp
fimull
or
mov
add
fstpt
jnp
iret
sbb
jne
int
fs
out
lret
fstp
fidivs
stos
int
clc
mov
std
ret
filds
add
jg
fdivl
sbb
rcll
cmp
xor
test
lea
sti
jge
push
sahf
push
jecxz
mov
jmp
xchg
mov
scas
and
out
out
pop
lcall
ds
rcr
add
aam
mov
into
mov
or
fsubrl
mov
dec
cmp
sub
inc
shlb
cmp
daa
out
mulps
xchg
push
jecxz
pusha
mov
jl
jnp
adc
les
cs
lret
jo
lods
das
xor
mov
jg
xchg
loop
aaa
addr16
push
jl
scas
push
sahf
stos
insl
imul
push
dec
in
lods
push
adc
in
xor
shr
popa
repnz
daa
std
int
pop
dec
add
aaa
pop
test
xchg
pop
xchg
inc
mov
cmp
cwtl
and
shrl
adc
fdivr
test
fmull
jle
cmp
sbb
inc
ret
dec
out
jge
les
pop
enter
call
sub
int3
add
mov
pop
cmpsb
mull
add
popa
add
jecxz
inc
in
sbb
add
mov
call
imul
add
ljmp
pop
jns
sbb
sub
sbb
loopne
xchg
or
sbb
clc
orl
xor
sub
cmpsl
xor
loope
jae
mov
ja
cmpsl
cmp
xchg
ljmp
cmp
mov
cmc
or
inc
arpl
inc
inc
jnp
dec
add
fbstp
je
stos
std
mov
shll
xchg
add
jp
and
in
out
and
pop
stos
cmp
jo
cmp
out
xchg
xor
jns
addr16
jmpw
push
fs
inc
dec
sub
test
add
or
xchg
pushf
xorl
pop
cli
sub
stc
pusha
dec
scas
imul
in
ja
inc
pop
rclb
dec
dec
sbb
je
add
std
out
mov
dec
in
mov
pop
xorb
je
add
jge
sub
lea
adc
xchg
xchg
jb
cs
push
mov
jge
mov
loop
cwtl
and
into
jge
jl
xor
stos
int
stc
inc
notb
push
cmpsb
in
scas
or
mov
xchg
out
movsl
sarl
sbb
xor
jnp
scas
xorl
fcoms
imul
pop
inc
dec
rcrl
test
xchg
cmpsl
jecxz
sub
and
push
nop
inc
arpl
imul
mov
lods
pop
mov
inc
xchg
arpl
xor
inc
test
mov
mov
js
xor
xor
out
ret
dec
negl
mov
jo
and
xchg
push
rcrb
or
js
dec
stos
inc
add
icebp
ret
cmpsl
sub
outsb
or
pop
ret
xchg
sbb
lcall
movsb
test
cmp
mov
out
insl
pop
pop
xor
shl
aad
inc
lret
pop
rorb
cmpsb
repnz
arpl
dec
outsl
clc
push
xchg
mov
add
fwait
mov
adc
pop
popa
cli
dec
sub
mov
aas
xchg
outsl
add
inc
xor
jb
cmpsl
jne
outsl
stos
in
sub
add
ds
jg
sahf
xchg
repnz
sti
arpl
mov
out
fdivr
adc
add
and
ret
lods
and
jno
xchg
xor
in
cltd
lahf
xchg
xor
in
pop
lea
js,pn
pop
mov
or
fcoms
cmp
sbbl
repz
cmpsb
sbb
sbb
and
in
repnz
push
cmc
cmp
sti
fs
inc
ds
jno
test
sbb
jp
mov
call
aad
mov
addr16
xchg
addps
ds
mov
lret
repnz
int
jno
loop
sub
sub
jne
rorl
arpl
lret
mov
nop
xchg
pusha
dec
cmp
data16
xchg
rcrb
inc
fs
movsl
imul
fcmovnb
inc
mov
and
insb
xchg
daa
loop
iret
in
add
orl
xchg
or
inc
inc
push
lahf
and
imul
mov
xor
add
je
xor
fwait
push
or
sti
hlt
in
jmp
jne
clc
and
cmp
in
or
shlb
stc
cmp
xchg
add
inc
cmp
neg
cmc
leave
mov
movsb
or
daa
push
inc
and
sbb
xor
cltd
scas
sbb
push
push
stos
test
cli
inc
add
adc
fidivs
inc
les
insl
push
clc
lret
scas
xchg
cmp
push
out
aam
mov
outsb
adc
adc
jbe
cmp
les
and
xor
imul
cmp
cmp
ret
fiadds
outsl
ret
bound
cld
push
adc
out
out
adc
push
aad
dec
out
stos
aas
pop
and
mov
scas
jle
in
mov
icebp
lcall
ds
add
sbb
cmp
je
in
mov
add
addr16
adc
repnz
dec
fwait
repz
jg
mov
clc
jp
fcmovu
mov
jp
fiadds
xor
inc
dec
pop
sub
push
cmpsl
iret
aam
fs
push
scas
or
sahf
outsl
test
js
subl
rcll
sbb
xor
xor
in
lods
out
in
adc
and
inc
push
rclb
xchg
ds
sarb
cmp
dec
and
or
cltd
stc
gs
sbb
fstl
jle
sti
addr16
mov
sbb
push
inc
mov
cmp
fiadds
lods
mov
mov
push
cwtl
mov
push
jne
shlb
push
mov
pop
pop
daa
pop
push
rcr
xchg
xchg
mov
dec
and
sbb
gs
mov
mov
faddl
mov
lea
out
cmpsb
inc
push
push
jno
out
mov
sahf
nop
sbb
dec
loop
and
aam
imul
js
das
jnp
aaa
pop
enter
fists
nop
loop
push
arpl
scas
inc
out
mov
mov
or
sub
ljmp
sub
sbb
push
xlat
inc
ja
lods
xchg
movb
adc
out
cwtl
mov
aas
mov
push
pop
mov
inc
aas
cltd
or
xor
in
pushf
aam
leave
lcall
loope
gs
daa
add
and
jo
jg
inc
repz
mov
std
jbe
xchg
pop
dec
push
ja
test
sbb
cltd
test
mov
jae
adc
add
pop
aaa
or
xchg
iret
sub
fbld
mov
imul
insl
aaa
mov
xchg
add
cli
push
in
jne
mov
ficompl
xor
mov
adc
test
clc
outsl
addr16
aad
loopne
aas
vhaddpd
cmp
stos
inc
pop
add
leave
add
js
pop
pop
test
outsb
mov
imul
mov
inc
inc
mov
or
out
jmp
xor
pop
lcall
sub
xor
sub
cmp
hlt
loop
pop
lea
repz
ficompl
je
mov
push
lahf
mov
xchg
cwtl
jmp
jo
daa
mov
lds
or
mov
adc
hlt
xchg
cmp
in
loope
dec
mov
ret
aas
sub
lock
fdivrs
fdivr
shlb
lret
insb
mov
out
push
out
nop
mov
cwtl
je
out
xchg
dec
or
in
dec
std
ret
clc
icebp
and
js
xor
rorl
repz
insb
xchg
shl
inc
jne
nop
sub
outsl
out
and
pop
sbb
mov
push
jecxz
sbb
fisttpl
mov
lds
pushf
push
jl
ficompl
fadds
enter
or
mov
push
sti
inc
leave
dec
rol
jecxz
fucom
inc
inc
push
fsubr
test
leave
loope
jmp
sti
inc
roll
movsb
inc
loopne
rclb
adc
sbb
and
cmp
jl
aaa
repz
inc
les
out
sbb
xor
cmp
ret
test
mov
xchg
mov
and
pop
cwtl
mov
jbe
and
fldl
push
push
add
mov
sahf
cmp
inc
fs
pop
shr
mov
das
rcrb
fidivs
ret
xchg
test
ljmp
mov
aad
mov
in
cltd
out
inc
pop
mov
and
and
mov
mov
adc
lds
or
stos
dec
xchg
aas
sbb
mov
and
stos
repnz
adc
cmpb
lahf
inc
xor
pop
fcoml
mov
inc
lock
loopne
adc
and
push
testl
nop
aaa
addb
pop
mov
inc
lock
loopne
adc
and
push
testl
nop
aaa
enter
mov
inc
lock
loopne
enter
xor
inc
push
xlat
pusha
daa
nop
aaa
addb
pop
mov
inc
jo
loopne
out
mov
sub
fdivrs
cmp
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
and
add
insb
fcoms
or
cmp
dec
loope
adc
and
jno
popa
fcoms
or
js
dec
loope
adc
and
jno
popa
fcoms
js
sbb
cmp
pop
gs
int3
xor
dec
je
cs
cmp
xor
insl
mov
outsl
dec
mov
std
mov
fsubl
adc
les
pop
dec
or
xchg
mov
out
mov
push
jae
iret
ds
das
call
and
shrb
dec
jb
loope
adc
mov
cmp
mov
mov
or
push
negb
cmpl
push
inc
xor
fsubl
call
ljmp
hlt
sub
andl
stc
inc
or
lret
add
xlat
les
inc
or
sbb
pop
jecxz
shrb
and
jno
popa
fcoms
or
js
dec
loope
je
bound
into
fidivs
xchg
mov
loope
in
ret
jbe
add
xchg
cmp
push
mov
xor
or
xor
and
jecxz
out
int3
pop
mov
pop
cwtl
cmp
add
ja
inc
in
adc
inc
clc
jno
popa
fcoms
or
js
dec
loope
adc
and
jno
popa
fcoms
or
js
dec
loope
adc
pop
dec
subl
push
cld
mov
pop
clc
inc
lock
mov
mov
jne
lahf
lock
adc
out
insb
sbb
rclb
xchg
xchg
xchg
and
cmp
mov
sub
sbb
mov
mov
mov
inc
sub
lds
add
lret
cmp
push
or
pop
inc
mov
adc
clc
xchg
xor
add
lcall
and
repnz
aad
xor
push
andb
imul
out
enter
jae
fadds
scas
adc
sub
jnp
cmp
sub
sbb
mov
test
movsb
jecxz
pop
outsb
pop
in
outsl
cmp
subl
xor
mov
loopne
jecxz
mov
mov
and
lcall
and
lcall
or
test
add
pop
xor
pop
jno
fisttpll
roll
dec
cmp
in
lea
adc
sarl
imul
lods
or
xor
inc
repz
push
and
or
and
adc
fwait
nop
adc
cs
inc
cmp
popa
pushf
or
outsl
cmp
sbb
push
pusha
sarl
fistl
inc
push
arpl
inc
fs
test
mov
in
out
rcrb
add
mov
and
jo
inc
and
push
push
das
mov
loope
fs
rorl
ret
lock
ret
sub
jb
cltd
fcomip
ret
iret
cmp
in
cmp
icebp
mov
test
sub
scas
pushf
push
leave
cmp
bound
das
stos
xlat
aam
repz
mov
lds
jo
mov
cmp
sti
movsb
push
xor
hlt
enter
pop
sub
and
adc
test
cmp
lea
inc
ds
inc
xchg
les
stos
fldt
xor
jle
mov
gs
cmp
cmp
pop
pop
in
test
mov
push
mov
inc
push
cld
push
in
xorb
and
mov
outsl
icebp
dec
lret
dec
testb
jg
mov
xchg
imul
test
mov
in
aad
sbb
xlat
xor
ret
pushf
pop
mov
clc
fsubl
jmp
push
nop
test
xorl
xchg
mov
fmuls
add
mov
adc
xor
aas
adc
xor
xchg
push
sbb
push
jae
in
pop
cld
popf
out
popa
cmp
stos
das
cmp
repz
add
dec
cmp
fidivl
jmp
mov
mov
jl
inc
std
push
mov
mov
outsb
addr16
and
out
inc
push
mov
ss
outsl
jmp
test
xchg
push
pop
inc
mov
dec
dec
jle
das
push
mov
and
out
xchg
adc
imul
mov
daa
dec
in
mov
es
or
cmp
ds
in
cmp
add
arpl
ljmp
arpl
add
das
scas
jne
mov
imul
inc
mov
jb
inc
adc
fucomi
addr16
sub
and
test
mov
mov
std
jmp
mov
mov
xchg
mov
inc
and
sub
or
js
test
push
lods
cmp
test
mov
out
sub
fimuls
inc
rcrl
stc
shll
dec
lahf
inc
xchg
mov
pushf
dec
pop
lds
push
insl
cwtl
jecxz
jne
inc
and
add
inc
rorb
mov
sub
fcomp
test
adcb
scas
in
mov
out
iret
mov
cmpsb
mov
dec
movsb
mov
jmp
or
sbb
add
fsubl
adc
into
gs
jbe
loop
pop
push
cmpsl
mov
lock
ret
mov
sarl
lret
cwtl
gs
popa
notb
push
outsl
inc
mov
iret
stos
pop
sbb
int3
dec
inc
cmp
sahf
inc
xchg
add
pop
andb
fwait
in
enter
add
cmp
clc
dec
add
sahf
stos
imul
add
pop
test
ds
add
pop
inc
mov
test
dec
scas
mov
cli
into
insb
pop
sti
data16
testb
cmp
add
ss
popf
inc
ror
push
mov
imul
into
insb
aad
pop
sub
and
dec
je
aas
push
icebp
movsb
mov
lods
je
nop
push
in
xchg
mov
add
mov
pop
into
ret
push
push
xchg
lret
jecxz
inc
sbbb
dec
pop
fwait
xchg
or
inc
xchg
test
pushf
add
testl
into
out
fsubl
pop
dec
lock
sbb
jl
mov
mov
push
shl
cltd
lods
sub
mov
lods
lods
in
jg
scas
orb
fs
dec
mov
push
mov
in
dec
jo
test
mov
jge
dec
mov
add
mov
aam
inc
hlt
add
pop
ficoms
data16
sub
mov
pop
push
push
push
pop
jbe
push
ljmp
insl
lea
test
or
adc
aaa
add
les
and
inc
mov
and
lock
int3
mov
mov
xor
out
insl
fimull
imul
xor
adc
fistps
mov
inc
test
fmull
inc
pop
and
sub
sti
mov
push
das
add
sbb
js
xor
repz
inc
mov
mov
roll
pop
int3
lret
push
xor
fcoms
sbb
push
mov
aaa
and
in
test
dec
push
mov
inc
out
fimull
jae
mov
test
sbb
jns
cmp
clc
push
aas
pop
xlat
into
mov
insl
out
int3
testb
cwtl
jae
jecxz
pop
movsb
cmp
xchg
lret
xor
cmp
lahf
fdivrl
out
mov
lcall
lods
ret
xor
testb
out
jmp
sub
js
fdivp
sahf
sbb
test
movsl
sbb
repnz
loopne
add
hlt
cmpsb
imul
movsb
jmp
sarl
popa
scas
lods
pushf
pop
dec
mov
push
out
mov
sbb
inc
inc
repz
mov
or
jne
or
add
rcrb
jp
out
repnz
jns
test
or
js
arpl
ja
add
fldl
int
jne
adc
mov
les
lea
xlat
jo
dec
out
adc
aaa
addl
mov
or
cwtl
je
push
shll
push
loop
bound
xor
sbb
mov
leave
lods
addb
scas
mov
pop
frstor
xor
xchg
and
outsb
xchg
sub
mov
add
mov
mov
adc
and
fildl
jno
adc
dec
repnz
jle,pt
ljmp
in
sub
fists
fstpl
aam
mov
das
sub
sbb
jl
rcrl
pop
add
shlb
xor
xchg
add
lret
mov
xor
push
in
xchg
fdivrs
cmp
lea
movsl
jns
incb
addr16
rcll
or
mov
ds
out
push
sub
popa
inc
movsl
push
sbb
jg
push
repz
ljmp
outsb
inc
mov
add
jl
popa
xchg
enter
jns
fnstcw
inc
xor
stos
in
popf
aam
insb
js
imul
iret
xchg
pop
adc
mov
lcall
daa
cmpsl
push
bswap
scas
mov
movl
add
int3
jge
mov
lds
pop
adc
cs
lods
loopne
bound
fnstenv
fwait
stos
cmp
push
mov
or
in
insb
addr16
inc
xor
pop
fildll
popf
jl
pop
movsl
mov
test
adc
xchg
in
mov
sub
lock
hlt
jl
mov
dec
add
xchg
xchg
jo
mov
out
jo
mov
xchg
adc
inc
addr16
mov
test
or
cmc
fcmovnb
lret
jae
ror
inc
lret
add
das
xor
leave
mov
adc
push
insb
mov
sub
hlt
aad
xchg
mov
cwtl
xlat
add
lahf
insl
pusha
jecxz
dec
dec
dec
flds
in
sar
mov
add
mov
or
sti
in
cmp
int
subb
imul
enter
adc
sub
js
pop
test
or
lahf
loope
jb
jmp
in
loopne
xorl
out
xor
or
xor
aad
push
insw
imul
pop
fcomp
mov
pop
push
cltd
dec
xor
cs
push
int
repnz
ljmp
pop
adc
adc
push
hlt
cltd
push
mov
mov
cmpl
ret
jmp
mov
xchg
mov
movl
popl
jae
xchg
mov
mov
sbb
test
or
addr16
rcrl
popa
fbld
mov
addb
icebp
repnz
and
jnp
xchg
lea
pusha
fsubrs
jle
adc
loop
ja
dec
inc
mov
xchg
jecxz
xor
mov
xor
xchg
pop
mov
push
mov
mov
xor
rorl
mov
add
addb
xor
fnstcw
jbe
pop
jl
es
stc
add
lods
pushf
fidivl
aad
dec
insl
notb
pop
fs
nop
sbb
cmpsl
rorb
sub
pop
dec
enter
stos
popa
dec
mov
divl
dec
dec
ds
pop
dec
fildll
xor
mov
add
inc
sub
xor
cld
add
push
shl
test
or
aas
push
enter
fwait
cltd
jg
repz
jno
and
cwtl
push
and
lahf
inc
cld
movsb
adc
sub
and
jecxz
in
mov
aad
leave
mov
push
js
mov
popf
ffreep
xor
arpl
adc
lds
xor
mov
mov
xor
push
in
stc
outsb
sub
and
pop
inc
mov
out
call
rolb
xor
ljmp
cmc
xchg
stos
in
dec
xor
mov
jl
push
sbb
cld
fs
divb
jg
and
es
imul
js
leave
xor
push
xchg
mov
repnz
mov
mov
dec
aam
add
daa
out
inc
inc
dec
xor
mov
xchg
adc
gs
stos
sbb
int3
insb
xchg
jo
in
push
jmp
pop
dec
add
jecxz
clc
xlat
aam
stos
scas
adc
ret
dec
mov
add
adc
and
inc
mov
sub
jp
sub
mov
jo,pt
push
rol
xor
sub
inc
fistps
stos
and
cmpb
repnz
and
inc
cmpsb
mov
in
out
aam
xchg
inc
insl
sub
rclb
or
push
lcall
subl
xor
sub
dec
mov
or
push
test
dec
mov
divb
test
cmp
aas
test
cli
rcr
mov
je
xchg
pop
add
adc
int3
sub
mov
push
mov
jp
inc
ds
inc
in
sbb
ljmp
outsb
scas
cmc
sub
add
imul
mov
xchg
and
cld
fistpl
mov
mov
test
push
fwait
jo
or
std
inc
sbb
jnp
notl
int3
daa
popa
add
pop
scas
push
push
xor
mov
je
push
or
mov
mov
or
and
shlb
dec
pop
xchg
notl
leave
out
adc
add
pop
jl
sub
fld
mov
out
xor
mov
adc
nop
xchg
daa
aas
or
mov
inc
xchg
cmc
stos
ret
mov
test
lods
mov
in
cmpsb
mov
fisubl
push
gs
mov
fdivrs
outsl
lahf
fisubrl
das
lret
cmp
in
test
jmp
xchg
dec
jb
jmp
or
cs
push
add
and
xchg
out
jp
pop
push
dec
ja
addl
cmpsb
fwait
or
jp
data16
cmpl
lods
mov
fcoml
scas
mov
aas
sahf
sbb
mov
dec
ret
faddl
loopne
sub
push
hlt
add
xor
sbb
sbb
stos
push
cmp
loope
mov
sub
jmp
mov
dec
pushf
and
jns
and
shrb
push
in
scas
mov
loopne
mov
mov
ret
stos
test
dec
dec
mov
les
insl
mov
adc
push
sbb
inc
sub
mov
xchg
rcll
push
sub
stos
call
mov
lret
sbb
sbb
out
jae
in
aam
loope
outsb
and
test
mov
jge
imul
adc
dec
fldt
imul
or
inc
notl
mov
jo,pt
xchg
call
rorl
add
sub
cs
fdecstp
sub
sarb
cmc
jp
lahf
in
inc
lds
repz
cmpsl
nop
scas
into
mov
stc
sbb
pop
ret
adc
add
dec
loope
xorb
push
pop
xchg
adc
popa
lahf
out
mov
pop
ss
lret
inc
pusha
addb
mov
xchg
stos
out
inc
loop
adc
lret
xor
pop
pop
in
ret
push
mov
fstl
andb
adc
lock
mov
test
mov
mov
inc
int
sbb
push
jns
hlt
cmp
dec
aaa
push
pop
lock
stos
aaa
lock
or
sub
fsubs
decl
mov
call
push
xchg
jle
and
sbb
inc
push
sbb
cmpb
fidivrl
mov
out
clc
inc
dec
cwtl
cld
test
cld
push
mull
jbe
ljmp
movsl
in
rcrl
mov
sub
aas
inc
mov
dec
mov
arpl
cmp
jns
mov
ret
bound
nop
mov
gs
xchg
adc
xchg
cwtl
or
sub
cltd
pop
or
ret
sub
jle
dec
loopne
cltd
push
jo
sahf
xchg
xchg
lea
fcomps
idivl
shlb
pop
cmpsb
verw
clc
mov
inc
aam
cmp
jo
shlb
arpl
mov
arpl
inc
or
jl
loopne
xchg
arpl
ljmp
icebp
das
jns
ljmp
dec
aam
fstpl
inc
in
jl
add
mov
outsb
pusha
shlb
and
scas
popl
add
push
push
mov
test
xor
lds
cmpsl
fisubs
addr16
adc
stos
shlb
sbb
testl
sub
cmpsl
lret
sbb
inc
or
stc
xlat
cld
jle
aam
test
or
pop
mov
sar
rorb
inc
xlat
cmpsl
pop
sub
adcl
push
pushf
stos
stc
shl
lahf
and
insb
push
mov
xor
mov
lahf
push
jp
loope
stos
xchg
scas
push
movsl
enter
in
fs
lret
sbb
imul
icebp
mov
pop
arpl
jg
or
cmp
sbb
in
data16
or
nop
xor
adc
movb
js
adc
daa
les
or
rol
loope
pop
xor
push
dec
testl
inc
in
leave
pop
or
insl
mov
or
leave
adc
mov
paddusw
mov
sbb
jae
pop
xlat
xor
push
sub
sub
outsl
std
rolb
mov
lret
jg
or
movsb
inc
or
repz
fcomi
pop
outsl
enter
punpckhwd
push
lods
popa
mov
jmp
and
push
icebp
je
xchg
xchg
daa
jmp
push
inc
add
push
xor
jb
stos
lcall
pop
rol
jnp
inc
jnp
ljmp
lcall
lahf
popa
fstpt
xchg
add
cmp
pop
push
mov
fs
dec
adc
dec
inc
movsl
ss
mov
push
loop
lods
loope
hlt
lock
xchg
outsl
push
mov
lcall
clc
out
push
sti
sbb
pop
aad
push
cmpsb
cmc
pop
movsb
xchg
xchg
mov
dec
dec
xchg
int3
jns
ds
popf
cmp
jl
sub
push
sub
cmpsb
and
push
in
add
cmp
cmp
push
mov
sbb
inc
inc
popf
mov
jo
popf
fdivrl
sbb
push
shl
fstps
aam
nop
insl
movsl
lods
jl
into
xchg
mov
mov
adc
subb
js
aas
mov
lods
jne
out
mov
or
aaa
dec
sti
jmp
adc
push
dec
fs
cmpsb
adc
out
xchg
and
in
addl
dec
stos
dec
adc
icebp
inc
repz
in
cmp
mov
xchg
pop
pop
inc
push
sbb
pop
aad
cmc
push
cmp
js
mov
sahf
outsb
je
loope
add
test
mov
mov
cltd
fdivl
sbb
outsb
ja
add
xchg
imul
mov
or
dec
in
lret
pop
and
push
cmp
mov
ds
out
jecxz
and
or
hlt
ss
xorb
lret
pop
jne
repz
push
subb
stos
sbb
fs
dec
jle
inc
xor
mov
cmp
mov
lds
outsl
and
mov
jmp
mov
subl
ja
cmp
popf
jp
dec
xor
arpl
jae
lds
inc
imul
and
fcoms
arpl
mov
lods
sbb
fiaddl
sub
ret
outsb
js
xlat
dec
stc
sub
sti
or
jne
and
push
js
mov
test
adc
pop
sbb
push
xor
push
pop
xchg
add
clc
add
test
xorb
inc
jge
popf
or
mov
out
in
test
xor
mov
sbb
add
sti
in
add
mov
lods
mov
xchg
mov
fwait
mov
add
in
je
lret
int3
imul
pop
jmp
adc
add
mov
fisubrs
push
shlb
stos
and
clc
fadd
out
enter
pop
jbe
pop
or
adc
shrl
sub
shrb
cltd
jae
dec
jb
iret
pusha
xchg
loopne
out
mov
jecxz
int3
fdivl
ffree
fbstp
out
aad
inc
imul
pop
ror
cmc
jae
add
rorb
pop
lods
nop
sbb
imul
xchg
and
push
push
idivl
push
or
sbb
adc
dec
or
push
lcall
std
mov
aad
addr16
shll
mov
aaa
mov
push
dec
into
fsubs
lcall
into
cmp
enter
mov
in
adc
or
xlat
fiadds
test
and
js
and
xor
mov
ret
mov
jmp
sbbl
sub
push
and
out
xor
sub
data16
adc
mov
sub
stos
cmc
idivl
cmp
lock
jle
adc
pop
dec
cltd
mov
mov
push
or
in
xor
inc
outsl
cs
js
cwtl
popf
loopne
out
mov
jmp
ret
in
into
mov
andl
and
cmp
mov
incl
repnz
in
jmp
popa
mov
pop
mov
arpl
mov
lcall
repz
jns
xchg
xlat
stc
push
iret
xchg
mov
out
sahf
enter
jmp
cmpsl
mov
add
inc
jecxz
xor
xor
mov
xlat
push
dec
adc
fsub
pushf
dec
fsts
mov
dec
sbb
dec
add
lods
gs
aas
sbb
lret
cmp
push
es
cltd
lret
cmp
xlat
test
cmp
arpl
sbb
cltd
std
sbb
arpl
imul
das
jne
cmp
and
sbb
add
dec
sahf
cmp
test
and
mov
loope
in
pop
test
scas
in
add
setae
mov
aam
jns
shl
cmp
push
adc
gs
lds
inc
into
inc
js
cmc
in
lods
cmp
ljmp
xor
cmpsl
mov
jl
dec
mov
and
cltd
sbb
push
mov
cwtl
push
call
popa
fcoms
or
js
dec
loope
adc
and
jno
popa
fcoms
or
js
dec
loope
adc
cltd
push
call
popa
fcoms
or
js
dec
loope
adc
and
dec
loope
outsb
xlat
jle
sbb
mov
xchg
mov
cmpsl
and
pop
lahf
and
xchg
jns
jo
mov
sbb
push
outsl
mov
pop
gs
jge
dec
pop
lahf
sub
iret
sbb
aas
jecxz
fstpl
lods
sbb
popf
pop
mov
std
cmpsb
lret
xchg
fwait
xchg
xlat
in
in
das
xchg
sbb
jbe
push
and
or
cmp
pop
iret
or
sub
cmpsb
daa
js
or
xor
cmc
jb
or
jbe
clc
hlt
enter
popa
scas
sub
jge
ret
xor
shll
ss
cvttps2pi
or
adc
dec
mov
dec
aam
cld
and
aas
xor
loopne
lret
jle
ret
icebp
add
int3
sub
ret
mov
scas
rcr
and
cwtl
mov
dec
call
jo
jmp
das
mov
mov
shrl
cmpsb
pop
insl
mov
push
jge
mov
clc
adc
mov
in
adc
lock
sub
lahf
enter
pop
mov
xor
or
das
outsl
daa
adc
ja
lea
pop
pop
scas
or
or
xor
inc
in
dec
sahf
push
mov
mov
jp
or
jge
and
xor
cmc
or
xchg
lock
out
pop
mov
mov
mov
sbb
clc
sub
sub
scas
dec
mov
push
iret
sbb
aas
int
fstpl
lods
outsl
mov
pop
insl
scas
jge
dec
pop
lahf
sub
iret
sbb
aas
int
fstpl
lods
outsl
mov
pop
insl
scas
mov
popf
popa
fs
popa
insl
add
scas
mov
ret
ljmp
mov
pop
mov
popf
jp
hlt
jg
push
mov
mov
lds
xchg
cli
pop
adc
mov
and
ret
addr16
sbb
int
and
xor
decl
test
hlt
jb
lahf
int3
insl
mov
jmp
mov
xor
stc
xor
pop
arpl
movsl
pop
xchg
push
aam
jno
out
sub
movd
arpl
jecxz
and
lea
pop
mov
in
shlb
lcall
outsl
jp
lds
stos
in
cmp
testl
inc
push
mov
mov
jne
push
mov
jecxz
jecxz
das
popf
sub
aad
fidivrs
mov
push
neg
mov
cmpb
cmp
scas
sub
mov
repnz
xorb
lods
cltd
insb
or
cwtl
mov
jle
out
iret
sbb
mov
incl
cwtl
inc
pop
in
shll
scas
pop
jecxz
lods
adc
das
xor
bound
in
sbbl
mov
and
jns
in
rorl
xlat
xlat
xor
fwait
and
push
stc
ret
cmpl
push
or
fldenv
int
pop
out
xchg
sub
dec
pop
cmp
xchg
pop
loop
aad
cli
rol
push
imul
fisttpll
pop
out
fistpl
repnz
mov
outsb
jbe
cwtl
mov
jle
dec
dec
pop
movsl
xor
mov
lods
movsl
and
aam
inc
in
cld
push
xlat
inc
mov
div
rcr
pusha
ret
jle
or
jge
pusha
das
add
scas
lock
xor
mov
test
leave
cmp
cmp
sub
xor
sbb
outsb
cmp
adc
jg
mov
cmp
lret
test
popf
mov
xor
pushf
inc
or
lahf
cltd
mov
push
dec
sbb
aas
xor
mov
pop
adc
xor
add
add
ds
jno
jo
dec
aam
cmp
mov
addr16
stos
sbb
rcrb
ds
sbb
xchg
xor
sbb
cmp
icebp
jmp
xchg
push
mov
cwtl
popf
aad
aad
imul
pop
pop
cld
subl
js
movsb
fistpll
insb
mov
lock
cmpsl
mov
add
lods
into
jmp
mov
pop
cmp
dec
lret
arpl
in
clc
orl
pop
ds
cmp
and
je
aad
fimull
and
scas
scas
pop
aam
jns
pop
leave
cmp
shlb
rcrl
insl
stos
jo
push
xchg
push
popf
int
enter
fidivs
jl
jno
inc
ret
and
ret
pop
xorl
cmp
out
in
dec
sbb
icebp
fidivrl
dec
pop
int
lahf
mov
clc
jge
aas
repnz
icebp
fucom
in
sbb
popf
mov
iret
xor
in
inc
sbb
mov
inc
int3
or
xchg
xor
mov
scas
adc
repnz
adc
lret
sub
fnsave
cmp
mov
cmc
fmuls
lret
and
and
icebp
jp
stos
bound
adc
into
sub
cmpb
push
push
cmp
sti
enter
xchg
push
inc
addr16
mov
sbb
adc
hlt
or
imul
cmpsl
mov
sarl
ss
push
in
mov
inc
into
aas
jecxz
jmp
cmpsl
into
cld
add
inc
lea
fmul
add
inc
ljmp
adc
pusha
mov
add
out
into
adc
data16
int3
jae
dec
push
mov
movq
lahf
push
cmp
sbb
mov
add
mov
sbb
inc
cmp
mov
sahf
xchg
out
sbb
xorb
jno
push
mov
scas
inc
add
out
xchg
jg
mov
test
scas
fbld
pusha
int3
mov
repz
mov
xchg
mov
ljmp
jecxz
fsts
icebp
jg
adc
push
inc
mov
jle
daa
push
sahf
mov
shl
add
fcoms
mov
mov
sub
stc
dec
adcl
shll
pushf
push
daa
pushf
mov
out
push
aam
movsl
pop
and
repnz
xchg
sub
xorl
sub
push
ljmp
push
repz
out
xor
imul
jge
andb
in
jmp
and
aam
xor
ja
fs
nop
xchg
loopne
xorl
sub
dec
push
push
sbb
cmp
stc
iret
insb
push
cmpsb
fisubs
aad
inc
fwait
and
out
or
adc
mov
mov
shl
iret
fdiv
push
xor
push
fwait
ret
xchg
adc
fnstenv
jge
mov
adc
push
ret
mov
cltd
bound
lods
test
pop
push
pop
enter
xor
lcall
and
call
div
inc
xchg
addr16
hlt
stos
movsb
mov
dec
xor
out
ret
outsb
jg
pop
frstor
popf
push
lahf
aas
mov
xor
push
jge
mov
iret
bound
cmp
enter
jecxz
ljmp
hlt
repnz
push
fwait
in
fdivs
shl
sub
xchg
push
outsb
xor
mov
or
jb
cmp
mov
sbb
cs
sub
int3
mov
in
test
pushf
test
xchg
stos
push
gs
mov
sub
jge
dec
xor
or
pop
inc
push
ret
aam
rolb
sarb
mov
jno
sbbb
xor
fwait
popa
enter
loope
jnp
aad
hlt
mov
cmp
pop
imul
cmp
pop
add
or
add
scas
sbb
xor
lock
jne
roll
jp
xor
inc
ja
inc
not
mov
dec
movb
mov
fisttpll
jl
mov
in
arpl
xchg
fsubrp
xchg
jge
sbb
push
aad
sub
sbb
pcmpeqd
orl
or
aas
push
mov
inc
cmc
or
cmpsl
ljmp
push
aaa
mov
cmp
mov
data16
cmpsl
out
test
add
js
jo
stos
sub
xor
sbb
cmpsb
sbb
nop
add
mov
or
jne
cmp
adc
pop
addb
pop
inc
inc
out
or
push
int3
adc
mov
push
lock
jb
or
test
in
rorb
xor
dec
in
xor
xchg
cmc
mov
hlt
mov
push
inc
loopne,pt
das
jno
cmp
rorl
adc
sahf
push
mov
lods
or
test
test
int
in
sbbb
movsl
pop
xchg
out
orb
gs
pop
ljmp
push
jns
loopne
ljmp
and
xchg
repnz
jg
ror
in
jno
inc
pop
xor
xor
jmp
mov
icebp
icebp
pop
jmp
enter
lret
mov
and
and
jecxz
imul
push
inc
cwtl
jnp
aas
lock
push
push
pop
mull
mov
xor
mov
mov
mov
out
loope
sti
inc
xor
les
mov
lock
push
clc
push
xor
push
aad
stos
ret
cli
jl
mov
and
data16
sar
and
nop
mov
nop
loope
sbb
pop
xchg
cld
inc
mov
fisttps
cwtl
lods
pushf
in
or
jno
adc
pop
lea
push
xchg
in
mov
push
sub
add
sub
test
mov
push
mov
outsl
lret
add
mov
enter
data16
fldcw
scas
out
sbb
sbbb
andl
mov
cmpsb
in
cmp
int3
popf
adc
push
lahf
lret
pop
insb
or
pop
jmp
push
aad
and
fs
sbbl
lods
negl
dec
ds
push
clc
sub
mov
push
xchg
pop
sbb
inc
adc
test
and
aad
stos
xlat
and
adc
int3
and
jmp
cmpsl
inc
inc
jb
dec
dec
popf
add
add
sub
inc
lods
jno
mov
aaa
cmp
outsb
bound
int
loope
and
sbb
inc
cli
mov
add
sti
cmpsl
adc
aam
cmc
sub
int
out
repnz
xor
xchg
mov
mov
mov
jb
nop
mov
dec
mov
cmp
mov
popf
aam
mov
lock
mov
std
adc
stos
je
xor
cmpsl
psubsw
push
ret
les
sbb
cmp
pop
sub
mov
in
xchg
adc
mov
mov
cmp
mov
out
jb
and
pop
aad
sbb
adc
push
test
xchg
fldenv
jmp
cmpsb
mov
xor
movsb
add
out
loop
sub
mov
push
adc
test
and
nop
leave
push
outsb
dec
popf
fwait
aam
and
lods
mov
fnstcw
or
das
mov
icebp
test
int
lds
pop
inc
movsl
in
aam
sti
stos
jns
iret
mov
xorb
ja
jle
popa
mov
lret
in
ret
pop
mov
in
mov
xor
add
inc
imul
out
mov
imul
test
add
xor
cmp
in
sub
imul
cmpsb
mov
pop
xlat
out
pop
repz
fcmovne
test
xchg
pop
int3
test
aam
sbb
xchg
outsb
lds
cmc
loop
push
adc
andl
outsl
mov
push
cmp
loope
lods
sbb
mov
popf
mov
mov
or
scas
stos
loopne
adc
mov
add
nop
into
nop
xchg
hlt
aas
pop
maskmovq
idivl
insl
dec
sub
push
movsl
fadds
dec
repz
cmp
cwtl
int3
std
pop
add
aaa
pop
lret
movsl
inc
addr16
xor
icebp
pop
ljmp
pop
test
add
or
das
aaa
adc
into
jmp
lcall
sahf
out
mov
adc
xor
sub
cmpsl
pop
cs
pop
std
and
cmp
jne
jno
sub
flds
inc
mov
sbb
inc
scas
iret
pop
hlt
into
inc
adc
sbb
daa
loopne
sbb
lret
push
mov
daa
jge
aaa
stos
cmc
stos
mov
adc
xchg
push
and
dec
adc
inc
fisttps
fwait
adc
test
push
std
in
out
xchg
test
sbb
shrb
pop
andl
sub
int3
or
add
inc
clc
cmp
mov
add
pop
push
in
ret
jp
cli
mov
mov
loop
rcl
and
adc
cmp
insb
shrb
shl
sti
mov
mov
rorl
xchg
enter
and
ljmp
lret
cvtps2pi
dec
shl
cmpsb
popf
xor
or
rol
add
aad
lret
jnp
sbb
cmp
lds
mov
je
ficoml
jecxz
push
loope
es
movsb
rclb
xchg
mov
cmc
inc
push
sar
xchg
inc
daa
push
lret
into
cmp
add
add
and
out
sub
jno
jae
dec
mov
xor
cli
dec
pop
pop
fsubrs
cli
pop
adc
leave
outsb
mov
rorl
out
stc
in
test
test
adc
pop
leave
xchg
lock
loope
add
cltd
fisubrl
add
inc
popf
gs
mov
jne
pop
cmp
cmpsb
jl
jecxz
cwtl
cmp
insl
mov
inc
adc
inc
jb
sub
and
add
subb
in
ret
sub
push
mov
mov
mov
cmp
popa
aas
sub
mov
movsb
imul
enter
mov
fcmovu
add
js
push
mov
js
dec
pusha
push
push
roll
jns
imul
bound
mov
inc
mov
lea
mov
aaa
pop
mov
sbb
dec
shll
mov
dec
xchg
nop
outsl
or
cld
imul
and
jae
mov
call
and
jno
cld
jb
popa
adc
inc
fisttps
or
fninit
sbb
add
mov
nop
adcl
pop
sti
icebp
adc
mov
mov
sbb
js
pop
popf
stos
add
or
inc
fistl
and
loope
mov
cs
push
bound
fcomp
xor
test
add
xor
cltd
dec
sub
xor
daa
adc
mov
ljmp
repnz
stos
dec
cmp
pop
stos
into
mov
adc
mov
fisttpl
sti
and
pop
loop
leave
fs
aam
sarb
nop
imull
dec
test
cmpsl
dec
jb
sbb
imul
popf
push
in
push
jns
movsl
pop
cmpsb
test
jmp
add
fisubs
push
jp
insl
mov
mov
inc
pop
xor
xchg
jae
loopne
mov
sbb
dec
lock
mov
sar
lret
cmp
cmc
xchg
or
push
sahf
ret
arpl
mov
jae
fwait
mov
and
imul
fcomi
lods
pop
pop
jecxz
inc
lods
repz
sub
mov
stos
push
stos
inc
aaa
dec
shrb
mov
lret
and
adc
pop
popf
pusha
or
cmpsb
movsb
xchg
cmp
pusha
jnp
leave
rcll
ret
lock
xlat
gs
enter
cwtl
mov
mov
jmp
loop
jo
adc
sti
push
inc
pop
mov
pop
add
pusha
inc
cltd
wrmsr
leave
fcoml
pop
inc
notb
lret
outsb
mov
xchg
jmp
movsl
mov
xlat
xor
int3
sub
decb
fsub
mov
mov
inc
repz
add
iret
lret
push
lea
pop
sahf
fistps
add
dec
fldl
push
cmc
xor
mov
inc
xchg
out
rcrb
or
and
movsb
stc
cmp
add
jae
faddl
jl
xchg
push
jno
inc
sbb
insb
nop
fdivp
cmp
hlt
ds
stos
cltd
xchg
leave
shlb
test
popa
fwait
pop
push
and
leave
repz
ja
fwait
adc
mov
repz
jp
mov
idivb
jmp
call
push
repnz
fisttps
xor
mov
add
es
jo
mov
pop
out
xor
aad
adc
mov
mov
test
pop
out
int
xchg
movsb
ja
xchg
insl
xchg
mov
or
xor
mov
ds
adc
mov
xchg
imulb
data16
leave
dec
int3
out
xor
pop
push
mov
shll
ds
les
jo
ss
call
jge
sbb
sub
and
shr
jp
dec
out
cmpsl
cmp
les
lock
push
fidivl
stc
ret
adc
push
pop
xor
push
out
or
push
aam
pop
leave
xchg
test
ja
xchg
jns
fists
icebp
sbb
jge
addr16
mov
mov
xchg
or
ret
dec
sbb
and
fbld
loopne
in
fsubrs
int
jmp
sbb
outsb
push
sbb
adc
and
std
add
int3
icebp
lods
shr
pop
push
cltd
andb
or
and
add
xchg
negb
loope
push
xchg
dec
sbb
mov
sub
inc
fs
pop
pop
loopne
pushf
aas
pushf
call
mov
jle
xchg
push
gs
aad
stos
jmp
pop
mov
roll
lcall
add
repz
dec
scas
sbb
push
shl
cmovnp
xor
dec
fnstsw
xchg
push
add
sbb
or
sub
jecxz
gs
and
xchg
adc
or
or
xor
not
out
cltd
sub
divb
add
rcrl
add
pop
imul
or
ja
mov
adc
rclb
fs
mov
loopne
jbe
mov
mov
dec
mov
inc
jbe
sub
cmp
or
jae
pop
pop
mov
mov
adc
lahf
in
pop
imul
ja
popa
xchg
aam
lcall
out
inc
ret
dec
ficompl
clc
in
adc
sub
lret
pop
adc
mov
into
xor
mov
jnp
add
int
cmp
xchg
xlat
add
add
sbb
jae
lods
jle
out
and
mov
inc
call
sti
sbbl
out
dec
jmp
lods
popf
inc
sub
mov
out
repnz
xchg
sbb
rcll
out
outsl
out
repnz
xorl
ret
rcrb
xchg
xorb
dec
push
mov
stos
cli
outsb
cmc
fcomps
pop
pop
inc
xor
cmp
add
shl
or
sbb
and
or
or
stc
call
andl
dec
movsl
xchg
jecxz,pn
rcl
stos
leave
add
pop
in
in
mov
pop
jle
jae
sahf
jmp
push
sbb
js
inc
imul
out
faddl
pushf
aam
jo
out
or
inc
push
mov
imul
ljmp
rcrb
pusha
pop
mov
das
jbe
imul
mov
jle
sbb
aam
pusha
mov
dec
push
addr16
xchg
jne
sbb
loopne
push
cmpsb
in
or
mov
and
pop
mov
adc
mov
cmp
fisubs
mov
addr16
fidivl
dec
push
xor
inc
std
mov
inc
mov
call
mov
sbb
push
and
into
mov
adc
and
in
push
dec
dec
repz
pop
ret
fcompl
outsb
shl
mov
loop
push
mov
imul
int
call
mov
shl
mov
inc
pop
scas
insl
iret
arpl
fdivrl
in
cli
adc
pcmpeqw
test
das
mov
scas
mov
add
cmc
movb
fisubl
lret
test
xchg
imul
push
cld
nop
mov
pop
cmp
sub
and
test
xchg
or
out
popf
and
push
inc
push
jnp
dec
adc
cmp
out
cwtl
je
push
rorb
dec
pop
je
es
sbb
push
inc
xor
jae
sbb
inc
or
push
push
pop
testb
xor
add
pop
and
idivb
int
pop
loop
jmp
add
cmp
mov
pop
sbb
in
jb
ss
xchg
adc
fldcw
dec
sbb
pop
lods
jo
sti
mov
cmp
repz
inc
or
or
pop
in
mov
mov
inc
rclb
mov
leave
je
or
shll
cltd
and
jns
bound
inc
dec
dec
mov
push
xor
add
add
loopne,pn
add
rolb
les
lds
xchg
loope
pop
fldt
lea
xchg
mov
ret
xchg
lods
data16
mov
scas
sub
or
dec
pop
test
stos
add
insb
stos
fmull
and
sub
icebp
aaa
mov
mov
aas
jl
into
mov
fs
mov
jns
jns
imull
lds
lods
in
imul
fwait
inc
cmovo
scas
rcr
movsl
sub
popf
mov
push
idivb
js
and
outsb
mov
xchg
into
je
add
mov
inc
sub
mov
or
push
rcrl
ret
mov
mov
or
add
add
add
jge
xchg
mov
enter
dec
cli
mov
in
mov
push
cld
mov
stc
pop
sti
lods
and
sub
push
adc
insb
lea
mov
lods
loope
popa
ret
fsubrs
imul
mov
pop
pop
repnz
push
xchg
jmp
or
push
sbb
sub
popf
ret
stos
jle
pop
lea
out
add
imul
ret
insb
out
aam
push
ret
lds
jmp
ds
ficoml
clc
inc
std
dec
xorl
rcl
out
test
jbe
adc
les
sbb
xchg
pslld
ss
fwait
xchg
test
mov
push
jmp
int
jns
sub
outsl
stos
loop
iret
inc
ret
ret
mov
mov
cmp
fucomip
das
std
aas
int
fstpl
lods
outsl
mov
pop
insl
scas
jge
dec
pop
lahf
sub
iret
sbb
aas
int
fstpl
lods
outsl
mov
pop
insl
scas
jle
pop
pop
lahf
sub
cmp
or
das
std
aas
les
fstps
lods
outsl
movsb
jg
dec
lods
pop
jne
push
mov
sub
iret
popf
pop
in
das
add
xor
and
xor
and
pop
frstor
das
push
mov
push
mov
and
xor
aad
rolb
shlb
repnz
jno
add
xchg
push
addl
mov
shll
xor
fistl
lret
add
xor
and
jno
popa
inc
xchg
pop
mov
sub
xchg
pop
xchg
mov
shlb
bound
xchg
jb
fs
ljmp
sub
cmp
adc
pop
loop
inc
inc
insl
int3
push
stc
jnp
mov
jg
mov
dec
mov
shrl
xchg
mov
stos
mov
xor
push
std
mov
adc
ja
push
xchg
jns
xorl
cs
roll
test
loope
shrl
sub
ficoml
mov
mov
xchg
ja
jb
test
adc
scas
cltd
lret
dec
rclb
lods
jg
aas
push
sbb
inc
sti
cltd
call
popf
les
ret
xchg
ret
push
add
rolb
loop
in
xchg
push
mov
jno
popa
pop
xchg
dec
cmpl
or
and
sub
xchg
pusha
out
pushl
ss
cwtl
adc
sbb
outsb
movsl
jbe
inc
adcl
jge
insl
xchg
inc
notb
cld
add
testl
pop
repz
push
push
xchg
xor
xchg
cli
arpl
popa
inc
xchg
push
andl
adc
and
xor
ret
add
xor
and
jno
popa
inc
xchg
push
andl
adc
and
xor
ret
sub
movsb
mov
test
lahf
pushf
ret
inc
jbe
mov
stos
das
dec
lahf
movb
jne
sub
test
xchg
lcall
xor
mov
jecxz
test
stc
in
test
dec
and
and
lods
daa
pop
sarl
sub
nop
test
sbb
pushf
gs
sbbl
pop
jp
fsub
xlat
cmp
dec
roll
int3
arpl
ljmp
arpl
call
cmp
xchg
sub
dec
in
sbbb
cmpsl
jnp
ficomps
add
dec
ss
jb
sarb
and
adc
outsl
add
xor
xor
cld
fs
lods
xor
and
rorl
icebp
inc
movsb
sti
pop
fwait
dec
hlt
stos
xchg
or
push
pop
ljmp
stos
ja
out
scas
icebp
mov
push
in
mov
mov
or
movsb
dec
jmp
adc
cmpsb
arpl
leave
xor
cmp
or
add
push
iret
sbb
sub
mov
lea
inc
lret
lret
mov
cltd
adc
pushf
or
lret
fcompl
mov
mov
xchg
scas
je
les
in
mov
call
mov
addr16
cmpsl
popa
ds
xchg
jl
sbb
inc
sbb
sbb
xchg
loope
test
mov
sbb
mov
add
repz
or
jne
jns
test
out
cli
jnp
sbb
xor
inc
out
dec
add
out
rcll
fdiv
adc
les
sbb
jmp
sti
xchg
js
xchg
jo
lds
jg
mov
aas
stos
xchg
adc
jp
insl
mov
mov
in
pushf
insl
imul
cld
mov
push
cs
les
inc
or
sti
sarb
inc
cmp
int
fdivs
stos
les
pop
xchg
jnp
pop
out
fcoml
jp
scas
mov
fildll
mov
jmp
out
jae
mov
loop
xchg
stos
das
inc
fadds
mov
daa
lods
lods
sub
lea
addr16
imul
cwtl
or
jge
test
lahf
jns
sbb
ret
fistl
push
shlb
movsb
pop
iret
cmp
push
jmp
mov
rclb
jle
add
mov
sarb
mov
sti
push
inc
jo
popa
popl
mov
mov
cwtl
pushf
push
and
addr16
xchg
push
jne
sti
cmp
ret
mov
stos
xchg
lock
test
push
cli
stc
push
pop
hlt
push
movsl
push
add
jecxz
popa
add
lret
bound
xchg
pushf
aad
shrl
adcl
lods
jmp
scas
mov
inc
lock
dec
adc
cmp
cmpsb
mov
andb
xchg
mov
jo
pop
lcall
jecxz
pusha
in
xlat
testl
add
aam
lret
clc
pop
add
sbb
test
into
iret
movsb
popl
iret
jo
dec
lret
mov
mov
loope
ficoml
les
sbb
or
push
xor
mov
fisubrs
or
mov
in
sub
xchg
sahf
call
dec
aad
adc
ss
xchg
inc
xchg
test
fistps
inc
rol
dec
outsl
jp
inc
mov
add
pop
ficompl
cld
lret
push
je
inc
jmp
cmp
lock
shr
ja
fistpl
out
cmp
cwtl
cmp
pop
cmpsl
aad
cli
push
dec
jmp
push
cmp
jecxz
popa
xlat
add
push
xchg
mov
pop
xor
add
mov
jmp
add
sub
and
and
stos
addb
xor
leave
sbb
scas
or
jp
xor
mov
ljmp
xchg
aam
mov
pop
or
jae
insl
and
adc
hlt
leave
jb
xor
bound
jmp
push
stos
xchg
cwtl
into
bound
cmp
inc
jno
mov
mov
aad
adc
jle
mov
add
gs
inc
call
cmp
fdivr
lds
sbb
inc
cmp
cmpsb
push
mov
mov
xchg
cmp
push
insl
sub
aaa
ja
cmp
aad
cmpsb
outsb
lds
pop
fs
inc
jnp
gs
and
clc
in
pop
mov
shll
lea
dec
mov
jecxz
out
in
outsb
cmpsb
jne
rcl
pop
outsb
arpl
jmp
xlat
outsb
es
pop
lret
sub
pop
or
nop
and
cmp
test
push
imul
sbb
ret
add
push
cmpl
pop
lods
dec
dec
jp
push
std
in
inc
lret
arpl
pop
cs
mov
imulb
dec
inc
fsubl
rolb
ficompl
pushf
out
rcrl
call
push
imul
in
js
add
mov
or
call
decb
cli
imul
dec
jbe
es
das
cmp
mov
jle
xchg
push
mov
sahf
hlt
or
push
out
ss
or
pop
stc
ror
imul
ds
jo
stos
xchg
scas
popa
loop
inc
or
in
mov
loope
and
xlat
jb
out
inc
in
cmp
mov
cs
lds
cmpsb
jo
jae
and
das
ljmp
sub
fistpl
xchg
test
daa
inc
repnz
sbb
fs
rcrb
jge
xor
aaa
ret
icebp
add
in
xchg
jne
lret
in
mov
out
rcl
addl
adc
lahf
xorl
mov
mov
adc
shrl
cli
das
mov
das
sbb
push
cli
adc
movsl
data16
or
push
imul
inc
sub
sti
scas
or
notl
decl
xchg
ret
cmp
push
mov
cmp
mov
xchg
jb
jns
shr
pop
ss
repnz
fnstsw
dec
in
lds
stos
pop
cli
mov
pop
ret
shld
jno
ds
jno
sbb
loopne
sub
sahf
stc
daa
pop
lret
std
sub
sbb
loopne
fnstenv
int
adcl
sbb
inc
push
or
testl
adc
pop
sub
orb
cltd
mov
das
jno
sbb
xor
mov
dec
mov
mov
push
push
cmp
test
lods
mov
fisttpll
jl
pop
cwtl
push
cld
mov
inc
scas
in
pop
and
pop
imul
ss
lahf
inc
jmp
xor
or
incl
dec
sbb
jns
jg
pop
fcom
arpl
in
mov
fwait
mov
pop
pop
push
jns
ja
movsb
insl
dec
pop
cmc
adc
xchg
xchg
fs
ss
int3
xorb
xor
push
dec
mov
notb
lods
jle
ds
cmp
imul
loop
js
inc
in
cmpsl
std
add
jno
push
movsb
mov
divb
int3
mov
cmp
mov
xor
cmp
jo
stos
cltd
add
testb
js
add
in
mov
push
sbb
add
mov
dec
jno
jne
sbb
loop
movsb
dec
lds
inc
sti
mov
insb
aam
decb
inc
sarb
jnp
add
xor
dec
out
cli
adc
dec
in
stos
icebp
jle
xchg
fs
daa
mov
dec
push
imul
mov
inc
loop
push
mov
flds
lcall
push
xchg
inc
les
insl
cmpsb
mov
repnz
cmp
inc
shlb
cmp
enter
inc
hlt
fcompl
imul
sub
in
sahf
add
pop
repnz
insb
dec
mov
clc
inc
pushf
inc
inc
sahf
and
mov
jecxz
dec
mov
push
xchg
dec
pop
sub
mov
xor
add
cmpsl
pop
fwait
or
stc
adc
pop
add
lahf
iret
inc
lret
dec
or
inc
and
pusha
sbb
stos
sbb
cmp
lcall
pop
insb
xchg
cmp
adc
outsl
sahf
call
cmp
sub
daa
inc
mov
ja
das
in
pushaw
cmp
push
loope
adc
es
xor
pop
xchg
dec
lahf
jae
push
cmpsl
jecxz
out
pop
pop
das
out
mov
in
xchg
cmp
push
lea
cmc
dec
jae
inc
cmpsb
aas
mov
scas
dec
pop
loopne
js
loope
pop
push
or
imul
int3
or
dec
ss
inc
cmc
fmull
lret
pop
xchg
cltd
inc
into
and
pop
mov
jo
sub
fisubrl
lcall
mov
jl
push
dec
push
and
mov
fbld
jno
mov
add
inc
insb
push
xchg
jle
fwait
ss
fadd
push
std
clc
pop
and
mov
cmp
push
mov
sar
mov
xchg
cmpsl
test
inc
repz
xor
adc
inc
call
sti
mov
pusha
mov
sub
mov
mov
pop
adc
xor
pop
mov
push
test
lret
cmp
push
rorl
shrl
pop
test
sbb
jp
or
iret
pop
iret
lcall
sub
push
ret
test
insb
repnz
fdivrp
fcompl
dec
cwtl
rcrb
imul
inc
aaa
divb
outsb
mov
fwait
pushf
pop
ret
scas
xor
push
lds
repnz
xchg
sub
cmpsl
sbb
lods
ljmp
test
out
push
lock
push
jmp
fidivrl
outsl
into
pop
stos
outsb
ret
out
call
push
pushf
je
loopne
jmp
aam
lahf
push
jge
cmp
jbe
outsb
movsw
push
mov
fidivs
dec
ret
dec
addb
xor
in
scas
push
mov
rclb
lahf
dec
pop
rclb
mov
sbb
stos
and
scas
loop
fmulp
js
call
push
in
jne
popa
sbb
sub
inc
jp
xchg
jecxz
xchg
cmc
or
nop
fadds
lea
movb
pop
push
push
cmpb
pushf
dec
sub
imul
inc
xchg
lcall
outsb
push
jmp
cmp
ja
jp
mov
mov
jecxz
jmp
mov
stos
mov
sbb
xchg
popa
mov
arpl
push
arpl
xchg
mov
loopne
jmp
and
xchg
cs
cmp
stc
popf
je
ljmp
das
xchg
insl
jne
mov
jle
in
int3
and
hlt
aam
dec
je
and
push
mov
movsb
pop
out
cmp
inc
sti
mov
push
cmpsl
ja
sbb
sti
add
sub
movl
xor
mov
adc
push
xchg
outsl
sahf
xor
pusha
int
push
lea
clc
lea
std
das
sahf
rol
jne
rol
xor
test
xchg
shlb
cmp
adc
clc
ror
std
mov
jae
pop
inc
mov
adc
lds
inc
dec
push
je
push
xchg
xchg
sub
push
pusha
xlat
cwtl
jmp
sahf
std
std
jno
imul
adc
addr16
in
pop
xor
pop
rolb
and
sbb
add
fbld
pop
sub
mov
xor
add
repz
cmp
cmp
adc
xchg
clc
inc
mov
sbb
stc
std
ds
sbb
out
jg
das
mov
ret
in
adc
and
mov
cmp
sub
jne
push
das
dec
or
leave
call
je
test
inc
lcall
outsl
xor
cld
test
decb
stos
push
sbb
mov
mov
jo
fdiv
out
or
out
push
mov
mov
out
mov
div
add
jge
test
imul
cltd
filds
add
lahf
inc
mov
jg
es
les
scas
pusha
sub
int
mov
xchg
push
pop
jmp
aas
imul
sarb
mov
cli
inc
daa
in
dec
xchg
sbb
sbb
push
je
mov
inc
push
or
push
movsl
popf
jmp
jns
sbb
adc
fistpll
scas
push
pushf
mov
mov
ss
and
sub
lods
jge
mov
addr16
dec
mov
push
xor
mov
cmp
xchg
loopne
pop
push
shll
inc
das
mov
test
cltd
jo
xchg
mov
sbb
fdivl
arpl
inc
push
pushf
push
lock
or
loopne
inc
sti
fsubs
stc
lahf
ljmp
cmp
fsts
outsl
jmp
jecxz
jae
aad
lds
add
sarl
sub
enter
in
scas
aad
jge
int
shll
push
mov
dec
aas
out
lea
out
cmc
push
pop
cmpsl
add
push
js
insl
sar
xor
shll
cmp
mov
lea
sub
popa
in
ret
sub
xchg
push
imulb
sbb
repz
leave
sbb
mov
cmp
ss
jnp
xor
adc
imul
xor
imul
mov
shll
sub
dec
mov
imull
inc
mov
pop
pop
mul
shll
xchg
jbe
cli
aam
gs
pop
in
xchg
leave
mov
xor
loopne
or
jns
sbb
leave
lock
jne
or
int3
mov
sub
lcall
lcall
push
subb
jns
in
lods
movsb
nop
fs
out
xor
stos
lods
dec
lds
add
mov
lret
outsb
in
dec
mov
inc
mov
add
pop
cmp
xchg
aas
mov
sub
cmp
cs
dec
push
and
add
jne
sbb
mov
jne
popa
push
cmp
loop
xchg
std
ja
xchg
call
mov
ds
aam
cmc
xor
jns
cmp
clc
enter
pop
rorb
adcl
xchg
int3
cmc
push
fldl
aaa
jl
mov
sub
fprem1
ret
mov
fnstcw
mov
aas
pmaxub
insb
push
mov
ljmp
sbb
jbe
ljmp
mov
repnz
push
inc
je
push
test
rcll
add
mov
dec
xor
mov
sub
daa
out
inc
test
call
out
adc
cmp
int3
dec
jne
in
cs
pop
mov
cmp
rcrl
pushf
adc
arpl
inc
jl
loop
leave
pop
movsb
xchg
xchg
cmp
std
das
clc
imul
stos
inc
jb
push
mov
clc
into
inc
es
call
ss
mov
or
jmp
aas
cmpb
cmp
test
les
pop
lods
pop
push
pop
jb
addb
and
sarb
bts
xchg
int3
out
lock
rorb
inc
fmul
xor
sbb
call
ss
imul
dec
adc
das
mov
adc
pop
pop
add
nop
out
in
call
mov
scas
out
mov
notl
jecxz
pop
cmpsb
push
inc
mov
cmp
xchg
push
addr16
or
dec
subl
daa
jp
lahf
sub
inc
movsb
jg
call
js
mov
and
rcrl
loope
ja
jecxz
mov
loope
lcall
in
mov
mov
mov
icebp
popf
rcrb
sarl
aaa
in
add
jns
adc
jo
enter
int3
pop
ret
int
dec
int3
mov
dec
movsb
dec
mov
dec
mov
cwtl
ret
jae
push
push
lock
mov
push
xor
int3
sbb
mov
and
xchg
sbb
push
js
arpl
jne
out
aaa
xchg
jge
push
lcall
fs
xchg
mov
adc
jb
dec
mov
push
adc
popf
xchg
mov
out
lcall
pop
lret
mov
icebp
jne
shlb
push
dec
in
xor
jb
sar
sbb
loop
fs
jmp
je
push
repnz
cmpsl
dec
adc
subl
pop
mov
lds
jecxz
mov
pushf
outsb
and
lahf
clc
adc
cltd
fs
sub
cmp
inc
mov
in
psrad
in
xchg
push
insb
cmp
inc
pop
pop
lock
mov
xchg
testl
mov
jbe
push
loopne
je
pop
pusha
inc
dec
ljmp
jp
call
rcl
int3
ret
or
ds
das
mov
insb
data16
popa
xchg
adc
out
je
xor
add
mov
aad
inc
xor
hlt
inc
aad
repz
sbb
int3
pop
adc
ret
cmp
inc
je
pop
out
insl
push
repnz
jbe
cltd
jnp
fimull
inc
adc
imul
out
int3
and
pop
stos
cmc
les
adc
dec
adc
mov
or
mov
out
out
fldt
cmp
stos
repnz
sbb
pop
push
js
mov
clc
loopne
rorb
mov
sub
sub
stos
mov
cmp
call
arpl
std
insb
test
in
mov
je
cmpsb
test
pop
jg
sbb
cmpsl
xchg
inc
nop
ss
add
sbb
ljmp
movsb
and
std
pop
data16
mov
or
dec
jae
inc
insl
ss
xchg
clc
addb
int3
adc
fldl
mov
out
adc
xchg
loope
std
pop
add
pop
int
ficoms
add
notl
sbb
shrb
add
mov
jle
mov
mov
cmp
xchg
test
mov
icebp
inc
andw
cmp
icebp
repz
out
dec
push
addr16
in
pop
jae
adc
stos
outsl
jb
in
dec
or
push
dec
inc
dec
shrb
mov
push
pop
leave
call
addl
jnp
adc
mov
sbb
gs
int
mov
stos
and
xor
test
imul
push
lahf
leave
les
jl
xchg
jg
ficoml
movsl
aam
pushf
fistl
int
or
xchg
and
xor
sti
xor
popf
imul
movsb
flds
dec
addr16
lret
loopne
movsl
clc
cmpsb
mov
lret
mov
imul
insl
ret
adc
and
cmp
adc
jae
cmpsb
test
andl
ret
mov
popf
outsb
test
push
mov
arpl
xchg
outsl
xchg
xchg
cmpsb
and
repz
sbb
int3
in
lcall
xor
cmp
nop
dec
or
ja
sbb
aaa
pop
in
rorb
bound
leave
push
cmp
add
pop
mov
leave
inc
xlat
adc
inc
lahf
mov
sbb
jnp
inc
mov
std
aas
cmpsl
fcomps
pminsw
mov
pop
out
xchg
gs
sub
xchg
imul
call
imul
xor
ret
jne
mov
mov
and
in
and
into
lcall
pop
cmp
imul
int
pop
test
out
mov
lods
imul
leave
ds
xchg
int3
and
mov
insb
jo
lods
dec
repz
insb
sbb
inc
adc
and
jl
stos
jne
mov
or
mov
movsb
leave
inc
in
xor
test
xor
inc
jae
add
sahf
mov
xchg
pop
loope
xchg
mov
or
push
roll
lret
push
push
cmp
cmp
mov
dec
dec
scas
fcomps
mov
cmp
xchg
dec
or
cmp
mov
mov
scas
icebp
arpl
or
xchg
mov
pop
int3
dec
jnp
or
mov
in
lock
sti
inc
pop
shl
je
cmpsb
ljmp
fisubrs
xchg
movl
in
or
mov
call
stc
iret
push
cwtl
inc
pop
jle
movsb
or
pop
pop
push
flds
mov
lods
je
cmpsl
and
nop
or
xchg
xchg
hlt
repz
lcall
ret
lret
aam
jbe
lea
in
jb
xor
sbb
xchg
inc
inc
popf
ljmp
adc
decl
jns
sbb
popf
pop
inc
loope
xchg
rorb
wrmsr
rcrl
push
sbb
mov
inc
inc
icebp
rorl
cmp
mov
inc
out
mov
push
jo
jmp
push
push
ret
ds
aaa
push
xchg
in
sub
pop
sbb
jge
je
mov
ss
std
je
xchg
stos
jl
jge
pop
inc
mov
pop
mov
mov
pop
mov
pop
lds
sub
xchg
sbb
dec
enter
std
in
movsl
pusha
inc
sub
testl
adc
pop
repz
out
pop
lock
iret
or
sbb
loope
jle
xchg
test
les
pop
push
leave
ds
pusha
movsl
roll
push
cmc
pushf
lcall
rcrl
in
sar
adc
aas
xchg
add
xor
and
jno
popa
inc
xchg
push
andl
adc
and
xor
ret
add
xor
and
jno
popa
inc
xchg
push
andl
adc
and
xor
ret
add
xor
and
jno
popa
inc
xchg
push
andl
push
shll
add
notb
out
aam
repnz
jno
mov
enter
jne
lcall
or
sbb
out
xchg
inc
and
push
ss
es
gs
xchg
testb
aad
lds
adc
jbe
inc
xchg
push
inc
divb
gs
xchg
out
test
mov
movsl
scas
lds
adc
and
dec
add
push
lret
mov
leave
dec
sbb
dec
jg
or
in
mov
fldl
sbb
popa
pop
pop
cmp
cmp
sbb
call
inc
fiaddl
mov
jae
push
call
popa
mov
shlb
jle
mov
cmpsb
xor
cmp
adc
gs
xchg
cmpsb
test
movsl
div
xchg
shlb
into
in
cwtl
sbbb
gs
insb
push
gs
push
sub
mov
mov
data16
pop
inc
push
pop
mov
stc
push
cs
js
in
inc
ja
jb
inc
or
push
xor
in
pop
testb
aad
lds
adc
dec
and
xor
gs
aam
icebp
out
xlat
int3
aad
mov
xchg
cli
out
adc
add
push
pop
inc
jne
push
and
mov
out
cmpsb
leave
ret
aad
adcb
push
pop
aaa
and
dec
sbb
arpl
mov
sbb
leave
mov
fcmovb
cmpsb
cmc
xchg
in
adc
push
and
es
gs
xchg
testb
aad
lds
adc
push
and
es
gs
xchg
mulb
aad
mov
ret
push
sub
outsb
loopne
or
rorl
movsl
cmp
sbb
lea
je
jge
pop
movsl
jle
outsl
inc
sub
fiadds
rcll
and
outsl
test
push
mov
pop
scas
push
cltd
sub
or
int
jmp
rorb
test
imul
lods
es
xchg
sub
lea
mov
jnp
imul
inc
dec
sub
icebp
mov
in
adc
dec
in
adc
mov
stc
ljmp
je
mov
inc
cmp
outsl
xchg
add
out
jge
xor
jns
mov
lods
mov
cmp
loop
ficompl
cmp
add
fnstcw
cmpsl
mov
sub
and
js
imul
hlt
clc
mov
lods
shll
push
fwait
scas
or
mov
hlt
dec
sbb
sbb
adc
inc
mov
imul
mov
fdivr
xchg
pop
pop
dec
mov
loop
mov
fwait
xchg
sub
dec
adc
sub
pop
push
mov
lods
scas
imulb
jmp
adc
add
lret
clc
pop
lcall
push
push
xor
arpl
leave
ja
xchg
or
push
xchg
les
pop
mov
sbb
mov
cmp
inc
lods
stc
mov
inc
scas
inc
leave
ret
pop
pop
insb
es
xor
lret
and
push
mov
or
push
adc
test
orb
push
fsubrl
in
cli
add
call
push
push
dec
lds
divps
push
lock
jp
mov
test
aam
sbb
out
add
jl
imul
repz
fsubr
movl
push
or
jns
inc
leave
pushf
push
loop
push
out
popa
or
daa
add
xlat
les
push
cmc
cltd
mov
add
inc
movsl
adc
inc
mov
enter
fdiv
jmp
mov
data16
ficompl
faddl
outsb
xchg
repnz
jp
mov
xorb
pop
sub
aad
jbe
repz
mov
cmp
sbb
ja
xchg
in
sbb
aam
test
inc
aad
xrelease
dec
push
adc
add
sbb
or
jp
mov
sub
xor
stos
mov
xadd
inc
push
dec
or
mov
add
arpl
add
pusha
xchg
sbb
jp
imul
or
movsl
in
xchg
shrb
enter
shl
xor
dec
jl
mov
stos
and
addb
frstor
dec
jae
data16
out
sbb
inc
adc
cmc
xor
mov
rorl
movsb
subl
cmpsl
xchg
cmpsb
sub
cmp
test
push
or
jno
pop
sub
xchg
hlt
es
adc
andl
test
je
adc
cmp
pop
mov
fidivl
in
xor
test
or
hlt
jge
cld
nop
mov
jp
dec
out
sbb
and
enter
rorl
jno
and
aad
call
mov
test
mov
jo
dec
dec
push
loope
clc
aaa
mov
jnp
inc
xor
xchg
dec
xchg
fsubr
mov
ss
push
add
mov
or
jl
out
mov
fwait
icebp
mov
minps
xchg
fwait
pop
pop
stos
loopne
outsl
shrl
mull
repz
dec
aaa
mov
mov
and
pop
jg
subl
aaa
insl
fiaddl
pop
inc
pushf
iret
jge
mov
sbb
add
xchg
leave
or
sti
dec
aad
adc
push
dec
inc
test
jnp
out
add
xchg
in
push
popa
sti
fs
out
sub
inc
call
inc
mov
jge
mov
mov
addl
add
pop
push
fmull
test
pop
dec
stos
jle
imul
mov
cmp
jno
push
test
repz
sbbl
cmp
cmpsb
or
dec
ret
lcall
sub
bound
add
aas
psrld
loop
sub
ds
lods
bound
sub
or
mov
rcll
sub
add
mov
lods
sbb
add
pop
insb
pop
inc
mov
sbb
xchg
js
enter
adc
dec
aad
rcl
icebp
loopne
xorl
jno
shll
dec
mov
jbe
inc
adc
aaa
movsl
mov
pop
ljmp
pop
pop
cmpsl
pop
stc
hlt
lods
push
mov
leave
jle
jecxz
dec
push
sub
pop
xor
or
rclb
pop
sbb
fs
xor
cmp
cmp
xchg
dec
adc
sbb
leave
mov
push
xlat
mov
mov
insl
mov
lcall
cmp
cmpsb
lret
or
jecxz
xor
cmp
lret
cmpsl
inc
and
sub
mov
stc
xchg
jmp
sbb
movsb
popf
adc
mov
pop
mov
mov
mov
dec
push
pop
aam
lret
mov
ret
xlat
vpunpckhwd
lea
jl
jecxz
in
inc
pusha
stc
das
inc
jge
push
dec
mov
cmp
das
jp
cwtl
cmpsl
movhlps
cmpb
xchg
fisubrs
shl
cmc
push
sbb
enter
repz
data16
mov
adc
int
xor
sbb
test
mov
pop
jmp
mov
fcom
jne
inc
mov
outsl
arpl
movsl
adc
mov
xchg
push
cmp
negb
clc
or
inc
push
adc
dec
insl
cld
rol
daa
fwait
dec
test
push
cwtl
outsl
call
push
xor
addr16
hlt
push
incb
push
cs
arpl
mov
stos
imul
ret
lods
and
xchg
add
adc
push
inc
sahf
das
sahf
cmp
xchg
xchg
mov
dec
xchg
lods
xchg
ds
subb
insb
mov
nop
mov
test
push
dec
and
in
div
scas
imul
popf
inc
pop
add
sbb
imul
jae
int
xchg
pop
test
push
test
aas
sub
mov
xorl
cwtl
jnp
lcall
cwtl
add
mov
insb
xchg
inc
std
cmp
mov
dec
ja
and
pop
lea
outsl
movl
mov
sub
inc
mov
jne
or
call
or
push
push
mov
les
clc
enter
std
enter
in
mov
sbb
ror
repnz
sbb
scas
dec
cmp
xor
push
movsb
dec
outsl
imul
pop
aas
jbe
or
rdpmc
sahf
inc
pop
push
or
adc
test
jp
or
and
iret
hlt
cwtl
lods
dec
js
out
cwtl
outsb
loopne
shrl
out
sti
in
roll
repz
xchg
inc
inc
xor
insl
std
mov
xchg
jae
dec
test
mov
lods
mov
mov
pushf
mov
rorb
loop
insb
pop
xchg
add
push
std
pop
push
js
leave
clc
lds
shll
lock
dec
lock
add
mov
cmc
jmp
cmp
fsts
ret
mov
jbe
out
leave
mov
push
mov
sub
cs
sti
xchg
mov
loop
push
in
out
in
lret
push
shr
mov
add
jg
pop
xchg
and
adc
mulb
xchg
pop
add
cwtl
inc
dec
jl
dec
sub
xchg
je
mov
cltd
jmp
inc
mov
mov
sti
cltd
test
mov
pop
popl
inc
xor
repz
sbb
or
pop
scas
mov
int3
mov
lods
into
or
push
gs
add
std
fisubl
mov
push
or
xchg
push
imul
xor
scas
add
xchg
push
pop
dec
ja
pushf
cli
jb
adc
cmp
es
fisubl
adc
les
notl
sub
cltd
imul
mov
mov
sar
repnz
call
push
pop
jp
outsl
fisubrs
ror
jp
sbb
pop
into
fstps
outsb
call
addr16
test
lret
dec
and
cmp
and
push
xlat
inc
jbe
in
sub
ljmp
cmp
jbe
push
jmp
jno
lcall
int3
adcb
dec
test
sbb
jp
in
mov
push
adcb
push
adcb
and
daa
mov
mov
dec
popf
clc
lret
or
pop
sbb
pop
xor
xchg
lock
clc
mov
adc
fisttpl
cli
leave
fwait
add
xchg
fcom
or
sub
or
addr16
rcrb
cmc
aam
daa
jecxz
sti
cltd
or
fildll
shrl
push
stos
jno
mov
push
push
fdivs
scas
aaa
call
pop
stc
and
gs
stos
mov
dec
lods
daa
add
xchg
adc
inc
inc
insb
cmp
inc
or
por
pop
cmp
call
dec
cmp
and
jo
adc
test
mov
fildl
inc
pop
xchg
or
ror
inc
or
fistps
add
cwtl
insb
icebp
outsb
xchg
into
pop
xor
xchg
das
sbb
lret
mov
lret
pop
mov
pop
add
sarl
jl
stos
xor
cmp
jl
jmp
push
and
imul
je
mov
lds
scas
adcb
sbb
mov
fildll
popf
mov
test
mov
inc
mov
xchg
loope
fwait
repnz
aam
lock
mov
sub
and
push
dec
aaa
inc
sub
movsb
cltd
pop
xchg
sbb
lods
rcll
ljmp
loopne
or
in
xor
pusha
stc
xchg
dec
fcoms
hlt
and
mov
or
loop
jp
test
pop
jge
aaa
pop
outsb
aaa
mov
sub
sbb
fdivs
push
jle
mov
or
push
sub
xrelease
sarl
vpsubusb
inc
int
bound
inc
inc
jg
dec
rol
in
insl
insl
add
in
lret
xor
or
cmc
testl
pop
sbb
mov
gs
out
dec
outsl
inc
or
fwait
inc
stos
cmpsb
iret
orl
stc
mov
in
jle
jbe
shlb
les
adc
outsl
cmpsb
subl
je
leave
inc
lret
sbb
inc
jne
imul
pop
int
lds
adc
clc
test
jmp
mov
xchg
into
lret
enter
stc
jg
add
jle
and
mov
pusha
push
lods
cmpsl
adc
jne
pop
xlat
inc
pop
mov
idivl
or
incl
xchg
iret
shlb
divb
sub
pusha
insl
jb
adc
cwtl
xchg
jg
mov
std
inc
xchg
cmpsl
into
je
ficompl
stc
mov
popf
dec
fidivl
dec
in
movsl
arpl
ret
pop
lahf
lret
jae,pt
hlt
xor
mov
pushf
cmc
adc
mov
push
dec
movsl
sahf
mov
xor
fidivs
inc
mov
push
mov
or
xchg
sub
incb
shrb
pop
push
ret
mov
hlt
nop
roll
sahf
call
data16
push
jb
jne
cmp
inc
stos
fld
nop
pop
aaa
xchg
inc
icebp
mov
shl
div
or
jnp
cld
and
popf
xor
ds
fcmovnu
mov
sbb
mov
mov
cmpsb
jle
cmp
mov
or
mov
fidivs
arpl
jle
xlat
cmp
imulb
cmpl
mov
andb
mov
xchg
xor
inc
test
aam
cmpb
sahf
lods
in
adc
scas
outsb
pop
push
push
sti
icebp
rolb
movsb
adc
add
out
sbbb
mov
fisubrl
lret
or
mov
sub
push
fistl
or
addr16
add
inc
and
mov
out
cmp
pop
and
mov
mov
push
inc
sbb
pop
xchg
adc
rcll
ljmp
mov
push
das
jge
add
jns
js
loopne
icebp
dec
lods
push
hlt
notl
adc
add
scas
imul
xchg
sub
adc
sub
xchg
lcall
in
sub
les
push
mov
pop
jnp
mov
lahf
jae
bts
inc
aad
mov
add
mov
jae
hlt
and
inc
jmp
nop
xchg
jl
test
lret
mov
xchg
cmc
movsb
mov
sbb
ret
jmp
xor
fistps
outsb
fcmovbe
in
mov
xchg
addr16
jmp
xchg
mov
jecxz
inc
inc
jmp
cs
xchg
lret
inc
and
inc
add
mov
xor
cmp
arpl
bound
adc
sub
jp
cmp
adc
popa
push
pop
xchg
popl
cmpb
movsb
in
mov
sbb
in
sbb
std
inc
fninit
jecxz
push
dec
ds
aad
and
ss
mov
sbb
lahf
pop
fnstsw
xchg
shll
subb
sbbl
shl
inc
inc
fadds
xor
sbb
inc
popf
xchg
cli
cmp
lock
sub
dec
je
mov
ret
into
add
and
rol
scas
mov
add
mov
adc
das
mov
fidivl
add
out
sub
and
aad
mov
fdivl
push
adc
out
js
lods
jg
pusha
stc
pushl
jne
insb
or
loopne
lods
arpl
popa
mov
adc
stos
test
mov
jb
adc
push
add
test
adc
push
mov
andb
sti
add
cmp
sarb
stos
and
sbb
sub
popfw
jbe
xor
push
test
inc
mov
clc
imul
jnp
sti
cmpsb
jns
push
nop
in
int3
popa
mov
xchg
sbb
mov
add
inc
push
add
dec
fldt
xchg
jl
std
jb
fisubrl
je
xchg
lds
rclb
cltd
push
rol
add
repz
xchg
and
xor
jae
jb
mov
xchg
xor
sub
fmuls
mov
mov
scas
into
cmp
jg
cltd
out
jno
push
ret
or
xchg
outsl
jge
cmovl
adcb
cs
xor
push
mov
mov
adc
mov
mov
arpl
sub
and
pop
mov
fiadds
or
sbb
inc
sub
jmp
add
arpl
aaa
shl
fwait
ds
pop
fwait
stos
popl
ret
mov
jmp
cmovl
shrl
xor
xor
xchg
pop
subl
sarl
mov
call
mov
popf
aas
jo
sbb
rcrl
add
xchg
mov
out
jp
sahf
xchg
jae
dec
test
dec
sti
or
gs
fs
push
inc
hlt
iret
inc
dec
aas
add
arpl
or
jae,pn
mov
sub
jae
and
cmpsb
and
out
adc
jge
clc
lods
inc
cs
lret
lds
jle
daa
add
sbb
adc
aam
and
xlat
cmpb
xchg
mov
popf
push
aam
sub
push
mov
adc
xchg
sbb
fstps
out
or
add
jge
mov
xchg
pop
push
dec
in
movsb
cmp
ret
mov
mov
popa
xor
mov
lods
inc
hlt
and
movb
cltd
cmp
pop
ss
sub
in
mov
sbb
jp
mov
xor
out
outsl
movsb
stc
sti
iret
jns
subb
or
sbb
xlat
lret
cmpsl
inc
out
imulb
cmp
int3
push
xor
adc
adc
inc
sbb
call
jae
xor
fisubl
cwtl
addr16
pop
jl
cltd
dec
in
cmp
push
xchg
mov
jo
inc
les
pop
jecxz
or
scas
xlat
sub
cmp
sahf
pop
xchg
hlt
stos
cmp
out
aam
addl
lahf
lcall
and
stos
mov
data16
sbb
push
ret
sarl
out
add
std
dec
mov
inc
mov
lret
push
cmp
ret
aad
xchg
rcrl
xlat
or
fidivrl
jge
dec
jge
ret
fstps
pop
out
rcrb
push
jbe
push
outsb
pop
cs
mov
mov
out
jo
pusha
out
mov
mov
pop
pusha
das
mov
pop
popa
outsb
insb
sbb
inc
xlat
adc
imul
ja
ljmp
xchg
mov
sub
in
inc
notl
std
lods
fxch
inc
xchg
inc
sbb
push
xlat
mov
popa
pop
xchg
inc
inc
mov
sub
sbb
dec
lock
mov
sti
or
sub
inc
insb
int3
or
inc
sbb
je
sbb
mov
test
inc
ja
inc
mov
popa
ljmp
inc
mov
movsl
stc
stc
data16
cs
fisubl
and
jns
inc
stc
adc
or
mov
xchg
sti
pop
add
mov
dec
gs
out
adc
adc
lret
mov
sti
inc
cmp
pop
test
and
sub
pop
dec
or
inc
sti
outsl
dec
sti
inc
shl
pop
gs
popf
jno
int
xchg
jnp
and
dec
adc
or
imul
and
in
cltd
ljmp
cmpsb
leave
dec
enter
cli
sbb
adc
jae
push
cmpb
mov
sbb
mov
inc
inc
icebp
sbb
stos
mov
sti
xchg
sbb
lods
popa
adc
push
addr16
shlb
jne
pop
enter
outsl
sbb
adc
in
jmp
mov
cmp
fbld
dec
mov
pop
and
test
add
inc
mov
int3
add
test
les
cmc
xchg
sbb
mov
or
mov
jbe
hlt
insb
and
lods
mov
loopne
insb
pop
or
lcall
movsb
les
or
cmp
push
ss
xchg
cmp
inc
das
jb
cltd
and
cli
xor
lods
xor
adcb
cmpsb
icebp
aad
jo
mov
sbb
mov
push
cmc
sub
dec
dec
aaa
popl
fwait
call
sbb
les
push
or
int3
je
inc
jno
push
and
mov
jg
xor
mov
jnp
rorb
add
popf
call
inc
pop
cmp
shll
into
mul
sti
adc
xchg
cmp
jno
adc
movsl
dec
or
cmp
sub
lret
shlb
dec
or
jmp
push
fcomps
sub
mov
push
scas
fsub
repnz
push
xchg
into
and
les
adc
rclb
es
lcall
pop
xor
or
mov
mov
inc
sahf
mov
dec
mov
ljmp
and
sbb
in
scas
mov
stc
inc
in
sbb
pop
lcall
enter
mov
push
daa
in
aaa
mov
fimull
lea
outsw
xchg
dec
test
into
and
push
shrl
push
rcl
mov
cmp
testl
dec
aaa
or
xchg
adc
jl
rorl
xchg
mov
movsb
jl
mov
leave
mov
psrlq
lods
ffree
dec
ds
mov
add
popf
out
mov
icebp
out
out
lock
push
imul
sti
movsb
jl
mov
pop
out
imull
or
lds
daa
aaa
jns
fists
and
push
adc
mov
pop
mov
push
cltd
jae
data16
mov
lret
adc
addr16
or
faddl
jns
clc
push
xchg
mov
cmp
pop
cltd
fs
cwtl
xorl
mov
daa
add
dec
jmp
mov
out
das
into
mov
mov
dec
adc
xchg
sbb
cmp
shr
fptan
mov
sarl
fidivs
cmp
dec
les
and
push
in
dec
jl
fisubrs
cmp
jmp
adc
and
imull
mov
loop
or
loopne
sbb
icebp
mov
aas
movsb
pop
movsl
adc
stc
xlat
xor
mov
aad
xchg
jl
cmp
xchg
repz
push
or
sbb
mov
cmp
movsl
aad
lds
adc
push
and
es
gs
xchg
testb
aad
lds
adc
push
and
es
gs
xchg
testb
push
mov
cmpsb
cmc
xchg
xchg
push
and
es
gs
xchg
testb
aad
lds
adc
push
and
flds
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
xchg
ret
xor
jecxz
sub
loop
adc
jb
arpl
adc
and
xchg
ret
xor
jecxz
xchg
rolb
loop
adc
adc
arpl
adc
inc
xor
and
xchg
ret
xor
jecxz
xchg
rolb
loop
mov
push
and
push
adc
dec
bound
fnsave
and
nop
out
mov
jl
xor
fs
mov
xchg
mov
cmp
es
mov
scas
out
daa
cld
scas
cmp
push
lret
cld
inc
or
pop
or
cmp
adc
and
push
ret
xorb
ret
add
jle
mov
push
jge
sbb
jb
mov
cmp
and
cmp
mov
rorl
popa
cmp
ss
and
arpl
inc
inc
imul
add
jge
aam
pop
jae
dec
dec
dec
xchg
lods
addr16
add
and
and
add
mov
jecxz
xchg
rolb
loop
adc
jae
arpl
adc
inc
xor
or
fldt
ret
mov
ja
jbe
pop
pop
xor
pop
jo
and
stos
shl
lcall
add
ja
push
push
dec
pop
xor
arpl
cmp
movsl
fucomi
rcll
rolb
loop
adc
jae
arpl
adc
inc
xor
xchg
ret
xor
jecxz
xchg
rolb
loop
adc
jae
arpl
adc
inc
xor
xchg
lret
jle
mov
loopne
mov
mov
inc
lock
ds
mov
xchg
mov
pop
cmpsl
mov
mov
mov
ret
dec
lods
cmp
push
jb
fsubrs
pop
push
mov
adc
fildl
out
xchg
sbb
sbb
xchg
mov
repnz
cmp
movhps
bound
jns
and
lock
popf
adc
xor
sbb
je
dec
inc
scas
test
mov
mov
cld
out
inc
jbe
or
lret
push
test
pop
adc
fcmove
fs
insl
notl
pop
loop
scas
mov
jmp
dec
sbb
cltd
in
mov
lock
in
ds
shl
aas
push
sbb
les
push
imul
sbb
mov
sbb
inc
aaa
ret
xchg
sbb
daa
push
lret
dec
fsubrl
fistpl
and
jg
daa
inc
icebp
push
orl
aas
es
mov
dec
scas
andl
out
and
mov
mov
jnp
jmp
dec
push
push
push
movq
push
xchg
lret
scas
in
sub
pop
cld
mov
cmpsl
nop
out
dec
mov
nop
sbb
shlb
and
jno
pushf
rclb
jle
rcll
xchg
std
or
in
imul
mov
bound
out
pop
or
push
insb
divb
mov
push
scas
sahf
out
pushf
sbb
lret
call
in
xchg
mov
mov
arpl
inc
mov
test
subb
leave
xor
or
cltd
adcl
aas
cmp
lea
lcall
sub
mov
mov
roll
ret
and
jo
insb
push
jge
dec
sbb
dec
jge
mov
mov
cmpsl
push
imull
insl
add
jp
dec
cmc
jne
int
mov
jno
mov
mov
xchg
lret
mov
cmp
xor
ret
andb
sub
mov
or
push
pop
push
lock
xchg
stos
and
sub
add
movsl
cs
fisubrl
push
jmp
notl
lahf
stos
out
push
repnz
iret
scas
test
lods
je
idivb
inc
mov
xor
xchg
sahf
xor
jmp
mov
shrl
test
or
shr
mov
cmp
jnp
pushf
dec
xor
ficompl
scas
mov
jo
das
outsb
cmp
adc
xchg
ljmp
mov
fadds
mov
xchg
sahf
xchg
dec
cmc
pminub
xchg
xchg
in
add
rcr
or
sub
out
pop
dec
and
cmp
jbe
pop
call
jg
adc
pop
sub
add
scas
bound
and
dec
or
fistl
mov
aad
pop
in
out
pushf
and
cmpsl
push
pop
repz
pop
or
mov
inc
insb
sbb
test
cld
inc
in
push
jl
mov
mov
add
dec
sbb
and
flds
mov
cmp
pop
fwait
lret
inc
sub
cmp
or
lods
loopne
mov
or
inc
ret
loope
adc
mov
xor
jecxz
and
repnz
mov
fucom
mov
ja
fs
test
mov
sub
scas
mov
adc
repnz
out
pop
inc
push
sahf
ds
aaa
cltd
sahf
xchg
test
daa
imul
xchg
in
lret
push
cmp
imul
cld
bound
insl
mov
ss
sub
loop
mov
int
aas
or
ja
cltd
mov
mov
testl
repz
cmpsl
cltd
jae
push
xchg
pop
push
mov
arpl
jp
pop
orl
mov
ficoml
xchg
rep
mov
cmp
pop
jno
dec
xchg
popa
add
mov
cmpsl
aad
jg
sub
and
shlb
mov
popa
dec
adc
mov
adc
in
cmp
lret
test
mov
pusha
pop
leave
jbe
jno
cmp
jne
mov
imul
xchg
dec
sbb
pop
jno
jp
mov
std
addr16
popf
adc
insl
dec
lods
push
add
push
and
inc
sub
sbb
add
jecxz
jne
hlt
shlb
jnp
mov
dec
push
add
sub
ss
adc
mov
jnp
sbb
ret
jmp
mov
loope
mov
mov
lret
scas
cs
push
push
jmp
and
lahf
nop
or
and
addr16
inc
sub
or
cmp
push
shr
icebp
ljmp
jb
loope
dec
addr16
addr16
jne
test
push
das
stc
cwtl
and
test
ljmp
mov
xor
xorb
adc
jo
inc
in
sub
jbe
test
inc
repnz
xchg
push
cs
xchg
push
push
mov
sub
mov
les
shll
stos
push
inc
mov
mov
popf
arpl
adc
inc
pop
imul
adc
mov
jg
in
push
repz
unpckhps
jecxz
lret
loopne
rorl
mov
xchg
lods
out
inc
mov
ds
xchg
out
stos
fisttpl
popf
cs
pusha
lods
push
imull
fstpl
mov
js
xchg
mov
test
ljmp
leave
pushl
mov
push
push
popa
test
xchg
scas
addb
cmp
push
and
and
mov
ljmp
mov
jp
inc
jnp
pushf
rcrl
lods
mov
imul
scas
sar
popa
mov
push
jb
test
aaa
mov
push
call
jp
hlt
fwait
shl
pop
mov
mov
pop
jp
lock
adc
cmpsb
stos
sbb
cmp
insb
aad
lcall
jge
add
inc
sub
in
xor
jmp
hlt
or
dec
mov
push
iret
aas
mov
test
pop
mov
nop
or
ja
push
insl
rorl
sub
or
out
cmp
mov
mov
loopne
fs
int3
mov
mov
jle
out
sti
mov
sub
xchg
pusha
js
aam
pop
xchg
cwtl
mov
and
rorl
sub
ret
movsl
cmp
inc
and
cld
adc
fisubs
fsub
cmp
adc
xchg
cmp
aam
pop
in
je
mov
loope
ljmp
inc
movsb
iret
push
aad
lds
and
imulb
icebp
pop
out
mov
xor
pop
shrb
sbb
mov
xchg
jo
pop
mov
pusha
leave
xor
jmp
popf
vpaddsw
pop
imul
cmp
fwait
cwtl
in
add
pop
mov
call
push
adc
movl
scas
inc
filds
outsb
pop
testb
xlat
mov
imul
movsb
cmp
or
or
in
mov
mov
mov
sub
lcall
or
scas
cs
mov
icebp
dec
fcoms
add
pop
xor
insb
outsl
inc
add
mov
jp
aam
xchg
xchg
dec
std
outsb
inc
loope
icebp
mov
lahf
xchg
bound
outsl
fcoml
arpl
mov
pop
fwait
pushf
je
jae
xor
int
sti
xlat
repnz
pop
dec
in
add
jb
xchg
or
inc
fistpll
mov
negl
mov
movl
repz
idivb
mov
arpl
pop
call
push
popa
add
mull
mov
and
mov
mov
popf
pusha
popa
xchg
xchg
xchg
movsb
and
dec
ljmp
push
pop
mul
aam
inc
stos
in
and
sbb
std
out
cmp
pop
insb
enter
push
fcmovnbe
fimull
add
into
and
mov
push
lods
lret
sbb
cmc
stc
mov
mov
mov
arpl
ds
jne
or
arpl
or
stos
push
pusha
adc
mov
movsl
adc
mov
or
repnz
push
add
sub
popa
out
pop
adc
add
lock
sub
mov
mov
stos
hlt
mov
testl
test
shll
sub
cmp
fs
push
cmp
lods
mov
mov
cmp
push
xlat
pop
pop
cld
fadds
xor
pushf
xor
xchg
test
dec
pop
fisttpl
fs
or
fcmovnb
inc
pop
daa
jp
adc
push
push
shr
adc
add
lret
pop
cs
jne
in
sti
mov
dec
adc
inc
cmp
insb
or
into
inc
cmp
and
cltd
cld
xor
jle
insb
pop
sbb
lock
adc
jmp
mov
test
jns
xorl
mov
sarl
push
cld
rcr
jp
xor
and
add
lret
leave
rol
push
xchg
mov
push
mov
ds
je
or
xchg
mov
xchg
out
into
pusha
ss
lock
imul
fmull
call
mov
pop
mov
mov
xchg
mov
push
or
bound
outsb
cmp
push
negb
insl
mov
cs
sbb
into
ret
sub
data16
cwtl
and
fwait
xorb
int3
hlt
add
dec
push
and
mov
pop
inc
lea
mov
sbb
scas
cmpsb
gs
push
dec
xchg
std
mov
sub
in
fwait
in
push
or
sub
and
sbb
push
jmp
mov
mull
mov
inc
cmp
test
repz
cmpsb
push
mov
cmp
cmp
push
sub
sbb
add
jge
mov
push
icebp
cs
cmpl
xchg
inc
inc
pop
push
or
sub
and
cmpl
data16
scas
icebp
test
cmp
mov
roll
mov
sub
adc
mov
bound
add
push
xor
pop
rolb
dec
jne
out
in
pushf
and
mov
jge
xor
cwtl
insl
jb
push
repz
scas
imul
lret
pop
xor
fnsave
mov
mov
sbb
mov
xor
test
adc
loopne
mov
sbb
push
js
sub
shrb
loope
test
jno
test
mov
lahf
xor
and
mov
jo
rcrb
cmp
jmp
ret
pop
ss
das
mov
sbb
xor
lea
sti
sbb
mov
fmuls
or
stos
add
in
cld
sahf
jmp
out
movsb
scas
mov
sarb
add
cmpsl
pop
inc
pcmpeqw
scas
shll
out
sub
mov
jl
add
ljmp
les
jmp
mov
and
inc
imul
or
xchg
out
xor
dec
das
arpl
imul
flds
mov
adc
push
cmpsb
mov
pop
push
insb
and
std
stos
fsts
dec
pushf
sbb
mov
jns
adc
lea
call
xchg
ret
jl
stos
fnstsw
adc
dec
cmp
pop
pop
xchg
push
imul
ficoml
push
sti
pop
push
out
cltd
mov
adc
push
inc
xor
leave
and
outsb
mov
pusha
lods
inc
cli
or
fs
repz
cmpsl
icebp
and
rol
push
shll
es
cld
push
repnz
sub
and
test
add
imul
out
divb
mov
loop
test
out
call
pop
repz
xor
test
arpl
fcomps
mov
mov
push
inc
xchg
fcompl
lods
mov
push
shl
cmpsl
mov
xchg
std
inc
imul
ret
sub
inc
sub
pop
insl
dec
xor
loope
mov
cli
xor
pushf
pop
adc
sarl
in
pop
cld
roll
xor
das
push
push
pop
jmp
loopne
xchg
scas
into
daa
ficoml
stos
out
out
dec
popa
ss
sub
mov
subb
jg
nop
repnz
pop
scas
sbb
lea
push
jp
pop
dec
iret
xor
mov
push
cld
mov
pop
sub
loopne
or
inc
cmp
divl
jne
into
mov
insl
mov
dec
adc
leave
cmp
xor
loopne
movsl
inc
lock
btr
es
add
scas
push
incl
pop
mov
mov
rclb
movsl
daa
jbe
lcall
jle
mov
stos
inc
out
jns
add
nop
arpl
cmc
mov
lds
ss
xlat
daa
stos
xor
pop
xchg
cmp
pop
or
fdivs
mov
popf
pop
lds
sub
in
fdivs
add
lds
mov
f2xm1
dec
inc
leave
sub
popa
dec
mov
aam
add
and
aaa
inc
enter
mov
scas
push
enter
lods
pushw
cmpsl
shll
xchg
inc
push
dec
adc
pop
add
stc
push
sub
mov
push
enter
dec
popa
or
push
jns
clc
iret
out
inc
inc
jg
pop
sub
push
cwtl
jno
cli
push
pop
dec
xlat
lods
cmpsl
or
mov
cltd
adc
add
cmpsl
mov
bound
jg
xor
mov
mov
cs
daa
addr16
mov
sub
insb
es
xchg
inc
popa
push
xor
push
shrb
pop
cmp
push
mov
rclb
push
je
loop
pop
mov
inc
adc
push
pusha
sub
push
cs
rcll
shlb
pusha
mov
into
in
mov
das
rclb
mov
pop
mov
in
push
dec
addr16
sbb
sub
pop
push
test
mov
mov
shl
test
popa
in
shll
xchg
out
push
pushf
mov
and
mov
lret
negb
jecxz
dec
inc
loopne
shlb
ds
mov
shr
push
sub
jb
in
loope
xchg
outsl
mov
test
in
push
cltd
cmp
mul
xor
sub
lock
and
xor
xor
in
xor
mov
xor
xor
adc
inc
inc
out
je
add
jo
sbb
test
xor
mov
and
das
out
ss
es
popf
push
push
mov
stos
pop
jle
mov
add
out
imull
xchg
stc
out
cmp
andps
push
icebp
andb
test
pop
pop
in
dec
stos
out
or
xchg
cmp
adc
cmc
mov
sahf
fsubs
lods
cmpsl
lahf
mov
in
push
cmp
outsl
mov
leave
and
cmpl
pop
fldt
in
adc
sahf
repnz
arpl
loope
sbb
inc
cs
lea
pop
fistpll
mov
or
jb
xor
mov
sub
mov
mov
mov
cmpsb
xor
ja
pop
stos
ja
fsub
shrl
rolb
ljmp
mov
inc
push
sbb
adc
jecxz
mov
das
xor
sbb
fidivs
push
mov
cmc
shlb
out
pop
fwait
sub
scas
out
and
pushf
and
fiaddl
or
sti
fmull
push
ret
push
xor
decb
or
mov
jo
and
movsb
sub
adc
fwait
hlt
xchg
jge
inc
or
push
pop
sbb
pop
xchg
out
push
fsubrs
xor
add
add
sub
cmp
ja
inc
aaa
add
mov
js
cmp
xor
jbe
jbe
push
push
stos
mov
aam
cmp
push
cli
ficomps
lods
jge
stos
or
cmp
test
xor
and
leave
xor
leave
xor
mov
and
inc
icebp
arpl
daa
ljmp
js
dec
enter
mov
mov
adc
stos
mov
xor
fistl
or
cld
jge
stos
ret
imul
aaa
mov
test
push
fwait
adc
cs
xchg
push
dec
add
in
or
cmp
push
mov
xchg
jne
repz
xor
inc
dec
loopne
pusha
je
inc
out
dec
popa
cmpsb
mov
xor
push
addb
in
cmc
mov
inc
test
in
jle
scas
xchg
and
pop
ret
jle
inc
sub
cmp
test
sbb
inc
cmp
or
jo
push
cs
fcmovnb
push
cmpb
and
mov
push
inc
mov
mov
mov
mov
sti
arpl
sahf
icebp
mov
test
xor
push
dec
shll
fwait
jp
arpl
inc
adc
ja
sub
pusha
mov
sub
pop
inc
pop
adc
int
cmp
xlat
movl
imul
xor
fcomps
sbb
rcrl
fisubrl
outsl
popf
sub
mov
xchg
fwait
sbb
or
arpl
icebp
sahf
add
push
xchg
push
mov
mov
push
add
add
jge
xchg
ret
xor
fcmovne
xor
das
add
mov
cld
inc
cmp
dec
cmpsl
mov
stos
add
mov
hlt
xor
adc
inc
sahf
jne
iret
aas
mov
pop
jecxz
daa
stos
out
ror
pop
jmp
js
sub
out
out
fistl
xor
les
fisttpl
loopne
push
test
mov
lret
in
int
mov
cmp
dec
and
movsl
mov
xlat
repz
dec
inc
mov
cli
fisttpl
lahf
in
in
sbb
test
sbb
out
lods
fisttpll
add
jbe
shl
les
adcb
xchg
or
test
imul
js
int
das
icebp
call
ja
add
sahf
sbb
push
mov
sbb
and
aam
daa
mov
loop,pt
js
jge
mov
add
mov
xor
lods
out
xor
leave
fisubrs
pop
popa
mov
stos
jp
lock
daa
xor
sub
stos
mov
mov
std
adc
imul
data16
sbb
push
insb
mov
mov
push
or
xchg
pop
adc
shlb
mov
and
sub
ja
fldt
popf
dec
insb
insl
iret
adcb
pusha
fldl
rcrb
mov
ljmp
mov
cwtl
jno
cmpsb
xor
bound
cmp
xchg
cmp
pop
dec
pop
adc
add
jmp
lahf
sub
stos
jne
fidivl
aam
xlat
repnz
and
insb
ljmp
insb
test
xchg
test
add
test
dec
xchg
mov
pop
or
call
outsl
test
and
add
fsubs
insl
leave
aam
mov
inc
call
or
pop
push
lret
pop
jae
add
and
xchg
fisttpl
mov
mov
xorb
cmp
out
mov
push
xchg
pop
out
stc
or
movsl
ret
inc
mov
adc
mov
shr
cmpsl
fstps
cmp
dec
test
xchg
xor
pop
xor
shl
leave
mov
fwait
xorl
in
lea
stos
out
and
hlt
sbb
xchg
mov
mov
or
in
nop
lret
push
inc
fs
call
xchg
mov
mull
inc
out
cmpsl
add
adc
push
sub
jp
rol
cmp
cmp
adc
shrl
xor
push
fdivrs
mov
push
cwtl
push
jp
fists
pop
mov
bound
dec
mov
or
pop
movsl
out
cwtl
inc
jb
mov
push
cmpsl
fwait
sbb
xchg
xor
jl
or
not
fidivrl
or
mov
dec
ja
sub
sub
fiadds
mov
movsl
rol
add
jle
fisubrs
push
mov
pop
insb
pop
loope
xor
lds
pop
sbb
mov
cmp
xchg
jmp
pop
iret
add
loop
insl
roll
imul
xor
dec
adc
cwtl
imul
popl
repz
in
sti
lods
pop
jg
in
fldl
mov
movsb
jb
cmp
in
sbb
call
test
bound
sub
lock
out
xchg
jne
and
daa
pop
or
out
sbb
aam
sahf
popa
pop
add
cs
rcrl
push
jecxz
pusha
je
add
leave
jbe
jge
sbb
dec
sub
add
xor
inc
movsl
jp
jns
jl
or
sub
dec
jge
pushf
jl
inc
push
dec
icebp
push
cltd
test
inc
sub
cwtl
out
out
imul
aad
dec
sbb
mov
jecxz
dec
add
cmp
jecxz
xchg
rolb
loop
adc
jae
arpl
adc
inc
xor
xchg
ret
xor
jecxz
xchg
rolb
loop
adc
jae
arpl
adc
inc
xor
xchg
ret
add
xor
mov
mov
mov
add
arpl
adc
inc
xor
xchg
ret
mov
mov
mov
mov
test
xor
fimull
popf
cmp
jb
leave
xor
arpl
adc
mov
ret
std
xchg
out
outsl
int
int
cmp
jb
bound
insl
add
dec
or
shrb
loop
mov
int
and
xor
add
and
inc
cmp
movsb
rorb
nop
std
roll
push
push
inc
add
sbb
mov
cmp
cmp
cmc
dec
in
mov
push
rolb
push
pop
insl
mov
int
fnstsw
sub
jae
lods
xchg
fstp
cmp
out
ret
sbb
sub
mov
ret
ljmp
sbb
popa
adc
data16
cmp
cmp
bound
repnz
scas
ss
lods
and
xchg
orps
fisubrs
mov
popf
andb
add
repz
xchg
pushf
adc
add
loope
das
aad
int
pop
pop
repnz
pop
outsl
icebp
scas
inc
inc
and
and
mov
pop
int
hlt
fidivs
sbb
adc
pop
xor
shlb
fsubp
scas
cmc
insb
stos
int
push
push
dec
sub
push
mov
outsl
adc
gs
push
jmp
in
scas
mov
add
add
adc
push
pop
pop
push
adc
mov
mov
mov
xchg
pop
and
jno
gs
xor
xor
mov
repnz
loop
xchg
in
sbb
int
cmp
jb
bound
insl
add
dec
and
repnz
loop
xchg
in
sbb
int
cmp
movd
fwait
mov
jno
nop
jbe
je
cmp
les
push
and
push
inc
mov
add
scas
stc
add
pop
sbb
cmpsl
cmp
fdivrl
lods
sub
in
jge
pop
lret
sahf
pop
jbe
popf
pop
popa
stos
cli
cmovb
cltd
inc
shl
out
je
xchg
fcmovbe
mov
aam
mov
and
dec
dec
inc
jo
loop
sub
pop
sbb
lret
mov
jl
outsl
popa
testb
aaa
pop
jge
pop
sub
mov
pop
les
jbe
dec
fisubrs
jecxz
inc
and
cmpl
pop
insl
fdivrs
popf
es
ds
jne
cmp
subl
or
loopne
imulb
jecxz
push
sti
xor
sarl
sbb
scas
or
in
xchg
inc
test
test
and
lds
mov
insl
lds
mov
imul
loope
std
ds
in
lret
inc
bound
sbbb
stc
adc
jl
and
mov
jg
ja
fldln2
aad
mov
shll
sbb
mov
addb
pop
fdivr
icebp
fcmovne
mov
cmpsl
out
aaa
xor
cmpsl
bound
sub
and
or
jecxz
dec
xchg
pop
adc
lds
adc
xor
repnz
repnz
or
add
in
mov
int
add
sbb
inc
sbb
shl
inc
mov
sbb
cmp
mov
adc
mov
and
dec
clc
push
fnstcw
inc
imul
mov
into
cmp
pushl
cmc
push
add
mov
cmc
pop
inc
insl
cmp
mov
aas
pop
push
cmpsb
outsb
pop
and
fsubrs
leave
ds
sub
sub
lcall
lds
arpl
xchg
push
push
pop
andb
adc
test
repz
xchg
mov
jle
jp
or
stos
push
or
in
cmp
scas
loopne
mov
inc
out
testl
daa
adc
lret
inc
movsl
out
push
xor
imul
test
pop
ja
in
cmp
daa
ffree
xchg
ds
xor
out
cmpl
sti
inc
clc
push
mov
dec
lret
out
hlt
dec
and
pop
and
leave
std
mov
cld
outsb
imul
jmp
sti
fcmovb
push
jg
inc
push
sub
lahf
lea
call
cmp
push
or
xor
int
aas
adc
sbbl
data16
stos
sub
lea
insb
jecxz
mov
and
movsl
fadd
xor
pop
fwait
xorl
cltd
cmp
ja
pop
pop
in
test
mov
test
int3
inc
scas
insb
test
test
icebp
xchg
push
fimull
das
shll
outsb
lahf
and
or
sbb
fwait
ficoml
add
mov
cmpb
shll
out
arpl
inc
std
test
xchg
dec
loopne
push
fisubl
shl
jecxz
dec
dec
push
mov
adcb
cmp
fs
push
sub
sbb
pop
sub
test
aaa
repnz
outsl
push
jae
mov
in
adc
push
mov
jge
xor
rcr
mov
jns
cmc
aad
les
fldenv
sbb
fnstenv
dec
loopw
xchg
jecxz
xor
push
pusha
cmp
mov
mov
cmpsb
fisttpl
ja
ss
cwtl
shr
sub
rorl
mov
test
aas
popf
mov
ja
and
rcll
jno
and
lcall
pop
inc
mov
cmp
lahf
dec
imul
jle
cltd
fisubrl
or
out
adc
xchg
or
mov
mov
pop
jne
mov
mov
movsb
orb
bound
push
fisttps
imul
mov
pop
mul
ficoms
imul
adc
call
push
mov
cmp
sti
mov
cmp
mov
les
loopne
lods
or
pop
inc
push
xchg
into
dec
sti
adc
loop
cld
lret
les
xchg
xor
iret
xchg
fmuls
mov
popf
popa
push
sbb
or
adc
mov
testb
addl
out
jnp
insl
imull
mov
mov
mov
fstpl
std
mov
icebp
neg
push
jne
sti
push
js
fistl
ret
or
stc
mov
xor
jae
mov
jno
clc
mov
sarb
test
xchg
and
popa
mov
mov
push
adc
mov
jecxz
and
movsb
jns
or
ljmp
inc
xor
mov
idiv
lock
std
sub
gs
push
mov
cwtl
ss
mov
imul
outsb
daa
scas
add
aad
or
sbb
inc
or
rcr
inc
rcr
adc
add
dec
xor
sti
mov
mov
loop
iret
loopne
aaa
daa
gs
ror
sub
xor
xor
loop
outsl
adc
out
f2xm1
or
add
mov
leave
mov
xchg
rcr
inc
popa
cmpsl
dec
into
pop
cs
js
adc
push
pop
mov
loope
aaa
xor
nop
cs
dec
insl
fiaddl
insb
push
inc
pop
mov
pushl
push
sbb
sub
shufps
or
or
std
nop
cmp
add
cwtl
aaa
jae
repz
loopne
sti
sbb
pop
pop
pop
popa
cmp
mov
ret
jno
jo
icebp
inc
mov
sub
mov
les
stc
int3
mov
and
jl
and
dec
ret
out
and
popf
push
lcall
lea
out
xorl
push
aaa
push
out
inc
adc
or
push
push
je
dec
add
push
out
mov
push
flds
lea
in
cmp
bound
rorb
and
daa
jmp
inc
fdivp
mov
int
xor
jae
mov
xchg
pop
xchg
sub
mov
dec
inc
xchg
divb
inc
mov
jecxz
into
dec
cmpsl
mov
or
mov
aaa
mov
jns
pop
xlat
scas
mov
sub
jo
lret
cmp
int3
add
push
mov
lahf
cmp
pop
aaa
bound
xchg
mov
sbb
cmpsl
mov
dec
testl
dec
inc
mov
pop
pusha
sbb
loop
push
js
sbb
fcompl
les
andb
inc
cmpsb
pmullw
ficoml
inc
lea
mov
cmp
add
stc
xchg
std
mov
push
jp
dec
jle
push
cmpsb
in
into
jo
dec
mov
and
ja
imul
jmp
data16
cmp
mov
fisttpll
mov
das
aam
sub
lods
or
mov
or
cmpsl
hlt
lock
je
inc
outsb
jecxz
test
jl
mov
mov
das
int
jb
jno
or
or
cmp
call
bound
push
fstl
pop
je
xor
push
std
push
mov
dec
mov
outsl
aam
ljmp
rol
dec
je
ljmp
ret
sbb
out
xchg
shlb
cmp
hlt
dec
mov
enter
xchg
push
push
cld
lods
jno
ss
pusha
pusha
sti
inc
mov
pop
lcall
cmpsl
pushl
lods
pop
mov
add
mov
push
scas
shl
iret
stc
xchg
inc
loope
or
dec
loopne
mov
inc
daa
lcall
jp,pt
aam
push
mov
scas
inc
sub
ret
xchg
mov
clc
jmp
push
push
mov
mov
sbb
adc
pop
jae
inc
repnz
mov
mov
nop
pop
jns
jns
pop
movsb
pop
iret
aaa
mov
subl
rorl
outsl
jle
scas
push
inc
ss
aam
mov
rorb
scas
or
add
pop
inc
add
or
movsl
cmp
mov
xchg
push
test
dec
cmp
mov
jge
shlb
and
dec
or
sub
in
rclb
jbe
cmc
aaa
dec
mov
sub
xchg
addb
les
in
lds
add
jge
xor
cmp
subl
mov
dec
dec
dec
cmp
call
mov
test
mov
int3
xchg
ja
jg
sub
js
js
and
adc
push
lods
enter
push
dec
das
pop
sbb
movsb
std
cli
lods
mov
fdivr
xchg
mov
repnz
mov
and
sbb
popf
stc
lock
test
repz
sarl
mov
test
lods
test
fisttps
mov
xor
es
mov
test
fwait
pop
loop
nop
sub
mov
out
pop
mov
mov
push
mov
mov
hlt
cmp
adc
lret
jecxz
lods
imul
in
stos
mov
sbb
dec
pusha
aas
test
add
repz
fadds
insb
or
aas
daa
repz
add
jp
stos
ljmp
je
aas
iret
loope
in
adc
ja
jae
jno
cmpsb
xchg
pop
sbb
jg
pop
fisubrl
pushf
or
adc
dec
jl
push
repnz
push
in
scas
std
popa
ljmp
movsl
mov
jp
add
push
dec
test
insl
mov
jge
lcall
fs
inc
icebp
xchg
icebp
jge
jl,pn
cmp
jg
hlt
lret
js
iret
push
ret
std
iret
rorl
ss
ret
imul
inc
insb
pushl
mov
ds
xor
lret
mov
cmp
and
cli
xchg
xor
sub
jae
ss
jno
pop
ret
xor
mov
lcall
out
jg
jmp
out
jecxz
lock
jbe
in
in
sub
and
outsb
adc
adc
mov
cltd
mov
cs
adc
cmp
add
sbb
push
mov
lret
aas
shlb
fdivr
dec
bound
loope
movsb
inc
ljmp
stc
mov
popa
cpuid
push
add
outsl
stos
out
adc
add
push
ret
lret
dec
imul
imul
out
cmp
fisttpll
rol
or
sbb
adc
shr
mov
mov
pushf
pop
lahf
mov
leave
dec
and
mov
jg
cwtl
sub
sahf
sbb
rolb
data16
push
add
inc
hlt
cmc
repz
pushf
insb
cs
stos
in
mov
mov
imul
insb
mov
adcl
pop
xchg
pop
cmpsl
dec
andb
cmp
ja
adc
xor
mov
stos
sahf
scas
aad
pop
addr16
xor
jl
outsl
adcb
and
cmc
addr16
sbb
jp
mov
jge
add
and
xchg
fdivs
iret
mov
fimull
sarl
mov
lret
sub
xor
cld
mov
sbb
sarb
dec
call
divb
adc
dec
and
or
mov
lock
pop
flds
adc
cmp
inc
mov
stos
push
daa
add
cmpsb
movsl
lods
lret
fs
je
sahf
js
add
aaa
xor
push
out
sbb
push
test
add
push
int
mov
scas
push
jo
out
jl
loope
lahf
mov
push
imul
bound
stos
fnstenv
jp
lahf
fdiv
je
daa
jo
divl
add
sbb
insb
clc
xor
jp
sbb
repz
xor
lahf
mov
pop
iret
cltd
xchg
fld
fldt
test
add
rorl
fcmovb
sar
stos
das
add
xchg
jecxz
add
adc
repz
aam
stos
mov
adc
pop
jnp
jo
mov
xor
fldl
rcr
arpl
icebp
inc
pop
push
sbb
out
inc
call
test
lds
cmpsl
test
or
jno
pop
mov
add
nop
dec
or
or
mov
jmp
cwtl
aad
loopne
fsubs
outsb
xchg
adcl
lods
dec
jg
mov
shl
hlt
mov
jns
mov
mov
fidivl
cmp
int3
cmpsb
and
mov
adc
sbb
je
mov
outsb
out
or
inc
add
and
nop
mov
pop
mov
sar
daa
or
jmp
push
and
adc
cmp
imul
or
or
repnz
sub
mov
bound
ficompl
in
scas
stos
adc
inc
ret
sub
fisttpl
jge
pop
dec
mov
les
cmp
into
cs
add
cli
push
ljmp
ret
outsl
adcb
push
icebp
mov
sbb
pusha
int3
jo
xor
adc
adc
push
gs
inc
pop
stos
js
movsl
pusha
sub
cmp
xor
int3
lret
or
movsl
ljmp
imul
xchg
popl
test
fidivrs
cltd
inc
dec
testl
or
aad
psubq
outsl
hlt
and
mov
adc
cli
or
aad
cmp
cltd
add
cltd
and
das
mov
jle
fldcw
sub
jl
and
xor
jne,pn
cmp
sub
inc
xor
add
fbld
and
lcall
pop
adc
test
cmp
scas
cmc
and
stc
mov
jecxz
push
xor
call
orl
xor
push
pop
or
insb
xchg
or
mov
mov
add
cmp
mov
in
or
ficomps
sub
and
int
pusha
sub
and
fstps
dec
pop
mov
inc
out
push
mov
lods
xor
mov
sbb
pcmpgtb
xor
mov
or
movsb
stos
movsb
addl
mov
add
jne
sub
and
cmp
aad
add
push
mov
pop
mov
insl
orb
lods
inc
mov
adc
fs
sub
mov
iret
adc
sbb
or
xchg
cmp
xchg
lahf
in
in
inc
push
adc
adc
jo
push
xor
or
stos
mov
push
xchg
mov
adc
cmp
bound
pop
xchg
push
movb
dec
jnp
stc
add
xlat
mov
test
test
cmp
leave
mov
lods
push
cltd
adcb
shlb
or
pop
dec
in
add
stos
and
rclb
lods
push
xchg
inc
nop
jmp
push
jle
push
jmp
mov
jne
in
cld
sub
cltd
iret
push
cs
adc
pminub
roll
xchg
sub
arpl
loop
rolb
scas
je
aam
in
add
lea
bound
fsts
jmp
mov
rcll
call
lods
fistl
notb
test
push
imul
idivb
xchg
jns
in
neg
xchg
push
mov
test
inc
and
or
lods
xor
jno
mov
pop
imul
push
mov
mov
pop
pushf
jbe
fildl
xchg
mov
leave
stos
hlt
pop
adc
bound
loop
data16
and
adc
add
sarb
fisubrl
push
rcll
icebp
scas
sbb
test
mov
call
repz
adc
inc
rcrb
push
not
sbb
mov
pop
popf
pushf
pushf
or
adc
xor
mov
sbb
repz
aad
sub
pop
or
xor
jg
addr16
xlat
inc
rcrl
lods
xchg
jle
cld
pop
out
shlb
hlt
or
and
test
mov
inc
cmpsl
xchg
out
xor
xchg
or
dec
aaa
xchg
or
int3
stc
iret
lea
das
mov
xchg
cmp
ret
adc
jno
or
scas
add
add
mov
test
xchg
sub
push
mov
loop
push
dec
jae
mov
lods
sbb
push
fwait
pop
faddl
lea
push
mov
pop
inc
shr
aaa
inc
xchg
fcmovb
loopne
pop
jge
xchg
mov
subb
outsb
movsb
in
cld
sar
lret
in
jnp
test
lea
mov
jl
js
into
cmp
out
push
pushf
fstps
daa
jno
fmull
cmp
push
or
nop
cld
loopne
pusha
cmpsb
test
ret
das
jo
notl
rcrb
stos
test
mov
cmp
add
movsb
movsl
pop
hlt
ret
loop
xchg
ret
outsl
insb
xchg
mov
pop
xchg
cs
jno
outsb
mov
lods
in
lahf
lret
and
mov
xchg
and
jno
push
jge
mov
xchg
shll
mov
dec
fmul
and
mov
mov
jecxz
in
imul
imul
mov
or
rcrl
into
mov
cld
ret
xorb
das
fneni(8087
dec
out
jg
fmull
adc
push
lcall
leave
cltd
and
dec
adc
fstpl
movsb
jmp
xchg
xchg
nop
mov
setbe
mov
jne
cmp
nop
shll
or
mov
fidivrl
jne
pop
jp
xlat
pop
pushf
push
jns
in
loope
mov
sbb
shll
cli
add
js
xor
outsl
cmp
aam
or
push
cmp
clc
andl
fdivr
sbb
and
lods
dec
mov
rcll
mov
add
mov
lret
or
sub
aad
xchg
xchg
dec
lds
out
pop
push
xchg
lret
bound
push
sub
dec
xor
jle
mov
xor
out
push
dec
mov
and
push
imulb
call
mov
mov
stos
sti
and
inc
aas
mov
jno
xchg
dec
or
mov
mov
xor
fildl
mov
cwtl
test
xor
and
mov
mov
hlt
mov
sahf
inc
xor
inc
inc
pop
dec
dec
mov
dec
cmpsb
fsubrl
jne
iret
mov
stc
pop
pop
movsb
xchg
mov
cmpsl
and
add
shll
les
dec
test
or
jecxz
addr16
rcr
pop
es
movsl
pushf
or
push
sub
jmp
aad
cltd
lods
daa
add
jno
int3
imul
aam
ja
ret
xchg
or
adc
jl
pusha
adc
lock
and
cmp
add
repnz
ds
or
adc
push
and
aam
mov
sbb
lret
divb
into
jns
bound
stos
push
jle
sub
js
cli
xor
mov
dec
loop
je
les
or
lcall
add
std
or
and
fstl
test
aas
xor
lahf
divb
cli
out
xchg
std
and
add
hlt
mov
imul
xlat
fwait
mov
jnp
xlat
mov
sub
add
push
jns
dec
adc
cmpsb
movsb
dec
addb
and
dec
imul
push
sub
fidivrl
cmpl
test
and
and
out
or
jbe
fistps
sub
push
and
dec
test
fs
lret
cmp
inc
lock
xor
dec
lcall
outsb
push
jno
inc
cmp
fs
jno
lret
mov
pop
dec
mov
xlat
ja
dec
out
pop
fs
repz
mov
incb
sbb
mov
push
xchg
jecxz
scas
setns
into
out
adc
inc
mov
popf
pop
rolb
push
jp
pop
mov
mov
cmp
mov
in
push
aas
inc
mov
cltd
mov
decl
cmpsl
repz
aam
dec
fiadds
add
add
add
and
inc
pop
rcrl
push
mov
cli
mov
fdivs
lods
cmpsb
leave
and
and
inc
mov
shrl
jmp
adc
mov
lds
xchg
cltd
add
movsb
imul
pop
hlt
xor
out
in
loop
cwtl
push
enter
push
pop
xlat
stc
cmp
outsl
mov
in
sub
mov
out
ss
jb
fs
test
iret
mov
or
lcall
cmc
xchg
jmp
data16
or
mov
decl
loope
cli
push
inc
mov
sarb
lahf
mov
or
cmp
lds
pushf
xchg
lods
jle
mov
add
fs
jg
adcb
sub
fcomps
adc
pop
leave
jae
cld
out
test
rol
inc
sahf
adc
out
or
or
int3
inc
jne
out
stos
mov
hlt
mov
mov
mov
inc
notb
inc
push
mov
push
and
pushf
call
hlt
cmc
xchg
xchg
dec
adc
add
push
fsubrp
dec
lea
pushf
ja
ljmp
in
movsb
cld
hlt
test
jp
inc
cmp
repnz
movb
or
add
dec
and
repnz
loop
xchg
in
sbb
int
cmp
jb
bound
insl
add
dec
and
repnz
loop
xchg
in
sbb
int
cmp
push
data16
insl
imul
lods
popf
repnz
jmp
xchg
in
sbb
iret
inc
cmp
xchg
or
add
mov
loop
sub
lea
and
xor
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
insl
ret
shll
cmp
xchg
pop
cmpsb
sbb
pushf
sti
cmpsb
popf
add
pop
add
or
push
or
pop
ljmp
add
add
add
add
add
add
test
add
nop
add
flds
add
daa
add
add
push
add
add
add
add
xor
pop
add
add
add
add
pop
add
pop
or
or
add
xchg
cmc
add
add
ja
out
push
add
xor
add
add
add
add
addb
add
add
add
add
add
add
fiaddl
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
pop
add
add
add
add
add
add
sahf
add
add
lods
add
add
add
add
add
add
add
add
cmpsb
add
add
add
add
add
add
repz
add
add
cs
add
add
add
add
add
pop
or
add
add
add
add
jnp
mov
mov
add
addb
or
cmp
fiaddl
cmpsl
add
add
add
add
add
add
add
pop
add
pop
add
aaa
add
add
add
add
js
mov
sbb
add
add
pop
add
add
add
jecxz
and
add
add
add
add
testl
nop
add
jecxz
add
pop
add
add
add
sub
add
add
add
addb
add
or
add
add
add
pop
add
add
add
les
jae
xchg
add
add
add
add
add
xchg
add
cmpsl
add
add
add
xor
cltd
add
add
sbb
adc
flds
sub
sti
add
cs
add
add
add
add
add
add
push
add
add
add
add
cmc
or
lock
clc
add
add
add
xor
add
mov
cltd
add
add
add
add
add
add
push
add
add
mov
add
add
add
add
add
add
mov
add
out
sub
add
add
xor
out
sub
add
add
add
add
pop
add
lcall
add
add
add
add
add
add
add
lock
add
push
add
scas
add
add
add
pushf
add
jne
cmpsb
add
add
xchg
inc
add
les
pop
add
cltd
add
add
add
add
add
jge
cmpsl
add
add
add
add
pop
add
cltd
add
faddl
push
add
add
add
add
add
push
add
add
pop
or
jns
push
add
add
dec
aas
movsb
dec
pop
lcall
imul
xchg
insl
test
sbb
xlat
imul
mov
fwait
xchg
sbb
fstpl
mov
pop
loop
sahf
aad
fidivs
inc
xor
mov
adc
lds
clts
outsl
push
lds
adc
das
pusha
andb
xchg
xchg
and
movsl
cmp
jb
push
andb
adc
push
sbb
or
push
ja
lret
push
loopne
popa
mov
fistps
ljmp
bound
in
negl
mov
jge
mov
add
cld
data16
fldl2t
es
sub
jmp
popa
clc
jne
cwtl
cltd
cltd
fisubl
jge
push
jle
rcl
or
xchg
cmpsl
xor
jnp
adc
call
dec
dec
mov
mov
xor
test
enter
inc
out
ret
out
aaa
xchg
mov
call
pop
imul
cli
sub
lds
adc
xorps
or
cld
xchg
or
dec
iret
cmp
sub
stos
ss
ljmp
mov
add
fdivs
mov
mov
add
sarl
adc
js
mov
call
cltd
gs
aam
call
sbb
mov
xor
add
jno
gs
cli
stc
add
sbb
test
inc
fmuls
ljmp
and
pop
or
and
mov
xchg
adc
dec
gs
loope
mov
lods
subl
jmp
popf
or
js
int
lret
cmp
fstpl
out
mov
mov
je
add
push
push
int3
mov
sbb
jg
mov
push
push
jmp
mov
test
enter
adc
scas
cmp
push
ss
xor
pop
inc
stc
lret
pop
fcmovnb
imul
imul
xchg
das
enter
push
lds
cmp
test
xor
add
ljmp
ds
xor
std
mov
repz
in
stos
loop
sbb
cmp
pop
repnz
jae
movsl
jne
rclb
icebp
clc
sar
sbb
repz
repz
sub
pushf
out
rcrb
inc
rclb
enter
out
cmp
sbb
push
sub
insl
ret
mov
call
push
inc
xchg
xor
push
lcall
sub
sti
mov
bound
or
in
outsl
or
push
and
in
clc
rorb
into
add
insb
and
imul
pushf
mov
addr16
pusha
add
leave
bound
movsb
and
push
and
inc
inc
mov
pop
orl
sub
out
push
push
movsb
push
mov
pop
add
adc
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
