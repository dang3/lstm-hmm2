mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
add
jle
add
xchg
pop
cmpsb
push
fistps
sbb
jnp
dec
mov
mov
push
out
push
out
cs
ds
sahf
and
aas
rorb
pop
mov
mov
cmpsb
call
notb
add
mov
das
mov
mov
push
and
or
cmp
jle
sub
or
test
pop
sub
jb
or
push
xchg
fcomi
jmp
es
scas
or
pop
lahf
loope
add
shlb
rcll
adc
and
mov
dec
aam
mov
outsl
aam
cld
push
orb
add
jno
adc
pop
dec
loope
or
es
adc
int3
pxor
out
das
mov
sar
add
mov
sub
jmp
das
popf
mov
jbe
push
rorl
cmpsb
jge
sahf
outsl
sbb
fcmove
push
pop
lret
xchg
ja
adc
stos
into
ss
es
out
lock
loopne
inc
sahf
lahf
jmp
scas
pop
jge
pop
scas
outsb
xchg
adc
cs
xchg
cmp
dec
daa
ss
loopne
out
ja
scas
push
ficompl
scas
sub
sub
adc
pusha
in
imul
inc
lahf
aas
mov
or
jge
and
xor
sub
mov
addr16
jg
inc
mov
lahf
pop
mov
sbb
fldt
ljmp
cmp
insl
mov
dec
fcompl
ljmp
iret
ds
das
fidivrs
out
paddd
mov
jg
dec
mov
mov
push
out
push
ljmp
iret
ds
das
fidivrs
out
paddd
mov
jg
dec
mov
lods
or
popf
inc
fs
dec
add
lea
and
sahf
or
stos
sbb
sbb
scas
add
in
push
js
jecxz
mov
or
lret
mov
mov
mov
jg
cmp
lahf
sti
mov
xchg
test
mov
adc
jnp
cli
add
mov
das
jnp
in
mov
inc
enter
mov
sub
ret
fidivs
movsl
mov
sub
sbb
loop
mov
jl
and
iret
aam
bound
or
out
adc
std
clc
or
test
add
inc
scas
aaa
imulb
pop
xchg
test
pop
or
pop
iret
jl
adc
lcall
je
mov
daa
and
ret
dec
mov
sub
xchg
inc
xor
pop
sti
mov
mov
sahf
mov
out
testl
out
and
enter
movb
ret
sub
cli
scas
inc
push
nop
dec
adcb
cmp
insl
jbe
mov
sub
rcll
push
xlat
sbb
mov
out
inc
sarl
add
push
fcoml
lret
or
and
mov
and
repnz
in
adc
inc
xchg
addb
sub
fdivp
mov
insl
aaa
test
inc
sub
int
adc
jo
add
and
mov
jge
mov
mov
mov
fdivl
cli
je
icebp
pop
inc
mov
cld
jp
mov
cltd
cmp
mov
imul
sbbb
inc
push
ss
lret
xchg
test
sub
mov
ret
inc
pop
mov
and
adc
push
sbb
add
and
add
jbe
xchg
push
in
xchg
and
ss
push
mov
pop
arpl
int
xor
inc
dec
and
js
pushl
mov
dec
popf
push
jnp
sti
mov
shl
iret
fistpll
adc
fldenv
add
ja
out
add
sub
mov
inc
loop
mov
sbb
push
jno
test
divl
sbb
repz
je
pop
mov
test
add
je
cli
test
xlat
sub
mov
jbe
scas
push
setns
dec
mov
jp
inc
std
pop
mov
or
stos
fidivl
sbb
adc
sub
inc
jecxz
mov
int3
add
repz
shlb
movsb
push
negb
and
mov
hlt
add
imul
movsb
test
pop
dec
hlt
xchg
jnp
push
or
sahf
sub
mov
loope
mov
mov
jb
imul
add
addr16
fwait
inc
mov
push
adc
cli
shl
or
dec
cmpsb
jp
add
or
jb
test
cmc
push
sti
lret
or
movsb
cmc
dec
inc
outsb
stos
es
ficompl
stos
and
fsts
dec
aaa
inc
ret
pushf
std
out
mov
call
xor
pop
jae
shlb
and
mov
adc
addr16
cmc
mov
add
out
lock
cmp
push
jnp
or
pushf
or
pop
pop
leave
xor
int3
mov
inc
stos
pop
mov
or
int3
pusha
mov
clc
loop
ret
mov
popa
xchg
mov
rcr
cwtl
push
add
mov
and
pop
mov
fwait
stc
dec
icebp
loopne
cmp
push
data16
add
jbe
rcrb
ss
dec
mov
leave
aas
test
call
inc
add
scas
js
ljmp
mov
jnp
mov
stc
jbe
bound
jb
adc
inc
gs
xchg
cmpsb
sub
cmpsl
mov
daa
push
mov
int3
fwait
movsb
arpl
push
scas
and
cmp
xor
repz
jb
fists
std
sbb
sbb
icebp
xchg
clc
mov
loope
jb
or
xchg
loope
clc
cmc
aaa
lock
mov
sbb
out
pop
scas
xchg
sub
jb
sbb
adc
shrl
ja
jne
testb
mov
fnstcw
inc
cmp
nop
fidivrl
mov
scas
pop
shrb
sub
lret
lret
out
mov
jns
xor
nop
jp
in
pop
add
enter
call
or
xchg
xchg
ljmp
lret
ret
addl
dec
test
push
addr16
pop
js
and
or
mov
dec
lock
mov
stos
cmc
xchg
adc
ss
xchg
adc
outsb
push
sbb
push
add
daa
xchg
push
cmp
mov
daa
or
jno
adc
jle
cmp
mov
push
fldl
fwait
adc
mov
outsb
lds
enter
cmpsl
loope
test
loop
adc
mov
popf
pop
call
cmp
roll
gs
cs
es
or
ror
test
aad
mov
cmp
ror
pop
mov
and
bound
in
add
adc
ljmp
movsb
fcoms
mov
add
das
push
lret
loope
leave
enter
rcl
xlat
mov
test
mov
or
adc
leave
jl
xlat
inc
jg
mov
popa
dec
outsb
loop
adc
scas
rcll
xchg
cli
pop
pop
gs
lods
cmp
xchg
mov
push
xor
aaa
popf
mov
pop
cli
into
inc
mov
jne
daa
sti
dec
ljmp
lods
pushf
add
xchg
and
jo
mov
roll
loop
and
std
dec
pop
adc
xlat
rcr
mov
and
fistps
fdiv
push
pushl
or
sbb
mov
imul
sbb
popf
orb
inc
gs
fs
cmpsl
outsl
popf
bound
inc
cmp
ret
push
xor
push
push
cmp
push
and
daa
cmpsb
loopne
lods
mov
mov
sar
lcall
xor
jge
sbb
xor
mov
ret
sbb
fisttpl
popa
pushf
into
test
stc
out
fs
cmpsl
addb
mov
jnp
cmp
hlt
push
pop
cmp
repnz
pusha
leave
jae
pushf
stos
mov
cwtl
scas
sti
inc
mov
nop
xor
mov
dec
loopne
jp
cmp
or
xor
in
adc
into
clc
or
xchg
add
inc
push
ss
inc
jns
sub
or
push
sub
cli
movsl
lcall
dec
sbb
cmpsl
sbb
add
stos
loop
jns
lock
jne
addr16
fidivl
pop
mov
jbe
push
xchg
pusha
jbe
sub
pop
cwtl
xchg
pop
mov
and
repnz
dec
xlat
cwtl
inc
mov
imul
push
fldl
sub
lods
ret
into
in
inc
jne
std
mov
jle
cmp
dec
pop
les
out
fadd
push
cmpl
paddb
cmp
popa
scas
cltd
jae
scas
mov
xchg
std
cmp
xchg
mov
imul
push
test
sbb
jge
and
or
jbe
inc
in
inc
pop
out
out
push
stos
cmp
dec
jp
lea
arpl
jecxz
and
pop
add
dec
adc
dec
pop
scas
xchg
jnp
mov
inc
pop
cltd
push
sbb
sahf
xchg
rcll
int
imull
push
test
out
out
and
lret
mov
int3
inc
loope
outsl
es
sbb
pop
stos
or
add
rclb
mov
mov
loope
xchg
xchg
sbb
cmpsb
sub
fsubs
out
dec
jl
popa
fstpt
movsl
adc
pop
mov
xchg
cmp
inc
xchg
bound
push
loope
sbb
or
mov
das
jg
sbb
sub
push
dec
imul
sbb
pushf
jmp
lods
gs
sub
les
xor
lods
dec
dec
mov
pop
jle
in
shrb
test
sbb
in
fldcw
mov
les
mov
push
push
imul
mov
lods
es
icebp
clc
lock
push
add
inc
xor
or
lea
pop
xor
or
xchg
aas
jmp
ss
adc
lds
das
jmp
pop
xor
insl
mov
jae
cmp
insb
imul
scas
enter
hlt
inc
cmp
mov
loope
sbb
push
inc
lea
dec
out
and
movsb
cmpsl
mov
xor
inc
repnz
loope
sbb
enter
in
mov
out
mov
push
inc
mov
mov
mov
jl
andl
lret
pop
stos
mov
jge
sti
jne
xor
out
or
pop
lods
sar
je
test
sbb
push
out
inc
add
fisubrs
dec
stos
pusha
inc
sarb
jne
jmp
jbe
fsubrs
es
mov
and
xor
jg
je
or
rcll
repz
xor
es
aam
sbb
sbb
loope
sahf
cmp
mov
mov
pop
pop
xchg
or
lods
mov
ljmp
sbb
and
pop
push
sahf
shlb
xchg
addr16
dec
mov
call
push
pushf
sahf
push
popf
fdivp
push
les
xchg
imul
lahf
lcall
loop
in
andl
add
cmp
cmp
pusha
in
xor
pop
mov
sub
ds
mov
jne
inc
inc
push
lahf
jge
aad
pop
xor
leave
mov
enter
out
jbe
xor
lods
jl
movsl
clc
cmp
adc
lock
arpl
scas
dec
loop
mov
add
adc
and
xor
add
add
stos
imul
imull
mov
faddp
andl
xchg
mov
fucomp
pop
lret
mov
adc
hlt
dec
addl
dec
jle
insb
and
out
call
or
call
lret
dec
sbb
aam
cmpb
sbb
in
mov
sbb
insb
leave
divb
lds
lods
pop
scas
in
cli
loopne
ret
es
mov
xorl
pop
pusha
dec
or
jo
popa
fisubs
mov
jmp
insb
shl
shl
push
pop
stc
iret
or
les
pop
es
andb
cld
push
lods
fstl
je
pop
adc
fwait
inc
cmpsl
inc
pop
je
mov
inc
stc
rcl
jp
pop
mov
mov
dec
jne
inc
bound
aam
sbbl
adc
sub
cmp
in
into
frstor
sub
fadds
cmp
pop
pop
mov
ja
cmpsb
xchg
ret
ret
gs
out
mov
cmp
insb
pushl
pusha
pop
cmpsl
clc
cmp
xchg
mov
push
dec
mov
lods
mov
xor
push
sbb
inc
mov
or
xor
in
xor
js
pop
out
mov
pop
in
push
mov
int3
pushf
xor
adc
push
sbb
xor
pop
push
mov
push
int
push
sbb
aad
orb
testb
pop
and
cvtps2pi
sbb
sahf
and
xchg
in
push
and
aas
push
inc
int
xor
xchg
mov
call
pop
sti
scas
mov
mov
pop
fsubs
leave
push
rcl
mov
test
in
add
sbb
push
hlt
push
fmul
mov
popa
pushf
ficomps
insl
pop
jne
insl
ja
mov
xchg
xchg
jmp
xor
jo
push
xor
aam
ficomps
mov
dec
repnz
add
add
daa
ret
aad
jg
and
push
imul
test
mov
lock
push
stc
push
out
dec
cs
and
xchg
loope
sbbb
dec
fs
aad
cmpsl
mov
mov
into
xchg
vmovhps
int3
xchg
sub
icebp
add
shll
adc
cmp
movsl
roll
fnstcw
pop
aaa
out
lds
rolb
ftst
inc
cmp
adc
test
mov
cltd
cli
jns
jl
addr16
in
je
dec
shl
pushf
pushf
pop
xchg
aas
mov
mov
jno
or
rolb
idivb
aas
lcall
data16
xor
scas
mov
insb
jo
addb
jl
lahf
mov
loopne
cs
pop
sbb
nop
ror
sub
call
arpl
call
cmp
sub
leave
bound
dec
icebp
xor
mov
iret
sbb
xor
test
out
gs
sbb
rol
xchg
test
lods
push
sbb
mov
xor
arpl
subl
pop
mov
or
lret
test
repz
int
adc
testb
roll
jge
inc
push
jns
jb
aas
mov
imul
push
shrl
mov
mov
add
addr16
sbb
or
incb
and
inc
outsl
pushf
popf
cmp
addr16
mov
pop
mov
insl
loope
test
addr16
cltd
movsb
mov
xchg
mov
aam
sahf
ss
into
mov
je
xlat
sarl
lret
insl
mov
inc
mov
jl
sbb
push
mov
lcall
cmp
lds
lcall
iret
imul
mov
push
testb
fnstsw
mov
cmpsl
pushf
pop
adc
jp
push
int3
imul
scas
add
pop
lret
in
pop
icebp
mov
mov
outsb
out
sbb
std
repnz
cmp
sub
out
sbb
fs
popf
sbb
inc
movb
mov
pop
jmp
sub
dec
ss
clc
sbb
vpsraw
je
ds
stc
or
es
pop
js
mov
mov
mov
repnz
push
cmp
cmp
jmp
mov
pop
arpl
rclb
or
adc
ja
loop
adc
fs
into
fadds
data16
sub
fisttps
mov
xor
aas
xor
fwait
sbb
mov
test
dec
arpl
pop
sub
mov
shr
cltd
out
arpl
out
nop
push
sbb
sbb
rorb
shlb
push
push
jecxz
mov
mov
xor
je
xchg
jae
jl
js
scas
or
add
adc
dec
call
inc
jo
iret
xchg
leave
loope
sbb
mov
cmc
ss
scas
mov
add
jnp
outsl
pop
sahf
pushf
xor
sbb
push
cmp
pop
sub
mov
lods
outsb
mov
add
pusha
loop
aam
lret
std
loopne
mov
pushf
dec
inc
xlat
mov
lods
adc
mov
mov
add
hlt
jg
pop
add
insl
and
inc
jb
test
sub
inc
shlb
sti
cmp
push
jb
mov
fsubrs
adcl
inc
dec
xor
test
daa
mov
or
mov
sbb
and
push
lds
add
stc
pop
jmp
iret
sub
jae
inc
sbbb
push
push
push
and
das
add
mov
popf
scas
out
clc
sbb
pop
xlat
js
mov
sbb
hlt
inc
push
mov
mov
scas
sbb
mov
ficompl
sub
jns
cmp
mov
mov
ds
xchg
dec
or
mov
cmp
aas
xor
hlt
inc
mov
shll
arpl
push
inc
imul
daa
out
add
mov
xor
faddl
aam
insl
sbb
jp
sbb
dec
pop
pop
inc
nop
jmp
mov
mov
or
push
popa
sub
jae
loop
stos
popf
hlt
mov
cmc
leave
aad
push
addr16
xor
cli
mov
pop
mov
addr16
sti
mov
or
ss
add
sub
sbb
gs
xor
lcall
adc
rolb
aas
movsl
jno
and
ljmp
xor
mov
xor
aas
sbb
push
and
mov
out
or
dec
nop
lods
push
inc
add
jns
popa
mov
aad
push
bound
mov
mov
mov
xor
in
imul
popa
mov
mov
jo
pop
shll
lods
dec
notl
xchg
cmpsb
icebp
into
push
out
test
jno
jg
sub
into
mov
loope
sar
xchg
pop
cmc
rolb
mov
mov
xor
dec
mov
jg
imul
mov
addl
add
test
test
in
dec
xor
sub
loope
out
mov
pop
lret
in
divl
aad
xchg
pop
scas
pusha
call
jne
or
adc
lcall
or
insl
movsb
fcomp
pop
cmp
xor
outsb
push
inc
and
xchg
leave
in
mov
xor
inc
mov
aaa
fadds
lods
mov
movsl
sub
or
pusha
pushf
addb
dec
or
and
sahf
mov
mov
lods
pop
sbbb
dec
adc
push
xchg
pop
les
dec
lods
in
fwait
pop
in
ret
jmp
icebp
cmp
push
xchg
mov
mov
xchg
das
popf
xchg
mov
fwait
sarb
popa
cmp
xor
fucomp
movsl
outsl
pusha
dec
or
dec
jns
fdivrl
lods
and
sub
repz
dec
pop
pop
lcall
fcoms
mov
sti
mov
jnp
fldt
orl
pusha
popf
pop
push
cmpl
push
pop
mov
popa
or
mov
addr16
or
or
std
jne
dec
mov
mov
or
test
icebp
sub
test
lret
cmpsb
test
dec
enter
xor
js
call
ret
xchg
lret
sub
mov
inc
fxch
xor
jmp
cmp
add
int
scas
leave
jnp
mov
jmp
pop
add
scas
lods
cli
lods
mov
sub
mov
mov
scas
mov
jmp
push
lock
sbb
pop
outsb
aaa
mov
sub
mov
int3
nop
roll
ja
dec
fs
jle
push
mov
pop
push
dec
mov
mov
mov
insb
out
sarl
dec
mov
inc
mov
outsl
pop
scas
dec
or
nop
es
call
pop
push
sarb
xor
fildll
lret
or
or
sbbl
movsb
aad
mov
push
mov
ret
out
mov
jnp
sub
call
push
pop
sub
es
stc
test
push
pop
lock
pop
add
pop
out
xorl
sub
push
movsb
clc
out
roll
xchg
and
push
scas
ret
repz
notl
add
popf
inc
xor
mov
and
sub
stos
inc
adc
pusha
call
lods
js
jae
popf
add
or
imul
pop
cltd
cmp
loopne
ret
mov
scas
push
outsb
push
mov
jno
adc
xlat
mov
xor
insb
loopne
and
xchg
inc
stos
or
cwtl
fdivs
pop
imul
out
ja
enter
imul
lret
js
dec
mov
xchg
pop
in
pop
sbb
nop
dec
stc
je
cmpsl
test
loopne
mov
push
jb
mov
xor
mov
add
loopne
push
loope
cld
push
mov
loopne
dec
imul
je
add
sub
fs
adc
sub
pop
lcall
and
orl
xchg
push
jge
adc
aaa
scas
imul
nop
mov
sbb
sbb
loope
fwait
mov
mov
push
push
je
outsl
fisubs
stos
stos
or
xchg
mov
addl
dec
adc
ret
xchg
xor
out
add
test
shl
cmp
jg
cmp
popf
and
add
ret
add
into
cmp
pop
jno
and
mov
orb
insl
and
repz
shll
adc
and
jno
jp
mov
xchg
lock
push
inc
negl
add
mov
push
dec
addb
aam
aaa
mov
jb
push
push
jne
in
cmp
movaps
fsubl
push
sub
in
pop
ljmp
lods
mov
lea
jmp
inc
enter
dec
add
cmc
frstor
sub
mov
jns
stc
push
std
xor
cmp
mov
mov
loopne
mov
ret
mov
adcb
movsl
xlat
nop
ror
stos
ljmp
test
push
notl
rcll
xor
lret
mov
xor
mov
lods
shrb
pop
mov
es
jns
popa
test
shlb
fmuls
mov
sub
bound
cs
ds
das
fidivrs
out
paddd
mov
jg
dec
mov
mov
push
out
push
ljmp
iret
ds
das
fidivrs
out
paddd
mov
jg
dec
mov
mov
pxor
ljmp
iret
aas
das
fidivrs
out
cli
sbb
dec
mov
stos
jb
out
push
lahf
push
out
push
ljmp
iret
mov
xchg
inc
paddd
out
add
inc
and
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
xor
cmp
add
pop
pop
dec
mov
lea
and
std
shr
and
adc
inc
jge
inc
mov
mov
lods
and
repnz
std
shr
and
adc
insl
jb
inc
ja
pop
mov
fcoml
stos
mov
mov
dec
add
dec
stos
push
stc
mov
stos
lods
ret
push
jge
or
push
inc
cmpsb
add
cmpsb
push
mov
rcrb
subb
jge
insl
std
sbb
jbe
mov
add
mov
mov
lea
mov
mov
xor
sbb
adc
mov
aaa
insl
jl
clc
lods
sbb
add
xchg
shl
loop
in
sarb
outsb
jb
sarl
pop
pop
out
pop
mov
or
pusha
int
rorl
mov
or
inc
fnstsw
mov
mov
xchg
xor
bound
dec
inc
jge
jmp
mov
repnz
in
fbld
inc
bound
jnp
clc
add
or
mov
sbb
into
jecxz
repnz
inc
pop
push
dec
addr16
jle
bound
aaa
pop
cmp
pop
cld
jecxz
sub
popf
jecxz
pushf
int
cwtl
cmpsl
sahf
inc
outsb
xor
insl
push
jle
adc
inc
jge
insl
mov
mov
repnz
std
shr
and
adc
inc
jge
insl
mov
mov
repnz
std
shr
and
cmp
inc
test
rolb
cmp
xorl
clc
inc
cld
enter
pop
xchg
push
daa
adc
push
or
lock
or
push
cmp
imul
xchg
push
std
pop
insl
xchg
out
or
das
stos
push
rcr
jb
mov
sub
and
mov
mov
jl
scas
dec
dec
fidivs
jg
call
mov
lods
and
scas
mov
shl
sub
inc
cmpsb
imul
loop
insb
mov
stos
inc
mov
fwait
and
push
lret
xlat
adc
inc
int
stos
sub
cwtl
in
test
mov
neg
lods
or
xchg
xchg
sub
test
and
pushf
jmp
push
xchg
repz
inc
clc
dec
mov
cli
out
xor
cmp
xor
aaa
movsl
inc
call
nop
loope
out
outsl
cs
inc
addl
popa
enter
repz
inc
xchg
pop
hlt
sub
adc
fmuls
inc
cmp
dec
xchg
mov
add
ds
in
cmpl
cld
push
sbb
inc
fsubrl
pop
push
test
and
jnp
push
lahf
movsb
pop
aad
push
bnd
mov
inc
imul
xchg
mov
xlat
xor
outsl
adc
push
daa
cli
daa
inc
xchg
push
inc
pop
push
aam
bound
out
lds
adcl
rolb
faddl
jmp
adc
sbb
into
js
mov
fstps
mov
sarb
es
incb
sbb
movsb
arpl
outsl
gs
mov
jbe
das
in
sbb
mov
fwait
in
in
mov
inc
ljmp
cmp
mov
xchg
stc
pop
mov
gs
jmp
mov
lods
and
mov
inc
pop
dec
and
outsb
push
repnz
xchg
je
xor
pop
lock
leave
dec
push
sub
out
adc
lahf
jns
hlt
jns
adc
lret
add
cli
jle
xchg
lock
add
call
inc
push
xor
mov
bound
scas
mov
loop
cld
sbb
push
dec
cmpsl
dec
mov
mov
pop
jle
mov
mov
xchg
loop
cwtl
or
mov
mov
filds
imul
or
in
pusha
adc
xor
push
mov
dec
std
xlat
mov
jp
fistpll
psrld
ds
mov
popf
add
fwait
xchg
repnz
inc
add
xchg
ficomps
mov
jnp
dec
mov
jle
and
std
push
pop
ficoms
sbb
test
fsubrl
lret
xor
mov
push
in
sbb
and
mov
out
ds
jmp
lea
in
into
mov
or
xchg
or
pop
loop
cmpsb
sub
sub
xor
dec
jecxz
in
popa
test
sub
lods
cmp
xchg
adcb
repnz
fdivs
mov
in
jg
fimull
enter
cltd
dec
in
dec
das
in
sub
add
xor
cwtl
xchg
insb
fwait
xorb
cwtl
test
loop
add
cwtl
pop
cltd
outsl
pop
sbbl
xor
adc
jmp
js
pand
cmpb
inc
add
stc
leave
rcrb
and
and
ljmp
jo
out
daa
cs
xor
mov
pop
pop
push
les
mov
pop
lcall
dec
sub
int3
or
push
xchg
popf
pop
mov
xor
adcb
mov
push
adc
mov
inc
rcrb
cmpsb
repz
ds
mov
imul
movsl
fndisi(8087
les
and
aas
cmp
jo
xlat
cwtl
add
insl
out
push
movsl
outsl
pop
packsswb
sbb
fxtract
les
pop
arpl
pop
popf
add
and
imul
and
mov
fldcw
jae
push
jns
std
mov
scas
xchg
adc
daa
iret
dec
dec
sbb
pop
sbb
push
sbb
pushf
in
lret
cmp
es
xchg
adc
movsb
loope
loop
sahf
xor
mov
mov
hlt
fistpl
cmpsb
lods
out
es
movsb
int3
mov
enter
in
sbb
inc
jb
andb
pop
push
test
jmp
and
or
pop
xchg
xchg
sub
insb
jmp
aam
fsubrs
mov
andb
dec
mov
cmpxchg
or
sub
dec
xchg
ret
xchg
bswap
out
loop
mov
sbb
and
pop
pop
mov
testl
mov
repnz
inc
fiadds
jns
mov
mov
hlt
in
data16
or
xchg
push
out
sub
mov
xchg
mov
loopne
cmp
push
icebp
mov
dec
xchg
addr16
je
mov
mov
movsb
sti
inc
repz
adc
adc
fdiv
and
clc
sub
sbb
sbb
sahf
daa
repnz
jbe
xor
dec
rol
push
je
add
inc
movsl
and
mov
push
jo
add
shlb
dec
push
and
mov
pop
lret
add
mov
or
scas
sbb
xor
popf
cld
enter
movsl
xlat
lret
outsb
or
pop
or
mov
mov
or
aad
jno
inc
out
adc
cmp
aam
fisttps
or
cltd
lock
xor
pop
sub
getsec
leave
ljmp
adc
enter
scas
push
std
enter
add
shll
lods
jb
push
inc
dec
mov
ret
out
jge
mov
fidivs
data16
jl
imul
cmp
mov
sub
loopne
cmpb
rcl
insb
inc
adcb
dec
ret
mov
ja
pushl
out
jg
lock
mov
or
cmp
testb
mov
pop
bnd
rolb
xchg
and
cld
xchg
push
mov
shrl
dec
dec
mov
rcl
and
ss
cmp
movsb
pop
and
push
iret
xchg
test
adc
insb
in
push
stos
adc
enter
sbb
lods
jb
lods
push
mov
add
std
xchg
mov
push
add
add
ret
or
mov
sbb
cmpsl
clc
push
mov
mov
scas
jmp
repz
popa
jne
out
data16
sbb
data16
loop
scas
sbb
sub
mov
sub
sub
hlt
cmp
xlat
in
shll
xchg
push
and
in
jne
outsl
add
test
aam
je
imul
lods
int3
pop
mov
test
jno
lods
pop
lds
jmp
lahf
loopne
cwtl
nop
xchg
push
rorb
jb
cmpsb
insb
hlt
mov
daa
mov
adc
sub
fisubs
inc
hlt
test
jg
aas
in
sarl
inc
mov
pop
popa
cmp
xchg
mov
jle
add
mov
add
cltd
or
sti
rcrb
mov
xchg
mov
mov
mov
and
xchg
movsl
ret
fstps
in
mov
sbb
int3
jb
repz
xor
dec
pop
dec
mov
inc
into
or
int
push
clc
dec
xchg
or
lret
adc
mov
mov
lcall
fucomi
adc
data16
jns
lahf
sub
jp
inc
sar
rorb
imul
mov
leave
pop
notb
or
movsb
cltd
in
outsl
fbld
push
pop
jg
dec
fs
shl
fmull
pusha
sub
dec
or
pop
inc
and
add
pusha
stos
addr16
addr16
gs
push
push
insb
or
nop
jbe
jnp
rcr
fdivrl
in
les
inc
pop
push
xor
and
ja
mov
and
das
adc
jg
lret
pop
inc
inc
jns
adc
xchg
aaa
or
mov
pop
inc
mov
adcb
xor
cli
sbb
seto
adc
inc
ret
mov
mov
stos
in
cli
fdivrs
aas
jb
std
cs
dec
dec
int3
pop
icebp
jge
push
inc
ss
or
lds
cmpsl
push
jb
xor
cmp
sub
ret
notl
xchg
test
outsb
loope
dec
xchg
xor
jo
cmp
sti
adc
push
repnz
rcrb
jno
repnz
mov
ret
and
mov
xchg
sbb
mov
xor
push
aaa
hlt
pop
cltd
mov
cmp
adc
outsb
sbb
or
mov
dec
rorl
inc
int
sub
dec
mov
lods
jge
and
pop
into
popa
jno
mov
xchg
int
push
xchg
into
pop
push
rorb
mov
jne
clc
sbb
jae
fidivs
jle
addr16
sub
icebp
leave
jb
into
jl
cmp
dec
fcoml
pop
mov
push
jg
and
nop
rcl
mov
ljmp
push
std
pop
scas
ret
adc
cmpsl
sub
xchg
fwait
jecxz
aad
jo
rclb
ss
cmpsl
dec
fsubs
aad
es
addr16
aad
jne
outsl
popf
mov
sbbl
add
fdivs
inc
out
and
shlb
stos
mov
mov
lock
fs
push
pop
push
loopne
cli
inc
and
ret
mov
call
cmpsb
pop
nop
and
mov
lea
scas
sbb
cmpsb
leave
lods
push
mov
push
sbb
dec
mov
jo
shrl
inc
mov
pop
sbb
add
jl
leave
jmp
jmp
dec
int
insl
dec
test
jg
dec
xor
outsb
ljmp
mov
dec
enter
cmp
mov
cmp
pusha
jge
cmp
or
add
test
xchg
outsl
sub
outsb
add
leave
mov
and
or
lock
shll
push
arpl
in
jo
stos
ret
inc
push
mov
mov
mov
ljmp
jo
lods
mov
ret
or
pop
adc
jp
mov
mov
sbb
jns
scas
cld
jecxz
xor
xor
inc
into
movsb
xchg
out
dec
movsl
sahf
xor
roll
mov
pushl
fwait
sbb
loopne
cmp
pop
test
rorb
std
push
mov
dec
cmp
adc
xchg
cmc
cmpsb
push
aam
jno,pt
mov
cld
mov
adc
lret
and
ret
mov
hlt
xchg
or
sub
repnz
lcall
push
decl
add
fstpl
test
lock
adc
cmp
in
iret
lock
push
int
iret
jnp
or
jmp
fs
fwait
xor
adc
jg
mov
xor
enter
add
sbb
nop
dec
aas
jmp
fbstp
adc
cs
adcl
or
sahf
dec
jmp
je
add
jg
sahf
in
mov
fcmovu
mov
test
loopne
lea
mull
mov
pusha
mov
cld
movsb
jne
jp
jp
mov
cmp
pop
add
jns
outsb
dec
fwait
xor
out
xor
getsec
rcrb
mov
jne
or
icebp
pop
cmc
dec
jmp
jge
orb
or
movsb
clc
cld
lds
cmp
and
hlt
mov
lret
and
lea
mov
das
pop
xor
out
mov
xchg
mov
mov
adcl
sub
movsl
icebp
lea
into
add
popf
xchg
jbe
add
or
jge
xor
lahf
adc
pop
jg
pop
out
enter
pop
sub
in
fisubs
push
daa
dec
fldenv
dec
test
jno
stos
push
int
inc
das
icebp
into
xchg
mov
ljmp
es
cld
dec
pop
std
pusha
lret
stc
sbb
and
cwtl
push
test
ljmp
inc
std
rcll
daa
lock
loop
movb
sub
adc
gs
icebp
pop
fistpl
sub
jecxz
xor
jo
xor
ds
mov
cmp
cmp
mov
call
or
addl
jg
and
popa
pop
dec
dec
push
and
clc
pop
ljmp
enter
into
sub
cli
sub
cltd
shrl
inc
jno
push
mov
cmp
adc
mov
dec
out
das
mov
pushf
sahf
pop
add
mov
lret
or
xchg
xchg
push
sbb
mov
inc
sub
out
sarb
neg
push
push
mov
test
jg
fdivl
mov
or
mov
cmp
rcrb
iret
cmp
fwait
pop
add
dec
xor
dec
dec
into
pop
add
stos
std
mov
push
mov
mov
je
sub
jg
arpl
xchg
jb
mov
fmull
or
sarl
xchg
sub
pop
adc
out
push
notb
dec
in
lock
nop
mov
bnd
lret
mov
inc
aaa
cmc
add
sub
icebp
les
cltd
data16
inc
fisubrs
adc
insb
loop
cld
shlb
pop
je
pop
pop
pop
in
jle
mov
push
cmp
or
stos
in
fsubr
pop
mov
sti
mov
out
aam
lahf
aad
sub
sti
mov
add
ret
lods
in
xchg
push
sub
jb
sarl
mov
jne
push
jl
scas
xor
or
or
repz
cmp
mov
scas
call
leave
sti
cmc
sbb
jb
mov
sbb
mov
adc
push
ja
xor
jg
pushf
jecxz
fs
mov
inc
in
mov
shlb
lods
jge
cld
cmp
push
out
and
fwait
mov
arpl
push
notl
shlb
push
test
xlat
pop
mov
pop
mov
add
or
jmp
cli
iret
dec
test
jg
mov
scas
aas
stos
pop
dec
fbld
inc
mov
iret
movsb
mov
out
nop
push
inc
daa
mov
test
pop
out
push
jns
out
rol
in
push
std
aas
jp
dec
mov
push
fidivrs
mov
lock
sub
into
cmp
sub
dec
inc
addr16
hlt
test
shlb
add
jmp
push
clc
out
mov
cwtl
loop
cmp
call
sbb
lahf
dec
addr16
cmp
clc
sbb
inc
sbb
inc
mov
fidivs
and
add
loope
lods
cmp
and
cmp
inc
or
lahf
mov
xchg
sub
jmp
jo
fwait
insb
inc
xor
lds
jns
xchg
sub
mov
outsb
mov
pusha
pop
xor
xor
gs
jbe
ret
out
hlt
mov
xchg
daa
pop
divb
lods
xchg
iret
lods
push
shlb
in
out
mov
iret
in
xor
jo
rcl
xlat
out
jno
sub
mov
inc
push
stc
lret
decl
add
test
loope
negl
ss
je
pop
mov
ss
mov
mov
or
roll
movsl
movsb
inc
pop
xor
xchg
gs
mov
stc
lar
lret
push
repz
into
sub
in
inc
lret
rcll
push
pop
and
mov
rep
push
xchg
mov
push
sbb
pop
dec
mov
pushf
sub
cmp
sub
shll
in
je
jle
mov
outsl
jbe
fcoms
mov
mov
and
cmp
adc
cli
jmp
adc
dec
in
leave
in
push
enter
shrb
mov
call
ficoms
add
and
xchg
in
in
stc
addr16
in
insl
negb
mov
pop
icebp
xchg
into
daa
loopne
mov
pop
inc
into
out
popa
adc
xchg
cmp
inc
out
vpshlq
fcmovne
cltd
scas
fisttpll
pop
insl
cmc
pop
pusha
dec
fs
cmp
or
sub
add
stos
dec
aaa
pushf
enter
mov
les
fmul
dec
pop
mov
in
rolb
jmp
andl
adc
test
ja
outsl
gs
les
fimull
inc
insb
inc
fstps
movsb
fnstcw
jle
lret
dec
jp
or
inc
sub
shlb
xchg
subb
rcl
clc
repnz
cmp
cmp
xchg
clc
and
ljmp
movsl
and
shll
aad
xor
cmp
adc
ret
arpl
mov
rcrl
xchg
lret
ljmp
stc
inc
lahf
xor
dec
or
push
int3
mov
addr16
push
push
and
cld
push
mull
fldl
mov
idivl
push
xchg
push
inc
cs
dec
xor
sti
imul
sbb
add
out
std
test
fiaddl
push
popf
pop
lea
es
sti
mov
xor
das
jp
fisttpl
mov
pop
in
xor
dec
jns
inc
xor
fistpll
out
rep
lds
xor
js
fnstenv
pop
das
and
fadd
filds
in
or
popl
lret
shll
out
insl
movsl
lock
data16
mov
lods
loopne
xor
jmp
int3
or
pop
aam
into
jp
dec
mov
jmp
cmp
xor
test
add
jmp
xor
mov
shll
cmpsb
or
out
push
pop
in
or
fbstp
pusha
fbstp
outsl
push
jp
bndstx
dec
pop
je
sahf
aas
int
mov
int
sbb
cmp
fdivp
es
add
cmp
sarl
test
or
sbb
sahf
adc
adc
push
cmp
cwtl
cmp
lds
dec
insl
push
inc
mov
inc
std
mov
in
sbb
dec
mov
dec
scas
push
jg
lds
pop
push
ljmp
fisubs
mov
jle
cmp
push
sbb
mov
lds
xor
xlat
mov
scas
ljmp
cwtl
aaa
inc
push
subl
das
in
mov
add
out
and
shrl
incb
mov
mov
fldt
xchg
xchg
aad
sub
or
inc
xchg
paddb
sbb
cltd
out
dec
inc
or
jle
jns
jge
inc
lcall
jmp
mov
mov
pop
callw
popa
mov
rclb
cld
dec
out
push
mov
sbb
jae
pop
lret
push
ret
push
dec
movsl
adc
cmpsb
jno
mov
dec
aas
in
arpl
sbb
int3
fcoml
xor
jg
popf
arpl
cmp
stc
shll
jmp
pop
mov
cwtl
pop
adc
mov
xchg
mov
cmp
js
mov
addr16
addr16
sub
mov
mov
call
xchg
push
adc
dec
lock
das
repz
pop
cli
lret
test
sub
push
stos
push
jle
xchg
cmovge
hlt
enter
sbb
fwait
sti
mov
popa
call
call
daa
fs
push
push
out
ljmp
shrl
ss
xor
in
outsl
xor
xor
pop
shll
adc
add
dec
fstl
mov
xchg
call
loop
sub
scas
rcl
test
jno
clc
out
sbb
aaa
xchg
sbb
dec
or
jno
loope
xchg
jp
int3
rclb
pop
push
xor
test
or
dec
insb
arpl
cmp
mov
jae
cmc
xchg
push
push
sti
sbb
movsl
in
xor
push
mov
xlat
sbb
jno
inc
add
mov
sbb
lret
sbb
pop
jns
cwtl
xchg
dec
test
pop
fistpll
sub
mov
or
insl
test
mov
shrl
addr16
sbb
stos
mov
dec
push
cmp
addl
jbe
mov
out
sti
jae
pop
out
sbb
addr16
icebp
mov
pop
sbb
mov
mov
movsl
push
call
out
adcb
in
jmp
add
dec
jp
mov
jno
cs
out
and
inc
cwtl
dec
rcrb
movsl
xor
sub
aas
iret
movsl
and
xchg
mov
cs
aas
out
push
lods
negb
test
scas
mov
xchg
outsl
adc
stc
dec
movsb
fwait
inc
cmpsl
xor
push
xor
pop
int
movsl
pop
dec
dec
scas
test
pop
and
mov
mulb
adc
xor
add
mov
mov
cmp
mov
ret
jmp
sbb
xor
ljmp
adc
cmp
ja
or
bound
dec
inc
jge
insl
mov
mov
repnz
std
shr
and
adc
inc
jge
insl
mov
mov
repnz
std
shr
and
mov
andb
es
jns
insl
mov
mov
repnz
hlt
rorb
and
xor
add
adc
pop
jb
inc
std
push
lods
mov
mov
xorb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
cmc
push
in
aad
lds
mov
test
jne
gs
icebp
inc
xorl
push
in
aad
lds
mov
movsl
and
roll
xorl
dec
in
aad
lds
mov
movsl
cmp
repnz
jo
dec
std
addr16
sub
ds
push
jb
inc
loopne
testb
add
scas
jns
add
mov
int
sub
adc
xchg
movsb
lds
lcall
or
mov
and
test
stos
aad
imul
xor
in
ljmp
test
push
adc
dec
scas
rorb
aam
push
adc
sub
mov
adc
xchg
cmp
mov
mov
add
rorl
test
xchg
fstps
mov
sbb
mov
cmp
rclb
shl
cmp
add
inc
mov
loop
add
in
aad
lds
mov
movsl
and
leave
gs
push
call
and
sub
mov
ja
insb
aad
adc
add
pop
faddl
xor
push
aad
mov
std
adc
and
bound
loope
mov
adcl
push
and
cmp
mov
and
shll
push
icebp
inc
xorl
push
in
aad
lds
mov
movsl
and
shll
push
icebp
inc
xorl
jle
fisubs
subb
sbb
jmp
inc
loopne
xchg
cmp
mov
jmp
jecxz
jecxz
add
or
and
movsl
push
pop
roll
repnz
fstpt
lret
imul
inc
mov
bound
add
adc
sbb
mov
or
arpl
jmp
pop
inc
jmp
cltd
arpl
xchg
mov
lea
mov
mov
mov
in
fsubs
lahf
adc
int
fcmovne
xchg
bound
insb
sbb
sub
popf
pusha
das
test
inc
push
pop
mov
inc
sahf
shl
ds
inc
sbb
jae
imul
scas
fnstsw
push
add
arpl
sub
cmp
jle
in
sbb
arpl
xchg
sbb
cmp
sbb
cmp
fsubrs
xor
mov
lods
cmp
popl
or
jp
sbb
mov
jp
xchg
clc
in
std
inc
in
dec
sub
sbb
jl
xor
int3
mov
inc
push
data16
pusha
leave
push
fwait
outsl
and
fadd
add
test
push
mov
enter
xor
sub
sarl
mov
xchg
leave
lock
cmp
mov
xchg
push
inc
mov
or
mov
pusha
fldenv
xchg
jb
inc
popa
xchg
pop
mov
adc
sbb
cmc
dec
pop
inc
lods
out
jmp
test
mov
fcoms
add
outsb
dec
mov
aam
les
cli
fiaddl
sbbb
pusha
aam
push
dec
hlt
jno
jle
lret
mov
jl
mov
adc
and
mul
pusha
push
les
ds
fsubs
mov
sarl
xor
out
movsb
pop
test
xchg
aas
imul
ljmp
sub
adc
adc
int3
push
and
inc
vsubpd
pop
fwait
inc
aas
shll
push
mov
and
ret
sbb
ja
fsub
cmpsb
push
clc
hlt
adc
jg
sti
arpl
js
push
adc
pop
xchg
inc
movsl
stc
jnp
xor
decl
xchg
push
xor
movsl
pop
imul
es
push
out
int
cwtl
call
das
sar
out
xchg
dec
sub
test
cmpsl
movsb
xor
or
lcall
jl
fcoml
mov
adc
pop
or
sbb
jae
xor
sub
imul
test
je
and
fmul
sub
add
pop
push
int
arpl
add
or
movsb
and
jns
clc
and
push
jbe
push
push
jb
add
add
and
insb
pop
into
or
push
xor
xchg
push
rclb
jmp
adc
sbb
sub
or
fbld
xorb
jle
or
sub
cltd
popa
insb
jle
xchg
cltd
dec
into
scas
and
sbbl
loope
inc
mov
popf
rcr
xor
push
and
pop
pop
and
xor
and
add
loope
ja
pop
and
ss
add
sti
ret
int3
les
mov
dec
pop
ljmp
sub
pop
call
pushf
dec
adc
ljmp
jnp
xchg
mov
fsub
push
push
ret
dec
cmp
andl
loopne
ret
sub
enter
mov
cmpsb
rol
movsb
dec
pop
xor
sub
lret
clc
pop
data16
pop
pop
lret
mov
pop
bnd
hlt
adc
inc
repnz
pop
aad
outsb
sub
das
icebp
cmpsb
addb
ja
cld
mov
or
xlat
ljmp
in
fdivr
leave
ja
rclb
lds
repnz
fnop
iret
cmp
rcl
insb
scas
sti
sub
xorl
or
dec
adc
jp
mov
enter
inc
fsubrl
sbb
lahf
imul
lahf
adc
add
add
fs
or
aas
pop
xor
inc
idiv
nop
not
and
sub
mov
imul
or
or
dec
imul
xor
in
incl
xorl
shll
sbb
lock
dec
jmp
movsl
lcall
ret
mov
das
push
ds
lahf
mov
add
mov
call
pop
movsb
cmp
or
jle
fidivrs
cli
pop
aad
orl
ljmp
dec
popa
jle
sti
repz
test
int3
cmp
or
inc
xchg
jle
cmpsb
push
cs
push
cmpsl
xor
or
cmp
adcl
xchg
mov
xlat
xchg
mov
fisttpl
pop
jmp
mov
inc
shll
jbe
xor
ret
jp
inc
dec
inc
sbb
and
and
neg
fcmovnbe
add
push
adc
dec
lahf
fildll
aad
lret
push
daa
pop
pop
sub
fnstcw
outsb
add
xchg
sub
sub
dec
inc
and
and
push
fdiv
push
mov
inc
adc
fstl
xchg
mov
frstor
xlat
sahf
xchg
movsb
or
jnp
ljmp
stos
and
mov
add
bound
sub
in
jne
out
xor
jbe
ret
and
sub
inc
lea
hlt
aad
push
xlat
and
xchg
das
push
fwait
xor
cmpsl
sub
pop
xchg
stos
ljmp
loopne
mov
adc
sub
cld
xchg
ret
cltd
jo
and
inc
cmc
lret
xor
shrl
dec
lock
cmp
mov
xchg
xor
enter
scas
xchg
xchg
ret
pop
daa
and
sbb
std
xchg
xchg
mov
dec
jecxz
push
negl
push
fldt
push
pop
mov
or
andl
push
daa
int
cmc
scas
sbb
hlt
lea
xchg
push
inc
scas
dec
ret
int
dec
hlt
std
int
sbb
mov
mov
inc
stc
lds
sbb
sbb
repz
outsl
ret
pop
mov
sbb
das
dec
mov
ljmp
out
movl
or
sbb
adc
pop
xor
add
xchg
lock
les
pushf
data16
arpl
adc
mov
push
and
pop
sbb
and
xchg
jo
pop
jb
push
jb
aas
push
dec
in
xor
cmp
mov
mov
jle
out
xor
icebp
jle
popa
push
jo
sbb
inc
push
inc
fs
ds
pop
mov
das
cwtl
out
fcmovb
loopne
shrl
and
xchg
and
add
lock
xchg
sbb
sti
mov
mov
mov
xchg
xor
fisubl
mov
dec
outsl
popa
insb
clc
xchg
daa
daa
inc
pop
cmpl
fcomps
or
pop
xor
scas
xor
fdivr
repz
pusha
decl
test
xchg
cld
mov
or
jle
popa
ret
sahf
negl
loopne
sbb
fisttps
adc
fwait
shll
enter
add
adc
mov
mov
into
dec
jp
mov
xchg
xchg
notl
orb
push
or
adc
xchg
lcall
fld
add
pushl
mov
fsubs
call
mov
cmpsl
add
push
dec
lcall
or
aas
mov
jge
mov
and
xchg
ds
ds
lock
test
xchg
add
jne
aaa
xchg
mov
push
in
xchg
into
cmpsb
fwait
sbb
aad
test
mov
push
xchg
mov
test
dec
jns
jp
cmp
into
mov
push
inc
and
push
mov
int
jae
sbb
rclb
sbb
mulb
ds
xor
mov
and
inc
movsl
cmp
and
and
add
dec
pop
aad
rcr
shlb
dec
push
mov
inc
cld
inc
jbe
in
pop
and
ficoml
push
arpl
sbb
stos
and
dec
lret
add
aad
cmpsb
push
sbb
je
push
shrl
push
mov
cmc
jns
mov
lods
out
or
gs
mov
mov
imul
jle
sub
xchg
lret
es
cmp
and
mov
lret
or
pop
andb
aaa
test
lods
sbb
add
mov
jp
popf
cmp
mov
pop
push
pop
std
enter
sub
rcl
adc
xchg
sti
shlb
pop
push
or
jno
cld
sbb
jo
mov
jbe
adc
xlat
mov
arpl
jmp
loopne
xlat
mov
enter
mov
inc
fisubrl
pusha
xrelease
and
mov
out
mov
fildl
add
cmp
mov
je
cmp
pop
push
cmpsb
mov
nop
fists
jg
sbb
pop
out
xor
cmp
add
test
pop
dec
dec
mov
ret
adc
addr16
aaa
fimuls
mov
sbb
dec
mov
outsb
mov
cmp
add
sbb
fs
fdivl
mov
mov
dec
aas
jp
add
pop
imul
xor
cmp
xchg
or
ret
xchg
sub
adc
popa
outsb
cmpsb
jns
push
and
push
add
lods
ja
js
xchg
stos
add
mov
arpl
nop
xor
sub
pop
int3
cmp
stc
xchg
cmpsl
dec
cmc
fld
inc
push
jl
dec
mov
leave
xor
jbe
inc
push
ljmp
sahf
pop
sahf
shll
je
xorb
jno
imul
fcom
xlat
data16
sbb
lods
mov
clc
jmp
pusha
push
adcb
mov
fiaddl
push
lods
int
nop
mov
dec
lea
xor
lods
mov
outsb
mov
lret
sub
pop
add
pop
rcr
mov
pop
xchg
mov
stos
sti
cs
ja
add
add
scas
jg
lret
fmuls
cmpsb
out
or
push
adc
mov
enter
pop
jp
arpl
adc
sub
jmp
rep
jns
lods
jnp
xlat
daa
xor
enter
pop
imul
xor
and
out
adc
cwtl
and
rol
cltd
jle
cmp
jnp
xchg
incl
aaa
push
xor
lods
imul
aaa
xchg
pop
push
enter
xor
mov
dec
imul
pop
rcrl
mov
jo
jmp
cmpsl
gs
idivb
or
and
test
jle
mov
xor
xchg
mov
data16
mov
xchg
mov
fwait
mov
cmp
xor
add
sahf
clc
sahf
iret
iret
sub
mov
mov
push
xchg
test
lahf
imul
adc
clc
cmpsb
xor
fs
scas
push
xor
or
xlat
push
mov
xlat
jmp
jo
or
idivb
scas
mov
pop
daa
cmp
mov
mov
pushf
inc
sbb
push
lret
jp
push
notl
xor
cmp
jl
cmp
repnz
xchg
ja
adc
jecxz
gs
push
cmp
fwait
inc
dec
pop
test
adc
cmp
lahf
push
sbb
test
dec
add
mov
cs
mov
inc
outsl
aaa
insb
and
jae
mov
cmp
pop
nop
mov
sub
or
lahf
or
das
dec
repnz
jae
mov
aad
std
movsl
ret
xor
scas
pop
adc
push
mov
ret
mov
adc
inc
adcb
jo
push
out
outsb
ds
lds
repnz
popf
push
and
adc
jge
imul
push
add
xor
stos
outsl
xor
in
outsl
arpl
pop
das
and
insl
and
add
inc
xchg
lret
dec
and
jecxz
push
mov
add
adc
dec
cmp
jns
xchg
fisubrl
int3
insw
aas
rcrl
xorb
or
int
sub
fisttpll
add
mov
lret
in
dec
xchg
aad
and
jno
add
xchg
les
pushf
mov
xlat
and
xor
sub
outsl
fsubrs
and
das
inc
mov
mov
xchg
push
rorb
add
out
sbb
dec
insl
mov
iret
jmp
and
stos
adc
jbe
aad
pop
jmp
ds
fnstsw
cwtl
inc
push
and
out
in
std
dec
push
pop
xchg
jne
push
or
aas
push
in
hlt
jecxz
push
out
mov
insl
push
adc
data16
xchg
ret
jl
fidivrl
sbb
ljmp
shrb
ss
or
xchg
add
push
or
cld
movsl
mov
mov
dec
xor
push
outsb
push
adc
sub
loopne
jbe
fistl
test
cmp
push
push
imul
sub
gs
daa
adc
add
mov
int3
cmp
push
testl
call
rcl
in
pop
pop
loopne
mov
orl
mov
icebp
fdivs
repz
adc
xor
jmp
fwait
inc
pop
int
out
dec
pop
adc
xor
cmpsb
shlb
sbb
aas
stos
negb
es
dec
pop
mov
ja
rcrb
cmp
fsubs
je
idivl
bound
mov
mov
jne
ret
insb
mov
dec
pop
addb
jl
fidivrl
dec
mov
and
lahf
sbb
jae
dec
gs
call
cmc
out
jecxz,pn
sbb
fstps
xchg
test
jmp
and
jg
outsl
cmpb
or
sahf
ficoml
rorb
aam
push
pop
push
loop
push
inc
ljmp
test
hlt
fs
adc
jne
adc
cs
add
pop
int
arpl
loopne
je
mov
icebp
lahf
repnz
cmc
push
mov
mov
testl
mov
add
inc
popa
mov
out
mov
sahf
sbb
fldt
mov
subb
cmp
xor
fistl
inc
inc
adc
sbb
or
jecxz
dec
icebp
push
fs
shrb
fwait
cmp
sbb
push
fnstenv
pop
sbb
xchg
lock
lret
popa
lret
scas
cmp
out
jmp
sbb
dec
mov
or
and
bswap
xchg
adc
cmp
inc
arpl
mov
out
and
mov
inc
loop
lcall
pop
lret
jae
fistps
xchg
stc
sbb
pop
int3
adc
and
fimull
pusha
add
mov
adcl
not
inc
lahf
push
add
adc
mov
xor
movsl
js
and
je
push
jmp
or
push
ret
icebp
mov
popf
sbb
test
lret
mov
mov
adc
xchg
push
and
or
or
jmp
testl
xor
mov
jge
cltd
mov
pop
and
aas
cld
inc
rorb
cltd
add
je
push
mov
mov
jno
mov
ret
dec
sub
jl
push
mov
adc
mov
xchg
add
xchg
mov
mov
xor
cmp
imulb
sbb
rcrl
bound
nop
out
jecxz
pop
or
das
xchg
or
in
lods
ret
dec
pop
aad
insb
pop
nop
mov
or
aas
or
or
push
xchg
sbb
sbb
shll
xor
fstpl
adc
icebp
addr16
lcall
lds
inc
xchg
out
sub
fcmovne
dec
in
std
mov
test
or
pavgw
out
xchg
jb
stc
jno
addl
adc
lcall
pusha
test
into
pushf
mov
cmp
fmuls
xchg
or
xor
mov
outsl
mov
subb
mov
xchg
jnp
stc
or
cmpsl
pop
mov
push
pop
leave
imul
and
data16
push
add
mov
data16
add
push
xor
inc
sbb
add
stos
xor
push
or
pop
loope
mov
int
adc
clc
in
jp
out
neg
mov
loope
and
or
lods
add
push
outsb
inc
out
ds
testb
add
cmp
mov
enter
movsb
push
xor
sbb
sbb
or
and
jno
mov
out
sbb
lret
fwait
push
sub
out
and
lret
xor
inc
pop
movsb
les
aas
jns
pop
mov
cmpsl
insb
add
sbb
push
cltd
sbb
and
out
mov
add
mov
push
in
enter
mov
int3
mov
push
das
or
mov
mov
insb
push
arpl
sub
sbb
cli
add
movb
push
and
sub
mov
or
fadd
xor
fsubl
xchg
dec
inc
adc
lret
adc
push
mov
mov
xor
mov
clc
xchg
pop
push
dec
push
mov
out
mov
shlb
mov
inc
xor
rcrl
pop
int3
push
les
inc
cli
subl
aaa
mov
mov
pop
mov
andb
mov
xor
call
mov
mov
data16
sahf
cltd
sub
sbb
push
cmc
sahf
push
jo
aas
adcl
scas
or
movsl
ja
test
repz
lahf
lods
mov
imul
dec
push
lea
ds
xor
mov
dec
dec
cmp
movsb
cmp
loopne
lcall
pop
xor
xor
movb
mov
imull
mov
inc
xor
aad
icebp
incb
aas
xor
xlat
andl
aam
aam
add
dec
fnsave
xor
insl
arpl
lds
out
in
cmp
lret
add
push
repz
ja
ss
into
push
lods
mov
sbb
cltd
out
add
push
pop
mov
fistps
loopne
inc
xchg
xchg
adc
rolb
ja
les
loopne
or
pop
sahf
cmpsb
mov
add
cmpsb
or
dec
add
push
cmp
mov
out
ljmp
inc
adc
movl
scas
out
stos
test
loop
shlb
mov
rcll
push
cmp
int
or
aam
in
xor
stos
jle
xchg
dec
or
clc
jno
jge
mov
sbb
hlt
dec
jno
xor
jnp
mov
sub
push
sub
leave
ret
fsubrl
mov
pusha
mov
test
test
les
sbbb
mov
in
push
dec
es
xchg
popa
test
add
das
cld
dec
leave
xchg
push
jnp
std
mov
inc
cmp
and
push
popf
loope
sbb
daa
sbbb
loop
fmuls
push
hlt
push
mov
aas
negl
inc
dec
enter
xchg
xchg
sbb
mov
shl
jns
int
in
xchg
fcmove
ja
sti
xchg
cmpl
add
push
mov
outsl
mov
adc
stos
dec
lret
sarl
clc
das
mov
or
xor
push
or
lock
add
cmp
pop
std
xor
inc
insb
imul
push
into
cmpsl
stos
cmp
sbb
cmpb
hlt
into
adc
add
pushf
mov
or
dec
push
cmpsl
repz
jmp
xor
cmp
cmpsb
inc
ss
sahf
pop
dec
cs
pushf
sbbl
push
js
sbb
mov
cmpb
fcompl
std
daa
jecxz
dec
aam
cmp
fidivrl
xchg
jle
sbb
mov
push
sub
scas
loope
pop
inc
jb
addl
push
sub
pop
std
xchg
sarb
aam
sti
or
loope
lds
lret
andb
testl
pop
cltd
sub
data16
ljmp
lcall
xor
mov
pusha
fwait
addr16
and
dec
mov
cmpsl
or
cmp
adc
sbb
dec
and
rcl
and
fisubl
mov
add
sbb
mov
int3
mov
push
pushf
shrb
test
outsb
push
es
test
aad
fistps
sti
out
mov
dec
icebp
adc
int3
add
mov
test
sub
into
xor
push
pop
jne
decl
cmp
dec
jb
loop
mov
inc
add
mov
sub
in
jle
inc
js
jno
jmp
mov
jg
mov
xchg
dec
sub
dec
jae
lea
sbb
jo
adc
roll
test
shlb
dec
insb
inc
js
imul
lds
mov
movsl
and
shll
push
icebp
inc
xorl
push
in
aad
lds
mov
movsl
and
shll
push
icebp
inc
xorl
push
gs
push
jno
add
xor
loope
icebp
inc
xorl
push
in
aad
lds
mov
movsl
mov
jne
iret
dec
push
icebp
xor
mov
dec
cli
fdivrp
into
jmp
fucomi
lret
nop
idiv
enter
mov
dec
imul
dec
push
cmp
sub
sbb
or
sti
into
jmp
fucomi
lret
sahf
mov
scas
repz
jnp
imul
outsb
dec
push
push
push
sub
sbb
or
sti
into
jmp
fucomi
lret
sahf
mov
scas
mov
dec
dec
or
outsl
insl
jl
jne
js
mov
mov
ficomps
push
add
cmp
cmp
test
arpl
xchg
mov
or
mov
pop
subl
cmp
loop
sbb
pop
es
inc
out
mov
int
mov
sub
push
and
addl
xchg
pop
sahf
out
mov
mov
outsl
pushf
sahf
sbb
jne
test
repz
loopne
data16
adc
and
inc
and
icebp
scas
stos
dec
test
dec
xchg
push
cmp
and
mov
mov
dec
arpl
and
cmp
cmp
js
sbb
cmp
jmp
fucomi
lret
sahf
mov
scas
mov
dec
imul
dec
push
cmp
sub
sbb
bound
fisttpl
ret
out
fistps
add
sbb
js
dec
jp
jp
fstpl
mov
fcom
loop
mov
xor
or
jnp,pn
pop
sub
fs
stos
mov
sahf
xchg
mov
pop
jnp
imul
dec
push
cmp
sub
sbb
or
sti
into
jmp
fucomi
lret
sahf
mov
scas
mov
dec
imul
dec
push
cmp
sub
sbb
or
sti
imul
iret
and
mov
aaa
xchg
cmp
in
sbb
xchg
in
test
inc
sub
call
lds
addr16
arpl
pop
inc
and
test
out
mov
dec
dec
jb
xchg
in
loope
repz
leave
inc
mov
xchg
je
mov
pop
fstl
cwtl
int
push
sub
jg
hlt
xchg
mov
cmp
and
shll
rcl
jecxz
push
mov
pop
dec
xchg
xorb
adc
fwait
mov
shr
js
jb
jno
ficomps
loop
xchg
push
into
mov
aas
sbb
stos
dec
dec
imul
cmp
outsl
aas
dec
mov
out
sub
sbb
mov
std
dec
loopne
push
repz
dec
fnsave
test
lret
or
aas
ret
push
mov
cmp
fisubrs
and
clc
nop
xchg
add
pop
push
stos
and
lock
sub
in
in
and
pop
in
stc
ljmp
sbb
popa
jno
or
jmp
in
and
sbb
xchg
lret
clc
nop
icebp
lcall
mov
fmulp
stos
push
jae
and
mov
sbb
shr
push
fldcw
pop
sbb
sub
das
mov
adc
scas
push
pop
cmp
mov
dec
mov
sbb
fninit
mov
lret
paddusw
sub
and
movb
xchg
mov
repz
cmp
in
pop
pop
xchg
imul
ret
in
inc
loop
fistpll
scas
or
and
into
mov
fsubrs
mov
xchg
and
aaa
or
les
add
jp
cmpsl
jnp
fs
or
leave
out
mov
pop
lahf
movsb
ret
rorb
shrb
push
test
xchg
mov
addl
jne
subb
xchg
push
and
loop
ret
aad
sbb
xchg
insb
nop
jnp
cmp
push
cltd
lcall
fwait
outsl
jnp
cmp
ret
inc
cmp
add
movsl
pushf
out
inc
ja
insl
int3
mov
push
dec
or
decl
addr16
sbb
and
repnz
cltd
sub
adc
mov
and
sbb
push
out
cs
mov
jae
xor
insb
mov
jno
and
push
data16
dec
sbb
iret
adc
movsb
cltd
jecxz
or
mov
in
mov
cli
jb
outsl
dec
adc
add
push
push
gs
xor
push
xchg
add
repnz
iret
dec
or
dec
push
cltd
mov
jmp
ret
ds
jb
mov
xor
mov
push
cmpsl
int3
aam
mov
repz
mov
sub
push
pop
imul
mov
inc
pop
cli
loope
xchg
xor
les
fs
mov
mov
aaa
adc
cmpl
push
gs
enter
jb
fldenv
xchg
cld
fdecstp
lret
test
fsubs
rolb
fidivrs
sub
push
sbb
xchg
sub
clc
jo
and
push
inc
ljmp
add
xchg
test
int3
in
js
add
out
dec
lods
add
lret
aas
lcall
in
pop
jge
inc
test
lahf
addr16
mov
addr16
inc
outsb
cli
mov
outsb
imul
sbb
test
stos
mov
mov
mov
ds
les
sub
sub
addr16
loopne
sub
out
das
addr16
and
sub
adc
int
repnz
ret
flds
decb
pop
call
lret
xchg
mov
repnz
fiadds
mov
loop
jb
lods
je
cs
add
inc
orl
mov
adc
adc
xchg
jnp
das
xor
or
xchg
dec
out
leave
in
mov
nop
cmc
mov
out
push
mov
dec
and
cs
mov
mov
psrld
adc
leave
sub
xchg
xchg
movsb
xchg
or
or
icebp
mov
decl
or
adc
mov
andb
subb
inc
popa
cwtl
push
xor
mov
lods
mov
repz
pop
mov
cltd
shrb
xor
and
xchg
and
lret
sub
les
jmp
lret
test
repnz
jmp
inc
in
ficoms
inc
sbb
xor
jo
leave
add
mov
dec
cmc
sub
mov
sub
daa
les
repnz
add
mov
and
outsb
xorl
ret
push
push
lods
mulb
or
cmp
push
and
inc
cmp
add
mov
fbld
das
jge
in
idivl
lods
scas
pop
stos
xor
xchg
push
xor
fdivl
pop
sub
ret
jo
insb
aad
pop
cltd
aad
sbb
inc
les
and
shl
cmp
pusha
fidivl
orl
pop
ja
mov
push
jae
and
push
jo
xchg
rorb
in
ret
adc
test
pop
jl
lods
in
aam
lcall
pop
adc
icebp
push
xor
sarb
icebp
pop
lods
leave
pop
jle
imul
daa
push
push
mov
in
arpl
mov
and
aaa
mov
aam
mov
cmp
cmp
je
push
les
cs
pop
rcrl
out
sub
cmpsl
arpl
inc
test
mov
clc
fnstsw
test
mov
jo
and
rcrb
out
and
imul
cmp
pop
cltd
sbbl
adc
push
jg
mov
xchg
adc
in
mov
cmp
jecxz
addr16
mov
mov
or
xor
hlt
cld
lret
dec
out
fwait
popf
push
les
jecxz
push
stc
fs
ljmp
daa
bound
cmpl
push
test
pop
xchg
xcrypt-ctr
cmpsl
pop
aad
mov
xor
and
loopne
ja
dec
lods
adc
mov
xchg
mov
movsl
adc
fisttpll
lahf
sahf
xor
push
or
jge
inc
imull
js
sahf
call
in
popf
scas
xor
push
mov
sub
ret
test
nop
pop
cmpsl
inc
repz
mov
jo
pop
adc
cmp
imul
xor
mov
nop
fmul
das
pop
adc
xchg
js
xchg
repnz
mov
cmp
lahf
jne
adc
push
sarl
mov
insl
pminsw
mov
loopne
jge
cmpl
sbb
dec
movntps
mov
cmp
std
test
mov
gs
testl
add
hlt
mov
xlat
dec
icebp
mov
mov
cmpsl
out
test
cs
jp
mov
call
lods
stos
aas
cs
pop
test
mov
fwait
ret
ret
pusha
sarb
out
movsb
add
rcll
xchg
xchg
in
movsb
jns
sahf
fwait
out
jmp
dec
repnz
into
and
pop
fnclex
jmp
sub
push
mov
in
sbb
jl
ret
cmpb
mov
pop
xor
xchg
push
jecxz
add
lret
pusha
adc
dec
mov
sbb
and
shl
xor
shll
outsl
in
mov
mov
out
cli
roll
cmp
fdivl
lds
pop
lods
in
sarl
xchg
cmp
std
daa
test
in
pop
loope
push
adc
dec
jb
sahf
loope
xchg
ret
dec
sti
stos
and
jecxz
mov
in
adc
out
adc
imul
lcall
jo
enter
les
xor
and
sbb
add
jb
xlat
or
ja
rcrb
dec
daa
setle
imul
jnp
subl
push
loope
and
scas
fsubrs
aad
shll
xor
mov
push
repnz
cli
mov
das
pushf
push
arpl
rcll
bnd
dec
fldpi
fsubr
push
and
sub
and
inc
xor
ja
mov
sbb
xor
rcll
cmp
cmp
mov
mov
dec
push
lret
jge
clc
dec
arpl
hlt
push
imul
test
cwtl
adc
inc
xchg
cmp
filds
dec
lea
out
mov
xlat
dec
push
pop
mov
scas
sbb
ret
jae
xor
inc
inc
dec
out
rcrl
mov
fs
sbb
sbb
jl
pop
scas
aaa
in
pop
push
pop
sarb
pusha
out
aaa
mov
jge
bswap
mov
js
leave
dec
pop
test
addr16
push
imul
scas
int3
mov
and
jecxz
roll
xor
cmp
cmpsl
lret
inc
xlat
in
push
jecxz
xlat
aam
mov
fadd
jecxz
lahf
and
out
mov
push
sti
setp
aad
loopne
movsb
dec
xchg
cmpsb
dec
mov
pop
jae
shr
pop
xchg
fsts
xchg
js
es
roll
xorb
sbb
cld
pop
test
sbb
movsb
sub
cmp
movsl
xchg
cmpsb
and
out
xchg
cmp
jo
xchg
mov
fsubrs
fwait
rorb
mov
sub
adc
ja
inc
xchg
xchg
xchg
fldenv
imul
pop
mov
inc
mov
xor
xor
addl
dec
add
aaa
imul
fmull
jg
test
xchg
mov
jne
mov
sub
loopne,pt
arpl
push
dec
fisubs
mov
xor
outsl
mov
into
xchg
cwtl
pop
stc
mov
adc
mull
cmp
inc
das
adc
fisubrs
in
jbe
or
mov
mov
adc
xor
and
enter
loope
pushf
aad
add
std
lods
add
es
jno
lds
mov
and
std
in
hlt
shl
scas
hlt
and
inc
inc
mov
and
test
mov
faddl
pop
add
cmc
xor
cmpsb
gs
shll
add
dec
popf
sahf
jge
mov
sbb
sbb
sti
push
sub
arpl
pop
adc
andb
out
out
push
pop
mov
ror
dec
push
inc
cmpsb
inc
pushl
movsw
stc
xor
pop
rcll
test
xor
jne
leave
push
adc
pop
adc
add
cs
push
dec
push
in
movsb
ja
enter
clc
dec
int3
add
enter
xchg
das
inc
xlat
jo
sarb
bound
or
pop
jno
pop
loop
mov
jbe
jbe
push
aam
das
iret
jae
or
adc
add
test
mov
stos
cltd
clc
jl
dec
lods
jo
pushf
sbb
sti
data16
test
popa
pushf
dec
cmp
js
lret
call
cs
outsb
loope
cmp
sub
inc
or
les
cmpsb
ret
mov
pop
xchg
test
repz
insb
loopne
outsl
mov
mov
psrld
pop
sbbb
sbb
xchg
add
inc
push
loop
jmp
xchg
gs
mov
fimull
bound
movsb
and
xor
int
rorb
push
add
test
pop
gs
es
and
pusha
add
neg
repnz
cld
sbb
push
pop
lret
cmp
mov
shrb
inc
gs
ds
rcr
mov
dec
in
dec
jle
xchg
mov
pop
xchg
sbb
add
sarb
fs
or
mov
mov
sbb
test
or
inc
js
cwtl
sub
jno
mov
dec
lods
das
xor
aaa
jbe
leave
mov
cmpsb
fnop
sub
cmp
lret
testb
pop
popl
cwtl
iret
xor
jg
mov
mov
pop
and
mov
or
loopne
sbb
xchg
inc
xor
rorb
cmp
mov
pop
pop
mov
mov
mov
popf
xchg
mov
mov
inc
push
lea
add
pop
pop
mov
ljmp
cmp
xchg
push
jmp
inc
lea
jl
lahf
jae
adc
fsubl
movsb
push
mov
xor
loop
push
jbe
hlt
xchg
ljmp
mov
cmp
cmp
cmp
jbe
dec
aam
mov
add
test
sub
adc
cmpsb
out
jl
cmc
mov
push
mov
fwait
adc
fildll
lock
pop
xor
mov
outsb
flds
in
jnp
push
jecxz
mov
outsb
xlat
outsl
arpl
jle
cwtl
clc
add
adc
mov
mov
cmp
mov
call
cmpsb
rcrb
mov
sti
testb
loope
aad
mov
mov
mov
adc
pop
xchg
std
pop
or
outsl
mov
sbb
dec
repz
clc
sbb
xor
fsincos
add
xchg
inc
aam
add
cmp
stos
push
roll
xor
test
fs
inc
dec
cmp
daa
jg
add
addl
sbb
cmp
jb
divb
sahf
scas
mov
fiaddl
inc
pop
les
out
cwtl
iret
mov
ljmp
test
mov
or
cmpsl
cmpsb
or
cmc
cs
pop
cmp
inc
imul
cmp
sub
popa
dec
and
jae
push
push
roll
sub
jle
push
lret
and
and
mov
stc
fimuls
sbb
fdiv
or
fisubrl
mov
and
data16
fisubs
inc
pop
fxch
inc
sub
repnz
mov
sub
mov
pop
dec
call
inc
inc
cmp
out
and
jp
movsb
andl
lock
loop
cli
jmp
dec
jne
loopne
and
push
mov
pop
cmp
in
repz
mov
stos
xchg
cmp
fs
leave
mov
out
mov
sbbb
sub
int3
js
mov
cli
fcoml
push
outsl
dec
pop
js
aad
xchg
adc
add
mov
mov
repz
pop
ja
mov
out
jge
bound
mov
sbb
inc
sub
bound
inc
ret
and
mov
clc
sbb
jo
xor
jne
ss
mov
and
lock
push
ljmp
mov
popf
imul
js
mov
xor
or
mov
and
fs
shll
xchg
pop
xchg
sub
data16
mov
push
add
sti
or
nop
pop
cmpl
mov
inc
jbe
lods
mov
popl
pop
add
rorb
mov
pop
fidivrl
pop
xor
call
lahf
mov
sbb
cmp
mulb
pop
jno
shrl
lcall
cmpsl
jns
dec
push
push
das
mov
sub
insb
ljmp
out
out
dec
push
je
cld
and
inc
ljmp
fcomps
test
sub
inc
arpl
cmpsb
test
ja
jae
xchg
inc
inc
arpl
or
mov
stos
dec
out
sbbl
dec
jg
rcrb
aad
mov
lea
dec
cmp
and
xchg
arpl
sbb
movl
xor
cltd
mov
icebp
test
push
mov
lea
push
lcall
push
and
and
fs
insb
fisttps
test
pop
fiaddl
outsl
enter
and
in
bound
movsb
lcall
test
dec
in
ss
lret
dec
mov
mov
frstor
cli
dec
daa
cmpsl
std
sbb
in
shll
mov
push
inc
push
add
push
into
cmp
pop
mov
bound
add
nop
pushf
stos
xor
jle
fisttpl
inc
fs
mov
or
popa
sbb
and
mov
loopne
inc
mov
pop
ds
adc
enter
sti
push
xchg
fldt
inc
xchg
xchg
ds
push
pusha
hlt
fdivrl
sub
int
lret
xchg
dec
int3
sbb
sarb
addr16
sub
mov
jbe
cltd
aad
ljmp
gs
es
popf
pop
and
or
insl
mov
into
adc
lcall
repnz
sub
mov
jmp
push
cmp
pop
push
push
pop
pop
ja
dec
push
push
mov
pop
lcall
out
dec
popf
sahf
js,pn
mov
sbb
xchg
js
sub
mov
xor
mov
jp
inc
int
into
insl
out
call
pop
loopne
inc
adc
xlat
pop
es
xchg
fildll
sbb
jne
mov
std
and
pusha
enter
mull
adc
or
in
test
test
mov
xchg
sbb
or
mov
xor
xlat
mov
and
inc
push
pop
imul
add
rorb
pop
mov
push
pusha
repz
jle
insb
rolb
mov
mov
iret
outsl
sub
pop
vpaddsw
cltd
insb
cltd
ljmp
adc
leave
xchg
or
fnsave
push
vpmulhuw
iret
out
aad
push
clc
out
dec
out
outsl
xchg
stc
xchg
mov
test
int3
mov
push
popf
push
pop
adc
outsl
mov
cmp
adc
movsb
loope
shrl
sahf
imull
enter
loop
fwait
mov
add
lea
jl
and
or
inc
lahf
inc
das
call
loope
jg
outsb
or
jne
jnp
xor
in
daa
mov
xor
int3
adc
ss
dec
jbe
sarb
fisubrs
dec
enter
jmp
or
mov
lret
push
jbe
aad
mov
jnp
jnp
bound
cld
and
jno
sub
push
sub
sahf
mov
mov
add
push
dec
pop
sbb
or
jg
bound
dec
sbb
mov
lock
jg
push
cmc
xchg
aad
ja
add
mov
pop
push
xor
icebp
dec
addr16
inc
mov
lock
cli
andb
push
jb
dec
lock
inc
cmp
lret
cwtl
dec
subb
addl
mov
mov
lods
pop
xor
fistl
bound
inc
int3
mov
lods
inc
push
pop
outsl
sahf
fcmovnbe
stos
pop
mov
jmp
stc
jns
test
pop
lahf
inc
negb
stc
adc
xchg
int3
mov
sahf
je
jmp
push
lret
push
mov
dec
push
push
pop
sub
cltd
mov
sub
rcrb
mov
loope
adc
inc
sub
inc
or
shll
movsb
clc
fs
addl
mov
int3
pop
xlat
or
daa
jg
jge
pop
shr
movsl
hlt
cmpsb
inc
lret
cmp
test
sub
gs
dec
fidivs
dec
sub
jg
cmp
pop
femms
in
jb
cwtl
nop
shr
add
nop
and
dec
mov
inc
out
push
dec
adcl
sub
pop
cltd
inc
push
cwtl
sti
xor
push
test
or
gs
jae
or
jge
iret
mov
lret
inc
nopl
mov
pop
stos
inc
lds
lret
mov
sub
push
clc
out
adc
cwtl
mov
repnz
xchg
inc
sahf
add
leave
cmpsl
pop
sbb
arpl
xlat
testb
sub
sub
add
fisttps
dec
lods
das
sub
inc
inc
xor
stos
cmpsl
std
loopne
popa
push
lods
test
fistpl
dec
jo
jmp
sbbl
scas
je
loope
push
dec
jo
lds
mov
out
mov
jo
sahf
jb
mov
and
push
lcall
mov
adc
jo
cli
call
mov
lcall
inc
fmul
jae
push
outsl
test
xchg
adc
fsts
pop
mov
mov
pop
push
jbe
jnp
and
mov
dec
cwtl
sub
jmp
ljmp
into
pavgb
push
jo
sub
ljmp
sub
lret
hlt
int
jg
or
out
jecxz
nop
xor
mov
mov
out
aas
scas
sub
push
in
push
dec
pushf
int
push
mov
and
xchg
dec
loope
mov
aaa
and
icebp
shrb
jae
sbb
out
add
lret
mov
fwait
xlat
mov
sub
push
jno
xor
mov
pop
cpuid
mov
sub
or
mov
sub
das
int3
mov
leave
fcmovbe
ret
sbb
xchg
cmp
xchg
movsb
in
pushf
cmc
and
inc
mov
sarl
clc
and
ror
sub
sbb
mov
lret
icebp
sti
push
inc
or
adc
ja
shrl
lods
ret
pop
dec
jb
outsb
cwtl
stc
out
push
outsb
jp
xchg
push
int
test
xchg
mov
imul
sub
mov
scas
mov
dec
imul
dec
push
cmp
sub
sbb
or
sti
into
jmp
fucomi
lret
sahf
mov
scas
mov
dec
imul
dec
push
cmp
sub
sbb
or
sti
into
jmp
fucomi
lret
sahf
mov
scas
mov
dec
imul
dec
push
cmp
sub
sbb
or
sti
into
jmp
fucomi
lret
sahf
mov
scas
mov
dec
rcl
outsb
cmp
mov
aam
in
hlt
outsb
push
out
mov
add
mov
sub
pop
sbb
aas
push
jp
pop
push
pop
stos
out
mov
mov
lret
jle
outsb
cmp
sub
or
stos
push
dec
push
pop
mov
mov
mov
rorb
add
jg
sbb
inc
adc
sbb
pop
mov
sahf
adc
push
mov
mov
push
pop
dec
xor
test
stos
mull
stos
add
add
inc
sti
push
or
ret
sbb
out
shrl
push
dec
notb
jnp
out
cmp
mov
mov
ds
or
out
jp
mov
pop
cmp
out
mov
mov
xchg
mov
pop
ljmp
push
rolb
xchg
adc
jne
jp
lret
sahf
lcall
push
dec
dec
sbb
inc
negl
movsl
out
pop
push
mov
pop
shlb
lock
push
subl
ret
or
nopl
out
lods
ficomps
scas
cli
sahf
rorl
and
dec
add
jb
insl
push
dec
push
ds
stos
mov
std
mov
jmp
push
inc
faddl
pop
sub
pop
bound
jae
jp
mov
cli
xchg
sahf
scas
divb
es
pop
jne
pop
adc
mov
rcr
jmp
out
incl
mov
jle
outsb
cmp
dec
sbb
push
jp
dec
push
pop
stos
out
mov
mov
lret
jle
outsb
cmp
dec
sbb
push
jp
dec
push
pop
stos
jmp
push
stos
pushf
mov
xlat
movsl
lahf
in
jbe
xor
aaa
push
fldl
jns
add
popa
adc
outsb
sarl
int
scas
push
cld
and
push
in
ja
mov
dec
out
lods
xor
mov
xor
es
mov
xchg
dec
adc
jb
push
xchg
jg
jns
lock
xchg
test
lret
pusha
mov
push
mov
lahf
inc
dec
xor
negl
push
popa
das
mov
stos
icebp
push
lret
mov
add
in
subb
xchg
lahf
in
pop
scas
and
xchg
and
cltd
mov
aad
sbbb
and
sbb
dec
pop
pop
cmc
sti
mov
icebp
mov
add
mov
and
cmp
mov
mov
fsubrp
call
out
mov
jno
pusha
push
mov
inc
sbb
push
push
add
mov
popa
addb
popf
aas
inc
xchg
inc
push
aad
into
in
cmp
add
lods
jg
loopnew
lds
loop
in
fisubs
xchg
push
or
inc
inc
into
fwait
adc
xor
ja
pop
or
lds
and
int3
and
jge
cmp
cmpsb
lock
cmp
sub
setp
jg
and
push
mov
cmpsb
icebp
xchg
call
lock
xor
insb
cmp
and
repnz
fwait
mov
cli
fldl
imul
addr16
push
filds
sub
sbb
cmp
or
movsl
mov
imul
adc
jae
push
std
iret
mov
bound
lock
lods
xchg
jmp
ljmp
sbb
inc
insl
imul
mov
adc
in
rcl
dec
sahf
cmp
imul
and
daa
fisubs
stos
pop
int3
cmpsl
aad
dec
in
sub
adc
inc
ss
adc
push
inc
call
push
idivl
mov
scas
pop
adc
cmp
jno
call
ljmp
push
int
cmp
mov
add
and
ret
xor
xor
sahf
fildl
xorl
stc
pop
jns
mov
aad
jle
into
or
fcomip
pop
enter
in
std
test
inc
fabs
shlb
xlat
rorb
inc
pop
jmp
add
mov
push
jb
addr16
mov
add
sti
jbe
scas
in
push
and
lock
imul
hlt
flds
daa
jns
pop
xor
ljmp
call
push
lret
mov
std
jb,pt
adc
pop
stc
mov
lea
cld
int
nop
or
icebp
stos
fwait
lret
jg
mov
es
inc
sbbl
or
inc
sub
cmp
or
jecxz
mov
pop
or
adc
mov
or
loop
icebp
jbe
inc
push
imull
lods
clc
adc
pusha
jg
sbb
jge
mov
sub
add
push
lea
js
cmp
pop
or
dec
cmpsb
cmp
push
xchg
sbb
mov
rcrb
cmpsl
stos
int3
mov
push
mov
and
or
lcall
imul
lods
into
in
inc
in
mov
fs
cs
or
cmp
jnp
aad
sub
pop
mov
mov
jbe
add
jbe
pusha
gs
dec
push
pop
and
popa
adc
add
inc
sub
punpcklwd
sbbl
push
push
scas
or
add
fcmovb
nop
jmp
xchg
mov
cs
add
bound
lods
testl
stc
mov
out
hlt
push
xchg
insl
sbb
inc
mov
js
cwtl
out
hlt
dec
lods
shrb
mov
push
sub
cmp
add
ja
lret
loopne
jb
fs
out
fs
mov
mov
xchg
mov
sbbb
std
daa
ret
scas
iret
adc
ss
pop
lock
cld
sbb
lcall
xchg
pop
jbe
xchg
inc
pushl
adc
adc
xor
test
js
push
mov
imul
mov
inc
mov
jno
fstl
fucomip
insb
push
sahf
test
bound
push
cli
mov
mov
sbb
bound
inc
mov
test
repnz
mov
and
xor
cmp
mov
fiadds
bound
jb
idivb
xchg
mov
jle
frstor
push
aad
rcll
mov
xor
in
dec
negl
jecxz
lods
lret
cmp
and
add
lret
test
bound
mov
push
std
rorl
into
lahf
jno
and
inc
push
popa
adcb
add
xchg
pusha
cmp
cmp
cmpsb
dec
sbb
mov
adc
xor
adc
xor
das
imul
jg
sub
add
push
or
cmpsl
jle
inc
inc
fistpl
out
mov
je
daa
lods
ljmp
push
lret
pop
pusha
test
push
inc
sub
into
mov
mov
push
push
mov
pop
inc
cmc
shrb
popf
sbb
dec
sahf
fs
clc
push
in
sub
int
sub
pop
arpl
sbb
or
lock
inc
mov
jnp,pn
mov
lock
ja
rclb
bound
fcoms
mov
repz
xor
stos
inc
fistpl
mov
rorl
sbb
ret
xor
aas
adc
test
dec
aas
inc
cmp
mov
mov
mov
lret
arpl
dec
clc
sbb
push
loopne
mov
test
xchg
adc
mov
cltd
faddl
scas
cmc
xchg
xor
arpl
into
fisubrl
fdivs
mov
icebp
insb
sti
movsb
adc
cli
or
test
cmp
sub
filds
ret
push
in
dec
push
lods
jg
pushf
ja
push
jmp
fstl
mov
xor
cli
inc
xor
adc
clc
les
mov
fwait
les
negl
mov
push
jnp
push
hlt
out
xlat
sbb
xchg
pop
sub
icebp
stos
mov
sahf
call
xlat
xor
cmc
arpl
mov
push
ret
imul
pop
mov
push
mov
notl
lds
insl
sarl
lods
pusha
divl
add
lock
andb
push
out
call
and
mov
pop
lds
sub
les
pushf
incl
cmc
andl
cli
icebp
adc
adc
xchg
insl
xor
xchg
mov
dec
movsl
popf
dec
ss
and
and
enter
ljmp
negb
xchg
dec
andl
pop
push
enter
jg
cmp
push
adcb
fsubr
ret
mov
inc
jne
data16
lds
loopne
push
cmp
inc
hlt
pushf
stc
inc
mov
repz
push
xchg
jnp
cltd
pop
je
jg
movsl
cmp
insb
gs
xor
pop
adc
popa
jp
fs
cmp
mov
dec
aam
lds
test
inc
inc
adc
mov
out
cwtl
into
popf
shr
cmpsl
out
in
fdivr
loop
mov
mov
ret
ss
mov
or
mov
push
ljmp
aaa
cmp
int3
clc
sub
push
adc
jl
and
push
push
add
aam
mov
mov
mov
fbld
out
push
gs
dec
mov
pop
test
mov
ds
scas
in
xor
sahf
xchg
push
hlt
sub
pop
fsubrs
push
mov
mov
ds
adc
in
sub
jo
or
subl
lcall
inc
ja
pop
lcall
mov
mov
adc
sub
repz
cwtl
pusha
mov
roll
dec
cmp
cmpsl
movsb
ds
jae
add
insb
leave
sti
cmp
jno
popf
adc
or
icebp
hlt
xorb
lret
dec
cmp
dec
inc
jmp
cmp
push
les
outsb
shll
enter
in
jmp
dec
loopne
test
cmc
into
add
pop
mov
mov
push
mov
xchg
cmp
jecxz
mov
sub
mov
out
iret
lods
cltd
movsl
loopne
inc
mov
insb
ficomps
loopne
adc
push
adc
repz
icebp
xor
push
stc
daa
xchg
inc
insb
inc
jecxz
xor
mov
sbb
imul
jne
cmp
out
aaa
xor
push
xor
aam
mov
popf
or
pop
cli
and
xchg
jle
mov
mov
cs
inc
jecxz
mov
mov
pushf
bound
mov
pop
addb
fisubl
sbb
hlt
not
sahf
je
negb
inc
sub
cmp
jge
mov
jno
dec
int3
xchg
jbe
add
mov
in
pop
sub
addr16
push
std
shlb
call
out
enter
loope
mov
int3
pushf
mov
push
mov
shlb
scas
sbb
or
mov
push
mov
push
scas
mov
sahf
insl
in
jno
mov
scas
and
and
stos
mov
mov
fisttps
fsts
sbb
fwait
push
xor
inc
sbb
xor
stos
mov
mov
add
scas
lahf
inc
inc
xor
pop
insl
aad
jp
in
test
ret
cli
pop
pop
scas
inc
and
add
dec
jns
lahf
fbld
mov
xchg
xor
xchg
dec
xchg
or
loopne
stos
dec
repnz
mov
xchg
testl
icebp
pop
inc
and
sbb
orb
or
pop
xchg
stc
mov
fisttpll
jle
dec
stos
sbb
jbe
push
loopne
cmc
aam
or
ficompl
mov
push
xchg
and
das
scas
les
nop
push
cld
and
out
push
sbbb
jle
lret
imul
inc
and
mov
nop
mov
frstor
mov
dec
cmp
pushf
inc
rcll
dec
mov
dec
les
loop
shll
jp
mov
mov
xor
test
in
int3
outsl
addr16
xor
ds
adc
cmp
popa
jge
dec
sbb
lods
dec
movl
mov
iret
push
rcrl
hlt
sahf
or
mov
cmpsl
test
push
mov
pop
ljmp
ret
or
js
pushf
push
pop
aad
movswl
movsl
cmc
jae
inc
ss
and
les
push
js
and
test
nop
lea
nop
jo
and
mov
sub
sbb
xor
popa
out
aas
pop
mov
jae
test
adc
mov
dec
mov
bound
adc
mov
movsb
jbe
sub
mov
rolb
sahf
inc
pop
xor
or
sbb
cmp
xchg
cld
xchg
push
hlt
sahf
frstor
pop
jmp
outsb
push
push
sub
imul
dec
sub
cwtl
fdivs
push
mov
cmp
mov
mov
rorb
inc
fisttpll
mov
scas
cmp
popl
das
xchg
dec
das
xor
scas
lret
aam
loopne
jno
or
sbb
inc
ror
movsl
jo
mov
xchg
and
es
jae
testb
lock
in
mov
fadd
adc
bound
push
shrl
int3
mov
and
insl
je
sub
clc
mov
ret
push
inc
mov
inc
or
popa
pop
out
jo
xor
cs
dec
jp
clc
adc
int3
call
push
sbb
repnz
dec
imulb
loop
lods
fnstsw
xor
test
jg
mov
dec
mov
sbb
dec
out
clc
subl
sbb
ret
add
cmp
clc
xchg
and
or
rclb
lods
pushf
jecxz
dec
adc
push
push
xchg
dec
inc
imul
sbb
mov
add
stos
and
orb
ret
xor
xchg
mov
add
movsl
aas
xor
dec
pop
aad
jne
or
or
ljmp
test
xchg
mov
fdivrl
test
mov
xchg
loopne
std
jl
imul
insl
sub
mov
insb
roll
mov
sub
xchg
cs
sbb
ret
lods
sbb
push
cmp
out
test
mov
add
loopne
insl
push
mov
fldenv
fcompl
inc
add
xchg
pop
xor
outsb
inc
adc
cmp
popa
loope
call
mov
push
pusha
scas
mov
inc
dec
and
out
js
adc
cmpsb
xchg
cmpsb
mov
jecxz
lret
mov
push
sbb
cwtl
push
sub
adc
fs
aam
and
iret
scas
push
nop
sub
or
rorb
mov
jb
roll
iret
cwtl
dec
repnz
test
sti
xor
loope
push
sub
and
mov
ds
sti
add
inc
jno
inc
sbb
inc
push
xchg
movsb
sub
pop
adc
sbb
add
test
cmp
jl
out
jl
bound
shl
mov
or
mov
jo
push
clc
hlt
sbb
mov
mov
imul
loopne
fs
aas
push
push
jo
inc
dec
pop
push
mov
iret
mov
aaa
js
mov
mov
hlt
aaa
popf
pop
adc
shll
inc
gs
fsub
scas
push
fsts
add
fstl
cmpsb
add
or
fldenv
add
repz
insb
push
cmp
or
push
out
adc
repz
cmp
test
dec
pop
push
icebp
push
xchg
mov
pop
cs
repz
and
insl
xchg
imul
push
gs
mov
mov
mov
in
scas
add
fwait
sti
jl
hlt
sbb
out
pop
aad
inc
dec
push
mov
push
aaa
mov
lcall
out
notl
hlt
js
push
mov
jecxz
into
pusha
push
cwtl
je
loope
xchg
scas
xchg
fsubs
clc
std
lcall
mov
out
adc
imul
add
imul
sub
imul
pop
xchg
insl
sbb
cmp
mov
imul
mov
dec
mov
and
mov
lahf
pop
decb
subb
cmp
cltd
push
mov
xchg
mov
stos
adc
adcb
xchg
xchg
xlat
push
sub
sar
or
divl
out
jbe
shlb
xor
mov
cmp
jp
jae
jecxz
mov
das
fidivrs
inc
mov
pop
mov
into
movsw
sub
pop
fstl
and
inc
imul
xchg
pop
scas
and
fistps
std
sbb
cltd
scas
mov
inc
mov
jbe
xor
scas
ret
movsb
inc
xchg
daa
scas
lds
add
mov
aas
cmp
xor
fstl
and
jbe
or
cwtl
iret
flds
inc
iret
mov
sub
ja
pop
popf
inc
adc
inc
sub
sbb
insl
aas
push
aam
leave
mov
cmp
mov
adc
movsb
xlat
in
lea
out
pop
dec
leave
fisubl
push
push
mov
add
push
das
sahf
loope
test
and
or
sub
xor
mov
repnz
sbb
mov
inc
sahf
in
sahf
cld
jnp
push
cmpsl
add
sbb
inc
pop
and
fidivs
lock
andb
nop
into
jne
adcb
mov
cmp
pop
sub
jae
leave
adc
cs
fnstenv
mov
lcall
sub
jns
jmp
sub
pop
shrl
lcall
add
inc
jle
mov
cltd
push
fcoml
std
push
leave
pop
dec
add
xchg
jb
dec
jp
js
dec
pop
fprem1
test
mov
orl
and
mov
pshufw
jge
dec
imul
loop
push
stc
std
stos
scas
bound
lock
mov
pop
out
fstps
das
xor
andb
push
in
insl
lods
ljmp
dec
scas
sbb
push
nop
jo
popf
out
sbb
int
stc
scas
mov
out
sub
in
mov
fidivrs
into
sub
aaa
cs
das
fcoml
xchg
mov
lea
sarl
sar
incl
aaa
out
cs
psllw
mov
ljmp
in
xchg
mov
pop
xor
jbe
push
out
cmp
movsb
cwtl
movsb
out
pop
fldcw
add
mov
sbb
sbb
push
repz
jb
scas
push
push
mov
inc
int3
adc
scas
rclb
fidivs
ret
cmp
test
stc
jg
fdivl
outsl
jmp
ror
pushf
add
es
mov
out
aas
inc
mov
push
and
cli
sub
shrl
mov
leave
hlt
or
fdivl
and
lret
mov
sti
cli
fptan
push
lods
mov
les
sbb
out
cwtl
cmp
outsb
mov
cmp
xlat
loop
or
das
mov
lcall
arpl
mov
popf
rclb
or
repz
aaa
scas
cmpl
faddl
adc
enter
cld
lahf
scas
retw
mov
test
mov
jle
shlb
jnp
jmp
xorb
mov
hlt
lcall
jb
ret
sbbb
pop
push
cwtl
dec
popf
nop
lods
and
lcall
pop
push
fucomip
int3
stos
mov
jg
and
cli
dec
mov
push
clc
shll
bound
adc
outsb
das
or
add
dec
xchg
inc
adc
jae
ficompl
rol
addr16
mov
mov
mov
loop
and
push
jnp
push
in
mov
adc
enter
aaa
push
rol
lret
xor
rcl
scas
das
paddq
mov
cmpsb
sub
mov
sbb
xor
cmp
imul
loope
jl
xchg
imul
add
dec
cmp
xchg
push
aad
xor
mov
and
fdivr
pop
cmc
stc
dec
lods
pavgb
shlb
leave
xor
dec
mov
adc
pop
mov
scas
dec
inc
test
xchg
or
sub
mov
jae
addr16
mov
clc
fistpl
adc
mov
add
stos
lret
std
xor
icebp
dec
push
sarl
ret
andl
jle
call
pop
sub
inc
mov
jp
les
dec
insb
lretw
ret
dec
dec
outsb
ds
push
or
mov
add
mov
aad
xor
enter
xchg
cld
in
aam
adc
mov
ljmp
test
stos
pop
pop
jb
sub
or
sti
push
nop
add
rolb
lret
xchg
mov
ret
out
imul
loop
test
cld
adc
sub
lahf
cmp
pop
enter
leave
sub
mov
in
or
ja
rolb
add
mov
les
adc
dec
push
inc
je
shrb
idivl
pushf
ss
imul
pop
dec
dec
push
inc
mov
mov
mov
xchg
sbb
shlb
int
nop
test
outsb
push
inc
mov
flds
lods
int3
shl
rorl
and
mov
cmpsl
call
fidivrl
filds
sbb
mov
shr
pop
dec
lea
arpl
and
cmpsl
cmpsb
push
out
cld
jae
dec
push
inc
dec
mov
cld
sbb
inc
ss
push
or
push
cmp
jge
mov
xchg
push
ds
ret
jae
jecxz
lock
pop
into
jle
int
aas
jbe
push
push
into
push
xchg
sbb
lods
mov
mov
xor
inc
iret
and
popl
mov
xchg
sub
jne
addr16
fstl
push
pop
dec
xchg
mov
adc
in
arpl
mov
xchg
mov
outsl
out
push
pop
pop
fisubs
jp
jmp
fimull
adc
pop
pop
jno
or
add
mov
pop
jno
jg
add
pop
jle
push
and
popf
inc
movsl
pop
icebp
repnz
inc
sbb
rorl
pop
mov
aam
ljmp
sbb
add
mov
ret
xchg
pop
out
xor
inc
push
jp
cmp
inc
lcall
fs
cmp
rcl
into
je
es
jecxz
xor
in
push
addr16
mov
mov
and
sbb
mov
and
cmc
jne
cmpsb
jnp
out
cmc
push
cmpsl
fdivrl
lods
cmp
in
dec
lret
xor
pop
jmp
and
xchg
ljmp
cs
divl
dec
subl
data16
movsb
fidivrl
mov
lret
jle
outsb
cmp
dec
sbb
push
jp
dec
push
pop
stos
out
mov
mov
lret
jle
outsb
cmp
dec
sbb
push
jp
dec
push
pop
stos
out
mov
mov
lret
jle
outsb
cmp
dec
sbb
push
jp
dec
cvtps2pd
stos
out
mov
mov
lret
jle
outsb
nop
hlt
or
dec
loop
test
mov
movsl
ss
and
fidivs
pop
shlb
imul
dec
test
cs
aad
aad
push
out
and
fidivs
gs
mov
movsl
jle
dec
test
cs
aad
lds
out
xlat
incb
scas
add
sahf
rcll
and
loopne,pt
sahf
jl
pop
subl
mov
push
outsb
jge
jb
sub
dec
or
mov
in
roll
fnstcw
pop
push
in
fadds
rcrl
adc
pop
or
mov
loop
sti
pusha
sub
adc
pop
mov
jecxz
movsl
addb
mov
pop
jmp
iret
jmp
scas
stos
addr16
into
mov
movsl
imul
jnp
or
outsb
aam
lds
lret
add
scas
in
inc
fidivs
enter
jg
mov
insl
mov
in
sub
imul
mov
mov
xchg
jno
js
mov
aad
push
outsb
out
jae
adc
scas
sbb
sahf
jae
aas
jle
dec
mov
mov
push
lds
adcl
mov
sbb
or
and
inc
out
mov
notb
lock
xor
mov
mov
into
mov
add
shrb
notl
xchg
sbb
xor
test
mov
push
stos
es
push
mov
mov
movsl
jle
dec
test
cs
aad
lds
xor
into
add
mov
mov
movsl
jle
dec
test
cs
aad
lds
xor
cmp
btsl
cmp
out
fdivl
mov
push
jmp
add
push
push
sub
jo
mov
int3
sub
std
fcmovb
mov
xor
or
xor
dec
pop
outsb
mov
test
xchg
dec
mov
addl
push
pop
scas
mov
test
leave
cli
aad
or
mov
data16
pop
ret
not
jp
mov
into
adc
sarb
pop
or
xchg
xchg
or
push
pop
enter
clc
cwtl
iret
in
popf
divl
mov
enter
jns
neg
mov
cwtl
test
inc
xorl
rcrb
inc
cmp
mov
cmpl
or
orl
pop
addr16
movsl
lods
jbe
std
or
cmp
ret
push
fsubr
movq
jge
xchg
aaa
sbbb
sub
imul
popf
divl
js
cmpsb
in
add
push
repz
jb
pop
imul
fdivr
mov
aam
clc
loop
ss
dec
in
and
push
xlat
arpl
jge
push
les
mov
mov
cld
fcmovbe
mov
add
es
mov
shrb
push
out
test
and
mov
xor
mov
lcall
aaa
inc
fimuls
das
aas
test
cmp
add
cltd
sti
in
dec
push
mov
cmc
mov
jp
ljmp
jnp
bound
push
and
aad
inc
in
shlb
aam
out
cmp
mov
mov
icebp
or
add
jg
test
pop
add
stos
cld
loopne
xor
movsl
cmp
out
stos
test
call
sbb
cld
dec
jne
adc
jb
lods
ss
inc
dec
out
pop
push
cmp
nop
and
adc
out
and
jb
lret
cltd
mov
daa
xchg
push
mov
mov
cmp
movsb
mov
jnp
mov
sub
cli
mov
popa
xchg
jne
in
hlt
mov
mov
in
in
pop
shrl
mov
jmp
enter
aad
mov
push
lock
sub
icebp
outsb
push
repz
lds
nop
xchg
nop
sub
cltd
inc
cmpsl
xor
popf
push
mov
shrl
xor
popa
test
scas
fcompp
lret
add
mov
pop
aaa
push
leave
jbe
shrl
ret
fiadds
mov
ss
inc
inc
mov
sbb
and
push
push
mov
sub
ret
arpl
les
xchg
jg
xor
test
cmp
test
js
jno
out
cld
cli
jmp
out
adc
mov
and
jnp
push
mov
mov
test
xlat
mov
mov
jg
dec
arpl
jmp
dec
mov
xchg
rdseed
lret
cmp
mov
add
jecxz
push
fdivs
sub
xor
jbe
cmp
add
popf
jl
sti
push
pop
or
aad
xor
subl
mov
inc
ds
inc
aad
test
call
cs
cmpsl
neg
ja
loope
shlb
cld
mov
repnz
fwait
push
daa
and
mov
sahf
adc
adc
ja
pushf
out
insl
xchg
add
push
mov
jmp
idivb
mov
lea
cmpsl
xchg
push
mov
arpl
aaa
mov
mov
or
stos
dec
iret
mov
jbe
out
xadd
and
cmp
mov
sub
mov
cmc
in
sub
je
mov
out
push
aas
push
lods
cmpsl
adc
add
sbb
add
fsubrl
mov
dec
or
sbbl
popf
repnz
gs
clc
pop
jae
orb
scas
sub
in
fsubrs
hlt
out
hlt
cmp
dec
and
aad
lds
pop
insb
bound
nop
cmpsb
cmc
dec
call
push
xchg
and
push
movsl
sub
xchg
fldz
or
js
mov
mov
push
ficoms
jg
cmp
loop
adc
sbb
cwtl
adc
or
dec
ds
mov
cmp
les
pop
pavgb
dec
lds
mov
sbb
mov
das
in
push
push
sarl
sbb
loop
repz
sub
jge
fnstenv
jns
fs
ss
adc
test
xor
push
andb
dec
pop
dec
lret
push
outsb
orb
outsl
ds
stos
cmc
mov
jmp
shll
dec
je
mov
sbb
xchg
jg
int
inc
cmpsb
movsl
xor
mov
pop
adc
cmp
call
shl
clc
mov
cmp
out
sbb
jp
adcb
sti
cmp
ret
or
mov
mov
pop
data16
rcll
xor
stos
add
lahf
xchg
mov
iret
xchg
adc
mov
out
sub
jno
cmp
in
cltd
jmp
mov
mov
cmpsb
push
jno
call
and
test
or
adc
cmp
dec
test
sub
cmpsl
cs
sub
ret
popf
ficompl
cmp
xchg
mov
dec
fdivs
and
adc
mov
xchg
pop
adc
xor
push
and
ffree
es
mov
add
scas
mov
outsl
xchg
ret
jmp
dec
adc
jmp
pop
testb
je
or
or
mov
pop
push
dec
mov
outsl
pop
dec
movsb
cmp
shll
rcrl
arpl
xor
mov
push
fcomps
jle
xor
aas
inc
sbb
dec
iret
cmp
sbb
aaa
cld
mov
add
je
sub
pop
and
dec
shlb
popf
pop
ret
dec
add
jl
in
sbb
shlb
jl
nop
cld
shrb
scas
adc
fiaddl
jg
add
stc
pop
mov
orb
push
dec
fnstsw
addb
lea
dec
rep
dec
cmp
sub
ss
mov
adc
ret
jb
cmp
sahf
daa
cmp
sbbb
dec
jne
pop
sarl
int3
shr
jb
fnstsw
lcall
cmc
test
cmp
sbb
outsb
cmpsb
in
xchg
andl
jo
shrl
push
imul
out
xor
mov
jne
shrl
mov
dec
push
sbb
mov
fcoms
lods
mov
xor
and
ret
cmp
and
push
or
and
sbb
mov
fldenv
sub
xor
faddp
ljmp
jecxz
sub
lea
adc
movsb
rcrb
mov
sti
lea
mov
test
inc
mov
sub
scas
cwtl
stc
sahf
xor
mov
dec
pop
daa
inc
and
ret
pop
dec
nop
adc
push
mov
mov
adc
dec
aad
sbb
shrb
sbb
imul
sub
inc
lret
sbb
mov
mov
pusha
mov
sbb
insb
cmc
shl
or
mov
jge
xchg
push
dec
cltd
sub
xchg
pusha
cwtl
cld
mov
add
jl
xor
bound
mov
push
std
lock
dec
pop
loop
std
jo
movsb
dec
push
sub
adc
xchg
and
pop
not
cmpsb
and
adc
mov
loope
adc
xchg
mov
jae
cmp
mov
and
pushf
movaps
sub
cmpsl
add
rol
add
mov
inc
in
lods
adc
stos
jecxz
inc
test
shr
mov
scas
sub
bound
iret
xchg
pop
lds
in
mov
mov
xchg
dec
nop
dec
push
pushf
lea
arpl
push
fsubp
mov
sub
shll
pop
and
push
mov
sahf
mov
xor
cld
cli
mov
sub
insb
xchg
aas
les
dec
lods
fidivs
mov
das
arpl
out
xor
out
mul
dec
xor
inc
xor
daa
stc
inc
jl
push
pop
out
cmovge
in
hlt
xor
push
aam
insl
ja
mov
mul
icebp
gs
dec
imul
dec
xchg
js
add
xor
jae
in
pusha
dec
mov
aas
add
ss
jmp
inc
je
pop
push
rclb
into
add
mov
stc
cmp
xchg
out
jo
pop
push
xchg
iret
sub
dec
cmp
adc
jge
jb
scas
sti
insb
mov
sub
into
loope
and
rol
cmp
test
iret
push
mov
sub
mov
or
insl
adc
leave
sub
std
out
push
out
std
andl
add
mov
adc
inc
mov
inc
mov
daa
inc
sub
cs
cmc
jne
mov
cmp
jmp
pusha
mov
hlt
dec
jbe
enter
or
sub
add
pop
pop
inc
lds
push
add
dec
leave
fisttps
hlt
and
mov
jns
mov
mov
sub
adcl
je
stos
int
sbb
mov
sbbb
in
test
xor
fwait
xor
mov
pop
adc
adc
divl
jnp
xchg
xchg
popf
mov
lcall
mov
xor
aam
test
test
pop
cld
xchg
mov
daa
mov
mov
sarl
movsl
stos
mov
les
test
pop
adcb
out
lods
rsqrtps
jge
cmpsl
mov
xchg
jl
sub
out
or
fucomp
pop
cmp
lcall
lock
insl
fcomip
clc
adc
movsl
shr
xor
sub
xlat
pop
ret
sbb
dec
cmp
mov
pushf
std
call
push
push
leave
icebp
lods
addb
je
ja
pushf
and
adc
push
shlb
mov
pop
sub
outsb
jecxz
cltd
inc
mov
and
popa
or
lret
imul
mov
xor
shrb
fs
xlat
cmc
cwtl
push
in
mov
xor
mov
lea
push
xor
in
je
adc
and
bound
fisubrs
push
mov
sub
push
orw
mov
fisubrs
rclb
sub
mov
mov
cmp
rolb
rorl
add
sbb
cmpl
cmpsl
rcr
pop
mov
mov
in
mov
pop
frstor
jne
andb
insl
and
cwtl
and
cmp
mov
adc
jg
lods
gs
aad
test
cmpl
pop
push
sarl
pop
cli
pop
pop
insl
xor
arpl
or
lods
mov
xchg
rclb
or
mov
sbb
mov
imull
sub
adc
cld
sahf
xor
sub
out
push
pop
and
sub
pop
nop
xchg
call
xor
daa
popa
pop
push
inc
hlt
in
xchg
sbb
or
cmp
xchg
cltd
or
adc
push
adcb
lods
add
jnp
shll
icebp
ret
xlat
mov
fisubl
jnp
testl
xchg
adc
fists
sbb
and
pop
sbb
or
or
sbb
ljmp
jp
xor
push
xchg
repz
fiaddl
push
sbb
inc
js
sub
aaa
sti
rcl
ror
subps
dec
repz
jb
or
mov
test
adc
stos
aad
mov
push
jnp
pop
lock
xchg
ja
sarl
adc
out
test
or
int
mov
bound
mov
mov
gs
pop
add
jnp
push
outsl
cltd
les
dec
adc
out
test
pushf
mov
scas
maxps
inc
fs
cmp
orl
xchg
mov
pop
jge
addl
pop
xchg
or
adc
adc
ja
lock
adc
jne
inc
mov
and
fs
mov
icebp
sub
dec
adc
fistpl
adc
cmp
mov
adcb
sbb
movsb
xor
dec
jo
mov
mov
push
fimull
out
push
movsl
cmpsb
jnp
scas
pop
aas
pop
sbb
mov
lods
xchg
inc
xchg
dec
dec
or
xor
fcomps
dec
jae
jne
cmc
dec
fldenv
scas
mov
jl
jl
mov
sbb
push
std
ret
mov
push
pop
mov
and
out
dec
rol
call
ds
cli
sbb
mov
sub
out
popa
fwait
mov
in
jmp
xchg
mov
movsl
inc
repz
inc
ror
push
int3
push
js
push
decl
and
pusha
and
pop
xchg
mov
je
mov
dec
and
and
std
out
xor
xor
push
test
outsl
imul
jno
mov
subb
pop
mov
gs
xor
fildll
adc
dec
lods
out
and
hlt
lods
data16
ss
lahf
mov
std
xor
shrl
or
daa
arpl
inc
or
mov
movsb
pop
push
and
imul
jecxz
fiadds
insb
push
cmp
aam
pusha
sbb
and
test
pop
sti
push
mov
cmp
call
jg
pop
mov
aam
pop
lock
imul
xchg
sti
pushf
push
jo
cmp
or
lods
in
stos
test
fstps
inc
loope
fistps
xchg
lahf
movsl
popf
test
dec
mov
rorl
loope
and
sbb
xchg
or
push
cmpsb
mov
bound
add
lret
mov
clc
sbb
and
cmpsb
pop
and
std
inc
jge
dec
jae
lret
sbb
pop
test
mov
lret
jb
popa
fwait
sub
iret
aas
xorb
mov
mov
or
lods
fdivrl
popf
dec
int
or
call
jmp
mov
call
outsb
jl
sti
xchg
ljmp
dec
mov
ss
lret
pop
arpl
push
push
mov
jle
ljmp
test
fnstenv
or
pop
decl
pop
int
shrl
scas
int
add
pushf
movsb
dec
adc
in
outsb
sahf
subl
or
mov
mov
insb
imul
lahf
or
popf
shrb
cli
adc
jo
adc
dec
dec
les
test
clc
jbe
mov
mov
les
lds
push
or
mov
sarb
jno
jo
jmp
addr16
mov
sbb
sbb
push
mov
or
fld
jle
and
xor
pop
fs
cmpb
adc
lret
and
inc
adc
cwtl
sbb
nop
xorb
xchg
aam
cmpsl
fimuls
loop
jecxz
call
pop
fsts
xor
cmp
inc
scas
dec
mov
sbb
mov
mov
mov
xchg
and
pop
std
pop
imul
imul
ret
fisubl
lea
gs
ljmp
fs
inc
aaa
add
or
movsl
add
stos
jae
mov
imul
out
inc
jae
mov
mov
inc
sub
test
sahf
mov
test
xor
loop
push
dec
in
inc
aad
push
leave
or
cltd
rcrl
mov
and
pop
cmpsl
pop
xchg
in
sbb
xor
jbe
jne
daa
xchg
dec
sbb
xchg
nop
insl
arpl
call
mov
negb
testb
dec
fists
pop
push
or
mov
xchg
mov
xlat
shll
push
and
xchg
mov
add
and
or
mov
mov
push
jmp
outsb
pushf
jnp
adc
pushf
ja
lods
sub
dec
jmp
icebp
or
dec
fldt
jnp
inc
push
lods
xchg
rorb
iret
repz
sub
clc
jg
mov
jp
sub
andl
call
ja
arpl
loop
insb
out
clc
adc
cld
dec
stos
pushf
addl
xor
jg
lods
xor
push
int3
in
adc
in
stc
sbbb
sti
sbb
jnp
and
out
mov
pop
aad
add
pop
cmp
ja
les
out
sarl
xchg
dec
xchg
cmp
cmp
int
bound
sbb
insl
in
mov
out
mov
into
lahf
setae
int
mov
or
arpl
mov
xchg
fmuls
lods
testl
pop
out
mov
loop
jae
imul
movsb
push
repnz
test
sbb
adc
addr16
in
lret
jmp
add
push
sub
add
icebp
mov
sub
das
lcall
inc
add
dec
pop
or
mov
lahf
and
mov
adc
insl
outsl
stos
movsb
loopne
jmp
mov
repnz
lcall
enter
xchg
iret
inc
pop
sbb
scas
mov
int3
pop
aas
dec
inc
dec
jle
enter
jp
mov
shl
test
mov
mov
insl
mov
call
xor
mov
pop
sbb
imul
and
pop
out
xlat
push
jns
addr16
mov
pusha
mov
jb
mov
xchg
lahf
sub
enter
sbb
cmc
in
pop
cld
dec
inc
xchg
pop
jae
adc
and
cmp
popf
shl
sub
lds
popf
cmp
sub
faddp
out
dec
fistpll
iret
popa
aas
adc
aad
jne
mov
pop
fcmovu
mov
mov
cmp
and
pop
and
sbb
fwait
mov
sub
cmp
pushf
mov
xor
enter
rcl
adc
in
dec
lea
xor
adc
lea
les
or
or
out
mov
xchg
mov
je
cmp
xchg
repnz
stc
mov
sti
cmp
pop
iret
pop
pop
out
xlat
fiaddl
stc
jb
orl
scas
pop
sub
cmp
leave
paddb
xchg
shlb
xorl
push
mov
dec
stos
mov
inc
inc
lcall
arpl
dec
ds
jmp
nop
mov
pop
aad
add
into
pusha
in
adc
loopne
sub
int
dec
pushf
loop
fstp
and
sbb
out
clc
movsb
pop
cmp
out
in
inc
jnp
fwait
pcmpgtw
mov
sub
sub
sti
jmp
and
into
sbb
seta
stos
fidivl
or
sbb
inc
jns
xchg
clc
jle
xor
and
dec
mov
pop
push
mov
movl
stc
mov
jle
fwait
push
inc
outsb
je
pushf
ss
imul
outsb
mov
flds
mov
fdiv
dec
ds
inc
arpl
mov
push
push
sub
cmp
xor
into
outsl
mov
int3
outsl
ja
lahf
clc
mov
dec
fildll
lea
test
cmc
push
cltd
jl
rcrl
std
jp
adc
adc
out
outsl
mov
aad
cmp
sbb
or
test
leave
jnp
pop
inc
pop
addr16
add
sbb
cli
popa
dec
cli
int
out
sbb
mov
mov
and
adc
xchg
jg
sub
xchg
rol
lods
jbe
fldt
cmp
pop
sarb
mov
or
ds
push
push
cs
jae
mov
sbbl
sub
out
pop
push
mov
jge
xor
cmp
fistps
bound
jb
aam
jg
adc
push
mov
movsl
mov
pop
add
adc
pop
and
addl
idivb
inc
jns
movsb
jg
jo
push
and
mov
dec
je
loop
adc
sbb
scas
jnp
out
mov
orb
loopne
testb
imul
inc
inc
mov
jl
mov
clc
dec
mov
mov
dec
jmp
out
bnd
cmp
lods
jmp
xchg
neg
arpl
mov
lcall
call
xchg
push
add
push
sar
fs
imul
in
ljmp
fcmovu
or
enter
pushf
xor
jbe
les
and
sbb
or
in
mov
fsubrl
movsl
sub
push
mov
pop
pop
and
mov
jl
cltd
and
add
sbb
fdivrp
rcl
std
insl
mov
aad
cmp
ja
cltd
test
mov
icebp
inc
movsb
jl
into
divl
jle
stos
leave
push
loopne
jecxz
mov
cmc
stos
or
jp
xchg
xor
jle
call
jp
pushf
out
shll
pop
mov
daa
gs
push
or
push
cs
xlat
push
push
iret
add
mov
mov
movsl
jle
dec
test
cs
aad
lds
xor
into
add
mov
mov
movsl
jle
dec
test
cs
aad
lds
xor
into
add
mov
mov
movsl
jg
dec
test
das
cmc
ds
sub
decb
and
ds
push
lds
xchg
pop
aam
dec
test
andb
loope
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
or
sbb
or
pop
cmpsb
test
mov
in
cmc
cli
fsubs
or
hlt
inc
dec
push
sub
test
cwtl
test
hlt
clc
lds
xor
sbb
jne
inc
cmpsb
push
inc
movsl
ja
fcomi
xlat
lock
mov
mov
push
add
pop
and
scas
push
fiadds
push
lea
sub
push
call
test
lea
call
mov
cmc
cmp
sub
outsl
adc
cmp
rcrl
and
adc
inc
or
enter
sub
sbb
mov
sbb
push
cmpsl
push
push
cmp
fs
cmc
pop
cmp
cmp
call
cmp
movsb
sti
mov
cwtl
mov
jne
cmp
aad
sbb
int
aas
sbb
and
sti
loope
inc
movsb
loop
lock
incl
add
xlat
pop
out
xor
adc
jne
inc
xchg
push
fsubs
cwtl
xchg
shl
cmc
add
enter
jp
cmp
push
add
pop
sub
sarl
idiv
shl
arpl
movsl
mov
imul
dec
add
adc
int
out
clc
in
xchg
call
mov
mov
jg
pop
jo
and
pop
movsl
test
mov
in
cmc
clc
fsubs
or
js
dec
push
pop
movsl
test
mov
in
cmc
clc
fsubs
stos
push
mov
xchg
push
lret
push
clc
xor
mov
call
hlt
jmp
ficompl
stos
sbb
dec
jge
adc
pop
pop
sbb
jge
ja
ljmp
and
add
push
outsl
cmp
or
sub
repnz
mov
mov
lods
mov
icebp
out
hlt
or
cmovo
cmp
fwait
push
adc
out
add
std
mov
mov
out
enter
test
lahf
mov
loop
lahf
cmp
call
clc
mov
daa
out
lret
add
xor
xor
ss
in
cld
enter
adc
fidivs
adc
js
mov
jmp
fucomi
push
mov
sahf
xor
pop
cld
push
or
sti
mov
test
cmp
fbstp
ds
in
mov
daa
mov
movsl
push
jo
cwtl
imul
insb
mov
les
rcrl
int3
shll
imul
xchg
pop
sarl
mov
mov
fdivrl
shrl
pop
jge
mov
in
fstl
cwtl
jecxz
xchg
rolb
stc
adc
xor
ljmp
pop
iret
inc
xchg
lahf
insl
mov
and
sbb
jmp
sub
mov
popf
mov
repnz
and
push
fsubl
pop
cmp
ja
out
push
lahf
jb
test
or
cs
lds
cmpsb
sbb
adc
stc
mov
fdivrl
pushf
std
std
and
lea
jl
push
xchg
jp
imull
jo
add
and
xchg
cmp
neg
pop
idivb
psubsb
enter
jmp
push
fdiv
push
cltd
mov
repz
stos
aam
mov
jg
outsl
push
pop
enter
int3
inc
add
jo
test
aaa
xor
dec
or
lahf
cmp
or
jp
shll
in
pusha
lret
mov
pop
out
sti
cmpsl
mov
xor
mov
sub
pop
lahf
mov
imul
mov
xor
in
das
icebp
mov
nop
xchg
dec
ds
cld
xchg
xor
cmpsl
cld
push
hlt
ja
cmc
js
push
movsl
push
mov
outsb
movsb
mov
cld
xor
shlb
dec
push
push
sbb
popa
and
push
cltd
enter
pop
movsb
push
and
push
ds
sub
aaa
mov
cs
mov
jnp
notb
xchg
stos
xlat
cmpl
lret
add
call
adc
aad
mov
push
sbb
mov
push
sub
test
sbb
jns
pop
adc
add
cmp
dec
xchg
adc
jp
fsubrp
jb
dec
push
xchg
gs
iret
pop
outsb
inc
mov
push
xor
dec
jle
and
addr16
adc
or
movsl
insb
sub
out
lds
std
loop
ror
push
daa
test
inc
xchg
cmp
pop
push
jle
and
mov
or
into
mov
push
inc
inc
mov
adc
and
sbb
pushf
sub
pop
mov
lahf
xor
pushf
and
ret
cltd
inc
cs
repz
pop
jecxz
into
data16
cs
jp
sbb
mov
jne
mov
outsl
adc
loopne
int
mov
or
das
or
icebp
ds
cmp
pop
push
leave
xor
scas
data16
jne
ret
lahf
mov
cmp
lods
movsl
jp
push
mov
inc
xchg
je
repz
xchg
xchg
add
arpl
adc
or
mov
es
mov
popa
dec
sahf
cmp
cli
mov
mov
nop
in
mov
push
jae
ret
add
gs
or
iret
and
leave
lret
in
fmul
js
mov
scas
sub
call
int3
neg
xor
inc
movsl
add
adc
mov
mov
sbb
push
aas
mov
stos
stc
call
into
sahf
xchg
pop
mov
ret
or
push
push
jp,pn
push
mov
int
or
addr16
pop
mov
mov
mov
adc
sbb
fbld
fldenv
aas
mov
pop
xlat
dec
sarb
cmpsl
iret
mov
xchg
ficompl
add
outsl
adc
lods
outsl
xchg
lds
dec
mov
mov
rorl
push
andl
push
cmp
into
subb
lret
icebp
push
push
sbb
sub
pop
gs
push
jge
imul
push
pop
das
pop
and
push
adc
lds
jl
push
mov
dec
nop
or
sbb
scas
push
xlat
cltd
sti
lret
adc
jo
mov
add
mov
insl
rolb
imul
pushf
add
cli
pop
adc
cmpsl
inc
stc
loope
add
fimuls
repz
testl
cmp
sbb
sub
and
pop
jno
loopne
insb
mov
lea
adc
lea
add
jb
dec
pusha
pop
jmp
cltd
cmp
or
ret
mov
rcrb
test
jno
add
dec
ret
in
outsb
pop
movsl
leave
std
or
dec
rcrb
inc
cltd
in
shll
aaa
mov
xchg
repz
add
clc
int3
arpl
movsb
ficompl
outsl
test
mov
call
pop
mov
shll
lods
xor
dec
ja
mov
and
push
mov
push
jo
pop
mov
shll
pop
jo
shrl
mov
les
jge
sbb
clc
jl
pop
mov
cmovle
mov
lret
ret
dec
jne
mov
cmc
inc
xor
inc
shl
jg
call
cmp
fcoml
push
mov
mov
in
jbe
cmpsl
pop
rclb
push
or
aad
repz
mov
or
push
movsl
mov
cld
fnsave
push
jmp
add
hlt
std
pop
mov
mov
push
or
mov
aaa
jns
dec
push
ljmp
push
insb
jmp
pop
pushf
arpl
jne
hlt
and
and
sbb
enter
aad
mov
adc
jmp
or
inc
cwtl
sbb
push
mov
inc
jge
ret
jb
lret
pop
xor
hlt
aaa
outsb
xor
adcl
mov
cli
call
cwtl
stc
mov
and
jb
neg
sahf
in
pop
sbb
mov
push
xor
lcall
cld
sub
jne
fwait
jnp
cs
sbb
outsl
xchg
push
dec
lcall
xchg
xchg
cmp
xlat
mov
mov
cmp
out
adc
cmc
test
cmp
xchg
lcall
fsubrp
xchg
cmp
xchg
lcall
xorl
jp
loop
jge
ds
mov
or
jo
and
imul
adc
or
jmp
cmp
in
pop
and
push
nop
push
imul
xchg
mov
fnstcw
mov
adc
daa
addr16
clc
jbe
mov
sub
jbe
mov
ljmp
or
nop
shrl
pop
jbe
xor
nop
jecxz
add
inc
dec
pop
mov
mov
icebp
xchg
cli
sarl
mov
inc
mov
ljmp
add
sub
lock
data16
add
xchg
imul
movsl
lea
adc
pop
stos
pop
mov
cmpb
pop
add
xchg
push
mov
push
jae
aaa
aam
xchg
sbb
jns
pop
out
mov
loop
outsl
adc
popa
jbe
pusha
and
push
fsubrl
cltd
push
add
xor
and
stos
jns
mov
stos
cmpsl
inc
enter
mov
fistps
sarb
mov
divb
jo
insb
push
mov
scas
testl
test
pop
ss
pop
and
dec
adc
xchg
mov
xchg
mov
cld
mov
jle
test
push
xchg
stc
inc
out
jge
fwait
ret
jnp
test
jle
fcmove
or
ds
sbb
shlb
pop
inc
sahf
pop
xor
or
fldcw
sarb
pop
push
pop
mov
or
or
sbb
andl
dec
xchg
cmp
jp
dec
flds
xorb
sbb
sbb
inc
sbb
and
nop
mov
lods
shl
adc
popf
flds
lods
dec
fcompl
xchg
pop
and
jle
or
lods
pop
testl
rorb
gs
sbb
outsb
sub
fs
pushf
into
xor
outsl
or
pop
xorps
xor
or
ret
sub
fldcw
push
scas
jae
inc
das
jg
xchg
or
mov
add
mov
loope
add
mov
cmp
sub
vpmaddwd
test
adc
add
imul
lods
fsubrl
push
push
loope
mov
lret
mov
or
sti
adc
lods
dec
adc
sub
ljmp
mov
push
mov
fistl
fisubrs
pop
inc
push
lds
stos
mov
test
pop
mov
add
into
arpl
leave
mov
dec
notb
or
lods
inc
mov
dec
in
inc
mov
imul
mov
mov
adcl
in
or
arpl
mov
cwtl
mov
push
rcrb
sub
nop
sub
pop
jne
fsts
jecxz
add
push
lock
and
lahf
cli
insb
push
pop
fmull
or
xor
mov
jg
fdivrl
es
adc
xchg
and
dec
adc
jbe
mov
lahf
jl
or
loope
pop
sbb
and
adc
cmpsb
sub
cs
and
out
dec
mov
xor
mov
mov
leave
sub
ret
xor
and
and
rcll
lcall
pop
imul
je
in
sub
aad
mov
stos
push
mov
imul
loope
mov
in
mov
mov
or
ja
movb
lret
pusha
fwait
dec
and
daa
push
in
cmpl
jnp
add
add
test
data16
sbb
and
stos
insb
fsubr
test
cwtl
sbb
sub
push
sbb
ss
stos
in
adc
push
aad
in
popa
inc
mov
movsl
stc
push
aam
and
and
sub
cmp
mov
push
pop
pop
imul
ds
mov
ja
scas
and
pop
xor
enter
mov
repz
xlat
mov
pop
xchg
in
cli
adc
stos
push
aas
mov
xchg
add
or
sub
lds
mov
lods
std
inc
fisttpl
mov
add
push
or
dec
xchg
popa
inc
aam
repz
add
dec
sbb
jle
leave
mov
insb
into
xor
popf
fistps
xor
mov
mov
xor
and
dec
push
inc
loop
loope
xchg
and
add
add
lds
pop
fmulp
push
xchg
and
test
mov
jecxz
cwtl
int3
rolb
stc
or
or
mov
scas
jbe
cmp
cmp
jno
push
or
dec
add
or
jecxz
fdivr
dec
rorb
stos
push
pusha
mov
dec
or
enter
xchg
out
sbb
inc
jmp
jl
inc
daa
fisttpll
je
std
cmc
cwtl
addr16
ss
push
cmp
dec
in
je
cmp
out
stc
mov
aas
mov
jl
pop
mov
push
xchg
insb
pop
sub
adc
mov
daa
mov
andb
sbb
les
out
imul
dec
mov
cmpl
add
jmp
sahf
fcomps
and
call
adc
clc
add
add
repnz
in
out
mov
dec
xor
out
gs
push
or
cmp
add
mov
hlt
and
or
xor
or
push
lods
xchg
jbe
lahf
in
add
xorl
mov
fcmovu
sbb
adc
subb
add
pop
adc
push
aas
int3
stc
out
js
loope
or
aad
clc
je
fldt
test
sub
fldcw
xchg
out
call
daa
or
push
out
pop
pusha
pop
mov
in
std
lds
imul
dec
or
adc
jns
mov
test
shlb
pop
in
js
enter
rorl
pop
mov
or
sti
sbbb
outsl
test
imul
leave
out
push
sbb
mov
insb
lea
int3
testl
jae
loopne
scas
aas
frndint
pushf
cmpsb
push
lock
jge
mov
jb
cmp
stc
adc
inc
xor
pop
add
fwait
insb
cs
and
orl
dec
in
cmp
insb
mull
fisttpl
cli
shlb
dec
test
pop
loop
pop
addr16
roll
lds
aas
lods
cld
add
and
mov
jmp
daa
add
mov
mov
outsb
pop
or
mov
in
push
popf
mov
outsb
enter
mov
das
cld
pop
mov
nop
adc
out
test
pop
pop
push
rol
sbb
sub
mov
jb
movsl
xor
rorl
popa
and
adc
xor
repz
test
daa
dec
test
mov
je
out
jle
stc
je
lods
adc
sti
test
mov
add
ret
hlt
and
jg
lcall
cmc
andb
mov
xchg
cli
leave
pop
xlat
xlat
push
mov
aam
inc
rolb
aas
jns
std
lea
lea
insl
int
rcrl
fmulp
scas
not
aas
lods
inc
push
mov
xor
pop
add
sub
adcl
fnstcw
call
popf
mov
or
fildll
mov
test
inc
sbb
dec
pop
jmp
cmp
hlt
or
pop
sahf
sahf
sbb
data16
xor
pop
das
out
iret
shlb
lds
mov
jl
sbb
mov
cmp
push
ljmp
imul
cli
pop
sbb
fmull
scas
dec
enter
mov
leave
les
push
daa
sbb
ret
inc
aad
push
out
mov
mov
inc
mov
rclb
insl
xor
push
mov
mov
cmpsl
out
stos
add
xchg
sbb
add
xchg
out
add
pop
cld
jne
repnz
lea
cld
inc
ret
add
rolb
mov
adc
add
lea
jge
mov
cmc
jle
call
pop
out
mov
push
stos
lock
mov
nopl
cs
es
cmp
xor
out
fisubrl
nop
xchg
xor
mov
push
aas
xor
cmp
aam
add
dec
cmp
mov
fs
fdivp
jo
scas
xor
pop
das
xchg
pop
mov
lods
xor
test
mov
cmp
and
idivl
dec
sbb
lds
inc
test
inc
dec
sarb
rclb
jne
add
inc
mov
cmpsb
insb
fucomi
pop
mov
dec
int
mov
int3
insl
cs
negb
test
outsl
inc
stc
adc
lds
in
test
fnstsw
fwait
jle
gs
mov
lret
gs
repnz
decb
push
pop
aad
test
jp
add
mov
outsb
mov
xorb
bnd
call
call
movsl
test
sbb
or
in
push
divl
addr16
out
cmp
pop
test
sub
or
dec
xor
push
sbbb
fists
mov
add
ret
aam
rolb
mulb
fstpt
mov
out
cmp
push
xchg
in
fildll
lods
jne
jle
cmc
outsb
fwait
mov
mov
sahf
loope
push
or
js
cmp
sti
enter
or
xor
add
nop
call
lock
xchg
push
sbb
popf
jns
mov
ss
js
lods
adc
pop
dec
mov
movsl
sbb
inc
sti
aam
xchg
xchg
sbb
gs
xor
adc
outsb
xchg
fisubrl
xor
ds
lds
cli
repz
test
xchg
cmc
add
mov
jle
push
cmpsl
aaa
shl
cli
inc
in
imul
aam
les
dec
aaa
imul
outsl
inc
idivl
push
pop
mov
repnz
jae
xlat
jle
xor
jp
nop
push
shlb
cs
xor
movsl
sbb
cmpsb
dec
shrl
inc
dec
xor
sbb
mov
notb
jmp
das
or
outsb
movsl
inc
call
sub
popa
arpl
jo
mov
push
push
sahf
mov
scas
outsb
xor
mov
inc
pop
inc
subb
sarb
int3
scas
out
cmpsl
lahf
mov
repnz
xchg
sti
mov
xchg
xorl
cwtl
xchg
and
add
pop
in
inc
aas
push
xchg
jo,pn
or
add
jl
and
fistpll
cmp
inc
sub
rcr
lods
out
sti
xor
aad
leave
sub
scas
jne
lret
ljmp
pop
scas
test
or
add
mov
call
inc
jo
ret
mov
repnz
movsl
jmp
lds
ja
inc
mov
lods
aas
adc
jb
clc
xchg
xchg
ja
add
sahf
lock
inc
into
js
call
sbb
jno
outsb
leave
cmp
ret
cmp
daa
mov
fcmovb
inc
out
mov
mov
ss
out
and
icebp
jecxz
fcoms
inc
jo
mov
rorb
es
push
les
pop
icebp
cmp
out
pop
dec
mov
loopne
inc
mov
repnz
push
mov
push
xchg
mov
cwtl
loopne
or
cmpsb
and
dec
jbe
into
pop
repz
push
xchg
in
les
mov
loopne
adc
sub
fdivs
xorl
lret
adc
or
icebp
adc
loopne
in
mov
or
sti
mov
adc
pop
popf
scas
pop
negb
add
pop
outsb
int3
outsl
jg
sti
xchg
ret
lock
fcomps
add
jb
and
outsb
out
push
arpl
pop
leave
imul
hlt
mov
push
and
testl
nop
pop
lods
mov
xchg
sub
lds
nop
push
pop
int
mov
fisubl
mov
cmp
push
out
insl
icebp
clc
lret
pop
shll
sbb
or
les
xchg
popa
test
popf
loop
push
adc
mov
xor
shll
xor
ss
lods
or
iret
and
xchg
lods
dec
sbb
into
dec
inc
mov
pop
std
cld
ljmp
lods
push
mov
jno
push
out
inc
cmp
xchg
out
mov
out
pop
enter
cmc
jns
xor
mov
push
clc
enter
shl
loopne
xchg
jns
shl
mov
dec
xchg
dec
sti
arpl
xchg
mov
jns
mov
popa
mov
lcall
insl
xchg
aam
daa
inc
je
pop
cmp
push
mov
out
out
in
ljmp
in
xchg
dec
test
into
push
out
push
mov
insb
insb
mov
jns
movsb
stos
xchg
adc
inc
nop
sub
mov
inc
push
sti
out
das
inc
sub
sub
push
call
insb
or
push
jle
jo
or
mov
into
push
pop
cltd
mov
xchg
cmp
stos
test
adc
rolb
cmp
sub
dec
adc
sub
or
notb
fmulp
xchg
movb
iret
add
aam
push
loopne
fcomi
push
adc
sbb
adc
inc
testl
add
mov
pop
pop
repz
je
arpl
push
movsb
lock
or
xor
pop
mov
in
lahf
sub
xchg
push
pop
orb
aam
test
dec
gs
lds
cmp
scas
or
rolb
sub
repnz
rclb
sbb
xchg
inc
mov
sub
adc
out
movsb
dec
pop
and
xor
mov
adc
jo
gs
shll
pextrw
or
js
xor
inc
jnp
rorl
lcall
repz
xchg
jns
xchg
xchg
nop
mov
push
cmp
and
iret
mov
arpl
sub
sub
inc
cwtl
fsubl
dec
cmp
and
add
mov
shlb
jne
leave
sub
jbe
int
mov
inc
xchg
add
pop
xor
mov
adc
mov
int3
int
push
and
sbb
movsb
outsl
loop
mov
mov
dec
cmp
fs
js
dec
push
pop
movsl
test
mov
in
cmc
clc
fsubs
or
js
dec
push
pop
movsl
test
mov
in
cmc
clc
fsubs
jo
sbb
je
inc
dec
push
pop
movsb
jo
mov
in
cmc
clc
call
xor
sbb
jne
pop
pop
push
dec
adc
mov
pop
cmp
mov
cmpsb
pusha
xchg
jo
pop
mull
add
shrb
push
rolb
xorb
mov
mov
cmpsb
push
xchg
jo
add
adc
and
xor
test
xor
adcb
data16
mov
cmpsb
js
push
out
daa
mov
fildl
scas
xor
cmp
xor
xor
cli
push
sub
push
jecxz
dec
in
or
aad
ret
cmp
sbb
hlt
ljmp
test
fnsave
out
imul
stc
dec
or
das
fstps
jmp
cmp
int
push
sub
dec
mov
sub
mov
psubw
aad
or
ja
nop
cmp
addb
out
fidivs
es
lret
loopne
lods
addl
pop
inc
mov
imul
xor
das
xor
jmp
xchg
jbe
ds
cmpsb
mov
sub
mov
pop
sbb
ss
and
arpl
stc
inc
xorb
mov
pusha
xchg
xchg
testb
and
sub
fnstenv
enter
jmp
data16
mov
filds
mov
xchg
and
sarb
xchg
inc
sahf
jbe
add
and
and
and
push
lret
jb
je
jle
dec
xorl
movsl
jno
push
in
jecxz
shlb
mov
sub
cmc
add
les
out
xor
shlb
es
lock
xorb
mov
mov
cmpsb
pusha
xchg
jo
add
adc
and
xor
shlb
es
lock
xorb
mov
mov
mov
stc
sbb
add
out
mov
sarl
sbb
nop
and
icebp
push
mov
sarb
sbb
les
dec
fsubs
xchg
repz
or
add
pop
outsl
xchg
inc
push
aas
bound
mov
mov
push
fldl
inc
mov
push
inc
add
sbb
bound
fwait
loop
cmp
jne
mov
sti
jnp
test
jns
mov
sub
adc
stc
cwtl
push
mov
adc
xchg
jo
or
cmpsl
push
jmp
out
push
shrb
jb
sbb
sti
mov
jmp
outsl
mull
jae
loope
pop
cmp
cli
push
push
shll
adc
negl
bswap
call
mov
leave
or
rcrb
push
inc
add
lock
mov
inc
dec
jp
data16
jge
idivl
shrl
divb
push
dec
cld
cmpsb
xchg
and
add
mov
movsl
sbb
enter
gs
imul
sub
aaa
data16
cmpsl
sbb
cmp
ljmp
add
je
mov
rcrb
out
mov
and
inc
aas
xor
sti
imul
cmp
inc
lods
adc
adc
jmp
inc
jecxz
and
push
jmp
inc
pop
shll
mov
mov
jbe
into
jp
out
je
ret
sub
in
scas
insl
out
int
mov
push
push
shlb
ja
in
mov
mov
fisttpll
sub
mov
arpl
pop
jb
mov
dec
insl
xchg
rol
orl
call
call
and
enter
bound
in
ja
push
and
mov
cltd
jne
outsl
ja
adc
ljmp
cld
and
mov
stc
cmp
popl
test
xchg
jl
fldl
loope
inc
dec
mov
aad
sbb
int3
xorb
pop
fmull
das
das
scas
adc
lahf
jle
arpl
pop
fldt
push
aas
xchg
mov
or
out
mov
mov
arpl
lret
mov
pop
inc
sub
testb
arpl
call
cmp
or
push
dec
or
orb
std
in
dec
dec
mov
add
rclb
sbb
mov
and
test
jmp
mov
or
ds
cmpsb
ror
ficompl
lea
and
sbb
outsl
clc
mov
ss
or
inc
jbe
mov
mov
xor
inc
adc
xlat
adc
dec
sbb
mov
inc
in
inc
sub
mov
and
and
fisubrl
clc
daa
test
iret
mov
call
sarl
jl
mov
fs
adc
or
test
lret
pop
xor
xchg
dec
push
jle
sbb
and
xlat
pusha
aam
jle
xor
jmp
subb
pushf
jmp
int3
jb
push
and
aas
mov
inc
xchg
in
dec
inc
dec
or
aas
fld
push
jp
adc
push
inc
shll
and
shlb
out
push
stos
sub
divl
mov
loopne
cmp
and
push
xor
gs
sbb
dec
or
xchg
jne
cli
pop
xchg
lods
mov
add
inc
sbb
loop
popf
ss
xor
jge
fwait
or
pushf
inc
lret
jg
xchg
pop
mov
jle
int
mov
jae
jae
push
repz
inc
scas
ret
lods
loopne
dec
cmp
xchg
xchg
xor
std
dec
cmp
stos
mov
movsl
inc
in
mov
mov
mov
and
out
pop
jbe
pop
outsl
dec
aas
inc
mov
or
push
xchg
xchg
sahf
js
fstps
adc
imul
lcall
les
or
mov
in
mov
lods
xchg
daa
mov
fnstenv
pop
shlb
jmp
dec
pop
sbb
or
repnz
cmp
and
xor
ret
cmp
push
pop
push
test
pusha
adc
test
jge
or
lock
jo
fcmovnb
int3
movsl
cltd
xchg
cs
and
sar
out
push
xchg
push
rclb
mov
out
lods
sti
js
pop
aaa
scas
xchg
xlat
arpl
inc
daa
dec
xchg
test
fisttpll
jnp
aaa
rclb
test
pop
add
popf
mov
xchg
dec
pusha
sub
push
mov
mov
push
dec
xchg
jmp
add
mov
jns
jle
push
xchg
daa
notl
pushf
lret
sub
mov
cmp
cmp
mov
inc
jb
xor
fistl
or
xchg
scas
mov
jo
mov
lret
cli
pop
fmull
addl
stc
pop
ficomps
jg
std
test
sbb
dec
mov
in
out
orb
mov
into
aad
movsb
rolb
loop
xorl
popf
sbb
test
and
popf
jnp
iret
xchg
out
insl
inc
pop
or
ret
lcall
ljmp
into
xlat
pop
sub
push
pop
leave
dec
les
ljmp
pop
addl
inc
mov
fildll
fimull
jae
fisubrs
fs
push
ljmp
pop
pushf
out
cmp
mov
movhps
fcompl
test
xor
inc
inc
mov
mov
pop
adc
subl
std
mov
mov
or
loopne
add
ret
ja
adc
xor
test
cmpsl
dec
fimuls
push
jae
mov
adc
arpl
push
dec
jns
adcl
test
lods
mov
jg
data16
or
xor
lods
fiadds
shll
lea
xchg
inc
mov
lods
movsb
add
data16
and
je
cli
shr
call
out
popa
sbb
rolb
lods
orb
adc
cmp
and
mov
cltd
jb
mull
inc
call
pop
or
fstp
or
xchg
sbb
push
test
mov
sub
push
inc
inc
cwtl
loopne
mov
lea
scas
stc
push
aas
cmc
jne
mov
mov
jbe
sahf
sub
and
cmp
adc
fisttpll
sub
int3
std
leave
dec
outsl
xchg
inc
sub
xchg
cmc
cmp
dec
adc
pop
insl
inc
pop
inc
xor
imul
and
out
inc
in
and
push
sbb
fmull
pop
and
sbb
or
or
xchg
inc
cmp
push
sub
inc
imul
shll
ret
dec
inc
add
push
stos
lock
or
sti
push
cmp
fstl
xor
lds
or
shrb
je
xor
movsb
pop
call
ss
subb
inc
xor
or
movsl
lret
cli
mov
in
dec
les
jmp
cmpsl
cltd
jns
mov
test
imul
sbb
and
mov
arpl
push
mov
inc
lahf
push
jbe
xlat
shll
clc
fwait
pop
lods
popf
das
sub
in
leave
jb
adc
out
push
cmpsb
and
push
push
pusha
sbb
pop
in
add
adc
fidivl
lods
mov
mov
inc
sti
shrb
xchg
mov
or
xchg
ljmp
out
push
stos
adc
xchg
dec
lret
jb
push
out
cmp
faddl
loope
decb
xor
gs
xor
jb
dec
subl
cmp
mov
mov
nop
bound
sub
add
pushf
pop
mov
cmp
iret
gs
xlat
xchg
adc
je
cmpsb
inc
and
xor
imul
js
fstpt
cmp
popa
add
sub
fldl
adc
mov
scas
mov
xchg
pop
hlt
push
jno
pop
cmp
popa
sub
insb
aaa
pop
mov
or
xchg
sub
sub
jae
pushf
push
jp
and
popf
jl
sub
pop
lret
adc
cwtl
inc
push
or
hlt
add
cmp
arpl
push
pop
repz
mov
mov
adc
push
cmp
ret
in
pusha
out
inc
inc
in
sub
jo
sub
jnp
fisttps
inc
inc
xor
add
inc
add
js
and
xchg
hlt
std
ja
int
lcall
cld
rol
and
jo
in
xor
fcomi
mov
mov
cmp
in
jge
rorb
flds
mov
add
mov
inc
inc
insb
inc
cwtl
je
in
mov
mov
add
jns
mov
xor
divl
push
fisubs
dec
lods
rolb
xor
mov
sub
outsb
pop
lods
cmp
stos
ds
loope
lds
aaa
lock
lretw
jmp
jle
mov
sub
aas
mov
popf
movsl
cmp
xchg
mov
mov
or
pop
or
adc
xor
popf
or
std
fnstcw
cld
insl
xchg
push
mov
ffreep
pop
mov
dec
fsts
mov
adc
sub
xlat
test
add
xchg
sbb
cmc
xchg
in
loope
lcall
js
xchg
add
lcall
mov
pop
mov
int3
rolb
pop
xor
pop
cmp
into
cmp
pop
adcb
loope
adc
test
inc
fnsave
mov
lds
pop
in
flds
pop
je
adc
movsb
test
ss
cwtl
shll
pop
mov
jno
repnz
xchg
cmp
xor
lea
inc
lret
pop
mov
adcl
mov
sub
xor
loop
arpl
test
push
test
stc
add
outsb
cmp
add
mov
loope
aam
pop
inc
xchg
dec
xor
pusha
in
addr16
push
sti
pop
stos
mov
sub
mov
cltd
lock
jg
or
outsb
push
fcmovne
scas
jno
push
fidivl
pop
rcr
inc
cmpsl
mov
insb
or
push
icebp
pop
fwait
js
mov
pop
mov
xor
adc
jbe
std
fsubs
sub
cmp
enter
cmp
repz
mov
rolb
arpl
sbb
repnz
lods
xor
jl
lods
icebp
mov
int3
scas
inc
mov
xlat
push
inc
cmp
arpl
out
daa
adc
je
test
xor
push
mov
stos
dec
mov
xchg
xchg
insb
ret
lods
push
ds
hlt
popa
lcall
popf
adc
sub
mov
push
lret
movsb
xchg
icebp
aaa
pop
scas
js
adcl
pop
rolb
arpl
lock
aad
and
fs
cli
push
xchg
stos
in
fistpll
dec
push
sbb
push
push
pushf
xor
hlt
cmpsb
xor
adc
mov
sbb
sbb
ret
mov
inc
lahf
shll
xchg
sub
repz
incl
aad
inc
mov
outsl
and
pop
jne
xor
aam
push
xchg
mov
out
or
jbe
lea
outsl
cmpsl
mov
loopne
inc
pop
sub
and
in
xchg
pushf
adc
jnp
arpl
lea
scas
push
dec
repnz
add
and
or
gs
xchg
mov
mov
or
inc
mov
loop
jnp
inc
dec
stos
fsubl
sub
das
lcall
sbb
cmp
scas
sti
add
fdivrs
out
cwtl
std
cli
dec
cmpl
mov
mov
mov
test
xor
sbb
pop
jo
sbb
fcom
icebp
into
and
jne
repnz
xor
mov
data16
lock
push
into
fists
in
xchg
in
dec
outsl
and
mov
dec
mov
mov
sbb
push
push
cli
pop
rcrb
roll
pop
mov
xchg
push
xorl
xor
cltd
out
stos
xchg
jnp,pt
test
roll
mov
ja
mov
flds
iret
dec
cmpsb
sbb
std
push
xchg
aas
lcall
or
stos
mov
or
mov
add
fildl
pop
sbb
in
jle
sub
jecxz
pop
xchg
roll
mov
cmp
sub
mov
add
xor
sbb
mov
and
push
repnz
test
test
push
cmpl
imul
repz
xor
inc
enter
mov
je
stos
scas
jb
inc
movsl
pop
mov
sbb
into
xor
ds
sbb
jne
cli
mov
fcoms
add
in
push
sub
and
test
or
sub
cmp
sub
lret
jge
adc
pop
push
pushf
add
out
repz
dec
cmp
cld
cmp
sub
mov
mov
add
mov
xorl
ret
dec
push
add
cmpsl
mov
leave
fwait
inc
test
and
inc
add
rorl
inc
inc
xchg
mov
push
mov
xchg
and
popa
jl
or
stos
out
xor
cs
push
sbb
sub
xor
and
lock
es
ljmp
push
icebp
mov
shll
sub
mov
iret
or
test
mov
lods
mov
or
or
pop
popf
mov
je
das
iret
jge
add
gs
aam
hlt
ficompl
mov
data16
jg
pushf
fwait
scas
jmp
fsub
mov
xor
lret
fisttpl
inc
idivb
loop
sbb
mov
repnz
sub
loop
xorl
popa
dec
aam
or
sub
cld
mulb
sarb
jecxz
fldcw
in
and
adc
es
sub
push
jb
ja
sub
dec
pop
aam
cld
mov
loop
lds
pop
test
push
in
in
insl
jb
jb
in
ja
sbb
mov
fcompl
out
rcl
stos
repnz
test
xchg
push
push
cmp
mov
loopne
rclb
mov
ds
outsb
cmp
outsl
notl
je
sbb
sbb
push
and
jp
push
scas
in
xchg
ret
jp
clc
fadds
cmp
push
insl
jno
jmp
dec
aaa
es
mov
cmp
lret
push
bound
leave
vpavgw
in
mov
pop
sbb
and
fs
stos
mov
mov
adc
jle
sti
ljmp
push
cwtl
gs
stos
sub
cli
fwait
dec
insb
or
inc
in
jp
imul
xlat
ret
repnz
push
pusha
gs
mov
or
les
inc
sub
jmp
sub
faddp
mov
adc
popf
sbb
test
std
xchg
out
fnsave
xchg
cmpsl
push
pushf
cmp
ja
mov
daa
jl
call
rorl
ja
je
ret
push
mov
js,pn
inc
insb
lods
mov
aaa
scas
xchg
xchg
jl
mov
adc
pop
or
xchg
adc
jmp
xchg
mov
cmp
js
les
stos
push
mov
push
lret
inc
mov
addr16
xor
sub
hlt
or
lock
cltd
bound
fsubrs
inc
mov
xor
mov
ret
adc
das
jno
int
test
in
ficoml
mov
adc
mov
lds
pop
into
or
jl
test
fdiv
out
xor
lcall
inc
mov
mov
es
enter
dec
adc
xorl
push
enter
aaa
cmp
call
js
dec
ja
repnz
inc
insb
dec
pop
inc
in
out
inc
stos
mov
push
push
pop
sub
inc
cmp
xchg
add
nop
or
jbe
ret
add
in
repz
cmp
test
sbb
jp
add
fdivl
pop
cmpsl
test
movsb
pop
sub
mov
xchg
push
lods
mov
sbb
popa
inc
dec
imul
negb
push
cmpsl
loope
pop
mov
lods
hlt
rcr
loope
popf
push
in
push
frstor
lea
push
ljmp
test
add
ss
inc
mov
div
pop
and
add
orb
mov
arpl
and
jae
xor
pusha
inc
outsb
ret
jmp
push
mov
je
dec
and
cmp
xchg
shll
outsl
inc
pop
scas
out
adc
add
sub
test
fidivrs
mov
in
xchg
popf
faddl
xchg
xchg
cltd
mov
mov
adc
xor
inc
clc
test
jo
pop
mov
std
shll
repz
pop
loope
sub
jnp
mov
cld
popf
imul
mov
push
pop
mov
cmp
mov
call
inc
pop
lock
and
gs
mov
cmp
ljmp
nop
dec
mov
adc
sub
imul
lcall
ljmp
xchg
aaa
sahf
cli
pop
cmc
jb
je
and
add
aas
jp
in
loopne
les
ret
push
and
cmp
sbb
lds
repnz
fstenv
ret
jns
je
xor
push
sub
scas
test
jmp
into
fiaddl
popa
sub
sbb
stc
jns
jle
xor
xchg
pop
push
mov
clc
adc
je
stc
inc
xorl
into
not
adc
js
push
mov
hlt
icebp
mov
adc
mov
pop
jecxz
jl
and
sbb
pop
sarb
dec
imul
fcoml
sub
mov
icebp
sahf
fldt
cld
aaa
xchg
sbb
int
push
mov
repz
inc
pop
jne
mov
and
repnz
int3
xor
dec
into
sbb
xchg
les
cmpsb
cli
jecxz
cmp
push
xchg
and
jle
jl
ret
and
fdivrl
mov
fbld
or
popa
pop
je
jb
popf
shll
in
xchg
shl
cld
cmp
xor
ljmp
add
loopne
das
mov
sub
filds
aaa
sahf
or
jl
cmc
adc
jge
clc
movsb
es
cmp
fdivrs
dec
gs
ja
mov
cld
pop
sub
and
sti
test
mov
push
cmp
addl
ret
dec
jp
mov
jp
jmp
or
daa
mov
pxor
rolb
ficoml
not
add
push
cmpsl
mov
add
sbb
and
icebp
cmp
mov
mov
xor
or
push
in
mov
imull
fldt
lods
aad
pusha
push
lods
ljmp
lods
lods
xor
inc
mov
add
aad
xchg
rcrl
pop
jne
add
cltd
or
dec
pop
clc
dec
sbb
and
out
mov
fiaddl
rcr
fisttpll
cmpl
cmp
out
cwtl
lods
mov
aam
inc
addl
inc
mov
cmpsl
push
ja
ss
nop
pop
and
xor
lret
jp
pop
leave
dec
frstor
pusha
in
testb
pop
jns
adc
fmul
cmpl
cli
mov
pushf
js
cmp
jb
ss
cld
fstpt
jp
jl
mov
dec
fsubp
stos
pop
das
repnz
das
sbb
loop
ljmp
fstps
jl
in
sbb
sahf
pushf
lods
sub
sahf
push
push
jecxz
adc
add
xor
xor
or
mov
push
sarb
jge
rcl
sub
rolb
jo
push
push
push
pop
cmp
sbb
fcmove
mov
lcall
lcall
frstor
ficoms
pop
test
jae
and
cltd
mov
ret
sti
dec
adc
or
repnz
icebp
lret
and
inc
mov
data16
js
dec
mov
sub
in
mov
ficoms
repz
mul
roll
mov
sub
sub
xor
mov
cld
jmp
int3
cmp
add
mov
xor
xor
sub
mov
mov
jp
js
inc
stos
jne
xor
test
cmp
fstpt
push
xor
jg
repz
mov
cld
sbb
mov
imul
mov
scas
scas
shll
adc
je
sub
jl,pn
in
jnp
mov
std
stc
pusha
lahf
movsl
lret
adc
loopne
inc
lods
sbb
push
movsb
in
cwtl
int
xor
out
inc
insb
xchg
pop
mov
mov
idivl
pop
fstl
cmp
push
push
inc
int
sbb
mov
jno
jae
or
push
int
push
addr16
je
js
cli
shr
loop,pt
mov
xchg
xchg
jo
add
adc
and
xor
shlb
es
lock
xorb
mov
mov
cmpsb
pusha
xchg
jo
add
adc
and
xor
shlb
es
lock
xorb
mov
mov
cmpsb
pusha
xchg
jo
add
adc
and
xor
shlb
es
lock
xorb
mov
mov
cmpsb
push
xchg
jo
add
adc
mov
ss
mov
lock
sbb
dec
inc
cld
fnsave
inc
and
and
loopne
add
add
add
add
add
add
sbb
push
movsl
add
add
add
or
push
add
push
add
xchg
add
add
add
inc
add
imul
sub
add
dec
add
or
add
and
insl
add
call
add
add
jb
dec
add
add
add
push
add
add
add
add
add
add
add
add
add
add
out
dec
add
add
inc
add
add
or
add
add
mov
add
test
int3
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
out
inc
add
add
add
add
add
push
add
add
add
add
add
add
add
js
or
sub
faddl
lahf
add
add
add
jnp
sbb
inc
add
add
add
or
ja
mov
pop
add
add
add
add
test
ss
jge
call
add
test
pop
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
mov
or
dec
add
add
add
add
add
add
add
add
jnp
lock
pop
add
add
add
add
inc
add
add
add
sbb
xchg
add
lds
or
push
add
mov
out
sti
add
add
add
add
add
add
sbb
xchg
add
add
add
inc
add
pop
add
pop
add
add
add
add
add
fiaddl
push
add
sbb
sub
stos
add
add
add
add
add
add
inc
add
add
or
add
add
add
add
add
mov
fadds
jge
fadds
inc
add
pop
add
jp
lods
add
add
add
mov
mov
test
add
add
add
mov
pop
add
or
add
add
add
add
add
add
inc
add
add
mov
or
stos
add
add
add
fadds
push
add
sbb
roll
add
cmp
add
add
add
add
add
add
and
add
fadds
fildl
cmp
lea
mov
insb
add
add
add
add
roll
mov
add
add
add
insb
add
in
add
ja
lea
inc
add
data16
rolb
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
lea
inc
add
add
das
add
inc
add
add
add
add
add
lret
adc
and
loopne
sbb
pop
push
sti
adc
mov
aaa
cmpsb
cmc
xchg
mov
ds
popa
adc
and
loop
jle
cltd
addr16
sub
lret
or
push
and
push
jb
data16
xchg
cmp
inc
or
mov
lea
mov
int
push
jb
add
lahf
pop
fidivs
xor
scas
jne
push
add
fistpll
fisubrs
enter
jge
pop
scas
sarb
cld
mov
lods
dec
mov
inc
cmp
sub
imul
lcall
xor
add
inc
jp
sub
jecxz
ret
movsl
aaa
pop
mov
sub
mov
shlb
push
adc
jg
vmovntps
sub
xor
lret
mov
rorl
mov
shl
arpl
adc
mov
leave
lds
ret
dec
and
xor
inc
gs
mov
xchg
adc
mov
repz
sarb
rolb
aad
subl
je
lret
push
xchg
and
les
add
sarl
push
xchg
cltd
ret
subb
gs
and
jns
ja
and
sbb
lret
pop
mov
sub
mov
pop
xor
roll
js
lock
mov
movsb
adc
jns
arpl
dec
and
outsl
fnstcw
push
mov
cltd
mov
mov
jge
jecxz
sbb
int
gs
sub
pop
or
fcom
jg
and
in
adc
call
nop
pop
inc
push
ja
sub
repz
and
mov
add
and
inc
pop
push
sahf
jmp
mov
into
pop
ret
ja
lret
mov
and
push
mov
enter
mov
adc
mov
mov
stos
loope
add
mov
out
jno
sahf
push
and
inc
mov
icebp
push
pop
pop
xor
out
fsubrs
cmpl
fwait
icebp
sahf
dec
sti
or
insl
out
je
mov
pop
push
and
or
repz
mov
mov
stos
lods
xchg
push
mov
sahf
xchg
xchg
xchg
inc
sub
outsl
bound
sbb
adc
jb
data16
lods
sub
stos
in
aad
cltd
push
push
call
xlat
push
adc
sbb
test
std
insl
imul
fsubr
dec
push
loopne
mov
call
in
bound
xor
dec
pushf
ss
inc
fadd
insb
inc
xchg
mov
and
stos
or
int3
aad
pop
mov
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
