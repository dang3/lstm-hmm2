call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
lds
jne
gs
sbb
sti
inc
imulb
mov
inc
push
cmc
gs
xchg
add
movsl
xor
jne
gs
adc
movsl
and
push
cmc
gs
xchg
add
movsl
xor
jne
gs
adc
movsl
and
or
push
divb
inc
int3
xor
jne
or
sbb
push
fisubs
out
add
gs
sbb
push
int
scas
loop
mov
hlt
cwtl
or
test
dec
xor
ret
sahf
jecxz
hlt
leave
stos
shrb
add
adc
inc
rcl
push
jmp
shrb
xchg
add
movsl
xor
cmp
mov
vpsubd
and
fwait
sbb
dec
fldt
adc
pop
shrb
xor
push
pop
scas
jecxz
add
push
js
outsb
inc
push
dec
and
imul
cmpb
mov
xchg
mov
jne
cli
loope
xor
aad
in
cmc
adc
movsl
and
push
cmc
gs
xchg
add
movsl
jae
test
push
xor
push
pop
shlb
xchg
mov
insb
shlb
xor
jo
dec
mov
cmpsl
add
sbb
loopne
fcoml
pop
xor
add
xor
inc
lds
gs
xchg
add
movsl
xor
jne
gs
adc
movsl
and
push
cmc
gs
xchg
add
movsl
xor
call
inc
testl
lret
xor
adc
loope
rolb
fstpl
aas
and
cmc
adc
nop
mov
mov
push
jnp
jle
and
bnd
add
cmpsb
movsb
adc
pop
addl
jl
into
mov
cltd
dec
sub
inc
xor
ljmp
inc
push
test
dec
stos
inc
mov
xor
add
into
loopne
int3
in
shlb
out
pop
or
push
ret
aam
mov
push
pusha
sbb
clc
xor
mov
testl
popf
cld
mov
pop
gs
pop
enter
xchg
call
outsb
ret
inc
add
mov
sti
imul
cld
lret
les
push
dec
inc
jnp
cmc
andb
pop
lahf
mov
inc
mov
adc
fldenv
cltd
mov
pop
divb
mov
popa
addb
js
fadd
and
jmp
ret
pop
xchg
sub
mov
sub
sti
adc
jns
cmp
sti
jp
sub
sbb
sub
inc
mov
out
jne
xor
lcall
enter
mov
sbb
cmp
push
or
out
push
jae
xchg
add
jp
dec
hlt
mov
sub
aaa
xorl
imul
cli
jmp
out
dec
arpl
ret
mov
dec
xchg
inc
mov
pop
sub
adc
test
push
mov
in
adc
fs
add
scas
mov
aam
imul
mov
lret
repz
imul
das
es
mov
test
cmp
movsl
push
call
push
test
scas
sub
in
pusha
leave
push
add
sarb
and
mov
and
sub
mov
jp
rorb
xorl
cmp
ffree
stos
fisttps
repnz
pop
adc
inc
or
push
adc
mov
pop
out
cmp
aam
testb
sub
nop
aaa
inc
into
mov
cld
rclb
les
jmp
movsl
in
out
mov
xor
inc
scas
and
cld
aas
pusha
push
les
xchg
popf
pop
cs
cmp
pop
pshufw
mov
fadd
jns
mov
cmc
add
mov
mov
sti
pop
mov
sbb
and
ficomps
aad
push
inc
pushf
dec
test
mov
dec
sub
add
test
and
cmp
mov
mov
lret
push
or
cmp
pop
scas
and
sub
sub
call
or
lods
inc
les
dec
and
sub
xor
sahf
push
add
push
insb
cld
fcoml
mov
popf
mov
xor
idivl
sub
ds
jl
cmp
pop
pop
mov
fnstenv
or
lods
mov
loope
jbe
and
push
lea
int3
jae
sbb
lret
mov
mov
inc
push
cmp
imul
xchg
call
fildll
es
in
test
push
sbb
ja
mov
or
and
jg
nop
cmp
mov
icebp
lea
dec
repnz
jecxz
mov
xchg
imul
jnp
dec
roll
fucomp
cwtl
gs
sbb
jno
mov
mov
bound
into
movsl
pusha
fldenv
dec
sbb
and
inc
sbbb
xchg
rorl
xchg
enter
iret
jns
cmp
adc
call
pop
leave
std
xchg
cmpsb
aaa
call
pop
cs
arpl
addr16
dec
push
push
push
in
popa
dec
mov
ret
loop
cmc
repnz
sbb
jo
adc
js
xchg
sbb
xchg
movsb
xor
dec
sbb
mov
inc
in
push
fsts
xchg
mov
pop
mov
adc
jecxz
pop
jbe
jns
cmp
sub
out
jnp
lods
pop
adc
outsb
addb
cmp
jae
cmp
or
dec
insb
lods
sub
push
clc
icebp
std
xchg
pop
dec
push
fstp
ljmp
movhps
mov
imul
or
sbb
add
xchg
mov
cmp
mov
out
jge
jp
push
jp
daa
or
push
mov
mov
mov
nop
jae
out
add
rcl
out
add
inc
mov
test
fsubrs
enter
mov
add
add
lcall
or
push
inc
jae
outsb
lock
outsb
faddp
pop
adc
push
les
jo
pop
push
sbb
inc
ja
dec
adc
sbb
leave
cmpl
cmp
dec
adc
daa
out
inc
jnp
idivb
cmp
shlb
clc
jmp
xchg
dec
mov
std
adc
loopne
dec
pop
movb
dec
and
popf
sbb
inc
xchg
push
call
jno
pushf
fldt
xor
std
fldl
les
leave
mov
jae
leave
test
mov
test
push
mov
addl
xchg
loopne
jbe
inc
aad
push
fcmovnbe
mov
mov
pop
mov
jo
fnstsw
adc
add
xor
xor
sbb
xor
xor
or
xor
push
and
cmpsb
push
stc
push
sub
scas
out
cld
roll
outsb
inc
int
sub
inc
add
leave
jl
enter
jo
push
clc
add
or
lods
insl
popa
int3
push
test
das
inc
xor
xor
aam
and
dec
dec
push
cmp
ss
inc
inc
stos
xchg
ds
popa
inc
outsl
inc
mov
ret
dec
jno
mov
or
xchg
sub
sar
lds
xor
aad
popf
and
fisttpl
sbb
ss
adc
mov
mov
out
js
movsl
sti
popf
decb
sahf
cmpsb
roll
js
cli
js
ficomps
aaa
cli
loopne
inc
xchg
mov
lret
push
xchg
cmpsb
xor
negb
adc
addl
test
adc
jl
jnp
add
adcl
faddl
push
mov
je
test
xchg
jae
mov
add
cmp
insb
fucomi
cmp
clc
mov
and
and
sarb
mov
mov
mov
outsb
inc
cmp
jecxz
in
mov
mov
insb
ja
inc
push
das
enter
jb
bound
push
js
xchg
aaa
popa
ljmp
mov
mov
ss
push
clc
das
pushf
ljmp
jno
pop
pop
addr16
icebp
mov
xor
scas
push
loope
dec
and
cli
adc
scas
ljmp
cmpsb
sahf
icebp
push
push
sub
pop
pop
iret
aam
into
pop
cmpsb
fistps
cltd
mov
aaa
loopne
sbb
inc
ljmp
or
jnp
pop
stos
imull
lret
jno
push
dec
sub
sbb
js
lods
rol
in
sbbl
out
cwtl
pop
pop
push
cmp
scas
inc
ror
in
or
xor
sub
mov
jns
jb
jbe
lret
mov
add
mov
inc
in
jle
inc
mov
sbb
jnp
push
and
int3
fdivrs
in
icebp
mov
push
and
sub
fildll
ficompl
xchg
call
les
jle
lods
clc
inc
gs
inc
add
mov
adc
daa
push
jbe
add
and
or
test
sub
mov
sub
jno
pushf
fwait
add
or
ds
lret
push
dec
sbb
cs
pusha
sbb
test
pop
fdivrl
ret
enter
push
lcall
lds
or
fstpt
push
xchg
mov
pop
push
sub
and
mul
push
mov
jp
mov
push
int
add
rcl
xor
insb
ss
sub
sbb
mov
mov
push
test
movsl
push
mov
fiadds
das
cmp
fbld
in
sti
into
sbb
sti
or
xchg
fcompp
add
aas
cs
xor
inc
in
xor
rcll
mov
sbb
rcrb
xor
mov
mov
ret
jg
inc
in
rcrb
xor
fs
xor
addr16
or
in
ljmp
or
xchg
mov
shl
iret
int3
mov
pop
push
test
gs
je
xchg
ficoml
add
dec
jl
outsb
add
subl
jb
negb
mov
sub
mov
cmp
adc
sub
addr16
fiadds
bound
cmpsb
mov
rcr
loope
cs
shrb
xchg
xchg
aam
xchg
mov
outsb
int
pop
lds
mov
ret
fld
test
dec
mov
test
jo
in
jbe
sbb
jo
fstpl
push
sub
daa
test
jge
aam
jp
mov
push
scas
call
pusha
pop
mov
xchg
push
nop
bound
pop
cmp
mov
out
adc
call
cmpsl
idiv
jle
xor
jne
out
inc
dec
out
jl
mov
popa
ja
js
lcall
iret
mov
and
movsl
or
mov
test
add
leave
pop
nop
les
push
mov
jns
inc
fsubl
xchg
or
cmpl
popf
mov
call
gs
dec
icebp
or
sbbb
xlat
int3
pop
sbb
pop
ja
and
add
gs
popa
test
rcll
push
movsb
push
jmp
setne
call
mov
push
mov
xor
or
stc
add
push
mov
mov
das
add
jmp
xor
iret
ret
and
fs
push
jle
pop
dec
int3
push
sbb
and
loope
shll
repz
adc
in
push
pusha
je
out
cmpsl
dec
adc
aas
iret
mov
iret
pushf
xchg
sub
and
mov
pushf
insl
lock
mov
insb
mov
out
adc
jle
cmpl
sti
fwait
ds
lret
cltd
xor
cmp
icebp
or
sub
pop
or
pop
and
out
inc
add
cmp
mov
nop
push
fistl
dec
ljmp
and
xor
lea
or
xchg
shrb
out
add
jp
add
lods
shlb
loope
push
mov
jns
fnstcw
lahf
pop
push
std
enter
cmp
or
pop
sti
dec
fwait
pop
or
mov
or
pop
fldcw
sub
adc
std
out
pop
dec
sub
faddl
addr16
jns
mov
xorl
sub
pop
mov
jg
in
dec
clc
aam
xor
shl
adc
sbb
dec
jl
test
lea
dec
mulb
cltd
dec
pushf
mov
add
or
inc
pop
sbb
dec
ja
test
push
mov
add
cli
test
push
cmp
pop
fsubrs
loop
std
out
xor
in
rclb
bswap
xor
jecxz
lret
dec
push
xchg
andl
and
xor
icebp
nop
dec
push
bound
shrb
ret
js
testl
lahf
mov
div
fcomip
loopne
xchg
sbb
and
lea
fstl
pop
jae
incl
mov
std
inc
ret
jnp
sbb
loop
jmp
inc
sbb
jne
inc
fucom
push
inc
xchg
add
mov
xchg
aaa
cmp
gs
shlb
fwait
js
mov
push
dec
xlat
stos
int
and
jb
mov
frstor
dec
inc
nop
sbb
fidivl
and
aam
push
fidivrs
sti
lret
rclb
pop
or
sar
fxch
adc
cmp
inc
popf
enter
sub
adc
loopne
push
jecxz
int3
sbb
xor
ljmp
jmp
pop
push
xor
icebp
ficomps
movsl
addl
ret
aas
fildl
cmp
xlat
push
push
clc
ss
xor
mov
in
mov
dec
out
aas
cwtl
enter
push
in
lret
std
jb
lock
cs
jnp
fdivr
mov
rclb
push
mov
stc
shrl
sbb
sub
jmp
filds
ret
sbb
arpl
mov
jne
mov
xlat
fmuls
add
xor
cmc
pop
dec
lock
sub
or
movsb
cmp
int3
fisttpl
jmp
jl
inc
push
sti
xchg
pop
cmc
stos
xchg
aam
fldenv
and
xchg
push
gs
push
push
mov
popa
repnz
dec
jle
mov
jne
xor
add
fsubrs
push
je
cmpsl
or
fdivrl
inc
jb,pt
lret
and
pop
in
inc
add
pop
mov
rcrb
mov
or
push
mov
stc
lods
repnz
pop
lods
mov
ficompl
sbb
idivl
or
push
cmc
xchg
pop
shl
shll
aad
pop
leave
fmull
hlt
inc
clc
loope
push
push
in
sbb
test
or
jmp
stos
mov
and
pop
arpl
jge
ficompl
xor
mov
cmp
sbb
mov
fldcw
dec
add
fcom
lock
sbb
mov
pusha
testl
ljmp
in
mov
in
imull
sbb
popa
sbb
das
sub
inc
inc
pop
inc
sti
cli
mov
xor
sbb
outsb
test
out
iret
and
imulb
out
xchg
jmp
jno
push
cli
test
xchg
adc
test
jns
and
shlb
mov
xchg
inc
pop
mov
cmpb
je
mov
outsl
push
push
xchg
and
mov
pmuludq
cmpsl
pop
mov
mov
push
adc
adc
fdivl
mov
sbb
push
leave
data16
or
jl
jbe
std
sub
xchg
ds
std
insl
outsb
jmp
daa
jle
inc
inc
dec
loope
mov
popf
sbb
cs
adc
jecxz
jecxz
nop
jb
jg
xchg
test
shll
in
icebp
push
addr16
push
shrb
inc
inc
dec
mov
iret
std
test
repz
jb
ss
add
ja
int
pop
sub
lock
lcall
gs
sub
lea
loopne
pop
jl
mov
scas
lcall
ja
dec
mov
and
adc
mov
test
aas
jg
push
cmp
pop
fwait
mov
jbe
cmp
popa
sub
jmp
inc
stos
xor
addr16
leave
xor
add
dec
adc
pop
inc
jae
jmp
or
ret
call
jmp
and
aam
cmp
sub
inc
outsl
clc
cli
in
enter
cmp
mov
and
aas
sbb
rcrl
mov
xchg
clts
das
nopl
pushf
adc
lret
ficomps
push
xor
mov
sahf
jae
lret
jg
rclb
shrb
push
or
in
push
push
mov
shrb
nop
sbb
cmovs
push
jb
xor
and
aad
negb
inc
mov
lods
repz
push
mov
sti
and
push
psubd
adc
pop
mov
or
imul
aam
xchg
mov
pop
icebp
and
mov
sub
push
cld
xlat
das
stos
inc
ret
lahf
in
mov
shll
movsl
rcll
xor
lret
nop
sub
jle
mov
xchg
std
push
mov
add
ljmp
push
clc
mov
inc
ret
or
lea
mov
add
aam
std
movsl
jmp
jmp
stos
out
pop
fs
mov
adc
sub
clc
clc
jo
add
adc
dec
push
sbb
in
mov
fistpl
xor
aas
and
or
fldcw
test
cltd
mov
scas
cltd
inc
sbb
insb
xlat
sbb
xchg
bswap
push
mov
mov
sbb
inc
pop
outsb
je
push
out
loopne
mov
xor
aam
pop
adc
mov
add
mov
arpl
mov
stos
push
stc
inc
in
enter
mov
inc
push
fadds
sar
cmp
cs
imul
inc
out
cmp
cmc
xchg
ret
jl
fdiv
push
dec
inc
out
or
int
dec
xchg
pop
bnd
xchg
and
pop
and
test
aam
fs
outsl
imul
call
sub
push
out
in
jne
mov
faddl
test
in
notb
ficompl
mov
js
scas
rclb
xor
adcl
mov
mov
in
jp
xchg
aam
repnz
dec
dec
or
and
jge
sbb
mov
ds
jg
jmp
pop
cmc
sbb
push
and
out
pop
jg
push
rcl
mov
pushf
loope
icebp
mov
dec
adc
stos
call
or
sbb
in
dec
add
mov
push
xchg
stos
mov
jl
cwtl
imul
loop
pop
xchg
in
arpl
sub
hlt
inc
or
push
xlat
orl
fwait
mov
movsl
mov
xchg
jmp
js
ror
fmul
xor
mov
pop
sub
sub
or
push
push
mov
leave
js
in
in
push
push
ja
or
add
and
xchg
imul
mov
movsb
push
inc
sbb
mov
jb
mov
jne
nop
scas
mov
lret
icebp
out
sub
mov
and
xchg
add
cltd
icebp
lahf
inc
fdivs
sbb
sbb
test
dec
adc
pushf
lret
jne
lcall
push
xchg
or
xchg
lods
lock
mov
push
push
test
std
dec
ja
outsb
int
xchg
mov
movsl
popa
xor
mov
xchg
xchg
andb
out
ja
add
cmpsl
push
daa
xchg
mov
mov
sub
push
addl
mov
in
dec
sub
inc
dec
addr16
shlb
dec
inc
pop
sub
inc
fistpl
fcmovu
mov
push
inc
mov
sbb
xor
seto
data16
rcl
cmc
adc
dec
mov
add
out
xchg
hlt
push
aaa
fsts
xlat
add
dec
mov
lea
push
sub
es
insb
dec
and
test
test
add
sti
popa
in
pop
addb
ret
xor
test
fidivl
mov
mov
jl
movsb
sti
outsl
rclb
fdivrs
push
sbbl
nop
outsb
jmp
jbe
or
icebp
mov
jle
and
cmpsb
out
dec
add
dec
jge
addl
sbb
mov
mov
cmpsb
pop
cmp
aad
cmpb
inc
jne
jmp
pusha
mov
loop
cmp
cmp
xchg
push
sub
mov
inc
ds
pop
pop
fstl
pop
outsl
test
sbb
adc
out
mov
jp
stos
pusha
jge
outsb
add
shll
setb
mov
add
or
pop
mov
dec
mov
sbb
and
lods
push
stos
fisubl
and
or
test
in
sbb
pop
fbld
ret
negl
outsb
daa
imul
stc
lods
jb
jp
dec
pop
lds
mov
sub
add
fwait
addr16
mov
push
in
mov
mov
mov
adc
ffreep
mov
mov
jbe
pop
pop
cmp
dec
or
in
mov
mov
sarl
mov
mov
fwait
mov
xchg
mov
stos
test
adc
data16
adc
sub
sub
imul
add
jae
push
cmpsb
repz
jmp
adc
addr16
int3
adc
xchg
or
inc
ss
xlat
dec
shrb
scas
das
inc
out
sbb
pop
mov
mov
cld
adc
std
aam
add
pop
test
adc
pop
cmp
ret
cmc
mov
add
push
lret
jno
lods
adc
addr16
into
out
adc
jno
leave
and
ficomps
in
xchg
mov
cmp
das
leave
push
jl
push
add
repz
pop
movsb
cld
dec
rorl
pop
adc
xor
pop
cmp
icebp
addl
mov
inc
jecxz
jp
gs
xchg
push
int
packssdw
test
orb
outsl
mov
jb
sbb
gs
adcb
pop
xchg
xchg
mov
xchg
in
fwait
sub
dec
cmp
jge
mov
push
orb
dec
movsl
mov
dec
jae
pop
insb
jo
fcoml
mov
stos
mov
mov
sub
xorb
push
fwait
cmc
cmp
ljmp
pop
inc
movsl
lcall
xor
das
xorb
outsb
cmp
inc
mov
clc
lret
sub
push
xor
andl
jb
mov
popa
pusha
shl
xor
fstpl
cmp
jp
dec
in
cmc
adc
movsl
and
push
cmc
gs
xchg
add
movsl
xor
jne
gs
adc
movsl
and
push
cmc
gs
xchg
add
movsl
xor
jne
gs
adc
movsb
and
push
cmc
gs
xchg
add
adc
push
lds
jne
gs
adc
and
cmp
pop
gs
loop
or
lret
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
adc
add
xor
and
sahf
cld
xor
sbb
push
addb
rcll
xor
aam
les
hlt
and
push
xchg
inc
test
arpl
je
adc
add
jbe
and
aam
les
hlt
and
push
xchg
inc
test
arpl
adc
imul
addr16
xor
enter
fwait
mov
cmp
mov
orb
lods
pop
inc
jnp
mov
in
mov
pop
jmp
movsb
outsb
jne
mov
xor
push
mov
sbb
push
clc
hlt
cmp
mov
adcl
lods
adc
add
cmp
in
xchg
push
test
cmp
push
popl
sub
leave
xor
jle
sti
jo
test
shll
sbb
xchg
inc
xchg
lock
aad
ss
movsb
addb
mov
inc
cld
cmp
xchg
test
xchg
loope
or
shll
and
dec
mov
add
mov
arpl
xor
and
push
xchg
inc
test
arpl
je
rcll
add
xor
dec
push
mov
dec
lea
xor
xor
xor
jne
ja
movsl
gs
data16
push
hlt
dec
xchg
push
faddl
loopne
ret
xor
adc
lods
outsl
lahf
push
xchg
je
popf
add
pop
xchg
inc
test
arpl
je
rcll
add
xor
and
aam
les
hlt
and
push
xchg
inc
test
arpl
je
rcll
add
xor
and
aam
lea
pop
inc
cmp
mov
sbb
out
add
inc
call
mov
xor
xor
and
xor
outsb
xchg
lea
dec
jle
xchg
push
pop
push
or
testl
jecxz
jp
aam
cmpsl
inc
xchg
gs
lcall
ret
mov
or
sbb
and
cs
scas
cmp
mov
adc
adc
in
push
mov
mov
cmpsl
aad
lds
inc
lcall
xorb
push
leave
in
mov
sbb
mov
ja
mov
mov
or
fsubrs
in
cltd
repnz
daa
movsb
mov
stos
mov
mov
in
lds
jp
pop
cmp
push
jle
pushf
dec
cld
call
dec
and
popf
or
test
frndint
testl
jae
rorb
pop
in
adc
in
shlb
iret
adc
fsubrs
xor
stos
dec
dec
loopne
cmp
stos
mov
dec
sbb
sahf
jmp
jb
bound
pop
jmp
aaa
insl
inc
lahf
xor
in
push
dec
pop
arpl
pop
fnstcw
inc
mov
cwtl
scas
xor
test
push
test
and
push
xchg
mov
rcrb
data16
push
cs
sbb
jl
mov
cmp
push
popf
inc
ds
jb
dec
xchg
adc
cmp
mov
xor
cmp
int3
or
jp
adc
pop
test
sub
mov
imul
js
cmp
xor
lock
orb
loopne
pushf
shll
out
sbb
dec
add
jle
pop
add
fidivrs
loope
loopne
sbb
icebp
or
sti
decl
push
mov
sbb
sarb
sub
pop
shll
jns
pop
adc
test
sub
rol
cwtl
fidivs
sub
cmc
aas
pop
lret
jae
mov
stc
jge
fldenv
les
xor
fs
dec
sub
lret
lcall
sbb
pop
loopne
in
push
popf
sbb
fdivl
and
inc
inc
dec
fucomip
cld
cs
xchg
inc
lret
push
pop
push
addb
pop
sbb
in
aaa
mov
test
or
dec
push
mov
pop
or
and
sub
iret
adc
push
xor
pop
addr16
cmp
scas
xorb
lcall
push
add
sub
fcoms
ja
xchg
add
push
jne
mov
mov
imul
cltd
mov
xchg
fildll
push
mov
push
adc
sbb
mov
sub
jno
gs
jbe
pop
pop
icebp
jle
and
jg
in
push
jae
add
fisubs
lret
shrb
nop
pop
ja
sub
lcall
sbb
xchg
xchg
lock
into
les
imulb
pushw
inc
sub
pop
arpl
mov
pop
add
jmp
std
ds
adc
dec
data16
sbb
scas
cmp
dec
pop
enter
loop
negl
sub
lahf
push
sbb
hlt
mov
dec
add
cmp
popa
stos
cmp
iret
adc
movsl
pop
in
icebp
xchg
loop
lret
sahf
imul
xchg
adc
xor
mov
test
mov
imul
clc
jl
rclb
mov
sbb
je
popa
mov
jp
test
mov
jb
mov
jmp
popf
mov
mov
dec
sbb
and
mov
cmp
jns
jle
mov
test
stc
mov
xchg
fiadds
fcomi
out
mov
shrl
or
push
adc
adc
mov
lds
inc
push
dec
dec
sbb
mov
mov
sbb
pusha
inc
push
aad
outsb
loope
dec
or
mov
gs
mov
fcomi
lock
imul
fdivrp
jnp
bound
jecxz
and
fsubs
pop
push
pop
in
stos
mov
mov
and
xor
lahf
and
jp
js
and
out
arpl
jle
or
aad
push
mov
jmp
fdivs
cmpsl
jmp
ss
dec
cmp
movsb
das
pop
dec
fstpt
mov
fldenv
push
and
andl
data16
loopne
add
pop
inc
and
je
enter
sbb
cmp
add
shll
lods
roll
int3
pushf
mov
sti
lock
sahf
stos
and
test
xorl
aam
add
inc
cmc
inc
mov
adc
jg
sahf
lods
les
xor
out
dec
lods
or
test
xchg
rcrl
rolb
fisttps
add
idiv
xchg
cld
dec
cmp
call
stc
shrb
je
inc
sbb
jecxz
mov
xchg
out
cmpb
add
gs
jns
cmpsl
outsb
and
xchg
mov
pop
movsb
or
sub
xchg
leave
nop
idiv
bound
aad
fldenv
fsubrs
sub
or
scas
cwtl
jno
ja
sub
call
cmp
cltd
cmp
xchg
adc
loopne
push
shll
pusha
inc
inc
cwtl
mov
jl
movsb
es
xchg
push
stc
rcr
lret
jo
js
dec
pop
and
movsb
gs
and
xchg
lea
ss
push
test
scas
cld
cmp
inc
and
jne
out
cmp
add
ljmp
and
cli
in
inc
sub
movsb
xchg
lds
dec
je
jns
cli
sub
inc
xchg
push
fnsave
shrl
xor
xor
mov
sub
xchg
insl
andl
shrl
push
inc
imul
in
push
jnp
out
int
int3
loope
push
xchg
das
mov
mov
mov
and
mov
fcmovbe
shlb
xor
lods
cmp
mov
adc
mov
lret
inc
sbb
outsb
into
orb
out
call
adc
sbb
sbb
mov
mov
outsb
add
pop
sbb
sub
and
push
in
sub
sbb
inc
pop
sub
repz
pcmpeqb
jnp
movsl
jge
push
mov
jmp
adc
in
or
push
test
add
or
fstp
sub
jl
repnz
or
mov
aaa
dec
adc
or
dec
ja
lahf
mov
cmpsl
sbb
scas
cwtl
xor
je
test
adc
popf
xchg
mov
and
adc
xchg
shrl
stos
lods
jb
and
cmp
or
xchg
stos
setbe
pop
sub
fists
dec
shlb
cmp
add
jge
jmp
addb
mov
decb
int3
out
sbb
negb
jno
mov
lret
sbb
stc
adc
dec
subb
test
inc
cmp
outsl
stos
push
mov
and
nop
cmpsl
ljmp
jecxz
loopne
jmp
stos
dec
push
push
dec
pop
adc
pop
adc
lcall
dec
es
push
mov
cmp
nop
inc
into
loop
cmpb
dec
xor
cmp
and
ret
data16
sub
push
or
mov
loope
in
pop
sbb
dec
fadds
sub
loopne
and
fcompl
sub
push
gs
scas
pop
pushf
mov
push
ret
and
lret
sbb
sbb
iret
xchg
pop
mov
cmc
ljmp
mov
mov
pop
cmpsb
lock
lea
xor
loope
outsb
aas
imul
mov
je
jmp
ftst
mov
stc
dec
in
mov
xchg
mov
inc
xor
lahf
dec
pop
xchg
jg
cmpsb
fidivl
push
mov
mov
cmpl
enter
and
sbb
dec
lds
insb
sub
punpcklbw
cmpsl
push
mov
xor
mov
enter
lods
fcmovb
push
stos
add
ss
lcall
mov
mov
adc
movsl
add
dec
jb
addl
xor
cmp
jae
push
cwtl
inc
mov
mov
addr16
sub
cld
xor
into
ret
mov
inc
cmpsb
movsl
into
xor
je
push
lahf
fcompl
inc
ja
insl
das
rorl
popa
notl
push
xchg
jge
imull
in
add
mov
push
std
leave
mov
push
sub
jp
mov
mov
out
pop
lret
sub
xchg
cmp
jnp
movsl
shll
sysret
fdivr
adc
cmp
int
loope
mov
popf
xor
push
xchg
sub
push
ljmp
loope
push
add
lcall
test
negl
mov
inc
inc
fstps
inc
dec
lock
xchg
jg
shl
push
mov
test
jp
pop
push
pusha
and
fstl
inc
inc
xor
clc
pop
lahf
and
sbb
subb
sub
adc
scas
mov
xlat
mov
push
jne
push
xor
jmp
xchg
and
pop
sbb
pop
push
mov
adc
sarl
int3
das
stos
lahf
mov
inc
adc
push
push
in
adc
mov
and
or
mov
and
cmp
pop
xor
or
mov
insl
repnz
shrb
movsb
nop
dec
addl
jp
inc
fcos
xor
cvttps2pi
cmpsl
test
testl
pop
jo
lds
push
push
or
fwait
or
bound
mov
xor
jle
loope
movsl
out
cltd
xchg
movsb
cld
ret
cs
jnp
das
xchg
insb
xchg
outsl
in
adc
ds
sti
lods
dec
in
pop
fldenv
lcall
rorb
popf
popf
jecxz
cmp
shll
cmc
sbb
fidivrl
and
daa
cli
std
daa
xor
fisubl
lock
add
iret
andb
add
mov
hlt
add
adc
in
popf
pop
add
pop
popf
cwtl
pop
or
les
out
imul
loope
repnz
xor
dec
jns
xchg
lret
data16
int3
das
test
cmpl
aaa
dec
xor
les
and
push
mulb
dec
imul
ja
sub
daa
adc
enter
pop
xchg
lea
jbe
iret
jne
mov
xorb
xchg
std
xor
inc
xor
jne
hlt
or
push
xor
in
adc
in
cwtl
mov
les
arpl
ret
lods
in
sar
mov
pop
push
push
pop
push
fidivrs
addr16
shlb
ret
push
dec
mov
jno
push
es
cli
dec
jl
lret
mov
xor
mov
mov
pushf
mov
movsb
in
or
sbb
push
push
and
imul
xchg
adc
aad
pop
mov
jmp
test
push
xor
jge
test
or
rol
ffreep
mov
sahf
xor
mov
js
xchg
inc
xchg
scas
imul
inc
cwtl
push
sahf
xchg
cmp
jns
nop
mov
in
or
dec
lods
aam
and
into
insb
sbb
xchg
int3
std
nop
mov
test
inc
xor
pop
xchg
cmpsl
sub
lds
and
std
cmc
and
mov
in
sbb
dec
add
stos
ljmp
dec
xor
rcrb
xchg
fwait
loope
cmpsl
xor
push
xchg
mov
mov
test
push
les
sub
and
sub
mov
or
mov
dec
popa
or
repz
push
jl,pn
stos
jmp
das
mov
loope
outsb
mov
movsl
lods
dec
dec
pop
hlt
iret
mov
cwtl
xchg
jne
inc
sahf
out
push
pop
insl
jle
in
push
sub
fwait
ja
or
sti
repz
ljmp
movsl
inc
push
lods
std
pop
cmp
dec
in
cmp
fmull
inc
or
enter
insb
mov
push
shrb
clc
pop
test
es
push
js
mov
or
mov
daa
dec
cli
pop
sbb
xorb
jb
int3
hlt
cmp
nop
cmp
lods
mov
inc
push
mov
xor
sbb
les
vsubpd
jno
js
jae
fcmovnb
dec
adc
mov
xchg
jbe
bound
dec
out
push
aas
push
mov
pop
je
ror
std
ret
push
int3
cmc
fmul
sub
movsl
xchg
inc
adcl
mov
popa
loopne
pop
daa
push
imulb
clc
stos
pushf
push
mov
pop
push
xchg
add
mov
mov
int3
xchg
sbb
pop
ss
sub
test
mov
push
pop
mov
push
std
mov
rcrl
inc
sub
push
push
lcall
push
mov
icebp
xchg
sbb
mov
js
fdivl
mov
test
nop
xlat
pop
test
mov
cmpsb
inc
div
out
and
mov
adc
xchg
push
mov
dec
cwtl
aaa
cs
or
adc
adc
ret
xchg
lret
pop
adc
movsb
dec
xor
imul
jae
lret
push
jp
mov
scas
scas
pop
into
push
sub
lahf
mov
mov
out
sub
pop
lea
xchg
loopne
in
stc
cli
in
aam
mov
loope
int3
out
xchg
lds
sbb
repnz
insb
insl
or
mov
stos
mov
popa
add
push
rorb
jle
push
pop
mov
pop
test
sub
daa
mov
cmp
push
mov
mov
rorl
pop
mov
or
mov
ret
mov
scas
dec
rcrb
lods
xor
les
aaa
icebp
fdivrs
or
dec
leave
push
xchg
mov
mov
in
in
jg
sub
jbe
in
xor
jle
sahf
insl
mov
out
mov
inc
fldenv
push
lds
shlb
scas
data16
outsl
int3
lea
pop
jmp
jbe
xor
stos
pop
xchg
loop
out
std
movsl
sub
icebp
addr16
bound
jnp
out
mov
inc
out
mov
lods
ret
jg
inc
lea
call
test
mov
bnd
or
test
inc
loope
je
and
push
pop
mov
testl
insl
sti
dec
mov
out
das
rcrl
push
inc
cmp
sbb
aam
sarb
es
cli
loopne
inc
inc
sti
sub
xchg
addb
or
xchg
mov
add
pop
jbe
mov
ret
xlat
dec
xchg
sbb
outsb
sbb
inc
fbstp
jecxz
in
mov
int
push
push
incb
adc
xchg
adc
out
mov
aad
jo
cmp
mov
sbb
add
sub
cmp
xor
int
mov
cmp
mov
push
jae
loopne
out
adc
pusha
dec
mov
xchg
dec
inc
sub
hlt
adc
lods
mov
and
hlt
sti
push
lods
dec
pop
or
xchg
sahf
push
movsl
dec
in
xlat
pop
inc
jns
js
mov
jno
call
out
mov
imul
les
push
mov
and
or
cwtl
adc
mov
sbb
sub
jmp
jmp
icebp
mov
int
sub
test
movb
in
in
sbb
frstor
inc
add
shlb
sub
pop
push
dec
pop
call
jae
xchg
push
dec
ja
pop
pop
daa
cld
xchg
xchg
daa
gs
shl
stos
imul
jne
prefetcht2
or
jl
lock
jmp
sete
cmp
daa
std
fnstsw
test
jl
ss
outsb
popa
inc
fists
mov
xchg
lret
cld
adc
mov
out
jecxz
dec
shrb
inc
cmp
shlb
inc
cwtl
rolb
and
inc
mov
mov
xchg
loop
xor
adc
sub
xchg
xor
and
scas
and
push
mov
inc
or
sbb
in
cmp
fmuls
cmp
mov
sub
pop
fisttps
cmpb
mov
xchg
inc
sahf
and
xor
push
lock
rcrl
and
pop
sub
or
das
add
popa
add
mov
mov
and
mov
jb
mov
pop
nop
xor
fcomip
addr16
cmpb
pop
sbb
loop
mov
aad
cld
inc
out
cs
in
data16
push
enter
lods
sub
cmp
inc
jge
addl
adcb
stos
jle
adc
pop
pushf
sub
push
ret
inc
mov
movsb
js
pop
mov
xchg
sbb
jp
mov
xor
jno
mov
bndldx
test
push
hlt
push
lret
das
pop
popf
mov
movsb
push
jg
repz
and
and
push
popl
sarb
leave
xchg
aaa
jmp
dec
push
mov
push
add
lcall
aad
pop
pop
dec
mov
pop
add
jae
jnp
gs
movsb
pop
dec
mov
xor
adc
call
into
inc
in
mov
sub
es
pop
add
inc
loope
inc
add
fldl
sub
fcompp
sub
je
jge
dec
push
mull
mov
fcomip
add
ljmp
push
jle
pop
xchg
sub
push
add
les
or
cmp
loopne
int
jge
idivl
jbe
pop
or
push
xchg
jl
jbe
and
dec
adc
xchg
jg
ds
int3
add
les
and
cld
cwtl
fidivrs
lcall
add
and
in
shll
mov
scas
cmp
lret
sbb
std
jae
jg
stos
js
popa
dec
cltd
push
pop
mov
xchg
repnz
pop
mov
sub
cmp
out
std
les
add
mov
push
sbbb
jno
into
aam
popf
and
xchg
xchg
jb
mov
fistl
cmp
push
sbb
rcrb
cli
das
fwait
pop
sahf
mov
pop
cmpsl
sbb
daa
or
dec
test
sub
testb
out
outsb
xchg
sub
cmpsb
jo
test
sub
mov
loope
sub
out
test
out
rcll
les
or
fistpll
adc
cmp
cmp
fistps
sbb
je
filds
test
lahf
adc
data16
int
xchg
pop
daa
jge
jae
mov
stos
inc
push
js
sbb
or
aad
pop
sahf
or
fsubr
or
leave
sub
enter
and
mov
push
repz
lods
aaa
je
xchg
mov
repz
in
outsl
jle
enter
adc
xchg
lret
dec
subl
push
pop
xlat
mov
add
xchg
cltd
repz
mov
int
push
mov
add
xchg
mov
inc
cmp
and
movsl
add
xorb
jns
fldl
and
daa
enter
jo
jae
test
loope
loope
jge
or
add
inc
xor
push
push
mov
xchg
out
mov
and
and
and
xchg
mov
lock
push
mov
jne
jns
push
aam
imul
lds
add
bnd
lret
enter
into
push
mov
movsl
leave
jne
add
ljmp
movhps
inc
imul
gs
ficoml
mov
xor
fisubs
aas
adc
stos
cmp
fbld
js
clc
popa
jne
subb
pop
add
jbe
aaa
xor
add
xor
or
or
in
sub
xchg
dec
adc
push
ret
pop
out
loopew
shr
clc
jno
add
jnp
jnp
loopne
xchg
int
lret
mov
or
xlat
push
loope
xchg
lds
inc
lds
fimull
push
jl
enter
push
sub
mov
loop
xor
mov
add
outsl
or
int3
scas
cld
sbbl
xchg
imul
shlb
xchg
xchg
mov
jns
adc
lds
push
lock
and
loopne
xor
dec
jbe
inc
or
movsl
les
je
je
xchg
call
ljmp
mov
lods
xchg
rcr
je
mov
fildll
xor
int
cmp
orl
xor
aaa
xchg
push
mov
scas
pop
jbe
invd
xor
jb
lods
adc
adc
or
inc
push
shr
cmpb
sub
rcrl
movsb
imul
daa
xlat
es
test
lahf
pop
ret
pop
stc
dec
in
stos
mov
test
pushf
clc
hlt
pop
pmulhuw
jp
mov
inc
mov
inc
or
push
addb
push
nop
pop
push
xchg
xor
cmc
jnp
add
sahf
lahf
ds
iret
jecxz
ja
mov
pop
xor
mov
cmp
jns
cwtl
push
xor
mov
sarl
jecxz
insb
mov
imul
rcr
inc
lret
add
fs
push
cwtl
and
inc
jnp
mov
repz
mov
add
push
enter
imul
call
jo
adc
xor
and
push
xchg
inc
test
arpl
je
rcll
add
xor
and
aam
les
hlt
and
push
xchg
inc
test
arpl
je
rcll
add
xor
and
aam
inc
mov
and
rcll
movsb
xchg
aam
inc
mov
mov
add
xor
and
aam
les
hlt
and
push
xchg
inc
test
arpl
je
adc
lret
xchg
fistl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
out
mulb
enter
clc
jl
dec
pop
jbe
pop
cmp
or
sbb
in
cld
int3
out
imulb
pushf
sarl
jl
bound
jbe
arpl
or
sbb
ss
jl
dec
out
idivb
fs
inc
adc
add
dec
jnp
outsl
inc
lods
mov
cmpsb
mov
stc
jns
movsl
lahf
mov
lds
inc
cmp
jns
dec
fldcw
hlt
mov
cld
xchg
inc
sbb
push
subl
lea
in
push
int3
xor
xor
int
clc
jge
jne
inc
adcl
mov
sub
stos
inc
cli
test
xrelease
lea
das
test
mov
push
jecxz
imul
sbb
push
or
aam
lods
mov
pop
jbe
push
cmp
pop
dec
imul
xor
and
inc
sbb
xchg
inc
test
adc
pop
cmp
dec
es
ffreep
cld
int3
out
imulb
and
sahf
inc
out
push
xchg
inc
jbe
push
and
or
js
sahf
mov
ret
loop
ret
std
ret
cmp
push
inc
jb
push
js
pop
push
in
stos
je
mov
fst
loopne
out
cwtl
push
and
and
arpl
jns
pop
bound
sbbl
mov
jl
dec
pop
jbe
push
cmp
or
sbb
in
cld
int3
out
imulb
pushf
mov
inc
jl
dec
pop
jbe
push
cmp
or
sbb
in
cmp
mov
adc
das
push
int
imul
mov
popf
scas
or
shl
or
pop
mov
xchg
rcrl
cmp
pop
mov
icebp
mov
stc
mov
cltd
in
in
test
lods
xor
xor
cmp
jb
pop
dec
imul
lret
or
test
push
xchg
push
test
jns
dec
sbb
frstor
mov
or
mov
sub
sbb
ja
movl
inc
loop
mov
push
adc
jecxz
mov
adc
and
pop
mov
es
xor
lret
lret
ljmp
dec
xchg
shll
ret
into
inc
cmp
mov
sbbb
fdivrl
jg
in
sub
pop
xor
push
push
movsb
imul
and
push
frstor
and
cmp
jl
stos
test
mov
jle
cmp
nop
subb
add
repnz
dec
add
mov
out
dec
xchg
inc
imul
xor
pusha
or
mov
nop
xchg
push
jg
xor
pop
ret
roll
push
lea
sub
lods
into
test
loop
jae
aaa
add
pop
and
jbe
push
mov
je
inc
sub
movsb
jmp
fnstenv
mov
cmp
inc
mov
pop
adc
test
add
aas
mov
loopne
fwait
cmp
xchg
or
adc
rclb
or
pusha
mov
jb
cmp
xchg
or
xchg
cmc
mov
shr
loop
jnp
movaps
fldenv
pop
pop
loopne
cmp
lds
push
bound
jnp
cld
mov
scas
ds
movsl
inc
jp
mov
mov
test
mov
jae
fcompl
dec
scas
mov
or
and
mov
std
mov
pop
mov
aas
in
mov
pop
lcall
push
mov
imul
lods
out
cwtl
mov
into
xchg
xchg
loop
mov
and
popa
js
in
lea
fadds
and
cmpb
dec
cmp
push
out
das
iret
icebp
sub
into
jp
les
add
and
dec
lock
push
sti
or
fs
adc
xchg
cmc
and
and
test
xlat
mov
test
mov
movsb
cmpsl
rcll
mov
dec
xor
loope
sbb
js
mov
enter
xchg
sbb
out
fdivrs
add
rcrb
fists
divl
adc
sbb
jnp
pop
nop
iret
add
sub
push
orl
jbe
xchg
movsl
lahf
dec
inc
mov
push
jns
pop
adc
mov
cmp
outsb
mov
sub
push
movsb
xchg
jl
sbb
cmpsl
mov
mov
rclb
fstpl
jmp
lahf
stos
and
pop
std
push
pop
fcoms
xor
mov
dec
cld
ret
daa
outsb
xchg
add
cmp
and
into
push
add
cmp
les
addr16
lock
int3
decl
int3
xchg
pop
mov
push
mov
adc
scas
xchg
cmp
and
fwait
js
popf
fstpt
mov
nop
pop
adc
fsubr
jne
jne
cmp
pop
pushf
mov
rcll
cs
xchg
xor
scas
sub
outsb
dec
iret
inc
cmp
xchg
push
adc
addr16
push
inc
lods
std
pop
or
pop
cmp
xchg
mov
mov
xchg
sub
inc
xchg
outsb
or
out
mov
mov
lahf
pop
or
sub
adc
mov
inc
xchg
pop
sbb
push
loop
jmp
xchg
push
clc
sub
in
int3
adc
inc
imul
lret
mov
lods
or
pop
hlt
and
sbb
call
imul
ret
push
fistl
vandnps
push
pusha
inc
sahf
push
mov
dec
fadds
ds
icebp
and
pop
shrl
xor
sub
dec
data16
jg
push
mov
cmp
lock
cmp
lds
fisttpll
hlt
dec
mov
xchg
xor
loopne
xor
sti
stc
das
mov
mov
pop
adc
std
dec
repnz
jo
sbb
pop
fdivl
aad
stos
or
mov
hlt
andb
adc
dec
mov
sub
jg
pop
in
mov
js
mov
sub
sbb
xchg
pop
fldt
xchg
test
push
in
pop
push
xchg
test
mulb
sahf
scas
push
icebp
adc
xor
jecxz
xor
incl
ret
or
and
bound
aad
mov
dec
xor
push
lods
jge
and
xchg
sbbl
mov
push
push
mov
xchg
jge
cmp
inc
out
leave
sti
xor
xor
mov
ret
pop
jo
rolb
dec
enter
jl
add
jae
loope
int3
insb
stos
cmpsl
mov
fimull
adc
push
xchg
or
or
mov
add
xor
push
cwtl
inc
adc
dec
mov
lahf
sub
popa
lods
daa
es
sbb
aad
jecxz
sbb
pop
pushl
pop
sub
and
add
movsl
jp
aaa
addb
mov
dec
arpl
repnz
pop
adc
pop
push
test
cmp
dec
cltd
sub
test
out
das
push
cmp
bound
mov
and
divl
xor
inc
jle
cmp
dec
inc
mov
je
mov
cmp
rcrb
je
fs
shll
popf
push
add
xchg
iret
jns
add
sbb
pop
rorl
sbb
cmpsl
cmpsl
pop
popa
push
out
insb
jnp
int3
dec
mov
push
outsl
pop
addr16
xlat
add
aas
mov
sbb
leave
sbb
cltd
scas
xchg
pop
shll
dec
call
mov
pop
cmp
subl
pop
in
xor
push
lret
es
or
adc
ss
pop
push
rcll
jmp
jae
dec
adc
dec
dec
jecxz
pop
rcr
sub
mov
lock
dec
xchg
ss
stos
sbbb
sarb
or
mov
mov
stos
add
sahf
mov
aad
sbb
xchg
shll
inc
add
add
xlat
dec
mov
or
mov
adc
adc
pop
pushf
pop
fstl
push
out
mov
stos
xchg
mov
push
jbe
les
mov
jno
ret
push
mov
mov
pop
push
inc
sbb
or
inc
sbb
fildl
push
popa
in
cmc
sbb
fsubrs
shll
mov
out
inc
shlb
push
adc
fwait
movsl
jl
cli
sbb
jbe
stos
xchg
aam
cmc
sub
xchg
pop
jmp
ja
das
add
lock
loop
add
inc
dec
sub
and
out
mov
aas
sub
inc
or
dec
xlat
js
ret
rorl
jb
xchg
mov
mov
les
sbb
sbb
inc
mov
mov
test
cld
fmuls
push
fdivrp
cmp
repz
xchg
cmp
push
dec
push
ss
cld
dec
orl
dec
mov
jb
loop
inc
aad
mov
jecxz
dec
mov
ret
lret
dec
lock
push
jnp
dec
push
push
addb
mov
leave
mov
call
mov
std
into
in
mov
push
loope
xlat
adc
sbb
xor
cmp
mov
mov
hlt
pushf
mov
das
outsl
decl
and
ja
inc
lret
sub
xorl
lret
pop
mov
addr16
pop
mov
icebp
imul
lea
or
xlat
cmpsl
cld
mov
enter
fwait
mov
int3
ret
xchg
idivb
movsl
push
in
lret
lods
pop
sbb
sbb
sbb
enter
clc
in
and
jb
mov
jge
adc
ja
pusha
or
xor
xorb
test
inc
cmp
add
cmp
outsb
jp
jo
cwtl
enter
arpl
fimull
out
and
test
push
xchg
insb
mov
mov
rcrl
mov
sbb
mov
dec
iret
mov
and
lret
lret
scas
mov
into
in
outsl
inc
fwait
ret
mov
inc
fmuls
push
mov
shr
dec
js
push
mov
adc
xchg
xorl
outsb
nop
and
xor
clc
fldl
ljmp
clc
shrl
mov
and
jb
cmp
aaa
aas
js
jns
setns
and
adc
inc
and
rcll
dec
iret
scas
or
pusha
mov
rorl
pop
test
call
popf
mov
sub
jb
fnstenv
int
mov
shlb
lock
stos
cmc
mov
or
mov
imul
xor
xchg
mov
pop
jl
cmp
dec
xlat
in
test
loope
sbb
push
and
mov
in
push
shrl
fildl
insb
push
xchg
xchg
cwtl
jl
jnp
cmpsl
faddl
into
loop
push
jnp
scas
jecxz
push
dec
pop
or
or
cmp
lahf
pop
inc
in
add
sub
leave
loopne
lret
rclb
jbe
inc
enter
repnz
cli
out
loop
sbbb
and
xchg
jns
aas
inc
pusha
or
push
sub
push
sbb
sysexit
mov
lret
dec
inc
sub
daa
or
jae
fmul
push
adc
and
fs
add
imul
bound
sub
mov
jb
mov
add
ror
enter
sbb
sbb
aad
sub
cwtl
and
xor
popa
jbe
outsl
mov
sub
ret
in
and
sbb
xor
movsl
movsb
xor
jge
jecxz
mov
sub
dec
jno
mov
xchg
adc
cmpsl
lcall
mov
test
ss
sub
pop
xchg
pop
mov
pop
jmp
repz
imul
mov
sbb
xchg
gs
push
lcall
mov
dec
or
add
or
aaa
mov
ret
cli
mov
mov
lahf
sbb
gs
int3
stos
inc
jo
xchg
movsb
faddl
das
daa
lods
rcrl
mov
out
nop
mov
je
out
adc
sbb
jg
xor
out
shlb
pop
sbb
mov
push
int3
sbb
mov
popl
or
cmp
daa
lcall
inc
and
aam
push
jl
push
add
subl
xchg
pop
test
out
sbb
jp
scas
mov
imul
or
jl
loop
pop
push
dec
sbb
sub
mov
push
or
push
xchg
fcmovu
sub
ret
mov
dec
stos
pop
push
mov
int
cmp
ficoml
mov
mov
cmp
mov
loope
repz
push
xor
jnp
adc
xor
cltd
fstl
aas
mov
xlat
xchg
xchg
mov
push
sti
mov
movb
inc
pusha
sbbl
call
or
adc
mov
mov
pusha
fwait
cmp
lret
aad
sub
mov
orl
lret
jecxz
jbe
jno
cmc
xchg
xchg
dec
sbb
dec
loope
dec
ss
fdivl
sbb
sahf
loope
add
xchg
into
xchg
lods
add
jno
ja
hlt
fiaddl
orb
arpl
roll
sarl
mov
mov
scas
jecxz
jle
xchg
fdivrs
jne
scas
push
add
mov
data16
mov
mov
pop
fidivrs
pop
sub
and
push
loop
xor
daa
mov
cwtl
movsl
int
or
dec
xor
stos
mov
ja
ficomps
cwtl
mov
int3
xchg
fsubl
fidivs
iret
insb
jno
std
xchg
loopne
xchg
pop
popl
mov
rol
mov
dec
inc
outsl
xor
cs
or
jecxz
iret
je
gs
lret
inc
shr
jle
iret
and
stc
int
xchg
orl
pop
cmp
mov
or
les
push
and
sub
xor
sub
inc
fstps
dec
adc
mov
fcmovb
adc
push
ficoml
pop
fs
dec
inc
mov
mov
push
insl
int3
inc
pop
sbbb
adc
xlat
es
inc
scas
fimull
mov
sbb
jge
jne
fcomps
lds
data16
pop
clc
add
or
adc
movsl
aad
loopne
mov
sti
out
repz
push
cmp
xor
xor
sahf
mov
imul
scas
xchg
dec
std
movsb
and
sbb
out
leave
inc
mov
testl
xor
sbb
mov
iret
jg
pop
outsb
jmp
shll
sub
sbb
clc
imul
jo
push
in
fdivs
xor
mov
or
sarl
and
ljmp
sbb
dec
jne
loopne
int3
mov
test
fchs
cmp
inc
int
push
dec
lret
sub
insb
js
sbb
xchg
psrlw
xchg
int
push
xchg
mulb
adc
mov
cmp
mulb
lret
jg
cmp
iret
lret
mov
ljmp
test
sub
clc
cmp
pusha
int3
jno
push
add
lods
ds
pop
mov
sub
cli
adc
mov
pop
jecxz
ljmp
and
popa
loopw
les
shll
lods
and
add
cs
inc
mov
push
dec
pop
outsl
inc
cmp
icebp
inc
data16
cmp
frstor
jns
ja
add
dec
jg
mov
and
repnz
jae
cld
lret
dec
push
dec
lahf
sbb
mov
jecxz
mov
sbb
adc
push
jmp
orb
rol
aas
mov
mov
int3
mov
aas
shlb
xchg
jp
outsl
cmp
dec
fsubrs
fcmovb
sbb
xor
cmpsl
inc
shll
cwtl
inc
xor
into
jmp
inc
dec
sub
xchg
xor
scas
fisttps
push
lods
xchg
inc
mov
out
test
mov
cmc
cs
jle
mov
mov
sub
pop
shl
mov
jl
inc
dec
mov
nop
subl
lods
ds
mov
pop
push
adc
cmp
in
or
adc
sub
mov
mov
adc
inc
adc
or
jge
es
rol
popf
and
fldenv
or
sbb
jnp
fstpt
insb
mov
pop
stos
sbb
sbb
add
jnp
mov
cmp
shll
mov
xchg
mov
fistpl
mov
das
cmpsb
iret
push
dec
or
add
mov
mov
mov
test
sub
shlb
pop
lret
and
pop
sub
and
push
and
sbb
subl
lock
push
mov
add
xor
pop
cltd
scas
jp
mov
fsubl
xchg
int
add
bound
dec
xor
hlt
lret
fwait
jo
push
out
xchg
or
adc
addr16
addr16
mov
push
or
mov
dec
sbb
in
jp
adc
fwait
add
push
cwtl
stos
jo
jp
in
xlat
pop
rcll
jp
jne
cmpsb
in
sub
cmp
jle
jae
jbe
sub
adc
test
mov
rcr
cs
sbb
das
xchg
mov
inc
mov
cmp
cmc
nop
testl
xor
mov
inc
add
dec
push
adc
cmp
imul
jge
out
add
jp
jno
std
push
pop
outsb
mov
les
js
or
xor
insb
lret
jle
pop
ljmp
std
pop
jmp
xor
clc
sarb
sti
nop
mov
andb
adc
sub
ja
adc
out
fdivr
cmc
and
cmp
in
in
push
repnz
push
iret
mov
push
je
mov
sub
sub
bound
movsb
test
mov
fsubrs
test
or
out
xchg
sbb
ss
fwait
stos
clc
mul
clc
into
dec
mov
sbb
rcll
clc
jno
pop
mov
fcmovb
dec
xchg
mov
fildll
stos
xlat
jmp
dec
push
jge
and
cmp
dec
dec
orb
fisubrl
arpl
rcll
dec
pushf
jns
add
lea
pop
mov
mov
clc
xlat
mov
adc
loop
pusha
pop
shlb
addr16
mov
std
xchg
cmp
mov
test
scas
jle
stc
pushf
jae
movsl
jmp
pop
sbb
cmp
pop
jmp
test
jnp
add
inc
cld
pop
daa
mov
push
mov
imul
sbb
push
mov
sahf
jnp
loopne
mov
push
mov
outsb
stos
jns
cmp
mov
fucomip
pop
xor
repnz
cmp
or
rolb
add
sarb
clc
jbe
out
sbbb
stc
fisubs
jne
cmove
loop
xchg
mov
push
xchg
xchg
sbb
pop
mov
jle
sti
dec
push
icebp
mov
out
pop
ss
mull
fwait
inc
aaa
shrb
movntps
int
mov
mov
in
xor
int
jnp
and
sbb
scas
and
sub
outsl
pop
dec
mulb
sarl
adc
movsl
cltd
in
inc
sub
pusha
sbb
add
inc
push
sahf
stos
movsl
cmpsl
ja
pushf
sbb
in
out
idivl
addr16
mov
in
testb
add
in
xor
inc
xchg
addr16
std
push
psubsb
pop
jne
add
shll
mov
sbb
sub
popa
sar
sbb
fwait
and
cmp
inc
aaa
loopne
rcrb
add
push
adcb
sbb
inc
mov
fmul
inc
inc
das
pop
mov
in
add
lahf
jge
data16
leave
jge,pt
dec
test
push
mov
mov
lcall
dec
addb
les
icebp
sbb
add
daa
xchg
leave
xor
jle
std
int
lods
das
std
dec
jb
xchg
push
pop
testb
nop
jne
jmp
or
popf
call
mov
mov
sub
inc
inc
arpl
xchg
jns
mov
inc
push
into
and
jb
or
adc
mov
xor
xchg
pop
push
dec
clc
popa
dec
inc
dec
les
jmp
push
sbbl
fcmovb
adc
repnz
aaa
push
mov
push
in
xchg
xchg
shrl
insl
push
clc
xor
stos
loope
pop
hlt
enter
mov
jge
shl
pop
push
push
dec
ret
adc
jo
popf
imul
rolb
call
cs
sahf
cld
xchg
lds
lret
lcall
xchg
jb
mov
fiaddl
aaa
xor
repnz
add
lock
add
test
cmp
cmpsl
cmpsl
das
adc
jge
outsl
sbb
inc
mov
cs
aaa
cmp
in
sub
fcomps
add
incb
ljmp
mov
push
mov
add
subb
rcr
jnp
xchg
xlat
push
add
jl
rorb
jbe
jno
sub
daa
loop
in
lods
scas
jno
js
loop
iret
lahf
shlb
iret
jecxz
pusha
add
mov
shll
dec
sahf
mov
adc
add
mov
call
cmp
lods
fsubr
xor
inc
test
cli
mov
sbb
dec
aam
jle
push
adc
cs
jmp
pop
cwtl
mov
sub
jg
jle
jb
nop
cs
jo
nop
cmp
leave
jne
or
push
sbb
popf
cmpsb
sarl
outsb
xlat
mov
ret
nop
xor
gs
int3
pop
repnz
xchg
ret
dec
scas
push
and
das
iret
mov
push
sarl
ds
dec
in
xlat
cmp
movsb
enter
xchg
mov
inc
push
mov
push
lea
xchg
clc
or
es
sbb
mov
leave
push
and
sbb
push
test
shll
xchg
jl
xor
cmpsl
insl
or
loope
aas
push
mul
fs
pop
add
push
push
jns
out
push
scas
stos
frstor
std
mov
pushf
subl
fldt
push
push
lock
cmp
fwait
scas
insb
lea
mov
sbb
lea
loop
lock
jne
push
mov
or
sub
sbb
aam
outsl
outsl
and
mov
inc
adc
sub
jne
xor
notl
mov
movsl
and
pop
ret
jge
orl
xor
addb
loope
push
cmpsb
loop
xchg
pop
test
negl
or
outsb
dec
daa
jecxz
add
sbb
addb
shl
xchg
insb
inc
jl
dec
pop
jbe
push
cmp
or
sbb
in
cld
int3
out
imulb
pushf
mov
inc
jl
dec
pop
jbe
push
cmp
or
sbb
in
call
fsub
fdiv
lods
xchg
mov
inc
jl
inc
pop
jbe
push
and
ss
rcl
inc
out
imulb
sbb
insb
inc
cmp
pop
add
mov
repz
leave
dec
dec
enter
call
jnp
or
push
pop
push
dec
sarl
push
ja
stos
sub
stc
push
jp
or
adc
lret
sbb
push
lcall
enter
call
push
mov
lret
sbb
popa
cld
sbb
inc
fisubrs
cmp
jecxz
test
dec
and
adc
pushf
xchg
outsl
push
mov
cltd
lea
test
xchg
xor
ffree
sub
adc
test
pop
and
add
xor
jecxz
fcmovu
popa
pop
lret
sbb
cs
add
jns
mov
jge
dec
enter
add
cwtl
push
movsb
sub
test
dec
dec
mov
jns
cmp
lahf
pop
pop
sub
and
xchg
std
test
sbbb
jmp
xor
cmp
or
pusha
mov
mov
movsl
jb
insl
stos
js
inc
jmp
cmpsl
cltd
sahf
mov
loop
fistpll
inc
sub
xchg
enter
call
sbb
lret
js
push
je
mov
mov
cmpsb
push
fldt
int
xor
or
insb
int
cmc
push
ficomps
or
sbb
sbb
dec
mov
stos
and
lret
jnp
push
cmp
mov
flds
sbb
lret
js
push
lcall
enter
call
sbb
lret
js
push
lcall
int
jne
mov
adc
sbbl
adc
sbb
es
xchg
cmpsb
cmp
aaa
sbb
jo
mov
sahf
cmp
jne
or
aas
inc
adc
and
repz
mov
xlat
inc
aaa
pop
fiaddl
push
push
xchg
gs
and
cwtl
adc
addl
bound
hlt
std
psllw
je
lcall
sbb
or
mov
jecxz
push
mov
repnz
xchg
out
xor
dec
out
pop
inc
mov
or
cwtl
ret
pop
enter
push
xchg
dec
or
pusha
scas
or
jp
adc
pop
add
xchg
jno
inc
imul
adc
xor
outsb
add
jnp
stos
inc
bound
mov
jbe
aam
hlt
mov
xchg
mov
es
xor
mov
xchg
addr16
pushf
icebp
fldcw
mov
test
and
cmp
cmpsb
push
sahf
xor
mov
mov
repz
dec
mov
lods
cmp
mov
lcall
loope
ds
mov
cmc
shlb
push
xchg
push
aam
jp
adc
mov
out
xchg
cmc
sub
es
mov
insl
rorb
into
aam
mov
dec
outsl
xchg
lcall
inc
daa
sbb
cmp
push
dec
inc
inc
mov
adc
or
and
and
pop
mov
inc
mov
shr
loopne
lock
adc
testl
loop
cli
in
jns
aad
mov
icebp
dec
jnp
mov
popa
push
and
lret
les
movsb
insb
sub
imul
mov
into
js
sahf
mov
and
inc
pusha
add
jmp
cltd
cmc
leave
or
or
pop
and
test
mov
push
aaa
fidivrl
ds
fcompl
xchg
inc
sub
hlt
xchg
jp
mov
xchg
sarl
shrb
dec
movb
pushf
ds
loope
mov
and
mov
daa
inc
cs
mov
movsb
je
adc
mov
pop
pop
filds
push
pop
ljmp
inc
ss
xchg
es
lahf
cmpsb
adc
mov
sbb
push
sbb
shl
push
cmp
ficoml
enter
pop
mov
lahf
enter
dec
xchg
inc
insb
pop
movsl
out
or
mov
xorl
cmpsb
loopne
je
and
pusha
ja
lods
data16
inc
dec
adc
fists
lds
or
push
stc
mov
movsl
mov
mov
jae
std
cs
fcmovu
jbe
mov
adc
stc
jp
adc
sbbl
stos
out
lea
pop
test
into
push
nop
mov
test
outsl
and
push
mov
xor
mov
hlt
xchg
jg
lods
fsubl
sub
mov
cli
repnz
push
loope
push
fidivs
xlat
in
lea
outsl
inc
xchg
sbb
movsb
push
iret
adc
test
sbb
xor
rorl
push
inc
mov
cmp
jo
and
pop
icebp
mov
xor
lods
ja
mov
xchg
imul
fistpl
rorb
cmp
cmpl
imul
repz
mov
or
or
out
sahf
jg
pop
mov
xchg
dec
sbb
xchg
add
add
cmp
out
mov
xor
inc
mov
stos
pop
jle
out
pop
jns
js
xchg
adc
or
mov
mov
sbb
xor
adc
adc
lea
ffree
pop
jmp
mov
inc
mov
mov
and
jle
shrb
push
stc
fstpt
xor
fisttpll
les
inc
sub
jb
jae
cmp
jecxz
je
dec
jno
and
mov
inc
xor
dec
aam
in
cmpsb
cli
push
jp
xchg
xor
das
cltd
pushf
mov
inc
pop
dec
pop
mov
loop
inc
adc
mov
cmpsl
push
add
movsb
mov
cmp
push
subb
dec
lock
inc
shlb
add
fisttpll
cmp
insb
iret
fnstsw
lds
push
mov
inc
and
je
xor
dec
xor
leave
dec
in
dec
xchg
movsb
jmp
dec
and
xor
sbb
pop
fistpl
jno
mov
and
pop
push
fcoms
push
fucom
jle
dec
out
enter
cmp
stos
lahf
mov
xor
mov
sub
mov
push
outsl
mov
xchg
stos
xor
ljmp
mov
sub
outsb
enter
push
mov
scas
repnz
outsl
jge
mov
adc
lret
cmpsb
add
or
xchg
mov
cmp
mov
pushf
jge
rdmsr
mov
inc
out
sbb
leave
outsl
icebp
scas
push
inc
mov
arpl
mov
orl
mov
xchg
movsb
pop
cli
lods
push
or
lea
enter
mov
stos
fildll
pop
inc
iret
or
pop
xchg
cmp
xchg
test
mov
mov
fisttpl
cmovg
addr16
inc
lret
imul
inc
in
cmpsl
xchg
mov
imul
xor
jge
fldenv
mov
popa
ljmp
inc
cmp
jae
shlb
sti
adc
addr16
push
sbb
sub
dec
faddp
std
fwait
and
test
out
divb
dec
cmp
or
inc
das
notb
es
dec
shrb
push
lds
and
lock
ljmp
aaa
add
sahf
negl
cld
sbb
stos
sub
push
cmc
pushf
push
xchg
cmp
push
mov
mov
sub
and
cld
push
sub
adc
aas
std
scas
pop
mov
lock
jle
leave
cmp
mov
lret
and
sub
xor
fcmovne
dec
push
fstpt
daa
add
ror
divl
out
pop
aaa
ret
rcrl
sbb
ss
mov
test
mov
dec
cmp
sbb
cmp
xchg
mov
rorl
imul
xchg
jl
sbb
lahf
and
popa
jecxz
lock
dec
or
iret
or
imul
into
jb
sar
sub
mov
icebp
push
ljmp
add
push
cmpsb
mov
jae
sbb
cmp
vmptrld
cmc
cltd
sub
popf
stos
mov
enter
or
and
lds
cli
clc
lret
ljmp
cmpsl
fs
cmc
scas
imul
orb
loopne
xchg
pop
mov
jne
lea
mov
es
adc
lcall
repz
jmp
mov
ret
mull
xchg
xchg
mov
iret
ror
aas
xchg
push
adc
and
movsb
xchg
adcl
mov
cmp
jns
pop
aas
lcall
inc
xor
cmp
push
fstl
test
push
mov
fistl
das
std
add
sbb
sbb
jg
test
out
jmp
nop
push
mov
sbb
jle
loope
mov
jno
add
or
mov
stos
repnz
mov
mov
fldl
xchg
jnp
jnp
pop
push
cmpsl
mov
push
or
dec
add
push
ja
enter
fcoms
in
mov
inc
into
pop
xor
in
mov
pusha
repz
mulb
loop
pop
mov
in
cmp
push
das
xchg
sub
mov
or
aad
xor
cmc
rorl
aam
sbb
add
mov
mov
call
adc
sbbb
dec
cmp
lret
and
adc
aaa
and
ror
movsl
lcall
rcl
adc
loopne
and
xchg
or
lret
jle
sahf
stc
insl
adc
sbb
pop
lret
out
cmpb
lock
jge
ljmp
push
ja
dec
clc
jno
pop
faddl
or
mov
mulb
movsl
pop
aam
mov
popa
mov
xchg
cmp
sub
xor
arpl
mov
push
xchg
enter
syscall
pushf
jp
push
or
lahf
cmp
sub
addl
lds
mov
int
push
insl
adc
aaa
shlb
push
push
dec
cltd
std
aam
imul
dec
sbb
dec
mov
daa
push
pop
dec
repz
or
outsb
lods
xchg
pop
sub
test
xor
sahf
outsb
decl
shll
jne
cmpsl
mov
adc
call
add
cmp
adc
fs
cmpsl
cmp
std
push
pop
adc
lahf
mov
mov
jo
imul
adc
test
int
out
insb
cmp
sbb
jae
xor
mov
lahf
shlb
jno,pt
jbe
add
xchg
ljmp
pop
out
lcall
mov
subb
sub
insb
mov
adc
xor
pop
sub
leave
jmp
adc
add
inc
out
fstps
sbb
push
mov
je
cwtl
push
mov
cld
cmp
std
testb
ds
dec
mov
sti
push
xchg
add
shll
mov
inc
call
out
iret
scas
mov
cmp
cmp
jnp
sbb
push
fcomps
mov
adc
push
daa
mov
inc
inc
sbb
pop
sub
mov
hlt
imul
ds
in
push
push
cmpsb
inc
adc
stc
xor
jb
aad
jo
inc
cld
addr16
sub
mov
sar
pop
sbbl
cmp
sbb
out
dec
or
cmp
jp
fwait
leave
mov
push
push
loop
in
dec
dec
mov
fbld
int3
and
mov
mov
sbb
xchg
mov
aam
ficoml
inc
leave
loopne
jne
mov
cld
fadd
fdivr
out
insb
in
mov
insb
mov
or
test
outsl
dec
sbb
jmp
push
lret
lret
inc
sub
popa
fdivr
mov
stos
mov
cwtl
mov
push
mov
icebp
fcomp
stos
enter
popa
pop
adc
in
rcl
xor
loope
mov
sbb
mov
fcomi
in
push
cmpsb
jg
mov
pop
cmp
sub
dec
aas
pop
bound
pop
sbb
rcll
or
inc
cltd
or
or
jecxz
bound
xor
call
inc
leave
cmp
cs
test
add
mov
test
jecxz
popf
lods
test
or
enter
fucomip
fwait
outsl
mov
xor
jg
repnz
stos
and
push
inc
jae
sub
loopne
sti
mov
pop
inc
ja
mov
das
fucomip
cltd
pop
outsb
fiaddl
cmc
imul
mov
xchg
jp
push
adc
fidivrs
xor
mov
mov
pop
adcl
stos
sti
cwtl
movsb
pop
push
inc
dec
daa
adc
push
into
sub
sbb
loopne
cmc
push
pop
dec
cmp
ds
pop
adc
ljmp
or
jbe
popf
gs
or
scas
push
pop
or
les
cmp
into
add
sub
clc
lds
out
daa
xchg
pop
xchg
adc
jp
enter
pop
loop
ja
pop
outsl
jle
bound
sar
inc
cmpsl
cli
sarl
or
cmp
fwait
sub
cmp
mov
rcrl
xchg
lods
nop
fdivrs
push
into
cmp
fwait
dec
mov
jle
pop
or
add
fs
pop
mov
in
push
sub
rcll
jno
jecxz
in
addb
sub
lret
aad
pop
push
ficompl
fwait
xlat
repnz
idivl
stc
fcomps
fisttpll
mov
jmp
adc
sbbb
ret
mov
stos
xchg
cmpsl
stos
sahf
mov
push
xor
aam
dec
cwtl
or
or
mov
hlt
dec
lret
sbb
jb
mov
inc
in
xchg
or
fidivl
lds
jno
cmp
jl
mov
je
and
push
mov
enter
fdivrl
int
add
int
into
dec
in
cltd
adc
jo
inc
xorb
ss
repz
repz
lods
imul
dec
xchg
flds
push
test
sbb
imul
push
push
inc
movsl
mov
cmpb
jnp
add
cmp
adc
xor
je
pop
inc
jle
aas
lar
lahf
packuswb
and
or
in
xor
sub
hlt
mov
clc
or
stc
ds
in
or
xchg
andb
mov
push
xchg
rorl
shlb
inc
pop
lahf
jae
or
adc
xlat
dec
dec
push
out
cmc
jb
inc
lret
test
clc
or
cmp
stos
js
dec
push
cltd
mov
enter
sbb
hlt
test
sub
pushf
pusha
js
cmpsb
popf
or
push
xlat
cli
sbb
stc
xchg
dec
cs
jb
jg
leave
xor
xor
call
sub
out
mov
hlt
xor
pushf
mov
ret
gs
clc
stc
addl
mov
fs
xchg
adc
xchg
out
loope
clc
repnz
sub
movsl
cwtl
sub
les
or
cmp
aaa
pop
aas
jne
jnp
arpl
ja
fisubrl
mov
lock
push
mov
aam
into
push
in
add
lahf
in
xchg
out
jp
jae
pop
pop
adc
rcll
xor
popa
inc
or
call
and
incl
pop
and
fimuls
adc
push
mov
jge
mov
int3
pushf
repz
iret
xchg
jns
int
iret
data16
mov
clc
or
idivb
subl
jecxz
in
pop
out
sahf
cmp
hlt
sbb
enter
xor
mov
bound
ds
fisubs
pop
push
add
outsb
xchg
nop
cmp
or
fs
cmp
jne
fldt
pop
mov
push
scas
ret
push
mov
xchg
xchg
xor
inc
xchg
nop
test
hlt
sbb
sub
and
mov
andb
cmpb
push
data16
or
jg
iret
mov
sub
mov
and
xchg
cs
sub
mov
movsb
data16
mov
das
jge
adc
fidivs
push
adc
pop
mov
and
jns
inc
mov
and
hlt
stos
mov
ja
jb
add
xor
add
mov
stos
add
jl
mov
add
inc
jnp
pop
popa
hlt
loope
outsl
sub
or
out
mov
ja
jecxz
das
dec
mov
addr16
scas
jle
mov
push
test
xor
mov
jmp
xchg
mov
les
std
xchg
in
sbb
or
xor
sub
adcb
repnz
pop
dec
shrb
inc
mov
sbb
repnz
jl
jb
cmpsl
lds
dec
sub
jp
or
inc
cld
inc
xchg
adc
cli
xchg
loopne
inc
pop
dec
sub
mov
pop
adc
cmpsb
test
movsl
sub
data16
js
out
jl
nop
aaa
add
add
xchg
lret
sub
jge
xlat
inc
sbbl
inc
or
xchg
mov
xor
adc
aad
lret
jl
xchg
xchg
and
test
out
and
pop
pop
inc
push
mov
push
sbb
xlat
cld
xor
mov
sbb
sub
fcmovnb
jl
cmp
lahf
scas
push
scas
in
out
cli
xchg
nop
int
mov
sub
loop
ljmp
repz
imul
aad
loope
or
dec
push
push
int3
divb
fimull
cli
push
push
push
pop
xchg
inc
xor
dec
sbb
or
xor
jae
mov
or
add
jl
add
testb
push
pop
orb
fstps
test
sub
popa
sub
sub
push
jbe
xor
fcompl
jmp
in
movsb
push
stos
es
fstl
fbstp
loop
adc
xor
and
or
test
xor
insl
stc
enter
dec
mov
arpl
testl
je
outsb
nop
cld
inc
into
lret
cmc
sarl
mov
push
cmp
cs
shll
add
jp
stos
mov
mov
jmp
inc
mov
in
mov
and
imul
mov
arpl
adc
aas
lcall
stos
fnsave
lcall
mov
push
sub
cli
push
add
mov
std
add
fnstcw
or
dec
adc
popa
loopne
add
sub
das
test
jecxz
pop
data16
fs
cltd
call
xor
dec
in
mov
add
repz
mov
sti
adc
ret
push
mov
dec
in
pop
ljmp
fwait
mov
sbb
rorl
daa
je
pop
jno
xchg
mov
pop
pop
call
std
dec
cmp
or
sub
mov
jecxz
inc
sub
mov
in
dec
sahf
xchg
push
stos
sub
inc
adc
xchg
fmul
mov
sub
add
xor
cmpsl
xrelease
lods
outsb
adcb
push
fisubs
push
fnstcw
cmp
push
daa
mov
loopne
jbe
test
movsb
adc
sub
lea
or
fisttps
lea
xor
jmp
dec
cmp
add
jno
add
mov
hlt
insb
xchg
jl
xchg
hlt
mov
ficoms
aaa
cmp
iret
repz
cmp
push
cmp
dec
sbb
push
call
daa
jmp
outsb
popf
sbb
in
xor
and
sbb
mov
jb
pushl
pop
dec
jle
lcall
dec
mov
or
push
jp
test
pusha
cli
in
call
cmova
aam
mov
xchg
and
dec
mov
das
sti
lods
and
push
inc
int3
push
mov
into
jae
cwtl
mov
and
ljmp
xor
je
push
pusha
ret
mov
sarl
jg
cli
pusha
dec
movsl
jmp
loope
popa
std
test
inc
or
nop
cmp
movsl
or
popa
test
ljmp
mov
mov
xchg
jl
dec
adc
insl
push
fwait
or
dec
fsubrs
inc
sti
cmc
mov
test
jb
sub
sbb
jne
test
bound
aaa
out
rolb
ljmp
in
in
scas
add
loopne
xchg
scas
nop
arpl
movntq
add
fldl
push
mov
mov
cmp
test
and
push
sbb
je
mov
subb
in
and
mov
lahf
popf
dec
gs
adc
repz
stc
xchg
adc
mov
dec
stos
hlt
jae
lahf
es
lods
jmp
mov
jo
xchg
dec
mov
dec
xor
ss
dec
lcall
mov
sbb
sbb
sbb
out
sarl
cli
es
nop
popa
sub
cld
cmpsl
outsl
xor
imul
xchg
shll
mov
es
imull
adc
and
fldcw
nop
js
adc
jge
lods
jle
add
sbb
loopne
mov
stos
mov
sub
inc
push
ja
dec
std
and
add
push
and
mov
scas
test
xor
and
call
push
push
idiv
jnp
test
push
popf
inc
push
sbb
push
scas
and
pop
lds
mov
popf
mov
andl
lods
or
mov
ja
push
ja
rol
dec
adc
fstpt
daa
cmpsb
mov
pop
in
in
xorl
les
loope
dec
pop
lea
pushf
cwtl
xchg
imul
loop
lods
mov
or
dec
sub
insb
xchg
pop
jae
andb
insb
fdivr
jne
pusha
nop
enter
shrb
int3
xchg
mov
das
ret
nop
je
sbb
jb
lahf
aas
shlb
movsl
mov
test
pop
loope
mov
push
inc
fimuls
cmp
push
jmp
imull
sbbb
adc
and
fs
and
jl
lret
or
jnp
inc
sahf
stos
aam
sbb
ds
mov
scas
cmp
adc
cmpsb
or
mov
lret
ljmp
aas
xor
mov
les
fs
nop
adcb
sbb
mov
jae
mov
outsl
fstpl
or
loope
cmpsb
jle
stos
xchg
les
cmp
push
pop
sub
or
cmp
dec
fidivrl
push
lcall
enter
call
sbb
lret
js
push
lcall
enter
call
jno
cs
pop
lret
dec
fidivrs
push
lcall
leave
mov
cwtl
or
cli
pop
xor
push
loop
rcl
ret
mov
pop
hlt
or
mov
outsb
in
cmp
or
cmp
imul
mov
dec
fwait
pop
jmp
sti
cmp
or
sbb
out
cmp
outsl
in
imul
insb
dec
mov
mov
mov
inc
repnz
int3
push
sub
xor
addr16
sarb
fidivl
pushf
fldt
cmp
xlat
jecxz
pop
in
xchg
and
shlb
ja
enter
inc
xchg
stos
xor
cmp
sub
add
cmp
les
fcoml
sub
cmpsl
mov
shll
xchg
mov
cmp
js
lock
cmp
jo
pop
xchg
mov
pushf
pushf
jnp
stos
jl
dec
adc
out
cld
and
pop
mov
inc
and
ljmp
inc
or
mov
dec
push
inc
popf
shlb
cmp
fistpl
and
cld
push
mov
fadd
les
mov
pushf
les
push
push
jo
sub
lock
aam
call
stos
ljmp
stos
jae
mov
mov
inc
sti
sub
cmp
adc
and
adc
add
jae
arpl
fmuls
fidivrs
lcall
jp
push
leave
pusha
mov
pop
test
test
jne
pop
rcrl
mov
icebp
stos
adc
jl
cmp
pop
lahf
pop
xchg
push
cmpsl
push
cmp
push
fimuls
sarl
loopne
stc
ret
sbb
sub
sti
cmp
or
sbb
in
cmp
or
sbb
imul
stos
insb
mov
pop
jmp
sti
cmp
or
sbb
in
cmp
or
sbb
imul
stos
insb
js
shrb
dec
les
xlat
pop
je
xor
jp
xchg
cmc
inc
sub
xlat
lret
xchg
inc
mov
cld
xchg
sbb
fstps
xchg
loopne
mov
push
inc
pushf
pop
push
mov
and
sbbl
sub
pop
xchg
and
dec
in
mov
xchg
pushf
jne
adc
mov
data16
mov
or
cwtl
mov
dec
inc
test
stos
cmp
loope
shll
or
adc
decl
adcb
add
mov
lea
cmp
push
data16
adc
adc
pop
sub
insl
popf
icebp
out
mov
inc
and
fxch
js
faddp
add
out
sub
jne
leave
mov
push
test
test
lret
cltd
cmp
and
jecxz
xchg
xchg
loop
mov
cmpsb
xor
in
scas
pop
jp
jge
imul
push
adc
xchg
push
fimuls
leave
push
cltd
in
mov
sub
pop
sbb
mov
aad
or
fwait
inc
lods
mov
xor
add
ffreep
lea
jecxz
mov
test
sti
das
movsb
imul
adc
adc
jmp
mov
ljmp
out
pop
ret
fists
push
insl
jecxz
sub
lods
xor
out
cmp
inc
inc
stos
add
adc
pop
xchg
jns
add
pop
outsb
push
dec
fadd
jmp
mov
or
cli
dec
outsl
loopne
jg
js
push
fwait
loope
mov
pop
adc
mov
or
test
mov
adc
lret
jmp
and
inc
dec
mov
sub
jp
sbb
pusha
sbb
push
insl
sti
mov
cltd
cmpb
data16
fcmovu
pop
add
add
loope
mov
xchg
or
or
les
mov
inc
pop
push
cmp
and
popf
sub
loop
add
lock
fsubl
or
popf
bound
inc
push
sahf
mov
std
cs
push
mov
les
pop
cwtl
dec
bound
stc
pop
jl
sub
fadd
mov
dec
inc
xchg
adc
mov
push
orl
push
adc
mov
int
cmp
sbb
fbstp
pop
add
and
mov
jp
das
sti
jp
ljmp
pop
shrl
jmp
add
out
or
mov
or
mov
adc
xchg
inc
rcr
bswap
dec
dec
add
rcrb
adc
rcrl
sahf
pop
test
insl
inc
pusha
mov
scas
mov
xor
repz
mov
sub
cmpsb
cltd
push
or
data16
mov
stos
mov
jo
outsl
adc
cs
lret
mov
push
leave
pop
shl
push
fwait
scas
pop
mov
cmp
stos
jg
adc
cmpsb
test
outsl
mov
dec
adc
cmpsb
inc
orl
and
aas
leave
dec
popa
jmp
fsubrs
je
fs
sarb
xor
jge,pt
scas
frstpm(287
dec
js
aam
idivl
les
adc
push
dec
xchg
sahf
sbbl
insl
insl
ja
lods
jne
outsl
lret
mov
jne
jo
sbb
fucompp
fisttpl
movsb
jg
xor
xor
mov
jno
pop
or
pop
push
fwait
pop
xor
push
out
xchg
adc
push
ljmp
ljmp
pusha
xchg
ljmp
lcall
push
out
push
push
xor
dec
inc
adc
push
hlt
inc
es
add
cmp
sub
repz
mov
jg
pop
mov
out
cmp
mov
xor
sbb
add
loope
lds
jmp
js
mov
fwait
xor
sub
mov
leave
mov
adc
fbld
mov
cmp
sahf
mov
mov
xchg
adc
and
or
test
jo
gs
fcomps
repnz
xchg
dec
dec
lods
pop
cmpsl
adc
bound
inc
dec
sarl
loop
das
push
push
xchg
xlat
jl
cwtl
push
push
mov
or
cli
pop
pop
pop
add
imul
loop
add
jb
pushl
lcall
stos
mov
stc
es
ret
or
cltd
mov
outsb
or
mov
mov
jmp
jge
cmpsb
push
fnstsw
inc
comiss
mov
mov
inc
inc
adc
stc
mov
shll
push
enter
xor
add
cmpsb
pop
mov
dec
mov
pop
jnp
iret
bound
or
push
cmc
jp
jae
int3
cld
shlb
xchg
fwait
sub
shr
mov
jle
lods
xchg
push
mov
jp
fidivl
loop
shll
idivl
mov
cld
jecxz
call
cmc
or
mov
in
pushf
push
push
cmpb
cmp
cmp
arpl
and
xor
xchg
adc
pop
out
sarb
ds
jl
cmp
jmp
gs
jno
leave
and
sbb
ret
mov
shl
jno
mov
shl
cmc
sbb
ror
imul
cmp
mov
push
mov
addb
mov
cmp
gs
or
and
sub
and
sbb
fs
inc
mov
popf
mov
sti
xor
fmuls
test
repnz
dec
nop
repnz
lret
scas
dec
push
ja
in
pop
lcall
int3
push
adc
and
in
xlat
mov
lock
repz
dec
inc
in
mov
ja
lcall
pop
je
push
xorl
push
ret
jmp
pop
inc
cld
push
adc
insl
pop
orl
jmp
add
stos
inc
push
sti
loopne
roll
cmp
clc
test
pop
rolb
xchg
scas
xchg
mov
jns
imul
bnd
lds
int
jmp
mov
mov
pop
cmp
movsb
add
call
subb
inc
leave
jg
das
stc
jno
cli
cmp
fwait
jns
in
loopne
mov
push
rcr
test
xchg
test
mov
dec
adc
test
ret
roll
daa
in
je
sbb
into
outsb
xchg
and
loop
arpl
and
inc
inc
out
ficoml
clc
mov
xor
mov
dec
ret
js
fmull
pop
mov
testb
xorb
sub
inc
pop
sbb
inc
in
mov
pop
hlt
and
mov
xchg
shll
fbld
sbb
loop
xor
xchg
test
idivl
pop
or
inc
mov
je
cmp
shll
call
add
dec
add
cmp
sub
mov
push
ds
jecxz
and
and
xor
lods
lret
xor
movsb
mov
xchg
ret
movsl
insb
add
jo
stos
int
outsb
cmpsl
push
jl
add
lds
ror
out
pop
pop
push
js
repnz
sub
pop
jmp
ss
push
pusha
lahf
sub
xchg
out
frstor
inc
shll
sahf
push
add
mov
es
in
adc
jb
sub
aad
push
add
fldl
movsl
sub
aas
xor
fisubrl
dec
cwtl
inc
push
cmp
inc
push
mov
inc
push
xlat
pop
insl
push
cld
mov
jns
inc
cmpl
pop
loop
push
inc
ret
pop
push
ret
mov
dec
lds
and
mov
lcall
dec
mov
scas
push
mov
adc
xor
aas
icebp
addr16
lods
push
pop
fs
xchg
and
cli
dec
negb
cmc
out
mov
pop
pop
shlb
outsl
xchg
setp
int3
adc
nop
mov
das
sahf
cwtl
push
dec
andb
dec
loop
jmpw
mov
push
cmpsb
push
cli
pop
test
cmc
daa
xchg
jg
xor
jmp
pop
sbb
shrl
inc
insl
jmp
and
jp
in
movsl
sub
pop
les
inc
xchg
cmp
push
aam
fistps
cmp
je
lods
jno
sub
cmp
adc
lahf
leave
mov
sub
popl
stos
pop
cmpsb
mov
lea
daa
pop
mov
pop
sahf
mov
idiv
or
push
jge
mov
sahf
movb
jecxz
sbb
jecxz
loop
ret
dec
xor
call
and
pop
icebp
inc
mov
cvtps2pd
jge
pop
frndint
cwtl
sub
ja
subb
dec
ss
cli
mov
mov
cmp
or
pop
int3
lock
and
add
inc
push
pusha
push
and
cmpsb
dec
popf
pop
clc
insb
popf
pop
sarl
jae
dec
or
dec
cmc
pusha
fdivs
xor
mov
push
repz
jmp
or
adc
jp
out
icebp
jmp
ss
xor
jp
or
mov
cmpsb
xchg
sbb
stc
jne
cmp
enter
push
pop
nop
fidivrs
popf
mov
jnp
ja
jp
lds
icebp
mov
add
movsl
mov
sbb
fldcw
mov
out
cmc
cmpsl
sub
jmp
dec
insl
call
fstps
das
popf
loopne
jmp
int
lret
mov
dec
jb
add
and
stos
jo
in
ret
push
fadd
jno
inc
mov
cmp
sub
adc
pusha
imulb
fiadds
push
push
sub
stos
repz
push
dec
pop
inc
xor
int
call
mov
arpl
movsl
push
fistps
cs
lcall
push
popf
scas
xchg
xchg
push
in
in
mov
leave
sub
push
jge
and
cmp
pop
adc
cmp
mov
adc
call
packssdw
add
cmp
mov
outsl
cmpsl
test
inc
xorb
frstors
loop
pusha
outsb
ret
jnp
mov
js
adc
cmp
inc
mov
adc
mov
daa
orb
in
cltd
imul
jno
inc
test
and
imul
xor
dec
cmc
xlat
pop
fnstcw
sarl
or
sbb
mov
push
mov
or
movsb
flds
clc
inc
push
loop
rclb
add
adc
lock
dec
rorb
push
add
add
or
shl
jmp
fisttpll
jecxz
out
push
mov
test
xor
pop
das
sti
in
sbb
xchg
rolb
push
and
add
mov
push
add
cltd
pop
sbb
shlb
mov
xor
les
mov
or
cs
leave
sub
sbb
stos
idiv
cmpsl
mov
adc
dec
outsl
mov
inc
sti
cld
popa
rclb
flds
add
imul
fmuls
mov
fsubl
or
ss
test
or
push
incl
push
cltd
call
sbb
push
push
mov
pop
call
movsl
mov
mov
sbb
into
fcmovu
adc
sarl
cmp
dec
popf
lret
in
mov
push
push
sbb
jge
lret
dec
inc
cmp
or
adc
xchg
cld
mov
hlt
sub
sub
sbb
and
scas
fucomp
test
mov
jne
rorl
fistl
insb
add
lock
or
test
add
fs
and
fwait
nop
scas
pop
shl
push
mov
and
mov
sbb
popf
push
dec
popf
sbb
mov
ss
std
movsl
mov
sbb
jl
or
insl
ljmp
mov
push
fxam
cmc
jl
mov
jmp
cmp
inc
add
mov
decl
adc
dec
imul
dec
cmpsl
mov
pop
and
aad
fnstcw
mov
push
lret
enter
ret
in
mov
imul
xchg
cli
jno
and
or
mov
cltd
mov
jb
hlt
sub
add
popa
dec
lods
lret
fisubrl
rcrb
push
cmp
xchg
mov
lret
push
pop
dec
sbb
push
int
sti
jg
lods
push
stos
repz
lcall
cwtl
jne
cmp
pop
out
mov
out
dec
and
sub
ret
out
rcll
cwtl
outsb
mov
notl
inc
or
cmc
mov
fwait
push
mov
jmp
outsb
insb
add
sub
ss
sub
test
pop
es
out
mov
stc
dec
and
int
adc
sbb
push
neg
push
fwait
dec
bound
testl
jmp
and
cmp
and
push
movsl
sub
icebp
jb
imul
mov
mov
push
icebp
in
push
dec
dec
outsb
sub
sbb
cli
jbe
pop
push
into
cmpsl
mov
jle
adc
inc
lahf
xchg
ret
mov
in
jecxz
lcall
lods
je
mov
in
loop
je
imul
cmp
andl
ja
xchg
pop
test
movsl
je
xchg
clc
bswap
addr16
movsb
bound
addb
fsts
add
sbb
inc
insb
add
cmp
lea
mov
mov
popa
mov
ret
mov
mov
aad
jo
nop
in
aad
mov
cmp
getsec
sub
inc
adcl
sbb
and
test
pop
stos
and
pop
cltd
cmp
daa
sti
fidivrl
out
lods
cmp
dec
dec
fisttps
push
idivb
sub
sub
mov
lods
push
mov
test
popa
dec
or
jl
and
pop
popf
dec
pop
inc
mov
in
adc
mov
inc
mov
mov
inc
mov
inc
pop
jbe
cmp
arpl
push
sub
jl
mov
insl
add
adc
or
pop
xor
rorb
loopne
js
and
xorl
movsl
mov
sub
push
in
imul
into
or
into
xor
popa
xor
mov
bound
pop
addr16
repnz
and
loop
mov
lcall
lret
sbb
xchg
push
fnsaves
popf
cmpsl
les
push
inc
xor
gs
mov
aad
cs
mov
fdivrs
mov
stc
mov
or
aam
fldl
loope
push
adc
icebp
inc
pop
popf
dec
and
pusha
sbb
fisubrl
ljmp
lahf
nop
add
frstor
mov
mov
divl
fiadds
mov
push
test
adc
mov
push
xor
aas
out
insl
jae
mov
sbb
cmpsb
jbe
loopne
insl
pop
daa
and
in
out
lret
xchg
lods
repz
or
sbb
jae
or
imul
pop
lods
xchg
daa
add
rcrl
cmp
jg
xlat
cmp
xor
std
insb
stc
aaa
arpl
mov
fsubl
roll
sub
push
scas
movsl
push
rcr
dec
jno
ljmp
mov
cmpl
jb
or
in
enter
inc
nop
mov
cmp
int3
sub
idivb
fcomi
push
adc
fildll
mov
or
sub
cmp
bswap
inc
inc
mov
loopne
dec
jl
push
sub
pop
cmp
and
call
inc
adc
test
lods
cmp
pop
clc
cs
add
lret
pop
repz
in
jmp
xchg
das
xchg
movsl
mov
notl
shl
and
add
lds
in
add
adc
xchg
pop
lock
xchg
outsl
pushf
and
pop
or
jge
mov
in
inc
lahf
adc
lcall
mov
insl
aam
pusha
orl
xchg
push
lcall
inc
jg
enter
mov
sbb
popf
arpl
inc
je
jno
scas
mov
xchg
cs
jbe
push
cs
pop
mov
pop
pop
cmpsl
pop
enter
dec
pop
shl
decb
cmp
orl
lahf
mov
xorb
sub
mov
mov
and
leave
sub
sti
and
mov
push
sub
cli
sub
sub
pop
sub
cs
shrl
xchg
loop
popa
jae
icebp
nop
mov
jno
scas
lock
cli
push
mov
pusha
pop
or
or
add
xor
nop
and
iret
insb
adc
sub
bound
imul
jne
and
jmp
out
fldenv
shl
xor
mov
push
add
movsb
xor
cmp
pop
ljmp
pop
or
pop
lods
jns
lahf
insl
and
xor
mov
test
push
push
push
test
lcall
iret
flds
xor
inc
push
fnstenv
jle
inc
lods
aas
dec
popa
cmp
sub
and
inc
in
dec
mov
pop
sbb
out
aas
mov
out
dec
dec
mov
cwtl
ljmp
cmp
clc
xor
cmpsl
xor
dec
sbb
dec
nop
xchg
xchg
ja
jbe
push
mov
mov
popf
mov
out
xchg
jmp
push
stos
nop
stc
dec
dec
scas
pop
ljmp
push
add
dec
lret
in
lret
icebp
movl
dec
mov
aaa
popf
or
mov
inc
movsb
pop
dec
out
inc
push
mov
lret
call
lods
push
es
sub
pop
mov
cmp
and
jp
pop
je
jae
in
addl
sub
mov
xchg
pop
in
xor
jno
fistpll
mov
into
jg
and
jb
lea
push
xor
leave
mov
cmp
or
pop
in
loopne
adc
gs
mov
cltd
mov
shr
cmc
jnp
mov
mov
ja
jle
jp
add
lock
sbb
pop
mov
ret
out
dec
imul
imul
call
test
scas
push
sub
dec
sub
es
sbbb
cmpsb
pop
test
jnp
xchg
clc
sbb
fistpll
jmp
push
imul
dec
idiv
push
in
pop
mov
ss
xor
pop
arpl
arpl
rol
jae
add
shll
out
jns
mov
std
fistpll
out
adc
inc
cltd
xor
push
or
ds
out
std
incl
mov
cmovns
push
jns
stc
adc
xchg
inc
pop
adc
fwait
jno
xlat
and
test
pusha
mov
jmp
inc
pop
mov
dec
stos
adc
ds
bound
add
cwtl
fwait
mov
jg
push
xor
sbb
pop
dec
cli
pop
stc
xchg
mov
sub
aad
pop
mov
mov
mov
inc
iret
pop
leave
scas
loopne
mov
xor
push
jo
imul
mov
push
cmp
mov
dec
in
mov
push
and
rorl
aad
cmc
cli
add
lock
push
xor
ret
adc
jmp
push
cmpsb
xchg
fwait
fs
or
es
out
outsl
xchg
inc
mov
push
jae
and
inc
fadds
lcall
out
out
in
adc
mov
outsb
lea
loope
pop
shll
dec
xlat
nop
jmp
leave
mov
sbb
notl
ja
or
cmp
dec
mov
and
fsts
pop
push
or
mov
mov
mov
int
aas
sbb
push
mov
or
pop
fcmovnbe
stc
out
mov
mov
imul
test
dec
jo
mov
mulb
rcrb
mov
call
jl,pt
jecxz
lods
cmp
mov
xor
xlat
in
and
imul
cmp
fldcw
jae
aam
std
pop
in
adc
and
outsl
mov
mov
xor
xchg
std
dec
data16
test
notl
adc
rol
ret
mov
mov
pop
cmp
out
or
nop
movl
push
cmp
je
pop
in
std
add
jg
mov
lods
mov
int3
stos
gs
push
stc
mov
pop
lcall
push
dec
fisubrs
jle
scas
push
std
mov
cmp
adc
pusha
mov
mov
ret
ss
insl
stc
out
lahf
cmp
jae
in
mov
nop
xchg
movsl
jge
insb
push
pop
imul
push
shld
sub
call
shll
fwait
push
lods
and
in
jle
cmpsb
ret
mov
xlat
xchg
scas
icebp
nop
rcll
test
les
jo
dec
adc
lret
enter
test
jmp
xchg
ret
cs
cmc
inc
push
push
mov
pop
icebp
pop
cmp
push
fldcw
imul
jbe
fidivrs
mov
inc
incl
sti
or
fmul
ljmp
push
stc
test
add
int3
jo
xchg
jecxz
cmp
pop
or
inc
pop
scas
test
pop
and
pop
jg
or
inc
cmp
pushf
and
cmpsb
push
ljmp
and
mov
jl
mov
sti
cmp
or
sbb
in
cmp
or
sbb
imul
stos
insb
mov
pop
jmp
sti
cmp
or
sbb
in
cmp
or
sbb
imul
stos
insb
mov
pop
jmp
sti
cmp
or
sbb
in
cmp
bswap
sbb
imul
lahf
insb
jl
dec
fwait
pop
jmp
sti
cmp
or
sbb
in
les
int3
sbb
mov
movsb
arpl
sub
cmp
les
lcall
pop
fisubrl
jnp
mov
fwait
sbb
dec
fistpl
push
add
mov
lcall
pop
fisubrl
jnp
mov
fwait
sbb
dec
fistpl
push
jp
mov
mov
and
adc
push
fadds
cmp
loope
icebp
leave
imul
ret
dec
lret
cmp
pop
jbe
mov
loopne
or
cmpsb
mov
dec
adc
test
arpl
cmp
inc
lret
cltd
adc
pop
aam
push
ljmp
mov
fldl
cmp
jmp
xchg
test
jne
cmpsb
cs
and
loopne
sti
je
out
dec
sarl
jo
rcl
ljmp
cmp
mov
mov
outsb
add
mov
jp
dec
sbb
pop
fwait
jno
rcll
scas
ja
pop
mov
adc
aad
fwait
sbb
dec
fistpl
push
jp
mov
lcall
pop
fisubrl
jnp
int
repnz
into
sub
cmp
sub
cs
repz
fwait
dec
iret
push
into
mov
mov
mov
jg
dec
fidivrs
lea
mov
jmp
sti
push
outsb
rcrl
push
jle
movsb
pand
mov
call
pop
mov
pop
jmp
sti
jp
mov
lcall
pop
fisubrl
jnp
mov
fwait
sbb
dec
fistpl
push
jp
mov
lcall
pop
fisubrl
jnp
mov
jb,pt
lahf
clc
adc
ja
push
in
cmp
insb
add
adc
pop
stos
push
loop
add
imul
inc
test
gs
cmpsb
fimuls
sbb
les
cld
repz
repz
pop
aaa
and
push
jmp
cmpsb
in
add
movsl
fwait
movsb
xor
cltd
pop
fiaddl
fldt
jb
sub
pushf
inc
ja
dec
inc
push
addr16
scas
push
xchg
dec
aad
sbb
mov
fstpt
lds
hlt
or
add
jae
int3
mov
dec
popf
inc
adcl
inc
jmp
clc
lret
push
dec
jb
dec
std
mov
fmuls
in
leave
mov
mov
das
std
mov
mov
fldenv
clc
scas
cltd
dec
bound
imul
fsubl
sub
out
xor
pop
scas
lcall
cmp
inc
inc
mov
cmc
gs
mov
ret
arpl
inc
jne
shl
push
push
jns
push
jno
fimull
stc
or
mov
adc
jne
pop
sbb
in
add
imul
lods
jnp
fisttpll
xor
xchg
jge
frstor
pop
ret
ss
in
cmp
add
lret
lock
adc
ja
ja
iret
frstor
mov
cmp
cli
enter
and
gs
jno
mov
call
mov
in
and
inc
push
movsl
push
sar
pusha
in
scas
sti
jo
and
lahf
ja
movsb
adc
repnz
mov
sbb
xchg
addb
mov
ret
xchg
push
sbbl
outsb
fs
ret
jo
mull
loope
and
pop
fcmove
mov
mov
fisubs
shrl
bound
pop
mov
jp
jecxz
lock
dec
add
mov
xchg
push
stos
stos
xchg
sbb
fiaddl
and
sbb
cmc
xor
sbb
inc
test
aas
xor
jmp
add
mov
adc
daa
scas
pushl
pop
and
dec
int3
push
cmp
shr
nop
pushl
divl
popa
mov
iret
push
or
xchg
imul
pop
insl
das
sbb
cmpsw
repnz
ds
push
or
pop
push
jp
pop
loopne
sti
sub
cmp
mov
out
push
xlat
mov
mov
mov
lods
pusha
cmpsb
ret
sub
pop
xchg
mov
pop
ss
pop
fistps
dec
aas
push
push
in
adcb
push
in
add
dec
and
sub
mov
lods
mov
icebp
sub
inc
mov
fwait
prefetcht0
lcall
fcmovnu
sub
fdivr
xor
pushf
adc
dec
xchg
lods
xchg
scas
and
stc
dec
enter
test
push
xchg
dec
sbb
mov
add
pop
push
jbe
adc
jnp
pop
mov
adc
sub
lret
mov
ljmp
xor
gs
mov
and
sbb
loope
test
adc
out
mov
mov
out
cli
pushf
nop
jmp
call
stos
out
rclb
scas
rcl
jo
aas
mov
rorb
and
aaa
mov
dec
movsb
data16
fdivl
repz
imul
dec
sbb
jo
sahf
adc
sub
mov
mov
shlb
int3
mov
xchg
sbb
mov
jns
clc
push
inc
inc
mov
cmp
and
sub
fdivr
insb
jg
setg
dec
push
sub
adc
sets
shr
out
rcll
fimull
test
cld
jae
push
out
fdivl
pop
xchg
lret
negb
sbb
lods
fstpl
mov
in
xchg
push
pop
in
test
imul
push
mov
ret
sbb
cmp
push
std
insl
stos
mov
adc
addr16
push
shl
mov
ss
shlb
aad
into
inc
pop
adc
inc
shlb
add
inc
mov
popa
mov
mov
ficomps
out
and
jno
add
stos
inc
cmpsl
daa
add
repz
and
out
or
push
pop
cli
adc
xor
dec
out
pop
pusha
repnz
pop
push
sub
popf
js
scas
pop
adc
out
popa
xchg
cltd
lret
repz
xor
lock
cmp
sarb
sub
imul
dec
je
arpl
shr
ret
iret
inc
mov
out
insl
clc
jmp
sarl
div
addr16
push
and
sbb
or
repnz
xchg
scas
lahf
push
rclb
xor
cmpsl
xchg
subb
test
or
lock
pop
inc
sbb
cmp
sub
das
mov
icebp
aad
jo
mov
push
pop
test
popf
or
and
xor
enter
xlat
cmc
and
scas
mov
mov
or
mov
mov
xchg
sahf
test
xchg
push
push
mov
popf
push
push
test
push
rcrb
scas
jl
sbb
push
adc
push
inc
jle
sub
iret
cmc
or
and
push
dec
lret
into
jbe
jg
test
sbb
add
pop
bound
mov
push
inc
xchg
inc
imul
shll
ficoms
pop
lods
or
jns
pop
sbb
fcmovnbe
sub
xor
mov
repnz
xchg
lcall
push
std
mov
pop
fisubrs
mov
imul
lahf
xor
pushf
imul
push
pop
int3
lahf
es
test
bound
sub
enter
and
stos
lock
push
stos
loope
scas
into
xor
lock
add
fwait
or
and
or
jmp
xor
xchg
into
pusha
out
andl
inc
mov
repnz
sbb
push
dec
lods
jo
rorb
or
and
or
ss
addl
push
jmp
adc
int
mov
push
push
lret
mov
push
push
loope
popa
nop
divb
addr16
lock
dec
mov
lret
jg
sbb
arpl
jno
fisubs
movsl
movmskps
ret
dec
into
xchg
ss
pop
and
adc
adc
or
out
bound
jnp
add
and
dec
xchg
mov
roll
scas
inc
xchg
pop
add
lods
in
pop
iret
mov
out
jmp
and
cmp
std
dec
xchg
sarl
cwtl
sub
leave
lods
dec
arpl
xchg
jmp
mov
cmp
test
lcall
xchg
in
xor
scas
out
sbb
mov
std
xor
int
ror
in
mov
sarl
clc
div
lods
daa
or
or
sub
sbb
aad
testb
enter
inc
or
hlt
scas
into
sub
into
lock
mov
jge
push
jl
add
mov
and
mov
push
pop
fmull
jo
inc
out
insb
jne
fisubl
xchg
inc
inc
pop
xor
ja
or
lds
insb
mov
pusha
test
dec
push
or
daa
jmp
mov
cwtl
out
adc
lahf
xlat
jno
popa
aad
sbb
jb
cmp
xchg
sahf
mov
mov
xchg
pop
mov
add
mov
push
cmp
mov
sbb
cs
jb
daa
repz
jecxz
lcall
subb
xchg
fidivs
dec
jmp
push
cld
addl
add
sbb
pop
lret
cltd
movsl
cmpsl
movsb
mov
fdivrs
sbbb
mov
scas
je
mov
aam
xor
mov
shl
setnp
shll
stc
inc
sub
mov
mov
adc
cwtl
pop
movsb
push
dec
xlat
daa
lret
inc
dec
loop
xchg
fs
jne
xor
dec
mov
mov
sbb
xchg
pop
pop
int3
pop
ffree
mov
mov
imul
sbb
das
push
stos
add
std
xchg
out
inc
sub
fsubl
push
and
jne
movsb
or
xchg
cltd
in
aas
dec
lock
loop
and
push
fmull
mov
imul
and
inc
xchg
sti
pusha
mov
add
sub
sbb
loopne
jmp
push
repz
jns
mov
cwtl
jl
scas
xor
or
lret
int3
jmp
sbb
mov
mov
divb
fwait
push
cmpsl
cmpl
stos
mov
jb
pop
cmpsl
sbb
jbe
repnz
hlt
cltd
lret
lgs
orb
divl
dec
pop
push
aam
lods
cwtl
jne
loope
lahf
movsb
and
fnsave
sub
pop
dec
mov
gs
subb
cmpsb
xor
fs
mov
jge
test
in
push
jg
sbb
sbb
and
push
or
call
sub
iret
inc
mov
mov
int3
xor
mov
rcrb
jae
test
out
mov
test
fidivrl
out
add
and
mov
lds
mov
aas
push
xor
cmp
dec
jp
lret
push
add
push
and
insb
and
sub
je
ss
test
addl
stos
into
cs
pop
jbe
jne
js
imul
jmp
xlat
lret
in
js
scas
clc
pop
stos
push
push
pop
pop
dec
mov
adc
fistpll
daa
jp
iret
cmpsb
cmc
push
fcomi
pushf
insb
mov
shrb
lcall
std
fisubrl
in
idiv
cmpsl
test
dec
int3
dec
mov
inc
scas
sbb
test
xchg
pop
mov
test
popf
cmp
aad
pop
mov
adc
inc
sarl
ja
test
inc
or
rorb
pop
in
dec
fstl
test
sbb
or
fwait
lahf
stc
mov
es
daa
push
or
pop
mov
stos
aas
in
sbb
xchg
xchg
jl
xchg
popa
jmp
imul
mov
add
js
subb
cmp
and
jno
dec
sub
push
xchg
sahf
inc
or
sbb
in
inc
jnp
cs
aam
push
wrmsr
in
xchg
jne
mov
imul
sbb
push
push
setae
lret
inc
subl
insb
inc
sti
jle
sahf
sub
mov
add
push
mov
popa
lods
movl
jno
pop
mov
xor
xchg
dec
sub
cltd
andl
out
ficoms
enter
outsb
lret
inc
push
bound
sbb
in
xchg
arpl
push
pushf
hlt
add
xlat
or
sbb
adc
ljmp
imul
dec
lret
adc
shll
xchg
inc
jns
cmpsl
push
dec
gs
xchg
pop
jl
push
addl
xor
jp
jno
fcomps
inc
les
mov
sbb
jp
inc
mov
sbb
pop
sbb
dec
jmp
or
ja
das
jg
dec
mov
aaa
sbb
mov
sbbb
xor
cld
xchg
in
mov
and
mov
cld
fistpll
pop
xchg
jae
mov
cld
xchg
cmp
nop
je
int
sbb
out
sti
mov
mov
dec
push
add
mov
aas
push
gs
repnz
push
xor
adc
ror
out
cmpsb
xchg
ljmp
inc
and
inc
or
loope
xlat
out
enter
std
pop
mov
push
arpl
add
xchg
pop
leave
pusha
sbb
sub
jno
adc
outsl
out
xor
sub
popa
xchg
shll
insl
dec
mov
loopne
lret
and
jp
or
stc
mov
dec
push
int3
push
adc
pushf
fmull
lret
or
cmp
aad
testl
dec
xor
call
adc
mov
in
push
sbb
dec
ret
cmpsb
andl
test
sub
fadds
cmp
ret
or
xchg
gs
sbb
jns
adc
pop
xor
jae
push
push
pop
aam
loopne
add
insb
push
ja
repz
and
mov
iret
jb,pt
push
pop
shll
cs
fidivrl
and
jmp
sbb
or
push
loope
test
scas
mov
je
pop
cld
pop
mov
and
inc
cmpsl
ret
dec
cltd
cli
loope
push
clc
cs
fsubrl
push
or
push
dec
aad
rcrl
or
mul
add
repnz
ljmp
adc
filds
lret
adcl
jp
pop
pusha
jg
push
inc
popf
and
aas
int3
jnp
jb
cmp
or
mov
pushf
cmp
daa
sbb
addl
xlat
inc
std
mov
inc
add
movsb
add
scas
popa
xchg
test
dec
cmp
jmp
or
je
hlt
scas
enter
xor
push
dec
aad
dec
negl
imul
je
es
pop
lcall
repz
test
pop
int3
sti
stos
or
scas
cltd
cmp
and
jmp
adc
hlt
fucomi
insb
nop
inc
int
out
or
push
notb
stos
cmpsb
imul
pop
inc
movsl
xchg
cmp
ljmp
test
lods
popf
or
mov
mov
sub
xor
mov
dec
out
xchg
hlt
cmp
cmp
xor
push
test
rolb
pusha
and
push
aaa
scas
dec
iret
fldl
pop
dec
or
mov
sub
mul
xchg
sub
shlb
js
or
xchg
in
pop
push
nop
rclb
stc
enter
in
jmp
fnstsw
sub
in
cmp
bound
idivl
call
iret
push
lahf
pop
inc
icebp
fisubrs
daa
or
push
pop
xchg
and
loop
push
test
clc
dec
loope
gs
mov
xchg
dec
mov
lods
lock
mov
mov
xchg
les
mov
jle
mov
dec
add
pop
cmp
pop
and
int3
pop
xor
fwait
dec
ret
aam
cmp
cmpsl
cpuid
dec
jle
in
and
je
repnz
mov
cmp
jne
loop
and
push
cmpb
je
movsb
sub
faddl
jp
jns
je
sub
mov
lahf
sarl
stc
add
aad
push
std
add
mov
repz
imul
jp
out
pop
fldt
fldt
shll
mov
cmp
cs
xchg
stos
push
pop
mov
inc
stos
stos
jl
ds
shlb
or
hlt
push
dec
in
jecxz
sarb
pushf
fwait
in
sub
mov
lret
pushf
int3
pop
jle
arpl
dec
mov
mov
jg
mov
and
test
push
jo
nop
loope
inc
inc
inc
pop
aas
lea
inc
mov
fcomi
mov
out
into
fsub
jp
and
andl
sub
xchg
les
inc
ror
or
ret
xor
push
mov
xor
cmpsb
iret
push
add
dec
ret
sub
enter
pop
test
and
enter
das
es
vdivps
mov
mov
gs
ds
xchg
pop
shlb
popl
cltd
stc
jp
mov
pop
or
incl
enter
arpl
fxch
stc
and
stc
test
jno
mov
add
mov
adc
ss
jae
fwait
sub
loope
jecxz
mov
aas
xor
jbe
out
cmpsb
mov
data16
movsl
cmp
add
cmp
aam
jle
inc
dec
mov
dec
repnz
push
es
sbb
clc
xlat
cmp
repz
cmp
fstl
sarl
data16
cmp
xlat
js
imul
push
test
push
aas
push
add
outsb
mov
insl
mov
push
aas
pop
inc
dec
cmpsb
xchg
repnz
aas
fldcw
cmpl
sub
lods
mov
rcrb
sar
jae
cbtw
stc
jge
bound
xchg
adc
scas
dec
mov
mov
sub
stos
adc
adc
outsb
call
int3
lahf
in
xchg
jle
dec
xchg
push
push
sbb
mov
push
mov
jb
xor
pop
movsb
sub
call
outsb
fnsave
add
adc
push
mov
and
popf
push
sub
push
adc
out
xchg
incb
addr16
jmp
jmp
add
out
flds
sub
insb
inc
fwait
sbb
push
pop
cmpsl
movhps
mov
or
push
inc
xchg
push
iret
imul
jp
jno
adc
or
and
or
lock
lods
cmp
xor
inc
jg
test
movsb
enter
subl
jbe
ret
jl
jns
push
cmp
js
test
call
jp
ljmp
pop
out
stc
add
shlb
and
cs
jge
push
adc
dec
add
xchg
popa
and
fistpl
fucomi
mov
jle
mov
jle
cmp
cmpsb
mov
and
insl
nop
dec
repz
sub
push
cmpsb
stos
pushf
pop
jg
jno
mov
push
mov
icebp
add
cli
scas
jp
sub
aam
mov
and
and
jo
jmp
mov
dec
push
cmp
outsl
clc
pop
mov
mov
xlat
mov
mov
xchg
cmp
test
iret
nop
scas
xchg
inc
mov
pop
imul
in
nop
inc
testl
push
jmp
out
lods
cmp
jae
mov
jno
jecxz
xchg
les
pop
cld
xor
enter
mov
inc
jl
jp
dec
insl
mov
cmp
xor
push
and
test
outsb
movsb
sub
mov
cmp
push
sub
call
or
and
jbe
mov
fiadds
les
add
test
cmp
pop
loopne
dec
jno
add
cmp
fbstp
sbb
xor
incl
lret
inc
ret
daa
cmpsl
in
daa
test
les
jmp
xchg
cmp
cmpsl
in
lret
test
lods
jp
pop
stc
mov
cmc
add
and
ds
popf
xor
or
add
or
xor
dec
je
pop
xchg
cmp
mov
test
and
jg
lods
mov
hlt
inc
aaa
int
and
inc
cmp
mov
push
aam
ficoml
test
cmp
inc
in
insb
outsb
pop
lret
xchg
cmp
dec
cmp
xchg
jg
jmp
mov
xor
add
push
int3
test
jmp
add
clc
push
ds
sub
push
fwait
cmp
lcall
jmp
cmp
les
loopne
cmp
pop
push
rolb
negb
pop
sbb
insb
sub
lods
fiadds
inc
dec
sbb
and
fcmovne
cmp
or
insl
andb
xchg
fwait
test
xchg
movsl
xchg
fxch
sarb
adc
jno
push
mov
ss
mov
pop
daa
aaa
adc
mov
xor
push
mov
and
mov
xchg
mov
repz
mov
sbb
test
push
adc
lret
lods
mov
cmpl
mov
xchg
inc
mov
jns
lcall
cmp
push
add
cmp
or
dec
sub
out
mov
mov
xlat
insl
cmpsl
jmp
jbe
dec
rcrb
addb
in
cmp
cmp
pop
cmpsl
sbb
jg
sub
repz
fs
rcrl
jae
in
enter
subb
js
cmp
dec
adc
xchg
sbb
stc
add
mull
cwtl
cmp
dec
rclb
inc
xlat
subl
inc
jecxz
sahf
sbb
mov
or
aam
je
das
push
push
and
cmp
aam
sti
daa
lcall
push
cwtl
and
push
add
sbb
in
idivb
lret
cs
arpl
je
pop
ret
inc
adc
sbb
dec
insb
test
dec
out
add
jg
mov
pop
and
and
sub
mov
or
shl
mov
sbb
inc
xchg
dec
dec
mov
aad
mov
out
and
sbb
aas
sbb
dec
repnz
push
fwait
mov
sub
repnz
add
mov
daa
rolb
xchg
into
scas
dec
push
jns
pop
mov
adc
arpl
jmp
and
add
fs
ret
lahf
or
fs
cmc
stos
sahf
xchg
mov
clc
jno
mov
xor
nop
jecxz
inc
push
bound
adc
mov
dec
and
enter
lahf
jnp
mov
in
mov
into
out
add
ljmp
inc
xchg
adc
xchg
xchg
nop
lret
cld
decb
add
xor
cmp
mov
pop
jmp
sti
jp
mov
lcall
pop
fisubrl
jnp
mov
fwait
sbb
dec
fistpl
push
jp
mov
lcall
pop
fisubrl
jnp
mov
fwait
sbb
dec
fistpl
push
jp
mov
lcall
pop
fisubrl
jnp
mov
fwait
sbb
dec
fistpl
push
jp
mov
xor
inc
shll
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
jecxz
or
cmp
lods
ljmp
insb
lahf
pushf
mov
fmul
into
out
cld
out
in
push
sbb
or
cmp
sub
pop
dec
sarb
sbb
mov
dec
mov
pop
or
xchg
ss
pusha
push
jo
xchg
outsb
je
inc
lods
out
loope
mov
in
ja
popa
bound
dec
pop
jns
imul
pusha
test
ss
jle
in
and
inc
es
icebp
sbb
je
dec
mov
cmp
sbb
push
mov
std
adc
sbb
push
je
fisubrl
or
cld
xor
cmp
cld
pop
fcompl
sbb
sub
xchg
mov
xchg
adc
mov
and
into
xor
out
mov
mov
into
test
xor
sahf
iret
dec
pushf
mov
into
int
in
adc
fsubr
mov
sub
dec
iret
lea
nop
popa
pushf
add
ret
inc
mov
fstpl
push
ds
pop
dec
jle
ja
xchg
xchg
dec
cmpsb
lods
mov
lock
xor
cld
out
xorb
or
jg
add
adc
loop
int
lret
mov
mov
jno
outsl
dec
push
pop
pop
or
xor
jle
cmp
fidivrl
mov
xchg
bound
insb
inc
dec
push
cmp
jle
outsb
insb
sahf
pushf
mov
fmul
int3
cld
out
in
push
sbb
or
cmp
sub
pop
dec
dec
jle
outsb
insb
sahf
pushf
mov
fmul
int3
cld
out
in
push
sbb
fildl
lds
jl
stos
daa
mov
fidivl
fdivl
pop
faddp
icebp
inc
ja
es
mov
shrl
push
jecxz
pushf
jecxz
ja
adc
pusha
test
mov
mov
ret
lahf
popa
inc
and
jp
enter
lods
daa
adc
shlb
dec
icebp
insb
sbb
mov
mov
shlb
add
pop
add
or
inc
sub
das
push
fdivs
push
cmp
aaa
lahf
adc
js
and
dec
fmuls
xor
aaa
bound
mov
int
push
repz
inc
cmp
adc
enter
inc
outsl
jnp
iret
insb
dec
pop
cs
ret
inc
cmc
outsl
mov
adc
test
gs
or
jmp
add
cltd
lahf
or
sub
je
ret
jae
or
test
cmp
das
mov
xor
fmull
repnz
mov
mov
repnz
cmp
je,pn
inc
push
sub
out
pop
jle
jp
adc
repnz
ja
mov
int3
sub
ret
cmp
cli
inc
add
mov
push
cmp
loopne
xchg
pushf
mov
xchg
inc
cmp
pop
adc
mov
mov
xchg
loop
mov
xchg
and
pop
inc
addb
cmc
movsl
xchg
shlb
pop
sahf
xchg
xchg
sbb
les
pop
mov
iret
repz
aam
mov
lcall
sti
jnp
je
insb
sarl
xor
push
lea
lret
sub
jo
mov
xor
jmp
mov
push
inc
data16
dec
pop
out
adc
or
pop
pop
imul
ret
imul
cld
sti
ret
leave
repnz
and
jge
mov
xchg
push
loop
sub
cmp
jne
mov
sub
pop
ja
jecxz
insb
maxps
outsl
mov
mov
mov
mov
dec
incl
icebp
rcrb
rolb
mov
gs
add
rclb
pop
cmp
nop
pop
add
in
push
inc
xchg
js
sub
xchg
mov
and
cmp
shll
mov
hlt
loopne
ret
mov
out
jp
lock
loope
daa
and
or
mov
jg
or
mov
cmpsb
fs
ret
xchg
sub
mov
or
jb
jmp
pop
push
mov
sbb
push
push
push
mov
xchg
mov
es
fisubrs
adc
inc
sbb
ljmp
dec
filds
sub
fistl
lret
es
fdivs
dec
popa
cmpsl
push
movsb
sub
xchg
xchg
pop
jb
xchg
fisttps
in
sub
mov
jmp
icebp
jmp
fildl
dec
out
pop
mov
dec
fsubs
out
xchg
sub
push
sarl
and
imul
lret
bswap
pop
sbb
mov
mov
sahf
and
inc
dec
xor
cmp
es
add
pop
push
test
xchg
and
adc
lods
out
inc
outsl
fnstenv
jmp
addl
cmp
outsl
mov
sbb
leave
mov
inc
or
mov
shll
xchg
push
loop
inc
fidivrs
pop
test
adc
jecxz
rolb
jle
push
add
pop
xchg
icebp
mov
js
adc
adc
aad
in
call
push
leave
jbe
out
icebp
push
std
lds
mov
imul
icebp
outsb
pop
inc
fcoml
out
rcll
rcrb
les
mov
pop
pop
imul
push
sbb
dec
mov
cmp
out
pusha
xor
add
jg
cld
mov
and
dec
cmp
jns
sbb
in
mov
push
les
cmp
dec
fbstp
inc
ficompl
jne
sub
nop
mov
and
in
xor
sbb
es
bound
sbb
jne
pop
cmp
test
stos
xchg
daa
fcmovbe
push
ja
ret
cmp
xchg
adc
in
insb
mov
sarl
push
pop
or
xchg
mov
call
inc
adc
add
and
cmp
inc
gs
or
movsb
or
cld
cmc
mov
loop
push
lret
lods
je
fs
int3
cmpsb
xor
push
jno
and
inc
icebp
ds
pop
dec
xor
or
cmp
add
sub
aam
ret
push
fsts
addr16
xor
aaa
and
pusha
xor
jb
mov
stos
xor
nop
test
lgdtl
fstp
pusha
aas
sahf
lods
sti
out
jb
filds
shrl
inc
adc
movsb
ljmp
insl
fcoml
xchg
cli
mov
je
mov
inc
lahf
adc
jns
push
push
std
jge
in
and
sbb
clc
test
in
pop
pusha
xor
pop
test
out
cmc
cli
cwtl
and
push
cltd
jo
in
js
les
into
push
out
out
or
shl
sahf
cld
push
popf
mov
mov
mov
int3
dec
imul
fcomi
inc
cmp
mov
mov
lcall
test
add
sbb
les
into
sub
lahf
mov
xchg
push
or
clc
mov
mov
pop
outsb
iret
cli
inc
cwtl
pop
add
hlt
pop
cld
mov
movsl
cmp
cwtl
mov
mov
test
mov
add
push
jmp
xchg
cmc
mov
andb
pop
mov
xchg
inc
cld
mov
ret
les
jnp
outsb
cmp
lods
cmp
xchg
mov
mov
cmp
rcr
ja
gs
mov
jg
dec
inc
insb
adc
leave
test
lahf
xchg
mov
enter
icebp
xchg
out
pop
cltd
out
jge
out
icebp
repz
stc
xchg
inc
out
lods
bound
ja
and
loope
stos
push
mov
sub
outsl
mov
dec
mov
bound
jbe
dec
inc
mov
in
loop
mov
popa
sbb
mov
ror
fiadds
dec
cmp
lods
fsqrt
push
or
repnz
hlt
insb
insb
cmpsb
pop
ljmp
imul
xchg
test
mov
cld
frstor
sub
mov
inc
enter
or
adc
xchg
aad
fcom
adc
dec
loopne
popa
imul
test
getsec
inc
ljmp
popa
testl
mov
shlb
mov
cmp
lea
lret
mov
or
jp
fcomip
cld
icebp
repz
stos
shlb
sbb
cmp
mov
mov
insb
out
shrl
sbb
shll
push
mov
cmc
mov
push
je
fmuls
cmp
icebp
mov
sbb
cmpsl
inc
xchg
lret
inc
in
cmp
jecxz
and
xchg
sahf
mov
jecxz
adc
daa
xchg
xchg
and
fucomp
xor
out
push
cmp
insl
add
add
shrb
movsb
test
xor
push
dec
xchg
mov
adcb
bound
inc
stc
adc
aad
loop
scas
js
rorl
add
adc
enter
vpmacssdql
iret
movsb
fildll
fiaddl
and
pop
mov
sub
mov
inc
leave
jge
sub
insl
push
fistpll
addl
ss
dec
ret
add
cmp
sbb
cmp
add
je
fwait
cmp
popa
shr
sub
mov
mov
out
adc
inc
push
loopne
insl
ret
inc
mov
imulb
mov
pop
adcb
xchg
mov
sbb
inc
cltd
and
sbb
ds
int
sbb
push
ret
adc
adc
xchg
cmp
push
mov
jno
rcll
stc
out
cmp
js
sub
jo
jae
mov
fidivs
mov
dec
data16
mov
outsb
mov
cmp
mov
add
cltd
sbb
or
jg
adc
mov
ret
test
sub
imul
mov
xor
lods
sub
mov
mov
dec
mov
sub
iret
xchg
inc
les
iret
xchg
divb
mov
push
xchg
lcall
cmpsl
or
or
ret
jp
cmp
add
add
and
inc
mov
or
lods
push
std
dec
inc
rcrb
pop
inc
pop
repz
push
cmp
xchg
add
dec
and
inc
fmuls
imul
divl
mov
add
xchg
popa
es
add
test
fsubp
sbb
rorl
dec
cmp
movsl
ljmpw
repnz
ret
aam
pop
inc
pop
push
out
dec
mov
adc
fildl
add
pop
add
ret
sahf
adc
adc
aaa
decl
mov
ret
mov
shlb
jo
mov
mov
pushf
imul
or
test
pusha
scas
inc
add
popa
cmpsb
cli
jne
test
adc
xchg
sarb
jne
inc
mov
push
and
xor
mov
adc
jae
xchg
sbb
bound
xchg
icebp
sarl
dec
rcrl
les
or
sbb
mov
push
xor
dec
add
leave
dec
jb
xchg
push
test
in
pusha
xchg
xchg
fildll
xor
adc
js
push
mov
cs
or
in
out
sub
xlat
sub
fcoml
mov
jmp
incb
inc
mov
jns
shl
push
imul
lock
cmc
mov
cmp
cmpsb
mov
mov
repz
es
pusha
cmpsl
insb
lcall
in
push
xor
xor
push
pop
es
add
cwtl
sarl
pop
xor
pop
ret
loop
add
lods
lods
inc
fnstcw
repnz
loop
dec
mov
les
pop
in
movsl
mov
mov
decb
sub
dec
add
sub
test
imul
inc
mov
fistps
cmp
daa
xor
fs
lcall
int3
and
mov
push
xchg
push
pop
add
mov
pop
loopne
and
dec
loop
jge
add
or
enter
sbb
inc
fsubrp
pop
fs
int
xchg
in
sbb
adc
dec
aad
or
subb
dec
push
push
push
std
loop
jno
iret
sti
stc
inc
and
add
stc
pop
sub
xor
cld
ss
mov
call
scas
jnp
adc
xchg
loope
xlat
arpl
inc
jo
movsb
add
pop
popf
mov
lret
adc
add
popf
insb
dec
iret
push
outsb
inc
data16
pslld
cmp
daa
fsubrl
les
and
pop
sub
mov
push
roll
mov
jnp
dec
pop
int3
mov
and
imul
lea
xchg
add
mov
stos
mov
jmp
fnstsw
rorl
pop
add
out
pop
sub
rcll
jae
add
jo
in
aas
aaa
xchg
jne
clc
movsb
daa
adc
sbb
enter
dec
push
pop
adcb
jmp
sub
cmpsb
in
sub
imul
pop
add
sbb
fcom
in
arpl
in
cmp
into
adc
lds
adc
aad
add
xor
data16
xchg
clc
cmp
lock
inc
sub
mov
cmpsl
sub
mov
mov
adc
popl
xor
adc
ret
mov
rolb
in
sbb
sbb
sbb
pop
or
into
adc
cmpsb
jl
int
cmp
ret
cmp
adc
cmp
jl
mov
inc
mov
push
sbbb
inc
in
dec
imul
roll
ljmp
lahf
fildl
pop
cmp
push
ret
xchg
andl
mov
dec
ret
or
pop
sbb
cltd
mov
xchg
jno
lcall
lcall
jne
imul
inc
cmp
mov
ljmp
xchg
jo
or
push
push
add
push
hlt
lea
xor
adcl
xchg
les
shll
setle
pop
pop
or
push
dec
in
push
in
notl
mov
sub
cmp
pop
pop
fdivl
inc
push
jno
mov
scas
test
test
adc
icebp
daa
cmp
xchg
sub
out
jns
sub
sti
les
jp
jle
pop
gs
shl
adcb
outsb
clc
ja
mov
xchg
imul
pop
sbb
push
bound
dec
mov
cmpb
xor
xchg
test
ja
aas
aam
out
aaa
cmpsb
call
ret
mov
inc
xchg
je
xchg
orb
jbe
inc
bound
adc
repnz
add
negl
push
mov
xchg
fs
dec
filds
outsb
ret
arpl
cltd
or
pop
in
push
mov
jae
xor
aad
sbb
test
add
div
sbb
or
cmpl
fcmovnbe
jl
push
and
xlat
push
imulb
shrb
ret
or
inc
mov
pop
insl
lcall
jae
mov
test
fcmovb
ds
pushl
mov
cmc
movsl
cmpsb
aad
mov
sbbb
adc
mov
inc
sub
dec
jno
int
cmp
out
imul
inc
jae
in
shlb
pop
lods
and
xor
sbb
jle
iret
loope
sub
xchg
sub
mov
ljmp
repz
and
jp
mov
cmp
jmp
scas
and
mov
outsb
pop
call
call
mov
xchg
add
xchg
sti
sbbb
outsl
stos
mov
bound
enter
jge
pop
lret
lahf
xchg
mov
iret
loopne
ret
pop
xor
adc
testl
jns
push
xchg
mov
lds
lret
cmp
dec
dec
inc
fldz
sub
mov
cmp
mov
or
xor
mov
jae
out
xchg
inc
xor
jecxz
lahf
cmp
imul
gs
mov
sbb
pop
sbb
inc
movsl
stos
xchg
add
adc
pusha
cmc
out
stos
mov
mov
or
repnz
xor
adc
mov
orl
fstps
xor
cmpsl
gs
jp
decb
lret
pop
repnz
inc
fs
mov
movsl
and
or
dec
xchg
icebp
jb
mov
out
addr16
pop
in
test
add
add
jo
leave
cld
or
mov
lahf
lret
dec
cmp
push
sbbb
add
subl
add
ret
jle
inc
mov
sbb
push
fmul
sahf
sub
adc
roll
and
push
sbb
sub
mov
test
aad
jne
stos
dec
ret
push
or
aad
data16
sub
xor
jb
push
or
xchg
mov
lods
sbb
and
push
mov
data16
popf
or
mov
nop
mov
push
cmp
push
push
xchg
dec
and
mov
or
fidivrl
mov
push
movsb
shrb
pop
dec
aad
cmp
leave
jmp
or
addb
push
mov
push
dec
mov
hlt
mov
imul
adc
sbb
pop
fsubrl
aas
es
out
lods
ret
push
add
push
adc
xchg
iretw
xor
repnz
add
jnp
cmp
add
pop
or
mov
dec
popa
popa
outsl
push
and
adcb
notb
mov
lods
adc
out
mov
bound
cwtl
push
out
loop
test
cltd
push
pop
pop
jnp
xor
add
out
sub
adc
and
shlb
fcoms
sbb
mov
or
mov
in
xor
sbb
sbb
dec
hlt
lret
mov
adc
jle
mov
jmp
cmp
xor
mov
sarl
mov
adc
push
out
in
in
jle
cwtl
push
mov
sahf
lret
push
adc
arpl
insl
jle
stos
sti
sub
lea
mov
push
js
cmp
fsubl
jecxz
fnstsw
lret
in
and
push
orb
mov
pop
adc
xor
cs
pusha
mov
xchg
dec
orb
popf
outsb
out
loop
mov
imul
mov
cmp
adc
xor
and
stos
divl
fstpl
cwtl
cmp
push
mov
lea
cmpsl
movsl
flds
fwait
lds
xor
and
out
sti
icebp
jo
or
rol
pop
gs
mov
loope
das
sub
xor
mov
lds
and
pusha
cmpsl
rclb
out
hlt
ficomps
fmul
xlat
jp
imul
jle
scas
shr
inc
arpl
pop
push
and
mov
int3
sti
xor
pop
pop
fs
adc
pop
and
or
cwtl
mov
jle
cmpsb
mov
xchg
pop
sub
leave
das
mov
push
les
cmp
xchg
push
xchg
lock
bound
fldenv
xchg
cmp
mov
mov
push
pusha
and
cs
dec
insl
or
jne
inc
repnz
loopne
adc
call
push
stos
or
jns
mov
jmp
test
or
xorl
add
movsb
mov
sub
xor
insl
mov
dec
xor
das
mov
call
ret
mov
mov
sbb
jno
xchg
lahf
jmp
jg
push
or
inc
cmp
ja
cmpsb
sub
mov
pop
in
out
push
push
stc
sbbb
cld
or
js
lds
fdivr
xor
jne
aas
lret
pushf
jl
mov
fcmovu
das
mov
pop
stc
adc
cmpsl
mov
sub
xor
imul
sbb
push
jp
and
sbb
sahf
xor
pop
iret
xorl
jns
outsl
clc
lock
push
cmp
pop
gs
stc
insl
shll
or
and
sub
filds
xchg
inc
popa
jmp
lods
inc
xchg
test
adc
pop
dec
add
notl
bound
pop
outsl
dec
push
add
cmpsl
fiadds
aad
das
sub
dec
sub
cwtd
sbb
imul
jae
ret
sbb
and
pop
adc
and
aas
mov
in
inc
in
pop
jp
mov
lods
gs
cmp
sbbl
loopne
cmpsl
loop
sub
sbb
pushf
loope
test
xchg
insb
cmp
enter
push
cmp
mov
nop
adc
push
sub
stos
sti
adc
jne
cltd
mov
test
repnz
or
lods
xor
shlb
aam
mov
mov
push
popa
dec
in
leave
rep
pusha
andl
ret
adc
pop
dec
out
pop
cwtl
dec
popl
pop
fs
push
lret
inc
inc
adc
pop
jecxz
mov
jl
dec
je
inc
jns
mov
idivl
iret
inc
cmp
aaa
test
dec
xchg
int
shrb
lcall
xchg
in
sub
push
xchg
inc
fcomi
push
fwait
inc
sbb
xchg
sarl
movsl
loop
mov
xchg
push
aas
cli
mul
ljmp
sbb
in
pushf
mov
adc
fs
out
mov
int3
inc
push
rcrl
pop
pop
xchg
jno
das
pusha
mov
adc
loope
adc
loopne
xchg
pop
outsl
lahf
mov
xor
inc
xlat
or
lods
push
xor
sbb
sbb
mov
jl
fs
lret
aas
dec
and
aam
and
aas
mov
or
xchg
mov
mov
pop
push
shll
leave
rolb
out
shlb
mov
and
or
jecxz
sbb
decl
xor
js
out
xor
xchg
pop
daa
xor
ret
cmp
pop
popa
fcoms
das
jnp
and
xchg
in
ja
mov
jnp
jg
pop
sub
xchg
pop
les
mov
aam
jecxz
mov
lea
add
dec
lcall
inc
sbb
pop
or
mov
xor
mov
push
jb
xchg
inc
das
mov
jno
dec
lock
push
cs
pop
dec
dec
jle
outsb
insb
sahf
pushf
mov
fmul
int3
cld
out
in
push
sbb
or
cmp
sub
pop
dec
dec
jle
outsb
insb
sahf
pushf
mov
fmul
int3
cld
out
in
push
sbb
inc
ds
cs
pop
dec
in
jl
insb
sahf
inc
mov
fmul
int3
fsubr
in
push
sbb
or
cmp
sub
cld
out
insb
popa
arpl
adc
scas
fldt
add
adc
jb
inc
mov
inc
mov
scas
xor
adc
xor
mov
andb
push
xorl
and
xor
add
adc
mov
xor
jno
cwtl
orb
fcoms
sbb
adc
xchg
shll
stos
pop
mov
leave
push
shlb
int
loope
les
or
adc
add
push
movsl
fcmovnb
pop
popf
and
mov
xchg
mov
ret
loope
mov
and
incb
into
pop
and
jb
sbb
inc
out
jmp
jae
or
and
dec
ror
mov
imul
dec
popa
scas
xor
fistps
outsb
cmpsl
pop
mov
sar
adc
repnz
inc
fisubrs
pop
jge
aam
sahf
xchg
popa
popf
add
outsb
bound
mov
cltd
ret
out
ret
mov
inc
mov
jp
sahf
hlt
popf
jle
in
pop
lods
cmp
dec
daa
mov
dec
fisubs
into
das
imul
ja
xchg
and
inc
mov
dec
roll
loope
call
mov
loop
ljmp
jo
addl
aam
ret
pop
mov
lea
xchg
loop
mov
push
shlb
push
jmp
negl
xor
xor
dec
rcll
xchg
inc
ret
test
je
inc
stos
xor
xor
push
jmp
roll
and
add
jno
xor
add
adc
loop
repnz
and
xor
popa
xchg
jno
xorl
and
xor
add
adc
loop
repnz
and
xor
popa
xchg
jno
adc
mov
dec
fimull
das
mov
mov
stc
data16
mov
xchg
pop
sub
in
sbb
pop
push
push
xchg
les
daa
or
inc
and
add
gs
popf
xchg
sar
out
out
pop
rsqrtps
repnz
fstpt
insl
adc
cmpsb
dec
push
in
insb
aaa
mov
imul
daa
inc
pop
fs
push
mov
inc
lds
out
mov
ret
addl
mov
sub
xor
mov
mov
jb
push
fmuls
call
dec
aaa
repz
jg
in
inc
push
xchg
mov
mov
and
mov
pop
push
xchg
std
sbb
ret
loopne
pusha
xor
in
sbb
inc
jmp
push
int
cmp
sub
mov
sbb
jbe
inc
test
or
cmc
test
mov
add
cmp
sub
lds
fiaddl
sahf
jmp
aad
cmpsb
pop
scas
sahf
xchg
ljmp
fwait
aam
mov
repz
push
xchg
jnp
cmp
clc
daa
add
jae
pop
fldcw
inc
ror
lahf
addr16
jbe
adc
inc
mov
and
pop
lods
or
jmp
and
mov
movsl
cs
mov
inc
mov
adc
xchg
xchg
mov
scas
jae
mov
shr
pop
hlt
sub
insl
mov
mov
setp
add
xor
sub
cmpsb
leave
xor
sbb
add
in
xchg
xorb
inc
or
fidivrs
adc
push
orb
cmp
cltd
xor
xchg
sbb
push
mov
mov
adc
adc
and
std
mov
out
push
call
and
jg
and
sbb
push
mov
out
leave
xchg
insl
iret
iret
fldt
adc
and
inc
sub
jge
pop
in
dec
lods
repz
push
in
cmp
dec
dec
sbb
xchg
fwait
inc
outsl
push
push
scas
jg
cmp
dec
push
sbb
mov
dec
cmp
hlt
jbe
add
sub
cmp
aam
lret
js
and
movsl
iret
mov
int3
dec
adc
mov
pusha
outsl
ja
mov
or
jns
sub
out
jns
mov
inc
xchg
sti
push
idivb
ret
push
cmp
xor
mov
test
mov
movsl
push
mov
dec
push
fsubrl
fwait
mov
xchg
pusha
xlat
out
addr16
cs
pop
cmc
insb
xor
add
push
cmp
ret
repnz
xor
cmp
mov
in
clc
sbb
ljmp
xchg
pusha
shrb
mov
inc
lock
xchg
ja
test
dec
jp
or
fisubl
movl
pop
xor
shlb
xchg
je
repz
loope,pt
adc
in
sbb
pop
mov
xor
stos
dec
stos
adc
ss
std
repnz
sbb
movsb
xor
sbb
jl
fdivrl
outsb
xor
std
xor
loopne
mov
and
clc
jl
out
sub
es
shrl
pop
push
mov
xor
cld
mov
jae
in
sbb
or
jmp
in
add
cs
pushf
pop
mov
fs
rcrl
insb
sti
dec
test
mov
pop
mov
cli
in
dec
out
scas
push
shld
xlat
loop
pop
lock
inc
lret
in
xchg
imul
sbb
std
xor
mov
mov
in
cmp
mov
fldl2t
adc
jl
loop
xchg
sub
jecxz
add
dec
out
lods
push
insl
jg
mov
rcll
iret
mov
outsb
sbb
gs
dec
fsts
vcvttsd2si
clc
xor
pop
imul
mov
fs
nop
xlat
cmp
jmp
aaa
mov
jns
addb
or
lret
mov
loopne
add
pop
mov
and
out
add
jne
push
aaa
pop
rcl
pop
xchg
mov
push
fadds
xchg
xchg
xchg
xor
or
and
ret
inc
aas
fld
outsl
mov
pusha
mov
dec
in
repz
cmp
cmp
arpl
int
aas
mov
fcoms
jmp
sub
mov
fwait
iret
pushf
inc
cmp
andb
sub
ds
mov
out
aas
push
adc
inc
sarb
andb
or
fstpt
int
dec
dec
cmpsl
xchg
sub
fists
inc
popf
mov
addl
sub
sahf
pushf
jns
outsl
cmp
inc
sbb
pop
mov
hlt
dec
aam
loop
int3
ljmp
jg
mov
lret
fcmovne
or
test
mov
mov
fmulp
push
mov
sbb
sub
test
xchg
fistpll
sbb
cs
sub
pusha
pop
mov
push
dec
pop
push
scas
sbb
aam
mov
dec
pop
flds
cs
rcrl
in
xchg
inc
push
call
mov
mov
or
add
loopne
mov
push
xchg
mov
out
or
rol
scas
xchg
mov
add
adc
aas
iret
xchg
xor
mov
clc
xor
fs
pushf
jne
sbb
test
lahf
xchg
pop
mov
jae
out
hlt
or
sbbb
pop
sbbb
in
data16
cmp
pop
bswap
movsl
icebp
mov
test
mov
cmpsl
leave
push
sahf
imul
push
cmp
jp
adc
jbe
sbb
call
loopne
mov
cmp
jo
sbb
mov
xchg
adc
pop
movsl
ret
xchg
inc
scas
sub
lds
hlt
rcr
jp
mov
lahf
pop
mov
std
rorb
mov
adc
jge
jmp
lcall
push
dec
mov
imul
push
les
loop
lcall
mov
adc
adc
or
rcrl
jnp
xlat
xor
shlb
lcall
shll
add
les
pop
pusha
inc
push
dec
sar
and
sbb
insl
ljmp
repz
and
xorb
add
and
sub
xchg
bound
dec
out
cmp
xlat
shlb
lods
inc
push
lea
cmp
gs
sti
mov
test
fisttpl
enter
int3
inc
dec
mov
sub
leave
lock
cwtl
incb
mov
jo
mov
sbb
xlat
push
ret
ljmp
mov
mov
sub
dec
dec
mov
push
xchg
and
mov
dec
ret
shlb
or
stc
push
xchg
dec
xchg
or
int
xchg
cmp
out
mov
cmp
rcr
adc
mov
pop
and
mov
loopne
sbb
call
xchg
sbb
push
movsb
rolb
ret
dec
aas
and
fwait
test
aam
mov
xchg
movsl
add
aad
adc
fmulp
sar
call
mov
pop
add
add
mov
jmp
subb
jne
lret
sbb
outsb
xor
cmp
sub
cmp
push
out
mov
mov
add
xchg
xchg
imulb
andb
shll
inc
push
mov
out
push
adc
add
mov
sahf
sub
jmp
lcall
test
sub
and
xchg
mov
adc
xchg
push
movsb
pop
out
mov
mov
mov
insb
nop
in
and
std
mov
cs
pop
and
cmpl
add
or
lret
jmp
rclb
scas
fsubrs
adc
lahf
dec
iret
add
repz
jb
xchg
mov
call
icebp
push
int3
inc
adc
jae
rcr
xor
outsb
xchg
mov
jne
and
mov
mov
bound
jne
fsubrl
cmp
inc
adc
push
rcrl
sarl
in
data16
mov
scas
cli
mov
int
scas
in
in
out
icebp
xor
push
xor
fisubs
popf
cmp
push
mov
movsl
movsb
mov
es
mov
shlb
inc
sub
inc
inc
int
fs
loop
lcall
sbb
mov
and
mov
jle
loopne
cmp
sub
or
not
repz
sbb
or
ljmp
imul
mov
andl
insl
mov
insl
cmp
fwait
xor
bound
mov
cwtl
sti
dec
push
inc
in
jmp
or
mov
lods
outsb
mov
jp
mov
xor
out
and
lret
fucomi
lea
jns
cmp
cs
dec
shrb
xchg
imul
jmp
dec
lret
lds
adc
jmp
fnsetpm(287
inc
lret
bound
mov
and
cmp
lods
lods
ror
stos
cmp
mov
sub
adc
fidivl
inc
and
xchg
cwtl
aad
cmp
push
cmc
adc
jne
js
pand
js
jmp
fdivrl
ret
lahf
sbb
data16
hlt
mov
pop
cwtl
mov
add
sub
sub
push
xchg
in
and
or
and
loopne
fwait
xchg
sbb
imul
lds
fcom
outsb
jno
aaa
dec
pop
enter
mov
and
lahf
sub
or
repnz
lret
in
sarl
sub
clc
ficomps
cs
icebp
mov
push
loop
adc
inc
daa
xlat
pop
je
out
outsl
movb
jecxz
and
jmp
and
xor
adc
pop
xchg
fildl
mov
rolb
add
inc
cmc
mov
loopne
jle
mov
int
sub
aad
jmp
mov
cltd
mov
ret
stos
das
pop
stos
pop
jo
and
fwait
std
inc
xor
pushf
fimull
push
lea
push
lcall
stos
adc
in
mov
popf
pop
loope
xchg
rcll
xchg
pop
xchg
push
push
push
mov
scas
or
lahf
jbe
stos
cwtl
inc
push
lods
adc
pushf
ljmp
push
mov
inc
dec
in
std
xchg
bound
jle
mov
outsl
jae
xor
jb
lea
repnz
inc
sbb
sarl
and
movsl
ret
pop
inc
dec
xor
jmp
mov
in
mov
out
push
ja
daa
int3
mov
in
addr16
les
outsb
fs
daa
sahf
jle
xor
push
or
int
pop
popa
ljmp
jne
repz
popf
fisubrs
xchg
mov
push
jg
loop
mov
mov
jecxz
jge
dec
stos
push
and
pop
mull
cmp
popf
mov
test
inc
sub
mov
daa
inc
dec
scas
inc
mov
jle
pop
sti
mov
stc
mov
or
mov
jns
test
push
nop
bound
mov
cmp
out
pop
xor
pop
sti
divb
inc
leave
cltd
mov
cmp
notl
daa
loopne
sbb
mov
in
ds
enter
mulb
test
and
mov
xchg
dec
sub
clc
rcr
cmp
das
adc
fs
jo
repnz
pop
les
jecxz
push
in
dec
fbstp
fdivr
daa
push
sbb
adc
mov
aam
cmc
mov
cmc
cmp
psrad
sub
mov
sbb
sarl
mov
cmp
frstor
push
cmp
jno
push
jmp
cmc
sub
cwtl
les
jb
je
cmpsl
or
rorb
loopne
mov
inc
fldt
sarl
dec
and
dec
push
rcrl
and
sub
ficoml
nop
cld
iret
jb
lock
pop
int3
aas
xchg
imul
push
inc
sahf
mov
loopne
adc
xor
shlb
push
lods
or
mov
mov
inc
push
pop
pusha
adc
jg
jae
add
xor
dec
movsb
mov
outsl
xchg
sbb
aaa
push
sbb
pop
in
leave
lds
lods
ds
out
inc
inc
pop
mov
mov
jbe
and
adc
mov
and
mov
aaa
cwtl
push
sub
add
out
ljmp
out
es
lret
mov
movsb
and
filds
dec
int3
std
lahf
lret
loop
jg
ficoml
jne
push
dec
and
inc
fs
push
aad
iret
shlb
dec
ljmp
jle
xchg
out
leave
les
jl
add
das
shrb
repnz
jno
mov
sbb
inc
cmpsb
xchg
out
push
data16
je
enter
or
into
fsubrl
cmp
insl
and
test
push
jo
adc
jne
clc
mov
push
nop
add
sub
and
loope
xchg
movsb
inc
fnstsw
les
jle
fdivs
cmp
lahf
bound
cltd
sub
xrelease
push
ja
out
xor
fsubl
ljmp
addr16
rcrl
mov
xor
imul
mov
std
es
dec
jne
in
push
jmp
mov
gs
cmpl
int
push
jns
pop
iret
push
cwtl
jmp
sahf
dec
fcmovnbe
cmc
xor
inc
push
div
roll
jmp
jmp
xchg
xchg
inc
je
mov
pop
cmp
insb
cmp
inc
pop
inc
cmp
inc
or
xchg
lods
repnz
xor
push
pop
imul
add
inc
inc
add
sub
push
ss
cmovns
roll
adc
outsb
shlb
sbb
fadds
cmpsl
mov
test
aaa
add
mov
test
lea
movsl
pop
pop
jle
jmp
popa
daa
iret
add
ret
mov
mov
sbb
add
cmp
and
stc
pop
jge
fiaddl
xorw
mov
fimuls
push
add
and
mov
cmpsb
in
shll
mov
out
cmpb
add
rcrl
out
test
cmc
mov
mov
sub
fidivrs
jle
mov
inc
sbb
pmaxsw
xlat
add
in
push
sbb
lock
fs
mov
sub
sbb
inc
pop
mov
inc
out
insl
mov
fisubs
mov
xchg
jl
xchg
push
mov
iret
pop
int3
add
jmp
nop
fdiv
in
addb
mov
ret
lret
scas
or
sub
std
xlat
adc
sahf
dec
addr16
cmc
dec
mov
pop
wbinvd
cs
shlb
repnz
pop
jb
test
fstps
aam
pop
xchg
fmuls
push
xor
lcall
nop
cwtl
cmp
ror
and
push
jnp
les
addr16
xchg
sub
lcall
loope
icebp
inc
ret
std
push
push
pop
andb
adc
pop
pop
ljmp
jl
arpl
test
jbe
lahf
movsb
inc
sbb
inc
and
decl
dec
xor
push
out
mov
dec
sbb
inc
push
mov
addl
adc
incl
scas
stos
push
push
fcoms
mov
xchg
inc
test
or
div
add
daa
push
scas
mov
mov
fidivl
dec
jle
iret
sbb
mov
inc
xchg
and
push
pop
mov
jb
aam
jnp
nop
lods
mov
rclb
xor
js
jns
inc
dec
mov
inc
pop
aaa
or
mov
xlat
bound
jge
mov
rolb
pushf
pop
stc
adc
push
cmpsl
outsl
pcmpgtw
mov
jmp
pop
shrb
sbb
cmpsb
pop
dec
or
push
aaa
jp
sahf
xor
cld
mov
or
mov
ret
xchg
mov
test
jno
and
aaa
mov
icebp
and
test
xchg
or
lods
inc
or
in
mov
pop
fisubrs
mov
into
in
push
out
mov
stos
les
mov
and
add
leave
jae
add
dec
fwait
push
dec
ret
rolb
clc
lret
add
inc
pop
loopne
xlat
outsb
add
xchg
mov
addr16
push
jbe
push
lahf
inc
arpl
ja
repnz
add
adc
test
fildl
lds
mov
add
jge
and
mov
push
add
stos
es
xchg
mov
adc
xor
in
mov
push
dec
addb
add
pop
negb
divl
in
mov
inc
sub
jo
cmp
mov
ljmp
and
inc
sbb
cltd
das
or
ss
imulb
lea
fcoml
dec
xorl
insl
lods
les
jg
cmpsl
inc
jecxz
mov
inc
orl
or
lahf
jne
js
push
data16
inc
testl
mov
leave
mov
cmp
mov
pop
outsl
sbb
jle
or
cmp
movsb
jb
xchg
scas
inc
std
gs
jne
cmp
cld
sar
jnp
inc
or
cmpsl
jg
sahf
fsubl
inc
push
loop
sahf
nop
add
lcall
imul
dec
and
inc
or
and
adc
movb
mov
imul
xor
sbb
mov
add
xchg
mov
dec
inc
aaa
sbb
sub
mov
xor
adc
popf
shll
adc
xlat
popf
out
xor
scas
xor
sbb
clc
or
js
mov
repnz
loop
mov
add
push
dec
xor
mov
shl
adc
or
nop
test
push
cmpb
outsl
xor
test
xchg
cmpsb
stos
flds
repnz
and
lock
xor
adc
xchg
sub
push
int3
push
mov
repz
adc
mov
lock
cmpsl
ss
sub
inc
pop
loopne
add
ljmp
sub
pop
in
xor
aas
and
ss
cmpsb
xlat
adc
dec
jp
xorl
mov
adc
adc
int
push
movsb
mov
lods
pop
test
stos
jmp
mov
stc
xchg
out
in
rolb
push
pop
cmp
mov
xor
divl
xchg
ljmp
into
mov
lcall
in
adc
iret
jg
jnp
clc
add
xor
push
push
push
jg,pn
and
pop
mov
push
jecxz
mov
roll
jmp
sbb
jb
es
stc
sahf
jecxz
mov
ret
notb
sbb
xlat
adc
sbb
lds
inc
mov
je
sub
mov
push
stc
leave
imull
mov
or
punpcklbw
ljmp
cmp
mov
in
andb
dec
or
fisttps
cmp
xlat
aaa
aam
or
ret
or
data16
icebp
pushf
mov
fisubrl
dec
cmp
cmpsb
cmpsb
lret
or
pop
push
jp
sub
inc
and
push
xor
fisttpll
iret
jg
push
ss
push
aad
dec
and
pusha
jo
lods
fidivrl
fsubr
sbb
es
or
jns
mov
mov
cld
shrl
push
jae
ljmp
adc
lcall
cld
jbe
popa
adcl
cmp
jo
xor
push
stos
push
sarb
mov
add
das
loope
int
fists
mov
add
stos
test
pop
mov
jmp
xor
fwait
enter
mov
xchg
sub
pop
xor
dec
and
sub
shl
icebp
inc
int3
push
or
mov
lods
xchg
jnp
sub
fcmovne
dec
inc
xchg
pop
mov
push
pushf
or
aas
js
ljmp
sub
addl
shl
pop
pop
dec
addl
adc
pop
bound
aam
bound
loope
inc
stos
push
or
les
shlb
lods
mov
daa
out
push
adc
lret
cmp
or
cmc
addr16
gs
hlt
xor
sbb
xor
dec
nop
pop
scas
and
add
das
ret
sub
ret
repnz
fidivl
xorb
push
add
cmpsl
push
repz
sub
pop
arpl
inc
fstps
adc
es
push
xor
stos
fldcw
cli
sub
daa
adc
mov
adc
arpl
fmul
sbb
sub
std
lret
loop
pop
mov
fwait
mov
lods
lea
pop
mov
add
jmp
mov
sbb
repz
aam
popa
push
cmp
call
jp
je
and
psllw
js
cltd
loope
popf
loope
and
sbb
hlt
pop
and
jge
out
pop
or
sbb
ljmp
jg
sahf
and
rclb
mov
addl
xchg
add
fisubrs
push
cs
sub
xor
cmp
adc
repnz
bnd
ljmp
lret
scas
cmc
add
push
call
lcall
mov
push
mov
shll
add
adc
loop
repnz
and
xor
popa
xchg
jno
xorl
and
xor
add
adc
loop
repnz
and
xor
popa
xchg
jno
addl
mov
xor
add
shl
loop
repnz
and
xor
andb
jbe
cs
sbb
and
add
xchg
xor
add
inc
aad
cmp
jge
insl
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
in
stos
fimull
inc
mov
add
popa
lret
fildl
add
add
add
add
pop
add
jg
pop
add
add
add
add
add
add
jle
add
dec
add
int
add
add
add
add
popf
add
jle
add
add
add
add
and
dec
add
add
add
mov
inc
add
add
add
add
aas
add
add
inc
add
inc
add
add
add
add
add
add
add
add
or
sbb
mov
add
pushf
add
aaa
add
add
add
add
pop
add
add
xchg
add
add
add
or
jle
cmp
add
add
add
add
add
add
add
add
add
add
add
add
addl
xchg
add
addb
add
sbb
add
add
movsb
add
cmpsl
add
add
add
add
dec
add
add
add
add
add
add
add
add
mov
mov
add
add
add
add
mov
addl
ljmp
add
add
cmpsb
add
mov
add
add
add
add
add
add
add
add
add
add
fiaddl
pop
add
xlat
add
dec
add
add
add
add
add
add
add
add
sti
add
out
add
xchg
add
add
add
add
add
add
add
add
add
add
push
add
add
mov
cltd
add
add
add
add
sub
jne
push
add
add
add
add
nop
add
add
addl
add
add
lea
add
mov
test
add
into
add
test
add
add
mov
add
popf
add
push
add
movb
add
add
add
addl
inc
add
add
add
add
add
in
hlt
add
add
add
add
mov
add
add
and
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
inc
add
movl
mov
add
add
add
add
hlt
add
cmp
ret
add
add
add
add
add
xor
or
int
and
mov
add
jl
push
add
lret
add
add
mov
add
add
add
add
add
add
add
add
add
adc
iret
add
movsb
add
add
nop
add
add
cmp
addl
add
and
add
add
add
add
add
or
add
add
add
mov
mov
mov
add
push
add
add
add
add
adc
lea
lea
ja
aaa
add
add
add
incl
push
add
pop
add
add
add
add
add
add
jp
push
inc
rclb
aam
in
ja
inc
cmp
jmp
or
aam
pop
nop
imul
fs
or
ljmp
xor
ficomps
cmp
jl
inc
adc
mov
pop
dec
ret
stos
mov
sti
cwtl
mov
pop
add
mov
jns
das
das
test
lock
neg
sar
outsb
and
das
pushf
xchg
shrb
es
dec
iret
push
ds
cmp
jo
fimuls
pop
subb
mov
inc
sub
loopne
jle
pop
mov
xor
popf
out
push
lcall
js
in
pop
fistpll
stc
push
mov
bswap
xchg
fstps
mov
shrl
mov
sar
adc
mov
pop
sbb
xor
ret
mov
inc
call
pop
adc
pop
jns
ret
xchg
aam
lods
inc
arpl
std
outsb
clc
rolb
pop
rolb
hlt
in
jns
and
sub
hlt
fildll
cmp
gs
and
cmpsb
mov
jmp
xchg
aad
ret
mov
and
test
mov
mov
pushf
sahf
rorl
pop
mov
add
clc
jge
sub
ds
and
sbb
push
insb
dec
sbb
mov
mov
sub
pop
push
mov
sbb
vpminub
iret
fs
mov
mov
cmpsb
dec
mov
inc
xor
rolb
cmpsb
mov
jle
daa
lcall
jb
pop
mov
fmul
xchg
jnp
adc
mov
dec
and
pop
fcmove
xor
mov
xor
test
pushl
sub
stos
sbb
das
out
mov
cmpsl
xor
and
adc
cmc
sub
nop
cmp
or
popf
icebp
dec
dec
pop
fsts
in
jo
add
mov
sbb
repnz
in
mov
jbe
ss
je
ss
mov
sahf
push
popl
repz
xlat
imul
xor
std
lret
sbb
add
inc
add
repz
out
adcl
push
in
psubq
pushf
lds
and
mov
add
addb
xchg
repz
inc
or
fstp
movsb
call
outsb
into
inc
and
jbe
xchg
ds
cmpsb
fildl
leave
mov
push
xlat
mov
imul
hlt
mov
jns
test
jl
jle
dec
adc
repnz
fidivs
push
test
ds
or
and
stc
inc
push
in
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
