call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
push
pop
jmp
add
pop
mov
jns
gs
dec
decb
cmp
or
pop
jmp
push
mov
ds
jnp
imul
sbb
jmp
push
mov
ds
into
lcall
out
std
inc
loopne
rorb
pop
stc
pop
sbbb
push
jo
pop
lds
repnz
es
lods
pop
add
in
push
lds
xor
and
stc
lock
mov
inc
inc
mov
aad
cmpsb
xchg
lods
push
out
pop
push
in
shlb
cld
mov
adc
xchg
int3
sub
sub
out
or
test
stc
push
cltd
push
imul
sub
xchg
arpl
not
scas
xchg
mov
or
inc
sub
leave
aas
mov
hlt
and
sbb
dec
add
movsb
dec
sbb
or
fstps
dec
shll
mov
push
dec
mov
pop
scas
out
sbb
stc
pop
outsb
leave
jle
push
mov
ds
into
popa
fidivs
inc
push
mov
sahf
ds
sbb
jmp
out
push
dec
cmc
jg
adc
adc
push
idivl
sbb
fs
subl
dec
lret
cs
ds
add
or
dec
lret
jne
insb
daa
mov
jg
push
aad
test
into
jns
imul
cmp
or
pop
jmp
push
mov
ds
jns
imul
cmp
or
sti
outsb
aad
pop
fcmovbe
test
popa
cmpsl
out
test
inc
pop
inc
das
add
daa
jge
fistl
fcmovbe
sbb
sbb
or
js
test
jge
jbe
dec
push
push
mov
jecxz
dec
push
mov
add
mov
cmp
shrb
mov
cmp
mov
push
fdivs
es
jl
adc
pop
cmp
pop
adc
fwait
in
sub
jge
in
lods
pop
or
outsl
sahf
push
aas
sahf
mov
fs
iret
ja
cmpsl
xor
mov
or
mov
cmp
mov
or
xor
sub
lods
push
and
addr16
adc
scas
and
ss
push
cmp
jnp
mov
rorb
mov
push
js
lret
cmp
mov
shlb
nop
mov
push
cmp
mov
insb
out
outsl
cwtl
fsubs
rcrb
push
int3
sbb
dec
sbb
mov
jmp
mov
jecxz
mov
ret
sub
imul
adc
xor
in
mov
flds
cmpl
sarb
stc
pop
out
xchg
xor
shll
pop
daa
mov
pusha
lock
addr16
mov
add
mov
push
jb
mov
rorl
cmp
mov
popf
js
mov
mov
cmp
lods
mov
sub
xor
mov
lods
icebp
sbb
and
repz
cmp
cld
jp
adc
xchg
pop
push
movsb
cmp
shrb
rolb
xchg
push
dec
adc
mov
and
or
inc
out
sub
les
leave
jae
sbb
fsubrp
jne
ret
rcll
mov
or
sbb
out
push
dec
xchg
push
mov
imul
scas
cwtl
loopne
pop
shrl
sbb
or
imul
popf
mov
or
push
add
mov
fs
sbb
lret
jge
dec
nop
pop
jo
stc
movsb
ss
jl
insb
aam
lods
lock
adc
or
addr16
nopl
add
cmp
sub
mov
sub
jne
fs
data16
popl
pop
outsl
lds
or
mov
ss
xlat
or
xchg
sbb
movsl
pop
pop
fwait
mov
loopne
inc
inc
add
xor
lret
cmp
fcmovne
or
sub
sbb
cmpsl
es
shlb
add
into
xchg
sub
enter
rcrb
sub
ds
pop
pop
and
std
orb
sub
es
aad
cwtl
loop
sahf
test
mov
fistpl
fs
pop
lret
inc
cmp
push
xchg
jle
pop
xor
cld
pop
mov
adc
ret
aaa
test
or
into
mov
fsubrl
xchg
jno
movsb
mov
dec
dec
or
addl
shl
roll
sbbb
scas
lds
pop
mov
mov
clc
or
cmp
pop
movsl
adc
lds
dec
repnz
fmul
push
dec
out
adc
mov
pop
jbe
xlat
mov
mov
imull
loopne
pop
sub
xchg
jbe
shrb
push
add
jo
push
xchg
push
call
movsl
xchg
aam
jmp
pushf
stos
fidivl
repnz
xor
in
imul
movsb
imul
addr16
jg
pop
dec
aam
icebp
xchg
or
jg
repnz
xchg
pop
jae
subl
fstl
sahf
test
nop
dec
mov
lret
sub
sub
or
pop
sub
sub
je
pusha
pusha
iret
or
jns
sbb
enter
or
rcrl
jae
mov
adc
sbb
lahf
cli
outsl
sub
inc
frstor
addr16
daa
jo
loop
shl
dec
orl
bound
fcom
and
pop
sub
jns
jb
adc
inc
lea
bound
push
stos
add
imul
xchg
cmpsl
data16
mov
ret
scas
sahf
xchg
or
mov
pop
sbb
xchg
mov
push
mov
cmp
lock
daa
aaa
pushl
jmp
es
popf
pop
inc
icebp
push
push
and
cmp
dec
lock
popf
mov
or
xchg
xor
and
jae
cs
inc
push
jne
sub
dec
lcall
mov
jecxz
sahf
sbb
leave
cmp
rcll
xor
mov
sub
movq
insl
sub
sbb
mov
sub
aad
pop
test
jge
lods
faddl
lahf
xchg
insl
subb
lret
cmp
imul
push
rcll
push
cmp
cmp
or
mov
test
push
hlt
cmp
push
in
push
adc
jp
jbe
std
fsubl
mov
or
sub
dec
push
nop
pop
dec
mov
mov
into
sub
iret
mov
pop
dec
push
out
cltd
imul
push
or
lahf
cmp
xchg
xchg
scas
sbb
push
decl
sbb
out
insl
fisttps
bound
jae
sub
cmp
cmp
shrb
in
test
out
add
inc
or
pop
test
test
jno
push
dec
aam
dec
xor
jo
pop
dec
mov
sbb
push
fisttpl
jae
jne
inc
mov
or
mov
test
divl
add
sub
pop
fnsave
push
cmp
pop
dec
lcall
adc
sbb
fstp
jle
mov
mov
add
or
ss
jmp
mov
jne
jp
out
outsb
sub
int
cmpl
xchg
mov
inc
nop
bnd
xor
push
push
fcmove
mov
jb
into
xor
imul
jmp
jnp
mov
adc
inc
inc
into
jno
repnz
std
outsb
pop
lea
icebp
mov
lods
and
push
pushf
add
mov
decb
jle
fs
sub
mov
sub
cmp
lock
or
push
or
stc
fcmovbe
adc
inc
inc
xor
xchg
ds
or
add
mov
pop
push
shll
sub
iret
mov
dec
jbe
inc
data16
cwtl
pop
ret
pop
or
sbb
aad
scas
mov
iret
in
arpl
inc
add
jno
daa
pop
outsb
lahf
lods
lcall
and
mov
xchg
mov
movsl
leave
and
les
pop
push
das
mov
xor
xchg
repz
cmp
jmp
add
or
sbb
and
jnp
fists
push
outsb
mov
je
mov
dec
ret
sahf
push
aas
jle
scas
adc
ficoml
movsl
ret
aad
push
shlb
and
xchg
insl
inc
inc
scas
fyl2xp1
nop
inc
push
scas
dec
les
mov
sahf
int
xor
mov
loope
das
xchg
adc
cmp
jecxz
out
push
inc
add
sub
outsb
scas
xchg
add
mov
fildl
fst
mov
jl
sbb
mov
push
jmp
lds
fcoml
in
add
movl
es
mov
mov
jnp
insb
cmp
pop
test
inc
mov
jecxz
scas
cmp
stc
loopne
jo
jbe
adc
notb
popf
or
pop
sahf
scas
push
lret
mov
xchg
mov
cmp
nop
gs
mov
pop
or
int3
adc
mov
xchg
inc
or
nop
in
push
addr16
cmp
repnz
mov
mov
mov
dec
call
cmp
mov
push
and
sub
jle
roll
mov
sbb
sbb
into
aas
lahf
rorb
sbb
jmp
insl
push
movsb
fbstp
lcall
flds
push
lods
enter
xchg
mov
jo
lods
outsl
dec
repz
ret
xor
pop
adc
fnsave
outsl
push
cwtl
pop
push
cmp
jo
add
test
arpl
jecxz
xor
mov
and
adc
xchg
pop
int
insb
inc
das
mov
pop
cmp
cld
mov
popa
ljmp
push
repnz
inc
xor
push
mov
sub
cmp
or
mov
or
cmp
inc
jbe
cs
xchg
mov
adc
out
jae
stc
sub
or
sub
stos
push
arpl
ljmp
add
or
xorl
sub
ljmp
jmp
out
lock
and
xchg
cltd
push
lds
jnp
lds
mov
jo
mov
inc
sub
aad
lahf
iret
pop
stos
add
inc
and
imul
and
lahf
cmp
or
mov
fs
data16
mov
ss
popl
mov
std
mov
hlt
in
into
sbb
dec
pop
sbb
lea
jb
or
pop
sub
mov
inc
outsl
dec
push
add
xor
dec
gs
movsl
and
loopne
pop
or
push
daa
jecxz
fidivrl
and
or
xchg
out
lcall
inc
das
mulb
rorb
xchg
mov
jle
xor
cmc
sti
jmp
jne
lock
sbb
mov
roll
push
pop
fists
lock
jno
cmc
mov
mov
mov
popa
imulb
lods
mov
das
xchg
push
je
push
cwtl
and
ss
repnz
push
mov
iret
pop
sbbl
gs
js
cmpsl
jle
and
xchg
bound
icebp
imul
shrl
fimull
inc
push
in
movsb
mov
sbb
movsb
lods
jnp
std
sahf
inc
xor
xchg
sub
popf
adc
rcrb
jae
push
cmp
out
gs
rorl
outsl
shll
testb
aaa
out
cltd
xchg
or
adcb
loope
addr16
push
mov
imul
cmp
gs
inc
dec
in
sbb
lods
cmovl
push
mov
clc
xorl
aad
jp
loope
mov
addr16
dec
mov
pop
loope
movsb
xor
loope
mov
or
aas
cmpsb
testb
aaa
xorb
pop
clc
jmp
popa
push
or
testl
or
shll
imul
and
sub
mov
mov
pop
insl
out
mov
adc
fstp
xor
add
mov
pop
lock
push
or
insb
dec
lds
xor
mov
jmp
xor
xchg
push
mov
addr16
repz
sub
mov
and
loopne
aas
nop
dec
aad
sbb
mov
aam
loop
jno
adc
shll
imul
dec
imul
mov
pop
xchg
shll
jns
mov
outsl
stc
pop
push
inc
adc
mov
aam
sub
jno
push
jbe
add
mov
and
in
in
push
outsb
ret
nop
adc
fs
aas
dec
lods
jns
shll
subl
pusha
stos
ret
push
adc
jge
ljmp
sbb
or
mov
pop
and
ss
dec
xlat
in
leave
out
icebp
sbb
inc
xchg
adc
pop
cli
into
bound
mov
adc
rcl
bswap
inc
jae
mov
addb
nop
sbb
sahf
out
mov
jp
push
xor
mov
inc
cld
test
pop
push
sbb
xchg
ret
cmp
out
add
shlb
call
pop
and
stos
jge
push
inc
imul
cltd
mov
cmp
xchg
les
cld
cli
jbe
lods
push
mov
or
in
push
xor
addr16
dec
cmpb
push
or
jne
jae
adc
shlb
jmp
jae
mov
sbb
adcb
mov
mov
outsl
std
sbb
pop
sub
mov
scas
xchg
ljmp
arpl
xor
fldl
test
loope
or
or
and
mov
sarb
xchg
insb
xor
pop
cmpsl
insb
repnz
or
shrd
pushf
sub
mov
popfw
stos
mov
fisttps
ss
push
mov
movsl
out
fbld
xor
daa
data16
ror
scas
or
scas
push
lods
cwtl
inc
or
fs
rorl
cmpsb
xchg
insl
jge
or
aam
ret
lcall
cld
jbe
sbb
pop
inc
mov
repnz
cs
std
lds
outsb
and
lds
and
mov
loopne
cmc
jne
mov
outsl
mov
and
lea
movnti
dec
push
fcoml
inc
cmp
lods
imul
jg
mov
sub
popa
mov
mov
mov
fst
in
mov
out
sub
cmp
mov
mov
ja
pop
std
pop
je
or
or
cmp
mov
mov
mov
out
xchg
test
cs
stc
jb
jecxz,pn
int3
add
rorb
xchg
je
dec
outsl
mov
repnz
rcll
pushl
inc
nop
add
lods
stos
scas
jo
int
sahf
adc
sar
nop
cmp
jmp
dec
pop
mov
fs
adc
test
push
xor
int
xor
pop
pop
dec
pop
mov
push
xchg
pop
mov
jg
push
jp,pt
cli
xchg
jecxz
lcall
cmpsl
in
push
test
icebp
sbb
xchg
fdivl
insb
mov
loopne
hlt
nop
jmp
in
mov
sbb
out
xchg
js
xchg
lods
push
rol
push
mov
imul
fisttps
scas
fwait
adc
pusha
aad
lods
int3
add
mov
pop
test
push
mov
jns
cmp
inc
dec
xlat
xor
jb
jmp
push
lods
stos
iret
scas
cs
mov
sub
xchg
push
mov
or
sub
bound
mov
jmp
lcall
or
int3
mov
shrl
loop
lods
rolb
sbbb
mov
sbb
fsts
xchg
cwtl
mov
cli
imul
std
ja
inc
jno
dec
clc
mov
jns
call
push
adc
test
mov
jns
pushf
int
in
bound
and
lock
ficompl
sbb
cmp
mov
subb
pop
xor
inc
int3
cmp
push
cwtl
or
sbb
popl
testb
ret
or
scas
test
xchg
mov
out
mov
sbb
in
push
add
mov
mov
jne
andb
add
test
ds
lcall
mov
int3
imul
xchg
xchg
mov
aam
add
in
add
je
mov
call
adc
adc
sbb
sbb
sahf
and
and
cmp
jno
mov
mov
lds
lret
cmp
fcomps
mov
sub
add
sbb
cmp
add
into
and
adc
mov
mov
mov
stos
call
cmp
sahf
cwtl
push
jae
inc
js
jmp
imul
pushf
inc
xor
and
mov
pop
cmpsl
movlps
cvtpi2ps
jmp
mov
out
jns
add
es
sbb
jg
mov
imul
xchg
fsubrl
aam
cli
inc
fnstenv
mov
pop
daa
scas
popa
hlt
aaa
hlt
fwait
dec
mov
mov
mov
into
pushl
add
faddp
cs
add
call
cmpsl
lds
adc
jae
xchg
mov
push
scas
and
jo
xchg
testb
iret
cwtl
xchg
adc
dec
mulb
push
xlat
dec
rcll
stos
out
mov
mov
std
bound
push
xchg
add
pop
out
sub
test
pusha
movsb
sbb
ret
dec
jl
push
xchg
add
in
add
add
pop
lea
xlat
cs
shlb
pop
push
xchg
xchg
mov
mov
shll
jnp
inc
dec
xchg
jg
cli
jb
lds
fmuls
or
add
cmp
shrb
aas
and
cmp
adc
lahf
xor
xlat
sbb
add
fdivs
cmpsl
dec
aam
adc
dec
cmp
add
je
fldcw
sarl
sahf
cli
cmp
push
push
pusha
dec
xchg
lods
lods
cmc
je
xchg
test
andb
cwtl
cmp
sbb
ss
xor
and
lea
xor
xchg
inc
cmpsb
xchg
cmc
cmpsb
cmp
loop
pushw
das
lcall
daa
insl
aad
nop
cmp
or
mov
and
push
adcl
cmpsb
jo
pop
push
adc
mov
stc
mov
pop
outsl
mov
mov
cmp
adcl
mov
jecxz
and
pop
push
cmp
scas
xchg
rcrb
scas
and
popa
fisubs
xor
sbb
push
cld
xchg
dec
sbb
cmp
loopne
cmp
inc
mov
push
xchg
jnp
int
lcall
mov
sti
mov
adc
int3
mov
icebp
or
mov
mov
sub
outsl
inc
or
add
loop
push
stc
cmp
mov
mov
std
inc
les
clc
popaw
inc
mov
or
jns
popa
int3
push
imul
jmp
dec
mov
andb
adc
mov
add
stos
jno
and
ja
stos
cwtl
fwait
and
or
inc
fbld
out
xorb
outsl
mov
add
lret
addl
push
jge
daa
cld
push
jo
dec
mov
lret
xor
aas
das
popa
test
inc
repz
adc
jb
ret
out
xchg
lods
mov
test
inc
pop
mov
mov
dec
sbb
cmpsb
mov
xchg
lcall
sub
loop
frndint
test
inc
cli
daa
cwtl
mov
pop
sub
mov
cmp
sub
stos
add
sbb
aas
sub
mov
sbb
inc
inc
push
loop
pop
sbb
repnz
les
push
or
and
dec
push
inc
push
inc
add
dec
fcmovnu
loope
rorl
cwtl
lock
mov
psubd
in
xchg
sbb
xorl
sahf
push
push
jecxz
sar
xlat
xacquire
mov
xchg
mov
movsb
cmpsb
inc
bound
mov
push
clc
pop
or
insb
cld
punpckhwd
xor
cltd
int3
aad
hlt
and
or
clc
inc
testl
rclb
adc
pop
rcrb
pop
or
cmp
ficomps
push
arpl
sub
sbb
imul
pcmpgtd
jnp
cwtl
stc
cltd
in
iret
cmp
movsl
xchg
or
pop
shll
std
push
stc
dec
or
bound
outsl
mov
dec
and
lret
mov
test
sbb
lods
cmp
scas
cmp
lock
jmp
loopne
shl
xchg
test
push
adc
cmp
vpand
lods
call
sbb
aas
int
ja
push
and
loope
cmc
out
sbb
and
mov
cmp
stos
mov
fsub
sbb
xchg
test
sti
xchg
sbb
sbb
hlt
loop
mov
dec
mov
fnsave
mov
daa
out
test
repz
int3
push
sbb
sbb
xchg
sahf
pop
push
and
fwait
outsl
test
in
mov
pop
fldl
push
mov
lods
fdivr
test
cltd
shl
mov
mov
cltd
loopne
push
pop
and
cli
mov
add
add
mov
das
inc
dec
int
movsb
push
call
aad
sub
sub
cwtl
xor
sub
xchg
lret
xchg
push
icebp
loope
insl
adc
enter
push
dec
sahf
pop
sti
cltd
mov
popa
mov
dec
cmp
lahf
je
data16
dec
and
push
and
dec
test
lcall
adc
mov
cmp
sbb
xchg
mov
mov
pop
inc
jns
adc
popf
sbb
push
lock
out
fwait
cmpsl
adc
divb
mov
xchg
push
pusha
jl
mov
fwait
mov
or
rdtsc
mov
sbb
js
out
xor
fs
push
iret
cltd
adc
inc
xorb
jae
xchg
jl
in
cwtl
add
pop
xchg
xchg
jb
nop
push
inc
iret
push
and
sbbb
adc
push
push
cld
jae
sahf
jnp
mov
xchg
pop
adc
push
mov
pusha
aad
fsubrp
shlb
jle
push
mov
ds
jns
imul
cmp
or
pop
jmp
push
mov
ds
jns
imul
cmp
or
pop
jmp
push
mov
ds
jns
imul
cmp
or
pop
jmp
push
mov
ds
jns
ret
inc
pop
ds
mov
push
out
notb
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pushl
in
daa
fcoml
int3
pop
mov
ja
inc
xor
mov
cmp
sub
sbb
sbb
cwtl
aaa
in
daa
mov
int3
pop
mov
push
mov
jl
insb
cmpsl
cmp
fwait
sub
sbb
or
inc
aaa
push
daa
dec
pop
adc
mov
push
mov
mov
test
pop
mov
mov
mov
pop
mov
fsubl
rolb
pop
sar
mov
negl
pop
or
pop
dec
dec
adcb
add
ret
sbb
xorb
sbb
repz
add
test
add
in
out
movsb
mov
sub
dec
xlat
sub
imul
and
add
aas
and
aam
data16
insb
pop
fcoms
mov
ret
imull
sbb
inc
loope
cld
inc
push
mov
and
pop
cmp
out
jmp
push
sub
in
add
add
xor
jbe
scas
arpl
add
push
xchg
mov
jg
sbb
psrld
pop
int3
pop
pop
ja
addr16
push
sub
mov
cmpsl
sub
es
xlat
or
xchg
xor
pop
rcll
ret
adc
cmp
sub
dec
mov
xorb
mov
jb
pop
aad
leave
sub
fldenv
sbb
ficomps
loop
cltd
inc
out
orl
mov
pop
lods
addr16
push
mov
mov
cmpsl
pop
xchg
dec
xchg
sub
sbb
or
cld
aaa
in
daa
fcoml
int3
pop
mov
push
mov
mov
cmpsl
pop
xchg
dec
xchg
sub
sbb
or
cld
aaa
dec
dec
push
cli
or
jae
inc
mov
fsubrs
add
aas
xlat
loopw
sub
lds
fistl
out
cld
sub
dec
fwait
inc
addr16
pop
mov
jno
aas
imul
xchg
movsl
clc
movsl
xchg
ret
add
xor
popf
cld
jns
adc
mov
and
stc
dec
add
jp
aam
stos
pushf
out
jecxz
sub
push
jo
aaa
daa
mov
or
adc
lcall
ret
mov
rol
enter
push
dec
mov
xchg
loope
jl
aaa
jno
rcrl
lea
cmp
push
and
in
adc
dec
fisubs
outsb
lea
sub
push
or
adc
jno
and
outsb
sahf
inc
sbb
and
xchg
adc
out
or
adc
adc
jne
nop
icebp
aaa
int3
dec
cmp
dec
xchg
and
ja
in
jbe
cmp
xchg
insb
imul
rcl
scas
clc
mov
mov
inc
test
push
cmp
mov
cmp
icebp
pop
inc
jp
loop
or
mov
in
inc
sahf
ret
or
mov
stc
mov
out
mov
cs
aas
cld
iret
jg
movsl
xor
push
mov
adc
and
test
cwtl
and
idiv
ja
adc
mov
mov
dec
push
cmp
push
lahf
and
sub
bound
cmpl
shl
mov
pushf
les
push
xchg
cmp
push
push
lahf
dec
ficoml
mov
inc
outsb
out
bound
sbb
dec
pop
xor
cltd
mov
mov
fs
jge
xchg
frstor
add
push
in
sub
cmp
es
cltd
pop
mov
out
pop
cmp
and
ds
mov
inc
stos
int
stos
cli
gs
inc
aaa
mov
rcl
add
sarb
add
sbb
mov
push
inc
je
aad
or
leave
rolb
stc
sub
inc
sbb
scas
or
aaa
sahf
repz
and
adc
pop
subb
enter
addr16
mov
and
outsb
insb
push
clc
iret
xor
imul
mov
mull
psllw
push
jecxz
shl
sub
scas
cltd
and
in
xchg
jns
cmp
mov
aas
sub
rol
sahf
dec
outsl
scas
cmpsl
inc
ficoml
cwtl
daa
cmp
sti
les
or
adc
lret
cmp
enter
outsl
fcmove
shll
pop
fcmovu
fdivs
push
lds
addr16
inc
cs
inc
dec
lret
lods
lahf
leave
pop
iret
mov
mov
sub
and
fnstcw
sbb
ljmp
adc
jo
pop
mov
and
popa
push
adc
add
adc
mov
xchg
add
add
outsb
arpl
sbb
repz
cmp
in
push
xor
hlt
inc
ret
test
push
add
sub
jp
fcompl
mov
aam
mov
or
mov
xchg
xor
test
add
xor
push
jg
cmpsl
call
mov
adc
sbb
cmp
sub
lahf
in
fisttpl
mov
cmpb
mov
jmp
push
adc
jecxz
stos
inc
jb
lea
pop
xlat
adc
push
jno
cmp
imul
rep
push
aam
data16
dec
movsl
mov
cmp
adc
imul
leave
cli
and
push
dec
push
jo
mov
mov
icebp
enter
inc
fdivr
cmp
sbb
xor
jmp
lret
mov
enter
shrl
scas
cmp
imul
jl
mov
dec
test
xor
adc
cmp
mov
cmp
cwtl
mov
xchg
jmp
lods
test
pop
fs
sbb
ss
mov
and
inc
sti
stc
fwait
adc
inc
pusha
sbb
adc
repnz
mov
icebp
cmp
dec
cld
mov
mov
push
jo
pusha
cwtl
add
add
rorl
mov
out
stos
and
cmc
sub
dec
mov
mov
out
jp
call
in
sub
push
jne
push
pushf
xchg
jae
mov
fimull
in
lahf
out
stos
xlat
push
push
aas
add
sbb
jecxz
jp
aaa
jo
or
les
into
lcall
out
sahf
push
gs
inc
insl
fcoms
mov
imul
imul
test
sub
xchg
rorb
push
or
repz
jns
out
cld
cltd
rorb
ljmp
pop
sub
push
icebp
or
insb
adc
cld
jns
add
inc
adc
pop
fldl
lahf
dec
in
push
inc
in
xchg
sti
std
cmp
jno
or
jns
adc
xchg
adc
inc
das
int
jge
fldt
mov
dec
adc
mov
das
clc
mov
push
xor
cld
int3
leave
cltd
scas
jo
add
and
jno
mov
push
mov
out
neg
popf
or
adcl
pop
or
stc
lods
jno
jb
pop
mov
loope
jo
and
mov
jmp
repnz
js
push
cmp
jo
mov
jne
pop
adc
mov
and
adc
ljmp
and
mov
loopne
mov
lahf
push
loop
aad
fs
add
insb
enter
orl
xchg
jp
add
xchg
lods
dec
adc
filds
std
lock
cltd
insl
lahf
in
shlb
arpl
lods
jnp
dec
iret
outsb
inc
lds
push
ss
out
decb
jnp
pop
out
or
int3
lods
cmp
fnstsw
add
call
inc
mov
sbb
xor
test
mov
xor
and
xor
push
shl
push
and
push
cmp
popf
mov
inc
popa
in
je
gs
xchg
dec
mov
push
rorb
jo
cmc
movhps
subl
or
stos
pushf
sub
inc
daa
mov
jmp
jecxz
pop
add
iret
in
add
sub
sub
rcl
and
jno
idiv
push
imul
jge
xor
outsl
and
fistl
imul
sub
or
jle
lret
cmp
in
lahf
push
xchg
leave
sbbb
loope
imul
divl
inc
sahf
push
fidivrl
mov
xchg
jnp
mov
adc
xor
dec
test
loop
leave
ss
in
cs
ds
or
sub
sbb
mov
adc
call
ret
in
pop
cmp
ja
ljmp
out
or
xor
mov
cltd
push
inc
push
xor
xor
rol
jno
or
popa
addl
xor
sub
negl
in
out
xor
into
xor
out
jmp
stos
cld
cli
in
adc
int
dec
ret
sub
push
add
mov
or
xchg
lock
push
addb
hlt
adc
add
pop
sbb
mov
popa
dec
jmp
sbb
cltd
in
ja
dec
xlat
loopne
jb
mov
ja
movsb
movsb
inc
dec
enter
or
push
test
push
adc
mov
imul
sbb
xchg
and
mov
push
scas
outsl
test
dec
stos
inc
aad
jmp
push
std
jo
inc
adc
pop
sub
inc
out
xor
decb
jbe
inc
loopne
pop
loopne
or
sub
xchg
pop
xchg
sbb
cld
inc
js
mov
popf
lock
mov
repz
pop
fdivr
inc
mov
and
js
pop
or
insb
or
cmp
xchg
hlt
or
out
pop
test
sbb
stc
cmc
and
leave
stos
fwait
mov
fsubrl
loope
pop
ja
leave
aas
pusha
lahf
pop
cmp
movsb
mov
xor
rcrl
mov
mov
sbb
sub
jb
cli
or
pop
testb
push
mov
push
mov
lret
addb
ret
das
or
cltd
xchg
sbb
jge
sbbb
ds
cwtl
fists
jmp
and
jge
ljmp
fisubrs
cmp
pop
add
dec
xchg
cmp
add
sbb
adc
int3
cltd
ja
fs
idivb
xchg
shll
cmp
jle
mov
hlt
lods
adc
mov
mov
jp
stos
add
cli
leave
insb
push
inc
sub
mov
add
mov
fimull
cmpsl
mov
mul
jecxz
lods
pop
sysenter
mov
cmp
jg
mov
jb
lods
mov
and
fists
xor
dec
cmpsb
xor
add
push
das
dec
je
ljmp
movsl
mov
mov
and
cmp
inc
cli
mov
or
fs
or
adc
and
xchg
rclb
je
inc
mov
into
and
or
pop
ret
fbstp
pop
xchg
or
out
mov
fdivrp
call
jns
lahf
mov
mov
mov
dec
mov
sbb
push
in
push
scas
int
xor
xchg
cmp
xor
je
inc
inc
mov
jnp
loopne
mov
mov
push
clc
dec
ror
push
shrl
orl
add
lret
mov
mov
out
xchg
ret
stc
push
push
out
mov
popf
ret
stc
sahf
push
xchg
sbb
sub
idivl
sub
sbb
rolw
or
dec
imul
cmp
mov
pushf
jge
pop
mov
cmpsl
lahf
mov
jb
imul
icebp
outsb
adcb
lods
dec
pop
mov
xor
or
pusha
sub
dec
fnsave
popa
xchg
xlat
ret
clc
mov
inc
movl
je
mov
or
cmp
sahf
pop
aaa
cmpsl
adc
lea
scas
xchg
cld
mov
add
push
dec
sbb
rclb
or
push
insb
push
call
pop
iret
jns
mov
test
pop
aaa
in
rorl
mov
adc
add
leave
cmp
cltd
cli
pop
or
jo
fcomi
push
cmpsb
jae
mov
or
xchg
jo
lea
cmc
cmpsl
xor
pop
sbb
ret
cld
sbb
mov
inc
gs
mov
lahf
fcomps
in
jno
mov
pushf
dec
in
clc
int3
cli
push
xchg
jg
jae
or
bswap
dec
mov
call
xchg
xlat
inc
push
push
stos
out
xchg
scas
xor
test
pop
pop
outsb
xor
add
inc
pop
sbb
js
fnstenv
notb
cmp
and
lret
sbb
int
mov
ret
fcom
mov
xchg
sbb
xchg
xor
adc
dec
fwait
jmp
xchg
stos
js
pushf
pop
mov
or
mov
dec
insl
inc
sbbl
and
cmpb
in
mov
sub
mov
add
or
xchg
jecxz
mov
negb
xchg
lea
dec
in
xor
mov
xor
insb
push
push
push
nop
sbb
push
fidivl
mov
xchg
jno
sbb
adc
sti
jne
sbb
xchg
cmc
xchg
insl
shr
mov
stos
mov
or
adc
leave
add
jge
inc
adc
xchg
cmp
add
pop
cli
fiaddl
push
cltd
repz
inc
mov
and
inc
push
xchg
push
inc
fbld
into
push
pop
stos
ja
das
adc
insl
adc
jmp
pop
cmp
push
inc
sub
sub
inc
loopne
pop
mov
popa
ret
and
icebp
ret
enter
pop
sub
adc
test
cmpsl
pop
in
xor
adc
mov
or
jnp
dec
dec
xor
xlat
cmpsb
xorl
adc
sbb
fistpl
sub
mov
mov
push
out
rcll
push
les
jne
inc
inc
lcall
rcl
or
or
out
cmc
gs
pusha
cmp
outsb
add
sbb
movsl
push
and
ret
pop
add
inc
test
cmpl
scas
lret
xchg
aas
add
bswap
sub
cli
aaa
xchg
clc
data16
cld
stos
jb
and
mov
aad
xor
hlt
lods
jp
mov
mov
shrb
std
repz
dec
das
pop
cmp
es
cld
or
cmc
fistpl
xchg
push
jp
pop
addl
add
outsl
movsl
pop
daa
stos
xchg
daa
xchg
and
out
adc
jae
arpl
pushf
nop
inc
scas
cltd
push
inc
in
das
pop
loop
out
sbb
repz
cmp
and
lods
cmp
sbb
push
lds
sbb
dec
push
aaa
xchg
test
or
cmp
mov
lcall
cmp
cmpsb
in
or
jle
les
imul
aam
jmp
movsb
mov
pop
ds
lahf
arpl
mov
dec
stc
mov
repnz
mov
enter
rcll
out
inc
push
cmc
movb
mov
jle
sbb
or
pop
jmp
and
dec
gs
out
add
jp
fstpl
cmp
and
sti
or
cmp
addb
and
inc
cmc
addr16
mov
mov
rcll
jae
movsl
push
pop
lret
sbb
dec
push
insl
pop
cmp
movsl
add
outsl
data16
jle
ficoml
dec
lods
or
cmp
sbb
incb
pop
add
or
scas
rcl
enter
adc
mov
in
xchg
push
xor
pop
inc
or
imulb
repnz
inc
add
sbb
arpl
and
sbb
mov
xchg
mov
lcall
lods
push
pop
xchg
test
or
loopne
push
outsb
mov
pop
pop
jecxz
testb
push
pushf
mov
jg
popa
test
into
testb
xchg
lods
ss
xor
lret
pushf
jae
sarb
push
pop
fadds
xchg
dec
adcb
cmp
in
inc
cmp
xorb
mov
inc
mov
jae
ret
xchg
mov
jo
inc
mov
and
mov
call
jp
dec
xchg
test
pop
mov
test
or
jbe
mov
and
adc
mov
ss
pop
cmp
or
int
sub
ja
mov
sbb
aam
lods
pop
test
outsl
idivl
je
dec
lea
aaa
mov
or
push
iret
xchg
je
lock
rcr
mov
xor
push
ret
xchg
cmpsl
sub
inc
cmp
pop
lds
pop
mov
daa
jl
rorb
mov
sbb
push
sbb
xor
inc
pushl
outsb
add
pusha
jle
cmpb
lret
lods
xor
into
pop
inc
jne
fidivl
pop
ljmp
xor
pop
cld
sbb
add
jns
and
mov
xchg
xchg
mov
dec
inc
or
jp
or
cmp
jle
hlt
lret
add
fstps
aam
jb
sub
es
in
repnz
or
mov
mov
mov
in
pop
add
addr16
and
pop
sbb
leave
dec
add
sbb
push
mov
pop
adc
push
mov
sbb
leave
pop
ss
mov
cmc
cwtl
xchg
cmp
lahf
inc
test
pop
jle
dec
fiadds
lods
or
in
fisttpl
adc
push
push
stos
sti
popa
cmp
out
icebp
mov
inc
mov
add
shlb
pop
mov
jno
push
pusha
push
push
and
mov
loop
jae
test
popa
out
repnz
push
and
xchg
imul
pop
mov
test
xchg
adc
stos
push
cmp
movsl
mov
je
loope
sub
ret
cmpb
icebp
cmp
loop
xor
aas
xlat
dec
and
sti
insb
cmp
das
pop
sub
hlt
sahf
lds
add
sbb
imul
fwait
in
test
dec
adc
fadd
lods
mov
mov
icebp
bound
or
fldl
jmp
das
xchg
les
dec
lea
xor
enter
lea
push
fimuls
in
push
je
sbb
aad
enter
and
cld
and
jnp
in
or
cmc
adc
pop
leave
popa
xor
push
scas
cs
adc
in
lahf
mov
and
dec
mov
cwtl
and
jne
aam
and
ja
in
cmpsb
out
mov
repz
sub
test
out
xlat
das
scas
push
loop
loop
mov
sarb
pop
lods
movsb
mov
shll
jb
xchg
mov
out
ljmp
loop
das
ror
xor
mov
sub
fnsave
jb
movsb
aad
pop
pcmpeqw
adc
js
out
flds
stc
sub
push
sub
shl
lds
std
aad
or
xchg
and
jecxz
into
into
out
cltd
inc
or
mov
test
xor
cwtl
test
push
xchg
outsl
inc
sbb
and
mov
sub
je
mov
test
lret
inc
xchg
adc
xor
cld
sbbl
dec
dec
adc
aaa
sbb
and
inc
or
jg
aaa
push
loope
mov
out
scas
imul
shlb
add
cmp
mov
ja
sbb
fcmove
xor
rolb
sub
clc
cmpl
test
cld
int3
pop
or
mov
lea
and
sbb
mov
jns
lock
in
xchg
orl
std
dec
sahf
adc
inc
pop
dec
mov
outsl
adc
out
inc
filds
inc
std
jmp
pop
pop
or
lahf
lret
mov
fwait
xchg
mov
mov
xchg
test
out
xor
or
ljmp
pusha
mov
inc
lret
adc
inc
rcrb
pop
sbb
jl
or
test
test
add
xchg
adc
push
insb
inc
in
cmc
inc
pop
mov
push
aas
js
xchg
lahf
push
sbb
sbb
adc
outsb
xor
adc
addr16
inc
and
push
push
scas
mov
push
mov
sbb
sub
les
sbb
cld
call
adc
push
rorb
test
xchg
fdivrp
ficompl
testl
push
push
adc
add
sar
jmp
push
pop
xor
js
jge
mov
mov
push
xor
mov
adc
and
and
dec
xlat
or
pop
and
subb
mov
xchg
cmpsl
mov
jnp
mov
xchg
dec
jno
or
xchg
sub
ret
movq
test
xchg
or
jo
xchg
pop
fadd
scas
in
pop
push
xchg
adc
add
loop
jp
adc
test
mov
pop
mov
jmp
push
testl
movsb
outsl
nop
fdivrp
push
popa
std
outsb
mov
sub
cmp
inc
stos
lock
or
sub
xchg
sbb
sub
stc
ljmp
je
sub
mov
cmpl
lea
sub
mov
sbb
dec
dec
data16
lcall
adc
push
pusha
stos
in
imul
aam
mov
call
jno
div
or
jmp
popf
sub
push
test
addr16
adc
adc
test
scas
jle
rcll
jge
les
pop
mov
cs
frstor
jne
adc
loope
inc
mov
dec
int
dec
or
sbb
dec
mov
sub
shl
out
cmp
out
push
shl
or
mov
adc
cld
inc
jno
mov
shlb
add
and
and
xor
xchg
jb
into
rcrl
fldenv
ja
addr16
subl
cmpsl
outsl
xor
jnp
mov
add
out
jecxz
enter
sub
cmp
and
fsub
jno
mov
movsl
push
add
mov
mov
mov
inc
jnp
clc
rorl
shll
xchg
xchg
jnp
sbb
xchg
pop
popf
mov
dec
fidivl
aam
ss
jge
or
cwtl
pop
jno
mov
jo
dec
jbe
pusha
es
xor
scas
arpl
push
shr
div
and
std
lcall
nop
stos
push
and
sub
cltd
sub
loope
pushf
sbb
pop
scas
stos
gs
lahf
stos
dec
inc
lods
jb
gs
dec
outsb
ss
repz
pusha
fsubr
inc
scas
popa
repnz
repnz
ljmp
rcr
imul
xor
loope
in
ja
ds
cmc
stos
arpl
mov
pop
mov
push
mov
mov
cmpsl
pop
xchg
dec
xchg
sub
sbb
or
cld
aaa
in
daa
fcoml
int3
pop
mov
push
mov
mov
cmpsl
pop
xchg
dec
xchg
sub
sbb
or
cld
aaa
fsubl
mov
ja
addr16
push
dec
inc
jl
insb
cmpsl
lods
xchg
dec
xchg
cmp
sbb
in
call
pop
in
pop
mov
push
or
jl
xchg
or
dec
jg
sbb
sub
cmp
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
popa
and
bound
adc
cld
pusha
mov
xchg
jmp
and
cmp
or
sbb
insb
fs
dec
inc
pop
jp
movsb
mov
xchg
in
lret
int3
testb
bound
cmp
dec
movsb
data16
movsb
rclb
int3
mov
xchg
mov
pusha
sbb
dec
push
imul
cmp
lahf
das
mov
jg
cmp
clc
mov
in
lahf
and
imul
jo
jmp
jno
jmp
fsubrs
jae
ja
imul
push
cltd
jl
sub
or
pushf
in
mov
paddsb
bound
pop
jno
aas
adc
xor
add
insl
jo
inc
dec
test
mov
jnp
xchg
popa
icebp
jns
cmp
test
repnz
stc
fsubr
xchg
push
pushl
test
insb
xchg
jecxz
fs
fs
mov
loope
xchg
test
lret
repz
xchg
xor
push
push
testl
mov
mov
sub
mov
or
jo
insb
cmp
in
pop
movsb
cs
xchg
sbb
fdivrl
pop
dec
push
or
pop
xor
fsubl
std
testl
bound
add
sub
std
shr
lock
lahf
stos
cltd
hlt
mov
push
paddq
js
sub
inc
pop
push
lods
movsb
mov
xchg
in
in
hlt
int3
sub
cmp
or
sbb
insb
fs
dec
inc
pop
push
lods
movsb
mov
xchg
in
in
hlt
int3
sub
clc
bound
adc
in
cmp
jmp
into
stos
adc
outsl
dec
mov
push
inc
lods
nop
paddsw
sub
sbb
sbb
ror
or
jecxz
pop
jle
arpl
jecxz
add
mov
jecxz
hlt
and
ljmp
cmp
jg
imul
in
push
sbb
pop
adc
push
ret
lret
mov
je
nop
mov
ljmp
and
aas
insb
out
jg
sbb
orb
popa
sbb
in
and
enter
push
sub
cmc
movsl
mov
xchg
popf
lock
repnz
in
loopne
mov
jb
int3
add
inc
mov
jp
stos
sbb
inc
les
and
xchg
or
imul
xor
arpl
xor
mov
lcall
dec
adc
pop
shlb
inc
scas
sub
ss
mov
jno
sbb
icebp
inc
fisubs
xor
push
or
mov
sub
jo
pusha
gs
int3
sub
jbe
loope
or
xor
sbb
incl
push
sub
pop
pop
dec
rcll
sub
mov
insb
ja
inc
aas
pop
inc
lret
jmp
scas
daa
sub
sbb
fwait
jno
dec
inc
or
adc
into
jg
and
sbb
das
adc
push
je
loop
jns
cwtl
test
adc
stos
mov
mov
imul
push
cmp
pop
je
inc
mov
add
scas
into
je
subb
mov
add
cmpsl
hlt
outsb
test
ds
inc
push
cmp
popf
fdivl
outsl
enter
push
mov
jnp
sbb
jno
push
aam
arpl
push
ljmp
cwtl
movsl
inc
and
jae
test
call
mov
lods
hlt
es
aas
jecxz
or
inc
mov
mov
mov
das
add
notl
sub
nop
or
faddl
xor
mov
jbe
ret
lods
cmc
in
cmp
pop
bound
push
mov
out
in
popf
out
jbe
aam
leave
and
pusha
jp
or
jp
xor
inc
test
insl
cwtl
cmc
xchg
jae
jns
ds
repnz
adc
push
mov
cmp
stos
mov
lods
stos
ljmp
cmpsl
jbe
pop
ljmp
and
fmull
inc
in
mov
dec
cmc
inc
shll
in
out
dec
ds
popf
insl
fs
ss
sub
vpgatherqd
loop
xchg
in
pop
sahf
hlt
fisubrs
push
push
into
fimuls
mov
fs
je
enter
jmp
mov
mov
fidivrs
sti
mov
inc
mov
push
inc
pop
cld
mov
cmpsl
inc
scas
popa
in
enter
push
sub
ljmpw
inc
push
mov
mov
test
nop
mov
add
fistpl
cmp
das
inc
rcrl
mov
and
or
sub
add
xorl
cmp
sahf
hlt
or
adc
fcoml
fcomps
cs
sbb
ds
shrb
fistpl
lret
movsb
enter
inc
xchg
mov
sahf
xor
test
pop
out
sbb
sbb
sub
in
add
and
push
push
pop
push
int
flds
push
and
sbb
ds
jmp
push
mov
add
mov
outsl
ret
add
and
daa
mov
orl
rolb
loopne
sub
int
lahf
push
popf
std
and
mov
jns
int
test
adc
out
xlat
dec
or
add
adc
mov
inc
in
push
fs
outsb
arpl
add
push
ret
mov
xor
mov
shl
jecxz
add
stos
pop
out
test
out
push
xsha256
cmpsb
xchg
sbb
jae
mov
xchg
repnz
jae
xlat
divl
jecxz
sbb
xor
mov
imul
xchg
jne
mov
cltd
repz
mul
bound
jmp
pop
je
insb
fcmovnbe
xchg
out
daa
fcmove
arpl
push
test
call
cwtl
xchg
sbb
loop
mov
insl
sub
cwtl
ss
xor
inc
xchg
inc
xchg
mov
rorl
mov
sbb
and
lods
adc
iret
and
cli
jl
dec
loopne
and
out
push
xchg
xor
jo
out
shrb
js
ljmp
jg
fsubl
cmp
icebp
cmp
idiv
daa
sub
out
xlat
jl
cmp
frstor
repz
xchg
inc
cmp
add
push
movsl
sub
hlt
loop
and
mov
roll
sbb
jne
leave
push
or
lret
fisubl
jo
add
gs
xchg
and
pop
mov
add
xor
inc
imul
cmp
jmp
mov
jg
nop
mov
fsubl
lret
arpl
mov
push
pop
xchg
cmp
sub
clc
pop
mov
mov
out
push
adc
or
mov
call
mov
int3
aas
sub
sbb
xchg
xorl
mov
test
inc
jmp
cli
pop
cld
lods
aam
sbb
adc
mov
int
or
pop
loop
or
push
pop
push
out
repnz
and
sub
mov
jb
and
inc
sbb
movsl
sub
pop
cmpsb
shl
int
lret
fdivrl
test
je
popa
adc
out
inc
push
dec
jecxz
push
and
xchg
push
xchg
adc
fdivs
jle
pop
out
clc
lret
mov
or
cmpb
pushf
push
aaa
ljmp
xchg
and
mov
loope
imul
les
sar
inc
int3
iret
jmp
sbb
mov
cmp
inc
gs
scas
mov
push
pushf
add
ss
mov
icebp
bound
push
xchg
scas
mov
dec
movsl
sbb
mov
cltd
pop
popa
add
inc
dec
loop
pop
or
ss
gs
sbb
test
push
jb
xchg
iret
sub
xchg
mov
xchg
sbbb
faddp
xchg
push
xchg
jb
mov
add
nop
fcmove
ret
gs
daa
repz
arpl
sub
push
xor
mov
pusha
mov
pop
outsl
ret
mov
nop
mov
scas
inc
je
jnp
shll
push
xchg
je
adc
xchg
cmp
pushf
pop
cmp
sub
or
sbb
stos
lcall
and
inc
xchg
dec
push
gs
mov
outsl
enter
sar
fs
das
shrb
mov
dec
aam
dec
insb
data16
inc
ss
sub
add
fildl
aam
fadd
and
inc
outsl
lds
xor
adc
sarl
je
sbb
mov
fbstp
push
jo
xchg
sbb
jg
push
out
add
adc
and
fbld
in
xchg
dec
or
pop
sbb
lret
push
add
sub
fcmove
xor
jbe
icebp
pop
insb
mov
dec
out
jmp
xchg
push
mov
or
negl
push
rclb
hlt
mov
outsl
adc
ja
lock
or
jns
pop
jne
sbb
test
ss
inc
pop
iret
sub
scas
or
jo
stos
mov
pop
xchg
inc
fadd
sbb
mov
adc
aam
cltd
lods
loopne
xor
in
xor
jb
popf
mov
xchg
ja
adc
loope
ret
pop
xor
mov
fdivrp
and
pop
dec
lock
repz
jecxz
adc
cltd
adc
mov
and
into
movsb
mov
xchg
xchg
sub
jae
scas
in
int3
xor
out
out
test
scas
rclb
fmuls
iret
mov
sub
pop
cltd
fwait
mov
mov
xor
subl
stos
nop
orl
mov
xor
dec
popa
sar
cli
jg
rclb
adc
leave
sub
push
mov
adc
out
popa
push
negb
or
mov
pop
xchg
mov
je
pop
mov
cmp
inc
jo
xor
dec
in
hlt
rcll
or
rdpmc
popa
les
jl
xor
ficoms
lret
or
sbb
sbb
int
sbb
mov
cltd
mov
fldl
mov
mov
fs
rclb
xchg
cs
inc
sbb
lret
shlb
cmp
in
sub
dec
movsl
dec
test
inc
mov
scas
jnp
pop
sub
mov
jae
xor
lock
sub
clc
std
xor
sti
scas
into
pop
fmul
push
scas
icebp
inc
ss
and
push
sbb
inc
push
add
fcoml
add
inc
or
out
inc
das
bound
or
xor
mov
scas
dec
sub
dec
or
ret
lcall
mov
push
sub
pop
jo
pushf
arpl
cmp
and
stos
jnp
and
xchg
xchg
fwait
sbb
test
outsb
xlat
xchg
sub
adc
add
cmp
push
or
stc
xor
and
pop
in
and
bnd
push
xchg
add
lods
les
push
divb
sbb
jmp
and
movsb
divl
je
jno
mov
jb
aaa
je
sbb
xor
es
fidivs
les
fidivrs
xor
fs
and
push
fnstsw
sub
adc
lods
scas
fst
sti
out
xchg
and
xor
xor
mov
das
jl
idivb
pop
and
out
xlat
or
mov
xchg
repz
dec
cmp
sub
mov
subb
movsb
xchg
repz
mov
mov
js
pop
mov
push
xorb
sub
adc
sub
jns
sbb
inc
and
mov
call
idivb
push
jno
pop
cli
mov
cmc
cli
mov
repz
test
xor
dec
mov
mov
lret
popa
pop
popa
jne
les
sbb
lahf
and
movsl
push
jno
add
fldt
stc
movsl
out
mov
fcoml
leave
data16
sbbl
loope
loopne
sbb
sti
insl
and
gs
insb
cmpsl
add
cwtl
imul
push
pop
cmp
aaa
jnp
push
and
scas
mov
hlt
add
arpl
aaa
pop
fs
xlat
in
pop
ljmp
xchg
movsb
mov
nop
push
imul
cltd
push
cwtl
push
pop
lea
psubusw
inc
stos
jp
mull
xor
pop
push
out
shrb
inc
mov
mov
pushf
cmc
mov
jns
andb
push
mov
xor
int
add
imul
leave
enter
loopne
out
xchg
fisttpl
insb
out
cmp
add
cmc
sub
jno,pn
aaa
lods
movsb
loop
mov
xchg
pop
test
scas
and
inc
nop
jp
repnz
pop
jl
dec
sahf
inc
insb
cmp
mov
push
sub
rcr
imul
in
dec
pop
ret
pop
mov
xchg
aas
rorb
jo
or
cmp
xchg
and
sti
pop
ja,pt
jmp
cld
jo
dec
mov
sub
xchg
push
fstpl
xor
adcb
dec
rcll
cs
orl
hlt
push
push
push
fnsave
rcll
pusha
sbb
gs
jne
lcall
lock
inc
fwait
les
ficompl
imul
inc
mov
push
jg
push
add
add
test
fsts
jmpw
or
xchg
jg
inc
sbb
pop
pop
adc
mov
jo
adc
xlat
int
out
mov
sbb
call
ret
js
call
sahf
andl
add
push
jge
push
icebp
insl
sub
not
mov
fisttpll
shl
adc
mov
pop
out
mov
stos
mov
lds
out
and
cmp
and
and
adc
leave
inc
fs
rcll
or
jne
inc
push
cmp
sbb
scas
push
icebp
loopne
push
cwtl
cs
sub
mov
sub
fstpt
ror
clc
repnz
int
push
lretw
mov
xchg
rclb
rcrb
pop
aas
je
adc
lahf
les
shrb
mov
sti
xor
or
mov
mov
xchg
jl
xlat
or
test
popf
xchg
sbb
xcrypt-cbc
cmpsl
xlat
cs
sahf
fsubrp
sbb
mov
stos
and
pop
iret
add
and
cs
test
shll
push
inc
xchg
test
cmpsl
loope
push
jecxz
lea
push
jb
add
pusha
shrb
xchg
jge
pop
mov
add
cmpb
aas
cmc
std
idivl
es
cmp
movsl
aaa
out
subl
pop
sbb
xlat
outsb
cmp
cli
xchg
ds
insb
dec
adc
inc
or
adc
xor
push
mov
repnz
jne
ret
mov
jbe
loop
mov
adc
mov
jae
cs
xorb
outsb
jp
int3
cmpsb
outsb
imul
subl
sub
or
cmp
xor
in
clc
xchg
inc
inc
and
jmp
shll
data16
sahf
adc
nop
push
cli
cld
inc
shlb
mov
mov
push
dec
push
dec
mov
mov
xchg
push
sbb
push
roll
shll
dec
xchg
imul
es
in
jns
pop
mov
push
js
sbb
mov
dec
mov
jge
mov
xchg
xor
sets
stc
lret
lds
out
adc
in
inc
rcl
or
push
sbb
call
movsb
mov
arpl
nop
dec
loopne
cmp
adc
xchg
sbb
test
into
adc
inc
inc
sub
shll
inc
daa
add
mov
call
sbb
and
dec
sbb
mov
push
pushf
sahf
xchg
dec
inc
sub
int
mov
inc
stos
in
fildll
ja
mov
repz
xor
jae
sbb
rcl
sub
ficoms
pop
rorl
adc
scas
je
lods
jns
jbe
xlat
ss
aad
jmp
cs
loopne
jp
ja
fldl
aad
enter
cmpsb
dec
cwtl
xchg
mov
xor
mov
jg
and
mov
popa
in
pop
out
mov
xchg
mov
inc
xor
pop
bound
sbb
enter
rorl
mov
out
mov
decl
lret
insl
scas
xchg
aad
shll
in
add
mov
insl
push
jo
dec
dec
lods
filds
xlat
add
gs
adc
std
lahf
daa
iret
add
mov
or
mov
std
mov
jne
jne
int3
cmc
xchg
loope
mov
push
ret
push
pop
movsl
xchg
xchg
xor
rsm
outsb
incb
cli
jmp
mov
mov
inc
mov
movsb
jp
or
push
test
mov
inc
aad
cmpsb
push
out
sbb
icebp
lock
add
xchg
iret
sub
inc
mov
pushf
or
push
je
push
imul
xchg
xchg
cmp
loop
push
stc
xor
outsb
sbb
mov
pop
adc
mov
mov
and
dec
adc
shrb
mov
repnz
sbb
sbb
jmp
sti
lret
add
ljmp
shrl
xchg
fwait
mov
jae
rcrb
add
sbb
mov
jbe
xor
mov
mov
add
nop
test
inc
je
add
mov
rcrb
add
jb
and
aam
cltd
pop
inc
int
mov
gs
cmpsb
dec
rclb
jae
call
fwait
lods
bound
das
xchg
addr16
leave
das
scas
mov
popa
pop
rcll
mov
arpl
dec
int
xor
and
clc
shl
pop
sub
add
push
mov
jle
scas
mov
push
call
mov
and
dec
addr16
sbb
lea
xchg
mov
ljmp
or
mov
stos
mov
mov
mov
inc
xchg
loop
dec
es
xchg
lods
dec
xchg
mov
out
fldt
out
add
dec
daa
aam
xchg
or
je
jo
add
in
inc
test
pop
xchg
inc
insl
sub
popf
adc
addl
dec
push
inc
sbb
daa
mov
imull
fs
cmp
fildl
push
pop
in
add
shl
or
dec
loopne
addr16
ljmp
inc
les
movsl
loopne
mov
pusha
mov
mov
or
insb
fnop
mov
push
outsl
addl
mov
mull
loopne
jb
popa
insl
fnstcw
sbbl
mov
mov
movsb
repz
pop
arpl
std
jno
fwait
mov
jns
jne
aam
inc
stos
shl
add
jbe
test
mov
sub
inc
mov
xchg
dec
xor
out
es
pop
jns
push
push
and
cmpsl
cli
aad
jae
cld
scas
aad
xchg
test
xlat
push
push
leave
popa
out
cmpsl
jmp
jb
cld
cmpsb
xor
xchg
fcoml
pop
jno
or
lods
subb
pusha
addr16
cmp
ficomps
unpckhps
shrb
lea
mov
sub
lock
push
mov
push
out
sbb
inc
out
push
fcompl
or
ret
lods
sbb
aam
inc
ror
popa
mov
push
jge
pop
fimuls
adc
or
int
test
sti
dec
jle
ficoms
xor
dec
stos
sub
and
push
xchg
repnz
je
enter
xchg
inc
xchg
leave
lods
imul
std
mov
mov
push
cmc
sbb
inc
push
sub
stc
and
add
repz
mov
adc
stc
push
imul
lret
stc
or
fdivs
xor
xor
fwait
add
je
or
inc
add
into
in
ds
mov
xchg
jge
ljmp
mov
push
cmp
cmpsl
xchg
mov
int
sarb
jmp
and
fdivrp
out
push
cs
inc
or
mov
pop
xor
rclb
arpl
cmp
cmc
or
loope
and
aas
jg
bound
add
sbb
mov
jge
pop
pop
fld
stc
std
lcall
out
mov
and
mov
call
lds
mov
cld
daa
aam
dec
stc
sbb
outsl
aaa
lret
dec
cmp
dec
ret
inc
adc
addr16
adc
call
repz
ss
nop
and
scas
mov
call
cmpsb
rcrb
loopne
pop
cltd
lret
jmp
lcall
ss
iret
mov
push
push
push
lock
int3
orl
pop
test
or
stc
lods
pop
daa
and
dec
dec
xchg
jbe
sbb
pop
test
addl
nopl
or
adc
or
movsl
mov
or
push
aaa
in
cmp
adc
outsl
sub
in
shlb
cltd
insl
push
icebp
push
mov
xor
pusha
add
inc
andb
scas
jnp
lock
pushf
clc
jmp
jnp
in
dec
sub
jecxz
mov
xchg
loope
adc
loope
pop
std
push
push
rol
mov
dec
ss
outsb
dec
mov
cmp
rsm
sub
cltd
jae
loope
test
addr16
inc
add
jnp
fldl
dec
mov
jae
divb
push
adc
xlat
mov
negb
jp
mov
lock
or
push
inc
inc
fsubl
cmp
pop
cli
mov
nop
pop
xchg
ficomps
out
das
lds
aad
xchg
leave
jge
inc
mov
movsb
aam
mov
scas
js
pop
jnp
mov
or
sub
and
mov
push
dec
mov
xor
inc
incb
insl
mov
js
pushf
shrl
in
aas
int
pop
icebp
cmpsb
addr16
mov
and
fcoms
in
cmp
fs
int
xchg
push
imul
scas
dec
inc
jp
push
mov
fwait
cmp
mov
icebp
dec
test
xchg
divb
pop
out
sub
ja
xor
mov
mov
into
push
cmp
scas
or
push
push
mov
and
sbb
js
xor
sbb
stos
adc
ret
cmp
ret
dec
dec
imul
mov
pusha
mov
js
clc
dec
add
je
ficoms
xor
jnp
push
pop
test
lods
cmp
add
repnz
subb
mov
add
xchg
pop
ficoml
aad
push
mov
and
fwait
aad
cmp
add
fs
dec
inc
pop
push
lods
movsb
mov
xchg
in
in
hlt
int3
sub
cmp
or
sbb
insb
fs
dec
inc
pop
push
lods
movsb
mov
xchg
in
in
hlt
int3
sub
aas
cmp
sbb
insl
fs
dec
inc
pop
push
test
mov
popf
in
loopne
hlt
enter
xor
adc
test
xor
insb
fs
je
fcoml
test
xor
loop
sarb
iret
mov
pushf
orb
sbb
inc
cmp
xor
js
js
mov
cwtl
loop
sarb
mov
xchg
clc
testb
sbb
push
cmp
inc
pop
and
js
mov
cwtl
sti
test
mov
mov
or
inc
dec
sub
sub
push
dec
pusha
pop
insl
clc
mov
call
arpl
jno
insl
mov
imul
in
repz
repnz
xchg
leave
ret
bound
jge
out
jno
mov
mov
cmpsl
jl
loop
cli
or
loope
popf
int3
cmp
arpl
dec
bound
mov
jmp
cmp
sbb
enter
or
clc
pop
sbb
ror
test
or
jne
addr16
and
xlat
call
mov
js
cmp
sbb
xor
in
inc
xchg
and
cmp
pop
adc
into
or
mov
cmp
pop
ret
jns
xlat
in
repnz
mov
mov
or
jp
dec
cmp
sub
push
repnz
mov
popf
out
sbb
pop
daa
cmp
adc
add
fisttpl
lods
mov
in
call
push
jne
push
aaa
pop
inc
add
and
jne
jbe
repnz
lret
mov
xchg
xchg
clc
orb
sbb
push
cmp
xor
push
repnz
loop
sarb
mov
or
bound
push
cmp
xor
push
repnz
icebp
and
cmp
cmp
pop
or
pop
jmp
sahf
stos
dec
gs
jbe
fdivrl
ret
test
repz
xor
or
sub
jp
lods
xchg
int
fwait
outsl
adc
cs
pusha
push
sti
addb
loope
xor
setbe
gs
bound
gs
push
mov
sbb
pop
fistpll
fcmove
xchg
mov
pop
mov
push
mov
iret
cmp
cmp
test
or
xchg
adc
sbb
jo
insl
scas
mov
mov
lds
fwait
push
ljmp
cli
in
xchg
arpl
add
js
adc
inc
push
addr16
mov
leave
shrb
repnz
test
push
cld
and
jae
lea
roll
ds
dec
mov
fmulp
pop
cmp
mov
xor
lcall
dec
iret
dec
xchg
mov
adc
jno
sub
ret
test
sbb
adc
lea
mov
jmp
sti
mov
pop
aas
jno
std
mov
jl
mov
ret
loop
dec
or
mov
fnstenv
fcmovu
sbb
sub
cmp
mov
popa
aad
mov
mov
jge
jl
imul
pop
sub
xchg
push
xchg
mov
jbe
sub
ret
mov
mov
leave
daa
or
jns
xchg
imull
sbb
stc
or
pop
sbb
fucompp
xchg
shrb
fiadds
mov
subb
jge
cmp
rcrl
mov
mov
out
mov
sub
je
adc
ja
push
ja
inc
int3
cmpsb
in
or
jnp
sti
cmp
mov
adc
out
movsb
fsubl
ss
pop
sbb
lock
xor
fsubrs
cmp
jg
push
pop
arpl
pop
add
add
into
es
scas
movsl
inc
les
mov
stos
sbb
cli
outsl
ret
mov
mov
and
mov
and
add
mov
es
jnp
adc
pop
popf
push
inc
push
icebp
mov
test
insb
xor
nop
cmc
or
loop
mov
mov
stos
push
push
ljmp
loope
adc
es
dec
stos
push
add
lret
mov
ror
or
les
shrb
cmpsb
aam
out
rcrb
sbb
adcl
lds
arpl
dec
out
mov
leave
pop
fstl
js
pop
cmc
fisubrs
pop
jp
pop
push
adc
test
pop
or
mov
shll
xchg
mov
dec
mov
mov
cmp
or
push
aad
push
mov
pushf
mov
xor
call
mov
in
or
cltd
test
mov
rcl
mov
inc
into
lret
loope
popf
hlt
pop
cmpsl
inc
insb
sub
aad
mov
pop
out
testb
push
daa
xor
scas
les
icebp
lcall
scas
mov
cmp
mov
adc
dec
inc
ret
pop
inc
test
cmp
ss
in
in
inc
int3
inc
sub
adc
jg
pop
pusha
in
dec
pushf
mov
popa
mov
lret
xchg
pop
cmp
jecxz
cmp
ja
dec
jmp
rcll
jg
pushf
mov
scas
xchg
sub
mov
xorb
lahf
cmp
xorb
inc
cmp
cli
stos
pop
sub
popa
rorb
in
xchg
pop
je
inc
and
aas
loop
filds
or
cmp
dec
pop
aam
mov
inc
test
push
mov
add
std
push
jl
orb
das
lahf
fcoml
xchg
pop
shrb
xorl
dec
jne,pt
imul
clc
xchg
mov
faddl
ficomps
popa
aas
in
hlt
loope
push
jl
int3
imul
cmc
in
rcrl
mov
inc
cmp
cmp
sbb
aam
sub
mov
mov
addl
nop
sbb
add
mov
outsl
inc
mov
dec
push
pop
sub
xchg
cltd
cmp
inc
mov
and
insl
pusha
xchg
mov
nop
insb
dec
outsb
sbb
in
lods
scas
mov
testl
mov
and
mov
fiadds
mov
outsl
adc
add
jnp
xchg
adc
fnstsw
nop
cmp
sbb
enter
mov
cmp
bound
or
popf
cltd
iret
pop
and
in
dec
enter
inc
js
fcomp
jo
cmp
sbb
sub
mov
pop
cli
add
mov
out
jg
jge
arpl
push
and
sahf
insl
addr16
jne
add
imull
add
xchg
xor
mov
aad
and
mov
notb
mov
or
ljmp
mov
jae
xorl
jmp
xchg
xchg
dec
add
cmpsl
dec
fiadds
push
mov
jae
mov
adc
adc
xchg
loopne
pop
and
js
mov
push
mov
pop
mov
or
dec
jbe
mov
into
or
pusha
sarb
js
test
repnz
sub
xchg
cli
push
mov
jbe
cmp
xor
adc
test
sarb
aaa
jns
push
xor
popf
mov
inc
mov
cs
les
jl
iretw
mov
mov
mov
int3
fisubrl
jne
jo
jo
cmp
in
scas
pop
imul
sub
mov
popf
sub
test
out
and
mov
inc
enter
cltd
lods
ret
bswap
aas
pop
cltd
loope
fcomp
jmp
addb
sbb
and
out
or
sbb
fs
xor
fwait
and
xchg
sub
and
jno
in
daa
insb
dec
mov
xchg
push
jmp
in
out
rcrb
inc
cmpsl
inc
js
fcompl
xor
jp
cs
les
mov
cmp
roll
ljmp
cmp
clc
mov
dec
mov
cmp
rcrl
cmc
imul
xor
jns
repz
or
jle
rcr
sub
call
stos
xor
icebp
lock
cmp
loopne
stos
data16
movsb
std
popf
push
jecxz
mov
fwait
scas
ret
dec
pop
xlat
ja
cmpsl
cltd
xor
adc
jg
dec
xlat
xchg
hlt
or
mov
jae
dec
cmc
mov
insb
negl
aaa
inc
sahf
jb
jecxz
outsb
sbb
mov
xor
ss
lock
jg
js
test
or
inc
negl
and
repnz
mov
push
sub
push
lock
icebp
mov
push
rorb
call
mov
inc
xchg
sbb
push
sbb
sahf
jns
jg
pop
or
dec
push
ljmp
shl
divb
shll
in
xor
xchg
mov
inc
lahf
mov
pusha
push
out
fidivl
push
inc
push
or
jg
out
pop
mov
ror
xchg
cmp
mov
lcall
sbb
daa
lds
xor
and
jge
xor
aaa
xor
call
repz
adc
and
in
mov
or
repz
lods
fwait
lock
cmp
or
push
loop
pop
outsl
push
mov
inc
roll
push
dec
mov
jb
shll
jmp
jae
mov
mov
sti
mov
jo
in
mov
pop
shrl
add
test
mov
das
or
int
fcmovne
pop
in
stc
push
mov
bound
mov
mov
cs
movsb
sti
xor
loopne
dec
cli
sub
shlb
mov
sub
fmull
iret
scas
dec
lods
push
xchg
mov
pop
popa
dec
push
imul
mov
int3
jg
mov
push
daa
fdivr
dec
mov
insl
and
xchg
shr
mov
icebp
push
and
in
cltd
pushf
leave
movsb
mov
arpl
jecxz
adc
gs
mov
stc
imul
movsb
idivl
mov
movb
jmp
dec
loope
adc
fdivrp
add
and
push
sbb
in
shlb
in
imul
ja
xor
inc
add
add
lock
scas
cmpsl
shlb
jmp
loopne
sbb
mov
xchg
xor
inc
cltd
sahf
and
pop
cmp
push
pop
mov
push
mov
jge
jl
jns
mov
sbb
adc
cmpsl
add
out
sub
daa
xor
dec
or
push
insl
cld
dec
rcr
iret
pop
out
push
aas
adc
mov
mov
mov
ss
test
mov
sub
xor
xor
dec
mov
jns
dec
push
pop
dec
mov
lods
lods
aam
lret
sbb
pop
add
pop
popf
nop
out
aas
scas
add
int3
xor
les
enter
dec
cmp
inc
pushf
fadds
insl
mov
aaa
pop
adc
clc
lods
xor
sub
jecxz
or
or
mov
jae
jno
dec
mov
lock
and
test
jbe
xchg
jnp
mov
and
insb
lahf
repz
stc
inc
sub
sub
add
ret
ss
paddb
pusha
out
fs
jle
scas
mov
jo
aaa
or
cmp
xor
push
push
sbb
mov
out
call
cwtl
test
es
ja
push
aaa
sub
into
inc
fucomi
roll
je
pop
mov
mov
pop
or
push
mov
cmc
outsb
cwtl
and
push
cmp
xchg
lret
and
scas
or
sub
mov
cmp
std
jg
push
negl
stc
cmp
mov
pusha
int3
in
fmull
cmp
xchg
xchg
fwait
or
lret
sub
das
mov
xchg
xchg
repz
in
out
or
sbb
mov
jmp
icebp
adc
xor
push
or
dec
push
loopne
sub
testl
call
xchg
cmp
mov
lods
cld
das
cmp
sbb
fs
call
subb
push
je
push
cmp
mov
std
pop
mov
in
mov
cwtl
hlt
popf
dec
mov
sbb
dec
pop
pop
fprem1
xchg
jno
sub
dec
dec
mov
arpl
aam
loop
push
inc
sub
xor
mov
push
cld
dec
or
jo
add
mov
jbe
mov
stos
cwtl
mov
fwait
and
push
pushf
testl
inc
js
ss
push
and
or
xchg
xchg
andl
popf
pop
xlat
notb
test
inc
outsl
pop
jmp
int3
sar
sbb
lahf
pop
fisubs
out
sbb
pop
ja
push
dec
js
xchg
push
mov
add
lcall
lea
sub
inc
in
and
cmc
xchg
xchg
mov
arpl
cmp
outsb
xor
nop
mov
es
dec
outsb
movsb
pop
aad
mov
xor
or
movsl
js
mov
outsb
iret
into
into
pop
pushf
inc
pop
test
mov
cmpsb
scas
adc
push
std
xchg
mov
pop
les
call
xor
add
inc
push
popf
inc
mov
lods
cmp
aaa
sbb
add
mov
xlat
in
lcall
lock
mov
jne
popf
mov
dec
xor
add
and
cmp
cmpsl
pop
rcrl
pusha
mov
push
pop
test
pop
sti
sbb
mov
ljmp
je
out
xchg
xor
cmpsl
sbb
enter
inc
loope
popa
pop
xor
out
mov
push
cmp
xor
fiaddl
and
cmp
das
shrl
in
or
xor
pop
dec
cmp
clc
out
ljmp
push
cld
test
aaa
sub
cmp
mov
xchg
aad
or
adc
lea
mov
in
jno
cmp
pop
fs
pop
cmc
cltd
add
rol
xchg
add
dec
jle
sub
pop
mov
cld
cmpsl
das
lret
mov
test
cld
imul
jecxz
test
xchg
in
mov
mov
mov
push
cmovne
adc
sar
imul
push
xchg
fs
and
mov
test
sub
pop
shr
repz
repnz
sbb
xchg
popa
scas
lcall
fsubs
xor
mov
cmp
test
pop
clc
cli
ss
mov
xorb
mov
add
addr16
daa
xor
sub
cmc
hlt
repnz
scas
pop
js
sbb
inc
mov
push
xchg
pop
fidivrl
fs
insl
ret
mov
insb
fs
fstpt
cmc
xor
sahf
divb
xor
pop
lea
fdivl
call
push
addl
push
insb
insb
sti
movsl
jge
mov
adc
sub
pop
pusha
xchg
push
xor
adc
pop
or
pop
test
int3
and
fs
sub
aaa
jo
mov
nop
mov
call
cmp
test
lds
data16
xor
and
lea
mov
cmp
shrb
jp
jne
pushl
cmp
bound
xchg
popa
xchg
adc
or
sti
es
mov
cmp
pop
in
insb
push
std
adc
or
sbb
repz
leave
and
sahf
push
test
cli
push
xor
mov
xchg
sbb
or
mov
xchg
data16
jge
dec
mov
aas
dec
in
adcl
inc
mov
arpl
jbe
inc
sub
aad
push
enter
dec
lret
inc
aad
sub
sbb
lods
push
rolb
adc
outsb
jne
sti
pop
mov
jmp
and
mov
stos
mov
insl
mov
or
loope
adcb
imul
in
aaa
mov
and
test
outsl
adc
sub
push
adc
bound
jo
and
push
je
cli
mov
push
jl
cld
push
in
adc
roll
negl
outsb
js
mov
push
jge
rol
lods
and
insb
jecxz
xchg
cmovb
inc
rcll
xorb
pop
jecxz
push
dec
lcall
push
pop
cltd
ljmp
test
pop
inc
pop
sbb
jns
inc
lock
addr16
sub
pop
cmp
cs
rcll
cmc
lods
fcomps
or
inc
dec
mov
mov
and
mov
in
sub
and
mov
div
sub
jmp
test
jp
add
cli
lods
in
mov
out
add
xchg
lods
inc
mov
sbb
xlat
hlt
pop
jp
mov
repnz
xchg
mov
mov
daa
aad
push
in
fwait
pop
or
popf
inc
jno
xlat
pminub
push
stc
push
mov
stos
and
mov
bound
xorb
add
aam
enter
ds
mov
lods
xchg
dec
call
pop
in
sub
push
add
or
das
fists
pop
movsb
jo
nop
addps
pop
rcll
imul
daa
scas
icebp
cmp
inc
orb
mov
test
icebp
push
push
pop
push
insl
jne
stc
push
frstor
mov
dec
push
rorl
fnsave
lahf
add
imul
outsb
cmp
cld
mov
mov
jae
mov
scas
sbb
sbb
icebp
adc
mov
lea
out
inc
in
movmskps
adcl
jbe
mov
and
gs
addr16
push
mov
int
mov
cmpsb
pop
out
cmpl
jl
fdivp
pop
sub
mov
jge
sbb
fstl
in
mov
push
pop
lea
xor
hlt
bswap
out
inc
lahf
fstpt
add
sti
mov
jnp
or
mov
jns
repnz
sbb
gs
mov
iret
loope
popa
add
cmp
lods
daa
pop
mov
fwait
imul
xor
adc
fld
lock
sub
popa
xchg
aaa
xlat
dec
jo
cltd
out
and
cmp
lods
loope
or
jbe
xchg
adc
inc
test
inc
test
stos
ljmp
pop
imul
frstor
aam
mov
mov
mov
mov
divb
xor
das
ret
mov
jb
mov
lcall
popa
rclb
mov
faddp
xor
cmpsb
addr16
sub
rolb
in
jns
or
pop
mov
addb
ret
and
cwtl
repz
subps
es
pop
cli
outsb
and
inc
fildl
adc
inc
push
mov
adc
jl
lods
cli
fildl
push
lret
mov
and
inc
lahf
aam
dec
adc
mov
xchg
testl
fld
lods
mov
and
xor
movsl
bound
leave
movsb
out
sbb
adc
jo
add
test
mov
movsl
je
push
add
mov
push
ss
push
add
call
data16
xor
aam
shll
sbb
inc
jmp
cld
aaa
adc
int
aam
jne
roll
add
inc
sbb
cmp
rcl
shll
jmp
fstpl
push
pop
mov
inc
add
pushf
xor
sti
push
cld
inc
xchg
sbb
adc
push
xor
or
pop
add
xchg
imul
jb
pop
sub
pop
fs
cmp
cltd
and
cld
pop
push
fldcw
push
icebp
sbb
sti
das
mov
jb
jl
outsl
daa
sbb
or
sub
enter
dec
ljmpw
inc
out
bound
orb
xchg
jb
cli
sub
mov
sub
mov
test
loopne
xor
loop
and
xchg
push
shlb
mov
outsb
add
push
push
mov
fwait
adc
mov
add
lcall
mov
loop
nop
cltd
jecxz
xlat
cmp
dec
mov
cld
mov
iret
adc
xor
pop
add
bound
bnd
shrd
sub
js
scas
add
or
icebp
imul
fwait
xor
pop
lods
push
out
or
push
daa
call
pop
push
mov
inc
add
xor
xor
orb
push
aam
xor
cmpsl
lods
sbb
adc
xchg
enter
jb
test
out
lret
lret
out
aam
hlt
push
sub
std
xor
out
lea
test
xor
test
push
inc
sbb
xor
xchg
jge
stc
js
ljmp
fwait
sub
int
aam
rcrl
into
inc
ja
testb
aad
lret
or
lcall
fistpll
ss
cmp
sub
sbb
inc
dec
jne
inc
mov
imul
fwait
daa
arpl
lcall
cmp
cltd
pop
add
mov
movsb
mov
jbe
xorl
sahf
shlb
imull
movsb
mov
pop
xlat
bound
popa
cmp
mov
dec
sbb
add
sar
pop
mov
int3
mov
xchg
mov
movsl
fists
fs
popa
std
pop
jge
fisubs
leave
adc
push
test
sub
xor
aad
mov
fnstcw
xchg
mov
jg
push
fstpt
in
stos
xchg
mov
adc
cmpsl
mov
mov
mov
inc
leave
dec
in
mov
xor
and
lahf
daa
and
jne
lret
lret
push
sub
dec
pop
cmpl
and
jno
test
shrb
test
pop
outsb
dec
mov
stc
xchg
and
pop
mov
jmp
adc
add
sbb
inc
xchg
and
aas
loopne
cmp
fs
aam
js
fsubs
cmp
push
push
pop
xor
cmp
mov
fdivrl
fcomp
enter
test
arpl
out
mov
adc
aad
test
jecxz
push
or
mov
mov
dec
and
aam
push
mov
push
pop
aas
xchg
rcrl
xchg
xor
insb
mov
in
imul
mov
pushf
cmovnp
imul
sub
subl
shl
xchg
into
cmpsl
or
pop
clc
mov
jbe
mov
and
lcall
outsl
test
in
xchg
repnz
pop
les
add
imul
das
sbb
jmp
iret
mov
cli
data16
movsl
dec
pop
mov
out
test
imul
lock
jne
imul
push
or
push
cmp
in
insl
mov
cmp
xchg
shll
ret
pop
cli
mov
push
jne
jl
adc
xor
fldenv
cs
hlt
in
push
loop
sarb
mov
or
bound
push
cmp
xor
push
repnz
loop
sarb
mov
or
bound
push
cmp
xor
push
repnz
loop
sarb
mov
or
bound
push
cmp
xor
push
negb
ret
fsubs
or
enter
xor
xchg
insl
xchg
jge
xchg
or
or
out
add
xor
inc
mov
jb
cmpb
cmp
jnp
dec
loop
xchg
and
jmp
cli
push
lret
and
jb
adc
xchg
adc
add
push
or
ljmp
out
inc
les
mov
pop
cmpb
inc
xlat
jne
arpl
xchg
mov
test
loopne
jb
mov
aam
sub
mov
or
or
lods
ret
test
mov
daa
inc
inc
je
xchg
and
lods
xchg
daa
arpl
cmpsb
cmpl
inc
mov
jp
pop
inc
inc
jns
popl
scas
fs
popa
mov
sub
dec
ret
mov
std
roll
pop
into
outsb
inc
test
mov
les
icebp
outsl
aaa
cmp
mov
repnz
in
xor
cli
push
inc
jae
lret
inc
cmp
inc
mov
mov
test
push
stos
mov
inc
jp
fstpl
lods
sub
imul
cmpb
or
or
jnp
popa
rorb
inc
jb
test
jp
outsb
jecxz
lret
pop
xchg
outsb
loope
pushf
movzbl
mov
filds
stc
push
cmc
pop
xchg
mov
shrl
sbb
daa
mov
sahf
test
inc
out
push
mov
mov
mov
aam
aad
repnz
adc
pop
repnz
add
xor
inc
sti
push
lret
cmpb
or
jnp
dec
loop
repnz
add
xor
inc
sti
push
lret
cmp
push
add
inc
pop
push
icebp
hlt
mov
enter
lods
cwtl
push
and
divb
add
dec
push
dec
out
mov
lret
scas
fucom
add
and
aad
leave
ficoml
xchg
jmp
lahf
pop
ja
sbb
sbb
jnp
pop
or
dec
in
add
test
jl
movsb
cmp
mov
jo
popf
fnstcw
divb
sbb
jnp
and
hlt
imull
mov
pop
inc
fdivr
ds
or
das
pop
inc
paddsb
adc
cmp
mov
jp,pt
ja
xchg
cmpsl
testb
aas
fildl
push
push
rcr
ret
or
cmp
inc
pop
mov
push
rcr
or
add
pop
cmp
adcb
xchg
push
fsubrs
pop
add
ja
insb
lods
lahf
sub
push
cmp
sbb
addr16
mov
mov
and
mov
xchg
jecxz
sahf
fucomi
test
mov
xchg
and
push
and
dec
adc
xor
mov
test
faddl
sti
mov
jbe
mov
outsl
mov
jp
jle
mulb
sbb
xor
movsl
or
cmp
aam
dec
stos
int3
and
sbb
js
shlb
xchg
cmp
call
das
lcall
push
bnd
pushf
sbb
repnz
inc
inc
dec
int
push
cmp
and
hlt
or
std
lahf
sti
xchg
cltd
xor
andb
lods
cmp
aas
xchg
push
sub
gs
and
sbb
adc
sbb
scas
mov
scas
and
jg
repnz
int
pop
int
mov
xor
inc
xchg
mov
dec
mov
push
adc
std
mov
add
dec
push
int3
stos
popf
mov
mov
shrb
out
nop
aad
fwait
dec
dec
shl
adc
inc
dec
sbb
pop
push
xor
xchg
mov
jecxz
pushf
adc
pop
jmp
fimull
out
inc
mov
mov
mov
daa
imul
adc
mov
and
or
jg
daa
sti
inc
test
and
imul
push
stos
xchg
ret
inc
add
ficomps
xlat
adc
inc
int3
fs
push
inc
mov
fs
lods
test
fstps
shlb
fwait
dec
lret
sbb
push
test
inc
xchg
mov
ljmp
jle
push
jb
ret
sahf
lret
cmp
mov
inc
mov
pop
mov
pop
outsb
inc
dec
adc
loope
mov
je
xchg
loope
inc
adc
xor
jo
andb
sbb
mov
mov
dec
sbb
dec
sbb
outsl
ds
lods
bnd
mov
jns
or
imul
adc
rcrl
dec
hlt
pusha
lret
xchg
stc
push
lea
in
cli
outsl
sahf
outsb
cmpsb
jo
ret
inc
mov
aaa
xor
pop
cwtl
in
gs
push
mov
std
arpl
das
rcrb
js
xchg
lahf
xchg
or
mov
scas
adcb
int3
aad
and
xchg
pop
aaa
mov
add
popa
push
xor
add
xchg
push
mov
aaa
xchg
sub
stos
xchg
popa
into
jle
cmpsb
insb
cmp
adc
incb
in
sbb
cmp
jmp
lret
mov
into
jae
pop
mov
xor
cmp
int3
adc
hlt
arpl
aaa
xlat
loope
imul
call
mov
loop
pop
jge
sub
aas
add
sahf
mov
fdivs
jnp
sub
fwait
iret
sbb
jmp
daa
adc
push
mov
dec
cwtl
int3
fwait
mov
xchg
mov
push
rcrl
mov
lea
adc
dec
ret
je
rcl
lea
pop
lret
decb
das
mov
mov
mov
cmp
mov
cmp
dec
push
mov
mov
push
sti
mov
mov
push
xchg
gs
pop
pop
enter
mov
int3
inc
pop
cltd
xor
fbstp
ret
out
idiv
lret
jno
inc
sbb
mov
adc
jo
or
repnz
mov
aad
mov
ds
push
test
dec
or
stos
jnp
push
shlb
push
lods
in
aaa
jne
cwtl
negb
das
xor
or
mov
mov
test
dec
mov
rorb
in
add
movl
and
inc
imul
aaa
sbb
xchg
pop
rorb
addr16
sub
push
cmp
shll
pop
sub
and
dec
xor
xchg
push
hlt
fwait
xchg
pop
mov
adc
mov
or
iret
inc
cmc
mov
cmp
pop
int
jns
mov
add
mov
popf
pop
mov
fldl
mov
negl
push
insl
pop
sbb
mov
mov
xlat
cmp
add
lods
pop
das
movsb
or
lods
ret
das
or
mov
data16
sahf
jge
inc
add
cmp
popa
int
and
dec
mov
incb
cmp
test
in
mov
lock
mov
pushf
test
sub
xchg
loope
mov
xchg
xchg
lock
je
add
xchg
cltd
lods
jl
push
nop
inc
fstpt
mov
lret
jecxz
movsl
pusha
jbe
aas
xor
and
imul
inc
lahf
aaa
jns
adc
call
dec
insl
xor
fsin
aad
push
mov
adc
inc
jno
lods
lods
out
fmuls
shl
sub
imul
mov
mov
gs
xor
gs
fisttps
cwtl
add
push
pop
stos
mov
int
jne
xchg
lret
pop
outsb
repz
xor
xchg
shrl
add
test
jae
int
pop
sarb
sahf
or
mov
pop
pushf
adc
jmp
push
subl
mov
lock
iret
repnz
cmp
cmpsl
mov
inc
adc
mov
repz
and
adc
hlt
adc
and
add
out
int3
xor
test
push
stos
inc
jne
pop
add
push
xor
leave
and
mov
sub
sub
in
jg
in
adc
shlb
mov
mov
enter
cmp
sub
xchg
ret
sahf
push
jmp
and
aam
inc
movb
and
in
jb
jl
mov
mov
neg
loopne
in
sub
stc
xchg
xor
jg
jno
push
insb
push
lock
xchg
lahf
jle
lahf
jle
stos
mov
inc
sub
insl
in
fiaddl
xchg
dec
xchg
and
mov
icebp
insb
sub
enter
nop
mov
jbe,pn
or
psubusb
scas
mov
mov
hlt
cld
add
shr
pmaxsw
call
pop
jg
xchg
fisubrs
les
mov
mov
sub
js
sbbb
in
inc
xchg
dec
ja
adc
or
pop
hlt
pop
sbb
adc
ret
and
js
sub
and
mov
cltd
mov
jmp
push
and
sbb
or
xor
adc
stos
dec
inc
pop
mov
scas
and
mov
adc
scas
jmp
jge
inc
ss
adc
enterw
rolb
mov
test
or
cmp
ja
mov
jae
lods
les
lahf
fwait
lret
mov
adc
repnz
std
fidivs
inc
xchg
popa
clc
cmc
push
mov
jns
test
push
mov
jp
push
sub
insl
into
lahf
fs
sub
out
into
leave
cmpsb
popa
test
add
pop
negb
cmp
ret
mov
mov
adc
jmp
mov
bound
movsb
lret
push
xchg
js
out
mov
push
xlat
out
mov
arpl
dec
shrl
mov
xchg
cld
imul
dec
adc
or
sahf
jne
cmc
fisttpll
js
filds
test
jno
sarl
imul
adc
sub
je
mov
ds
flds
outsl
bound
inc
repnz
mulb
testl
mov
inc
add
jmp
subb
lods
xchg
mov
dec
into
es
ljmp
ja
imul
and
add
push
push
in
test
js
push
pushf
mov
or
shr
stos
out
mov
mov
sub
or
pop
push
xor
lcall
mov
push
pop
add
inc
mov
test
pushf
movsb
cmc
sbbl
dec
pop
icebp
enter
jmp
mov
adc
loopne
push
push
jp
loopne
sub
lods
mul
sbb
jb
adc
popf
mov
fmull
das
mov
jne
mov
mov
out
int3
and
xor
push
push
scas
sub
dec
negl
push
addb
and
arpl
and
adc
push
movsb
hlt
xlat
nop
xchg
fmul
jge
aam
js
aad
cwtl
sbb
ds
adc
hlt
lock
mov
xchg
add
das
jge
ja
call
rcll
hlt
outsl
xchg
sbb
sub
adc
aam
pop
iret
dec
shlb
cli
mov
lcall
into
std
stos
in
lcall
inc
shll
jecxz
or
sbb
add
pop
add
inc
in
and
orl
sbb
dec
sub
pop
notl
insb
mul
sub
outsb
imul
xchg
repz
cmc
lods
push
imul
sub
jmp
stos
mov
cld
ret
mov
fcomi
out
lea
mov
ret
test
inc
mov
sbb
pop
lret
xor
dec
mov
push
mov
daa
and
hlt
dec
std
pop
or
scas
fcoms
addr16
lea
fcmovbe
mov
sbb
xor
push
mov
jae
pop
mov
add
adc
cmp
push
push
jbe
mov
inc
jns
mov
xchg
cmpsl
sub
cmpsl
inc
mov
shr
lock
negl
sub
xchg
pop
xchg
push
xchg
sbb
cmpsb
rcrl
mov
int3
mov
mov
sbb
fdiv
mov
call
mov
or
adc
shrb
pop
popf
or
push
adc
mov
sub
test
test
andnps
lods
bound
dec
mov
aam
jo
addb
sbb
sldt
dec
jecxz
rcrl
jecxz
pop
out
xchg
test
mov
push
jg
push
cld
inc
andb
sub
js
jl
hlt
adc
mov
in
push
aam
stc
outsl
fldcw
in
aad
sbb
xor
rclb
pop
dec
pop
push
enter
adc
mov
js
jle
std
xchg
xlat
stos
sbb
jge
xchg
cli
jnp
gs
xchg
scas
leave
dec
add
sub
stos
and
jl
ds
dec
push
mov
cltd
es
mov
push
pop
pop
pop
faddl
aad
das
test
rcll
xchg
lock
or
aaa
cmpsl
clc
arpl
xchg
pop
mov
or
fidivrs
pop
nop
les
orl
or
xchg
lcall
xchg
mov
add
ret
wbinvd
dec
sub
xchg
lods
xchg
mov
sub
inc
mov
imul
mov
push
clc
ss
xchg
cmp
rorb
mov
jae
insl
add
push
scas
out
lret
lods
adcb
jmp
int
jbe
jmp
in
or
push
daa
ljmp
dec
negl
add
jb
mov
adc
xchg
sub
inc
or
call
dec
mov
push
adc
mov
xchg
rcll
sub
arpl
xor
clc
sbb
pinsrw
mov
mov
imul
jg
xchg
aad
jmp
xchg
jl
xchg
mov
sub
iret
in
jno
in
movswl
pop
push
adc
pop
jge
in
pop
xchg
pop
sbb
bound
mov
faddl
cmp
jno
dec
out
clc
inc
sbb
pop
fwait
stc
xchg
orb
scas
add
fistpl
aas
aad
iret
cmp
ljmp
push
mov
shlb
cmp
shlb
sbb
bound
mov
lods
add
adcl
es
push
out
jmp
pusha
lds
mov
pushf
das
mov
or
inc
jecxz
xor
mov
ret
es
cltd
jmp
pop
rcrl
cmc
ret
add
lret
in
js
xor
lds
adc
shl
jmp
sub
cmp
jne
mov
shrb
cmp
out
push
fs
jl
in
cmp
dec
ret
push
dec
push
push
mov
cmp
push
push
pop
mov
sahf
dec
mov
adc
dec
std
add
imul
pushl
imul
dec
fadds
insl
aas
cltd
push
inc
jp,pt
adc
xor
mov
mov
dec
hlt
mov
pop
xlat
cmp
mov
ret
mov
sub
or
mov
cmp
sub
addl
insb
xor
mov
aam
lods
outsb
nop
sub
xor
test
ds
dec
pop
xchg
mov
pop
pop
push
test
movsb
mov
jecxz
mov
or
std
std
cmp
decb
popa
jno
es
adc
in
jbe
test
xlat
pushf
std
xor
or
jb
stos
scas
lods
inc
adc
in
sbb
push
inc
rcrb
iret
sbb
mov
xor
mov
je
lods
fdivrl
or
mov
repnz
sarb
inc
pop
out
nop
out
pop
mov
in
subb
add
adc
mov
ffreep
lahf
mov
cmp
cld
or
out
jo
loopne
jp
jae
xor
add
imul
adc
push
pushl
movsl
outsl
enter
inc
dec
out
pop
inc
push
hlt
dec
fwait
mov
test
lea
enter
add
and
and
mov
adc
popa
clc
mov
imul
loope
scas
sahf
popf
cmp
jne
cmp
data16
xor
mov
pop
insl
and
adc
ret
mov
mov
out
int
int
fwait
jge
addps
jp
arpl
push
rcl
mov
fidivrs
int3
mov
lret
pop
pop
out
push
movsl
mov
sbb
pushf
mov
xlat
xor
mov
mov
inc
xchg
shrl
loopne
shlb
mov
imul
adc
int
jno
outsl
add
pop
es
push
or
stc
mov
pop
push
ret
iret
popa
push
pop
outsb
pop
out
push
pop
sbb
and
jae
fdivrs
loope
movsb
fiaddl
lods
sub
push
repz
sub
jne
into
testl
cmp
and
fs
push
jnp
jae
or
dec
lret
add
cmpsl
stos
xor
dec
dec
mov
jle
xlat
call
sahf
fnsave
stc
and
arpl
jo
xchg
jne
pop
lcall
adc
enter
gs
jp
xchg
pusha
movsb
mov
xchg
hlt
pop
inc
inc
mov
insl
push
sbb
jmp
gs
ja
xor
jg
adc
jo
mov
add
or
dec
jecxz
addb
xchg
adc
sahf
mov
fdivs
or
jmp
scas
xor
jno
xlat
add
mov
imull
je
mov
xchg
pushf
cmpb
daa
mov
in
cli
pop
and
push
test
out
ret
lds
pusha
jbe
pop
adc
push
xor
lea
ja
test
fisubrs
dec
in
rcr
shlb
add
pop
adc
cmp
into
or
sbb
mov
dec
mov
sub
lret
push
popa
outsl
mov
and
mov
out
movsb
mov
test
shrl
cmp
pop
mov
jbe
push
sub
ja
mov
sbb
mov
sub
pop
push
xorl
mov
ret
and
in
jp
lods
jns
or
jns
push
mov
psubw
mov
jmp
repz
pop
rclb
jmp
decl
or
cmpsb
fsub
pop
cli
pushf
repz
push
sbb
les
or
xor
sahf
sub
sub
in
jp
sahf
addr16
in
mov
lahf
push
or
inc
pop
popl
in
ss
xchg
xchg
pop
push
xor
pop
not
mov
push
js
fbstp
and
sub
mov
or
mov
ret
sbb
xchg
mov
jle
inc
pop
mov
test
clc
fmulp
loope
rclb
fdivs
inc
out
js
xor
inc
push
jle
scas
and
or
xor
je
pop
push
lods
or
mov
test
imul
mov
push
jl
inc
xor
cmpsl
in
adc
cmp
mov
inc
movsl
rorb
xlat
dec
push
sbb
shlb
jo
outsb
pop
xor
xor
daa
inc
mov
pusha
popa
dec
jecxz,pn
pushf
adc
dec
dec
sub
and
mov
aam
fidivl
jo
lods
stos
shl
loope
xchg
cmp
insb
hlt
out
pop
adc
cli
repnz
inc
sub
mov
lods
pushf
sub
mov
adc
scas
addb
jae
lcall
push
sbb
mov
mov
pop
sti
stc
cmp
ljmp
add
and
pop
cmpsl
and
imul
dec
mov
sbb
test
fdivrl
cmc
arpl
lret
andl
shlb
test
mov
or
inc
out
imul
sarb
lret
stos
lds
arpl
mull
adc
std
dec
push
daa
xchg
or
mov
xor
mov
das
mov
pushf
add
inc
add
hlt
mov
rcrl
xlat
popl
or
cmp
leave
sbb
mov
out
cmpsl
mov
or
rcr
mov
jne
stos
mov
leave
lock
mov
cmp
in
pop
jo
clc
dec
idiv
push
scas
and
mov
adc
lcall
les
icebp
ljmp
lods
or
inc
push
inc
push
mov
outsl
or
and
lds
or
mov
mov
outsl
outsb
mov
movsl
sti
dec
into
in
test
stc
sbb
popf
mov
in
fcomps
std
lahf
std
mov
adc
push
out
int3
iret
pop
adc
adc
fmul
jge
sbb
sarl
das
lret
test
imul
imul
fisubs
lods
adcl
push
pop
pushf
or
push
ret
jne
out
data16
inc
repnz
fadd
ljmp
mov
data16
jbe
idivb
push
cmp
jge
pop
push
xor
sbb
push
jb
out
jge
clc
mov
arpl
push
mov
shr
xchg
add
aaa
mov
daa
add
int
xchg
arpl
mov
shll
cld
mov
sbb
mov
in
incl
push
rorb
stos
jle
in
cmpsl
mov
addr16
xor
inc
jae
xchg
sbb
or
cmp
xlat
mov
mov
inc
iret
xchg
aam
mov
sub
scas
movsl
stc
and
enter
test
xlat
or
inc
sub
mov
fbstp
xor
dec
lock
jbe
inc
je
xchg
sti
sbb
push
xchg
push
jecxz
add
mov
shrb
inc
addr16
pop
cmp
push
xor
mov
loope
popa
add
push
test
das
das
ret
aas
jge
mov
mov
jp
mov
mov
pop
pop
jae
cmp
and
call
xor
xchg
add
sbb
push
inc
daa
js
and
movsl
mov
add
jle,pn
lock
jne
cmc
std
xchg
mov
mov
in
aaa
arpl
push
adcl
sub
jb
adc
push
inc
and
adc
dec
cli
mov
shlb
fs
inc
lods
xchg
push
adc
xlat
pushf
pop
dec
and
xor
aad
outsb
dec
push
push
mov
ljmp
inc
xchg
ror
lock
imul
and
mov
push
add
stc
jb
dec
aas
dec
ficompl
xchg
jp
inc
loopne
mov
idivb
xor
movb
les
push
sub
add
sbb
andb
and
inc
xor
sub
xchg
jbe
sbb
dec
loop
repnz
add
xor
inc
sti
push
lret
cmpb
or
jnp
dec
loop
repnz
add
xor
inc
sti
push
lret
cmpb
or
sbb
dec
loop
repnz
fidivrl
xor
inc
call
inc
ljmp
mov
jnp
lret
fcomi
push
std
inc
mov
pushf
lret
xor
and
and
dec
add
push
xor
pop
sub
clc
xchg
call
sarb
xor
js
push
inc
cmp
mov
mov
cmp
call
ret
test
pop
sub
js
push
pop
cmp
mov
pushf
ljmp
lret
dec
pop
pop
pop
add
cmp
fbstp
and
sub
inc
dec
rorb
lret
pop
repz
mov
push
push
int
jp
scas
xchg
dec
fwait
jb
ds
push
jle
insb
gs
loop
ret
stc
fldl
into
pop
icebp
push
add
xchg
neg
leave
js
cmc
and
pop
adc
ret
and
dec
and
lret
mov
push
mov
add
mov
dec
inc
shlb
std
repnz
popf
sbb
cvtps2pi
lahf
addl
sub
mov
je
inc
ret
into
shlb
popf
insl
jo
mov
pop
enter
enter
jmp
ret
test
add
push
inc
cmp
mov
clc
mov
cli
cwtl
ljmp
aaa
push
dec
adc
adc
pcmpeqd
mov
nop
imulb
mov
mov
dec
insl
js
sbb
push
jb
inc
dec
add
loope
xlat
mov
loop
cltd
jecxz
fnsave
sbb
jp
sub
jb
inc
cmp
mov
clc
xchg
call
ret
test
pop
xor
js
push
inc
cmp
mov
clc
xchg
call
ret
test
pop
sbb
das
push
aam
mov
inc
xchg
out
cmpl
xchg
outsb
popa
sub
mov
mov
inc
mov
roll
dec
stos
mov
or
imul
lods
jg
iret
push
movsb
outsl
mov
or
out
or
sbb
and
mov
dec
ror
xor
push
and
dec
cli
push
push
mov
dec
mov
add
mov
add
inc
jnp
jne
inc
push
push
in
push
gs
adc
inc
loopne
addb
std
pop
mov
inc
test
lds
mov
jl
enter
sbb
das
adc
lret
stc
jo
or
mov
mov
pushf
dec
movsb
out
mov
cld
add
sbb
sbb
jle
pop
mov
push
adc
lahf
mov
ret
test
inc
dec
pushf
add
pop
dec
fdivr
add
in
loope
cmp
stos
and
adc
inc
lcall
pop
ss
sub
dec
dec
xchg
pusha
ds
jo
jmp
ja
dec
aaa
cmp
jecxz
in
mov
outsl
add
pop
push
push
insb
pop
aas
movsb
xor
mov
push
shl
sarl
imul
pop
sbb
mov
ss
cmp
dec
sub
data16
xor
je
mov
sti
mov
push
mov
int
testl
add
sbb
dec
iret
nop
and
mov
pop
dec
push
insl
sbb
xlat
sbb
jg
rep
pop
shrb
push
jb
inc
int3
cmc
mov
shlb
shrb
mov
lock
jns
xor
mov
pmaxub
addb
rcrl
call
sub
lods
sbb
xchg
jne
or
scas
mov
dec
std
lds
outsb
outsb
sbb
xchg
cs
mov
rorl
xchg
pop
fs
adc
cmpsl
lods
and
cmp
loop
push
xchg
add
orl
jp
popf
repnz
sahf
xchg
push
xor
adc
movsl
sti
push
mov
jl
mov
mov
cmp
sbb
push
loope
fldl
in
lods
sub
addr16
mov
iret
pop
ret
jae
jo
adc
xor
nop
lods
or
inc
out
mov
rcrl
push
pop
sub
and
jbe
sbb
jle
inc
lret
iret
fwait
lcall
pop
add
push
aam
bound
mov
ficompl
subl
aas
push
cld
pop
dec
or
push
or
cmp
in
iret
imull
pop
stc
xchg
sub
ljmp
or
inc
or
lret
lret
lods
ret
aad
pop
cs
cmpsl
sub
popf
scas
inc
jbe
imul
dec
add
mov
jb
xchg
aas
push
xchg
mov
loopne
lcall
fidivl
lahf
popa
iret
adc
dec
push
imul
data16
nop
lds
mov
adc
aam
sbb
sahf
adc
rcrl
cmp
js
mov
xchg
dec
pop
std
mov
pop
xchg
jne
call
mov
xor
pop
inc
inc
enter
adc
push
lods
sbb
lret
pop
xor
mov
xchg
cwtl
dec
and
pop
je
shrl
lea
sub
pop
or
out
scas
inc
call
add
stos
es
repnz
sbb
les
or
popa
aaa
ret
xchg
push
mov
jp
insl
fstpt
sbb
getsec
pop
and
adc
aam
jns
scas
mov
jmp
xchg
mov
inc
inc
xchg
mov
fmull
adc
iret
cwtl
and
xor
lods
mov
lock
sbb
js
loope
sbb
ret
cmp
push
aaa
mov
xchg
cmpsl
dec
dec
ja
add
imul
adc
enter
cmp
lahf
xchg
jg
xchg
aas
push
xchg
xor
cmpsl
mov
inc
dec
scas
iret
les
cmp
lcall
iret
gs
sbb
mov
mov
lret
das
pop
mov
add
cli
push
lods
add
mov
sahf
push
mov
jp
js
xchg
test
in
cmp
jbe
or
ja
fnstenv
test
clc
push
iret
addl
mov
mov
shll
aad
popa
push
aad
dec
jnp
jns
sbb
mov
cmp
push
data16
data16
adc
fs
and
dec
movsb
sub
rolb
movsb
cmp
xor
mov
inc
clc
ret
mov
mov
xor
push
push
lock
into
add
mov
loop
arpl
add
dec
mov
mov
push
xchg
pusha
cmp
jmp
jae
pop
pop
xchg
jmp
sub
test
pop
and
psubsb
das
mov
mov
pop
dec
dec
push
mov
pop
add
dec
movsb
cld
add
jns
movl
mov
adcl
bound
sbb
pop
rorb
cmp
out
mov
and
pop
dec
pop
rclb
sbb
add
adc
lods
mov
insl
and
push
sbb
pop
aaa
mov
mov
andb
sti
aad
lea
faddl
not
lea
jle
jno
xchg
enter
xchg
mov
mov
push
in
in
outsb
cltd
scas
loop
ret
std
clc
cmc
enter
loop
shl
mov
xor
or
into
insl
adc
dec
mov
jp
js
push
loope
in
add
rolb
fwait
lods
or
xor
xchg
daa
pop
aas
int
loopne
push
divb
sub
outsl
push
pop
fxch
sti
jnp
imul
add
adc
inc
ret
in
dec
leave
cwtl
mov
popa
loop,pn
jbe
and
aad
xor
mov
jecxz
inc
sahf
sbb
test
cmpsb
xchg
cltd
xchg
test
cs
xor
or
outsb
xor
dec
sbb
xor
jp
dec
fsubrl
sbb
fstl
jp
and
pop
add
sub
add
sub
sarb
mov
loopne
cmc
inc
add
push
rcrb
dec
mov
test
xor
std
leave
jge
mov
shrl
sahf
push
out
gs
pop
jbe
jo
and
hlt
nop
xchg
pop
jecxz
loop,pt
movsl
or
ror
sbb
fdivl
pop
cmc
cli
out
sahf
cwtl
lods
sub
inc
mov
out
jo
mov
xchg
push
mov
imul
inc
cmp
imul
pusha
insl
popf
mov
cmp
ja
jmp
pusha
lahf
mov
sub
mov
or
push
pop
pop
aaa
rolb
lods
and
fwait
sub
jns
push
pop
jno
inc
outsb
test
int
push
movb
cwtl
mov
or
sti
scas
xchg
push
xor
int3
lret
cmp
fwait
cmp
and
mov
inc
inc
pop
std
out
jecxz
lret
jp
mov
outsb
vprotw
sbb
addb
pop
xor
jmp
and
out
cmp
inc
leave
and
lods
pusha
push
int
jge
es
hlt
sbb
sub
scas
adc
aas
xchg
sahf
add
add
cmp
gs
adc
movsb
cmpsb
ss
sub
or
roll
cmp
push
xchg
addr16
divb
push
add
sahf
push
mov
adc
pop
adc
cwtl
and
mov
mov
push
mov
xchg
adc
xor
sub
pop
jge
or
sbb
xor
inc
fwait
inc
mov
pop
imul
loop
dec
cmc
dec
sti
inc
sub
in
pushf
dec
mov
cld
cmp
sub
mov
push
mov
cmp
fdivs
and
daa
mov
xchg
mov
push
and
ret
jecxz
sub
cli
iret
movsb
inc
push
popa
in
test
scas
lods
and
insb
stc
xorl
mov
cmc
lcall
in
rclb
pop
lcall
mov
jmp
repnz
std
out
push
addb
gs
jnp
add
lock
pop
inc
and
iret
adc
out
push
int
xor
sbb
inc
fstl
xchg
cmc
cmp
and
jnp
and
lea
scas
lret
cs
and
jbe
jmp
dec
ret
fstps
imul
imul
imul
ja
sbb
mov
shlb
dec
movsl
xchg
inc
and
lret
xor
scas
test
loop
scas
cltd
fisubs
popa
rcrb
add
xlat
and
and
dec
sbb
mov
cmp
mov
jp
sub
or
imul
inc
or
push
lcall
pop
lea
xor
sub
adc
xorl
in
nop/reserved
xchg
addl
push
scas
inc
dec
add
dec
inc
test
cmp
out
sub
leave
das
repnz
ret
cli
jle
and
rorl
pop
daa
nop
pop
movsb
push
or
shll
sbb
cmc
and
ljmp
sti
sbb
and
or
aam
adc
add
out
push
inc
jg
sysexit
jnp
rorb
in
adc
jmp
or
test
push
lds
aad
xchg
pop
jno
cmp
cltd
push
aad
rorb
mov
adc
pushf
pop
orb
pop
imul
xor
mov
inc
lret
fistps
inc
jnp
sbb
aas
cmpsl
cmpsl
lods
roll
fidivs
mov
mov
fbld
movsb
jb
mov
out
rolb
stos
mov
movsl
mov
ret
and
inc
mov
arpl
sub
loope
adc
xchg
int
mov
imul
clc
in
push
push
and
repnz
inc
sbb
sub
fldenv
sub
jmp
daa
jno
cmp
aas
int
cli
pop
pop
out
xchg
xor
dec
mov
add
pop
adc
xchg
das
jae
mov
pop
arpl
xchg
bound
mov
ret
push
sahf
dec
dec
pmulhw
js
enter
lcall
xchg
dec
cwtl
mov
bound
jae
mov
push
jp
in
fildl
and
je
jbe
push
mov
mov
in
shrl
mov
jmp
ret
adcl
adc
je
aaa
push
aad
stos
popf
lds
ss
push
push
ljmp
xlat
rol
out
stc
jnp
and
or
xor
addb
test
jg
sub
pop
aas
push
jp
and
in
repz
adc
inc
fst
cmpsl
movsl
mov
out
xchg
test
jae
icebp
jbe
popa
insl
ss
mov
and
mov
mov
pop
into
fisubs
gs
sti
mov
test
mov
pop
dec
adc
aaa
scas
cmc
lds
mov
mov
or
bound
add
negb
imul
std
push
int3
ret
cltd
jl
or
pushf
jns
jle
fwait
add
lea
and
rcl
mov
test
jecxz
xchg
xor
push
pop
mov
push
xchg
std
stos
imulb
mov
or
les
imul
ss
in
int
xor
xchg
push
insl
fisubl
xor
in
or
bound
lcall
pusha
xchg
pop
xchg
cmp
imul
cmc
add
arpl
jp
xchg
repnz
inc
xor
in
jne
or
fisubs
outsb
jns
pop
mov
push
test
mov
add
shl
popa
jge
add
pusha
cmpsl
test
push
xchg
in
mov
out
sbb
sbb
jnp
in
sbbl
subl
lock
mov
jnp
lock
lret
stc
mov
cmpsb
mov
jmp
fcoms
mov
out
insb
repz
aaa
fistl
jb
cmp
sahf
mov
xchg
bound
fistpl
mov
mov
jae
cs
inc
popf
adcb
mov
repnz
xchg
into
imul
out
mov
mov
mov
in
mov
mov
es
movsl
cli
add
dec
fisttpl
mov
mov
sub
cmp
dec
dec
and
dec
jno
mov
loopne
cmp
mov
jp
fwait
fs
in
adc
pop
add
in
xchg
mov
and
cmpsb
push
loope
inc
cmp
jno
xor
mov
imulb
jnp
cmp
mov
sbb
adc
jmp
push
jg
shrb
nop
sub
dec
jb
test
insl
test
out
sub
into
sbb
and
jnp
pop
outsl
sbb
addr16
stos
cmpsl
pusha
test
or
xchg
jg
out
inc
pop
push
or
lds
jno
leave
cmp
les
xchg
lcall
fidivs
xchg
inc
hlt
imul
stos
mov
sahf
mov
sub
push
cmp
jle
fwait
mov
jae
sti
scas
sbb
cmp
int3
push
mov
fwait
cmp
idiv
xchg
xor
ret
or
dec
hlt
adc
gs
mov
sti
adc
jle
and
aas
and
cmp
pop
inc
test
dec
cmc
insb
adc
jns
movsl
popf
mov
and
push
inc
push
adcl
inc
mov
adc
lea
daa
sub
test
sub
out
pop
adc
cld
divb
mov
shlb
cmp
xchg
adc
int
iret
test
mov
dec
imul
push
gs
pop
or
jmp
xchg
adc
repz
loope
xor
jle
mov
or
lahf
mov
add
test
pop
decl
scas
sbb
ss
leave
jp
dec
mov
inc
mov
scas
or
jnp
or
inc
push
popl
pop
pop
bound
rcrb
mov
ret
push
xchg
jo
scas
push
fdivrs
inc
xor
cli
jae
pop
sbb
insb
adc
cs
mov
nop
adc
xchg
dec
jae
sub
lock
movsb
out
divl
nop
dec
call
dec
xchg
dec
pop
divl
dec
fstps
push
sbb
and
punpckhwd
pop
push
jg
ljmp
mov
ss
push
lock
and
ljmp
mov
loopw
jg
loop,pt
push
ss
push
mov
gs
pushl
divb
xchg
or
lret
dec
sbb
lds
push
sbb
cs
test
sahf
cwtl
dec
shll
xchg
and
inc
pop
mov
test
jmp
mov
cmpsl
into
pmulhuw
out
mov
cmp
gs
lea
mov
fidivrs
xor
out
into
jne
cmp
sub
mov
sahf
je
mov
clc
mov
sub
es
adc
mov
pop
push
jecxz
pop
sbb
lods
inc
mov
sbb
ror
cmp
jae
icebp
lods
push
sarb
leave
mov
mov
leave
ret
add
bound
dec
scas
popa
xor
sub
clc
jg
sub
lret
sbbl
addr16
mov
lds
sbb
lods
pop
enter
mov
enter
sti
clc
sarb
sbb
fcomip
mov
push
push
in
push
fistl
push
lret
or
sub
call
jmp
jne
aad
adc
shr
movsl
pop
aam
adc
sbb
mov
mov
jl
addr16
daa
cmp
mov
inc
les
fwait
adc
test
ljmp
push
std
adc
fsubl
cwtl
leave
pushl
and
shlb
in
lods
dec
mov
push
shlb
sub
js
repz
xor
arpl
sub
mov
xchg
pop
cli
int
arpl
mov
insb
jb
sub
mov
jle
xchg
mov
pop
stos
mov
sub
and
jecxz
cld
mov
cmc
pop
test
xchg
fsubr
jae
orl
lds
or
icebp
cltd
popa
xchg
mov
test
pop
push
jae
inc
int
inc
int3
in
pop
inc
xor
push
ret
pop
jns
into
mov
call
sub
inc
push
nop
mov
movsb
mov
fdiv
daa
push
push
cmp
xor
dec
ljmp
cmp
cs
mov
xchg
pop
push
jns
add
fstpl
in
pop
inc
inc
mov
outsl
dec
lahf
loopne
dec
push
js
insb
shrb
and
sub
fwait
mov
out
jno
push
and
cpuid
stos
adc
push
popa
adc
push
mov
outsb
cmp
xlat
cmpsb
cmp
cmpb
pop
pop
aas
fsubs
addr16
sbb
cmpsl
cmpsl
cmp
icebp
dec
iret
scas
inc
fistl
clc
cmp
sbbl
testl
je
mov
scas
or
arpl
into
fists
mov
ret
pop
mov
mov
std
sti
stos
fnsave
lcall
sbb
movsl
jne
ljmp
and
add
jl
loop
jne
add
or
or
cmpl
sub
mov
mov
mov
rcr
add
pop
std
xchg
xchg
xorb
test
test
sub
xor
or
and
push
dec
push
add
fsts
addb
xchg
cltd
jg
dec
icebp
insb
sbb
in
jge
xor
or
jnp
fucomip
pop
aam
jb
xlat
out
mov
inc
mov
lret
les
cmp
and
bound
mov
jae
inc
dec
adc
out
mov
lods
mov
fmuls
popf
adc
push
mov
pop
xchg
inc
les
jo
dec
sub
sarb
movsb
mov
cld
decb
movsl
cld
in
lea
dec
fs
mov
leave
xchg
in
adc
dec
fnstcw
sub
mov
add
fcoms
adc
cmp
out
pop
stc
mov
out
fwait
cmpsl
xor
mov
lret
pop
loope
cltd
sbb
ja
xchg
in
ljmp
dec
cmp
jl
and
add
push
jnp
mov
add
aad
rcll
add
clc
sti
dec
pop
pop
cmp
mov
nop
inc
es
fsubrl
sarl
sub
arpl
lcall
jae
inc
fstpt
mov
xor
lock
dec
pop
mov
aaa
sub
fisttps
mov
and
mov
sahf
pop
dec
cld
mov
pop
sbb
stos
mov
lea
xchg
adc
out
push
jmp
push
jbe
sahf
jnp
clc
xor
stc
fbld
and
cld
in
popa
sbb
pop
jo
mov
push
sbb
and
andb
movsl
adc
or
roll
outsl
and
jge
pushf
sbb
xchg
sub
call
cmc
adc
sub
add
fcomps
ficomps
adc
or
xchg
push
dec
lcall
sub
jecxz
xchg
pop
stos
pop
addr16
fdivr
lock
adc
jo
pop
xor
push
or
lret
mov
mov
pop
aam
scas
cmp
ret
adc
rcr
adc
jle
cli
insl
or
dec
inc
jl
inc
dec
in
repnz
inc
lret
ficompl
or
cmp
mov
or
cs
jo
or
inc
iret
mov
mov
and
xchg
pop
iret
ljmp
xor
jmp
sbb
aam
cmp
or
jno
ret
adc
and
mov
mov
pop
es
sbb
xor
cmpsb
fs
xchg
aas
pushf
xchg
test
push
test
cmp
imul
lret
jns
shr
jne
out
adc
xor
cmc
hlt
push
shl
sub
imul
mov
cmp
mov
cwtl
mov
xor
test
js
cmpsl
hlt
scas
cs
enter
outsl
int
or
test
or
mov
mov
sub
xor
dec
cmpb
mov
idiv
outsb
nop
out
outsl
dec
jmp
sub
mov
or
dec
out
push
test
imul
cwtl
rcll
and
insl
jge
xor
out
xchg
dec
std
lds
mov
pop
inc
cwtl
jns
mov
lcall
loopne
in
jecxz
dec
xchg
or
iret
cs
insl
addb
popf
lock
icebp
or
scas
sub
imul
dec
mov
shrb
insb
cmc
add
cli
aad
je
jne
pop
adc
insl
jne
adc
push
jae
xor
and
daa
cmpsl
fidivs
sub
jge
int3
inc
clc
mov
or
dec
ret
mov
data16
insb
nop
nop
xor
or
add
loopne
insl
cmpsl
nop
repz
out
jecxz
jmp
jo
add
aam
fnsave
aaa
dec
or
push
inc
cmp
mov
clc
xchg
call
ret
test
pop
xor
js
push
inc
cmp
mov
clc
xchg
call
ret
test
pop
xor
add
adc
sbb
inc
cmp
mov
clc
xchg
call
ret
test
pop
xor
js
push
ret
sub
dec
bound
clc
xchg
lahf
xchg
adc
cmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cwtl
orb
rol
scas
repnz
sbb
and
xor
dec
push
js
push
xchg
mov
ret
clc
loop
xchg
sbb
or
cmp
sub
pop
daa
dec
push
js
push
xchg
mov
ret
clc
loop
repnz
sub
dec
inc
dec
pop
pop
add
push
cmp
add
mov
js
cmp
rolb
das
jns
lret
ret
daa
nop
popf
das
mov
xorb
enter
ror
pop
add
add
adc
daa
rsqrtps
fidivrl
and
loop
shlb
jne
sbb
cmp
adc
and
int
mov
push
xchg
scas
in
ret
aaa
shlb
incb
mov
push
dec
mov
pop
jecxz
lret
inc
or
mov
add
arpl
sbb
add
mov
mov
inc
xchg
push
test
lea
pop
push
dec
push
enter
mov
bound
pop
orb
fadd
enter
call
adc
and
xor
dec
push
js
push
jmp
jecxz
repz
xchg
jb
or
insl
inc
fidivs
or
out
out
cld
fucomi
jmp
xchg
mov
outsl
pusha
inc
inc
sub
daa
sub
es
mov
inc
int
popf
lock
call
adc
and
xor
dec
push
js
push
xchg
mov
ret
clc
loop
repnz
or
cmp
sub
pop
inc
dec
push
js
push
mov
or
cmp
mov
push
stos
adc
or
push
inc
in
and
inc
mov
std
popf
test
mov
repz
movsl
push
add
call
and
movsb
add
shll
inc
mov
or
and
std
push
inc
or
lahf
sub
pop
arpl
adc
add
xchg
cmpsb
xchg
xchg
dec
push
mov
out
lds
xor
fs
sbb
jp
mov
out
jbe
out
xor
pop
xlat
enter
fcompl
daa
adc
or
imul
xor
movnti
lds
ret
loope
repz
mov
pop
pop
scas
pushf
xchg
cmpsl
ljmp
int3
adc
ljmp
outsb
popa
pop
mov
add
stc
adc
pushf
inc
jae
cmc
cmp
int3
mov
subl
mov
insb
pop
lahf
outsb
add
data16
jae
mov
inc
xchg
xor
nop
inc
push
cmp
mov
cld
push
adc
cmp
cmp
ss
or
xchg
mov
sbb
inc
imul
jnp
nop
adc
jp
mov
cmp
xor
in
rorl
fcompl
hlt
jp
mov
outsb
jl
fwait
insb
add
cmp
mov
scas
push
jno
jbe
xorl
call
jg
lret
mov
and
xor
lods
sbb
stos
fs
rorb
inc
pop
rcrb
jnp
and
xchg
mov
cmpb
sbb
data16
push
rcr
das
xchg
xchg
mov
negl
call
movsb
inc
lods
fcomip
dec
movsl
jnp
and
push
shrb
jecxz
fsubp
rcrb
outsl
jmp
idivb
iret
popa
add
jbe
call
pop
sbb
add
hlt
and
xchg
adc
xchg
cmp
mov
push
cwtl
jns
push
jnp
or
mov
in
or
cmp
in
imul
push
and
mov
cld
push
mov
jae
sahf
xchg
add
out
ffreep
cmc
mov
out
ja
ss
rclb
imul
xchg
push
loop
test
std
xchg
cltd
adc
call
jle
imul
lds
dec
cmp
and
mov
pop
aaa
clc
shlb
pop
mov
jne
mov
inc
inc
aad
in
xor
mov
jle
push
push
push
pop
mov
lret
lret
out
fs
xchg
js
jp
lcall
cli
test
and
testl
mov
push
insl
mov
and
lea
cmp
add
insl
add
mov
subl
add
sbb
cwtl
sbb
sar
cmp
or
pop
push
insb
mov
aas
adc
or
sbb
xor
push
adc
lea
pop
inc
mov
les
cltd
sbb
popa
out
sbb
xor
sub
mull
or
aas
add
in
mov
iret
popf
leave
push
sbb
jecxz
testb
hlt
jge
adc
inc
inc
faddp
insb
dec
mov
shr
ret
sti
mov
out
vpcomd
in
mov
popf
xchg
or
xchg
cmp
jle
out
sahf
inc
inc
or
mov
out
mov
bound
push
sub
dec
dec
cmpsl
movsl
iret
mov
ret
jo
mov
push
push
mov
xor
push
notl
xchg
jg
and
outsb
aad
adc
push
lea
push
add
stos
fwait
test
mov
xchg
ds
dec
mov
dec
pop
jecxz
sbb
and
push
or
inc
fldl
cli
push
push
ficomps
loop
xchg
test
mov
int
add
lods
ljmp
push
jo
aaa
lds
mov
pop
mov
daa
sti
mov
jg
push
mov
or
mov
pop
arpl
inc
mov
outsl
jae
nop
and
gs
arpl
mov
adc
nop
pop
mov
pop
aaa
pop
pop
test
ss
adc
sbb
sbb
pop
pop
test
mov
iret
push
dec
sarl
or
lds
aam
push
fcomps
das
fsubl
sbbb
mov
negb
push
shlb
push
lcall
sub
push
xchg
repz
and
je
fs
sub
cwtl
ret
outsl
test
mov
sbb
ja
adc
mov
xlat
sbb
jno
mov
in
loopne
inc
adc
lahf
scas
mov
jmp
popf
sub
cmp
repz
mov
insw
add
inc
dec
dec
adc
fildl
aam
icebp
sub
cmc
lahf
inc
xor
lcall
mov
aad
fsubp
pop
mov
inc
sbb
jl
int3
fs
out
jns
gs
or
ret
fs
cmpsb
insb
push
adc
ret
adc
dec
lea
mov
lahf
cmc
and
scas
lahf
loop
cltd
sbbl
cmp
sbb
lahf
sbb
sbb
xchg
in
cmp
jne
lds
jmp
xor
jmp
lret
pusha
sub
mov
pop
icebp
in
in
imul
loopne
nop
or
cmp
in
mov
fbstp
ss
movsl
repz
decl
push
push
and
testb
ja
pop
stos
fnstenv
xchg
add
sahf
clc
das
out
jecxz
ds
sub
ja
adc
jg
push
inc
cmp
pop
cmp
ss
pop
inc
je
sbb
cmpsb
adc
mov
mov
aas
or
fidivrl
repnz
and
jo
xchg
xchg
testb
adc
rolb
xchg
push
subb
or
fldt
es
outsl
pop
daa
sbb
mov
jno
jge
imul
cli
and
movsl
jno
sarb
ret
dec
je
dec
xor
dec
pop
push
inc
repnz
push
inc
shlb
icebp
test
cmp
inc
pop
enter
sub
or
or
xchg
sbb
ja
push
gs
lds
and
stos
mov
add
inc
es
inc
cmc
pcmpeqb
daa
jbe
jbe
aas
jmp
psubsw
xchg
repz
jmp
in
xchg
pop
test
in
test
adc
pop
sub
mov
push
xchg
cs
cmpsl
push
or
xor
lahf
pop
pop
xlat
fwait
incb
stc
fiadds
imul
fiaddl
mov
mov
jnp
sbb
inc
inc
add
bound
jns
jns
call
rcr
xchg
mov
aaa
dec
in
ja
mov
ret
stos
pop
xor
push
aas
popl
mov
pop
mov
dec
jg
pushf
stos
jnp
xor
inc
andl
or
les
or
push
outsb
stc
lahf
lods
stos
faddl
out
dec
sbb
xchg
nop
push
test
scas
dec
mov
cmpsb
call
movsb
or
es
scas
dec
in
xor
add
addb
std
rcll
jb
aad
xchg
jp
pop
scas
push
push
fmuls
push
jno
xchg
jno
push
shll
adc
std
mov
sbb
inc
shrb
and
sbb
adc
stos
add
mov
js
out
mov
sti
jnp
xrelease
scas
outsb
pop
add
int3
push
sbbl
jnp
adc
in
daa
gs
pop
pop
fisttpll
bound
xchg
leave
arpl
mov
dec
leave
mov
mov
stos
and
push
mov
in
repz
call
xor
xorb
and
movb
push
mov
aaa
dec
mov
out
enter
dec
test
push
mov
mov
and
sub
sbb
mov
push
cmpsb
xchg
jns
imul
pop
sub
aas
loope
xor
scas
or
push
push
cltd
xor
jmp
cmp
pop
sbb
fcmovnbe
lahf
in
ret
or
insl
push
sbb
dec
fimull
inc
jg
jecxz
clc
cwtl
fsts
cmpsb
lods
mov
addl
jmp
push
imul
mov
pop
imul
ret
or
xchg
test
xchg
bound
cmp
mov
or
test
das
push
xor
xchg
rolb
push
pushf
sti
mov
movsl
jno
enter
adc
jb
sub
jecxz
or
inc
push
dec
cmp
or
test
adc
and
sub
adc
shll
ret
push
or
mov
xor
jno
stos
cmp
xchg
mov
ljmp
std
insb
or
mov
or
hlt
jnp
pop
in
stc
in
lahf
dec
outsl
and
mov
scas
ljmp
mov
loopne
jg
shll
cmpsl
push
cmp
and
sbb
mov
in
xchg
sbb
mov
lds
das
nop
imul
or
xor
cli
mov
push
xor
rolb
insl
xor
xchg
pop
adc
mov
addr16
cld
or
enter
dec
aaa
push
stos
aas
pop
push
cltd
xor
cmp
imul
sarb
aaa
movsb
addr16
mov
cmpsb
out
stos
outsl
call
and
mov
sub
pop
iret
pop
das
mov
xchg
popa
into
lret
movsl
jne
xchg
icebp
or
es
sbb
push
fsubrs
clc
jp
mov
add
scas
cs
cmp
inc
inc
fiadds
iret
jle
out
mov
cwtl
pop
je
in
xor
clc
xlat
jae
mov
inc
xor
jae
orl
inc
dec
inc
sbb
jnp
and
jle
jecxz
xchg
test
insl
cltd
push
addr16
xchg
mov
test
ds
mov
out
sarb
jle
ret
pop
int3
push
mov
cwtl
dec
ja
in
push
daa
scas
xor
jl
xchg
xchg
dec
decb
mov
fs
mov
push
jo
sbb
mov
mov
adc
ja
insb
fisttps
out
movsb
cmpsb
xchg
stc
mov
mov
add
lret
mov
push
mov
in
mov
loop
mov
mov
mov
jp
push
inc
jae
inc
push
icebp
enter
sub
stos
jbe
sub
xor
out
pop
add
lds
lods
ret
jne
les
pop
int
jmp
stos
outsl
stc
sbb
dec
call
dec
ljmp
cmpsb
lret
inc
test
mov
dec
xchg
aad
js
aam
int
lret
aam
dec
ss
mov
dec
inc
mov
pop
push
jnp
out
rcr
inc
ja
lret
mov
sbb
sub
and
test
ljmp
mov
add
fisubrl
push
add
shlb
dec
insb
in
push
ss
movsb
insl
aam
xchg
or
stos
addr16
and
dec
xlat
sbb
push
pop
and
push
imul
add
fs
push
icebp
mov
fimull
cmpsl
push
push
dec
sarb
dec
leave
mov
mov
fsts
lock
or
push
add
add
movsl
sbb
out
sti
fucom
push
test
imul
xor
jecxz
pop
jae
mov
add
add
push
es
pop
jg
mov
sbb
dec
dec
in
xor
mov
imul
mov
in
movsb
mov
jno
fstpl
or
inc
pop
inc
inc
xchg
fisubrl
sub
add
mov
outsl
aaa
or
jne
call
fxch
call
dec
pop
sub
cmpb
or
xchg
ljmp
xorb
fldenv
in
repnz
aaa
push
fisttpll
push
fisttps
dec
sbb
daa
sbb
movb
sarb
inc
jg
in
jb
repnz
or
sbb
jae
jo
in
and
scas
adc
or
cmc
xchg
xor
and
addr16
test
mov
jbe
add
jmp
and
orb
sbb
loope
xchg
outsl
jl
push
in
mov
xorb
daa
or
sub
aad
fistps
dec
xor
pop
jg
jnp
in
jnp
xchg
movsl
repz
push
ds
fisttpll
int3
xchg
hlt
dec
dec
stos
int
jmp
or
dec
and
xchg
jge
adc
inc
aas
rcr
fisttpll
or
bound
sahf
shll
ret
movsl
inc
xbegin
leave
mov
mov
jnp
test
mov
jge
ss
in
add
xchg
sub
mov
test
roll
or
lds
sub
and
jb
js
dec
cmp
lret
xchg
inc
mov
push
jo
or
ds
sbb
xchg
add
out
lret
xchg
imul
inc
pop
mov
sbb
push
inc
cld
int
mov
inc
mov
jg
mov
pop
mov
jle
inc
ljmp
in
sub
js
mov
in
bnd
cmp
sub
pushf
ljmp
inc
fcmovb
lea
sub
push
scas
pop
cld
push
push
pop
data16
fcmovne
pop
and
cwtl
dec
lock
iret
xchg
sbb
jnp
pop
test
decb
out
adc
or
fcmovnb
movsb
sbb
or
fcomip
mov
fs
jmp
fnsave
mov
adc
jecxz
daa
dec
mov
add
ret
jo
pop
test
ficoms
lods
xor
cmp
xchg
pop
xchg
aas
jns
sub
sbb
mov
adc
jle
iret
mov
cmpsl
andl
xchg
push
cmc
mov
sbb
jb
jmp
movsl
xor
shll
adc
sahf
insl
enter
sbb
ret
push
add
ret
adc
jle
cmp
cld
lahf
sub
cmp
loopne
lahf
xchg
test
lods
subl
out
arpl
rcrb
vcvttps2dq
cmpsl
sbb
xchg
scas
xlat
xchg
xor
xchg
cmp
jge
mov
xchg
int3
leave
flds
imul
pop
adc
dec
add
lods
es
or
andb
out
fcmove
popf
jne
repnz
adc
mov
mov
cmp
fdivl
enter
jo
ds
in
pop
or
lods
pop
enter
sahf
mov
hlt
cmc
mov
adc
insb
add
push
hlt
add
into
shrb
test
push
xor
dec
data16
dec
stc
jne
les
add
inc
xor
stos
clc
sub
and
dec
loopne
sbbl
clc
or
popa
push
mov
leave
xor
adc
or
mov
aas
out
push
inc
and
bound
ret
daa
pop
aas
hlt
insb
std
leave
and
cmpsb
xlat
adc
sbb
cli
sbb
mov
insb
aaa
push
je
mov
sbbl
mov
fisttps
xchg
bound
out
test
sbb
je
popa
popa
test
xchg
stos
pushf
cmp
test
pushf
push
insl
shlb
ja
ds
push
cmpsb
bnd
mov
mov
push
xchg
repz
adc
cmp
and
push
scas
sbb
jecxz
dec
mov
ja
mov
fwait
cltd
pop
hlt
outsb
dec
stos
sbb
xchg
shlb
mov
outsl
pop
cmp
bound
lret
or
pop
sbb
mov
mov
adc
inc
pop
add
idivb
mov
jecxz
call
movsb
aas
cmp
dec
jp
fwait
xor
hlt
decb
or
mov
jmp
push
sbb
iret
ret
inc
adc
and
sbb
add
imul
mov
cmp
test
sbb
push
push
ret
adc
jno
arpl
test
pop
sbb
frstor
lcall
pop
cli
inc
xchg
add
pop
fdivrp
add
repnz
and
jb
je
push
nop
movsb
mov
out
cmc
loope
repz
les
fldcw
jp
push
dec
push
push
cmp
and
adc
xchg
in
int
jae
adc
sub
cwtl
int3
dec
inc
std
mov
repnz
dec
mov
sbb
hlt
jle
or
js
lea
sbb
addr16
lods
dec
in
xchg
das
or
pop
out
push
cwtl
jnp
in
call
fcmovnu
push
jecxz
data16
test
call
outsl
pushf
dec
hlt
xchg
inc
scas
testl
mov
mov
sti
pop
pop
repnz
adc
or
push
lock
xchg
adc
sbb
mov
dec
push
std
xor
loopne
push
decb
cmpsb
xor
xor
push
push
add
xlat
ficomps
cmpsb
addr16
testl
dec
mov
aad
mov
leave
fists
lock
mov
or
or
xchg
sub
xchg
cmpsb
out
push
call
xchg
ds
mov
sbb
out
lret
insl
inc
mov
testb
jae
dec
and
fcomi
lea
movsb
das
push
adc
dec
icebp
xchg
aad
inc
jle
sbb
mov
pop
outsb
fdivr
out
mov
inc
in
sub
xchg
cmpsl
into
push
movsl
jo
or
out
call
jp
lds
mov
iret
popf
mov
jge
cmp
daa
sub
and
lods
mov
add
loop
pushf
mov
cmp
gs
insb
bound
std
sub
pop
add
adc
mov
mov
xor
pop
arpl
add
or
jl
repz
les
hlt
pop
xchg
jae
inc
or
adc
int3
sub
sbb
xchg
xlat
jae
jle
xor
cmpsl
mov
or
call
mov
jno
cltd
test
sub
into
loopne
out
adc
shll
mov
test
out
aas
pop
dec
fwait
sarl
cmp
cmp
pop
sbb
test
and
sbb
and
push
and
rorl
add
pop
pop
aas
repz
lahf
mov
movsl
dec
out
sahf
clc
lahf
or
xchg
call
cmpsb
imul
jo
add
push
ss
xchg
pop
ss
adc
xchg
xor
sarl
add
repz
scas
les
adc
out
inc
sti
fisttpll
fstl
hlt
stos
or
push
cmp
sbb
leave
sbb
dec
scas
mov
out
shl
negl
aam
mov
flds
in
jg
mov
mov
xor
sbb
into
je
mov
out
xor
aam
cli
insb
lret
mov
push
loope
add
test
addr16
cmp
mov
mov
pop
fdivrs
jecxz
jmp
ret
fmull
jmp
jp
adc
incb
adc
pop
test
add
inc
outsb
out
popa
mov
test
mull
mov
std
lock
arpl
mov
sar
or
lock
aas
ds
jecxz
aad
test
jb
ret
or
mov
dec
and
loope
mov
xchg
cli
xchg
dec
inc
adc
je
or
nop
and
outsb
ss
push
aad
mov
flds
hlt
xor
fcoml
mov
xor
in
mov
lea
ds
fcmovnu
jno
xchg
sub
or
and
sub
mov
pop
xor
mov
js
jae
mov
mov
outsl
jmp
add
mov
inc
sbb
lahf
pop
add
sarb
out
and
pop
in
or
aas
lcall
subl
fcmovnu
inc
out
jmp
icebp
and
jl
fsubrs
repnz
adc
aas
cmp
sbb
mov
das
pop
xor
out
or
and
mov
adc
push
xchg
jae
fldl
pusha
mov
cmp
loop
jae
jmp
push
rcll
call
push
push
jecxz
mov
inc
sbb
rolb
mov
jae
sub
lea
nop
sbb
stos
popf
mov
sbb
xchg
aad
pop
dec
cmp
into
call
push
fisttpl
les
sbb
push
mov
jmp
and
push
pop
mov
daa
aam
and
mov
orl
cmp
jnp
retw
add
sbb
fnstcw
sub
jmp
mov
or
cmp
faddp
aam
test
xor
dec
movsb
pop
cmpsw
mov
ja
adc
sbb
sub
out
mov
sti
xchg
testb
addr16
pop
subb
je
pop
mov
push
icebp
into
dec
lret
shr
lcall
addr16
inc
xchg
push
iret
push
addr16
leave
lds
lret
inc
hlt
sbb
scas
pop
mov
fidivrl
mov
sbb
or
dec
add
jecxz
sbb
leave
jp
insl
inc
mov
cmp
jns
push
insb
xchg
jecxz
cmp
mov
xchg
xchg
enter
call
adc
and
xor
dec
push
js
push
xchg
mov
ret
clc
loop
repnz
or
cmp
sub
pop
inc
dec
push
js
push
xchg
mov
ret
clc
loop
repnz
or
cmp
sub
pop
inc
dec
push
jns
push
xchg
mov
ret
js
push
mov
das
lret
sbbb
ret
mov
mov
mov
aas
jae
arpl
dec
inc
jg
outsl
and
repz
jecxz
xchg
iret
cmp
out
mov
aas
jae
arpl
xor
lahf
rorl
jecxz
xchg
iret
cmp
out
mov
push
add
arpl
and
push
add
rcl
mov
xchg
ret
movhps
inc
hlt
mov
inc
jle
rclb
jae
xor
adc
fldt
mov
add
jecxz
push
sbb
imul
add
mov
shlb
mov
xor
movb
push
les
and
xchg
pop
mov
movlps
xor
int3
outsl
and
repnz
idiv
xchg
ficoml
xchg
pusha
mov
lea
mov
int
add
outsl
aas
pop
and
iret
jl
dec
stos
cmc
notl
pop
inc
mov
jae
push
jo
jl
and
sbb
js
es
lods
call
ja
arpl
in
ret
es
and
pop
mov
xchg
iret
cmp
out
mov
aas
jae
arpl
dec
add
outsl
fidivrs
movsl
mov
rcrl
aas
push
aas
sbb
dec
jp
mov
inc
cli
xchg
ljmp
testb
jp
pop
das
cmp
jl
insb
adc
dec
cli
orl
xchg
dec
cmp
out
mov
aas
jae
arpl
dec
add
outsl
and
repz
jecxz
xchg
iret
cmp
out
mov
aas
jae
arpl
dec
add
outsl
and
add
xchg
adc
sbb
push
sub
and
scas
ret
sbb
sub
sub
sar
or
andl
cwtl
lcall
adc
popf
fdivrp
add
cmp
ds
cmpsl
or
mov
jg
dec
in
scas
shl
sbb
fsub
sbb
pop
dec
arpl
xor
shld
addr16
icebp
jns
xor
repnz
mov
cmp
rol
push
sbb
repz
mov
stos
adc
cmpsl
les
lods
pop
fistpl
ret
xchg
in
mov
repz
js
enter
jge
scas
or
add
call
adc
jne
ljmp
daa
stos
mov
and
jb
sub
frstor
jle
fisttps
mov
or
stos
lcall
int
pop
psrld
aam
adc
jg
popa
out
aam
mov
cmp
cmp
jle
cwtl
mov
cmpsb
xchg
ret
iret
sub
cltd
icebp
in
repnz
rol
dec
push
mov
hlt
rcrl
inc
sbb
ja
sub
cmp
jb
dec
clc
iret
adc
mov
mov
outsb
test
and
insl
in
or
xor
jmp
inc
mov
fcmovnu
out
aas
in
push
mov
std
test
int3
push
shrl
movsl
movsb
dec
cmpb
rcr
push
clc
push
inc
push
push
lds
push
daa
cs
nopl
lods
inc
gs
adc
cmp
cwtl
stos
add
int3
jnp
dec
es
mov
jle
shl
inc
lcall
xchg
daa
ror
push
nop
popa
jecxz
add
mov
leave
outsb
and
or
cmc
js
iret
movsb
jo
pop
mov
and
rcrl
je
pop
xchg
loope
mov
pop
addr16
sbb
gs
inc
arpl
cmp
std
gs
jae
xchg
stos
mov
push
cmp
inc
and
inc
and
cwtl
and
pop
lods
test
lret
add
inc
jle
repnz
add
push
jp
int3
cmp
cmpsl
aaa
and
cmpsb
lret
lock
xchg
xor
fwait
lcall
push
inc
sahf
iret
jne
and
popa
xchg
xor
xchg
scas
or
pop
das
push
ja
push
idivb
xor
push
in
xchg
push
jns
xchg
popa
clc
jb
and
out
xchg
je
cmpsb
inc
fsubl
mov
fsubr
fld
mov
int
jp
and
dec
jecxz
andb
pushf
mov
lea
and
loopne
xchg
sbb
call
dec
stos
pop
cmp
outsb
in
or
imul
xor
icebp
mov
pop
sahf
xchg
add
out
or
fimull
sbb
jo
imul
outsb
pop
out
push
push
ljmp
mov
jo
int
sbb
icebp
in
insl
bound
into
jno
les
fdivs
cs
xchg
aam
jle
std
int
dec
aad
int3
std
mov
push
jnp
xchg
cwtl
mov
and
sti
sbb
push
fiaddl
fs
in
xchg
outsl
push
ds
in
dec
jge
sub
sbb
sub
jl
std
push
stc
sbb
fmull
push
bound
jae
or
mov
push
lds
pop
out
fwait
lods
jl
mov
test
add
imul
lret
test
pop
and
inc
add
out
test
jge
adc
js
pop
and
jl
mov
pop
ds
mov
mov
int3
mov
ljmp
mov
into
lea
out
std
out
dec
in
jge
lea
sarl
add
arpl
pop
cld
sub
lods
aaa
out
int
mov
out
fwait
rclb
or
xor
cmp
and
xchg
push
cs
jp
inc
xor
mov
rcl
in
mov
sbb
mov
sahf
lds
not
lock
daa
call
jecxz
jle
mov
add
ja
outsl
int
in
lahf
mov
insl
push
mov
das
outsb
aas
sbb
adc
cvtps2pd
push
adc
push
cmpsl
add
cmc
xor
lock
in
in
jg
cmp
fildl
push
jg
inc
sbb
je
cltd
jae
inc
cmpsb
and
sub
jno
popa
insb
mov
int3
add
fdivrs
jl
jl
mov
outsl
int3
pushf
push
jae
xchg
jmp
dec
mov
pop
cmp
sbb
pushf
sbb
or
mov
sub
mov
adc
push
mov
movsl
rcl
inc
dec
push
jmp
or
fcmovu
aas
mov
pop
pushf
xchg
shlb
cmp
xchg
pop
push
in
or
test
in
fs
push
in
aam
push
xchg
repnz
mov
jle
mov
rcrw
daa
dec
rcrb
mov
jne
fnstsw
sub
lahf
in
push
out
cmp
pushf
cmp
xor
shrb
sti
xchg
mov
fadd
jp
insl
cs
adcl
test
pushf
push
imul
das
movb
cmc
cmc
inc
stos
mov
std
and
inc
int3
sti
xchg
push
rclb
ljmp
xchg
mov
pop
fiadds
xchg
out
js
jge
xchg
sbb
xchg
imul
xchg
inc
pop
cmp
jg
inc
push
dec
lret
push
mov
cld
leave
cmp
les
in
in
and
imul
xchg
lock
stc
jne
lods
out
xor
or
cmpsb
dec
popf
pop
adc
sbb
sbb
push
mov
sbb
movsl
inc
ja
mov
inc
xchg
inc
movsb
add
jno
div
ljmp
jb
pusha
loopne
cmp
fisttpl
jo
ret
loope
lahf
dec
rcrb
mov
mov
sbb
jg
add
inc
jae
add
pop
out
imul
cmp
mov
jae
out
data16
rcrl
jns
push
or
loope
in
xchg
out
mov
inc
shrl
mov
rcrl
nop
ret
adc
in
inc
mov
dec
or
int3
or
add
sbb
sub
outsl
lods
or
dec
std
xchg
xchg
ja
lods
stos
sub
pop
mov
cli
jae
out
in
scas
xor
out
movsl
sub
sbb
cmc
sbb
jae
imul
inc
mov
jmp
fildll
into
or
and
xlat
fisubrl
mov
push
insb
push
repnz
and
push
hlt
bswap
xlat
loope
movb
push
cmp
and
mov
lahf
js
sbb
mov
popa
xor
rorl
iret
es
outsb
shrl
cmp
jnp
std
xor
rclb
into
inc
mov
in
mov
push
mov
cwtl
push
mov
xorl
fisubs
lds
and
lret
or
lods
sahf
jmp
mov
dec
roll
ja
jnp
outsl
sub
out
inc
mov
out
dec
rcr
sub
push
mov
push
inc
inc
xchg
mov
les
aam
jp
pcmpeqd
fbstp
cmpsl
add
inc
mov
into
push
aad
adc
sub
sub
mov
mov
sbb
push
jecxz
sub
lea
out
add
xor
lcall
adc
pop
cmp
add
test
add
jge
sbb
arpl
into
lods
xchg
push
xor
pop
ja
fildll
loopne
out
dec
inc
ds
subl
jb
sub
mov
enter
add
mov
orl
push
mov
je
test
ds
addl
sbb
xchg
or
lock
loope
aam
xor
fbstp
ljmp
cmp
sbb
mov
push
dec
scas
lock
or
cmp
subb
ds
adc
rcll
mov
shl
stc
lcall
and
movsb
mov
sbb
cmp
fwait
cld
lods
aad
leave
das
fwait
in
inc
into
loope
push
push
cmp
jae
stos
hlt
out
out
jge
mov
outsb
or
fcomi
mov
repz
jno
sbb
out
popf
das
lahf
out
ret
jecxz
sbb
lret
or
lock
mov
ret
push
js
lret
push
or
ficoml
jg
pusha
mov
xor
pop
lock
cld
xor
ret
mov
mov
insb
mov
lcall
mov
push
push
cwtl
or
test
divl
or
pop
lods
or
xchg
sahf
add
js
aad
ljmp
out
out
pop
pop
pop
sbb
loope
jg
xor
cltd
add
int
dec
mov
loope
or
and
shll
add
xchg
push
rcl
sbb
push
pop
push
push
or
jecxz
xor
testb
insb
xchg
ss
push
xor
jns
push
test
xor
pusha
push
rorl
and
push
clc
add
xchg
cld
and
push
leave
enter
fsubrs
call
fcomp
bound
xlat
push
addb
out
div
jp
rolb
ss
cmp
test
xchg
mov
subl
push
das
movsl
mov
xchg
inc
test
call
fists
mov
popf
frstor
dec
dec
scas
aad
shll
sbb
in
test
and
pusha
sarb
mov
ret
popa
sub
in
jle
push
test
inc
push
imul
pop
dec
adc
cmp
adc
out
std
mov
test
sbb
idivl
sub
inc
mov
dec
xor
movsl
push
xor
xchg
pop
sub
mov
call
push
mov
and
push
out
cmc
movsl
mov
jo
dec
iret
cmp
or
jno
testl
adc
loope
in
outsl
jnp
call
xlat
dec
and
sar
lods
add
test
mov
xchg
dec
or
imul
dec
push
sub
adc
mov
pop
addr16
jmp
inc
aaa
mov
sbb
ja
xor
mov
cwtl
sbb
mov
mov
in
xchg
sarl
push
push
push
in
imul
stos
out
loope
cmp
shr
cmp
mov
in
xchg
lods
cltd
lds
add
loopne
jno
adc
inc
notb
sbb
cwtl
push
es
rol
add
or
sub
sub
jns
rorb
push
dec
push
pop
loopne
push
jno
adc
out
insl
outsl
sti
psraw
mov
add
sub
push
cmc
and
mov
cmp
cltd
push
push
xchg
inc
mov
push
pop
cmp
nop
jl
imul
pop
cmp
pop
add
aas
jno
sbb
push
sub
mov
jns
test
daa
in
pop
cmpsb
jecxz
mov
test
adc
fmuls
mov
xor
push
add
fistl
or
inc
xor
add
lcall
adc
popf
ret
pop
call
sbb
lea
fiadds
hlt
mov
cwtl
negb
and
mov
movb
les
mov
clc
sbb
sub
iret
mov
push
test
int
ror
adc
jbe
push
mov
incl
mov
popf
sub
ja
push
push
push
or
aad
out
pop
jae
mov
fsubrl
jp
popa
cmp
jbe
and
adc
ds
cmp
mov
mov
push
subl
test
jns
jno
inc
sbb
jne
inc
hlt
lahf
xor
adc
xchg
xor
lock
dec
pop
xchg
jo
int3
or
ds
bound
mov
aas
sbb
inc
mov
mov
xchg
jns
jae
jle
int
sub
inc
dec
mov
or
xor
sbb
mov
stos
push
stc
sub
test
mov
push
lahf
ret
in
push
shld
adc
stc
or
jo
popa
pop
cmp
pop
into
dec
mov
aas
mov
loope
in
lds
scas
fwait
adcl
sub
js
mov
xor
pop
push
jbe
lret
dec
mov
mov
ret
dec
xchg
inc
cmp
jne
fs
push
mov
js
daa
add
cmpsb
test
xor
movsb
into
push
mov
xor
ret
sbb
dec
test
xchg
push
and
push
pusha
jo
sbb
or
outsb
dec
enter
in
and
push
mov
test
lcall
jge
cli
sub
dec
push
push
mov
xor
out
scas
movsl
mov
pop
cmp
roll
pop
xchg
call
pop
addr16
xchg
push
insl
or
push
xlat
and
cwtl
dec
sub
ret
notl
sub
movsl
aaa
repz
dec
sub
add
jmp
imul
dec
jo
mov
or
aaa
pop
push
dec
push
ss
jmp
mov
push
outsl
scas
add
xchg
aaa
lahf
dec
dec
and
loop
test
mov
jne
mov
sbb
xchg
jecxz
js
adc
adc
cs
js
push
or
decb
movsb
fstl
inc
jb
or
pop
cmpsl
xor
leave
sub
inc
call
push
insl
pusha
dec
fidivs
mov
loope
lret
sbb
les
in
das
sbb
sub
and
mov
dec
sub
jl
add
iret
inc
int
dec
or
sbbl
call
fsubrl
cmp
sar
stc
mov
loopne
inc
clc
inc
or
push
push
lret
je
frstor
cmp
sub
aad
mov
mov
adc
push
les
ja
sub
and
jbe
cmp
pushf
rcrb
adc
cltd
sub
in
mov
popf
push
adc
push
mov
dec
pusha
int
pop
cmp
add
xchg
in
add
test
test
pop
inc
adc
outsl
outsl
adc
imul
call
xor
xlat
rorl
cld
mov
and
push
jns
adc
mov
clc
roll
pop
fisttps
add
adc
pop
cmp
mov
aam
es
int
lods
sub
xchg
mov
mov
shr
pop
mov
jne
fimull
repz
cmp
xchg
ja
repz
xor
xchg
out
ror
dec
fs
out
add
in
mov
sbb
int3
jae
and
jae
inc
ljmp
gs
lds
pop
vpacksswb
mov
jp
stc
sbb
je
sub
mov
rorb
inc
inc
es
into
test
xchg
cmp
test
jg
mulb
cmpb
aad
jno
int3
ja
cmp
dec
std
jne
cld
jae
jbe
sub
push
dec
outsb
mov
arpl
push
cltd
ret
xor
rorl
bound
pop
cmp
mov
push
jg
icebp
jnp
xor
pop
sbb
cmp
mov
std
jnp
subl
push
scas
lock
je
jg
dec
jns
pop
les
cmc
mov
loopne
add
jns
mov
pushf
setne
mov
leave
mov
add
daa
lret
rolb
jl
dec
repz
popf
cmpsl
mov
dec
loope
loop
dec
mov
mov
xchg
ja
cmp
adc
jb
adc
jge
pop
sbb
cwtl
in
repz
out
inc
fwait
xlat
cmc
dec
jp
jb
mov
pop
call
aam
sbb
cld
push
inc
sarb
fcom
and
xchg
loope
subl
mov
adc
adc
cmpl
mov
mov
lods
push
pop
push
adc
cwtl
mov
shlb
push
aas
mov
xchg
out
enter
stos
aas
test
das
push
lahf
jmp
mov
popa
cmp
cltd
push
call
dec
into
lock
pop
ret
xlat
cmp
inc
jmp
popf
inc
cmp
mov
in
ja
cmp
cmc
inc
cmc
sub
insb
lret
dec
xchg
sub
ficoml
xchg
paddb
shl
dec
push
pusha
push
loopne
add
cld
adc
sbb
popf
insl
in
rcrb
mov
loop
mov
mov
stos
cmpsl
pop
and
int
in
sbb
mov
cmc
in
frstor
mov
cmpsb
adcl
jns
sbb
sub
xor
dec
inc
jno
dec
xor
sub
dec
mov
fidivs
mov
rcrl
pop
xchg
jle
xor
jbe
test
mov
stc
and
or
pop
pop
dec
out
loopne
mov
push
movsl
push
cltd
mov
inc
jne
inc
popf
aam
dec
testb
aas
cld
pusha
ljmp
stos
or
imul
mov
inc
movsb
push
stos
mov
aaa
loope
push
mov
mov
cmpsb
sub
mov
scas
repz
test
lret
xorl
and
xor
mov
orb
cli
movnti
cmp
push
jo
pop
adc
lock
fisubl
push
push
pusha
jp
mov
mov
aaa
in
clc
sub
in
aam
xchg
jne
mov
push
int3
sub
mov
fmuls
inc
dec
add
mov
stos
lcall
inc
mov
jb
iret
jmp
sbb
cmc
shr
loope
leave
dec
ret
shl
std
gs
push
pop
ds
adc
dec
lock
sub
scas
je
add
xchg
orb
inc
mov
mov
or
movsb
cmp
pop
outsb
inc
mov
mov
inc
int3
add
adc
or
cmpsb
or
js
pop
test
push
fdivrl
sarl
dec
sub
mov
jo
aad
pop
sbb
or
jo
add
push
popa
mov
rorb
mov
insb
mov
outsl
jmp
adc
lahf
scas
int3
lcall
push
imul
add
add
or
mov
adc
je
mov
add
mov
sbb
int
push
mov
cs
icebp
xchg
or
pop
std
or
les
fxch
aam
jno
les
push
fwait
out
pop
xchg
push
pop
inc
sbb
fisubrl
dec
int3
sbbb
mov
out
andl
adc
ss
or
add
testl
sub
and
stos
dec
inc
aad
in
movsb
fucomip
cli
or
daa
push
movsl
push
adcb
jl
or
test
fsubl
jg
jno
pop
scas
movsb
nop
popf
out
iret
setae
xor
dec
inc
mov
lret
rolb
repz
movsl
mov
mov
or
pop
mov
mov
adc
cmp
popa
inc
scas
mov
fchs
mov
lea
decl
mov
xchg
fwait
jne
adc
je
add
imul
cld
adc
repnz
in
loope
dec
xchg
sbb
or
sahf
stos
fstps
cli
sarb
int3
fnstsw
jnp
cs
jle
pop
subb
add
pop
test
fs
jne
lahf
push
inc
std
add
adc
dec
stc
addr16
sti
pop
push
pop
adc
nop
hlt
lock
fucomip
lods
out
movsb
adc
jmp
xchg
inc
dec
test
mov
cmp
jae
xor
sbb
inc
lods
adc
imul
mov
inc
xchg
out
aad
test
jo
lds
adc
stos
mov
ret
loopne
mov
cmp
and
pop
xchg
js
sbbb
mov
mov
xor
out
shl
leave
out
cmp
cmp
mov
cmp
cltd
pop
incb
push
pop
ss
push
lds
dec
in
ljmp
mov
fisubs
jno
shrl
sub
push
clc
adc
fisubrs
scas
aam
adc
or
add
mov
in
movsb
xchg
lea
cld
jecxz
repz
or
sar
mov
fs
lcall
lods
sub
outsl
adc
cmp
xor
sub
hlt
or
movsb
rorl
pop
sbb
jae
jo
rcrb
fstl
or
mov
pop
dec
add
pop
push
aam
cmpsl
mov
adc
ds
mov
in
fs
sub
rcrb
sbb
inc
xchg
pushf
xor
adc
std
cmp
xchg
and
jne
in
incl
mov
arpl
inc
xchg
pop
call
xor
in
rorb
ds
aad
push
mov
pop
insb
inc
push
jl
repz
shll
sbb
inc
or
rcll
push
and
dec
std
ret
mov
xchg
iret
cmp
out
mov
aas
jae
arpl
dec
add
outsl
and
repz
jecxz
xchg
iret
cmp
out
mov
aas
jae
arpl
dec
add
outsl
and
repz
loop
xchg
iret
cmp
outsl
mov
aas
jae
arpl
dec
add
outsl
and
repz
out
xchg
iret
add
xor
pop
pop
lods
psubsw
fwait
aas
cld
bswap
pop
fcoml
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
mov
daa
sahf
cwtl
sub
mov
hlt
fstl
add
pop
or
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
aad
aam
mov
and
add
add
or
cmp
add
add
add
add
arpl
or
push
add
add
mov
in
add
add
mov
add
sbb
fs
add
add
add
or
pusha
add
add
add
add
add
scas
add
add
jae
testb
add
add
add
add
add
add
pop
add
mov
mov
add
clc
add
add
add
add
add
add
and
add
mov
add
add
imul
testb
add
add
pusha
add
add
add
push
add
add
mov
add
and
cmp
sbb
add
inc
add
and
add
add
add
add
add
add
add
add
jmp
roll
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
mov
mov
sub
add
add
pop
add
add
add
add
mov
flds
sub
add
add
add
add
add
add
add
add
add
out
jae
and
jge
push
add
cmp
add
cmp
mov
mov
push
inc
add
add
add
add
add
add
add
testb
add
add
add
push
add
add
mov
cltd
add
add
add
add
add
sub
sbb
and
and
adc
add
add
add
cmp
add
cli
add
add
add
add
add
add
jno
inc
add
add
add
dec
add
jae
adc
mov
push
add
mov
adc
sbb
testb
add
add
add
add
jbe
and
inc
add
add
add
add
scas
add
inc
add
adc
jg
jae
testb
add
add
mov
test
jge
test
add
add
roll
add
add
add
add
add
roll
das
add
add
add
add
add
add
repz
in
add
add
add
add
and
popl
dec
add
add
mov
roll
add
add
push
add
xor
push
add
mov
jge
test
add
add
add
test
add
add
add
add
or
add
adc
add
jle
leave
add
add
cmp
add
add
add
ja
pop
add
push
add
add
jle
jb
cmp
add
add
add
testb
add
add
add
int3
add
add
movsb
add
push
add
add
add
add
add
enter
jo
adc
cmp
add
insl
add
cltd
add
add
fs
inc
adc
sub
xchg
pop
sub
daa
imul
mov
aaa
lds
repz
scas
into
add
call
sbb
out
testl
sahf
push
test
iret
xor
xchg
outsb
jnp
dec
and
das
lahf
fwait
pop
in
pop
pop
ror
jge
adc
adc
data16
ss
nop
ds
orb
mov
jmp
xchg
lea
push
roll
out
iret
hlt
pop
shll
out
imul
adc
xor
int
push
sbb
adc
mov
sarl
cwtl
lcall
adc
into
xor
leave
je
fidivrl
pop
adc
cli
ret
stos
pop
call
faddl
mov
xchg
out
push
sbb
test
add
popa
sub
das
cmc
push
cmpsl
arpl
jns
cmp
dec
sub
cmpsb
shll
movsl
fcom
in
pop
xchg
sub
push
in
int
pop
shrl
and
std
mov
test
dec
dec
lcall
insb
imul
jmp
negb
jl
mov
popf
aas
out
rcrl
outsb
and
inc
clc
je
xchg
imul
dec
inc
jo
test
shl
outsl
jns
jns
pop
daa
sbb
push
dec
cmp
std
repnz
inc
push
aam
or
in
mov
gs
in
repnz
in
xor
loope
adc
shrb
sarl
and
cmp
cmp
mov
fsts
sti
inc
pop
nop
out
sti
shll
sub
push
mov
in
addr16
dec
mov
jmp
daa
jnp
xchg
loop
aad
cli
lret
push
mov
sbb
mov
xchg
outsl
ja
mov
in
or
bound
pop
xchg
popf
flds
jle
jbe
call
ljmp
xchg
push
fsub
jb
je
incb
push
scas
das
xor
scas
pop
and
and
xchg
test
cltd
mov
push
sarb
adc
int
sub
push
jge
xor
xchg
cmpsl
icebp
shll
jae
adcl
loope
push
inc
leave
xchg
push
jg
ja
jge
sub
pop
int
mov
out
inc
les
pop
repz
sub
call
dec
xorl
pop
sub
ljmp
sub
xchg
gs
mov
ret
mov
adc
scas
mov
adc
mov
insb
push
fldt
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
