call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
sub
cmp
dec
jp
mov
inc
stos
jo
and
jo
add
adc
testl
sarb
mov
push
jp
mov
and
xchg
mov
add
jmp
cmp
push
jp
and
sub
and
jg
jns
nop
or
inc
mov
imul
imul
mov
push
or
pop
cmp
pop
jge
rorb
leave
dec
movsl
jo
pop
cmp
stos
pop
aaa
pushf
mov
popf
stos
insl
push
lock
mov
xchg
sub
adc
inc
jne
stos
adc
loopne
and
pop
cmp
in
test
testb
ljmp
stc
ja
ljmp
lock
jo
nop
jg
stc
push
push
push
jp
fidivl
lea
lock
dec
pop
ret
sbb
pop
mov
lcall
and
and
lock
sub
cmp
push
jp
mov
pop
stos
dec
mov
add
or
movsl
inc
mov
les
fstpl
and
sub
jo
xor
ds
dec
stos
push
test
loopne
lock
add
ds
sbb
jo
add
test
adc
movsl
inc
rcrb
dec
mov
subb
pusha
mov
inc
stos
push
mov
add
adc
loopne
lock
sub
cmp
push
jp
mov
inc
stos
push
mov
add
adc
loopne
xor
cwtl
mov
out
adc
mov
mov
cmp
push
jmp
mov
leave
loopne
pop
stc
inc
mov
xor
ret
inc
sub
in
xchg
or
push
lea
push
rclb
cs
ss
jmp
das
pop
push
data16
cwtl
ret
popa
cmp
shlb
cmpsl
pop
mov
jns
popa
push
sbb
lret
pop
adc
inc
cmp
lds
ret
fwait
jle
loopne
daa
ljmp
mov
insb
test
mov
es
lcall
sub
iret
add
add
or
and
repz
in
movsl
add
loop,pn
and
xchg
cmp
mov
aam
pop
dec
dec
jne
sub
pusha
lea
or
lock
and
hlt
pop
jmp
int3
sarb
push
inc
fists
out
or
pop
mov
mov
test
cmc
adc
sahf
xlat
push
ja
fdivrs
sbb
out
into
rcrb
push
dec
hlt
push
enter
hlt
imul
adc
pusha
push
xor
lcall
add
and
out
sbb
lahf
cs
lock
jae
lret
and
or
enter
dec
pusha
imulb
icebp
xchg
out
cmc
mov
xor
repnz
iret
jbe
inc
lahf
sbb
mov
fs
hlt
ja
enter
inc
test
push
decb
and
sub
jb
inc
in
js
cli
add
pop
sub
imul
inc
xchg
lods
mov
mov
push
jo
add
fcompl
adc
stc
dec
mov
xchg
mov
lcall
mov
xchg
mov
jle
push
lods
or
loope
scas
mov
pop
inc
mov
cs
push
pop
or
and
pop
ss
outsl
jl
or
pop
mov
scas
jmp
aam
gs
mov
mov
adc
pop
mov
jne
add
push
inc
jg
out
fs
outsl
sub
fisttpll
pusha
jg
lods
mov
out
inc
and
loope
stos
cmp
pop
aam
gs
sbbb
inc
add
pop
sahf
jecxz
movsb
ss
arpl
enter
imul
jbe
lock
fisubrs
test
in
xor
push
or
cwtl
stc
aam
pop
ds
aas
jns
inc
and
add
or
add
mov
divb
mov
mov
cmp
iret
jg
addr16
jns
pop
imulb
and
xchg
mov
sub
lods
jae
and
xor
add
lods
rcrl
adc
inc
and
sbb
add
mov
cmpsb
hlt
lods
lds
cltd
dec
arpl
lea
jp
cld
out
insb
dec
cs
aas
out
cli
push
add
sbb
out
in
iret
imul
psrad
jne
inc
lock
sbb
rorb
xbegin
iret
repz
and
inc
inc
inc
pop
test
inc
cmpb
jl
xor
dec
adcl
xchg
jmp
lret
or
mov
cmpsl
inc
jbe
loop
or
sarl
inc
mov
adc
dec
inc
movsb
inc
and
fdivrl
adc
dec
mov
xchg
mov
mov
inc
das
lds
cmp
pop
enter
mov
fs
imul
lahf
dec
mov
push
lcall
inc
mov
xchg
sbb
mov
bound
shrl
jns
and
mov
cli
lahf
mov
mov
ss
xor
stos
mov
mov
mov
insl
test
leave
arpl
aad
mov
push
repnz
ds
popa
jne
mov
popa
in
icebp
pop
iret
test
fldt
or
mov
roll
inc
sub
pop
mov
jg
add
add
test
sub
jne
sub
std
jl
xchg
jo
loopne
ljmp
inc
xlat
pop
push
sub
ja
imul
xchg
inc
lea
cmpl
or
fwait
inc
in
adc
cmpsb
jg
in
cmp
pusha
mov
idivb
pop
cli
lahf
pop
fistpl
cmp
movsb
daa
xchg
ja
mov
mov
xchg
cli
push
ret
outsl
pop
lcall
mov
sbb
adc
bound
sbb
lea
stc
aaa
xchg
inc
mov
sbb
pop
jo
xor
jl
jnp
pusha
mov
and
add
jo
jge
aam
xchg
add
inc
inc
gs
scas
cmp
inc
push
dec
popa
arpl
add
insb
adc
lcall
xor
clc
add
cli
cmp
cmp
push
cmpl
pop
dec
or
or
mov
clc
lea
push
loop
inc
sar
das
addr16
and
dec
lods
out
je
mov
in
icebp
cmpsb
inc
sahf
inc
push
xor
pop
fwait
jecxz
sahf
mov
out
andl
pop
push
int3
jo
inc
pushf
xorb
or
stos
loop
pop
and
mov
outsl
aaa
std
cltd
je
sub
bound
mov
jg
dec
mov
fprem1
mov
decl
and
fcmovu
cmp
xchg
mov
clc
or
rolb
and
sub
dec
mov
shrb
cs
push
fimull
mov
lret
leave
je
jns
data16
pop
imul
push
dec
mov
mov
pop
mov
sub
mov
cmp
mov
stos
pop
arpl
sahf
inc
and
push
sub
sahf
jl
push
pop
add
xchg
jae
test
ljmp
xor
fstpt
addb
mov
scas
sub
xchg
shlb
cmpsb
mov
dec
imul
ljmp
sbb
sar
jnp
ljmp
stos
ds
jbe
mov
mov
clc
adc
test
jp
jle
push
adc
hlt
adc
int
push
ret
das
jo
lods
jp
dec
push
xchg
jg
lds
rcrb
rcl
sbb
aaa
push
xchg
mov
cmpsl
lods
sub
or
push
xchg
lret
pop
call
clc
adc
push
sbbl
test
mov
and
mov
xor
push
push
push
hlt
add
outsl
shrb
loopne
pop
call
aad
sub
push
cmp
ljmp
jbe
ja
test
scas
testb
inc
shrb
adc
sub
cld
aaa
mov
push
dec
sarb
xor
xchg
add
push
arpl
scas
and
lret
jno
mov
jmp
lds
out
mov
aaa
add
ficoml
cmp
popl
cmp
inc
mov
inc
stc
popa
pop
jp
push
jmp
sub
hlt
push
js
and
outsb
pop
and
or
pop
xchg
xor
and
rep
imul
out
jle
xchg
sbb
in
inc
movsb
pop
lcall
orl
pop
and
popf
jg
adc
lock
jl
mov
clc
int3
jge
fisttpll
push
cmp
cmc
imul
dec
jns
cld
lcall
cs
mov
mov
xchg
fisubrs
push
jge
nop
stos
mov
sbb
inc
loopne
dec
lods
adc
inc
leave
inc
dec
data16
je
pop
loope
jo
cli
mov
adcb
push
sbb
mov
cmpb
cli
xlat
mov
stos
mov
stos
cwtl
pop
pop
pushf
sub
dec
mov
xor
out
mov
cmp
nop
push
cwtl
mov
int3
ficomps
shrb
dec
movsb
or
imul
xor
pop
pop
aam
fdivl
lret
xchg
fildl
xor
mov
out
inc
cmp
mov
dec
stc
cmp
or
leave
loopne
jnp
fnstcw
inc
sub
sti
outsb
sbb
adc
hlt
or
push
ret
pop
sub
aas
push
dec
shlb
add
push
xchg
mov
mov
pop
pop
sti
fisttps
mov
push
xchg
into
dec
test
mov
lds
cmpsb
jmp
jp
sbb
pop
insb
cs
fcomps
out
pop
shl
dec
idivl
lds
add
testl
lds
out
sub
inc
nop
insb
ljmp
push
inc
and
fs
lcall
dec
sub
dec
pop
mov
push
decl
ss
cld
lahf
inc
test
mov
shll
inc
into
jl
faddl
and
inc
pusha
cmc
cmc
movb
add
int3
push
mov
cltd
les
cmpsb
xorl
dec
sbb
test
xor
lods
loop
out
int
popf
push
test
fsubrl
test
dec
mov
jb
dec
dec
sarl
and
push
div
cmovbe
sub
call
fwait
xor
call
and
aaa
jno
jb
movsb
jmp
cmpsb
add
out
imul
int
cmp
outsb
gs
mov
cltd
pop
hlt
sahf
sbbb
and
mov
sahf
mov
in
ss
sbb
outsl
addr16
cmp
mov
fcmovb
call
xchg
adc
add
addr16
cmp
sbb
lods
pop
xchg
rorb
mov
mov
inc
jnp
adc
jmp
cmpsb
rclb
pop
dec
pop
sub
test
pop
ja
aam
movsb
shlb
aas
push
jnp
cltd
sbb
jnp
mov
test
gs
rolb
jge
in
loop
loopne,pt
mov
lcall
inc
dec
sbb
out
mov
aam
jp
cmp
sub
add
pop
outsb
popa
mov
push
mov
jge
sbb
out
int3
lcall
ds
stos
or
dec
pop
bound
or
nop
jne
mov
sbb
or
jp
repz
cmpsl
fstl
outsb
dec
fldcw
xorb
mov
test
push
pop
inc
loope
sbb
jg
dec
or
jmp
sub
out
mov
xor
stc
adc
inc
sti
cmp
adcl
aam
pushf
addb
es
xor
nop
mov
jns
mov
iret
in
mov
std
mov
jo
das
cmpsb
mov
cmpsb
push
fwait
in
xchg
push
or
insb
inc
popa
and
adc
das
lods
dec
in
adc
mov
pop
mov
mov
ss
outsl
es
test
in
nop
pop
lahf
mov
and
jp
dec
sub
xor
pop
sbb
xor
movsl
mov
mov
or
adc
lret
icebp
ja
and
adc
stc
es
mov
lds
scas
aas
mov
call
shrb
insl
loop
in
aam
pop
fwait
outsb
jbe
xchg
sub
pop
jge
inc
sbb
pushl
xchg
sti
dec
mov
ja
fidivrl
sub
pop
fwait
sbb
shll
cmp
pop
mov
mov
inc
dec
popa
jae
push
adc
sarl
scas
mov
popa
hlt
mov
lods
jns
jne
scas
aaa
add
mov
test
cs
inc
jg
mov
into
mov
jge
fcomps
test
fldt
mov
lock
ficomps
stos
aad
lret
cmpl
jne
cli
and
dec
pop
mov
sub
xchg
insl
adc
out
nop
mov
mov
bound
aam
or
lea
and
adcb
inc
dec
shll
into
jmp
outsb
xchg
out
shrl
fwait
test
pop
jne
notb
popf
or
dec
data16
test
push
jmp
jno
xchg
gs
aaa
xor
jnp
pop
test
je
pop
das
or
jo
leave
inc
cmp
subb
pop
xchg
push
mov
pop
adc
stos
rcrl
aas
jecxz
jo
into
lds
insl
dec
ret
mov
jmp
lds
sar
push
or
sarl
jo
mov
mov
mov
jno
cmp
adc
inc
popf
mov
jne
dec
sbb
add
stc
xor
rolb
into
imul
outsl
mov
sbb
rcl
adc
insb
ljmp
imulb
dec
lcall
je
adc
lret
das
xchg
mov
popf
pop
mov
mov
jge
decl
test
shrl
xchg
fs
pop
xchg
lcall
rol
imul
cmp
outsb
movsb
stc
cmp
mov
gs
pushf
mov
in
mov
sbb
mov
cmc
std
xchg
push
cmp
jno
adc
cmp
ret
ljmp
xchg
mov
fwait
inc
sbb
add
arpl
or
push
mov
cmp
push
and
mov
fprem
addr16
int3
inc
jle
cmp
pop
mov
inc
mov
pop
mov
mov
dec
das
movsb
pop
es
in
movsl
mov
fsts
sub
jecxz
and
cmc
cmp
push
sbb
pop
sub
xchg
adc
mov
inc
dec
push
jb
push
mov
leave
mov
js
sub
xor
inc
add
mov
cmpsb
out
movsb
pop
rcl
in
or
push
popa
xchg
movsl
and
sub
pop
sti
mov
insb
mov
aas
leave
pop
pmaxsw
add
mov
xor
les
pop
div
inc
imul
mov
jle
sti
bound
and
pop
aas
mov
sub
testl
ds
push
loop
add
aam
jne
adc
xchg
sar
mov
mov
jae
out
iret
fcoml
scas
push
and
fldt
and
das
insb
mov
jmp
lods
fs
pop
adc
call
xor
movb
and
xchg
ret
mov
xchg
pop
lock
lds
xchg
gs
ljmp
jmp
mov
push
scas
sahf
cmp
xor
das
dec
je
test
imul
mov
fwait
push
or
add
sub
std
jmp
inc
ds
pop
mov
ja
xor
loopne
movsb
sbb
dec
lods
es
push
jmp
mov
xchg
negl
jne
sub
xchg
mov
repnz
jne
add
call
pop
in
or
sbb
rcrb
adc
fmull
in
inc
or
loop
in
ret
push
add
pop
xor
mov
xchg
pause
lret
data16
jbe
repnz
sbb
jb
or
and
or
push
push
jl
dec
add
aas
fs
xchg
aam
dec
repnz
xchg
loop
or
push
mov
or
addr16
xchg
mov
mov
popf
sub
push
push
ret
clc
lods
dec
sbb
xchg
inc
add
jg
daa
jne
pop
aas
push
xor
lcall
and
adc
imul
inc
into
and
popa
mov
mov
das
cli
lock
int3
scas
fnsave
mov
jp
jp
lcall
jo
ret
scas
xchg
and
fwait
das
imul
push
aaa
in
lcall
mov
test
cs
repnz
jno
xchg
cwtl
je
test
loopne
ret
cmp
mov
jge
sahf
faddl
push
adc
pop
loopne
mov
sbb
fstl
cmp
pop
or
sar
cs
out
dec
xchg
push
mov
mov
fsubrl
shrl
push
push
imul
cmpsb
das
pop
pop
cmp
mov
in
jnp
mov
and
adc
les
pop
iret
xchg
imul
jae
push
sbb
sbb
dec
push
xchg
loopne
sub
xor
nop
cld
cmc
inc
pop
daa
repz
adc
stos
inc
pusha
pop
nop
cmp
jo
fnstenv
lods
ret
mov
clc
rorb
or
xor
ja
pushf
adc
leave
pop
jo
enter
pop
and
adc
add
push
jecxz
sub
js
ds
sahf
outsb
lahf
aad
and
sbbb
dec
sub
loopne
or
jmp
xlat
nop
mov
out
test
or
cld
stc
sbb
add
mov
and
adc
dec
aam
lcall
imul
aaa
in
xor
dec
ret
int3
dec
pop
pop
idivb
sbbb
mov
dec
jmp
xchg
in
mov
mov
cmp
sub
inc
cmp
cmp
push
test
adc
enter
sahf
sbb
idivb
mov
and
jmp
and
mov
pop
mov
mov
push
jae
ss
fdivrl
push
xchg
and
sbb
or
mov
arpl
fcoms
repnz
jmp
push
jmp
orl
dec
mov
or
add
cmpsl
add
gs
push
xor
sti
xchg
jl
les
mulb
or
movsl
sbb
inc
std
shll
pop
xor
and
std
pop
and
mov
or
sbb
cmp
in
or
add
scas
aad
cmp
in
fistps
in
inc
fs
inc
clc
xor
test
xchg
xchg
pop
lds
inc
jg
or
pop
shll
scas
mov
imul
dec
dec
shl
jae
push
mov
mov
imul
xchg
mov
pop
jbe
test
cli
mov
orl
loope
imul
mov
fwait
data16
lret
movsb
mov
movsb
testl
leave
sbb
cli
out
movsl
sarl
addr16
bndstx
loope
repnz
icebp
loope
imul
lret
push
je
mov
mov
lods
mov
int3
aad
pop
sbb
mov
cld
in
push
orl
dec
ss
add
div
mov
sbb
add
push
daa
jb
nop
push
cmc
dec
add
cmp
inc
adc
jno
sbb
adc
mov
push
sbb
sbb
add
cmpl
mov
dec
cmp
je,pn
xor
movsl
pop
adcb
inc
cmpsb
mov
push
pop
lds
push
test
lret
pop
test
bnd
xchg
lahf
dec
call
or
adc
ror
push
inc
sbb
mov
ret
add
cmp
xchg
dec
insl
xor
inc
mov
lahf
and
push
fnstcw
aam
sub
sub
test
negb
test
test
mov
jmp
jg
scas
push
pushf
push
and
cltd
stos
insb
or
cmc
mov
outsb
enter
jmp
sbb
mov
mov
data16
mov
sbb
clc
scas
cs
sub
push
insl
push
lahf
loope
dec
lock
sub
out
mov
push
call
push
fdivs
sbb
gs
pop
test
push
dec
loope
lret
inc
dec
xchg
mov
or
pop
es
dec
stos
jno
rcrl
dec
sub
inc
and
fistl
ds
mov
cmp
ljmp
inc
xor
das
push
dec
adc
jmp
push
cmc
inc
push
test
inc
out
inc
sbb
inc
outsl
in
andb
jno
cmp
test
je
push
push
ret
dec
fsubr
dec
adc
xchg
call
add
push
arpl
fstps
mov
sub
clc
mov
jns
std
jns
fwait
insl
subl
xchg
daa
xor
insb
fisttpll
adc
sbb
out
mov
pushf
sub
repz
mov
mov
ljmp
or
movsb
sub
cmp
adc
mov
push
or
sbb
mov
adcl
es
mov
or
fwait
hlt
incl
sbb
pop
jecxz
repz
mov
push
mov
int
push
push
jge
sbb
adc
mov
js
sub
inc
rcrl
pop
data16
cltd
mov
pop
js
cmpb
xchg
and
cmp
scas
mov
lods
rolb
dec
int
mov
call
loop
addb
in
clc
lcall
cli
xchg
pop
add
insl
ja
adc
imul
sub
cmp
push
jp
mov
inc
stos
push
mov
add
adc
loopne
lock
sub
cmp
push
jp
mov
inc
stos
push
mov
add
adc
loopne
lock
mov
subb
pusha
or
inc
stos
push
mov
add
and
aam
les
imulb
sarb
mov
push
jp
mov
int
inc
mov
add
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lea
or
pop
out
insl
pop
pop
and
pop
popf
adc
lahf
fsubr
int3
in
fucomip
fistps
cvtps2pi
pop
outsl
dec
jg
dec
insl
cmp
mov
std
iret
in
fistps
cvtps2pi
pop
outsl
dec
jg
dec
insl
pop
popf
scas
lea
test
subb
pop
jge
aad
nop
xchg
sbb
mov
aam
aam
pop
mov
das
subb
gs
xchg
pop
jg
repnz
jb
in
and
cmc
ja
mov
fisttpll
and
mov
xchg
sbb
mov
arpl
or
adc
mov
rorl
popa
jg
inc
insl
mov
mov
lcall
fnstsw
out
repnz
adc
push
insl
pop
cmc
push
clc
stos
in
jo
lahf
mov
aas
in
or
pop
mov
lds
mov
test
iret
in
and
or
pop
pop
outsl
dec
jg
dec
insl
pop
popf
scas
lea
fucomp
int
std
iret
in
cltd
imul
arpl
sub
or
sub
sub
fistpll
cmpsb
rcr
leave
out
test
mov
dec
push
dec
inc
gs
sub
cmp
adc
int
call
mov
mov
and
or
jg
dec
insl
pop
popf
scas
lea
fucomp
int
std
iret
in
fistps
cvtps2pi
pop
outsl
dec
jg
dec
insl
pop
popf
scas
lea
fucomp
int
std
iret
in
fistps
pusha
jg
cs
mov
lock
fmull
loop
xlat
push
xor
push
mov
xor
mov
lret
push
mov
fsubrs
aam
repnz
inc
out
int
add
fstpt
jmp
mov
mov
cmc
jg
cmp
sbb
rcrl
aaa
mov
lahf
test
jp
xchg
lea
jbe
dec
xor
sbb
dec
aam
and
mov
xchg
out
push
xor
push
add
lock
aad
add
cmp
outsl
ret
dec
jns
out
xchg
pop
loopne
push
imul
inc
xor
insl
pop
inc
test
pop
inc
inc
sub
fucom
adc
mov
adc
in
loopne
in
data16
fdivp
sub
aas
or
cmp
push
ret
icebp
cld
outsb
out
add
xchg
xor
les
xorb
sbb
mov
insl
out
and
decl
les
mov
out
inc
loop
rol
pop
in
push
shrb
ljmp
mov
xchg
aam
and
mov
mov
cmp
adc
xchg
push
dec
scas
push
cmp
or
jno
or
push
fcompl
push
xchg
and
pop
mov
and
pop
pop
or
xchg
and
jnp
or
mov
or
sub
pusha
or
jnp
mov
cmp
bound
xchg
inc
adc
aam
xchg
jne
iret
rcll
sbb
cs
lcall
icebp
loop
adc
mov
sbb
mov
xchg
inc
aaa
cmp
or
repnz
cmc
jmp
xor
repz
adc
mov
jnp
and
aad
fwait
lea
imul
sahf
dec
jb
xor
inc
and
test
lret
xor
sbb
icebp
ss
add
insb
andl
mov
and
push
mov
dec
fmulp
mov
mov
or
test
jo
sub
mov
xchg
imul
subl
inc
ret
jb
push
sub
inc
adc
inc
mov
inc
clc
in
mov
pop
inc
int3
in
xchg
test
inc
xchg
jo
sub
mov
fistpll
xchg
outsb
mov
cmp
mov
cmc
dec
or
xor
mov
popf
lret
clc
mov
xor
and
add
sub
popf
jne
scas
aaa
leave
inc
and
cmp
imul
fwait
or
cmp
xlat
fld
imul
mov
ja
ret
push
mov
inc
push
mov
ss
lret
cmp
dec
and
adc
xchg
cmc
jbe
sbbb
je
ret
and
push
xor
cli
mov
addr16
lcall
push
adc
scas
and
lahf
push
pop
xchg
cmp
stos
leave
adc
ljmp
mov
test
or
cmp
xchg
and
mov
mov
xor
xchg
and
cmp
sub
mov
or
cs
nop
scas
xlat
push
mov
pushf
shlb
adc
push
dec
je
imul
stos
mov
mov
ja
jle
fcompl
fldt
xor
pop
mov
sti
ret
std
shlb
mov
cmc
inc
enter
mov
sub
stos
rolb
lock
pushf
jb
imulb
adc
mov
cs
rcll
mov
or
xor
les
iret
nop
dec
mov
testb
pop
mov
xchg
and
xchg
outsb
push
js
sahf
repnz
fists
ret
push
mov
adcl
shrl
pop
jl
stc
lahf
cmp
in
aam
lods
dec
cmpsb
js
call
cmp
out
cmp
popl
outsb
lret
mov
lods
in
out
loope
pop
insl
leave
add
shl
and
jae
sbb
mov
insb
shlb
test
aam
jne
xor
lods
cmp
xor
lcall
inc
jl
nop
add
rcr
insb
sti
lock
mov
mov
xor
lret
xchg
test
sti
push
ficoms
out
cltd
lcall
in
lahf
adc
pop
scas
xor
mov
jns
pop
mov
mov
push
in
and
xor
fidivs
addr16
mov
push
jmp
repz
or
lods
sbb
sahf
inc
sbb
push
shl
shll
fcmovu
jb
daa
shl
xchg
in
mov
mov
in
jmp
int3
xor
int
cmp
inc
shll
mov
cmp
mov
jb
push
fistps
rcrb
xor
sub
fwait
and
xlat
ret
ror
stos
sub
xchg
rorb
xor
cmp
divl
sbb
jl
ljmp
pop
cmp
inc
pop
xor
and
lcall
clc
ds
xchg
loop
mov
pop
sub
xor
je
or
jns
pop
jo
test
fwait
fwait
sub
test
lock
push
xchg
mov
iretw
test
push
add
xor
in
movsl
mov
mov
inc
nop
push
fucomp
jbe
rorb
pop
sub
jp
fldl
int3
push
inc
mov
inc
insl
lcall
lret
outsb
jge
lahf
pushf
insb
gs
push
mov
adc
popf
cwtl
scas
lock
stc
stc
xlat
nop
icebp
jno
lea
dec
sbb
jne
dec
repnz
sbb
mov
sub
rorl
dec
fs
push
and
xor
jb
out
cmp
test
xor
pushf
out
in
icebp
sti
xchg
xorl
jae
aas
cmp
adc
jnp
sub
out
cmp
int3
fistl
jge
jo
add
jae
mov
and
inc
and
adc
xchg
jne
mov
pop
outsl
es
aad
adc
cwtl
stos
cmp
test
sbb
xor
addr16
ret
in
insb
adc
in
and
mov
sbb
mov
repnz
clc
pop
pop
jg
or
jns
sbb
adc
ret
fcom
inc
mov
movsl
loopne
in
pop
jmp
jnp
popa
repnz
popa
clc
ds
pop
dec
call
dec
xor
jp
flds
lods
mov
subb
cmp
out
mov
sub
insb
push
int
mov
les
mov
dec
add
inc
adc
add
jbe
addl
mov
cmp
gs
out
pop
fwait
push
mov
pusha
jo
add
add
or
dec
stos
mov
call
cmpsb
cmp
pop
loopne
inc
es
mov
mov
mov
dec
fwait
jmp
adc
repnz
cmp
xchg
movsl
movsb
mov
xchg
aam
mov
leave
test
add
push
fistpl
fs
mov
adc
push
lods
cltd
jae
cwtl
out
sahf
sbb
mov
std
cmc
mov
stos
les
daa
push
and
sub
dec
sarb
mov
mov
fs
cwtl
jmp
jl
jne
cld
ret
leave
test
or
cwtl
sbb
inc
js
lds
pop
xor
jae
mov
jp
pop
stc
dec
jo
xchg
cs
xchg
push
arpl
scas
lds
stc
or
pop
sub
fistps
rclb
imul
int3
jle
push
int
inc
and
pop
pop
fst
sbb
out
mov
or
and
sub
stos
xlat
fildll
add
es
in
inc
stos
or
cmp
das
loope
addr16
jnp
and
aaa
mov
mov
in
jp
fs
je
pop
sbb
cvttps2pi
lods
mov
mov
sbb
mov
jne
xchg
lds
jno
addr16
dec
in
adc
add
and
push
mov
jp
test
mov
ficoml
mov
pop
push
mov
stos
dec
push
rorb
or
repz
dec
jns
sbbb
sbb
add
pop
xor
loope
ficomps
inc
mov
out
jge
lret
sbb
push
movsb
sub
fmul
push
mov
ss
roll
cmp
icebp
enter
fdivrl
or
push
popf
pop
xchg
shrl
faddl
test
push
or
lahf
inc
sbb
xchg
jbe
jg
push
call
js
dec
jmp
je
pusha
int3
xchg
dec
cmp
addr16
out
loope
sub
pop
dec
mov
leave
cmp
pop
testb
sbb
cld
sbb
fs
sub
dec
push
outsl
mov
pop
imul
test
leave
ljmp
mov
test
es
stc
rcrl
xor
pop
aas
mov
or
and
pop
sbb
arpl
stc
add
arpl
or
xor
cmp
xchg
insl
jmp
and
sub
iret
nop
or
ss
stos
adc
int3
lods
loop
ret
mov
jnp
adc
adc
jae
in
add
xorl
inc
push
or
jp
add
movsl
cmp
sub
dec
inc
movsb
movsb
adc
loop
pop
add
in
mov
xor
xchg
je
out
movsl
loope
inc
out
out
add
or
subl
leave
adc
xlat
call
jns
repz
in
dec
ror
out
out
sarb
rcll
push
cli
ret
cmpsb
out
loop
jmp
sbbb
mov
sub
int
dec
icebp
int
push
xchg
mov
jb
fcmovne
and
xchg
push
sub
stos
or
les
mov
mov
testl
popf
ret
sbb
popf
gs
fisubrl
std
mov
repz
jb
xchg
push
mov
lea
rolb
ud2
js
mov
adc
fsubrl
cmpl
mov
je
jmp
fsts
xchg
mov
pop
xor
jl
shlb
cmpb
and
in
outsl
cs
cmp
cmpsb
imul
rcrl
ret
lret
stos
aad
mov
xchg
sbb
xchg
test
pop
sti
int3
sbb
iret
movsl
imul
les
dec
and
jo
lret
aad
jae
adc
insl
repnz
sbb
and
sbb
add
pop
adc
jbe
cltd
mov
fisttpl
mov
outsb
filds
lcall
jmp
sbb
jae
aad
and
dec
lret
shll
sub
js
jp
push
mov
mov
sub
sub
adc
outsl
mov
hlt
push
adc
gs
std
jle
sbb
mov
pop
aad
in
mov
cmpsb
cmp
pop
cmpsl
fnsave
inc
iret
add
mov
mov
or
leave
mov
in
xor
xor
adc
cmp
mov
jne
int3
push
and
jge
xchg
xor
jb
sbb
push
lods
andl
int
push
push
dec
add
or
fs
ret
cs
arpl
mov
lret
mov
inc
sahf
dec
addr16
insl
fisubrs
lock
adc
iret
ret
cmp
aad
arpl
cltd
insl
out
push
ss
stc
adc
sti
add
arpl
or
lea
out
push
lods
push
shlb
adc
mov
pop
add
test
cmp
xor
jmp
xchg
push
mov
stos
icebp
jne
mov
imul
add
lods
pop
jbe
push
pop
call
psllw
add
mov
cwtl
mov
or
add
mov
jbe
sub
imul
xchg
mov
mov
or
inc
mov
mov
xor
or
je
rorl
add
xchg
mov
mov
outsl
adc
shlb
xor
jne
bound
aaa
jno
clc
mov
mov
out
hlt
scas
mov
mov
lret
mov
pop
push
sub
cmpsl
xchg
arpl
jns
xchg
jne
inc
je
add
movsl
gs
pop
mov
jl
add
inc
insl
inc
inc
xor
pop
mov
dec
add
insb
push
clc
inc
imul
cmp
sub
mov
jecxz
shrl
lret
stos
sbb
fistps
push
pop
ljmp
loopne
ja
add
xchg
xchg
jp
aad
dec
mov
cmp
test
js
add
cmp
push
adc
pop
lret
inc
push
sbb
arpl
inc
das
jge
jno
mov
mov
xor
sarb
mov
inc
mov
sub
pushl
and
data16
nop
add
pop
jmp
mov
test
mov
test
scas
mov
jno
add
or
sbb
shlb
faddl
sub
mov
daa
inc
divl
nop
xorb
imul
xchg
or
lock
orb
sti
popa
sbb
xchg
mov
ss
hlt
jne
repz
cmpsl
lret
in
cs
movsb
push
daa
add
add
icebp
sbb
mov
or
nop
fdivrs
adc
repnz
xchg
dec
dec
test
ret
adc
rolb
icebp
mov
out
filds
leave
lods
call
pop
out
loopne
dec
add
in
hlt
incb
xchg
inc
mov
or
dec
pop
add
adc
nop
mov
ret
inc
out
shlb
sbb
push
push
or
stc
push
insb
or
inc
in
mov
mov
out
mov
dec
xchg
push
ret
xor
xchg
daa
pop
aaa
and
adc
ja
lods
lods
or
iret
scas
mov
sti
dec
sbb
add
cmp
arpl
adc
mov
pop
push
push
pop
ret
sub
daa
add
xchg
fs
sahf
insb
or
and
in
cmp
cmpb
or
lds
int
std
jno
mov
cwtl
xorb
jmp
mov
fwait
xchg
pop
and
xchg
stos
test
dec
or
ret
mov
fsubrs
rcll
xor
cmp
das
and
pop
mov
insl
jg
loopne
movsl
push
pop
mov
jecxz
mov
pop
xchg
and
ds
dec
mov
jbe
cmp
ss
inc
cmp
outsb
sub
pop
adc
les
push
fstl
push
pop
cmpsl
insl
or
in
cmp
push
mov
and
in
jno
daa
cld
mov
add
and
sbb
clc
sbb
xchg
std
fbld
pop
cmp
movsl
sub
movl
push
and
mov
andb
dec
mov
es
rclb
icebp
add
mov
fs
cmc
adc
gs
lds
xor
in
int
add
mov
pop
daa
mov
xor
add
push
movsb
xchg
cwtl
dec
fstpt
enter
dec
lods
adc
popa
lea
pop
in
xor
sbb
jb
and
sub
mov
sub
scas
adc
lds
imul
jb
sub
shrb
mov
and
imul
sahf
in
mov
mov
add
pop
sbb
out
mov
fwait
mov
lods
xor
mov
add
add
popf
xlat
sub
cmp
repnz
inc
aam
jne
repz
lea
inc
cltd
inc
out
mov
repnz
xor
mov
pop
int
insl
xchg
xor
inc
mov
jge
adc
or
jge
stos
sub
out
mov
xlat
sbb
add
orb
cs
cli
subl
pop
stos
pop
repz
nop
js
pushf
push
adc
cmp
shr
mov
movsl
jb
test
cli
stos
movsl
imul
cmpsl
lcall
loopne
mov
xchg
mov
jbe
inc
pop
push
jge
adc
mov
in
and
dec
cmp
mov
sbb
mov
sub
xchg
loopne
cld
inc
xor
cmp
or
ret
add
ret
sahf
in
loop
enter
pop
rorl
add
jno
aas
test
push
fisttpll
int3
fmull
cwtl
xchg
hlt
leave
arpl
pusha
adc
adc
dec
cmpsb
push
mov
xor
jae
js
pop
sub
sarl
mov
pop
loope
insl
mov
xor
rcrl
pop
jl
inc
mov
jl
add
shrl
pop
mov
mov
jl
aas
fbstp
int3
jnp
add
jns
dec
push
jmp
pop
adc
push
adc
rcl
sahf
sarl
insw
lcall
cmc
push
les
pop
push
push
push
repz
bnd
addr16
inc
pop
gs
xor
js
xor
in
dec
cli
aas
sub
imul
push
mov
xor
mov
and
insl
das
insl
or
sbb
inc
js
fnstenv
mov
jb
daa
test
into
andb
rcrl
aaa
cmp
andl
fs
adcb
xchg
repz
dec
fistps
sarl
and
lds
push
push
jbe
sbb
dec
ret
fistl
lret
xor
mov
inc
mov
sub
enter
leave
and
mov
sub
and
push
sbb
pop
std
fcmovnu
stc
roll
data16
mov
jb
inc
sbb
xchg
stc
sub
add
sbb
push
fwait
sub
pop
push
xchg
cmp
or
arpl
cmp
cmpsb
stos
or
dec
sahf
xchg
xchg
pop
inc
and
mov
ficompl
stos
icebp
sub
dec
add
cmc
loopne
shrl
xchg
sbb
divl
and
inc
call
add
sbb
dec
out
aas
pop
stos
dec
out
lret
movb
sahf
adc
mov
and
aad
jl
in
in
subl
pop
mov
add
push
xor
out
cld
jmp
test
jle
jae
mov
sbb
popa
xchg
pop
mov
repnz
dec
mov
pop
stc
dec
shrl
addr16
daa
sarb
sub
sbb
jbe
mov
aas
dec
jne
insb
ss
inc
in
fcomps
inc
mov
xor
out
call
pop
and
cmp
pop
xor
push
inc
or
sub
lret
xor
test
jle
add
mov
jge
push
leave
fadd
mov
push
push
pop
and
xor
sbb
mov
pop
jecxz
mov
mov
lahf
pop
mov
inc
sbb
test
cmp
push
ror
sbb
adc
add
add
sub
ret
mov
mov
in
add
pop
rcpps
loopne
inc
lds
icebp
imul
iret
or
out
jle
ja,pn
out
cmp
sarl
or
jne
ss
sub
pop
mov
or
pop
jle
out
mov
inc
arpl
je
xor
aaa
movsb
rcll
sahf
cmpsl
int3
lcall
xor
cmp
mov
jno
fiadds
imul
cs
mov
mov
push
mov
imul
xor
into
cltd
mov
lret
cmp
insb
mov
leave
add
rorb
lods
add
mov
sub
inc
mov
inc
out
daa
pushf
stos
lcall
push
xorb
out
ds
xchg
je
inc
ljmp
inc
mov
xor
mov
add
jge
call
aad
mov
jmp
mov
adc
loopne
mov
mov
mov
push
adc
jne
cltd
xchg
sbb
out
jle
sahf
mov
icebp
std
cmpsl
test
loop
sub
cltd
into
sub
int3
out
inc
adc
jno
jle
popf
xchg
stos
jnp
mov
mov
out
decl
stos
xchg
movsl
xor
push
in
jo
scas
mov
nop
sub
mov
cmp
daa
ret
jg
lret
aam
add
sti
cs
in
into
lret
push
dec
xchg
ficomps
dec
rclb
sbb
fists
cmp
jp
xor
xchg
xor
xor
push
mov
or
call
loopne
imul
popf
fidivl
mov
add
xchg
sub
adc
ja
loop
incb
pop
mov
shlb
and
dec
or
xchg
test
adc
xor
xchg
outsl
lods
mov
or
fcomp
aas
mov
adc
jbe
pop
xor
jnp
dec
aas
cmp
sub
jg
dec
insl
pop
popf
scas
lea
fucomp
int
std
iret
in
fistps
cvtps2pi
pop
outsl
dec
jg
dec
insl
pop
popf
scas
lea
fucomp
int
std
iret
in
fistps
cvtps2pi
pop
outsl
dec
jg
dec
insl
pop
popf
scas
lea
fucomp
int
std
iret
in
fistps
or
cmp
sub
jg
dec
insl
lahf
popf
scas
lea
stos
addr16
add
xor
and
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
fldl
jb
bound
adc
or
sahf
mov
loop
xchg
loop
lock
mov
and
push
add
adc
xor
shlb
loop
rorb
mov
xor
stos
mov
dec
sub
and
jge
rcrl
mov
fwait
out
sarb
push
pop
jb
or
push
add
call
mov
outsl
rcl
push
cmpb
cmpsb
mov
pop
out
cmp
orb
xchg
subb
xor
and
aaa
pop
sbb
xor
cmp
adc
test
ret
psrad
add
bnd
sahf
ret
sub
xchg
adc
sbb
mov
ret
mov
outsb
insl
jecxz
or
lods
aaa
dec
ficoml
call
mov
icebp
inc
mov
xlat
mov
repz
shrl
jae
pushf
sub
and
pop
scas
loope
fidivrl
push
mov
jecxz
or
or
adc
jb
bound
mulb
jb
cwtl
test
adc
pop
je
xchg
rcr
fcmove
mov
add
mov
push
inc
sbb
sub
aaa
shl
xchg
notl
in
xchg
add
pop
addr16
jae
arpl
aaa
jnp
addr16
sub
ds
nop
in
out
cmc
jmp
in
mov
je,pt
jne
push
xor
push
add
inc
and
mov
loop
xchg
loop
repnz
mov
xor
bound
adc
jb
inc
and
mov
loop
xchg
loop
repnz
mov
in
mov
ljmp
bound
ficoml
andb
push
add
mov
mov
out
pushf
sub
test
and
jne
jle
cmc
sbb
stos
cwtl
ret
in
xor
xchg
aam
es
mov
xlat
lods
outsb
add
pop
mov
cmp
into
cmpsb
ja
loop
cs
aad
add
inc
test
cli
cmp
or
test
sahf
sub
lret
mov
aaa
jge
mov
xchg
sub
sub
ss
cmp
mov
jge
mov
bound
pop
cmp
fidivrs
dec
push
adc
sbb
xor
aaa
ret
mov
dec
scas
jnp
or
cmp
call
int3
mov
hlt
sbb
sti
mull
or
icebp
lock
pop
cltd
ja
aad
push
fnsave
inc
es
fs
call
add
in
loop
and
ja
push
inc
fsubs
push
inc
stos
lahf
mov
cs
imul
in
or
cmp
or
xchg
fsub
sbbl
rorl
pop
fstp
mov
push
lods
inc
cmp
loop
aaa
pop
in
shll
nop
push
sub
lea
and
das
ja
pop
or
lahf
imul
mov
cmpb
cmp
xchg
xchg
testl
push
imul
pop
sbb
dec
fdivrs
enter
dec
mov
negl
sbb
xchg
fidivrl
iret
arpl
pop
int3
ja
dec
xchg
pop
cmc
test
xchg
sub
sbbb
mov
dec
and
ds
pop
shll
aaa
and
icebp
lahf
inc
jle
pop
push
push
push
sub
std
mov
rclb
hlt
fdivs
xchg
sbb
shll
stc
push
fidivrs
cmp
out
rcrb
inc
xchg
jno
or
imul
mov
std
mov
mov
test
call
pop
adc
sub
cltd
xchg
and
out
mov
or
pop
and
lret
lret
aaa
cli
jle
inc
xchg
insl
pop
cmp
ffree
and
int3
xlat
mov
mov
dec
mov
pop
call
xlat
inc
push
loop
sbb
inc
push
mov
push
push
inc
xorl
dec
stos
inc
adc
scas
call
pop
adc
or
in
lret
ficoms
xadd
fs
fildll
xchg
add
mov
mov
mov
xor
inc
repz
lea
sbb
mov
lods
or
lds
dec
je
aam
pop
rclb
inc
insb
in
pushf
add
enter
pushf
xchg
push
xchg
ds
or
out
popa
loopne
mov
pop
iret
pop
add
aam
mov
push
mov
xor
cwtl
xchg
and
jecxz
ret
inc
xor
sub
lods
jecxz
sbb
lret
shlb
movsb
mov
insl
repnz
cmp
and
pushl
enter
test
mov
inc
leave
jmp
pushf
jae
xchg
popa
ds
or
lods
sbb
es
sbb
pop
pop
inc
popf
popf
les
sbb
pop
leave
pop
inc
rep
dec
push
enter
xchg
sub
mov
sbb
outsl
enterw
adc
cmp
sti
jp
das
dec
mov
xchg
adc
xorl
fidivrl
mov
jb
fistps
out
in
into
aas
push
ror
push
rcrl
push
dec
mov
inc
aaa
popf
pop
mov
sbb
mov
fcoms
push
pop
jge
jge
std
jmp
ljmp
mov
lcall
in
mov
repz
lahf
inc
aam
add
cltd
pop
inc
ret
pop
lea
jmp
add
or
cmc
sub
jno
mov
push
xchg
sub
mov
push
inc
rcr
jmp
sub
xorl
dec
out
pop
jle
xor
inc
push
fstpl
dec
dec
cmp
xchg
gs
gs
mov
adc
cmp
adc
aaa
add
push
incb
push
sub
jbe,pn
dec
sar
arpl
inc
jae
into
clc
dec
lea
adc
jbe
loope
add
xor
out
int3
sahf
fbstp
push
push
sbb
jg
stos
loop
lret
test
push
test
test
sub
mov
adc
sbb
pop
and
push
push
and
sub
or
mov
and
nop
rorb
push
xchg
pop
call
cmp
ret
add
push
stc
xchg
out
decl
loopne
pushl
jl
adc
ret
push
and
add
jnp
mov
inc
push
xchg
mov
add
xlat
mov
js
jp
in
cmc
lahf
sahf
repnz
mov
jle
pop
popa
in
pop
or
es
mov
cmp
int
mov
clc
in
test
mov
je
insb
fistl
sbb
test
jg
mov
mov
pop
fstpt
ds
pop
scas
pop
dec
enter
fs
xchg
lods
mov
scas
fisubrl
fidivrs
lahf
jae
inc
jo
fiaddl
pop
es
dec
in
sbb
add
nop
or
mov
xchg
jae
aam
pusha
int3
adc
mov
es
pop
pop
shl
ja
jns
cld
jae
sub
pop
cmp
or
adc
jg
jecxz
cmpsl
lret
adc
rclb
pop
jo
int3
scas
jle
in
ljmp
fdivrs
sub
addr16
popf
mov
inc
pop
aaa
fldl2t
loopne
xchg
push
push
push
jmp
and
sub
and
nop
cs
ret
adc
jbe
in
loop
nop
pop
mov
add
fcom
cmp
dec
inc
mov
and
popf
cmp
pusha
cmc
add
cltd
imul
cmc
out
out
push
dec
ret
lds
lds
add
mov
adcb
jecxz
lods
pop
cltd
movsb
subl
sbb
fs
js
movsl
push
jg
cld
scas
das
inc
xchg
in
arpl
shrb
lret
popl
in
shll
test
xor
adc
xchg
dec
sub
popa
and
out
xchg
or
mov
dec
fwait
lods
enter
decl
and
lret
push
insl
pop
push
test
test
adc
movsl
lods
xor
xor
icebp
cmp
mov
add
movsb
push
xor
mov
andl
xchg
push
mov
loope
inc
jmp
aad
subb
faddl
push
mov
lods
gs
and
ja
xlat
pop
arpl
in
push
cmp
push
mov
mov
lock
push
es
dec
test
xchg
pop
mov
adc
push
ldmxcsr
fldenv
jp
sub
rcr
aaa
repnz
test
les
in
mov
and
inc
imul
xchg
or
aas
push
out
xorl
xchg
jno
daa
imul
add
mov
daa
add
xlat
mov
rclb
xorb
pop
mov
push
sahf
das
je
push
push
dec
mov
xor
sub
adc
es
push
insb
add
pop
mov
fcmovnu
pop
jg
aaa
fildl
test
sahf
clc
cmc
es
inc
inc
mov
fstl
mov
icebp
shlb
test
popf
mov
mov
inc
fdivrl
add
js
repz
cli
sub
loop
sbb
sbb
xchg
mov
jmp
pop
dec
or
mov
push
cmp
adc
dec
ja
call
js
fnstenv
or
popf
loopne
jne
add
iret
and
mov
xchg
jl
pop
mov
inc
cmp
scas
repz
jne
xchg
fs
inc
out
aaa
lcall
xchg
and
in
mov
bound
cwtl
jl
nop
pop
es
rorb
jg,pn
push
sbb
and
int3
mov
arpl
stc
mov
mov
jae
aad
cwtl
jbe
and
mov
arpl
inc
cmp
in
iret
sub
loopne
ret
imul
lock
fdiv
out
push
cld
dec
mov
jmp
shll
js
cmp
addb
xchg
adcl
insb
cmp
jo
push
push
sbb
fwait
push
cmpsb
jne
dec
or
loopne
daa
jno
lock
ret
push
add
shrl
jge
orb
pusha
mov
aaa
or
fcmovbe
add
push
inc
bound
icebp
cwtl
es
aaa
pop
add
aad
adc
inc
mov
mov
daa
int
mov
and
jmp
mov
mov
mov
or
outsl
pop
sub
pop
cs
addr16
ja
nop
jne
cmp
jmp
ficoml
xor
add
pushf
dec
and
mov
mov
mov
jns
int3
jbe
cmp
test
ljmp
jecxz
push
pop
lock
jo
pop
lock
adcb
or
push
mov
test
sti
dec
js
lret
out
gs
pop
xor
xor
push
jno
cmp
mov
dec
jmp
and
ljmp
fmull
jecxz
cltd
movsb
or
movsb
nop
fsubs
or
xchg
es
arpl
sbb
push
dec
and
nop
jecxz
popf
xor
adc
dec
xchg
mov
fmul
lock
cli
xchg
cmp
lods
out
inc
rcr
psubusw
fwait
inc
sti
out
nop
push
inc
fdivl
xchg
fwait
xlat
cwtl
iret
or
dec
jg
cmp
nop
adc
add
push
lahf
sub
inc
addr16
pop
inc
sub
pop
sti
arpl
dec
mov
pop
aas
fucomp
xlat
leave
jno
cmp
test
mov
scas
test
jmp
sub
icebp
movsl
cmp
sti
dec
rorb
and
xchg
test
stos
add
or
sarl
dec
in
hlt
mov
push
das
jo
test
popf
lock
add
jns
adc
pop
in
ss
xchg
mov
mov
fsub
sbb
cmpsl
cwtl
dec
fiadds
negb
jne
cmp
inc
rclb
fnstsw
mov
mov
in
cmovl
or
xlat
std
push
push
sub
pop
out
dec
ljmp
xchg
ds
in
inc
xchg
call
sbb
mov
push
sbb
movsl
adc
mov
leave
sbb
push
push
cli
imul
loopne
xlat
insb
dec
mov
add
cs
out
xchg
insb
pop
or
push
adc
mov
test
jb
xchg
cmp
xchg
scas
je
dec
test
jp
and
sub
inc
adc
aaa
xchg
adc
cmp
mov
xor
out
in
int
mov
fidivl
inc
sub
dec
cmp
mov
pop
sub
enter
jle
mov
xchg
push
into
mov
es
addr16
into
inc
sub
sub
or
cld
sbb
enter
and
lds
jno
not
xchg
out
mov
push
dec
hlt
mov
das
pop
sbb
sbb
insb
je
nop
out
out
push
or
out
movsl
xchg
add
dec
jnp
mov
clc
mov
and
jns
dec
lcall
cltd
push
ljmp
hlt
or
sbb
dec
sub
ja
rorb
sbb
mov
mov
mov
shr
push
mov
repnz
outsb
cmp
cmc
dec
and
dec
or
rcll
loopne
adc
cmp
loope
movsb
push
jmp
call
test
dec
das
movsl
cwtl
lahf
mov
push
lahf
ss
push
imul
fsubrl
lret
addr16
ljmp
cmpsb
ljmp
push
dec
iret
lcall
sbbb
js
pop
dec
shll
and
jmp
loop
mov
xor
lcall
in
mov
mov
test
imul
ljmp
loope
fisttpll
adc
aaa
mov
sub
jle
cmp
mov
mov
push
jo
shll
inc
in
das
adc
sub
insl
sbb
xlat
xchg
push
mov
insb
jp
aad
std
cmp
xchg
movsb
iret
scas
sahf
test
mov
pop
jne
dec
icebp
lahf
mov
add
call
push
int
dec
adc
das
dec
je
xchg
mov
inc
or
cltd
pop
mov
push
arpl
outsl
addr16
addr16
test
xchg
jne
inc
ret
mov
dec
out
movsb
xchg
hlt
push
out
push
sbb
and
cs
gs
push
cmp
fildll
cwtl
cld
xor
mov
jae
xor
xor
shll
mov
gs
sub
nop
dec
cld
or
or
mov
push
mov
pushf
popf
cmp
dec
cmc
xor
mov
sub
mov
bound
outsb
addb
cmc
rcl
loopne
sahf
xor
repnz
sti
jo
rcll
subb
clc
test
in
call
dec
movsl
xchg
sbb
xor
adc
pop
rcrl
es
leave
jp
push
adc
cmpl
xor
adc
or
sbb
outsl
push
jnp
call
jae
sbbb
mov
xorl
je
inc
jbe
loope
iret
jl
jg
aad
imul
ficoms
mov
pop
ss
js
shl
pop
jbe
mov
xor
push
pop
and
mov
and
testl
aad
adc
xchg
sti
cmp
jl
sbb
cmp
scas
and
push
xchg
inc
les
sarb
testb
lods
repz
ret
cmpsl
sbb
movsb
orl
adc
test
push
les
dec
std
subb
mov
push
dec
jl
sbb
bound
and
pushl
push
cmp
ds
cmp
dec
dec
xchg
mov
sahf
inc
adc
push
insb
and
fldt
fnstcw
dec
push
fidivrs
in
pop
jno
jns
test
in
xchg
xchg
scas
imul
jo
adc
jne
fcoms
inc
dec
jnp
mov
xor
inc
lods
imulb
sahf
cmp
push
lock
jno
sti
test
add
or
js
aad
jne
jo
sub
adcl
xchg
test
out
or
popa
rorb
sub
icebp
or
ljmp
dec
xor
jo
xor
dec
mov
xchg
mov
aas
fdivrl
shr
jbe
cmp
iret
fs
cmp
fstpl
popa
xor
cmp
pop
mov
loopne
movsl
out
fwait
stos
dec
sbb
je
push
andb
cmp
outsb
mov
call
pop
imul
lret
enter
lods
mov
std
cmp
mull
xor
sti
pop
imul
inc
ljmp
mov
movsb
jne
shrb
mov
xor
pop
xor
adc
ss
cmp
push
nopl
lcall
stos
int
sbbl
out
cmp
mov
push
push
test
or
sbb
sub
mov
push
aas
mov
shll
cwtl
jb
lods
dec
and
es
pop
sub
fstpl
sahf
in
insl
add
sub
icebp
test
pop
fldenv
rol
loopne
lret
push
pop
jge
jns
rorl
rol
pop
push
push
or
mov
arpl
popa
pop
push
int3
mov
bound
and
in
test
add
lock
repnz
dec
cmp
sbb
push
jle
andb
push
les
jecxz
cli
jns
mov
pop
movntps
mov
ret
dec
int
pushf
push
sbb
push
mov
in
es
sub
rcrl
and
pop
pushf
roll
inc
sub
mov
mov
outsb
out
dec
lods
sub
das
loope
dec
ret
movsb
fsubrl
push
leave
lods
push
hlt
imul
or
or
xchg
mov
sbb
push
shr
in
inc
addb
jne
std
mov
cmp
lock
xchg
out
fiaddl
mov
addb
sub
aaa
inc
lods
icebp
in
inc
mov
fwait
jns
sbb
sbb
cli
jg
adc
clc
iret
ja
cltd
add
iret
ss
add
xchg
and
int3
adc
dec
adc
cmp
pushf
add
inc
mov
lds
mov
scas
adc
dec
jb
xchg
fimull
mov
pop
sub
cwtl
addb
orb
jmp
popf
insb
pop
in
imul
add
mov
adc
add
sub
lods
jno
xchg
scas
mov
push
scas
es
in
add
and
ret
jbe
mov
dec
into
mov
and
in
mov
jns
inc
mov
push
or
mov
ja
xorl
xor
filds
outsl
out
sub
jl
jae
insb
lods
xchg
and
mov
xchg
pusha
aam
std
pop
mov
push
in
nop
pavgb
into
mov
push
mov
out
or
xchg
test
pop
xchg
dec
jle
or
xorl
mov
das
inc
leave
dec
mov
inc
mov
push
jbe
fidivs
sarl
push
scas
push
idivl
sub
sub
mov
mov
imul
loop
dec
jl
xor
cltd
dec
das
add
mov
jne
gs
clc
ret
or
mov
sub
pop
dec
mov
test
push
add
mov
inc
lret
jo
jo
lret
rcrb
fistpll
or
aaa
loop
ret
pop
mov
dec
push
adc
or
mov
addb
inc
push
sub
icebp
iret
cmc
xchg
iret
aaa
mov
cld
xchg
xor
jae
aam
dec
push
ret
daa
inc
xchg
andnps
imul
fiaddl
inc
xor
push
and
xchg
or
sbb
adc
fcompl
mov
mov
inc
jnp
test
imul
fcompl
jle
ss
adc
sahf
insb
push
mov
out
ret
dec
lock
popf
mov
mov
jge
test
dec
add
adc
pop
fisttps
pop
push
xchg
mov
stos
data16
adc
cli
sub
rol
fsubrl
mov
pop
mov
pop
cmc
push
pop
add
xchg
lods
cmp
in
negb
addr16
mov
cmp
mov
leave
fstl
xchg
hlt
xchg
mov
fcomi
pushf
les
sahf
pop
jmp
daa
inc
cmpsl
imul
mov
lea
int3
rcll
push
mov
scas
lret
push
mov
out
mov
xchg
adc
incl
lcall
fnsave
mov
push
out
std
leave
arpl
add
pusha
mov
int
xchg
aaa
and
or
pop
inc
jnp
xchg
test
inc
insb
shlb
mov
cld
push
adc
adc
cmpsl
mov
sub
jmp
jbe
pop
fcmove
pop
mov
leave
iret
xlat
or
or
cmp
fcomps
sbb
cmp
test
mov
dec
repnz
out
out
bound
mov
movsb
cmp
mov
aam
jno
in
das
addr16
pop
push
pop
nop
xor
repnz
jecxz
inc
dec
lret
enter
jns
orb
cmp
rcrl
dec
cmc
mov
movups
sbb
out
test
add
lea
inc
jne
push
xor
mov
mov
shrb
mov
ficoml
enter
lods
rol
cmp
cmpl
fcompl
stos
test
mov
ds
pop
cmp
jno
pop
add
hlt
sbb
mov
in
mov
adc
clc
mov
loopne
es
mov
xor
pushf
shl
xchg
mov
mov
outsl
cmp
rcrb
push
testb
repnz
sub
mov
das
pop
in
fmuls
mov
stc
in
fidivrl
push
pop
adc
std
or
push
adc
cltd
lcall
int
mov
xor
cmp
xchg
push
cmp
mov
loopne
adc
sbb
xlat
repz
xchg
test
sahf
xchg
jb
cld
in
shlb
mov
pop
lock
or
inc
xor
ficoml
cmp
mov
sahf
inc
jl
in
test
push
sub
pop
into
adc
movl
add
frstor
dec
mov
and
imul
ret
and
fimull
xchg
jecxz
fbstp
sarl
nop
push
mov
stos
xor
bound
jb
inc
and
mov
loop
xchg
loop
repnz
mov
xor
bound
adc
jb
inc
and
mov
loop
xchg
loop
repnz
mov
jp
jp
adc
inc
loop
sarb
mov
and
xchg
loop
repnz
dec
rolb
push
xor
add
adc
jb
ret
rcrb
sbb
loop
in
or
sub
push
sbb
add
adc
lods
mov
pushf
mov
std
out
int
sub
push
sbb
outsb
dec
pop
pop
dec
lods
mov
popf
mov
into
sub
push
sbb
jbe
inc
pop
push
lods
pop
sahf
xchg
loope
popf
mov
mov
mov
jb
pop
inc
or
xchg
divb
int3
xor
pop
fsubrs
and
xchg
arpl
repnz
cmc
jge
mov
mov
inc
jb
bound
lcall
test
out
or
sub
mov
lea
pop
or
and
into
sub
push
sbb
scas
enter
and
cmp
jle
jno
lods
mov
movsb
rolb
in
loope
out
xor
jge
into
push
sbb
xor
scas
or
loopne
mov
xor
xor
into
into
push
xchg
lds
fs
ret
cli
mov
mov
mov
and
loope
cmp
adc
jle
outsb
dec
inc
pop
push
lods
cmpsb
mov
xchg
in
out
stc
int
fs
je
insl
sub
add
xor
lods
xlat
fcom
lret
in
in
xchg
std
mov
dec
inc
pop
cs
or
mov
in
iret
in
mov
stos
dec
jg
dec
bound
jnp
adc
dec
pop
pop
dec
lods
mov
popf
mov
std
out
int
sub
push
sbb
outsb
dec
pop
pop
dec
lods
mov
popf
mov
std
out
int
sub
aas
xor
cmpsb
loop
cmpsb
fisubrl
mov
mov
subb
sbb
ror
fistpl
subl
clc
fld
and
pop
enter
jle
xlat
test
enter
sub
pop
aaa
ss
sub
insl
shrl
test
fcmovne
in
fwait
or
xor
sti
xor
roll
sbb
popw
sub
shl
add
jp
mov
pop
mov
inc
dec
sbb
inc
cmp
je
cmp
js
add
ss
mov
mov
ja
mov
int3
int
pushl
aam
clc
inc
stc
sbb
pop
mov
and
mov
mov
and
mov
into
mov
adc
dec
ljmp
push
out
jae
movsb
dec
fsubrl
and
dec
nopl
in
pop
mov
scas
jno
sbb
sti
out
xchg
jae
negb
inc
ds
or
pop
lock
mov
mov
cs
sahf
pop
sbb
jmp
inc
push
test
fidivrl
mov
fcoml
fistps
or
mov
or
call
pop
lahf
jne
mov
imul
insb
mov
adc
es
lock
jg
mov
push
iret
jmp
cmc
cmc
jbe
repz
hlt
arpl
fsub
stos
loop
nop
xor
and
adc
jmp
xchg
dec
mov
mov
insl
cmc
inc
mov
stc
add
fistps
and
rorb
push
xor
mov
es
pop
xor
movsb
dec
cld
data16
jno
xor
sbb
repnz
aad
lock
ret
push
je
xchg
sub
and
fsubrp
pop
sti
loopne
mov
jge
adcl
mov
pusha
mov
scas
mov
jne
cmp
filds
clc
inc
cmc
push
scas
lock
mov
inc
mov
cwtl
add
test
cli
and
mov
insb
push
dec
addb
jmp
inc
cmpsb
fcompl
adc
addb
push
jg
pop
mov
mov
je
scas
and
or
loop
sub
je
mov
push
stos
mov
add
jmp
pop
in
das
lcall
sbb
jmp
mov
sti
cmp
js
fstps
out
xchg
sbb
inc
mov
sub
cmp
mov
xchg
int
push
cmp
pop
adc
mov
push
mov
lock
mov
out
imul
or
fdivl
mov
xorl
faddl
push
out
cmpsb
push
push
pop
lds
xchg
jp
fwait
jb
adc
add
icebp
cs
cld
mov
lds
push
sbb
or
pop
push
stos
inc
sysexit
fcos
cmp
mov
jge
in
stos
xchg
ja
push
nop
les
cmpsb
stos
cltd
adc
push
gs
ljmp
popa
xchg
hlt
int
sub
mov
stc
imul
clc
and
pusha
loop
enter
popa
jnp
jle
into
dec
into
inc
and
sub
mov
sbb
sub
push
in
sbb
ror
out
xor
jo
dec
pop
push
sbb
pop
sbb
lock
cmp
cmp
pop
pop
les
aaa
pusha
cmp
cmp
inc
stos
or
nop
mov
outsl
out
insb
cmp
jns
inc
call
aaa
add
insl
fidivrl
ret
adc
stc
add
sbb
fst
push
sub
pop
push
xor
mov
mov
push
xchg
pop
cmpsb
adc
xchg
mov
mov
outsl
pop
out
data16
jp
int3
add
icebp
aam
lret
push
and
std
dec
mov
and
sub
pushf
aad
cmp
fstl
bound
fldl2t
add
add
cmp
addr16
scas
cmp
sbb
mov
pop
lock
adc
mov
jne
nop
mov
sub
mov
lahf
jne
or
push
sbb
xchg
lock
inc
fldlg2
mov
jbe
shrb
cmp
or
mov
js
mov
push
rolb
dec
cmc
out
adc
sbb
push
cmp
leave
leave
pushf
xchg
in
aad
test
push
rorb
loope
mov
dec
push
insb
aas
mov
sub
cmp
inc
test
dec
stos
mov
pop
xchg
inc
scas
aas
dec
out
ss
in
pop
mov
hlt
sti
cmp
adc
mov
and
mov
mov
xchg
adc
xlat
jl
sub
out
sub
mov
xlat
sahf
push
sbbb
or
mov
adc
daa
fs
mov
xchg
filds
and
and
out
stos
cmp
push
sbbl
and
out
fcomi
fdivl
pop
fmuls
jo
push
mov
sub
stos
test
mov
xadd
mov
insb
jmp
inc
cwtl
xchg
jae
mov
pop
aas
xchg
mov
push
adc
out
fdivs
mov
cmp
sub
lret
aam
sti
testb
outsl
cmp
push
and
fcompl
cmp
sti
mov
rorl
push
push
xor
subl
adc
push
test
aam
push
divb
jge
sahf
inc
test
mov
clc
mov
sub
xor
pop
out
jo
jne
push
pop
repnz
in
add
jge
mov
pushf
cli
enter
sbb
push
push
xchg
shl
xchg
mov
add
or
pop
mov
push
mov
mov
inc
adcl
push
test
insl
mov
fwait
sub
hlt
jle
cmp
and
shll
cltd
clc
repz
in
inc
push
sahf
xchg
mov
xor
cs
and
pop
pushf
shrl
js
add
xor
sahf
loope
aaa
lock
stc
fiaddl
adc
inc
mov
jns
clc
pusha
fdivl
out
add
push
fs
and
adc
sbb
test
ds
aaa
stos
lret
mov
jp
mov
xorl
xchg
shrl
sbb
sub
mov
xchg
outsl
cmp
stos
loopne,pn
bound
pop
xor
adc
repnz
or
addr16
sub
stos
inc
test
int
cmpsb
les
movsl
or
jge
jecxz
jae
fcmovnu
loope
les
mov
cld
in
sub
sub
jns
dec
jne
dec
xchg
pop
mov
push
jge
pop
xor
mov
xchg
test
mov
jno
jmp
dec
in
push
test
cltd
or
pop
xchg
pop
jmp
mov
test
push
daa
pop
movzwl
push
or
sbb
mov
pop
add
fadds
adc
std
cli
mov
dec
push
cmp
incl
stos
adc
dec
mov
xor
xchg
jne
loope
xchg
lods
div
ret
lods
jl
lods
mov
or
or
and
pushf
jbe
loope
aam
mov
sub
jo
dec
popa
roll
mov
sti
es
stos
and
push
pop
cmpsl
cmp
cs
mov
push
pop
or
adc
cmc
adc
stos
xchg
aaa
sub
xor
aam
int3
into
stc
pop
pop
adc
bound
mov
aaa
mov
xchg
nop
sub
mov
orl
adc
call
inc
inc
pushl
call
mov
push
inc
add
inc
xchg
insb
jmp
xor
and
movsl
rcr
and
aas
repz
and
and
xor
das
aas
mov
int3
lahf
jns
in
jo
cmp
cmc
push
jnp
xchg
in
push
rorl
sbb
into
sahf
imul
mov
jns
sbb
sar
push
cmpsb
jno
cmp
mov
push
adc
lods
mov
mov
pop
cmc
andb
dec
xor
xchg
pop
leave
adc
mov
into
jmp
fistps
add
xor
into
arpl
pushf
les
lods
xchg
sbb
jecxz
push
adc
mov
leave
aam
jl
jl
push
es
addr16
shrd
pop
jmp
fisttpl
xchg
mov
pop
sbb
ja
negl
andb
repz
gs
jl
xchg
icebp
std
mov
cmp
mov
pusha
xchg
dec
sahf
xor
fisubrs
inc
fisttpl
fwait
inc
sbb
int3
jmp
push
fistl
mov
leave
gs
mov
adc
xchg
mov
mov
dec
inc
cmp
mov
adc
bound
cmpsb
push
xlat
xor
and
pop
dec
outsl
push
daa
mov
dec
fbstp
loop
mov
in
mov
sarl
ja
inc
cld
mov
imul
stc
push
cmp
lock
adc
call
leave
hlt
roll
mov
je
negl
mov
ret
push
mov
jle
je
dec
xor
sub
or
mov
subl
filds
xchg
inc
xchg
mov
data16
mov
push
leave
xor
mov
mov
addb
repnz
fs
mov
jg
fiaddl
sbb
xor
xlat
out
and
push
push
outsb
js
xchg
shll
les
lcall
daa
jle
xor
sbb
jg
and
jg
or
sbb
xor
pop
mov
cmp
mov
iret
mov
push
dec
loop
nop
push
push
add
dec
into
jmp
ds
popa
idiv
insl
cmp
ret
and
in
repnz
int3
mov
xor
int3
pop
in
dec
loope
mov
aaa
xor
cmp
jmp
rcr
or
push
push
sbb
stos
leave
xchg
add
mov
mov
adc
add
pushf
pop
jb
xor
lahf
or
nop
icebp
and
adc
in
mov
inc
pop
jmp
pop
dec
cli
xor
movsl
cmpl
fistl
mov
neg
shl
xchg
aaa
mov
lds
int3
push
push
sub
cs
mov
cld
or
out
push
lock
jp
icebp
sub
test
lods
in
cmp
fisttpll
xchg
rorl
inc
subb
cmp
pop
jno
jmp
xor
sbb
inc
push
repz
xchg
sarb
sub
insb
imul
push
dec
sub
les
pusha
xchg
sub
push
mov
or
cmpsb
bound
mov
push
or
pop
inc
insl
and
mov
xor
dec
pop
scas
jecxz
addr16
movsb
ljmp
and
jb
pop
fincstp
inc
cs
lds
fsts
inc
add
loope
loope
cli
mov
inc
dec
sub
pop
mov
mov
xchg
loop
repz
pop
mov
sub
mov
dec
insl
outsb
pop
cmp
cmpsb
dec
ret
jnp
rcrl
adc
mov
sub
and
out
push
outsb
addl
dec
push
mov
imul
icebp
sub
dec
sti
push
and
aaa
mov
std
mov
mov
inc
push
das
adcl
xchg
fstps
dec
sarl
cmc
mov
dec
xchg
idivb
lcall
cltd
adc
insb
ffree
inc
stos
dec
test
ja
stc
mov
push
insb
mov
jae
add
xor
das
ljmp
xchg
iret
mov
xchg
bound
pusha
fiaddl
jp
jp
or
pop
pop
mov
push
adc
push
lods
sub
mov
out
jecxz
repz
out
pop
mov
or
sub
sbb
rcrl
and
push
ret
cmp
xlat
rcll
subl
std
shrb
inc
dec
pop
das
scas
push
imul
xchg
imull
inc
cld
or
aas
mov
pop
sbb
push
out
jae
sub
mov
jbe
pop
dec
pop
movsl
sbb
rclb
hlt
mov
lods
addl
xlat
adc
lret
xchg
xchg
in
jmp
add
arpl
jge
xor
out
popa
mov
loopne
stos
fldl2t
andl
daa
aam
shl
lods
push
test
ljmp
push
jnp
pop
cli
js
or
mov
repnz
adc
fsub
add
sbbb
clc
rcrb
and
pop
jo
mov
hlt
jmp
adc
xchg
sbb
scas
mov
movsb
stos
or
xor
loop
mov
lahf
es
mov
xchg
and
stos
loop
out
add
call
lahf
loope
mov
jl
jns
mov
push
pop
jecxz
mov
shll
int
into
lock
add
jno
sbb
sbb
mov
mov
xchg
in
sbb
add
dec
orb
push
sbb
mov
xor
pop
shr
lds
dec
inc
mov
aas
jmp
loopne
icebp
add
clc
out
dec
or
pop
push
out
or
and
test
inc
mov
in
pop
arpl
xchg
and
jmp
mov
push
ret
cmpsl
shrl
jle
fs
pop
and
inc
xchg
xor
sbb
clc
insb
jae
loope
sahf
inc
out
daa
fldenv
push
inc
add
dec
imul
jecxz
data16
mov
jg
mov
outsb
mov
xchg
inc
pushf
dec
add
xor
xchg
scas
add
jnp
sub
into
cmc
ljmp
into
ljmp
insl
xorb
data16
mov
push
dec
std
bound
arpl
aam
stos
daa
loope
push
inc
adc
in
arpl
push
jo
jno
push
sub
push
mov
test
hlt
ret
out
sbb
mov
jmp
add
orb
scas
or
mov
xchg
push
insl
pop
js
xchg
add
adc
or
nop
pop
lahf
pop
push
xor
es
or
lock
sub
xor
jns
and
lock
inc
fs
and
jno
fcom
adcl
pop
or
cmpsl
lock
lods
fistl
mov
aaa
test
mov
xchg
dec
pop
xchg
inc
and
negb
adc
sarl
insb
sarl
fcmovb
out
add
push
in
insb
dec
scas
inc
push
scas
jo
add
xor
test
mov
cmc
inc
inc
jl
jle
call
decl
xchg
test
in
mov
push
jo
dec
and
stc
and
pop
fildl
testb
mov
add
pop
sbb
ss
test
cs
in
test
call
adc
mov
movl
popa
mov
mov
adc
nopl
pop
push
test
mov
push
mov
xor
mov
jne
and
jae
cs
sbb
mov
fiaddl
adc
lods
xchg
mov
mull
in
in
stos
pop
inc
test
das
sbb
jo
inc
pop
scas
push
xchg
push
xchg
loopne
pop
outsb
pop
lods
or
cmp
ds
xchg
loopne
mov
in
jnp
xor
stc
xor
test
stc
out
dec
mov
mov
inc
inc
fwait
cld
bound
cmpsb
aad
push
inc
insl
add
int3
sbb
mov
sub
hlt
repnz
or
jb
add
addr16
push
mov
jge
sbb
xchg
ffree
ds
rcl
inc
jae
aad
fwait
or
add
or
pop
mov
sub
xlat
imul
fs
mov
scas
cmp
mov
mov
cs
cmc
xor
cwtl
mov
xor
lock
xchg
or
test
xchg
andb
jge
jle
ret
pop
sbb
jg
imul
mov
lret
mov
loope
shrl
inc
dec
in
call
sbb
dec
stc
cmp
fs
pop
mov
mov
jns
cmp
xchg
xchg
mov
and
xchg
movsl
sub
xorl
insl
sbb
das
dec
jmp
mov
or
xchg
pop
pop
xor
jb
mov
push
decb
jp
sbb
xchg
inc
rolb
and
push
cmc
jp
inc
cmp
push
aad
adc
sub
aam
lods
add
insb
add
hlt
rcrl
stos
movsb
outsl
out
dec
stc
sub
mov
xchg
fs
lret
add
xor
out
mov
xor
push
or
imul
inc
aad
mov
rcrb
fdivrp
lea
es
je
push
push
mov
add
dec
rclb
or
hlt
and
in
mov
push
aas
mov
enter
pop
adc
fbld
sbb
inc
popf
dec
out
jp
cmpxchg
pusha
ljmp
jmp
lods
fisubrl
push
stos
arpl
xchg
or
in
cmpsb
sbb
jl
push
aas
xlat
mov
inc
lock
xor
or
add
nop
pop
mov
xchg
sub
cmp
cmp
lret
sbb
sub
inc
loope
sbb
add
mov
dec
add
cld
fsts
inc
adcl
xchg
rcrl
data16
minps
mov
out
ja
repnz
and
out
cmp
out
iret
lahf
xchg
add
pop
xchg
push
cmp
lods
or
adc
push
sbb
out
add
mov
in
mov
pop
dec
lods
out
pusha
js
or
ds
mov
push
sbb
xchg
or
pop
outsb
pop
pop
push
fldenvs
arpl
mov
sbb
jno
jno
or
push
dec
jmp
xchg
adc
xchg
or
jmp
enter
adc
sarl
mov
xor
sub
call
out
push
loop
scas
stc
mov
sub
cmp
and
mov
cmp
insb
xor
xorl
pop
insb
xchg
adc
push
aad
icebp
ret
push
outsb
fcoms
std
cld
inc
shl
in
aad
dec
pop
mov
mov
push
int
imul
xor
xchg
mov
mov
cltd
and
lds
setb
out
add
ficoms
pusha
mov
nop
xchg
jae
xchg
lods
fbld
outsb
dec
push
adc
jnp
adc
sub
iret
dec
rcrl
lds
aad
int3
js
and
push
int
nop
pop
pop
fnstsw
xor
cmpsl
cmpsb
ds
pop
scas
test
pop
jg
addr16
mov
xchg
xchg
pusha
cmp
or
cmpsb
xchg
jb
cmp
fnsave
ljmp
push
adc
loop
sbb
xchg
xchg
xchg
mul
xchg
mov
fwait
mov
jbe
mov
orl
mov
testl
ffree
lret
pop
jbe
xchg
xor
js
bound
lods
enter
jo
pop
fildll
mov
out
sbb
jecxz,pn
test
dec
test
enter
out
stos
cld
or
rcrb
jnp
xlat
lea
imul
popf
idivb
idivl
adc
fcoms
icebp
sub
hlt
inc
movsl
ret
cli
sbb
push
lds
and
mov
xlat
sub
sub
dec
inc
add
stc
mov
pop
xchg
adc
iret
adc
lock
lock
jns
push
add
aas
pushf
inc
imul
inc
call
stos
int
cmc
sub
test
add
add
mov
add
notl
idivb
push
pop
dec
mov
mov
pop
cmp
outsb
push
es
dec
daa
data16
dec
cmp
mov
jecxz
or
ret
mov
pop
sub
mov
mov
aad
lock
jnp
out
into
mov
lods
and
and
pop
sbb
add
adc
das
pop
sbb
rol
xchg
jmp
daa
push
mov
je
sti
mov
inc
std
ss
jno
sub
jp
outsl
sub
adc
jnp
mov
mov
mov
insb
sar
xchg
loop
les
fdivl
aaa
in
jo
repz
sub
bound
nop
push
jo
repz
mov
int
inc
sub
jno
out
mov
jmp
mov
test
pushf
clc
cmp
shlb
xchg
cmpsl
test
push
into
loop
push
adc
cmp
cli
jno
sbb
xchg
les
cmp
shlb
pushf
icebp
imul
ljmp
sbb
push
inc
push
mov
mov
stos
loope
dec
outsb
loopne
in
lea
xchg
xlat
mov
scas
imul
addr16
push
sbb
fsubs
adc
arpl
xor
popa
ja
fcomps
mov
or
sbb
outsb
dec
pop
pop
dec
lods
mov
popf
mov
std
out
int
sub
push
sbb
outsb
dec
pop
pop
dec
lods
mov
popf
mov
std
out
int
sub
push
sbb
outsb
dec
pop
fisttpll
mov
popf
in
std
out
int
sub
push
sbb
outsb
dec
pop
pop
dec
lods
mov
popf
stc
popf
jbe
adc
xchg
lahf
cmpsb
scas
mov
iret
fwait
mov
xchg
mov
adc
es
ss
inc
dec
push
pop
outsw
jbe
xchg
mov
iret
out
idiv
push
movhps
es
ss
inc
dec
push
pop
outsw
jbe
xchg
mov
iret
out
idiv
push
xor
aas
inc
sbb
pop
jg
imul
cmpsb
lret
fists
or
sbb
adc
push
mov
xor
pop
mov
and
jecxz
idivl
das
leave
adc
daa
cmpl
dec
int3
pop
call
xchg
cwtl
add
sub
test
loope
sub
insb
in
jbe
xchg
sahf
gs
mov
scas
into
sub
mov
cmp
or
ror
rclb
push
setle
adc
jns
inc
cmp
mulb
sbb
jge
pop
dec
push
push
stos
sarl
sbb
or
pushf
scas
dec
lret
pop
faddl
out
inc
lock
push
sub
mov
stos
mov
xchg
lahf
cmpsb
scas
mov
iret
out
idiv
push
movhps
es
ss
inc
dec
push
pop
outsw
jbe
jecxz
cmc
dec
loopne
lock
mov
mov
jbe
jae
push
inc
jae
shlb
es
push
sbb
into
loop
lds
popf
icebp
mov
dec
jno
pop
jns
push
mov
xor
bndldx
loope
xchg
jmp
fcmovnbe
lret
andl
incl
movhps
es
ss
inc
dec
push
pop
outsw
jbe
xchg
mov
iret
out
idiv
push
movhps
es
ss
inc
dec
push
pop
outsw
jbe
xchg
leave
outsb
push
or
mov
imul
outsl
popa
addr16
stos
js
fwait
out
fidivs
jno
cmpsb
lea
mov
pop
adc
adc
popf
roll
repnz
and
shl
stos
jns
mov
int
jnp
xchg
cmp
jo
mov
add
fdivrs
cli
pop
inc
cmp
sbb
aam
push
cltd
jmp
mov
add
push
popf
mov
sahf
outsl
sbb
cmp
inc
test
xor
jb
sbb
cld
shr
out
mov
push
mov
sub
in
ffreep
fcmovbe
loopne
mov
inc
loope
mov
xor
aam
push
jle
mov
xchg
nop
xchg
sahf
cmp
imul
add
cmpsl
push
jmp
sub
mov
sbb
imul
aad
icebp
out
dec
cmp
flds
xor
gs
lds
push
add
test
inc
fbstp
push
sbb
and
sbb
push
ljmp
dec
popf
mov
mov
xchg
rcll
fmul
pusha
emms
sahf
out
jb,pn
test
imull
repz
popa
insl
push
jbe
xchg
stc
mov
add
mov
call
int3
jl
sti
xchg
sub
cli
inc
mov
call
stos
dec
rcrb
test
push
lock
inc
xchg
arpl
xchg
negl
lock
inc
xor
xchg
push
jne
int3
sbb
rcrb
adcl
into
bound
xor
fbld
xorl
push
ja
jnp
pop
mov
repz
mov
imul
lcall
out
sbb
cli
leave
je
std
jl
pop
and
mov
negl
xchg
nop
jnp
sahf
aam
xor
sbb
cmp
call
ss
lea
js
xchg
dec
xchg
jo
es
jne
mov
inc
adc
lahf
repz
push
popa
leave
and
cmp
add
pop
fdivr
pop
add
cmp
insb
xor
cmc
jge
bts
pushf
call
scas
sahf
cmc
mov
fs
mov
out
aas
adc
mov
or
js
cmp
mov
xchg
repnz
fstpl
out
decl
add
xor
xor
or
mov
lret
sub
sub
push
in
or
test
push
ljmp
lret
bound
scas
sbb
mov
js
push
cli
xlat
mov
mov
mov
push
sbb
cmc
rolb
dec
lods
mov
fiadds
loopne,pn
cwtl
push
ja
in
xchg
daa
rorb
jnp
test
mov
in
adc
mov
mov
jp
fldenv
lds
out
cmp
pop
test
iret
dec
and
adc
add
aad
pop
scas
mov
outsb
fisubrl
lea
sti
loope
mov
int
test
inc
xor
sub
push
addl
imul
push
adc
pop
fs
daa
dec
inc
sub
pop
je
push
fldenv
ss
jge
sar
pop
fabs
cmp
pop
ficomps
pushf
pop
cmp
add
mov
push
xor
sbb
xchg
xchg
gs
cltd
ret
fcomi
or
or
outsb
xchg
rol
sbb
iret
fmul
ret
mov
sub
loope
jne
lea
fdivrl
sub
xorb
stos
or
hlt
jno
push
cltd
adc
pushw
mov
xchg
jp
mov
push
popf
mov
pusha
mov
pusha
loop
xor
flds
add
lea
jb
adc
inc
mov
into
jl
test
jnp
jle
inc
test
cwtl
ss
int
loopne
lock
cmpsb
sub
leave
and
jp
inc
sahf
lods
push
ds
push
andb
xchg
nop
push
or
inc
mov
dec
mov
loopne
int
inc
jge
jae
xlat
clc
stos
pop
push
pop
test
stc
fmul
addr16
adc
enter
xor
mov
jne
addb
jmp
iret
outsb
and
add
adc
sti
cli
sub
cmp
mov
push
jae
and
dec
out
lods
enter
shrb
in
adcl
out
pop
xor
sahf
xchg
pop
xor
mov
and
insb
push
pop
pop
gs
loop
lds
test
mov
sub
xor
jne
nop
mov
mov
pop
test
aam
push
xchg
mov
test
mov
push
add
inc
sub
mov
mov
mov
jmp
mov
popa
mov
ret
sub
xor
fidivrs
testl
push
adc
push
rolb
shl
sub
push
bound
ja
cmpsl
jno
inc
pop
push
adc
ret
push
pop
mov
mov
adc
adc
xchg
lea
mov
out
into
and
and
sub
daa
lods
cmp
test
movsl
or
shl
pushf
jo
fcmovnbe
mov
into
lret
popa
cltd
sbb
jle
inc
ja
outsb
enter
mov
popf
push
jle
mov
dec
pop
push
inc
push
cmp
jne
or
inc
cmp
mov
movsl
adc
add
sub
xchg
aad
adc
loop
and
sub
repnz
into
dec
mov
call
pop
mov
cmpsl
xor
je
mov
dec
add
mov
rcrb
mull
adc
rcrb
ljmp
sub
je
sbb
xchg
es
add
add
xchg
std
in
stc
cwtl
inc
test
loope
int
js
lret
jae
mov
add
outsb
sub
xor
pop
jns
movsb
dec
call
dec
dec
loopne
sbb
xchg
xor
dec
pop
std
rorb
ret
push
mov
xchg
jg
mov
enter
mov
in
add
pop
sub
xchg
cmpsb
jns
mov
lret
out
inc
jne
sbb
or
call
cmp
es
dec
fisubrs
roll
xchg
rclb
add
bound
inc
cmc
imul
xchg
jmp
sbb
std
sub
sbb
mov
cmc
push
add
addb
stos
fs
push
sub
push
sbb
xor
in
add
xor
push
enter
mov
and
pop
pop
ret
cmpsl
stos
ljmp
push
dec
sub
imul
mov
adc
dec
fst
or
imul
fs
imul
loope
imul
xchg
mov
sbb
sub
fisubl
dec
mov
mov
movsl
xor
ja
pop
pusha
imul
cmpsb
pop
mov
out
jmp
sbbl
jmp
xorl
mov
fwait
into
add
push
fstp
inc
popa
rol
test
and
sbb
das
shrb
mov
add
xor
out
inc
mov
mov
popa
or
out
clc
lods
add
or
rorl
sub
push
push
add
xchg
jno
sub
ss
movsb
and
into
shr
adc
inc
or
pop
push
dec
and
push
push
loop
movsb
in
mov
sbb
insl
mov
addr16
jo
cs
and
jbe
cld
push
mov
pop
adc
xchg
mov
mov
mov
or
pop
xchg
popa
fwait
jne
idivb
nop
movsl
fbld
or
js
js
imul
gs
pop
mov
mov
pop
xor
ja
cmpsb
mov
outsb
adc
jmp
ja
insl
inc
lods
mov
leave
rcrb
sbb
inc
mov
pop
aad
out
pushf
xchg
call
sbb
cmpl
ret
push
jno
xor
stos
adcl
jp
cli
jg
mov
je
xchg
jae
sub
data16
xchg
inc
dec
xor
dec
bound
push
xor
adc
pop
testl
cmpsl
sub
push
and
jns
cltd
scas
push
stc
in
inc
mov
test
inc
call
jae
lret
dec
imul
inc
pop
lcall
sbb
xchg
ret
push
in
inc
push
fwait
and
out
cld
xor
xchg
cwtl
cs
stos
mov
sub
xor
or
cltd
push
xor
je
aad
test
fldenv
sti
sahf
jmp
jecxz
testl
test
xor
push
std
mov
in
cmpsb
push
std
cmp
sbb
sbb
loope
push
rcll
sub
mov
inc
mov
repnz
jno
out
xchg
in
lcall
xor
and
out
aas
sub
cmp
xor
fadds
in
lock
push
push
inc
pop
pop
jns
xor
cmpsl
pop
adc
enter
dec
push
pop
sbb
push
inc
idiv
out
js
jbe
out
mov
mov
jl
imul
fstpt
sub
int3
pop
mov
cmp
ja
scas
pusha
lods
into
cmp
insl
outsb
pusha
push
sub
sbb
cwtl
addr16
sti
orl
inc
addr16
jmp
xchg
inc
jle
mov
push
loope
int3
add
xor
mov
mov
inc
push
jge
mov
mov
insb
test
decl
mov
cmp
out
iret
dec
fists
cmp
fiadds
lea
xchg
aad
push
std
pop
nop
xchg
sbbl
ljmp
push
jne
push
nop
jp
mov
movsl
movsl
cs
jecxz
lahf
cmp
lods
sub
mov
out
dec
mov
add
jge
test
outsl
jns
out
push
outsl
inc
adc
mov
mov
inc
xchg
mov
mov
push
xchg
add
out
and
je
or
add
push
xchg
xor
aas
ret
movsl
inc
dec
fs
mov
sub
jg
sbb
cmp
out
mov
mov
lds
jl
sub
pop
sub
and
mov
dec
lods
test
into
pop
iret
xchg
sbb
imul
mov
inc
xchg
roll
sub
paddd
sub
dec
insb
cmp
arpl
ja,pn
xchg
xor
mov
fnsave
adc
int3
js
mov
pop
stc
jo
mov
push
dec
sub
push
or
bsf
sub
in
lock
lret
out
into
cld
fildll
mov
sub
jae
loopne
sbb
add
and
inc
sbb
jle
loope
sub
clc
cli
bound
cmpsb
push
shll
dec
arpl
daa
sbb
arpl
adc
cltd
shrb
inc
outsl
stos
fsubrs
dec
add
mov
adc
adc
sti
push
pop
js
add
addl
pop
rcrl
les
or
inc
inc
mov
pop
jno
push
mov
xor
sti
in
pop
mov
dec
cmc
inc
sahf
or
imul
gs
jecxz
pop
mov
inc
dec
cli
mov
repz
or
jb
lret
push
stos
sub
loopne
repz
sbb
or
add
xchg
mov
xor
std
aad
adc
jecxz
call
mov
out
or
jbe
rolb
jge
mov
stc
arpl
test
lods
arpl
nop
xor
imul
cmp
rorl
test
clc
pop
leave
push
push
sub
scas
pop
movsb
sbb
lods
lahf
mov
jge
push
inc
adc
scas
and
shrl
sub
sbb
jmp
and
inc
push
and
fs
dec
ljmp
popa
sbb
jae
xor
jae
mov
popf
xchg
insl
movsb
dec
xchg
loop
dec
imul
cmpsl
mov
subl
mov
out
jne
xor
cmp
lock
xlat
mov
inc
mov
pop
dec
vlddqu
stos
mov
shll
cld
dec
mov
bnd
dec
aas
xor
or
cmp
or
js,pn
ljmp
mov
decb
mov
neg
xlat
lods
lock
pushl
pop
sub
loope
mov
out
pop
sub
repnz
push
pop
aad
out
arpl
dec
imul
add
es
je
mov
test
jp
fists
rorl
das
lods
and
jns
jo
movsb
pop
imul
mov
add
or
pop
pop
mov
pop
mov
insl
stos
loop
sbb
mov
lret
fsts
mov
outsb
mov
xchg
popf
stc
jns
aaa
sbb
mov
shrl
das
in
sbb
imul
lcall
cmp
adc
inc
push
push
stos
mov
cmp
dec
in
sbb
lods
xchg
mov
dec
or
mov
scas
pop
xchg
sahf
bound
adc
ret
jbe
ljmp
add
test
jno
cld
iret
jne
jne
add
aaa
call
mov
push
sub
loop
cli
popa
movsl
stos
cli
adc
mov
roll
pop
sub
test
lock
gs
shll
mov
inc
gs
call
insb
inc
outsb
fsubrs
outsl
scas
or
movsl
add
scas
ja
in
push
ret
andl
or
cltd
pop
js
add
mov
test
orl
xor
cmc
movsb
adc
rcrb
pop
xorl
cli
add
pop
dec
test
sarl
cmp
cmp
and
movsb
dec
lea
addr16
mov
mov
cmp
rorl
lock
mov
jl
pop
popa
pop
js
je
movsb
lock
mov
mov
ret
mov
jns
mov
into
lock
pop
cmpsl
dec
cmp
roll
jns
or
xchg
insl
jns
in
fistpll
fidivrs
int
lret
into
mov
push
jle
dec
mov
cmpsl
adc
test
ret
aad
mov
cmpsb
gs
sbb
int
cmp
test
repz
dec
inc
clc
jg
inc
add
cmpsb
cmp
outsl
jnp
aam
xchg
cwtl
call
push
bound
or
imul
push
xchg
cmpl
jmp
mov
xchg
mov
sbb
in
sbb
mov
add
sbb
jle
imul
adc
roll
inc
push
rcll
xchg
jp
or
fstps
in
negb
xchg
xchg
push
imul
and
loope
jnp
xchg
int
xor
jne
ljmp
incl
add
mov
repnz
test
sbb
push
lret
popa
sbb
fsubrs
test
sub
call
lret
jne
jge
sbb
xor
add
cs
gs
pop
add
sbb
sbb
in
sub
dec
push
cmpsl
jmp
mov
enter
or
pop
repnz
clc
cmp
shrl
sbb
push
shrl
aam
dec
push
inc
cwtl
insl
jge
mov
pop
pushf
bound
inc
jbe
sub
add
xlat
dec
mov
cli
aad
inc
push
inc
sbb
out
push
inc
xchg
inc
lcall
dec
mov
icebp
stos
xchg
or
mov
loope
inc
mov
fwait
bnd
mov
repnz
mov
iret
iret
inc
mov
jo
leave
loopne
jns
jl
mov
aaa
mov
or
jg
sbbl
jne
and
xor
xchg
xlat
aad
data16
loop
aam
inc
ds
lret
je
subb
and
and
out
sub
cmp
cmp
mov
arpl
test
adc
xchg
fistpll
cmp
js
in
cmp
mov
xor
ret
int3
sbb
jle
jp
pusha
and
mov
inc
sbb
fisttpll
cwtl
inc
test
cs
pop
vpsllvq
push
xor
xchg
sahf
or
outsl
mov
xchg
cld
and
cwtl
rol
cmpsl
pop
cwtl
scas
mov
push
jne
xor
lds
in
pop
fbld
mov
lcall
repz
sub
or
es
ret
lret
jmp
jnp
inc
xchg
aam
jp
icebp
in
mov
xchg
add
lods
int
lods
rcll
fs
and
cmp
lods
or
mov
xchg
jno
push
out
daa
popa
dec
repz
in
jmp
dec
fdivr
push
lods
sbb
mov
adc
adc
test
in
mov
jl
xor
fs
fisttpl
jb
ljmp
scas
pop
sbb
pop
fcomps
adc
cwtl
push
lahf
iret
xlat
adc
cs
mov
jno
cwtl
and
jbe
mov
adc
aam
stos
cmp
aad
and
and
jnp
or
pushl
mov
and
icebp
gs
sbb
sbb
and
inc
leave
inc
int3
inc
jmp
push
fildll
out
adc
repnz
scas
dec
dec
mov
inc
adc
mov
xor
mov
inc
into
push
pushf
push
xor
xor
das
or
lods
jp
test
repz
mov
cmp
push
dec
out
xchg
aaa
pusha
fwait
pop
shlb
pop
cmpsb
fildll
jb
insl
jo
pop
imul
push
clc
mov
cltd
jmp
fisubs
sub
fidivs
mov
jle
leave
cmp
mov
sbb
scas
ret
mov
int
mov
xor
out
jg
fsub
insb
stos
mov
dec
shlb
xchg
and
popf
imul
cltd
xor
mov
xor
xchg
lds
jno
out
in
movsb
and
mov
xchg
cmc
jbe
add
push
lock
stos
int
xor
fisttps
xchg
xor
mov
test
push
xchg
jns
push
lahf
popa
add
movsb
loopne
test
andb
loope
je
sub
test
test
test
jo
sbb
push
stos
rorl
cmp
cmp
fs
adc
xchg
cmp
pop
in
imulb
adc
mov
push
aaa
addl
inc
dec
inc
fiadds
push
inc
and
xor
or
lds
out
mov
andl
mov
or
cmpsl
rcrl
aad
adc
rorb
or
adc
fisubrs
adcb
scas
adc
stos
es
mov
push
arpl
mov
push
push
dec
ljmp
in
pop
fucompp
sub
add
dec
aad
xchg
iret
xorb
fstl
jo
ret
scas
pop
mov
inc
xchg
xchg
les
imul
mov
mov
lahf
repnz
rorb
aad
lods
pop
int
jge
nop
das
std
mov
sub
pop
sti
ja
in
dec
call
nop
jns
xchg
cli
push
inc
test
and
fists
movl
jo
mov
add
cmpb
mov
add
mov
cmp
xchg
dec
push
dec
lcall
mov
stos
stos
fnstsw
sbb
or
int3
es
insl
dec
test
and
cmp
sbbl
scas
mov
sbb
and
in
std
comiss
sbb
gs
in
push
xor
mov
add
ds
addr16
or
pop
mov
sbb
sbb
lcall
aas
lret
stc
add
dec
xor
das
pop
inc
test
sbb
loopne
lock
ret
sbb
jl
and
and
inc
cli
mov
aam
divl
arpl
in
cmpsb
mov
jmp
adc
xchg
iret
jnp
lahf
xchg
daa
jb
in
decl
or
js
jl
cmp
in
xor
or
mov
jne,pn
les
insb
and
sub
add
mov
xchg
add
xchg
ret
jmp
gs
inc
pop
xor
and
jle
sbb
push
sbb
or
sub
dec
mov
cmp
push
in
popa
addr16
cmp
inc
push
inc
mov
push
pop
jl
sub
pop
xchg
out
push
scas
or
lea
cs
cwtl
fcoms
cmp
out
mov
popf
mov
mov
lret
lret
iret
cmp
imul
xchg
test
addb
enter
pusha
in
test
pop
pop
stos
push
loop
mov
cwtl
into
pusha
inc
sub
in
nop
fistps
mov
inc
test
fsts
mov
mov
push
lret
add
cli
mov
or
jne
dec
sub
out
lea
pop
fdivrl
enter
jb
movsb
cmp
mov
iret
out
idiv
push
movhps
es
ss
inc
dec
push
pop
outsw
jbe
xchg
mov
iret
out
idiv
push
movhps
es
ss
inc
dec
push
pop
outsw
jbe
xchg
mov
iret
xlat
out
idiv
pop
movhps
es
aaa
aas
inc
dec
push
pop
outsl
jbe
xchg
mov
iret
pop
outsw
jbe
stc
lock
dec
xor
fisubs
and
adc
daa
shll
jecxz
pop
mov
xorb
and
push
repnz
ret
arpl
xchg
xor
jb
inc
repz
fwait
mov
xor
inc
ret
arpl
xchg
xor
jb
inc
repz
jecxz
adc
inc
mov
xchg
adc
sbb
xor
jno
pusha
mov
leave
js
push
dec
cli
rcrl
loop
dec
clc
xchg
cmp
rorb
dec
shl
inc
dec
sti
movsb
jmp
pop
inc
sbb
jae
xor
xchg
mov
movsl
cmp
arpl
add
jge
clc
jae
inc
jnp
cmpsl
notb
xor
bound
ret
cmp
movzwl
ret
fucom
inc
shrl
sub
fstps
dec
inc
cltd
push
ret
mov
dec
dec
xchg
int3
sbb
outsl
add
inc
and
popf
fstl
or
inc
mov
mov
mov
add
push
jp
xlat
ficoms
adc
jae
jbe
xchg
xor
jb
inc
repz
jecxz
adc
and
push
repnz
ret
or
ret
ja
push
mov
stos
daa
mov
mov
push
add
push
push
xchg
fwait
xchg
xchg
push
ja
and
push
popl
push
xchg
pop
mov
ret
pusha
xlat
inc
xchg
rorb
xlat
push
lret
imul
std
jb
inc
repz
jecxz
adc
and
push
repnz
ret
arpl
xchg
xor
jb
inc
repz
jecxz
adc
and
push
repnz
ret
arpl
xchg
xchg
jmp
pop
ss
mov
jl
mov
adc
inc
imul
lcall
cltd
jmp
pop
mov
cwtl
test
pop
push
pop
js
push
scas
sub
and
fsub
inc
lods
roll
bsf
roll
test
jo
lret
sahf
je
jae
test
inc
sub
or
fcmovnb
inc
sub
xchg
cmpsb
inc
mov
and
int
jne
popa
cmp
out
xchg
mov
push
lods
push
pop
jmp
push
pop
cmp
insb
cmp
xchg
push
mov
out
es
ret
mov
mov
add
adc
sub
push
sbb
aas
les
xor
stos
sbb
xorl
cmpb
daa
add
push
cmp
bound
adc
inc
sahf
push
pop
das
jp
movsb
into
adc
mov
cli
xchg
jb
clc
pop
pop
add
and
mov
jmp
xchg
push
cmp
xor
pop
and
into
lahf
aam
mov
decb
addl
pop
adc
xor
je
lods
mov
xchg
icebp
std
es
gs
popa
cmp
xor
inc
sbb
sti
mov
outsb
pop
cwtl
cld
adc
sbb
push
pusha
into
mov
out
bound
xor
fisttps
lahf
in
jg
test
sbb
inc
mov
and
mov
test
inc
mov
mov
mov
lcall
addr16
sub
fldcw
out
pushf
add
xchg
pop
addb
popf
fidivrs
leave
jno
stc
mov
sbb
mov
sub
cs
dec
xor
in
into
leave
adc
xor
in
test
aaa
inc
shrb
in
les
into
testb
cmpsl
or
mov
test
ljmp
cld
ficoms
ds
jnp
or
sbb
hlt
ss
cwtl
fs
stos
fadds
xor
cmp
mov
rcrl
cltd
in
roll
aaa
imul
outsb
sub
lret
mov
std
push
sbb
mov
jle
adc
cmp
push
jb
jo
rolb
ret
and
movsl
dec
mov
inc
sub
ja
cmp
push
pop
call
mov
ror
gs
push
test
cmp
divb
adc
insl
sbb
ds
cld
and
ret
dec
mov
jo
or
pushf
mov
mov
pop
add
outsl
les
enter
inc
sub
xchg
call
jg
adc
aad
loop
mull
and
and
cmc
cs
mov
lock
fldt
orb
push
imul
and
mov
xchg
gs
loope
jns
inc
outsl
leave
fistpll
dec
mov
mov
xorb
push
aad
or
push
fstpl
gs
sbb
ret
xchg
fcoms
insb
psllq
loope
test
mov
xor
testl
jnp
and
sti
jb
data16
fcmovnu
lea
push
sbb
movsb
data16
repz
orl
adc
pop
iret
sbb
xchg
scas
dec
call
add
xchg
sub
cmpsb
adc
test
leave
addl
sub
mov
cmp
adc
in
outsb
and
pop
mov
std
push
scas
lods
sub
dec
adc
imul
fistl
jmp
out
adc
mov
scas
add
xchg
clc
fcmovbe
pusha
xor
imul
pop
lock
fs
pop
mov
test
lret
jge
sbb
push
cltd
cmp
xor
mov
push
pushf
mov
xchg
pop
lcall
cmp
cmpsl
imulb
cmpsb
cltd
pop
aas
pop
or
jp
mov
dec
scas
cmp
fnstcw
xor
insb
and
adc
mov
jnp
jbe
pop
mov
jecxz
and
cmp
rcrl
jge
and
xlat
lcall
sub
jl
xor
sbbl
mov
cli
scas
mov
jle
test
adc
sub
push
test
jge
mov
jae
std
pop
enter
or
xchg
or
or
sarb
stos
sarb
pop
in
pop
lods
fs
xor
fstps
cmc
push
loope
test
push
xor
and
inc
sbb
xchg
loopne,pn
jl
jl
icebp
and
mov
adc
scas
mov
mov
subl
jge
fs
jecxz
aas
cld
ret
cltd
adc
jmp
stos
push
aad
cmp
and
nop
mov
xor
push
sub
jno
inc
lds
xorl
mov
push
aam
les
and
sub
loope
loope
push
in
das
inc
mov
cmpsb
add
js
xchg
inc
test
push
cmpb
insl
movsb
xchg
es
xchg
stos
pop
jnp
jb
gs
mov
push
inc
push
arpl
movsb
inc
adc
push
jecxz
push
pop
daa
push
mov
out
mov
xor
out
sbb
dec
or
mov
faddl
call
ds
add
out
pop
and
cmpsl
mov
sti
sub
mov
arpl
fs
mov
inc
cltd
jmp
pop
dec
push
pushf
les
outsl
xor
rcl
sahf
andb
sahf
in
push
cmp
mov
cli
mov
sbb
hlt
mov
pushf
gs
xor
ficompl
scas
sbb
or
int3
test
sub
jmp
or
adc
jns
sub
jl
lret
pop
arpl
jns
mov
inc
add
and
ret
sub
fimull
outsl
in
icebp
sub
xor
fidivs
lahf
lods
cmpsb
inc
lret
hlt
pop
adc
scas
mov
repnz
mov
fwait
add
inc
or
mov
ja
fsubrs
xor
jp
outsl
mov
lea
add
lahf
add
shll
loopne
push
flds
test
das
ss
fs
int3
add
xchg
inc
jno
sub
hlt
inc
out
cmp
mov
dec
arpl
je
jb
loop
push
sub
jb
sbb
and
pop
add
stos
setp
inc
fsubl
stos
cmp
and
pop
repnz
cmp
add
mov
xchg
lret
cmp
scas
dec
inc
mov
pop
outsl
movsl
fmuls
std
in
cli
mov
sbb
mov
adc
rcrb
xchg
loope
cwtl
mov
cmpb
pop
pop
lock
inc
cmp
or
or
jg
mov
jmp
pop
stos
sbb
adc
xchg
pop
add
test
icebp
lret
jge
mov
pop
sub
pop
test
ljmp
mov
insb
inc
push
jae
and
lock
mov
sahf
std
lret
adc
iret
cmpsb
das
aaa
fneni(8087
inc
adc
mov
xchg
stc
movsl
push
sar
outsl
out
push
pop
or
push
push
jg
les
into
fsubrl
movsb
loope
cmp
or
cmp
fisubl
sub
sbb
jl
cld
and
dec
mov
aas
dec
cwtl
xor
jmp
mov
push
pop
aad
ret
mov
loopne
fwait
adc
jp
add
lahf
mov
scas
clc
jecxz
pushf
aaa
incb
lea
js
popa
jecxz
xchg
xor
xchg
push
es
mov
movsb
jne
and
outsb
fadds
mov
mov
jnp
dec
lods
sahf
or
les
popf
inc
test
hlt
dec
mov
and
dec
mov
inc
into
mov
mov
incl
fadds
lea
mov
fidivrl
sub
push
fs
sti
mov
cmpsb
add
jmp
add
hlt
icebp
rol
shlb
xchg
cmp
dec
test
test
inc
imul
push
push
sbbb
es
push
in
shll
dec
adc
hlt
icebp
loop
ja
jbe
push
push
pop
add
into
fwait
push
in
mov
insl
inc
mov
mov
pop
xchg
das
repz
cmp
rcl
cmp
js
int
test
les
lret
into
inc
push
xor
jle
pop
sbb
imulb
mov
aaa
ret
fldl
xchg
in
fidivrs
popa
popa
cmc
fs
push
loop
dec
in
jg
xor
jp
addl
jne
imul
sub
cs
sbb
inc
arpl
pop
inc
mov
jmp
sub
cmpsb
push
jecxz
pop
andb
shlb
rcrl
push
and
sub
lcall
lods
sbb
mov
lahf
gs
push
in
sub
add
cmp
fldt
or
sbb
mov
push
mov
or
jno
sub
and
in
lea
cld
icebp
adc
dec
pop
pusha
cmp
ljmp
inc
out
sbb
gs
movsb
lea
repnz
lods
pusha
xchg
stc
out
shrb
mov
shrb
scas
movsb
dec
test
pop
insb
mov
sbbl
mov
xorl
mov
icebp
addr16
icebp
lret
jg
iret
and
mov
pop
xchg
xchg
cmp
icebp
push
imul
inc
lea
pop
lods
adc
loope
es
jp
adc
add
fcoms
mov
and
xchg
mov
es
push
lcall
push
bound
daa
subb
pop
sbb
fildll
shrl
repz
scas
inc
add
adc
in
addr16
mov
cwtl
xchg
in
sbbb
aad
push
push
loop
clc
out
call
lea
mov
dec
rorb
push
js
outsb
or
mov
adc
pushf
mov
cmp
push
ss
mov
mov
lods
dec
mov
cmp
xchg
lahf
push
in
mov
add
mov
scas
out
dec
cmpsb
adc
xor
cmp
push
inc
mov
mov
loopne
imul
adc
push
cld
mov
pushaw
movsb
pop
das
pop
repz
clc
and
repz
cmp
enter
push
ss
aam
outsb
nop
orb
jl
fwait
stc
jg
mov
sahf
sub
mov
test
adcb
ret
shlb
cmpsb
das
pushf
add
rcrl
cmp
rolb
das
push
ja
subl
inc
cld
movsb
pusha
pop
sbb
repnz
data16
mov
mov
nop
push
leave
jnp
push
inc
adc
xor
jmp
inc
lock
nop
jnp
ljmp
jle
lret
paddsw
push
jbe
and
inc
fisttps
jae
enter
mov
pop
lock
fisttps
cmp
loop
outsb
add
push
xchg
pop
inc
nop
jbe
outsb
dec
scas
inc
mov
sahf
lock
inc
xor
sbb
add
mov
cs
and
jbe
imul
or
jg
inc
and
mov
or
lea
fnstenv
lret
pop
scas
cmp
fnstenv
ljmp
jo
lods
mov
bound
pop
mov
jmp
xor
pxor
push
fists
ret
shrl
paddd
or
jmp
push
stc
pop
xchg
mov
lods
jb
pusha
les
mov
dec
jbe
push
cmc
outsb
arpl
add
mov
xchg
jmp
repnz
mov
lods
mov
data16
or
mov
cmp
fwait
jecxz
cli
das
cli
fs
pop
pop
aas
lahf
sub
mov
lods
pushf
cs
or
loop
or
lret
sbb
imul
stc
out
mov
add
pop
jns
add
sti
pushf
mov
sub
jge
sub
repnz
dec
push
and
das
inc
jg
in
loope
pop
pop
inc
icebp
jmp
cmp
push
lret
or
rorb
cltd
add
rcrl
pop
inc
or
push
push
push
iret
xchg
sarb
repz
mov
jle
in
das
sub
xchg
int
inc
adc
push
loop
and
sub
ds
or
lods
fs
add
idivl
cmp
cs
ss
pop
xor
cmpsl
fbstp
out
fidivs
cmpb
mov
fdivs
jb
or
imul
push
les
push
ret
loopne
jle
fldl
xor
imul
dec
sarb
out
dec
lods
xchg
inc
sbb
fst
int3
or
pop
lds
jns
aaa
and
ja
pop
sti
outsb
or
add
dec
in
jg
jg
aam
icebp
mov
push
inc
mov
sbbl
pop
mov
in
mov
push
insl
test
mov
pop
test
fisubrl
push
mov
out
jecxz
sbb
fidivrs
add
adc
pop
or
iret
inc
mov
mov
push
inc
xor
mov
push
movsbl
add
or
adcb
insl
sub
inc
or
subl
pop
fcoms
or
rcrl
inc
jbe
mov
int
sub
jg
cmp
dec
cld
add
popf
lret
mov
xor
mov
mov
mov
aad
lods
or
inc
sub
fwait
mov
fldt
ror
adc
xor
xchg
rcll
out
pop
inc
mov
jecxz
inc
and
les
push
mov
cmp
push
pop
sbb
xchg
or
sub
jns
pop
scas
and
cmp
jmp
ficoml
fcmovne
xchg
mov
lea
and
lahf
sti
dec
fsubrs
jmp
jl
fdivl
popf
into
ljmp
jo
xchg
gs
jecxz
loope
pop
cmpsb
push
int
out
es
mov
sub
test
ss
xor
sbb
cltd
or
xchg
outsb
xor
das
push
xchg
cmp
add
imul
mov
push
pop
outsl
xchg
jno
stos
decl
test
mov
fdivl
or
jb
push
inc
cmpsl
jp
mov
sub
cmp
and
mov
xchg
push
sub
je
xchg
ss
jae
xor
fbstp
adc
or
xchg
repnz
movsl
jb
mov
fldcw
setno
cs
jge
lods
shlb
add
or
add
popf
mov
cltd
mov
fldenv
mov
rcrl
clc
lods
dec
mov
or
sbb
lret
jb
mov
jmp
push
in
jmp
adc
fdivs
sbb
das
fnstcw
loope
lock
mov
adc
cmp
mov
and
xor
lcall
data16
fimull
aad
cmp
adc
cwtl
inc
add
mov
loopne
jp
loope
push
enter
or
mov
pop
mov
pop
das
inc
cltd
imul
rcrl
loopne
arpl
rorl
mov
ret
jge
adc
lret
inc
add
cmp
xor
cmpsb
subl
xchg
and
mov
mov
jecxz
and
hlt
pusha
icebp
xchg
rcll
mov
cmp
test
lahf
xchg
in
fcomip
and
fistpll
mov
sub
aad
push
sub
mov
sbb
and
fs
cli
xlat
pop
pop
adc
int
push
jg
mov
out
mov
push
lahf
mov
sbb
sbb
xchg
repnz
sarb
aam
ret
pop
xchg
pop
rcr
inc
in
or
das
xchg
lds
lea
cmp
std
insb
or
out
bound
movsb
in
cmpsb
push
shlb
ds
xchg
lret
imul
enter
push
in
cmp
sbb
xor
xchg
sub
pusha
and
push
pop
mov
pop
out
and
xor
fs
clc
jbe
and
adc
jecxz
cli
xchg
push
lods
xchg
or
popa
mov
int3
jne
icebp
mov
andl
cmp
mov
xor
outsl
test
in
mov
lea
xchg
stos
jb
cmp
add
out
xchg
sarb
add
mov
dec
loop
pop
or
insb
fcmovb
ljmp
push
mov
and
lds
fisubs
rorb
push
mov
out
lret
dec
sbb
outsl
fstl
cmpl
fwait
dec
jo,pt
push
cmc
insb
mov
push
leave
loop
ret
mov
add
sbb
mov
int3
lock
xchg
js
rcrb
mov
xor
scas
fwait
stos
inc
jnp
xor
jae
int
scas
or
enter
imul
pop
cmp
mov
mov
fnstsw
int
sub
add
pop
orb
lret
cmp
insl
dec
xchg
lds
je
int
in
sub
out
fs
sbb
fbstp
cli
xchg
dec
iret
mov
in
dec
cmp
dec
lds
sbb
sbb
sub
jg
mov
jl
push
fwait
inc
or
dec
adc
push
outsl
pop
jmp
fdivl
loopne
lahf
shrl
dec
adc
xor
rorl
dec
clc
xor
das
sbb
idivb
rol
push
cli
lret
pop
sub
aaa
mov
iret
mov
sbb
popf
imul
ljmp
push
adc
add
lret
adc
pop
stos
xorl
cmp
cli
inc
cmp
sti
jae
jae
sub
outsl
gs
add
fwait
bnd
daa
pop
or
or
push
add
sub
cltd
insb
mov
xor
sub
mul
test
cli
add
jecxz
dec
ds
fdivp
addr16
aad
lret
jb
sub
scas
sub
jne
inc
fwait
imul
sub
dec
pop
cmp
sub
xchg
cld
in
mov
inc
xor
jl
sahf
jl
cmp
ljmp
push
loop
mov
xchg
repnz
ds
cmp
mov
outsl
lods
les
dec
and
and
sub
pusha
and
test
les
add
xor
outsb
rclb
inc
rclb
faddl
lods
add
push
ror
sub
daa
test
pop
das
and
mov
push
cmp
inc
inc
cmp
outsb
je
cmpsb
inc
pop
cmp
pop
insb
lea
mov
xchg
unpcklps
repz
inc
add
mov
cs
mov
adc
add
lahf
sbb
vorpd
xchg
dec
pop
and
mov
rorb
inc
xchg
fdivr
and
lods
or
mov
jmp
mov
clc
dec
adc
frstor
adc
scas
mov
push
enter
out
jg
ljmp
cmp
icebp
call
andb
xchg
or
outsb
dec
and
cs
loop
mov
mov
mov
fisubrl
push
lret
dec
sub
loopnew
inc
xchg
dec
mov
test
call
adc
adc
xchg
ret
lgs
push
ss
mov
dec
out
std
call
mov
stos
mov
addb
xor
jae
test
int
fadds
add
or
and
mov
cli
add
mov
push
sub
dec
and
pusha
nop
out
movsl
int3
in
divb
stos
ret
jns
ss
loope
dec
popa
sbbl
mov
xor
sub
jmp
pushf
xlat
push
xchg
jmp
jns
jecxz
push
lock
dec
imul
fcompl
int3
xchg
mov
xor
pop
pop
push
xchg
imul
sub
xlat
xchg
push
fstpl
mov
push
mov
adc
bound
mov
je
lahf
jno
jne
push
lahf
test
outsl
sbb
push
orl
pop
jae
fdivl
inc
xlat
jmp
fstpt
fdivl
outsl
out
and
mulb
lcall
iret
or
mov
ja
xchg
push
push
add
aaa
fidivs
data16
or
lret
js
lea
adc
dec
mov
mov
jae
insb
xchg
fwait
push
push
adc
fidivs
cmpsl
push
lahf
adc
sbb
test
in
adc
fsub
dec
es
cmpsb
mulb
lcall
loope
inc
dec
adc
repnz
sub
jg
divl
sbb
data16
push
pop
or
sub
outsl
sar
add
je
dec
mov
ficompl
insl
xchg
mov
inc
mov
xor
jne
xor
les
loop
jp
sbb
adc
int
fucomi
pop
popf
lods
push
mov
add
xchg
adc
inc
repz
jecxz
adc
and
push
repnz
ret
arpl
xchg
xor
jb
inc
repz
jecxz
adc
and
push
repnz
ret
arpl
xchg
xor
jb
inc
repz
jecxz
adc
and
push
repnz
ret
arpl
xchg
xor
jb
inc
repz
jecxz
adc
push
xchg
fstpt
cmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
xor
adc
xchg
cmp
imul
pop
add
xor
popa
leave
jno
xchg
and
mov
jnp
dec
icebp
pop
sbb
sub
jns
jno
cwtl
sub
insb
shll
or
push
in
inc
adc
push
cmp
repz
sub
shl
cmp
out
xor
leave
imul
es
mov
out
or
daa
loope
push
mov
sarb
aad
ljmp
cmp
int3
sub
sbb
testl
lret
push
jmp
or
nop
xchg
testb
push
sar
push
icebp
dec
push
sub
inc
lods
jbe
in
mov
roll
mov
imul
push
sbb
fsubr
push
icebp
int
jno
adc
enter
inc
sbb
fdiv
loope
test
cltd
loope
icebp
pop
enter
and
inc
stc
popa
leave
push
and
jno
popa
sti
push
icebp
pop
insl
test
inc
cld
xor
aaa
cwtl
sub
jno
addl
jl
or
jnp
es
xor
dec
cli
inc
imulb
mov
hlt
pop
mov
sbb
sub
dec
in
pop
fmull
ficoml
popa
leave
jno
subl
mov
shrl
loope
icebp
pop
add
xor
popa
leave
jno
subl
mov
shrl
loope
icebp
pop
add
inc
fwait
sub
pop
mov
mov
adc
test
xor
mov
inc
cmp
test
clc
mov
lods
cmpl
xchg
pop
out
sbb
mov
enter
test
aaa
jmp
adc
inc
mov
into
out
gs
and
push
xchg
sub
daa
in
sbb
add
mov
repnz
pushf
jae
outsl
into
xor
outsl
outsb
sbb
jl
ret
dec
sti
mov
inc
mov
cmp
mov
add
jne
adc
lahf
clc
mov
or
cmpsb
lods
jmp
gs
je
aaa
inc
repnz
lcall
mov
in
cmpsl
mov
dec
lcall
clc
push
and
sbb
das
add
in
sub
mov
test
testl
mov
adc
es
and
mov
loope
adc
repz
pusha
sub
and
inc
pop
lcall
dec
or
call
aam
push
cmpsl
cltd
enter
js
sub
dec
xor
shl
adc
pop
add
movsl
cli
jg
stc
xor
roll
data16
jmp
jmp
idivl
and
js
mov
lahf
imulb
int
out
cmp
xchg
orb
rcl
fdivrp
fsubr
lds
adc
sbb
into
mov
jne
lods
sbb
mov
add
fcomp
jno
push
inc
push
rcll
jg
pop
pop
lret
lret
addr16
adc
xchg
clc
rcrb
aas
pop
xor
faddl
xlat
pop
mov
cmp
sbb
pop
mov
mov
jmp
jle
push
popf
out
mov
mov
push
or
sti
daa
cmp
jae
sahf
sub
dec
xchg
incl
add
xchg
cmpsl
gs
sar
cmp
push
sbb
in
fcoml
loope
cmp
xor
ret
push
test
stos
push
adc
rcl
repz
sub
mull
mov
ljmp
and
fisubs
movzbl
adc
mov
pusha
lret
nop
lock
test
int3
lret
jno
pop
mov
jg
and
and
out
pop
and
inc
mov
and
xor
je
dec
or
int3
mov
fisubl
cmp
mov
mov
xor
xor
cld
sti
lock
popa
rcll
lcall
push
dec
das
daa
and
andb
into
test
mov
push
cmc
or
movsl
cmpsb
rcr
or
mov
push
inc
ljmp
stos
inc
cmp
insl
dec
mov
cmp
xchg
ret
xor
mov
sbb
push
enter
lea
movsb
inc
mov
mov
jns
fwait
scas
sbb
jo
jecxz
cld
insb
mov
decb
cmp
repz
push
repnz
xchg
insb
cmp
push
inc
lods
sub
out
rol
mov
aaa
sub
cmp
inc
and
xchg
enter
aad
ss
xchg
or
jo
sti
js
std
cmp
loopne
hlt
lret
stos
xchg
dec
or
adc
sbb
push
insb
nop
cs
lods
mov
cli
popf
adc
xchg
or
adc
popf
inc
shlb
cmp
cmp
mov
mov
jg
clc
pusha
or
jp
js
mov
stos
mov
in
jecxz
jp
sub
aad
jo
loop
imul
setp
outsb
cmc
arpl
or
invd
jae
xchg
or
dec
std
mov
pushf
xchg
cld
test
sub
les
push
bound
xor
ds
pop
rolb
gs
rclb
dec
mov
mov
add
cli
xlat
popf
push
mov
pop
mov
test
fidivrs
inc
cmc
sub
cmp
mov
xchg
insb
popa
mov
cmp
notl
mov
dec
dec
popf
loop
mov
stos
mov
imul
popa
xchg
std
je,pn
stos
ljmp
push
xor
jb
dec
jge
dec
loopne
movsb
jne
dec
or
mov
ficomps
cmp
es
mov
mov
lret
mov
arpl
push
mov
leave
sbb
and
in
and
aas
mov
dec
push
mov
shlb
mov
mov
loop
dec
xor
jne
stc
mov
jl
fldt
pop
cli
xor
loop
jle
mov
fcomps
jnp,pn
dec
adc
push
mov
xchg
jecxz
ljmp
ftst
or
adc
adc
push
push
mov
mov
inc
cmp
aaa
lret
sub
iret
fistl
xchg
cmc
or
movsl
push
mov
scas
movsb
xchg
mov
jo
cmpsb
xchg
xor
in
push
fdiv
jmp
movsb
dec
out
push
pop
enter
arpl
test
pop
adc
inc
add
gs
cmp
jl
mov
out
in
ja
cmp
inc
rcll
add
ljmp
pop
add
hlt
cmp
and
fldt
shlb
out
ret
jo
push
sbb
stos
inc
lods
pop
test
sar
pop
pop
jmp
ss
jl
in
sahf
lahf
inc
jecxz
imul
mov
dec
test
dec
lods
push
fs
test
arpl
out
cmpsl
lret
inc
ret
sbb
and
fidivl
lea
insl
icebp
test
xchg
rcll
fcomp
push
mov
lods
sub
js
repz
xchg
push
les
shlb
adc
push
cwtl
test
lcall
add
insb
ret
or
sub
dec
mov
out
cld
outsb
dec
scas
xor
lcall
sbb
mov
mov
enter
iret
or
pop
in
sub
sbb
mov
sbb
jp
subb
and
dec
jne
out
ds
inc
ret
addb
xor
xchg
call
or
fbstp
rorl
add
shl
push
repnz
loop
sbb
push
shufps
push
insb
xor
mov
movsb
cmc
sub
outsl
add
lahf
jae
pushf
or
xor
jb
cld
mov
negl
fcoms
cli
xchg
and
imul
lds
sbb
pop
jge
loope
sub
int
fadd
xor
or
sbb
pop
repnz
push
cmp
gs
and
lret
cmp
sti
sbb
or
ja
jne
rcrb
xchg
xorb
add
pop
scas
xchg
push
adc
push
mulb
into
sub
stos
jl
xchg
mov
ja
jo
inc
stos
into
inc
dec
repnz
add
jnp
movsl
jno
enter
les
fdivrs
add
cmp
push
xchg
outsl
jle
loop
imul
test
fxch
jmp
icebp
push
lds
pop
xchg
mov
inc
push
mov
cli
inc
testb
cli
das
call
inc
xor
add
test
aas
nop
fistpll
divl
mov
dec
xor
pop
jl
add
mov
mov
lds
xchg
and
movsb
ljmp
adc
mov
push
cld
fadds
out
sub
jno
das
addr16
xchg
fidivs
jmp
pop
jo
adc
sbb
mov
in
fcoml
mov
cmpsb
cmp
test
movsl
cmp
out
pop
dec
std
loopne
pop
dec
in
sbb
xchg
sbb
xor
or
push
pop
xor
sub
pop
mov
addr16
fstpt
jo
jbe
rcll
ret
icebp
push
jmp
addl
pop
daa
push
sbb
add
orl
dec
je
jg
jmp
out
xchg
test
and
inc
mov
push
adc
sbb
pop
mov
mov
mov
movsl
mov
adc
addb
mov
call
mov
addl
xchg
mov
xchg
fdivrs
repnz
insb
cwtl
lret
pop
sbb
mov
xchg
mov
fidivs
loop
pop
lods
addb
adc
insl
mov
push
mov
fdivrl
test
sarb
xchg
jb
inc
cmpl
gs
xchg
xor
xchg
cmpsb
sbb
adc
xor
mov
add
inc
or
sti
lahf
aaa
outsb
jecxz
sbb
test
sahf
loope
gs
or
in
mov
int
and
dec
js
or
lahf
getsec
xor
inc
add
sarb
test
in
lea
push
mov
rorb
pop
les
cmp
mov
sub
mov
inc
pop
addl
inc
inc
subb
jns
pop
cltd
and
push
mov
mov
xor
movsl
loop
pop
out
sbbb
into
les
fs
push
dec
inc
lds
cmc
jnp
mov
pop
cli
cmp
adc
xorl
jecxz
pop
lods
mov
cmc
test
jmp
push
mov
popf
test
lcall
lret
fisttps
adc
xchg
fdivs
xor
jl
inc
add
fidivrl
popa
push
xchg
rorb
push
push
jecxz
andl
sub
andb
mov
lods
pop
scas
testb
cli
fbstp
cld
pop
pop
dec
mov
icebp
pop
roll
sbbb
std
das
inc
lret
jns
inc
push
fwait
out
lds
scas
mov
icebp
in
xchg
mov
add
cwtl
fiaddl
mov
mov
shl
movsl
dec
or
and
lahf
jb
das
jmp
push
push
jb
push
and
xor
bound
mov
jnp
imul
sbb
pop
or
adc
addb
xchg
stc
ja
xchg
add
sub
jns
lret
test
and
sbb
jmp
lahf
jbe
push
stos
jno
jb
cmpsb
lods
movsb
mov
mov
aaa
mov
jae
nop
jecxz
dec
or
sbb
mov
fnsave
das
jecxz
rcll
push
inc
stc
push
cmpsb
repz
lahf
outsl
xchg
inc
scas
add
notb
ret
int
jo
test
pop
out
xchg
daa
fwait
sub
push
fiadds
aad
push
xor
fldenv
outsl
pop
sbb
icebp
repnz
xor
pop
aaa
clc
rcr
movsl
sub
aas
popf
jp
dec
push
inc
fadd
ficompl
dec
jmp
je
and
das
shlb
dec
insl
jo
dec
insb
jnp
push
mov
push
fstl
mov
mov
xor
xor
fcmovnu
dec
data16
mov
push
lock
std
ja
or
and
ds
shrb
dec
pop
ret
xor
mov
icebp
and
push
ss
in
lahf
push
int3
lret
decl
mov
roll
jmp
jbe
ret
test
andb
test
cmp
orb
jae
mov
repz
shrb
shll
add
sbb
bswap
pop
mov
lahf
cltd
rcr
pushf
cmp
push
xchg
pop
xor
xchg
xchg
add
fmuls
loopne
popa
pop
xchg
xchg
sbb
in
cmpsl
aaa
lock
ficoms
js
inc
sti
cmp
test
ret
cmc
out
int3
cmp
out
fdivp
les
cmp
je
jmp
jp
mov
sbb
cmp
int3
sti
in
mov
mov
out
ret
out
lods
inc
out
add
fidivs
xor
xchg
jge
or
jno
sub
push
cmp
push
and
push
push
mov
dec
test
test
cmp
push
cmp
xorb
inc
mov
or
cltd
pop
nop
fadd
dec
mov
sub
add
add
inc
and
push
shrl
cmp
je
jnp
mov
dec
int
jae
sub
dec
adc
iret
scas
mov
out
iret
jae
and
mov
stos
adc
mov
sbb
sarl
xchg
sbb
pusha
push
or
jecxz
roll
xlat
mov
pop
adc
pop
mov
daa
leave
movl
and
or
popa
dec
add
daa
cwtl
or
rolb
in
int3
cmp
movsb
cmp
mov
fidivs
out
adc
repnz
mov
pop
mov
sub
out
in
xchg
adc
and
frstor
sbb
inc
cmp
xlat
sbb
daa
in
xchg
test
add
test
lds
mov
inc
pop
and
sbb
mov
cmp
jnp
rcrl
iret
or
xchg
jns
das
mov
xor
inc
es
cmpsb
xchg
ret
test
and
arpl
mov
cmpsl
adc
and
repnz
push
push
mov
xor
cli
loopne
pushf
ret
loopne
adc
lcall
movswl
aaa
cld
cmp
cmpsl
sbb
push
cwtl
mov
imull
scas
inc
in
out
xor
jl
outsb
vhaddps
lcall
xchg
fcomp
jbe
ret
cld
mov
subl
and
dec
jmp
jp
hlt
xor
out
dec
test
mov
cs
cmp
xchg
aas
push
pushf
popa
xor
sbb
xchg
int3
lock
dec
xlat
xor
push
fsubrl
cmp
cmp
es
cli
mov
mov
or
popa
ljmp
jae
add
lret
rol
outsl
mov
fdivl
dec
pusha
fdivs
loope
loopne
adc
imul
xor
push
push
mov
and
ljmp
mov
imul
mov
push
ljmp
mov
cmpsb
cmp
mov
stos
das
mov
iret
in
xor
call
out
inc
add
mov
adc
dec
rcrb
bnd
mov
call
mov
sahf
add
aam
rorl
dec
data16
imul
outsl
push
popf
inc
popl
push
enter
pop
xor
mov
mov
arpl
mov
pop
jl
cmpsb
and
outsl
lcall
sti
fisubs
push
push
lods
loopne
jp
cwtl
ret
mov
inc
xchg
ret
cmp
add
or
movsb
stc
or
loop
or
dec
xor
divl
push
popf
or
sub
repz
xlat
insb
shrb
and
xchg
sbb
cmpsb
adc
lret
and
in
sbb
data16
dec
adc
int3
add
adc
filds
lea
mov
pushw
adc
push
push
mov
popl
into
cmp
lret
dec
repz
and
xchg
repz
pop
bound
test
mov
popa
sbb
test
jl
out
mov
jne
pop
rorb
ret
fwait
pop
jb
pop
inc
lea
sbb
and
loop
adc
call
lea
scas
add
and
mov
cmp
jg
sub
rcl
mov
out
int
loope
push
insl
dec
test
sub
clc
mov
insl
xchg
inc
sbb
add
push
sbb
fs
stos
loope
int
mov
leave
in
xor
mov
fcmovnb
popf
gs
dec
repnz
xchg
fidivrs
clc
mov
xchg
sti
andl
mov
fwait
push
mov
mov
lret
pusha
push
adc
mov
mov
mov
xor
add
enter
adc
aad
sub
or
mov
popa
ljmp
lods
daa
inc
xor
psllw
insb
lret
xchg
xchg
ss
loope
call
outsl
loop
and
jp
sub
jne
repz
stc
dec
jno
inc
incl
ds
jmp
xchg
dec
out
int
add
mov
adc
inc
sbb
add
sub
repz
jns
sub
sbb
push
push
mov
sarb
mov
movsb
outsb
stos
ljmp
pop
in
pop
std
fsubl
add
pusha
push
pop
jle
fisubl
or
loop
add
mov
iret
fldenv
iret
add
in
sbb
orps
nop
jb
ret
call
cmp
xor
mov
ret
ret
fmuls
bound
fisubrs
push
or
pop
sub
add
push
xor
stos
cmp
incl
xchg
or
xchg
fiadds
dec
mov
push
push
xchg
stos
push
push
jl
int3
rcl
jae
push
inc
sbb
add
mov
pushf
mov
push
mov
rcrl
rorl
sub
push
dec
out
xchg
dec
pushf
ret
mov
cmc
push
jge
jmp
nop
add
cltd
lds
dec
pop
pop
lds
clc
xchg
int3
test
pop
push
xchg
leave
jo
fs
int3
push
out
test
adc
or
cwtl
in
push
mov
jne
cmpsl
aam
inc
mov
ss
xchg
hlt
dec
pop
lret
mov
ficomps
adc
cwtl
inc
test
ljmp
push
jbe
mov
mov
mov
sub
cld
ds
insl
ret
mov
rcl
or
or
lahf
lods
shrb
jae
les
mov
and
outsl
add
sbb
and
sbb
in
mov
scas
std
jmp
sbb
fisttpl
and
xor
fsubs
ss
mov
lahf
stos
sbb
inc
jp
sbb
mov
stos
js
das
add
loopne
imul
push
fucomip
fisttpl
repz
mov
aaa
ret
enter
adcb
and
das
push
push
ljmp
outsb
push
xor
push
fiaddl
std
cli
in
cmpsl
rcll
sahf
and
imul
rcll
test
inc
leave
xchg
push
dec
pusha
inc
jno
imul
inc
mov
sbb
dec
mov
xchg
cmp
xor
push
out
mov
aam
stos
mov
mov
addl
mov
cs
aas
shll
stc
aas
je
push
fidivs
inc
sarb
stos
mov
stos
je
adc
mov
test
xor
outsl
in
pop
mov
and
push
push
add
xchg
ret
cmp
push
inc
cmp
push
mov
ljmp
out
lea
das
cs
addb
cs
jecxz
lahf
jnp
add
mov
xchg
inc
int3
test
cmp
mov
clc
rorl
jle
adc
jnp
lods
and
sbb
mov
lea
jne
sahf
das
loope
mov
xlat
cltd
leave
jmp
xchg
cmp
push
xchg
orb
in
push
pushf
xchg
sub
xchg
add
mov
call
mov
xchg
mov
stos
roll
jne
mov
xchg
sbb
stc
je
test
add
mov
push
inc
xchg
cld
arpl
push
in
adc
in
mov
pop
nop
mov
cmpsb
jmp
or
cwtl
cltd
push
xchg
xchg
cmp
imul
pop
lods
jne
mov
and
mov
cmpsl
pop
mov
pop
cld
jo
fildll
jecxz
push
push
mov
cmp
cmp
div
jl
pop
sub
cmp
mov
lcall
xchg
push
aas
sti
int
frstor
or
xor
imul
and
adcl
cltd
sbb
stos
loope
jbe
mov
adc
mov
inc
movl
lret
ret
xchg
push
js
stos
out
inc
ss
jg
sub
les
and
sbb
ret
inc
jno
pop
in
cli
inc
fisttps
sub
lret
mov
int3
sub
nop
pop
imul
push
movsl
in
mov
dec
pop
and
daa
jecxz
or
jp
popf
xchg
pop
iret
mov
pop
icebp
add
lcall
leave
ret
inc
popf
mov
push
mov
push
adc
adc
add
shr
mov
stos
int
popa
test
popa
push
jle
ficomps
sbb
jbe
pop
cld
pop
lret
adcb
movsb
and
mov
push
clc
mov
mov
add
mov
xchg
and
mov
dec
in
into
cmp
out
movsl
jne
mulb
add
lcall
dec
xchg
cmp
pop
flds
fmuls
stos
jnp
sbb
dec
clc
stos
dec
shlb
xor
iret
or
js
mov
xor
ds
add
jmp
cmpsl
cmpsl
sub
mov
iret
pop
cmp
gs
fdiv
mov
leave
mov
add
xchg
cmp
out
or
lret
iret
out
push
inc
mov
pop
fstpl
test
sub
mov
leave
fwait
cs
ret
arpl
sub
js
xor
cmpsb
sub
mov
clc
lea
adc
mov
out
subl
ja
jp
mov
add
mov
xor
hlt
flds
sbb
sub
jl
hlt
mov
xor
push
sub
repnz
jo
or
xchg
insl
and
add
dec
fisubl
adcb
idivb
or
sbb
or
dec
push
lods
js
ss
out
or
bound
cmp
lods
jnp
mov
ret
xor
inc
jmp
jno
subl
mov
shrl
loope
icebp
pop
add
xor
popa
leave
jno
subl
mov
shrl
loope
icebp
pop
add
xor
popa
leave
jno
subl
mov
shrl
loope
repz
add
xor
loope
icebp
sbb
outsb
xchg
or
mov
mov
pop
push
push
ss
movsl
cs
jp
or
sbb
push
jle
outsb
js
dec
mov
cmp
or
sbb
loopne
clc
cmp
or
sbb
dec
cwtl
je
stos
js
data16
les
lret
xor
insb
mov
inc
pusha
push
cs
call
jg
imul
pop
scas
jg
gs
orl
inc
inc
enter
xor
dec
xor
scas
stc
lock
in
jg
icebp
mov
push
test
jne
lret
test
xchg
mov
push
pop
ljmp
mov
stos
mov
cmpsb
xlat
sbb
sbb
mov
lea
test
mov
pop
pop
jne
fwait
movsl
cmp
xor
add
in
pop
cmp
mov
cmpsb
test
sub
mov
pop
push
cmpb
pop
cltd
insl
push
insl
aad
lds
jg
lret
inc
mov
stc
sub
pop
pop
lock
cmpb
dec
or
enter
test
cld
jp
dec
and
lcall
cmpsb
dec
es
sarb
sub
jbe
iret
int
fwait
aas
stc
sbb
sbb
cmp
inc
lods
push
xchg
jl
pop
mov
insb
jo
jns
jbe
cmp
sub
and
imul
xor
pop
movsl
pop
cli
jge
pop
test
mov
es
pop
push
mov
sub
cmp
or
sbb
call
or
sbb
dec
cwtl
pop
push
mov
sub
cmp
or
sbb
call
ja
hlt
in
xlat
jae
jecxz
gs
leave
shrb
push
mov
xchg
stos
int3
addl
xchg
data16
add
sbb
jnp
fcompl
jmp
push
mov
add
jmp
fldenv
inc
ficompl
cmpsb
testb
popf
mov
pushf
push
dec
sbb
ja
stos
pop
inc
xchg
int
adc
push
test
pop
adc
mov
sbb
std
mulb
pusha
inc
add
add
jg
dec
out
negl
mov
push
mov
loope
orl
nop
sub
jbe
jnp
or
ljmp
and
fiaddl
cmp
shrb
sub
xchg
subl
inc
inc
js
inc
jecxz
addr16
loopne
xchg
dec
or
pop
push
daa
and
ds
add
pop
mov
pop
ficoms
andb
nop
sti
xorl
loopne
dec
sub
js
ret
sub
jle
add
gs
nop
inc
divl
loop
pop
cld
popa
mov
lds
lock
into
or
ret
jnp
xchg
out
lea
mov
pop
in
and
push
popf
in
inc
aaa
cwtl
imul
mov
mov
fistps
xorl
jmp
pop
jno
cmp
cmp
xchg
stos
pop
xchg
leave
jo
jmp
inc
jb
ror
test
loope
leave
mov
gs
adc
cwtl
cmp
nop
mov
pop
xor
push
incb
pop
push
push
and
mov
sub
imul
inc
into
jnp
test
jmp
pop
push
sbb
cwtl
mov
cld
or
cmp
add
jb
lcall
push
aad
or
jecxz
scas
or
or
jns
shlb
pop
inc
mov
loopne
sahf
jb
pop
outsb
inc
xor
nop
test
divb
stos
fs
cmp
dec
pushf
mov
inc
gs
and
adc
in
sahf
insb
clc
notb
aas
movsb
sbb
mov
popa
addr16
adc
or
pop
mov
clc
cld
iret
mov
rcrl
mov
cmpsb
pusha
add
ljmp
cmpsb
fcompl
das
fstps
or
xchg
sbb
enter
out
data16
mov
test
inc
xchg
bound
cs
mov
outsl
cld
mov
mov
add
pushf
fidivrl
add
adc
jp
cmp
adc
mov
fadds
loop
mov
fbstp
mov
rcll
ss
repz
xchg
rol
fs
xlat
mov
iret
scas
jl
xchg
cmp
test
testb
scas
vpminub
jmp
adc
hlt
jl
add
xchg
xchg
push
jbe
jmp
lds
push
sub
inc
pushf
mov
jbe
adc
repz
xchg
hlt
inc
loopne
and
jmp
push
adc
cmp
scas
cmp
cli
sub
jbe
mov
pop
js
jg
inc
push
mov
sub
jecxz
mov
scas
outsb
push
sbb
notl
xchg
xlat
push
dec
mov
out
push
add
loopne
jl
addr16
popa
dec
inc
mov
push
inc
scas
xor
je
aam
test
pop
mov
addl
jmp
sbb
inc
jno
decl
mov
nop
push
xor
mov
das
rolb
adc
xchg
inc
je
je
xchg
xor
cmc
ret
fisttpll
jle
lds
inc
or
add
imul
or
jae
ljmp
and
jne
addr16
sub
cmp
fidivs
scas
mov
fimull
mov
rcll
dec
pop
pop
into
fst
rcll
xchg
dec
leave
mov
sub
jae
test
cld
push
sbb
pop
cwtl
flds
out
adcl
fidivs
pop
jns
mov
leave
test
inc
bound
xchg
addr16
scas
sbbl
push
xor
jecxz
jmp
outsl
sbb
mov
inc
repnz
scas
xchg
jg
fidivl
mov
enter
push
jne
push
flds
cmp
jno
adc
movsb
jl
and
into
or
or
mov
xchg
mov
jp
movsl
imul
jmp
shlb
mov
fucomp
mov
xchg
test
ret
mov
pushf
xor
jge
jbe
ret
out
dec
mov
push
xchg
popa
add
incl
jg
inc
sahf
mov
mov
adc
jg
adcl
dec
mulb
rcll
cmp
sbb
divb
sbb
jle
add
xor
cwtl
sbb
inc
mov
pop
push
int3
and
out
add
inc
icebp
lgs
adcb
xchg
xor
shll
faddl
jne
out
jg
daa
jp
std
or
add
mov
and
sbb
leave
lds
insl
pop
cmpsl
outsb
inc
aas
ret
cmpsb
repnz
pusha
loopne
ja
aas
mov
adc
roll
sub
stos
pop
lret
add
xchg
push
dec
and
push
testb
stos
mov
xor
xor
and
sbb
les
add
jnp
fnstsw
mov
mov
inc
sbb
cmp
pop
incb
fwait
lods
jnp
mov
adc
xor
enter
xchg
ret
mov
ja
scas
dec
std
pop
xor
mov
sbb
and
mov
bound
mov
aad
fs
jno
loop
hlt
popl
mov
push
mov
lds
fdivr
pop
dec
insb
xchg
xor
mov
mov
std
push
repz
dec
outsb
in
js
xchg
aas
out
sbb
pushf
or
pop
sub
daa
jge
popa
fstpt
out
xchg
add
sub
sbb
push
dec
xchg
xchg
sub
out
fildl
imul
sub
fsubrl
add
push
fnsave
mov
outsl
cwtl
xchg
dec
mov
hlt
scas
add
fs
clc
xor
ss
dec
and
das
sahf
lods
xor
mov
lcall
cmp
add
push
pop
xchg
aad
and
pop
jle
cmc
add
pop
stos
icebp
jns
cmp
inc
jge
or
pop
inc
mov
aaa
sbb
lret
in
mov
pushf
ret
mov
push
fisubs
pop
pop
rorl
jae
or
sub
pushf
js
mov
in
scas
lret
pop
je
jge
mov
lods
push
adc
bound
sub
pop
aaa
jnp
leave
sub
xor
sar
xor
xlat
xchg
mov
loop
inc
in
rcl
jg
jnp
sub
xchg
imul
imul
mov
cs
pop
ss
cld
ss
mov
enter
stc
jl
mov
enter
call
dec
or
mov
jp
and
sbb
and
xchg
scas
or
bound
jl
xorl
xor
lret
pusha
pop
mov
rcl
push
pop
lds
mov
push
stos
cmp
adc
imul
adc
cld
mov
inc
popf
ret
cmp
je
pop
mov
insl
imul
mov
je
adc
jno
aas
inc
mov
and
and
xor
xor
mov
mov
sbb
xor
pop
inc
push
and
test
push
testl
dec
or
dec
leave
in
cwtl
mov
fcomp
cmp
jg
sti
out
in
bswap
sbb
div
sbb
pop
and
push
lret
push
mov
roll
dec
out
push
sti
pop
dec
pop
mov
and
test
mov
push
jg
in
lret
pop
dec
xor
cmc
cs
dec
cmpsl
xchg
cmp
cld
push
dec
gs
add
imul
lcall
mov
iret
and
lods
adc
jno
lcall
xchg
jp
push
mov
bnd
dec
sbb
test
add
lret
or
push
or
in
ret
sbb
mov
xchg
pop
xlat
mov
add
ljmp
mov
adc
movsb
pop
addl
mov
adcb
adc
mov
dec
mov
in
in
and
stos
sbb
scas
outsb
pusha
cwtl
mov
in
xchg
pop
sahf
and
jbe
adc
xchg
dec
sbb
xchg
mov
jge
dec
push
lea
out
out
cmp
mov
or
mov
or
aaa
in
js
jbe
xchg
lcall
sti
mov
mov
dec
and
jg
movsb
inc
push
push
add
scas
je
xchg
shll
leave
push
push
hlt
movsb
pop
movsl
fwait
mov
in
cld
jmp
es
ljmp
pop
incl
push
and
pop
stos
movsl
mov
xor
xor
dec
push
sub
ja
test
inc
stos
xchg
cmp
xchg
pop
ss
jne
cmp
inc
aad
mov
pusha
pop
cmpsl
mov
xchg
dec
xorl
mov
or
jmp
mov
mov
or
jg
arpl
cmp
iret
xor
cmp
cmp
add
nop
add
std
popa
xchg
in
mov
loopne
loope
push
outsb
cli
aaa
xor
je
lock
push
push
inc
mov
stos
jno
lret
jmp
jo
sarl
xchg
icebp
hlt
mov
pusha
fidivrs
cmp
dec
cli
ret
scas
cwtl
push
jge
mov
loope
xchg
orb
cmp
std
xor
add
call
ljmp
dec
add
int
ret
dec
pop
and
mov
insb
bound
arpl
push
pop
fiadds
shr
cmpsl
cmp
bound
lret
pusha
xorl
lcall
push
mov
cld
cli
jmp
rcrl
test
movsl
dec
sbb
jl
add
push
sti
aaa
mov
mov
xor
test
testb
inc
cli
movl
sti
lret
mov
or
int
cld
pop
out
pop
add
aad
shll
sub
xchg
cwtl
pop
adc
out
enter
nop
xor
daa
jge
mov
ret
lock
outsl
mov
call
popa
jecxz
add
cs
mov
dec
xor
push
lcall
clc
jae
xor
xchg
add
icebp
fcmovnbe
sbb
pop
inc
ficoms
dec
cmp
cwtl
shll
daa
js
pop
add
add
push
les
and
icebp
les
inc
dec
mov
icebp
xor
mov
inc
sbb
test
std
mov
mov
adc
adc
pop
lret
je
pop
sbb
xor
fiaddl
jl
insl
adc
cmp
cmp
out
mov
adc
fcmovbe
cld
lahf
cwtl
cvtps2pd
push
jg
mov
popa
repnz
pusha
lock
mov
das
mov
or
mov
pop
mov
xchg
push
cmp
pushf
dec
push
and
and
dec
adc
pop
adc
call
lock
lahf
das
sub
jecxz
jmp
xchg
or
xor
push
dec
in
shlb
inc
stos
cmc
jmp
xchg
mov
and
pandn
ja
andb
and
jg
out
lods
jae
dec
push
lea
ljmp
push
or
mov
loop
fiaddl
nop
sbb
out
sbb
inc
and
sub
aam
mov
rclb
xor
loop
jl
pop
mov
pop
mov
movsbl
inc
mov
flds
out
jnp
insb
sbb
jmp
jbe
jb
mov
outsl
xor
outsl
fildl
icebp
xor
psubusw
push
std
mov
xchg
cmc
xchg
push
xlat
icebp
cli
movsl
lea
fcomps
mov
mov
es
dec
jae
mov
jge
push
add
mov
pop
hlt
cltd
push
fistpl
push
clc
mov
and
imul
push
inc
inc
test
add
inc
out
test
mov
scas
mov
sub
addl
push
iret
js
mov
xor
inc
push
pop
push
add
add
xchg
arpl
or
out
dec
shl
sub
add
push
jb
push
lahf
dec
setle
aad
in
sbb
ds
mov
popa
sbb
aam
mov
add
cld
adcb
pushf
xor
mov
xlat
mov
les
iret
int
inc
scas
in
imul
loop
cld
pop
test
jge
test
adc
dec
test
ljmp
out
xchg
jns
das
sbb
add
jle,pt
test
ret
ret
cmp
dec
sub
cld
shl
inc
mov
movsb
movsb
clc
testb
call
push
dec
in
scas
jp
rcll
xchg
test
adc
adc
ss
cmpsl
xor
mov
sbb
jle
xchg
sbb
in
dec
rorl
addr16
jle
das
out
jmpw
shl
ds
xor
subb
and
jg
push
test
add
loopne
push
sub
sub
enter
int
pop
pop
loop
dec
vpsubq
sbb
popa
pop
gs
arpl
js
mov
sub
pop
mov
jle
xchg
cmpsl
mov
jnp
xchg
roll
pcmpgtw
cmp
mov
mov
push
call
out
jno
mov
popf
stos
cmc
inc
jnp
mov
xor
pop
xor
lock
lods
sbbl
xchg
xor
out
cmp
and
mov
insb
add
adc
mov
sahf
ret
and
dec
or
fbld
mov
cmp
nop
cmp
lret
scas
aaa
sti
xchg
pop
hlt
das
imul
mov
pop
movsl
jbe
inc
cmp
sti
ret
test
inc
out
xor
xchg
sbb
adc
in
pop
call
jbe
sbb
dec
cmpsl
xor
sbb
xchg
lahf
es
push
add
popa
push
xchg
fsubrl
xchg
ficoml
mov
sub
xor
xchg
xchg
jmp
cs
jle
and
xchg
ds
or
mov
stos
mov
pop
call
or
or
or
mov
stos
xchg
mov
xor
test
jmp
pop
pop
fsubrl
mov
cs
jp
leave
repz
mov
arpl
scas
cmpsb
inc
adc
je
xor
cmp
mov
mov
in
cmp
shrb
inc
pop
imulb
and
sub
mov
stos
popa
inc
xchg
je
jmp
pop
adc
test
test
pop
push
test
add
cli
pop
shlb
inc
sbbb
leave
scas
out
aam
shr
out
out
sub
jle
adc
ret
add
jp
iret
mov
shrb
aad
cmp
mov
pop
inc
mov
mov
lret
cltd
jl
sti
sbbl
jae
pop
sub
shll
add
adc
repz
dec
and
jno
movsb
and
std
cli
inc
lret
jae
ja
cmpsb
jns,pn
sbb
mov
pop
in
push
outsl
das
add
call
push
pop
lcall
dec
pop
test
ljmp
xor
aam
dec
outsb
rcrb
jp
negb
pop
mov
push
sbb
and
sbb
shll
outsl
jae
sbb
mov
add
add
stc
sub
pop
into
inc
jg
clc
push
inc
push
mov
adc
and
sbb
das
pop
sbb
leave
inc
or
xchg
cli
pop
adc
sahf
shll
xchg
aam
lock
in
pop
aaa
pop
cld
xchg
mov
fucomip
pop
lcall
or
cmp
stos
data16
push
rcrb
xchg
loop
imul
and
hlt
or
arpl
mov
hlt
rcl
cltd
cltd
icebp
divl
inc
jp
push
dec
jmp
jbe
dec
imul
lahf
adc
insb
mov
jbe
jp
inc
mov
or
jl
lock
data16
cmp
inc
or
mov
fdivrs
xchg
dec
test
call
ficompl
jge
add
ss
xor
mov
repz
out
hlt
xor
scas
pop
orb
cmp
mov
std
cltd
jmp
pop
stos
add
xor
insb
fldt
xor
add
jnp
cmp
outsb
adc
adc
mov
je
sbb
mov
inc
adc
pop
std
out
mov
lahf
or
jmp
pop
test
pop
iret
and
cwtl
out
pop
mov
ss
popl
pop
mov
pushf
sub
stos
out
push
push
loope
ds
jg
pop
arpl
sbb
sarb
push
adc
mov
adc
fiadds
pusha
dec
cmp
clc
dec
inc
fsubs
dec
rorb
xchg
push
or
imul
int3
inc
scas
das
std
sarb
add
bound
fs
sub
push
mov
push
out
push
sub
in
jo
cmp
dec
lret
push
mov
ja
jl
add
jae
and
adc
xchg
jb
icebp
sub
aaa
sub
leave
inc
sbb
push
mov
sub
sahf
fmull
out
add
jno
sbb
xor
movsb
xchg
ficoms
sub
outsb
imul
call
lret
jnp
std
mov
mov
jno
mov
xor
pusha
fisubs
mov
jmp
pop
or
sbbl
repnz
inc
inc
cwtl
adc
xchg
fildl
jnp
inc
xor
mov
test
dec
mov
mull
les
mov
in
cmp
mov
outsb
lock
lcall
je
das
pop
out
sbb
add
mov
pop
mov
and
in
mov
adc
arpl
loop
popf
mov
add
bound
sbb
repz
xor
adc
xchg
scas
sub
adc
mov
jmp
stos
ljmp
int3
inc
test
or
outsl
fwait
pop
shr
insb
xchg
daa
mov
arpl
aas
fnstsw
mov
or
arpl
pop
push
mov
sbb
pusha
xlat
addr16
je
nop
std
and
dec
pop
fcoms
mov
lret
insb
aam
push
filds
cmp
test
loopne
mov
fwait
lds
pop
or
xchg
ja
stos
mov
shll
adc
test
or
adc
fildll
test
and
or
mov
adc
adc
pop
sub
lds
imul
cmp
mul
arpl
insl
inc
lret
data16
xor
push
mov
test
ja
jmp
jmp
pushf
xor
mov
mov
push
push
dec
add
js
xlat
sbb
ljmp
jmp
addl
and
pop
ljmp
inc
sbb
repz
out
ljmp
jnp
xchg
pop
sbb
int
loopne
mov
dec
sbb
test
rcll
imul
sarl
xchg
jb
movsl
sub
pop
jmp
js
stos
add
mov
cmp
xlat
test
dec
mov
jp
dec
dec
jns
mov
inc
mov
push
xchg
inc
push
and
jp
mov
andl
dec
cwtl
loope
and
leave
dec
clc
or
aas
hlt
pop
xor
shll
test
push
pusha
notb
add
mov
rorb
ljmp
sbb
out
and
xor
mov
sub
in
cmp
jne
je
out
inc
addb
xor
test
inc
mov
inc
cmc
mov
out
inc
mov
fs
minps
scas
cmp
hlt
fidivrs
jns
adc
push
inc
lea
xchg
jp
and
jl
dec
adc
or
pop
jb
mov
adcl
cwtl
out
insb
mov
repz
push
dec
and
imul
shrb
pop
mov
in
cmp
jp
imul
mov
push
fmul
cmpsb
cmp
stos
jp
push
aad
lret
pop
adc
inc
push
sbb
fistl
push
cmpsb
cmp
rorl
lods
lret
into
jae
cmpsl
xor
cmc
stos
and
test
insb
cwtl
insb
nop
sub
stos
lahf
popf
movsb
shlb
adc
push
xlat
bound
pop
mov
enter
sbb
call
mov
roll
xor
sarl
mov
pop
ja
scas
std
inc
fistpl
add
pusha
jnp
push
xchg
shrb
cmp
pinsrw
push
jp
dec
cwtl
pop
push
mov
sub
cmp
or
sbb
call
or
sbb
dec
cwtl
pop
push
mov
sub
cmp
or
sbb
call
adc
push
test
dec
cltd
pop
insb
stos
js
inc
mov
out
and
or
sub
lock
aam
inc
out
lock
test
test
mov
sbb
loop
pop
in
pop
xchg
mov
divl
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
call
add
sub
mov
addl
or
add
add
add
add
add
add
add
add
jo
int
movl
add
pop
add
add
or
xlat
add
add
add
dec
add
or
push
add
xor
pusha
add
add
add
add
add
add
add
out
add
add
jb
sti
add
add
add
insb
add
add
add
dec
add
icebp
add
add
pop
add
adc
movl
jmp
add
push
add
add
add
and
or
aaa
add
add
add
add
add
xlat
add
stos
add
add
add
add
aas
add
add
add
pusha
add
add
add
add
add
xor
jno
addb
add
add
add
ljmp
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
popl
arpl
add
add
mov
jmp
add
dec
add
add
push
repz
push
add
add
add
add
add
add
add
add
add
pop
add
cmpsb
add
add
add
add
lret
add
xor
in
add
add
and
pop
add
add
add
dec
add
add
add
add
add
add
add
add
pop
add
add
je
sub
aaa
add
add
add
add
add
add
add
add
add
sub
pusha
add
add
add
add
add
add
insb
add
add
add
push
lret
add
add
add
add
add
add
incb
test
repz
add
add
add
add
add
sub
movsl
add
add
jbe
xchg
insb
add
add
add
popl
and
add
add
add
nop
add
addb
add
add
adc
xlat
add
arpl
add
add
add
add
add
lret
add
test
xchg
rolb
add
add
add
rolb
add
add
add
mov
sub
movb
add
add
jge
xlat
add
pop
add
lret
add
add
fildl
xchg
add
test
nop
add
sub
cmp
add
mov
add
add
add
jno
mov
add
add
add
add
ret
add
adc
popl
js
jo
inc
add
add
add
add
add
add
add
add
add
add
add
jge
lret
add
add
add
add
add
add
add
cmp
adc
fldl
add
insb
add
gs
add
add
add
add
loopne
cmp
add
add
add
add
add
add
add
popl
adc
jge
mov
add
add
add
add
add
add
add
add
add
xor
dec
add
add
add
add
mov
gs
sbb
ds
or
cmpsl
mov
ja
mov
xchg
mov
push
ret
mov
or
dec
aam
bound
fadd
jp
daa
rorl
inc
or
jg
pop
mov
hlt
push
jge
pusha
sub
popf
test
mov
mov
subb
or
xor
mov
xchg
add
push
xor
mov
jb
push
cmc
or
test
add
in
ljmp
scas
xchg
xlat
pop
lret
call
xchg
cmp
adc
in
mov
fsubrs
sti
adc
shrl
pushf
fs
mov
mov
icebp
repnz
mov
xchg
aam
sbb
imul
test
cli
insl
adc
sub
and
xor
mov
ja
sub
mov
out
lret
mov
jl
and
or
xchg
xor
bnd
add
jnp
sub
and
sbb
mov
inc
adc
aas
lahf
mov
cmp
lret
mov
push
iret
jp
mov
sbb
scas
orl
pop
push
arpl
popa
out
sbb
pop
loopne,pt
mov
inc
sub
int
sub
and
adc
jne
cs
and
add
scas
xchg
or
in
inc
xchg
push
xlat
mov
and
sbb
std
jge
icebp
jne
add
adc
xchg
mov
xchg
and
enter
jo
leave
inc
cli
mov
loop
int3
mov
xor
jo
jno
inc
repnz
orl
or
lret
push
or
dec
xchg
addr16
dec
in
out
add
clc
cld
rcr
sbb
enter
add
sub
add
sub
adc
testl
cmp
and
mov
mov
hlt
xor
scas
cmp
pop
push
sbb
xlat
dec
or
mov
push
sub
shr
cmp
dec
jnp
adc
or
hlt
aas
cmc
hlt
xchg
dec
hlt
push
jmp
popa
out
ds
push
mov
sbb
cmpsb
lret
ja
mov
fisttps
idivl
lahf
call
and
stos
insb
pop
and
add
cmp
shrl
lcall
pop
mul
jno
ffree
je
fwait
push
loopne
les
lret
push
imul
dec
mov
out
sub
test
mov
les
nop
and
popa
mov
mov
lahf
or
mov
or
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
