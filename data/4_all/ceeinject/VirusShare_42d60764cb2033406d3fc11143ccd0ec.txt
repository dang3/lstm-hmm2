call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
cmpsb
or
cmp
sub
xor
and
pushf
mov
mov
dec
push
cld
inc
in
mov
cmpsb
or
cmp
sub
pop
out
jl
insb
ss
es
bound
int3
push
mov
cmpsb
or
cmp
sub
pop
out
jl
insb
ss
mov
sub
mov
in
lcall
push
in
hlt
jge
fwait
out
pop
cmpsb
cmp
test
jmp
jbe
fcomi
push
cs
pop
or
bound
shlb
mov
jae
push
lods
mov
push
pop
lret
push
inc
test
negl
ss
dec
jae
jl
push
fucomp
or
add
loopne
pop
sub
pop
testb
xchg
ss
ss
inc
and
mov
inc
popa
dec
cld
shl
cld
mov
in
pop
xlat
imul
fildl
inc
insb
sti
int3
xor
mov
aad
sub
shrl
dec
mov
dec
mov
lods
inc
lods
dec
leave
or
cs
call
cmp
sub
pop
out
jl
insb
ss
mov
mov
data16
push
cld
inc
test
jae
or
push
jecxz
lcall
cmp
stc
and
jne
push
adc
adc
cmp
pop
mov
mov
or
insb
push
in
stc
push
fldl
adc
inc
mov
call
negb
jl
insb
ss
mov
mov
data16
push
cld
inc
in
mov
cmpsb
or
cmp
sub
pop
out
jl
insb
ss
mov
mov
data16
push
cld
inc
in
mov
add
mov
lock
add
stos
pop
jle
rolb
xlat
leave
xchg
mov
xchg
ja
add
cmp
xor
mov
roll
movsb
or
dec
or
imul
pop
xchg
cwtl
rcrb
jb
and
fiaddl
das
xor
dec
adc
fnstsw
xchg
jnp
repz
imul
out
enter
sbb
mov
cmp
pusha
nop
or
outsl
pop
mov
out
dec
cmp
test
icebp
inc
sti
dec
pop
or
jmp
sbb
ja
push
repz
int3
lds
call
icebp
das
cvtpi2ps
std
call
jnp
sbb
push
push
test
arpl
mov
cmp
es
in
ss
sbb
mov
push
add
stc
aaa
mov
fmuls
pop
inc
dec
adc
pop
push
jmp
mov
pop
rol
or
imul
mov
nop
ja
push
lret
ds
repz
adc
mov
fadd
mov
iret
ret
add
in
xor
adc
sbb
dec
dec
sbb
into
cmp
push
mov
into
pop
mov
mov
jp
fnstenv
ret
pop
stos
insl
cltd
mov
mov
nop
xchg
push
mov
xchg
pop
shl
int
icebp
adc
sbb
gs
push
shrl
dec
jne
stos
shlb
mov
cltd
hlt
out
subb
les
or
in
aam
xor
out
cmp
and
add
mov
add
mov
xor
xlat
adc
popa
jle
xor
xchg
test
stos
mov
cmp
mov
out
popa
xchg
inc
leave
imul
enter
call
in
in
out
sub
sbb
sti
test
xor
mov
jo
mov
cmpsb
mov
jne
xchg
lret
aad
cmp
popf
fstp
out
and
fisubs
rorl
sbb
enter
lds
repnz
out
daa
mov
mov
fsts
jmp
lcall
jno
mov
rcl
mov
adc
loop
add
loopne
cld
jecxz
jnp
and
sbb
lods
jp
xchg
cmp
and
xchg
in
mov
mov
inc
sub
add
inc
fnstcw
pop
int3
push
shlb
xlat
pop
dec
popa
sub
pop
inc
lret
dec
xor
jnp
outsl
sub
mov
outsb
inc
cmpsb
or
jae
cmp
push
inc
pop
daa
sbb
iret
dec
outsl
jmp
mov
cmp
mov
mov
cmpb
pop
sbb
xchg
mov
sarb
cltd
movsb
sub
lea
mov
mov
push
jmp
cmp
sub
int
mov
and
aas
cs
rcll
repnz
mov
dec
or
fsub
cmp
insl
jno
leave
test
xorl
int
ljmp
hlt
arpl
lock
pop
jp
cmpsb
test
pop
jg
mov
mov
mov
jne
adc
stc
cwtl
add
sbb
push
and
mov
or
push
mov
add
jb
cmp
cmp
or
sub
std
clc
jge
jae
xchg
scas
cli
sbbb
xchg
xchg
daa
out
xchg
rorb
fidivrl
jle
ljmp
cwtl
mov
mov
adc
mov
cmp
cmp
add
inc
jae
adc
fwait
aad
adc
sbb
or
mov
sti
cs
mov
xchg
dec
lds
mov
shr
cmp
test
mov
test
xchg
je
inc
jecxz
cmpsb
pop
movsl
inc
mov
hlt
jbe
xchg
or
insl
xorl
insb
nop
inc
xchg
enter
ljmp
ljmp
popf
xor
and
movsl
xchg
sub
popa
pop
dec
cmpsb
lds
jnp
mov
and
popa
in
aad
dec
dec
xor
push
pop
jge
push
cld
cmpsl
add
fwait
jne
popa
insb
inc
adc
push
and
dec
xchg
outsl
add
imul
test
int3
mov
xchg
push
js
cwtl
in
js
rorl
jne
pop
mov
mov
sbb
decb
out
xchg
dec
jns
call
or
cmpsl
inc
or
adc
sti
sub
scas
jo
mov
pusha
repz
sbb
inc
push
jg
adc
dec
pop
mov
test
aam
inc
sub
xor
add
mov
std
or
call
cld
or
dec
inc
xor
mov
mov
mov
lods
push
adc
test
les
out
lea
imul
push
popf
les
cltd
xchg
push
clc
xchg
mov
sub
cmpsl
xchg
movsb
movl
mov
mov
in
lcall
sub
mov
std
lret
and
pop
pop
dec
jns
push
mov
addr16
lcall
sbb
daa
std
nop
cs
clc
ret
xchg
repnz
cltd
mov
and
loope
mov
pop
or
test
mov
mov
lds
in
or
cli
mov
int3
lods
or
xchg
xlat
gs
and
out
fidivl
dec
pcmpeqb
ja
xor
sub
mov
push
into
loopne
or
or
mov
add
jle
jne
sbb
inc
pop
iret
or
ja
mov
les
mov
sbb
cmp
mov
bound
jle
aas
cmpsb
imul
xchg
inc
sbb
mov
mov
adcl
lret
inc
push
lea
mov
or
pusha
in
mov
inc
adc
mov
and
out
mov
lds
lahf
cmp
out
clc
aam
xor
push
sahf
or
push
dec
ret
mov
sub
sahf
out
enter
push
mov
cli
mov
lret
jp
cmp
cwtl
jmp
or
xchg
xor
xchg
or
xchg
jmp
mov
insl
das
mov
in
inc
dec
sbb
rdtsc
mov
daa
dec
lock
dec
inc
cli
and
rorl
out
mov
sbb
push
sbb
out
lret
lret
incl
xchg
hlt
jnp
in
mov
lret
mov
arpl
lds
inc
xor
dec
imul
xlat
cld
pop
adc
mov
push
mov
daa
aam
or
inc
enter
sahf
outsl
aas
adc
les
xor
leave
shrl
das
pop
sarl
ds
jg
pushw
outsb
enter
mov
mov
out
and
stc
sbb
popf
xchg
incb
out
mov
dec
repz
mov
ficoms
and
movsl
adc
cmp
loope
add
dec
jo
test
sbb
push
aad
je
scas
inc
or
sahf
push
dec
xchg
nop
popf
or
flds
lods
in
jge
test
inc
mov
xchg
mov
popa
adc
mov
icebp
pop
inc
rcll
xor
jae
push
outsb
mov
push
decl
in
test
jl
fs
sub
xchg
bound
inc
fbstp
jo
xchg
cmpsl
gs
shr
mov
push
adc
scas
shr
out
fadd
mov
aaa
movsl
jecxz
stc
inc
and
stc
pop
adc
mov
outsb
js
insl
pop
fisttpll
popa
xor
adcb
mov
lahf
pop
cmc
mov
xor
iret
int3
push
or
jo
jne
push
pop
out
mov
cmp
sub
mov
es
stos
out
aaa
out
pop
dec
push
jae
xor
mov
and
arpl
mov
out
test
and
xlat
mov
pop
pop
jmp
insb
pushf
loop
mov
in
rol
cmp
sar
mov
pop
cmp
cmp
xchg
dec
fdivrs
push
xor
scas
aam
sbb
mov
dec
sub
in
dec
in
add
clc
pusha
out
int3
test
jbe
xor
jb
pusha
mov
fistps
test
xchg
popf
lcall
mov
ja
adc
jo
xchg
in
bound
xchg
nop
push
jle
je
movsl
xor
cs
xor
sub
mov
jo
test
rcrl
xlat
iret
ret
mov
insb
xor
sub
or
mull
pushf
xor
xchg
popa
popf
movsl
lods
rclb
adc
into
call
jb
mov
push
push
test
mov
addb
fsubrp
lods
popa
outsb
sbb
inc
fisubrs
adc
dec
outsl
leave
negb
sbb
pop
xchg
in
lret
hlt
das
mov
cmpsl
or
in
jae
cmp
mov
sbb
rcl
cld
sbb
or
aaa
inc
repz
scas
das
lahf
or
mov
and
ret
insb
jg
push
mov
add
mov
fsubl
sbb
scas
lock
stc
jl
jl
data16
adc
in
sbb
cmpsl
mov
push
xlat
inc
lds
lods
push
add
repz
xchg
xor
adc
push
sbb
mov
cltd
inc
sub
enter
ror
adc
shll
xchg
dec
push
mov
jno
jns
add
pushf
rclb
xchg
movsl
jg
mov
stos
je
push
push
sub
jns
icebp
mov
dec
dec
or
int
push
pop
dec
sahf
pop
sbb
mov
aas
and
mov
out
repz
push
mov
lcall
add
lcall
dec
shrl
daa
cmpsb
fwait
jne
xchg
xchg
ret
xor
sub
inc
mov
sbb
and
pop
xchg
mov
in
imul
mov
push
loope
pop
out
pop
jae
adc
push
shrb
cwtl
add
sbb
imul
xchg
sub
jle
jl
sub
daa
fbld
mov
insl
add
cmp
addr16
or
mov
lahf
add
mov
push
jo
push
pop
dec
cmp
jle
imul
sahf
sbb
cmp
mov
pop
push
xchg
or
mov
sbb
dec
test
sbbl
and
repz
mov
fdiv
jecxz
mov
cmc
mov
imul
es
inc
mov
arpl
cmpxchg
xchg
sub
xchg
jmp
pop
fadd
loop
aam
inc
flds
les
add
or
xchg
pop
inc
inc
and
mov
mov
cmp
ret
or
leave
add
ret
mov
pop
enter
mov
scas
mov
pop
aas
lahf
add
xor
sbb
cmp
ret
push
jmp
add
inc
test
in
push
dec
stc
inc
mov
rcll
lret
xchg
clc
imul
negb
add
xor
xchg
hlt
nop
inc
sbb
dec
popa
stc
jb
mov
lods
pop
xchg
mov
and
fadd
jl
sub
pop
roll
pop
fcmovnb
xchg
es
into
loop
pop
daa
adc
imul
fwait
mov
xor
repnz
clc
fsubl
mov
jecxz
xchg
jb
pop
cmp
out
ret
xor
loop
sbb
lret
cld
repnz
stos
shll
pop
sub
push
pop
mov
adc
or
ret
clc
imul
loope
pop
out
mov
lea
push
sub
mov
in
mov
inc
push
jecxz
push
insl
cs
lods
lcall
fcoms
xchg
inc
shrl
or
or
mov
mov
pop
scas
xchg
xchg
sub
dec
push
je
fcmovu
test
sahf
pop
sub
add
imul
sub
xchg
push
mov
call
testb
adc
ljmp
lds
lcall
stos
mov
int3
cmc
ljmp
mov
lahf
test
stos
add
inc
xchg
cli
movsb
dec
gs
and
xchg
roll
cmp
imul
sqrtps
mov
pop
push
adc
insb
and
lea
mov
cld
pusha
es
jg
ja
mov
jmp
xor
sarb
in
in
shll
or
cmp
aad
mulb
jle
cmp
cmp
mov
sub
adc
cld
cmpsl
add
enter
ret
inc
sbb
xchg
out
popa
sbb
xchg
cmp
repz
dec
xchg
icebp
repnz
xchg
lret
lcall
and
testb
pop
add
mov
je
add
mov
loop
pop
imul
pop
sbb
sbb
xorb
jg
ret
push
add
movsb
cmp
nop
adc
or
push
cmp
jne,pt
std
cltd
mov
inc
or
loopne
pcmpeqw
mov
mov
ret
ret
neg
adc
cltd
or
mov
stos
jge
sub
fnstenv
xor
adc
mov
mov
pop
pop
add
daa
lds
pop
cmp
mov
out
push
out
imulb
sub
test
jbe
and
xlat
popf
sub
xor
xchg
testl
fwait
cs
jnp
inc
stos
sahf
add
lea
mov
cld
loopne
jp
mov
adc
sub
mov
pop
push
out
ja
scas
daa
xchg
outsl
shl
shrb
les
mov
mov
cmpsl
lods
add
inc
xchg
shl
mov
pop
into
in
xchg
or
fistpl
mov
repz
cltd
mov
sbb
mov
xchg
xchg
mov
and
lcall
movsl
or
lods
mov
dec
cmp
sbb
fsubl
xlat
and
or
outsb
daa
cmp
mov
adc
rcll
daa
and
cmp
sub
sub
or
fcmovnu
popf
fiaddl
fwait
or
cltd
pop
iret
dec
or
out
xchg
inc
pop
ret
test
sub
lock
push
mov
cld
fsubl
fldt
jne
in
sbb
scas
leave
sub
pop
pusha
roll
out
mov
push
xlat
adc
pop
jb
sbb
push
js
pop
lds
addr16
pop
xchg
fisttpl
mov
fdivrs
dec
popf
inc
adc
cmp
cmp
movsl
cmc
mov
insb
or
adc
cmp
dec
std
lcall
mov
sub
das
pop
adc
shlb
test
fimull
ds
fstpl
push
js
mov
lea
mov
into
mov
fwait
scas
je
xchg
int3
push
fistps
js
xor
mov
in
inc
insb
aam
rcll
rcr
lret
and
int3
faddp
inc
outsl
ds
sbb
or
popa
leave
inc
jmp
xchg
notb
add
pushf
pop
cmpb
lret
sub
inc
neg
dec
std
orb
fbld
rorb
mov
mov
pop
outsb
stc
add
fcomip
and
adc
mov
push
cmpsb
cwtl
dec
inc
test
push
pop
test
push
iret
fs
repz
and
bnd
adc
jecxz
mov
mov
jmp
mov
movsl
or
add
and
inc
ja
sahf
and
mov
bound
shlb
test
sub
js
cmpsb
das
aam
cmp
jg
push
leave
sarb
movsl
divl
xchg
in
ja
test
test
lds
repz
sbb
mov
nop
mov
aaa
movsb
push
pop
xor
inc
cmp
out
pusha
mov
xchg
add
and
mov
cmp
push
je
mov
mov
sub
mov
sub
inc
or
imul
push
andl
fwait
outsb
mov
mov
lret
add
popa
sub
xlat
in
ja
jge
sub
push
sbb
jno
stc
inc
pushf
loope
adc
outsl
xor
sbb
imul
sarl
stos
in
jbe
rcrl
loope
pop
icebp
dec
loop
cmp
push
mov
inc
fsubrl
xor
and
inc
dec
inc
sub
dec
lods
mov
in
adc
repnz
test
and
cli
aam
lret
out
mov
jge
scas
cmp
mov
shll
sub
addl
not
and
shrl
pop
jb
mov
popa
enter
shr
sub
jg
popf
jns
pushf
xor
loope
adc
cmp
or
add
es
xor
add
int
repnz
cmp
pop
imul
or
rorl
leave
imul
out
insl
out
inc
int
fildll
inc
test
xor
mov
or
jmp
ds
inc
mov
scas
pop
jnp
mov
pop
test
mov
xlat
adc
test
testl
and
dec
sub
rcl
cmc
popa
cmp
mov
xor
into
mov
leave
test
sahf
test
sti
cmpsl
push
jno
push
aaa
fstp
inc
jg
push
sbb
cli
test
call
roll
cmp
jb
xchg
in
inc
and
negb
rcl
jb
int
aas
mov
add
cmp
lcall
jno
daa
nop
and
scas
sub
aaa
jns
imul
out
adc
dec
scas
setg
rcl
test
mov
pop
mov
icebp
sbb
fwait
sbb
fcoms
ret
push
rcrb
push
mov
jcxz
test
sbb
divl
or
add
imul
insb
push
xchg
dec
push
js
mov
jl
mov
inc
mov
pop
lcall
mov
xchg
insl
dec
iret
add
lcall
stos
mov
mov
cld
pop
fcompl
mov
xchg
cmpsb
cltd
fmulp
test
ret
insb
cmc
lret
or
cwtl
out
int
or
les
push
dec
cmp
insb
xchg
sbb
xchg
xchg
jg
sti
mull
adc
push
and
xchg
sub
sbb
mov
shlb
loop
push
inc
xchg
push
in
cmpsb
jecxz
mov
das
inc
add
mov
mov
push
call
inc
mov
cwtl
jo,pn
and
jecxz
loope
cltd
and
push
lret
ret
sub
mov
js
std
adc
pop
cmc
dec
cmp
sub
sbb
mov
cltd
std
ss
cmp
push
adc
out
push
and
nop
sub
test
movsb
sti
cmp
xchg
dec
js
sete
jb
cmpb
out
xchg
fstpl
dec
fdivrp
ljmp
add
insb
mov
xchg
notl
pop
in
dec
add
push
xor
push
jns
add
and
cld
xchg
xlat
mov
mov
cmpsb
mov
xchg
arpl
int
orl
lods
push
xchg
sbb
bound
aas
and
lods
push
repnz
push
xor
and
xchg
mov
xchg
fsubrl
pop
adcb
icebp
fimuls
sbb
fldt
jno
xor
clc
lds
push
dec
movsb
jmp
lret
xchg
ss
les
ret
sar
push
or
mov
cmpl
stc
xorl
xor
add
dec
addb
loopne
add
cmp
clc
adcl
nop
cs
push
scas
lret
mov
or
outsl
cmpsb
data16
bound
cltd
jecxz
or
clc
rcrl
cs
sarl
sarb
lret
outsb
push
loope
xchg
enter
int3
hlt
pop
dec
stos
sub
sub
mov
xchg
lret
xchg
dec
or
stos
je
pop
pop
lea
sbb
push
push
dec
clc
and
cs
inc
insb
movsb
push
ja
add
inc
fld1
add
cmpsl
inc
xor
sub
adc
arpl
imul
sar
add
js
xchg
mov
ret
sarl
stc
call
out
movsb
cld
in
jae
test
or
mov
mov
sbb
paddsw
testb
es
jl
and
js
outsb
inc
pop
fmul
fwait
pop
popf
push
aad
test
fimull
enter
dec
mov
popa
sub
pop
dec
aaa
cli
xor
adc
inc
sahf
rcrl
dec
mov
xchg
out
and
cli
mov
lea
add
adc
notb
popf
xchg
data16
imul
out
test
outsb
push
inc
pushf
loopne
mov
cwtl
xchg
inc
inc
adc
sahf
xchg
push
mov
rol
or
daa
pop
and
pop
int
pushf
sbb
mov
cld
cwtd
in
or
cmp
sub
pop
out
jl
insb
ss
mov
mov
data16
push
cld
inc
in
mov
cmpsb
or
cmp
sub
pop
out
jl
insb
ss
mov
mov
data16
push
cld
inc
in
mov
cmpsb
mov
pop
out
jl
insb
ss
mov
mov
data16
push
cld
inc
in
mov
cmpsb
or
cmp
sub
pop
out
jl
insb
ss
es
push
out
xor
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lret
lds
push
mov
icebp
dec
movsl
ficoml
inc
sti
jne
gs
adc
stos
and
jnp
push
sbb
sub
ficoml
gs
jne
gs
and
jp
push
sbb
sub
fwait
sub
insb
lcall
stos
cmpb
xchg
mov
sbb
push
leave
push
mov
and
in
jo
jnp
pop
aam
scas
sub
xchg
add
out
jo
adc
addr16
mov
push
test
aam
shlb
lret
push
movb
fcmovu
lcall
xor
out
xor
pop
in
pop
sbb
sub
stos
or
sti
inc
add
stos
frstor
sub
repnz
sarb
sub
stos
mov
gs
inc
loop
aas
and
fisubl
in
rol
push
ret
pop
and
mov
out
adc
cli
mov
aad
xor
sbb
sub
cli
gs
xor
push
lds
mov
lret
pop
loope
ljmp
js
xchg
add
jno
je
inc
add
xchg
and
jg
outsb
mov
fistl
mov
cmpsl
adc
inc
stc
dec
ljmp
sbbb
dec
xchg
or
ficoml
inc
cli
jne
gs
and
jp
push
sbb
sub
cli
jne
gs
and
notl
leave
imul
out
int
xchg
sub
fwait
ja
adc
icebp
decl
scas
xor
addb
dec
lcall
nop
jge
cs
fistl
es
out
jl
dec
mov
jmp
mov
add
pop
push
add
in
popa
push
xor
fdivr
cmp
hlt
inc
push
clc
loope
adc
xor
xchg
lods
sbb
icebp
adc
fwait
scas
addr16
add
jg
icebp
and
jg,pn
sub
aam
insb
out
xchg
sbb
or
inc
jg
push
or
xchg
xchg
int
std
cmp
mov
es
xchg
aaa
jbe
add
pop
mov
subb
mov
mov
call
mov
sub
cmp
test
movsb
mov
test
test
das
rorb
jns
jp
ret
xchg
dec
fs
je
cmp
cmpsl
push
bound
cmpsb
and
jae
mov
mov
mov
mov
mov
cmp
outsb
aam
nop
repz
outsb
lock
stos
ud0
cltd
fnstsw
pop
push
fldenv
pop
ret
push
push
and
add
pop
fmul
test
rclb
xchg
aad
mov
adc
insb
xor
mov
mov
inc
cmp
sahf
cmpb
sbb
inc
mov
xchg
cmp
sbb
call
mov
int3
inc
dec
dec
aaa
xor
xchg
mov
stos
jl
cmp
jmp
fsubrl
out
mov
mov
mov
xchg
pop
xor
int3
nop
pop
sub
push
ret
int
cld
jge
jo
mov
std
and
into
out
movsl
addr16
jge
cmpsl
dec
mov
idivb
popa
xlat
movsb
fldcw
xchg
mov
das
cmp
mov
xor
mov
fidivl
mov
inc
jge
and
repnz
lret
push
mov
inc
mov
dec
xor
jl
mov
dec
or
push
and
lea
sbb
arpl
inc
xchg
inc
push
subl
in
dec
xchg
cmp
in
imul
fimull
mov
sub
and
sub
fnstsw
enter
mov
das
jns
int3
scas
in
mov
xchg
in
cmp
jno
pusha
push
sbb
nop
cmovbe
jnp
mov
loop
fimull
push
cmp
push
cld
sub
or
sbb
jb
cwtl
ds
push
and
aad
jnp
jb
rorl
xor
enter
out
call
in
repnz
cwtl
jbe
gs
mov
add
xor
sub
sti
test
xor
inc
pop
outsb
xchg
inc
jns
cmp
das
les
cmpl
mov
aas
dec
sti
fsts
sbb
dec
movsb
push
loopne
adc
sbb
dec
adc
inc
jg
repnz
xor
inc
repnz
sahf
add
mov
insb
cmc
adc
jno
push
xchg
jae
push
xor
out
xchg
or
into
arpl
pop
int
cmp
add
ret
pop
pop
xor
add
or
popa
cli
jecxz
roll
int
push
int
dec
sbb
stos
push
loop
imul
or
pop
gs
testb
inc
xchg
or
rclb
sub
sbb
std
mov
popa
cmpsb
insl
push
dec
mov
inc
or
pop
cmp
and
shr
xor
std
data16
bound
das
rcrl
leave
cmp
sbb
js
mov
loopne
js
fsubr
mov
scas
and
mov
adc
inc
subl
xor
pop
outsl
mov
push
mov
mov
mov
mov
js
jp
inc
rcll
popf
sub
sbb
jbe
ss
mov
lods
jg
ja
and
inc
pusha
clc
pop
ljmp
mov
mov
pop
aad
jbe
xchg
pop
fwait
dec
insl
push
repz
dec
orb
jae
and
fadds
test
sub
xchg
ret
incb
inc
enter
in
jae
inc
cli
mov
fs
lret
loopne
int
je
cmp
mov
shll
pop
testl
test
arpl
or
mov
mov
pusha
je
outsb
data16
xor
negl
xor
rclb
add
sub
or
add
les
les
sbb
sub
mov
push
and
out
sbb
and
push
ret
sub
rcr
jno
out
push
int
jae
push
in
sbb
stc
jge
fimuls
pop
scas
repz
ja
leave
sbb
sahf
aad
xchg
push
clts
inc
movsl
into
test
scas
add
stos
add
add
testl
fistpll
sbb
mov
push
stos
ss
lods
imulb
or
mov
stos
and
fidivs
jp
cltd
sub
xchg
jmp
hlt
lret
test
arpl
pop
dec
mov
and
jge
pop
mov
in
pop
xchg
pusha
enter
add
sbb
cmc
test
xor
imul
shll
or
adc
pop
jmp
ret
jg
lods
adc
test
aaa
dec
or
scas
pop
xor
mov
mov
mov
rorb
xchg
inc
sbb
test
jmp
jle
adc
adc
jne
das
cs
sarb
mov
cmpsb
jns
jb
bound
cmp
lods
rcl
fistpl
sub
inc
adc
adc
mov
jmp
mov
xor
sub
inc
mov
repnz
ljmp
out
pop
clc
outsb
test
push
fsts
push
and
sbb
push
andb
iret
xorb
add
lret
pop
pop
addr16
lock
repz
in
js
ret
mull
fisubrl
mov
ret
sub
pop
push
lock
ret
push
rorl
addr16
ficompl
addr16
shrb
nop
or
dec
or
push
mov
fsubrs
pop
and
lahf
sbb
std
mov
adc
mov
pop
push
xchg
imul
fmulp
add
cmpsl
loope
movsl
inc
outsl
out
xchg
sbb
xchg
fwait
adc
jne
imul
jae
out
dec
pop
test
mov
std
xor
inc
and
lcall
ja
enter
pop
pop
mul
nop
pop
addr16
or
int
in
testl
xor
push
dec
fcomps
jo
push
fucomip
mov
mov
sarl
addb
repz
inc
fimull
xchg
add
fs
rolb
pop
pop
jns
xlat
mov
insl
out
jmp
adc
and
arpl
add
aaa
push
ss
or
xchg
outsb
mov
test
pop
mov
sarb
test
dec
mov
test
idivl
in
lea
add
mov
xor
pop
js
inc
jo
dec
and
out
pop
mov
xchg
aas
fadds
ret
shll
sbb
dec
lahf
cmc
imul
lea
mulb
jo
dec
mov
stos
lods
jns
imul
pop
jbe
jae
lods
mov
outsl
leave
out
insb
push
sahf
cli
inc
sbb
push
xchg
mov
out
sub
test
adc
add
push
xor
cli
loope
push
mov
sar
loopne
loope
xor
push
sti
movsl
stc
pop
mov
in
jl
cwtl
mov
in
ss
std
sarl
sub
jle
and
sahf
stos
clc
mov
adc
inc
inc
or
jbe
mov
addr16
cwtl
adc
sti
lock
cs
shlb
xor
icebp
push
addr16
fistpll
mov
mov
cmpsb
lods
ds
or
movsb
jp
jle
mov
mov
out
orl
mov
sbb
push
jbe
sahf
sbb
lret
in
sbb
mov
push
loope
loope
adc
mulb
mov
testl
xor
mov
pop
sbb
lods
aas
pop
jmp
push
sub
mov
scas
or
lret
xor
sarb
xorl
or
fcompl
ljmp
mov
lea
je
mov
push
sbb
sti
std
pop
inc
cwtl
push
fwait
in
sub
out
inc
pop
sbb
loope
push
sub
cmp
adc
mov
mov
sbb
cmc
fistpll
ss
mov
jle
pop
leave
mov
pop
inc
aaa
push
lahf
cmp
mov
xor
movl
imul
int3
insb
test
addr16
pop
mov
mov
divl
adc
aad
mov
sub
test
test
jo
add
cmp
pop
xchg
xchg
imull
sti
or
ds
cmp
loopne
xor
xor
inc
inc
es
rcrb
jl
and
rorl
cld
mov
xor
aas
sub
icebp
mov
push
inc
fstps
sbb
scas
sbb
xchg
lret
cltd
dec
inc
sub
pop
cwtl
aad
or
pop
and
xor
fidivrl
stos
add
mov
push
sub
and
prefetchw
pop
mov
sbbl
inc
sti
test
xchg
or
sbb
and
mov
or
cwtl
push
movsl
cwtl
das
out
mov
sbb
lea
insb
and
fsts
enter
or
or
push
stos
les
testl
sahf
or
aaa
pop
es
or
xchg
inc
jo
pop
sti
lea
inc
in
pusha
cli
inc
sbb
xlat
cmp
pop
es
loop
cmp
add
lahf
inc
pop
sub
ret
mov
sti
push
inc
jbe
lahf
jno
or
bound
push
test
lret
out
push
xor
cmp
xlat
push
fldl
or
mov
loope
aam
hlt
hlt
fcom
sub
add
cmp
mov
cmpsb
mov
pop
pop
add
sbb
adc
and
insb
jae
test
dec
ret
cmp
popf
roll
add
insl
dec
aad
xor
adc
rcrb
pop
adc
sub
das
pop
mov
sahf
rolb
cmpsb
rcl
nop
leave
loopne
loop
push
je
mov
and
lods
aas
push
sbb
shrl
add
cmp
mov
cld
mov
add
adc
fidivrl
out
add
inc
rorl
adc
aaa
aam
or
bound
and
fldt
cmpsb
or
lret
icebp
sbb
ds
pop
pushf
stos
push
cld
movsb
icebp
or
sbb
adc
jp
aad
js
sub
in
xchg
popl
addr16
outsb
push
cwtl
push
pushf
sub
or
push
fs
rcrl
shll
cli
stos
pop
test
jae
add
ficoml
fadds
lret
jl
pop
enter
pextrw
dec
cmp
rorl
or
and
xor
and
sbb
jno
fucom
lret
mov
and
aaa
insl
mov
hlt
int3
pop
cmp
xchg
cmpsb
or
inc
lahf
mov
hlt
outsb
push
pop
and
les
jbe
inc
xchg
add
mov
push
and
and
adc
lods
lret
sbb
mov
mov
bound
push
lods
push
mov
push
aas
loop
mov
lods
aad
mov
js
sub
lret
xchg
xchg
xor
push
in
pop
sti
stos
xor
or
mov
mov
imul
dec
rol
mov
aad
or
into
xor
add
lcall
pop
lea
mov
fstpt
pop
cld
inc
dec
jmp
insl
mov
dec
sahf
or
mov
mov
cmp
dec
lock
pop
mov
fsubl
or
cwtl
cmp
addr16
aam
inc
and
xchg
test
lret
pop
push
jae
pop
fldt
inc
mov
in
or
inc
in
mov
psubsb
shl
mov
test
aam
sahf
mov
cmp
outsl
mov
dec
rorb
mull
cs
scas
mov
pop
inc
dec
mov
out
add
fwait
pop
imul
push
mov
test
xorb
and
dec
cmp
lock
or
adc
dec
nop
imul
cli
scas
int
push
fs
adc
push
test
mov
iret
push
fwait
xor
data16
sti
sti
cmp
lret
or
ja
test
jne
cmp
lock
push
imull
test
jb
mov
cmp
arpl
int
stos
popa
mov
dec
mov
pop
pop
nop
or
test
pop
out
insb
movsl
sub
sbb
sbb
scas
dec
sub
mov
pop
mov
cmpsb
neg
out
aas
mov
inc
push
clc
add
push
repz
pop
add
inc
cmpsl
sbb
mov
pop
lods
pop
ficompl
cmpsb
adcb
add
add
push
and
lahf
rclb
out
add
rolb
xor
fxch
sbb
xchg
push
sbb
loope
repz
lods
cmp
mov
mov
mov
in
add
xchg
inc
les
and
xchg
daa
xchg
xor
push
cld
mov
mov
outsl
sub
scas
and
push
or
daa
or
adc
and
js
movsb
jmp
lret
push
pop
sti
imul
enter
jae
insb
cmc
repz
jp
cmp
daa
cwtl
mov
rclb
hlt
cmp
enter
ja
cwtl
lods
imul
out
out
xchg
sub
fs
sbb
push
mov
fwait
inc
mov
inc
js
leave
sahf
push
mov
repnz
pop
cmpsl
in
pop
fadd
inc
xchg
push
sub
fsubrs
lds
idivl
sbb
pop
sub
sub
fsubs
inc
jo
insl
orb
xchg
popf
loope
inc
sbb
cmpsl
mov
pop
xor
add
lods
sbb
adcb
push
clc
insl
shll
cld
xchg
dec
and
test
inc
xor
dec
scas
mov
adcb
pop
pop
mov
xchg
xor
mov
adc
clc
cmp
or
jle
inc
imulw
insl
inc
push
insl
int
lahf
std
cmp
mov
push
jnp
mov
ficomps
mov
push
xor
add
mov
add
adc
daa
fcmovnu
and
test
mov
mov
into
sbb
ja
xchg
mov
rcll
setp
loopne
ja
xor
xor
movmskps
out
cld
adc
jae
and
mov
cmp
fildl
insb
mov
push
dec
adc
and
mov
push
add
inc
sub
pop
fisubrs
lahf
mov
shrl
in
gs
adc
out
jo
imul
call
sub
and
jae
in
mov
or
adc
iret
dec
out
push
or
stos
fdivs
pop
mov
aaa
call
rcll
jmp
and
pop
pop
and
or
stos
fists
rorl
shrl
in
xor
aaa
sar
sbb
repnz
ljmp
cmpsl
mov
int3
mov
sar
orb
outsl
pop
sub
add
sub
mov
pop
xchg
xchg
scas
lods
inc
mov
pop
scas
negb
sbb
dec
and
and
imul
loop,pn
imul
dec
inc
dec
scas
or
test
xchg
sub
clc
sbb
into
ficoms
imul
stos
outsb
mov
push
aas
jb
jno
stc
js
pop
or
xor
inc
mov
xchg
dec
push
scas
xchg
lea
add
sub
fwait
js
xorb
xchg
mov
mov
jecxz
and
inc
sbb
repz
xlat
sub
stc
mov
js
daa
inc
mov
mov
xchg
dec
cs
aaa
jne
cmp
aam
cwtl
ret
sub
pop
in
and
enter
stos
inc
pop
ret
jl
sub
mov
xchg
in
gs
decl
outsb
xchg
out
pop
adc
in
pop
add
xchg
xchg
addr16
jne
test
mov
mov
in
pop
lock
push
out
jge
mov
iret
movsb
dec
aaa
sub
ljmp
lret
cwtl
cmc
aad
xor
sahf
xlat
sbb
rcr
inc
mov
push
sbb
jmp
jae
rcrb
or
jp
js
jmp
fs
call
ds
fisubrs
adc
shlb
and
movsb
andb
inc
pop
ret
aas
movsl
xor
sub
ljmp
xor
dec
sti
mov
mov
lock
sti
lret
adc
adc
inc
adc
adc
dec
ds
jmp
jp
mov
jno
add
std
outsb
leave
sbb
xchg
jne
lea
or
out
mov
andb
cmpl
fwait
or
jns
cwtl
inc
inc
inc
addr16
ja
outsb
inc
ror
cmp
xor
lret
addr16
mov
xchg
pop
pop
push
cmp
js
pop
lret
cmp
shrb
out
xor
inc
repnz
ljmp
inc
push
push
outsb
adc
push
sbb
dec
ret
out
push
cmp
dec
sbb
lret
shrb
fdivs
dec
sub
popl
outsl
push
jg
xor
jno
out
clc
arpl
or
popf
push
pop
adc
mov
bound
arpl
lods
jnp
pop
sbb
test
mov
sbb
in
scas
xchg
dec
or
stos
jmp
xchg
aam
cmp
cmpsl
pushf
pop
int3
xchg
int
sub
push
iret
scas
sub
icebp
cmpb
cmp
arpl
inc
push
leave
adc
mov
sbb
or
test
lret
adc
dec
jbe
sub
int
xchg
out
or
test
sbb
pushf
out
sub
dec
aam
jmp
dec
add
or
and
inc
pusha
sub
mulb
pop
gs
adc
aaa
out
and
cmc
cmp
adc
cwtl
push
out
ss
fsubl
sub
js
mov
hlt
out
push
imul
or
sahf
mov
int3
mov
or
push
pop
mov
adc
int
out
pop
or
mov
jo
xchg
fadds
imul
add
or
xor
leave
mov
cmp
push
dec
js
push
lods
je
mov
and
movsl
loop
mov
pop
mov
enter
push
lds
stos
mov
lea
lea
hlt
adc
repz
cmp
mul
xchg
pop
jns
fmul
push
test
sbb
mov
imul
icebp
lods
in
aam
inc
push
inc
lahf
outsl
adc
push
push
cmc
inc
bound
stos
jb
mov
das
pop
mov
sbb
jg
pop
stos
rcll
mov
inc
rorl
cmp
xlat
xchg
push
mov
movsl
push
ljmp
inc
icebp
cmpsb
or
out
mov
fsts
jbe
imul
push
sub
mov
mov
idiv
mov
out
outsl
dec
push
int3
xchg
movsl
mov
adc
pop
jg
sbb
cmp
ficomps
sarl
insb
rorl
jo
lret
mov
lret
xor
aas
xor
inc
pop
mov
mov
adc
pop
popa
into
sbb
add
sub
lods
int3
xchg
dec
push
push
or
lcall
adc
iret
xor
movsb
cltd
sub
pop
dec
notb
jnp
mov
adc
cmpsb
mov
xchg
pop
xor
aaa
cmc
dec
xor
inc
into
mov
enter
mov
pop
clc
push
xlat
fidivrl
pop
les
int
wbinvd
stos
cmpsb
sbb
cltd
inc
adc
dec
in
mov
les
movsb
sbb
sbb
jo
in
testl
pop
xchg
insb
ds
ret
sub
pop
cli
jne
cli
jge
push
insl
jmp
sub
adc
fisttps
outsl
ds
adcb
mov
repz
push
mov
out
push
outsl
in
ja
dec
xchg
xchg
mov
pop
mov
or
mov
cmp
jp
mov
pusha
imul
leave
mov
push
les
jo
pusha
dec
jno
out
pop
call
push
cmc
sub
sbb
notl
scas
jnp
sbb
les
fs
bound
xor
jne
out
shlb
push
les
sbb
jne
mov
add
add
and
cli
std
inc
xchg
cs
xchg
out
fisttps
enter
dec
sahf
loop
leave
mov
insb
jnp
nop
pop
pop
or
push
mov
fimuls
inc
dec
sub
cmpsb
jo
xor
cmp
rorl
movsl
mov
lds
cltd
push
sbb
sub
cli
jne
gs
and
jp
push
sbb
sub
cli
jne
gs
and
jp
push
sbb
sub
cli
jne
gs
and
jnp
push
sbb
sub
push
jne
adc
popf
add
inc
lret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
loope
add
mov
jnp
pop
xchg
jne
js
cmp
fisttpl
sbb
imul
mov
jnp
or
sbb
sub
cmp
jmp
sti
insb
mov
fwait
dec
stos
pop
mov
or
jnp
or
sub
push
xchg
jge
dec
fldenv
cmp
das
mov
enter
addr16
fcmove
sub
fcomps
xlat
aas
mov
jmp
lods
mov
cmp
and
mov
jp
test
pop
xor
jmp
cli
jmp
stos
roll
pop
lods
lea
lea
insb
or
and
xchg
mov
test
push
add
icebp
push
outsl
in
or
or
ret
cmp
outsl
into
sbb
jecxz
loope
jle
pop
push
mov
cmpsl
jae
pop
xchg
or
mov
xchg
insl
in
mov
pop
pop
enter
ficomps
sub
sub
mov
push
popa
rolb
loopne
mov
or
je
outsl
or
mov
jnp
or
cmp
lret
scas
fcmovnbe
jmp
sti
or
bound
fisubs
lret
sub
mov
dec
mov
mov
test
add
sub
fisubrs
push
sub
outsb
popf
xor
adc
jge
imul
sbb
das
cld
pop
fisttpll
test
sub
cmp
cmp
or
sbb
insb
mov
stos
pop
mov
mov
jnp
or
sbb
sub
cmp
cmp
or
sbb
insb
mov
stos
pop
mov
and
ret
stos
mov
jl
inc
outsl
rorb
mov
and
cld
jno
insl
xor
shl
sbb
loop
loop
jmp
add
add
nop
inc
lahf
xor
inc
xor
inc
fmul
dec
mov
sub
adc
adc
sub
cs
test
nop
cli
mov
push
mov
xor
loopne
nop
mov
push
and
in
dec
sbb
or
mov
movsb
aam
cmpsb
in
pop
fdivrl
out
or
hlt
mov
out
leave
mov
ds
push
push
das
or
dec
movb
inc
inc
jnp
mov
int
inc
xlat
iret
mov
popa
shlb
push
outsb
int
xor
pop
or
ljmp
movsb
shrb
pop
mov
inc
jbe
xlat
sbb
in
lock
out
jmp
mov
rcr
es
cmp
in
pop
mov
dec
loop
push
into
sub
cmp
sub
rclb
jmp
cmpl
or
mov
cmpsl
cmp
jo
mov
loop
mov
sbb
jp
mov
imul
stos
push
cmp
sub
lea
test
subb
jg
mov
sbb
adc
bound
nop
lds
pop
stos
pop
repz
arpl
cltd
shl
test
enter
inc
xlat
push
movsb
lret
mov
adc
rorb
fdivs
jo
sub
xchg
pop
mov
xor
or
aas
cmc
sub
or
or
or
ss
and
pop
or
ret
call
jb
inc
dec
aad
movsb
outsl
or
or
sahf
inc
lret
ficoml
lahf
xor
repz
lods
enter
scas
push
push
jns
sbb
mov
aaa
mov
mov
pushf
lods
lcall
xor
xor
in
fcom
mov
ljmp
fwait
bound
adc
out
push
sahf
and
push
lea
push
xchg
inc
addb
leave
inc
cmpsl
dec
xchg
daa
cmp
inc
rol
jae
shr
add
scas
mov
out
sub
scas
pop
and
push
inc
divl
add
mov
add
inc
test
jb
sub
scas
imul
and
imulb
stos
dec
cltd
pop
fcoms
jg
enter
pop
and
repnz
or
mov
xchg
fs
shll
bound
cmpsl
testb
out
xchg
cld
mov
add
mov
mov
dec
out
andl
stos
loop
mov
rcr
std
cld
dec
jnp
xor
insb
lods
push
test
mov
sub
sti
xchg
adc
dec
xchg
or
out
ljmp
test
mov
cltd
xchg
imulb
sub
sub
test
push
filds
jnp
mov
xchg
jle
pop
lcall
pop
push
lea
xor
lahf
cwtl
in
fcom
rorb
clc
xchg
jg
xchg
pop
pusha
iret
mov
adc
jg,pn
xchg
or
mov
cmp
xchg
sahf
in
aaa
jl
icebp
push
sub
call
mov
inc
push
jno
cmp
sub
outsl
mov
fcmove
add
sub
pop
nop
xchg
pushf
adc
sub
mov
dec
scas
test
inc
or
lock
sbb
sbb
stos
or
in
adc
push
repnz
mov
push
outsl
xchg
xchg
ret
xchg
inc
adc
or
iret
pop
repz
xchg
jp
jg
sbb
xchg
sbb
and
sbb
jnp
stc
or
sub
shr
mov
jne
or
jge
inc
jecxz
pop
sti
test
jl
xlat
pop
or
insb
pop
adc
in
xor
out
subl
adc
mov
pop
jbe
aad
fnstenv
jecxz
mov
es
add
dec
mov
sbb
add
stos
dec
sbb
dec
dec
sbb
push
leave
xor
stos
clc
sahf
pop
mov
pop
test
lret
inc
cltd
adc
dec
int3
sti
or
outsb
push
imul
adc
xchg
cli
aaa
cmp
cmp
mov
imul
sub
lret
fistps
or
sarl
ficoms
xchg
jecxz
popa
cmp
jb
cwtl
lock
jl
inc
add
adcl
lods
cmp
cmp
sbb
add
or
sub
fcoml
mov
push
xchg
in
outsb
mov
into
pop
pusha
pop
rcrb
loopne
stc
push
sub
hlt
push
adc
add
sbb
insl
jecxz
adc
jb
and
add
mov
mov
mov
xchg
int
push
lock
in
cmpsl
leave
pop
jns
or
push
fmuls
out
mov
or
cmp
xchg
stos
sub
in
rorl
rorb
popw
lret
sbb
arpl
in
out
aad
mov
pop
fistl
ljmp
xor
je
adc
out
cltd
stos
sbb
std
ret
mov
in
leave
mov
xor
cwtl
or
hlt
mov
dec
dec
in
lret
cltd
mov
cmpsl
sub
sbb
or
inc
pop
ljmp
mov
cli
jne
cli
enter
into
int
pop
adc
mov
cli
aam
cmp
and
xchg
sahf
rcrl
data16
cmp
lock
mov
dec
cmpsb
test
aas
cli
mov
addr16
arpl
mov
int3
loop
lahf
or
fs
lret
lcall
xchg
sahf
mov
daa
hlt
or
stos
xchg
jmp
cmp
in
pop
loop
or
mov
dec
std
jmp
inc
shlb
inc
adc
cmpsl
pop
mov
sbb
mov
mov
outsb
or
nop
adc
cs
mov
ret
mov
inc
nop
adc
addr16
jne
xchg
mov
pop
pop
ret
cmc
push
dec
lret
add
arpl
lret
icebp
jp
push
cmp
jge
sti
pop
sub
in
mov
stc
inc
sub
adc
orb
pop
add
mov
adc
or
lock
and
aam
ret
mov
mov
jle
cmpb
lock
lods
mov
jnp
rorl
in
sub
test
jnp
popa
mov
push
ror
jae
jle
ljmp
loope
sub
xchg
xchg
enter
outsb
mov
or
cmp
jbe
cltd
pop
adc
or
shlb
lods
lea
orl
pop
rorl
jecxz
pop
fwait
adc
out
inc
test
jle
dec
jne
add
mov
xor
hlt
add
arpl
add
jne
xchg
shl
adc
scas
fsubs
call
mov
mov
insb
pop
mov
dec
repz
xorl
fimuls
ficompl
inc
xor
std
mov
test
cmp
icebp
in
mov
lds
imul
xchg
imul
lret
ds
stos
xchg
push
outsl
or
xchg
jo
clc
mov
lcall
xor
lock
pop
dec
loope
and
hlt
inc
ljmp
addr16
inc
jl
sbb
lret
dec
dec
jmp
and
mov
test
or
mov
cmc
sbb
xchg
push
pop
inc
mov
mov
loopne
and
sub
dec
pop
ds
add
sbb
mov
push
jl
int3
int3
pushf
enter
fldenv
iret
sbb
in
in
out
push
mov
sub
testl
aad
into
xchg
loopne
ja
jb
stos
imul
adc
sbb
decb
fimull
xor
or
push
or
mov
adc
daa
lods
mov
in
jmp
jmp
xchg
sti
out
dec
mov
rcll
push
jp
pop
dec
adc
push
test
xchg
fcomip
jg
inc
sub
clc
stc
aad
sbb
ret
sbb
fisubrl
es
add
jmp
sarl
push
sub
or
dec
stos
or
cltd
sbb
lahf
sub
add
sbb
jmp
sub
cmp
mov
jge
std
out
adc
outsl
push
and
out
mov
stos
pop
dec
int
inc
fsts
pop
push
into
mov
jo
cmpsl
adc
inc
int
repnz
cmp
cmp
cs
pop
inc
lret
shl
push
test
push
add
dec
cli
pushf
cmc
sub
dec
pop
repz
fcompl
fdivrp
mov
cmp
imul
jmp
in
xchg
rcll
divb
cmpsl
enter
fmull
mov
cltd
push
popa
cmp
mov
sub
ja
adc
mov
and
mov
icebp
inc
in
or
jne
pop
mov
push
xchg
sahf
push
push
and
loope
xchg
or
movsb
fmuls
xchg
push
inc
jmp
xchg
sbb
and
sbb
test
imul
fcomps
push
fdivrl
mov
dec
sub
jp
sbb
out
lds
loope
or
jns
cmpsb
adc
pop
mov
add
int3
jle
outsl
sar
popa
and
jo
je
or
dec
mov
shl
js
dec
mov
nop
shlb
fnsave
xchg
jmp
and
lds
insl
mov
xchg
or
das
cmp
jp
aam
daa
jne
sarl
mov
loop
cltd
outsb
repz
xchg
call
movsb
aam
fs
lcall
cmpsb
out
insl
mov
jno
pop
sub
dec
fnstcw
repnz
adc
out
inc
int
sbb
push
adc
add
sti
out
mov
outsl
ret
fucompp
or
and
mov
loope
daa
into
inc
and
insl
hlt
cmp
cmp
and
shlb
nop
scas
add
xchg
add
in
add
nop
lods
insl
xlat
jge
cmp
into
dec
xor
xchg
dec
pop
mov
xchg
loopne
add
sti
aad
cli
daa
js
ret
xor
dec
mov
into
les
push
jg
sub
test
add
lcall
dec
mov
sahf
leave
or
and
cmp
mov
fadd
push
add
data16
int3
aam
jmp
lret
cmp
inc
xor
dec
jo
ror
lock
sub
insb
cmp
int
and
sbb
loop
enter
jns
lret
imul
or
sub
mov
pop
dec
pop
fisttpll
inc
stos
add
mov
or
add
sbb
dec
and
fnstsw
insb
push
mov
jo
cmp
repnz
add
dec
inc
das
mov
mov
xor
popf
icebp
int3
mov
xchg
test
fstpl
push
mov
fcmovb
dec
jne
ficompl
in
inc
pop
add
orl
lods
call
dec
push
les
jbe
jmp
out
leave
fs
mov
inc
pushf
xchg
jmp
les
icebp
jmp
lds
fcmovu
daa
sub
js
xchg
cmp
stos
push
ret
fcomps
pusha
push
mov
imul
mov
jo
jmp
and
xor
pop
ret
popa
jge
fwait
add
xchg
push
xchg
inc
std
mov
or
mov
xchg
popa
es
ljmp
leave
in
jl
pop
mov
aaa
push
test
in
xchg
mov
pop
push
jmp
adc
add
add
xor
insl
mov
pushf
pop
es
lea
or
lea
mov
mov
mov
jnp
in
loop,pt
and
and
test
or
pop
mov
jecxz
leave
xchg
push
enter
call
cmp
aas
aaa
adc
push
outsl
cmp
std
dec
jb
int3
cmpsl
sbb
fildll
repnz
xor
into
int
iret
xor
adc
fs
sub
mov
repz
xchg
cmp
or
shl
arpl
mov
pusha
pop
add
sti
es
bound
lock
xchg
loope
popf
add
lds
stos
jmp
sub
jbe
int3
sbb
mov
sub
mov
imul
cmp
add
mov
scas
dec
cmp
repnz
movsl
and
scas
sub
retw
add
in
sti
rorl
pop
pop
in
scas
xchg
sbb
jmp
mov
icebp
test
sti
jno
mov
sti
out
movsl
ret
inc
lods
int3
and
cmp
daa
push
aas
xchg
cmc
rcrl
in
mov
rcl
jne
or
pop
ret
push
ss
and
shrd
std
shrb
insl
shrb
mov
iret
push
hlt
jno
xor
pop
mov
call
inc
hlt
roll
mov
in
cmp
jbe
inc
lea
or
add
in
sarl
xlat
adc
push
inc
inc
sti
or
pusha
mov
insl
push
lret
jbe
add
push
repnz
dec
out
aaa
lret
add
aaa
push
jmp
mov
icebp
push
and
pop
pop
jmp
adc
enter
xor
adc
pop
orb
push
push
pop
dec
pop
and
repnz
test
pop
das
inc
pop
aam
out
imul
sub
cmpsl
pop
clc
insb
cmp
shrl
sarb
addb
mov
pop
push
dec
add
bound
jne
je
xchg
stc
ljmp
in
or
int
lcall
or
test
lods
push
lds
mov
insl
mov
cmpb
call
shr
jnp
iret
loopne
lret
stos
xchg
add
mov
data16
repz
shl
lock
stos
pop
sbb
push
lds
mov
pushf
inc
mov
cwtl
xchg
or
mov
call
push
addr16
mov
rcl
out
icebp
dec
inc
imul
lods
xchg
imul
pop
icebp
xor
jmp
rorl
out
jbe
mulb
xorb
gs
xor
xchg
and
notb
int3
int
add
inc
and
cmp
fxch
mov
call
loop
pop
and
sti
sbb
stos
icebp
in
sbb
dec
dec
sub
cld
stc
pop
jnp
fwait
push
xchg
leave
clc
inc
cltd
dec
out
popa
sub
push
add
insb
fiadds
fildl
lods
shrb
cmp
ss
push
inc
dec
shrb
test
fs
pop
in
xchg
sbbb
fbld
dec
stos
jg
movb
dec
dec
inc
sub
jne
lods
mov
fnsave
pop
mov
cld
dec
daa
mov
or
ja
cmp
add
je
loope
sub
sbb
iret
fucomp
pop
lock
mov
clc
cmp
inc
lret
stc
mov
shl
dec
test
sar
dec
pop
pop
add
sbb
sub
and
xchg
add
mov
popf
imul
mov
mov
ja
adc
imul
pop
in
push
adc
xchg
push
cwtl
adc
outsl
sbb
les
mov
cs
jle
mov
lock
pop
lcall
test
addr16
fadd
mov
jecxz
jg
mov
xlat
xchg
and
imull
sarb
cmp
xor
enter
enter
test
or
repz
jg
rol
shlb
pop
dec
xchg
mov
sub
sbb
test
je
clc
push
stos
fidivl
stos
out
test
push
out
sbb
loope
cmp
xchg
jb
mov
cmp
mov
sbb
std
cmp
adc
pop
mov
nop
mov
or
shr
daa
popa
fsubrl
bnd
test
cmp
add
sbb
lret
add
push
lret
add
mov
or
test
test
sar
dec
jae
cmpsl
aam
xor
cmp
sub
jae
cli
in
pop
push
pop
xchg
cmp
xorb
fdivrs
cmp
mov
or
testl
scas
lahf
and
shll
sbb
lahf
jno
pushf
popa
cmp
lock
ja
aam
mov
xchg
cmp
jns
pop
or
lea
and
xlat
loope
pop
ret
and
lods
inc
xor
pop
mov
cmpsl
xchg
xlat
aas
test
mov
test
xchg
cmp
pop
loope
fimull
jno
pop
pop
dec
or
add
sbb
insb
fwait
mov
imul
aam
jmp
imul
inc
xor
jle
sti
loop
int
sbb
xor
sbb
repnz
cmp
stc
cmp
sub
and
cwtl
mov
lea
loop
ror
mov
xchg
stos
dec
shl
mov
push
mov
adc
push
sbb
cld
lret
dec
cmp
loopne
jecxz
xlat
cltd
sbb
cmp
dec
fdiv
push
jnp
jp
pop
mov
out
fwait
test
test
mov
outsb
mov
add
mov
in
inc
xlat
repnz
mov
sbb
das
jl
daa
in
sahf
pop
mov
push
cmp
roll
xchg
mov
or
dec
adc
arpl
mov
xchg
pop
fdivr
jae
subl
mov
adc
popf
nop
test
or
rclb
das
cmp
in
popf
mov
cmc
into
xorb
mov
xor
lods
add
pusha
sar
lods
aaa
movsl
mov
inc
enter
mov
mov
imul
or
push
dec
pop
jmp
fsubrp
cmpsb
add
imul
aas
cmp
and
inc
push
imul
or
stos
cmp
inc
inc
add
adc
sbb
cwtl
push
out
xchg
andb
mov
pushf
push
test
and
and
or
xor
sbb
and
pusha
dec
loopne
dec
repz
out
cmc
pop
repz
je
ljmp
jecxz
and
lret
scas
or
lea
pop
sahf
add
mov
mov
push
mov
ret
insl
xor
inc
inc
lss
mov
lret
or
adc
sbb
add
ja
fsubp
aaa
outsl
xchg
mov
add
mov
push
bnd
and
sti
cmp
or
xchg
jno
adc
js
fs
xlat
push
or
cwtl
andl
repnz
sub
loop
dec
out
sti
jb
arpl
cmp
test
cld
jae
daa
dec
jle
nop
mov
sbb
pop
mov
scas
out
mov
push
jge
out
adc
dec
lea
mov
or
jo
add
mov
inc
cmpsl
inc
xchg
ss
xchg
xlat
fdivr
jns
out
popf
lret
pushf
or
or
movsl
mov
xchg
push
hlt
xor
flds
push
ja
data16
movsb
jp
sub
xchg
js
add
rol
std
insb
mov
ret
out
lahf
stos
xor
das
scas
shll
and
in
iret
push
adc
sbb
mov
sub
jg
icebp
fcomp
or
xchg
cmp
jg
jae
call
jecxz
idiv
sbb
jne
loopne
movsl
pop
jl
mov
enter
inc
std
or
or
cwtl
push
cmp
xchg
jp
arpl
xchg
movl
lcall
loopne
cmc
push
sti
out
pop
sbb
lret
sbb
mov
ficoml
fldcw
pop
movsb
fcomp
sar
and
clc
inc
mov
mov
ret
mov
or
mov
xor
movsb
addr16
nop
inc
outsl
out
cs
dec
xor
dec
fdivrs
jmp
sbb
jb
or
imul
cmp
ja
jmp
stos
cs
pop
aaa
gs
mov
out
popf
fstl
mov
ret
out
addr16
and
leave
fsubr
xchg
add
jl
shrb
fcoms
mov
jae
scas
mov
incl
enter
imul
push
xchg
aas
mov
iret
inc
xchg
loope
dec
lock
lods
push
stos
outsl
aaa
mov
shl
sti
addl
cmp
xchg
dec
cld
xchg
sub
loopne
inc
pop
fstps
arpl
jl
lods
pop
jle
js
fcoms
jp
mov
jno
xchg
jno
aas
lahf
scas
jmp
int3
movsl
push
imul
lahf
call
add
xchg
push
cmpsl
pop
mov
icebp
sub
inc
mov
idiv
mov
jmp
mov
or
pop
dec
push
imul
xchg
out
cwtl
dec
cmpl
mov
das
jl
ds
or
lret
hlt
leave
mov
shll
or
jno
pop
add
inc
jecxz
mov
adc
lahf
test
sub
es
mov
clc
in
dec
ds
jl
lahf
pop
into
pushf
jb
add
cs
mov
sub
push
jnp
or
sbb
sub
cmp
cmp
or
sbb
insb
mov
stos
pop
mov
mov
jnp
or
sbb
sub
cmp
cmp
or
sbb
insb
mov
stos
pop
mov
pushf
imul
sub
cmp
lret
cmp
add
mov
dec
stos
insb
mov
add
mov
in
or
fwait
int3
stos
pop
les
ret
jno
jmp
mov
add
fs
mov
and
adc
add
leave
rorb
outsl
mov
aas
icebp
sub
sar
out
and
adc
add
push
xor
pop
xchg
inc
cmpl
rorl
shl
idivb
or
sbb
dec
pop
data16
addb
aaa
hlt
aas
mov
pop
scas
xchg
jge
push
fbstp
in
mov
dec
scas
stc
imul
or
push
cs
cmpsl
sbb
xchg
add
mov
mov
xchg
aas
mov
add
mov
cli
sub
bound
sub
ret
push
rcrl
rorl
test
outsl
ficoms
out
jmp
inc
jno
jno
and
outsb
pop
push
mov
ror
fs
psrlw
out
das
jne
mov
adc
pop
jg
jg
test
cmp
repz
icebp
loopne
pop
inc
pop
into
andnps
sti
lods
les
adc
outsb
pop
jle
fnstcw
rorl
ss
fisttps
iret
add
push
xchg
pop
data16
mov
daa
jmp
xadd
je
fs
jae
add
cmp
add
aas
xchg
dec
jecxz
mov
mov
bound
das
lahf
and
or
pop
hlt
push
cmpl
inc
loope
mov
mov
xor
inc
testl
inc
jg
outsl
mov
aas
icebp
das
loope
rorl
sar
out
and
adc
add
push
popl
mov
mov
aas
icebp
das
loope
rorl
sar
shlb
xchg
mov
lcall
sub
pop
mov
push
les
jnp
push
pushf
popa
pop
mov
nop
push
or
sar
cli
cmpl
arpl
mov
data16
leave
dec
push
mov
mov
scas
xchg
hlt
test
and
xchg
cltd
pusha
in
test
pop
into
lea
std
mov
jbe
add
jmp
test
push
popl
fucomi
js
xor
lods
rcll
xchg
shr
jmp
out
std
popf
sub
cmp
gs
roll
pop
hlt
ljmp
addr16
push
cltd
add
mov
pushf
mov
inc
pop
mov
in
leave
icebp
pop
and
fmull
iret
shll
mov
push
adc
push
mov
push
inc
mov
pop
jo
fistps
and
or
cmp
mov
rolb
xorl
outsb
push
push
jmp
push
jmp
lcall
sar
pop
mov
sub
cwtl
pusha
push
loopne
jmp
mov
sub
addr16
mov
les
fimull
loopne
cmp
adc
int3
lea
movsl
inc
cmpl
out
imulb
rcll
mov
fldcw
xor
pop
femms
imul
test
add
xchg
fcompl
arpl
arpl
lcall
xor
and
cmp
cs
fsubp
stos
outsb
aam
sub
add
outsb
pop
subb
data16
cmp
xchg
stc
shr
push
push
xchg
cmpb
push
pop
pop
mov
jl
xchg
and
mov
rcl
dec
and
cmp
sub
cmp
in
out
std
add
roll
or
lock
movsb
cltd
lea
stos
inc
int
into
mov
sti
adc
dec
jb
mov
mov
mov
push
adcl
mov
inc
push
jp
mov
movsl
mov
or
dec
sbb
frstor
daa
iret
stos
aaa
add
lcall
mulb
rcl
and
lea
mov
fsubrl
lret
xchg
rol
repz
int
fidivrs
mov
aaa
cld
lahf
into
jo
jl
sti
pop
call
mov
sbb
aad
repz
xchg
mov
in
loop
insb
mov
adc
hlt
call
sub
pmuludq
lea
inc
cmp
pop
fisubl
push
repnz
scas
sbb
sub
dec
push
cmp
sub
mov
adc
daa
aam
fsin
lret
mov
das
xor
std
xor
pop
pusha
push
jbe
ficomps
fwait
dec
lock
dec
and
push
push
mov
sub
repz
out
loop
push
popa
mov
add
ret
incl
clc
mov
and
push
and
insl
xchg
jle
ret
add
inc
cli
dec
push
daa
repz
sbb
mov
and
mov
stos
js
inc
movsl
lcall
jb
std
jle,pt
imul
pop
sbb
xor
fidivs
push
dec
shrb
mov
dec
enter
add
sbb
aad
fs
enter
inc
push
nop
xor
xor
fs
add
adc
dec
sti
enter
jg
or
mov
lcall
jle
data16
pop
mov
or
cmp
mov
add
stc
sbb
adc
inc
rcrb
xor
inc
sahf
push
or
dec
fildll
xlat
inc
cltd
push
and
inc
mov
lods
test
mov
xor
xor
je
out
testb
mov
jo
cmpsb
mov
or
popa
std
xchg
daa
in
sbb
nop
test
call
rcrl
out
mov
call
inc
mov
cmp
into
adc
lds
stc
movsl
rolb
mov
adc
test
outsb
aaa
or
cmp
and
jp,pn
stos
and
or
sbb
push
and
imul
scas
and
mov
jbe
or
dec
js
js
sbb
add
jmp
pop
jne
or
sarb
mov
ret
jnp
hlt
leave
mull
orb
cmp
sub
out
cmpsl
xchg
xchg
ret
pop
lods
jno
pop
xor
mov
xchg
mov
mov
in
aad
adc
popf
ss
inc
int
adc
cld
lods
cld
mov
mov
xor
cmp
or
or
push
mov
mov
pushf
xor
add
or
adc
or
cmpb
mov
ficompl
in
js
mov
call
lock
pop
mov
xlat
adc
and
jne
aad
dec
inc
negb
shll
neg
mov
orb
xchg
mov
rcl
mov
adc
mov
sbb
and
pop
aam
fdivs
inc
dec
lock
xlat
rcr
lret
jge
imul
xor
hlt
jg
roll
popf
pop
sub
iret
cmp
xchg
or
push
and
ror
imul
push
ja
outsl
add
nop
add
enter
inc
sub
xor
stos
clc
mov
fld
out
xchg
lods
imul
sub
xlat
add
inc
loopne
xchg
xlat
or
xchg
sahf
push
fidivl
xchg
and
add
pop
out
xchg
mov
std
xlat
mulb
xlat
cmp
and
insl
pop
inc
xchg
push
push
loopne
inc
lret
mov
loopne
insl
jns
dec
mov
push
addb
add
cmpsl
jecxz
jmp
mov
mov
pop
outsb
loope
in
or
inc
lods
aam
inc
rcrb
imul
sub
cmp
dec
aam
add
das
loop
aas
pop
jb
pop
and
pop
pop
iret
imul
and
clc
jne
xchg
add
jns
pop
std
push
inc
push
sub
pushf
sbb
testb
inc
aad
icebp
iret
mov
and
sub
out
add
and
jp
daa
clc
filds
xchg
daa
jl
in
cltd
cmp
icebp
addr16
mov
cmp
push
fs
jns
cld
insb
lods
cs
adc
fdivl
es
arpl
and
pop
mov
mov
lret
int3
test
sbb
fcmovu
fnsave
insl
into
xlat
mov
pop
icebp
stc
push
aaa
inc
ror
xchg
out
jmp
shl
ljmp
in
stos
scas
sub
push
sub
addr16
jb
and
sbb
pop
mov
push
xor
push
push
xchg
pop
fs
mov
dec
adc
adc
dec
jo
addl
add
jnp
call
gs
in
add
mov
add
push
imul
or
adc
pop
arpl
pop
mov
in
and
jmp
fistps
dec
popa
test
xor
mov
xchg
pop
and
out
in
shll
insb
or
inc
in
push
shrb
fnstenv
xchg
adc
icebp
pop
xor
mov
lds
in
outsl
fdivr
dec
mov
rcll
inc
jp
pushf
sahf
cmpsb
fs
adc
push
sbb
movsb
and
fidivs
mov
jae
lock
push
add
repnz
sub
sbb
arpl
rclb
testl
inc
repnz
lea
stos
push
out
xor
mov
mov
in
sub
mov
lods
outsb
inc
jp,pn
dec
punpcklbw
enter
push
test
mov
cmpsb
push
lods
jb
xor
ret
xor
nop
lahf
ffree
repnz
lcall
jl
pop
aad
sbb
push
pop
dec
jne
ljmp
mov
popa
jl
jge
mov
mov
mov
ljmp
lahf
xchg
and
xchg
js
sbb
test
aam
mov
icebp
fstpl
movb
push
dec
mov
in
enter
fsubs
mov
cmp
scas
gs
cld
cmp
leave
cmp
push
popf
fildl
bound
xchg
sbb
nop
cwtl
shr
and
pop
push
jbe
sahf
sbb
sub
inc
and
fisttpl
pop
repz
mov
cmpb
mov
xor
jmp
cmp
cld
inc
or
xor
inc
fldcw
ret
cmp
add
mov
or
xorl
leave
cmp
xor
pop
jmp
adc
fsubl
push
shrl
jo
push
test
lds
xchg
ret
jns
push
sbbl
or
ret
pop
mov
xor
gs
ret
test
mov
jne
inc
rorb
imul
call
adc
adc
aad
shll
pop
outsl
test
or
popa
leave
leave
repz
repz
sahf
in
popa
aam
mov
pusha
cmp
aad
std
sbbb
lock
inc
punpcklwd
xor
adc
stc
call
add
in
xchg
cld
and
adcb
stc
movsb
sbb
adc
inc
jnp,pn
mov
es
mov
lea
fucomip
and
pop
dec
sbb
jnp
dec
sahf
or
fidivrl
scas
fsubp
fldln2
out
push
fwait
mov
sti
sub
mov
scas
idivb
inc
movsb
pusha
sub
fcmovne
sub
xchg
repz
clc
mov
adc
mov
add
push
and
adc
fcoms
js
sahf
dec
aas
mov
test
dec
jle
mov
bswap
mov
mov
xor
adc
sbbb
out
mov
imul
mov
add
or
or
idivl
lcall
test
adc
pop
xchg
or
orb
call
cmp
and
cmc
scas
xor
adc
mov
sub
mov
and
stos
fidivrl
aad
movl
xlat
mov
lods
js
jns
fdivrs
pop
push
add
js
jle
adc
jno
fsts
scas
and
xchg
sub
rcrb
mov
sti
mov
gs
adc
mov
push
das
cmc
sub
xchg
inc
xchg
lret
pop
push
in
leave
xor
mov
andb
add
cmp
jnp
sbb
push
and
mov
ret
xor
mov
adc
out
pop
rcl
jbe
sub
pushf
jl
sbb
jb
imul
sub
xor
sti
lds
cmc
mov
shrb
dec
add
pusha
adc
sub
les
test
inc
in
adc
cli
ljmp
mov
lret
sarb
cmp
or
in
or
inc
jns
jmp
and
xchg
pop
mov
out
adc
adc
aad
sub
repnz
nop
or
popf
mov
or
jl
fisubs
jbe
adc
inc
aad
stos
daa
dec
imul
test
mov
sti
pop
mov
loop
repz
dec
adc
das
cmp
push
dec
and
test
faddp
lcall
outsl
or
add
dec
pop
jo
xlat
push
mov
aas
and
insl
adc
cmp
push
lods
out
bound
in
push
sti
push
jne
push
push
pop
push
add
mov
lea
push
or
roll
jle
push
enter
gs
mov
scas
sub
fildl
dec
sarb
cli
popf
sub
std
mov
outsl
dec
lods
and
dec
lcall
inc
rolb
adc
xchg
jmp
and
cmp
cwtl
movsl
pop
rcrb
adc
dec
loopne
sbb
fidivrs
inc
lcall
nop
mov
test
and
imul
arpl
inc
jmp
inc
je
jecxz
adc
addb
mov
rcrl
and
cld
mov
mov
ret
aam
xor
and
inc
dec
test
pop
inc
ss
add
das
dec
xchg
sbb
pop
cmp
iret
jb
sub
rorb
test
imul
sub
push
mov
mov
data16
hlt
mov
test
adc
clc
sbb
imul
push
imulb
pop
cmp
xor
xor
add
loop
push
xchg
xor
push
rcrb
popl
outsl
sub
xorb
outsb
fcompl
jp
pop
and
xor
and
addr16
imul
and
div
lcall
jnp
call
push
jmp
xor
pop
popa
mov
test
cmpsb
or
fcomip
out
jns
lret
sub
xor
out
push
xchg
lcall
call
sub
movsb
je
push
rorb
inc
aam
sub
outsb
les
fisttps
bound
sar
leave
int3
inc
and
mov
dec
or
xchg
sbb
aam
xchg
push
xchg
mov
cwtl
jmp
push
fstps
and
mov
mov
mov
jle
and
sub
das
decb
push
push
out
out
scas
mov
cmp
inc
mov
sbb
push
adc
jns
jb
add
std
inc
xor
ljmp
mov
jl
pop
inc
push
jo
sub
mov
movsb
jle
out
lcall
adc
cmp
sub
mov
js
hlt
sbb
dec
inc
or
fidivrs
inc
dec
pop
cmp
mov
cli
scas
sbb
dec
rolb
rolb
jne
out
dec
sub
loop
js
arpl
sahf
cmc
shrb
mov
mov
cmp
call
sahf
es
jbe
pop
xchg
push
cmp
xchg
add
push
push
aaa
fsts
popa
or
enter
dec
out
adc
add
outsl
call
sbb
pop
mov
fcmovb
xchg
out
push
xchg
mov
xor
sub
xor
push
outsl
ljmp
xorl
sub
and
pushf
rorl
xchg
mov
les
inc
ret
lock
mov
or
repnz
inc
outsl
and
pop
fisubl
clc
lds
jmp
adc
mov
lahf
xor
xor
ret
movsb
subb
jbe
add
and
push
push
incl
sbb
daa
cmp
std
jmp
jecxz
pop
pop
movsb
sub
movsb
pusha
jecxz
out
out
dec
dec
movsl
mov
imul
rcr
or
push
add
ds
xchg
inc
xlat
stos
add
xchg
dec
test
stc
imul
jmp
sbb
xchg
out
fs
js
jne
jl
mov
mov
jg
xor
push
das
adc
add
cmp
jmp
xlat
xor
push
add
fnstsw
ja
fcmovu
ret
push
and
xor
pop
push
jnp
and
pop
das
jo
leave
xchg
adc
mov
or
inc
adc
jp
pop
cmpsl
jbe
nop
neg
xchg
jle
xchg
nop
add
push
les
in
inc
dec
add
lods
adc
mov
sub
outsb
mov
das
in
pop
int3
mov
jbe
jns
enter
jg
int3
xor
sahf
xchg
mov
cmp
fcompl
push
pop
lods
jmp
push
fildll
pop
mov
adc
insb
insb
cld
out
push
out
test
inc
or
inc
iret
xchg
shr
xor
sub
scas
rcl
sbb
pop
adc
dec
adc
mull
inc
xor
sbb
sarb
or
fucom
ret
outsb
daa
and
or
cmpsl
xorl
xor
adc
ret
filds
inc
mov
sarl
sbb
xlat
mov
negl
push
les
or
sub
out
lods
cmp
sarl
orl
in
push
sub
mov
out
daa
cmpsl
fnstcw
cmp
adc
popf
into
fs
stc
pop
xlat
lods
jge
test
or
mov
mov
jecxz
repnz
lods
std
popf
int
cmp
cmp
dec
push
fisubrl
mov
mov
jge
pusha
imul
popa
and
jns
cmc
cltd
mov
adc
aaa
js
jne
xor
es
mov
cmp
cwtl
sarb
or
add
adc
dec
lea
clc
dec
and
adcl
mov
or
dec
jp
jle
insb
xor
bnd
xchg
push
pop
mov
lcall
call
pop
mov
enter
popf
faddp
mov
jne
outsb
pop
pop
cli
cmp
cs
inc
cmp
stos
mov
sbb
pop
fwait
adcb
ds
jmp
dec
jbe
pop
ffree
pop
cmp
jge
dec
mov
mov
push
dec
pop
pop
fdiv
jno
addr16
adc
inc
push
in
push
cld
pop
dec
fldcw
test
mov
xchg
imul
ret
fucomip
in
jle
xchg
and
jecxz
fwait
sbb
adc
xchg
sti
add
dec
aam
lods
imulb
add
inc
sbb
xchg
sub
ljmp
icebp
mov
push
inc
es
andl
repnz
cltd
sbb
sbb
pop
mov
mov
testl
cld
call
mov
in
gs
mov
pusha
lock
jb
rorb
mov
test
std
and
sahf
cwtl
test
jg
test
jnp
repz
inc
sub
bound
jo
dec
mov
jnp
imul
scas
push
inc
inc
dec
inc
mov
mov
and
push
nop
add
cmp
arpl
pop
push
cs
lods
mov
pusha
sbb
cmp
jecxz
sbb
jmp
lcall
add
inc
cli
popf
jns
inc
pusha
sub
in
xor
jmp
sub
inc
pop
imul
dec
sbb
das
clc
sbb
fwait
lock
cmp
movsb
sbb
mov
add
shlb
hlt
push
and
repz
pusha
mov
imul
jle
mov
xor
int
sbb
insb
sub
popw
scas
mov
sub
push
jg
jae
or
loop
add
mov
jp
cld
fcompl
jns
in
arpl
je
sbb
imulb
shll
testb
pop
test
imul
inc
sub
popf
xor
enter
out
push
cmp
stos
inc
cmpsb
lahf
fnsave
inc
mov
fcomi
or
enter
cmc
arpl
shl
dec
leave
into
sub
rep
sbb
shlb
mov
ja
not
sbb
push
inc
idivb
mov
sbb
sbb
int
push
xchg
dec
jno
inc
movsl
or
inc
sub
icebp
cwtl
cmp
pop
cwtl
and
mov
sarl
fwait
cmp
test
pop
mov
inc
mov
jecxz
adc
sub
mov
fidivl
pusha
outsl
mov
jae
add
mov
push
outsb
in
ret
mov
lods
jns
andb
std
xchg
rorl
push
shl
sbb
test
aaa
in
cmp
mulb
dec
mov
xor
xchg
add
test
ficomps
mov
jne
ljmp
stos
scas
movsl
out
mov
push
xchg
mov
adcb
aam
dec
test
push
decb
loopne
cs
push
stc
add
mov
scas
jmp
mov
insl
cmp
leave
xchg
faddl
mov
sbb
cmpsl
and
mov
jbe
insl
cltd
lods
ret
decl
dec
jbe
xor
idivl
pop
dec
outsl
cmp
lods
data16
bound
or
inc
stc
sub
dec
mov
nop
loop
mov
mov
mov
jg
test
push
jl
aaa
lock
jg
sub
mov
push
pop
enter
sbb
das
jae
push
fs
arpl
xor
xchg
pop
stc
cld
push
xor
cmp
mov
inc
jge
sbb
add
dec
pop
sub
loope
mov
rcr
loopne
push
repz
fisttpl
add
popf
sbb
dec
les
xchg
sbb
cli
adc
pusha
pop
data16
lret
add
lock
bound
cmc
cmp
xchg
test
add
test
fists
dec
mov
movsb
imul
mov
loop
push
leave
xor
decb
cmpsb
sub
sar
lret
mov
out
lds
lret
cmpsl
pop
jecxz
aas
aam
add
mov
das
ljmp
sahf
enter
sub
hlt
push
in
jecxz
xchg
adc
sahf
add
sbb
cmp
stc
pop
or
xor
data16
or
inc
pusha
jg
push
fstps
iret
add
push
popl
mov
mov
aas
icebp
das
loope
rorl
sar
out
and
adc
add
push
popl
mov
mov
aas
icebp
das
loope
rorl
sar
out
and
adc
add
push
popl
mov
mov
aas
icebp
loope,pn
aad
in
and
mov
push
jno
cmc
xchg
dec
testb
sahf
loopne
lock
push
jp
or
push
push
xchg
cmp
mov
lcall
and
push
add
or
jb
inc
cmp
lret
mov
cmp
lret
repnz
ret
repnz
adc
jp
xor
cmp
mov
lahf
repz
call
mov
push
adc
push
inc
sbb
leave
adc
lea
mov
ja
iret
cmpsl
lcall
jno
mov
and
lcall
scas
dec
outsl
xchg
push
divb
cmp
and
aas
pop
push
pop
repnz
fidivrl
ret
fcomip
bound
push
xor
xchg
inc
cmc
rcrl
aad
cmp
push
add
jne
lcall
push
push
bound
out
imul
xchg
sti
mov
pop
pop
ljmp
repnz
ret
mov
mov
cmc
arpl
mov
stc
mov
loope
jp
xchg
loop
mov
adc
or
push
jp
out
bound
sub
push
or
inc
mov
or
ret
repnz
ret
and
sub
add
adc
je
pop
add
push
lret
mov
out
out
mov
fistps
sbb
arpl
jg
fildll
outsl
lods
jmp
xor
mov
repz
xchg
sti
mov
or
ja
dec
sbb
inc
cmp
mov
cli
xchg
mov
lcall
and
push
jp
or
jb
inc
cmp
mov
cli
xchg
mov
lcall
and
pop
test
mov
popf
inc
int
adc
ret
pop
cmp
jo
js
bnd
xchg
out
push
lcall
jae
es
sub
xchg
and
shl
int
rcrb
mov
jb
inc
jle
xor
mull
shlb
stc
or
sbb
xchg
aaa
sbb
mov
in
push
outsb
xchg
out
or
push
testl
xchg
adc
push
cmc
mov
divl
jo
cmp
xor
pop
ret
xchg
stos
xchg
addr16
cmp
or
add
and
arpl
mov
test
jb
push
lock
in
xchg
test
cmp
adc
call
and
xchg
pop
cmp
push
add
adc
lock
test
cwtl
jb
cmpsl
nop
adc
add
lock
and
xchg
inc
sub
inc
fcomip
in
add
add
mov
ljmp
push
lds
hlt
ja
pop
push
pop
push
dec
stc
mov
hlt
addl
xchg
xor
dec
test
sub
rorb
inc
jno
in
inc
mov
cmp
je
push
rcrb
iret
adc
mov
fwait
dec
js
test
mov
pushf
jnp
xor
rcrl
cmp
daa
fisubrl
in
sub
clc
jb
or
into
lock
mov
mov
jg
pop
push
dec
hlt
fwait
jecxz
outsl
repz
mov
cmp
int
add
push
fnstenv
enter
xor
addb
xor
jmp
int
test
addr16
mov
or
sub
lret
bnd
mov
imul
rcll
xchg
jg
shl
push
dec
fnsave
mov
cwtl
test
subl
leave
shlb
push
sbb
mov
inc
inc
ficoms
leave
pop
fidivs
leave
mov
cmp
loope
xlat
push
cmpsb
and
dec
pop
xor
xlat
sub
shll
cmp
outsb
adc
js
add
add
loopne
mov
cli
sbb
std
dec
decl
testb
fisubrs
jnp
loopne
jmp
jae
clc
cmp
icebp
test
cmp
inc
pop
out
push
dec
mov
clc
sbb
cmpsl
mov
add
xchg
dec
sbb
adc
jp
add
xchg
mov
add
adc
mov
dec
xor
loopne
les
sub
scas
mov
push
push
jno
push
cmp
sub
and
jp
jae
pop
mov
or
cltd
xor
movsl
mov
add
jns
adc
das
xor
and
dec
aad
or
jp
enter
idivb
sbb
cmc
into
mov
sbb
aam
aam
adc
sbb
test
lods
add
mov
ljmp
addr16
mov
pushf
adc
ss
jbe
jae
jbe
jno
inc
inc
fcompl
xchg
aad
ficomps
adc
sbb
adc
filds
mov
sbb
ja
xor
sbb
imul
sub
lcall
cmp
dec
dec
test
cmp
lds
andb
sbb
movsl
sarb
add
arpl
and
xchg
pop
xor
inc
jne
stos
or
add
sub
popw
movb
ficomps
lret
push
xchg
jmp
sbb
add
dec
cmp
sub
jg
sbbb
mov
ret
add
das
or
and
int
arpl
push
out
mov
xor
or
ds
iret
aam
imulb
cmp
xchg
in
icebp
pop
ss
outsb
hlt
stc
jge
xchg
push
push
in
loopne
xchg
cmpsb
xchg
outsb
xor
loop
sub
mov
shll
jl
mov
leave
dec
sub
fcoml
dec
mov
fldenv
andl
xchg
iret
lret
xchg
imul
jecxz
icebp
and
repz
fisubrl
cmpsl
lock
cmp
cmpsb
fistpl
bound
out
mov
mov
js
sbbl
mov
nop
ds
mov
lret
dec
test
pushf
jae
mov
or
dec
jge
xchg
jmp
mov
or
mov
mov
repz
lcall
xchg
mov
mov
lea
inc
adc
inc
mov
sti
jl
or
adc
inc
fcoml
sahf
int
cmp
enter
adc
xchg
sbb
cmp
add
aas
jno
cmpl
popf
shll
dec
mov
push
in
outsb
loope
arpl
pop
adc
movsb
mov
into
add
mov
lahf
dec
push
adc
push
out
push
mov
rcrb
in
rolb
xchg
test
sub
sub
adc
mov
pop
dec
cld
aaa
jb
arpl
cmc
inc
or
dec
cli
mov
mov
jae
sub
push
popf
xorl
adc
lods
xchg
sub
jbe
repz
es
lock
xchg
jle
cmc
fwait
mov
pop
out
dec
or
lcall
dec
xor
sbb
inc
sbb
pop
adc
das
mov
adc
pushf
jbe
loopne
ja
or
out
or
mov
jne
xchg
mov
mov
fisttpl
scas
jo
sbb
mov
gs
ja
call
and
shlb
push
enter
jl
hlt
addb
es
js
sub
lock
loopne
dec
cmp
jbe
jp
mov
xchg
ljmp
divb
pop
fildll
mov
insb
ret
sbb
leave
xlat
shr
daa
or
sub
mov
daa
cli
outsb
and
jno
lds
movsb
ss
into
lahf
pop
cmpsl
negb
lods
sbb
popa
jge
add
cmp
div
or
inc
mov
fisubrl
or
cmpsw
push
stos
pop
ficompl
hlt
sub
adc
fldcw
push
inc
and
mov
jge
push
inc
jnp
ficoml
jmp
lcall
sbb
aam
xor
adc
push
sbb
sub
out
xchg
aam
pop
cmpl
add
push
jecxz
in
sub
pop
in
lahf
or
pop
jmp
fnstenv
fidivrs
add
enter
pop
rcll
pop
filds
in
sub
loop
arpl
add
inc
push
test
jae
ljmp
push
mov
cmc
subb
jb
dec
or
mov
mov
inc
cmp
push
jae
sbb
pop
in
iret
mov
test
jl
es
ja
sub
cmc
jne
mov
pusha
aad
test
jmp
jne
push
sub
std
cli
rolb
push
into
and
jg
pusha
sub
pop
xchg
inc
push
and
pop
push
insl
push
xchg
ljmp
sub
pop
cmp
cld
into
or
adc
sub
sub
dec
cmpsl
mov
and
push
adc
mov
mov
adc
and
pop
test
dec
pop
fildll
mov
out
xor
mov
stos
lea
jl
fisubl
push
adc
mov
xor
lock
push
fwait
sbb
cwtl
pop
lea
into
sub
movsb
enter
adc
or
mov
lret
xchg
push
xchg
push
rcr
repnz
pop
aaa
mov
dec
stos
xchg
arpl
pop
add
in
fucomip
jg
cmp
or
cmpsb
fildl
dec
push
cs
inc
jo
movsb
sub
insb
mov
lcall
into
loopne
dec
test
mov
aas
jno
mov
pop
mov
add
or
push
aam
add
add
repz
xor
push
testb
sti
inc
fmuls
xchg
lahf
bound
ja
movsl
sahf
das
inc
cmp
pusha
inc
loop,pt
jge
and
jp
lds
lcall
push
call
sub
es
push
xchg
sbb
mov
out
dec
movsl
out
addr16
jmp
mov
mov
leave
pushaw
xchg
loopne
daa
add
sbb
jl
xor
jno
ljmp
les
dec
inc
int3
cwtl
popa
adc
xor
movsb
inc
enter
cltd
movq
pop
push
xor
and
push
testb
ret
ss
xchg
or
mov
mov
into
jns
or
into
loop
popf
ss
outsb
in
jg
jbe
idivl
push
mov
xor
js
mov
sahf
aas
ljmp
xchg
xchg
xchg
pop
xor
stc
push
pop
pop
inc
mov
sahf
pop
dec
cltd
mov
xchg
lahf
int3
or
xor
jl
filds
and
pop
and
ret
test
fidivs
ret
mov
nop
sbb
decl
pop
aam
es
jo
and
sbb
push
xor
ds
add
add
roll
push
divl
out
cld
cmp
pop
scas
xchg
xchg
jge
ret
lods
pop
xor
or
jb
xor
jae
jnp
clc
fnop
test
scas
insb
outsl
push
jae
mov
pop
inc
loope
sbb
sbb
push
rcrb
jae
out
enter
sbb
out
cwtl
lds
pop
add
lds
or
sbb
jecxz
jp
popf
les
leave
fisubrs
or
imul
lcall
xorb
lret
insl
push
xchg
or
inc
dec
pusha
jp
mov
mov
out
das
lock
jmp
xorl
outsl
push
fmulp
mov
lret
fidivrs
or
stos
aad
inc
stos
enter
into
rcr
mov
adcb
sbb
sub
icebp
insb
ljmp
insb
inc
push
xchg
lods
call
cs
dec
dec
movsl
pop
inc
in
xor
ljmp
xor
mov
aam
daa
push
push
xor
push
leave
into
and
mov
lcall
insl
lea
sub
mov
int
jecxz,pn
rolb
xchg
and
sbb
inc
mov
hlt
lds
ljmp
xchg
aas
cli
adc
cmc
or
jle
xlat
lods
loope
cwtl
subl
or
add
push
clc
shrl
das
cmp
jle
adc
sub
cwtl
xor
mov
lods
adc
jae
aad
fdivr
js
jg
pop
push
bound
inc
jge
sti
mov
jnp
adc
pop
mov
mov
loopne
mov
cwtl
js
pop
imul
pop
ret
inc
out
fistl
stc
andl
test
das
sbb
jae
dec
in
xor
jecxz
add
lds
and
adc
pushf
mov
call
pop
pop
push
xchg
cs
xor
out
push
xor
int
dec
cmp
pop
sub
or
push
mov
popa
cld
fdivrp
cltd
mov
jnp
ss
jge
mov
lods
mov
add
push
icebp
xlat
inc
aas
pop
aad
cmpsl
cltd
xorb
xchg
push
add
or
cmpsl
cmp
xchg
xor
and
lock
std
and
mov
and
icebp
add
xchg
xchg
fsub
add
jno
mov
icebp
nop
ja
cmp
cli
stos
jp
rorb
sbb
add
jne
inc
pushf
cmp
ret
clc
add
pop
out
sub
or
imul
ret
imul
lea
sbb
push
adc
ret
sbb
inc
test
xor
sbb
stc
orb
inc
pop
js
test
pop
js
out
testl
dec
out
clc
pop
clc
cltd
push
out
mov
test
or
mov
xor
mov
cmpsl
jnp
pop
jb
dec
jnp
mov
sub
cli
mov
sub
ds
faddl
imul
push
into
ret
xchg
push
lahf
adc
and
or
jb
or
push
insl
add
add
push
in
nop
mov
lret
push
ret
xor
add
mov
clc
sub
mov
aaa
add
ljmp
int
sahf
inc
add
loope
add
jl
aam
pop
add
cmc
rorb
std
in
mov
lcall
das
push
and
sub
loope
or
insl
adc
add
xor
andb
andb
push
mov
out
xor
arpl
jb
in
stos
mov
xchg
pop
fdivl
cmpsb
inc
or
out
cmpsl
movhps
jno
mov
out
push
adc
push
sbb
xor
fnsave
ljmp
adc
sti
outsb
mov
scas
cwtl
cmc
or
cmp
jnp
lcall
jp
cwtl
sahf
les
jg
inc
std
jbe
pop
imul
nop
inc
fdiv
test
fcos
sub
out
arpl
sub
popf
mov
push
outsb
cli
mov
popa
lods
cltd
push
adc
xor
cs
fwait
sub
cmp
cmp
jmp
incl
mov
xor
mov
mov
push
adc
mov
cwtl
or
aas
insb
stc
fdivr
sub
lea
lock
push
insl
sahf
sbb
xchg
sti
out
cmpsb
adc
mov
mov
addb
xchg
push
int3
insb
inc
clc
cli
mov
les
mov
int3
lods
xor
leave
sub
ds
jo
and
push
fnstcw
cmpsl
mov
sbb
add
add
push
sahf
jmp
ss
out
ja
cwtl
dec
inc
xor
mov
mov
pop
fs
in
loope
dec
adc
loopne,pn
in
jp
bound
idivl
sub
std
inc
adc
sbb
mov
adc
push
mov
and
dec
outsl
rcl
mov
cmp
jp
lds
inc
fmulp
js
sub
pop
adc
sbb
movsl
dec
or
cltd
lods
pop
dec
adc
sbb
scas
xchg
mov
sub
mov
outsl
mov
or
loop
cmp
xor
dec
mov
js
sbb
mov
xchg
iret
mov
sti
adc
stc
les
fs
or
dec
or
pop
push
jle
test
inc
movsb
jp
jns
int
lcall
subb
mov
ljmp
or
cld
cmp
out
stc
cmc
scas
inc
adc
mov
ljmp
leave
pop
cmpsl
pop
mov
cmc
adc
mov
jg
ret
and
sbb
ljmp
cmp
aam
sbb
or
xchg
adc
mov
sahf
scas
ret
lds
addr16
mov
mov
ret
outsl
loopne
xor
pop
inc
shr
inc
mov
insl
sahf
mov
mov
lods
iret
cli
loop
sub
test
imul
xor
cmp
xor
pusha
xchg
adc
cs
mov
dec
push
dec
ret
fwait
inc
push
push
out
sbb
icebp
sbb
jecxz
test
xor
insl
mov
lods
sbb
sbb
inc
sub
ret
jnp
sarb
mov
stc
into
loopne
arpl
std
into
ret
popa
mov
mov
push
sub
rorl
jle
add
stos
push
fnsave
test
xor
push
and
imul
cmp
cmp
dec
and
pop
es
in
stos
ja
fs
mov
or
repz
lret
xchg
inc
jp
push
es
js
outsl
cmp
fidivl
lock
push
push
or
adcb
testl
xchg
cs
pop
mov
ror
subb
iret
adc
dec
add
sub
inc
out
jnp
mov
and
movsl
int3
mov
xchg
or
shlb
pop
mov
shlb
aam
push
xchg
pop
cmp
shl
rol
in
stos
movsl
jb
sub
xlat
adc
xor
shll
mov
sub
scas
mov
cmp
fnstsw
adc
enter
and
jne
out
outsb
add
das
std
into
and
lcall
add
out
xchg
lea
mov
adc
mov
loope
inc
int3
ret
pusha
mov
jo
cmp
xorl
push
iret
cmc
ffree
movsl
lds
dec
push
imul
adcb
in
jno
clc
adc
xor
cmp
mov
jg
fistpl
or
ja
lret
add
cmc
pop
or
repnz
push
lods
add
inc
mov
ss
xchg
movsl
or
movsb
add
xchg
test
sahf
scas
stc
adc
sbb
cmp
inc
mov
add
jnp
aas
loope
das
lret
mov
shll
cmpl
push
leave
mov
mov
cmp
inc
roll
aas
pop
leave
ret
outsl
add
mov
push
jge
ret
inc
mov
xor
inc
icebp
sahf
pop
jne
dec
cmp
nop
mov
dec
inc
adc
lods
cld
aad
pop
loope
lret
fistpll
push
add
shrl
mov
sub
pop
xor
shr
push
xor
push
cltd
mov
jecxz
aad
int3
pop
push
aas
xchg
sbb
shrb
pop
call
pop
add
outsb
popf
pop
or
mov
mov
cmp
aad
sbb
lret
dec
addr16
inc
cmpsl
fildll
int
mov
xchg
inc
sti
test
lcall
loope
jecxz
pop
mov
xor
mov
iret
xor
ds
push
xchg
repz
xor
popf
aam
stos
pop
ret
andb
popa
xor
loop
dec
pop
notb
movsl
dec
out
mov
ja
jg
add
jne
rcll
enter
jge
mov
xchg
bound
in
gs
jo
or
push
les
and
add
push
ljmp
pop
out
out
sahf
xorl
add
sahf
repnz
jp
push
adc
add
push
insl
jae
lods
std
mov
push
ja
xor
push
mov
sub
and
sti
rcl
fidivs
sbb
jae
add
mov
cmp
shlb
or
cltd
mov
push
rcl
mov
movsl
mov
pop
cmp
cmp
inc
dec
mov
lret
cltd
aad
jmp
imul
xor
movsl
dec
pop
push
mov
dec
sbbb
arpl
jle
aam
push
mov
gs
push
mov
in
pop
lds
in
enter
xchg
inc
mov
mulb
jge
scas
sti
pop
or
fcoms
pop
daa
lea
popa
stc
addr16
sbb
sub
sub
cmp
movsl
insl
test
sub
sub
sub
movsb
push
lahf
mov
sbb
inc
xor
push
fmuls
stos
enter
jbe
outsb
loope
ret
ret
scas
xor
inc
repz
mov
js
push
data16
xchg
outsl
and
sub
dec
sub
mov
in
data16
shlb
inc
adc
xor
mov
add
test
sub
leave
inc
dec
pop
mov
scas
int3
movsb
stos
sbbb
iret
jbe
and
sub
mov
xlat
pop
and
lret
test
incl
mov
outsb
mov
cld
rolb
push
cmc
shrl
pop
sbb
inc
insl
cmp
aam
insb
xorl
loop
insl
orb
adc
pop
xchg
lahf
inc
xchg
jl
ret
push
inc
test
pop
push
test
mov
mov
mov
cltd
adc
mov
sub
ffreep
push
mov
fildll
cmp
sbb
xor
pop
xchg
cli
dec
ja
call
inc
int
and
cli
pop
adc
pushf
divb
inc
sarl
pop
inc
cmc
call
mov
mov
cwtl
cmp
mov
and
jno
push
cmc
test
mov
push
mov
xor
and
or
aad
xchg
ljmp
and
cmp
pusha
sbb
pop
mov
adc
cs
push
outsb
jg
adc
iretw
xor
cmpsl
mov
ljmp
inc
push
mov
int
push
or
mov
jae
stos
hlt
dec
mov
les
mov
repnz
pop
push
or
mov
jecxz
cmpl
subl
testb
lods
scas
jae
or
fildll
loop
mov
cmp
adc
lcall
inc
xchg
inc
adc
cmp
mov
sub
xor
adc
test
cmp
les
adc
inc
jle
enter
adc
xchg
loope
push
push
xor
getsec
out
adc
fwait
imul
inc
in
or
and
in
cmp
add
popf
stos
les
pop
and
fsubrl
sub
je
cli
fistpl
lret
jl
xlat
popf
shll
pop
xor
mov
ds
cld
int3
cld
and
loope
outsb
cli
stos
push
jae
mov
test
negb
sar
xor
push
sub
movsb
dec
test
test
add
or
jb
inc
cmp
mov
cli
xchg
mov
lcall
and
push
jp
or
jb
inc
cmp
mov
cli
xchg
mov
lcall
and
or
jp
lcall
push
lret
mov
cmp
mov
mov
stos
ret
pop
and
xor
add
or
jb
inc
mov
sbb
cli
in
push
or
pushf
xor
adc
inc
xchg
ds
sbb
or
sbbb
jl
insb
rcrb
add
jo
pusha
cld
push
in
and
cmp
sub
pushf
xchg
dec
loopne
shrb
xor
fdivl
pusha
cld
push
in
inc
sbb
das
adcl
out
pop
mov
mov
ret
jl
push
mov
lret
notl
inc
jge
ret
pop
mov
in
lret
sbb
xchg
sub
xor
xor
jp
lea
pusha
int3
in
add
adc
loope
mov
outsl
rcll
sub
xchg
int3
and
push
cmp
mov
sbb
pop
mov
or
xor
sbb
or
mov
lods
push
sti
jno
pusha
jns
in
mov
ret
add
jmp
insb
fistps
or
jg
test
mov
outsl
push
orb
mov
sub
insl
and
jae
jg
daa
or
aas
ds
leave
dec
mov
movsb
ret
in
jg
loope
mov
shr
aas
push
xor
fdivl
pusha
cld
push
in
inc
sbb
or
cmp
sub
pop
lock
loopne
shrb
xor
pop
aad
lds
aaa
mov
xor
shrb
ret
push
lock
test
mov
jmp
arpl
xor
outsb
jns
pop
sarb
imull
pop
xchg
and
mov
xchg
stc
jno
jae
jne
js
inc
int3
pusha
cld
push
in
inc
sbb
or
cmp
sub
pop
lock
loopne
shrb
xor
fdivl
pusha
cld
push
in
inc
sbb
or
cmp
sub
pop
lock
loopne
shrb
xor
and
sbb
loop
push
fcoms
addr16
test
fstpl
pop
xor
jecxz
loop
jae
aaa
inc
aam
jns
fisttpll
mov
aas
hlt
push
mov
adc
mov
imul
test
mov
test
adc
jle
and
mov
xchg
jae
xor
mov
ret
cmp
ljmp
cwtl
xchg
dec
push
mov
sub
jns
dec
pop
rorl
fcmovnb
pop
sub
inc
and
jno
call
push
pop
inc
xor
scas
in
dec
or
inc
jmp
mov
mov
pop
xor
and
dec
mov
jecxz
xor
jno
movsl
cmp
pop
xchg
adc
lret
scas
mov
enter
inc
xchg
mov
add
push
xchg
out
les
and
aad
and
test
push
mov
data16
cs
fsubs
xchg
xchg
sbb
gs
jecxz
jb
leave
loope
jns
mov
scas
stc
in
jg
xor
repnz
repz
popa
dec
pop
std
je
test
gs
jge
and
xor
int
out
xchg
into
lret
arpl
dec
icebp
xor
lock
push
dec
ss
and
sub
xor
iret
iret
arpl
sbbl
js
jl
mov
xlat
fisttpll
sahf
push
push
bound
pop
mov
jecxz
nop
enter
test
or
cld
mov
push
arpl
jo
mov
pop
shrb
add
add
mov
fs
fisubrl
in
out
dec
mov
jmp
mov
sti
faddl
cmp
cmp
imul
fisubl
xor
xchg
popf
scas
hlt
dec
lret
outsb
cmp
xor
mov
std
lcall
sbb
mov
xor
mov
mov
xchg
test
push
cmp
adc
jmp
daa
jnp
imul
cltd
cmc
pushl
dec
mov
in
jl
cmpsl
js
ds
iret
insl
pop
mov
push
mov
sahf
sbb
adc
xor
popaw
adc
xchg
xchg
stos
dec
pop
push
test
cmp
mov
or
aas
xchg
mov
sbb
jnp
xchg
push
lcall
xchg
mov
and
lsl
xor
lret
test
mov
fmul
cmp
add
idivb
mov
jb
inc
mov
pop
xor
bound
mov
lods
cltd
jo
sahf
xchg
call
in
flds
jle,pt
jo
pusha
mov
sub
sub
ret
xchg
mov
fsubs
shrl
cmp
fwait
xor
adc
inc
cmp
lock
mov
adc
fwait
push
push
xor
aas
mov
dec
push
jb
mov
and
xchg
fimull
or
mov
rol
fcomip
or
aad
pop
xchg
jb
pop
int
movsb
or
faddp
add
std
seta
wrmsr
adc
cmc
imul
inc
fsubrs
mov
dec
add
cli
jl
fstpt
jno
fistps
jno
and
jp
clc
sub
mov
push
stc
out
sub
cld
outsl
inc
push
sahf
lahf
jmp
mov
sub
fcmovnu
cmp
ljmp
pop
xor
mov
push
bound
xchg
stos
loopne
push
mov
xchg
adc
stc
pusha
jno
cmp
add
or
push
pop
aaa
dec
mov
push
or
dec
loope
and
je
cmp
jmp
mov
inc
push
cmp
mov
push
mov
lahf
push
cmp
arpl
add
icebp
xchg
adc
cwtl
scas
sub
mov
lahf
movsl
dec
xor
add
daa
lods
popf
add
sbb
push
lods
out
cmp
fdivrp
mov
lahf
divl
push
ret
jge
add
sub
outsl
add
mov
sbbb
loope
push
pop
aad
or
imul
xchg
dec
inc
das
test
mov
adc
pop
lea
jne
mov
cmp
add
nop
xor
mov
fadd
in
stc
fcompl
mov
lods
gs
iret
cs
mov
xchg
movsb
push
test
addb
lret
jae
mov
jecxz
int
add
iret
scas
ret
xchg
xorb
imul
test
loop
jl
xor
xor
jmp
mov
and
pop
xchg
in
pusha
inc
je
je
or
scas
std
mov
push
out
push
jne
dec
adc
jo
xor
ljmp
popf
xor
stos
pusha
int
sti
insl
stos
hlt
jns
add
mov
je
sbb
jg
rorl
xor
mov
pop
out
inc
lock
mov
mov
xchg
xchg
mov
and
lcall
mov
std
outsl
test
rolb
and
dec
es
popa
pop
mov
loope
pushf
adcb
mov
test
adc
mov
mov
test
mov
mov
mov
push
inc
enter
and
jmp
adc
out
icebp
push
nop
ret
lock
xor
dec
repnz
iret
ret
repnz
scas
xchg
sarl
pop
pop
pop
push
xor
gs
into
jmp
jge
push
ss
insl
shl
jno
ficoml
icebp
pop
in
sbb
and
outsb
adc
push
xchg
lds
mov
inc
movsl
outsb
cmp
ds
shrb
cmp
imul
push
adc
mov
ja
cmp
scas
stos
cmp
je
adc
popf
repz
addr16
cmp
adc
mov
fcoml
fucomi
dec
mov
mov
aam
stc
mov
pushf
push
js
cltd
jge
fsubrl
inc
mov
mov
dec
faddl
dec
es
call
movsb
mov
adc
and
sbb
sahf
popa
int
jb
sbb
add
imul
mov
mov
pop
xor
jns
adc
movsb
ss
jo
pop
xor
jnp
mov
jmp
cmp
mov
je
pop
mov
mov
das
push
pop
inc
push
mov
fsubs
fwait
out
nop
and
int3
xor
in
mov
mov
cmovp
loop
adc
outsb
jg
in
mov
insb
sbb
dec
lahf
lods
pop
adc
leave
loop
jo
dec
mov
bound
xlat
pop
adc
lods
rorb
mov
inc
xchg
adc
pop
fldt
cmpsb
ret
fsubrp
adc
int3
in
les
sbbb
mov
push
ja
fwait
mov
jmp
repz
lock
ja
dec
stc
mov
leave
dec
push
xchg
inc
xor
mov
mov
pop
pop
xchg
xchg
add
fstpt
push
dec
mov
pushf
cmp
sahf
pop
jno
or
sub
int3
xchg
dec
arpl
push
pushf
in
cmp
enter
push
dec
sub
idivl
adc
jae
pusha
sahf
loopne
imul
scas
repnz
push
add
push
jmp
xchg
lods
pop
add
cmc
mov
and
xchg
cmpsb
lea
xor
mov
addr16
dec
xor
inc
dec
add
dec
inc
pop
pop
jecxz
fiadds
inc
cmc
test
jno
cmp
ss
jl
push
lret
je
sbb
ja
das
clc
jmp
outsl
testl
inc
dec
jmp
cs
test
rcrb
pushf
sbb
enter
inc
jb
jae
ret
cwtl
jmp
push
xchg
leave
loopne
lds
mov
loop
pop
notb
inc
movsb
inc
mov
inc
dec
xor
roll
mov
pop
mov
out
shll
js
or
and
mov
jnp
xor
mov
xor
jmp
jg
pop
pop
maxps
movsb
aam
repz
popa
pushf
fs
inc
sbbb
sub
negb
leave
icebp
mov
mov
out
pop
test
ja
pop
sbb
and
mov
pop
add
mov
dec
pop
cmp
inc
jg
cltd
les
push
or
push
cltd
mov
jno
pop
clc
cmp
sbb
insb
hlt
sbb
std
cs
adc
stc
mov
and
jle
and
pop
adc
insl
test
les
cmpsb
fpatan
push
mov
fwait
cmpsb
lret
fwait
dec
jecxz
dec
jnp
cltd
add
loope
lods
dec
add
mov
inc
rcll
adc
adc
inc
jecxz
xchg
jnp
jl
dec
pop
dec
pushf
enter
inc
nop
insb
dec
or
int3
cmpsl
adc
inc
fimull
cmpb
cwtl
adc
adc
rcll
mov
lods
ja
mov
movl
jge
push
aad
stos
sub
hlt
inc
call
cmpsb
movsl
cli
mov
scas
shl
pop
inc
rclb
cmpsb
ficoms
andb
sbb
mov
aaa
jbe
aas
gs
lods
fmul
aam
decb
mov
stc
mov
out
fadds
repnz
mov
xchg
frstor
cmp
fcoms
sub
gs
add
aaa
xor
push
imul
mov
xchg
and
ret
jmp
icebp
scas
movsb
out
pop
test
pop
test
inc
mov
sub
cmp
shl
xor
decl
popf
add
fwait
inc
into
int
fcompp
dec
push
cli
nop
push
xlat
lock
mov
mov
and
out
test
fcomp
in
push
lcall
je
enter
repz
sbb
aam
mov
add
inc
adc
mov
std
vrsqrtss
mov
loop
in
xchg
fistps
sub
lock
sbb
push
subl
fnstsw
ret
inc
dec
mov
push
mov
int3
and
mov
shlb
jbe
repz
stos
inc
sar
aas
adc
push
int3
adc
popf
scas
push
adc
enter
lds
inc
sub
hlt
xor
test
mov
rcr
gs
pop
int3
shl
rorl
sbb
sub
loope
push
lds
sbb
inc
adc
push
out
test
or
les
pop
out
sub
push
je
adc
pop
sub
ret
dec
push
fistps
dec
adc
cli
mov
jecxz
test
push
cmp
movsb
sbb
sarb
xor
std
dec
icebp
insb
cmp
push
shll
adc
lods
pusha
sbb
loope
mov
fwait
pop
inc
push
repnz
inc
jae
jmp
push
cmpsb
or
sub
cwtl
mov
and
scas
inc
stos
rorb
push
outsl
jle
ljmp
mov
jmp
push
sbbb
lcall
xor
cmp
mov
fsubrs
add
fmul
pop
sbb
jno
push
push
push
dec
mov
loop
stos
dec
sbb
mov
mov
sbb
test
and
lret
mov
cmp
cmpsb
aas
clc
jle
push
or
sub
xchg
push
leave
inc
push
and
iret
xor
dec
lret
push
ficompl
insl
rcl
enter
das
or
mov
mov
jae
jnp
xchg
inc
aas
lods
imul
dec
pop
ds
shlb
mov
or
cltd
addr16
jecxz
dec
lahf
fwait
xchg
and
adc
jp
cmp
pop
movsl
dec
lods
dec
xchg
push
jno
mov
pop
shr
int
movsb
aas
and
sbb
paddq
xchg
dec
mov
lods
ds
sub
psubq
and
cmpsb
and
ljmp
pop
push
add
dec
jns
cwtl
add
xor
adc
sub
add
aaa
call
lds
popl
jmp
scas
loope
mov
aam
jnp
in
movsb
jmp
pop
cmp
cmp
test
and
xor
dec
mov
xorb
sbb
cwtl
in
mov
test
test
and
orl
and
fincstp
mov
add
jecxz
into
fstpl
les
test
inc
push
push
pusha
xor
stos
mov
aam
test
adc
mov
dec
jo
ss
adc
add
push
xchg
push
dec
push
repnz
pusha
out
out
dec
filds
push
cld
out
jle
cltd
out
mov
cli
loope
imul
pop
adc
mov
adc
inc
rorb
lea
fs
dec
cmc
cwtl
pop
xor
add
das
adc
mov
and
into
xchg
das
test
mov
out
and
adc
jmp
inc
arpl
lods
jmp
dec
lock
jg
lock
mov
dec
insb
jmp
stc
pop
add
or
jne
movsl
mov
loope
rol
mov
cmp
in
ss
sbb
push
or
mov
sub
mov
pop
aad
faddl
popa
push
imul
out
ja
ja
pusha
enter
push
call
fisttps
inc
cmp
xor
divb
jge
jge
packuswb
dec
sub
mov
ret
push
test
push
imul
sbb
dec
fs
jmp
int
push
inc
stos
cwtl
mov
jp
cmp
lcall
ljmp
inc
fimull
sahf
cmp
sub
and
stos
outsb
arpl
les
sbb
or
xchg
mov
cmp
jns
out
pop
stc
add
jge
jbe
xor
dec
mov
insb
test
sbb
cmc
pcmpgtw
pop
aas
cmp
cmp
sbb
add
in
call
mov
repnz
shrl
sub
mov
jecxz
inc
mov
dec
test
add
inc
lock
outsl
sub
cmc
es
outsb
or
loopne
mov
cmp
add
push
jb
and
aaa
pop
add
ja
and
bound
int
rclb
push
push
and
mov
js
xor
fwait
xchg
xor
lret
addl
add
scas
mov
mov
xlat
mov
pop
sbb
jb
pop
fmuls
in
inc
mov
add
mov
push
add
sub
cmpsl
or
add
inc
nop
xor
jg
std
xchg
or
adc
das
adc
cmpl
movsl
fnsave
pop
dec
shlb
pop
pop
xor
sbb
nop
dec
iret
in
sub
shlb
adc
subb
cmp
hlt
cmp
push
les
scas
mov
jb
gs
shrb
xor
aam
xor
outsb
add
mov
cmp
lahf
fcomps
pop
aas
pop
jge
pop
insl
cmp
rcrb
popa
int
pop
pop
cmp
xor
mov
nop
push
mov
sti
rcrl
rolb
jle
imul
ljmp
fsubrl
adc
jb
pop
jo
and
cmpsl
sbb
jp
in
mov
inc
xor
in
mov
pop
aad
shrb
call
imul
fstl
push
loop
cs
sahf
mov
nop
xor
cld
movsl
dec
pop
pop
in
je
sahf
mov
call
xchg
roll
xor
inc
in
lock
fistpll
inc
and
jmp
xchg
call
xlat
xchg
lea
stos
cs
dec
test
aas
add
mov
sahf
int
lock
mov
int
leave
xlat
cmp
dec
rcrb
dec
or
jae
xlat
shll
jbe
cmpl
sub
push
popa
adc
sbb
pop
mov
orl
pushf
loop
lret
cmpsb
enter
add
mov
inc
test
cmp
sti
and
dec
fucompp
or
into
mov
inc
fimull
repnz
daa
mov
jae
dec
and
pop
subb
divb
cmc
push
dec
inc
ret
mov
mov
adc
cmc
jmp
cli
rcll
dec
incl
dec
imul
out
mov
mov
dec
or
icebp
xor
and
mov
push
fists
jg
mov
fwait
int3
jmp
stos
fildl
or
dec
xor
insb
shrb
inc
faddl
jmp
inc
outsl
add
push
mov
add
inc
in
js
or
xlat
pop
ss
lds
sbb
int
out
mov
mov
out
push
sar
xchg
adc
dec
add
push
shlb
or
jns
or
xchg
bound
scas
mov
ds
inc
scas
leave
insl
repz
ljmp
fs
pop
dec
sahf
push
into
adc
jne
out
lds
mov
cmp
adc
dec
push
in
nop
stc
out
fwait
bound
in
lods
mov
push
hlt
popf
or
xor
sub
pop
insb
gs
mov
icebp
jnp
in
es
flds
mov
mov
inc
out
push
xor
sbb
out
inc
das
rep
lret
movsl
and
sbb
in
jnp
in
xor
inc
adcl
xchg
gs
xchg
mov
xor
inc
into
imul
mov
andl
push
jge
xor
and
jmp
sahf
mov
sahf
lcall
push
or
or
xor
mov
lods
inc
or
es
movsl
cmp
ret
sarl
nop
push
xor
mov
push
cmp
leave
and
or
daa
icebp
lret
pop
insb
adc
inc
sub
movsb
fsubrl
push
stc
or
fmul
insl
pop
or
dec
inc
inc
out
adc
lret
mov
inc
jmp
outsb
or
sbb
mov
jl
or
xchg
push
push
cs
xor
dec
outsb
outsb
mov
cmpsb
cwtl
pop
and
jbe
shll
adc
and
scas
outsb
push
mov
test
cmpsb
inc
loope
orb
adc
push
js
jge
jecxz
pop
xchg
jno
pushf
test
xor
fucomp
arpl
into
add
jl
lock
push
jnp
movsb
repnz
or
xchg
sbb
out
idiv
sbb
jle
incl
adc
jg
lods
or
ja
idiv
mov
pop
fidivs
aad
push
push
daa
and
xor
xlat
mov
out
inc
lods
cmp
sbb
inc
in
ds
push
outsl
jle
xchg
pop
mov
stos
js
ret
add
jge
arpl
xlat
and
pop
loopne
and
and
movsl
pushf
rcll
es
movsl
sbbl
aam
jns
pop
test
jnp
test
push
jnp
and
lods
repnz
xchg
das
mov
or
je
dec
xchg
pop
sub
push
outsl
xor
jmp
cmp
aas
sub
dec
lahf
outsb
nop
pop
push
stc
movsb
popa
mov
xor
adc
aaa
mov
cltd
bnd
mov
imul
fdivr
sub
mov
arpl
xor
add
xchg
sahf
xchg
jle
xor
int3
jo
aaa
arpl
push
mov
push
mov
xor
jecxz
lock
pop
mov
cli
das
andl
push
sbb
pop
push
lahf
lahf
ljmp
sbb
add
ljmp
cmpsb
mov
inc
mov
scas
push
jo
jp
lahf
xchg
iret
xor
xchg
mov
ss
stc
mov
dec
dec
cmp
cltd
xchg
imull
cwtl
out
inc
and
jle
add
repz
mov
sti
add
aam
fwait
jmp
jne
out
pop
mov
add
pop
cmpsl
out
pop
enter
or
sbb
mov
cmpsl
shrb
pop
lock
push
lahf
inc
jmp
inc
xor
es
pop
daa
cltd
jo
mov
mov
scas
mov
jne
movsl
push
loop
xor
cmc
xchg
je
das
sbb
pop
dec
in
mov
popf
imul
inc
cmp
jbe
int3
push
or
xlat
shlb
xchg
sub
xchg
cmp
push
decb
es
xchg
mov
push
ret
clc
or
sub
pop
ficoms
shll
out
bound
cmpsb
mov
inc
cmpb
xchg
aam
aaa
subb
sbb
dec
xor
jp
outsl
sub
xor
fwait
xchg
xchg
dec
psubd
push
push
out
mov
or
out
fptan
test
repnz
xchg
push
adc
rcl
das
pop
ss
xor
stc
addb
jecxz
xchg
inc
imul
dec
push
hlt
retw
sub
pushf
push
scas
jns
nop
adc
inc
dec
pop
fidivrs
mov
sbb
mov
mov
pop
pop
fwait
inc
add
lcall
add
jo
pusha
cld
push
in
inc
sbb
or
cmp
sub
pop
lock
loopne
shrb
xor
fdivl
pusha
cld
push
in
inc
sbb
or
cmp
sub
pop
lock
loopne
shrb
xor
cmp
lods
add
pusha
cld
push
insb
inc
sbb
or
cmp
sub
pop
lock
loopne
shrb
xor
fdivl
pusha
cld
push
in
sbbb
or
js
pop
or
sbb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
orb
pop
sarb
and
cmp
adc
jl
insb
jo
push
dec
push
mov
orb
ror
cmp
sub
sbb
or
jl
insl
mov
mov
cwtl
mov
int3
lret
insb
jne
adc
push
pop
push
and
fstps
mov
adc
stos
pop
mov
icebp
mov
dec
mov
or
push
std
push
icebp
arpl
jno
cld
imul
and
pop
andb
adc
in
and
inc
pop
aaa
neg
mov
lock
mov
cmp
movsl
cmp
or
mov
fistpll
mov
xchg
rclb
test
mov
out
sub
insb
movsb
lret
out
cwtl
sub
jg
jo
ror
and
and
xchg
inc
xchg
sub
in
std
mov
scas
push
push
cmpsb
xorb
fisubl
js
fcompl
and
in
adc
aas
add
jg
lods
cmpsl
pushf
nop
mov
int3
leave
cmp
sub
sbb
or
jl
insb
addr16
inc
dec
xor
fiaddl
sbbl
dec
dec
dec
outsl
push
dec
jg
or
cmp
lret
mov
lock
cltd
xchg
cmpsl
ret
mov
je
push
mov
or
xor
loope
aad
loope
in
mov
lock
int3
sarb
sub
sbb
or
jl
insb
jo
inc
dec
push
mov
orb
ror
cmp
sub
sbb
or
jl
insb
jo
inc
dec
push
mov
mov
push
xchg
mov
mov
pop
and
pop
pop
pusha
insl
std
sub
leave
jle
mov
sahf
cmp
add
sarb
cld
ret
loope
shrb
out
repnz
jecxz
popa
leave
mov
icebp
scas
xor
mov
mov
cmp
mov
mov
rorl
repnz
jecxz
pop
sub
flds
and
aaa
xchg
xchg
add
ljmp
pop
cmp
cld
sbb
test
mov
mov
xchg
jb
dec
jns
ss
add
cmp
test
add
jns
jg
icebp
pop
mov
push
jbe
jno
frstor
push
movsb
in
ja
cmpsb
iret
movsb
pop
mov
or
iret
mov
inc
call
xchg
outsb
lcall
xlat
pusha
or
push
jmp
push
xchg
in
call
and
add
loopne
push
gs
hlt
sub
shlb
fimuls
cmp
arpl
xor
sbb
stos
data16
mov
or
push
xor
repnz
and
jge
das
adc
jecxz
push
add
icebp
dec
sbb
pop
out
mov
xor
push
jmp
in
dec
mov
adc
pop
dec
fs
dec
cmpsb
in
repnz
and
in
cmpsb
jecxz
adc
rorl
out
mov
sbb
adc
scas
ret
iret
push
out
inc
xchg
mov
jl
inc
ljmp
jmp
lods
in
inc
sbb
mov
aas
mov
sbb
daa
int
or
mov
adc
mov
mov
ja
stos
or
cmp
pop
adcb
fldln2
repz
movsl
dec
stos
cmpl
test
mov
mov
shll
jnp
cli
add
test
add
push
and
mov
adc
xor
fbstp
adc
lcall
mov
int
arpl
cwtl
jo
out
or
out
or
cmp
sbb
mov
pushf
mov
push
aas
pop
insb
xchg
repz
lret
movsl
lods
jns
mov
les
push
pop
pushf
mov
xchg
cld
mov
lods
sub
jle
fstl
adc
leave
mov
adc
mov
push
sub
aas
adc
add
adc
sub
cltd
dec
xlat
nop
test
das
dec
jmp
mov
jl
stc
xchg
rcrl
scas
icebp
imul
nop
lods
cltd
lock
push
push
inc
xor
and
mov
sub
add
push
ficoms
xorl
sub
in
test
andb
add
cltd
or
mov
cli
mov
in
pop
and
fucom
ss
es
pop
ja
cltd
jae
push
adc
add
aaa
add
jne
or
nop
imul
inc
dec
js
scas
outsl
stos
lret
push
movsb
adc
insb
jp
pop
pop
mov
adc
ljmp
clc
mov
mov
aam
sti
xlat
push
cli
mov
or
idivb
popf
out
push
lock
and
data16
clc
pop
or
and
mov
dec
mov
jmp
dec
push
shll
mov
sub
push
pop
loop
or
jno
outsb
jo
cmpsb
mov
adc
sub
xchg
push
ljmpw
nop
ficomps
pop
xchg
mov
jmp
push
mov
sbb
cltd
movsl
adc
xchg
inc
in
inc
or
cmc
enter
mov
xor
push
popf
cmpsb
lods
ljmp
lds
test
mov
movsl
imul
xor
pop
dec
jmp
add
mov
or
adc
loop
or
dec
leave
ja
out
adc
dec
jb
add
or
mov
dec
and
dec
loope
add
lds
addr16
xor
jge
shll
imul
into
adc
stc
cmp
cmpsb
sbb
aam
push
xor
in
insb
cmpsl
jmp
sahf
adc
fwait
lahf
out
mov
jp
jl
and
mov
xchg
mov
mov
sub
xchg
jmp
add
in
je
mov
ret
out
add
jo
inc
aas
movb
lea
mov
jb
sbb
jge
lds
mov
and
mov
sbb
dec
mov
dec
pop
push
les
shr
jmp
cmpb
dec
stc
das
jle
and
sub
pusha
call
outsl
jns
push
sbbb
je
lret
jno
pop
xor
cmp
or
add
in
sub
adc
sbb
loope
dec
cmp
lret
jno
outsb
sbb
and
adc
pop
cltd
mov
push
or
push
dec
add
test
inc
clc
jle
daa
sbb
lea
or
cli
pop
leave
ja
fucomip
pop
into
cs
dec
loop
enter
fiaddl
lock
mov
rcrb
push
syscall
outsl
cmc
add
lret
rolb
jge
cmp
mov
outsl
mov
div
cwtl
in
push
popf
xchg
push
and
aas
hlt
pop
adc
xchg
je
mov
test
popa
push
cmpsl
jno
pop
xlat
mov
inc
ds
repz
and
stc
adc
push
icebp
sub
je
sbb
test
jmp
outsb
dec
cwtl
lock
add
lods
push
xchg
cmpsl
pusha
push
add
test
cs
test
jae
xchg
fsubl
aas
jg
lock
std
pop
pop
inc
test
mov
dec
push
arpl
xchg
test
jecxz
enter
clc
cmc
mov
adc
and
sub
xor
xor
cs
out
orb
xlat
or
push
sub
and
aas
popf
out
out
mov
sub
jecxz
xchg
arpl
sar
lahf
fwait
sub
call
jo
push
addb
adc
push
push
fwait
pop
or
inc
jo
cmp
jl
daa
andl
dec
jge
add
inc
call
add
insb
mov
pop
mov
ljmp
cs
adc
and
aaa
adc
sti
push
dec
arpl
cld
push
aad
xor
repz
adc
or
sub
xor
int
or
mov
mov
jle
pop
push
cmp
push
cmpsb
cmp
lahf
push
vpmaxsw
loope
mov
loope
popa
jg
bound
movsl
xor
ja
pop
aas
popf
or
fstpl
jne
jecxz
sahf
xchg
cld
sbb
mov
pop
lods
sbbl
lea
push
fsubrs
add
rolb
sbb
mov
sub
iret
stos
shll
cmp
lods
mulb
adc
mov
rcrl
lods
cmp
push
in
jne
pop
xor
das
and
xchg
lea
test
test
and
into
mov
mov
int3
add
add
int3
sbb
adc
insb
movsb
sarb
mov
cs
inc
pop
popf
test
xchg
xor
jl
out
orl
lret
cmp
cmpsb
fldl
inc
dec
adc
jno
cmp
push
jge
mov
xchg
push
loop
xchg
mov
xorl
or
and
or
sub
sub
stos
sub
sbb
inc
dec
cmpsl
cmpsl
js
scas
lock
inc
push
fdivrs
push
dec
mov
aas
push
fcom
jo,pn
movsl
inc
xor
jmp
bound
mov
shlb
fisubl
and
xlat
jl
int
inc
lcall
jo
cli
cwtl
push
inc
mov
sbb
xor
js
mov
dec
repnz
lea
stos
xchg
ds
in
dec
aam
push
cli
pusha
adc
gs
shl
pushf
dec
pop
mov
ds
cmc
or
dec
stos
sub
fisubrs
sbb
roll
mov
dec
sbb
mov
or
xchg
scas
mov
test
mov
ja
jnp
rcrb
cltd
shll
push
sbb
dec
sbb
xor
cs
subb
mov
cmp
outsl
insb
cli
andb
mov
in
mov
ja
loop
popl
push
mov
aam
mov
cmp
fdecstp
xor
shlb
frstor
push
sub
mov
in
imul
dec
push
lds
addr16
out
ret
pop
imulb
iret
popa
inc
pushf
cwtl
pop
orl
decl
xor
out
ljmp
lods
xchg
cwtl
inc
add
inc
or
mov
xlat
enter
fists
push
call
mov
and
add
and
add
shl
and
push
mov
imul
andb
jmp
mov
divl
repnz
into
leave
nop
xchg
mov
bound
cmp
cltd
pop
lcall
mov
int
ss
shll
xor
pop
mov
jl
sbb
movl
cmp
nop
jmp
es
mov
inc
cmp
xchg
fdivp
jl
je
xor
mov
call
rclb
push
leave
push
adc
outsb
xchg
scas
flds
mov
cmpb
inc
and
dec
hlt
aas
xor
cmpsb
insb
inc
mov
dec
mov
inc
lahf
adc
sarb
jbe
outsb
aas
xor
lret
mov
push
mov
xor
insb
inc
ret
sbb
sbb
pop
jmp
and
outsb
cmp
shll
sbb
sub
cwtl
jecxz
data16
fisubl
xor
mov
jo
fistpll
xor
cld
add
jae
xchg
fwait
and
cmpsl
sub
xchg
mov
popf
test
repz
lahf
push
add
cwtl
ja
cltd
insl
sbb
mov
iret
fwait
cmc
mov
pop
mulb
pop
xchg
int3
mov
cltd
mov
xchg
cmp
loope
push
mov
rcll
jnp
mov
add
nop
adc
mov
sbb
and
adc
jg
and
mov
xor
add
mov
fwait
jmp
push
push
and
push
push
add
sbb
sbb
sub
mov
lahf
imul
xchg
push
push
or
popa
scas
hlt
mov
aam
outsl
sbb
test
fadds
cmc
cld
jae
arpl
sbb
loope
dec
mov
jl
fsub
xor
push
lret
lcall
dec
imul
fdivl
xchg
sbb
shrl
push
rolb
lcall
sbb
inc
rcrb
enter
call
fisttps
mov
push
push
add
jmp
xor
lcall
dec
mov
mov
and
push
and
pop
jb
xchg
aas
imulb
into
cmp
mov
cmc
sub
subl
arpl
notl
lock
inc
in
xchg
mov
fsubs
enter
movl
out
sbb
adc
movsl
jno
outsl
mov
aam
push
lods
dec
data16
cmpb
shll
popl
imul
or
or
js
fists
xor
cmpsb
jge
mov
sbb
lea
arpl
mov
and
xchg
pop
mov
sti
cmp
xlat
cmp
test
aam
das
sarb
sbb
fsubs
sub
ret
dec
mov
push
jle
bound
stos
test
repz
shlb
cli
add
mov
pop
rol
cmp
push
js
cmc
add
push
xchg
fcomps
inc
clc
pop
test
sti
rclb
push
repz
sub
shl
stc
jbe
sub
inc
inc
xor
bnd
fdivrs
loope
out
repnz
and
sti
or
cwtl
mov
popa
adc
lea
lcall
mov
lds
test
gs
lea
addb
or
movl
sbbl
icebp
xor
lock
sub
sbb
mov
xor
cmp
int3
and
into
ss
jecxz
xchg
cwtl
sbb
mov
mov
mov
mov
call
in
push
mov
gs
out
push
fisttps
movsb
mov
fisubl
and
jge
xlat
rcr
gs
sbb
into
mov
jns
sbb
shlb
cs
adc
ret
fnstcw
lret
je
roll
fdivl
sbb
scas
pusha
xchg
inc
ret
inc
repz
jp
mov
mov
xchg
or
sub
loop
jno
movsl
mov
shlb
add
sahf
int
shll
movsb
je
fwait
enter
xor
push
lret
cmpsb
jmp
repnz
xor
out
mov
or
jle
jmp
lret
fidivrl
mov
push
lock
lea
jo
and
ficomps
xchg
sub
testl
add
iret
mov
arpl
movsb
mov
fwait
xchg
push
stc
pop
cmp
testl
cmp
sub
xlat
repz
pop
cli
scas
adc
call
shrl
xor
aas
loopne
push
sub
test
mov
cld
mov
int
lods
xor
jecxz
mov
cmp
sub
test
ss
add
movsb
lahf
jo
or
sub
add
movsb
hlt
sbb
pushf
ds
fimull
and
push
out
shrb
jmp
push
dec
xor
clc
arpl
iret
mov
test
xor
and
lcall
xorb
and
iret
iret
dec
lcall
aam
mov
mov
in
mov
int3
in
push
scas
int3
subb
mov
pop
sub
mov
repnz
sar
add
or
pop
adc
mov
lds
inc
in
inc
fldt
adc
push
insb
repz
imul
lods
cld
dec
cmp
fistl
scas
lds
cmp
cs
and
sub
jnp
jo
fimull
add
loop
icebp
mov
mov
inc
mov
jmp
fucomip
sub
stos
push
movsb
mov
fnstenv
jle
int
inc
mov
mov
jae
enter
push
mov
mov
pop
xchg
aas
subl
jecxz
and
xchg
fimuls
faddl
jns
pop
adc
jbe
lret
imul
jae
jne
mov
fsubr
loopne
jg
stos
add
lea
sbb
cmpsl
mov
in
loope
mov
out
pushf
int3
das
popa
lods
setae
jno
out
shlb
sbb
xchg
xchg
pop
push
push
jo
cmpsl
icebp
lret
cld
xchg
call
pop
loopne
arpl
dec
or
adc
lock
cwtl
and
in
cli
clc
or
add
enter
jb
lds
scas
push
push
sub
or
dec
mov
inc
jp
jecxz
sub
lahf
daa
je
sub
notl
adcb
mov
lcall
cmp
pop
xor
out
and
mov
in
adc
xor
sub
ret
xor
or
xchg
es
orl
dec
call
xchg
repnz
xor
mov
or
push
and
lahf
imul
mov
sbb
in
dec
cmp
sub
jmp
lds
ret
bound
mov
int3
pop
stos
fldenv
rcrb
int3
icebp
aas
cli
or
push
fisttpll
fdivrs
cltd
sbb
sahf
or
imul
sub
sub
pop
mov
add
rorb
push
scas
sahf
mov
out
mov
adc
paddq
and
test
jp
cli
xor
rolb
push
daa
lock
mov
cmp
jne
inc
fbld
outsb
sub
add
fdivl
insw
icebp
push
cmpsl
pop
scas
add
call
ljmp
ds
cs
mov
dec
push
test
mov
xor
mov
mov
je
add
and
test
ret
add
add
push
mov
pop
repz
xchg
adc
fsts
ljmp
sbb
cmp
fdivrl
xchg
add
xchg
push
bound
imul
adc
ds
and
scas
mov
in
pop
gs
pop
imul
xchg
push
addr16
ficompl
or
out
inc
add
pop
mov
js
js
aad
push
mov
add
mov
movsb
pop
push
xchg
inc
xor
jp
add
sbb
cmpb
lods
fists
movsl
dec
or
loop
jl
ja
fld
mov
add
dec
adc
dec
filds
lock
ja
and
imull
cmp
bound
out
mov
xor
push
in
mov
lret
test
xor
push
sub
adc
incl
or
test
inc
add
shr
dec
and
xor
ds
gs
adc
shlb
xchg
shl
push
loop
sbb
stos
push
cmp
shlb
ljmp
enter
mov
shl
sbb
jno
adc
test
inc
outsb
outsb
into
outsb
sahf
mov
outsb
adc
mov
imul
popf
jns
in
xor
sbb
icebp
ficomps
imul
rcrb
jae
sbb
sub
add
or
and
jne
loopne
in
mov
cmp
jp
sub
shll
mul
cmpb
xor
dec
sub
mov
adc
daa
imul
inc
or
pusha
mov
cmpsb
jae
sub
sbb
pop
xor
xchg
add
adc
inc
or
dec
sub
adc
push
xor
in
or
sahf
or
rorb
mov
ja
xor
adc
test
dec
mov
jb
ror
fidivrs
pop
mov
sbb
and
js
hlt
adc
pusha
push
nop
shll
hlt
add
cmp
shlb
push
fidivrs
sti
sti
cmp
int3
or
mov
pop
jnp
movsb
inc
sub
arpl
adc
mov
shl
xchg
cmpsl
outsb
imul
jg
scas
mov
sbb
fstpt
and
jns,pn
add
push
js
fwait
add
in
pop
inc
adc
in
nop
ds
mov
in
or
mov
jae
xor
mov
xor
dec
lahf
push
mov
jp
cmpsl
push
xlat
stos
enter
mov
jl
xchg
nop
pop
js
pushf
or
adc
shll
data16
cmpsl
mov
test
jns
sub
fnsave
cmpl
ret
mov
mov
sub
imull
or
into
sbb
pop
add
ja
fcmovnu
push
subb
inc
jge
insb
jg
ljmp
mov
iret
sbb
sbb
inc
dec
fists
sub
inc
sbb
mov
int
jne
mov
xchg
mov
pop
xor
repnz
sbb
jmp
xor
popf
mov
adc
sbb
jg
pop
xchg
jge
int3
mov
push
adc
jae
add
in
mov
in
or
xlat
loopne
adc
movsb
jg
push
mov
out
mov
dec
lahf
cmp
jl
shll
imul
xchg
mov
push
lcall
mov
scas
mov
leave
jns
mov
jle
mov
adcl
add
jecxz
clc
xchg
mov
call
inc
ret
out
jnp,pt
push
popa
adc
fstps
cmp
mov
pop
inc
ss
mov
jae
imulb
pop
mov
movsl
pop
mov
inc
inc
adc
in
add
mov
notb
mov
mov
xor
popa
or
loopne
adcl
pop
fiadds
enter
js,pn
std
mov
stc
adc
mov
xor
jmp
dec
fsubr
rorl
xorb
push
dec
jmp
and
xor
mov
pop
mov
jb
popa
call
push
out
jp
sbb
or
call
cmp
out
cwtl
add
faddl
pushl
cli
dec
push
das
sbb
mov
outsl
sub
mov
and
jl
es
mov
pop
jb
xchg
cmpb
imul
xor
jl
test
mov
push
mov
popa
leave
xchg
add
jl
mov
mov
fadd
int3
sarb
sub
sbb
or
jl
insb
jo
inc
dec
push
mov
orb
ror
cmp
sub
sbb
or
jl
insb
jo
inc
dec
push
mov
orb
ror
cmp
add
jo
inc
dec
push
mov
orb
rorb
rcrl
or
in
movsb
mov
loop
sarb
sub
jge
sub
aaa
pop
bound
xor
bound
adc
add
in
loop
loop
ret
pop
mov
inc
js
bound
repnz
adc
add
jmp
sti
lret
ficompl
insb
mov
pop
jb
imul
popa
mov
sbbb
sahf
outsl
lods
dec
mov
jnp
mov
lcall
add
rcrb
or
iret
rorb
shll
pop
bound
popf
jo
inc
dec
cld
mov
jne
ja
mov
fwait
gs
cld
mov
mov
mov
pushf
add
xor
sub
sbb
or
cmp
xchg
dec
mov
jp
and
sbb
insb
push
inc
push
lods
mov
jno
push
add
nop
adc
sbb
shl
outsl
bound
mov
popf
fildl
inc
pop
cwtl
mov
fstps
jecxz
repz
dec
dec
cld
movlps
mov
iret
popf
fsubrl
mov
mov
adc
xchg
nop
loop
rorb
sub
pop
mov
imul
sub
cmp
adc
sbb
sbbl
inc
stc
iret
and
fbld
and
sub
pop
fwait
inc
mov
repnz
loop
mov
rolb
int3
push
adc
stc
pop
out
aaa
pushf
push
xchg
push
int3
bound
shr
mov
ret
adc
insb
jb
bound
fsubl
int3
adc
add
repnz
or
cmp
sub
pop
mov
insb
jb
bound
fsubl
int3
adc
add
repnz
pop
mov
ret
mov
aad
push
pop
rcll
imulb
xchg
ja
movsb
scas
insl
jp
andb
mov
adc
push
mov
mov
clc
cmpsb
pop
cmp
jne
lret
loopne
jl
fcoms
pop
shl
call
mov
outsb
adc
lcall
sahf
push
scas
dec
xchg
sbb
xor
fnstsw
xchg
mov
sub
jne
outsb
and
adc
js
scas
dec
sbb
test
scas
mov
loope
outsl
push
jecxz
sbb
dec
xor
imul
stos
inc
clc
and
jne
popf
add
push
ds
mov
push
fistl
sbb
movsl
mov
cmpsl
sbb
sub
jbe
mov
jmp
jo
xchg
mov
test
lock
cmp
xchg
push
push
insl
mov
repnz
xorb
pop
mov
gs
adc
in
jmp
test
lahf
pushf
mov
inc
ror
stos
cltd
push
js
mov
aam
imul
inc
cmp
out
negl
int3
sub
ds
das
bound
cpuid
push
lods
and
insl
das
ret
push
stos
push
or
movsl
jg
or
pop
sub
daa
inc
stos
sub
dec
popa
add
push
inc
sub
cmpsl
clc
pusha
jge
push
outsl
mov
lahf
inc
dec
cmp
cwtl
loopne
mov
in
mov
push
aad
sub
push
fs
out
push
aaa
lds
lods
icebp
in
mov
in
gs
test
std
mov
inc
aas
scas
xlat
fcmovb
cltd
insl
loop
stc
faddp
mov
int
clc
rclb
repz
mov
xor
jmp
fwait
les
subl
ja
push
not
ds
or
lahf
or
cmpl
in
imull
int
xor
cmp
push
adc
cmp
pushf
sbb
adc
mov
push
into
sbb
and
leave
sbb
push
adc
cli
add
lret
inc
or
lds
lods
insl
insb
dec
movsl
jmp
sub
gs
mov
jnp
pop
jecxz
andl
pop
xchg
shr
gs
imul
ja
mov
add
les
mov
hlt
inc
mov
jbe
out
xlat
xor
jle
dec
xchg
inc
repnz
test
mov
scas
and
test
and
xchg
call
dec
dec
jl
clc
divb
and
push
ss
pop
idivl
jecxz
adc
pushf
sar
lret
or
cmpsb
dec
and
imul
jl
xchg
mov
fistl
cli
fs
fnstenv
stos
daa
and
inc
imul
pushf
sbb
mov
clc
inc
gs
movsb
loop
push
ds
cs
mov
lcall
rcl
add
mov
sbb
pop
sbb
pop
xchg
jae
outsl
gs
popf
clc
int3
or
in
or
cmp
cmp
jl
and
ds
pop
jg
daa
je
mov
xchg
in
inc
hlt
mov
out
ljmp
inc
xor
and
fmul
xchg
push
jl
call
icebp
mov
repz
jl
addb
pop
sbb
fndisi(8087
shrl
je
call
pop
bound
fdivrl
dec
aad
jbe
sbb
pop
or
xchg
lods
jns
mov
shlb
xchg
dec
push
mov
jmp
bound
stos
or
rcll
lods
or
repz
sub
inc
movsl
add
pop
mov
mov
cmpsb
mov
imul
mov
test
ret
cmp
adc
rcll
ret
ja
pop
out
mov
xchg
dec
dec
and
push
nop
or
sbb
dec
in
mov
xchg
xor
dec
mov
xorb
dec
push
fidivs
pusha
push
mov
push
fwait
sbb
scas
clc
mov
clc
and
fnstenv
pop
mov
lods
dec
xor
xor
xchg
out
lahf
iret
dec
mov
lds
inc
pushf
add
adcl
shll
cld
mov
xchg
ljmp
xor
cltd
mov
sbb
cmp
out
insb
and
pop
adc
mov
add
stc
repnz
shr
ss
outsb
es
or
dec
jno
and
movsl
into
lahf
add
nop
jp
push
popf
mov
xchg
push
cli
rcrb
fsubl
mov
mov
push
movsl
cmp
xor
mov
inc
pop
fstpl
cwtl
sub
dec
xchg
sahf
fsubl
push
pop
aam
mov
in
cmp
movsl
arpl
lock
pusha
adc
outsb
add
cmp
adc
jle
mov
out
mov
or
loop
adc
rorb
arpl
popa
mov
pop
sub
out
pop
mov
jle
js
roll
and
jae
mov
mov
sub
cli
cwtl
xchg
cli
out
add
ja
adc
jnp
jmp
rclb
mov
outsb
sahf
jnp
mov
jmp
mov
or
adc
sub
lods
mov
popl
xlat
push
je
fcoml
cmpsl
xchg
xor
jle
imul
add
aad
outsb
jge,pn
das
dec
mov
nop
scas
sub
in
and
fidivrl
std
out
jo
in
and
cmp
loop
sahf
cli
test
iret
push
mov
mov
sub
sarb
sub
stc
jb
je
lock
push
pop
push
imul
pop
dec
jp
and
dec
sbb
iret
xchg
xor
sahf
push
mov
insl
les
repnz
mulb
pop
xchg
dec
and
push
jmp
mov
and
adc
daa
aaa
push
jb
fldt
pop
test
icebp
popf
push
sbbl
and
mov
mov
push
mov
pop
pushf
stc
into
ljmp
aaa
mov
mov
lock
jns
sub
dec
dec
xor
xor
adc
lret
sti
shufps
mov
pop
pop
sbb
int
pushf
mov
mov
jle
jge
scas
lods
xchg
inc
mov
cmp
dec
and
cmp
jne
jp
lds
mov
xorb
push
cmpsl
push
sbb
xchg
fimuls
lock
jne
out
add
repz
dec
add
nop
fldt
cmpsl
mov
scas
hlt
mov
rcll
addr16
mov
adc
fdivrs
lahf
add
xchg
adc
or
adc
add
test
push
orb
insb
inc
mov
in
mov
lcall
xor
test
cltd
pop
rcr
popf
aas
lea
inc
mov
pop
cmpsb
cli
push
add
out
cmp
mov
sbb
inc
add
dec
mov
cli
mov
lea
mov
add
sub
pop
movsl
adc
pop
mov
js
out
pushf
xor
push
rcr
jno
leave
enter
arpl
icebp
jbe
sbb
imul
mov
std
das
das
inc
and
fwait
inc
mov
xor
int
sub
cmp
mov
mov
ds
fs
js
mov
stos
add
or
and
xchg
mov
fmull
inc
xchg
ret
lock
jle
call
pop
pop
add
js
cmp
add
sahf
lds
cwtl
hlt
pop
mov
cmp
je
and
in
mov
lahf
nop
loop
sbb
cmp
cli
sarl
mov
call
ljmp
pusha
sub
divb
lods
push
dec
cmp
aam
ret
scas
dec
cmp
push
ss
pop
vcvtps2dq
push
mov
xlat
mov
int
iret
int
fcom
add
lds
mov
mov
and
imul
cld
fists
push
mov
or
nop
andb
xor
and
std
and
sub
les
loopne
aam
adc
jp
out
push
pop
scas
gs
stos
nop
incb
movsb
and
cs
fsubr
pop
jle
ss
out
push
sub
mov
push
aad
incb
dec
cmp
mov
call
fisttpl
sbbb
xor
xorl
xlat
pop
sbb
cmpsl
adc
popa
repnz
movsl
daa
mov
out
push
lods
mov
pop
or
mov
loopne
insb
adc
mov
push
icebp
jns
or
push
hlt
push
rolb
cmp
mov
lea
les
cld
aas
cmpsl
inc
xchg
mov
ja
dec
addl
cmp
sbbl
scas
or
jnp
leave
pop
mov
sbbb
or
push
shlb
pop
jae
femms
imul
xchg
inc
xor
and
stos
data16
scas
dec
push
shll
int3
cli
mov
add
cmpsl
add
xchg
push
add
adc
jge
repnz
xor
xchg
mov
pop
aas
dec
mov
xchg
push
sti
inc
push
dec
inc
cmp
into
or
and
adc
dec
mov
pop
psubb
adc
pop
dec
cmp
inc
pop
sbbb
jb
cmpsl
mov
loope
mov
rcrb
popf
cmp
push
lock
std
aaa
rolb
insl
sub
jbe
arpl
es
and
xchg
jb
and
icebp
push
and
sbb
scas
xor
inc
aam
int3
pop
cs
add
and
dec
cmpsl
shrl
xlat
push
adc
repnz
dec
add
or
gs
test
into
mov
cltd
subb
xorl
jg
inc
or
inc
cmp
xor
ja
jae
mov
push
mov
pop
mov
inc
sahf
scas
cmp
test
sub
scas
repnz
hlt
clc
cmc
sbb
in
arpl
push
call
mov
addr16
sub
inc
test
shlb
xor
iret
das
mov
loopne
jbe
in
stos
and
lret
out
dec
mov
movsb
in
test
int3
stos
bnd
xchg
or
ss
sbb
lea
lret
dec
daa
sbb
out
xchg
pop
jecxz
cmp
lock
lods
test
fwait
out
icebp
hlt
scas
shlb
imul
lods
and
stos
pop
mov
iret
mov
mov
and
mov
add
aas
in
les
add
mov
adc
xchg
xchg
mov
push
add
sysret
leave
xchg
sbbl
xor
mov
xchg
aaa
adc
and
test
pop
dec
pop
dec
cmp
sub
add
or
ja
in
rcrb
test
xchg
mov
sub
orb
lcall
call
sub
shrb
sub
jne
cmpsb
cltd
inc
adcb
inc
std
dec
jmp
lods
arpl
mov
insl
test
out
push
ror
xor
ret
cvtdq2ps
cmc
ja
mov
dec
mul
xchg
mov
mov
adc
stc
cmpsl
push
das
leave
aad
ret
jp
or
mov
and
out
rcrl
push
scas
cli
js
hlt
imul
sub
popf
pushw
loope
jmp
dec
loopne
sub
inc
jge
jecxz
pushf
pop
and
mov
xchg
or
pushf
pusha
mov
mov
mov
out
jno
dec
fcmovnu
insb
fs
popa
sti
ret
and
mov
push
loope
stc
xchg
mov
mov
adc
popa
lret
mulb
sub
je
mov
pop
in
push
mov
sbb
std
cmpsb
mov
push
mov
inc
dec
push
dec
repnz
sbb
aam
and
cs
in
inc
push
das
adc
iret
lock
and
adc
enter
push
rcll
ret
xchg
dec
mov
xchg
pop
inc
inc
add
or
push
sbb
inc
pushf
adc
loopne
xor
mov
rcll
mov
decl
aaa
pop
adc
fwait
in
out
cwtl
aam
outsb
cmpb
dec
pop
xchg
xchg
fmull
lds
dec
or
clc
cmpl
xchg
sub
es
shrb
xor
mov
jo
mov
cltd
pop
jno
in
pop
scas
out
cmc
mov
adc
nop
xchg
out
push
pop
aas
ret
jp
jb
into
aad
mov
dec
fisttps
shlb
rcrl
xor
int
cld
push
imul
mov
xor
test
fwait
mov
inc
bound
dec
push
inc
xchg
sbb
lahf
xor
mov
ret
mov
gs
fimull
icebp
cli
inc
and
das
out
sub
inc
adc
mov
pop
int3
out
mov
sbb
add
cmp
xchg
mov
push
aas
jmp
cmp
pop
sbb
rorb
mov
and
mov
cld
jge
jmp
mov
shl
cwtl
in
and
push
jmp
jae
loope
shrb
mov
ss
lock
bound
movsl
xchg
pop
int3
jno
lahf
inc
notb
das
push
mov
addl
ret
pop
push
mov
mov
outsb
lds
adc
test
pop
jmp
or
cli
jnp
stos
rcrb
ret
xchg
and
popa
out
in
sbb
inc
ret
loop
aam
jne
flds
and
push
adc
jmp
mov
jmp
mov
sahf
mov
xchg
out
int
notb
push
xor
mov
cld
sub
std
rclb
or
inc
add
ret
push
push
sbb
xchg
cltd
xchg
xor
fwait
mov
mov
cmp
inc
outsl
nop
mov
mov
shl
test
mov
lea
add
jl
lock
rcll
ja
loopne
or
nop
pop
inc
orl
fists
add
pop
cwtl
lds
mov
inc
or
mov
divb
xor
or
orl
mov
mov
mov
inc
pop
pop
sti
add
ret
stos
dec
xorl
xlat
bound
scas
out
cld
fs
and
lock
int
lahf
inc
xchg
cmp
push
xor
xor
stos
jge
push
bound
fbstp
xchg
fisubrl
xchg
fldl
out
sbbl
xor
mov
fmuls
in
pop
out
aad
aad
or
iret
lret
fsub
mov
test
leave
sahf
mov
lock
and
cmp
fs
sub
or
icebp
inc
outsl
dec
mov
fdivr
xor
stc
push
jae
and
dec
shrl
sbb
jle
sub
and
push
sub
jl
dec
lods
lock
out
sub
lahf
pop
ss
mov
add
cmpsl
scas
dec
into
mov
data16
adc
mov
cmp
cmp
pop
xor
fmuls
iret
pop
test
insl
xor
mov
sub
scas
add
call
and
js
mov
sbb
scas
and
inc
out
cmpsl
inc
jb
cmp
cmp
lds
or
sub
pop
mov
xchg
int
xlat
cwtl
mov
dec
imul
gs
lahf
and
pop
or
or
addr16
aam
imul
lret
cmpsb
notl
xchg
jbe
sbb
and
mov
pop
xchg
adc
imul
fistps
subl
mov
sub
int3
lods
sub
push
and
pop
repnz
jecxz
enter
pop
orb
daa
rclb
loope
not
push
test
add
xchg
fists
xchg
xacquire
pop
pop
pop
pusha
ret
cltd
jno
inc
dec
ljmp
les
jno
xor
fcomps
div
cmpl
inc
addl
inc
xchg
bound
imul
fstpt
push
jmp
mov
dec
cmc
pop
call
cmpsb
and
int3
sbb
add
mov
mov
es
sub
inc
out
fisubl
mov
ljmp
push
jmp
sbb
sub
in
add
leave
mov
std
pop
jne
in
pop
xchg
mov
insl
leave
mov
pusha
ljmp
or
push
call
das
mov
inc
rolb
add
cld
sub
mov
or
sarb
ret
in
subb
adc
push
jle
mov
jne
repz
add
orl
jmp
out
jae
mov
mov
imul
iret
mov
aaa
fxch
sbb
ret
test
dec
inc
mov
aad
xor
aad
jns
test
jecxz
push
add
pushf
scas
sbb
in
mov
pop
push
mov
scas
data16
dec
shrl
loop
pusha
cmp
xor
xor
sbb
adc
pop
xor
adc
loop
jb
sbb
xchg
bound
pop
je
mov
inc
mov
push
and
mov
pop
fcmovu
repz
rcr
sbb
inc
xlat
jne
lods
push
xor
dec
daa
imul
arpl
fistpl
jle
dec
idiv
or
jmp
fistpl
popf
das
mov
mov
mov
cmpsb
in
inc
adc
lock
mov
mov
mov
loopne
sti
je
jecxz
fwait
and
jge
test
lahf
shll
out
push
dec
mov
cwtl
repz
ja
test
lcall
sbb
pop
pop
or
jl
cmpsb
lcall
and
dec
negl
inc
lods
jns
push
mov
imul
js
and
inc
xlat
arpl
dec
aam
mov
push
movsl
push
push
push
cmpsb
mov
mov
out
fsubrs
or
and
sti
hlt
sub
ret
stc
call
xchg
mov
xchg
repz
mov
arpl
mov
or
xor
xchg
jl
stos
adc
mov
stc
add
icebp
mov
je
dec
inc
mov
gs
sub
popf
std
leave
test
test
sahf
daa
adc
test
push
test
dec
in
mov
mov
icebp
xlat
jbe
imul
outsb
dec
out
adc
jae
sahf
ds
hlt
int3
cmp
hlt
or
jmp
lods
inc
sub
xchg
inc
fwait
and
mov
and
notb
in
push
dec
jno
adc
loop
pop
and
and
adc
nop
shrb
xchg
dec
push
daa
es
mov
aam
push
cmp
mov
outsl
cmpsl
fnstcw
lcall
or
std
mov
mov
inc
sbb
add
andb
imul
filds
xchg
jp
add
stos
inc
fbld
mov
adc
push
pop
dec
imul
xlat
dec
jecxz
nop
pop
mov
jge
lds
call
mov
sti
mov
fidivrl
xchg
sub
xchg
inc
xor
aas
cmp
adc
test
fs
out
jle
cmp
aad
ret
sbb
sahf
xor
lret
insl
add
add
lcall
or
pop
mov
cltd
push
out
pop
push
mov
or
rcl
inc
jo
sbb
stos
test
sub
add
cmp
lret
faddl
push
enter
shll
imul
dec
cli
push
mov
es
adc
iret
mov
inc
sub
mov
xor
aam
cwtl
cwtl
cmpsl
sti
sarb
xchg
scas
inc
mov
aad
in
jecxz
mov
or
pop
rolb
xchg
jns
out
cmc
and
in
incl
fxch
mov
add
or
aad
stos
pop
mov
and
jmp
loope
pushf
cmp
mov
out
inc
push
pusha
jno
mov
mov
push
jmp
outsl
dec
fists
in
movsb
sbbl
rcrb
ret
icebp
xchg
lahf
cwtl
mov
repnz
jno
loop
iret
jnp
jge
sbb
out
fidivl
sarb
add
dec
pop
pop
ja
push
test
or
test
adc
imul
xlat
test
add
aam
add
mov
jmp
loopne
pop
jo
fadds
fistps
movsb
push
icebp
lods
mov
mov
lahf
repnz
pop
inc
repnz
xchg
fwait
hlt
mov
xor
push
sub
add
ret
cmp
xor
adc
fcomps
out
sbb
xchg
fiaddl
inc
int3
jmp
xchg
mov
mov
hlt
jne
jae
xchg
xchg
scas
pop
adc
mov
test
std
icebp
outsb
and
push
jmp
or
xchg
ficomps
or
mov
cmp
cmpsb
and
sbb
and
test
test
into
add
sbb
xchg
mulb
out
sbb
outsl
pop
sbb
je
std
movsb
mov
mov
test
jns
cmp
fs
xor
ja
add
sub
int
xchg
int3
roll
lds
inc
or
loop
mov
ds
push
push
push
xchg
pop
mov
mov
aaa
jbe
or
cmp
sub
pop
mov
insb
jb
bound
fsubl
int3
adc
add
repnz
or
cmp
sub
pop
mov
insb
jb
bound
fsubl
int3
adc
add
repnz
add
and
sub
js
insb
jb
bound
xor
es
adc
xor
xabort
call
mov
mov
lods
lea
es
mov
stos
mov
test
xchg
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lods
repz
mov
cli
mov
sub
lods
inc
adc
or
add
add
add
add
add
push
add
add
add
faddl
mov
mov
insb
add
int
int3
add
add
push
add
pop
add
ret
add
add
cmp
insb
add
add
add
cmp
arpl
xchg
add
dec
add
call
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
int3
add
add
add
add
add
add
add
cmp
add
clc
add
add
add
add
jg
push
cmp
cmp
sub
adc
push
add
dec
add
add
sahf
add
add
adc
add
pop
add
add
add
test
clc
add
add
add
add
add
call
add
add
add
add
add
add
ret
add
add
dec
add
add
addb
add
data16
add
add
add
add
add
add
xchg
add
add
add
cmp
add
add
add
jecxz
clc
add
incb
test
and
xchg
add
inc
add
add
add
add
add
xchg
add
add
add
pop
add
add
inc
add
in
add
add
add
mov
iret
add
add
add
imul
adc
add
mov
pop
add
lea
cmp
add
in
add
add
add
add
pop
add
add
jne
gs
add
add
add
add
cmp
insl
add
ret
add
add
inc
add
add
add
add
faddl
arpl
push
add
and
add
add
add
add
add
add
add
add
pop
add
add
sbb
leave
add
add
add
add
add
jns
mov
add
add
add
xchg
add
les
sub
mov
pop
add
add
push
add
add
push
add
add
xchg
add
add
add
jecxz
cmp
add
add
add
faddl
or
ret
add
add
add
add
add
cmp
clc
add
add
add
add
dec
add
ret
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
roll
add
add
add
add
insl
add
add
add
add
iret
add
xor
add
add
add
add
add
add
add
add
add
mov
add
add
sub
add
add
incb
je
cmp
jae
pop
add
add
add
push
add
loope
and
add
add
lcall
add
add
jae
pop
add
add
test
add
add
add
add
add
les
imul
add
push
add
add
add
add
add
dec
add
add
or
mov
dec
add
add
add
add
jns
xor
adc
test
lods
mov
xchg
outsl
ficompl
and
add
push
js
mov
mov
cld
std
and
cmpsb
cs
sarb
jp
fcoms
adc
repnz
xor
test
xchg
ljmp
or
sbb
jns
mov
das
add
pop
dec
aas
jle
mov
inc
or
mov
fs
jp
mov
scas
dec
cmp
mov
sahf
mov
sbb
movsl
and
mov
fldcw
ss
sbb
bswap
lea
inc
jb
xor
jmp
sub
fidivrs
add
aad
or
ja
fmuls
inc
les
std
jo
adc
and
dec
test
ret
push
in
sub
cltd
mov
adc
and
mov
mov
ljmp
rcrl
xchg
xor
rcrl
pop
xchg
push
mov
into
rcrl
addr16
xor
jne
dec
mov
jae
in
mov
mov
xchg
pop
inc
or
mov
mov
sti
test
shlb
popf
mov
ja
push
fistpl
inc
ret
cli
test
mov
jecxz
lods
lret
xchg
cs
ret
arpl
ja
lahf
pop
cltd
dec
out
sbb
es
outsl
sub
mov
pop
out
mov
mov
ret
jmp
mov
mov
sub
mov
cmp
pop
pop
add
xor
out
adc
and
sub
push
shll
repnz
sbb
outsl
mov
mov
test
pusha
in
orl
inc
jns
mov
sbb
xor
in
push
hlt
mov
or
fldcw
or
cmpb
aam
pushf
mov
lret
cmp
mov
pop
jmp
test
mov
jl
out
jg
mov
fcmovnu
mov
popa
push
cmpsl
sbb
sub
sbb
adc
or
aaa
mov
leave
or
adc
jl
pop
jne
dec
shrb
rorl
outsl
xor
mov
adc
xchg
xor
lea
xchg
lahf
xor
gs
cwtl
xlat
stos
inc
jnp
in
jmp
xor
hlt
insl
xor
add
out
int3
push
inc
outsb
lds
pop
mov
fists
je
cmp
cld
repz
out
jae
lods
cmp
add
pop
adc
adc
push
jmp
fcompl
sub
lods
xchg
popa
cmp
scas
jae,pt
das
jmp
sbb
mov
iret
cwtl
fnstenv
mov
xchg
mov
inc
xor
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
