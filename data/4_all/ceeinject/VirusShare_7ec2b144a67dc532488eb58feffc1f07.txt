call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
scas
lahf
into
fsubp
scas
pushf
sahf
jmp
mov
je
dec
das
pop
jg
das
aas
pop
push
dec
push
test
scas
scas
into
fdivrp
scas
out
mov
xor
dec
int
jg
outsb
ds
push
dec
push
cmpsb
out
mov
xchg
xchg
fsubp
scas
idivb
aas
outsb
and
jae
jnp
push
push
es
popf
loope
notl
push
in
lea
fwait
in
xlat
adc
jecxz
or
inc
fidivrl
movsb
lahf
push
cmp
push
adc
jle
and
cmp
mov
dec
xor
scas
ds
sbb
sbb
push
xlat
pop
cmp
dec
lock
cmc
orl
jg
add
fisubrl
iret
jle
xchg
inc
sbbl
ds
pop
jnp
push
pop
cs
add
xor
shrl
sahf
aaa
xchg
shrb
mov
pop
aad
outsb
shlb
pop
mov
call
inc
loope
xor
shrb
loopne
push
mov
mov
out
scas
lahf
into
cwtl
fsubrp
scas
cmc
mov
outsb
aaa
jle
dec
push
pop
addr16
pop
push
push
pop
int3
out
lret
jmp
fwait
jmp
mov
insl
sbb
or
jl
jnp
subb
mov
cmp
cmp
sub
sbb
test
imul
scas
popf
lods
cli
stos
cmpsb
xchg
sahf
aas
outsb
das
jle
dec
divps
outsl
ds
push
dec
push
mov
into
fdivrp
scas
out
mov
aas
outsb
das
jle
dec
divps
outsl
ds
push
dec
push
mov
mov
ret
cmp
adc
pusha
loope
cmp
push
mov
push
fisubs
pop
jmp
loope
xor
es
je
xchg
test
imull
loopne
stc
jecxz
inc
pop
ds
push
faddl
mov
add
mov
out
pop
jge
sub
aas
mov
add
fdivrl
inc
or
mov
mov
in
iret
adc
pop
xchg
cld
pop
push
jge
xlat
scas
or
jmp
subl
or
jp
jne
fs
loop
adc
sahf
cmpsl
cli
xorb
int
imul
pop
pop
cmp
lods
pop
jnp
jg
sub
and
aad
fiaddl
sbb
ja
out
mov
jmp
sbb
jae
xchg
mov
out
inc
ret
icebp
xchg
enter
pop
cmpsl
je
out
test
popa
or
cmp
mov
mov
inc
or
and
mov
rorl
dec
jo
rolb
jb
inc
sbb
push
and
mov
and
or
outsl
in
bound
shrb
sti
outsl
push
sbb
out
push
push
adc
adc
scas
jmp
rcrb
cmpsl
loope
sarb
hlt
mov
mov
test
fscale
cmp
mov
dec
xchg
jno
loop
inc
in
test
add
rorl
add
loop
loope
cmp
jecxz
push
hlt
fisubrs
stos
test
pop
les
inc
popf
ljmp
mov
push
icebp
inc
push
fidivs
stos
dec
aam
bound
ficoms
pop
orb
sub
push
jle
std
inc
xchg
push
sti
cmc
negl
jge
mov
mov
xchg
inc
movsb
inc
mov
aas
out
pop
and
adc
aaa
inc
notl
jg
xchg
sahf
xchg
aad
mov
stos
ds
inc
ret
adc
imul
dec
aaa
xor
push
fsubr
test
mov
jge
test
xor
xlat
into
jecxz
jo
or
test
sbb
nop
jecxz
mov
push
jbe
jnp
cmp
cmp
roll
push
ficomps
or
or
idivb
push
add
pop
repz
adc
adc
cltd
xchg
fstpt
ret
arpl
sbb
insb
rcl
adc
es
mov
jl
xor
or
loope
call
rcl
pop
cmp
sbb
imul
mov
xor
push
sahf
jbe
testl
xchg
adc
mov
jecxz
and
jp
sub
jecxz
mov
fmuls
popf
sub
nop
fcoms
cmp
mov
stos
rorl
sbb
push
loopne
hlt
mov
jp
dec
aam
aad
jmp
fldcw
cmpb
idiv
dec
mov
sti
lea
lea
ss
pop
loopne
push
push
subl
cmpsb
pushf
cmp
insb
mov
lret
push
es
imulb
xchg
jecxz
or
inc
in
push
imul
add
ret
aaa
jg
cli
xchg
lods
add
lods
repnz
mov
pop
pusha
add
shr
cmpsb
lret
xorb
in
or
mov
gs
int3
fs
inc
leave
cmp
gs
push
arpl
movsb
ficoms
cmp
loope
nop
bound
stos
push
stos
aad
xchg
jp
stc
insl
or
sbb
lret
cmp
pop
adc
addr16
push
jge
xchg
gs
cmp
jb
pop
repnz
bound
inc
jnp
icebp
xor
jno
icebp
jno
mov
in
dec
xor
jg
fldt
sti
mov
xor
and
scas
inc
push
inc
mov
out
cmpsl
inc
sbb
sub
or
cmp
jecxz
insb
push
xchg
repnz
test
dec
lock
mov
sbbl
dec
fcoms
in
out
int3
jge
add
inc
pop
testl
call
cwtl
mov
aas
addl
sub
stos
mov
call
jle
pop
arpl
xor
nop
movsb
jle
inc
add
out
mov
mov
cmp
lea
push
repnz
cld
jns
pop
mov
mov
das
aam
fstps
imul
hlt
scas
sub
mov
mov
out
icebp
out
test
jno
lods
mov
mov
in
repnz
jp
cmp
push
xor
add
inc
divb
ficompl
out
push
lock
push
ds
ja
push
push
testl
pop
addr16
xor
sahf
push
jno
call
xlat
mov
mov
pop
mov
popf
pop
xor
test
mov
xchg
lret
and
fsub
mov
add
pop
popf
pop
mov
pop
push
pop
js
jge
out
xor
notb
jo
test
adc
lds
push
xchg
enter
lods
xchg
xchg
xchg
pop
js
mov
mov
mov
sbb
mov
xor
pop
gs
je
das
add
loop
mov
jnp
aad
pop
xor
cmp
push
mov
cwtl
out
push
add
mov
push
or
enter
push
call
jp
or
jb
sbb
es
or
scas
loop
daa
das
xor
std
enter
cmp
xchg
jl
jno
jo
xchg
gs
mov
mov
cmp
lcall
popf
lock
nop
pusha
xor
cwtl
jb
sub
hlt
into
aas
jmp
in
test
xchg
jle
mov
sbb
aaa
sub
xor
pop
xor
add
iret
xchg
test
cmc
mov
sbb
ret
fistps
pop
cmp
addr16
scas
jbe
pop
dec
aaa
pop
push
ja
xor
dec
dec
addr16
sti
test
xchg
orl
sbb
popf
sub
test
sub
xor
nop
out
pop
and
scas
mov
fwait
pop
outsb
rorb
arpl
mov
hlt
fdivl
or
add
jnp
inc
jnp
enter
loop
cs
mov
out
inc
pop
sub
shll
pop
pusha
ljmp
push
in
adc
or
push
pop
movsl
das
mov
jno
or
dec
gs
cltd
mov
in
and
out
es
ds
jl
inc
cmp
insb
jge
pop
mov
rcrb
fstp
xor
insb
cmp
out
inc
mov
cmp
fcomps
push
pop
jmp
add
test
dec
push
fwait
mov
xchg
cltd
cld
push
bound
fldt
imul
scas
jge
jae
pop
std
mov
mov
jge
mov
dec
jbe
add
or
outsl
pop
test
mov
fildll
inc
aam
mov
jmp
and
jne
mov
fsubr
inc
mov
mov
push
sbb
add
scas
mov
call
mov
adc
lcall
aam
pop
scas
aad
or
xor
fstpl
popf
dec
sub
jno
mov
mov
decb
inc
cwtl
in
add
int3
int
call
and
cmp
gs
sbb
adc
aam
shrb
mov
push
aaa
jg
and
jp
lcall
sbbl
inc
and
gs
jp
ja
stos
push
lods
shll
xchg
jns
mov
or
xchg
jmp
out
out
js
xchg
mov
mov
mov
repnz
mov
addr16
xlat
push
fdivrp
ror
xor
cmp
mov
cmp
mov
jne
loop
sbb
aad
xor
movsb
xchg
out
jns
mov
sub
hlt
clc
cli
sub
add
sti
adc
fdivrl
mov
ljmp
pop
cmp
mov
dec
pop
sub
outsl
dec
jns
and
or
loope
cld
repz
lock
loope
xchg
mov
into
fisttpll
xlat
pop
js
sub
xchg
push
loop
fldenv
into
sub
jmp
xchg
notl
test
adc
mov
adc
sbb
dec
outsl
push
or
xlat
stos
out
sti
lahf
ret
xchg
aaa
xlat
sahf
ja
push
jmp
shlb
or
psubq
dec
adc
jb
xor
xchg
add
xor
repz
xor
push
xchg
loope
mov
orb
std
push
ret
movsb
jnp
call
into
std
hlt
imul
jno
adc
push
jo
and
mov
ret
inc
xchg
out
push
or
xorb
add
pop
or
add
sbb
cmp
xor
mov
fs
adc
aad
mov
shlb
mov
jnp
out
sub
hlt
shlb
cmp
adc
insb
pmulhw
add
mov
dec
test
fs
cmpsb
sub
cmpsl
int
int3
mov
insb
inc
cld
mov
mov
lods
xchg
push
addl
jp
aas
shll
dec
fs
loop
mov
or
out
push
ret
mov
cwtl
mov
insb
mov
xchg
ss
imul
inc
push
jecxz
or
jns
jle
mov
adc
add
cmp
push
mov
dec
adc
cmp
jl
xor
dec
push
int
js
scas
fwait
jecxz
cmpsl
add
cmp
cmovae
add
inc
mov
xchg
nop
inc
dec
mov
push
cmpsb
xor
pop
push
mov
xor
cmpsb
stc
mov
xchg
adc
aam
adc
push
icebp
push
out
jecxz
mov
clc
into
ret
dec
rcrl
mov
pop
dec
mov
in
leave
jge,pn
push
call
xchg
test
call
mov
sti
rolb
pushf
loopne
and
sbb
data16
sbb
push
inc
or
jne
dec
xlat
stos
adc
gs
cs
enter
add
or
in
add
repnz
div
mov
test
ljmp
iret
inc
test
test
mov
xorb
adc
adc
ds
mov
sti
outsl
popf
mov
dec
ljmp
pop
adc
cmp
push
add
inc
mov
pop
and
inc
jb
arpl
and
inc
aas
xor
movsl
push
orl
and
push
inc
lods
scas
xchg
hlt
inc
mov
scas
enter
bound
sbb
jl
adc
mov
idivl
shll
ret
aam
int3
xchg
jecxz
sbb
cmp
mov
mov
test
or
mov
or
or
xor
lds
ret
dec
daa
mov
inc
out
mov
call
aas
jmp
dec
outsl
push
mov
insl
imul
mov
mov
dec
mov
sub
fsubrs
mov
pushf
aas
ret
xor
and
lods
mov
inc
sub
sti
fdivr
mov
xchg
insb
jo
pop
or
in
push
cli
push
inc
jne
out
pop
push
adc
jle
jg
mov
in
push
push
daa
jmp
inc
xchg
jae
xor
xchg
cmp
pop
lcall
arpl
mov
mov
fiaddl
push
cmp
cltd
add
aaa
mov
sbb
stos
shll
pop
dec
jle
in
in
or
orb
sub
push
lock
aaa
or
fisttps
out
mov
and
js
addr16
pop
dec
int3
mov
pushl
jg
in
or
mov
leave
stc
out
enter
out
mov
cmp
cmpl
fwait
fwait
mov
sub
inc
ljmp
xchg
nop
cmpl
inc
cmpb
loopne
adc
fwait
push
mov
rol
xchg
push
out
xlat
sbb
mov
sub
pop
mov
cwtl
dec
insb
adc
dec
ja
dec
inc
jo
lods
add
cmp
jno
mov
js
test
out
ljmp
mov
les
add
push
test
fiaddl
sbb
bound
inc
push
inc
jp
cmp
mov
jae
out
push
lds
movsb
inc
or
cmpsl
aam
bound
lods
inc
gs
test
pop
bound
sbb
add
outsl
stos
scas
gs
adc
imul
xlat
jb
xchg
stos
lcall
cmp
test
popf
or
sahf
leave
frstor
testl
popl
pushf
add
jnp
lret
jno
dec
mov
add
lods
dec
dec
push
addr16
stos
xchg
add
or
adc
pusha
pop
into
movsl
shl
pop
int3
sub
mov
xlat
addb
push
inc
add
cs
rcrb
mov
adc
loop
jl
ror
outsl
rorl
xchg
clc
cli
sub
mov
cs
lcall
xchg
idivl
adc
dec
leave
aam
lret
jle
mov
mov
sahf
notl
pop
mov
fcoms
aas
or
jns
xchg
push
push
aam
repnz
scas
mov
mov
cwtl
mov
dec
scas
enter
mov
inc
cwtl
in
imull
pop
xchg
xchg
dec
lock
pop
mov
bound
xchg
jl
fmuls
jo
stc
in
adc
mov
adc
jmp
mov
push
popa
outsl
dec
dec
shl
ds
dec
loop
cmp
out
loope
cmp
mov
sbb
rclb
insb
jmp
arpl
aaa
lret
decb
jge
xchg
dec
in
mov
js
pop
ljmp
jmp
in
or
and
lds
mov
inc
and
add
mov
cs
lds
jbe
lods
jo
inc
adc
into
mov
and
das
loopne
fildl
xchg
mov
mov
gs
jg
cmp
adc
pop
sti
mov
and
es
xlat
aas
dec
stc
int3
cmc
dec
loop
loope
call
addr16
repz
jge
popa
and
push
addr16
xchg
or
inc
jb
mov
rorl
and
xchg
and
cmpsb
mov
outsb
push
sahf
lahf
jb
mov
insl
dec
insl
xchg
sub
aas
inc
add
out
lret
push
sbb
lret
roll
jl
cmpsb
in
add
mov
js
call
pop
outsb
scas
imul
jle
or
dec
mov
in
cs
mov
xchg
dec
add
leave
adc
mov
jecxz
xchg
stos
sub
add
pop
out
in
jno
cmp
mov
inc
mov
leave
ret
aaa
sbb
sets
jns
in
xchg
jl
adc
mull
adc
push
fs
cmpsl
jnp
pop
push
jge
into
add
and
sbb
xchg
push
lret
mov
movsb
and
pop
dec
mov
mov
out
jae
pop
movsl
gs
mov
repz
std
mov
das
sub
lods
xor
push
mov
shufps
sub
adc
cwtl
xchg
js
repnz
cmpsl
lock
sub
sbb
andb
adc
sbb
aaa
cli
jnp
and
xor
mov
jle
je
dec
pop
stos
les
xor
scas
mov
add
push
jge
xchg
adc
add
int
arpl
sub
jg
pop
or
or
mov
cmp
rcll
fidivl
jmp
stos
in
mov
ds
and
and
mov
lahf
xchg
pop
mov
ss
sub
xor
sbb
das
pop
lods
pop
in
add
mov
xchg
add
sbb
xchg
movsb
jns
jle
sbb
push
ret
rcrb
jp
and
into
popa
inc
int3
dec
pop
clc
pop
and
add
out
lock
mov
push
adc
cmpsl
jmp
movsl
push
inc
adc
push
jne
pop
stos
mov
push
fdivrl
sbb
sub
ds
aas
xor
mov
push
sbb
stc
cltd
pop
or
ljmp
xchg
popa
adcl
push
and
cmp
jnp
bound
leave
jmp
xor
data16
push
push
xchg
lods
loope
test
imul
adc
cli
inc
and
iret
inc
add
inc
fidivs
nop
inc
push
aas
mov
outsb
dec
out
and
out
pop
cs
fisttpl
add
sbb
rclb
pusha
mov
testb
ret
mov
sahf
pop
push
jo
js
xchg
cmp
push
mov
cmp
fists
push
jne
movsl
pop
loopne
dec
pushf
adc
sub
push
js
mov
xchg
mov
lret
jl
jne
mov
hlt
mov
adc
mov
fwait
aad
mov
xchg
sbb
ret
mov
xor
insl
bound
push
dec
inc
cld
test
addb
mov
dec
mov
jp
xchg
cmp
rcrl
dec
dec
dec
outsb
imul
jle
xchg
mov
xchg
push
inc
jne
inc
frstor
push
in
fnsave
mov
stos
ss
outsl
push
es
es
es
pop
shrl
fwait
pop
mov
or
jge
xchg
xchg
scas
test
sti
out
ja
push
sbb
mov
cmp
inc
shll
jmp
and
push
pop
popa
out
leave
in
inc
lahf
or
inc
ds
add
push
and
test
ss
xchg
test
aad
jae
sbb
ja
insb
insb
adc
sti
xor
adc
daa
jecxz
scas
push
in
xchg
out
xor
xor
das
or
inc
jmp
pop
mov
sub
and
je
bound
inc
das
adc
jb
jl
insb
out
stos
mov
rclb
out
push
loope
xor
in
test
icebp
aad
push
xorb
enter
mov
cmpsb
dec
mov
popa
outsb
ljmp
adc
jo
push
push
je
jmp
push
inc
pop
adc
mov
ss
xor
push
shll
or
mov
into
xchg
sub
mov
scas
es
xorl
mov
mov
stc
mov
inc
inc
stos
les
xorb
jne
pop
fistps
in
dec
or
mov
imul
or
fnsave
sub
jle
adc
js
cmp
cmc
rclb
pop
adc
cmpsb
push
movq
outsl
loop
cli
push
xchg
in
jle
dec
faddl
xor
push
push
ret
xor
stc
add
push
ja
enter
shll
pop
inc
and
shll
mov
fcompl
mov
cmp
push
ret
push
nop
push
and
fidivrs
mov
pusha
sub
nop
push
xor
andb
arpl
gs
jecxz
jecxz
push
xchg
pop
dec
je
addr16
aaa
sbb
ficomps
icebp
push
mov
outsl
mov
jecxz
mov
lock
test
ds
push
xor
mov
rorb
push
inc
pop
mov
add
setns
add
imull
sahf
repnz
icebp
adc
pop
inc
cld
test
push
and
fwait
sarb
lea
adc
jp
xor
test
sub
xchg
or
sub
pop
insb
xchg
or
loopne
loope
inc
mov
ds
mov
push
push
pop
pop
xchg
push
cmp
xor
inc
inc
xor
jl
addr16
sbb
test
or
cmp
pop
pop
mov
scas
mov
test
negb
test
nop
jle
inc
xchg
push
fadd
jle,pt
pop
mov
notl
es
jb
inc
mov
mov
push
data16
adc
popa
and
lcall
add
enter
push
iret
jecxz
pop
xlat
arpl
imul
fwait
out
fs
push
inc
fidivrl
negl
xchg
adc
ja
cmp
daa
inc
push
adc
mov
cld
in
sbb
dec
in
jae
nop
stos
outsl
mov
out
pop
repnz
sbb
mov
les
scas
jecxz
lret
stos
pop
aaa
mov
pop
add
lret
pop
mov
jle
mulb
out
adc
lock
popf
decb
pop
out
mov
mov
push
add
scas
icebp
into
inc
sub
ljmp
popa
add
stos
mov
sub
fdiv
jbe
dec
into
fs
sub
mov
dec
iret
repz
mov
mov
and
cmc
dec
pop
xor
add
pop
or
jae
repnz
push
pop
jle
pop
cld
push
push
loopne
int3
call
pop
or
dec
jg
fmuls
push
and
mov
fs
xchg
cwtl
test
ret
or
add
xchg
movsb
loope
test
roll
out
loop
adc
sbb
addr16
xor
clc
mov
sbb
int
insb
mov
leave
int
lods
sbb
popa
xor
mov
jbe
or
dec
js
xchg
pop
cmpsl
idivl
mov
mov
scas
out
mov
aas
outsb
das
jle
dec
divps
outsl
ds
push
dec
push
mov
into
fdivrp
scas
out
mov
aas
outsb
das
jle
dec
divps
outsl
ds
push
dec
push
mov
into
fdivrp
scas
out
mov
aas
outsb
das
jle
dec
divps
imul
push
jle
mov
fwait
test
scas
out
mov
shrb
mov
movaps
cmpsb
out
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cli
or
pop
fisubrl
cmp
insl
int
out
dec
xchg
dec
push
mov
sbb
or
cli
or
sbb
sub
cmp
dec
stos
pop
lcall
pushf
pop
movsb
dec
mov
sbb
or
cli
stos
ljmp
jl
adc
data16
mov
sub
das
into
cmp
arpl
fidivrl
pop
mov
std
movsl
jno
add
push
out
dec
push
mov
mov
mov
unpckhps
and
pop
stos
xlat
xchg
bound
movsb
push
mov
insl
fldcw
orl
add
jne
int3
out
mov
aad
les
iret
inc
cmp
mov
cmp
or
sbb
sub
cmp
pop
push
insb
ret
lods
mov
mov
out
mov
fldcw
push
loop
addl
inc
jg
pop
lods
add
xlat
dec
rorl
leave
in
or
repz
loopne
xor
scas
ds
jge
fildll
int3
stos
jp
fisubs
xchg
cmp
lret
dec
stos
pop
lcall
xor
scas
dec
cmpb
sub
sbb
or
lahf
or
jae
inc
mov
jmp
push
cmp
iret
paddsb
or
fistpll
jp
mov
pop
mov
push
loope
filds
or
mov
orl
mov
popf
jg
cld
pushf
inc
scas
push
incl
stos
pop
lcall
pushf
pop
lods
dec
mov
sbb
or
cli
or
sbb
sub
cmp
dec
stos
pop
lcall
pushf
pop
lods
dec
mov
sbb
or
cli
or
dec
inc
push
mov
push
pop
push
lret
inc
leave
ret
mov
sub
sub
addr16
imul
dec
fildll
jecxz
popf
cs
in
dec
imulb
lods
rorb
inc
cmpsb
add
shl
push
aaa
add
js
repnz
push
and
das
cmp
aas
in
pop
outsl
ret
or
iret
push
jg
cmp
mov
jmp
xor
into
negb
in
jb
xchg
js
fnstsw
sbb
popf
daa
or
push
or
add
xchg
inc
inc
outsl
ljmp
mov
rcr
xchg
lock
lods
pop
cmpsl
and
ja
pop
out
mov
jge
mov
jno
sbb
mov
inc
lods
cmp
push
adc
ljmp
ja
inc
push
xchg
aaa
jp
xor
mov
dec
cmp
pop
cmp
inc
loope
int
or
mov
jmp
push
cmpsb
aas
lret
fcoms
adc
scas
cmpsl
sbb
data16
stc
pop
mov
dec
jbe
insl
cmp
sbb
lods
or
mov
jne
or
push
lods
adc
lret
cmp
lret
push
cwtl
negb
push
test
mov
push
pusha
push
in
add
jp
sbb
add
movsl
push
pop
add
dec
mov
push
dec
outsl
adc
outsb
loopne
jmp
movsb
or
mov
out
pop
in
mull
inc
out
mov
xchg
push
jo
dec
insl
aas
mov
xchg
popf
xor
into
pop
and
push
mov
pop
jbe
sub
lods
ret
mov
call
popf
insb
jl
scas
divl
shr
lcall
xor
or
pusha
popf
stos
jb
or
jl
neg
push
movl
insl
std
fdivrs
popf
mov
push
mov
lods
mov
lock
push
mov
test
inc
dec
outsb
xchg
jmp
dec
shrb
outsb
mov
inc
sahf
lea
mov
and
sub
xchg
pop
add
lcall
add
hlt
push
aaa
jge
pop
movl
or
and
jp
mov
ss
pop
sbb
cmp
fcomip
daa
lahf
scas
mov
xchg
cld
xchg
xchg
pop
cmc
cmovb
ret
mov
ds
pushf
push
ret
clc
and
outsb
inc
xchg
mov
int3
gs
imul
lods
imul
mov
adc
hlt
cmp
mov
mov
fstps
leave
pop
push
into
sbb
adc
push
out
fldt
icebp
inc
fcmovnu
rolb
aam
mov
add
mov
loopne
xor
pushf
xchg
das
data16
pop
add
test
fcmovbe
pushf
pusha
shll
xor
enter
addr16
sti
pop
jns
cmp
add
jo
lods
popl
xchg
pop
jmp
jbe
call
adc
shr
inc
scas
xchg
push
pop
call
push
sbb
in
lods
jo
popf
jno
mov
dec
sub
stc
sub
cmovae
enter
mov
aad
iret
fcmovnb
addr16
fsubs
add
outsl
aad
mov
hlt
xor
and
daa
jns
int3
loop
mov
fstpt
sti
xor
pop
sbb
test
inc
gs
lcall
mov
stos
mov
push
push
daa
cmp
ficoms
insb
add
pop
push
lahf
or
and
adc
adc
enter
mov
push
fdivrl
adc
int
pop
shlb
test
js
mov
cmp
loope
xchg
jae
mov
jne
pop
cmpsl
shrl
xchg
push
daa
sbb
je
sub
adc
aam
movsb
fs
mov
fwait
dec
lods
fsubs
add
outsl
notl
mov
mov
sbb
xor
mov
mov
movsl
adc
lret
jno
cmp
mov
addr16
out
negb
xor
int
pop
push
in
push
inc
adc
push
mov
xor
in
jg
sub
sub
mov
inc
sub
dec
mov
data16
int
fwait
aaa
xchg
scas
fidivs
sbb
or
rorl
cwtl
in
roll
in
push
imul
mov
mov
int3
lods
dec
jmp
cmp
or
arpl
sub
jge
jg
lods
mov
pop
daa
std
pusha
cmovns
sbb
mov
mov
sarl
out
mov
out
lcall
out
notl
mov
pop
cld
lods
aas
add
xchg
and
fwait
xchg
jecxz
es
lods
sbb
xchg
pavgb
xchg
pushf
js
sub
lahf
cmp
lods
xlat
add
xlat
mov
ds
movsb
testb
scas
mov
roll
fstpl
inc
bound
mov
inc
int3
xlat
mov
and
mov
sahf
sbbb
in
int
fs
test
test
mov
fcomps
sub
push
fldenv
jb
shlb
movsl
inc
sahf
xchg
sqrtps
cmp
lods
cmp
movsb
mov
mov
int3
ds
pop
cld
inc
test
xchg
push
inc
pushf
mov
out
push
imul
inc
xor
xor
movsl
pop
into
adc
test
adc
out
imul
lods
pop
or
ss
or
sbb
jnp
jb
lahf
jp
pop
fldenv
or
mov
dec
adcl
sbb
fnstsw
cs
adc
cmp
pop
or
loop
and
testl
dec
pop
cmp
add
insb
cmp
loope
xor
pop
jb
sbb
cltd
xor
pop
inc
xchg
scas
or
bound
push
je
xlat
mov
or
cld
cld
cmpsb
jbe
pop
fldt
icebp
outsl
enter
add
dec
dec
mov
jmp
push
sti
cmp
or
arpl
xor
test
dec
xor
insb
loopne
addb
dec
mov
xchg
push
and
repnz
dec
shrb
pushf
ret
xchg
lods
or
test
mov
pop
xchg
adc
jb
push
daa
fbld
jbe
in
sti
lods
cld
xlat
and
loope
mov
mov
addr16
pop
xchg
inc
aam
or
push
xlat
mov
mov
sahf
jmp
push
call
fxch
fiaddl
or
mov
cmc
addb
xor
cmp
int
loop
mov
mov
mov
and
pop
aad
and
shll
add
inc
mov
cmpsl
and
repnz
mov
loop
shlb
mov
pushf
add
adc
loope
sbb
lods
dec
jne
int
adc
call
jne
popf
filds
int
outsb
sbb
sbb
jno
daa
aaa
push
push
jmp
fcmovnb
xor
mov
lea
mov
adc
dec
int
jb
sti
cmp
jmp
pop
push
nop
sub
out
jns
insl
in
out
sbb
imul
sbb
iret
mov
sbb
aaa
add
cltd
aam
pop
jb
inc
das
pop
mov
jne
jnp
mov
call
adc
jp
lds
inc
xor
imul
push
pop
inc
push
fisttps
sub
sarb
dec
int3
enter
shrb
loopne
jae
dec
inc
xor
sbb
movsl
mov
mov
in
and
mov
ja
sbb
jecxz
sahf
test
mov
movsb
outsl
faddl
sbb
arpl
aaa
and
xor
sbb
sbb
cmc
data16
outsb
add
inc
mov
cs
xchg
xchg
mov
sti
lock
xorb
lds
imul
cli
push
lock
scas
arpl
pop
xlat
nop
out
adc
cmp
movsb
movsb
lret
int3
sbb
mov
insl
pop
sub
inc
sbb
dec
jne
inc
cmpsl
int3
lret
movsl
cmp
jg
out
lahf
add
clc
sbb
hlt
js
adc
mov
clc
rolb
inc
dec
out
into
ret
jno
adc
test
sbb
pop
bound
jo
jnp
or
adc
adc
or
sti
bound
lcall
or
jns
adc
xchg
cmpsb
jg
mov
jmp
sub
pusha
aam
dec
jmp
jecxz
mov
or
dec
add
cmp
lret
bound
fmull
xacquire
es
lds
loopne
jle
mov
push
rcll
mov
rorb
out
adc
mov
xlat
dec
sub
std
mov
push
fwait
leave
fiaddl
jge
cmp
and
fdivrl
mov
inc
and
mov
push
out
pop
clc
outsb
outsb
sbb
cmc
nopl
cmp
scas
inc
sbb
mov
inc
push
lahf
fdivr
pop
and
inc
ds
jns,pt
or
add
mov
jge
fiadds
lcall
push
and
pop
into
arpl
es
ja
stos
ret
push
sbb
pop
movsl
lods
out
cmc
cwtl
mov
sub
sbb
cltd
cmc
xchg
les
ret
xchg
mov
fldl
dec
mov
jp,pt
test
sti
jbe
xor
out
xor
mov
pop
or
sub
cli
jecxz
push
shll
jb
nop
icebp
mov
sub
sub
iret
int3
mov
inc
mov
stc
push
in
lret
dec
mov
mov
in
mov
xchg
loopne
nop
stos
cmp
orl
inc
push
or
cmp
pusha
mov
ds
shll
xlat
out
mov
pushf
int3
xor
idiv
stc
or
ds
sub
sbb
in
arpl
mov
mov
fcomps
cs
fildl
cltd
push
cmp
test
aaa
call
test
jmp
mov
outsb
jecxz
pop
push
mov
das
shll
int3
jno
xchg
inc
mov
lcall
mov
or
arpl
cmc
sbb
sub
rol
dec
fmull
push
mov
cwtl
fdivrs
xchg
dec
in
stc
pop
les
in
push
lcall
fldcw
inc
sbb
idivb
data16
add
cmp
dec
add
loop
mov
shll
clc
mov
fwait
int3
push
lods
mov
and
xchg
test
dec
jb
call
inc
jno
mov
xchg
stos
loopne
push
in
fcomi
adc
in
pop
out
fidivrs
rolb
stos
xor
sbb
int
pop
and
aad
xorl
js
adcl
outsb
sbb
fsubl
stc
insl
xchg
inc
and
cmp
insl
out
lock
push
mov
std
or
rclb
lret
imul
or
fildl
adc
insb
fbld
and
add
iret
jle
faddl
pop
subl
dec
cmpsl
cmp
push
outsb
ret
dec
pushf
xchg
dec
cmp
call
popa
cmpl
and
not
iret
cmp
push
push
ret
int
out
les
orb
mov
inc
loope
icebp
push
inc
adc
inc
cmp
aad
es
ficoml
mov
outsl
pop
filds
in
fbstp
adc
fistps
sbb
ror
mov
psubw
aaa
repz
insl
adc
dec
stc
xor
mov
in
jg
out
pop
sti
pop
xchg
fwait
sbb
mov
aas
xchg
xchg
js
inc
stos
mov
js
fdivl
ja
cmp
fs
jnp
nop
jb
out
lock
add
cwtl
add
mov
subb
test
jge
dec
addr16
testl
mov
fsubrs
push
fstl
outsb
mov
and
stos
leave
mov
push
jns
sub
fs
adc
ret
clc
add
jp
sub
cmp
add
ffree
sbb
testl
sub
jecxz
pop
ret
rcr
or
gs
in
xchg
testb
lahf
lds
aam
aas
adc
out
rcr
pop
in
mov
or
dec
clc
xor
mov
dec
pushf
jecxz
imul
jbe
int3
xchg
ja
je
push
adc
imul
rol
out
popl
out
jmp
cmp
sbb
test
push
or
mov
cmp
add
clc
dec
push
enter
sub
jbe
adc
repz
cs
jmp
rorl
mov
add
xchg
pop
push
daa
and
aad
jb
cs
fildll
fsubl
shlb
outsl
adc
je
das
push
in
mov
add
jo
les
daa
push
lock
into
and
cltd
jge
stc
andl
inc
shl
sbb
cmp
jp
andl
mov
repz
lods
fidivs
sahf
mov
xchg
inc
scas
xor
cmp
mov
mov
jns
fidivl
push
je
inc
insb
cmc
int3
fistps
cs
sbb
pop
xchg
dec
pop
mov
ret
inc
xor
mov
imul
rolb
ret
in
mov
xor
lock
pop
lahf
loopne
pop
and
jbe
addr16
fisubrl
and
shrl
or
adc
inc
mov
xchg
ret
xchg
sarb
mov
jl
dec
addr16
jns
out
lock
jmp
mov
in
or
bound
mov
jecxz
fsubrp
fsubrl
mov
push
push
insl
xor
and
fsub
xchg
cmpsl
push
dec
xchg
xchg
cwtl
and
cli
sub
mov
inc
pusha
and
pop
leave
mov
sub
gs
call
shrb
repnz
dec
ljmp
cld
jp
push
into
cmp
dec
ret
std
subb
cmp
fwait
cmp
shlb
mov
jne
xor
add
outsb
xchg
mov
sbb
jl
and
into
out
mov
push
ficomps
or
imul
dec
push
cwtl
xchg
mov
dec
sub
and
push
arpl
mov
insb
push
aas
sub
cltd
adc
cmovb
xor
lods
repz
loopne
mov
pop
dec
gs
lea
hlt
jo
xor
out
inc
jecxz
fs
ja
mov
adc
mov
push
fcompl
nop
sub
stos
pop
mov
adc
push
sub
sbb
sbb
das
jno
mov
pop
les
mov
loope
insl
jbe
or
shll
and
fists
jo
add
dec
cmp
or
sbb
jns
test
fadds
mov
push
adc
xchg
stc
pusha
orl
sbbl
in
arpl
sub
push
pop
repnz
push
fadds
mov
leave
and
push
loope
inc
mov
mov
jns
cmpsb
clc
test
cmp
movsl
cmpsl
cmpsb
lcall
and
dec
in
addr16
ljmp
or
notl
mov
xor
cli
push
int3
mov
pop
scas
lret
loop
cli
loope
out
insb
les
incb
and
fcompl
xchg
lods
push
dec
gs
cld
mov
mov
bound
pop
inc
sub
sahf
jne
dec
add
lds
mov
stc
or
sub
in
xor
push
dec
insl
dec
rcrl
nop
fisubrs
xor
sbb
in
es
xchg
push
xchg
mov
lds
xchg
out
leave
cltd
sub
adc
sarl
leave
jo
xor
cmp
fldt
lcall
pop
adc
xor
inc
pop
jg
pop
mov
inc
dec
imul
jo
xchg
lret
sbb
loope
push
inc
mov
mov
nop
push
dec
roll
pop
cmp
fimull
and
dec
cmp
aaa
mov
out
iret
int
dec
add
add
inc
fisttpll
jg
or
ffree
pop
mov
arpl
adc
mov
aad
fs
add
adc
jns
jne
adc
mov
push
and
test
test
xchg
mov
ljmp
sub
push
fstpt
mov
sti
outsb
mov
andl
insb
pop
cltd
sbb
cmp
popa
cmp
inc
icebp
stc
shrb
adc
add
cmp
stc
imul
push
stos
or
push
addr16
pop
fwait
jns
and
and
xchg
out
fwait
out
cmc
mov
inc
cmpsb
inc
movsl
mov
dec
push
xor
nop
fiadds
or
xchg
bound
cmpl
mov
sub
pop
pop
repnz
jmp
das
xchg
imul
mov
out
shlb
dec
push
xor
repnz
jbe
pminub
push
mov
inc
mov
inc
push
pop
enter
push
js
addr16
mov
sub
rcl
cli
pop
and
test
aad
aad
sub
push
pop
lret
mov
ljmp
mov
add
retw
pop
pop
sbb
push
fisttpl
cmp
mov
adc
mov
in
lret
mov
das
fiaddl
loopne
mov
mov
aas
filds
xor
push
xchg
or
xor
or
push
sbb
cmp
scas
in
test
stos
sbbl
into
aaa
pop
sub
adc
dec
add
test
call
lahf
xor
call
gs
add
rcll
fcomps
dec
xor
adc
or
adc
addr16
pop
jle
push
mov
gs
jmp
fldcw
scas
xor
imul
xchg
mov
cltd
mov
subb
and
sbbb
adc
dec
pop
sub
sub
test
js
enter
dec
xchg
dec
imul
inc
xchg
arpl
cmp
mov
sub
dec
jne
push
mov
imul
xorl
jnp
xor
pop
sub
outsl
cmpb
push
push
add
dec
inc
ret
inc
jecxz
jg
out
push
cmp
xor
lds
iret
loopne
imul
das
and
mov
fbstp
lds
sbb
push
clc
ja
mov
or
shll
mov
loopne
xlat
loopne
and
sub
adc
pop
shl
ja
jbe
loope
pop
push
adc
out
aam
ds
imul
xchg
in
cmp
add
stos
mov
subl
bound
mov
ss
jae
hlt
test
xor
shld
leave
sub
dec
shl
push
pop
jp
inc
lds
cmp
add
lret
mov
pop
lea
shrb
aam
jmp
js
out
ljmp
sbb
out
sub
les
lds
lods
dec
movsl
push
xor
cmpsb
mov
xor
pusha
push
nop
cltd
xor
scas
mov
call
lret
test
fistpll
ret
and
rep
mov
clc
imul
inc
bound
orb
lahf
pop
xor
adc
cmp
mov
xchg
xor
jbe
out
push
mov
pop
sbb
pop
out
mulb
loopne
lahf
pop
stos
cwtl
xlat
jecxz
sub
sbb
xchg
leave
cmc
les
add
adc
dec
xchg
fstl
lea
les
ja
xchg
andl
cmp
mov
sahf
mov
xor
call
mov
cmp
xchg
add
stos
imul
xchg
and
je
mov
lret
cmp
insl
sbb
xchg
mov
fucomip
cmp
adc
adc
in
mov
cltd
fldenv
or
cmp
xchg
or
jg
loopne
ljmp
cmp
xor
loopne
push
subb
or
cmp
pop
pop
lods
clc
imul
sub
out
test
aas
mov
pop
daa
into
dec
nop
inc
pop
ds
add
ss
mov
mov
mov
mov
clc
pop
xlat
mov
inc
push
jne
xor
push
lret
inc
repz
leave
xlat
pusha
adc
aam
mov
dec
cmp
mov
jnp
lret
mov
mov
out
int3
xchg
and
or
mov
lret
add
stos
popa
mov
popf
dec
sub
dec
adc
or
sub
cmp
aas
mov
cmpl
fidivrl
jp
daa
je
fs
cltd
mov
ljmp
scas
aam
loopne
and
stc
mov
imul
xor
stc
sub
out
mov
rcll
mov
mov
dec
cmp
lea
jmp
dec
addb
jg
ljmp
adc
or
xor
xorps
mov
inc
dec
aam
sbb
sbb
sub
cmp
dec
stos
pop
lcall
pushf
pop
lods
dec
mov
sbb
or
cli
or
sbb
sub
cmp
dec
stos
pop
lcall
pushf
pop
lods
dec
mov
sbb
or
cli
or
adc
xor
cmp
push
push
pop
lods
dec
mov
enter
in
sbb
call
lret
dec
stos
pop
sbb
or
lods
dec
lret
dec
mov
movsb
loop
repnz
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmc
pop
in
aad
lds
mov
xchg
shlb
xor
inc
adc
inc
add
mov
add
mov
movsl
jle
ret
jne
adc
add
xor
add
mov
sub
nop
mov
movsl
into
xchg
sub
lret
gs
es
imul
inc
sbb
imul
in
cmpsb
divl
jns
fidivrs
mov
mov
push
mov
pop
inc
or
sub
and
dec
cs
jecxz
push
sahf
xorb
pop
dec
fsubrs
add
arpl
mov
inc
sti
fisttps
cwtl
dec
mov
call
scas
movzwl
inc
lods
jb
add
mov
in
mov
loop
lcall
jne
fdivs
arpl
lret
arpl
adc
mov
pop
mov
scas
mov
lret
gs
and
int3
adc
push
adc
xchg
xchg
and
jno
orb
and
std
add
or
lea
mov
lds
xchg
sbb
hlt
push
adc
xor
inc
add
mov
shll
lock
les
ss
jnp
or
push
xor
out
repz
mov
rcll
addr16
add
xor
and
cmp
icebp
mov
movsl
repnz
ret
jne
xor
inc
adc
inc
add
mov
add
mov
movsl
repnz
ret
jne
xor
inc
adc
inc
add
outsb
and
mov
sub
lcall
fs
mov
aam
pushf
shlb
jl
adc
fs
xchg
xchg
movsl
aad
xchg
jle
int3
cmp
stc
or
fcoms
test
lcall
pop
xchg
xchg
mov
clc
repz
cmp
inc
loopne
jecxz
adc
xor
push
sti
mov
es
out
dec
jge
mov
mov
sarl
mov
dec
adc
aaa
mov
inc
cwtl
mov
in
stos
xchg
xchg
or
pop
loope
push
cli
dec
xor
negl
xor
sbb
add
rcl
jmp
xchg
subb
out
sarb
pop
mov
movsb
iret
sbb
xor
mov
icebp
sbb
enter
jmp
in
lds
push
jbe
inc
fisttps
xor
test
sahf
fadd
mov
imul
clc
into
int3
mov
xchg
icebp
mov
jge
lret
jle
arpl
je
push
mov
xchg
iret
cs
imul
shll
sbb
push
lods
push
add
inc
push
cmp
stc
or
out
pop
dec
mov
cmp
fs
mov
daa
arpl
test
idivl
push
pop
jecxz
daa
faddl
xchg
xchg
imul
lods
ja
pop
fcmovu
and
fdivrl
je
inc
loop
cmpsl
bound
jae
dec
jo
pop
mov
cmpsl
add
push
test
pop
out
xchg
cs
enter
pusha
inc
xchg
mov
and
popa
test
aas
and
pop
shll
dec
adc
xchg
sub
lcall
popw
jg
out
je
xor
push
pushf
add
js
add
imul
cld
mov
test
push
ret
in
dec
mov
pusha
incl
sbb
xchg
loop
add
push
inc
mov
push
jg
lea
xor
fidivl
lods
ljmp
repz
ret
or
or
daa
cmp
incb
cs
je
cmp
ja
xor
jbe
pop
daa
data16
imul
addr16
mov
sbb
xchg
stos
dec
mov
jnp
inc
xor
xchg
add
lds
ja
dec
out
cmp
test
aad
clc
insb
out
pop
sbb
cmpl
stc
sub
call
or
dec
subl
adc
ret
mov
pop
add
in
out
or
fmull
xor
orl
out
and
std
ds
push
dec
xchg
jmp
mov
in
outsb
rcrl
xor
jg
rclb
adc
mov
pop
lret
iret
stos
cmp
or
inc
cli
inc
scas
mov
pop
adc
out
mov
sbb
out
and
cmc
mov
notb
xchg
inc
sub
int
aas
sub
mov
nop
das
jl
fisubs
pop
in
add
sbb
xor
mov
cmp
push
inc
jecxz
pushf
lds
fimull
movsb
sbb
jns
or
hlt
rolb
push
cmp
cmp
sti
loopne
iret
loopne
mov
cmp
or
out
outsl
sbb
pusha
popf
test
sub
pop
cmp
sub
or
in
jb
bound
mov
mov
mov
out
xor
ljmp
in
push
jbe
inc
fsts
loope
fcompl
xor
jge
or
nop
jne
pop
push
mov
push
jns
stc
mov
push
and
xchg
xchg
mov
outsb
call
mov
jns
xchg
sarb
std
cltd
dec
aas
loopne
cmp
daa
cmp
xchg
in
jle
xor
mov
mov
scas
adc
mov
pop
pusha
mov
les
insl
sbb
mov
mov
lret
stos
xor
inc
xchg
inc
push
push
add
cmpsl
pusha
mov
rcrb
push
sub
add
push
leave
fsubrs
pusha
movsb
xor
lret
test
into
out
fwait
outsb
xor
sti
jmp
aaa
adc
add
fdivl
and
test
mov
jmp
mov
aam
cmp
jecxz
ret
cmpsl
inc
ss
cmpsl
sbb
xchg
xchg
xor
fs
fldenv
push
xchg
mov
mov
popa
imul
idivb
cmp
or
mov
sbb
in
test
cs
add
enter
xchg
mov
add
stos
jmp
leave
arpl
xor
es
jge
adc
cmp
cmp
pop
pusha
jge
jge
cs
dec
aad
es
test
popf
nop
test
imul
in
mov
sbb
shr
mov
lcall
adc
loope
outsb
xchg
jle
pusha
xor
movl
cmp
mov
inc
cmp
sahf
shrl
test
or
xor
js
bnd
sarb
and
mov
rcl
sbb
scas
inc
mov
ljmp
cbtw
movsb
push
jae
jno
sti
scas
push
and
test
jbe
jae
rcrl
jo
and
dec
push
pop
rorb
sub
iret
ficoml
aaa
lods
cmp
arpl
push
scas
pop
shlb
push
push
cmp
das
cmpb
stos
aas
enter
imul
sbb
or
icebp
cwtl
jbe
add
fs
sub
push
dec
push
sub
sbb
pop
mov
pop
mov
sbb
imul
cwtl
push
and
les
adc
push
add
jecxz
sub
push
into
pop
mov
jae
dec
push
mov
jne
pusha
sbb
dec
add
fidivrl
or
or
adc
imulb
pop
adc
pop
scas
add
jo
les
ljmp
nop
inc
dec
and
jmp
inc
fwait
or
mov
fwait
jp
cmp
loopne
push
ds
cmp
xorb
daa
shrb
stos
jbe
into
out
or
push
xchg
cmp
out
xor
pop
cmp
or
and
and
mov
pop
icebp
cli
outsl
popf
popf
fnstenv
mov
ret
sbb
loopne
mov
mull
jae
dec
fcoms
ret
lret
mov
arpl
fsts
sbb
cmpl
pop
rep
push
push
jne
pop
out
leave
ja
sbb
and
loope
fsubl
shlb
push
lods
adc
xor
cltd
sarl
mov
nop
movsb
sub
movsb
in
ja
pop
push
test
inc
ret
push
xor
outsl
dec
cmp
insb
add
or
popf
sbb
stc
lahf
fucomi
ds
pusha
jbe
mov
mov
push
jns
pushl
enter
push
stc
cmp
and
out
sub
scas
mov
stos
jo
adc
xchg
xchg
hlt
addr16
or
jne
into
pop
into
aad
loop
inc
roll
fisubs
sub
mov
and
and
mov
nop
push
pop
or
loop
or
ja
adc
fdivr
inc
sub
ja
loope
jb
cmp
adc
add
pop
pop
lds
fcmovu
cltd
jae
xchg
sbb
lret
test
and
lods
mov
mov
xchg
jbe
pop
adc
add
test
subb
repz
inc
sarb
push
adc
insl
inc
lret
in
rclb
jmp
sbb
mov
cmpb
pop
or
aam
inc
pusha
xor
mov
adc
mov
imul
sub
stos
add
in
or
pop
out
jp
mov
jo
sahf
adc
xchg
lock
jbe
push
call
cmp
int
jge
imul
loopne
sbb
into
xchg
insl
sub
push
mov
clc
pop
lahf
sub
popa
or
sub
mov
fsubl
and
fcomps
or
lods
push
dec
mov
adc
jge
in
cmp
cmpb
push
mov
pop
bound
and
lock
sbb
adc
shll
imul
dec
jge
icebp
int3
add
or
je
lcall
pop
imul
insl
fs
inc
mov
lret
or
pop
inc
test
mov
testl
ja
insl
fdivp
xchg
push
test
ret
mov
mov
out
mov
fldt
push
dec
pop
sub
mov
mov
cmp
xchg
dec
aad
daa
into
repz
push
xorb
add
cmp
xchg
sub
jg
push
jl
lret
push
sti
push
cwtl
push
pop
adc
lahf
pop
gs
add
push
ficompl
xchg
xchg
mov
mov
pop
out
add
fbstp
mov
cmp
loop
mov
fidivrl
xor
aaa
aas
out
icebp
sbb
jmp
clc
add
inc
jge
into
iret
mov
lahf
arpl
lret
mov
call
pop
sarl
push
and
adc
mov
sub
je
or
sbb
jb
pop
mov
push
jns
movsb
testl
fcomip
adc
out
lahf
mov
adc
leave
xor
jmp
repnz
mov
and
jo
adc
adc
cmpsb
mov
inc
jo
icebp
mov
dec
jmp
or
xchg
pop
fiaddl
lret
negl
ds
push
inc
cmp
push
loopne
mov
pop
mov
stos
inc
jbe
add
cmp
cmp
subb
dec
fmuls
cli
xchg
std
pop
mov
in
test
jns
shrb
xchg
mov
mov
push
and
lds
fisubrl
aaa
sbb
test
stos
aaa
and
and
out
fbstp
lods
jo
mov
push
scas
sti
xchg
dec
add
cmpb
jmp
sahf
mov
ds
popa
repz
or
cmp
xor
or
adc
xchg
mov
lcall
mov
inc
xor
lds
cmp
and
adc
and
push
loope
inc
mov
test
js
or
ret
rorl
stos
lods
loope
dec
dec
es
sarb
pop
push
testl
std
sbb
adc
and
sbb
repnz
lods
es
and
push
lea
lahf
cmp
cmp
sbb
jns
cmp
mov
jnp
pop
xor
fcmove
adc
loop
push
pop
pop
push
leave
ret
sti
sbb
sub
inc
addr16
arpl
inc
leave
sbb
jno
mov
ret
negl
int3
push
bound
popa
xor
outsb
cltd
cmp
or
xor
inc
adc
xchg
cmp
dec
jns
not
jne
fisttps
mov
dec
mov
mov
lods
push
xor
cmp
add
and
enter
out
out
pop
mov
icebp
mov
mov
pop
out
jp
cmpsb
mov
sbb
fistpll
sub
or
cmp
push
adc
popa
mov
adc
aas
int3
or
and
pushf
or
dec
js
rolb
ss
and
cmc
xor
jp
decl
je
push
or
xchg
subb
subb
xchg
mov
aas
es
mul
lods
sahf
ret
aaa
addr16
mov
sbb
dec
jb
mov
lahf
adc
xchg
pop
ficompl
in
push
pop
pop
inc
pop
in
jecxz
rcrl
fwait
cmpsb
cs
je
idivl
and
push
lahf
inc
in
jns
rorb
push
nop
sub
mov
sbb
dec
and
cmp
and
pop
dec
xorb
sub
jle
push
cld
fs
movsl
mov
adc
and
mov
fstpt
inc
ljmp
movsb
das
and
xlat
pop
imul
and
lods
dec
push
lock
add
int3
divb
cmp
mov
push
sbb
or
lea
adc
movsl
mov
movsl
cmp
sbb
mov
add
add
push
mov
je
jne
test
add
mov
stc
leave
adc
rorw
sbb
and
inc
ja
mov
jbe
xchg
out
xor
mov
iret
dec
inc
xchg
push
push
inc
inc
xchg
jl
adc
add
cwtl
mov
or
call
push
add
push
and
sub
xor
test
mov
outsl
movb
jb
jae
divb
mov
insb
inc
or
push
and
push
pop
fildl
or
data16
pop
inc
stc
into
fisttps
arpl
mov
mov
repz
repz
cmp
and
mov
pop
dec
fnstenv
sti
inc
loope
mov
in
xor
jp
and
fwait
mov
dec
pop
fcompl
fidivs
push
mov
xchg
dec
pop
inc
jg
test
pushf
ljmp
push
std
dec
jg
in
fdivp
sbb
jl
dec
cmp
or
mov
mov
loop
xor
xor
sti
jne
std
mov
pop
jne
fldt
mov
lods
jmp
mov
push
outsl
fwait
notb
ficomps
sub
int
and
jle
xchg
mov
mov
push
xchg
sti
and
cmp
shll
jmp
mov
mov
icebp
fidivs
pop
cmc
je
adc
xlat
push
push
push
mov
inc
dec
push
fcmove
in
inc
cmp
ds
mov
aas
stos
xchg
test
divl
and
sub
loopne
and
xchg
add
jmp
in
dec
fmuls
jo
mov
jns
jae
adc
mov
movb
sub
mov
mov
mov
mov
mov
lret
mov
enter
rcll
out
cmp
scas
pop
shr
cmp
xor
jnp
popa
mov
mov
push
push
fsubrl
loope
loope
pop
xor
mov
or
cwtl
or
xchg
outsl
xchg
mov
inc
aaa
hlt
shll
mov
cmp
pop
jno
jae
out
clc
xchg
inc
xor
mov
enter
adc
inc
in
fnsave
xchg
pop
pop
mov
adc
sbb
data16
mov
adc
fwait
mulb
cltd
iret
sarl
push
xor
fiaddl
addb
sub
adc
sub
sbb
jmp
mov
add
test
rcll
cmp
scas
mov
std
sub
xchg
xlat
mov
pop
sar
sub
add
test
out
stos
mov
mov
pop
mov
sub
push
in
xchg
xchg
test
mov
rcll
xor
xor
insl
cmp
adc
out
adc
int
push
xchg
gs
sub
faddl
cmp
mov
push
mov
cmp
pop
sbb
or
push
mov
sbb
iret
xor
push
ljmp
data16
mov
push
scas
sbb
mov
and
xor
inc
shrl
sahf
or
mov
cmp
mov
mov
dec
inc
gs
mov
popf
add
dec
iret
cmpl
add
imul
stc
inc
jno
mov
rorb
pop
pop
rcrb
hlt
xchg
xchg
jp
pop
ss
jmp
mov
stos
add
and
mov
cmpsb
ss
fcoml
outsb
outsl
cld
fldlg2
les
xor
dec
add
xchg
rcrb
jge
jbe
daa
mov
setle
outsl
cli
mov
xlat
mov
jbe
subb
cli
mov
or
cmpsb
repz
addr16
gs
repnz
lds
mov
pop
sub
nop
push
sbb
sbbb
mov
scas
in
div
mov
mov
add
xor
out
shlb
daa
push
icebp
fs
mov
push
mov
incb
nop
sahf
pop
out
pop
outsl
lea
mov
rclb
pop
out
test
sub
imul
faddl
add
aam
push
ret
imul
outsb
push
aam
setb
jb
mov
push
mull
out
sub
fsubs
shll
stos
aam
jne
xchg
movsb
lret
aas
pop
adc
xchg
push
pop
dec
outsl
imul
pushf
ffreep
cmpsl
ja
sub
and
aam
push
addr16
xor
fsubrs
add
mov
sbb
mov
xor
mov
fdiv
mov
cmc
mov
loopne
ficoml
cli
shlb
add
fldl
pop
mov
push
jecxz
arpl
ss
das
daa
jecxz
mov
sub
push
add
adc
in
loope
lock
jp
mov
cmp
jno
sbb
dec
stos
sbb
adc
mov
xchg
mov
xchg
lcall
jge
jno
jno
dec
xchg
dec
insl
cltd
xor
je
sbb
addr16
mov
movsl
ja
loop
call
adc
test
and
jo
and
loop
or
repz
iret
cli
push
mov
cmp
mov
std
rclb
xor
mov
mov
stos
cmp
inc
sbb
cs
cltd
stos
mov
inc
enter
or
lods
inc
mov
inc
pop
xchg
jne
or
cs
in
int
inc
daa
add
jns
adc
sub
pop
xchg
inc
xchg
mov
das
xor
or
adc
inc
leave
hlt
jge
push
fucomip
pop
cmp
mov
mov
push
dec
push
std
fs
adc
add
or
and
in
out
clc
push
push
xchg
mov
fs
es
out
shrl
mov
push
icebp
jo
negl
xlat
scas
pop
sbb
jp
fs
lahf
xchg
int3
push
aad
sub
lret
imul
filds
lock
xchg
mov
pop
xchg
pop
or
mov
mov
fwait
repnz
ss
xchg
pop
movsl
mov
ret
cmc
outsl
sahf
shl
bound
dec
sbb
pop
xorb
dec
sbb
movl
sbb
sete
cmpl
pusha
hlt
sarl
aaa
lcall
icebp
jo
aaa
lds
repnz
rcll
sbb
aam
fldl
xchg
sbb
jp
dec
inc
cmp
push
popa
or
insl
mov
mov
shrl
sub
add
out
aam
adcl
lock
pop
dec
cmp
push
push
jb
push
pop
sar
pop
jbe
adc
push
sarb
into
xchg
jg
push
or
mov
test
mov
xor
mov
or
cmp
outsb
sti
xchg
mov
cmpsb
iret
sahf
notl
cmp
dec
ret
repz
xchg
in
jb
stos
cli
mov
xchg
mov
lock
call
mov
mov
popa
sti
and
fisubrl
mov
inc
shr
movsl
shll
aam
lret
mov
cmp
inc
push
into
mov
inc
pushf
push
fcoms
pop
add
mov
or
inc
lds
mov
popa
loop
test
mov
out
jnp
pop
pop
jle
ret
or
test
jmp
imul
inc
push
pushf
imul
out
shrb
lahf
ret
sub
push
inc
scas
lcall
dec
mov
adc
jbe
imul
and
ret
adc
shll
dec
clc
pop
inc
xor
sbb
pop
loope
inc
mov
push
stos
and
loopne
inc
xchg
xchg
sub
call
cmp
push
pop
adc
test
mov
mov
xor
xorb
imul
adc
repnz
jle
femms
jns
push
shll
lods
sub
pop
xor
sti
pushf
jo
jbe
mov
push
scas
les
jle
sub
mov
arpl
in
ljmp
das
out
jmp
adc
push
mov
dec
dec
inc
fcomip
cltd
adc
pop
hlt
sub
adc
xorl
and
je
mov
mov
mov
push
jno
sarb
movsb
test
cmp
mov
nop
dec
push
int3
cmp
pop
sti
imulb
jecxz
stc
fisubrs
jl
sub
icebp
test
add
sbb
push
pop
jmp
repz
addl
clc
push
jno
mov
out
push
rcr
or
xor
loopne
repnz
cli
pop
push
out
mov
imul
fs
push
fdivs
sbb
movsl
sbb
dec
jmp
xchg
or
add
jns
sub
jnp
xchg
cmpsl
out
aas
pop
jno
int3
sbb
cwtl
mov
push
adc
adc
shrb
dec
inc
movsb
ss
fdivr
jne
add
push
out
push
xor
xor
mov
shll
sti
lahf
ret
imul
mov
out
jne
ss
adc
jl
add
call
or
aaa
push
out
outsl
out
sub
jno
push
mulb
pop
sbb
sbb
popf
enter
and
xor
in
sahf
popf
fistl
mov
out
mov
out
lds
xchg
ret
jne
xor
inc
adc
inc
add
mov
add
mov
movsl
repnz
ret
jne
xor
inc
adc
inc
add
cli
aad
lds
xchg
ret
jne
xor
inc
adc
bound
mov
add
mov
movsl
repnz
inc
test
jne
gs
incl
inc
gs
ljmp
and
cmp
sub
pop
imul
xchg
mov
jmp
sbb
sub
jne
inc
jnp
pop
movsl
xchg
mov
test
cmc
leave
jmp
add
xor
jne
inc
arpl
movsl
fwait
xchg
test
ret
in
lcall
push
push
jnp
pop
jns
lods
xchg
decb
les
or
push
test
and
xchg
insl
sbb
jnp
sub
mov
xor
jmp
push
sbb
pop
adc
cmp
je
rolb
pusha
into
dec
or
movsl
fwait
loope
test
push
push
mov
mov
sti
aad
and
les
pop
rorb
out
sub
jne
inc
jmp
sbb
mov
inc
add
sti
ficompl
ljmp
jae
add
jecxz
add
adc
test
outsb
fsub
lret
ret
sahf
mov
enter
repnz
loope
inc
mov
sub
or
sbb
pop
jne
inc
jnp
jb
fwait
mov
test
cmc
rol
loope
ljmp
jl
gs
pop
sub
pop
push
push
movsl
hlt
rorb
in
cmc
leave
cmpsb
xchg
xchg
xchg
push
bound
jns
gs
xor
shr
out
xchg
xchg
test
test
sbb
outsb
sub
dec
inc
jnp
imul
xchg
stos
in
cmc
lret
jmp
sbb
sub
jne
inc
jnp
imul
xchg
stos
in
cmc
lret
jmp
sbb
sbb
shlb
scas
mov
je
add
popa
sub
add
mov
xor
das
dec
cmp
xchg
xchg
inc
xlat
in
push
lahf
sahf
je
mov
pusha
loope
inc
and
loope
sbb
cwtl
mov
add
or
add
arpl
movsb
scas
xchg
pop
pop
scas
push
cmc
add
inc
adc
pop
out
pop
ret
fnstsw
insl
popa
add
jg
sub
xchg
cli
outsl
aaa
push
jb
call
jmp
jg
sub
mov
scas
clc
push
jb
ja
push
int
fisttpll
mov
shlb
mov
pop
fldenv
roll
inc
pop
jecxz
mov
adc
lret
dec
mov
int3
inc
mov
mov
cmp
shll
es
mov
sbb
sarb
cmp
pop
and
frstor
jns
xchg
ret
pop
inc
add
in
mov
iret
fucomp
push
js
inc
sub
pop
fs
test
aam
and
jb
sahf
xlat
mov
mov
es
mov
imul
imul
cmp
xchg
jge
cmp
negl
daa
outsl
push
mov
mov
xchg
sbb
je
jno
adc
and
mov
xor
cld
test
inc
mov
test
imul
adc
ljmp
clc
aas
mov
into
pop
or
sbb
mov
scas
inc
adc
ljmp
inc
jns
cmpsl
pop
aas
mov
mov
and
jg
xor
sbb
ret
jmp
nop
jb
sti
mov
into
loope
cltd
hlt
dec
add
test
outsb
cld
xor
leave
xchg
and
and
push
sbb
fsts
lods
cltd
sub
and
in
addr16
fists
push
xor
dec
das
sbb
sub
sub
push
lret
lret
out
movsb
cmp
pop
sub
jne
pop
imul
repnz
jne
inc
mov
mov
data16
ret
sub
adc
xlat
nop
movsl
adc
adc
cld
mov
and
mov
jbe
add
clc
out
mov
pop
lahf
popf
mov
cmc
loope
fmull
mov
lea
pop
outsb
mov
xor
cltd
pop
pop
pop
in
mov
lret
lock
ret
out
or
pop
pushf
pop
das
sub
xor
mov
sbb
lahf
or
mov
imul
loop
insb
ljmp
cmp
arpl
lock
fadds
les
fwait
lds
push
cmpsl
out
addr16
cmp
inc
aam
imul
mov
pop
xor
adc
lods
inc
dec
das
adc
push
xlat
loopne
dec
daa
les
call
xchg
scas
test
mov
gs
mov
ret
rcrb
sahf
lret
daa
adc
test
push
cwtl
mov
les
mov
addb
add
aaa
xlat
lock
xor
dec
sbb
mov
inc
pop
mov
lods
in
rol
stos
stc
movsb
adc
xorb
dec
pop
aas
popa
push
daa
mov
xchg
jnp
mov
arpl
pop
xor
mov
add
sti
xchg
sbb
pop
sbb
out
jg
iret
jne,pn
lcall
inc
aas
push
jmp
scas
jne
lcall
orb
repz
xorb
jecxz
shrl
xor
mov
daa
hlt
fnsave
fistpll
shrl
xchg
adc
jmp
mov
sub
leave
mov
cmp
outsl
cmp
jno
mov
sub
fidivrs
stos
mov
scas
push
or
pop
or
add
cs
xor
xor
addr16
mov
movsb
and
inc
adc
and
lahf
shlb
mov
xlat
faddl
in
and
pop
adc
cmp
js
inc
arpl
inc
cmc
mov
jae
ljmp
mov
sbb
enter
bound
mov
loopne
cmpsl
or
or
mov
cmc
xchg
cmpsb
test
js
mov
fistpl
pop
jmp
mov
jp
repnz
rorb
and
and
and
test
adc
arpl
mov
or
push
cltd
in
in
je
push
aad
mov
popf
rcr
pop
push
mov
flds
and
adc
pop
xor
mov
lret
imul
xlat
add
mov
setbe
std
repz
push
ljmp
fmul
mov
or
inc
sbb
mov
outsb
inc
int
pop
pop
cmp
jl
sub
sub
mov
mov
outsb
pop
leave
cmpsb
imul
adc
sub
mov
inc
lahf
jo
outsb
adc
les
pushf
adc
ds
js
cmc
test
dec
push
push
mov
lahf
dec
push
or
sarl
insl
mov
mov
cmp
add
sub
or
clc
fwait
pop
test
and
lods
aas
or
and
xchg
mov
adcb
dec
xor
aas
rolb
aam
fsubl
ret
add
pop
dec
jmp
push
rcl
fmull
or
xor
icebp
mov
xchg
cmp
dec
sbb
and
bound
dec
sbb
cs
icebp
xorb
sub
push
xor
rorl
jnp
hlt
adc
and
icebp
adcl
mov
mov
mov
sti
dec
jne
prefetch
cmp
xor
fidivl
mov
jbe
test
push
xorl
cmpsl
lds
or
mov
inc
repz
xchg
lcall
dec
and
dec
std
mov
sbb
lods
in
fistl
loop
mov
ds
aad
jp
inc
data16
add
push
xor
inc
repnz
pop
les
test
movsb
push
movsb
inc
scas
clc
pop
dec
subb
scas
aam
lods
xlat
in
cli
test
push
xor
jp
in
jo,pt
test
xor
out
inc
push
lcall
xchg
push
lods
add
hlt
in
out
jbe
pop
push
inc
jbe
das
imul
jo
dec
stos
push
push
int3
aaa
or
jg
mov
xchg
ss
out
or
rcrl
sbb
scas
and
stc
dec
fdivp
xchg
das
pop
mov
push
fiaddl
pop
cltd
inc
cli
out
lcall
rcr
subb
lret
inc
jnp
cmpsb
adc
jno
push
fbld
pop
push
jp
inc
xor
sti
test
insl
xor
inc
sub
ror
test
stos
mov
popf
jmp
mov
bound
cwtl
mov
test
mov
mov
jp
inc
repz
inc
fsts
or
cli
ret
xchg
insl
popf
aam
xchg
push
cmp
out
std
je
lds
mov
in
jbe
dec
loope
mov
sub
sub
push
sub
push
push
inc
and
pop
xor
popf
les
pop
add
movsb
sub
xor
jb
fcoml
loopne
pop
push
stc
mov
mov
xor
fimuls
test
sub
and
push
inc
jno
imul
jbe
inc
dec
leave
inc
or
insb
loope
xchg
aad
xchg
ret
sub
xchg
push
mov
outsb
mov
repz
xorb
inc
jns
cmp
ja
cmp
and
cmc
ficomps
test
jle
cs
mov
imul
outsl
test
xchg
push
adc
lock
lret
cmp
cmc
jne
movsl
mov
ficompl
mov
add
push
and
or
sbb
inc
mov
pop
push
push
fdivrs
mov
jp
cs
fnsave
pop
stos
stos
inc
int
cltd
adc
push
mov
lret
popa
push
and
out
out
mov
cmp
cmp
dec
movsb
jno
nop
lret
loope
xchg
dec
jmp
pop
sbb
xor
call
movsb
sub
and
jnp
add
inc
test
loopne
inc
popa
jb
xor
sub
xchg
pop
and
dec
add
nop
lahf
add
dec
lret
movb
lds
fidivrl
flds
cwtl
mov
mov
or
aam
ffreep
std
jge
push
adc
out
std
jle
mov
rcrl
fsubp
xchg
push
pop
xchg
pop
enter
or
sub
cmp
dec
sub
loopne
adc
das
xchg
xor
int3
and
dec
push
push
add
sahf
mov
jbe
pop
in
adcb
jmp
stc
inc
jo
pusha
xchg
add
ss
loop
push
xor
xchg
xchg
jg
sub
pop
out
lcall
jae
cltd
popa
sub
mov
je
adc
adc
and
or
int
jae
sbb
pushf
xchg
jl
pop
add
fwait
xor
inc
adc
imul
adc
jle
xchg
fiaddl
cmovl
xor
pop
mov
xor
push
pop
mov
insb
es
insl
and
mov
test
mov
out
ja
movsl
fistps
push
xchg
push
and
rolb
test
out
push
mov
andl
fcomip
into
push
fs
std
out
dec
vpor
jae
es
cmpsl
dec
leave
cmp
jo
push
xchg
jb
push
mov
lahf
fnsave
mov
push
sti
shld
aas
cmp
loopne
mov
faddl
jp
pop
and
je
clc
xchg
push
fs
mov
stos
dec
adc
jmp
push
and
aam
fstps
xor
add
xchg
push
jg
movsb
mov
outsb
jmp
outsb
jecxz
nop
pop
mov
pushf
sub
fnstcw
subb
xchg
mov
and
push
das
xchg
movl
dec
jp
outsb
jb
test
adc
enter
sbb
mov
gs
push
mov
pop
pop
pop
stos
in
inc
pop
pop
jno
popa
and
adc
or
gs
rclb
es
inc
mov
insb
les
fldenv
and
inc
or
xchg
sub
and
mov
sar
sbb
daa
iret
push
jmp
mov
adc
mov
inc
aad
in
enter
in
or
sub
lods
pusha
mov
repnz
inc
fstpt
stos
les
sub
inc
mov
iret
push
xchg
mov
repz
ja
and
and
lods
push
ret
push
insb
jmp
and
push
fwait
inc
test
dec
jns
push
movsb
pusha
je
push
push
add
xchg
sarl
lahf
enter
pop
filds
pop
or
lea
roll
mov
test
in
sbb
sahf
in
jb
mov
es
inc
jecxz
shll
jne
inc
popa
fcomps
pop
mov
pushf
outsl
je
mov
movsl
pop
fs
xor
sahf
lret
mov
mov
test
push
pop
andl
subb
xor
push
sub
xchg
cmpsb
pop
iret
shl
mov
test
pop
jge
rcll
out
fisttps
ds
fnstsw
repnz
ja
pop
cltd
mov
lahf
fistpll
rclb
sti
and
adc
pop
fiadds
mov
adc
pop
jg
and
outsb
xchg
popf
mov
sbb
push
inc
mov
jg
fdivl
mov
je
fnsave
pop
pop
vpsubw
sub
mov
mov
inc
pop
cli
fs
frstor
inc
roll
imul
sub
int
add
int
push
sahf
push
add
cmp
cld
jg
mov
clc
push
test
and
xchg
dec
aaa
xchg
stc
jp
adc
cmpsl
mov
cmp
fs
mov
inc
mov
lahf
and
pop
pop
push
jmp
cmp
movsl
andb
add
jbe
scas
int
xchg
movd
aad
in
outsl
sahf
stos
xchg
xchg
dec
pop
mov
and
imul
out
arpl
push
aas
in
fwait
add
adc
sbb
xor
mov
push
ret
xchg
cld
rcr
movsb
inc
sub
jmp
sub
aad
testl
test
fldcw
push
fs
lcall
push
mov
or
push
icebp
jl
loope
or
aas
in
mov
adc
lods
mov
insb
push
lcall
out
adc
test
add
aad
inc
sub
mov
mov
cmp
cmp
and
adc
fisubrs
out
jne
loope
ret
sbb
fcompl
movsb
icebp
pop
mov
dec
mov
cmp
mov
ljmp
mov
and
push
inc
jne
dec
jb
icebp
xor
int
gs
cmp
jb
stos
push
push
dec
movsb
mov
mov
cmpsb
push
mov
pushf
adc
sbb
js
dec
lahf
mov
shrl
pop
cmpsb
or
in
dec
ret
js
leave
int
mov
pop
sbb
xchg
push
test
mov
insl
lock
mov
jnp
mov
int
in
popf
popf
mov
add
jge
popa
test
sti
test
dec
and
mov
dec
test
mov
outsb
mov
in
dec
push
push
icebp
fbld
out
repz
push
pop
xchg
scas
sahf
xor
jle
sub
fwait
clc
mov
push
divb
lock
sbb
test
popf
sbb
sahf
mov
sbb
repz
ret
sbb
xchg
pusha
xor
jmp
gs
daa
daa
cmp
outsl
aaa
cmp
sub
mov
sbb
fdivrl
cltd
add
mov
imul
mov
enter
mov
adc
cmc
xlat
jo
mov
xchg
xor
cmp
inc
ja
mov
push
push
and
dec
xchg
xchg
rep
mov
dec
je
xor
xchg
popf
ljmp
movsl
ffreep
int
shrl
jbe
sbb
dec
xor
movsl
aaa
sahf
int3
outsb
inc
push
test
lcall
and
stos
hlt
or
and
data16
inc
shl
dec
pop
xor
aad
outsb
pop
imul
shlb
adc
mov
les
icebp
or
cmp
aas
mov
sub
dec
test
lcall
mov
hlt
push
jns
aad
xchg
cmp
inc
xchg
mov
mov
pop
orl
fisubs
lea
mov
ret
repz
stc
mov
or
add
and
imul
stc
mov
daa
test
mov
lret
push
add
jl
sbb
addb
cmpsl
dec
mov
jns
or
sub
daa
xor
and
mov
adc
sub
repnz
sbb
nop
mov
and
xchg
lret
in
fmull
lahf
or
mov
ja
mov
hlt
lcall
mov
jmp
arpl
sub
dec
mov
scas
fsub
cmp
inc
shlb
mov
inc
jbe
out
insb
push
cmp
mov
jge
xchg
adc
negl
sti
sbb
lds
cltd
push
mov
or
pop
push
xchg
test
sahf
dec
mov
das
mov
push
mov
lret
in
fcompl
fdiv
fidivrl
and
movsb
imul
pop
push
and
aaa
ret
dec
dec
popf
outsl
pop
fs
call
scas
inc
leave
mov
outsl
xlat
test
loope
mov
pusha
or
add
mov
mov
mov
into
mov
fstpl
adc
push
push
aas
and
push
push
imul
sub
xchg
dec
dec
xor
adc
movsw
loopne
xor
or
push
int
aaa
in
sarb
dec
sub
sbb
shrl
pop
call
movsb
pop
lods
scas
and
add
pop
sbb
xor
sbb
movsl
xchg
lahf
xor
adc
mov
mov
xchg
cmovb
ja
insl
mov
cmp
cltd
loope
addr16
mov
cmp
clc
adc
fstpl
push
lock
xor
inc
bound
repnz
pop
stos
sub
jb
mov
mov
xor
mov
cltd
in
mov
mov
xlat
repz
shll
aas
fxch
push
and
mov
mov
cli
jbe
cmpsb
push
js
fwait
dec
ds
or
in
push
gs
jo
cld
mov
xchg
dec
subl
sub
sbb
mov
lret
lea
mov
in
sub
loop
shll
sbb
lahf
xchg
mov
pop
je
les
shrb
and
pop
rcrb
adc
and
jno
push
pop
jnp
lcall
xor
inc
outsb
cmp
lods
cmp
into
mov
repz
stc
cmpsb
lods
mov
ds
rcr
sub
cmpsb
sbb
adc
jg
loop
jp
jb
lock
gs
nopl
in
cld
scas
mov
scas
inc
imul
in
add
adc
sahf
add
cltd
push
mov
or
fsubrl
mov
and
fldl
shlb
adc
out
jbe
out
mov
xor
stos
xchg
pop
movsb
movsb
pop
mov
xor
sub
xchg
lods
aam
stos
xor
push
adc
mov
inc
inc
push
inc
pusha
jo
jae
sbb
add
in
push
or
and
inc
call
loope
pusha
arpl
mov
outsb
sub
mov
mulb
cmpsl
mov
loope
inc
sbb
gs
repnz
and
loopne
or
shl
xor
int
imul
jno
adc
push
mov
test
mov
addr16
push
dec
movsb
push
mov
mov
jle
rcrb
cmp
sbb
outsb
popf
dec
movsb
pop
enter
dec
sbb
incl
loope
pop
pop
inc
cmc
ja
push
push
adc
xor
repnz
or
imul
push
pop
sub
cmpsl
hlt
es
lea
dec
jg
lret
cli
pop
daa
jmp
in
pop
icebp
je
and
jge
cwtl
pop
xor
cmpsb
cmpsl
ficomps
daa
xchg
fsubs
mov
mov
outsb
je
mov
and
dec
popf
sbb
ds
in
or
out
and
in
notrack
hlt
adc
movsl
push
jmp
jb
xchg
pop
and
jne
jg
xchg
add
ret
jns
pop
lret
int3
jmp
rcll
inc
adc
add
out
jns
loop
out
mov
int3
rcr
je
clc
or
sti
mov
int
sbb
pusha
mov
test
clc
lcall
es
cmp
sbb
mov
xchg
rcrl
cmp
push
pop
adc
cltd
sbb
dec
sahf
xchg
mov
jecxz
fstps
in
ss
pusha
mov
shrl
test
sub
cmpsb
call
mov
loopne
loop
add
inc
ret
daa
xchg
lock
sbbb
sbb
insl
inc
xchg
idivl
sbb
lods
test
stos
das
es
jl
out
pop
xor
jb
fdivl
rorb
insb
movsb
pop
or
leave
bound
jle
add
in
andb
and
sub
and
jo
scas
add
xchg
jg
lods
fsubl
clc
js
mov
data16
in
in
pop
xor
or
jmp
fcoml
insl
adc
mov
rorl
popa
dec
push
je
fwait
in
sub
jge
fmul
xor
add
ret
aaa
jmp
sub
xlat
cmpsl
repz
jecxz
rcrl
stc
cmp
in
rcr
fs
es
ret
gs
sti
sar
cs
pop
lods
mov
ljmp
and
cmpsl
ljmp
divl
xchg
xchg
dec
cmc
and
sahf
mov
jne
ljmp
test
pop
lahf
pushf
and
out
loopne
js
push
imull
scas
pop
dec
lcall
adc
test
inc
adc
jno
shll
jbe
lods
cltd
ja
mov
decl
lds
dec
pusha
fildl
jp
mov
mov
and
xor
andb
outsb
aam
in
aas
cwtl
gs
or
xchg
or
dec
sahf
fs
fdivs
lahf
jne
aad
fdivp
subb
sbb
das
and
ret
test
movsb
in
sbb
jbe
jle
imul
inc
lcall
in
arpl
xor
xchg
dec
dec
adc
add
adc
dec
inc
jnp
imul
xchg
stos
in
cmc
lret
jmp
sbb
sub
jne
inc
jnp
imul
xchg
stos
in
cmc
lret
jmp
sbb
sub
pop
jne
inc
jnp
imul
xchg
scas
in
cmc
lret
out
and
aas
adc
dec
inc
jnp
stos
movsl
fwait
mov
das
mov
test
gs
mov
mov
std
movsb
shlb
push
push
sub
pop
adc
and
xor
int3
lcall
test
xchg
lret
mov
adc
push
or
je
add
jo
and
xor
push
adcl
xor
mov
dec
lock
stc
cmp
add
sub
dec
and
sub
push
lcall
sysexit
rcll
mov
xchg
push
subl
push
jbe
xchg
lret
fdivl
jge
aam
imul
xor
lcall
sbb
mov
or
or
in
rorb
stos
lret
mov
xlat
test
or
mov
or
dec
pop
cmc
je
mov
mov
push
mov
lock
add
sub
inc
xor
jnp
pop
ss
cld
jmp
xchg
add
fwait
jg
sub
xor
je
inc
xchg
inc
xchg
aam
sbb
insb
sub
rorb
sbb
orl
and
negl
cwtl
mov
fcmovbe
lret
or
mov
adc
or
jp
push
mov
mov
stos
ljmp
xchg
outsl
adc
sbb
jae
mov
test
movl
ja
jno
push
push
jne
mov
out
xchg
lret
mov
inc
sbb
cmp
pop
adc
and
xor
les
hlt
stos
test
xchg
lret
mov
inc
sbb
cmp
pop
adc
and
xor
les
stos
mov
les
add
mov
popa
inc
mov
es
and
sti
push
popf
ljmp
ljmp
loop
inc
pop
or
mov
add
ret
or
push
fwait
rcrl
push
popf
mov
cmpsl
enter
add
jns
mov
or
lea
popf
inc
inc
xchg
xchg
rorl
into
lock
test
jno
int
add
sbb
sbb
ss
pop
leave
lahf
sub
sbb
adc
or
or
lds
add
sub
outsb
loopne
addl
pop
or
add
inc
imul
fcmovnbe
pop
lock
push
mov
daa
dec
pop
test
and
sarb
stos
fcompl
cltd
mov
fdivrs
mov
push
loopne
mov
cmpsl
pop
or
jns
cmp
xor
sub
or
inc
mov
xor
int
imul
out
ja
fs
sbb
mov
int
inc
js,pt
pop
lds
dec
cli
cmp
push
jno
or
mov
ret
and
pop
xchg
cmpsb
jl
fldt
jb,pn
jno
push
cli
fsubrl
xor
dec
stos
pop
daa
data16
sbbb
mov
or
push
dec
in
mov
in
fwait
pop
dec
or
les
mov
sub
arpl
jnp
jns
out
pusha
or
pop
outsl
cltd
mov
sahf
sbbl
in
fldcw
push
jo
ret
sti
shll
leave
sub
pop
push
jl
add
adcb
or
loope
mov
mov
push
push
rcrb
iret
mov
cmp
and
sti
fcoms
xor
sarl
mov
xlat
xchg
inc
pop
inc
sbb
xlat
fwait
mov
inc
pop
mov
jnp
fwait
or
mov
push
je
in
adc
lahf
mov
in
in
dec
xor
sub
ret
push
add
jbe
inc
mov
and
mov
sbb
push
push
adc
lock
adc
lahf
or
or
push
test
mov
mov
js
add
xchg
call
xchg
mov
mov
xor
scas
ret
xchg
out
das
fwait
or
leave
add
or
add
adc
mov
mov
es
inc
xchg
cmp
repz
pop
fisubrl
pop
fstpl
xchg
sbb
out
repnz
or
jmp
negb
jmp
mov
lret
lret
sbb
jle
jae
dec
ror
jns
bswap
cli
mov
in
out
or
pop
int
xchg
xchg
popa
inc
popf
inc
inc
jg
push
inc
mov
fs
aad
push
xchg
ret
cwtl
ss
scas
fcoms
push
shrl
jecxz
js
mov
or
movsl
stos
lea
shl
and
test
add
inc
xchg
inc
mov
sti
dec
int3
lods
into
loope
or
mov
movsb
cmp
enter
inc
shrb
mov
cmp
addl
and
dec
ss
push
les
jl
jp
cmc
push
push
insl
push
orb
or
cmpsb
jle
fwait
ja
mov
mov
roll
inc
push
pop
add
jl
dec
cmp
jo
mull
loopne
mov
xor
mov
dec
or
pop
pop
je
push
hlt
loope
cwtl
mov
jb
dec
leave
ljmp
jg
sub
or
lds
inc
xchg
jg
shl
cltd
cld
and
xor
inc
mov
jl
mov
add
pushf
and
sbb
test
jp
lods
jo
icebp
pop
push
fs
insb
ljmp
sbb
imul
inc
or
cwtl
movsb
and
aam
jo
mov
lcall
xlat
or
enter
fcompp
push
and
pop
pop
or
fadds
cmovnp
push
test
scas
fmull
aas
push
popa
mov
sbb
mov
mov
cwtl
movsb
aam
xor
jmp
mov
repz
bound
mov
clc
rcrl
aad
xor
aas
test
sti
aas
data16
fistps
sub
aas
hlt
xor
lods
mov
adc
ljmp
jnp
inc
mov
jl
pop
pop
mull
dec
mov
xorb
xor
xor
xor
jae
pop
push
sbb
test
lret
dec
movsl
sbb
push
jns
push
xchg
add
xor
mov
mov
mov
test
dec
loopne
fdivl
in
adc
mov
int
pushf
mov
mov
xchg
iret
cmp
inc
jle
xor
dec
fcompl
xor
std
sbb
pop
test
inc
arpl
sbb
push
xchg
xorb
pusha
popa
cmp
mov
xchg
push
or
push
push
inc
loop
sub
pop
fmull
iret
xchg
and
mov
pop
pop
jecxz
xchg
paddsw
mov
stos
ds
jp
orb
in
pushf
inc
lods
outsl
dec
add
push
mov
aad
jno
push
ja
jne
sub
adc
and
std
inc
std
push
mov
push
sbb
nop
and
mov
rclb
aam
and
inc
dec
aam
out
add
stc
cmp
mov
add
imul
mov
gs
jl
loope
push
test
xchg
cld
adc
pop
add
cltd
jnp
jp
cmpsl
outsl
mov
inc
gs
jno
scas
call
out
add
test
int
mov
sub
mov
int3
mov
loop
popf
pop
stos
stos
or
add
pop
dec
add
xchg
mov
ret
fisubl
aaa
out
or
xchg
iret
xor
es
loopne
fcoml
jecxz
or
adc
fcmovbe
mov
or
stos
and
push
inc
fisubrs
mov
cwtl
dec
jo
dec
enter
addl
sbbl
data16
and
adc
mov
rcrl
roll
es
pop
iret
icebp
add
xlat
xchg
cmp
shlb
popa
arpl
sbb
pop
inc
pusha
je
rcl
mov
xlat
scas
cli
es
imul
and
xchg
test
lret
cmpsl
pop
dec
fistps
divb
jnp
cltd
xchg
xorb
fucomp
add
repz
dec
sub
push
mov
mov
mov
xchg
push
and
lret
xor
mov
popf
imul
xchg
or
dec
movsb
ficompl
and
push
mov
cs
movsl
inc
jae
sbb
in
bound
xor
dec
daa
lock
movsl
rclb
pop
cmpsl
pop
mov
adc
push
call
cmp
lea
push
inc
cmp
pop
jno
movsl
stos
scas
mov
mov
into
test
gs
xchg
cmp
jbe
and
sahf
loop
mov
adc
adc
xchg
rcrb
xchg
sub
ss
jns
mov
popa
dec
icebp
add
mov
lods
lods
xchg
loop
sbb
leave
and
sub
lods
outsl
out
int
outsb
cmp
jne
sub
jbe
push
sbb
dec
sahf
sub
add
xchg
stos
pop
push
xchg
es
shl
mov
inc
nop
insb
stos
inc
fs
repnz
pop
loop
dec
dec
mov
sahf
incl
or
push
xor
or
sbb
jp
sub
xchg
les
xchg
dec
les
je
hlt
es
xorl
lods
fs
icebp
xor
push
or
or
sbb
inc
or
fadd
cmp
pop
ficomps
mov
cli
insl
cmp
adc
mov
test
sub
inc
jb
ljmp
testb
jecxz
push
in
mov
pop
add
xor
jbe
stos
pop
cmpsl
jg
out
push
adc
mov
dec
test
mov
lds
jmp
or
push
popf
fwait
imul
in
mov
sbb
addr16
enter
pop
pusha
cmp
jne
ret
addl
pop
sbb
pop
push
lea
loopne
jne
xor
dec
push
fsubl
mov
loopne
in
jp
jecxz
sub
ja
into
pop
test
sub
mov
cld
xchg
es
mov
enter
add
sti
rcrb
mov
sbb
shll
sbbl
push
jo
loope
or
mov
ja
shrl
pop
fs
add
mov
sbb
fisubs
xchg
mov
add
out
aas
aas
stos
fdivs
xlat
dec
int
push
add
fildll
xor
or
in
pop
lahf
jg
push
pop
inc
mov
mov
mov
jo
xor
mov
lods
sub
aam
inc
cwtl
das
call
addr16
adc
aam
pop
popf
test
lock
mov
mov
and
sub
out
loope
shll
insb
lret
inc
pusha
jo
pop
test
or
mov
ds
lret
pop
out
shlb
aaa
or
aas
and
sbb
stos
pop
and
mov
outsb
adc
push
pop
xchg
in
xchg
out
xchg
sub
imul
add
inc
push
xchg
adc
xchg
dec
mov
add
pop
adc
push
jecxz
cmp
scas
adc
jle
jp
sbb
pop
cmc
insl
lcall
or
sbb
jb
mov
hlt
cmp
sbb
arpl
adc
sub
cmp
mov
adc
jbe
pop
testb
jnp
jge
les
dec
xchg
dec
aad
xchg
pop
add
cmpsl
call
sti
jno
push
imul
xchg
push
leave
cli
push
cmpsl
fimull
ljmp
mov
pop
or
loop
sub
jo
inc
into
out
insb
aaa
jg
or
lods
sarb
pop
popf
pop
sub
addr16
pop
push
add
add
jno
ret
and
xchg
mov
cld
xchg
cmp
movsl
andb
lods
nop
and
iret
cld
jae
sub
pushl
or
pop
inc
xchg
es
aas
and
pop
xchg
sub
add
push
push
sarl
mov
cwtl
jg
mov
push
ret
mov
cld
pop
mov
pop
xlat
insl
test
jg
jbe
lea
add
mov
inc
jmp
cmpsb
sbb
out
imul
dec
mov
ljmp
ljmp
aas
ret
test
subl
sar
sarl
fs
mov
cmc
mov
mov
dec
jns
insl
push
inc
jecxz
in
shll
dec
jae
add
movsl
pop
fldenv
xrelease
leave
cmpsb
das
fsubp
push
into
push
inc
jb
mov
je
scas
lahf
mov
mov
outsl
xchg
sub
in
xor
xor
adc
lahf
addr16
cld
cs
or
ret
subb
mov
or
mov
jb
push
or
mov
fwait
inc
lods
or
out
test
cltd
pop
aam
mov
scas
jge
into
imul
bts
sub
cmp
jae
out
pop
sub
dec
inc
cmpsb
js
icebp
xchg
xchg
jl
test
je
outsl
mov
fld
loopne
ds
mov
cmp
sub
aaa
inc
push
push
bound
jl
fdivrl
insl
jg
imull
adcl
std
mov
mov
pop
imul
mov
paddsb
stos
pop
or
push
sbb
jle
pusha
fsubp
push
mov
aam
scas
mov
std
test
push
sub
cld
notb
cmp
out
mov
idivl
push
test
xor
lds
fmuls
aaa
ffreep
outsl
fucomi
sub
add
xchg
test
xchg
lock
push
or
mov
adc
outsb
es
es
scas
sarb
sub
pop
sbb
daa
cwtl
mov
dec
popa
dec
and
in
loope
aam
jmp
mov
jbe
cmpsl
xchg
sbb
movsl
stos
rcll
std
loopne
movsb
les
mov
out
push
rcrb
jne
into
jecxz
jl
jae
scas
popf
or
mov
push
lds
ja
sahf
cmp
pop
aad
sti
pusha
push
adc
or
call
sbb
lods
ljmp
lock
xchg
aad
inc
add
jmp
movsb
repz
dec
push
int
in
pushf
mov
jg
mov
pop
imull
insb
sub
loope
cmovnp
pop
mov
and
adc
sub
jne
dec
loope
insl
xor
mov
xor
inc
cmp
mov
pop
dec
pop
mov
pop
leave
shlb
pop
std
inc
je
pop
fdivp
das
jmp
sbb
dec
dec
push
adc
fistps
sbb
pop
lahf
pop
sub
push
bound
out
sub
pop
push
enter
fs
pop
push
aas
ds
dec
cld
push
in
outsb
popa
inc
lea
sub
arpl
es
jl
mov
dec
pop
jb
push
and
test
jle
push
gs
push
lods
leave
enter
fcompl
sub
xchg
xorb
mov
mov
and
dec
loope
mov
outsl
out
das
in
push
test
push
and
cmp
xor
xchg
adc
xchg
enter
rcrb
push
movsb
and
mov
pusha
clc
add
outsl
imul
jb
imul
js
push
sbb
iret
inc
inc
pop
push
imul
add
rcrl
daa
mov
inc
and
inc
jnp
out
jecxz
outsl
mov
ljmp
pop
and
std
es
setp
mov
imul
mov
out
jo
jbe
inc
xchg
lret
lods
out
fwait
xlat
pop
negb
loop
mov
mulb
pop
mov
push
mov
inc
xor
push
push
push
dec
lea
into
jle
inc
xor
enter
dec
dec
fcomip
outsb
and
fcomip
inc
das
mov
mov
and
addr16
pop
cmp
mov
loop
push
lret
mov
cmc
dec
adc
mov
dec
sub
lock
sbb
rorb
jmp
adc
cmc
repz
dec
xor
stos
dec
lock
dec
cld
fists
push
mov
fs
mov
pop
add
lock
fldenv
xchg
adc
or
xchg
ljmp
clc
rcl
jmp
mov
or
in
into
pushf
inc
pushf
or
inc
pushf
fists
mov
mov
mov
insl
adc
arpl
sbb
or
jnp
incl
push
lahf
sub
scas
mov
fdivl
xchg
dec
push
addb
testl
lock
std
nop
push
orl
movsb
in
stos
sbb
sub
div
scas
sub
push
clc
push
push
xchg
popa
fs
inc
jge
insb
xor
push
push
outsl
out
push
orb
xchg
mov
xor
lods
pop
mov
cmp
or
adc
xlat
jecxz
es
mov
sbb
push
stc
pusha
fdivrl
adc
sbb
in
imul
in
loopne
pop
dec
loope
sbb
adc
xchg
mov
popf
loope
xor
mov
xchg
mov
je
repnz
xchg
daa
add
and
lret
mov
cltd
or
sbb
and
sub
aaa
or
and
or
push
mov
xor
push
inc
cmp
sbb
test
cmp
cs
or
arpl
mov
loopne
pop
ss
adc
out
lret
add
dec
mov
and
pop
aaa
adc
add
push
imul
pop
jg
adcl
out
pop
and
jnp
outsb
dec
es
or
lds
cmp
outsb
cs
into
pusha
xchg
popl
addb
and
aam
dec
mov
and
cmpsb
lret
inc
pop
cmp
mov
jno
jbe
mov
les
notb
scas
sub
int
loopne
test
push
addb
push
xchg
rorb
pop
push
outsl
cmp
cmp
inc
imul
sbb
test
sub
out
cmp
adc
rcrb
or
sub
jle
movsb
pop
xchg
adc
sahf
fldcw
xor
call
ss
cmp
mov
and
mov
add
dec
sbb
ss
sub
adc
sub
dec
xchg
xlat
stos
push
mov
pusha
xchg
out
jle
lret
push
icebp
xchg
mov
add
adc
rolb
inc
lods
jne
mov
cmp
int3
loope
xlat
or
lock
or
sbb
ret
jl
or
pop
or
and
js
iret
cltd
mov
dec
jb
in
divb
outsb
inc
jl
rorb
or
jo
sub
testb
sbb
in
lods
mov
mov
sub
int
push
imul
ljmp
and
ret
add
and
and
in
jmp
fmuls
push
jl
cli
test
xchg
mov
shrb
fidivrs
incb
daa
stos
pusha
out
test
in
test
sbb
dec
stos
std
imul
out
dec
idiv
cmp
inc
mov
jle
lods
mov
loope
xor
push
fcomp
cmp
ret
mov
addr16
and
mov
adc
js
xchg
dec
jle
hlt
pop
jae
movsb
and
dec
cmpsb
arpl
jl
jp
jne
push
popf
loope
adc
rorl
daa
jno
mov
das
pop
dec
add
adc
lahf
repz
cmp
or
sub
pop
push
jecxz
stos
jp
pop
sub
mov
dec
cmc
jb
dec
add
rorl
add
jb
loop
in
mov
scas
mov
mov
in
pop
dec
rcrl
int3
adc
inc
push
xchg
mov
xor
adc
loopne
cmp
jb
mov
mov
stc
hlt
int3
insb
dec
adc
jo
inc
test
cmp
in
inc
add
pop
push
or
inc
or
cmp
mov
or
inc
dec
arpl
sbb
popf
fdivrp
cwtl
or
xor
cli
jo
xor
frstpm(287
mov
push
lret
cmpsl
repz
xchg
cmc
sti
inc
cltd
loope
adc
test
inc
cmc
push
lahf
push
inc
loop
cwtl
adc
fwait
mov
pop
sub
lret
pop
dec
aam
repnz
js
and
sbb
leave
push
push
shl
nop
and
shl
inc
test
mov
xchg
sbb
adc
outsl
mov
psrlw
std
sbb
cmp
jbe,pt
lahf
fucomi
dec
xor
sahf
sub
mov
xor
jbe
cmp
jne
push
outsl
dec
jl
das
and
cmp
pusha
mov
sub
ja
inc
sbb
cmp
and
cmpsl
push
push
dec
and
aam
mov
dec
mov
lds
jecxz
jne
out
nop
and
jns
shrb
out
ret
and
sbb
out
repnz
push
or
sub
imul
pop
pop
dec
xchg
sbb
cli
sarl
mul
ss
sbb
jae
push
inc
movsb
sarl
hlt
xchg
and
shl
fcomps
jg
mov
mov
adcl
cmc
adc
inc
mov
lods
cmpl
or
push
dec
dec
rcrb
push
mov
gs
or
and
or
xor
jb
aas
or
xor
es
cmp
sbb
and
test
and
scas
mov
loop
mov
push
lret
push
cmp
and
aam
imul
sbb
movsl
xchg
hlt
and
adc
adc
mov
add
jge
fmuls
mov
fsubl
sti
pusha
push
stc
xorb
jg
fistpl
in
out
mov
ficompl
pop
orl
push
lds
testl
adc
jnp
and
shlb
jne
add
lock
pop
or
imul
jno
mov
popa
sbb
lds
sbb
faddl
adc
push
es
aas
and
stos
mov
cld
cmp
pop
xchg
adc
mov
test
mov
jmp
xchg
pop
and
xchg
aaa
pop
dec
lods
leave
cs
insb
popf
sub
xor
xor
sbb
push
cmp
cmc
jmp
cs
jo
pop
bound
popf
inc
in
sbb
imul
inc
sbb
stc
test
lods
pop
rorb
sbb
bound
add
arpl
dec
xlat
test
daa
shlb
cmp
addr16
movsb
lock
pop
stos
gs
rcrl
fs
push
xor
jl
stc
int3
stos
fs
xchg
into
enter
push
dec
adc
cwtl
insl
scas
test
inc
pop
out
int3
dec
push
push
sbb
das
xchg
mov
mov
mov
lahf
stc
jp
add
in
xchg
ljmpw
movsl
test
sbb
mov
and
sahf
aas
jl
stos
cmc
push
loopne
mov
sbb
fmuls
xchg
push
es
lahf
out
mov
mov
ficoml
inc
sbb
cmp
pop
adc
and
xor
les
hlt
stos
test
xchg
lret
mov
inc
sbb
cmp
pop
adc
and
xor
les
hlt
stos
test
nop
lret
mov
inc
sbb
cmp
add
or
push
lcall
test
test
movsb
cli
xor
inc
sbb
pop
jae
pushf
mov
test
xchg
ret
push
loope
icebp
andl
lahf
jle
mov
mov
and
and
movsl
push
rcrl
lea
icebp
orl
jle
mov
add
adc
and
push
jae
sub
lahf
dec
icebp
pop
mov
es
or
adc
push
arpl
scas
push
popf
inc
loope
cwtl
outsl
test
lcall
sti
cld
cmp
push
and
pop
sub
shrl
cmp
mov
and
xor
mov
into
scas
aas
push
xchg
or
push
dec
ret
rorb
pop
jae
popa
je
jno
adc
push
push
jmp
sbb
jle,pt
xchg
pop
pop
loope
addl
out
movsb
adc
and
xor
out
fsub
shrl
dec
sub
std
popa
jb
leave
popa
push
xor
inc
ficoms
and
adc
loope
dec
vmptrst
js
pop
sbb
call
fildl
and
xor
lcall
ds
jmp
jle
mov
sahf
pop
scas
inc
mov
adc
xor
xchg
inc
mov
and
pop
aad
mov
inc
jmp
ljmp
jg
dec
in
push
mov
xchg
cs
dec
call
sbb
jle
testb
popa
iret
or
js
jle
dec
mov
lods
inc
mov
pop
rorb
pop
mov
mov
popa
scas
jno
add
adc
and
xor
rorl
push
loope
icebp
orl
jle
mov
popa
scas
jno
add
adc
and
xor
rorl
push
and
loop
adc
mov
add
pop
jnp
cmp
xchg
mov
jae
aaa
in
mov
inc
pop
or
fs
push
or
icebp
addr16
lds
xchg
add
inc
dec
dec
pop
aad
mov
in
xchg
jmp
jmp
pop
rorl
add
fnsave
or
cmpl
pop
jecxz
push
inc
sub
sub
or
fisubrs
ljmp
ss
pop
jl
repz
idivl
rol
shlb
imul
push
adc
push
ljmp
test
sub
adc
shlb
xchg
dec
lods
pop
dec
andl
hlt
ljmp
repnz
inc
movsl
cmp
pop
mov
shll
stc
sub
inc
lret
lret
mov
rcl
push
into
mov
mov
mov
push
xor
add
sbb
orb
push
mov
add
lock
jmp
jle
pop
popa
mov
test
sti
iret
int
mov
movb
popf
in
test
mov
add
mov
sahf
fcom
sarb
je
xor
js
ljmp
sbb
jno
jb
add
fbld
call
enter
push
ss
in
xchg
iret
jg
push
ds
fwait
std
fs
aas
push
fwait
iret
sarl
push
xor
mulb
or
sub
out
imul
imul
test
mov
test
shlb
push
pop
push
dec
lods
jbe
sar
into
scas
push
push
xchg
pop
inc
xor
mov
repz
addb
in
jle
xorb
fisttpll
fwait
add
mov
and
imul
clc
test
fisubl
iret
jne
xchg
rorl
movsb
movsb
loopew
je
mov
mov
jno
mov
cmp
pop
dec
aad
sahf
jb
push
icebp
rolb
scas
inc
cld
adc
mov
cli
sbb
lods
repz
pop
xchg
je
xor
into
pusha
jo
sti
sbb
push
mov
decl
data16
out
dec
stc
mov
sbb
push
mov
shl
addr16
scas
idivl
cs
xor
insl
add
rcl
pop
push
push
sbb
in
frstor
cwtl
decl
sahf
jle
int
push
fstps
add
test
loopne
fsub
popl
dec
jmp
sub
inc
xchg
andb
inc
pop
enter
jmp
sub
sarl
in
jb
mov
inc
enter
push
ss
adc
and
sbb
ror
out
inc
cld
and
push
push
je
shlb
jns
sbb
adc
push
cmp
stos
xchg
mov
jge
shll
in
mov
clc
jl
fiaddl
inc
dec
sub
mov
pop
aaa
imul
inc
push
mov
mov
inc
lret
pop
cli
or
daa
arpl
rcrb
mov
inc
adc
cmp
lds
loope
adc
jne
stc
pop
mov
stc
inc
xchg
and
and
sbb
popf
leave
cmp
mov
xor
xchg
adc
xlat
loope
sti
pop
aam
mov
mov
inc
xorl
mov
cs
sub
mov
clc
das
and
sbb
and
sub
pop
jnp
mov
mov
shrb
mov
pop
je
stos
dec
push
push
pushf
dec
movsb
dec
mov
iret
sbb
xlat
insb
rclb
call
sub
test
movsl
xchg
les
pop
shll
lods
aaa
movsl
sub
jg
cmp
call
xchg
jo
adc
das
lahf
getsec
sub
lock
dec
push
xor
cmp
sub
gs
insl
mov
mov
cmp
inc
aaa
stc
loop
in
jge
mov
dec
loope
cmpsb
in
nop
xor
movhps
test
dec
lods
lahf
outsb
mov
jo
cmpsl
mov
fsts
and
push
hlt
push
push
mov
xchg
dec
in
aaa
ljmp
pop
xor
inc
lcall
pop
sbb
push
add
or
and
dec
test
dec
divb
fsubl
jne
popf
jbe
dec
push
bound
out
push
jb
mov
pop
inc
repnz
ss
add
xchg
testl
and
xor
iret
sbb
sarl
imul
dec
fwait
rcrb
pusha
ja
rcll
sarl
and
mov
jns
insb
notb
test
cmp
rcrb
fdivr
fldl
and
fcmovne
push
ljmp
test
mov
mov
mov
and
mov
add
out
test
orl
mov
movsl
jae
xchg
inc
cmp
in
add
sbb
mov
cmp
cmpsb
filds
jle
dec
scas
ret
pop
loop
js
andb
inc
xor
or
lret
lock
dec
pop
cltd
dec
es
xchg
inc
in
cmpsl
popf
inc
fdivs
push
sbb
dec
or
jle
or
call
imul
dec
dec
call
jbe
cmpl
fimull
inc
inc
hlt
pop
sub
ss
mov
add
sbb
and
xchg
adc
mov
inc
sbb
int3
test
mov
jmp
loope
jno
jg
inc
mov
loope
push
add
mov
add
lods
inc
shlb
push
loop
jmpw
dec
cld
int3
repnz
xor
test
hlt
mull
cmc
addr16
fndisi(8087
clc
or
stc
jae
out
dec
adc
lods
dec
incl
ret
popa
push
pop
arpl
loope
xor
mov
mov
lods
jmp
in
aas
loope
lea
jle
jae
lret
and
inc
xchg
in
into
jge
inc
mov
dec
fdivr
sub
lds
mov
add
enter
lea
pop
mov
popf
and
xchg
aam
sub
mov
xchg
int
inc
or
lds
sbb
pop
ja
cld
lods
leave
add
iret
std
dec
lcall
lret
xor
add
orb
xchg
shlb
and
fstps
icebp
push
mov
fsubrp
lods
movsb
imul
loope
cmp
push
movsb
loop
ja
sbb
push
in
push
cmp
lods
sarb
iret
rolb
push
dec
mov
neg
sti
jle
mov
sbb
mov
pop
sbb
lods
or
dec
sbb
and
movsl
or
mov
fadd
dec
fmul
mov
adc
data16
ds
aam
inc
push
mov
aad
inc
stos
dec
sbb
add
popf
xchg
mov
push
lea
adc
movsl
add
mov
cld
test
out
inc
les
fldt
stc
and
jmp
pop
add
sbb
dec
mov
mov
call
xor
insb
mov
push
adc
dec
mov
cmp
loop
pop
inc
in
and
in
jle
test
stos
or
mov
jmp
jmp
std
jmp
jl
leave
xchg
dec
stc
xor
pop
mov
pop
push
mov
mov
sbb
cmp
mov
mov
sarb
inc
xchg
mov
andl
mov
movsl
inc
loopne
dec
cmp
jl
iret
jno
and
fstl
pop
lods
in
out
jmp
inc
ficoms
int3
pushf
enter
rorb
loope
mov
jmp
xor
dec
pop
movsl
lcall
pushf
sbb
outsb
movsl
push
sub
xchg
mov
loopne
sub
subb
sub
sbbl
jb
and
out
aas
faddl
test
and
pop
shlb
mov
loope
sub
das
pop
and
mov
add
cli
mov
sahf
out
popf
mov
add
push
icebp
xor
ljmp
ljmp
stos
adc
shrb
push
sbb
xorl
mov
mov
test
mov
stos
aaa
sbb
cs
decb
xchg
sbb
outsl
in
arpl
mov
shll
cmp
inc
fcoml
xacquire
pop
sub
xchg
mov
test
push
jmp
dec
jl
stc
inc
popf
sub
xor
pop
int3
push
ret
cmp
mov
mov
rcrl
dec
ljmp
leave
adc
and
or
sub
js
shr
int
stos
and
xor
ret
jbe
scas
stc
cs
popa
jle
push
sahf
gs
out
rorb
stos
cmp
xor
mov
cmp
cmpsl
push
test
adc
xor
sar
jb
andl
loop
call
mov
in
in
arpl
addr16
inc
stos
testl
fiadds
xor
ret
jmp
xchg
or
jl
gs
xor
jno
lcall
or
dec
ret
push
add
dec
scas
pushf
sub
jl
cmp
in
mov
stos
leave
sub
fnstsw
ss
mov
outsb
int
cmp
fbstp
in
hlt
lods
divl
popa
cs
mov
jo
pop
or
mov
mov
jns
xor
dec
pcmpeqw
shrb
ficomps
pop
aad
sti
fucomp
aaa
fs
mov
dec
cmp
fld
cwtl
fistpl
jbe
aaa
pcmpeqw
push
mov
push
or
pop
inc
adc
mov
inc
fld
push
test
fnstenv
repnz
sahf
dec
mov
mov
xchg
sub
dec
imul
rclb
adc
aas
js
mov
std
in
test
jge
lock
jmp
rorb
std
and
push
lahf
mov
lret
pusha
mov
out
out
leave
mov
pusha
and
sub
or
sti
xchg
cmp
pop
sub
jmp
pop
cltd
fs
sbb
xchg
scas
cmpsb
or
scas
xchg
xchg
lds
mov
out
shlb
xchg
push
mov
into
pop
bound
sub
sbb
scas
jp
xor
push
cmp
cmp
out
jbe
and
and
pop
test
ja
int
repz
jno
or
xor
xchg
mov
push
jl
sub
out
lods
les
adc
pusha
cmpb
stos
xchg
les
pop
lret
pop
lahf
test
add
lock
ss
ss
out
daa
sub
nop
adc
icebp
lock
hlt
das
pop
stc
inc
mov
test
insl
loopne
xchg
dec
xchg
ja
pop
jge
xlat
inc
cmc
bound
adc
out
cmp
adc
jl
xor
divb
inc
movsl
lods
xor
daa
jne
aas
orb
lods
movsb
pop
test
insb
popa
push
lret
push
push
add
dec
inc
cmc
loop
adc
adcl
sbb
mov
and
dec
pop
lods
fs
call
push
jp
ret
sub
outsl
mov
andb
inc
test
subb
ror
icebp
cmpsb
in
cmp
cmc
js
dec
rol
rcrl
xchg
cmpsl
mov
dec
inc
and
shrb
lock
fstps
into
pusha
scas
lock
bound
ret
xor
loope
fnsave
nop
inc
pop
inc
cmp
lds
pusha
rcrb
popa
inc
mov
jge
les
ds
hlt
sub
int3
test
adc
int
mov
push
push
in
cli
dec
mov
ds
add
imul
mov
aas
xchg
cmp
jg
jg
jo
xchg
cmp
lods
ljmp
pop
adc
sbb
shrb
outsl
mov
pop
xor
mov
insb
push
xor
cmp
std
lahf
loopne
insl
in
pushf
int3
movsl
mov
out
lods
pop
inc
mov
add
jecxz
mov
and
sub
into
xlat
or
jmp
push
jns
jae
js
push
cmp
push
push
pop
inc
repz
mov
shlb
call
or
adc
add
adc
mov
outsl
fs
ret
cmp
insl
pop
sub
cmp
pop
aad
je
mov
jecxz
jle
shl
mov
arpl
push
cmc
ret
sbb
aaa
test
sti
loope
jmp
in
sbb
push
xor
xor
leave
dec
test
xor
leave
add
aam
jle
cmp
popf
add
inc
pop
ret
hlt
mov
mov
fsts
jg
add
sbb
push
hlt
gs
push
mov
frstor
movsl
mov
lods
xlat
mov
xlat
popa
jnp
mul
jnp
fidivrs
xchg
popa
adc
pusha
test
addr16
jbe
sub
push
je
out
lock
mov
ret
mov
add
add
cmp
test
ret
sbbl
icebp
andl
inc
enter
repnz
xor
mov
add
and
lcall
fcoms
lret
dec
das
mov
and
mov
movsb
xlat
je
jmp
jmp
jl
adc
push
sbb
cmp
lcall
incb
sub
inc
push
ljmp
popa
xor
mov
fdivs
popa
mov
cs
pop
mov
insl
loope
add
in
rcl
mov
xor
mov
and
lret
sub
xchg
adc
cld
shlb
pop
mull
stos
icebp
pop
mov
shll
mov
int
sbb
enter
or
sbb
negb
ss
or
dec
imul
xor
push
lret
aas
aad
pop
stos
mov
and
movsl
negl
jmp
cwtl
int
sarb
arpl
xchg
sti
jp
mull
popl
xchg
cltd
mov
les
push
pop
push
bound
pusha
insb
pop
fdivs
fyl2x
xor
jp
out
push
push
mov
aam
arpl
sub
xchg
mov
aaa
sub
jno
gs
popa
inc
pushf
sub
into
cs
cli
popf
pusha
addr16
vprotb
popa
inc
in
fcomps
mov
fldenv
push
xchg
mov
add
mov
daa
imul
sbb
fidivs
or
and
fxtract
and
pop
movsl
inc
add
add
sub
shrb
fistl
sbb
imul
aas
fiadds
jbe
cmp
xor
add
int
bound
cmp
in
mov
dec
aaa
push
andb
and
mov
hlt
mov
inc
jp
stos
cli
pop
push
mov
inc
push
addr16
lock
jne
adc
int3
nop
mov
jl
int3
out
into
vandnpd
test
cmpsl
pop
adc
xchg
or
jp
and
jg
test
xor
rcr
mov
jbe
mov
sbb
lcall
add
sbb
or
fcomp
lds
or
ret
adc
cltd
into
movsl
sti
mov
add
push
lret
add
sbb
jnp
inc
mov
adc
inc
inc
jecxz
mov
jns
cli
pop
push
jge
ja
mov
loop
stos
jb
ret
arpl
test
pusha
xor
pop
ret
add
adc
mov
pop
frstor
pop
movsb
outsb
aam
inc
push
sti
pop
cwtl
push
aam
lret
pop
sti
xchg
out
mov
pop
je
sbb
pop
lods
jno
jp
add
cmc
ret
xlat
jl
out
push
popa
mov
int3
std
xchg
xchg
bnd
mov
mov
mov
cli
add
outsl
xchg
popf
pop
fidivs
fsubrp
xchg
push
arpl
sub
sbb
ret
stc
das
dec
testb
or
fcomi
jp
mov
dec
jo
cmp
lcall
fiadds
iret
test
and
xchg
testl
fdivr
clc
nop
test
mov
fwait
int
pop
xchg
mov
push
mov
mov
clc
mov
int
cmp
lret
fcomps
leave
push
insb
nop
add
mov
sbbl
inc
inc
pop
movsl
push
lahf
test
add
insl
mov
xor
mov
cmp
add
mov
loopne
jmp
xchg
pushf
cli
mov
fmull
mov
outsl
lret
or
dec
adc
push
and
pop
rorb
out
push
mov
sbb
xchg
mov
push
mov
cmp
pushf
and
sahf
clc
jp
scas
mov
mov
movsl
sahf
inc
and
fbld
mov
adc
jo
or
push
stos
insb
cmp
add
outsl
push
out
arpl
jo
mov
arpl
cmp
add
dec
add
mov
hlt
data16
mov
cmp
adc
gs
lahf
push
dec
daa
or
and
and
rcr
rolb
pop
cmpsb
insl
cmp
pop
andb
scas
ss
stos
add
pop
sahf
out
loope
inc
stos
xchg
adc
mov
mov
xlat
xchg
and
sbb
and
adc
push
xor
andl
mov
inc
lret
xchg
jg
rcrl
and
inc
xchg
mov
int3
mov
or
push
cmp
inc
jmp
jns
test
adc
dec
jo
pop
cmc
es
add
cmp
lcall
stos
daa
imul
dec
mov
gs
mov
add
cmpsb
xchg
inc
mov
cwtl
loop
cmp
mov
and
stos
movsb
xor
xor
inc
ss
icebp
scas
xchg
outsb
xlat
adcb
cmp
mov
and
mov
xchg
movsl
adc
aas
fistpl
imul
push
ljmp
push
repnz
and
sbb
iret
mov
gs
popa
rcrb
mov
ds
addb
lds
cmp
daa
das
shll
std
mov
mov
push
mov
pop
and
sbb
xor
adc
inc
sbb
aam
or
push
cmp
shl
and
daa
cs
daa
sub
push
cmp
mov
popa
cmc
sbb
mov
hlt
sub
cmp
lcall
loope
and
lea
cmpsb
sub
cld
or
pop
push
mov
out
mov
negl
adc
xor
xlat
adc
movsl
xchg
and
xchg
jne
fdivl
cmc
insb
les
mov
cs
dec
call
test
pop
stc
push
push
sti
pusha
leave
jge
inc
pusha
ljmp
jl
ja
add
in
sarl
test
xchg
cmp
jne
ja
or
jecxz
xchg
loop
mov
jae
fs
pop
xchg
lds
inc
jns
repz
clc
fstpt
xchg
pusha
insl
sbbb
lret
jge
mov
mov
sub
out
pop
xor
mov
and
dec
sbb
fidivl
dec
data16
sbb
subl
test
popa
sbb
or
pop
cwtl
fisttpll
in
add
int3
sbb
mov
pop
jl
call
mov
push
ror
push
dec
jge
mov
into
and
movsb
fnstcw
imul
jecxz
xor
xchg
int
sahf
mov
nop
dec
dec
bound
xchg
mov
pop
nop
sbb
mov
cmp
inc
repnz
cmpsb
leave
fisubl
mov
fdivs
sub
push
push
mov
idivb
mov
data16
stos
push
pop
mull
sub
aam
pop
lock
jae
adc
out
cmp
mov
pusha
or
test
pop
mov
fstpt
aam
sub
inc
sarl
push
enter
xor
mov
ret
dec
sub
dec
pushf
fisttpl
jge
jmp
xor
jnp
rclb
cmp
dec
sets
xchg
enter
adc
jg
stos
cmp
pusha
push
mov
sarb
loope
nop
shrb
jg
and
in
mov
jb
rcll
in
inc
and
sahf
enter
pushl
mov
enter
mov
mov
or
pxor
pusha
and
stos
cli
jmp
cwtl
stc
xor
dec
add
push
adc
xor
push
inc
dec
mov
out
test
inc
pop
dec
and
ja
shrl
push
adc
out
or
cltd
addr16
add
insl
insb
dec
and
add
insl
cld
mov
cmp
adc
mov
push
jmp
mov
aam
cltd
xor
data16
daa
mov
fwait
push
mov
cs
or
cli
cli
dec
mov
mov
mov
lods
jge
in
arpl
lahf
mov
cmp
out
push
dec
cltd
jns
cltd
dec
inc
mov
nop
sbb
fwait
inc
ja
jmp
sbb
rol
shlb
dec
mul
dec
aaa
mov
cmpsb
repz
adc
mov
push
cmpsb
cs
orl
jle
mov
popa
scas
jno
add
adc
and
xor
rorl
push
loope
icebp
orl
jle
mov
popa
scas
jno
add
adc
and
xor
rorl
sahf
subl
jno
inc
push
push
sahf
xchg
scas
jno
add
add
and
fsin
aad
lea
mov
dec
sbbl
mov
leave
jbe
cltd
and
adc
add
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
nop
das
cmpb
push
pop
and
pop
adc
add
push
out
inc
jmp
pusha
fists
push
pop
shrb
jg
dec
loopne
add
cs
push
xorl
iret
pusha
fisttps
pop
leave
outsl
fdivrs
dec
loopne
or
pop
push
mov
aaa
lods
stc
pop
out
jbe
addr16
pop
orl
xor
daa
aam
dec
sti
lret
js
pop
stos
inc
out
test
push
adcb
jg
enter
cli
outsl
sar
inc
jne
xchg
fldt
inc
int3
lcall
jo
lahf
mov
jl
inc
gs
adc
jnp
and
inc
stc
pushl
or
lods
iret
push
cli
mov
addr16
push
sbb
test
int3
sarl
loope
fwait
push
add
or
jg
out
inc
add
lds
rcrb
cmp
out
idivb
push
repz
fwait
test
inc
decl
stos
pusha
mov
pop
pop
pop
das
outsb
ret
inc
call
in
dec
ja
mov
iret
pusha
lret
cltd
aas
mov
mov
jg
dec
stc
pop
or
cmp
push
pusha
mov
sub
jle
paddq
mov
or
or
insb
mov
push
lods
and
xchg
decl
pop
fildll
pop
mov
es
push
in
xor
popa
cli
push
subl
mov
imul
fdivrl
jp
inc
sarb
loopne
adc
and
jo
pusha
fists
push
pop
shrb
jg
dec
loopne
adc
and
jo
pusha
fists
loop
fnstsw
and
and
iret
cmp
jge
jne
sbb
roll
push
or
mov
call
call
push
jl
pusha
or
inc
orb
fnstcw
jecxz
pop
mov
es
xor
mov
jo
scas
les
xchg
mov
arpl
and
pop
fucomi
push
lret
push
pop
push
inc
neg
inc
inc
testb
xlat
fnstcw
xchg
aas
and
mov
icebp
xor
jg
jnp
addl
cmpsw
cmpsb
shrb
xchg
push
sahf
sbb
mov
or
cmp
mov
inc
xchg
jbe
adc
popf
mov
aas
add
xchg
adc
push
inc
push
push
push
xlat
jecxz
inc
jae
jge
and
lods
icebp
pop
cmp
add
cmc
fistps
xchg
iret
decb
mov
add
mov
cmp
sub
subb
mov
outsl
and
or
aaa
mov
cmp
push
mov
repz
nop
jl
jne
sahf
mov
ljmp
in
jb
mov
mov
xchg
push
pop
pop
jbe
dec
mov
mov
jne
fldt
movsb
push
mov
jmp
js
mov
fldenv
add
aas
jbe
rolb
data16
in
test
pusha
loop
push
out
jge
xlat
in
sbb
outsb
and
pmulhuw
test
loope
adc
decb
bound
iret
and
and
sbb
xor
pop
and
jae
shrb
sti
shrb
jb
and
and
sub
fwait
jl
mov
cmp
sub
sub
adc
iret
mov
push
and
inc
insb
and
stc
insb
adc
push
jl
dec
popl
rol
loope
movsb
leave
jno
ret
mov
xchg
lret
and
mov
jl
jne
xor
mov
lcall
jns
add
or
aas
xchg
shrl
xchg
or
fbstp
sbb
pop
and
sbb
mov
fucom
cmp
cmpsl
arpl
scas
or
xor
and
cmp
pop
and
xchg
sahf
stc
sub
dec
arpl
js
xor
in
xor
popf
add
insb
xchg
mov
push
test
or
add
dec
jae
imul
into
jmp
or
sbbl
test
xchg
daa
cld
std
push
dec
jl
jmp
lds
mov
cltd
movl
mov
cmc
out
pusha
or
mov
imul
out
jle
xchg
adc
sub
add
stos
cli
pop
das
inc
push
inc
sub
mov
fsubs
inc
xchg
or
adc
mov
or
mov
std
push
fmul
cmc
cwtl
ret
mov
xchg
inc
cli
int
or
and
or
sub
sbb
xor
sbb
test
sbb
inc
push
push
addr16
ret
mov
into
dec
or
inc
adc
xchg
mov
andl
dec
push
ja
pop
push
cli
sub
inc
inc
repnz
xor
lods
leave
sub
out
sahf
test
push
sbb
sub
jp
mov
mov
and
loopne
push
mov
and
sbb
cmp
sbb
sbb
int
mov
mov
xor
cmc
fbstp
ds
inc
push
mov
push
xor
lea
scas
or
popf
dec
push
and
aad
cmpsl
sub
and
and
mov
xchg
into
pop
pop
cmp
lret
pop
idiv
and
enter
into
ss
dec
push
push
mov
inc
xor
int
add
rolb
hlt
cmp
inc
push
pop
xchg
rcr
inc
addr16
test
dec
pop
sub
sahf
sub
or
sub
push
jns
dec
data16
loopne
out
mov
fldenv
adc
push
cli
jge
in
adc
add
pusha
cmp
fnstcw
mov
push
mul
ljmp
fbld
dec
shlb
sbb
push
adc
fdivrs
lahf
and
cs
xchg
ds
mov
enter
mov
pop
fcmovnu
test
or
xchg
cld
stos
mov
testb
or
xchg
sub
push
jge
lahf
ljmp
xchg
pusha
inc
outsl
or
add
adc
dec
pop
mov
xchg
cmp
push
test
or
jbe
jae
mov
xorb
dec
push
dec
in
in
push
insl
jg
dec
std
sub
jbe
cmp
sbb
mov
iret
push
insl
out
add
cmp
jns
pop
inc
xor
testl
sub
push
leave
adc
in
lret
push
sub
cli
cmp
in
stos
inc
fucomp
idivb
fisubs
push
or
pop
and
xor
add
fstl
mov
xor
jb
dec
outsb
fiadds
push
push
add
and
lods
lock
loopne
xchg
sub
mov
sub
adc
fldenv
mov
fstpt
push
je
pop
movsl
mov
inc
sahf
push
lahf
mov
pop
sbb
add
adc
dec
scas
or
sub
mov
cwtl
outsl
icebp
test
sahf
enter
xchg
fldenv
stos
sub
je
cmp
sbb
pop
and
xchg
dec
pop
scas
or
imul
xchg
pusha
sub
cmp
lea
push
jp
sbb
imul
dec
xor
jbe
test
inc
xlat
fdivrl
mov
lods
mov
pusha
push
add
push
dec
push
push
push
js
movsb
stc
mov
push
std
xlat
bound
arpl
mov
jecxz
mov
je
jbe
stos
jg
lea
pop
cld
fs
popa
cmp
in
leave
das
cmp
idiv
jo
sbb
cmpsb
fs
cld
lcall
fstps
add
ret
pop
or
lret
xlat
fwait
loop
add
push
lods
ss
mov
inc
xor
push
push
push
jle
pop
in
jb
dec
enter
int
jmp
mov
jbe
or
xchg
xlat
jno
jns
jno
movsb
in
add
test
aaa
jne
rorl
jle
mull
dec
enter
out
or
dec
orb
xlat
fwait
outsl
bound
jl
pop
loopne
rclb
out
insb
into
xchg
sbb
push
data16
mov
push
out
mov
inc
xlat
cmc
decl
aas
ja
add
bound
xor
outsb
add
loope
std
and
add
cmpsb
mov
xchg
push
cmp
sub
push
popa
fadds
push
aad
pop
aam
fldl
mov
cli
push
cmpsl
int3
sbb
cmpsl
and
dec
pop
ss
iret
cmp
or
xchg
or
inc
iret
lcall
imul
sbb
loope
mov
push
or
inc
sub
enter
sub
mov
sub
outsb
sbb
jno
xor
cmpsb
or
loope
dec
roll
jge
lcall
test
fimull
test
sub
scas
xlat
inc
iret
or
test
push
sarb
xchg
scas
repz
mov
and
or
filds
mov
xor
push
xchg
jno
stc
int
adc
test
inc
dec
je
shrl
xor
imul
add
mov
push
mov
mov
adc
sbb
pop
adc
xor
mov
psllq
lret
dec
push
out
iret
imul
jl
dec
popf
in
adc
stc
insl
repz
cmp
and
jmp
sbb
lret
addr16
mov
add
fisttps
dec
xor
add
or
and
cld
out
notb
pop
or
or
loopne
sbb
pusha
mov
cwtl
nop
sub
jb
adcl
xor
xchg
into
xchg
scas
rclb
sbb
inc
lea
inc
mov
aaa
sub
push
cmp
sub
pop
mov
mov
sbb
sbb
mov
testl
xor
in
ja
in
adc
clc
sub
addl
aaa
arpl
mul
mov
dec
mull
or
lcall
lods
inc
mov
scas
pop
cli
icebp
xor
jge
lds
mov
xor
mov
sbb
aam
push
incb
push
jno
jmp
cmp
lret
aas
xor
pop
out
rolb
or
jnp
inc
inc
sbb
mov
into
cltd
mov
inc
sarb
mov
mov
loope
dec
lds
push
push
sti
cltd
fdivl
mov
xchg
adc
aas
inc
aaa
and
je
enter
in
cmc
inc
jg
adc
jb
jo
inc
out
ret
popf
ds
jmp
and
inc
fldcw
aaa
insb
sbb
in
or
ret
or
push
fstpl
adc
push
or
jae
test
adc
pop
aad
rcrl
mov
mov
or
inc
mov
popf
lret
aaa
mov
pushf
jbe
mov
cmp
xor
inc
out
push
add
fisubs
mov
push
or
pop
mov
mov
fxch
mov
add
fdivl
dec
sbb
adc
testb
xchg
mov
xchg
and
xchg
lahf
mov
ds
push
push
add
push
sbbl
loope
nop
jg
mov
out
add
outsb
leave
rcll
pop
ds
adc
or
dec
fwait
cmc
mull
sti
jle
cmpsl
jno
lahf
xchg
jl
sahf
jge
and
lea
cli
and
push
dec
in
pop
mov
or
insb
imul
mov
pop
xor
rcr
iret
js
iret
ss
loope
and
and
adcb
jl
ljmp
cmp
aad
xlat
dec
xorl
rolb
stc
and
mov
or
dec
leave
dec
out
shlb
je
jge
in
lret
and
fiadds
jo
decl
pop
push
pop
lret
push
test
movsl
es
cmp
addl
sbb
or
inc
jle
pop
test
push
push
push
jne
mov
ljmp
test
ret
test
push
dec
or
jae
movsl
sbb
cmp
inc
xchg
sahf
js
mov
movsl
ljmp
lods
cmp
jbe
jne
dec
and
fisttpll
orb
movsb
out
stc
lahf
cwtl
cwtl
sub
mov
and
fisubrl
mov
int3
lret
xor
mov
lcall
je
sub
mov
int
test
cmpsl
mov
mov
cmp
mov
ret
shld
nop
sbb
lock
dec
movsb
stc
push
sbb
jbe
push
ja
xchg
idivb
call
shl
jmp
inc
daa
scas
jge
std
xor
arpl
add
add
sub
popf
int
shr
mov
xor
jnp
cmp
push
mov
dec
sub
dec
addl
inc
pop
fnstcw
add
repnz
aas
cmpsl
popa
mov
jae
rorl
inc
cli
lods
out
loop
fstpl
add
sbb
cmp
mov
inc
rorb
aam
mov
adc
xor
xor
iret
test
dec
mov
lahf
sbb
nop
mov
mov
pop
rorl
inc
in
cmpsl
and
movsb
and
and
flds
or
lcall
loopne
pop
popf
daa
mov
jge
lret
jmp
xchg
mov
mov
inc
inc
inc
push
es
stos
rcr
inc
dec
imul
into
in
pop
sbb
in
loopne
push
ljmp
push
mov
pop
xchg
imul
push
notb
loope
xor
jne
cmc
mov
sbb
test
xchg
xchg
sbb
jecxz
xchg
popf
mov
and
imul
xchg
dec
push
ret
jae
pop
aas
hlt
fsts
add
pop
mov
cltd
xor
adcl
fldl
or
movsb
jo
inc
xchg
or
gs
jge
inc
push
ret
rcl
gs
aad
mov
ss
add
add
js
sbb
sub
outsb
or
push
fs
aas
sub
push
push
icebp
jns
inc
into
jle
ja
inc
mov
pop
cmpsb
jnp
imul
dec
mov
fistpl
add
ds
xor
dec
mov
loope
sbb
lret
inc
push
mov
out
xor
loope
mov
mov
ja
cmp
mov
cmc
xcrypt-ctr
cmpsl
sbb
lret
push
in
cltd
fbld
iret
push
in
outsb
arpl
mov
mov
xor
inc
cwtl
popf
add
push
pusha
xor
jl
xor
enter
mov
scas
mov
jmp
cmpsb
mov
add
push
enter
sahf
xor
xor
pushf
nop
call
shll
cmc
cmp
xor
jg
outsb
xchg
sub
lcall
inc
cmpl
out
push
mov
rcrl
or
sub
add
inc
fisttpl
cmp
sahf
inc
js
int
fsubr
jb,pt
bt
mov
mov
shr
or
inc
popf
push
sahf
loope
add
sub
outsl
sbb
mov
lods
add
push
pop
and
push
ret
xor
aad
cwtl
cmp
dec
mov
mov
sti
cmp
movsb
mov
mov
out
leave
ret
std
pushf
fcompl
dec
cmp
dec
lret
inc
dec
pushf
mov
push
mov
and
incb
jmp
imul
mov
cmpsl
and
or
push
push
sbb
pop
gs
lret
adc
add
lea
add
add
xchg
sahf
jge
mov
cmpsb
mov
idiv
jecxz
scas
fisubrs
call
popa
popf
xchg
scas
inc
push
or
dec
pop
add
mov
insb
cmc
outsl
repz
xor
enter
push
mov
mov
int
dec
popf
mov
popf
setl
pop
pop
cwtl
mov
xchg
fnsave
pop
or
dec
jg
cmp
and
mov
fcompl
out
subl
xchg
push
pop
idivb
sub
out
ljmp
fisttps
or
xor
cmp
out
ds
stos
icebp
pop
adc
mov
enter
sbb
mov
rcrl
lock
aaa
into
dec
pop
pop
pop
test
pop
lods
pop
and
xor
test
mov
std
ret
sbb
sub
aam
pusha
ret
or
inc
sbb
cmpsl
test
cmp
jg
es
lock
in
mov
notb
fsubp
inc
fidivs
mov
cli
mov
push
aas
cmp
jns
aas
jnp
mov
aam
xchg
mov
lock
enter
pop
fistl
clc
xchg
mov
nop
fmul
inc
sahf
and
add
out
sbb
iret
std
hlt
shlb
stos
subl
insl
pop
fisubrl
push
inc
dec
in
enter
int3
sti
cmp
fwait
std
jecxz
leave
mov
mov
mov
mov
add
repnz
inc
ja
cmc
mov
sbb
jecxz
ret
lahf
mov
sub
je
or
ret
aad
inc
pop
enter
sub
shrb
jge
test
dec
xor
mov
mov
bound
std
add
pop
scas
push
lds
xchg
push
sub
les
sarb
fwait
cltd
test
add
cmp
jns
std
add
xor
ret
mov
rclb
jno
movb
xor
inc
mov
test
jmp
shlb
jae
stc
mov
or
movsb
sbb
into
jae
adc
dec
mov
jp
dec
arpl
and
pop
jge
das
sub
jl
pop
imul
call
add
sahf
mov
cmc
es
xor
jnp
mov
out
mov
sbbl
cs
push
jg
dec
out
subb
js
mov
fcmovb
cwtl
dec
sbb
pop
outsb
scas
lea
and
and
subl
shll
mov
lods
hlt
fsubs
xchg
icebp
xor
adc
adc
inc
adc
sub
movsl
push
bound
adc
dec
push
in
pop
xchg
xchg
push
mov
adc
out
inc
lahf
mov
jl
pusha
outsb
inc
fstps
or
rorb
cmp
rcrl
xorl
push
push
jae
imul
les
fucomip
scas
mov
or
or
test
mov
xor
and
lds
add
iret
or
inc
ja
push
sub
icebp
sbb
adc
ja
fs
pop
jne
and
dec
xchg
mov
out
outsb
ret
shrd
pop
movsb
add
mov
out
jns
shrb
push
ja
xchg
addr16
push
stc
mov
insb
mov
and
out
out
xlat
sbb
lcall
mov
test
mov
mov
ret
add
fists
dec
ja
ret
and
jnp
scas
sub
lahf
imul
outsl
xor
je
push
and
js
pop
pushf
aaa
mov
or
lea
mov
push
dec
out
sbb
xor
cmp
or
scas
imul
ss
sub
xor
lret
lcall
mov
sub
mov
cmp
cs
fdivp
enter
ret
lock
daa
jno
push
test
sub
pop
xchg
rol
loopne
inc
mov
pusha
cli
or
mov
adc
inc
pusha
mov
dec
ds
adc
push
fwait
cmpsb
scas
aas
imul
sub
outsb
mov
cmpsb
cwtl
dec
lds
xchg
mov
xchg
sti
pop
jg
xchg
and
cltd
cmc
and
movsl
sub
ja
call
out
xchg
lds
cmp
xchg
mov
mov
ja
sub
vpavgw
faddl
cld
xchg
dec
cltd
stc
dec
decl
sbb
jg
push
mov
dec
pop
jnp
shrb
push
or
movb
jmp
stos
sub
cmp
sub
repnz
les
pop
jno
ljmp
lock
xchg
cli
jge
aam
push
jmp
fisttps
in
pop
sarb
and
insl
out
and
dec
cwtl
pop
ds
ljmp
ss
inc
xlat
repnz
jmp
xchg
cmc
lcall
out
add
mov
cmp
or
fdiv
test
das
xlat
add
les
addb
jno
mov
xor
icebp
repnz
sti
push
adc
out
call
in
jb
and
sub
lcall
and
mov
fndisi(8087
sbb
push
mov
xor
repnz
fwait
push
sbb
xor
fs
ret
shlb
out
aad
cmp
repnz
xor
xchg
andb
fwait
mov
and
push
or
ss
xor
sahf
xchg
push
cld
test
shl
xacquire
push
roll
sbb
fbld
shlb
aam
clc
stos
adc
mov
jle
xchg
cmp
xchg
pop
mov
cmp
cwtl
mov
ret
mov
stc
data16
push
sub
push
lahf
adc
adc
xchg
mov
sbbl
insb
jnp
dec
outsb
adc
scas
cmpsl
stos
aam
out
sub
sbb
mov
xor
pop
insl
iret
rcrl
cli
or
movsb
ret
scas
mov
xor
xor
sar
stos
bound
dec
int3
fsubrs
jne
je
in
mov
clc
push
ficoms
test
in
xchg
iret
repnz
data16
xchg
push
das
dec
das
aad
adc
jecxz
xor
sbb
pop
mov
push
scas
scas
sahf
mov
push
clc
jns
cmp
imul
sbb
and
fcoml
mov
cli
arpl
inc
fwait
adc
mov
mov
rcrb
xor
sub
push
mov
out
jne
out
aaa
push
adc
ror
add
fists
js
cld
push
or
out
jl
scas
or
arpl
pop
and
mov
imul
dec
jns
push
arpl
repnz
pop
mov
test
imul
jno
lret
cwtl
shrl
lds
cmp
adc
and
addr16
lods
or
push
jae
cltd
out
or
adc
test
or
xor
pusha
lods
adc
repnz
cmp
sbb
jg
fnstenv
push
pop
int3
in
test
mov
jg
dec
loopne
adc
and
jo
pusha
fists
push
pop
shrb
jg
dec
loopne
adc
and
jo
pusha
fists
push
pop
shrb
jg
dec
loopne
adc
and
jo
fists
push
pop
shrb
jg
dec
pusha
pop
out
scas
call
daa
addr16
lahf
and
shlb
mov
cltd
rclb
aaa
jno
pusha
pop
adc
aaa
and
push
shlb
loopne
nop
out
divl
daa
inc
aaa
adc
pusha
pop
adc
ja
inc
and
cmpsl
shlb
out
divl
sbb
adc
pop
jae
imul
mov
jecxz
jnp
and
xor
cmp
jg
xor
pusha
xchg
scas
addr16
stos
sahf
test
mov
or
lret
aad
and
pop
in
push
in
cmpsl
cld
cmp
stos
push
mov
popa
pushl
sti
xchg
mov
jl
rcl
push
out
leave
add
inc
mov
gs
pop
pop
shlb
out
out
mov
and
mov
lock
daa
and
aas
dec
mov
out
or
bound
and
scas
push
pop
sub
rorb
gs
sub
hlt
dec
or
push
scas
fcoms
pop
fs
add
cmpsl
shlb
out
divl
daa
inc
aaa
jo
pusha
pop
adc
ja
inc
and
movsb
lret
pushf
shrl
mull
repnz
pop
imul
pop
lds
out
std
test
in
mov
fcom
add
pop
or
jnp
or
pusha
xor
cmp
repz
mov
xlat
push
daa
inc
aaa
jo
pusha
pop
adc
ja
inc
and
cmpsl
shlb
out
divl
daa
inc
aaa
jo
pusha
pop
adc
ja
inc
and
cmpsl
lds
jecxz
mov
ret
test
repz
cmp
and
lahf
mov
rcr
push
sbb
mov
inc
repnz
rcrb
cmp
cli
sub
cmp
jno
jns
mov
add
xchg
cmpsl
lcall
jno
pop
pop
mov
sti
inc
pop
in
pop
jecxz
mov
cmpsb
or
push
orb
fldt
mov
iret
add
adc
gs
inc
ja
or
fnstcw
mov
jb
fwait
push
les
sub
popa
test
mov
arpl
add
xor
int
mov
fisttpl
ljmp
push
pusha
fisubrs
and
mov
mov
int3
imul
push
lret
or
mov
mov
pop
cli
xor
sahf
dec
or
sub
fcmovb
es
mov
inc
sub
pop
into
subl
imull
scas
pop
mov
scas
cmpsb
xlat
shrb
dec
icebp
movsb
lahf
xor
pop
data16
jnp
jae
cli
inc
mov
jno
mov
xor
push
jae
jge
movsl
iret
mov
xor
stos
mov
ja
push
jnp
push
std
push
cs
lcall
xor
lret
cmpsl
lds
lret
mov
dec
fldenv
adc
pushf
sub
inc
jbe
pop
lock
iret
out
shlb
jle
pop
in
mov
inc
dec
rcll
lcall
cld
cmp
mov
push
repnz
jp
mov
test
push
in
mov
jnp
xchg
inc
dec
push
push
fcompl
faddl
jl
pop
push
mov
repz
in
imul
cmp
movb
jl
xlat
fisttps
mov
mov
mov
push
pop
and
clc
add
mov
pop
sbb
jge
add
mov
sahf
mov
mov
repnz
mov
xchg
mov
mov
cmp
out
adc
jo
insl
xor
and
jne
mov
int3
push
cmp
repz
int
js
mov
push
jae
shll
movsb
lret
inc
repnz
jle
and
aaa
lahf
lahf
hlt
add
lret
sbb
dec
or
das
mov
add
aaa
pop
add
cmc
int
inc
add
mov
dec
xor
mov
lea
les
scas
ja
add
and
loopne
mov
and
stc
arpl
mov
pop
aad
mov
push
jbe
push
mov
scas
push
cli
push
insb
xor
cmp
adc
imul
cmp
je
mov
jp
add
xor
imul
mov
outsb
sub
xchg
pop
imul
test
into
fsubrp
lds
popa
test
jo
add
mov
mov
iret
cmp
es
mov
dec
loopne
out
xchg
sbb
iret
push
ret
adcb
sub
lds
and
out
pop
adc
xchg
mov
dec
push
pop
ljmp
imul
xorb
sbb
dec
dec
lods
jae
sub
loop
push
fwait
inc
sbb
aad
inc
or
aaa
mov
push
lret
movsb
jl
add
push
adc
in
jle
insl
or
push
add
test
dec
in
and
adc
dec
repz
push
mov
push
iret
jns
push
in
push
mov
lds
cmpsb
and
outsb
cmpsb
mov
ss
pop
je
mov
xor
call
push
mov
or
outsb
xchg
dec
dec
mov
int
xorb
cmp
adc
or
and
testb
pop
sub
add
fcmove
fidivrs
jo
adcb
scas
and
cltd
pop
addr16
mov
and
push
add
iret
push
ljmp
pop
scas
in
and
js
xlat
lods
test
stos
in
iret
fadd
insb
ljmp
das
mov
and
push
scas
insl
inc
or
inc
push
scas
scas
jo
int3
xchg
or
mov
das
jmp
inc
inc
dec
pop
ret
lahf
fisubs
lahf
insb
aam
and
mov
pop
mov
inc
or
sbb
xlat
stos
lock
cmp
jl
fcoml
ret
or
cld
scas
cltd
insb
or
popf
pop
rorl
push
mov
andb
push
test
inc
cwtl
ret
fistpl
clflush
push
pop
and
pop
scas
cmpsl
sbb
cwtl
insb
stos
pop
xor
test
fwait
inc
dec
shl
and
mov
xor
sbb
sub
cmp
inc
mov
and
jg
sub
inc
fisubl
sahf
fxch
out
jnp
cs
rorl
loopne
sub
call
add
lret
cmpsl
inc
inc
addb
xchg
jecxz
incb
cmp
fs
pop
jb
ss
shrl
mov
in
push
or
lds
jns
aaa
fiaddl
outsb
int3
pop
or
cmp
movsb
jg
cmc
jnp
xchg
ret
adc
sbb
test
sbb
loope
pop
repnz
js
push
ffree
xchg
ljmp
inc
or
in
aad
xchg
inc
mulb
insb
mov
cmp
mov
add
jno
out
cmp
or
mov
xor
into
mov
jmp
adc
jb
rorl
addb
mov
mov
and
std
dec
xor
loop
dec
lea
cmpsb
push
popf
jg
fcmove
inc
and
cmc
sbb
lahf
leave
jbe
test
pop
push
cmp
add
imul
icebp
icebp
pop
sub
je
aaa
lds
mov
shrb
cmp
xchg
pushl
decb
lds
mov
dec
push
ficompl
popa
cld
in
nop
bound
cld
daa
arpl
gs
lods
push
mov
mov
xor
inc
sub
sbb
aam
or
fiadds
jae
mov
or
and
out
sar
and
sbb
fs
pushf
adc
out
cltd
push
cmp
ja
leave
cmc
or
xor
dec
and
andb
ljmp
out
bound
ja
mov
addb
ss
icebp
push
jp
sahf
pop
jmp
popf
dec
in
jmp
int
cmc
mov
sbb
sub
iret
jmp
inc
mov
lock
clc
mov
in
in
jmp
mov
bound
inc
ds
sub
test
scas
dec
sub
fwait
or
je
or
mov
cmpsb
add
xor
add
loop
or
or
dec
out
cwtl
stos
rcll
enter
pusha
pop
push
bnd
repz
xor
outsb
or
scas
ds
lods
jno
outsl
push
insb
jb
outsb
cmpsl
sub
xchg
add
sbb
sbb
jge
lock
mov
lahf
dec
dec
sbb
inc
movb
cmp
sub
pop
nop
dec
repz
mov
stos
aam
add
cmpl
push
mov
mov
adc
mov
and
or
mov
out
out
jno
mov
gs
into
sti
pop
outsb
xor
jae
popa
outsl
jbe
movsl
cmp
cs
pop
jg
jp
iret
push
jno
push
jbe
inc
repz
sub
fwait
or
sbb
mov
cltd
pop
adc
loopne
in
pop
cmpsl
loopne
jle,pt
push
loop
xchg
cmc
popa
push
leave
popa
dec
fdiv
fsubrs
lret
pop
jecxz
fdivl
or
xchg
leave
jbe
scas
push
adc
addr16
mov
inc
dec
pop
daa
push
icebp
jmp
je
dec
orb
int3
pop
xorb
in
inc
jl
stc
enter
insl
cwtl
add
push
movsb
push
iret
loope
mov
jge
jns
cmp
shll
out
sbb
out
mov
sub
enter
pop
dec
imul
leave
adc
daa
insl
or
mulb
lcall
test
movsb
hlt
cmpsl
or
cmpb
dec
das
mov
mov
lret
xchg
cli
cld
inc
outsb
ffreep
pop
fimuls
xchg
outsl
leave
cltd
inc
movsb
inc
mov
or
lods
mov
add
ss
adc
imul
add
sti
lahf
pushf
stos
add
mov
cmpsb
js
ret
cwtl
mov
adc
out
xchg
mov
enter
loopne
aas
dec
fildl
add
xchg
jp
ret
jle
xor
scas
in
pop
nop
lcall
mov
fs
lahf
out
jl
repnz
push
add
jl
fs
or
decb
jmp
nop
jl
in
into
inc
sbb
ret
loope
rol
xchg
enter
cmp
mov
and
cmpsl
decb
adc
std
loope
shlb
aam
sub
mov
xchg
dec
push
fs
cmpsb
sub
test
icebp
jbe
stos
xchg
xchg
jg
mov
int3
jns
mov
out
fs
sub
notl
test
or
fidivrl
jo
adc
sbb
push
sub
xor
ret
lcall
ss
ss
das
fwait
adc
jns
stos
sbb
test
pop
stos
test
insb
fs
outsl
pushf
sub
outsl
mov
ss
or
mov
stos
fwait
xchg
ret
or
inc
mov
xchg
je
aas
and
sub
inc
xchg
sub
push
loop
shl
cmp
sbb
ja
mov
lret
ljmp
jno
dec
lea
mov
mov
adc
lds
imul
rcrb
dec
adc
add
sbb
inc
loope
scas
mov
leave
iret
int
pop
rol
mov
arpl
out
jno
repnz
jnp
inc
aad
jae
ja
dec
push
pop
xlat
xchg
fcmovb
leave
fwait
lock
add
pop
sahf
imul
inc
out
fidivrl
and
sub
pop
shl
add
imulb
push
sub
sub
inc
pop
jp
dec
mov
xor
add
mov
incb
pop
scas
int3
inc
mov
fldenv
cmp
cmp
popa
xor
les
lret
lcall
sbb
lcall
fwait
daa
int3
mov
push
cli
imul
xchg
out
mov
dec
je
mov
sub
and
sbb
jmp
mov
and
mov
cmp
in
xor
repnz
dec
cvtdq2ps
fadds
sub
sub
sbb
cmp
cmp
sti
out
push
jle
and
ficompl
inc
sbb
adcb
js
aad
xchg
mov
inc
push
push
pop
lea
in
ret
pop
sbb
cmpsl
push
enter
les
jp
sti
xor
inc
leave
les
and
cmc
mov
fwait
inc
incl
push
xchg
into
movsl
fstl
lret
ja
adc
mov
add
jns
cmp
and
negl
scas
xchg
sbb
inc
sbb
cmpsl
mov
mov
mov
fsts
mov
ja
andl
add
dec
push
push
int3
stos
repnz
jle
pop
fidivrl
and
fsubs
cmc
js
mov
push
sbb
mov
or
inc
or
bound
hlt
sti
mov
mov
fsincos
adc
adc
cwtl
in
aam
mov
pop
into
push
pop
jge
inc
dec
lock
xchg
out
les
pop
dec
mov
pop
clc
pop
aam
lds
cmpsb
stos
insl
test
das
pusha
sub
loope
sub
jl
mov
repnz
je
jg
jne
ljmp
cli
xchg
fsubp
push
sahf
push
add
cmpsb
es
sub
cmp
jl
sub
add
xlat
sbb
adc
inc
xchg
das
jae
cld
mov
nop
in
in
lcall
sbb
and
dec
inc
adc
xor
je
insl
dec
movsl
mov
and
pop
adcl
out
add
in
fs
pop
mov
int3
rorb
push
dec
daa
dec
mov
xor
bnd
pop
mov
loope
inc
andb
push
cmp
push
lock
subb
inc
dec
xor
xor
cmp
xchg
xchg
or
cltd
dec
jge
mov
loope
ds
mov
push
or
outsl
dec
shll
int3
aad
cmc
inc
mov
out
xor
jbe
divb
sub
ja
aam
and
imul
addr16
adc
iret
or
sub
mov
push
sbb
es
shll
pop
inc
aam
lcall
or
xchg
mov
pop
mov
fdivr
adc
cmpsb
mov
mov
pop
test
into
into
lcall
fsubs
pop
movsl
jl
lcall
cmp
pop
xchg
or
aad
sub
cmpsl
push
sub
push
jno
shrd
xchg
mov
daa
rcr
out
fs
xlat
loopne
out
jns
fcmovnbe
pop
pop
sub
std
clc
jo
pop
jmp
aad
push
jns
icebp
ds
xlat
jo
cwtl
add
xor
daa
jae
or
imul
leave
dec
pop
mov
es
sti
jno
jae
arpl
ret
cwtl
sti
xchg
mov
add
pusha
neg
push
push
into
repz
daa
movsl
xchg
mov
fsubr
leave
xor
scas
cltd
xlat
out
jns
ret
into
jnp
add
mov
jo
movsb
cs
loop
int3
fistps
jge
add
ret
dec
notb
movsl
scas
cltd
pop
lahf
add
std
adc
icebp
sbbb
hlt
and
aas
iret
out
add
scas
stos
insb
cli
pop
mov
lcall
add
xlat
add
pop
jge
adc
outsb
mov
ret
inc
add
sub
outsb
int
in
pop
test
sbb
movsl
and
sti
aas
loop
jbe
add
rcr
sub
jg
mov
mov
pushf
sbbl
jge
xchg
mov
cmp
cli
cmp
mov
and
lahf
test
roll
mov
movsl
sti
xchg
inc
adc
and
sbb
mov
int
inc
lret
or
into
movsl
imul
cmpsl
jge
adc
sbb
pushf
int3
mov
adc
ss
mov
lods
in
pop
leave
lret
arpl
movsl
push
dec
xor
add
add
add
das
sbb
loop
repnz
fadd
jbe
hlt
testl
sbb
nop
fcoml
inc
nop
jle
mov
insb
sbb
sub
sub
adc
jl
movsl
pop
insl
pop
mov
cmp
mov
add
in
mov
mov
lods
pop
or
outsl
mov
addb
jb
clc
xchg
aam
push
sbb
movsl
ja
lock
xchg
xor
mov
sub
jl
std
stos
mov
rorl
push
mov
clc
xlat
lods
xchg
cmp
ss
or
cltd
add
jnp
sbb
ds
stos
cmp
lock
and
jg
mov
das
xor
call
jl
das
aad
test
mov
sti
mov
movsb
inc
fucomi
gs
insb
xchg
ja
dec
mov
sbb
arpl
out
xchg
xor
rolb
adc
xchg
dec
push
xchg
cli
xor
dec
and
js
xchg
xchg
inc
mov
adc
arpl
or
adc
jge
ret
or
xlat
xor
mov
mov
and
mov
add
and
jmp
inc
fidivrl
sub
mov
popf
imul
lds
icebp
sbb
dec
adc
idivl
pop
minps
push
ficomps
jmp
mov
jmp
cmc
pop
sub
push
mov
fnstenv
ret
lahf
leave
inc
outsl
xchg
dec
sahf
bound
test
ficoml
popl
cld
je
mov
test
sbb
nop
pop
sub
sub
ja
fnstsw
mov
testl
popf
jle
sub
and
fstps
mov
mov
sub
adcl
sub
add
test
int3
int
push
aam
add
fsubrl
fistpll
sbbl
mov
inc
jb
sub
cmp
add
repz
and
arpl
rclb
pop
push
add
mov
or
sbb
and
mov
jb
pushf
inc
cmp
mov
xchg
or
sub
cld
outsl
lret
cmpb
push
mov
mov
popf
imul
fldl
jmp
jae
or
mov
mov
ja
mov
push
movsl
push
lock
mov
test
sbb
mov
es
shrl
pop
jmp
add
mov
pop
jnp
mov
sti
movsb
mov
sbb
das
mov
sbb
js
xor
jmp
inc
fs
rorb
adc
test
pop
pop
mov
xchg
pop
and
adc
cmp
mov
xor
inc
cmpsl
mov
inc
cmp
jns
pop
xchg
std
ds
aas
sub
es
pop
sub
fbstp
mov
jmp
xor
jge
pop
sahf
das
call
jp
and
fucomi
cmp
xor
push
mov
pushf
adc
inc
dec
stos
loop
imul
ja
into
adc
xor
mov
out
das
xor
dec
ljmp
push
xor
lret
in
gs
mov
decl
adc
xchg
dec
mov
dec
stc
cmp
out
std
inc
std
pop
stc
outsl
insb
shrl
adc
stos
jns
jmp
sub
pushf
cmpsl
lods
mov
ja
lahf
or
push
or
lahf
jbe
adc
push
xor
lahf
cld
inc
ret
mov
punpckhbw
mov
inc
mov
js
add
add
mov
xchg
xor
pop
push
lahf
or
lods
stc
ret
inc
aam
pop
mov
inc
push
das
lock
in
sub
imul
mov
nop
jmp
test
cld
cmpsl
loopne
iret
jp
outsb
out
rorl
lea
adc
jo
mov
push
jne
xchg
lret
xor
mov
inc
jno
push
outsb
add
jns
mov
adc
ficoml
iret
sub
cld
mov
adc
xor
fisubrs
push
js
add
mov
inc
popa
in
loope
jge
xchg
stos
xor
insl
rcll
add
fisttpll
cmpsb
jae
stos
cs
cmp
fiaddl
inc
dec
scas
out
mov
fs
nop
lea
xor
cmp
dec
pop
dec
mov
mov
lock
push
mov
jmp
xor
mov
and
das
jg
decl
xchg
add
jb
inc
ret
nop
mov
pop
sbb
and
fs
sbb
sahf
ljmp
inc
loope
pop
stos
aaa
push
repz
dec
movsl
out
aas
fidivs
js
xchg
xchg
xchg
call
in
mov
test
mov
xor
sub
push
in
cmpsb
mov
jno
mov
xor
repnz
mov
xor
insb
jmp
xchg
pop
sub
lods
out
in
add
cmpsl
mulb
and
jmp
cmp
adc
push
dec
adc
rorl
push
dec
cltd
rcrl
cmc
scas
arpl
aad
orl
inc
dec
cmp
outsb
dec
xor
iret
and
mov
jns
or
arpl
lds
fs
dec
lahf
imul
add
bound
rcll
sbb
push
cmp
mov
mov
sarl
imul
lcall
xlat
es
adc
mov
mov
mov
adc
inc
sub
add
hlt
addr16
xor
inc
sub
mov
roll
unpcklps
mov
popa
jno
jge
repz
jle
movsl
sahf
inc
out
cmp
push
cltd
mov
mov
cli
andl
rorb
mov
jne
push
mov
jbe
mov
repnz
sbb
inc
sub
jg
adc
loope
and
sub
ss
clc
insl
jl
addr16
roll
jp
aas
sub
inc
ret
fwait
sbbb
scas
pop
cmpsl
pop
int3
sbb
arpl
push
sahf
xchg
mov
or
sub
jecxz
or
xor
mov
fs
mul
add
pop
nop
in
adc
cmp
push
sahf
imul
push
mov
enter
jmp
cmc
push
cmp
push
cs
and
mov
add
fisttps
insb
lcall
pop
pop
xor
pusha
pmaddwd
cmpl
mov
xchg
xchg
nop
out
divl
daa
inc
aaa
jo
pusha
pop
adc
ja
inc
and
cmpsl
shlb
out
divl
daa
inc
aaa
jo
pusha
pop
adc
ja
inc
and
mov
loopne
nop
out
divl
daa
inc
ss
pusha
pop
adc
ja
inc
and
cmpsl
shll
out
ja
inc
mov
popf
fiaddl
pusha
pusha
addr16
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
les
cld
and
in
scas
xchg
test
add
pop
add
add
pop
add
pop
add
add
add
add
daa
add
add
insl
add
add
add
adc
lea
or
and
mov
or
push
add
add
lods
add
add
add
add
add
add
add
add
add
add
and
popa
add
add
xchg
aaa
add
add
popf
add
addl
add
add
add
add
add
add
mov
and
dec
add
add
add
add
add
adc
das
add
add
jne
xor
data16
add
add
jle
test
add
sub
jg
pusha
add
movb
add
add
add
add
add
add
add
add
add
add
add
int3
add
nop
add
add
add
add
add
add
lea
nop
add
add
cmpsl
add
add
imul
lods
add
inc
add
add
sbb
add
jle
cltd
add
xchg
add
incb
pusha
add
add
cmpsl
add
add
movsl
add
add
add
bound
outsl
add
add
add
add
push
add
popa
add
cmp
xchg
add
add
add
lea
cmp
fadds
sub
pusha
add
add
cmpsb
add
mov
add
add
add
pop
add
add
add
add
movb
add
add
add
add
jne
mov
add
mov
adc
or
add
popa
add
add
add
ja
in
inc
add
add
add
add
add
pop
add
leave
add
add
roll
add
addl
add
add
sub
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
arpl
movsl
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
sti
add
mov
add
add
daa
add
add
add
add
add
popa
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
cltd
add
add
jmp
mov
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
add
add
add
pop
add
add
addb
add
add
add
aas
add
add
add
add
add
rolb
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
pop
add
enter
pusha
add
pop
add
add
add
xchg
xor
jbe
hlt
jno
add
movsb
xchg
lcall
in
fistps
sbb
das
in
out
push
sbb
adc
movsl
jle
lock
rorb
hlt
lahf
mov
mov
xor
pop
cmp
jnp
add
addr16
sbb
jmp
sbb
out
nop
repnz
repz
movaps
repnz
pop
or
add
enter
mov
push
imul
popa
mov
clc
cmp
mov
mov
and
pop
sub
ss
sarb
movsl
jmp
or
outsb
xchg
in
cmp
mov
test
stc
xor
push
push
sbb
and
in
int3
xlat
dec
ret
imul
cltd
daa
pop
fucomi
pop
fwait
mov
dec
mov
lock
push
cld
xchg
xor
and
stos
cmp
cmp
add
dec
adc
add
loop
setbe
jbe
pushf
cli
scas
push
jecxz
out
jecxz
push
mov
jae
into
xchg
pop
leave
shl
aas
or
cld
xchg
mov
mov
xor
fisttps
inc
cmpsb
lret
cmpsb
xchg
sbbl
lahf
aas
test
sbb
mov
loopne
sub
out
xchg
out
ror
xchg
aas
incl
repz
ds
shlb
lahf
mov
jg
adc
stc
push
in
aad
xchg
mov
xchg
jno
jno
testb
es
mov
ljmp
sub
add
pushf
fildl
bound
or
push
vorpd
dec
xchg
add
push
lahf
cltd
insb
inc
xor
shrl
xchg
and
jecxz
cmp
mov
outsl
jbe
pushf
add
aas
pushl
xor
scas
push
mov
push
pop
sub
leave
aaa
dec
arpl
sbb
stos
xchg
rorl
push
mov
xor
std
test
jno
rclb
sbb
xor
xchg
pop
pop
xor
add
mov
lock
scas
push
imul
push
outsb
jnp
jo
fdivs
leave
fldt
testl
popf
push
cld
sbb
cmp
inc
neg
fs
lahf
cmp
lock
cli
movl
and
cmpsl
pop
scas
fistpll
and
sub
sbb
mov
subl
sbb
hlt
pop
and
sti
adc
mov
push
inc
sbb
fs
addr16
or
add
fnstenv
jmp
dec
arpl
je
push
movsb
mov
or
mov
push
xor
faddl
push
mov
pusha
jo
mov
and
and
xor
insb
mov
les
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
