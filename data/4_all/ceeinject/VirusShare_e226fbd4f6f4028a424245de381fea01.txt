adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
fiadds
out
mov
xchg
jmp
repnz
add
and
push
inc
push
adc
bound
jb
or
mov
mov
mov
add
jle
outsb
xor
inc
rsqrtps
bound
jb
or
mov
mov
mov
cmp
dec
push
push
or
push
adc
jge
inc
jb
subb
xchg
add
adc
and
inc
je
imul
jmp
xor
add
mov
loop
ret
jb
and
fldcw
jg
and
cmpsl
fmulp
xchg
pop
pop
je
icebp
jae
ret
outsb
daa
jmp
pop
inc
test
popf
jae,pn
jge
xchg
cmp
ret
jno
out
scas
mov
lahf
fcoml
add
pushf
movsl
push
lea
dec
outsb
jnp
adc
ret
inc
sbb
inc
adc
fsubp
add
mov
shll
loop
ss
mov
add
ja
std
or
mov
add
cli
mov
sub
sbb
mov
mov
mov
add
jle
outsb
xor
inc
push
push
bound
xor
out
lods
inc
mov
lods
loope
roll
sub
dec
sub
dec
sub
pop
pop
test
mov
in
cmpsl
jmp
sub
sub
je
pop
jmp
pop
inc
sbb
ror
out
mov
fldt
scas
repnz
add
jle
outsb
xor
inc
push
push
bound
jb
or
mov
mov
mov
add
jle
outsb
xor
inc
push
push
bound
jb
subb
dec
pop
jl
out
mov
mov
sbb
je
insb
aas
add
xchg
lahf
jle
sahf
sbb
cmp
dec
cmp
popf
test
in
add
jg
stos
lcall
scas
lahf
jmp
lea
inc
jmp
push
movsl
xor
lea
mov
mov
ljmp
lcall
or
mov
cwtl
jns
ret
sarl
js
pop
test
out
imul
and
lcall
add
int3
push
pop
fistpl
push
mov
sbb
cmpsl
lret
cmp
scas
pop
in
hlt
in
xor
and
in
in
lcall
mov
xor
jb
shll
aas
rolb
loop
cmp
lock
jno
push
clc
ret
movsl
gs
imul
adc
pusha
adc
fwait
push
sub
sbb
jbe
out
mulb
in
rcrl
in
movsl
lods
clc
xlat
cmp
dec
lods
jo
mov
mov
adcl
jnp
hlt
lret
test
test
fcoms
and
mov
pop
ret
or
add
pop
mov
mov
jl
inc
jl
push
push
pop
in
xchg
in
adc
jnp
inc
xor
std
out
xor
enter
daa
and
movsb
in
cmp
testl
imul
sahf
or
lods
cmp
inc
pop
ja
inc
js
cwtl
out
sub
das
fimuls
lock
mov
stos
add
pop
or
and
sbb
cld
inc
xor
fistps
adc
xchg
adc
add
dec
dec
pop
gs
movsl
insb
jno
xor
pushf
and
std
jbe
push
and
sub
jns
add
ret
cltd
and
push
ss
xchg
push
fcoms
cmp
dec
xchg
scas
daa
add
flds
mov
adc
loope
je
into
or
fwait
jmp
pop
xchg
int
mov
mov
cwtl
mov
sbb
adc
pop
mov
dec
cmpsl
fdivs
inc
repz
stos
lcall
sti
jmp
xchg
sub
in
sub
add
sbb
xchg
xchg
ja
jl
xlat
mov
mov
xor
ja
outsb
mov
cltd
cmc
lea
jnp
xor
ret
mov
lds
sub
jecxz
je
dec
test
stos
aas
xor
js
or
in
in
lret
mov
mov
sbb
adc
js
xchg
dec
cmp
inc
or
lods
sub
scas
and
mul
repnz
xlat
aas
jae
outsb
dec
pusha
es
add
jb
cltd
adc
pop
jb
sbb
jge
sub
outsb
outsl
dec
fstp
and
insl
mov
push
pop
adc
pop
add
rclb
fadds
lods
dec
lods
cmc
lods
mov
or
cli
or
xchg
inc
stc
dec
jno
xchg
mov
inc
inc
jg
add
out
mov
fdivs
bound
pop
pop
adc
pop
repnz
cmp
push
sub
aam
orl
jmp
mov
sbb
int
mov
mov
fisubrs
mov
hlt
stos
pop
xor
lods
xchg
je
or
dec
cmp
pop
adc
lret
xor
mov
pop
aad
pop
jns
scas
rcl
iret
sarl
stc
pop
clc
cmp
sbb
cmp
xor
adc
cmp
push
inc
loope
jns
mov
nop
or
mov
arpl
jns
cs
mov
lea
push
dec
jmp
jnp
lcall
xlat
and
add
popf
adc
lds
ss
lds
cmp
inc
imul
xchg
xor
test
stos
push
mov
orb
dec
les
stos
ja
push
fistps
or
mov
hlt
cltd
xchg
cld
sub
pandn
repnz
sbb
jae
mov
cmp
dec
mov
push
testb
pop
pop
shll
or
int3
iret
pop
test
and
jnp
mov
adcb
in
cmpsb
jae
push
jmp
fs
pop
imul
cmc
imul
mov
daa
stos
xor
jo
and
mull
cmp
std
and
mov
add
stos
mov
adc
pop
or
push
mov
jns
iret
and
mov
push
pushf
sarl
aas
rcll
pop
pop
aad
arpl
adc
fistpl
sti
mov
jle
shrb
cmpsb
or
insb
fistpll
sbb
mov
inc
xchg
lret
notl
lods
mov
movsb
shll
pop
mov
scas
lret
ss
stos
mov
sahf
fnsave
int
or
sub
mov
push
sbb
cwtl
aam
dec
xchg
adc
aam
in
push
or
out
sub
jmp
xor
in
repnz
scas
mov
mulb
inc
mov
jbe
pop
cmpsb
cli
adc
je
enter
js
jg
ljmp
xor
xlat
pop
cmc
xchg
mov
daa
iret
loopne
sbbl
inc
fisttpl
jle
push
mov
jnp
pop
cld
or
cmp
leave
push
push
int
fsubr
rorl
mov
xchg
mov
es
mov
pusha
out
add
jae
test
jbe
sbb
cltd
dec
imul
arpl
inc
mov
jbe
fs
rclb
dec
cmp
xchg
sbb
xchg
pop
cld
repnz
jne
xchg
in
inc
aaa
shll
pop
into
cmp
sub
jno
push
sbb
sub
pop
dec
das
popl
in
frstor
gs
ret
jae
roll
push
cmp
jmp
xchg
enter
jge
sub
subb
mov
jne
sarb
loope
rcrl
rol
test
dec
stc
aaa
out
cmp
aas
xchg
xchg
adc
out
nop
call
cmpsl
sub
stos
roll
mov
lods
mov
orb
bound
in
in
inc
lods
clc
xchg
adc
xor
xor
cmp
icebp
dec
sbb
mov
imul
jl
dec
add
fwait
sbb
inc
push
lret
pop
dec
in
orb
scas
repnz
loope
xchg
jnp
out
sub
popw
sub
test
fiaddl
imul
jl
fwait
xchg
xchg
adc
jmp
shll
sbb
repz
sub
dec
in
cmpsb
mov
aad
fistps
fisubl
repnz
nop
adc
inc
ds
push
imul
mov
fdivrl
ds
mov
in
outsl
lret
xchg
mov
cmp
sub
mov
sbb
rcr
ss
fists
das
mov
pop
mov
ficoms
xchg
arpl
psubd
aam
into
insb
out
in
mov
cmc
in
enter
je
fsub
out
adc
stos
test
std
add
nop
inc
pop
addb
add
addr16
stos
in
mov
popl
xor
shrb
mov
adc
fmull
jg
mov
int3
mov
and
pop
mov
int3
inc
jmp
jno
rorb
inc
inc
push
cmp
das
mov
cli
and
jnp
or
movsl
movsl
or
cmp
das
xor
jg,pn
ret
sbb
flds
pop
jne
imul
fldt
aas
enter
push
xchg
jle
jecxz
sub
xchg
dec
cwtl
xchg
mov
lock
movsl
imul
sbb
push
jmp
movsb
xchg
les
into
int3
sbb
enter
mov
popf
pop
mov
mov
pop
vaddsubpd
jge
mov
in
fnstsw
ficoms
or
sbb
xchg
xchg
cmc
mov
adc
out
stos
pop
leave
adc
das
pop
cmp
mov
idivb
mov
cmc
sub
fidivrs
mov
pop
lahf
add
add
xor
mov
fimull
xorl
push
es
xchg
inc
push
mov
mov
inc
push
dec
add
xchg
and
and
nop
aas
ret
fwait
les
sbb
nop
fildl
sub
mov
popf
mov
rorb
mov
dec
inc
mov
add
adc
or
jno
add
ss
rclb
jp
lock
mov
inc
stos
mov
mov
lock
mov
loop
xchg
fstps
sub
in
fidivs
insl
push
add
mov
ftst
sub
mov
fldenv
call
cmp
lret
scas
add
sbb
popa
lret
xchg
xchg
and
pop
ja
les
insb
inc
gs
fldt
mov
xchg
out
pop
movsl
cmc
push
js
push
out
jb
or
loop
shlb
xor
shr
mov
add
xchg
jg
jne
scas
pop
mov
xor
in
jo
add
in
xor
or
fcomps
lahf
jge
add
cmpsl
hlt
iret
repnz
fisubl
inc
dec
outsb
xchg
ret
pushf
push
mov
mull
fcmovne
xor
faddp
loope
sbbl
leave
fldt
adc
sahf
std
hlt
push
fscale
ret
in
shl
pushf
mov
into
add
lahf
jecxz
pop
or
inc
jo,pn
jecxz
jbe
ja
push
mov
xlat
pop
xchg
aas
jp
aam
inc
or
pop
sahf
xchg
sarb
mov
scas
jnp
hlt
loope
fdivrl
pop
push
std
xor
inc
test
sub
mov
xchg
lds
or
stos
into
push
sub
push
or
cmpl
hlt
ljmp
xor
xchg
inc
lds
outsb
sbb
mov
sbb
or
jg
xor
xor
push
dec
and
mov
jl
adcl
icebp
lock
pop
insb
orl
sub
loopne
and
lock
and
pop
cmp
inc
in
fsts
mov
lods
mov
pushl
andl
xor
and
outsb
cmp
fisttpl
cltd
out
int
or
lret
stos
hlt
xchg
mov
mov
aaa
aas
sbb
sahf
aaa
sbb
sbb
or
mov
mov
lds
cmp
mov
inc
sbb
pop
inc
mov
xlat
movsb
fucomip
inc
cmp
dec
cmpsb
mov
cmp
mov
or
stc
loope
push
loop
lret
mov
nop
mov
test
rcll
inc
push
movsb
mov
sub
or
sbb
outsl
js
in
insl
pop
sbb
or
xchg
pop
add
popf
cmp
sbb
popf
dec
push
xchg
clc
add
xor
lods
sbbb
shlb
mov
stos
and
push
gs
adc
cmp
aad
pusha
gs
mov
daa
dec
sbb
test
jg
in
xor
mov
sub
lods
sahf
mov
ss
mov
jbe
mov
inc
xchg
faddp
inc
sbb
aad
pop
popf
lock
iret
dec
cmp
icebp
fmuls
mov
imul
lock
in
fwait
scas
adc
mov
xchg
pusha
adc
test
iret
mov
rolb
popf
cltd
fimuls
fdivrl
cmp
inc
vpsubd
aas
sub
jnp
adc
cmp
inc
cmpsl
push
mov
pop
outsl
jbe
loope
jecxz
mov
jecxz
mov
jno
sub
fs
or
jno
cld
ret
daa
hlt
cs
scas
cld
movsl
pop
xchg
mov
or
aad
jb
xchg
js
daa
adc
std
movsl
enter
jg
aas
fstl
xchg
jle
mov
daa
lods
push
push
sub
les
cmp
add
int
xchg
or
push
mov
pop
negl
xchg
inc
testl
inc
jno
cmpsb
pop
jae
sbb
lret
cmc
mov
and
mov
push
xchg
loop
pop
or
pushf
stc
into
jnp
dec
adc
mov
popa
outsb
es
push
xchg
xor
std
jae
ljmp
jmp
aam
mov
or
into
push
cmpsb
dec
fsubp
fs
jl
je
ljmp
ficoms
das
loopne
push
lods
loope
sbb
jne
cwtl
xchg
int
out
push
jnp
outsb
xor
push
scas
mov
sbb
push
aaa
jl
pushf
fidivrl
pop
aad
xor
loop
lods
shl
dec
call
aaa
enter
popf
sbb
mov
pushf
pop
aas
xchg
jecxz
add
pushf
sub
jb
mov
cltd
in
repnz
adc
xor
in
pop
xchg
and
dec
rorl
sbb
mov
cwtl
fwait
and
loope
pop
mov
scas
and
sub
lea
lret
dec
mov
fsubrl
jb
loopne
into
xor
dec
aam
int3
gs
push
fisttps
leave
leave
lods
loopne
mov
enter
cmp
test
sub
daa
sub
jnp
xchg
out
pop
in
xor
rcrb
pop
movsb
lock
aam
add
cmp
aas
or
int
sti
ret
mul
sbb
push
nop
outsl
out
inc
vcmpsd
icebp
inc
fwait
jmp
pusha
push
in
rol
arpl
mov
xchg
popf
je
mov
push
into
mov
and
jns
or
add
mov
adc
pop
cmp
mov
inc
and
out
add
incl
jle
dec
aam
pop
leave
icebp
or
loop
cltd
xor
dec
pop
addr16
cmp
repz
mov
push
in
xchg
js
pushf
or
jae
cwtl
jb
push
rcll
xchg
xor
insb
iret
loope
filds
inc
enter
stos
out
leave
sub
out
push
or
sbb
dec
and
add
jle
imul
cmpsb
mov
scas
mov
xor
test
sbb
add
and
in
bound
ja
adc
xchg
fistpll
ficompl
fildll
xorl
jo
fs
scas
mov
jl
sbb
add
lcall
add
cld
rcl
jno
mov
lret
dec
jbe
sub
and
mov
dec
mov
jnp
fwait
rcrl
push
mov
mov
shll
mov
cli
ja
bound
jns
push
add
jno
clc
ja
gs
adc
mov
jb
adc
int
adc
push
das
cmp
scas
lods
lret
lock
jle
ljmp
stos
in
mov
xchg
jns
push
cmp
adc
pop
push
scas
test
push
loop
out
inc
add
test
add
loop
ja
repnz
or
js
cmp
fisttpl
daa
xchg
cmp
and
fstpl
add
sahf
insb
mov
in
mov
sbb
mov
and
mov
jo
jp
xor
jecxz
mov
mov
call
cmpsl
es
or
sahf
pop
push
jl
adc
pusha
xchg
daa
scas
cmp
fnsave
enter
out
sub
pushf
push
shr
adc
loope
pop
xchg
sbb
sub
incb
mov
fnsave
outsl
sbb
enter
ljmp
sbb
dec
push
add
std
in
inc
mov
pop
ret
xchg
repnz
sbb
fistps
data16
das
imul
test
jno
lahf
loopne
jbe
dec
adc
xchg
outsl
xchg
mov
shll
cmp
icebp
jo
les
pop
mov
stc
mov
jmp
add
aad
add
addr16
inc
sbb
in
aaa
call
jno
addr16
push
popa
dec
jmp
jbe
sbb
mov
pop
out
pushf
sbb
sub
or
jns
pop
mov
fidivl
in
lahf
sbb
xchg
scas
out
ljmp
out
jmp
push
clc
xchg
or
mov
sub
inc
out
mov
mov
adc
scas
xchg
or
jp
int
jp
aaa
test
rcrl
movsb
out
jbe
jl
adc
jecxz
in
sub
mov
inc
xchg
hlt
lahf
shlb
nop
mov
adc
mov
out
fcom
mov
lahf
xor
out
sub
inc
jmp
mov
aaa
fwait
test
insb
lret
xor
test
or
inc
subl
outsb
daa
scas
ja
enter
or
sub
mov
inc
fisubrl
jb
and
lods
ljmp
xchg
bound
dec
lea
push
mov
and
imul
insb
and
mov
or
push
mov
test
jp
pop
xor
cmp
loop
test
jne
xchg
dec
and
sub
outsb
leave
pop
outsl
push
jns
pop
mov
int
in
and
loope
pop
mov
daa
test
jecxz
cmp
loope
mov
dec
stc
repnz
xchg
std
mov
clc
test
out
fidivl
lcall
repz
xor
fistpl
dec
pop
pop
pop
mov
jne
push
push
inc
std
movsb
nop
into
jmp
aaa
add
pusha
pop
cld
xor
frstor
jg
scas
mov
test
js
jecxz
and
popa
in
fwait
sbb
ds
lock
ret
push
xchg
pop
adc
or
lahf
push
sub
adc
call
sti
sti
dec
xchg
xor
mov
dec
add
unpcklps
sbb
cli
leave
mov
fistps
into
mov
inc
jmp
cmp
int
jns
fcomp
cmp
mov
rcl
adc
push
pop
or
cmpsl
mov
cmc
push
adc
mov
sbb
lret
or
cmp
ss
aaa
int3
sbb
jp
test
inc
adcl
mov
jmp
mov
mov
or
ficompl
fildll
test
or
mov
out
jecxz
mov
out
test
mov
or
adc
cmc
int
mov
push
sbb
cwtl
fstl
cmpsl
sub
inc
xor
in
or
aam
cmp
jae
sbb
lret
inc
jp
jmp
lods
lret
sub
inc
cmp
push
or
adc
in
nop
push
sbb
xchg
push
pop
and
shll
pop
lcall
and
sbb
inc
mov
inc
push
mov
loopne
js
push
dec
es
cmpsb
les
jmp
fisttps
cmpsb
ret
pop
or
pop
cmp
aas
jb
lret
xor
mov
and
in
clc
fcoml
xchg
sub
add
lds
pop
sub
pop
ud1
int
mov
fbstp
inc
jnp
xchg
aas
mov
imul
stos
rolb
es
inc
jns
mov
mov
mov
cmc
shr
fwait
xchg
push
cmp
pop
push
loop
push
fwait
pop
sub
es
sbb
lahf
push
sub
stc
mov
jo
ljmp
mov
pop
xchg
scas
mov
xchg
fcmovne
jp
jnp
fcomps
mov
adc
lcall
mov
pushf
mov
cmp
sti
pop
call
jge
and
mov
test
sub
movsb
cmpsl
mov
sub
call
adc
inc
fidivs
ss
out
sub
adc
mov
lods
ja
sti
mov
dec
int
fnstenv
sub
dec
mov
add
out
mov
fcomps
xchg
fs
mov
jbe
mov
xchg
xchg
push
mov
pop
pop
adc
cmp
test
mov
mov
cmp
push
enter
adc
inc
pop
jae
pop
push
clc
pushf
fiadds
lea
xchg
xchg
decb
cmp
ret
notl
xor
xchg
sub
mov
xor
lret
shr
std
fimuls
fcmovu
mov
adc
push
pop
adc
stc
shrl
xchg
dec
loope
out
enter
js
mov
fimuls
and
adc
or
xchg
mov
push
ljmp
stos
aam
fisubs
imul
sbb
nop
inc
mov
jecxz
cwtl
xor
mov
test
mov
arpl
push
add
fidivrs
adc
out
sahf
mov
push
sahf
daa
adc
addr16
inc
test
lods
ljmp
in
pop
mov
scas
jl
shl
push
pop
inc
lea
sahf
andb
mov
icebp
jmp
sub
jp
cmc
jbe
jp
loope
repz
push
loopne
iret
mov
popa
and
and
mov
sub
cltd
pop
xchg
ds
sub
gs
movsb
xor
outsb
insb
mov
or
and
mov
adc
push
rcr
loopne
xchg
addb
xchg
cld
jmp
shll
sarb
add
jle
outsb
xor
inc
push
push
bound
jb
or
mov
mov
mov
add
jle
outsb
xor
inc
push
push
bound
jb
xchg
xchg
mov
sarb
add
jle
outsl
xor
inc
push
push
aas
bound
jb
or
mov
mov
bound
or
aam
outsb
inc
imul
lea
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
iret
push
dec
inc
jg
outsl
movsl
adc
dec
and
push
into
hlt
out
in
xchg
mov
pop
push
dec
inc
jle
outsl
fs
adc
add
xor
inc
iret
les
icebp
popl
push
dec
inc
jg
outsl
fs
adc
add
xor
and
aam
out
xchg
mov
lahf
rol
shrl
sbb
xor
aas
add
sbb
pop
push
int3
cmp
scas
mov
icebp
call
push
ret
push
cs
mov
pop
scas
stos
les
cmp
test
mov
push
cmc
fiaddl
jo
push
mov
mov
pop
out
aam
lds
imul
cmp
push
pop
popa
xorl
adc
das
iret
sub
cmp
xor
popa
jg
fsubl
movsl
movsb
mov
mov
negl
das
and
sub
in
out
cmp
push
inc
cmpsl
or
ljmp
mov
sbb
mov
aam
mov
pop
add
jg
outsl
fs
adc
add
xor
and
aam
push
out
in
xchg
popl
push
or
pop
push
push
js
dec
push
mov
jge
nop
cmpsl
mov
fcmovnb
add
or
or
pop
jp
imul
push
or
xchg
mov
out
shll
pop
sbb
dec
sbb
es
aas
xor
and
aam
push
out
in
xchg
popl
push
dec
inc
jg
outsl
fs
adc
add
xor
and
aam
push
out
in
xchg
popl
push
dec
insb
repnz
xchg
fcmovnb
enter
jl
mov
sahf
neg
out
mov
js
fnsave
shrl
out
lea
add
cmp
lods
ret
xor
or
in
cmc
push
insl
stc
push
cmpsl
dec
lret
xor
cmp
jecxz
lods
push
cmpsb
ja
fnstenv
out
jnp
fimuls
icebp
aam
nop
movq
pushf
xor
ljmp
mov
adcl
mov
daa
leave
mov
lock
out
mov
cltd
loope
pop
jmp
ja
fsubl
pop
out
xor
jae
arpl
lods
inc
fs
dec
and
clc
xor
inc
jno
cmpsb
std
jmp
add
subl
cmp
ds
xor
in
aas
cmpsb
popf
add
xchg
pop
mov
dec
test
sub
gs
pop
cmp
cld
addr16
lcall
mov
adc
adc
out
mov
nop
aad
loope
in
sahf
adc
ljmp
xchg
inc
cmpsb
adc
inc
fildll
imul
jb
fisubrs
xor
sbb
jl,pn
xor
xchg
popf
cltd
mov
cs
xchg
mov
stos
pop
clc
dec
lods
ss
les
mov
pusha
lea
or
pop
mov
sub
push
stos
mov
movsb
inc
pushf
nop
jge
mov
jns
or
shr
sub
jp
leave
movb
clc
je
lock
jg
loopne
fisubl
outsb
push
cmp
adc
add
mov
aad
push
ds
sahf
stc
inc
xchg
inc
push
push
push
ret
mov
push
push
push
ljmp
pop
iret
mov
scas
fbstp
sbb
lret
adc
rcr
shlb
filds
xor
adc
and
add
push
movsb
pop
xor
add
out
lods
repnz
inc
mov
in
cli
fs
out
inc
iret
ss
cli
call
inc
jmp
lods
mov
add
fstpt
test
pushf
push
xchg
inc
xor
aas
rcrb
es
andb
cmp
shrl
ljmp
sub
jo
lods
loopne
clc
inc
cwtl
call
sbb
mov
inc
imul
pop
jae
dec
pop
aaa
cltd
and
sub
sahf
pop
scas
out
xchg
and
loopne
sbb
out
mov
push
fwait
pop
jbe
popl
addl
es
loop
pop
push
popf
ja
fdivrl
clc
test
xor
cltd
cltd
push
sahf
and
mov
mov
and
and
jne
daa
and
jge
rolb
xor
call
lds
fnstsw
jle
sbb
xchg
inc
cmpsl
or
adcl
dec
xor
ds
ds
push
fldt
push
in
add
lcall
and
push
sbb
sub
push
and
pop
fsubr
je
ss
bts
ja
cmpsl
xchg
push
filds
flds
out
mul
in
hlt
adc
mov
xchg
pop
arpl
pop
movsb
xchg
mov
adc
aam
leave
stc
push
mov
inc
xacquire
fcmovnb
cmp
xlat
sub
fists
fwait
sbb
inc
inc
inc
cmc
sub
data16
cmpsl
adc
add
fwait
sbb
pop
mov
pop
loopne
xchg
out
cmc
in
pusha
cwtl
test
cmpsb
mov
loope
xor
idivb
mov
pop
push
mov
mov
sbb
gs
inc
iret
cmp
pop
arpl
popf
rcrb
movsb
cmc
pop
imul
inc
enter
pop
inc
les
lea
imul
or
and
xchg
sbb
pop
add
inc
arpl
jl
jne
mov
push
arpl
or
add
ret
mov
stc
jmp
dec
mov
sub
inc
push
or
ret
xor
sub
cli
bound
rcr
xchg
mov
mov
jae
fldt
jecxz
mov
adc
xchg
jp
outsl
jle
out
in
outsl
out
jecxz
mov
jp
jnp
rcr
inc
hlt
dec
iret
pop
jg
mov
loop
int3
stc
out
out
loop
push
in
jns
je
cld
ror
das
ret
add
fsub
jnp
jl
push
fistpl
cmp
xor
stc
insb
mov
clc
dec
dec
inc
mov
ja
pop
test
fdivl
add
fidivrs
inc
pop
out
dec
clc
jnp
xor
js
lock
and
and
loop
add
mov
push
ret
pop
les
int3
or
test
sbb
push
mov
sbb
das
inc
xor
sub
clc
das
mov
xor
js
jo
adc
xor
mov
das
jno
xchg
mov
push
or
andb
mov
loope
jmp
scas
call
cmp
sub
cli
and
xor
sbb
jns
int3
push
jbe
xor
ljmp
dec
leave
mov
sbb
jl
inc
ss
dec
leave
rorl
bnd
popa
cmpsb
jle
jb
pop
sti
std
pusha
popf
std
out
rorl
sub
mov
ljmp
repz
sarl
ljmp
lret
xchg
xchg
fnstsw
xchg
call
jle
adc
rolb
pop
and
adc
adc
jnp
lods
sub
push
mov
jns
or
ds
into
imul
aaa
xchg
lret
into
cmc
fiaddl
and
aam
pop
xchg
stos
aaa
dec
shrl
dec
shl
inc
mov
movl
jge
xchg
or
cld
stos
test
shrb
mov
cmp
je
loopne
jge
pop
push
imul
xchg
pop
roll
gs
mov
dec
adc
je
xor
mov
fldt
sub
xchg
mov
sub
dec
and
add
pusha
addr16
sub
or
sbb
sbb
outsl
out
mov
cld
rolb
push
pop
scas
or
xchg
xor
aaa
repz
and
aam
test
inc
xchg
popf
sbbb
add
cmpsb
and
mov
clc
shlb
jmp
bound
lea
pop
das
mov
push
push
pop
jae
mov
scas
inc
enter
ljmp
fisttpll
dec
popf
movsl
pushf
lock
in
ljmp
leave
scas
jne
ss
cld
out
imul
or
xchg
adcl
cmp
imul
add
dec
bound
shl
xor
negl
sbb
pop
or
or
pusha
int3
pusha
sub
lcall
bound
pusha
nop
leave
inc
pushf
pop
sarl
popa
cmp
movsb
imul
pop
sbb
das
pop
xchg
and
push
into
xlat
xchg
imul
fisubrs
mov
mov
or
pop
xor
pop
lea
jmp
aas
sub
out
div
lods
jo
mov
out
shll
cmp
push
xor
rcl
inc
or
mov
add
mov
jg
sub
push
movl
fistpll
fs
pop
mov
mov
jge
divb
fdivp
push
push
repz
rorb
mov
rcr
lcall
fcoms
shlb
faddl
mov
iret
jb
mov
adc
repz
loope
loope
mov
mov
push
jbe
fidivs
xchg
bound
jg
sar
sbb
cli
mov
bound
push
mov
mov
addb
cmpsb
add
inc
int3
ss
jo
push
mov
testl
test
sub
jl
push
iret
sahf
jmp
cmp
cmpsl
dec
loopne
fs
mov
clc
inc
pop
cwtl
add
leave
hlt
xor
pop
fisubrs
xchg
inc
push
or
cmp
lret
movsl
pop
iret
dec
and
cmc
stos
clc
pusha
shlb
dec
lret
fsts
sub
jmp
and
add
or
mov
mov
bound
push
sub
stos
jle
call
cmc
mov
repz
ds
adc
out
xchg
imul
les
in
scas
in
adc
in
pop
daa
outsb
bt
mov
pop
cwtl
add
xchg
jb
insb
popf
mov
pop
xchg
fwait
out
lret
arpl
test
mov
mov
sbb
adc
push
jg
js
pop
push
repz
sub
nop
icebp
ljmp
roll
outsb
adc
and
test
mov
jnp
pop
sti
mov
or
or
cs
popl
sub
arpl
in
cli
and
popf
fwait
test
xchg
jl
loopne
fwait
and
scas
jb
mov
enter
cltd
xchg
scas
sbb
jnp
cmpsw
jmp
cmp
sahf
cmc
add
js
inc
aad
int3
std
cmp
in
in
inc
pop
shlb
ljmp
mov
xchg
daa
pop
lods
or
pop
lcall
mov
sub
outsb
in
dec
push
out
outsl
outsb
jmp
jno
sub
mov
cmp
in
push
stos
mov
daa
test
push
jecxz
push
jge
std
xchg
mov
and
push
insb
call
mov
xchg
mov
inc
je
mov
jp
mov
push
cs
lret
mov
or
sub
xlat
xor
popa
push
mov
ss
add
mov
jl
shlb
je
jb
pop
call
pop
push
lods
sti
pusha
loopne
or
cmc
cmp
mov
or
push
mov
mov
pushf
cmp
flds
jns
fstl
mov
mov
test
pop
loop
jle
adc
and
das
mov
enter
jl
pop
pavgw
repz
xchg
jo
test
sub
jbe
sbb
insb
or
movsl
mov
leave
test
sbb
repz
or
lret
adc
jle
cmpsl
repz
cmp
push
mov
imul
bnd
rcll
push
rcll
insb
cmp
dec
bnd
pop
ja
mov
mov
stos
sub
cmc
arpl
add
adc
xor
iret
int3
lds
popf
or
js
js
loopne
mov
inc
mov
push
inc
xlat
sahf
sbb
sbb
and
sbb
clc
mov
jg
fmuls
dec
fstpl
push
jb
push
in
cmc
sahf
cli
dec
xor
fmuls
jle
mov
mov
nop
sti
dec
inc
xor
imul
pop
sar
push
xlat
pop
pop
cli
mov
enter
mov
mov
sub
outsb
xor
icebp
cmp
lcall
movsb
mov
or
jnp
add
jg
add
and
ja
pop
pusha
pushf
data16
imul
imul
fcomps
pop
mov
pop
int
xor
out
cld
ret
xchg
add
mov
popa
inc
xor
es
aaa
jne
jns
ficoml
dec
fildll
shlb
mov
rcr
dec
mov
adc
cs
inc
xor
les
fs
jbe
scas
lods
sub
std
ja
push
mov
lea
js
pusha
mov
mov
sub
cmc
adc
cmp
imul
int
adc
dec
loopne
out
js
outsl
pop
std
lcall
inc
imul
mov
loop
adc
test
jl
test
jmp
aam
push
in
ljmp
cmpb
xchg
mov
cmp
or
test
cmp
inc
mov
add
pop
adc
bound
mov
and
push
mov
and
and
xchg
pop
mov
adc
mov
xchg
rcl
divb
jns
or
sarb
repz
test
out
out
push
outsb
movsb
loop
jno
and
or
push
xchg
mov
sub
dec
push
mov
dec
xor
and
leave
roll
push
push
jb
in
enter
mov
mov
mov
test
aaa
mov
icebp
push
xchg
aaa
push
or
push
add
jbe
xlat
jmp
in
xchg
sub
incl
aad
pushf
xchg
scas
rorb
ret
fidivs
int3
lret
lcall
icebp
sbb
movsb
xchg
push
das
stos
fsub
mov
mov
inc
adc
dec
jno
push
jo,pn
cld
and
test
mov
or
out
mov
mov
das
cli
or
mulb
aas
mov
fcmovbe
push
sbb
and
sbb
pop
sahf
xchg
mov
pop
call
push
call
sub
push
mov
and
adc
fdivrl
adc
sbb
mov
sarl
sbb
xor
stos
mov
das
jns
sbb
das
rclb
xchg
jge
dec
lods
out
and
or
loope
lods
mov
fnsave
negl
das
mov
and
sbb
leave
jle
ret
push
fmul
shrl
fs
push
lods
sub
jns
arpl
mov
adc
daa
je
jmp
lahf
xchg
fsts
pop
stc
inc
push
ljmp
jae
jmp
dec
jae
inc
andb
adc
aad
mov
ret
pop
inc
es
je
jne
jo
int
pushl
dec
jns,pn
inc
mov
cmpsb
dec
imul
out
sti
mov
dec
cmp
mov
sub
cmp
dec
ljmp
xor
pop
mov
andl
mov
lret
loop
dec
jae
add
and
in
test
inc
fdivrp
xor
shl
jmp
mov
dec
or
mov
mov
xor
mov
pop
je
sbb
sub
aas
xchg
dec
ret
and
clc
cs
cmp
xor
pop
sub
enter
xor
pushf
negl
mov
push
out
fcmovnu
in
imul
dec
push
jne
sbb
imul
fwait
xor
cmp
ds
mov
add
sbb
test
cmc
push
jge
and
imul
xor
xchg
xchg
cli
dec
movsb
std
mov
xor
jbe
and
cld
out
inc
in
push
xchg
mov
inc
inc
jae
nop
into
push
push
push
and
sti
mov
shl
out
pop
fdivrl
mov
fists
daa
sbb
cmc
enter
lea
mov
push
push
iret
xadd
jmp
lods
xchg
mov
inc
cmpsb
scas
jne
push
inc
mov
sub
imul
test
clc
xchg
stos
mov
jno
inc
clc
or
xor
inc
call
pop
mov
aad
xchg
and
jnp
mov
pop
inc
das
mov
scas
inc
and
xor
dec
push
iret
mov
mov
pop
adc
mov
jg
scas
lcall
cmp
cltd
cltd
pop
xchg
call
dec
or
inc
scas
pop
dec
jns
push
stos
pushf
scas
xor
jb
adc
mov
push
sbb
mov
push
ljmp
cld
in
arpl
aas
je
lahf
int3
sub
add
ret
cmp
fbld
jl
jbe
xchg
xor
pop
in
mov
and
shll
pop
add
mov
mov
sbb
jbe
test
push
scas
mov
rcrb
std
jae
stos
pop
mov
push
pop
fiadds
xor
add
push
std
test
xchg
setb
scas
sbb
push
xchg
fadd
dec
pop
add
insl
mov
fsubr
call
pushf
das
loop
lcall
xchg
adc
bound
sub
test
or
lret
inc
push
add
jg
mov
lcall
pop
ss
lret
xlat
cmp
and
xor
lods
cld
in
xor
leave
pop
lret
popa
pop
fcoms
outsl
popf
movsl
xor
adc
insl
icebp
jecxz
pop
shlb
push
test
push
lock
push
mov
pop
cmpsl
xchg
pop
mov
test
mov
pop
int3
test
popf
dec
jno
xchg
gs
ljmp
xlat
lcall
pop
int3
fstpl
mov
and
jnp
jae
mov
ja
xchg
inc
dec
nop
mov
filds
cwtl
rclb
cmp
addb
dec
out
add
mov
das
and
pop
mov
cmp
adc
fxch
in
in
sbb
shl
inc
mov
fisubrs
fldt
push
sbb
pop
cwtl
or
sbb
mov
lret
lds
xchg
ja,pn
aas
loop
jl
andb
jmp
lcall
push
lret
sbb
xchg
sub
rorb
enter
cmpsl
fnsave
jbe
push
adc
fisubrs
mov
icebp
out
es
mov
test
and
inc
and
sub
or
sahf
es
insb
mov
cmc
jno
mov
mov
sbb
push
pop
mov
cmpl
pop
mov
push
rcr
je
ss
jl
jo
dec
data16
pop
or
jns
dec
nop
jg
pop
push
ja
sub
fldcw
push
fisubl
lret
cltd
jns
aaa
jne
jbe
jo
popf
loop
pushw
dec
adc
cmp
pop
xchg
cmpsl
pop
push
cmovno
mov
movsb
lock
in
xchg
mov
xchg
and
in
or
int3
or
scas
mov
mov
ss
xor
adc
sub
jmp
xor
les
lahf
sbb
xlat
jns
pop
das
movsl
and
hlt
adc
jns
aas
push
insb
inc
sahf
and
es
fisubs
jae
add
jns
cmp
push
mov
pop
scas
ss
dec
jns
mov
roll
cmpsl
sub
jb
pop
xchg
mov
aaa
fisubs
jg
push
inc
arpl
push
lds
cmp
je
jp
and
das
sub
adc
xchg
mov
xchg
dec
xchg
cmpb
push
cmp
xchg
leave
lods
int3
leave
iret
mov
xchg
xchg
in
push
inc
ljmp
mov
in
push
mov
inc
fdivp
and
mov
mov
jns
mov
sub
lods
sahf
adc
mov
inc
fpatan
pop
jo
nop
push
arpl
imul
pop
push
in
jns
ss
out
lcall
je
inc
dec
xchg
inc
mov
and
fmulp
mov
jne
xchg
xchg
inc
mov
aam
dec
pop
js
sbb
push
push
cmp
sbb
in
ds
cld
push
sub
pop
hlt
mov
dec
lods
pushf
xor
add
push
jp
or
andl
mov
add
gs
push
sub
shll
aas
pop
fst
test
push
xchg
push
push
cld
inc
mov
aas
das
stos
mov
pop
mov
fldcw
out
imul
push
inc
add
jmp
ds
or
pop
ret
ja
xchg
adc
cmp
add
dec
int
into
push
sub
cli
insb
notl
sahf
fsubrl
scas
into
xor
inc
push
cli
pop
testl
add
inc
cmp
inc
jl
jbe
insl
jne
inc
fcompl
insb
pop
xchg
sub
mov
jne
adc
in
xchg
push
jl
push
add
cmp
add
cmp
outsb
inc
ljmp
lods
jbe
insl
ja
fst
test
out
popa
and
sbb
sbb
xlat
push
inc
ja
inc
add
push
push
jecxz
jp
cld
pusha
jl
scas
cmp
sub
out
mov
dec
mov
mov
mov
fsubrs
dec
je
sub
mov
pop
mov
int
addr16
ss
add
cltd
out
mov
fistl
fadd
jge
mov
leave
dec
inc
lea
es
les
fstpt
mov
ja
add
scas
ss
imul
ljmp
es
xor
lret
fisubrs
ss
cs
xor
and
stc
fists
ss
mov
or
es
shlb
icebp
push
scas
xor
pushf
xor
test
out
mov
or
fst
mov
fldt
jle
sub
cmpsb
ljmp
aad
das
jmp
andb
dec
add
xchg
mov
mov
aad
mov
test
imul
push
push
das
jnp
cmpsl
cmp
addr16
movsl
rorl
push
mov
insl
lret
movsb
pop
test
out
es
out
in
loope
jbe
shll
lret
cmpsl
adc
mov
fldcw
pop
leave
psrld
mov
adc
inc
sti
ret
fsubs
mov
dec
movb
or
xor
mov
lods
adc
dec
je
mov
xchg
xchg
dec
sub
fs
adc
add
xor
and
aam
push
out
in
xchg
popl
push
dec
inc
jg
outsl
fs
adc
add
xor
and
aam
push
out
in
xchg
popl
push
dec
inc
jg
outsl
fs
adc
add
xor
and
aam
push
out
in
xchg
popl
push
dec
inc
jle
outsl
fs
adc
add
xor
in
aam
outsb
push
hlt
out
xchg
call
dec
push
pop
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ljmp
cmpsb
push
outsb
aad
clc
lahf
xchg
out
and
dec
and
sub
leave
sbb
ljmpw
mov
cmpsb
stos
mov
xchg
jp
jp
dec
ss
sub
inc
or
data16
jecxz
shrb
mov
cld
jae
pop
and
sub
push
xor
dec
or
shrl
dec
adc
orl
scas
cmp
rorb
add
testb
nop
jmp
movsb
fnstcw
sub
or
push
in
cmp
ds
add
pop
mov
jb
xlat
fldcw
repz
decl
jbe
and
enter
dec
cmc
push
mov
arpl
idivb
jg
movsl
stos
aad
cmp
orl
cmp
push
push
mov
mov
mov
lahf
rclb
cmc
and
sbb
lea
sub
pop
mov
mov
jle
insb
aaa
leave
or
outsl
jle
cmpsb
or
and
fisubl
mov
cmp
push
bound
push
das
inc
aas
xor
pop
adc
xchg
scas
ret
fsubl
push
push
push
cmp
ds
sub
pop
inc
js
ja
test
fwait
out
movsl
lds
mov
bound
arpl
sbb
es
inc
jl
jle
xchg
xchg
xchg
in
mov
lcall
ss
sub
inc
or
ljmpw
mov
cmpsb
stos
mov
out
push
jp
dec
ss
sub
inc
or
ljmpw
xor
pop
mov
pop
stc
dec
cmp
cmpsb
cs
jno
cmpsl
outsb
test
je
jmp
mov
cmp
pop
jbe
inc
fs
movsb
mov
stc
fmuls
into
dec
push
dec
jp
add
das
fnstenv
pop
mov
scas
das
insb
test
mov
hlt
jo
cmpsl
arpl
gs
adc
test
xor
clc
jmp
jmp
iret
in
aam
aam
or
push
lods
ret
jg
jmp
in
and
xor
cmpsb
pusha
inc
loop
mov
arpl
shrl
cld
iret
dec
mov
xchg
or
push
sbb
adc
dec
clc
fsub
dec
mov
push
fdivrs
mov
mov
sahf
mov
lea
stos
aas
cmpsb
dec
or
lds
jp
movsl
ret
adc
aaa
xor
mov
mov
xchg
pop
lock
stos
cmp
xor
cmp
jle
jb
add
adc
andl
int
ljmp
xlat
mov
ds
jp
dec
mov
fsts
adc
push
sbb
mov
into
jne
add
fisubs
adc
mov
aaa
pop
cltd
jge
dec
imul
jns
sbb
and
leave
cmp
ret
or
es
cmpl
jbe
ljmp
lahf
test
mov
xlat
and
cmp
sub
pop
cmpb
movsl
jns
dec
inc
and
ss
stos
inc
scas
sub
sti
clc
adc
in
dec
pushf
jae
arpl
dec
pop
cld
cmp
push
adc
shll
arpl
inc
mov
mov
add
jle
push
push
mov
adc
mov
dec
frstor
or
pop
dec
pop
mov
in
das
sbb
lods
aam
out
push
mov
xchg
cmp
aas
les
adc
dec
xor
repnz
mull
jecxz
fmull
adc
push
mov
xchg
clc
push
mov
mov
pop
sub
fstpl
jno
leave
mov
inc
inc
and
rcll
lds
lret
out
addr16
outsl
nop
lods
jecxz
xchg
dec
jo
and
lcall
mov
test
repz
add
mov
fwait
lahf
test
jmp
xchg
mov
sahf
cmpsl
push
dec
test
jp
or
or
lock
xor
loop
inc
int
lcall
out
fwait
xchg
push
stos
push
or
pop
lock
jp
test
jb
sub
and
sahf
push
xlat
jnp
pop
push
hlt
adc
fmuls
or
pop
or
sub
lods
leave
lahf
out
push
mov
mov
inc
dec
daa
pop
jo
adc
cwtl
ja
ja
std
xor
mov
xor
cltd
mov
mov
adc
xor
stc
push
lret
mov
sub
movsb
sub
mov
in
mov
jbe
sbb
sbb
xchg
cld
add
xor
lock
inc
mov
push
sub
cmpsb
mov
and
inc
popf
test
add
data16
sub
and
adc
lahf
cmc
mov
cmp
je
lahf
jae
nop
frstor
movsb
ljmp
mov
jecxz
leave
outsl
and
into
push
mov
shlb
mov
and
sbb
pop
insl
and
pop
jecxz
or
out
push
dec
bsf
sub
sbb
pop
pusha
dec
leave
mov
mov
stos
pop
aas
in
cvtps2pd
inc
pop
adcl
fwait
sahf
vmwrite
sub
bound
lea
test
ret
lret
sub
or
out
or
pop
imul
mov
imul
or
mov
aas
pop
or
addl
mov
leave
lret
mov
and
sub
cs
xchg
fiaddl
inc
mov
pop
pop
lock
jns
test
cmpsb
cmc
inc
lds
testb
jmp
mov
lea
jmp
xchg
xchg
testb
sahf
push
lods
sbb
and
pop
push
or
pop
and
mov
out
sub
pop
sbb
inc
dec
mov
outsl
sti
pop
cmp
push
decl
rclb
mov
jb
psllq
or
xor
adc
push
adc
sarb
rol
sub
adc
mov
sarl
inc
roll
hlt
ret
ja
adc
pushf
cwtl
imul
push
imul
xchg
or
jb
dec
and
push
jae
cs
rolb
nop
test
push
sbb
popf
in
mov
and
xor
adc
cmp
mov
mov
clc
and
pop
xor
push
xor
inc
jmp
pop
outsl
fadds
dec
mov
test
pop
add
mov
shr
outsb
mov
test
insl
mov
and
adc
adc
and
or
daa
or
pop
mov
sarl
mov
mov
rolb
push
adc
repz
xchg
xor
lock
lahf
add
add
inc
push
pop
aaa
xor
push
sti
shrb
scas
clc
jg
sub
stc
sub
notb
sbb
cmp
cs
ljmp
push
push
sub
jns
xchg
hlt
out
jecxz
into
cmp
xor
add
xchg
fstpt
xchg
jae
pop
decb
outsb
sbb
dec
and
mov
mov
sbb
sbb
lds
pop
push
adc
inc
pop
das
dec
dec
jg
pop
pop
mov
jge
hlt
clts
add
rclb
sub
loope
inc
icebp
cltd
jbe
jnp
scas
jge
push
ret
cltd
inc
bound
test
ja
rolb
dec
shrb
movq
xlat
xor
pushf
scas
xchg
fisttpl
inc
or
xchg
inc
xchg
mov
or
sbb
pop
xor
sub
fisubs
in
push
gs
or
mov
adc
push
iret
add
fbstp
jns
cmp
push
push
bound
adc
repnz
adc
sarb
fsubs
pop
ret
dec
adc
std
xchg
mov
push
push
in
or
mov
into
shll
or
adcb
push
cmpsl
push
dec
stos
scas
or
cmp
sub
movsb
push
and
fldt
stc
xchg
inc
sub
arpl
arpl
mov
loop
or
imul
cs
add
loopne
xor
icebp
hlt
popa
aam
pop
ficoml
jno
scas
inc
lahf
add
xchg
loop
xlat
mov
cmpsb
jmp
mov
pushf
lahf
cmp
lea
dec
out
mov
adc
dec
pop
in
cmp
insb
mov
push
add
test
fisttpll
call
or
mov
mov
sub
sub
or
into
pushf
iret
js
dec
ss
rcrb
arpl
jg
push
out
sub
push
sbb
cmp
lahf
jns
inc
sbb
xor
cli
add
mov
dec
je
enter
cmpsb
jg
mov
xchg
in
jnp
popf
sarb
ja
adc
sbb
into
push
outsb
sub
mov
outsl
adc
in
les
dec
lahf
sbb
cs
and
jp
gs
add
push
pop
mov
pop
xchg
jge
inc
inc
lods
mov
out
shrl
and
mov
mov
arpl
jns
pop
aam
xlat
push
es
movl
outsl
cmp
jg
pop
and
cmp
fcompl
lds
ds
or
adc
repnz
in
lahf
jmp
addr16
das
gs
and
pop
inc
cmpsb
movsb
pop
mov
lret
push
call
cmp
fiadds
rolb
mov
out
adc
movzbl
imul
xchg
pusha
mov
xchg
in
push
pop
mov
mov
cld
mov
xchg
fwait
decb
mov
push
mov
testb
ljmp
es
jp
jb
roll
or
sub
cmp
or
loopne
pop
outsl
imul
inc
add
lock
out
cltd
in
or
mov
inc
pop
push
push
repz
in
testb
subps
enter
in
fimull
mov
out
mov
lret
xchg
jo
adc
je
shlb
push
cmc
out
ljmp
cmp
inc
mov
cmp
jmp
loope
lcall
cmpsb
lret
pop
popf
xchg
inc
cmp
mov
das
fstpl
or
pop
sar
push
jbe
lret
stos
or
and
and
out
mov
fldt
int
jbe
dec
mov
add
pop
pusha
aaa
daa
push
sub
pop
in
pop
push
pop
int3
out
and
xlat
jl
les
lea
jg
pop
dec
pop
jb
mov
mov
inc
outsl
dec
sbb
dec
loopne
shll
call
sub
pop
pop
sahf
jb
pop
push
pop
add
in
mov
sub
inc
int
adcl
pushf
adc
sti
and
aam
mov
data16
adc
fmul
inc
xor
cmp
and
mov
cmp
lea
sbb
insb
xchg
jb
mov
adc
dec
out
outsl
and
jp
lds
jbe
mov
mov
cld
mov
or
xchg
add
xor
add
jge
aam
fwait
and
mov
icebp
lret
mov
imul
mov
push
rorl
jge
jae
imul
jne
cmpsb
add
rcrl
inc
pop
test
lds
add
repnz
mov
out
or
inc
loope
mov
inc
popa
mov
jg
test
mov
ss
push
rol
filds
mov
stos
insb
xchg
ffreep
xor
pop
mov
lods
mov
pusha
les
mov
mov
sbb
into
adc
inc
inc
xor
pop
inc
bound
add
mov
fwait
cltd
and
test
test
jmp
push
ds
lods
lock
mov
xchg
or
shl
mov
push
shll
fwait
xchg
adc
fs
test
ds
cmp
mov
les
mov
push
mov
push
pop
rcrb
add
or
mov
dec
adcb
movsl
jge
in
movsb
out
sub
xchg
fwait
shlb
lcall
clc
jmp
ljmp
nopl
mov
jmp
test
push
cmpsl
mov
aaa
movsb
push
xor
negb
popf
pop
xchg
push
sti
fwait
dec
lods
andl
cs
add
rcll
sbb
sahf
or
jnp
lds
bound
and
lret
add
stos
in
gs
sub
lret
movsl
or
in
imul
mov
mov
and
int
add
fwait
idivl
test
add
jp
xor
push
jmp
mov
cwtl
call
fcmovb
les
movsl
cs
inc
rolb
sbbb
and
pop
or
testl
jnp
mov
pop
xchg
cmp
out
sub
addl
cmc
fadds
out
pop
push
and
xlat
sub
pusha
add
bound
mov
mov
es
pop
and
xor
push
vxorps
idiv
rcll
nop
out
in
cmp
mov
ret
fstpt
or
xchg
popf
inc
adc
rorl
cmc
dec
pop
adc
push
in
xchg
daa
or
mov
scas
jg
cmp
fisubrl
js
sub
std
fwait
es
inc
cmpsl
lds
mov
movsb
jno
xchg
scas
div
mov
addr16
mov
fdiv
sar
push
inc
mov
cmp
pop
subl
mov
sub
in
cmc
into
cmpsl
add
pusha
pop
scas
fcoml
mov
push
jnp
jle
mov
ja
jg
or
cwtl
sub
out
arpl
ja
hlt
aaa
andb
xchg
and
xchg
jb
shll
push
ficoms
jge
inc
adc
sub
mov
jecxz
iret
push
scas
imul
pop
jp
pop
dec
fsubp
and
and
aam
push
es
push
dec
xchg
xchg
mov
mov
bound
push
mov
outsl
sbb
cmp
fsub
add
out
ja
hlt
sarl
push
daa
pushf
xchg
dec
ret
and
mov
stos
cmp
imul
xchg
jle
pop
gs
insb
mov
cmpsb
popf
into
adc
or
xchg
jl
jge
popf
lret
pop
mov
adc
mov
pop
int3
jo
imul
inc
popf
jg
nop
jmp
je
das
pop
cld
and
das
dec
in
adc
cmp
push
scas
sbb
or
pop
mov
cmc
xor
mov
mov
fs
cld
mov
faddp
mov
fdivl
cmp
cs
sub
insb
lods
scas
jb
insb
or
lock
out
cwtl
lret
mov
push
movsl
and
xlat
xchg
cwtl
jp
adc
loope
xor
push
jns
call
cltd
mov
sbb
sbb
popa
dec
xchg
xor
pusha
cmpsl
ds
inc
and
test
sti
mov
jno
fsubrp
sbb
mov
xor
jg
enter
mov
cmp
lods
test
mov
lds
cmpl
jbe
cmc
fmull
push
cwtl
and
push
pop
add
adc
jo
mov
jmp
push
stc
out
js
adc
jmp
enter
clc
adc
out
jecxz
lret
sub
xchg
test
fcoms
pop
lea
add
jecxz
shrl
mov
sti
jnp
shrb
insl
and
ja
mov
jb
repz
push
fucomp
insb
xchg
jbe
repz
xchg
adc
jbe
call
imul
sub
pop
add
rclb
stos
jg
mov
out
jmp
mov
mov
pop
dec
mov
and
cmp
push
mov
lods
xorb
cwtl
jae
xor
mov
or
bt
daa
xchg
push
xchg
xor
or
mov
sub
aam
sbb
mov
fstpl
out
insl
push
imul
repnz
test
push
loopne
fs
rcll
outsb
inc
insb
std
ret
fwait
push
pusha
sub
pop
rorl
sbb
sar
lahf
pop
pop
lahf
sbb
fistpll
mov
pusha
mov
iret
loopne
xchg
jmp
inc
add
ret
xchg
cld
inc
pop
cs
xchg
cmp
or
mov
test
push
or
lock
lock
pop
lds
in
cmp
pop
mov
push
testl
lods
test
and
loopne
mov
adc
and
add
cmp
mov
mov
inc
xchg
cmp
inc
xchg
imul
sbb
inc
mov
adc
lock
rorl
ss
aad
test
ror
lock
or
adc
xor
loopne
push
mov
mov
repz
xlat
push
jg
sbb
rorb
pop
jp
jae
movsl
lock
loope
fbld
bound
pop
add
mov
mov
aad
push
subl
push
push
jno
cli
ret
inc
pop
movsb
xchg
or
cmp
out
dec
xchg
push
and
cmp
stos
pop
jp
aaa
cmpsb
push
dec
mov
in
and
mov
rcl
push
test
fmul
cld
lret
adc
mov
pop
out
dec
push
cmpsl
pop
xor
repnz
ret
xor
in
pop
xchg
inc
sar
and
lds
ficoms
fmull
mov
mov
movb
push
std
jle
push
andb
inc
inc
lret
mov
add
add
filds
sub
mov
fsts
jle
jae
fdivr
ds
jle
push
mov
lret
daa
clc
lods
out
imul
add
test
fsubr
add
xchg
scas
iret
xchg
fwait
les
mov
ss
mov
xor
stc
lds
movsb
popf
or
jle
dec
sub
jo
cmpsl
pop
mov
push
mov
cmpsl
xchg
add
aas
cmp
mov
push
shrl
xorb
or
in
add
stos
mov
push
dec
ss
mov
ret
subl
adc
sarl
jbe
or
test
mov
inc
adc
es
lock
xchg
and
xchg
iret
push
movsb
arpl
int3
rorb
cmp
mov
jge
stc
into
push
fstpt
push
inc
cmp
lcall
push
adc
insb
cmp
jecxz
shll
repnz
jecxz
jecxz
outsl
jg
jg
loopne
or
jmp
mov
inc
mov
icebp
xchg
icebp
dec
das
ret
sub
inc
add
push
out
push
cmp
shrl
je
iret
jb
test
inc
sub
push
dec
sar
fisubl
cmp
xor
daa
pop
fidivs
adc
xor
cmp
pop
pusha
pop
std
and
addr16
stos
sti
test
push
cltd
pop
shl
pop
sub
cli
inc
jmp
inc
std
dec
pop
dec
fistpll
jne
push
or
mov
pop
cmpsb
mov
and
or
jo
pop
inc
popf
je
mov
sbb
ljmp
jmp
loop
and
cwtl
xlat
pop
cmpl
imul
xchg
dec
push
sbb
jns
and
mov
xchg
sub
xor
aas
mov
xlat
gs
inc
cmp
sub
mov
or
stos
loopne
cs
lds
into
mov
mov
data16
fisubl
push
add
cli
ret
pusha
pusha
mov
out
mov
rorb
add
mov
add
ja,pn
leave
mov
jg
pushf
shrd
loopne
adc
sub
std
pop
ja
cwtl
cmpsl
ljmp
mov
pop
dec
or
xor
cld
push
insl
mov
sbb
stos
dec
test
mov
daa
test
mov
pop
enter
ja
ljmp
inc
dec
stc
ret
lret
adc
push
dec
xchg
jno
jne
stc
jb
hlt
xor
and
cmpl
pushf
in
xor
fs
loopne
mov
les
sbb
pop
add
mov
int
addr16
lret
test
cwtl
jbe
pop
adc
xor
mov
mov
test
adc
xchg
cltd
call
lods
ss
cmc
pop
test
in
jns
push
xchg
add
mulb
imull
pop
rclb
mov
push
mov
xlat
test
cmp
adc
stos
mov
pusha
pop
hlt
xchg
dec
jns
inc
mov
mov
dec
insb
and
imul
xchg
xchg
jmp
lcall
lods
outsb
cmpb
sub
andb
int3
gs
jl
jge
xchg
inc
ljmp
dec
xor
mov
lahf
cmp
arpl
into
cmp
pop
mov
fidivl
cld
xchg
out
cmp
cmpsb
es
add
cmc
sbb
dec
popf
test
movsl
aaa
das
pop
ss
shrb
jnp
rolb
cmp
daa
test
in
cmp
scas
outsb
dec
xchg
fcmovb
aam
popl
push
xor
pop
loope
lods
mov
pop
or
inc
aaa
ficoms
bound
mov
mov
lahf
dec
stos
jmp
cmp
xchg
pop
int
adc
xchg
or
addr16
cld
adc
aam
fiaddl
mov
mov
lock
mov
insb
adc
jmp
popf
jg
cs
pusha
lret
pop
and
jecxz
fstl
pop
shll
stos
js
sub
frndint
dec
sar
and
jp
cmp
adc
jmp
mov
fwait
loopne
xor
into
xchg
jle
push
xchg
pop
lds
outsl
test
mov
test
inc
jle
jno
shr
test
popl
fisubrl
mov
add
sub
or
bound
pop
and
sbb
loop
dec
mov
add
jb
arpl
jecxz
xchg
rolb
sub
lcall
fidivs
aam
rolb
add
push
ds
cmpsl
roll
je
inc
inc
push
dec
mov
push
sarb
mov
xchg
rcrl
aas
insb
add
jl
jp
arpl
adc
sub
push
daa
int3
add
mov
push
add
cmpsb
jnp
mov
xor
or
mov
outsl
inc
mov
fcomip
ss
xchg
mov
cmpsb
stos
mov
out
push
jp
dec
ss
sub
inc
or
ljmpw
mov
cmpsb
stos
mov
out
push
jp
dec
ss
sub
inc
or
ljmpw
mov
cmpsb
stos
mov
out
push
jp
dec
ss
and
push
cmp
jb
ljmp
cmpsb
test
mov
es
push
test
fidivs
sbb
mov
pop
push
dec
and
push
gs
mov
xlat
ljmp
xchg
mov
push
dec
inc
cmp
sub
lock
mov
fsubrs
xchg
jae
inc
call
and
xor
add
sbb
test
loopne
into
jmp
ja
or
and
xor
lods
sub
repz
hlt
adc
adc
push
sub
cld
out
pop
or
aad
ljmp
mov
mov
std
fs
pop
or
jbe
bound
dec
mov
sub
or
adc
dec
inc
xchg
out
cmpsl
xor
xchg
stos
mov
ja
inc
sar
aaa
aas
dec
repnz
or
into
or
cmp
mov
pop
fidivrl
aam
bound
ret
ljmp
movsb
adc
adc
stos
cmpsb
pop
xchg
lcall
jge
jo
movsb
cli
push
and
add
sub
fistpll
mov
add
rcrl
sub
xor
sbb
adc
ret
mov
xchg
xchg
jmp
aas
adc
imul
bound
mov
fmul
sar
out
out
xor
aas
ss
bound
inc
adc
jns
imul
ljmp
out
jmp
testb
aas
pop
dec
and
push
sub
sbb
or
cli
imul
out
xlat
lret
mov
cmpsl
lcall
addr16
push
dec
inc
cmp
sub
sbb
or
cli
imul
out
xlat
lret
mov
cmpsl
lcall
mov
hlt
and
scas
push
add
dec
push
dec
aam
cltd
and
std
insl
push
aad
mov
add
dec
test
sub
xor
sbb
inc
pop
cmp
or
dec
push
lahf
fmuls
dec
aaa
jo
lret
into
aam
push
jnp
push
arpl
xor
or
aaa
test
stc
sbb
nop
movsl
shrb
fistpl
add
add
cmp
ret
xchg
iret
mov
and
xchg
ss
push
shlb
sahf
sub
sahf
add
mov
mov
mov
add
cmp
jae
pop
cmp
cmp
outsb
into
repnz
stos
adc
sub
mov
add
rdtsc
add
mov
jo
mov
fisttpl
js
rcrl
stos
add
ljmp
add
mov
int
mov
and
mov
lea
mov
jmp
popa
into
cltd
push
sub
xchg
cltd
out
pop
adc
insb
fmuls
or
xlat
pop
daa
dec
das
add
outsl
repnz
push
push
mov
imul
xchg
jo
test
loop
or
aaa
add
mov
lret
scas
and
lds
jno
sbb
out
imul
xchg
pushf
pop
or
pop
test
ja
mov
cmp
jno
js
cmp
add
cli
test
int
imul
subb
dec
push
insb
mov
adc
dec
into
inc
ret
sub
jb
lods
jp
mov
aam
jnp
rolb
or
add
pop
jne
push
or
push
mov
popa
mov
mov
in
cmp
jl
mov
outsb
mov
out
pop
cmpsl
sub
test
pop
shll
jns
addr16
lcall
or
popl
mov
addb
fs
fwait
xchg
sbb
jns
dec
sub
mov
push
sti
aaa
inc
mov
clc
orl
xor
pusha
xor
sti
lds
out
push
cli
push
fisttps
jecxz
jbe,pn
data16
adc
xor
pop
mov
daa
int3
aas
dec
adc
ret
dec
cmp
or
mov
sub
inc
xchg
int
popf
movsb
push
push
sub
mov
imul
push
decl
cmc
mov
imul
repz
shlb
xor
aam
mov
mov
clc
sub
add
mov
scas
mov
mov
mov
push
sahf
sbb
xchg
cltd
mov
pop
adc
mov
test
imul
inc
hlt
in
add
cld
scas
dec
xchg
hlt
cli
js
loopne
stos
add
aas
push
mov
xchg
pop
std
cli
jae
sub
cwtl
lea
loope
lds
inc
push
leave
mov
psubusb
and
push
push
pop
aas
bound
xchg
insl
or
sbb
rclb
xchg
add
dec
add
xchg
popl
sbb
cwtl
in
pop
pop
pop
daa
daa
fstpl
mov
pop
push
sub
sbb
mov
xchg
push
movsl
jle
mov
dec
fdivrl
daa
leave
mov
mov
jmp
xor
addl
mov
add
loopne
dec
xlat
dec
int
addr16
or
sub
stc
pop
leave
cs
fisubrl
fs
jo
repnz
pushf
add
ret
mov
mov
loope
dec
and
add
out
out
test
imul
sub
jle
das
out
pop
stc
fsubs
jns
push
adc
sbb
and
jnp
mov
add
push
mov
orb
xchg
mov
and
cmpsb
mov
fstps
xchg
aad
mov
sbb
test
sti
mov
jle
add
fucomi
outsl
fucomp
adc
xchg
jecxz
push
push
repz
leave
push
aaa
pop
push
sar
pushf
xor
or
shl
inc
in
mov
fld
int3
scas
bound
stos
pop
and
loop
data16
jno
ja
aaa
out
adc
dec
push
add
lock
faddp
mov
in
mov
pop
jno
adcb
lcall
imul
dec
add
fdivrl
mov
lahf
dec
sbb
pop
xchg
ljmp
xchg
popa
fwait
jae
fs
pushf
cltd
je
mov
repnz
in
mov
xor
and
cmpb
cld
fsubrp
pushf
pop
shll
or
mov
pop
push
mov
cmpsl
push
jl
mov
mov
test
mov
push
in
js
movsb
mov
xchg
imul
push
out
hlt
jp
in
in
and
test
sti
test
xlat
or
push
xor
inc
mov
jmp
addr16
push
xor
xor
jmp
in
mov
pop
bnd
movsl
jb
inc
jb
adc
pop
ja
dec
push
xlat
inc
cmp
lret
fs
mov
in
dec
xor
popf
lea
dec
pushf
aam
pushf
hlt
cmp
test
popf
inc
aas
cltd
dec
shlb
sbb
inc
dec
scas
test
xchg
nop
lods
pop
iret
hlt
sub
fistl
cmp
jbe
ljmp
sbb
jbe
movsb
dec
fisubs
mov
jp
mov
push
sbbl
repz
iret
cmpsb
mov
aaa
das
addl
xorb
sub
ljmp
adc
js
add
pusha
in
ffree
or
jl
pop
fldt
cmpsb
push
sub
int
or
xor
sub
inc
mov
jnp
dec
add
sbb
ds
daa
in
repnz
pusha
mov
mov
fisttpll
mov
int3
sbb
nop
push
ljmp
mov
inc
cld
mov
imul
xchg
xchg
es
dec
pop
cwtl
aam
mov
into
cmp
cli
xchg
mov
push
push
inc
fwait
add
fcomps
xchg
les
lahf
or
inc
push
sub
fcoms
fbld
inc
push
push
sub
sbb
jb
ja
iret
sub
aad
lods
mov
and
mov
mov
imul
mov
insl
insl
dec
mov
jmp
fildl
inc
xchg
out
or
addr16
dec
xlat
and
enter
dec
lret
adc
mov
dec
dec
test
pop
ljmp
jb
xchg
mov
mov
xchg
repz
jo
mov
enter
inc
push
fwait
cmpsl
dec
inc
mov
jp
and
je
sbb
aas
xor
pop
popf
jb
cmp
iret
sub
subb
and
push
int3
adc
xchg
movsb
cmp
fmulp
mov
mov
adc
aad
nop
add
loop
ret
pop
dec
popf
shrl
jne
mov
scas
clc
mov
mov
movsl
loope
mov
mov
imul
sub
lret
cs
out
gs
mov
pop
mov
aad
or
cmp
lods
xchg
push
cmp
scas
mov
icebp
pop
jge
ss
xchg
mov
repz
in
out
push
cs
mov
int3
cmp
aam
out
aaa
fildll
jl
les
cmp
jl
fstpl
jns
lods
iret
xor
pop
ss
mov
xchg
fstps
lods
pop
enter
xchg
inc
sahf
rclb
cld
xchg
das
aas
popf
adc
sub
adc
or
pop
and
or
push
sub
insb
sbb
les
imul
es
sub
jbe
out
adc
lcall
jbe
filds
outsb
sub
loope
xlat
push
adc
push
imul
mov
fcomps
mov
cmpsl
icebp
repnz
stos
jo
dec
sahf
add
sbb
testl
push
insl
push
adc
ret
mov
inc
pop
flds
mov
scas
mov
stos
fwait
or
imul
cmp
les
out
cli
adc
fmuls
aas
mov
pop
les
cmp
mov
mov
in
fcmovu
fs
jl
nop
outsl
notl
testb
lods
xchg
or
into
mov
xchg
dec
cmc
lret
push
jne
aaa
inc
cmpsl
mov
std
xor
jne
add
pop
dec
sbb
push
mov
or
or
call
jp
out
iret
lret
push
test
xor
inc
dec
loopne
fwait
call
lahf
fs
cmp
dec
adc
cmp
inc
sbb
xor
mov
lcall
bswap
lret
das
mov
jg
and
jbe
cmp
addb
sahf
mov
xor
call
int3
jnp
adc
mov
rcrl
jno
push
adc
test
cli
and
mov
ret
cltd
sbb
es
fs
movsb
insl
and
mov
fistpll
push
stc
adc
push
out
jg
mov
add
sar
adc
sub
andb
add
insl
sti
xor
or
add
nop
jecxz
ret
lret
es
call
out
shl
loope
or
fdiv
jbe
fisttpll
subb
cli
sti
int3
stos
repnz
xchg
xor
inc
inc
sub
xchg
shll
sti
xchg
mov
jns
test
sub
xchg
sbb
in
scas
aas
movsl
xchg
sub
cmc
mov
jo
and
jp
mulb
int3
idivl
mov
test
shll
push
stos
inc
or
dec
out
pop
sub
mov
inc
mov
jne
add
adc
and
mov
mov
pop
rolb
out
loop
pop
sbb
in
cmp
jnp
outsl
cmp
je
scas
add
cld
test
xor
loop
sbb
out
pop
push
lods
scas
xor
pop
mov
movsl
aaa
xor
mov
cld
int3
and
add
inc
add
test
mov
inc
popf
testl
lahf
pop
xchg
xchg
movsb
iret
mov
out
push
in
pop
hlt
scas
mov
nop
pop
inc
cwtl
lahf
xchg
jo
cmpsl
mov
insl
cmp
mov
jo
insb
ss
pop
sbb
sarb
adc
sbb
hlt
add
sahf
xchg
xor
and
jns
enter
sbb
add
std
imul
or
movsl
xlat
mov
test
mov
mulb
lods
mov
repnz
mov
mov
xchg
fdivl
mov
popf
fstl
lods
jno
clc
arpl
loopne
mov
divl
lock
incb
push
ljmp
xchg
cmp
int
out
nop
lret
mov
add
out
nopl
lods
das
xchg
lcall
mov
sub
push
adc
insb
loop
xor
in
cmp
jo
inc
jmp
out
hlt
ja
nop
pop
inc
or
mov
jmp
clc
out
pop
xchg
insb
popa
insl
jge
dec
inc
add
loopne
jae
sbb
out
inc
jae
test
outsl
sbb
or
fisubrs
lds
mov
cmp
dec
test
ret
push
cld
shr
add
insb
mov
cmp
mov
idivl
cs
dec
jp
testl
movsl
dec
icebp
cmpsl
clc
pop
mov
test
pusha
icebp
mov
push
mov
and
out
fsubrl
adc
xor
icebp
add
sarb
shl
fistps
cmp
outsl
mov
cli
hlt
std
loope
in
mov
mov
scas
sbb
shrb
and
int
sbb
push
test
xchg
or
test
nop
lret
and
test
push
fisttpl
xchg
repz
pop
adc
inc
jae
add
and
pop
daa
repz
lods
dec
sbbl
lock
in
sub
call
mov
addb
fdivrs
mov
cmp
aad
mov
lods
cmp
inc
mov
scas
test
mov
jle
int3
pop
repnz
ret
lahf
dec
ficoms
int
xor
xlat
mov
push
ljmp
xor
fmull
pop
ret
push
xchg
mov
sbb
das
xchg
out
jp
pop
add
scas
cltd
stos
mov
test
cmpl
icebp
das
mov
mov
cmp
ja
enter
fisubrs
shlb
pop
addr16
mov
in
lods
ffreep
stos
sbb
xchg
in
mov
and
outsb
cmp
les
fisttpll
and
xor
sbb
xchg
pop
loopne
push
cli
clc
inc
mov
loope
das
das
insb
lahf
ffree
adc
add
cld
sbb
pop
into
repnz
pop
je
rol
out
fldcw
mov
orb
xchg
mov
fsubrs
push
in
fs
imul
xor
sub
jae
mov
js
test
in
fcmovne
repz
sub
push
mov
or
add
jge
pusha
imul
and
jb
pop
inc
jmp
and
mov
in
xchg
sbb
mov
cmpsl
and
xor
add
jno
add
fistps
sub
int
fldt
mov
cmc
sub
dec
lahf
cmc
call
mov
jb
adc
stos
mov
mov
fiaddl
stc
push
pop
fisttpll
lods
rcl
xchg
mov
int3
test
icebp
adc
mov
out
inc
movsl
popf
cmp
sarb
dec
insl
testb
scas
inc
jmp
push
xor
fisttps
mov
in
movsl
push
push
popa
cwtl
lods
cmp
jmp
movsb
xchg
jle
adc
pusha
add
inc
sbb
push
xchg
imul
ljmp
lock
test
cmp
mov
xor
mov
adc
lock
mov
fidivrl
push
fxch
pop
push
xchg
stc
gs
jge
xchg
add
add
xor
xchg
or
out
in
aam
push
and
cmp
out
dec
addr16
lds
jmp
cmp
movl
sub
fisttpll
notl
dec
fs
adc
push
icebp
lods
js
inc
sarl
lea
xor
pop
sub
push
rorl
daa
fwait
cld
cltd
inc
ja
inc
stos
xor
jne
int
pop
bound
xchg
ret
in
or
pop
out
or
jl
cmp
sbb
mov
push
or
add
pop
or
mov
fs
sbb
cld
xor
test
jecxz
jge
add
in
mov
popf
stos
nop
ds
jge
or
mov
jg
xor
mov
lds
and
push
mov
test
xor
iret
inc
xchg
dec
mov
mov
int3
cmp
dec
or
sub
dec
jae
xchg
das
mov
mov
add
xor
jle
mov
fisubs
nop
aam
xor
and
loope
lock
dec
dec
nop
jmp
mov
andb
ret
andb
in
cmp
movsb
xlat
push
mov
cmp
out
movsb
into
inc
loop
loopne,pt
sbb
ret
mov
pop
fsubrs
sahf
cld
lcall
shr
adcl
mov
or
xor
mov
popa
pop
rol
mov
sbb
add
add
sbb
cmp
sbb
popf
adc
pop
mov
add
loopne
popf
jo
inc
fldenv
add
xor
or
test
or
int3
es
mov
daa
sub
out
stos
popa
sub
test
in
rcrb
loop
shl
das
and
and
insl
ss
mov
shlb
dec
xchg
fisubrl
add
mov
sbb
lods
lahf
imul
mov
mov
sbb
rcl
lahf
roll
mov
ret
aad
mov
loop
cmp
fcoms
or
pop
sahf
lods
repnz
jecxz
mov
dec
pop
and
jbe
xor
mov
scas
sti
es
jge
sbb
dec
and
clc
mov
mov
dec
and
ljmp
jp
iret
adc
test
lock
sub
div
mov
js
dec
cld
adc
mov
pop
xchg
mov
adc
out
xchg
push
sbb
jae
push
pop
bound
xchg
mov
idivl
iret
in
sub
movsb
pop
push
fsubrs
add
lods
lds
jg
sub
jmp
ljmp
adcl
int
idivl
cmp
aad
daa
and
data16
push
dec
out
or
rcr
sub
test
std
aam
subb
mov
outsb
pop
jbe
or
dec
adc
inc
das
cltd
popf
ljmp
arpl
test
dec
clc
sbb
and
ficompl
pusha
xchg
std
out
inc
adc
mov
xor
fucom
loopne
sub
fisubl
shr
repz
cmp
or
loope
fdivs
cld
stos
imul
aaa
or
sub
mov
sbb
sbb
roll
ja
out
enter
and
xchg
dec
repnz
icebp
cltd
pop
lahf
adc
xchg
stos
stc
lock
lock
add
sub
leave
cs
pop
add
bound
loope
sbb
jmp
xchg
sahf
add
das
adc
out
std
lds
popa
pop
int3
int3
fcmovbe
cmp
not
xor
or
stos
jnp
sahf
push
call
cmp
pop
sbb
in
xchg
cld
pop
arpl
gs
dec
jne
stc
decb
jmp
or
mov
and
and
gs
imul
outsl
xchg
mov
jge
push
and
movsl
xchg
cmp
mov
mov
mov
push
out
ja
ds
out
out
jns
sbbl
add
adc
push
jecxz
loopne
xchg
mov
mov
addb
mov
adc
lret
xor
es
mov
in
les
loope
sub
lock
clc
dec
test
rcrb
pusha
shl
out
fpatan
cltd
inc
subl
mov
out
shrb
mov
into
call
in
adc
inc
pop
cli
xchg
sub
cs
icebp
inc
js
mov
push
xchg
nop
cmc
jp
ret
xor
cmp
dec
inc
sti
lds
inc
and
xchg
inc
mov
push
inc
lds
cwtl
mov
addr16
xor
mov
inc
movsl
mov
sti
fwait
ret
rcl
aas
inc
lret
sub
jecxz
cmp
push
pop
inc
fists
or
int3
push
push
je
push
lret
loopne
dec
dec
dec
mov
inc
pusha
mov
and
cmp
adc
out
and
inc
xchg
cmpsb
mov
push
xor
pop
xor
mov
cltd
addb
dec
xor
sbb
xor
and
dec
mov
inc
inc
fimuls
divl
adc
push
popf
in
scas
mov
mov
jbe
test
dec
aas
cmp
dec
pusha
out
lret
lahf
aad
add
xor
ja
and
cmp
mov
xor
icebp
imul
inc
stos
dec
gs
decl
imull
pop
or
out
outsl
sbb
aad
pavgw
mov
jle
sub
inc
lods
add
dec
mov
push
xchg
fsubp
out
xor
cmpsl
and
jno
fadd
and
mov
push
mov
movsl
testl
lods
pop
dec
sbb
fsubp
jae
fcmovnb
stos
and
sub
push
test
lods
add
jae
fsubrs
scas
mov
sbbb
or
sbb
xchg
bound
sub
sub
push
inc
test
mov
loop
xor
jns
cmp
lea
shrb
jae
fs
sbb
cmp
dec
cld
jnp
jne
lcall
dec
mov
sbb
and
jbe
push
lahf
mov
lods
xor
arpl
out
jnp
lods
mov
popa
scas
lods
aas
and
fcmovne
outsl
cmp
jp
add
fdivrl
leave
xor
or
sub
xor
pop
pop
dec
add
cmc
lock
cmp
ret
es
outsb
push
jg
out
test
and
push
outsb
lods
imul
push
int3
test
or
lahf
cs
sbb
scas
push
pop
nop
ja
in
fnstcw
adc
nop
out
je
insl
inc
sub
sub
mov
in
xlat
or
les
xlat
and
inc
out
scas
call
pushf
std
fidivl
loope
cmpsb
popa
or
int
adc
ljmp
adc
out
lcall
mov
scas
add
mov
ja
sahf
mov
fsubp
cmp
test
push
jno
mov
jne
add
cmp
cmp
sub
sbb
or
cli
imul
out
xlat
lret
mov
cmpsl
lcall
addr16
push
dec
inc
cmp
sub
sbb
or
cli
imul
out
xlat
lret
mov
cmpsl
lcall
das
pop
das
dec
inc
cmp
sub
cli
das
ljmp
mov
cmpsl
lcall
insb
push
dec
inc
cmp
sub
lcall
dec
jo
lret
aas
and
push
popf
inc
lods
ja
addr16
scas
imul
xlat
std
lret
sub
xchg
pop
xchg
insl
cmpsl
jmp
ja
addr16
fldl
in
aaa
std
daa
or
xlat
cmp
push
insl
mov
cmpsl
xor
outsl
gs
push
mov
cmp
inc
sbbb
das
jmp
jecxz
shrl
lods
add
in
leave
clc
fstp
aaa
test
cs
jb
mov
or
imul
push
sub
pushf
pop
stc
pusha
mov
imul
mov
add
insl
mov
ljmp
stos
add
pushf
pop
in
into
lret
pop
push
sbb
bound
sbb
push
pop
cmc
inc
dec
ja
push
xor
ffree
adc
fmuls
sbb
sbb
cmp
nop
cmpsb
lea
push
sti
data16
sub
mov
out
lcall
xchg
mov
pop
jb
add
xor
enter
sbb
movsb
loop
test
dec
jle
push
lret
push
lods
addr16
pop
in
cs
ds
iret
xchg
pop
out
or
nop
pop
mov
ret
in
out
inc
fnstenv
data16
pop
std
dec
or
mov
xor
add
sbb
shrb
inc
filds
fsubl
fs
dec
push
dec
cmpsb
sub
in
call
loope
icebp
and
push
out
adc
aaa
std
daa
or
idivl
xchg
jge
lea
inc
lods
ja
addr16
fldl
in
aaa
std
daa
or
idivl
xchg
jge
lea
shrb
je
sub
iret
fs
out
lods
dec
jge
jmp
in
mov
cmpsl
movsb
xor
xchg
pop
arpl
popa
pop
xchg
push
pop
xchg
ficoms
cmp
outsl
cmp
pop
add
cmp
insb
add
mov
xchg
mov
in
fistps
subl
test
cmp
push
cli
push
roll
sbb
nop
jle
cmp
add
popa
fnstcw
jmp
stc
cltd
cli
out
add
loopne
jp
enter
cs
xlat
int
ja
jbe
adc
jbe
daa
pop
ret
inc
dec
xor
jbe
jmp
mov
mov
add
sbb
and
lea
push
lahf
add
ja
and
mulb
inc
and
add
sub
shlb
stos
jl
cmp
loopne
add
add
std
lahf
jns
fistpl
and
mov
jne
adc
mov
jg
push
mov
pop
rclb
jmp
lret
mov
leave
dec
mov
cmp
push
sub
je
and
dec
push
jl
mov
stc
nop
in
aas
shlb
xor
and
test
fidivs
mov
sbb
push
call
push
dec
xor
lahf
jle
mov
jnp
adc
xchg
adc
mov
cmp
lods
cld
gs
jbe
pop
mov
int3
push
bound
rcl
push
xchg
scas
sub
jp
xchg
pop
pop
outsb
insb
cmp
jne
ja
sarl
lret
bound
and
xchg
sti
cld
clc
gs
rorb
pop
push
sub
mov
jecxz
idivb
or
jae
push
xchg
call
aas
test
inc
dec
push
dec
cmc
stc
shlb
ja
adcl
jl
out
mov
roll
call
dec
pop
sub
mov
cli
movsl
or
lahf
orb
call
les
inc
mov
shrl
push
dec
push
pop
push
pop
fsts
int
push
repz
sbb
lret
dec
jge,pt
xchg
cmp
push
insl
hlt
in
arpl
xor
cmpsb
lcall
pop
mov
sbb
imul
mov
and
cli
je
or
dec
xchg
mov
clc
xchg
rolb
push
in
sbb
xor
inc
lcall
add
mov
subl
fnstsw
mov
into
nopl
jge
jp
add
in
aaa
ja
out
addr16
divb
lret
test
jl
cmpsl
test
or
out
xchg
adc
jns
lahf
sub
fstps
sbb
lret
ss
mov
mov
idiv
xchg
push
push
fstpl
mov
out
repz
cs
pop
loop
push
jns
push
cli
sbb
ss
loopne
adc
insb
and
popa
xor
add
cmp
idivl
insb
out
shrl
add
jb
jb
icebp
clc
mov
lret
icebp
inc
adc
xor
imul
lock
push
addr16
fnstenv
aad
ds
in
push
popa
pop
or
add
je
xor
call
dec
pop
adc
xor
adc
dec
outsl
xor
out
xchg
rep
xchg
bound
int3
pop
fcmovnb
xor
xchg
cs
push
adcb
adc
nop
icebp
dec
and
mov
mov
and
sti
mov
mov
push
ja
adc
nop
mov
and
movsl
or
test
xorl
and
dec
jl
mov
sub
mov
lahf
mov
adc
aam
jbe
sbb
xor
mov
xchg
adc
shll
jmp
inc
inc
popl
es
or
loopnew
mov
mov
and
rol
sub
imul
mov
fs
push
fstpl
in
and
pop
in
mul
xor
sub
or
xchg
cmp
sub
dec
pop
mov
lea
lea
test
jp
sti
push
push
lret
insl
inc
imul
push
rcrl
psubw
enter
sbb
test
jbe
and
sub
add
jmp
out
mov
xor
mov
scas
daa
mov
lock
daa
sbb
int
and
outsl
sbb
inc
xchg
arpl
dec
jecxz
mov
inc
push
incl
aaa
jl
rcll
call
out
inc
fnstsw
popf
mov
mov
add
subl
xlat
int3
inc
mov
xchg
mov
xor
int3
sbb
sub
mov
push
flds
dec
push
rorl
arpl
sub
loope
xor
mov
ss
lea
xchg
test
int3
fstpt
pop
fdivl
into
mov
out
lret
mov
stos
loope
es
testl
lea
add
inc
mov
inc
in
and
setb
daa
and
sub
xchg
add
inc
popf
xor
lret
sub
enter
inc
cmp
dec
movsl
or
shll
insb
jo
jmp
cmp
xchg
pop
les
xchg
pop
popa
nop
loope
cld
in
cmp
add
or
pop
sbb
dec
ret
and
xchg
outsb
push
mov
jbe
sbb
data16
mov
jnp
in
rcrb
fdivrp
aas
sub
push
and
and
mov
clc
movsb
inc
in
xchg
nop
in
push
fimuls
mov
xor
jbe
out
push
call
sub
xchg
mov
int
cmpsl
push
cmpsb
or
hlt
adc
inc
movsb
jns
adc
lock
mov
shlb
stos
inc
xor
out
lcall
dec
scas
fisubrl
inc
shrd
std
ja
scas
stos
movsb
inc
ljmp
stos
push
mov
mov
cmc
and
fs
aaa
add
cmp
nop
cwtl
shlb
dec
inc
sub
jbe
xor
jo
push
pop
push
out
addr16
dec
out
fdivs
movsl
orl
pop
mull
pop
cli
inc
xchg
xchg
xchg
test
sti
loopne
shl
decl
shr
push
xor
xchg
lock
jp
xor
cli
pop
mov
sub
mov
jmp
nop
adc
fwait
sbb
insl
xchg
xor
jns
std
insl
adc
jno
push
inc
xor
das
negb
lahf
mov
inc
repnz
push
movsb
or
or
out
jno
dec
jbe
inc
inc
mov
inc
xor
mov
movsl
ljmp
inc
das
or
and
xchg
mov
pop
adc
xor
pop
ss
addb
mov
jmp
cmc
jns
mov
pop
lret
jg,pt
jb
sbb
xor
popa
testl
movb
popa
pop
adc
dec
addr16
cmp
leave
shrb
sarl
fmulp
repz
ss
repnz
jne
jl
ret
and
sbb
xor
jo
aam
sbb
sub
int3
ja
xchg
cmc
test
dec
push
mov
mov
push
pop
mov
retw
pushf
lcall
mov
push
dec
fnsave
inc
mov
mov
jb
push
mov
mov
cmpsb
sbb
dec
shll
stos
adc
mov
push
jo
or
jmp
mov
fidivl
fucom
mov
ljmp
cmp
push
lret
sbb
sbb
cmp
xor
bound
cmpsl
cltd
cmc
inc
and
jp
mov
and
inc
mov
xor
mov
je
push
loop
lret
cmpsb
icebp
inc
mov
xchg
repz
mov
iret
hlt
xor
push
adc
and
enter
sbb
into
or
jmp
sahf
in
mov
stc
ret
adc
shrb
cmp
adc
enter
jnp
pusha
cmpsb
aaa
das
add
pop
mov
jae
fcmovbe
pop
inc
mov
and
jns
jl
push
pop
sbbl
mov
adc
mov
inc
data16
les
fsubrl
sbb
mov
sahf
insb
add
sub
pop
cmpsb
clc
fucom
push
je
repz
cmc
dec
cmp
ljmp
pop
add
mov
sahf
test
adcb
pop
mov
fldl
lds
mov
xor
dec
adc
ljmp
mov
hlt
pop
dec
xor
jb
jmp
test
and
inc
and
dec
mov
sub
scas
jnp
movsb
dec
int3
daa
mov
inc
push
punpckhwd
inc
xchg
push
in
sub
sub
iret
clc
in
leave
inc
and
cmc
add
inc
jg
mov
arpl
es
pushf
lds
pushf
or
and
vmovupd
push
inc
das
rorl
movsb
cltd
mov
adc
xchg
jmp
sbb
inc
mull
test
outsl
jl
enter
jns
add
jl
pop
lcall
and
loope
call
imul
cmpb
xor
adc
inc
adc
outsl
sahf
dec
xlat
inc
adc
lods
in
mov
lret
leave
andb
mov
jle
rcrl
add
xor
into
arpl
or
leave
movsb
cmp
dec
and
adc
push
jno
outsb
frstor
xlat
aas
rclb
popf
hlt
pushf
mov
push
popa
inc
lds
lahf
cld
fs
repnz
jb
iret
inc
into
mul
sub
imul
xchg
jns
sub
push
leave
add
imul
ret
pop
mov
pushf
jl,pn
insb
fwait
ds
sbb
loop
into
pop
stos
in
fiadds
inc
dec
movaps
stos
mov
pop
gs
ljmp
pusha
cmp
out
jae
imulb
lea
add
mov
in
sbb
ss
sbb
in
imul
aaa
jne
sbb
std
xor
mov
test
xor
lahf
adc
fmuls
cmp
lcall
sbb
cmpsb
clc
fnsave
jae
mov
je
add
ja
outsl
leave
and
fnop
pushf
sahf
mov
sbb
arpl
outsb
bound
mov
pop
outsl
dec
or
les
mov
or
xchg
addr16
stc
icebp
jbe
xchg
xchg
popf
dec
les
or
jl
fisubl
adc
adc
inc
fs
xchg
xor
out
into
and
jns
sub
xchg
jmp
sub
movsb
and
pand
fcompl
int3
cli
das
stc
xchg
xchg
ds
push
test
inc
rclb
addr16
sub
subl
add
mov
ja
add
dec
cmpsl
mov
xor
mov
or
ss
or
or
mov
popl
daa
icebp
fcmove
xor
fwait
inc
icebp
je
push
or
repz
push
test
dec
mov
dec
ds
dec
int
xor
jg
iret
push
pusha
cmp
fstl
ja
or
das
xchg
cltd
jle
out
dec
push
test
xor
stos
mov
mov
sbb
dec
mov
adc
enter
push
jne
push
pop
sbb
push
les
sbb
mov
iret
daa
aad
jecxz
pop
lcall
outsl
bound
lcall
insl
cmp
xor
sar
icebp
pop
mov
lahf
fldcw
stos
xchg
push
add
jnp
popa
mov
pop
imul
loope
ss
shrb
cmp
cmp
outsl
andl
xlat
test
mov
pushf
pop
fistps
jno
insl
mov
push
jp
and
push
lret
jbe
ud2
push
shll
sbb
mov
xlat
xchg
xchg
scas
mov
arpl
mov
daa
lret
idivb
gs
rolb
gs
and
cmp
scas
hlt
mov
sbb
xchg
xchg
ret
pop
fidivrl
outsl
adc
repnz
hlt
dec
lret
aad
ret
loopne
adc
fnstenv
lea
fistpll
lds
push
jle
pop
push
push
ss
stos
dec
stc
and
test
and
aas
or
negb
dec
adc
adc
pop
dec
jnp
in
cltd
int
cwtl
inc
test
and
insb
hlt
adc
xor
dec
xchg
mov
mov
dec
add
mov
pop
cmp
out
loopne
xor
mov
bswap
inc
loopne
xor
sahf
push
rcll
fdivrs
out
cmpb
jne
sar
test
int3
daa
arpl
fsubrp
imul
mov
push
jae
jle
adc
or
pop
pop
sahf
movsb
jae
daa
xor
adc
sti
push
aad
lahf
mov
push
iret
scas
lret
enter
enter
leave
lcall
lret
adc
jge
xor
test
add
mov
in
lods
ror
and
mov
repz
sbb
dec
lret
lods
mov
repz
nop
fsubrs
and
lahf
jg
pop
xchg
leave
sbb
sub
adc
les
add
popf
clc
sub
mov
jne
adc
inc
das
xchg
loopne
jo
fdivrl
inc
xor
push
std
out
iret
push
inc
lcall
std
cld
in
xor
loopne
pop
sub
out
adc
andl
sub
or
stc
lret
lock
imul
filds
cli
and
jnp
cmp
pop
out
sub
negl
xchg
mov
loop
das
pop
mov
stos
stos
xchg
movsb
int
jae
sbb
jno
out
sub
cmp
and
mov
mov
insb
mov
push
pop
cli
mov
js
or
daa
cmc
adc
xchg
pop
mov
in
mov
stos
inc
ds
and
leave
addl
push
mov
mov
sbb
sub
scas
imul
lahf
rcrl
sub
call
push
rolb
jecxz
mov
mov
add
mov
jo
std
dec
rclb
in
sub
xor
in
pusha
fsubs
pop
sub
cld
in
xchg
mov
out
test
add
jle
sbb
jl
push
inc
cmp
mov
push
movsb
fidivrs
test
mov
mov
and
jno
push
or
jle
fnstsw
cs
xor
pusha
loop
xchg
adc
sbb
xor
or
mov
imul
loope
xchg
push
int3
andb
call
cs
mov
cmpsb
rorb
add
cld
sahf
inc
fstpt
jg
imul
jbe
add
adc
lret
cmp
xlat
sbb
jns
mov
frstor
arpl
dec
mov
xchg
fdivs
lret
dec
push
insb
int3
addr16
roll
sarl
out
inc
dec
lret
insl
lret
xor
push
out
xor
dec
mov
insl
bound
enter
sbb
pop
xchg
dec
mov
es
pop
inc
mov
out
mov
jnp
sbb
repz
pop
lock
mov
imul
mov
pop
lcall
jne
add
adc
inc
pop
lret
aaa
adc
cwtl
adc
pop
insb
jmp
or
add
cmpsl
aaa
test
stc
mov
xor
cld
scas
cs
jp
lods
jo
xchg
and
mov
add
add
out
ja
lcall
xor
ficoms
ljmp
mov
outsb
test
sub
mov
mov
imulb
cmc
add
repz
icebp
arpl
rcrl
add
cmp
jecxz
sub
mov
sbb
or
imul
or
mov
lock
jmp
cmp
adc
outsl
adc
push
lret
add
and
arpl
cmpb
in
push
inc
xor
jge
call
daa
addb
aas
jns
ss
pushf
jle
push
jnp
and
stos
jno
cmp
inc
adc
pusha
pop
dec
mov
sti
sub
xor
sbbb
mov
sub
outsb
data16
mov
divl
push
call
std
scas
mov
divb
int3
xor
cmp
sbb
stc
xlat
dec
ljmp
xor
push
sbb
sti
pop
sub
pop
or
mov
push
adc
dec
mov
inc
shrl
inc
fisubrs
cmp
arpl
cmp
js
adc
xchg
insb
cwtl
ds
dec
xchg
push
or
fdivl
clc
mov
incl
adc
sti
xchg
sbb
ss
aas
add
dec
mov
mov
and
cli
inc
lock
cltd
cmp
xchg
ret
sarb
inc
sahf
mov
mov
add
push
inc
dec
icebp
pop
mov
add
loopne
sub
adc
adcb
test
xor
imul
leave
hlt
jnp
repz
xchg
cmp
into
sbb
mov
cmp
sarb
fwait
nop
sub
popa
xchg
push
xchg
mov
mov
pop
imul
or
imul
sbb
cmp
push
or
or
jnp
push
cmp
sbb
mov
jl
lods
in
mov
sbbb
xchg
cmpsl
push
loope
icebp
mov
cmpsb
lock
mov
inc
pop
xor
xorb
dec
sub
lods
cmp
cmp
mov
outsb
sarl
mov
out
cs
jns
mov
add
mov
push
sbbb
pushf
and
aas
out
arpl
insl
jns
loope
inc
xchg
mov
sti
push
fnstcw
push
test
aaa
cmp
aam
push
xchg
leave
mov
daa
lods
mov
lock
jg
mov
push
lcall
dec
add
cld
fldcw
push
lds
stc
inc
mov
mov
xchg
es
sti
lahf
jecxz
and
sub
adc
scas
cmp
js
adc
insl
rcll
push
xchg
push
inc
pop
test
cmp
xor
in
mov
pop
adc
jno
sub
adcl
insb
jle
call
mov
loopne
and
jbe
pop
mov
adc
pop
das
pop
inc
push
and
dec
loopne
dec
mov
adc
clc
sub
add
bound
out
les
and
sub
cmp
imul
pop
stc
add
popa
inc
jge
pop
push
dec
pop
pop
hlt
push
cltd
stos
repnz
std
scas
and
push
fdivrp
push
xlat
iret
cs
and
sahf
add
mov
out
in
rep
push
test
pop
add
adc
cmp
adc
loopne
cmpsl
std
sbb
rorl
pop
mov
pop
ret
jecxz
mov
mov
ror
dec
lahf
int3
jne
jne
and
or
or
and
xlat
jp
scas
add
lret
jg
js
jl
pop
into
dec
xchg
add
xor
call
int3
mov
inc
mov
push
sbb
call
out
dec
mov
push
leave
loop
mov
rcl
mov
add
mov
sub
push
sub
insl
xchg
push
stos
ljmp
subl
adc
ljmp
xchg
cmpsl
adc
dec
fadds
divb
stos
insl
subb
ret
push
test
mov
shll
int
int
bound
subb
dec
xchg
scas
add
push
mov
mov
imul
arpl
lret
dec
pop
imul
xchg
mov
mov
fstpt
pop
repnz
jge
sbb
cltd
push
jge
pop
sub
and
and
and
dec
shrl
mov
mov
in
insl
mov
dec
test
jb
pop
in
xchg
hlt
sub
adc
pop
lahf
arpl
loopne
ficompl
mov
pusha
push
mov
mov
and
push
jmp
mov
inc
aam
data16
mov
pop
xor
xchg
pop
xchg
xchg
pop
hlt
sbb
int
sbb
lock
into
scas
je
subb
push
sarb
stos
jo
mov
jb
lock
mov
gs
imul
jecxz
clc
inc
enter
pop
jl
out
insb
ret
aam
pop
xchg
cmc
cmpl
in
clc
sub
cmpsb
inc
pop
and
mov
movsb
fisubs
xchg
rorb
iret
ret
inc
out
inc
inc
adc
mov
out
sbbb
call
fistpll
dec
adc
sbb
dec
fisubrl
mov
push
ficomps
and
loopne
cmpsb
pushf
mov
ret
mov
push
in
addr16
add
mov
jb
pop
insl
add
xorb
call
fs
rcrb
cmp
repnz
add
pop
add
icebp
les
jmp
adc
sub
ror
frstor
pop
sarl
jb
sbb
std
fisubl
xor
xor
or
notl
cwtl
mov
pop
in
aaa
std
daa
or
idivl
xchg
jge
lea
inc
lods
ja
addr16
fldl
in
aaa
std
daa
or
idivl
xchg
jge
lea
inc
int
mov
pop
in
aaa
cmp
cmp
xchg
xchg
cmpsl
cltd
push
roll
popf
addr16
int
in
aaa
jge
or
idivl
js
dec
sbbb
imul
dec
dec
xor
cmp
sti
mov
ljmp
stos
stos
fwait
lcall
pop
pop
dec
dec
cmp
sub
sbb
or
cli
jmp
scas
fcmove
lret
stos
stos
fwait
lcall
pop
pop
dec
dec
cmp
sub
sbb
or
sti
cli
jmp
test
in
shr
enter
in
xor
imul
xor
dec
jnp
sub
nop
xchg
lock
adc
mov
lock
loop
push
iret
adc
scas
scas
adc
std
add
iret
dec
scas
inc
mov
jne
cmpl
xchg
xor
dec
xor
stos
jmpw
sti
lods
andl
scas
and
ds
push
sub
cltd
cmp
in
arpl
sti
add
in
sub
ret
push
fwait
nop
mov
xor
jae
xorb
sub
add
inc
into
ss
sahf
je
call
sbb
stos
or
cmp
loop
adc
mov
xchg
jecxz
and
pop
dec
dec
cmp
sub
sbb
or
sti
cli
jmp
fcmovnu
lret
lret
stos
stos
fwait
lcall
ds
cs
push
pop
bound
pop
dec
pop
mov
mov
ret
jecxz
les
sbb
or
cs
jge
inc
sbb
outsb
sahf
mov
xchg
lcall
stos
jmp
ds
sub
cmp
sub
sbb
or
cli
jmp
fcmovnu
lret
lret
stos
stos
fwait
lcall
pop
pop
dec
dec
cmp
sub
sbb
or
sti
cli
jmp
fcmovnu
lret
lret
stos
stos
fwait
lcall
loopne
outsl
mov
dec
xchg
mov
adc
xor
pop
and
dec
xchg
in
pop
stc
pop
in
push
jl
shrl
xor
fidivrs
jl
jbe
imul
jns
add
push
mov
ficompl
les
mov
jmp
pop
arpl
movsl
pop
push
out
and
pop
notl
inc
enter
scas
jp
cmp
movsb
xor
push
test
and
xchg
inc
xchg
lods
push
lret
xor
or
data16
cmp
mov
sti
add
fwait
loop
cmp
and
sbbb
loope
in
dec
pop
or
xor
xor
push
or
sbb
jp
ljmp
jne
shrb
cmp
mov
add
and
xor
or
rorb
mov
jl
cmpsl
inc
sub
jns
xchg
inc
fwait
mov
rcr
repz
je
mov
jbe
ljmp
arpl
data16
verr
mov
cli
iret
sub
xor
sti
pop
cmp
sbb
roll
and
sub
ljmp
notb
aaa
fildl
mov
sbb
lret
xchg
mov
cwtl
cmpsb
jecxz
mov
stos
mov
xor
pop
mov
push
jbe
adc
test
jmp
mov
mov
mov
cmp
cli
xor
inc
fsts
frstor
cmpsb
and
push
addr16
in
xchg
dec
gs
mov
jmp
and
es
shll
addr16
stc
je
stc
xorb
int3
add
lcall
or
enter
xchg
add
xor
jne
popf
mov
cs
dec
dec
mov
or
outsl
cmpsb
push
test
sub
mov
push
jbe
add
fxch
lahf
test
ret
divl
sarb
jne
repnz
mov
imul
loope
insb
enter
jecxz
rorb
add
int3
jae
inc
mov
int3
sub
jp
mov
xor
nop
cmp
inc
icebp
ret
ljmp
popa
sbb
adc
movsl
sub
outsl
and
pusha
cltd
or
repnz
xor
push
movsbl
jmp
repz
xor
mov
imulb
je
mov
xchg
popf
pop
in
jl
and
and
out
leave
pop
aam
add
pushf
jnp
fwait
or
jae
pop
push
cmp
xor
aaa
push
push
insb
enter
pop
add
add
and
out
jae
inc
jne
push
dec
hlt
subb
movsb
les
jge
iret
leave
mov
dec
push
push
aam
lahf
nop
or
sahf
mov
ds
add
repnz
mov
lahf
jl
mov
and
push
bound
or
cmp
jnp
pop
mov
sub
mov
and
outsl
in
cmp
jmp
rorl
xchg
pop
roll
xchg
mov
jle
ja
and
out
cwtl
pop
pop
sub
std
sbb
into
mov
xchg
lret
mov
dec
jne
jge
xor
sub
mov
dec
mov
sti
scas
mov
jb
daa
fwait
and
and
loope
imul
adc
outsl
or
add
fdivs
push
push
faddl
cmp
jg
dec
pushf
daa
ljmp
addr16
frstor
and
sahf
xchg
mov
pop
nop
lods
enter
pop
cmpl
sub
loope
iret
jns
stos
scas
mov
jb
pop
push
mov
cmc
xorl
lcall
pop
enter
jns
adc
fisttpl
add
cmc
das
scas
out
das
sub
jecxz
inc
xor
or
call
and
xchg
rcrl
inc
xchg
js
iret
mov
jae
lret
and
push
sbbl
in
ret
add
fsub
out
xlat
xchg
xor
fdivs
mov
push
xchg
sbb
push
or
mov
fcoml
and
push
lock
mov
pop
pusha
adc
push
sbb
mov
xchg
lea
lds
pop
in
pop
fstl
pusha
mov
cs
idivl
ss
aas
xchg
int3
push
and
call
pusha
and
std
jecxz
fstpt
adc
push
jb
repz
dec
or
aad
pop
mov
mov
sti
add
out
dec
or
mov
push
nop
bound
mov
mov
push
mov
sub
mov
add
out
lret
repnz
lock
ds
shr
jge
repnz
sub
iret
in
fsubrs
sti
out
mov
pop
cmp
jg
jl
add
xorb
pop
out
pop
xlat
xchg
enter
jmp
enter
or
sub
aad
sbb
dec
test
dec
pop
and
lahf
push
pop
cli
mov
xchg
add
jle
dec
or
xchg
movsl
repz
out
loopne
or
jecxz
mov
mov
mov
inc
loope
mov
cld
add
in
pop
call
inc
outsb
xchg
shr
lods
push
dec
rol
jns
pop
out
sbb
jno
lret
aas
frstor
lds
fdivl
jne
xor
dec
divl
mov
cltd
outsb
cmp
mov
dec
arpl
sbb
xor
fildl
xchg
inc
inc
movb
rcrb
stos
jmp
sbb
f2xm1
nop
adc
lret
xor
cmp
sub
outsl
mov
pop
test
add
ja
test
adc
outsl
fwait
and
xchg
iret
insl
pushf
or
test
imul
jge
mov
dec
pop
dec
mov
loop
mov
je
arpl
scas
daa
cwtl
call
cmp
pop
cmp
lea
jns
sub
add
push
aas
insb
push
pop
jnp
adc
hlt
addl
mov
nop
push
pmovmskb
stos
shrb
test
xchg
pop
sbb
inc
sub
pop
cs
add
outsl
mov
jg
rcll
cmp
fs
bound
adc
mov
ja
je
frstor
xchg
dec
dec
xchg
pushf
mov
mov
out
roll
mov
jns
icebp
repz
xchg
cli
push
and
jbe
add
xor
mov
testb
test
lods
xor
cmpb
mov
xor
aad
xchg
enter
push
pop
dec
sub
enter
mov
inc
jg
ja
inc
push
adc
inc
sarl
dec
ljmp
mov
hlt
fidivl
xchg
dec
mov
xchg
hlt
mov
xchg
cld
pop
out
cmp
inc
add
jbe
roll
jle
ljmp
sahf
pop
sub
cmp
fstps
add
push
or
in
addb
repz
arpl
ss
push
pop
jp
and
int3
cmc
fidivrl
sbb
shrb
arpl
shr
dec
icebp
pusha
cmc
lods
or
jns
mov
ror
mov
jp
lahf
loope
xor
mov
rorb
aam
xor
mov
xchg
lock
test
aaa
arpl
add
ss
add
adc
frstor
loope
pop
mov
jne
jecxz
sar
mov
das
push
repz
js
adc
inc
movsl
adc
sub
push
pop
imul
sbb
ret
fistps
cltd
xchg
leave
inc
outsb
pop
xor
adc
loopne
mov
xor
sbb
mov
xchg
cld
cmp
fwait
dec
dec
mov
jno
iret
push
aas
jp
mov
or
xor
pop
out
mov
xor
xor
adcb
mov
xor
xorb
jb
jne
stc
push
lds
fldpi
push
ficompl
mov
mov
pop
data16
inc
pusha
sub
in
cmp
idivl
int3
dec
and
push
sub
leave
imul
movsb
add
xlat
xchg
push
in
das
and
push
cld
fiaddl
mov
lods
jg
push
clc
lds
sbbl
lods
popa
cmpb
mov
ror
fadds
pop
mov
outsb
lock
pop
aam
jo
stos
xor
sbb
lds
sub
mov
out
inc
icebp
jl
out
test
jne
adc
std
pop
into
mov
xorb
ret
lahf
mov
loope
ds
cmp
mov
pop
jle
or
out
mov
jmp
sub
inc
aad
out
adc
pop
push
push
adcb
lret
pop
push
imul
repnz
add
into
incl
into
add
ret
das
jb
repnz
add
ljmp
xor
arpl
cs
popa
dec
loop
jl
or
add
xlat
sbb
test
sbb
push
int
scas
xor
cmp
call
dec
jg
fidivrl
les
nop
sahf
aaa
jnp
scas
mov
xchg
add
xor
mov
xchg
mov
cmp
std
insl
je
adc
adc
and
scas
adc
pop
jns
jle
mov
sbbb
daa
mov
bound
jecxz
loop
cmp
ss
fsubl
inc
xchg
or
jns
cmp
adcb
lock
mov
mov
jbe
decb
fwait
enter
lret
or
pop
push
mov
mov
add
hlt
mov
lret
xor
lods
ficompl
icebp
pop
data16
fildll
adc
out
mov
mov
mov
outsl
adc
cltd
and
in
sbb
ss
popa
lea
arpl
pop
sti
sbb
mov
icebp
xchg
bound
or
mov
xchg
xchg
shrl
or
jns
cli
aad
push
dec
les
xor
cs
add
inc
pop
das
sub
cmp
mov
inc
xchg
adc
lahf
add
stc
add
int
mov
cmp
lahf
ds
das
adcb
jmp
lahf
scas
fldl
xor
lock
push
mov
jge
out
inc
lea
adc
xchg
out
cmpsl
push
jl
mov
popa
push
sti
mov
pop
stos
int3
adc
jnp
icebp
xchg
adc
mov
dec
push
bound
roll
mov
mov
mov
adc
mov
jmp
popa
cmp
out
in
mov
dec
xchg
out
sbb
bnd
pop
ja
movsb
insl
aas
mov
and
lcall
push
ljmp
jae
repz
rorb
xor
mov
pop
dec
aam
test
aad
lods
or
repz
sub
jp,pn
lods
inc
popl
add
pop
mov
xor
adc
rorl
roll
fdivl
cmp
mov
mov
mov
jae
scas
jp
ret
loope
mov
les
push
sub
add
mov
add
insl
std
adc
add
pop
les
sbb
xchg
cs
dec
cmp
icebp
cmc
and
inc
in
or
cmpb
jg
sahf
cli
push
add
ret
pushf
repz
add
push
aas
cmp
sbb
scas
cld
icebp
test
mov
mov
mov
fdivs
sbb
out
adc
pop
push
add
cmc
xchg
mov
ret
jle
ja
cltd
idiv
mov
or
aam
scas
xlat
lds
fwait
jae
xor
lock
xor
and
mov
adc
stos
mov
loope
adc
mov
pushf
or
fimull
pusha
xorb
cmp
jg
test
andl
sub
ss
ds
and
jmp
dec
je
mov
sbb
es
dec
clc
mov
fsubrl
ss
iret
in
cwtl
push
mov
sub
icebp
xor
or
js
dec
cmp
add
jbe
mov
movsb
loop
dec
cmp
dec
xor
mov
test
or
adc
dec
ljmp
das
mov
xor
outsl
sub
cmp
imul
or
jne
cmp
xchg
sub
sbb
jnp
cmp
ds
aaa
fisubl
mov
mov
push
dec
mul
dec
std
inc
jns
leave
shll
lret
push
insl
arpl
mov
sub
pop
lods
add
dec
stc
push
add
xor
sbb
xchg
addr16
aam
movsb
sahf
cli
scas
loopew
fs
xor
dec
bound
inc
outsl
add
js
das
int
jmp
shl
add
je
ret
adc
mov
int3
push
jge
adc
pop
xchg
pushl
or
mov
les
ret
mov
or
inc
nop
mov
in
repnz
fisubl
ljmp
fndisi(8087
cwtl
inc
call
dec
call
jae
mov
andl
push
loopne
test
int
cmp
add
xor
fs
outsb
and
and
cs
lds
test
arpl
mov
inc
push
test
sti
sub
and
es
mov
dec
lahf
fwait
xchg
mov
cli
cmp
loop
lock
mov
shr
jne
xchg
jmp
add
mov
mov
mov
or
faddp
clc
stos
sub
in
iret
pop
adc
loop
cmc
lods
inc
jp
sarl
fisttps
sub
jl
hlt
shrb
or
xor
and
or
xchg
and
sbb
sahf
push
ss
cmpsb
mov
loopne
or
into
das
pop
movsl
push
push
ret
add
sbb
test
fwait
jg
mov
popf
mov
aad
dec
aam
cmp
pop
test
aam
call
mov
xor
or
xchg
fstpt
insl
adc
lcall
movsb
call
int3
fdivr
cmc
insl
jle
xchg
and
pop
outsb
imul
cmp
mov
in
jne
subl
outsl
push
inc
mov
imul
mov
je
pop
or
psubb
dec
jo
popa
outsb
rorb
loop
test
leave
icebp
push
ljmp
test
jge
scas
sbbl
add
aas
stos
fldl
ret
scas
and
out
sarb
daa
hlt
out
gs
out
dec
mov
in
pusha
hlt
in
data16
and
imul
mov
add
cwtl
fidivrs
xor
movsl
cmp
sbbb
testl
into
mov
jecxz
outsb
popa
fiaddl
mov
cs
push
lods
push
xchg
faddl
ja
in
push
push
mov
dec
mov
and
ja
aam
int3
xchg
push
xchg
in
push
jmp
mov
jbe
lret
repz
xor
insb
in
cmc
jle
sub
or
arpl
fisubs
xchg
jb
sub
cmc
lret
dec
ljmp
negl
popa
insl
adc
jp
sub
xor
movsb
daa
pop
jg
sub
iret
fcoms
push
inc
sti
adc
sbb
cmp
jg
mull
jae
add
add
int3
in
das
js
insl
and
sub
dec
add
rorb
lods
mov
xorl
add
divb
push
jae
mov
dec
jae
dec
lcall
jecxz
jmp
and
adc
pop
jg
sub
xchg
sbb
test
call
imul
adc
cmc
cmp
sti
jne
std
notb
data16
inc
or
dec
push
xchg
enter
test
mov
mov
sti
cmp
or
rcl
xor
aam
jg
sbb
cwtl
dec
sub
les
pop
pop
jbe
je
call
sub
sbb
test
rcr
in
adc
or
aad
std
xchg
addr16
out
repnz
or
cmpsl
test
mov
xchg
incb
jo
mov
sub
push
int
pop
mov
std
test
mov
stos
cs
pop
mov
por
in
jae
int
loopne
pop
ss
and
iret
mov
jne
jbe
dec
subl
pop
pop
push
gs
mov
pop
push
adc
push
mov
push
cltd
cli
push
in
cmp
inc
add
add
inc
inc
cli
fistl
mov
repnz
xor
test
rcll
lahf
leave
jns
fidivs
cmpl
ljmp
pop
sbb
pop
mov
outsb
add
mov
aaa
push
add
ss
fldl
sub
mov
adc
test
mov
das
test
and
mov
dec
imulb
pushf
ljmp
mov
adc
add
add
xchg
cmpsl
cmpsl
mov
mov
sbb
pop
mov
jnp
inc
jbe
movsb
jl
jno
jecxz
dec
adc
jle
sbb
adc
mov
test
cli
clc
inc
dec
aam
adc
jne
jl
or
xor
xor
call
cmp
jge
call
rorb
push
cmpsb
jb
cmp
mov
mov
testl
nop
lods
cmp
in
pop
into
sbb
or
imull
fiaddl
add
cmpsb
aad
fwait
int3
mov
pop
es
outsl
cmp
push
lock
add
nop
or
or
hlt
into
ja
out
pop
pop
jno
movsl
cmp
imul
push
jbe
push
cmpsb
or
in
xor
ja
push
sbb
add
inc
icebp
aad
xor
inc
mov
cmp
add
lret
jg,pn
mov
aaa
ret
in
xchg
out
pop
enter
fcmovbe
movl
sub
cmp
or
cmp
pop
fdivrl
mov
inc
out
clc
out
mov
ja
mov
call
aas
inc
js
inc
pop
xchg
pop
pop
mov
push
int
mov
lds
pop
fst
pop
fwait
ret
popf
in
negb
dec
push
ror
add
lods
sub
fistl
mov
push
push
out
lret
punpckldq
scas
xor
or
push
cld
mov
add
push
inc
mov
mov
popf
out
aaa
push
mov
nop
or
mov
xchg
or
outsb
mov
sar
leave
pop
mov
fucom
mov
push
out
shrb
sub
negl
aas
fdivs
jnp
inc
mov
lahf
into
inc
add
sbb
negl
and
xchg
imul
mov
loopne
dec
mov
mov
lods
push
mov
in
lcall
push
shr
add
and
push
fisubs
lea
sub
mov
shrb
xor
es
adc
sahf
mov
movsl
jge
cmpsb
dec
xchg
mov
adc
mov
aam
out
or
mov
jbe
push
mov
sahf
xor
test
sbb
push
ret
pusha
push
push
mov
mov
inc
jmp
test
hlt
int
adc
jno
lods
or
xor
stos
pop
test
aad
in
dec
jne
adc
das
test
insb
pop
jge,pt
dec
shll
inc
push
out
cli
inc
sub
test
lcall
jae
sbb
lods
sbb
sub
rcrl
shrl
fstpl
ds
and
add
push
stos
fdivs
xor
mov
out
stc
and
pop
cmp
pop
imul
sbb
mov
cmpsl
mov
jl
xchg
jl
les
lods
arpl
sbbl
mov
xor
shl
push
jb
insl
cmpl
sbb
mov
pop
cmpsb
add
sbb
mov
in
dec
out
inc
or
stc
mov
repz
adc
dec
aad
sbbl
xor
shrb
lcall
jo
stos
xor
sub
cltd
movsl
lock
inc
pushf
les
call
mov
in
mov
stos
into
shl
xchg
repz
inc
outsb
sub
inc
out
jmp
frstor
xchg
inc
add
cmp
mov
rcrl
jl
sbb
aad
stos
or
pop
sub
popa
mov
imul
push
jle
cmc
xchg
push
nop
cmp
sahf
loopne
jmp
jo
jae
adcl
cmp
sub
pop
jle
jmp
stos
and
sti
mov
je
orl
add
mov
jno
jb
into
out
fidivrs
sbb
rorl
pop
mov
push
outsb
mov
test
insl
push
push
sub
mov
fcmovbe
adc
sub
cmpsb
rclb
cli
ja
mov
test
in
les
mov
mov
dec
enter
je
adc
add
aad
bound
fstps
adc
sub
ljmp
loop
or
push
pop
dec
dec
cmp
sub
sbb
or
sti
cli
jmp
fcmovnu
lret
lret
stos
stos
fwait
lcall
pop
pop
dec
dec
cmp
sub
sbb
or
sti
cli
jmp
fcmovnu
lret
lret
stos
stos
fwait
lcall
pop
pop
dec
dec
cmp
sub
sbb
or
sti
cli
jmp
fcmovnu
lret
lret
stos
stos
fwait
lcall
pop
pop
dec
dec
cmp
sub
sbb
or
sti
cli
jmp
jno
lret
mov
fs
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
adc
push
sbb
dec
jae
inc
mov
call
mov
ret
push
xor
js
push
arpl
push
sub
mov
ret
xchg
call
jecxz
xchg
test
xorb
and
adc
arpl
rolb
sbb
mov
mov
push
push
xchg
mov
cmpb
inc
jmp
lret
stos
test
int
std
fistpl
mov
dec
lock
pop
xor
push
sbb
andl
js
call
mov
adc
scas
cwtl
dec
aaa
pop
pop
push
push
jle
repnz
dec
sbb
fistpll
arpl
fsubrl
mov
call
cltd
mov
shll
cld
out
mov
inc
pusha
rcrb
cwtl
hlt
pop
insb
jmp
imul
pop
call
movsl
dec
faddl
push
lock
mov
xor
sbb
mov
and
add
sbb
arpl
push
nop
inc
sub
testb
ror
stos
sub
cmp
push
push
pop
jge
sub
mov
test
mov
icebp
xchg
out
int3
shr
sbbb
and
adc
pop
push
and
inc
loopne
mov
popf
repnz
jmp
in
mov
mov
xchg
sub
jo
jnp
pop
jae
arpl
push
sub
mov
mov
cwtl
repz
mov
xor
js
push
arpl
push
sub
mov
mov
cwtl
repz
mov
xor
push
mov
dec
test
or
inc
or
sbb
xlat
movsl
sbb
xchg
dec
push
jp
cld
add
jp
lret
xor
mov
lock
push
dec
pop
rcrb
xor
xchg
shll
lahf
mov
cs
xchg
hlt
mov
cmp
xchg
xchg
jecxz
sub
jb
cli
test
rcr
fsubrs
jl
shrl
cmp
adcb
cmp
inc
mov
lret
jno
push
loopne
dec
aam
pop
or
ficoml
push
jmp
xchg
inc
mov
dec
insl
sbb
nop
jecxz
pop
rol
lea
xchg
insl
cwtl
gs
push
int
mov
sub
cmp
jo
movsb
sbb
es
cli
push
xor
cmp
and
je
enter
imul
adc
rcr
out
call
cmp
repnz
jle
jae
cmc
pop
imul
das
fcmovne
sub
push
dec
cli
adc
movsb
jecxz
push
sub
push
mov
dec
cmp
pop
test
nop
adc
shlb
enter
das
push
xlat
aam
sahf
mov
popa
xor
idivb
pop
out
push
jle
inc
push
arpl
lods
es
mov
push
out
push
nop
fadds
jle
ds
mov
sahf
push
fcomps
dec
stos
loopne
inc
push
add
add
sub
mov
into
lea
imul
xchg
mov
movsb
movups
testb
aad
mov
dec
xor
sub
filds
mov
mov
in
cltd
es
and
sub
push
hlt
shrl
repnz
sahf
popf
xchg
or
xor
in
and
xor
push
dec
jnp
mov
xchg
das
mov
std
out
adc
shrl
jb
mov
fisttpl
xchg
scas
test
and
adc
imul
push
jae
out
mov
clc
cli
mov
aad
call
out
ss
jmp
loop
cwtl
orb
lock
pop
mov
jl
nop
dec
inc
jge
mov
jecxz
cs
enter
jae
popf
push
lods
jo
jbe
lock
pop
lock
xlat
in
iret
mov
mov
xor
mov
dec
jb
cmp
dec
cmp
dec
rcr
lods
pop
push
icebp
outsl
jnp
pop
daa
cwtl
andb
and
or
add
addr16
add
faddp
dec
push
pushw
dec
scas
test
and
imul
mov
adc
cmp
xchg
shrl
push
push
imul
inc
aam
push
jmp
pusha
push
movsl
adc
xchg
sub
push
rorl
xchg
scas
icebp
xor
jno
dec
jl
jmp
push
out
mov
mov
push
test
aad
adc
sub
mov
push
sub
in
pop
mov
call
in
leave
sub
std
aad
lea
dec
inc
jo
pop
inc
dec
sbb
sti
movsb
or
lret
jmp
mov
aad
nop
push
insl
into
pop
test
xchg
inc
mov
out
jmp
movsl
jmp
pop
leave
jle
xchg
pusha
inc
jle
push
push
mov
and
adcb
lds
mov
loopne
arpl
daa
ljmp
addr16
out
jp
push
adc
mov
pop
jmp
in
xlat
mov
xchg
popl
add
or
mov
or
add
es
cmp
pop
sub
cli
mov
xchg
mov
jecxz
pop
lahf
loopne
stc
add
call
dec
dec
lahf
loope
mov
test
fdivs
pusha
movsb
jmp
lcall
frstor
pop
insl
out
inc
xchg
pop
add
push
popf
jge
mov
xor
fwait
mov
and
push
rol
xchg
es
xlat
orl
insl
or
pop
pop
enter
cwtl
cmc
addl
out
mov
dec
insb
cmp
mov
into
mov
add
sub
es
out
inc
xor
popf
push
lahf
leave
adc
mov
push
aam
popf
popf
dec
sbbb
fadd
or
jnp
sbbl
mov
push
stos
push
or
cli
cmp
lcall
call
cli
rorb
jge
loopne
mov
adcb
push
mov
es
stc
aad
add
lret
dec
add
or
shll
movsb
cmp
cmp
xchg
jbe
insb
mov
jl
sbb
rolb
ljmpw
add
subl
daa
adc
cmp
loop
repnz
sub
jns
and
pop
leave
adc
and
jae
int
mov
sub
ljmp
inc
jg
mov
inc
sub
outsb
loopne
push
aas
sbb
xor
mov
sub
lods
jge
pop
adc
cmp
xor
scas
jmp
push
cmp
or
movsb
xor
fistl
and
and
pop
adc
pop
cmp
inc
rclb
push
in
push
mov
clc
data16
jne
jp
mov
add
cmp
jmp
adc
mov
add
adc
fnstenv
xchg
inc
jge
iret
cmp
nop
lret
test
stc
aad
std
test
or
mov
outsl
or
mov
arpl
cmp
rcrb
std
iret
xchg
sbb
and
xchg
jnp
test
xlat
xor
leave
outsb
icebp
cmp
xor
xor
gs
ljmp
push
stc
shlb
xor
imul
and
std
pop
cld
jno
inc
cmp
inc
nop
pushf
das
ds
push
scas
lret
pop
lahf
cltd
ficoms
push
shlb
jae
dec
inc
test
pop
push
ljmp
cmp
and
xchg
jg
lret
nop
mov
xchg
subb
push
sbb
sbb
out
mov
hlt
mov
scas
jb
push
xor
or
test
sub
mov
loop
nop
push
and
aad
mov
out
movsb
aaa
outsb
jmp
cs
add
or
jge
data16
stos
sbbb
cmp
mov
jle
xor
stos
gs
adc
cmp
xor
jl
xlat
outsb
mov
imul
mov
pop
mov
cmpsw
aas
xor
aam
adc
or
in
and
lods
inc
sbb
jl
xor
inc
out
imul
lock
cld
pusha
xor
clc
cmp
mov
jg
inc
xchg
outsl
pop
dec
insb
cmpsl
or
in
and
or
clc
or
push
inc
xchg
mov
sbb
cmpsl
imulb
bound
sbb
xor
test
push
mov
jb
mov
push
sbb
out
and
pushf
mov
jmp
enter
lods
lock
vhsubps
cmp
pushf
stos
pop
sahf
xor
subb
loop
xor
loop
test
in
mov
pop
xchg
js
mov
jmp
xchg
dec
hlt
test
lods
and
or
test
and
sub
adc
mov
add
or
aas
leave
loope
outsl
pop
insb
std
into
sbb
or
dec
push
pop
add
sub
iret
xchg
pop
idivb
insb
ss
shll
lret
repz
pushf
xor
rol
inc
emms
stos
lea
push
leave
inc
or
or
mov
hlt
jmp
pop
loopne
fcomi
cmp
sub
scas
arpl
shll
aas
or
test
enter
and
xor
test
xchg
lock
adc
mov
imul
push
jle
mov
rcl
cmpsb
dec
loope
lahf
pop
leave
fadds
jns
out
xor
sarl
and
fidivs
push
push
cltd
jno
mov
push
jno
dec
and
adc
sub
mov
outsb
mov
in
rcl
xor
rcr
jg
adc
insb
xchg
pop
and
xchg
fdivl
push
sbb
push
lcall
out
scas
sub
lds
daa
ret
add
jno
adc
popa
sahf
mov
ss
roll
mov
jnp
cmp
fdivrs
or
lcall
clc
popa
mov
in
dec
sbb
jno
xchg
cld
mov
lcall
ret
push
imul
cmpsl
mov
pop
and
pop
mov
aas
push
pop
inc
popa
scas
scas
out
mov
mov
imul
mov
mov
jno
pop
es
call
pop
dec
jo
sub
insb
out
mov
movlps
popa
mov
pop
ret
mov
or
jo
cld
out
enter
mov
inc
scas
adc
movsb
pusha
loopne,pt
enter
add
cltd
mov
mov
adc
sub
pop
and
cmc
pushf
rorb
lahf
sbbl
pop
fbstp
leave
aaa
pop
jp
loopne
dec
insb
lock
push
mov
sbb
mov
hlt
in
mov
ror
pop
outsb
adc
mov
cmpsl
push
int
adcb
jge
dec
stos
cmp
mov
jb
sbb
daa
bound
dec
movsl
dec
dec
push
dec
sbb
pop
cld
aam
jle
mov
xchg
sbb
inc
dec
xchg
mov
popf
xor
jmp
adcb
dec
outsl
lret
imul
xor
push
mov
movsl
dec
push
cmp
or
imul
xlat
orb
sbb
xchg
lods
int3
dec
fimull
push
lret
sti
dec
mov
ds
sbb
sbb
jp
fimuls
bound
fldcw
pop
push
jg
shll
movsl
lock
xor
lret
adc
icebp
clc
xor
in
int
mov
nop
push
aas
test
adc
cmp
fadds
repz
sub
fwait
out
xchg
mov
mov
insl
add
cmp
test
mov
fdivp
mov
sbb
fistpl
fisttpl
jne
jg
sbb
cmp
cmpsl
sti
pop
pusha
fidivrs
mov
mov
mov
lds
add
cli
sbb
or
sub
pop
scas
sub
cmp
add
sub
cmp
imulb
mov
jge
dec
pop
jmp
int3
call
and
mov
out
cmp
xor
les
aad
cmpsl
xor
scas
cmp
push
scas
inc
inc
mov
sub
ds
hlt
in
in
sub
nop
add
mov
dec
push
push
inc
mov
in
push
jns
shlb
je
xor
inc
test
jecxz
adc
or
sub
cmpsb
mov
xchg
jl
pop
jns
mov
sarb
mov
aad
sti
push
sbb
adc
movsl
nop
cmp
inc
lock
fistps
sbb
fistpll
sub
xor
arpl
or
and
lods
int
or
sub
jecxz
sarb
into
loop
pop
cld
test
push
in
push
push
rol
movsb
mov
xlat
cmp
cmc
add
push
jns
call
fbstp
xor
mov
les
and
xchg
into
inc
clc
lea
cltd
sar
jne
mov
repnz
mov
adc
mov
out
or
pop
test
push
mov
loop
aas
xchg
mov
clc
adc
sub
or
pushf
inc
push
cmc
xchg
or
cmp
cltd
or
dec
push
rcrl
cmp
lods
cli
adc
jge
push
fstp
rcr
dec
xor
push
incb
adc
xchg
gs
icebp
adc
incb
popa
fistps
lock
lret
mov
das
push
in
fsub
fsubs
insl
fcoms
xchg
xchg
inc
push
xor
add
out
jb
sub
inc
dec
push
sbb
add
push
int
pop
out
in
xchg
jle
stos
std
adc
repz
arpl
in
xor
mov
ljmp
pop
dec
dec
inc
out
and
daa
test
mov
inc
aas
jp
xor
out
repnz
push
jmp
mov
jp
gs
movntps
movsb
xchg
lea
jmp
lock
fs
jo
rcrb
cmp
xchg
test
movsb
sbb
mov
xchg
xor
pop
loop
cmp
aad
cmc
add
lock
cmpsb
lods
xchg
das
and
ds
es
sub
pop
rcl
xor
inc
cmp
fidivrl
cli
das
mov
shll
aad
popa
gs
cmp
inc
push
or
sub
push
fisttpll
hlt
and
leave
mov
mov
mov
or
inc
mov
inc
sbb
ljmp
cmp
out
jg
push
jg
pop
jnp
scas
mov
xor
push
mov
les
pop
mov
sub
sub
adc
scas
cli
out
insl
mov
cmp
in
aad
cmc
or
fisubrl
aam
pop
push
pop
xchg
and
add
loopne
pop
sbb
mov
mov
aaa
cmp
adc
mov
scas
jno
and
sub
inc
xor
xor
loopne
sub
int
pop
and
lcall
inc
les
dec
in
cmp
dec
xor
xor
pop
shl
addr16
in
or
fldenv
inc
shll
je
test
cmp
jmp
pop
push
outsl
sbb
cltd
shl
sti
int3
shr
lret
and
rorl
fs
push
lahf
sub
sub
or
fists
icebp
test
es
es
sub
insl
mov
icebp
push
xchg
cmp
sbb
rolb
stc
insb
xor
xor
icebp
lahf
ljmp
add
scas
or
or
sbb
sbb
dec
push
imul
lods
nop
enter
push
pop
aaa
jp
bswap
or
rcrb
fsubl
jle
aaa
sahf
jae
pop
aaa
cmpsl
lock
out
push
jne
std
mov
inc
add
testb
add
inc
dec
mov
hlt
jl
push
or
rcrb
and
sub
mov
xchg
cmpsb
pushf
jb
xchg
pop
xchg
int
repnz
icebp
xor
out
inc
stos
or
out
cmp
repz
ja
shll
das
dec
rcr
rep
dec
shll
mov
jge
mov
dec
cmp
int
xor
jbe
mov
movsb
nop
sahf
test
mov
movsb
jns
and
pop
orl
bound
and
mov
popl
aad
adcl
psrlw
fsubrs
jecxz
mov
ret
pop
add
xor
stc
xor
pop
fsts
mov
cmp
jae
cmovg
jns
mov
mov
daa
mov
xchg
andl
pop
popa
push
subb
das
rorb
mov
pop
pop
sahf
jbe
cmpsl
mov
addl
push
xchg
xchg
xor
lods
scas
sub
idivb
pop
scas
lods
pop
jo
jp
enter
jns
mov
pop
fisttpll
gs
lcall
add
out
subl
jne
xchg
out
xchg
mov
push
test
fs
test
push
xchg
pop
mov
mulb
je
int3
xchg
insb
aad
test
cmp
adc
jecxz
outsb
adc
hlt
les
sahf
jecxz
leave
adc
enter
pop
fidivrl
daa
movsb
jle
sbb
sub
cmpsl
enter
lods
lock
es
xchg
mov
negl
xchg
push
outsb
push
push
mov
repnz
imul
and
sub
lcall
ja
outsb
mov
mov
insb
mov
aaa
sub
dec
aad
cmp
sub
jmp
lahf
es
mov
rolb
sbb
jle
sahf
mov
sarb
add
das
pushf
imul
mov
loop
adc
lods
and
mov
pop
mov
sbb
in
jmp
sbb
sub
push
mov
jbe
and
or
jae
out
iret
sti
std
or
test
repz
pop
lods
data16
cwtl
fnstcw
cmp
fsts
mov
mov
push
jo
dec
add
ljmp
in
in
cmp
addr16
add
mov
pop
or
mov
seto
das
pop
inc
mov
pop
leave
sub
pop
leave
stos
aam
and
jecxz
in
daa
pop
loop
aad
popf
mull
push
pop
jae
lret
fildll
rol
pop
and
sbb
mov
xchg
lods
xchg
mov
add
lahf
dec
test
mov
mov
adc
adc
cmpxchg
sbb
cltd
dec
adc
mov
out
mov
loope
fstps
outsb
adc
pop
mov
leavew
pop
outsb
lret
in
add
pushf
mov
shrb
jbe
sub
xor
imul
jne
jmp
mov
sub
mov
cmp
pop
sub
mov
jo
fimull
xor
or
movsb
push
daa
ror
inc
xchg
clc
adc
mov
push
push
adc
into
sarb
xchg
movsb
and
inc
add
rol
inc
dec
loopne
outsb
mov
dec
adc
outsl
sub
pop
mov
fdivr
push
pop
hlt
adc
push
add
in
push
pop
iret
cmpsb
les
pusha
sar
mov
test
mov
cmp
add
jp
inc
xor
fdivrl
aaa
lcall
fldcw
arpl
pop
mov
movsb
cmp
mov
ds
sub
xor
imul
cltd
ficoml
int3
lret
arpl
rol
stos
xchg
xor
call
jg
in
or
ss
sbb
push
cmp
clc
xor
sbb
in
pop
pop
out
mov
mov
inc
xor
cs
push
fmuls
mov
out
lret
mov
outsb
pop
mov
in
inc
mov
shlb
loope
sub
lcall
or
dec
pop
mov
push
sub
ja
cs
aam
ds
pop
inc
mov
clc
lcall
mov
dec
test
push
jns
aas
sub
inc
addr16
lret
iret
inc
or
leave
jp
mov
stos
stos
inc
cwtl
call
sti
sbb
adc
lret
icebp
hlt
jecxz
repnz
xchg
lds
test
int
ja
popf
sbb
dec
push
pusha
mov
jae
push
mov
imul
scas
test
add
dec
add
stc
xchg
mov
addr16
pop
enter
movsl
push
popa
dec
lret
testb
xchg
adc
and
xor
roll
or
push
xor
sub
leave
xor
stos
shll
sub
cmpsb
sbb
repz
mov
stos
aaa
and
aam
xchg
push
dec
and
jbe
dec
xchg
mov
cmpsb
sub
or
fmull
cltd
ljmp
ret
aad
fbstp
push
imul
aam
out
inc
fdivrl
pop
cmp
sbb
mov
std
dec
out
pop
mov
popf
jge
xorl
aam
ror
stos
mov
xchg
stos
call
push
orl
repnz
mov
sbb
mov
add
xchg
jne
xor
add
dec
adc
addr16
out
sub
test
sbb
iret
cmp
jle
add
dec
imul
mov
xchg
les
int3
add
jle
movsb
push
lock
lahf
and
lcall
pushf
jb
inc
xchg
or
outsb
sub
fisttpll
jg
lcall
imul
mov
pop
fsubl
push
ljmp
mov
push
aaa
daa
inc
xchg
add
mov
xchg
cmp
fimuls
or
and
icebp
jmp
lock
cs
insb
imul
lea
mov
gs
sbb
testb
inc
scas
inc
mov
pop
test
dec
enter
pusha
fildl
mov
pop
cli
aas
cli
cmp
shld
inc
fisttpll
jne
in
stos
pop
lock
jecxz
inc
or
out
jne
dec
cmp
cmp
arpl
inc
fcomip
cmp
enter
data16
movsb
popf
push
sbb
xchg
mov
leave
jns
xchg
mov
imul
test
or
cld
mov
in
int
or
psubw
pusha
fisubs
inc
in
xchg
push
loop
sub
lret
sub
jns
xor
in
inc
xor
mov
fcos
add
cmc
mov
xor
mov
int3
fs
pop
mov
es
push
xor
scas
cmp
bound
or
xchg
or
sbbl
pop
push
lods
jmp
sbb
push
adc
adc
es
sbb
jbe
push
sub
cld
lcall
add
les
mov
sub
in
or
adc
jae
arpl
push
sub
mov
mov
cwtl
repz
mov
xor
js
push
arpl
push
sub
mov
mov
cwtl
repz
mov
xor
push
jae
jecxz
push
sub
xor
mov
cwtl
repz
jecxz
rcrl
and
adc
sbb
arpl
push
test
fdivs
call
sbb
sub
cmp
call
push
fsubr
lea
outsb
lods
sbb
sarb
sub
sbb
in
jo
inc
int3
push
fsubl
lods
xor
insb
lock
inc
rcrb
mov
orb
pusha
dec
jo
inc
push
push
stos
and
scas
loopne
rcrl
sub
fistps
jle
js
test
mov
jmp
psubsb
out
orl
mov
hlt
cmc
xor
repz
push
sub
sti
aas
sbb
scas
and
mov
in
arpl
mov
or
cmp
push
xor
sub
inc
inc
inc
mov
loopne
movsb
insb
rorb
lock
shl
nop
jo
sub
push
faddl
mov
adc
insl
jmp
mov
mov
rep
pusha
lahf
cmp
and
xor
or
sub
lods
lods
repz
dec
sub
pop
xchg
xchg
popf
adc
or
jecxz
dec
cld
adc
aas
lcall
vmovups
pusha
jo
inc
mov
xor
insb
lock
dec
shlb
adc
cs
add
sub
inc
shll
fneni(8087
das
xchg
or
jmp
mov
jecxz
jne
stos
adc
mov
jne
js
inc
scas
test
shrb
fidivrs
imul
sbb
mov
xor
insb
lock
dec
rcrb
mov
orb
pusha
in
jo
inc
int3
push
fsubl
lods
xor
insb
lock
dec
rcrb
mov
orb
pusha
in
push
stos
fnsave
xor
xchg
and
push
ret
fucomp
enter
xchg
fwait
mov
mov
das
xchg
pop
mov
add
sub
xorl
cmp
push
mov
popf
imul
pop
adcb
pushf
rcrl
aad
jne
sbb
cmp
shll
mov
push
dec
leave
push
sbb
push
fucomip
and
cwtl
cmpsb
pop
andl
adc
xor
sub
adc
pop
fucomip
mov
fistps
shll
int
mov
push
xchg
outsb
or
dec
call
mov
andb
out
mov
ret
pop
inc
sbbb
add
adc
scas
cmpsl
mov
inc
outsl
add
jmp
xchg
push
insb
mov
and
sbbb
push
xorb
and
pop
inc
push
rcrl
fldcw
decl
adc
pop
xchg
jge
lea
mov
out
sbb
sbb
lds
test
shlb
push
in
sub
push
push
jno
dec
sbb
push
xor
xchg
sub
je
stos
push
lds
inc
test
push
insl
leave
mov
es
imul
jg
lods
cmc
fcmovnb
lahf
inc
imul
popw
repnz
adc
add
or
iret
mov
sahf
rclb
dec
cltd
and
push
out
je
xorl
sub
push
jo
jae
and
arpl
push
inc
or
stc
cmp
stc
inc
xchg
outsl
fsqrt
std
sahf
adc
jne
inc
in
es
push
fdivrl
jp
cmp
in
jg
mov
aad
dec
clc
lahf
repz
ljmp
std
cmp
iret
in
mov
dec
std
sbb
jo
cmp
loop
push
arpl
cmpsb
inc
pusha
in
aam
shll
test
std
jae
add
mov
add
jb
jne
mov
outsl
divb
pop
or
sbb
mov
jmp
clc
out
out
pushf
js
mov
fstl
pop
inc
insl
cmpsb
les
aad
xor
add
fstpt
jg
sarb
leave
frndint
inc
pusha
push
inc
jl
add
xchg
inc
fidivs
sbb
repz
fs
out
movsb
je
mov
mov
ljmp
je
dec
mov
cwtl
ret
test
sub
pop
cmp
cmpb
loopne
or
lods
sbb
inc
stos
inc
push
rol
subl
mov
sti
dec
ret
arpl
scas
dec
and
out
idivb
sahf
sbb
inc
cld
dec
mov
aaa
adc
cmpsl
mov
jp
in
jo
stos
enter
jmp
pop
mov
mov
ficompl
sbb
push
lods
jl
cmpsl
out
mov
mov
das
xor
cmp
out
movsb
int3
adc
add
lods
ljmp
loop
xchg
cmp
scas
das
dec
xchg
in
in
mov
ss
dec
shrb
cltd
sbb
sbb
inc
outsb
das
add
mov
cli
cmp
icebp
inc
movsl
push
ret
mov
push
shll
cli
xor
das
xchg
scas
fadds
cmp
int
or
mov
sub
daa
add
mov
loop
or
xchg
xor
mov
or
int3
adc
mov
fucomip
imul
push
or
shlb
popf
clc
adc
ret
testb
pop
cmc
in
addl
or
cmp
jb
and
xlat
inc
jno
loope
scas
stos
xchg
outsb
test
imul
xchg
inc
movsl
mov
out
mov
mov
cmp
xchg
test
xchg
js
int
mov
popf
rol
mov
sub
mov
adc
shrd
loop
mov
xchg
int3
outsl
cmpsl
sub
shl
sub
add
mov
jne
loope
inc
ss
mov
repz
add
fistps
out
or
mov
mov
xchg
imul
nop
jl
test
cltd
pop
sub
push
in
movsl
test
outsl
xchg
sbb
ljmp
cli
test
pop
pop
inc
lea
cmpsl
cmp
in
movsb
xor
pop
ja
ss
lock
dec
test
xlat
mov
idivb
lock
arpl
aaa
in
lds
mov
enter
in
addl
mull
sub
dec
dec
test
cmpl
lock
push
fisttpll
jge
mov
mov
add
push
lods
lret
push
inc
xor
mov
cmp
imul
push
mov
mov
inc
inc
fcom
test
js
movsl
shr
insb
add
push
loope
push
ljmp
cld
es
fadd
lock
push
out
pop
pop
inc
or
pushf
fistl
nop
int3
pop
and
lods
xchg
jbe
adc
bswap
insl
xchg
add
fucomp
and
mov
es
hlt
fisubs
fldenv
xor
jbe
adc
or
popa
es
scas
ja
mov
xchg
cmp
jae
add
gs
mov
aad
inc
enter
inc
js
add
outsb
pop
push
in
out
and
rorl
mov
sbbb
jl
xchg
and
cmp
mov
phsubd
mov
std
mov
mov
std
aaa
rcrb
data16
inc
sub
movsl
xor
jae
inc
js
icebp
outsl
lods
fnsave
popf
jecxz
ds
in
pop
insb
mov
mov
or
mov
inc
jge
sbb
jne
or
enter
sub
fcoml
fiaddl
aam
add
movsl
mov
xor
notb
push
mov
push
push
xchg
jmp
adc
test
into
mov
cli
popa
sbbb
mov
shrl
push
sub
mov
shl
jecxz
setle
out
inc
ficoml
xor
push
jge
fdivl
mov
movsb
aaa
dec
mov
lret
jg
inc
loopne
sub
sahf
idivb
insb
add
je
cmp
sarl
cltd
mul
cmp
ss
imulb
inc
mov
rorl
push
mov
cmp
jae
jo
scas
and
xchg
mov
jmp
jae
mov
mov
xor
popa
jne
push
cmp
insl
enter
stos
cmp
jmp
in
test
cmpsl
pop
fs
xchg
lds
push
icebp
sbb
in
mov
loope
xchg
cli
inc
cmc
jmp
add
ljmp
pushf
add
xor
xchg
scas
ds
lahf
xlat
cmp
add
push
out
stos
outsl
or
or
xchg
or
test
dec
out
and
ds
jnp
popf
das
arpl
adc
push
sub
ror
aad
nop
jp
xchg
scas
popf
add
and
mov
mov
dec
ss
or
int
outsb
dec
jo
shll
popf
dec
movsb
xor
pop
test
repz
inc
push
or
lods
mov
mov
add
inc
pop
enter
mov
jmp
loope
mov
dec
js
mov
aas
fsubr
stc
enter
pop
daa
inc
push
gs
xchg
fdivrl
and
scas
test
cmp
dec
push
add
pop
test
push
or
andl
cmp
and
and
adc
in
cmp
out
cmp
adc
movsb
das
testl
loopne
inc
add
idivl
inc
out
imul
ret
xchg
stc
repz
inc
push
xchg
push
jae
lret
mov
fs
jge
scas
push
outsb
mov
mov
jno
repnz
cmpsb
lret
adc
cwtl
aam
ja
jge
popf
add
pop
test
outsb
mov
in
mov
addb
sarl
sub
inc
out
cmp
pop
sub
pop
mov
das
mov
cmp
out
pop
mov
push
imul
xorl
sbb
fcoml
pop
outsl
mov
mov
shlb
or
in
mov
mov
cmp
push
in
pop
xchg
incl
rcll
test
ret
jge
push
xchg
std
aaa
sbb
fmull
hlt
cmp
mov
or
nop
cmp
cmp
or
not
mov
lahf
stos
das
int3
out
adc
inc
mov
nop
xor
cwtl
xchg
sbb
jns
xlat
and
xchg
mov
mov
fs
mov
hlt
scas
sub
cld
jnp
popf
mov
loop
push
cmp
jno
pusha
pop
mov
xor
mov
sub
mov
loop
arpl
xor
pop
xchg
mov
int
adc
ds
mov
xchg
pop
or
and
test
sbb
mov
mov
fmuls
inc
cli
pop
and
mov
inc
and
mov
stos
inc
shl
sub
shll
sbb
inc
mov
inc
sub
shlb
mov
sti
inc
jmp
movsb
imul
ds
push
and
ficoml
mov
lods
push
cmpb
arpl
push
jmp
addr16
push
dec
push
dec
adc
lcall
fcompl
adc
aad
fwait
dec
cli
les
jmp
mov
pop
fistl
rorl
cld
pop
into
adc
mov
adc
ret
out
push
push
inc
pop
leave
in
nop
inc
add
out
in
clc
sub
push
or
iret
mov
fsts
sub
gs
pop
push
lods
sti
movsl
push
jmp
xor
test
in
fldenv
push
loope
ds
pop
fs
daa
les
mov
adc
mov
imul
and
inc
sub
or
mov
push
jecxz
roll
roll
cmp
pop
sbb
xor
repnz
or
adc
adc
out
movsb
lods
popa
jle
mov
arpl
jecxz
mov
xchg
sahf
leave
pop
loope
adc
mov
pop
dec
cmp
jns
jmp
cmc
dec
jmp
xchg
mov
stos
or
jecxz
mov
jmp
xchg
sbb
pop
xor
imul
adc
rcrl
test
pop
xor
xchg
rorb
sbb
jg
mov
inc
sbb
fnstenv
pop
mov
pop
inc
sub
rorb
test
push
pop
or
and
xchg
stos
jmp
xor
mov
repz
mov
in
rolb
loope
lods
mov
orl
or
rol
aas
daa
dec
cmp
mov
sti
lcall
lcall
cmp
adc
mov
sbb
jge
sub
cmp
or
sarb
jecxz
xor
xor
push
mov
gs
mov
cmp
test
push
push
xchg
in
mov
outsl
lret
pushf
loope
pop
aam
cli
mov
mov
in
cmpsb
out
ja
rorl
add
adc
cltd
dec
dec
adc
test
std
or
lcall
cmp
adc
adc
or
mov
inc
std
and
push
mov
mov
and
xchg
dec
adc
repz
out
stc
outsb
stos
leave
arpl
mov
lahf
nop
lret
sbb
ret
shll
daa
ret
fcom
add
in
mov
lcall
in
add
iret
cmp
dec
inc
sbb
arpl
ja
jnp
movsb
sub
pop
outsl
adc
popf
lcall
test
jo
jecxz
xor
jae
mov
sbb
xchg
dec
fs
mov
jge
lret
aad
sbb
push
pushf
cmc
and
nop
mov
into
arpl
clc
fadd
mov
stos
jbe
ror
mov
jns
js
mov
fildll
sub
and
and
cltd
pop
fucom
int3
sub
fsubs
dec
cli
je
jnp
mov
pop
cmp
js
and
cwtl
ljmp
push
subl
mov
mov
cwtl
or
adc
jmp
mov
or
xchg
lods
mov
mov
xchg
stos
fwait
cmp
adc
or
fldcw
sbb
mov
popf
xchg
cli
addl
xchg
fcmovnb
popf
jmp
cmp
popa
popa
push
std
sub
je
xlat
es
or
inc
jo
ds
adc
imul
lahf
add
mov
or
mov
es
rcrb
pop
fidivs
mov
out
icebp
fidivrs
mov
pushf
lcall
add
push
sub
rolb
lret
gs
test
dec
ja
jge
movsb
sbb
push
dec
adc
enter
mov
nop
cmp
mov
pop
xor
fnstenv
jecxz
rorb
sbb
sbb
mov
cli
scas
lods
push
lret
mov
xchg
out
insb
popa
pop
jmp
jb
fs
xchg
add
fists
sar
pusha
and
pop
push
mov
mov
dec
bound
aaa
rorl
add
daa
mov
inc
lock
fidivs
push
jge
push
popa
mov
cmpsl
cmc
mov
insb
add
jno
das
fildl
pusha
inc
mov
push
sub
insl
pop
inc
adc
jae
cmpsb
sbbl
outsl
movsl
cmpsl
clc
xor
shr
sbb
pop
xor
pusha
aad
jo
loope
inc
fsts
mov
out
adc
sbb
add
dec
adc
mov
lods
pusha
js
cs
mov
gs
jno
fistl
lds
pushf
mov
xchg
jb
int
push
out
pop
out
mov
pop
das
data16
pusha
add
dec
out
add
cmp
nop
push
mov
iret
bound
loope
fists
pop
out
fidivs
or
fisubrs
aad
or
add
sbb
fyl2xp1
fldl
pop
ss
scas
xor
in
test
dec
pop
jnp
jae
aaa
push
jge
lds
mov
jmp
movsl
mov
cmpl
scas
xlat
cmp
popa
nop
popa
outsb
add
insl
pusha
iret
pop
aad
jmp
stos
pop
in
arpl
or
mov
cmpsl
scas
lods
lock
xlat
push
mov
lahf
xchg
andl
mov
ret
and
mov
cwtl
stos
sbbl
lret
decl
cmp
jns
or
stc
mov
stos
mov
aam
insb
test
lret
sbb
jmp
pop
xchg
lahf
jl
mov
pop
or
popa
aas
int3
cmpsb
orps
ja
leave
mov
ret
push
int
adc
xchg
and
ljmp
popf
mov
int
pop
div
roll
shlb
xchg
cmp
push
lods
lods
mov
jg
hlt
iret
outsb
jl
xor
jo
movsl
adc
insl
cwtl
dec
ret
pushf
sub
mov
xchg
arpl
mov
loopne
cltd
lods
cmp
sub
push
and
fwait
push
daa
pop
sbb
pop
aad
in
xlat
jmp
mov
push
sub
mov
xor
dec
dec
rcll
insb
test
cmp
cmpsb
aaa
das
jb
or
dec
repz
insl
aas
aas
xchg
out
dec
mov
pushf
scas
cmpb
cwtl
fldl
dec
adc
das
call
inc
mov
rclb
mov
jae
pop
push
adc
mov
cmc
imul
int3
adc
dec
subl
xor
push
and
sbb
jmp
rclb
add
out
daa
cmc
out
int
aaa
fidivrl
jge
mov
adc
push
lods
movsb
fnsave
jle
fwait
push
sar
bound
sbb
ss
push
and
fwait
movsb
inc
ja
aad
xor
iret
int3
lret
xor
fs
dec
es
cmp
addl
mov
aaa
data16
addr16
or
in
jb
xorl
fisubrs
call
popf
add
lods
and
jle
or
inc
jle
adc
loope
jge
movsl
std
roll
dec
dec
xchg
dec
pusha
xchg
test
movsb
insl
pop
inc
jp
cmp
inc
jns
or
mov
bound
pop
movsl
xor
pop
hlt
jmp
sbb
popa
repz
ret
push
xchg
adc
pop
jb
push
cltd
pushf
xchg
sbb
mov
sub
xchg
inc
lea
ud2
bound
cmc
cmp
cmp
xor
fmul
jnp
andl
or
les
loope
xchg
pop
add
mov
fistl
ljmp
mov
dec
push
mov
jmp
cmpsb
iret
cli
dec
jl
xlat
fsubrs
cwtl
mov
jmp
je
lds
jle
test
xchg
mov
loop
pop
leave
repz
int
lret
push
push
fs
add
sub
std
clc
repnz
movsl
mov
insb
jnp
lods
rcll
mov
orb
sarb
or
jg
pop
repz
adc
pop
dec
jb
stc
and
cmp
pop
jnp
xchg
pop
xlat
cltd
xchg
notl
xchg
es
ja
jne
ljmp
push
test
icebp
jbe
cmp
mov
test
imul
aad
adc
popf
ret
or
sub
aad
xchg
xchg
dec
es
dec
clc
imull
dec
in
jo
xchg
adc
sahf
daa
shll
rclb
fwait
mov
scas
shr
lods
pop
xchg
into
je
pop
xor
jnp
mov
push
mov
inc
mov
push
pop
je
ja
mov
adc
mov
ja
idivl
ss
mov
fisubrs
test
int
popa
dec
scas
test
cmp
and
jg
pusha
push
int3
test
addb
cmpsl
xchg
jle
ja
adc
ds
adc
or
mov
aas
sub
inc
pop
jge
add
mov
rolb
aam
push
scas
loopne
outsb
pop
outsb
divb
mov
adc
xor
ficomps
fsub
sahf
sbb
cmp
stc
jne
push
lds
fistpll
dec
outsb
gs
int
fdivrs
cltd
dec
mov
neg
bound
or
cmc
outsl
das
roll
icebp
in
lea
rclb
mov
xchg
jg
sub
out
int
push
in
inc
inc
mov
in
dec
sbb
pop
into
lock
or
jne
stos
ljmp
mov
push
rcrl
fisubl
subps
int3
jno
jns
mov
leave
dec
fs
xchg
xchg
adc
test
xor
or
dec
mov
out
cli
lods
mov
xor
addr16
jo
rcrl
cld
pusha
add
cwtl
outsl
pop
ret
notb
mov
or
jge
mov
jge
addr16
das
fs
mov
mov
shl
pop
stc
or
pop
add
mov
inc
cli
push
lods
sub
outsb
lods
jb
mov
outsl
clc
es
xchg
and
xor
test
test
mov
sahf
push
mov
sti
aad
stos
imull
inc
mov
add
int
sub
push
arpl
jnp
push
movsl
lea
mov
push
inc
arpl
test
jno
loop
and
cmp
mov
shlb
mov
push
mov
cmc
xor
pop
lock
sbb
es
or
bound
xchg
imul
inc
lods
or
jcxz
out
fdivrs
mov
sub
roll
call
out
lcall
int
mov
sub
add
xor
test
jne
imul
sub
pop
cmp
popl
adcl
adc
jmp
mov
je
add
cld
pop
mov
mov
inc
xor
jb
nop
pop
or
lret
mov
or
lcall
insl
sbb
pop
jmp
sub
add
sbb
pop
dec
nop
mov
loopne
sub
adc
jecxz
mov
dec
xor
mov
cmpl
pusha
add
xchg
aam
mov
dec
fistpll
dec
mov
ret
adc
test
imul
sub
into
fmuls
je
mov
loopne
iret
pop
sbb
shl
test
dec
adc
imul
xor
push
pop
cmp
jle
add
add
cmpsb
cmpsl
push
outsb
fisttpll
sbb
out
adc
push
add
pop
pop
aad
mov
inc
jo
je
cs
testl
call
cmp
sub
mov
xchg
cli
movsl
push
pop
xlat
imulb
inc
push
and
push
lods
xchg
mov
shll
mov
xchg
outsb
in
mov
ret
test
sub
dec
pop
mov
inc
repz
cld
pushf
out
loopne
sahf
jg
dec
adc
and
leave
negl
in
dec
jle
mov
mov
mov
int3
xor
fcoms
fcomps
sbb
leave
xor
lea
cmp
leave
aam
mov
cmp
in
pop
add
add
xchg
fs
cmc
fistpl
add
jmp
jg
lcall
pop
ds
inc
fimuls
pop
xor
les
lret
scas
mov
enter
jl
and
aam
aam
pusha
or
or
xchg
rcrb
pusha
adc
ds
je
inc
leave
push
fsubl
lods
xor
insb
lock
dec
rcrb
mov
orb
pusha
in
jo
inc
int3
push
fsubl
lods
xor
insb
lock
dec
rcrb
mov
orb
pusha
call
push
fsubs
mov
js
dec
rclb
sub
clc
pusha
or
inc
sub
and
pop
loopne
lock
push
shrb
rclb
lock
fs
jnp
js
out
fsubs
lahf
pop
jno
pop
mov
add
push
add
add
push
add
add
outsb
add
xchg
add
insl
add
add
movl
arpl
jle
jo
je
lcall
add
add
bound
add
add
dec
add
add
add
bound
add
pop
add
jle
xchg
add
loope
leave
add
add
add
add
testb
add
add
add
aad
jle
sub
pusha
add
add
add
mov
icebp
add
add
add
add
push
add
add
add
add
add
add
cmp
popl
les
add
add
push
lea
leave
add
inc
add
add
add
add
add
add
add
add
or
aad
dec
add
add
add
add
push
add
add
sub
js
mov
add
add
sbb
out
and
add
add
add
add
add
inc
add
add
add
add
outsl
add
add
add
add
push
add
add
or
or
pop
add
mov
cmp
fiadds
filds
scas
add
add
add
sub
sub
mov
insb
add
add
dec
add
add
add
mov
repz
add
add
add
add
add
xlat
add
add
mov
add
add
adc
add
add
push
add
add
add
bound
add
add
clc
add
inc
add
add
pop
add
push
add
add
add
fiadds
sbb
or
dec
add
add
add
out
add
ljmp
add
push
add
add
add
addl
add
add
push
add
add
add
add
add
push
add
add
add
dec
add
add
add
add
add
add
add
fiadds
jle
popa
add
add
add
add
mov
fildl
mov
add
add
add
in
js
cmp
aas
add
addr16
add
add
xor
or
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
sbb
outsb
add
add
cmp
scas
add
test
repz
add
adc
add
add
incl
out
add
add
xchg
add
pop
add
add
add
add
add
insl
add
sub
mov
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
xor
dec
add
add
add
das
add
add
add
add
add
add
or
dec
add
add
push
sbb
in
lds
repz
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
sbb
in
lds
aaa
add
add
inc
add
aad
inc
add
add
add
mov
loopne
add
inc
push
ret
cmp
sti
sbb
inc
jp
lret
xchg
pop
inc
repz
movsl
sbbl
cmp
clc
sub
xchg
cmp
sub
push
fcmove
shrl
push
ljmp
push
dec
scas
inc
push
xor
inc
fbld
mov
inc
push
inc
or
lcall
imull
jbe
lods
inc
pop
jmp
fnstsw
mov
mov
loopne
add
sbb
cltd
out
in
push
stos
daa
and
jb
add
jp
push
push
inc
stc
lea
fisubl
icebp
dec
mov
mov
les
jns
loop
cmp
mov
imul
leave
movsl
rcrb
stos
xchg
out
xor
shlb
je
enter
and
ficompl
psrlq
arpl
call
outsb
push
mov
cs
xor
jge
xchg
push
or
mov
jae
and
xor
xchg
fwait
stos
xor
cmp
scas
adc
or
ret
fsubr
test
sub
lret
add
cmp
movsl
mov
ret
sub
fldl
shlb
or
es
pop
aaa
adc
mov
inc
jecxz
xor
cmp
cmpsl
pop
cmc
fistl
leave
mov
dec
outsl
mov
js
bound
stos
sub
mov
jp
lcall
push
pop
test
mov
aas
sbb
jg
cmpl
add
sbb
insl
adc
add
lret
data16
ljmp
rcl
mov
icebp
rorl
jg
cmp
cmpsl
push
pop
jmp
xchg
cmp
and
sbb
push
pushl
pop
notb
movsb
pushf
sbb
pushf
jne
mov
sbb
ljmp
inc
test
fildl
or
mov
insb
xchg
and
data16
ret
dec
incb
mov
fldcw
xlat
adc
leave
mov
movsb
ds
fs
out
pushl
sub
popa
cmp
push
cmp
out
mov
sub
mov
mov
in
aaa
loop
daa
subl
arpl
repnz
inc
mov
mov
je
push
mov
and
stc
mov
xchg
xchg
dec
lods
iret
shrl
mov
mov
stos
mov
mov
pop
sub
mov
mov
shr
iret
cmp
loope
cmp
fnstenv
fucomip
sbb
aad
or
lret
ret
lret
cmp
sub
jns
js
cmc
hlt
testb
fdivr
jge
push
stc
push
ret
pop
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
