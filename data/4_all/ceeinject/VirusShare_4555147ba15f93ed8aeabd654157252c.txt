call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
js
imul
cmc
dec
cmp
in
icebp
and
inc
gs
xor
imul
cmc
dec
in
xchg
sub
sbb
jmp
mov
jp
add
ret
inc
cltd
vminpd
mov
lahf
mov
es
scas
push
rolb
insb
iret
inc
xlat
and
pop
andb
aas
mov
and
push
fdivr
test
stos
mov
pop
xchg
aam
scas
into
pop
adc
cmc
xchg
or
sbb
test
test
shrb
pop
lret
repnz
push
adc
cmp
lods
fsubr
ror
lret
call
push
cmc
mov
cmpsl
adc
cmpsl
pop
les
or
stos
jmp
pop
inc
xor
cli
lcall
sub
mov
rclb
push
incb
add
and
fiaddl
mov
rol
push
in
ds
enter
push
mov
jge
adc
cli
fwait
xor
cmp
out
fists
lods
and
lods
gs
sub
test
xchg
lds
mov
lret
push
loope
ljmp
mov
or
jp
jno
je
inc
ss
push
test
xchg
sub
push
cli
dec
mov
fistpl
pushf
xor
add
inc
les
push
lret
addl
cmp
sub
sti
push
jmp
gs
xor
imul
cmc
dec
in
xchg
sub
sti
push
jmp
gs
xor
int
cltd
push
mov
hlt
or
cmpsb
jne
test
sub
es
adc
stos
sub
test
scas
cltd
push
xchg
mov
mov
xlat
xchg
cmp
xor
jp
xchg
jle
shlb
or
jl
add
push
jns
xor
mov
or
in
daa
ss
cmp
jp
lods
lods
dec
pmovmskb
cwtl
fildll
sar
adc
stos
sub
aam
scas
in
push
sbb
outsl
jnp
xor
ljmp
mov
push
dec
pop
inc
push
push
jns
or
cld
mov
mov
mov
ja
int
cmp
pop
ss
ss
add
mov
and
pop
mov
sub
add
mov
push
lahf
push
in
arpl
and
rorb
sub
test
push
cmp
sub
jmp
test
cmpl
sub
xor
inc
or
add
mov
inc
add
clc
cmp
jl
in
sbb
jb
fildll
ds
adc
push
rcll
pop
mov
mov
rorl
fcoml
jge
insl
ror
adc
rorl
lcall
xchg
cld
mov
xor
dec
bnd
push
fdivrs
push
xor
cli
push
sbb
sbb
cmpsl
jno
popf
or
sub
and
adc
fs
in
jle
cmp
inc
arpl
aam
jnp
cmpsl
movsb
lock
inc
test
cltd
and
pop
pop
fdivrs
pop
out
xchg
pop
out
ret
enter
cmp
or
adcb
sahf
jmp
and
cld
pop
jecxz
repnz
decb
lahf
fimull
out
push
mov
rcrb
push
je
mov
sbb
sahf
push
shl
jae
test
dec
sub
in
pusha
xlat
sbb
cmpsl
je
pop
dec
lock
outsl
adc
xor
ds
push
dec
div
js
imul
push
sarl
rcll
in
ror
andl
scas
scas
fists
pop
pop
in
test
dec
aaa
jecxz
inc
push
cmp
mov
aad
es
cmpb
in
xor
fsubp
into
cmp
movsl
mov
pop
js
or
or
pop
loopne
aad
adc
add
mov
bound
xor
ret
testb
mov
int3
int3
sub
ja
cmp
and
pop
pop
push
fnstcw
stos
in
pop
add
lock
and
je
sub
idiv
repnz
push
xchg
xchg
xrelease
jnp
in
xchg
pop
push
vmaxpd
push
clc
leave
pop
sbb
fwait
jae
loope
out
daa
fisttps
add
je
mov
xlat
movsl
lock
and
int
imul
push
or
mov
sub
mov
mov
jmp
lock
mov
sub
sub
adc
fwait
into
mov
loopne
sbb
jp
popa
jl
sub
mov
xor
lret
sbb
and
adc
outsl
cmp
push
push
sbb
out
gs
push
leave
je
mov
mov
rolb
fimull
mov
outsl
cmpsl
cmp
mov
mov
pop
shlb
push
js
ja
add
fwait
cmp
add
xchg
movsl
mov
test
xchg
mov
or
jnp
aas
std
push
xchg
outsb
jns
mov
and
inc
fs
inc
lcall
and
pusha
test
sti
mov
ret
and
sti
mov
cmpsl
push
or
jns
pop
or
dec
jno
in
or
lods
pop
jmp
pop
testl
test
mov
mov
pop
mov
stos
push
sarb
in
imul
into
je
jb
push
inc
inc
pushf
sbb
pop
mov
or
mov
test
test
xor
cmp
neg
aam
dec
out
das
xor
add
jl
push
add
push
jne
mov
inc
fwait
sbb
mov
psubw
push
pop
test
out
andl
aas
rep
mov
xor
popa
dec
negl
lcall
orb
ljmp
pop
daa
lods
sub
lcall
xchg
ds
xchg
adc
test
sbb
adcb
icebp
or
cmp
push
sbb
push
push
adc
jne
dec
xchg
pop
enter
push
fistps
lcall
and
test
jmp
add
jge
les
mov
inc
shrl
mov
adc
mov
xorl
cmp
int
pushl
es
aad
cltd
push
add
mov
dec
idivb
lods
sbb
loop
fisubrl
adc
out
and
mov
outsb
inc
push
pop
sti
add
dec
mov
cli
mov
popf
sub
test
in
pop
xor
cli
mov
and
popf
lock
xchg
negl
xchg
call
stos
bound
cmpsb
sbb
out
fs
int
mov
lret
mov
notb
lret
lret
or
in
fldt
stc
icebp
inc
pop
popa
jge
add
daa
dec
into
fnstsw
dec
xchg
sahf
and
sbb
sarl
push
mov
inc
jmp
daa
cmpl
sbb
inc
mov
adcb
mov
outsl
stc
dec
jae
xchg
push
loope
jecxz
mov
jne
inc
or
sbb
pop
out
add
inc
in
xor
sub
ja
push
cltd
push
or
in
xor
shrl
dec
sub
cli
inc
dec
sub
inc
jle
cmpsl
jmp
xor
push
adc
out
das
clc
hlt
sbb
fs
sti
sub
pusha
cmp
inc
mov
jns
xor
xchg
stos
or
jl
popa
adc
je
mov
dec
pushf
int
ret
imul
mov
gs
fsubrl
sbb
mov
push
daa
fbstp
or
sahf
ja
sub
lods
jmp
outsl
gs
imul
testb
mov
test
pusha
push
mov
mov
pop
in
es
push
das
push
inc
pop
sarb
imul
cmp
mov
cmp
rorb
fwait
jp
xlat
mov
cli
mov
dec
lds
jnp
mov
mov
adc
or
dec
pushl
jne
sarb
aas
roll
cld
int
inc
adc
loop
rcrb
or
in
add
scas
inc
mov
ret
mov
push
addb
movsb
sbb
stos
jecxz
cmp
stos
mov
fnstsw
cmp
ss
aaa
push
xchg
push
iret
aas
mov
xchg
pop
into
cmp
jp
push
cli
cwtl
jbe
mov
cltd
into
cmc
adc
or
enter
sub
push
cwtl
data16
clc
mov
ds
gs
adcl
adc
sbb
enter
xor
gs
loope
dec
fadd
loopne
dec
jmp
ror
std
fldt
dec
fsubrs
sub
jo
fadds
addl
jmp
sbb
sti
fwait
mov
cmpsl
les
jmp
rclb
cmp
rorl
jbe
je
shll
popf
lods
inc
test
or
loop
dec
push
add
mov
aaa
cmp
and
lret
push
inc
xor
adc
in
lods
aas
aad
cmp
bound
je
sti
lret
and
repnz
mov
mov
imul
xor
xor
mov
jle
enter
mov
sbb
fdivrp
jb
movsl
mov
lds
subl
imul
push
notb
cmpsl
sbb
mov
mov
lahf
ret
mov
sbbb
inc
cli
xor
fidivl
imul
xor
mov
xor
fists
inc
fwait
pop
pop
lcall
ds
test
add
sbb
test
inc
sub
data16
mov
mov
std
insl
fs
or
imul
fldcw
dec
sub
add
add
jmp
arpl
push
xchg
cli
pushf
mov
pushf
mov
fwait
mov
loope
pop
and
fiadds
addb
shrl
divb
dec
daa
push
jns
imul
scas
mov
cli
adc
mov
outsl
push
mov
sbb
pop
pop
and
je
repnz
xor
sti
js
jl
add
adc
inc
addr16
jae
out
cmp
aam
fs
stos
xor
mov
xchg
gs
jmp
dec
mov
cs
push
fidivl
cmp
into
shlb
sub
ja
fdivrp
out
mov
gs
xchg
daa
cs
out
fdivs
and
insb
mov
pop
mov
mov
out
and
cmp
scas
mov
mov
jnp
xchg
jge
inc
cwtl
lret
and
xchg
in
das
xchg
int
das
mul
lahf
sahf
cmp
and
add
adc
daa
mov
jle
mov
aas
adc
add
cs
xchg
jnp
jp
jo
cltd
fs
lock
sbb
mov
cmp
fbstp
mov
mov
add
in
push
mov
xchg
mov
cmpsl
cltd
enter
sbb
push
adc
addb
scas
xchg
pop
addr16
es
cld
addr16
loopne
dec
xchg
stos
and
and
or
inc
mov
push
out
jmp
dec
pop
mov
es
fildll
push
jl
pop
mov
pop
fs
clc
jl
mov
out
arpl
ficoml
ljmp
xor
cmp
xchg
lea
and
dec
sub
shl
stc
test
fs
dec
adc
inc
or
bound
in
shrb
push
in
popf
xor
jmp
movsl
jg
pop
jno
adc
mov
or
cmpl
rol
add
loop
inc
jne
pop
jl
rcr
jnp
lock
jp
repnz
std
daa
repnz
imul
fbld
xor
icebp
or
jge
pushf
or
aaa
push
in
andb
call
insl
mov
je
pusha
pop
push
xchg
cld
and
lahf
cwtl
pop
cmc
mov
out
sbb
dec
push
add
xchg
inc
xor
inc
adc
ret
iret
mov
push
les
jl
pop
jmp
xor
scas
sbb
pop
lcall
outsb
push
inc
cmp
inc
cmpb
pop
rcrl
xchg
iret
sbb
aas
sub
int
or
mull
mov
mov
clc
stc
fdivr
push
lea
jle
inc
cmp
test
jg
test
call
inc
lahf
aas
xchg
mov
xchg
add
shl
mov
in
or
and
jbe
adc
adc
rcll
xor
mov
test
ds
in
je
mov
fwait
js
mov
jbe
push
sbb
push
sar
add
push
popf
out
push
sbb
xchg
jp
jne
mov
ret
mov
fcomps
xchg
bound
jle
sarl
dec
dec
fisttps
cmpsb
jno
inc
push
xor
cltd
lcall
stc
and
shl
xor
ret
subb
sub
ljmp
or
jnp
data16
pop
inc
inc
push
addl
push
or
pop
sti
and
xchg
pop
dec
mov
cwtl
sbb
notl
in
adc
pushf
enter
shlb
aad
inc
hlt
aaa
fnstsw
inc
fisubrs
xor
pop
or
ud0
pop
ss
add
jae
ss
cwtl
jo
pop
loope
mov
or
scas
pop
aas
add
mov
inc
imul
pop
aam
sbb
mov
cmp
cmpsl
not
data16
xchg
inc
cmp
leave
shl
xor
sahf
xchg
pop
in
push
jns
cmc
addr16
outsb
ficoml
mov
fldcw
ret
jbe
sbb
dec
cltd
xchg
sbbb
push
sbb
xchg
jb
mov
repz
mov
daa
ja
movsb
ljmp
push
test
mov
stos
sub
fwait
movsl
test
dec
cmp
out
lret
xchg
jne
das
mov
fld
clc
and
fdivrl
insl
jbe
inc
mov
add
je
stos
push
aam
inc
jg
xchg
mov
fst
mov
cmpsl
push
dec
addr16
ret
mov
mov
arpl
cwtl
inc
outsb
divl
mov
push
nop
cwtl
xor
test
and
mov
sub
adc
lret
shrb
cmp
push
insb
arpl
adc
and
jmp
jge
sbbb
repz
cltd
cltd
repnz
in
fistps
xchg
hlt
pushf
fwait
test
dec
jle
mov
pop
sbb
lock
ret
jb
jg
or
outsb
repnz
lret
mov
xlat
dec
aaa
outsl
lret
sar
adc
adc
rolb
outsb
push
jo
scas
negb
xor
jl
add
mov
dec
mov
shlb
xor
int3
sbb
pop
xchg
out
sti
push
pop
sub
lods
scas
cmp
push
inc
stos
lcall
fmull
imul
push
movsb
ret
cmp
adc
ljmp
xchg
sahf
movsl
xchg
popf
sbb
jecxz
js
insb
sub
dec
inc
xor
inc
push
movsl
push
js
pop
fildl
sbb
inc
jge
cmc
pop
adc
jge
xchg
sub
fwait
inc
xchg
inc
or
pop
pop
and
cltd
addr16
mov
and
mov
and
cmp
jnp
lea
xchg
imul
lcall
cs
push
aam
mov
mov
fwait
jo
test
jg
pusha
mov
aam
in
mov
mov
repnz
pop
mov
pop
mov
mov
pop
push
clc
fsubl
loope
movsb
fsubrs
insb
mov
mov
mov
in
cld
inc
jnp
iret
lds
push
jns
jbe
faddl
mov
shl
jge
sub
jmp
lods
xchg
push
mov
pop
pop
sub
fsubrs
cmp
imul
fdiv
gs
mov
aas
test
and
cmc
xchg
btc
and
dec
lods
or
sub
fbld
jns
sarb
das
fldenv
int
dec
inc
or
dec
pop
lret
pop
outsb
jmp
dec
aam
push
lods
push
fwait
xlat
jge
push
dec
hlt
push
rol
inc
push
icebp
cmp
push
pusha
jne
pop
mov
inc
lret
jp
sub
leave
adc
sbb
cli
test
cmp
gs
ret
cld
dec
sbb
shll
idivl
jo
in
push
incl
mov
jo
cmp
fwait
sub
cmpsb
fisttps
int3
decl
mov
pop
sub
in
sub
inc
mov
mov
in
outsb
lahf
mov
or
dec
imul
xor
inc
rcr
fistpll
scas
stos
fwait
and
das
sub
fsubl
cmp
and
xor
and
sub
shr
adc
jnp
jb
filds
jge
mov
bnd
or
sub
push
dec
or
mov
add
dec
add
shl
jnp
inc
inc
mov
push
jge
xor
sub
sbb
iret
and
jnp
fisubl
cld
movsb
xchg
sbb
lods
mov
popa
jnp
sub
imul
into
out
cld
cli
jae
or
add
imul
cwtd
jmp
adc
loope
popa
mov
stos
and
xchg
mov
dec
test
pop
or
mov
aaa
cmp
das
gs
xchg
and
aad
fbld
arpl
dec
push
pop
aad
lcall
cvtpi2ps
jb
xchg
imul
dec
mov
inc
hlt
inc
push
fs
mov
je
sbb
cmp
xchg
jl
sarb
jg
cld
sti
mov
cmp
mov
addr16
iret
lods
xchg
adc
je
mov
xchg
xor
jmp
out
or
mov
xchg
js
mov
add
cmc
loop
sub
es
push
sub
sub
lret
lahf
jns
dec
add
aas
lret
pop
movsl
mov
insb
mov
lret
push
sarb
cmp
inc
into
inc
popf
int
lahf
and
jge
ret
jle
pop
mov
ja
jne
push
mov
cmp
adc
pop
ret
cmp
sbb
adcb
jecxz
jno
xchg
sbb
dec
or
test
fsin
loope
test
sub
test
sub
mov
dec
cmp
xor
add
xchg
dec
ret
addb
imul
xchg
ds
repnz
mov
inc
inc
push
push
sarb
addr16
dec
loope
inc
ret
adc
xchg
lcall
loop
mov
ficoml
aas
ss
mov
or
jb
mov
scas
push
push
mov
adc
ud0
jbe
push
nop
std
cmp
xchg
sub
lret
pop
test
sar
je
cli
cmp
sub
in
das
in
out
popf
test
mov
fists
jmp
dec
and
push
scas
incl
sbb
inc
std
cli
pop
or
aad
and
mov
inc
pop
dec
add
xchg
mov
xor
or
ret
dec
test
ret
or
loope
mov
and
out
inc
xor
mov
pop
popf
pop
add
mull
scas
mov
pavgw
dec
arpl
sbb
inc
enter
sbb
loope
fists
jno
add
xchg
mov
mov
mov
dec
popa
loop
cmp
in
cmpsl
enter
and
and
push
rorl
mov
pop
shlb
jg
in
mov
add
jns
cmp
cmpsl
pop
add
sbb
outsl
int3
pop
dec
ds
out
xchg
scas
dec
ljmp
adc
jae
cli
sbb
or
mull
and
fsubs
int
pop
ficoms
dec
dec
imul
bound
pop
dec
mov
push
loope
inc
add
cmp
aas
dec
xor
sub
loop
icebp
jnp
adcl
and
lods
adc
xchg
cld
mov
fcoml
sbb
cmp
stos
idiv
mov
or
mov
pop
imul
mov
test
bound
adc
mov
inc
mov
and
sarl
sti
inc
jecxz
inc
xchg
add
push
ds
xchg
sub
mull
mov
dec
int
mov
inc
lods
ret
iret
les
push
mov
lcall
xlat
sbb
jnp
lret
xchg
pop
into
jmp
mov
inc
add
lea
sub
ffreep
inc
fucom
mov
sbb
dec
cmpsl
shl
les
outsl
push
shll
add
mov
or
pushf
and
jno
jb
fnsave
sub
push
mov
pushf
andb
xchg
jne
pop
fistps
dec
and
pmulhw
cs
ja
loop
mov
xor
outsb
jb
outsl
shlb
adc
cli
pop
repnz
cwtl
mov
add
adc
add
cltd
push
dec
mov
push
lods
popa
sub
les
daa
add
cmp
xchg
andl
rclb
stos
out
les
clc
xchg
scas
or
xchg
insl
adc
pop
push
not
repnz
fwait
xchg
sbb
or
fiaddl
fcoml
insb
dec
sbb
and
dec
in
xchg
arpl
mov
jo
pusha
xor
dec
adc
pop
cmc
cmpsb
jp
in
pop
cmpsb
rolb
push
movb
jnp
mov
jb
mov
jnp
shl
loop
in
in
mov
lahf
in
jbe
inc
hlt
mov
lds
or
pop
sahf
mov
inc
insb
add
int3
shlb
into
imul
xchg
xor
pop
leave
dec
inc
or
sub
and
mov
add
inc
ss
lock
outsl
out
fisubs
out
add
sbb
or
les
push
xchg
fsubrl
sbb
lock
scas
paddsb
lcall
push
mov
sub
pop
and
popa
outsl
ret
in
test
cmp
mov
xor
loope
dec
scas
xor
ret
outsl
movsb
cmp
fisttpll
mov
loop
fstp
loope
jnp
cmc
jp
pushf
in
out
inc
mov
mov
imul
mov
pop
cmp
and
dec
inc
subl
out
pop
lcall
enter
cmp
inc
xlat
push
test
fimull
inc
push
and
mov
mov
cmpb
xchg
sbb
mov
lds
dec
in
xchg
sub
sti
push
jmp
gs
xor
imul
cmc
dec
in
xchg
sub
sti
push
jmp
gs
xor
pop
lea
lea
stos
xchg
sub
sti
jmp
sub
gs
adc
aaa
lds
cmc
imul
xchg
cmp
sti
stos
adc
jno
lret
adc
popf
and
fs
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
rclb
xor
and
jmp
andb
or
mov
rorl
jge
insl
loope
adc
and
push
int
std
jno
adc
adc
sub
jge
insl
loope
or
cmp
dec
test
imul
aam
sahf
adc
fcompl
jno
push
fiaddl
cltd
mov
cs
push
int3
xor
or
push
pop
cwtl
xchg
adc
mov
and
mov
mov
cltd
outsb
lock
loope
pop
fdivs
loopne
int
popf
push
add
push
inc
aad
pop
xchg
repnz
je
js
icebp
xor
into
clc
jb
push
xor
add
pop
jg
dec
shrb
in
dec
inc
push
xchg
jo
inc
into
insl
push
and
movsl
or
insl
pop
jle
dec
sbb
mov
lea
leave
or
js
adc
in
cmc
jmp
dec
sub
and
repz
scas
push
lea
mov
push
mov
jno
js
xchg
lahf
cltd
in
xor
jge
or
out
adc
jae
push
ret
inc
mov
mov
add
decb
mov
les
and
or
add
dec
mov
lods
setno
dec
in
aam
mov
or
mov
fs
int
std
jno
popa
sbb
mov
mov
jge
insl
loope
adc
and
push
int
std
jno
popa
sbb
mov
mov
jge
insl
loope
adc
adc
fisubl
jle
or
leave
and
add
mov
jnp
popa
pop
cs
sub
scas
data16
pushf
clc
das
shll
pop
movsb
ffreep
mov
add
mov
jl
push
xor
push
add
sub
imul
xchg
sbb
cmp
idivl
sub
fsubrl
lret
addr16
adc
pop
stos
and
lea
test
inc
xchg
mov
xchg
aad
sbb
pop
out
pop
or
dec
push
lret
sbb
pop
std
push
out
scas
pusha
pop
inc
sub
pusha
pop
ss
cld
js
push
jp
jle
cmp
cmpl
cmc
mov
roll
xchg
lods
dec
xchg
ss
push
das
arpl
popf
push
jns,pt
ds
or
adc
aaa
js
das
push
stos
out
inc
sbb
aas
lcall
lock
hlt
in
inc
lret
dec
je
jb
out
sbb
mov
pop
in
outsl
fidivrl
mov
int
movsb
pop
mov
and
dec
inc
push
sub
lea
sbb
fcom
lcall
dec
and
outsl
mov
sbb
loope
xor
add
je
out
or
sub
mov
jg
xchg
nop
and
cld
iret
and
in
xchg
sbb
pop
test
jnp
and
cli
push
test
sub
nop
mov
ret
popa
and
mov
jns
lea
xchg
lods
mov
and
cmp
movsl
movsb
xchg
jmp
sbb
in
clc
aas
xchg
mov
xor
xchg
cmp
cs
fnstenv
or
rcl
xor
adc
xchg
jns
jnp
dec
nop
ficoms
mov
dec
arpl
std
add
push
fsubrs
or
and
sahf
enter
stc
icebp
mov
add
std
pop
notb
mov
mov
add
outsb
ss
addr16
stc
int3
cwtl
cmp
sub
mov
xlat
mov
loope
mov
sbb
fstpl
mov
sub
jne
xor
test
into
test
test
or
cld
fadds
ficoml
xor
cli
sbb
xlat
push
lahf
aam
pop
mov
daa
or
bswap
out
push
sbb
out
cmp
mov
in
ret
sahf
into
fisubs
sbb
push
js
push
xor
ret
rcr
fcmovne
sub
call
bound
pop
inc
jecxz
loop
jno
aad
fnstenv
fidivl
push
pop
mov
jl
mov
dec
push
enter
fmuls
push
and
call
or
fnstenv
adc
test
imul
lret
mov
lret
add
mov
xchg
subb
movsb
aaa
je
jmp
cmpsl
push
xor
xchg
xchg
scas
lcall
adc
jg
and
negb
jg
mov
adc
or
mov
stc
lahf
ss
xchg
jg
fidivrl
sbb
xor
gs
nop
dec
cld
inc
pop
int
or
fidivl
pop
adc
push
fisubl
repnz
or
dec
add
dec
cs
sub
or
daa
test
and
lcall
dec
mov
fiadds
shr
pop
pushf
xor
fwait
out
add
xchg
lahf
and
jb
dec
mov
cmp
xchg
sbb
sub
incl
ljmp
into
pushf
sbb
dec
hlt
jmp
mov
or
cmp
loope
push
sub
push
ss
shl
sahf
fisubs
out
repz
adc
inc
les
movsb
cwtl
mov
movsb
mov
or
loope
dec
test
in
push
sub
test
xchg
fstpt
outsb
cmovge
dec
bnd
test
out
fwait
mov
xor
outsb
imul
add
sub
cwtl
ss
xchg
adc
mov
wbinvd
dec
ret
ds
jbe
mov
int
cmp
xor
cmp
scas
pop
mov
pop
aaa
leave
pop
cmp
push
jle
mov
mov
cmp
sahf
jns
sbb
pop
mov
pop
push
cmc
mov
js
rcr
loopne
sarl
xor
and
mov
lea
cmpsb
and
es
std
in
nop
jne
imul
fldenv
jle
xor
mov
jne
jne
popa
testb
mov
mov
mov
push
cmpl
outsl
pop
das
scas
cld
mov
hlt
xchg
mov
jb
ret
ja
jne
pusha
in
ret
insb
xchg
push
dec
and
or
aam
cmc
es
inc
sub
lock
pusha
jg
cs
in
push
mov
test
mov
lea
aaa
test
inc
jnp
jns
adc
frstor
popa
push
jmp
mov
sub
into
inc
arpl
jbe
add
int
sahf
iret
jmp
dec
rcr
xor
stc
sub
pop
popf
lret
scas
push
xlat
mov
jp
outsb
cmp
sbb
rorl
xchg
or
das
jno
push
fiaddl
enter
enter
xor
xchg
int
f2xm1
sbb
mov
lahf
pop
pop
sbb
in
mov
scas
and
inc
mov
jns
arpl
or
fimull
ja
std
push
jbe
jnp
push
mov
loope
dec
inc
mov
sub
lock
repz
adc
decl
dec
test
push
sbb
out
fstps
mov
lods
or
cltd
or
jbe
push
push
and
scas
imul
movsl
out
pop
or
sbb
out
test
test
arpl
dec
lahf
adc
mov
xor
sub
mov
push
shrb
mov
mov
or
pop
sbb
push
push
mov
nop
scas
movl
and
stc
fs
pop
test
fmulp
insb
sbb
dec
sub
pushf
or
or
or
aam
cmp
pop
int3
lret
adc
xchg
or
xchg
add
ja
sysenter
in
lds
sahf
adc
cltd
mov
arpl
cs
add
pop
jg
inc
in
xor
in
incb
in
stos
fwait
jne
and
cld
mov
and
data16
popa
adcb
xchg
mov
jmp
sub
mov
lods
xchg
xor
sti
lahf
leave
push
push
fisttpll
cmpsb
cmc
push
out
pop
xlat
and
mov
mov
test
adc
inc
imul
out
lahf
outsb
pop
push
sub
scas
mov
mul
jl
jmp
push
rcrl
sarb
add
je
push
not
jp
sbb
xchg
out
mov
add
and
or
sbb
push
pop
mov
push
jle
dec
sub
sub
data16
mov
sahf
xor
xchg
or
stc
rorl
xchg
ss
popa
stc
add
insb
ds
pop
fidivs
test
adc
scas
rcrb
xchg
rcrb
mov
icebp
push
cltd
fisubs
roll
notb
push
scas
jle
out
mov
add
jb
data16
jmp
popa
or
ss
lcall
dec
mov
hlt
xchg
sub
ljmp
jnp
sub
jb
push
mov
insl
jo
orl
out
or
adc
adc
and
xlat
stos
fcompl
out
pop
mov
inc
stos
push
movsl
repnz
and
roll
popf
mov
fwait
add
and
xlat
das
int3
cwtl
aad
ret
jbe
dec
cmp
sbb
popf
fnstenv
aam
push
sub
mov
pop
push
fstpt
push
movsb
push
and
or
jle
addr16
iret
dec
mov
mov
test
lods
cmp
jecxz
jp
push
and
dec
adc
mov
andl
xchg
in
cmc
fidivl
jg
ljmp
cmp
cmp
iret
insb
loop
jns
test
cmpsb
pushf
inc
std
cmp
jbe
mov
jecxz
cmp
int3
ss
insb
adc
mov
cmc
in
sbb
xlat
mov
pop
shll
pop
xor
in
cltd
sahf
int
sbb
mov
pushf
rcl
jl
out
cltd
push
fs
aad
mov
mov
cmp
pop
mov
mov
pop
les
ljmp
mov
mov
loope
pop
sub
sub
mov
fs
xchg
cmp
inc
imulb
imul
sbb
sub
sahf
xlat
adc
stos
lea
push
add
fidivrl
xor
adc
jmp
ja
or
clc
pop
mov
xlat
xlat
jns
mov
cmp
sub
push
fisubrs
daa
test
shll
sub
and
sbb
sub
inc
lret
gs
in
push
pop
or
daa
cmpsl
pop
push
push
jne
dec
popa
in
sahf
sbb
repnz
imul
dec
test
adc
pop
and
mov
dec
clc
fwait
aas
test
adc
popf
pusha
insl
fstpt
inc
shlb
pop
adc
fisubrs
fildll
xchg
int
cld
push
orl
pop
ret
jnp
pop
fimull
into
jae
aad
lods
iret
inc
cmp
loopne
mov
test
icebp
xchg
in
fiaddl
jle
pop
sti
fimull
mov
xchg
es
dec
pop
cmp
clc
fcmovb
sbb
leave
sbb
insb
arpl
pop
jle
cmp
cwtl
push
inc
scas
imul
push
push
dec
stos
cld
cmp
ss
out
pusha
cmc
test
stos
cmpsl
into
dec
mov
inc
push
fcomps
sbb
push
sub
cmp
jmp
fsubrs
mov
jno
cmp
movsb
cmp
or
and
sub
mov
and
add
call
shl
loop
hlt
rol
movsb
sub
inc
fistpl
or
test
xor
sub
push
hlt
mov
jne
out
jae
mov
andl
bswap
push
and
xchg
push
in
dec
mov
mov
decb
fcmovnu
out
mov
inc
lock
jae
mov
sbb
fs
int3
pop
imull
mov
pop
and
jae
mov
xor
in
mov
aam
into
cmp
loopne
pop
push
movsb
xchg
xchg
adc
mov
cmp
inc
jno
aas
xor
xor
test
or
shrl
and
jp
or
or
or
popf
sub
test
ret
sbb
and
inc
arpl
fstps
ss
mov
jle
popa
popa
cmpb
cmp
inc
pop
adc
cltd
in
inc
imul
out
mov
or
sbb
into
inc
xor
jns
and
jae
add
xor
mov
xchg
jb
mov
loope
mov
ds
dec
lock
sbb
jns
imul
cmp
dec
cltd
jmp
sub
mov
sbb
jne
aas
mov
mov
jbe
mov
jmp
mov
shrl
push
fimuls
mov
mov
addb
jecxz
add
inc
frndint
xor
inc
mov
lcall
subb
mov
pushf
bound
js
fisttps
or
cmp
push
pushf
jl
mov
leave
push
shll
mov
inc
push
add
push
push
fcoms
push
inc
sub
pop
adc
pop
add
cltd
mov
jmp
aas
mov
jo
fdivrl
mov
insl
and
fiaddl
lcall
fsubrl
pop
jle
xchg
insl
outsl
imul
addb
dec
xor
adc
bound
jge
scas
jbe
dec
xor
add
loopne
mov
in
mov
push
sahf
mov
fcomps
or
sub
mov
cld
js
mov
fisttpll
lods
lahf
pusha
adc
and
pop
ds
stos
mov
subb
and
dec
push
mov
jg
test
dec
mov
sbb
cs
shl
jl
sub
sub
push
sub
stos
scas
mov
xor
hlt
sarb
jns
mov
push
ret
nop
push
call
cmp
jle
pop
lret
lock
pop
test
inc
jae
les
adc
sbb
pop
hlt
rcll
test
push
push
push
mov
jecxz
arpl
insl
xor
mov
xchg
cli
adc
pop
mov
outsl
xchg
popf
sbb
lcall
jbe
lea
mov
imul
push
jne
addb
jge
xchg
cmp
sbb
std
push
fidivrl
aas
lret
rorl
cmp
cmpsl
fidivs
jns
dec
call
and
addr16
fldenv
aaa
cli
pop
clc
sub
jo
out
stos
repnz
fisttpll
loop
mov
sbb
pop
push
mov
insl
xchg
insb
leave
mov
rcrl
inc
mov
adc
jmp
arpl
in
ds
sub
adc
sbb
lods
inc
mov
push
aaa
outsl
jns
movl
movsl
inc
inc
inc
adc
orl
out
adc
aaa
mov
dec
push
dec
adc
outsb
dec
add
and
shl
lea
rclb
pop
cld
iret
jb
test
xor
bound
test
jl
cmp
sbb
rol
sbb
arpl
ds
push
mov
cs
loope
loopne
xchg
and
scas
mov
add
xor
xchg
push
insb
adc
test
adc
dec
les
aad
repz
pop
jbe
and
out
shrl
adc
out
sub
cs
jo
cwtl
test
dec
lock
js
daa
ret
adc
xlat
mov
push
dec
mov
sbb
adc
loopne
cwtl
add
adc
aam
mov
das
pop
or
pop
xchg
and
lret
fadds
test
shr
cwtl
mov
cmpsb
jp
mov
jb
xchg
popa
sub
in
mov
aam
sbb
enter
cmp
dec
mov
jecxz
adc
or
ja
pop
fmull
add
mov
lret
repz
push
std
xchg
or
das
shrb
icebp
sbb
fcmovu
push
or
mov
je
sub
repnz
sbb
ret
test
out
insl
icebp
mov
sbb
xor
xchg
jo
inc
lds
nop
int3
and
test
pop
xchg
lcall
sldt
rol
fildll
lock
mov
ljmp
sbb
pop
loop
cmpsl
sub
stc
outsl
push
pop
pop
ja
jne
repz
add
sahf
into
loop
xor
icebp
stos
adc
pop
sbb
jb
out
es
pushf
pushf
inc
mov
xchg
repnz
add
mov
in
scas
insl
lret
pusha
xor
and
mov
aad
xchg
add
shlb
stos
dec
dec
popf
mov
push
jmp
pop
and
ret
rcr
icebp
cmpsb
mov
movsl
out
jnp
pop
mov
cltd
mov
dec
imul
popl
adc
stos
rcrl
sbb
call
sub
pushf
pop
sub
cld
xchg
dec
dec
aas
cmc
mov
std
insl
mov
dec
pop
idivl
mov
push
dec
rorl
outsb
imul
and
inc
xor
sti
pop
mov
imul
ret
shl
pop
jecxz
cmp
ljmp
loope
ret
aas
aad
jb
mov
sbb
stos
dec
js
std
lock
test
mov
inc
cmp
in
lods
out
out
or
push
mov
xor
and
pop
inc
js
ret
cmp
push
scas
shll
hlt
mov
repnz
or
inc
stc
stos
cmpsl
dec
loop
outsl
mov
xor
mov
rcl
xchg
add
mov
mov
lcall
leave
pop
lret
add
inc
pop
mov
dec
aad
fwait
xchg
fwait
insl
dec
xchg
jo
sbb
ret
xor
sbb
push
pop
rolb
mov
aad
sti
scas
adc
xor
mov
stos
fadd
frstor
and
les
xchg
pop
and
add
dec
xchg
pop
sbb
gs
scas
pop
mov
in
loope
sbb
adc
inc
mov
xor
rolb
pop
pop
dec
dec
pop
test
push
fsubs
push
je
hlt
insb
ror
adc
or
fidivs
or
adc
mov
sti
xchg
and
adc
adc
pop
adc
repz
je
std
sub
jecxz
xor
mov
out
mov
imul
dec
sbb
stos
ja
sub
push
mov
aaa
mov
and
push
inc
inc
mov
test
fdiv
loopne
mov
cmp
orb
mov
push
pop
mov
sahf
mov
xor
dec
mov
shrl
dec
mov
push
arpl
xorb
cmp
out
testl
add
lahf
sbb
adc
and
loope
xor
inc
push
push
jbe
mov
or
jae
dec
insb
or
push
jg
sub
sarl
outsl
adc
test
test
mov
mov
aaa
adc
dec
cmpsl
dec
in
add
or
stos
mov
pop
into
fisubs
pop
pop
mov
pop
mov
push
stos
dec
adc
pop
nop
mov
test
cltd
sub
jb
mov
lcall
sbb
gs
sbb
push
xorb
ds
cmp
ret
mov
int
jg
xchg
push
ss
dec
mov
xchg
dec
fucomp
push
cmpb
fidivl
andb
mov
add
or
arpl
sbb
mov
push
mov
int3
and
repnz
jmp
jecxz
inc
jno
mov
jb
add
mov
and
inc
mov
adc
mov
into
fsubs
fsubr
and
scas
pop
shrb
lock
and
mov
test
fwait
arpl
jno
pop
add
aas
xor
repnz
out
rcrl
lret
adc
decl
dec
jno
iret
sub
cmp
mov
sbb
lds
mov
xchg
dec
or
jne
lods
test
pop
xor
out
inc
push
or
push
push
out
sbb
cli
nop
test
mov
mov
pop
sahf
aad
aas
aaa
insl
mov
push
sub
int
arpl
outsl
loop
jo
call
push
cmp
fldenv
sbb
pop
das
mov
pop
push
cmp
ss
pop
fsubrl
pop
jb
out
fidivrs
in
das
and
repz
das
or
subb
imul
in
leave
mov
mov
and
mov
pop
or
in
test
inc
imul
movsb
nop
call
adc
sbb
out
hlt
and
sti
sub
rcll
dec
in
xor
inc
lahf
jbe,pt
negl
scas
outsl
pop
xor
jp
inc
push
clc
cmpl
xchg
out
jl
and
hlt
aaa
aaa
lret
add
and
in
sbb
pop
in
push
lret
mov
adc
pop
pop
jg
xor
stc
adc
pop
jmp
xor
into
pushl
push
sbb
xchg
sub
bnd
rorl
mov
mov
inc
rcrb
lods
push
sbb
push
or
insl
jbe
into
xchg
repz
inc
lock
or
ds
sub
jge
cmp
call
stos
cmp
lahf
sbb
pop
cmpsl
push
test
inc
clc
or
xchg
inc
xor
jle
insl
cmpsb
xor
leave
pushf
mov
mov
mov
movsb
fwait
adcl
pop
in
dec
pop
iret
cmpb
cmpsb
inc
add
repnz
mov
icebp
mov
into
in
int
mov
or
hlt
test
xchg
sahf
xchg
mov
arpl
mov
dec
mov
jbe
div
aas
jle
arpl
sarl
sub
jb
iret
test
cmp
testb
in
addr16
xchg
jns
test
mov
cmc
push
add
dec
fnstcw
sbb
dec
cltd
adc
ljmp
mov
stos
jo
mov
add
jp
or
shlb
xor
adc
xchg
imul
fwait
push
xor
push
add
inc
mov
adc
cwtl
push
dec
addr16
adc
ja
pushf
in
das
lds
jne
push
call
js
push
mov
xor
inc
std
jno
popa
sbb
mov
mov
jge
insl
loope
adc
and
push
int
std
jno
popa
sbb
mov
mov
jge
insl
loope
adc
and
push
leave
inc
std
jno
popa
sbb
sub
jns
pop
in
adc
test
fstl
inc
std
jno
mov
xchg
mov
sub
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
js
push
mov
push
add
or
add
and
jo
pusha
js
push
mov
sbb
or
call
cmp
and
jo
pusha
popa
ss
inc
sub
and
xor
loope
lret
and
add
les
filds
aam
rcrl
lds
sub
fnstenv
and
adc
push
jb
lret
mov
test
sub
xchg
xchg
inc
and
hlt
pop
adc
sub
setge
jge
sar
iret
ss
inc
mov
sub
stos
jmp
lods
cmp
adc
adc
xor
mov
movsb
mov
xchg
mov
mov
out
or
xchg
jmp
and
test
adc
in
aad
test
jecxz
rcll
sbb
xor
push
fnop
cmp
inc
cmp
in
nop
outsl
mov
lds
xor
addb
pop
inc
gs
movsl
out
dec
std
cmp
add
mov
jno
pop
les
das
sarb
rcrb
adc
adc
test
xor
sbb
insb
mov
subb
adc
or
int3
dec
jne
lods
push
test
cmpsl
clc
push
test
xchg
lods
inc
mov
add
or
or
aaa
ret
cmp
push
subb
sbb
lea
bound
inc
out
adc
add
xor
and
jo
sub
sbb
or
clc
adc
add
xor
and
jo
pusha
js
push
mov
sbb
or
clc
adc
add
xor
and
jo
pusha
js
inc
out
cmp
mov
leave
sbb
pop
test
xor
aad
inc
mov
sti
shrb
out
movsb
push
xchg
mov
jae
mov
mov
mov
mov
dec
and
arpl
int
push
xor
addl
pop
cmpsl
xchg
subb
jl
movb
fwait
add
mov
mov
sub
outsl
insl
pop
mov
das
ljmp
push
or
xchg
mov
or
xchg
out
dec
pop
inc
inc
mov
int
test
iret
inc
push
inc
shll
xchg
ljmp
jne
sub
mov
mov
imul
lcall
cmpb
mov
xchg
add
fisubrl
add
popa
xchg
nopl
sarb
cmp
mov
inc
or
rclb
adc
mov
sahf
js
dec
and
pop
xchg
and
push
cmc
loopne
mov
les
or
push
rclb
mov
dec
add
das
lret
push
test
adc
jne
es
xchg
in
aam
add
shll
inc
add
addr16
jmp
sarb
push
ficoms
mov
sbb
ret
pop
inc
lock
gs
incl
lds
adc
sub
mov
bound
lds
imul
lock
adc
cmpsb
cmc
adc
inc
add
loope
call
jl
push
daa
jbe
or
mov
xchg
dec
fcom
test
mov
stos
mov
add
or
sbb
xlat
or
push
pop
loopne
dec
out
imul
leave
repnz
mov
dec
in
or
ficoml
loopne
aam
in
jbe
bound
adc
dec
enter
sub
adc
or
dec
in
add
ljmp
jg
shrl
bound
sbb
pop
and
test
das
jmp
adc
cwtl
aaa
lret
mov
test
or
jecxz
push
cmp
mov
pop
test
cmp
test
jmp
cmpsl
jl
sub
xor
mov
push
dec
cli
out
xor
repz
pop
push
xorb
mov
mov
ljmp
and
movsl
ss
sbb
clc
inc
and
and
pusha
nop
lahf
push
iret
sub
out
aam
mov
dec
arpl
mov
and
cmp
cwtl
mov
jae
hlt
icebp
dec
notb
out
idiv
cltd
xor
pop
test
push
aad
repz
inc
jg
push
sbb
stos
clc
fidivl
lret
mov
aas
xchg
and
jae
dec
daa
jns
filds
aam
popf
std
sub
sub
push
in
mov
shlb
das
mov
xchg
lahf
or
pop
add
testb
das
insl
pop
jmp
inc
sbb
jns
outsb
and
adc
cmp
pop
fwait
xor
out
dec
sahf
inc
push
pushf
xchg
mov
imul
push
lret
cmp
test
xchg
fisttpll
sub
cmp
dec
test
aam
stos
jmp
pusha
scas
int3
adc
shrl
push
pusha
insl
in
pop
adc
cli
mov
repnz
pop
xor
mov
jnp
xchg
inc
sbb
sbb
sub
roll
dec
mov
mov
insl
sti
jge
cmpsl
xchg
ja
leave
push
xchg
icebp
je
fbld
push
push
xor
test
mov
push
mov
cmp
test
shrl
leave
xor
push
imul
push
movsb
mov
loopne
dec
cltd
in
push
mov
sub
inc
xor
dec
cmc
or
test
mov
dec
in
nop
xchg
pop
je
sub
sub
aam
aad
xchg
popl
ffreep
xor
addl
cmp
mov
in
add
sub
lahf
mov
cs
jae
pusha
dec
in
jecxz
and
jl
mov
xchg
repz
testb
jno
xchg
popa
mov
mov
std
jae
pop
jg
or
pop
mov
sbb
nop
mov
xchg
stc
cwtl
mov
out
jmp
fstpt
gs
dec
hlt
jmp
and
mov
pusha
in
decb
xor
xchg
sti
ror
pop
and
adc
fisubl
or
aam
add
das
pop
aam
loopne
mov
xor
sbb
imul
adc
cltd
add
and
sbb
pop
popa
nop
icebp
or
push
pusha
ds
test
ja
and
jmp
pop
pminub
mov
outsl
jecxz
jp
aas
je
xchg
test
repnz
adc
xchg
or
push
int3
push
lret
bnd
or
rol
fisttps
pop
fists
lret
mov
jno
mov
inc
hlt
fmull
inc
hlt
jl
sbb
call
rcl
dec
mov
ja
sbb
push
out
cld
push
xor
jmp
cmp
mov
test
push
repnz
push
scas
andl
shll
sbb
xchg
pop
mov
lea
scas
push
lods
inc
jg
push
leave
rcrl
stos
loop
inc
mov
xchg
js
mov
pop
imul
sub
fldl
adc
testb
in
inc
or
and
scas
push
sbb
xchg
and
push
add
mov
mov
xchg
mov
cmp
mov
lods
cmp
and
xchg
bound
fs
outsl
repnz
mov
mov
lahf
adc
jb
repnz
xor
pushf
fdivrs
pop
mov
add
pop
rcl
push
nop
cmpsb
jo
xchg
fs
cmp
aaa
or
enter
sub
or
adc
and
dec
int
stc
xor
sub
out
insl
fcmovbe
pop
xlat
movsb
inc
push
popf
xchg
mov
dec
repz
out
pop
lods
xchg
out
cmp
fdivrs
mov
xor
jl
fcomps
adcl
lods
sub
lea
icebp
dec
dec
sub
jnp
shlb
test
sahf
lods
adc
mov
inc
outsl
fcomi
fsubrl
insb
lods
mov
mov
and
inc
jp,pn
jb
movsl
mov
out
int3
jb
sbb
testl
ret
sti
jno
sbb
imul
mov
scas
clc
adc
mov
mov
mov
push
sub
jle
std
sbb
adc
sub
xchg
and
inc
bound
inc
pusha
inc
adc
adc
jne
push
inc
push
in
fs
scas
lret
push
roll
pop
cmpsl
les
int3
int3
int3
mov
push
mov
or
loop
adc
addr16
sbbb
scas
jo
mov
stc
int3
sub
jbe
cld
jbe
mov
add
je
test
cmc
mov
xor
jle
sbb
stc
mov
in
cltd
mov
pop
xchg
lahf
nop
out
xchg
jge
inc
xchg
rorl
mov
inc
and
cli
jl
mov
mov
stos
pop
sahf
jno
sbb
dec
push
xchg
ffreep
ja
sub
push
and
pop
xor
jl
ljmp
clc
test
mov
or
movsl
loope
jmp
jmp
cmp
pop
das
addr16
cmpsl
dec
cmpsb
lock
pusha
movsl
icebp
xchg
bound
dec
popf
cltd
push
cmp
pop
test
push
jge
mov
ds
mov
int3
dec
dec
lahf
sti
sbb
cltd
lock
mov
decb
mov
xor
rclb
push
pop
out
pop
popa
cmp
jmp
loopne
cli
xchg
pop
sbb
and
inc
fistpl
push
scas
jns
mov
mov
loop
push
xchg
lods
adc
cmp
lahf
and
and
xor
pop
and
mov
rorl
lcall
es
jnp,pt
jnp
out
test
and
addb
sub
cwtl
rcrb
andl
andnps
rcll
mov
dec
pop
ds
pop
lock
das
popf
mov
lock
aas
shll
push
popa
jg
and
sti
lds
push
bound
mov
daa
sbb
imul
inc
or
xor
fdivs
imul
shr
cltd
push
scas
clc
sti
fiadds
lods
mov
test
jns
mov
jecxz
popa
sbb
cmp
aad
sbb
xor
push
mov
push
mov
imul
or
outsb
jmp
adc
es
andb
std
leave
jle
pop
add
jg
fs
sub
and
neg
pop
lds
movsl
mov
test
shr
inc
stc
imul
mov
jecxz
inc
lcall
and
frstor
dec
mov
cmc
jmp
jge
shll
adc
inc
outsb
stos
movsl
and
dec
in
leave
mov
fildl
int3
xor
cli
sub
rcll
je
enter
jae
jne
pop
sbb
dec
loop
pop
dec
or
mov
jg
xlat
int3
jp
mov
mov
mov
xchg
pusha
lahf
add
mov
adcl
push
mov
mov
add
es
sbbl
mov
rcrb
aam
cld
fsubrl
sub
in
mov
jg
add
cmpb
jno
jb
lock
or
jo
xlat
les
orb
mov
fs
pop
push
nop
nop
jg
cwtl
add
jge
mov
sbb
test
xlat
out
imul
add
pop
jge
pop
in
daa
in
push
outsb
andl
movsl
int3
push
sub
mull
ss
lods
add
sub
scas
das
adc
sbb
xor
mov
popa
test
fnstcw
and
hlt
test
pop
add
leave
mov
lods
xlat
inc
dec
pop
test
xor
dec
dec
shrl
stc
mov
push
push
nop
aaa
sahf
fldenv
xchg
inc
popf
xchg
push
ret
pop
mov
xor
add
add
ljmp
das
jge
mov
xchg
out
mov
fisttps
fwait
push
dec
scas
cltd
fsub
aam
inc
repnz
or
addb
jb
inc
xchg
xchg
dec
sub
jl
lock
insb
xchg
pop
xor
imul
mov
mov
out
xchg
out
jnp
addl
shll
and
xchg
adc
pop
dec
mov
mov
jle
add
clc
sub
movsl
push
lock
lea
js
add
dec
outsl
addr16
or
xor
sub
adc
mov
push
pop
mov
mov
or
mov
cwtl
rcrb
clc
repz
gs
or
inc
mov
xor
mov
ficoml
neg
cs
mov
test
lahf
rolb
out
add
sbb
ret
lret
jnp
mov
dec
inc
cmp
das
mov
mov
push
push
adc
add
add
aad
lods
dec
xchg
icebp
inc
xchg
push
stc
pop
lods
jge
out
std
xchg
xor
cmp
popa
push
and
push
stos
bound
sbb
dec
out
and
push
int3
push
jnp
aam
adc
jg
leave
insb
hlt
fnstcw
imulb
mov
mov
and
int3
sub
push
jns
js
test
mov
pop
out
enter
stos
dec
xor
fwait
out
add
xchg
or
and
rorb
enter
xchg
pop
pop
add
jmp
and
push
insl
out
out
adc
ret
push
jl
scas
xor
push
push
push
or
bound
insb
jle
bound
mov
faddl
lds
arpl
xchg
cwtl
mov
pop
and
rclb
dec
mov
sub
cmp
sahf
or
push
dec
adc
imul
repz
out
mov
mov
testb
jae
mov
jno
or
daa
pop
sbb
outsl
add
aam
and
int
ja
push
dec
sarl
xchg
push
sbb
sub
fsubrl
out
dec
nop
cmp
push
push
jo
adc
stos
in
lahf
sub
pushf
jge
ret
out
mov
lods
cmp
into
sub
push
fsub
cmpsl
or
lea
sti
or
pop
xchg
xchg
mov
adc
leave
pshufw
inc
andl
cmpsb
xor
out
mov
outsb
xchg
jne
jle
insb
ror
movsb
jno
in
aas
call
pop
das
cmp
int
adc
inc
pop
lock
in
fsubrl
in
fwait
mov
sub
cmpl
dec
jmp
dec
pop
mov
outsb
in
or
and
cld
and
push
xchg
xchg
dec
clc
pop
js
lret
push
mov
stc
int3
and
fistl
pop
push
bound
cmp
scas
xchg
into
aam
test
out
cmpsl
dec
stos
push
sub
ss
js
out
jb
ret
jne
aas
aaa
adcb
int3
add
into
hlt
mov
clc
xor
lahf
mov
int3
inc
mov
lods
aad
fidivrs
add
test
push
dec
mov
incl
pop
scas
mov
xchg
popf
xchg
ret
cmpsb
add
jp
and
xor
jle
xor
xchg
and
push
sbb
mov
mov
cmp
lods
in
stc
xor
data16
loope
in
cmp
pop
push
mov
mov
mov
stos
mov
icebp
push
xorb
jg
cmp
leave
jo
rorb
or
fistpl
dec
into
sub
nop
pop
inc
mov
pop
js
lea
outsb
add
scas
fidivl
repnz
dec
pop
lds
sbb
rclb
mov
scas
xchg
clc
jmp
add
cmp
pop
stc
out
add
movsb
sub
jle
and
push
xor
lret
addr16
adc
dec
lahf
or
mov
adcl
dec
push
push
int
ja
push
adc
arpl
lods
sbb
dec
negb
sub
xchg
gs
mov
sub
push
xchg
ret
scas
insl
sbb
mov
mov
das
push
sub
aam
cmpsb
daa
add
loope
arpl
push
out
xchg
lret
stc
sbb
lret
push
xchg
or
inc
call
mov
mov
mov
aas
and
jne
adc
cwtl
pop
add
push
add
mov
adc
and
jp
fwait
xor
cmp
loope
jmp
and
loope
add
adc
jno
out
jno
fmuls
xchg
out
ret
xorb
lret
ss
test
xchg
push
push
jne
jge
std
adc
sbb
mov
into
adc
int
sbb
push
sbb
hlt
xchg
or
jmp
aas
or
nop
js
pop
push
notl
mov
mov
jecxz
jmp
mov
xchg
pop
mov
int3
and
mov
xchg
fucomp
jge
jbe
lock
jns
jecxz
insl
movsb
or
iret
adc
lret
out
in
jb
mov
lcall
jecxz
lahf
loop
mov
jbe
mov
and
loop
stos
xchg
and
inc
dec
popa
loop
dec
xchg
cld
jecxz
aas
mov
adc
nop
xor
mov
vpcmpeqd
adc
push
add
popf
dec
pop
divl
in
test
in
pop
mov
adc
push
lods
mov
xlat
rcrl
movsl
or
pop
xchg
leave
rcrl
cmpsb
stos
movsl
sbb
sub
clc
mov
sti
aam
jnp
mov
out
cmp
call
in
mov
add
leave
pop
cmpb
jle
sub
repnz
clc
repnz
iret
call
loop
inc
pslld
repnz
or
mov
xor
pop
mov
dec
movsb
xchg
stos
adc
lret
imul
pop
pop
cld
sub
lcall
push
or
std
sbb
stos
mov
out
xchg
xchg
xchg
lahf
das
nop
call
and
aad
lock
fisttpl
fwait
dec
testb
mov
popa
add
imul
mov
clc
rol
pop
loop
or
push
pop
call
in
adc
ret
dec
lahf
outsl
push
pop
xchg
out
pop
push
xchg
jle
repz
repz
inc
loop
sti
push
or
inc
stc
sub
mov
in
outsl
and
jmp
sbb
add
jb
idivb
popf
pop
mov
xor
adc
add
je
xchg
jle
mov
pop
and
sub
ds
jo
ffree
xchg
test
movsl
push
inc
sbb
jbe
mov
test
sbb
out
pop
pop
adcb
int3
bound
repnz
jle
pushf
mov
mov
adc
outsl
add
nop
cwtl
xor
std
pop
jge
pop
xchg
adc
cmp
js
xchg
mov
lods
sahf
sub
repnz
inc
xchg
lods
nop
testl
stc
mov
inc
xlat
cmp
shrd
jmp
xchg
out
cmp
imul
int3
push
rclb
jbe
js
adc
les
fidivl
push
sbb
in
jg
lds
sbb
hlt
mov
std
mov
jo
pop
add
js
clc
and
mov
ret
test
test
mov
mov
insb
fisubl
sbb
pop
adcb
or
test
xchg
test
loop
add
lret
sub
sub
dec
loop
jbe
mov
cmpsb
xor
imul
aaa
enter
sbb
jb
sbb
inc
sub
dec
cmp
lahf
int
jecxz
cmp
fistpl
or
int3
loopne
pusha
sahf
dec
dec
dec
and
mov
xchg
inc
pusha
aam
push
frstor
test
and
inc
cmp
pusha
or
pop
loope
sbb
jge
or
cld
jne
loope
outsb
push
scas
in
push
jnp
nop
xchg
les
sub
rorb
push
pop
adc
jp
in
lret
sbb
xorb
fwait
inc
pop
jnp
insl
int3
or
xor
push
xor
sti
cld
fst
outsl
cwtl
repz
add
and
lds
jp
cmpsb
aam
and
jne
mov
pop
add
push
cmp
into
mov
push
in
mov
jmp
and
xchg
jnp
inc
nop
sahf
sarb
std
mov
leave
icebp
lods
daa
das
pushf
in
hlt
jl
push
inc
mov
push
lea
clc
ja
shrl
sbb
rcl
lods
and
fadds
and
aam
sub
lcall
cli
adc
sub
push
stos
movsl
nop
xchg
inc
jbe
fs
mov
pop
scas
mov
cmp
xchg
xor
mov
sbb
adc
or
cs
sbb
lock
mov
fisttpl
add
ja
bound
int
lret
mov
mov
addr16
mov
inc
imul
mov
fsubp
jg
imul
mov
dec
clc
jle
gs
pop
or
or
popf
fists
push
dec
adc
insl
adc
xor
test
pop
das
out
push
lock
mov
sti
mov
out
lret
movsl
and
addr16
inc
mov
xchg
lock
jb
cli
sub
sbb
adcb
in
mov
push
cld
pop
dec
aad
jl
repz
push
push
sub
jle
sub
sbb
lcall
sbb
in
and
dec
inc
fs
push
inc
popa
dec
fsubrs
fwait
lods
aaa
push
imul
and
cmpsl
cmp
gs
mov
inc
mul
inc
xchg
mov
js
dec
fwait
inc
jbe
mov
js
in
pop
test
mov
leave
ret
movsl
xchg
xor
mov
sub
xchg
xchg
xor
add
insl
int3
push
fmuls
aaa
dec
dec
sbb
sbb
bound
jmp
adc
dec
test
dec
aam
push
fsubs
pop
stos
lods
stos
mov
mov
add
int
in
mov
insl
insl
jl
imul
sub
jmp
hlt
hlt
loopne
call
mov
mov
push
xacquire
sbb
sbb
rcll
repz
out
loopne
stos
jmp
je
xchg
cltd
loopne
imul
and
imul
push
in
js
sbb
pop
or
and
dec
iret
das
mov
jno
cmp
dec
dec
test
pop
push
in
cli
iret
add
test
inc
sub
mov
mov
cmc
or
mov
adc
jecxz
out
cmp
mov
adc
aas
scas
sbb
leave
adcb
mov
sbb
or
clc
adc
add
xor
and
jo
pusha
js
push
mov
sbb
or
clc
adc
add
xor
and
jo
pusha
js
push
movsb
cmp
sub
clc
adc
add
xor
sub
jns
test
push
pop
push
dec
loopne
shrb
rcrb
pop
stos
jb
enter
and
or
mov
test
mov
and
pop
popf
and
push
into
sub
cmp
dec
xchg
pop
test
js
mov
test
mov
add
xor
inc
or
sbb
pop
cmc
cmp
dec
icebp
pop
test
js
mov
test
mov
add
xor
and
aam
out
xchg
push
mov
sarb
fsubs
rcll
rol
sbb
add
aaa
add
lret
cmp
scas
imul
dec
cmp
push
and
pop
push
xor
mov
mov
cmp
test
imul
test
xor
xchg
out
push
out
aam
push
sbb
imul
or
fstps
xor
adc
nop
les
sub
cmp
test
fs
xchg
in
mov
jae
shr
jmp
sub
sarl
or
xchg
mov
insl
inc
ja
mov
insb
xor
pop
mov
jb
rolb
pop
aam
mov
pop
push
cwtl
inc
test
mov
add
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
js
into
push
icebp
cmp
movsb
push
xchg
jo
push
mov
fisttpll
push
xchg
sub
sub
mov
ljmp
push
mov
call
mov
mov
xchg
jge
sub
sarl
loope
cld
pop
rcll
sbb
fadds
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
js
mov
test
mov
add
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
js
mov
adc
pushf
mov
push
arpl
shlb
fidivrl
imul
out
test
shl
stos
mov
lahf
sub
nop
xchg
xchg
push
int3
pop
cmp
xor
sub
fwait
pop
pop
mov
jnp
out
mov
movsl
outsb
ja
xor
and
xor
inc
lods
add
mov
mov
and
push
add
movsl
mov
pop
jge
out
les
mov
sbb
bound
add
cmp
out
cli
mov
jnp
push
aad
jecxz
outsl
insb
sbb
xchg
xchg
mov
jae
pop
jle
xchg
xchg
out
or
int
cmp
out
test
mov
xor
push
popa
into
mov
inc
lods
mov
leave
push
js
test
lret
sub
pop
stc
pop
lret
mov
scas
push
inc
inc
testl
inc
stos
icebp
and
js
mov
push
xchg
faddl
mov
in
jecxz
jb
dec
leave
outsl
pop
add
mov
stos
ljmp
test
lahf
jae
insl
mov
mov
in
mov
xor
aam
adc
nop
pop
mov
jne
mov
push
std
daa
shll
adc
mov
clc
popf
xor
jle
dec
cmp
cli
pop
cli
mov
movsl
mov
loopne
inc
push
lret
or
adc
std
pop
pushf
push
ret
sbb
sti
lock
dec
cmp
stc
or
mov
pop
int3
ret
xchg
pop
cmp
lods
or
mov
and
popa
dec
jmp
out
jb
repz
popf
gs
test
mov
add
repz
dec
cmp
loop
pop
sbb
push
dec
js
insl
fsubl
in
outsl
xchg
xchg
js
add
mov
loope
sbb
xorl
mov
and
mov
sahf
inc
adcb
inc
push
sub
or
sbbl
inc
sub
mov
aam
push
aaa
xor
inc
push
inc
ljmp
mov
sub
jbe
in
sbb
sub
test
scas
cmpsb
gs
mov
xchg
jae
jb
popa
jae
jg
movsl
jp
popf
sbb
xchg
call
test
ds
out
cmpsb
mov
aad
ficompl
adc
dec
mov
aam
inc
loop
cmp
cltd
cmc
fcmovnu
mov
pop
test
cwtl
loope
arpl
out
cltd
jge
and
in
sbb
popf
lcall
xchg
enter
add
into
imul
das
test
mov
imul
sbb
jnp,pn
jge
dec
or
and
loope
or
imul
jne
mov
js
dec
in
lods
loop
call
sbb
adc
jmp
test
pop
jp
sbb
js
std
push
in
pop
or
sbb
sbb
sar
mov
sbb
inc
or
xor
sub
addr16
dec
imul
sub
mov
addl
mov
rolb
add
js
int
mov
jl
inc
pop
push
push
pop
push
inc
inc
jno
mov
iret
ljmp
xchg
scas
rorl
mov
xor
loop
push
jne
dec
sbb
and
fwait
inc
xor
pusha
xor
jmp
push
loop
pop
fcmovne
in
adc
or
rclb
arpl
cmp
jo
inc
jle
test
stos
add
scas
pop
cmp
inc
sbb
inc
fistpl
dec
lcall
pop
fucomi
das
aad
ss
popf
int
jle
addr16
dec
add
repz
and
ror
add
add
dec
jmp
jecxz
push
or
leave
das
cld
jmpw
jmp
sbb
mov
ja
or
add
push
outsb
mov
arpl
cli
xor
setge
cmp
jne
jge
sub
or
pop
cmc
sub
sub
sub
cwtl
dec
imul
cmp
sarl
pop
jmp
push
jns
in
lret
sahf
js
xchg
xchg
neg
xor
enter
mov
jo
shl
into
dec
pop
and
adc
adc
push
dec
repz
sub
jge
xchg
and
lds
xchg
mov
lcall
jne
movsb
dec
sub
shrl
push
mov
lock
inc
sbb
pop
jne
jb
add
mov
pop
dec
push
outsl
cli
adc
mov
cs
outsl
out
inc
cmpsl
jns
inc
sbb
mov
sbb
std
add
sbb
cmpsb
mov
push
inc
ljmp
in
or
jae
cwtl
rcrb
ret
rcll
inc
sub
dec
scas
out
jecxz
adc
shlb
out
fistpll
cmp
rcrl
push
rol
int
or
cmpsb
ljmp
jo
pop
in
inc
and
nop
xlat
sbb
nop
cmp
add
mov
inc
jnp
aam
adc
pop
popa
leave
cmp
dec
es
and
out
mov
push
xchg
test
jge
sub
hlt
int3
imul
je
repnz
imul
sub
pop
xor
xor
mov
aad
bound
push
idivb
test
bnd
testl
mov
xlat
es
sbb
xchg
jp
inc
repz
cmp
push
dec
dec
aad
xchg
add
daa
das
aad
lds
pop
sub
jg
adc
sub
sahf
mov
jmp
test
cmpsl
cmp
pop
dec
stos
lds
mov
or
rcrl
cmc
fcom
or
orb
or
push
shlb
sar
hlt
aaa
fnsave
testb
push
dec
sbb
ljmp
dec
cmp
lahf
test
dec
ljmp
aas
jb
stos
dec
mov
sbb
push
and
aam
and
pushf
je
je
push
xchg
pop
add
shll
sbb
mov
mov
mov
pop
push
cmp
loop
pop
stc
imul
pop
xor
lcall
outsl
or
jae
push
mov
pushf
xchg
into
out
mov
sub
cmp
cmpsl
sbb
sbb
push
and
jp
and
test
not
adc
clc
jb
test
mov
jo
loope
sub
pop
call
lret
ja
lahf
cli
mov
stc
xor
adc
aaa
outsb
or
sbb
fisubs
lea
mov
dec
push
lea
mov
mov
dec
add
add
test
cs
inc
arpl
inc
jp
cwtl
addr16
data16
sub
mov
and
mov
sbb
stos
into
push
jne
pusha
es
cmc
pusha
fsubl
stos
nop
loope
stos
adc
push
lahf
enter
xchg
test
cmp
call
adc
add
insb
cltd
sub
mov
leave
test
push
dec
jg
mov
orl
fadd
lea
popaw
push
dec
mov
and
aam
out
sub
jp
dec
push
dec
mov
loopne
cli
jge
jb
push
out
insb
in
fistps
add
psubb
push
clc
sub
mov
sbb
gs
iret
cltd
sarl
ret
test
mov
mov
mov
pop
divb
je
test
dec
sbb
sbb
shll
cld
inc
push
push
xchg
je
jne
pop
xlat
call
jne
pop
movsb
push
call
mov
ja
sub
pop
dec
xchg
xor
inc
xor
mov
xchg
mov
mov
add
stc
es
sbb
in
into
add
jp
push
or
mov
sbb
outsb
and
xchg
mov
clc
dec
mov
cmpsb
pop
aas
aam
test
js
fdivs
mov
inc
adc
rolb
and
pop
or
aad
xor
adc
pop
adc
dec
mov
imul
cli
mov
sbb
mov
mov
insl
add
sbb
lock
leave
mov
ja
add
or
push
or
call
stos
mov
pop
cmp
imul
adc
or
leave
jno
mov
in
jns
or
jnp
push
pop
pop
pushf
dec
in
push
fldcw
das
dec
dec
sub
shlb
ficomps
push
push
push
jle
sbb
push
cmp
xor
out
sub
mov
in
ja
stos
pop
jae
add
push
hlt
xor
xchg
repz
adc
lahf
mov
call
mov
and
sbb
mov
jp
incl
push
push
cs
pop
insb
data16
dec
and
les
fsts
push
sub
cmp
or
lods
jecxz
jnp
cwtl
mov
and
orb
and
mov
and
dec
inc
inc
inc
cmp
std
movsl
inc
imul
cltd
cmp
stc
icebp
jnp
mov
mov
insl
sub
stos
jb
push
aad
test
inc
and
pop
repz
mov
pop
xchg
dec
pop
fisubs
dec
mov
dec
xchg
imul
loopne
cmpsb
incb
xchg
mov
dec
jo
in
lret
ss
xor
stc
inc
pop
jne
pop
mov
lods
xor
mov
mov
sbb
movsl
scas
mov
je
dec
mov
add
mov
in
scas
dec
stc
and
fsubl
aam
sbb
adc
cmpsb
out
jne
ja
rcrb
lret
and
std
cwtl
hlt
sbb
xchg
shlb
sahf
jmp
repnz
cld
and
mov
out
stos
add
out
cli
jno
pop
sbb
cld
push
inc
push
ljmp
pop
icebp
inc
sub
mov
adc
xorb
test
lret
pop
lock
push
lcall
ja
xchg
testb
jbe
xchg
call
xchg
push
rcrb
sub
sar
adc
ret
scas
fmull
clc
lods
adc
xchg
jecxz
roll
rcrl
insl
push
and
add
aad
cmpsl
into
shr
stos
outsl
ss
or
add
and
rolb
gs
jg
mov
or
sbb
mov
sbb
outsl
hlt
xor
pop
daa
idivl
out
into
inc
popa
loopne
ret
pop
add
into
dec
and
push
cltd
push
scas
dec
cltd
jne
int3
inc
xchg
cmp
or
movsb
test
add
xor
adc
insb
jecxz
ds
popa
xchg
int
mov
push
das
rcrl
bound
out
outsb
mov
sub
scas
jg
ret
xchg
loope
xor
sbb
jne
dec
add
cmp
cmpsl
or
inc
pop
fs
cld
mov
lret
dec
sub
lret
scas
xor
or
out
push
cmpsl
out
push
sub
add
and
enter
fstpt
add
fldl
add
loope
cmpl
jp
push
xchg
cmp
mov
iret
outsl
lock
pop
divl
repnz
push
sbb
jbe
xchg
loop
mov
andl
stos
outsl
push
inc
mov
test
das
in
and
call
scas
jg
push
sbb
fisttpll
mov
mov
pop
sub
push
or
cmp
sub
sahf
dec
ret
xchg
mov
fbstp
push
fndisi(8087
inc
pop
jecxz
cmp
imul
icebp
xor
push
stc
sub
cmp
in
lods
xchg
mov
ss
mov
pop
or
mov
adc
flds
cmpsb
cmpsb
fcmove
pop
jb
in
mov
decb
mov
adcl
xchg
mov
dec
xlat
mov
scas
int
inc
int3
pop
call
cmpsl
adc
xchg
int3
inc
xor
jp
sbb
lcall
clc
mov
jbe
or
xchg
lea
divl
add
mov
movsb
test
push
test
roll
bound
jae
jns
jl
xorl
cmpsb
mov
andl
fmuls
sbb
inc
jbe
in
xchg
pusha
inc
fnstcw
fs
push
out
hlt
icebp
fisubl
movsl
sbb
add
push
xchg
mov
xsha1
cmpsb
or
inc
lods
push
or
loop
aas
xor
outsb
pop
xor
orl
pop
outsl
mov
dec
negl
jne
or
mov
insl
add
fwait
mov
sbb
dec
daa
enter
rol
ja
data16
mov
mov
mov
gs
shll
in
push
sub
pop
pop
jge
pusha
fsubs
push
cld
stc
mov
and
shr
xor
clc
sub
adc
rcll
mov
idivb
lahf
movsb
mov
jno
in
in
and
cmc
hlt
sbb
inc
pushf
dec
mov
push
jne
jl
fidivrl
xchg
jno
sub
mov
stos
rol
mov
jo
inc
mov
xchg
out
enter
sbb
in
fsubr
cltd
and
xor
ss
movsl
imul
dec
jo
jno
loop
dec
pop
lahf
addr16
loopne
jge
jno
xlat
adc
stos
ja
movb
les
mov
addr16
sbb
rol
fdivs
test
lock
push
loop
xor
pop
adc
mov
xor
cmc
push
notb
sahf
sub
ss
sahf
ljmp
push
sub
dec
aas
out
sbb
aam
mov
mov
add
into
ret
inc
sahf
xchg
xor
pusha
or
daa
push
jae
fwait
xchg
add
jl
mov
add
std
mov
roll
pusha
pushf
or
fwait
jmp
sub
and
inc
adc
sub
sub
mov
jnp
pop
mov
xchg
jp
jmp
jge
and
or
add
cmp
mov
fiadds
cmp
cmp
outsb
insl
xor
adc
cmc
cmp
mov
shl
mov
xor
push
mov
in
call
lret
repz
pop
mov
cwtl
ljmp
inc
mov
cmpsb
sbb
mov
push
mov
ja
out
scas
cmp
fchs
fidivrs
jl
psadbw
pop
test
xor
mov
inc
push
shll
pop
or
xlat
out
adc
jbe
add
mov
aad
repz
das
stos
leave
mov
mov
sahf
outsb
sub
or
lods
jmp
ret
cmc
and
aas
dec
movsb
in
adc
mov
xchg
mov
rclb
jge
inc
lret
jo
push
xor
pop
cmpsb
pop
mov
loopne
fdivrs
int3
ss
gs
sbb
mov
divl
jge
pop
test
cld
dec
xchg
adc
in
pop
je
push
xchg
das
pop
lods
into
pop
lret
in
cld
dec
adc
inc
test
es
sub
pop
mov
jle
xchg
cmp
std
loopne
xchg
cmp
push
bound
xchg
and
fdivrp
lret
gs
ja
rcll
cmp
fs
imul
hlt
mov
xchg
mov
fsubl
aad
fs
inc
js
shll
adc
jmp
push
cmp
cmp
jge
movsb
test
dec
cmp
repz
push
mov
add
xchg
xor
mov
jmp
outsb
cmp
lcall
mov
jmp
fcomi
rcrb
sub
icebp
cmp
testb
movsl
dec
sub
loope
add
lret
dec
lcall
jmp
cmp
leave
xlat
push
add
lock
mov
lahf
pop
adc
sub
popf
mov
lods
cmp
in
ret
or
pop
mov
xor
sbb
and
mov
pop
jg
mov
lcall
xor
inc
cmp
push
xchg
enter
xchg
xchg
add
sbb
xchg
jg
scas
andb
push
dec
jecxz
and
or
inc
fldl
inc
ret
mov
mov
mov
mov
inc
lea
mov
cmp
xor
repz
popa
cmc
pop
int3
flds
testb
scas
insb
mov
inc
add
add
hlt
outsb
andl
adc
add
fdivrs
shlb
addr16
das
jne
mov
pop
mov
cmp
jg
neg
les
in
js
mov
inc
hlt
mov
inc
adc
das
int3
xchg
lods
jo
frstor
xchg
sbb
xchg
mov
xchg
nop
and
clc
fcoml
ss
sbb
pop
or
daa
or
jg,pn
mov
inc
push
aas
sbb
adc
and
pushf
fcmovb
xlat
bound
lret
xlat
and
fistps
pop
out
test
out
lahf
xchg
popf
out
rclb
js
jle
xchg
pushf
je
and
out
mov
jecxz
ljmp
rcll
mov
aad
leave
mov
out
inc
xlat
stc
mov
addr16
pop
test
repz
testb
push
out
dec
imul
pop
add
push
jns
je
dec
lret
daa
push
inc
or
lahf
pop
in
or
sbb
stos
sub
xchg
popa
xchg
out
mov
ficoms
call
lock
daa
pop
mov
fwait
ss
enter
int3
addb
rorl
mov
clc
out
sub
loopne
pop
xchg
push
cmp
lcall
xor
mov
aaa
jg
jp
or
push
pop
cmp
push
pop
test
pop
ljmp
fldenv
rcr
dec
lret
sub
out
lods
ljmp
orl
mov
push
add
pop
testl
push
pusha
nop
cmp
fnstenv
mov
sub
push
repnz
or
shl
push
jns
jl
push
lods
xchg
lahf
or
and
mov
or
cmp
into
push
cmp
adc
ss
mov
mov
lea
xor
adc
out
cmp
mov
ficomps
je
and
add
and
add
lahf
jo
push
rolb
sbb
dec
jecxz
inc
inc
enter
add
jle
inc
mov
notb
imull
sub
or
in
sahf
lods
aam
aad
pusha
push
andb
roll
xorl
cmp
lock
out
xchg
cmp
sub
pop
cmp
cwtl
rorl
lods
jno
clc
shlb
pop
repz
mov
das
pop
lods
outsl
leavew
fcompl
mov
xchg
pusha
dec
lods
mov
or
sqrtps
mov
xchg
push
leave
mov
gs
sahf
dec
mov
mov
ficoms
pop
or
popa
inc
mov
popa
cld
mov
rcrl
ret
stos
dec
mov
sub
xchg
ret
repnz
sbb
scas
add
in
in
mov
outsb
pop
mov
push
cmp
test
mov
jg
test
pop
lcall
xor
out
cmp
and
movsb
push
aas
adc
pop
mov
js
adc
xor
push
rcrl
shrl
mov
movsl
push
icebp
push
jb
sbb
mov
mov
inc
and
mov
pop
scas
mov
sub
mov
mov
shll
dec
push
enter
sub
cmpsl
icebp
cmp
ret
xchg
scas
adc
xchg
xor
pop
cmp
mov
repz
ret
pop
idivb
pop
sbb
or
imul
mov
push
add
stos
enter
jmp
cld
xchg
ds
xchg
gs
jb
outsl
dec
inc
cmp
and
sbb
nop
xor
aas
loopne
xor
mov
and
fwait
nop
jmp
shl
xor
popa
fcmovne
inc
mov
sub
cmp
gs
int
loope
fs
and
xchg
jae
pusha
frstor
sub
mov
into
lret
and
jo
xor
xor
lret
jge
mov
push
call
bnd
xlat
js
sub
xchg
jne
stos
mov
inc
mov
mov
data16
jo
cwtl
jp
lea
jo,pn
pop
mov
test
xchg
xchg
les
cmp
push
push
push
jno
sbb
jecxz
faddl
test
jmp
add
jg
hlt
scas
mov
mov
loop
cmc
ret
les
xchg
cmp
jne
pop
jle
call
jmp
mov
sub
pop
lea
pop
sub
cli
sub
test
mov
add
mov
pusha
sar
dec
pop
xchg
push
xor
push
out
repz
fwait
mov
stos
mov
lret
call
sbb
push
out
mov
aad
jbe
adc
mov
daa
and
inc
js
out
pop
fldt
dec
bound
notb
test
and
scas
mov
mov
add
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
js
mov
test
mov
add
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
js
mov
test
mov
add
xor
and
aam
les
hlt
cmp
dec
xchg
pop
test
js
mov
test
mov
add
xor
in
aam
outsb
xor
xchg
aas
sbb
jnp
dec
xchg
mov
outsb
sbb
bound
jno
cs
faddp
ret
in
xchg
sahf
test
push
pop
inc
dec
jne
outsb
adc
ds
into
cmc
fsubp
out
xchg
std
test
mov
inc
dec
jne
gs
pop
add
xor
cmp
sub
fcomip
loopne
call
and
jne
or
sbb
push
xlat
fisubs
out
inc
cli
loop
sbb
mov
inc
loop
mov
negb
lock
mov
cmpsb
imul
out
ret
fninit
mov
das
leave
pop
and
inc
dec
xlat
push
decl
ret
rorb
in
pusha
imul
scas
push
push
bound
jle
pop
jge
cli
into
insb
and
mov
adc
sbb
jno
xor
les
data16
ds
das
aam
int
js
outsb
out
add
movsl
push
imul
movsl
ds
out
xchg
add
mov
add
int
sti
jb
cmpsl
mov
jne
gs
push
add
aaa
aad
out
notl
mov
es
xor
outsl
jo
push
pop
push
mov
mov
stos
mov
fst
mov
xor
push
and
jo
dec
cmp
pop
pusha
inc
cmpsl
cmpsl
mov
lods
in
loopne
iret
lret
xor
inc
sub
pop
add
push
jb
push
xor
faddp
into
cmc
in
xchg
sahf
test
push
pop
inc
dec
jne
outsb
adc
ds
into
cmc
in
xchg
sahf
test
push
pop
and
call
and
imul
dec
push
movsl
lret
loop
in
cmpsl
mov
jle
dec
lahf
mov
pop
lcall
push
lods
mov
push
out
subb
leave
je
fcomp
mull
sub
mov
mov
xor
dec
pop
xchg
mov
sub
roll
test
into
or
cmp
fs
inc
ret
adc
xchg
mov
lods
lds
int
out
adc
sub
test
jmp
shld
push
mov
out
imul
push
dec
insb
add
jo
jle
int
pop
inc
fneni(8087
cmp
sti
es
inc
ficoml
inc
mov
xchg
mov
fistpl
ja
shrl
addr16
mov
sbb
fcomps
xorl
add
adcl
xchg
add
inc
lods
addl
pop
jg
sarl
cmp
inc
bswap
sub
imul
push
sub
jg
add
cmp
ret
pop
enter
int
mov
jmp
xor
fbstp
in
aas
mov
lds
jle
mov
repz
xchg
shrb
mov
push
jle
jnp
rorl
and
dec
add
pop
mov
inc
adcb
pop
cmpsl
cli
xor
cmp
stc
add
subb
ficoml
btc
xor
sbb
or
dec
push
call
lock
mov
or
hlt
sbb
stos
mov
xor
push
gs
xchg
sbb
int
shlb
mov
sbb
mov
aaa
cmc
adc
xchg
popa
icebp
out
xor
push
lds
cmp
scas
cmc
daa
mov
fildll
lods
mov
push
sti
xchg
aaa
or
mov
idivb
cmp
ret
sarl
bound
jne
jmp
outsl
in
mov
push
cmpl
inc
pop
addr16
jb
dec
jmp
cmp
pop
outsl
clc
fsts
fs
inc
push
mov
popf
jge
jmp
nop
in
add
daa
sbbb
xchg
pop
pop
inc
ja
rclb
mov
icebp
dec
movb
push
aaa
outsb
xor
mov
xor
or
jo
mulb
sbb
adc
push
mov
pop
dec
aad
ljmp
pop
in
xchg
ret
pop
pop
test
or
mov
pop
inc
dec
movsl
and
ret
pop
add
mov
cmp
test
or
pinsrw
loopne
aaa
adc
ret
stc
sbbl
test
adc
inc
jno
call
dec
div
movsb
jg
aas
fstl
int
es
push
mov
sbb
scas
adc
jge
aas
lret
or
int
xlat
insl
push
mov
pop
sbb
adc
out
xchg
dec
mov
add
push
outsl
popa
adc
mov
and
add
pop
js
int3
test
repnz
cmp
sub
push
cli
or
icebp
cmpsb
sub
loop
lahf
cmpsb
cmp
fistpl
inc
dec
arpl
test
jl
xlat
push
repnz
sub
jne
xor
dec
out
insb
xchg
pop
sbb
sub
imull
mov
mov
xchg
jp
or
inc
ja
imul
sbb
mov
sub
sub
push
arpl
push
add
pop
inc
mov
movsl
add
lret
push
repz
pop
mov
into
pop
insb
add
sar
inc
out
push
mov
push
cmp
movsl
fidivrs
xchg
sub
sti
push
pop
or
mov
cmp
rorl
add
test
mov
fsubp
adc
popa
jae
add
rcll
dec
sti
adc
cmpb
popa
stc
sbbb
sbb
inc
stos
or
or
adc
lods
jo
push
fcoms
pusha
gs
shrb
negl
lcall
daa
subb
inc
outsl
jmp
pop
stc
xchg
pop
add
jae
dec
jle
pop
mov
movsl
xor
popf
mov
and
mov
fadds
mov
mov
shrb
add
add
mov
and
js
nop
sub
outsb
jp
arpl
push
nop
stc
cmpsb
lods
jmp
dec
mov
test
pop
js
mov
cli
sbbl
gs
ljmp
cs
lock
in
jnp
test
push
sbb
cwtl
dec
pushf
xchg
rolb
test
mov
mov
push
ja
add
pop
cld
mov
daa
and
ja
mov
push
or
or
adc
pushf
pop
pushf
add
sub
andb
cs
and
lahf
rcll
stos
and
xor
xor
pop
lock
stos
dec
mov
loope
mov
out
into
or
popf
movzwl
sub
jp
xor
mov
jb
cmp
and
or
test
dec
jle
mov
and
and
sbb
arpl
jge
pop
clc
arpl
pushf
or
mov
push
sbb
adc
dec
jae
shlb
test
idiv
aaa
pop
adc
dec
mul
pop
repnz
in
xchg
out
iret
shll
ret
add
mov
or
rcll
adc
je
out
or
push
fcmovb
lret
adc
sbb
aas
enter
sub
lock
and
adc
inc
dec
push
pop
decl
repz
pop
cmp
test
inc
es
jecxz
mov
mov
jge
ss
xchg
xor
ret
movsb
lds
jge
jle
and
mov
mov
xor
test
mov
inc
ljmp
in
ds
shlb
sub
lods
mov
cmpsb
cmp
in
mov
push
nop
ss
push
mov
nop
mov
sbb
xchg
das
stc
mov
cwtl
or
lock
push
dec
jb
cmp
push
mov
sti
or
inc
push
shrb
or
pop
je
dec
xor
leave
xchg
out
es
test
jecxz
push
shrl
das
dec
inc
lret
push
push
mov
mov
jns
in
stos
push
mov
xlat
dec
outsl
lret
fists
push
aad
ja
mov
inc
pop
or
mov
inc
mov
mov
push
mov
fwait
inc
fisubl
mov
add
lea
sarl
sahf
hlt
test
sub
int3
in
inc
notb
adcb
push
add
sarb
mov
lods
imul
fldcw
sbb
aas
rcll
jg
fs
sbbb
pusha
push
pop
mov
jge
adc
sub
clc
jbe
cmp
sub
pushl
xor
dec
cmp
test
mov
mov
xor
or
jo
dec
iret
aam
pop
out
aaa
pusha
xchg
sub
daa
xor
mov
xor
push
add
push
adc
push
js
pop
inc
bound
or
xor
xchg
leave
push
pop
cmp
shrl
outsb
mov
mov
orb
lcall
ja
mov
push
inc
mov
add
aas
adc
jno
xchg
shld
out
negb
fstl
add
iret
js
inc
push
sub
jb
sub
mov
xchg
jmp
or
fnsave
sbb
jmp
cmp
test
lahf
inc
div
stos
and
add
pop
lock
cmp
in
repz
subl
movl
lock
je
push
sub
pop
push
lea
in
movsb
mov
mov
add
push
incl
pop
or
add
sbb
dec
mov
and
sbb
mov
sub
lds
int
popa
loop
push
fwait
add
and
pop
ret
popa
data16
lcall
nop
sbb
inc
ficomps
pushf
pop
imul
mov
lock
lret
lret
insl
cmp
data16
mov
movsb
push
xchg
mov
jge
add
sub
inc
andb
repz
add
movsl
xlat
mov
repz
jmp
pop
adc
lock
or
cli
rorl
add
mov
stos
cmp
add
or
orl
flds
pop
loop
xlat
mov
jo
jnp
or
xor
in
jns
cmp
mov
sbb
stos
inc
pusha
push
clc
js
mov
ja
jg
movl
jge
ljmp
insb
sbb
mov
mov
dec
pop
adc
and
out
push
push
mov
mov
imul
mov
pop
cmpsb
enter
iret
jbe
lods
add
xchg
push
loope
fisttpl
pushf
mov
mov
cwtl
inc
clc
fisubrl
cmpsl
rcrl
and
iret
mov
mov
sbb
add
push
dec
pop
pop
clc
je
std
jae
les
pop
bound
push
add
in
jl
pop
lea
xor
mov
bndstx
lahf
or
pop
push
jg
imul
shrb
out
or
stos
sub
push
cmp
icebp
insl
orb
test
push
xorl
adc
push
jae
sbb
inc
xchg
fs
and
out
jbe
cmpsb
aad
jb
sub
xor
int3
mov
lret
pop
xchg
sbb
pop
lock
aad
mov
cmpsb
jno
lock
clc
mov
add
or
mov
pop
mov
cmp
lea
jle
popa
rcl
xchg
fdivrs
xorl
cwtl
ss
jns
inc
push
mov
push
mov
pop
std
fidivs
bound
into
cmp
insb
dec
gs
adc
shrb
xchg
fidivrs
mov
jns
add
jle
pushf
fldt
mov
enter
nop
pop
pop
fdivrs
add
push
xchg
stc
and
imul
push
pop
repnz
cmp
mov
cmp
cmp
jl
inc
cwtl
loopne
xchg
ss
jb
ds
popf
jb
shrb
cmp
pop
out
mov
sub
cmc
add
test
mov
mov
test
fistpll
leave
push
cmp
mov
les
int3
dec
dec
or
add
sahf
es
inc
dec
js
or
stc
jg
push
cmp
repz
stos
jns
scas
mov
xchg
fcmovb
scas
lret
lock
mov
jns
add
mov
dec
and
mov
enter
fwait
pop
fs
ret
push
cwtl
xchg
movsb
call
jle
and
mov
pop
daa
icebp
add
inc
stos
mov
or
pop
pop
leave
jle
sbb
sti
pop
push
in
pop
jns
add
aaa
sti
repnz
adc
dec
aaa
mov
js
fldl
lods
mov
shrb
in
test
dec
test
ret
xor
sub
fidivs
pusha
icebp
xchg
fistpl
jg
lret
xchg
jg
jbe
push
cmp
dec
rorl
xor
add
xchg
xchg
and
xchg
jp
xchg
in
jge
rcrb
lods
fisttpl
mov
dec
subb
jne
mov
mov
gs
out
mov
jmp
or
add
hlt
adc
sbb
sub
xor
lods
and
pop
mov
cmp
movsb
pop
mov
mov
outsb
insb
rcrb
dec
sbb
shrb
jnp
movl
jo
mov
nop
aad
movsb
aas
in
mov
or
push
jg
inc
int3
ljmp
andnps
sub
and
xor
or
add
sbb
mov
and
test
shrl
cmp
sbb
pop
add
jnp
sbb
or
push
int3
add
int
mov
inc
xchg
inc
lods
imul
mov
mul
cmpsb
jne
adc
sub
out
jl
lock
sbb
icebp
xor
stos
jne
lret
inc
xchg
push
dec
insl
std
adc
sub
mov
pop
jns
jmp
inc
or
cmp
mov
aas
or
adc
aam
and
push
and
xchg
adc
idivb
cmp
daa
push
inc
shlb
sbb
int3
mov
orb
adc
das
and
imul
add
xorb
push
dec
mov
sub
mov
mov
mov
xchg
int
rep
mov
les
pop
imull
mov
pop
jl
pushf
int3
push
sbb
dec
repnz
add
shrb
test
jne
xchg
pusha
pop
out
mov
mov
jo
sub
mov
lds
cli
xchg
lods
xor
sbb
into
add
repnz
fdivrl
inc
lds
pop
mov
dec
xlat
enter
cltd
shlb
fsubl
or
cld
clc
and
pop
cmp
pop
mov
aas
lods
or
cmpsb
dec
sub
mov
mov
mov
and
lods
mov
jge
test
lcall
mov
and
cltd
mov
in
jns
ret
mov
and
in
or
ret
and
sbb
outsl
popa
imul
sub
xlat
add
or
nop
clc
and
jbe
test
jo
enter
bound
jp
lock
test
mov
inc
fstl
pop
jg
sub
cmp
dec
dec
lea
xor
cltd
aam
jb
push
jae
lock
jae
pop
cmp
stc
mov
movsb
lock
icebp
mov
cmp
iret
and
push
inc
enter
adc
bound
inc
shrl
jo
in
xchg
add
sub
mov
aaa
add
pop
adc
aam
mov
jae
fisubl
xlat
shrb
cmpsl
lds
movb
mov
mov
shrb
or
cli
sahf
add
add
pop
mov
mov
pop
lods
mov
push
jns
mov
cs
aas
cs
push
add
inc
sbb
adc
clc
inc
sub
jp
or
imul
cmp
xor
and
out
imul
jle
xchg
pop
in
mov
mov
jle
loope
js
sbb
lods
in
in
div
sahf
cmpsb
int
daa
jmp
loop
lds
inc
jnp
add
loopne
ljmp
push
out
inc
push
lea
lret
sbb
out
mov
mov
adc
add
incl
mov
in
jae
or
pop
xchg
add
dec
std
iret
pop
xchg
jmp
bound
das
add
mov
cmp
mov
addr16
jnp
sahf
popf
aas
imul
xchg
scas
cmp
call
mov
fcoml
ds
push
mov
push
sahf
sub
loope
dec
loopne
ss
lea
or
push
add
dec
nop
addr16
pop
ss
daa
mov
jle
adcb
imul
jbe
xlat
or
mov
into
mov
hlt
fucomp
roll
sub
inc
call
jp
mov
add
dec
repnz
jbe
loop
cmp
ljmp
jns
sbb
movsl
addr16
aam
push
sub
xor
hlt
push
stos
sbb
in
lahf
xchg
cs
inc
test
es
inc
add
test
cmpsb
cld
lcall
scas
nop
out
mov
mov
inc
xchg
jl
leave
leave
aad
push
mov
rcrb
add
inc
pop
enter
xchg
stos
add
imul
loopne
outsb
cmp
testb
cmpsb
gs
shl
cmp
aam
xor
xor
test
ljmp
aam
movsb
in
mov
lods
push
ret
cmp
mov
cmp
sub
repz
jnp
es
std
iret
out
pop
sti
lea
stc
scas
addr16
test
sub
add
insl
in
ret
push
mov
inc
aaa
mov
les
scas
incl
jb
xor
mov
add
xchg
int
jp
and
call
leave
cmp
xor
icebp
fmul
subl
push
push
or
dec
aaa
out
cmp
jb
ret
mov
cmp
xor
arpl
movsl
cmp
popa
or
mov
aam
sarl
cmc
inc
push
addl
mov
xchg
pop
out
test
mov
add
ficomps
fwait
xchg
pop
out
push
fcompl
jbe
push
jb
jnp
push
xorb
mov
sub
mov
cmp
inc
jae
dec
sub
mov
mov
mov
aaa
xchg
xchg
test
pop
fcomip
mov
insl
or
mov
pop
pop
add
mov
sub
ljmp
mov
jecxz
add
add
mov
jnp
sbb
rorb
inc
ret
in
jbe
test
jno
test
out
leave
cmp
pop
jmp
outsl
hlt
ss
sbb
xchg
nop
jno
lds
and
scas
xlat
daa
and
out
int
out
and
pushf
adc
stc
sbb
lods
sub
cld
jp
lds
fisubrl
cwtl
lcall
or
out
jnp
jge
andl
jecxz
aad
adc
dec
je
ret
outsb
subb
lods
xchg
out
mov
jb
fcoms
out
ror
movsb
pop
jno
insl
push
repz
mov
add
mov
dec
mov
inc
rol
in
into
fsubr
cmp
mov
pop
mov
int3
adc
stos
movsl
push
rorl
mov
aam
inc
lcall
out
jo
jne
jns
or
adc
in
incb
lret
pop
lahf
pop
unpcklps
mov
fmulp
stos
cmpsl
ficompl
inc
and
mov
lods
daa
pop
mov
fistl
in
lcall
add
rorb
sbb
push
je
nop
adc
repz
lea
mov
or
cmpsb
dec
call
inc
mov
mov
push
xor
xchg
arpl
stc
dec
and
imul
repnz
scas
ss
or
adc
lcall
lods
dec
into
pop
mov
xor
inc
cmp
or
inc
imul
out
jecxz
pop
test
and
mov
push
dec
mov
ja
jo
inc
fildl
cmp
add
xorb
out
adc
enter
or
fdivr
je,pt
ror
xor
cmc
pop
out
mov
cmp
cmc
push
xchg
and
stc
sbbl
jp
mov
jge
sbb
icebp
lds
ljmp
call
ret
icebp
dec
xchg
fdivrs
xchg
mov
stos
rorb
mov
sbb
adc
inc
push
or
out
inc
dec
jge
insl
cwtl
test
es
mov
lods
popa
sub
pop
inc
xchg
ret
and
stc
cltd
ror
daa
scas
inc
mov
xor
mov
scas
mov
pop
sbb
inc
add
xor
push
lock
in
shl
xchg
lods
mov
jl
or
xlat
sti
lret
cmc
or
pop
jae
xor
jmp
add
icebp
xchg
fldenv
and
aaa
cmpb
hlt
out
add
in
cmpsb
push
lods
testb
inc
xchg
out
js
mov
or
pop
mov
fdivrs
mov
imul
jge
push
loope
xlat
and
in
mov
xchg
push
cmp
aam
insl
cltd
shlb
xchg
mov
iret
cmp
aas
xchg
mov
mov
test
xchg
enter
cmp
push
or
or
aas
push
pusha
mov
pop
dec
cmp
cmpb
stos
jle
mov
ljmp
pushf
out
cmp
adc
mov
stc
inc
xchg
mov
pop
jecxz
dec
mov
pop
push
out
sbb
mov
enter
sub
xor
dec
arpl
adc
and
aas
sub
popf
lahf
jecxz
in
leave
fimuls
push
dec
sub
xchg
imul
adc
ret
cmpsb
orl
lock
sub
cltd
ret
std
sbb
fsubl
js
insl
pop
icebp
xchg
pusha
sbb
lret
xor
lret
pusha
mov
xchg
aad
loop
notb
shrl
jecxz
shrb
xchg
mov
push
sbb
xchg
jbe
fwait
mov
jp
fstl
jne
andb
mov
mov
xchg
lock
sub
pop
fld
das
add
pop
mov
in
mov
cmp
push
xchg
mov
push
or
add
adc
or
movsb
cmpsl
mov
dec
xor
ret
push
inc
mov
cs
mov
dec
xchg
outsb
adc
ds
into
cmc
in
xchg
sahf
test
push
pop
inc
dec
jne
outsb
adc
ds
into
cmc
in
xchg
sahf
test
push
pop
inc
dec
jne
outsb
adc
ds
into
cmc
in
xchg
sahf
test
push
pop
inc
dec
jne
outsb
adc
movsl
cs
cmp
in
loop
or
push
arpl
jecxz
shl
ret
repnz
cmp
and
jae
arpl
bound
xor
and
repz
shl
ret
repnz
mov
mov
inc
arpl
xor
jb
add
adc
pusha
add
repz
shl
ret
repnz
mov
mov
ljmp
push
inc
dec
jge
push
insb
xor
lea
jno
js
mov
fsubl
pop
aaa
adc
aas
lds
lock
xchg
outsb
push
cmpsb
test
insl
sbb
lods
or
dec
ja
sbb
arpl
loop
fcoml
sub
loop
pop
jae
xor
lea
jecxz
nop
fldl
xor
jecxz
repz
repnz
xchg
jae
orl
movsl
ds
popf
stos
and
push
or
andb
pop
subl
sbb
inc
mov
adc
xchg
mov
pop
test
push
imull
imul
push
mov
mov
es
jae
pop
and
adc
add
lods
ret
shl
ret
repnz
mov
mov
inc
arpl
bound
xor
and
adc
add
lods
cmpsl
sarb
out
xchg
aam
out
sbb
shll
cmp
daa
xor
arpl
jle
ja
lods
ret
cmpsl
loop
adc
notb
cmp
daa
sub
es
inc
inc
sbb
test
jecxz
repnz
jae
arpl
bound
xor
and
adc
add
repz
shl
ret
repnz
mov
mov
inc
arpl
bound
xor
and
adc
add
repz
pop
push
xchg
mov
dec
test
loope
ja
mov
push
mov
icebp
je
or
shr
cld
jmp
ret
scas
xor
shll
in
cmpsb
add
push
or
pop
mov
les
push
cmpsb
cmpxchg
cs
pop
in
lahf
loopne
cmp
into
xchg
push
loop
jno
sbbl
repnz
mov
mov
lahf
cmp
testb
jp
ja
popf
pop
mov
mov
mov
pop
aaa
stos
orb
cmp
aas
scas
sbb
leave
cmp
ljmp
xorb
xor
mov
mov
inc
adc
popa
enter
dec
jo
add
push
mov
loope
lods
fstps
pop
imul
lea
clc
mov
cmpl
vorps
adc
fiaddl
add
mov
sub
lcall
loopne
mov
pop
push
in
mov
dec
or
jge
cld
sbb
je
mov
mov
arpl
xchg
movsb
and
mov
mov
jge
fmull
in
sti
loope
mov
jbe
dec
and
loope
pushf
enter
dec
jp
mov
and
push
and
mov
sbb
add
add
pop
movsb
aam
dec
loopne
movsl
xlat
adc
cltd
shrb
enter
ror
adc
cmpsb
cmp
fisttpl
inc
cli
pusha
mov
adc
push
in
loope
pop
cmpl
mov
dec
lahf
aad
scas
xchg
jnp
lea
pushf
hlt
fistpl
mul
push
sub
mov
movsl
aas
imul
mov
aad
dec
sbb
inc
push
sub
xor
testb
xchg
jl
movsl
mov
pop
adc
repnz
xor
or
outsl
inc
mov
and
inc
cld
lahf
aam
mov
loopne
aaa
ss
es
je
aas
adc
push
or
inc
movsb
xchg
movsl
and
lods
rclb
and
int3
and
clc
mov
or
and
faddl
mov
and
add
fmuls
dec
addl
push
or
jg
sub
addr16
inc
cmp
lret
adc
repz
test
push
idiv
in
jo
loopne
and
add
and
ss
pop
cmp
fcomps
popa
push
and
cltd
cmpsb
xlat
cmp
in
xchg
sti
outsb
adc
int
sub
pop
ret
movsl
inc
jl
scas
push
mov
jg
xchg
cmpsb
cmpsb
out
testb
cmp
xchg
scas
sbb
cmpsl
pop
add
sub
push
or
inc
inc
dec
mov
nop
roll
cmp
movsl
dec
loope
cmp
mov
mov
jge
or
imul
lods
flds
cmp
mov
movsl
cltd
cmp
outsb
jne
aam
sbb
cmp
mov
pusha
adc
jecxz
add
dec
sub
rcrb
sub
push
lret
cmp
sub
loopne
es
imul
push
mov
sbb
push
data16
and
mov
xchg
ljmp
aas
xchg
sub
inc
xorl
mov
cmp
fucomp
xlat
insl
das
in
sub
in
add
std
dec
push
gs
push
xor
lret
push
je
decl
mov
aad
push
add
pop
stos
cmp
lods
jae
add
and
out
fimull
and
stc
mov
sbb
sub
or
cmp
mov
xor
in
dec
push
lret
add
fisttps
ret
outsb
mov
test
shrb
add
xchg
pop
movsl
pop
push
lods
dec
and
sahf
sbb
mov
fstpt
shll
ret
outsb
rolb
clc
inc
lcall
dec
imul
dec
movsb
ljmp
bound
xchg
das
cld
sub
test
sub
out
jae
mov
mov
outsl
movl
cmpl
punpckhdq
lods
aam
mov
cwtl
xor
jle
xor
xor
cmp
popa
mov
mov
popa
jg
call
dec
les
push
in
fdivl
cmp
fstpl
sbbl
xor
jb
cmp
ficoml
cwtl
cmp
pop
mov
jns
mov
movsb
pop
push
xchg
adc
or
in
jbe
ret
jbe
aad
mov
pop
jno
in
cli
inc
je
in
int3
add
jecxz
sub
outsl
sahf
mov
sti
data16
out
movsb
sbb
jne
xchg
or
and
push
mov
jge
xchg
cld
push
or
mov
lea
scas
idivl
nop
inc
sbb
cmp
push
push
mov
scas
int3
lcall
clc
cmp
dec
dec
jnp
int
pop
mov
xchg
jle
xchg
aam
or
das
jle
lcall
cli
loope
cmp
aad
sbb
adc
add
push
sar
aad
lret
inc
mov
enter
test
push
xchg
push
das
xchg
add
daa
mov
dec
rcrl
nop
pop
int3
adc
cmp
add
pop
xchg
pop
xchg
push
push
movsb
shr
pop
loope
adc
sar
stos
pop
inc
cmpsb
sbb
and
clc
movsb
inc
and
xchg
sti
fimuls
inc
mov
mov
ljmp
inc
add
add
addl
inc
notl
and
adc
lret
sarb
fs
pop
and
pushf
inc
and
repz
adc
mov
mov
nop
loope
lcall
rcrl
mov
nop
sub
lods
jmp
jl
lea
jnp
sbbl
cmpsb
push
popa
xchg
lods
xlat
and
fxch
pop
orl
push
xor
loop
mov
mov
sbb
add
mov
xorb
in
sbb
jnp
mov
fwait
push
or
mov
sbb
scas
roll
pop
xor
popf
inc
add
arpl
push
arpl
cmp
movsl
push
xchg
add
mov
mov
in
jg
fldt
dec
or
xor
aad
dec
mov
mov
xor
sub
lcall
stc
rclb
lods
and
paddusw
jp
sbb
repz
out
or
sbb
inc
cltd
bnd
in
enter
test
dec
rcl
hlt
add
jp
ret
push
lea
cmpsb
aaa
push
testl
inc
aam
fstpl
mov
loope
jb
test
cmp
jbe
shr
xchg
popf
push
mov
cmp
push
lods
fstpt
dec
je
leave
das
insb
subl
push
aaa
fs
adc
bound
mov
fs
ljmp
cltd
loop
and
fistps
inc
cmp
lret
xchg
dec
lea
sub
pcmpeqd
adc
inc
ror
mov
dec
adc
push
scas
stc
and
gs
fnstcw
mov
out
inc
sub
pop
mov
add
cmp
lods
aas
mov
lret
mov
sub
mov
outsl
or
lcall
call
pusha
in
push
fbstp
lret
sar
js
push
jmp
pop
adc
clc
cmp
lds
in
aam
cmpsl
mov
fists
jg
les
outsl
loope
and
aad
leave
mov
xchg
mov
add
cld
and
cmp
inc
out
mov
fprem
imul
fwait
aaa
imul
mov
add
or
jle
lods
adc
ds
push
inc
shrl
and
xor
dec
and
imul
sbb
mov
cmp
cmp
sub
nop
mov
fstps
jo
mov
fadds
mov
and
lret
sub
pop
loop
fcomps
xchg
leave
sahf
fmul
jno
fpatan
rcr
jb
dec
in
dec
dec
das
stc
mov
adc
test
inc
dec
pop
lock
jbe
lock
xlat
arpl
orl
cmp
jbe
sbb
ficompl
push
cmp
push
jle
push
adc
mov
ljmp
pop
cmc
push
dec
push
inc
pop
and
ja
outsl
test
imul
insl
rol
enter
sti
fdiv
mov
sub
xorb
aaa
mov
sub
hlt
inc
or
cmp
int
jno
daa
out
push
xor
paddusb
xlat
xor
push
mov
gs
add
or
mov
iret
inc
stos
enter
nop
cmp
fistps
lock
push
mov
negl
jge
adc
mov
cmc
add
stos
adc
scas
in
stos
jbe
out
not
xor
adcb
jae
mov
sbb
scas
sti
and
iret
cltd
and
icebp
pop
rdpmc
or
sbb
aad
rclb
xchg
cmp
and
fidivrl
int3
mov
imul
mov
sub
inc
data16
loopne
mov
je
hlt
push
stos
sbb
scas
xor
int
sbb
sub
mov
aam
sub
std
mov
mov
repnz
int
dec
dec
jmp
mov
push
cmc
inc
dec
daa
mov
cmp
loop
lret
inc
imul
adc
or
mov
inc
adc
fcoms
je
sbbl
xor
xchg
call
cmp
arpl
in
lds
mov
mov
call
repnz
xchg
cmp
cwtl
sub
and
in
adcb
sub
out
loopne
loope
sbb
std
jmp
push
stc
xchg
xor
scas
bound
xchg
sub
mov
mov
mov
sub
in
xchg
hlt
dec
sbb
pop
jg
or
lcall
pop
stos
sbb
sbb
into
sub
cwtl
sub
imul
rcrb
mov
jp
pop
mov
pushf
fstp
sub
xor
faddl
or
in
push
leave
pop
dec
pop
mov
cwtl
mov
scas
sub
lahf
push
push
cmp
mov
aam
and
add
ret
xor
and
inc
inc
cwtl
sbbl
cmp
fnstsw
add
xor
dec
inc
xor
ret
xor
xlat
add
jae
orw
inc
add
aad
rcrl
mov
and
repnz
add
or
loop
imul
adc
cmpsl
dec
mov
rcll
int3
mov
rcl
xorl
movsb
sbb
mov
mov
xchg
test
or
jg
mov
push
pop
push
pushf
add
mov
insb
imul
jnp
popl
mov
mov
jle
cltd
sbb
je
or
sbb
cmp
ss
sub
push
mov
mov
hlt
cmp
adc
scas
fstpl
loopne
inc
push
push
dec
sub
sub
xchg
leave
ja
loopne
adcl
jmp
push
roll
and
aas
dec
in
popa
jbe
cmp
arpl
test
in
scas
leave
xchg
scas
inc
and
xlat
and
insb
stos
mov
jg
mov
sbbb
call
rcr
stos
dec
push
and
sbb
into
repnz
jle
stc
lret
or
popf
sbb
add
xor
popf
jmp
outsb
pop
push
sbb
mov
mov
push
repz
sahf
xchg
inc
pop
xchg
mov
movsb
lods
loop
xchg
jecxz
popa
push
jg
stc
xchg
mov
dec
or
jg
mov
xor
les
mov
pop
pop
jecxz
lods
xor
aam
aas
subl
pop
stos
outsb
mov
fldl
int
jno
imul
pop
aaa
mov
xchg
mov
or
jle
lods
dec
mov
dec
mov
jb
rclb
lods
pusha
idivb
xor
sub
xor
fimuls
fistpll
inc
fistpl
stos
nop
mov
scas
das
mov
sti
adc
mov
fwait
insl
mov
cmp
mov
xchg
insb
lret
fwait
adcb
clc
pushf
push
dec
sub
in
and
xor
pushf
xchg
mov
shll
adc
test
dec
sbb
jle
xchg
ljmp
test
std
in
xlat
xor
movsb
adcl
mov
aas
data16
imul
popa
xchg
mov
loope
add
cli
aam
mov
sahf
jmp
and
imul
xorl
jnp
mov
jp
mov
cmp
cmp
dec
push
lahf
cmpsl
xor
or
push
loope
daa
mov
mov
iret
in
jnp
faddl
add
add
push
mov
jno
push
sub
rolb
outsb
mov
sbb
push
xlat
pop
mov
and
add
inc
or
sbb
push
adc
mov
dec
xchg
std
sub
rorb
mov
cmp
jb
cmp
dec
dec
jno
sub
pop
lahf
out
xchg
xchg
jge
insb
xchg
in
arpl
outsb
sub
rclb
or
sbb
int3
jle
and
or
pop
adcl
fisttps
adc
imul
lods
xchg
mov
ret
mov
cmpsl
mov
cmpb
inc
inc
lret
lea
dec
shlb
add
cld
cmp
xchg
add
iret
push
cmp
sub
movsl
add
xchg
push
das
lock
aas
out
popf
mov
or
aam
adc
xchg
mov
cmp
aad
imul
adc
lcall
adc
xchg
into
mov
push
cmp
cmc
aam
pushw
mov
cltd
popf
xor
jge
and
bound
push
ljmp
je
dec
mov
pusha
into
jl
mov
or
stc
fbstp
fadd
lcall
or
and
cwtl
in
add
mov
xchg
inc
inc
testb
scas
dec
stos
pushf
jns
stos
ret
mov
aaa
lods
cmp
or
jbe
insb
divl
lea
outsl
mov
xchg
mov
jle
int3
neg
mov
sbb
push
jo
ror
pop
push
mov
mov
lods
mov
dec
sahf
icebp
cs
mov
out
mov
pop
xor
ds
icebp
ja
int3
mov
sarb
and
das
xor
and
jae
pop
push
insb
push
test
xor
add
push
xor
les
mov
push
ret
sub
xchg
inc
or
jbe
out
lods
je
rorl
fmuls
test
cmc
xchg
and
pop
movsb
cli
fadd
sub
and
add
es
ljmp
lods
and
inc
loop
jns
pusha
fidivrl
icebp
arpl
push
pop
test
mov
je
stc
scas
xchg
push
test
mov
mov
jbe
outsb
xchg
lea
pushf
xchg
je
in
cmp
idivl
cmp
xchg
sub
cld
adc
mov
icebp
pop
mov
test
pop
jg
nop
dec
jno
int
sub
mov
and
cmc
jne
and
punpcklbw
lock
jns
pop
aas
movntq
xchg
cmpsb
out
or
in
sahf
push
outsl
movsb
daa
aaa
cmp
jo
orl
stos
sbb
push
add
popa
data16
sub
addb
inc
cmc
mov
xor
popa
mov
addb
inc
rcll
icebp
cltd
mov
stos
ljmp
aas
mov
dec
xor
stos
mov
cmpsb
gs
out
lahf
std
xor
mov
fbld
push
cmp
sahf
and
in
testb
pop
lcall
push
imul
dec
aaa
pop
loope
pop
out
push
jmp
stos
dec
fisubs
aaa
push
mov
jge
xor
out
dec
push
sub
sub
aaa
adc
xchg
test
stos
mov
inc
cli
push
jg
push
push
rorb
out
pop
sbb
mov
fstpt
mov
mov
addl
xchg
push
cs
outsl
push
icebp
pop
lcall
push
adc
ficoms
sbb
into
nop
mov
nop
cmp
jp
popa
or
mov
mov
rcll
in
rclb
dec
jne
mov
pop
addr16
bound
add
and
jnp
pop
xor
in
pop
test
call
out
cmp
mov
test
xor
sahf
dec
mov
and
mov
rcll
test
loopne
aam
push
aaa
daa
and
ficoms
std
cmp
xlat
pop
je
decl
test
out
in
adc
dec
sbb
pop
test
ret
das
imul
cmpsl
push
fwait
icebp
push
pop
out
sbb
xchg
cmp
cmp
sbb
adc
pop
dec
mull
cmp
ljmp
sub
dec
sub
dec
loope
mov
jb
xor
xchg
and
test
in
aaa
pop
pop
int
push
sub
loopne
repnz
cmp
movsl
push
add
int3
dec
add
adc
adc
je
js
je
pop
jne
pop
xchg
aam
inc
pop
fimull
lock
mov
jae
shrb
loope
pop
mov
hlt
daa
shlb
inc
xor
add
scas
in
rclb
cmpsb
sub
ja
ja
ret
orl
mov
pushf
mov
inc
mov
test
outsb
repz
xchg
sbb
adc
push
inc
test
rdtsc
inc
mov
cmpb
adc
call
dec
ss
mov
imul
sub
out
insb
movsl
incl
pop
cmp
mov
xchg
cmpsl
rcl
shrl
push
les
dec
mov
sbb
imul
sbb
adc
daa
sahf
jb
lea
cwtl
arpl
dec
in
add
out
pusha
pushl
popf
xor
pop
inc
mov
mov
ja
loope
inc
mov
push
xchg
push
xchg
jb
push
sub
arpl
mov
cmp
in
and
sub
push
sbb
fimull
mov
int3
sbb
push
ds
and
push
fisubrl
xchg
ror
mov
jmp
fsubp
stos
inc
and
mov
je
add
pusha
add
xchg
ret
rol
fs
test
enter
dec
jae
push
mov
lret
data16
pop
sbb
or
or
push
pop
dec
iret
mov
pushf
mov
inc
inc
adc
mov
andb
sbb
fs
pop
mov
cmp
pushf
aas
or
divl
test
mov
lods
addl
popl
aas
js
xor
cmp
pop
shrl
mov
cmp
ja
daa
push
push
mov
in
lcall
ficompl
subb
push
pusha
out
data16
cmp
pusha
mov
iret
outsb
fsubs
mov
dec
pop
sbb
xlat
mov
movsl
outsl
add
add
mov
xor
stc
xor
hlt
cmpsb
dec
addr16
scas
out
fsubl
inc
xchg
pop
xor
sahf
pop
sbbb
in
daa
movsb
sti
pushf
insb
mov
fimuls
sar
std
test
jb
ja
ss
movsl
mov
scas
sub
std
add
add
ret
mov
jmp
adc
mov
add
dec
cmc
jecxz
push
inc
in
fs
mov
das
mov
jbe
lods
push
add
add
xchg
fwait
aaa
pop
outsl
dec
inc
xor
push
shrl
pop
pop
scas
mov
or
or
je
leave
das
mov
int3
je
pop
or
push
jno
popa
sarb
ds
pop
je
shll
inc
mov
fsubrs
mov
hlt
jae
dec
push
add
cltd
sub
mov
mov
mov
cld
dec
les
mov
adc
inc
mov
xor
xchg
dec
sahf
xor
push
daa
scas
cld
sub
out
fnstenv
jg
mov
scas
daa
sbb
iret
gs
inc
popf
sbb
sub
adc
ret
adcb
xor
cltd
pop
xchg
inc
les
mov
cmp
jne
mov
sbb
xchg
sub
clc
cmp
out
jns
lret
lods
jb
inc
fstpt
lods
jae
loop
sbb
adc
jno
sbb
adc
bound
sub
popa
push
pop
cmp
jl
scas
rcr
jne
imul
or
inc
mov
rcll
and
gs
mov
fistpl
mov
xor
or
cwtl
cltd
rcr
gs
inc
add
push
mov
insb
mov
cld
pop
hlt
mov
dec
push
in
jno
and
dec
mov
add
fdivr
cmp
movsl
cmp
push
push
lods
cmp
xor
sub
dec
out
clc
out
mov
xchg
cs
mov
mov
mov
jbe
or
push
mov
pop
adc
leave
fsubl
inc
or
jge
inc
hlt
dec
mov
fdivs
into
xchg
mov
icebp
mov
ja
adc
mov
mov
fst
pop
inc
inc
insl
imul
ror
loop
repnz
mov
mov
inc
arpl
bound
xor
and
adc
add
repz
shl
ret
repnz
mov
mov
inc
arpl
bound
xor
and
adc
add
repz
shll
repnz
mov
mov
ret
push
bound
xor
and
adc
add
bnd
shl
ret
repnz
mov
mov
inc
arpl
stc
bound
inc
mov
int
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sbb
cmp
xchg
pop
cmp
jg
cmp
int3
mov
mov
mov
fdivr
lods
jmp
sbb
cmp
pop
or
sbb
sub
cmp
int3
mov
mov
mov
pushf
sti
lods
jmp
sbb
cmp
pop
or
sbb
sub
cmp
repnz
xlat
pushf
stos
cld
fcmovnu
movsb
clc
mov
test
or
xchg
lret
jo
xchg
rolb
in
push
lahf
mov
jne
inc
sbbb
aam
movsb
hlt
dec
jecxz
and
mov
and
lret
lods
inc
dec
pop
add
rcrb
xchg
lock
and
mov
mov
push
insl
sub
or
imul
leave
inc
adc
add
mov
js
ficomps
fstpt
dec
jecxz
shrl
push
mov
fnstsw
adc
iret
mov
stos
lods
ljmp
insl
mov
pop
mul
imul
call
inc
push
xlat
dec
or
sub
dec
sbb
sub
cmp
int3
mov
mov
mov
pushf
sti
lods
jmp
pop
and
push
sub
pop
arpl
pop
pop
dec
imul
rcll
cwtl
lods
fnstcw
outsb
push
pop
insb
inc
sub
push
xor
inc
cmp
mov
mov
mov
movsl
repz
fstps
sub
or
pusha
dec
sbb
sub
cmp
int3
mov
mov
mov
pushf
sti
lods
jmp
sbb
cmp
pop
or
sbb
sub
cmp
int3
mov
mov
mov
pushf
sti
lods
jmp
sbb
cmpsb
sahf
add
movsl
leave
dec
or
aad
sbb
mov
loopne
jg
xchg
out
pop
xchg
out
xchg
or
xchg
in
frstor
push
sbb
lret
scas
mov
inc
in
add
sbb
fsubr
jp
mov
dec
lods
cwtl
jg
arpl
add
addr16
cmc
jecxz
xchg
xor
fisttpll
lds
dec
sahf
fiadds
inc
insb
push
stc
cmp
dec
dec
xor
fsubl
mov
out
and
std
cmp
ja
xchg
lret
xchg
jne
lods
inc
mov
fsubs
add
mov
out
movsl
mov
pop
xchg
aad
mov
xor
mov
hlt
push
cmpsb
push
ja
and
inc
lds
jno
leave
mov
xchg
out
and
mov
dec
xor
andl
fs
outsb
add
mov
aas
scas
jb
rorl
fldcw
mov
adc
mov
into
sbb
and
inc
lods
jns
das
mov
repz
jmp
mov
mov
sub
or
iret
dec
ret
aam
aam
es
pop
repz
test
mov
test
xor
scas
test
mov
push
inc
fidivs
sbb
popf
vmread
cmp
pop
lret
and
push
push
mov
into
or
fdivs
lret
aam
pop
jp
xor
dec
pop
loope
inc
int
push
mov
lret
push
cmpsb
mov
mov
ret
jmp
dec
stos
cs
enter
mov
xor
adc
pop
or
xchg
fcmovu
enter
mov
test
cwtl
sub
add
inc
xlat
jns
inc
or
in
insb
xor
adc
pop
out
ja
mov
pop
inc
insb
mov
insb
or
in
dec
mov
sbb
jmp
imul
jo
sub
push
cmp
in
repz
shl
adc
test
xor
lock
out
mov
aad
add
movsb
and
mov
mov
and
lods
mov
fwait
jo
adc
pop
imul
int3
pop
test
xor
push
ret
push
jo
repnz
inc
inc
xchg
stos
daa
inc
out
ret
xlat
mov
adc
adc
idivb
aas
cmp
pop
int
imul
insl
ret
int
popf
loop
negb
pusha
jns
dec
mov
jns
push
pop
out
push
xor
jae
sub
and
or
mov
sbb
push
loopne
gs
lret
filds
or
out
into
ret
aaa
push
sub
sbb
sbb
lock
test
int3
add
adc
aas
sbb
cmpsl
stc
inc
int3
out
mov
sti
or
mov
shr
movsb
neg
lds
int
mov
testl
shlb
rol
orb
arpl
or
fists
xchg
leave
mov
dec
mov
popa
jecxz
aas
addr16
inc
ret
fsubl
hlt
lcall
jp
clc
jle
xor
in
sbb
lcall
inc
pcmpgtb
cmp
pop
jns
sub
fbstp
push
hlt
add
or
das
mov
je
test
jb
aam
jecxz
dec
fnstenv
js
and
jo
out
les
insb
jecxz
or
ja
fadd
dec
inc
ja
mov
dec
xchg
mov
cmp
push
cld
cmp
enter
imul
dec
lea
cmp
xor
ljmp
scas
dec
xchg
push
add
inc
xor
mov
roll
mov
mov
add
push
xchg
scas
sar
in
pushf
lret
out
movlps
iret
test
dec
jns
outsb
xchg
mov
xor
mov
shr
in
pop
daa
out
inc
out
fildll
lock
adc
push
lcall
mov
pushf
pop
xor
in
jae
push
and
sbb
mov
mov
stos
mov
add
xor
mov
das
jb
int3
pop
js
mov
icebp
out
shrl
mov
xor
adc
hlt
sbb
lock
in
jns
test
ja
jns
daa
nop
add
xchg
jbe
cmpb
cmp
xchg
bound
in
sbb
and
push
dec
fbld
fnstsw
in
inc
mov
mov
jno
xor
out
ret
xchg
mov
inc
lods
inc
insb
add
inc
mov
ss
iret
int3
jo
es
push
sub
movsb
cmpsl
shll
inc
pop
hlt
clc
stos
sbb
scas
ficomps
in
call
mov
mov
jae
jecxz
subl
lea
mov
jge
lahf
aas
imulb
adc
dec
subb
and
cmp
xchg
movsb
inc
xor
pop
bound
add
mov
rcll
mov
xchg
enter
cs
out
out
das
scas
xor
mov
aam
cmpsb
rorl
add
lret
idivl
jle
push
call
mov
push
pop
xlat
xchg
loope
or
xchg
lods
add
add
cmp
adc
xor
ljmp
xchg
out
xchg
jbe
in
mov
pop
inc
addb
pusha
idivb
lock
fdivrs
fisttpl
idivb
jmp
sbbb
adc
movsb
xchg
repnz
add
sbb
lahf
sbb
push
mov
jp
adc
fsubp
jge
stos
add
aas
jne
imul
fistpl
repnz
mov
adc
xor
and
scas
and
xchg
mov
jecxz,pt
push
nop
int3
mov
in
mov
pop
scas
ja
xchg
jp
loope
pop
sub
xor
cmpsl
push
or
jl
push
fstps
mov
jle
jns
pop
cltd
cmp
cmp
and
mov
mov
adc
and
push
mov
test
stc
out
pop
repz
adc
call
test
lods
cmp
stc
filds
out
in
lret
xor
pop
dec
ljmp
out
clc
cld
bound
imul
sbb
xchg
rol
int
cmp
sub
fdivp
in
sub
dec
xor
xchg
pop
ss
cmpl
cmpsb
stos
pop
dec
add
mov
add
jecxz
ret
push
scas
and
daa
rol
dec
imul
fists
je
and
push
push
jle
add
push
mov
fdivl
je
cmpsb
pop
fidivrl
gs
out
ja
sub
nop
mov
xchg
test
aad
mov
and
out
adc
inc
xchg
out
xor
sub
repnz
bound
outsb
mov
hlt
jmp
dec
aaa
add
aaa
sub
loopne
fst
aad
xlat
hlt
push
jl
pminsw
movsb
mov
icebp
pop
adc
inc
mulb
inc
mov
dec
int3
pop
push
dec
stc
pusha
addr16
cmpsl
xor
jge
dec
sti
pop
nop
loop
jns
ret
stc
inc
rorl
mov
js
or
mulb
inc
jp
mov
shrb
cli
add
jb
cmp
adc
push
sbb
dec
outsl
insl
push
xlat
aam
scas
ficompl
adc
flds
mov
cwtl
leave
es
out
jg
test
mov
dec
and
add
sub
or
fiadds
dec
das
loop
pop
cs
or
xorl
jp
cld
jp
jb
mov
xchg
repnz
mov
cmc
aas
pop
dec
add
jl
xchg
xorl
imull
sub
lret
addr16
lock
adc
aas
ss
mov
inc
shlb
sahf
int
mov
sub
sbb
mov
mov
jle
scas
adc
in
push
dec
push
mov
imul
movsb
icebp
out
mov
push
push
nop
pop
jns
or
dec
aad
outsb
shrb
inc
bound
add
jo
cld
testl
ja
mov
fistpl
mov
fwait
dec
adc
fisttpl
sbb
fisubrl
or
pop
dec
jp
das
xor
or
movsl
xchg
std
je
subl
jg
ljmp
pop
adc
lahf
ds
fucom
rep
pop
and
popa
mov
out
adc
das
bound
jne
mov
push
or
push
fsubs
sub
sub
rorb
mov
adc
adc
mov
xor
punpckhbw
jmp
or
lret
dec
push
mov
out
mov
pop
fwait
jae
imul
test
iret
inc
test
sbbl
mov
incl
aam
xorb
bound
or
iret
jo
sub
mov
in
mov
push
cmpsb
lret
xchg
push
jne
cli
je
sub
inc
adc
lods
ljmp
xchg
push
push
mov
andl
inc
jne
mov
push
cmpl
pop
mov
dec
mov
jo
pop
sbb
das
sbb
dec
pop
cmp
jo
in
adc
test
loopne
hlt
inc
push
adc
fwait
jmp
jb
shll
lret
mov
pop
mov
test
xchg
lods
push
repnz
adc
xor
cmovge
sub
aam
sub
lods
adc
push
imul
dec
sbb
sub
rorb
mov
jae
gs
inc
enter
test
mov
mov
shlb
aaa
sahf
xchg
adcb
fistps
movsl
pusha
jae
and
call
push
and
jns
fs
cmp
fldcw
add
outsl
ljmp
and
inc
int
data16
js
inc
xchg
subl
dec
xor
mov
jo
shll
out
sbb
sbb
aam
and
sbb
adc
mov
cmpsb
dec
cli
aam
daa
cmp
cmp
xchg
push
fs
cmp
enter
mov
mov
lds
fistpl
fcomps
fisubl
aaa
mov
fcmove
adc
cmp
mov
stos
push
hlt
stos
xor
in
dec
xor
aaa
fwait
push
mov
xchg
rcll
insb
jecxz
test
xchg
mov
arpl
lcall
lock
out
and
push
jbe
outsb
shr
out
adc
jbe
cs
sub
xchg
sub
cmpsb
jge
adc
pusha
sub
ja
cmpsb
and
and
scas
fmul
nop
sbb
pop
xchg
repnz
lds
int3
cs
inc
gs
movb
add
lods
stc
mov
orb
mov
jecxz
mov
jo
in
mov
dec
mov
inc
mov
adc
add
add
outsb
jbe
push
mov
push
aaa
sbb
popf
sbb
lcall
jne
cltd
je
push
in
dec
bound
arpl
dec
lock
mov
dec
repz
push
push
sbbb
shlb
je
sbb
pop
dec
dec
test
mov
xchg
cmp
adc
pop
rorb
loopne
dec
jmp
jp
lret
adc
dec
push
dec
sub
cltd
jno
fs
push
addr16
out
inc
lods
ret
cmp
mov
int3
fwait
sub
insb
repnz
xor
push
xchg
cmp
addl
add
lods
pushl
push
aad
push
lret
sbb
mov
aas
incl
adc
sub
lret
aas
push
adc
aad
icebp
and
mov
fildll
in
mov
int
test
enter
inc
test
or
dec
push
dec
dec
or
mov
gs
pusha
es
jg
cmp
or
sub
jg
add
sub
int
dec
cmp
pop
cmp
and
das
js
test
xchg
jle
inc
cltd
xor
mov
je
outsb
inc
sbb
push
int
shll
loope
push
nop
div
call
pop
jno
js
mov
jge
andl
stos
sbb
stc
inc
mov
movzwl
enter
lods
shll
and
imul
jnp
test
lods
mov
xor
sub
push
fistpl
cmp
pop
sub
dec
xchg
insb
and
lea
int
cmp
subl
xor
and
dec
leave
mov
pop
pop
xchg
jle
xchg
xor
lret
aas
jmp
aas
inc
pop
out
or
inc
cmpsl
insl
jne
or
mov
jmp
nop
jnp
cmc
into
aad
movl
in
sbb
mov
sbb
push
jns
lahf
lods
lret
into
ljmp
mov
mov
dec
lcall
and
test
lcall
adc
stos
loope
sub
sbb
jns
fsubs
inc
pop
cmp
ljmp
dec
push
push
popa
lds
mov
pop
adc
das
xchg
dec
incb
addl
jnp
xchg
pushf
sahf
cmpsl
add
out
mov
jle
rcrl
shlb
mov
mov
adc
sub
xchg
clc
mov
xchg
mov
cli
std
jae
add
or
cmp
or
pop
pop
xchg
pop
mov
jne
jno
cwtl
xchg
and
addl
inc
inc
daa
adc
test
data16
les
add
cmp
jecxz
and
pop
add
cmpsl
gs
sub
jbe
cli
xchg
push
xchg
fs
pushf
jecxz
sbb
xlat
sub
mov
gs
fwait
mov
and
in
add
mov
xchg
popf
sub
arpl
fbstp
sbb
cmpsl
cmp
jns
or
cld
les
jno
xchg
dec
cli
push
icebp
push
jg
xchg
sahf
out
lret
fldcw
shll
add
out
out
pusha
xlat
inc
jnp
clc
sbb
outsl
inc
out
das
xchg
inc
dec
jl
pusha
repnz
fs
dec
cltd
inc
mov
ret
jecxz
dec
xor
and
or
mov
aas
fs
sub
lcall
ffreep
leave
repnz
sub
add
fidivs
pop
mov
adc
inc
and
and
hlt
xor
iret
sbb
frstor
dec
adc
or
daa
push
in
insl
pushf
shl
add
js
or
push
push
pop
sub
sub
mov
cwtl
cmp
xchg
adc
push
cltd
cltd
loopne
xchg
outsb
pusha
dec
es
pop
and
out
mov
sub
movsb
pop
cmp
xchg
mov
mov
cmp
and
and
xchg
mov
mov
mov
mov
cltd
lahf
js
test
lds
push
fisttpl
and
faddl
mov
outsl
add
inc
mov
in
pop
mov
or
or
pop
add
mov
add
mov
mov
xchg
insb
js
cmp
dec
mov
mov
leave
pop
sbb
dec
mov
xor
mov
xor
mov
pop
dec
lahf
push
mov
inc
jecxz
pop
xchg
imul
or
and
es
mov
fists
push
fsin
in
int
insb
sub
push
dec
fidivs
leave
jo
cmpl
orl
lods
loope
jge
sbb
pop
mov
push
pop
cmp
stc
hlt
inc
int3
sub
fldenv
ret
pop
loop
imul
call
int3
or
stos
addl
xor
push
sahf
cld
je
loop
nop
into
push
xor
xchg
fs
lods
lret
ds
fiaddl
mov
sbb
push
adc
daa
ret
ss
or
pop
ja
in
push
mov
mov
cli
xchg
inc
xor
push
ja
out
aaa
mov
mov
fistpl
dec
lret
jmp
stc
imul
or
cmpsl
jbe
repnz
push
cmp
push
arpl
mov
lods
repnz
adc
dec
xchg
mov
sub
dec
call
cmp
out
mov
sahf
and
lret
out
add
sbb
inc
adc
dec
rcrl
or
sbb
or
jl
sbb
test
add
cmp
fiadds
mov
aam
mov
push
or
lahf
cmc
xchg
arpl
jmp
mov
push
out
movsl
cltd
jae
pop
jnp
in
mov
mov
ud0
popf
in
fistps
clc
sub
lahf
pop
jl
push
dec
jbe
gs
ljmp
sti
jmp
shlb
bnd
and
sub
mov
cmp
cmp
xor
andb
push
pop
outsl
std
movsb
sub
mov
jb
mov
or
in
aaa
movsb
or
dec
jbe
inc
fistpll
pop
pusha
stos
sar
icebp
pushf
insl
cmp
pop
inc
mov
call
dec
aaa
in
add
loop
imul
sar
dec
popf
mov
rorb
mov
fisttps
cs
divl
cld
movsb
mov
stc
lret
sbb
mov
mov
jne
xchg
fisttpl
sbb
mull
lea
xor
mov
popf
ljmp
jmp
ficoms
into
pop
cmpsb
mov
xchg
lock
dec
fmulp
jo
dec
adc
mov
push
push
push
push
popa
inc
ljmp
jnp
xchg
add
aam
sti
inc
in
jno
and
mov
xchg
ret
fsub
xchg
inc
dec
fld
jle
xchg
adc
pmulhuw
xchg
push
rorl
loopne
insb
jl
push
cmpsb
sub
adc
test
sub
inc
cmp
xor
popl
dec
pop
and
gs
mov
cltd
cltd
movsl
push
mov
sbb
or
ljmp
cs
pop
int
jmp
and
jb
jg
jl
rcr
call
sbb
mov
lahf
outsl
mov
mov
movsl
test
packsswb
xchg
cs
add
sar
insb
sbb
xchg
push
loop
popa
inc
insl
fdivrp
inc
push
fists
and
sub
mov
or
xchg
aaa
jecxz
dec
jecxz
sub
lahf
sub
push
jecxz
int3
sarb
rorl
testl
fisubrl
jecxz
pop
push
adc
mov
jb
mov
fstl
shll
test
negl
aaa
mov
push
leave
push
xchg
mov
rorl
add
movsb
bound
hlt
test
mov
xor
out
shrl
sub
pop
mov
stos
or
mov
out
bound
adc
add
fcoms
xchg
xlat
repnz
stc
push
test
shrb
enter
cmpsb
rolb
push
mov
push
in
out
mov
aad
pop
cmpsb
daa
ss
dec
icebp
adc
jl
sub
jmp
mov
sub
jl
adc
nop
sbb
pop
cmc
or
mov
stc
in
and
add
jg
loope
adcb
outsl
mov
in
jbe
outsb
in
cmpsl
nop
cmp
mov
int3
mov
and
and
imul
js
sbb
out
inc
push
inc
hlt
enter
rclb
leave
push
btc
mov
outsb
jp
and
cmpsl
mov
aam
sbb
arpl
stos
aam
xor
lea
mov
imul
lock
xchg
aaa
push
mov
nop
sahf
adc
or
push
icebp
fisttpl
mov
imul
and
pop
mov
test
lret
mov
sbb
fnstcw
pop
or
add
ja
cmp
lcall
sti
sub
sbb
imul
sarl
pushf
pushf
fwait
pop
mov
pusha
pusha
mov
cmp
jb
subb
into
mov
subl
lods
mov
xor
push
xor
cmp
cmp
pop
cmp
in
js
and
jge
jb
movsl
jnp
call
ret
push
repnz
mov
scas
aad
and
lret
xorl
repnz
scas
js
mov
aam
xorb
lods
push
imul
jmp
pop
xchg
rcll
popf
adc
or
push
push
xchg
shlb
imul
dec
add
out
pop
hlt
or
into
rcrl
stc
jecxz
add
sahf
movsl
add
mov
sbb
push
jae
xchg
jecxz
pop
dec
outsb
xchg
xchg
mov
and
adc
cmpsl
test
test
jbe,pn
hlt
loope
xchg
xchg
mov
mov
cmp
cmp
out
xlat
ljmp
lock
int
jns
inc
jmp
fnstsw
icebp
or
stos
push
inc
roll
or
add
mov
shl
xor
lock
cmp
int3
push
sbb
js
and
mov
mov
pop
cmp
jl
or
sbb
sub
cmp
int3
mov
mov
mov
pushf
sti
lods
jmp
sbb
cmp
pop
or
sbb
sub
cmp
int3
mov
mov
mov
pushf
sti
lods
jmp
sbb
pop
mov
or
sbb
sub
mov
mov
lret
pushf
sti
lods
jmp
sbb
cmp
pop
or
pushf
jnp
imul
xor
mov
push
fwait
inc
test
loop
shrb
sarl
aaa
inc
bound
push
sub
xor
pop
adc
jns
mov
cltd
loop
ret
leave
mov
cmpl
cmpb
and
add
mov
cltd
lret
mov
mov
xchg
stc
jb
imul
sbb
pop
imul
cli
loop
sahf
shrl
bound
mov
lcall
or
dec
sbb
or
adc
cmc
sarb
loope
repz
cmp
pop
mov
nop
imul
mov
sbbb
lods
jo
popf
xchg
add
imul
in
int3
repnz
xchg
push
fdivrs
addb
testb
push
lods
push
fnstenv
arpl
js
std
sbb
xor
inc
bound
adcl
inc
inc
cmp
lahf
imul
adc
mov
sub
jb
test
dec
lods
roll
repnz
xor
repnz
cltd
shrb
mov
stc
imul
sbb
pop
cmp
dec
cmp
imul
fdivs
lods
iret
mov
scas
out
lods
push
jo
sbb
dec
sub
pop
or
ja
addr16
repnz
loop
mov
sarb
add
jo
bound
jp
pop
push
daa
push
pop
bound
add
fwait
int
shll
out
fsts
or
push
sub
xor
pop
adc
jns
mov
cltd
shrb
mov
stc
jb
bound
push
sub
xor
pop
adc
jns
mov
icebp
mov
popf
mov
fidivrl
lods
imul
pop
shrl
adc
movsb
jmp
test
leave
stos
mov
nop
fisubs
dec
repnz
mov
jge
lods
mov
dec
jno
mov
inc
xor
adc
cmp
jecxz
mov
andb
pop
dec
mov
pop
iret
mov
pop
in
outsb
sti
enter
fs
push
mov
ss
or
mov
icebp
inc
incl
mov
sbb
ror
popa
sbb
lahf
cmp
roll
in
push
mov
jecxz
adc
in
mov
dec
and
xchg
mov
outsb
pop
cmp
test
addr16
push
pop
lahf
movsl
mov
add
mov
test
into
push
faddl
mov
stc
je
out
xchg
nop
inc
dec
clc
jl
loope
frstor
int
loope
or
testl
ljmp
sbb
imul
xor
ret
dec
pop
pop
dec
xchg
lods
lods
sub
outsb
enter
cltd
inc
lret
or
mov
fsubr
add
or
hlt
xlat
dec
mov
loopne
jg
es
insl
cmp
fidivl
jne
test
inc
std
loop
stos
jecxz
adc
push
pop
vmwrite
push
sar
test
movsl
je
rorl
add
lret
push
jge
popa
out
adcb
aam
lods
push
adc
les
inc
movsb
pop
pop
or
xchg
inc
mov
xchg
movsl
mov
sbb
push
dec
sub
pop
inc
xor
mov
mov
dec
xlat
ja
xchg
rcr
ljmp
mov
cwtl
jne
and
pop
loopne
cmc
push
jp
xchg
xchg
sub
mov
mov
mov
rcrb
stos
cmpsb
pop
sbb
cmc
dec
mov
push
inc
sbb
bound
mov
pop
ret
cmp
mov
xchg
inc
call
push
jae
xchg
stc
pop
bound
sub
push
test
add
fidivrs
push
int3
push
call
iret
adc
lret
int3
and
test
ror
pushf
sbb
lea
shrb
and
ror
inc
add
mov
rcl
push
pop
inc
fisubrs
or
ljmp
fmull
xchg
movsb
jle
insb
adc
add
fdivl
inc
mov
mov
mov
out
mov
and
inc
add
adc
inc
frstor
in
pop
popf
cmpsl
mov
xor
clc
pop
xor
nop
adc
add
fadds
pop
in
addb
pop
leave
adc
xchg
push
push
ja
xor
mov
cmp
or
dec
mov
incl
adc
mov
dec
testl
mov
inc
ljmp
loope
cs
rcrb
push
jg,pn
dec
or
lea
ret
push
push
loope
dec
insl
push
jnp
daa
pop
jne
add
dec
ret
lahf
int
mov
dec
adc
dec
add
and
push
push
scas
ja
std
push
test
sbb
inc
jle
cmp
cmpb
jae
ja
sbb
cmp
test
mov
mov
out
adc
mov
div
inc
mov
aaa
push
cmpb
clc
std
mov
pop
enter
cmc
mov
adc
jno
xor
push
mov
mov
sbb
push
sbb
cmp
jns
stos
ret
cwtl
lret
pop
mov
sahf
push
sar
movsl
fdivs
push
dec
popa
dec
insl
insb
test
inc
fdiv
xchg
xlat
inc
test
mov
out
aad
mov
push
arpl
xor
mov
scas
and
xor
mov
mov
jae
dec
in
popf
hlt
fs
push
or
ret
sbb
xchg
test
dec
lock
cmp
xchg
jns
sub
mov
mov
outsl
aaa
or
inc
lods
aam
or
push
jo
mov
dec
inc
jle
imul
dec
pop
lods
fidivs
inc
or
imul
sbb
adcb
mov
push
jecxz
push
or
mov
cwtl
mov
cmovne
sbb
outsb
lret
fwait
movsb
pushf
and
mov
out
add
xchg
xchg
and
fldl
lea
add
fnsave
call
pop
xchg
mov
jl
xor
loopne
out
jle
cmp
repnz
adcb
daa
mov
add
repz
mov
mov
cmpsl
jl
hlt
sti
push
vsqrtss
mov
test
jae
push
mov
cmpsb
adc
dec
cmp
ret
sbb
sub
pop
and
ja
popa
cltd
iret
arpl
push
add
popa
push
mov
xor
mov
hlt
mov
stos
push
jnp
sbb
adc
test
mulb
call
cmp
jg
add
nop
xchg
int
xor
xor
fistl
xchg
nop
sub
test
test
aam
dec
fmul
xor
cmp
in
xor
add
sub
pop
xchg
dec
sub
pop
and
rcrl
push
lods
or
mov
mov
adc
cmp
sahf
push
mov
mov
jb
push
pop
arpl
push
mov
and
popa
sub
lret
xchg
aad
pop
add
mov
nop
jno
loopne
cltd
jnp
pop
ljmp
dec
outsl
cmp
arpl
push
inc
imul
mov
insb
push
jmp
ret
push
and
pop
xor
jle
sbb
xor
je
loope
add
outsb
sbb
push
aas
rcrb
subb
int3
out
adc
pushf
pop
push
sbb
dec
out
out
xor
mov
sub
mov
or
pop
ss
lahf
push
out
into
loopne
sbb
std
cmp
popf
les
loope
leave
repz
jmp
cltd
push
mov
cmpb
sub
test
adc
int
ficomps
cmp
cmpsb
jnp
xor
call
add
loop
pop
push
testl
nop
fstpl
loopne
mov
out
jbe
es
outsb
fistps
popa
cmpsl
lea
xchg
sbb
je
and
cmp
xchg
cmc
daa
iret
cld
jge
xorb
imul
pushf
mov
cs
fldenv
push
clc
mov
out
pushf
inc
cmp
dec
ja
in
ja
mov
cld
and
jmp
jns
enter
fildll
cmpb
jl
imul
outsb
aaa
arpl
mov
mov
scas
cltd
inc
mov
jge
test
push
mov
push
cmpl
sub
stc
fadd
mov
fcmovnu
movsl
in
lea
mov
jg
push
bound
ja
in
push
hlt
mov
mov
iret
lods
aaa
mov
scas
mov
and
clc
mov
shll
xchg
movsl
inc
test
mov
pop
jle
div
cmp
lcall
cmp
mov
sub
push
mov
mov
mov
fwait
loop
aad
scas
insb
inc
cmp
out
push
mov
sbb
xchg
push
push
push
push
ds
xchg
shll
fildll
jbe
adc
adc
cli
push
jge
sub
int
push
and
into
movsl
push
clc
mov
and
jo
outsb
mov
mov
and
pop
pop
sub
and
shl
cwtl
fdivs
into
pop
fldl
lea
mov
clc
adc
adc
pusha
inc
dec
or
xchg
jae
std
and
push
cmpsl
icebp
xor
xchg
mov
fnstcw
jo
aaa
sub
adc
ds
into
cmpsl
lods
neg
lcall
sarb
mov
mov
add
arpl
fldenv
sub
sub
jmp
or
fstpl
es
mov
arpl
mov
and
ret
rorl
add
nop
pop
and
lods
push
daa
sub
sub
sbb
in
xor
test
mov
push
or
fnsave
lahf
sbb
inc
add
lds
add
mov
sti
sti
mov
enter
or
push
adc
pop
mov
cmp
imul
add
into
cs
dec
movsb
mov
jae
and
movsl
test
xor
push
hlt
pop
in
cltd
and
mov
loop
dec
add
xorl
rcrb
pusha
add
jb
jo
push
sub
jp
cmp
movsl
test
ret
arpl
dec
pop
xorb
leave
dec
cmc
mov
push
and
fwait
ucomiss
adc
stos
xchg
jb
fldt
inc
xchg
fisubrs
sbb
shl
es
push
or
xchg
sbb
cmp
xlat
dec
jg
dec
movsb
mov
or
test
sub
jns
xor
popa
out
je
pop
pop
jae,pn
dec
notl
out
ret
jbe
insl
pop
xchg
xchg
call
jg
stos
mov
inc
xchg
lods
add
mov
mov
js
loope
adc
or
loope
cmpsb
sub
int
std
mov
mov
pusha
test
sub
dec
cli
imulb
jmp
fs
rcrl
lahf
jle
push
sbb
adc
add
jecxz
int3
scas
dec
dec
data16
repnz
sub
in
push
push
mov
outsb
sub
pop
out
sbb
push
das
push
popa
ljmp
pushf
ja
lahf
sbb
xor
hlt
mov
outsl
fiaddl
arpl
jecxz
push
mov
jno
mov
lret
mov
xor
adc
inc
pop
sbb
jle
lcall
mov
mov
cmpb
je
jecxz
xor
pop
call
dec
mov
cmpsb
shll
stos
cld
xor
xchg
mov
mov
lock
lods
shlb
cld
cld
sbb
sbb
sbb
icebp
push
clc
int3
les
xchg
or
mov
xchg
adc
and
imul
hlt
push
mov
stos
aaa
cwtl
mov
push
inc
add
mov
add
adc
pop
in
add
xor
mov
lods
mov
add
insb
lds
push
test
jae
or
xlat
mov
insl
mov
out
or
cwtl
inc
push
popf
mov
add
cltd
inc
cmp
hlt
lea
and
xor
leave
mov
or
add
mov
stos
sub
jmp
movsb
sbb
cmc
sub
jle
jle
pop
mov
xor
mov
pushl
dec
push
jecxz
lret
cmpl
inc
inc
mov
icebp
xor
loop
and
in
jmp
sub
push
jmp
mov
jecxz
sbb
les
movsb
les
sbb
push
jle
mov
adc
adc
jne
mov
cmc
lods
pop
push
inc
mov
xchg
fimull
pop
pop
cs
mov
sub
and
stc
xlat
aad
xlat
xor
stc
scas
jno
aaa
icebp
nop
ficompl
mov
subl
inc
rorl
clc
jg
push
icebp
testb
mov
cmp
push
inc
sahf
sarl
jecxz
xabort
jno
loope
daa
xor
cltd
into
add
adc
mov
xchg
mov
int3
xchg
mov
cmc
nop
lds
sti
shr
jecxz
mov
int
ljmp
mov
cli
push
xchg
dec
or
fwait
sbb
cwtl
mov
mov
sbb
cmp
cmp
outsb
daa
sub
inc
xchg
push
aam
adc
and
loopne
in
test
adc
pop
cmpsb
jbe
inc
imul
imul
testb
and
bound
push
sbb
xchg
and
push
sub
ja
and
ja
mov
test
push
jno
cld
andl
and
ret
jg
int
cmp
inc
stos
mov
mov
das
es
mov
lods
push
hlt
or
jle
mov
ret
dec
call
popf
jnp
cmp
push
imul
and
push
iret
jp
mull
inc
push
out
shrb
ds
aam
dec
lods
sbbl
sbb
out
outsl
cs
cli
jno
cs
ljmp
add
rorl
dec
test
retw
pop
mov
das
outsl
clc
stc
xchg
shl
ss
lods
in
dec
in
imul
pusha
icebp
mov
inc
test
std
lea
js
mov
adc
pop
loop
and
jne
jae
push
int3
sub
push
jno
and
add
add
pop
leave
ja
xor
xchg
aaa
jmp
lods
stos
or
rorb
fidivrs
xchg
repz
sub
xor
mov
mov
ficoml
add
xchg
in
shlb
dec
in
xor
push
aaa
clc
popf
pop
add
and
adc
jg
and
out
movb
outsb
jo
mov
xor
push
enter
cmpsb
adc
push
ret
adc
jns
jl
cmp
std
and
cmp
dec
add
push
mov
in
inc
xor
shrb
fildl
pop
cmc
lret
add
jp
jg
push
mov
and
push
gs
pushl
arpl
jecxz
pop
out
xlat
and
je
mov
das
in
inc
adc
shl
xor
inc
lcall
in
xchg
daa
daa
adc
xchg
daa
mov
cwtl
popa
push
stos
xorl
sbb
stos
xorl
sbbl
cld
pop
push
dec
xor
mov
pushf
call
std
jg
push
sbb
popa
popf
sub
pushf
adc
scas
rcl
push
mov
fbstp
inc
fsubl
jp
mov
das
inc
enter
sti
data16
lcall
data16
inc
and
cs
fwait
dec
ret
adc
adc
push
push
push
aad
pop
and
and
add
ror
lcall
mov
inc
gs
xor
or
lods
imull
xor
cltd
dec
sbb
mov
in
and
inc
and
push
adc
sbb
rclb
xchg
in
pop
fwait
pop
test
jl
add
cs
or
or
rcrl
adc
outsl
push
mov
sbb
imulb
adc
loop
mov
and
adc
fdivl
cld
rcl
mov
ljmp
push
test
mov
loop
push
mov
lcall
ds
iret
ret
inc
fcmovnb
int3
nop
sub
xchg
sub
loope
gs
xor
in
sub
adc
mov
dec
pop
popa
xchg
test
xchg
and
lock
les
lea
test
xchg
or
call
cmpsb
es
mov
cmpsl
in
pop
cmp
dec
addr16
sbb
filds
testb
or
loop
cmc
mov
insl
mov
sbbl
cmp
jns
push
imul
cmc
or
push
clc
imul
scas
mov
scas
jmp
int
adc
loope
add
int
stos
scas
pop
push
iret
rcll
jbe
push
xor
pusha
repz
push
adc
jns
test
xchg
adcl
dec
sub
je
movsl
sarb
mov
or
enter
xlat
cs
inc
sub
out
imul
pop
inc
xor
mov
cld
push
mov
add
pop
adc
mov
test
adc
inc
sahf
xlat
cmp
cmovp
adc
out
jnp
or
pop
fisubl
push
cmp
xchg
sbb
push
mov
testl
movsb
fnstcw
ds
fstl
sbb
lcall
in
mov
mov
or
es
xor
push
jecxz
ret
adc
mov
sub
les
fistpl
mov
in
sub
cmp
xchg
rcrl
or
loopne
mov
lds
xor
popl
and
lret
adc
lret
sub
pop
xchg
pusha
mov
dec
ljmp
push
and
push
or
scas
push
pop
adc
stc
cmp
lret
inc
sbb
ret
scas
dec
mov
cmp
daa
and
lcall
andl
fdivl
jecxz
inc
popa
mov
std
icebp
gs
mov
jns
inc
push
dec
xor
ffree
jno
cmp
sub
pop
dec
and
xor
sbb
dec
mov
pop
loope
pop
inc
jno
inc
aam
loop
lret
aas
xchg
mov
pop
loopne
pop
adc
push
adc
arpl
pusha
outsl
out
mov
jmp
mov
adc
cld
pop
movsl
stos
mov
xchg
out
ds
popa
xor
inc
rcl
mov
insb
enter
ljmp
add
ja
gs
adc
test
enter
fwait
mov
es
jg
stc
cld
arpl
js
clc
mov
test
push
cmpl
ja
inc
jge
push
out
mov
out
mov
jne
push
dec
xor
imul
adc
ficomps
push
es
xchg
in
in
mov
add
jb
mov
jle
pop
mov
jl
mov
sahf
xchg
push
pop
clc
mov
mov
gs
xchg
push
pop
pop
fdivr
xor
addb
adc
push
inc
jge
mov
xor
cs
frstor
std
sbb
pop
dec
roll
mov
push
push
push
jl
movsb
pop
popa
hlt
mov
outsb
scas
lret
cs
push
sub
push
push
cmp
mov
jbe
mov
push
incl
xlat
pop
mov
movsl
mov
inc
das
sbb
cmpsl
movsl
out
cmpsl
in
stos
jmp
imul
push
jmpw
rorl
pop
or
fmull
push
loop
inc
scas
call
pusha
or
data16
and
call
push
into
ficoml
sub
dec
ret
sbb
xlat
pop
rcll
jecxz
jge
pop
ss
xchg
lods
xor
and
or
mov
jnp
aad
scas
jle
addr16
shll
mov
jbe
mov
mov
ljmp
aad
lcall
nop
clc
ss
xchg
sub
fdivr
clc
testb
pop
scas
push
cmp
ror
sub
movups
jecxz
out
popa
in
sub
inc
repz
cld
hlt
pop
int3
jp
push
sub
xchg
sub
pop
add
inc
cmp
arpl
mov
sti
movsl
loope
mov
sbb
popa
jl
push
outsb
cmc
mov
inc
sub
mov
and
fldcw
hlt
xchg
into
fabs
loop
push
mov
aam
fcomi
or
nop
adc
lcall
mov
sahf
xor
pop
cmpsl
lods
or
cmpl
adc
cmp
fldl
jge
adc
jle
aas
mov
fs
add
lahf
mov
adc
inc
push
aad
sbb
push
adc
ja
adc
and
mov
arpl
int
shrl
sbb
rcrb
xor
jecxz
ret
mov
imul
jge
xchg
sti
fisubrs
outsb
or
ret
sarb
sub
sbb
push
push
filds
cmp
pop
adc
add
fimuls
ret
pop
in
out
xor
out
cmp
fidivrl
fmuls
shll
and
sub
dec
cli
xor
xor
or
in
dec
jns
int3
dec
loop
pop
jae
xchg
xchg
ret
mov
add
pushf
xor
sarl
into
xchg
insl
sub
cmp
divl
stos
fistl
clc
push
mov
scas
aam
xchg
enter
in
push
jo
dec
int3
push
and
inc
dec
mov
clc
out
pushf
jl
repz
popf
mov
and
adc
dec
xchg
iret
shlb
cwtl
in
mov
pushf
jl
fstpl
xchg
loope
int3
test
pop
fstpt
fnclex
fidivrl
test
cmp
aas
jmp
and
dec
fcompl
testl
test
clc
es
or
mov
xchg
xchg
inc
out
and
scas
mov
mov
pop
cmpsl
sbb
mov
pop
jbe
icebp
jle
in
fwait
jbe
or
popf
push
jo
dec
or
subl
test
ja
mov
xchg
in
jmp
int3
lea
dec
gs
mov
clc
icebp
out
les
cltd
lahf
test
mov
stc
jb
bound
push
sub
xor
pop
adc
jns
mov
cltd
shrb
mov
stc
jb
bound
push
sub
xor
pop
adc
jns
mov
cltd
shrb
mov
stc
jb
bound
push
sub
xor
pop
adc
jns
mov
cltd
in
ret
leave
mov
stc
lea
popf
mov
sub
inc
shrl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
popf
repz
mov
push
sbb
sbb
fsts
int
or
add
add
or
add
push
add
add
add
add
add
add
add
add
mov
sbb
jnp
pop
add
pop
add
pop
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
inc
add
add
sti
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
sbb
sbb
iret
add
push
add
add
addb
add
call
add
sbb
add
add
sub
add
add
add
add
add
add
add
add
add
add
or
push
add
and
add
add
mov
sub
str
xor
verr
int
xchg
add
add
add
add
nop
add
jl
xchg
add
sbb
cwtl
add
add
add
add
add
add
xor
cmp
cmp
xor
or
add
add
add
mov
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
ret
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
aam
dec
add
pop
add
add
add
add
add
xor
cmp
jnp
adc
sbb
mov
es
add
add
add
add
add
add
and
les
add
outsb
add
add
add
add
pop
add
add
dec
add
add
add
add
add
jp
out
jne
out
add
add
add
ret
add
and
xchg
add
add
push
push
add
add
movb
add
add
or
add
pop
add
add
sbb
arpl
int
sbb
inc
add
add
add
add
add
jbe
add
int
jge
or
add
add
add
jnp
pop
add
add
add
add
add
add
add
add
add
add
add
add
and
movsb
add
dec
add
add
add
lret
add
or
or
fwait
add
add
add
add
add
add
xchg
add
add
or
sbb
and
int3
add
pop
add
sbb
or
sbb
dec
add
add
add
add
add
addl
add
add
add
add
add
data16
add
add
add
add
insl
add
add
add
addl
add
add
add
dec
add
add
dec
add
add
add
add
xchg
add
add
add
addb
add
add
add
add
sub
add
cwtl
add
add
add
add
add
add
enter
xchg
sbb
pop
pushf
inc
add
loopne
or
popf
mov
lods
pop
pop
jo
xor
inc
mov
add
push
cmp
and
mov
xor
mov
jbe
cmc
cmp
mov
dec
mov
xchg
push
sub
fs
mov
loope
push
int3
dec
and
jo
sarb
and
dec
xchg
and
lods
push
movsl
dec
mov
xchg
and
dec
mov
sahf
adc
fwait
jne
inc
jl
into
push
pop
sub
push
aam
outsb
stc
mov
cmp
out
xchg
enter
push
gs
mov
add
orl
sub
jo
into
fsubs
aad
mov
leave
push
jo
pop
pop
insl
cwtl
pop
addr16
mov
mov
sbb
xor
lahf
movsb
pop
inc
js
into
push
mov
push
nop
int
push
inc
push
daa
sbb
sti
cmc
push
lock
aam
ss
out
pusha
or
dec
pop
mov
pusha
loop
xor
pop
stc
lods
sub
fnsave
sbb
sbb
and
int
repnz
xlat
push
mov
test
adc
lock
jne
mov
cmp
or
add
fs
mov
mov
mov
mov
orl
call
cmp
cltd
scas
insl
cmp
xlat
lods
mov
outsl
and
xor
mov
mov
test
cmp
test
stc
or
arpl
pop
test
adc
and
es
sbb
leave
test
pop
fstps
negb
xchg
cmc
cmp
jl
rep
test
add
sub
aas
xchg
mov
adcb
aad
nop
jnp
jbe
mov
movsl
sahf
call
insb
data16
mov
outsb
and
fdivs
mov
sbb
cs
out
insb
lods
movsb
movsb
int
insl
mov
inc
jle
sahf
pop
push
xchg
popa
lret
sbb
push
sub
enter
ret
pushf
mov
mov
sti
test
push
dec
ds
loop
or
push
ficoml
push
mov
lea
add
pop
or
out
call
lahf
jmp
dec
pop
insl
int
fstpt
fsubrs
daa
and
cmc
sub
sub
mov
mov
lea
cmp
fyl2xp1
lcall
in
cmp
xor
scas
inc
jmp
popa
ret
popa
adc
cwtl
repnz
add
movb
dec
inc
pop
addr16
mov
fldl
inc
lret
iret
inc
popf
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
