call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
gs
sub
sbb
or
xor
pusha
jl
dec
in
cmc
lods
lds
in
test
xchg
int3
gs
sub
sbb
or
jl
insb
add
mov
aad
movsl
nop
mov
test
xchg
int3
gs
sub
sbb
or
jl
insb
add
mov
sti
in
int
mov
sub
jne
ss
or
pop
xor
daa
pop
das
mov
aad
out
outsl
leave
movsb
mov
fmuls
push
push
jecxz
adc
fistl
mov
pop
cld
mov
popf
popf
cmp
and
je
in
js
sti
sbb
ljmp
add
pop
push
je
jns
or
xor
pop
and
ss
in
in
dec
sbb
insb
pop
cld
fstl
test
xchg
int
dec
add
insl
sbbl
inc
or
aad
pop
mov
scas
mov
faddl
mov
fnstsw
movsb
cli
push
sahf
or
fs
cltd
cltd
cld
mov
test
std
fnstcw
cmp
sub
sbb
or
jl
insb
add
mov
aad
movsl
cld
mov
test
xchg
movsl
and
sbb
and
or
sbb
sbb
cmpsb
stc
mov
mov
movsl
roll
jns
or
adc
add
div
aad
iret
nop
jmp
testl
push
imul
mov
aad
movsl
cld
mov
test
xchg
int3
gs
sub
sbb
or
jl
insb
add
mov
aad
movsl
cld
mov
test
xchg
int3
gs
inc
icebp
jno
decl
cltd
cmpl
aaa
push
faddl
outsb
inc
data16
iret
cwtl
movsl
ret
sub
xchg
mov
mov
nop
mov
xchg
int3
jl
inc
out
xchg
loop
jl
enter
ja
outsl
mov
in
cmp
inc
xchg
es
icebp
aas
push
xchg
outsl
in
adc
call
psubsb
sub
mov
fndisi(8087
add
icebp
pop
cli
fdivrs
and
sti
mov
xchg
ljmp
sbb
out
repz
xor
mov
push
jp
cmpsb
mov
jnp
push
inc
pop
in
sbb
add
push
lods
out
subb
lock
xorl
dec
add
mov
mov
add
sub
push
pop
das
xlat
pop
pop
clc
jl
pop
iret
fldcw
out
jnp
shrl
jge
ret
lea
sbb
push
mov
add
sbb
mov
mov
mov
cs
jo
jecxz
sub
mov
fisubs
and
inc
add
testb
mov
andb
adc
pop
pushl
add
incb
or
bound
mov
stos
popf
cmpsb
cmp
pop
cmp
or
pop
jmp
jns
xchg
sbb
ss
ficoml
cwtl
enter
xor
ror
cmpsl
jns
movsl
adc
inc
pop
sbb
push
mov
mov
pop
dec
fwait
jp
sub
push
repnz
mov
jb
test
sbb
xchg
stos
jmp
sarb
inc
dec
adc
daa
aad
pop
jp
in
fldenv
and
jnp
jge
xor
jl
movsb
popf
cld
sbb
jle
insb
cmc
fs
xchg
out
sub
cmp
xlat
cmpxchg
ds
dec
or
dec
pushf
xor
add
jecxz
movsl
sbb
pop
dec
cmpsl
es
xchg
mov
leave
subb
cld
popf
mov
fcoms
push
push
fs
mov
sbbb
add
jae
test
sbb
cmp
cmp
jne
adc
das
jno
loope
xchg
mov
fnsave
adc
mov
jae
cld
fdivrs
in
ja
data16
or
in
call
xor
stos
sbb
mov
dec
lods
jl
es
jb
movsl
dec
pop
lods
mov
loopne
daa
mov
cmp
lahf
test
lahf
or
inc
sti
test
lock
sbb
cmp
daa
add
pop
test
xlat
cmp
es
ja
lret
pop
mov
and
push
add
leave
scas
xor
sub
or
jge
test
mov
fucomip
scas
call
std
repz
adc
push
inc
mov
stc
out
sub
imul
bound
inc
inc
lret
lea
pusha
stc
push
test
fstpl
mov
fwait
shrb
ret
icebp
fistpl
xchg
jo
lds
and
ja
ja
jle
push
jl
adc
leave
sahf
addb
out
outsb
add
pop
call
dec
dec
adc
or
shll
push
stos
inc
rcr
cmc
push
push
movsb
pop
inc
imul
xchg
push
mov
cmp
movsb
push
adc
icebp
scas
dec
push
sub
adc
mov
and
adc
dec
cld
aaa
push
xchg
push
aaa
or
push
hlt
fmul
cmp
cmp
xorl
xchg
das
fldenv
dec
adc
xchg
or
movb
nop
pop
jl
jp
or
mov
das
aam
iret
jg
repz
hlt
jb
adc
xor
inc
push
jmp
dec
insl
cmp
pop
sahf
emms
mov
movsl
lret
cmp
loop
ret
pop
pop
cli
in
cmc
addl
mov
hlt
add
bound
out
mov
adc
jle
enter
jo
les
jge
xchg
jnp
xor
or
fs
push
push
inc
inc
outsb
sahf
movsb
int3
roll
enter
adc
subl
scas
mov
sub
inc
adc
or
pop
dec
cmp
imul
mov
pop
mov
pusha
mov
xor
arpl
ficoms
dec
sbb
out
push
movsb
and
push
inc
add
push
xchg
or
dec
cltd
cmp
out
xchg
mov
mov
fmulp
push
outsl
aad
mov
outsb
int
ds
int
out
or
aas
cwtl
repz
cli
or
mov
push
psubsw
in
idivb
pop
cwtl
jne
cmc
add
pushf
icebp
xchg
cs
xor
test
rclb
test
aaa
roll
das
in
and
sub
rorl
xchg
pop
jo
leave
test
adc
xchg
lds
sub
mov
jns
sub
mov
fcoms
jno
nop
fstps
enter
inc
mov
lods
cmp
das
pop
fdivrl
std
sub
sti
into
add
scas
cltd
or
sub
adc
inc
xchg
aas
inc
in
add
jbe
or
lds
imul
xorl
mov
sbb
mov
stc
mov
sahf
cmp
inc
mov
icebp
leave
movsl
xor
dec
xor
jp
push
pop
and
inc
scas
fstpl
adc
es
and
into
add
push
and
pop
rcrl
lret
sti
lods
push
je
js
mov
push
ret
mov
pop
jg
fisubrl
or
push
aas
mov
out
cmp
push
xchg
loope
jmp
push
mov
jb
aaa
lahf
iret
outsb
sahf
jno
add
push
gs
push
sbb
cli
adcl
or
sbb
dec
dec
mov
rcl
test
or
lods
imul
mov
cmp
inc
lea
xchg
lock
or
push
mov
popf
dec
mov
in
shrb
loope
rcr
inc
cmp
pusha
call
pop
orl
or
jne
jg
xchg
dec
sub
push
xchg
mov
lods
lock
mov
mov
dec
in
jg
std
xor
in
xor
repz
lods
push
xor
fstpt
sbb
push
add
cwtl
aas
jge
mov
mov
in
jae
popa
jno
rcrl
adc
pop
pop
ficomps
enter
lea
je
dec
mov
imul
js
icebp
divb
je
jle
in
out
push
mov
shl
mov
pop
push
cmp
call
cmc
mov
mov
cwtl
xor
pop
jmp
stc
sub
pop
dec
mov
and
ret
insl
stos
push
ss
aad
paddsw
xchg
lea
jbe
imul
jno
xor
inc
jmp
ss
les
fs
cmp
xor
mov
sbb
xchg
stos
inc
sbb
in
sub
insl
test
mulb
jmp
test
mov
mov
insb
sub
jle
cwtl
ljmp
xchg
mov
testl
in
into
mov
xchg
repnz
and
scas
mulb
mov
pop
shl
sahf
test
mov
inc
sti
push
je
inc
fdivrp
xchg
mul
xchg
or
push
inc
and
fistps
dec
add
lea
xor
push
push
and
rorl
jb
mov
add
mov
mov
add
cmpsb
adc
push
xchg
adc
movsb
vshufps
push
add
xchg
jge
ret
cmp
outsb
jno
cli
test
sub
ds
insl
test
and
testb
cs
fs
mov
out
fwait
dec
cmpsl
mov
sbb
shlb
cmp
addr16
add
jno
dec
fistpll
repnz
mov
push
inc
aam
add
jl
rcrb
mov
dec
fcompl
rsm
fnstenv
inc
dec
and
xor
cli
push
push
push
push
or
xor
mov
and
cmpsb
sbb
cltd
xchg
and
jge
incb
ret
push
push
pop
push
fucom
test
cmp
mov
cs
icebp
adcb
cmp
cli
xor
xchg
dec
aam
sub
push
xchg
xchg
pop
dec
cmp
fs
lea
inc
mov
xchg
ds
mov
dec
and
jg
pop
sbb
mov
je
gs
lods
xor
scas
clc
gs
negl
insl
shlb
daa
inc
pop
inc
jo
divl
je
sbb
mov
cmp
pop
imul
adc
in
rcrb
scas
cmpsb
popf
mov
test
bnd
pushaw
dec
mov
addl
pop
fidivs
ds
push
fisttpll
cmp
mov
xchg
test
push
sub
imul
fcomps
icebp
xlat
sarl
ret
mov
aas
jbe
cmpsl
out
loope
fwait
push
inc
or
aam
jno
aam
jge
stos
lret
movsb
fwait
pop
cwtl
mov
pop
cwtl
outsb
lock
fstps
mov
jo
mov
push
push
mov
cltd
mov
lds
cs
add
jno
out
cmc
sti
sbb
loope
gs
add
sbb
dec
js
pop
in
fistps
in
orb
xchg
mov
pop
mov
inc
xchg
pop
and
stos
out
dec
into
mov
andl
stos
fwait
inc
and
push
jecxz
xor
dec
fwait
mov
and
inc
dec
pop
call
and
iret
ja
pop
in
outsl
ja
pop
and
sahf
pushf
jne
andb
je
out
rol
scas
or
test
in
enter
xchg
sbb
mov
mov
cmp
inc
fidivl
xor
xor
mov
or
das
dec
loope
jno
int3
dec
sbb
jo
sub
add
lds
jae
out
in
jg
jns
scas
or
inc
popl
outsl
pop
adc
test
fidivs
or
push
lods
push
in
mov
jmp
cmp
xchg
mov
daa
xchg
or
or
pop
xchg
aam
in
cmc
mov
test
subl
cwtl
lea
sbb
dec
push
dec
dec
imul
add
movsb
add
div
or
insl
fucomp
pop
popf
push
aas
out
or
push
flds
adc
mov
lret
rolb
pop
repz
push
call
mov
pop
push
push
sar
rclb
aas
shlb
push
das
aas
inc
rcl
imul
insl
pop
jo
mov
stc
xchg
pop
inc
push
je
cli
mov
pop
outsb
cmp
push
icebp
mov
insl
and
repnz
push
ss
scas
pushl
mov
insl
insb
mov
and
popf
cmp
cmp
shrb
lcall
sahf
loopne
xchg
cli
stc
pop
dec
fnstenv
mov
dec
jp
push
jg
sub
test
xchg
enter
dec
loope
xor
lds
push
xchg
popa
enter
cmp
clc
inc
cmp
rorl
arpl
cwtl
test
loope
xchg
add
daa
int3
or
jae
or
push
cmp
sub
xchg
add
fnstsw
inc
fisubs
js
inc
or
sub
adc
ret
xor
sbb
cld
pop
sbb
lock
call
jns
pop
leave
sbb
test
flds
jg
in
mov
mov
ficoml
xor
inc
adcb
mov
cld
push
leave
sbb
mov
shlb
sbb
int
xor
sbb
dec
or
mov
sbb
mov
xchg
jg
or
cli
cmp
and
stos
xor
call
pop
movsl
push
push
testl
je
mov
scas
cmp
movsl
sub
xlat
imul
xor
mov
adc
stos
fsubp
inc
fstp
add
ja
pop
imul
add
imul
arpl
repnz
hlt
popf
rcl
clc
fcoms
xchg
mov
pushf
mov
in
xchg
aaa
sub
pop
cmp
cltd
test
dec
shl
fs
movb
xor
icebp
dec
lret
sbb
push
sbb
movsb
pop
pop
ret
cltd
and
xor
and
dec
repnz
out
outsl
jo
daa
leave
mov
fnsave
aad
mov
and
mov
push
mov
movsb
mov
xchg
mov
or
mov
mov
push
cwtl
pop
fisubs
mov
sub
out
xchg
nop
loopne
xlat
adc
pop
push
cmp
test
leave
mov
mov
cmp
add
sqrtps
sbb
nop
mov
aam
sbb
push
arpl
xchg
int3
push
inc
cmp
std
xchg
mov
enter
ficoml
inc
mov
pop
xor
mov
popa
mov
mov
mov
mov
jnp
sbb
add
xor
push
mov
mov
icebp
inc
out
mov
leave
xchg
cmp
inc
dec
mov
sbb
mov
je
aad
xchg
daa
imul
dec
fcoms
push
sub
sahf
xchg
into
jl
adc
or
testl
fadds
xchg
adc
les
cmpsb
xchg
fisubrs
dec
sahf
pushf
icebp
std
fstpt
add
ret
leave
fsubs
adc
incb
bound
bound
adc
and
sub
jbe
jbe
pop
xor
and
scas
cs
add
jge
stos
dec
sub
sbb
sbb
and
cmp
mov
xor
or
xchg
pop
inc
cmp
cwtl
popf
push
stos
mov
jbe
stos
push
data16
ljmp
xor
mov
push
cmp
dec
scas
mov
mov
mulb
fst
ds
mov
outsb
cmp
aaa
or
insl
gs
popf
das
pop
aaa
cwtl
dec
popa
and
fcomp
enter
xor
xchg
loop
fisttpll
rcll
sbb
xor
jne
test
push
pop
cmpl
hlt
cmpsl
cli
dec
rcl
mov
ss
cmp
dec
adc
or
jbe
sub
jae
aaa
xor
xchg
or
in
mov
movsl
arpl
cwtl
je
pop
pop
jecxz
mov
jle
pop
popa
cld
stc
mov
mov
mov
aas
xchg
mov
cmp
jg
jne
inc
lods
lds
sahf
imul
mov
pop
ret
vmovdqu
fisttpll
aas
inc
inc
mov
push
idivl
sbb
jbe
sbb
xchg
dec
cs
mov
in
mov
push
insb
pop
sbb
mov
std
inc
fs
sbb
jecxz
add
mov
adcb
fbld
daa
loopne
cld
sub
test
and
jo
cmpsb
leave
push
lahf
aad
das
lret
repnz
daa
jo
adc
int3
or
mov
jecxz,pn
lock
lods
push
pop
insl
adc
mov
aaa
jnp
push
mov
imul
inc
lds
rolb
divl
ret
sti
pushf
imul
sbbl
add
mov
test
xchg
inc
sbb
mov
sahf
lea
fcoms
inc
cmpsl
jecxz
aaa
es
mov
push
gs
pop
je
pop
mov
mov
dec
fisubs
adc
mov
loopne
addr16
mov
ja
sub
test
insb
jno
sub
cmp
mov
sbb
repz
bound
push
aaa
sti
adc
push
add
push
into
mov
ret
out
in
in
jge
ret
enter
push
je
fwait
aaa
cmp
xor
mov
iret
add
and
adc
roll
adc
rorb
xchg
push
push
push
sbbl
ds
fsubrl
mov
repz
cli
xchg
aas
lea
shlb
ret
or
mov
inc
lcall
out
aaa
cwtl
cwtl
in
aas
mov
aaa
test
sbb
rorb
sub
cltd
mov
push
dec
scas
sbb
ret
push
or
imul
cltd
push
inc
push
dec
rcl
aaa
push
sub
jg
subl
test
jne
jmp
leave
sbbb
fcoms
jae
jo,pt
sub
loope
inc
push
lahf
lds
aad
cmpsl
xchg
mov
sti
lret
sub
repz
aam
cmp
data16
test
pushf
shrb
repz
mov
jo
imul
add
and
xor
mov
loop,pt
inc
push
movups
jae
jge
dec
xchg
dec
insb
fistpl
or
sti
jae
push
aas
add
xchg
gs
imul
inc
ret
sbb
xchg
dec
cmp
loope
xlat
pusha
add
pushf
cmc
cld
inc
mov
push
adc
pop
cmp
inc
rorl
add
js
sbb
mov
mov
cld
mov
into
xor
int
fisubs
dec
add
fs
outsl
mov
mov
aad
mov
inc
aam
iret
aas
lahf
mov
int3
mov
adc
stc
jle,pt
sti
and
mov
xchg
ljmp
sbb
movsl
mov
mov
int
es
xchg
inc
mov
pushf
lods
popf
mov
push
loop
push
xchg
inc
dec
loopne
jno
jecxz
loop
movsb
inc
in
xchg
jno
push
rorb
lock
mov
xor
into
fwait
xchg
cmp
out
orb
das
adc
mov
mov
dec
test
lgs
mov
dec
outsl
ss
stc
inc
fdivrl
scas
jae
jecxz
shrl
mov
std
adc
andb
scas
or
ljmp
pop
inc
adc
out
loopne
ret
xor
test
aam
inc
push
xchg
dec
or
pop
xchg
mov
xchg
xor
cmp
mov
mov
arpl
test
hlt
cmp
in
mov
dec
into
jbe
xchg
pop
loop
pop
shrl
mov
std
repnz
insl
sbb
xchg
ds
nop
shll
mov
ljmp
push
jl
xor
push
xchg
fst
sbb
push
mov
sbb
pop
xchg
pop
jae
call
and
les
fsubrl
cwtl
xlat
cs
jg
xchg
sbb
cld
sbb
fscale
jecxz
sarb
dec
xor
mov
fxch
mov
cmp
xchg
movsl
mov
and
lods
jmp
aas
adc
lcall
cld
or
test
and
stos
movb
xchg
scas
cmp
ror
fsubr
into
inc
or
inc
and
rclb
clc
sahf
mov
call
call
je
popa
mov
adc
mov
hlt
jp
outsl
push
icebp
cmpsb
popa
dec
popa
or
mov
iret
lods
sub
pop
jmp
push
cmc
cmp
mov
xor
dec
jne
rcrb
loope
adc
mov
ret
sub
jmp
insb
shll
xor
les
daa
das
mov
add
mov
int
js
test
loope
fisubl
in
enter
arpl
or
adc
sbb
pop
divl
push
cmp
mov
clc
loope
adc
jge
out
pop
ljmp
and
stos
es
push
xor
ret
in
sub
push
sbb
jmp
cmp
xchg
cltd
je
bound
out
ret
and
jp
push
lods
cmc
xor
std
int
dec
cwtl
lods
add
mov
or
sbb
movsl
lock
fs
mov
jns
ficoms
dec
add
ljmp
push
xchg
loope
sbb
arpl
push
cmpl
push
pop
adc
push
std
adc
subb
pop
cmp
mov
jns
sarb
mov
sbb
add
sub
cwtl
aam
or
mov
pusha
xor
cltd
imul
aas
cmp
lahf
xor
dec
es
cmp
int3
cli
adc
cmp
xchg
mov
pop
les
je
lds
in
lods
xsavec
das
add
pop
rclb
jae
out
fsubl
jg
outsb
push
pop
dec
test
push
sar
mov
vmwrite
cmp
addr16
adc
sub
adc
adc
inc
jge
mov
movsl
pushf
lcall
andb
adc
in
mov
loope
andb
jnp
push
adc
addr16
iret
cmp
call
mov
lcall
push
push
and
imul
ja
add
cmp
dec
ja
dec
adcb
icebp
lock
fdiv
mov
sbb
or
dec
and
int
pop
adc
enter
adc
jno
ss
pop
mov
cmp
mov
data16
iret
mov
or
jl
sahf
bound
jbe
adc
popa
bound
ljmp
jmp
repnz
ret
xchg
add
mov
or
xor
lods
add
loope
movsb
out
ret
sbbb
cmp
cmp
inc
dec
add
push
andl
push
or
repz
jl
pop
addl
les
push
sbb
or
jl
insb
add
mov
aad
movsl
cld
mov
test
xchg
int3
gs
sub
sbb
or
jl
insb
add
mov
aad
movsl
cld
mov
test
xchg
int3
gs
sub
sbb
or
jl
insb
add
mov
aad
movsl
cld
mov
test
xchg
int3
gs
sub
sbb
or
jl
insb
add
mov
aad
shlb
jp
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
sub
imul
pop
add
push
pop
outsl
ss
imul
jmp
sti
lahf
mov
fwait
adc
das
pop
aas
imul
pop
or
jg
dec
cmp
scas
fstpt
mov
lcall
mov
imul
aaa
sub
insl
lret
scas
clc
pushf
fwait
out
sahf
in
mov
mov
imul
pusha
dec
xchg
int3
mov
add
inc
loope
cld
je
aaa
adc
inc
xor
xchg
cmpsl
sub
cld
xchg
jnp
loopne
jp
hlt
xlat
mov
mov
adc
cli
fwait
mov
mov
xor
push
xor
pop
or
loope
fs
scas
into
scas
sti
mov
mov
add
sbb
aas
test
jl
arpl
dec
jb
cmp
cmp
push
pop
or
sahf
fwait
jb
xor
mov
out
repnz
hlt
pop
cmp
mov
call
fildl
mov
rclb
iret
and
nop
mov
cld
sahf
out
sbb
cmc
outsl
xchg
mov
mov
jnp
or
jg
dec
cmp
lret
scas
fistl
jmp
sti
mov
stos
xlat
mov
push
sub
lret
inc
cmp
iret
cwtl
sub
nop
into
mov
das
jns
jl
jae
cmp
jle
mov
scas
jl
inc
stos
shrl
arpl
jae
and
jg
dec
cmp
scas
fstpt
mov
fwait
ljmp
das
pop
aas
imul
pop
or
jg
dec
cmp
scas
fstpt
mov
fwait
ljmp
das
cmp
jb
icebp
fisttpl
jmp
pusha
js
or
aam
xchg
or
xchg
or
mov
lea
sub
sub
cltd
stos
cmp
lock
fbld
scas
dec
dec
scas
pop
xor
scas
mov
or
jecxz
dec
adc
and
mov
popa
mov
es
ja
mov
icebp
jae
or
sub
inc
inc
cltd
loop
daa
into
cmp
mov
mov
push
in
repnz
lock
mov
jmp
aad
mov
ret
pop
cmp
add
add
pop
push
inc
add
xchg
stos
xchg
es
sub
sub
add
lcall
imul
sbb
into
fcoml
test
dec
pushf
mov
stc
call
jns
push
mov
sbb
out
pop
add
dec
cmc
cltd
sbb
mov
push
sbb
into
rorl
fisttpll
or
imul
xchg
orl
stc
icebp
pop
adc
rclb
cmp
or
dec
jbe
jae
arpl
popf
fistps
orb
outsb
add
icebp
xor
push
xchg
std
mov
inc
dec
data16
mov
pushf
movsl
ljmp
lret
mov
mov
in
and
pop
mov
mov
incb
cltd
test
mov
mov
jecxz
icebp
adcl
mov
sahf
inc
scas
aaa
mov
inc
out
ror
je
dec
mov
and
lock
adc
movsb
add
roll
mov
mov
add
mov
icebp
mov
cmp
test
hlt
dec
cmp
push
movsl
or
inc
insb
cmc
xor
mov
and
add
arpl
xor
insb
popa
sbb
insb
fildll
jno
jmp
imul
shrl
sbb
in
dec
sbb
jecxz
sub
fisubrl
stc
fistpll
sbb
and
push
dec
arpl
mov
lcall
sub
dec
insb
jecxz
jg
pop
inc
fidivs
repnz
inc
nop
outsl
add
les
add
lea
push
fwait
mov
gs
inc
cmp
shll
data16
mov
cmp
stc
dec
and
popa
sbb
lds
decl
add
jnp
xchg
icebp
stos
mulb
adc
add
sub
xor
pop
push
ds
cmp
lret
mov
cli
pop
fcomps
popf
mov
mov
mov
fistps
cs
pusha
or
mov
aad
mov
es
jge
cmc
dec
mov
outsb
stos
xchg
xchg
jo
cmp
mov
add
sbb
out
aam
aas
push
or
insb
insl
sub
pop
add
scas
arpl
jmp
cmp
dec
xor
mov
in
lods
mov
es
into
das
sbb
jne
mov
mov
push
js
outsl
xor
inc
cmpsl
shll
cmp
jg
inc
int3
pop
andl
aaa
gs
push
cwtl
pop
imul
mov
cwtl
pop
cmpsb
iret
xor
mov
fimull
addl
cmp
mov
xor
js
cmp
xor
add
insb
xchg
cmp
push
and
add
pop
mov
fwait
mov
nop
iret
dec
mov
andl
inc
cmp
push
test
adc
mov
roll
mov
cmp
jp
push
aas
in
out
push
pop
mov
test
or
pop
out
jp
test
sbb
jb
pop
insb
lcall
popl
push
subb
loopne
mov
xchg
and
dec
xchg
cltd
cli
mov
add
xchg
inc
stos
stos
pop
sub
cmpb
les
ss
out
aaa
sysret
mov
int
fistl
inc
mov
mov
test
out
cmp
sub
mov
jge
jg
or
dec
fcomi
aad
sbb
or
sarl
or
jno
pop
push
jb
add
andl
mov
push
mov
mov
inc
cmpsb
inc
bsr
stos
outsb
not
fists
popa
cmp
jo
sub
mov
shll
lea
dec
jno
mov
mov
cmp
sti
push
add
pushf
scas
into
dec
sbbb
mov
repz
mov
sub
jmp
adc
xor
pop
jecxz
jnp
adc
test
push
jb
testb
mov
aaa
mov
call
jmp
fistl
int
and
cmp
stos
sbbb
bound
fidivrl
push
mov
cmp
mov
xchg
mov
push
jmpw
mov
mov
cmpsl
or
push
je
dec
pop
aam
pop
push
inc
mov
lret
imul
scas
dec
mov
sub
jg
dec
test
push
jge
test
dec
ja
inc
push
out
jno
inc
popf
push
arpl
adc
pop
jae
int3
push
lds
and
xor
pop
push
and
mov
add
xchg
sbb
or
and
cmp
in
pusha
or
sbb
shrb
nop
push
mov
adc
inc
pop
sbb
xchg
outsl
stos
daa
pusha
int
in
jno
sub
das
daa
dec
lahf
ret
pushf
je
jl
testb
jo
jecxz
pop
dec
es
mov
loope
and
shrb
adc
testl
sub
cmp
fisttpl
jecxz
xchg
mov
inc
push
fiaddl
inc
push
dec
and
mov
pop
jo
mov
jns
xchg
push
out
adc
fdiv
add
fwait
xchg
ljmp
sbb
xor
mov
dec
pop
jae
cmp
xchg
jge
pop
cli
cmp
scas
mov
adc
outsl
popf
cld
lahf
mov
mov
mov
insl
fsubrp
lret
jmp
shr
add
inc
ss
ret
fwait
xchg
fdivl
jne
andb
in
mov
jbe
xchg
leave
inc
gs
out
inc
loop
mov
jbe
imul
stos
sbb
test
mov
and
sbb
add
loopne
fs
mov
rcll
dec
mov
imul
pop
or
iret
iret
inc
out
lods
mov
stos
pop
fwait
inc
sbbl
outsb
mov
into
roll
js
adc
sub
and
inc
rorl
pop
je
add
push
into
mov
pop
into
or
add
test
cmc
gs
outsb
mov
jb
mov
ja
outsb
insl
pusha
frstor
lret
or
pop
repnz
fwait
dec
xor
ss
dec
ret
dec
jecxz
sbb
and
sbb
fwait
dec
ret
movsb
pop
jne
in
clc
sarl
jmp
repnz
mov
dec
insl
int3
lcall
lcall
inc
inc
icebp
add
aad
filds
sbb
test
stos
jmp
push
or
fisttps
push
or
xor
pop
cwtl
mov
fiaddl
popf
in
sub
xor
jg
iret
push
and
popa
imul
mov
xchg
test
pop
mov
xor
punpckhwd
sub
inc
or
mov
and
push
aaa
add
fldl
or
lcall
jb
daa
not
xlat
sub
mov
inc
and
xchg
jmp
loop
jo
adc
mov
shrb
loope
shrl
ds
jp
jb
add
dec
sbb
cmc
adc
outsl
push
js
mov
dec
and
mov
es
sub
xchg
leave
aaa
and
and
sbb
dec
pop
stc
mov
mov
push
flds
jae
sbb
jmp
cmp
jle
ja
xchg
xor
stos
insb
das
cs
add
orb
jle
jge
pop
test
test
arpl
adc
sbb
jg
and
mov
dec
cmp
push
lahf
in
xchg
push
negl
mov
int3
and
call
pop
addr16
mov
jmp
dec
sbb
ds
das
ljmp
lds
mov
mov
jl
mov
dec
inc
and
xchg
arpl
hlt
pusha
push
jo
xchg
sub
push
roll
inc
repz
cltd
mov
push
add
cld
scas
inc
ret
int3
fdiv
pop
fistpl
mov
mov
lock
test
push
stos
cmc
jle
movsb
aad
jno
and
in
lds
dec
add
out
or
sbb
mov
icebp
enter
pop
push
inc
lea
lods
push
or
adc
sub
or
mov
mov
cmpsb
cmp
fnstsw
jae
and
xchg
mov
pop
outsb
push
add
js
jp
push
out
xor
mov
enter
jns
out
lods
out
inc
in
xor
pop
jp
and
mov
leave
push
lahf
adc
push
sub
jns
dec
cmp
rolb
mov
pusha
mov
fdivrp
mov
rcll
jno
sub
xchg
lahf
pop
and
cmp
outsl
lret
imul
cmp
test
adc
jbe
iret
cmc
xchg
mov
mov
mov
lods
mov
icebp
outsb
ficoms
or
lods
scas
shll
mov
and
cmp
xor
or
push
mov
hlt
adc
or
dec
xor
push
inc
sub
xor
int
xchg
in
push
icebp
mov
mov
aam
mov
dec
orb
pop
xor
or
mov
std
fnsave
fwait
mov
and
or
pop
push
or
mov
fs
mov
shlb
mov
push
idivb
in
push
push
aam
jle
orl
fistl
aas
lret
dec
and
mov
repnz
jb
cmp
jge
sbb
sub
push
mov
add
dec
dec
stc
jo
adc
fisubrs
adc
cmp
aam
out
push
push
insb
les
loope
mov
inc
pop
in
jno
mov
push
cli
mov
cmp
ret
iret
sbb
test
rolb
xorb
sahf
or
mov
cltd
cmp
cmp
cmp
cmp
rorl
and
call
jmp
or
insl
dec
mov
roll
imull
dec
pop
fwait
mov
dec
xor
lods
xchg
sar
jo
scas
push
test
mov
repnz
cmp
bound
hlt
xchg
sbb
call
fsubl
mov
arpl
out
mov
hlt
orl
scas
pushf
xor
aam
pop
pushl
mov
fwait
xchg
in
xor
mov
fimull
mov
pop
or
imul
xchg
mov
sub
mov
pop
addr16
stos
sbb
iret
cmpsl
xlat
mov
mov
ss
mov
add
lret
pop
imul
pop
xor
test
jmp
scas
mov
outsl
in
in
data16
ds
dec
fmull
aam
ret
push
subb
lods
mov
pop
jae
cli
inc
cmp
pop
out
and
push
add
ja
js
jnp
mov
shl
aam
jbe
adc
jmp
add
dec
loope
shl
push
adc
cmp
cmp
push
jmp
push
rclb
lret
sbb
pop
mov
push
push
cmp
frstor
xor
cmp
xchg
or
adc
pop
xchg
lcall
push
xor
sarb
lret
std
hlt
and
push
push
cmp
fs
sbb
sub
push
inc
xor
gs
mov
mov
mov
in
jbe
inc
or
and
inc
test
cmpsb
movsb
inc
pop
pop
addl
out
sbb
enter
and
jne
das
ss
push
or
or
xor
aam
or
repnz
std
and
rcr
mov
dec
xchg
or
mov
push
data16
push
popa
inc
stc
sbb
leave
xchg
loop
sbb
lcall
jmp
das
sub
pop
cmpb
arpl
jno
sub
lcall
test
mov
ljmp
push
insl
xor
cmpsl
mov
cld
cmp
add
adc
sbb
retw
into
aad
int
add
or
jmp
stos
dec
call
loopne
rcrb
inc
decb
push
or
fists
sbb
leave
mov
int3
or
rorl
push
mov
fistpl
aad
nop
roll
push
aas
addl
and
adc
push
xchg
jecxz
adc
cld
mov
aas
lret
inc
je
cmp
flds
sbb
xor
fs
jmp
mov
pop
movsb
in
insl
sub
mov
test
pop
andb
pop
imul
scas
das
and
mov
fwait
xchg
or
push
les
or
stc
jp
mov
lods
push
outsb
lods
jmp
push
adc
mov
ja
push
vmovapd
xor
dec
mov
jle
jne
gs
int3
xchg
repz
fs
bnd
cmp
stc
inc
cmc
dec
decl
les
fsubrl
jge
sti
mov
xor
lcall
shl
mov
test
imul
adc
mov
cli
and
mov
out
xor
mov
aas
lods
dec
fldl
inc
adc
fldenv
ret
xor
xor
xchg
add
fistpl
or
push
mov
or
adc
cmp
rcl
aas
out
jb
gs
pop
call
mov
mov
and
push
inc
scas
ds
adc
inc
pop
clc
cmp
aam
cli
sub
xor
popf
test
mov
lcall
mov
outsl
std
cli
sti
stc
ljmp
ret
out
repnz
mov
mov
andb
adc
jnp
cmp
test
push
xlat
dec
outsl
fstpt
ret
rclb
and
pop
xor
scas
mov
aad
rcr
dec
lret
lret
lret
cld
mov
out
addl
pusha
cmp
or
xor
add
xor
ret
addl
mov
loope
jbe
push
adc
rcrb
loopne
lods
add
bound
cld
push
cmc
adc
mov
jne
cmp
dec
mov
std
icebp
add
push
mov
sbb
jb
push
pop
int3
dec
pop
ret
and
sbb
shl
mov
shrl
out
cltd
cmp
jns
enter
mov
mov
call
lods
hlt
shll
stos
cli
mov
mov
and
fwait
je
mov
icebp
pusha
fneni(8087
push
pusha
xchg
sub
pop
add
hlt
xlat
pop
pusha
mov
out
jecxz
cmpsl
mov
inc
arpl
lret
dec
repnz
xor
push
ja
test
mov
jbe
jle
mov
push
das
imul
rcll
das
sub
sbb
push
leave
lahf
sub
repnz
cs
loope
xor
mov
dec
pop
xchg
loopne
fsts
aam
mov
mov
cmpsl
mov
mov
pop
xor
add
addl
fdiv
xchg
or
cld
ljmp
movsl
out
pusha
in
test
loopne
mov
mov
mov
repnz
pop
rorb
rcrl
insb
ja
dec
sbb
cmp
int
lea
inc
jecxz
mov
adc
rolb
rcr
mov
cmc
sti
insl
cmp
inc
and
mov
or
icebp
fld
mov
push
xor
jbe
movsb
mov
test
ret
and
pop
rcll
fstpl
jl
cmp
xchg
scas
xchg
xor
dec
cmp
cmpsb
imull
jmp
rcrb
cmp
sbb
adc
in
push
sahf
dec
inc
neg
mov
int
cli
push
test
pop
push
in
push
data16
stos
cmp
aas
movl
push
orb
cmpsb
or
scas
insb
lcall
adc
inc
inc
bound
enter
jg
std
add
fiaddl
in
push
out
in
or
pop
inc
pop
je
push
fnstcw
cmc
or
test
fimuls
cmp
cmp
enter
stos
outsl
test
mov
add
dec
cltd
mov
scas
add
push
out
int
jbe
fdivrp
in
jns
xor
arpl
loopne
hlt
xchg
test
pusha
roll
mov
push
mov
xor
mov
fisttps
and
movsl
cld
test
dec
mov
sbb
jbe
push
adc
xor
jae
xor
mov
je
xchg
pop
nop
or
out
dec
pop
jecxz
stc
das
ret
mov
sbb
outsl
sbb
out
fcmove
xlat
sbb
cwtl
lods
dec
push
addr16
inc
leave
inc
mov
dec
popf
mov
dec
cli
sarl
fldpi
xchg
mov
jo
pop
sbb
xchg
mov
jecxz
jo
mov
sbb
or
shl
mov
lret
cld
scas
push
push
jp
lock
das
dec
push
rcl
lods
sub
test
inc
cmp
jne
jne
sahf
xorl
outsb
std
xor
dec
or
sub
and
push
mov
into
pop
jge
dec
stc
push
sbb
into
sub
out
cwtl
insb
or
push
aam
add
imul
pop
sbb
popa
mov
pop
xorb
adc
idivb
adc
inc
jmp
xchg
mov
mov
xchg
xlat
in
lahf
ret
sbb
out
lretw
dec
xchg
cwtl
bound
loop
dec
cmc
out
addb
mov
push
cmpsl
popf
fbld
aam
sbb
mov
jbe
rcl
sbb
fwait
lcall
rclb
fwait
mov
loopne
aam
push
out
lds
xor
imul
imul
das
jb
stos
xor
das
jno
push
xchg
inc
lock
inc
push
scas
inc
and
dec
dec
mov
into
scas
mov
arpl
out
mov
out
movl
or
xor
out
pop
jg
ret
lods
daa
stos
data16
leave
push
inc
inc
cmp
xor
test
test
add
mov
add
jecxz
jl
push
das
sbb
push
push
popa
outsb
sub
mov
gs
sahf
popf
mov
and
or
adcl
jo
aaa
pusha
sbb
mov
mov
out
repz
jno
lcall
sbb
cmp
lods
xchg
insl
and
les
xchg
adc
jnp
popf
push
sahf
test
fsubrp
scas
xchg
push
shlb
rcrl
mov
xor
jo
jle
mov
mov
fcoml
fnstcw
xlat
jle
xchg
push
sahf
pop
dec
add
push
stc
int3
cmp
jbe
rclb
push
sbb
sbb
jmp
mov
lods
dec
pop
mov
and
cmp
scas
pop
cwtl
sti
inc
fimuls
mov
cmp
shll
dec
xchg
shll
mov
xor
mov
jg
nop
pop
mov
xchg
arpl
cmpl
xchg
mov
fisttpl
mov
std
icebp
inc
jg
loopne
sti
int
mov
inc
dec
jle
jne
lods
es
and
testl
and
adc
pop
sbb
adc
in
mov
push
addr16
sub
cs
cmc
movsl
loopne
fnsave
xor
aad
xchg
mov
jecxz
and
int3
stos
ret
lea
mov
sbb
lds
mov
dec
fwait
stos
xor
shll
fildll
ss
pop
movsl
loop
das
jmp
mov
xor
xchg
rcll
mov
cmc
sub
mov
inc
lret
fstl
in
or
xor
jge
hlt
xchg
lret
test
pop
in
cmp
and
sub
decl
xchg
test
cmpsb
cmp
xchg
das
repnz
mov
xor
sbb
push
lahf
imul
testb
enter
xchg
xchg
push
jmp
xor
add
jne
pop
fwait
mov
push
mov
notb
outsb
cmp
fucom
data16
roll
je
stc
mov
pop
arpl
mov
mov
xchg
and
or
pop
or
mov
lret
or
test
shrb
mov
jb
fs
sub
jp
or
popf
mov
clc
jo
mov
mov
arpl
mov
dec
cmpsb
jecxz
leave
mov
loop
scas
imul
jne
sub
shl
push
shll
rorb
aas
push
or
or
jg
dec
cmp
scas
fstpt
mov
fwait
ljmp
das
pop
aas
imul
pop
or
jg
dec
cmp
scas
fstpt
mov
fwait
ljmp
sub
imul
sbb
outsl
sbb
dec
cmp
scas
fstpt
mov
fwait
ljmp
lret
pop
fldt
jnp
or
jg
iret
mov
adc
cld
xchg
adc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
inc
aad
mov
push
jne
inc
jne
and
xchg
adc
jbe
inc
aad
movsl
es
test
xchg
jae
out
mulb
xchg
and
xchg
jbe
inc
int
mov
push
adcb
out
aad
mov
js
jbe
jl
xchg
sub
push
mov
dec
fnstenv
lea
mov
leave
ret
or
data16
lds
mov
lods
testb
cltd
mov
in
jmp
jbe
mov
xchg
pop
xchg
jmp
mov
xchg
fisttpll
notl
pop
jo
scas
or
pop
xor
push
pop
add
push
xchg
notb
sbb
push
mov
repz
xchg
add
mov
jne
xchg
push
test
insl
sbb
cmc
xor
mov
in
jbe
aas
cmc
pusha
mov
pop
pop
sbb
mov
lcall
sub
mov
out
xchg
jbe
inc
ret
es
test
mov
jl
insl
negb
dec
cmp
xchg
xchg
xchg
push
pop
mov
shll
xchg
bound
xchg
jne
aaa
xchg
cmp
pusha
hlt
jo
in
cmc
sbb
push
sarb
xorl
mov
inc
and
adc
and
fstl
push
gs
testb
and
xchg
jbe
inc
aad
movsl
es
test
xchg
push
gs
testb
and
xchg
pop
pushf
sub
mov
push
int
dec
testb
mov
lds
imul
andb
mov
fcmovnu
out
push
addb
sub
mov
imul
out
push
leave
into
jmp
cmpsl
cld
scas
cmpsl
loopne
sub
sbb
jmp
pop
jbe
or
dec
mov
div
and
pop
fiaddl
and
jecxz
loop
ss
or
jo
rol
mov
loope
outsl
dec
mov
test
dec
mov
xchg
or
sub
clc
sub
rcll
loope
orb
jp
or
push
in
dec
mov
add
imul
fdivrs
mov
lock
mov
add
cmp
jno
in
outsl
lret
aad
mov
jecxz
mov
dec
push
jp
fwait
cmp
and
adc
cmpsl
xor
jns
xor
add
adc
cli
adc
or
rorl
xor
mov
gs
rcr
cwtl
fwait
repz
fwait
xor
dec
sub
sub
out
pushw
push
cld
pushf
sbb
pop
jp
xchg
imul
push
pop
test
les
int
inc
mov
jecxz
fiaddl
sub
scas
mov
jecxz
popf
ficompl
dec
rep
pop
mov
jge
xchg
dec
sub
add
mov
sbb
xchg
pop
mov
scas
or
stc
movsl
leave
and
rcll
rorb
mov
dec
cmpsb
mov
idivl
mov
pusha
std
mov
loop
ss
inc
adc
inc
repnz
sub
adc
cmp
sbb
sbb
pop
and
pop
stos
xchg
rorl
mov
cmpsl
adc
gs
push
lea
mov
scas
fcomp
scas
or
cmpsb
add
push
int3
cmp
hlt
cmp
sahf
push
pop
outsb
sarl
pop
dec
jbe
cmp
inc
inc
ss
leave
fsubs
add
cmc
mov
mov
fistps
cwtl
fsts
mov
or
mov
pop
stc
cld
push
add
jno
daa
scas
sub
xor
sbb
ds
je
bound
jle
cmp
nop
ljmp
movsl
flds
sti
dec
push
pop
insl
mov
aam
pop
out
lret
test
ficoml
hlt
or
mov
dec
cmpsb
pop
inc
mov
inc
test
cwtl
xlat
and
call
dec
jge
add
mov
out
dec
test
or
sub
xchg
or
add
jns
push
mov
test
ret
ror
dec
add
push
mov
cmp
mov
xor
es
xchg
insl
lcall
sbb
fstl
adc
cmc
xchg
xor
rcl
testb
cmpsl
inc
mov
push
shrb
mov
adc
lcall
mov
and
pop
inc
mov
xchg
sub
scas
xchg
mov
in
cltd
arpl
mov
dec
je
fdivrs
dec
xor
adc
movsb
pushaw
pusha
pop
imul
cmp
pop
mov
sub
jns
cmpsb
xchg
into
pop
cmpb
sbb
mov
xor
sarl
push
out
call
ret
sbb
xchg
and
test
push
ljmp
cltd
jmp
lret
cmp
push
jl
jns
fisubs
mull
sarl
ds
rol
call
dec
test
adc
into
jno
cld
xchg
scas
xchg
jae
add
stc
jmp
sbb
mov
sbb
sub
xchg
or
jge
push
insb
stc
addr16
push
pusha
lahf
jns
mov
inc
aad
lds
fcoms
xor
dec
scas
mov
sbb
mov
test
adcb
adc
xchg
in
adc
mov
or
scas
aaa
fwait
dec
cmp
or
rolb
push
mov
mov
xor
shlb
out
lret
push
xchg
adcb
into
shll
xchg
in
sub
les
dec
push
add
sbb
and
xchg
testl
rcll
or
leave
or
jmp
push
jge
roll
and
pop
mov
jl
pop
hlt
cmp
pop
xchg
sbb
xchg
aas
sbb
pop
mov
add
inc
arpl
mov
pop
sub
mov
cmp
add
mov
push
mov
ret
fs
imul
ja
fsubrl
andl
xorl
int3
and
adc
ffree
inc
or
mov
mov
mov
add
gs
xor
mov
dec
lea
and
add
xchg
cmp
aas
ret
insl
mov
jge
jnp
das
addps
pop
jmp
mov
xor
fisttpl
or
imul
and
outsl
shlb
test
sub
addr16
inc
add
add
into
or
adc
sub
das
cld
mov
xor
js
fcompl
and
dec
lea
jg
xchg
cmp
in
out
hlt
lcall
add
mov
lcall
pop
insb
jno
jbe
mul
mov
cwtl
mov
or
sub
js
jle
adc
inc
ljmp
jmp
popa
fwait
mov
mov
xchg
mov
dec
pop
dec
arpl
scas
xchg
aaa
leave
repnz
add
pusha
adc
or
les
aas
sbb
in
xchg
sbb
jle
xor
xor
sbb
hlt
mov
dec
pop
xor
add
das
sub
scas
insb
fwait
pextrw
dec
jno
mov
insb
ret
mov
inc
lret
sbb
sahf
popa
mov
or
int
add
inc
pop
dec
das
cmp
clc
xorb
xchg
add
adc
mov
cmpsl
add
divl
repnz
jb
or
and
bound
fstl
lock
inc
iret
sbb
dec
xor
data16
mov
pop
add
pop
mov
lods
inc
outsl
daa
clc
fisubrs
cs
cmp
test
call
les
lds
xchg
cltd
cmpsl
repnz
xlat
jno
lea
test
cmpl
cli
jne
cmpsb
mov
aas
shll
push
xchg
ror
in
xchg
mov
out
addr16
es
stos
adc
xchg
lds
ficompl
int3
or
adc
in
xor
push
faddl
repz
xchg
or
fsubrs
movsb
in
repz
scas
mov
test
xchg
push
fcmovb
push
movsl
lcall
xor
inc
adc
gs
stc
clc
or
adc
lods
or
adc
mov
mov
adc
cmp
insl
add
xchg
mov
loopne
or
stc
add
mov
mov
jle
jae
mov
add
bnd
pop
jbe
punpckldq
cmp
in
mov
add
add
xor
scas
or
test
inc
arpl
push
in
cltd
add
cmp
dec
cwtl
call
or
mov
insb
cmp
push
loop
test
jne
jo
dec
out
das
mov
call
dec
aas
mov
cmp
sbb
inc
in
dec
xor
and
aas
je
mov
pop
jle
fwait
and
jns
shrb
pop
dec
int3
stos
jb
sub
push
push
and
or
add
loope
adc
out
and
add
iret
xchg
and
add
movsb
mov
jo
lods
insl
ds
and
mov
mov
das
bound
pushf
sbb
or
int
shl
push
adc
push
dec
add
jns
jno
mov
adc
sarb
sbb
mov
push
ljmp
mov
jg
cwtl
mov
or
and
pusha
insl
dec
ret
cmp
or
push
leave
es
add
xchg
in
mov
les
adc
lahf
add
fists
imul
clc
shl
jae
inc
in
js
insb
ret
mov
rcr
and
decb
dec
mov
dec
adc
mov
mov
loopne
les
test
fsubr
je
stos
xchg
push
aam
or
jg
sub
sbb
out
fdivrs
xor
jmp
fdiv
popf
in
and
out
cmp
lods
jl
fisubrl
push
mov
pop
repz
or
lods
jle
sbb
rcrl
inc
loopne
clc
xchg
lret
mov
fidivs
sub
mov
and
jae
push
repnz
jle
dec
fcompl
repz
jo
dec
jbe
cld
cli
call
icebp
shlb
in
lcall
and
jle
outsl
out
mov
jbe
in
movsl
daa
shlb
imul
mov
sub
fisttpl
and
push
push
mov
int3
dec
cwtl
adc
xchg
mov
inc
adc
mov
pop
gs
add
jne
bound
pop
mov
and
sub
leave
sahf
xchg
mov
mov
add
ret
sbb
push
mov
xchg
repnz
test
jo
in
jmp
mov
xor
subl
jmp
lea
aam
ret
adc
decb
pop
xor
pusha
iret
pusha
jge
les
insl
or
scas
adc
mov
jg
xchg
cmp
dec
or
sbb
and
pop
popf
mov
fcomps
aaa
push
je
stc
add
cltd
enter
pop
add
rcr
into
daa
mov
mov
fisttps
fdivl
jne
clc
pop
jnp
mov
in
ljmp
mov
out
add
fcomps
dec
mov
jmp
xchg
pop
divps
add
iret
push
fs
int3
repnz
xor
test
sarl
xor
mov
or
arpl
mov
lahf
xlat
adc
push
pop
lret
dec
xchg
dec
ljmp
imul
ds
int3
loope
mov
pop
sbb
mov
sub
mov
mov
push
repnz
jo
jp
aam
xor
xorb
shrl
imul
insb
sahf
in
jmp
cmpsb
cmpb
jae
icebp
out
push
aam
adc
sub
daa
jb
add
arpl
jns
cmp
iret
es
dec
lahf
ret
push
and
sbb
mov
insl
pop
in
add
test
subb
sbb
jg
add
aaa
or
in
dec
dec
das
push
shrl
stos
stos
adc
in
push
mov
jmp
scas
xchg
lcall
mov
scas
and
xor
mov
das
daa
inc
jno
sub
inc
push
lret
or
test
sbb
push
sarb
xorl
mov
xchg
and
imul
popf
in
and
and
push
mov
iret
leave
lahf
mov
xchg
fsubl
addr16
sub
cmp
xlat
and
stos
sbb
xchg
inc
sbb
fcomps
ds
push
in
lret
add
push
stc
mov
mov
sub
lods
sbb
dec
mov
outsl
adc
cld
jle
sub
pop
xchg
xchg
outsb
mov
mov
cmp
fimull
cmc
std
test
and
ss
push
loopne
repnz
repz
and
sbb
adc
pop
mov
rep
mov
shrl
pop
fld1
pop
xlat
insb
scas
std
mov
sbb
dec
mov
test
and
clc
pop
pop
xchg
push
or
imul
xor
sbbl
shrl
adc
mov
lahf
add
iret
bound
les
inc
mov
fprem1
dec
sahf
loopne
aad
mov
mov
repnz
jne
inc
cli
mov
jns
fadd
test
movsb
and
outsw
jo
fldenv
scas
popf
or
mov
xchg
aaa
push
inc
mov
xor
push
jp
repz
roll
adcl
pop
xor
sub
push
mov
xor
repnz
bound
inc
xchg
cld
pusha
test
rorl
inc
nop
inc
dec
mov
jbe
sub
xor
mov
rorb
fdiv
push
cmp
pop
xchg
sub
sbb
dec
push
dec
les
cmp
sti
mov
pop
loop
cld
push
addr16
pop
dec
fisubrl
insb
dec
in
stos
leave
std
insb
or
sbb
pop
fisubrl
stc
pop
or
mov
orb
push
dec
fwait
jbe
and
stos
xor
jmp
add
ljmp
cs
cmp
or
imul
inc
jl
add
ficoms
aas
mov
xchg
dec
xchg
cmc
pop
addl
sub
pop
outsl
xorl
ret
lret
mov
dec
jp
push
inc
push
fcom
cmp
dec
insb
test
add
mov
lock
hlt
ret
add
adc
xlat
add
in
xchg
push
push
fsubr
lock
int3
jo
repnz
cmpsl
xor
inc
xor
cmp
pop
inc
push
add
xor
cmp
les
or
fadd
clc
add
lods
adc
xchg
test
sub
ljmp
out
fs
movsb
cltd
push
stos
jmp
inc
call
loope
jbe
lds
cld
inc
lcall
into
jge
push
lret
cli
pop
cltd
sbb
add
lods
subl
mov
cmc
xchg
cs
fwait
jle
rolb
mov
psraw
out
iret
in
xchg
or
arpl
xchg
mov
or
hlt
les
enter
jl
push
movsl
push
sub
push
sbb
dec
lcall
insl
push
sub
add
mov
das
ds
add
mov
xor
cmpsb
les
jmp
sbb
shlb
mov
add
sbb
dec
ds
sbb
inc
xor
adc
xchg
ss
push
ffreep
xchg
mov
adc
gs
cmp
lods
rol
jno
mov
lret
lret
out
dec
jecxz
push
imul
ret
inc
inc
cmp
fs
or
sbb
cmp
stc
repnz
ss
pusha
or
xchg
and
inc
inc
sbb
dec
dec
push
cmp
mov
into
js
cmp
ljmp
rcll
push
adc
enter
notl
call
jno,pt
jle
mov
jbe
ud0
or
jae
adc
cmp
lds
ja
bound
and
sub
mov
cltd
int3
popf
pop
fldt
sub
xor
adc
les
stos
in
jecxz
clc
xchg
push
jbe
pop
jo
stc
movsl
jmp
jae
imul
mov
add
fists
cmp
mov
stos
cmp
pop
and
adc
scas
lods
push
inc
mov
jns
mov
out
daa
sbb
loope
outsl
aas
inc
cwtl
xchg
mov
adc
mov
adcb
stc
adc
xor
rcrb
jns
xchg
sbb
nop
adc
rclb
clc
test
fstps
inc
xchg
enter
jbe
xchg
test
test
mov
jne
imul
cmp
div
data16
cmpsb
jecxz
das
xor
sbb
stos
cli
dec
lods
stc
jl
loopne
and
push
movb
cmpsb
popf
pop
cli
inc
nop
sub
lret
push
mov
fwait
and
aas
or
cmp
lahf
add
movsb
lret
jae
inc
enter
ficoml
pusha
pop
loopne
in
adc
mov
push
jle
shll
or
nop
fidivrl
xor
rcl
cmpsb
shll
cmp
xchg
jg
adc
xor
adc
inc
sbb
jnp
push
jle
jno
fdivs
mov
imul
cmp
and
das
int3
es
rclb
dec
cmp
pop
push
sahf
test
adc
int3
add
jle
mov
dec
mov
stc
outsl
inc
and
scas
fisttpl
adc
mov
push
push
push
pop
sub
sbb
xor
cmp
inc
stc
sub
inc
or
push
xor
lcall
cwtl
es
sub
or
leave
xchg
sti
gs
in
xlat
das
dec
fwait
pop
push
add
in
or
ds
loope
xchg
mov
in
int
nop
adcb
dec
mov
and
aas
into
jne
fadds
imul
or
push
push
data16
hlt
sbb
pop
sub
sub
inc
add
fstp
cmp
mov
icebp
and
test
shrb
mov
jle
pop
lcall
mov
outsb
dec
push
aad
pop
sub
addl
test
out
data16
jno
popf
fildll
and
push
into
xchg
fadd
jp
insb
inc
jnp
les
lds
sbb
test
push
in
sbbl
loop
mov
xor
adc
pop
shlb
and
sub
std
imul
adc
in
stc
cmpsl
sbb
push
scas
cmp
push
cmpb
sbb
cli
jbe
jns
sub
lds
xchg
adc
ja
sbb
mov
add
jno
mov
xchg
cmpsb
movsb
and
push
dec
dec
xor
xchg
cs
xor
or
cltd
fmuls
lcall
fistps
adc
jmp
in
mov
jge
sbbl
xchg
mov
mov
cs
clc
arpl
xlat
lds
hlt
aaa
fisubrs
mov
movsl
push
sarl
jbe
sub
jmp
push
jle
je
test
or
xchg
sub
cs
fwait
test
pop
add
sbb
mov
xor
add
add
mov
aaa
call
cmp
lahf
jbe
inc
and
xorb
pop
pop
int3
pop
lods
mov
fdivrl
jmp
je
fnstcw
mov
jecxz
std
sti
jg
sub
push
sbb
xchg
jae
clc
sbb
push
lods
xor
dec
sbb
aam
sub
arpl
pop
cmp
lcall
lcall
or
jne
sub
test
xor
jecxz
sub
imul
ljmp
mov
adc
cltd
into
fsubl
jp
fiaddl
jns
mov
ret
popf
shld
shrl
or
out
ja
loop
inc
fisubl
sbb
lds
dec
imul
mov
jl
mov
xchg
fldt
sbb
mov
sub
pop
jns
adc
daa
dec
pop
scas
fcoml
add
fldln2
test
cwtl
dec
in
ret
or
and
cltd
rolb
cmp
push
shrl
dec
int3
fstps
aas
cwtl
daa
je
push
sub
iret
xchg
ret
add
adc
sub
mov
add
xor
xchg
cmp
call
shlb
dec
xor
add
mov
sub
push
dec
mov
xchg
in
mov
cltd
cli
clc
out
dec
and
jp
insb
sub
sbb
dec
je
les
or
cmp
sub
arpl
lea
mov
jb
mov
push
jge
add
xchg
mov
add
movsl
adc
mov
mov
add
mov
call
out
xlat
sub
dec
lods
call
cld
sub
cli
out
mov
mov
stc
ss
cltd
push
lret
scas
lea
push
hlt
bound
ja
mov
aam
insb
xor
aas
adc
mov
sbb
popa
inc
push
mov
xchg
sbb
out
ss
add
sub
xchg
jnp
notb
push
adc
dec
mov
out
xor
leave
mov
xchg
scas
jns
clc
sub
les
or
sti
jbe
add
push
dec
jb
mov
xchg
sub
cmpsb
push
lea
push
pusha
in
mov
inc
imul
mov
imul
or
pushf
pop
dec
test
push
int3
pop
mulb
jge
insl
xchg
cmp
out
es
sub
test
dec
cmp
add
jge
bound
mov
mov
cs
inc
push
insb
push
xchg
in
leave
movsl
push
or
lret
pop
inc
sarb
stos
inc
cmpsb
dec
and
jecxz
test
lock
add
pop
sub
and
lock
fadds
test
dec
stos
pusha
and
test
and
ljmp
insl
push
mov
xchg
into
jmp
push
mov
cmpsl
stos
inc
mov
lods
nop
iret
jb
jl
imul
add
or
aam
cltd
daa
cmp
into
mov
cmp
orb
pop
jns
mov
jbe
inc
aad
movsl
es
test
xchg
push
gs
testb
and
xchg
jbe
inc
aad
movsl
es
test
xchg
push
gs
testb
and
xchg
jbe
inc
aad
movsl
es
test
xchg
push
gs
testb
and
xchg
shll
jbe
inc
aad
movsl
es
add
out
pop
out
push
mov
cli
jns
imul
stc
lret
xor
fisttpll
push
cmp
sub
or
or
sti
fldpi
call
mov
mov
imul
jns
or
sti
sub
cmp
leave
loop
jmp
ret
stc
rorb
cmpl
or
sbb
push
jo
or
or
scas
test
jb
add
pop
loopne
pop
sub
jle
mov
pushf
cmpsb
push
stos
pushf
push
mov
push
and
int3
add
cmpsb
xorl
hlt
dec
hlt
mov
roll
fsubrs
cwtl
scas
in
adc
dec
decb
stos
aas
out
into
mov
fldcw
stos
in
or
stos
fldpi
leave
fistl
imul
je
sub
mov
push
xor
ret
or
fwait
xchg
push
test
imulb
cmp
jns
pop
push
jno
lods
sbb
hlt
xor
arpl
jl
imul
jg
dec
hlt
pop
jge
sbb
in
sbb
lret
stc
rorl
cmpb
imul
cmp
sbb
outsl
mov
fidivl
fsub
and
jmp
push
push
sbb
js
sbb
xchg
sbbl
in
enter
inc
out
add
adc
sbb
inc
dec
push
jns
outsb
mov
mov
cltd
stos
test
jnp
imul
dec
or
sbb
sub
cmp
leave
sti
fldpi
jmp
mov
mov
imul
dec
or
sbb
sub
cmp
leave
sti
fsubrl
stos
fdivr
xchg
arpl
add
ljmp
add
ss
mov
jecxz
jmp
push
std
push
mov
push
pmaxub
call
adc
push
clc
pop
inc
add
rorb
cmp
pop
into
shl
pop
push
scas
or
cmp
mov
movsb
lods
pop
arpl
add
pusha
sub
pop
mov
push
sbb
or
es
int
in
sti
xchg
push
dec
shll
adc
movsb
out
cltd
in
fidivrs
jecxz
sbb
xor
dec
push
and
or
outsl
cmp
jb
jecxz
pop
repnz
or
ljmp
pop
divb
cld
insb
mov
addr16
popa
filds
enter
and
test
or
push
push
push
sub
xchg
adc
mov
sub
push
mov
inc
xchg
jo
or
xlat
mov
sub
fiaddl
cmpl
or
aas
push
mov
fistpl
ja
cld
aaa
dec
jle
xchg
call
iret
pusha
icebp
mov
aas
xchg
loope
les
mov
sbb
loopne
stc
push
jae
insl
dec
jmp
leave
rcr
scas
inc
fistps
cmp
xor
pop
pop
sub
stos
push
fdivs
xor
mov
imul
or
xchg
fsts
cmp
push
sbb
cmpsl
xorb
stos
dec
jmp
aas
hlt
push
stos
scas
add
dec
clc
outsl
pop
movsb
cltd
xor
test
pop
dec
frstor
enter
xor
shll
xorb
jp
sbb
or
cmpsb
pop
mov
subl
adc
aas
dec
inc
rolb
cmpb
inc
jmp
repz
imul
push
sarl
push
and
mov
movsb
cltd
push
sub
scas
pop
insb
les
clc
push
cs
dec
add
and
mov
loopne
adc
dec
cs
lret
fdiv
pop
mov
insl
popa
std
add
jns
add
cmp
jo
incb
pop
or
and
adc
sbb
or
test
xlat
jns
jno
dec
in
dec
imul
add
jo
pop
push
sub
sub
xchg
adc
add
and
xchg
push
lea
es
jle
stos
xlat
push
or
pop
xchg
leave
push
cmpsb
xchg
or
cwtl
rcll
shlb
pop
inc
cmp
jne
jmp
push
sahf
pop
and
rolb
jg
inc
mov
imull
jp
sbb
add
adc
dec
xchg
or
cmp
sahf
pop
push
or
push
test
and
ljmp
inc
mov
pop
sbb
sub
mov
sti
fdivs
pop
push
aam
into
xchg
decl
repz
adc
sbb
and
std
inc
in
sub
lods
pop
std
and
ss
cmpb
sbb
mov
subb
pop
sub
cmp
and
aad
idivb
jb
ss
movsb
int
xchg
outsb
popf
arpl
and
inc
push
adc
pop
xchg
out
adc
int
mov
inc
push
jno
fsub
mov
jge
add
in
push
jno
sti
repnz
xor
jecxz
cmp
bnd
adc
js
or
loope
and
sbb
mov
ret
pop
arpl
lock
mov
sbb
inc
or
out
ret
lods
fdivl
stc
clc
test
scas
jb
int3
in
add
loop
pop
xchg
stos
inc
aam
mov
hlt
repnz
jae
mov
xlat
mov
mov
sub
mov
sbb
call
cltd
mov
fstpl
xchg
mov
or
out
ror
add
data16
adc
add
stc
xchg
aas
and
mov
mov
jle
mov
xorl
jmp
ficompl
add
adcl
add
pop
out
jnp
addr16
mov
in
mov
cli
loope
cmc
mov
jecxz
aam
dec
neg
jns
xor
fdiv
addr16
push
popa
scas
cmp
push
sub
cmp
mov
or
lcall
mov
out
xchg
push
rcll
dec
mov
xor
in
shrb
or
and
dec
aas
push
movsl
aaa
jb
data16
in
arpl
movsl
sbb
or
and
mov
sahf
inc
sbbl
cmp
xchg
sarb
test
mov
pop
out
pop
jp
xor
aam
and
add
out
pusha
jle
movsb
shll
cmp
sbbb
push
push
xchg
add
js
fistpl
xchg
inc
fwait
pop
out
ja
push
xor
inc
and
iret
out
add
mov
lods
outsb
pop
add
push
dec
sahf
inc
adc
and
sbb
pop
es
cmp
mov
stc
lcall
jno
add
cltd
mov
xor
push
aam
mov
fiadds
sar
mov
mov
adc
sub
mov
scas
xchg
pop
xorb
sub
mov
in
into
jne
shrl
fsubrs
and
insl
adc
jne
xchg
ljmp
inc
cmpsb
mov
aad
aaa
inc
pop
inc
loopne
xor
adc
incl
jae
stc
sar
jno
mov
push
loopne
lcall
cmpsl
cmc
jae
xchg
xlat
inc
jmp
dec
xor
cwtl
fldcw
push
jbe
shrb
outsl
in
mov
xchg
jmp
jbe
push
pop
mov
mov
pushf
cld
and
fisttps
nop
sbb
mov
sbb
adc
repnz
flds
jno
sbb
dec
arpl
fstp
dec
or
lods
in
roll
addr16
nopl
mov
and
das
ljmp
add
je
jecxz
imul
ss
lahf
hlt
loope
cmp
call
push
mov
gs
fs
cmc
lock
inc
pop
adc
lods
lcall
iret
stos
out
repnz
inc
movsb
adc
pop
xor
xor
ljmp
in
rol
adc
movsb
lahf
mov
into
in
mov
jmp
sub
dec
xor
fbstp
xor
jbe
inc
pop
inc
sarb
not
mov
in
fwait
sbb
inc
sarb
stos
nop
push
xchg
fimuls
mov
push
add
cli
jl
dec
ljmp
xor
pop
ret
cmpsl
in
loop
xchg
jns
dec
sti
enter
fbstp
mov
xchg
into
stos
pushf
adc
xchg
jnp
repnz
inc
jo
cmp
test
add
bound
fs
adc
dec
ret
sub
dec
xchg
xchg
push
cmp
shl
lods
stos
xor
push
in
fs
adcb
fmull
add
stc
push
dec
xchg
xor
loope
out
cmpsl
ss
cwtl
pushf
jge
push
jmp
mov
loopne
mov
sub
stos
adc
sahf
movsb
enter
rclb
adc
or
cmp
loopne
rcrb
mov
sbb
adc
movsb
call
shl
adc
jb
stc
pcmpgtd
add
inc
out
into
jne,pt
lods
setge
ds
sub
inc
btr
jmp
and
sbb
repz
nop
xor
sbb
or
adc
lods
fidivl
call
test
rol
into
mov
ss
adc
add
mov
mov
mov
lahf
fldenv
fimuls
loopne
std
cmc
or
cltd
mov
adc
andl
arpl
mov
and
cld
mulb
sbb
pusha
mov
jge
ret
movsb
lahf
dec
xor
cmp
je
loope
sbb
dec
push
add
int3
std
or
dec
jecxz
jmp
outsl
incl
fildl
fimuls
enter
mov
test
mov
dec
xchg
fs
dec
inc
xlat
jg
cs
jmp
jle
sub
jle
loope
repz
scas
test
mov
or
scas
mov
mov
outsw
push
push
and
pop
pop
sub
rcrb
adc
hlt
and
push
xchg
lret
frstor
adc
sbb
jl
mov
shlb
mov
mov
add
cmp
out
adc
sub
mov
pop
aam
lea
sbb
jl
mov
stos
jmp
or
push
shlb
cli
daa
and
xchg
mov
xor
pop
inc
push
xor
loope
ds
push
or
scas
dec
mov
jecxz
xchg
mov
push
push
sbb
into
sar
xor
test
lcall
push
mov
cltd
mov
sub
shll
sbb
ret
push
rcrl
cmp
push
shrb
out
aas
outsb
cmp
aad
mov
ss
adc
sarl
pop
jne
xchg
out
pop
out
sub
and
dec
outsl
call
pop
popa
fs
gs
imul
mov
inc
inc
xor
cmp
sarb
push
jb
cmc
mov
xlat
ds
ret
adc
gs
mov
test
lods
movsb
mov
imul
xchg
das
sti
iret
sbb
cli
mov
push
pop
jnp
out
add
jo
xchg
imul
add
les
out
pop
add
cld
add
fcmovnbe
fsubs
or
mov
ss
cmp
imul
jne
sub
ret
pop
mov
pop
adc
fildl
test
dec
sbb
loope
sbb
out
xor
jmp
sbb
lahf
cmp
add
sbb
jns
xchg
imul
mov
and
sbb
repz
scas
sahf
pushf
sub
mov
adc
inc
mov
cmp
dec
or
xor
mov
insb
lock
jmp
sahf
ljmp
addr16
ds
arpl
cltd
inc
inc
jmp
std
push
mov
add
sub
sbb
scas
ret
shr
sub
ja
jbe
mov
sub
cmp
mov
loop
xor
mov
push
or
push
sub
jbe
jl
xchg
jmp
cld
mov
push
aas
pop
pop
into
ljmp
cmc
push
ja
or
je
push
inc
sbb
jno
cmpsl
pop
mov
push
add
jnp
movsl
jne,pn
sbb
jns
test
inc
or
incb
stos
push
ds
bound
dec
dec
jp
stos
mov
mov
loop
lahf
inc
push
jnp
xchg
xor
shlb
lret
and
xchg
lahf
rcrl
xchg
repnz
mov
mov
inc
sbb
scas
sbb
xorl
lods
inc
in
rolb
xchg
cwtl
popa
mov
push
push
fldt
shrb
fsubl
lcall
pusha
xor
in
sbb
mov
and
cmpsb
sbb
loopne
jmp
jmp
mov
iret
pop
jg
enter
mov
jge
or
aas
fsubrl
xchg
out
and
ret
outsl
cmp
lea
mov
adc
mov
in
cmpsb
sbb
adcb
enter
adc
dec
insb
jno
push
xor
sub
orl
popl
push
test
shll
or
lret
dec
movsb
sub
sbb
shll
or
fistps
sbb
jnp
push
lret
ds
out
sbbl
or
mov
push
pop
push
rolb
push
dec
lock
or
add
rcll
arpl
out
ret
xchg
inc
mov
shld
and
mov
cmc
mov
push
ja
sti
jle
outsb
jnp
in
pop
icebp
jg
mov
mov
iret
add
xchg
lret
clc
ss
rolb
pop
pop
gs
addr16
adc
sar
cs
repz
movsl
pop
pop
hlt
hlt
sub
add
mov
xor
or
rclb
or
sub
mov
cmp
mov
clc
daa
and
mov
add
bsr
jae
inc
outsb
mov
dec
mov
ja
std
adc
adc
sbb
jle
das
jne
hlt
je
lcall
jge
pop
aas
pop
into
in
pop
insl
fildll
jbe
jo
xlat
mov
and
test
jno
test
cmp
pusha
push
push
xchg
aaa
push
inc
mov
ja
jns
test
int
jnp
fs
lea
shl
mov
cmp
sbb
icebp
inc
mov
mov
cmp
lock
cs
stos
jae
lods
inc
push
cltd
aas
sarb
movsl
cmp
ja
sbb
add
xlat
xchg
lcall
cmp
mov
xor
push
out
pop
fstpt
mov
inc
inc
push
lods
icebp
fiadds
push
cs
in
sbb
and
je
popa
cmpsb
ret
xor
cmpsb
cmp
inc
inc
dec
and
sbb
ja
dec
push
dec
nop
adcb
mov
xchg
aaa
sahf
aad
and
fisubs
push
imul
pusha
push
aaa
jmp
sub
addl
mov
add
int3
fnstenv
cmp
jo
cwtl
popa
clc
xchg
xchg
in
shl
jbe
pop
pop
pop
fwait
out
movsl
jge
outsl
loopne
movsl
mov
push
dec
cmp
push
mov
addr16
leave
dec
std
sahf
sub
clc
popa
push
loopne
or
repz
pop
dec
inc
or
mov
dec
adc
dec
cmp
fldcw
inc
sbb
jecxz
xchg
mov
mov
or
sub
jnp
repnz
lahf
lods
cmpsb
pushfw
in
pop
mov
es
dec
out
xchg
dec
repz
cli
pushf
jbe
andb
stos
pop
cmp
pop
push
push
mov
pop
mul
mov
test
inc
pop
int
clc
dec
mulb
mov
arpl
cltd
mov
push
push
pop
sub
cli
pop
testb
and
lds
or
xchg
inc
dec
in
jle
lcall
cwtl
popa
stc
push
cmc
lock
pop
loop
lea
inc
push
stc
adc
bound
nop
or
hlt
mov
out
bound
mov
popf
lahf
mov
mov
mov
adcb
sbb
jae
cmp
fimull
add
sub
dec
scas
sbb
xchg
sti
jmp
cs
sub
sub
sbb
mov
sub
adc
clc
test
orb
ss
mov
dec
cs
out
push
xor
cmp
cltd
jg
jl
cmp
pop
leave
lods
sbb
push
decl
stos
mov
push
jp
addr16
std
mov
in
adc
pop
jle
scas
inc
xor
rorl
movsb
pop
outsb
pop
cld
jns
lret
add
shlb
mov
add
rol
push
int3
xchg
jne
lods
sarl
in
je
jle
push
fisubrl
aam
scas
mov
jbe,pt
movl
sub
jmp
xchg
les
cwtl
jne
in
ret
aaa
mov
jno
in
mov
ds
daa
stos
jne
cmc
fists
mov
and
adc
popa
out
dec
or
sahf
sbb
sub
aaa
dec
scas
dec
sarl
out
push
movsl
xchg
sub
bound
xchg
in
mov
jae
sbb
scas
mov
jmp
mov
inc
insb
mov
aad
xchg
leave
xchg
xlat
repnz
pop
cmpb
jb
adc
fcmovnbe
mov
les
repnz
cmp
mov
loop
stc
ljmp
or
scas
idiv
rorb
adc
pop
and
xorb
data16
pushf
adc
lds
sbb
pop
push
inc
push
xchg
cwtl
pop
imul
shrl
cmp
and
xchg
cmp
shlb
cmc
mov
sahf
shll
fldl
inc
mov
fwait
pop
pop
and
ret
jno
mov
nop
adc
test
pop
stos
push
lods
sub
cmp
imul
mov
ds
into
push
andb
ror
arpl
cmp
ret
sub
cmp
jecxz
in
fwait
or
adc
mov
mov
jp
or
push
sub
loope
dec
mov
jo
sbb
imul
lret
xlat
repnz
lcall
pop
leave
test
sbb
rcr
insl
mov
gs
and
dec
pusha
add
push
fwait
in
push
push
mov
sbb
cmp
lods
sbb
and
dec
mov
lods
dec
push
push
inc
sub
inc
dec
jp
movsl
call
fistpl
add
push
ret
add
jne
adc
imul
ja
sub
inc
push
dec
sub
or
jno
mov
dec
cmpsb
cli
add
rorb
sbb
push
adc
push
and
inc
adc
push
jne
or
sarb
test
in
out
pushf
pop
sbb
dec
or
lock
adc
es
out
adc
rcl
xor
pop
shll
xchg
fisubrl
mov
rclb
addr16
mov
mov
fnstcw
and
in
mov
mov
pop
jge
mov
icebp
xlat
mov
lock
push
aaa
leave
imull
sbb
and
xchg
loopne
lea
push
mov
adc
and
or
xchg
mov
mov
push
stos
mov
dec
stc
fdivl
imulb
shlb
negl
call
sbbl
mov
or
mov
inc
clc
int3
pop
add
adc
addr16
iret
out
lret
mov
fwait
mov
enter
mov
cmc
mov
cwtl
or
ret
bound
xor
bound
ret
pop
aad
xor
hlt
ret
inc
fisttpll
stos
jno
sti
fdivl
xor
repz
mov
mov
mov
call
jns
jb
jp
inc
cwtl
or
pop
sbb
jecxz
loopne
insb
sbb
scas
cmp
adc
sub
sbb
sbb
xchg
and
adc
jae
daa
outsl
mov
rcll
mov
cmp
xchg
or
decl
out
es
cmp
push
outsl
adc
fmuls
lods
sub
add
xor
dec
jge
loopne
push
ljmp
outsl
in
xchg
aas
das
xchg
fidivrs
hlt
cwtl
mov
std
jb
in
dec
iret
mov
loopne
mov
pop
ss
sub
test
sbb
sahf
loope
mov
ja
leave
into
cmp
inc
jmp
aas
roll
cltd
dec
adc
pop
in
ljmp
cltd
xor
pop
inc
nop
int
aad
adc
adc
mov
mov
lcall
call
int
cltd
cmpsl
jne
sub
sub
fldenv
pop
in
adc
or
jns
xchg
adc
mov
push
push
aas
cli
inc
lret
incb
pushf
popa
xchg
jne
iret
inc
adc
aaa
pop
movl
sbb
out
inc
pop
sub
sub
push
stc
mov
mov
xchg
movsb
test
dec
push
inc
push
ret
xor
sbb
mov
push
scas
test
out
pop
inc
cmp
xchg
or
xchg
mov
stc
sbb
lods
pusha
pop
cmp
repz
out
cli
pop
jo
add
dec
ja
aas
pushf
or
fldenv
adc
ficomps
aas
mov
lods
cli
xchg
mov
bound
and
inc
imul
sub
add
adc
xor
aad
ret
inc
test
push
jb
mov
jb
jg
lahf
rorl
lds
jns
imul
ljmp
int
je
cmp
mov
or
push
mov
mov
addr16
test
adc
cmp
and
lret
and
cmpsb
ret
popa
pop
lock
pop
and
fiaddl
inc
pop
or
lcall
cli
xorb
lds
pop
push
and
in
lods
lidtl
test
adc
mov
lret
push
out
add
pop
hlt
jns
aam
fwait
rol
mov
push
inc
inc
xor
mov
push
pop
ret
out
mov
jge
dec
mov
pop
jmp
out
xor
mov
xchg
adc
movsb
cmpsb
jecxz
das
leave
add
sbb
popa
movsb
pop
repz
mov
out
shl
repnz
shrb
pop
mov
xor
inc
idivb
push
pop
or
push
cmc
mov
mov
addl
inc
jp
and
sbb
cmc
mov
insb
xlat
mov
inc
dec
fmulp
pusha
daa
cmp
ljmp
mov
jl
leave
decl
sub
bound
inc
fistpll
inc
mov
ds
jge
or
sbb
in
bound
lret
mov
mov
imul
dec
or
sbb
sub
cmp
leave
sti
fldpi
jmp
mov
mov
imul
dec
or
sbb
sub
cmp
leave
sti
fldpi
jmp
mov
mov
imul
dec
or
sbb
sub
cmp
enter
call
mov
mov
rol
jns
jle
xchg
aam
in
hlt
adc
pop
aaa
mov
xor
out
fistpl
movzwl
cmpsl
das
xlat
pop
dec
idivl
outsl
jae
pop
pop
mov
inc
inc
ja
addr16
xchg
pop
xchg
aas
cmpsl
das
xchg
xor
dec
idivl
out
scas
or
ljmp
imul
movsb
insb
fbld
pop
mov
or
loope
lret
push
call
dec
aaa
rcrb
mov
std
sub
mov
jecxz
sti
adc
sahf
mov
mov
xor
mov
repz
xor
aas
sub
mov
jle
loop
sahf
inc
mov
xor
jg
push
rcll
mov
aas
mov
outsl
lahf
shrb
inc
cmpsl
mov
adc
or
sub
mov
xchg
out
call
in
mov
mov
imul
out
mov
add
mov
loop
xchg
or
dec
movd
nop
call
scas
fsts
mov
andl
push
aaa
pop
pop
xchg
mov
jg
jmp
lahf
push
jg
cmp
movsl
mov
aas
iret
ja
shrl
sbb
addr16
jae
mov
jg
add
jne
inc
cld
pop
cmpl
xchg
mov
dec
rorb
inc
movsl
xor
push
pop
fisubl
inc
fiadds
ds
cld
adcb
pop
mov
fisttps
push
add
leave
imul
out
je
add
inc
iret
ja
addr16
xchg
pop
xchg
mov
cmpsl
das
xlat
pop
dec
idivl
outsl
pop
lahf
pop
aaa
mov
inc
iret
ja
addr16
xchg
pop
xchg
mov
cmpsl
das
xlat
pop
dec
idivl
outsl
pop
lahf
mov
sbbl
lds
pop
mov
cs
nop
ss
int
daa
dec
cld
and
sub
popa
daa
inc
and
es
and
or
mov
outsl
scas
jns
jae
js
add
imul
mov
test
cmpsb
ja
mov
loopne
mov
inc
adc
jns
push
jle
mov
jne
jno
sbb
pusha
clc
lea
call
dec
add
inc
or
push
popa
in
scas
xchg
stos
jg
jbe
cmpsl
mov
push
and
xchg
stos
insl
adc
xchg
xlat
fsubr
fbstp
jge
push
cs
pop
je
jge
ret
rcrb
aam
cmp
lods
mov
lods
inc
mov
int
mov
push
cmp
repz
imul
in
gs
fwait
mov
out
xor
out
cli
aam
imul
sti
sbb
and
scas
fnstsw
fcom
sub
or
push
xor
sahf
int
push
mov
mov
lods
sbb
je
fidivrl
jno
lret
je
rcll
pushf
pop
stc
cmpsl
popa
push
das
test
repnz
frndint
pop
adcl
dec
pop
loop
mov
adc
adc
pop
jle
int
push
xor
jge
adc
pop
fildl
inc
pusha
lcall
fistps
sbb
add
mov
push
lret
pop
or
clc
aaa
jbe
fs
xchg
add
stc
mov
mov
mov
push
or
movsb
outsl
cmp
mov
jno
fdivs
mov
popf
lods
inc
int
push
orb
mov
xlat
leave
jns
cmp
sti
jp
jno
lahf
xchg
push
aas
mov
inc
mov
adc
sub
pmaddwd
sar
mov
mul
scas
xlat
xchg
sti
sub
or
inc
xchg
movsl
dec
insb
popf
cwtl
inc
ret
or
int3
imulb
mov
mov
or
inc
inc
jno
cmp
fstpt
sub
push
xchg
imul
xchg
xlat
or
stc
adc
aad
push
push
adc
outsb
cmp
mov
cmp
hlt
pop
xchg
enter
xchg
insl
add
mov
inc
into
sahf
sbb
push
ret
push
call
outsl
or
int
push
imul
xor
or
divl
popa
jne
add
inc
int3
scas
mov
dec
outsb
stos
pop
mov
add
sub
sbb
jae
sbb
push
inc
jmp
pop
inc
push
rorb
pop
call
aad
push
in
loope
push
mov
insl
jb
or
loop
in
pop
orb
loop
xchg
sbb
out
mov
icebp
in
pushf
pop
mov
sbb
daa
push
cltd
jno
adc
cmpsl
ljmp
pop
mov
xor
in
pop
or
aad
mov
sub
out
dec
adcb
mov
or
sbb
mov
xchg
and
pop
xor
xchg
mov
lock
es
shlb
fmuls
mov
in
inc
aaa
xchg
inc
xchg
jno
mov
sbb
cmp
imul
pusha
inc
jae
insl
bound
in
mov
lahf
lret
mov
adc
mov
xchg
test
xchg
lods
cmp
movsl
fisttps
sbb
daa
pop
mov
dec
mov
adc
out
out
or
pop
adc
add
pop
imul
xchg
inc
dec
dec
dec
adc
dec
lret
out
js
and
push
add
pop
mov
xchg
int3
push
and
pop
in
cld
or
mov
xor
push
sarl
cmp
mov
or
and
fnstcw
pop
daa
int3
gs
or
lret
push
jns
sbbl
sahf
lds
scas
push
ds
jns
lret
loop
inc
adc
sub
add
lahf
lds
push
add
xor
pop
push
aas
notb
into
out
aad
pop
arpl
inc
or
sbb
cmp
xchg
xor
xorl
jo
fldl
loopne
or
lods
test
imul
inc
or
inc
mov
insl
xor
cmc
or
out
pusha
aam
push
mov
dec
imulb
popf
jae
inc
int3
fistl
add
push
push
mov
sub
jecxz
or
sub
or
mov
fstpt
and
mov
lahf
sti
jns
mov
cmp
sbb
daa
scas
aaa
je
loopne
xchg
dec
dec
insl
sbb
jae
lret
add
les
popa
adc
sti
xor
xor
int3
mov
xchg
sbb
ret
pop
gs
enter
inc
in
xchg
mov
adc
aad
add
mov
xor
pushl
or
enter
sbb
repnz
jl
out
adc
cwtl
mov
ret
or
xor
jo
das
popf
das
mov
repnz
mov
js
jne
aam
sbb
push
xchg
pop
out
loope
xchg
jns
insb
and
push
and
xchg
js
xlat
mov
jge
das
or
pop
mov
fcoms
mov
and
and
cmpsb
add
jne
fisubl
fwait
scas
sub
loope
loop
pushf
add
mov
cmp
push
cs
mov
sbb
mov
cmp
sarl
pop
pop
mov
dec
push
push
mov
sub
or
insl
sub
mov
mov
mov
das
ss
xchg
cmpsb
std
sti
and
ss
mov
insl
push
sub
dec
jae
dec
mov
xor
insl
lods
outsb
sbb
test
or
mov
mov
movsb
loopne
loopne
mov
nop
rolb
loope
jl
inc
add
aas
mov
test
popf
rcll
add
icebp
inc
lahf
pop
icebp
ret
dec
arpl
cmp
repz
push
cmp
adc
mov
xchg
jp
push
inc
cmc
leave
cwtl
imul
rorb
movsb
pop
jl
fwait
push
xchg
aam
aaa
mov
mov
iret
inc
inc
mov
xchg
mov
aam
cli
push
adc
imul
xchg
add
mov
enter
mov
ret
hlt
fsub
push
sub
push
sahf
add
and
in
movsb
add
add
fnsave
daa
and
mov
fisubl
mov
rorl
add
and
jnp
pop
jecxz
xchg
lods
sub
ljmp
jo
jne
sub
setp
adcb
dec
movsl
popa
iret
repz
stc
cmpsb
int3
movd
push
in
mov
stc
cmc
pop
and
cmp
or
xchg
adc
inc
hlt
mov
adc
sbb
or
push
and
aad
pop
cmpsb
dec
push
outsb
xor
and
xchg
push
imul
cmp
push
or
xchg
repz
and
cmp
lods
push
mov
push
test
push
mov
dec
out
movsb
pop
cmpsb
jmp
push
and
ds
cmp
mov
pop
out
mov
adc
or
xor
dec
mov
fisubrs
push
pop
aam
ret
sub
sahf
dec
mov
in
push
sub
push
out
adc
lea
repz
add
push
insl
in
pop
nop
inc
sub
int
jae
cs
ljmp
lcall
adc
movsl
movsl
lods
mov
pop
insb
jl
ljmp
xlat
push
cmp
cld
jmp
pop
lods
daa
insl
mov
fsts
sub
inc
xor
adc
into
aaa
pop
or
and
repz
dec
int3
push
fs
sbb
pop
repz
and
mov
repnz
sub
push
call
lods
cmp
gs
push
push
add
mov
lods
lret
addr16
divl
divb
mov
dec
adc
imul
mov
mov
pop
cmp
pop
outsb
inc
aad
xor
enter
mov
push
icebp
sub
fdivrs
xchg
inc
ja
push
fldenv
inc
idivb
inc
xchg
aam
mov
dec
stc
jne
loopne
mov
cmpsl
ljmp
repnz
stos
mov
cmp
add
mov
sub
dec
cltd
enter
movsb
or
jl
out
enter
sti
rcll
add
xchg
inc
cmpsl
jmp
sub
xor
lods
sbb
lds
addr16
xchg
mov
cmpl
adc
pushf
outsb
jmp
insl
mov
xor
pop
stos
xchg
icebp
mov
or
pop
pop
cmp
xchg
lahf
rcrb
test
aam
dec
push
arpl
call
add
mov
jge
in
adc
or
sbb
jno
push
jbe
jno
adc
jge
pop
in
and
sub
xor
enter
add
orl
stc
xor
mov
dec
jg
imul
lods
add
xor
pop
inc
sbb
dec
mov
loopne
pusha
mov
mov
jne
sub
iret
clc
xor
subl
pop
sbb
cmp
scas
push
mov
je
jecxz
dec
add
popf
insl
cld
test
jge
test
adc
mov
mov
out
add
and
das
cmp
sbbb
cltd
icebp
add
xchg
aaa
jge
xchg
in
mov
ds
push
fbld
push
dec
sub
inc
adc
adc
test
fcomp
xor
loop
int3
enter
in
add
dec
out
cli
cld
pop
sub
loop
xor
push
neg
imull
and
test
mov
hlt
cmp
sbb
sahf
inc
jno
cs
cmp
pop
mov
dec
jno
mov
sbb
xchg
mov
pushf
jle
inc
fidivl
xorl
cld
or
into
pop
xchg
loop
rclb
addl
rcrl
add
dec
les
pop
pop
daa
jne
or
dec
pop
shrb
or
sub
ret
stc
lods
mov
adc
outsl
push
jno
pop
mov
movsl
mov
es
jae
dec
lock
pop
or
inc
pop
add
test
outsl
sbbb
sbb
or
lcall
aas
xchg
pop
or
lock
jg
roll
test
test
int3
dec
mov
mov
jge
arpl
test
popf
jb
dec
arpl
mov
pop
ret
pop
and
pop
hlt
test
popa
in
xchg
in
mov
and
jmp
mov
mov
sbb
mov
ljmp
add
fs
sbb
ja
testl
lea
fidivrs
mov
mov
sbb
mov
js
jl
inc
leave
and
add
lret
or
out
icebp
rclb
fwait
imul
inc
mov
or
cmpsl
inc
pop
daa
jmp
rol
ss
inc
aad
pusha
add
fidivs
jnp
push
add
add
imulb
or
fdivrp
out
jne
xchg
or
add
bound
pusha
test
adc
fisubrs
inc
xor
mov
scas
subb
aam
add
ljmp
sbb
sub
push
sub
in
or
lock
pop
fnstenv
jne
pop
mov
jne
loop
pop
insb
inc
les
mov
mov
inc
out
and
mov
lcall
push
pop
ljmp
pop
dec
mov
mov
inc
and
je
add
roll
sub
xor
rorb
flds
lret
add
icebp
inc
jge
test
aam
ja
cmp
mov
outsl
test
cltd
dec
mov
adc
dec
test
rcl
pop
lret
jecxz
outsl
dec
std
ja
cmp
and
test
hlt
loope
fiadds
imul
mov
adc
call
and
out
sbb
xchg
loop
cmpsb
movsl
aam
sete
hlt
std
mov
or
xchg
xor
or
inc
add
mov
das
mov
xchg
push
sub
ja
decb
jge
test
fucomi
sub
xorb
mov
cmp
pop
cmpsl
out
inc
and
call
test
cmp
jmp
mov
pop
or
xchg
pop
js
jns
mov
dec
pop
cmp
in
jle
cmpsb
subb
add
mov
push
jl
dec
lret
enter
in
and
add
je
jae
call
cmc
sub
imul
popa
lret
mov
cmp
clc
sbb
and
mov
sub
lahf
in
and
cmp
jecxz
rcrb
and
sbb
add
mov
xchg
divl
lret
pop
xor
cmpsl
pop
push
push
fsubr
stos
push
adc
shlb
aam
pop
ret
jecxz
hlt
pop
leave
test
mov
xor
fs
pop
test
xchg
cmpsb
into
pop
dec
adc
test
ret
shrl
pop
pop
cld
bound
insl
sbb
pop
ss
add
pop
popf
adcb
rcll
cmp
push
push
cmp
mov
push
mov
fnstcw
dec
add
dec
pop
mov
orl
out
dec
repz
or
dec
leave
pop
repnz
fwait
xor
push
pop
fistpll
pop
insl
ds
fs
mov
or
fmuls
xchg
xchg
jmp
cmpsl
push
xor
imul
dec
xor
or
shlb
adc
add
add
jmp
jecxz
pusha
pop
dec
pop
out
cmp
or
filds
fisttps
mov
xchg
aam
pop
jp
dec
out
lcall
aaa
fisubrs
push
push
xor
jae
rorl
jb
fidivrl
std
add
sti
push
adc
xor
repz
mov
xchg
aaa
pop
scas
and
or
push
xor
xchg
push
mov
sbb
movsb
loop
inc
push
mov
mov
xchg
dec
or
ret
out
pop
mov
push
pop
imull
mov
push
or
aas
adc
fs
jae
hlt
xchg
das
popa
mov
pop
aas
xchg
in
shll
nop
rclb
jecxz
outsb
jmp
cmp
test
scas
inc
loope
or
push
dec
shl
cmp
sub
add
xor
into
jae
inc
xor
js
push
push
inc
mov
scas
add
jne
negl
mov
ss
jl
dec
dec
cmp
jnp
push
inc
xlat
jmp
sub
or
int3
dec
jle
scas
push
mov
dec
outsb
dec
test
jns
and
rcll
stos
cli
adc
popf
xor
push
sahf
cmp
in
jg
push
inc
pop
adc
imul
cmc
sub
mov
and
or
out
adc
imul
jg
sti
int3
inc
fstsw
add
popa
and
mov
hlt
popf
ds
mov
adc
push
movsl
movsb
pop
fisubrs
movsb
push
imul
sbb
shrb
mov
decl
push
in
lret
leave
addr16
enter
hlt
mov
lcall
enter
lods
aam
jae
out
jae
dec
jo
sbb
lods
out
dec
mov
into
xor
mov
mov
xor
jp
adc
shll
mov
fmuls
and
sub
shlb
dec
and
out
jae
or
sbb
bound
inc
mov
mov
inc
loopne
fwait
cmp
lcall
cs
inc
push
mov
mov
push
outsl
es
xchg
adc
pusha
jae
sbb
enter
jb
add
xor
lret
cs
shlb
leave
xor
mov
aad
sbb
dec
sbb
scas
aam
mov
or
xchg
lret
jnp
jbe
push
xchg
push
es
outsl
mov
cmpb
fcmovne
les
mulb
in
aad
or
mov
or
les
mov
sub
mov
pop
pop
arpl
push
jp
cmp
mov
add
movsb
cmp
sti
cmpb
mov
shrl
fcompl
out
dec
jno
mov
pop
adcl
imul
call
stos
lcall
cmc
in
pop
sub
mov
mov
gs
aaa
jmp
js
inc
loope
add
pop
cli
int
mov
mov
jg
hlt
mov
jge
bound
bound
or
mov
insl
daa
pop
inc
xchg
push
dec
aad
xchg
cmp
or
lods
fisttpl
lock
xorl
xor
out
or
mov
dec
add
std
aam
stc
mov
aas
es
loope
sub
mov
inc
pop
fwait
jns
lret
movsb
pop
and
je
fiaddl
push
lock
stos
stos
outsl
subl
cmp
fisttpl
jno
movsb
test
cmp
lcall
jecxz
in
mov
jns
xchg
dec
mov
mov
popf
or
ret
mul
mov
inc
js
pop
orb
mov
mov
mov
shr
and
adc
dec
and
mov
xchg
pop
lock
in
and
sahf
subl
ds
out
inc
out
fidivrs
insb
mov
dec
outsl
mulb
cwtl
add
mov
adc
inc
addb
sti
aam
sub
add
popf
popf
sahf
movsl
inc
cmp
ficoms
movb
push
push
xchg
dec
out
add
push
cmp
flds
and
pop
pushl
cwtl
das
pushf
or
dec
push
cwtl
stos
in
sub
dec
xor
xchg
inc
pop
jne
cli
sub
xchg
cld
add
adc
iret
xor
test
scas
ds
sbb
popa
in
dec
hlt
incb
pop
sub
aaa
mov
in
jmp
sbb
nop
cmp
jecxz
adcb
push
push
mov
pushf
add
pop
fucomip
mov
out
jecxz
loope
mov
adc
scas
and
cmpsb
xor
divb
xorl
xor
repz
jle
insb
pop
xor
aas
cmp
jl
adc
int
popf
fisttpl
stos
adc
dec
lcall
push
push
fs
inc
sbb
sub
fsubl
addr16
pop
and
cmc
out
js
or
test
int3
fldt
cmp
mov
jle
adc
stos
fwait
sbb
xchg
jge
add
and
leave
testb
lds
jl
adc
orl
cwtl
xor
mov
gs
sub
pushf
mov
and
testb
sbb
pop
lcall
scas
fildll
sbb
cmpsl
pusha
out
mov
and
or
add
fidivs
and
add
fmul
sbb
insl
pop
inc
andb
mov
jb
add
test
sbb
dec
ja
cmp
push
sar
dec
xor
mov
pop
cmpsb
les
insb
or
fsubs
mov
hlt
jmp
test
fstpt
xlat
xchg
into
movsb
addr16
xorb
jae
ret
dec
data16
sahf
in
xchg
fnstenv
stos
add
jle
cmpsl
dec
outsl
jno
dec
aad
sbb
dec
sarl
jo
jl
mov
popa
ljmp
jl
dec
imul
add
ret
xor
jnp
test
movsl
sarl
xchg
int
or
push
aas
jmp
clc
cmp
mov
jmp
cmpsb
jp
inc
pop
mov
or
ret
or
mov
mov
and
inc
jmp
lret
sbb
sbb
pop
xchg
data16
testb
push
int3
cmpsb
and
mov
inc
stos
loopne
pop
add
stos
in
movsb
adc
rorb
adc
mov
pop
pop
pop
sub
cwtl
seta
stos
loope
cmp
pop
lock
icebp
fidivrl
and
jge
adc
clc
mov
int3
or
cmp
inc
mov
sub
loope
pop
adc
push
pop
push
imul
fwait
adc
push
adc
ja
mov
jmp
mov
add
add
pushf
mov
test
lea
jg
pop
int3
xor
mulps
dec
lods
cli
in
fmull
in
pop
enter
mov
lods
std
bound
call
dec
push
inc
out
push
sbb
mov
fidivrl
inc
xor
and
mov
sbb
fists
rorb
mov
repnz
mov
fsubrs
push
bound
int
call
arpl
loopne
movl
cmpsl
loope
mov
das
adc
xchg
mov
add
cmpsb
xchg
out
add
mov
test
stos
push
push
push
mov
bound
xor
xchg
loop
popa
mov
sti
data16
popa
cmp
cwtl
jb
inc
ret
or
jecxz
sub
clc
cmpb
pop
int
loop
out
sbb
into
cli
les
js
mov
cmpsb
insl
and
sub
and
xor
mov
cli
cmp
outsl
sbb
fidivl
scas
in
jo
daa
scas
push
filds
ja
addr16
xchg
pop
xchg
mov
cmpsl
das
xlat
pop
dec
idivl
outsl
pop
lahf
pop
aaa
mov
inc
iret
ja
addr16
xchg
pop
xchg
mov
cmpsl
das
xlat
pop
dec
idivl
outsl
pop
lahf
aaa
push
daa
scas
filds
ja
cmpsl
out
xchg
movl
dec
negl
outsl
add
pop
scas
push
fists
ja
out
xchg
loopne
movsl
sbb
xlat
dec
mov
sbbb
and
xor
add
adc
aam
pop
out
xor
pop
mov
xorb
loopne
repnz
shlb
shlb
and
xor
add
adc
pusha
xchg
jo
inc
mov
mov
xorb
loopne
rolb
xor
and
shrl
rcrl
or
jns
push
mov
filds
call
gs
push
xchg
dec
rcrl
add
jo
xorl
enter
icebp
fstps
mov
iret
cmpl
jo
lds
cltd
and
pusha
mov
loopne
shlb
fstp
int3
pop
repz
push
lea
mov
and
xchg
dec
mov
loopne
or
ror
and
cs
leave
lock
lahf
nop
jno
mov
bound
sahf
pop
inc
lock
dec
iret
rolb
jo
mov
sbb
xchg
push
mull
lea
sbb
lock
aas
xor
jno
push
sarb
inc
lock
xchg
lahf
pop
jb
mov
pop
and
scas
cmp
popa
movsl
out
mov
and
shrl
roll
adc
ja
pusha
addl
test
cwtl
jno
popa
clc
adc
add
xor
addr16
mov
cmpsl
adc
push
rorb
fsubrl
repz
hlt
pavgb
mov
mov
mov
pusha
mov
hlt
jo
inc
fiadds
mov
andb
or
mov
mov
inc
sbbl
std
jo
inc
mov
mov
xorb
loopne
lock
xor
and
shll
roll
adc
pusha
xchg
jo
inc
mov
mov
xorb
loopne
lock
xor
and
rcrl
aam
add
or
adc
orl
daa
sbb
movsb
push
mov
mov
mov
or
out
inc
das
or
push
xor
pop
and
int3
and
jns
imul
out
std
std
xchg
push
ret
adcb
cmp
pop
popf
mov
fnstenv
mov
loope
aam
mov
add
inc
xor
add
fwait
dec
mov
mov
out
lods
jmp
aad
mov
xchg
mov
mov
xchg
ds
shl
dec
cmp
movsb
xchg
inc
cwtl
out
mov
jbe
mov
iret
inc
daa
shll
push
ja
sbb
push
pop
lcall
mov
mov
ret
sub
in
cltd
or
push
cmpsb
cmp
popl
xchg
movsb
xor
std
les
leave
xor
fwait
mov
xor
cmp
jo
fwait
stos
jne
leave
mov
dec
insb
fisubrs
sti
test
fisubrs
sub
xor
sub
out
mov
inc
subl
and
adcl
out
push
std
jb
daa
into
divl
fst
fcmovb
xchg
dec
outsb
ljmp
sbb
mov
push
add
arpl
mov
or
cmc
movsl
cmpsb
cmp
rcll
mov
pop
or
sbb
pop
xchg
pop
xchg
jle
je
call
test
adc
mov
and
jo
push
mov
jns
rorl
adc
data16
or
inc
dec
ret
mov
push
lock
ja
loope
std
sbb
in
addr16
jne
fnsave
pop
test
fucomi
sub
ljmp
sahf
or
jne
xchg
jnp
and
int
shrb
push
aam
push
test
fcoml
and
and
pop
clc
push
in
lods
in
sbb
push
xchg
roll
aad
jp
jl
movsb
bound
lahf
test
xlat
sbb
xor
mov
lock
int
xchg
sahf
mov
mov
inc
rcrb
mov
inc
fstps
jne
or
ss
xor
cmp
lds
sub
sbb
mov
push
sahf
dec
push
mov
and
sbb
call
leave
mov
pop
jg
add
xchg
outsl
into
mov
sbb
rcll
jge
cmpsl
jns
cmp
out
cmp
in
push
xchg
lds
jae
cmp
icebp
fwait
in
inc
jecxz
pusha
add
fimuls
aad
fldt
decl
push
pop
dec
daa
pop
add
dec
aad
arpl
daa
fcoms
adcl
nop
jge
pop
mov
in
or
outsl
push
push
push
ja
or
fildl
fsubrs
or
cvtps2pd
jg
stos
mov
jl
lock
cmp
sbb
mov
imul
lahf
jns
dec
push
jnp
clc
pop
push
dec
jp
stos
pop
mov
fisubs
fnstcw
push
dec
jecxz
xchg
nop
aas
push
mov
mov
jle
cs
or
inc
and
xor
mov
xchg
and
xchg
adc
lds
xor
arpl
push
pop
sub
iret
into
hlt
lds
mov
or
ds
push
dec
push
mov
mov
aam
push
ret
in
add
popf
dec
jnp
inc
lret
and
jecxz
je
ficomps
inc
gs
imul
sbb
std
in
in
xchg
mov
or
xor
lcall
mov
in
cmp
jbe
jle
movsl
and
scas
mov
xlat
sbb
xlat
sub
out
ss
or
inc
outsb
lret
loope
outsl
cmp
pushf
pop
lods
jno
or
push
mov
stos
inc
mov
and
pop
ret
cmp
arpl
movsb
or
inc
shlb
push
jg
dec
push
hlt
adc
rorl
mov
xor
add
dec
iret
imul
aam
sub
lods
cmc
sub
repz
lea
sub
mov
movsb
mov
jmp
mov
nop
imul
mov
jmp
in
mov
aam
flds
push
iret
mov
std
mov
jp
jge
push
sarl
xor
mov
lret
or
mov
je
lsl
xor
ret
pop
xchg
sbb
jnp
xchg
jge
ja
jmp
sbb
test
push
cmp
aas
mov
jbe
aad
mov
xor
jmp
sarb
ficomps
mov
pop
adc
cli
mov
cwtl
jg
mov
mov
and
nop
push
xchg
arpl
xchg
ror
jns
push
mov
mov
rcll
out
dec
mov
mov
sbb
fadd
ret
movsb
cmp
cmp
push
daa
loope
jbe
imul
call
enter
cmpsb
push
pushf
clc
add
rorb
es
mov
fcmovne
inc
pop
lcall
aam
adc
xlat
xchg
nop
lods
out
mov
add
lcall
ret
gs
addr16
fcoml
std
fidivs
aam
popa
sbb
mov
insl
mov
xor
jle
pop
gs
ljmp
into
sub
ret
test
pop
jns
cmpsb
sti
popf
stos
out
movsl
jge
xorl
scas
sar
sbb
lock
in
and
pop
test
sbbb
and
jmp
mov
aas
adc
add
scas
stos
cltd
dec
in
bnd
dec
cmpl
mov
and
gs
shrb
or
rcr
in
mov
sti
sub
arpl
xchg
mov
or
mov
and
vandnps
lods
lret
shr
inc
sub
fs
mov
ret
inc
jb
mov
cmpl
ja
push
stos
xchg
repnz
inc
jg
daa
out
cmp
ja
lock
stos
movsb
ljmp
aas
mov
jg
jle
aad
lret
sti
mov
inc
push
notl
fnstenv
scas
dec
adc
add
iret
movsb
cmp
jne
in
add
es
push
inc
xor
decl
fcomps
andl
loope
mov
imul
or
out
ret
xchg
cmp
test
popa
sbb
or
and
xor
pop
pop
aad
mov
and
push
ja
cmp
sbb
loopne
push
pushf
aam
cmp
sti
fnsave
inc
add
outsl
sbb
ss
pushf
into
popf
aam
aaa
fcompl
aas
imul
cmpsb
mov
pop
loopne
add
mov
in
xchg
iret
in
jne
xchg
and
add
sub
cmp
sahf
xor
mov
mov
adc
dec
inc
xchg
addr16
out
dec
int3
test
clc
jecxz
out
jmp
sbb
mov
lret
xchg
cmp
in
mov
in
and
sar
iret
addr16
shrb
push
and
pop
movsl
movsl
sub
test
pusha
movsb
mov
jl
pop
xlat
add
jecxz
or
arpl
fucomip
mov
icebp
cs
push
mov
ds
ljmp
clc
fwait
pushf
xor
mov
sti
cmp
lds
xchg
mov
lcall
ffreep
mov
dec
cmpsb
rolb
pop
arpl
scas
iret
fiadds
pop
mov
scas
insl
jl
out
xorb
inc
sbb
xchg
lcall
dec
push
xchg
cli
mov
cmpsb
leave
cmc
inc
cmp
or
cmpsl
xchg
mov
outsb
cmp
rep
mov
ret
fnstcw
add
fiadds
ret
sub
cwtl
pushf
repz
fucom
xchg
inc
stos
cli
in
push
loope
dec
cmp
lods
push
push
ret
sub
mov
ljmp
ds
pop
adc
stc
xchg
movsb
mov
test
mov
rcrl
lds
test
test
stos
lcall
push
cmp
fildl
jl
or
out
push
cmp
imul
popl
pop
ds
loopne
mov
fs
icebp
out
mov
push
shlb
test
sub
push
fimuls
rcrb
cltd
out
push
aaa
jb
pop
std
pop
inc
out
shlb
stc
imul
xor
dec
push
inc
pop
es
inc
aad
int3
add
test
cltd
daa
jns
out
stos
lret
push
out
cmpsb
inc
add
scas
xor
insl
aam
adc
popf
or
aas
mov
inc
sub
cmp
mov
cmp
loop
pop
fwait
lds
bound
pop
cmp
lods
outsl
cmp
enter
or
cmp
insb
lcall
xor
mov
enter
jo
aas
and
sbb
movsl
add
pop
in
fwait
jg
and
and
pop
mov
xor
movsl
jae
test
lea
std
mov
fists
insl
outsb
lcall
mov
cltd
test
cmp
bound
insb
testb
sbb
cs
clc
imul
les
add
inc
cwtl
call
sub
pop
call
xchg
das
ljmp
dec
repz
adc
inc
lcall
fimuls
in
fisubrs
dec
test
or
xor
repz
mov
stos
sahf
ficoms
xchg
repnz
in
mov
into
ret
push
scas
cli
smsw
stos
or
adc
push
xlat
fcos
repz
mov
xlat
fidivrl
push
out
rolb
mov
es
in
or
cmp
frstor
mov
mov
pusha
into
mov
inc
imul
xchg
jge
cmp
xor
dec
in
out
adc
mov
or
xchg
cmp
mov
ljmp
test
mov
sahf
ljmp
mov
out
ret
or
pushf
mov
fdivrl
shll
mov
mov
repz
dec
lock
outsl
pop
sub
enter
loop
movsb
xor
insb
ror
inc
fisttpl
lret
call
push
adc
push
inc
add
cs
sbb
jecxz
andl
andnps
test
outsb
mov
clc
pop
push
and
pop
cs
and
add
push
pop
jg
push
arpl
xor
ss
pop
push
call
rcrb
sbb
sbb
xchg
dec
rolb
pop
fildl
inc
mov
aaa
push
nop
aas
or
fcomi
inc
jae
push
sub
xor
push
in
loopne
push
xchg
fists
sub
cmp
out
push
outsb
adcb
dec
enter
mov
in
push
xor
lds
iret
or
lods
insb
mov
push
dec
sub
mov
hlt
sub
js
mov
std
mov
lret
lea
sub
pusha
aas
test
cmp
lock
icebp
sbbl
pop
shl
loop
nop
and
ja
rclb
dec
sbb
xor
xor
cmpsl
insb
mov
movsb
or
sub
inc
and
mov
adc
insb
fwait
dec
pop
in
inc
inc
mov
sbb
cmp
and
leave
imul
inc
pop
iret
adc
hlt
xchg
mov
bound
fidivrl
lock
stc
in
push
jge
bound
stc
dec
xor
fwait
or
mov
mov
ds
divl
lods
mov
ljmp
push
daa
xor
adc
inc
and
addr16
and
mov
or
mov
je
ret
aaa
ds
jnp
pop
ss
xor
mov
xchg
xlat
jno
ret
cmp
lods
adc
jne
xchg
movsb
or
mov
fisubrl
inc
cld
rcr
arpl
scas
mov
loope
push
push
lahf
inc
xor
fstp
das
mov
pop
ret
lea
mov
adc
fimuls
pop
out
add
jle
cmpsb
dec
cmpsb
or
xchg
inc
pop
sbb
enter
divb
cwtl
ret
mov
gs
sahf
xor
dec
rclb
push
les
dec
sarl
jns
jb
dec
addr16
or
mov
insl
mov
xchg
dec
and
jno
mov
ja
lret
xor
xchg
add
stos
call
xor
lcall
jo
or
xchg
outsb
mov
cwtl
or
bound
add
pop
pop
jbe
mov
loope
cmp
orl
mov
inc
pop
jmp
cmp
out
push
xor
mov
jmp
arpl
push
or
pop
jp
add
and
sub
out
cmc
je
dec
jmp
push
add
mov
mov
sub
mov
push
mov
lret
jns
mov
pop
aas
out
outsl
pop
shr
nop
fwait
aad
jns
add
sbb
mov
xor
fsubr
pop
cmpb
push
int
cld
mov
and
or
push
fnstenv
push
mov
stos
dec
cmpb
out
inc
sbb
cmp
pop
mov
nop
jnp
sbb
sbb
jle
fidivrl
inc
ss
dec
push
iret
xchg
das
popa
jne
mov
int
ds
cmp
repnz
add
and
lea
lods
insb
pop
xor
stos
adc
pop
pop
lret
mov
mov
test
inc
out
adc
push
out
mov
fdivp
xor
jmp
pop
mov
pop
js
fidivrs
incl
les
fnstenv
push
mov
shlb
sahf
sub
mov
inc
fs
out
pop
jns
fs
out
pop
and
push
insb
scas
in
xchg
out
pop
sbb
pop
adc
cmp
jp
jg
fisubl
add
pop
jmp
pop
jo
leave
movzbl
test
mov
notl
xchg
test
add
faddl
scas
out
into
hlt
fcos
sub
cltd
jl
scas
pop
or
xor
sbb
fmulp
cmpl
loop
js
adc
shl
shrb
xor
push
xor
cmp
push
and
push
fldl
push
test
mov
push
pop
dec
jo
adc
shlb
aam
dec
inc
mov
xchg
inc
dec
adc
pop
es
je
cltd
and
test
jl
ja
scas
daa
push
push
orl
add
or
mov
cwtl
mov
stos
aas
or
mov
adc
out
sub
loop
sub
lds
int
into
inc
stos
cmp
sarb
mov
mov
sub
mov
es
loopne
jmp
test
sahf
mov
push
out
push
mov
mov
cld
mov
and
pop
xchg
pusha
data16
pop
cltd
int3
test
daa
in
xor
add
or
cmpsl
repnz
subb
mov
dec
or
jns
fwait
or
and
xchg
dec
inc
lcall
dec
out
mov
lods
mov
push
cld
pop
hlt
leave
jmp
data16
mov
or
push
scas
aad
nop
mov
cmp
inc
inc
repnz
xchg
aad
adc
cld
add
adcb
sbbl
icebp
adcl
cmp
inc
cwtl
sub
addr16
and
pop
mov
push
ss
fadds
cmp
lods
pop
repnz
xor
sti
je
into
imul
dec
push
push
cmpsl
shrb
mov
sbb
jecxz
pusha
inc
fmul
int
movsb
xchg
roll
in
xchg
cmp
add
mov
dec
inc
push
pushf
jae
add
in
push
xchg
and
fcomp
push
or
mov
sarb
into
insb
push
daa
ja
decb
outsb
clc
sbb
and
mov
push
sbb
mov
sbb
les
addr16
push
insb
dec
push
push
ret
es
add
xor
aas
dec
setb
add
mov
lock
mov
pusha
repnz
sbb
movsb
pop
sarl
aas
subl
or
lock
push
leave
dec
icebp
in
ds
xchg
fdivr
jmp
sbb
inc
outsb
push
dec
mov
mov
add
and
mov
xlat
fwait
lret
into
test
push
ret
push
xorl
mov
adc
xchg
stc
add
cld
aas
fmull
push
cmp
push
cmc
mov
insb
or
outsb
push
sbb
sahf
add
arpl
lret
dec
test
dec
arpl
insb
imul
into
fstpt
jnp
nop
pop
mov
das
pop
scas
push
xor
jb
fisubl
jmp
cmpsb
pop
aad
or
mov
ja
filds
nop
adc
icebp
call
lods
pop
pop
nop
and
push
cmp
push
jg
add
mov
aas
pop
mov
fldenv
into
out
pushf
mov
cltd
sar
xchg
subb
rcrb
daa
mov
hlt
stos
cld
aad
dec
enter
sub
xor
mov
cmc
xor
xlat
mov
leave
mov
mov
mov
adc
std
hlt
test
or
scas
fcmovu
stos
sub
lock
or
gs
pop
pop
xchg
and
xchg
mov
push
enter
push
sti
repnz
rorl
cmp
mov
fldl
sbb
xchg
stos
lcall
bound
pop
pop
cmpsb
xchg
jl
fwait
push
cmp
dec
clc
pop
jae
and
inc
cmpsb
xchg
pop
push
mov
idivb
add
mov
inc
or
push
iret
jg
dec
lock
lahf
mov
sahf
inc
and
xchg
xchg
lret
bnd
adc
dec
push
imul
sbb
andl
mov
ds
insb
and
push
das
sahf
pop
inc
push
xlat
adc
dec
out
adc
in
dec
into
out
adc
mov
jecxz
push
xor
jne
loopne
xor
pop
int
push
in
out
push
xchg
dec
sahf
mov
cld
and
lods
repz
stos
lret
push
pop
imul
stos
sbb
cmpsb
lret
pop
loope
into
std
mull
mov
fwait
test
lret
lahf
push
mov
pusha
dec
ja
leave
stos
adcl
xchg
push
mov
xor
stos
cmp
sarl
das
or
iret
cmp
loop
cmp
fdivs
loop
in
out
out
pop
repz
push
adc
pop
add
outsb
lcall
xor
dec
mov
jns
lods
add
das
dec
or
leave
cmp
sbb
xlat
test
push
out
lcall
lret
lret
enter
push
sbb
imul
or
popf
lcall
popa
cmpsl
int
shlb
sub
jnp
aas
dec
rorb
jb
inc
mov
pop
or
outsl
jno
clc
mov
imul
inc
adc
mov
xchg
mov
pop
test
jno
jp
les
lods
ds
push
sbb
test
xor
jg
cmp
cli
cmc
mov
stc
aas
std
ret
test
fptan
xchg
arpl
outsl
into
mov
and
movsl
push
scas
ret
jne
add
inc
and
sub
imul
hlt
or
mov
xchg
sub
call
loop
mov
jmp
fiaddl
xchg
cmpb
cltd
inc
daa
sub
push
mov
jle
mov
arpl
call
jge
insl
mov
adc
fdivs
mov
std
aad
add
mov
mov
push
and
push
xchg
mov
dec
outsl
imul
mov
or
fadd
jg
pop
fwait
test
repnz
add
ja
xor
jo
mov
lret
fadds
cli
mov
jmp
pop
dec
fidivs
inc
iret
mov
push
or
xchg
mov
adcb
rorl
bound
outsb
dec
aaa
xor
std
mov
and
jne
out
and
xlat
jbe
out
xor
icebp
jecxz
dec
ljmp
mov
loopne
mov
adc
hlt
push
xor
adc
adc
pop
xor
jecxz
add
pop
push
pop
imul
sub
test
std
dec
cmpsl
pop
jmp
out
mov
xor
rolb
mov
fisubrs
int
ss
lock
fisubl
stos
loope
xlat
jl
inc
insl
shll
cmp
lcall
test
fistpll
xchg
or
add
sub
out
pop
gs
stos
lret
stos
mov
mov
or
xor
jge
loop
cmp
test
daa
lock
xchg
mov
lods
nop
sbb
jecxz
insl
icebp
cmp
mov
sub
shr
iret
sub
sbb
dec
jp
orb
lock
pusha
xchg
jo
inc
mov
mov
xorb
loopne
lock
xor
and
shll
roll
adc
pusha
xchg
jo
inc
mov
mov
xorb
loopne
lock
xor
and
aad
roll
adc
pusha
xchg
jo
inc
mov
mov
xorb
loopne
icebp
add
xor
and
shll
roll
adc
bound
rcrb
scas
dec
jmp
jno
push
xchg
cltd
js
aas
into
das
ficoms
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jne
gs
push
lcall
jnp
bswap
cmc
cmp
sub
sbb
or
pop
test
mov
inc
mov
fiaddl
dec
aad
lds
jne
movsl
push
sbb
stos
push
lcall
adc
xchg
sub
aas
lret
sub
dec
sub
sub
cld
cmp
std
into
xchg
movsb
sub
pop
dec
add
icebp
mov
orl
lret
adc
or
pusha
aad
sbb
xchg
movsb
xchg
or
sbb
insl
xor
mov
lcall
aad
add
stos
lock
test
jne
sub
push
inc
mov
sti
xor
nop
push
add
inc
sub
scas
pop
dec
adc
xchg
push
movsl
mov
mov
push
mov
mov
call
mov
push
in
lret
pop
xchg
lds
lcall
xlat
addr16
scas
add
sub
or
or
outsl
sub
mov
lcall
adc
cmp
sub
sbb
or
pop
test
xor
adc
xor
xchg
pop
lcall
mov
sbb
pop
ret
or
mov
sub
xor
lods
push
lret
mov
xlat
jnp
gs
lret
add
aas
lock
repz
cmp
sub
jns
and
lret
in
aad
lds
mov
movsl
push
pop
test
mov
inc
mov
fiaddl
sub
sbb
or
pop
test
mov
push
lret
ss
push
movsb
repnz
fcom
je
cmp
xor
mov
cmp
out
test
mov
mov
xor
sbb
jbe,pt
in
mov
icebp
mov
pop
pop
inc
iret
mov
and
dec
cmp
repnz
out
subl
and
js
dec
fwait
out
pop
mov
add
xchg
cmp
pop
popa
scas
mov
imul
lahf
das
jnp
lcall
xchg
and
mov
cmp
nop
and
pop
outsb
cwtl
pop
shl
sub
add
mov
mov
jge
js
sub
sub
xor
fs
and
popf
nop
inc
jns
jecxz
sbb
vshufps
test
add
pop
test
adc
mov
or
mov
rorl
cwtl
les
jns
imul
mov
fld
fdivl
adc
rcl
mov
inc
sbb
cmp
pminub
les
or
and
mov
mov
inc
mov
push
arpl
roll
adc
hlt
ret
xor
dec
jae
test
inc
xchg
clc
add
pop
pop
sub
push
jmp
xlat
jp
pop
push
or
aaa
mov
lods
adc
mov
mov
lahf
cld
movsl
mov
js
test
pop
stos
sbb
pushf
mov
sti
jmp
test
out
hlt
loop
test
pop
repz
daa
bound
sahf
xchg
mov
int
xlat
imul
inc
pop
test
mov
adcl
fdivp
pop
cmp
ljmp
scas
pop
out
mov
sbbl
nop
inc
push
xchg
xlat
jae
sub
out
add
lods
push
lcall
push
pop
xor
pop
add
rcl
pop
js
loope
xor
sub
lock
fcompl
sbb
xor
fiaddl
out
add
push
cmp
push
pop
sbb
or
xchg
push
push
cli
mov
clc
pop
sarb
test
sbb
fsubl
xor
in
cmp
test
das
adc
in
call
push
xor
ss
mov
stos
push
push
mov
and
mov
or
arpl
push
xchg
fdivrl
pushf
int
cmc
and
mov
xlat
dec
das
imul
mov
je
lcall
or
outsb
cmpsl
jge
repnz
dec
inc
test
cmp
push
xchg
push
punpcklwd
pushf
mov
ret
adc
dec
ss
xchg
push
push
cmp
jp
cli
jg
out
xor
test
cs
lcall
fldenv
adc
loope
stos
out
ffreep
xor
push
insl
jle
fucomip
scas
xchg
aas
xlat
jmp
sbb
jmp
out
or
aad
adc
add
pop
cmpsb
hlt
adc
mov
sbb
mov
pushf
into
out
pop
fnstenv
mov
scas
lret
xchg
jmp
adc
mov
cmpsl
outsb
adc
je
xchg
rcr
loopne
ret
fsubs
js
hlt
mov
mov
sub
add
jmp
ss
into
gs
daa
int3
mov
adc
dec
insb
rclb
movsb
mov
ror
bsf
dec
fnstsw
sar
jge
jo
jp
mov
popa
in
and
incb
stc
test
push
add
inc
mov
jae
cmpsb
and
jno
stos
call
and
push
out
pop
imul
adc
test
fnstcw
mov
fidivl
jg
imulb
loope
or
and
cmp
das
mov
xchg
xchg
pushf
inc
or
push
cmpsl
xchg
jmp
jmp
sub
mov
or
and
fsubs
xchg
jl
dec
jecxz
roll
outsb
mov
repz
dec
xchg
push
ret
aam
aas
in
cmp
aas
jle
fnstsw
inc
or
jo
rcl
and
jl
mov
xchg
fstpl
cmp
adc
jl
xor
inc
loope
push
add
aam
jo
add
or
pop
pop
sbb
cmp
sbb
xchg
sbb
cmpl
cmp
dec
mov
das
or
rcrl
hlt
lock
sub
enter
sbb
stos
mov
enter
iret
jmp
cmp
push
push
and
loope
inc
cmp
fs
sbb
test
icebp
inc
add
mov
add
add
mov
or
lods
pusha
add
lcall
test
aad
scas
lods
pop
clc
xorl
ret
dec
mov
cmp
push
push
mov
mov
push
shrb
daa
gs
mov
push
mov
or
popf
sub
jl
xor
enter
into
cs
sarl
pop
fwait
cwtl
dec
inc
pushf
mov
rcr
add
adc
je
loopne
into
hlt
into
fisubs
xchg
jecxz
or
pop
inc
cltd
mov
popa
add
inc
rcll
ss
sbb
mov
jne
andb
and
jne
mov
je
out
je
and
sub
cmp
sbb
add
inc
cli
mov
lea
aam
pop
out
push
bound
popa
cwtl
fdivs
sub
mov
pop
stos
inc
jmp
and
xlat
fidivl
les
shll
sub
push
stc
pop
push
aad
imul
jne
stos
lods
fistpll
xor
lock
adc
xor
imul
lods
cltd
in
jo
inc
xchg
jl
mov
mov
stc
mov
mov
xchg
clc
insb
ds
mov
add
andb
xor
lods
fbstp
ficoms
cmp
cmp
sub
mov
sub
dec
pop
cmpsl
or
or
outsl
imul
or
and
cwtl
scas
clc
mov
pop
push
repnz
inc
cs
inc
jg
mov
test
dec
push
pop
mov
push
jle
jne
jge
lcall
xchg
pop
in
fstpl
pop
sub
insl
les
mov
out
lea
scas
aaa
or
inc
add
mov
shlb
mov
and
repz
add
xor
mov
or
ret
adc
mov
mov
pop
pop
mov
pop
je
and
sbb
das
or
daa
dec
pop
jno
and
aam
mov
mov
xchg
add
orl
imul
outsl
sbb
xor
sbb
inc
fsts
xchg
dec
pop
pop
jmp
js
ljmp
in
mov
pop
faddl
lods
roll
movsb
sbb
fnstcw
mov
xor
jmp
mov
pushf
dec
sub
out
cmc
andb
popl
adc
cwtl
sub
push
test
scas
cmpsl
lea
mulb
ljmp
ljmp
xor
les
cs
sub
pop
mov
test
sub
pop
mov
or
call
or
rep
stos
stos
adc
mov
cmpl
xor
sbb
cli
movsl
cmpsl
and
cmpl
pop
push
mov
es
dec
sub
movsb
mov
popf
call
mov
sub
fs
out
pop
fldcw
inc
shl
popa
addr16
or
pop
repnz
cld
mov
pop
ret
gs
dec
fimuls
insb
hlt
aaa
lods
dec
push
mov
sbb
das
sub
movsb
cmp
jg
addl
push
add
pop
idivl
rorb
out
fwait
dec
pop
mov
pop
mov
and
mov
stos
mov
xor
out
movsb
fcmovnb
push
fdiv
movsl
jne
int3
es
push
inc
scas
sub
test
jmp
daa
sahf
insb
dec
in
xor
shl
dec
adc
mov
mov
or
aaa
mov
cmpsb
and
mov
std
data16
inc
rorb
mov
dec
pop
in
jb
push
sbb
cmpsl
scas
cld
imul
and
scas
aad
rol
xchg
cli
xor
fcmovnb
mov
gs
inc
jmp
push
fiaddl
push
into
faddl
sub
loopne
adc
outsb
movsb
or
lea
sub
fdivrl
push
addb
mov
mov
xchg
hlt
fbstp
ljmp
push
nop
daa
fisttpl
inc
loopne
xlat
or
rclb
sbb
xchg
sti
std
mov
sbb
xorl
xchg
mov
pop
int
mov
fisttpll
into
out
mov
loop
aad
inc
xchg
leave
dec
pop
xchg
test
add
cwtl
pop
cli
lahf
mov
inc
push
push
push
inc
fdiv
push
xor
orb
mov
and
jb
sub
mov
test
sbb
sti
xor
in
xor
xchg
inc
in
push
std
jbe
xchg
pop
push
push
cld
mov
inc
inc
add
pusha
adc
xor
xchg
arpl
or
sbb
pop
pop
inc
imul
ljmp
sub
xchg
sub
cmp
adc
xchg
mov
out
aam
shrl
jp
sbb
les
add
push
mov
lret
dec
mov
fwait
in
jae
mov
add
and
mov
dec
ficompl
sub
inc
xchg
mov
mov
sbb
pop
dec
lock
mov
gs
mov
mov
jl,pn
scas
inc
fsubrs
push
int
lea
mov
push
nop
outsl
inc
mov
popf
loop
loope
jnp
decb
dec
cmpsl
cmp
sub
cmp
rorw
stc
inc
fnstenv
mov
fwait
dec
add
mov
jo
ffreep
cmpsb
adc
lock
jnp
jge
fsubrl
dec
or
dec
into
inc
cld
cmp
test
clc
loopne
ds
or
sti
out
jecxz
das
lock
push
inc
push
jno
fwait
jp
mov
out
inc
imul
sbb
sbb
sbb
xchg
jp
in
mov
inc
jae
push
adc
fwait
idivb
mov
leave
xor
notl
loopne
ret
rcrl
push
nop
jb
cmc
cmp
mov
or
cs
inc
test
ja
stos
lds
or
sub
loopne,pt
inc
or
fdivl
stos
imul
pop
sbb
jp
pop
sti
es
mov
xchg
cmp
fidivl
cmp
sahf
fidivl
in
jne
pop
das
cmp
lret
push
pop
insb
ds
pop
test
xor
ljmp
push
pop
loope
mov
lods
adc
test
xor
or
adc
dec
in
jno
and
mov
scas
pop
out
cwtl
arpl
jb
fdivrs
mov
push
lret
test
lods
inc
in
sbb
mov
aad
mov
ljmp
ss
ds
adc
or
stos
pop
push
and
mov
jp
test
ret
inc
sub
stc
or
negb
fxch
dec
fiadds
test
jp
mov
out
inc
jnp
or
pop
pop
xchg
mov
test
lea
mov
push
mov
lret
int3
xor
cmp
cli
mov
rcrb
ss
dec
and
add
js
push
pop
push
xchg
mov
jl
aaa
sub
xchg
shr
outsl
jecxz
call
pop
mov
dec
es
fwait
enter
push
mov
mov
sbb
sbb
jno
es
pushf
lahf
and
push
sarl
xor
ret
lcall
inc
push
cltd
incl
jg
jb
out
jge
jbe
out
mov
add
mov
sub
mov
mov
dec
inc
dec
mov
stos
je
leave
sqrtps
leave
daa
icebp
loop
push
xchg
push
sub
leave
fmuls
mov
movsl
cmp
fisubrs
cmp
jae
xchg
push
mov
dec
and
sbb
insl
mov
jnp
or
fnstcw
jns
scas
movsl
cmp
lods
shlb
cmpsb
add
lods
sbb
sub
fcmovnu
jae
loop
inc
mov
shl
mov
jae
adc
mull
jns
push
jmp
sbb
ret
sbb
add
jmp
mov
mov
aam
sub
incb
sub
fisttps
ret
arpl
cmpsb
pop
ja
xor
sub
mov
lods
xchg
cmc
loopne
les
popf
shr
lret
xchg
outsl
clc
push
out
push
add
sub
jne
leave
sbb
arpl
imulb
pop
mov
loop
in
mov
jne
leave
or
outsl
adc
lods
sub
in
out
fstps
inc
das
lret
mov
dec
jmp
jno
jl
in
inc
inc
mov
fs
loop
repnz
aad
pop
cmp
jmp
pop
jl
ss
lahf
cmpsb
hlt
testb
xchg
sahf
jg
inc
sbb
fxch
pop
adc
xor
imul
hlt
xor
jne
jg
jo
pop
and
in
or
bound
dec
inc
roll
jmp
rolb
sbb
inc
dec
pushf
outsb
xlat
sbb
adc
inc
adc
mov
fstps
jmp
push
test
outsb
adc
push
lock
aam
stos
or
js
cmp
sbb
mov
leave
xchg
nop
and
out
sbb
sbb
out
stos
xchg
and
mov
subb
or
and
sub
pop
test
lods
or
dec
test
xchg
cmc
and
fwait
imul
scas
aad
loop
cltd
bound
adc
and
fs
movsl
sahf
leave
inc
sbb
xor
cmc
sbb
mov
test
lcall
out
outsl
or
cmpb
cld
mov
stos
sbb
pop
jbe
push
in
dec
ja
dec
ja
jmp
add
xor
push
out
std
xor
push
sub
cmc
into
cltd
mov
cli
test
test
xchg
mov
das
test
sti
mov
mov
xchg
adc
mov
test
add
sbb
cmpb
sbb
fsts
jno
jle
rolb
out
and
lods
iret
xchg
push
or
and
std
addr16
dec
pop
mov
into
out
dec
dec
dec
movsb
in
fiadds
inc
and
lahf
popf
adc
ret
mov
into
cs
sarl
push
adc
out
cmp
test
aas
xor
es
mov
xchg
arpl
test
sub
mov
fs
loop
mov
lahf
mov
lret
movsb
data16
aaa
ret
in
xchg
jns
lock
or
movsb
stos
std
jnp
push
mov
fstpt
je
push
out
jecxz
inc
leave
push
dec
fs
push
xor
nop
lret
fnstenv
leave
movsl
test
mov
sub
mov
inc
lea
mov
sbb
mov
imul
dec
and
notl
adcl
xchg
int
mov
sti
mov
stc
std
jo
testl
sbb
mov
lcall
js
and
call
jp
mov
pop
lds
stc
aam
aad
out
xchg
push
frstor
push
add
xor
push
inc
jle
mov
jns
jns
jae
add
test
sbbl
add
mov
lods
dec
push
clc
repnz
jg
into
cmpl
adc
les
je
mov
jb
popa
mov
shll
mov
and
xchg
jne
xchg
xchg
dec
rcll
fimuls
cs
pop
mov
test
shlb
stos
popa
das
sub
loopne
sbbl
adc
stc
std
in
jl
dec
cmp
pusha
sarl
stos
xchg
test
cmp
dec
add
dec
jge
insl
fldcw
fisubrl
xor
rcrb
jp
pop
add
in
adc
fldln2
sbb
int3
pop
test
and
movsl
xchg
in
hlt
lds
jge
mov
fidivs
mov
mov
push
mov
mov
clc
cld
sbb
sub
leave
add
dec
inc
stc
adc
push
pop
push
push
shrb
imul
lret
pop
dec
inc
inc
fwait
in
pop
dec
dec
mov
enter
adc
mov
inc
in
or
cli
aam
call
mov
inc
mov
movsb
push
nop
stc
dec
nop
test
rol
enter
je
aad
jne
mov
pop
lods
lahf
and
adc
mov
adc
stos
jo
subl
scas
adc
dec
imul
ret
iret
lods
or
cmpsb
stos
add
xchg
jp
stos
mul
sbb
int3
push
cmpsb
addr16
push
repnz
jmp
or
fs
pop
mov
aas
aam
xor
mov
xchg
cwtl
mov
add
jmp
je
dec
xchg
push
aas
xchg
push
pop
dec
sbb
cmpsl
std
aas
lods
int
xor
in
add
mov
adc
cmpsl
inc
aaa
push
pop
jg
ja
into
rolb
inc
xchg
mov
and
cltd
push
push
test
pop
ljmp
jecxz
test
inc
mov
sub
adc
into
sti
lret
fidivrs
pop
lods
sub
mov
add
mov
add
xchg
sub
enter
popf
sub
imul
out
movsl
pop
push
data16
mov
out
test
jl
push
das
leave
rcrl
sbb
cmp
scas
aam
fisttpll
mov
mov
in
cli
icebp
cld
sbb
lock
stos
data16
in
mov
mov
mov
inc
and
xlat
mov
xchg
push
jp
outsb
pop
xlat
add
les
sbb
push
cmpsl
push
aaa
out
inc
shll
pop
icebp
hlt
xor
jb
out
xchg
xor
inc
cltd
xchg
push
repnz
cli
mov
jno
clc
pop
movsl
adc
inc
lret
mov
jae
addr16
pop
lcall
mov
inc
adc
adc
push
fiadds
sbb
xchg
xor
ds
mov
aam
mov
jbe
scas
push
sub
daa
push
push
lret
cmp
pop
cmp
sub
or
loopne
push
shll
jne
or
and
aas
hlt
stc
mov
imul
push
sarb
add
cmp
push
jp
push
jmp
in
mov
jbe
call
pop
mov
mov
cli
jecxz
sbb
out
mov
arpl
pop
ljmp
dec
mov
xchg
jmp
testb
fstpl
inc
jnp
inc
push
mov
inc
and
xchg
xor
add
je
pop
sub
sbbl
lret
hlt
mov
dec
jbe
fdivrs
sub
cmc
dec
stos
leave
dec
in
pop
xor
push
loopne
adc
fldl
and
sub
das
popf
dec
mov
push
adc
push
out
jmp
mov
cs
lods
xchg
sub
negb
xchg
pushl
jecxz
repz
adc
xchg
dec
gs
cmc
inc
scas
mov
fcomp
and
xor
rolb
xor
dec
or
pop
ja
in
pop
jge
mov
std
pop
in
xlat
sbb
inc
aas
dec
fsubrs
rorl
je
sub
data16
push
imul
xor
addb
fwait
hlt
add
mov
mov
mov
stos
inc
arpl
adc
imul
fcompl
and
sub
xor
cmp
sarb
pop
xor
outsl
mov
cmc
mov
cmp
mov
test
fxsave
xchg
mov
fwait
inc
xchg
call
outsb
mov
jns
in
mov
mov
ret
push
scas
cmp
jg
sub
int3
nop
mov
aad
aas
xchg
push
lods
or
lock
repz
pop
fldt
sbb
push
leave
fucom
adc
repz
push
push
repnz
pop
push
push
and
sbb
lock
gs
cmp
and
add
ss
adc
and
sub
cld
repnz
mov
imul
dec
outsl
xchg
arpl
es
lea
push
stos
pop
popf
cmp
and
dec
stos
jb
push
sahf
in
in
shlb
cld
rclb
sahf
jb
xchg
js
push
movsb
enter
inc
cwtl
inc
mov
loope
add
lcall
sahf
sbb
cmp
sbb
jg
dec
mov
sub
push
mov
mov
jnp
pop
imul
mov
and
rclb
mov
insl
scas
popf
addr16
movsb
shrb
in
cmp
add
movsl
in
or
fistpll
jnp
xor
jb
adc
sbb
cmp
rcr
addr16
cmp
push
cmp
fs
cmpb
pop
or
popa
mov
bound
push
xchg
cmpb
leave
jmp
and
mov
mov
cmpsl
test
xchg
int3
or
sahf
fisttpl
mov
sub
out
jl
mov
inc
mov
fiaddl
sub
sbb
or
pop
test
mov
inc
mov
fiaddl
sub
sbb
or
pop
test
mov
inc
mov
fiaddl
sub
sbb
or
pop
test
mov
inc
mov
fiaddl
cmpb
jge
repnz
in
cmc
mov
mov
mov
or
mov
shll
jecxz
repz
push
mov
dec
mov
mov
add
adc
and
xor
int
repz
push
mov
cltd
stos
sarl
adc
pop
sti
bswap
lret
fld
xor
jbe
cmp
pop
aam
shrb
jae
daa
testb
cmp
daa
xor
sub
jmp
js
pop
mov
call
dec
mov
sub
cli
rcll
in
adc
sub
cmp
int3
fstpl
sbb
push
adc
cmp
adc
inc
enter
fmull
loopne
sahf
xorl
and
or
ficoml
in
push
push
in
sub
rolb
repz
repz
sbb
in
or
push
dec
xchg
out
lods
dec
push
ss
pop
pushf
insb
mov
cld
xor
stos
add
sbb
jmp
mov
repz
mov
push
xlat
pushf
imul
mov
inc
cmpsb
ror
xchg
cmp
dec
loop
repz
push
pop
xchg
and
mov
mov
mov
addl
push
jecxz
rorl
cmp
or
sbb
imul
xor
sbb
xorb
push
cmpsb
mov
pop
xchg
ljmpw
cmp
das
inc
fcmovu
lret
mov
lods
dec
cmpsl
inc
icebp
sti
inc
xchg
inc
xchg
add
add
arpl
xor
aaa
xor
xor
inc
rclb
and
xor
ret
xor
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
ret
xor
and
adc
add
push
mov
inc
mov
mov
adc
orl
push
faddl
or
pop
addb
int3
push
add
mov
push
dec
xchg
pusha
cmc
push
or
sbb
adc
inc
data16
hlt
pop
aam
aas
jns
cmp
je
cltd
repnz
das
mov
or
sub
fnstenv
sub
inc
fbstp
sti
imulb
and
pop
sbb
jnp
lds
dec
push
pop
jmp
jae
sbb
pop
je
mov
xchg
lret
int
imul
dec
cwtl
popf
and
push
xor
push
cs
cld
subl
rcrl
adc
push
inc
cwtl
push
outsb
jp
mov
mov
mov
push
or
mov
outsb
xchg
push
shll
lret
push
xchg
stos
jg
nop
xor
lods
mov
jl
dec
shlb
repz
fst
pop
and
cmpsb
inc
rcll
sahf
jge
jno
mov
inc
imul
lods
inc
out
inc
mov
pop
mov
dec
sbb
xor
les
mov
sub
cmp
gs
aas
mov
jecxz
cmpw
inc
sbb
sbb
mov
pushf
test
push
nop
popf
mov
imul
aam
jnp
and
inc
sub
ljmp
dec
or
sarl
jl
dec
jne
fucomp
push
ret
mov
scas
popa
icebp
test
fwait
mov
ja
inc
adc
or
cmpsl
inc
jne
xchg
sbb
ficoml
stc
mov
loope
es
xor
repnz
pop
in
ret
bnd
mov
dec
jge
dec
subl
mov
fbstp
push
adc
sbb
push
ficomps
popf
shlb
out
repz
pop
mov
addl
cmpsl
lret
xlat
inc
outsl
xchg
loope
mov
leave
xorl
xchg
lods
xchg
test
bound
clc
cmpsb
cmp
lods
add
jo
pop
and
xchg
xchg
ret
cmc
xchg
aad
xor
leave
xchg
loopne
pop
ja
or
rorl
imul
or
xlat
inc
in
or
cmp
push
in
fbstp
mov
dec
cmpsl
fsub
sarl
xor
movl
cmpsl
jecxz
mov
dec
or
adc
or
push
pop
mov
fcomp
arpl
sarb
cmp
and
xor
cmp
mov
int3
aad
popf
mul
jo
orl
adc
loopne
xor
stc
push
cwtl
test
jecxz
fs
and
subb
faddl
mov
cmc
push
dec
mov
rcll
mov
ffreep
ljmp
pop
inc
lock
popf
popa
push
pop
mov
out
jo
push
mov
xor
adc
cmp
fimull
outsl
mov
pop
add
mov
cmp
mov
pop
cmp
sti
sbb
adc
push
test
mov
ret
lret
jg
mov
sbb
cmc
setbe
subl
stc
je
cs
movsl
dec
and
lods
xchg
adc
pop
mov
adcl
mov
push
jge
das
inc
int3
mov
ret
adc
or
jmp
lods
lcall
inc
test
jp
repz
in
iret
pop
or
jp
mov
mov
sti
mov
xchg
cwtl
out
and
cwtl
mov
cmpsb
imul
iret
xchg
add
into
dec
pop
int3
xor
xor
cmp
lret
leave
sub
subl
push
push
xor
push
es
cmp
fxch
mov
mov
mov
xchg
inc
dec
jnp
rcr
cli
sbb
sbb
lahf
inc
test
adc
sbb
les
cmp
fsubl
mov
add
test
adc
xor
mulb
iret
vpmulhuw
xchg
int3
sbbb
dec
xchg
jecxz
insl
es
test
cmc
enter
add
in
les
arpl
mov
xchg
aas
icebp
or
ja
ret
fnstcw
pop
or
movl
push
sub
push
push
and
push
test
pop
outsl
lods
mov
sbb
cld
sbb
rep
jne
vpmadcswd
mov
fdiv
std
jnp
pop
mov
push
or
in
mov
insl
xor
out
xor
cs
es
cs
aaa
imul
rcl
jnp
and
push
in
xchg
rcl
dec
in
mov
mov
das
test
jae
lret
xor
repnz
sub
shll
xor
lcall
mov
mov
es
add
stc
cld
mov
mov
nop
pop
cmp
shl
es
shrb
mov
xor
dec
cmp
ret
ds
pop
pmaddwd
mov
pusha
int
jo
or
leavew
mov
test
out
xor
clc
daa
sbb
cmpsl
sbb
mov
push
call
adc
int3
rorl
cmp
outsb
in
mov
lods
cmp
repnz
adc
icebp
and
mov
cmc
iret
dec
pop
cmp
fdivrs
daa
push
pop
mov
pop
addr16
pop
jg
ds
daa
sub
jbe
hlt
test
or
enter
and
lret
test
push
testl
xor
push
and
pop
xchg
xchg
add
loope
call
pop
mov
lods
jno
sbb
dec
and
cmpsl
sbb
add
cmpb
std
arpl
push
cwtl
adc
mov
out
dec
sub
jne
vorps
xchg
mov
aaa
inc
xchg
inc
and
push
mov
mov
jmp
inc
push
dec
insb
xchg
xchg
aas
imul
les
lock
dec
push
push
push
inc
scas
mov
leave
lock
pop
push
in
xchg
repz
jp
je
push
fwait
sub
es
enter
cld
xlat
mov
in
repnz
and
xchg
sbb
decb
pop
addr16
sbb
cmp
out
sub
test
sbb
pop
mov
aad
inc
adc
dec
loop
fidivs
scas
xlat
jbe
aas
call
mov
inc
push
jns
xor
fs
jmp
pop
cmp
xchg
inc
mov
jle
mov
sbb
pop
clc
rcrb
mov
hlt
btrl
scas
cmpsl
add
mov
fwait
aas
jp
shll
insb
and
sub
xor
xorl
loope
cmp
stc
nop
call
cmpsl
adc
sbb
pusha
mov
idivb
scas
xchg
bnd
leave
push
lahf
jb
sub
jg
dec
fwait
mov
aaa
add
call
mov
inc
cltd
push
ficomps
hlt
add
jecxz
dec
dec
sbb
mov
and
adc
rorb
je
sub
dec
pusha
loope
rolb
fadd
pop
mov
and
sub
sub
insl
add
pop
push
push
xchg
xor
orb
dec
mov
popa
cltd
mov
xor
sti
gs
stos
push
push
mov
mov
in
cmp
jmp
inc
cmp
add
cmpsl
sbb
jbe
sbb
pop
mov
arpl
xchg
enter
loope
mov
and
jle
movsb
inc
pop
sbb
cmp
jmp
push
call
int3
push
insl
mov
inc
outsl
adc
add
lods
add
adc
push
sub
loopne
dec
pusha
shlb
sub
rcll
sbb
pop
mov
addr16
fs
push
adc
push
mov
mov
daa
test
enter
push
and
movsl
cmp
out
mov
mov
iret
outsb
jl
and
sbb
iret
in
iret
jae
or
stos
sbb
add
ljmp
fwait
je
aad
add
in
push
call
fmull
push
push
jns
xchg
in
lods
jo
pushf
mov
cmp
or
addr16
mov
xchg
and
mov
stos
cmp
inc
push
pop
ja
out
xor
and
stos
das
rclb
out
mov
jb
push
fs
cmc
inc
dec
movb
sub
repz
push
shrl
pop
repz
stos
pop
aam
hlt
mov
jl
stc
loopne
mov
lahf
leave
rcrl
sbb
dec
test
out
or
hlt
shrl
pop
or
mov
xor
int3
pop
out
fnstsw
xor
pop
jno
imul
js
push
or
mov
and
push
and
pop
xchg
sub
add
icebp
lds
icebp
mov
pop
jae
rcl
lcall
jge
mov
cmp
sub
sti
or
dec
or
in
loop
xor
push
sub
mov
push
scas
cltd
xchg
into
push
jnp
pusha
loopne
mov
mov
mov
enter
loopne
push
cltd
cwtl
or
or
movsl
in
lcall
cmpsl
orl
adc
idivb
out
roll
fwait
mov
je
mov
stc
mov
sub
popf
add
iret
push
push
loopw
sub
dec
je
fucomp
into
out
jmp
mov
push
or
jle
sub
mov
subl
ffree
test
cmpsb
dec
out
adc
pop
mov
mov
inc
pop
xor
jae
pop
int
shrb
outsb
push
mov
xor
repz
ss
mov
mov
lret
mov
lock
call
mov
and
test
dec
mov
sti
xor
icebp
hlt
sub
faddl
cmpsl
js
sar
mov
lea
enter
cmp
mov
jge
stc
int
or
roll
popa
shl
add
push
sti
dec
std
lea
lret
pop
insb
clc
push
out
mov
out
bound
push
inc
jb
testb
push
pop
rclb
sbb
xchg
or
xchg
in
icebp
pop
or
movsb
adc
xchg
jo
fistpll
mov
or
insl
sub
mov
or
mov
or
mov
out
in
dec
out
mov
mov
ret
test
and
cmp
out
pop
nop
inc
out
repz
stos
stos
icebp
ret
xor
mov
xchg
shlb
int3
cmc
jl
push
fadds
lret
in
mov
mov
js
push
jmp
stos
mov
into
and
mov
lcall
cmp
sbb
xlat
pop
es
dec
clc
push
lret
divl
mov
xchg
inc
sarb
cmpsb
adc
fs
adc
push
mov
sarb
int
and
sbb
xchg
sub
ja
xchg
test
sti
and
and
imul
test
cmp
hlt
cmp
dec
rcr
and
das
inc
lret
testl
adc
mov
sub
push
leave
std
mov
out
popa
and
filds
or
sahf
pop
pushf
mov
jbe
out
pop
movsb
xlat
scas
jg
push
ljmp
xchg
jecxz
inc
jecxz
dec
data16
push
addb
aaa
adc
jno
rcrb
lcall
or
scas
popa
sub
mov
xor
leave
mov
xorl
mov
roll
push
icebp
lret
pop
jg
add
jae
xchg
inc
in
sbb
hlt
sub
sbb
xchg
push
inc
aam
js
xor
jnp
pop
popf
xor
fldl
push
sub
add
dec
and
jbe
mov
shlb
movsb
inc
and
xchg
xchg
adcb
jl
enter
popa
shll
mov
fwait
loopne
sahf
out
push
es
fnstsw
dec
out
xchg
das
test
sbb
out
lcall
mov
ja
mov
fsub
push
jge
shl
inc
push
pop
jae
jns
add
inc
outsb
sbb
inc
cmp
cmc
dec
inc
sarl
mov
dec
es
loope
xor
scas
push
stos
inc
insb
inc
cmpsl
leave
out
cmpsb
aas
mov
test
fimuls
lods
or
push
jp
in
add
xor
and
xchg
push
shlb
mov
inc
clc
push
stos
es
add
aam
leave
ss
xlat
lahf
out
stos
mov
add
xchg
das
cwtl
out
mov
cmp
inc
scas
jl
fcompl
out
mov
dec
inc
dec
add
aad
jge
shll
xor
loope
or
js
repnz
jle
in
lods
in
imul
jne
mov
xchg
push
and
jp
and
jmp
mov
std
sub
xchg
inc
daa
fbld
ljmp
jbe
nop
lcall
pop
stos
nop
bound
lds
push
xchg
jmp
stos
int3
popa
jg
sub
sub
and
scas
nop
lods
mov
ja
mov
lea
cld
fbld
adc
lahf
adc
and
mov
xlat
mov
push
or
inc
andb
ss
jbe
bound
roll
pop
sti
xor
repz
fcmovb
popf
mov
adc
jg
push
push
iret
push
and
sub
or
xchg
dec
bound
subl
push
fdivrl
xor
jp
ds
stos
stc
and
pushf
cmc
into
mov
mov
mov
or
fldl
mov
inc
jo
and
fnstenv
pusha
mov
jmp
jnp
decb
push
cmp
or
mov
xor
rolb
es
inc
jb
scas
sub
and
lcall
dec
sub
mov
jns
cmpl
xchg
int3
add
ss
aaa
cld
dec
bound
js
out
std
dec
popf
mov
aas
inc
pop
fcmovu
lock
repz
xchg
cmp
push
dec
pushf
add
adc
imul
mov
out
pop
mov
mov
inc
or
repz
insl
scas
insb
sub
add
in
cmp
andl
push
xchg
dec
or
dec
out
push
xor
push
pop
cmpb
pusha
adc
test
cli
push
mov
sti
repnz
dec
or
cmp
dec
imul
pop
test
inc
add
jnp
sahf
mov
inc
xchg
dec
bound
dec
insl
and
arpl
sbb
in
jg
lods
and
call
adc
mov
sub
popa
mov
rcr
sub
or
lds
aad
ror
mov
push
push
popf
out
lahf
push
jle
mov
mov
sub
xchg
push
or
jle
lcall
add
and
jns
fs
rorb
mov
jnp
pop
add
push
stos
lret
sbb
mov
mov
pop
and
movsb
xor
or
push
adcb
jne
cmp
das
es
mov
and
aas
mov
push
inc
data16
lea
fmuls
test
jae
ljmp
stos
sbb
cmp
fs
xchg
cmpsb
adc
mov
adc
push
fdivrp
add
cmc
dec
mov
push
and
jbe
js
scas
jbe
pop
mov
std
shrb
jnp
imul
arpl
sub
or
dec
nop
lods
cltd
sub
mov
sub
jmp
ja
les
hlt
jo
clc
jge
lock
pop
imull
repnz
into
nopl
cmp
jnp
mov
test
lret
pop
fisubl
xchg
mov
mov
sub
lds
push
mov
shl
inc
xchg
lret
cmp
pop
sub
and
leave
in
mov
sub
movsl
js
ret
cltd
pop
jo
std
in
push
and
pop
movsb
inc
and
xchg
mov
dec
das
sarl
mov
aaa
pop
sub
ss
iret
or
dec
fsin
fisubrl
xor
jnp
lret
sub
pop
cmpsl
leave
xchg
dec
push
xchg
arpl
push
std
test
pop
rcrb
scas
das
pop
cmc
mov
xor
ja
arpl
enter
cli
stc
in
das
ret
push
inc
dec
sbb
and
test
sbb
inc
shll
cmp
scas
xor
dec
mov
out
aaa
jns
and
stos
aam
rorb
bound
outsb
push
or
icebp
movsb
mov
lret
mov
mov
enter
loope
pop
lret
ds
mov
xchg
sub
movsl
pop
lods
xor
and
cmp
lret
pop
add
or
dec
popa
daa
jo
insl
cmpsl
mov
push
lock
sbb
mov
out
sub
testl
dec
rorb
imul
add
or
cmpl
cld
das
jp
stos
rcr
cmp
movsb
out
insl
sbbl
shrl
rcr
pop
pop
mov
mov
sbb
xchg
dec
inc
jno
mov
sbb
js
insb
mov
push
lods
inc
repz
push
push
nop
inc
or
sub
and
inc
jle
and
jno
cmc
scas
mov
rorb
mov
rdpmc
jle,pn
in
notb
add
daa
or
les
dec
jo
iret
push
jae
out
mov
jge
mov
out
pop
pop
mov
adc
sbb
cmp
add
rcrl
pop
sub
sub
rcrb
fadds
pushf
push
out
stc
into
xor
mov
out
xor
jecxz
and
pop
cmp
stos
xor
clc
ja
inc
push
daa
pop
cmp
push
inc
jae
ds
sarl
jp
in
xchg
mov
out
push
or
sub
in
jmp
je
mov
inc
cmp
popf
cmp
and
dec
iret
xchg
mov
mov
push
sub
incb
lock
les
or
mov
pusha
sahf
cld
movzbl
and
push
sub
cmpsb
inc
or
movsl
xchg
push
xchg
dec
jns
cmp
adc
xchg
xorb
andb
pop
sbb
push
and
cmp
lcall
sub
dec
pusha
mov
cld
fsub
imul
clc
mov
or
iret
ret
mull
mov
jge
mov
xchg
xchg
push
or
inc
sbb
ds
lods
cmp
das
fisubrs
push
push
and
push
mov
out
pop
jbe
add
xor
dec
inc
dec
pop
mov
mov
pop
push
push
xor
jnp
inc
jle
lcall
inc
fidivrs
out
shll
xchg
dec
pop
fxch
cmpsb
jo
and
mov
pop
dec
pop
in
push
cmpsl
nop
dec
ds
xchg
pop
sub
push
jmp
lock
mov
test
sub
int
xor
jns
xchg
sbb
dec
and
xchg
adc
or
insb
dec
add
lret
cmp
push
mov
dec
out
shlb
pop
mov
mov
xchg
mov
mov
sub
adc
jo
dec
leave
sub
insl
gs
dec
pop
ss
scas
mov
mov
adcl
mov
sbb
test
jmp
cltd
cmp
int
jge
dec
testb
sbb
xor
out
inc
ljmp
ds
addr16
std
jecxz
sub
push
inc
ss
out
mov
sti
testb
fnsave
adc
mov
cmpb
push
add
push
nop
fisubrl
push
mov
jne
insl
cmp
aas
mov
stos
push
clc
xchg
mov
clc
out
jle
xchg
fstpl
cmpsb
mov
rcll
mov
je
pop
or
pushf
xorl
mov
push
fwait
pop
adc
aas
fsubrs
dec
decb
fdivl
cmc
in
popf
mov
mov
add
lret
mov
in
mov
cmp
adc
jle
inc
pop
jle
mov
roll
addr16
ds
push
dec
xor
inc
fstl
push
sahf
icebp
mov
xchg
push
sub
ficompl
cmp
das
jmp
dec
into
rorl
ljmp
stc
in
bound
or
ja
mov
jne
push
aas
mov
pop
push
test
loope
lods
and
test
jp
jbe
leave
cmp
in
into
in
outsb
in
push
out
sub
sbb
loop
add
push
ficoml
pusha
xchg
mov
sti
jecxz
fsubs
loop
stos
or
ret
push
sbb
nop
pop
test
lahf
cmp
out
or
mov
stc
or
scas
rorl
arpl
dec
call
or
sub
jle
scas
xlat
gs
xor
mov
mov
insl
or
mov
or
ds
in
dec
cltd
repnz
test
xchg
fists
sub
cmp
lds
ds
jo
je
mov
add
adc
and
xor
ret
xor
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
ret
xor
and
adc
add
push
mov
inc
mov
mov
add
pop
jecxz
shll
ret
xor
and
adc
pop
xorl
cmpsl
push
addl
jg
jmp
pop
addl
add
and
mov
ret
xor
dec
adc
je
sti
sbb
sub
cmp
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
in
adc
insb
aaa
xchg
neg
mov
add
add
or
add
add
adc
push
add
or
icebp
add
add
add
xchg
add
cmp
ja
aas
add
add
aas
add
add
mov
add
push
in
lcall
add
add
add
add
add
aas
add
add
add
add
add
add
mov
icebp
add
add
add
add
mov
pop
add
add
add
add
add
add
push
add
add
add
mov
add
add
pop
add
add
add
add
mov
push
add
add
add
add
pop
add
add
dec
add
movl
inc
add
xchg
add
jnp
popl
mov
add
add
add
add
add
add
add
add
add
insb
add
or
je
ja
out
add
add
add
add
or
mov
and
push
add
aas
add
add
add
add
popa
add
add
leave
add
add
mov
je
in
inc
add
add
insb
add
add
add
add
inc
add
add
add
add
sti
add
add
add
add
add
add
aad
push
add
add
scas
add
jmp
sub
inc
add
add
add
mov
lcall
add
rorl
or
jns
mov
mov
push
add
add
add
out
popl
and
cmp
inc
add
add
mov
add
ja
mov
add
add
add
insb
add
inc
add
cmp
incb
pop
add
leave
add
add
add
add
aam
jmp
add
add
adc
out
cmp
add
add
cmp
add
add
sub
jle
stos
add
add
add
add
add
mov
lods
add
aas
add
cmp
add
push
add
roll
out
push
add
add
add
cmp
push
add
ja
jecxz
xor
leave
add
add
add
addl
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
loope
pop
add
cwtl
add
sub
mov
add
ja
insb
add
aas
add
add
stc
add
and
add
add
add
mov
rolb
mov
add
je
dec
add
add
add
add
out
add
add
jmp
dec
add
add
aas
add
add
inc
add
add
push
add
leave
add
sub
enter
dec
add
add
add
add
insb
add
and
add
add
add
add
fwait
add
add
add
add
pop
add
add
ret
add
add
add
pusha
add
add
add
jle
gs
add
add
out
add
add
add
add
add
ljmp
add
add
add
add
add
add
clc
add
add
add
outsb
and
xor
loopne
mov
sti
xchg
mov
xor
jbe
fsubs
mov
and
stos
jecxz
mov
mov
scas
fsubl
test
mov
pop
pop
dec
mov
or
and
lmsw
fisubrl
out
pop
mov
and
inc
push
sbb
sbb
fs
pop
xchg
rcll
xor
add
ret
adc
sbb
push
pushf
int3
outsl
stc
jmp
mov
add
daa
cmc
lret
leave
repz
test
out
cwtl
mov
adc
xchg
dec
fildll
das
test
cmp
call
js
push
fistl
mov
jbe
cmp
iret
sbb
repz
adc
cmp
mov
mov
cmp
cmpsl
lcall
dec
pop
or
add
mov
push
push
xor
push
xchg
lods
cmc
out
sub
jb
gs
sbb
test
mov
jo
mov
inc
ror
out
mov
or
aas
daa
loopne
xor
lcall
jnp
inc
push
sbb
add
add
cmpsb
test
push
fcmovnbe
xchg
lret
enter
dec
aad
scas
ds
cwtl
dec
shrl
das
pcmpeqd
sahf
sbb
lea
or
xor
outsl
adc
or
pop
lds
data16
sbb
adc
mov
mov
mov
out
mov
sub
rcl
sub
decl
imul
dec
rcrb
pop
daa
fimuls
jne
mov
fildl
add
ret
lock
pop
xchg
add
xor
pop
sub
mov
dec
mov
lods
dec
sub
lock
hlt
push
cmp
in
cmp
fnstenv
mov
add
shlb
cmp
and
jne
fldenv
scas
add
push
pop
inc
lahf
jae
jne
popa
mov
out
out
outsl
mov
into
mov
mov
pushf
lock
jmp
add
push
xchg
js
enter
lock
cld
cmp
inc
sub
mov
outsl
jecxz
xchg
fsubl
mov
cmp
cld
loope
push
cli
mov
iret
test
in
push
mov
mov
cmp
sbb
push
mov
ljmp
loop
mov
in
xchg
inc
pusha
add
adc
iret
jno
clc
dec
sub
shll
pop
leave
lahf
pop
insl
js
out
js
addl
push
cld
mov
in
lock
pop
push
shll
out
ret
in
stos
adc
mov
inc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
