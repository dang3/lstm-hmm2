fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
cli
add
adc
clc
mov
addr16
xchg
pop
mov
mov
push
loopne
lock
and
inc
xlat
pusha
movl
mov
add
push
loopne
lock
sbb
or
cmp
out
scas
dec
sti
js
push
orb
fldenv
push
cmp
dec
xchg
inc
lock
jl
mov
lahf
add
and
sbb
pop
adc
jbe
mov
sub
pusha
cmpsl
xor
mov
mov
fisubrl
lock
dec
repnz
lret
pushf
mov
xchg
adc
outsl
jg
xchg
jnp
push
ljmp
call
gs
pop
fucomip
ljmp
inc
adc
cmc
and
outsb
pop
pop
clc
cmp
inc
pop
mov
out
push
andb
sbb
jl
outsl
call
ret
pop
mov
jne
jmp
mov
push
popa
ds
call
pop
dec
bnd
push
testb
xor
inc
mov
imul
mov
jns
push
cli
and
lds
shll
inc
jmp
xor
or
adc
inc
movsb
data16
movsl
or
and
das
jns
push
dec
pop
sahf
inc
xchg
mov
hlt
data16
jb
imul
xchg
test
add
mov
out
xlat
pusha
jo
andb
pop
mov
rclb
inc
lock
cmpsl
adc
inc
out
xlat
pusha
jo
andb
pop
mov
rclb
inc
lock
arpl
aas
cmpsl
fdivs
mov
scas
mov
insb
xor
hlt
adc
lods
hlt
fdivrs
lds
loop
mov
dec
push
sub
adc
xchg
je
lahf
dec
mov
int3
mov
in
fs
repnz
mov
pop
push
and
push
cld
inc
xchg
dec
mov
stos
lds
clc
push
jg
mov
and
imul
dec
push
lods
xchg
bound
test
aas
aam
sub
xor
adc
push
scas
adc
test
aaa
sub
mov
pop
fldt
ficoml
sbb
iret
fwait
in
push
and
dec
cmpb
add
or
mov
pop
daa
and
or
add
cmpsl
sub
sub
push
fists
stos
ljmp
test
mov
idivl
push
mov
in
rclb
pop
cli
and
pop
jp
andl
outsl
dec
mov
andps
fwait
xor
push
fwait
jecxz
xchg
pusha
mov
mov
push
addr16
cmp
jmp
in
and
call
sbb
jbe
sbb
clc
mov
enter
push
pop
insl
sarl
or
and
sti
outsl
jne
sbb
dec
add
inc
mov
icebp
ficoml
cld
cltd
shll
add
sub
fisubl
pop
call
js
lock
bound
pop
xor
popa
ds
jbe,pt
fidivrl
mov
and
mov
cmp
mov
jp
mov
in
inc
loope
je
loopne
or
mov
int3
fidivl
mov
dec
or
xchg
adc
out
mov
inc
mov
sbb
inc
or
inc
xchg
dec
jne
push
aam
or
lcall
adc
xlat
push
and
filds
movsl
fisttps
clc
outsb
mov
adc
out
les
jmp
dec
pop
insb
repz
push
adc
inc
mov
jmp
or
test
push
or
or
push
lret
jle
outsl
and
jo
xchg
sub
popf
jae
lahf
xor
mov
out
sub
aas
add
ret
subl
in
push
push
popa
adc
repz
enter
xor
outsb
jnp
dec
testb
pusha
subl
out
lds
cmpb
ds
mov
sbb
xor
fcmovnb
sbb
aaa
mov
push
jle
mov
cmp
js
les
and
shl
cmpsb
xchg
push
or
xchg
and
sub
out
inc
into
enter
pop
and
sub
push
lret
icebp
pop
push
xor
in
cmpsl
adc
insl
xor
xchg
js
repnz
xor
lock
imul
ljmp
xchg
lcall
test
mov
fldcw
jg
push
ljmp
dec
iret
pop
cmpsl
call
mov
sti
aas
mov
outsl
or
cmpsb
lcall
icebp
data16
mov
subb
repz
pop
cmp
ret
lcall
test
test
movsl
mov
cmp
xchg
rcl
icebp
enter
mov
xchg
scas
inc
sbb
rcll
or
cmp
adc
add
sbb
sbb
sbb
jge
inc
xor
cmp
lcall
jmp
dec
lret
inc
jle
ds
je
lods
adc
jmp
sbb
fsts
movsl
sub
inc
mov
mov
fimull
sub
lods
movsl
repnz
nop
dec
insb
je
sub
mov
mov
stc
and
add
sub
jge
jecxz
lret
leave
into
mov
hlt
out
adcl
jmp
adc
jle
in
xchg
push
outsb
mov
mov
jmp
test
in
jle
aaa
and
ds
into
sbb
gs
fmull
test
int3
call
shl
addr16
fisubl
imul
ret
mov
aam
xchg
sbb
push
or
inc
sbb
xor
sub
inc
into
dec
sub
rcll
fstl
ljmp
insl
sarl
add
dec
xchg
pushf
dec
sub
and
lock
daa
mov
sbb
and
bound
xor
mov
pop
cwtl
add
jl
push
fwait
cmp
nop
push
mov
pop
xchg
xchg
lods
shrb
sub
lods
and
fcmovnb
mov
enter
into
fsubrs
fldenv
mov
mov
js
loop
pop
hlt
pop
cmp
test
cld
test
mov
mov
push
test
jo
or
out
lock
xchg
or
insb
push
mov
or
mov
sbb
jns
and
out
jnp
xchg
push
aad
test
into
and
aas
addl
sbb
mov
add
mov
cld
hlt
or
in
outsl
iret
scas
cmp
sub
push
pop
xchg
adc
pushf
xor
jne
test
add
push
xor
cmpsl
fcoms
sbb
repz
sub
int
inc
scas
js
stc
mov
push
in
pushf
bnd
into
add
lods
scas
lock
or
stos
jno
mov
xor
sarb
push
mov
in
mov
mov
adc
ret
fsts
inc
daa
cmp
jmp
jae
mov
lock
popa
cmp
mov
nop
test
and
xor
inc
inc
add
mov
in
data16
push
pop
add
sti
sarb
jle
ds
add
sbb
jmp
outsb
es
add
jg
and
ret
mov
icebp
jb
stc
sbb
mov
inc
and
sbb
xchg
xchg
pop
xchg
and
scas
bound
jmp
dec
lods
mov
lcall
mov
adc
bound
negb
mov
pop
xchg
push
testb
gs
jnp
mov
jge
adc
sub
jl
dec
das
jmp
fs
stos
pop
fsub
xchg
in
xlat
out
aam
mov
xchg
xchg
xchg
cmp
fs
data16
out
jg
pop
arpl
insb
mov
mov
push
dec
jnp
call
cs
loopne
fidivrs
and
inc
outsb
adc
mov
fistpll
repnz
and
dec
sub
mov
ret
pop
jae
hlt
fcomip
xor
jbe
mov
fadds
mov
pop
mov
sbb
pop
pop
sub
mov
cld
xlat
fnstcw
adc
mov
push
cmpsl
lcall
jnp,pt
and
dec
add
nop
push
insl
pop
ja
cmp
mov
mov
insb
lods
add
iret
lods
pop
jle
aaa
or
push
mov
movsl
fnstsw
or
adc
test
push
andb
xor
imul
insl
fwait
push
das
mov
imul
mov
or
mov
cltd
in
fs
dec
jo
cmp
jne
cmc
cwtl
xor
jecxz
in
inc
xchg
mov
push
xchg
jns
push
js
inc
pop
lock
test
dec
test
nop
outsb
jmp
mov
stc
dec
and
scas
lods
pop
fcom
xchg
aam
gs
xor
das
fxch
xor
or
lods
mov
xchg
arpl
fidivrs
mov
and
es
push
xchg
cmp
pusha
loope
int
inc
cmpsb
or
cmp
or
push
es
dec
dec
push
add
xchg
sub
movsb
push
aas
xchg
xchg
jmp
lahf
insl
mulb
lods
addr16
inc
gs
jo
and
cmp
aas
cmp
clc
pop
xchg
je
or
pop
jae
mov
dec
dec
popa
push
xor
cmp
xchg
push
in
jnp
jno
mov
xor
pop
inc
cmp
into
pop
and
xor
and
xchg
add
mov
out
push
push
loopne
sbb
movsb
xor
stos
lcall
jecxz
roll
fldcw
xor
clc
xchg
sarl
je
xor
lds
cmp
adc
push
cmpsb
ds
mov
inc
inc
addb
loop
shll
iret
sub
pop
ret
incl
push
cs
sarb
test
mov
push
mov
or
cmp
dec
pop
jae
rol
jne
sbb
and
scas
cmp
xor
sub
dec
pop
push
jle
std
fimuls
jno
inc
cmp
rorb
mov
jnp
jns
jb
push
mov
fwait
aam
loope
sub
push
movsb
int
ds
dec
ret
pushf
mov
push
ss
cs
jmp
dec
repnz
and
out
mov
les
je
cmp
ret
or
jmp
ja
dec
scas
jl
nop
push
xchg
out
pushf
rolb
cmp
pop
pop
insl
add
sbb
mov
rcrb
cmc
jl
and
leave
mov
push
stos
and
orb
jp
inc
ljmp
sbb
insb
into
mov
add
ja
xorb
xchg
testb
das
arpl
bound
mov
enter
xchg
cmp
fidivl
xor
add
inc
fldl
int
fcomip
or
rolb
fidivl
pop
push
add
mov
xor
mov
xor
sub
outsl
cld
leave
cld
imul
mov
clc
adc
push
add
fldt
mov
aas
jle
jg
dec
add
push
outsb
dec
sbb
ljmp
adc
pop
jecxz
xchg
movnti
nop
aaa
and
in
divps
jo
push
or
xor
jle
idiv
dec
sbb
sbbb
int
push
mov
mov
inc
hlt
aad
mov
adc
xor
mov
jo
test
sbb
shl
push
lea
in
pop
lea
mov
daa
ficoms
adc
jns
testl
icebp
dec
mov
push
aaa
lahf
dec
xlat
neg
repz
popf
push
xlat
aaa
incb
int
push
daa
mov
or
mov
add
push
ds
xor
jmp
adc
or
adc
aad
mov
ja
sub
and
adc
mov
inc
mov
sub
jecxz
inc
out
sahf
fsubrs
loop
jge,pn
dec
xchg
out
popf
andl
pop
push
clc
mov
mov
push
inc
lcall
push
push
lods
je
out
pop
add
outsb
fstl
jg
push
loop
xchg
ss
jle
fnsave
sbb
or
iret
mov
ljmp
cmp
inc
mov
pop
outsl
popa
clc
dec
mov
adc
and
rorb
icebp
nop
loope
movsb
pop
jecxz
add
sti
lret
xor
or
call
add
clc
fdivrs
add
add
cwtl
jg
xchg
cmp
cmp
daa
push
sbb
data16
dec
lods
icebp
daa
adc
and
inc
sbb
mov
pusha
inc
rcl
and
in
jg
popa
add
fsubr
cmp
cmpsb
jno
sbb
ja
fnsave
das
mov
pop
test
add
dec
pop
sbb
bound
std
adc
sbb
mov
sarl
push
sbb
xchg
cmpsb
sbb
lahf
repnz
icebp
stc
xor
push
xchg
dec
mov
popa
test
movsl
jp
adc
fstpl
aas
xor
int3
and
or
sbb
mov
mov
pop
sbb
loop
cld
dec
in
inc
pcmpgtw
adc
ljmp
push
pop
sub
sarb
and
adc
movsl
scas
into
bound
aaa
and
stc
shrl
je
in
adc
loopne
lock
mov
inc
fisttpl
clc
cld
pusha
mov
pop
inc
pop
sub
pop
xchg
aam
popa
in
rcll
cli
or
inc
inc
test
nop
js
imul
notb
mov
cmp
jp
std
push
pop
cli
cmc
and
iret
mov
jbe
aas
rcl
jne
test
loopne
mov
inc
shlb
mov
js
mov
test
mov
sub
and
notl
subl
pop
mov
xor
jp
pusha
stos
pop
sbb
lea
xchg
in
or
addr16
adc
xchg
cs
fnstenv
sub
shrb
leave
xchg
jge
xchg
fsubl
push
xor
hlt
movl
ror
mov
lcall
cmpb
dec
imul
stos
rol
push
jge
psllq
in
fistpl
cwtl
push
mov
repnz
xchg
lret
lret
dec
mov
call
pop
add
sbb
das
fs
mov
jns
iret
ljmp
sbb
aaa
filds
les
in
and
lods
mov
add
leave
jb
shll
fsubrl
jecxz
pusha
lahf
xchg
mov
iret
popf
addl
and
imul
push
sub
cmp
sbb
push
cmp
sti
shrl
xor
fs
lcall
bound
imul
sub
cs
xchg
jno
mov
filds
mov
div
xchg
add
xchg
shlb
fistpll
in
xchg
cltd
lret
and
in
fidivs
jbe
das
dec
push
xchg
dec
or
lea
jne
dec
addr16
pop
mov
into
mov
cwtl
nop
mov
mov
mov
pop
jne
inc
gs
cmp
ja
and
inc
ret
stos
push
mov
fcomip
xor
or
dec
ret
into
fstpt
xchg
xor
insl
adc
mov
add
pop
pop
and
lods
popa
xchg
lret
enter
xor
shl
cmpsl
and
inc
movsb
pop
pop
inc
mov
mov
roll
repnz
push
enter
add
mov
push
fadds
jbe
mov
test
cld
xchg
out
xchg
rolb
adc
mov
jp
sub
pushf
js
push
xchg
dec
add
push
sbb
jno
add
sub
out
cmp
lods
xchg
dec
and
add
dec
lahf
push
dec
lcall
data16
dec
push
aad
loope
pop
icebp
mov
in
xor
mov
imul
iret
mov
or
push
icebp
or
inc
and
insl
xchg
cmp
push
and
sahf
push
ret
adc
pop
mov
adc
je
movsb
rcrl
cmp
pop
push
add
scas
icebp
pop
xor
jp
mov
lods
arpl
iret
cmp
outsl
push
and
in
xor
mov
dec
mov
idiv
push
xor
mov
jmp
dec
sub
xchg
test
lret
jbe
inc
pop
adc
adc
lock
fcomp
push
inc
test
cmp
sahf
mov
dec
mov
mov
aaa
into
cmp
push
ja
jecxz
mov
fwait
outsl
stos
scas
inc
cmp
push
lret
data16
sbb
cmpb
dec
addr16
pushf
xchg
leave
arpl
imul
dec
fmull
cmp
cmp
stc
inc
jne
mov
pop
jbe
pop
out
inc
lea
sub
fcompl
sub
pop
push
sub
cmc
insl
out
push
xor
insl
and
cmpsb
cmpsb
or
adc
add
push
negl
mov
pop
data16
xchg
jae
lcall
adc
and
lods
mov
aam
inc
cli
enter
adc
lds
addr16
pop
je
lds
lret
add
jp
subb
nop
js
add
pop
adc
into
shll
pusha
and
and
push
add
loopne
push
sbb
paddusw
lock
ret
inc
and
xchg
not
scas
fcomp
pop
dec
adc
mov
push
mov
mov
xor
popa
mov
ds
jle
arpl
addr16
aas
sub
fwait
push
lret
mov
aas
movsl
xchg
xor
test
fisubrl
jmp
stos
cli
xchg
std
movsb
xor
jecxz
test
jae
dec
ficoml
jl
add
jb
mov
call
adc
gs
test
xor
jns
outsb
lds
popa
mov
out
mov
mov
je
aam
jns
out
xor
inc
fs
out
mov
loopne
add
inc
push
out
les
fucom
dec
fcmovu
inc
mov
jns
je
rcrl
outsl
inc
iret
loope
push
and
loope
aam
jbe
scas
mov
adc
sti
push
sbb
dec
pop
dec
sub
sub
mov
ret
pop
ror
xor
outsb
cmpsb
xchg
mov
loope
mov
movsl
out
or
ljmp
xor
inc
leave
imul
in
mov
es
aaa
mov
mov
pop
push
lods
pop
mov
scas
xlat
outsb
mov
cmpsl
push
mov
mov
and
push
in
in
cmc
std
icebp
ja
addr16
jb
mov
sbb
cmc
cmpsb
lret
test
and
sbb
lahf
lock
mov
sbb
aas
cmc
ret
lods
cld
push
scas
nop
scas
sahf
push
rcrl
stos
xor
xor
outsl
pop
sub
jmp
ljmp
or
fistpll
mov
mov
mov
dec
sbbl
jno
pop
xor
jge
and
cmpsb
je
fs
cmpsl
in
jno
outsl
xchg
cld
scas
iret
int3
cli
jp
das
aaa
sahf
xor
int
movsl
ret
pop
sbb
fnsave
push
cmp
cld
mov
imul
adc
shl
or
and
adc
ljmp
or
outsb
fs
cmp
gs
xchg
mov
aam
enter
out
push
dec
cs
push
shlb
pop
loope
add
or
inc
push
mov
into
mov
sbb
adc
mov
test
es
or
ljmp
xchg
mov
add
adc
push
out
or
movb
sbb
test
lret
mov
inc
imul
test
in
inc
rcrb
mov
push
pop
sub
fidivl
adc
scas
pop
mov
hlt
dec
push
cli
push
mov
cmp
das
jae
and
inc
sub
sbb
xorb
ret
mov
call
lret
jmp
xchg
dec
stos
ds
leave
aaa
popa
sub
jle
inc
pop
cli
ljmp
in
pop
ljmp
pop
jnp
nop
cmpsb
xchg
xor
outsl
or
mov
add
movsl
scas
dec
mov
push
push
insb
pop
and
iret
les
std
mov
shl
cmp
mov
icebp
insl
xor
out
push
fwait
addr16
mov
or
add
mov
jb
outsl
leave
daa
jbe
inc
sbb
add
hlt
popf
scas
xchg
sarb
mov
push
and
push
sub
pop
hlt
xchg
mov
cmpsl
aaa
shlb
sbb
hlt
lea
fcoms
cwtl
pop
push
test
loope
dec
add
mov
shrl
pop
lret
mov
or
leave
dec
push
sbb
loop
push
adc
mov
mov
pop
push
sub
pop
pop
bound
gs
addl
pop
aad
jne
dec
mov
lods
and
or
sbb
pop
loop
mov
movsl
pop
mov
push
mov
push
or
loopne
inc
mov
lcall
pop
scas
jle
in
dec
jno
inc
add
pusha
imul
dec
jle
repz
pushf
call
sarb
sub
push
movsb
rorb
xchg
sarl
and
adc
pop
pop
mov
lods
dec
mov
xor
loope
inc
sbb
jo
mov
sbb
sbb
push
pop
sti
outsl
test
sub
mov
aad
loopne
sub
or
aad
xor
cmpsl
int
mov
jecxz
iret
fidivl
pop
orl
lret
sub
ljmp
sbbl
jne
sub
inc
imul
mov
idivb
les
xchg
dec
jmp
fstl
xor
xchg
sahf
mov
repz
icebp
das
jne
in
inc
push
jge
icebp
adc
lret
and
jle
pop
xlat
insb
mov
andb
gs
xchg
in
sti
iret
push
loope
fldenv
inc
mov
add
out
cmpsb
loopne
mov
mov
and
dec
aad
cwtl
ror
loopne
int3
cmp
dec
lret
sub
div
cmp
xor
cmc
cld
mov
xchg
inc
pusha
cld
insb
fsubrl
arpl
inc
in
and
enter
add
int3
lahf
add
out
in
xor
pop
ret
mov
dec
inc
addb
mov
fwait
xor
inc
out
xlat
pusha
jo
andb
pop
mov
rclb
inc
lock
cmpsl
adc
inc
out
xlat
pusha
jo
andb
pop
mov
rclb
inc
lock
movsb
adc
inc
jecxz
xlat
pusha
jo
andb
push
mov
jle
push
in
hlt
scas
add
adc
and
xor
inc
notl
pusha
inc
mov
sbb
mov
dec
out
scas
test
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
ds
add
adc
push
adc
bound
jbe
data16
mov
out
pop
faddp
into
sarb
and
xor
add
adc
outsb
jb
inc
dec
jl
mov
mov
faddp
into
sarb
test
hlt
push
cwtl
push
fs
outsb
cmp
dec
pusha
mov
jecxz
loopne
mov
xchg
nop
mov
mov
data16
push
jl
ds
outsb
mov
shll
push
rcr
jne
push
cmp
xchg
icebp
jmp
sub
ja
stc
push
mov
orb
or
add
sti
lods
fisttps
lahf
dec
movsl
imul
xchg
and
mov
mov
pop
adc
mov
and
xor
adc
jle
mov
daa
mov
xchg
add
xchg
cmp
pop
iret
je
ss
lds
jae
orl
adcl
jae
in
out
xchg
fistpl
fstl
int
ja
ret
scas
andl
push
lret
clc
ret
mov
cmpsb
mov
push
jbe
adc
outsb
jb
inc
dec
sarb
mov
into
loopne
and
jnp
imul
daa
pop
cmp
unpckhps
loope
ret
loop
fwait
movsl
xchg
cmp
jno
jle
xor
and
dec
popa
fcmovnb
lods
lret
mov
lods
cmpsl
into
mov
ja
movd
outsb
jb
inc
dec
push
mov
orb
faddp
into
sarb
and
xor
add
adc
outsb
jb
inc
dec
push
mov
orb
faddp
into
sarb
and
cld
movsb
add
push
insl
xlat
in
fxch
or
faddl
ja
pop
dec
pop
lcall
dec
loope
push
cmp
push
adc
xchg
mov
lods
xor
add
imul
enter
pop
xorb
cltd
mov
adc
or
insb
lretw
cmpsl
add
and
xchg
or
fsubs
sub
test
jbe
cmp
pop
enter
das
pop
out
hlt
in
mov
lcall
dec
arpl
addl
pop
insl
inc
cmp
ljmp
xor
cmpsb
sub
mov
lcall
pop
outsl
push
fcmovnu
and
xor
sbb
call
cli
jmp
cmp
orl
push
jb
cmp
aad
fs
xlat
ja
loopne
leave
inc
std
jmp
mov
ret
cwtl
jo
dec
adc
in
lcall
adc
lcall
or
aas
scas
invd
or
add
hlt
cmc
ja
icebp
popa
rclb
or
subl
dec
or
mov
xor
xchg
pop
push
fadd
and
jmp
xor
xor
dec
sbb
and
sub
cwtl
push
pop
and
mov
test
mov
rcrb
mov
in
jmp
icebp
and
pop
or
imul
in
out
push
push
in
ja
int3
push
push
sub
cwtl
xchg
fnstsw
pop
das
push
sbbl
loope
and
and
shll
fldl
movsl
jbe
mov
lret
mov
std
or
jmp
addb
not
pop
outsl
sbb
inc
mov
push
leave
lods
fldl
shlb
scas
push
sbb
mov
or
ret
or
ret
adc
pop
pop
loop
xor
in
int
aam
jbe
mov
jmp
stos
mov
xchg
mov
repz
inc
int3
out
inc
int3
fldt
dec
stos
lret
je
imul
pop
inc
or
mov
les
test
jbe
inc
adc
mov
xlat
ja
clc
sbb
pushf
insb
js
sub
xchg
test
cmpsb
add
cmp
addb
or
bound
ss
or
ret
push
cmp
nop
jg
mov
mov
imul
push
mov
sbb
push
inc
ja
sbbl
xor
orl
addr16
adc
jle
push
pop
enter
shrl
fwait
lock
int
sub
push
or
imul
lret
xchg
mov
jns
push
xchg
jge
push
int3
subb
push
das
enter
inc
and
lods
sbb
sarb
mov
dec
sub
mov
outsl
push
mov
cmp
and
pop
inc
out
aaa
jge
aad
adc
lds
imul
movsl
scas
mov
xlat
mov
dec
fld
push
test
stos
mov
addb
dec
test
out
cltd
nop
inc
push
jns
xor
adc
ss
jle
push
int3
in
daa
xchg
fs
mov
repnz
loope
fisubl
cmpsl
frstor
jl
sahf
imul
push
mov
sbb
js
call
xchg
sub
push
mulb
push
in
mov
mov
mov
cs
xor
lock
fbld
jmp
fcmovne
int3
xchg
outsb
mov
cmp
jnp
enter
leave
push
cmp
enter
addr16
inc
lcall
mov
test
mov
pop
fldl
add
sub
ljmp
pcmpgtw
je
pop
xchg
insb
clc
push
loope
out
movsb
fisttpl
mov
shlb
or
stc
clc
pop
sti
dec
call
shr
pop
pop
es
pop
mov
jmp
imul
lea
pop
int
hlt
cmp
jno
dec
mov
inc
in
jg
sub
enter
lahf
mov
pop
pusha
inc
es
or
xchg
adc
adc
out
jecxz
in
insl
pushf
in
add
cli
cmp
or
out
lret
lds
push
adc
ficoms
push
pusha
int3
out
ss
sbb
rorb
call
adc
sahf
adc
add
jo
cvtdq2ps
int
mov
xchg
xor
pop
mov
out
sbb
pop
data16
mulb
xchg
push
fidivl
sub
pop
dec
dec
sbb
mov
jbe
out
out
pushf
mov
das
fnstenv
rorb
ja
mov
pop
mov
xchg
or
out
cmp
clc
repz
lea
pop
mov
int3
mov
es
aaa
adc
and
scas
mov
popf
test
mov
gs
or
jb
outsl
fidivs
pushf
insl
xchg
inc
mov
jp
inc
fsubr
mov
decb
adc
xchg
cmp
and
aam
mov
sub
loope
mov
orl
arpl
fisubrs
xchg
cmp
je
pop
ret
inc
nop
add
out
gs
pop
fs
push
pusha
in
cmp
popf
ja
shr
push
test
sub
shlb
xchg
rorb
xchg
pusha
jb
push
inc
dec
dec
lcall
cltd
je
dec
in
mov
lods
xor
cmc
xor
xchg
je
popf
aaa
push
push
xlat
sbbl
adc
mov
sbb
sbb
lds
sub
les
sub
jb
and
daa
out
rcrb
sahf
jle
add
aas
cmpsl
movsl
cwtl
adc
icebp
xchg
ret
xchg
lds
jecxz
mov
fcomip
mov
cmp
repnz
lods
cltd
push
icebp
nop
push
ret
int3
sbbl
mov
xchg
mov
mov
adc
xchg
add
test
movsl
cmp
out
push
pushw
mov
and
xor
dec
mov
mov
out
leave
push
adc
nop
aas
movsl
sbb
mov
dec
push
mov
or
push
popf
inc
mov
stc
ss
push
out
mov
rorl
mov
mov
push
aad
int3
cmc
aaa
push
mov
mov
cmpsl
decb
scas
inc
add
mov
jnp
popa
repz
js
imul
aaa
jbe
mov
movsl
sub
mov
outsb
cmp
nop
dec
pop
shlb
jle
jl
jmp
jb
shlb
enter
hlt
inc
pop
loope
ficoms
cwtl
or
out
fwait
or
adc
jbe
jmp
pushf
mov
adc
pop
sbb
movsl
loop
nop
pop
fstps
xchg
insb
pop
pop
pop
add
jecxz
in
cltd
xchg
mov
mov
push
inc
jle
sub
out
xor
dec
aam
sub
hlt
pop
aad
jbe
lret
and
popa
cmp
shrb
sbb
pop
test
aam
cltd
stos
pop
xchg
jl
jecxz
pop
hlt
fwait
mov
fs
push
push
es
ss
and
add
pop
mov
js
cmc
insl
iret
imull
cli
fldcw
pop
scas
jp
pop
daa
stos
dec
push
jne
jmp
xchg
adc
sub
fistpll
test
sub
cmp
and
fisttpl
mov
mov
push
aaa
sti
and
push
push
lcall
dec
xchg
dec
mov
sub
cltd
fsubs
gs
movsb
pushf
mov
adc
add
adc
push
xor
mov
cmpsl
loop
xchg
add
ret
jae
fcmovu
mov
jae
mov
xchg
lret
test
shr
jne
es
xchg
adc
inc
notl
xor
mov
adc
sbb
add
dec
outsb
scas
lret
imulb
stos
mov
aas
cmp
ret
xchg
stc
nop
mov
mov
mov
nop
fwait
cmpsb
icebp
lea
xor
adcb
jmp
add
mov
fmulp
lret
negl
adc
loope
out
or
pusha
dec
sbb
pop
jns
inc
es
push
ret
pop
cmp
adc
addl
mov
inc
imul
das
test
pop
fwait
and
add
inc
test
in
nop
xchg
push
mov
test
jp
jno
out
add
pop
mov
insl
dec
dec
jne
add
test
mov
lret
and
test
add
jb
jmp
or
inc
repnz
mov
inc
cmp
loop
fisttpll
fs
rclb
popf
mov
xchg
xchg
fcomps
jae
mov
shll
mov
push
push
dec
ds
lahf
mov
popf
add
adc
lods
cmp
lods
mov
mov
inc
in
repz
adc
bound
mov
test
push
sub
add
xor
fwait
mov
ret
mov
cmp
push
and
inc
dec
aas
dec
cmp
cmp
xor
fistpl
imul
cltd
mov
lea
push
cmp
dec
sub
pop
loopne
into
icebp
inc
orb
jb
lahf
mov
cmpsl
mov
divb
mov
lcall
or
xor
loopne
pushf
mov
push
dec
fdivl
pop
daa
mov
rcrb
push
es
decl
cmp
inc
mov
pop
int
pop
adc
ja
fsubrl
dec
cmpsb
xchg
sarl
fcomp
or
sub
loopne
sbb
pop
sahf
jae
add
dec
xor
insl
push
pop
push
sub
sub
sahf
ret
jo
cmp
insl
xor
stos
ljmp
lret
pop
repnz
sbb
movsl
pop
adc
icebp
mov
push
adc
add
subl
or
clc
sub
mov
mov
out
or
mov
cmpsb
mov
sub
or
jecxz
loope
addr16
add
xor
add
push
subl
xchg
jp
call
or
clc
in
sti
xor
outsl
pop
sub
ss
push
data16
sub
pop
mov
adc
jl
and
movsb
lahf
mov
or
lret
push
sbb
adc
cmp
repz
shrb
fcoms
and
inc
push
aad
xchg
cmpsb
jge
inc
les
inc
insb
inc
stos
sub
adc
push
dec
scas
pushf
addr16
jbe
mov
iret
mov
sti
in
sub
dec
sub
stos
mov
add
inc
pop
xor
push
aad
scas
cwtl
mov
xchg
add
push
and
jp
xor
stos
pop
dec
jmp
mov
push
mov
pop
cs
jbe
inc
jbe
repnz
xor
icebp
sbbl
stos
sub
ljmp
and
stos
test
sbb
pop
lcall
into
mov
push
neg
jp
cmpl
pop
cmp
xchg
addl
mov
dec
mov
adc
aas
cltd
inc
repnz
mov
pop
mov
aas
cmp
cli
stos
jle
add
xchg
push
add
shl
mov
jp
pop
xchg
mov
xlat
sub
cmc
je
adc
or
cmp
div
xor
mov
movsl
sbb
movsb
lret
movsb
sbb
sbb
sahf
lahf
mov
xchg
inc
pop
lds
loope
push
mov
fmuls
or
push
cltd
es
jge
jae
fwait
test
cltd
jl
aas
xchg
cli
lahf
jle
xor
aam
std
sub
inc
jns
cltd
mov
fnstenv
or
push
and
insl
mov
std
or
mov
cwtl
rcl
add
push
popa
in
dec
ret
lcall
mov
jae
mov
pop
cmpsb
adc
pop
ss
xlat
mov
mov
mov
jg
jp
mov
divb
cmp
adc
mov
int
cltd
lods
sarb
jae
in
outsl
jb
inc
cmp
insl
dec
hlt
and
fsubrs
lods
rcrl
into
xor
add
out
mov
or
mov
rcl
roll
loop
repnz
popa
mov
and
ret
mov
sbb
pop
sub
add
inc
bound
stc
xchg
jbe
mov
arpl
add
sbb
jmp
jle
adc
adc
sarl
mov
mov
repnz
out
pop
mov
add
sbb
movsb
leave
add
int3
movl
stos
adc
inc
cmp
jp
shlb
mov
push
insb
and
lcall
ja
sub
and
mov
and
xor
js
mov
adc
rcrb
movsb
mov
jnp
imul
sahf
ret
and
adc
and
int3
data16
jae
lds
xchg
xor
js
dec
roll
mov
xchg
lcall
lcall
insb
fistps
and
or
xchg
add
jge
pop
dec
icebp
mov
xlat
inc
imul
mov
or
xor
inc
mov
jnp
jne
pop
ljmp
add
pop
subb
add
sub
aaa
and
add
cld
int3
adc
mov
fnstenv
dec
fcompl
ror
xor
xchg
xor
repz
into
sti
scas
incl
js
lret
xchg
outsb
or
dec
leave
or
xor
sbb
int
or
jle
jo
push
cmc
push
mov
rcr
divb
daa
xor
and
outsl
adc
mov
shlb
clc
or
mov
test
ss
cltd
das
sub
aam
test
fs
add
xchg
lods
xor
scas
js
and
insl
inc
or
fisttps
mov
cmp
ret
and
add
xchg
push
fstl
das
sti
ljmp
aaa
or
pop
les
pushf
jno
sub
stc
loop
jge
jl
in
sub
stos
cmpsl
pop
cmp
ret
inc
push
fcmove
adc
js
inc
mov
xchg
push
cmp
popf
outsb
jo
xchg
jb
test
shrb
push
negl
and
sub
repz
add
fists
repnz
loop
push
lods
pop
pushl
sbb
sub
adc
aam
jge
push
insl
inc
in
jp
sub
add
add
xor
out
stos
mov
iret
add
ss
int3
and
mov
outsb
push
stc
mov
shlb
mov
aad
in
pop
je
adc
les
mov
bound
adc
or
scas
aam
pop
repz
fcmovnu
hlt
pop
xorl
add
movsl
xor
jno
xor
mov
cmc
cmp
dec
cs
rcll
in
mov
mov
fidivs
jg
hlt
sbb
outsl
push
dec
cmp
dec
shll
and
ja
ljmp
inc
xorl
and
out
fwait
cmp
push
fdivl
cmp
inc
push
push
setg
enter
imul
add
pop
jae
lods
xor
push
xchg
push
lock
mov
mov
test
pop
test
sarl
sbb
arpl
lret
imul
cld
xchg
mov
pop
add
filds
repz
aam
mov
dec
adcl
push
sbb
sbb
and
lret
test
leave
jmp
bound
mov
inc
loopne
mov
inc
mov
out
and
shlb
jo
cmp
jns
lds
stc
mov
test
out
movsl
sbb
movsb
inc
adc
outsl
mov
rcrb
cli
sub
adc
repnz
push
xor
mov
pop
inc
xchg
mov
fwait
lcall
bound
ret
dec
xchg
aas
sbb
sub
mov
pop
sbb
lods
xchg
sbb
and
out
sub
out
sbb
push
xor
jg
push
cmc
stos
push
mov
pop
adc
insl
sub
out
mov
cltd
sti
push
or
cmp
push
insb
jp
sub
cmp
mov
aad
mov
mov
stc
mov
data16
icebp
push
pushf
and
mov
in
cmp
div
clc
call
pop
fwait
cmp
out
hlt
icebp
sbb
pop
sub
add
lods
iret
scas
xor
bound
dec
fsts
repnz
jb
push
insl
bound
rclb
dec
jns
inc
jecxz
fucomp
int
out
pop
pop
enter
jle
pop
mov
ss
or
pop
mov
fwait
mov
sahf
xchg
cmp
mov
push
stc
in
pop
aas
mov
gs
inc
push
cmp
jns
mov
sarb
inc
pop
clc
popf
jmp
scas
adc
test
mov
pop
leave
and
jecxz
aas
ljmp
pusha
pop
std
int3
fdivs
lahf
cmp
jp
test
out
arpl
xchg
loop
movsb
out
lahf
xor
adc
in
pop
fnstenv
arpl
add
cmp
jbe
and
adc
mov
ja
call
dec
add
es
or
fnstcw
sbb
bound
mov
and
jp
cltd
jg
jnp
push
ret
sub
adc
scas
cmp
idivb
mov
cmpsb
icebp
pop
fs
fiadds
outsb
popf
mov
daa
call
sbb
xchg
inc
push
and
mov
fdiv
icebp
adcb
xchg
jmp
or
fisubl
xchg
and
and
pop
aas
outsb
ficoms
add
mov
push
test
jbe
xchg
rcll
push
pop
je
xor
inc
mov
sub
scas
out
and
loope
pop
out
cld
pop
and
inc
inc
adc
xor
xor
xlat
in
add
inc
pop
mov
loopne
in
jl
ds
loope
push
jmp
and
loopne
sbb
jecxz
cmpsb
stc
or
jmp
loopne
cmp
imul
push
mov
xor
insb
rclb
xor
and
cmp
push
jle
lret
inc
jge
xor
pusha
in
mov
or
movsl
cli
dec
push
fs
push
and
loop
inc
fmul
mov
push
jge
cwtl
rcll
sub
ljmp
or
inc
xchg
pop
aad
outsl
in
jnp
lcall
and
lods
push
adc
pop
int3
adc
cwtl
pusha
jns
pop
mov
jno
push
orb
xor
ja
ss
cmp
xor
xorb
rcrl
xchg
sarb
lea
orb
pusha
mov
cmpsb
mulb
lcall
push
sarb
ss
push
inc
mov
sahf
cmp
pop
in
cld
mov
jg
push
fistpl
sbb
andl
pop
out
pop
xor
pop
aad
jl
out
fcmovbe
inc
punpckldq
xorl
fs
xchg
pop
pop
mov
sti
in
push
mov
cmp
das
adc
or
push
mov
mov
jne
mov
push
cwtl
mov
mov
mov
inc
sub
icebp
cmp
lods
fdivs
pop
leave
cmp
mov
pop
out
inc
pushf
cmp
dec
sub
push
sbb
mov
or
inc
inc
dec
xchg
and
repz
hlt
ds
pop
push
out
xchg
cmpsl
and
loope
inc
inc
or
cmp
loop
scas
xor
movsl
pop
mov
cmpsb
ret
test
cmpsl
jno
add
lahf
ret
mov
and
xchg
lret
test
mov
loope
push
fnstcw
mov
xor
leave
push
testl
jae
inc
jp
jo
incl
xchg
dec
scas
cli
and
pop
mov
std
outsb
orl
push
dec
xchg
aas
push
lcall
repz
scas
repz
xchg
test
scas
mov
fcmovnb
shr
sub
ljmp
mov
mov
and
cmpsl
hlt
jp
pop
scas
mov
roll
xor
push
mov
shr
and
mov
push
in
sti
inc
pusha
mov
lcall
sbb
imul
ss
or
pop
lock
push
adc
inc
ret
push
sbb
out
outsb
mov
mov
test
inc
ja
stc
cmc
cltd
xchg
push
addr16
jno
mov
mov
lock
mov
push
or
sbb
cmp
daa
andl
std
ljmp
jmp
lahf
push
sarb
je
sbb
dec
pop
inc
sti
flds
shll
jecxz
shrb
cld
sbb
push
shll
outsl
push
loope
out
out
fcoms
out
dec
lcall
fisubs
std
arpl
call
add
cli
dec
mov
in
cwtl
hlt
dec
cwtl
addr16
add
jp
xor
pop
push
adc
outsb
jb
inc
dec
push
mov
orb
faddp
into
sarb
and
xor
add
adc
outsb
jb
inc
dec
push
mov
orb
faddp
into
sarb
es
sbb
push
jle
outsb
sbb
dec
push
mov
orb
fmulp
into
ss
cs
push
out
push
jle
outsb
jb
ret
mov
orb
and
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cltd
decl
iret
fidivrl
les
cmp
dec
pop
ds
jp,pn
jp
decl
iret
fidivrl
ljmp
pop
sub
pop
dec
das
jp
push
and
js
sub
jb
les
ljmp
cmp
xor
jae
jp
js
mov
lahf
mov
add
rorl
add
add
mov
pop
jle
outsb
lret
jbe
jbe
cmp
dec
and
addr16
mov
das
push
je
cmpsl
xchg
pop
fs
iret
das
iret
or
mov
inc
or
pop
sub
mov
push
ret
inc
jb
cli
pop
lret
and
xchg
ljmp
cltd
aam
movsl
das
dec
iret
jnp
push
gs
xchg
lcall
inc
jno
popa
cmp
outsl
dec
pop
insb
dec
aas
xorb
cmpsb
pop
stc
mov
lock
jg
imul
sbb
pop
imul
mov
mov
dec
fdivrl
outsl
dec
pop
sbb
aas
inc
das
dec
pop
push
repz
clc
xchg
into
sahf
rorb
mov
ljmp
or
aas
sub
push
xlat
xchg
out
or
lret
lods
mov
scas
ljmp
pop
sbb
and
mov
idivb
stc
mov
lret
lahf
ljmp
pop
sub
aas
dec
das
jp
push
lcall
iret
fidivrl
ljmp
pop
sub
aas
dec
das
jp
push
lcall
or
enter
outsl
stc
jno
sub
scas
inc
mov
add
or
fmul
addb
inc
in
cs
sbb
jp
inc
int3
cmp
lods
fstl
aad
pop
dec
rcr
pop
in
sub
es
int3
pop
rolb
mov
push
inc
dec
fucomi
sbb
insl
gs
stos
sub
cwtl
inc
xchg
xchg
dec
mov
inc
scas
lahf
mul
insb
fwait
mov
cmp
hlt
and
inc
xor
dec
fisttps
ljmp
jo
mov
xchg
xlat
mov
add
outsb
dec
sbb
loope
jns
jno
in
adc
adc
movsl
mov
popf
outsl
mov
aas
inc
pop
notl
cmp
jns
outsl
mov
daa
mov
pop
movsb
xor
pushf
fwait
mov
pop
shll
out
jb
sub
mov
mov
out
jne
xchg
out
gs
addb
add
orb
mov
mov
jne
inc
inc
sbb
xor
pop
push
aad
jecxz
rcl
and
mov
inc
jo
and
sbb
add
test
push
mov
movsl
inc
push
dec
lds
cmp
ja
add
push
and
xor
pop
and
les
sub
jbe
divb
into
xchg
and
divb
test
inc
sub
addr16
pop
lret
out
popf
xchg
movsl
xor
add
icebp
call
mov
icebp
adc
je
and
into
pop
into
clc
xchg
in
jne
pop
loope
sbb
inc
mov
lods
xchg
sub
ja
insb
shrb
jge
push
psrlq
xlat
je
pop
inc
nop
adcl
xchg
xor
jmp
dec
nop
fwait
cld
adc
cmp
inc
loope
roll
rorl
lret
lods
out
xor
push
test
jo
jae
pop
or
dec
jge
mov
add
out
mov
mov
or
cmp
int
in
xchg
push
or
inc
push
mov
xorl
js
lods
add
jmp
inc
jmp
and
cmp
mov
xor
test
fiaddl
add
xchg
sarl
dec
push
in
pop
jbe
jns
leave
mov
push
inc
daa
sub
xor
mov
adcl
in
adc
mov
insl
clc
pusha
scas
mov
sub
add
imul
loopne
or
dec
and
xchg
push
subb
push
loop
imul
jae
out
test
and
sbb
adc
in
pop
cmp
in
sbb
in
mov
loope
cmp
push
mov
sbb
push
stos
aam
push
mov
push
cwtl
xchg
cmp
cwtl
mov
shlb
pop
push
add
cltd
ds
fcmovbe
frstpm(287
cmp
mov
das
mov
jge
test
inc
das
cmpsb
jne
loope
inc
or
push
lret
and
push
pop
adc
xchg
in
mov
sub
pop
sbb
stos
adc
add
sbb
pushf
add
mov
cld
push
rcrb
outsb
ds
cmpsb
mov
jbe
xchg
sub
orb
shll
adc
roll
or
pop
call
es
jno
rorl
rcll
fdivrs
fs
dec
in
add
mov
adc
out
vphaddbd
push
inc
nop
add
test
ret
push
cmp
mov
loop
das
xlat
xor
enter
push
sarb
std
bound
scas
xorps
push
cltd
inc
jnp
stc
imul
push
mov
inc
lahf
pop
pop
add
mov
inc
xchg
stc
pop
jnp
in
dec
bound
and
cs
sbb
fmull
ljmp
sbb
sub
je
bound
push
dec
std
xor
mov
sbb
jge
xor
aad
add
stos
push
mov
mov
lret
notb
dec
adcb
push
mov
test
das
xchg
gs
outsl
adc
adc
daa
cs
mov
adc
mov
lods
ficomps
cmpsb
jmp
lods
adc
fiaddl
and
lds
xchg
xchg
sahf
jecxz
push
pop
aam
je
and
pop
jne
cmpsb
mov
push
sbb
adcl
push
xchg
dec
call
cmp
jbe
xchg
xchg
lock
imul
lret
enter
in
scas
fsubrl
popa
mov
sub
inc
insl
cltd
dec
cmp
pop
push
xor
mov
xchg
adc
mov
enter
stc
cli
mov
pop
sbb
xchg
and
sub
inc
bound
in
in
out
ret
aam
xor
ljmp
xchg
mov
nop
and
jg
mulb
jae
inc
sbb
cld
lock
fwait
adc
pop
mov
xchg
sub
pop
pop
mov
cld
dec
das
mov
cmc
mov
insl
sbb
inc
cs
je
aaa
ljmp
inc
lea
sub
scas
push
mov
jnp
jl
cltd
pop
sub
adc
xchg
inc
jg
inc
inc
jns
cmp
cs
push
sbb
xchg
inc
jl
lods
mov
dec
cmpsl
xor
lea
xor
iret
add
in
mov
icebp
mov
cmpsl
inc
sbb
add
dec
outsl
inc
mov
shll
add
cmp
pop
pop
mov
test
push
or
cltd
inc
lock
int3
loopne
adc
adc
sar
adc
jg
inc
dec
pop
aad
push
scas
xchg
and
clc
cli
aad
into
inc
jo
xlat
mov
jg
je
push
add
xchg
jmp
xor
es
jno
push
sbb
sbb
dec
sahf
in
nop
test
icebp
sub
mov
and
dec
xor
fwait
mov
pushf
les
mov
daa
gs
pop
arpl
fldenv
xchg
jne
xlat
push
mov
mov
jp
jp
jp
fisubrl
in
dec
push
dec
popf
push
mov
push
pop
mov
jae
xor
imul
dec
scas
loope
mov
popa
icebp
push
lea
rcrl
push
and
aad
imul
jnp
clc
mov
loop
mov
sub
mov
shlb
pop
adc
aas
mov
cmpw
shlb
xor
and
cs
jmp
sbb
hlt
movsl
lahf
enter
movl
mov
sub
push
adc
lcall
pop
mov
or
add
ljmp
mov
cwtl
inc
frstor
test
and
inc
add
jne
add
popa
aad
dec
pusha
das
inc
cwtl
sub
jae
pop
jmp
add
push
jp
add
dec
jns
insl
scas
or
stc
imul
outsl
sarl
clc
xchg
std
ljmp
icebp
mov
xor
int
jle
adc
dec
add
sbb
dec
loop
loopne
int
pop
add
sbb
movsb
pop
leave
sub
lods
pop
dec
ja
jge
sub
call
cmp
sahf
xor
inc
adc
mov
sbb
push
dec
movsb
je
sub
daa
iret
ja
and
lcall
cmp
mov
sub
pop
xchg
cmpsb
mov
xchg
and
jo
jp
and
and
ljmp
sub
dec
popf
test
sub
jmp
mov
xchg
push
sti
sbb
data16
push
inc
jge
pop
mov
call
push
adc
cli
imul
leave
dec
add
icebp
sub
mov
andl
jne
lods
sub
sub
repnz
add
fcomps
adc
push
mov
clc
and
movsb
sbb
dec
cmpsb
sub
xchg
inc
fwait
mov
enter
xlat
lea
and
movsl
cwtl
xchg
mov
and
aaa
test
mov
movsb
sub
imul
mov
mov
orl
inc
push
mov
add
aas
add
cmpsb
jp
mov
rcrb
add
cmp
jle
leave
int
imul
inc
push
outsb
shll
lock
ss
inc
sbb
and
mov
pop
sbb
push
jnp
out
mov
adc
lahf
ljmp
xchg
sbb
in
lahf
jne
push
js
stos
cld
pop
inc
ret
adc
popa
push
dec
shrl
xor
mov
lret
mov
jnp
jp
frstor
cmpsb
fwait
sbb
les
mov
mov
repz
cmp
dec
push
jns
test
ret
stos
clc
and
mov
dec
inc
sub
andl
push
jl
inc
out
outsb
push
cmpsl
clc
pop
add
push
mov
leave
hlt
daa
stos
and
pop
add
dec
gs
sub
test
sbb
push
lds
and
mov
cli
mov
cmp
cmpsl
push
into
lcall
xchg
sti
xchg
sbb
out
stos
dec
mov
add
dec
call
xor
imul
push
shl
or
dec
adc
inc
xor
cmp
mov
out
cmc
mov
push
sub
cmpsl
sti
sub
mov
lcall
insb
cmp
dec
dec
pop
sub
dec
jne
ret
movsb
adc
mov
not
cmc
push
mov
push
xchg
je
push
add
dec
movsb
lret
int
mov
pop
add
popf
call
pop
les
ror
inc
out
std
xor
sbb
xchg
incl
xchg
test
add
int
add
jno
jl
js
shr
cmp
fwait
out
xchg
pop
mov
jl
fldenv
pop
or
cmp
jne
lds
xlat
mov
fsubr
mov
xchg
std
inc
aas
sub
inc
icebp
xchg
dec
dec
gs
pop
mov
sar
inc
in
mov
sbb
cli
rcrb
cld
add
mov
test
lea
sub
movsb
lahf
imul
jl
lods
popa
dec
mov
testl
sbb
jg
fsubrp
into
orl
xchg
push
jae
leave
icebp
lds
push
pop
sub
sbb
lahf
or
test
add
add
out
ja
fimuls
data16
cmp
xor
sub
push
dec
repnz
mov
lret
dec
mov
dec
aam
repnz
inc
inc
mov
loop
fs
jb
ficoms
mov
xchg
jns
add
aaa
daa
out
aas
push
pop
jo
loopne
stos
cmp
mov
out
ja
cmp
lds
fwait
pop
jne
rol
int
jecxz
inc
mov
push
cmp
ret
jl
test
inc
rcrb
aad
inc
enter
mov
cwtl
jo
sbb
js
in
mov
enter
add
shll
pusha
in
xchg
adc
and
push
repnz
aaa
add
sbb
add
movsb
ret
sbb
sub
out
push
sbb
in
icebp
imul
lock
adc
or
adc
mov
call
inc
clc
push
xchg
dec
and
jo
ret
xor
adc
sub
mov
push
and
fisttpl
xor
push
and
into
inc
adc
fisubrl
test
xchg
rorl
sbb
jl
and
out
add
gs
jp
inc
test
xchg
sub
orl
sub
push
jbe
and
fisubrs
testl
mov
fistps
add
push
lock
xchg
repnz
mov
ficoms
lahf
in
mov
cmpsl
jmp
jg
rcrb
mov
push
cli
dec
insl
popf
insl
push
xchg
int3
pop
popf
fst
repnz
subb
add
ss
ds
popa
push
inc
in
arpl
inc
roll
sub
jecxz
and
mov
ret
scas
movsl
and
aad
pop
inc
push
add
xor
fs
dec
imul
cltd
mov
xor
sub
and
test
scas
adc
dec
or
xchg
inc
dec
data16
cwtl
ss
dec
sub
cmp
bound
push
xor
icebp
xor
pop
push
jecxz
into
mov
cmp
push
jns
mov
fildll
out
test
js
lcall
mov
mov
stos
mov
adc
add
pop
test
pop
in
xchg
lret
cmpb
xor
ret
and
inc
daa
ss
pop
popf
lods
dec
mov
lret
mov
cmp
rolb
rcrb
insb
mov
sub
out
icebp
xchg
pop
jns
cli
add
imul
or
std
fcomp
insl
std
xchg
xlat
std
or
in
mov
push
jge
lret
fsubr
mov
mov
das
add
inc
aad
sub
ds
sti
push
movsb
mov
dec
bound
push
mull
adc
mov
loop
inc
cmp
outsl
or
sar
stos
mov
adc
insl
rolb
test
in
lea
cltd
cmpsl
data16
mov
jmp
sbb
xorl
in
jge
jo
fldcw
outsl
mov
xchg
xchg
outsl
imul
outsl
pop
fimuls
ljmp
jg
push
mov
cli
adc
cwtl
aad
out
jnp
cmpsl
into
movsb
stos
sub
shlb
fistps
rcl
pop
push
ffreep
pusha
adc
or
mov
fdivrl
out
gs
and
mov
dec
cmp
mov
cmpsb
add
cltd
mov
cmpsb
roll
mov
in
inc
dec
fwait
pop
pop
mov
mov
aas
mov
xor
mov
shll
jne
in
sbb
repnz
fwait
enter
bound
rcrb
stos
ror
movsb
test
imul
cmp
rolb
out
test
sub
lea
push
mov
xor
dec
push
pop
outsb
mov
mov
roll
mov
xor
out
xor
out
inc
add
cmp
pop
fnsave
je
dec
in
xlat
add
repz
pop
inc
inc
mov
cld
outsl
out
mov
jle
and
lret
add
xchg
and
pop
sbb
ss
sbb
mov
movsl
outsb
adc
scas
sbb
stos
adc
test
cs
cmp
mov
cmp
or
add
xchg
sbb
dec
jbe
into
sub
imul
add
pop
mov
mov
decl
xor
push
out
ja
jg
sahf
outsb
add
jg
sbb
or
xlat
fiadds
call
xchg
mov
xor
dec
scas
mov
push
repz
aaa
cmp
jb
fs
in
pandn
mov
cli
mov
cmp
and
repz
xlat
adc
xor
loope
inc
inc
loope
lock
push
hlt
sub
or
sub
stos
repnz
insb
outsb
mov
adc
int3
mov
mov
inc
arpl
mov
insl
sahf
pop
pop
sbb
cmp
jne
adc
lea
cmp
xchg
icebp
pop
pop
hlt
outsl
pop
repz
dec
inc
movsb
repz
add
cmp
mov
push
jg
mov
fwait
ja
mov
push
scas
mov
mov
aas
adcb
xchg
stos
repnz
push
mov
cmc
mov
shlb
sbb
stos
cli
push
stos
out
mov
sub
push
repz
or
orb
fildll
inc
shlb
sbb
and
inc
ds
jl
cmc
jle
rol
xchg
push
ret
lods
cmp
cmp
cmp
out
stos
jmp
cmp
dec
dec
xor
fisubs
sbb
push
repnz
jns
inc
mov
cmpsb
push
enter
pop
aas
jl
popf
sub
clc
or
mov
bound
mov
cmpsl
xchg
jp
mov
aam
aas
mov
mov
pushf
enter
jge
push
adcb
dec
adc
pusha
shlb
jne
inc
and
mov
inc
je
adc
cmp
ret
jg
push
adc
iret
mov
mov
xor
out
mov
jmp
mov
xor
nop
in
inc
xchg
sarl
outsb
mov
jmp
xor
and
test
sub
or
mov
sbb
shlb
jle
pop
pop
sbbl
xchg
jno
sbb
movsb
push
int3
pop
out
aaa
movsl
into
ss
push
and
inc
jge
out
arpl
hlt
xor
adc
addb
fcompl
in
insb
fimuls
shrl
pop
mov
xchg
imul
cmp
aad
ljmp
cmp
xchg
mov
mov
jo
insl
cli
mov
call
cmp
loopne
push
andl
aaa
mov
popa
stos
fs
mov
jne
sub
int
imul
iret
xor
ja
push
add
test
inc
pushf
pop
sbb
addr16
imul
cmc
outsb
xor
lods
inc
les
fisttpl
sub
outsb
pusha
lahf
pop
in
pop
lcall
cmpsl
adc
adc
pop
push
dec
dec
cwtl
pop
sub
out
adc
sub
shlb
imul
cmp
xor
mov
mov
pop
mov
inc
mov
bound
mov
aaa
rcrl
pop
js
popa
in
lock
aaa
mov
lods
rcl
daa
movsb
xor
jnp
pushf
jae
into
inc
mov
aad
adc
inc
lods
loopne
and
in
addr16
incb
cmpsb
lods
sbb
test
sbb
xchg
push
inc
add
mov
ret
shl
pmuludq
sub
and
cmp
sahf
add
fbld
divb
lds
adc
ss
cli
call
sbb
mov
insb
pusha
inc
cmpsb
pop
testb
mov
jae
lods
and
test
lods
adc
fistps
shlb
cmp
lahf
xor
cmpsl
iret
jecxz
stos
out
cs
aaa
aas
push
fidivs
inc
xchg
dec
inc
into
lret
fwait
xchg
out
inc
loop
pop
jp
iret
mov
jg
aaa
movsl
xlat
addr16
or
stos
push
sub
jmp
in
mov
enter
lahf
or
data16
push
mov
jl
repnz
daa
mov
lds
clc
les
pop
lea
push
clc
sbb
pop
cwtl
sti
jmp
aad
mov
and
pop
inc
fldcw
push
or
scas
addr16
push
sbb
xchg
jno
fisubs
adc
negb
sbb
decl
sbb
js
fisttps
add
push
sbb
jmp
cmp
out
pop
cmp
jl
popf
xor
jmp
pop
stc
popf
add
insl
and
pop
repnz
and
mov
adc
pop
mov
leave
das
mov
jbe
outsb
sarb
pop
rclb
js
mov
and
push
dec
adc
movsl
movsb
mov
and
or
mov
or
aas
dec
int
mov
lods
cs
negl
mov
loope
stos
mov
sahf
notl
xor
aaa
ljmp
push
add
and
out
sbb
dec
jns
mov
push
cmp
cli
jle
pop
cld
or
sbb
or
jae
push
adc
push
jg
outsl
lds
xchg
mov
aad
push
cltd
pop
and
scas
inc
repz
sbb
jbe
xor
test
xor
scas
push
add
dec
popa
sub
xchg
sbb
mov
call
fstl
xor
mov
icebp
mov
inc
fs
cmp
shrb
push
mov
enter
xchg
mov
daa
fcomp
dec
xchg
adcl
inc
bound
push
pusha
clc
fmull
push
inc
das
cmp
fwait
sub
in
movzwl
xchg
sti
pop
lret
sbb
iret
ret
lahf
sub
push
sub
push
pop
jbe
lods
or
inc
mov
push
jp
push
or
mov
or
test
inc
mov
rcr
xchg
movsl
sub
shrl
in
mov
add
push
push
push
or
pop
cmp
ds
mov
cmp
fadds
movsb
jno
lods
lcall
and
ret
insl
int
sub
mov
mov
dec
mov
ret
jmp
imul
movsb
push
sbb
cmp
xchg
mov
jl
je
ss
mov
xchg
mov
cmp
imul
add
push
rorb
sub
mov
push
mov
into
lahf
in
iret
xor
sbb
xor
inc
push
sbb
testl
pop
jb
arpl
fnstsw
or
mov
mov
mov
in
arpl
mov
xlat
pop
mov
js
mov
push
rcll
fs
mov
xchg
push
call
push
in
mov
adc
jle
mov
mov
mov
inc
adc
movsb
aam
icebp
les
inc
mov
stos
out
std
fildll
scas
cli
lahf
ljmp
pop
sub
aas
dec
das
jp
push
lcall
iret
fidivrl
ljmp
pop
sub
aas
dec
das
jp
push
lcall
iret
dec
mov
sub
lret
dec
pop
aas
pop
das
jp
orb
call
out
loopne
mov
fidivrl
push
sbb
lds
mov
rolb
imul
xor
dec
add
dec
cli
mov
leave
mov
fimuls
cs
push
dec
push
cmp
outsb
sbb
dec
stc
mov
leave
mov
pushf
mov
jns
imul
cmp
outsb
sbb
dec
stc
push
lret
cli
lods
mov
lods
loopne
or
jno
pop
ss
orb
ret
lret
into
or
and
into
or
push
mov
cmp
sub
inc
push
fs
daa
lahf
ss
mov
lahf
xchg
cmp
jmp
sti
mov
inc
inc
cld
push
leave
pop
dec
jae
jmp
sbb
mov
sub
lcall
outsb
inc
rorl
mov
gs
ss
xchg
test
inc
sub
in
rcr
fwait
mov
jg
jnp
dec
or
inc
loope
push
popa
inc
dec
jmp
and
shll
mov
adc
mov
scas
mov
mov
sub
mov
mov
push
dec
push
cmp
outsb
sbb
dec
stc
mov
leave
mov
fimuls
cs
ja
addr16
adc
jbe
lea
mov
mov
stos
testb
fdivr
sbb
jl
bound
pop
sub
mov
movsb
dec
loope
popf
int3
test
mov
imul
jle
outsb
sbb
dec
stc
mov
leave
mov
fimuls
cs
push
dec
push
cmp
outsb
sbb
dec
stc
mov
leave
mov
fimuls
les
jmp
and
lock
movsb
dec
nop
or
cmp
dec
gs
mov
pop
cli
fimuls
stc
pop
inc
push
popf
aaa
and
les
neg
in
jno
mov
pop
push
mov
fisubl
hlt
mov
fst
pop
cmpsb
mov
mov
pop
push
dec
sub
push
pop
push
aas
int3
inc
test
push
jecxz
fcomps
sbb
sub
xchg
cs
cmp
jl
pop
push
adc
data16
push
mov
jge
enter
cld
enter
jge
lds
or
ficompl
adc
and
adc
lods
mov
xor
subps
insl
jbe
inc
sub
or
adc
stos
sbb
jecxz
ficoml
mov
pop
notl
jmp
cmp
sbb
push
bound
mov
add
jmp
xchg
aam
adc
aas
mov
repnz
jp
dec
pop
cltd
inc
sarl
add
adc
jns
dec
popa
pop
es
xor
push
xor
mov
popf
lret
es
sbb
cld
jo
pop
addl
sbb
add
mov
outsl
or
std
mov
add
jne
jmp
jo
jg
insl
or
sti
or
icebp
pop
mov
testb
lock
inc
add
cltd
mov
cmp
cmpsb
movsb
lods
mov
aad
std
jecxz
or
mov
mov
adc
dec
test
inc
movsb
stos
out
push
jp
mov
cmc
dec
mov
les
aad
xor
out
fldl
leave
adc
or
popf
mov
hlt
mov
mov
stc
xchg
repnz
mov
shl
not
jo
inc
testl
pop
jle
push
movl
mov
cld
pushf
call
and
jne
aad
pop
mov
adc
ret
add
mov
or
inc
mov
inc
aaa
and
cli
add
ret
andb
inc
std
in
mov
pop
sbbb
and
and
fcmovnb
pop
lods
leave
cmp
adc
push
mov
sub
jae
stos
cmp
mov
lret
stos
ds
pop
jl
js
pop
pop
dec
jb
mov
and
inc
mov
loop
dec
ret
stc
jno
xorl
jns
mov
out
aaa
call
mov
add
lods
cmpsb
push
and
ljmp
xor
cmpsb
mov
shlb
push
and
iret
xchg
lret
addr16
stos
stos
test
push
ror
pop
dec
fdivr
cmc
shll
aaa
pushf
aam
inc
mov
lods
loopne
sub
inc
cmp
and
mov
adc
inc
dec
aam
mov
in
fwait
cmc
dec
aad
push
test
dec
dec
lret
add
lds
push
push
es
dec
inc
and
and
sub
in
jg
push
sub
mov
fcomps
gs
fcomps
dec
cwtl
jb
xchg
mov
pop
add
sub
aam
and
inc
in
scas
enter
mov
ret
pop
inc
es
lahf
stos
enter
mov
or
andl
xchg
cs
addr16
mov
cmp
ljmp
nop
ret
pop
fnstcw
mov
jae
sub
xchg
aas
dec
popf
inc
gs
adc
nop
fisubrs
mov
jne
js
loop
lods
cmc
or
repnz
dec
lcall
loop
cmpsl
out
push
mov
sub
jae
movsb
jo
nop
bound
jge
jp
movsl
out
jl
cmp
pushf
js
mov
addr16
or
pop
rcr
aam
add
xor
leave
and
idivb
icebp
mov
lods
jle
daa
pop
jl
orl
addr16
js
popa
mov
int
ret
outsl
out
sub
pop
dec
cs
jmp
gs
xchg
adc
dec
mov
scas
dec
mov
add
lcall
xor
in
push
mov
xchg
mov
cmp
imul
data16
xchg
inc
jle
lahf
lock
lds
call
mov
icebp
mov
pop
push
xchg
out
xchg
pop
shr
push
add
shlb
popf
les
clc
mov
imul
mov
xor
fmuls
add
pop
push
push
xorl
inc
aas
push
add
cltd
pop
aam
pop
cmp
xor
and
test
xor
call
out
jne
pusha
cltd
sbb
sub
stos
repz
stos
out
aad
call
pushf
das
ret
jmp
popa
popa
int3
lods
sbb
push
push
cmp
lds
rolb
lahf
cmpsb
dec
popa
dec
mov
dec
dec
sbb
push
add
insb
mov
jge
mov
idivb
fdivs
xor
xchg
adc
pop
iret
xor
pop
loope
call
xor
adc
cwtl
mov
nop
mov
repnz
js
mov
mov
jbe
cmp
movsl
sbb
xor
dec
mov
shl
sbb
adc
int
xchg
mov
xchg
arpl
arpl
mulb
pop
sbb
sbb
roll
insl
mov
lcall
push
pop
cmp
mov
pop
ljmp
mov
push
xor
jecxz
and
sub
and
mov
icebp
push
shll
bound
cmp
cs
lods
imul
or
sbb
pop
inc
xchg
xor
push
mov
add
lods
mov
dec
jg
sahf
pop
cmp
mov
stc
out
adc
push
push
out
loop
insl
in
add
add
dec
aad
aad
aam
or
cmp
sahf
xor
mov
mov
sbb
jg
in
inc
insb
cltd
pusha
fisubl
inc
inc
and
addl
adc
out
stos
add
mov
or
das
jl
js
lret
test
loopne
rcrb
and
jle
hlt
mov
jbe
aam
xchg
cmpsl
pop
xchg
and
mov
out
cwtl
test
scas
inc
aaa
jmp
push
cmp
sti
sbb
adc
mov
loope
andb
inc
jge
fsubs
add
push
mov
sti
mov
mov
and
inc
mov
ja
movl
addr16
nop
lea
aad
mov
sti
fdivr
push
push
ljmp
insb
cmp
insb
out
fcos
test
and
xchg
enter
sti
adc
pushf
pop
mov
shll
aam
xchg
push
jl
add
add
and
push
fwait
js
or
sbb
xlat
pusha
cmpsl
out
mov
add
test
mov
imul
sub
std
cmp
adc
mov
cmc
nop
jno
jl
addr16
push
int3
stos
aaa
shlb
xchg
les
jae
sub
dec
sbb
insb
add
pushf
mov
shrb
or
and
sbb
mov
sbb
lret
pop
leave
or
xor
mov
popf
cmp
test
cmc
in
cmp
mov
add
or
ret
mov
pusha
rcll
mov
and
std
iret
idiv
in
fnsave
add
stos
lret
dec
dec
sbb
dec
jbe
mov
nop
pop
aaa
inc
stos
je
pop
push
ret
movsb
scas
mov
mov
pusha
jge
mov
lock
mov
shr
fcoms
in
in
pop
adc
dec
out
lcall
or
lret
mov
sub
xchg
jmp
imul
mov
leave
stc
cmp
cmp
cli
ds
mov
jg
jg
sub
and
fisubrl
xor
dec
mov
mov
je
and
push
ret
rcrl
mov
jecxz
pop
lahf
jmp
cmpsb
imull
test
loop
dec
gs
daa
mov
out
xchg
push
stos
pop
js
jmp
dec
sub
xor
push
shrb
js
cmp
sbb
int
cld
lahf
leave
pop
lahf
insb
sub
lods
ficoml
popa
xor
test
clc
ret
sbb
addr16
cs
mov
mov
xchg
mov
pop
jbe
sub
fs
gs
jg
jns
mov
mov
ss
testl
pop
mov
orl
push
gs
push
xchg
cmp
and
push
dec
jmp
pop
mov
sbb
dec
std
rolb
nop
mov
push
aaa
dec
lods
scas
je
pop
push
pop
call
and
jle
out
jnp
mov
add
adc
insb
add
xchg
jmp
fdivl
testl
mov
pop
inc
adc
jecxz
sub
clc
and
sahf
sbb
stos
ss
jae
sbb
imul
mov
lcall
pushl
dec
lretw
stc
jecxz
in
jp
fmulp
add
adc
push
mov
aam
pandn
shll
xchg
xchg
mov
cmp
adcb
adc
add
frstor
in
outsb
mov
pop
mov
mov
xchg
je
jg
pop
dec
roll
jno
loop
rclb
ljmp
jno
mov
aaa
mov
call
stc
cmp
mov
push
imul
mov
stc
mov
xchg
punpckhwd
pop
repz
cmp
rcrb
fcmovne
bound
mov
shll
int
add
popa
mov
das
pop
sbbl
xor
mov
cli
roll
std
or
jbe
mov
dec
sarl
int
test
test
mov
outsl
mov
push
lea
repz
dec
mov
int
xor
std
cmp
cmc
ret
lock
mov
xchg
cli
sub
xchg
pop
and
pop
daa
jbe
lret
cmpsb
xchg
dec
pushf
push
push
inc
ret
rcrl
roll
or
or
fs
adc
add
orl
or
mov
rcll
push
cmpl
fcom
xchg
xchg
in
cmp
add
andb
adc
fwait
lret
imull
push
lods
ljmp
pushf
fwait
test
pop
fistps
pop
aaa
lret
lock
stc
sbbl
or
call
out
loopne
or
aad
jo
and
xorb
sbb
push
cmp
pop
das
push
sarl
popa
fisubrl
push
fdivl
pop
setne
cmp
push
loop
and
mov
je
adcl
xor
orb
fwait
fwait
pop
xor
dec
out
lock
dec
xorb
out
adc
sbb
scas
add
lods
popa
pop
jecxz
int3
jno
ret
or
outsl
add
cmp
dec
aaa
stos
enter
stos
cmpsl
jnp
inc
int3
jne
jo
stos
faddp
jge
sarb
lods
or
sbb
je
popf
cmpsb
cli
scas
lods
jmp
ror
insl
xchg
out
or
xor
std
or
and
js
or
mov
lock
dec
js
jae
cmpl
adc
and
jno
or
fldcw
shrb
fwait
pop
out
es
mov
jne
sbb
xchg
cmpsl
push
dec
and
push
cmp
test
mov
test
lea
dec
jmp
rcrl
pop
and
fcomps
or
in
inc
sbb
push
into
push
es
push
popf
push
test
insl
jmp
stos
mov
and
sbb
fwait
adc
pop
bound
or
stos
and
shrl
sub
das
in
pop
cmc
cmp
cs
or
mov
lahf
adc
add
inc
rol
dec
dec
in
fwait
daa
xchg
mov
jno
repnz
sub
push
rcll
inc
cli
jnp
add
xor
sarb
push
aas
push
push
jmp
mov
cmc
sbbl
inc
fisttpll
lock
and
sbb
stc
roll
lret
popf
repnz
nop
mov
xlat
iret
lcall
push
out
das
clc
repnz
pop
pop
bsr
lods
ret
test
lret
inc
jno
popa
inc
or
pop
sub
fwait
mov
js
loope
cs
or
adc
stos
push
ds
iret
iret
xor
out
sub
std
rclb
stos
mov
pop
push
sub
hlt
sbb
ja
cli
stc
addr16
mov
fnstenv
sub
or
pop
arpl
pop
mov
clc
inc
sbb
mov
sub
cli
xchg
testb
cmpsl
xor
cld
movb
sbb
mov
adc
sub
add
sub
jnp
push
inc
scas
std
sahf
inc
lods
es
ficompl
mov
cmp
xchg
jp
inc
mov
fldenv
pop
jge
jle
xchg
or
data16
pop
mov
mov
in
and
repz
xchg
jo
cmp
arpl
mov
enter
pop
cmp
shll
xchg
push
rdmsr
mov
push
rcr
insb
xor
mov
rcrb
push
lahf
in
push
ret
test
insb
and
push
or
and
or
cltd
scas
jb
cwtl
js
dec
sbb
add
shrb
jg
fldenv
cld
jae
add
inc
pop
adc
ret
ficoms
gs
incb
call
pusha
cmp
cmp
mov
shll
jle
in
aad
adc
out
cmp
or
std
xor
cmpb
mov
lea
mov
xchg
lret
jmp
push
int
daa
adc
imul
les
je
out
loope
nop
xchg
ljmp
dec
les
shlb
sbb
pop
sub
daa
xor
bound
push
movsb
ret
test
add
and
mov
jmp
ret
cli
add
add
adc
hlt
or
pop
cmp
aaa
dec
nop
or
nop
cmpsl
lret
mov
lcall
mov
pop
imul
ja
adc
xchg
xchg
popa
and
incb
dec
fcoml
popa
adcl
mov
add
mov
ds
jnp
jae
inc
pop
mov
pop
mov
mov
jmp
adc
scas
push
cmp
add
pushf
mov
push
cmp
cwtl
add
jne
sub
lods
repz
or
mov
pusha
iret
lea
int3
in
addr16
lods
xor
cmpsl
imul
cmp
jmp
pusha
ja
mov
add
test
push
adc
inc
add
cli
sti
adc
jmp
mov
mov
pop
std
mov
xchg
jg
int
push
cmp
mov
icebp
add
fidivrs
ja
xlat
sbb
or
lcall
pcmpeqd
dec
ret
shll
dec
and
inc
sbb
test
sbb
fstpt
pushf
pop
and
dec
ja
and
loopne
sti
int
repnz
imul
repnz
out
adc
jmp
add
daa
sub
mov
mov
mov
adc
mov
cmc
or
cmp
xchg
clc
xchg
mov
sub
movsb
out
xchg
add
sbb
push
adc
sub
jns
mov
jae
loope
movl
shll
sbb
aad
push
or
lods
lods
loopne
and
and
aad
xchg
sub
dec
xchg
sub
push
subl
inc
xor
daa
mov
sbb
sbb
fsubl
inc
inc
int3
ja
addr16
in
jns
stos
pop
pop
push
test
dec
or
ror
cmp
cmp
mov
jmp
jle
jb
movsb
pop
and
xchg
dec
mov
cltd
int
call
jp
insl
test
cld
sub
lret
sub
popa
sub
imul
or
mov
scas
inc
xchg
js
sbb
xchg
xor
inc
jbe
xchg
loope
mov
pop
pop
cld
inc
push
xchg
xchg
test
xor
fcmove
push
cmp
mov
es
movsb
mov
push
jle
enter
call
pop
movl
inc
mov
clc
sahf
sti
jnp
stc
loop
and
out
mov
inc
dec
outsl
scas
movsb
inc
scas
les
leave
stos
pop
outsl
inc
jg
cmp
leave
outsb
add
shlb
div
and
jnp
and
faddl
cld
sbb
jg
cmp
mov
xchg
clc
fchs
xlat
call
mov
sbb
idivb
popa
mov
int3
sbb
outsb
js
pop
xor
dec
test
xor
mov
adc
dec
mov
adc
aas
mov
mov
mov
in
mov
std
in
or
insl
jo
dec
scas
mov
test
mov
mov
pop
dec
mov
shlb
sbb
pushf
pop
stos
mov
aaa
adc
sbb
mov
and
loopne
rorl
sub
popf
pushf
shrl
sbb
and
loop
push
lea
dec
addl
pop
or
aam
das
inc
jbe
bound
mov
mov
mov
or
adc
xchg
loope
popf
mov
and
loop
and
sti
push
push
scas
jge
xchg
sbb
sahf
cmp
mov
and
fwait
adc
sbb
mov
inc
jle
jl
loope
js
stc
movsl
xchg
push
mov
js
scas
insb
xchg
push
xor
cmp
push
sbb
sub
mov
fs
popa
insb
ljmp
pop
jg
loopne
mov
mov
out
in
lds
mov
sub
or
push
fbld
jge
loopne
pop
jle
jns
lock
jmp
mov
pop
jns
sbb
call
xchg
mov
out
push
inc
sbb
pushf
in
outsl
jb
push
cltd
in
mov
dec
in
cwtl
js
or
fwait
addr16
sbb
sbb
out
leave
enter
aaa
stc
xor
push
jge
out
js
sub
mov
jl
push
inc
jno
cli
push
sub
insb
sbb
inc
test
mov
or
cs
lret
jae
mov
adc
ja
mov
sbbb
or
out
lea
and
int
cmpsl
adcb
rclb
dec
es
cmc
xchg
sti
mov
mov
mov
movsl
jl
sbb
push
mov
xchg
addr16
imul
mov
dec
and
orb
fdivrp
xchg
fwait
hlt
push
outsb
lahf
mov
push
mov
icebp
movl
mov
iret
add
popa
xor
mov
xor
cmp
mov
fwait
jno
mov
adc
push
adc
int3
add
ret
inc
mov
aad
ret
pop
add
in
loopne
adcl
stos
lahf
pop
inc
xchg
pop
insb
in
cmp
and
push
pusha
ljmp
mov
sbb
and
mov
add
shrl
adc
push
movsb
inc
lahf
sub
jns
push
cwtl
xlat
or
and
jl
fcoms
lea
and
insb
mov
add
xchg
std
dec
imul
xchg
daa
sti
test
xor
xor
ss
inc
dec
mov
inc
popa
fldenv
inc
repnz
sub
jl
call
cmp
xchg
inc
outsb
xchg
aaa
and
sub
fdivrp
mov
mov
inc
iret
repnz
jecxz
idivl
mov
popf
adc
cmp
leave
rcll
es
xlat
pop
cmp
mov
jno
mov
lret
or
into
add
popfw
js
enter
or
sbb
inc
mov
cld
inc
mov
mov
cmpsb
cwtl
cs
cld
popa
ja
mov
jl
or
mov
jno
aad
or
sub
mov
out
stos
mov
mov
stos
xor
js
cmp
push
ret
fnstcw
push
mov
inc
out
cmp
cmp
dec
shr
lret
cmp
xchg
sbb
inc
sarl
pop
aad
cmc
mov
push
pop
les
test
jno
sahf
dec
inc
push
mov
inc
movsb
push
cmp
fimull
add
pushf
in
aaa
sbb
movsb
in
jns
movsl
movb
cmpsb
pop
xor
add
mov
lds
mov
mov
xlat
cmp
xchg
int
ss
negb
bound
fisubrl
or
pop
mov
test
fnstsw
outsb
mov
fdiv
add
sub
dec
and
jp
jo
cmp
jb,pn
dec
aas
jle
int3
jbe
popf
js
jne
cltd
stos
pushf
xchg
popa
jp
ret
pop
jmp
cld
pop
scas
lock
fwait
int
in
stos
pcmpgtd
insb
dec
push
xlat
pushf
cmp
inc
xor
pop
loopne
or
dec
adc
cs
dec
push
cmp
outsb
sbb
dec
stc
mov
leave
mov
fimuls
cs
push
dec
push
cmp
outsb
sbb
dec
stc
mov
leave
mov
fimuls
scas
pop
sahf
dec
push
cmp
out
sbb
dec
clc
ds
mov
fimuls
cs
push
dec
push
cmp
outsb
cltd
pop
mov
mov
leave
stc
into
jbe
adc
jno
clc
adc
and
add
loop,pn
mov
addb
xor
inc
lock
loopne
adc
and
push
repnz
ret
pusha
sub
shlb
inc
lock
loopne
adc
and
push
jmp
fidivl
pusha
and
data16
xor
mov
into
push
cld
int3
ljmp
sbb
lret
mov
notl
xlat
mov
dec
jnp
sub
and
mov
jmp
int
std
mov
mov
scas
lock
add
push
dec
lods
pop
repz
shlb
loope
push
int
push
mov
pusha
popf
shlb
repz
out
mov
xor
push
out
sub
pop
xchg
add
pop
out
and
inc
lea
out
mov
xor
sub
int
pop
dec
adc
iret
icebp
stos
mov
xchg
mov
int
pop
push
pop
fwait
jns
and
int
std
mov
mov
mov
adc
and
push
call
pusha
cmp
or
inc
lock
cmpsb
sarl
shl
jbe
data16
lahf
add
adc
xor
jo
jl
push
mov
aaa
test
xor
outsb
scas
pop
xchg
pusha
and
xor
inc
out
int3
pop
mov
push
mov
inc
xorb
push
lcall
pusha
and
adc
inc
lock
loopne
adc
and
push
repnz
ret
pusha
and
adc
inc
lock
loopne
adc
fcmovnb
cli
icebp
int
ficoms
daa
mov
or
inc
inc
cld
jmp
out
inc
xchg
dec
add
ja
mov
outsb
pop
std
mov
bound
inc
cmpl
jno
sbb
adc
stos
nop
jo
jmp
repnz
dec
xor
adc
push
xchg
pop
ret
cmp
mov
sub
adc
add
gs
clc
icebp
inc
inc
jmp
pushf
in
or
sbb
fstpt
fdivr
and
mov
stc
rorb
sbb
sub
inc
fs
std
dec
ret
adc
push
popf
lea
repz
mov
in
jbe
jge
and
adc
jb
dec
idivb
hlt
cltd
cmpsl
xor
cwtl
pop
ljmp
xlat
mov
sarl
mov
pop
adc
imul
fadds
stos
ficoml
mov
pop
cmp
xchg
aas
mov
rcll
les
movsl
xor
xor
push
scas
test
pop
cmpb
sbb
dec
and
adcw
cltd
flds
imul
fsubrs
push
mov
aas
inc
mov
mov
call
lcall
and
lret
cmc
shll
shrl
inc
jmp
dec
scas
pop
jmp
mov
lods
push
mov
dec
out
inc
inc
stc
and
test
cs
fst
and
push
jmp
movsb
shrb
add
btr
push
fistl
mov
pop
cmp
jbe
push
jle
adc
in
xchg
cs
jo
insl
ja
jecxz
push
mov
cmp
out
loopne
test
outsl
sub
mov
pop
lahf
push
push
loope
lcall
je
add
sar
jo
mov
add
xor
pop
in
mov
sbb
ljmp
in
out
popf
enter
sti
pop
fwait
test
fstpl
xchg
lea
ja
repnz
neg
inc
loopne
lret
insl
inc
gs
aam
rcrl
sbb
or
dec
mov
or
sbb
add
out
push
push
cltd
dec
in
icebp
jno
int
sub
jmp
mov
mov
loopne
mov
cwtl
orl
cmp
test
out
popa
shlb
shr
ret
ret
testl
or
je
into
add
pop
sub
push
push
jb
inc
ror
into
inc
loop
jbe
std
cmp
rclb
aad
pop
repnz
xchg
sbb
arpl
sub
and
lret
sbb
in
popa
xor
bound
pop
xchg
rclb
aaa
and
insl
inc
push
adc
popf
test
mov
pop
pop
mov
jbe
and
imul
gs
int3
xlat
xbegin
push
or
jne
int
pusha
xorb
push
adc
fistps
jecxz
aad
adc
movsb
or
fdivr
jl
sahf
test
xchg
cs
jge
sti
dec
aam
mov
mov
sub
or
enter
mov
mov
in
dec
pop
xchg
pusha
cltd
add
sub
push
adc
xlat
mov
xlat
jnp
mov
dec
cmpsl
and
ret
lcall
in
repnz
into
adc
test
divl
jns
add
iret
jnp
outsl
fwait
pop
xchg
popf
cmp
ljmp
ss
enter
jns
sarl
pop
cld
imul
mov
sbb
inc
mov
test
push
cmpb
push
and
lds
pextrw
mov
pop
stos
push
test
in
and
inc
jge
aas
pop
icebp
cmp
sub
lret
testl
clc
jne
stc
mov
jg
push
xchg
mov
rolb
aad
jb
pop
mov
scas
and
clc
sub
inc
rorb
lock
add
pushf
or
jae
xchg
jl
lods
dec
adc
ds
mov
cld
inc
xchg
rcl
loope
mov
in
sbb
js
lret
xchg
pop
dec
ret
stos
movsl
das
insl
push
cmp
pop
stc
inc
gs
adc
mov
psraw
xchg
adcl
sbb
pushf
out
enter
in
add
xlat
sar
jle
lock
pop
mov
mov
shl
nop
mov
push
lods
or
mov
stos
dec
mov
test
testl
pusha
mov
mov
add
fnstenv
mov
loopne
xchg
push
jge
jmp
int3
lcall
push
cld
mov
or
push
mov
xchg
push
mov
mov
test
out
inc
push
xor
inc
ret
pop
icebp
call
jp
stos
lret
mov
xor
mov
shl
clc
push
sar
add
data16
dec
mov
inc
mov
pop
fisubrl
into
in
push
mov
pop
sbb
fsubs
xorb
out
cmpsl
jl
and
rorb
jecxz
cwtl
movsb
mov
or
inc
loope
pop
xchg
jnp
pop
rcl
cmc
out
lcall
lds
inc
or
mov
ja
stos
sbb
push
xchg
int3
xor
xchg
fsubs
scas
sub
das
add
jae
cmp
pop
sahf
xchg
or
nop
dec
add
jp
test
inc
jmp
incb
imul
xchg
shrb
aam
jmp
jns
mov
lcall
imul
jno
pushf
fmuls
add
dec
adc
out
dec
mov
sahf
into
mov
stc
pop
xchg
out
lahf
ret
lods
xchg
mov
sub
dec
mov
inc
frstor
sahf
jl
jb
je
lods
mov
jb
arpl
or
sahf
scas
add
stos
ror
push
andl
aad
sub
push
adc
or
movsb
mov
insb
or
je
loopne
stos
repz
xchg
roll
lock
push
imul
or
cmpsl
fisubrs
test
or
xchg
hlt
test
jp
daa
je
mov
mov
push
fnstenv
or
lret
push
pop
pop
test
pop
aad
inc
enter
pop
orl
mov
or
fldcw
pop
mov
repz
pop
push
ja
mov
jl
push
pop
iret
lea
mov
sbb
push
mov
inc
push
mov
sar
aaa
mov
lahf
xchg
pop
push
jbe
add
cmp
jmp
xlat
test
cmpsl
popa
nop
sbb
cmp
fs
xor
inc
and
arpl
jno
lds
inc
adcl
pop
pop
aam
shll
jge
inc
cmp
inc
adc
aaa
leave
pop
scas
sbb
les
popa
stos
orb
fdivrl
sarl
xchg
int
jnp
jbe
xor
loope
pop
shrl
xchg
rcrl
cmc
xchg
out
ds
ret
pop
jmp
loop
jp
mov
cmp
sbb
mov
xor
pusha
dec
fbld
bound
jns
xor
push
sub
cmc
fistps
hlt
aad
sti
aad
lock
sbb
push
jo
fisttps
adc
je
cli
pushf
fstpl
test
in
sarb
addr16
fisttpll
cmp
and
cmp
inc
mov
cmp
jl
mov
movsl
mov
mov
dec
stos
fisubrl
push
mov
dec
jmp
mov
in
push
and
or
fs
in
cmp
lcall
jo
inc
pop
dec
cwtl
pop
xchg
stc
mov
pop
in
mov
sbbl
and
xor
fnstsw
scas
dec
mov
sub
daa
sub
ja
fxch
and
daa
inc
in
adcb
shll
xchg
cmp
sti
ljmp
imul
stc
ret
pop
loop
js
cltd
orb
mov
adc
pop
js
leave
mov
imul
sub
loopne
mov
mov
or
sti
out
push
dec
jo
adc
out
cmp
inc
repnz
cld
dec
cmp
dec
loope
scas
sahf
pop
jb
mov
faddl
int
pop
lahf
push
dec
mov
dec
cmpsl
mov
push
xchg
mov
repnz
jb
arpl
nop
bts
sti
pusha
push
jle
out
mov
lahf
sub
les
push
in
mov
pop
inc
cmc
lret
xchg
pop
outsl
push
mov
mov
fdivs
mov
pop
mov
gs
xor
iret
das
mov
aam
mov
test
lret
sti
enter
adc
cmp
cmc
testb
repz
popf
or
les
inc
sbb
test
mov
add
aam
cmp
jae
bound
add
in
inc
push
jb
jmp
mov
inc
push
push
push
xchg
loop
fwait
sbb
jecxz
imul
xchg
lret
sub
mov
pop
stc
push
pop
pusha
movsb
lret
cmpsb
sub
xor
pop
or
push
jmp
enter
outsb
stos
stc
stc
and
in
sbb
rclb
cmp
cmpsl
fisttpll
push
mov
jp
xor
mov
cmpsl
iret
or
inc
int3
fimull
or
sahf
addr16
mov
jge
iret
inc
jecxz
jb
sti
leave
lcall
popa
add
ljmp
add
push
ja
hlt
test
sub
mov
pop
add
xor
push
int3
mov
iret
lock
pusha
mov
jl
pop
neg
cwtl
xchg
addb
lahf
rcl
push
sub
sub
jmp
inc
mov
inc
inc
xor
sbb
ret
mov
xor
jmp
hlt
sbb
fs
imul
add
data16
into
push
test
or
xor
push
fsubs
inc
gs
xor
les
out
jnp
push
jnp
jns
test
inc
sbb
and
test
aad
call
sbb
inc
outsl
dec
int
inc
test
dec
mov
add
outsl
out
mov
and
push
iret
fdivrs
inc
sbb
push
xchg
sbb
pop
rclb
jge
mov
push
mov
pop
mov
lods
push
rolb
mov
lret
sub
pop
sarb
lahf
hlt
cmp
inc
xchg
push
mov
addr16
gs
dec
popa
adc
push
lcall
inc
or
movb
out
pop
movsb
lcall
pushf
mov
aas
cmp
je
mov
out
cmp
inc
xorb
cmp
inc
imul
sbb
pusha
rcrb
cmp
push
adc
mov
adc
xchg
loope
mov
pushf
call
cltd
inc
lret
dec
xor
xchg
fcmovne
stos
lret
jmp
xorl
rol
rcrl
arpl
push
decl
in
hlt
inc
lods
nop
jnp
fisttpll
mov
pop
mov
jns
lods
test
mov
or
cmp
adc
pop
test
scas
data16
cli
in
pop
pop
jb
inc
stos
cmp
out
mov
aad
in
xchg
test
sarb
xor
loopne
test
inc
push
pop
inc
lldt
and
repz
push
inc
iret
lds
mov
mov
dec
mov
stc
inc
notl
cli
rcrb
repnz
fwait
adc
mov
xchg
adc
into
pop
sbb
rcrb
sti
xor
adc
mov
sti
testl
out
shrl
adc
rcll
pop
sbb
or
cmpsb
or
pop
pop
xchg
mov
cltd
jmp
mov
sub
mov
add
xorl
jnp
adc
fldl
dec
mov
sbb
jne
mov
or
rcrl
into
lea
call
cmpb
ja
or
mov
filds
shll
push
out
or
imul
mov
sub
and
je
popf
jle
imul
pop
mov
mov
je
daa
out
lahf
subl
jb
imul
mov
scas
in
mov
imul
push
jnp
mov
sahf
add
mov
sbb
xor
pop
mov
xor
js
arpl
lods
call
imul
aam
xchg
xchg
lahf
xchg
stos
and
inc
ds
insl
push
movsl
adc
adc
xchg
leave
rorl
fstl
jnp
movsb
sub
cmc
jnp
sahf
rcl
icebp
fmuls
inc
jno
dec
xchg
sub
inc
in
and
sub
sti
scas
aaa
mov
popf
out
lret
lods
insb
aaa
into
lret
out
movsb
adc
test
fs
mov
test
out
mov
jmp
in
icebp
in
pop
out
jb
push
mov
lods
bound
movsb
pop
lahf
xchg
mov
mov
push
fmull
push
jb
and
loopne
cmp
stc
sub
inc
adc
adc
pop
filds
mov
mov
sbb
into
jo
mov
push
fdivrp
in
int
jo
mov
xor
enter
push
lret
inc
ret
data16
sbb
sti
or
inc
out
int3
jae
mov
dec
pop
mov
adc
dec
rcl
cmp
jge
cmpsl
adc
push
and
cld
mov
pop
xchg
aaa
mov
add
push
adc
in
cli
fsubs
inc
push
pop
jmp
mov
repnz
cmpsb
mov
inc
mov
std
in
scas
push
xor
das
cltd
es
sbb
iret
test
mov
bound
pop
mov
pop
push
jge
sub
xchg
add
mov
jne
jo
and
insb
mov
mov
pop
mov
cmp
mov
je
out
dec
jg
ret
arpl
and
jb
and
sub
mov
fldt
pop
xchg
adc
xlat
inc
fwait
out
sub
out
push
dec
pcmpgtb
packuswb
mov
mov
popl
push
jg
test
imul
andl
aaa
mov
std
jo
xchg
cld
dec
in
add
dec
lock
daa
cmpsb
or
test
push
sahf
imull
clc
stc
and
xor
jge
inc
scas
jnp
pop
and
ret
imul
lcall
std
test
fnclex
test
xor
imull
mov
dec
jmp
aad
test
mov
xchg
ret
cmp
shlb
dec
xchg
lahf
mov
testb
fnstsw
pushf
cmp
fldt
je
daa
push
and
pop
or
dec
push
jge
push
pop
es
adc
fcoml
push
xor
xchg
and
mov
mov
xlat
xlat
mov
fsts
lods
lret
mov
add
add
dec
int
call
call
push
into
punpckhwd
xchg
or
pop
ljmp
adc
lea
jp
aam
scas
mov
lods
xor
fnstcw
jns
sbb
stos
shrl
or
mov
dec
push
iret
insb
lahf
xchg
inc
mov
and
push
out
popa
lahf
lret
mov
mov
pop
add
pop
push
inc
cmp
and
mov
and
ffree
sbbb
xor
or
mov
orb
in
das
cwtl
xor
sbb
ret
sub
or
leave
inc
and
inc
cld
push
dec
lret
das
and
imul
mov
fmull
dec
pop
adc
and
mov
xor
sbb
imul
cmp
or
shrl
mov
pusha
cwtl
cmp
addl
mov
stc
mov
mov
sbb
notb
dec
repnz
movsb
mov
push
cld
push
test
mov
push
stc
loopne
jb
add
xor
lods
sbb
sub
jns
leave
mov
jbe
jmp
icebp
jl
leave
jns
mov
mov
sub
xchg
or
push
mov
cmp
jae
out
popf
sahf
xor
movsb
inc
dec
cmpb
pop
lahf
pop
pop
ljmp
dec
mov
adc
daa
jge
scas
inc
mov
sub
sbb
jo
fldt
insb
push
jns
mov
sub
dec
or
in
push
add
push
cmp
jo
sbb
add
lea
jmp
mov
clc
mov
repz
push
sbb
js
ret
jb
cmpsb
xor
add
fwait
mov
inc
je,pt
and
pusha
stos
cmp
stc
add
inc
adc
mov
stos
rclb
inc
or
and
and
jb
aaa
mov
sub
fidivrl
iret
in
adc
pop
gs
sbb
dec
cltd
sub
dec
subb
sbb
inc
cwtl
iret
icebp
or
sti
mov
adc
inc
call
sbb
shr
ret
sub
or
mov
arpl
lcall
scas
ret
xor
jb
lret
sbb
inc
pusha
scas
inc
push
add
and
inc
fdivrp
inc
inc
iret
lds
jmp
cmp
filds
sub
mov
jo
sbb
js
das
lods
cmpsb
jo
mov
mov
lret
adc
sub
iret
lea
cmp
dec
out
push
fsubl
ds
test
pop
jp
or
adc
adc
cmp
push
das
dec
xor
stos
jne
lcall
lock
pop
psubw
cld
jmp
dec
xchg
sbb
inc
xor
dec
jp
lret
push
xorb
lahf
insb
popf
mov
ret
cld
mov
arpl
mov
cmp
shr
add
lahf
outsb
fcoms
pop
sub
sbb
lahf
arpl
and
into
jae
lret
mov
mov
cmpsl
sub
cmp
xchg
nop
bound
cmp
nop
mov
sbb
dec
cmovno
sbb
pop
fstl
jecxz
sub
imul
faddl
and
fs
dec
xor
filds
lea
and
gs
cmp
stc
repnz
sub
mov
jp
or
push
fsubr
shrl
ss
mov
sahf
jno
mov
jl
mov
stos
add
and
and
outsb
mov
jo
cmpsb
mov
mov
mov
adc
pushf
sarl
jmp
pop
mov
jl
stos
in
cmpsb
out
adc
sub
dec
xchg
mov
fs
enter
push
mov
in
aad
lods
andb
fdiv
out
lret
or
daa
pop
pop
ljmp
arpl
int3
jge
lret
fninit
std
mov
jb
dec
push
es
lods
out
or
js
test
pop
sbb
mov
fsubs
subb
jo
and
pop
dec
popf
or
aam
and
sbb
mov
jbe
xor
rcl
jle
push
fistpll
cmp
and
test
and
adc
and
shl
xor
push
add
movsl
loop
add
scas
iret
sub
xchg
mov
sub
mov
loope
push
ror
xchg
rol
cmc
mov
fsub
fcomp
and
dec
dec
add
jp
jg
out
lds
jns
loopne
xchg
add
or
pushf
jo
jle
add
mov
ja
fisubs
ret
cmpsl
fs
push
in
cld
xchg
xchg
popf
dec
mov
mov
and
xor
arpl
std
adc
cmp
in
loop
test
decb
in
lahf
lret
test
or
jge
mov
cltd
aaa
ret
cwtl
inc
cmpsl
popa
outsl
rcrb
cmc
sbb
mov
mov
inc
test
add
cmpsl
nop
das
in
es
add
jne
mov
xchg
mov
jns
shl
arpl
dec
cmp
sarb
fcmovnb
out
incb
adc
cltd
jno
repnz
pop
mov
xor
xor
stc
mov
xor
cld
je
ss
pop
push
pop
mov
loop
lea
loopne
mov
and
adc
mov
out
nop
xchg
cmpsl
push
es
aad
xchg
dec
inc
push
insl
lea
jno
jle
int3
adc
jmp
shlb
mov
push
dec
mov
lock
cli
and
shrb
cltd
jp
test
inc
mov
pop
add
loopne
pop
mov
inc
adc
add
fiaddl
add
loop
mov
repz
adc
dec
pop
pop
sub
clc
mov
dec
adc
orl
in
das
aad
sarb
popa
pop
aad
push
andl
or
loop
xchg
dec
xchg
fidivl
les
jle
xor
jns
les
bound
cmp
in
dec
in
mov
popa
mov
lahf
push
inc
inc
jge
inc
repz
sub
or
in
mov
outsb
pushf
movsl
inc
add
mov
push
cwtl
nop
mov
push
xchg
xchg
ja
loope
mov
xchg
out
ret
jle
fmul
push
mov
and
xchg
and
push
repnz
ret
pusha
and
adc
inc
lock
loopne
adc
and
push
repnz
ret
pusha
and
adc
inc
lock
loopne
adc
add
push
repnz
ret
pusha
and
adc
inc
lock
xchg
adc
and
push
repnz
lahf
sub
pop
cli
aas
mov
lret
jmp
jmp
mov
pop
imul
sbb
sub
cmp
lret
jmp
mov
ret
dec
dec
pop
pop
imul
sbb
sub
cmp
lret
jmp
mov
mov
add
pop
jbe
pop
inc
push
dec
xchg
mov
xchg
sti
inc
stos
adc
sub
mov
or
cmp
push
mov
push
jle
mov
mov
aas
fsubl
or
sarb
mov
cltd
lret
rcl
out
orl
dec
sbb
mov
sbb
or
fcos
add
lods
scas
sub
les
fwait
testb
in
and
ss
push
jbe
add
fwait
mov
xchg
add
pop
pop
out
jns
cmp
xor
es
sub
jb
dec
mov
and
mov
or
or
add
jmp
sti
mov
mov
pop
imul
sbb
sub
push
mov
lods
lcall
jmp
int
mov
pop
imul
sbb
push
jg
lods
scas
mov
sti
mov
rol
jmp
sub
or
imul
push
or
sbb
dec
push
lods
fsts
lds
mov
pop
imul
sbb
sub
cmp
lret
jmp
mov
mov
imul
sbb
sub
cmp
lret
cld
mov
push
cmp
fwait
je
and
stc
mov
inc
push
aad
cltd
stc
xchg
xor
and
lret
sub
pop
fs
out
ds
add
cwtl
mulb
or
test
xchg
xor
push
inc
sti
add
cli
out
adc
addl
bound
mov
test
xlat
test
inc
lods
jl
call
xchg
and
outsl
std
sbb
lods
in
call
inc
pop
push
mov
outsb
mov
mov
mov
dec
xchg
fdiv
popf
shl
jns
int
roll
adc
dec
pop
aaa
fisttps
fsubl
or
jns
push
sbb
adc
jno
xchg
add
add
movsl
pop
call
outsb
push
pop
leave
xlat
outsl
in
cltd
or
hlt
mov
lods
push
aas
xchg
xchg
lret
pop
push
pop
dec
push
lahf
pop
lods
pop
xchg
xlat
xchg
insb
movsb
push
sbb
sarl
jns
sti
cs
jge
ss
cmp
pop
dec
mov
or
lods
std
mov
int3
into
insl
cwtl
popf
lea
mov
shrl
mov
movsl
nop
cmpsb
jne
icebp
insb
mov
sbb
pop
mov
inc
es
xchg
jae
rol
pop
das
outsb
or
xchg
mov
js
popa
xor
and
sub
jo
cld
aas
or
xor
mov
dec
or
add
movsb
in
dec
cs
in
dec
xchg
xor
and
sbb
fmuls
and
xchg
xchg
and
testl
push
jno
adc
int
jecxz
adc
and
mov
rorb
adc
xchg
out
repz
cmp
rol
pushf
pop
adc
rcr
push
cmpsb
mov
ljmp
xchg
test
dec
pop
mov
xchg
js
loopne
std
mov
sbb
shl
int
xchg
outsb
mov
jge
and
roll
mov
lods
loope
stos
xor
xlat
outsl
arpl
leave
popf
mov
insb
inc
data16
pushf
push
mov
js
fs
insl
daa
aam
fs
xchg
add
xchg
xchg
lahf
fwait
mov
pop
loope
clc
push
xor
xchg
les
daa
push
cltd
les
or
xor
sub
cmpb
data16
dec
imul
cmp
daa
cmpsl
dec
jmp
andb
cld
sbb
sub
in
push
push
insl
cmp
inc
dec
cltd
jle
jbe
mov
xchg
sbb
xchg
stos
cltd
mov
push
insl
fsubr
push
stc
iret
sti
scas
or
push
fidivl
out
std
mov
mov
outsb
jmp
jno
stc
aas
jecxz
sbb
mov
inc
dec
scas
pop
fsts
in
out
dec
jp
aas
call
inc
aad
inc
add
ljmp
fcmovnbe
inc
imul
mov
mov
jge
pop
pop
out
xchg
sti
insb
mov
sub
or
icebp
sbb
in
lods
mov
dec
std
mov
cmp
fdivrs
out
mov
ficoms
leave
imul
icebp
fildl
cmp
push
xorb
or
push
sub
int3
cmp
in
rclb
mov
or
hlt
mov
and
stos
jne
test
std
and
cltd
std
cmc
inc
mov
hlt
cmpsl
xchg
sbb
dec
test
dec
out
lock
jg
mov
repz
mov
aam
lea
jmp
and
pop
fnstcw
dec
fstps
push
int
js
pushf
mov
mov
jnp
divl
and
addl
or
xor
jg
mov
cmc
mov
lods
sub
mov
scas
xor
out
mov
or
insb
mov
stos
xchg
dec
push
movsb
loope
imul
cmpsb
scas
iret
out
and
cltd
cwtl
sub
imul
cmp
inc
addr16
jbe
mov
imul
xchg
int
inc
in
jo
cmc
mov
das
popf
jbe
or
js
movsb
and
jge
or
insl
fwait
adc
in
jmp
div
push
js,pn
rcrb
pop
push
lret
and
stc
lret
insl
movsl
lcall
jns
cmp
sub
adc
cmp
mov
or
repnz
fildll
pop
in
push
and
aad
pop
insl
out
lret
enter
push
xchg
inc
mov
fidivrs
movsl
aad
daa
jne
insb
mov
inc
mov
add
push
xor
cwtl
arpl
pushf
jge
ja
popa
idivl
data16
lret
dec
imul
cmp
mov
test
jmp
xchg
push
enter
or
inc
adc
jecxz
dec
dec
mov
adc
lods
or
mov
cmpsb
cwtl
cmpl
jecxz
lahf
inc
or
stos
xchg
imul
ret
pop
cltd
test
adc
lods
std
pop
jl
bound
icebp
jmp
push
jecxz
sub
es
push
in
jge
call
js
test
lock
xor
loope
ja
dec
stos
pushf
adc
aad
push
push
sbb
cwtl
xchg
lahf
mov
aaa
sub
xchg
inc
hlt
je
outsl
cmp
xchg
hlt
fdivrl
cmp
sbb
mov
pushf
jl
sbb
push
das
jl
movsl
pop
dec
mov
jl
ds
sub
xlat
nop
fldt
roll
dec
arpl
mov
cmp
add
rcll
pop
xor
jl
mov
dec
or
mov
test
mov
gs
mov
pop
mov
or
enter
or
or
rcrl
push
stos
jmp
mov
outsb
xchg
jne
rol
and
aaa
jecxz
fisttps
js
jb
jl
out
add
stc
inc
lcall
sub
xor
addr16
psrad
sbb
insb
icebp
cmp
inc
pop
sbb
dec
arpl
arpl
aas
ss
cmp
push
js
outsb
jp
pop
mov
outsl
loopne
in
push
out
or
je
aam
mov
test
imul
imul
rcrb
test
scas
sti
bound
sbb
shlb
inc
add
arpl
inc
decb
ljmp
imul
pop
out
mov
inc
pop
mov
pusha
or
sbbb
or
dec
mov
outsl
mov
repz
icebp
lds
cltd
mov
push
xor
add
mov
call
pop
testb
push
ret
repnz
loopne
jl
push
and
lods
sbb
fwait
or
and
xchg
lds
cmp
je
je
mov
out
pop
xchg
cmp
loopne
pop
xor
pop
cltd
inc
xchg
leave
rcr
scas
mov
out
xor
cltd
cmpsb
int3
mov
pop
push
add
fs
or
mov
lods
push
pop
jecxz
and
scas
mov
jmp
mov
add
cmc
filds
dec
xchg
dec
adc
lock
out
ret
and
cmp
mov
mov
xor
mov
or
cmp
push
lock
aas
outsb
test
mov
cmc
jge
jo
dec
orb
sbb
lds
and
lahf
mov
ret
lahf
jp
xchg
popf
jo
iret
fbld
xor
je
jge
cmp
or
push
inc
repnz
addb
sub
adc
lret
mov
in
imul
pop
hlt
fdivr
pushf
insl
repnz
test
xor
and
mov
inc
lea
mov
inc
jb
pop
in
add
hlt
mov
xor
and
mov
dec
adc
jg
cmp
mov
jae
movsl
rcrb
cmc
inc
sub
lcall
adc
pop
cmp
push
jecxz
iret
sbb
in
jl
jg
sti
dec
and
fs
xchg
sbb
pop
int3
daa
dec
inc
push
aad
jnp
pop
push
aaa
pop
ret
sub
inc
aaa
adc
pop
sub
and
ret
in
adc
insb
mov
decb
mov
lcall
and
std
imul
inc
lret
ret
rcrl
add
movsl
dec
rclb
inc
ret
xor
jecxz
or
push
push
arpl
loope
addr16
xor
inc
ja
and
orb
add
enter
andb
shl
stos
fs
repnz
loopne
sbb
cmp
ret
dec
xor
lock
out
cli
pop
lahf
inc
lods
push
sbb
xor
lods
jp
and
mov
xor
sbb
repz
fwait
cld
push
or
sub
xchg
sub
mov
xor
nop
dec
xchg
jo
pop
dec
xor
adc
int
adcl
addb
ss
add
mov
ss
xchg
pop
jp
pop
int
or
dec
rorl
test
arpl
iret
add
mov
mov
fildll
outsb
out
mov
push
imul
adc
outsl
aam
repnz
push
aas
outsb
jmp
fdivrl
test
cmp
fsubrl
fdivl
adc
ss
pop
jnp
dec
cmp
or
inc
jo
in
insb
sub
push
adc
jecxz
dec
cld
inc
sub
lods
mov
pushf
inc
daa
adc
cmp
loop
dec
aas
dec
inc
xchg
int
sub
jnp
sar
sbb
sub
clc
enter
add
cmp
mov
fs
aas
es
or
cmc
xchg
stc
xor
xor
xorb
movsl
mov
dec
add
shrb
jle
or
jnp
mov
pop
fs
mov
push
sub
faddp
clc
bound
cmp
cwtl
mov
jns
div
std
flds
mov
jbe
pop
push
push
test
mov
insl
repnz
imul
pop
imul
out
jp
filds
jbe
xor
pop
sub
jno
mov
mov
sahf
push
pop
aas
pop
stos
jmp
fnsave
filds
xchg
scas
inc
pop
xor
movsl
mov
mov
mov
mov
cltd
stc
nop
dec
mov
mov
cmp
jmp
jge
call
ljmp
sbb
add
lods
sub
mov
repnz
xlat
outsl
sbb
mov
jle
std
jns
pop
mov
aad
mov
inc
imul
sub
gs
inc
cltd
aad
xlat
imul
pop
test
iret
lret
dec
mov
sub
jecxz
pop
in
dec
lahf
cmpl
push
in
xlat
xchg
out
out
jne
jbe
mov
addr16
add
pop
lock
mov
push
xchg
es
pop
mov
sbb
xchg
cmp
jle
sub
cmp
pop
push
clc
loopne
in
and
jp
dec
jns
test
cli
adc
iret
sahf
data16
stos
add
mov
popf
pushf
sub
push
scas
inc
jge
call
sti
lods
test
push
sub
jecxz
cmpsl
xchg
sbb
inc
add
bound
cmp
cmp
subb
dec
cmp
addr16
mov
inc
mov
jnp
and
jcxz
lcall
call
dec
adc
jns
xor
aam
mov
into
fsubrs
jns
pusha
arpl
and
out
scas
add
sbb
xchg
call
out
stc
pop
push
fs
fnsave
in
or
xlat
icebp
outsb
adc
push
imul
out
in
pushf
dec
adc
cli
sbb
lahf
dec
jmp
and
or
mov
dec
aam
iret
dec
std
adc
pop
dec
aam
mov
outsb
dec
call
popa
je
cmp
bnd
push
aad
xor
rcl
cmp
cmp
jno
incb
pop
out
or
cmp
jecxz
push
mov
mov
mov
arpl
jne
mov
dec
push
mov
cmp
or
mov
sub
mov
mov
push
push
das
mov
pop
into
lods
mov
ror
bound
filds
cld
xor
jl
data16
adcl
mov
das
jecxz
dec
iret
jne
xchg
cmp
sahf
cmp
shlb
xchg
pop
jle
hlt
xcrypt-ecb
cmpsl
mov
fs
mov
fsubrs
adc
cmp
push
gs
inc
pop
cltd
cmp
mov
rolb
in
sbb
mov
adc
lcall
xchg
out
sub
dec
int3
add
jnp
inc
xchg
dec
sub
sub
xor
daa
jns
jno
stos
cmp
in
into
repz
faddl
notl
loop
jnp
ret
mov
stc
xchg
sbb
and
cmp
aam
ret
push
xchg
cmc
inc
mov
adc
stos
push
jg
test
adc
cld
mov
insb
cmp
mov
arpl
add
fiadds
or
hlt
adc
sub
jg
and
imul
pop
add
cmp
add
push
jle
and
mov
iret
mov
cmc
clc
mov
push
lea
add
ja
push
out
call
mov
inc
shll
or
mov
lods
js
lods
push
lahf
rcr
jb
imul
cmp
push
and
lds
jnp
jno
adc
jns
mov
add
jbe
lcall
add
lods
pop
loop
inc
mov
jge
incl
scas
mov
outsb
in
fstpl
push
in
inc
out
mov
add
inc
push
std
paddusw
pop
rorl
ljmp
xchg
xchg
out
stc
mov
lret
hlt
inc
ljmp
cmp
out
jecxz
jle
ljmp
pusha
mov
in
sub
dec
cltd
sahf
mov
sub
dec
cmp
jge
xor
dec
dec
cmp
hlt
cmc
ja
xchg
jmp
or
jle
mov
adc
fistpl
in
adc
cmp
push
into
mov
lret
adc
inc
mov
lds
mov
lret
or
xchg
dec
ja
sub
xlat
cmc
imul
loop
dec
mov
cmp
jg
pop
cmc
in
sahf
xchg
or
jbe
mov
testl
and
mov
xor
enter
lods
sbb
data16
lcall
xor
dec
jnp
mov
ret
dec
adc
xor
jnp
wrmsr
ret
xor
scas
xor
out
in
sbbb
or
repnz
loop
iret
cmpsl
xor
dec
rcrl
or
je
adc
xchg
cmpsl
xchg
cmp
aad
lahf
push
sbb
xchg
mov
mov
or
jle
iret
loop
daa
fimuls
mov
pop
jg
dec
dec
stos
xor
gs
push
mov
aad
fisubl
gs
loop
movb
push
mov
ss
add
mov
xorb
std
sbb
push
cli
fcomps
inc
add
call
inc
sbb
scas
cltd
dec
inc
cmpsb
and
out
adc
sub
es
add
cwtl
sub
and
fdivrp
add
adc
inc
mov
xor
outsl
xor
popa
out
je
push
push
jl
popf
cs
push
enter
cmp
in
and
inc
pushf
int3
adc
rcrb
mov
jle
mov
stc
cmpsl
bound
dec
adc
mov
cmpsl
outsl
orl
sub
bnd
push
scas
insb
xchg
sbb
or
cld
popa
aaa
pop
mov
fucomip
xchg
push
dec
mov
es
sahf
cmp
sub
dec
xchg
cmp
adc
nop
stc
mov
movb
xchg
popf
sbb
adc
mov
loopne
rorl
in
enter
daa
mov
in
inc
testl
movsb
mov
test
imul
jmp
idivb
fcomps
cmp
movsl
adcl
int3
sbbl
adc
jg
mov
stos
sub
or
lret
add
jo
out
pop
fcomi
scas
cld
shll
shlb
or
xor
shl
push
lahf
rcll
pop
dec
mov
cmp
xchg
test
fcoms
push
and
popf
mov
jmp
xchg
inc
ss
out
lret
pop
inc
iret
sub
outsb
loope
in
dec
jne
nop
and
pop
arpl
lcall
mov
jecxz
mov
push
xorb
mov
int
repnz
jp
into
es
cmp
js
test
stos
mov
push
xor
mov
cwtl
jne
fs
jno
loopne
lods
call
cltd
mov
call
mov
push
mov
cmpsb
mov
lds
mov
enter
pop
in
lock
loop
pop
aaa
lret
jle
mov
jns
or
mov
jmp
and
or
adc
jmp
stos
and
adc
push
dec
mov
fs
mov
dec
dec
nop
pop
dec
mov
push
inc
dec
or
xchg
adc
sbb
pop
ficompl
pop
repnz
repz
mov
sbb
mov
xchg
and
add
push
scas
mov
mov
mov
and
mov
imul
stc
inc
ret
add
stc
fidivrs
mov
mov
or
xor
mov
jle
into
repnz
test
sahf
lock
jecxz
int
scas
ljmp
flds
dec
popa
pop
outsl
rol
lret
inc
xchg
fsubs
aam
clc
test
cmpsb
lahf
pop
inc
mov
xchg
sub
xchg
sbb
mov
jbe
mov
cmp
cmc
ret
add
add
and
adc
shlb
xor
jecxz
jns
xor
stos
add
jge
pop
dec
mov
push
js
dec
xchg
lods
insb
cltd
mov
es
stos
lret
mov
test
xlat
movsb
leave
mov
loopne
lcall
sbb
js
sahf
cmp
insl
in
repz
bound
mov
xchg
mov
sub
out
push
pop
pop
and
xorl
mov
data16
daa
xor
pop
xor
cmpsb
cmp
test
out
inc
fs
into
inc
or
pusha
shl
push
pop
enter
mov
jmp
cmp
mov
cmp
aaa
xchg
or
add
push
ds
jge
mov
mov
ds
jp
ljmp
pop
cmpb
jae
sbb
clc
inc
mov
imul
xor
fildl
mov
arpl
mov
stos
popa
adc
ret
push
enter
adc
fisubl
pop
daa
pop
mov
jle
mov
pop
arpl
out
jmp
adc
mov
lret
mov
inc
nopl
and
jg
cmp
lret
scas
add
ja
lea
jb
mov
inc
les
sbb
je
and
sub
cmpsl
aad
test
rcrl
xor
jg
xchg
mov
or
pop
jge
popa
sarb
ja
mov
mov
and
pop
repnz
ficoml
mov
and
leave
adc
xchg
daa
fistps
cltd
sub
sub
push
xor
into
xor
mov
bnd
mov
int3
imul
aas
pop
sub
decb
add
jmp
cmpsb
aam
cmpsl
stc
mov
xorb
cmp
push
inc
out
push
stos
inc
pop
cmp
sub
lcall
jae
pop
not
lods
pop
in
inc
in
sti
and
cmpl
sbb
shlb
test
dec
pop
add
shrl
jnp
daa
inc
mov
inc
je
leave
sub
cld
imul
orl
iret
addr16
xchg
pop
adc
jb
dec
iret
sar
aad
mov
and
jns
iret
pop
out
ss
nop
mov
mov
inc
push
xor
lock
mov
push
daa
sbb
les
addb
sbb
lods
sub
lret
sbb
add
loopne
sub
pop
sbb
mov
mov
dec
jo
jbe
aam
inc
dec
push
sarl
in
sbb
push
push
or
and
loop
mov
stos
cmp
xchg
sbb
mov
fmulp
push
jns
pop
xor
pop
and
insb
fwait
adc
sbb
mov
lret
dec
cmp
mov
sbb
in
cmp
call
push
in
dec
xlat
out
sahf
pop
inc
inc
les
inc
insb
test
inc
cmp
ret
sbbl
push
jmp
ret
add
ret
xchg
fdivs
in
xor
ror
inc
shl
iret
sbb
and
push
push
sub
popa
dec
pop
cmp
push
lret
mov
js
sbb
inc
daa
hlt
mov
cmc
mov
jle
xor
sbb
sub
call
mov
mov
imul
sbb
sub
cmp
lret
jmp
mov
mov
imul
sbb
sub
cmp
lret
pop
fldt
stc
sti
or
cmp
imul
sbb
sub
cmp
lret
jmp
mov
mov
ret
imul
subl
aam
les
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sbb
sub
mov
xlat
sub
js
mov
gs
mov
xor
or
sbb
sub
cmp
push
push
mov
add
test
clc
fcompl
in
cmp
mov
pop
push
jbe
cmp
or
mov
pushf
clc
lods
or
insl
jg
shll
mov
in
push
clc
or
lods
add
inc
subl
popf
jb
test
sub
cmp
lods
jl
cltd
rorb
and
or
sbb
inc
sbb
pusha
cs
jne
adc
clc
xor
and
enter
cmp
cmpb
xor
mov
into
ja
enter
inc
cli
leave
adc
stos
xchg
sbb
adc
sbb
inc
fistl
mov
and
movsl
mov
seta
push
sub
lock
mov
and
or
call
xchg
dec
test
mov
clc
pop
push
dec
pop
jge
insb
lock
call
mov
subb
idivb
aaa
call
into
cmp
push
fcoml
roll
test
mov
mov
sbb
movsl
push
out
push
in
xor
gs
filds
mov
mov
js
pop
int
xchg
pop
movsl
push
push
cwtl
gs
mov
and
or
sbb
sub
cmp
push
push
cwtl
gs
mov
and
or
iret
pop
mov
jnp
ss
fs
adc
adc
stos
inc
enter
out
andl
pop
arpl
fnstenv
lahf
dec
addr16
cmp
out
sbb
sub
dec
mov
adc
jnp
inc
xor
cmc
lock
fsubl
pop
popf
inc
nop
mov
icebp
push
notl
stos
push
movsl
lea
shlb
jne
xor
jno
xor
pushf
arpl
rcll
lahf
pop
mov
push
cli
xchg
xor
jge
scas
xchg
push
lods
sti
aam
push
xchg
mov
out
jns
lods
push
enter
xchg
std
inc
repz
and
cmp
loope
xchg
push
out
inc
inc
add
dec
dec
mov
mov
or
cld
lods
dec
mov
lret
imul
sahf
dec
adc
es
lea
xchg
jp
adcl
jecxz
and
mov
mov
push
pop
add
cmp
test
pop
cmc
inc
xchg
lahf
and
ficompl
push
popa
cmc
aaa
cmp
push
out
aam
pusha
xchg
into
cs
pop
adc
cmpsl
or
mov
cld
insl
stos
mov
mov
pop
mov
ja
jns
daa
cld
xchg
ja
in
push
pushl
xor
jnp
ret
mov
jl
sbb
fsubr
fdivr
jno
dec
rcll
cmp
mov
incb
mov
dec
xor
dec
imul
leave
out
movsb
sbb
rolb
dec
push
mov
xor
insb
ret
cli
cmp
mov
cmpb
dec
xlat
pop
inc
fcmovu
mov
mov
jo
xor
xor
sub
mov
xor
pop
jp
int3
leave
clc
movsb
sbb
scas
filds
addr16
add
ds
xchg
hlt
arpl
and
sub
addb
imul
push
push
pop
pop
scas
or
mov
mov
pop
pop
in
jmp
mov
imul
imul
fs
xor
push
inc
lods
fildl
loop
je
stos
xchg
jge
adc
mov
sub
fistpll
lret
dec
sub
cmp
test
inc
shll
cmp
and
rolb
scas
ja
sub
in
scas
stos
sahf
out
jae
push
fxch
mov
loop
push
push
insl
add
jmp
rcr
xchg
repnz
daa
das
pop
adc
stc
test
ret
sbb
jecxz
or
arpl
push
imul
mov
adc
jnp
arpl
popa
loop
roll
bound
add
cmpsl
xlat
adc
sbb
rcll
push
dec
and
push
sub
push
cli
push
rorl
and
decl
add
bound
les
scas
inc
lcall
sub
xor
adc
mov
xor
scas
sub
inc
sbb
cltd
inc
push
cmpsb
es
leave
je
xchg
pop
push
pop
xlat
pop
andl
out
mov
xchg
subl
jecxz
ret
and
in
inc
jno
mov
setns
mov
mov
imul
ds
movsl
cmp
aam
adc
int
sbb
jecxz
stos
push
xor
xchg
gs
enter
fisubl
call
in
pop
mov
popa
rclb
int
dec
cmp
xchg
iret
mov
imul
mov
sahf
jle
pop
rol
mov
cltd
aaa
mov
int
orl
inc
shlb
xchg
or
or
fstl
mov
adc
mov
sti
dec
fnstcw
sti
and
jnp
ja
data16
inc
das
inc
es
dec
sar
scas
sub
sbb
mov
lds
mov
leave
xchg
jnp
or
jmp
sahf
jge
pop
or
sbb
mov
sub
iret
pop
hlt
insb
jb
stos
cmc
aas
xchg
and
mull
repnz
mov
js
sub
xor
adc
pushf
callw
sbb
cld
or
push
in
adc
bnd
ss
xchg
fisttpll
xor
test
mov
pop
je
cltd
daa
ret
xor
clc
inc
dec
sub
jbe
cltd
stos
cmp
sar
je
ss
loopne
fldl
dec
pop
mov
ss
cmp
push
add
cmp
pushf
pop
aaa
adc
idivl
mov
in
stos
mov
jp
push
push
lds
jnp
pop
in
dec
xchg
jno
shlb
cmp
test
cmp
dec
cld
repz
or
jmp
bound
xchg
cmp
cmc
ljmp
fs
cmpsl
lahf
sarb
out
and
mov
shl
or
pushf
aam
dec
pop
dec
dec
pop
and
ljmp
aam
daa
push
ret
insl
fs
int
sbb
push
das
jbe
xlat
push
in
fisttpl
mov
in
jne
push
das
cli
inc
push
aas
or
sarl
dec
jno
pop
loopne
push
int
mov
shlb
lcall
sbb
test
push
lods
mov
add
push
xchg
add
iret
cmp
pop
testl
out
ss
mov
sbb
data16
sub
pop
xor
jge
inc
in
sbb
loop
mov
dec
outsl
jmp
xor
push
mov
insb
sub
push
enter
inc
test
outsb
scas
sbb
pop
daa
sub
out
jcxz
mov
xor
stc
mov
add
and
mov
loope
je
adc
jl
mov
mov
or
cmp
and
or
loop
roll
dec
dec
insb
iret
in
sub
lock
pushf
jae
dec
sbb
fsubrs
or
faddp
or
mov
fsubrl
jge
sarb
scas
sbb
push
dec
out
adc
xchg
out
ds
iret
aas
mov
movsl
loope
jecxz
lds
lds
sub
mov
sbb
in
lahf
and
cmp
nop
and
hlt
repz
cld
xor
adc
hlt
sbb
xchg
mov
test
sub
mov
outsl
and
cwtl
adc
fadds
jmp
jmp
clc
cmpsl
leave
mov
mov
popa
out
enter
dec
inc
std
add
lret
dec
mov
xor
inc
push
mov
clc
mov
out
int3
outsb
aaa
cmp
mov
sbb
push
fcmovu
or
sbb
test
imul
repnz
call
shrl
stos
das
push
inc
stos
adc
xchg
or
jne
push
inc
mov
xchg
jo
gs
cmp
sahf
lea
lahf
adc
or
scas
jmp
cmp
dec
out
push
sub
mov
cmp
xor
enter
aam
bswap
daa
xchg
mov
leave
or
mov
shlb
pop
orb
cmp
and
cltd
scas
rcll
add
add
in
or
cmpsl
cmp
cmp
mov
inc
inc
mov
loope
repnz
add
outsb
shll
outsb
ficompl
inc
sti
and
lcall
int
pop
add
popf
enter
mov
inc
imul
add
mov
mov
xchg
dec
ljmp
xchg
fisubs
test
mov
test
adc
fsubr
cli
mov
and
inc
xor
push
lret
push
data16
test
scas
xchg
mull
out
fidivl
pop
mov
xor
push
gs
incb
iret
lock
xor
adc
fisttps
cmpsb
addr16
data16
inc
xchg
dec
mov
arpl
das
or
jno
inc
jbe
in
push
test
or
xchg
sbb
mov
cld
pop
in
inc
mov
js
jno,pn
std
cwtl
out
pop
mov
mov
jns
imul
dec
es
into
popl
scas
ret
hlt
std
push
push
mov
das
fbld
or
cs
pop
jmp
or
lret
sbb
int
clc
rorb
loopne
iret
les
pop
mov
inc
mov
js
push
push
mov
adc
lret
cmpl
jo
lea
jp
push
jmp
lcall
mov
shlb
jp
sbb
xchg
les
nop
ret
mov
mov
fisubrs
je
mov
je
adc
sub
sbb
cmp
imul
mov
pop
and
sub
inc
adc
xchg
push
sbb
dec
ds
lret
filds
loope
xchg
stos
ret
pop
repz
add
ljmp
sub
pop
mov
cli
jp
adc
sub
jle
pop
in
scas
rorb
dec
loope
adc
jnp
rcll
sbb
sbb
inc
or
iret
inc
push
jmp
inc
pop
loop
mov
mov
mov
pusha
xor
xor
mov
loope
popf
in
pop
mov
and
aam
cmpsl
cmp
dec
pop
lret
leave
out
jle
adc
and
je
stos
lahf
jns
lods
dec
jno
fwait
arpl
mov
fdiv
movsb
fistps
movsl
xchg
or
mov
push
popa
inc
ds
push
cld
movsl
rcll
dec
int3
outsb
scas
fildll
xor
fidivrl
xlat
mov
scas
or
and
add
std
lods
mov
cmp
sti
into
xlat
sqrtps
add
add
xchg
pop
jns
aas
mov
idiv
and
test
ss
aad
lcall
mov
cmp
or
pop
cs
out
test
adc
ret
push
nop
adc
scas
inc
dec
and
mov
xor
cltd
pop
aaa
shl
arpl
pop
xrelease
shr
push
lods
es
mov
push
sub
fwait
mov
insl
mov
cmp
push
call
adc
mov
xchg
xor
rcrl
icebp
insl
in
or
jno
mov
lods
add
add
mov
pop
mov
andb
jp
pop
rcl
je
sub
push
into
daa
les
out
sub
nop
xchg
xor
push
insl
jge
pop
js
or
adc
int
inc
mov
cmc
jb
cmp
loopne
dec
mov
cwtl
std
int
jmp
inc
jb
xor
mov
in
test
imul
adc
cld
stos
and
insl
cmp
jae
add
outsl
mov
out
cmp
adc
pop
cmp
int3
push
xchg
popa
lods
jge
shrb
cmp
or
movsl
xchg
jge
jmp
fcmovu
inc
and
ljmp
adc
cs
loope
out
in
sub
or
mov
cltd
push
add
or
test
sti
sbb
test
dec
sbb
andl
gs
testl
aas
movlps
les
into
inc
clc
enter
mov
lods
mov
xchg
push
hlt
push
int3
cwtl
movsl
aad
or
jns
or
icebp
inc
xor
dec
jmp
push
lods
mov
push
aaa
ret
shl
dec
js
mov
inc
mov
adc
xor
jae
mov
lods
sbb
enter
jo
sbb
push
mov
pushf
cmp
ljmp
jae
mov
sub
and
ja
inc
xchg
adcl
mov
jp
jb
mov
lds
cmp
addr16
test
or
inc
jge
loop
outsl
xchg
mov
enter
push
pop
aaa
adc
out
or
xchg
bound
mov
icebp
ljmp
mov
push
inc
mov
cmpsb
mov
mov
jbe
sub
insl
push
jg
mov
cmp
aam
imul
in
push
inc
or
or
adc
sahf
rcrl
outsb
out
push
nop
pop
lret
mov
push
and
sbb
out
adc
es
dec
daa
mov
sub
pop
ret
cmp
xchg
test
mov
pop
cmpsw
ss
insl
sbb
in
hlt
adcb
dec
int
mov
pop
pop
sub
fisubrs
pop
sbb
pop
sbb
jecxz
or
dec
ja
mov
add
push
push
int3
or
push
push
mov
pop
dec
xor
outsl
ss
inc
lret
jae
sub
xor
repz
cmp
decb
daa
mov
leave
mov
pushf
inc
mov
push
hlt
inc
or
push
inc
jmp
aam
cmpsl
xlat
sbb
xchg
pop
in
mov
ret
cmc
sub
mov
push
xlat
adc
ja
in
je
cs
outsl
mov
lcall
cmp
aam
push
cmp
pusha
in
add
icebp
add
in
pop
loopne
stos
xchg
icebp
and
out
aam
xbegin
pusha
jmp
aaa
out
popa
daa
add
sub
adc
xor
xchg
lods
ljmp
jb
scas
loop
mov
or
lods
add
ret
add
ja
lahf
sub
push
stc
stos
inc
lea
mov
out
jne
ja
jg
dec
ds
adc
dec
iret
les
aam
lods
jo
jmp
out
leave
dec
fwait
jbe
mov
push
insb
and
icebp
jl
fbld
adc
out
fldcw
rcl
xor
lea
jne
or
lods
cs
pop
push
into
mov
test
in
inc
dec
pop
xchg
mov
sub
enter
push
flds
jae
jno
cmc
je
decb
xor
inc
or
negl
xlat
mov
ss
mov
add
mov
scas
dec
adc
jmp
repz
pop
data16
das
ficomps
das
into
mov
and
and
dec
lret
sub
loopne
les
inc
push
in
cmpsl
xor
ret
mov
stos
fcmovnb
mov
mov
and
mov
ss
out
cmp
jp
rorb
xchg
adcb
push
mov
jg,pt
dec
or
mov
neg
xlat
icebp
aaa
ret
mov
mov
dec
and
hlt
push
jmp
lret
mov
popa
sbb
and
aam
xchg
push
cld
ss
add
and
sub
jb,pn
mov
add
cltd
insl
out
fstp
sbb
xchg
adc
push
and
adc
jg
mov
cmpsl
mov
fistpl
fdivrs
data16
ret
in
mov
dec
cltd
in
pop
add
xchg
fbld
or
xchg
mov
in
and
cmp
push
add
negl
test
lahf
hlt
pop
fimull
imul
je
out
sarl
push
test
jg
push
and
jnp
jge
fadds
xor
aas
inc
mov
or
cmp
rol
movsl
jo
sbb
xchg
stos
in
mov
and
pop
daa
shlb
movsb
test
cli
and
jns
pop
outsb
jge
in
push
push
mov
dec
cld
push
adc
out
xor
movsl
ja
inc
adc
adc
insb
xchg
sub
push
fcmovnu
xor
pop
xchg
outsb
negl
lret
pop
aaa
jnp
ja
loope
scas
push
inc
jl
jnp
inc
sub
shrb
push
inc
sub
rclb
insb
fidivrl
orl
dec
addb
sahf
pop
mov
or
mov
sbb
and
pop
rsm
movsl
add
pop
sbb
jmp
cltd
mov
cmp
adc
mov
mov
mov
jmp
mov
shlb
xor
dec
sbb
test
sar
cmp
pusha
repz
pop
fsts
dec
lea
into
das
mov
jne
ss
repz
notl
jne
xchg
call
dec
jb
jle
stc
xchg
into
jmp
gs
jmp
scas
inc
pop
xor
dec
popa
hlt
test
addl
jg
or
inc
lock
xchg
and
sbb
xor
push
adcb
push
int
push
mov
cmp
insl
icebp
arpl
xor
leave
dec
mov
pop
cmp
test
push
sahf
sub
cmpsb
aaa
fstpt
add
into
xchg
into
mov
outsb
push
pop
mov
pop
outsb
adc
mov
js
mov
jbe
xor
sahf
mov
repnz
fmuls
mov
dec
push
mov
shl
insb
ficompl
lods
xchg
cmp
mov
into
dec
jo
lds
mov
out
enter
or
ljmp
inc
fcmovne
test
ss
push
clc
test
cmc
not
outsl
ja
push
push
divb
sub
aas
push
sbb
dec
ss
sbb
xchg
repnz
jl
inc
dec
ss
and
jecxz
inc
aad
jle
scas
in
mov
movsb
ds
cltd
dec
aam
ret
cmp
inc
sbb
mov
mov
cwtl
cmp
andl
ret
xchg
pop
sub
xor
sbb
jns
sbb
int
cmp
sub
dec
fucom
sti
mov
test
lret
fidivrs
mov
mov
pop
and
inc
aad
lea
je
mov
mov
xor
pusha
rorl
out
repnz
dec
jge
loopne
sahf
dec
fistpll
and
adc
push
sbb
loope,pt
inc
std
mov
jns
dec
inc
call
mov
xchg
push
fucomip
je
adc
in
adc
insb
pushf
and
cwtl
xchg
cmp
test
dec
dec
aas
cmp
sbb
ja
lcall
add
lcall
inc
mov
pop
bound
sub
jge
mov
push
push
sub
dec
out
mov
jmp
inc
imul
insb
filds
jmp
test
scas
pop
das
jp
hlt
xchg
cltd
cmpsb
dec
ret
scas
inc
fbld
sbb
push
aaa
mov
sub
fimull
inc
xlat
mov
in
je
aaa
and
or
test
pop
mov
lret
clc
cmp
pop
ret
shll
cs
sub
add
imul
jae
outsl
xor
shlb
jae
loopne
out
push
mov
add
test
cmp
push
clc
pop
fiadds
mov
enter
and
xor
test
idivl
and
pop
mov
inc
and
jae
and
popf
cli
add
pop
sub
pop
fucomi
out
fistpl
push
and
imul
scas
insl
inc
mov
ja
xchg
daa
dec
add
push
jle
outsl
jb
push
mov
outsb
mov
lods
mov
inc
adc
push
add
fisubs
pop
jns
mov
ss
pop
mov
rcll
scas
adcl
jg
inc
outsb
xchg
adc
xor
dec
call
adc
mov
push
test
sarb
push
bound
out
push
inc
jns
addr16
mov
mov
xchg
xlat
aaa
fsubs
dec
out
jb
test
js
cmp
and
xchg
pop
arpl
ficomps
cmp
jbe
push
enter
sbb
mov
or
inc
jge
and
jbe
ds
adc
pop
pop
jnp
dec
jle
sbbl
pusha
xor
pop
dec
les
or
lods
lods
mov
movsb
pop
add
es
push
xor
mov
cmpsl
mov
xor
out
out
jno
sbb
jns
cmpsb
mov
cmpsl
xchg
test
mov
repz
in
fldenv
cmp
scas
clc
or
push
add
repz
dec
sub
repnz
add
jg
cmc
mov
xor
cmp
movsb
pop
mov
push
outsl
xchg
mov
mov
test
gs
mov
popf
fiadds
jb
xor
xchg
popf
gs
fs
adc
and
lahf
adc
sti
add
das
pop
xor
and
insl
xlat
push
sbb
sahf
enter
mov
push
cmp
sbb
pop
and
push
loopne
outsb
adc
push
enter
xor
movb
xchg
enter
sbbb
je
jb
ja
ds
arpl
ffree
mov
dec
arpl
rcrl
aad
cs
es
test
inc
mov
push
orb
dec
sbb
cltd
iret
mov
test
shl
cltd
and
fwait
pop
outsl
jecxz
sub
inc
xchg
pop
movb
jge
jecxz
adc
loop
jl
scas
popf
xlat
add
fnstcw
and
push
fmul
shlb
cld
clc
add
adc
mov
fs
aam
int
adc
pop
jle
les
sub
xchg
std
stos
mov
gs
dec
je
pop
pop
sbb
loopne
or
cmp
fs
sbb
push
adc
inc
je
out
add
xchg
adc
in
out
pop
lcall
popa
dec
out
xchg
repz
pop
dec
adc
xchg
aaa
lcall
daa
pop
cmp
das
xchg
or
pop
mov
scas
movsl
sbb
sbb
gs
pusha
pop
mov
sbb
inc
cmc
cmp
push
push
cwtl
gs
mov
and
or
sbb
sub
cmp
push
push
cwtl
gs
mov
and
or
push
in
cmc
cmp
push
push
cwtl
gs
mov
and
or
sbb
sub
cmp
call
stos
xor
test
iret
jb
popf
daa
ficoml
lret
leave
dec
es
insb
push
cmpsb
push
sub
pop
sbb
fdivl
in
test
lods
pop
ss
es
insb
push
sbb
or
cmp
sub
fdivl
xchg
lods
pop
das
dec
es
insb
pop
sbb
or
cmp
sub
fcoml
pushf
popf
jecxz
xchg
mov
mov
dec
dec
xor
lea
enter
cmp
mov
sub
popf
or
or
sbb
fcompl
test
xchg
popa
jae
mov
push
mov
leave
dec
mov
sbb
xchg
and
fdivl
pushf
data16
sub
add
out
out
sub
fwait
dec
es
push
xorb
push
and
int3
out
pop
std
jbe
jns
movsl
fistps
lods
pop
cmpsb
lods
mov
jmp
add
cmp
sub
mov
mov
xchg
sahf
in
cmp
push
cmp
jmp
xchg
insb
ljmp
andl
movsl
mov
add
dec
xor
sbb
jbe
data16
sub
fsubrl
in
lahf
pushf
out
mov
mov
push
or
adc
and
pop
and
jnp
dec
sub
mov
call
fsubrs
or
add
push
sub
loop
decl
sub
inc
pop
ja
jae
sbb
cmp
sub
fdivl
in
xchg
lods
pop
ss
es
insb
push
sbb
or
cmp
sub
fdivl
in
xchg
lods
pop
ss
mov
outsl
dec
pop
add
fsubrs
jg
mov
popf
mov
iret
mov
push
adc
xchg
in
mov
hlt
pop
into
lcall
inc
sub
lret
cmp
lret
dec
rcl
mov
stos
pop
cmp
arpl
dec
jo
in
test
and
cmc
dec
cmp
insb
outsl
inc
je
cmc
mov
outsl
pop
mov
movsl
inc
imul
push
fisttpl
sti
pop
ret
or
or
cmpl
fsubrs
adc
mov
add
sbb
divb
mov
aad
repz
inc
cmp
xlat
xor
mov
pop
jl
jnp
cmpsb
sti
dec
and
nop
fidivrs
dec
mov
int
fsubs
adc
mov
imul
movb
xor
imul
add
jg
mov
daa
and
or
push
in
pop
cmpl
mov
jne
in
movb
lahf
xchg
inc
mov
add
pop
pushf
adc
cmpsb
scas
movsb
mov
xchg
ret
cmpl
test
push
cmp
adc
movsb
mov
stc
dec
dec
jl
bound
dec
adc
jecxz
scas
pop
gs
ja
in
inc
int
sbb
dec
or
es
and
and
xchg
xor
push
cmpsl
test
sub
in
fs
push
push
adc
xchg
js
out
jae
test
push
outsl
sahf
adc
fisttpll
in
outsl
xchg
jp
push
in
cli
push
mov
pusha
cmp
js
xor
loopne
popf
push
stc
dec
xchg
jp
xchg
or
int3
jmp
iret
mov
sbb
out
dec
xchg
inc
add
sub
and
jg
or
xor
pushf
in
jg
insb
mov
push
fsubrs
ret
xchg
hlt
pop
cmp
out
aam
mov
lahf
ja
icebp
enter
ret
and
cli
jno
aas
jmp
xor
pop
pop
jmp
nop
fldcw
scas
fnstsw
or
cltd
or
cmp
cmc
mov
fs
xchg
leave
pushf
movsb
jne
aaa
add
mov
sub
inc
pop
inc
mov
xchg
xchg
repnz
cs
out
lret
jbe
in
out
mov
int
ljmp
push
inc
push
leave
movsl
movsl
cmpsl
test
fcmovnb
push
xor
pushf
push
daa
pop
cmp
pop
roll
pop
testl
dec
imul
into
arpl
sbb
jno
push
add
icebp
mov
fisttpl
mov
sbb
xor
popa
in
inc
and
rolb
int
hlt
push
xor
js
inc
nop
add
pop
ficomps
jge
lahf
cltd
sbb
xor
adc
xchg
inc
mov
lret
mov
jnp
sub
scas
cmpsl
sub
cwtl
sub
mov
cmp
dec
jno
cmp
xchg
inc
adc
fwait
icebp
std
mov
jb
cwtl
mov
iret
mov
inc
adc
repz
pop
dec
pushf
dec
pop
xchg
enter
inc
inc
xor
push
mov
adc
and
sbb
jno
dec
xchg
lea
sub
xchg
xor
jae
inc
pop
sti
leave
outsb
sub
and
cwtl
loope
cmpsl
fisubs
jmp
sub
jecxz
imul
mov
addl
cmp
data16
and
sahf
js
dec
and
aaa
sbb
insl
faddl
sbb
loopne
iret
orl
ja
xchg
push
ljmp
outsl
cmp
test
push
scas
movl
jo
in
push
sbb
mov
dec
lret
addr16
or
sbb
int
pop
movsb
enter
xlat
cmpsb
xlat
xchg
aad
notl
ret
lea
in
and
flds
or
cmp
in
cmp
arpl
ret
imul
mov
dec
and
cmp
ja
cmp
push
dec
mov
adc
mov
adc
in
mov
rorl
dec
jecxz
std
and
push
mov
pop
out
decl
xor
lock
cltd
and
das
icebp
stos
test
and
jno
ds
int3
push
jne
imul
mov
xor
test
filds
push
and
pop
lock
push
je
sbbl
mov
enter
je
sbb
mov
roll
and
mov
cmpb
lahf
xor
mov
and
popa
addr16
or
push
aam
sub
pop
movsb
cmp
bound
cli
iret
out
and
pop
dec
outsl
push
dec
ret
adc
jb
push
inc
pop
cwtl
mov
sbb
test
mov
xor
ret
xor
jg
loopne
sub
mov
sbbb
je
ljmp
or
test
xor
mov
jb
push
mov
inc
iret
adc
jb
stos
lea
push
push
arpl
das
mov
mov
cwtl
jle
imul
fimuls
xlat
ja
pop
pop
sbb
shl
inc
nop
cmc
sti
lea
fidivl
or
lods
pop
or
mov
cmp
cltd
dec
sbb
loope
cmpsl
mov
les
push
cmp
scas
push
mov
mov
enter
lret
nop
mov
test
inc
adc
outsb
sub
and
add
inc
and
inc
xlat
adc
pushf
outsb
or
js
stc
push
jle
jo
cmc
mov
popa
shlb
sahf
push
lahf
pushf
pop
out
xchg
mov
push
in
pop
imul
testl
xchg
dec
dec
cwtl
shr
clc
mov
dec
ret
test
mov
outsl
addl
jnp
add
mov
mov
lret
fldl
out
in
rorb
mov
scas
lods
mov
xor
orl
xchg
mov
mov
int
push
aad
adcl
sub
mov
xorl
mov
lcall
ljmp
push
jl
sub
or
mov
sahf
xchg
lods
add
rol
xchg
out
sbb
mov
sub
sbb
and
incl
bound
pop
sub
xor
adc
ss
das
or
adc
scas
cltd
fisubs
rcll
mov
imul
repnz
push
int
and
pop
xor
mov
pusha
and
movsb
push
push
mov
pop
mov
jne
out
push
ficoml
sub
and
in
pusha
test
jae
pop
dec
shll
loope
cld
xor
stc
in
fisubs
mov
add
fstl
mov
sbb
mov
pushf
cmp
xchg
cmp
jb
and
lods
xchg
cmp
icebp
xor
mulb
push
jg
cltd
xchg
lret
inc
loopne
xchg
psubsb
mov
aas
fisttps
insb
jg
out
pop
mov
cmp
sub
mov
jb
data16
jge
add
cmp
cmp
mov
adc
popf
cmc
outsb
sbb
push
cld
mov
pop
sub
das
daa
cmp
adc
inc
sub
mov
leave
dec
fdivrl
jge
andb
adc
push
adc
fists
pop
or
lret
aaa
leave
cmpsl
cld
cmp
orl
push
movsb
shl
inc
xchg
mov
mov
das
mov
ret
es
lea
push
sub
pop
sub
sbb
push
je
aaa
sub
in
xchg
pop
inc
cmc
xchg
lds
loope
shld
push
call
inc
test
xlat
push
add
into
clc
push
lds
movsb
test
xor
movsl
fs
xor
fsubp
mov
add
fisubrl
adc
in
add
jg
push
or
inc
in
and
and
jge
in
xor
push
repnz
add
mov
fwait
pop
jbe
sub
inc
xor
mov
or
mov
sbb
jmp
lds
lcall
imul
lret
iret
mov
cmpsl
mov
jmp
jp
mov
icebp
cs
hlt
out
xlat
or
sbb
mov
pop
xor
scas
imul
mov
bound
push
xchg
xchg
jecxz
out
or
and
scas
adc
in
aad
dec
ret
cmp
inc
test
sbb
stos
loopne
jo
push
adc
int3
scas
mov
mov
sti
hlt
adc
push
xchg
fisubrl
dec
fdiv
lods
mov
in
test
xchg
xchg
mov
aaa
or
inc
les
and
add
clc
xchg
dec
xchg
paddsb
cwtl
and
push
cmp
in
push
scas
pushl
test
data16
lret
shrd
adcb
mov
pop
and
test
arpl
fcmove
jno
adc
lret
adc
mov
xor
shrb
aaa
dec
outsl
cli
out
inc
out
outsl
imul
sti
sub
ljmp
outsl
jl
or
xor
sub
sahf
jl
or
movsl
cmp
inc
lahf
add
or
and
add
mov
test
clc
repz
scas
clc
cltd
repz
dec
mov
dec
aaa
test
scas
xor
xorb
std
in
xor
fisttpl
sbb
xor
cmpsl
mov
std
dec
cmp
das
sub
jo
test
jno
jns
clc
mov
roll
mov
ret
inc
mov
sbb
mov
ja
adc
and
push
and
loope
sub
lahf
dec
ja
stc
aam
inc
aas
pop
mov
in
mov
es
inc
cld
das
popf
xor
imul
or
or
mov
and
xchg
aad
stc
testb
inc
bound
call
out
sbb
movsl
cli
dec
mov
insb
adc
rcrl
xor
jnp
adc
ror
mov
jl
loopne
adc
pop
jnp
addb
mov
xor
or
lods
clc
test
xchg
mov
test
and
aad
insb
push
adc
rcrb
inc
cmpsb
cwtl
jg
arpl
mov
pop
jno
shl
into
cmpsb
xor
mov
sub
cmp
js
dec
repnz
sbb
call
and
cli
cmp
mov
inc
inc
cmc
jp
aaa
stc
pop
insb
jmp
push
mov
leave
dec
repnz
out
sbb
cmp
jae
in
cmp
and
push
lock
pop
int
sub
into
jne
adc
fsubrl
mov
xchg
aaa
jno
jmp
fwait
jae
cmp
shrb
adc
and
hlt
or
jno
fsubs
out
add
aaa
rol
daa
mov
add
js
dec
arpl
jb
addl
cmpsb
or
add
xor
mov
insb
cmp
dec
jl
aad
pushf
pop
mov
pushf
jge
jb
rcl
stos
inc
push
popa
ljmp
dec
bnd
xchg
lea
mov
push
les
testb
in
mov
nop
dec
inc
add
pop
sub
je
lahf
mov
jg
addr16
fwait
pop
xchg
enter
or
repz
mov
shrl
imul
aas
clc
push
pop
cmp
in
out
or
or
dec
rcl
jnp
mov
mov
je
arpl
enter
sub
movsb
jno
fisttpll
sbb
int3
js
ds
mov
es
shr
xchg
bound
in
dec
std
adc
xchg
pushf
lods
fwait
mov
xor
prefetchnta
lahf
mov
push
js
in
stos
outsb
test
push
push
fsts
sahf
mov
inc
sub
jne
dec
xchg
lock
cmp
and
xor
push
or
ja
and
lods
inc
pop
enter
lock
outsl
push
and
lret
push
dec
and
dec
jle
sbb
add
mov
insb
lock
mov
mov
pop
push
popf
in
insb
ss
sub
repz
add
push
shll
xor
aaa
jno
dec
cltd
movsl
inc
call
stos
stos
repnz
daa
ret
dec
subb
fs
mov
rorl
mov
test
icebp
or
arpl
adc
inc
dec
dec
es
scas
cld
and
inc
jecxz
push
stos
jbe
jno
add
insl
in
xchg
std
adc
das
add
cmp
jecxz
enter
mov
pop
in
fisubl
fmull
cwtl
and
push
cli
jbe
xlat
cmp
xchg
ss
fs
lahf
mov
cmc
loop
xor
test
adc
xorb
icebp
pop
out
insb
jnp
repnz
sbb
mov
sbb
push
fisttpl
dec
in
lcall
jge
push
mov
ljmp
sbb
cmp
jns
adc
cmp
add
pop
insb
xor
sub
sub
pop
je
pop
mov
sbb
clc
jmp
sub
hlt
cs
push
test
movl
daa
sub
inc
xchg
rol
lods
mov
push
jo
cmp
jmp
rorl
bound
outsl
sbb
pusha
mull
scas
push
pop
add
pushf
or
lds
fbstp
out
in
cmp
adc
bound
aas
sahf
scas
iret
daa
push
and
repnz
push
dec
scas
and
cmp
shll
jle
mov
and
lahf
push
sbb
sub
fnstenv
rorb
mov
mov
ds
cmp
out
es
inc
enter
fs
imull
add
xchg
push
fisubl
out
ficoml
mov
jp
into
cmp
mov
test
ljmp
popa
imulb
dec
ret
je
arpl
lock
rorb
adc
leave
adc
sbb
pop
int3
sbb
or
pop
fnstsw
ljmp
test
iret
loope
rcll
js
leave
jle
mov
xor
das
inc
lock
sbb
addr16
imul
data16
sub
fbld
pop
mov
fidivs
xchg
sub
fdiv
pop
inc
jmp
xchg
push
pop
ret
inc
add
sbb
sbb
lcall
cmp
jmp
and
pushf
push
outsl
mov
or
lret
lea
dec
ljmp
ret
mov
lock
adc
stos
xlat
or
push
mov
jo
in
mov
pop
lret
push
mov
and
fsts
bound
cld
mov
shlb
and
hlt
cmp
push
popf
push
lds
push
adc
ja
add
xlat
mov
loop
push
std
notb
dec
pop
shrb
sbb
lahf
int
sub
in
mov
hlt
ret
dec
test
movl
push
fists
enter
imul
ja
push
popf
sahf
outsl
pushf
sbb
subl
sub
subb
insb
xlat
pop
pop
jg
mov
les
cmp
cmpsl
sbb
out
ds
rcl
outsb
movsb
fwait
mov
xchg
sbb
pop
fsubl
stos
inc
stos
repnz
decl
scas
int
push
test
and
fadds
mov
pop
cmp
xchg
and
outsb
pop
sbb
shll
xchg
icebp
das
inc
jnp
fs
cmp
xchg
cmc
fsubrl
xlat
jle
mov
clc
mov
lea
xchg
sub
ss
out
mov
std
mov
test
pop
clc
insl
enter
push
leave
or
lea
cmp
ja
add
or
jb
push
pop
mov
xchg
inc
and
xchg
in
mov
mov
or
movsl
or
fwait
rorl
or
fisubl
push
std
mov
xchg
pop
mov
add
test
adc
popa
loop
jle
or
xor
fadds
pop
aaa
shr
pop
dec
das
cwtl
push
insb
xor
pop
cltd
jg
pop
nop
vmovntdq
mov
xchg
push
xor
inc
mov
xchg
lcall
int3
mov
in
and
test
jmp
mov
or
fbld
incl
mov
ret
arpl
inc
int3
sbb
and
jno
movsl
int3
push
pushf
sub
and
add
cltd
lahf
xor
scas
daa
lds
sti
mov
clc
push
adc
push
adc
adc
jns
test
and
enter
loopne
jbe
ds
jp
aas
mov
sahf
outsb
ja
add
icebp
cmpsb
or
xchg
sbb
push
mov
sbb
sbb
incl
test
sbb
clc
cmpsb
and
xchg
out
out
sub
hlt
push
out
sbb
std
inc
mov
inc
es
fisttpll
lahf
cmpsb
rclb
push
push
test
test
and
mull
mov
cmp
scas
jg
nop
xchg
std
xchg
loop
sub
loop
jbe
fstps
mov
daa
stc
cli
mov
mov
fsts
mov
hlt
push
cmc
andl
dec
and
mov
dec
clc
dec
and
xchg
imul
sbb
and
ret
icebp
push
or
mov
and
mov
aam
ret
jae
iret
rcl
fs
repnz
ds
addr16
gs
jmp
fnstcw
push
inc
or
xchg
test
int
sub
add
in
leave
rolb
adc
out
adc
xchg
xlat
xchg
fimuls
push
inc
jne
push
sti
fstpt
fdivp
push
fisubrl
sub
jle
xchg
adc
dec
adc
cmp
push
pop
outsl
lock
fldt
dec
dec
test
rcrl
loop
inc
jbe
aas
xor
call
inc
adc
adc
insb
jecxz
sbb
sbb
lahf
dec
mov
cmp
idiv
cmpsl
sbbl
or
pop
push
sbb
aam
lea
es
xchg
lahf
adc
and
adc
shr
je
dec
jp
dec
xchg
push
cmpsb
sti
ror
push
in
xor
fwait
xchg
push
pop
mov
mov
mov
jg
adc
lret
jecxz
mov
xchg
mov
dec
mov
dec
adc
jp
inc
add
int3
iret
pop
inc
fldl
dec
fadds
dec
or
or
mov
push
or
pusha
std
test
imul
mov
inc
mov
gs
xor
lods
xor
pusha
inc
ss
inc
add
bound
aaa
out
bnd
cmpsb
jbe
aas
mov
jbe
add
mov
or
in
adc
in
mov
fidivrs
jp
sub
mov
int
mov
gs
outsb
aas
jl
jle
aas
sbb
fwait
sbbb
push
call
int
mov
sarb
in
pop
and
add
xchg
daa
or
dec
mov
pop
add
mov
outsb
jbe
lds
sbb
rorb
xchg
cmc
out
push
jnp
push
orl
out
push
xchg
inc
lods
add
or
push
mov
mov
jl
mov
lds
sti
mov
dec
js
jo
jns
aas
or
inc
inc
cmp
sub
inc
call
xor
sbb
add
add
sbb
test
sub
or
xchg
push
mov
xchg
jbe
push
test
sub
pop
cld
rclb
clc
or
or
push
out
mov
sub
mov
mov
fs
das
clc
adcl
cmp
aaa
xchg
mov
or
xchg
push
or
xor
in
loope
lret
sub
mov
rcrb
jl
pop
loopne
sti
int3
das
mov
mov
push
hlt
mov
rep
xchg
jg
pop
fdiv
push
xchg
lea
adc
xchg
dec
les
cmp
ret
ret
push
jno
xchg
sbb
mov
mov
push
and
scas
push
adc
dec
rcrl
mov
ljmp
and
idiv
pop
ret
mov
shl
fbstp
push
jp
xor
fnstenv
xor
hlt
in
add
stc
lret
enter
mov
rcrb
xchg
mov
rcrl
pop
mov
pop
pop
mov
imul
push
sub
lret
mov
mov
fs
xchg
lods
or
cmp
or
dec
cmp
dec
rcrl
xchg
inc
push
mov
mov
mov
jno
sarb
xchg
scas
icebp
dec
shr
pop
sti
jb
leave
jmp
in
jp
jge
mov
adc
insl
mov
xor
cmp
stos
mov
inc
fnstsw
push
adc
das
add
arpl
or
sub
loope
gs
into
xor
add
push
push
jecxz
jmp
ds
sub
ja
test
es
xor
cmp
pop
test
xor
cmpb
jns
mov
mov
push
push
cmp
mov
jae
push
mov
outsb
sbbl
mov
ret
filds
inc
bound
mov
rcrb
and
test
scas
loopne
inc
das
in
addb
jnp
push
jb
imul
xor
shrl
or
xlat
pop
mov
pushf
lods
imul
mov
out
int3
stos
data16
in
fbld
imul
or
cmp
sub
fdivl
in
xchg
lods
pop
ss
es
insb
push
sbb
or
cmp
sub
fdivl
in
xchg
lods
pop
ss
es
insb
push
sbb
or
cmp
sub
fdivl
in
xchg
lods
pop
ss
es
insb
push
sbb
or
cmp
sub
fdivl
in
icebp
jmp
add
inc
sub
mov
pop
cmp
sub
cmc
rolb
xor
add
add
add
add
pop
or
add
add
add
add
add
add
rolb
mov
add
pop
add
int
and
push
add
add
sub
mov
add
add
add
sbb
and
fiaddl
inc
add
cmp
add
loop
into
add
add
jecxz
out
add
add
add
mov
enter
roll
leave
add
add
add
add
add
icebp
add
add
int
mov
aam
and
loop
in
add
add
in
fwait
add
add
add
add
add
add
pop
add
ja
sbb
testb
add
add
add
add
add
add
mov
clc
add
and
jnp
add
add
add
add
xor
sbb
leave
add
add
add
mov
add
add
add
add
add
push
pop
add
add
add
call
add
add
add
add
add
add
add
push
inc
add
add
stos
add
add
add
add
add
add
mov
nop
add
add
imul
add
add
mov
outsl
add
mov
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
cltd
add
add
pop
add
xchg
add
sub
pop
add
testb
add
add
add
sub
add
add
fildl
sahf
add
add
xchg
add
add
and
mov
testb
add
add
add
add
add
add
test
add
add
dec
add
add
add
add
add
add
add
xor
add
add
add
fldl
enter
mov
add
mov
add
add
add
in
add
add
and
in
pop
add
cmp
mov
lcall
add
sub
jo
aad
or
pop
add
nop
add
faddl
fwait
add
popa
add
mov
add
add
rolb
xchg
add
add
add
icebp
add
add
popf
add
xor
or
loop
mov
dec
add
add
pop
add
mov
add
dec
add
pop
add
add
repz
or
or
sub
jmp
js
in
add
add
add
ret
add
add
faddl
mov
mov
sub
mov
insl
add
dec
add
add
add
add
add
add
add
add
add
add
adc
cmp
add
add
xor
inc
add
mov
add
dec
add
add
add
mov
roll
add
add
add
add
add
out
add
add
add
add
add
add
add
add
arpl
mov
add
add
add
add
add
in
add
add
pop
add
mov
add
adc
pop
add
daa
add
add
add
faddl
clc
add
jmp
add
xor
mov
add
add
add
add
sub
mov
push
test
ds
repz
add
lret
dec
stos
pop
ds
in
mov
jle
or
cmpb
out
add
sub
dec
pop
sbb
cmp
mov
cmp
inc
ror
data16
fucom
shll
pushf
aas
pop
inc
outsl
or
adc
push
out
nop
test
inc
dec
fidivl
jo
mov
adc
xor
or
xchg
jg
push
jl
dec
aaa
pop
into
mov
dec
xchg
in
ds
or
add
aad
lret
sub
out
sbb
adc
popa
icebp
xchg
dec
or
mov
dec
int
arpl
inc
mov
lea
sbb
bound
enter
push
sub
into
xor
xor
add
sub
cmp
mov
jg
cld
add
movsl
add
inc
and
sub
pop
xorl
push
test
aam
dec
dec
mov
sub
mul
xchg
xor
push
ss
ss
dec
push
push
dec
out
pop
add
push
imul
push
mov
int
push
sti
movsl
sbb
adc
push
mov
pop
loop
xor
repz
cmp
gs
push
test
movsb
scas
mov
xor
sub
push
inc
push
mov
cld
sbb
pop
pop
lretw
xchg
inc
jnp
shl
and
fst
mov
jae
cmovae
enter
popa
jb
mov
dec
fsubrs
sbb
outsl
test
fmull
pop
or
stos
jmp
arpl
scas
push
loope
add
loop
out
pop
sub
ss
and
xor
leave
inc
test
or
or
and
sub
imul
pop
jmp
pop
push
inc
sbb
ret
mov
pusha
add
cld
negl
or
ret
xor
and
push
jle
enter
pop
and
push
in
inc
jmp
mov
idiv
movsl
sbb
outsl
mov
mov
pop
imul
cmc
add
adc
dec
or
pushf
mov
repnz
cs
pop
add
sbb
push
push
ja
ss
test
test
pop
add
paddusw
aam
and
out
mov
fs
mov
mov
pop
in
orb
jl
pushf
inc
jp
stos
test
cmpsl
cmp
insl
inc
mov
fistpll
cmpsb
mov
xchg
mov
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
