call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
xor
sbb
and
xor
movsl
sub
sbb
push
aad
and
mov
je
enter
sub
sbb
pop
cmc
js
or
pop
and
and
les
push
shlb
lock
mov
dec
std
inc
int
fists
mov
sub
pop
jmp
or
mov
and
jmp
and
fsubl
or
imul
aad
test
je
popa
mov
and
movsl
in
roll
xor
dec
loop
xor
and
pop
nop
movsl
xor
mov
jae
test
cmpsb
xchg
mov
lret
fildl
sbb
inc
rclb
jnp
sub
iret
xchg
sbb
pop
sub
cltd
nop
mov
mov
sub
lock
add
dec
aam
jp
xor
xchg
gs
push
pop
movsl
scas
mov
test
xchg
push
in
cmc
add
aad
push
cli
jno
imul
adc
int
pop
jge
jl
jno
pop
mov
cmp
jbe
jno
pop
mov
inc
cmpsb
sub
outsb
std
insl
lock
cmp
xor
sbb
data16
clc
inc
enter
sub
sbb
push
aad
and
mov
clc
inc
enter
sub
sbb
push
aad
and
sub
push
jno
xchg
mov
push
push
outsb
enter
mov
loope
sub
test
call
mov
push
ret
lret
add
pop
xchg
mov
xchg
pop
mov
insl
cmp
flds
fimull
adc
scas
out
jno
popf
cltd
jmp
testb
sbb
jne
add
pop
xor
inc
test
nop
dec
jnp
sub
fcomi
bound
push
shrl
xchg
push
outsl
jae
sub
aam
mov
xor
cmp
sbb
cmp
cmpsl
jne
aaa
aas
jmp
mov
cmpsl
xor
and
mov
sbb
aam
adc
lock
and
jnp
push
xchg
mov
sub
sbb
mov
mov
mov
ja
loop
and
icebp
jne
adc
cmp
mov
add
sbb
out
insb
fcoml
shll
adc
sahf
xchg
add
mov
add
mov
stc
ljmp
jno
cwtl
int3
outsb
sahf
jle
mov
mov
xor
fstl
xor
fsubrs
jle
loope
fisttpl
and
ret
icebp
lods
adc
aam
push
xchg
jo
push
scas
stc
xlat
cmp
loope
stos
insl
repz
das
cmpsl
mov
repnz
repz
ds
cmp
ret
mov
icebp
sti
ret
inc
pop
daa
push
adc
sbb
jg,pn
dec
iret
das
or
cmp
mov
insl
lret
in
or
push
adc
aad
jl
inc
sbbb
movsb
cwtl
dec
loop
xor
or
imul
lret
mov
xchg
sbb
add
cmp
fistpll
push
fistpll
test
pop
sahf
mov
pop
push
fidivrl
lock
out
in
repnz
mov
scas
fwait
std
sub
push
inc
dec
or
mov
inc
icebp
sub
pop
sbb
pusha
push
and
ja
loope
adc
cmp
xor
pop
mov
jl
lds
cli
bswap
inc
dec
aad
inc
dec
cmp
mov
fsubrs
mov
loop
push
loop
test
or
test
dec
mov
push
add
dec
popf
bnd
sub
and
add
enter
inc
roll
and
aam
pop
out
or
sbb
jle
push
movsb
bound
fdivrl
into
call
cli
xchg
in
cld
mov
popa
mov
cli
pop
movsl
adc
sti
sbb
add
stc
nopl
jp
jnp
or
loopne
add
inc
lahf
xor
push
lahf
jae
push
in
sub
scas
imul
stos
cmpsb
out
imul
ljmp
push
pop
sbb
idivl
push
or
imul
xor
pusha
mov
mov
icebp
das
in
aad
scas
shrl
lds
jns
cmp
mov
dec
leave
pop
outsb
pushl
jbe
lret
mov
sbb
pop
xor
lea
aad
inc
gs
sub
pop
ficompl
xor
imul
cmp
xorb
push
lret
xor
sbb
inc
push
xlat
daa
aas
fucomip
fadds
cmp
dec
sub
xchg
nop
rolb
mov
mov
dec
adc
loopne
idivb
sub
push
xchg
jb
popf
sub
gs
stos
dec
push
jmp
lret
inc
cmpsl
pop
int
out
cs
clc
shlb
adc
jmp
faddl
in
dec
sub
sbb
pusha
in
inc
sbb
xor
jle
cmp
leave
mov
push
pop
fwait
mov
ss
inc
fs
sbb
dec
test
out
outsb
mov
xchg
mov
or
or
shl
sbb
out
mov
sbb
test
incl
aad
lahf
cs
pop
lcall
hlt
cmpsl
inc
outsb
add
popf
hlt
addr16
cmpsb
mov
scas
ja
rclb
or
sub
push
loop
push
dec
add
jl
pop
cli
adc
push
or
cld
sub
insb
int
pop
imul
lods
mov
lods
lcall
push
sub
push
pushl
pushf
mov
dec
jnp
xor
jo
push
cmpb
pushf
dec
sahf
out
frstor
xchg
sbbl
sbb
lahf
lock
fcmovbe
sub
jge
mov
repnz
adc
push
repz
mov
loope
xchg
lret
mov
nop
xchg
inc
xchg
enter
and
mov
mov
clc
xor
ficoml
outsb
insl
cmc
insl
fstpl
aaa
cmp
add
lahf
and
movl
inc
mov
cltd
push
loope
sub
movsb
addl
pop
jbe
xchg
jl
jl
cli
mov
outsl
dec
movsl
push
inc
and
cli
xor
pop
fdivrl
rorb
into
inc
hlt
lock
mov
add
int3
sub
dec
jmp
jne
ja
push
mov
pop
fisttps
je
jge
mov
mov
pop
hlt
fisttps
cltd
push
sbb
or
xchg
clc
loop
add
mov
jg
incl
cmpsb
or
jnp
negb
cld
popf
and
or
pushf
js
push
mov
in
lcall
int
xchg
les
rorb
arpl
mov
in
inc
sub
xchg
xor
mov
jns
xchg
aad
cld
sub
daa
mov
orl
and
popf
add
cmp
sbb
cld
pop
stc
jno
in
addr16
outsb
cmpsl
adc
pop
xor
and
mov
pop
jmp
xlat
add
movsb
push
and
clc
cmc
mov
aam
sbb
mov
xchg
les
outsb
repz
fnstcw
aaa
jecxz
and
mov
aaa
pop
mov
mov
fimuls
popa
push
pop
xor
sub
dec
push
scas
xchg
and
hlt
lcall
fisubrl
jno
push
inc
mov
loop
pop
pop
cmp
xchg
or
fdivrp
add
leave
jmp
dec
test
push
data16
mov
inc
cmc
jno
loope
mov
loopne
mov
les
loopne
xor
or
xor
jl
dec
adc
clc
inc
jne
or
stc
sbb
pop
enter
mov
inc
in
jnp
lret
cmp
lcall
repz
sub
mov
mov
xchg
call
or
nop
icebp
ja
add
xchg
add
sbb
xchg
call
daa
std
fs
jecxz
loop
sbb
test
sbb
faddl
sti
mov
mov
sbb
dec
jmp
mov
jl
dec
stos
aas
push
cmpb
xchg
into
stc
loopne
fnsave
aad
outsl
ja
in
out
add
adc
les
sub
adc
sahf
or
in
mov
addb
mov
es
je
or
xchg
fldt
adc
inc
cmp
test
out
push
or
test
mov
das
cmp
mov
cld
jbe
filds
dec
fwait
xchg
movsb
mov
divl
and
lds
inc
fmul
repz
loope
adc
or
in
rcll
stos
pop
movsl
pushf
or
fwait
mov
cmp
sahf
lds
aaa
aad
out
nop
ljmp
jno
xchg
mov
inc
sub
mov
add
xor
in
mov
stos
lss
dec
std
sahf
sbb
xor
hlt
sti
mov
xchg
int
pop
and
ljmp
subb
adc
inc
xchg
inc
mov
aaa
ss
shll
outsl
cmp
rcr
mov
xchg
iret
and
adc
pop
out
imul
or
push
add
dec
adc
popf
jmp
push
mov
dec
movsl
pop
jb
ss
pop
inc
mov
adc
sub
cmc
cmpsl
je
int
cmpb
cwtl
aas
imul
sub
push
and
dec
pop
mov
sti
adc
gs
call
mov
daa
mov
loop
mov
cmp
loop
imul
push
rolb
mov
inc
popa
lods
xchg
cmp
ret
sbb
test
xor
push
call
lods
and
ret
sti
sub
mov
add
dec
push
das
mov
mov
sahf
in
cmp
shlb
js
push
jb
jmp
sub
sbb
add
inc
sub
jmp
push
inc
jo
rcll
iret
jle
cmp
xchg
iret
fisttpll
loopne
clc
test
mov
pop
xor
push
xchg
repz
std
je
out
cmc
and
push
nop
push
mov
adc
and
inc
cmpsb
or
add
inc
insl
mov
arpl
push
xor
dec
lret
test
pop
dec
and
lods
mov
fildll
imul
dec
cmpsb
push
mov
mov
repnz
mov
mov
movsl
xchg
dec
dec
jbe
pop
dec
sbb
stos
fimull
insl
popa
lret
and
call
pop
mov
mov
lret
and
aam
push
jns
cmpsb
imul
stos
inc
jle
cs
fwait
mov
mov
add
in
fldenv
push
cmp
push
lcall
push
lcall
xchg
jmp
in
loope
xor
out
mov
mov
paddsw
adc
mov
add
int
mov
pop
cmp
mov
and
adc
sti
jo
sub
es
and
cmpsb
and
subb
imul
aas
sbb
inc
lods
ss
lret
adc
xlat
mov
cltd
shlb
sbb
aad
push
xor
jns
lahf
pop
sub
inc
mov
mov
jnp
mov
test
cmc
fildll
sub
icebp
cwtl
nop
popf
lahf
mov
inc
insb
dec
mov
cmp
xor
mov
adc
dec
dec
jo
jmp
sbb
xchg
lds
mov
inc
mov
cmp
dec
cmpl
cmp
xchg
outsb
cmp
out
fwait
sbb
daa
sub
or
xchg
adc
cs
cmc
push
or
add
fs
xlat
icebp
fadd
pop
enter
mov
pusha
imul
lcall
sti
shrl
sub
xchg
xor
in
stc
dec
std
insb
xchg
cmp
dec
lods
jecxz
jne
push
xlat
nop
shll
sub
out
pop
roll
xor
inc
xor
push
push
and
sub
cmp
and
in
repz
xchg
fs
sbb
ret
push
dec
xor
lret
cmc
adc
fildl
adc
orl
fldt
xchg
push
push
mov
test
outsl
sub
daa
jno
mov
xorb
mov
popf
pop
add
subb
mov
enter
xor
lahf
dec
adc
cmp
sub
add
mov
mov
daa
test
jp
imul
dec
push
int
out
inc
aaa
inc
or
and
push
jnp
fcmovu
repnz
dec
data16
negb
or
pop
sbb
cli
repz
push
aas
inc
out
cltd
cmp
aaa
mov
shl
test
dec
adc
jge
and
pusha
nop
insb
adc
stos
cmpsl
push
int
cmp
sub
xchg
and
cltd
or
xor
mov
jmp
jb
fwait
xor
movsb
dec
pop
in
out
add
aas
or
xor
cli
fldt
jno
cmpsl
or
cld
xchg
jg
xchg
push
xor
scas
lahf
cmpsb
loope
sbb
add
and
inc
sti
rol
inc
xchg
jmp
sbb
sbb
push
cmp
enter
dec
push
dec
pop
xor
mov
imull
lods
dec
xchg
fmul
mov
ja
push
popf
fisubrs
test
ss
sub
push
mov
sbb
mov
mov
sbb
jae
insb
xchg
push
cmpl
and
jmp
vpsrlw
cmpb
clc
pop
mov
insb
sub
ret
and
incb
test
push
pop
testb
fs
lcall
xchg
scas
lods
enter
lret
sub
mov
aas
and
dec
pop
xchg
dec
dec
jns
jle
xchg
fadds
movsl
gs
nop
mov
int
ja
jnp
out
popf
mov
daa
xlat
sbb
mov
les
popl
mov
or
punpckhbw
push
lret
mov
or
mov
jbe
inc
setae
into
xor
cmp
hlt
cmp
sub
ja
lods
fdivl
in
pop
or
imul
mov
xchg
jo
push
scas
jl
push
mov
sub
fimuls
xor
xchg
pop
push
pop
stos
insb
cmpsb
cmp
les
imul
mov
enter
fidivrs
mov
sbb
dec
dec
mov
push
sbb
jb
adc
inc
add
jno
dec
pop
xchg
mov
adc
sub
test
ljmp
ds
mov
in
test
iret
rcll
mov
push
xchg
pop
mov
xchg
cmp
mov
pop
pushf
in
and
mov
push
movsl
andl
or
mov
pop
imul
fisubs
outsb
xchg
dec
js
test
push
fcmove
xor
sub
lods
into
sbb
in
sbb
cmp
pop
lcall
adc
jbe
ret
add
daa
addr16
test
addps
psraw
pushf
out
sbb
dec
xchg
loopne
loopne
sbb
add
jge
cmp
aad
xor
xlat
push
iret
fdivs
mov
imul
shlb
mov
int3
pop
aam
dec
in
push
sub
dec
popf
cld
inc
std
mov
mov
mov
mov
jmp
sub
adc
daa
sbb
idivl
cwtl
lods
pop
cmpl
mov
repnz
push
int3
mov
jg
dec
fldt
mov
lret
mov
ja
sbb
stos
ret
xor
lret
ror
aas
or
pop
sub
push
mov
mov
mov
pop
or
aam
imul
in
lahf
jne
push
in
xor
dec
mov
lea
sbb
inc
push
ds
punpckhwd
inc
insl
lods
xor
add
push
leave
dec
lods
jle
outsb
in
scas
push
and
jp
add
mov
stos
iret
mov
jno
ljmp
cmp
mov
les
push
lea
loop
lods
fisubl
addr16
test
call
mov
fst
push
xchg
aad
ss
divb
or
mov
xor
das
xchg
xchg
add
inc
mov
loop
jae
and
mov
aaa
push
das
dec
stos
or
test
push
movsl
ret
sub
adc
mov
mov
dec
bound
jnp
xchg
testl
jp
mov
cmc
imul
call
sbb
pushf
lcall
push
dec
cmp
sub
jl
je
ss
imul
add
cwtl
xor
cmp
iret
mov
push
inc
cmp
mov
xchg
dec
push
fcmovnu
cmc
adc
xorps
cmp
ja
xchg
jae
std
push
pop
hlt
xchg
jbe
lock
pop
fwait
adc
xor
sbb
pop
in
iret
mov
inc
jge
adc
add
lea
cs
cmp
movsl
outsl
fs
in
pop
add
imul
or
adc
sbb
or
mov
test
cmp
arpl
lock
cmpsl
xchg
push
adc
test
or
lds
mov
cmp
into
push
js
sub
cmp
clc
cltd
jge
stos
imul
inc
cmp
push
push
push
imul
fs
imul
pop
xchg
sbb
mov
sahf
add
mov
in
aam
jbe
add
imul
imul
push
imul
lods
iret
sub
cld
data16
scas
sbb
lods
lods
cmp
dec
in
out
out
add
push
out
mov
push
aaa
cmp
jecxz
out
sbb
xor
out
push
sbb
lods
sbbb
test
movsb
gs
push
xor
xor
iret
mov
inc
shrb
xor
or
movsb
adc
hlt
mov
fstpl
shlb
and
test
mov
fs
sub
and
inc
cmp
pop
stc
jmp
sbb
mov
insb
mov
jbe
jno
sbb
push
imul
xor
pop
movsl
or
in
ror
mov
iret
lahf
add
std
sub
adc
shlb
pop
adc
push
lret
pop
and
ficompl
lret
mov
in
xchg
test
addr16
jecxz
lcall
gs
push
adc
mov
sub
movsl
sbb
shl
pop
xchg
mov
add
lret
mov
sbb
jno
fdivrl
shl
xchg
xor
or
lcall
std
test
jne
push
iret
sti
xchg
imul
loop
sahf
fwait
loopne
pop
roll
inc
or
lret
scas
shlb
rcl
imull
adc
in
std
push
mov
imull
cmp
ficompl
xchg
std
jne
mov
jmp
pop
outsb
jno
sbb
mov
ja
stc
leave
stc
std
xchg
cmp
fisttpll
jbe
mov
lahf
stc
push
addr16
mov
in
inc
pop
ljmp
or
fstpl
push
enter
mov
pop
fs
leave
sub
shl
cmp
adc
insl
sti
and
add
mov
stos
adc
dec
scas
add
dec
cmp
dec
and
jbe
push
leave
shlb
push
sti
movsl
int
xchg
push
adc
mov
add
flds
fistl
imul
jae
adc
mov
das
jne
decl
pop
leave
mov
dec
sbb
ficoms
daa
dec
andb
xchg
lret
cld
fwait
mov
loop
scas
cltd
cwtl
iret
push
ds
jnp
mov
repz
sub
mov
es
sbb
dec
xchg
test
mov
data16
cmp
jle
and
repnz
and
sub
sahf
pop
xor
roll
repnz
rcl
push
sbb
push
sbb
leave
adc
xor
iret
stos
xchg
cwtl
sub
mov
jnp
lea
lods
in
cmp
mov
lods
adc
push
and
inc
inc
aaa
pop
insl
cmp
mov
adc
mov
cld
and
mov
pop
pop
mov
push
loope
sbb
sbbl
cltd
fdivs
dec
push
dec
pop
ficompl
mov
daa
jge
scas
mov
or
mov
mov
movsl
fld
mov
in
in
cmp
sub
push
sub
pop
enter
mov
arpl
ja
mov
sbbl
imul
lret
xchg
stos
enter
inc
scas
movsl
cmp
neg
sahf
pop
sar
add
or
faddp
adc
mov
sub
outsb
mov
xor
test
mov
in
mov
inc
and
aam
popf
pop
mov
mov
hlt
in
sub
jae
out
cwtl
pop
xchg
test
inc
out
xor
jb
hlt
push
aad
and
xchg
mov
add
xchg
jb
or
daa
ret
jl
jmp
and
pusha
lret
dec
idivb
scas
dec
stc
out
mov
ret
push
pusha
adc
xchg
in
in
pop
data16
pusha
and
rcrb
cwtl
nop
out
daa
jno
adc
mov
xor
lret
lcall
push
movsb
push
pop
out
mov
mov
xlat
adc
inc
xchg
and
ffree
and
adc
dec
add
arpl
mov
cwtl
movsl
stos
arpl
mov
push
sub
out
jmp
and
insb
add
movsb
sub
ss
scas
sbb
dec
subl
lea
jno
push
or
shl
inc
jno
cli
notb
lods
inc
and
xchg
push
adc
cmpb
fimull
cltd
dec
test
hlt
sub
in
idivb
iret
jg
xchg
repz
mov
arpl
aad
test
xchg
push
mov
shr
fisttpll
jge
adc
xor
mov
pop
mov
cmp
mov
mov
sub
inc
push
dec
xor
jg
test
fwait
pop
enter
addr16
pop
lods
das
fstpl
nop
movsl
mov
gs
push
fsubs
or
js
dec
aad
and
mov
clc
inc
enter
sub
sbb
push
aad
and
lock
push
inc
enter
lock
test
xchg
sbb
push
aam
and
xor
add
adc
clc
inc
dec
push
fsubs
or
xchg
mov
cmpsl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
es
outsb
pop
pop
dec
dec
and
dec
cmp
arpl
mov
fsubrp
into
mov
sahf
mov
insb
pop
dec
dec
cmp
sub
sbb
or
idiv
in
out
mov
shrb
mov
jne
inc
pop
push
dec
and
push
sbb
cld
out
mov
mov
stc
out
lock
or
insb
daa
adc
and
push
shrb
das
xchg
cmc
test
sbb
and
xchg
adc
loope
pop
add
shrl
xor
lret
shrl
sahf
add
icebp
jle
arpl
ss
pop
test
arpl
jmp
lods
cmp
jbe
sbb
popf
cmp
hlt
je
lock
fcompl
cmp
gs
pushf
or
ret
insb
mov
cmpsl
or
sbb
hlt
add
mov
push
in
lods
scas
adc
insb
jecxz
dec
rorl
aas
cmpsl
out
push
daa
dec
add
adc
jl
mov
fwait
mov
pop
pop
dec
sub
ss
adc
out
into
movsb
mov
xchg
out
jp
das
cmp
dec
pop
pop
inc
inc
push
pop
popa
pop
mov
mov
lret
stc
out
sarb
cmp
dec
dec
dec
push
inc
bound
dec
push
mov
xchg
cltd
lea
scas
in
enter
cmp
cmp
sub
cs
or
cld
in
out
int3
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
cld
in
out
int3
into
mov
sahf
mov
add
dec
add
mov
pop
lahf
jne
sahf
sti
stos
add
sub
and
mov
into
jns
inc
jge
adc
push
add
lock
jb
and
pop
inc
cmpsl
push
bound
lret
hlt
mov
cmp
mov
mov
cld
add
fs
xor
aaa
das
or
jb
push
lods
push
mov
int3
and
out
sbb
add
fbld
xor
mov
push
mov
and
push
cltd
xor
loopne
mov
fucomp
lret
loop
cmp
adc
cwtl
cmpsl
mov
push
pop
sbb
stos
enter
sub
add
dec
mov
repz
inc
ja
cwtl
fistpll
adc
push
cmp
push
inc
imul
in
fmull
divl
pop
mulb
mov
jecxz
std
inc
pop
sub
push
jnp,pn
jmp
xor
stc
xchg
adc
dec
idivl
out
cmp
jg
xor
xchg
xchg
xchg
dec
pop
mov
push
xchg
ret
dec
fwait
loop
push
sub
lds
lock
fwait
add
xor
mov
das
arpl
add
xchg
stos
jo
vaddsd
call
mov
dec
aaa
inc
cmpsb
mov
push
lret
jne
incb
pusha
or
mov
out
sub
mov
or
jae
nop
test
fldl
add
js
sub
mov
mov
cltd
int3
in
mov
add
xchg
sub
sti
js
xor
push
mov
push
je
pop
stos
in
mov
sbb
jmp
cmp
aaa
jmp
gs
mov
pop
mov
sub
jbe
mov
clc
aad
adc
in
lahf
add
mov
rcll
mov
xor
inc
xor
stos
out
sbb
xor
testb
sub
dec
xchg
mov
push
popf
jl
subb
out
push
sub
adc
or
xor
adcl
repz
mov
pop
inc
dec
repnz
push
aad
mov
push
and
jp
add
jmp
clc
inc
jmp
adc
mov
cmp
enter
adc
hlt
adcl
sbb
imulb
stc
add
cmp
pop
or
mov
sbb
mov
dec
sub
inc
and
xor
inc
mov
jnp
sub
xor
mov
xchg
addr16
ret
dec
gs
ja
pop
int
dec
shl
sub
in
mov
hlt
stos
orl
scas
jecxz
sahf
xchg
xor
movsb
ret
int3
cmp
push
in
test
scas
arpl
jo
mov
and
push
and
and
popf
sub
cli
xchg
inc
pushf
fsubrs
test
popf
popf
cmp
out
cmp
mov
rolb
push
in
push
nop
cltd
shlb
xor
js
add
aam
and
cli
int3
sbb
or
insb
sarl
and
fs
addr16
and
popa
loopne
adcb
lret
jmp
addr16
cwtl
inc
mov
ja
add
pushf
pop
hlt
in
mov
dec
lods
lea
jg
pop
rcrl
out
int
inc
mov
or
push
ret
cmp
sar
or
mov
fldl
mov
cs
js
fwait
dec
scas
cld
ror
js
mov
and
jns
xor
dec
inc
xchg
negb
pop
jecxz
and
mov
movsl
adc
cltd
sar
xchg
jbe
sub
or
aas
sbb
cs
bound
icebp
out
xor
lock
mov
jb
lods
lock
inc
out
test
cmp
mov
testb
sub
push
xor
mov
idivl
jmp
hlt
push
fimull
rorb
pop
popa
cmp
sbb
cwtl
into
jge
adc
mov
or
cmp
pop
mov
or
loop
dec
sub
adc
nop
add
ffreep
dec
rolb
clc
cmp
idivl
jo
pop
cltd
or
cmp
sbb
pushf
mov
call
popa
push
sub
scas
sbb
inc
das
imul
xchg
sahf
cwtl
fldenv
pop
test
adc
cs
les
movsb
lahf
push
sbb
dec
mov
mov
inc
fwait
xlat
cli
mov
sub
js
push
sbb
mov
push
cmp
jle
psrld
sbb
adc
les
sbb
cmp
pop
add
stos
mov
pusha
xchg
dec
scas
pushf
fs
mov
imul
popa
ret
push
sub
lret
and
inc
mov
mov
jmp
xchg
inc
aam
or
cmp
or
sbb
xchg
mov
outsl
xchg
adc
pop
lods
pop
and
icebp
pop
iret
mov
out
inc
mov
mov
repz
iret
sbbl
dec
stos
lods
and
jns
js
pop
mov
jne
cltd
cmp
loopne
stc
mov
out
jle
xor
fidivl
cltd
jmp
mov
cmc
mov
aaa
jb
sub
adc
mov
stos
push
les
fstpt
jl
pop
xor
cmp
sarb
xor
pop
lods
jbe
and
dec
xchg
repz
jae
xchg
arpl
and
les
inc
movsl
jecxz
push
pop
lods
adc
inc
arpl
jae
cmpsb
sbb
leave
push
test
std
and
and
jb
addl
mov
and
xchg
fidivs
or
mov
pushf
mov
ret
mov
sub
lret
aas
xchg
xchg
pop
fs
imull
insb
fisubrl
into
ja
dec
pop
xorl
in
lods
dec
fsubrs
push
imul
pop
stos
lods
pop
pop
dec
inc
cmc
add
lea
int
push
and
dec
orb
cs
into
push
xchg
ret
pop
sub
lods
sub
sbb
push
adc
inc
js
mov
xchg
mov
xor
lods
repnz
sbb
add
mov
adc
inc
daa
imul
push
lcall
pop
enter
aas
dec
aas
bound
cmpl
xchg
mov
mov
pop
lcall
mov
xchg
divb
jae
xor
mov
push
sbb
ja
out
scas
cmpsl
shlb
xchg
inc
filds
fstps
lret
ja
xor
ds
mov
xchg
xchg
call
cmp
cmp
cwtl
movsb
push
enter
cmp
roll
xor
loope
icebp
out
clc
jne
shrl
testl
div
sub
jle
sbbl
aas
or
cmc
xchg
inc
pop
loop
cltd
dec
stos
ds
cmp
or
dec
mov
xlat
jne
int3
lret
pop
or
icebp
and
xchg
inc
jae
mov
dec
nop
cli
xabort
je
and
outsl
and
cmpsl
mov
dec
arpl
dec
aas
mov
fistpll
outsl
dec
pushl
xchg
xor
imul
add
shrl
xchg
jmp
pop
call
lahf
outsl
sbb
lahf
dec
lcall
sub
fistpl
push
mov
je
icebp
js
nop
push
aam
frstor
ficomps
das
fcomip
mov
lods
push
aas
mov
loope
add
pop
sbb
adc
mov
adcl
iret
mov
xchg
dec
pop
loopne
xchg
jle
push
dec
cmc
mov
imul
mov
repz
sub
or
adc
mov
ret
loop
jmp
nop
rcr
push
notb
jbe
add
addr16
cwtl
repz
cmp
clc
outsb
nop
fstps
loope
pop
rclb
stos
adc
cmp
mov
dec
push
or
mov
jno
jge
in
and
out
lret
repz
push
and
mov
lahf
inc
add
mov
jbe
stc
pusha
mov
jmp
sub
arpl
daa
mov
jp
and
cmp
mov
dec
pop
outsl
adc
loope
xchg
jp
pop
jge
insb
fsub
aam
call
mov
ficompl
jo
cmp
int
mov
aaa
mov
or
sbb
ja
push
in
sub
mov
notl
cmp
rolb
ds
mov
push
jb
mov
gs
pop
data16
cli
push
pop
mov
fbstp
xor
fldt
stos
xchg
rol
mov
inc
fucomi
jno
xchg
cmpsl
cmp
cs
inc
cmpsb
lcall
insl
jo
push
mov
dec
adc
icebp
cmp
or
inc
iret
mov
iret
xchg
in
fsubrs
fwait
out
lahf
cli
movsl
jle
jno
sti
ja
push
loope
and
adc
jns
mov
aas
addr16
xor
fwait
les
inc
add
testb
lret
fildll
mov
add
mov
push
mov
std
or
mov
insl
mov
and
inc
or
out
ret
dec
mov
mov
int3
sbb
mov
push
mov
pop
mov
sbb
pop
dec
mov
pop
mov
mov
addr16
rcl
jae
inc
adc
pop
lret
rcrl
es
push
add
jp
mov
loopne
pop
je
fdiv
aas
btc
adc
push
jmp
add
fcoml
fistps
loopne
or
pop
lea
stos
and
fucom
jae
divl
jnp
mov
out
cs
push
dec
or
outsb
cld
inc
std
and
jo
fadds
push
scas
mov
mov
cmp
pop
cmp
fildll
jbe
mov
push
mov
pop
xor
xor
int3
sbb
hlt
cs
add
mov
imul
cmpb
popf
xor
ret
faddl
mov
movsl
xchg
jecxz
add
dec
dec
jg
xchg
ret
fidivl
jmp
cmp
and
mov
adc
push
add
lahf
sub
mov
lea
xlat
pop
inc
cld
imul
lcall
jp
add
jnp
add
adc
or
jecxz
mov
jg
iret
mov
mov
ljmp
fimuls
fildl
lret
sti
insb
sbb
das
js
mov
stos
mov
cmc
repz
mov
loopne
mov
pop
in
andb
jns
xor
cltd
inc
in
cwtl
inc
pop
rcrl
push
adc
out
fwait
mov
pop
fst
es
add
mov
add
aas
icebp
fwait
mov
mov
ja
fiadds
enter
insl
mov
lret
push
sub
lds
hlt
cmpsl
cltd
and
and
shl
and
xchg
rcr
fildll
cmp
mov
push
push
push
das
hlt
rorb
stos
int3
cmpsl
jns
jne
cmp
add
repz
scas
mov
fbld
xor
and
adc
mov
inc
xchg
fnstcw
in
push
and
cli
add
mov
xchg
dec
push
aaa
push
loopne
insl
xchg
jmp
fwait
mov
ja
gs
dec
mov
mov
jne
jecxz
lods
loop
insl
ja
jge
lods
fwait
out
jbe
xchg
enter
xor
mov
cmp
iret
lock
enter
stos
mov
mov
sub
shlb
dec
sub
cmp
in
cmp
jnp
xor
sub
shll
jp
lahf
mov
add
dec
stc
stc
mov
or
les
sub
subb
inc
imul
or
int3
xchg
push
mov
mov
and
pop
inc
adc
ret
daa
dec
mov
imul
push
rcrb
push
cmpb
out
add
mov
jl
cmpsl
jmp
cmpsl
inc
xchg
mov
push
iret
sub
hlt
and
or
pop
sahf
mov
push
in
pop
mov
xchg
push
mov
jge
jno
xchg
icebp
ja
lahf
lret
mov
outsl
shrb
orb
jecxz
sbb
cmpsl
cld
imul
mov
jecxz
xor
sarb
out
mov
mov
pop
in
stc
ret
jo
dec
int3
mov
mov
fwait
shrb
arpl
inc
cmp
mov
push
inc
jno
je
mov
pop
xor
lds
mov
adc
scas
dec
mov
ret
lahf
test
mov
jmp
mov
jne
je
lds
imul
push
cwtl
addr16
imul
push
shll
aam
and
outsl
lods
or
scas
jle
ja
cs
jg
mov
les
inc
or
cmc
mov
shr
in
pop
divl
adc
icebp
repz
incl
inc
dec
add
pop
fnsave
or
mov
xchg
in
les
test
lret
fiaddl
outsb
jb
dec
call
pop
dec
adc
stos
sbb
into
pop
mov
outsb
sbb
in
mov
iret
dec
xor
jno
fildll
inc
icebp
dec
cmp
adc
clc
adc
inc
pushl
xchg
cmpsb
mov
movsl
pop
adc
mov
mov
mov
je
push
sbbl
fidivs
aad
jo
test
xchg
push
test
push
adc
push
popf
mov
inc
or
inc
jo
iret
jg
dec
push
jge
pop
xchg
push
div
negb
mov
test
lret
movsl
dec
call
arpl
subb
mov
xchg
cmpsb
or
push
sub
sahf
add
pop
adc
cltd
setp
and
dec
xlat
inc
lock
xor
movsb
push
push
mov
arpl
iret
leave
jle
call
outsb
xchg
stc
inc
test
push
pop
sahf
js
lds
ja
adc
rorb
into
adc
lret
xchg
adc
xor
sar
adc
xor
mov
mov
pop
test
inc
fldl
push
sub
popa
lods
in
adc
xor
jge
js
andl
js
sbb
pop
js
in
jno
ljmp
mov
dec
imul
andl
ja
add
sarl
xchg
cli
adc
hlt
jbe
sbb
cmp
jo
mov
leave
mov
add
in
cwtl
inc
adc
in
xchg
shlb
movsl
and
jle
jo
pop
out
xchg
add
jae
push
loopne
lcall
daa
out
jnp
in
push
xchg
lret
sbb
into
sbb
mov
mov
lea
popa
push
adc
rcll
jne
push
push
aas
shl
inc
inc
xorl
out
cli
push
mov
cli
std
jg
icebp
je
sahf
pop
cltd
fisttpl
jmp
mov
fwait
movsb
into
push
or
and
sub
cmp
dec
mov
inc
inc
je
shrb
mov
out
aas
std
pop
stc
nop
pop
mov
and
leave
push
sbb
dec
adc
repnz
jl
pushf
jmp
fcoml
cwtl
jnp
jge
dec
dec
sbb
sub
and
adc
test
inc
adc
adc
mov
fildl
or
xchg
and
mov
push
adc
or
adc
mov
emms
and
int3
mov
in
lahf
pop
xchg
add
insb
cwtl
jmp
nop
lahf
jmp
jnp
je
lea
mov
in
sub
loopne
and
stos
xor
test
test
shr
stc
enter
mov
and
rcll
aam
fldenv
imulb
ss
push
push
jo
test
mov
sbb
nop
adcb
sahf
leave
inc
movsl
pop
jnp
inc
icebp
ja
pop
icebp
stc
daa
fistpl
push
push
sub
sub
push
xchg
pop
push
xchg
add
inc
ja
movsl
mov
addl
xchg
ret
xor
fistps
leave
jo
fs
cmpsl
ds
inc
loope
enter
andb
out
mov
fxch
jecxz
mov
xchg
xchg
shrl
or
gs
lods
push
adc
ds
mov
pop
jp
cmpsb
sub
les
rolb
f2xm1
imul
pushf
sti
mov
mov
push
adc
call
fs
mull
dec
mov
jnp
jmp
sub
negl
xor
lock
jae
xor
into
sti
jae
ficoml
dec
repnz
out
cmp
pop
jle
jp
call
repz
jb
test
sbb
call
fidivrl
inc
mov
popf
repnz
sarl
sub
les
dec
fldenv
in
cmp
fcomps
pusha
fmulp
ds
jo
int3
jns
xorb
push
mov
mov
sub
mov
inc
push
or
rolb
adc
lds
call
xor
inc
imul
je
test
sub
adc
enter
lcall
cmp
and
out
push
inc
mov
fwait
and
cltd
repz
lahf
dec
cmp
and
dec
lret
dec
jp
sub
push
js
cmp
rcl
sbb
or
repnz
lea
repz
fdivrp
repnz
xchg
cld
ds
inc
roll
arpl
in
sub
rcr
jnp
xchg
xor
jl
lcall
ror
shll
jbe
mov
out
sbb
mov
in
mov
inc
call
lock
mov
mov
cmp
jmp
adc
pop
das
subl
sub
pop
testb
sahf
out
mov
std
or
push
add
adc
mov
pop
addl
adc
loope
out
cwtl
iret
push
xor
movsb
xchg
and
push
repz
aad
dec
popa
rcrb
jle
imul
adc
rcll
or
sub
pop
loop
leave
pop
and
push
pop
fdivl
mov
ss
testl
or
cmp
sub
aaa
cmp
adc
mov
out
cmp
fnstsw
loope
arpl
lods
push
fisttpll
sbbl
es
jno
add
lods
ljmp
push
sub
lahf
mov
in
psrad
adc
fisttpll
adc
sbb
in
jp
es
xlat
cmp
xor
and
inc
or
jmp
adc
sti
cwtl
test
lcall
hlt
or
js
mov
dec
pop
stc
je
jmp
pop
mov
popl
cmp
pop
adc
mov
add
lret
insb
sbbl
sti
incb
jno
loop
mov
outsl
inc
cmp
inc
push
push
fisttpl
xchg
pop
pop
adc
add
and
xchg
or
xor
pushf
mov
mov
dec
pop
repz
inc
cmp
adc
mov
loopne
push
notb
push
xchg
test
inc
sbb
or
dec
stc
in
or
cmpsl
movsl
mov
jns
and
bound
push
jb
ljmp
ret
mov
cmpl
pop
jo
and
and
push
push
dec
dec
push
sbb
ret
fcomip
lcall
je
outsl
sub
and
xchg
mov
adc
adc
xchg
sbb
imul
test
inc
cmp
test
jg
rcl
mov
call
cmp
add
mov
xchg
dec
add
movsb
andl
mov
add
cltd
leave
sbb
ret
addl
jmp
dec
lods
inc
in
xchg
sbb
sub
and
cmpsl
rolb
lds
mov
xlat
adc
stos
out
cmp
mov
pop
lret
push
jle
insl
and
push
bound
dec
pop
xchg
add
repz
or
adc
cmpsb
adc
js
dec
jl
and
jecxz
jb
lahf
popf
icebp
movsb
xor
adc
dec
fwait
shlb
iret
dec
mull
mov
imul
fisubl
push
daa
fmull
inc
xor
fisubrs
and
ja
lea
rorb
iret
int
push
mov
jge
jg
xor
hlt
push
push
cltd
pop
push
fists
xor
mov
pop
push
adc
sahf
cmp
subl
dec
pop
decl
enter
cmc
mov
xor
xchg
fldl
jae
mov
pop
sbb
call
and
out
enter
jb
and
sti
jo
and
enter
pop
les
mov
xor
gs
lock
add
xor
or
inc
leave
inc
sub
sbb
sahf
xchg
ficoml
push
xchg
add
dec
adc
mov
inc
lret
inc
fdivs
xchg
push
sbb
popf
cmp
jb
push
sbb
push
inc
in
add
push
add
lahf
add
addb
jb
pop
dec
cmpl
jge
fnstenv
jo
outsb
jnp
dec
dec
cmp
sub
sbb
or
cld
in
out
int3
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
cld
in
out
int3
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
cld
in
out
fcomp
int3
into
mov
sahf
mov
outsb
push
dec
dec
cmp
sub
pushf
push
mov
add
adc
int3
mov
arpl
jno
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
adc
and
xor
dec
shll
loopne
hlt
test
xchg
cmp
aam
in
hlt
push
add
adc
and
xor
inc
loopne
lock
xchg
xor
or
in
hlt
push
add
adc
and
xor
inc
rclb
lret
test
xchg
adc
popa
lcall
xor
icebp
push
roll
add
push
or
inc
adc
dec
iret
insb
inc
out
dec
mov
mov
mov
mov
jnp
aas
subb
fistpll
inc
cmp
das
in
or
in
fnstcw
sbb
lcall
add
out
fs
pop
mov
mov
mov
inc
hlt
inc
rcrb
test
sub
xchg
adc
jne
std
in
imulb
jbe
dec
dec
jge
outsl
call
pop
icebp
add
xchg
add
mov
cmp
gs
loope
sti
pop
sub
arpl
aam
mov
mov
rcl
jae
pusha
pop
icebp
jp
or
xor
pop
sub
nop
and
xor
inc
loopne
lock
xchg
cwtl
movsb
add
in
hlt
bound
jge
inc
in
push
cld
sub
popf
add
nop
inc
movsl
fdivs
daa
mov
cmp
out
divb
cld
add
je
loope
xchg
inc
in
icebp
and
and
jo
dec
in
xor
lock
xchg
xor
aam
in
hlt
push
add
adc
and
xor
inc
loopne
lock
xchg
xor
aam
in
hlt
push
add
mov
lahf
std
adc
xchg
stc
out
in
outsl
jecxz
ss
out
dec
xchg
and
add
call
std
sbb
cmp
and
push
int
hlt
ret
sbb
pop
scas
pop
inc
sub
mov
push
outsl
pop
dec
jle
sbb
aad
add
aas
aaa
out
fs
xchg
cmpsb
jnp
cmp
adc
or
xor
popa
and
mov
imul
sarb
inc
mov
arpl
mov
loop
cmp
adc
xchg
std
divl
inc
clc
xor
xor
enter
scas
mov
into
sbb
xchg
push
inc
das
and
cmpl
xor
rcll
inc
push
outsb
dec
jae
inc
xchg
adc
decb
inc
and
add
dec
lret
cltd
js
jmp
add
inc
movsb
add
enter
inc
sbb
sub
pop
sbb
adc
add
ds
mov
inc
ds
fdivr
stc
xor
jae
ds
fcmovnu
jle
icebp
dec
mov
cmp
jg
aad
mov
sbb
and
add
out
hlt
ret
loop
dec
addr16
cmp
shrb
into
scas
fstpl
push
jp
sahf
aas
icebp
jae
in
push
mov
add
ret
sbb
les
enter
pop
es
addr16
addl
scas
cmp
subb
sbb
imul
sub
jmp
mov
pop
pop
lret
add
sbb
xor
jecxz
in
push
jge
or
pop
notl
xchg
and
daa
loop
xchg
stos
adc
mov
nop
mov
push
inc
test
mov
in
repnz
adc
mov
push
add
jo
adc
push
loopne
mov
orb
jecxz
nop
sbb
lcall
dec
add
adc
jns
dec
mov
lret
faddp
fwait
loope
ss
sub
inc
cmc
or
sbbl
test
sub
in
mov
sarb
push
ret
pop
dec
insl
add
xor
mov
outsb
clc
add
add
loop
push
xchg
rol
subl
cmp
loope
mov
mov
gs
pop
jle
cmp
xlat
insl
push
loopne
lret
xchg
xor
xchg
jmp
inc
fdivs
in
aaa
jno
cmpsb
pop
cmp
jmp
pop
jge
outsl
inc
dec
hlt
daa
mov
in
jno
repnz
fsubl
movsl
repnz
aam
dec
xchg
cmpsb
pop
in
cmp
inc
cmp
jb
das
lods
mov
jnp
cmp
pop
pusha
adc
dec
mov
mov
xchg
aaa
xchg
gs
inc
mov
mov
test
push
mov
and
pusha
pop
sub
lret
add
jl
sbb
int3
sbb
mov
push
add
lods
mov
cmp
push
aas
mov
inc
dec
add
dec
sub
fcmovnu
fmul
xchg
call
or
insb
inc
adc
loopne
lcall
mov
inc
mov
dec
or
popa
xchg
sub
sbb
or
inc
gs
push
lret
rclb
test
mov
sbb
cmp
mov
rol
sub
je
mov
inc
mov
pop
repnz
or
cmp
cmp
inc
out
sub
shlb
xchg
lahf
lods
xchg
dec
out
sub
push
mov
dec
les
mov
xor
mov
imul
sbb
dec
xchg
xchg
mov
decl
mov
jnp
adc
jns
inc
jecxz
xorb
push
insb
into
cli
repz
stos
fistpl
repz
xchg
and
cmp
jg
ror
mov
aas
push
outsb
divl
xchg
aaa
pushf
add
arpl
xor
xor
and
into
out
popf
cmpsb
xchg
xchg
sub
lock
sbb
xchg
int3
jle
add
orb
cld
in
shll
sub
mov
test
leave
sub
jl
mov
xor
mov
push
adc
cmp
inc
pop
push
mov
xchg
sub
stos
push
repnz
dec
mov
addr16
jg
cmpsl
sub
addr16
js
dec
dec
jl
xchg
push
sub
in
xchg
cld
mov
push
jl
daa
push
inc
fcompl
sbb
xlat
fsubs
mov
xchg
mov
mov
je
test
mov
xchg
das
fwait
addr16
cmpb
xchg
sti
mov
or
push
add
in
popa
enter
or
mov
sbb
rcl
sbb
cmp
dec
add
fstl
ja
add
popf
fdivrs
insb
cli
shr
gs
xchg
in
sbb
int
int3
call
mov
add
in
lret
mov
mov
xor
mov
dec
inc
test
pop
xchg
repnz
xchg
dec
imul
shrl
jecxz
push
lods
push
pop
lods
stos
jns
stos
mov
pop
stc
jnp
cmp
push
mov
push
ds
andl
push
test
add
test
pop
cmp
lods
cmp
movsl
xchg
nop
ret
adc
bswap
or
sbb
inc
jge
and
cmp
add
sub
push
dec
mov
add
shll
hlt
dec
fs
inc
xor
sti
push
adc
sub
dec
mov
stos
mov
outsb
mov
sbb
shl
dec
mov
or
sub
fsubs
or
xchg
cmpsl
mov
push
pop
cld
rorb
pop
lds
in
inc
mov
stc
and
pop
jp
call
fcomps
push
lods
insl
in
pop
pop
andl
push
or
sbb
mov
bound
sbb
repz
mov
in
rcrb
orb
add
or
jne
mov
mov
add
mov
popf
push
lds
clc
addb
leave
in
pop
jb
lock
xchg
pop
mov
xor
pusha
icebp
outsb
cmc
cmp
lret
adc
mov
popf
lods
push
jb
or
hlt
scas
pusha
mov
mov
outsl
push
sbb
mov
clc
cli
inc
mov
sbb
les
or
sub
enter
js
int
test
ljmp
in
mov
xchg
mov
cmp
push
jge
xchg
and
and
inc
pop
xchg
out
daa
lret
movsb
rcll
xor
lahf
lret
push
pop
mov
xchg
hlt
bound
or
mov
jmp
xchg
fs
test
mov
mov
inc
add
outsl
test
add
clc
das
jno
cmc
in
cmpb
jmp
outsb
stos
es
add
mov
jl
cmp
aaa
push
fcomip
lcall
insb
mov
xor
pop
cmp
arpl
sti
ret
sub
lock
mov
push
cld
jb
or
xchg
mov
fcmovnbe
push
and
arpl
arpl
iret
cmpsl
jns
and
sbb
lcall
dec
jg
dec
ret
leave
das
repz
xor
mov
mov
sub
sbb
mov
inc
ficompl
cmp
insb
adc
adc
call
lar
in
es
jnp
subb
arpl
cltd
loope
bound
cmpsl
loope
lret
or
mov
mov
in
lcall
call
cwtl
ja
or
ss
mov
xchg
adc
jmp
in
xor
and
rcll
rcl
mov
mov
ret
call
jae
inc
sub
jp
mov
adc
push
sbb
cld
push
sub
aam
jne
or
dec
mov
in
fsubl
fisubrs
sub
pop
sbb
mov
jb
mov
jns
movsb
mov
xchg
neg
cmp
cli
insl
outsl
aas
adc
daa
imul
fmull
xchg
ret
test
fwait
xchg
insl
addb
mov
leave
lret
push
xchg
ljmp
sti
fnstcw
jle
sahf
jg
fldt
cmc
sub
neg
xor
out
aas
jne
enter
sbb
pop
in
enter
les
mov
negl
call
loop
pop
scas
xchg
dec
cmp
repz
shl
das
mov
lret
std
insb
lret
jbe
jp
clc
lcall
pop
out
call
insb
mov
jp
add
xlat
sti
cmp
mov
xchg
imul
xchg
mov
js
shl
fstl
insl
fnstsw
adc
cmovns
loope
mov
sbb
xchg
aaa
jae
mov
js
jg
lret
in
rclb
adc
call
mov
push
ret
in
ja
adc
aam
ss
and
mov
or
sub
ja
sub
insb
loop
fcomp
std
pop
ja
add
sub
mov
xor
push
xor
xchg
out
inc
lea
xchg
pop
daa
rcrl
jge
jnp
jbe
cltd
insl
mov
jbe
lahf
imull
ror
cmc
cmc
ss
test
jge
scas
stos
int3
jg
mov
xlat
enter
aam
jle
xchg
outsb
sahf
daa
clc
push
jge
inc
inc
sub
insb
stos
test
dec
lcall
pop
mov
and
in
sbb
inc
xchg
negb
into
repnz
fisubrl
jns
negl
leave
mov
sbb
jge
jne
or
jp
sub
push
lret
test
cmpsb
data16
fldt
mov
lods
push
popa
clc
and
es
sub
xchg
idiv
fisubl
lods
and
pop
in
clc
xchg
divl
nop
jmp
call
jp
mov
mov
mov
sahf
inc
lds
sbb
shlb
stos
jg
loopne
jg
or
clc
push
push
xchg
ds
mov
dec
fildl
cmp
scas
std
lock
cmp
inc
add
fisubrs
cs
jbe
xchg
into
lahf
lods
pop
jb
xor
dec
mov
mov
movsl
xchg
sbb
sub
inc
das
push
rol
mov
push
sbb
sarb
insl
xchg
std
fwait
mov
daa
and
sub
cmp
sbb
mov
fimuls
aad
mov
inc
sti
mov
jae
in
sbb
mov
addr16
in
fstpl
mov
clc
push
cs
and
cmp
fnstsw
out
je
fwait
pop
fs
pop
xchg
outsl
add
xor
pop
jle
cmp
cltd
push
sbb
mov
mov
outsl
mov
aad
rorl
inc
jns
ja
es
enter
int
cmp
in
or
outsb
sete
out
cmp
cmpsl
stc
mov
imul
in
das
pop
mov
ss
subb
in
test
shl
test
out
add
xor
jo
ss
or
xor
out
lret
push
fiadds
or
insl
fld
inc
cltd
loopne
mov
jg
mov
arpl
add
cmp
mov
jno
shrb
add
cld
data16
jp
scas
mov
pop
rcl
dec
and
add
adc
pop
out
testl
push
mov
push
pop
push
dec
iret
das
fimuls
jecxz
adc
fwait
xchg
mov
js
xor
in
jl
pop
gs
adc
popf
xor
scas
jmp
mov
mov
mov
fsubs
jmp
cmp
cmp
or
pop
or
pop
fdivrs
sbb
jecxz
cltd
lret
cmp
lods
sub
leave
push
mov
xchg
fistl
mov
inc
pop
jmp
jo
push
fsubr
cmpsl
cmp
mov
cltd
cmpsl
lods
jmp
shlb
push
sbb
cmpsl
cs
push
dec
mov
popf
clc
stos
sti
jno
jmp
out
gs
pop
cmp
ret
jno
movsl
mov
sub
sahf
lock
push
pop
nop
jge
mov
jmp
out
mov
ja
push
sbb
inc
push
adc
fsubp
cwtl
push
add
push
aaa
push
mov
test
push
jle
repnz
xchg
push
lret
lret
dec
pop
lods
xchg
mov
xor
mov
popf
push
cmp
or
or
pushf
loop
push
fisubrl
lods
pushf
pop
js
xchg
repz
sbb
dec
jg
push
rcl
jp
pop
das
sbb
les
mov
out
jmp
cmp
push
mov
enter
fidivl
and
xor
sbb
push
stos
or
ss
sub
call
dec
dec
into
call
pop
pop
pop
popf
add
shl
and
popa
fistl
arpl
out
popf
ret
pushf
daa
ret
in
js
fstl
fwait
dec
xchg
or
mov
addl
popf
mov
xlat
and
pushl
aas
pop
xor
aaa
subl
push
sbb
fcompl
add
mov
push
mov
xchg
lds
rcrl
push
lods
and
mov
adc
pop
mov
push
aad
cmpsl
push
cld
mov
outsl
pop
aam
pop
fmul
sub
push
pop
sub
sti
scas
dec
cmp
out
stos
sub
into
jp
ret
loop
add
or
xchg
in
cmp
fdivrp
mov
xor
lods
icebp
jmp
inc
sub
xor
out
imul
shl
jb
add
jp
in
in
xlat
push
into
jne
push
sub
xchg
adc
xchg
sub
enter
int
sti
sbb
dec
gs
stos
jo
aaa
test
sub
ss
dec
adc
add
sbb
mov
pop
fdivrp
hlt
dec
bound
pop
sbbb
add
rcll
aad
nop
lock
ret
scas
movsb
jle
or
inc
js
xor
pop
ss
xchg
push
stos
pop
sub
sbb
cli
es
cmp
sti
imul
mov
loope
shrb
mov
icebp
inc
xlat
pop
xchg
xchg
rcrl
in
cld
jge
xor
adc
test
pop
insb
inc
sbb
pop
sub
mov
fcomps
xor
xchg
mov
sub
fimuls
pop
rclb
xchg
mov
pop
jle
xchg
dec
push
or
sub
xor
idiv
lcall
lahf
sub
xlat
jl
pop
jne
jle
int3
lret
add
lahf
lcall
sbb
or
sbb
xor
scas
cvtps2pd
scas
imul
mov
pushf
push
rcll
pop
xor
dec
scas
xchg
scas
or
es
add
jl
jle
pop
pand
xor
int3
add
xor
cmp
lcall
fcompl
in
mov
pop
subb
test
and
xor
sti
adcb
dec
out
setne
stc
dec
loop
add
fldcw
mov
mov
enter
mov
mov
mov
pop
sbb
js
je
insl
sub
mov
or
mull
stc
popa
jnp
adc
push
sub
mov
add
cmpb
out
rep
mov
loopne
add
repnz
jg
aad
inc
and
adc
adc
lcall
fst
rcl
fst
call
jnp
mov
sub
dec
loope
pop
imul
xchg
leave
adc
pusha
cmc
repnz
and
and
ret
push
lcall
shll
pop
aad
jge
mov
adc
lret
and
mov
lock
sahf
test
lods
das
enter
cmpsl
pop
inc
jo
xchg
repz
je
adc
subl
xchg
es
jle
cmp
pop
fcompl
xchg
scas
and
adc
loop
fidivl
jo
cmp
mov
les
enter
in
inc
icebp
repnz
rcrb
pushf
jmp
push
adc
mov
push
stos
outsb
xor
ja
push
xlat
xchg
daa
mov
push
int
cld
fldl
imul
loopne
mov
jns
popa
adc
mov
stos
mov
imul
andb
mov
xor
mov
mov
lods
das
in
fisttpll
lret
hlt
push
or
daa
lods
pop
mov
cmp
mov
insb
mov
pop
or
mov
xor
inc
cmc
fmul
lahf
test
add
ds
retw
mov
mov
mov
call
aaa
push
fdivrp
mov
stc
adc
mov
popa
mov
popf
cli
mov
popf
push
push
xor
mov
lea
mov
jns
js
sub
stos
adc
out
sbb
rorb
mov
and
sbb
sbb
xorl
push
and
aas
sbb
jbe
pop
ret
cli
ret
fstpt
push
mov
and
rcr
ret
mov
adc
mov
mov
mov
mov
imul
in
pop
cmp
sbb
dec
sub
jnp
fstps
cmp
adc
jno
sti
mov
aad
cmp
mov
dec
pop
pop
stc
fildl
in
and
pop
jbe
in
test
jnp
mov
insl
outsl
mov
pushf
add
ret
rol
jle
sub
lret
mov
repnz
xor
or
hlt
inc
scas
aaa
mov
sub
fs
rcrb
mov
jle
pop
in
lock
popa
cmp
insl
in
je,pt
push
sub
mov
out
neg
sub
sbb
ja
les
sbb
mov
pop
mov
inc
add
adc
test
sub
ret
dec
mov
and
sub
fwait
and
movsl
pop
mov
or
or
push
mov
sbb
addr16
jae
push
faddl
cmp
inc
jle
push
jae
stc
or
mov
xchg
adc
mov
out
mov
insl
xor
in
push
or
jo
call
pusha
data16
mov
cmc
leave
insl
pop
adc
or
or
pop
push
mov
pop
test
adc
or
xchg
sti
sub
into
add
scas
xchg
sbb
mov
enter
out
out
inc
dec
jmp
fcmovb
push
xchg
lods
mov
pop
mov
lret
fs
add
xor
popa
dec
or
lcall
mul
cld
sbb
mov
lret
scas
xchg
stos
lahf
mov
dec
sub
add
jp
dec
test
or
xor
pop
sub
mov
and
sbb
dec
loopne
dec
inc
popf
cmp
jp
jnp
cld
jecxz
cmp
jecxz
adc
mov
cwtl
cmp
sub
or
imul
jne
into
push
mov
and
and
mov
fisubs
adcl
and
push
iret
xlat
inc
or
mov
cmc
jg
mov
xor
mov
cmp
pop
push
push
movsl
jb
mov
jp
or
mov
lcall
push
inc
adc
adc
dec
imul
pop
and
jle
add
jp
sar
neg
inc
bound
mov
adc
bnd
adc
and
mov
and
jecxz
xchg
inc
popa
pop
mov
fmull
fadd
cltd
roll
divb
lds
pop
shr
pop
mov
shl
inc
pop
mov
jl
cld
fwait
cmp
arpl
shll
cmp
mov
sbb
repz
mov
pushf
xor
mov
adc
pop
jg
sbbb
lea
addr16
stos
lahf
inc
sahf
adc
pushf
arpl
dec
test
add
cs
pop
subl
xchg
mov
sbb
xchg
mov
stos
lock
test
sub
mov
mov
cli
outsl
iret
test
xor
enter
adc
jae
loopne
insw
sbb
mov
dec
repnz
out
ret
cmp
cmp
dec
and
mov
mov
test
ss
mov
out
enter
cwtl
adc
sub
inc
push
ja
xchg
call
jb
in
mov
jns
scas
cmpsb
jb
push
das
shrl
sub
xor
mov
sub
push
out
mov
lret
jl
cs
or
adc
rcll
add
sbb
lods
shl
dec
add
xchg
idivb
insl
call
test
mov
adc
das
pop
mov
inc
cltd
and
outsl
test
jecxz
cmp
sbbb
pop
sbb
inc
scas
lods
xor
dec
xchg
loopne
adc
push
ss
mov
lds
cmp
test
aam
xchg
inc
cltd
sub
sbb
and
cwtl
test
pop
scas
sbb
xorb
mov
test
inc
loopne
lock
xchg
xor
aam
in
hlt
push
add
adc
and
xor
inc
loopne
lock
xchg
xor
aam
in
hlt
push
add
adc
and
xor
inc
loopne
fwait
les
and
les
in
hlt
mov
inc
adc
and
xor
inc
loopne
lock
je
test
xchg
lcall
pop
or
cmp
sub
push
fadds
call
out
ljmp
mov
jns
or
sbb
idivb
out
push
fadds
call
push
cwtl
push
test
mov
xchg
js
enter
sub
cmp
enter
call
dec
cwtl
pop
test
mov
movsl
add
js
or
push
mov
push
xchg
inc
inc
sahf
adc
sub
loope
mov
dec
jns
cmp
adcb
mov
cwtl
mov
mov
mov
fnstsw
out
pop
divl
mov
cwtl
mov
insl
out
add
in
insl
and
cmp
or
push
jae
jg
idivb
mov
or
jne
push
lea
add
js
dec
adc
imul
pop
inc
stos
or
stc
or
pop
push
rcll
std
push
mov
dec
add
js
cmp
jmp
jae
dec
fsubrl
and
test
xchg
dec
push
pop
pop
xchg
es
hlt
mov
push
call
push
cwtl
inc
test
mov
sahf
push
into
sbb
sub
cmp
mov
lods
je
push
xchg
inc
mov
int3
sbb
xchg
add
or
jle
lods
jg
outsl
lea
dec
mov
or
add
push
sub
sarl
or
dec
xchg
lods
push
fadds
xchg
arpl
gs
inc
test
mov
xchg
js
or
sbb
sub
cmp
enter
call
push
cwtl
inc
test
mov
xchg
js
or
sbb
sub
cmp
enter
jne
xlat
and
fstpl
jns
punpckhwd
scas
inc
icebp
mov
imul
dec
fildl
rolb
sti
xchg
insb
cmp
jne
add
orl
lret
sbb
push
mov
out
jmp
div
cmp
mov
stos
in
jne
or
inc
dec
mov
cli
inc
negb
lea
push
call
mov
jmp
jno
imulb
adc
in
jbe
xorl
ss
aam
xchg
cmp
icebp
fidivrl
sti
rcrb
jg
mov
rcrb
test
sbb
cmp
loop
jbe
jo
cmc
bound
push
aam
inc
dec
rclb
repz
incb
je
mov
adc
pusha
cmp
fwait
xor
and
xlat
ss
push
in
outsb
jno
movsl
jno
push
cli
lret
or
imul
leave
mov
cmp
xlat
insb
ja
ficompl
lret
mov
clc
lods
sub
jl
sbb
les
push
fimull
aaa
les
mov
into
push
push
movsl
into
call
pop
push
inc
mov
arpl
jo
inc
gs
jae
fnstsw
xor
jp
dec
je
push
fbstp
mov
rorl
fldl
xchg
sbb
mov
mov
and
enter
fwait
adcb
adc
dec
lds
dec
pop
sahf
cmp
jle
sahf
cmpsb
int3
ljmp
and
sbb
ret
pop
icebp
adc
int
pusha
jns
cmp
jecxz
dec
fninit
mov
mov
and
das
stos
dec
lock
into
cli
push
jnp
and
je
inc
mov
lods
mov
fsubrl
and
pusha
add
aad
sub
loopne
subl
add
cmp
mov
mov
enter
xchg
sub
stos
leave
sbb
ret
movsl
dec
repz
push
push
sub
adc
or
add
data16
or
xor
pusha
sahf
inc
pop
mov
push
cmp
int
sarb
pop
mov
and
jp
mov
rcrl
orb
in
cs
mov
cmp
mov
std
and
aaa
jo
xor
mov
mov
pop
fidivs
pop
lods
add
xor
xchg
sbb
cltd
clc
out
push
fisttpl
sbb
mov
lods
push
add
rorl
out
mov
test
inc
sbb
push
dec
jb
mulb
xor
mov
mov
xchg
bound
dec
lock
cli
js
jmp
and
enter
xor
je
mulb
out
iret
sbb
js
push
fbstp
inc
addr16
push
jbe
add
mov
push
pusha
xchg
jae
push
pop
lods
and
mov
mov
dec
int
inc
stc
out
test
jo
setge
aam
das
hlt
daa
adc
ja
sbb
pop
lea
in
or
xchg
mov
icebp
push
loopne
mov
jl
out
jbe
jecxz
jae
test
adc
loope
dec
std
lcall
or
icebp
sbb
xchg
inc
xchg
dec
movsb
pop
mov
xchg
jnp
inc
and
loop
mov
push
jbe
iret
pop
cwtl
jbe
loope
sahf
sub
xchg
xchg
cmp
lds
lods
mov
les
or
call
fcoms
and
sbb
xor
cmpsb
xor
and
mov
mov
adc
or
jge
inc
cltd
test
xchg
call
sarb
ret
adc
cmpsl
outsb
mov
xor
in
cmpsl
incl
mov
mov
and
pop
sbb
pusha
add
mov
gs
lea
pop
mov
push
js
int
gs
and
cwtl
aad
sbb
dec
dec
sbb
xchg
cld
mov
lods
jae
xor
jge
js
stc
ljmp
jmp
bound
loope
mov
lock
add
out
and
outsl
inc
xor
pusha
mov
jg
push
icebp
sub
repnz
aad
lcall
jecxz
mov
clc
addr16
and
jge
mov
jle
jle
push
xchg
movsb
popa
movsb
add
inc
popf
sub
or
mov
lods
loop
lahf
pop
pop
call
jno
mov
lds
xchg
ret
lea
aas
loope
icebp
lods
outsl
dec
dec
mov
stos
int
call
sub
pushf
loopne
enter
int
in
mov
les
mov
push
mov
insb
dec
jno
mov
int
add
addr16
add
jmp
push
pusha
or
inc
jl,pn
insb
inc
ds
add
test
test
pop
or
mov
xor
cmpsl
mov
lcall
sub
cmp
jecxz
xor
test
adc
int3
repnz
jg
xor
push
and
aad
adc
inc
and
lcall
lods
scas
mov
lcall
out
in
pop
inc
das
or
mov
mov
andl
andl
scas
aaa
pop
sbb
shlb
ds
je
es
and
movsl
mov
fsubr
ljmp
fcomip
mov
sub
add
jo
sbb
inc
inc
xor
and
mov
adc
roll
mov
xchg
cmpsb
cmpsb
dec
mov
rcll
lahf
mov
adc
push
test
dec
fcmovbe
arpl
arpl
fimuls
cmp
pop
sub
pop
pop
pop
lea
sub
cli
adc
fbld
fimuls
lods
pop
aaa
jmp
outsb
add
nop
xor
daa
pop
int3
fbstp
dec
or
out
fsubrs
int
in
push
mov
xchg
fcmovbe
mov
aam
xchg
lock
out
pop
jb
push
mov
je
push
push
jge
jp
push
clc
sbb
fcoms
jb
lret
mov
rol
jle
ret
dec
rol
mov
push
add
jo
sbb
jns
pop
ds
mov
pop
iret
sar
fs
cmpsb
es
inc
fadd
add
dec
cmp
jnp
push
cld
outsb
push
cmpsb
xchg
mov
push
and
or
outsl
shll
lcall
jae
push
filds
lcall
adc
std
mov
cli
leave
push
xchg
or
ja
iret
adc
cmp
push
sbb
mov
xchg
in
cmpsb
fildl
dec
js
jno
push
clc
mov
imul
inc
xchg
clc
add
inc
mov
or
jne
leave
pusha
sar
outsb
jbe
xorl
xchg
xchg
cld
inc
hlt
mov
mov
xchg
mov
cmpsb
push
out
and
push
xor
sub
cmp
pop
ret
mov
cmp
xor
push
in
sub
pop
inc
mov
xchg
jne
aam
lods
dec
pusha
xor
xor
lahf
mov
aad
outsb
out
mov
dec
insl
pop
outsb
pop
or
adc
fisubrl
jae
jp
adc
jno
cld
aaa
cld
jo
rcl
cmp
repnz
xchg
mov
mov
mov
jne
lds
test
jecxz
cs
adc
jno
fdivs
jmp
or
mov
mov
iret
and
xchg
out
imul
idivb
push
call
les
sbb
dec
pop
add
test
jnp
pop
repz
cmpsl
mov
ret
cltd
xor
sahf
leave
inc
call
stos
lea
dec
nop
lds
insl
xchg
mov
mov
out
jp
rcr
fisttpll
mov
sub
push
or
pop
insb
mov
push
lds
push
pop
push
outsb
mov
data16
fwait
adc
jo
call
inc
xor
js
fildll
dec
mov
cwtl
mov
fcoms
out
vsubss
scas
hlt
xor
mov
push
and
push
ret
jno
pusha
insb
and
push
push
jge
cltd
ds
stc
inc
mov
fwait
cli
mov
add
loop
lcall
sahf
xor
test
test
xor
jbe
pushf
rorw
mov
cmp
push
dec
jbe
push
aaa
inc
cmc
mov
jg
adc
sbb
dec
xchg
mull
sub
xorb
jp
rcrb
fs
cmc
rcrl
js
jmp
sub
fbstp
hlt
adc
subl
pop
jecxz
add
cmp
push
push
inc
mov
and
flds
fdiv
pop
js
push
into
aad
movsl
xchg
ja
jnp
pop
stos
pop
sbb
lea
jne
and
ss
inc
pusha
add
imul
xor
ljmp
aaa
adc
hlt
jns
fldcw
inc
sbb
cli
icebp
sub
jge
lea
sub
into
dec
pop
lcall
jno
adc
adc
mov
xor
lahf
xchg
lret
mov
jmp
xor
test
mov
int3
fwait
push
in
and
xor
sbb
xchg
repnz
adc
mov
cs
in
or
or
xchg
in
cmp
cmp
pop
das
push
inc
pop
jne
mov
mov
mov
outsb
and
push
cmp
mov
sub
rclb
mov
jno
sarl
sbb
inc
jns
arpl
push
in
add
or
or
ljmp
jl
sarl
cmp
dec
sti
sbb
fneni(8087
ljmp
das
test
push
data16
iret
pop
jecxz
xor
loopne
jp
push
test
xchg
icebp
and
inc
test
and
adc
hlt
push
sub
push
mov
mov
xchg
jbe
push
in
xchg
dec
popa
fimull
cmpsb
pop
jg
inc
les
jmp
fs
sub
int
ret
jb
rorl
jge
adc
push
inc
xchg
mov
je
mov
arpl
jmp
loop
lahf
outsl
insb
arpl
test
jl
push
lods
inc
cmp
aam
notl
dec
jg
mov
scas
fcomi
xchg
mov
int
inc
ss
add
shll
push
and
and
pop
loop
daa
stos
push
lret
dec
scas
xchg
mov
sahf
cltd
shll
jmp
jp
push
and
sub
das
loopne
xor
adc
push
fsubrs
xchg
cmpsl
cmpsb
and
clc
mov
pop
or
push
or
lods
loopne
mov
ret
les
mov
ret
add
sbb
dec
test
jbe
outsl
push
and
shl
jno
hlt
inc
lods
imul
test
je
sub
and
xorl
je
adc
repnz
xchg
movsl
adc
mov
sbb
mov
and
leave
sub
jecxz
xchg
outsb
pop
pop
mov
mov
push
pop
add
fadds
test
mov
hlt
or
or
or
dec
jg
sbb
gs
repnz
outsl
jo
lret
xchg
aaa
imul
mov
mov
push
inc
mov
adc
insl
ljmp
cs
stc
dec
mov
jns
dec
stos
mov
mov
pop
clc
cwtl
loope
inc
ljmp
subb
cltd
into
mov
lds
int
jecxz
cmp
repz
push
push
dec
lea
cmc
push
lahf
jnp
and
add
and
pop
stos
out
or
shlb
scas
icebp
and
lods
outsb
jns
lds
mov
xor
xor
fldl
add
mov
dec
stos
sbb
jmp
shl
hlt
jl
daa
inc
in
dec
mov
xchg
cmp
scas
movsb
outsb
and
mov
inc
cmp
mov
cmp
sbb
lds
dec
xchg
imul
or
add
push
and
fwait
adc
push
aas
and
cmpsb
outsw
cmc
ss
or
xchg
iret
rcl
sub
sbb
sbb
fistpll
pop
cwtl
shlb
and
adc
add
pop
rcll
outsb
push
dec
aam
lcall
mov
push
sbb
arpl
mov
add
xchg
outsb
push
dec
jl
enter
add
and
pop
push
stc
rolb
fisubrl
mov
mov
out
jmp
pop
shl
insb
stos
mov
cld
adc
dec
aas
push
and
fsubl
in
inc
inc
inc
fdivrs
iret
mov
mov
loope
ror
divb
sbb
and
push
xchg
mov
pop
xor
mov
cmp
ror
add
loop
icebp
jle
or
jns
hlt
sti
fadd
call
js
mov
xchg
lds
cmp
sub
pop
cli
add
lahf
jns
in
mov
and
hlt
add
push
xor
mov
push
int
add
leave
mov
mov
xor
adc
movsl
fstl
push
add
scas
cmp
push
in
shll
xor
pop
push
pop
pushf
nop
mov
jb
outsb
adc
xchg
mov
and
std
mov
dec
fsubrp
stos
loope
mov
jmp
ror
jno
test
dec
shr
xchg
fisttpl
inc
pop
xor
int
call
aam
neg
and
pop
fcmovbe
outsb
push
dec
mov
mov
vpmacssdqh
xchg
lahf
arpl
mov
mov
inc
push
xor
ljmp
pop
inc
sbb
cmp
pop
mov
sub
fdivrs
ja
mov
mov
jp
rol
loope
dec
jb
cmpsl
mov
sarl
push
bnd
pop
stos
push
lret
andl
mov
jbe
mov
shr
jb
mov
je
les
sub
push
mov
jns
cmc
cltd
dec
rorb
xor
ja
xor
pop
ja
and
aas
xor
fidivs
xchg
rorl
test
movsl
jae
fstl
fcomp
stos
cli
xor
xlat
xchg
mov
xchg
shll
mov
dec
lods
lcall
fdivrl
aaa
pop
xchg
movl
fdivs
jle
add
shll
xorl
cmp
subl
lods
repnz
mov
jg
push
push
push
addr16
movsl
xor
fs
sbb
cltd
mov
into
xchg
xchg
int
std
js
add
push
cltd
and
inc
into
inc
outsb
arpl
lods
jno
pop
notl
dec
ss
cs
dec
test
dec
ret
adc
lods
fwait
clc
fstl
js
pop
loop
gs
out
out
mov
nop
mov
and
add
inc
iret
das
inc
jb
jmp
lret
pop
sub
push
sbb
lret
push
int3
aam
jae
or
cli
imul
sbb
stos
sub
aaa
jb
or
pop
scas
sti
inc
iret
mov
repnz
pop
cmp
fsubl
mov
mov
scas
pop
movsb
cltd
dec
pusha
mov
mov
movsb
adc
sarb
mov
xlat
xor
adc
sub
mov
testb
add
or
popf
cli
scas
leave
hlt
dec
test
lea
adc
addr16
aas
lods
ds
cltd
xchg
int3
xor
jp
inc
data16
inc
mov
xor
sub
jge
dec
negb
jle
mov
iret
cmpl
adc
loope
pop
stos
push
jne
iret
mov
and
fs
pop
or
pop
jle
xchg
sbb
lock
pushf
mov
jg
or
popa
fbstp
jb
mov
mov
jmp
push
sub
push
ficoml
and
push
jb
mov
and
push
mov
fnstenv
call
sti
ja
cmp
mov
insl
push
mov
push
fstpt
push
jae
fsubrs
lcall
cmpb
inc
or
stos
sub
and
cmp
test
repz
ljmp
adc
mov
sbb
and
push
lods
inc
fstpl
orb
mov
sbb
mov
pop
xchg
lcall
stos
add
jb
ja
mov
hlt
fldcw
sbb
aaa
aad
out
ljmp
mov
inc
imul
sbb
dec
xchg
mov
test
xchg
mov
or
xchg
and
adc
test
lea
lods
popa
cltd
lret
gs
popf
cwtl
ds
push
mov
jbe
js
mov
mov
xor
fwait
arpl
fcoml
and
jle,pn
xor
push
push
jmp
pop
lcall
push
sbb
aas
test
mov
sub
mulb
xor
mov
xlat
mov
xchg
lds
xchg
mov
lods
xchg
push
cmp
in
test
push
fcompl
jmp
out
mov
jno
dec
jns
jge
test
jbe
cmpb
add
mov
or
cltd
sbb
or
mov
mov
adc
push
adc
adc
pushf
inc
push
and
fsubs
out
out
mov
add
rolb
jge
pop
bound
pop
pop
iret
mov
xchg
leave
aaa
add
jnp
push
push
sbb
xor
repnz
sub
pop
xchg
mov
xor
fsubrl
mov
push
bound
push
cmpsb
mov
pop
stos
push
mov
xchg
imul
into
out
adc
imul
push
aam
cmpb
xor
movsl
mov
jecxz
xor
pop
sbb
xchg
sahf
popf
cwtl
sahf
xchg
fcompl
jnp
jmp
das
xor
in
ja
adc
pop
ss
fcomps
push
mov
push
ficompl
imul
jecxz
inc
imul
rcrb
adc
dec
rol
lods
in
jge
scas
pop
movsb
cs
lods
andb
mov
inc
fdivr
loop
and
jge
gs
mov
mov
lret
pop
sbbb
xchg
pop
xor
jne
push
cmpsl
cmp
nop
mov
jle
aas
adc
or
dec
push
push
cmpsb
inc
scas
loope
xor
mov
or
int
fldt
mov
cltd
mov
cmp
outsl
or
adc
cmp
xchg
adc
adc
sbb
stos
mov
lea
xchg
test
inc
xchg
in
fisttps
lahf
mov
mov
icebp
add
push
jl
cs
lret
mov
mov
mov
pop
aaa
dec
lea
fwait
das
pop
fcmovb
test
fisttpl
test
test
into
mov
and
aaa
xchg
dec
popa
jp
test
mov
ljmp
mov
maxps
jb
xchg
inc
loope
je
frstor
xor
daa
xor
mov
push
aam
stos
push
xor
sahf
mov
scas
pop
add
test
or
lea
fsubrp
mov
int
xor
cmp
imul
nop
mov
push
push
sub
in
icebp
push
fistpll
cmp
jne
popa
push
icebp
cmp
les
stos
lock
movsl
scas
push
call
xor
and
cmp
pop
shrl
pop
push
nop
in
test
cmpsb
jl
popa
xor
iret
push
mov
arpl
sub
xor
or
lahf
loope
scas
or
sbb
addr16
jbe
es
ret
sbb
dec
js
dec
adc
aam
jecxz
sahf
add
pop
loop
jno
xlat
adc
pop
xchg
pop
add
and
pop
xchg
fildll
inc
pop
sub
sub
pop
adc
mov
or
mov
orl
mov
lahf
fists
daa
imul
push
adc
cmpsb
mov
mov
cmp
repnz
pop
in
daa
outsb
lea
and
jg
or
cld
aas
call
and
xchg
icebp
xor
mov
xchg
push
inc
insb
push
push
mov
adc
adc
or
ljmp
and
jmp
test
subb
dec
add
jbe
xchg
iret
sub
cmpsl
pop
adc
rclb
inc
out
popa
push
and
cs
ret
pushf
ss
test
daa
push
fwait
add
insl
repz
sub
mov
pop
cmc
repz
out
popf
fdivrl
pop
mov
mov
pop
fldenv
xor
in
mov
xor
cwtl
inc
addr16
scas
iret
inc
inc
mov
sbb
stos
fidivrl
pop
orl
xor
test
data16
inc
popa
fs
jp
ret
pop
icebp
cli
pop
insl
addr16
mov
test
jnp
push
out
mov
mov
adc
xchg
push
jecxz
cmp
rcl
dec
testl
mov
shl
adc
gs
pop
fdivs
inc
push
sub
fidivrl
aad
jno
push
jge
rorb
adc
xchg
jmp
hlt
icebp
mov
ss
aaa
lods
lret
jnp
js
add
jmp
push
cwtl
inc
test
mov
xchg
js
or
sbb
sub
cmp
enter
call
push
cwtl
inc
test
mov
xchg
js
or
sbb
sub
cmp
enter
push
push
cwtl
inc
test
cmp
xchg
pop
xchg
js
or
sbb
sub
cmp
enter
call
push
cwtl
inc
test
mov
sub
mov
sarl
push
cltd
sbb
cmp
inc
push
xor
add
fwait
dec
mov
mov
mov
movsb
clc
test
test
jne
cmp
inc
pop
xor
push
in
aam
leave
movsl
clc
xchg
call
cmp
inc
pop
xor
push
enter
fdiv
mov
repnz
cmp
cmp
inc
and
pop
lret
jecxz
push
jbe
sbb
cmp
rclb
push
inc
hlt
jne
jne
aas
aad
pop
and
orb
sub
movsl
enter
mov
movsl
push
xchg
or
into
aaa
es
popf
in
shrl
cltd
jnp
call
jo
inc
das
adc
xor
and
push
adc
mov
arpl
mov
mov
jecxz
cltd
or
lds
std
call
jae
jmp
dec
jae
ret
scas
fcompl
int
dec
mov
fwait
cmc
aas
xchg
ljmp
push
sub
xor
push
in
aad
enter
call
sbb
adc
add
jb
push
pop
jo
jno
test
cld
lret
xchg
mov
rorl
outsb
sbb
sbb
add
inc
sub
xchg
lds
lods
xor
xor
ss
dec
cmp
js
push
in
aad
enter
call
cmp
inc
pop
xor
push
in
aad
enter
call
dec
movsl
cmp
mov
mov
loope
in
sti
xchg
stc
into
les
pop
es
dec
mov
and
mov
cmp
xchg
imul
mov
outsl
pop
cmpsb
in
inc
test
lds
in
pusha
scas
xor
inc
push
jl
outsb
mov
data16
push
imul
mov
int3
test
mov
inc
lret
jnp
js
mov
xchg
lahf
inc
and
jp
xchg
leave
push
scas
or
daa
pop
cmpsb
cmpsl
fs
mov
xor
rorl
cmp
dec
popf
lret
sub
leave
pop
or
aas
fsubr
scas
sbb
pop
mov
test
xorb
jecxz
inc
int
inc
jp
xchg
jmp
jge
jmp
out
sub
push
pusha
cmp
pop
stos
popa
sub
clc
leave
adc
iret
test
popa
outsb
xchg
pop
or
pop
push
dec
cmp
sahf
dec
loopne
test
sub
bound
mov
mov
popa
push
nop
add
push
roll
cmp
mov
inc
cs
xor
cmp
pushf
les
cmp
jecxz
cld
adc
inc
aas
and
push
sub
loope
mov
popa
xlat
sbb
mov
aas
ljmp
pushf
ret
mov
or
cmpb
rclb
pop
xchg
push
mov
sub
and
inc
ljmp
dec
mov
xor
xor
pop
pop
cmpsl
xor
push
push
cmp
test
out
call
adc
inc
xchg
mov
psllw
xchg
mov
sbbl
adc
adc
popf
inc
test
jns
enter
fwait
jno
add
scas
nop
stos
lock
jnp
and
fstpt
mov
mov
int
sahf
and
loop
fsts
and
pop
sbb
int3
orps
jmp
mov
clc
xor
inc
xor
notb
push
push
inc
cli
lret
add
jg
aad
or
stos
jnp
cmp
sub
std
push
ret
dec
pop
jbe
lahf
add
iret
inc
push
in
jbe
in
outsb
xchg
ds
sbb
stc
pop
push
push
fadd
mov
and
ret
mov
mov
movsl
jg
aad
sub
adc
adc
and
mov
mov
pop
dec
test
das
fadd
dec
sub
mov
nop
lea
ljmp
mov
shrl
fwait
adc
gs
ret
outsb
cltd
jo
in
aad
stc
dec
in
jae
stos
push
mov
jg
xchg
mov
leave
mov
out
leave
xor
out
jne
inc
mov
mov
loopne
fdivr
lods
or
cmpsb
sub
stos
jbe
lock
into
add
repz
jmp
loopne,pt
mov
inc
fcompl
movsb
andb
mov
iret
add
jmp
scas
outsl
xor
xchg
lods
inc
into
data16
int
insl
lret
ret
aas
xor
sub
test
popf
dec
mov
dec
hlt
inc
pop
mov
inc
mov
lock
das
add
or
int
sahf
daa
cmp
rclb
jns
stos
jnp
pop
inc
and
mov
mov
stos
jnp
dec
xor
les
shrl
mov
nop
movsb
cmp
ret
dec
je
cmpb
jp
mov
add
jge
cmp
jno
repnz
fs
lret
loopne
aam
test
inc
aaa
test
arpl
jecxz
pop
lret
jno
jbe
mov
lds
adc
enter
mov
cwtl
jp
jnp
jle
pusha
ljmp
lret
lret
inc
push
mov
mov
pop
in
std
ljmp
sbb
shlb
xchg
xor
lcall
movsl
outsb
cmp
push
mov
movsl
dec
ja
and
gs
mov
or
add
scas
mov
rcrl
loop
sbb
pop
adc
pusha
lahf
inc
xchg
or
repz
pop
push
push
jp
mov
sbb
push
pop
aaa
jae
leave
int
sbb
push
andl
xor
inc
dec
outsl
cltd
jne
aas
mov
mov
mov
sbb
dec
packssdw
nop
pushf
inc
xchg
mov
test
sbb
and
cmp
stc
pop
stos
pop
push
adc
in
inc
mov
push
ret
inc
call
shrb
xchg
ds
cld
ret
pop
mov
lret
and
xchg
lret
sub
cmpsb
pop
lret
mov
movsb
ret
dec
pop
push
sarb
sbb
xchg
cli
iret
pop
js
push
mov
imul
push
mov
and
jg
cmp
mov
mov
enter
inc
lods
push
mov
daa
enter
cmp
outsl
or
in
sbb
ds
mov
aaa
out
jb
xchg
and
xchg
mov
sub
cmp
aaa
pop
pop
or
mov
push
add
icebp
inc
mov
xor
xlat
int
aas
popf
push
movsl
ret
rorl
mov
jns
sbb
dec
mov
jbe
or
pop
stos
dec
mov
inc
push
jno
push
mov
and
pop
pop
push
cmp
dec
icebp
inc
in
lea
test
adcl
cmp
pop
mov
aad
sti
lahf
das
imul
call
aad
sbbl
cmp
addr16
arpl
sub
mov
cmp
orb
lahf
mov
or
mov
stos
adc
stos
sbb
xlat
add
mov
cwtl
sbb
test
lcall
mov
dec
sbb
aaa
pusha
cwtl
push
and
jmp
mov
and
loop
ds
sub
scas
jge
fiaddl
adc
repnz
loopne
lock
and
xor
bound
iret
leave
xor
or
sahf
fcomi
fdivrl
aaa
mov
or
lcall
iret
push
jge
loope
jns
or
pushw
cmp
addb
cwtl
mov
jbe
jp
mov
dec
push
insl
xor
cmp
xor
jo
sub
sahf
cmp
ds
fwait
repnz
testb
push
jae
outsb
fs
inc
push
mov
cwtl
mov
dec
or
push
xor
inc
mov
mov
roll
pop
rcl
sub
ficoms
mov
jl
movsb
mov
fdivrl
push
arpl
push
les
pop
xchg
inc
in
addr16
and
sbb
adc
add
pushf
nop
jae
int
loop
in
icebp
pop
rol
push
sahf
push
add
or
fisttpll
dec
leave
lock
or
xchg
inc
inc
in
loop
cmp
sub
sbb
sub
insb
shr
mov
mov
loope
pop
sbb
cwtl
inc
adc
xlat
inc
in
es
mov
pop
sbb
repnz
mov
mov
adc
stc
scas
cmp
insb
cmp
and
loop
xchg
out
hlt
into
ljmp
inc
adc
inc
and
fidivrl
and
jle
int3
mov
out
daa
lods
pop
inc
jge
cs
les
movsl
sti
fcomps
repz
xor
jmp
mov
mov
lds
adcl
mov
xchg
int
and
jmp
pop
add
cltd
outsl
int3
filds
lret
dec
or
mov
cmpsl
xorb
mov
repz
mov
jle
adc
shlb
pop
add
outsl
rorl
js
push
ds
bound
pop
inc
and
imul
or
leave
or
add
sub
mov
pop
dec
adc
push
or
call
jge
jl
bound
mov
or
sub
scas
pop
insb
and
testl
data16
icebp
add
rorb
test
inc
mov
hlt
mov
inc
clc
ret
cmc
mov
sub
mov
sbb
imul
outsl
je
divl
mov
xor
push
pop
scas
jbe
arpl
inc
pop
outsl
push
inc
mov
xchg
bound
add
ljmp
sarl
cmp
xor
jo
pop
jno
outsl
xlat
jbe
mov
ljmp
call
or
and
shr
popf
rorb
lcall
rcl
or
mov
out
aam
je
mov
pop
inc
std
jge
pop
cltd
add
mov
xchg
xchg
cmp
sub
and
mov
mov
ss
loop
testl
cltd
call
rcrb
dec
in
sbb
div
mov
ficoml
or
jne
dec
dec
mov
add
sahf
mov
dec
scas
jmp
jns
xlat
inc
inc
fucomi
push
aam
cmovne
lds
push
sbb
sbb
in
push
sub
pop
xor
and
int3
testl
mov
arpl
mov
jbe
lea
jmp
sub
or
sbb
mov
push
jbe
dec
pop
push
sbbb
and
arpl
sbb
adc
jle
push
mov
mov
sub
jge
testl
sbb
xchg
dec
cmp
loope
sub
fprem1
add
sbb
in
aam
sbb
das
push
out
aas
shrl
ficoml
and
sub
sub
xchg
pop
insb
cltd
cmpl
dec
mov
lret
je
inc
push
leave
push
cmp
rcrl
loopne
and
jge
mov
int
pop
test
adc
mov
ja
inc
jle
xchg
sbb
sbb
mov
adc
xor
inc
lea
push
mov
push
leave
lds
jae
rolb
pusha
mov
jne
xor
xchg
mov
pop
jae
mov
daa
push
mov
ret
test
pop
shlb
adc
es
icebp
out
jg
cmpsb
cmp
shl
movsb
jg
xchg
aad
cmp
mov
jns
clc
test
mov
pop
insl
and
lret
adc
mulb
mov
rcrl
fadd
mov
pop
cmp
sub
daa
dec
outsl
mov
loop
sbb
push
std
dec
sbb
mov
sub
or
repz
icebp
stos
rcl
andl
push
repnz
jl
dec
ret
and
sub
and
notb
add
dec
popa
ret
adc
rcl
fisubl
fnsave
mov
cld
inc
ss
dec
jne
out
ljmp
test
xlat
inc
mov
inc
je
pop
cld
test
sub
inc
paddsw
sub
aaa
push
xorl
popf
mov
mov
xchg
jb
frstor
lea
pop
sub
fmuls
inc
test
stc
jnp
mov
mov
loopne
adc
mov
adc
ret
dec
es
and
add
or
stos
xrelease
xchg
out
push
lea
nop
inc
sub
mov
aad
sub
mov
or
aam
jne
mov
pop
dec
mov
or
clc
in
data16
xchg
mov
and
std
inc
mov
loop
adc
mov
fistpl
imul
sub
sbb
mov
inc
lea
adc
xor
fbstp
add
test
test
ja
scas
sar
jo
cli
sbbl
sahf
pusha
add
push
mull
push
cmpb
mov
lods
dec
adc
adc
and
pop
mov
and
sub
add
jbe
repz
inc
movsl
pop
movsb
lods
jmp
out
mov
xchg
xor
jle
outsl
aas
call
xlat
stc
xor
xor
outsb
imul
iret
pop
inc
push
and
pusha
jns
xor
mov
adcb
ss
jae
sub
mov
add
in
jno
aaa
dec
sub
push
push
das
push
push
popf
or
enter
lods
ja
insl
and
fiaddl
lahf
pop
dec
pop
sub
pusha
sbb
stos
daa
cmpsl
fldcw
les
pop
pop
and
bound
in
pop
push
or
add
loope
push
push
inc
push
or
ret
dec
add
mov
dec
lahf
lock
insl
pop
pop
mov
idivb
inc
loope
loope
ds
adc
testl
ud2
icebp
ret
mov
adc
jge
mov
mov
sub
cltd
jg
shlb
push
jne
xchg
jns
cmpb
xorl
fimuls
inc
sahf
push
out
mov
aam
in
outsb
test
les
or
stc
in
sub
sbb
jle
jp
icebp
sbb
sub
movsl
ret
inc
in
test
es
jecxz
out
or
push
adc
sub
and
push
shlb
or
test
inc
jno
mov
xchg
xchg
pop
lret
shrl
testb
sbb
mov
cmp
das
leave
sti
sub
mov
mov
mov
mov
push
sub
test
je
int3
or
movsl
mov
xor
push
add
rolb
adc
cwtl
data16
aad
lret
in
xor
and
or
mov
jns
jb
rcrl
sahf
pop
push
pop
es
out
imul
imul
inc
stc
mov
pop
pusha
jb
pop
pop
gs
mov
jb
add
jl
mov
jns
out
in
adc
sbb
hlt
hlt
js
sub
ds
gs
shlb
fadd
push
in
rorb
pop
xor
lock
in
push
sbb
iret
scas
push
push
test
jl
sub
pop
xchg
fiadds
shr
jno
dec
jbe
cs
stos
xchg
ja
inc
mov
jns
outsb
push
rorb
repz
cmp
jl
add
add
cmp
aas
sub
xchg
xchg
mov
jb
lods
enter
sub
pop
or
ror
lods
shl
in
or
push
fimull
in
pop
dec
sbb
jecxz
cmp
push
aam
adc
mov
inc
rorl
add
inc
lods
pop
mov
scas
sahf
por
xor
xlat
push
clc
ret
ds
clc
xchg
push
inc
std
push
push
cmp
dec
xchg
push
pop
insb
gs
clc
pop
rorl
mov
inc
leave
inc
popa
cs
xchg
adc
and
pop
stos
lock
hlt
sbb
repz
mov
jp
inc
dec
rcll
mov
pop
mov
mov
mov
mov
push
dec
add
fld
cmp
and
pop
sti
sbb
out
push
pop
cmp
pushl
nop
repnz
or
jmp
scas
xor
dec
outsl
xor
xchg
pop
mov
inc
imul
push
jno
cli
sti
sbb
lock
inc
shlb
add
sar
test
mov
in
adc
test
adcl
and
jns
mov
and
ret
sub
jecxz
and
sbb
lods
xchg
adc
lods
pop
push
dec
pop
dec
xchg
lods
push
xor
aam
push
jecxz
adc
sbb
rcl
out
jp
push
mov
pop
jg
mov
xchg
out
sbb
mov
insb
roll
enter
orw
scas
ret
adc
mov
mov
jo
insb
daa
mov
outsb
push
stos
add
fs
adcb
jne
scas
push
sbb
call
insl
cmpl
into
out
cmp
into
mov
or
iret
add
std
nop
dec
add
mov
push
mov
nop
xlat
sbb
fstps
sbb
pop
pop
imul
ds
inc
inc
jp
popa
pop
adc
lds
mov
fs
out
mov
das
data16
mov
in
test
and
sbb
insl
cli
imul
test
pop
in
test
xor
sbb
sbb
dec
dec
fadd
loope
rcr
js
mov
cmpsb
int
testl
out
fwait
loope
aas
ret
je
xchg
xchg
mov
pop
and
xchg
pop
xchg
jae
lret
rcll
pop
lahf
inc
enter
outsb
xor
or
add
inc
pop
out
mov
jle
imul
shrb
jno
call
dec
mov
mov
inc
jg
in
ds
cmp
jb
outsl
push
sub
into
jmp
pusha
std
mov
sbb
jg
push
mov
add
adc
or
shrl
mov
push
icebp
sbbl
inc
subb
cmpsb
push
inc
shr
sub
and
xor
repnz
notb
ss
sbb
and
int3
fistl
xchg
dec
lcall
jl
push
mov
mov
call
icebp
fsubp
movswl
aam
mov
mov
clc
xchg
sbb
fidivl
xchg
mov
lock
mov
aam
inc
enter
dec
adc
leave
pop
mov
in
push
push
dec
mov
stos
pop
sub
orb
cmpsl
fidivl
pop
pop
pushf
mov
dec
or
sub
mov
push
inc
shlb
les
daa
xchg
add
enter
mov
jnp
mov
or
int
adc
inc
roll
pushf
cmpsl
jns
lahf
mov
inc
dec
push
inc
call
mov
or
jb
xor
leave
rorl
ret
test
push
sub
data16
stc
push
out
jns
push
ret
orl
cmp
stos
enter
jnp
imul
imul
ss
stos
rcl
push
adc
out
roll
int
sbb
lods
inc
cmpsb
and
xor
sti
loopne
mov
mov
in
dec
mov
sbb
pop
push
in
nopl
pop
push
pusha
ds
pop
inc
or
push
sar
out
icebp
cmp
imul
adcl
movsb
cmp
daa
out
or
sub
mov
and
jp
movsl
push
adc
fisttps
pop
scas
andl
std
int
xlat
mov
int
inc
mov
and
add
testl
pop
jns
xchg
ret
jg
jo
xchg
jo
cltd
xor
inc
mov
cld
jno
aaa
or
insb
repz
lock
jle
dec
sti
les
inc
fstpt
sbb
mov
testb
arpl
out
stos
test
mov
idivb
cltd
test
xchg
adc
popfw
pop
dec
ja
pop
mov
nop
or
add
aad
imul
xor
pop
xchg
dec
jg
jg
call
mov
loope
jae
outsl
cmc
cltd
aas
lret
data16
xor
cmp
insb
pop
mov
jb
and
inc
outsb
fwait
pop
jecxz
int
jp
sbb
mov
inc
sbb
jle
daa
stc
insl
inc
push
push
shlb
shlb
xchg
lods
push
leave
inc
ss
in
sbb
and
test
dec
push
and
xchg
notb
mull
ficomps
xchg
pop
push
loope
js
outsb
add
subb
adcb
ljmp
inc
incl
mov
std
out
jne
addb
scas
push
sahf
sbb
testb
add
push
jno
fsubr
testb
push
ret
out
icebp
jo
nop
or
rclb
inc
sub
rclb
dec
iret
outsb
out
loope
cli
cli
insb
cmp
cmp
or
cltd
aad
je
das
loop
out
inc
out
insl
or
popf
jl
mov
sbbl
js
push
mov
sub
jne
xor
push
leave
dec
mov
xchg
test
imul
inc
nop
ljmp
xchg
hlt
cmp
sbb
xchg
mov
pop
inc
aas
push
dec
cld
mul
pop
lret
xchg
jl
push
cmp
cmp
fst
out
into
je
arpl
push
outsb
or
punpckhbw
sbb
pop
mov
lcall
jg
inc
andb
sahf
cltd
ss
adc
rcll
jno
inc
or
adc
and
mov
ja
push
aad
out
lods
andb
popf
movsl
in
add
or
out
xor
and
fisubrl
mov
dec
ds
or
stos
xchg
stc
sti
jae
push
mov
nop
xor
pop
sub
mov
add
or
scas
push
pushf
push
inc
cmc
sarb
mov
push
data16
add
cmpsb
stos
ja
mov
mov
cmp
mov
sub
push
pop
shr
cli
ror
ss
mov
mov
fcoms
inc
cli
pusha
push
hlt
pop
mov
push
add
sbb
adc
imul
mov
dec
cmc
and
mov
roll
xor
mov
pop
cmc
pushf
inc
pop
cmc
lea
jnp
pop
sub
or
shrb
xchg
inc
xchg
sbb
sub
xor
push
in
aad
enter
call
cmp
inc
pop
xor
push
in
aad
enter
call
cmp
inc
pop
xor
push
in
aad
enter
call
cmp
inc
pop
xor
call
dec
adc
test
scas
cmp
adc
test
dec
icebp
sbb
or
shl
lret
jno
popa
stos
push
mov
aad
mov
dec
icebp
cmp
sub
sbb
or
clc
and
jo
add
xor
popa
jp
lcall
add
push
out
and
adc
add
jns
fs
adc
add
jp
add
aad
repz
popa
dec
fimuls
push
inc
rcrl
pop
sub
rolb
fbstp
dec
add
push
add
cmp
dec
test
in
in
xchg
cmp
fldcw
out
jg
sub
add
stos
and
cltd
fs
insl
sub
push
pop
insl
jp
sbb
ljmp
and
mov
popa
push
push
adc
dec
inc
lods
mov
sbb
pop
dec
dec
or
ja
ljmp
popa
daa
test
jne
mov
add
lret
cs
xchg
sti
and
jmp
inc
lcall
adcl
add
mul
mov
sarl
mov
inc
out
fcomps
shrl
pop
stc
dec
sahf
insb
popl
shll
jb
je
movsl
add
psubw
lcall
jecxz
loopne
cwtl
dec
test
and
xchg
push
xorl
scas
jns
or
push
lds
testb
fnstsw
int
lock
aas
mov
sbb
or
cli
and
adc
add
jno
popa
stos
push
lcall
xchg
pop
orl
sbb
or
cli
and
adc
add
jno
popa
stos
push
lcall
push
jnp
pop
ds
or
cmpsb
arpl
pop
insb
rolb
in
rolb
loop
ret
xlat
and
lea
mov
movsl
fcoms
shl
pop
ret
pushf
orl
mov
jecxz
adc
add
std
sub
adc
cmp
int3
popa
movsl
dec
mov
sahf
fldcw
filds
popf
and
cmp
jmp
jl
int3
jg
outsb
pusha
in
dec
out
fs
mov
pop
sbb
mov
testb
adc
xor
icebp
sahf
sbb
ret
mov
cmpsl
hlt
sti
jbe
jns
rclb
lea
out
mov
ret
lret
inc
sub
sbb
pop
or
lcall
jns
fcompl
mov
xchg
lahf
mov
movsl
test
jae
scas
out
adc
js
imul
fwait
adc
loope
aaa
and
test
rcll
jge
mov
sarb
addl
lahf
add
stos
test
leave
mov
sbb
js
movsb
lret
fs
ja
cmc
xchg
in
xchg
stc
hlt
mov
adcb
jmp
insl
cmp
loop
sub
loope
jp
cmp
dec
sub
inc
push
test
leave
int
ds
cs
ret
xchg
loopne
mov
add
test
cmp
scas
xlat
pop
aam
sbb
je
sbb
sti
or
add
push
adc
push
insl
sub
push
imul
in
cmp
out
and
ja
ja
inc
insl
mov
mov
roll
dec
aam
add
sub
fildl
mov
sti
push
dec
xchg
push
sbb
lods
lret
lods
adc
gs
int
int
cmc
mov
int
cmp
add
mov
mov
and
repz
aaa
mov
aas
fldt
in
cld
sbb
outsb
ret
insb
cld
sbb
shr
jp
push
mov
xor
jg
jns
and
dec
mov
jecxz
sbb
cmp
dec
sahf
sub
pop
adc
loop
add
aam
aaa
out
fisubrs
mov
in
xchg
dec
in
dec
inc
addr16
add
es
and
shll
xchg
cli
out
inc
xor
or
fidivs
arpl
or
dec
jnp
jno
push
lahf
adc
loope
push
mov
cltd
and
shlb
xchg
fs
or
cmc
sbb
or
rclb
incl
pop
popf
out
addl
popf
push
negl
lea
pop
mov
jns
test
push
xchg
dec
or
into
sbb
sbb
sbb
testb
mov
gs
or
dec
adc
stc
push
xlat
std
cld
fcoms
lods
push
or
test
and
push
push
jno
or
mov
in
lea
push
cltd
repz
lods
sbb
mov
fstl
xor
data16
mov
mov
xchg
jge
outsb
test
sbb
xlat
dec
test
cmc
or
fiaddl
sub
loopne
mov
adc
int3
mov
outsl
xor
and
ffree
dec
and
roll
scas
jo
mov
cmp
mov
pop
push
fsubl
pushf
daa
loope
test
cmc
adc
and
adc
movsl
lahf
ds
xchg
clc
stos
mov
rorb
push
pop
lahf
cmc
adc
icebp
sbb
testl
aas
mov
jno
jbe
pop
addr16
and
xor
cld
jo
pop
pop
imulb
mov
shrl
mov
popf
ljmp
adc
clc
cmpsl
iret
int3
lods
out
nop
inc
mov
lods
lods
clc
cmc
push
mov
loope
jo
iret
mov
mov
aam
add
popf
jecxz
and
push
push
inc
stc
sub
repnz
or
cmpsl
jp
pusha
xchg
ja
hlt
mov
dec
xchg
and
push
mov
xor
pushf
movsl
popa
mov
imul
xchg
adc
and
adc
inc
call
ss
iret
das
leave
aas
jmp
mov
test
push
std
cli
mov
and
add
pusha
mov
sub
add
jb
jecxz
dec
in
xchg
and
hlt
xor
sbb
iret
jne
imul
pop
mov
cmp
jae
jbe
jbe
xchg
jno
or
push
jp
sahf
dec
ja
mov
dec
sbbb
sbb
insl
imul
or
pop
cld
out
jae
mov
xchg
test
aad
pop
loope
mov
pop
cmp
into
mov
imul
in
and
adc
pushl
xchg
mov
je
addr16
sub
cmp
mov
test
push
scas
ljmp
enter
test
mov
addl
subb
arpl
cs
push
ret
cltd
rorb
std
fld
addr16
lods
cmpsl
mov
pushf
into
push
outsb
movsb
ljmp
fs
js
fsubrs
shrl
fsubr
arpl
dec
clc
cld
es
das
shll
stos
xor
push
insb
xor
sub
cltd
mov
cmp
mov
lods
adc
cli
xchg
xchg
ljmp
mov
lret
in
aaa
mov
fstl
out
jnp,pn
shl
sahf
sub
je
fsubr
out
out
jne
lret
icebp
push
jnp
fsubrs
test
js
sbb
sub
inc
push
ljmp
rcrb
test
mov
cltd
call
insl
lcall
or
fwait
dec
popf
push
jns
mov
mov
gs
fcoms
mov
push
adc
int
test
xchg
ja
jmp
ret
sub
cwtl
stos
mov
mov
or
int3
fdivs
fdivrp
and
mov
sub
mov
mov
enter
js
ret
cld
jecxz
je
inc
push
out
or
cli
adc
repnz
mov
test
adc
sub
pusha
sub
outsl
push
pop
inc
xchg
rol
in
aad
sbb
push
fistpll
dec
gs
int
push
push
push
movsb
adc
scas
fistps
xor
push
daa
xor
in
jnp
fildl
jge
leave
cmpsl
add
scas
fistpl
sbb
inc
adc
mov
mov
roll
add
lahf
push
daa
icebp
fmul
in
dec
dec
les
or
cmpl
xchg
fs
add
fs
out
sbb
add
jnp
jbe
int3
sti
aad
inc
mov
adc
cs
lods
sub
or
push
push
jo
je
lock
inc
jp
addb
mov
xchg
frstpm(287
les
rorb
or
cwtl
test
test
jmp
jp
std
fsubl
dec
mov
push
nop
jo
xorb
push
adc
sub
in
shlb
adc
xchg
scas
mov
stos
mov
ljmp
cwtl
mov
ds
jg
pushf
shlb
in
jne
inc
push
jb
xchg
lcall
outsl
mov
mov
add
das
andb
cld
rcll
in
mov
addr16
in
cmp
and
lock
jne
rcll
push
xor
cmc
sbb
mov
cwtl
roll
icebp
jo
dec
iret
cmpsb
mov
push
pop
dec
mov
rol
in
lock
out
dec
pop
pushf
inc
nop
mov
jl
push
and
test
sbb
lock
in
push
pop
mov
rorl
dec
ljmp
push
xor
sarb
rcll
jbe
test
lea
jb
aam
out
jbe
loope
mov
xchg
adc
mov
lcall
pop
push
repz
shrl
pop
mov
adc
push
dec
xor
lret
jge
dec
insb
jne
fldenv
mov
lahf
je
mov
pop
dec
stos
das
aam
push
imul
pop
es
jb
mov
jmp
inc
aad
nop
test
and
fadds
push
inc
adc
xor
in
je
out
sbb
jg
fistps
xchg
dec
ljmp
enter
xor
scas
push
idivl
or
dec
insb
mov
inc
int3
popa
out
jae
dec
fsubr
cwtl
dec
aas
mov
lcall
lods
adc
sub
into
movsl
sbb
xchg
lcall
lea
pop
mov
adc
out
mov
shrl
psadbw
add
imul
insb
sbb
pop
sub
and
ss
bound
fcomps
mov
cli
xor
leave
ret
loope
data16
dec
hlt
inc
divb
leave
push
inc
fs
sbb
hlt
mov
push
cmp
int
dec
fdivrs
arpl
aas
dec
aam
xchg
dec
fimuls
fs
and
fimuls
cmp
add
pop
sbb
push
dec
pushf
push
das
jecxz
or
cmc
idivl
aad
jl
scas
imul
push
icebp
mov
inc
pop
xchg
and
jnp
rcr
repz
xchg
movsb
fistl
rclb
fsub
nop
sti
mov
xor
pop
jg
test
lds
rorl
je
sub
adc
or
testl
fs
cmp
dec
xchg
ret
data16
jl
ds
ret
pop
sbb
cmp
hlt
mov
lcall
mul
inc
outsb
les
cmp
push
das
std
mov
shll
aas
mov
rorl
les
cmpsl
mov
scas
popa
idivb
fadds
fistpl
sbb
test
popf
repz
inc
test
xorl
sbb
fbld
enter
push
aas
movsb
add
adc
stos
lods
xlat
or
xor
std
cwtl
jmp
dec
les
cmp
cli
xor
ss
mov
popf
xchg
shll
or
andl
movsl
add
loope
jo
pop
cmp
call
out
inc
adc
cltd
mov
out
lahf
sbb
jle
insl
ret
fdivr
cld
rcll
or
lret
inc
into
cmp
push
leave
pusha
mov
dec
insl
faddl
jg
jne
pop
pop
test
mov
cld
sbb
je
das
std
push
adc
dec
and
imul
sub
lcall
ret
in
push
nop
add
push
repz
cli
mov
jecxz
mov
call
and
xor
mov
sub
xor
iret
cli
popf
dec
or
xchg
loope
orb
icebp
mov
adc
clc
jbe
test
sbb
bnd
xor
adc
xchg
jp
or
std
out
aam
fwait
sub
cmpb
std
pushl
sub
jo
jnp
data16
in
aas
cltd
mov
jmp
cmp
fucomp
or
cs
and
push
scas
sti
jmp
lods
sub
sub
testl
ja
mov
push
xor
xchg
jl
dec
inc
sbb
aas
data16
cwtl
repz
pop
and
pop
push
xor
iret
notb
or
add
ljmp
push
pushf
call
add
cmp
addr16
cmp
push
sahf
cmp
imul
cmpb
adc
test
cmpsb
dec
shl
cld
jmp
dec
loopne
inc
mov
in
lret
mov
les
je
dec
sahf
stc
inc
js
icebp
adc
add
test
mov
movsb
mulb
lock
mov
orb
sar
xchg
push
jno
mov
adc
mov
int
jle
adc
imul
pop
ljmp
pop
sbb
ja
jge
cmp
mov
mov
dec
sbb
adc
or
xchg
inc
sub
dec
mov
fldt
movsl
cmp
xchg
mov
cmc
out
sbb
or
push
push
ret
cmp
sti
or
mov
jge
pop
or
cmpsl
add
clc
andb
std
push
bound
jmp
ss
loop
ficoms
neg
aaa
shll
jno
test
in
sarb
pusha
cmp
fistps
sbb
stc
and
fwait
cs
test
mov
je
shlb
inc
mov
mov
and
loop
leave
xchg
outsl
pop
pop
jp
xchg
idivb
in
stos
sub
mov
jno
jle
fsubrp
cmp
mov
stos
push
daa
mov
fdivs
sbb
jmp
les
insb
push
add
mov
xor
dec
fsub
mov
cmp
rorb
aad
pusha
push
les
inc
jnp
inc
cmp
adc
rcrb
sbb
clc
inc
pop
adc
js
out
cmp
jbe
jno
mov
inc
jbe
adc
jl
mov
add
cltd
incl
xchg
fxch
out
xchg
or
imul
push
or
cmpsb
xchg
push
out
and
shrb
pop
pop
mov
pop
call
add
and
sbb
xchg
inc
add
jl
xor
inc
pop
das
jns
orl
cld
cmp
adc
sub
inc
push
jnp
pop
test
gs
sbb
dec
push
or
dec
stc
mov
loop
ljmp
loop
pop
test
jae
cltd
outsl
inc
or
mov
pop
insb
xchg
rcl
out
cmp
fnsave
jbe
sbb
cmpsb
repnz
lods
out
xor
ret
xlat
test
nop
enter
cmpsb
ficomps
in
push
jp
dec
jo
dec
and
mov
repz
into
daa
out
pop
pop
xor
mov
aas
pop
or
js
fwait
loopne,pn
mov
jl
pop
push
stc
lock
imul
xchg
push
sub
ret
ja
xor
rclb
pop
dec
es
sub
in
cmpl
int3
cmpsb
ds
jae
ljmp
add
push
pop
push
lods
dec
lcall
out
out
adc
fisubl
pop
cltd
or
push
sbb
lods
outsl
sub
enter
or
insl
lods
orb
or
lea
xchg
cmp
xor
jae
inc
sarl
dec
ret
dec
adc
ds
or
jp
dec
cmp
jge
les
cmpsb
inc
movsl
cmp
mov
mov
outsb
insb
add
lret
shlb
mov
pop
mov
add
jo
sub
jno
js
add
xchg
push
mov
inc
cltd
popa
fsubrs
test
push
int3
cmp
in
out
outsl
mov
mov
arpl
and
xor
push
push
fsubrl
mov
je
or
xchg
add
dec
lea
cmp
arpl
xor
adc
fwait
cli
mov
rorl
jp
sbb
test
sub
mov
imul
adc
cmpb
jmp
pushf
addr16
movsl
stos
mov
inc
clc
inc
cld
test
ds
push
jmp
lret
repz
pop
push
mov
add
inc
xchg
shll
or
jge
inc
std
lock
xor
dec
xlat
popa
in
dec
cltd
test
test
mov
stos
dec
loope
push
inc
pop
ss
ret
and
dec
mov
add
jns
cmpsl
fwait
testl
ret
xchg
repz
mov
shll
imul
sti
les
push
mov
das
inc
lods
icebp
stc
add
push
push
and
and
fadds
adc
in
or
hlt
out
nop
mov
push
lret
xchg
mov
mov
sbb
loop
mov
fbstp
std
sarb
jne
lods
cmp
lea
jnp
mov
inc
and
jmp
mov
aad
xor
scas
push
add
out
jg
xchg
and
and
pop
jno
adc
push
xchg
rcrb
rcrb
jl
adc
rep
in
pop
jl
pop
push
xor
mov
loopne
push
xchg
ud2
mov
mov
mov
movsb
mov
out
test
ds
inc
hlt
out
imul
sahf
sbb
mov
mov
ret
insl
jo
sub
cmc
push
mov
fdivp
addr16
sbb
mov
mov
jge
scas
jge
mov
nop
cli
push
and
jl
inc
mov
jecxz
out
and
and
cmp
mov
bound
and
stos
mov
cwtl
mov
xchg
jl
inc
roll
les
out
push
sbb
cwtl
test
repnz
pop
mov
aam
xchg
orb
jbe
inc
int
std
jle
xchg
sub
adc
adc
sbb
lret
loop,pn
adc
shlb
loop
syscall
int
jo
pop
sub
ror
lret
repnz
inc
jno
lods
shlb
inc
cmp
dec
jmp
jmp
lret
ret
jp
lods
iret
test
mov
cmp
ficompl
int
sahf
xchg
cmpsb
aaa
in
jecxz
mov
pushf
and
jg
popf
loopne
lds
mov
gs
jl
std
add
outsb
stc
aam
mov
push
mov
fwait
notb
ja
in
jl
stc
xor
nop
xchg
dec
aas
mov
pop
hlt
inc
popf
pop
mov
lret
jae
inc
xor
cmpb
ljmp
mov
imul
mov
popw
bound
fmul
out
jg
sub
out
pop
aad
sbb
cwtl
aaa
mov
xor
mov
aaa
mov
and
out
add
xor
push
filds
pop
inc
dec
insb
leave
into
dec
data16
jmp
adc
imul
or
and
jne
jmp
imul
pop
add
sub
push
mov
outsl
divps
data16
repnz
xor
outsb
stos
stos
lret
test
out
inc
add
jno
shll
fcomip
inc
push
cmp
jno
in
mov
mov
pop
repnz
xchg
sarb
enter
mov
jne
adc
mov
andl
fdivr
jl
jno
daa
lock
sub
roll
sbbl
jae
test
push
pop
pop
mov
and
xchg
xchg
cld
cli
aam
adc
pushl
rcr
mov
lret
pop
and
out
loope
mov
and
mov
xchg
dec
dec
mov
pusha
add
pop
in
icebp
adcb
mov
jg,pt
enter
dec
rorl
mov
stos
movsl
dec
in
push
sbb
icebp
push
popaw
mov
inc
push
mov
les
cmpsb
jg
jne
cmpb
into
ror
push
adc
in
and
aaa
dec
sub
stos
add
fwait
fwait
repnz
addb
out
push
mov
lods
jp
fidivrl
inc
mov
out
mov
and
xchg
movsb
fnsave
dec
jl
jo
jle
cmp
leave
rclb
mov
inc
aad
fildl
sti
aaa
jmp
push
inc
sbb
mov
mov
stos
sbb
pop
stos
adc
mov
pop
push
mov
xchg
clc
sahf
sti
ljmp
cmp
movsl
cwtl
or
jmp
jmp
adc
push
adc
das
aam
jnp,pn
rol
adc
out
push
es
aam
push
scas
adc
into
inc
popa
push
sbb
mov
jnp
adc
fucomip
sub
scas
xor
sbb
dec
in
or
or
push
xchg
fisubs
push
sarl
xor
fstl
push
jmp
data16
ret
xor
inc
add
movsb
inc
cmp
leave
mov
adc
xor
push
xchg
push
insl
loope
imull
iret
pop
lret
jp
fdivr
fxch
xchg
insb
lea
lods
mov
out
bound
jb
clc
inc
lret
sub
sbb
je
xor
pop
cmp
cmp
pop
daa
jle
sbb
addr16
ja
int3
cmp
shr
cmp
push
mov
and
scas
inc
arpl
in
arpl
addr16
lret
xchg
ljmp
cmpl
mov
adc
pusha
mov
push
cli
enter
lcall
fisubrs
pop
adc
fisubrs
mov
jnp
insl
outsb
cwtl
push
sub
xor
cmp
pop
ficoml
and
into
std
rol
mov
into
cmp
dec
adc
sahf
xchg
inc
mov
in
xchg
sub
jp
js
hlt
stos
mov
and
pmulhw
movsb
lret
or
out
test
dec
cmpb
jp
sbb
stc
aas
call
sbb
adc
or
mov
pop
faddl
icebp
ja
test
sub
push
fsubrl
mov
mov
jne
sti
fisubrl
sub
mov
cmp
enter
int
in
cmp
orl
in
jno
stc
test
xchg
pop
pop
cli
not
mov
dec
movsl
sbb
cmp
cmp
jp
xchg
adc
and
jmp
push
adcb
lret
movntq
out
cmpsl
addr16
mov
mov
dec
icebp
cmp
sub
sbb
or
cli
and
adc
add
jno
popa
stos
push
lcall
xchg
pop
orl
sbb
or
cli
and
adc
add
jno
popa
stos
push
lcall
icebp
pop
orl
sbb
or
cli
and
loope
add
jno
jno
push
fwait
test
push
pop
mov
sub
sbb
xor
fiadds
fiaddl
mov
scas
gs
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fbstp
call
negl
jbe
sbb
les
outsl
movsb
pop
mov
xchg
aas
xchg
das
fbstp
call
lahf
xor
add
adc
hlt
pop
hlt
das
les
outsl
movsb
pop
test
test
das
jge
insl
iret
pop
decl
lahf
sub
sbb
adc
std
not
dec
fwait
sbb
fmuls
das
or
nop
and
lds
stos
sub
pop
aaa
movsl
in
in
mov
cltd
call
jo
mov
fnsave
hlt
push
jecxz
outsl
imul
mov
mov
adc
call
inc
mov
or
movsb
push
dec
iret
test
xchg
cmpsb
gs
lea
jo
fistpl
adc
and
subb
pop
jne
lock
leave
jp
adc
sahf
sub
dec
stos
in
in
xor
lds
mov
jnp
test
add
ss
lret
sbb
jns
mov
or
enter
lods
fildll
inc
call
lahf
and
add
or
dec
fdivrl
outsl
mov
aas
xchg
inc
or
and
dec
icebp
adc
in
cwtl
cmp
jle
jl
cmp
adc
popf
dec
xlat
xor
add
inc
scas
cmpsl
daa
xchg
cmp
push
xchg
add
lock
xchg
sbb
lahf
xor
add
adc
in
hlt
dec
les
outsl
movsb
pop
mov
test
xchg
das
fbstp
call
lahf
xor
add
adc
in
hlt
dec
les
outsl
movsb
pop
mov
test
xchg
das
fistps
sti
dec
daa
test
push
push
xor
rcl
lds
leave
stos
pop
in
loopne
int3
dec
cli
adc
ds
mov
int3
ja
fs
mov
es
push
jns
int3
add
adcl
adc
pop
test
jno
push
mov
jmp
fwait
lods
xchg
rcrb
xor
push
fistpl
jo
push
movsb
out
adc
dec
pop
lds
cmpsl
xchg
add
jbe
inc
outsb
xchg
fxch
fs
mov
pop
pusha
push
insl
add
int
sbbl
cmpsl
into
aad
arpl
sub
aam
shll
fists
out
sub
push
pop
loop
jp
sarl
sbb
out
out
cltd
call
mov
fldl
xchg
ljmp
push
pop
jnp
shl
adc
and
lahf
stc
hlt
or
repz
mov
lret
mov
pop
test
fldt
leave
adc
dec
cmp
cltd
bndldx
cmp
mov
mov
pop
xchg
cmp
and
lock
cmp
lock
add
stos
or
xor
adc
lea
lods
add
mov
insl
pop
iret
xor
xchg
ljmp
jno
and
xchg
xchg
mov
add
dec
aad
hlt
rcrl
push
or
rclb
adc
xor
in
insl
jne
jne
lret
dec
mov
lock
xlat
mov
scas
and
loopne
lods
jle
xchg
adc
xchg
push
adc
adc
pop
push
cmp
sbb
adc
push
aas
xchg
xchg
repnz
enter
pop
icebp
fnstcw
xor
and
stos
dec
cmp
test
roll
sti
ss
adcb
in
stos
test
test
pop
mov
inc
sub
cmp
mov
cld
lods
mov
xchg
cwtl
outsb
outsl
fildll
aam
imul
in
pop
jecxz
ss
adc
pop
xor
xorb
add
sub
mov
shrl
mov
test
mov
mov
negb
lods
mov
xlat
jp
mov
mov
dec
lcall
xor
test
imul
nop
and
push
dec
inc
das
fstps
flds
insb
cmp
stos
push
fimull
adc
mov
jbe
mov
xor
jne
fstpl
dec
mov
mov
icebp
in
test
jp
and
ds
push
adc
mov
addb
les
add
mov
inc
push
fcoml
adc
and
xchg
add
sbb
sub
mov
out
je
and
and
in
lret
ljmp
aaa
sahf
cmp
jno
imul
dec
daa
sub
hlt
jmp
mov
mov
mov
clc
pop
loope
xlat
adc
xor
outsl
mov
xchg
or
daa
push
clc
ret
and
adc
rorb
test
jno
or
insl
xchg
lock
adc
mov
jg
dec
xor
out
pusha
jbe
jno
ja
cmp
mov
mov
cmpsl
add
movsl
pop
je
cmpl
jne
inc
cmp
add
xchg
ret
xchg
bound
jmp
into
add
adc
shl
jb
pop
cwtl
xor
fdivl
mov
gs
lods
int3
daa
movsb
test
pop
jns
push
dec
sbb
dec
popa
cs
jg
stos
jg
push
int3
in
cmp
pop
repnz
or
xchg
cwtl
les
testb
in
inc
pop
sbb
mov
push
inc
jmp
cmpsl
lods
and
clc
dec
inc
mov
inc
xchg
fisubl
enter
cmpsb
jbe
dec
in
icebp
out
ljmp
lea
lahf
jmp
adc
rcrb
cmpb
mov
imull
or
adc
push
cs
cmpsl
adcl
push
cmp
into
jl
popf
jb
imul
mov
mov
es
xchg
fsubr
enter
adcl
mov
mov
out
sbbb
xlat
mov
test
call
cs
pop
ss
mov
lock
cs
ret
mov
jo
mov
fidivrs
or
std
bound
ljmp
test
jne
mov
sbb
xor
aad
adc
pop
inc
fsubrs
jmp
pop
jl
movsl
or
cmc
cmc
out
pop
xchg
ja
fwait
jg
jae
and
dec
and
mov
and
scas
inc
sbb
mov
jo
iret
sbbl
aam
fldl
dec
addr16
popa
daa
shl
cltd
and
les
mov
adc
orb
cmp
lea
dec
rcrb
sbb
mov
cmp
lods
xchg
and
jle
sbb
mov
movsl
or
pop
leave
loop
xchg
aam
int3
pop
adc
jne
push
fsubrp
pop
scas
rorl
pop
mov
ss
icebp
sub
test
divl
leave
mov
addr16
ljmp
pusha
jmp
in
xor
aam
std
push
mov
cmp
into
sub
cs
adc
xor
xlat
sarl
add
cld
sbb
push
repz
add
loop
incl
or
add
idivb
mov
xlat
push
notb
sbb
add
lret
xor
ds
iret
jo
lds
sub
scas
hlt
mov
dec
pop
das
jo
xlat
mov
jg
andl
add
lahf
jnp
js
ja
in
lods
aam
filds
repnz
sbb
and
hlt
push
dec
sbb
imul
mov
aam
dec
jns
out
out
insl
sub
pop
std
pop
xor
in
mov
cmpsb
inc
mov
les
xchg
popa
pop
insl
cmp
or
sbb
cmp
std
and
cmp
xchg
mov
fimull
mov
sbb
adc
mov
fimull
or
dec
jnp
mov
dec
mov
aaa
enter
lods
push
cmp
int
out
inc
and
popa
or
xor
mov
fisubrl
add
fisttpll
cmp
lret
arpl
add
pop
repnz
cltd
sbb
loopne
push
xchg
loopne
adc
lcall
ret
xor
ss
aam
xchg
mov
mov
jmp
out
sets
cmc
sub
cld
pop
lret
fwait
and
sub
push
dec
divb
ljmp
mov
shll
pop
jl
or
dec
es
push
sub
mov
dec
fs
xor
xchg
push
inc
adc
fldt
and
addr16
pop
ret
scas
jp
sub
rclb
popa
cmc
jno
push
mov
mov
andb
fldcw
sbb
mov
mov
daa
jmp
sub
mov
mov
xchg
popf
movsb
and
cwtl
jb
cmp
movsl
add
dec
mov
jns
pop
mov
mov
and
aaa
jo
dec
imul
cmp
sbb
mov
test
daa
lahf
pop
xor
add
scas
sub
pop
test
mov
push
add
mov
test
fwait
loopne
fistl
lcall
mov
faddl
es
aam
dec
movb
rcrb
cmc
das
ret
stc
dec
outsl
jl
stos
dec
push
and
mov
xchg
in
pop
insb
adc
push
pushf
mov
jns
dec
movsl
fs
cmp
xchg
mov
test
push
bound
out
inc
aaa
push
into
inc
popa
repz
shl
adc
sub
add
sub
sti
dec
loopne
inc
jge
lret
xchg
xchg
jae
stc
cmp
ds
add
push
cwtl
aas
cmp
xchg
pop
add
pop
pop
cli
sti
cmp
cmp
inc
push
test
lret
jno
push
out
adc
inc
lcall
dec
mov
cmpsb
add
push
inc
mov
push
xchg
test
pop
das
xchg
lock
daa
arpl
lcall
sbb
and
fcoml
mov
push
fildll
int
in
roll
sbb
cmp
xchg
adc
mov
mov
nop
add
ja
cmp
add
or
sub
pop
mov
xchg
inc
inc
xor
xor
bound
imul
cmpsl
push
loope
outsb
sbb
mov
inc
jnp
inc
adc
dec
jns
push
mov
push
pop
fnstenv
xor
jo
mov
pushf
jge
popl
cmpsl
mov
pop
jae
xor
mov
or
or
fnstenv
mov
xchg
push
lds
in
pop
mov
xor
movsb
vmovlps
aam
fs
sub
push
push
mov
jle
mov
cmpsl
cmpsb
and
mov
lret
daa
sbb
mov
ja
dec
stc
jp
pusha
testl
mov
jno
sbb
pop
inc
xchg
lea
pop
std
shll
push
pop
mov
jne
in
push
loopne
adc
jo
push
xchg
insl
pop
test
and
loop
test
jl
into
push
scas
imull
inc
daa
rol
jns
call
cmc
sarb
jl
mov
mov
lret
add
mov
ja
push
push
addb
aam
popa
lret
dec
or
push
dec
out
inc
js
test
loop
pop
rclb
jnp
dec
cmc
popf
test
or
mov
std
jae
jbe
in
cltd
pop
call
push
cmpsl
daa
aam
push
mov
lea
push
das
sahf
xor
push
mov
xor
add
pop
out
ror
lea
iret
fsub
lret
jno
add
pop
sbb
cli
test
shrl
jno
or
mov
mov
adc
sub
dec
mov
mov
je
movsb
mov
mov
inc
out
mov
jb
orb
pusha
sti
loopne
xchg
mov
and
inc
lods
dec
neg
pop
push
jle
adcl
or
mov
pop
sub
jg
aam
and
es
xlat
push
xchg
inc
and
push
xchg
test
dec
adc
testl
xor
inc
push
sub
add
xor
pop
xor
jp
push
jbe
mov
std
popf
xor
sub
subl
pushf
lds
lock
push
enter
jg
mov
loop
sub
pop
mov
cmpsb
or
xchg
dec
fisubs
sbb
pop
xchg
mov
aas
aas
fildl
adc
mov
and
enter
cli
dec
mov
sti
add
addl
sub
xchg
stos
push
cmp
mov
xor
mov
sub
adc
jo
das
insb
mov
jns
mov
sbb
dec
sbb
push
nopl
scas
jmp
aas
in
clc
mov
aas
lahf
push
push
es
pop
lret
and
test
or
add
es
rcrb
or
mov
loopne
jl
lock
cmp
cmp
ret
das
mov
and
movsl
inc
repnz
cmpsb
push
sbb
xchg
mov
ljmp
aam
mov
push
out
nop
jmp
and
push
xor
cmc
cmp
or
or
rcrb
mov
sub
cmp
or
mov
ret
sbb
test
jb
mov
fmull
incb
sti
sbb
add
mov
sbb
xlat
inc
mov
out
sti
vcomisd
cmpsb
into
sti
aam
in
or
inc
and
cmp
rorb
aam
mov
fadds
movaps
cwtl
inc
fbstp
mov
lahf
and
jns
lcall
aaa
call
pop
gs
pop
movb
xor
jmp
dec
sub
repnz
and
shlb
orb
sub
scas
push
xchg
and
enter
lret
lahf
mov
sbb
sti
stc
cmp
cli
mov
adcl
fsubrs
add
lds
mov
dec
fcoms
jle
mov
inc
fnstenv
cmp
xchg
push
sub
cmpsb
jp
add
cmp
stos
jae
or
insb
add
mov
inc
fnstsw
clc
ds
push
out
cmp
jno
mov
shl
add
pusha
sahf
pop
and
pushw
cmc
jle
and
dec
dec
xor
insl
adc
leave
xor
mov
insl
orl
sbb
jno
jns
mov
jl
mulb
mov
aas
aas
out
into
ss
filds
iret
or
lret
lcall
xor
mov
gs
hlt
ds
pop
mov
movsl
sub
mov
fisubl
and
or
pushf
push
and
dec
add
push
sbb
lock
popa
cmpl
mov
cmp
and
adc
push
pop
cmpsl
mov
add
pop
cmp
mov
or
mov
adc
std
inc
lahf
movl
pop
jmp
jb
data16
ret
cmpsb
jmp
push
jmp
orl
mov
dec
mov
xchg
cmp
push
ja
int
jb
int
and
neg
xor
and
ret
dec
out
cmpsb
sub
mov
test
mov
les
rcll
sub
insb
pop
push
icebp
xchg
sub
es
mov
mov
je
ja
inc
outsl
aam
xor
rcrl
pushf
out
pusha
mov
push
mov
stos
mov
or
ud2
arpl
and
std
xlat
xor
inc
shll
ja
cmpsb
jo
stc
add
stos
push
push
ja
daa
nop
jle
dec
in
inc
adc
adc
or
stos
xor
and
inc
dec
sub
dec
mov
xchg
ret
mov
cmp
xor
out
mov
iret
push
out
jg
ds
fsubr
or
sahf
jge
fists
pushf
pop
imul
or
pop
ffree
ss
xchg
jo
aas
lods
or
mov
jle
ljmp
cs
fldt
lock
adc
imul
lret
mov
lods
loope
mov
inc
rclb
cmp
push
inc
mov
pop
mov
jb
repz
jno
push
out
pop
sbb
pop
aam
icebp
movsb
mov
cmp
and
or
scas
push
xor
mov
jle
jecxz
les
mov
inc
mov
jne
and
push
popf
cmp
scas
sub
ljmp
xchg
arpl
inc
mov
les
daa
jg
mov
add
jbe
shll
xchg
fcmovnu
aas
stos
xorl
popa
jns
aam
imul
jmp
imul
or
arpl
xlat
subl
mov
test
sub
dec
adcb
data16
imul
dec
data16
shrb
push
dec
mov
mov
xchg
lods
sub
adc
int
ficomps
jle
fwait
xchg
xchg
cwtl
add
pusha
and
addr16
xchg
xor
outsb
test
jge
sahf
div
or
sub
or
daa
mul
lock
inc
xor
cwtl
add
pop
dec
repnz
inc
mov
sub
ficoml
xchg
stos
mov
xchg
inc
fwait
xorl
ja
loope
xor
mov
or
into
mov
inc
xchg
dec
xlat
dec
xchg
mov
pop
aam
xor
dec
addr16
ret
repz
xchg
jne
fnstenv
lods
faddl
jle
cmpsb
dec
mov
jge
aam
shl
mov
sub
es
test
xor
lahf
jp
stos
lds
loopne
out
sti
cmp
fldl
cmp
jbe
rorb
call
std
xchg
jns
xchg
sub
push
dec
pusha
scas
sbb
jecxz
sbb
shr
pop
es
dec
jns
mov
pop
aad
push
lods
dec
inc
mov
sbb
pop
inc
dec
daa
movsl
xchg
aad
out
lret
or
cmpsl
loopne
cmp
or
and
dec
push
aas
and
add
add
aam
sti
and
fisubrs
xor
lea
jmp
adc
loopne
andb
cld
adc
and
pop
and
sub
jl
cld
js
iret
aam
mov
push
dec
sub
add
mov
std
pop
iret
adc
pushf
jo
mov
adc
gs
aam
sbb
dec
dec
test
xor
dec
ret
or
mov
dec
sbb
lds
mov
push
add
ljmp
fwait
mov
sub
cld
movsb
arpl
cld
test
push
and
xor
addr16
mov
pop
cltd
insb
out
lahf
mov
jno
cmp
inc
ret
repz
das
inc
fnstenv
adc
cwtl
add
mov
clc
pop
xor
fwait
imul
add
enter
push
mov
cwtl
or
mov
inc
jno
aaa
push
pusha
ja
pop
ret
outsl
jae
cltd
lea
cmpsl
jecxz
add
iret
lcall
or
cmpsl
loope
out
rorb
pmullw
clc
sbb
push
les
jns
jp
fnstsw
xchg
ja
xchg
mov
jg
push
movsb
mov
bound
stos
stc
pandn
xor
jmp
lret
jnp
lods
push
cltd
mov
icebp
sub
lea
iret
cwtl
add
xchg
and
jp
xor
dec
dec
in
in
daa
fwait
in
mov
in
inc
push
sti
cs
adc
xor
mov
aad
lea
ljmp
stos
or
push
fdivrs
test
scas
sbb
pop
in
jb
cs
fwait
pushf
imul
adc
xor
lahf
sbb
inc
pcmpeqw
cmpsb
xchg
push
mov
shlb
adc
rcrl
arpl
test
movsb
xor
push
mov
xchg
sub
mov
mov
xchg
stc
fcoms
imul
xchg
or
cwtl
add
jns
ret
lea
cmp
cmp
mov
mov
sarb
inc
scas
xor
and
test
insb
in
ja
push
ret
jnp
dec
cs
fdivs
mov
fs
lea
mov
ds
fistpl
sub
popf
mov
outsl
adc
andb
xchg
sbb
loope
sbb
sbb
add
or
push
mov
or
sbb
and
adc
call
sbb
cmp
jo
std
lcall
mov
lods
ret
dec
fcmovne
cmp
mov
xor
cmp
or
sub
adc
nop
dec
ds
leave
js
xor
out
adc
sbb
out
ds
cmp
fwait
clc
mov
push
loopne
push
jne
cmp
lret
mov
out
sti
and
enter
lds
outsl
jle
scas
mov
mov
fstpt
fisubs
and
test
pop
jo
outsb
icebp
add
jg
call
xchg
test
adc
push
fs
outsb
lods
orb
daa
hlt
or
adc
test
in
jb
push
pop
es
mov
js
mov
ret
push
jb
popa
lock
gs
sbb
sbb
mov
jbe
jg
outsb
add
pop
sbbb
loop
mov
mov
sahf
and
push
scas
icebp
rolb
push
std
and
cmp
cwtl
clc
xchg
lock
int
fwait
cmp
bound
adc
pop
addb
loop
adc
dec
mov
outsl
sar
jbe
push
or
jns
adc
test
cmp
jnp
gs
and
mov
notl
inc
push
ljmp
out
ja
sbb
cmp
ja
mov
inc
jecxz
cmp
test
jne
push
jge
cmp
orb
pop
pop
cs
xlat
mov
ss
rep
mov
dec
jle
push
cmpsl
mov
and
sub
lods
mov
addr16
icebp
sbb
or
mov
add
fisubrl
xor
aaa
test
leave
xchg
stos
sub
outsl
push
and
adc
sub
rcrl
lahf
jle
les
rorb
dec
and
add
xchg
test
cs
scas
lahf
pushf
pop
pushf
add
mov
int
jmp
inc
loopne
xor
mov
out
std
cmpsl
les
mov
sub
inc
dec
pop
xchg
mov
in
repz
movsb
test
mov
sti
imul
sbb
aad
sub
data16
sbb
dec
aas
jno
add
cmpsb
mov
mov
popaw
fdivrs
sbb
mov
loope
cmp
push
out
and
xor
add
adc
in
hlt
dec
les
outsl
movsb
pop
mov
test
xchg
das
fbstp
call
lahf
xor
add
adc
in
hlt
dec
les
outsl
movsb
pop
mov
test
xchg
das
fbstp
jg
out
and
xor
add
adc
in
hlt
dec
les
outsl
movsb
pop
mov
test
xchg
das
fbstp
inc
call
lahf
xor
test
or
outsb
jg
sbb
xchg
cmp
jnp
imul
cmp
ljmp
add
sbb
jp
psubq
stos
sub
cmp
ret
sub
sbb
or
pop
mov
stos
inc
fwait
jp
or
jle
sub
cmp
adc
pop
sub
or
pop
inc
dec
dec
test
testl
inc
pop
mov
cli
pop
scas
jg
out
mov
mov
gs
icebp
cld
pop
xor
or
xor
hlt
fiaddl
ds
into
push
cmpsl
lret
xchg
fwait
xchg
mov
std
ljmp
loopne
pop
or
jnp
push
xchg
sahf
test
sti
xchg
fcomp
and
lret
mov
pop
mov
jnp
mov
sbb
or
xchg
cmpsb
daa
xlat
adc
jnp
xchg
out
movsb
repnz
xchg
addr16
stc
xor
scas
jp
dec
fwait
dec
mov
pop
jle
mov
push
mov
mov
mov
into
sub
stc
cmp
sub
sbb
imul
enter
mov
add
sub
pop
lea
pop
xchg
dec
in
out
sub
xlat
sbb
cmp
sbb
arpl
jge
lret
popa
lods
sbb
pop
jecxz
sti
inc
xor
dec
jb
sbb
bswap
push
out
xchg
jg
pop
scas
jnp
mov
outsl
mov
imul
pop
stos
push
jp
or
sbb
sub
cmp
lret
sub
sbb
or
pop
mov
stos
push
jp
or
sbb
sub
cmp
lret
ds
jmp
cmc
jge
or
xor
dec
shlb
inc
sub
insb
outsl
cmpsb
jecxz
bound
out
sub
fidivs
fidivl
xchg
or
sub
add
orl
lret
and
jl
rolb
arpl
mov
mov
clc
xor
jp
jb
rcrb
rclb
negb
mov
cli
call
jp
loop
fdivs
adc
lahf
sub
cmp
in
iret
pop
push
iret
je
pusha
outsl
test
xchg
shlb
or
sub
out
cmp
push
mov
movsl
xlat
sbb
pop
insl
xchg
out
hlt
inc
jbe
push
sbb
inc
adc
adc
mov
out
pop
popf
inc
stc
xchg
mov
xor
testb
rorb
flds
cs
aad
xor
loopne
jbe
xchg
add
push
sarl
pop
add
mov
pop
mov
xor
sbb
inc
add
xor
mov
sbb
int
jmp
adc
loop
repnz
mov
jle
inc
mov
or
jg
int3
lea
add
popf
test
cmp
fiaddl
mov
and
jne
push
cli
adc
mov
jns
mov
mov
push
mov
mov
je
lds
dec
pop
cmp
hlt
sbb
insl
sti
arpl
and
out
arpl
pop
and
pop
cmp
jmp
imul
icebp
mov
or
mov
outsb
test
aad
ds
cmp
sub
add
xchg
repnz
xor
pop
ficoms
sbb
mov
mov
popf
xchg
cmpb
fcmovu
or
dec
test
iret
clc
popa
aad
cli
aam
inc
cmpsb
arpl
and
or
jne
jl
pop
lahf
orb
imul
ja
or
pop
enter
ljmp
mov
shl
in
add
cld
xchg
xchg
inc
sub
pop
lock
pop
push
mov
mov
pop
cmpsl
mov
in
pushf
mov
xchg
lret
fwait
sub
sbb
adc
xchg
adc
fiadds
std
cli
sub
dec
fnstenv
es
out
sbb
imul
sbbb
ficomps
mov
sbb
loop
popa
or
dec
sbb
or
push
dec
pusha
xchg
sbb
stc
sbb
and
push
sbb
mov
mov
cld
xor
xor
ja
and
add
or
ret
mov
lcall
fidivrs
dec
mov
ret
cmpsl
aad
sub
pop
sahf
jo
sbb
inc
notb
scas
jbe
lds
mov
jno
stc
cld
fsub
sub
imul
sub
aad
aas
sub
fs
and
negb
fldenv
mov
repnz
dec
insl
sbb
aaa
cmp
xchg
mov
sub
xorl
jno
ljmp
cmpsl
ja
jbe
sub
fwait
rcl
sbb
shlb
add
inc
js
xor
gs
outsl
cmp
mov
or
ret
imul
and
movsb
push
dec
inc
and
inc
mov
mov
jmp
mov
push
fldt
mov
push
in
subl
mov
xchg
out
jnp
push
gs
sub
sbb
clc
test
inc
out
out
cli
stc
lods
aaa
int
sub
dec
cmpsl
sar
dec
or
pop
xorl
jo
mov
jae
xchg
sub
fists
movsl
add
xchg
fs
jnp
push
lret
adc
mov
and
inc
dec
jl
stos
sbb
orb
je
cli
out
sbb
rclb
mov
out
dec
fwait
test
stos
xor
mov
jnp
sub
mov
mov
pop
pop
pop
mov
pushf
int
scas
cmc
lds
sbb
popf
inc
shr
std
jno
jne
mov
xlat
mov
pop
leave
pop
jns
xor
jle
sub
jae
ficomps
jl
adc
pop
xor
lods
and
sbb
aaa
insl
les
fwait
pop
outsl
pop
in
add
inc
xor
inc
push
xchg
sub
sbb
in
imul
xchg
push
rcrb
xchg
addb
outsb
jae
je
icebp
lds
adc
fwait
scas
movsb
adc
jg
movsb
and
or
xlat
fnsave
jns
and
mov
and
inc
xor
outsl
in
scas
insl
xor
cwtl
sub
or
or
push
mov
rcr
push
push
int3
xchg
ret
in
loop
mov
mov
movsl
sbb
scas
xchg
inc
adc
fwait
xor
mov
ljmp
jno
leave
mov
xor
shll
cmp
daa
call
int3
pop
in
dec
es
dec
repz
and
sub
fistps
lea
dec
pop
add
dec
or
int
gs
outsb
loopne
sar
mov
fs
ja
push
rcll
mov
adc
push
push
shrb
or
inc
adc
push
mov
xor
in
dec
adc
push
ret
fistpl
xchg
lcall
mov
pop
ror
outsb
out
idivl
loop
dec
repz
cmp
xchg
mov
jnp
fldl
lds
dec
mov
cli
repz
mov
mov
sbb
mov
mov
nop
lret
lock
xchg
sbb
fdivp
leave
test
jmp
stos
stos
lcall
xor
fidivl
push
ljmp
mov
jl
or
cltd
mov
xor
test
inc
jl
dec
test
ja
sbb
pop
cmp
add
rcl
ret
xlat
or
testb
insl
sub
sbb
dec
dec
push
bound
inc
sub
mov
jecxz
mov
shlb
dec
movsl
dec
push
movsb
adc
mov
addr16
call
pop
mov
jns
fstps
mov
push
int
jnp
push
mov
push
bound
sub
push
push
ds
daa
pusha
adc
out
aad
mov
dec
movsl
mov
mov
test
gs
mov
xchg
xlat
lods
sti
push
sbb
xchg
and
cmp
pushf
sbb
lods
insl
incl
mov
ss
pop
call
push
jg
andl
inc
and
cmpsb
xor
cmp
ja
ljmp
push
xorb
mov
jno
out
sub
rclb
xor
jb
or
push
punpckhbw
mov
mov
idiv
cwtl
bswap
mov
sub
outsl
test
mov
stc
push
fbld
rcrb
sbb
dec
sbb
inc
xchg
scas
movsl
js
sbb
sbbl
mov
push
imul
in
mov
clc
jge
xor
or
mov
aad
push
das
mov
push
in
mov
data16
pop
pushf
xchg
rcrl
xchg
jb
push
fdivp
jmp
icebp
inc
inc
pop
es
enter
pop
std
fidivl
lret
mov
sbb
arpl
push
xchg
fmuls
pop
and
mov
adc
xchg
lock
inc
into
push
dec
xchg
mov
sbb
mov
mov
ljmp
mov
mov
pop
sub
cli
stos
xor
adc
or
cmp
das
testl
scas
jecxz
iret
inc
shll
add
je
fs
das
adc
cli
xchg
leave
adc
xchg
dec
xchg
inc
jge
push
mov
mov
imul
jo
insl
sub
push
mov
nop
push
xor
decl
lea
xchg
jne
in
cli
sarb
lret
xor
adc
mov
es
mov
push
and
inc
test
mov
dec
add
shl
out
sbb
mov
xchg
fst
clc
test
sub
stos
mov
mov
jbe
cltd
dec
in
repz
add
cmp
jo
int
clc
out
mov
xor
pop
cmp
loope
mov
inc
mov
repnz
xchg
push
push
or
mov
test
dec
shll
sub
adc
xchg
pop
neg
frstor
pop
fwait
adc
push
pop
lret
movb
cmovl
mov
or
cmc
mov
add
rcrb
clc
pop
inc
lods
mov
insb
mov
addr16
mov
mov
pushf
sbb
jp
push
add
jmp
testb
push
leave
sbb
inc
aas
sbb
mov
repz
test
stc
sub
sti
push
lret
mov
das
mov
lods
cmc
sbb
mov
xchg
mov
and
scas
mov
insl
out
inc
xchg
shll
lret
stos
push
mov
shll
test
lods
mov
pop
sub
sub
adc
addr16
daa
mov
sar
repnz
addr16
mov
mov
add
push
testl
pop
lret
mov
mov
out
mov
push
mov
movsb
shlb
jle
sti
cmp
inc
loopne
fwait
rcrb
jecxz
pushf
negb
xchg
cli
fmuls
xchg
popa
test
sub
sahf
call
cli
xchg
inc
pop
out
jo
push
lea
pop
jecxz
flds
push
test
and
pop
adc
push
not
ja
xchg
mov
in
jp,pn
fwait
out
ds
bound
mov
or
fmull
pop
xchg
add
loope
sub
sbb
fimuls
insb
std
jle
fsub
mov
fs
dec
add
std
sbb
into
cmp
sub
lret
cli
rcl
into
outsl
ds
data16
ljmp
pushl
mov
fwait
in
xchg
jo
cmpsl
es
or
shll
ljmp
inc
notb
js
sub
popf
jns
jb
mov
push
jae
in
mov
cli
or
jnp
jg
subl
xchg
or
sbb
xor
fildl
cmp
push
cmc
xor
int
loopne
mov
xlat
cmc
xchg
pop
mov
dec
mov
add
arpl
jle
push
inc
jb
and
dec
sbb
jae
lea
dec
gs
dec
cs
pop
jno
and
das
xor
xor
xor
sub
xor
or
es
and
aas
loop
mov
pop
mov
das
push
and
popf
mov
ret
cmp
mov
jbe
xor
in
mov
mov
cmp
sbb
daa
ja
sub
jns
sbb
fbld
xchg
xor
or
movsl
dec
out
xlat
and
and
or
jb
dec
mov
mov
jns
sub
dec
cs
pop
jne
in
adc
push
cli
stos
xchg
adc
cmp
scas
test
sub
mov
aad
ljmp
push
into
icebp
hlt
les
mov
fcmovnb
fidivrl
and
lret
sub
add
aad
loope
daa
fsubrs
insl
add
out
popa
dec
aad
xchg
adc
mov
or
xor
movsb
and
enter
shlb
outsl
dec
fsub
ret
jbe
pop
jno
js
ds
test
fs
faddl
fxch
mov
pop
divb
jl
mov
stos
sub
enter
int3
pop
mov
mov
add
cmpsl
mov
jo
pop
rclb
imul
stc
pop
dec
lcall
cld
das
add
cld
mov
negb
mov
mov
mov
xchg
inc
stc
xchg
inc
iret
inc
push
mov
add
jp
mov
or
sub
insb
testb
popa
xchg
negb
or
inc
jg
cmpl
mov
push
inc
lds
ljmp
inc
test
fstp
jno
mov
mov
cmpsb
out
mov
mov
or
lock
insb
loope
shrl
into
cltd
jae
cmpsl
pop
and
iret
inc
inc
pop
mov
jno
push
xchg
in
std
in
or
bnd
mov
jl
or
cmp
ret
mov
pusha
mov
sbb
mov
insb
hlt
movsb
in
jp
cmp
jle
xchg
icebp
ljmp
movsl
sbb
inc
bound
ljmp
ds
cmp
in
out
fsts
in
mov
dec
jmp
outsb
sub
inc
push
sbb
xchg
mov
stc
leave
dec
push
aaa
jne
jae
enter
stos
inc
out
sbb
popa
or
sbb
push
pushf
loop
stc
inc
inc
lea
xor
adc
pop
lods
les
jp
inc
repnz
mov
mov
sub
or
inc
aaa
and
xchg
mov
jecxz
aas
lcall
aad
ja
pop
cmc
jl
in
out
mov
mov
pop
mov
push
fcomps
mov
mov
sub
das
enter
cmpsb
sbb
fmul
outsl
pop
xor
inc
xchg
mov
aas
xchg
stos
fldcw
sbbb
test
sub
mov
jg
sarl
cmpsl
enter
sub
ljmp
mov
imul
aam
xchg
std
loop
hlt
dec
pop
mov
xchg
clc
movsb
mov
mov
int
sbb
add
jg
fbld
jmp
rorl
in
call
adc
call
cld
in
call
in
pusha
ret
roll
xchg
aad
sub
ret
sub
dec
loopne
imul
popa
fists
push
mov
mov
movsb
cmpl
push
repz
cmpb
push
sahf
xlat
cmp
sbb
leave
cmc
mov
xchg
cmpsl
adc
sbb
sub
fcmove
adc
xchg
adc
scas
dec
mov
xor
or
cli
ljmp
xchg
repnz
mov
xor
and
sbb
jb
mov
adc
sti
insl
test
pop
gs
adc
or
ja
mov
fistps
sti
in
xor
mov
mov
xor
sti
loopne
xor
adc
call
stos
xor
or
mov
xchg
and
bound
jnp,pt
int
popf
xchg
imul
xchg
aad
out
dec
out
aad
rcl
sbb
jecxz
outsl
cs
and
jp
pop
sbb
scas
pop
idiv
sub
movsb
jp
push
push
add
push
dec
sbb
out
in
mov
push
push
rcll
cmp
or
sbb
fwait
mov
jmp
lods
gs
push
mov
add
xchg
mov
dec
jecxz
jne
mov
xchg
aas
push
cld
and
inc
jns
pop
stos
jns
loope
push
xchg
or
or
mov
lcall
loop
add
popa
fsts
mov
xchg
cmp
dec
or
sub
shl
xor
push
xchg
loopne
call
fistl
jmp
rorb
sti
adc
into
lods
clc
lahf
les
popf
push
addb
push
orl
pop
mov
dec
fadds
dec
add
pop
mov
xchg
add
ss
xchg
test
and
xchg
aaa
ss
mov
inc
cmp
jmp
inc
and
repz
push
xchg
dec
push
lods
lret
xor
dec
and
out
jnp
aad
in
or
outsl
out
cmp
xchg
je
mov
ljmp
mov
movsl
mov
mov
or
shl
inc
int3
repnz
leave
jo
aaa
or
jp
outsl
mov
add
dec
pop
xor
sub
add
test
jmp
outsl
fistl
movsl
mulps
fsubs
lods
ret
mov
sbb
jb
int
sbb
cmp
sbb
xor
lock
add
pop
mov
jecxz
out
sub
push
arpl
mov
xor
popl
push
dec
cs
xchg
in
jle
sbb
daa
jg
imull
mov
mov
mov
popa
or
mov
into
xor
inc
push
dec
xchg
outsl
and
lods
arpl
dec
insb
stos
jae
movsl
insb
jb
sub
add
dec
hlt
sub
mov
cmpsb
xor
sbb
mov
loope
xor
cmp
jp
jbe
shll
and
dec
popa
adc
sbbl
in
shlb
xchg
adc
ds
and
jge
lods
jl
add
push
or
cmc
int3
insl
adc
xchg
and
popf
mov
out
sub
and
data16
adc
dec
push
cmpsb
out
aam
js
rcl
pop
popa
push
cwtl
mov
xor
xorl
scas
jg,pt
jae
adc
xchg
mov
push
pop
push
aam
adc
test
sub
sub
nop
push
lret
pop
push
js
ja
push
ret
add
gs
stos
dec
call
mov
sbb
mov
bound
mov
sub
sahf
ror
cmp
ljmp
fwait
dec
mov
sbb
stc
inc
pop
sbb
jecxz
popl
leave
mov
int3
aam
adc
sub
ljmp
ret
xchg
mov
fs
mov
ja
jp
mov
ficompl
and
xorl
stc
xor
pop
jns
mov
and
orb
pop
pop
xchg
repz
adc
dec
mov
dec
mov
cmp
fcmovbe
add
dec
pop
cmp
cs
mov
sub
lret
push
dec
int
int3
pop
arpl
dec
fcmovnbe
gs
js
bound
mov
cmp
push
daa
add
fmull
push
dec
jle
dec
lret
shlb
aaa
out
mov
or
xchg
push
push
xor
adc
add
pop
les
popf
and
adc
jne
js
std
sbb
jge
ds
dec
xor
or
jp
jo
stc
inc
inc
icebp
iret
xchg
add
mov
inc
lods
inc
dec
mov
dec
xchg
jg
push
ljmp
cmp
cmp
nop
outsl
in
adc
outsb
mov
push
pop
push
jno
sbb
cmp
and
xchg
es
mov
shrb
repnz
sahf
movl
arpl
pop
fs
adc
scas
je
mov
dec
mov
cmp
mov
loop
and
divl
and
add
sub
je
leave
jnp
repz
pop
andb
and
cli
mov
dec
popa
fwait
dec
pop
mov
sbb
ss
jge
pop
push
cwtl
cmp
mov
lret
bound
xchg
out
test
mov
mov
ss
das
and
divb
jge
mov
scas
add
roll
rcll
inc
xlat
mov
mov
inc
repnz
out
insl
repnz
adc
stc
mov
cmp
in
jae
popf
and
cmp
movsb
stos
popa
push
add
sbb
into
insb
rorb
das
es
adc
sti
jae
in
popf
stc
ja
rcl
jecxz
bound
inc
inc
ds
jbe
cli
ss
scas
push
adc
push
outsb
sbb
aaa
mov
adc
clc
mov
and
test
jge
scas
xchg
xchg
es
stc
or
in
add
push
mov
jle
xor
imul
push
or
data16
pop
dec
cltd
pop
and
fisubs
out
adc
mov
je
xchg
nop
sbb
das
add
jno
mov
pop
xchg
mov
cmpsb
inc
xorps
and
inc
aad
arpl
adc
add
popa
mov
lds
push
xchg
xchg
sub
loope
mov
inc
mov
daa
sti
lahf
out
jne
idivl
xchg
loop
loopne
adc
xor
mov
add
push
or
ss
sub
inc
and
cli
pop
loopne
lret
adc
push
push
adc
push
dec
mull
and
dec
pop
xorb
mov
imul
int
ja
ret
ficoms
mov
daa
movb
lahf
mov
call
fimull
cmp
pop
add
xor
lds
xor
mov
arpl
jne
shlb
inc
mov
push
lods
cmp
sub
mov
das
pop
fists
fstl
les
ljmp
dec
sub
scas
fstp
and
dec
bound
add
and
cmp
cmc
movl
adc
cmpsl
lods
xchg
xlat
mov
test
je
out
test
mov
insb
sub
lods
push
sub
pop
pop
xor
jp
add
sbb
inc
xor
inc
ror
popf
loopne
and
adc
xor
ss
and
outsl
dec
nop
fistpll
sub
push
sbb
jo
mov
hlt
sbb
add
sub
jnp
imul
pop
stos
push
jp
or
sbb
sub
cmp
lret
sub
sbb
or
pop
mov
stos
push
jp
or
sbb
sub
cmp
lret
sub
sbb
or
pop
mov
stos
arpl
add
fisttpl
lret
sarb
imulb
bound
rorb
mov
jmp
fstpt
mov
inc
movsl
add
fwait
jp
jge
xchg
adc
and
xor
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lret
pop
mov
push
iret
test
jg
movsb
ja
rorb
add
add
pop
add
add
push
or
flds
or
push
add
add
add
add
add
test
push
add
add
dec
add
xchg
add
add
add
insl
add
add
add
imul
add
add
add
xchg
add
push
add
lods
add
add
mov
das
add
add
jno
test
add
adc
jne
xor
sbb
aas
add
add
xchg
cmp
xchg
and
add
data16
sub
add
cmp
insb
add
add
add
arpl
arpl
insl
add
add
hlt
add
add
add
aas
add
and
cmp
mov
add
jo
jae
stc
add
xor
lock
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
push
lldt
add
add
add
add
das
add
mov
add
add
add
add
add
outsl
add
add
add
add
lret
add
add
add
add
add
xor
mov
inc
add
das
add
add
add
adc
arpl
sub
addb
add
add
add
add
add
addl
mov
stos
add
add
add
add
add
add
add
arpl
enter
lock
add
add
add
adc
jp
and
insb
add
add
add
add
and
das
add
add
call
add
bound
arpl
mov
add
add
add
sub
es
add
into
add
lods
add
sub
scas
add
add
add
icebp
add
add
rolb
add
add
add
hlt
add
add
add
add
ret
add
add
add
add
add
add
add
add
mov
addl
sub
dec
add
aaa
add
inc
add
arpl
xor
jmp
arpl
dec
add
add
add
adc
add
add
add
xchg
add
aas
add
add
add
arpl
sub
and
xor
jp
mov
stc
add
add
add
add
das
add
add
fadds
add
push
add
add
jmp
add
add
add
cmp
jne
leave
add
add
add
add
add
add
add
add
leave
add
add
add
add
xor
add
add
add
add
add
stc
add
add
add
add
add
stc
add
add
add
cmp
dec
add
add
hlt
add
add
add
add
push
add
add
add
scas
add
add
add
add
imul
add
fldl
push
add
add
add
add
or
add
add
arpl
clc
add
call
add
add
add
hlt
add
add
add
add
les
push
add
add
inc
add
add
add
add
add
add
add
add
cmc
popf
jp
cmp
mov
adc
jle
out
fists
inc
sub
pop
xor
in
cli
pop
inc
mov
clc
call
mov
mov
pop
ss
cwtl
mov
jo
pop
in
adc
sub
add
lods
addr16
push
fisubs
lahf
push
aaa
adcb
xchg
es
pop
xor
push
push
rorb
cmp
jmp
data16
pop
sub
cld
or
in
adc
mov
daa
adc
mov
inc
andb
ljmp
push
jb
bound
mov
repnz
mov
nop
xchg
addb
jo
add
jecxz
pop
pop
cltd
push
hlt
pop
push
mov
call
inc
cmp
shr
fcmovne
negl
adc
sbb
dec
mov
or
pusha
ss
mov
mov
xchg
push
jbe
sub
outsl
fildll
and
cmp
push
xchg
std
mov
bound
mov
pop
stc
mov
sub
adc
cmp
or
scas
push
or
in
push
jnp
lcall
push
stc
sbb
outsb
rolb
and
sbb
pusha
leave
push
push
mov
mov
mov
je
pushf
lret
out
or
sub
xchg
mov
sbb
cmp
jmp
push
pop
pop
cwtl
pop
push
int
dec
add
stos
mov
xchg
mov
in
in
movsb
out
mov
push
shlb
sbb
sbbl
into
movsb
scas
js
scas
pop
mov
scas
lret
call
ret
xlat
shll
popf
bound
cmpsb
or
pop
and
pusha
or
fs
enter
sbbl
xor
fdivl
rorl
data16
das
les
call
mov
outsb
stc
jns
add
mov
rorb
jne
test
mov
rorl
arpl
pushf
pop
cmpsl
sub
mov
mov
scas
imul
imul
push
js
mov
xor
aaa
sbb
mov
adc
das
in
dec
notb
inc
lods
sbb
rorb
adc
mov
mov
ds
fnstenv
dec
fistl
outsb
test
jmp
push
loope
cmp
sti
dec
addb
test
mov
lcall
inc
aam
mov
pop
aad
mov
lds
push
fsts
jo
lret
out
insl
pop
std
mov
adc
icebp
sub
mov
xchg
nop
push
and
mul
cmp
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
