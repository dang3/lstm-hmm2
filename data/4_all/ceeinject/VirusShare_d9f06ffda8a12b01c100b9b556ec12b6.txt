adcl
and
pusha
xchg
jg
adc
xchg
mov
aas
es
pop
jmp
std
jle
pop
dec
cltd
popa
dec
pop
popa
push
insl
add
call
dec
lods
xchg
or
sbbb
icebp
imul
cwtl
mov
and
lds
loopne,pt
adc
popa
dec
lock
push
inc
push
test
cmp
movsl
dec
mov
test
sub
ret
push
enter
push
inc
cltd
loope
push
jnp
jae
xor
cmp
pusha
mov
test
addl
fisubs
xchg
mov
ljmp
fldcw
stos
and
or
int3
clc
xchg
test
jb
xchg
cmp
inc
je
sbb
scas
lcall
inc
lcall
fsub
out
jle
xchg
lahf
cld
xor
mov
test
pop
add
jmp
sub
imul
jl
aad
test
or
lea
pop
iret
in
scas
and
xor
jo
add
jno
sub
push
push
sbb
mov
aas
push
jmp
hlt
inc
mov
dec
insb
push
pop
inc
in
cmp
gs
in
fiadds
or
cs
popa
ja
xchg
xor
dec
lret
mov
sbb
into
stos
sbb
cs
cmp
dec
inc
xorb
inc
adc
out
mov
in
std
out
mov
xchg
dec
out
cmc
xchg
cmp
gs
and
mov
fisubs
lret
xchg
lods
call
mov
lods
sub
loopne
jle
push
insb
push
pop
mov
jecxz
xchg
test
jmp
sbb
push
mov
clc
push
xor
or
or
and
cmp
jo
add
add
sarl
sbb
fisubrs
daa
mov
ret
int3
dec
and
xor
push
incl
repz
les
adc
outsb
fisubrl
inc
cld
mov
mov
hlt
inc
cmpsb
and
push
shr
aas
ret
sbb
inc
adc
mov
cmc
inc
aad
nop
aaa
into
push
add
arpl
sbb
ja
sub
jno
mov
dec
mov
push
imul
bnd
jne
jns
adc
pop
xor
jae
scas
shld
movsb
mov
jns
jne
pusha
adc
or
inc
ja
mulb
mov
js
jmp
xchg
cld
push
cmp
sbb
fisttps
jb
and
hlt
or
cmp
jb
clc
mov
add
mov
lods
xor
mull
adc
xor
push
repnz
inc
xor
enter
push
addr16
mov
int
pop
jne
js
dec
out
push
es
fcomps
jp
pusha
pushf
adc
sbb
cmpsb
mov
adc
xor
mov
xchg
aad
mov
mov
inc
mov
sub
jnp
add
les
jecxz
sahf
pusha
mov
inc
xchg
pop
mov
jg
cmpsb
sbb
in
pop
push
lret
aad
ja
ljmp
pop
stos
sbb
sbb
lcall
pop
or
in
xchg
pop
dec
gs
shl
sub
mov
data16
pop
push
mov
out
push
in
mov
ja
iret
insl
cltd
inc
sub
repnz
imul
inc
mov
imulb
fiadds
rolb
fisubl
or
xor
outsb
movsb
pushw
mov
sbb
xlat
fsub
add
stos
ds
xchg
pusha
pop
insl
dec
lahf
fisubl
pusha
out
mov
push
push
lcall
in
loope
add
cs
cmpsb
ret
fisubs
dec
cmp
pop
pop
inc
arpl
fcoml
or
imul
jecxz
and
dec
lcall
aam
cmp
push
gs
in
std
ljmp
mov
mov
push
add
jl
test
inc
in
xchg
dec
add
fs
xchg
lock
shrl
add
sbb
mov
sub
lea
ds
mov
and
aaa
pop
scas
mov
and
int3
or
arpl
rcll
push
setg
std
cmp
push
fbstp
imulb
cmpsl
enter
outsl
sbb
movsl
gs
lahf
insb
push
ds
stos
cwtl
jb
test
mov
push
add
or
into
push
mov
aam
push
pushf
sbb
fsubs
push
or
mov
outsb
movsb
mov
push
es
sbbb
pop
xor
in
jl
sbb
push
push
xchg
xchg
inc
push
test
movsl
arpl
adc
inc
dec
adc
sbb
add
aad
inc
jbe
cmp
rcrl
repz
icebp
xchg
sbb
xlat
cmp
mov
adcl
inc
in
into
aad
or
dec
inc
add
je
xchg
jne
push
out
repnz
dec
cld
clc
mov
pop
testl
cwtl
push
loope
cmp
cmp
js
adc
sbb
popa
dec
dec
jb
les
movb
push
ja
sbb
mov
mov
adc
adc
and
sti
jp
mov
mov
pop
stos
inc
in
iret
int
loopne
in
sbb
sub
dec
and
mov
inc
cmp
hlt
xchg
xchg
push
sub
jae
mov
out
jge
xorl
dec
out
or
inc
das
xor
mov
andl
pop
bound
loope
mov
push
out
dec
dec
xor
cmc
rcll
add
sar
mov
adcb
movsl
idivb
add
push
dec
ja
lcall
and
push
cli
and
push
das
lea
push
dec
add
mov
roll
std
lret
cli
mov
fdivrp
or
pop
rolb
imul
adc
gs
and
ss
sbb
imulb
fsubs
xor
movl
adc
pop
pop
imul
cmpsl
push
jmp
dec
mov
fs
mov
int3
in
int
loope
mov
mov
adc
push
cmc
ljmp
adcl
xlat
fidivrs
sub
jb
dec
mov
pop
jns
dec
mov
ret
imulb
int3
xchg
pop
push
inc
cld
dec
int3
adc
sub
lock
or
jl
sti
or
sbb
jae
ljmp
inc
enter
pop
pop
xorl
mov
cli
inc
pop
leave
in
and
or
mov
jno
in
inc
clc
mov
out
or
sti
dec
fldcw
pop
inc
jg
dec
leave
xchg
cwtl
pusha
adc
loop
sub
pop
add
std
sahf
imul
hlt
decl
stos
clc
jmp
sti
push
ret
data16
mov
leave
cmp
flds
mov
mov
fs
pmaxub
cmp
sub
push
aaa
and
fwait
adc
loope
ret
cwtl
xchg
jmp
fcomi
in
sub
movsl
aas
mov
in
xchg
frstor
xlat
in
dec
aas
out
cmpsb
inc
or
sahf
adc
sub
in
push
inc
push
adc
lock
dec
mov
mov
and
xor
push
arpl
mov
clc
push
aas
dec
pop
mov
sub
out
sbb
into
mov
push
in
jl
jle
jo
lods
xor
sahf
xchg
mov
sub
mov
mov
cli
sub
outsl
adc
sub
mov
popa
dec
mov
movsl
and
std
push
adc
lods
pop
cmp
repz
xor
add
pop
mov
push
xchg
std
and
and
adc
fcmovne
adc
std
aam
adc
ds
cmc
and
mov
adc
or
insl
xchg
cmpsl
or
inc
sti
mov
or
out
hlt
add
or
mov
sbb
flds
sti
xchg
scas
js
aam
jns
in
mov
pusha
jb
adc
clc
out
lock
xchg
jg
or
pop
outsl
cmpsl
and
push
dec
sbb
xchg
je
shr
ja
pop
jo
pop
or
dec
mov
and
xor
lds
pop
cli
aaa
pop
add
rclb
stos
data16
cmp
sbb
rcll
shlb
xor
dec
in
js
jo
in
jb
pop
push
push
cltd
inc
out
pop
rorl
pop
std
ret
add
movsl
inc
cwtl
lea
mov
icebp
mov
mov
lds
sbb
xor
cwtl
inc
cmp
jae
inc
es
dec
pop
inc
cmpsb
sti
push
mov
inc
cmp
insl
mov
inc
pop
cmc
and
jecxz
mov
sub
enter
mov
dec
jmp
insb
fcmovne
jno
cld
inc
subb
lock
rcr
and
sub
cli
adc
xor
mov
jp
sbb
rolb
insl
cmpxchg
jae
inc
sbb
ja
add
sbb
test
cmc
inc
out
icebp
mov
jmp
jle
push
and
enter
jb
js
mov
pop
xor
outsl
push
addr16
jns
jns
mov
jbe
inc
enter
lcall
dec
mov
movsl
out
sbb
ficoml
mov
pop
out
gs
adc
add
cmp
rorl
mov
inc
call
test
sbb
xor
aaa
daa
xorl
jne
ret
fdivs
and
scas
sbb
xchg
jne
call
hlt
gs
mov
sub
and
jge
xchg
push
mov
sbbb
xchg
push
sub
loop
xor
push
in
enter
cmc
lds
cmp
fwait
push
cltd
lahf
rorl
imul
ret
mov
int
xchg
pop
mov
insl
es
mov
fwait
movsb
sub
mov
and
cmp
test
add
out
in
ficoms
pop
dec
lods
push
and
sub
or
xchg
or
push
rcrb
add
pop
and
icebp
and
cmp
lods
and
movsb
lahf
cmpl
dec
imul
ret
arpl
fs
sub
lods
ret
ljmp
roll
outsl
or
ss
leave
adc
and
xor
adc
inc
adc
mov
jge
lcall
lea
insb
enter
jns
cltd
repnz
dec
mov
rorb
pop
out
sub
adc
jle
xchg
aaa
xor
mov
mov
pop
or
mov
and
outsb
push
inc
notl
add
sub
or
out
dec
pop
jp
mov
in
pop
pushf
inc
ja
add
add
mov
daa
adc
inc
fisttpll
popf
jbe
jbe
fidivl
adc
pushf
sub
jno
pop
lahf
push
enter
adc
popl
jne
fwait
dec
sbb
xor
jg
in
xor
and
movsb
inc
xor
mov
lds
push
pop
sub
cmpsl
or
les
fisttpl
inc
clc
aad
inc
dec
adc
icebp
sahf
cmp
jbe
lock
stc
xor
xlat
dec
ret
addr16
add
insb
test
or
daa
cmp
fadd
jp
loopne
lods
flds
je
sub
and
repz
shlb
insl
cmp
mov
or
insl
cli
adc
sbb
mov
nop
lahf
ja
or
pop
and
je
cmc
and
into
mov
xor
popf
std
into
insb
shlb
mov
daa
xchg
sub
not
mov
sbb
push
mov
adc
aaa
sbb
pop
out
mov
in
adc
jmp
bound
cmc
ficompl
arpl
andb
in
cmpsb
dec
movsl
aam
jnp
shl
das
sub
test
add
add
aad
jp
adc
ret
lods
test
fistpll
jae
fistl
xlat
loopne
pop
dec
fldl
scas
test
lret
out
xor
pop
js
xor
stos
shrl
in
xor
popa
sub
and
push
xchg
push
fisubs
clc
mov
jl
pop
movsl
xor
xor
cmp
pop
mov
fimull
pop
sahf
iret
aad
mov
push
in
enter
add
pop
enter
and
clc
mov
xchg
jo
mov
pop
enter
dec
inc
sbb
daa
add
ljmp
lret
lods
mov
cmp
pop
and
xor
pop
sub
and
adcl
hlt
mov
jge
ficoms
popa
sbb
imul
lds
testl
fs
mov
test
adc
insl
sub
xor
es
sub
xchg
ret
in
mov
test
push
dec
push
test
imul
gs
cmp
dec
cmpsb
std
mov
scas
mov
mov
mul
cmpl
jbe
test
mov
jl
into
imul
mov
jecxz
nop
lahf
mov
sbb
out
mov
test
add
popl
mov
lods
dec
cmpb
mov
fs
mov
sbb
rorl
psrld
insb
xchg
inc
repz
pushf
jg
lods
scas
and
fdivr
jnp
xchg
out
nop
add
hlt
icebp
outsb
ret
sbb
aam
xchg
cltd
into
xchg
or
cmp
ds
sub
jb
lock
inc
rorl
cmp
aaa
sbb
mov
mov
jo
adc
xor
hlt
mov
lock
inc
inc
sub
aas
cli
or
or
or
arpl
and
fninit
pop
lea
jle
xchg
cmp
pop
insb
dec
shrb
cmp
push
call
cmp
sbb
push
mov
js
loop
cmp
out
int3
add
or
mov
mov
in
outsl
add
push
out
dec
andl
stos
jle
push
cmp
jo
fs
ds
hlt
xor
mov
addr16
push
aam
inc
sahf
inc
jno
jle
stos
addr16
in
cltd
and
inc
gs
sub
test
ja
xlat
xor
pusha
cld
sbb
scas
insb
in
insl
in
pusha
adcl
sub
mov
ss
and
push
push
lcall
fldcw
sahf
js
outsb
pushf
ss
call
cmp
dec
mov
sbb
jle
mov
xchg
cmc
mov
push
into
shlb
mov
sbb
scas
imul
jnp
movsb
jns,pt
fnstenv
out
test
aaa
in
jp
dec
jnp
rep
sarb
pop
nop
mov
inc
sbb
sbb
push
fisubl
lock
xor
sbb
or
lcall
push
cmp
ja
nop
xlat
inc
lcall
push
neg
pop
jl
cmp
mulb
adc
ja
sub
ljmp
sub
xchg
mov
push
fwait
add
insl
inc
xchg
nop
gs
pop
mov
scas
mov
aaa
lret
imull
dec
in
push
push
in
lcall
pmulhuw
sbb
dec
pop
pop
outsb
dec
ret
nop
psubsb
mov
xchg
ljmp
iret
and
or
add
push
arpl
testb
and
add
cli
or
jne
scas
cld
xchg
cmc
cmp
fidivs
fldenv
xchg
mov
mov
mov
lahf
xchg
cmp
inc
inc
cmpsl
push
rcll
ficoms
test
std
push
arpl
add
mov
out
inc
lock
pop
lcall
adc
sub
mov
jle
test
cltd
mov
inc
mov
mov
dec
dec
ret
mov
and
xchg
mov
inc
push
push
aad
and
leave
out
fld
xor
cmpsb
cmp
mov
xlat
fidivs
jae
shll
xchg
dec
xchg
cmp
fwait
rcrl
stos
icebp
mov
mov
dec
sub
jg
xchg
inc
mov
data16
mov
dec
mov
push
mov
ficoml
insl
jno
mov
dec
mov
in
repnz
flds
mov
cmc
outsb
orb
nop
leave
jo
and
into
mov
aad
lods
mov
subb
cmpsl
push
adc
scas
xchg
adc
shll
sahf
pushf
rcr
xchg
sub
and
nop
cmp
jecxz
aam
push
push
scas
repz
data16
adc
jle
js
lods
or
mov
xchg
sub
or
lock
mov
adc
lods
jns
rorb
jl
and
divb
push
xor
outsb
pand
ljmp
daa
testl
subb
lock
in
lock
rorl
pop
jno
faddl
adc
pop
in
subl
movsb
fdivrl
add
add
out
fisttpll
adc
sbb
xor
fwait
nop
inc
movsl
pop
jnp
cwtl
lret
mov
push
cs
or
push
add
inc
icebp
add
push
iret
xor
icebp
jecxz
cltd
cli
lcall
add
lods
mov
int3
std
in
pop
xchg
imul
push
and
xchg
movsl
push
push
addl
and
lcall
mov
lea
aaa
cmp
xor
push
out
jo
fnstsw
enter
dec
out
in
scas
cmp
mov
es
inc
push
push
dec
inc
xchg
test
cmpsl
out
outsb
jge
push
add
pop
iret
adc
adc
iret
add
stos
loope
pop
dec
cmpsl
mov
jle
cmpsb
dec
mull
sub
outsl
daa
xchg
xchg
aad
dec
and
sbb
add
pop
push
mov
ljmp
inc
adcl
je
shrb
hlt
pop
sahf
and
in
mov
mov
ds
sbb
xchg
mov
adcb
xchg
sub
sbb
ljmp
dec
cmp
mov
sti
test
push
push
and
mov
mov
popf
xchg
or
imul
dec
add
xchg
cmp
mov
or
cmpsl
cmp
cmp
inc
fwait
stc
jns
mov
enter
outsb
rcrb
or
adc
cmp
fisubs
add
xchg
adc
sub
sbb
push
add
dec
mov
stos
cld
jae
mov
lahf
lods
fstpt
out
pop
imul
imul
fldenv
cmpsl
fmull
fistpll
push
int
or
and
and
and
int3
aaa
adc
jl
push
lock
xchg
mov
mov
or
inc
xchg
push
rorl
je
dec
aaa
jecxz
dec
adc
sub
inc
lea
push
out
pop
mov
mov
rcr
fcmovnu
imul
fwait
mov
mov
cmp
fcoml
inc
xor
adc
jmp
pusha
xchg
cmp
and
dec
ss
sub
loope
dec
jmp
push
cmp
fwait
sub
cmp
daa
and
jb
mov
rcrb
out
mov
mov
lock
mov
sbb
mov
clc
jno
jne
inc
jne
jl
xchg
fwait
lds
in
fsubrl
adc
scas
inc
jmp
jno
inc
movsl
stos
incl
and
xlat
dec
ret
jnp
cmp
popa
out
mov
mov
jb
xor
mov
adc
inc
pop
shll
lods
icebp
jle
xor
push
dec
mov
nop
pop
add
xlat
inc
aam
fwait
sub
pop
ss
imul
mov
cmp
pop
call
xor
push
xchg
inc
mov
pop
add
push
pop
pop
movsl
les
rclb
mov
lds
daa
js
loop
xor
push
cs
fbstp
push
cmp
out
add
lds
dec
sti
sub
jae
xchg
jbe
dec
in
push
int
xchg
test
mov
cli
push
ficomps
xchg
mov
mov
add
cmp
sbb
mov
movsl
jo
mov
mov
xchg
mov
mov
push
push
push
sbb
xchg
scas
rcl
mov
std
flds
mov
rcr
les
cmp
pusha
xor
push
stos
cmp
cmpsb
mov
push
inc
sbb
xchg
imul
sbb
ss
sbb
cmc
ret
call
je
lea
pop
andb
mov
test
push
aaa
lock
inc
clc
bound
and
test
mov
sbb
je
testb
xchg
jne
ret
call
add
xlat
inc
inc
cs
xor
or
rcll
imul
mov
setp
jb
add
cmp
xchg
lock
inc
pop
hlt
insl
jg
dec
push
test
daa
adc
fsubr
push
lods
stos
xchg
movsb
or
es
mov
mov
icebp
das
cmc
lret
mov
outsb
jecxz
sbb
stc
mov
xchg
mov
int
int3
aam
mov
mov
mov
cmp
icebp
add
fstl
cmp
or
leave
and
das
jae
xchg
cli
lahf
push
ds
push
mov
pop
pop
out
insl
add
andl
pop
aaa
incl
stc
push
out
popa
fcompl
or
jmp
sbb
jnp
xor
mov
jne
push
pop
insl
mov
in
mov
xchg
pop
jo
xor
mov
popf
out
push
data16
and
mov
push
add
push
pop
call
push
dec
pop
imul
sub
std
add
ficompl
std
repnz
jno
sub
lods
pop
or
aam
adc
lods
orl
or
push
leave
sbb
add
mov
out
test
je
mov
outsl
pop
cmp
xor
mov
in
push
call
cmp
cli
in
cs
insl
gs
and
cmc
nop
dec
cmp
incb
pop
adc
and
cmp
das
push
jge
movsb
pusha
cmc
das
sbb
jecxz
cmpsb
dec
cmp
sub
cmpsl
push
or
scas
sbb
xor
adc
inc
unpcklps
pop
jae
aam
jmp
push
sar
movsb
nop
movsl
out
cwtl
aas
mov
stos
push
lahf
je
lret
inc
mov
lcall
push
ds
loopne
xchg
out
dec
ss
xchg
cwtl
push
pop
in
les
and
adc
add
cmp
dec
stos
data16
dec
dec
add
js
add
pusha
enter
shrl
pop
xor
pop
aas
mov
mov
push
mov
cld
add
cvtpi2ps
pop
out
gs
aad
es
aam
sarl
std
pop
sub
mov
fcoml
and
and
mov
mov
mov
cmp
aam
movsb
jecxz
bound
int
mov
jle
ds
pop
mov
test
insb
sbbb
lahf
leave
ror
cmpsl
int
cli
sbb
inc
es
insl
mov
in
test
mov
xor
repnz
dec
inc
mov
cmp
aaa
or
mov
test
cmp
sbb
cmp
enter
iret
pop
sub
sub
cld
push
movsl
jbe
fdivs
imul
xchg
adc
ljmp
shl
lahf
pop
pop
mov
push
rcrl
sub
xor
jecxz
sbb
decb
pop
fstpl
iret
daa
xchg
fldlg2
mov
xor
push
pop
movsb
sbb
lds
hlt
cmp
jle
xchg
scas
ja
rorb
imul
pop
movb
xchg
sub
fdivrp
or
repz
ret
pushf
jmp
push
pop
xchg
mov
jg
shrl
or
jno
xor
dec
and
testb
mov
xchg
daa
adc
pop
clc
and
sub
push
and
pop
dec
or
inc
nop
adc
sub
mov
loop
stc
mov
sub
pop
sbbb
popf
jl
scas
outsl
and
inc
dec
pusha
testb
mov
gs
in
fildl
sub
pop
lods
dec
inc
cmpsl
dec
add
jge
xchg
dec
pop
jb
cmpsb
sti
push
jle
dec
mov
sbb
rorb
mov
addl
in
das
or
cmp
push
movsl
lret
sbb
lods
inc
xor
test
mov
ja
push
iret
mov
jp
push
aas
stos
sbb
cld
xchg
and
sub
add
fcoms
jbe
test
adc
cmp
push
sbb
je
jge
inc
int
cmp
sbb
add
and
sbb
push
pop
inc
jp
mov
cld
addr16
or
orl
sbb
stos
lea
lock
inc
insl
jnp
xor
icebp
outsb
in
add
pop
movsl
outsl
adc
insl
mov
xchg
pop
xchg
aas
jnp
or
jle
mov
mov
sub
arpl
lock
lret
add
subb
push
sbb
pop
and
adc
dec
sub
outsl
addl
clc
jmp
lods
xor
outsl
test
xor
adc
push
cmc
push
xor
out
adc
test
call
push
xchg
cmpsb
adc
mov
add
flds
rcll
mov
mov
sub
pop
jge
jo
mov
and
fs
clc
sub
test
bound
cmc
mov
test
pop
popf
push
xor
add
xchg
mov
pusha
aas
stos
cmp
leave
outsb
ret
xchg
movsb
mov
cmp
jbe
loope
lret
mov
pop
js
sbb
inc
das
jno
xchg
lds
jne
cmp
xchg
fsubr
rol
add
mov
jbe
daa
sbb
xchg
sbb
int
jae
mov
push
in
fwait
clc
or
ljmp
xchg
stos
push
cltd
aad
inc
sbb
divb
ret
loop
hlt
out
cltd
in
adc
adc
push
mov
cmp
xchg
fcmovnb
cmp
testb
out
mov
sub
nop
mov
daa
fs
xor
adc
dec
jne
mov
aad
or
ja
mov
jb
mov
or
stc
imul
ja
add
mov
and
popf
xchg
aad
cmp
mov
jecxz
inc
hlt
mov
ret
pop
aad
test
push
push
xor
lea
pusha
or
sub
xchg
sbb
mov
pop
outsl
ret
pop
xor
mov
lock
faddp
mov
int3
fidivl
mov
push
icebp
ret
jne
popl
sbb
mov
sbb
inc
mov
arpl
pop
fwait
lret
js
mov
dec
mov
dec
stos
push
jns
clc
jmp
xchg
xchg
adc
imul
aad
lahf
divb
push
mov
mov
and
gs
arpl
imul
adc
mov
lods
pop
adc
out
add
sbbl
and
in
dec
mov
sbb
add
pop
inc
filds
icebp
repnz
stc
imul
or
push
aas
mov
jbe
imul
stc
fsubrs
inc
jno
mov
add
fisubs
test
gs
test
adc
into
pushf
imul
mov
push
movsb
rcrb
sbb
inc
sub
insl
out
jne
and
add
inc
mov
inc
cmpsl
xchg
jb
sub
push
xor
stc
mov
clc
lea
out
jmp
xchg
xorl
sub
mov
inc
xorl
out
insl
scas
inc
dec
dec
insl
push
mov
roll
in
js
cltd
int3
dec
aaa
sbb
loopne
sbb
add
aas
scas
inc
cli
outsb
imul
sahf
mov
fidivl
adc
add
je
andl
ja
and
clc
or
push
push
lahf
incb
fmull
xchg
sbb
mov
cmp
imul
ffree
fstl
mov
add
dec
call
loop
out
jg
mov
or
arpl
or
adc
mov
adc
cwtl
push
es
cmpl
sub
mov
stos
pop
mov
add
sub
jecxz
mov
cmp
adc
pusha
shlb
les
mov
jle
pop
shl
repnz
fs
aaa
sub
xor
mov
push
loopne
jmp
out
or
cmpsl
jne
jle
lret
nop
repz
out
jns
jbe
dec
test
jb
push
je
notb
cmp
mov
iret
int3
mov
mov
mov
jne
shl
or
out
mov
addr16
xchg
sbb
adc
inc
push
mov
mov
mov
popa
xchg
enter
pushf
xor
into
jno
loop
or
adc
lea
sbb
push
iret
dec
movsl
xchg
mov
std
mov
in
push
add
pop
jb
and
shrb
cwtl
lock
and
sbb
push
imul
add
mov
xchg
clc
rorb
push
iret
mulb
scas
mov
xchg
shll
xchg
roll
xor
and
lahf
les
jg
xchg
repnz
mov
pop
sbb
ret
sti
xor
shr
rol
data16
mov
out
ret
aad
sub
xchg
jmp
mov
jle
cli
pop
mov
pop
jle
and
mov
gs
pop
in
mov
iret
bound
mov
stos
movsl
and
fdivp
dec
push
cmpb
test
add
mov
jmp
gs
js
and
lods
or
and
stc
lds
cltd
enter
fcmovnbe
sbb
sti
pop
ret
inc
add
in
lret
ds
imul
lds
pop
ds
lret
xchg
mull
das
jl
dec
mov
adc
adc
out
loope
rolb
push
and
and
out
mov
sqrtps
mov
mov
xor
xor
push
ss
sbb
inc
or
cmc
dec
xor
pop
mov
addb
ss
push
addr16
mov
fwait
inc
xchg
sub
fmull
dec
pop
xchg
xor
mov
shlb
cmpsl
inc
out
imul
xchg
ret
add
lods
rol
stc
and
addl
inc
int
jge
mov
xor
arpl
test
dec
movsl
std
test
pop
xor
adc
into
cs
or
adc
pop
push
pop
xor
adc
push
jbe
jg
mov
sub
xor
unpckhps
stc
inc
and
rclb
pop
fs
adc
stos
or
or
cmp
xor
or
in
add
int3
loopne
cs
and
cmp
aas
ja
jge
outsb
xchg
fidivs
sahf
mov
arpl
lock
mov
sarl
fimull
iret
sub
mov
mov
lret
pop
dec
idivl
push
push
xchg
sub
xor
jg
add
dec
clc
xchg
in
push
jp
hlt
in
je
jnp
movaps
inc
out
mov
dec
dec
mull
mov
or
out
inc
cltd
sarb
divb
sbb
xchg
outsb
iret
jg
dec
outsl
jmp
xchg
and
int
addl
lahf
xor
and
xchg
pop
or
push
pop
les
mov
pusha
xlat
lcall
sahf
ss
and
pop
test
shlb
fidivrs
add
inc
mov
jo
dec
pop
aam
mov
jns
ror
into
xchg
cmp
fs
mov
stc
dec
push
xor
add
jg
lods
jp
push
out
loope
inc
jmp
mov
stos
add
inc
sbb
sub
leave
cmp
aas
jae
sub
mov
rorl
loope
sbb
js
pop
cmp
cwtl
es
sbbb
movsl
leave
jl
add
in
mov
xor
sub
adc
nop
js
pextrw
xor
sub
inc
pop
jmp
jecxz
insb
aam
mov
stos
daa
in
sbb
mov
aaa
fstpt
adc
fbstp
sti
jns
xchg
xor
push
jecxz
fwait
shrb
xor
scas
sub
scas
push
loopne
ret
sar
inc
into
lock
cmp
xchg
dec
cli
mov
stos
mov
mov
push
add
test
or
mov
icebp
mov
xchg
nop
test
add
scas
int
fcompl
add
testb
adc
add
mov
or
rorb
lahf
scas
mov
jne
push
repnz
out
or
mov
jno
repnz
push
mov
xor
loopne
sbbb
xor
jp
andl
test
aaa
cwtl
js
outsl
in
push
adc
push
adc
dec
shrl
add
jg
push
xchg
mov
push
aad
dec
movsb
pusha
or
test
out
jno
xor
or
sub
cmpsb
sub
dec
cmpsl
sbb
movsl
insl
mov
push
mov
push
enter
fcoml
aad
jp
fcoms
test
sarb
xchg
mov
lret
mov
sbb
icebp
leave
add
jmp
dec
sbbl
cmp
lret
jbe,pt
pop
mov
sahf
push
es
sub
xchg
mov
loop
add
sbb
mov
add
xlat
jnp
mov
add
dec
into
lcall
lcall
out
mov
adc
xchg
mov
test
fcom
fadd
pop
xchg
divl
push
or
mov
or
out
cli
jae
jnp
or
mov
adc
or
mov
out
lods
push
mov
call
insl
out
in
loopne
js
xchg
sahf
repnz
je
lea
xchg
or
mov
pop
mov
ss
jbe
pop
hlt
aaa
inc
inc
lcall
mov
sbb
push
in
cli
mov
mov
sub
mov
jo
cmc
andl
cli
lock
and
hlt
push
and
push
iret
enter
lds
int3
cmp
fldcw
mov
adc
mov
mulb
bound
adc
mov
cmp
pop
dec
jne
pop
dec
test
xchg
mov
ffree
sbbb
aaa
insl
hlt
idiv
pop
pop
pop
sbb
clc
cmp
addr16
xchg
pop
sbb
adc
mov
cmpl
cmp
repnz
inc
push
jl
cmp
jns
jae
mov
in
dec
push
gs
dec
and
sub
jns
test
xchg
and
lds
sbb
pop
xor
rorb
pop
test
daa
out
xor
rcrl
out
dec
jnp
js
pusha
sbb
jae
jb
jp
sub
call
pop
sbb
push
inc
jmp
pop
jae
xchg
adc
jne
ror
int
mov
xchg
inc
pop
lret
xor
inc
xlat
and
xchg
push
stc
bound
sub
idivb
mov
lock
jmp
pusha
sbbb
icebp
push
ljmp
adc
nop
stos
and
cmp
rorl
movsb
and
loope
pop
ljmp
mov
push
xor
sbb
and
jp
lcall
test
out
ss
xchg
cpuid
adc
xor
ss
cmpl
imul
ret
fldcw
cmpsl
test
cmp
cmpsl
jl
or
cmp
test
pop
bound
dec
mov
rorb
cmp
mov
test
out
or
pushf
fsubl
daa
fcmovnbe
and
movsb
push
xchg
or
or
sub
lahf
cmp
xchg
xchg
fstpt
push
dec
adc
sub
push
mov
and
fdivrp
mov
jecxz
push
dec
jl
xor
push
insl
xor
xchg
arpl
cld
rorl
cs
sahf
mov
fidivs
sub
sbb
pop
mov
nopl
and
shrb
sahf
dec
sub
rcll
scas
xor
dec
idivb
aam
ds
mov
out
mov
xchg
out
cmpsb
inc
rclb
test
outsl
aad
dec
incb
rcll
xlat
ret
xchg
or
mov
ja
fbstp
int
pop
cld
ljmp
jp
adc
or
push
push
das
push
xchg
push
lods
jge
jg
ficompl
sahf
dec
lods
dec
push
pop
in
pop
cmp
cmp
push
jae
dec
in
sar
loope
jnp
enter
mov
push
cltd
cmp
sbbb
test
add
movsb
cld
hlt
sbb
popf
xchg
sub
mov
xchg
in
push
fcomip
sahf
mov
inc
shlb
aad
aad
adc
pop
xchg
pop
aaa
test
or
push
js
aam
adc
repz
shll
hlt
sbb
mov
cs
mov
mov
adc
add
pop
sub
xor
ds
and
xchg
dec
mov
fcoms
add
test
add
sbb
inc
sahf
xabort
push
js
jb
fwait
add
leave
adc
jmp
sbb
dec
popa
add
jno
or
xor
out
add
int3
addl
jno
fnstsw
cwtl
shll
cmpsb
mov
mov
jo
inc
sbb
aas
int3
and
dec
sub
ret
cltd
int3
movsb
sarl
jmp
imul
inc
cmpsl
call
and
outsl
roll
andb
pop
mov
ss
push
adc
xor
daa
mov
sbb
in
cwtl
dec
cmp
sbbb
insl
mov
or
pushf
insl
jns
stc
int
shlb
sbb
popf
dec
xchg
lret
sub
insb
aam
dec
out
push
pop
sub
push
fistl
jmp
jae
adcl
cmpb
push
add
inc
and
lock
or
data16
cltd
popa
shl
pop
inc
xor
xor
sbb
adc
in
vphaddbq
fs
pop
pop
jecxz
int3
inc
stos
scas
push
cltd
stos
test
ss
ljmp
pop
push
movsb
aam
mov
mov
pop
pop
adc
pop
adc
push
lods
lahf
mov
mov
adc
jnp
add
inc
das
xchg
adc
or
test
mov
fwait
int3
cmp
outsl
arpl
movb
test
jno
stc
xchg
push
mov
mov
jb
repnz
xor
das
mov
push
jns
sub
loopew
cs
pop
mov
aaa
testl
cmp
daa
lea
popa
mov
dec
je
lods
insb
push
cwtl
enter
repz
push
xchg
push
sbb
adc
mov
test
out
lods
lds
mov
fwait
sub
dec
push
push
cs
sub
lods
loopne
xor
dec
popf
sub
rclb
xor
jno
sti
mov
cli
ret
fcoml
imul
imul
add
push
mov
loopne
or
out
scas
add
inc
stc
repnz
add
pop
or
rclb
shrl
fsubl
or
xor
es
cmp
adc
jo
adc
push
mov
push
pop
jle
test
xchg
jb
insb
scas
addr16
out
pop
sbb
movsb
jnp
enter
in
icebp
lock
or
dec
add
in
inc
ret
jnp
xor
mov
insl
movsl
gs
dec
cmc
sti
rcr
out
inc
mov
popl
shlb
jg
lcall
aam
lcall
imul
inc
subl
jne
movsb
loop
movsb
sti
sbb
sub
pop
sbb
jecxz
filds
pop
add
cs
jnp
subl
sub
arpl
sbb
mov
aad
popf
pop
fsts
pop
pop
jecxz
aas
push
sbb
mov
stos
xor
jns
sub
lret
ret
add
jmp
imul
es
add
mov
dec
cmp
mov
negl
push
xor
push
gs
pop
and
test
adc
mov
or
push
bound
jle
ret
lahf
sub
push
mov
or
sub
xor
xor
cmp
cld
cmp
jge
clc
jnp
adc
pop
inc
ljmp
andl
mov
push
fcompl
ljmp
push
call
cmp
fsub
cmp
push
xchg
push
inc
aad
repz
pop
mov
pop
ljmp
or
mov
sub
inc
pop
add
fnstsw
repz
std
std
push
movsb
mov
cwtl
jmp
inc
mov
push
mov
mov
sahf
and
mov
mov
push
in
push
push
sbb
cmc
mov
aad
and
push
and
imul
outsl
sub
adc
add
in
sub
jbe
fdivrs
aaa
inc
popf
inc
das
xchg
out
or
mov
scas
fwait
mov
movsb
sub
sub
inc
fidivrs
mov
popa
inc
loop
cmp
pop
or
jle
in
inc
call
insl
cli
dec
push
sub
push
mov
fnstcw
outsb
mov
fwait
aaa
jecxz
pop
jne
sub
xchg
mov
std
mov
xchg
inc
ror
jmp
imul
mov
mov
ret
in
xor
xchg
cmc
ret
mulb
push
dec
dec
xorl
sbb
inc
bound
fs
push
inc
adc
jp
mov
sub
sub
clc
push
test
adc
pop
jecxz
stos
add
ds
sbb
mov
push
pusha
inc
insl
push
je
sbb
mov
dec
sti
aas
daa
pop
pop
lds
xchg
mov
mov
xchg
roll
mov
imull
sub
and
movsb
adc
aas
add
lock
inc
out
lds
lds
inc
mov
mov
inc
out
xchg
jl
fdivr
xchg
mov
push
mov
mov
push
xchg
cmc
xchg
ret
insl
cwtl
roll
sbb
scas
std
and
test
mov
inc
js
jns
pushf
push
mov
pop
cltd
cld
adc
cld
mov
cmc
popf
lahf
lret
shrl
int3
movsbl
push
cli
sti
add
fs
jno
imul
inc
jo
iret
loope
loope
lock
pop
daa
mov
xchg
mov
ret
dec
push
dec
ret
jecxz
dec
inc
add
js
in
lret
pop
mov
jg
mov
jp
loopne
sti
shlb
pusha
cwtl
lret
and
or
dec
cmp
iret
addl
sub
mov
fsubrs
sti
ljmp
outsb
in
insb
lahf
loope
sbb
pushf
and
add
ret
pushf
and
adc
lcall
jo
xchg
pop
add
lahf
cmp
jae
div
mov
jno
int3
mov
inc
js
and
pop
test
ret
scas
int
mov
mov
sbb
test
xchg
fidivrl
fstpl
out
xchg
push
loopne
add
daa
pushf
add
je
sub
lds
inc
sub
addl
imul
adc
lret
shlb
shlb
mov
shll
mov
or
xor
outsl
popf
xchg
jp
icebp
pop
xchg
cmpsl
or
lret
test
addr16
shll
inc
into
add
mov
ficompl
sarb
divb
or
cmpsb
sbb
loop
scas
cwtl
ja
repnz
mov
scas
sbb
sahf
in
sbb
fcmovne
cs
into
inc
daa
test
xor
in
mov
cmp
xchg
icebp
mov
imul
pop
loop
push
addb
pop
pop
mov
mov
pop
int
cmc
xchg
int
xor
xchg
jns
mov
jmp
pop
jl
out
cltd
xor
jbe
pop
cmp
jb
shlb
push
orb
imul
je
push
sti
push
mov
push
xchg
ss
inc
sbb
out
fnstcw
sub
lret
jns
mov
fidivs
xchg
mov
pop
lods
les
popf
mov
mov
inc
out
jnp
rcr
lea
cmpsb
or
sbb
dec
mov
xchg
loopne
lahf
ds
daa
adc
pop
loopne
jae
or
adc
mov
xchg
ret
pop
iret
stc
jns
cmp
dec
das
xor
lods
es
mov
jge
and
push
pop
daa
repz
scas
imul
cmp
ss
cld
movsl
dec
test
fcmovne
push
sub
xor
icebp
cmp
adc
pop
jo
adc
lea
fwait
dec
repz
lret
scas
sbb
jge
roll
pushf
cmpsl
loopne
and
pop
mov
es
gs
mov
sti
push
fucomi
inc
subl
lcall
jbe
aam
imull
adc
scas
xchg
fsubl
or
inc
cld
jg
xor
sar
xor
testb
add
sub
test
mov
in
into
repz
push
xor
pop
les
mov
xor
pop
fnclex
stos
push
fisubs
pop
repz
stos
rolb
push
mov
inc
aam
shlb
fdivrs
push
inc
movsl
and
jnp
adc
mov
xor
dec
xchg
hlt
int3
fcom
stc
idiv
fisubrl
mov
push
or
push
andb
mov
aaa
fnstenv
inc
xchg
movsl
repnz
lock
mov
cmp
xchg
xor
jbe
in
mov
pop
int3
xchg
ret
lds
add
cmp
sub
mov
adcl
cli
inc
out
dec
mov
hlt
insb
mov
cmpsb
pushf
ds
sbb
lea
shr
test
dec
popa
sub
or
stos
mov
add
and
cmp
mov
aaa
xlat
stc
mov
dec
loopne
insb
int3
add
cwtl
data16
dec
adc
cmc
adc
dec
inc
icebp
dec
lea
xor
cmp
out
idivl
xorl
int
mov
push
push
lret
mov
vcvtdq2ps
and
in
jg
mov
add
fmul
int3
js
jl
fiaddl
daa
js
pop
push
adc
add
fistpll
in
sbb
add
test
stc
mov
nop
sti
je
cmp
sub
sti
or
cli
jp
loop
pop
xor
jmp
iret
out
fdivs
fwait
aas
pop
jbe
and
ja
imul
lret
iret
inc
adc
fldl
test
jbe
pop
arpl
mov
mov
test
mov
jae
mov
add
stos
and
sbb
mov
adc
add
mov
hlt
shlb
inc
xor
dec
xor
outsl
in
pop
mov
mov
mov
adc
push
jne
cwtl
sti
dec
dec
rol
lahf
and
in
lea
pop
lret
sub
dec
adc
mov
cli
aam
loope
lret
ss
mov
clc
fildll
aad
or
les
mov
js
pusha
jno
fnstenv
ret
cmp
pop
addr16
in
add
pop
or
mov
or
cmp
stc
jbe
dec
repnz
jecxz
xorl
test
repnz
add
cli
jecxz
hlt
sub
test
xchg
sbb
aam
add
adc
nop
mov
mov
or
fisttps
pop
fistl
mov
cmp
lret
mov
dec
fstpt
aad
jl
movsl
add
rcrb
push
xor
call
aas
out
loopne
mov
aam
sub
sub
mov
cmc
sarl
pop
pop
inc
addr16
sahf
sub
xchg
xchg
stc
push
ret
and
xchg
movzwl
cmp
cmp
and
dec
addr16
cmpsl
shll
pushf
xchg
pop
jne
lret
inc
sbb
cwtl
jg
pop
or
out
jle
push
gs
sbb
sub
xor
adc
stos
lds
int3
mov
jecxz
clc
xor
adc
mov
dec
lret
sbb
stos
and
adc
sbb
push
pop
in
pushf
jo
fbld
lret
leave
adc
test
fistps
mov
cmp
and
adc
xor
sub
ljmp
pop
lods
push
jge
les
into
pop
sbb
rcrb
push
rcrl
adc
into
adc
call
inc
gs
sbb
xchg
push
sbb
xchg
sub
int
push
inc
xor
dec
add
stos
cmp
push
pusha
mov
lahf
ss
inc
mov
cwtl
cmp
jne
stos
and
rcrb
and
dec
in
in
jl
and
and
push
scas
je
sbb
stos
dec
add
lds
sub
dec
and
dec
cmc
clc
iret
in
push
aad
and
popa
clc
mov
clc
loope
or
ret
lahf
mov
pop
iret
lods
int
or
mov
cmp
adc
cltd
mov
outsl
cmp
sbb
das
add
xchg
stos
mov
ficompl
push
shlb
mov
xor
mov
pop
inc
leave
sbb
ret
add
lods
xlat
inc
pop
shr
add
push
ja
push
dec
in
in
dec
and
test
data16
and
lods
and
aam
mov
cld
mov
repz
ljmp
lret
arpl
cmp
scas
lcall
inc
out
loop
dec
ds
adc
jg
mov
push
xchg
push
mov
xlat
sub
clc
lods
cmc
pop
notl
mov
addr16
mov
sbb
push
add
inc
add
shl
cmc
insb
push
xor
fsubrs
loop
sbb
aam
jb
xchg
push
lahf
sub
xor
stc
clc
lods
lods
std
lods
rcl
jge
stc
mov
inc
jbe
xlat
and
push
push
dec
push
cmp
jbe
mov
mov
xchg
rol
sbb
out
cmpsb
loopne
jo
subb
mov
repz
jmp
xchg
push
cmp
push
gs
fldcw
bound
cmp
popf
add
icebp
xlat
hlt
add
dec
roll
jmp
fsubrl
loopne
lret
sahf
lea
fwait
xor
in
fs
mov
pop
dec
dec
xor
shlb
cmp
test
push
mov
sub
dec
sbb
test
ret
stos
sbb
sbb
imul
xor
sbb
lret
inc
mov
jl
enter
mov
in
pop
sub
out
cld
scas
push
fsubs
jecxz
xchg
dec
pop
in
push
pop
cmc
jle
and
insb
jg
dec
lods
ljmp
xor
aam
outsb
imul
in
lods
inc
in
push
out
adc
push
add
jns
out
pop
cmp
sub
jp
mov
stos
mov
test
insl
fcmove
repnz
sbb
das
mov
pop
push
fdivs
shrl
dec
or
cmp
xchg
jge
loopne
lock
and
out
iret
mov
nop
rolb
out
cli
pop
arpl
sarb
pop
or
mov
aas
outsl
mov
add
jo
dec
jbe
mov
pushf
inc
xchg
sti
dec
inc
pop
jmp
xor
inc
pop
dec
xchg
mov
sbb
dec
and
cltd
js
jae
fistps
aaa
xchg
mov
lahf
aaa
je
cld
sarw
lods
jecxz
jb
icebp
dec
jnp
movb
xchg
adc
xchg
xchg
sbb
push
dec
dec
cmp
push
and
push
cli
dec
pusha
mov
pop
es
add
pop
adc
mov
and
pushf
cwtl
test
or
and
jne
movl
cmpsb
gs
addr16
pop
enter
pop
idivl
fiaddl
or
call
enter
hlt
cmp
sub
notl
push
les
aaa
lods
pop
sbb
jmp
fisubl
adc
clc
test
pop
iret
xor
ds
pop
jecxz
add
mov
lcall
dec
adc
xchg
jbe
es
sub
pushf
jge
fcomi
imull
jl
mov
fists
add
sbb
shlb
dec
cmpsb
jnp
push
mov
loopne
clc
xor
call
adc
test
mov
cmp
mov
lcall
push
mov
enter
inc
movsl
andl
push
and
inc
mov
cs
in
fninit
push
pop
sti
adc
lahf
mov
test
jo
xor
sbbb
outsb
in
push
insb
cs
mov
int
pop
dec
outsl
loopne
mov
push
filds
rorb
xor
jle
mov
pusha
jnp
fsubl
adc
xor
int3
sbb
fwait
push
push
add
outsb
ljmp
lret
rcll
push
cmp
fdivrl
fcmovbe
orl
and
push
in
movsb
push
pop
xor
push
inc
shl
or
add
push
lods
push
xchg
aam
dec
jae
mov
mov
lahf
dec
pop
push
sub
daa
in
shrl
xchg
mov
andl
lcall
lock
lds
inc
test
adc
mov
cs
dec
or
cli
mov
out
mov
loope
jb
mov
shll
fidivrl
mov
jge
jecxz
dec
xchg
sbb
cltd
xchg
cwtl
mov
pop
or
int
add
scas
inc
mov
or
jle
push
xadd
iret
sub
cmpsb
push
jo
cmpsb
es
push
lcall
outsl
mov
jmp
pushf
ljmp
jle
or
cmp
mov
fwait
jge
call
daa
clc
cmp
shl
mov
fldcw
sbb
xor
shrl
cwtl
xor
sti
mov
stos
mov
add
sub
ja
test
dec
call
pop
or
fistpl
adcb
lods
add
lret
ja
sub
push
xchg
adc
stos
cmp
je
in
sbb
fdivs
cli
lds
push
inc
rep
xchg
inc
push
jl
or
cmp
cmp
or
shlb
sbbb
or
or
stos
lret
fmul
cmp
add
nopl
dec
dec
sbb
lcall
repnz
pushw
add
push
adc
inc
loope
popf
imul
adc
gs
cmp
jge
call
lcall
mov
mov
push
ds
cs
inc
sub
mov
daa
pushf
jnp
fld
ds
roll
mov
mov
jns
js
mov
cmp
stc
stc
ror
jg
pushf
lahf
lods
mov
push
pop
cmpl
sub
sbb
cltd
adc
rclb
add
repnz
ss
fiaddl
inc
pop
movsl
mov
or
sarb
arpl
cmp
loope
cli
xor
das
jo
pusha
sub
xlat
lock
adc
or
in
mov
mov
pop
mov
mov
add
jp
xor
xchg
shrl
mov
fidivl
adc
call
adc
xchg
adc
xchg
jle
sarl
in
divl
cmp
int
movsb
imul
push
mov
inc
mov
push
cltd
data16
xchg
cld
ds
inc
jmp
inc
ret
shll
int3
add
adc
add
push
inc
push
loope
push
dec
xor
inc
ja
sbb
fwait
mov
push
ss
sarb
je
xchg
decb
in
fs
mov
insb
sub
push
lds
lahf
cmpsb
inc
adc
faddl
outsb
rcrb
fidivrs
jno
lea
mov
movsl
cltd
pop
rol
cmp
adc
sti
pop
mov
cmpsl
subl
pusha
mov
ficompl
adc
daa
inc
repz
xlat
in
rorb
cmp
rcl
fisttpll
cmpl
gs
dec
fnsave
dec
mov
std
lret
aad
xchg
sub
push
aad
lahf
xchg
mov
bound
aas
mov
cli
xchg
xchg
inc
std
xchg
pusha
mov
rcrl
in
dec
mov
repnz
aam
mov
fdivs
nop
jae
push
into
movl
mov
mov
dec
shrb
cld
insb
das
dec
xchg
outsb
leave
mov
cmp
das
shrb
mov
jns
pop
loope
push
inc
dec
subb
cli
int
push
xor
loopne
lahf
dec
iret
clc
int
pop
outsb
sbbb
inc
adc
cwtl
scas
push
fsubrl
rol
pop
jnp
or
testb
and
add
jns
cmp
lock
xchg
in
jno
in
loopne
push
jo
lret
adc
imul
xor
in
cli
cwtl
cmpsl
pop
sub
inc
test
add
sbb
mov
dec
jb
test
mov
leave
scas
jno
fistpll
push
imul
mov
loope
mov
sbb
arpl
ucomiss
push
jecxz
test
dec
mov
cmpsb
call
adc
cmpsb
ss
push
push
sbb
jo
sbb
mov
inc
xor
mov
out
je
dec
mov
daa
mov
xor
push
fs
dec
in
cmp
sti
or
mov
push
ds
cwtl
cs
outsb
pop
push
insl
orl
cmp
sbb
clc
inc
sarl
mov
mov
jp
sub
jle
sub
or
scas
fistpl
xor
js
adc
in
xchg
and
adc
out
dec
std
lret
jge
std
icebp
jp
dec
addl
and
dec
pop
fldt
dec
dec
cmpsl
xor
lock
movsb
pop
push
add
int
cmp
sti
sarb
movsl
and
mov
out
sbb
sbb
fildll
popf
lea
ret
test
stos
neg
into
sbb
fwait
mov
inc
icebp
ljmp
gs
push
nop
cwtl
std
outsb
xor
stos
aaa
sbb
push
data16
in
fs
or
std
stos
xor
hlt
or
fcoms
out
or
out
aam
repz
loope
sub
out
loop
test
push
cmp
sbb
xchg
cwtl
dec
jecxz
fsubl
cs
and
mov
bound
in
or
cmp
xlat
fsubr
je
outsl
hlt
fnsave
dec
stos
ja
int
add
pop
daa
dec
imul
stos
mov
jl
fisubs
cmpsl
test
jmp
fs
mov
dec
mov
inc
pop
enter
cltd
jno
test
and
inc
mov
imul
dec
gs
sbb
mov
add
fdiv
or
push
dec
cs
negl
push
jae
lahf
pop
cmpsl
xchg
scas
and
jge
rolb
cmp
pop
cmp
faddl
out
push
cmp
jnp
test
movsb
adc
mov
and
mov
sub
mov
xchg
sbb
or
leave
into
es
jecxz
repnz
cmp
sub
xor
push
addr16
inc
inc
mov
sbb
clc
call
mov
test
mov
inc
sbbb
jbe
clc
jle
ds
lds
repnz
or
xchg
jno
pop
jns
inc
push
pop
sbb
pop
jmp
es
insl
xor
jl
mov
idivb
cmpsb
add
mov
into
outsb
adc
sbb
in
and
scas
mov
lds
arpl
cmp
jne
cltd
jge
and
jae
fistpl
fsubp
or
jns
fs
add
cltd
inc
lds
sahf
and
push
mov
cmpb
bound
adc
push
xor
iret
aaa
stos
push
mov
jecxz
or
sub
inc
xor
inc
insb
mov
mov
iret
test
adc
mov
test
xor
mov
mov
out
mov
out
sbb
mov
and
repz
xor
or
dec
stos
mov
add
test
jns
mov
jge
daa
inc
jmp
mov
push
xor
cmp
in
mov
fisubs
je
jno
pop
test
push
or
lcall
imul
test
sbb
cmpsl
dec
int3
neg
or
jmp
sub
or
ds
adc
add
clc
jo
sbb
xor
add
pop
lods
lret
mov
daa
lret
and
fsub
mov
outsl
rolw
lcall
jp
jge
ret
movsb
andl
stc
popa
js
pop
movsl
idivb
push
sbb
xlat
adc
or
xchg
cli
or
lahf
flds
repnz
sarl
sbb
push
cmpsb
cmpxchg
stc
sub
lds
pop
adc
loope
imul
or
pop
xor
stc
ljmp
cltd
imul
ja
lock
hlt
push
cmp
mov
lods
sbb
fldenv
mov
xor
sub
and
fwait
pop
aas
je
jecxz
xchg
sbb
mov
push
data16
inc
add
mov
mov
repnz
stos
adc
mov
ja
imul
into
inc
stos
imul
pushf
lds
jbe
xor
and
adc
inc
mov
iret
scas
pop
or
add
scas
repnz
xor
push
imul
sub
jp
jb
inc
push
add
mov
lcall
stos
push
jae
iret
inc
or
mov
mov
test
cld
pop
jne
rol
dec
push
enter
subl
stos
jnp
mov
cli
mov
or
xor
sub
dec
add
clc
stos
pushf
inc
lret
fistl
ss
sub
iret
aad
dec
insb
clc
xchg
cltd
sti
add
cmpsl
adc
loope
fs
ljmp
push
and
in
in
test
stc
xchg
repnz
jge
fcomps
jb
and
inc
js
gs
sbb
push
mov
inc
loopne
push
add
das
cld
rcrl
in
sub
lods
mov
adc
mov
cwtl
sbb
ret
push
sbb
xlat
or
rclb
fimull
sub
cmpsl
jne
add
cmp
and
loope
dec
dec
neg
cmc
mov
push
mov
adc
inc
xor
add
testl
aam
and
sarl
mov
push
pushf
ljmp
popa
and
sub
cmp
dec
out
mov
out
mov
adc
or
push
and
je
testb
mov
cli
mov
mov
mov
scas
lcall
xor
nop
jecxz
add
lcall
add
insb
or
cmp
push
std
outsl
mov
out
mov
inc
lds
addr16
cmpsb
out
int
inc
mov
push
ficompl
pop
addr16
cmp
stos
arpl
pop
fcoms
faddl
shlb
leave
push
stc
fistps
enter
sar
jae
out
in
cltd
cmpb
cmp
shlb
int3
push
js
dec
aad
aad
scas
cmp
add
add
cwtl
mov
mov
fstpl
into
mov
sti
idivl
pushl
mov
jmp
fimull
fildll
mov
adc
push
inc
jp
xchg
adc
push
cli
mov
sarb
scas
xor
sub
inc
gs
push
mov
adc
sbb
jl
mov
out
add
iret
xchg
clc
push
in
divb
lods
rorb
mov
ss
jns
mov
xchg
or
lods
pushf
jo
lahf
scas
outsl
cmp
or
and
data16
leave
add
lds
lds
dec
mov
dec
mov
leave
insb
inc
cltd
xor
lods
test
scas
mov
mov
and
push
outsl
aaa
aas
movsb
sbb
sbbl
push
lcall
inc
mov
insl
rolb
xlat
outsl
arpl
dec
mov
mov
pop
mov
lcall
ror
lret
or
xor
cwtl
xchg
push
push
dec
add
imul
cmp
fmull
in
fwait
hlt
mov
sub
ja
das
mov
push
dec
std
addr16
cli
and
cmp
imulb
shrb
int
ret
sti
shll
or
cmpsl
mov
adc
push
scas
loopne
or
cld
inc
stc
and
rclb
xor
jo
ret
orb
stos
push
mov
cmpsb
and
movsl
mov
push
out
jmp
icebp
repz
sbb
and
xor
pop
adcb
and
dec
enter
xchg
push
clc
hlt
nop
popw
mulb
fsubl
lds
fcmovbe
inc
add
xor
mov
mov
jp
je
mov
pop
popf
test
and
mov
ljmp
sti
mov
rclb
sbb
pop
sbb
inc
xor
cwtl
daa
insb
pop
xchg
aad
push
insl
add
inc
rcr
int3
xchg
mov
test
lods
bound
dec
popf
ret
arpl
inc
and
jae
out
faddl
insl
jno
cmp
mov
in
rorb
test
or
ljmp
nop
fldenv
movsb
push
inc
xchg
mov
xor
in
cmp
mov
mov
rcl
adc
insl
or
mov
or
xchg
test
inc
and
jecxz
pusha
popf
mov
and
jne
jecxz
in
push
data16
out
jb
addr16
mov
jae
xor
stos
xchg
leave
xor
sub
repz
in
loop
repnz
mov
xchg
aad
bound
add
ret
dec
sbb
dec
mov
xor
stos
fucom
lods
fmull
cmp
pushf
or
in
jno
or
notl
je
cld
into
inc
out
xchg
adc
in
inc
aam
scas
sahf
pop
pusha
loopne
lahf
sbb
mov
stos
add
out
xchg
pop
cwtl
and
loope
mov
sarl
or
cmp
adc
cmp
push
dec
out
jb
lahf
jl
mov
mov
shlb
jge
out
in
sbb
pop
inc
mov
aas
je
popa
insl
cmpb
jl
and
into
inc
cltd
pop
push
scas
pop
cltd
ss
les
fistps
loopne
jl
push
popf
fmuls
gs
push
jno
push
adc
push
inc
jg
pop
push
ret
lahf
pop
xchg
cmpsl
jmp
push
mull
sbb
push
outsl
aas
cmp
jb
lret
add
mov
sub
pop
xchg
mov
mov
jge
cmp
inc
flds
adc
sub
mov
popf
xor
mov
push
call
jno
call
sub
sarb
inc
test
jo
stos
loope
pop
mov
ss
ljmp
jns
pop
insl
push
fstps
cmp
sbb
fiadds
int
dec
sbb
ret
sbb
jp
mov
mov
mov
mov
fbld
bound
inc
sbb
push
fmuls
ja
paddq
movsl
pop
nop
test
out
mov
push
cmpsl
and
inc
repz
movsb
push
push
push
sti
xchg
cmp
push
cli
mov
xchg
ja
call
pop
push
and
inc
out
jmp
cld
test
pop
je
repz
pop
mov
sub
jle
sub
jb
gs
cmp
cli
pop
imul
add
cmpsb
pop
mov
add
pusha
aad
sub
add
mov
or
inc
adc
mov
add
inc
jmp
lock
push
add
les
leave
add
std
jge
lahf
mov
dec
pop
push
adc
cltd
mov
xchg
ret
aad
jnp
xor
gs
rorb
mov
and
in
das
nop
add
push
cmp
test
cmp
mov
pop
out
jne
cmp
jnp
jg
repz
faddl
in
mov
adc
nop
jnp
push
loope
pop
lock
xor
inc
mov
dec
rclb
dec
mov
push
decl
push
clc
loop
movl
push
fldl2e
adc
and
xor
dec
andb
push
jg
sbb
mov
ss
add
out
cmp
add
ljmp
cs
and
sub
cmp
push
in
sub
in
xor
icebp
mov
pop
jge
xor
mov
imul
or
aam
out
leave
push
lret
cmp
add
popf
in
push
aad
jecxz
hlt
test
cmp
loope
in
fwait
inc
mov
lea
sbb
fcmove
push
divl
or
and
idiv
ret
rorb
data16
test
nop
jp
lock
dec
push
mov
lcall
lds
adcl
or
out
inc
fldenv
sbb
lods
fsub
xchg
xor
cmpsl
pop
pop
fdivl
sbb
lret
xchg
xlat
jno
scas
pop
sub
filds
or
dec
aas
roll
pop
leave
pop
jp
dec
push
arpl
in
or
sbb
sub
mov
outsl
shrb
insl
sbb
loop
sub
testb
jecxz
jp
outsl
hlt
pusha
scas
shrb
je
and
lods
sti
or
leave
imul
mov
xchg
adc
ret
xchg
cs
xchg
fiadds
dec
ss
cli
pop
shr
xor
mov
inc
movsl
jg
pop
lcall
in
mov
out
pop
pop
sbb
lret
jg
out
js
and
mov
arpl
scas
sub
jmp
scas
gs
push
or
mov
push
daa
sbb
add
jl
hlt
mov
fisttps
addl
fdiv
call
push
jae
popa
icebp
mov
or
xor
xor
xor
fyl2x
mulb
rcrb
dec
jae
sbb
cld
cld
mov
and
or
add
in
mov
lods
and
stos
push
int3
fmull
cmpsl
xor
xor
jl
fsubl
aaa
arpl
and
addr16
cmc
inc
jae
sbb
insb
jmp
adc
inc
inc
enter
pop
cmp
jg
xchg
push
std
xorl
inc
frstor
fwait
ret
sbb
sbb
or
adc
clc
mov
idivl
stos
jmp
mov
mov
push
jecxz
push
sbb
jb
pop
sub
loopne
ds
mov
mov
shlb
inc
cmp
stc
mov
into
subb
popa
ss
mov
add
jne
xchg
cmc
xchg
sub
mov
inc
lret
fidivl
mov
ja
jmp
and
int3
and
hlt
mov
pop
cwtl
cmp
pop
mov
xor
pop
xchg
jl
pushf
bound
mov
sub
xor
in
fidivs
call
adc
ja
in
mov
out
sub
fmull
rcrl
sti
mov
shll
cmp
sub
sub
das
adc
repnz
sbb
jb
mov
mov
rorb
hlt
les
add
ret
mov
cld
out
fildll
ja
dec
fsubrp
xor
das
add
adc
cli
out
movsb
pop
add
mov
jle
hlt
test
test
loop
dec
and
ret
les
cmpsl
imul
fsubr
xor
lcall
iret
je
stos
mov
out
xchg
outsb
or
jb
xor
mov
ja
lds
add
sahf
out
adc
aad
test
xchg
adc
fcompl
cmc
push
shlb
ffreep
fcomps
mov
dec
pop
xor
mov
andb
pop
das
andb
sbb
sub
mov
int3
test
pusha
push
mov
rcrb
xlat
cld
outsl
rclb
push
lcallw
lahf
or
mov
movsl
push
lods
jae
mov
dec
pop
adc
inc
xor
or
dec
or
mov
and
mov
push
les
hlt
nop
inc
xor
cltd
enter
dec
jecxz
pusha
out
negl
sub
jnp
and
cmp
cmpsl
sahf
cli
ret
int3
xchg
cmp
repnz
sub
rolb
fcomi
sub
aas
dec
dec
adc
pop
je
cs
inc
mov
mov
subb
adc
cwtl
cmp
cld
test
dec
bound
loop
sub
imul
add
jle
imul
mov
ss
push
fmuls
mov
js
or
jo
jl
jp
std
pop
push
sbbl
xlat
sar
nop
pop
jle
xchg
icebp
pop
movsl
ret
mov
sub
mov
sti
lock
and
push
inc
iret
cmp
das
mov
push
fisubrs
sub
push
mov
out
push
ss
bound
dec
loope
mov
xchg
mov
ss
iret
xor
in
lcall
mov
aad
scas
cmpl
push
mov
mov
clc
push
or
cli
aad
cli
xor
inc
int3
cmpsl
xchg
mov
popf
js
inc
out
push
mov
xor
dec
cmc
mov
jmp
jmp
xchg
mov
cmp
scas
fists
mov
xor
aaa
or
mov
outsl
sub
push
or
int3
sbb
gs
push
daa
outsb
push
rcr
pop
insb
push
fnstenv
xchg
shll
or
ret
dec
hlt
xlat
scas
jae
sbb
ljmp
test
jg
icebp
adc
pop
into
pop
stos
pop
push
xchg
inc
into
sub
stos
insb
movsb
int
lret
jg
das
cmp
cli
cmp
dec
mov
das
xchg
lahf
movsl
dec
jnp
je
mov
sub
pop
into
jge
pop
jae
sbb
in
dec
xchg
xchg
sarl
push
sbb
movsl
rolb
lcall
jns
or
dec
dec
clc
fsubl
daa
notl
sahf
fwait
dec
cmp
insl
sub
scas
jp
push
outsb
fcompl
push
std
lret
xor
ret
adc
adc
jb
lret
pop
inc
xchg
sub
push
dec
sti
pushf
xchg
test
mov
fwait
xchg
jg
adc
mov
xchg
pop
stos
outsb
push
sbb
xor
int
lods
fs
pop
pop
mov
sarl
fsubl
add
aad
out
pop
nop
fistpll
xor
push
rolb
add
lcall
push
pushf
add
in
pop
dec
iret
pop
xor
ds
fcomps
mov
mov
adc
mov
jecxz
out
sub
jb
scas
scas
lock
lcall
inc
mov
ss
pop
jae
pop
js
xchg
cmc
jb
mov
pusha
out
jae
cmp
or
sbb
jp
fldcw
jge
lea
or
loope
cli
fcomp
pop
push
push
or
xchg
out
xchg
das
lods
or
add
push
or
mov
lea
dec
xor
sbb
std
push
mov
and
xchg
repnz
dec
das
push
int
sbb
sbb
xor
lods
int3
arpl
int
neg
lahf
jns
nop
cmp
sub
in
sbb
jg
icebp
ror
or
test
sbb
mov
mov
mov
mov
imul
cltd
cwtl
dec
fmull
std
inc
gs
push
rolb
movsl
enter
dec
test
mov
orb
adc
clc
shll
push
loop
jb
call
es
dec
cmpsl
adc
fcomps
pushf
xchg
mov
inc
bound
xor
push
or
fldcw
mov
sub
ret
inc
hlt
scas
xor
push
insl
mov
jo
aaa
je
fs
repnz
sbb
dec
adc
lcall
fnstsw
jne
jbe
sub
and
mov
lods
arpl
lea
dec
cmp
inc
loope
sub
sti
add
psubq
je
sarl
std
js
les
cmp
rolb
xchg
mov
cmp
je
add
rcr
lret
fwait
xor
pop
arpl
movsb
dec
call
pop
stc
ja
or
and
int3
mov
outsb
xchg
xor
cmp
mov
cmc
jns
cltd
cmp
iret
and
sbb
hlt
xor
jae
and
loop
aaa
lret
cli
into
inc
int3
outsb
mov
xchg
rorb
icebp
push
fimuls
call
test
shl
and
or
stos
ljmp
and
push
mov
hlt
mov
int
xchg
add
adc
sub
jmp
or
jp
and
mov
jae
test
add
jle
repz
daa
mov
cmp
cmp
push
shlb
popf
into
push
mov
jbe
cmp
insl
test
push
mov
xor
cmpl
mov
or
shll
ret
divb
jae
xchg
repz
sub
das
rol
jg
and
mov
arpl
and
out
loope
cmc
inc
orb
das
int
pop
lahf
sbb
sbb
ljmp
add
ret
and
xchg
and
imul
je
lds
je
sub
and
jo
into
lcall
lods
mulb
cmp
mov
inc
dec
xchg
icebp
imul
dec
mov
mov
dec
pop
mov
mov
and
sahf
sbb
mov
imulb
loope
cli
mov
ds
adc
jne
daa
xor
adc
jno
and
shrl
mov
xlat
fistpll
sub
mov
mov
jge
mov
loop
inc
mov
push
inc
mov
rcll
mov
imull
sbb
jae
inc
out
cli
ljmp
mov
movl
mov
dec
sbb
inc
movsl
sub
scas
sub
push
cmpl
fstpl
xchg
and
inc
mov
cld
clc
sahf
clc
fadd
pop
mov
mov
xchg
aad
xlat
in
lcall
stos
cmp
mov
insb
test
jmp
sub
into
lock
sub
and
xor
dec
jp
ljmp
push
inc
mov
pusha
je
cld
out
mov
scas
jo
test
dec
cmpsb
inc
jmp
mov
bound
dec
test
jo
and
nop
sbb
sar
push
mov
sbb
bound
or
mov
mov
pop
movsl
xchg
and
mov
lcall
lods
lods
fidivs
cmpsb
repnz
lock
pop
frstor
dec
test
xor
add
enter
push
cmp
outsl
mov
add
pop
lds
mov
icebp
add
or
das
movsl
ss
mov
pop
mov
gs
dec
xor
mov
test
inc
into
cmp
dec
leave
test
sub
mov
in
fisubrs
dec
mov
and
add
fldcw
adc
push
pop
jl
in
dec
aas
mov
and
fisttpl
push
repz
out
pusha
jle
imul
shlb
imul
mov
pop
mov
pop
scas
leave
adc
xchg
stc
or
sbbb
sbb
mov
addl
pop
pop
jbe
adc
ss
add
jae
dec
shlb
jbe
std
aaa
fmuls
sarl
pop
mov
jl
fld
mov
lcall
imul
cli
jns
mov
lcall
das
cmp
sub
jbe
fst
shr
ss
pop
mov
cmp
shlb
mov
int
or
mov
sti
sub
inc
sti
push
sbb
add
stos
xchg
popa
jecxz
xor
cltd
out
aas
cmpsb
aas
add
sub
xlat
dec
sti
lret
int3
hlt
addr16
ljmp
lods
xor
xchg
dec
or
xor
sbb
cld
and
sbb
push
idivl
rorl
fmull
cmpb
mov
dec
inc
ss
rcrb
mov
jl
cmp
jo
mov
int
xor
push
and
movsl
repz
sbb
cld
push
inc
fists
pop
orb
mov
jo
ds
aas
mov
ds
and
div
inc
dec
dec
fcoml
pop
xor
pop
adc
sub
scas
jmp
or
aas
lods
pop
out
dec
je
sti
pop
mov
xchg
gs
inc
jg
sub
fildl
lret
adc
test
pop
push
jo
add
lret
xlat
icebp
adc
push
xor
stos
adc
insb
into
pop
mov
fs
sahf
bound
pop
push
xchg
sbb
cs
cmpsl
pop
xchg
dec
mov
or
xor
lods
fistpll
roll
mov
inc
push
lock
mov
fisubl
pushf
xor
mov
mov
or
ljmp
clc
mov
push
cmp
pop
xchg
lea
sub
loopne
lcall
movsb
test
rcr
lea
xor
xchg
push
xchg
xor
faddl
gs
push
mov
pop
xor
push
insl
cmpsl
andl
sbb
fs
jno
xor
cmc
jb
fiadds
data16
testb
fimuls
and
hlt
pusha
or
mov
or
daa
sub
lcall
int3
pop
loope
pop
mov
or
stc
in
jnp
cwtl
shll
lea
outsl
sub
mov
dec
stc
outsb
hlt
jmp
aad
mov
push
pop
ds
sub
add
nop
loope
mov
jns
into
lcall
sbb
xchg
shll
jnp
xor
in
jl
add
out
or
and
inc
andb
out
das
sahf
pop
xor
adc
out
sbb
loopne
adc
push
xor
pop
and
repz
cmc
out
jb
shlb
mov
sub
clc
pop
addr16
call
ljmp
call
dec
xchg
push
shrl
lahf
repz
xor
add
sarl
jnp
loopne
sub
addr16
subl
scas
hlt
lods
cmpsl
enter
lock
loope
mov
or
cmp
lock
mov
sub
iret
in
jp
loope
mov
xlat
mov
sahf
cld
int
or
js
cmp
jae
adc
mov
xchg
scas
ljmp
xor
ds
or
fs
sbb
xchg
cmp
loop
sti
xchg
jne
jbe
mov
lcall
or
rep
pop
sbb
hlt
xor
aas
xor
mov
add
enter
mov
push
adc
rorl
sbbb
add
add
push
or
mov
push
test
insl
fcmovnu
and
dec
movsb
lret
and
cmp
cli
xchg
test
and
mov
cmp
out
cld
bound
jle
sbb
adc
cmc
mov
sbb
cmp
ret
mov
add
data16
addr16
add
lea
aas
andb
incb
dec
enter
hlt
test
mov
imul
mov
xchg
cld
mov
clc
pop
icebp
sbb
add
stc
mov
jbe
sbb
xor
ljmp
test
test
ret
sub
mov
out
cmp
ljmp
mov
mov
rcll
push
jecxz
xchg
push
data16
jno
and
lahf
inc
test
push
cltd
lea
mov
sub
jns
leave
lahf
push
fdiv
lahf
cli
stos
dec
in
dec
in
mov
mov
out
and
xor
icebp
enter
sbbb
repnz
pop
insb
xchg
mov
int3
test
add
stc
les
mov
mov
xchg
les
es
out
cmpsl
add
mov
fsubl
add
loop
xor
cltd
test
mov
push
cmp
add
in
xchg
push
shlb
sub
push
arpl
cmp
imul
or
pop
arpl
pop
es
mov
add
push
dec
pushf
mov
cmp
pop
sub
pushf
pop
aad
xor
cmp
lds
fdivl
aam
mov
ret
dec
mov
subl
xor
cmp
subl
sahf
or
sub
jp
ret
daa
scas
jl
jp
sbb
dec
fiaddl
jmp
cmpsb
add
inc
sbb
loop
cmpsl
dec
xchg
sub
and
sbbl
out
jmp
notb
push
mov
or
in
adc
cltd
cmc
aam
sbb
rorb
jne
jns
aad
nop
jp
fucomip
outsl
sbb
aaa
pop
jns
push
mov
push
mov
out
inc
push
inc
clc
mov
fbstp
sbb
fildll
dec
into
les
rorl
enter
push
or
cmp
add
shll
mov
subl
dec
jne
movsl
lods
dec
sub
cmc
mov
aad
lock
ds
jge
jae
mov
clc
add
out
aaa
sub
pop
xor
xchg
mov
cmp
push
adc
test
movsl
in
mov
test
mov
inc
xor
or
stc
sbb
xor
pop
cli
ret
icebp
jo
and
rorb
test
adc
pusha
sbb
jecxz
push
cmc
mov
lcall
mov
fisubl
cmp
loope
cld
addb
ljmp
pmulhuw
xor
xor
pop
sub
shl
add
lea
mov
idivl
ja
ja
lahf
dec
dec
mov
movsb
jns
add
inc
mov
ss
or
dec
test
push
jle
and
xchg
jg
or
jp
push
adc
mov
enter
fistpl
push
in
cmp
fbstp
cld
rorl
mov
mov
push
add
addb
adc
cmp
mov
fcmovnb
push
pop
test
dec
mov
dec
ror
or
repz
xor
jns
dec
cmp
inc
in
or
pop
xchg
es
into
mov
mov
cmp
mov
jl
orl
inc
inc
pusha
iret
add
mov
xchg
adc
push
jb
push
lock
lock
xchg
or
jmp
cmpsb
cmpsl
ret
outsl
shrb
repnz
sti
scas
mov
lods
or
je
imull
test
sub
ret
enter
dec
inc
mov
or
jnp
push
mov
les
ret
mov
imul
adcb
leave
push
pop
je
push
or
sbb
dec
aaa
mov
push
lret
jne
test
loopne
das
xor
in
and
xor
and
lret
hlt
cmc
mov
loop
adc
xor
adc
ja
pop
cwtl
or
pop
xchg
aas
in
ljmp
pushf
sbb
xchg
and
mov
or
hlt
jge
dec
xchg
mov
pop
jno
and
push
xchg
inc
rol
in
mov
fsubrl
aaa
pop
adc
aad
adc
and
mov
ret
imul
test
lret
cmpsl
adc
rcr
arpl
call
test
stos
dec
lret
push
and
in
cs
test
notb
enter
mov
mov
add
outsb
mov
insl
sbb
xchg
insb
movsl
lods
movsb
shll
dec
ss
test
div
xchg
and
lahf
aas
adc
xchg
pop
in
mov
or
std
lods
jbe
out
mov
es
jle
icebp
dec
mov
inc
test
pop
jo
mov
icebp
pop
shll
daa
aad
inc
dec
and
mov
inc
xor
int3
je
imul
inc
lods
or
xlat
push
push
jg
add
jae
and
lods
aad
jne
jno
ret
es
sub
push
out
daa
shll
mov
addl
jl
int
inc
mov
xchg
mov
mov
mov
xchg
sti
mov
shll
sub
out
add
js
popf
jb
sbb
fs
pop
rolb
and
and
adc
into
int3
loope
inc
sub
sbbb
mov
adc
or
cmp
cltd
pop
push
cmp
enter
popf
sbb
jp
cmp
stos
insl
imul
imul
and
pop
or
fcomp
es
das
out
mov
and
popa
in
outsb
lahf
pop
into
aad
ficoml
pop
cli
lea
jmp
xlat
and
pusha
xor
and
mov
scas
cmpsb
fadds
sub
popa
sbb
mov
add
sbb
push
pop
or
stc
bound
jo
push
repnz
int3
push
mov
sub
sub
jnp
inc
mov
add
xchg
or
mov
iret
pop
xorl
je
dec
sti
pop
int3
int
lea
sub
test
mov
sbb
mov
jl
pop
mov
mov
aam
aaa
jecxz
add
sbbb
in
movsb
adc
data16
imul
iret
clc
or
add
fisubrs
xchg
mov
dec
cli
xor
dec
jg
or
sbb
fdivl
aaa
push
mov
mov
push
and
push
stc
rcr
add
int3
dec
fldl
xchg
leave
xor
mov
dec
push
push
jbe
xor
mov
jmp
jne
mov
imul
inc
sbb
mov
out
mov
jnp
mov
mov
pusha
in
pop
sbb
addb
add
jne
ds
in
orb
mov
and
inc
pop
sti
adc
jmp
push
or
pop
inc
sbb
dec
fwait
lea
pop
ret
jge
outsb
in
xchg
push
mov
mov
mov
xor
mull
push
popa
shlb
daa
cli
mov
jb
js,pn
cmpsb
pop
dec
rcll
xchg
fwait
inc
pop
test
imul
inc
inc
ja
xor
adc
jg
stc
movsb
xor
lahf
inc
mov
cmp
inc
hlt
dec
int
jo
xor
sti
fucomip
dec
push
push
je
jb
cmp
push
icebp
mov
rclb
adc
mov
cmp
sbb
and
cmpsl
cld
hlt
pop
test
inc
nop
or
sub
mov
xlat
sbb
xchg
nop
gs
mov
inc
out
fdivrl
call
hlt
adc
xor
bound
xchg
sbb
es
sbb
xor
push
out
rcrl
stc
push
test
pop
push
lret
jb
pop
ret
lods
popa
dec
lahf
aas
mov
lcall
add
pop
out
je
mov
rorl
outsb
test
and
lcall
sub
dec
push
xchg
fisubl
fdiv
pushf
cmp
outsb
ret
decl
sub
push
inc
inc
pop
aam
pop
stos
addr16
jmp
ja
jae
adc
iret
inc
out
insb
subl
lcall
adc
insl
mov
mov
lahf
test
aad
repnz
inc
ror
in
jnp
popa
pop
test
icebp
inc
insl
stos
sub
call
mov
xor
fadds
std
cmp
dec
push
clts
sub
js
inc
mov
fstl
mov
pop
fcom
add
dec
push
mov
out
cli
stos
mov
scas
or
ja
push
shrb
arpl
mov
xchg
shlb
dec
jns
cmp
in
ret
imul
int
push
push
sbb
xchg
stc
sbb
notb
sub
lock
cmp
pop
or
add
inc
int
pop
or
scas
dec
sbb
pop
icebp
movsl
dec
mov
and
outsl
in
xchg
fwait
pop
adc
fstl
test
mov
into
daa
add
pop
pop
fcoms
out
fiaddl
mov
imul
adc
add
xor
stos
sar
push
mov
addb
dec
jge
je
rcl
jns
int
idiv
jo
out
xchg
test
mov
pop
dec
je
mov
int
test
aam
cli
xchg
out
out
xchg
xor
push
stos
repz
in
cmp
mov
sub
rsm
loop
push
fbld
inc
cmp
aam
mov
in
aaa
imul
mov
sbb
dec
or
std
inc
mov
jge
les
sub
mov
jbe
cmc
mov
cltd
cmp
mov
dec
jge
sbb
dec
out
orl
and
or
adc
daa
int3
data16
inc
pop
ret
cmp
imul
lods
xor
xor
fisubs
sub
xchg
inc
lods
out
push
pop
ficomps
mov
pop
test
ss
or
aaa
push
mov
or
lds
fimuls
dec
popa
aaa
clc
jne
loop
cmpsb
movsb
inc
js
xchg
sub
mov
cmp
xchg
push
rclb
add
lea
push
scas
cmp
sub
test
mov
xchg
test
inc
jo
xor
ljmp
cs
xor
inc
jmp
xor
js
adc
fcmovu
out
sub
pop
sbb
stc
cmp
xor
aas
dec
cltd
mov
add
mov
fstp
push
and
mov
jne
add
or
mov
sbb
insb
adc
aas
sbb
sub
adc
shlb
lret
mov
loopne
adc
lods
movsb
lcall
lret
sub
daa
lock
mov
mov
ss
lods
xchg
xor
sub
push
gs
popa
dec
les
data16
fldcw
insl
mov
xor
inc
cmp
push
jb
popa
leave
mov
test
sub
popf
jo
mov
fldcw
mov
or
push
mov
repnz
out
inc
inc
dec
cmpsb
ret
mov
pop
mov
mov
jb
sub
in
add
cltd
loopne
cmp
sbb
adc
out
jne
sub
pusha
sub
fs
mov
imul
jbe
and
shlb
dec
mov
pop
scas
loop
aas
inc
push
push
push
xchg
lcall
push
fadds
or
enter
push
mov
stos
and
push
jecxz
mov
or
jnp
addr16
movsl
lahf
stc
cmpb
adc
cmp
dec
pop
push
fimuls
xor
imul
jecxz
loopne
or
pop
addr16
lea
jne
mov
sbb
clc
ds
sub
or
mov
pop
or
dec
pop
cmp
jle
xchg
inc
sar
add
add
push
pop
hlt
in
xchg
nop
push
imul
mov
or
mov
inc
jp
lock
or
shl
sbb
daa
repz
add
inc
mov
rcrb
xor
lahf
ficomps
cmpsb
fwait
aas
pop
xor
les
jo
aaa
call
shl
loopne
add
cmpsl
or
cli
xchg
pop
fidivs
sbb
mov
and
push
sub
sub
push
das
aas
mov
data16
push
inc
adcl
stc
sub
cmp
pop
cmpsb
movsb
out
cwtl
or
iret
aad
jnp
lret
rol
hlt
and
imul
pop
mov
sub
adc
fwait
pushf
ja
mov
mov
mov
stos
or
xchg
push
or
pop
jg
adc
call
sbb
gs
pushw
cmp
lock
push
push
mov
fistpll
cmc
mov
mov
or
mov
adc
mov
dec
adc
insl
jge
aad
add
xchg
mov
or
out
lods
sbb
push
sbb
add
xor
adc
test
jno
mov
push
cmpsb
dec
adc
int3
stos
pop
jbe
mov
sbb
fcompl
nop
or
mov
xchg
xor
lahf
mov
in
je
ss
mov
mov
mov
dec
add
fcoml
push
pop
dec
test
das
lock
xor
cld
lcall
mov
rclb
jl
push
push
pop
repz
pop
pusha
pop
sub
sub
in
clc
mov
add
push
sub
jnp
adc
loopne
cmpsl
mov
lret
pusha
fnstsw
out
inc
mov
jecxz
adc
cmpsb
jb
cwtl
mov
cmp
mov
mov
push
sub
call
mov
les
pop
or
sbb
insl
lds
cltd
inc
mov
cld
dec
sbb
sub
cmp
gs
fsubrs
jmp
cmp
setge
nopl
jne
jmp
lret
sub
cmc
mov
jb
dec
int
sahf
into
bound
fidivrs
xlat
or
rorb
test
xor
lret
data16
lret
mov
dec
and
dec
jecxz
and
leave
cmp
ljmp
add
in
fistpl
cltd
pop
adc
adc
aaa
pop
jp
and
xchg
inc
rcll
jecxz
bound
stos
adc
and
pushf
sahf
mov
add
pop
adc
inc
in
decl
mov
out
cs
scas
jb
adc
ss
cmpsb
nop
cli
pop
insb
and
jg
jbe
jnp
outsl
mov
popf
daa
rcrl
or
call
ss
mov
dec
and
fistl
gs
mov
pop
in
sahf
std
out
sti
push
xlat
fcom
lahf
in
pop
repz
sbb
and
fxch
rcll
scas
rorb
icebp
sbb
and
cmp
pusha
stc
dec
in
aas
loope
dec
mov
mov
ret
hlt
inc
lds
jge
test
jle,pt
push
daa
jp
jle
lods
mov
shlb
xlat
jle
push
call
sub
popa
mov
mov
sub
cmp
push
xor
repnz
das
and
fdivrl
mov
mov
dec
das
inc
repz
icebp
es
and
cmp
std
pop
ss
test
pop
in
imul
sbb
pop
xlat
les
pop
jmp
in
popa
dec
js
pushf
pop
or
mov
add
sub
pusha
notl
mov
js
ficoms
lock
test
sbb
aad
or
dec
xchg
dec
mov
loopne
add
push
cmpsb
xchg
std
loop
ss
xlat
mov
dec
and
and
cli
in
jae
sub
int
movsb
push
jg
stc
sub
in
inc
lods
dec
mov
push
push
inc
mov
pop
clc
lret
mov
sub
arpl
ds
xchg
bound
cmp
xchg
out
xchg
inc
sbb
icebp
fsubrs
aad
adc
sbb
cmpsb
mov
xchg
test
inc
xchg
fisttpll
loope
out
scas
stos
sub
inc
add
inc
mov
repz
jbe
nop
int
mov
mov
mov
or
push
add
mov
mov
pop
dec
dec
cmp
cmp
xchg
sbb
arpl
jl
dec
int3
insb
data16
data16
push
dec
mov
or
sub
mov
sbb
arpl
mov
jmp
sarl
mov
clc
int3
fistpll
iret
lods
sbb
adcl
fldenv
gs
je
inc
cmp
and
inc
in
or
mov
xchg
ds
insl
clc
xchg
shll
pusha
inc
add
xor
test
loope
cmp
sbb
stos
std
call
push
xchg
add
out
jl
jge
cmp
and
imul
adc
enter
les
ficoml
xor
test
mov
sbb
ds
lahf
shl
shll
push
jbe
int3
sub
adc
int3
inc
add
jmp
loopne
pop
imul
add
push
mov
filds
xor
mov
xchg
or
cwtl
and
add
adc
jle
pop
sbb
movsb
test
push
mov
inc
pop
in
js
pop
sbb
ret
pop
addr16
insb
jg
fistpl
xor
mov
mov
repz
dec
ja
sbb
rol
mov
je
cli
lods
imul
cwtl
cmpb
imul
xchg
xchg
test
leave
out
jno
or
adc
out
push
pop
adc
add
sbb
xor
dec
sub
mov
int
add
je
pop
and
xchg
mov
rorl
mov
ljmp
lock
imul
adcl
fistps
cmp
bound
in
pop
add
das
adc
cmp
into
xchg
add
push
sbb
jecxz
lret
call
test
push
fsubl
jns
sti
xchg
jns
fists
dec
scas
outsb
dec
outsb
push
inc
movsl
xor
jg
mov
jge
sti
outsl
add
iret
fisubs
jne
push
sub
movsb
imul
mov
xlat
push
push
jns
pushf
mov
mov
pop
adc
int3
es
xlat
mov
sbb
cmp
decb
lahf
mov
dec
jae
jge
stc
aam
xor
insl
xchg
pop
dec
pop
xor
fmuls
or
sahf
cmp
aam
mov
or
mov
inc
or
or
mov
ret
sbb
rcrb
stos
push
cli
loope
ss
cmp
cmpsl
inc
insl
sub
pop
xchg
insb
movsb
loopne
push
sbb
insb
sarb
jecxz
in
sub
pop
rcl
loop
cmp
stos
add
sub
adc
adc
jp
push
dec
mov
mov
push
mov
out
in
je
sub
sar
inc
push
mov
mov
sbb
dec
xchg
test
jne
mov
sub
xchg
cmp
mov
rolb
notl
jno
loope
das
std
push
inc
in
inc
aad
lahf
in
daa
ljmp
mov
xor
call
pop
repnz
mov
pop
push
mov
mov
pop
sti
jne
ret
andb
cmp
add
pop
fldl2e
push
mov
mov
pop
nop
adc
out
repz
aas
popaw
outsl
shrb
in
xchg
mov
sub
fimuls
add
imul
out
push
popf
dec
mov
in
outsb
sub
cwtl
cld
inc
inc
mov
fptan
mov
cmp
arpl
mov
dec
rcrl
and
adc
xchg
fisubrl
mov
dec
ljmp
clc
mov
inc
pop
jle
xchg
scas
lods
adc
in
lods
setp
push
ffreep
mov
addr16
jmp
das
fwait
inc
cmp
push
outsb
cmp
sub
arpl
sbb
pusha
xchg
xchg
add
jl
scas
fcmovne
in
ret
test
mov
movsb
mov
xchg
fcmovu
push
cmp
mov
out
pop
js
cmpsl
and
jae
pop
inc
sub
xchg
adc
jns
mov
cmp
xchg
lds
sub
jbe
lods
rol
fisubs
push
cmp
stos
imul
hlt
xor
jl
sub
xchg
inc
sbb
in
dec
cmp
aad
adc
xchg
mov
and
sahf
repnz
xchg
mov
mov
imul
mov
dec
sub
xlat
das
pop
pop
incb
cmp
sbb
inc
data16
pop
rolb
icebp
adc
outsl
xor
xchg
pop
test
cwtl
mov
shl
cmp
push
aaa
shr
xchg
shll
fcmove
xchg
nop
push
jp
in
roll
jmp
xchg
scas
repnz
push
push
shrl
gs
push
jo
push
add
stos
adc
cmpsb
adc
cli
int
jae
scas
xlat
in
movsb
test
mov
ja
push
jecxz
inc
loop
sub
aam
stos
fwait
mov
dec
leave
adc
jbe
push
fcomi
jno
jge
push
or
in
push
jp
outsl
scas
test
sub
test
in
sub
inc
out
cltd
adc
stc
cmp
ljmp
mov
cmp
inc
addb
pop
fstpt
inc
decb
es
and
outsb
je
jl
sub
or
adc
icebp
push
or
clc
xor
test
cmpsl
arpl
mov
daa
and
outsb
push
jne
nop
pushf
xor
lock
mull
add
pushf
jo
nop
loope
shl
loope
jo
iret
scas
int3
jecxz
mov
jae
dec
mov
adc
xchg
mov
mov
and
xlat
push
or
add
sub
test
out
push
cmpsb
jns
fwait
adc
pop
aas
or
jecxz
daa
int3
or
loope
push
mov
mov
jae
cmpl
inc
push
lcall
movsb
dec
mov
lods
and
or
cmp
in
into
jge
fldenv
xchg
sub
pusha
adc
xor
aad
xchg
mov
cs
push
shl
push
rolb
stos
dec
lds
in
pusha
fcmove
xchg
dec
add
push
out
or
cmp
aaa
repz
xor
sub
ret
and
sbb
push
stos
mov
lods
fwait
mov
out
sahf
pop
popa
mov
out
insb
rcll
adc
jne
push
add
mov
mov
lods
call
out
cmp
xchg
mov
mov
fisubs
xchg
in
mov
cmp
dec
addr16
pusha
sbb
shlb
cs
sbb
adc
pop
loop
cwtl
xchg
andl
mov
xchg
cmpsl
add
test
shlb
insb
push
sbb
xchg
mov
std
lds
and
es
daa
jno
ret
cmp
jg
mov
sbb
adc
andb
mov
jg
rcr
xchg
rolb
sub
push
test
testl
out
sub
lret
fldcw
push
stos
pop
popf
mov
push
lock
pop
loopne
fisubs
xchg
push
dec
ret
adc
sbb
pop
sub
and
and
pop
dec
or
stos
sub
inc
sbb
mov
inc
fidivrs
stc
jle
cli
rclb
and
and
mov
hlt
pop
cmp
sbb
xchg
add
ret
hlt
scas
pop
dec
or
imul
or
or
out
out
rcr
imul
add
lcall
cmp
add
jmp
pop
xor
iret
dec
cmc
jae
mov
ss
out
lds
jbe
cmpsb
mov
sub
xchg
notl
enter
xor
jo
mov
icebp
fmuls
add
inc
cmpsl
xchg
test
inc
lods
sbb
scas
pop
xchg
and
inc
mov
lcall
cli
movsl
ja
sbb
pop
dec
push
js
sbb
inc
int3
mov
cmp
and
sbb
in
jmp
jbe
push
xor
jo
push
push
sbb
pop
cmpsb
mov
test
jmp
jb
cmp
pusha
popa
ja
out
cmc
xor
push
shll
xor
arpl
loopne
mov
shrb
sub
push
ret
leave
xlat
jns
mov
cwtl
movsl
fs
insl
xor
jl
jnp
adc
out
pop
pop
test
fs
pop
or
add
sub
sbb
dec
insl
sbb
jno
cmp
mov
outsb
lret
or
add
int3
jbe
mov
adc
sbbl
xor
xchg
repz
leave
int3
and
xchg
xchg
xor
and
add
popl
loop
dec
icebp
sbb
xchg
enter
repz
jmp
dec
mov
dec
stos
rclb
shlb
sub
push
mov
loop
daa
jmp
jecxz,pn
ljmp
pop
add
out
subl
pop
movsl
jo
or
les
mov
adc
dec
mov
lock
xor
xchg
lret
xor
int3
cmp
jecxz
into
ljmp
sahf
pop
ja
jbe
push
outsl
mov
loop
and
xorb
sbb
sti
mov
insl
ds
dec
or
xor
xchg
movsb
adc
pop
mov
mov
cs
inc
stos
inc
add
inc
arpl
mov
leave
movsl
xchg
add
subl
push
pop
imul
pop
fs
xlat
sub
mov
cmpl
insl
rcrl
cld
outsb
push
loope
ds
pop
jmp
in
push
imul
ret
push
push
adc
jno
dec
jmp
cwtl
dec
je
pop
jnp
in
shlb
loop
jnp
test
mov
dec
int
push
push
xlat
les
mov
push
xchg
add
adc
mov
in
xor
dec
insl
aam
in
jno
int3
lock
jns
sbb
in
pop
in
es
sub
sarb
sbb
mov
leavew
ficoms
mov
pop
cmp
jbe
add
push
pop
cmc
test
xchg
test
mov
mov
dec
lahf
jnp
repz
je
mov
jl
sub
or
fwait
out
mov
xlat
lcall
inc
sti
push
jmp
add
cmp
pop
in
inc
push
mov
dec
pop
dec
mov
xchg
push
mov
adc
shll
aad
popf
outsl
jae
fnstsw
sbb
mov
icebp
enter
mov
pop
fnsave
scas
imul
pushf
inc
movsl
call
in
adc
into
pusha
jne
ret
xchg
xor
mov
push
ja
js
sbb
es
movsl
jns
and
test
push
push
sbb
cmpb
cld
aam
sbb
icebp
mov
push
ljmp
and
push
test
bound
out
adc
mov
sahf
mov
cmpsb
fwait
xchg
das
cmp
inc
popf
cmp
dec
push
hlt
mov
nop
jl
adc
sahf
lret
bndldx
dec
adc
ds
jno
cmp
loopne
test
std
in
andb
loopne
cmp
mov
dec
xchg
fistpll
jno
out
mov
lock
xchg
mov
cmc
sbb
imul
mov
push
test
pop
xor
cld
jnp
inc
test
cwtl
push
mov
inc
xchg
fadds
push
push
adc
data16
in
sbbb
in
loope
stos
lock
lds
ret
fwait
fwait
mov
ljmp
sbb
mov
or
push
sub
cmc
pop
xor
bound
in
jecxz
push
mov
dec
pop
adc
inc
mov
add
jno
sub
jae
int3
aaa
mov
jle
imul
fs
xor
mov
mov
lret
mov
fists
mov
xchg
mov
imul
jmp
outsl
xor
or
loopne
hlt
es
pusha
jno
mov
push
push
jbe
jns
sbb
cmp
mov
push
je
pop
cmp
add
inc
sahf
fstpl
and
mov
sbb
mov
push
jmp
pushf
sarb
ss
ss
ds
popa
scas
int3
in
out
cmp
mov
stos
inc
cmp
es
lds
jg
cmpsl
pop
xorb
ljmp
imull
lock
test
es
dec
fwait
or
mov
cmc
cmp
sub
shr
jge
or
mov
push
adc
bound
inc
dec
mov
cmp
mov
dec
inc
iret
push
lea
into
jbe
add
lds
jnp
pop
out
jl
test
xchg
mov
jle
sbb
call
clc
push
and
adc
iret
pusha
cmpsl
jae
stc
adc
dec
xchg
jle
mov
in
ljmp
js
or
sub
out
insb
mov
int
mov
add
xor
outsl
nop
outsb
push
lret
ror
movsb
enter
push
jae
push
sarl
and
cmpl
fsubr
icebp
cltd
add
out
inc
fs
cld
loope
adc
xchg
testb
adc
test
sbb
jo
push
out
int
dec
test
jns
jl
icebp
xchg
ss
mov
add
sahf
scas
fstpt
fnstenv
dec
int3
dec
cs
mov
jge
movsl
dec
pop
xchg
push
and
mov
pop
lcall
xor
ret
sub
cmp
lahf
es
popa
xor
mov
mov
xchg
mov
push
and
sub
push
or
mov
repz
lcall
jne
mov
and
mov
xchg
aam
dec
cmpsl
setp
jecxz
or
leave
xchg
push
ret
into
test
xor
call
mov
and
inc
arpl
bound
push
loope
jne
insb
push
jno
mov
clc
pop
mov
push
test
std
nop
jno
shl
test
pop
pop
sbb
and
stos
je
add
pop
enter
mov
test
fnsave
daa
ds
xchg
gs
test
adc
mov
faddl
jg
daa
cld
mov
add
imul
addl
adc
jle
jns
dec
inc
fcoms
xor
sbb
aam
insb
mov
inc
mov
adc
lcall
jns
dec
cmp
js
add
shlb
andl
imul
cld
int3
mov
rcll
inc
fadds
mov
mov
into
mul
cmp
movsl
out
in
dec
inc
in
dec
out
cmpl
lock
add
inc
mov
push
or
inc
push
push
mov
lcall
xor
and
xacquire
fcomps
mov
fwait
daa
fmul
dec
xor
mov
push
jne
and
dec
xchg
aam
scas
sbb
lods
cmpsl
std
pop
test
push
push
add
das
js
dec
cmp
insl
mov
xchg
adc
pop
xor
dec
sub
addl
add
nop
lods
cwtl
outsl
fistps
cmpl
ret
negl
sub
xor
mov
add
insb
js
push
and
pop
sahf
aad
xchg
loop
xlat
lret
adc
loop
faddl
mov
subl
rolb
xchg
stos
ret
fwait
sbb
divb
lods
mov
mov
push
test
imulb
rorb
idivl
scas
aas
cmp
and
std
sbb
xor
lock
and
adc
or
cwtl
sbb
cmp
imul
repnz
xchg
or
mov
addr16
add
mov
cmp
adc
xor
or
xchg
in
add
repnz
subl
fwait
xchg
loop
push
adc
ret
xor
lods
jns
cmp
pop
mov
aam
or
daa
xor
ror
jnp
pop
or
jge
insb
inc
xor
neg
pop
scas
cmp
data16
pop
mov
cmc
imul
mov
mov
fists
sbb
pushl
inc
cwtl
pop
imul
mov
jg
jno
test
and
dec
arpl
inc
mov
rolb
mov
jo
xchg
lock
out
xchg
lret
and
insl
mov
mov
xchg
pop
sub
sbb
cmc
xorl
repz
sti
jb
cmp
iret
push
clc
es
pusha
or
mov
hlt
fcmovnb
mov
popa
xor
cmp
push
clc
repz
push
or
push
inc
or
xchg
in
mov
cmp
and
dec
inc
push
mov
adc
inc
lods
dec
jns
mov
loope
add
arpl
je
lea
or
mov
int3
sbb
test
push
arpl
fstpl
sbb
push
pop
jmp
out
add
dec
out
test
pop
push
push
add
or
insl
inc
mov
fldcw
adcb
test
xchg
and
addl
cli
mov
fcomps
or
mov
mov
popf
outsb
xrelease
mov
nop
or
outsb
xchg
in
mov
jno
movsb
aaa
mov
pop
out
mov
rol
enter
xchg
mov
nop
push
xchg
in
cmpsl
jns
insb
lret
into
sbb
add
inc
xchg
iret
hlt
int
out
xchg
fnstsw
scas
jmp
push
jns
insl
rcll
sbb
sub
ljmp
sbb
test
jne
lea
mov
scas
inc
bound
sbb
mov
lahf
xor
cmp
rcll
in
and
xor
jp
loopne
call
in
or
mov
in
aas
sbb
shll
add
fcoms
sbb
insl
xor
mov
insb
or
dec
cmp
in
add
sub
les
cmp
in
adc
rclb
fs
push
jl
inc
dec
mov
jecxz
jbe
xchg
mov
jl
scas
jae
jmp
pushf
inc
daa
fsubl
jecxz
outsl
fwait
mov
in
cmpsb
sub
jecxz
jno
and
xlat
add
dec
or
cmp
sbb
jge
sub
scas
cwtl
das
lds
push
cmpl
jno
sbb
push
mov
xchg
mov
add
or
xor
mov
cmpsl
ljmp
lds
mov
xchg
inc
xor
pop
shlb
enter
int3
cmp
adc
nop
inc
repnz
mov
bound
fsts
mov
mov
jge
movsb
vmwrite
push
loope
sbb
arpl
cld
mov
sbb
cmc
and
sbb
push
mov
dec
out
add
and
lea
rolb
push
jmp
sub
ficoms
dec
fimull
mov
jo
or
mov
pop
sub
jo
jg
shll
scas
into
andb
sbb
xor
sbb
xor
xchg
aad
push
mov
das
add
cmp
jmp
imul
xor
xchg
ss
lods
sbb
enter
dec
or
jbe
mov
cmp
mov
jp
inc
test
insb
inc
je
into
mov
out
shll
jecxz
inc
sub
adcb
mov
jae
shlb
insb
mov
pop
mov
inc
sbb
shll
aas
sar
mov
xchg
in
ja
pop
mov
push
adc
inc
mov
cli
in
mov
fidivs
in
cmc
aas
xchg
fists
mov
jge
in
mov
pop
sbb
mov
sub
mov
adc
popf
sahf
xchg
decl
dec
cmp
push
movl
adc
outsl
ja
push
xchg
mov
xchg
adc
das
xchg
mov
and
shlb
mov
cmp
cmp
addr16
imul
cld
mov
dec
rclb
and
rcrl
test
nop
pop
mov
xor
push
adc
cmp
test
pop
pop
cwtl
mov
fnstsw
out
and
ds
push
test
mov
inc
push
xchg
cwtl
mov
xchg
xchg
or
add
add
in
mov
push
into
cld
call
cs
or
mov
mov
jg
mov
ftst
repnz
sub
jae
dec
stc
and
ja
xchg
loop
rcrl
mov
mov
adc
sbb
pop
sbb
inc
push
jb
mov
repnz
and
mov
lret
inc
jge
or
xchg
jecxz
ret
arpl
and
adc
jbe
das
inc
mov
mov
sbb
add
subl
ss
clc
fisttpll
xchg
orb
sub
fcoml
iret
daa
push
mov
push
in
dec
xchg
in
xor
and
nop
insb
aam
inc
cmc
std
cmp
les
or
xor
pop
mov
pop
push
popa
jo,pt
and
ljmp
mov
pavgb
push
mov
in
mov
sbb
pop
jmp
insl
pop
adc
jecxz
inc
insb
cwtl
inc
mov
push
push
and
pop
cmpsb
xchg
push
and
cs
scas
lahf
push
fwait
mov
stos
add
xorb
aad
es
ficomps
insl
pusha
adc
cmp
into
scas
inc
sbb
dec
mov
dec
cmp
mul
jmp
push
fmuls
xchg
orb
daa
bound
jno
gs
movsb
jp
icebp
push
add
ss
inc
cmc
and
pop
xchg
pop
les
call
xor
mov
sub
mov
xor
loopne,pt
lods
add
mov
repz
aad
push
icebp
pop
js
jg
push
xlat
dec
inc
inc
and
add
ret
jns
jmp
in
in
push
leave
sub
and
and
mull
and
pop
sbb
inc
add
rol
pop
mov
dec
and
call
sub
or
dec
gs
push
fstpt
aas
dec
aad
mov
dec
or
lret
sbb
leave
pop
imul
fldt
mov
in
stos
ds
mov
subl
scas
adc
mov
shlb
es
ss
push
pop
sub
or
dec
shll
out
inc
stc
out
std
sub
addl
leave
les
cmpsb
xor
and
nop
and
call
lods
add
mov
mov
sbb
mov
insl
jmp
fldcw
test
xchg
mov
cmp
cmp
fstps
cmp
sub
mov
add
lock
cmpsl
sbb
jb
add
ficoms
mov
mov
inc
pslld
jl
sbb
mov
cmp
cld
xchg
icebp
fimuls
fnstsw
out
data16
push
push
and
cmp
xor
jmp
adc
xchg
nop
jl
les
test
mov
sub
sub
xor
xchg
rorl
xor
lds
push
add
xor
cmc
es
mov
mov
fldt
sub
mov
cwtl
sahf
into
daa
pusha
dec
sub
loopne
inc
and
jbe
pop
lock
and
lods
pop
sar
mov
push
or
cwtl
fists
sbb
aam
stos
lock
dec
push
push
pop
cs
xchg
fs
xor
add
fcomps
out
imul
mov
addr16
cli
aad
ljmp
push
push
jno
lea
iret
loope
push
pop
xchg
mov
jle
rcl
les
sbb
je
mov
jno
mov
hlt
out
aad
mov
xor
jg
xchg
movsl
aam
mov
mov
cld
call
inc
xchg
mov
pop
jnp
dec
and
aad
cld
ja
xor
sub
pop
pop
xchg
push
sbb
xchg
jle
lret
sarb
lahf
pop
jle
pop
jae
mov
sub
out
loopne
pop
jb
scas
xchg
sub
pop
push
mov
or
sbb
and
sarb
add
adc
popl
ror
jo
jo
je
clc
inc
les
enter
hlt
push
sub
in
pop
jne
and
mov
fwait
xchg
inc
addr16
es
sbb
dec
jmp
push
insb
in
jns
add
sahf
dec
stos
lret
xor
pop
test
mov
out
jns
sti
cmp
inc
dec
mov
xor
dec
mov
cmc
jecxz
sub
jp
cltd
in
and
fcmovnb
arpl
lahf
xor
lahf
lds
push
or
dec
mov
cli
fwait
leave
dec
mov
push
and
cmp
cwtl
cmp
mov
mov
stc
in
mov
rcrl
pop
bound
ret
jmp
push
lret
cmc
sub
fstpl
sub
fsubs
xlat
inc
repz
movsb
mov
sub
xor
dec
shll
jae
jl
aaa
push
cmp
leave
or
hlt
adc
addl
add
stos
cmp
gs
call
jne
xor
adc
pusha
lock
jnp
jne
add
xchg
push
int3
sbbl
iret
fcompl
aam
jnp
icebp
in
rorl
test
in
mov
sbb
ss
push
sub
push
call
xchg
loope
into
gs
or
call
jl
stos
outsl
add
xor
xor
mov
adc
mov
jns
lods
faddl
lahf
jae
mov
jle
jecxz
add
adc
aas
test
push
rorb
xor
or
cld
mov
test
dec
push
cmp
lock
std
sbb
in
inc
jg
xchg
int3
scas
cmp
mov
lods
lds
aaa
adc
pop
pusha
nop
dec
test
shrb
jae
mov
mov
adc
mov
inc
loopne
adc
mov
inc
das
add
jae
push
into
xorb
loop
leave
les
or
ficompl
and
lods
add
bnd
pop
lods
jmp
pop
lds
xchg
inc
mov
pop
dec
inc
mov
nop
sahf
rorl
push
add
mov
mov
fnstcw
shrb
jecxz
jno
jecxz
fwait
sbb
jmp
std
ret
mov
cltd
dec
and
int3
repnz
dec
fisubs
dec
outsb
sbb
fs
mov
xchg
ficoml
fwait
xlat
dec
xor
jmp
cmp
call
inc
aas
popa
mov
jbe
xchg
mov
insb
jmp
out
in
cmp
mov
aad
fs
add
insb
es
popa
enter
sub
movsb
ret
adc
sub
sti
lds
leave
sbb
add
inc
data16
lds
pop
xchg
out
icebp
popa
mov
clc
or
sub
mov
mov
xor
pop
jge
lret
mov
inc
push
adc
bound
pop
inc
or
out
cmc
pushf
js
push
dec
aaa
or
xchg
add
cmp
out
leave
jbe
ja
push
daa
inc
push
inc
add
stc
sbb
sbb
xchg
add
dec
sti
iret
xor
mov
fwait
inc
std
dec
mov
pop
pop
and
fidivrl
fs
fstpt
sbb
imul
inc
add
xchg
fdivrp
push
shrb
or
jnp
aad
lret
test
ljmp
int
jno
in
loope
stos
jg
push
loopne
ficomps
icebp
sub
outsb
iret
mov
mov
ss
int3
movsl
mov
nop
mov
loop
sbb
dec
rcll
push
lret
push
push
inc
mov
pop
inc
sti
inc
xchg
push
call
scas
and
inc
pop
pop
xchg
push
rclb
or
xchg
lahf
or
daa
call
mov
jns,pt
xor
mov
leave
pusha
loop
scas
or
ret
gs
shrb
dec
insb
popl
jne
das
rcll
rolb
pop
mov
lahf
push
inc
inc
and
mov
jp
aam
ficompl
pop
sub
jp
mov
fists
in
cmp
lcall
fucomi
mov
fnstenv
gs
xchg
loop
pop
fimuls
in
mov
out
je
jmp
cmpsl
shl
neg
or
ret
jmp
iret
dec
add
or
and
add
stos
nop
dec
stc
lret
js
arpl
jo
push
lcall
jg
push
loop
cmp
and
scas
push
xchg
dec
jg
data16
fcompl
mov
outsl
xor
mov
movsb
adc
sbb
pop
add
ss
and
sti
and
push
js
jnp
xchg
mov
rclb
xchg
ss
jne
jo
xchg
jo
out
push
cmp
push
and
popf
mov
call
insl
cltd
data16
sbb
lock
lea
push
cmp
int3
push
addr16
mov
fimull
jae
lds
mov
ljmp
sbb
xchg
and
enter
inc
mov
lahf
adc
stc
sbb
cli
aaa
mov
mov
cmp
js
hlt
cmpsb
jnp
mov
sub
popf
rcr
add
add
xchg
negb
out
jo
fldenv
jecxz
std
or
jge
test
mov
cmp
sub
js
inc
stc
movsl
cld
mov
lret
sbb
push
ficomps
iret
enter
add
stc
movsb
ss
jbe
mov
dec
mov
loop
mov
and
cmpsb
adc
add
imul
pop
adc
push
orb
adc
adc
pop
push
mov
pop
movsl
sbbb
arpl
cld
xchg
scas
pop
and
cmpsb
sub
enter
fisubrl
mov
ret
sub
adc
or
mov
aas
pop
bnd
ja
outsb
aam
inc
mov
mov
in
ret
mov
sti
orb
push
repz
in
or
mov
cmp
xchg
daa
mov
stos
inc
insb
out
xchg
ds
fldt
jno
cmp
cwtl
xchg
cmc
add
inc
cmp
mov
xchg
rcrl
in
shlb
cmp
push
test
jmp
push
sub
add
push
sbb
push
or
dec
sbb
adc
aaa
testl
or
fdivp
int
sbb
pop
in
and
jl
mov
sti
mov
test
cwtl
jns
mov
push
xchg
xor
dec
je
out
push
jno
xor
cmp
sub
adc
xor
adc
outsb
out
stos
fdivp
loop
dec
lods
pop
imull
rcr
in
ffree
adc
in
mov
das
push
jmp
mov
dec
lcall
xor
and
cmp
cld
sahf
mov
adc
cwtl
popfw
cmpb
stc
imul
fnsave
mov
xor
mov
es
xchg
iret
clc
cmc
repnz
bound
cmp
xchg
sbb
stos
sbb
je
cmc
xor
sbb
adc
mov
ret
mov
mov
push
mov
xor
push
inc
jg
adc
push
pop
sbb
lock
insb
sti
mov
call
lds
push
clc
leave
jb
jge
dec
cmp
in
mov
sarb
fbld
xchg
cld
test
cmp
and
outsb
dec
lock
xor
jnp
add
jbe
sbb
out
jnp
shl
xor
cmc
mov
mov
test
xchg
xchg
insb
push
fwait
cltd
dec
and
inc
aaa
cld
cmp
repnz
push
loopne
cltd
scas
pop
cmc
mov
mov
and
popf
pop
or
movl
cmp
int
push
sub
jge
outsb
adc
jne
out
aam
jecxz
push
movsl
sbb
jne
pop
add
popa
imul
lahf
mov
sbb
sub
push
add
mov
imul
fisttpll
lret
data16
out
add
inc
inc
xor
fcompl
pop
pop
jge
xchg
sbbb
add
jle
sti
mov
sbb
repz
call
nop
xor
jno
outsb
in
mov
int3
jnp
stos
lods
iret
mov
jp
adc
and
cmpsl
das
das
or
in
outsb
jbe
push
out
call
mov
sbb
add
adc
mov
call
mov
mov
andb
imul
push
mov
and
dec
out
js
fs
je
ret
mov
inc
in
add
gs
add
mov
imul
mov
fmul
cld
push
adc
adc
out
dec
jmp
mov
repz
xchg
inc
add
xchg
add
aad
dec
cli
lret
repz
mov
cmpsb
and
ja
inc
push
jb
mov
jnp
out
jae
push
mov
jecxz
popa
pop
cmp
inc
movsb
pop
int
mov
xchg
sbb
push
insl
mov
dec
adc
cmp
mov
mul
xchg
aas
push
lcall
sbb
loope
mov
stos
mov
arpl
int3
push
imul
outsl
mov
fnstcw
and
fst
fldl2t
pusha
pop
cmc
jnp
pop
ss
lds
push
adcb
inc
pop
pop
icebp
and
push
nop
push
or
xchg
lret
jb
mov
lret
cmp
ret
or
fwait
mov
add
xor
in
xchg
mov
lahf
cmp
cwtl
mov
sbbb
pop
lret
shrl
inc
xor
in
arpl
xchg
or
mov
aaa
in
jnp
lock
cmpsl
mov
jo
xchg
sub
cltd
adc
cmp
fadds
fisubs
popa
or
push
mov
lods
pop
int
cmp
rclb
sub
jg
ljmp
setge
cmp
mov
push
xchg
into
je
clc
jnp
test
add
imul
mov
lea
xchg
mov
push
jmp
in
in
rclb
push
pop
push
xchg
sub
leave
push
push
mov
out
push
cmp
in
leave
pop
sbb
jne
push
fstpl
daa
stc
mov
cwtl
push
sahf
push
out
aam
shlb
jmp
adc
idivl
jns
mov
clc
and
pop
loop
fs
and
pop
pop
and
int
loop
and
mov
xor
js
aam
imul
mov
loop
adc
hlt
lods
jno
fcompl
nop
xchg
xlat
outsl
mov
xor
icebp
iret
leave
fsts
out
jge
js
aas
imul
mov
dec
xchg
sub
mov
fs
aam
data16
fwait
xor
loope
iret
mov
insl
popa
mov
flds
mov
test
cmc
scas
jg
cli
fiadds
daa
or
inc
sub
mov
mov
sbb
or
sub
mov
xchg
jmp
mov
sbb
aaa
bound
ret
pushf
jge
jo
stos
sub
js
and
imul
or
cmp
mov
push
pop
jecxz
pop
push
jo
mov
insb
outsl
xor
jp
adc
cmc
jb
outsb
lahf
push
into
jecxz
jmp
mov
stos
xchg
scas
mov
xor
packssdw
popa
sbbl
cld
in
jb
mov
xchg
stos
fnsave
pop
mov
outsl
push
jg
lock
mov
imul
jl
out
test
popf
mov
lods
mov
adc
inc
and
mov
cli
fs
mov
popa
mov
xchg
and
adc
jg
lds
jle
inc
inc
mov
cld
out
rcrl
call
into
or
and
iret
or
nop
lds
xchg
aaa
cmpsb
mov
jecxz
mov
cli
jecxz
repnz
iret
pusha
cmpsl
pop
adc
lea
icebp
xchg
mov
mov
jp
cmp
lret
sbb
hlt
insb
sbb
mov
test
leave
lods
fidivl
push
fnstenv
fisubs
les
gs
mov
cpuid
cmp
mov
jg
dec
mov
sub
lock
fs
aas
ja
and
mov
scas
mov
push
and
sbb
xchg
dec
les
mov
and
mov
pop
sub
pop
icebp
mov
ret
movsl
rcrl
cmc
sti
sub
nop
lods
and
fadd
add
jae
repnz
rorb
xchg
rorb
test
adc
pop
ret
aas
adc
lods
ljmp
aaa
sbb
inc
insb
loopne
add
lods
jl
daa
lods
sahf
nop
ss
inc
jl
jns
in
cmp
scas
ss
dec
mov
or
shlb
pmulhuw
add
in
cmpsb
imul
dec
cs
sub
out
scas
push
fwait
mov
shlb
lock
incl
push
mov
icebp
mov
cmp
fstl
dec
aas
mov
mov
lret
sbb
dec
in
and
mov
push
clc
lock
mov
push
fldcw
pop
mov
repnz
bound
dec
out
test
mov
sbb
outsl
aam
aam
xor
mov
loope
stc
in
pop
popf
cli
les
and
inc
mov
jmp
sbb
ror
sub
add
pop
jmp
add
imul
fbstp
sbb
jbe
stc
push
ficoms
mov
cmp
add
jl
aaa
inc
rcrl
and
mov
inc
mov
sahf
xlat
push
cmp
icebp
mov
jno
inc
mov
shrl
out
iret
dec
stos
into
loope
cld
roll
dec
fidivrl
lret
ret
and
xlat
cmp
fisubrs
mov
sbb
lret
xorb
bound
outsl
and
lods
jecxz
sbb
mov
aaa
out
xor
sti
test
ret
fldcw
aad
rorb
or
push
or
aad
fisttpl
jno
inc
push
pop
xchg
or
mov
fcomp
cmp
push
cmpsl
out
jmp
outsb
cld
ret
ljmp
or
fs
popa
cld
mov
or
lahf
inc
and
ffree
fnstsw
cmp
xor
and
push
pop
out
outsb
sbb
lea
cmp
into
cmp
cmp
dec
daa
sbb
mov
in
mov
in
stos
cmp
mov
repz
out
mov
pop
shrl
mov
mov
xchg
lea
inc
ss
ss
outsb
daa
mov
imul
fsubrl
and
int
aas
add
mov
jle
or
in
out
dec
mov
int
xor
push
call
cmp
icebp
stc
cmp
cmp
mov
sbb
jnp
mov
out
or
and
cs
fcomp
ljmp
mov
icebp
or
push
orb
jns
dec
or
addr16
cmp
in
test
movsb
stos
adc
lahf
lret
xor
bound
nop
in
and
cwtl
dec
mov
inc
inc
repnz
sbb
or
mov
mov
push
cmp
jmp
test
add
movsb
sti
mov
cmp
dec
cmp
inc
loope
mov
shlb
into
pushf
insb
pusha
and
push
mov
imul
dec
out
in
stos
stos
cmp
mov
mov
sbb
imul
pushf
in
and
or
insb
push
xchg
xchg
adc
mov
ss
cmp
je
add
scas
xchg
ljmp
notb
jge
clc
test
scas
lahf
cmp
mov
rcrb
scas
out
mov
jae
mov
loope
mov
jb
pop
and
aad
stos
adc
jmp
xchg
cld
dec
pusha
cmp
mov
jb
adc
xchg
out
dec
clc
mov
mov
xor
std
rcr
dec
in
sbb
sahf
shl
movsb
popf
or
xchg
xor
movsb
inc
les
and
cmpl
jge
push
jae
add
or
icebp
sub
mov
dec
test
imul
out
inc
and
loope
mov
xchg
sub
xchg
ja
adc
ja
pusha
xchg
mov
or
rdmsr
xor
ficoms
test
push
es
add
push
dec
pop
lcall
movsb
out
mov
dec
push
mov
or
lcall
mov
stos
xor
addr16
inc
imul
pushf
pop
mov
shl
loopne
adc
nop
fcomps
pop
cmp
lea
andl
mov
stos
ja
out
inc
daa
int
xchg
cmp
mov
mov
rcr
fisubrl
popf
push
and
out
outsl
pusha
stc
mov
je
or
fcmovbe
fs
mov
pop
test
inc
push
mov
sahf
mov
xlat
mov
daa
xchg
jb
mov
leave
xchg
fstpl
addr16
add
das
and
mov
sahf
or
sahf
cmc
mov
mov
into
mov
out
rcrl
stc
dec
lret
dec
jle
inc
inc
push
enter
fidivl
mov
jl
outsb
pop
add
cmp
or
mov
mov
ljmp
addr16
loope
out
jp
or
and
dec
inc
adc
pushf
jl
imul
fisubs
adcl
les
testb
lods
lret
cs
cmp
sub
scas
sti
push
std
mov
leave
gs
push
mov
idivb
or
add
or
xchg
or
sub
sti
ljmp
incb
stos
out
dec
iret
movsl
clc
ja
adc
jo
mov
xor
add
adc
xlat
in
or
xor
clc
jno
mov
in
insl
cs
sbb
or
fwait
or
add
in
lock
jle
imul
inc
xchg
jg
scas
ja
ret
and
dec
cltd
sub
iret
jnp
rcll
push
cmp
sub
or
sbb
adc
lahf
jle
es
inc
mov
jae
insb
rcrb
mov
pop
pop
add
roll
xorb
xchg
call
mov
adc
mov
xchg
outsb
mov
sbb
fsub
aad
adc
inc
adc
aas
les
push
insl
adc
mov
push
jmp
in
shl
mov
aam
ja
xchg
add
dec
jnp
or
ja
int
int
lret
hlt
popa
lcall
pop
clc
or
rcrl
fstl
in
dec
popa
lret
mov
stc
sahf
inc
fnsave
nopl
dec
sbb
dec
fsubrp
loope
dec
fstpl
adc
cs
dec
out
daa
or
lcall
fldenv
lea
mov
cmp
jl
mov
lea
push
ficompl
mov
inc
les
cmp
xor
add
stc
jo
dec
ret
loopne
adc
pop
mov
push
imul
mov
or
out
fstpt
call
sbb
jge
sbb
aaa
and
testl
mov
fwait
cmp
mov
mov
sbb
cli
sbb
jne
js
pop
and
push
mov
dec
cmpl
stc
push
and
test
mov
jecxz
ja
jnp
push
push
jle
das
test
jnp
mov
and
cmpsb
sub
fidivl
pop
out
jmp
movsl
test
popf
das
push
push
hlt
inc
out
cmp
add
stos
xor
ficomps
xchg
jp
dec
and
push
push
or
adc
mov
inc
adc
sbb
stos
pop
ret
sub
and
popa
lds
orb
xchg
outsl
push
push
dec
jbe
out
pop
mov
jbe
test
popf
xchg
scas
jae
jo
mov
jg
ret
and
das
add
push
es
and
add
imul
ljmp
mov
test
push
inc
xor
jl
dec
cmp
sbb
loop
in
mov
xchg
mov
ja
rcll
push
xor
inc
or
push
frstor
jp
add
mov
mov
outsl
inc
daa
pop
or
sub
nop
cmpsb
cmp
mov
mov
test
std
cmp
int
mov
jo
repz
jmp
cwtl
loopne
pop
pop
fldcw
sbb
jns
or
push
jp
jb
leave
or
push
cmp
xor
fbld
inc
mov
adcb
int3
mov
sti
xchg
cltd
jb
inc
js
lea
rcll
rcl
popf
movsb
sahf
rclb
lods
push
mov
dec
sahf
jmp
shrl
rorb
xchg
bound
jbe
scas
inc
jns
dec
jnp
xchg
ret
push
inc
pop
xchg
xchg
out
jge
popa
jmp
mov
aas
push
cwtl
lods
fldt
mov
or
jae
jmp
shrb
add
add
mov
mov
sbb
scas
cmp
rcl
jbe
and
mov
fsubrl
mov
xor
popa
xchg
pop
sub
mov
sub
lods
xchg
and
jmp
es
and
ret
push
out
pusha
movsb
out
and
loop
mov
xor
pushf
push
mov
outsl
fcmovne
es
in
mov
xor
inc
leave
mov
push
push
pop
and
add
nop
sub
mov
out
aas
jl
mov
lret
ja
mov
lds
aas
mov
aaa
cld
mov
and
or
mov
dec
lea
mov
int
inc
mov
push
sbb
loopne
lods
mov
cs
leave
stc
jbe
stos
inc
jb
push
push
mov
out
repnz
push
leave
pop
pop
ret
dec
repnz
lods
dec
push
sub
imul
sahf
mov
lds
js
xchg
and
xchg
in
dec
xor
adc
mov
loop
iret
mov
push
push
mov
dec
pop
pop
les
add
mov
pop
repz
in
pop
hlt
mov
mov
flds
es
ss
repz
inc
xchg
cs
scas
jl
jae
pop
shrb
adc
pusha
push
es
inc
sahf
mov
div
jns
mov
lahf
mov
xchg
add
push
xor
jne
clc
push
out
jmp
cmp
out
scas
das
xchg
daa
outsl
add
push
pop
mov
sbb
push
or
and
repnz
push
jl
mov
sbb
sti
test
pop
movsl
out
mov
sub
push
jnp
lock
push
cmp
push
enter
pop
popf
aam
shll
mov
idiv
add
push
pop
inc
xchg
add
cmp
lcall
dec
dec
loope
data16
cltd
ss
popf
push
in
aas
adcb
loope
mov
add
imul
sbb
inc
xor
mov
rcll
in
push
cmpsl
mov
je
fnstcw
inc
inc
movl
ret
orl
sub
mov
es
sbb
jbe
pop
mov
repnz
xlat
repnz
push
mov
lret
dec
push
add
mov
sub
mov
int
xor
ljmp
jmp
mov
xchg
cmp
or
cmp
lock
cs
adc
movsb
add
push
mov
stc
cs
flds
imul
push
push
fldcw
in
push
dec
xor
fnsave
adc
int3
les
add
shll
jbe
aad
pop
lcall
xor
xor
cmp
sbb
pop
inc
mov
lea
call
scas
pop
sahf
fstp
mov
movzwl
imul
imul
mov
das
pop
mov
mov
mov
sub
xchg
mov
les
fs
in
jle
xchg
aam
mov
repz
cmc
popf
mov
and
push
xchg
cmp
stc
push
cmp
in
shlb
mov
test
add
aad
shrb
rcll
cmp
xchg
rclb
sbb
je
out
mov
roll
pop
dec
in
test
push
andnps
cmp
std
push
sbbl
or
test
sbb
aam
xor
mov
aaa
mov
popa
adcl
inc
push
cmpsb
push
mov
adc
insb
push
or
mov
push
rcll
faddl
push
testb
ficoml
push
fldt
pop
test
int3
stos
dec
insb
lods
out
shlb
mov
jl
lds
xor
jl
aaa
xrelease
xchg
xchg
mov
outsb
sbb
cld
les
rcrl
aam
and
ja
cwtl
mov
jge
add
push
jne
mov
adc
dec
loop
add
xchg
aas
mov
sub
push
lods
arpl
shll
arpl
popf
shrb
xchg
test
insl
pop
or
push
xchg
call
mov
sti
pop
out
jae
int
xchg
test
nop
rcrb
dec
fcmovbe
jae
cmp
out
call
push
out
pop
inc
imulb
adc
pushf
cli
orb
cmpsb
push
arpl
jne
pop
jmp
xor
ret
imul
sub
ja
inc
mov
hlt
mov
xchg
dec
cmp
dec
sub
mov
std
cli
mov
arpl
in
mov
cmp
inc
aam
rcr
pop
sub
ds
lcall
scas
and
ja
popa
mov
outsb
pusha
aad
pop
xlat
mov
inc
pusha
xor
jno
xlat
movsl
icebp
xlat
out
jge
sub
aad
xchg
mov
scas
mov
mov
push
cmp
popf
xor
push
stos
les
dec
pop
pop
and
shl
mov
flds
mov
push
mov
lds
xchg
test
loope
mov
arpl
insl
das
lret
xor
or
lret
mov
sub
sub
inc
popf
xor
cmpsl
mov
mov
cmpb
sti
jne
or
add
jmp
jno
xchg
adc
nop
cmp
sbb
idivb
mov
push
mov
icebp
jae
pcmpeqw
adcl
sti
push
fadd
lret
adc
stos
adc
jmp
aaa
fidivl
pop
bound
jmp
cmp
jle
addr16
fistpll
popa
mov
gs
iret
js
jg
inc
or
imul
and
push
pop
pusha
inc
sbb
bound
xchg
popa
sbb
inc
ss
cld
test
ljmp
lods
repnz
scas
sub
int3
pop
bound
lock
xchg
adcl
xchg
orl
ret
inc
sbb
mov
inc
jl
test
add
xchg
fcoml
out
test
stos
jnp
mov
mov
jno
mov
push
pop
cmp
movsl
or
sbb
xchg
sti
pusha
mov
mov
insl
cmc
fdivrs
in
rorb
ja
add
xchg
sbb
mov
pop
pop
jns
mov
lret
fdivrs
popa
out
push
rol
pop
jecxz
sub
icebp
or
sub
sbb
push
pop
pop
popf
xor
fs
subb
inc
insl
fcompl
int
push
sub
rcrb
inc
add
mov
jns
stos
in
mov
lahf
lret
cmpsb
test
lcall
js
jnp
scas
shrl
pop
fdivr
inc
inc
dec
mov
adc
stos
dec
rcll
outsl
loop
leave
int3
xor
xchg
and
adc
fs
mov
stos
adc
dec
sbb
xor
add
in
clc
push
jbe
dec
jp
mov
pop
jecxz
dec
mov
insb
jp
out
mov
ret
imul
jle
syscall
loope
scas
jb
aas
push
jecxz
loop
fildl
sub
jbe
jp
rolb
dec
clc
loope
and
ror
imul
divb
js
pop
es
adc
and
shlb
xor
jmp
pusha
xchg
sarb
or
xlat
js
mov
lret
push
and
aas
cmp
sahf
bound
mov
xor
loope
stos
ds
sbb
fdivrs
std
cmpsb
subb
fcoml
mov
ljmp
mov
cmp
mov
fcomps
icebp
nop
cli
sbb
push
jae
jb
pop
lock
mov
or
mov
sbb
mov
jp
mov
inc
imul
dec
loop
dec
imul
xor
xchg
outsb
mov
ljmp
xor
mov
push
and
dec
fnstsw
loopne
cmc
mov
movsl
call
fdivs
mov
scas
cs
mov
xchg
xchg
mov
dec
mov
pushf
les
imul
add
inc
push
cwtd
mov
aad
cld
aas
xor
insb
mov
dec
push
pop
add
or
subl
xor
mov
cmp
xchg
je
mov
sbb
and
dec
fidivrl
mov
negb
repnz
push
rol
shll
mov
jmp
adc
cmpsl
pop
xchg
popf
test
rclb
and
scas
push
xor
arpl
push
test
cltd
iret
sbb
mov
fnstsw
inc
jb
and
andl
sbb
inc
int3
movsb
sbbl
cmpsb
test
cmp
jno
aam
mov
fs
push
in
or
inc
les
mov
pop
inc
adc
outsl
jmp
cwtl
jne
mov
cs
cli
sub
pop
dec
fiaddl
sar
popf
and
and
pushl
or
dec
mov
int3
test
in
icebp
call
cmp
shrl
mov
and
imul
mov
xor
mov
pop
fxch
dec
leave
pop
cmpsl
xchg
cmp
lods
imul
and
mov
movsb
mov
cmc
test
cli
push
mov
fimull
test
mov
scas
cwtl
mov
call
inc
jmp
test
test
cltd
xor
jb
mov
shrl
mov
add
scas
sbbl
stos
inc
cmp
pop
mov
cmc
inc
xchg
mov
dec
sbb
xchg
movsb
dec
dec
or
xchg
push
out
add
popf
stos
jo
xchg
and
jbe
cs
orl
ljmp
scas
and
leave
xorb
push
push
and
cld
pop
imul
pop
js
xchg
arpl
shrb
mov
movsb
xchg
xchg
subb
clc
jle
mov
sbb
inc
std
dec
ror
movq
test
xchg
push
push
push
pop
movsb
es
aam
cmp
or
xchg
shlb
popf
cmp
lds
push
or
loopne
or
xor
in
scas
and
adc
xor
mov
es
outsl
pusha
lret
out
loopne
and
inc
jbe
repz
push
std
lahf
mov
je
sbb
cwtl
mov
pop
testl
inc
jbe
or
or
lret
cwtl
add
inc
out
movsb
cltd
data16
adc
cld
or
popl
xor
push
adc
mov
pop
cmp
imul
insb
stos
lock
mov
pushf
rol
xchg
xchg
notl
sarb
repnz
std
ss
jb
std
and
out
insl
ret
in
aas
mul
lcall
cwtl
outsb
xchg
inc
xor
data16
mov
inc
out
popa
push
pop
or
push
imul
orb
sub
cmc
mov
xchg
out
cmc
mov
cmp
add
sub
pop
insb
enter
std
bound
mov
ret
jge
sbb
pop
icebp
das
daa
mov
mov
mov
sbb
xor
mov
adc
int
xor
push
popa
and
xor
dec
les
addb
add
mov
mov
pushf
xor
mov
mov
mov
add
int3
scas
ret
push
data16
fldcw
ljmp
sahf
pop
mov
add
mov
js
in
jmp
sti
aas
lret
and
popa
jns
pushf
movsb
xchg
hlt
int3
adc
insb
cwtl
test
mov
es
cmpsl
lea
mov
std
mov
andps
sbb
js
dec
mov
inc
test
pop
add
sarl
lods
faddp
clc
push
dec
out
and
push
movsl
movsl
pop
cmp
xchg
lods
add
push
inc
out
xchg
and
mov
loop
dec
inc
lcall
ja
and
loop
xchg
flds
fdivp
inc
cmp
sbb
push
inc
div
cltd
pop
stos
lcall
outsb
ror
shl
inc
outsl
cwtl
popf
movsl
in
loope
inc
inc
mov
mov
cmp
rol
orl
dec
repz
and
or
sub
les
das
mov
jle
xchg
xchg
scas
xchg
clc
movsb
cmpsl
lods
jne
std
and
pop
cmpsl
push
mov
mov
and
out
fwait
mul
stc
jne
jns
xor
daa
jno
lock
pop
or
test
mov
adc
pop
ljmp
repnz
sub
es
lods
jecxz
add
mov
mov
je
cmpsb
add
push
push
jmp
out
out
lcall
add
sub
insl
xor
push
jbe
pop
xchg
mov
icebp
fs
fdivs
and
lret
jnp
jns,pn
pop
cmp
sbb
nop
icebp
aaa
stos
mov
push
pusha
pop
and
jb,pt
xchg
leave
out
mov
fidivrl
xlat
push
sbb
scas
fsubrp
mov
sahf
jns
sahf
inc
jbe
inc
xchg
cmp
pop
mov
jnp
insl
and
fists
adc
xchg
aam
push
mov
mov
adc
out
dec
cltd
aaa
outsl
and
pop
andl
scas
pop
lret
pop
xchg
out
inc
stos
adc
orl
fsts
dec
jg
push
sti
in
inc
sub
sub
gs
xor
fmuls
mov
pop
adc
mov
leave
pop
ret
cmp
inc
jo
pop
push
mov
mov
addr16
cmp
pushl
jnp
mov
addr16
icebp
lret
add
and
jg
mov
negb
in
pop
gs
sbb
ja
xchg
ljmp
xchg
outsl
test
and
jmp
loop
xchg
jae
sbb
inc
insl
dec
pop
arpl
dec
dec
int3
pop
mov
and
les
addr16
add
imul
inc
push
xchg
mov
jno
sbb
shll
in
jg
push
mov
xchg
pop
jmp
push
mov
stos
pop
push
adc
jle
push
jecxz
jg
mov
cmp
pusha
scas
cmpsb
stc
jb
clc
jae
lds
fdivrl
popf
loopne
pop
addr16
sub
adc
cwtl
lods
add
ss
les
sbb
sub
inc
pop
insl
jae
mov
sub
das
jne
dec
es
xlat
mov
cmp
sti
inc
cmp
int3
cli
int3
dec
push
push
cmpsl
mov
ds
push
push
cmp
icebp
shrb
cmp
adc
outsl
ja
jecxz
jmp
jmp
imul
repnz
lret
cmp
repz
cmpb
vmread
dec
frstor
lods
ficoml
test
hlt
mov
cmc
adc
adc
sbb
cwtl
sbbl
mov
daa
sbb
orl
test
clc
ficomps
clc
and
mov
cmp
jae
add
adc
push
stc
aaa
mov
sub
dec
rcrl
push
sarb
pushf
les
xchg
push
xor
std
dec
stos
xor
xchg
pop
test
push
cld
lock
push
pop
xor
push
jb
cmp
push
jmp
xor
mov
aas
out
cmp
rorb
mov
add
fdivs
divl
stos
adc
aas
xchg
mov
gs
sbb
jno
mov
aam
loope
mov
nop
adc
add
cli
outsb
or
xchg
int3
push
sub
orl
ss
lds
cmc
ljmp
dec
mov
lods
dec
pop
aam
scas
sbb
into
xchg
mov
cli
jne
pusha
mov
sub
in
aam
dec
inc
repnz
xor
inc
fwait
in
push
divps
push
movsb
jle
lods
sub
push
push
adc
xor
or
push
bound
fsubrl
aaa
jl,pt
add
sbb
dec
repnz
sbb
out
inc
rcrl
and
or
xchg
fwait
pop
dec
fs
loop
cmpsb
sub
stos
mov
xchg
rorl
xchg
lds
call
add
adc
pop
pop
inc
cwtl
xor
loopne
mov
sub
mov
pushf
stos
pushf
stos
jno
and
stc
je
scas
jl
inc
ret
ds
xor
stos
inc
xor
popf
lcall
sub
adc
adcb
es
sub
mov
pop
adc
inc
test
lock
pop
fsubrs
ret
pop
add
mov
in
sbb
test
mov
ret
mov
popa
movsb
shrl
jae
shrl
mov
stos
ss
sti
pop
ret
pop
mov
pop
xchg
lret
notl
fimuls
or
pusha
pop
out
mov
outsl
insl
sahf
scas
cmpsl
ret
fstpl
subb
je
or
xchg
popa
stos
jno
stos
sbbl
das
pushf
stc
sbb
mov
dec
push
inc
dec
lock
outsl
rorl
mov
test
xchg
outsb
mov
add
mov
pop
mov
xchg
push
mov
mov
es
and
outsl
inc
ljmp
pop
dec
sub
xchg
add
popa
insb
lods
stos
dec
cmp
int3
sbb
pop
sbb
xchg
scas
test
pop
divb
scas
aaa
movsb
loope
jp
xor
cmpsb
ret
push
out
pop
xchg
jecxz
pop
xchg
mov
ja
aas
cmpsl
add
jbe
sbb
sub
cmp
add
bound
test
or
xchg
icebp
lret
xor
sbb
scas
xor
fisubrl
outsl
push
scas
mov
cmc
repnz
push
testb
rcrl
mov
outsl
xchg
clc
or
mov
pop
push
psubd
push
ficoml
mov
test
xor
xlat
xchg
and
jo
out
pop
inc
fcompl
pop
ficompl
or
lcall
or
out
sbb
mov
pushf
out
xlat
stos
test
mov
pop
xchg
push
int
jp
loop
movsb
test
addb
fnstenv
dec
xchg
pusha
cmp
aaa
or
and
imul
fdivs
shrl
fidivrl
jmp
cmp
enter
xor
notb
jmp
inc
mov
or
bound
rcll
xchg
sti
bound
xchg
mov
es
mov
insl
iret
mov
mov
out
xor
lahf
sarl
add
pop
test
mov
into
mov
push
and
out
or
pushf
ror
jae
dec
adc
jns
es
xchg
ljmp
mov
test
mov
into
xchg
iret
xor
ds
fcomps
inc
lret
fistpl
jecxz
sub
loopne
or
mov
xor
mov
into
fsub
rcrl
pop
mov
pop
lahf
add
pop
fucomi
push
testl
call
sub
push
dec
stc
pop
sahf
jmp
inc
and
bsf
icebp
xchg
sbbb
sbb
adcb
sbb
and
mov
popf
mov
push
push
sub
jb
adc
jns
push
push
clc
ds
stc
daa
mov
stos
mov
mov
dec
cli
mov
mov
and
xchg
sub
out
push
adc
int
xchg
and
mov
sbb
lret
sbb
lret
push
sbb
and
mov
inc
outsb
rcrb
and
jne
mov
ja
xchg
cmpsb
and
adc
xchg
mov
add
pop
dec
pop
insb
fistl
insl
imul
pop
fisttpl
mov
test
popa
fdivrs
into
xor
jae
add
sbb
xor
pop
jbe
rolb
xchg
in
lds
mov
gs
mov
xchg
xchg
hlt
enter
jns
clc
jg
push
test
popa
jg
jae
jle
leave
aam
fdivrs
je
lcall
iret
bound
push
cmp
rolb
loop
pop
pushf
fmuls
imul
fisubs
dec
push
shlb
js
push
les
dec
nop
leave
adc
push
inc
jp
ja
dec
xchg
imul
pop
jg
repnz
and
pop
in
jbe
cs
jmp
cmp
xor
or
pop
nop
mov
int
stos
sti
inc
jl,pn
jae
stos
repz
mov
outsb
xchg
cmc
jae
rorb
mov
mov
fidivl
enter
jp
xor
lcall
dec
pop
inc
test
jl
out
lods
inc
das
jb
and
add
mov
mov
addr16
pop
jae
jecxz
jl
jb
pop
lds
sub
js
in
mov
push
stos
add
inc
cmp
cmpsl
xchg
ss
loope
cmp
pop
sti
aam
repnz
es
movsl
or
mov
cmpsl
incb
push
out
xchg
ljmp
ret
shrl
sub
and
sbb
push
rclb
int
pop
imul
dec
in
mov
lahf
cmpsl
and
mov
inc
mov
add
lret
mov
loop
rcl
fisubrs
ss
mov
fstp
les
fsubl
push
orl
or
add
repnz
scas
and
jge
push
mov
add
xor
call
je
mov
xchg
mov
std
addr16
mov
push
bound
mov
mov
xchg
call
inc
in
aas
shll
ja
outsl
dec
cli
outsl
xchg
popf
mov
mov
inc
dec
in
pop
clc
inc
cmp
mov
arpl
xchg
fs
or
xchg
sub
lods
test
push
cmp
das
jp
push
js
shlb
cmpsl
addb
mov
or
stos
incb
xchg
or
xchg
shlb
lret
xor
xchg
xor
std
or
dec
cmp
xchg
in
mov
insl
jae
jo
cmp
sar
mov
jmp
jae
xor
pop
rolb
test
push
mov
cli
fld
cltd
test
jo
mov
cmp
xchg
popa
fcmove
adc
mov
sub
lcall
sub
pop
dec
sub
pop
push
aas
jl
xchg
add
ljmp
ss
sub
mov
inc
sub
movsb
inc
outsl
or
orb
cltd
mov
nop
pushf
mov
jp
popa
mov
add
ret
test
pop
lea
insb
leave
push
iret
sti
cmp
inc
mov
sbb
mov
or
or
inc
aas
ret
jnp
outsl
aas
dec
gs
and
pop
push
stos
add
lods
pop
jbe
mov
jne
mov
push
dec
sbb
dec
adc
push
and
lods
pop
sbbl
pop
in
sub
jnp
popa
jg
jl
push
or
rcll
or
sub
cwtl
ss
pop
xor
jnp
in
pop
jo
sbb
incl
lahf
and
jl
mov
inc
sbb
or
mov
pop
cmp
xor
xlat
shl
inc
testl
mov
mov
jae
adc
gs
cmp
xor
into
or
loop
lea
ret
jmp
lods
testw
add
push
inc
mov
js
fisubs
xlat
test
lret
and
addr16
push
mov
lret
rorl
ss
cmpsb
xchg
ror
mov
mov
outsl
jecxz
fstpl
popf
sub
xor
xchg
sahf
jg
sarl
mov
int
mov
cmpsl
pop
lock
shlb
cmpsl
xchg
das
jbe
dec
dec
sti
push
sub
sbb
jmp
xchg
mov
xchg
imul
popf
pop
jnp
pop
push
sbb
mov
jecxz
sub
add
stos
adc
scas
repnz
push
push
lret
jne
inc
sub
xchg
popf
rolb
push
call
mov
cs
or
dec
daa
les
pop
xchg
hlt
clc
loope
mov
js
loop
jecxz
lahf
pusha
hlt
mov
cmp
dec
push
int3
push
rclb
mov
xchg
xchg
mov
mov
add
das
mov
jg
push
rol
outsl
push
icebp
int
xor
adc
xchg
lock
clc
sarb
sub
dec
out
sub
mov
sbb
adc
jp
mov
mov
jb
jle
and
xor
dec
decb
lea
and
mov
inc
sbb
mov
insl
xchg
pop
lret
mov
push
fs
or
pop
cmpsl
xchg
sbbb
arpl
fdivp
xchg
mov
and
ret
mov
ljmp
lea
divl
jno
inc
js
pop
stos
or
sub
pop
jnp
sub
sub
std
sbb
xor
loope
repnz
sti
bound
and
js
xchg
mov
daa
sub
jl
jns
lret
mov
dec
mov
pop
mov
jno
push
movsl
mov
push
sub
jl
les
call
lea
fwait
testl
cmp
ret
in
xchg
jns
inc
sarl
cmp
xchg
testb
mov
dec
dec
mov
sti
cmpsb
std
lods
rcl
ficoml
mov
push
adc
push
shlb
mov
inc
pushf
jno
add
adc
popa
mov
xor
loopne
cltd
mov
or
ja
pop
jno
dec
loope
hlt
xchg
decb
movsl
adc
mov
push
ss
and
ja
aad
sub
arpl
cmp
mov
cmp
arpl
ss
jg
pop
cs
push
jns
js
cmp
fyl2xp1
lock
ss
cmp
jmp
add
or
inc
cmpsb
div
dec
test
inc
xor
in
push
dec
cltd
mov
fistpll
test
or
shll
lret
adc
mov
push
adc
std
movsb
int
mov
popa
movsl
sbb
xchg
es
rorb
arpl
std
or
adc
test
xchg
push
out
jnp
outsl
or
push
scas
mov
mov
jo
into
test
bswap
mov
or
lahf
aaa
jne
cmc
lods
add
data16
mov
dec
insl
jno
push
test
lahf
lods
idivl
addb
stos
imul
cmp
dec
orb
mov
push
cmp
xchg
ret
and
xor
jecxz
sarb
aaa
adc
add
std
sbb
insl
cld
rcrl
repz
jmp
jne
xchg
gs
sbb
xchg
in
in
or
js
inc
mov
add
adc
pop
pushf
adc
dec
aas
pop
jne
jnp
lods
jns
nop
cli
into
adc
leave
test
sbb
adc
outsl
cmpsl
int
dec
xchg
xchg
mov
jecxz
sbb
push
mov
in
jmp
jle
ret
and
lret
cmpb
jmp
outsl
rcll
pop
jae
mov
mov
fidivrs
ljmp
ja
sub
dec
mov
jp
sahf
mov
popf
mov
sbb
jmp
adc
jl
vminps
pop
jecxz
fs
cs
xor
mov
mov
mov
pop
test
js
sub
aad
xor
mov
adc
pushf
jg
inc
inc
iret
ficoml
cmp
jnp
sub
mov
lods
fnstenv
mov
je
xor
lcall
jbe
mov
inc
fdiv
mov
lods
std
popa
mov
popa
and
test
jne
aas
leave
insb
jae
xchg
dec
inc
inc
in
cld
outsb
outsl
mov
fstpt
sbb
hlt
int
pop
add
outsb
inc
dec
jbe
fstpl
and
pop
xchg
xlat
js
adc
cmp
roll
add
jno
sub
add
mov
jge
imulb
push
lds
mov
pop
dec
pop
adc
cld
fdivr
cld
aas
das
fcoms
cli
xor
add
clc
insl
dec
sbb
push
scas
shl
xchg
imull
js
cmc
jns
add
inc
popa
cwtl
ror
fists
in
int3
push
sbb
addr16
loop
ficomps
jecxz
inc
jecxz
insl
cmpsl
and
mov
dec
pop
pop
shll
xchg
ret
js
add
cwtl
es
cmp
dec
sbb
xchg
loope
outsl
mov
je
ds
call
clc
jmp
stos
adc
xchg
ficoms
mov
add
in
stos
je
cltd
mov
fisubrl
lret
andb
mov
lock
mov
repnz
cmp
mov
jl
xlat
addr16
icebp
inc
jmp
xchg
sbb
push
jnp
pop
mov
xchg
or
xchg
xlat
sbb
pop
add
add
psubb
xlat
movsb
mov
push
mov
dec
sbb
dec
fists
in
test
out
sub
subb
gs
pop
and
mov
jle
dec
stos
cmp
ret
pmulhuw
ret
xchg
fcmove
push
test
insb
push
inc
add
pop
adc
mov
pop
pop
in
dec
jo
lds
popa
sub
cmpsb
mov
loopne
pop
out
mov
mov
fldt
mov
inc
xchg
rcrb
jae
pop
rclb
jp
int
lret
inc
aad
imul
xchg
mov
sub
dec
jbe
sub
cmc
xchg
es
loop
xor
jp
xchg
outsl
ss
xchg
scas
movsl
mov
cli
push
push
fsubr
ja
adc
out
and
jns
shl
in
jnp
mov
pop
lock
sub
andl
andl
jmp
lea
fs
push
jae
or
pushf
out
fnstenv
pusha
mov
fistpll
loope
mov
lcall
inc
push
lcall
mov
jmp
pop
mov
test
movsl
xlat
int
adc
or
je
add
dec
cld
mov
push
lret
sub
mov
sti
cli
jp
mov
in
xchg
mov
xchg
push
in
testb
arpl
in
xor
lret
fcomps
inc
ficoml
cmpsb
test
or
mov
popf
jge
sbb
aad
inc
out
rep
ret
or
pop
push
das
sub
test
daa
jmp
loop
sub
jb
xchg
into
dec
inc
adc
enter
lods
mov
es
mov
cmovbe
out
sub
dec
add
and
sub
mov
enter
mov
mov
cmpb
push
std
xcrypt-ecb
cmpsl
or
subb
sbb
mov
test
insl
fiadds
in
mov
lcall
outsb
test
arpl
repz
rcrb
mov
add
into
pop
jp
sbb
dec
inc
or
test
sbb
dec
fnsave
outsb
scas
and
cmp
fcompl
fsubp
outsb
clc
inc
cmp
mov
inc
xor
shll
pop
inc
nop
pop
mov
insb
cmp
sbb
hlt
jo
jp
sbb
hlt
shlb
fs
mov
lods
pop
and
mov
scas
push
or
xchg
mov
and
aad
jg
test
sub
mov
out
push
inc
outsb
aad
jb
mov
dec
pop
es
inc
jecxz
dec
sub
mov
mov
inc
push
andb
stc
imul
xor
mov
outsb
jns
les
dec
push
pop
iret
dec
lea
sarb
lcall
jmp
and
lock
push
and
lcall
orl
jmp
fcomps
add
cmp
pop
decl
ret
out
sbb
cmpb
fs
jmp
pop
jae
xchg
mov
lods
in
jle
dec
push
in
sub
mov
xor
push
pop
sub
push
sbb
push
xchg
cmp
sahf
inc
xchg
xchg
scas
inc
out
leave
jae
aam
add
movsb
orb
push
cltd
pop
lds
popf
cwtl
or
clc
xchg
adc
ret
test
outsb
inc
mov
mov
scas
es
ror
push
out
jl
mov
nop
lock
and
pop
pusha
ja
mov
push
add
mov
fstl
or
xchg
inc
shrl
rorl
mov
cld
sarb
xchg
popa
ds
ds
sub
mov
cmp
push
sbb
mov
hlt
sub
sbb
insl
or
mov
bound
mov
cwtl
rolb
inc
xor
pop
lret
faddp
inc
xor
test
xor
std
insl
or
mov
fildl
repz
xlat
and
mov
adc
jge
movsb
cli
xor
es
and
jb
hlt
xchg
sbb
addb
cwtl
mov
xor
testb
lods
lret
jne
add
mov
scas
push
test
adcl
inc
rsqrtps
sti
movsl
mov
outsb
aaa
pop
in
daa
mov
jnp
mov
repz
fisttpl
push
lret
jp
iret
sbb
lock
sbb
dec
xlat
mov
andb
and
imul
je
pop
push
ss
stos
jge
js
xor
jo
insl
xchg
lret
mov
arpl
xchg
ljmp
push
ljmp
aam
adcb
cltd
ret
lret
in
clc
nop
aad
fldt
mov
mov
movl
jmp
xchg
xlat
mov
inc
pusha
adc
leave
fistpll
lea
dec
lcall
xor
rclb
cli
add
mov
inc
inc
and
int3
ret
sub
into
sahf
push
mov
imul
in
add
adc
imul
or
and
mov
inc
in
add
jmp
push
aaa
aas
and
cli
testl
hlt
fwait
outsl
notl
js
js
lds
xchg
cmp
jns
xor
jle
mov
mov
or
inc
aas
jns
outsb
js
and
and
mov
inc
push
mov
add
jb
jmp
aad
out
es
test
ret
in
xchg
dec
aam
pop
in
add
out
rcll
repnz
pop
out
adc
fiaddl
arpl
push
mov
fcompl
into
and
cltd
dec
sub
push
and
imul
shlb
and
lods
push
xor
mov
or
jp
pop
loopne
lahf
rorb
xchg
fs
mov
push
out
and
aam
xor
and
or
loopne
sbb
cld
xor
out
jnp
pop
fwait
call
add
lods
ret
pushf
aad
popl
ds
xchg
xchg
push
sahf
nop
lret
out
js
or
stos
int
in
adcl
mov
pop
pminub
pusha
fsts
cmp
or
dec
pop
fsubrl
negl
adc
js
push
push
mov
pop
add
cmpsl
fsubp
and
ja
xorb
sbb
fmull
arpl
jecxz
out
fcmovnu
mov
testl
or
inc
int
dec
jl
test
inc
repnz
jno
scas
add
repnz
xchg
es
mov
jbe
sub
lock
lret
pop
jecxz
xchg
dec
xchg
pop
mov
pushf
sbb
jl
lods
and
mov
jge
sahf
in
xchg
xor
jl
add
push
mov
rcl
sti
aad
nop
mov
popa
ja
mov
dec
inc
cmp
inc
fs
push
and
inc
mov
data16
mov
stc
fdiv
add
xchg
xor
pop
ret
call
shr
push
les
out
fsubp
add
mov
sahf
data16
inc
fs
cmpsl
add
lods
xchg
and
int
xchg
jnp
lret
and
fs
mov
arpl
mov
stos
pop
inc
add
mov
test
mov
sbb
fisubrs
rol
push
jne
xchg
repz
jbe
push
cmc
inc
addl
sbb
add
lock
aaa
les
jne
or
mov
pop
leave
fisttpll
cmp
lret
int
jge
pusha
loopne
or
inc
jle
push
mov
jmp
hlt
data16
incl
fdivrl
adcl
adc
or
or
outsb
jmp
inc
fisttpll
adc
test
inc
iret
sub
sub
pushf
xchg
mov
and
pop
mov
imul
jg
repz
push
lods
mov
jp
jo
lcall
pusha
xchg
mov
cmpsb
jl
jge
aad
and
xor
xor
push
xchg
and
movsl
pusha
cmp
shll
stc
inc
cmp
xchg
enter
pushf
inc
cli
movsw
mov
cmp
sbb
cmp
add
ret
push
outsb
jbe
loop
rclb
lahf
pushf
mov
inc
xchg
jns
mov
loopne
lock
cld
flds
xor
outsl
xchg
mov
cmp
pop
in
mov
lock
stc
les
jae
pop
fstps
repz
push
fidivrl
or
lods
pop
je
pop
test
bnd
pop
dec
shlb
fdivr
imul
mov
das
adc
jnp
xlat
cmpsb
pop
mov
sahf
ljmp
inc
int3
jmp
sarb
sub
scas
pop
ja
add
ljmp
fldcw
les
testl
lock
into
jp
pushf
add
fsub
aam
pop
ljmp
popa
sub
mov
sbbl
cld
xchg
mov
jl
ljmp
jno
jns
pandn
imul
popf
mov
icebp
pop
and
mov
jg
ret
push
adc
call
insl
ds
mov
push
fstps
jecxz
icebp
filds
mov
int3
outsl
jp
adc
bound
sbb
lods
sarl
push
jle
fwait
mov
xor
xlat
repz
pop
testl
pop
mulb
fsubr
leave
std
mov
cmp
nop
lcall
adc
cs
nop
repnz
lea
in
cmc
jmp
mov
movsb
ret
and
sub
insb
mov
lock
insl
jbe
mov
stos
cmpb
sub
cmp
mov
fidivrs
lcall
sub
outsl
lods
add
call
push
xor
jno
loopne
mov
sub
insl
cmp
pop
hlt
mov
mov
gs
pop
rolb
mov
push
bound
popa
enter
sbb
int3
loope
adc
mov
fnstsw
in
jmp
inc
add
cmp
fs
mov
add
mov
cmp
or
call
cmp
dec
mov
mov
sub
sbb
push
nop
add
push
in
push
addb
xor
xor
movsb
cmp
or
shl
movsb
adc
repnz
push
push
sbb
sar
aad
lds
adc
jl
loop
mov
std
imul
fsubrl
ljmp
fldl
stos
mov
imul
rclb
js
stos
addr16
nop
sub
jmp
xchg
ja
out
xchg
clc
stc
or
je
stos
mov
sar
bnd
aad
in
cs
pop
ja
bnd
arpl
loopne
pop
test
mov
xor
rcr
adc
dec
fmuls
xchg
push
adc
shlb
aam
or
ss
jle
or
les
icebp
xor
out
cmp
inc
js
xchg
rorb
lods
call
mov
push
sbb
jns
ljmp
push
sti
out
fisttpll
clc
std
mov
mov
ss
or
mov
sahf
mov
dec
sbb
sub
push
push
mov
cli
jnp
xchg
jo
push
mov
xchg
fimuls
sti
sub
mov
loop
jne
pop
or
dec
clc
mov
lcall
inc
fbld
rclb
lret
and
mov
pop
or
pop
aad
int
xchg
loop
in
fdivrl
sahf
out
fsubl
or
pop
movaps
stos
into
lods
int3
pop
push
test
pop
icebp
frstor
pop
outsl
ss
adc
repnz
je
mov
xor
in
sbb
in
hlt
lea
ret
arpl
inc
pop
test
dec
loop
out
and
mov
mov
mov
and
jo
add
imul
xor
cli
insl
cwtl
mov
mov
imul
xchg
push
stos
adc
ret
inc
mov
pop
mov
cmp
and
adc
mov
inc
fsubl
popa
icebp
push
add
loope
addr16
shll
nop
pop
xchg
imul
push
test
ret
adc
pop
fcmovnbe
mov
pop
jno
push
push
mov
imul
mov
lahf
add
jno
incl
ret
mov
ds
enter
leave
and
dec
mov
ret
in
mov
inc
imul
push
jge
add
xor
into
arpl
int
mov
loope
push
sbb
push
ret
pop
dec
cli
xchg
ffree
mov
inc
adc
jno
adc
inc
mov
repz
std
sahf
les
lret
testl
xchg
ret
fwait
or
jae
ret
dec
sbb
mov
fsubl
pop
mov
dec
adc
cwtl
inc
inc
ds
dec
lcall
ss
icebp
xor
inc
and
sbb
mov
sbbl
adc
sarb
jo
std
sbb
leave
jl
jb
add
pop
fdiv
jbe
stos
ljmp
dec
xor
cltd
mov
das
enter
mov
scas
fisttpll
add
sti
sbb
mov
lods
movsb
mul
aam
xchg
lods
jmp
add
push
push
inc
test
dec
add
iret
mov
jge
loope
ljmp
pop
fbld
dec
sbb
andb
imul
in
mov
aaa
fnstenv
lcall
mov
outsl
jo
fs
data16
jmp
dec
and
mov
movsb
scas
mov
dec
cltd
call
out
scas
rcrb
sbb
xchg
push
hlt
adc
cs
into
shrb
push
orl
push
xchg
ret
enter
jmp
jae
rcrl
inc
out
jnp
js
xor
push
or
push
movsl
loopne
cltd
pop
jb
test
jp
jge
aas
and
add
mov
jle
jecxz
gs
daa
aad
sbb
in
jp
dec
icebp
dec
and
adc
cmc
aaa
mov
pop
ret
pop
pop
rclb
push
scas
jo
fildl
arpl
xor
jp
dec
mov
mov
jge
cld
popa
inc
mov
es
pop
call
pop
and
loopne
cltd
insl
bound
mov
sbb
das
push
push
push
scas
imul
icebp
adc
jno
pop
shrb
xchg
sub
and
sub
inc
jbe
inc
sbb
decl
adc
mov
jnp
ret
popa
push
pop
rcrl
gs
dec
ffree
cld
cmp
stc
mov
jge
pop
fsubl
sbbb
shl
sbb
or
test
sbb
out
icebp
imul
mov
xchg
pop
daa
jno
mov
aam
dec
mov
fmull
daa
xchg
imul
xchg
mov
xlat
orb
mov
cli
pop
sub
mov
inc
push
arpl
sbb
xchg
icebp
inc
cmp
jge
jle
dec
divb
add
out
adc
out
arpl
in
sbb
std
push
movsl
insl
leave
mov
flds
push
stc
hlt
sti
stos
sbb
mov
xchg
adc
sub
push
xchg
adc
or
xchg
aas
outsl
mov
and
iret
int3
inc
and
push
mov
rcl
add
mov
and
jnp
repz
into
cmp
mov
xchg
push
or
xchg
subl
dec
scas
xchg
pop
cwtl
mov
cmp
xor
addr16
add
mov
or
ret
mov
xchg
test
adc
xchg
cld
jno
fwait
xor
fwait
lods
inc
dec
aaa
adc
sbb
mov
push
ljmp
mov
adc
cmp
inc
insb
insw
aam
int3
in
outsb
sub
sti
roll
shr
sbb
xchg
lahf
sahf
clc
push
aas
xlat
sbb
daa
std
mov
xor
and
sub
or
in
lods
and
movsl
and
and
aad
in
sahf
xchg
xor
and
fmuls
shlb
addl
out
test
mov
lret
shl
mov
outsb
sub
push
fwait
popa
jbe
jl
mov
xchg
fcompl
pop
and
xchg
sahf
jg
xchg
pop
cli
or
sarl
xor
sbb
jb
in
push
lods
mov
flds
jnp
fistpl
vmwrite
sbb
pop
cli
movsb
cltd
lret
push
orb
fsub
push
icebp
out
test
in
les
jo
xor
and
sahf
or
cmc
mov
push
xchg
xor
mov
mov
pop
adc
cli
adc
sahf
sub
push
ja
cmp
ret
mov
inc
mov
dec
jp
add
enter
adc
aas
mov
jmp
fisttpll
jno
rcll
sub
push
aad
adc
push
shll
pop
ret
xacquire
xchg
mov
xchg
subl
repnz
push
mov
sbb
in
jb
lods
cli
or
xchg
and
repz
jecxz
aam
add
mov
dec
mov
mov
iret
aad
in
fnstsw
xchg
xchg
sbb
int3
loop
sub
negb
dec
mov
aaa
enter
int
jbe
xor
jle
mov
fld
in
push
or
add
fsts
xor
and
fwait
sub
andb
sub
sbb
imul
and
cs
jg
mov
out
and
in
ret
adc
or
jno
push
and
ret
mov
adc
sub
cvttps2pi
sahf
jmp
cmpsl
jnp
push
ret
pop
popa
xor
ds
sti
push
arpl
cmp
cmp
mov
cmp
mov
ja
dec
stc
test
int3
sbb
jns
aas
xchg
cld
push
jle
aas
sub
fmulp
dec
and
repnz
sbb
mov
dec
jp
lods
jp
lods
jno
cwtl
fldl
pop
push
inc
pop
adc
bound
cmpsl
into
dec
dec
test
rclb
dec
mov
pusha
add
lret
jle
mov
mov
ret
xchg
jo
mov
jnp
xor
pusha
call
fs
xor
mov
aad
sub
sahf
xchg
std
roll
popf
fwait
rorb
adc
out
push
pop
cli
xchg
mov
jecxz
addr16
pushf
nop
xchg
mov
fwait
add
xor
fwait
in
lcall
mov
scas
cmp
mov
pop
imull
mov
lods
fldl
xchg
je
jb
push
hlt
xor
xchg
xor
ret
mov
std
add
dec
movsb
shlb
test
iret
ret
lret
shl
cmp
push
rorb
popa
jp
pop
or
sub
ss
in
popf
insl
test
rol
loop
lcall
xchg
jg
cwtl
xchg
loope
or
ficoml
mov
mov
jp
xchg
cmp
xor
mov
add
in
sbb
xchg
sbb
gs
dec
daa
sbb
loope
mov
jns
adc
cmp
lds
add
adc
push
lahf
inc
fwait
pop
xchg
movb
add
add
and
rorb
in
gs
mov
in
xchg
testb
xor
adc
push
shrb
fiaddl
inc
out
push
mov
rclb
adc
jo
sub
in
pop
frstor
pop
mov
xchg
xorl
push
pop
xor
pushf
push
add
and
test
test
push
fdiv
xchg
mov
das
cmp
frstor
push
or
outsl
lods
sbb
repz
xchg
or
aam
sbb
xchg
cmp
aas
das
jbe
cmpsl
aaa
and
sbb
xor
dec
xor
xchg
xlat
dec
push
les
sbb
mov
hlt
stos
mov
fsubs
jmp
cmp
push
cs
movsl
stc
sub
add
arpl
jmp
inc
stos
adc
adc
roll
jl
pusha
mov
testb
fs
clc
lods
scas
cmc
xor
add
xchg
mov
push
repnz
adc
and
jp
es
xchg
or
out
sbb
insb
sub
fisubrs
arpl
cmp
lock
loope
lea
pop
movsl
push
out
add
cmp
jnp
sbb
sub
jmp
pop
mov
mov
sti
les
ss
and
fisttpl
sbbl
rclb
sub
in
ret
sbb
pop
xchg
xchg
mov
xchg
dec
aad
aas
rolb
jb
movsb
mov
dec
mov
idiv
shl
inc
outsb
loope
fwait
sbb
das
cld
aaa
mov
fsubs
mov
lret
and
inc
insl
and
enter
pop
xor
jne
add
xchg
lods
gs
adc
xchg
mov
in
shl
mov
fadds
inc
push
rep
cwtl
mov
jo
sub
jp
mov
dec
fistps
sbb
rolb
mov
mov
push
jo
in
jne
fsubl
xorl
out
jbe
inc
outsl
cmp
sbb
js
push
ljmp
call
push
test
pop
mov
out
test
mov
cltd
cmp
push
pop
xor
pusha
lds
xchg
out
jns
insl
sbb
fidivs
or
sbb
out
mov
sbb
push
xor
std
mov
mov
sbb
stos
aaa
out
imul
add
push
jl
lahf
adc
mov
pushf
inc
adc
loop
and
pop
jmp
inc
ret
nop
nop
sbb
lsl
xchg
out
mov
or
sbb
sbb
stos
and
or
inc
shrl
inc
mov
mov
add
pusha
imul
icebp
mov
cmpsl
sub
js
mov
notl
shlb
sbb
xlat
rorb
test
and
ja
dec
mov
imul
std
pushf
stc
xchg
pop
insb
or
mulb
js
mov
scas
mov
jbe
stos
mov
and
or
mov
idivb
arpl
or
out
test
movsl
fistl
test
fs
add
adc
jns
out
std
aad
mov
in
outsb
jecxz
sub
test
faddp
ficompl
shrb
jno
dec
int
or
add
in
movsb
push
insl
clc
fwait
div
hlt
pop
and
lods
inc
in
push
sbb
test
sbb
jb
ret
mov
inc
lea
je
xor
mov
sub
imul
sbb
push
adc
sahf
dec
out
pop
cmpsl
lret
ret
mov
cmpsl
sbb
iret
adc
test
pop
loopne
out
das
je
sti
orb
repz
aad
mov
xor
pop
ljmp
jo
ret
jp
repz
xchg
mov
mov
jle
pop
dec
cmp
stos
and
mov
push
movsl
nop
test
adc
mov
dec
aad
movsl
xor
enter
stos
incl
mov
addr16
cwtl
js
sub
fidivs
sti
push
gs
ret
ljmp
pop
ret
xchg
aas
shrl
xchg
in
jae
popa
sbb
cmp
inc
mov
xor
insl
mov
lahf
pop
inc
pop
xor
pop
test
imulb
ja
cmp
loope
xchg
into
jp
ds
jno
movsb
jae
lcall
pop
notb
popa
and
pop
mov
xchg
mov
mov
adc
cs
enter
push
add
mov
pop
ds
inc
or
cmp
inc
mov
movsb
mov
pusha
int
cmc
lahf
add
rol
fimull
fnstcw
repz
xor
and
in
add
arpl
mov
add
call
ljmp
lret
into
add
shll
add
and
pop
mov
lods
addr16
or
roll
mov
dec
idivb
inc
pop
cmpl
adc
cmpsb
cs
enter
mov
pop
sahf
and
lea
xchg
cli
je
mov
test
pop
popa
inc
test
inc
inc
dec
js
cmp
out
lcall
jecxz
scas
loope
out
mov
mov
cmp
sub
fistpll
popa
pop
icebp
testl
mov
push
cltd
outsl
xor
scas
dec
divb
xchg
jmp
insl
push
mov
ret
repnz
popa
test
and
pop
outsb
lods
sti
in
lods
into
push
xor
fwait
xlat
hlt
ljmp
sub
icebp
adc
fs
out
pusha
add
cmp
into
jo
jecxz
ret
xchg
xlat
cmp
aad
adc
xor
mov
mov
ss
into
std
inc
arpl
arpl
push
fistps
xor
inc
inc
outsl
ds
hlt
push
sbb
andl
loope
sub
inc
insl
mov
shr
inc
lcall
pop
push
pop
xchg
inc
out
mov
sti
sub
sub
add
je
jl
arpl
rcll
das
dec
xor
jae
popf
fstps
int3
mov
add
xchg
pushf
leave
scas
loop
push
fstpl
dec
xor
mov
or
gs
leave
dec
jl
fidivrs
xor
loopew
inc
jmp
xchg
in
pop
pop
fcomps
sub
xor
pop
cmpsl
popf
pop
mulb
jle
call
sbb
cli
or
dec
int
inc
stc
jb
push
and
outsb
push
xor
dec
inc
lods
je
popa
inc
fbstp
repz
xor
into
inc
xor
pop
ret
xor
mov
imul
cmpsb
test
jp
push
jmp
jne
adc
fsts
and
cmpsb
aas
mov
cmpsb
stc
jg
adcb
roll
dec
les
out
xchg
out
jmp
fldenv
imul
inc
repz
aad
adc
push
mov
and
dec
mov
mov
ficoms
and
pop
in
xchg
sub
jle
dec
mov
sbb
add
int3
in
add
pusha
xchg
std
or
lret
scas
pop
icebp
inc
decb
imul
pop
iret
dec
shr
fisubrl
test
in
loopne
fbstp
leave
out
or
cmpb
jl
rorl
pushf
push
in
push
or
sbb
cmpsb
dec
out
out
jns
pop
jnp
push
mov
adcl
jle
and
or
daa
ret
ljmp
pusha
jg
in
mov
pop
je
xchg
pop
popl
lds
sti
negb
cs
push
add
out
mov
mov
sahf
iret
cli
xchg
outsb
out
sahf
inc
and
aam
mov
out
pop
and
push
jae
shrl
xlat
adc
call
fidivs
out
sub
cwtl
leave
cmp
or
jmp
mov
dec
push
jb
push
xchg
xchg
sahf
pop
pop
adc
mov
cwtl
xchg
movsb
out
cmp
mov
xchg
out
inc
notb
and
rcrl
js
rorl
push
stc
or
pusha
rolb
mov
pop
fs
int
das
mov
jb
fsub
std
ljmp
arpl
gs
adc
and
aad
adc
sbb
push
jecxz
div
xchg
jns
inc
push
imulb
hlt
cld
jp
xor
push
out
lock
and
dec
cltd
sbb
adc
scas
inc
cld
stc
adc
insl
icebp
jg
sbb
insl
nop
adc
rol
mov
scas
inc
lods
xchg
add
bnd
push
cmpsl
icebp
push
or
inc
cmpsb
push
out
jp
sarb
inc
je
cli
aam
bound
xchg
sahf
xlat
cmp
rcl
loope
mov
cli
fstl
iret
cmc
cld
mov
dec
lcall
fdivrs
lcall
stos
push
test
xchg
jae
mov
fnstenv
mov
xorb
push
shlb
xchg
popf
bnd
lcall
sub
sbb
aam
stos
out
aas
mov
lods
and
and
aam
mov
add
pop
inc
repz
pop
jae
imul
adc
cmp
rolb
in
insb
out
movsb
xchg
xlat
push
arpl
leave
ret
gs
cmc
int
test
cs
insb
dec
mov
leave
pop
stc
adc
inc
in
popf
lret
int
data16
and
mov
push
dec
shll
outsl
gs
inc
ja
push
out
mov
jg
loop
into
dec
xor
add
cmc
jg
jae
jmp
lock
into
xchg
inc
add
stos
pop
ljmp
mov
mov
out
cltd
inc
aas
rcll
aas
mov
lods
mov
cmp
cwtl
mov
mov
je
lret
data16
aad
std
mov
mov
cmp
sub
cmp
mov
idivl
sbb
imul
ja
aaa
or
cld
xchg
jg
lcall
dec
xor
lret
addl
aas
cmc
sbb
dec
pop
cmp
es
sub
std
lret
into
mov
and
into
or
popf
imul
sbb
push
pusha
mov
stos
es
cmpsb
mov
xchg
les
xchg
cwtl
cmp
add
and
add
cmp
fisubs
enter
lahf
mov
mov
aam
add
jmp
lcall
lret
adc
mov
jae
mov
sub
push
mov
mov
xlat
aam
loopne
test
jnp
mov
sti
loopne
pop
mov
pop
mov
jg
rolb
mov
mov
inc
fstps
movsb
ljmp
xchg
xchg
cmp
das
aad
mov
lret
addb
scas
shlb
hlt
outsl
jno
popa
rorl
imul
ret
push
push
jnp
daa
in
push
out
loop
push
loopne
pop
fcoms
outsl
and
mov
push
jg
mov
call
loopne
push
mov
mov
scas
in
xchg
mov
das
out
fimuls
xor
cmp
jmp
dec
out
imul
pop
pop
jg
push
dec
insl
out
test
cmpsl
int
test
test
jo
fcom
inc
inc
jg
lret
int
adc
pop
pushf
ret
cld
jns
push
jl,pt
test
test
jmp
mov
dec
adc
imul
iret
adc
and
inc
or
scas
lret
inc
fmul
sbb
repnz
mov
xchg
fidivrs
add
adc
ds
and
sub
out
icebp
mov
or
add
cwtl
xor
dec
das
adc
cmp
lds
and
push
jl
dec
imul
or
mov
dec
leave
lret
mov
cmp
adc
out
mov
and
xchg
pop
mov
aaa
loopne
adc
pusha
xchg
mov
sub
push
mov
push
dec
lret
fiaddl
popl
pop
mov
pop
mov
and
pop
sbb
shlb
mov
adc
pop
cmp
stc
cmp
adc
fwait
push
push
or
ret
and
mov
push
jno
dec
cmpsl
inc
sub
cmovne
push
adc
xor
movsb
dec
jl
xor
mov
nop
add
pop
outsl
lahf
in
das
and
add
clc
lock
and
cmpsb
mov
push
pop
loop
push
enter
mov
ja
pusha
aas
pushf
in
sbb
dec
cmpsb
cmp
scas
pop
ret
out
bound
aas
xchg
xor
mov
fsubr
cmp
pop
lret
ret
imul
jge
and
push
gs
or
addr16
sub
or
imul
mov
stos
mov
add
sub
inc
imul
aaa
fadds
push
jne
jae
pop
lcall
insl
mov
and
cmp
out
insl
shrb
out
sub
xchg
in
pop
push
repz
mov
and
cli
mov
sbb
push
aas
pusha
cltd
imul
jl
bound
rorb
jl
sub
insl
clc
mov
lods
push
pushf
or
jg
cmp
addr16
and
mul
cwtl
jle
inc
movsl
or
pop
adc
dec
imul
jge
mov
adc
push
enter
ljmp
mov
int3
adc
or
xchg
icebp
cmp
test
stc
js
loope
adcl
cmp
sub
xchg
rolb
test
arpl
call
add
dec
mov
incb
mov
faddl
jno
in
mov
pop
cmp
pop
mov
outsb
test
mov
std
xor
or
sbb
sahf
in
adc
mov
pop
dec
adc
out
mov
mov
shrb
inc
push
mov
out
sysenter
movsl
lds
push
fucom
ret
lret
fisttpll
mov
jne
cmp
outsl
scas
xlat
loopne
cmpsb
cmp
push
rcrb
cmc
cmpsl
cmc
push
mov
sbb
sahf
lods
add
je
jae
push
out
mov
cld
insl
xchg
xchg
rcrl
and
push
cltd
movb
dec
repz
aad
dec
cld
xchg
orl
sbb
std
push
addr16
xor
cli
xchg
cwtl
pop
or
loop
dec
dec
ficompl
mov
jo
sbb
push
scas
daa
imul
sbb
push
pop
inc
mov
rcrb
pop
or
adc
jg
pop
inc
push
jl
pop
sub
lcall
or
xor
fs
sub
sbb
sbb
or
iret
idivl
iret
jae
and
popf
and
mov
sub
xchg
cmc
imul
sub
out
inc
shrl
icebp
fs
pop
int3
pop
fucomip
adc
jge
pop
mov
sbb
stc
fcoml
push
push
fistl
fmuls
push
mov
lret
lods
mov
push
cwtl
xchg
xlat
mov
cmp
imul
xchg
xlat
in
cmp
cs
into
mov
pusha
inc
lods
loop
pop
xlat
mov
dec
cmp
in
aam
out
out
movsl
cmp
adc
into
cmp
ljmp
out
shrb
mov
and
lcall
dec
jle
xchg
mov
leave
sub
inc
fcomip
rclb
xor
lods
sar
adc
xchg
mov
rcrb
pushf
push
testl
mov
or
lea
mov
test
fisubrl
insl
into
jbe
adc
out
mov
pop
mov
pop
in
xor
fsubrp
cmpsl
mov
or
mov
pop
mov
mov
pop
inc
mov
sub
jmp
ret
cmp
lret
adc
jle
mov
pop
adc
subb
jg
dec
xchg
sbb
jp
ja
sub
lcall
movsb
mov
xor
push
lret
xchg
outsb
cmp
mov
mov
icebp
adc
dec
dec
movsl
inc
nop
inc
mov
mov
lret
fidivrl
fs
aam
push
fs
fwait
adc
add
popf
jae
pop
push
les
dec
push
loop
push
adc
data16
daa
mov
gs
pop
cmpsb
stos
xor
cmpsl
cltd
fsts
out
add
xor
push
add
mov
lods
inc
cmp
pop
mov
test
sbb
adc
mov
push
mov
jl
cmp
sub
jg
cmp
or
cmpsl
dec
ss
jns
xor
sub
push
dec
shll
out
fwait
in
xor
xor
sub
push
lock
xchg
jne
testl
push
ret
in
fistl
sbb
test
nop
sub
xlat
insl
mov
mov
mov
mov
pushf
or
adc
xchg
inc
mov
push
aas
mov
scas
jno
lods
out
mov
test
nop
hlt
imul
xor
fcoms
mov
into
ss
cltd
mov
mov
add
inc
fldcw
jb
mov
push
or
mov
outsb
leave
lcall
add
jecxz
rcll
in
in
xchg
lock
cmp
ljmp
cmc
cmp
inc
pushf
mov
pop
xlat
iret
xor
imul
inc
outsl
int
movd
adc
fnstenv
pop
lock
push
jns
push
sub
push
das
xchg
sub
stc
insb
scas
push
or
clc
push
mov
cmp
fs
mov
dec
inc
pop
sbb
xchg
leave
inc
mov
pop
inc
or
pop
scas
das
js
call
add
cmp
leave
cmp
jecxz
les
cmp
jne
out
mov
mov
mov
cmp
dec
cli
mov
sbb
je
scas
jbe
mov
aaa
push
xlat
sub
xchg
ficoms
sbb
dec
hlt
stos
mov
mov
mov
push
sbb
fs
xchg
mov
and
add
cmp
fcmovnu
lcall
xorl
xchg
dec
ljmp
adc
xor
or
dec
dec
call
test
inc
jp
roll
in
or
jmp
in
jge
insb
fildl
jle
jo
xchg
les
push
test
and
mov
imul
xchg
and
push
movsl
dec
pop
dec
sub
loopne
mul
xchg
mov
mov
int3
int
mov
xlat
inc
enter
mov
mov
in
mov
and
fdivr
lcall
mov
dec
outsl
mov
iret
xchg
sub
stc
inc
loopne
jne
pop
fdivrs
adc
negb
pop
pop
push
out
adc
sarl
je
pop
pop
push
push
push
cmp
insb
out
cmp
jae
or
and
stos
xchg
xor
add
inc
fdivr
inc
mov
push
jnp
push
add
jae
popf
nop
push
fisubrs
arpl
xchg
fcoml
jns
cli
shlb
loopne
jns
orb
adc
and
mov
xor
mov
xchg
lock
dec
in
jb
jae
fnsave
sub
and
pop
out
mov
ljmp
xchg
add
pop
shl
test
addl
cmp
xchg
je
mov
mov
jnp
rdtsc
and
cmp
sub
xchg
mov
lcall
int
aad
cmp
sbb
push
mov
jbe
out
fcomps
negl
lret
mov
or
mov
pop
add
in
pop
daa
xchg
std
roll
cli
ret
and
insl
dec
iret
into
push
insl
push
push
ss
test
sbb
aas
inc
cs
xor
loopne
fistpll
js
xlat
pop
sahf
mov
stc
repnz
out
jbe
dec
hlt
jne
sub
adcl
push
loopne
daa
add
fcom
add
push
push
in
dec
mov
adc
adc
sbb
inc
pop
fwait
xchg
cltd
pop
test
cld
es
sub
adc
cmp
in
ja
push
jnp
stos
int
sbb
ficoms
sub
jnp
icebp
ret
stos
rolb
ret
sub
and
fs
movsb
ret
div
mov
push
enter
fs
fucomp
scas
and
adc
mov
cmp
pop
lcall
xchg
and
aaa
xor
mov
mov
psraw
add
mov
push
lret
es
add
xor
call
cltd
mov
inc
xor
inc
sbb
adc
idivb
daa
xor
push
mov
inc
call
pop
sti
xchg
adc
daa
pop
cmpsb
dec
fbld
popf
aas
sti
out
adc
adc
decb
popf
ja
cli
inc
scas
and
pop
rorb
aad
nop
aaa
mov
scas
ja
addr16
orb
addl
mov
xlat
mov
imul
lcall
cld
insb
shll
addl
inc
jns
push
call
pop
mov
add
xchg
out
dec
pop
addr16
sub
dec
mov
sbb
dec
outsl
mov
sti
inc
pop
add
mov
jb
jae
and
xor
sub
call
testb
psrld
ljmp
adc
imul
subl
dec
pop
inc
rcll
add
jns
or
mov
xchg
or
pushl
adc
stos
sub
clc
push
and
imul
leave
inc
mov
mov
scas
insl
sbb
jno
loope
sti
loop
ret
mov
call
jl
sbb
mov
test
jb
cs
stos
or
or
push
xchg
dec
dec
out
rorl
xchg
pop
sub
and
cli
loopne
jne
push
push
pop
stc
shll
rcl
inc
adc
xlat
cs
ret
mov
pop
out
mov
scas
sub
push
xchg
jg
je
shll
jl
push
jbe
jb
lods
cmp
mov
jecxz
add
int3
scas
cltd
and
loope
cmp
cmp
arpl
adc
lcall
xor
xchg
mov
cwtl
mov
movsl
mov
add
fldl2e
mov
jo
rorl
xchg
cmp
in
dec
mov
lret
push
lahf
rorl
push
repnz
std
inc
popa
lods
adc
lea
insb
lods
cmp
xchg
adc
mov
lahf
sub
pop
pop
mov
test
lahf
sub
jnp
jae
out
test
fbstp
movsb
ret
jp
mov
lcall
fdivrp
cmp
jge
and
push
into
xchg
sub
clc
mov
xor
lods
cltd
and
dec
or
add
and
sbb
sbb
xor
lds
and
push
cli
cltd
cmp
lea
dec
xchg
jbe
sub
out
lcall
loope
ljmp
jl
push
cmpsb
sbb
adc
sbb
xor
cs
popf
ret
mov
cmp
xor
shlb
lcall
sbb
push
adc
or
pop
add
or
fwait
pusha
fnstenv
sub
frstor
hlt
lcall
dec
push
imul
clc
cwtl
or
mov
std
das
insl
das
es
sbb
fsub
stc
jbe
pop
cli
pop
push
inc
sub
xchg
es
stos
jbe
push
scas
pop
sbb
cltd
dec
std
inc
sbbb
insl
rclb
inc
jge
lds
mov
adc
xor
mov
adc
mov
fstpl
adc
add
sub
aam
in
outsl
fsts
outsl
adc
jp
faddl
adc
pushf
xorb
add
test
rclb
sbb
mov
test
aad
mov
repnz
bound
movsb
lods
sub
inc
pusha
orl
mov
pop
push
gs
movsl
repnz
pop
aam
imul
mull
sbb
mov
mov
dec
mov
lea
sbb
test
cli
push
rcl
jno
rolb
dec
or
xchg
xor
cmp
daa
dec
pop
add
inc
js
dec
lret
push
jns
xchg
orl
mov
mov
shrl
cmp
adc
push
incl
cmp
push
push
push
inc
xor
rcrb
orl
dec
jle
in
jecxz
cmp
inc
xchg
lret
imul
insl
es
mov
arpl
sbb
pusha
test
mov
imul
dec
push
leave
rcrb
cmp
cmp
mov
ds
loopne
test
std
lods
out
jmp
fcmovne
imul
add
mov
rcrb
aam
das
add
add
add
lods
enter
in
adc
rcrl
lods
mov
sub
outsb
sbb
adc
pop
mov
scas
xor
sub
adc
int3
push
sti
cli
iret
in
inc
mov
clc
xchg
test
divl
cwtl
lcall
in
jge
push
enter
imul
pop
xchg
repnz
sub
dec
jp
add
js
imul
pop
in
jne
xor
aas
or
int
pop
sbb
lods
mov
cmp
jp
inc
out
lods
xchg
xchg
shr
mov
int
in
or
xchg
adc
add
enter
dec
mov
jg
jle
mov
es
jle
data16
adc
push
lcall
repz
mov
pusha
jae
xchg
inc
xchg
push
xor
out
je
ret
dec
pop
ret
push
lock
inc
sbb
icebp
or
xor
icebp
cmp
scas
adc
inc
jecxz
mov
jg
inc
pop
gs
pop
inc
jno
pop
push
mov
sbb
cmc
mov
mov
xor
mov
bound
into
sbbb
icebp
mov
bound
pop
movsb
rcll
jge
loop
popf
cmp
fidivrl
mov
stos
insl
mov
stos
pushf
subl
outsb
adc
out
and
dec
inc
idivb
iret
hlt
insb
mov
lds
inc
out
push
nop
mov
jne
nop
scas
sub
test
mov
int
mov
lret
addr16
out
call
int3
mov
andb
int
push
mov
pop
dec
pop
adc
jne
fistl
pop
arpl
xchg
addb
sbb
lds
leave
or
jl
add
jae
adc
jecxz
push
subb
sbb
xchg
cmpb
xchg
in
repnz
and
push
int
mov
mov
js
push
repz
sub
cmp
mov
cmp
ficompl
and
movsl
mov
pop
jg
mov
dec
shrl
in
lahf
mov
mov
mov
add
push
or
test
pop
nop
inc
sub
push
das
or
sbb
mov
js
push
gs
fwait
rcr
add
ja
mov
movsb
leave
xor
jae
jge
stc
or
pushf
mov
sub
add
mov
mov
jg
add
inc
xchg
jmp
mov
jno
xchg
ss
pop
addr16
inc
jne
dec
or
pop
cmpsb
sarl
jl
cmp
mov
insb
jnp
mov
jo
cmpsl
shlb
and
fcomps
push
clc
pop
lcall
fildl
cwtl
cli
adc
cmp
push
in
inc
pushf
xor
dec
jnp
rorl
xor
ret
cmp
mov
and
push
jns
subb
sbb
or
rcrb
sahf
or
fwait
pop
inc
pop
setp
xchg
sub
ljmp
rcl
mov
xor
inc
sub
inc
cld
enter
mov
int
ja
adc
jns
repz
dec
jo
jnp
push
cmpsl
and
cmp
repz
in
add
in
mov
push
daa
bt
test
ljmp
adc
fdivrs
mov
add
arpl
mov
les
push
dec
dec
hlt
push
add
inc
xor
rorb
push
pop
cwtl
into
lret
clc
stos
imul
fimull
sub
jne
or
inc
aas
mov
inc
sti
sti
mov
cwtl
and
xor
nop
ds
clc
sub
pshufw
dec
bound
test
fcmovnb
jb
pop
test
aaa
sub
inc
push
xor
dec
add
popf
dec
inc
ss
mov
lret
test
inc
push
out
aad
sbb
lret
bound
pop
or
cmp
out
test
popf
mov
je
sub
mov
ljmp
adc
adc
add
lahf
jl
ss
lock
push
fimuls
xchg
dec
add
or
out
in
sarl
xor
fcoml
out
int
mov
rorl
sarl
jge
add
xchg
or
maxps
inc
aad
dec
ret
adc
xor
test
iret
in
sbb
xor
fdivr
and
iret
xor
test
sub
mov
addr16
add
mov
movsb
dec
cli
mov
hlt
inc
fs
mov
arpl
iret
fldt
stos
cmp
inc
loop
push
in
mov
dec
in
xor
push
imul
mov
jmp
and
stc
lcall
jae
mov
xchg
adcb
xchg
testb
call
rcrl
mov
xchg
jno
push
scas
sub
sbb
xlat
sbbl
xor
stos
or
shl
sub
sub
dec
or
xchg
pop
sar
movl
push
mov
notl
ljmp
mov
cmpsb
pavgw
dec
push
cli
mov
mov
jecxz
mov
inc
cwtl
addb
popa
inc
iret
test
divb
cmpl
pop
xchg
push
out
dec
xchg
ja
data16
mov
aam
test
mov
cmpsl
and
inc
mov
addr16
push
xor
in
setg
movsb
sub
sbb
lea
push
or
int3
fisttpl
and
mov
adc
std
fsts
jmp
jae
sti
fnstenv
movsl
or
jo
and
adc
in
jmp
or
test
imul
vunpckhps
jle
data16
call
mov
pop
lcall
out
pop
jge,pn
jp
repz
pop
jne
inc
inc
aam
adc
xchg
cmp
jge
int3
leave
divb
outsb
stos
lods
or
adc
xchg
or
rclb
add
pop
je
je
or
lds
mov
je
dec
mov
mov
mov
ljmp
mov
mov
scas
cmpsb
jns
shlb
lret
and
add
movsb
scas
inc
lret
xrelease
and
and
or
cmp
andb
or
test
sub
aad
xchg
lret
jg
and
mov
pop
fsubp
arpl
inc
jne
mov
lods
stc
add
jecxz
mov
inc
xchg
dec
and
cmc
mov
mov
inc
inc
loopne
cmpsb
dec
inc
pop
scas
adc
cmp
scas
pop
mov
xchg
out
mov
bound
cmp
ljmp
test
dec
cs
mov
outsb
imul
test
adc
aam
outsl
adc
in
cli
jb
cld
dec
arpl
lea
pop
fucomi
mov
push
jnp
or
frstor
and
fcmovnbe
int3
mov
jp
cmc
jge
cmp
cmp
mov
fldt
jo
inc
pop
mov
pop
andl
bound
repz
addr16
hlt
jl
adc
leave
add
xor
jno
sub
sbb
push
jg
in
pop
mov
xor
inc
filds
push
mov
cld
sahf
and
jbe
inc
sbb
dec
mov
dec
pop
xor
dec
pop
mov
dec
xchg
inc
mov
fmull
pop
ficomps
dec
loop
rol
std
mov
mov
popa
add
aam
jmp
out
xchg
xlat
mov
mov
push
std
fyl2x
push
push
cmp
filds
cld
xchg
push
mov
sbbl
mov
cmp
jne
daa
or
cmp
outsl
je
inc
js
mov
mov
xchg
enter
xchg
and
ja
int3
add
shlb
sbb
js
popf
call
mov
out
add
mov
add
mov
test
inc
arpl
mov
scas
sub
jnp
shrb
scas
sub
fcompp
fisubrl
mov
mov
mov
cmpsl
cwtl
push
and
sbb
jl
mov
loopne
sbb
sub
cltd
movsb
je
daa
sub
pop
sbb
in
daa
out
pop
sar
jnp
cld
cmpl
mov
lret
mov
out
hlt
sarl
mov
jns
scas
cli
and
outsb
push
mov
and
or
nop
push
notl
lret
cvtdq2ps
mov
repz
jnp
xor
pop
xchg
mov
jb
lret
movsb
adc
call
inc
sbb
add
in
xchg
adc
out
int
add
adc
sahf
scas
jae
push
out
mov
mov
fldcw
or
mov
fmul
jle
inc
loope
pop
clc
shrl
dec
in
je
call
and
jmp
jns
mov
out
stos
aam
aad
inc
push
insl
aad
scas
push
cli
in
arpl
mov
fmuls
jge
add
mov
daa
lea
adc
sub
jne
jnp
mov
jns
inc
in
xchg
fs
sub
push
stc
jno
movsl
jns
mov
fldl
jbe
dec
pop
loop
and
stc
mov
jbe
and
arpl
mov
jle
and
mov
out
std
loopne
push
and
lcall
ds
mov
adc
mov
loop
fistps
out
cwtl
scas
xor
inc
fidivrl
push
jne
aam
andl
jnp
sub
testb
sbb
aas
xchg
xchg
inc
mov
test
inc
pop
pop
sub
mov
shl
mov
ret
sub
mov
sar
rcr
add
pop
out
or
jp,pn
xor
mov
pop
fcomps
add
or
push
movsb
out
bound
arpl
data16
insb
xor
aam
mov
ljmp
in
adc
clc
or
aam
add
dec
pop
mov
lcall
push
add
xchg
push
xchg
fwait
sahf
inc
js
nop
in
mov
divb
inc
xchg
rol
inc
js
mov
push
jg
into
and
xor
add
jb
outsb
movsb
xchg
pop
xchg
sahf
orb
xor
mov
rolb
push
movsb
movsl
sbb
sub
sti
out
sub
imul
inc
shl
sti
push
sbb
pushf
stc
stos
test
lret
inc
and
lret
inc
mov
sub
mov
rorb
std
adc
sub
sbb
roll
ss
gs
push
in
lcall
mov
pushf
dec
fsubs
mov
ja
adc
sbb
in
std
pop
mov
mov
or
mov
data16
add
imul
cld
or
and
sbb
lret
inc
mov
movsb
ss
in
cmp
mov
push
xchg
orl
mov
sbb
popf
add
mov
hlt
cmpsb
mov
repz
push
or
fistpl
and
inc
scas
inc
mov
enter
xchg
insb
ljmpw
into
jbe
shlb
inc
lods
pop
addr16
mov
mov
and
add
xor
dec
lods
daa
adc
icebp
popa
or
mov
mov
xor
fdivs
imul
pop
pop
insb
mov
bound
shlb
test
sub
je
xchg
mov
outsl
notl
jecxz
or
dec
popa
cmp
imulb
push
loopne
jecxz
mov
dec
pop
subb
ss
pop
add
cltd
jmp
ret
dec
mov
out
sbb
sub
xchg
pmullw
cltd
fcmovne
fisttps
adc
pop
fisubrs
roll
or
movhlps
in
mov
mov
sti
and
gs
sti
xor
inc
or
les
out
xor
lcall
xchg
mov
xor
loopne
adc
and
jp
or
gs
cmp
push
xchg
mov
mov
ja
int
jmp
out
cwtl
sub
sbb
xchg
adc
mov
std
movsl
sbb
out
inc
xchg
cmp
sub
icebp
mov
or
xchg
mov
jnp
jbe
addl
adc
js
sbb
rolb
popa
and
fabs
xchg
stos
cli
sbb
scas
xchg
xchg
pop
cmp
loopne
add
xchg
inc
pop
cltd
fldenv
vpandn
push
jp
cmp
pop
push
cmpsb
sbb
or
adc
ret
add
clc
frstor
cmc
mov
loope
mov
iret
fs
mov
ret
sbb
xchg
mov
aad
dec
data16
mov
repnz
mov
pop
das
dec
push
insb
std
cmp
cmp
cmp
adc
les
imul
test
rolb
pop
iret
fiadds
out
mov
and
cmp
das
negl
frstor
outsl
xor
dec
mov
ds
stos
rcr
lock
xor
push
inc
adc
pop
sub
dec
insl
ss
insl
cmp
movsl
jns
shrb
xlat
je
push
mov
pushf
fwait
inc
xchg
loopne
aas
push
sbb
shll
stos
out
pop
mov
cmpl
dec
add
testl
mov
das
insb
cmc
xchg
xchg
into
out
in
pop
es
and
sbb
cld
cmp
xor
jmp
cmp
daa
jbe
mov
leave
jae
cmc
pop
cwtl
dec
int
insl
jg
mov
sti
mov
bound
ret
ds
fwait
je
into
inc
inc
fnsave
lock
aas
pop
sbb
sbb
ret
dec
mov
mov
gs
push
divl
fs
bound
ret
sub
push
cmpsb
xchg
pop
rorl
fdivr
xor
ret
xor
and
imul
movb
xor
push
lds
pop
iret
or
lods
test
mov
push
jecxz
dec
fnstcw
adc
cmpsb
je
fisubrs
into
imul
ja
repnz
in
push
movsl
mov
mov
push
push
fcmovbe
jp
cwtl
xchg
mov
adc
push
dec
iret
sbbb
add
inc
xor
das
outsb
push
adc
icebp
out
or
sub
xor
movb
dec
sbb
push
push
loopne
xor
int
xchg
dec
shr
or
dec
xchg
jmp
cmp
cmp
xchg
xchg
hlt
xor
dec
xchg
testl
leave
movsb
mov
fs
enter
push
and
mov
adc
stos
dec
mov
pop
and
inc
outsl
pop
or
or
xchg
jb
add
add
push
lcall
dec
and
popf
lcall
cli
sub
push
mov
or
xlat
popa
xor
lcall
into
add
xchg
jnp
xor
inc
test
and
dec
push
jnp
pop
and
in
es
out
jecxz
ljmp
nop
test
inc
xor
or
adc
pop
pushf
fildll
push
sbb
out
pop
mov
cmp
shlb
dec
inc
push
test
lock
mov
xchg
jle
mov
dec
movsl
pop
cmp
or
in
sub
sahf
and
or
inc
movsb
sbb
jo
fwait
xchg
cltd
push
or
cli
cmpsl
dec
insl
xlat
inc
xor
fdivr
adc
or
pop
fcmovnb
jbe
psubusb
decl
nop
sub
push
sbb
mov
lods
mov
or
into
popa
mov
jns
jbe
daa
adc
dec
stc
in
pushf
in
xchg
outsl
cld
test
lcall
fisttps
jg
sti
rcll
pop
pop
jecxz
in
inc
in
sub
fldcw
repnz
xchg
in
pop
popa
fdiv
xor
in
outsl
ret
cmp
loope
pop
pop
cmpsl
mov
or
icebp
mov
jno
adc
mov
dec
xchg
arpl
xchg
mov
sub
dec
and
in
in
cmp
sarb
pop
push
in
pusha
ss
mov
sub
add
lcall
dec
pop
fwait
in
lods
jecxz
leave
xchg
cmp
mov
insb
stos
cmp
inc
push
cltd
xor
pop
into
loop
stos
and
icebp
inc
xor
aas
jae
fildll
pop
push
out
stos
into
or
divl
cld
cmp
lds
daa
cs
push
xor
aaa
mov
insb
pop
fsubrs
mov
adc
pop
neg
scas
sar
inc
popf
out
cmp
dec
dec
fistps
cmc
jp
pop
test
adc
fs
cmpsb
sub
sub
popf
outsb
sbb
inc
ficoml
push
les
sahf
out
push
or
addl
lret
or
aas
js
aam
sti
xchg
pop
xchg
xor
je
jno
xchg
dec
inc
int
and
cmp
scas
or
fs
mov
fstpt
iret
cmpsl
push
push
mov
fdivrl
mov
mov
fucomip
stos
inc
jecxz
pop
stc
mov
movsb
shlb
lcall
cmpsb
jnp
repnz
add
out
icebp
insl
jne
mov
cmp
aas
mov
pop
repnz
rolb
mov
lahf
adc
xor
ja
xchg
adc
movb
dec
insb
xor
mov
loopne
and
pop
repnz
insl
mov
cli
jbe
push
cmp
and
or
loope
mov
enter
bound
fwait
test
pop
push
inc
lcall
lock
push
in
outsl
lods
mov
cmp
nop
add
fcompl
jo
cmpsb
mov
fdivrs
mov
and
push
mov
repz
jno
sbb
jmp
lahf
cmp
ret
clc
sbbl
push
inc
add
arpl
xchg
fsubs
push
push
add
adc
sub
shlb
loopne
mov
mov
lods
stc
push
iret
xchg
pushf
test
jp
test
pop
xor
sbb
js
pop
adc
loop
pop
cmp
sub
popf
in
pop
push
adc
cmc
iret
pop
lcall
push
sahf
ffreep
and
push
call
dec
xchg
enter
stc
xor
movsb
int3
data16
cmp
mov
sti
push
roll
cmc
mov
push
orl
loop
dec
and
scas
push
or
ljmp
inc
push
xchg
adc
mov
jne
or
sbb
mov
sbb
loope
sub
push
mov
xchg
les
sub
xchg
sbb
cmp
mov
sub
and
icebp
stos
sub
idivb
in
dec
dec
loop
xor
add
mov
insb
lret
popa
imul
repnz
lret
cmpl
inc
dec
sti
jbe
sti
popf
loopne
cmpsb
pop
inc
fsubrl
jmp
dec
pop
ret
fimull
sbb
sbb
call
scas
or
mov
and
scas
cld
std
in
pop
cmpsb
sti
out
sbb
xor
or
imulb
push
xor
sub
clc
les
pop
divb
push
sub
mov
mov
imul
mov
fwait
jno
dec
push
enter
push
lock
popa
cmpsl
push
cs
jb
hlt
call
ds
add
mov
mov
sub
pop
outsl
icebp
loope
or
aas
dec
bnd
repnz
aaa
jmp
jge
inc
pop
pop
xlat
mov
sahf
jo
and
add
test
ret
inc
or
add
popf
push
ljmp
data16
push
add
or
std
jmp
xchg
jb
push
dec
jmp
rcr
xchg
aaa
jbe
dec
xlat
sahf
cmp
repnz
xor
imul
shrl
xchg
ss
iret
xor
nop
inc
or
xor
idivl
roll
xor
jge
sub
push
cmpsb
call
mov
movsb
out
int3
test
mov
xchg
mov
addl
stos
ja
mov
jle
cmc
pop
cmpsl
scas
dec
lea
dec
mov
dec
dec
lret
aad
cmp
adc
les
mov
lock
inc
mov
stos
xor
ljmp
lret
cmp
int3
jnp
into
sub
adc
icebp
inc
pop
pop
jecxz
inc
adc
outsb
push
inc
ds
sahf
inc
sub
nop
rorl
sub
ret
or
fsubrl
sarl
sub
jo
jp
rorl
cmc
jns
jb
loope
cmpb
std
testl
push
adc
sub
inc
jno
xchg
dec
sbb
jp
jnp
push
and
dec
jg
jb
imul
ja
adcb
ljmp
rcr
push
or
bound
ljmp
mov
xor
jns
mov
adc
jecxz
fs
pushf
int3
add
add
push
jb
jnp
stos
aad
sub
pop
subb
cmp
jne
push
pop
push
pushf
or
sti
dec
mov
arpl
das
jmp
in
sub
cmp
cmpsb
ficoml
push
rol
xchg
xchg
cmp
or
mov
adc
inc
add
pop
xor
mov
add
mov
fldcw
xor
nop
popl
xchg
adc
pop
sti
cmp
inc
xor
xchg
je
sbb
loop
je
call
test
mov
adc
xlat
sub
int3
mov
lret
sub
sub
mov
daa
ret
xchg
jmp
out
cmc
inc
cmp
push
xchg
les
das
xchg
cs
fadds
mov
pop
hlt
cmpsl
pusha
push
push
fmuls
xchg
sbb
fisttpl
shrb
arpl
nop
pop
outsl
imull
mov
jl
push
and
insb
imul
cmp
mov
jl
cmp
in
or
cmp
pop
sbb
pop
lods
shlb
test
test
loopne
pop
xchg
jno
sbb
lea
fdiv
sbb
loop
mov
or
cmp
fidivrs
or
aaa
aas
adc
or
test
lods
mov
nop
cltd
and
mov
push
sub
fisubl
js
xor
bound
inc
xchg
mov
jmp
mov
scas
lret
push
push
fcoml
dec
inc
rclb
xor
loope
cmpsl
lret
fadds
lret
notb
sbb
mov
lods
hlt
insb
imul
test
cmp
mov
outsb
ficoms
arpl
out
push
inc
or
inc
imul
adc
dec
cmp
mov
pop
daa
je
cmp
xlat
sbb
in
xchg
or
popf
lods
stc
add
fwait
add
push
scas
out
cmp
in
xor
pop
aam
xchg
mov
dec
ljmp
sub
adc
test
push
mov
call
jmp
sbb
ret
adc
cmc
jp
mov
inc
xchg
out
mov
insb
stc
push
pop
mov
push
sbb
daa
fcmovbe
jp
push
jne
push
or
mov
idivb
int3
ret
add
push
loopne
sub
nop
xchg
dec
push
sbb
bnd
in
out
add
pop
sbb
fdivs
fnstenv
dec
inc
negb
data16
in
cltd
mov
push
and
push
mov
sub
pop
jg
mov
lods
enter
dec
andb
loopne
clc
jbe
xor
mov
ficoms
inc
push
dec
lods
and
xchg
mov
out
shrl
js
sahf
popf
jp
mov
and
dec
lret
movsl
movsb
mov
mov
clc
cmp
lcall
add
pop
stos
xlat
jnp
and
mov
mov
cld
roll
mov
into
fidivs
inc
add
stc
ss
mov
xchg
roll
add
mov
pop
add
pop
rcll
leave
inc
dec
jg
xchg
dec
adc
add
mov
mov
daa
popa
push
mov
add
fistpl
and
in
dec
lret
xchg
jg
xor
and
shrb
sub
xor
mov
movsb
jno
dec
fldl2e
adc
lods
cmp
pop
push
push
inc
jae
add
mov
clc
imul
movsb
in
xchg
leave
push
in
cmp
fsts
fistpl
js
pop
mov
lcall
inc
into
decl
mov
sub
cmpb
push
iret
ret
js
inc
push
push
push
fcoml
aaa
in
dec
scas
cwtl
mov
int3
pop
das
gs
add
es
fsubr
xchg
cltd
xchg
and
popa
adc
jo
xor
xchg
icebp
mov
lea
ficoms
jle
sub
jp
inc
mov
jae
push
cmp
das
aam
lret
sub
xchg
ds
into
fscale
add
rcrl
lea
jae
jl
pop
or
ret
sub
xlat
mov
dec
xor
pushf
hlt
jno
pop
jg
test
icebp
lret
push
pop
stc
in
cmc
inc
mov
jmp
notl
in
sbbl
push
hlt
jnp
pop
mov
push
pop
mov
mov
sbb
es
cld
jbe
test
pop
outsl
cmpsl
dec
insb
xor
aad
pusha
iret
in
call
push
pusha
imulb
cmp
out
test
jo
inc
les
jmp
ja
fldenv
jb
outsl
push
inc
and
loop
push
mov
push
sub
dec
push
mov
shll
xchg
sbb
adc
int3
shrl
add
xor
adc
fwait
in
sub
mov
jnp
lods
xor
sbb
inc
enter
lods
jecxz
adc
fstl
or
pop
decb
aad
dec
fidivrs
sbb
or
fcoms
cmpsl
aaa
imul
jle
imul
adcb
sub
aaa
shlb
push
daa
iret
pop
sbb
stos
nop
cli
jns
or
cmp
sbb
mov
mov
sbbb
test
rorl
dec
jae
mov
loop
mov
xchg
cmp
imul
rorb
mov
arpl
pop
repz
into
push
pop
jae
push
dec
test
sbb
leave
and
out
pop
insl
out
mov
push
out
sub
xlat
out
mov
add
mov
jno
mov
cwtl
mov
lcall
cwtl
shrl
push
dec
dec
sub
adc
and
inc
out
jp
cltd
cmp
sub
inc
jl
push
roll
mov
cld
push
push
sub
or
ficompl
jg
int3
arpl
gs
out
and
mov
pop
lret
jecxz
or
icebp
lret
outsl
pop
enter
sbb
popa
pop
sub
push
ficoms
dec
jno
sub
in
js
push
jnp
jns
lret
add
adc
xor
inc
scas
ret
or
imul
pop
in
and
sbb
mov
push
xchg
bound
cltd
in
dec
sub
adc
xchg
cmp
sub
popa
xchg
out
ret
mov
add
fbstp
fistps
aad
or
jg
addb
and
mov
dec
push
ret
out
inc
mul
pop
pop
push
pop
push
aas
andl
cmpsl
jmp
ja
std
xchg
daa
pop
jle
out
sub
cltd
mov
pop
jg
int
jge
inc
cs
imul
out
xchg
andb
jle
sti
leave
xchg
ljmp
sbb
push
nop
data16
xlat
push
jb
test
push
loope
jo
fxch
jle
xchg
mov
fld
push
cltd
add
lock
adc
pop
xorl
in
int3
sarl
mov
loope
push
lret
mov
push
sbb
lahf
pusha
js
or
mov
adc
ljmp
sub
loop
xorb
ljmp
aam
mov
dec
sub
cmp
add
orl
push
out
js
push
cs
imul
inc
cmpsb
outsl
and
xorl
leave
iret
xchg
fcmovnbe
push
xor
fcoml
popf
sub
stc
sbb
ja
icebp
and
data16
test
inc
fimuls
bound
xor
sbb
aaa
adcb
xchg
xchg
mov
mov
mov
cli
repnz
xor
add
jae
lods
xchg
and
or
adc
cmpsb
mov
jns
cwtl
xchg
int
sahf
push
addr16
mov
call
nop
arpl
fwait
xchg
out
popf
or
sahf
data16
and
push
mov
movsl
lods
adc
out
lock
add
or
jb
fcomp
or
sbb
out
pop
add
xor
xchg
push
cmp
and
aam
jae
cld
mov
cmp
lahf
push
imul
push
lods
mov
test
mov
inc
mov
pop
sbb
repnz
xor
dec
mov
push
pop
mov
gs
mov
jb
jle
aas
adc
loope
jno
lret
add
call
add
test
loop
or
fwait
and
enter
lock
inc
loopne
xchg
loopne
jl
enter
inc
outsb
rcll
js
jnp
mov
paddusb
test
jne
jo
add
push
fnstsw
inc
nop
cmp
sahf
add
repz
ss
dec
repnz
or
add
adc
out
xlat
xlat
pop
and
cmc
add
fwait
test
bound
pop
xor
orb
insl
mov
xchg
loop
jnp
popf
lea
enter
arpl
sahf
xor
test
sbb
sub
jnp
mov
call
dec
popa
push
xlat
adc
jns
sub
mov
pop
test
dec
jo
mov
sbb
stc
jecxz
cmp
inc
inc
scas
dec
and
inc
jns
insl
adc
ds
jle
inc
outsb
ret
aaa
out
or
lds
xchg
outsb
out
jge
inc
movb
sub
sbb
call
push
leave
pusha
scas
jbe
adc
cmp
mov
repnz
jno
xchg
lret
into
into
nop
icebp
xlat
stos
jns
mov
outsl
mov
icebp
fcmovbe
ja
dec
or
pop
jae
pushf
sub
in
push
xor
fsts
shr
sub
fstps
cmc
aaa
scas
adc
stos
cmp
pop
out
fwait
ret
sbb
xchg
cmp
leave
pop
push
dec
cltd
cmp
push
fistl
leave
sub
mov
sbb
ja
shlb
sahf
movsb
push
cmp
js
cmc
push
fwait
cli
pop
jns
and
or
jnp
jns
movsl
lea
mov
in
push
and
or
mov
arpl
das
sbb
inc
addl
rcll
xchg
ja
mov
arpl
cltd
sbbl
ret
jp
push
sub
pop
jbe
mov
test
idivb
and
clc
lcall
movsb
inc
jmp
jb
hlt
cmp
push
daa
daa
xor
fiadds
mov
shl
outsb
dec
jae
pop
ret
nop
cwtl
imul
outsl
jp
mov
lods
popf
ss
push
add
mov
cmpsl
int
ret
cmp
pop
in
jnp
out
and
repz
icebp
repz
xchg
inc
xchg
gs
ficoml
jb
add
mov
xlat
lods
mov
aad
inc
xchg
adc
cmpsl
mov
je
xchg
cli
and
fucomp
jl
xchg
sbb
jne
test
ja
jns
jle
adc
repnz
mov
out
mov
jnp
pop
cmpl
mov
jge
or
xchg
std
aam
xorl
test
enter
das
dec
and
loopne
insb
popf
mov
mull
sbb
pop
out
lret
jg
insb
imul
jo
shrb
xchg
xchg
hlt
xchg
inc
addr16
inc
sbb
mull
call
sub
sub
lea
out
insl
aam
shll
xchg
clc
iret
mov
and
mov
sub
and
mov
in
mov
shr
add
fwait
movsb
test
arpl
xlat
xchg
enter
call
pop
cmp
lods
sahf
out
cld
push
sub
sub
pusha
outsb
or
sti
or
pop
dec
xchg
sbb
pop
xor
popa
inc
or
lods
mov
inc
or
mov
xchg
cmp
push
lcall
rol
mov
leave
dec
xor
movsb
push
inc
adc
cwtl
xor
aaa
mov
in
mov
mov
jg
ds
mov
cmpl
in
rcrb
lret
mov
loope
jmp
push
xchg
in
call
test
sbb
inc
adc
jge
inc
sahf
xor
inc
imul
cld
aas
icebp
faddl
xor
cmp
mov
inc
fildl
ret
inc
inc
inc
test
cmc
sahf
add
mov
cld
ljmp
into
inc
mov
sbb
jmp
adc
sub
lods
sbb
les
push
and
int
jg
xchg
cli
pop
dec
sub
and
movl
sbb
mov
repz
push
adc
out
mov
inc
push
xor
push
mov
cmp
mov
adc
and
insb
pusha
pop
data16
loop
adcb
mov
and
xchg
dec
fstl
dec
xor
xchg
pop
addr16
aam
cmp
test
and
cmpsb
dec
mov
sub
shl
into
xchg
dec
jnp
pop
pop
shrd
clc
lret
xor
test
mov
movsl
lock
jo
lret
cmp
and
mov
jmp
mov
fcoms
inc
xchg
push
shr
push
jmp
jecxz
mov
push
mov
push
jmp
sub
pop
addb
das
insb
pop
fldcw
arpl
adc
and
push
dec
outsl
adc
pop
add
ljmp
test
inc
mov
aaa
es
xor
fdivr
outsl
xchg
add
dec
pop
inc
mov
push
or
notl
loope
test
add
push
dec
popf
add
sbbl
mov
aas
xchg
dec
mov
loop
imull
pop
jno
xor
jp
or
repnz
mov
aaa
fidivs
in
cmp
cmc
test
repnz
push
insl
xor
cmp
je
test
xlat
idivl
or
imul
je
or
ret
cli
daa
imul
mov
add
aaa
out
sub
xchg
mov
imul
es
or
test
stos
ss
scas
stos
or
ss
cmp
push
mov
mov
je
ljmp
sbb
push
cltd
fstpl
xchg
cmp
sub
or
mov
or
mov
js
jbe
repnz
incl
das
dec
ffreep
or
cmp
andb
sahf
imul
aaa
idiv
cmp
dec
das
add
push
push
jl
push
xchg
stos
fisubl
std
pop
aam
pushf
sub
insl
jns
test
fs
xchg
pop
enter
out
add
mov
mov
enter
xchg
push
cmpsl
in
cmp
dec
sub
test
mov
jp
ror
cmpsb
dec
rdpkru
sbb
js
pop
mov
orb
scas
mov
dec
lcall
mov
repz
out
xor
lds
or
out
leave
stos
dec
adc
pop
outsb
mov
mov
inc
pop
adc
scas
stos
mov
cld
in
cwtl
das
int3
mov
addr16
inc
lcall
xchg
cld
adc
outsl
xchg
cmp
sub
js
xor
and
outsb
pop
add
mov
gs
xchg
jo
add
mov
mov
cli
pusha
xlat
push
xchg
mov
xor
xchg
xlat
or
lock
movsb
pop
dec
in
mov
jb
fidivl
out
lock
enter
xor
xor
push
fstpl
mov
cmp
mov
incl
pop
in
shrl
fisttps
addl
popa
insl
sahf
adc
jmp
gs
jg
pop
inc
xor
outsl
push
cmp
movsl
push
push
and
test
daa
push
jo
loop
rcr
push
lods
and
push
xor
cmc
lods
fidivl
inc
lret
or
adc
and
pop
mov
cld
outsb
inc
or
push
fs
lahf
or
xchg
fwait
mov
and
leave
lahf
dec
sub
sbb
loopne
iret
push
cwtl
xchg
je
push
add
xchg
ret
loopne
or
dec
mov
mov
jmp
out
jo
add
daa
adc
cli
xchg
and
int3
fbstp
xchg
push
dec
jbe
xor
rorl
fs
stc
mov
clc
icebp
jbe
outsl
mov
mov
rcrl
mov
push
lods
in
and
fdivrp
hlt
or
lock
sbb
jp
inc
mov
movsb
inc
bound
xchg
lds
ret
test
xlat
ljmp
mov
sub
pop
dec
or
mov
scas
mov
pop
dec
out
ljmp
out
ja
movsb
adc
cmp
insl
aaa
push
cmp
push
pop
fcmovnbe
std
or
aas
jge
push
icebp
lock
sbb
mov
push
xor
shrb
pusha
jg
xor
push
dec
jo
ret
pop
pop
pop
dec
lret
xorl
pop
shrb
fcmovu
ljmp
jmp
data16
jp
xor
je
std
in
inc
jmp
mov
int
mov
xor
pop
add
lahf
jo
or
dec
lret
xchg
ss
stos
mov
ret
mov
xor
jb
fists
jno
xchg
lock
fstl
xor
jbe,pn
lahf
bound
add
xchg
jne
stos
adc
push
jo
sbb
lods
push
xor
pop
jbe
cs
jnp
ret
push
ljmp
out
sbb
imul
lea
xchg
fincstp
cmp
cld
test
push
jmp
or
or
pop
out
lcall
push
mov
test
nop
jecxz
out
ja
ftst
add
jl
aas
or
imul
inc
and
mov
adcb
push
jmp
jbe
cld
leave
test
sbb
shlb
scas
stos
lcall
xor
jg
mov
ret
fnsave
mov
pop
add
aas
sahf
cmpsb
cmp
and
pop
sbb
fists
inc
cmp
ret
jbe
pop
fdivrl
push
cmp
rol
lds
adc
repnz
mov
add
enter
dec
enter
xchg
cmpsb
mov
outsl
sub
xlat
jmp
popf
jb
arpl
enter
push
das
sahf
call
mov
jmp
adc
lods
push
jle
fistps
push
mov
cmp
aas
push
fdivrl
ss
out
pop
mov
in
fs
mov
cmpb
bound
negb
jg
jmp
cmpsb
pop
adc
mov
mov
ficoms
fsts
es
pop
in
movsl
sbb
cmp
xchg
mov
imul
push
aam
dec
jb
dec
sbb
fbld
int3
push
adc
mov
nop
sbb
pop
dec
filds
cltd
aad
xor
jns
pop
fcomps
je
sub
mov
or
jno
outsl
xor
xor
les
inc
mov
aas
and
cld
ficoml
mov
pop
xchg
pusha
xchg
xchg
inc
insb
mov
int3
mov
pop
jl
scas
mov
or
stos
es
and
add
dec
dec
mov
dec
cmc
or
dec
xchg
scas
in
pop
and
lds
imul
arpl
sti
ret
repnz
notl
vhsubps
les
fisubrl
pop
icebp
inc
jle
fstp
mov
test
movsb
jne
mov
mov
sbb
mov
loopne
pop
and
je
cmp
out
xchg
shrl
scas
pop
fisttpl
imul
or
sahf
out
icebp
adc
mov
lea
push
add
fsubs
mov
push
push
aaa
mov
insl
fldl
lea
divl
sub
icebp
adc
addl
jno
hlt
shll
and
push
jbe
fists
in
mov
ja,pn
mov
ja
add
jl
xchg
shll
or
jp
mov
xchg
dec
ret
cli
sbb
es
push
in
imul
dec
test
jo
add
and
xchg
xor
lods
xlat
rorl
xor
inc
ret
test
jp
lods
adc
push
lock
xchg
out
mov
int3
push
loopne
xor
mov
stos
scas
sbb
jnp
lods
daa
shrb
jne
fdivr
sbb
sub
mov
xchg
mov
mov
xlat
xor
cli
mov
mov
jmp
dec
sub
add
loopne
fstpt
and
jmp
jle
inc
pop
bound
mov
cmp
ja
push
and
cs
imul
adc
xor
jb
cmp
popa
sarl
mov
xchg
jle
lea
in
or
icebp
inc
cmpsb
add
pop
test
push
fidivs
incb
decb
lds
pushf
inc
pop
pop
out
push
idivl
cmpsb
pop
pop
mov
xor
and
clc
add
scas
das
push
push
adc
sti
pop
add
cld
push
or
inc
aaa
add
inc
orb
hlt
out
xor
xchg
and
push
jle
divb
test
and
lods
sbb
repz
dec
dec
mov
shl
sub
in
in
sti
jbe
pop
jmp
popf
sub
xlat
and
fidivrl
mov
and
fimuls
jnp
stos
jb
insb
sub
cli
rcrl
leave
pop
inc
dec
mov
lock
aad
mov
dec
popa
lock
stos
vpcmpgtb
xchg
push
outsb
fidivs
sbb
mov
jmp
aad
sbb
and
pop
mov
and
add
int3
sbb
xchg
fwait
pop
roll
lods
mov
pop
cmp
adc
imulb
xor
mov
shl
enter
ljmp
out
adc
cmp
sbb
mov
in
sti
sub
dec
cmp
add
fldt
aaa
mov
add
addb
mov
fwait
pusha
loopne
movsl
pushf
popa
inc
pushf
xchg
sbb
inc
cmpsl
in
cld
leave
sarb
clc
xchg
cmp
frstor
jae
xlat
pop
pop
fcoml
xchg
pushf
outsb
inc
and
insl
push
fists
adc
andl
iret
adc
xor
xchg
mov
clc
dec
imul
cmp
jnp
sti
pop
xor
mov
cmp
dec
mov
lret
pop
fsubrl
add
insb
add
cmpsl
out
push
enter
mov
cmp
ret
enter
shrl
nop
lds
test
cmp
jae
bound
or
ret
and
pusha
xchg
das
sbb
dec
arpl
lcall
inc
jg
push
ret
jb
stos
xchg
inc
insb
add
jmp
lods
jne
jl
cwtl
and
or
add
mov
ja
push
sbb
jae
or
pop
or
and
repz
aas
fdiv
bound
js
shll
pop
imul
movswl
inc
mov
popa
jae
or
xlat
je
or
in
aas
in
fisttpll
mov
pop
nop
xchg
push
xchg
sarl
push
icebp
sahf
mov
cmc
std
pop
sar
jmp
mov
aam
xor
test
cmp
dec
sub
pop
scas
les
stc
lds
xor
sub
mov
int
mov
mov
loope
mov
mov
addl
jge
sub
mov
pop
sbb
jp
mov
loopne
fcompl
ljmp
sbb
fdivs
cmpsl
dec
jp
adc
lret
lea
rcrl
testl
jp
sbbl
shll
ficoms
cmp
mov
dec
mov
ja
scas
lcall
test
sub
and
in
jmp
movsb
xor
test
lds
fnsave
mov
dec
fidivrl
leave
out
sub
jle
jae
dec
addr16
and
outsl
cltd
shll
out
ret
adc
and
std
scas
mov
jb
xchg
push
fucomi
cld
xchg
ret
test
mov
push
je
inc
mov
push
je
mov
pushl
xor
aam
decl
pop
xor
cmp
mov
jg
sbb
in
aaa
push
cmp
fidivrs
mov
in
testb
out
lods
cmp
xor
add
push
add
or
lods
push
mov
jbe
das
push
movsb
mov
shl
xor
jge
jle
lret
xor
jno
imul
mov
jo
fadd
rcrb
xchg
xchg
jp
test
rcll
xor
jae
roll
cmp
pop
sarb
jmp
sub
xor
sub
mov
in
fimull
sbb
hlt
loope
lock
pop
dec
rorb
jp
jmp
out
xor
faddp
cltd
iret
hlt
js
dec
push
jecxz
ds
push
jecxz
stc
cli
int
shll
add
jp
jno
or
push
addr16
sbb
arpl
scas
lock
inc
mov
in
call
imul
lock
and
adc
adc
push
push
adc
loope
test
mov
loopne
lds
dec
fildl
jg
test
sbb
sub
mov
sbb
sbb
popa
nop
add
pop
sbb
fisttps
lods
mov
dec
or
jns
jmp
push
mov
addr16
mov
pop
fldt
mov
pop
dec
fld1
dec
lea
lods
call
inc
jnp
mov
mov
mov
pop
ds
mov
ljmp
out
mov
adcb
pop
pushf
push
push
cli
and
imul
sbb
mov
daa
add
movsb
sbb
xor
aad
repnz
dec
push
fwait
ret
loope
les
mov
pop
sub
pop
cmc
cwtl
mov
push
dec
and
lock
paddd
fwait
int
mov
inc
pop
jo
ret
jo
mov
loop
sbb
movsl
sbb
xor
xchg
or
je
sarb
imul
inc
mov
sub
out
ja
cmpsl
or
sbb
sbb
fdivl
or
mov
mov
and
and
call
pop
mov
push
ljmp
cmpsb
frstor
inc
sbb
and
push
ljmp
mov
xor
lods
stc
hlt
fbstp
pushl
lcall
sbb
pop
add
sub
mov
negb
les
cmp
mov
in
jns
jmp
dec
inc
or
lds
cmp
aam
jae
test
fdivrp
scas
jb
or
popf
cs
sub
push
jns
push
fstpl
and
push
imul
ds
mov
cmp
scas
scas
sbb
arpl
loope
or
mov
mov
ds
jl
shrl
pop
pop
xchg
jp
aam
push
repz
xchg
adc
mov
or
into
fldcw
or
sbb
mov
je
call
mov
cmp
pop
iret
xor
int3
mov
push
push
lahf
jge
pop
aaa
into
fdivrs
cmp
cwtl
test
mov
data16
test
mov
adc
and
add
mov
and
dec
push
das
js
jmp
scas
mov
test
dec
les
sbb
ljmp
pop
into
shrl
into
sub
xor
sbb
in
mov
cwtl
aad
inc
daa
mov
imul
cld
add
into
inc
push
fmull
iret
add
xor
pop
stos
mov
in
leave
div
mov
dec
ljmp
pop
mov
test
push
movsb
data16
ret
movsb
and
or
xchg
inc
add
rclb
loope
mov
lret
xchg
imul
insl
push
and
push
push
jne
jne
loope
aam
jg
and
xlat
gs
das
leave
aas
jecxz
jg
cwtl
scas
add
mov
dec
sbb
cmp
xchg
fldt
sub
movsl
movsl
mov
gs
repnz
lcall
cmp
xchg
ret
mov
data16
js
lods
repz
push
add
xor
mov
sbb
lahf
cld
xchg
fmull
or
xor
cmpsb
mov
outsb
and
into
pop
fidivrs
ljmp
adc
add
jge
mov
lret
ret
xor
push
push
mov
into
mov
lcall
add
loopne
xchg
add
sub
mov
ss
adc
lahf
inc
dec
dec
sub
test
fists
lods
mov
adc
pop
mov
aas
sbbl
out
inc
cmc
les
test
pushf
xor
lea
mov
xlat
cli
xchg
xor
cli
clc
ja
lahf
mov
add
lcall
fst
cli
cmp
cli
in
sbb
lcall
fisubl
fisubrs
outsl
dec
jae
and
xchg
in
xchg
mov
xchg
scas
repnz
sub
push
call
push
pusha
and
repnz
scas
icebp
mov
jge
in
mov
push
pop
adc
pop
lods
dec
sbb
sub
sub
pop
mov
sub
fmull
fdivrl
sbb
cmpsb
and
jae
pop
popf
mov
adc
cmpsb
inc
xor
clc
xchg
add
loop
pushw
xor
mov
cmp
lret
pop
in
mov
jle
fstps
rep
loope
test
ret
leave
ljmp
in
mov
mov
mov
mov
in
mov
loop
mov
js
inc
outsb
popa
test
fmuls
pop
jp
pop
mov
cmc
sub
xor
xchg
mov
mov
insl
and
movsbl
mov
and
pop
lcall
popa
cmpb
lahf
jl
orb
xchg
shll
pushf
xchg
or
inc
aaa
jno
adc
out
insb
fpatan
in
xor
addr16
test
mov
cmpsl
mov
pushf
lods
pop
and
popf
aas
push
cmp
dec
or
popa
mov
int
add
sub
mov
movsl
adc
inc
in
add
test
loop
in
and
sbb
mov
mov
stos
jne
jge
fcomps
inc
sbb
inc
rolb
xor
xor
aad
gs
push
mov
mov
cltd
sub
es
test
andb
stc
push
push
jae
pop
pushf
cmpsl
pop
cmp
mov
aas
xor
lahf
push
inc
sbb
and
xlat
push
rorl
das
das
std
xchg
ds
rcl
das
push
icebp
mov
jne
pop
jae
pop
and
sub
repz
xchg
cltd
jae
mov
fidivl
cltd
sub
movsl
mov
movq
rolb
mov
sbb
enter
nop
push
cli
or
pop
push
lret
inc
push
pop
or
mov
dec
xorb
data16
dec
sbb
and
adc
pop
dec
loop
repnz
insl
sbb
or
and
lock
mov
adc
insl
les
lds
mov
scas
aas
and
into
add
repz
lret
push
rorl
cmp
mov
lock
sub
jecxz
mov
andb
popl
fisubl
pop
push
sahf
mov
or
jmp
addr16
inc
in
and
fprem1
xchg
push
ret
xor
imul
cmp
lock
imul
jno
adc
mov
sbb
jp
lods
add
rcrl
jae
dec
or
adc
repnz
cs
push
in
mov
inc
pop
stos
jo
jge
outsl
push
testl
sbb
push
jae
sub
aas
or
xor
imull
xchg
testl
sbbb
cmpsl
push
call
inc
push
aaa
and
insl
dec
push
imul
inc
imul
pop
mov
fmull
out
in
push
sbb
pop
cmp
sub
and
and
push
mov
je
pop
into
cs
or
mov
and
stc
out
xlat
adc
lahf
mov
aam
add
lds
xor
scas
adc
push
sbb
leave
sbb
xor
pushf
les
out
lahf
push
frstor
movsb
jae
push
cmp
lcall
out
incb
push
out
and
lods
or
pop
daa
cld
jae
or
js
inc
pushl
mov
mov
and
add
and
out
dec
mov
cmp
xchg
and
fdivl
loopne
jge
ja
pop
incl
push
popf
xor
out
xchg
movq
in
cli
mov
fdivr
hlt
lea
outsb
iret
xchg
insb
sub
cld
sub
cltd
bound
adc
xlat
mov
les
sub
cmp
leave
mov
xor
faddp
lock
xor
mov
or
cmp
add
stc
xor
leave
or
adc
jle
push
cmp
dec
gs
cltd
xor
loop
xchg
arpl
ss
aad
fdivr
addr16
inc
adc
repz
outsl
ret
incb
in
js
adc
sbb
push
sub
cltd
cmovle
push
loope
inc
mov
push
in
lds
sbb
pusha
mov
lret
lahf
lcall
or
outsb
jmp
xchg
inc
cmpl
xchg
jle
into
into
shlb
mov
jb
lret
ljmp
inc
xchg
notb
push
fnstsw
pop
jl
shrb
lods
es
xchg
sub
and
aam
ss
jecxz
ljmp
pop
icebp
or
das
es
insb
fmuls
push
scas
dec
roll
lea
mov
test
sbb
jnp
lods
mov
inc
jne
pop
mov
jle
xchg
notl
dec
je
fwait
mov
sbb
sbb
addr16
movsb
and
fstl
sbb
enter
sub
inc
popa
add
cltd
add
mov
fldenv
enter
in
mov
adc
sub
dec
pop
add
mov
fildl
test
ret
icebp
jbe
in
fcoml
pop
aam
nop
mov
mov
pop
ret
push
or
cltd
mov
xor
cmpsl
or
jae
cld
loopne
test
mov
xor
xchg
mov
pop
pop
in
movsl
add
call
xchg
jne
fstpt
fsubrl
stc
sti
je
or
inc
cmp
out
int3
dec
pop
mov
push
bound
xchg
or
sub
in
clc
adc
sub
test
adc
imull
aam
ljmp
cmp
jecxz
adc
fndisi(8087
xor
cwtl
out
mov
fdivs
pop
enter
incl
dec
pop
cmpsl
jg
cld
popf
adc
xchg
dec
sub
push
int3
adc
jo
xor
stos
adc
mov
xorl
jecxz
pop
mov
sahf
lahf
out
ja
or
mov
arpl
stc
cmpsb
lcall
pop
dec
mov
bound
jns
mov
loopne
out
sbb
sti
lahf
sbb
outsl
dec
popf
xor
fstl
sub
sahf
mov
mov
mov
mov
push
ss
movsl
insl
rclb
ja
sbb
jmp
add
mov
notb
inc
stc
popf
loope
fsubrl
loope
cmp
lds
add
mov
lcall
mov
pushf
mov
xor
imul
inc
xlat
fwait
adc
icebp
sbb
add
add
in
pushl
sar
mov
xor
adc
and
scas
hlt
ss
js
int3
pop
fdivr
sbb
out
mov
enter
mov
mov
adc
push
dec
xchg
jns
push
adc
rorb
xchg
call
adc
das
xchg
push
dec
loopne
push
popf
outsl
push
or
pushf
shl
ret
sbb
mov
xchg
sub
inc
out
adc
jbe
push
adc
push
adc
xor
or
hlt
and
in
cmp
sub
addb
xor
mov
cwtl
addb
sub
test
andb
cltd
fistps
cmpsb
ret
xchg
lret
jbe
fwait
add
ret
jno
nop
idivl
adc
ficoml
das
mov
sub
sub
add
movsl
push
scas
ja
rcll
setnp
inc
enter
les
cmp
lret
cli
jecxz
mov
mov
mov
mov
mov
icebp
mov
fndisi(8087
rorb
or
adc
or
cmp
sbb
arpl
jmp
adc
push
repnz
and
imulb
push
xchg
fmull
test
or
sahf
mov
xor
std
sub
xchg
adc
push
mov
ss
addr16
out
pop
jmp
sub
fcmovnbe
add
stos
cs
aas
sti
popf
push
jb
dec
les
out
mov
sbb
int
into
lock
loopne
aad
mov
jecxz
mov
mov
sub
fsts
fwait
push
inc
call
xor
fbstp
jg
aam
or
mov
dec
loope
ljmp
arpl
je
push
arpl
adc
mov
movsl
xchg
sub
dec
ja
push
sbb
add
sarb
ja
jl
andb
cmp
inc
cmp
outsb
test
lret
xchg
outsb
cmp
int3
mov
jb
pop
jae
sub
jg
mov
cwtl
sbbb
rcll
xchg
mov
or
out
popf
push
jb
inc
sbb
push
pop
ret
and
inc
je
loop
adc
enter
les
xlat
sub
aas
pusha
pop
out
xchg
sahf
rorb
ljmp
or
test
mov
test
sbb
inc
xor
das
inc
movl
sbb
sbb
dec
pop
pusha
or
or
mov
jns
mov
lds
sbb
xchg
fldcw
xchg
jmp
loopne
sar
je
jne
mov
inc
aad
pop
lahf
leave
cli
lcall
test
or
dec
int3
mov
cmp
xor
adc
outsl
sti
filds
insb
lret
out
imul
push
fisttps
std
inc
test
in
cltd
jg
flds
addr16
mov
outsl
fdivrl
lock
imul
jge
dec
and
loop
leave
push
rcrl
inc
push
stos
lea
incl
lods
mov
insl
xchg
and
aas
mov
jno
xchg
and
adc
les
stos
jae
outsb
loop
pop
jl
andb
mov
xchg
fimuls
inc
mov
bndstx
bound
lahf
ret
xor
icebp
pop
mov
mov
inc
dec
imul
sbb
cmp
bound
lock
into
inc
mov
leave
lahf
loope
aam
mov
sbb
xchg
mov
int3
movsb
call
push
mov
stos
cld
jb
repz
das
sti
loope
mov
xchg
jp
mov
pusha
inc
and
push
sti
mov
fmulp
aam
in
cli
jl
clc
mov
lds
cmp
and
sbb
pushl
sbb
mov
sbb
testl
insl
and
cmp
mov
bound
movsb
pop
icebp
adc
cli
test
pop
and
cli
sub
and
xchg
mov
cmp
and
loop
sbb
sbb
test
or
idivb
cmp
add
je
es
inc
mov
adc
sbb
jb
inc
mulb
test
in
pause
xorl
aas
dec
pop
sub
lods
xchg
inc
addr16
stc
sbb
ficompl
int
xchg
repnz
rolb
cmpsl
dec
mov
add
in
inc
loopne
xchg
fs
dec
lods
xchg
mov
aad
movb
cmp
sbb
arpl
lea
mov
sbb
js
adc
out
call
or
gs
stos
in
loopne
cmp
cmpsb
cmp
stc
adc
jp
cmp
mov
fsubrs
outsl
push
jnp
sahf
mov
jg
nop
call
or
or
sub
pop
or
shr
mov
push
aaa
xchg
and
xchg
sbb
cld
jb
daa
jae
add
mov
push
inc
mov
add
push
aas
pop
and
cmp
sbb
fsubs
test
cli
ret
mov
loope
or
xor
pop
in
push
movsl
xor
or
adc
mov
cmp
lea
sub
test
pushf
mov
push
sub
push
adc
in
and
xchg
test
dec
mov
iret
fisttps
in
mov
adc
mov
sahf
iret
jmp
adc
mov
cmp
xor
lret
sbb
and
pushf
fprem1
cwtl
and
hlt
filds
aad
mov
cmpsb
pusha
push
xlat
ja
pop
std
sbbl
mov
inc
outsb
cmp
mov
push
icebp
adc
into
insl
pop
mov
gs
ja
cmp
nop
add
mov
inc
in
xchg
push
jae
jge
dec
cmpsb
pop
dec
add
or
or
jbe
inc
imul
repnz
jmp
jl
loop
xchg
pop
sti
jl
jmp
es
jge
popa
loop
andl
jecxz
jbe
jnp
jb
lret
inc
rcrb
enter
shll
pushf
mov
jnp
mov
aad
fmulp
ds
int
mov
popa
in
and
push
push
xor
jp
sub
adc
dec
sub
rolb
push
pop
xchg
in
stos
pop
jne
xorb
add
push
add
and
mulb
mov
dec
sub
mov
inc
lods
stc
fidivrs
mov
enter
sub
cmpsb
add
mov
scas
pop
pop
mov
jle
jne
inc
mov
les
das
pop
fadd
repnz
mov
in
cmp
sbb
mov
ja
outsb
aas
sub
repnz
pop
mov
mov
jno
nop
mov
push
outsb
jo
add
mov
inc
mov
xchg
adc
cmpl
jo
movsl
movsl
lcall
xchg
mov
mov
cld
sub
inc
clc
push
xor
cmp
inc
loop
jge
and
cmp
xor
pop
mov
xor
int
inc
fstl
ja
aad
fiaddl
sbb
pop
das
stc
xor
test
scas
js
test
mov
jg
and
mov
imul
push
add
enter
popf
mov
push
mov
in
mov
and
lret
sbb
add
pop
jl
xchg
cs
cwtl
scas
iret
xchg
int
xchg
xor
cmp
pop
leave
push
adc
lods
and
xchg
nop
xlat
mov
add
push
mov
enter
xlat
pop
pop
mov
mov
mov
lret
dec
mov
icebp
sbb
cld
pop
stos
inc
or
orb
mov
mov
push
jmp
push
sub
mov
dec
sub
loopne
mov
mov
pop
inc
mov
fwait
dec
insl
icebp
jmp
clc
dec
or
and
lock
adc
sub
dec
pop
decl
cs
mov
je
rolb
mov
xor
ret
sub
into
out
pop
test
mov
hlt
hlt
jle
fdivr
cld
mov
pop
ror
mov
out
add
clc
loopne
mov
or
mov
clc
cltd
and
nop
mov
sti
cmp
mov
enter
outsl
loope
popl
mov
push
adc
and
and
jmp
jns,pt
fldcw
xchg
add
pop
loopne
cmpsb
test
pop
movaps
xor
insl
idivl
cmp
sti
fsubrs
mov
repnz
push
mov
pop
divl
lds
in
out
out
sbb
jle
inc
addr16
push
cmpsb
cld
bound
xchg
cwtl
es
xchg
sub
cmc
fs
xchg
in
cmp
jne
dec
xchg
fwait
and
fisubs
leave
mov
cwtl
pop
push
sub
pop
sbb
les
push
outsb
jae
and
dec
add
arpl
cmp
test
int
pop
adc
popa
bound
xor
pop
jl
incb
cld
mov
ret
fcomps
cwtl
jg
in
mov
xor
jne
mov
lods
sbb
mov
ljmp
mov
lahf
jle
and
dec
call
mov
dec
dec
repnz
sbb
icebp
push
inc
shlb
and
push
popa
xchg
cmp
movsb
cmpsl
out
fadds
add
ret
aam
fsubrl
je
jle
and
xor
dec
mov
aas
push
clc
repnz
push
cwtl
cli
push
adc
xchg
int3
lods
adc
xchg
jp
jg
mov
inc
push
scas
shl
mov
xchg
xor
call
sbb
sub
inc
pop
mov
scas
mov
mov
je
and
loop
cld
adc
rcrb
jno
int
in
xor
push
sub
pop
sub
inc
mov
outsl
cmp
sbb
fists
cmp
imul
push
loop
cltd
gs
cltd
xorb
out
lods
xchg
push
add
rcrl
fstl
push
lcall
xchg
in
movsb
outsl
xchg
ret
in
mov
subb
pop
stc
leave
sbb
pop
sbb
pop
aam
adc
cmp
loope
xor
and
scas
xor
lods
gs
and
pop
popa
jbe
push
push
gs
into
and
js
adc
and
repnz
stos
in
push
push
pop
enter
dec
jns
push
fwait
ret
push
mov
lea
faddl
lahf
jg
jle
ja
clc
iret
cltd
mov
inc
cmp
and
aam
mov
push
std
sti
cli
lods
lret
iret
lds
out
cmp
xorb
inc
mov
lcall
cmp
bound
and
loop
add
jno
adc
loop
sahf
add
jl
push
cmp
sub
inc
ds
aaa
add
es
adc
cmp
jb
sub
xor
lods
jbe
cmp
cltd
cmpsl
push
mov
push
jo
sub
fs
jo
je
into
mov
sub
inc
jo
sbb
mov
sub
sahf
loope
push
mov
aad
std
cmp
adc
clc
mov
mov
gs
out
xchg
mov
es
in
fisttpll
cs
adc
stc
bnd
xlat
shrl
jge
push
sub
cmpsb
js
loopne
add
push
clc
outsb
ret
out
call
les
dec
insb
push
repnz
cmp
jp
add
adc
mov
xchg
sbb
outsl
sub
in
or
pop
adc
xor
mov
jo
fldt
jne
pop
ds
sbb
jae
cmc
inc
dec
cltd
hlt
pop
cld
pop
add
es
icebp
cmpsb
bound
add
pop
adc
mov
adc
jnp
dec
pusha
filds
test
mov
xor
ret
mov
push
ror
rolb
pop
lahf
sbb
fisubrl
xor
mov
mov
mov
and
clc
nop
mov
mov
push
sbb
fs
cld
ja
sub
push
lret
iret
cmpsl
fwait
stc
gs
jno
mov
jns
lock
jns
in
xor
cld
imul
adc
add
jno
cld
or
mov
stos
jne
add
sbb
push
xchg
add
xchg
adc
nop
or
rcl
loopne
jb
out
loopne
mov
add
scas
hlt
sbb
jecxz
mov
jnp
das
mov
pusha
dec
fsubrl
aam
cs
push
xorl
jbe
inc
gs
sub
cltd
sub
in
popa
mov
pop
xor
cmpsb
add
adcl
mov
mov
mov
adc
fidivrs
jmp
inc
sbb
cmc
push
xchg
sub
mov
dec
fistpll
sti
stc
adcl
push
in
cmp
mov
sub
lods
nop
jmp
dec
mov
adc
je
add
clc
subb
push
xchg
adc
xchg
push
push
jecxz
js
push
daa
push
lea
lds
loope
add
sbb
movsl
mov
xchg
mov
inc
stos
pop
pop
lret
shlb
loope
inc
mov
sahf
cmp
jge
cmpsl
sub
cmp
pop
adc
lcall
or
adc
gs
mov
pop
push
push
mov
clc
das
test
out
adc
loopne
je
imul
mov
jecxz
cmp
insl
dec
fidivl
add
dec
lret
cmp
and
xor
lahf
jns
cld
jecxz
push
out
jp
fiaddl
sahf
aaa
lahf
bnd
movsl
cli
jle
daa
adcl
out
push
lahf
mov
cmp
push
repnz
inc
sub
mov
xor
mov
cli
mov
gs
outsl
add
cmp
mov
cwtl
icebp
xchg
push
cmp
lret
pop
lods
movsb
test
call
inc
and
xor
aaa
push
jge
inc
adc
or
push
sti
add
das
popa
xchg
fldln2
lds
and
call
fcomps
dec
loopne
loopne
int3
lahf
push
fcompl
jg
cmp
shr
xchg
xor
push
pushf
sub
push
xor
aad
jmp
cmp
push
hlt
mov
cmp
sbb
dec
add
aad
or
dec
mov
pop
push
in
iret
jle
into
iret
push
inc
out
xchg
loop
jl
std
add
push
and
shlb
cmpsl
fiadds
rol
xchg
es
xchg
inc
out
or
fnsave
inc
notl
add
jo
cwtl
lock
push
lea
mov
sbb
xor
cmp
in
ds
jb
fbstp
iret
leave
pop
xor
sbb
and
lods
arpl
push
ret
fbld
push
repz
mov
jg
fcoml
and
lock
int3
sahf
adc
push
outsl
insb
fs
pop
push
test
aam
push
xchg
int
sub
arpl
push
outsl
in
movq
addr16
and
mov
push
mov
jg
push
jbe
mov
fdiv
subb
mov
popf
or
cwtl
lret
outsb
mov
test
je
insl
adc
inc
adc
out
shl
mov
imul
bound
lods
inc
add
adc
or
adc
push
dec
rcrb
daa
les
xchg
xor
ja
out
dec
dec
popa
mov
inc
cmp
and
daa
dec
xor
enter
pop
lods
jno
xlat
add
pop
xchg
pop
inc
inc
js
outsb
pop
clc
rcll
jb
push
and
testl
cmp
orb
mov
negl
mov
jo
hlt
mov
xchg
sub
mov
int3
aam
leave
mov
fs
dec
mov
insb
push
and
cmp
and
insb
cs
cld
pop
aam
das
xchg
lods
and
jnp
dec
xchg
je
iret
dec
adc
sti
mov
and
hlt
pop
stc
lcall
test
jno
pop
sub
adc
ret
mov
push
hlt
arpl
repz
jp
or
jbe
in
sub
mov
xor
clc
pop
sub
xchg
inc
add
call
fisubs
js
mov
ret
inc
rcl
movsl
adc
fistpll
jp
mov
test
aaa
push
cltd
jle
dec
inc
test
leave
adc
test
nop
repz
inc
fstl
push
push
sbb
sbb
lahf
push
sub
add
add
hlt
loope
cmp
xorl
or
sub
and
xor
mov
icebp
imul
mov
je
and
push
lds
sbb
mov
mov
mov
arpl
pop
mov
pop
dec
imul
call
xchg
pushf
and
pop
in
rcll
jl
and
and
xchg
sbb
ret
iret
mov
inc
icebp
dec
dec
ficomps
xor
int
jmp
out
popa
addb
pop
loope
sub
xchg
pop
dec
mov
push
adc
mov
test
pusha
xchg
pop
mov
shrl
sub
lret
xor
xchg
push
sbb
fldt
lahf
shll
push
cld
shll
int
sti
jb
jnp
xchg
stos
mov
push
sub
call
ffree
pop
scas
cmp
repnz
mov
mov
stc
sub
mov
pushf
je
fucompp
pop
cmp
pop
gs
mov
pop
fldt
cmp
mov
test
rcrl
add
lea
loope
push
xor
iret
and
xor
mov
icebp
push
jo
lcall
lea
test
clc
cwtl
jge
add
push
mov
push
repnz
sub
stos
insb
ss
mov
cmpsb
es
outsb
jg
add
sub
xor
cwtl
xlat
ret
inc
dec
lahf
push
iret
xor
mov
mov
xor
rol
or
jmp
mov
scas
cmpsl
jp
loope
loope
fbstp
repnz
sbb
ds
jo
or
pusha
or
subb
mov
add
stc
stos
sub
ds
and
mov
fs
and
out
xchg
push
mov
sub
sub
ror
mov
es
mov
add
sub
mov
lret
mov
or
stc
pop
in
adc
xchg
in
negb
adc
jle
imul
int
inc
dec
jl
sbb
inc
lcall
pop
mov
xor
push
jae
hlt
pop
xchg
push
and
push
ljmp
mov
jb
clc
mov
push
in
add
cmp
cmp
adc
push
clc
pop
in
xchg
mov
mov
mov
fwait
jb
cmpsl
lahf
jo
and
cs
ret
lea
sarl
incl
push
push
cmpsb
adc
stos
jb
jecxz
or
or
add
and
cli
inc
and
cwtl
fstps
nop
adc
cmpsb
jnp
lahf
int3
notl
inc
xchg
loopne
push
das
hlt
or
das
jae
and
into
stos
loop
mov
cltd
fiaddl
fsubs
mov
pop
add
aam
dec
jae
mov
jg
sbb
sub
adc
mov
int3
xor
cmc
subl
imul
xor
fwait
xchg
and
pop
pop
jns
xchg
xchg
inc
or
or
push
out
or
xchg
into
inc
pop
icebp
fisubrs
mov
xchg
pop
pop
sub
ret
jge
cld
loopne
stos
xchg
fbstp
mov
lock
sub
cs
shrb
in
sahf
sbb
push
out
mov
sbb
sbb
mov
aas
jnp
pop
cmp
inc
adc
ds
jmp
repz
outsb
xchg
sti
insl
movsb
cli
jg
repz
ret
mov
ljmp
imul
mov
rdpmc
and
pop
push
in
cld
adc
out
cmp
cltd
mov
mov
cli
dec
sub
in
sbb
and
shrb
jle
and
lock
pop
and
shrl
or
cli
mov
lcall
lods
mov
lcall
sub
cmpsb
inc
cmp
add
mov
mov
shll
or
mov
mov
movsl
stc
andl
inc
ss
repz
mov
xor
add
add
je
sub
mov
pop
stos
fldt
insl
mov
xchg
fldl
lock
sub
scas
clc
or
mov
jo
js
fbstp
sbbl
adc
sub
out
inc
aaa
xor
push
add
notl
xor
cs
xorl
adc
cmc
pop
xchg
dec
or
in
add
inc
mov
jge
adc
js
inc
bound
jl
in
in
popa
ffreep
inc
lahf
sbb
mov
pop
and
inc
xlat
mov
dec
movsb
stc
inc
ret
popf
aaa
js
mov
xor
mov
mov
rorb
ds
mov
push
mov
popf
int
sahf
out
adc
sahf
xchg
add
cmpsb
jecxz
imul
push
cmp
jnp
adc
dec
xchg
pop
lods
mov
xor
inc
nop
xor
push
out
mov
rorb
xchg
aad
push
mov
imul
stos
cltd
bound
inc
lretw
mov
js
imul
or
std
dec
in
jno
jno
mov
fbld
push
mov
mov
and
inc
dec
dec
mov
std
ja
rolb
andl
xor
push
or
clc
in
mov
jecxz
cmp
rorl
push
std
jg
mov
fsubl
inc
outsl
sub
mov
and
enter
das
or
sarl
or
les
add
bound
sar
pop
xchg
cmpsb
imul
das
lret
and
stc
push
mov
imul
fstp
test
pop
lret
xlat
pop
fwait
pop
jb
mov
inc
add
out
adc
mov
aaa
mov
sub
fcmovu
out
in
xchg
rcrb
inc
mov
rol
repz
mov
cltd
sub
xchg
mov
mull
xchg
fbstp
cmp
xchg
dec
and
adc
fldt
dec
es
aaa
es
xchg
daa
js
cmp
mov
push
lds
sbb
pop
inc
sar
enter
mov
xchg
mov
dec
and
push
repz
push
leave
add
and
push
lea
lahf
and
or
push
pop
repnz
xor
imul
mov
lret
scas
das
pop
push
mov
push
adc
sub
mov
into
pop
iret
leave
and
in
push
push
shrl
enter
adc
std
fidivrl
sub
cmp
inc
mov
lahf
inc
repz
dec
ljmp
mov
adc
inc
cmpsb
cwtl
sbb
jp
popf
add
fsubrl
xchg
in
loop
popf
ret
pop
lahf
call
cs
push
mov
inc
fnsetpm(287
push
insl
sub
arpl
fstp
push
sub
add
dec
sub
into
lcall
loop
pop
push
scas
push
insl
subl
and
fldt
nop
in
daa
rclb
pop
js
mov
lahf
adc
ds
jle
add
add
mov
and
fsubs
push
into
frstor
in
sbb
out
jg
bound
mov
dec
push
insb
xor
iret
test
dec
push
dec
sti
pop
test
lds
cmpsb
lcall
sahf
loope
dec
sti
pop
xchg
push
sub
push
dec
push
lea
out
aaa
or
add
or
jge
cmpsb
cmp
imul
arpl
dec
in
xchg
or
in
or
in
enter
pop
xor
mov
popa
and
pushf
test
fisubl
xchg
cmc
cmp
sbb
inc
in
mov
insb
inc
std
cmp
out
aam
cwtl
jl
mov
push
jo
mov
mov
xchg
ja
rcll
stos
adcl
fs
sbb
clc
out
inc
ret
cmp
mov
fldt
sbb
in
daa
jo
cmpsb
jns
adc
cmovg
dec
nop
inc
sbb
push
adc
test
sti
out
sub
stc
mov
repz
cmpsb
ret
pusha
mov
in
imul
mov
adc
mov
das
xchg
test
or
and
mov
fwait
cs
pop
cmpsl
mov
cld
cmp
sbb
add
outsb
addr16
sbb
mov
xchg
dec
movsb
jne
in
add
rclb
jb
push
dec
sbb
call
jge
xor
jno
cld
jmp
hlt
adc
mov
rcrl
out
das
call
out
add
mov
stos
xchg
fadd
fcomps
jecxz
jae
testl
mov
test
jp
sub
aad
jnp
sbb
inc
mov
mov
shrb
out
insl
xchg
shrb
ss
inc
add
popf
or
cmp
pop
fimuls
rcll
imul
outsb
push
orb
push
or
fdivrs
push
jmp
mov
mov
scas
addr16
xchg
dec
pop
push
std
sahf
xchg
mov
test
nop
insl
test
jl
popa
ss
icebp
sarl
mov
rolb
xor
inc
lret
cmp
mov
dec
and
and
xchg
pop
sbb
mov
sub
xchg
cmp
inc
or
adc
push
or
push
and
pop
movsl
jecxz
dec
pop
xchg
push
scas
pusha
dec
sub
mov
fsubrs
mov
fdiv
rep
xor
jg
neg
xchg
cmpsl
push
out
repz
aam
lods
xchg
mov
lret
ds
sar
sub
fisttpll
test
xchg
push
mov
mov
xchg
add
mov
cmc
and
jns
jp
inc
jge
out
arpl
mov
gs
nop
dec
add
inc
jo
js
cmpsl
pop
loope
adc
push
pusha
pop
fwait
cwtl
pushf
jno
aad
cltd
jbe
add
mov
lcall
cld
mov
pop
push
pusha
push
sbb
iret
dec
jecxz
mov
mov
xorl
mov
sbbb
scas
dec
rclb
les
js
xor
ss
adc
inc
stc
jbe
movsb
in
cmpsb
adc
cmp
and
movsb
mov
push
xchg
xchg
xlat
push
fisttpll
aas
xchg
scas
adc
jmp
mov
dec
in
nop
xor
call
fnstcw
out
std
testb
mov
movsl
sbb
adc
cmp
ret
popl
es
pop
pop
mov
jg
xchg
mov
cmp
pusha
movsb
jns
and
xor
sub
adc
xlat
mov
ds
pop
cmpb
inc
push
pop
jmp
test
sub
xchg
jge
inc
dec
ret
mov
cs
push
ret
das
out
out
stos
sub
mov
sarl
call
adc
cmp
xor
pop
shrl
push
xor
sub
mov
cltd
adc
jle
sub
inc
ficomps
dec
cmp
jge
stos
jp
and
lcall
jg
pop
orl
sbb
std
xchg
ljmp
jae
pop
fmull
xchg
pop
xchg
pop
add
mov
and
js
mov
push
mov
bound
popa
jp
add
gs
mov
sbb
lret
repz
or
cmp
sti
inc
add
add
mov
xchg
xor
rcr
xor
leave
loope
mov
loop
mov
mov
jo
rol
out
cmpsb
pusha
mov
push
lcall
push
lods
ljmp
xchg
jno
out
test
sbb
addl
ret
jo
jmp
faddp
sub
cmc
hlt
or
dec
cltd
or
pop
mov
inc
rol
dec
jne
pop
lea
xor
mov
cmp
lret
cwtl
pop
dec
mov
shlb
in
sarb
push
jbe
lods
mov
mov
lcall
add
das
jge
xchg
les
dec
fsubl
jmp
es
push
addr16
jbe
popw
int
jmp
xor
cmp
icebp
popf
sahf
movsl
lahf
mov
adc
lods
aas
cmc
and
add
mov
in
outsb
or
xor
test
out
adc
push
mov
xor
dec
inc
sub
cmp
push
out
ja
int
loop
div
pop
sahf
pop
jp
cli
mov
int3
test
pusha
add
sbb
in
xor
std
daa
cmpsl
jle
cmp
cmc
adc
iret
sbb
bound
pop
jl
mov
and
or
mov
out
iret
cmp
lret
adc
pop
xchg
inc
rol
pop
lret
pusha
fwait
lods
rol
clc
xor
or
adc
test
in
fsubs
push
jnp
pop
std
lods
je
or
xor
jo
adcl
ss
lahf
jge
icebp
js
aam
mov
stc
push
decl
movsl
in
aam
bound
fstpt
out
cltd
mov
gs
xlat
das
mov
pop
sub
fisubl
outsl
xchg
xchg
xchg
cmpsb
add
sub
insb
and
lret
jle
mov
pop
pop
decl
aam
pop
clc
mov
mov
daa
sub
out
xchg
icebp
xlat
xor
pop
rcr
ss
jmp
int3
xchg
mov
sbb
cmpsb
xchg
ss
cwtl
addr16
push
xchg
rorl
cmp
testl
sub
dec
or
mov
mov
jbe
xchg
dec
aad
sbbl
dec
lods
cmpsl
mov
adc
imul
ss
push
or
loope
lcall
in
lcall
mov
into
mov
lahf
rclb
repz
cmp
je
and
push
out
loopne
sarl
or
daa
sti
cltd
je
sarb
mov
les
test
push
pop
ljmp
push
xor
cmp
jbe
jno
jl
and
and
test
xchg
jbe
enter
leave
pusha
add
mov
sbb
pusha
push
aam
sbb
push
jge
cmpsl
mov
popf
icebp
movsl
outsl
xchg
aam
bound
ljmp
jle
pop
clc
inc
cmp
nop
mov
sti
cmp
adc
push
mov
dec
clc
push
lahf
inc
jb
dec
jmp
mov
adc
sbbl
lds
or
shl
mov
pop
insb
xchg
shll
pop
dec
ljmp
mov
xor
push
stc
cmp
and
test
add
nop
out
adc
arpl
dec
push
pop
outsb
insl
or
xor
add
dec
jo
xor
mov
xchg
mov
pop
or
cmp
pushf
cld
push
loop
sub
adc
mov
and
cmc
push
mov
jge
mov
mulb
push
lcall
dec
mov
sub
add
fwait
ljmp
in
shll
sbb
sub
mov
adc
sub
insl
addr16
into
inc
mov
fisubrl
add
cli
xor
jmp
jge
cmp
adc
mov
inc
pop
xor
or
pusha
mov
sbb
imul
push
repnz
xor
insl
rcll
into
cmpsb
mov
cs
pop
enter
jp
repz
inc
sahf
mov
fdivr
xchg
and
cmpsl
data16
pop
mov
push
sub
imul
cmpsb
xchg
fsubrs
or
and
or
mov
xor
mov
mov
into
test
mov
leave
adc
mov
mov
jo
scas
in
ficoms
repnz
int
enter
into
sti
mov
shll
das
dec
sbb
js
sahf
jp
sub
lods
lods
jge
repnz
lods
and
ret
int3
jae
mov
or
xchg
mov
inc
fistl
jno
in
dec
xor
mov
jle
in
xchg
insl
ficoms
pusha
icebp
ret
cmc
mov
mov
mov
ljmp
sub
js
jmp
mov
in
add
pop
xor
mov
dec
adc
nop
push
xchg
std
push
xchg
pop
loope
mov
stos
aaa
sub
cmpsl
push
adc
shl
dec
clc
and
scas
and
and
in
xchg
mov
lea
stos
add
das
in
das
loope
pushf
scas
loop
inc
add
pusha
xor
sub
adc
outsb
pop
add
xor
jbe
loopne
cld
lret
mov
ss
jno
mov
shlb
in
push
lcall
xor
sbb
pop
outsb
cwtl
mov
mov
out
insb
cmpsl
std
sub
sub
loope
mov
sub
lds
add
mov
cmpsl
pop
xor
add
sbb
test
jo
pop
lcall
aam
xor
cs
fldl
into
and
or
cmpsl
mov
bound
rcl
xchg
lahf
popa
fistpll
lds
xchg
cli
shll
lcall
dec
cli
sbb
out
jmp
enter
clc
out
mov
daa
inc
or
loopne
fwait
and
xor
adc
rclb
pop
fs
aam
repz
mov
add
fdivrl
dec
sbb
dec
test
leave
insb
mov
sahf
int
lock
pop
jmp
outsl
adc
hlt
add
das
jecxz
sbb
lods
enter
adc
adc
jns
shr
ss
hlt
sbb
out
rorb
jp
sarb
bound
test
cltd
test
iret
inc
mov
js
iret
inc
sti
mov
or
jl,pn
lret
and
and
jo
int3
loope
repz
nop
and
enter
adc
mov
arpl
push
add
and
loop
mov
cmpsl
sarl
dec
mov
dec
in
ja
out
je
lcall
jle
mov
sub
adc
add
aaa
or
cmpsb
arpl
outsl
call
mov
outsl
mov
test
das
jl
cmp
push
es
stc
and
bound
icebp
sbb
cmp
push
movsl
sub
xor
adc
lret
mov
ss
dec
popf
and
fucomi
idivb
stos
rol
inc
lcall
rolb
lock
mov
jae
jmp
pop
dec
mov
test
jge
pop
ja
pop
jg
dec
mov
mov
dec
out
fcomi
pop
imull
and
or
dec
fmul
in
fsts
rolb
sub
mov
pop
popf
push
xorl
mov
idivb
push
bound
and
in
mov
and
pop
jg
dec
out
add
cli
inc
fimull
and
test
jge
jo
jp
fsts
inc
jmp
cmp
adc
jno
es
cmp
out
imul
cmpsb
jecxz
jmp
jbe
stc
or
adc
call
xor
adc
lods
cmc
push
scas
shrl
les
stos
mov
and
adc
movsb
dec
adc
push
mov
daa
stc
sub
pop
jo
icebp
test
sbb
leave
mov
lock
test
popa
xor
pop
pop
test
xchg
pop
xchg
adc
jo
fs
test
in
and
cmp
push
xchg
adc
repz
test
and
jmp
not
add
fdivrs
pushf
mov
mov
xchg
jbe
rcrl
cltd
je
adc
sbb
xor
cmpsl
jl
push
adc
rcrl
shlb
sar
mov
push
sub
or
and
imul
insb
aas
sbb
in
orl
push
in
cwtl
inc
mov
cmpsb
outsl
lock
mov
xchg
mov
inc
sub
daa
push
dec
add
mov
jb
jnp
fstpl
repnz
sti
rolb
iret
les
dec
and
mov
or
inc
sbbb
shlb
pop
imul
movsb
lret
pop
pop
scas
test
adc
mov
adc
xor
das
aad
call
jns
enter
rorb
mov
push
cmc
mov
lret
in
aad
xchg
inc
add
ret
lret
jb
sbb
insb
push
mov
ss
lcall
pusha
cs
xor
jmp
push
push
xchg
sbb
sbb
xchg
mov
jp
insl
stos
fbstp
das
lods
loop
and
inc
mov
xchg
outsb
loop
daa
or
or
adc
push
and
mov
mov
gs
mov
xchg
jecxz
int
inc
xlat
mov
insl
cs
push
cmp
mov
push
ficoms
repnz
pop
sub
pop
mov
or
repnz
in
pop
mov
fidivs
call
xchg
fldcw
xor
cmpsl
jo
mov
test
mov
aam
stos
lds
xor
test
pmovmskb
imul
mov
sub
or
cmpsl
sarl
lahf
mov
jne
xor
ljmp
rorb
jecxz
test
adc
jo
mov
pop
repnz
data16
out
out
out
xchg
mov
aaa
jno
mov
and
cmp
ds
test
jmp
sbb
call
dec
outsl
int
pop
jo
fimull
test
inc
gs
push
shrb
push
idivl
xchg
arpl
mov
xchg
jnp
test
adc
dec
hlt
nop
out
es
movsl
cmp
xor
mov
adc
push
push
jge
sub
push
loope
mov
leave
dec
mov
jns
cs
pop
and
push
dec
int3
push
movnti
and
cmp
iret
sbb
pop
rolb
or
adc
mov
sub
aad
jb
jp
jns
xchg
push
repnz
cmp
mov
mov
loope
mov
daa
inc
icebp
les
test
sub
bound
lcall
fimull
test
xchg
cwtl
shll
adcl
pop
pop
mov
cltd
insb
mov
or
mov
mov
mov
xchg
ljmp
xor
fwait
sbb
mov
popa
sahf
xor
sbb
scas
dec
sub
js
lods
cmp
pop
divb
jns
mov
std
jbe
push
bound
std
xchg
dec
outsb
sub
popf
lods
pop
daa
shll
scas
ret
mov
push
jp,pt
mov
imul
stos
dec
add
or
mov
test
mov
fld
push
mov
xor
dec
sbb
loop
dec
mov
sub
mov
push
inc
inc
dec
mov
lods
insl
loope
mov
sub
repz
clc
xor
pushf
pop
stos
adc
push
mov
push
outsl
mov
xchg
add
int3
mov
push
push
and
scas
lods
sub
xchg
pop
pop
in
jne
xchg
mov
pop
ds
xchg
jb
add
fdivs
fdivrl
add
pop
mov
and
mov
fwait
mov
subb
das
or
pop
add
xlat
ss
fisubs
div
jne
loope
adc
sbbb
mov
ffree
inc
or
push
hlt
sub
xchg
xchg
inc
loop
std
cmp
fwait
push
outsb
sub
jae
sbb
mov
stos
push
stc
lahf
loopne
inc
int
nop
ret
fstl
add
jnp
push
cmp
xchg
adc
dec
jmp
std
fsubr
pop
das
loop
cmp
jno
nop
mov
mov
stos
mov
clc
sub
adc
insb
xchg
and
ds
addb
shl
inc
mov
das
mov
adc
sub
test
sub
or
cmp
outsb
mull
mov
fiaddl
push
pop
cmp
push
xchg
push
stos
sti
cs
insb
in
mov
rcll
xor
cmp
cmc
dec
jns
pop
pushf
insl
outsb
repz
test
bound
inc
cmp
das
nop
insb
fmulp
pop
aam
test
stos
testl
fists
inc
roll
inc
sbb
pop
in
sti
test
rcrb
pop
xchg
movsl
pop
mov
adc
enter
out
aas
mov
push
sub
sub
or
jp
cmpsb
sahf
pop
sbb
jo
add
cs
insl
pop
in
mov
ror
lods
leave
andb
mov
xchg
nop
inc
sti
jg
sbb
push
adc
shrl
je
dec
mov
cmpl
ss
and
inc
mov
mov
gs
sbb
mov
and
cld
rclb
pop
pop
and
pop
addr16
call
mov
shrl
xlat
std
outsl
ret
mov
mov
int3
pusha
call
jle
aam
scas
cmp
xor
repz
fbld
mov
hlt
out
std
or
sub
xchg
pop
inc
cmp
loope
pop
push
xor
xor
mov
cmp
fucom
repnz
mov
xor
sbb
pop
lret
or
adc
sub
jmp
xchg
outsb
sub
leave
sub
repz
cmp
and
icebp
dec
insb
dec
adc
cmc
jle
aad
inc
outsb
outsl
mov
xor
add
fstps
xchg
or
mov
mov
sub
push
xchg
shrb
xchg
sbb
fwait
mov
xchg
push
rolb
out
push
xchg
inc
add
mov
cmp
out
stc
add
add
fcomps
pop
and
mov
pop
in
bound
cltd
sub
movsl
or
pushf
mov
call
scas
jp
std
and
sub
loope
scas
mov
add
dec
xor
cli
jmp
add
outsl
pop
mov
jno
sti
mov
cmp
lret
loope
out
mov
lods
arpl
lret
fldenv
lcall
aaa
pusha
pop
jp
aam
out
xchg
push
cmpsl
dec
add
mov
mov
test
adc
ljmp
negb
push
call
das
lcall
enter
jle
adc
cmp
inc
push
stc
jnp
aaa
gs
mov
jne
imul
sub
aad
jnp
fsubrp
imul
jmp
lret
scas
lret
js
leave
cs
out
int3
aaa
cmp
std
andb
add
aad
pop
mov
jle
and
or
or
add
mov
pop
or
mov
sbb
adcl
jle
inc
jo
jo
push
mov
mov
testb
pop
jbe
fcoml
ret
adc
popf
mov
outsl
xchg
das
movsb
mov
xchg
lea
and
and
std
xchg
cmc
mov
nop
inc
pop
and
aad
std
mov
adc
push
mov
shlb
mov
in
fucom
jne
mov
xor
out
push
insl
dec
cmc
add
cwtl
sbb
dec
xchg
add
fs
sub
jbe
enter
jae
adc
std
inc
jo
or
jecxz
inc
or
sbb
sbb
pusha
xchg
push
add
out
out
testl
cmc
fs
mov
dec
jae
fsubp
test
inc
sbb
jo
sub
mov
mov
adcb
xchg
sub
sub
push
loope
rorl
in
push
inc
std
adc
push
andl
or
sbb
pusha
push
inc
repnz
pop
cmp
push
call
pushl
ss
dec
xor
add
in
imul
adc
mov
lcall
mov
test
cmpsl
inc
fstpl
lahf
int3
fstl
jno
pop
movsb
push
add
pop
xor
popf
pushf
dec
in
sub
pop
sbb
dec
and
out
leave
xor
in
shlb
repnz
sbb
test
mov
dec
sub
inc
fnclex
xor
inc
mov
mov
xor
mov
cld
popf
push
bound
jns
sahf
push
xor
mov
pop
jecxz
adc
outsl
push
lods
dec
and
push
inc
inc
call
mov
sbb
cld
add
in
mov
and
adc
pop
imul
or
jle
dec
mov
push
into
sbb
pop
shlb
sub
das
add
xchg
pop
mov
jb
add
cli
push
fdivrl
imul
enter
xchg
jb
jg
adc
push
leave
add
xor
aam
mov
lcall
inc
mov
jbe
aam
sbb
das
xchg
inc
rorb
insl
shlb
mov
mov
xor
gs
push
fdivrs
dec
arpl
jo
sbb
jo
pop
aas
sbb
sub
rcrl
jle
dec
jmp
sub
pxor
cmp
imul
xchg
cs
jp
das
gs
push
xor
dec
jnp
stos
lahf
ds
or
fs
test
mov
aad
cltd
inc
pop
or
mov
xchg
xchg
cltd
mov
pop
in
ljmp
out
jmp
in
sarl
and
cmpsl
xor
scas
icebp
inc
rorl
dec
sub
push
loop
lret
jl
push
mov
cmp
ds
xchg
cwtl
pushf
mov
aas
jge
or
insl
mov
dec
jnp
int
push
xor
clc
repz
push
push
movsl
in
jae
cli
nop
xchg
pop
cmpsl
or
cmpsb
mov
sub
aas
call
adc
xchg
call
call
div
dec
cmp
push
push
cwtd
jecxz
mov
xor
popf
adc
cltd
jae
imul
imul
out
lcall
xchg
and
mov
cli
or
inc
mov
nop
and
sbb
cmpsb
jmp
int3
push
lds
in
and
mov
pop
inc
and
inc
lods
fwait
clc
in
xchg
mov
aas
cmp
cmp
mov
jne
sbb
xchg
pop
rolb
dec
sub
jne
mov
enter
ret
enter
push
daa
mov
cmp
and
js
fs
mov
xor
insl
inc
es
inc
pop
inc
das
lods
xchg
sbb
jge
scas
pop
rclb
out
clc
xchg
pop
or
and
icebp
inc
out
fcomp
pusha
adc
xchg
scas
fs
sbb
lret
xor
cmp
lds
int3
push
loopne
pop
mov
je
fistpll
mov
cmp
and
and
sub
mov
sub
jnp
lods
jp
fldcw
vpmulhuw
inc
je
ja
mov
push
jecxz
sbb
lods
stos
jmp
dec
popa
stos
imul
adcl
es
jo
ret
and
ror
xchg
dec
and
dec
inc
lret
pop
cmpsl
lock
ja
lods
ds
jmp
mov
cmpsb
testl
or
push
jnp
or
mov
sub
mul
leave
push
jmp
xchg
ja
call
adc
cmc
xchg
movsb
mov
inc
or
mov
dec
cwtl
fsubrp
cmc
xor
sbb
mov
sbb
mov
mov
sbb
jns
insb
mov
mov
or
repnz
stos
add
cmp
or
xchg
orb
xchg
pop
loopne
inc
cmp
mov
lahf
popa
adc
sti
bswap
lret
icebp
into
mov
jmp
fwait
jg
inc
into
test
inc
inc
pop
mov
inc
je
in
or
xchg
jbe
mov
stc
outsb
push
pop
mov
dec
out
stos
insb
repnz
xchg
cmp
xchg
and
pusha
es
dec
pop
pusha
pusha
adc
rcrb
lock
call
out
cmp
cmp
mov
ja
mov
mov
pop
hlt
jno
cs
jne
pop
xor
push
cmp
inc
pusha
xchg
cwtl
popa
jp
pop
xchg
add
add
add
and
dec
lahf
push
mov
cltd
lcall
decl
dec
pop
loope
pop
jbe
or
xchg
test
jl
enter
rcr
icebp
cmpsl
inc
mov
pop
pop
cmp
cmpsl
add
in
cmpsb
into
xor
xlat
sbb
cltd
out
jne
mov
pop
jnp
inc
stc
gs
push
fildll
hlt
loope
addr16
and
sbb
jnp
xchg
jne
test
dec
shrb
fildll
js
jg
in
push
sub
sub
adc
lea
addr16
dec
mov
int3
pop
ficompl
js
insb
leave
lret
mov
xor
mov
mov
movsl
or
inc
add
or
and
mov
aaa
cmp
pusha
test
push
fsubrl
faddl
inc
push
inc
daa
pop
mov
mov
addr16
mov
jnp
mov
xchg
flds
adc
dec
out
repnz
mov
mov
shll
sub
loope
and
sarb
sbb
bound
lods
inc
lret
pop
out
in
pop
jmp
sub
js
fsubl
sub
aaa
jno
inc
repz
dec
ja
xchg
pusha
jecxz
jo
mov
shlb
dec
mov
inc
sti
setg
or
popa
pop
movups
insl
call
mov
xchg
or
mov
repz
add
ds
sbb
clc
arpl
into
je
jp
xchg
push
jno
fnstenv
mov
lods
and
cli
mov
movsb
xor
mov
xorb
inc
in
mov
lcall
cmp
adc
stos
pop
cmp
outsb
iret
out
or
mov
stos
sarb
push
xlat
mov
push
loope
cmc
sub
inc
lret
idivl
mov
dec
nop
scas
daa
pushf
xchg
mov
ret
or
aam
or
and
xchg
fldl
xor
pusha
into
ljmp
xlat
add
inc
or
jne
mov
pop
stos
jg
pop
mov
jge
loope
push
push
xchg
ret
jns
pusha
mov
fs
cmp
test
xor
and
xchg
adc
xor
jge
adc
shlb
jo
push
sub
adc
rorl
adc
cltd
push
popf
push
push
stos
cmp
cmp
iret
adc
xor
lret
sub
and
insb
dec
jmp
sbb
mulb
sub
mov
cs
iret
addl
xchg
cmp
push
scas
or
fistpll
stos
pop
xchg
push
repz
aam
fldcw
push
adc
daa
out
xchg
in
shlb
rcr
inc
sbb
dec
cwtl
nop
pop
mov
sbb
fisubs
or
insb
dec
pushf
inc
and
mov
shrb
adc
dec
loop
shlb
int
icebp
loop
push
outsl
mov
imul
cmpsb
push
pop
ja
sbb
mov
mov
imul
lret
jbe
outsb
inc
xor
pop
xchg
push
and
inc
sbb
popa
arpl
sub
lods
sbb
and
in
push
xchg
xchg
loope
dec
cli
mov
fs
xorl
jo
js
mov
jg
push
xchg
mov
mov
movb
jb
pop
or
and
ljmp
cltd
fwait
mov
mov
cmpsl
cmp
add
cmp
popa
sbb
cmpl
out
jb
xor
jae
push
mov
push
arpl
inc
and
mov
int
call
sub
lods
fsubl
dec
sub
cwtl
xlat
xor
test
dec
xor
mov
aaa
pushw
addl
loopne
fwait
icebp
adc
stos
jecxz
leave
sbb
dec
dec
pop
incl
pop
movsb
jbe
inc
out
jo
into
xchg
mov
jp
cltd
fidivs
sbb
inc
scas
jl
test
cmp
popf
mov
inc
adc
push
lret
fnsave
insb
push
sbb
enter
mov
inc
mov
xchg
sbb
sbb
or
jnp
hlt
imul
sub
clc
mov
icebp
dec
xchg
test
jb
mov
rcll
or
xorb
adc
add
fadds
jb
pop
or
jno
rclb
sub
adc
push
push
sarl
dec
mov
adc
mov
sbb
cmpsl
pop
leave
pop
push
xor
jns
mov
js
test
dec
push
and
pusha
lock
push
pop
xchg
movsb
cmp
ja
sub
push
mov
pop
mov
ds
adc
pop
dec
mov
divb
xchg
or
es
sar
add
jno
lret
cmc
push
js
and
jo
pop
jmp
mull
lahf
adc
popf
pop
outsl
outsl
lods
add
sahf
ja
sbb
and
jnp
aas
jb
jge
mov
fisubrl
xchg
sub
or
imul
lret
xchg
mov
notl
dec
pop
xor
pop
cmc
out
rorb
mov
jmp
cltd
call
adc
and
lret
xor
arpl
inc
dec
stos
adc
int3
dec
xlat
sbb
inc
les
ljmp
and
and
pop
cmp
call
push
cld
call
add
add
mov
fsubrp
fcompl
icebp
mov
mov
jge
pop
pop
gs
das
xchg
bound
mov
lahf
mov
mov
mov
imul
es
xor
ds
pop
sub
ss
movl
sbb
mov
fiaddl
aas
mov
sahf
dec
es
push
das
pop
adc
cmp
shrl
xor
fisubrs
cmpsb
adc
imul
and
jns
cwtl
xchg
jg
xlat
jge
pop
and
sti
mov
and
outsl
ds
stos
lods
xor
pop
dec
or
pop
jb
leave
outsb
jne
add
mov
sbb
dec
and
mov
sub
pop
ret
lods
mov
xacquire
push
lock
lds
aad
ja
xchg
sbb
mov
pop
or
shlb
inc
dec
sub
xchg
mov
lret
push
movsb
push
out
cmc
lahf
mov
ds
adc
notl
ja
or
push
in
push
xor
dec
push
mov
cmp
hlt
lea
out
fwait
dec
js
push
mov
jno
fldcw
int
jmp
and
shl
xchg
pushf
in
xor
test
dec
iret
push
andl
mov
dec
xchg
add
and
push
cwtl
enter
xor
jno
xchg
pushf
or
or
push
stos
rclb
jbe
cmp
icebp
cmpsb
jae
nop
mov
dec
ljmp
pop
mov
sub
shl
push
or
xor
pop
and
fldl
sub
sub
pop
jmp
arpl
sub
filds
mov
fwait
pop
cli
ficoms
cld
pop
jb
jle
mov
push
sbb
add
xrelease
jp
je
and
and
dec
stos
push
in
pop
daa
out
outsb
pop
cli
in
mov
bound
jle
or
shll
jns
xor
adc
pop
xchg
and
outsl
loope
loope
sahf
push
push
mov
int
dec
ret
push
jle
aam
jle
add
dec
ret
sarb
bnd
inc
dec
clc
std
push
dec
mov
mov
stos
sub
test
subl
sbb
mov
push
loopne
cmc
mov
aaa
mov
nop
and
clc
adc
stos
push
jb
cmpsl
cmp
daa
jno
pop
mov
mov
pop
imul
mov
inc
fsubs
fidivrl
inc
pcmpgtd
sub
jge
push
hlt
lock
addb
jge
xor
add
inc
mov
sbb
ljmp
sbb
mov
fadds
add
roll
clc
jmp
shll
cmp
mov
xor
in
cld
cmp
sbb
roll
test
pop
sub
scas
scas
cltd
jmp
gs
movsb
xchg
mov
pusha
sub
insl
mov
ud2
hlt
mov
jle
inc
fsubs
inc
rol
or
popa
mov
mov
scas
jge
lcall
xorl
stos
xchg
aam
mul
dec
push
mov
cmp
xchg
movsb
push
xchg
jecxz
xchg
xor
shrb
jno
gs
sbb
cli
les
test
lcall
pop
dec
cli
push
mov
xchg
pusha
ret
lahf
mov
jl
add
int3
fstl
sbb
les
mov
cmp
mov
cwtl
cmc
push
pop
out
add
dec
adc
lcall
xchg
lds
or
sub
cmp
jno
cmp
mov
or
dec
subl
adc
mov
std
add
scas
outsb
cmovg
mov
cmpl
xchg
test
mov
lret
push
xchg
outsl
push
or
outsl
mov
or
inc
and
add
fs
jge
imul
xchg
call
aaa
xchg
sbb
sbb
jnp
mov
pop
in
ljmp
roll
mov
outsl
mov
push
rorl
je
cmp
mov
jecxz
call
xchg
xchg
repnz
pop
daa
mov
cwtl
cs
xchg
dec
leave
rcll
mov
pop
pop
imul
das
jg
leave
das
jne
imul
sub
sahf
jno
and
repz
or
mov
sbb
loop
jb
dec
pop
fldt
sbb
inc
sar
vsubpd
or
out
js
ds
push
movb
punpckhbw
lret
cltd
ucomiss
mov
out
xor
pop
adcl
inc
mov
movsb
push
jg
jne
aad
add
imul
xchg
add
int
loopne
xor
pop
mov
push
pushf
imul
jne
cmp
push
xchg
jmp
es
mov
xor
cmp
int3
inc
insl
dec
push
ds
pop
jns
xor
insl
lea
xor
push
mov
jmp
mov
pop
mov
xchg
sub
aaa
mov
cli
aad
test
gs
mov
or
mov
cwtl
adcl
add
insl
arpl
xor
xchg
aaa
fisttps
int
repnz
enter
std
cld
lea
push
hlt
mov
sub
dec
pop
adc
xchg
xchg
aam
add
fcomp
and
mov
add
xlat
dec
sub
sti
in
sbbl
loopne
bswap
inc
in
iret
mov
setae
push
in
fcom
ljmp
mov
call
fstp
jle
cltd
ret
push
ja
mov
pop
fnstcw
loopne
test
fs
loopne
jmp
imul
sub
xlat
scas
pop
flds
and
inc
inc
sbb
pop
pushf
ret
mov
dec
lods
stc
inc
xor
mov
cwtl
sub
xlat
cmpsb
mov
or
mov
shll
pop
mov
pop
popf
movsb
pop
cmp
ror
inc
xor
shrl
dec
sti
pop
outsl
and
pop
sbb
mov
stos
mov
fwait
in
aam
mov
pop
mov
xlat
mov
sbb
adcl
xor
push
mov
mov
xchg
insl
pop
mov
movsb
outsl
jmp
inc
sub
call
sub
xchg
out
pop
sbb
sbb
add
and
or
shlb
popf
or
imul
loope
cmp
jno
xorb
cmp
and
sarb
push
call
setp
pop
xchg
test
in
repz
outsl
lods
dec
or
loope
push
cwtl
int3
fcmovbe
cmc
out
test
shlb
int3
cmp
sub
mov
ret
inc
scas
sub
out
add
mov
out
sub
and
xchg
outsl
inc
dec
outsb
inc
loop
and
xor
loop
sub
xchg
repnz
lret
fimuls
dec
and
mov
adc
sbb
loope
out
sub
mov
sarb
push
pushf
mov
arpl
mov
out
jp
push
sbb
ds
mov
loopne
cwtl
xchg
cmp
outsb
sub
xlat
decl
test
outsb
pop
es
mov
sbb
subl
fisttpl
lret
push
out
or
push
pushl
xor
push
mov
js
push
mov
inc
pop
push
push
and
imul
xchg
sub
sbb
jg
jno,pt
sbbl
das
xor
xor
das
cwtl
and
fdivrp
sub
dec
pop
or
xor
movsl
cmp
je
xor
sbb
fdiv
mov
and
test
daa
icebp
jo
adc
xchg
stc
push
inc
movsb
xchg
es
mov
sbb
mov
sbb
shrd
sub
inc
int3
sub
fisubs
cli
xor
jecxz
push
mov
sbb
cmp
dec
lret
iret
adc
clc
popa
xchg
adc
pop
xor
adc
or
pusha
pop
sub
rcl
push
les
sbb
cmpsb
hlt
aam
hlt
shr
push
jle
add
ret
cltd
mov
iret
shll
push
cmp
in
mov
adc
mov
push
std
iret
push
jne
fists
repnz
cmp
jbe
mov
dec
cmpsl
movsl
inc
xor
add
mov
or
dec
in
movsl
leave
inc
mov
lock
lahf
shr
xor
out
cmpsl
in
iret
in
test
aas
arpl
mov
inc
sbbb
pop
pop
fucomi
ds
adc
push
imul
jmp
aad
mov
xchg
mov
mov
imul
xor
ljmp
mov
adc
ja
sbb
push
sbb
test
jg
sub
scas
pop
xor
fildll
div
and
sub
mov
fmuls
les
inc
and
adc
sbb
jnp
mov
lcall
dec
sbb
mov
sub
sbbb
jbe
mov
mov
push
mov
inc
push
mov
mov
sub
inc
pop
push
sarb
aam
xchg
addl
pop
stc
js
cmp
adc
dec
cltd
jecxz
fstl
or
shll
or
cs
sub
cmc
insl
in
scas
jmp
mov
loopne
mov
dec
scas
adc
sbb
fmull
push
dec
mov
mov
or
bnd
mov
sar
pop
leave
outsb
int
scas
sbb
int3
cmp
push
mov
nop
jp
xlat
add
or
leave
loope
into
add
stc
scas
popa
scas
lcall
loop
stc
xor
iret
in
psllq
xchg
add
xchg
mov
outsb
clc
out
jl
rorl
mov
adc
jno
xchg
or
xor
mov
and
std
push
or
mov
int
jl
iret
loope
insl
mov
dec
push
repnz
mov
xchg
and
outsl
dec
mov
lret
sti
leave
xchg
mov
arpl
aaa
and
ret
in
pop
jecxz
sbb
in
adc
sub
out
cltd
ds
repnz
fnstenv
jbe
push
cmp
fwait
adc
xor
arpl
ror
mul
push
jno
xchg
clc
test
icebp
lret
lcall
cmp
cwtl
xor
mov
rcll
xchg
ljmp
cli
sar
aaa
jnp
jmp
popf
cltd
sarb
dec
add
mov
out
dec
xchg
mov
mov
lcall
int
jle
push
jmp
ffree
lock
add
push
test
fildll
jg
pop
push
lcall
cld
mov
add
imul
lods
push
psllw
jae
mov
adc
cmc
add
inc
ss
mov
in
jne
xlat
imul
out
js
into
rcrl
shlb
dec
outsb
call
imul
scas
dec
orb
sub
fsts
in
mov
xchg
jo
inc
mov
je
iret
mov
leave
adc
add
adc
lret
out
aam
es
add
xor
lods
shlb
rolb
iret
mov
in
inc
xchg
adc
fisubrl
add
cmp
mov
loope
add
mov
mov
pop
dec
and
xchg
movsl
push
int3
push
loope
adc
rclb
xor
add
sbb
mov
and
mov
ljmp
out
inc
push
repz
fnstsw
mov
gs
dec
mov
adc
rcl
sub
fwait
out
xor
pop
pushf
shlb
add
sub
dec
into
push
ds
mov
cmp
xchg
sbb
in
cmp
pushf
jb
int
mov
dec
je
js
add
faddl
fisubrs
adc
mov
or
add
sub
inc
enter
sub
inc
fsubs
xor
mov
adc
push
test
dec
adc
sbb
inc
adc
insb
add
test
loope
cwtl
mov
inc
cmp
push
rorl
xchg
mov
push
mov
adc
inc
pop
mov
cmp
jne
and
pop
nop
and
cmp
mov
test
mov
fisubl
or
lea
adc
pop
xchg
mov
cmpsb
xlat
cmpl
test
dec
inc
adc
rcll
mov
ljmp
pop
jbe
pushf
cmpl
es
jae
ret
arpl
mov
enter
cmpsb
imul
sahf
push
add
insb
jle
pop
inc
push
sub
or
sub
mov
jg
mov
jle
push
push
add
mov
or
inc
jns
fildll
lret
jmp
in
push
pop
push
dec
or
push
rcll
push
push
push
jg
aad
daa
add
lret
roll
adc
fcomi
int
inc
daa
arpl
dec
xchg
jb
test
insb
fidivs
xchg
hlt
cltd
mov
cs
xchg
sub
loope
cmp
lods
insl
lcall
and
out
mov
pop
and
popa
aas
out
pop
cmp
jl
push
cmp
fnstcw
push
push
xchg
leave
adc
or
and
or
ret
les
pop
lea
test
push
inc
mov
and
mov
dec
popf
jns
or
sbb
pop
idivb
lods
repnz
arpl
call
cwtl
movsl
das
andl
repnz
adc
mov
push
aas
cmp
pop
mov
jecxz
add
or
rcl
jg
pop
lahf
jmp
push
add
inc
addr16
fcomps
aad
mov
std
addl
xor
clc
fcoms
add
fisttpl
mov
rolb
or
sub
shll
push
pop
subl
mov
cmp
subl
push
fdiv
or
mov
daa
mov
shrl
lock
pop
pusha
xchg
fcmovne
xchg
push
jmp
sti
lea
nop
lods
fisttps
pop
imul
mov
sarl
xchg
inc
lods
xor
fnstenv
sbb
cmpsb
push
stc
nop
push
cmp
xor
adc
mov
or
pusha
js
mov
cli
push
stos
or
add
test
out
fisubrs
push
loop
dec
cmp
lods
icebp
adc
push
cmp
outsl
loopne
mov
out
fs
test
mov
mov
cs
inc
pop
lret
sbb
int
cmpb
sub
popf
in
dec
scas
dec
add
outsl
mov
sbb
push
adc
dec
sub
sahf
stc
fwait
and
push
into
sbb
and
int3
push
mov
jmp
jae
sub
leave
out
sub
pop
lret
ss
mov
or
out
inc
out
pop
pop
out
or
jo
outsl
lret
push
lret
or
lods
inc
lock
cmp
xor
mov
or
call
scas
push
fnsave
mov
sbb
pop
cltd
arpl
cltd
pop
cli
pop
into
lea
sub
dec
out
shll
jmp
mov
mov
sbb
mov
push
mov
sti
mov
cmp
sarl
out
cmp
pusha
pop
xor
add
pop
mov
adc
std
sub
div
push
fisubrl
mov
in
xlat
push
cmpxchg8b
std
xor
fadds
in
sbb
addr16
shll
sbb
adc
out
daa
sub
scas
in
adcl
dec
or
rcrb
inc
das
inc
sub
jmp
adc
mov
inc
aaa
call
das
mov
notl
and
nop
adcb
mov
sbb
add
jns
test
xor
test
out
push
mov
pop
stos
iret
adc
psubq
mov
out
jae
dec
mov
adc
popf
sti
lods
arpl
imul
lods
scas
mov
xchg
andb
push
push
imul
inc
dec
mov
loop
in
jl
sti
xchg
mov
sub
push
sbb
mov
sbb
ss
sbb
push
cmc
pop
stos
adc
lods
setg
fdiv
test
mov
ret
xchg
xor
paddb
adc
adc
gs
add
push
je
shrl
cmpsb
lea
arpl
cmp
adc
aaa
outsb
fimuls
and
mov
rcr
mov
mov
xor
aaa
xchg
and
pushf
adcb
jl
pushf
ss
jmp
addb
add
adc
adc
pop
jle
cld
jmp
sub
fdivl
adc
push
push
mov
std
lea
pop
mov
in
push
loope
pop
mov
pop
insl
clc
dec
sahf
femms
jne
dec
ja
iret
in
mov
pop
test
add
je
xchg
dec
jle
pop
arpl
int
or
add
sub
sub
roll
lret
cld
jg
rcrb
pusha
sti
inc
inc
clc
inc
test
fdivrs
lods
xchg
insb
shrl
aad
jno
repnz
mov
dec
in
xchg
xchg
call
add
andb
lock
push
icebp
mov
xlat
xlat
in
sub
testl
sti
das
push
ss
or
stos
js
push
leave
scas
ret
iret
fiadds
mov
shll
adc
dec
xor
mov
call
rcrl
pushf
test
aam
pop
xor
popa
pop
cltd
mov
fiaddl
xor
ficoml
stos
cltd
fists
clc
cmp
loopne
xor
cmp
lock
xor
in
scas
mov
and
repnz
cmp
outsb
shr
ret
sti
mov
push
idiv
push
mov
sub
lahf
xchg
call
pusha
mov
inc
mov
pop
add
shlb
cmp
jg
or
aam
or
push
pop
fnstenv
push
aaa
int3
in
jo
push
sbb
xlat
dec
lea
cmp
rolb
inc
ret
sbb
subb
cli
cmp
orb
pusha
sbb
mov
lcall
lds
aam
pop
push
sbb
sbb
popa
cmp
and
add
rclb
inc
js
hlt
pop
arpl
cwtl
jae
push
test
fwait
mov
cmpsl
mov
cmp
xor
xchg
add
out
mov
test
in
sbb
sub
or
dec
xchg
loopne
pushf
loope
icebp
push
mov
xor
jecxz
leave
and
cmp
fnstcw
stos
push
andl
sbb
xor
sub
hlt
mov
int
adc
and
mov
lds
jo
ss
scas
data16
mov
test
daa
gs
adc
dec
mov
inc
xchg
and
pop
sbb
inc
mov
cmp
stos
mov
adc
xchg
repz
pop
scas
imul
push
mov
loope
push
adc
popa
int
and
push
negb
clc
stos
hlt
sub
jmp
cli
hlt
ja
es
leave
xchg
inc
pop
push
popa
popf
push
sub
sub
xchg
out
iret
fildl
and
icebp
inc
nop
std
test
mov
fcoms
pop
popf
pop
fst
pop
jge
mov
sbb
movsb
rcrb
xchg
arpl
icebp
inc
imul
decl
jbe
jle
xchg
mov
jmp
push
push
add
mov
push
add
aam
mov
add
xor
fiaddl
pushf
ljmp
add
dec
insl
loope
mov
outsl
in
jl
data16
call
jno
std
cmp
inc
cltd
aam
pop
std
out
aam
dec
cmpsb
cltd
repnz
ja
push
push
inc
js
adcb
push
and
dec
into
js
cmp
cmp
int3
sub
adc
rol
movsb
xchg
cmc
cltd
push
mov
jae
push
js
sub
in
adc
and
fwait
mov
das
iret
pop
cmpl
and
iret
push
mov
add
push
out
and
sbb
in
addl
scas
dec
arpl
adc
frstor
mov
pop
add
inc
cmp
in
and
enter
xchg
jecxz,pn
jmp
mov
fisubrs
div
push
push
mov
inc
and
mov
lds
rcr
lret
popa
das
dec
jl
xchg
sbb
cmp
mov
pop
cltd
push
ljmp
dec
aam
push
es
xor
and
mov
mov
dec
push
fcoms
pop
pop
repnz
lds
cmc
out
cmp
xchg
cli
inc
es
subb
scas
aas
add
mov
pop
pop
push
cmp
inc
push
gs
mov
adc
shl
mov
mov
int
jb
dec
sahf
xchg
mov
inc
dec
jb
pop
jae
insb
fisubs
fidivl
bound
sub
mov
movsb
sbb
test
int3
and
mov
cmp
push
sbb
movsl
leave
enter
sbb
jle
leave
and
pop
das
test
push
out
fbld
or
dec
insb
mov
sahf
jae
push
mov
jo
fidivs
sbb
jecxz
xor
mov
xchg
ror
es
int3
ja
test
and
and
js
sti
adc
das
test
mov
jne
cmp
daa
outsl
and
ds
sbb
je
push
or
mov
mov
mov
sbb
push
inc
stos
add
fs
in
gs
or
fistps
cmpsb
sub
or
popa
pop
sarb
push
imul
pop
cmpsb
xchg
rol
pop
pusha
xor
add
inc
cmp
pop
nop
jp
aas
mov
sbb
add
lods
xacquire
and
mov
psrlq
data16
lods
jae
lods
adc
jecxz
gs
push
dec
repz
cmp
ljmp
or
push
jge
sbb
xchg
mov
mov
mov
push
or
dec
dec
dec
adcl
sbb
push
push
push
insl
lcall
pop
pop
scas
jbe
imul
sub
push
cmp
test
bound
aam
mov
gs
les
arpl
es
ja
and
push
std
fsub
pop
xchg
lret
loope
xchg
sbb
pop
outsl
jg
dec
cmp
mov
addr16
mov
ja
bound
push
out
xor
es
xchg
sbb
and
roll
push
enter
test
adc
outsl
and
xchg
inc
or
mov
jne
xchg
pop
inc
daa
add
push
dec
test
outsb
int3
fimuls
insl
push
test
inc
sub
test
push
sbb
mov
jp
mov
xchg
push
sub
repnz
and
inc
ffree
leave
in
push
in
mov
movsb
dec
push
out
roll
ljmp
lea
outsl
shlb
test
loope
fwait
dec
sbb
pop
cwtl
inc
imul
mov
jno
rcrb
aaa
or
adc
mov
inc
and
roll
or
ret
stc
dec
lcall
sbb
push
xchg
xor
mov
mov
xchg
xor
add
jecxz
push
into
test
scas
test
cltd
pop
sbb
cmp
aam
xchg
sub
fmull
jno
andl
jns
add
cmp
into
mov
pop
cmpsl
sbb
push
mov
leave
mov
sub
ret
mov
lods
insb
leave
mov
jp
into
mov
sbb
repnz
xchg
popa
cmpsb
aas
cli
sbb
pop
daa
pop
and
imul
mov
dec
jne
sbb
adc
push
pop
push
insl
sahf
lods
pop
mov
mov
sub
repnz
pop
out
dec
lret
xor
xchg
mov
shlb
enter
jae
test
mov
pop
lea
sbb
inc
in
mov
imul
mov
hlt
ret
inc
mov
or
aas
sbb
sbb
mov
lea
insl
pushf
sar
mov
xchg
divl
push
mov
ret
cmp
inc
jp
or
lahf
aas
push
fldl
sub
cmpsb
je
push
pop
or
shrb
pushf
or
push
ja
push
fnsave
mov
or
adc
dec
pop
out
adc
dec
mov
cmp
sub
movl
sbb
cltd
ds
jp
daa
in
xor
mov
into
mov
mov
cmp
cltd
lcall
sti
rcr
dec
lret
lock
xchg
cli
jbe
sahf
pop
cmp
xor
and
cmp
int3
mov
adc
std
mov
mov
addr16
aad
testl
adc
test
inc
and
imul
mov
es
cwtl
xor
push
das
mov
fldt
stos
das
icebp
cltd
js
cmp
mov
or
pop
jb
xchg
ret
movsl
fwait
cs
out
cltd
out
push
inc
mulb
cmp
std
es
xchg
in
lea
icebp
jne
ret
inc
inc
iret
inc
mov
fdivl
pop
loop
add
imul
push
mov
ss
inc
and
ret
push
das
push
adc
adc
fldcw
popf
loope
mov
push
xchg
sbb
mov
movsl
scas
mov
fcompl
dec
cmc
xchg
add
inc
adc
notb
add
and
mov
jmp
add
and
inc
dec
dec
cwtl
inc
test
call
sub
mov
inc
fbld
or
or
xor
pusha
fildl
mov
xchg
push
inc
insl
in
loop
jge
and
cmp
movsl
insb
mov
dec
mov
test
push
je
in
shll
test
pop
stc
dec
dec
sbb
inc
mov
jle
xor
sbb
in
or
mov
jl
mov
sbb
cmc
push
sbb
into
xor
popa
and
es
scas
lea
adc
pop
sbb
xchg
inc
push
daa
shl
outsl
std
data16
cmp
arpl
pop
mov
fists
fistpl
imul
movsb
icebp
mov
popa
test
mov
mov
jne
dec
mov
dec
pop
shl
jg
add
jmp
das
out
loope
fs
das
xchg
xchg
dec
mov
aad
cmp
sub
movsl
fisubrl
mov
popf
ret
add
rcr
mov
inc
add
pop
pop
jns
lcall
xor
jg
rol
repnz
sahf
mov
jg
sbb
and
les
push
mov
icebp
sub
adc
sub
lock
aad
jns
inc
mov
js
fisttps
es
mov
mov
pop
and
xor
push
fisubs
and
inc
fisubrl
or
cmpb
mov
data16
cltd
xor
xchg
mov
inc
into
mov
cmpsb
imul
and
hlt
push
into
sbb
lods
arpl
xchg
mov
and
nop
andb
add
xchg
mov
inc
add
ret
mov
movsb
fcoml
leave
sahf
jg
test
mov
cmp
out
push
cltd
lret
mov
test
mull
int3
sub
mov
sbb
cltd
jns
adc
sbb
lahf
leave
mov
out
xchg
jns
jmp
lahf
std
push
ret
aas
mov
in
mov
into
imul
int
insb
popa
ret
fisttps
out
add
add
testb
loope
outsl
inc
mov
cmp
dec
insl
in
imul
jb
test
add
ss
xchg
sahf
in
inc
pop
into
lds
out
mov
lds
inc
sti
xchg
inc
notb
mov
cmpsl
or
loope
jl
pop
pushl
add
sub
or
inc
ja
fs
mov
add
mov
dec
sbb
sbb
xchg
pop
mov
sub
sub
push
sub
mov
mov
subb
outsb
and
push
mov
xor
rorb
push
pop
fcoml
jge
stos
jns
leave
mov
push
jnp
in
shll
push
mov
inc
push
lahf
loope
add
cli
xor
movb
jb
pop
das
push
sub
push
mov
jno
cmp
or
mov
lods
and
inc
call
sbb
inc
je
xchg
adc
mov
sub
push
je
xchg
ljmp
rcll
dec
shrl
pushl
adc
pop
mov
aas
inc
sbb
xor
push
jmp
lahf
mov
imul
je
inc
clc
add
push
stc
cmc
imul
pop
ret
sbb
sbb
pop
cmp
sub
mov
iret
jl
mov
dec
inc
cmpsb
mov
fst
insl
aas
fidivs
outsl
movsl
lret
push
xchg
sub
outsb
mov
setl
sahf
inc
lea
es
sbb
sub
and
loopne
xlat
icebp
testb
or
addr16
loope
test
sbb
xchg
pusha
data16
adc
inc
loopne
push
lods
pusha
mov
and
mov
jmp
icebp
mov
test
and
jbe
adc
rcrb
jmp
mov
jbe
pop
inc
or
fsts
mov
pop
mov
xchg
pop
dec
inc
push
in
lods
mov
testb
enter
xchg
sub
cmpsb
fmulp
nop
pushf
je
inc
imul
inc
push
out
popf
pop
mov
test
repz
sti
dec
jle
sub
inc
push
adc
xor
jp
cmp
pop
out
lret
push
je
xor
pop
insb
cmp
fldcw
sub
push
call
out
in
stos
mov
repnz
imul
pop
enter
imul
cmpsl
lea
cltd
cmpsb
int3
push
push
fistps
pop
insb
jg
jno
es
in
jb
inc
cwtl
mov
out
adc
push
dec
data16
xor
imul
test
sti
divl
xchg
cwtl
scas
xchg
cmpsb
pop
imul
xlat
movsl
push
cmp
cmpsl
xor
xor
sti
jmp
jb
fdivrl
mov
jo
jnp
xor
add
jl
sbb
pop
dec
xlat
jg
mov
enter
aad
mov
inc
and
push
cmp
fwait
sub
mov
add
cwtl
jp
fbstp
adc
inc
enter
push
lods
imul
dec
aad
sub
xchg
inc
sbb
fldcw
shll
sbb
inc
js
daa
pop
shr
scas
sub
cli
sbbb
adc
sbb
out
aas
dec
mov
mov
test
cmp
sbb
inc
xchg
test
pusha
cltd
sub
rorl
cmp
mov
sbb
cmp
pop
pop
mov
mov
jo
cmp
mov
jb
jno
mov
cmpsl
pop
in
outsb
inc
adc
xor
lods
sbbb
int3
in
dec
xor
cmp
fwait
cmpsb
imul
popa
cmpsb
push
icebp
push
jp
sbb
ret
and
mov
in
fistps
mov
dec
add
pop
cmpsb
fidivrs
adcb
xor
rcll
pusha
aam
mov
rcrb
mov
std
or
sahf
out
std
out
sub
pop
stos
test
fisttps
shr
mov
stc
push
stos
leave
add
pop
inc
frstor
mov
aaa
out
push
fsubp
nop
sub
mov
cmpsl
xchg
sbb
dec
dec
icebp
jo
xchg
mov
ljmp
lods
xchg
sub
jnp
frstor
je
inc
jbe
stc
insl
lea
push
mov
xor
out
xchg
dec
sub
pusha
xor
mov
adc
cltd
nop
call
xchg
inc
outsb
pop
iret
loop
loopne
add
sbb
and
dec
cmp
or
mov
sbb
mov
leave
ja
add
xchg
fmuls
xchg
imul
inc
mov
adc
enter
shll
test
cmc
shr
xor
xor
mov
in
inc
loope
fsubl
std
jae
ret
clc
mov
dec
andl
cmpsl
cmp
repnz
cmp
bswap
test
dec
mov
inc
mov
xchg
loop
sbb
adc
push
jp
test
ret
xor
jno
jo
fstl
cmpsl
movsl
sub
adc
xchg
test
pop
dec
pop
mov
push
mov
jb
out
je
imul
xchg
mov
dec
nop
jg
mov
shll
incl
mov
adc
incb
adc
adc
jbe
je
jae
dec
popa
in
add
icebp
add
fcmove
jl
mov
mov
jmp
fwait
in
in
in
mov
orl
loop,pn
pop
xchg
xor
push
lock
loope
xor
mov
xor
pop
test
les
or
xor
loope
mov
addl
adc
adc
jmp
stc
arpl
gs
sbb
je
aad
mov
or
inc
sub
jo,pt
xor
cmpsl
outsb
in
mov
loop
xor
pop
sbb
sbbl
aaa
add
imul
or
inc
fiaddl
dec
and
adc
out
add
shlb
out
in
lods
mov
mov
jo
add
out
add
cmp
adc
sub
test
push
jl
jne
xlat
clc
mov
cwtl
xchg
adc
push
xor
sub
adc
dec
movsb
jae
rorl
mov
xchg
adc
inc
push
arpl
les
js
jle
jge
adc
in
pop
test
push
sbb
or
push
out
xor
js
add
imul
filds
push
jl
into
aaa
cmc
clc
cmp
sbb
repz
or
fsubrs
cld
dec
adc
int3
dec
dec
pop
lret
imul
insl
mov
stc
insb
imul
and
popf
mov
iret
sub
push
cmp
outsb
or
pop
push
add
mov
faddp
int3
mov
dec
in
adc
clc
data16
mov
adc
adc
ljmp
test
jg
pop
or
jg
js
inc
scas
pushf
mov
sub
jg
pusha
sbb
rolb
mov
addr16
mov
cmpsb
inc
stos
inc
test
xor
add
pop
inc
lcall
imul
imul
xor
adc
in
pusha
push
pop
add
mov
mov
jo
inc
movsl
pop
nop
insl
std
loop
stos
or
rcr
pop
mov
dec
mov
jl
jo
or
jle
stos
mov
je
sbb
push
push
cli
dec
jmp
movsl
add
mov
aam
push
mov
imul
push
xor
xchg
ja
rcrl
out
push
cwtl
popa
xor
out
ljmp
and
stc
xor
jae
mov
negl
or
mov
jnp
aaa
daa
loope
movsl
call
adc
dec
or
div
sbb
jne
mov
mov
jne
call
out
shlb
jge
add
mov
or
push
and
lahf
test
lods
pop
imul
in
nop
loop
popf
fstpt
gs
add
xor
mov
mov
sarb
imul
push
data16
jle
out
out
sbb
xor
mull
mov
lahf
scas
jle
push
ror
aad
in
jl
dec
sub
mov
mov
xchg
adc
in
or
clc
push
lock
movntq
pop
or
aam
inc
jo
aam
mov
leave
test
add
jbe
data16
xchg
or
mov
cmp
divb
stc
out
push
and
mov
inc
js
sub
fiadds
or
sbb
jecxz
jno
adc
add
push
xchg
cs
pop
jg
ret
cmp
sbb
out
and
insb
popf
testb
dec
iret
out
push
and
test
mov
xor
xor
push
xchg
sarb
xor
aam
mov
mov
pushf
movsl
aas
xor
mov
sbb
cmpsl
pop
inc
adc
in
mov
jg
inc
jl
mov
sub
daa
or
or
je
xor
outsb
mov
mov
subl
loopne
or
test
and
xor
lcall
sub
and
arpl
xchg
push
xor
cmp
mov
mov
mov
rclb
and
push
imul
xchg
pop
cmpsb
or
rolb
fcmovu
add
mov
jle
mov
inc
loop
xor
cmpsb
xorb
jbe
jecxz
xchg
test
cmpsl
scas
add
addr16
sub
pop
sub
push
xor
mov
and
aaa
and
ror
sbbl
rcrb
mov
mov
xchg
dec
loopne
iret
iret
aas
fisubl
lea
sub
or
std
add
pop
mov
push
mov
push
cmp
pop
mov
add
push
xchg
sbb
subb
xchg
push
pop
sbb
aad
mov
aaa
out
pusha
add
push
stos
sbb
mov
add
imul
xchg
in
add
dec
fdivrp
adc
hlt
outsb
pop
push
pop
negl
repnz
mov
or
scas
pop
sub
hlt
or
cmpsl
mov
cmp
out
ret
cmpsb
mov
ja
arpl
sbb
mov
sbb
push
loopne
mov
js
fldenv
xor
lods
clc
lret
dec
mov
fistl
add
test
jb
jnp
sbb
mov
sti
inc
dec
cs
rol
pop
sub
in
daa
leave
sti
mov
fcomip
nop
jns
fcoml
dec
movb
xor
js
fdivl
subl
mov
jbe
pop
sbbl
pop
xchg
sub
pushf
jns
jle
mov
mov
je
popf
bsr
or
sahf
xchg
das
dec
lea
or
aad
jo
xchg
mov
push
and
xor
fwait
xchg
jp
ja
mov
mov
pop
or
push
dec
outsb
inc
dec
imull
mov
add
xor
rclb
xchg
jno
stos
cmp
mov
icebp
insb
mov
mov
jbe
cltd
mov
xchg
push
popf
aaa
push
cmovb
push
jecxz
and
xchg
movsb
fstp
mov
and
sub
in
cltd
jno
push
inc
in
test
and
jns
or
pop
cmc
add
pop
add
dec
mov
xlat
loope
hlt
arpl
push
leave
outsb
add
imul
or
inc
or
sbb
add
fs
xchg
mov
movsb
mov
es
cmpsl
pop
mov
dec
inc
bound
insb
nop
loopne
frstor
lds
les
mov
enter
and
dec
add
pop
shl
inc
mov
aam
mov
repnz
mov
popf
jo
fwait
jecxz
mov
iret
add
fbld
in
adc
arpl
adc
movsb
js
push
or
mov
std
nop
into
sbb
and
and
sub
imul
inc
sti
paddusw
jg
and
mov
lods
adc
jmp
cmp
push
sub
and
dec
sub
imul
divl
inc
into
jecxz
lea
cmp
push
jl
mov
jb
insl
icebp
insl
out
rcl
jge
inc
stos
stc
loope
and
inc
fcmovu
addr16
cmc
pop
addb
jb
and
jno
mov
xchg
or
lods
out
fnstsw
test
mov
inc
fimull
mov
dec
ret
xchg
xor
dec
lods
mov
adc
cwtl
stos
cmp
sarb
xor
add
xor
cltd
gs
and
js
mov
cli
cltd
sub
xchg
les
push
pop
adc
in
push
cld
sbb
lret
xchg
cld
cs
repz
xor
jl
adc
scas
pop
out
adc
in
hlt
push
lret
push
cmpsl
sub
xchg
adc
cld
sub
adc
dec
xor
outsb
popa
xchg
and
bound
sbb
test
into
and
cltd
mov
ficomps
push
in
xor
nop
dec
jns
sbb
push
jp
add
fsubl
shrl
iret
test
fsts
sbb
aas
inc
jne
mov
dec
cmp
or
aam
dec
add
push
and
mul
jbe
test
daa
xor
mov
das
mov
cli
frstor
loopne
cmp
jns
lds
mov
les
adcb
cmc
dec
inc
shlb
andl
fs
std
mov
add
inc
dec
addr16
sub
xchg
or
inc
push
test
adc
ss
imul
adc
xchg
pop
push
outsb
xor
inc
cs
test
xchg
mov
test
ss
xchg
xor
mov
cmp
mov
movsl
push
dec
mov
out
push
fwait
push
mov
inc
mov
jmp
mov
push
push
xor
dec
mov
inc
lret
dec
cld
inc
push
lret
les
pop
ret
mov
int
mov
shl
popa
popf
inc
and
adc
cmpsb
mov
popf
xchg
mov
es
insb
pop
loop
popl
das
nop
les
xor
data16
rol
cmp
jns
nop
imul
rcr
jnp
xchg
leave
inc
push
add
cmpsl
andps
xchg
in
cltd
enter
jbe
inc
add
sbb
push
outsl
push
pop
in
fistpl
sbb
jae
out
shrb
cltd
mov
incb
or
bound
je
ret
gs
mov
subl
loop
stos
les
popf
add
pop
mov
adc
hlt
lods
or
loope
shr
repz
add
in
xchg
sbb
mov
adc
xorl
shlb
jb
mov
adcb
mov
into
mov
out
sub
fsubrl
push
enter
shrl
pop
xchg
aaa
lds
mov
into
ffree
fsubrl
pop
lret
xor
lods
loopne
jo
filds
mov
test
rol
std
dec
xor
xlat
icebp
sbb
dec
push
mov
xchg
jae
inc
nop
mov
fstpl
jle
xor
cwtl
inc
xor
jo
xor
mov
mulb
call
aaa
mov
push
jg
cs
mov
loope
lods
push
mov
and
mov
and
or
subb
and
xor
adc
das
xor
cmpsl
in
or
dec
movsl
out
enter
arpl
divb
fstps
mov
sub
ret
xchg
rcll
inc
mov
scas
insb
cmp
bound
pop
cld
pop
pop
test
mov
push
sub
sbb
icebp
lcall
jg
test
lahf
mov
inc
dec
add
pop
outsl
mov
adc
fnstenv
jne
popa
mov
mov
ljmp
arpl
mov
cmpb
imul
mov
fwait
rcr
int3
iret
and
and
sbb
add
cmpsl
add
add
shll
rorb
jl
push
sbbl
incb
das
sarb
shrl
loope
jecxz
and
ds
in
or
inc
adc
jbe
int
jno
aam
mov
and
xor
stos
notb
sub
pop
pop
sbb
push
dec
pextrw
and
and
fwait
mov
and
xor
dec
ljmp
mov
pushf
sbb
cmc
add
pop
mov
inc
je
pop
insl
repz
cmpsb
fstl
mov
lret
shl
mov
xor
push
push
in
and
rclb
xchg
push
inc
dec
pop
into
jo
and
loope
adc
cld
ja
and
aaa
jg
jnp
or
inc
adc
jbe
js
adc
out
lret
test
outsl
leave
scas
add
jecxz
inc
pop
adc
mov
or
xlat
jb
cltd
mov
mov
out
js
cmp
push
inc
shl
shlb
int3
mov
xchg
mov
out
out
dec
cmp
mov
testl
and
pop
lcall
add
sbb
and
xor
das
fxch
in
xor
loope
enter
into
inc
xorl
and
or
and
fs
je
adc
inc
pusha
clc
push
aaa
adc
dec
stos
push
push
fsubs
xchg
cmp
xchg
adc
mov
jae
lea
pop
pusha
sbb
mov
sahf
orb
sub
or
outsl
ficoml
sub
lock
cmp
aaa
in
dec
sbb
xor
adc
lret
mov
mov
add
jl
push
mov
cmpsl
nop
pop
js
dec
adcb
push
fildll
sub
mov
mov
dec
nop
and
cmc
jb
ss
dec
sbb
dec
ffree
push
lea
jns
into
push
loope
and
add
aam
push
inc
sbb
dec
jbe
testb
jle
cmp
fldcw
fildl
inc
or
ja
loopne
mov
es
or
mov
jns
dec
pop
or
outsl
dec
mov
xor
cs
push
pop
add
sbb
enter
push
jge
xor
movsb
push
out
test
call
jne
xchg
fstps
cmp
imul
subl
mov
pop
ficompl
push
sbb
cmp
mov
jb
mov
call
mov
bound
jbe
or
jge
adc
leave
dec
arpl
insl
fistps
xchg
shll
mov
pop
mov
movsl
xlat
push
cli
xor
imul
push
imul
sub
loope
mov
test
ss
fiaddl
pop
in
lock
orl
addl
movsb
jns
stc
ljmp
mov
mov
cltd
push
rclb
push
arpl
aam
popf
add
sub
sbb
fildll
mov
cli
jno
fsubr
jbe
iret
clc
pusha
xchg
mov
nop
mov
sbb
dec
popf
icebp
xchg
adc
stc
in
and
mov
lcall
pushf
daa
scas
jae
test
xchg
es
aam
in
pop
das
sbb
pusha
fiaddl
outsl
inc
movsb
inc
fdivs
cld
xchg
out
or
aas
jle
lcall
jo
test
or
sbb
inc
mov
adc
rol
jmp
inc
fs
inc
sti
fwait
insl
mov
jle
pushf
sub
rcl
test
jae
in
adc
xor
jmp
fmull
cmp
mov
jbe
mov
sub
xor
mov
dec
addl
in
mov
xor
jge
arpl
sbb
cmc
cld
nopl
repnz
fisubs
mul
clc
rol
hlt
add
cld
jmp
mov
les
sbbb
sti
in
scas
adc
add
sbb
mov
pop
cmp
or
int3
xor
and
mov
in
ret
insl
enter
pop
fisubs
add
leave
fiaddl
jmp
cmp
cld
popf
add
repz
movsb
dec
lock
add
sbb
inc
cld
xor
int3
cli
push
fidivs
push
pop
mov
pop
lcall
vmovq
mov
mov
pop
fnstcw
inc
push
adc
jb
ja
mov
or
popf
xor
xor
dec
fldl
in
outsb
pop
test
push
data16
das
jne
movsb
xor
repz
call
das
fbld
mov
addr16
jmp
adc
dec
push
in
popa
dec
scas
scas
cmp
leave
mov
cmc
lret
push
aad
icebp
imul
popf
mov
lds
fnsave
lret
cld
push
add
xchg
xchg
cmp
je
inc
test
pop
cmpsl
out
out
insl
inc
js
outsb
or
adc
outsb
push
hlt
mov
cmp
adc
sub
xchg
jecxz
cmp
movsb
imul
in
mov
xor
inc
sbb
jmp
xlat
scas
inc
je
add
pusha
aam
jl
idivl
jb
or
or
int3
repz
jg
loope
insl
push
lds
mov
or
mov
and
test
fsts
test
incb
cmpsb
jno
movsl
sahf
push
nop
int3
gs
jg
jae
add
cld
cmp
lahf
and
mov
setb
mov
sbb
mov
pop
pop
and
call
jle
and
xor
adc
xor
repz
and
add
stc
add
jge
loop
push
lock
inc
mov
dec
sub
and
js
aaa
xchg
push
int3
add
arpl
test
add
push
sbb
sbb
push
in
lds
mov
ret
pop
push
jp
jl
scas
adc
xor
xchg
test
mov
xchg
jns
out
push
out
out
sarl
lock
push
outsl
sbb
jno
xor
adc
dec
nop
sahf
stos
mov
and
or
out
xor
cs
mov
or
push
pushf
push
xchg
push
mov
xchg
push
cmp
inc
mov
xchg
andb
jno
loop
inc
adc
ror
mov
dec
das
mov
pop
les
push
stc
hlt
pop
sti
int3
push
sbbb
jle
inc
mov
ffree
out
sbb
call
call
xor
pop
sub
in
shlb
je
fs
into
mov
mov
mov
out
mov
fadd
pop
in
push
stos
test
or
and
mov
insl
xchg
je
pop
shll
fld
sbb
loopne
pop
das
xchg
jb
ja
adc
es
in
mov
cltd
add
xor
fisubl
inc
and
mov
fdivl
cmp
shrb
idivl
sbb
cmpsb
push
rcll
insb
mov
testw
call
or
sbb
repnz
outsl
dec
int
aam
or
pushf
subb
rcr
loop
test
arpl
lahf
aam
js
jl
je
xor
jae
addr16
xor
pusha
jle
frstor
movsb
insl
loop
jl
dec
xchg
ja
into
aaa
sub
stos
cmp
cmc
or
xor
and
stos
outsl
lds
in
xor
addb
data16
filds
out
push
mov
inc
xor
lahf
lahf
daa
cli
les
or
bound
mov
sbb
pextrw
popf
adc
push
mov
popa
pop
data16
cmp
leave
std
ret
popa
ficoml
outsl
pop
lcall
mov
out
mov
pushl
and
jne
in
jb
fld1
ljmp
mov
jle
add
pushf
inc
inc
push
mov
ljmp
in
stos
in
iret
push
jecxz
adc
sub
and
cmp
jle
cwtl
jo
pusha
mov
push
pop
decb
stc
loop
scas
repnz
push
cvtps2pi
or
cmp
test
sbb
sbb
jb
loope
les
popf
sbb
jl
jge,pn
scas
sti
push
jno
jmp
push
and
mov
xchg
test
jno
dec
imul
fcos
popa
jns
out
mov
or
arpl
ljmp
icebp
adc
orl
push
jl
lcall
and
sti
xor
mov
or
enter
push
sbb
jl
test
mov
dec
repnz
mov
push
out
sbb
inc
and
jo
mov
pop
jb
add
ja
jmp
adc
xor
or
adc
jecxz
std
fmull
jbe,pt
loop
xchg
cmpsb
inc
sbb
or
mulb
emms
dec
in
lret
pop
push
cltd
dec
mov
fwait
aam
imul
lret
mov
mov
pop
or
push
into
in
fs
cmp
add
jo
dec
mov
clc
in
jl
insb
inc
jle
and
shlb
test
leave
sbb
jg
clc
adc
cmp
cwtl
mov
adc
jge
stos
push
or
add
cmp
push
rorb
push
das
lcall
cmp
cmpsl
pop
add
loope
int3
rclb
fimuls
add
in
push
test
inc
lock
js
repnz
pop
pop
lret
jmp
adc
inc
push
imul
lret
out
arpl
pushf
add
mov
push
in
xchg
mov
push
xor
ss
or
sbb
cmpsl
pop
rorl
jbe
in
pop
ss
outsb
sbb
fidivrs
mov
jg
js
mov
adc
aam
and
push
sbb
add
scas
repnz
fistl
bound
inc
xor
pop
ja
icebp
mov
push
ret
jecxz
cli
lret
push
testb
sub
sarl
pop
pop
out
movsl
cmp
insb
sub
xchg
and
xchg
scas
popf
inc
in
loop
jg
test
push
or
xor
dec
faddl
mov
pop
jp
push
pop
bound
mov
loop
mov
aad
imul
sarl
xlat
call
stos
mov
pop
dec
cmp
mov
push
mov
xchg
pop
sub
fs
push
mov
sti
cmpsb
inc
cmp
stos
cltd
test
push
arpl
das
xor
fdivrl
fwait
ret
pop
call
aas
enter
add
cmp
test
xlat
xchg
xchg
icebp
das
test
jnp
xor
xor
out
pop
push
mov
sub
das
adc
loop
scas
je
clc
daa
adc
or
aas
lods
mull
lret
clc
jb
push
adc
and
nop
mov
test
cmpl
mov
mov
out
adc
push
cmc
fstps
sahf
incb
cs
fnstsw
push
cmp
add
mov
jp
cmc
sub
iret
fwait
data16
sbb
mov
mov
and
js
and
daa
test
inc
je
in
popl
xchg
pop
or
cmovnp
lods
cmp
jle
xchg
sub
push
clc
bound
stc
sarb
mov
pop
nop
in
fcmovbe
insl
dec
in
and
mov
sbb
and
bound
adc
out
adc
rcl
add
test
cld
pushf
iret
jnp
pop
add
cld
into
daa
mov
sub
ja
sbb
mov
js
pop
aad
xor
adc
int3
pop
mov
pusha
stos
jle
xchg
push
loopne
jmp
inc
outsl
movsl
cmp
lret
das
and
sub
and
out
test
je
and
push
pop
pop
cwtl
imul
mov
xor
cwtl
out
cmp
jnp
ds
cwtl
xchg
icebp
mov
cmc
xchg
and
sub
pop
jae
cmp
inc
jb
or
dec
cli
mov
xor
into
xor
mov
test
inc
bound
xchg
aaa
insl
mov
test
shll
mov
push
outsl
into
mov
pop
loop
cld
adc
int3
movsl
pop
jp
in
xlat
in
test
and
mov
popa
cmp
test
shrl
dec
sbb
das
xchg
pop
aad
pop
test
mov
xor
lret
sahf
loope
out
push
sbb
inc
xchg
rol
shr
xchg
add
outsb
movsb
dec
loop
push
cmp
lret
mov
icebp
adc
mov
fdivs
cwtl
movsl
pop
outsl
sbb
shlb
pop
mov
ds
sbb
iret
inc
push
sub
mov
out
adc
xchg
icebp
pop
xchg
ret
pop
iret
popf
pop
adc
add
push
xlat
movsb
insb
fwait
xchg
repz
mov
add
sti
mov
scas
sub
add
movb
or
pop
fistpl
dec
adc
mov
cmp
pop
and
js
fdivrl
adc
adc
jge
orl
lea
popa
je
leave
ja
shll
inc
sbbb
xlat
mov
sub
mov
shll
aam
out
out
cmp
pop
sti
mov
pop
cs
std
orb
je
sub
push
and
fistps
repz
push
jl
cmp
fwait
insl
xor
js
push
xor
jle
push
dec
out
lret
mov
mov
dec
in
ret
cmp
push
mov
test
xor
hlt
mov
shr
mov
fistpl
shrb
out
add
sbb
and
add
lret
push
mov
insl
das
or
or
xchg
js
mov
lahf
fcomp
pusha
sub
fdivl
mov
bnd
sbb
bound
inc
mov
ljmp
aaa
pavgb
mov
push
adc
sbb
inc
cmpsl
hlt
dec
shl
pop
loop
hlt
pop
sub
les
mov
add
shl
xchg
xchg
out
push
aas
lea
and
mov
add
pop
icebp
jae
stos
gs
repnz
jle
out
lret
outsb
mov
int3
dec
add
push
aaa
mov
push
data16
xchg
dec
mov
cs
mov
inc
pop
mov
mov
les
jl
push
add
jnp
xchg
sub
insb
lahf
mov
inc
xchg
test
xchg
sbb
mov
inc
scas
stc
dec
int
xor
mov
fwait
push
pushf
rorl
pop
and
dec
push
push
iret
fwait
push
jne
dec
mov
mov
inc
std
pop
fldt
xchg
incl
mov
jnp
or
rcr
add
dec
out
pop
xchg
xor
shrl
fcmovnb
xchg
and
push
fdivl
mov
and
mov
shll
les
scas
movsl
lcall
ds
xchg
cmp
jmp
xor
lret
sahf
xchg
aas
shll
pop
or
pop
sbb
pushf
int3
out
mov
cmc
add
out
repz
inc
xchg
shll
push
dec
cmpsl
das
js
sub
sbb
jg
inc
scas
lret
imul
lds
add
jo
fcoml
mov
mov
stc
popa
lds
test
cli
popf
ds
inc
cmpsl
add
cwtl
cmp
and
push
dec
pusha
xlat
daa
pop
pop
mov
add
cmp
push
or
ja
loope
fwait
das
out
pop
cmp
sbb
test
pop
xchg
sti
sbb
cwtl
sub
lock
int
mov
mov
add
ret
rcll
pop
inc
aam
adc
movsb
or
dec
and
lcall
inc
xchg
js
mov
xchg
int3
sbb
shrl
adc
imul
jmp
cs
fmull
fiaddl
fcmovnb
and
fildl
jmp
repnz
and
nop
nop
pushf
xchg
mov
stos
sub
cwtl
repnz
xchg
xlat
add
xchg
cld
pop
pushf
cltd
bound
jbe
mov
mov
lds
popf
out
xor
sarl
jmp
out
push
xchg
popf
test
cmp
fdivrs
jo
andb
jmp
ror
repnz
push
dec
xabort
xor
leave
push
hlt
loope
or
js
icebp
push
add
mov
ss
fadd
cmp
push
adc
ficomps
loopne
mov
testl
dec
xor
or
jge
lods
lea
call
and
mov
jg
ret
mull
lahf
ret
or
dec
inc
xchg
jecxz
jno
fldl
adc
adc
sarb
mov
fistpl
jmp
pop
pushf
lret
push
mov
jl
mov
repz
lcall
sbb
cli
out
in
inc
pop
mov
jg
gs
les
cmp
mov
cwtl
push
callw
dec
lea
pop
js
sbbl
filds
or
out
or
pop
lahf
pushf
sahf
and
dec
sub
scas
jge
std
adcb
add
mov
ljmp
movsb
jns
fcmove
js
push
cmp
and
mov
mov
or
pop
xor
or
xchg
lea
add
dec
pop
jne
movsl
mov
inc
pop
sub
call
mov
cmp
mov
jno
jle
jge
jnp
jbe
loopne
cs
inc
outsl
lock
push
push
lods
pop
mov
shl
mov
fdivl
shlb
jp
pop
add
aam
inc
into
mov
dec
mov
mulb
outsl
loopne
mov
test
hlt
dec
mov
push
sbb
xchg
push
aaa
mov
into
pop
pop
cmp
stos
mov
lock
mov
add
insl
cmpsb
xor
xor
mov
fcos
ds
mov
push
insb
push
jmp
add
adc
fxch
lret
fwait
xlat
cmc
dec
popf
xchg
lods
sbb
xchg
das
sbb
xor
pop
aas
mov
flds
add
sub
aas
incl
fcmovnbe
add
aam
test
mov
sbb
push
push
sub
mov
mov
xor
shrb
sub
mov
inc
pop
xorb
enter
and
out
push
pushf
movsb
lcall
call
in
loop
stos
cvtps2pi
and
daa
stos
or
in
and
jle
mov
rcll
or
outsl
mov
mov
jle
push
pop
sub
nop
push
lea
inc
mov
faddl
mov
inc
or
mov
sub
pusha
add
cli
ja
mov
cmp
xchg
push
lea
aas
mov
lcall
mov
mov
lds
pop
aaa
ret
and
mov
insb
xor
xor
or
test
outsl
arpl
sar
pop
sarb
sbb
movsl
sbb
test
xchg
or
pop
xchg
int3
sub
fmull
fs
push
out
adc
nop
mov
gs
int
cmpsl
das
addl
jb
push
test
mov
xor
sbb
ret
pop
mov
sub
sti
jnp
mov
lds
mov
addl
ja
faddp
xchg
aad
outsl
into
lea
insl
push
ficompl
cmp
lock
cmp
aas
fisubrl
push
repnz
or
pop
cmp
cmp
lret
iret
sub
sub
sahf
xlat
xor
orb
aam
stos
pushf
add
fcoms
mov
push
sti
and
repz
inc
lea
repz
mov
jne
in
jae
subb
mov
out
and
jmp
xchg
test
ss
xchg
or
fpatan
cwtl
scas
and
pop
arpl
mov
mov
mov
mov
fisubl
sti
fwait
pop
in
js
push
std
inc
mov
fistpl
mov
pop
sub
loope
mov
lea
jg
je
scas
stc
cwtl
ficoms
rcrl
dec
sbbl
pop
shlb
mov
sbb
xor
mov
ljmp
jp
sarl
imul
jg
mov
jno
mov
test
je
adc
leave
mov
test
sub
xor
insl
fists
dec
stos
fdivl
fldcw
push
shlb
cs
ljmp
test
mov
and
mov
inc
out
lret
jno
xor
popf
or
shll
sbb
xchg
cld
mov
test
mov
xchg
cmp
mulb
mov
sbb
jle
mov
inc
lcall
mov
stc
scas
push
xor
ss
ret
mov
mov
and
lahf
mov
or
lret
sub
jmp
pop
push
jg
fisttps
ret
push
mov
mov
xor
jbe
fstpt
push
sti
mov
mov
dec
ljmp
rclb
pop
mov
stos
jno
xor
stc
jne
ret
and
rcll
cs
clc
imul
test
mov
outsb
movsb
loope
inc
std
lret
ljmp
pushf
nop
mov
in
sbb
dec
dec
adc
push
insl
fmuls
fsub
mov
shlb
or
daa
popa
add
ret
inc
shlb
jmp
jnp
adc
daa
add
in
adc
mov
add
mov
es
inc
xchg
fwait
aad
lret
fldenv
shll
xchg
inc
jle
pop
jecxz
and
xchg
inc
dec
lea
adc
cmp
mov
out
dec
lea
loopne
rclb
jae
mov
pushf
aam
fs
divb
mov
inc
sub
nop
fs
mov
das
push
aaa
pop
sbb
pop
xchg
inc
das
dec
in
jg
sbb
lret
mov
push
ds
add
mov
ds
call
mov
adc
int
adc
lahf
lahf
iret
push
movsb
inc
lods
sti
mov
dec
jl
fmul
xor
scas
imul
clc
xchg
gs
jmp
jb
dec
and
sbb
add
sbb
outsl
pop
sbb
and
mov
inc
aas
mov
nop
inc
pop
test
pop
sub
mov
mov
lods
jno
lret
arpl
iret
push
mov
in
sbb
jl
in
inc
mov
mov
xchg
mov
jmp
push
enter
push
xchg
outsl
movsl
fs
pop
bound
sbb
lahf
push
clc
aaa
sub
sbb
pusha
cmpl
jmp
mov
jno
cmp
adc
out
cmpsl
sub
addb
scas
loopne
add
sub
adc
add
arpl
jb
xor
out
stc
pop
dec
test
mov
sbb
jge
xchg
jne
mov
mov
and
ror
lea
mov
lea
dec
pop
popf
stc
adc
out
pop
jnp
mov
fs
divl
loope
fdivs
cmp
dec
out
inc
stos
inc
and
jecxz
scas
hlt
xlat
pushf
nop
insl
popf
add
insb
int3
push
jge
int3
outsb
icebp
int3
in
aam
xlat
sub
rcrb
and
movsl
clc
push
mov
add
jg
jge
enter
mov
das
pop
xor
push
push
xorb
mov
cmp
imul
inc
xlat
mov
lret
sbb
mov
sbb
inc
je
cmp
sub
imul
dec
cmpsb
ret
jge
xor
inc
fdivl
js
inc
mov
and
fcomps
push
std
push
sub
fnstcw
imul
xor
jp
mov
fisttpll
mov
int3
jg
cmp
cmp
inc
vmwrite
jo
stos
xchg
insl
mov
int
movsl
adc
fstpl
xchg
shll
imul
adc
mov
das
cwtl
dec
test
pop
lcall
mov
lods
sbb
test
xchg
jecxz
mov
cwtl
inc
inc
jmp
dec
sbb
jecxz
test
mov
jmp
scas
mov
popa
fstl
testl
add
daa
movsb
js
in
nop
xor
xor
pop
dec
pop
jmp
fistpll
clc
jbe
pusha
push
pop
mov
xor
mov
test
movsb
shrb
aam
pop
jge
pop
add
addb
popa
inc
mov
cld
mov
cmpl
cmp
pop
mov
sarl
cmp
adc
mov
sub
mov
es
pop
or
rcr
cmp
push
xchg
mov
mov
dec
and
out
mov
add
push
cs
and
xchg
cmp
jno
or
aam
cli
cld
shrb
and
inc
jno
cmp
push
sub
lret
xchg
xor
movsb
popa
mov
xlat
mov
dec
sbb
fdiv
mov
data16
push
dec
cld
mov
lea
cmp
stc
popa
mov
filds
pop
scas
aas
test
jae
cmp
in
xchg
jge
or
dec
popf
les
lret
daa
mov
sti
push
xorl
scas
mov
cld
inc
faddl
inc
adc
test
ljmp
xchg
cmp
ljmp
loope
push
ret
pop
cmp
out
and
es
push
int
jl
sbb
xchg
sbb
cmp
mov
jb
stos
add
mov
push
enter
push
ficoml
fildl
nop
imul
pop
std
sub
mov
mov
sub
cltd
out
lods
and
jg
pushf
xor
add
aad
rclb
mov
rcr
pop
jmp
popa
jl
dec
pop
ds
jmp
mov
fnsave
fdivs
push
in
mov
inc
adc
sub
mov
ret
fsubrs
ficomps
ret
xchg
and
jge
xchg
push
bndstx
sub
dec
cmp
and
out
pop
inc
or
ja
inc
xor
push
jbe
mov
into
fisubrl
or
jp
mov
push
dec
dec
bound
mov
negl
lret
mov
push
mov
ret
sub
outsb
pop
xchg
pop
pop
in
ds
lods
sahf
shrl
repnz
cmp
out
jnp
dec
jp
sub
pop
rorb
or
ss
test
and
pop
pop
out
adc
mov
xchg
jmp
add
add
mov
xchg
andl
popf
cmp
fs
std
sbb
adc
adc
mov
mov
mov
popf
mov
cli
push
in
mov
push
pop
scas
je
add
push
icebp
jge
adc
mov
adc
push
and
sub
push
inc
mov
outsl
notb
cmp
int3
cmp
push
inc
in
in
js
adc
and
pop
mov
adc
pop
pop
ret
ret
sub
xchg
xchg
or
movsb
xor
mov
pushf
ret
adc
imul
out
cli
outsl
nop
fldt
adc
lds
icebp
or
stos
fs
in
test
and
push
xchg
lock
daa
fists
lea
pop
xchg
popa
je
and
fdiv
cld
sbbb
in
fwait
or
rcl
pop
or
les
je
movsb
les
faddl
pop
ds
neg
lds
cmp
xchg
into
movsb
ret
push
push
ljmp
repz
daa
jge
pop
ss
int3
xchg
inc
in
das
outsb
scas
pop
inc
dec
jo
ss
sub
inc
pop
test
xchg
or
mov
enter
cmp
aad
insl
or
inc
mov
dec
and
fbstp
jbe
pop
dec
jp
xchg
inc
cmp
es
mov
xchg
inc
xor
xchg
jne
adc
pop
push
jae
incl
enter
lahf
scas
fisubl
test
xchg
cmc
mov
ror
inc
pop
lds
inc
jne
mov
push
adc
das
aaa
xchg
das
sbb
aad
outsb
cmp
in
stos
mov
sub
xchg
fcompl
mov
jae
aas
bound
imul
shrb
add
xor
add
loope
sub
orl
int
aad
mov
mov
lds
pop
inc
push
orl
jp
out
sti
fisttpll
jae
jle
push
dec
shll
xchg
and
sbb
xchg
imul
push
lahf
shll
mov
push
test
incl
in
dec
mov
enter
mov
aam
fidivl
aas
jno
js
adc
mov
test
out
stc
or
mov
out
stos
push
xchg
rep
outsb
inc
andb
shll
cmp
and
pusha
push
adc
xchg
cli
sub
cltd
mov
xchg
rcrb
lahf
or
jl
insb
mov
ds
pop
xor
insb
and
mov
in
popa
scas
inc
mov
pushf
or
xor
mov
leave
jmp
pop
mov
sub
jp
inc
xchg
or
push
mov
imul
je
pop
dec
and
xchg
push
mov
mov
jge
pushf
inc
jb
cmp
jae
popf
outsb
data16
cwtl
in
add
sbb
sbb
dec
add
pop
in
fidivl
cmp
adc
into
rol
lret
dec
xchg
aad
mov
dec
pusha
cmp
fisttps
jecxz
mov
add
inc
aam
hlt
jno
loop
xchg
mov
or
sub
stos
movsl
lock
jbe
jns
scas
lret
mov
mov
push
xor
push
push
sub
adc
fwait
jmp
dec
adc
hlt
std
insb
push
pop
or
or
and
out
sbb
rcrl
ljmp
xchg
mov
lods
jbe
nop
dec
cltd
loop
and
roll
sbb
mov
cwtl
in
push
dec
imulb
xchg
add
cmp
je
mov
bnd
popa
adc
mov
lea
jl
fcmovu
es
iret
adc
movsl
ja
pop
mov
outsl
les
aad
movsb
scas
sbb
loopne
leave
push
sbb
and
loop
sub
lds
out
push
sbb
divb
pop
dec
into
push
aad
mov
add
mov
stos
or
xor
mov
and
das
mov
repnz
aam
aaa
and
mov
adc
das
cmc
fildll
mov
idiv
adc
xchg
je
pushl
push
ja
xchg
inc
push
mov
fdivl
cmp
bound
out
lds
mov
jbe
add
mov
xor
jbe
jecxz
out
inc
in
xor
daa
mov
cmp
pop
push
aas
imul
and
mov
pop
int
sub
popa
inc
fs
jecxz
test
adc
fs
adc
test
adc
fldcw
test
mov
mov
mov
fwait
push
mov
clc
fcoms
faddp
sbb
fists
daa
enter
xor
adc
lret
and
popf
xchg
loope
mov
insl
xor
imul
xor
lods
les
je
mov
aam
or
xor
xchg
push
sbb
cltd
inc
or
in
push
out
adc
insl
pop
ds
mov
inc
jne
pop
adc
xor
dec
daa
jmp
outsb
jns
lahf
out
xor
mov
mov
scas
and
xor
imul
test
xor
jbe
icebp
insl
jno
in
sbb
jno
add
add
jmp
sti
int3
jo
ds
pop
cli
jge
orb
mov
pop
push
sbb
fs
aaa
pop
xor
lahf
scas
es
mov
pop
fcmovnu
jnp
mov
xchg
dec
pop
sbb
jo
fisubrl
out
aad
lret
or
pop
js
pop
cmp
inc
jo
in
sub
pop
inc
out
popa
jnp
aad
leave
cmpsl
orb
lods
pushl
arpl
pop
std
dec
pop
mov
in
or
adc
rcrb
loopne
pop
dec
add
in
fs
and
xor
mov
js
icebp
add
or
shl
fldl
mov
or
sbb
inc
not
push
mov
mov
push
add
jmp
pop
xor
mov
push
in
dec
xor
fisttps
inc
dec
fwait
pop
xlat
jmp
aas
push
mov
sbb
sub
adc
xchg
ficompl
ljmp
push
fstpl
testl
push
sub
adc
mov
and
divb
sub
mov
jns
enter
xor
lods
mov
jge
dec
sbbb
xor
inc
adc
jecxz
inc
ret
cltd
or
lret
fsubrl
push
idivb
aad
push
jp
scas
cmp
mov
push
mov
push
ja
push
cltd
inc
outsb
mov
or
xchg
dec
adc
fs
pop
lods
sarb
ret
mov
adc
arpl
xchg
insb
in
les
inc
or
ret
jmp
imul
fnsave
adc
outsb
js
sti
movsl
pop
cmp
add
inc
lods
cwtl
iret
push
pop
xor
mov
movsb
sahf
andl
sbb
hlt
sbb
xorl
pop
mov
out
out
mov
dec
mov
mov
jae
inc
imul
adc
leave
popf
shlb
popa
stos
imul
mov
pop
data16
xor
lcall
jp
dec
jp
jb
call
xor
mov
pop
dec
jmp
ljmp
jnp
daa
inc
pop
insb
adc
fucomp
dec
jmp
xchg
adc
push
adc
scas
mov
push
imulb
xchg
das
mov
inc
lret
addr16
sub
jle
inc
dec
mov
loopne
mov
scas
mov
es
ret
xor
in
repnz
mov
outsl
dec
incb
xor
adc
das
cmp
push
mov
adc
add
add
clc
xchg
inc
pop
sub
ja
inc
pusha
stos
icebp
pop
xchg
and
ss
or
mov
cmpsb
insb
ss
sahf
adcb
xor
jecxz
sbb
daa
negl
pop
in
movsb
rclb
in
jbe
lret
cmc
pop
jecxz
lret
add
pop
sbb
push
mov
lds
rcrl
aad
push
mov
and
test
add
cmpb
cmpsb
push
outsb
adc
fdivrs
ret
sub
sbb
test
dec
xchg
scas
mov
out
ret
push
decl
jbe
test
ss
enter
loopne
fdivrl
test
int
popa
inc
add
dec
xchg
adc
mov
sbb
stos
mov
xchg
in
sbb
loopne
into
out
jb
loop
pop
sahf
jne
in
and
push
das
test
inc
cmpb
xchg
sbb
outsb
test
mov
pop
test
jne
fwait
aad
fucomp
sub
push
addb
or
sub
mov
rorb
js
mov
mov
xchg
sbb
adc
popl
adc
lea
xchg
ljmp
cld
addr16
cld
lods
or
lret
test
xor
push
mov
jecxz
fisttps
push
dec
pop
push
push
outsl
movsb
es
cmp
xchg
sbb
jle
mov
pop
mov
daa
bound
hlt
repnz
loopne
mov
push
jo
mov
test
xor
ljmp
mov
lahf
mov
mov
lcall
sbb
jae,pn
push
adc
mov
scas
ljmp
pop
out
adc
cltd
out
mov
mov
cmc
xchg
cmp
xchg
insb
fcompl
lret
push
jp
mov
ret
pop
mov
push
fdivrs
mov
test
loop
mov
ds
mov
push
loope
mov
iret
scas
inc
mov
mov
loopne
jp
mov
jb
inc
xchg
adc
xor
out
popa
andl
mov
dec
push
mov
pop
enter
insb
rorb
imul
sbbl
adc
mov
aaa
mov
clc
outsb
lea
push
cmpsl
add
jbe
pop
mov
mov
sub
sbb
ds
mov
jge
pop
push
push
cmp
sbb
dec
pop
pop
adc
pop
jl
movsb
sub
lahf
fnstenv
adc
dec
test
das
rol
dec
jno
mov
gs
jle
jmp
xor
push
sbb
or
fisubrl
lret
mov
sbb
add
mov
mov
xchg
fldenv
repnz
jno
aas
fisubrl
inc
mov
adc
xchg
mov
and
mov
inc
jns
push
jg
fdivs
xchg
sub
test
adc
sti
sarl
mov
loope
loop
ret
add
and
scas
in
adc
xchg
sbb
cmp
std
inc
xlat
xor
mov
into
inc
inc
or
imul
dec
pop
and
cmp
mov
cli
push
jp
jne
sub
or
fimuls
jmp
into
push
dec
and
std
inc
pop
dec
push
movsl
jnp
lret
sbb
mov
aad
rorb
scas
sbb
test
dec
lret
dec
mov
mov
addr16
and
out
mov
aad
pusha
lock
aaa
jge
lret
pop
jmp
sarl
test
or
xor
lret
lock
imul
popa
xchg
imul
push
jmp
nop
icebp
imul
mov
lods
int3
inc
jl
pop
clc
insl
adc
inc
mov
xor
es
add
loopne
movsl
mov
arpl
sbb
sub
mov
inc
mov
dec
out
test
iret
cwtl
insl
mov
xorb
stc
stc
ret
dec
inc
jg
out
loopne
cmp
adc
aaa
push
fwait
int
outsl
or
xchg
cmpsb
sbb
clc
ds
lds
lods
and
inc
stos
xchg
mov
leave
mov
push
out
scas
lea
mov
ret
pop
or
mov
pop
mov
jg
hlt
mov
jno
xor
movsb
add
faddl
push
mov
call
aad
jmp
repnz
mov
das
sub
xchg
shll
shrb
out
xchg
lahf
mov
jl
inc
mov
icebp
pop
or
test
or
inc
sbb
ds
jnp
or
shr
call
xor
fisttpll
or
mov
pop
cs
scas
es
leave
push
jae
aas
mov
out
or
and
xchg
pusha
insl
and
lcall
in
or
sub
out
test
mov
loope
ljmp
pop
pop
pop
dec
pop
pop
pop
cmp
stos
daa
movsl
es
push
dec
in
mulb
xor
and
add
mov
sbb
int
pop
fstpt
mov
or
and
std
loop
sbb
mov
adc
mov
movsl
push
pop
inc
push
inc
push
in
and
dec
enter
pop
fstpt
loop
dec
jmp
add
popf
sbb
xchg
insl
push
out
in
mov
lods
mov
rorl
in
aaa
fdivrs
lcall
lods
adc
daa
or
xlat
enter
aad
ja
cmc
mov
and
mov
pop
int
int3
push
or
mov
mov
mov
dec
pop
shl
add
mov
scas
sarl
push
mov
mov
sbbb
dec
xor
mov
cltd
push
outsl
jnp
clc
leave
and
mov
cwtl
and
push
push
and
jp
loope
orb
insl
pushf
rclb
pop
lock
mov
jno
mov
imulb
hlt
call
cmp
lret
mov
or
jecxz
pushl
jo
mov
lret
aam
popa
data16
movsb
xchg
int
fcomip
scas
je
add
add
outsb
xor
mov
mov
xor
aam
lret
sub
mov
adc
xor
mov
cmp
mov
imul
mov
fwait
mov
test
jecxz
mov
inc
cmp
mov
or
shlb
pop
fstps
jg
pop
mov
push
mov
aad
mov
xor
in
lock
xor
xchg
rcr
scas
sbb
xor
dec
fnsave
shl
outsl
jb
popf
xlat
aam
jmp
enter
mov
ss
mov
ss
loope
cwtl
or
sbb
adc
and
jge
jecxz
movsb
out
xchg
scas
mov
test
xor
jmp
das
lock
ret
sub
lret
lods
rclb
push
jl
fdivs
pop
add
in
in
mov
jle
hlt
scas
add
sub
aad
jnp
sbb
xor
push
inc
dec
call
mov
cld
sub
jge
cmp
mov
sub
in
fsubrs
sub
jp
enter
sbb
fcoms
outsb
loope
dec
bnd
xor
cs
lret
pop
negb
jge
xchg
mov
ret
mov
and
cwtl
stos
fwait
sub
out
xor
into
dec
sahf
aam
mov
xor
dec
cmp
jge
out
mov
shll
shlb
mov
and
sbb
add
or
mov
sbb
dec
sbb
in
mov
shll
xor
mov
sbb
cld
dec
mov
mov
in
xor
xchg
sbb
subl
sub
xchg
mov
mov
jno
sub
cmp
movsb
movsl
push
outsl
inc
push
push
pop
inc
mov
insb
mov
popf
repz
cmp
dec
mov
push
divl
cmp
int3
lahf
insl
mov
jb
jl
rclb
xchg
mov
notl
and
ljmp
pushf
and
in
decb
loop
data16
in
test
das
faddp
int
lods
adcl
xchg
popa
push
pop
jle
cmpsb
das
sub
rolb
sbb
in
stos
or
add
sbb
rep
inc
mov
mov
and
xchg
movsb
lods
cltd
add
sahf
andl
mov
mov
insb
mov
movsl
dec
hlt
movsl
adc
pop
mov
pop
push
psrlq
xor
lea
pop
stos
sbb
mov
bound
pusha
sub
or
cwtl
gs
adc
inc
sub
xchg
stos
pusha
imul
imul
xchg
inc
sub
xlat
and
shll
xlat
add
into
lock
dec
in
dec
int
adc
test
jl
sbb
shr
fstl
jg
in
je
sti
or
jae
es
xchg
dec
push
loop
or
jge
insb
push
and
psrad
jno
mov
or
in
inc
nop
mov
dec
lods
cmp
fsubr
mov
movsb
xorl
lea
inc
cmpsb
insl
cmp
into
outsb
sub
sbb
rcrb
sub
filds
xor
negb
aaa
test
ret
adc
enter
addr16
push
daa
testl
ss
xchg
pop
mov
jbe
std
mov
mov
sarl
subb
fwait
test
push
dec
add
cld
xchg
xchg
in
test
shlb
lods
and
movd
and
int3
iret
add
fstp
aaa
inc
push
gs
mov
pushf
add
mov
jl
cmp
cs
cltd
daa
addb
sbb
aam
inc
pop
mov
xor
int3
cmp
inc
sbb
sti
loopne
cmpl
cmpb
popf
inc
loopne
fs
nop
sbb
sbb
mov
mov
fisubs
cmp
loopne
lds
cmp
movsl
xor
dec
scas
dec
xlat
repz
movb
pop
je
mov
stos
sbb
shlb
dec
mov
mov
pop
aam
outsl
fs
adc
xor
je
mov
xchg
cmp
repnz
jns
repnz
xlat
mov
pop
loope
and
ja
les
ljmp
xchg
lock
lret
leave
mov
push
mov
les
lods
sub
pop
cmpsl
mov
pusha
fwait
mov
push
jl
repz
mov
mov
sti
adc
addr16
ljmp
clc
movsl
xchg
xchg
insl
and
ljmp
dec
sub
ss
lds
lret
test
or
mov
aam
cvttps2pi
jb
jne
mov
pop
ss
mov
leave
adc
loop
ja
faddl
mov
mov
outsl
add
xor
push
mov
lock
push
sbb
lret
mov
ficoms
mov
pop
xchg
jge
insl
xor
xor
mov
jg
pop
add
jp
lret
bound
xlat
xchg
mov
sahf
or
fdivs
out
rcrl
test
imul
sub
dec
pop
movsl
mov
rep
cli
stos
xchg
js
mov
sbb
pop
push
test
roll
bnd
xor
shlb
lret
dec
into
xchg
rclb
jge
inc
lods
je
mov
aaa
test
and
lods
stc
push
or
out
push
in
fnstcw
icebp
mov
iret
cmp
fcmovnbe
mov
inc
jno
dec
jns
inc
call
movsl
sub
mov
lahf
clc
jle
jle
fadd
std
cmp
enter
xchg
call
loope
imul
enter
aam
sarb
pop
test
pushf
cwtl
jecxz
das
cld
dec
inc
lea
sub
inc
mov
stos
stos
mov
nop
std
mov
lods
pop
push
sub
mov
ror
outsb
shrl
dec
jp
mov
fdiv
and
or
pop
stos
daa
iret
jg
jge
outsl
ret
cli
or
dec
loopne
js
mov
decl
lods
sbb
cmp
out
pop
rorl
jnp
in
das
int
sahf
test
mov
je
pop
xor
int3
pop
daa
out
pop
inc
mov
jmp
or
push
mov
ret
scas
mov
mov
fidivrl
add
sbb
push
inc
dec
lret
jp
js
mov
stc
inc
ljmp
rcrl
mov
jp
shlb
xchg
or
repz
insb
fcompl
xor
stos
cmp
fwait
jge
and
iret
popf
fisubl
in
xchg
iret
mov
icebp
pop
dec
mov
sarb
dec
push
dec
and
ds
push
orb
rcrb
shlb
mov
jle
jecxz
jbe
sbb
dec
sbb
sbb
in
fldenv
imul
dec
pop
das
divl
or
repnz
jo
and
xchg
mov
mov
shll
andb
jle
testl
add
xor
pop
fs
cmp
xchg
fsubs
incb
fstpt
sbb
mov
stos
stos
pop
dec
imul
mov
xor
rol
xchg
pop
inc
mov
insb
pop
dec
push
enter
or
sub
or
sahf
ss
cmpb
jle
stos
into
jns
aam
and
mov
mov
shll
in
lds
ljmp
in
adc
push
pop
mov
movsb
aaa
out
pop
hlt
push
ret
pop
enter
sahf
push
sbb
mov
insb
mov
in
push
shr
jecxz
cmp
cmp
mov
sahf
push
and
sahf
jge
out
push
cmpsb
push
out
or
in
xchg
sub
fsubrs
pushf
fwait
aas
js
aad
mov
mov
mov
jmp
or
test
in
or
fsts
int3
clc
insl
pop
and
push
in
hlt
loope
cmc
inc
repnz
pop
jge
jne
and
and
mov
call
test
test
cmp
xor
jae
pop
inc
in
subl
aas
adc
rcl
jbe
and
xor
inc
lods
js
and
jno
int3
push
aam
jo
inc
out
aaa
xlat
sbb
dec
test
or
mov
imul
scas
mov
pop
popa
mov
popf
jo
pop
or
pop
dec
in
pushf
jp
cmp
aam
jecxz
pop
mov
or
sub
jns
cmp
sbb
bound
testb
mov
cmp
push
mov
push
les
adc
jp
jle
int3
lret
mov
mov
lock
cld
leave
adc
lea
xorps
jmp
xchg
lret
pop
cs
hlt
or
xchg
ret
jae
int3
or
push
imul
and
cmpsl
in
push
mov
fsts
lods
call
inc
jecxz
pop
ljmp
push
cld
call
ret
xor
out
xchg
repz
sub
dec
test
xlat
in
lds
jne
lahf
jne
mov
pop
add
pop
lea
mov
cld
xchg
lahf
mov
in
dec
sbb
inc
and
or
sbb
loop
push
inc
rcl
mov
push
leave
flds
push
mov
sbb
xchg
jp
adc
arpl
dec
cmc
aam
mov
lods
mov
push
pop
xchg
cmp
mov
in
xchg
push
movsb
filds
loop
rol
mov
xchg
pop
mov
ret
addl
gs
cmp
pushf
data16
imulb
and
leave
daa
mov
add
loope
lods
sub
sub
ja
or
js
fbld
adc
or
mov
jg
inc
inc
ret
cmp
xchg
xorb
sar
and
jp
mulb
inc
div
dec
cmpl
adc
push
add
pop
test
jne
dec
dec
in
sub
das
not
push
mov
pop
in
pushf
repz
test
push
test
xor
sbb
mov
test
int3
lods
dec
cmp
add
stos
mov
loope
adc
movsl
mov
ret
aam
pop
nop
jnp
icebp
pop
push
jae
and
sahf
dec
jmp
pop
loop
mov
mov
fisttps
imul
hlt
mov
pop
imul
fidivrl
fisubrl
or
lret
lret
enter
shll
mov
out
pusha
call
mov
push
or
inc
mov
xor
adcl
testl
xor
fwait
mov
jne
mov
jg
cli
test
popf
lods
roll
mov
pop
dec
andl
sub
fisttpl
inc
push
ffreep
clc
dec
cmpsl
cmp
roll
push
dec
in
pop
fwait
cmpsb
ja
xchg
inc
out
add
jns
mov
subl
fwait
lock
gs
mov
push
pusha
arpl
xor
pop
stos
xlat
iret
stc
rolb
cli
fsts
jno
in
xchg
data16
enter
inc
std
sbb
cmp
lret
fs
jno
mov
inc
lods
pop
ret
xchg
gs
repz
sbb
mov
sub
or
daa
push
inc
push
fdivs
outsb
add
jl
sti
add
mov
push
add
aaa
xchg
adc
or
cwtl
lods
xor
scas
add
daa
xchg
jp
into
pop
xchg
lds
sub
bnd
push
addr16
add
or
xor
je
or
xchg
add
mov
push
xor
mov
jbe
lds
fs
sbb
push
insl
cmpsl
and
sbb
and
rclb
fildl
ja
std
fbld
adc
mov
es
aam
cmpsl
iret
or
and
cmc
scas
pop
in
xchg
dec
xlat
outsl
xor
mov
add
lods
hlt
xchg
adc
ds
in
cmp
sahf
push
cli
out
sahf
in
cld
mov
xlat
stos
inc
adc
jg
sbb
jb
test
stc
cmpsb
aam
dec
orb
in
fbstp
dec
pop
add
jp
mov
add
and
adc
mov
mov
cmp
dec
jae
mov
or
into
test
cmc
add
dec
das
pop
sbb
sub
cmp
pop
lcall
add
xchg
adc
add
sub
or
cmpsl
sbb
xor
arpl
dec
jns
lahf
movsb
pop
push
cltd
or
mov
or
sarl
pop
jno
lret
fildll
mov
iret
sbb
jb
cmpsb
leave
sbb
js
cmp
lahf
test
out
dec
xchg
dec
shr
or
ret
popf
xor
es
je
test
lret
dec
sbb
rclb
jno
add
out
mov
jge
xchg
xchg
sub
lods
daa
or
lahf
mov
dec
fchs
xchg
jns
arpl
sbb
test
adc
ret
popf
enter
shrb
sub
negb
mov
gs
pop
dec
cs
jne
pop
mov
xor
jno
shll
push
adc
ja
icebp
add
lret
mov
hlt
jnp
fcomps
lds
add
imul
fiaddl
sahf
dec
pop
and
dec
lea
int3
pop
pop
jb
pop
and
cmpsl
fsubl
xchg
sub
xor
push
add
adc
xor
pop
aaa
inc
mov
repz
imul
out
insl
ds
out
sub
addr16
jmp
mov
mov
pop
psubsw
movsl
xchg
rcrl
shrl
mov
push
test
mulb
xchg
loope
leave
loopne
xor
inc
das
dec
mov
adc
jbe
cmp
bound
xor
jnp
sbb
pop
pop
jb
out
scas
nop
inc
mov
adc
sbb
jb
aaa
shrb
cmc
jecxz
cmp
outsl
lcall
out
inc
outsb
push
mov
sbb
fcoml
adc
mov
mov
subb
ja
nop
stos
push
jb
xlat
ret
and
cmp
jno
sbb
lea
sbb
mov
cmp
mov
or
mov
dec
jns
push
jo
dec
out
fcoms
mov
dec
add
sbb
fwait
hlt
test
imul
lock
stos
hlt
inc
popl
jmp
out
xchg
sbb
and
cmpsl
dec
jg
jge
in
mov
adc
arpl
iret
lods
notb
rcll
inc
cmp
orb
sbb
inc
xor
lret
inc
lret
sarl
jne
pop
inc
pushf
fistps
xchg
mov
les
and
insb
mov
or
jbe
data16
jbe
xor
cs
nop
fwait
dec
es
push
inc
cmpsl
xchg
mov
test
pop
call
imul
ds
mov
jle
xchg
sbb
pop
daa
adc
pushl
jmp
rorb
addr16
cmpsl
daa
out
and
test
pop
or
mov
push
mov
notb
xchg
and
addr16
andl
or
insl
sbb
lock
pusha
push
mov
dec
push
lock
imul
mov
jp
lea
icebp
add
out
repnz
add
inc
fdivrl
sbb
mov
push
push
inc
lahf
mov
les
mov
ss
or
rcrb
and
mov
mov
outsb
addr16
adc
dec
sbb
psubq
bound
stc
test
xchg
or
mov
test
pushf
and
stc
shrb
push
adc
dec
cmp
cld
and
xchg
mov
dec
je
icebp
jo
dec
mov
mov
hlt
stos
clc
movb
sub
rcrl
and
jbe
mov
adc
mov
or
jns
mov
adcb
shrb
cld
fnstcw
shrl
leave
inc
adc
mov
js
sub
call
mov
push
enter
mov
and
cltd
or
sub
fcomip
jl
test
out
jns
xchg
subb
and
aaa
gs
xor
jne
jbe
cmpsb
mov
push
fisubrl
insl
das
pop
inc
ja
mov
push
push
mov
repz
xchg
sub
or
data16
push
jns
push
xchg
sub
pop
ss
mov
jnp
xor
into
call
sbb
clc
leave
pop
adc
rcrb
pop
or
jnp
data16
cli
mov
hlt
stos
adc
cltd
xor
pop
push
pop
scas
jo
test
cmp
outsl
aam
out
jno
cmp
or
sahf
xchg
in
and
dec
gs
add
adc
dec
and
sub
cmc
add
outsb
mov
imul
and
xchg
shl
fsubl
loop
and
xor
shll
jne
jmp
lods
addl
cmp
xchg
in
sbb
or
fistpll
dec
out
out
sbb
pop
push
pop
inc
xchg
addb
std
in
out
adc
loop
pop
or
push
fsubr
js
es
or
nop
and
ljmp
dec
mov
fisttps
lahf
cmp
cli
xchg
adc
pop
inc
dec
jae
adc
clc
addb
pop
arpl
pushf
push
and
xchg
cmp
sub
dec
test
adc
fildll
and
imul
imul
xchg
fcomp
sub
mov
jae
dec
lret
arpl
pushf
mov
push
and
sarl
stos
dec
jl
fdivr
lods
imul
mov
and
mov
stos
cmpsl
notl
repnz
jg
lret
aad
popa
repnz
sub
gs
aam
jg
pop
in
xchg
mov
sti
pop
rolb
cld
lods
test
jo
stc
pushf
sub
mov
inc
and
mov
xor
pusha
out
call
mov
out
push
push
in
int3
lahf
clc
inc
jg
es
loope
mov
mov
sti
xor
mov
jmp
sahf
cmp
mov
push
add
mov
push
adc
cmc
or
or
or
lcall
jl
sbb
fistps
loop
call
in
insb
fdivp
pusha
andb
fstps
pop
or
jmp
shlb
imul
sbb
ds
lcall
cmp
xchg
xlat
push
or
arpl
push
icebp
ds
adc
push
push
xchg
and
and
in
push
into
mov
add
pop
push
jmp
lea
dec
mov
dec
stc
push
jae
dec
loope
or
pop
ja
adcb
pushf
movsl
lock
push
stos
or
and
mov
or
jo
and
mov
mov
ja
jmp
add
fsubrl
xlat
popa
loop
loope
xchg
dec
and
test
bound
or
mov
or
les
in
nop
pop
push
adc
out
or
stc
data16
int3
aam
add
fstps
pop
mov
xchg
push
fidivl
stos
mov
popa
cmpsl
mov
dec
in
or
imul
xchg
loopne
stos
push
ss
push
sub
arpl
nop
lea
hlt
or
mov
call
sti
std
mov
adc
adc
shll
je
xor
sub
mov
inc
push
mov
xchg
cld
xchg
les
dec
sti
inc
pop
adc
jae
pop
mov
sahf
mov
outsb
repnz
imul
mov
xchg
pop
call
int
cmp
in
loopne
int3
loop
dec
test
add
pop
adc
enter
loopne
jnp
outsl
xchg
dec
call
fwait
icebp
sahf
lods
dec
or
jo
adc
xor
mov
dec
push
stos
mov
ds
inc
sbb
stc
sub
pop
jne
enter
mov
outsl
mov
cmp
sub
dec
sbb
out
repz
and
sbb
mov
lret
jl
mov
push
sbb
into
fsubr
adc
inc
jmp
add
cs
pushf
mov
push
inc
and
cmpl
leave
aad
cmp
and
ja
mov
jmp
dec
call
mov
mov
cmp
sysexit
jo
sub
adc
in
push
mov
jo
leave
push
dec
aam
fwait
xchg
lods
in
mov
data16
fs
arpl
lahf
leave
sbb
dec
rorl
lock
addr16
inc
adc
fiaddl
sbb
pop
jns
and
idivb
and
inc
mov
test
push
adc
jb
in
add
mov
je
scas
sar
xchg
mull
and
and
xor
push
cmp
mov
nop
inc
lcall
pusha
filds
jp
jne
les
pop
cwtl
jp
lcall
jb
nop
sub
lret
mov
int
pop
inc
mov
test
push
xor
call
hlt
dec
or
fbld
xchg
or
aad
jbe
repnz
pop
test
dec
lcall
in
inc
insb
push
enter
or
out
addr16
sti
and
push
xor
sbb
daa
daa
out
mov
movsb
fwait
std
push
or
mov
test
jne
cli
lock
hlt
push
leave
in
mov
aad
bnd
mov
inc
fldl
test
cltd
jp
mov
cmpsl
shrl
lret
lds
pusha
dec
add
jae
jne
push
fstps
pop
aad
es
sub
cmp
loopne
mov
inc
push
adc
mov
lods
pop
out
je
and
lock
push
test
mov
push
lods
repnz
das
pushf
jge
pop
push
push
inc
pusha
call
sbb
mov
jmp
or
in
mov
pop
pop
fsubl
mov
dec
mov
push
lahf
cs
aad
xchg
fucomip
ljmp
push
dec
lret
jge
dec
xor
ljmp
push
pop
push
push
arpl
mov
sbb
fadd
add
sub
sub
mov
filds
loop
pop
clc
mov
xchg
mov
insb
dec
sub
cmp
mov
pusha
stc
adc
inc
xchg
pop
sub
lret
pop
stos
ss
dec
and
mov
fdivrl
jmp
hlt
lds
fisubl
add
fadds
xor
fcoms
and
aad
xor
adc
cmp
xchg
xlat
out
int
sub
mov
stos
inc
rcrb
rcr
push
add
lods
pop
mov
ds
orb
xchg
je
cmp
rcrl
jb
jne
out
inc
jo
loope
cld
sbb
mov
push
sbb
mov
in
test
repz
ret
jg
pop
scas
faddp
or
test
lcall
pop
add
cwtl
sbb
adc
dec
sarb
addl
fs
xchg
sub
lcall
pop
adc
out
pop
push
jg
xchg
xor
pop
je
stos
popf
dec
jl
and
sar
pop
xlat
clc
and
jecxz
jne
iret
and
mov
in
stos
rclb
aas
sti
leave
add
mov
out
mov
inc
repz
dec
stos
and
mov
popa
cmpb
pop
fsubrl
or
aam
or
leave
mov
scas
jge
popa
adc
pop
mov
or
out
mov
aad
adc
enter
into
enter
cmp
xorl
loop
mov
clc
cmpl
dec
inc
insl
dec
lods
push
mov
cmpsb
lret
jns
adc
inc
movsb
cmp
mov
clc
mov
lods
sti
fs
push
cmp
test
stos
fsubl
push
mov
sub
clc
jns
imul
js,pt
insl
pop
mov
test
cltd
jbe
aaa
mov
das
daa
int
add
iret
cwtl
cmp
pop
mov
stos
push
stos
or
sbb
mov
lahf
sbb
dec
in
jo
test
stos
mov
vmovhpd
mov
adc
sbb
adc
out
or
jno
lcall
stc
cltd
pop
or
xchg
or
mov
lods
in
pop
mov
stos
insl
imul
rclb
ljmp
add
add
xchg
out
xchg
mov
jne
daa
imul
push
imul
lods
call
lahf
lea
stos
outsl
out
out
ficomps
cmp
and
fdivrl
xchg
cmp
push
divb
adc
xchg
int3
pushf
jae
ret
lock
mov
cmp
and
push
inc
out
mov
ljmp
pop
sub
sub
xchg
std
dec
dec
enter
cmp
sub
or
xor
loopne
cli
in
lods
or
pop
aad
fwait
aam
std
dec
cli
mov
add
push
outsl
sub
inc
pop
mov
adc
jmp
ljmp
in
push
lods
jbe,pn
jae
gs
and
nop
xchg
ds
test
movsb
inc
decb
stc
je
lcall
xchg
test
dec
pop
out
ret
push
scas
mov
or
sti
push
xchg
ret
lcall
sub
mov
in
dec
in
andb
dec
sbb
add
and
enter
and
fwait
and
cli
and
aad
mov
inc
dec
xor
int3
add
push
loop
cs
jbe
add
mov
cli
jg
xchg
jmp
dec
daa
xchg
fimuls
lret
mov
pusha
loopne
int
pop
shl
jnp
test
push
lea
repz
mov
shlb
jns
out
enter
mov
lret
pop
mov
pop
in
push
mov
jecxz
idiv
xor
data16
mov
dec
sub
ret
cmp
push
add
scas
mov
mov
cmp
inc
dec
sub
sub
cmp
ds
xchg
out
faddl
lcall
adc
push
inc
push
mov
sbb
ljmp
mov
test
inc
xchg
popf
test
cmp
mov
push
mov
inc
mov
push
andb
movsb
xchg
and
cmp
xchg
pavgw
jno
xor
mov
pusha
inc
sar
push
cmp
aaa
cmp
ret
decb
lods
aaa
mov
cmp
push
mov
xlat
outsb
mov
push
jp
scas
sarl
daa
xor
jno
sub
mov
xchg
int3
test
mov
dec
sbb
xchg
outsb
or
push
loop
dec
hlt
decb
ret
rcrl
jo
lcall
xchg
jns
push
jbe
sbbl
cwtl
gs
fldcw
test
adc
pop
dec
xor
mov
ljmp
imul
add
imul
or
jns
sub
push
and
pop
icebp
lods
jb
pop
sbb
test
mov
and
addr16
jg
mov
push
xor
sbb
loopne
in
sub
aas
popf
pop
out
jno
scas
addr16
and
jmp
pop
adc
stos
cmp
inc
mov
sahf
jno
into
aad
xor
mov
mov
or
dec
inc
test
jb
adc
ja
cli
dec
movsb
rolb
imul
ljmp
jl
stos
icebp
jecxz
add
pusha
fadds
or
sub
dec
les
and
movsb
insb
pop
push
jne
xchg
mov
add
mov
les
filds
movsl
fstl
xchg
sbb
cmp
push
cmp
rorl
out
js
arpl
lahf
mov
adc
push
in
sti
int
neg
mov
cld
jle
pop
push
int3
xor
inc
sahf
add
nop
mov
out
scas
js
push
jb
xor
jae
mov
xchg
sbb
push
loope
cvttps2pi
stos
mov
cmc
cltd
jecxz
push
test
cmpl
push
lock
ret
fs
mov
mov
inc
xchg
pop
mov
dec
or
cmp
pop
sub
pop
pop
in
dec
daa
or
mov
lock
aaa
nop
pop
jge
pop
movsl
cli
or
loope
mov
push
mov
sbb
dec
lods
jbe
loope
sbb
leave
inc
std
daa
xor
jae
mov
sub
xor
mov
or
loope
cmp
xor
aaa
out
jnp
je
fsts
fisttpll
dec
cmp
call
das
lea
cwtl
mov
imull
cmp
pop
scas
outsb
push
xchg
add
or
xor
mov
arpl
xor
mov
xchg
add
shlb
jge
stc
call
lret
push
lret
filds
arpl
mov
mov
or
jo
add
and
lret
pop
rcrl
ret
inc
or
test
leave
out
inc
pop
and
and
push
lods
in
sub
outsb
dec
xchg
ds
lcall
ds
fwait
push
das
std
dec
repz
lret
xchg
inc
aas
imul
inc
mov
jo
aas
xor
add
cmp
adc
loope
fistpll
mov
scas
rcll
pop
and
pop
xlat
cmpsb
cmp
pop
inc
mov
scas
rclb
fists
mov
dec
sub
sub
es
ret
and
repnz
inc
sbb
or
scas
push
fwait
inc
push
loope
cmp
test
push
shll
dec
cmp
cld
test
push
ret
dec
cmp
stc
mov
fcmovbe
sbb
jbe
mov
pop
aaa
leave
std
std
lret
movsb
mov
mov
sub
icebp
in
cmp
imul
and
mov
and
sbb
jno
jl
and
pusha
and
aaa
inc
xchg
and
aad
call
push
mov
xor
out
jnp
js
mov
iret
sbb
das
dec
push
mov
addb
adc
add
sti
jno
lret
mov
leave
fmulp
sub
in
jns
ds
dec
mov
pop
outsl
jmp
or
dec
pop
adc
mov
stc
xchg
mov
pop
ss
dec
popa
cmp
mov
imul
faddl
and
cmp
xor
jnp
xchg
pusha
sarb
les
aaa
insb
jg
sub
xchg
cmp
js
mov
hlt
in
fucomip
stc
or
pop
xchg
fs
test
add
xchg
lea
inc
sbb
cmpsl
xchg
clc
mov
push
lahf
jne
daa
and
jae
push
imul
cs
lahf
mov
movsl
rclb
sbb
shlb
mov
push
adc
fistpl
je
imul
cmc
inc
pop
sbb
inc
repz
and
notl
add
shrl
mov
vpxor
fs
inc
cwtl
jl
xor
push
cmp
shlb
aaa
call
cltd
icebp
xchg
sub
imul
jne
cltd
fwait
inc
in
inc
jne
push
dec
and
cmc
sbb
push
mov
pusha
shr
scas
mov
addr16
push
sarl
mov
pop
pop
shlb
shlb
ret
add
nop
test
into
jno
mov
jo
add
shr
sbb
out
imul
push
int3
push
xor
lods
lods
cs
add
ja
roll
dec
aam
push
cmc
ds
and
pop
pop
and
es
sti
mov
into
out
fmull
shrb
out
mov
dec
test
mov
sbb
fstps
addb
pop
aas
mov
mov
aam
sbb
and
push
ror
jnp
aam
imul
out
lods
das
jg
hlt
daa
lods
mov
pop
sbb
insb
into
push
inc
inc
aas
adc
mov
mov
leave
pop
leave
adc
inc
sahf
cmpl
mov
or
in
lcall
xchg
mov
mov
pop
jmp
fiaddl
inc
and
movsb
cld
mov
adc
mov
inc
jge
push
mov
cmp
aaa
outsl
and
xchg
scas
cmpsl
outsl
mov
cwtl
adc
ljmp
fisttpll
jo
sbb
jge
ds
leave
pop
xchg
out
sbb
pop
sub
stos
subl
mov
in
movsb
enter
sarb
mov
dec
xchg
add
xor
push
pop
lods
cli
shlb
lock
ss
mov
adc
mov
or
repnz
cmp
movsb
xchg
movsl
xlat
or
fnstenv
jmp
sub
std
aam
out
ds
outsb
cmp
movsl
jb
insl
adc
sbb
cmc
cmp
pop
hlt
mov
jg
or
push
imul
mov
ror
lods
cmp
shrb
or
pushf
adc
and
push
jo
shl
sti
xor
and
pop
dec
mov
data16
in
sub
cmc
dec
pop
pushf
xchg
or
mov
fadd
int3
fcoml
cli
jmp
orb
js
add
add
jecxz
add
pop
mov
cs
into
jmp
push
mov
out
mov
iret
sub
or
add
test
daa
mov
cmp
dec
mov
mov
pusha
fld
cmp
fdivrl
jmp
ss
ret
mov
dec
imul
insl
movsb
shl
mov
imul
stos
loope
icebp
and
leave
ret
fdivrl
adc
mov
pop
das
je
jb
jne
sbb
dec
out
adc
adc
test
mov
aas
or
push
mov
shl
adc
inc
aam
xor
or
imul
jo
je
mov
push
sarb
add
add
jmp
mov
test
push
lret
mov
es
mov
mov
imul
js
stos
push
sbb
adc
pop
push
push
or
inc
inc
mov
mov
or
ret
std
lods
je
cltd
or
inc
fldl
mov
rorb
and
mov
xchg
stc
mov
pop
test
aam
roll
adc
xor
idivb
xor
pop
push
or
data16
sub
jmp
push
in
das
and
cmpsb
pop
lods
test
nop
pop
mov
js
sbb
mov
mov
xor
ret
iret
mov
dec
sbb
dec
lahf
adc
jmp
imul
jg
cmp
jmp
imulb
jns
adc
cld
shrb
sahf
mov
and
mov
mov
inc
pop
insl
or
add
dec
movb
dec
mov
pusha
fs
dec
sbb
inc
rorl
sbb
xchg
cwtl
inc
jge
inc
cli
push
lcall
gs
gs
js
cmp
dec
mov
dec
repz
das
dec
jnp
push
xor
push
cmp
mov
aas
movsb
cmp
mov
aad
jecxz
dec
cli
dec
repz
popa
sbb
add
pop
in
bound
dec
xchg
pop
inc
push
aam
push
fldl
xchg
stos
xchg
xor
sub
ljmp
add
mov
and
sahf
or
or
cmpsb
add
test
je
sub
and
mov
mov
imul
cmp
ret
cmp
push
xchg
xchg
rolb
lret
mov
incl
jne
fmull
or
add
stos
dec
aas
outsb
cmp
mov
lods
sbb
std
sbb
mov
movsl
push
and
xor
in
or
lret
and
push
sub
clc
repz
mov
jo
lcall
cmp
xor
aas
pop
aam
or
int
enter
jecxz
test
dec
jne
out
pop
repnz
in
lods
stos
xchg
push
dec
mov
lret
jbe
fimull
jg
fwait
cmp
mov
mov
xchg
push
pusha
push
bound
mov
das
pop
add
push
add
scas
shll
stos
cmpsl
imul
pop
mov
es
lret
and
inc
cwtl
pop
arpl
js
and
mov
popf
ret
cwtl
lea
or
pop
imul
scas
scas
mov
inc
cmpl
pushf
pushf
adc
mov
lods
shlb
jno
jbe
xchg
outsb
inc
and
inc
lods
pop
and
leave
fst
out
push
insl
xchg
jns
in
mov
mov
icebp
inc
jp
leave
jecxz
daa
fsubs
mov
mov
out
adc
jne
push
repnz
ja
pop
call
ss
sub
sub
mov
std
in
pusha
or
push
sub
leave
int
xlat
or
daa
xchg
ja
lock
sahf
int
sbb
push
mov
ficoms
out
sub
mov
push
push
or
inc
addr16
jp
je
sub
dec
nop
sbb
jmp
push
jbe
push
sub
das
bound
mov
out
inc
pop
mov
push
or
sub
roll
mov
jnp
add
nopl
push
pop
pop
jno
daa
ficompl
clc
and
xchg
push
out
inc
xchg
cld
popf
mov
push
xchg
gs
push
add
push
or
pop
xor
lahf
ret
test
in
ja
iret
sub
and
jae
cwtl
fadd
pop
out
jmp
daa
jle
or
jmp
pop
or
add
pop
pop
addr16
jmp
adc
enter
stos
sahf
dec
cmovae
pop
cmp
add
into
outsb
test
fisubrs
xchg
xchg
sub
xchg
jp
cmp
push
dec
insl
in
stos
sub
lret
xchg
das
mov
push
jmp
jno
in
cmp
pop
mov
bound
xchg
sub
shr
dec
jns
fistl
mov
daa
inc
mov
mov
out
xchg
mov
pop
add
pop
je
ficoms
stos
std
add
and
sub
test
js
mov
inc
je
dec
mov
mov
mov
shll
out
push
mov
jecxz
roll
std
jle
cwtl
popf
pop
insl
sub
push
cmp
imul
rcll
mov
dec
pop
sub
dec
movb
lock
stc
lcall
pusha
into
addr16
rorb
sahf
xor
sti
adc
shrb
popf
fucom
jp
inc
andb
inc
adc
lods
rorb
xchg
add
dec
jbe
imul
mov
cmp
jne
insb
or
das
ja
inc
daa
movsb
mov
clc
shrb
movsb
outsb
cwtl
push
mov
mov
push
pop
in
test
push
and
cmpsb
push
loope
lods
repnz
ret
jns
mov
dec
idivl
inc
lret
cltd
data16
inc
sub
dec
rclb
int3
and
aad
mov
addr16
or
js
push
rol
cmp
and
fs
mov
test
fidivrs
cmp
xchg
cmp
icebp
push
sbb
cmp
lret
mov
mov
leave
jp
lock
or
out
loope
fwait
adc
mov
inc
jae
sub
ret
xchg
sbb
loope
out
push
or
fs
jnp
lock
stos
sbb
cmovnp
or
jns
daa
inc
flds
cltd
or
sub
inc
push
dec
rclb
orb
pop
lret
adc
sub
push
imul
pop
pop
mov
inc
stos
jnp
and
cmp
stos
insb
mov
pop
mov
and
popf
aam
push
pushf
pop
push
shlb
inc
ret
sub
pop
popa
lea
mov
iret
sbb
xchg
adcl
lret
inc
inc
iret
shl
dec
pop
xchg
lea
pop
inc
cmpsl
xor
inc
ljmp
mov
sbb
push
inc
leave
mov
cmp
dec
sbb
push
xor
cmpsb
and
inc
pop
jnp
ret
scas
add
clc
mov
fstpl
and
popf
mov
and
into
xchg
pop
in
jecxz
mov
dec
movsl
cmpsl
add
sbb
pop
sub
sub
hlt
cmc
cli
in
pop
in
sub
dec
mov
pusha
das
sub
dec
sub
std
push
in
dec
xchg
stos
mov
adc
cs
mov
pop
iret
mov
pop
mov
test
jl
jno
repz
sbb
dec
pop
xchg
pop
or
push
clc
subb
mov
pop
sbb
add
inc
xchg
inc
test
and
ds
mov
xchg
mov
pop
jg
cmp
cmpsl
mov
repz
xchg
data16
pop
jmp
add
mov
bnd
imul
push
sbb
jmp
adc
jbe
jb
hlt
and
sbb
popa
inc
loopne
mov
dec
fs
sub
sub
push
scas
push
popa
mov
sub
aad
and
mov
cmc
or
ret
cmp
mov
cmpb
or
daa
add
adc
cmpsl
mov
call
fldl
jp
lods
in
dec
pop
int
roll
jae
das
sub
jg
xor
mov
or
imul
scas
out
cmpsb
hlt
out
inc
out
push
adc
lods
test
add
cmp
mov
adc
stc
sbb
xchg
push
gs
clc
mov
and
inc
mov
mov
inc
in
insl
arpl
jne
shll
adc
sub
push
lods
jo
daa
scas
mov
loop
sub
xchg
out
jmp
xchg
xchg
jnp
adc
pop
push
add
into
cmp
jmp
imul
pop
dec
fadds
cmc
jmp
dec
jbe
adc
dec
int3
adc
adc
xor
pusha
xor
dec
cmp
and
test
mov
imul
in
rcll
jnp
xor
mov
xchg
out
dec
cmc
and
sub
mov
mov
add
sahf
and
jle
call
xchg
es
cmc
jae
ds
ror
xor
nop
shlb
mov
jmp
and
push
sub
scas
inc
jnp
push
sub
push
mov
sub
mov
or
rorl
mov
inc
inc
mov
js
sbb
mov
mov
stos
jl
xlat
add
cmpb
jb
test
sub
es
xchg
push
ret
int
xchg
cvtps2pd
inc
out
fstps
add
daa
mov
sub
cli
sti
cmpsl
pop
mov
gs
ss
fistl
add
ret
in
mov
xor
repz
adc
xchg
and
loopne
mov
in
cmc
pop
aaa
and
dec
and
dec
inc
rorl
addr16
shll
int3
add
pop
jae
push
gs
or
bound
sbb
or
mov
jbe
mov
push
iret
inc
jno
xor
xorb
inc
fildll
pop
xchg
mov
jle
sub
jae
add
xor
aam
sbb
jo
or
fbstp
rclb
sub
stc
fmull
push
jmp
lock
je
not
xor
arpl
loopne
clc
lahf
or
and
or
pop
call
cmp
xlat
jae
cmc
adc
pop
decb
lahf
in
movsl
lret
jnp
push
popf
jnp
or
loope
add
lods
nop
lret
insb
xchg
test
sbb
lcall
mov
dec
pop
enter
pop
bound
jnp
incl
addr16
sub
inc
insl
gs
mov
adc
pop
int3
pop
stos
sub
cltd
out
add
ds
insb
jl
adc
test
aad
jne,pn
nop
andb
pop
int
int
stc
adc
pop
adc
dec
sbb
in
xchg
cmc
xor
lcall
cmc
shr
mov
pop
add
or
lahf
orb
sti
loop
ret
aas
jecxz
pusha
aad
xchg
movb
call
aad
push
cmp
mov
push
arpl
sub
inc
cmp
gs
das
lcall
or
add
adc
lds
and
mov
mov
sarl
insb
mov
and
in
mull
pop
nop
adc
repz
xlat
and
subl
leave
sbb
xor
aas
jno
je
lahf
rorb
out
add
adc
outsl
xchg
sar
sub
stos
aas
jge
inc
mov
cmc
mov
leave
in
pushf
test
insl
fistl
jg
sti
testb
cmp
xor
js
cmp
insb
movsb
test
cmp
push
add
addb
mov
aam
pop
andl
pusha
mov
sbb
mov
call
ss
add
dec
jmp
push
test
mov
insl
inc
bswap
mov
push
dec
xchg
arpl
xor
inc
adc
jg
sub
outsl
mov
loop
push
mov
dec
lcall
pop
call
es
inc
fisubl
jecxz
xor
shr
push
push
stos
mov
mov
mov
inc
sbb
movsb
xchg
xor
add
repz
or
push
jp
outsl
xor
adc
lods
and
mov
stos
push
and
fsts
jge
into
ret
sarb
lcall
jle
sti
loop
add
and
sbb
push
xchg
test
inc
sub
xor
mov
lock
jge
fildl
mov
add
push
scas
dec
call
testb
and
rclb
out
adc
mov
sub
fldcw
inc
dec
iret
inc
sbb
in
cmp
andb
cmp
jp
lods
jecxz
add
shrl
push
sbb
data16
ds
loop
sbb
xchg
dec
xchg
in
xchg
jbe
scas
les
scas
pop
loope
push
lds
mov
lahf
arpl
jae
shl
jle
mov
shlb
inc
xchg
cmp
adc
push
mov
lock
das
std
in
mov
fistl
fwait
push
cs
or
xchg
scas
jne
and
mov
aam
dec
or
fwait
adc
mov
push
mov
bound
push
test
mov
clc
push
inc
xchg
sbb
pop
mov
xchg
cmp
ds
hlt
stos
fs
repnz
and
rcll
rcrb
pop
xor
cmp
inc
pop
inc
std
or
pop
and
mov
mov
mov
xchg
cmp
outsl
sahf
das
call
add
and
or
lods
push
mov
outsb
imul
xor
pop
adc
mov
xlat
inc
aam
push
and
push
rcll
test
push
lret
repz
sbb
iret
cmc
jmp
adc
pushf
mov
bound
aam
daa
push
addr16
push
jns
fwait
jno
dec
lods
fldcw
mov
jmp
xor
add
lds
mov
xchg
cld
ficoms
mov
outsb
lds
fnstenv
in
xchg
out
xchg
add
cmp
cmp
sub
xchg
iret
jl
test
aaa
sub
pop
insl
scas
cmp
pop
sbbl
cs
pop
cmp
lods
sub
leave
jle
ret
mov
inc
jle
mov
movsb
imul
inc
jno
or
stc
test
ficoms
or
and
test
leave
pop
adc
mov
mov
imul
loope
out
inc
sbb
pop
mov
push
mov
jno
add
fcomip
rolb
lods
in
mov
scas
fistps
lods
ret
push
jl
out
mov
cmp
in
xchg
mov
or
mov
adc
ret
or
jge
pop
dec
xchg
push
hlt
push
cld
fadds
jnp
out
scas
bnd
outsb
aam
shll
sub
sub
ja
clc
mov
pop
dec
imul
mov
gs
leave
inc
movsb
dec
mov
xchg
sub
dec
pop
je
lds
loope
out
cltd
jnp
arpl
jns
mov
or
dec
pop
pusha
sbb
mov
addr16
sbb
and
ss
cmp
sbb
les
sub
mov
movsl
sbb
addr16
xchg
add
mov
inc
push
mov
mov
push
mov
or
push
fidivl
xchg
mov
xor
xor
mov
push
sbb
sbb
cmp
pop
jb
aad
inc
and
dec
aad
cld
mov
mov
cmp
aam
xor
xchg
test
loope
xchg
push
notb
shl
pop
push
jmp
in
inc
xor
pushf
push
xchg
scas
cmpsl
out
push
out
cmp
and
mov
push
sbb
push
cmp
sbb
sub
cltd
push
ffree
out
enter
pusha
mov
insb
bound
dec
xchg
movb
movb
cmc
inc
or
js
ja
ret
adc
xor
negb
adc
and
add
insb
out
mov
js
ret
sbb
inc
jnp
sub
hlt
mov
lds
inc
sete
push
lock
dec
ds
or
out
je
push
jmp
repnz
repnz
cmp
loope
cmp
add
std
popa
rcll
out
mov
mov
std
cli
sti
sub
dec
loop
jl
jge
mov
adc
loop
scas
xor
sbb
pop
outsl
lret
imul
jge
clc
inc
mov
stc
mov
cmp
or
adc
dec
aaa
jg
and
lcall
ds
shll
push
sbb
fdiv
addr16
fisttps
loopne
sbb
loope
iret
es
inc
sbb
in
mov
xor
ret
stc
lahf
push
pop
mull
out
enter
mov
mov
test
sub
nop
dec
jo
sub
or
in
add
and
xlat
das
cltd
out
lock
and
or
cmp
pop
sub
fadd
sub
inc
push
jge
rcrl
mov
pop
lret
adc
loope
cmp
jg
sbb
int
icebp
jmp
sbb
addl
insb
dec
addl
hlt
adc
push
jg
out
pop
pop
mov
out
inc
vcvtps2pd
shll
stos
sahf
or
add
pop
lea
bound
rorl
xchg
xor
ret
mov
sub
sahf
iret
rolb
icebp
test
in
adc
lock
or
test
insl
subl
adc
clc
call
or
cmp
mov
add
xchg
nop
sbb
jno
rcrl
mov
jno
adc
push
xor
add
dec
ret
cmpsl
and
inc
adc
pushf
push
pop
das
xchg
jbe
cmp
enter
or
es
ret
jnp
mov
cmp
adc
and
movsl
jae
adc
ljmp
dec
popa
jo
mov
aad
mov
mov
call
fsubrs
sub
bound
loop
leave
iret
rcrl
push
in
mov
repnz
jl
pushf
faddl
fistps
movsl
lahf
ret
aam
ds
stos
lret
repz
mov
outsl
pushf
int3
add
repz
or
pop
repnz
adc
jl
mov
movb
add
jecxz
lock
inc
cmp
ds
rcl
icebp
mov
inc
dec
pop
test
jp
imul
insl
lds
mov
push
mov
jmp
mov
xchg
dec
xor
outsb
mov
insb
xorb
jo
lcall
sti
jb
test
mov
mov
mov
inc
mov
dec
cmpsb
push
fidivl
es
orl
xor
pop
popa
cmp
test
xor
inc
das
subl
mov
add
out
jb
movsb
sbb
cmp
pushf
adc
hlt
cmp
outsb
movsb
mov
js
mov
or
sub
mov
mov
xchg
mov
jl
adc
orl
mov
jecxz
dec
pop
sbb
into
jecxz
cmp
mov
in
dec
das
fmuls
repnz
xchg
fsubs
cltd
jne
jno
mov
pop
add
frstor
mov
repz
cwtd
stos
xor
clc
cld
xor
fdivs
cltd
sub
add
xor
jb
imul
mov
push
sub
leave
xchg
stos
push
sahf
sarb
pop
test
inc
adc
mov
mov
flds
movsl
and
pop
pop
sbb
clc
cmp
gs
repz
pop
cmpsl
fwait
jnp
in
scas
inc
jb
mov
jbe
add
fldcw
push
cmc
lods
in
stos
pop
ret
add
cmpsb
dec
js
in
mov
lcall
push
ljmp
call
mov
imul
xchg
outsl
push
sbb
dec
bound
mov
jbe
pop
subb
sar
ss
hlt
sti
aam
xchg
cld
xlat
push
mov
lock
test
pop
ja
dec
cmpsb
xchg
fimuls
cld
add
lods
push
repz
les
aas
mov
leave
into
lock
ret
or
leave
fidivrl
rorl
push
and
adc
mov
addr16
cmp
mov
bound
cmp
jle
mov
rolb
adc
xor
mov
scas
and
repz
jmp
aas
sbb
xchg
jmp
push
mov
cltd
or
adc
inc
mov
xlat
mov
mov
test
popa
or
sub
sub
mov
popa
jbe
dec
pop
lcall
subl
cmc
pop
or
xor
or
sarl
push
xchg
lea
cmp
lock
sub
mov
mov
jns
xchg
pop
lret
fwait
js
clc
mov
popa
jno
jecxz
daa
pop
sarb
dec
bound
aam
adc
pop
shll
add
loop
in
repnz
js
cli
pop
fs
fwait
adc
fwait
inc
add
clc
ja
adc
xchg
mov
sbb
lods
lock
push
subb
lret
aad
mov
je
add
pop
loope
fwait
sub
scas
inc
lock
mov
lahf
cmp
lcall
push
jae
fcmovne
sbb
dec
add
jne
rclb
data16
iret
push
cmp
ret
sarb
repz
fadds
push
mov
jg
cmp
lahf
pop
scas
sbb
mov
xorl
pop
mov
lods
mov
idivl
test
jl
out
dec
rorl
xor
cmc
ja
inc
jae
xor
pop
cmpsl
frstor
jnp
ljmp
aad
cmp
rorl
mov
insl
sti
std
xor
lret
xchg
rclb
rclb
jg
push
inc
imul
rorb
test
pushf
mov
add
andl
es
xchg
jno
push
pusha
mov
leave
cltd
out
ja
pop
leave
pop
xchg
ljmp
mov
ret
push
xor
in
insl
push
sbb
fildll
insl
xlat
lcall
fidivrs
and
int3
push
sub
xchg
rcrl
or
decl
je
cmpsl
pushf
push
add
or
jns
fdivs
loopne
subl
inc
sarl
pop
xchg
xchg
rcl
call
movsb
das
movsb
int
out
test
shrl
std
subb
stos
ret
lahf
into
inc
or
push
scas
popa
cwtl
repz
cmp
cs
push
fstpl
lods
pusha
jle
ja
dec
add
jb
pop
inc
sub
or
lods
test
push
mov
mov
xor
pop
das
loop
add
add
sbb
mov
testl
loope
aaa
test
xor
ret
xchg
cmp
shl
push
xchg
cmp
imul
jne
out
fsubl
mov
subl
repnz
iret
stos
out
outsb
and
pop
adc
movsb
sbb
push
xchg
mov
jmp
int
ljmp
mov
cmpb
aas
xor
addr16
fmuls
lcall
cmp
pop
das
jp
cmpsb
xchg
movsb
mov
ret
lret
push
loop
push
jge
das
lret
enter
or
nop
cltd
pop
mov
aad
jae
mov
shll
add
xor
adc
sbb
xchg
jbe
mov
pop
sbb
es
dec
ficoms
sbb
push
dec
mov
cld
inc
cmp
adc
into
clc
fadd
cmp
push
xor
jl
dec
push
dec
mov
xor
cmpsb
sti
lods
cs
movsl
lock
aas
shll
pushf
sbb
xchg
pushf
stc
adc
jnp
xor
adc
jae
sub
lods
sar
push
jecxz
push
inc
cwtl
call
imul
movsl
repnz
in
test
test
loop
in
push
mov
lea
push
clc
sti
push
mov
mov
ljmp
je
movl
divb
lods
imul
jae
stos
jae
pop
fcompl
fucom
dec
int
addr16
jb
dec
fwait
dec
pop
fidivrs
in
sub
loopne
fisubl
sub
lods
fisubl
popf
stos
cmp
jno
das
xor
lahf
lods
mov
das
or
sbb
push
movsb
sti
lods
push
add
adc
mov
gs
cmp
pop
lret
fwait
aas
add
push
sbb
int
bound
pop
adc
lock
aam
cmp
decb
jg
ljmp
out
mov
fs
sub
fwait
xchg
ss
push
fs
adc
pop
insl
mov
mov
fbld
mov
mov
xchg
jb
sub
push
imul
pop
test
popa
stc
xchg
xchg
and
mov
ss
mov
adc
pop
pop
push
pop
negl
aas
push
fdivl
pop
and
sub
lods
dec
scas
jge
push
and
dec
mov
xchg
imul
in
fildll
imul
fisubs
in
lods
xor
push
push
or
hlt
inc
or
fsts
jecxz
jb
stos
cmc
popa
fucomp
lods
les
shll
sub
int
push
sub
icebp
clc
xchg
mov
popf
in
mov
jmp
pop
mov
mov
and
xchg
lret
adc
mov
pop
sbbl
aam
mov
pop
xor
adc
int
adc
push
adc
leave
ficoms
in
inc
fldcw
lods
adc
lcall
sbb
lds
test
push
pop
pusha
jbe
adc
shll
movb
xchg
and
inc
cmp
jne
push
fdivrl
scas
xchg
rcrb
push
sarb
insl
mov
add
cld
sub
pop
jle
push
ficompl
sahf
sbb
iret
xor
jle
filds
and
stc
and
and
out
dec
cmpsb
or
sbb
inc
or
ret
inc
mov
cmp
mov
stos
shl
inc
sbb
mov
ljmp
fwait
dec
push
pop
inc
dec
pop
sahf
or
push
sarb
and
int
adc
mov
fdivp
add
stc
lahf
cld
roll
cs
xchg
adc
psubw
sbb
mov
inc
test
daa
mov
push
xchg
jl
int3
xchg
scas
jle
mov
popa
insl
push
sahf
hlt
lods
movsb
dec
xchg
fwait
inc
and
xchg
xor
popa
add
dec
cmp
adc
and
inc
fxch
jecxz
icebp
add
cltd
jl
or
pop
mov
or
imul
test
scas
inc
ss
mov
outsl
inc
cmp
bound
adc
call
movsb
pop
jnp
xchg
or
pop
cmp
xchg
push
aas
out
inc
shrb
ds
cwtl
sti
fwait
jo
jno
test
icebp
fcomi
rorb
lea
mov
jno
decb
pop
cld
insb
and
into
loopne
and
aaa
push
leave
mov
sub
push
jne
xchg
fcmovnbe
mov
and
mov
sub
sti
fadds
idivl
hlt
notl
mov
aaa
push
sub
mov
jnp
mov
xor
test
sub
jl
das
test
jb
mov
iret
inc
mov
popf
pop
mov
or
pop
into
movsb
in
pop
or
push
gs
jge,pn
mov
pop
pop
jae
pop
cwtl
out
xor
das
push
int
hlt
add
lahf
pop
cmp
js
fcompl
push
sub
cmp
test
mov
fimuls
mov
pop
mov
sub
pop
dec
cmpsb
xlat
jle
js
jle
sub
dec
scas
cmp
ja
mov
jmp
dec
mov
fbstp
add
xor
mov
rolb
sub
xchg
inc
mov
xchg
or
fbstp
notb
insb
lcall
mov
xor
inc
dec
cld
xchg
dec
xchg
ficomps
addl
dec
jecxz
push
scas
aam
and
sbb
sarw
cwtl
aas
jae
mov
lock
outsl
adc
dec
xchg
lock
mov
mov
dec
jbe
or
and
push
mov
fstps
pop
jmp
adc
xchg
jp
loopne
adc
repz
inc
inc
sub
lock
or
cld
push
loope
lds
dec
sbb
shll
imul
cmp
call
mov
loope
inc
mov
lods
mov
nop
adc
mov
xchg
adc
in
sbbl
adc
insl
int3
add
adc
lds
mov
js
inc
and
addb
push
test
orl
pop
test
inc
push
movsb
cmp
ss
out
mov
add
in
push
addr16
aas
fistl
addr16
leave
add
mov
andl
out
testb
test
jne
xlat
sahf
push
push
rcrb
ds
sub
jge
test
pop
xor
nop
mov
ljmp
push
imul
fstl
mov
shlb
xor
test
das
sub
mov
pushf
sub
mov
iret
out
mov
xor
cmp
jo
cld
mov
scas
into
push
add
jecxz
mov
shlw
and
fcmove
je
or
xchg
test
ret
out
lahf
sub
sub
mov
enter
xchg
imul
push
andl
daa
jo
push
and
lretw
mov
cmp
movsl
not
sahf
in
inc
jo
pop
and
xor
mov
sub
mov
inc
pop
std
lds
add
outsb
ficoml
test
or
lds
ja
add
jp
addr16
daa
dec
or
mov
test
inc
sbb
je
add
dec
pop
ja
ljmp
enter
aam
gs
push
jno
pop
xor
jbe
sbb
cmp
jbe
outsb
pop
bound
aas
mov
iret
nop
sahf
mov
cmp
out
adc
orl
bswap
push
scas
inc
sub
jbe
repz
mov
lods
lock
or
test
insb
pop
popf
mov
lea
jg
jo
test
test
scas
and
sub
fwait
cmp
test
jo
xor
or
in
jns
mov
or
fsts
pop
cltd
ret
cli
les
test
and
xchg
scas
out
mov
dec
sbb
xor
popf
call
sbb
sbbl
rolb
pop
in
mov
cli
adcl
pop
xchg
dec
scas
scas
or
inc
mov
jnp
fnstsw
lcall
sbb
aam
xchg
and
cmp
clc
add
push
stc
xchg
insl
add
dec
lahf
daa
arpl
and
repz
movsl
mov
arpl
leave
cli
xlat
subb
test
cmp
xor
movsb
mov
mov
fwait
out
inc
or
test
pop
jno
aam
xlat
stc
cmc
sbb
sbb
jmp
stc
cmpl
push
mov
jo
pop
cmovns
lods
xor
inc
xor
pop
icebp
insl
lcall
and
push
sbbb
outsl
ret
add
subl
test
lods
sbb
lahf
pop
inc
adc
frstor
add
js
push
loope
stos
mov
daa
xchg
cs
shll
cmc
imul
inc
in
cmc
fdivl
jno
sub
mov
stos
pusha
push
xchg
cmp
push
cmp
jne
cmp
lea
mov
sub
lods
jecxz
dec
mov
adc
imul
jo
and
xchg
out
daa
push
dec
out
ror
subl
push
xor
sbb
mov
jno
call
std
icebp
sti
jmp
jns
mov
xchg
and
push
push
and
jecxz
push
dec
mov
or
jge
fidivrl
cmp
fmuls
mov
fcoml
lods
mull
scas
pushf
sub
aas
clc
int
pop
add
jo
jmp
js
arpl
push
xchg
cmp
xchg
mov
cs
mov
inc
daa
xor
jge
inc
mov
mov
jne
out
popa
adc
lods
nop
int
ror
adc
fldenv
cmp
testl
push
mov
pop
test
fnstenv
es
shlb
hlt
add
pop
mov
mov
push
inc
mov
xchg
mov
dec
orl
outsl
bound
sub
cmp
pop
pop
lret
pop
loop
lds
shrb
shrl
mov
clc
outsb
fwait
scas
lea
dec
mov
cmpsl
push
and
fnstcw
negb
daa
daa
xorl
and
inc
sbb
in
xchg
cmp
in
pusha
test
sti
fidivl
pop
mov
or
pop
jmp
push
stos
pop
ss
addr16
rorl
out
inc
pop
cmp
pop
fsubl
jge
mov
pop
mov
in
frstor
insb
fiadds
push
fsubrl
fwait
stc
jbe
jno
lret
rcl
les
pop
stos
hlt
sub
jno
adc
mov
fcoml
repnz
call
loope
mov
cmc
pop
push
jl
das
adc
arpl
adc
xchg
shlb
sti
and
dec
add
push
fldl
shll
dec
je
addr16
ret
xor
cs
xor
nop
mov
or
std
jmp
sbb
out
push
stc
sbb
je
adc
mov
mov
adc
rcr
mov
cltd
and
or
mov
or
or
repz
push
mov
and
rol
sbb
repz
adc
sbb
jmp
cmp
cmpsb
outsb
mov
mov
stos
je
push
mov
arpl
jg
addl
loopne
push
cmp
dec
fxch
push
jae
das
pop
and
jb
in
aaa
mov
enter
pop
sub
rcrl
in
call
icebp
xor
jp
push
into
aaa
pop
cli
lcall
dec
dec
push
pop
notl
loope
xor
inc
jg
xchg
or
mov
ss
mov
lret
mov
arpl
mov
jno
xchg
mov
pop
or
loope
mov
pop
insl
icebp
stos
loop
mov
or
and
rolb
adc
jno
pop
pop
insb
fs
mull
and
jmp
cld
cmp
stc
sbb
add
mov
mov
shl
jl
es
jb
iret
mov
sbb
ss
enter
mov
jge
add
xor
aad
sbb
daa
pop
xchg
sub
cli
mov
pop
in
cmc
or
inc
ja
je
add
insl
pop
mov
xor
insb
mov
loope
dec
sub
outsl
sbb
push
je,pt
mov
jecxz
rcrb
push
lahf
push
std
mov
mov
stc
mov
das
push
leave
pop
or
mov
pop
mov
dec
scas
mov
xchg
loop
shll
jae
xor
xchg
push
insl
pop
repz
sub
and
mov
test
mov
mov
adc
pop
rorl
mov
aaa
inc
sub
mov
sub
cmpsl
mov
imul
addr16
mov
pop
mov
ficomps
inc
out
pop
pop
and
scas
shl
push
daa
test
jns
mov
test
test
mov
xchg
inc
shrb
icebp
sub
gs
jae
mov
cwtl
and
adc
jmp
add
adc
or
xchg
adc
mov
mov
mov
out
mov
push
push
xchg
jmp
pop
or
sub
cmc
inc
adc
ret
fmull
mov
insl
xor
sub
add
pop
sbb
cwtl
mov
fisttpll
mov
bound
ficoms
add
addr16
sub
inc
pop
mov
cmp
push
jle
pop
sbb
sub
imul
test
push
jo
push
jno
xchg
lea
bound
popf
stos
lds
ret
xchg
call
int3
pop
pop
movsb
mov
test
mov
hlt
jecxz
in
sub
and
out
mov
popf
mov
cmp
or
adc
mov
mov
cs
push
call
into
cwtl
and
pop
int3
dec
mov
mov
popf
and
pop
pop
sahf
repnz
xchg
enter
mov
inc
mov
ret
les
pop
cmc
adc
jecxz
stos
test
out
push
push
lea
dec
add
push
mov
xchg
xchg
out
cmp
mov
and
adc
test
cmp
mov
mov
sbb
pop
fstpl
pop
fiaddl
andb
adc
rorl
in
push
mov
or
test
add
ja
icebp
inc
cwtl
mov
adc
sbb
out
push
inc
xchg
mov
add
stc
adc
jp
cmp
pop
in
xchg
add
pusha
lea
mov
roll
add
jmp
pop
test
pop
push
roll
repnz
lahf
inc
jb
mov
cmp
sahf
in
add
dec
jmp
mov
cmpl
or
int3
aad
sub
popf
adc
cmp
and
ja
mov
jbe
pushf
and
cmp
test
loop
sbb
push
out
xchg
and
xlat
mov
arpl
jb
xchg
add
lods
cmc
stc
std
into
lods
add
mov
mov
xchg
scas
fmull
and
insl
shrl
pop
int
mov
add
ds
imull
jl
das
jne
adcb
in
ret
ja
es
daa
out
sbb
push
mov
sub
addl
jge
movsb
test
and
mov
insl
mov
and
lret
dec
addr16
mov
push
dec
push
push
leave
xchg
or
fildl
aas
dec
rorl
jp
ss
sbb
cmp
js
mov
jmp
xor
mov
xchg
push
int3
xor
ret
roll
fisubrs
aaa
int
jle
push
in
xchg
scas
clc
mov
cwtl
dec
mov
push
jle
sbb
shlb
test
repz
inc
stos
or
adc
push
push
mov
push
mov
sub
or
push
xchg
pop
stos
jno
pop
ds
mov
shlb
fidivl
out
aaa
outsl
jmp
mov
out
pop
mov
inc
dec
rcrb
sub
in
outsb
jae
jp
xor
and
out
sbbb
mov
ja
scas
js
pop
dec
out
out
push
adc
and
mov
lea
rol
andb
add
imul
pop
les
mov
cli
nop
clc
sbb
mov
xor
adc
pop
cld
jp
cld
xchg
scas
cmpsl
inc
push
aam
cli
scas
out
decb
push
jns
addr16
mov
lret
cmc
fdivl
and
mov
pop
or
pop
out
jp
addr16
sub
dec
lret
addr16
sbb
ds
sub
test
aaa
cs
clc
mov
mov
adc
ss
mov
dec
mov
dec
rcll
jns
mov
loop
sti
jl
lahf
mov
bound
std
aaa
stos
add
hlt
loop
cmp
test
cltd
enter
das
push
inc
pop
jge
jge
addr16
scas
push
mov
in
loop
fistpll
cmpsb
inc
out
jb
xor
movsl
or
add
bound
cmp
imul
repnz
inc
jne
jne
cmpsb
jae
jl
cmp
adc
out
adc
xchg
mov
into
sbb
push
imul
ret
ja
loopne
ret
jnp
jne
sub
push
je
jno
in
pop
and
xor
prefetch
or
out
dec
xor
xchg
inc
jae
cmp
clc
rorb
mull
icebp
adc
lods
testb
aas
and
dec
push
mov
jmp
sub
loope
xlat
mov
int
jle
inc
and
push
adc
add
shll
sub
clc
sbb
jmp
and
fisttps
or
mov
test
add
push
test
ss
jns
test
cmpsb
cmpsb
cmp
ss
popa
dec
hlt
xchg
or
lcall
orb
pop
lret
shl
pop
sub
fistps
dec
push
adcl
mov
loopne
add
std
dec
imul
fxch
lahf
mov
in
adc
mov
les
pop
xchg
adc
xor
push
outsb
xchg
out
xorl
inc
mov
jle
sar
push
mov
sub
add
xchg
sbb
test
and
in
ret
xor
inc
scas
popa
mov
dec
adc
add
lock
mov
inc
adc
ror
mov
iret
incl
sbb
sub
dec
adc
mov
jg
stc
push
jnp
xor
adc
jne
add
xor
movsl
sahf
clc
jbe
aad
out
jl
pop
dec
leave
insb
xor
and
adc
pop
daa
adc
outsl
pop
sbb
int
dec
testl
push
es
cmp
mov
adc
leave
mov
out
and
stos
icebp
push
gs
mov
dec
out
add
mov
fnstsw
ss
push
sbb
jne
lret
add
lods
aad
pop
mov
negl
inc
dec
mov
dec
je
inc
cmp
push
ltr
test
in
rcrl
jb
push
pushf
push
fcoml
in
mov
and
push
call
shr
and
adc
jecxz
xor
mov
movsl
xor
data16
cmp
push
ret
std
rorb
in
test
int
dec
push
into
or
xor
fyl2xp1
and
mov
ds
and
cltd
adc
movsl
cld
call
sbb
xchg
jge
test
jbe
inc
jne
and
nop
and
test
or
jnp
aaa
je
stos
and
movsb
cs
add
pop
dec
dec
cld
sahf
aam
test
mov
imul
push
sbb
lcall
push
fldl
shr
stos
pop
andl
adc
mov
scas
das
or
xchg
inc
sti
idivl
push
into
jecxz
jge
hlt
push
sub
scas
pop
mov
mov
push
fwait
pop
and
inc
pop
mov
push
pop
shll
or
inc
cmpsl
lcall
add
mov
pop
les
sahf
insb
push
jg
andb
arpl
jcxz
repnz
mov
cmpsb
jl
jg
dec
push
mov
xor
push
ret
loop
mov
adc
fisubrl
jnp
scas
jnp
call
jge
inc
xor
cs
mov
mov
lret
ret
aam
lcall
mov
pop
lret
xchg
clc
cmp
sahf
pop
cmpsl
pop
push
mov
push
sub
mov
movsl
inc
int3
push
dec
jo
outsl
jae
pop
aam
mov
scas
enter
fdivrs
jmp
sti
scas
out
les
inc
sbb
jb
sbb
loopne
xor
adc
aam
jnp
repnz
popf
cmp
fwait
and
mov
pop
dec
jmp
pushf
aaa
mov
cmpsl
mov
out
movsl
scas
out
mov
hlt
and
les
fdivp
pop
adc
xchg
push
adcb
and
mov
das
pop
ret
push
dec
mov
cld
and
aas
stos
nop
lret
rcrl
cmp
sbb
sub
xchg
ret
call
out
inc
jecxz
in
rcrb
insb
sbb
push
or
or
ss
mov
in
cs
xor
push
pop
mov
testb
stos
in
push
or
popf
sub
adc
push
aas
push
mov
sub
out
movsl
cmp
incb
mov
and
add
outsb
movsl
iret
rcrl
sbb
leave
outsl
sub
loopne
xchg
mov
in
inc
add
push
popf
pop
dec
push
adc
pop
bound
mov
xchg
les
fldenv
xor
inc
inc
fcmovne
pop
push
inc
adc
jp
and
ror
incl
lds
incl
cltd
out
sbb
sub
int
fnstenv
adc
insl
iret
lds
pushf
push
movsl
cwtl
shll
xchg
push
fiaddl
push
cmp
leave
pop
mov
add
push
lock
inc
push
pop
mov
and
int3
rclb
bound
popf
inc
and
xchg
jnp
and
xor
xchg
ja
in
cli
push
shr
icebp
pop
sbb
adc
les
cmp
dec
popf
xchg
in
sarl
test
gs
push
shr
mov
scas
popf
cmpsb
incl
adc
inc
push
push
sbb
push
setp
xor
into
or
dec
outsl
push
lret
mov
out
sbb
call
adc
es
lock
cmp
push
adc
testl
bound
jge
sbb
xchg
ret
pop
mov
rdrand
jg
aaa
dec
test
dec
int
or
xor
shll
inc
sti
inc
lock
daa
aas
das
pop
push
xor
les
jnp
stos
and
fsubs
jp
cs
int
mov
pop
jge
push
movsb
insl
mov
fs
fldt
mov
imul
and
adc
xchg
mov
pop
iret
arpl
xor
fidivrs
xchg
repz
mulb
sbb
and
insl
mov
push
scas
ljmp
jae
data16
ret
jle
inc
loop
jb
dec
adc
clc
sbb
jne
cmp
aas
mov
inc
pop
int
aaa
add
jns
nop
cmpsb
aas
fisubl
sbb
cwtl
xchg
jecxz
or
es
leave
inc
mov
pop
stc
jo
mov
jnp
dec
mov
jmp
arpl
popw
mov
pop
sbb
imul
mov
jns
and
cmpsb
mov
xchg
adc
xor
xchg
int
call
clc
inc
nop
das
or
inc
popf
dec
cmp
mov
jne
push
jne
out
test
mov
cmp
dec
xchg
out
sbbl
cmpsb
pop
orb
inc
jns
dec
sub
mov
push
mov
in
xlat
cmpsl
sbb
cmp
divb
mov
pop
or
iret
test
adc
add
sub
mov
dec
mov
or
dec
and
xchg
mov
add
cmc
or
pop
or
or
das
jb
lds
loopne
sahf
lods
mov
sbb
call
rorb
fnstsw
push
lahf
jno
jae
outsl
std
push
pop
push
mov
and
ljmp
cmp
loop
sbb
imul
push
cs
push
jge
gs
and
sbbb
test
cmp
gs
fisubrl
lock
out
adc
mov
loop
sbb
in
sub
aaa
mov
das
push
bound
or
and
mov
and
shll
stos
cmp
int3
shrb
out
cmc
loop
mov
mov
fwait
mov
xchg
push
adc
push
jnp
cmp
pop
cmp
lods
xor
imul
jne
mov
sbb
repnz
mov
cmp
mov
jno
pop
pop
add
sbb
orb
dec
fisubs
lret
iret
mov
mov
add
add
int
mov
out
sub
cli
ds
adc
ss
push
dec
ss
and
and
popa
inc
aad
push
sbb
subl
inc
dec
pop
testl
fadds
adc
jp
mov
cmp
mov
movsb
cli
test
push
lcall
xor
in
sbb
jg
ljmp
jo
fwait
icebp
outsl
out
les
pop
imul
pop
jg
jne
outsl
outsb
pop
negb
cmp
repz
ja
cmp
and
sub
repz
insl
adc
push
inc
adc
jge
call
push
mov
dec
fsubrl
jo
popa
mov
adc
aam
and
test
int
movsb
in
test
jns
lahf
xchg
mov
push
movsl
popa
mov
lock
adc
mov
xor
out
push
enter
dec
pusha
loop
or
dec
mov
incl
cli
cwtl
rcrl
dec
fdivp
inc
incb
dec
xlat
push
inc
and
ret
jns
or
mov
mov
and
es
dec
jecxz
mov
and
cld
test
jns
mov
cld
add
ja
and
mov
jbe
mov
and
xor
mov
test
and
insl
in
or
jecxz
hlt
gs
jae
les
cmc
dec
popa
dec
adc
and
mov
push
mov
in
xchg
mov
or
imul
xor
rol
inc
cmpsb
repnz
cmp
sub
ja
or
xchg
push
mov
fsubrs
xchg
test
and
mov
mov
xchg
daa
int
adc
lret
cmp
imull
dec
cmp
int
jle
sub
add
les
dec
and
insl
js
jnp,pt
imul
jo
aaa
ljmp
rcr
jg
rclb
daa
fidivl
flds
stos
orl
mov
stos
rorb
inc
sub
adc
fwait
sbb
fnstenv
sub
scas
mov
sub
ret
xor
jmp
xchg
roll
dec
inc
imul
add
mov
sub
ret
mov
xor
fmull
add
fadds
add
mov
rorb
xchg
or
rcrl
push
nop
push
jmp
fstl
pop
add
imul
repz
in
jge
test
pop
push
xchg
add
sti
push
xlat
pop
jge
pop
xor
jno
mov
ja
xor
shl
xchg
adc
jnp
js
push
movsl
faddl
out
scas
mov
fs
and
xchg
xor
or
lahf
mov
and
push
fs
inc
fnclex
or
ret
mov
das
outsl
out
jae
mov
mov
lods
stos
je
mov
sub
sti
dec
push
jge
push
cmp
or
leave
xor
outsl
cmp
mov
icebp
arpl
inc
sbbb
es
fsubs
xchg
enter
stc
sarl
inc
std
inc
or
adc
sub
sub
mov
or
in
mov
lret
mov
insl
or
aas
sahf
or
out
pop
shrl
and
mov
jge
adc
sbb
jecxz
into
and
cmp
into
adc
pop
jne
bound
cmp
mov
icebp
ffree
and
outsl
cmpsl
test
mov
push
shrl
dec
mov
add
stos
test
fisttpl
popa
sbb
out
xchg
mov
insl
adc
rcrl
loope
ret
fnstsw
aad
inc
add
xor
sub
mov
into
add
push
out
xor
xlat
dec
add
jle
cmc
aam
call
cwtl
in
nop
xor
pop
mov
cmpsl
xlat
push
loopne
sahf
inc
dec
jmp
inc
push
jne
iret
into
arpl
popa
repz
iret
movsl
imul
mov
in
jmp
rcl
xor
movsl
stc
pop
aas
jbe
or
and
cmp
imul
pop
push
inc
std
pop
sbb
pop
cmp
fdiv
mov
push
inc
fnsave
jbe
pop
mov
and
sub
subb
or
lock
or
mov
dec
data16
mov
test
leave
adc
popl
roll
mov
inc
adc
fdivs
std
je
mov
inc
adc
fs
ret
jge
cmpsl
cmpb
jle
or
aam
push
push
mov
xchg
cmpsb
fwait
lods
pop
or
imul
int3
jae
jb
mov
xor
jne
lret
je
movsl
ficoml
aam
aaa
lahf
test
dec
mov
or
and
je
mov
sub
sub
cmpsb
fwait
adc
inc
xorl
repnz
inc
in
popa
adc
mov
xlat
mov
jl
rcrl
scas
push
or
inc
or
mov
out
outsb
inc
fcmove
cmovle
mov
inc
cwtl
mov
pop
mov
push
jnp,pn
pop
inc
sarb
imul
sbb
shlb
sub
mov
popa
sbb
fnstenv
mov
inc
mov
or
popf
loopne
sti
xchg
jae
xchg
xchg
mov
imul
repnz
xor
iret
js
rolb
mov
dec
rcl
push
push
aaa
xor
add
shrl
iret
mov
jbe
xor
and
test
push
fwait
and
xchg
ljmp
pop
xorl
cwtl
repnz
cmp
movsl
xchg
mov
cmpsb
fcmovne
daa
stos
mov
jle
push
add
dec
jbe
cmp
mov
push
push
inc
jns
mov
insl
adc
inc
popa
call
add
mov
iret
out
push
mov
mov
iret
je
xchg
repnz
pusha
fistpl
mov
movsl
mov
fisttpl
cmpsl
es
mov
scas
push
les
pop
movsb
not
fwait
jmp
sbb
inc
push
or
popf
std
jno
ret
or
repz
fadds
and
lcall
push
mov
fdivrs
stos
scas
jl
dec
sub
in
pop
int
out
xor
sbbb
test
jae
leave
pop
fwait
and
jns
ss
dec
push
xor
adc
repnz
push
jg
push
sbb
sub
lret
jnp
stos
pop
add
mov
outsl
jne
xor
or
sarl
test
push
add
lods
jb
lods
inc
dec
xchg
cmp
sub
fs
test
out
add
xchg
pop
inc
int
hlt
daa
push
shr
pusha
out
mov
imul
comiss
in
loop
out
in
jnp
xor
and
out
fistpl
pusha
lcall
adc
pop
mov
loope
movsb
gs
loopne
loope
mov
push
jg
fbld
shr
xchg
pop
jo
lods
rcl
lds
int
lods
adc
imul
lcall
sbb
js
decl
mov
js
push
ficoms
filds
leave
mov
fiaddl
icebp
sub
pop
and
jnp
int
push
dec
sbb
xchg
scas
xorb
fsub
sti
mov
outsb
pop
dec
cmp
fbld
adc
negl
fmuls
pop
pop
out
or
stc
add
mov
pop
and
rclb
sbb
in
ja
imul
int3
xchg
lods
stos
jns
cmp
pop
sar
sub
add
xor
cmp
in
iret
mov
xchg
loopne
into
xor
inc
dec
or
push
loopne
push
lock
mov
data16
jl
jge
push
mov
add
aad
jmp
scas
inc
int3
rcll
sarl
mov
cmc
mov
adc
dec
aaa
jne
pop
inc
stos
out
jmp
mov
jbe
and
arpl
mov
jp
cmp
mov
loopw
jl,pt
jb
imul
mov
dec
cmp
das
xchg
aas
sarb
cmp
add
add
popf
sbb
in
xchg
jmp
inc
xor
dec
das
xor
cmp
cmc
adc
mov
imul
cmc
mov
cwtl
negl
gs
jb
repnz
pop
lock
fnstcw
fsubl
xchg
sub
sub
mov
or
icebp
pop
push
xlat
shrb
pop
jg
outsl
dec
out
cltd
dec
leave
ret
arpl
or
push
std
xor
shll
inc
xor
inc
dec
mov
and
rcl
mov
cltd
jge
into
mov
mov
in
mov
xchg
jbe
mov
test
outsl
lea
sbb
adc
xor
icebp
push
or
push
xor
mov
xor
xchg
push
xor
movsl
pop
jmp
dec
sarl
rcrl
outsb
mov
mull
ss
mov
xchg
push
popa
jbe
in
jae
in
mov
sar
es
mov
stc
dec
xchg
out
xor
xchg
shl
jnp
push
xlat
inc
movsb
or
mov
pop
lret
clc
pop
nop
int3
xor
xchg
push
subl
pause
push
bound
cmpsb
out
and
pop
outsb
xor
inc
mov
xchg
loope
xchg
clc
int
imul
mov
jns
dec
imul
lods
out
adc
nop
xchg
adc
mov
mov
cli
insb
cmp
in
add
sub
mov
push
adc
sub
fidivrs
fwait
shl
adcl
faddl
sahf
sbbl
outsl
xchg
jo
popa
pop
or
sbb
bound
jne
push
shl
push
ja
imul
int
cmpsl
sbb
dec
xchg
xor
lcall
pop
pop
mov
xchg
sti
mov
lret
in
cwtl
pop
outsb
mov
add
and
adc
rcrl
dec
loope
xor
xchg
stos
dec
enter
jo
pop
fnstenv
jo
cld
and
cmp
fsubr
jns
mov
loop
imul
or
mov
dec
push
inc
jnp
mov
lods
mov
hlt
dec
dec
push
insb
add
mov
lock
aad
shlb
dec
into
mov
mov
cwtl
push
pop
in
inc
push
jae
mov
hlt
xchg
jmp
mov
aaa
out
pop
loope
mov
mov
add
movsb
imul
mov
xchg
cs
mov
jl
and
pop
cmp
push
inc
out
push
sub
sbbl
movsb
push
adc
mov
xor
fiadds
inc
rclb
mov
push
iret
pop
mov
daa
out
push
sub
add
xchg
cmp
repz
outsl
nop
fs
push
imul
hlt
into
dec
out
pushf
pop
fbstp
imul
ss
aad
jb
xor
int
pusha
xor
shll
out
call
fs
ret
mov
sbb
stc
sub
inc
test
mov
fmull
lahf
or
and
mov
jnp
ds
aam
or
aam
stos
mov
cmc
jge
cmpsl
dec
leave
sub
push
cli
push
cmc
pop
jnp
iret
bound
adc
pop
dec
sub
ljmp
and
ret
jge
mov
jno
js
adc
fmul
rcrb
pusha
push
clc
loopne
scas
xchg
in
fwait
aad
push
cli
pop
jle
repnz
iret
dec
test
mov
adc
loopne
inc
sbb
mov
aas
out
xor
xor
dec
test
lahf
sub
dec
ret
jns
daa
daa
dec
push
sub
daa
hlt
imul
testl
lods
shlb
mov
ret
ljmp
scas
or
jb
inc
mov
leave
dec
int3
mov
pop
inc
adcb
add
rcr
arpl
sbb
cmp
fisubs
mov
imul
add
push
test
rclb
loope
xchg
cmp
adc
xlat
je
and
loopne
lret
addr16
xchg
shufps
add
lret
sub
sahf
or
out
addr16
mov
or
js
jnp
addr16
push
fs
pop
add
pushw
pop
enter
pop
pop
mov
subb
test
adcb
iret
mov
clc
les
pop
daa
or
ret
xor
bound
sbb
movsl
and
shrl
sbb
and
gs
in
sub
jle
xor
mov
aaa
pushf
rorl
sbb
fcomp
dec
jmp
fiaddl
cmp
xchg
add
lcall
mov
out
pop
cld
jb
or
dec
adc
sarl
sbb
int3
dec
or
orb
ret
out
rcrl
int
cli
rol
cmpsb
fsubrs
and
xor
decl
xlat
mov
psubd
call
aaa
push
clc
xlat
les
int
sar
and
inc
pop
pop
lret
adc
xchg
into
sti
xchg
jp
mov
mov
pop
loope
call
inc
arpl
pop
outsb
jl
xchg
iret
aad
adc
aaa
icebp
repnz
xlat
xchg
and
rclb
mov
xor
mov
rcrb
or
inc
add
jo
fisubs
fwait
rclb
add
cmpb
test
daa
pop
mov
push
push
dec
adc
mov
xchg
inc
outsb
jae
dec
mov
sbb
mov
ss
out
and
xor
mov
daa
xchg
or
aaa
jl
xchg
aaa
inc
fsubr
mov
movsb
iret
mov
push
or
bound
and
inc
or
pushl
and
iret
cmp
dec
sbb
pop
shlb
jno
hlt
sbb
mov
sbb
dec
movsb
mov
lahf
ja
repnz
dec
js
lock
pop
pop
inc
loop
lds
lahf
push
sub
fcmovnb
movsl
inc
pusha
fldcw
dec
lret
push
fadds
andb
push
push
fiaddl
ja
xor
sub
sbb
mov
sarl
insl
and
push
xchg
popa
pop
mov
aam
mov
xchg
jl
imul
inc
jecxz
pushf
mov
lods
push
pushl
cmp
xor
cwtl
je
pop
dec
sub
pop
xor
idivb
mov
les
outsb
jmp
adc
mov
mov
mov
jge
ds
mov
call
or
xor
ja
sub
cwtl
movsb
stc
fstps
pop
aam
mov
cmp
ja
stc
arpl
sarl
nop
les
or
jmp
push
rcrl
stos
mov
arpl
and
lods
adc
jle
dec
push
ljmp
cld
insb
js
add
inc
sub
and
lock
cmp
mov
inc
stc
movsl
jb
cmpsb
arpl
dec
sub
adcb
lret
push
das
stos
sub
dec
test
in
out
cld
push
and
into
sbb
mov
add
cmp
inc
xchg
sub
lret
or
mov
xlat
jl
fcmovbe
cmpsl
out
pop
push
adc
xchg
inc
mov
movsb
or
xor
mov
push
mov
stos
xchg
mov
daa
xor
push
mov
imul
xchg
lods
xchg
cltd
gs
xchg
testl
jle
and
pop
mov
push
and
dec
or
jp
test
pusha
mov
mov
xchg
ret
popa
fisubs
xor
dec
sbb
andb
lea
xchg
cmc
xor
sub
or
lea
mov
pop
leave
pop
les
cmp
mov
mov
loopne
std
sbb
pushf
loope
cmp
jp
inc
sbb
shlb
lock
pop
popa
push
loope
inc
cmp
notb
jae
sti
outsb
add
leave
cmp
jmp
inc
fnsave
nop
mov
rcll
out
loopne
cmp
daa
fsubrs
insl
and
js
jnp
clc
or
mov
xchg
push
mov
ja
fs
add
sub
sti
lods
mov
push
jae
xorb
lret
mov
int
pop
push
pop
lret
mov
shlb
push
jb
sbb
dec
or
fidivl
daa
xor
lcall
xor
push
cmp
popa
and
daa
add
pop
jbe
lds
cmp
sbb
pop
ret
push
xor
xor
cmc
xchg
push
shlb
sub
ljmp
lock
inc
sbb
lret
repnz
xchg
jbe
xor
cmp
mov
jle
mov
movsb
sub
cmp
daa
lods
outsl
mov
or
adc
inc
xchg
xchg
xor
pop
xchg
mov
leave
adc
and
repnz
xor
or
add
mov
sti
mov
arpl
ss
sub
inc
and
outsl
cli
adc
mov
add
adc
mov
push
mov
rolb
mov
addr16
test
lcall
ljmp
sub
cmpsl
inc
jp
icebp
jl
scas
cli
jge
add
mov
mov
inc
pop
jae
in
xchg
in
js
loopne
sti
dec
mov
inc
in
pusha
pop
inc
mov
push
inc
aas
adc
inc
jbe
pushf
stos
mov
outsb
cmp
mov
push
push
lds
shlb
xor
xchg
and
dec
std
in
sbb
mov
sub
test
cmp
xor
and
push
mov
mov
ret
jnp
addr16
imul
xor
push
mov
pop
hlt
mov
lock
pusha
or
xor
push
ss
cmp
xchg
jp
std
adc
stos
sbb
and
lcall
jno
mov
mov
and
dec
sub
jl
test
jb
shlb
dec
imul
push
insb
out
mov
mov
dec
jge
int
insl
fwait
mov
in
pusha
sub
cltd
das
jns
daa
add
pop
imul
fisubs
and
leave
jne
sub
mov
sub
inc
cmp
data16
xchg
fsubr
inc
xor
mov
test
data16
enter
ja
mov
in
xchg
jecxz
sbb
test
jecxz
test
and
sbb
movsl
push
pop
xchg
mov
pop
mov
adc
sbb
xor
aam
inc
sbb
in
incb
adc
cmp
test
jle
push
mov
mov
inc
ja
xlat
outsb
mov
or
xor
arpl
pusha
fwait
and
pop
jnp
jb
lcall
jno
dec
jbe
fwait
inc
pop
push
and
neg
jmp
push
cmp
call
cmpb
xor
jle
jb
movsl
fadds
or
mov
sbb
mov
cli
lahf
dec
cmp
jae
adc
sub
cmp
mov
xor
cli
sahf
test
and
push
add
cs
loope
imul
sbb
push
cmp
inc
mov
cltd
push
and
pop
xchg
clc
nop
sub
out
mov
imul
mov
inc
mov
gs
jg
jle
in
jecxz
insl
aas
cmp
push
jne
pop
ja
and
xor
dec
cmp
dec
lods
dec
adc
lds
dec
cmp
mov
pop
mov
pop
pusha
sub
sub
inc
adc
jae
xchg
and
jbe
jecxz
leave
js
aam
add
push
sub
fimull
sub
sub
pop
or
inc
clc
mov
xchg
cmp
dec
aam
daa
jnp
mov
loop
sub
hlt
mov
repz
adc
lods
dec
cld
jecxz
daa
outsl
pushf
add
cwtl
fisttps
fsubp
inc
jo
xor
jg
addr16
mov
mov
jnp
sbb
movsl
insb
dec
push
adcl
xchg
je
dec
sub
incl
test
xor
lods
je
lret
push
adc
ljmp
mov
push
testl
hlt
scas
sarl
jecxz
pop
int
fdiv
jmp
imul
repz
mov
fidivs
mov
pop
xor
pop
loope
mov
int3
adc
sahf
inc
mov
mov
lret
sbb
inc
push
mov
mov
in
sbb
inc
or
into
lods
inc
repnz
mov
enter
and
cmpsl
rclb
dec
jecxz
ss
push
in
loop
mov
jle
icebp
cli
sbb
lret
arpl
lahf
mov
lock
out
adcl
lods
in
adc
mov
popa
adc
mov
cltd
js
push
cli
jle
sbb
std
pop
pushf
call
xchg
lea
out
push
xor
pop
dec
mov
cmp
fcomip
mov
ret
sub
inc
push
jp
cmpsb
xchg
push
push
repnz
outsb
push
add
adc
outsl
add
mov
into
sahf
imul
fstl
ds
shr
cld
jno
iret
sbb
fs
push
push
mov
add
sub
aas
push
scas
pop
sti
push
fucomip
sbb
jp
nop
xor
mov
cs
ja
aaa
cwtl
or
add
lds
sub
mov
mov
sub
mov
jb
bound
orb
fcomps
cmp
xchg
sbb
ss
xchg
dec
call
cmp
fcomps
pop
lcall
and
dec
xchg
cmpsl
scas
and
xchg
sub
mov
sbb
mov
mov
xor
push
fldenv
pop
in
stos
cmc
clc
scas
or
and
or
mov
stos
ficoms
loop
mov
adc
lods
lock
push
aaa
pop
inc
fildl
mov
ret
add
cld
ficomps
js
leave
xchg
mov
mov
adc
dec
mov
mov
roll
call
scas
pop
cmp
lahf
jbe
add
fwait
mov
and
cld
in
push
leave
imul
lcall
pop
popa
inc
cmpb
push
jl
sti
xchg
jle
out
xor
xchg
out
mov
daa
cli
and
arpl
fsts
fwait
ss
aaa
nop
mov
xor
jb
test
mov
in
pop
mov
setns
int3
in
push
xor
xchg
xor
scas
push
push
mov
inc
xlat
mov
ficoms
scas
idivl
pop
fwait
sub
in
cmp
mov
inc
inc
or
push
push
pop
jae
sbb
out
or
call
outsl
leave
or
fimuls
cmp
mov
mov
scas
sub
xchg
lods
mov
into
aad
mov
call
mov
push
in
mov
ficomps
xor
imul
jecxz
push
lcall
push
ret
mov
and
icebp
in
jo
pop
mov
jp
repnz
mov
inc
dec
loop
inc
cltd
pop
sbb
jmp
or
leave
xchg
xor
iret
push
xchg
push
or
mov
adc
clc
stc
jg
push
js
mov
inc
pop
and
shll
lock
in
arpl
xchg
mov
pop
js
addl
push
jmp
popf
jl
jnp
aad
add
and
cmpl
sbb
jge
dec
or
dec
rcll
outsb
jae
jg
jo
or
push
iret
mov
xchg
mov
lret
sub
enter
and
xchg
push
push
arpl
dec
js
sbb
jecxz
into
leave
or
ret
stos
loopnew
pusha
inc
test
mov
mov
shr
push
or
mov
xchg
xchg
cmp
add
pop
adc
dec
push
lds
jge
xchg
mov
and
scas
xor
mov
and
or
jne
dec
or
jle
mov
mov
cli
push
jnp
sub
xchg
lret
leave
and
ret
or
adc
pop
addr16
lock
fnstcw
cltd
out
cli
cmp
loope
inc
pop
sub
lcall
or
fbstp
add
es
jecxz
xor
scas
push
inc
xchg
div
cmp
les
xchg
fmulp
ds
decb
sub
ret
lcall
pop
mov
sbb
pop
sahf
cli
pop
insb
mov
xchg
test
cmp
out
push
enter
pop
adc
jge
add
mov
decl
jbe
xchg
pushf
and
gs
test
icebp
fsincos
leave
lods
jo
mov
cmpsl
cmp
and
pop
cmp
pop
outsb
mov
adc
inc
pop
push
into
mov
fdivr
add
mov
jl
mov
jno
enter
clc
test
xorl
jnp
dec
push
xlat
rorb
test
push
inc
cld
add
jg
adc
mov
js
dec
out
dec
gs
and
lcall
out
fimuls
jle
mov
or
popf
xor
mov
rcrl
pop
out
add
inc
jnp
movsb
in
mov
movb
inc
es
in
subb
sub
sbb
sbb
lcall
stos
ds
xchg
jge
lret
fdivl
stos
mov
pop
pop
sahf
and
inc
mov
mov
xor
fnstcw
pop
leave
add
and
es
xchg
pop
cmpsb
popa
shlb
outsb
popf
loope
add
add
mov
mov
jge
mov
add
mov
mov
gs
mov
xor
jmp
cld
outsb
jne
shlb
or
shlb
mov
icebp
int3
lods
cmp
sub
fsubrl
sarb
fcmovu
jns
mov
cli
dec
lcall
mov
leave
or
in
mov
pop
movsb
push
addr16
jmp
push
dec
outsb
dec
fwait
repz
in
dec
jnp
insl
pop
test
jp
sarl
xchg
mov
jmp
aas
icebp
push
push
ss
sub
rcll
and
jae
cmp
xchg
shrl
cmp
mov
pop
das
das
xchg
push
ja
popf
sbb
hlt
jmp
xor
std
push
fmuls
stc
leave
jae
in
data16
gs
pop
push
test
pushf
xor
roll
sub
mov
mov
push
ret
das
sbb
xor
xchg
call
xchg
jae
dec
aas
es
pop
mov
aam
in
je
cmp
and
push
or
filds
jge
mov
movsl
and
fcompl
and
les
mov
movl
pop
and
mov
push
popa
pop
es
fidivl
sbb
jae
mov
sbb
dec
inc
scas
pusha
adc
lds
mov
into
jge
nop
sahf
loop
xchg
fs
pop
jbe
pushl
dec
cmp
daa
in
add
lcall
dec
sub
mov
lds
mov
popa
cld
and
xchg
push
pop
in
aaa
adc
popa
cmp
lock
and
mov
push
mov
mov
mov
push
pop
or
sbb
xlat
adc
outsb
add
pop
pushf
sarl
inc
xlat
iret
jg
cmovle
aad
dec
mov
dec
sbb
dec
xor
ljmp
add
dec
mov
jne
inc
adc
or
adc
and
in
push
std
insb
in
xchg
sbb
sbb
fisubrs
pop
inc
popa
test
cmp
sub
dec
inc
xor
add
js
xchg
pop
adc
enter
fadds
cmp
repz
sbb
mov
icebp
jae
xchg
daa
dec
cli
repz
punpcklwd
and
pop
shr
stos
ret
adcb
adc
sbbl
call
mov
dec
aaa
ljmp
jg
lock
mov
cmp
in
and
std
fidivs
test
cs
or
jb
add
fstl
shlb
shlb
les
xlat
fsubs
imul
cwtl
lock
dec
popa
jp
push
clc
in
push
repnz
mov
mov
repnz
rcll
rcr
aas
lcall
test
out
inc
aaa
orl
mov
ss
ret
dec
ret
dec
dec
cwtl
and
pop
adc
cmp
movsb
cmp
jl
cmpsb
push
sub
out
ret
addl
mov
mov
leave
mov
pop
or
jecxz
mov
sub
ret
pop
cli
pop
sarb
push
incl
or
iret
cmp
add
add
stc
lds
or
mov
inc
repz
jl
or
xchg
pop
push
adcb
mov
jl
sarb
lea
jecxz
dec
iret
fcoml
adc
or
inc
cmpsb
xor
fwait
xor
bound
xchg
push
aad
sub
and
push
mov
adc
pop
sub
xchg
jo
cmpsl
rorl
and
adc
mov
ret
fmul
jmp
testl
bnd
fcmovbe
and
pop
fwait
mov
leave
aaa
dec
lcall
cmp
xor
push
sub
push
cli
popa
vpmadcsswd
pop
cmp
or
cmp
and
push
div
mov
in
cltd
cmp
in
pusha
and
push
mov
cmpsl
and
push
dec
push
jb
decl
mov
cwtl
cmpsb
loope
inc
inc
mov
icebp
push
bound
mov
inc
xchg
jle
lret
add
cmp
add
xor
rcl
stos
or
js
icebp
mov
out
xor
enter
sub
push
jmp
repnz
jmp
loopne
ror
call
ficoml
es
sbb
es
dec
fwait
mov
lahf
push
popf
xor
sub
pop
aad
out
inc
aaa
xchg
incb
and
js
sbbb
pop
jb
add
scas
jne
mov
jmp
adc
imul
add
and
je
pop
dec
dec
pop
add
jnp
lret
adc
jp
xchg
mov
fsubl
rol
repz
mov
mov
ret
aad
xchg
cwtl
rcll
xchg
jecxz
add
leave
inc
pusha
rcr
push
addr16
scas
ret
es
lcall
scas
sub
insl
dec
push
ds
repz
mov
ret
mov
jae
or
in
mov
ficoml
stos
lret
adc
and
push
filds
sar
add
icebp
subl
sub
jnp
sbb
inc
adc
sarl
test
cli
daa
sbb
mov
pop
push
pop
ret
jg
cmp
iret
int
das
popf
jbe
mov
cmpb
add
pop
pop
inc
fsubl
call
fwait
out
push
mov
adc
adc
sbb
xchg
lds
cmp
cs
and
add
fistps
mov
stos
stc
mov
adc
lcall
fs
ss
sub
rcrb
outsb
sti
dec
add
cmp
inc
pop
add
ss
sub
repnz
aas
add
jg
jns
jmp
mov
jmp
mov
adc
cmpsb
fs
or
adc
adc
jo
lds
roll
pop
xchg
scas
fcmove
push
pop
cmp
cli
mov
or
pop
movsb
sarl
stos
mov
pop
pop
sbb
push
xor
insb
cmpsb
jo
pop
hlt
sbb
pop
adc
inc
cmp
arpl
mov
jge
and
es
cmpsl
lahf
fnstenv
and
mov
xchg
imul
jmp
inc
sub
jns
mov
dec
fldcw
pop
or
adc
and
add
push
add
daa
jge
scas
in
sub
jmp
jl
loopne,pn
lock
inc
inc
and
iret
aas
xlat
repz
and
aaa
mov
push
pusha
pop
loop
fstpl
mov
jle
bound
into
cmpsl
mov
scas
xor
xchg
push
jle
mov
dec
push
outsl
mov
mov
jl
mov
push
ret
jecxz
add
es
arpl
adc
and
cmpsb
rorl
mov
addl
sahf
mov
icebp
xchg
adc
sbb
sub
add
in
cmpsl
mov
jle
xchg
scas
inc
stos
and
aas
push
dec
imul
mov
dec
js
repz
outsl
xchg
mov
lahf
insb
xor
leave
mov
loope
out
xor
cmp
jle
jecxz
mov
mov
mov
pop
aas
lret
jg
push
add
notb
jg
sub
xor
dec
jl
nop
push
movsb
popf
xchg
stos
mov
mov
pusha
jne
nop
sub
jb
jecxz
cld
cld
adc
stc
push
pop
pop
dec
sub
mov
dec
pusha
push
pop
lret
in
lret
loope
popf
pop
sahf
jge
scas
jbe
sahf
imul
insb
sbb
mov
jmp
icebp
pop
call
cmp
mov
or
inc
xchg
xchg
imul
daa
xchg
test
push
xchg
mov
pop
pop
int3
pop
adc
out
movsl
cwtl
jl
mov
sub
adc
shlb
sub
mov
fwait
outsb
xchg
insb
sub
mov
clc
push
in
and
std
out
adc
mov
das
push
dec
stos
out
inc
mov
bnd
out
pop
outsb
cmpsl
inc
pop
cltd
push
pop
mov
fistps
std
jae
les
fbld
rolb
adc
cld
shlb
insb
mov
mov
sahf
andl
push
dec
xchg
mov
sahf
mov
sub
jmp
xchg
jnp
xor
leave
nop
movlps
xchg
test
cli
push
cli
popf
adc
cmp
mov
xchg
scas
lret
pusha
mov
loop
jle
ss
inc
loope
push
imul
scas
push
pop
xchg
and
jne
sahf
jmp
repnz
dec
inc
dec
xchg
iret
add
dec
sub
subl
movsb
dec
pop
cmpb
sarl
rcrb
ret
pop
mov
add
call
lods
xchg
testl
aaa
ret
jae
test
inc
mov
ja
and
scas
inc
cmp
cwtl
jne
hlt
scas
movsb
sbb
adc
jbe
lock
dec
call
cs
and
mul
pop
loope
lss
addr16
mov
notl
jns
shll
push
stos
frstor
out
lahf
popa
xchg
ja
notl
xchg
ret
ljmp
int3
jae
cmp
cmp
add
sub
pop
shlb
pop
xchg
pop
mov
and
or
sub
xor
pop
out
test
dec
add
jmp
mov
sub
enter
mov
xor
cwtl
test
sbb
sub
mov
mov
mov
adc
push
inc
das
lods
arpl
adc
xchg
hlt
jb
sub
roll
cwtl
pop
push
push
adc
xor
jecxz
inc
nop
and
dec
mov
imul
pop
movsb
inc
push
fs
addr16
and
mov
mov
scas
test
lret
or
push
xchg
repz
ror
jecxz
or
orl
js
dec
cs
jg
inc
sub
push
push
add
pop
jo
inc
mov
out
push
adc
fsubs
lods
cld
and
mov
adc
jne
mov
rcrb
xchg
clc
jle
out
mov
cmp
loopne
popf
loope
add
in
daa
pushf
add
xchg
mov
mov
in
jg
fsubl
test
cwtl
jns
cmpsl
push
aaa
sbb
notb
jle
outsl
pop
sbb
inc
sbb
lahf
sbbl
push
pop
mov
jp
iret
ds
pop
push
xor
movsb
xlat
bound
push
xchg
adc
sub
int3
cmpsb
xor
add
or
mov
insl
sahf
xchg
test
mov
daa
and
lret
jne
xchg
sahf
inc
and
xor
xor
jno
jbe
cli
dec
sub
pop
mov
iret
dec
fsubr
in
in
jns
mov
ret
pop
pusha
neg
push
push
std
xor
push
adc
lds
jae
aad
into
rol
sub
movsl
mov
loope
fidivs
and
push
inc
add
xor
lods
cmpsl
add
jns
clc
fiaddl
fisttpl
pop
sbb
shrl
xchg
fs
aam
movsl
les
js
mov
cwtl
dec
pop
or
pop
adcl
pop
fwait
push
and
sub
cmpl
dec
cmp
inc
sbb
das
into
xchg
pusha
dec
lcall
add
xor
and
xchg
mov
in
and
testl
pop
fisttps
push
in
js
mov
out
stc
xlat
mov
nop
dec
in
dec
repz
jo
sbb
or
scas
ljmp
lret
jmp
ljmp
movsl
add
dec
cmp
ds
sub
loop
inc
push
ficomps
sub
call
aas
push
push
xorb
sbbb
push
out
dec
jle
pusha
xor
xchg
stos
mov
repz
mov
pop
popa
adc
push
outsb
cli
stos
mov
repz
fsubrp
adc
in
xor
gs
inc
repnz
xchg
mov
mov
int
mov
dec
gs
lret
loope
loope
mov
and
rclb
jb
std
lods
mov
inc
jb
movsb
add
outsl
outsl
andb
cmp
pop
mov
and
inc
out
add
arpl
pop
in
mov
daa
jnp
adc
mov
out
addb
into
cmp
mov
adc
sbb
je
push
xorb
mov
popf
xchg
rcll
jbe
das
xchg
lea
sub
cmp
adc
rolb
inc
sbb
push
sub
push
push
sbb
pop
sbb
and
mov
js
shrl
insb
and
data16
pop
mov
cltd
jle
add
push
jmp
shl
adc
pop
fimull
mov
lahf
ffree
test
mov
imul
mov
pop
push
ror
shlb
push
je
je
cmp
in
vmaxss
sti
test
lea
and
loope
pop
xchg
lock
push
lock
or
sar
mov
repnz
cmp
dec
cltd
adc
into
push
pop
xor
jne
dec
jb
lock
xlat
sub
mov
xlat
outsl
insl
leave
jmp
lcall
rcr
push
lret
lret
inc
push
and
lahf
cmpsb
cmp
ret
sbb
fdivrl
adc
sub
inc
pop
shlb
fcomi
aas
mov
mov
test
call
jb
sti
xchg
dec
sahf
push
sbb
in
push
bound
xor
nop
jne
add
push
cmpsl
pop
movsb
xchg
jns
mov
or
jbe
pop
cmc
and
push
jl
addr16
push
jmp
sbb
rorb
and
pushf
lock
ss
xchg
je
mov
stos
jbe
ljmp
imul
repz
lahf
scas
ds
add
xor
jne
mov
xchg
lret
add
outsl
vmovaps
cmpsl
mov
sub
push
add
jo
imul
jnp
cld
lock
push
inc
stc
mov
sbb
aad
sbb
adcb
jl
ret
outsb
std
cmp
lods
sbb
jne
mov
fs
or
cmp
cmpsl
mov
fdivrl
ficoms
mov
adc
push
das
sbb
fdivs
jb
int
sti
cmp
xchg
ljmp
fidivrs
xor
negb
dec
test
aad
jno
jns
sbb
jecxz
andl
push
ss
aad
and
cmp
inc
ss
xlat
jb
mov
and
movsb
subl
and
xchg
mov
mov
mov
push
cmp
test
into
or
addb
mov
jp
dec
lret
push
sub
push
test
notl
push
int3
arpl
xchg
cmp
mov
mov
lods
pop
pop
ja
add
leave
nop
repnz
scas
push
popa
stos
jb
adc
cli
inc
fs
enter
out
jne
js
outsb
cld
flds
dec
ret
movsb
push
lahf
cmp
dec
insb
call
enter
imul
sub
lods
xor
jne
ja
movsb
mov
test
mov
filds
loop
pop
sbb
roll
xor
mov
stos
pop
pop
popl
push
faddl
pop
sub
pop
popl
adc
cmovle
inc
inc
inc
pop
dec
das
xor
mov
xor
push
mov
dec
add
cmpsl
es
fmul
out
enter
mov
fisubrs
sti
das
orl
lea
jns
iret
pop
dec
push
jnp
jbe
lcall
sub
repnz
jbe
int3
mov
ret
xor
pop
imul
jle
pop
push
cmpsl
sbb
mov
xor
ljmp
addb
dec
push
in
leave
pop
into
ret
add
aaa
stos
sub
rorb
mov
in
cltd
stos
adc
mov
add
aaa
pop
adc
insb
jae
ja
jae
adc
fimuls
adc
push
jmp
mov
or
ret
mov
jbe
lahf
bound
stos
pop
sbb
rclb
or
mov
jne
adc
mov
inc
idiv
stc
or
hlt
mov
shl
inc
jp
inc
jbe
dec
lret
in
xlat
in
adc
loopne
mov
daa
cmp
and
test
xor
fdivrl
repz
mov
pop
jo
aad
shl
daa
stos
dec
popf
mov
jo
push
sbb
jg
in
xchg
pop
xchg
sub
cld
scas
mov
dec
inc
add
jp
js
jae
cmpsl
shll
xor
daa
pushl
scas
ficoms
shl
sub
and
loopne
or
lahf
mov
enter
ret
push
outsl
iret
or
jl
mov
mov
int3
mov
add
pop
cmpsb
push
clc
mov
mov
pushf
lret
or
inc
insb
push
in
loopne
dec
test
ret
hlt
jae
fstpt
idivl
cwtl
fidivrs
mov
cmp
cmp
movsb
xor
cmp
push
xor
adcl
lahf
dec
aas
add
pusha
push
dec
sub
mov
mov
and
nop
repnz
inc
xchg
lret
in
lods
ret
mov
sub
sbb
pop
or
mov
testl
jno
sbb
das
push
movl
mov
ret
push
test
mov
fcompl
addr16
push
sbb
mov
ror
add
std
jno
xchg
lcall
xchg
mov
cwtl
insl
imul
scas
dec
and
dec
movb
jno
pop
dec
jne
push
inc
in
lock
loopne
test
nop
out
jb
cmpsl
sub
jle
pop
pop
orb
and
daa
shl
xor
pushf
inc
xchg
xchg
inc
mov
cs
or
inc
lods
adc
jecxz
pop
pop
lret
jo
xor
sbbb
stos
fcom
jb
pop
imul
lea
out
mov
jecxz
cmp
jecxz
arpl
xor
sahf
shrb
divl
jo
mov
and
jg
fistpll
enter
fs
jecxz
inc
sbb
add
enter
outsb
adc
shlb
or
or
dec
pop
mov
leave
lds
mov
add
xor
or
aas
sub
jp
sbbl
xor
or
incb
dec
ds
in
fwait
outsl
pop
into
mov
daa
std
mov
dec
jo
pop
push
lock
pusha
sub
and
das
add
lahf
push
dec
jp
dec
testb
push
jge
push
sbb
mov
xor
cmpsl
into
fs
jl
pop
mov
aaa
test
std
inc
icebp
lock
mov
addr16
cmpsl
sahf
pop
or
sbb
xchg
cmp
add
fistpl
mov
call
sbb
push
adc
stos
lahf
xchg
mov
leave
jge
mov
cmc
jne
xor
inc
lock
mov
cmp
stos
scas
fmul
push
pop
adc
cli
repz
mov
and
add
xchg
cli
xor
jae
push
dec
testb
pop
mov
nop
insb
inc
stc
int3
stos
insl
push
dec
cmp
loop
add
cmc
nop
test
in
sub
mov
jne
pop
stos
subb
sbb
sahf
enter
cltd
lcall
std
cltd
aaa
aas
mov
dec
cmp
aaa
dec
rdmsr
popf
repz
sub
fs
mov
pusha
mov
add
sahf
mov
xchg
bound
insl
fldz
fimuls
and
test
inc
xlat
nop
bound
scas
out
push
inc
cmp
pop
leave
lahf
imul
jge
in
xchg
push
sbb
xor
into
loopne
or
repz
or
xor
sub
and
mov
cs
cltd
mov
divl
jle
mov
int
mov
mov
mov
add
js
test
and
mov
sub
mov
xchg
cmp
xchg
scas
adc
loopne
loope
inc
aad
cmp
out
faddl
out
ss
jecxz
jb
inc
sub
stos
adc
push
in
or
add
and
jns
clc
mov
cmpsl
cmp
fnsave
out
clc
mov
cmpsb
mov
test
test
stc
cmpsb
or
xchg
sub
pop
jmp
jae
jne
mov
fs
adc
fsincos
push
xchg
mov
dec
out
push
pop
aaa
xor
xor
push
orl
pop
cmpsb
mov
loop
sub
jmp
pop
sbb
mov
push
popaw
dec
pusha
nop
lds
movsl
rorl
xchg
pusha
cmp
shl
push
inc
lock
fisttpl
incb
lea
ror
pop
test
cmovl
popf
orb
mov
jno
ror
into
insb
push
lds
add
fisubl
ret
fcomi
cmp
sub
cli
lds
pushf
add
mov
pop
stos
mov
iret
pop
jae
js
mov
sub
jmp
shlb
mov
ret
rcl
sbb
adc
xchg
pop
adc
sub
xlat
cld
adc
pop
jbe
inc
push
andps
mov
mov
push
cmpsl
push
fmuls
cltd
ja
int
das
sub
push
xchg
sahf
loopne
sbb
lea
adc
rcr
cmp
and
dec
push
mov
add
add
xchg
inc
mov
xchg
or
cmp
test
adc
pop
lods
ret
lds
loopne
sub
mov
jne
stos
mov
pop
cmp
es
sbb
mov
pop
sub
mov
mov
cmc
jg
inc
int
cmp
xor
dec
inc
mov
dec
sbb
out
or
sub
sbb
xchg
pop
lods
mov
push
or
es
jge
pushf
mov
insb
mov
push
and
daa
lods
and
outsb
shrb
call
mov
or
into
out
sub
enter
add
fsubrs
pop
jmp
rcrb
shlb
pusha
stc
xchg
into
jnp
movsl
loop
adc
pusha
or
stc
jl
mov
lock
push
cld
mov
adc
adc
test
in
jecxz
out
fbld
xchg
mov
cmp
inc
stos
xor
call
dec
daa
imul
xchg
test
adc
pop
movsb
xchg
pop
jnp
mull
mov
push
dec
cmp
out
sar
repz
es
jb
and
insb
pop
xor
mov
roll
cmp
xacquire
lods
sbb
xor
xchg
and
fnstcw
adc
adc
mov
repz
jmp
popf
xchg
jle
mov
pop
mov
fmull
mov
inc
add
stos
mov
fildll
lret
repz
cmp
or
add
inc
lock
xchg
fisubs
jne
lcall
or
mov
mov
xlat
lea
add
push
aad
xchg
int3
je
jmp
jns
and
cmp
and
out
dec
cmp
in
daa
aaa
shlb
lock
mov
lea
lock
imul
push
jl
test
fimull
push
mov
jae
adc
call
imul
sbb
mov
call
vpmaxsw
inc
ja
das
pop
push
mov
jge
jb
or
addl
mov
mov
jnp
and
out
adc
and
sub
cltd
lret
push
es
gs
push
jl
dec
cs
mov
jno
xlat
cli
dec
gs
pop
jp
and
or
jnp
sbb
mov
and
push
xchg
mov
pop
cmpsb
mov
popf
push
in
jnp
and
stos
in
fstl
loopne
mov
lock
or
xchg
loopne
pop
fildll
inc
push
test
lods
mov
add
js
movsl
jno
mov
jmp
dec
ds
pop
mov
sbb
das
lds
jae
lcall
sbb
mov
out
pop
fs
xchg
cli
mov
cmp
in
pop
jge
stos
insl
xchg
add
stos
mov
ficoms
mov
ds
mov
test
sbb
subb
or
jg
int
into
sbb
cmpsl
clc
jg
sbb
int
movb
enter
in
or
mov
orl
scas
or
push
add
cmpsl
cmp
sub
les
xor
lret
and
arpl
pop
lahf
hlt
sub
pop
xchg
ja
sub
sub
mov
lods
aas
xchg
test
negb
mov
push
nop
je
mov
xor
mov
ret
clc
add
push
mov
loope
cld
or
lds
xchg
push
pusha
gs
fwait
or
gs
pop
adc
push
cmpsb
xor
lcall
xor
mov
and
cli
out
mov
test
jl
es
in
iret
pusha
sub
imul
or
sbb
or
sub
jbe
mov
cwtl
dec
pop
lret
mov
fsubrl
sahf
in
or
pop
mov
into
jge
cmpsl
pop
call
add
dec
loopne
and
jns
outsl
jmp
adc
loopne
sub
shll
lds
sbb
push
sub
jl
shlb
mov
adc
pop
pop
data16
subl
dec
sub
inc
xchg
mov
jl
mov
in
lock
pop
cmp
xor
arpl
mov
aas
push
jnp
orb
jnp
fst
xor
inc
pop
cli
mov
sub
hlt
sbb
jo
sarl
cmp
mov
xor
add
imul
mov
cmp
sbbl
mov
andb
push
nop
pushf
add
sbb
gs
mov
mov
scas
pop
sbb
pop
pop
in
or
imul
xor
int3
out
mov
sbb
aas
ret
adc
xor
bound
cs
lcall
jo
xor
mov
jp
push
cmp
jae
pushf
loopne
pop
lret
adc
sbb
stos
lret
out
fsts
cwtl
push
dec
dec
mov
and
jno
in
cmp
arpl
adc
ds
adc
and
test
cmp
out
mov
stc
or
scas
ss
mov
loope
ret
sub
xor
xchg
test
xor
adc
xor
mov
inc
out
lods
hlt
aam
xchg
popf
pop
outsl
lods
cli
dec
pop
add
scas
mov
faddp
sub
or
jbe
scas
jmp
mov
das
jbe
mov
pop
mov
aam
mov
xchg
ja
cld
testb
sbb
out
add
mov
adc
sahf
mov
rclb
shll
mov
inc
in
outsl
stos
nop
imul
and
ja
fisubl
inc
pusha
and
iret
xor
jg
test
dec
movsl
into
stc
dec
insl
xchg
fildl
mov
icebp
push
or
add
cwtl
arpl
adc
clc
pusha
lahf
enter
js
aam
ljmp
push
cmp
clc
scas
mov
insb
les
fmull
add
dec
rcrl
out
mov
es
push
insb
ss
jp
cmp
mov
cmpsb
jle
fisttps
lea
call
idivl
push
mov
ds
mov
lods
sahf
cwtl
fiadds
sub
stc
ficoms
sub
and
mov
mov
or
xlat
subb
or
dec
xor
mov
divb
dec
mov
adc
mov
and
mov
test
lahf
call
sahf
scas
leave
movsl
pop
fdiv
cmp
rorl
in
or
fbstp
sbb
setp
outsb
or
js
sub
push
xor
inc
jmp
fnsave
and
or
test
call
push
outsb
inc
jmp
pop
stos
lret
pop
cmp
push
adc
mov
ss
mov
das
sub
sub
sub
xlat
push
test
outsb
jmp
stos
mov
imul
out
cld
cmp
call
push
js
pusha
cld
lcall
mov
repnz
imul
xor
push
dec
jl
and
xchg
adcb
arpl
roll
cs
or
test
cmp
stos
hlt
lods
cmc
jle
xchg
outsb
dec
call
cmp
hlt
mov
mov
mov
jo
or
ss
jp
push
daa
mov
repz
inc
fstpt
jae
mulps
jae
push
pushl
adc
adc
add
dec
cltd
fsubl
xor
push
lret
mov
push
movsl
decl
xor
and
leave
ret
hlt
cltd
outsb
sahf
push
frstor
es
mov
sub
xor
sbb
lods
stos
lods
sbb
rorb
andb
ret
ja
xchg
aas
sbb
cmpb
jmp
ds
sbb
out
jge
cltd
test
pop
and
lods
inc
jl
jmp
jb
enter
inc
jnp
aad
cmp
and
fimuls
hlt
xchg
int
mov
bound
lea
leave
inc
and
jno
stos
in
out
pop
mov
pop
fstpt
repnz
jp
or
outsb
ss
nop
out
adc
int3
lret
add
sbb
ss
push
shlb
enter
fsubrs
mov
xchg
movsb
adc
loopne
dec
mov
inc
repnz
xchg
test
jg
sahf
push
scas
pop
out
je
test
mov
pop
shlb
fdivl
adc
shll
mov
aas
sbb
aas
pop
aam
nop
xchg
adc
gs
popf
jecxz
in
in
mov
imul
imul
mov
arpl
mov
mov
imul
test
inc
iret
mov
inc
xor
test
add
and
adc
xchg
out
imul
pop
pushf
daa
adc
cmp
push
aad
xlat
sub
mov
stos
sti
lds
or
mov
push
aaa
mov
push
and
inc
pop
into
push
repz
inc
add
mov
lahf
add
repnz
arpl
aam
pop
into
out
les
xor
or
mov
imul
adc
mov
sub
xlat
mov
in
dec
and
xor
mov
aam
nop
push
fildll
inc
js
fnstsw
cmp
mov
pushf
std
add
iret
push
aas
call
sbbl
cmp
mulb
adc
stc
inc
fists
std
push
jecxz
out
mov
mov
mov
fisubl
lods
mov
pop
cmp
or
add
mov
inc
test
js,pn
cmp
sti
lods
cmpsl
fs
int
pop
push
xchg
xchg
push
cmp
push
int3
popa
and
mov
dec
or
cmpsb
pusha
popf
sub
xchg
aas
add
jae
jnp
jno
out
add
imul
jns
xchg
mov
pop
adc
sub
jl
push
inc
iret
pop
loop
addr16
repz
pop
sub
fs
push
arpl
adc
out
aaa
inc
and
add
popf
mov
lret
out
push
mov
mov
out
out
add
pop
clc
in
or
cmp
add
push
jbe
in
div
cmp
daa
dec
and
push
sub
repnz
xchg
mov
in
mov
push
dec
xor
push
sarl
test
lods
fistps
test
imul
mov
dec
xor
leave
fcmovnb
dec
or
jmp
inc
push
or
cltd
mov
inc
decb
push
mov
loope
xlat
pop
ret
roll
outsl
aaa
sti
cwtl
cmpsb
inc
mov
jns
push
movsb
mov
insb
loop
xchg
mov
jmp
xchg
push
rolb
sub
sbb
es
idivb
aam
scas
and
sbb
into
mov
in
aam
sbb
cmp
push
push
inc
jne
or
pop
movsb
test
psllq
xchg
enter
lcall
mov
lds
aad
subb
and
lretw
push
cld
pop
fsubs
lock
icebp
lods
nop
lock
sbb
movsl
lea
test
push
mov
jmp
mov
hlt
in
cmpsb
and
lds
inc
mov
dec
lea
ficompl
leave
pop
loopne
addr16
cmpsl
xor
or
call
mov
pop
daa
mov
add
or
je
xchg
pop
jo
insl
rcll
xchg
cld
or
cmpl
and
jae
add
push
test
scas
pop
inc
jle
lods
es
ret
lret
outsl
add
stos
stos
ret
bound
int
xchg
mov
xchg
icebp
pop
dec
leave
pop
xchg
and
decb
pop
xor
cmc
jno
andl
lret
mov
addr16
inc
setb
sbb
icebp
sbb
adc
mov
add
addr16
cmp
xchg
jno
push
lahf
ljmp
cmp
sbb
push
xchg
inc
test
dec
aas
add
pop
dec
es
inc
mov
xor
or
mov
jb
sarl
leave
pushf
lcall
imulb
fistpl
jnp
xchg
sub
sbb
cwtl
mov
mov
or
sbb
jp
sub
and
cwtl
dec
fst
ja
cltd
arpl
xchg
pop
add
rorb
les
fcmovnu
daa
mov
scas
and
mov
ret
mov
hlt
sbb
imul
addl
popa
push
lfs
stos
push
xchg
sbb
sahf
test
inc
popf
jle
jle
pop
mov
std
xor
mov
hlt
pop
pop
enter
push
cltd
cmpsb
adc
push
and
cltd
pushf
mov
xchg
xchg
clc
adc
jge
das
mov
les
fwait
sub
flds
mov
mov
test
sbb
jb
xlat
adc
add
sbb
outsl
test
mov
outsl
jecxz
mov
sahf
jne
push
movsl
stos
mov
dec
arpl
out
hlt
add
enter
dec
aam
xchg
sub
xor
sub
mov
or
add
in
movsl
in
cmp
aaa
mull
mov
push
js
out
xchg
insl
out
test
daa
call
loopne
pop
int
and
xor
lods
mov
cmp
rolb
mov
inc
xchg
mov
adc
inc
mov
fwait
aas
mov
xchg
jge
addr16
pop
and
and
cltd
or
out
xor
cs
xchg
sub
cpuid
jbe
mov
mov
lcall
mov
mov
rolb
jg
push
sbb
sub
lods
add
mov
sub
adc
lods
pop
ss
jge
push
fwait
push
dec
xor
popf
cmpsb
hlt
repz
fldt
pop
shlb
aad
push
pop
clc
rcr
mov
rcrb
scas
flds
add
jecxz
test
xchg
sub
mov
fwait
push
mov
dec
jbe
das
or
jne
mov
pop
adc
inc
sti
pop
stos
inc
and
mov
push
aad
or
cld
gs
push
mov
fisubs
xchg
out
xchg
jae
mov
inc
movsb
xor
mov
and
xchg
jge
stc
xorl
fs
test
stos
in
aad
lahf
cmp
setb
rcll
int
inc
fnstcw
push
xor
fcmovbe
push
stos
ret
test
std
mov
cmc
lods
fistl
pop
or
enter
adc
ljmp
lahf
mov
test
stos
scas
in
xor
mov
int
mov
xchg
test
ret
pusha
js
rcll
and
pop
mov
dec
push
js
add
das
xchg
and
stos
nop
xchg
aaa
sub
out
xchg
pushf
aaa
inc
inc
ljmp
addr16
jl
mov
xor
xor
mov
mov
add
sub
imul
mov
pop
lcall
lret
push
std
scas
push
mov
sbbb
and
jg
leave
in
popf
pop
adc
mov
inc
outsl
out
mov
dec
xor
mov
add
scas
lret
repz
out
lret
stc
sarl
aas
adc
mov
xchg
test
jecxz
xchg
or
sbb
insl
mov
cmpb
jmp
cmp
pop
sbbb
adc
dec
xor
push
pop
js
push
jbe
test
rclb
gs
loope
mov
push
ss
es
insl
popf
aas
jns
dec
testl
fwait
int3
inc
xchg
sub
inc
xchg
pusha
and
jo
std
push
daa
test
mov
scas
int3
inc
xchg
inc
jmp
inc
in
lods
pusha
sub
sbb
mov
jge
push
lea
push
add
test
jecxz
pop
push
mov
xchg
addr16
test
or
subb
mov
lret
pop
cld
mov
adc
push
add
sub
mov
push
fisubs
sbb
dec
add
outsl
or
pop
les
outsb
cs
jl
out
popf
das
xor
jecxz
hlt
test
aas
movsb
add
inc
imulb
sub
daa
xlat
or
sub
cmpsl
ret
fdivp
lock
dec
in
jne
mov
scas
popa
icebp
cmp
iret
fnsave
cmp
shrb
mov
sub
bound
add
mov
js
fisttpl
add
xchg
movsb
clc
add
cs
fdivs
aas
xor
loope
outsl
outsl
in
xor
loope
in
std
pop
cmp
cltd
sbb
imul
mov
into
das
jne
test
sti
in
jge
jl
jbe
repnz
sub
fld
xchg
or
out
and
pusha
jg
iret
arpl
lahf
xchg
pop
mov
out
and
mov
call
es
lcall
fcoms
dec
push
mov
mov
int3
shlb
and
jbe
fnstcw
rorl
xor
sbb
jecxz
jecxz
lods
mov
jmp
push
arpl
adc
jmp
insb
daa
sarb
es
inc
adc
xor
mov
sbb
ja
ret
cmp
ret
shr
in
xchg
addl
and
outsb
mov
test
out
xlat
icebp
or
cmp
das
fs
ja
cli
fnstenv
xchg
je
jns
cmpb
sbb
push
adc
popa
out
push
push
aad
psubusw
xor
mov
push
loop
icebp
mov
mov
add
or
movsb
cmc
inc
add
inc
pop
xor
cltd
adc
cmp
leave
aad
cmp
pop
sub
out
inc
loope
orb
pusha
std
add
mov
stc
mov
push
mov
push
pop
add
mov
pop
ret
xor
mov
cmp
stos
mov
mov
mov
push
in
fimull
out
and
scas
es
popl
cmp
into
fs
add
std
aas
mov
mov
divl
cmpsb
xchg
fs
xchg
or
adc
mulb
das
rorl
call
shll
xor
inc
and
leave
stc
cwtl
sysexit
cmp
sbb
faddp
adc
aad
mov
fcmovb
cmp
jo
or
int3
int3
xchg
sbbb
pushf
ljmp
jmp
insl
push
sub
dec
dec
push
push
xlat
mov
out
inc
mov
mov
mov
enter
mov
push
sbb
push
pop
mov
incb
test
mov
or
outsb
adc
mov
and
fists
in
stc
data16
mov
push
xchg
scas
hlt
push
add
xchg
sahf
les
mov
pop
lret
xor
dec
stos
lds
xchg
enter
ja
jmp
cmpsl
jo
icebp
mov
dec
pop
jno
dec
fstpl
push
bound
lods
jae
aas
insb
dec
out
mov
int3
sbb
cmp
int
xor
aam
dec
dec
xchg
mov
fldt
mov
xorl
repnz
cli
in
push
jae
insl
bound
xchg
or
cs
cmpsl
sub
add
fdivrl
fwait
xchg
cmp
push
faddl
jnp
insb
outsb
push
add
test
push
int
subb
dec
xor
pop
fdivp
lcall
shll
lods
jae
mov
adc
sbb
mov
push
lea
test
aas
in
mov
dec
or
js
push
adc
sbb
test
sti
ficompl
outsl
js
lahf
movaps
lahf
inc
and
push
mov
cmp
xor
ss
lea
loopne
jo
jle
in
mov
mov
imul
inc
pusha
and
or
jno
loop
mov
stc
fwait
or
xchg
int
sub
cmpsb
aaa
lret
stos
xor
jo
int
clc
addb
mov
dec
adc
int
sub
pusha
push
js
push
lret
notl
test
loop
js
in
mov
rcrb
ja
adc
nop
clc
das
pushf
cmp
jns
pushf
inc
lret
in
repz
insl
aam
stc
xorb
je
js
push
scas
in
add
scas
push
xchg
popa
cld
sub
dec
roll
repz
push
loope
xchg
xor
dec
cmpsb
lds
loopne
subl
mov
into
mov
imul
cld
xor
ret
test
and
jns
leave
mov
dec
sbb
dec
sarl
pop
xchg
xor
cmp
ficoml
dec
pop
call
pusha
shrl
lcall
stos
inc
xor
flds
xchg
stc
shll
push
jg
int
cmpsl
cmp
das
xchg
call
cld
mov
loopne
sub
mov
sarb
fstpt
or
or
in
fdivrs
sbb
hlt
xchg
push
fistpl
imul
xor
nop
pop
add
lret
outsb
scas
push
pusha
sbb
jnp
out
insl
xchg
scas
pop
add
aaa
test
adc
push
push
mov
out
xchg
imul
push
push
out
or
mov
hlt
cmpsl
ficoms
fbld
add
jl
mov
subl
arpl
mov
repz
aas
fstpl
sub
mov
adc
inc
int3
rol
pop
cmp
push
or
or
pop
ljmp
hlt
fistl
imull
testb
mov
xor
adc
bound
push
daa
scas
adc
inc
ljmp
mov
xchg
push
test
dec
cli
add
cmp
out
mov
xchg
dec
cmp
push
rep
xchg
add
ret
xor
addl
imul
ljmp
mov
aas
jns
shll
mov
movsb
dec
jp
cld
push
fsubr
cmp
mov
cmp
js
ds
and
sub
xchg
xchg
or
add
jns
faddl
fsubrs
out
imul
push
pop
popa
out
test
push
sbb
mov
scas
adc
dec
add
sbb
cli
pop
cmp
das
push
jo
pop
les
js
xorb
filds
cli
cmpb
pop
popa
mov
cmpsb
repz
popf
add
gs
cwtl
out
push
out
adc
ret
in
cmovns
repnz
fnstenv
sbb
cld
and
mov
call
adc
cmc
test
in
sub
or
ret
mov
or
shl
aaa
icebp
mov
test
and
push
xlat
fists
out
nop
push
movsl
adc
ficompl
lret
rorb
inc
cld
cmp
xchg
sbb
mov
jge
into
leave
adc
call
and
es
xchg
xor
inc
lret
cltd
cmpsb
ja
dec
gs
mov
ret
loop
clc
sub
mov
repz
ret
jp
mov
cs
ljmp
lahf
jge
sbb
push
repz
movsl
fbstp
dec
push
jo
test
imul
cmp
rclb
push
dec
push
int3
mov
cmp
or
fsts
dec
and
pcmpeqd
ss
out
mov
out
out
adc
fcoms
jns
dec
cltd
aad
xchg
mov
or
insb
mov
push
pop
cmp
leave
cwtl
fsubrl
dec
popa
cmpsb
adc
mov
into
pop
xor
loopne
lods
sub
mov
divl
dec
repz
push
mov
xchg
pop
enter
xor
cmpb
popf
mov
jnp
dec
shll
and
aad
les
xchg
adc
scas
out
mov
mov
mov
ja
pusha
or
xchg
call
mov
jns
gs
mov
scas
pop
cmc
in
add
mov
mov
in
lods
mov
cmc
out
scas
std
mov
inc
inc
pop
out
aad
fdivs
lret
pop
pop
inc
call
pop
pop
push
lcall
sbb
dec
rdmsr
popa
inc
push
inc
push
dec
mov
jle
sbb
add
cltd
inc
dec
cmpsl
sbb
mov
rol
mov
inc
lock
and
flds
inc
inc
push
jle
aad
fwait
push
lahf
mov
shl
mov
pusha
cld
imul
dec
aaa
or
lock
ficomps
addr16
imul
or
lea
mov
xor
and
pop
and
outsl
test
mov
outsl
roll
sbb
cs
jp
ja
int3
adc
sub
jns
test
fiaddl
jmp
and
push
dec
mov
cmp
dec
and
pop
cltd
divl
push
enter
and
push
int3
mov
sub
gs
mov
mov
clc
pop
xchg
inc
sbb
jb
imul
pop
pusha
ds
call
push
cmc
cmp
xchg
shrl
sub
pop
pop
and
mov
cld
and
scas
cmpsb
aad
test
xchg
pop
cld
loop
testb
xor
adc
sub
stos
cmpsb
or
popl
fnsave
sbb
jge
or
dec
movsb
jo
popf
clc
mov
sub
mov
outsl
loopne
lods
loop
je
push
andb
stos
and
int3
sbb
xor
scas
cli
jae
enter
cwtl
jne
stc
jno
mov
shl
inc
ja
imul
cltd
or
clc
xchg
mov
cmp
xor
xchg
cmp
jb
movlps
test
test
mov
shl
xchg
movsb
cmc
insb
dec
jmp
dec
push
test
sbb
inc
in
cmpsb
pop
cwtl
sbb
dec
xchg
mov
dec
movntps
nop
imul
mov
sub
mov
aaa
cmc
inc
push
add
add
data16
scas
cmp
fcomps
stos
sbb
das
adc
push
icebp
data16
fisttpll
sub
sahf
jle
mov
mov
cmp
push
lret
xchg
xchg
jge
xor
call
jp
stos
rcrl
cmpl
outsl
xor
pop
js
mov
loop
cmc
repz
pop
push
cmpsl
sbb
dec
sub
sahf
mov
mov
fs
in
ja
lret
inc
jbe
loop
mov
jo
pop
xchg
lods
mov
loope
add
int
jne
aam
es
push
iret
push
push
fwait
pop
cmpsb
xchg
add
stos
outsb
scas
jmp
adc
fnsetpm(287
add
mov
cmp
add
xor
inc
test
push
sbb
aad
mov
cmpsl
ficoml
ljmp
or
cli
jl
leave
cmpsl
mov
sbb
fisttps
sbb
mov
push
push
aas
inc
lret
scas
scas
test
push
mov
stos
jnp
mov
push
outsl
sbb
pop
int3
sbb
shll
and
dec
popa
inc
fs
xor
push
cwtl
pop
dec
inc
sub
ds
jmp
int3
call
mov
sub
xchg
jmp
lods
js
sub
and
adc
or
jo
xor
adc
mov
xor
int3
test
or
xchg
lcall
xchg
xor
fcoml
lret
pop
stc
or
and
call
pop
mov
aas
sbb
loopne
js
sarl
rcll
lcall
mov
inc
cs
jno
gs
movsl
sbb
cmp
lods
int
pop
divl
cmp
in
sbb
lods
xchg
js
fstps
jne
fisubrl
loop
sbb
adc
loopne
or
dec
movb
push
hlt
jmp
data16
xchg
lret
negb
subb
and
imul
lahf
repz
pop
xor
and
mov
sti
test
xor
fcmovnu
xor
push
lods
xchg
test
cmp
jge
pop
ret
mov
stc
mov
in
test
inc
cli
inc
and
pop
loope
jp
fildl
loop
aam
aad
sub
push
test
out
mov
movsl
sub
and
inc
xchg
lea
lds
sahf
hlt
enter
and
cs
mov
fisttps
das
cli
call
ja
call
mov
out
loopne
loope
push
fs
sarb
mov
mov
popf
ds
fnstenv
push
mov
pop
xchg
and
subb
movsl
in
pop
mov
mov
push
sub
mov
mov
ret
pop
sbb
dec
orl
lods
popa
test
mov
fstps
mov
mov
imulb
push
pop
push
push
scas
mov
mov
or
push
int3
xchg
and
fstpt
ds
insb
leave
push
or
adc
or
loope
clc
icebp
inc
dec
xor
cmp
mov
xchg
std
pop
sub
adc
cmp
pop
daa
cmp
mov
push
push
xor
push
inc
imul
or
aaa
mov
xchg
leave
dec
mov
push
daa
pop
shll
jg
lcall
aaa
les
iret
test
mov
frstor
lods
cmp
or
sbb
popf
data16
test
ja
mov
loope
mov
test
push
jnp
mov
decb
adc
add
sub
jl
out
or
les
lret
shrl
pop
xchg
add
xor
scas
or
push
or
je
mov
push
adc
sub
loop
repz
push
lahf
std
push
int3
cmp
mov
nop
xchg
push
mov
pushf
jnp
shlb
out
pop
int3
and
add
aaa
stos
dec
adc
cld
lahf
xlat
nop
sub
mov
in
xor
adc
scas
jne
int
xchg
pop
mov
mov
cwtl
movsl
sbb
inc
dec
mov
jne,pn
jmp
xchg
icebp
push
int3
push
cs
push
pop
pop
test
iret
mov
dec
xchg
mov
mov
adc
adc
iret
mov
dec
mov
jle
iret
fs
mov
sbb
or
inc
pop
in
xor
jne
and
xor
adc
repnz
pop
mov
push
addr16
cmc
jge,pn
ret
jns
jg
adc
loopne
outsb
mov
push
xchg
mov
and
dec
xchg
aaa
lret
push
adc
inc
rcll
insl
pop
sub
mov
sub
roll
out
iret
xchg
pop
pop
fadds
mov
and
adc
mov
insb
xor
inc
divps
push
sbb
mov
mov
xchg
repz
hlt
xor
sub
xor
std
pop
lcall
and
cli
cli
cmpsl
mov
stos
hlt
pop
xchg
jg
and
clc
push
fst
movsl
dec
leave
addr16
fbld
sbb
pop
mov
popa
dec
and
jg
mov
push
orb
mov
mov
bound
dec
dec
mov
xorl
das
fisubrs
ret
mov
fcmovnbe
fdivl
mov
aas
pushf
pshufw
cmc
sahf
jnp
pop
mov
sti
inc
dec
sti
adc
out
cli
out
in
xchg
test
dec
icebp
std
add
push
add
push
js
pop
inc
mov
aas
inc
sub
jno
sahf
aam
arpl
pusha
neg
aam
ja
fisubs
daa
jbe
ret
mov
stc
xorb
roll
sbb
ja
push
aaa
inc
insb
push
cld
dec
hlt
mov
insb
shl
pop
shr
das
clc
stos
leave
lock
popf
sub
repnz
cld
lret
sti
mov
xchg
mov
jo
xchg
and
push
xchg
dec
pop
push
mov
push
sahf
pop
out
scas
sbb
push
dec
or
mov
mov
lods
inc
add
int
mov
lcallw
lock
mov
add
xor
in
xor
aad
ss
mov
sub
or
and
notb
leave
adc
mov
mov
aaa
pop
bound
sbb
ljmp
stos
bound
push
cwtd
movsb
fs
pop
lcall
or
xchg
mov
xor
jecxz
jle
cmp
sahf
in
sbb
clc
dec
inc
push
data16
into
movsb
pop
sub
test
cs
sub
popf
dec
outsl
add
and
cmpsl
xchg
and
or
fnstsw
imul
mov
pop
lret
jo
out
mov
adcb
pop
push
inc
repz
test
es
les
mov
pop
and
xchg
fnsave
nop
push
add
nop
sub
sub
xchg
inc
sti
inc
dec
or
adc
stc
jp
mov
xchg
aaa
or
sub
scas
cld
jo
push
pop
jp
pop
lahf
bsf
sub
cmp
in
sbb
mov
jecxz
or
xor
pop
add
imul
jne
pusha
lret
stc
mov
xchg
gs
lret
insb
xchg
ja
out
xchg
and
inc
loope
push
imul
pop
fstp
je
cs
adc
outsb
and
insl
mov
inc
cwtl
mov
adc
lea
enter
lahf
push
cmp
mov
mov
fistl
xchg
aad
daa
push
enter
jbe
icebp
sahf
mov
pop
mov
push
mov
lods
sub
and
xor
mov
aaa
icebp
bound
ja
add
in
adcb
xchg
cmp
daa
sbb
hlt
shl
test
inc
into
add
lea
mov
xchg
add
cmp
fwait
jns
adc
lods
cmp
cs
mov
cmpsl
adc
std
cmpsb
jbe
cmpsl
test
popa
adc
pop
sbb
push
into
repnz
stos
push
xlat
push
adcb
xchg
jno
adc
push
add
popa
and
daa
cwtl
inc
mov
imulb
mov
out
fstpt
test
jmp
fisttpll
fldcw
jns
movsl
or
lcall
pop
cmp
inc
jg
dec
jbe
das
and
adc
jle
sbb
jge
inc
mul
sbb
push
inc
mov
imul
mov
sahf
dec
push
ret
adc
movsl
fisubrl
aas
test
rorb
xor
rolb
and
mov
push
dec
out
cltd
sub
mov
movsl
xchg
sbbl
xor
or
push
lea
out
xchg
lret
add
adc
sbbl
xchg
rorl
jg
mov
icebp
les
sbbb
jnp
xorl
decl
movsb
or
loope
xchg
aas
add
push
adc
mov
das
jmp
dec
push
hlt
jmp
insb
jnp
faddp
insb
xor
and
scas
mov
test
or
cmp
dec
addr16
jle
pop
xor
pop
xchg
dec
repnz
lds
aaa
jge
cltd
push
neg
add
fsts
arpl
cmp
pop
call
pop
cmp
mov
add
dec
jecxz
insl
cltd
xorb
cmp
add
cwtl
fisubrl
mov
call
jge
xor
stos
inc
adcb
inc
imul
stos
mov
xchg
xor
xor
inc
lds
test
rorl
inc
jle
push
ret
arpl
ds
jno
aad
fists
mov
mov
lds
mov
mov
mov
pop
pushf
mov
ret
add
cltd
inc
mov
dec
jge
daa
shrl
xchg
mov
mov
aam
push
into
pop
movsl
in
test
stos
js
sbb
ficoml
adc
lret
aas
jmp
pop
mov
jno
jge
add
and
pop
mov
push
or
jb
imul
dec
inc
popf
cmp
push
pusha
gs
xor
repnz
imul
dec
dec
xlat
sbb
test
dec
inc
xor
jne
shrl
sub
sti
int
bound
mov
loope
add
pop
dec
xchg
fsub
pop
test
insb
jp
mov
cmovs
and
push
xchg
dec
push
mov
sbb
sbb
inc
cs
jae
frstor
out
cmpsl
mov
push
mov
adc
and
add
fucomip
in
mov
push
rcrb
fsts
ss
sub
ss
sub
fs
ljmp
dec
cwtl
ret
sbb
and
jo
or
testl
jo
add
aas
push
add
bound
and
out
negb
nop
xchg
pop
sbb
cmc
sub
cmc
insb
xor
movsb
out
js
sub
or
aad
loopne
cmc
out
add
sbb
and
int
arpl
add
dec
fwait
push
shll
outsl
inc
mov
add
mov
sbb
fldl
sub
mov
pop
ret
xor
aam
imul
mov
push
push
popa
je
out
pop
sub
mov
and
inc
pop
dec
ds
decb
leave
aaa
push
dec
notl
pusha
loop
clc
or
and
adc
enter
stc
jnp
jns
sub
cmp
add
jl
sahf
sbb
pslld
add
sub
jnp
mov
insl
push
dec
movsl
cmpsl
insl
test
or
push
fstl
mov
nop
int3
mov
loop
in
inc
test
xlat
and
push
add
pusha
and
in
push
mov
jnp
pop
shr
pop
mov
lcall
or
sarb
sbb
filds
mov
xor
sub
xchg
add
pop
mov
rcll
outsl
movsl
ret
sarb
daa
mov
adc
ss
jmp
xor
mov
fsubrs
fists
rcrb
sub
aaa
lret
and
mov
xchg
sti
mov
fstpl
sbb
sub
jno,pn
bound
sbb
stos
jns
outsl
inc
test
mov
sub
rcrl
sub
movsl
mov
lock
jle
and
mov
add
in
pop
ret
test
pop
mov
loop
dec
cmp
andl
sub
jl
popa
sub
xor
or
repz
and
insb
pop
shl
decl
shlb
add
movb
fimuls
lret
push
sbb
mov
mov
sbb
pop
in
dec
rcrb
movsb
bound
xor
imul
fldt
outsb
mov
jl
iret
movsb
adc
pop
adc
and
dec
mov
jns
add
add
and
mov
push
mov
mov
fucomi
sar
cmp
pop
fcompl
inc
clc
movl
test
sbb
ds
sub
pop
ja
push
cmp
mov
sbb
xchg
inc
andb
inc
push
fldt
dec
icebp
mov
outsb
cmp
out
cmp
iret
in
rcll
test
mov
pop
mov
icebp
sbb
int3
cmp
and
xchg
scas
pop
fadds
and
and
aad
xchg
in
xor
loopne
mov
fadds
ret
cmp
inc
fidivrl
bound
cs
icebp
push
ror
rcr
mov
inc
loop
jno
dec
and
hlt
sub
xor
fwait
sub
add
loope
nop
in
mov
pop
ljmp
push
lock
out
cmc
sub
std
sbb
bound
mov
sbb
test
jbe
mov
jp
xchg
xchg
inc
dec
xorb
add
test
gs
mov
jnp
ret
mov
aaa
pop
es
or
stc
lds
daa
test
add
or
cwtl
xor
pop
insb
imul
mov
push
out
fneni(8087
inc
push
and
mov
sbb
or
fucom
xchg
xlat
cwtl
ja
and
pop
inc
cwtl
scas
ret
mov
cmp
ljmp
repnz
push
pop
mov
xor
pop
scas
dec
push
lea
in
adc
imul
xlat
push
xor
mov
out
adc
jmp
hlt
xor
jle
and
pop
sti
ret
xchg
aam
inc
stos
add
sub
mov
test
mov
decb
sbb
shl
jnp
xor
inc
cmpb
leave
ljmp
out
cmp
outsb
cmp
xchg
in
jo
repnz
mov
push
loope
les
daa
sub
sbb
out
mov
int
imul
or
jle
outsb
sbb
sub
jno
test
imul
push
dec
sbb
arpl
mov
addr16
aaa
cmc
bound
popf
push
mov
outsl
clc
leave
xor
push
mov
shlb
add
lcall
mov
jo
jnp
jb
lahf
dec
test
jne
sbb
int
adc
add
jp
inc
push
inc
test
sbb
or
xchg
pop
jl
push
mov
movsl
xor
sub
mov
test
into
mov
bound
cmp
outsb
mov
and
in
inc
cmp
rcll
jne
cmp
mov
lods
dec
or
sbb
aad
mov
out
and
lahf
fidivrl
adc
adc
out
int3
mov
mov
aam
xor
scas
inc
xlat
test
sub
cmp
push
pop
negl
insb
pop
adc
xchg
test
addr16
push
sub
into
out
mov
out
jmp
pop
cmc
clc
sub
ret
cmp
lods
jge
mov
dec
mov
mov
pslld
js
test
xchg
adc
test
daa
inc
cmp
push
ret
mov
mov
xor
xchg
shrl
xchg
pop
pop
pop
es
mov
scas
movsb
popf
xor
out
roll
xor
out
sar
mov
xor
xchg
push
and
stos
xchg
jg
jne
push
imul
xchg
and
cmp
mov
cltd
stos
stc
xor
in
push
push
test
push
inc
dec
inc
loopne
jb
sub
aam
push
aad
and
mov
rcr
into
xor
dec
push
sti
je
int3
outsb
add
testl
xchg
mov
jo
xchg
fs
pop
mov
or
inc
jl
mov
out
rclb
hlt
das
in
ds
cmc
xchg
jo
std
repnz
cmp
cli
add
sti
lcall
jecxz
ret
push
stc
pop
xor
fdivrp
jo
sbb
fsubrl
out
lret
sub
dec
shr
mov
pop
rcll
gs
gs
cmp
sbb
fcomps
mov
mov
ss
xor
push
inc
cmp
cmp
push
call
xor
nop
cmp
xchg
jbe
mov
pushf
or
xchg
frstor
insl
in
mov
lods
mov
ja
add
pop
stos
cs
xor
sar
or
movsl
inc
jbe
and
adc
lods
dec
fldenv
mov
mov
ret
test
cli
loope
fdivrs
sub
mov
cltd
scas
mov
inc
push
and
dec
dec
mov
sub
mov
pop
dec
jle
cmpsl
std
mov
inc
xor
jmp
iret
int3
xchg
pop
pop
sub
mov
push
mov
rclb
rolb
mov
ds
aad
sti
sti
insb
insb
xor
testl
dec
jg
mov
xchg
mov
xchg
call
idiv
fldenv
xchg
out
mov
jne
icebp
sub
mov
add
call
fs
mov
mov
and
call
and
cmpsl
sarl
cmp
gs
jno
in
dec
jb
mov
aam
pusha
xchg
scas
xchg
jae
pop
cmp
or
pusha
cltd
int3
push
push
xor
dec
test
push
loope
xlat
xor
lds
out
add
nop
inc
jbe
lock
test
data16
or
sbb
and
scas
std
push
jmp
bound
mov
jecxz
pusha
mov
ljmp
int3
repz
add
sub
mov
js
int
pop
je
fldenv
js
shr
inc
mov
stos
repz
xchg
imul
cmp
cmp
and
movsl
xorl
and
pop
js
adc
orb
lcall
push
cmp
jae
shl
insl
add
es
mov
mov
ret
mov
mov
scas
pop
repnz
push
dec
aad
mov
pop
adc
push
sbb
mov
ret
sarb
dec
jge
push
js
push
mov
xlat
add
push
pusha
sub
lods
out
and
insb
cmpsb
bound
mov
sbb
pop
loope
mov
stos
movsb
jae
mov
jp
call
mov
fwait
pop
adc
out
jmp
fcoml
pop
std
dec
dec
and
cmc
imul
lcall
into
jae
and
push
fstpl
pop
fldcw
adc
call
cmp
aas
cmp
sbbl
insb
xchg
pop
and
rcrl
pop
movsl
sahf
push
aam
or
sbb
cmp
jae
xor
add
rclb
mov
sti
or
push
xor
sub
cmp
cs
add
inc
psrad
scas
cmpsl
test
movsl
sbb
sbb
adc
bound
mov
inc
addr16
jno
scas
inc
push
mov
in
push
mov
ljmp
loope
push
xor
ficoms
cli
cld
mov
loope
mov
jp
incb
sub
and
cmpsl
mov
fwait
rcrl
lret
stos
jnp
dec
cli
lcall
jmp
jl
nop
sub
leave
mov
mov
xor
outsl
and
popa
adc
out
sbb
scas
mov
pop
cmpsl
pop
lods
test
push
xor
xchg
cmp
cwtl
clc
fsubl
sbb
test
pop
push
movsl
insl
push
or
aaa
imul
dec
stc
lock
sti
loop
or
out
adc
test
std
clc
mov
jle
cmp
sbbl
mul
jae
mov
testl
add
mov
cmpsl
imul
jl
jle
dec
push
jmp
fs
and
ret
flds
loope
dec
rorb
jle
and
scas
orl
fdivl
sub
pop
jbe
imul
sahf
dec
stos
pop
jo
or
ffree
repnz
mov
into
arpl
jnp
lret
loopne
add
dec
adcl
mov
rorb
inc
in
sahf
sahf
lds
jno
adc
outsb
lds
jnp
out
pop
mov
movsl
mov
xor
lahf
sub
sbb
jb
shll
lods
rcrl
push
cmp
sbb
cmp
and
xor
xchg
push
pushf
mov
sbb
mov
dec
and
pop
inc
xchg
ret
push
aam
cmpsl
xlat
mov
movsb
sub
in
inc
mov
ljmp
lds
lock
pop
mov
mov
or
je
std
je
mov
dec
rol
dec
dec
jo
aaa
adc
mov
test
fnstenv
pop
mov
insl
nop
inc
xor
ljmp
mov
sbb
test
dec
ficoms
loope
lahf
loope
testl
cmp
test
mov
mov
dec
and
sub
das
pop
mov
mov
jb
lcall
pushl
fs
push
xor
in
pop
inc
cltd
movb
mov
daa
and
push
repz
dec
dec
sti
mov
lret
xchg
movsb
push
fnstenv
add
mov
movsl
scas
sub
cld
jae,pt
in
jne
lret
pushf
mov
lahf
sti
or
cmc
outsb
rolb
imul
mov
ja
push
cltd
cld
mov
or
sbb
subl
jbe
lods
outsb
insb
aaa
test
or
daa
enter
pop
xlat
pop
adc
into
stc
or
jnp
mov
adc
je
fmull
add
fcmovnbe
lods
xchg
mov
sub
mov
mov
add
add
jae
into
or
into
and
imul
add
insb
inc
dec
mov
inc
push
push
push
dec
sub
mov
daa
hlt
cmp
or
inc
mov
aaa
inc
push
fildll
jae
sbb
adc
mov
pop
cmpsb
push
or
movsb
or
in
mov
push
mov
loop
out
ss
fildll
sbb
mov
xchg
lcall
fs
push
or
sub
xchg
rorl
test
cli
pop
push
mov
test
xor
movsl
mov
inc
cmp
orb
leave
xchg
pop
fdivl
lret
cmp
test
jnp
lret
sti
mov
mov
cli
faddp
inc
xor
mov
jge
mov
es
jmp
xor
out
push
and
clc
rorb
inc
xlat
xor
mov
jmp
addl
es
xchg
push
mov
stos
scas
test
clc
mov
leave
xchg
paddd
adc
push
adc
dec
out
push
sub
les
jne
jmp
sbb
inc
jle
push
cs
sub
xchg
fbld
jne
aad
mov
or
addr16
mov
data16
mov
andb
call
pop
xacquire
cmp
hlt
addr16
pop
cli
mov
pop
mov
pop
mov
lcall
rolb
jecxz
and
cmp
cmpsl
inc
lcall
add
int
movsb
xor
pop
divb
push
pop
sub
mov
jecxz
mov
arpl
outsb
dec
or
es
fstps
jo
xor
aaa
roll
push
jne
push
xor
jo
or
jae
lahf
push
xchg
cmp
scas
or
negb
shl
dec
lcall
xor
inc
pop
xor
je
shll
and
pop
adc
jbe
aam
into
icebp
in
sub
ret
sub
lea
jmp
or
ja
ficompl
and
mov
das
ret
mov
mov
ds
pop
scas
xchg
cmp
test
add
inc
cmp
adc
lds
add
call
jmp
aad
clc
or
ljmp
cmpsb
or
notb
shlb
xchg
adcb
pop
mov
sub
fsub
sbb
jne
sbb
lods
and
out
aas
orl
cmp
sub
xchg
inc
or
loope
pushl
mov
shll
sbb
mov
jno
mov
sbb
mov
out
sahf
nop
xchg
push
jb
bound
add
push
add
pop
call
outsl
add
jne
or
push
mov
lcall
pop
add
loop
mov
sbb
sbb
jmp
out
mov
dec
jno
loopne
pop
jae
ficompl
mov
lds
lods
cmp
inc
in
mov
popa
jbe
and
sbb
das
and
mov
imul
or
cmp
aam
inc
movsb
sbb
or
test
push
xchg
fmuls
mov
sbb
sub
testl
das
mov
mov
dec
aas
mov
xchg
pop
add
das
sbb
int3
cmp
push
mov
fs
inc
sbb
sbb
scas
mov
push
cmc
mov
inc
mov
pusha
pusha
mov
jbe
pop
rcrl
cmc
cwtl
loopne
inc
repz
pop
dec
inc
xchg
movsl
mov
lahf
add
test
mov
in
int
or
dec
stc
aam
icebp
sbb
negb
xchg
aam
mov
loope
addl
dec
mov
outsl
xchg
test
mov
dec
dec
int
movsl
mov
sbb
adc
insb
sarl
shlb
mov
and
xlat
loopne
dec
dec
push
push
shll
adc
and
jnp
sarb
sti
mov
inc
loopne
mov
add
xor
clc
lret
pop
aaa
mov
clc
push
out
xchg
pop
mov
popl
xchg
jns
mov
sti
xchg
stos
xor
in
out
xor
inc
hlt
push
xchg
push
gs
lods
add
sub
push
lcall
pop
popf
cmpsl
cltd
mov
fwait
mov
bnd
popf
test
xchg
add
sbb
ja
aaa
into
xor
push
mov
push
inc
lcall
sub
sbb
stos
sbb
lock
mov
mov
aaa
out
inc
gs
xor
mov
adc
in
add
addr16
pushf
std
and
xchg
out
fisttpll
inc
adc
mov
fiadds
cmp
mov
add
test
xchg
loop
mov
bound
sub
js
test
test
mov
mov
test
dec
sbb
loop
das
mov
xchg
or
mov
mov
xchg
test
addl
inc
mov
testb
test
test
mov
scas
aaa
shr
mov
jnp
pushl
outsl
inc
dec
rol
lcall
movsl
sbb
dec
xor
mov
ret
mov
daa
xlat
cmp
imul
push
xor
and
inc
adc
fwait
mov
scas
lret
xor
in
or
in
movsl
mov
or
mov
stos
dec
mov
gs
pushl
mov
out
cmpsb
pushf
adc
iret
xor
jmp
cmpsl
mov
fwait
xchg
mov
cld
dec
daa
sbb
leave
loopne
scas
icebp
jmp
cmp
ret
in
jge
sbb
xchg
sub
cld
add
and
ret
test
std
jecxz
cmp
inc
mov
mov
push
daa
or
dec
jmp
mov
fsubrp
sahf
cmpsl
mov
sbb
fiadds
ss
lods
add
dec
scas
mov
mov
sbb
addl
dec
aas
movsb
push
test
lahf
add
movsl
mov
jmp
mov
aaa
loopne
popa
scas
and
dec
sub
push
stos
fildll
sarb
iret
je
aas
add
scas
mov
test
int
push
mov
jp
bound
and
lods
jp
fimuls
js
dec
and
cmp
sbb
jo
sub
movsl
inc
jbe
int3
ret
lods
shrb
xchg
jge
sbb
adc
xabort
xor
cmp
sbb
into
fxch
mov
loope
cs
cmp
jb
pop
fwait
aam
jbe
lea
dec
and
mov
xchg
dec
or
push
dec
xchg
pushf
pop
pusha
jae
pop
pushf
fnop
push
inc
movsbl
fadd
xchg
push
ret
fstpl
imul
sahf
fistpl
hlt
test
in
enter
push
and
stos
inc
fsubrl
repnz
pop
sbb
loop
repnz
inc
mov
sub
cmp
or
outsb
stc
add
sub
sub
ja
or
mov
enter
mov
cmp
push
repnz
rcrb
xchg
jg
add
jns
int3
data16
sbbb
leave
xchg
mov
insb
icebp
push
cmc
dec
aad
sti
dec
not
cmp
lds
adc
je
aaa
sti
fwait
pushf
loop
out
dec
ds
jns
add
push
jge
pop
loopne
out
fnsave
dec
pop
sbb
xor
idivb
test
xchg
je
adc
je
js
mov
sbb
stc
xor
dec
dec
push
mov
int
mov
aam
lods
mov
cmc
and
cltd
iret
iret
fsubs
push
mov
mov
loopne
sahf
push
xor
js
sarb
inc
mov
dec
cld
das
inc
cmc
rcr
fsts
adc
ficoml
lcall
push
add
out
gs
out
or
xor
cmpsl
sbb
aas
mov
arpl
ds
lret
pop
int3
aam
ljmp
mov
std
into
pop
stos
jns
cli
and
daa
js
in
ljmp
sub
and
dec
aas
into
enter
jge
loop
ljmp
inc
cmpsl
or
cmc
and
and
es
sub
jmp
enter
fwait
xor
cld
inc
add
adc
lock
rorl
push
ja
and
fmulp
into
cmp
mov
adc
stc
mov
mov
mov
mov
or
addr16
movsl
xor
inc
test
mov
add
sahf
leave
test
repnz
mov
out
leave
dec
icebp
test
jp
das
inc
and
adc
movsl
out
inc
mov
mov
push
xchg
imul
pop
xchg
out
mov
imul
mov
push
in
outsb
test
insb
cltd
out
leave
adc
pop
test
mov
add
aad
mov
aaa
or
std
out
inc
es
shrl
mov
push
cmp
jnp
rclb
mov
push
add
push
jno
xchg
mov
arpl
mov
and
orb
jbe
lods
add
cmpsb
daa
cli
or
leave
insb
adc
fsubl
das
in
jmp
clc
mov
mov
and
sbb
out
mov
popa
lahf
lcall
das
adc
icebp
stos
xchg
loope
pop
inc
daa
pusha
scas
std
xchg
orl
cmp
test
sbb
push
cmpsl
push
adc
rcl
cmp
pop
add
cmp
lcall
shlb
stc
lock
jmp
add
mov
ficoml
in
or
xchg
outsl
or
lock
out
pop
lret
sub
imul
rorl
mov
mov
xchg
cmp
push
dec
adc
insl
add
xor
loop
in
xor
rorb
jae
sub
sahf
cmpsb
pop
js
outsb
fldt
test
mov
mov
loope
or
cmpsl
gs
mov
mov
lds
inc
and
sub
lcall
jne
adc
jae
jp
outsb
test
or
inc
jns
cmpb
and
pusha
jns
sbb
jbe
push
es
ret
in
lret
adc
and
sbb
insl
loop
mov
mov
dec
std
insb
and
cmc
xchg
test
inc
or
cmp
lods
xor
subb
xlat
ficomps
fdivl
jnp
cmp
xlat
adc
jge
lret
shrl
pop
aam
and
pop
jg
movsl
jo
mov
jae
adc
pop
xor
mov
jnp
outsl
mov
mov
js
sbb
or
stos
adc
fs
jo
stos
rorb
emms
sub
or
aam
leave
adc
out
fisttpll
jecxz
das
or
test
outsb
pop
out
jns
lods
int3
sbb
mov
repnz
lahf
loop
scas
and
jle
sub
out
sbbb
cmpsl
je
pop
sub
rorb
and
loope
cmp
and
xor
adc
push
xor
mov
je
loope
xchg
jp
fwait
sub
add
push
in
push
and
mov
les
stos
push
lock
lcall
mov
jl
xchg
cmc
repz
call
sub
int3
lock
rcrb
add
pushf
mov
mov
div
push
xor
push
cs
pop
insl
mov
fst
push
dec
inc
popf
lods
bound
test
and
xchg
cmpsl
sbb
xchg
dec
std
inc
and
ljmp
or
pop
shl
push
out
push
jno
jo
fdivp
or
mov
dec
jecxz
cli
sti
in
mov
pusha
out
pop
icebp
ss
jp
jge
test
jmp
xor
and
cld
cmp
loopne
and
in
ss
adc
add
or
lods
lahf
sbb
in
or
push
mov
add
sti
test
inc
fnstsw
lock
dec
or
pop
cmpsb
nop
ja
test
xchg
sub
lea
lods
inc
hlt
sub
sbb
movsb
fdivp
and
notb
fstp
ja
push
pop
push
jle
ljmp
mov
loopne
pop
bswap
mov
mov
inc
insl
pushf
sbb
sti
movb
stos
adc
mov
xchg
or
sbbl
adc
mov
testl
ret
je
fcoms
inc
or
es
fisubs
roll
or
jnp
enter
xchg
pop
lods
mov
jp
push
fnstcw
mov
push
xchg
gs
movsb
jge
mov
iret
loop
adc
lahf
or
cmpsb
mov
or
sbb
int
call
mov
inc
rclb
rclb
popf
in
mov
daa
popa
loop
mov
icebp
adc
jmp
daa
repnz
cmp
mov
enter
pusha
in
add
out
xor
sub
cmp
incl
xchg
jnp
jns
xchg
xor
or
sbb
sahf
adc
mull
das
outsl
jae
popa
js
pop
mov
and
jnp
sbb
dec
push
mov
xor
and
fwait
xor
push
jnp
push
dec
xor
repnz
sub
mov
ds
dec
dec
lret
mov
ret
loopne
pop
push
stos
insb
mov
inc
push
idivb
xchg
icebp
cmp
add
mov
int3
fmul
and
xchg
dec
push
sub
nop
push
lds
cwtl
mov
dec
test
jecxz
cld
push
data16
insb
rclb
push
dec
leave
lods
mov
pop
jns
inc
adc
push
fisttps
mov
cmpsl
push
ja
aad
lods
mov
gs
aas
mov
repz
fwait
jge
scas
mov
cmc
jp
dec
js
int
cmpsl
pop
iret
mov
push
dec
dec
cwtl
hlt
pop
loopne
mov
push
pop
ret
ljmp
and
pop
or
out
cmp
add
or
push
fcmovnb
sub
mov
xchg
cmp
adc
test
mov
jl
gs
test
sub
fnstsw
sub
sub
loop
and
and
lcall
stos
shrl
jecxz
mov
mov
aam
insl
inc
insl
in
out
roll
or
jbe
xchg
xor
sub
pop
movsb
mov
inc
xor
iret
fidivrs
push
js
iret
xor
sbb
in
inc
push
or
jp
fcmovu
in
pop
or
lea
aad
test
xor
push
xchg
jnp
in
addr16
push
je
roll
mov
push
jb
push
enter
sub
orl
cli
jge
les
jo
scas
insl
or
xchg
scas
jbe
adc
adc
enter
clc
js
dec
inc
xchg
or
loope
jbe
jle
enter
sbb
decl
and
in
cmp
stos
aas
mov
xchg
push
sbb
push
enter
out
test
and
out
faddl
jne
rcr
jl
rclb
push
inc
sub
mov
xor
es
mov
pop
loope
jbe
mov
pushf
jmp
pop
jg
andb
in
sub
dec
mov
shlb
jle
test
pop
mov
mov
cmc
or
pop
pop
xor
pushf
mov
popf
les
test
aaa
test
fimull
xchg
stos
ret
xor
in
in
dec
lock
fstpl
xchg
dec
ljmp
andl
icebp
into
inc
inc
shrl
inc
xchg
dec
scas
and
xchg
jb
push
jge
fnstcw
out
lds
int
dec
mov
test
call
sti
xor
cmp
adc
mov
les
push
scas
mov
fsubrs
mov
cld
xor
pusha
add
ss
jge
jnp
cmp
fdivp
cmc
imul
test
mov
jmp
cld
and
cmp
mov
cmp
pushf
rclb
das
lds
dec
inc
xor
inc
sub
call
fsin
stc
lds
mov
pop
stc
add
flds
push
out
mov
data16
bound
jl
imul
pop
movb
pop
mov
push
aas
sub
jb
mov
test
int
sub
insb
sbb
pop
xor
mov
push
addr16
xchg
int
sbb
mov
pextrw
and
sub
add
rcll
add
add
test
cmp
inc
fwait
sbb
inc
pop
sbb
mov
sbb
inc
lcall
pop
dec
repz
in
cs
ret
dec
lods
lea
and
push
sbb
fidivrs
ja
add
push
jo
outsl
pop
sti
mov
arpl
sub
sti
xchg
jbe
xchg
pop
mov
xchg
test
adc
xchg
push
in
mov
xchg
mov
push
jae
std
mov
ja
dec
lods
lret
jo
sub
insb
jmp
sbb
adc
dec
lret
mov
sbb
call
cmpb
jg
stc
or
inc
jp
mov
call
das
dec
test
lds
mov
test
dec
xor
xorl
and
push
fdivl
cmp
in
inc
into
stc
mov
sar
out
daa
mov
fnstenv
ret
inc
adc
stos
cwtl
shll
push
mov
imul
xchg
pop
lret
hlt
lods
adc
mov
pop
xor
sbb
mov
or
and
test
mov
sbbb
mov
sti
cld
jmp
aas
sarb
mov
js
movsb
insl
cwtl
cld
sar
dec
xchg
mov
or
js
push
lahf
jb
popf
call
sub
add
lods
dec
das
lahf
ror
outsb
loopne
jp
lret
sub
fs
mov
daa
stos
pop
jno
clc
cld
adc
jmp
pushf
cli
jns
mov
sub
dec
dec
lea
lock
stos
lock
and
into
test
lahf
clc
jl
push
dec
sub
in
ret
add
dec
out
aaa
aaa
mov
in
push
xchg
ret
or
fmull
xchg
pop
fmuls
out
les
pop
cmp
stos
scas
call
xchg
in
in
inc
xlat
xor
mov
mov
mov
mov
inc
mov
push
or
pop
jno
sub
inc
sub
mov
ror
push
mov
add
cld
repz
jbe
mov
pop
aas
xor
cmp
ficompl
or
mov
sbb
or
mov
daa
hlt
jae
push
sbbb
hlt
les
mov
ss
pop
shlb
pusha
pop
or
rcrb
test
jnp
or
mov
add
xor
lret
xchg
jge
ret
lahf
push
jecxz
mov
in
and
push
and
pop
insl
lahf
adc
sub
stos
fdivr
add
mov
jno
pop
dec
fcoml
xor
outsl
xor
rorl
out
cmpl
add
inc
stc
out
jle
ds
push
jne
mov
lea
mov
mov
adc
sbbb
adc
sbb
sub
jae
outsb
add
mov
add
sub
jae
insb
fcmovnu
push
repnz
xchg
jae
push
hlt
jmp
popa
int
mov
adc
les
or
out
lds
sbb
shr
lcall
mov
push
sub
mov
aaa
mov
imul
ror
cmp
stos
mov
aad
xchg
aas
fsin
cmp
hlt
sbb
mov
fnsave
jb
hlt
sbbl
cltd
fistpl
insb
push
ds
sub
mov
pushf
ficoml
xor
push
inc
mov
addr16
dec
jb
jmp
pop
xor
dec
pop
inc
xor
sahf
or
pusha
xchg
mov
shrb
lods
ret
out
pop
mov
lds
cmpsb
pop
mov
push
cmp
push
aas
mov
push
pusha
gs
hlt
push
adc
or
repz
cmp
cmc
pop
push
cmc
jl
sbbb
add
jbe
or
adc
repnz
xchg
mov
sbb
mov
xchg
rep
pop
pop
js
nop
mov
or
push
ret
push
dec
addr16
add
fcoms
call
sbb
mov
xchg
mov
mov
mov
jns
or
rorb
aad
cmp
hlt
fiadds
xor
in
sbb
clc
sub
sti
mov
jo
nop
test
js
insl
in
jnp
rorb
xor
jno
in
lds
pop
jns
pop
mov
pop
inc
and
mov
fcomip
mov
jmp
inc
jecxz
sub
jp
enter
mov
test
mov
iret
in
out
inc
js
ds
or
mov
mov
pop
sbb
inc
movsl
daa
orl
sbb
mov
das
lock
mov
and
test
lds
pop
xor
jl
mov
xchg
scas
mov
mov
sub
cmpb
adc
inc
out
or
mov
fildl
rorl
and
mov
les
leave
add
sub
cmp
sbb
scas
mov
pop
popa
pop
cmpb
xchg
mov
or
insl
into
jnp
in
inc
cltd
mov
push
inc
xchg
add
repz
repnz
xor
out
mov
clc
lahf
or
adc
repnz
inc
sbb
sbb
shrl
jge
add
fisttpll
inc
clc
mov
dec
mov
mov
ljmp
mov
testb
xchg
mov
movsb
sarl
into
sbb
je
push
adc
les
loopne
xchg
cmp
call
pop
ja
sub
jle
popf
pop
push
ja
in
jb
pop
inc
test
clc
movsl
iret
dec
cmp
bound
movsb
adc
addr16
push
mov
rorl
popf
addr16
push
jmp
fdivs
fsts
xchg
stos
jb
orl
sbb
pop
loop
test
je
popa
mov
fistpll
xchg
xchg
sbb
ds
pushf
jno
mov
pop
fwait
dec
xchg
test
push
loopne
lret
mov
or
andb
mov
lds
gs
scas
ss
add
cmpb
mov
movl
push
test
sbb
pop
mov
xor
jne
addl
icebp
mov
push
inc
stos
enter
cli
cwtl
test
divl
fcomps
fadd
mov
xchg
lods
pop
mov
movsl
test
aad
stos
lods
ficoms
xchg
addr16
in
add
dec
je
popf
bound
int
jno
pop
dec
test
sub
cli
scas
cmp
jle
push
lcall
cli
sub
out
push
repz
rolb
xchg
sbb
xchg
jg
repnz
addb
xchg
xchg
sarl
jnp
or
add
lock
or
push
pop
jp
inc
mov
jge
int3
xor
test
out
add
scas
test
dec
add
jl
jnp
je
ret
push
pushf
sub
or
test
jnp
mov
jae
jnp
pop
jnp
cmp
std
xchg
sbb
outsl
cltd
dec
xchg
inc
aas
mov
add
push
jmp
sarb
sub
shll
fsub
xchg
lock
sbbl
ret
and
push
add
call
fists
ret
lods
xchg
inc
cmpsl
xor
xchg
dec
mov
xor
fsts
sahf
push
outsb
inc
fiaddl
pop
fs
mov
into
dec
add
gs
mov
or
pop
jmp
arpl
inc
btc
and
jnp
fldl
movsl
fstps
push
data16
sarb
call
xchg
xchg
std
jmp
out
inc
addr16
xor
test
xor
or
jl
inc
gs
adc
nop
add
fadds
arpl
adc
jb
out
sti
ds
movsl
inc
sahf
xchg
mov
daa
push
push
push
out
add
iret
data16
xor
xchg
inc
push
popa
rcrl
inc
fcmovbe
scas
xchg
add
fwait
xchg
loopne
loop
out
mov
leave
data16
inc
and
cld
mov
scas
ds
cmp
push
push
gs
sub
jbe
xor
imul
xor
inc
mov
and
push
lock
stc
gs
imul
lret
jo
xor
cld
mov
or
out
xchg
jp
or
xor
cmpl
out
pop
push
fldt
inc
push
and
imul
mov
aas
dec
prefetchw
jmp
mov
push
pop
mov
les
inc
or
std
mov
aaa
mov
aaa
scas
pop
lds
cmp
add
pop
fcom
mov
jo
dec
adc
std
xorl
cmpsb
pop
mov
pop
loop
std
cli
xchg
data16
dec
mov
and
cwtl
dec
adc
jle
add
ret
pop
pop
pop
dec
jmp
daa
fbstp
inc
inc
jl
aad
jmp
or
fcmove
ret
add
sub
mov
lds
adcl
jae
fdiv
fsubrs
ljmp
mov
pop
mov
fisttpl
out
in
push
inc
outsb
pusha
inc
ficoml
mov
pusha
call
cmp
dec
xor
dec
in
insl
mov
add
dec
push
imul
int
cmpsb
mov
cli
dec
stos
xor
pop
dec
dec
pop
scas
xchg
sub
xor
out
mov
push
cmp
cmp
cmpsb
leave
jne
mov
rcrb
xor
sar
sub
push
fidivs
fimull
inc
push
mov
cmp
leave
adc
jp
xor
lcall
or
fldcw
mov
adc
push
call
dec
sbb
repnz
add
fsubp
dec
iret
out
cmp
loope
push
test
mov
jns
xchg
sub
and
pop
add
jns
lods
les
cmp
sub
sbb
push
or
pushl
xor
jnp
inc
popa
jne
es
test
cmp
push
je
sti
sbb
lods
iret
cmp
xchg
stc
cmp
ret
mov
lods
mov
stos
test
daa
dec
jmp
insb
add
push
push
adc
cltd
fwait
push
cs
and
mov
push
stos
sub
lock
insl
mov
dec
not
lods
sahf
push
add
daa
cmp
push
pop
nop
sub
xchg
sub
je
pop
icebp
repnz
inc
jmp
dec
jae
jecxz
xorb
dec
inc
jno
adc
adc
pop
in
jmp
ss
push
jb
pusha
pop
or
outsb
cmpsb
push
push
repz
sub
pop
fnsetpm(287
lea
int
arpl
sahf
pop
incb
dec
pop
mov
sub
push
mov
out
pop
xchg
pop
fistpll
sub
dec
mov
clc
mov
jp
or
sub
movsb
push
pop
inc
sub
orl
xchg
pop
clc
repnz
xchg
jns
cmpsb
movsb
xlat
in
fildl
lock
incb
fldcw
jl
add
lret
iret
dec
adc
jne
sahf
roll
in
xor
cs
adc
divl
cs
adc
xchg
adc
jbe
and
repnz
dec
xchg
or
push
adc
push
adc
aas
stos
cwtl
sahf
xchg
push
in
mov
es
movsb
adc
repz
inc
das
rorl
or
cmp
mov
push
mov
fisttpll
xlat
outsl
xchg
mov
push
pop
pop
add
cmpsl
push
mov
scas
pushf
stc
lret
int
or
imul
xchg
and
pop
cmpsb
lods
jp
sbb
call
mov
sub
sbb
xchg
pop
push
jnp
mov
imul
mov
out
dec
jl
movsb
hlt
pop
stos
and
adc
addr16
ret
dec
cmp
xor
in
shrb
lret
and
daa
in
xor
aad
inc
sahf
add
shrb
es
sub
mov
xchg
mov
mull
mov
mov
movsb
dec
sub
pop
out
gs
jecxz
jmp
jnp
jmp
es
sbb
jecxz
pop
push
jbe
push
push
xchg
rcrb
sub
popa
dec
dec
sub
jno
aas
popf
mov
add
adc
push
dec
mov
dec
cmp
jne
loop
and
ret
pop
jbe
js
out
or
sbb
mov
adc
jmp
js
and
adc
lea
sub
dec
test
or
in
push
push
mov
fcmovnu
loope
sbb
jne
out
mov
shll
mov
xchg
arpl
sub
es
aas
jmp
pop
jbe
or
mov
rolb
adc
xchg
test
push
and
push
xchg
fisubs
les
packssdw
ss
addb
push
ret
movsb
pop
ja
xchg
dec
je
sub
stos
popa
cmp
push
std
pop
fs
fiaddl
call
out
jle
cmp
test
pop
sub
sub
push
xchg
clc
push
adc
cmp
xchg
int3
sbb
sub
stc
xchg
stos
leave
mov
or
adc
lea
ret
mov
movsb
mov
shl
push
insb
adc
cmpsb
add
inc
mov
or
cmpb
stc
mov
sbb
jae
jno
or
ljmp
lods
iret
add
push
lret
rcll
push
xlat
btr
arpl
xor
fisubs
sub
cwtl
jns
add
scas
in
je
lods
adc
bound
test
add
pop
or
cmp
sti
jmp
mov
add
pop
sub
cli
push
test
jecxz
pop
add
mov
cmpsl
ficomps
mov
or
push
or
push
jge
jg
pop
scas
xchg
mov
outsl
and
sbb
cmp
cltd
je
fs
and
dec
inc
inc
lock
shlb
xchg
inc
xor
adc
and
stos
sub
cmp
call
mov
mov
in
idivl
and
cwtl
sarl
imul
fnstcw
lods
cltd
jne
mov
nopl
fimull
xor
stc
test
jnp
pop
mov
dec
leave
inc
cmp
dec
stc
and
fcomps
dec
in
adcl
push
sbb
fistl
insl
popw
icebp
mov
sub
mov
lcall
dec
jne
mov
pusha
mov
sbb
xchg
cmpsb
adc
movsb
inc
xchg
ret
dec
rcrl
scas
mov
daa
fcoms
enter
push
push
dec
xchg
iret
and
rcrl
push
repnz
pop
mov
push
mov
jg
ja
mov
adc
or
pop
popa
mov
int
lret
xchg
sbb
outsb
sbb
pop
cmp
xchg
cli
sub
cmp
jle
mov
mov
and
ret
call
ljmp
lock
mov
out
pusha
dec
mov
pop
iret
mov
jecxz
xchg
sub
cs
pop
cmc
loop
pop
insb
in
push
xlat
jns
fldz
bnd
int
push
jnp
xchg
mov
mov
stc
cli
cmp
inc
rolb
pop
push
lods
and
into
mov
imul
lahf
adc
mov
stos
in
xchg
jo
icebp
jno
push
jecxz
arpl
ror
pop
rcrb
push
int
in
jp
add
fisttpll
sbb
cmp
andb
out
push
cmc
cmpsb
push
arpl
dec
cwtl
jp
sbb
lahf
outsb
fisubs
or
mov
in
xchg
cli
sub
outsb
jbe
add
insb
icebp
ja
sbb
push
aas
or
jo
imul
sub
xor
shrl
push
or
xchg
dec
cmp
inc
dec
dec
jns
xchg
popa
cmp
sbb
push
xor
test
or
mov
outsl
push
adc
mov
xor
jl
jmp
repz
jb
imul
popa
sub
add
out
pop
mov
cmc
js
leave
leave
xor
sbb
cmp
decl
mov
xchg
sbb
pop
jle
lret
xchg
mov
xchg
sub
mov
movsl
xchg
adc
sub
loopne
add
add
insl
dec
jp
sub
push
xchg
push
sub
mov
jo
fsubl
xor
xchg
and
add
fidivrl
into
adc
push
pop
lret
jno
stos
push
out
jecxz
jnp
outsl
pop
arpl
stos
add
lret
stc
xorl
lahf
jmp
inc
push
cmpsb
dec
mov
pop
pop
aam
push
fists
daa
movsb
das
fnsave
mov
sub
scas
out
sar
mov
cld
xchg
cmp
mov
mov
cmp
sub
dec
jnp
xchg
push
and
xor
in
jge
push
jnp
lock
pushf
or
out
mov
aad
les
mov
or
rcr
flds
sbb
pop
sti
jmp
loope
push
dec
out
ss
outsb
cmp
sub
pop
push
push
out
repnz
and
insl
adc
sti
into
and
xchg
es
mov
xacquire
add
out
push
mov
xor
cli
mov
shl
flds
xchg
mov
ror
in
movsl
inc
js
xor
fdivp
inc
out
cld
adcb
into
fmuls
adc
push
clc
jmp
sub
and
cmp
xchg
inc
xchg
cmpl
lea
mov
push
mov
push
dec
daa
cmp
js
rcr
sbb
add
and
fdivrl
sub
lock
int
clc
arpl
push
xchg
test
ret
sahf
dec
jmp
fucomp
sbb
mov
pushf
into
dec
xchg
and
fs
cmp
in
xchg
add
test
ret
jne
jecxz
mov
cld
aad
arpl
mov
into
in
cmp
nop
adc
cltd
jecxz
int3
cmpsb
and
rcr
xchg
cld
jbe
jno
sub
jbe
shrb
cmp
loope
shll
es
mov
mov
adc
inc
in
outsl
xchg
or
fwait
pop
dec
and
inc
enter
jge
xchg
popf
xchg
stos
daa
stc
cmc
leave
sub
pop
pop
cmp
arpl
bound
jns
push
neg
or
or
adc
mov
aam
movsb
fiadds
int
sub
fs
dec
sub
out
adc
call
cmpsb
add
inc
adcl
into
pop
mov
lret
mov
pop
pop
in
leave
mov
ja
xor
subb
dec
xchg
std
push
int
mov
aad
and
inc
inc
xchg
ret
pop
adc
push
dec
pusha
jns
push
jns
adc
xlat
insl
sub
test
xor
pop
ss
rclb
js
andb
je
hlt
mov
xor
scas
leave
fwait
xor
push
int
jo
inc
mov
mov
sub
sub
or
sti
vmovq
divl
add
dec
ljmp
and
repz
jg
cmp
mov
pop
push
ret
mov
fbld
mov
aaa
test
aas
push
loopne
into
jo
rorl
pop
cmp
leave
mov
repnz
rcl
mov
pop
cmp
mov
les
xor
js
cmpsb
or
insl
shl
les
mov
jle
jmp
sarb
xorl
xor
cwtl
test
xchg
cmp
sub
or
dec
enter
mov
daa
pushf
and
sahf
das
inc
rcrb
xor
sahf
imul
dec
sbb
test
pop
shl
mov
pop
mov
xchg
pop
int
pop
sbb
pop
xchg
xor
stos
add
jg
inc
or
hlt
dec
jnp
fdivs
mov
mov
testb
add
pop
push
pop
dec
mov
aaa
jg
pushf
imul
push
inc
dec
lret
out
pop
lret
inc
test
pop
pusha
in
insl
push
dec
in
test
push
movsl
mov
mov
and
mov
mov
push
xchg
rcrb
sub
sbb
ret
es
in
nop
mov
push
repnz
test
add
push
stc
pushf
push
inc
lret
xlat
dec
push
push
jbe
inc
lret
push
shrl
es
sub
xchg
ret
cmp
sub
notl
testl
pop
add
cli
xchg
push
popa
sbb
push
test
cmpsl
mov
inc
adc
xor
aam
xlat
shll
cltd
cmp
inc
lods
or
pop
ja
inc
add
and
leave
pop
or
movsl
mov
dec
icebp
inc
jbe
test
xchg
jmp
jae
mov
pop
ss
pop
sarl
std
imul
jbe
sub
testb
xchg
add
imul
scas
xor
xor
cwtl
cmp
and
lret
popa
mov
incl
fsubrl
and
scas
addb
mov
jo
cmp
jmp
mov
mov
mov
ficomps
jp
mov
adc
cmpb
mov
not
lods
inc
in
sti
jno
pop
dec
mov
fdivs
inc
sbb
popa
faddp
sub
push
push
mov
sub
inc
fcmovnb
decl
jg
jl
cltd
cs
sbb
outsl
or
roll
adc
sub
lret
push
lods
xlat
das
sub
out
stos
pushf
inc
and
insl
hlt
mov
lods
sub
ja
dec
inc
mov
sarb
and
inc
imul
or
jbe
or
xor
inc
dec
push
test
push
rorl
leave
popa
test
xchg
sub
mov
push
pusha
dec
out
iret
and
sub
xchg
clc
sub
lock
lods
cld
mov
pop
adc
scas
or
add
mov
pop
adc
xchg
fcoms
mov
mov
sbb
das
pop
mov
std
rcll
push
mov
pop
fildl
fdivrl
rcrb
sarl
cli
add
gs
out
cmpsl
out
in
jnp
fldenv
movsl
mov
add
mov
ds
insb
daa
aas
push
test
inc
shlb
inc
and
push
imul
jl
in
outsl
pushf
lret
dec
fdiv
orb
xchg
push
push
shll
mov
mov
fstpt
loop
pop
ss
cmc
sub
push
test
out
shr
xchg
dec
addr16
sub
inc
mov
jle
xchg
mov
ss
sbb
push
clc
and
int3
xchg
inc
cmpsb
js
fidivs
sub
std
pop
mov
or
sbb
pop
mov
sbb
mov
je
js
inc
ljmp
and
mov
xlat
insl
subl
test
xchg
insl
imul
push
mov
mov
or
xchg
pop
mov
sbb
insb
add
jbe
lret
cli
mov
adc
lret
out
insb
orl
gs
arpl
sbb
pop
mov
xor
aas
subb
lahf
mov
in
push
iret
movsl
sub
loop
out
shll
or
dec
jmp
scas
mov
pop
adcl
mov
mulb
xchg
push
and
iret
scas
or
ja
cmpsb
aam
pop
aam
cltd
bndldx
outsl
pop
cmp
pop
xor
jl
inc
inc
push
add
jmp
mov
or
popf
pop
sbb
inc
xor
fldt
jnp
pop
fadd
in
dec
aaa
loop
mov
xor
sub
or
lods
js
xchg
xchg
add
movsl
sub
pushf
pop
pop
mov
sahf
adc
icebp
in
mov
inc
push
jmp
arpl
rcll
out
ret
pop
xor
jae
ss
or
ds
sbb
leave
cmp
jb
arpl
repnz
aas
outsl
ffree
and
sub
pop
rcll
aad
jp
rclb
pop
mov
popf
push
repz
sbb
mov
pushf
cmpsb
loopne
add
cmpsb
mov
push
lods
and
push
fs
lock
mov
pop
es
mov
test
cmc
mov
fildll
mov
push
mov
mov
xor
mov
in
push
adc
test
mov
dec
sub
loope
and
fwait
jns
add
push
jo
lcall
add
mov
push
or
xchg
jle
mov
jl
adc
xor
mov
test
and
neg
mov
mov
mov
testl
fnstenv
mov
jp
or
aaa
sar
cs
lock
les
add
jae
sbb
mov
cmp
shr
test
add
das
sbb
dec
ds
fcoml
icebp
mov
out
aam
loopne
sub
cltd
ja
stc
je
imul
xor
adc
jecxz
mov
lds
mov
mov
cmpsb
sub
and
ss
ret
pop
adc
xlat
gs
aad
out
mov
add
icebp
repnz
ret
adc
add
mov
xor
pop
pop
test
addr16
mov
test
cmp
jae
mov
je
inc
rcll
rolb
ljmp
sub
pop
scas
or
cli
mov
mov
dec
cwtl
adc
scas
or
loopne
sbb
mov
xchg
mov
testl
adc
jns
jecxz
push
in
push
nop
stos
mov
lahf
mov
dec
jnp
cmp
je
loopne
fistpl
idivb
lods
or
cmp
add
push
imul
out
push
addr16
js
cmp
gs
jmp
out
sub
pop
mov
imul
add
adc
pop
test
aam
sub
push
into
jnp
jle
in
pop
push
outsb
add
sarb
pop
adc
xor
loop
xor
jmp
push
test
add
fisubrs
xor
inc
sti
scas
in
icebp
dec
rorb
loopne
push
xor
jne
scas
cmpsl
xchg
xor
xchg
or
cmp
dec
xchg
and
leave
cmpsl
dec
lahf
stc
ret
push
mov
jo
mov
push
push
dec
mov
aad
testb
notb
movsb
cs
cs
pusha
and
arpl
and
jmp
push
pop
ss
sahf
shll
mov
or
or
mov
cmpsl
mov
aad
xor
icebp
dec
adc
aas
cmp
loopne
out
in
sbb
push
pusha
pop
test
xor
loope
and
pushf
std
arpl
add
inc
adc
cmp
add
lret
ja
aaa
in
lea
xchg
mov
mov
cs
out
pop
add
sbb
popl
enter
xchg
insb
aaa
cmp
shl
lock
daa
bound
push
and
ss
jne,pt
call
push
jle
mov
les
shll
sahf
out
pop
cwtl
inc
or
lds
mov
arpl
sbb
rclb
jb
mov
push
lods
xor
mov
aaa
pusha
jecxz
aas
js
inc
leave
leave
insb
push
and
add
js
xchg
jne
lock
mov
aam
jmp
dec
mov
pop
mov
jnp
pop
xchg
xchg
cs
adc
jbe
add
aaa
jae
enter
movsb
pusha
dec
mov
mov
ss
ret
jg
dec
movsb
call
mov
into
shl
daa
iret
add
mov
mov
loopne
and
push
jle
mov
sub
loopne
jmp
cmp
lods
flds
cwtl
sub
cmpsl
adc
rcl
adc
jl
xor
shl
mov
ljmp
xlat
dec
sahf
idivl
movsl
aaa
inc
pusha
push
jl
add
adc
lahf
xor
ds
mov
cltd
lcall
fcomps
aaa
push
sub
lods
xor
xchg
jecxz
movsl
fstpt
shl
outsb
negb
imul
sar
xchg
pushw
fidivrl
cmpsb
push
scas
cwtl
inc
or
outsl
mov
in
lods
ss
mov
or
test
popf
dec
inc
push
xchg
cltd
jnp
cmp
pop
or
iret
add
daa
adc
rcll
ficoms
mov
mov
add
xor
push
jg
divl
repz
xchg
popf
divl
stc
mov
fcmovu
test
and
adc
cmp
pop
es
ds
psubsw
fistl
test
insl
int3
jl
push
ret
dec
out
subb
shrd
cltd
mov
imul
mov
mov
fbstp
cli
xor
popf
cwtl
fstpt
or
cld
fidivs
aam
ret
pop
xor
movsl
cmp
cld
cmp
btr
es
sbb
in
mov
or
pop
xchg
std
insb
sar
jl
inc
and
adc
add
xor
push
lods
mov
fidivrl
add
sub
xchg
adc
dec
lret
sti
nop
daa
sub
mov
rcrl
mov
xor
xchg
lods
mov
sti
inc
subb
lods
mov
mov
xor
xchg
sbb
pushf
jo
outsb
arpl
cmp
cmp
mov
jno
cld
mov
sub
test
or
mov
outsl
inc
in
ficomps
xor
push
leave
xchg
in
mov
add
lret
mov
cli
pushf
mov
mov
enter
jne
aad
test
std
adc
jp
add
xchg
clc
adc
stos
fidivrl
insb
xor
push
push
sbb
dec
jnp
popf
stc
inc
push
xor
roll
rcrb
mov
inc
add
mov
adcb
sbb
xlat
imul
inc
jno
testb
xchg
add
or
mov
pop
fs
push
jg
pop
std
add
and
jns
or
pop
adc
stc
sbb
enter
jno
out
imul
mov
inc
movsl
sahf
jecxz
push
aaa
and
mov
cmp
ja
add
inc
sti
sbb
sbb
mov
sub
sbb
cmp
pusha
mov
add
xchg
mov
mov
xchg
icebp
out
jnp
sub
xor
int3
inc
mov
or
xchg
test
and
mov
cmp
push
inc
out
xchg
dec
xchg
ds
addb
push
dec
or
aas
pop
sbb
out
fists
in
xor
jne
dec
stc
sub
mov
fisttps
cmp
ficoml
xor
mov
push
inc
pop
jbe
sarb
mov
gs
mov
add
or
sti
jle
or
hlt
or
push
dec
inc
or
inc
mov
mov
add
ret
jo
fimull
or
push
jnp
xchg
jo
cmpsb
lods
mov
pop
test
xchg
in
inc
sbb
stc
inc
mov
arpl
xchg
pop
dec
daa
mov
jb
mov
out
xor
loop
pop
ret
outsb
pusha
mull
ret
jbe
push
xorl
dec
pushf
fistl
mov
test
mov
pop
and
dec
mov
enter
aad
push
imul
xlat
fwait
xor
mov
xlat
bnd
mov
loopne
ljmp
cltd
and
loopne
int
movsl
imul
dec
sub
xchg
pop
sarb
movsl
or
push
jle
ljmp
dec
cmpsl
popf
cmpsb
fldl
sarb
mov
pop
jo
popf
xchg
xchg
jae
pop
stos
mov
xor
or
incl
mov
xchg
mov
add
cmp
je
xor
lahf
je
adc
lods
mov
mov
pop
mov
adc
pushf
ret
push
cli
sahf
xor
data16
push
xchg
pop
call
lods
mov
icebp
jle
mov
sarb
mov
inc
or
push
cld
jbe
imul
aam
ficompl
jo
pushf
jge
pop
mov
push
inc
xchg
dec
test
xor
jne
lret
fistpll
fildll
cmpsb
xor
cli
jo
jno
push
fistl
pop
jne
adc
xchg
aaa
aad
push
call
sub
daa
outsb
dec
adc
jl
jecxz
test
xor
dec
and
inc
mov
sbbb
stos
daa
push
aam
xor
add
push
ljmp
enter
xor
xchg
scas
cwtl
test
jae
add
pop
fsts
fdivs
lret
out
sub
sti
sti
mov
mov
inc
dec
cltd
inc
ss
adc
jge
mov
push
fcoms
jecxz
xlat
rcll
or
sbb
inc
cwtl
mov
push
add
lahf
and
or
aas
ss
mov
int3
data16
push
push
adc
pushf
out
adc
mov
movsw
dec
clc
xchg
insl
gs
xchg
imul
push
pop
repnz
scas
cmp
stos
aad
insl
push
cmp
mov
test
ret
jmp
arpl
xchg
nop
scas
movsl
pusha
cmp
fcomp
out
jns
xor
sarl
js
mov
and
ret
mov
repz
test
insl
mov
dec
cmp
xor
shlb
lcall
leave
and
in
out
push
sbb
loopne
or
and
jo
cmp
inc
dec
lret
mov
cmc
xchg
imul
and
mov
dec
or
pop
jb
dec
jnp
sub
insl
mov
push
inc
lahf
psraw
out
mov
jne
dec
add
jnp
in
fcmovnu
xor
stc
pand
dec
pop
jecxz
std
fwait
cmpsb
scas
push
or
or
out
jno
arpl
adc
mov
dec
aad
lds
les
jl
lcall
jbe
das
insl
inc
je
int
shll
xor
jns
dec
jae
icebp
mov
and
mov
hlt
into
lcall
movsb
test
jp
pop
xchg
mov
xchg
das
pusha
dec
ja
daa
js
or
pop
xor
rorb
mov
aaa
pop
cmpsl
aaa
jae
clts
dec
cld
roll
into
jns
sub
add
sub
mov
add
jbe
push
aam
das
ss
fwait
mov
add
int
mov
pop
push
push
pop
outsl
in
jae
cmp
add
popf
and
jle
sbb
js
je,pn
shll
xchg
addl
jge
loop
decb
out
cmp
sbb
ljmp
cmp
insb
out
gs
mov
and
xchg
test
imul
shlb
push
mov
imul
sub
lods
mov
pop
adc
repz
aad
jns
std
cmpsl
mov
jne
gs
sbbl
pop
fisubl
leave
push
dec
and
aam
cmc
or
loope
ret
imul
imulb
sbb
in
leave
pusha
pop
mov
int
sahf
xchg
pop
outsl
dec
insl
xchg
push
iret
scas
sbb
fimuls
fucompp
leave
ror
mov
and
sahf
cltd
and
lahf
gs
jge
add
in
je
in
leave
mov
or
aas
addr16
out
inc
pop
jmp
cltd
xlat
hlt
sub
mov
out
cli
sub
mov
inc
ds
ljmp
shr
push
inc
push
xor
es
sarb
mov
and
and
jg
push
inc
les
lock
insl
cli
adc
loopne
test
fisubs
xchg
and
xor
cmp
std
xchg
xor
inc
imulb
in
cmpsb
mov
pop
dec
arpl
movsb
pop
dec
popf
outsb
adc
cmc
push
xchg
or
pushf
mov
stc
mov
jp
ja
jmp
or
mov
add
popa
xor
rcrl
call
sbb
jbe
inc
loop
inc
out
fadds
jp
mul
adc
sub
inc
jp
add
mov
imul
mov
cmpsl
mov
scas
adc
into
add
stos
shrb
scas
iret
scas
push
and
lret
sub
jp
lret
add
xchg
fucompp
test
cmpsb
add
and
cmc
add
test
subl
in
test
movsb
jb
es
jmp
or
sbb
jg
lret
xor
sub
ds
xchg
ret
rcll
jno
inc
test
aad
xchg
cmp
or
loope
adc
xlat
mov
inc
xchg
cmp
fisubrs
jmp
into
and
andl
mov
enter
mov
xchg
dec
jne
add
sub
repz
pop
adc
sub
xor
push
cmpl
jecxz
jle
ja
cmp
pop
sub
js
sbbb
push
mov
fmul
leave
je
repz
mov
or
into
iret
add
xor
loop
rolb
sbb
addl
call
or
inc
mov
andps
mov
iret
mov
lret
je
loop
in
mov
into
sbb
fldt
jo
std
sbb
movsl
sbb
mov
fcmovnu
mov
repz
jle
sbb
je
inc
dec
sub
and
sub
lret
mov
aaa
mov
push
inc
clc
sub
inc
inc
push
xchg
xor
xchg
movups
out
ljmpw
jmp
mov
shrl
popa
addl
mov
scas
shl
xor
pop
jae
es
jge
ret
xchg
in
out
or
std
and
and
cmpsb
mul
lds
out
imul
push
push
cli
in
mov
xor
adc
aad
jmp
imul
inc
js
push
pusha
vmwrite
fbstp
push
pop
mov
adc
inc
mov
jbe
outsb
xor
cmp
in
pushf
stos
leave
cmp
sbb
cmp
pop
lcall
lret
sub
cmp
or
aas
sbb
sub
fwait
jl
lods
cmp
lea
push
add
xchg
mov
push
pop
push
out
adc
xor
int3
lcall
out
mov
icebp
pop
mov
add
push
ret
cmp
movsb
add
add
iret
loopne
enter
movsl
imul
sbb
js
out
or
sbb
data16
add
fwait
xor
mov
xchg
stos
popf
dec
fwait
adc
fsub
sub
cmpsl
pop
add
pop
mov
push
push
dec
fdivrl
xchg
call
insb
dec
lret
shrl
dec
shll
shlb
cmp
inc
imul
rcrb
es
pop
and
testb
adc
or
into
mov
sbb
pop
cmp
push
mov
mov
mov
lret
jg
xor
int
out
and
hlt
adc
std
mov
dec
ss
loopne
in
adc
pop
jne
sbb
outsb
xor
ret
or
cmpsl
nop
fwait
rcrb
push
mov
push
add
mov
mov
sbb
add
mov
leave
mov
imul
fdivrs
xchg
jne
mov
fstl
and
mov
imulb
mov
add
in
addr16
ret
hlt
push
fcmove
xchg
push
div
dec
cs
iret
jnp
lods
mov
push
mov
dec
sbb
mov
out
cmc
cs
and
add
cmpsl
xor
or
push
das
fimuls
lds
popa
adc
jne
dec
dec
push
rolb
data16
push
jmp
test
lea
mov
daa
shr
cli
mov
std
mov
cmp
or
mov
fldl
adc
fimull
cwtl
jnp
fucomip
pop
pop
insb
loopne
cld
pop
sub
fmuls
lcall
bound
je
push
xchg
lods
test
jecxz
cmp
and
xor
movsl
or
cs
pop
shll
pop
gs
lock
pop
insl
xor
addb
repz
inc
test
xchg
xchg
jp
faddp
mov
xchg
pop
adc
push
xor
xchg
repnz
xor
test
add
in
cmpsl
ret
shlb
cmp
or
inc
adc
mov
or
mov
adc
pop
rcrb
scas
je
push
xlat
or
aaa
aas
sbb
adc
xchg
lret
cmp
add
popa
sub
fstpl
mov
ret
daa
dec
push
jbe
adc
jnp
popa
jle
out
in
mov
add
lods
xor
dec
rolb
ss
lds
adc
jb
mov
jns
xchg
mov
push
cld
sbb
or
je
fiadds
jl
cmp
sbb
das
imul
push
js
inc
cmp
fstpt
jb
xchg
xchg
in
in
and
fdivl
call
pop
cmp
fcomps
push
cmp
push
hlt
add
mov
jb
cltd
and
ss
sbb
push
mov
rorl
mov
cmpsb
adc
popf
or
or
inc
sbb
or
fimull
es
xchg
or
xorl
dec
roll
lds
cmp
adc
push
testb
pusha
shl
dec
jnp
push
stos
mov
in
out
jle
vpsubq
pop
jbe
addl
iret
adc
rcll
push
iret
push
sbb
fsubrs
xchg
inc
pop
mov
sbb
loopne
fisubl
sub
clc
gs
shlb
and
push
push
xor
hlt
sti
es
pop
scas
lahf
cmc
push
mulb
insb
dec
jecxz
ds
xchg
sti
push
sahf
add
rcll
mov
scas
sbb
or
mov
cmpsb
arpl
fninit
sub
outsb
jmp
test
push
lcall
pop
xchg
subb
stos
pop
xchg
lods
and
fldt
es
leave
mov
push
out
push
dec
mov
ret
sar
aas
lods
adc
and
fiadds
adc
push
push
mull
aas
push
ljmp
xor
fidivrs
mov
es
movsl
call
insb
push
shll
call
sbb
jns
push
sub
mov
cmc
cld
icebp
inc
sub
out
xchg
or
int3
setb
rorb
add
dec
pop
adc
lods
cmp
lods
jae
pop
lret
jno
sub
icebp
imul
cmc
sbbl
cmpsl
xchg
mov
lcall
pop
cmp
test
fsts
ret
scas
cmc
mov
jmp
xor
ret
jne
lods
push
mov
in
sub
es
and
popf
mov
or
push
sbb
mov
js
adc
push
mov
sarl
andl
jg
push
xor
inc
pop
fwait
lahf
add
xor
xchg
stc
pop
xchg
addr16
rcrb
outsb
outsb
sub
dec
xchg
ret
iret
mov
lea
divb
in
fsts
mov
inc
nop
out
dec
mov
xor
nop
enter
mov
cmp
nop
push
inc
out
and
adc
notb
sti
mov
mov
ficoml
or
sub
test
hlt
push
push
or
jmp
push
cmp
sub
jns
lcall
sbb
or
sub
jge
adc
inc
dec
repz
je
insl
adc
cmpsl
repz
pusha
fs
fwait
test
mov
add
rol
popa
imul
pop
mov
testl
mov
test
push
pop
and
shrb
add
or
and
inc
sbb
movsl
jb
test
inc
ljmp
cmp
mov
inc
mov
lods
ss
inc
mov
mov
insl
jg
ret
aaa
rep
enter
insl
fcomps
xor
aas
sbb
clflush
std
cmp
push
imul
jnp
inc
push
cwtl
imul
loop
sub
push
mov
jae
das
sub
mov
add
sbb
out
js
mov
test
sub
and
push
mov
nop
or
cmp
ffree
and
mov
xchg
sub
cltd
lock
movsb
jae
mov
imul
xchg
into
fstps
mov
sbb
pusha
nop
or
dec
sbb
shrb
ret
adc
jmp
mov
push
stc
mov
jo
cmpsl
pusha
fldl
scas
mov
dec
sbb
or
rcrb
push
imul
or
out
add
shlb
hlt
cli
movsl
sbb
add
dec
sti
sbb
cmp
adc
dec
mov
cld
hlt
test
jle
xlat
mov
jno
jbe
sbb
btcl
xchg
inc
nop
shlb
dec
add
inc
popa
mov
cmp
sbb
popf
data16
sbbl
xchg
add
in
in
je
icebp
aaa
or
add
sub
inc
xchg
push
stc
aam
dec
sti
cmpsb
sbb
push
lea
test
dec
cmc
pushf
test
loopne
lcall
test
ja
insb
sbb
inc
pop
pop
shl
cmpsb
jnp
addr16
js
outsb
xchg
mov
pop
pop
cwtl
xor
mov
fxtract
xchg
outsb
gs
cmp
pop
or
inc
sub
mov
es
and
fdivrl
aaa
or
xchg
xor
mov
xlat
mov
sbb
out
mov
jo
pop
pop
or
fmul
dec
adc
xchg
shrb
pop
cmpb
stos
pop
cld
dec
dec
cwtl
lcall
je
sub
xchg
call
mov
xchg
or
incb
pop
test
push
dec
es
cwtl
div
cli
arpl
sub
movsl
jle
js
ljmp
std
aaa
lcall
jecxz
movsl
fsub
add
test
test
in
and
lods
mov
inc
xchg
js
decl
cmpsl
xchg
faddp
and
loope
test
popf
push
mov
aaa
and
mov
test
lods
mov
mov
xchg
popa
inc
test
in
clc
mov
movsl
jmp
adc
lock
cmc
pop
repnz
dec
lret
not
pop
out
lret
int3
push
shrb
test
test
inc
xor
mov
jmp
pop
pop
or
pop
ds
or
sbb
lods
hlt
cmpsl
lahf
add
ficoml
or
shlb
sub
mov
movb
movsb
or
cs
adc
sbb
jg
dec
scas
insl
mov
push
jl
ds
pop
shrl
jb
or
sbb
inc
rcr
cmp
dec
sbb
shlw
mov
cmp
cmpsl
add
dec
dec
sbb
or
cli
and
inc
bound
data16
ss
cmp
testb
loopne
mov
xor
fwait
cmpsl
xor
shll
inc
mov
daa
sub
sahf
mov
xor
insb
cmp
dec
scas
sbb
jle
lcall
dec
les
fnstenv
add
push
sub
into
sbb
jmp
or
mov
mov
das
sbb
xor
test
fistpll
mov
rorl
sub
and
and
sbb
test
stos
mov
int
or
push
call
lock
cmpb
mov
adc
pop
adc
mov
out
push
cmpsl
imul
or
dec
push
loope
arpl
mov
fldcw
fidivrl
cmp
call
scas
mov
leave
test
sub
mov
mov
mov
movsb
or
or
inc
or
mov
adc
or
pop
jbe
adc
cmova
stos
mov
or
iret
sbb
sti
mov
aad
push
and
scas
sbb
mov
pop
xchg
cmc
popf
and
sub
leave
add
sub
sub
cmpsb
test
es
aas
pop
shll
test
add
mov
cmp
adc
roll
xchg
fdivrs
xor
mov
outsl
push
loopne
pop
sbb
mov
lcall
pop
xchg
mov
xchg
rcr
jb
in
shrl
add
je
mov
outsl
add
loope
push
sbb
mov
rorb
stc
add
and
ds
adc
pop
push
hlt
push
lret
jno
fimuls
aam
mov
fldcw
mov
aad
inc
push
lods
mov
nop
fldl2e
dec
pop
in
jle
imul
mov
mov
cmp
add
cmp
scas
jae
rcl
jl
cs
push
adc
fbstp
xor
ret
xchg
pop
imul
mov
cmp
ja
adc
fnsave
jo
lret
add
adc
and
loop
cmp
add
mov
test
sub
push
lock
jne
pop
mov
stos
mov
daa
or
cmp
cmp
shrb
inc
pop
jae
andb
mov
pop
movsb
mov
xlat
cltd
mov
inc
sub
sub
stc
adc
adc
pop
xchg
orl
and
push
sub
and
lcall
jle
lcall
gs
loop
in
insb
and
push
push
xor
sbb
adc
iret
arpl
popf
and
mov
jnp
int
jmp
mov
imul
pop
or
sub
test
ss
imul
jae
xchg
rcr
xchg
or
push
jg
mov
insl
lret
stc
shrl
xchg
mov
stos
popf
add
loopne
int
xor
add
jmp
pushl
pushf
sub
mov
cmp
xchg
icebp
jne
lods
adc
mov
add
mov
jge
mov
sahf
lahf
fmull
jne
mov
in
sub
add
sahf
gs
aam
jo
cmc
setbe
pop
movsl
jbe
outsb
mov
outsb
js
push
sub
loope
push
lods
movsb
cmp
shll
pop
sbb
les
mov
push
inc
inc
not
mov
in
cld
dec
sahf
mov
lahf
push
aam
lock
mov
in
iret
imul
or
mov
mov
imul
aas
pusha
push
dec
pushf
sti
push
shlb
push
mov
jae
fildll
xchg
insb
dec
xchg
cmp
pusha
jmp
je
xchg
mov
sub
pushf
xchg
dec
inc
cmp
fdivrs
add
ficompl
mov
cmp
dec
jb
lret
loopne
orl
in
push
lcall
inc
inc
pusha
xchg
pop
push
cmp
sbb
push
repz
mov
mov
sarl
pushf
mov
pop
push
and
mov
andb
lods
jmp
enter
shll
addr16
cmpsb
lcall
add
shll
push
mov
insl
les
jg
cmp
rcl
xchg
ds
inc
sbb
mov
xchg
add
jmp
arpl
xor
scas
or
mov
inc
andl
ret
cmp
add
cmpsl
inc
ret
adc
lods
mov
je
pop
add
fisubl
int3
jmp
cmp
pop
cmpsl
lods
pop
mov
sbb
divb
mov
sbb
xchg
add
mov
cwtl
std
jno
xchg
sbb
cmpsb
insl
add
imul
in
gs
subb
imul
mov
xchg
andl
rcll
insb
and
test
rcll
mov
sbb
popl
test
je
hlt
andb
inc
stos
insb
mov
scas
scas
add
pushf
jecxz
xor
pop
add
je
popa
ja
jae
adc
push
lret
push
sbb
pop
xor
adc
mov
mov
mov
lock
and
loopne
test
int3
mov
mov
loop
lahf
in
jns
fadds
lock
cltd
ljmp
hlt
imul
inc
in
cmp
dec
int
jge
push
dec
push
add
mov
push
xor
xor
xlat
movsl
imul
mull
nop
cld
mov
bound
and
jbe
mov
into
in
xor
mov
mov
jmp
bound
or
adc
cmc
inc
jmp
fs
cmc
cmp
add
ljmp
ljmp
add
addr16
mov
stc
fisubl
jae
adcl
jns
jo
mov
dec
push
sub
add
int
lods
adc
mov
stc
andl
cmp
orl
inc
dec
jae
xchg
mov
cmp
cli
pop
sub
out
shl
mov
and
fs
pop
xchg
jb
lahf
arpl
jge
pop
xor
sbb
xor
sahf
jp
cmpsb
mov
loop
mov
aas
outsl
pop
scas
mov
mov
sub
icebp
js
push
out
out
dec
xlat
and
test
out
stos
sub
xor
subb
jno
xchg
in
jge
je
sub
adc
or
sbb
stos
cli
and
lahf
addl
lock
mov
ret
mov
push
movsb
popa
or
int
adc
sub
dec
cmpsl
cmp
jns
or
inc
popa
or
popf
jl
mov
arpl
pop
aaa
and
jae
jecxz
lods
push
lcall
sbb
adc
xchg
mov
jae
in
push
mov
dec
cmp
dec
sbb
jmp
jmp
js
sahf
outsb
enter
lods
cmpsl
or
js
arpl
insb
mov
fwait
mov
clc
lahf
mov
je
jne
xorb
mov
cltd
jg
push
rolb
in
stc
add
xlat
push
inc
mov
push
movsl
jge
or
aad
int
pop
sub
jmp
adc
pop
aam
imul
pop
repnz
ljmp
xchg
ja
leave
in
rep
adc
loope
insb
cwtl
adc
mov
cmp
inc
data16
lock
cli
in
jo
xchg
prefetcht0
mov
or
lret
mov
rorb
dec
dec
fldcw
push
push
pop
fiaddl
out
cmp
dec
and
or
xor
mov
mov
arpl
cmpsl
push
or
mov
mov
inc
scas
scas
aaa
push
adc
iret
xchg
ficoms
sbb
lock
js
aas
daa
cmp
adc
inc
cwtl
or
mov
adc
add
inc
push
xor
shll
jle
shl
leave
mov
out
stos
pop
mov
lcall
in
rcrb
sub
icebp
mov
inc
dec
daa
adc
mov
insb
jnp
jg
dec
xor
stos
in
inc
and
lcall
cwtl
iret
inc
cmpsb
mov
icebp
push
out
cli
sbb
insl
data16
outsb
fnsave
adc
xor
mov
adc
insb
into
lods
xchg
js
xlat
repz
testb
scas
cltd
fdivrl
pop
dec
inc
out
aas
mov
addl
movsb
frstor
enter
inc
nop
mov
js
jbe
rorl
and
cld
jg
xor
xchg
ja
fwait
bound
mov
shrb
out
cld
movsb
aam
jle
sub
pop
ret
sub
pop
mov
lods
sbb
dec
jg
arpl
aas
lods
gs
xorb
insl
test
fistpll
mov
repz
add
test
jle
add
mov
dec
push
jne
test
inc
popa
lods
inc
mov
jb
lcall
mov
sub
fcomip
jl
les
rcl
outsb
push
push
mov
rcl
fs
movsb
in
or
ljmp
fldl
mov
add
mov
lock
dec
jb
push
mov
mov
push
std
mov
fcmovnu
mov
jb
outsl
sbb
mov
in
jae
push
and
mov
in
fs
hlt
xchg
add
cmpsl
fisubrs
aam
dec
jg
fst
jle
dec
arpl
loopne
cmpsb
push
sbb
andb
cs
add
xchg
fstpt
lcall
pop
sbb
dec
pop
mov
push
inc
sbb
pop
or
outsb
add
mov
and
imul
rorl
xor
in
mov
mov
movsl
xchg
idivb
xchg
ds
push
jnp
adc
cwtl
inc
xchg
xchg
adc
jo
xchg
push
cmpsl
xor
out
and
cs
mov
outsb
sub
mov
icebp
clc
daa
push
lds
mov
lods
cmp
and
out
mov
stos
push
mov
push
inc
sub
adc
pusha
push
fisttps
sub
cld
dec
stos
push
repz
in
jecxz
cmpsb
or
ja
mov
xor
ret
aam
xchg
ficoml
imul
ret
or
sbb
add
hlt
xor
cwtl
test
rep
movsb
sbb
xchg
out
mov
mov
stos
stc
outsb
sbb
jge
push
test
inc
sub
sub
cmp
and
inc
iret
hlt
les
outsb
test
into
fs
shrl
je
sbb
push
xchg
pop
jnp
in
loope
rclb
jle
and
dec
daa
shrl
push
pop
push
jmp
fiaddl
ljmp
scas
iret
mov
rcrl
in
imul
jmp
test
sub
adc
sbb
dec
jp
mov
dec
jmp
sarl
pop
adcl
and
xchg
push
jno
cld
cmp
lahf
mov
repnz
sbb
sbbb
xchg
out
movsl
stos
dec
and
jg
adc
repnz
lea
pop
cmc
push
jge
xor
or
and
cmp
lock
sbb
pop
mov
ja
jbe
and
and
jb
cmpsb
leave
ds
pop
shl
pop
imul
mov
lea
and
in
aas
cmp
fnstenv
ljmp
sahf
mov
in
sti
push
stos
enter
imul
push
xchg
adcl
pop
aad
pop
add
fldenv
mov
imul
and
movsb
push
or
loop
adc
idivl
jge
or
jno
inc
jle
mov
in
mov
xlat
cwtl
push
mov
ds
fisubrs
jno
imull
mov
pop
mov
jecxz
ret
mov
jg
gs
loopne
xchg
dec
push
daa
loop
or
push
andl
mov
mov
out
imul
xchg
in
daa
or
arpl
push
mov
xchg
lods
push
xor
imul
test
sahf
sbb
insl
xchg
js
in
push
in
aas
fisubrl
sti
jb
fwait
push
bound
push
inc
jmp
add
cli
jo
fcompl
les
orb
sub
rorb
stos
sub
pop
xchg
shrb
gs
sbb
ret
adc
cmp
or
jnp
jp
in
sub
mov
stos
std
dec
cld
call
rcll
mov
jbe
test
xchg
or
ss
xor
sub
and
push
fs
rcll
repz
add
cs
loope
lock
in
loope
dec
mov
pop
rcrl
bound
cld
sub
pop
jp
mov
inc
mov
inc
add
psubd
loopne
xchg
sub
xchg
clc
call
movsb
dec
jbe
adc
and
mov
stos
and
sub
jnp
mov
movsb
mov
out
ljmp
adc
cmovle
icebp
xor
adc
sbb
cmpsb
addr16
inc
ja
cmp
jb
in
add
cmc
push
cmp
shl
test
movsb
test
adc
xchg
mov
push
aam
jge
push
cmp
pop
fs
or
jno
mov
dec
or
frstor
push
xchg
jnp
decb
add
mov
ljmp
fisttps
xchg
push
sbb
adc
lods
mov
jnp
mov
je
push
xor
pop
subb
fldlg2
lods
xor
negb
inc
ss
cs
jge
add
rsqrtps
mov
add
fdivs
mov
orl
mov
jmp
movsl
push
popa
cmpsl
das
je
jmp
cmc
mov
call
adc
rcl
pushf
into
push
dec
push
and
test
mov
bound
dec
adc
pop
cmpsl
js
pop
mov
mov
ds
or
out
adc
pop
mov
in
cwtl
out
test
scas
shll
and
lret
sbb
inc
in
dec
imul
ficoms
testl
stos
xchg
mov
push
adc
addr16
lret
mov
dec
popa
in
mov
cmp
cmp
fnstcw
and
rorl
cwtl
adc
movsb
loop
jge
push
insb
fs
movsb
mov
int3
xlat
add
fnstenv
xor
jb
pop
imul
or
or
sbb
hlt
jno
out
addr16
call
je
inc
lea
in
insb
and
and
hlt
pop
outsb
test
mov
adc
cwtl
xchg
xor
cmp
icebp
xchg
mov
in
mov
jo
repz
cs
sti
mov
jnp
pushf
mov
scas
cmp
popa
push
in
imul
xor
adc
pop
mov
outsb
adc
imul
pop
fisubrl
sbb
adc
scas
cmpsb
stc
das
fidivs
leave
fnsave
in
lea
sbb
das
push
inc
dec
arpl
jns
clc
add
sahf
dec
xor
sbb
clc
pop
std
jno
adc
mov
pusha
inc
movsl
mov
int
dec
fsubrs
loopne
loope
sbb
gs
cwtl
imul
iret
aaa
flds
push
xchg
pop
loop
mov
push
jae
mov
xchg
scas
cmp
popa
pop
dec
dec
pop
mov
and
mov
adc
sbb
sbb
pop
das
push
jnp
clc
add
jae
lods
std
daa
ret
pop
aas
push
arpl
jmp
add
sti
imulb
mov
lock
and
or
gs
jno
test
mov
aam
js
dec
xor
stos
aaa
jbe
movsl
push
or
fsubrs
sub
cli
xchg
jae
repz
adc
fs
data16
in
jle
xor
je
add
daa
mov
sbb
pusha
and
xor
mov
or
pop
cmp
mov
pop
adc
cmp
enter
add
sbb
clc
add
roll
adcb
pop
arpl
bound
adc
lea
das
add
add
inc
push
sbb
or
cmp
pop
fs
push
mov
insl
rcl
call
insb
inc
flds
inc
loop,pt
mov
loopne
pop
xor
mov
mov
movsl
imulb
stc
jge
inc
sti
mov
inc
and
or
mov
in
popa
jg
lcall
pop
pop
fmull
sbb
mov
mov
mov
leave
test
cli
fnsave
add
data16
insb
mov
stc
pop
mov
pusha
push
ret
aaa
dec
outsb
leave
pop
aam
je
and
lahf
jae
push
arpl
mov
add
popf
repnz
dec
pushf
sbb
push
pop
or
push
xchg
mov
dec
xor
imul
xchg
dec
enter
mov
mov
je
negl
rclb
adc
cmp
push
dec
mov
call
adc
xor
jns
jp
jo
mov
mov
shl
outsl
or
enter
movsb
arpl
je
or
xor
idiv
xchg
loopne
jg
in
lret
dec
inc
push
dec
add
outsb
xchg
adc
xchg
shl
and
fdivs
jecxz
mov
call
cmp
sub
dec
xchg
xor
test
icebp
or
lcall
divb
sub
mov
push
sbbb
fistl
insl
data16
in
and
jbe
xor
lea
mov
fxch
je
add
inc
addl
sub
adc
decl
fwait
xor
lahf
adc
insl
xchg
sbb
int3
int
loop
push
fildll
cmp
mov
inc
cltd
xchg
enter
mov
and
pop
fwait
cltd
dec
inc
leave
ret
sub
lcall
xchg
nop
push
pop
ljmp
fsubrl
shrb
scas
cwtl
sub
out
add
mov
push
mov
ror
lods
sahf
sbb
lahf
sub
pop
aas
sbb
jno
mov
shlb
pushf
xlat
dec
push
adc
movsb
mov
fcom
scas
hlt
clc
mov
rcrb
adc
sbb
xor
insl
lods
lods
jp
loope
lret
jae
xchg
sub
mov
or
xchg
and
lods
xchg
cli
and
ret
aad
aad
xor
cltd
imul
xchg
sahf
sti
lahf
lods
test
addr16
into
lods
or
mov
push
andb
add
pusha
cli
es
jb
movsl
in
and
or
scas
cmpb
fsubs
clc
rol
push
dec
inc
mov
inc
mov
cmp
inc
mov
std
sahf
push
aaa
cmpsl
mov
mov
repnz
jne
jmp
dec
int3
xchg
xchg
pop
and
lcall
pushf
lods
jmp
lods
cmc
mov
shll
dec
fmuls
leave
lods
scas
adc
stc
popa
jo
cmp
pop
and
add
sub
lret
sub
mov
push
xchg
and
pop
cs
scas
sub
push
sbb
push
xchg
out
rorl
sub
xor
fimull
pop
jg
sub
stc
stos
icebp
add
push
and
leave
cmpsb
stos
adc
and
inc
stc
push
push
push
lock
mov
jnp
fstps
pop
xchg
rclb
add
or
in
dec
xor
inc
out
or
jb
in
and
mov
inc
in
cmp
repnz
insl
add
shll
cwtl
cmp
scas
in
bound
mov
xor
sbb
dec
test
jmp
mov
push
dec
push
cltd
cmp
cmp
aaa
pop
aas
ljmp
fcomps
mov
sbb
in
imul
imul
stos
adc
adc
dec
adc
mov
dec
adc
fs
movsl
pop
push
sbb
cs
pop
adc
mov
fiaddl
cmp
idivl
aad
pop
or
mov
dec
sti
cmp
cmpxchg
cmp
cli
loope
jecxz
lds
mov
mov
gs
icebp
aas
ret
sbb
inc
lcall
cmp
mov
cmpsb
adcl
mov
pop
or
xadd
aam
adc
stc
add
pop
std
cmp
jb
jle
cmpb
sbb
adc
mov
cmpsl
jge
leave
push
sbb
cs
pop
sahf
and
lock
xor
scas
push
cmpsl
push
cmp
ja
das
xor
pop
or
jns
out
push
jnp
cmc
roll
test
or
out
inc
sub
cmp
movsl
rcll
sbb
lods
mov
xchg
idiv
sub
out
shlb
repz
adc
cmpsl
cmpl
xchg
jo
mov
js
mov
cmp
xchg
in
sub
leave
inc
push
dec
mov
add
pop
cmp
and
or
shll
scas
ret
icebp
popa
testb
mov
sti
imul
mov
mov
arpl
push
popf
mov
mov
rolb
lcall
mov
push
shll
jg
sub
lods
dec
xor
mov
or
inc
and
push
arpl
int
or
sbb
test
lret
jae
push
lret
inc
or
sbb
and
cmp
lret
and
dec
test
jle
loopne
sub
bound
push
lea
es
gs
stos
call
dec
mov
and
mov
xchg
push
stos
mov
xchg
pop
adc
and
scas
dec
adc
dec
xchg
and
test
enter
xchg
ss
mov
rcrb
push
ret
pop
das
mov
stc
subb
cli
insl
sbb
sarb
movsb
push
pop
hlt
in
mov
xor
sbb
lds
jmp
rcll
xchg
ds
popf
and
push
addr16
decb
sbb
outsl
add
inc
cmp
and
rcl
add
rorb
enter
mov
add
xchg
in
stc
cmp
into
imul
jns
loopne
imul
loopne
inc
push
popf
lds
fstpl
pusha
ds
lcall
shl
aaa
push
mov
adc
inc
and
pop
jbe
push
lahf
adc
and
push
push
push
call
mov
and
mov
add
push
int3
pop
add
clc
xor
add
pop
and
out
insb
push
enter
sbb
xchg
xchg
mov
add
sub
roll
xchg
sbb
adc
out
jge
jmp
mov
imul
fs
daa
daa
pushf
sbb
in
and
add
orb
dec
push
out
add
jnp
pop
fsubrl
jno
push
mov
pop
mov
mov
and
push
jnp
cmpw
scas
xor
mov
call
inc
fs
test
fdivr
std
inc
psrld
es
mov
jae
dec
aad
iret
cmc
mov
pop
inc
jne
cltd
ror
xor
outsb
sub
jmp
shlb
and
loop
mov
push
mov
mov
push
mov
inc
sub
and
test
mov
out
lahf
sub
sub
int3
outsb
inc
push
sbb
cmp
pop
imul
push
jle
add
repnz
and
test
xor
jbe
enter
imul
mov
sbb
lock
stc
pop
enter
xchg
mov
sar
leave
fsubrp
pop
packssdw
pop
jnp
cmp
mov
popa
loope
mov
xchg
outsl
jo
sbb
cmpsl
out
mov
movsl
inc
xchg
push
sub
cld
sub
xchg
pop
mov
mov
and
stos
and
jl
inc
movl
mov
lock
and
mov
mov
and
or
xchg
rcrl
fidivl
int
add
mov
aam
int
or
ljmpw
cmp
pop
sbb
xchg
sub
enter
xor
jmp
repnz
cmp
pop
pop
sbb
mov
stos
cmp
ss
or
sahf
cltd
push
sbb
loopne
fstp
and
or
enter
push
cmovl
fistpl
xor
sub
jp
jo
outsl
mov
jo
stos
jns
iret
out
and
dec
push
das
xchg
mov
add
fisttpl
cmp
lods
mov
das
add
cmp
jb
loope
jns
pop
repz
inc
and
push
adc
mov
ljmp
or
in
push
jno
fistpll
xchg
cmp
out
dec
mov
add
and
sbb
mov
adc
inc
scas
xor
loope
int3
fildl
lea
cltd
adc
adc
mov
jp
pushf
loopne
shll
xchg
adc
mov
or
adc
call
fs
lfs
jns
dec
jns
repnz
sub
sti
fisttpll
or
sbb
fscale
pop
adc
sub
cmc
cmc
arpl
jp
outsb
insb
adc
or
ja
jbe
in
jae
ret
jbe
ss
imul
testl
xlat
adc
shl
jno
mov
sub
test
add
and
mov
gs
in
xor
cltd
pop
vpinsrw
adc
je
cmc
les
ljmp
aam
js
mov
sub
fwait
or
jno
clc
imul
int
int3
push
adc
add
and
inc
fbld
outsl
inc
daa
stos
and
popa
das
mov
outsb
insb
add
test
iret
sahf
enter
pop
sub
jge
xor
cmc
pop
shl
repz
scas
addr16
mov
and
call
mov
andb
into
push
adc
mov
lcall
cmc
outsl
pop
sub
sbb
pop
lcall
lcall
xor
mov
cmp
inc
in
int3
fcoms
mov
cmp
xor
and
rcrl
xchg
roll
aaa
fbstp
lock
mov
or
jmp
mov
sbb
in
out
xchg
sbb
sbb
fstps
cmp
stos
iret
mov
loopne
insl
mov
ljmp
adc
add
cwtl
addr16
gs
fsts
dec
or
outsb
insl
fsubl
dec
lods
in
scas
lretw
out
cmp
mov
mov
cmp
pop
or
and
fistps
aas
sub
ljmp
mov
xor
add
adc
jp
or
cmp
stos
cmpsl
adcb
int3
push
scas
in
iret
dec
pop
insl
mov
std
jnp
mov
dec
mov
xchg
iret
mov
ljmp
enter
fsts
out
xchg
or
insl
mov
mov
aad
jp
lea
ret
pop
ret
mov
popf
and
in
std
jmp
pop
aad
les
mov
in
aad
outsb
mov
das
ret
sbb
jbe
cli
dec
xor
test
out
xor
insl
sub
mov
jge
daa
sub
add
loope
mov
xor
cmp
movsl
push
fldl
div
sbb
push
push
test
shrl
push
mov
cmp
pop
mov
dec
cmp
inc
cmp
mov
mov
mov
mov
cmp
ret
shrl
cld
jne
adc
jmp
cs
xor
xor
mov
or
pop
pop
lods
in
mov
cmp
sub
sub
fs
fbstp
adc
xlat
or
scas
jg
xchg
push
jbe
push
popf
xor
inc
inc
test
inc
lds
jle
stc
cmp
pushf
enter
adc
out
xor
imul
lea
dec
cmpb
xchg
cmp
jb
sub
xor
cmp
pushf
and
mov
lods
aam
sbb
push
mov
sbb
sbb
aam
add
mov
mov
lret
rcll
inc
pushf
fs
cmp
mov
pop
cmc
pusha
inc
fimull
mov
stos
mov
push
dec
inc
xchg
mov
mov
in
xchg
scas
push
lahf
adc
das
mov
mov
fldenv
push
test
sti
jno
and
xorl
int
or
push
lcall
sbb
out
push
push
ss
dec
xchg
push
sbb
sub
mov
dec
sub
insb
out
shrl
mov
addr16
xchg
fldt
stos
lea
insb
nop
pop
sbb
ror
xchg
push
icebp
xchg
gs
and
nop
and
xchg
int
shl
shr
in
mov
push
ljmp
je
xchg
adc
fwait
and
xchg
mov
sub
cmp
inc
jbe
repz
into
jge
mov
sub
sbb
mov
cmp
push
pop
xor
push
out
push
xor
xor
add
inc
in
cmpsb
movsb
or
roll
or
cwtl
iret
cmp
lahf
data16
jae
or
sub
lret
les
push
inc
adc
imul
cltd
sbb
pop
in
in
xor
call
sub
xchg
adc
jb
xorb
movsb
movsb
push
repnz
push
lret
xlat
dec
pop
xchg
xorl
jnp
sbb
or
repz
lahf
inc
inc
push
ljmp
dec
in
mov
fst
jmp
cmp
mov
pop
push
dec
outsl
in
add
movsl
rclb
mov
aas
mov
pop
lret
mov
jmp
daa
mov
or
movb
inc
mov
xchg
jbe
cmc
divl
xchg
aad
dec
test
leave
jbe
sarl
add
lahf
sbb
dec
mov
out
fdivrp
jns
pop
mov
xchg
dec
dec
arpl
xchg
dec
das
iret
adc
in
test
test
adc
leave
fwait
lds
loopne
cmp
jge
add
inc
push
dec
sbb
loope
dec
movsl
gs
xor
mov
mov
in
pop
xor
add
jo
pusha
or
inc
fmuls
sarb
mov
cwtl
pop
shrb
pop
popf
mov
ret
gs
int
fsubl
dec
add
shlb
insb
mov
loope
jns
fidivrl
int
dec
stos
sbb
mov
shrl
inc
push
into
push
iret
dec
or
sub
out
out
push
scas
outsb
sbb
and
adc
cli
xchg
data16
pop
mov
inc
sbb
adc
int3
in
lcall
aas
inc
inc
roll
les
in
jbe
mov
fcoms
fisubrl
push
push
outsl
orl
icebp
cmp
leave
sbb
mov
xchg
sub
bound
insl
mov
add
mov
and
mov
shll
add
ret
sbb
je
cmp
popa
out
pop
dec
lcall
mov
pop
pop
mov
dec
call
call
jae
into
mov
stos
mov
pushf
arpl
repnz
imul
mov
push
inc
xor
out
inc
in
sbb
fisttpl
rcrw
mov
fcompl
push
add
lret
repnz
sbb
xlat
mov
and
jne
mov
cmpsb
jmp
fisttpl
sub
xchg
pop
rolb
pop
testl
adcl
jge
leave
movl
inc
or
pop
add
xchg
es
ficompl
lock
cmove
lret
jmp
cmc
int
cld
or
cmp
sub
cmp
mov
inc
adc
add
into
arpl
or
cwtl
dec
add
add
push
mov
sub
lret
xchg
jno
sub
cwtl
loopne
lds
cli
pop
and
xor
or
sub
xchg
in
and
insl
in
shlb
stos
insb
pop
adc
lret
mov
mov
mov
mov
bound
test
or
jge
subb
hlt
retw
jb
hlt
enter
shl
cmp
sti
scas
cmp
stos
outsb
xchg
rcrl
idiv
aam
jecxz
arpl
loopne
cmp
pop
mov
fistps
enter
scas
lock
pop
sbb
ss
es
pop
sub
imul
filds
jecxz
aaa
pop
cmp
add
push
lock
mov
mov
dec
mov
inc
inc
jle
xchg
add
jle
in
xchg
cli
mov
or
jo
push
movsb
mov
in
mov
in
jge
sarb
mov
scas
dec
cli
jmp
lods
mov
push
jmp
sbb
call
mov
inc
test
gs
test
fcmovnb
xchg
sub
in
mov
aas
loope
movsl
mov
pop
push
jge
lea
addb
cmpsl
ja
leave
orb
ljmp
push
ret
shll
and
call
and
leave
jecxz
sub
fisttpl
or
xchg
inc
and
dec
iret
pop
rolb
push
adc
mov
xchg
mov
rcl
flds
push
adc
sbb
add
inc
sbb
xor
mulb
popf
mov
clc
add
in
in
test
and
sub
mov
data16
in
xor
shlb
adc
out
testl
or
xor
jb
cld
xor
call
push
in
pushf
push
stc
xchg
lret
outsl
in
sbb
lcall
xor
addr16
gs
push
jbe
addl
nop
mov
jns
fstp
mov
das
cmp
push
out
xor
imul
dec
mov
mov
cmp
scas
sbb
push
mov
adc
push
leave
cs
ljmp
push
je
dec
pop
scas
xor
jge
mov
mov
pop
mov
pop
mov
lds
mov
xor
ja
out
mov
cmp
xchg
and
inc
stos
and
jnp
add
lods
fsubrs
addr16
and
mov
jge
push
xor
jae
enter
inc
faddl
sbb
arpl
lods
hlt
jae
in
fcmovnb
loopne
dec
nop
mov
ss
inc
aaa
stos
rcrb
or
je
ret
fstpl
popa
loop
lret
repz
in
and
cld
in
jae
xor
sbb
or
inc
je
xchg
xchg
rcll
or
mov
lods
cmp
fistps
in
scas
mov
dec
inc
jnp
out
cmc
popf
or
popf
inc
rcrl
sub
in
pop
icebp
lret
neg
sub
sbb
push
fwait
in
mov
js
add
inc
and
pop
mov
bound
jg
mov
mov
stos
xor
xor
pop
stc
stos
fs
lods
push
cmp
cmp
push
out
mov
xchg
add
int
push
pop
das
test
aad
xchg
mov
add
int3
or
loopne
sti
int
std
sub
movsb
loope
sbb
ja
and
cmpsl
je
insb
jecxz
mov
insl
dec
sbb
int3
pop
andl
popa
mov
lret
aad
cmc
sbb
lahf
jmp
ror
push
fwait
mov
cli
aas
mov
cmc
pop
mov
pop
dec
and
pop
dec
in
jmp
dec
fbstp
rorb
int3
decb
stos
jnp
xchg
fnstsw
xor
sub
mov
lcall
xor
adc
sahf
mov
inc
mov
adc
jle
add
mov
lcall
out
push
push
lret
stos
psubq
daa
push
push
shll
jae
dec
cmp
and
dec
sarl
mov
fsubrl
dec
popf
iret
xor
ret
push
pop
enter
cwtl
rcll
mov
xchg
sub
push
sub
inc
lea
mov
add
pop
out
sbb
sub
decl
lods
stc
jne
push
ret
sub
int3
arpl
cmc
fmul
into
ret
ss
fsubrl
int
adc
xchg
jecxz
xor
adc
push
jbe
sbb
jne
inc
iret
push
ret
sti
orb
cmovne
xchg
test
and
mov
adc
daa
adc
sbb
leave
rorl
shrb
jb
out
mov
clc
push
dec
xor
and
test
cmp
xchg
mov
cmp
flds
xor
fldz
mov
add
jbe
cmp
sti
movsb
sub
mov
pop
adc
insb
xchg
jne
pop
xor
cmc
mov
adc
bound
cs
arpl
outsl
xchg
popa
adc
dec
call
movsb
push
dec
cmp
xchg
divb
gs
dec
ja
xchg
push
fs
out
test
xor
repnz
sbb
jle
dec
mov
ds
iret
xchg
imul
scas
cwtl
ds
lret
stos
pop
ds
fdivs
out
mov
cmp
push
scas
xor
xor
sub
cli
scas
ret
pushf
inc
repz
push
dec
sub
and
sub
scas
and
dec
sbb
incb
inc
dec
in
lea
and
pop
out
nop
enter
jecxz
mov
jae
aad
xchg
adc
cmp
mov
adc
fidivrs
adc
enter
pop
idivb
mov
xchg
lds
out
jne
aaa
ja
scas
roll
mov
jbe
pusha
shlb
iret
jb
sti
lret
jno
mov
addl
pop
and
addb
mov
imul
outsb
scas
and
cmpsb
cmp
psubq
cmpsl
add
enter
xor
sbb
cmp
dec
mov
mov
dec
cmp
repnz
dec
aas
call
pusha
aaa
cmp
cmp
xor
lods
push
je
push
ficoml
sub
xchg
ljmp
mov
enter
cld
in
imul
add
adc
mov
push
xchg
stos
xchg
mov
ja
xor
js
mov
loopne
jbe
imul
ret
stc
imul
sbb
cmp
sub
test
jle
cmp
stos
clc
xchg
orps
aam
jbe
pop
mov
ret
stc
jmp
movsl
nop
insl
int3
ds
cmpsl
xchg
push
je
fwait
int
jmp
xchg
cmp
inc
cmp
lods
mov
dec
pop
and
sub
ret
in
cmp
arpl
outsl
xchg
or
add
test
xor
call
mov
lock
sbb
in
nop
sbb
jecxz
cmp
add
bound
jl
fsubs
dec
lret
jle
push
arpl
gs
sbb
mov
stos
inc
dec
push
xor
inc
flds
push
fcoms
adc
ret
pushf
mov
xchg
addb
stos
sub
adc
movsb
jbe
dec
pusha
hlt
adcb
addr16
fs
mov
cld
mov
outsb
insb
divps
js
mov
pop
es
insb
cmpsl
xchg
inc
pop
pop
or
mov
out
mov
inc
leave
and
push
mov
rclb
xchg
mov
sub
clc
mov
ds
mov
jae
out
cli
push
das
shrb
rolb
mov
outsl
xchg
xchg
nop
inc
push
shrl
cwtl
push
lret
push
push
cs
or
sub
aad
cmpsl
jno
daa
lret
aaa
mov
pop
in
das
in
adc
imul
call
jb
dec
and
leave
push
movsl
mov
data16
dec
cli
mov
jp
jb
mov
mov
js
movsb
sbb
xchg
in
int3
jmp
shrb
add
repz
and
jo
and
pop
mov
mov
pop
cwtl
xchg
sbb
jmp
sti
xchg
in
cmc
jns
adc
sbb
dec
insl
push
xchg
gs
pop
ror
and
das
mov
mov
mov
mov
adc
gs
sub
mov
mov
inc
xor
test
in
arpl
dec
ficompl
xchg
jne
add
mov
test
nop
jp
xchg
jle
pop
shrl
sub
ror
add
add
dec
subl
cwtl
imul
aaa
adc
mov
xor
in
aam
outsl
dec
subl
cwtl
xlat
add
jge
adc
test
cmc
jmp
data16
cwtl
out
and
mov
pushf
aaa
dec
imul
pushf
fimull
pop
inc
cs
cltd
cmc
jbe
mov
cmp
inc
jmp
pop
inc
push
inc
add
lock
dec
and
fisubrs
mov
test
jns
cwtl
add
xor
cmp
lds
nop
add
sub
cmpl
pop
mov
mov
jle
inc
jg
add
nop
mov
sbb
dec
nop
pop
ds
sbb
pusha
out
movzwl
in
imul
mov
stos
jle
cmpsb
jb
jmp
cmp
je
dec
fwait
pop
test
movsl
xor
mov
xlat
subl
xor
das
add
bound
pushf
mov
loope
es
js
cltd
cmp
xchg
div
pop
ja
cwtl
scas
pop
das
lcall
xor
iret
add
mov
pop
sbb
xchg
dec
into
ret
mov
fisttps
out
sbb
pushl
mov
mov
icebp
jecxz
push
adc
add
shlb
xor
test
or
or
sti
pop
mov
push
cmpsb
pop
cmp
and
mov
fidivrl
out
push
xlat
aas
push
mov
xchg
cli
test
out
pop
subb
ret
jne
xchg
loope
sub
add
add
shlb
or
push
xor
fmuls
test
leave
push
or
scas
add
sbb
add
cs
jae
push
call
xlat
jge
out
push
lds
roll
dec
and
movsl
mov
and
pop
movl
daa
cmpl
imul
scas
rclb
pop
mov
imul
in
adc
xchg
jg
fisubl
loopne
cld
push
dec
dec
pop
and
std
out
popa
adc
mov
push
push
in
push
push
cmp
pop
push
ret
jmp
sub
ljmp
pop
adc
rorl
push
push
mov
out
imul
jmp
addr16
dec
push
push
cmp
xlat
xor
cmp
imul
ret
add
ja
movsb
addl
push
rcrl
jg
inc
inc
jge
xchg
dec
sub
mov
add
and
pop
ror
adc
mov
popf
xchg
movsb
pop
sarb
and
dec
sub
or
repnz
jle
and
or
xadd
dec
aam
adc
jp
in
or
push
xchg
adc
into
imulb
push
push
jecxz
mov
or
iret
rcr
push
in
or
scas
imul
insl
add
push
push
jmp
push
orb
fsubrs
add
push
mov
mov
cmp
cmp
hlt
test
insl
jne
les
in
sbb
sub
xchg
push
pop
test
es
sti
push
out
cmc
movsl
and
faddl
push
and
loope
outsb
aam
ficoms
filds
stc
dec
pop
xor
pop
dec
das
inc
mov
or
cld
jl
dec
mov
cmp
cli
and
and
xchg
shrl
movsb
pushaw
sahf
xchg
push
xchg
fs
xchg
jns
pop
inc
dec
loop
or
push
shll
fsub
lahf
or
mov
dec
je
fldt
cwtl
aas
jnp
inc
push
sti
pop
fs
adc
sub
shlb
test
sbb
pop
fistpl
lcall
movsl
mov
cmp
lods
repz
and
subl
daa
jae
xchg
call
data16
imul
stos
sub
pop
xchg
or
or
out
xor
add
fdivs
adc
fwait
pop
adc
push
addr16
shll
add
sub
mov
sbb
movsb
mov
mov
out
mov
push
mov
cmp
imul
mov
inc
shl
xlat
adc
push
mov
inc
imul
movsl
cmp
push
push
cli
sub
mov
enter
lcall
cmpb
xchg
ds
xchg
es
mov
fdivl
in
jae
jmp
add
clc
cmp
pop
leave
cmpsb
sbb
mov
push
pop
sbb
inc
xchg
call
scas
fdivs
lods
leave
mov
gs
mov
pop
cmpsl
arpl
hlt
mov
push
sub
push
mov
or
roll
cld
std
cmc
iret
mov
data16
in
inc
fisubs
xchg
or
icebp
xor
pop
jo
std
jno
xchg
and
mov
push
fimull
aaa
jge
test
stc
arpl
into
mov
ljmp
inc
mov
mov
fistpl
lret
sub
sbb
stos
aas
sub
cmpsb
ss
rorb
fsubs
lahf
pop
mov
and
jecxz
xchg
adc
lcall
pop
fildll
mov
cwtl
sub
sarl
out
cmpsl
shl
sub
and
adc
lds
pop
int3
inc
or
mov
out
in
icebp
js
and
sti
int3
inc
aam
fidivrl
mov
rolb
mov
xchg
ja
mov
dec
out
xchg
jae
std
jo
jg
push
pop
loop
push
inc
fst
scas
bndldx
adc
pop
mov
xor
push
cmpsb
mov
xor
cld
and
push
sahf
lods
inc
dec
es
and
je
shrl
pushf
mov
add
cs
arpl
jne
cmp
cs
add
sub
push
push
ljmp
outsb
ljmp
push
mov
push
push
movsl
fistps
dec
adc
cltd
mov
add
dec
mov
push
cli
jno
pop
sub
cltd
push
pusha
sbb
adc
les
xchg
aam
insb
mov
mov
adc
jno
mov
inc
jp
in
and
push
mov
xlat
sbb
aaa
rolb
call
jo
mov
fstpt
shrb
icebp
or
lods
push
gs
hlt
jae
add
stos
xchg
lods
sar
in
ss
adc
sub
mov
mov
fdivs
iret
jmp
mov
in
jne
out
xchg
and
sahf
xchg
fcompl
scas
pop
ss
pop
test
dec
sbb
pop
test
sahf
mov
mov
stos
dec
xor
je
daa
sub
aam
sbb
movl
ja
push
cs
sub
sbb
cltd
lock
fidivrs
sub
xor
ljmp
add
add
fwait
adc
popa
shr
sub
jmp
xchg
xchg
dec
loop
insb
pop
les
adc
dec
cwtl
daa
xchg
arpl
inc
xchg
adc
mov
xor
pusha
jg
insb
or
or
in
jp
xor
dec
sub
shlb
aas
shl
xchg
cmpsl
add
xchg
lods
or
mov
test
inc
mov
mov
inc
jge
aaa
push
xchg
jle
mov
cmpb
and
es
pushf
add
inc
cmp
cmp
cmc
popf
and
cmpsl
fdivs
insl
xchg
int
push
push
repz
icebp
add
inc
sbb
dec
enter
addr16
leave
sahf
ds
sub
movsl
movsb
imul
pop
aam
ret
cmpsl
es
pop
negb
adc
add
sub
scas
xchg
pop
shll
add
loop
inc
jg
test
sbbl
mov
ljmp
sbb
push
lret
and
push
fcmovne
addr16
jg
fs
inc
clc
mov
sub
icebp
fnstenv
push
outsl
pushf
stos
dec
xor
testb
xor
fcmovne
xchg
lahf
jmp
jle
stos
adc
pop
shlb
out
jns
daa
jmp
dec
add
dec
push
and
mov
xchg
mov
and
xchg
jmp
mov
sub
mov
adc
push
jb
pop
pop
sub
lods
adc
cmp
das
mov
xchg
popf
sbbb
enter
repnz
pusha
hlt
cltd
mov
jl
hlt
lea
adc
pop
mov
dec
cld
mov
push
or
or
aad
xchg
in
sbb
addb
mov
mov
rorb
adc
push
repnz
movsl
clc
aas
js
adc
lock
pop
add
ret
lcall
into
xchg
fbld
jb
mov
lahf
or
fistpll
dec
gs
out
and
xorl
jmp
add
xchg
ds
icebp
pop
out
and
daa
sbb
test
xor
add
fcompl
sbb
into
or
pop
mov
scas
sbb
repz
popf
jnp
mov
mov
nop
pop
fwait
mov
negb
mov
or
aam
jge
sub
and
rorb
push
mov
dec
xorl
add
xchg
xchg
adc
out
or
mov
inc
popf
lods
adc
jmp
mov
test
xchg
mov
mov
xlat
lods
lea
mov
mov
push
and
mov
ss
push
repnz
fidivrl
movsl
cmp
outsb
lods
adc
sbb
stos
mov
testb
inc
mov
pushf
sub
push
les
cmp
adc
jmp
aad
sub
mov
mov
jmp
xor
push
sbb
pop
clc
or
insb
push
mov
jecxz
mov
cmpl
and
fimull
daa
ret
shlb
and
in
imul
lock
xor
mov
add
test
mov
rorl
mov
inc
out
out
cmp
ret
mov
loope
jo
mov
xchg
mov
aaa
sti
and
inc
lock
push
js
or
mov
iret
pop
mov
push
mov
xchg
cmp
cmc
ret
test
loopne
out
sub
dec
sbb
adc
xor
add
mov
int3
fistpll
fidivrl
cmpl
js
lahf
cwtl
scas
sub
sub
inc
std
popf
es
cmpsb
push
xor
in
and
cmp
rolb
push
cmp
incb
js
stc
cmpsb
mov
call
mov
gs
pop
lret
push
cmc
dec
xor
shll
leave
dec
jmp
jg
movl
stos
pop
scas
rol
mov
in
fs
shll
push
adc
jb
push
push
cmp
notl
dec
fildll
mov
sub
outsb
shl
sbb
dec
cmp
or
mov
lea
xor
in
jb
mov
and
sub
mov
fdivl
test
jle
push
repz
jb
pop
shlb
xor
mov
dec
add
ret
stos
ret
jno
aam
push
mov
sbb
inc
mov
push
cmc
adc
test
pop
mov
xchg
cwtl
adc
mov
push
mov
in
xorb
xchg
jne
data16
fmull
or
out
jnp
rolb
insl
arpl
enter
xor
aam
loope
jnp
cmp
push
dec
jl
or
xchg
scas
add
in
and
daa
jmp
mov
in
inc
add
roll
push
dec
shll
pop
iret
test
and
shrd
movsl
mov
add
lret
movsb
cmpsb
mov
fidivrl
jno
add
xacquire
pop
pusha
cmp
jo
cmc
cmp
shr
insl
and
pop
xchg
pop
data16
sarb
sbb
fincstp
jecxz
test
add
cs
adc
lds
scas
dec
mov
or
stc
mov
jg
xor
xor
dec
adcl
mov
xchg
imul
aam
aaa
cli
outsb
xchg
out
stc
adc
jg
dec
lock
stos
lret
out
pop
sub
into
in
js
push
lock
mov
lods
add
fcos
addr16
aaa
dec
sub
movsb
icebp
mov
push
xor
pushf
bound
cmc
sbb
aas
xchg
xorl
ss
loopne
xchg
add
fldt
fbstp
out
cmpsl
push
test
pop
inc
mov
dec
and
daa
or
sbb
scas
flds
or
mov
adc
or
adcl
repz
mov
xor
lret
in
cmp
ret
outsb
gs
jecxz
fistpl
cmc
or
sub
cmp
or
xor
std
and
jbe
xchg
lods
cmpl
jae
out
push
orb
lods
sarb
jno
sahf
shll
icebp
xchg
add
dec
mov
xor
fcompl
sahf
lods
leave
mov
cmp
mov
mov
dec
dec
xchg
xchg
jo
and
in
test
push
test
aaa
scas
cmp
cmc
sub
add
fstpl
and
aas
push
mov
mov
mov
adcb
inc
nop
mov
movsl
jle
loop
push
and
iret
andl
dec
icebp
push
enter
sbb
scas
leave
test
jle
out
in
int3
or
ss
push
pop
pop
jmp
ljmp
nop
mov
inc
mov
movsb
xchg
fistpl
add
push
movsb
fdivr
sub
lock
fcoml
pop
or
jp
out
jbe
xchg
mov
jbe
and
scas
pop
outsb
cltd
ffree
stos
cltd
je
xor
lret
fs
mov
out
clc
push
sbb
into
push
push
lea
push
cmc
pusha
ss
sarb
xchg
dec
mov
jge
frstor
ss
pop
jo
stc
jbe
lret
ja
je
cmp
aam
inc
insl
mov
mov
cld
mov
pop
mov
stc
or
pop
ret
flds
shll
adc
hlt
push
sbb
call
insb
dec
loop
fs
or
mov
mov
shlb
xchg
add
mov
lcall
lods
outsl
xlat
test
cmpsl
loop
stos
dec
sub
ror
and
nop
sahf
adcl
imul
cmovge
je
adc
mov
or
push
in
jnp
int
cltd
lods
or
dec
mov
and
mov
adc
std
cmp
dec
mov
mov
icebp
scas
data16
mov
xor
and
out
jp
xorb
mov
and
scas
push
sarl
sbb
push
rcll
adc
lods
sbb
xor
xchg
or
and
popf
mov
ror
imul
testb
and
mov
hlt
pop
inc
push
dec
dec
stos
push
movsb
cmp
or
mov
pop
mov
or
cs
add
testb
dec
in
inc
out
roll
push
xchg
popf
lret
std
orl
test
cld
xlat
xlat
out
lock
js
push
xchg
int3
shrb
leave
leave
mov
push
shl
add
xchg
out
pop
add
push
adc
test
enter
out
xchg
mov
jne
or
sub
mov
shrb
rclb
stos
xor
adc
pop
fdivs
mov
cmp
mov
mov
sahf
cld
rorl
push
adc
and
inc
pusha
pusha
jae
cmp
mov
sbb
std
mov
xchg
stos
outsb
jl
movsl
add
push
or
daa
fwait
pop
mov
jnp
push
dec
mov
mov
mov
out
cmp
aaa
addr16
sub
lods
jge
in
scas
test
loope
pop
push
mov
fdiv
fiadds
loop
xchg
movsb
lock
push
cmc
cmc
inc
pop
repnz
jp
popf
inc
mov
cmpsb
or
lods
jo
mov
cld
and
out
loope
adc
lahf
dec
test
xchg
in
mov
mov
xchg
add
xchg
mov
xor
sbbb
pop
inc
mov
outsl
inc
cmp
mov
jae
icebp
pop
add
ljmp
mov
dec
inc
in
ret
int3
push
cmp
mov
outsl
xchg
popf
push
jl
aaa
xchg
jbe
add
jg
inc
shlb
jg
mov
fildl
push
pop
loop
loope
rolb
xor
hlt
insl
inc
loope
add
in
mov
and
adc
jle
jmp
insb
jg
aaa
mov
insl
push
lock
rcrb
lret
lret
mov
push
mov
push
sub
push
fwait
addr16
insb
les
add
cli
or
pop
out
cmpb
and
mov
jo
inc
arpl
add
in
adc
push
rcrl
aas
ljmp
ror
adc
repnz
movsb
cmp
sbbb
js
lret
xchg
mov
pop
pop
shlb
mov
ret
dec
repz
imulb
in
bnd
lds
jnp
cmp
sbb
xor
inc
insb
test
inc
inc
sub
cmp
in
sbb
cmpsl
insb
and
stos
cmp
sahf
mov
add
add
pusha
pop
pusha
mov
ljmp
inc
push
pop
add
inc
xchg
sbb
enter
fstpl
jae
push
daa
xchg
xchg
aad
dec
and
add
fsubs
xchg
lahf
mov
mov
inc
ja
sbb
sub
iret
punpckldq
stos
inc
inc
imul
add
mov
leave
sbb
push
rcll
jo
cld
sti
fwait
xchg
jno
mov
pop
mov
push
lea
repz
mov
imul
mov
xchg
xchg
shl
cmp
inc
xchg
mov
xor
adc
xchg
and
jmp
es
xor
or
add
cmp
repnz
bound
jle
enter
mov
fidivrs
jnp
rorb
adc
lret
push
cmp
dec
cltd
sub
adc
leave
mov
push
in
jae
and
mov
les
mov
sub
scas
mov
xchg
push
cmp
push
adc
dec
fnstenv
or
lcall
add
std
fcoml
test
fiaddl
popa
jg
notb
push
mov
sbb
ficoml
jp
les
fisubrl
jle
or
mov
bound
into
xor
mov
pop
movsl
in
pop
or
ljmp
fildl
xchg
orl
scas
in
jb
xchg
and
ljmp
jl
jecxz
int3
xchg
adc
mov
mov
or
and
sbb
adc
cli
mov
popa
adc
shlb
push
frstor
fcoms
adc
jae
inc
dec
adcb
or
orb
in
inc
mov
popa
mov
sahf
mov
mov
and
jl
test
sub
push
dec
nop
inc
add
stc
xchg
sti
jo
je
mov
scas
ret
pop
out
ljmp
or
adc
mov
jnp
mov
pushf
push
pop
in
and
add
xchg
fcompl
in
cld
adc
push
pop
adc
mov
notl
dec
lahf
cmp
shlb
or
pop
loop
daa
push
mov
cwtl
and
shl
mov
pop
push
test
inc
aad
stos
repnz
xor
movsb
xor
arpl
jb
mov
ss
icebp
out
jg
call
shlb
dec
adc
sbb
mov
push
xchg
jb
mov
add
cmp
fildll
push
inc
fildll
mov
cmp
call
jecxz
add
rcrl
repz
test
movl
stc
xor
or
lock
and
xor
adc
xchg
ret
insb
loop
xchg
es
insb
rcrb
movsl
in
hlt
pop
or
fwait
xchg
notb
stos
es
and
fcoms
fldenv
sub
pop
ds
insb
stos
pop
out
loope
les
movsl
or
or
xchg
push
jecxz
das
repnz
mov
sub
push
mov
mov
insb
xchg
jb
popa
fsubs
fmulp
pop
ja
js
mov
hlt
in
sub
push
jmp
int
or
push
or
and
xor
jmp
scas
lea
inc
cmp
and
jp
lret
arpl
int
add
inc
fidivrs
and
push
pop
pop
jae
push
xchg
and
or
adc
lret
shll
mov
test
fnstsw
cwtl
push
add
movsl
mov
movsl
fdivrs
jb
or
std
inc
loop
xchg
sbb
jnp
imulb
test
mov
jno
movsb
and
or
xor
pop
int
shr
lock
xchg
inc
push
sahf
cld
fcoms
lods
cmp
cmp
push
jmp
sbb
mov
lcall
loop
and
mov
sbb
cwtl
cli
jp
dec
sub
and
in
cmpsb
lods
pop
ret
addr16
cltd
and
cli
dec
mov
sbb
jnp
fdivl
cmp
xchg
sbb
aas
cli
cmc
lcall
dec
add
mov
test
ss
ss
push
adc
mov
cs
xchg
xor
lahf
lods
stos
lods
push
loope
imul
inc
sub
call
scas
cmpsb
sbb
stc
xor
inc
fcomps
mov
push
negl
add
sbb
out
push
mov
mov
fstpt
movsl
outsb
sbb
or
cmpsb
cmp
mov
xchg
in
mov
mov
xor
push
jbe
mov
aam
mov
outsl
push
and
repnz
out
mulb
mov
std
cmc
ljmp
mov
movsl
loopne
push
outsb
ret
dec
addb
nop
adc
test
pop
jne
loopne
pop
and
pop
insl
mov
test
in
mov
inc
pop
pop
js
xorl
ss
lods
into
add
cwtl
adc
push
mov
sub
adc
pop
ja
scas
in
xor
pop
lock
fcom
push
mulb
ja
inc
dec
clc
and
aad
or
dec
cmp
ds
int
pop
sub
sbb
into
cmp
loope
push
jae
fwait
or
mov
pop
or
adc
and
les
orb
xor
sbb
sub
push
sbb
lcall
mov
sub
fwait
stc
sub
mov
push
ja
sub
int
pop
or
and
fstl
dec
pop
mov
mov
fadd
xor
push
xchg
add
cmp
pop
andb
fidivrl
sbb
inc
dec
roll
aam
pop
out
or
lret
pop
push
imul
dec
and
cmp
xchg
dec
nop
fwait
insl
mov
enter
sbb
add
clc
and
push
xor
mov
dec
out
sbb
je
xor
rolb
mov
jb
xchg
sub
std
push
xchg
adc
stc
mov
sahf
cmp
cmpsb
mov
dec
or
pop
stos
mov
shll
test
rcrb
mov
xchg
ds
xor
xor
lds
jae
je
inc
aas
dec
inc
leave
add
mov
pushf
gs
popf
negl
addr16
lcall
jo
jnp
out
push
imul
inc
push
jae
sbb
push
leave
ss
jg
push
adc
push
inc
dec
jno
add
jle
pop
push
mov
shlb
jmp
add
sbb
xchg
imull
lods
stos
fstl
push
or
push
fwait
mov
or
xchg
in
mov
clc
cmc
aaa
pop
in
and
jbe
scas
out
cld
mov
or
mov
outsb
pop
int
add
pop
div
lret
cld
inc
xchg
cmpsb
imul
inc
cmp
jl
sti
in
cmp
dec
xor
sbb
fists
inc
or
in
pop
cs
cli
int3
and
xchg
aam
lock
movsl
ds
subb
repz
xchg
push
or
stos
xlat
test
faddl
testl
icebp
nop
out
add
cmp
push
pop
lahf
sub
add
add
pop
inc
inc
in
pushf
outsb
inc
loopne
sub
jne
xchg
int3
add
repz
in
pop
ds
rcll
cmp
jg
andl
xchg
popa
add
lods
xchg
orl
cmp
loopw
pop
sbb
add
or
incb
xchg
dec
push
test
or
data16
rorb
pop
sbb
jmp
ret
inc
adc
mov
leave
rep
xchg
add
in
xchg
sbb
sub
scas
ljmp
aaa
add
sbb
imul
paddb
sbb
jns
dec
loopne
jo
hlt
cld
cld
cli
gs
xor
outsb
mov
loop
or
xchg
mov
iret
mov
sbb
daa
sbbb
push
lret
ret
xchg
xlat
cmp
or
cmp
jge
xchg
xchg
jo
fidivl
sub
jecxz
mov
stos
jns
lcall
mov
movsb
or
arpl
sbb
andl
enter
cltd
or
pop
xchg
sub
inc
lds
out
es
dec
sub
sarl
ret
xchg
dec
inc
pop
jge
imul
mov
dec
sub
jae
ret
loope
mov
movsl
mov
sub
adc
lds
arpl
xor
fwait
lea
or
and
int3
dec
dec
sub
inc
push
xchg
mov
mov
mov
or
jbe
into
test
mov
ficompl
mov
xchg
inc
sub
fs
jo
fisttpl
jmp
mov
shrl
pushf
sub
pushf
stos
mov
push
pusha
and
pop
xchg
nop
or
pop
jno
ficompl
imul
mov
cmpsb
and
mov
mov
xchg
and
fldcw
dec
stos
fisttpl
sbb
aam
imul
push
mov
shlb
sbb
sbb
test
push
push
lds
stos
fwait
add
lcall
and
loopne
mov
jl
pop
rorb
outsb
lcall
mov
jp
sbb
loopne
jne
mov
in
adc
repz
inc
jnp
jb
mov
mov
movsb
push
mov
fsubrs
mov
mov
cld
fucom
stc
push
push
ret
outsl
aam
add
fsubrl
push
xor
xor
les
dec
out
sub
cmp
jb
push
test
es
mov
xchg
fsubl
int3
xchg
pop
pushf
push
lcall
nop
and
add
add
add
cmp
ret
mull
fwait
sbb
call
mov
pop
subb
jne
int
adc
int3
test
fucomip
imul
adcb
scas
subb
lds
push
rcl
xor
pusha
sub
xchg
sbb
adc
mov
xlat
dec
outsb
pop
add
sbb
inc
clc
dec
pop
pop
or
inc
addr16
movsb
inc
dec
js
mov
in
lret
imul
add
mov
jo
cmpsb
adc
push
xlat
enter
jb
ret
pop
xlat
hlt
int
adc
push
push
lahf
mov
cmp
inc
dec
jne
and
mov
add
cmpl
or
jb
testl
incl
lret
mov
aam
mov
cli
mov
mov
jle
sbb
push
out
out
in
bound
push
nop
inc
ljmp
leave
jbe
in
add
std
adc
movsl
sub
jo
or
mov
fildll
ds
pop
add
addr16
sub
sarl
mov
inc
jge
adc
or
rcll
mov
push
jge
mov
rcll
imul
mov
pop
sbb
or
pop
iret
jno
jae
adc
into
cmp
xor
cmc
and
push
dec
inc
ss
adc
xchg
and
ss
xchg
into
cmpsb
pop
imul
adc
imul
das
or
stos
cmc
dec
or
loopne
addr16
cmpsl
loopne,pt
push
pop
mov
pop
fidivs
dec
imul
jns
mov
mov
stos
mov
aas
mov
lods
sub
xchg
inc
mov
roll
das
fimuls
xor
jnp
xchg
in
out
jp
cmp
cltd
cmp
xor
xchg
pop
imul
jle
fmull
es
or
ret
pop
mov
mov
pop
add
mov
dec
cs
pushf
fstpl
push
enter
adc
cmp
test
xorb
mov
push
fisttpl
xchg
adc
dec
arpl
mov
ja
sub
enter
outsb
outsb
imul
inc
xlat
loop
sub
mov
pop
popf
mov
xor
and
add
idivl
jae,pn
lea
test
cmpsb
sbb
cmc
or
stc
les
cmp
jne
xchg
popf
les
shl
mov
jb
xchg
leave
pop
sti
push
std
mov
aad
jb
jecxz
roll
ficoml
sub
jecxz
insl
andl
or
sbb
or
cmpsl
mov
sub
cmp
lcall
movsb
xor
push
jp
jmp
mov
push
dec
cli
xor
push
ror
cmp
jne
mov
xor
adc
jg
fisttpl
in
call
dec
scas
or
and
mov
sbb
mov
hlt
insb
outsb
fmul
imul
xorb
sub
enter
mov
xchg
adc
notl
mov
hlt
push
xchg
test
cmc
js
testb
xor
dec
sbbb
dec
out
enter
adc
out
std
add
sub
sbb
iret
ficoms
hlt
fcomps
dec
mov
pop
sub
jne
dec
jae
pusha
push
add
add
adc
loop
imul
and
add
jno
pop
sbb
mov
inc
and
push
jmp
leave
push
loopne
pop
es
aad
cmc
xlat
andb
mov
cmp
into
xchg
jnp
je
fcmovbe
outsb
cmc
mov
roll
fmulp
scas
stos
dec
xchg
push
lea
jmp
orl
fnop
sbb
jne
sarl
hlt
out
pop
movsb
lds
push
gs
sbb
imul
jmp
insb
pop
adc
dec
push
xor
negb
dec
jae
cmp
xchg
stc
push
jge
push
xchg
push
pop
or
stc
daa
push
xlat
xor
pop
or
or
out
inc
mov
pop
arpl
pop
sub
pop
or
sahf
outsb
cmpl
pop
out
popf
push
push
pop
sbb
cwtl
cmp
call
jp
inc
popa
sti
mov
push
outsb
cmc
mov
mul
inc
shrb
in
gs
jg
pop
mov
lds
repnz
arpl
cwtl
and
stos
jp
ret
or
xchg
or
aaa
jae
ss
insl
addr16
pop
or
cli
add
icebp
fdivl
pop
enter
push
mov
aaa
popl
mov
push
pop
sbb
inc
fcoml
and
xor
iret
cmpsb
mov
inc
and
ret
es
xor
arpl
enter
mov
aas
pop
cmc
ds
scas
test
jo
je
test
out
shlb
pop
leave
scas
xchg
xchg
stos
pushf
in
cmc
scas
aad
push
aam
mov
push
lret
loop
mov
adc
clc
add
or
push
jecxz
mov
pop
sub
inc
push
mov
jb
ds
hlt
lock
cltd
and
pop
in
pop
lret
xchg
pop
mov
pushf
push
dec
dec
pop
jp
das
adc
mov
shrl
jle
testb
mov
insb
add
jge
ds
sbb
push
cltd
std
xlat
aam
cmp
jae
pop
pop
sahf
dec
fwait
test
add
stos
shlb
test
aam
push
int3
ja
scas
xor
aaa
cmp
adc
dec
jecxz
xchg
enter
test
cmp
repz
inc
sub
fnstsw
jns
iret
mov
cmp
cs
ljmp
pushf
xor
xchg
and
add
popa
push
cmc
push
jl
sbb
inc
out
daa
push
pop
cmc
jle
test
push
aaa
mov
test
and
sub
add
mov
xor
stc
mov
or
pop
scas
sti
add
or
push
icebp
cmc
xchg
int
pop
repz
cmpsl
mov
notl
push
mov
movsl
cmc
stos
mov
jo
sti
cwtl
leave
xchg
mov
mov
cltd
sbb
jge
push
jmp
lcall
push
lods
daa
outsl
xor
sbb
cmp
jae
loop
xor
jmp
mov
rcl
xchg
xchg
sbb
shlb
cmpsl
in
cmpsb
push
imul
push
aam
in
jnp
gs
rol
xchg
cmp
ja
xor
aas
arpl
ljmp
iret
in
stc
les
push
push
inc
je
jmp
pop
and
mov
mov
push
xchg
fmul
mov
fsubrs
aas
fcmovb
lea
push
xor
xor
or
rorb
adc
pop
aam
fstpt
jg
gs
es
jle
lods
mov
add
cs
xor
cmp
cltd
add
rcrl
lret
push
int3
sub
xchg
dec
pop
adc
add
or
inc
sub
sub
pop
hlt
lret
outsb
sti
pop
leave
test
cltd
push
imul
mov
mov
mov
add
mov
adc
pop
mov
pop
and
xchg
push
jp
test
into
inc
xchg
dec
aaa
cwtl
mov
xor
cmp
shrl
mov
sbb
cltd
sbb
outsl
fmuls
popa
jae
cmc
bound
int3
xlat
or
orl
sbb
dec
push
mov
aad
inc
imul
lcall
lods
out
inc
xchg
fdivrl
add
sbb
adc
and
ss
cwtl
sub
add
or
push
push
mov
push
hlt
xlat
cld
lcall
sub
xchg
hlt
fdivrs
adc
add
lret
sti
lods
pop
inc
pop
in
sub
pusha
outsb
dec
sbb
jge
scas
cs
hlt
cmp
jmp
mov
mov
imul
jne
test
xor
lahf
dec
out
push
fistpll
cltd
jns
cmc
inc
push
out
mov
cmp
inc
xor
and
rorl
stc
fwait
lcall
and
push
stos
movsl
sub
mov
aad
jns
stc
xchg
dec
pop
push
sub
push
int
cmp
sub
out
mov
jno
cmp
jo
inc
jge
iret
test
jecxz
scas
jae
shrl
insl
mov
xor
repz
int3
mov
lods
pop
sbb
and
inc
fsts
cmp
popf
inc
and
out
push
stos
push
lcall
dec
mov
sub
int3
repz
ds
imul
inc
mov
or
and
fndisi(8087
adc
push
push
xchg
pop
jp
test
mov
insl
hlt
ret
xor
pop
call
lahf
mov
push
and
ja
data16
nop
sub
push
lahf
int
inc
lcall
bound
xchg
add
pop
fdiv
out
imul
fadds
lds
je
sub
mov
mov
ds
push
mov
insl
in
and
cmp
dec
nop
pop
ret
adc
push
jmp
shrl
lcall
xor
xor
cmc
jo
in
and
xlat
inc
js
pop
and
mov
mov
mov
cs
pop
add
pop
in
nop
xlat
mov
fwait
xchg
pushf
mov
pop
fs
mov
lcall
out
daa
or
and
push
loop
popf
lods
pop
stc
add
jp
aad
test
mov
std
cmp
and
dec
daa
and
lds
mov
push
push
stc
outsb
push
and
xor
jno
add
mov
stos
mov
pop
mov
cmp
lock
push
sarb
xlat
xchg
cli
inc
cmp
and
jno
adc
fs
mov
jbe
and
jp
xchg
jle
push
push
push
mov
out
jmp
outsb
xor
mov
mov
out
fbstp
pop
and
sarb
ret
pop
not
xlat
pop
mov
call
lods
and
mov
mov
arpl
lcall
and
pop
mov
mov
sbb
pop
and
js
dec
std
int3
insl
insl
jbe
push
ret
je
movsl
and
mov
fidivrs
out
clc
enter
out
jecxz
hlt
sbb
mov
mov
mov
adc
push
sahf
xchg
arpl
shlb
pop
cmpl
mulb
pop
das
dec
ret
mov
in
sub
sbb
mov
push
pop
test
testl
cmc
fimull
lods
jnp
in
fwait
stc
jp
adc
out
mov
dec
or
push
pop
nop
xchg
mov
mov
test
mov
mov
gs
mov
lret
shl
in
sti
addl
aad
popf
movsl
mov
in
out
adc
xchg
mov
sub
in
push
arpl
lea
push
push
sbb
jmp
ja
mov
add
jg
pop
jmp
jg
xor
add
fbstp
xor
jecxz
into
loopne
add
test
stos
xor
stos
xchg
sub
ficomps
inc
xlat
adc
push
and
push
shll
sbbl
cmp
lds
bound
xchg
xchg
ja
mov
adc
xchg
pop
dec
roll
inc
add
outsb
push
xchg
mov
std
insb
les
movsb
jae
in
push
insb
cmc
aas
jne
fcompl
inc
adc
cmp
pop
cmp
push
sub
out
jmp
mov
push
or
jg
ficomps
fs
pop
or
xchg
imul
loopne
fwait
test
mov
and
rcll
adc
push
insl
lahf
pop
lods
mov
pop
outsb
arpl
fsubrl
pop
add
aaa
add
or
jp
enter
dec
add
xor
cmp
dec
jo
loop
and
mov
rcrb
push
jg
push
outsl
pop
mulb
fs
test
pop
pop
std
fadd
fldl
mov
sub
cmp
lret
push
adc
dec
nop
jecxz
lock
mov
and
push
arpl
mov
sub
jbe
push
add
jns
push
inc
arpl
xchg
mov
push
outsb
mov
lea
js
jp
out
xchg
xchg
sbb
loopne
sub
cmp
jmp
pop
add
icebp
rclb
adc
push
xchg
fstp
lods
adc
mov
mov
add
fistps
mov
test
or
xor
pop
mov
push
clc
lahf
mov
xlat
pop
hlt
jo
adc
ret
sbb
sbb
mov
mov
cmp
clc
add
lock
jmp
aam
mov
loope
icebp
cltd
adc
sub
or
pop
push
mov
in
jmp
push
out
enter
mov
movsb
sahf
xchg
sbb
lock
push
test
cli
int3
jl
xor
jo
pop
ds
dec
push
in
lock
xchg
jno
inc
xchg
sti
rcrl
dec
mov
hlt
je
mov
mov
add
adc
mov
xchg
iret
fimull
inc
and
imul
adcb
inc
insb
xchg
inc
loopne
pop
lea
xor
cmp
scas
out
cmc
pop
mov
cli
das
adc
stc
pop
jmp
mov
sub
cwtl
clc
loop
sbb
shr
mov
stc
movsl
ficompl
pop
idiv
fmuls
insb
push
pop
xchg
scas
push
jo
cmp
popf
fs
mov
arpl
call
pushf
cli
push
rolb
sbb
adc
in
sub
cmpsb
adc
xchg
xor
shlb
cli
jmp
in
loope
xchg
mov
pop
push
fsubl
pop
fiadds
dec
sbb
lea
cmp
xchg
add
scas
adc
aad
movsb
jnp
fst
cwtl
push
out
and
fisubrl
lods
mov
push
jp
dec
es
inc
mov
push
push
cmp
pop
pop
imul
nop
xor
sbb
mov
pop
jmp
cmp
imul
pop
roll
pop
jbe
rorl
leave
pop
jnp
or
cmp
mov
inc
enter
data16
mov
cld
inc
and
and
adc
notl
sub
ljmp
or
mov
loop
flds
lret
push
pop
sub
xor
jae
mov
mov
adc
push
xlat
mov
dec
in
shrl
test
jo
int
cltd
enter
dec
push
insl
cmc
add
call
jecxz
fdivl
dec
dec
sgdtl
arpl
mov
xchg
dec
mov
add
sub
push
bound
xor
jp
loop
jne
movsb
jo
movsb
lret
in
inc
rcl
mov
xor
int3
pop
or
mov
cmc
mov
testb
andl
add
andl
cld
imul
call
ljmp
xchg
jb
out
pop
mov
cmp
adc
mov
mov
dec
jnp
xchg
lods
push
in
fsubrp
or
mov
pop
shr
sub
pop
out
test
push
mov
add
inc
mov
loop
push
sbb
pop
mov
xchg
push
lods
jb
insb
xor
cmpsb
sbbb
xor
mov
scas
insb
xchg
mov
fsubrs
adcl
cmp
mov
fnsave
adc
push
jecxz
pop
hlt
jae
ja
int3
mov
mov
jne
push
iret
inc
cmp
or
cmc
mov
fmuls
shll
test
and
mov
pusha
sbb
inc
or
mov
mov
repz
loop
sarb
pop
aas
jl
sbb
lds
scas
push
mov
test
pop
es
cmp
repnz
dec
mov
mov
mov
pushf
int
insb
mov
rorl
ret
mov
jmp
pop
stc
adc
jb
dec
aaa
or
roll
shlb
xchg
push
fidivrl
push
jl
mov
fisttps
sub
loope
dec
xlat
adc
sub
cli
jge
cmc
push
js
fcompp
push
jne
sbb
stc
xor
bnd
stos
jb
and
and
adc
loopne
mov
push
out
mov
jmp
scas
jle
das
xchg
xchg
idivl
dec
loope
and
xchg
mov
pop
xor
sbb
push
fdivrl
cwtl
icebp
xor
push
shrb
inc
jmp
std
pusha
sahf
pop
fcmovnu
lret
dec
shll
mov
out
pop
jbe
mov
sbb
arpl
jne
pusha
aaa
add
addb
adc
inc
out
inc
notb
dec
out
faddl
add
lret
ljmp
hlt
int3
and
push
jnp
adcl
insb
xchg
xorb
xchg
stc
arpl
jecxz
in
mov
ret
insl
sub
pop
popf
xor
mov
ljmp
cmp
cmpsb
test
nop
fidivl
mov
pop
dec
aaa
arpl
cmpsl
mov
mov
bound
in
push
pop
fucomi
cmp
mov
scas
sbb
mov
and
adc
jo
mov
and
sahf
mov
imul
cs
ret
ljmp
ja
pop
pushf
mov
jnp
shlb
ja
imulb
mov
add
xchg
adcb
pop
leave
push
pxor
push
jae
repnz
or
add
cmpsb
je
dec
fcoms
mov
lods
movsl
pusha
xchg
sub
cmp
pop
popf
cmp
fs
adc
pop
orl
lds
rcrb
out
lods
push
push
pop
ja
call
xor
mov
jp,pn
cld
pusha
cmp
jp
mov
sbb
xchg
jle
mov
add
cmp
cmp
leave
fwait
pop
pop
in
mov
jecxz
bound
push
push
jp
rep
cmp
lock
push
dec
loope
subb
xchg
cmp
not
inc
mov
push
push
mov
sarb
mov
fs
jbe
xor
pusha
dec
xlat
mov
loop
mov
mov
iret
stos
and
lea
in
and
aas
push
jb
sahf
arpl
add
sub
add
xlat
cltd
and
cltd
cmp
mov
cmp
inc
aas
adc
adc
mov
punpcklbw
aam
mov
rcrb
push
pop
das
mov
adc
movsb
out
sbb
push
fs
lret
popa
fcomi
mov
data16
hlt
callw
adc
push
inc
movsl
fildll
insb
int
ficoms
adc
xchg
lcall
mov
sub
xor
sub
xchg
add
mov
rcl
stos
push
mov
jp
ret
testl
lds
cltd
add
enter
addr16
mov
fwait
pop
loope
pop
or
sub
lret
push
rclb
das
lcall
mov
adc
push
pushf
add
aad
gs
adc
fcomps
mov
divb
fnstenv
andb
test
jno
mov
jno
inc
not
mov
mov
subb
sahf
jl
push
and
jnp
mov
jno
sbb
adc
sbb
ja
mov
jno
ficompl
mov
xchg
movsl
jp
push
imul
push
fistpll
pushf
mov
inc
cmpsl
jmp
pushf
jge
incb
inc
enter
adc
js
cmp
and
add
into
out
int
sub
scas
scas
sub
push
dec
ss
pop
cmc
dec
pop
mov
mov
fcoml
rcrb
jnp
outsl
add
test
nop
mov
adc
mov
mov
icebp
popf
ret
cmp
call
repz
cmp
shrb
sti
cmp
xchg
cltd
pop
fdiv
ljmp
cmc
popa
fisttpll
pop
fcompl
outsl
pop
gs
and
sarl
jo
fstpl
shll
dec
gs
fdivrl
int3
adcl
xor
cmpsb
pop
pop
push
jl
fcmovb
cli
xchg
ret
add
sub
testl
adc
fsubl
fst
nop
movsl
leave
into
fidivrl
fcoms
std
data16
ljmp
aad
rcrl
pop
lock
outsb
mov
testl
flds
jns
fsts
js
int
push
aas
mov
add
jg
test
xlat
out
and
sub
aas
mov
lods
aad
aas
insb
clc
or
lods
lcall
lret
adc
cld
call
jg
xchg
icebp
cmc
call
scas
es
shrl
jno
jnp
sub
mov
paddq
mov
or
mov
or
jnp
jne
adc
cmp
sarb
movsb
adcl
dec
mov
ja
mov
pushf
dec
fnsave
push
dec
mov
fcomps
push
fstpl
sbbl
mov
fisubrl
movntq
cmpsb
sub
data16
imul
pop
jle
xchg
icebp
cmp
in
fldl
call
xor
nop
xchg
pop
lea
push
pop
movsb
xor
insb
pop
push
icebp
mov
mov
dec
add
loope
adc
int3
lret
sti
sbb
sub
jne
cld
adc
mov
cmpsb
cmp
lret
std
push
ja
imul
cltd
jnp
jno
movl
sbb
and
daa
outsl
push
cld
jno
push
or
add
cmp
fstpl
or
pop
dec
cmpsl
ja
xor
and
ja
js
lret
mov
xlat
pop
jns
je
mov
call
sub
aam
pusha
in
mov
loop
mov
mov
jge
in
js
clc
stc
mov
xchg
daa
imul
sbb
fisttps
xor
or
dec
jge
add
outsb
mov
and
mov
enter
hlt
leave
scas
aad
add
xor
iret
sub
and
dec
jnp
mov
or
pop
ret
test
popf
add
cltd
or
mov
mov
add
mov
loope
data16
in
sti
xor
mov
jnp
xchg
test
jecxz
fldt
rcrl
jmp
pop
lcall
aaa
mov
sbb
push
cmp
in
adc
jns
enter
pop
rclb
sub
data16
scas
in
in
push
mov
fwait
add
adc
fadds
jmp
and
mov
mov
add
std
xchg
pop
dec
lods
mov
pusha
std
int3
dec
mov
lret
adc
add
dec
mov
mov
js
pop
inc
cmpsb
jnp
pop
inc
aaa
add
dec
xor
xchg
push
inc
ljmp
je
xchg
lcall
lahf
sbb
or
or
add
in
fldenv
sbb
rcl
jmp
cmpsb
cmp
xorl
rol
shrl
rcl
stos
stos
inc
sti
aam
out
iret
lcall
jnp
les
dec
xlat
pop
and
in
pop
dec
xor
sub
adc
jmp
xchg
insl
mov
fnstcw
and
inc
lock
lahf
add
cld
xor
lds
fisubrs
sbb
popa
test
mov
mov
fstpl
cli
movsl
aaa
adcl
adc
xchg
lods
pop
in
sbb
push
fs
scas
enter
inc
in
or
lea
inc
sbb
pop
call
aad
enter
mov
insb
sbb
aad
enter
xlat
out
scas
add
add
cmpsl
cmp
dec
cwtl
pop
sub
int3
lods
scas
mov
jl
inc
fcmovb
fnstenv
xchg
mov
ja
cmp
dec
dec
push
push
fsubl
adc
mov
xor
aaa
xor
xchg
test
ja
adc
stc
dec
cmp
stc
out
push
add
push
or
faddp
cltd
inc
test
jbe
test
mov
or
cltd
orl
scas
push
mov
fisttpll
mov
push
test
stc
imul
cmp
pop
jg
in
and
mov
pop
inc
subl
pop
adc
out
mov
fmul
fsubl
les
jns
into
test
mov
ljmp
scas
sahf
push
mov
addb
call
test
or
mov
jecxz
cmp
mul
cmp
sbb
mov
out
mov
fucomip
sbb
cli
dec
filds
cld
mov
sbb
call
addr16
adc
in
pop
sub
xor
test
pop
outsl
xchg
imul
cli
push
xchg
and
out
pushf
lcall
add
out
cmp
push
adc
lods
pop
jo
fbstp
add
cld
sti
lcall
push
lds
popl
pop
and
imul
inc
push
lods
xchg
cwtl
mov
xlat
lea
xchg
cmp
fstpt
xchg
push
loope
xchg
test
ja
popa
dec
mov
rcll
or
fdivrl
gs
or
ljmp
jle
out
adc
mov
cmp
loopne
enter
rcl
pop
repnz
out
sub
cmp
lret
xlat
fs
lea
inc
cmp
setb
ja
push
sar
aam
cmp
adcb
enter
lea
dec
xchg
jmp
pusha
dec
add
and
inc
in
mov
dec
cmp
push
into
pop
xchg
add
leave
inc
arpl
loope
push
cmpl
shlb
cmpsb
sbb
fimull
jge
and
dec
jno
adc
sbb
xchg
cltd
movsb
inc
int3
cmp
sbb
add
fldt
jge
pop
jge
xor
sbb
cs
dec
mov
test
add
or
pop
pop
mov
sbb
sub
push
jmp
sbb
jne
push
or
sub
mov
adc
jb
pop
jge
mov
lea
xchg
sub
pop
movsl
or
cld
mov
mov
jo
mov
stos
sub
ljmp
sub
int
jl
ret
mov
adcl
dec
repnz
jne
stos
cli
daa
pop
aas
jno
jne
in
popf
cmp
sbb
inc
popf
scas
xchg
push
mov
inc
pop
dec
out
pop
xchg
shlb
xor
jnp
decb
lods
mov
sbb
cltd
stos
ror
sbb
inc
fadd
add
xor
mov
into
cltd
pop
push
mov
push
adc
mov
inc
movsl
inc
nop
inc
push
ret
xchg
and
ljmp
ret
jg
push
jbe
push
jp
mov
mov
pop
sar
mov
jle
xchg
decl
xchg
fisttps
mov
shlb
out
jno
inc
xchg
jg
add
mov
xchg
or
xor
mov
ret
xchg
or
lahf
adc
addr16
nop
mov
and
aam
mov
sub
mov
mov
push
lcall
cs
je
insb
push
fsubs
dec
inc
add
ss
mov
jle
adc
leave
fcomps
pop
out
inc
lea
push
icebp
jne
lret
cs
and
cwtl
imul
mov
sbb
into
jle
xor
mov
cwtl
scas
cmp
and
pop
jb
popf
ret
pushf
jecxz
lcall
xchg
and
pushf
orb
push
jge
lods
andl
fs
mov
imul
mov
int3
test
cwtl
or
subl
iret
std
and
stos
shll
pop
push
cmp
mov
in
jecxz
jg
mov
sub
inc
test
pop
cmpsb
aam
sahf
movsl
xchg
adc
dec
lods
addr16
mov
inc
dec
idivl
xchg
or
fldt
add
adc
cmp
adc
mov
imul
ljmp
and
test
sub
cmc
daa
fidivs
shrl
adc
loopne
and
xchg
xchg
pop
repz
or
sub
push
std
test
aas
cltd
insb
leave
ss
push
mov
nop
imul
jnp
int3
mov
pop
data16
adcb
add
sub
xor
out
inc
push
dec
loop
inc
dec
sti
sbb
subb
fcmove
sub
sbb
sahf
and
das
push
mov
arpl
cmp
pushf
clc
mov
outsb
aam
and
xchg
lret
jl
inc
push
mov
xchg
iret
out
inc
push
cmp
mov
rolb
xor
std
xor
inc
sbb
inc
add
mov
add
cld
imul
lds
jnp
sub
aaa
inc
inc
xlat
mov
add
or
fistpl
push
push
std
push
fistl
and
popa
sub
dec
cmpsb
je
or
xlat
jns
int3
mov
mov
rolb
xchg
mov
push
add
adc
lahf
sbb
ret
xor
dec
or
xor
testb
stos
cmc
scas
rcrl
movl
je
pop
pop
push
pop
dec
lds
mov
dec
pop
rclb
enter
inc
adc
das
pop
mov
adcl
dec
in
xchg
imul
enter
push
es
mov
mov
cmp
aam
movsb
and
inc
sub
fnsave
mov
or
std
scas
sbb
hlt
int
xor
mov
pop
int
lods
xchg
pop
push
cmp
test
and
adc
xor
jne
cmpsb
stos
aaa
and
mov
jnp
enter
push
pop
pop
jo
fwait
bound
cmp
subb
popf
push
add
push
leave
movsl
stc
cmpsb
push
repz
push
imul
getsec
movsb
test
push
push
gs
cmpsb
in
lock
int
add
dec
fldt
mov
repnz
mov
push
pop
out
cltd
add
push
movsb
cmp
fcoms
pusha
movsb
addr16
mov
mov
adc
pop
nop
loop
pop
adc
push
xor
in
sahf
jns
xor
and
fistpll
mov
hlt
xchg
or
ret
adc
cmp
push
out
pop
mov
or
insl
stos
mov
cmp
and
or
mov
pop
mov
inc
mov
pusha
xchg
sub
int
xchg
inc
cltd
sbbl
rcrl
push
adc
inc
push
insb
repnz
loopne
xor
ljmp
adc
xchg
xchg
fdivl
lret
and
sarl
jns
inc
addb
adc
mov
loop
lret
mov
aas
subb
shlb
loop
sti
addr16
xchg
xor
insb
cmp
shrb
idivl
dec
addr16
out
xor
push
or
mov
xchg
fisubrl
pop
cmpsb
insb
xchg
pop
stos
xchg
inc
es
mov
jo
pushf
gs
scas
int3
push
test
fldlg2
cmp
ljmp
fnstsw
lds
insb
in
je
mov
rolb
jne
pusha
sti
cltd
in
lds
int
jns
inc
sbb
stc
dec
je
gs
movsl
mov
mov
aas
adc
rcl
sub
out
push
insb
push
push
cmpb
add
in
push
les
fbstp
repnz
sbb
pop
push
cmp
test
mov
sbb
stc
ljmp
add
icebp
adc
inc
test
inc
imul
lods
outsb
rolb
imul
inc
pcmpeqb
cmp
fwait
outsb
or
adc
sub
xor
ljmp
je
cmp
imul
out
or
mov
aaa
xor
push
inc
and
test
nop
push
mov
nop
xor
push
sub
js
pusha
add
pop
clc
add
lahf
loope,pn
add
mov
cli
pop
gs
movsl
into
adcl
xor
cli
pushf
or
test
lods
adc
lahf
xor
fs
imul
push
adc
mov
or
adc
sub
rcrb
in
jg
les
adc
enter
pop
adc
pop
lret
out
push
paddw
pop
loop
mov
daa
jmp
pop
jmp
and
mov
mov
mov
sbb
cmc
inc
in
mov
sbb
mov
leave
rcr
or
in
movsb
cmpsb
sub
ret
pop
or
or
out
dec
adc
push
push
mov
in
stos
cli
daa
jae
push
inc
pop
scas
inc
icebp
and
leave
adc
in
inc
hlt
inc
fisttpl
stos
cmp
add
inc
xor
mov
mov
push
add
lahf
cmp
call
cmpsb
bound
inc
int
mov
stc
sbb
nop
sbb
leave
lods
pop
xchg
xchg
cli
jmp
jb
lret
sbb
and
dec
icebp
mov
mov
ja
dec
in
fmull
or
lock
jle
jno
clc
mov
push
cli
pop
cmp
cmp
into
ja
jo
cltd
mov
mov
add
data16
mov
ret
sub
and
aas
xor
repnz
dec
mov
scas
adc
push
jnp
sbb
dec
rcr
daa
fildl
mov
sub
dec
cmp
leave
push
xor
mov
in
fisubrl
and
gs
push
scas
mov
movsb
inc
sub
push
ret
int
lods
jp
insb
fdivl
dec
orl
sahf
dec
fimull
cli
sbb
xor
imul
out
xor
fadd
cli
jmp
outsb
fldenv
xchg
and
or
mov
mov
test
push
cs
and
or
orb
ret
aas
ljmp
mov
rcrl
aad
dec
push
sbb
out
add
stos
mov
repz
cmc
fsts
lret
dec
add
or
and
sbbl
adc
imul
add
pop
push
push
push
je
xor
dec
nop
nop
enter
ljmp
in
sarl
lock
int3
xor
cmp
jno
dec
stos
pushf
sti
mov
mov
xorb
in
loop
test
push
adc
imul
xor
xorl
jmp
mov
pop
jg
in
pop
and
pop
mov
push
fsub
dec
and
mov
mov
out
push
pop
ljmp
adc
pop
ret
mov
add
adc
out
orl
aam
pop
mov
and
mov
xchg
lcall
sub
in
out
mov
fists
divb
fcoms
mov
cmc
in
pop
push
jmp
fistpl
testl
in
clc
inc
sub
ja
mov
pusha
insl
sbb
and
int3
dec
pushf
jl
in
sub
mov
sbb
insl
inc
popf
js
mov
add
pusha
rclb
ljmp
mov
mov
cmp
xchg
lds
shrb
push
imulb
into
inc
shrl
pop
fsubr
sub
in
xchg
iret
xor
inc
test
adc
jnp
lea
pop
sbb
add
xchg
ljmp
aaa
mov
lock
lods
and
lahf
mov
arpl
mov
sub
pop
fisttpll
std
pop
inc
xor
pushf
fcomps
sti
adc
icebp
lret
pop
call
cmp
stos
mov
mov
push
xchg
fs
sub
repz
repnz
push
addb
sbb
sub
pop
arpl
fildl
lahf
mov
xor
nop
inc
lds
cmpsb
mov
jb
test
mov
movsb
push
ds
cmp
inc
sbb
mov
or
loopne
add
mov
or
xchg
mov
mov
mov
cmp
js
fcomps
mov
add
and
ja
adc
cmpsl
dec
lret
and
into
add
dec
mov
jp
cmp
push
sbb
pop
les
outsl
aam
and
cmp
lds
or
mov
mov
mull
push
push
push
jg
cwtl
insl
jge
xchg
mov
fxtract
ds
negl
mov
gs
stc
jmp
arpl
stos
out
lcall
xor
xchg
mov
insl
mov
mull
jecxz
in
scas
test
push
jmp
cld
or
or
bound
mov
icebp
mov
lret
push
loopne
loopne
imul
sbb
xor
adc
pop
mov
jbe
jge
dec
or
add
push
and
inc
xor
adc
push
cli
loopne
sub
or
inc
mov
push
test
lahf
or
mov
xor
ljmp
ret
dec
mov
sahf
mov
mov
mov
cmp
pop
push
or
push
call
adc
call
mov
mov
iret
int3
mov
cmpsl
xchg
adc
cmpsl
mov
test
pop
mov
icebp
popa
inc
mov
or
jno
push
out
xchg
push
xor
sbbb
jno
fldenv
daa
out
fiadds
mov
jbe
jns
in
pop
xor
jmp
je
jns
shr
or
jns
jne
jae
add
stc
xor
or
ljmp
xchg
mov
fimuls
sub
scas
je
jns
cmp
fs
lcall
testl
dec
cmp
mov
mov
cltd
and
push
idivb
in
inc
ja
pusha
xchg
shlb
cmp
cmp
xchg
clc
mov
and
insl
inc
cmc
mov
add
insl
addr16
adc
imul
rcl
cli
inc
and
jb
xchg
mov
pop
out
and
mulb
outsb
mov
jo
fmul
xchg
mov
mov
popa
pop
bound
mov
pop
jge
and
fwait
adc
pop
icebp
xor
jb
mov
xorb
popf
cmp
xchg
push
mov
lret
ret
xor
loope
imul
dec
jg
and
stc
cmp
mov
mov
in
xchg
adc
push
addr16
jecxz
dec
jne
test
adc
js
ret
cmp
ds
inc
mov
pop
pop
cmp
jo
insb
adc
or
lcall
sbb
mov
in
mov
aad
mov
and
pushf
push
ja
in
jge
lea
jp
xlat
mov
sahf
int
sbb
or
movsl
or
addl
add
stos
jno
dec
movsb
out
mov
jmp
sahf
orb
pop
mulb
mov
stc
leave
mov
adc
mov
push
push
aad
xchg
jne
xchg
inc
iret
aas
xchg
cmp
je
mov
les
fs
inc
jno
popa
push
scas
add
outsb
iret
roll
into
fbld
or
push
dec
pop
jmp
negb
aaa
outsb
inc
add
sahf
mov
ja
test
cmp
xchg
or
mov
xchg
fistpl
jecxz
mov
dec
in
inc
outsb
jb
je
test
jns
daa
jle
adc
aad
jmp
push
loopne
push
or
orb
cltd
push
mov
repz
or
shl
outsl
cmp
insb
add
sbb
mov
cmpsl
push
cld
push
add
loopne
mov
inc
loopne
push
loop
call
push
hlt
inc
insl
jnp
and
cwtl
fistps
idivl
adcb
xor
sub
mov
push
sbb
pop
sbb
cmp
mov
sbb
inc
int
inc
es
mov
adc
sbb
sbb
ja
adc
push
inc
xchg
test
test
fidivrl
je
out
or
lods
mov
mov
and
gs
lock
loope
je
dec
adc
dec
shr
mov
mov
sahf
mov
cmp
je
dec
cmp
mulb
sbb
xchg
xchg
arpl
or
adc
pop
insb
adc
push
fcomp
sub
js
push
insl
xchg
out
loopne
insb
xor
and
mov
push
push
iret
inc
movsb
xor
mov
fdiv
mov
icebp
xchg
int3
rorl
testl
and
test
mov
mov
mov
sbb
add
out
mov
loopne
inc
push
xchg
stc
js
or
sbb
mov
inc
rclb
ret
rolb
push
or
xchg
mov
ds
mov
in
jl
and
and
mov
lret
cld
scas
dec
and
mov
sahf
repnz
cmp
std
xchg
shlb
or
pop
cmpsb
or
fsubs
push
dec
xchg
out
test
xchg
dec
mov
imul
add
lar
sub
outsl
enter
vorpd
rcrb
call
push
mov
es
or
push
cmp
popa
lea
cmpsl
adc
fucom
mov
lock
and
mov
xchg
inc
jnp
sub
decb
inc
popf
pop
jbe
jo
push
or
cld
addr16
jno
or
mov
sbb
xchg
mov
mov
stc
fistpll
mov
push
repnz
nop
mov
pop
push
push
dec
push
add
aaa
xchg
xor
mov
mov
lahf
pushw
addb
lcall
xor
sbb
mov
jl
cmp
ficoms
mov
into
sub
sti
repz
in
daa
nop
or
mov
dec
push
bound
sub
xchg
sub
and
ret
cmpsb
mov
add
inc
popf
mov
or
shrl
push
enter
test
shrb
adc
loopne
jle
adc
orb
out
mov
sub
test
sbbb
push
pop
data16
shl
fcmovnb
addr16
iret
decl
inc
das
lods
aad
pop
pusha
jno
cmp
mov
jmp
aam
fsubrs
push
jne
and
test
or
enter
sbb
push
dec
mov
in
aad
lods
sti
test
aas
fs
les
fbstp
cltd
xor
lods
pop
mov
xchg
mov
in
mov
mov
clc
mov
insb
xchg
mov
or
push
xchg
negl
inc
inc
ljmp
dec
inc
mov
aaa
stc
cmpsl
dec
xchg
movsb
stos
hlt
and
in
ret
and
fs
or
negb
pop
lods
jb
shll
add
jno
out
cmp
mov
pop
test
in
repnz
loop
jnp
push
into
lcall
inc
mov
mov
push
cmp
sahf
js
popf
adc
mov
xor
and
cwtl
jo
mov
push
aaa
stos
into
in
rcrb
int3
push
xchg
daa
xchg
push
push
popa
mov
xchg
loopne
pop
mov
xor
push
stos
stc
mov
mov
sub
out
push
mov
pop
std
or
xchg
add
dec
loopne
ret
cmp
nop
test
mov
push
sub
adc
mov
popf
mov
adc
jns
push
fldenv
jle
mov
inc
add
mov
fcmovu
mov
push
cmpsb
mov
pop
dec
insl
sbb
xor
lret
xchg
dec
cmp
mov
jp
daa
jne
je
lods
test
add
sub
cmp
add
or
cmpsb
jge
or
fwait
xchg
mov
shrb
sbb
push
sub
and
mov
pop
dec
mov
cmc
inc
pop
stos
subl
mov
cmp
and
inc
in
outsb
decb
push
insb
loopne
enter
leave
cmp
mov
rcr
fs
leave
sbb
push
mov
inc
lea
xchg
pop
testb
jne
mov
mov
xchg
ljmp
repz
imul
push
xor
mov
orl
testb
jge
mov
mov
addl
es
or
movsl
loope
sub
sub
xor
in
testl
mov
into
mov
mov
adc
mov
mov
cmp
cli
push
std
in
int3
leave
cmpsb
cwtl
je
inc
into
imul
ds
iret
add
mov
sahf
cmp
pop
fmull
sbb
dec
pop
andb
pop
das
push
jg
cmpsb
sub
xor
or
adc
dec
jecxz
jb
cli
mov
std
mov
mov
jbe
mov
xlat
mov
pop
xlat
imul
cmp
les
xchg
adc
fisubrs
jmp
pop
push
pop
lret
and
add
imul
pop
jecxz
mov
push
inc
iret
xchg
insb
test
out
inc
sbb
mov
xchg
rclb
mov
cmc
les
mov
xor
push
xor
ret
paddusw
aad
sub
dec
js
push
jecxz
xchg
lcall
mov
adc
mov
dec
int3
mov
repnz
pop
and
mov
adc
daa
test
dec
in
cld
aam
ja
pushf
hlt
xor
push
sub
xchg
pop
xchg
aad
or
cwtl
xor
ret
cmp
xchg
fstps
test
dec
ret
pop
ljmp
sbb
mov
or
inc
xor
push
push
sub
mov
sub
test
inc
or
or
pop
out
arpl
mov
xor
add
fisubl
ds
or
in
shrl
dec
inc
cmp
xor
xor
jge
or
cmc
or
jno
ds
adc
pop
cmpl
lret
lds
stos
and
in
daa
jae
rorl
push
cltd
addr16
push
maskmovq
idivl
movsb
scas
lcall
rorb
xor
imul
call
faddl
dec
push
mov
lock
sbb
push
insl
push
xchg
js
mov
outsb
pop
imul
rolb
add
pop
hlt
int3
lock
sbb
iret
lret
rcrl
cld
inc
sub
adc
shrb
das
mov
sub
out
jbe
cmp
cmp
and
fists
dec
pop
sbb
cltd
je
pop
pop
std
test
enter
sarl
lahf
inc
sub
out
lcall
in
xor
lahf
loope
inc
ret
sub
loope
jb
and
add
pop
clc
and
and
jnp
mov
xor
nop
movsl
cmp
in
aad
push
or
dec
inc
fdivrl
inc
sub
ret
outsb
mov
push
xchg
stos
bound
clc
leave
mov
jne
pop
inc
add
push
add
cli
outsb
or
xor
loop
and
add
and
add
adc
in
std
xor
mov
jae
and
dec
shlb
lahf
xchg
sub
and
sub
sub
lcall
push
jbe
lock
push
test
lods
push
fdivrl
sbb
fwait
mov
sbb
ror
push
test
mov
cmp
arpl
clc
in
adc
push
mov
negl
mov
mov
rep
jl
bound
pop
cld
push
cmp
out
fadds
int3
repnz
in
lods
adc
int
push
mov
or
cmp
xchg
jl
icebp
inc
in
shrb
push
add
cs
lret
push
mov
aaa
xor
inc
pushf
cmpsb
movsl
or
inc
je
pop
pop
stc
jbe
push
in
cmp
jg
adc
cltd
mov
xchg
mov
mov
push
sti
fcom
cmp
ljmp
stos
inc
movsb
fnstsw
jl
mov
sbb
out
dec
in
sbb
xchg
push
sbb
xor
and
ljmp
push
adc
sbb
push
movsb
out
std
lret
clc
inc
cwtl
pop
pusha
jne
mov
loop
cmp
cmc
addb
dec
loopne
rclb
fstpt
xlat
mov
mov
nop
out
enter
adc
xor
mov
or
stos
cmc
ret
mov
insl
or
fisttpll
insl
out
stos
pop
clc
sbb
sbb
dec
insb
lock
jae
sub
add
and
jmp
mov
arpl
xor
pop
or
in
and
lahf
iret
imul
or
or
outsb
ret
dec
daa
mov
push
cmpsb
add
pop
cmp
ficompl
and
mov
mov
or
ds
rcl
or
mov
cmp
pushf
mov
sub
cltd
pop
dec
adc
inc
mov
sti
int
dec
test
lds
xor
xor
ja
xchg
jbe
sub
test
int3
inc
mov
mov
jg
jae
mov
nop
xor
fcomip
inc
inc
repnz
ljmp
or
and
in
push
push
test
mov
cmp
xorb
fwait
cmc
fidivs
mov
add
lahf
nop
push
jl
mov
daa
mov
dec
sbb
movsl
inc
jmp
inc
xor
pop
lcall
push
daa
ja
dec
or
mov
lss
mov
dec
test
insb
stos
jg
sub
sbb
pop
mov
jp
jmp
xchg
adcl
jmp
mov
cli
or
sub
inc
sub
icebp
cmp
inc
sub
adc
cmp
iret
out
pop
push
xchg
or
adcb
pop
and
jbe
sub
inc
mov
ds
iret
cmp
lock
push
cmovo
dec
mov
and
inc
stc
dec
aam
rcl
lcall
mov
testl
mov
js
adc
and
sarb
in
adc
sbb
mov
xchg
scas
jge
ret
push
ret
pop
std
mov
push
scas
aaa
sub
lds
jbe
addr16
scas
sub
sub
dec
adc
cs
sahf
xchg
fwait
dec
xor
ja
cld
lcall
dec
outsl
cmp
pop
add
push
roll
ds
or
sbb
xchg
mov
dec
xchg
dec
sub
pop
stos
pop
inc
and
cmc
xor
lea
aaa
in
add
sbb
mov
push
loope
pop
fisubrl
cmp
clc
aad
mov
jp
cs
in
jle
inc
xor
pop
sbb
pop
mul
fs
dec
aaa
xor
int
cmpsl
cmp
sub
sub
xor
cltd
mov
les
cwtl
sub
push
mov
xlat
sub
adc
hlt
mov
les
sub
jg
dec
sub
and
xchg
insl
cmp
jb
in
adc
mov
sub
jo
es
jbe
mov
cli
mov
push
gs
dec
and
ljmp
js
std
jl
pushf
mov
or
cmp
sub
xchg
sub
notb
pop
cld
fs
fadds
outsl
pop
and
xchg
pusha
ret
ljmp
jnp
fcmovnbe
rcrl
jge
adc
or
leave
xor
sub
rolb
testb
lock
dec
repz
or
dec
leave
shrb
jmp
or
in
mov
or
jne
pop
jnp
sahf
cmp
movsb
outsl
pushf
dec
jmp
xor
push
lods
pop
inc
or
jle
sub
inc
push
add
jg
test
cmp
pop
sub
dec
faddl
pushf
inc
mov
fisubrs
sub
cmp
lcall
and
sbbb
addr16
ret
aas
push
hlt
jns
aad
xor
aam
iret
scas
lcall
cmp
arpl
outsl
adc
movsl
leave
scas
into
enter
loope
or
scas
sub
or
insb
popa
mov
imul
jecxz
icebp
and
pop
jno
lahf
inc
mov
sbb
int
call
iret
xchg
push
add
and
bound
lret
ret
popf
mov
jmp
push
sub
rol
jle
movsl
or
js
addb
cmpsb
imul
push
mov
ja
fimull
xchg
adc
mov
cmc
jns
arpl
xchg
mov
mov
sub
inc
inc
mul
sbb
dec
dec
pop
pop
cmpsb
cmc
jae
xchg
mov
cltd
dec
lock
jmp
fldt
je
dec
fadds
insb
icebp
xor
sbb
mov
out
outsb
outsb
std
or
pop
fdiv
pop
rclb
sub
pop
xchg
cltd
cwtl
jne
and
push
test
mov
add
push
adc
test
or
dec
mov
jg
pop
add
jecxz
aas
scas
dec
cwtl
mov
mov
jb
lcall
orb
dec
inc
les
inc
aas
dec
mov
std
push
jns
pop
adc
enter
or
ja
pusha
inc
out
pop
fistl
out
mov
pusha
inc
pop
ljmp
jp
sbbl
ss
fldt
scas
cld
cmp
add
push
sbb
scas
int
test
mov
arpl
jg
or
push
and
dec
xor
xchg
adc
push
shrb
shll
adc
sub
mov
loope
into
shrb
sahf
repz
insb
ds
pop
mov
dec
mov
adc
adc
mov
push
cmp
or
and
push
pushf
jbe
push
clc
lds
pop
dec
bound
movsl
add
loopne
xor
je
or
or
test
scas
and
mov
arpl
xor
and
jge
push
lahf
push
add
mov
scas
jp
pusha
mov
loop
dec
or
mov
or
pop
adc
xchg
lock
pop
sbb
idivl
mov
lock
js
jmp
sub
and
in
push
jne
out
jl
pushf
cmp
movsb
jae
scas
lahf
imul
ficomps
lds
mov
sub
add
dec
popf
mov
arpl
dec
xchg
das
mov
jge
pop
je
jmp
call
and
cmp
out
andb
push
pushf
xor
popa
gs
or
fcomi
mov
dec
or
scas
addr16
fwait
dec
dec
mov
mov
jl
es
add
vmovups
cli
icebp
add
xor
sbb
jp
and
in
test
mov
cmp
fdiv
pushf
cmc
cmc
push
inc
ss
mov
xor
cmp
sti
int3
cli
sarb
mov
fidivs
iret
mov
pushf
mov
out
mov
fwait
xchg
add
jo,pn
ret
jmp
dec
inc
ljmp
fs
fs
pop
or
lret
cmc
jmp
push
and
inc
mov
inc
mov
xchg
push
ljmp
push
xor
lods
push
inc
pop
mov
xchg
popa
push
or
adc
push
mov
dec
mov
ljmp
push
lret
imul
sti
mov
out
push
pop
out
jl
mov
ss
adc
aam
movsb
leave
cmp
bound
jle
in
divb
imul
fstl
add
sarl
cmc
repz
aaa
xor
pop
or
pop
pusha
rcll
loope
mov
sbb
xchg
push
cmc
and
sub
movsb
adcl
jmp
sub
mov
int3
popf
mov
insl
ljmp
xor
mov
sub
sbb
ficoml
daa
adc
pop
test
mov
jne
inc
jno
std
js
movb
adcl
mov
pushf
sbb
orb
mov
hlt
mov
pop
scas
mov
pop
xchg
lret
mov
xor
adc
mov
xor
cmc
movsb
ja
mov
dec
mov
mov
push
or
imul
fbld
es
pushf
and
filds
sub
jnp
das
or
xchg
jge
xchg
jne
or
lea
jo,pt
and
dec
jp
addr16
movsl
lea
ds
out
pop
adc
sub
fnsave
mov
idivl
mov
cld
inc
in
dec
mov
jo
xor
adc
dec
pop
jmp
dec
xor
and
jmp
sbb
or
mov
and
scas
xor
stos
jns
inc
das
jecxz
repnz
nop
clc
nop
faddl
xchg
mov
xchg
pop
mov
adc
int3
xor
push
xor
scas
add
mov
jb
sub
enter
lcall
imul
cmp
xor
into
das
fmul
dec
dec
xor
sbb
pop
add
gs
sbb
dec
rclb
sub
insl
mov
imul
in
test
es
ret
clc
add
dec
test
fisubrs
inc
sub
test
testb
jbe
cmpsb
in
popa
cmpsb
inc
pop
sbb
push
add
pop
loope
punpckhbw
popa
test
xchg
cmp
loop
pop
and
aad
jb
push
and
outsb
jae
lret
out
sub
or
sub
xchg
call
pop
nop
mov
sub
xchg
jb
sbb
fidivl
sbb
sbb
mov
lret
and
hlt
mov
cwtl
push
into
out
outsb
sbb
xchg
lret
fisttps
sbb
mov
fmul
into
jmp
es
inc
adc
imul
es
icebp
or
mov
pop
push
lods
cmp
mov
dec
orb
je
xchg
push
int3
or
repz
jl
insl
pop
repz
cld
pop
es
loope
inc
jle
insb
pusha
jns
mov
lret
jp
mov
jge
daa
pusha
ret
jmp
les
mov
enter
dec
orl
outsl
call
aad
incb
inc
jnp
jp
insl
ss
push
adc
lds
or
mov
arpl
push
inc
mov
arpl
and
popa
add
movsb
cld
das
add
sbb
pushf
les
jle
imul
mov
imul
inc
mov
movsl
pop
js
push
add
and
sub
jno
jne
pop
fiaddl
pop
adc
scas
mov
loope
inc
push
mov
adc
and
pushf
sbb
test
dec
xchg
add
stos
hlt
ret
lret
jecxz
mov
pushf
incl
shl
inc
pusha
lret
mov
cs
outsb
mov
ljmp
in
mov
add
mov
incb
pop
cs
xchg
rol
lea
das
push
lock
xchg
inc
out
lea
mov
inc
cmp
adc
sbb
outsb
repnz
sbb
fadd
mov
rcr
int
add
xlat
dec
push
add
in
ds
xchg
out
mov
or
nop
mov
ret
xor
frstor
cltd
jg
outsb
std
daa
xor
pop
cmp
push
movsl
pusha
leave
cmpb
or
imul
cs
mov
mov
push
mov
pop
cmpsb
and
cltd
lods
sti
or
cld
push
mov
sub
ljmp
mov
stos
jnp
inc
jmp
frstor
inc
movsb
dec
inc
stc
pop
ret
add
or
pop
cmp
jbe
push
jno
outsl
adc
push
cmp
iret
xchg
repz
jbe
ret
add
ljmp
cwtl
out
ret
scas
inc
faddp
adc
and
cmp
or
or
add
fsubs
add
xor
and
jmp
jle
or
popa
xchg
movl
cmpsb
mov
mov
push
sub
xchg
repnz
jecxz
imul
mov
addr16
mov
fs
imul
aaa
jb
aam
mov
loop
mov
xchg
stc
imul
xor
shrl
mov
dec
outsl
popa
push
lods
xchg
mov
aam
rorb
loope
push
lea
push
fpatan
shrl
mov
mov
cmp
pop
repnz
xor
test
clc
pop
imul
jns
fiaddl
sub
ret
and
sbb
add
arpl
sub
add
xchg
subb
pop
test
lods
jo
pop
and
pop
dec
and
mov
clc
roll
in
mov
out
cmp
mov
pop
pop
test
ret
jno
mov
negl
adc
cmp
push
cmp
decl
nop
frstor
xchg
sub
sbb
mov
addr16
ret
jno
por
mov
jno
lea
sbb
sbb
out
push
pop
xor
jo
cmp
adc
nop
mov
xchg
popf
rolb
fwait
ja
jns
jg
and
add
in
push
ret
lock
insb
cld
sti
or
jp
jp
push
mov
push
push
test
mov
xor
out
push
mov
popa
js
add
test
enter
mov
mov
cwtl
pusha
or
xchg
cmp
daa
sbb
sub
push
popf
popa
pop
add
fnsave
lds
test
add
stc
xor
jg
jge
pushf
incb
cmp
ss
pop
sbb
sahf
stos
xchg
add
cmp
mov
dec
xlat
scas
jp
mov
push
push
arpl
inc
pop
cs
nop
pop
fildl
push
into
loop
mov
adc
sub
data16
jo
sbb
adcl
mov
sarb
cmpsb
mov
jb
mov
dec
shrl
push
out
xor
outsb
fs
xchg
out
cwtl
mov
mov
fsubrs
mov
mov
mov
in
sub
sbb
add
adc
xchg
popa
mov
dec
and
inc
xchg
inc
mov
stos
es
push
pop
sbb
mov
push
xchg
fcomp
mov
outsl
mov
data16
pop
mov
push
pop
rolb
cmp
jge
jns
pop
pop
es
mov
xchg
mov
jp
jge
aad
repz
jecxz
mov
scas
aad
adc
dec
and
sbb
hlt
bnd
push
xor
mov
lret
push
and
and
add
aam
sbb
lods
lods
lock
mov
sub
testb
fcomps
jmp
dec
outsb
int
pop
in
call
int
decb
jge
loopne
jo
sub
jnp
push
sbb
cli
jbe
adc
scas
jbe
decl
jg
mov
pop
xchg
sti
push
js
in
or
or
adcl
push
xor
lds
lds
sbb
dec
ficoms
mov
icebp
int3
xchg
inc
inc
in
xchg
mov
pop
fsts
pop
mov
dec
cmp
mov
test
lcall
sti
lds
inc
cli
sub
xchg
fnstcw
push
mov
invlpg
inc
jnp
sti
or
lea
add
xchg
call
mov
scas
pop
mov
testb
fidivl
inc
cld
pop
jo
pop
adc
daa
sbb
xchg
test
repz
and
cmp
add
jae
cmpsl
sub
test
and
in
frstor
xchg
loope
out
sbb
je
cmp
lret
mov
sbb
arpl
mov
in
and
fisubl
out
in
dec
jge
jg
fcoml
adc
sarl
and
inc
ret
insb
adc
push
sub
xor
add
xchg
push
es
push
mov
data16
call
mov
add
cli
xor
roll
xchg
stc
add
aad
and
inc
cmp
cld
add
movsl
imul
cld
daa
pusha
cmc
sbb
rorl
dec
jbe
xrelease
push
pop
xchg
mov
in
pop
mov
cli
movsl
xor
jecxz
push
adc
movsl
pop
shll
loop
mov
pop
iret
popa
repnz
mov
cmp
pop
jl
push
add
mov
mov
out
inc
movsb
mov
pusha
xorb
or
pop
adc
lods
xor
mov
pop
test
popa
cli
sarl
test
add
out
jb
cmp
or
sub
or
addr16
mov
add
xchg
mov
push
sbb
ffree
inc
je
jnp
imul
and
lahf
push
sub
push
jle
xchg
aaa
aam
mov
push
idivb
popf
inc
cli
andps
or
cmpsb
xchg
int
out
push
fistpl
pop
xor
mov
adc
jae
sti
jnp
dec
sti
movsl
dec
cmp
fs
sbb
ja
test
cmc
cld
dec
std
cmpsb
mov
jmp
ret
pop
daa
xchg
adc
rcr
fxch
jo
pop
iret
add
fidivl
cld
insl
xor
or
popa
and
lods
xor
mov
les
jg
adc
pushf
sub
xchg
int3
mov
jecxz
das
cs
fwait
lock
sbb
aas
movsb
cmc
scas
sbb
push
lods
jo
rorl
mov
leave
adc
lret
jne
movsb
fnstcw
push
movb
sub
iret
ss
or
pop
sti
sbb
test
lret
fpatan
fs
mov
std
push
or
inc
rcll
jmp
and
dec
aaa
xchg
or
fcomip
pop
jnp
stos
inc
pop
lea
add
leave
jne
or
sbb
lds
cwtl
and
xor
mov
push
sub
rorb
call
mov
xorl
inc
and
dec
fisttpll
cli
cmp
std
cmp
es
sbb
aam
loop
inc
gs
and
add
push
in
clc
aam
mov
add
jl
push
inc
pop
enter
cmpb
popf
push
pop
daa
pushf
mov
inc
jbe
mov
out
jo
iret
lahf
arpl
add
mov
cmc
xchg
jge
popf
push
sub
lret
lret
sub
push
imul
or
push
int
iret
in
or
nop
mov
mov
rol
in
xchg
sub
icebp
mov
jp
adc
xchg
out
repz
clc
cmc
ficoml
lret
leave
hlt
dec
fcompl
xchg
adc
mov
jae
sub
repz
lods
xlat
pop
pop
cmp
push
stc
push
pop
xorb
and
mov
cmp
imul
mov
ret
jae
subl
sbb
cs
mov
xchg
test
clc
adcl
in
jg
xchg
sbb
sbb
cmp
push
mull
xor
xchg
repnz
mov
lret
jbe
add
jecxz
test
into
jmp
popf
sti
sahf
outsl
imul
mov
xor
test
mov
mov
adcl
and
push
push
fs
leave
shrb
out
into
mov
ds
mov
test
les
cmpsl
jno
cmc
fdivrs
shr
and
or
or
add
xchg
daa
sub
popf
mov
sbb
inc
clc
push
jnp
lock
cmp
pusha
test
jl
pop
ja
inc
repz
and
xor
adc
mov
sub
jmp
inc
dec
pop
xor
push
sub
cmp
das
or
or
out
std
sarb
insb
xchg
sbb
push
mov
push
mov
icebp
mov
fidivrs
mov
movsl
mov
insb
xchg
sahf
popf
inc
and
aad
dec
push
or
aas
mov
xor
imul
clc
jmp
push
jno
xor
push
inc
jl
add
imul
cs
test
mov
aas
xlat
and
mov
push
fwait
cmp
iret
out
or
addb
mov
xchg
jb
test
pop
adc
push
mull
popa
pop
outsl
mov
loop
int
xchg
jecxz
jmp
mov
mov
xor
in
add
push
add
fidivrl
mov
rcl
into
xchg
int3
mov
imul
out
cmpsl
adc
push
mov
cmovge
adc
dec
pop
mov
std
pop
fcmovbe
icebp
fninit
cmpsb
fisubrs
push
sbb
and
jmp
lret
mov
pop
shll
pminsw
xchg
pushf
insl
adc
repz
dec
adc
repz
jne
add
xor
enter
cmp
sub
ret
insb
fidivs
pop
out
popf
xchg
xchg
loopne
loopne
push
dec
push
cs
and
fwait
rcll
sub
lock
insb
dec
sub
mov
icebp
movsb
roll
adc
into
pop
xchg
add
fisttpl
push
xor
sbb
ret
dec
in
rcr
fsubrp
hlt
cmp
xor
lea
xchg
ficoms
fsubrl
mov
jbe
mov
or
dec
sbb
sbb
inc
mov
mov
incb
xor
shrl
loop
or
mov
leave
scas
lret
jnp
out
movsl
or
lea
ss
in
sbb
imul
scas
pop
out
into
mov
dec
push
lods
or
mov
scas
das
xchg
jp
push
addr16
scas
das
mov
cmp
test
cmp
adcl
hlt
dec
ja
aad
sub
clc
imul
loop
pop
test
push
mov
je
lock
xchg
pop
pop
push
xor
add
fcoml
in
mov
mov
sbb
mov
int
lahf
lods
insl
call
xchg
adc
mov
xor
dec
ret
inc
cmp
andl
subl
xor
cmp
mov
addb
repnz
movsb
inc
add
dec
in
mov
push
hlt
and
dec
and
pop
rorb
pop
jl
lret
cmpb
push
mov
push
jae
lret
dec
xchg
jno
or
mov
fists
outsb
pop
stos
mov
cli
aad
filds
or
dec
mov
inc
mov
subb
jno
pop
add
mov
cltd
cli
and
cld
cmp
repz
mov
or
add
cmc
pop
test
aaa
popf
and
lock
shlb
lock
sbb
out
xor
sub
mov
outsb
xor
nop
fsubrs
push
inc
adc
mov
cltd
xchg
mov
sub
scas
mov
movsb
adc
lods
pop
repnz
clc
pop
mov
xchg
jmp
and
add
mov
sub
xchg
nop
fcmovbe
pop
jge
pop
push
jmp
xor
add
dec
lahf
mov
mov
movsb
cltd
push
mov
mov
push
loopne
testl
inc
call
push
add
sbb
js
adc
addb
insb
inc
call
add
in
jl
scas
pop
das
daa
int
sbb
ds
in
cmp
out
cltd
cmp
icebp
inc
xlat
adc
vmwrite
fucom
jno
mov
mov
pop
xor
gs
xor
inc
inc
pop
or
in
mov
adc
xchg
mov
mov
xchg
test
push
loope
enter
xor
mov
daa
mov
and
into
bound
cmp
ret
dec
repnz
add
adc
jo
sti
xor
pop
add
dec
sbb
sub
push
xor
push
mov
sub
movq
jecxz
and
fcmovne
fstpl
sbb
push
mov
inc
mov
lcall
es
cmp
inc
xor
adc
rorl
xor
adc
xor
xor
xchg
sarb
jnp
inc
mov
mov
jns
mov
sbbb
loope
enter
inc
xchg
pop
lods
pushf
sub
int3
inc
sbb
roll
xor
dec
or
inc
in
repnz
cmc
adc
adc
dec
and
arpl
sti
inc
and
mov
inc
inc
jnp
sahf
sbb
push
xchg
outsb
add
out
cli
lahf
mov
es
ret
pop
cmp
xor
mov
push
sub
jnp
mov
sub
xorb
rsm
sub
pop
fs
sub
xrelease
mov
sbb
push
je
or
jno
mov
cmp
dec
clc
cli
out
fwait
imul
add
test
jmp
xchg
sbb
mov
imul
adc
cs
xor
add
cwtl
dec
fistpll
test
xor
or
dec
xlat
mov
cwtl
das
fisttpll
inc
movb
int
mov
iret
jb
mov
in
enter
das
cmpsl
pop
movsl
repz
js
dec
push
xchg
decl
jg
add
pop
xchg
scas
pop
lock
lret
jmp
ret
cmpsb
or
dec
sbb
pusha
sti
sub
jne
rcrl
mov
pop
cmp
in
jp
xchg
dec
mov
in
in
xchg
ret
dec
roll
call
sub
ret
arpl
or
fwait
xor
in
sub
test
push
fnsave
xor
rorb
je
call
ror
cmp
sbb
xor
xchg
sbb
popa
repnz
push
movsb
adc
into
fidivrl
adc
sub
daa
xor
mov
cmpsl
lcall
repnz
je
push
inc
fwait
aad
xor
rcr
in
repz
jno
push
iret
iret
imul
lds
out
sub
sbb
cwtl
ret
inc
sar
jno
xor
dec
dec
pusha
mov
addr16
jl
mov
movsb
loope
into
xchg
mov
mov
xlat
leave
and
sbb
cmp
loope
lahf
lret
xor
les
movsb
mov
or
xchg
icebp
or
leave
out
orb
cmc
cmp
push
das
or
and
jmp
enter
fidivl
aad
inc
mov
dec
jp
push
fsubr
rorl
loope
repz
pop
push
jg
sbb
jns
cmp
faddl
sub
mov
divb
cmc
add
mov
aad
jmp
imul
rol
ja
ret
lods
dec
ret
aas
pop
xchg
repnz
ds
inc
shll
mov
in
in
shlb
add
in
inc
sub
mov
decb
leave
pop
clc
mov
add
inc
subl
adc
aaa
insb
or
mov
outsl
or
fldl
xor
sub
and
lods
lcall
movsb
pusha
jae
mov
cmp
int
add
pop
or
dec
mov
mov
es
lret
sahf
or
movsl
aad
arpl
add
push
int
aad
popa
add
jge
pop
aam
out
popa
jge
imul
push
nop
jp
orl
loopne
jns
cmp
inc
int3
sub
je
add
fwait
es
jbe
and
ljmp
loope
dec
jns
sbb
andb
push
add
es
inc
fiadds
out
pushf
repnz
pop
push
in
mov
addb
stos
cmp
int3
out
out
cmpl
push
and
cmp
sbb
push
fucomi
loope
sbb
fbld
pop
pop
in
pop
dec
pop
xchg
jl
insl
cmpsl
sbb
cli
xlat
arpl
cld
xor
sbb
pop
cmp
jbe
xor
push
in
icebp
xchg
pop
sti
adc
pop
sub
mov
fsubs
pop
adc
clc
jge
mov
add
mov
jae
pop
mov
push
and
push
imul
jo
lds
push
mov
icebp
cmp
loopne
inc
ljmp
cmp
sbb
iret
pop
push
or
cmp
jl
js
shll
es
nop
or
cld
xchg
cmpl
push
test
mov
mov
shrb
movsb
mov
xchg
cmpsb
jne
cmp
dec
idivb
lret
jae
mov
lock
rclb
sbb
dec
rcll
dec
leave
push
mov
lods
lret
inc
outsl
cltd
xchg
jae
adc
subl
push
leave
pushw
push
lds
mov
loop
pop
movsl
ss
out
or
xor
dec
jnp
fucomp
inc
mov
dec
xor
test
mov
mov
mov
adc
shr
fldcw
fucomi
dec
test
subl
fiaddl
add
pop
sbb
xor
dec
inc
mov
mov
mov
pop
adcb
fdivrl
lret
fcmovbe
cltd
js
mov
xlat
cmp
mov
push
and
movsb
sarl
mov
push
fidivs
mov
jns
test
jp
mov
sar
fsubl
sub
inc
sbb
testl
or
scas
dec
dec
pop
dec
xchg
mov
lods
jmp
sbb
mov
xor
mov
movsl
mov
inc
lods
mov
xchg
in
pop
jmp
inc
jp
push
lret
dec
push
or
pop
inc
adc
sub
lret
and
lods
cld
shlb
mov
fsubrl
add
lock
pop
negl
and
sbb
insl
test
shlb
and
push
cmpsb
dec
push
cs
enter
stos
mov
pusha
pushf
in
shll
mov
insl
jns
or
outsl
add
lret
rcrl
nop
cmp
cmove
push
push
fcompl
leave
dec
lret
repnz
mov
jbe
mov
dec
mov
inc
stc
rcrb
and
stos
mov
or
test
repz
insb
inc
cmpsb
mov
jg
sahf
jae
xor
adc
push
cmp
push
lahf
mov
ja
add
adc
pop
cmp
inc
lret
ja
fisubl
outsl
mov
in
jnp
inc
jne,pt
andb
jne
xor
imull
mov
ret
les
mov
xchg
cmc
xor
jp
dec
pop
packuswb
int3
push
imull
cmc
and
sahf
icebp
jmp
xchg
dec
mov
xchg
xchg
cmp
imul
dec
cmp
and
sti
mov
cli
adc
cld
jno
mov
pop
mov
or
aas
aad
xor
aad
sahf
xchg
push
pusha
leave
ficoml
repnz
dec
fdivl
cli
jb
cmpsb
jp
scas
mov
mov
sbb
lock
int
inc
lret
sarl
cmp
rol
sub
int
call
mov
insb
mov
cs
addl
shlb
add
rclb
ja
push
mov
fwait
jl
sub
mov
std
jg
xchg
and
mov
inc
cmp
mov
mov
push
mov
sbb
es
jo
stc
cmpsb
xor
inc
adc
mov
or
or
cmp
cli
mov
nop
inc
xor
fwait
pop
jecxz
mov
ss
jl
ret
pop
call
mov
int
out
fcoms
gs
das
jno
lds
cmpsl
aaa
or
cmp
adc
pop
fnstenv
orl
test
cmp
pop
mov
pop
inc
mov
xchg
pop
jg
inc
pop
mov
and
cmp
negl
ficompl
adc
mov
pop
mov
ss
stos
out
xchg
shlb
xlat
inc
mov
push
movsl
enter
push
data16
mov
sbb
adc
adc
jbe
xchg
inc
add
push
imul
ffreep
push
xchg
sub
ja
lds
movsl
cmpsb
dec
pop
cltd
inc
ret
xchg
lret
add
fs
fstps
pop
jge
mov
orl
movsb
dec
ljmp
das
std
xchg
rcll
pop
mov
push
aaa
xchg
fiaddl
lahf
roll
mov
adc
ss
cmpsl
lcall
xchg
lds
xor
push
pop
scas
mov
inc
pop
test
sub
xchg
enter
jmp
jae
sbb
xchg
popa
cmp
xor
push
inc
sahf
sbb
aas
pop
popf
sub
or
scas
and
add
jmp
pop
or
or
xor
fiaddl
push
xor
fs
fstpt
mov
sbb
outsl
inc
sbb
xor
cltd
mov
out
sub
pop
pop
aad
fdivp
inc
push
negl
inc
lret
call
cmp
mov
aam
jmp
arpl
xchg
cwtl
test
mov
push
popa
ss
add
popa
push
push
dec
pop
lret
push
dec
add
ret
leave
out
loope
pusha
jecxz
adc
enter
inc
outsb
js
mov
and
mov
test
fwait
cld
xchg
test
adc
and
xchg
mov
push
insl
shrl
imul
mov
aas
mov
mov
test
mov
mov
push
je
mov
sahf
leave
mov
fcmovu
fcmovb
xor
cmpsl
or
cltd
ds
bound
cwtl
jg
aaa
sub
inc
nop
xchg
jmp
and
push
pushf
and
sub
pop
sub
cmpsb
stos
mov
aas
sub
mov
cmp
mov
fistps
pusha
mov
xchg
outsb
je
std
lcall
dec
pop
les
sub
ss
jnp
rcr
and
insb
inc
fcompl
add
add
xor
sahf
pop
test
jae
or
outsl
lret
dec
xchg
lret
adc
cwtl
repz
inc
push
lret
pop
jg
testb
scas
jl
sahf
hlt
jbe
fdivl
inc
sbb
dec
sbb
mov
or
inc
add
xor
xor
jge
cmp
je
mov
aad
arpl
out
push
mov
call
fistpl
daa
bound
andb
stos
push
divb
jbe
and
stc
jl
pop
lret
inc
cmp
and
aas
push
lret
add
gs
jae
es
mov
mov
mov
ror
pop
popf
mov
cmc
push
dec
nop
xor
adc
push
mov
or
lcall
test
or
cmp
add
add
stos
lahf
lret
arpl
push
pop
mov
dec
jge
xor
ret
pop
cmp
xor
sbb
cwtl
cmp
dec
and
ror
insb
xchg
sti
sti
mov
sub
lcall
mov
call
insl
and
inc
add
mov
addr16
jo
rorb
mov
add
in
cld
cmp
sub
fnstcw
sub
mov
pushf
xchg
adc
xor
xchg
lret
xchg
sub
cwtl
xchg
cmp
push
lock
sbb
cli
fnstsw
out
jmp
lods
mov
insl
xchg
scas
mov
xlat
sahf
test
pop
inc
clc
call
pushf
lea
movsl
mov
jl
xchg
loope
inc
stos
mov
sub
push
and
mov
jbe
pop
push
pop
pop
xchg
nop
ss
mov
xchg
sarl
mov
jecxz
dec
loopne
mov
enter
sbbl
ss
rorl
dec
dec
pop
fstps
jb
lahf
mov
ss
mov
push
data16
push
or
in
ret
or
adc
sbb
jp
out
js
mov
lds
push
adc
mov
xchg
add
xchg
push
popa
inc
inc
ja
fidivrl
xchg
data16
push
mov
fbstp
aad
popf
test
push
ss
lret
loop
scas
mov
push
in
cmp
scas
fidivl
mov
xor
cltd
stos
decb
dec
scas
and
mov
inc
jmp
dec
shr
stos
pop
inc
imul
cltd
mov
fwait
adc
into
jb
movsb
out
aad
scas
loopne
jo
movsl
shl
cmp
xchg
leave
fldl
dec
sbb
test
push
fnstenv
mov
cmp
fdivs
fmull
pop
pop
push
movsb
xchg
and
int3
push
push
sub
sub
fstpl
mov
adc
mov
jmp
jl
sub
out
xchg
push
outsl
enter
sub
add
push
pop
jmp
hlt
leave
scas
out
xchg
pop
imul
pop
je
or
rolb
in
pop
sub
enter
fwait
jno
ss
repz
mov
inc
inc
xchg
mov
and
jg
repnz
mov
stos
test
mov
lea
cli
push
pop
andnps
sbb
push
ficompl
push
jb
ja
stos
outsl
push
mov
call
mov
add
dec
mov
popf
dec
out
cmp
inc
test
push
mov
pop
into
iret
stos
jb
xchg
les
leave
and
iret
popf
rorl
pusha
dec
add
pop
clc
xchg
lret
lret
jecxz
mov
or
cmp
rolb
push
gs
sbb
xchg
cli
mull
out
xor
rol
inc
outsl
popf
xor
fimull
mov
jmp
insl
rol
ja
sub
enter
ret
les
dec
popa
inc
cs
or
cmc
dec
mov
dec
imul
push
cmp
mov
or
sub
cli
push
dec
jecxz
idivb
in
and
test
rorl
shrl
add
mov
adc
repz
mov
sub
mov
mov
rorl
pop
addb
sahf
shrb
icebp
sbbl
dec
add
jo
jo
out
movsl
inc
xor
lods
js
lret
jnp
sub
sahf
xchg
call
lods
sub
xorl
movsl
roll
adc
push
ss
test
mov
add
movsb
gs
inc
out
jge
cltd
dec
sub
inc
mov
mov
in
cmp
sbb
out
jne
xor
repz
cmp
and
popf
fmuls
in
scas
and
adc
or
pusha
ret
daa
aam
daa
push
add
push
dec
mov
fsubrl
loopne
inc
repnz
js
mov
inc
cmc
decl
ja
test
mov
xchg
imul
loope
inc
iret
arpl
cli
inc
fsubrs
fstpl
xor
loopne
icebp
fnstenv
scas
jmp
mov
push
mov
sti
push
jmp
stos
imul
and
aam
cmp
dec
mov
aaa
dec
cmp
aam
push
ds
das
push
and
inc
movsb
pop
or
jmp
and
insb
xchg
lret
add
xchg
push
fcomps
inc
roll
mov
adc
das
cmp
fisubrl
add
xchg
or
push
imul
sub
data16
push
outsl
jle
jp
repz
ds
jl
xchg
lds
shlb
push
stc
cmpsb
adcl
inc
mov
rcrl
cmp
push
push
push
xchg
inc
fiadds
fcmovnb
jo
push
test
cmp
test
xor
cmp
in
fwait
cmp
fiaddl
jecxz
sbb
jmp
ja
test
xchg
xor
mov
jmp
test
jp
or
test
push
hlt
ret
xchg
je
aaa
mov
sti
sub
push
dec
inc
inc
pusha
inc
cli
push
in
cmpl
push
fs
mov
or
in
mov
xchg
xchg
jg
stos
push
jmp
mov
cs
in
scas
ret
shrl
test
xchg
push
pop
jecxz
jnp
cmp
lock
pop
ds
dec
popf
dec
inc
lret
mov
jo
mov
jecxz
add
leave
push
push
lds
movl
leave
sti
test
sti
and
jle
repz
inc
jp
fnstsw
xor
nop
pop
test
dec
and
mov
mov
call
mov
adc
testb
push
out
mov
sub
inc
push
paddw
push
adc
cld
pop
dec
lds
loopne
adcl
mov
inc
push
fcomps
insl
sub
jge
jo
mov
ja
xor
scas
test
pusha
repnz
fdivrs
inc
mov
pop
ljmp
push
jo
in
push
inc
xchg
push
cmp
divb
xchg
and
stos
xchg
movsl
loope
in
int3
jge
ficoml
scas
add
add
aaa
jmp
hlt
mov
inc
in
xor
shll
test
or
xchg
xor
jns
mov
xchg
adc
xchg
daa
mulb
push
cmp
repz
sahf
sub
push
sbb
inc
adcb
sbb
orb
rcrl
enter
pop
adc
and
inc
rolb
push
push
mov
lods
and
out
jp
test
mov
sub
out
sti
pushf
mov
xor
cmpl
test
gs
lret
lcall
dec
jno
sbb
mov
addr16
test
mov
pop
dec
xchg
jb
cmovo
xor
stos
push
jbe
jmp
cmpb
out
mov
xchg
add
fcom
lock
push
fistps
push
mov
dec
jmp
pop
mov
shlb
testb
sub
jecxz
std
push
mov
adc
sbb
push
mov
pop
ficomps
shlb
push
dec
or
sbb
mov
and
inc
outsl
lods
mov
adc
shl
scas
sub
dec
pushf
or
inc
nop
leave
adc
push
and
fildl
outsl
cltd
std
lea
xor
loopne
lock
mov
in
mov
sub
dec
test
cmp
mov
xchg
js
stos
inc
add
jecxz
setl
imul
mov
jmp
adc
dec
mov
jno
mov
and
insl
pop
shlb
push
insb
sbb
cmp
es
or
mov
mov
movsl
xor
fidivs
aaa
sbb
fcos
pop
push
int3
sub
mov
ret
mov
dec
cmp
sti
outsl
aas
ja
push
inc
inc
daa
int3
outsl
mov
cmp
ja
xlat
or
cmp
icebp
and
or
pop
test
cmpsl
mov
jmp
pop
sub
or
push
sahf
cmp
pop
xor
jno
nop
sti
push
jle
enter
mov
inc
xor
xchg
arpl
sbb
scas
in
rcrb
sub
mov
cwtl
call
push
or
push
mov
sbb
dec
fcomp
test
sbb
lock
shll
mov
sub
test
jmp
lock
xorb
iret
adc
orb
int3
xchg
mov
ret
jns
xor
das
rolb
pop
repnz
mov
mov
iret
lcall
push
xchg
jle
stos
iret
mov
push
cmp
nop
flds
jb
cmp
icebp
ljmp
movsl
dec
ds
xor
mov
mov
adc
mov
addr16
lret
lret
mov
scas
add
lea
xchg
lea
mov
stos
mov
pop
xchg
outsl
inc
pop
xchg
call
fsubrs
mov
test
lods
and
leave
jns
call
xchg
jmp
stc
dec
ljmp
sub
jge
mov
fists
loope
test
adc
add
mov
mov
je
inc
jno
push
loope
popf
sbb
adc
inc
lret
rclb
outsb
call
popa
dec
mov
lea
inc
in
sub
xor
ja
fimull
popa
or
mov
scas
pop
aad
mov
notl
test
push
jno
adc
mov
aas
push
lahf
cmp
adc
or
dec
or
add
lret
mov
in
sub
inc
pop
dec
scas
or
xor
in
ret
ljmp
jle
imul
clc
ja
jge
sub
mov
les
adc
loopne
pop
in
and
mov
imul
fisttpl
xor
add
sub
xchg
inc
xor
fisubrl
xchg
xor
out
jmp
push
adc
cmp
fidivrs
cmp
inc
shl
mov
lcall
lahf
lahf
loopne
xchg
jl
jne
adc
je
cmc
or
mov
cli
push
pop
outsl
test
pushf
mov
or
and
mov
aad
inc
and
jns
sbb
xor
xchg
sub
orb
imul
mov
jmp
cs
sub
mov
hlt
adc
sbb
in
jbe
sbb
xchg
outsl
shr
rcrb
shrd
int
add
int3
and
mov
arpl
outsb
fmuls
shrl
imul
inc
and
sub
xor
push
ljmp
jle
pop
insb
inc
mov
mov
out
loope
sbbl
add
fsubs
jno
call
or
sub
add
or
push
add
inc
lret
sub
xor
in
push
ret
fscale
jecxz
jg
divl
scas
pusha
dec
pop
aam
daa
add
fdivrl
ret
jg
pop
push
pop
sbb
mov
mov
repnz
push
xor
adc
dec
sarl
sbb
xchg
push
loop
cmp
lods
jne
xchg
sub
mov
xchg
xchg
xor
adc
and
idivb
adc
push
push
sti
inc
fdivs
mov
repz
sahf
mov
add
gs
mov
popf
jb
mov
or
jae
imul
inc
sub
cmp
cld
cmp
cmp
push
out
mov
cmp
xchg
or
add
sbb
mov
hlt
xchg
jl
inc
lret
and
cmp
mov
mov
sub
insl
mov
ss
les
cmp
xchg
and
push
sub
jno
scas
pop
mov
inc
dec
mov
dec
inc
jae
and
lahf
bswap
jo
cmpsl
inc
inc
cwtl
add
jno
pop
popa
sub
pop
fistps
pop
je
cli
xchg
jle
cli
jecxz
mov
je
call
pop
movsb
jo
lea
sub
rcll
into
inc
ljmp
cli
dec
jo
jno
ljmp
sahf
or
cmp
pop
cmp
inc
mov
mov
xchg
or
dec
mov
inc
rclb
cld
jo
ret
bound
out
push
pop
iret
xchg
inc
push
and
lds
cs
js
inc
xorb
inc
cmp
sbb
shll
fwait
push
sbb
int3
mov
cltd
mov
gs
aam
sub
push
cmp
push
rorl
imul
loop
iret
je
stos
shll
inc
cmp
adc
mov
movsl
ss
fdivp
mov
je
inc
inc
ficoms
mov
jmp
test
jo
xchg
sbb
shll
mov
loopne
jge
inc
sub
pop
xor
int
loope
mov
fistpl
outsl
lret
lret
inc
xchg
loope
imul
mov
popf
adc
xchg
pop
add
pop
jg
xor
in
cmp
je
and
into
sub
push
xchg
mov
stc
sbb
xor
cld
pop
push
mov
orb
jmp
fldenv
imul
xchg
and
add
push
aad
sahf
imul
sbb
cmp
inc
das
pop
fnstcw
mov
and
rclb
add
inc
movsb
lds
aaa
frstor
add
movsb
aaa
subb
push
int3
out
cmp
in
and
sub
bound
clc
jle
push
mov
and
scas
push
push
icebp
lea
inc
cld
aad
cwtl
clc
sub
sbb
das
mov
test
mov
or
mov
js
cmp
ret
loop
cld
push
int3
sbb
or
jne
mov
inc
loope
mov
sti
pop
out
mov
add
push
arpl
fwait
dec
or
in
sbb
or
cmp
or
xor
push
mov
test
fsubrs
push
movsl
lahf
imul
or
stos
sub
xor
repnz
lret
dec
insl
ret
sub
xor
mov
ret
lahf
fstps
lahf
out
pop
subb
popa
pop
xchg
mov
mov
into
sarb
cmc
pop
sbb
mov
mov
add
lahf
bound
test
out
es
push
mov
xchg
and
popf
adc
sbb
push
fcompl
or
ret
jno
jecxz
pop
inc
xor
stc
inc
pusha
movl
sub
movsb
adc
push
test
push
xor
xchg
mov
inc
jnp
pop
roll
stos
and
mov
fdivrl
fisttpll
mov
cmp
sbb
mov
lds
or
ret
pop
jle
mov
cmpsb
jmp
les
popa
stos
pop
js
int
mov
loop
mov
jl
mov
fwait
aam
push
lahf
sub
js
sbb
lock
cmp
das
dec
and
push
out
xchg
mov
push
add
pop
push
cmp
lahf
jg
xchg
loope
ljmp
scas
cltd
xchg
xchg
test
cli
imul
and
lods
pop
add
divb
push
xchg
xlat
xor
push
movsb
imul
push
mov
xor
aam
in
je
int
shr
inc
push
popa
not
push
add
aad
mov
adc
jl
adc
inc
shrb
sti
fimull
jo
xchg
sub
and
sbb
cmpsl
or
adc
shr
sahf
mov
imul
loopne
dec
rorb
pop
xor
subl
mov
mov
inc
add
dec
inc
stc
jae
push
or
mov
pop
and
pop
fsubl
ljmp
push
push
fstl
lock
mov
imul
int
cmp
jne
xchg
in
stc
sbb
jb
ret
dec
sti
or
imul
int3
lret
pop
enter
xchg
jp
jnp
sub
add
mov
sbb
and
loopne
mov
cmp
cs
popf
gs
push
popa
std
lock
cmpsl
xchg
push
sahf
popa
sbb
pop
mov
movsl
push
push
ror
adc
mov
mov
push
bound
jne
jl
lcall
int
dec
push
test
in
mov
push
xchg
popa
mov
adc
or
ja
xchg
cmc
adc
fwait
push
adc
sbb
xchg
movsb
push
pop
aas
mov
cmp
jne
mov
aas
mov
adc
pop
or
mov
stos
mov
daa
int3
inc
ja
jge
paddb
mov
cmp
das
cmp
in
jp
cmp
xchg
or
sti
xchg
dec
movsb
sub
xorb
jp
lea
cs
xor
aas
cmpsb
push
push
push
adc
cmp
jl
insb
dec
aam
add
jb
adc
xor
lahf
pop
int
xor
decb
pop
push
cwtl
mov
inc
cmc
jecxz
mov
mov
push
cli
scas
push
push
push
jl
mov
cmpsl
movsl
mov
pusha
cltd
and
pop
shl
sbb
fdivs
fwait
xor
sub
sub
das
lds
pop
cmp
adc
pop
rolb
into
nop
jb
adc
fmuls
mov
aas
push
mov
dec
sbb
push
test
adc
loopne
xor
nop
cld
or
mov
imulb
and
mov
xchg
mov
push
loopne
add
jge
pop
and
jge
std
adc
sbb
pop
adc
mov
inc
pop
popl
mov
cwtl
xchg
cmp
rclb
cmpsl
aas
test
test
or
neg
xchg
push
movsb
cmpsl
jl
xor
outsl
push
adc
cmpb
sbb
pushf
cmp
xor
nop
imul
movsl
dec
and
lea
ljmp
cwtl
pop
xor
dec
add
stc
xlat
mov
adc
lret
xor
insb
mov
mov
dec
xchg
je
pop
icebp
lahf
cld
mov
ja
mov
cltd
aad
pop
push
mov
xor
aad
daa
test
stos
pop
orl
les
cmp
daa
out
mov
subb
jnp
sahf
lahf
pop
xchg
or
loopne
insl
sbb
loopne
or
hlt
mov
inc
rol
fmull
cmpsb
jecxz
repnz
lcall
mov
imul
das
fistpl
in
fisubrs
mov
in
cwtl
cli
ja
icebp
xchg
and
inc
cs
into
pop
imul
push
test
call
cmp
mov
or
daa
out
lds
faddl
aad
dec
movb
sub
cmp
inc
xchg
pop
jbe
imul
loop
adcl
sub
add
dec
js
jns
fwait
dec
int3
cmp
dec
push
mov
dec
daa
out
inc
mov
enter
scas
and
xorl
lahf
xchg
scas
test
mov
cs
mov
rolb
imul
xchg
adc
mov
xchg
jns
pushf
adc
cwtl
or
shll
stc
dec
dec
movsl
adc
outsl
ss
pop
mov
and
inc
in
jb
dec
in
xlat
cmp
sub
mov
movsb
jnp
or
jle
fstpl
xchg
jmp
add
mov
xor
je
sub
es
mov
fcomps
mov
sub
add
adc
shlb
jp
mov
sub
mov
sti
ss
in
or
mov
cs
ret
cmc
nop
mov
sbb
sub
xchg
mov
out
cmp
and
inc
iret
mov
sbb
mov
enter
adc
cld
fisttps
mov
out
stos
sbb
cmpsl
adc
or
aam
cmpsl
lret
ja
xchg
or
sti
shlb
and
test
adcl
mov
das
push
movsb
add
xchg
mov
pop
cli
pushf
xchg
lahf
lret
sbb
in
jbe
push
xor
sahf
sub
mov
loop
or
sarl
xor
aad
cltd
or
iret
js
idivb
ret
cmpsb
adc
dec
imul
popa
das
out
outsl
je
push
jbe
aaa
icebp
or
decb
imul
repz
jae
adc
ds
mov
xchg
lea
or
pop
lret
js
sbb
dec
mov
xchg
mov
fisubrs
shlb
ss
xor
adc
pop
loopne
imul
out
xchg
xor
add
es
pusha
repz
dec
xchg
js
pmaxsw
add
cli
lcall
jb
xor
mov
fidivs
push
sarb
scas
loop
sbb
js
out
mov
vpsubw
inc
push
popa
in
mov
xor
popf
repnz
rep
adc
in
or
push
cltd
ret
xlat
mov
mov
dec
stos
repz
and
jb
cmp
cmp
sub
inc
outsb
and
xchg
stos
cli
int
xchg
sub
mov
sbb
xchg
push
add
test
sub
or
sub
xchg
outsl
inc
jl
hlt
clc
das
or
jo
fidivs
add
addr16
dec
sbb
dec
not
sarb
mov
fcmovne
add
sarl
int3
jae
mov
push
daa
loop
add
out
test
jecxz
jmp
or
in
xlat
lock
jmp
adc
js
and
adc
sub
mov
push
fsubrs
mov
mov
mov
out
or
jo
aaa
cmp
add
mov
lret
cmp
iret
xchg
mov
mov
das
fsts
sub
mov
xor
xlat
arpl
cmp
mov
iret
into
fidivs
or
xchg
rcll
imul
dec
fiaddl
push
push
dec
sub
lea
in
adc
enter
ds
jae
cld
or
adcl
iret
lcall
arpl
push
jo
orl
push
mov
les
sub
push
insb
push
lea
das
popf
daa
sub
mov
sub
mov
push
mov
mov
xchg
jbe
jp
cmp
lock
or
in
rcrl
or
repnz
mov
cwtl
clc
jbe
shll
mov
and
scas
cld
adc
push
mov
addl
jle
push
dec
or
jle
es
jbe
int3
ljmp
mov
jbe
lods
push
dec
icebp
pop
subl
add
decb
sahf
mov
mov
pusha
cmp
add
mov
clc
mov
gs
movsb
jl
mov
mov
xchg
es
push
call
sbb
jo
sbb
fnsave
xchg
add
mov
mov
adc
insb
movl
mull
mov
mov
add
aaa
imul
insb
mov
test
cmp
enter
inc
cmp
add
adc
mov
sbb
adc
xchg
push
jge
jno
pushf
cmpsb
sti
fadd
mov
dec
mov
add
jnp
mov
sarl
leave
xor
icebp
jmp
xchg
rclb
xchg
insl
movsl
add
pop
mov
cmp
test
insl
and
mov
push
lds
xor
jae
pushf
push
pushf
adc
enter
sbb
adc
out
mov
in
cmc
cmp
jmp
repnz
sti
mov
pop
or
xor
push
jo
sti
lahf
mov
adc
leave
sbb
imul
fs
je
push
fwait
adc
cwtl
outsl
sbb
repnz
daa
shll
fs
pop
shll
mov
in
femms
outsl
sub
or
fs
or
addl
adc
aas
cli
clc
mov
pop
addr16
xchg
rclb
fwait
test
idiv
jl
test
call
int
mov
cmp
fidivrs
mov
xor
icebp
fmulp
cmpsl
leave
push
dec
ret
outsl
lcall
sub
imul
movsb
push
and
pushf
jg
lret
lcall
and
mov
les
pusha
xor
xor
lea
pop
pop
mov
test
pop
fs
stc
mov
or
xchg
pop
push
mov
aaa
cmp
jbe
sti
sbb
sti
xchg
or
sub
mov
push
iret
mov
ret
pop
and
fs
cmp
adc
dec
inc
adc
loopne
popf
mov
mov
popa
in
cmp
push
and
cltd
mov
insb
xlat
xchg
out
add
repz
xor
sbb
xchg
lret
inc
ds
jp
movl
pop
sbb
cmp
stc
outsl
jns
pop
dec
pop
iret
imul
test
jns
shrb
adc
cmp
jo
push
inc
pop
scas
mov
mov
cmpsb
sbb
in
outsl
jno
or
pop
sub
fidivl
nop
nop
add
pop
inc
xchg
xor
insb
sub
jnp
pop
cld
sbb
push
cmpb
mov
inc
jne
cmc
jecxz
adc
mov
out
and
xchg
push
push
xor
data16
and
scas
adc
jne
pop
repnz
pop
popa
in
cmp
les
jg
xchg
les
sbb
in
xchg
pmaxub
sbb
repnz
repnz
inc
jg
jnp
pop
out
ljmp
mov
mov
sarl
out
ljmp
ret
lea
mov
fistpl
push
sbbb
fdivp
aas
pop
test
sbb
mov
adc
mov
add
movsl
clc
pop
call
loopne
mov
cmpsb
pop
mov
cmp
mov
mov
or
mov
jnp
xchg
cmp
mov
scas
add
js
addr16
sub
loopne
cwtl
ret
push
test
xor
sti
push
loopne
out
mov
sbb
jns
cmpsb
push
mov
outsl
orb
push
faddl
jge
xor
push
push
rcl
aad
fadds
cltd
out
sti
test
xchg
pminub
push
mov
adc
ret
mov
sub
xor
cmp
push
push
push
push
in
out
fimuls
popf
movsl
leave
sub
outsb
wrmsr
mov
jo
pusha
adc
movsl
hlt
les
push
outsl
xor
es
int
iret
adc
cli
subl
mov
pushf
dec
out
sub
mov
inc
ja
or
inc
and
push
sbb
ja
adc
das
and
mov
cmp
cmp
mov
repnz
leave
ret
pop
cli
xor
lcall
add
fcoms
loopne
jmp
adc
aam
push
in
inc
lcall
mov
bound
mov
insl
andb
mov
mov
dec
stos
pop
cld
ja
ret
mov
mov
out
inc
jns
or
xchg
rorb
bound
cmpsl
and
insb
outsb
add
in
les
fst
add
ret
xor
movsl
add
in
in
mov
cmp
or
rcll
push
pop
xor
das
xor
cmp
clc
imul
sbb
xchg
aam
cmpsb
cmp
dec
outsl
push
jle
stos
idiv
movsb
cmp
xchg
int3
lock
xchg
nop
jge
es
jle
dec
mov
int
fistpl
loop
popa
repnz
rcll
cmpsl
dec
orl
adc
shlb
repnz
mov
xchg
adc
mov
cld
sti
sbb
cmp
jmp
push
int
test
jns
sbb
or
aaa
jbe
repnz
cmp
in
and
mov
ljmp
xchg
bound
div
cmovl
or
cmc
and
or
das
cmp
xlat
enter
lret
sbb
mov
repz
fldenv
xchg
mov
arpl
xor
fldt
jl
popa
adc
jbe
or
movsl
adc
shrb
popa
mov
cmp
lea
mov
loopne
mov
shl
sarb
jb
out
test
mov
dec
clc
mov
dec
and
insl
xor
cmp
xchg
mov
mov
movsb
cmp
push
dec
fisubrs
rcrl
rcr
push
inc
pop
pop
dec
inc
stos
fs
xchg
fildl
outsl
push
mov
dec
sub
ss
and
outsb
push
mov
int3
daa
adc
sub
out
pop
mov
frstor
and
xchg
fcmovbe
enter
lods
xchg
and
stos
jno
nop
jno
out
sti
dec
push
aaa
mov
mov
and
adcb
mov
scas
xchg
jecxz
and
adc
cmpsl
cli
inc
xchg
sbb
jecxz
mov
push
inc
inc
inc
lods
mov
mov
cmc
or
movsl
sarb
pop
ret
jmp
lock
mov
pop
jne
pop
mov
dec
adc
sub
hlt
xor
or
jl
mov
rcl
xorb
lds
or
add
jbe
clc
sti
popf
cld
cmp
mov
pop
pop
pop
cmp
loope
dec
je
lea
es
lods
or
jp
sub
pop
std
adc
mov
test
cmpl
movsb
in
dec
das
xlat
daa
pop
xor
pop
das
push
std
xchg
out
xchg
cmp
pop
mov
addb
lock
out
scas
sub
jp
pusha
int
lret
inc
jp
jnp
call
mov
inc
xchg
outsl
mov
test
rorl
cld
fbld
outsl
xor
out
rcr
in
incb
stos
rol
loope
fdivrs
lret
xchg
xchg
imul
ficoml
mov
nop
mov
sbb
pop
jo
out
dec
pop
inc
add
xchg
dec
inc
push
fs
popf
push
cmp
jb
push
mov
cld
mov
fdivrl
cmpsb
xchg
movsb
aas
fs
inc
push
movb
push
loopne
cmp
jle
neg
inc
movsb
test
pop
mul
mov
cwtl
pop
mov
out
dec
dec
scas
pop
push
pop
mov
sbb
jg
lret
scas
adc
stc
cmc
out
push
xchg
sub
adc
jmp
mov
sbb
pusha
adc
adc
cmp
and
push
ja
fldenv
jno
pop
jg
shl
mov
cmp
dec
cmp
into
push
mov
lret
mov
es
pop
inc
mov
or
rcl
pusha
shll
fwait
mov
inc
mov
mov
push
pusha
sarl
inc
cmp
loop
insl
xlat
testl
pop
mov
inc
aam
cs
out
pop
cmpl
mul
cmp
mov
ljmp
inc
jmp
adc
insl
loop
insb
xor
stc
push
dec
or
popf
sub
mov
pusha
fwait
xor
sub
ret
adc
imul
idivl
test
iret
inc
xchg
mov
cmpsb
fwait
cmp
cli
push
in
jle
push
sub
dec
jp
pop
roll
cmp
adcl
pop
sub
roll
sbb
dec
loop
or
fwait
in
insl
push
in
add
int3
rorl
mov
inc
push
adc
out
mov
inc
mov
out
xor
adc
mov
fldt
lods
ret
xchg
aam
or
or
jno
jbe
pop
jecxz
push
fmuls
lock
add
or
mov
fnstsw
sbb
xchg
out
js
lods
popa
or
aaa
popa
cmp
lods
and
cmp
out
lods
dec
push
jbe
dec
push
loop
adc
add
andb
pop
movsl
rorb
cmpsb
cwtl
mov
ljmp
ftst
mov
lock
daa
xchg
mov
movsl
xchg
mov
and
enter
jecxz
ljmp
and
sub
adc
mov
ud2
xchg
push
add
xor
and
cmp
int
and
push
mov
jecxz
push
xchg
arpl
cmp
jmp
pop
shl
inc
jo
pop
inc
pop
cli
pop
jmp
inc
test
cli
mov
mov
idiv
mov
mov
mov
push
xor
aaa
xor
mov
adc
lret
aad
xchg
insb
sub
or
iret
pop
or
fstpl
popa
lock
xlat
xchg
aaa
push
into
lcall
bound
xchg
ret
push
pusha
mov
push
mov
aam
pop
daa
mov
cmp
add
add
inc
lret
pop
test
mov
jmp
pop
jp
cmp
negl
adc
sub
pop
repz
push
cmc
fwait
popf
add
pop
xchg
sub
shlb
push
adc
push
xchg
std
pusha
jo
xchg
xlat
dec
push
push
sbb
sbb
fbld
jp
push
orl
dec
xchg
jmp
movntps
add
out
outsl
xchg
jae
adc
mov
xchg
lcall
xchg
dec
mov
dec
lds
es
add
mov
inc
xchg
push
mov
nopl
outsl
mov
pop
ljmp
sbb
scas
std
lcall
lds
jg
xchg
out
outsl
arpl
pop
add
popf
dec
push
inc
push
adc
adc
cwtl
push
faddl
pop
xor
rcr
fsts
imul
loope
arpl
or
pop
std
mov
cli
xor
pop
bound
xchg
sti
push
mov
in
je
push
pop
movsl
adc
mov
jbe
in
aaa
pop
shl
push
jae
lods
sub
insl
push
and
cltd
mov
in
pop
int
stos
aad
inc
mov
mov
movsl
adcl
lret
notb
mov
mov
dec
adc
lea
adc
sbb
ljmp
fucomi
or
and
int3
in
lds
js
dec
bound
into
add
bound
in
cmp
je
or
xchg
outsb
add
movsl
fwait
int
mov
lret
subl
cmpsb
das
push
mov
mov
and
pop
mov
cmp
outsl
or
jecxz
lahf
xor
loop
clc
cmpsl
add
lahf
pop
inc
push
cld
adc
in
sbb
aad
loopne
mov
mov
add
je
gs
jnp
movsl
push
call
push
sbb
jne
mov
mov
pop
xchg
xchg
inc
cmp
mov
cmp
mov
jp
cltd
clc
imul
xchg
mov
out
mov
ret
pop
or
mov
and
mov
adc
lods
push
aaa
cmp
outsb
dec
imul
in
bound
pop
scas
ljmp
jmp
jnp
inc
lods
stc
test
cmc
dec
sahf
shrl
adc
pop
dec
mov
bound
ja
jns
push
push
add
and
insb
cmpsb
not
into
add
mov
sub
es
movsl
gs
pop
inc
mov
xlat
mov
mov
fidivrs
dec
push
or
int3
dec
stos
pop
leave
mov
leave
js
out
lahf
out
push
cmp
mov
jp
jne
cli
push
and
imul
repnz
cmpsl
sbb
xor
xchg
and
test
sbb
push
mov
repz
aas
pusha
test
sbb
sti
repnz
adc
in
mov
aas
push
das
cmpsl
call
pop
jg
sub
cmp
dec
mov
test
sbb
fiadds
aam
shll
adc
and
inc
jg
mov
out
mov
mov
or
mov
and
mov
imul
pop
insb
mov
and
jb
lcall
and
cmc
add
add
into
scas
pop
and
lods
mov
fcoml
icebp
or
out
mov
jge
xchg
pop
insl
cwtl
imul
xchg
add
jp
mov
lret
sub
cli
in
addb
cli
jo
xor
inc
mov
push
ficoml
adc
dec
or
jb
ja
aaa
mov
test
sub
jbe
out
add
adc
nop
push
cmpb
cmp
popl
xchg
jae
es
dec
repnz
rcrb
lret
mov
xchg
mov
addr16
pop
xchg
add
adc
es
outsl
push
pop
clc
scas
mov
inc
add
sbb
inc
pop
mov
sbb
les
sbb
in
mov
or
inc
push
stos
cwtl
xor
mov
subl
fdivs
add
pushf
movsl
sub
test
sbb
in
lds
add
jae
jnp
and
push
or
xor
xchg
lods
jg
std
jg
pop
push
ret
inc
pop
or
sbbb
out
cmpsb
push
call
add
ds
clc
aad
cld
cld
xchg
lret
push
push
lgs
ja
aaa
adc
mov
lods
stos
scas
xchg
mov
pop
imul
adc
std
aam
xor
and
and
test
jp
sahf
pop
loopne
adc
lea
into
or
jmp
ficoml
das
sbb
xchg
scas
or
cs
aam
push
xor
pushf
or
adc
mov
cmp
mov
dec
adc
fwait
pop
addr16
adc
jb
addr16
sub
adc
inc
jbe
xor
test
test
fidivrl
clc
push
and
fisubs
mov
js
leave
xchg
sbb
repnz
push
xchg
dec
aad
jo
loop
adc
sahf
add
into
mov
mov
dec
stos
enter
inc
addr16
push
or
aas
je
xor
mov
sti
adc
jo
xchg
cld
mov
push
loop
add
add
hlt
icebp
push
mov
mov
xorl
or
lds
xor
jmp
pop
add
je
fwait
shlb
dec
lahf
lock
loope
add
clc
js
inc
and
ja
xor
sub
or
in
ret
add
popl
rcrb
push
cmp
sbb
sbb
scas
and
or
aas
insb
jb
xchg
sbb
sub
jge
jo,pt
scas
dec
push
inc
push
cmpsl
dec
sahf
inc
fcmovb
je
xchg
lods
push
add
idiv
shll
cld
push
sbb
add
adc
and
adc
jnp
fisttps
pop
dec
sbb
pop
fidivrl
adc
mov
xlat
push
out
ffree
add
and
jecxz
outsl
repz
sub
cwtl
cmpl
arpl
lods
out
inc
out
pop
fs
adc
lods
mov
mov
mov
ret
sub
mov
mov
add
xor
in
mov
aam
inc
push
cld
add
lret
fldl
pop
sub
mov
sahf
ret
jmp
add
addr16
pop
cli
fidivl
jmp
into
inc
jo
fwait
cld
mov
adc
mov
dec
rcrb
insl
ja
xor
lods
imul
dec
add
pop
or
popf
cmp
dec
jmp
adc
ret
fsubr
test
out
rep
cltd
lods
es
test
loop
cld
clc
adc
mov
dec
adc
mov
repz
cmp
sub
cld
mov
leave
repz
rol
adc
or
fcomip
sbb
test
dec
xor
aas
int
loopne
mov
sub
cld
xchg
aam
rorb
out
mov
mov
fadds
aad
fwait
sbb
pop
in
scas
fwait
inc
add
loopne
fxch
cmpsl
sub
jecxz
xlat
out
ljmp
sbb
push
adc
lahf
iret
out
and
push
and
shrb
add
jo
xor
in
out
scas
lea
in
sahf
cmpl
push
sub
xchg
fcoml
ret
cmp
cwtl
inc
ja
test
cmpsb
adc
xor
in
jg
push
push
mov
sub
add
push
std
stc
cwtl
mov
pop
lock
cmp
ret
cmp
test
out
fadd
xchg
inc
push
popf
xor
mov
and
push
ficoms
scas
sbb
xor
callw
and
mov
mov
repz
jo
mov
mov
mov
fs
ret
mov
inc
jno
mov
pop
xchg
sbb
jmp
pop
daa
stc
loop
mov
or
outsb
mov
jo
aam
mov
mov
jo
call
mov
and
inc
dec
mov
imul
xchg
outsl
mov
dec
mov
inc
inc
mov
rorl
cmp
sub
rcrl
imull
sahf
jns
lret
aas
rcll
cltd
lret
shl
push
mov
out
mov
cmpsl
dec
mov
loopne
packsswb
pusha
cli
leave
popa
cwtl
jne
push
dec
mov
mov
lcall
lcall
int3
arpl
push
aas
push
xor
mov
xor
in
inc
pop
sbb
push
lret
or
shrb
gs
pop
pop
add
inc
mov
mov
bound
insl
jge
push
add
inc
int3
mov
sbb
rcrl
and
in
pop
pop
jg
es
sub
or
push
inc
push
add
dec
xor
xchg
mov
fidivs
jns
orl
push
mov
fistpll
mov
insb
fwait
insb
into
jecxz
pusha
aam
pop
lcall
fidivrs
inc
roll
sbb
test
int
les
mov
cs
mov
mov
je
daa
jo
fsubrl
aad
inc
out
sub
shrl
or
dec
scas
inc
cmc
fucomp
mov
push
mov
cmp
mov
push
fs
mov
lahf
filds
dec
das
mov
pop
mov
in
pop
xchg
sbb
loopne
cmp
cli
mov
xor
sbb
repz
hlt
ss
push
xlat
insl
imul
sub
cli
stos
dec
int3
sbb
sbb
cmp
sub
xchg
xor
in
inc
cmp
jecxz
mov
cmp
dec
decb
aaa
imul
in
mov
xlat
xor
fbld
xchg
loopne
mov
sar
inc
mov
jg
lods
inc
mov
je
fucomip
jmp
xchg
addl
mov
sar
sahf
push
adc
jbe
pop
in
aas
inc
mov
push
hlt
ds
mov
pop
shll
sbb
jns
js
cmp
std
ja
test
mov
hlt
mov
cmpsl
les
dec
jle
cmp
push
jne
aam
sub
cwtl
lret
cmpsl
sub
lahf
orb
jecxz
mov
mov
inc
rcr
mov
in
dec
cmp
mov
jne
js
lcall
cmp
mov
jae
hlt
cmc
sub
ficoml
out
pushf
fistl
movhps
insb
xor
rclb
jb
mov
repnz
insb
and
xor
ds
das
ficomps
nop
rcrb
out
in
mov
addr16
stos
mov
iret
push
test
jne
fwait
xlat
cmp
xor
sbbb
mov
xchg
mov
daa
push
jp
enter
or
mov
js
jo
sbb
mov
sarb
hlt
stc
push
stos
int
data16
ljmp
jae
cltd
pop
mov
jg
insl
dec
and
mov
loope
imul
sbb
cmc
cmp
aam
enter
gs
add
scas
lret
lea
cmc
or
mov
int3
inc
out
jb
repnz
and
sbb
sub
cmpsl
mov
sbb
pop
dec
sbb
stos
rorb
mov
mull
sub
stos
xchg
dec
jns
dec
ror
push
cmp
mov
jne
andb
div
pushl
mov
loop
cmp
repz
fimuls
inc
or
out
sub
out
shl
cwtl
mov
cmpl
jg
pop
in
xchg
mov
sarb
lahf
mov
int
jge
jg
sarb
setns
add
call
fldenv
jmp
jo
movsl
xor
mov
daa
fbld
stos
fwait
add
pop
push
cmc
cld
mov
add
imulb
xlat
call
mov
popf
test
js
jns
xchg
inc
adc
add
and
fadd
fistpll
mov
pop
inc
mov
btc
xchg
sbbb
mov
or
cmp
xor
ss
out
negl
jbe
stos
sub
push
xorl
pop
inc
fisttpll
gs
icebp
dec
mov
pop
xorl
into
sub
pop
je
lods
ss
sbb
xor
rorb
adc
es
add
in
lahf
testl
dec
int3
xor
imul
push
cltd
ja
in
xchg
adc
push
jo
pop
cmpsb
cwtl
repnz
pop
sbb
loop
add
add
iret
test
push
xlat
cltd
sahf
pop
jae
pushf
aad
sbb
sbb
and
ret
out
int3
push
xor
cmpsb
ja
add
movsb
and
mov
std
xchg
addr16
popa
insb
repnz
lods
xchg
insl
fstpl
sbb
xchg
notb
ret
mov
orl
ss
dec
pop
add
hlt
fmuls
hlt
sbb
out
addl
jnp
lret
jnp
push
adc
add
mov
divb
push
lea
std
inc
xor
test
sbb
out
bt
popf
dec
cmp
loopne
push
push
jne
int3
cmp
movsb
cltd
sub
inc
jae
pop
leave
andl
lret
clc
repz
and
fisubl
ds
cmp
repz
sti
wbinvd
xor
loope
repnz
ljmp
andb
rcll
out
push
or
jg
les
jecxz
adc
int
stc
pop
pushf
movsb
jb
lds
mov
xor
or
into
andb
sbb
js
sbb
pushf
lods
dec
pop
repz
lret
enter
popa
sub
pop
push
cmc
or
in
dec
add
aad
or
icebp
lahf
sbb
xchg
lea
mov
sub
mov
push
test
mul
cmp
pushf
pop
dec
jbe
and
mov
or
jp
add
outsb
adc
sbb
sbb
pop
xchg
mov
push
adcl
jmp
popa
arpl
aad
cmp
push
or
js
pusha
mov
in
movsl
mov
icebp
ljmp
jno
jno
inc
cs
cmp
imul
pop
cmpsb
rcrl
push
mov
jecxz
out
sub
push
pop
dec
sarb
sub
or
jnp
inc
and
sbb
outsb
int
jmp
rolb
roll
mov
and
fmuls
xchg
xchg
pushf
adc
jge
fwait
cmpsl
ljmp
sti
inc
dec
mov
add
fstpl
xchg
leave
ffreep
imul
fs
add
sbb
cmpsl
les
push
mov
add
or
xchg
add
icebp
lcall
cmp
pop
jg
cmp
dec
das
or
jno
xchg
pop
faddl
pop
jecxz
test
jb
lock
data16
std
aas
push
cmp
imul
and
lods
in
scas
xchg
push
push
rol
popf
test
and
stos
inc
aas
cmp
fs
lahf
push
fimuls
adc
imul
xor
mov
pop
inc
fs
jbe
and
stos
movsl
and
inc
push
imul
adc
repnz
add
cpuid
std
mov
in
cmpsb
xchg
loopne,pn
movsb
negb
addb
mov
js
negl
cmpsl
mov
popa
inc
sub
subb
movb
mov
mov
or
aas
adc
xor
cmp
leave
ret
add
jmp
cmpsl
aas
inc
arpl
jbe
imul
dec
mov
ja
sub
inc
sbb
pop
cmp
dec
mov
xchg
add
pop
xlat
inc
push
orb
mov
rolb
adc
loope
dec
scas
popa
push
frstor
mov
nop
insl
shlb
leave
addl
add
cwtl
stos
xchg
adc
jb
ret
mov
ret
fimuls
aam
or
test
or
stc
test
push
sbb
ret
mov
mov
xor
jp
add
fistpl
std
push
in
std
iret
xlat
fldt
idivl
xchg
dec
sub
imul
call
mov
sarl
cli
and
and
stos
fsubl
scas
push
push
lds
jno
sub
stos
loopne
popa
es
sub
std
jne
jnp
mov
cmp
add
mov
mov
sub
jnp
mov
rclb
mov
dec
mov
inc
test
mov
dec
in
pop
xchg
dec
push
cmp
aaa
leave
xchg
xchg
pop
push
cmp
sbb
outsb
cli
leave
push
cmp
movsb
mov
mov
add
push
int3
orb
fcmovu
dec
lock
xchg
add
mov
or
push
xchg
stos
mov
mov
or
stc
xchg
add
mov
movsl
loop
mov
stos
or
push
inc
sub
inc
movsl
icebp
inc
jbe
scas
ds
or
test
popf
mov
arpl
push
sbb
mov
push
xchg
insb
stos
cmp
lret
push
clc
mov
daa
or
lret
stos
sbb
lahf
sub
stc
mov
dec
sbb
jns
sub
push
push
jb
add
ret
clc
cmp
outsb
in
fcoml
sbb
stos
and
mov
lods
adc
mov
movsl
mov
jnp
test
jnp
lea
xor
and
lret
ret
pop
clc
pop
and
pop
cwtl
sub
popf
xor
dec
mov
add
shlb
mov
push
push
mov
push
stos
push
les
or
mov
xor
cmc
cmp
sub
lods
and
int
aam
mov
sarl
cmp
arpl
test
ss
jns
loope
movsb
cli
inc
and
pop
call
inc
filds
testl
ja
fsubl
jmp
nop
sub
lret
testl
ret
dec
shl
rol
mov
cmp
pushf
dec
mov
jbe
sub
and
addr16
xchg
jmp
mov
ljmp
push
or
iret
push
stos
xchg
ja
daa
aam
cmpsl
popa
xor
dec
mov
xor
adc
or
std
out
pop
or
dec
das
hlt
mov
mov
xlat
add
in
xchg
adc
jp
sbb
inc
int
push
subb
clc
mov
idiv
inc
mov
es
call
clc
fwait
inc
rcrl
data16
add
pusha
std
xchg
daa
sbb
shrb
xchg
js
pop
out
pop
xchg
xor
or
loope
dec
in
jbe
pop
les
mov
jg
imul
jecxz
jns
gs
decb
mov
cmpsl
cmp
jmp
cmp
mov
and
out
outsl
push
push
out
or
repz
lds
adc
jno
pusha
out
mov
push
imul
or
cmp
sbb
rolb
and
xchg
mov
pop
sti
and
loope
xchg
pop
push
inc
cs
pop
inc
sub
es
lret
inc
cld
ja
stos
mov
outsb
fstl
std
mov
scas
cmp
mov
dec
lcall
or
pop
lods
mov
lret
ficoms
xor
mov
fbld
icebp
sahf
jae
in
mov
call
dec
stc
sbb
insb
into
inc
xlat
inc
adc
pop
lods
push
pushf
enter
loopne
xchg
std
or
fadd
mov
stos
jns
pop
fstpl
imul
mov
rclb
outsb
jl
mov
enter
std
test
add
lret
dec
lret
bound
insb
push
rcll
mov
int
cmp
in
mov
das
sub
mov
mov
cmp
sbb
jg
in
sub
push
aas
mov
mov
xor
repz
enter
aas
and
mov
cmp
push
push
or
rolb
dec
add
xchg
cli
and
xorl
add
mov
in
or
inc
cmpsb
mov
fcmovnb
aas
clc
push
icebp
nop
daa
xchg
lock
stc
or
inc
jg
mov
rorl
jg
std
fnstsw
push
jge
ficoms
mov
sbb
ja
imul
xchg
mov
test
or
pusha
push
cld
insl
mov
std
push
addr16
stc
xchg
add
orl
inc
ret
mov
cmpsb
es
mov
lret
and
insl
call
das
cwtl
inc
bound
es
scas
and
jp
fs
mov
xlat
mov
mov
clc
loop
pop
cmp
popf
adc
test
mov
sbb
in
mov
pop
adc
stos
and
add
repz
mov
sti
negl
cmp
repz
jne
das
mov
dec
add
gs
popf
arpl
add
pop
push
sub
push
dec
jbe
xor
and
ljmp
loop
or
or
dec
leave
loope
and
inc
sahf
cmpsl
cli
shl
daa
push
jo
lret
ret
add
jecxz
js
inc
cmp
dec
pop
cmp
leave
cwtl
jne
pusha
push
jnp
fistpll
xor
lock
xor
jg
sub
mov
out
fst
cmp
inc
jnp
cmpsb
mov
dec
ja
jo
insb
mov
cmpsb
jno
pop
pusha
and
jnp
dec
sub
mov
jno
stc
daa
mov
insb
sub
xor
cld
nop
push
pop
jge
or
xchg
cwtl
cmpsl
fnsave
dec
mov
cs
test
ja
mov
push
pop
pop
fdivl
inc
sahf
pop
mov
xor
iret
jns
xor
jle
loope
outsb
dec
cld
cmp
lods
jmp
push
mov
pop
xchg
jl
hlt
shrl
gs
sub
mov
push
jmp
sub
insb
mov
mov
lock
sub
push
dec
pop
push
hlt
or
out
inc
lods
adc
fsubp
scas
cltd
and
sbb
ffree
es
adc
cmp
sub
jp
and
or
sub
in
xor
sti
add
mov
sbb
bound
mov
push
add
cwtl
inc
cmp
es
and
in
jl
mov
xlat
jg
into
repz
jnp
shrl
and
xor
pop
inc
jns
mov
inc
popf
mov
popf
and
shll
cmpb
jne
out
fisubrl
pop
inc
dec
jae
decb
aas
int
in
test
sti
sbb
mov
test
adc
outsb
add
push
loop
fistl
jbe
xchg
mov
arpl
xor
cld
xchg
sbb
and
adc
fldcw
inc
jg
imul
xor
ljmp
push
pop
push
mov
enter
mov
fidivrl
test
inc
mov
inc
jbe
movsl
cmp
push
mov
push
les
xchg
rolb
ljmp
jnp
dec
mov
std
out
mov
xchg
popf
mov
mov
mov
bound
loope
rcrl
idivl
bnd
dec
pop
fistpl
aad
dec
sub
lahf
and
xor
push
stc
xor
push
add
enter
js
into
sarl
loopne
cmp
mov
sbb
outsb
dec
push
xchg
aad
pop
inc
and
fldenv
xchg
pop
push
in
cwtl
lcall
add
mov
and
add
xlat
insl
test
sti
xchg
lret
popl
push
ljmp
jge
fdivs
jmp
mov
inc
push
mov
dec
shrb
lock
pop
fwait
adc
out
popf
repz
arpl
mov
mul
in
cmp
clc
lods
test
xorb
ret
push
faddl
popa
cmp
push
jbe
ds
sub
adc
xchg
mov
in
or
pop
pusha
and
adc
jmp
scas
jbe
addb
pop
lods
push
outsb
inc
fwait
sahf
iret
lret
clc
movsb
jl
mov
pop
cmp
stc
pop
jne
aaa
fwait
pop
or
xor
sahf
cld
sbb
pop
stos
mov
pop
mov
rcl
pop
jo
push
push
dec
in
dec
sub
lret
scas
add
popf
fisubs
loopne
pop
adc
dec
jle
mov
into
aaa
jnp
stc
fsubr
mov
in
pushf
dec
cmp
adc
mov
sub
mov
icebp
push
xor
add
cmp
ror
pop
test
mov
sbb
and
mov
repz
push
movsl
aam
imul
add
leave
mov
sti
cmpsb
mov
push
sbb
xchg
cld
or
cmp
xlat
movsb
or
scas
mov
out
and
push
cld
mov
sti
mov
jp
dec
rcll
out
lods
add
sub
mov
int
push
jge
imul
movsl
and
mov
xchg
mov
dec
jb
test
mov
ljmpw
fs
ret
stos
cmp
jns
ss
pop
rcrl
cmpsl
mov
in
into
jmp
push
sarl
leave
shrl
mov
adc
gs
sbb
xchg
setne
jg
xchg
fwait
pop
jecxz
xchg
imulb
scas
add
sub
stos
mov
loope
repz
lcall
xor
cmp
mov
ss
sub
in
and
fdivrl
les
xor
fistps
or
daa
sbb
dec
fnstenv
cmp
out
mov
ds
ret
and
repnz
jg
in
insl
in
loopne
stc
scas
hlt
ret
loope
and
cmp
stos
mov
cmp
pop
dec
fisttpll
push
clc
repnz
add
cmp
inc
int
sbb
sarl
add
jp
push
wrmsr
jp
into
mov
dec
daa
outsb
xor
dec
inc
inc
jbe
into
push
mov
adc
lahf
data16
fnstenv
outsl
xchg
ds
cmp
dec
mov
sub
inc
sbb
test
test
inc
mov
and
mov
push
push
xor
or
jecxz
test
test
imul
pop
xchg
subb
rorb
pop
test
inc
sbb
adc
mov
punpckhwd
inc
adc
scas
adc
loopne
sbb
popa
and
dec
jns
mov
orl
mov
mov
xchg
xor
jo
outsb
lcall
mov
or
push
adc
movsb
fcmovne
cmp
sar
xor
loopne
mov
dec
dec
dec
fmul
aas
shll
jae
sbb
push
jbe
cmp
fs
cs
movsl
je
mov
lret
fisubl
daa
jl
add
loop
push
cmp
push
mov
lcall
push
push
mov
adc
into
pop
lret
mov
jg
cmpsl
dec
sub
cmpsl
in
mov
xor
shl
lret
jmp
std
cmpsb
lcall
jp
ljmp
enter
je
pop
dec
push
inc
xchg
mov
mov
push
jle
mov
dec
scas
cmpsl
mov
adc
push
fsub
insb
jg
lods
mov
addb
loop
xchg
lcall
cmpsb
xchg
dec
pop
pop
inc
movsl
lods
jnp
imul
sub
dec
loopne
jp
enter
pop
mov
div
pop
cmp
leave
hlt
adc
ds
popa
icebp
inc
mov
mov
fcomps
sti
aas
xor
int
mov
shlb
ljmp
fnstsw
mov
pop
xchg
iret
dec
shld
mov
inc
cltd
jle
mov
push
jne
iret
pop
aam
dec
xor
add
cmp
and
cmp
repz
dec
cmp
mov
sub
movl
push
jmp
decb
sahf
imul
fdivp
scas
test
ljmp
imul
insl
xchg
decb
mov
insb
mov
outsb
jne
xor
imul
into
ficoml
jmp
push
jmp
das
inc
imul
ja,pt
rorl
or
mov
mov
sbb
push
or
aas
push
adc
xchg
dec
ss
xchg
jl
enter
int
cmp
dec
cmp
rcr
adc
mov
enter
es
sbb
mov
sbb
mov
iret
outsb
dec
jns
inc
xor
inc
js
and
cmpsl
pushf
push
sbb
mov
xchg
aas
lahf
push
rcl
fldl
inc
movsl
mov
ss
daa
dec
xor
sarl
sarl
sbb
xchg
orb
std
jecxz
push
adc
xchg
filds
xor
fldt
ret
and
mov
or
bnd
mov
loop
sti
or
icebp
cwtl
idiv
rcll
js
dec
ret
mov
jbe
mov
and
cmc
aas
fcomps
stc
jbe
add
sti
or
movsb
hlt
lcall
add
inc
mov
sub
cmp
fisubrs
lcall
lock
push
pop
rolb
insb
ret
xchg
push
loope
sbb
loop
pushf
or
xor
inc
pop
or
mov
int
dec
add
ret
sbb
cmpl
data16
movsl
popf
fisubrl
imul
xchg
fisubs
cld
out
mov
test
push
pushf
sti
fdivp
into
or
pop
and
push
inc
jne
mov
or
mov
and
inc
je
sahf
xlat
pminsw
cmpb
mov
jp
adc
mov
inc
push
and
popa
je
xchg
aam
mov
hlt
mov
stc
movsb
and
out
cmp
in
daa
ja
adc
jno
imul
mov
mov
cs
loope
and
jle
mov
ja
daa
inc
or
or
loope
fldt
xor
pop
insb
xor
jg
sahf
cmp
into
push
jp
or
cld
mov
and
loopne
and
jb
rorb
mov
shll
test
xchg
xchg
in
enter
and
sarb
or
xor
mov
notl
cmpsl
adc
dec
fadd
sarl
scas
mov
mov
mov
stc
dec
sub
jp
pop
std
pusha
daa
mov
dec
in
mov
int
popa
fildll
repz
cli
mov
mov
cmp
pop
icebp
push
adc
cmpsb
fxch
xor
jecxz
rcrb
jmp
jle
inc
jp
rcll
push
outsb
mov
dec
add
pushf
cmc
lods
xchg
ss
inc
pop
lods
mov
idivb
ja
mov
push
or
dec
xor
cmp
incb
jmp
mov
inc
cmp
push
and
dec
movsb
rorb
pop
or
cmc
push
icebp
xchg
je
popa
sahf
fsubs
cmpsb
xor
stos
push
movsb
mov
dec
jne
ret
cmp
xor
les
inc
mov
mov
jb
push
pop
leave
cltd
jnp
sub
idivb
rol
mov
xchg
lahf
fists
bound
std
sub
in
pop
sti
mov
gs
and
sub
movsl
out
push
inc
shrb
ds
pop
push
test
dec
sbb
mov
movsb
cltd
addr16
dec
arpl
cmpsb
jl
cltd
add
or
xorl
jge
mov
hlt
ds
out
outsl
or
mov
ret
xlat
push
mov
and
leave
or
dec
mov
leave
mov
imulb
out
loope
mov
lods
mov
out
mov
cmpb
jp
push
mov
stos
js
rolb
jecxz
pop
imul
lods
cmp
and
into
mov
dec
xchg
mov
ljmp
int3
fsubl
and
ljmp
mov
in
fcomps
ss
cld
mov
cmp
fldl
sbb
es
xor
lods
loope
mov
xchg
aam
cmc
data16
and
push
jge
cli
mov
xchg
add
pop
stos
xor
inc
jb
jns
ja
sbb
subb
xchg
jnp
daa
xor
shlb
xchg
jmp
shl
lds
je,pt
mov
shlb
xor
mov
sub
sarb
jno
sub
xchg
into
and
int3
das
and
add
adc
mov
rcr
pop
outsl
cmc
xchg
pop
shrl
icebp
sbb
test
xlat
mov
inc
mov
xchg
adcl
inc
shr
dec
aaa
icebp
jns
pop
xchg
fadds
pusha
idiv
addr16
aam
mov
cmpsl
mov
dec
fisubrs
loop
xor
ds
xor
fs
cmpsl
sub
jp
sub
punpcklwd
or
adc
mov
mov
cli
mov
pop
jae
mov
xchg
mov
push
pop
scas
or
stos
rorb
fwait
jo
add
cld
fwait
popf
pop
push
inc
xchg
xchg
faddl
inc
lods
jmp
sahf
add
cmp
mov
loop
push
int
popf
sahf
lea
scas
or
pop
pop
xchg
dec
stc
ljmp
aam
mov
sbb
add
jge
fbstp
cmp
inc
jp
mov
repz
push
push
or
mov
lret
outsl
imul
add
cmp
lods
adc
mov
pop
sti
dec
into
inc
aam
mov
sbb
sbb
add
inc
loope
pop
jno
sub
xor
enter
push
pop
mov
shlb
ret
movsb
and
insl
inc
and
xchg
repz
mov
push
bound
addl
fcoms
in
test
fsubl
inc
xor
xor
cmc
scas
lret
lcall
or
in
int
cld
iret
cmp
push
leave
dec
lods
xchg
jecxz
rcrl
dec
pop
sub
or
xor
mov
ds
fisubs
outsl
cmc
inc
lret
loop
dec
jne
dec
jecxz
fildl
add
adc
dec
sbb
jl
dec
pop
mov
push
cltd
and
jl
xchg
test
push
cmc
fnstsw
push
ljmp
mov
clc
movsb
movsb
push
pop
mov
and
dec
cmp
pusha
and
dec
fcompl
xor
lcall
xchg
inc
fildll
sub
mov
jp
sbb
pop
sbb
push
dec
inc
enter
repz
dec
jb
cmp
sub
ljmp
jns
mov
ja
int
iret
test
mov
cwtl
cmpsb
xchg
daa
shll
in
shll
data16
xor
daa
push
sub
das
imul
clc
cmpb
pop
stos
lret
int
adc
jns
das
stc
mov
mov
mov
sbb
fdivs
mov
shr
mov
jg
out
dec
sbb
sarb
xor
xchg
es
mov
stos
add
add
dec
stc
dec
and
mov
jns
sbb
inc
movsl
xchg
popf
loopne
mov
inc
cmpsb
pop
ljmp
or
repnz
adc
add
cs
fwait
stc
sbb
shr
das
inc
sbb
in
dec
xchg
std
data16
nop
sub
dec
sahf
mov
and
fbld
jno
rcrl
push
lahf
fnstsw
and
rcrl
gs
fcmovne
cmp
cltd
xor
aaa
fcoms
and
xchg
inc
jle
in
test
fs
jp
push
sarb
fcmovnbe
stc
insl
popa
dec
inc
add
xchg
int
setle
movsl
dec
mov
inc
ljmp
push
sub
inc
pusha
fsubs
popf
outsl
add
int
add
addr16
inc
stos
rcrl
mov
jecxz
dec
or
sub
dec
mov
sbb
mov
mov
and
enter
pushf
je
cmp
ret
push
cmp
icebp
cmpsl
sub
lock
mov
ds
test
popf
mull
jl
mov
xchg
cmp
rorb
sar
movsl
lock
lds
loopne
cmc
push
nop
call
push
loop
dec
negl
out
mov
lds
push
lcall
test
mov
lea
sahf
pop
ss
xchg
loopne
cltd
sti
aaa
mov
lret
mov
loopne
push
mov
cli
and
adc
sbb
mov
or
rorb
sarb
hlt
frstpm(287
mov
arpl
movsb
fmuls
ja
xchg
cmp
sbbl
cwtl
into
push
and
sarb
arpl
sahf
in
inc
push
mov
or
clc
and
into
fisubrl
or
pop
push
pop
icebp
and
loopne
xor
dec
xchg
add
xchg
out
or
mov
lret
into
outsb
dec
push
cmp
jmp
add
add
rorl
push
and
ja
les
or
rcr
insl
jge
les
xlat
and
xchg
roll
push
xchg
leave
push
mov
jne
jo
mov
fwait
insb
jg
inc
insl
hlt
ret
frstor
arpl
xlat
nop
mov
push
ror
push
loope
mov
adcb
mov
in
sub
push
fs
rorb
daa
divl
insl
pop
sub
lods
or
call
mov
add
and
xor
cltd
call
call
lock
cmc
subl
add
mov
pop
push
aas
jno
pop
retw
sub
ss
popa
enter
jno
jae
in
ficompl
inc
je
inc
and
lcall
fstpl
fcmovnbe
inc
lcall
insl
xchg
fistl
ror
jne
sahf
iret
mov
test
dec
add
scas
or
aad
and
out
popf
push
mov
insb
push
or
sbb
out
ja
out
push
mov
add
jp
cmp
sub
stos
rsm
test
and
sahf
aam
inc
jne
fisubrl
out
or
or
xchg
js
cwtl
push
lock
fwait
ss
addb
pop
fadds
iret
fidivrl
add
bnd
dec
push
or
test
outsb
mov
jns
pop
leave
pop
or
cmp
out
jne
out
imul
cli
fisttpl
js
arpl
mov
daa
mov
fstpl
clc
test
mov
adc
mov
call
mov
inc
xchg
push
cwtl
push
sahf
cmpsl
movsb
push
add
addr16
gs
mov
jnp
jno
in
and
push
popf
cmp
stos
or
sbb
test
ret
sbb
add
dec
push
js
daa
xadd
add
or
test
xor
xchg
mov
bound
repz
mov
outsb
leave
cmp
mov
pop
aas
jb
cmp
and
lret
aas
cltd
dec
aam
loop
and
sbb
scas
test
out
mov
imul
sbb
push
dec
insb
xchg
cwtl
xchg
faddl
out
inc
mov
mov
mov
xor
add
mov
cli
dec
jne
mov
iret
jns
sbb
push
push
lret
cmp
inc
jo
mov
test
or
dec
dec
push
mov
adc
inc
cld
gs
sti
and
stos
daa
cmp
pop
adc
repz
repz
mov
pop
mov
cmpl
imul
lea
mov
mov
sbb
add
sbb
jmp
inc
repz
lock
xchg
dec
dec
imul
xor
fisubs
test
cmp
mov
inc
mov
sbb
jecxz
dec
mov
dec
jbe
dec
fwait
movsl
cli
xchg
addr16
jg
inc
lock
mov
int
mov
test
dec
sti
out
xchg
in
push
xor
mov
add
or
push
xor
pop
repnz
lods
rorb
lret
sub
mov
sub
mov
aam
lods
scas
or
ficoms
ret
or
jmp
pusha
and
lahf
cmpsl
gs
xchg
imul
adc
daa
mov
and
sarb
and
pop
adc
popa
push
daa
jne
bound
sarb
ljmp
cs
xor
shll
divb
in
push
int
inc
bnd
or
pop
adc
add
cltd
and
addl
pop
in
and
pop
pop
into
nop
jbe
push
out
mov
shlb
jo
mov
mov
sbb
xchg
test
data16
sarl
ss
or
mov
cmpsl
lcall
ja
push
mov
mov
std
clc
aaa
mov
jl
sbb
loop
mov
dec
aad
ds
add
in
aam
addl
add
push
out
dec
jle
xchg
inc
cmpsl
aas
mov
cmp
js
dec
call
in
test
es
or
xchg
enter
xor
in
xor
fnop
pop
lcall
jno
adc
push
cli
fcmovb
pop
jg
cli
pop
out
push
addr16
or
sub
dec
test
or
into
ss
ret
leave
ret
bound
mov
mov
adc
movsb
inc
jecxz
jae
or
mov
ljmp
imul
insb
int
adc
sbb
mov
jno
lret
sbb
adc
sti
je
inc
xor
popf
xchg
out
mov
adc
pop
rclb
repnz
push
scas
pop
mov
cmp
or
jle
in
repnz
in
sbb
pop
push
jbe
fidivrs
mov
addb
dec
es
arpl
mov
lods
int
es
and
jmp
ss
jmp
out
adc
xor
shrb
popl
ds
cltd
ret
xor
dec
adc
sti
jle
inc
adc
mov
mov
mov
fwait
subb
icebp
and
jb
cmpsl
leave
lea
daa
shl
lcall
cltd
lea
bsf
aam
std
cmp
mov
mov
add
dec
loope
sub
jne
sbb
rcrl
adc
outsb
mov
test
arpl
ret
or
loop
fsts
jg
shll
adc
fstl
jae
fcoml
mov
cmp
push
sbb
daa
leave
or
lret
shrl
fcmovbe
cmp
dec
insb
je
fs
roll
inc
mov
int
and
mov
popf
inc
push
mov
imul
jp
outsl
outsb
shll
cmp
sahf
nop
cltd
nop
adc
push
out
or
or
imulb
inc
out
jns
sbb
mov
inc
sbb
mov
movsl
es
pop
cmc
aad
mov
aas
mov
data16
pop
mov
ljmp
les
out
mov
jg
add
or
mov
push
mov
cmp
pop
push
jp
test
test
test
int
imull
mov
and
cmp
xchg
inc
ja
inc
clc
daa
aad
scas
pop
das
dec
jge
xlat
pop
push
pop
stos
sti
lcall
mov
rcrl
adc
cmp
adc
jae
cld
inc
gs
je
mov
and
push
inc
push
cli
sub
mov
inc
movb
mov
test
stos
test
mov
lret
gs
pop
in
pusha
mov
and
or
jae
icebp
aam
inc
jb
jne
push
fsubl
inc
shrb
cli
xchg
ja
aas
imul
mov
sahf
sub
rcll
dec
xor
cli
push
lcall
es
adc
inc
ficompl
xchg
push
pop
mov
pop
test
add
loop
sti
daa
mov
adc
outsb
mov
xchg
sub
stos
cmc
dec
stos
push
sub
daa
es
fistpl
xlat
pop
xlat
mov
fs
scas
mov
and
dec
sahf
cmp
daa
sub
pop
sub
dec
rol
add
cmpsl
push
lret
loope
popl
out
ljmp
and
sub
lcall
mov
subb
in
jae
push
inc
mov
or
sahf
cmp
jne
loope
fadds
add
add
loope
push
push
push
cltd
and
mov
add
pop
mov
stc
pop
popf
int
ret
mov
lods
inc
outsb
fadd
mov
int3
je
push
jge
outsb
jb
mov
ja
xor
push
mov
pop
outsl
repnz
cmpsb
daa
mov
popa
lea
shll
xchg
or
inc
inc
inc
xchg
sbb
fdivrs
insl
lret
shlb
leave
lret
mov
int
jg
pop
jb
jge
fistps
sub
fnsave
cmp
xchg
ja
out
lret
add
pop
mov
sub
sub
jne
pushf
hlt
pop
les
or
inc
jmp
jae
dec
int
xor
pop
mov
mov
call
cmp
aaa
orl
outsl
jp
push
mov
jnp
dec
dec
inc
cmpsl
and
cltd
lea
std
jo
pop
insb
dec
fbstp
test
repnz
sarl
sbb
lcall
pushf
lahf
fmulp
mov
lods
rcrb
inc
push
idivl
fdivrp
push
lds
stc
jne
jbe
fcomps
hlt
int3
loopne
das
jbe
xor
and
fwait
pushf
je
mov
mov
call
sub
jae
out
sti
add
cwtl
push
sub
sbb
cltd
test
stos
sbb
add
add
sub
mov
xorb
xor
add
sarb
int3
and
test
lods
mov
sahf
out
sub
sti
jno
outsl
enter
pop
sub
sbb
cmpsb
flds
mov
call
pusha
sbb
and
push
arpl
in
add
adc
cwtl
out
loop
xchg
jne
cmpsb
mov
sub
mov
sbb
stos
icebp
mov
inc
lahf
jp
xchg
and
cmp
mov
add
ret
cli
outsl
mov
mov
in
pop
insb
jae
test
fdivs
das
mov
push
pop
xlat
xlat
push
or
mov
loopne
es
jle
cmc
or
adc
adc
sbb
pop
loope
ret
adc
cli
push
mov
inc
movsb
mov
lods
mov
sbb
pusha
mov
stos
roll
push
jmp
adcl
jmp
jnp
or
xchg
pushf
into
scas
adc
jne
mov
jno
xor
adc
pop
in
fcmovnbe
or
and
dec
cmp
cltd
sbb
lock
icebp
mov
movb
mov
sbb
and
or
sub
push
fstl
adc
fbld
or
jo
pop
pop
or
sahf
insb
adc
and
and
in
cmc
jbe
in
sub
aad
hlt
or
or
inc
loope
cmp
ret
cmp
push
pusha
sbb
pop
cmpsl
mov
mov
cmpb
les
or
aam
mulb
pop
xchg
test
cmp
inc
shll
jb
sbb
xorb
cmpsl
inc
arpl
push
hlt
fisubs
lods
pop
in
test
xchg
dec
fs
lock
lock
out
addr16
jmp
jecxz
push
fldenv
inc
test
sub
es
and
mov
mov
dec
out
sbb
stos
jnp
enter
mov
mov
dec
sahf
cmc
jmp
xlat
ds
cmc
arpl
jne
jo
mov
mov
imul
cmpsl
sub
push
add
sub
and
mov
out
xchg
mov
cltd
fsubrl
jbe
jmp
out
push
xchg
sti
and
fists
pop
ret
and
das
and
or
push
mov
mov
and
jmp
cmp
fcompl
push
stos
daa
push
jg
out
cmp
ret
clc
jecxz
dec
call
add
mov
lahf
cmp
lods
mov
pusha
rolb
incl
in
add
inc
dec
push
push
xor
xor
inc
out
mov
adc
inc
lret
push
gs
or
mov
push
icebp
sti
popa
mov
xchg
push
xor
pop
lock
pop
cmp
leave
and
aam
outsb
pusha
cld
test
popa
push
imul
push
xchg
add
xchg
pop
rcr
fcmovu
adc
jg
repz
inc
and
popa
add
mov
xor
in
push
stc
sbbb
pop
fwait
std
sti
sti
aaa
cmc
or
sub
xchg
je
add
add
dec
mov
inc
sbb
daa
cwtl
adc
jae
shrl
xchg
mov
in
push
cli
pushf
out
sub
cmp
rcrb
int3
mov
push
mov
dec
dec
pushf
mov
lret
mov
jle
mov
movsb
sub
cld
ja
flds
jp
xchg
ljmp
push
xor
insl
loopne
push
dec
dec
test
and
dec
mov
dec
and
inc
mov
iret
mov
fmul
or
in
dec
popf
sar
sarb
push
sbb
mov
dec
arpl
ss
sbbl
outsb
fimull
lods
mov
addb
mov
mov
test
or
push
xor
hlt
sbb
ret
ficoms
add
mov
pop
jecxz
or
jo
cmpsb
js
mov
addl
loopne
sub
dec
int
stc
cld
fs
gs
sti
sbb
fcomip
dec
jle
int3
dec
je
push
popf
jnp,pt
cmc
mov
rcrb
push
push
out
pop
int
mov
dec
mov
sub
loop
das
mov
movsl
xchg
xchg
popf
xchg
mov
add
lock
jmp
mov
negl
add
stos
lret
imul
pop
fstp
es
inc
fsubs
or
aaa
loopne
stos
adc
fdivr
cmp
dec
sbb
mov
arpl
cmpsb
mov
xchg
out
mov
cli
adc
negl
add
lret
int
cs
pop
call
xchg
xorb
jl
push
dec
mov
mov
hlt
inc
arpl
jecxz
pop
jg
push
mov
stos
mov
sbb
ficompl
lret
mov
int
test
push
fnop
shl
push
mov
fucom
dec
dec
sub
fdivrl
push
pop
jo
pop
mov
in
test
mov
js
dec
push
out
dec
lea
sahf
mov
stos
jl
lcall
in
neg
mov
scas
adc
dec
addr16
icebp
std
pop
lods
cmc
mov
sbb
outsb
push
dec
dec
cmc
in
repz
je
xor
imul
sub
lcall
xor
jle
inc
mov
fsub
inc
repz
pop
cmpsl
push
cmp
sub
jne
icebp
pusha
or
mov
les
mov
sub
sti
xchg
cmp
xchg
cmp
sub
mov
arpl
andl
ret
xor
cmp
jecxz
cmc
adc
outsb
loope
jmp
mov
jno
sub
je
test
mov
fsubr
out
repz
xchg
sbb
jne
cmp
lock
pop
mov
mov
xchg
dec
jecxz
fsubl
add
add
push
daa
in
or
sbb
fsub
jb
mov
jecxz
mov
das
jb
out
push
mov
test
jb
lcall
mov
mov
int3
add
and
xchg
xchg
test
sahf
das
xchg
inc
dec
notb
pop
or
addl
insl
xchg
mov
jmp
mov
dec
cmp
ss
xchg
sub
push
ret
mov
adc
out
outsl
scas
cmp
sbbl
cmpsb
jns
lea
scas
push
insl
test
mov
xor
dec
lock
xor
jp
mov
mov
cmp
cmp
push
cmpsb
jae
and
push
mov
push
sar
add
push
decl
mov
bound
imul
xchg
jl
in
ret
push
test
push
test
mov
mov
enter
inc
jecxz
cmpsb
and
inc
jo
sub
aam
rcr
mov
mov
mov
mov
dec
idivb
add
pop
ficoml
push
aad
xchg
add
cs
sarl
loop
or
repz
or
hlt
rcll
push
fmuls
aas
sub
daa
inc
repnz
mov
lods
inc
ret
bound
mov
adc
arpl
outsl
aad
aad
dec
rcll
out
sub
mov
sub
cli
lods
repnz
mov
xor
mov
pusha
sub
out
aaa
je
sbb
fdivs
adc
pushl
dec
mov
ljmp
cli
fistl
in
call
call
or
inc
adc
jno
cmp
adc
adc
lret
mov
lds
jns
cli
loope
mov
repz
cs
or
fwait
jns
dec
repz
or
cmp
inc
pop
mov
cli
mov
cmovg
dec
aad
inc
jne
out
scas
es
push
mov
jecxz
jae
dec
mov
cmp
or
fxch
inc
cmp
popf
mov
mov
lret
daa
pop
push
add
or
jns
addl
push
add
ja
mov
push
push
cwtl
int
push
and
js
dec
push
dec
mul
lret
repz
adc
outsl
push
in
cmp
fs
mov
fnstsw
push
mov
test
leave
shrl
fadds
dec
arpl
xor
xchg
xchg
ret
inc
mov
xchg
aaa
or
sub
push
int
cltd
pop
lahf
dec
or
fstl
mov
mov
mov
ja
mov
mov
jb
mov
repnz
sub
adc
idivl
xchg
xor
jb
mov
push
mov
pop
mov
mov
adc
sub
mov
call
cwtl
ficoml
lret
scas
or
stc
in
mov
sbb
jo
cmpsl
jl
mov
ja
and
std
inc
push
cmp
adc
jb
xor
adc
adc
mov
aas
out
imul
mov
inc
cmp
stos
mov
sbb
mov
or
add
nop
stos
pop
fnstcw
sbb
xchg
cwtl
outsl
bnd
inc
addb
cmpsl
out
shr
mov
rcrl
repnz
jb
push
push
add
sub
inc
jne
std
cmpsl
inc
push
jmp
int3
mov
sub
clc
fmull
int
and
pop
inc
inc
push
and
flds
test
addr16
into
push
dec
inc
sbb
mov
cld
enter
cmp
outsl
jge
sub
leave
add
cmp
fadd
mov
cmpsl
fstps
ja
mov
icebp
mov
stos
movsl
sbb
add
int
xchg
cmp
or
mov
add
shrl
out
cmpsb
xchg
andb
out
jb
mov
dec
rcrb
cmp
out
popf
outsb
hlt
adc
lods
loopne
inc
scas
inc
sbb
pop
scas
cmp
out
sub
push
iret
cmp
rcl
loop
insl
mov
pop
cld
sbbb
push
mov
fisubs
mov
scas
mov
not
dec
mov
cmp
jle
or
fldt
int3
clc
xchg
sub
popa
sbb
aam
pop
mov
lea
outsl
and
mov
aad
mov
jmp
lods
fucom
cmp
and
cmp
or
out
ljmp
cli
xor
pop
xchg
into
jp
dec
iret
mov
insb
push
jmp
jecxz
inc
adc
out
add
popa
iret
pop
or
inc
xchg
decl
enter
cmc
nop
dec
data16
in
add
push
popa
ja
jg
fidivs
or
outsl
popf
sub
fdivrs
jmp
jns
push
xlat
aas
pop
rol
mov
adc
cmp
sbbl
add
pop
or
push
cwtl
aas
dec
or
xchg
jnp
aaa
lahf
add
jno
jl
inc
push
rclb
or
hlt
push
lods
movsl
pusha
fnstsw
je
clflush
or
sub
jne
or
into
stc
jo
mov
mov
push
pop
xchg
adc
xor
or
insl
xchg
sahf
addb
xchg
xlat
xor
sbb
dec
ret
daa
les
incb
adc
loop
xchg
mov
hlt
jle
jp
mov
lret
mov
movb
mov
mov
icebp
sbb
xchg
push
push
mov
popl
push
fiaddl
pop
iret
dec
xchg
ds
jecxz
andb
sbb
xor
mov
push
jp
testb
lahf
cmpsl
mov
or
jne
sub
mov
cmpb
or
rcll
or
gs
mov
in
xchg
jl
test
mov
out
andl
popa
push
or
inc
lret
or
dec
or
dec
inc
sbb
hlt
jp
sub
dec
cmp
dec
mov
imul
pop
cmpsl
inc
push
pop
dec
dec
xchg
fs
icebp
es
mov
inc
ljmp
stos
add
cmc
insb
xchg
in
mov
xchg
aaa
bound
add
je
loopne
mov
jno
imul
inc
lods
inc
dec
stos
pop
mov
mov
push
mov
mov
pop
in
insl
les
and
push
sbb
or
imul
fisubl
jne
test
std
dec
mov
in
ja
ljmp
cmp
jbe
inc
pop
mov
movl
fildll
pop
push
loop
xor
lods
ss
es
pop
mov
xchg
sub
sub
jmp
push
mov
push
jbe
cmp
push
cli
lds
cmp
jp
or
cmp
xchg
dec
mov
loop
mov
ss
pop
and
mov
sbb
iret
or
ret
jle
sahf
out
cmp
ds
test
setb
test
lods
sbb
fisubs
mov
testb
mov
jle
push
popf
hlt
xchg
mov
sub
dec
or
add
les
pop
mov
int3
imul
popa
popa
adcb
adc
out
gs
mov
inc
mov
and
cltd
popf
mov
mov
fwait
push
call
mov
fcomp
test
or
jo
cs
mov
ficoms
loope
scas
jp
sub
aam
divb
xor
mov
xchg
jnp
add
test
mov
pop
and
xor
jg
mov
adcb
mov
sbb
insb
scas
pop
imul
cmpsl
cvtps2pd
sarb
adc
mov
xor
sti
inc
sbb
test
push
jae
mov
cmpsl
aaa
sbb
mov
out
push
test
std
mov
xchg
fildl
pop
cmpsb
leave
push
jnp
repz
shrl
mov
insb
test
addl
scas
aam
push
mov
jecxz
sub
jae
imul
lea
mov
sbb
cmc
cmpsl
adc
pop
xor
roll
pusha
fistl
out
xchg
push
aas
popa
sbb
adc
xchg
mov
test
mov
stos
add
jnp
jl
je
aas
mov
call
cmp
sbb
scas
loop
xor
mov
pop
and
in
mov
xlat
push
sub
in
cs
jo
cmc
stos
repnz
pop
fadds
or
jb
js
sbb
and
rorb
mov
and
jnp
fbstp
and
cmp
mov
jns
xchg
ret
add
add
cmp
dec
mov
inc
notl
aam
dec
mov
cs
adc
mov
stc
add
repz
cmpsl
mov
ja
cwtl
add
repz
scas
imul
dec
mov
in
xorb
pushf
cmp
push
dec
sbb
add
pushf
sub
xor
sbb
push
mov
loopne
ljmp
subb
sarl
mov
jge
cmpsl
mov
lock
dec
mov
shlb
and
ja
in
xor
fimuls
rcll
fs
loop
js
dec
lea
in
pop
cmpsb
jno
add
jb
sbb
mov
dec
mov
dec
lret
dec
adcl
and
mov
fwait
cmpsb
add
push
mov
mov
clc
xor
out
inc
out
into
sub
fisubrs
mov
enter
and
je
ret
loopne
popa
xchg
adc
mov
test
enter
mov
bnd
and
mov
repnz
fisttpll
cmp
mov
adc
pop
stc
mov
shrb
in
aad
test
xor
xchg
push
pop
lea
or
in
push
mov
in
jge
sarl
es
aas
adc
testl
cltd
repz
gs
test
mull
jge
ret
jbe
jnp
jle
pop
mov
cli
dec
add
ljmp
jg
in
cmc
sbb
inc
ja
mov
out
mov
push
xor
mov
pop
mov
nop
pop
adc
lahf
add
or
and
sahf
or
cmpsl
sub
or
pop
sbb
xor
xchg
sub
xor
xchg
sahf
test
xor
fwait
jge
repz
loop
jle
jbe
or
sub
dec
or
add
xor
adc
rorl
insb
incb
mov
mov
and
add
mov
or
leave
add
shll
loopne
dec
addr16
out
xchg
mov
mov
jp
repnz
xchg
repnz
out
into
daa
lcall
mov
ss
dec
aas
fwait
mov
mov
push
fmul
out
jnp
outsb
divl
dec
sbb
pop
in
out
ljmp
inc
sub
push
mov
in
mov
popa
dec
and
add
mov
xchg
loope
mov
lahf
inc
push
xchg
dec
mov
dec
movsl
xor
shrl
mov
xor
mov
inc
xchg
cmp
jno
push
mov
int3
inc
cld
jmp
and
ds
ret
insb
mov
sbb
out
loopne
jmp
sbb
push
push
add
fimull
sbb
loopne
dec
mov
push
pop
fimuls
dec
test
sub
adc
push
sarl
push
cli
rcll
fistps
inc
out
test
jecxz
cli
daa
jecxz
ljmp
ficomps
push
popf
jb
jnp
test
scas
pop
lods
ret
pop
inc
push
push
inc
movsl
add
insl
sub
dec
dec
test
xor
xchg
mov
inc
and
mov
hlt
lods
mov
insl
call
inc
sbb
add
cmp
lret
pop
sbb
cmp
cmp
cmp
std
hlt
fwait
xor
cmpsl
xor
pop
xor
movsb
das
add
lds
rclb
pusha
les
in
jnp
mov
je
add
dec
adc
lds
push
and
xchg
cld
xor
mov
lret
dec
stos
xor
lods
mov
shlb
popa
push
fsubs
push
mov
dec
loope
sub
jle
pop
test
repz
jle
out
inc
pop
sub
dec
insb
mov
sub
js
lea
rorb
testl
mov
jg
xor
xorl
mov
loope
iret
mov
fnsave
add
or
add
jae
mov
push
pop
adc
rcl
jb
jns
daa
mov
idiv
add
cwtl
inc
xor
pushf
shll
inc
arpl
adc
xchg
jecxz
inc
popf
mov
push
nopl
push
loope
insl
cmpsl
divb
sbb
call
imul
mov
insb
stos
sbbb
sub
cld
xchg
mov
aad
jg
out
and
pop
push
test
jb
mov
mov
test
mov
loope
cmp
js
dec
addl
adc
and
mov
test
and
inc
loop
push
sub
push
je
iret
iret
popa
mov
dec
cld
ljmp
add
mov
pushf
mov
sbb
xor
push
dec
and
negb
in
mov
and
cmpb
push
bound
mov
mov
ret
mov
sub
xchg
ljmp
scas
nop
vmovaps
jl
xchg
jo
mov
adc
push
fadd
in
mov
negb
xor
jbe
adc
mov
xor
and
pop
jbe
call
out
jb
or
int
js
push
sub
movsb
push
sub
push
mov
add
arpl
inc
icebp
mov
mov
orl
jmp
test
inc
and
leave
mov
sahf
sub
mov
inc
cmp
xor
xor
cmp
fimull
add
and
fsubl
add
mov
adc
fcmovu
mov
mov
jns
inc
mov
cmp
jl
hlt
jae
mov
and
sub
imul
stos
lret
out
push
inc
lods
mov
testb
or
ja
cmpsl
loope
jb
or
imul
add
dec
add
cmp
stos
out
test
jns
adc
add
pusha
add
xor
mov
fisubrl
sub
repnz
sbb
mov
sbb
shll
jl
mov
les
mov
ret
mov
ljmp
fimull
add
clc
ds
xor
aas
fidivrs
pop
xchg
pop
pop
and
push
cs
orl
or
push
inc
lods
mov
sub
mov
xor
and
aaa
cmp
std
pop
enter
mov
daa
jge
sbbb
sub
test
lods
sub
dec
iret
popf
push
push
xor
inc
jae
sub
call
push
push
js
dec
xchg
test
mov
mov
pop
popf
mov
add
pop
seta
ret
inc
aad
xor
in
inc
mov
push
jl
test
int
jg
lret
or
mov
xor
sub
cld
leave
add
rcl
pop
in
fidivs
je
stos
out
addr16
repnz
mov
xor
into
shl
and
test
add
aad
cmpb
in
rolb
mov
xor
jecxz
pop
cld
xchg
testl
adc
mov
lahf
dec
cld
and
fwait
xchg
mov
xlat
sub
xchg
pop
mov
int
dec
fwait
arpl
push
insl
or
xchg
sub
mov
push
jmp
fnstcw
loopne
icebp
imul
xchg
cltd
imul
sub
movsb
mov
push
addr16
cmpsl
rcrb
jnp
mov
jge
mov
cmp
xchg
sub
cltd
sahf
xlat
sbb
ljmp
xchg
maskmovq
mov
jne
lods
rol
scas
sbb
jg
xchg
mov
pusha
dec
mov
sub
mov
cs
push
adc
cmp
add
pop
or
cmc
sub
int3
mov
or
xchg
xchg
dec
js
adc
jl
lods
push
aas
mov
call
mov
push
aaa
mov
cmp
dec
scas
and
jno
or
jb
jne
mov
add
xchg
push
and
fmulp
jno
cld
decb
faddp
cwtl
and
sub
and
adc
push
adc
sub
in
dec
inc
jno
xor
pop
pop
sub
or
jno
loope
aad
ret
xchg
pop
aaa
dec
pop
xor
jne
pop
out
rcll
xchg
mov
fldcw
dec
lock
cmp
adc
jno
bound
lock
cmc
sahf
sbbb
inc
push
xor
cwtl
xchg
xor
jmp
jmp
adc
loop
stos
clc
fcomip
sub
sbbb
pop
shrb
fmuls
movsl
int
sbb
jbe
pushf
dec
ja
aam
inc
adc
dec
push
jno
push
fcoms
fcomip
mov
in
cmpl
mov
loope
out
and
add
push
mov
call
fcmovnbe
and
enter
lock
push
xor
into
and
sub
jg
xor
iret
ja
fs
push
pushf
out
mov
ja
lea
std
inc
fisubl
push
pop
xchg
stos
ret
das
add
lcall
mov
pop
inc
cltd
std
shll
addr16
mov
sub
nop
and
push
scas
in
call
adc
int3
lret
loope
push
or
cmpsb
les
jge
jl
push
cmpsb
inc
cld
out
fstps
in
icebp
ds
pop
sub
lret
les
out
rcrb
dec
aaa
or
xlat
and
fisttpll
arpl
in
rorl
pop
inc
push
cmpb
into
cmp
inc
repz
enter
sub
test
cli
xchg
dec
cltd
testb
mov
or
and
sbb
loopne
xchg
imull
lock
lret
xor
hlt
fdivrs
ret
je
shlb
inc
movsl
in
lds
push
pop
es
mov
push
sbb
xchg
popa
inc
push
repz
lea
cltd
int
adc
inc
mov
fs
dec
cli
sub
sbb
dec
out
cmpsb
cmp
jnp
test
jo
mov
inc
lods
xorb
in
out
jb
jno
sbb
xor
ds
jp
fs
mov
imul
and
lods
enter
xchg
push
xchg
or
imul
adc
movsb
adc
cmp
xchg
fxch
or
push
push
leave
pop
pop
add
mov
push
mov
add
pop
adcb
push
cwtl
mov
popf
add
adc
imul
mov
push
jmp
push
stos
pop
es
out
xor
ret
mov
cltd
add
lea
jne
mov
inc
in
or
jnp
sub
pusha
mov
movsl
rcll
jns
test
adc
inc
jl
movsl
adc
mov
out
pushf
popf
cmp
jecxz
mov
sbb
lret
xor
pushf
mov
insb
nop
mov
cmpsb
pop
lds
cs
loopne
repz
push
jo
cs
sub
mov
inc
pushf
or
xchg
mov
mov
in
mov
pop
scas
dec
insb
in
push
cmp
cmp
mov
sub
lock
cmpl
stos
and
mov
xchg
faddl
cmc
jmp
inc
cltd
into
xor
bound
xchg
andl
cmpb
sub
xor
loop
or
add
jg
pushf
mov
jo
and
xchg
in
movsb
push
daa
nop
push
cmp
and
or
into
cmp
clc
stc
push
dec
sbb
dec
push
xor
in
arpl
hlt
movsl
inc
or
mov
lcall
scas
inc
mov
pop
gs
or
adc
insb
and
mov
adc
cmp
nop
pop
push
cmp
pop
mov
mov
mov
popa
enter
push
mov
cld
roll
jecxz
fsubs
push
inc
sub
mov
movsl
xchg
mov
icebp
int3
cmpsl
pop
mov
dec
push
stos
jmp
xchg
bound
rcr
and
stos
mov
es
enter
and
inc
sub
repnz
cmp
sbb
das
xchg
in
or
test
repnz
and
mov
pop
mov
or
mov
sbb
fsubl
jmp
dec
test
stos
popf
orb
orl
push
push
jns
loop
call
pushl
mov
push
jp
rol
jg
mov
mov
inc
pop
sbb
jl
rolw
jmp
jno
cwtl
aam
pushf
ljmp
cmpsb
insl
xor
sahf
fstpt
das
es
clc
dec
sub
sbb
mov
fwait
jae
jno
mov
xchg
dec
jge
fdivrs
push
nop
mov
out
sbb
arpl
cmp
out
inc
out
stos
scas
ljmp
sahf
xor
cmp
pop
xchg
pop
fildll
rcll
lcall
ficoms
mov
sbb
jmp
xchg
adc
aas
cmp
mov
out
roll
sub
add
jne
popf
jge
push
iret
push
xor
xor
and
pusha
xor
xor
dec
xor
xchg
ljmp
fs
stos
sbb
out
xchg
neg
ja
mov
inc
cmp
xchg
dec
stos
adc
insb
sub
cmp
xchg
rclb
cmp
or
mov
movsl
outsl
pop
jg
divb
xchg
push
mov
jge
out
dec
lods
test
inc
lcall
xchg
xor
add
lds
ret
mov
xorl
or
int
mov
popa
add
fcoml
cmp
insb
je
mov
push
jmp
test
dec
fnstenv
std
in
ret
inc
adc
daa
cld
std
in
mov
out
fldl
jl
out
andps
cmpsb
cld
in
imul
popf
cmpsl
mov
into
aam
cmpsb
pop
xlat
and
jecxz
adc
xor
add
out
push
and
or
lods
jo
xchg
pop
scas
pop
loope
sarl
roll
outsb
test
cmp
jl
lods
ds
inc
add
jns
out
dec
aaa
push
fcomp
mov
ds
mov
jno
nop
jp
ds
andl
dec
jl
jmp
sbb
jmp
je
adc
mov
outsl
push
loope
mov
fidivrl
push
mulb
movsl
and
add
ljmp
xor
mov
dec
outsb
out
scas
mov
push
xchg
push
movsl
cld
movsb
push
push
mov
divb
rcl
add
std
jg
add
inc
in
xor
lea
xlat
sti
movsb
jo
dec
js
jbe
outsl
jno
push
sbb
dec
nop
adc
lcall
inc
or
and
push
cmp
inc
mov
inc
leave
insl
xchg
aad
das
pop
mov
cmp
pop
mov
xor
and
shrb
cmp
lock
lret
test
sbb
cmp
sbb
jns
adc
fwait
in
hlt
dec
and
sub
fistpl
arpl
ror
dec
dec
sub
push
sti
pop
jecxz
xchg
xchg
stos
fsubrl
into
add
sbb
call
inc
dec
push
xchg
cmp
cmp
jns
cmp
pop
pop
jp
fstl
out
inc
xchg
push
imul
lock
add
and
iret
pushf
mov
pop
fwait
or
jnp
aaa
movsb
mov
dec
jbe
stos
arpl
ret
inc
sar
testb
inc
push
jge
sbb
pop
loop
push
jg
testl
stc
jno
sub
cmpsl
enterw
fwait
dec
out
sti
pushf
mov
dec
movsb
sbb
dec
rol
out
adc
andl
add
mov
sti
orl
dec
dec
adc
sbb
jg
jp
loope
mov
mov
scas
pop
and
idivl
sbb
rcrl
push
into
add
cmp
les
sarl
jne
and
xor
mov
xor
icebp
sbb
dec
lods
inc
sub
jnp
test
lods
jle
jmp
lret
test
add
cli
mov
cld
mov
sub
hlt
sub
jge
pop
xor
movsl
loopne
cmp
mov
repnz
mov
jno
add
cs
js
imul
mov
aam
ss
scas
push
rcrl
mov
sub
stos
fwait
sub
mov
sub
icebp
mov
sbb
ss
arpl
cmc
push
inc
out
xor
push
in
imul
mov
imull
push
fs
or
mov
adc
out
inc
dec
push
int
test
cmp
or
js
hlt
mov
loop
mov
mov
pusha
mov
popa
and
or
lods
or
xor
mov
cs
arpl
adc
daa
or
adc
pop
xchg
push
and
cltd
xchg
sbb
dec
xchg
cmp
add
dec
adc
js
nop
in
inc
adc
in
imul
movsb
shll
adc
push
out
cmp
mov
sbb
popa
add
outsl
xor
jg
vpmacsdd
in
adc
dec
xchg
cmp
imul
ret
pop
or
out
and
roll
dec
pop
add
jnp
andb
dec
adc
imul
imul
test
xor
inc
adc
pushf
jae
outsb
out
aam
repz
imul
jle
sub
jle
mov
and
mov
xor
or
subl
loop
aas
out
test
rcr
roll
mov
sar
popf
pop
xlat
imul
and
dec
push
mov
gs
es
mov
dec
cmp
jbe
pop
bound
xor
imul
sub
add
fwait
movsl
scas
sbb
or
mov
lods
scas
pushf
das
mov
sahf
lret
rorl
test
stc
pop
pop
jnp
pop
pop
cmc
movsl
push
cli
testl
arpl
cmp
or
lahf
adc
loop
aam
push
cmp
mov
mov
es
pop
mov
cld
cld
scas
jge
pop
mov
xchg
jno
addb
jmp
ret
mov
pop
mov
lahf
jl
jmp
scas
loope
and
mov
pop
cmp
stos
add
outsl
xchg
jl
and
mov
incl
repnz
aam
push
mov
cmp
mov
jmp
add
and
dec
jno
sbb
lock
addr16
repz
icebp
mov
loope
popa
mov
dec
mov
pop
mov
pop
jno
dec
pop
or
enter
inc
js
mov
push
xchg
fmuls
insb
pushf
cmp
dec
ja
inc
sbb
shlb
fs
repnz
add
jg
mov
fcoms
notl
in
mov
decb
arpl
xchg
and
shll
cs
adc
mov
cmp
pop
daa
test
sbb
iret
and
ss
es
loop
add
adc
fbld
xor
movsl
push
test
gs
stc
nop
dec
xchg
clc
out
popf
leave
xchg
roll
mov
push
test
lahf
divb
xchg
enter
mov
xchg
lret
gs
or
ror
push
mov
mov
xchg
insb
adc
pop
rcll
imul
cmp
push
jp
mov
adc
dec
xchg
movsl
push
or
stos
xchg
dec
in
push
dec
xchg
mov
xchg
into
mov
les
inc
and
sub
pop
cmpsb
mov
hlt
jp
addr16
aam
add
outsb
repnz
mov
sub
in
xor
mov
sub
rol
loop
and
push
cmp
shlb
add
fsubrl
dec
cmpsb
icebp
sarl
inc
pop
hlt
aas
icebp
es
push
clc
int3
test
xchg
adc
pop
lods
outsb
xchg
sbb
push
pop
and
and
rcll
nop
sub
int
xor
dec
push
shlb
cld
stos
mov
leave
repnz
out
xor
pop
stc
dec
xchg
sub
or
or
aam
add
or
cld
addb
out
jmp
dec
add
stos
xchg
mov
stc
lods
inc
sub
in
iret
and
pop
pusha
sbb
loopne
mov
cmpsb
fnstenv
cmp
inc
mov
and
jbe
lahf
ljmp
ret
hlt
inc
pop
jge
sub
ljmp
repz
rcl
and
lock
and
xor
and
mov
or
in
rcrl
jl
shll
out
jle
shrb
notb
and
or
sbb
mov
leave
cmp
mov
or
jge
negb
jl
jp
inc
mov
rclb
push
in
popa
push
add
clc
pop
std
mov
sub
mov
pop
adc
ljmp
or
mov
lret
insl
xchg
cld
adc
frstor
mov
movsb
jae
adc
xchg
aas
gs
bound
mov
pop
lods
dec
aad
lds
xchg
pop
popa
cltd
dec
pop
sarb
xchg
pop
movsl
pop
pop
and
cmp
jecxz
out
push
mov
nop
cmpsl
aam
clc
jmp
sbb
fldl
fsub
mov
adc
jb
xchg
imul
loopne
adc
push
push
call
dec
add
stc
popf
movsb
es
sbb
cmp
jge
mov
mov
stos
test
pusha
pop
inc
sbbb
lcall
sbb
jns
xchg
sub
lods
rclb
sbb
loopne
ja
add
loope
push
mov
mov
leave
pusha
sahf
popa
divb
into
shr
mov
sti
out
or
dec
jo
pop
and
pushf
push
jne
pop
mov
lahf
mov
dec
push
or
sbb
aas
mov
das
xchg
jp
inc
xchg
sarl
cli
dec
pop
loopne
imul
jp,pt
mov
call
repz
cs
fmull
call
mov
cli
jecxz
inc
lret
lret
das
out
in
sti
mov
test
out
add
in
push
loop
shlb
pop
in
push
ss
dec
and
mov
lods
and
jnp
xchg
xor
xchg
aaa
pop
testb
push
dec
clc
arpl
mov
jp
pop
sbb
jb
pop
ret
xor
and
xor
scas
enter
add
lret
pop
dec
inc
cmp
adc
movsl
push
or
icebp
je
out
add
jge
push
mov
pusha
out
cld
cmp
adc
xchg
sbbl
std
and
aad
pop
in
jge
xor
enter
subb
shlb
mov
adc
pop
jb
jno
xchg
dec
inc
pop
les
mov
shlb
mov
jle
cmp
pop
inc
out
mov
stc
addr16
push
cmp
jge
rorl
fnstenv
and
mov
repz
push
out
stc
mov
and
xchg
movl
ds
ret
adc
imul
push
pop
sbb
into
cvtpi2ps
jbe
pushf
xor
sbb
test
pop
shr
sbb
sbbb
xlat
arpl
mov
xor
sub
lods
fs
xchg
or
add
pop
push
mov
lret
mov
jmpw
sub
repz
stos
or
mov
or
lods
pop
mov
daa
test
ret
xchg
and
outsb
mov
inc
out
sub
jp
daa
fimuls
or
jb
xchg
dec
pop
cmpsl
lds
mov
push
lea
mov
fidivl
lods
add
adc
xchg
call
bound
xchg
insb
jecxz
rcrb
xchg
xor
int
test
fistl
cmpsl
pop
xor
nop
sub
cs
int3
inc
lods
popf
call
and
cmpl
cmp
int3
aad
lahf
gs
loope
inc
or
push
xor
or
add
stc
mov
mov
push
mov
scas
call
hlt
out
ss
cmc
cmp
add
ret
cli
shlb
and
shl
fst
xchg
mov
pmullw
leave
xor
mov
and
dec
mov
insl
ja
scas
push
and
jnp
xlat
stos
jae
xchg
mov
jns
ds
int3
or
mov
mov
lds
jno
adc
aam
pushf
jns
add
pop
fdivrl
mov
inc
mov
daa
push
add
push
dec
int
bswap
lods
movsl
jmp
dec
lods
mov
jmp
mov
in
xchg
jns
mov
mov
cld
leave
call
or
sarl
ss
ret
scas
sub
lret
into
out
fildl
out
loop
cmp
jle
ret
push
dec
push
sbb
shr
mov
xchg
arpl
adc
adc
testb
push
mov
sbb
scas
adc
cltd
cmc
mov
sbb
mov
shl
mov
mov
fidivrl
aam
pop
ja
insl
xchg
inc
pop
out
mov
mov
es
lods
or
push
roll
push
or
pop
call
ljmp
inc
mov
add
adc
add
xchg
cmp
ret
fsubl
out
imul
push
mov
fs
push
aad
shll
push
jmp
cmpsb
into
jl
rcrb
mov
mov
pop
lret
aad
decb
inc
pop
xchg
lahf
cmp
and
add
adc
dec
or
mov
pop
xchg
lret
push
fildll
enter
mov
sbb
es
and
nop
pop
jl
inc
ret
enter
push
jecxz
xchg
xchg
lods
inc
je
xor
jns
add
jne
insl
cmp
aaa
int3
notb
mov
inc
xlat
cmp
jae
mov
sahf
fstps
fs
cli
and
mov
aaa
pop
add
mov
or
push
movsl
ficomps
cmp
mov
fcmovne
pop
sbb
jge
xchg
fdivrp
push
jg
out
adc
les
mov
sbb
mov
shlb
push
pushf
mov
add
cmp
insl
and
jge
inc
subl
xchg
mov
or
jge
and
repz
outsb
fwait
imul
or
in
cli
jecxz
jl
sub
xchg
pop
xor
mov
cli
xchg
idivl
dec
pop
pop
test
ljmp
int3
inc
cmpsb
cmpsb
mov
cmc
in
mov
jb
loope
das
outsl
out
or
fistl
jns
push
jge
enter
test
ljmp
ret
adc
fildll
push
and
jb
adc
jo
pop
mov
jno
and
stos
mov
call
xchg
rclb
jge
imul
fildl
add
out
pop
mov
jp
push
jge
fisubs
jl
sub
fdiv
cld
dec
dec
adc
push
push
inc
rcrb
inc
jmp
stc
cld
leave
popa
sub
jge
fstl
aam
jbe
movl
aad
xor
mov
add
stos
pop
outsl
fldenv
decb
push
lcall
xchg
mov
dec
in
jle
sar
daa
movsl
mov
inc
and
dec
jecxz
mov
lds
or
repz
sub
jp
nop
popw
sub
mov
mov
push
mov
rcll
xchg
pop
lds
sub
aad
xchg
ud1
psadbw
push
scas
mov
fisubrl
data16
adcb
mov
scas
mov
or
or
fmull
stc
sub
lock
xchg
ficoms
and
lahf
imul
adc
mov
and
loopne
test
jecxz
mov
inc
test
or
ds
fstpl
sahf
dec
ja
jb
mov
jp
fs
nop
pop
and
cmp
arpl
rcrb
mov
mov
dec
jno
lock
push
adc
jbe
stc
mov
jno
cmc
lcall
ljmp
add
in
or
icebp
int
push
out
mov
cmc
jecxz
xchg
jmp
dec
dec
out
ljmp
cmpsl
out
cmp
ficomps
insl
adc
sbb
jne
sbb
out
adc
xor
insl
adc
imul
test
jle
or
ds
xlat
or
jle
mov
xor
mov
aad
push
pop
pop
es
pop
lahf
mov
stos
adc
outsl
ss
mov
pop
orb
push
nop
add
in
out
jp,pt
mov
lret
int3
leave
push
out
pop
xor
inc
popa
in
iret
sahf
int
jl
sarb
pop
and
pmaxub
daa
lock
cmp
mov
xchg
xchg
lahf
or
inc
jecxz
jecxz
lds
ds
pop
jle
or
cmp
shl
loope
push
pop
fisubrs
loope
xlat
mov
pop
dec
sahf
xchg
or
in
sub
fwait
xchg
andb
pop
cmp
popf
imul
hlt
ficoms
mov
das
js
aad
and
or
icebp
daa
cld
jae
mov
pop
add
mov
mov
enter
out
cmp
and
push
push
adc
insl
xchg
mov
fisubs
data16
add
roll
mov
lcall
and
sbb
push
je
mov
jae
or
jnp
arpl
pop
push
mov
inc
sti
lcall
add
push
inc
mov
outsb
cld
jbe
js
or
dec
mov
bound
lea
rolb
inc
pop
mov
mov
icebp
adc
mov
push
mov
repz
cmp
aam
daa
int
aas
jge
sbb
and
mov
push
shll
sub
add
js
push
notb
push
adc
pop
aaa
inc
rcrb
fwait
stos
fisttpll
cmpsl
add
sbb
repz
xor
pusha
sub
pop
mov
and
mov
call
in
insb
data16
push
rorb
xchg
hlt
ret
pop
sbb
add
mov
leave
mov
sub
sub
mov
jg
xchg
sub
dec
pop
mov
jp
or
daa
push
cmp
jo
insl
scas
push
hlt
add
in
addl
ljmp
adc
jnp
inc
jl
sbb
fnstenv
pop
xchg
jmp
adcb
mov
pop
add
das
xor
ja
cmp
jbe
je
dec
sbb
sbb
cld
ljmp
jmp
bound
jo
add
pop
mov
mov
insb
outsl
and
jmp
adc
mov
mov
inc
add
stos
ljmp
testb
testb
sbbl
or
inc
cs
dec
add
mov
push
loopne
stc
push
mov
popf
xchg
movsl
test
xchg
andb
fld
in
fdivl
in
xchg
jecxz
subb
sbb
leave
sbbl
outsl
pop
in
hlt
or
jg
int3
dec
pusha
cmp
call
arpl
ja
mov
push
inc
sub
ljmp
push
and
iret
sbb
jb
mov
and
and
mov
mov
and
imul
mov
pop
add
lea
std
pusha
mov
ret
nop
push
enter
test
pop
jp
cmp
test
adc
mov
in
sub
nop
aad
lods
cmpsb
test
xorb
jle
cmpsb
adc
push
fiaddl
jbe
fdivrl
xchg
and
push
adc
pop
fisubs
sbb
jp
pusha
inc
lret
add
ret
mov
in
mov
inc
jnp
and
rolb
mov
cmpb
cmpsl
sub
dec
test
jge
stc
ss
mov
lcall
out
mov
hlt
cmp
mov
sub
lods
jbe
ror
shrb
inc
push
dec
xor
xchg
out
outsl
mov
insl
add
xchg
pop
lahf
orl
es
hlt
push
cltd
jge
lcall
push
cmpsb
push
mov
int
xchg
mov
xchg
pop
add
cltd
mov
mov
mov
lret
std
popf
jmp
mov
cmp
pop
jnp
sub
adc
stos
subl
sub
data16
fnsave
outsb
jl
pop
pop
pop
add
or
jg
add
mov
pop
push
xchg
sbb
xor
mov
mov
loop
in
stos
daa
mov
mov
sahf
xchg
inc
rclb
jb
rcll
xchg
in
iret
lock
sub
ds
mov
mov
outsl
cmc
in
leave
adc
stos
or
into
hlt
mov
mov
cld
leave
xchg
shll
arpl
jp
and
inc
inc
testl
ret
clc
insb
ljmp
aad
mov
jnp
xchg
leave
push
jl
ret
addps
or
lahf
movsl
pushw
ja
pop
lret
inc
aaa
sbb
push
popf
or
pop
xlat
jp
cld
outsl
mov
lahf
add
add
pop
mov
xchg
xor
roll
push
rcl
xchg
lahf
stos
in
xchg
sbb
movsb
je
xor
pop
xor
or
out
xchg
add
push
cmp
xor
js
test
xchg
inc
mov
repz
sbb
mov
push
xchg
jno
pop
sbb
dec
jns
ret
pop
inc
cmc
mov
jns
mov
jecxz
pop
dec
mov
pop
test
ret
mov
xor
mov
jns
add
push
cs
inc
test
or
cmp
repz
ljmp
dec
xlat
adc
les
loope
pushf
fdivrl
lea
xchg
fadds
cmp
lcall
repz
add
bound
dec
sbb
or
shr
fwait
in
lret
aas
test
notb
hlt
add
xlat
repz
cmp
or
bound
enter
clc
jecxz
or
mov
mov
iret
in
repnz
enter
jl
jl
inc
mov
sub
neg
add
add
mov
xchg
and
mov
push
jmp
xchg
scas
push
inc
and
lds
inc
rclb
add
xor
pop
adc
jmp
jb
pop
aad
aaa
jl
push
mov
insb
jecxz
fnsave
mov
enter
adc
popf
das
popa
or
scas
jge
sub
xlat
nop
pop
js
xchg
lods
clc
inc
es
lea
imull
push
add
hlt
idivl
shlb
xorl
imul
sub
xor
push
in
popf
sub
aaa
out
cvtpi2ps
jae
sbb
adc
loope
cwtl
jne
cmp
mov
pop
out
gs
sbb
mov
adc
shl
mov
lods
mov
xor
jle
cmp
stc
cmp
sahf
adc
pop
sub
jnp
and
jns
pop
adcb
jmp
bound
inc
mov
lcall
mov
xorb
sub
loop
mov
lea
pop
in
ret
mul
or
add
lcall
popa
mov
xor
mov
adc
ds
inc
jmp
cmp
das
andl
movsb
cmp
adc
pop
outsb
lahf
dec
leave
dec
data16
sbb
into
inc
push
mov
int
xor
mov
fcmovnb
xchg
mov
outsb
fst
dec
pop
mov
pop
sub
push
scas
mov
lds
adc
fistpl
out
sub
or
lahf
inc
ss
add
add
jp
mov
sbb
adc
shrl
int
mov
in
jmp
xchg
xor
cld
in
pop
mov
fwait
or
arpl
lds
sahf
jge
lock
hlt
jbe
test
test
pop
pop
xor
mov
les
ds
push
dec
out
pushf
test
mov
cli
aam
jge
into
jns
stos
adc
fwait
ret
mov
leave
popf
fiaddl
repnz
imul
int3
cld
push
pop
jmp
sub
aaa
iret
fiaddl
or
out
mov
mov
nop
jno
or
addl
ficoml
sub
int
movsl
loopne
push
mov
xchg
pop
mov
pop
and
sbb
clc
leave
dec
sub
adc
adc
dec
jl
imul
lods
daa
or
test
in
cltd
addr16
sub
mov
sbbl
cmc
pop
adc
test
pop
sub
jb
test
insb
scas
hlt
pop
or
cmp
sub
mov
pop
push
push
jmp
fdivrs
dec
nop
jns
repz
icebp
and
xor
inc
push
repnz
aaa
dec
pushf
test
lcall
pushf
mov
xchg
mov
loope
mov
mov
dec
push
jl
mov
outsl
sub
pop
ret
pop
pop
pop
loopne
cli
inc
lods
jns
push
rcrb
addr16
pop
icebp
movl
pop
sbb
addr16
adc
notb
dec
negl
inc
add
leave
xor
xchg
inc
or
scas
dec
mov
mov
popf
scas
mov
fsts
inc
jg
es
mov
cmpsb
xchg
jbe
jl
cmp
mov
sbb
adc
sbbb
insb
push
pushf
cltd
or
aam
inc
dec
xchg
roll
fildl
cmp
mov
mov
and
call
lock
in
in
pop
arpl
pop
inc
inc
hlt
ds
mov
mov
sub
rorb
inc
cli
pop
mov
and
fadds
mov
mov
hlt
in
dec
pop
mov
xlat
push
sub
adc
and
pushl
xchg
test
and
lods
aaa
mov
jg
sub
movsb
ljmp
jb
out
xor
adc
stos
jae
cld
jne
mov
lret
pop
inc
mov
xor
cld
cwtl
pop
mov
push
pop
push
push
femms
cwtl
mov
call
lods
arpl
sarl
cwtl
hlt
mov
pushf
lahf
and
xor
pop
aam
and
in
pop
xchg
fidivrl
inc
sbbb
daa
jae
mov
mov
pop
test
add
jmp
test
dec
lahf
iret
xor
mov
out
xchg
dec
test
inc
in
and
mov
dec
adc
mov
jno
cli
pmulhw
push
popf
jmp
push
and
mov
jge
int3
fs
mov
clc
sbb
cltd
mov
loop
popf
dec
xor
push
mov
lds
int3
in
and
nop
mov
ror
jnp
daa
push
nop
icebp
cmpsl
push
outsb
push
test
cmp
adc
add
dec
jge
fldl
xlat
inc
into
test
fistpl
test
fs
jl
rorl
aam
das
test
push
cmp
xor
mov
ds
push
cld
lods
sti
movb
movsb
fisubl
scas
jae
pop
call
cmpsl
ja
sti
fwait
mull
outsw
pop
adc
pop
or
and
xchg
mov
mov
pop
dec
jge
pop
jge
dec
inc
icebp
inc
testl
clc
sub
popa
jne
inc
inc
out
loop
repnz
add
cld
xor
dec
aaa
push
xchg
int3
cld
int
lds
add
jp
shll
std
cli
sub
push
jae
or
jl
inc
xchg
loope
push
mov
or
cmp
fs
imul
leave
mov
add
insb
push
outsl
dec
xor
loop
addr16
xor
data16
jno
jo
add
push
jnp
mov
sub
or
repnz
mov
sbb
cmpsl
lods
cmp
cld
mov
icebp
xchg
outsb
into
cmp
push
xchg
mov
push
iret
add
movsb
xlat
gs
dec
jp
mov
addr16
int
sbb
jo
push
lea
out
repnz
sahf
dec
jmp
jno
mov
in
enter
out
jb
ret
cmp
insb
push
push
test
mov
sahf
leave
push
push
jno
shl
mov
test
push
inc
xor
xor
insl
jne
mov
or
or
or
pop
push
mov
and
aad
rclb
dec
cmpsb
xor
fistl
mov
xchg
mov
std
add
mov
adcl
fldl
cmp
mov
jmp
cmpb
in
xchg
mov
push
or
in
push
sub
inc
dec
inc
lret
adc
add
add
jno
loop,pt
movsb
nop
call
xchg
xor
cmp
add
gs
jmp
dec
mov
adc
addr16
and
divl
loopne
mov
loopne
and
mov
push
jmp
jp
mov
cmc
push
js
shll
xchg
jo
adc
jno
mov
push
imul
sub
fsts
jg
xor
out
mov
mov
test
mov
mov
push
lahf
ljmp
fwait
push
repz
fs
mov
pop
inc
adc
stc
inc
popa
cli
sub
mov
pushf
xchg
push
pop
dec
pop
aam
add
je
in
xor
and
in
das
inc
push
hlt
push
cmp
mov
insl
or
jg
jns
stos
jmp
cmp
in
pop
outsb
add
mov
inc
ror
pop
push
loopne
inc
daa
mov
sub
jl
stos
test
adc
loopne
push
inc
outsl
dec
cmc
in
push
outsb
fucomip
not
ret
inc
cs
cmp
movsb
push
jle
icebp
dec
sahf
add
mov
pusha
test
in
sub
pushf
popf
repz
in
mov
lahf
gs
mov
add
push
push
enter
inc
enter
cmpsl
shll
xor
sub
dec
mov
jnp
imul
aas
inc
xchg
mov
clc
mov
cmpsb
adc
jmp
sti
jg
xor
in
and
shll
fists
sub
cmc
sub
mov
sbb
mov
adc
in
inc
dec
bound
loop
mov
clc
inc
divb
sub
and
in
test
insb
dec
mov
mov
in
push
sbb
enter
jno
nop
jle
je
icebp
pop
cmp
rolb
inc
sub
negb
aam
test
in
or
daa
lret
fsts
aas
lods
pop
in
add
loopne
jne
push
inc
jo
or
ret
mov
ja
dec
pop
out
aad
in
fwait
mov
mov
mov
sbb
adc
sbb
add
je
out
mov
lds
pop
ret
jae
test
test
pusha
sub
shlb
icebp
jg
mov
add
popl
adc
int3
cmpsb
icebp
mov
push
or
sub
cwtl
jno
lret
inc
xchg
insl
sarl
loop
mov
aam
adc
in
cltd
pop
js
sbb
aas
shlb
push
insl
adc
add
mov
xor
jl
adc
and
mov
inc
mov
jp
sbb
imul
ret
pop
jnp
cmp
stos
pop
stos
xchg
mov
push
pop
cwtl
push
js
test
movsb
push
mov
pop
inc
aam
std
inc
lods
inc
dec
or
aad
lret
lods
cmp
push
add
sahf
inc
sbb
inc
fstpl
icebp
jmp
movsl
cmpsb
popf
out
aaa
sti
sahf
adc
test
aam
cmpsb
ss
cmc
sbb
rep
ret
add
movsl
into
mov
cmp
push
pushf
mov
adc
ja
jb
ljmp
cmp
cld
test
cli
mulb
fs
aas
jge
cmpsl
rcl
mov
out
jno
jbe
pop
pop
ljmp
dec
jle
cli
pop
mov
int
aad
push
addr16
cmpsl
clc
jne
push
sub
add
cmpsb
inc
call
sbb
add
rorb
fnstenv
imul
cld
testb
bound
mov
mov
lds
dec
mov
shll
repz
add
sbb
pop
adc
scas
into
pop
pop
mov
loope
mov
loop
popf
ret
seto
xor
incl
mov
insl
push
insertq
jns
test
xor
xchg
jbe
hlt
or
mov
jl
and
inc
out
insb
sbb
js
pop
inc
and
push
rcrb
inc
fisttpll
shlb
cmp
test
push
push
cmp
mov
pop
pushf
sbb
imull
es
bound
sbb
inc
inc
adc
setno
inc
ljmp
cmpl
das
mov
mov
imul
xchg
sub
jl
dec
pop
inc
add
mov
ss
les
sub
xchg
cmp
shlb
dec
test
jno
jg
add
mov
cmp
dec
das
int
sub
aad
ja
test
mov
lods
lods
xor
pusha
mov
or
mov
imul
sub
mov
repz
fsts
xchg
push
lods
xor
mov
sub
ss
xor
dec
inc
jp
pop
call
pop
sub
mov
out
cs
rorb
aaa
int
fmull
xchg
mov
push
cmp
inc
mov
xchg
addr16
jb
cli
adc
xchg
pop
ds
mov
fistps
lods
fimuls
insl
add
dec
les
repz
rorl
inc
sbb
shll
push
test
jl
cmp
lcall
dec
adc
adc
outsl
mov
jecxz
scas
adc
movsb
inc
nop
in
ficoml
into
mov
call
or
fisttps
or
cld
push
aam
arpl
mov
push
lock
mov
mov
cmc
adc
inc
push
add
and
loopne
scas
mov
sti
les
cmp
out
pop
sahf
loopne
pop
rorl
sub
jg
cltd
hlt
xchg
aaa
fldcw
xchg
mov
xchg
cmp
cwtl
mov
add
adc
sub
mov
cmpsl
cld
inc
gs
push
jne
in
inc
mov
xchg
and
mov
dec
and
call
scas
cmp
mov
aaa
popa
es
xchg
dec
mov
shrl
sahf
cwtl
xchg
jge
jle
orl
outsb
loope
xchg
push
cltd
fsub
shlb
dec
fs
or
push
add
sub
in
adc
pop
outsl
mov
testl
mov
jmp
and
jmp
cmp
mov
cs
sbb
mov
bound
cli
cmp
dec
pop
mov
test
jg
inc
sub
ret
sbb
lods
mov
dec
aad
in
lcall
pushf
fistpl
repnz
repnz
push
pop
jle
push
scas
push
lods
ds
add
mov
jnp
lea
cmp
test
iret
sbb
lret
roll
cltd
imul
popa
fwait
and
mov
pop
test
stos
mov
repz
mov
mov
test
std
out
dec
mul
loopne
out
mov
push
cli
mov
int
test
bound
mov
mov
cli
mov
es
mov
popa
lock
cmp
nop
fisubrs
adc
xlat
or
inc
pop
jle
fidivl
lea
cmp
push
dec
add
outsb
mov
dec
push
sub
adc
rcrl
mov
sub
jmp
int3
mov
add
xlat
dec
dec
adc
insl
fsubrl
ret
out
fs
jg
sbb
add
ss
jge
cmc
push
mov
dec
sbb
int
daa
popa
mov
inc
fists
cmpsl
notl
mov
insl
add
inc
inc
sub
lret
in
loopne
les
mov
shr
cmp
mov
stos
mov
and
and
pop
dec
ds
sub
inc
dec
mov
sahf
pop
popa
cmp
mov
in
jl
sub
ljmp
ss
add
mov
add
pop
or
das
ljmp
loop
xlat
movl
push
sbbb
lods
pop
rclb
aam
cwtl
scas
movsb
stos
test
cwtl
shl
xor
push
mov
ret
xorb
xchg
pop
mov
fdivrl
shlb
xchg
nop
sbb
fwait
jb
aas
xor
loope
insl
add
fimull
push
in
mov
fsubrl
mov
lcall
clc
daa
scas
addr16
add
jl
sarb
push
loope
xor
test
gs
inc
idiv
mov
cmp
fnsave
cltd
arpl
fmul
in
out
lock
daa
adc
sbbl
push
shll
mov
enter
inc
fidivrs
xchg
push
and
es
clc
cmp
shll
sar
jge
mov
in
or
das
in
mov
fisubl
mov
mov
cltd
icebp
loop
add
ja
daa
dec
push
and
sub
sbb
cltd
lahf
leave
cmp
imulb
push
test
jne
cmc
mov
aam
insb
jns
mov
jns
mov
js
xor
mov
lods
imul
jne
stos
enter
push
push
or
call
es
dec
cltd
mov
xchg
inc
xlat
inc
mov
mov
loop
cmp
cli
pop
lods
fistpl
mov
les
mov
aam
mov
inc
xor
outsl
push
jb
cli
dec
xor
mov
dec
sbb
mov
pop
jns
mov
mov
xor
sahf
jl
arpl
jno
jg
xchg
sub
cmpsl
add
adc
test
jae
or
inc
ret
push
inc
push
mov
pop
sti
js
inc
lea
imul
test
imul
mov
cmpsb
in
lret
xchg
cmpsb
clc
mov
inc
popf
repz
pop
lea
insl
inc
data16
jp
call
xor
mov
xor
xchg
xlat
mov
pop
mov
imul
mov
jg
cmp
jb
pop
cmp
inc
outsl
mov
rorl
in
addr16
mov
fucom
push
xchg
sub
fcompl
cltd
loopne
mov
sbb
jp
push
imul
jmp
sar
mov
or
out
out
outsl
add
loopne
xchg
cmp
insl
jnp
mov
mov
aas
rcl
test
inc
push
xchg
outsb
xchg
jle
adc
adc
sub
or
xchg
sbb
int
inc
ss
mov
fnsave
or
stos
iret
inc
lahf
sbb
loopne
gs
or
pop
popa
addr16
inc
pusha
push
push
cmp
pop
fs
orb
or
lahf
loop
in
cmp
fdiv
out
orb
mov
in
xor
aam
imul
or
mov
dec
push
ss
add
xchg
movsl
bound
pop
mov
mov
fcmovnb
sub
pop
das
data16
loope
pushf
repnz
cmp
leave
adc
inc
stos
stos
shrl
dec
mov
jmp
lods
sbb
lahf
dec
xor
adc
xor
loope
push
xor
push
mov
mov
scas
push
jno
rolb
inc
xor
sub
jge
cmp
xor
and
cmp
sub
jg
iret
loopne
cmp
mov
lods
and
mov
movsb
or
test
lds
and
repz
push
test
xchg
jg
sbb
sub
sbb
rcrl
jmp
xor
adc
aad
data16
cmp
mov
sbb
in
inc
jne
repz
sti
or
sbb
mov
test
mov
ss
out
cmpsb
cmp
pop
lcall
or
fldcw
das
fbstp
or
adc
or
fisubs
adc
arpl
jge
cmp
xchg
sbb
xchg
fsubrs
jg
sbb
mov
andb
pop
cmp
pop
loopne
mov
aaa
cmp
inc
cs
cmc
add
or
or
into
adc
ds
sbbl
outsl
xor
loop
xor
rcrb
lods
enter
adc
mov
aad
xchg
test
push
pop
ret
add
in
sub
mov
enter
mov
pop
pop
aam
and
xor
adcl
cld
repz
ja
sahf
add
inc
sub
add
lods
push
or
push
in
adc
mov
es
outsb
cmp
sbb
and
popl
jg
add
sbb
scas
jecxz
dec
xchg
dec
stos
ret
inc
push
data16
daa
mov
cmp
jnp
filds
imul
cmpsb
frstor
cltd
out
je
or
int3
leave
adc
cmp
out
cli
mov
mov
xchg
xor
and
sbb
jne
jecxz
int
shll
clc
dec
aam
or
ret
sub
daa
mov
inc
pop
loope
add
into
into
xchg
sub
test
mov
jb
mov
sub
in
and
adc
test
and
xor
push
mov
fs
and
fists
cmpsl
inc
shrl
not
rorl
jecxz
das
leave
and
ret
push
jecxz
dec
mov
repnz
in
push
mov
push
std
sub
sub
in
mov
push
xchg
adc
cmp
hlt
dec
fiaddl
pop
sub
cmpsb
jecxz
xchg
inc
xchg
lcall
or
scas
test
stos
push
mov
lock
shl
jmp
mov
arpl
clc
mov
sbb
andl
or
sbb
mov
dec
in
pop
mov
mov
outsl
sub
fs
jmp
xchg
sub
negl
jb
movsb
sbb
inc
sbb
dec
or
pop
cld
and
adc
ljmp
and
xor
xor
and
mov
or
mov
lahf
xor
push
movsl
push
push
cmp
dec
sbb
adc
xchg
adc
and
pushf
fiadds
jmp
xchg
icebp
and
adc
jns
imulb
cltd
pop
pop
push
imul
sbb
dec
cltd
jl
mov
test
daa
adc
push
rcr
jo
jmp
or
dec
lods
das
jnp
andl
fwait
jne
push
pusha
andb
and
pop
mov
fstpl
push
pop
mov
rcll
mov
push
jmp
test
pop
dec
aaa
adcb
negl
out
pop
xor
jno
sbb
dec
xor
xor
mov
xor
into
scas
and
test
mov
and
sub
arpl
jnp
lret
stos
xchg
mov
sub
lods
mov
les
out
sub
ret
fcmovb
call
jno
int3
add
loopne
lahf
mov
jmp
clc
pop
rorb
and
dec
cmpsl
and
pop
and
xor
ljmp
cld
pop
cmp
dec
movsb
stos
and
pop
loope
pop
outsb
andl
sbb
cmp
ja
mov
out
mov
jnp
sbb
sbb
bnd
cmpxchg
jb
mov
adc
cs
or
push
dec
push
fistps
lea
sbb
and
xchg
call
add
test
stos
lock
xchg
add
int3
pop
insl
scas
ss
jo
js
adc
les
dec
adc
jmp
or
xchg
hlt
stc
shlb
mov
cli
ss
adc
addb
mov
out
into
out
pop
add
sbb
jae
lcall
add
or
shrb
dec
out
pop
aad
fadds
mov
jns
adc
bound
cmpsl
inc
adc
mov
jb
pusha
or
or
sub
hlt
fidivs
sar
jp
push
xchg
insl
popf
mov
inc
xchg
mov
jmp
and
and
dec
add
jb
adc
or
adc
cmp
es
lret
sbb
mov
imul
scas
jae
lcall
or
pop
rcrb
jmp
xor
jbe
aas
sti
mov
ds
pop
pop
ret
das
push
in
rol
std
xchg
fdivl
popa
push
dec
repz
mov
rolb
xchg
pop
ds
sbb
or
inc
xor
std
rcrb
repnz
sub
pop
jo
inc
les
rcrb
sahf
dec
aas
movsb
ret
dec
pusha
stos
push
test
mov
imul
fnstcw
pop
cmp
or
or
cmp
pop
inc
test
mov
push
dec
inc
ss
xor
add
mov
lods
divb
jge
cmp
mov
pop
push
jb
mov
inc
jbe
imul
insb
cmp
iret
sbb
push
cli
lds
std
adc
xchg
fisttpll
xorl
add
and
dec
xchg
xor
lret
mov
outsl
and
aas
cs
outsl
gs
mov
movsb
test
stos
mov
adc
push
adc
and
jne
xor
fcomps
cmpsb
add
sub
xchg
aas
inc
subb
push
mov
je
bound
push
cmpsb
aam
loopne
fnstsw
cmp
es
pop
or
sub
repnz
add
pop
push
loopne
inc
mov
sti
jno
cltd
js
dec
cmp
xor
mov
pop
sbbl
xchg
out
popf
ret
push
out
and
inc
popa
movsb
pop
mov
lahf
xchg
popf
mov
jb
jle
andb
scas
shrb
fwait
ret
xor
insb
lds
jne
movsl
inc
icebp
dec
cli
inc
hlt
out
mov
cmp
jmp
insl
inc
pop
aas
sahf
es
inc
jne
mov
lret
mov
xor
fdivs
sub
mov
cltd
andb
ret
push
mov
cli
adc
mov
das
or
aam
aad
fisttpll
xor
dec
mov
adc
dec
pcmpgtd
out
xchg
push
push
jnp
popf
shlb
dec
aad
cmpsb
push
fcoml
outsl
xor
add
outsl
dec
pop
adc
lock
divl
ss
pop
and
mov
mov
add
xchg
cwtl
dec
pop
out
jmp
in
sub
dec
fmulp
popa
pop
daa
mov
mov
outsl
mov
inc
bound
outsl
sar
xchg
inc
and
fsubrl
mov
sub
mov
std
and
mov
jmp
ja
test
aas
enter
push
scas
fisubs
imul
pop
sub
adc
clc
cmpsl
add
push
cmpl
push
push
lods
aaa
mov
dec
sbb
push
jno
sbb
ljmp
ds
mov
mov
cmp
push
lret
mov
data16
mov
std
xchg
in
fldenv
aas
pop
js
and
ret
adc
xchg
fstpl
jne
dec
pop
das
sti
mov
daa
bound
push
aaa
das
pop
pop
sbb
mov
xchg
add
cs
jmp
iret
sahf
fbstp
movsb
push
adc
jg
push
jmp
jo
ret
or
repz
out
fistpll
cmp
fstl
ret
push
pusha
popf
out
push
mov
sub
sti
mov
test
mov
negl
xlat
repz
xchg
xor
push
stos
xchg
and
std
xchg
out
inc
es
icebp
dec
scas
sub
jne
cmp
inc
dec
jae
dec
int3
arpl
pop
push
mov
mov
mov
jp
lods
mov
dec
loope
dec
push
cmp
int3
mov
fcoms
js
mov
loope
aaa
mov
or
push
repz
adc
mov
jno
mov
call
out
cmc
add
add
mov
inc
xchg
fcomps
jle
jle
ficomps
sbb
xchg
add
inc
cwtl
xchg
mov
push
add
lret
sub
inc
ja
inc
pop
cmpsl
mov
out
adc
push
pop
es
mov
push
mov
fwait
cmc
mov
adc
mov
xor
outsl
dec
inc
mov
aam
push
scas
int3
sub
add
and
dec
jno
adc
and
sub
lea
or
clc
xor
cmp
sbb
or
adc
add
iret
mov
dec
hlt
mov
jg
pop
mov
out
jno
and
xor
lcall
lods
insl
xor
mov
mov
inc
inc
cmp
fistpll
lahf
add
mov
iret
jge
insb
lea
mov
out
je
aas
jl
xchg
jnp
lahf
and
aas
cld
inc
fcom
push
popf
jge
aaa
addr16
xchg
mov
out
in
mov
mov
inc
jl
xor
ljmp
jo
movsl
lods
in
fidivs
push
sbb
mov
mov
leave
adc
mov
jns
mov
inc
push
test
dec
repnz
adc
std
mov
movsl
adc
mov
mov
ret
mov
mov
sub
jmp
scas
jmp
leave
push
lock
adc
dec
out
scas
iret
mov
loope
cmp
push
pop
pop
insb
push
pop
js
hlt
and
fistps
movsb
std
jge
enter
push
xchg
lods
xor
jns
sbb
or
push
and
mov
xor
dec
xor
mov
negl
out
arpl
push
mov
jne
rclb
mov
jnp
sub
inc
mov
mov
lahf
enter
outsb
xlat
out
pop
popl
shlb
ss
add
push
add
nop
inc
pop
fs
inc
xchg
sub
roll
and
in
and
lahf
adc
push
xchg
ljmp
cmc
addl
xchg
sub
popa
mov
btc
cmp
hlt
sub
xchg
xor
pop
popf
pop
mov
sub
js
jecxz
mov
push
roll
xchg
sub
popa
xchg
rcll
mov
shrb
popf
sahf
cmc
stos
negl
out
sub
aad
adc
fstps
mov
scas
mov
dec
addr16
xlat
xchg
popf
push
push
or
jne
xchg
pop
sarl
mov
das
sub
in
or
ror
aaa
and
les
int3
scas
add
cli
push
rclb
dec
nop
xor
inc
stos
xchg
outsb
imul
dec
push
inc
inc
inc
nop
scas
test
mov
sbb
or
push
imul
inc
push
iret
add
jbe
pop
aaa
int
scas
jo
jmp
in
jo
aam
push
insb
mov
ret
push
mov
push
inc
jl
inc
sbb
mov
sub
inc
add
out
test
mov
sub
add
pop
fsubrs
lret
adc
adc
push
cmp
cmp
push
lea
insl
ds
or
mov
sub
je
mov
jl
adc
adc
xlat
iret
mov
cs
inc
push
ret
xor
sub
lcall
add
ljmp
orb
inc
fldenv
sbb
in
xor
in
sbb
sub
mov
bound
int3
ret
dec
xchg
sub
les
inc
and
inc
adc
mov
push
cli
jns
mov
lcall
jmp
in
adc
pop
jg
into
mov
repz
and
jo
in
stos
jg
add
pop
and
sbb
loope
lock
pushf
and
push
jno
jl
jae
ds
insb
lret
rcr
mov
popa
add
cmpsl
faddl
mov
inc
sarb
inc
xchg
out
mov
leave
jle
and
jmp
mov
fcompl
cld
movb
in
into
icebp
pop
xlat
inc
sub
mov
jne
into
dec
xchg
pop
cmp
mov
cmpsb
cltd
or
in
cltd
xor
enter
mov
test
and
es
push
sbb
inc
adc
adc
nop
mov
pop
ficoms
out
push
pop
jecxz
pop
insb
push
leave
push
add
xchg
add
add
dec
pop
cmp
mulb
or
aaa
xchg
jecxz
insl
sub
sbb
and
push
lds
cli
iret
into
out
sahf
mov
xchg
inc
dec
ljmp
aaa
inc
xchg
sub
jmp
inc
in
and
fnstcw
lahf
std
lock
ret
add
pop
xchg
ss
mov
jmp
lods
mov
adc
jge
cmp
sbb
dec
dec
xchg
shll
pop
test
inc
iret
cmpb
pop
aam
shlb
adc
push
adc
add
mov
jne
arpl
ficoml
xchg
cld
divb
inc
push
fisubs
inc
aas
sbb
test
rcll
xchg
test
dec
mov
add
jmp
fisttpll
into
add
call
xchg
sub
je
cmc
scas
call
mov
add
cmp
mov
cmpsl
shrl
subl
ret
pusha
pop
inc
iret
or
int3
and
es
sbb
pop
or
xchg
mov
xchg
jmp
aas
or
bound
mov
inc
mov
jbe
push
adc
into
fadds
fistpl
out
add
lock
fwait
jnp
adc
adc
cli
dec
xchg
shr
jmp
shl
out
inc
sub
xor
sub
std
and
xchg
jne
and
ss
aaa
fwait
xor
fsub
mov
ret
enter
inc
jg
fistps
sbb
xor
mov
into
push
insb
xor
shlb
ss
into
hlt
mov
jp
push
dec
rdpmc
pop
leave
repz
jno
inc
sub
test
mov
sbbb
dec
outsb
fidivrl
vpaddsb
inc
lds
xor
mov
loop
int
mov
lods
mov
cmp
mov
push
adc
cmc
push
mov
test
iret
pusha
xchg
roll
mov
clc
mov
xchg
addr16
xor
je
cwtl
xor
int3
jnp
sbb
jno
shr
add
cltd
cmp
lods
fnsave
mov
aaa
and
and
mov
jmp
leave
popf
sbb
jb
jp
fsubrs
pop
in
xchg
adc
xor
lock
or
repnz
inc
dec
jg
dec
fwait
test
xlat
in
pop
insl
shlb
cmp
bound
mov
daa
pop
lock
xchg
subl
inc
mov
cli
mov
jb
cld
push
pop
xchg
lods
aaa
int
nop
jb
test
or
push
shrl
xchg
cmp
aam
ret
cltd
sbb
dec
adc
int3
pop
jno
mov
enter
in
je
jb
sub
mov
push
lret
push
data16
ds
jbe
sti
rclb
sbb
adc
mov
add
daa
pop
call
aad
movsl
sub
mov
jp
dec
in
addr16
pusha
addr16
fdivs
in
xchg
call
mov
mov
js
sahf
xchg
cmpsl
jmp
fnstcw
test
push
and
sub
std
hlt
out
out
cmp
add
scas
mov
gs
xor
dec
sbb
jns
mov
cmpsb
repz
or
adc
xor
mov
pop
xchg
ficoml
outsl
test
mov
cmpsb
cmp
cmp
lcall
sahf
enter
xchg
es
pop
inc
jae
in
insl
in
and
lods
cmp
xchg
mov
test
sti
das
and
ficompl
pusha
xchg
adc
push
outsb
dec
mov
sub
xor
scas
in
add
adc
pop
lcall
sarl
imul
inc
pop
mov
and
xchg
in
jecxz
xchg
sub
imul
sub
xlat
data16
daa
cs
mov
cmc
enter
mov
cli
xor
pusha
push
inc
hlt
lods
push
push
scas
dec
ss
xchg
sbb
pushf
dec
hlt
cmp
inc
repnz
fmul
testl
or
jnp
in
test
adc
js
sub
aaa
ficoms
and
mov
popf
and
add
fwait
mov
rcrb
cmpl
call
int
sub
call
insl
ds
push
mov
popf
mov
sub
mov
inc
repz
mov
das
mov
rcrl
shlb
mov
out
ss
mov
sbb
ljmp
icebp
mov
jnp
fs
mov
xor
dec
cld
adc
sbb
push
movl
inc
clc
fucomip
mov
mov
in
sbb
inc
mov
out
fsts
movsl
push
pop
pop
mov
adc
hlt
shrb
in
jl
cmp
push
and
cmp
shll
repz
mov
jbe
pop
pop
out
ffreep
aad
cli
adc
leave
mov
adc
xor
jmp
xchg
stos
inc
imul
call
dec
mov
cmp
shrl
out
pop
icebp
sbb
dec
xchg
mov
nop
sub
pop
mov
loope
aas
dec
and
clc
cli
js
xchg
stos
jmp
adcl
lods
in
ss
lahf
out
mov
inc
ret
loop
sbb
mov
pop
or
into
ret
or
inc
xor
inc
and
mov
cmp
cmp
and
mov
nop
mov
out
inc
mov
mov
jns
xchg
aas
push
xor
insl
and
jl
out
leave
xor
rclb
xchg
or
stos
js
adc
push
xor
sarb
or
push
ss
jecxz
cmp
scas
push
out
pop
cmp
out
shlb
cmp
mov
mov
scas
popf
lods
int
xchg
cmpsb
sub
outsb
imul
xchg
fwait
imul
movsl
out
mov
in
ss
mov
pushw
sbb
adc
lods
or
dec
pushf
sbb
sbb
fistl
out
jmp
imul
push
jp
push
outsb
ja
add
jmp
xchg
mov
xchg
xlat
pop
cmpsl
push
sub
sub
xor
add
push
lret
in
loope
scas
frstor
jno
mov
xor
sbb
ret
mov
cmp
test
mov
xchg
daa
adc
in
jo
adc
in
cld
push
xor
outsl
jecxz
lods
mov
and
in
insb
stos
jge
loope
gs
fnstsw
leave
icebp
fiadds
test
lret
imul
jbe
sbb
inc
test
int3
mov
cmp
sub
lds
enter
push
mov
std
fdivl
gs
sub
test
and
dec
push
mov
fs
push
flds
mov
jne
out
icebp
xchg
mulb
cmp
mov
push
sbb
imull
sub
mov
loop
push
adc
mov
mov
jae
dec
push
sub
movsb
sbb
xor
out
jo
or
inc
mov
pop
lock
nop
cs
in
sbbl
mov
mov
jb
mov
cmp
push
push
sub
jb
popa
ss
ret
cmpsb
hlt
dec
roll
mov
cld
adc
popa
push
xchg
push
inc
mov
dec
jo
sbb
clc
add
sbb
arpl
ficoml
add
pop
packsswb
dec
mov
sbb
sbb
push
add
in
xchg
test
nop
mov
enter
mov
sbb
xchg
repnz
fsub
imul
sbb
shlb
outsb
mov
inc
jp
lahf
fld
inc
loope
xchg
add
mov
and
in
add
pop
out
jnp
decb
adc
jge
sbb
and
sub
jg
shll
add
cmpsb
je
cmp
mov
sub
mov
mov
jne
daa
popf
push
add
pop
jne
popf
mov
cmp
lods
sarb
push
jb
pop
lahf
or
push
insb
inc
testl
or
enter
cmpsb
jns
cs
adc
xor
mov
sbbb
xor
mov
dec
das
lds
popf
mov
pop
sbbl
outsl
pop
sbb
repnz
sbb
fwait
cmc
dec
clc
gs
or
mov
and
iret
jmp
lcall
fsubp
xor
pop
inc
xor
popl
pop
inc
adc
xor
adc
mov
ret
sti
cmp
push
int3
lcall
xor
dec
in
mov
lret
add
pop
sub
les
xor
or
cs
es
loop
or
push
jmp
or
clc
cmp
fcoml
fisttpl
in
jne
mov
mov
dec
inc
in
mov
fldl
push
or
sarl
scas
das
aam
mov
neg
les
dec
aam
mov
sbb
and
lods
nop
aad
call
and
movsb
in
push
scas
iret
jns
adc
jb
sub
bound
sub
sub
cld
xchg
mov
adc
adc
push
dec
xor
sbb
mov
push
dec
or
test
lods
dec
mov
ret
xchg
add
dec
jno
hlt
jb
loop
aam
movsl
sbb
add
cli
dec
je
ds
push
xor
mov
dec
call
loop
xor
pop
hlt
push
or
test
repz
jmp
aas
and
push
xor
popf
aas
fbld
loopne
or
push
jp
mov
test
and
push
mov
sub
or
adc
xchg
popa
sbb
xor
sub
inc
sbb
sub
jl
xchg
hlt
sbb
jl
cmp
sub
pop
cltd
in
dec
add
popf
jns
jns
inc
dec
lods
in
pop
scas
sub
xchg
jmp
and
mov
adc
xchg
pop
mov
mov
sbb
jo
scas
or
xchg
xor
lret
xchg
xor
add
sbb
mov
lahf
int
xabort
lods
jecxz
mov
loopne
xor
imul
mov
loopne
gs
xchg
cmp
jae
popf
inc
push
push
jecxz
add
pop
adcl
jmp
push
mov
aas
pushf
fsubrp
out
js
test
fildll
push
in
pop
dec
push
call
mov
ljmp
loope
int3
loop
add
adc
jae
sbb
lods
mov
mov
adcb
cmp
pushf
gs
data16
pop
adc
mov
cmovg
mov
xor
aas
ds
std
jns
xor
jmp
mov
ds
and
jns
jne
mov
inc
jnp
adc
jo
sub
dec
inc
mov
adc
jecxz
jle
fidivrl
lahf
or
xchg
lret
out
cmp
pushf
fistpl
sub
cmp
inc
leave
push
mov
inc
pop
mov
stos
lock
cwtl
push
push
cmpsl
popa
push
sbb
shll
inc
aas
shll
xchg
sbb
mov
mov
js,pt
push
imul
dec
stc
and
sti
lahf
inc
xor
addb
cmp
inc
sbbb
jae
mov
mov
dec
xlat
jb
push
cmpsl
adc
add
jo
fdivs
jns
add
rcll
arpl
shll
loopne
hlt
inc
jno
mov
aad
loopne
cltd
les
cmp
pop
xchg
imul
outsb
out
mov
adc
sbb
push
clc
dec
jl
cmpsl
adc
inc
push
test
test
push
jb
and
in
hlt
test
cltd
cmpl
add
pop
rorb
mov
movsl
sti
cltd
mov
inc
out
xor
leave
out
cmc
rcll
orl
cmp
int3
outsb
dec
subl
push
dec
rcll
sbb
inc
mov
mov
pop
jl
lds
sbb
into
repz
stc
cwtl
cli
jge
sbb
pop
push
mov
mov
pop
scas
lret
or
clc
mov
hlt
shrb
sbb
cwtl
adc
adc
push
sbb
out
dec
iret
add
dec
inc
push
in
inc
mov
hlt
mov
mov
pop
out
xor
or
xchg
decl
enter
xchg
mov
push
jmp
and
les
add
ffreep
mov
int
scas
lahf
idivl
pushf
push
in
inc
pop
mov
push
addl
frstor
stos
lods
mov
pop
push
popa
adc
into
xor
lcall
and
mov
xor
cmp
aas
out
aaa
mov
push
push
jnp
cmp
xor
int3
test
push
mov
pop
aaa
cmp
cmp
fwait
mov
adc
cs
cli
iret
pop
mov
push
das
repnz
mov
out
mov
push
or
push
mov
push
and
push
push
adc
dec
stos
loope
mov
scas
mov
sbb
jmp
test
cmp
mov
popl
popa
fmuls
fidivrs
aas
iret
or
addr16
inc
pop
popf
jae
mov
loopne
out
jecxz
cmp
pop
out
or
push
int3
lret
scas
pop
movsb
jne
push
xor
pop
out
pop
xor
pop
push
outsb
ljmp
add
lret
push
inc
jge
or
in
aam
in
sub
test
outsl
dec
jns
pusha
cmp
das
push
insb
idivb
ljmp
jae
out
lret
jecxz
sub
add
inc
cld
sbb
or
cwtl
and
mov
clc
push
clc
and
movsl
gs
or
xchg
les
sbb
dec
scas
mov
js
sub
ficoms
mov
dec
andb
mov
sbb
outsl
ds
ljmp
out
lcall
mov
div
add
xchg
pop
and
popf
jno
add
pusha
dec
add
mov
div
push
int
aad
in
mov
addr16
movsl
inc
pop
subl
lock
imul
aam
popf
lahf
pop
outsl
and
fbstp
lret
mov
sbb
pop
push
pop
mov
cltd
movsl
fs
jbe
pop
lret
or
sbbb
mov
getsec
loop
jg
dec
sbb
cld
mov
sub
or
pusha
shlb
push
adc
push
or
lods
andl
xchg
nop
enter
mov
fmull
mov
out
pop
fs
ljmp
aas
and
xchg
sti
adc
pop
inc
iret
mov
adc
push
pop
xorl
clc
inc
roll
dec
pusha
call
sbb
iret
loop
xchg
xchg
jno
daa
mov
loop
xchg
dec
mov
popf
push
xchg
fnstsw
jno
cmp
adc
lcall
ficoms
mov
add
test
test
sub
sub
aam
xchg
icebp
xor
mov
ror
lcall
inc
data16
xor
cmp
pop
xor
subb
pop
out
dec
loope
push
and
pop
idivb
xchg
xor
sbb
or
cmp
xorb
mov
faddp
stc
cmp
xlat
icebp
cmp
sti
addr16
push
popf
lea
out
mov
insb
adc
xchg
fsubrp
cltd
in
rep
scas
subl
sub
in
or
pop
adc
add
or
jnp
mov
nop
out
int3
fstpt
push
hlt
aaa
jne
ja
fs
mov
dec
mov
cmp
mov
add
pop
cmpsb
dec
and
sti
xchg
mov
fdivs
mov
movsl
adc
fwait
and
imul
sbbb
pusha
sub
dec
popf
std
mov
adc
cltd
stos
popl
sbb
push
sti
loope
ljmp
mov
arpl
or
xchg
xor
lods
ja
test
jns
and
lahf
lea
mov
push
rolb
test
loopne
popf
pop
mov
or
ljmp
out
xchg
cltd
orb
fs
cmp
sub
adc
pop
xchg
dec
sub
rcrl
mov
in
gs
mov
sbb
mov
lcall
mov
and
js
in
xor
aam
js
mov
dec
dec
aam
fbstp
lds
fists
push
in
xor
adc
roll
movsl
sub
subl
cli
xchg
adc
sahf
in
xchg
sub
sub
dec
lcall
gs
mov
hlt
dec
xor
pusha
loop
clc
inc
adc
imul
cmpsb
fidivl
and
aam
call
orl
push
xor
fwait
les
shl
and
ds
mov
fldt
jmp
pop
imul
adc
ja
pop
fisubrl
mov
inc
negb
or
dec
sahf
push
pop
push
dec
or
jb
adc
adc
pop
cmp
mov
cld
icebp
dec
jecxz
sbb
sahf
sbb
mov
test
aad
push
xor
les
shrb
push
jnp
gs
out
mov
cmpsl
lods
frstor
jb
sub
out
shll
jnp
inc
enter
mov
xor
insl
push
rolb
mov
mov
add
mov
add
xor
leave
cmp
sar
inc
cli
or
psubq
pop
fcmovnbe
jbe
test
xchg
faddl
or
dec
sub
jnp
insl
xor
add
into
ss
add
mov
inc
test
bound
mov
dec
gs
xchg
xchg
mov
lret
in
in
push
mov
insb
orl
jno
mov
mov
int
repz
sbbb
jno
data16
cli
aaa
std
and
push
outsb
loop
adc
mov
pop
cltd
add
mov
adc
push
test
enter
pushf
jecxz
xchg
lods
ss
jle
leave
adc
ljmp
add
mov
iret
fisubrs
mov
ss
mov
and
ret
ficoml
test
out
lret
inc
cs
lahf
xchg
xor
shrb
inc
push
iret
les
xor
fs
or
adc
pop
fwait
nop
sub
cmp
je
data16
inc
into
inc
lcall
lret
test
jle
xchg
loope
push
jne
sti
sahf
sbb
mov
push
adc
hlt
sbb
inc
stos
mov
xor
adc
es
or
movsb
stc
xchg
pop
dec
cmpb
inc
hlt
cmpsb
iret
lret
loop
push
es
sti
inc
sbb
repnz
mov
pusha
rcl
lcall
stc
lahf
jnp
mov
arpl
jne
inc
jle
cmp
cmp
push
icebp
sar
in
pop
test
pop
fmuls
leave
movb
sbbl
ljmp
add
mov
sbb
test
stos
xor
xor
add
mov
inc
into
pop
repnz
xchg
mov
movsb
fcmovu
aad
stos
mov
mov
cltd
enter
iret
mov
pop
mov
fs
push
cmp
rclb
enter
xchg
push
scas
mov
arpl
mov
pop
test
add
out
in
test
je
or
xor
xchg
sbb
mov
jb
sbb
cli
lods
bound
and
or
cmp
aaa
rclb
jl
inc
cmpb
xor
sti
or
inc
shll
add
insb
mov
jg
pop
data16
rorb
aas
inc
js
das
mov
jbe
sbbl
test
sbb
ret
loope
add
push
add
jmp
fs
es
mov
cltd
jmp
dec
cmp
mov
or
into
fists
jnp
mov
sti
pop
jg
mov
ljmp
sbbl
iret
and
mov
push
outsl
mov
and
fstl
jge
lods
fcmovnbe
imul
jns
adc
int
repz
mov
cmp
mov
push
mov
lea
mov
pusha
pmuludq
add
push
adc
push
inc
cld
arpl
sbb
jae
psrad
rorb
aad
addl
std
cmc
xor
push
je
stos
loop
sbb
mov
syscall
shll
mov
cltd
xchg
fs
sub
lock
ljmp
cmp
and
mov
mov
add
repnz
xchg
jnp
inc
cmp
sahf
adc
in
decl
adc
fwait
cmp
scas
jl
pop
stos
push
push
and
push
xchg
mov
push
inc
or
cmpsb
push
or
insl
sahf
push
movsl
in
jbe
push
jne
fistpl
xchg
scas
cmc
inc
incl
test
decl
jge
fnsave
and
js
xor
mov
int
adc
lods
loope
push
int
mov
inc
btc
shrb
rolb
lahf
ret
push
out
xor
adc
mov
lock
push
imul
push
xchg
addr16
sbb
jge
cmp
bound
les
pop
shl
ja
mov
mov
xchg
fiadds
pop
xchg
pop
mov
bsf
push
jne
inc
cmp
divb
imull
enter
daa
jecxz
cs
pop
fisubrs
inc
notl
inc
push
inc
sub
xor
inc
or
mov
clc
sahf
lods
pusha
fldl
cli
les
sub
lret
or
mov
jmp
es
jge
cmp
mov
fnstsw
or
or
mov
cmp
jnp
out
gs
addr16
jb
pop
outsb
xor
enter
dec
sarl
sbbb
cld
fldcw
cs
sub
push
or
in
inc
fs
ss
jp
pusha
shl
clc
fwait
ret
cmp
iret
xor
out
adcl
push
sub
in
cmp
cs
pop
push
lods
and
lods
add
lods
ret
ret
out
loopne
xchg
stos
pop
out
sub
leave
sub
sub
clc
cld
out
mov
rol
push
jle
lahf
add
fldcw
imul
or
rcrb
sbb
call
scas
je
aaa
jp
dec
into
pop
cmp
adc
push
aaa
shrl
fildll
xor
in
popf
dec
mov
out
sbb
cmpsb
inc
add
pusha
hlt
inc
cld
and
outsb
lret
push
cld
mov
push
mov
xor
call
pop
sbb
andl
xchg
mov
mov
sub
push
push
sub
and
jmp
xor
mov
push
or
mov
sbb
or
pop
cmc
leave
cmc
fistps
mov
fs
push
int3
in
sti
cwtl
push
jle
mov
cmp
inc
ja
jnp
adc
test
leave
mov
scas
negb
push
pop
hlt
push
int3
icebp
jo
imul
mov
cwtl
jge
pop
mov
aas
nop
inc
adc
dec
mov
scas
sub
add
fadds
inc
mov
sbb
inc
stos
mov
aaa
cwtl
mov
mull
cmp
movsb
adc
ljmp
or
je
cmpsb
sti
out
lret
lds
xchg
popa
clc
jne
outsl
addl
ret
mov
out
xchg
jle
cmp
pop
sbb
pop
xchg
sti
frstor
mov
out
xchg
sbb
les
repnz
sti
pop
lahf
fdiv
aaa
push
decb
lock
pushf
add
pop
arpl
mov
inc
sahf
mov
dec
sub
cwtl
loop
or
sar
ror
inc
leave
jl
sub
icebp
sarb
cmc
pop
mov
out
sub
pop
add
xchg
popf
sub
cwtl
cmc
jmp
mov
popa
clc
ret
or
out
cmp
xchg
cli
inc
rdmsr
pop
sbb
pop
scas
sbbl
mov
push
adc
add
dec
mov
sti
cmc
hlt
mov
mov
sub
shrb
cmp
fmull
insl
cwtl
ja
mov
lods
ja
pop
sbb
pop
sub
pop
mov
pop
scas
fsubs
mov
fwait
adc
mov
xor
jnp
mov
cld
xlat
sub
icebp
int3
jecxz
mov
pop
xchg
pop
mov
cmpsl
pushf
sub
push
adc
orl
int3
in
shrb
and
inc
add
orb
adc
jne
cli
insl
je
scas
dec
fcmovne
lcall
cmp
cmp
xor
xchg
cld
xchg
adc
dec
addr16
and
rol
pop
inc
movsl
lcall
in
cmp
dec
inc
mov
dec
add
push
shrb
xchg
mov
sti
sub
add
daa
jae
out
mov
push
mov
test
inc
sbb
mov
js
sbb
lret
scas
pushf
pop
xchg
push
xchg
inc
shlb
icebp
das
mov
push
es
ret
cmp
adc
sub
mov
imul
jmp
movsb
inc
mov
in
mov
adc
lret
imul
cmpsb
jnp
mov
sbb
mov
sbb
jno
and
aas
adc
daa
and
aaa
sbb
and
nop
pop
push
mov
cli
lods
pushf
push
fisttpll
mov
lods
add
sti
aam
movsl
xchg
emms
icebp
mov
insl
sbb
mov
lahf
pop
mov
fcomp
insl
adcb
xor
cmpsl
xchg
inc
nop
aaa
std
sbb
and
jge
mov
outsb
push
mov
ss
and
xor
lcall
loope
cmp
subl
fstps
negb
push
mov
fucomp
jno
pushf
adc
int3
stos
lret
aam
hlt
sub
fmuls
loope
test
xchg
jbe
in
fstl
jecxz
mov
mov
xor
or
inc
inc
jbe
test
mov
mov
loopne
imul
loop
push
adc
bound
aaa
mov
outsb
pop
push
adc
dec
sbb
fsubrl
fucomp
out
sbb
std
repz
xor
jo
mov
push
mov
orl
test
pop
test
mov
dec
cs
xor
pushf
pop
mov
stos
jl
fwait
sbb
push
add
imul
add
mov
dec
sub
iret
sbb
add
and
xchg
inc
or
pop
cmp
push
add
out
push
mov
jle
jp,pt
xchg
pop
push
pop
pop
mov
shll
sub
jae
dec
outsl
xchg
and
loopne
ret
rclb
mov
dec
fwait
pop
sbb
jae
sub
or
inc
popf
negb
incl
nop
add
push
adc
pop
cmpsb
xchg
xor
xor
cmp
mov
or
les
or
push
jl
xchg
jbe
cmp
movsb
mov
int3
and
and
mov
jmp
xor
inc
push
iret
push
and
mov
iret
aaa
aas
adc
popa
loope
stos
mov
adc
mov
lret
add
outsl
push
mov
cmc
hlt
adc
sahf
inc
sub
sti
cmpsl
xchg
shrb
jnp
pusha
imul
loopne
xchg
and
inc
and
add
push
mov
cmp
stos
add
daa
jmp
mov
add
lods
mov
push
pushl
jecxz
cs
inc
sahf
test
xor
pop
leave
mov
mov
pop
dec
push
cmpl
or
jl
fwait
pop
mov
cmp
jno
push
popa
xor
inc
jl
gs
movsb
lock
mov
mov
idiv
loope
mov
orl
cmpsl
or
or
cmp
mov
sub
fs
bound
js
xor
pop
xchg
notb
int3
jg
outsb
loope
xchg
mov
cld
rorb
sbb
sub
or
sahf
push
add
cmc
lcall
sbb
loope
mov
xor
arpl
xchg
in
sub
mov
mov
outsb
imul
or
call
es
js
hlt
xchg
push
dec
jo
mov
test
daa
pop
cmpsb
push
hlt
out
push
xchg
adc
jae
cwtl
outsl
int3
fisttpl
sub
xlat
xchg
insb
mov
test
mov
inc
daa
mov
xchg
int3
test
shlb
cmpsb
jle
jle
out
xlat
divps
mov
mov
out
push
pop
pop
jecxz
mov
loope
jmp
xchg
cmp
inc
jno
xor
insb
fdivrs
fldt
es
mov
mov
mov
lcall
cmp
loopne
das
sbb
cwtl
mov
adc
pop
push
jg
sub
jns
cmpsb
mov
sbb
fsubrs
fisubl
lods
jnp
iret
and
testb
dec
paddusw
sbb
mov
divl
scas
dec
and
leave
repz
dec
popf
cmp
pop
inc
cmp
add
or
sbb
xor
addb
fmull
std
loope
test
lock
stc
jge
fisubrs
dec
pop
ja
and
shrl
imul
popa
mov
sub
arpl
incl
movsl
int3
mov
lock
fstl
lea
lods
int3
stc
rcll
sub
push
dec
js
mulb
push
or
aas
cmpsl
in
sbb
cli
aas
push
jg
mov
scas
lock
adc
pop
fcmovnb
mov
dec
hlt
ss
mov
sub
adc
and
insb
sar
xor
mov
push
es
rcrb
stc
adc
mov
mov
push
and
pop
xchg
out
enter
pop
ss
fsubrs
fwait
bound
adc
and
insl
ret
loop
cmp
inc
test
push
ss
les
sub
inc
add
lret
mov
or
scas
push
mov
mov
jmp
pop
gs
and
dec
nop
and
xchg
mov
pushf
movsl
into
cmp
jb
xchg
cmc
adc
testl
lea
shlb
or
and
in
aam
adc
mov
dec
ret
xor
sti
dec
ja
inc
push
imul
and
std
and
stc
mov
sbb
lret
cltd
inc
nop
ret
add
sbb
xchg
mov
pusha
inc
and
jnp
dec
push
sub
add
fs
cmp
in
add
jnp
out
lods
cmc
call
adc
lds
test
call
lret
shlb
aas
sub
adc
iret
cmpsl
gs
jge
mov
lret
or
movsb
or
xor
imul
sub
or
push
into
jge
jae
xor
dec
fsubl
xlat
in
es
add
cli
jmp
push
mov
test
jno
sub
cmp
and
je
xchg
outsl
dec
lods
xchg
popf
xchg
subl
lods
sub
lods
out
inc
push
mov
in
xor
xchg
cmp
inc
fs
mov
push
pop
je
sbbb
and
mov
adcb
mov
jle
cmp
pop
clc
pusha
add
es
mov
insl
mov
jmp
and
inc
fisubrs
jmp
sbb
dec
push
xor
loope
jbe
popa
mov
adc
addl
mov
je
int
push
out
cmp
inc
mov
aad
stos
aas
push
pop
jbe
dec
pop
hlt
imul
xchg
ss
js
arpl
nop
pop
mov
xor
adc
sub
dec
cs
mov
pop
dec
jl
xor
jnp
dec
shr
mov
addb
mov
mov
adc
adc
dec
adc
les
adc
push
inc
dec
and
mov
imul
jl
adc
mov
adc
push
push
ds
cmp
cmpsl
mov
loop
mov
xchg
test
jg
rcl
and
push
jne
fsts
mov
jmp
cld
incb
inc
cmpsb
cmp
xchg
or
in
loop
dec
pop
in
inc
lods
int
dec
xor
jo
mov
shr
daa
stc
jecxz
inc
add
cmp
int3
xor
xlat
jae
rcrb
jnp
or
loopne
jge
int3
stc
dec
rcr
leave
mov
dec
add
aas
ja
pop
cld
int3
addr16
stos
mov
sahf
push
popa
lods
sbb
pushf
xchg
orl
bound
arpl
movsb
mov
xor
les
mov
fstpl
sub
and
push
out
sbb
imul
dec
fistl
jo
ja
data16
sub
xchg
test
lods
dec
shrl
lea
jne
notl
les
dec
into
sub
daa
cmp
xor
push
fstpt
adc
pop
or
inc
or
push
inc
pop
adc
les
mov
pusha
nop
imul
repz
subl
sub
and
xor
mov
inc
lods
pop
test
mov
lods
or
les
std
jo
shlb
test
into
negl
insl
outsl
and
rcll
gs
or
clc
mov
lea
in
ja
loopne
pop
jb
inc
loop
popf
out
mov
push
test
std
and
repnz
xlat
jbe
mov
adc
jnp
xchg
leave
stos
sbb
seto
aad
sbb
fs
jno
adc
std
xchg
ret
lods
dec
adc
xchg
dec
sub
or
mov
hlt
insl
or
jb
ja
iret
ds
enter
frstor
mov
push
aas
xor
pop
popf
je
arpl
inc
xor
push
cld
es
xor
sarl
sarb
cmc
lret
cmc
adc
out
jmp
popf
add
ficomps
in
fs
fldenv
testl
cli
je
adc
ds
cmp
aam
data16
out
fs
and
jle
loope
ret
sbb
mov
fcmovb
mov
add
and
ret
sahf
gs
mov
sti
jbe
add
or
adc
xchg
insl
push
dec
xchg
into
mov
pop
fstpt
inc
lock
push
test
fwait
mov
adc
aas
cmpsb
ds
lds
nop
sub
mov
fildll
cli
in
aam
jne
repz
inc
int
loopne
in
jb
pop
mov
inc
pop
add
xchg
test
fs
divb
iret
pop
hlt
xor
mov
dec
mov
mov
jmp
lock
es
enter
bnd
push
inc
loopne
cmp
sti
cwtl
cmp
or
ja
push
adc
and
inc
sub
push
fmul
pop
jl
and
dec
xchg
mov
dec
push
cltd
sbbb
shr
testl
addb
adc
ds
xchg
pop
bound
add
mov
mov
insb
cmpsl
cmc
xchg
lahf
add
shrb
jne
in
cmp
test
adc
lahf
pop
test
jae
fwait
mov
add
push
int3
or
dec
cmp
inc
mov
adc
outsb
dec
sahf
out
add
addr16
ret
fadd
inc
mov
cwtl
ja
in
adc
pop
std
cmp
pop
icebp
rcrl
inc
std
xchg
comiss
sti
sub
loop
lret
lahf
fcompl
inc
xchg
cmp
mov
mov
inc
imulb
enter
add
push
sbb
lods
bound
mov
mov
ljmp
daa
sbb
xchg
xchg
rolb
les
imulb
loop
pop
popl
xchg
hlt
test
fistpll
outsb
stos
push
fsubr
scas
stos
gs
adc
cmc
mov
ficoms
mov
insb
frstor
imul
outsl
pop
pop
sbb
xchg
int
into
test
xor
in
mov
js
lcall
dec
xchg
add
out
xchg
push
rolb
shld
add
scas
pop
mov
cmpsl
pop
jno
jg
sub
inc
in
or
icebp
je
out
mov
mov
faddp
adc
add
sbbb
imull
mov
nop
outsl
pop
pop
test
xor
rorl
sub
cmpb
fmulp
jns
mov
je
dec
xchg
jmp
mov
push
add
mov
addr16
sub
repz
ficoml
pop
enter
les
lods
xchg
movsl
lahf
mov
cmp
add
inc
inc
fs
pop
and
cmp
ret
xchg
out
and
pop
cli
sub
sar
lds
in
es
adc
pop
data16
jne,pt
mov
xorb
ret
addr16
mov
xadd
jmp
xor
add
push
jl
fadds
mov
addr16
pop
add
sahf
inc
cmp
sti
xchg
adc
sahf
jb
inc
mov
xchg
adc
andb
lods
shl
imul
ja
negl
insb
push
ljmp
pop
data16
or
outsb
xor
insb
mov
mov
mov
jne
inc
push
sbb
push
cmp
fiaddl
xor
in
mov
fprem1
xor
mov
aaa
jbe
push
call
into
mov
icebp
enter
sbbb
or
jmp
and
lods
push
and
mov
fs
lcall
in
jl
decb
shrb
imul
cmp
sub
mov
dec
stos
dec
xor
mov
fwait
cwtl
xor
add
je
int3
mov
stc
pusha
dec
mov
or
push
insb
shll
dec
xchg
in
ret
test
and
sbb
or
insb
mov
add
sub
and
lods
push
jge
lcall
or
or
repz
mov
aaa
xchg
xchg
mov
sbb
stos
sub
pop
aas
mov
iret
test
mov
cmp
fdivrs
cmp
popa
sbb
adc
xchg
xor
mov
add
outsb
fwait
sub
fisttps
xchg
sbb
aam
and
or
cmpb
or
jae
fnstenv
mov
mov
mov
mov
les
clc
int3
scas
fwait
dec
into
cmp
popa
adc
jge
lret
mov
xchg
mov
inc
test
lock
arpl
sbb
inc
adc
mov
mov
push
in
sub
in
or
xor
pop
es
or
pop
mov
jns
sbb
fcomps
dec
mov
mov
inc
cmpb
mov
mov
loop
movsl
mov
hlt
loop
pop
aas
mov
xor
rcrl
mov
imul
lcall
jle
movsl
daa
leave
sarb
mov
lock
adc
addl
and
push
mov
pop
testl
popl
or
popa
shrb
dec
mov
out
cmpsb
inc
sub
xor
andb
cmp
call
xchg
lock
shl
xchg
gs
ds
pop
mov
xchg
stc
push
cs
sub
push
fwait
iret
dec
push
push
inc
inc
jnp
ds
or
in
shrb
xor
lock
lods
loope
mov
pop
leave
repz
pop
adc
dec
pop
push
movsl
pop
xchg
loopne
push
lea
or
mov
jg
inc
or
sbb
fnstsw
sub
inc
xor
jnp
lods
cld
add
bound
shl
out
add
adc
cli
out
or
in
pop
dec
sub
sarb
sbb
in
xchg
ret
into
dec
pop
fmull
mov
or
push
nop
jge
and
dec
jmp
in
xchg
inc
sub
xor
clc
divb
inc
add
sbb
mov
int3
std
jnp
popf
jb
sbb
mov
cmc
cmp
aad
add
xchg
add
dec
loopne
test
and
sti
jp
push
mov
mov
ljmp
mov
inc
jl
fisubrl
mov
pop
lods
or
inc
sti
pop
pop
mov
sahf
mov
inc
ss
mov
ret
popa
inc
mov
enter
xchg
fucom
addb
push
lcall
inc
pop
and
cmc
jl
and
sahf
push
scas
push
inc
addb
push
add
out
pop
adc
add
rol
sub
call
cmp
std
and
jl
loop
aam
mov
mov
adc
addr16
lock
dec
lret
inc
or
adc
cs
stos
popa
xor
push
jge
nop
mov
pop
dec
rcll
movsl
sbb
mov
mov
insl
popf
cmp
mov
mov
in
aam
dec
cmpsl
rcl
jle
mov
popf
cld
inc
dec
sahf
xchg
and
add
jne
sub
int3
sbb
push
pushf
cmp
xor
ds
lods
or
es
cmc
inc
xchg
bnd
xor
sbb
test
in
lds
inc
inc
outsb
lea
mov
inc
cmp
xchg
pop
popf
lods
dec
jae
xchg
in
leave
out
and
out
sti
sti
aam
xor
sub
jo
push
and
pop
lret
push
sub
imul
int3
test
mov
pushf
sbb
fidivrs
jecxz
adc
aad
int3
andl
popa
xor
test
popf
mov
mov
or
xchg
cmpsl
jne
and
test
or
dec
je
gs
pop
pop
mov
xor
mov
push
push
enter
lods
jno
into
sub
aas
movsl
ficoml
jbe
inc
ss
ds
out
cmp
movsl
shrl
xchg
cmc
pushf
pushf
jle
sahf
fsubr
das
xchg
ds
ja
mov
mov
test
jge
sub
es
fdivrp
mov
add
js
add
cmp
insb
lods
imul
fdivl
xor
and
lret
repz
sub
inc
in
sub
push
add
inc
loop
std
inc
mov
orl
je
aas
jbe
repnz
stc
inc
inc
sub
test
int
jge
and
sub
and
xchg
jmp
dec
outsb
cld
clc
lcall
int
jmp
in
dec
fisubrs
xchg
cld
adc
cmp
test
int
jne
mov
fidivs
icebp
xor
pop
inc
cmp
dec
imul
lock
es
ficoms
in
adc
fwait
sub
push
mov
xchg
subb
repnz
sarb
and
arpl
jecxz
mov
cmp
cmp
adcl
push
clc
daa
sub
mov
mov
jb
mov
mov
xor
imul
add
push
mov
out
jle
inc
or
rcrb
or
xchg
std
inc
and
shll
push
lahf
mov
inc
and
pusha
mov
mov
xchg
insb
inc
mov
iret
and
mov
mov
ret
dec
test
jmp
mov
movb
xor
into
test
fsubrl
stos
xlat
std
adcb
jo
cmc
shl
cltd
adc
repnz
xchg
jo
js
mov
dec
ja
arpl
mov
ljmp
cmp
sub
sub
pop
and
or
outsb
sub
rolb
int3
loopne
dec
je,pt
out
lods
push
and
leave
mov
and
sub
rorl
int3
lret
mov
adc
and
loop
mov
notb
shrl
ret
jno
cwtl
fmuls
fs
mov
out
jp
fisttpl
push
stos
xchg
enter
sub
scas
outsl
je
loop
sub
sarl
pop
xlat
dec
dec
jl,pn
aam
lcall
out
adc
push
push
test
into
mov
or
jg
or
scas
movsb
pop
fsubr
mov
xor
pop
add
pop
cmpsb
jmp
inc
into
shl
scas
ficomps
add
xor
in
imulb
jns
hlt
ja
mov
ja
push
lret
sbb
cmp
addr16
xchg
jge
xchg
sbb
out
jo
push
fidivrs
jb
enter
std
loopne
rorl
or
ljmp
adc
imul
xor
repz
xchg
dec
fdivl
xlat
dec
pop
inc
mov
sti
sbb
add
lock
or
dec
andl
fistps
mov
or
sub
arpl
adc
dec
movsb
jmp
jns
xchg
imul
sti
jns
jne
xchg
loop
sbb
sub
sbb
sbb
push
daa
ljmp
xchg
sub
cmp
je
outsl
push
adc
hlt
mov
pop
rorb
push
inc
aam
dec
movsl
add
dec
push
out
icebp
jmp
inc
fcmovbe
shll
lds
pushf
sbb
adc
push
mov
gs
ficoms
lea
add
pop
js
pop
adc
xlat
inc
pop
shlb
jecxz
or
cmpsl
mov
jns
iret
jno
pop
xor
imul
or
test
inc
insb
sub
and
pop
cmovne
decl
cmpsl
rorl
adc
shlb
push
mov
ficoml
in
ret
push
push
inc
and
ja
pusha
jo
pop
test
in
or
orl
or
je
pop
mov
stos
jnp
inc
fcoms
pop
and
inc
mov
out
xchg
adc
stos
jmp
cmp
fmulp
adc
mov
stos
in
jne
sub
xor
arpl
jbe
add
xor
mov
stos
and
inc
cs
repnz
dec
pop
inc
aam
xchg
in
test
lds
adc
inc
mov
aam
lret
dec
je
mov
xlat
dec
xor
sahf
pusha
ds
loopne
xor
test
and
jle
mov
xor
loop
psrlw
outsl
sub
int3
fdivrp
sub
xor
push
adc
dec
pushf
or
xor
repz
jle
sbb
push
jne
les
aad
js
das
addr16
dec
adc
leave
push
dec
adc
xchg
inc
inc
cmp
pusha
lds
mov
ficomps
test
dec
lock
jo,pn
mov
fwait
ljmp
adc
fs
xchg
adc
jp
outsb
and
out
jbe
mov
push
cmc
data16
iret
jb
fwait
pop
sbb
sub
push
add
repnz
jb
ja
push
jmp
sahf
cmp
icebp
mov
es
xor
or
outsl
repz
clc
test
cli
add
movsb
test
pop
xchg
fs
cmp
xchg
loopne
sbb
jnp
rclb
popa
push
mov
xor
shrb
dec
sbb
and
mov
xlat
mov
and
cli
adc
ja
rcrl
imul
lret
icebp
hlt
popf
sahf
fsubl
dec
pop
and
shll
xchg
popa
mov
jecxz
ret
dec
jp
sbb
sub
es
fsubrp
ds
pop
mov
mov
les
lahf
or
mov
aam
sub
lea
jl
out
xor
ficomps
mov
pop
je
mov
rcrl
xchg
aam
stc
cmp
mov
daa
dec
xchg
dec
push
xlat
jl
lcall
add
jg
and
loopne
adc
mov
dec
nop
xor
sti
dec
cltd
cs
cmpl
outsl
cwtl
es
mov
sbb
jge
ret
dec
inc
mov
mov
inc
daa
clc
sbb
dec
sub
popa
xchg
xchg
jb
out
and
out
fdiv
dec
mov
push
adc
movsl
xchg
insl
call
loopne
int3
xchg
cmp
mov
pop
pushf
shlb
insb
fidivrl
test
jb
push
hlt
xchg
inc
lods
movsl
adc
inc
mov
shll
push
mov
mov
xchg
pop
sbbb
xchg
insb
fiadds
push
adc
jl
mov
ret
decb
jbe
xchg
out
cwtl
mov
sub
adc
aad
stos
cltd
xchg
mov
jmp
push
adc
in
push
lahf
xor
pop
sub
pop
cmpsl
shlb
mov
test
xchg
inc
hlt
sub
sbbb
xor
aaa
in
addb
or
repz
xor
pop
sahf
bnd
lret
mov
fld
movsb
inc
mov
out
repnz
les
mov
lret
jo
xlat
fsubp
shl
cs
push
adc
enter
inc
push
ja
std
xor
xchg
push
out
lea
fisttps
in
sahf
xor
push
jmp
outsl
je
push
arpl
push
mov
divb
fxch
adc
fcomip
cmpsb
popl
enter
xchg
adc
imul
lds
push
movb
orb
push
pop
jmp
or
into
cld
cmpsb
push
add
arpl
sub
jle
lcall
mov
imulb
imul
jae
cmp
sub
jge
fwait
sbb
ds
mov
pop
pop
push
inc
test
xor
mov
imul
int3
aam
insb
test
sub
std
gs
call
hlt
mov
jb
mov
mov
aad
jne
xchg
mov
cmc
mov
or
xor
add
cmp
mov
cli
mov
inc
cmpsb
sti
mov
cmc
cmp
push
pop
sbb
xorb
sahf
pop
ret
movsl
lds
je
sbb
lcall
clc
push
and
divps
lahf
in
add
pop
cmp
push
sub
xchg
jle
bound
cs
dec
pop
aad
xchg
bound
loopne
loopne
or
in
mov
imul
repnz
int
sub
push
jbe
inc
movsl
stc
lock
or
sub
cmp
insb
andl
data16
adc
inc
xchg
shlb
add
fmuls
cmp
mov
ret
in
ret
rcrl
das
das
ret
into
pop
mov
adc
imul
in
repz
push
shll
orl
aaa
mov
aam
mov
movsb
sarl
push
or
and
mov
rdpmc
clc
sub
aas
pop
sub
test
adc
push
ja
sahf
mov
dec
je
in
in
xchg
aas
mov
push
hlt
lcall
sbb
push
push
pop
gs
add
mov
inc
ja
jp
and
pop
mov
ljmp
idivl
add
mov
js
push
sarb
or
adc
fisttpll
sbb
bound
fcmovnbe
sub
jne
fimuls
loope
and
jno
jnp
adc
stos
mov
xchg
mov
aad
dec
and
ss
mov
imul
lea
call
popf
test
test
dec
outsl
fst
mov
cmpsb
mov
test
mov
adc
inc
pop
push
fidivrl
rcrb
xchg
cs
fdivs
lods
mov
mov
cltd
nop
cmc
push
cmp
mov
xchg
or
add
fdivp
shlb
lahf
iret
inc
aad
nop
cmp
and
call
jmp
iret
xchg
push
ljmp
push
cli
sub
jae
pop
or
jecxz
into
into
lahf
test
aad
dec
in
pop
test
test
pop
push
xchg
mov
aam
add
jne
pop
mov
pushf
ret
ja
push
mov
es
or
or
sub
xlat
fdivr
ja
push
fistps
dec
fwait
sbb
mov
sbb
xchg
bnd
inc
test
and
cmp
sahf
adc
mov
std
mov
cmp
jnp
shrb
xchg
data16
outsl
push
out
fildll
imul
add
aas
sub
mov
jo
sub
xchg
adc
arpl
push
mov
dec
loop
cld
daa
mov
mov
jae
adc
enter
ret
test
push
and
mov
insl
cmc
shll
push
mov
dec
sbb
sub
mov
movsb
push
lcall
gs
leave
xor
divb
xor
ss
and
mov
jg
arpl
jge
jne
jns
or
mov
sub
insb
lds
cmp
faddl
dec
cltd
dec
movsb
inc
xor
mov
cmp
mov
jno
xchg
outsb
jo
cmp
popf
lock
mov
cli
xor
jl
lock
popf
jb
lock
push
inc
lods
enter
dec
nop
js
outsb
cld
xchg
pushf
mov
dec
mov
lock
data16
test
mov
sbb
add
fcompl
ret
stc
ret
mov
ljmp
dec
mov
pop
wrmsr
pop
xchg
ljmp
add
lods
mov
mov
test
lret
rcll
mov
cli
cwtl
cli
adc
jge
mov
xlat
fbld
push
push
adc
dec
push
nop
dec
xchg
nop
andl
or
lods
jle
negl
mov
cmpl
adc
inc
jmp
mov
push
mov
arpl
or
pop
adc
mov
loop
incb
aaa
push
outsl
fwait
cwtl
lock
mov
fs
ds
sbb
lea
sub
push
les
leave
push
pop
test
out
or
lret
adc
sub
cmp
adc
xchg
push
inc
sub
mov
cwtl
pop
test
cmpsl
lret
aaa
sahf
push
xchg
test
jp
lret
or
jno
cmp
in
push
inc
mov
es
in
mov
xor
rolb
mov
rclb
push
ret
inc
out
enter
push
inc
nop
push
push
xor
filds
adcl
mov
popf
sub
sbbb
cld
mov
add
add
sbb
cwtl
js
inc
es
divl
sbb
nop
mov
shll
cmp
imul
movl
fwait
paddusw
rclb
arpl
in
adc
cmp
lock
or
or
mov
push
movsb
cmp
push
push
pop
pop
or
dec
notl
imul
xor
dec
test
dec
mov
and
xor
aam
mov
xchg
pop
int3
inc
daa
das
test
jb
adc
sbb
mov
in
mov
dec
mov
add
lahf
push
ss
xchg
push
f2xm1
pusha
fs
js
gs
mov
pop
jns
into
add
cmp
pop
lods
inc
mov
adc
loop
lcall
push
fidivs
jno
adc
and
inc
and
enter
jecxz
into
repz
js
and
mov
push
sarb
stos
clc
stc
push
mov
sbb
sbb
push
mov
cld
add
add
test
lea
xor
fwait
cld
mov
sahf
cmc
out
jmp
adc
jbe
push
int
faddl
scas
stos
sbb
out
ja
sbb
fdivrs
mov
cwtl
add
aam
lds
push
int
fdivl
fistl
pop
adc
inc
out
fstl
test
xor
push
mov
inc
out
and
sbb
dec
jnp
cmp
sub
cmp
push
inc
aam
sbb
mov
mov
mov
enter
sbb
xor
loope
mov
notb
sub
shll
jmp
fidivs
ficoms
push
lods
pop
insb
pop
arpl
ret
or
mov
and
lret
mov
rorb
push
cmp
mov
into
inc
or
add
sub
jbe
jb,pt
outsb
xchg
jmp
lods
in
jne
aad
sub
jnp
fs
or
mov
and
test
int
repnz
dec
dec
cmp
fbstp
push
mov
test
lock
faddl
sub
out
xor
pop
sti
mov
sbb
xor
hlt
rcl
push
mov
out
rcl
lock
mov
and
rcll
loopne
mov
shrb
aad
add
push
mov
ret
icebp
sub
xchg
inc
out
xchg
push
popl
jbe
aaa
mov
xorb
xchg
jle
fistpll
sub
mov
mov
inc
jle
add
mov
repnz
and
lock
lods
mov
pusha
or
rcrb
test
mov
arpl
push
loop
fstpl
inc
add
aas
addr16
mov
test
jp
cmpsb
or
add
xchg
mov
inc
jo
push
jg
mov
push
rcl
cmp
push
xor
fldl
push
ds
sbb
adc
pop
jns
mov
cmc
pop
mov
lds
pop
cld
inc
into
idiv
xchg
pop
hlt
xor
das
and
dec
jbe
mov
cmp
jae
lock
xor
arpl
aam
xchg
mov
shll
je
addr16
inc
adc
out
ret
mov
or
cmp
and
out
mov
inc
loopne
add
shrb
and
shll
or
mov
pop
push
and
cmp
or
pop
inc
incb
mov
cmp
jl
mov
add
movsl
and
jl
cmp
xabort
mov
sub
or
adcb
mov
fdivrl
pop
je
or
xchg
mov
lret
xlat
xchg
jns
stc
pushf
inc
shrl
or
xchg
jne
repnz
aas
mov
xchg
pop
outsl
lret
ds
and
inc
push
jo
ret
push
pushf
or
xlat
std
leave
cmpsl
pop
cmp
inc
test
call
rcrl
push
dec
daa
cmp
out
mov
in
xchg
std
aaa
imull
dec
and
cld
lock
and
outsl
pop
mov
mov
negb
xor
fdivp
cmp
push
insb
and
ljmp
subb
div
test
insl
adc
call
xor
outsb
inc
fnstcw
xchg
call
loop
adc
mov
faddl
mov
int
fwait
mov
inc
in
cmc
dec
aaa
ja
rcll
mov
lds
and
call
xchg
xorb
je
loop
inc
and
sub
pushl
sbbb
dec
push
push
mov
ja
add
call
sbb
int
sub
and
test
push
xor
test
xchg
movsl
popa
jae
jl
add
into
out
cmp
mov
cli
mov
lcall
jge
or
outsb
cs
aad
sub
mov
sbb
jp
dec
repnz
sti
mov
mov
dec
pop
jle
xchg
mov
fucomp
pop
adc
sbb
pop
sub
lahf
ret
hlt
cmp
cld
inc
jne
xchg
adc
inc
mov
jnp
faddl
fldl2t
inc
imull
dec
fcmovne
int3
sahf
test
mov
pop
xchg
add
repz
cmc
cmp
sbb
aaa
mov
sbb
mov
out
stos
popf
imul
jecxz
pop
sbb
dec
mov
clc
enter
stos
jnp
int
cli
fsubl
jno
fistpl
gs
mov
mov
pop
adc
sbb
jne
sub
mov
jp
or
cwtl
cmpsl
mov
push
iret
cmpsl
int
out
rcrl
xor
or
and
and
or
int
xor
mov
adc
inc
or
mov
fwait
xor
cld
fdivl
push
push
lea
cmp
aad
sub
stos
ss
into
icebp
dec
dec
sbb
cmp
mov
lock
addr16
add
aad
dec
xor
or
jle
rcr
in
xchg
out
mov
into
imul
js
sbb
and
push
sub
dec
pusha
mov
jl
jp
pop
push
dec
pop
shl
test
push
insb
jno
or
cli
or
sbb
pusha
pop
xchg
dec
dec
lret
cld
sbb
inc
push
jmp
xchg
data16
ss
push
into
cmp
inc
aas
mov
sbb
mov
movsb
jmp
enter
sub
xor
in
pop
es
imul
out
mov
xor
cmc
inc
mov
aam
fbld
les
mov
or
or
xor
gs
adc
push
xor
sub
fstpt
cmc
sub
jmp
xchg
jo
or
mov
shll
mov
push
lock
sub
sbb
lods
cmc
pop
pusha
sub
pop
cmc
lret
mov
repz
les
leave
mov
and
jle
sub
rcl
popa
fstps
mov
xor
in
loopne
mov
adc
xchg
xchg
ret
cmc
dec
loopne
ss
or
leave
and
cltd
cmp
imul
flds
mov
ret
sub
push
shrl
xchg
lds
inc
mov
cmp
les
pop
dec
xchg
mov
mov
or
adc
mov
lretw
mov
push
ficompl
or
mov
jp
sahf
jae
cld
sub
in
popf
xor
and
std
and
adc
xchg
fst
in
cltd
xchg
xor
nop
adc
add
test
imul
icebp
fs
dec
fs
std
cmp
inc
inc
inc
addr16
mov
inc
repz
int3
inc
adc
lods
mov
fldt
mov
adc
ret
mov
pop
loope
cs
xor
imul
test
dec
jg
popf
outsl
aam
movsl
cmp
leave
mov
mov
dec
pop
bound
out
pop
and
sub
adc
mov
and
mov
sbb
jecxz
push
jmp
ds
scas
cmp
sahf
mov
test
int
jmp
xlat
jb
or
es
push
les
dec
scas
and
jge
rorb
sbb
ret
mov
cld
sbb
xchg
rolb
cmp
jge
adcl
into
adcb
js
cmp
jno
mov
sub
sub
inc
cmp
out
xchg
test
addr16
mov
fwait
lahf
sahf
mov
jg
inc
in
pop
pop
scas
repz
out
arpl
cld
xchg
jle
push
cld
jle
lds
xlat
push
mov
pop
inc
lods
xchg
push
mov
fiadds
pop
push
cmpsl
lahf
and
sbb
xchg
jno
or
pop
or
daa
pop
pop
mov
xchg
sbb
clc
decb
lods
lahf
ret
xor
ja
fldl
fwait
push
pop
pop
insl
cld
cmp
idivl
add
jl
or
hlt
xor
pop
pop
int
pop
imul
xchg
cmpsb
adc
mov
mov
popa
cmp
or
add
lods
adc
mov
or
sub
pushf
icebp
cmp
popf
xchg
jbe
xchg
pop
dec
rcrb
cmp
cmp
aad
or
nop
cmc
lret
xchg
cmc
push
faddl
mov
mov
push
test
data16
pop
xor
imul
ljmp
inc
mov
sub
decb
fistpll
dec
xchg
mov
xchg
jge
add
jl
and
dec
push
push
add
lcall
ret
daa
int
and
xchg
inc
cli
sahf
int
push
subb
nop
jl
xor
mov
pop
xchg
fcom
pop
inc
push
sahf
pop
fsubrl
sub
ss
js
and
add
and
mov
insl
dec
test
test
pop
sbb
jmp
ds
or
sbb
int
cwtl
out
pop
push
cmc
lds
xor
xor
dec
mov
fwait
inc
cltd
jl
push
mov
and
xlat
push
push
xchg
xchg
fninit
popf
jno
imul
and
and
dec
xor
out
adc
outsl
cmp
adc
push
jbe
or
inc
inc
inc
pop
pop
imul
mov
or
outsl
mov
and
push
mov
mov
ja
out
xchg
or
jp
inc
call
fcmovnu
nop
pandn
sahf
mov
nop
call
fnsave
ljmp
inc
adc
mov
das
jecxz
jo
fcmovbe
lahf
scas
push
rcl
jge
adc
cltd
in
cs
jo
dec
or
inc
jnp
loop
lea
mov
cwtl
push
fcmovbe
and
out
andl
fistps
shll
xchg
icebp
lea
sti
push
out
jmp
inc
es
mov
int
pop
out
jmp
std
mov
dec
push
iret
adc
subl
daa
outsb
xchg
push
or
dec
push
xchg
jmp
mov
stos
int
jp
ss
or
test
cs
icebp
add
repz
mov
cli
stos
outsl
cwtl
push
push
fdivs
mov
andb
xchg
mov
jg
adc
pop
je
lods
xchg
mov
jp
pop
mov
mov
lahf
or
mov
fldenv
sbb
add
mov
cmpsb
xor
lret
popf
xchg
orb
pop
mov
mov
jae
mov
clc
cmp
push
scas
aaa
ret
loopne
cmpsb
aas
xchg
fxtract
aaa
test
stos
andb
roll
imul
lods
movsb
imul
add
cltd
jno
loope
mov
push
fimuls
cmp
sub
incb
mov
and
rcl
xor
ss
sub
xchg
std
jmp
dec
lahf
ret
push
dec
popa
outsl
pop
idivb
call
cmp
test
jns
mov
pop
orl
pop
jnp
mov
cwtl
cmp
push
scas
xor
into
ret
repz
nop
std
xor
das
mov
push
push
imul
nop
test
repz
test
mov
mov
sub
push
dec
mov
mov
stos
sbb
loop
sti
fwait
daa
cmp
loope
in
jno
push
push
test
gs
stos
mov
push
dec
ds
mov
mov
stc
fldenv
call
or
adc
test
inc
fiadds
jl
jp
mov
and
ljmp
fs
inc
dec
xor
xchg
cmpsb
add
inc
pop
push
push
cmp
pop
inc
gs
jg
jno
xor
fwait
ret
push
add
cs
pusha
add
xchg
xor
cs
pop
les
std
cmp
sub
inc
push
les
push
mov
add
mov
push
test
push
shrl
bound
dec
pop
or
insl
jecxz
xchg
xlat
push
ret
je
cmpsb
dec
shll
sti
test
mov
mov
mov
gs
mov
orb
mov
push
test
or
es
adc
stos
pop
sub
fstpl
cmp
test
sti
clc
test
add
aam
lods
xor
aam
pop
mov
or
cmp
add
popa
aam
das
les
mov
scas
mov
xchg
lcall
pop
sub
xchg
cltd
pushf
jecxz
je
inc
xchg
mov
or
push
repz
xor
inc
inc
or
ret
pop
cmp
inc
sbb
loop
in
insb
cmp
daa
xchg
or
mov
add
cmp
adc
testb
cmpsb
pop
push
pop
ss
or
sarl
add
push
fldt
pop
popa
outsb
and
push
repnz
jmp
mov
mov
jl
int3
push
xchg
xchg
out
fmuls
mov
call
fs
xchg
pop
mov
xchg
jmp
mov
mov
inc
mov
xchg
adc
jp
ss
in
lea
mov
aam
dec
sub
out
hlt
out
dec
int3
push
test
add
test
xor
int3
lock
in
mov
in
int
xor
dec
jp
or
mov
lods
fidivrl
sub
xor
fs
jecxz
ljmp
lds
dec
movb
out
mov
jmp
mov
adcl
xchg
fwait
sub
hlt
push
xchg
jmp
lcall
cltd
dec
out
jns
and
xchg
push
mov
xlat
repnz
xor
inc
movsl
push
mov
add
cmpsb
fwait
xchg
call
in
add
adc
popa
adc
ret
inc
cltd
mov
gs
jns
test
jge
popa
sub
pop
sbb
decl
push
push
pusha
or
xchg
jo
sbb
ds
and
dec
or
adc
aas
int
and
xchg
mov
push
dec
fldenv
incb
add
pop
pop
sub
inc
jp
int3
je
xor
push
and
inc
xor
arpl
filds
and
push
mov
mov
call
aam
mov
or
push
test
mov
addr16
jbe
xchg
mov
jbe
adc
in
push
jns
xorb
call
and
out
dec
xchg
adc
aaa
jbe
ds
iret
test
cltd
shrb
fsubrl
cmpsl
and
sub
lret
enter
out
or
sbb
xchg
fstpl
repnz
stos
mov
aam
out
mov
out
xchg
lea
popa
iret
int3
lret
stos
and
push
or
ret
sbb
xor
mov
ljmp
mov
mov
mov
in
mov
out
out
pop
lods
lods
xor
jmp
lds
stos
jne
mov
add
sbbl
and
inc
shlb
push
test
enter
cmp
dec
push
mov
fiadds
dec
sub
fs
test
mov
int
adc
ret
and
lret
mov
xor
adc
test
mov
jno
add
hlt
loopne
adc
dec
mov
jns
jno
fs
scas
in
dec
es
fimuls
pop
scas
insl
loope
lods
and
mov
jmp
nop
stos
jb
push
jb
mov
sbb
repz
adc
lahf
adc
add
divb
mov
mov
int
push
cmpsl
out
sub
lcall
jnp
mov
hlt
in
in
push
jl
jp
std
ret
mov
icebp
xchg
test
inc
or
cmp
xor
push
push
jp
mov
mov
push
adc
sbb
dec
loopne
xchg
sbb
lahf
orb
movsb
sub
jbe
rorb
aas
fs
loopne
enter
push
mov
and
pop
mov
mov
push
add
in
in
add
test
pop
mov
pop
xor
jbe
addr16
jge
inc
dec
hlt
imul
out
scas
xor
push
mov
lock
insl
inc
xchg
mov
popf
aas
cmc
pushf
dec
add
out
push
iret
xor
xlat
sub
addr16
lods
jl
in
or
nop
push
std
sbb
jmp
outsl
ret
and
push
xchg
cmp
lods
jbe
adc
mov
into
mov
mov
pusha
les
add
push
jmp
dec
mov
inc
in
lahf
aaa
imul
in
clc
dec
add
fisttps
fs
xor
push
popf
outsb
pop
fwait
pop
jnp
fstps
shr
ret
clc
add
cmpsl
mov
lret
test
pusha
shr
data16
mov
jle
shl
jns
mov
movsb
clc
pop
inc
pushf
lcall
and
sub
cmpl
test
dec
push
push
pop
push
mov
push
mov
lods
xchg
subb
pop
jmp
add
std
rorl
push
dec
mov
mov
cmp
enter
mov
sub
out
xor
xor
xor
pop
aas
fsubl
ja
rorb
rcrb
cmp
sbb
stos
jb
and
scas
dec
lahf
pop
repnz
lea
lret
sahf
jb
add
bound
xchg
jle
mov
out
roll
shl
cld
repnz
pop
je
mov
jo
je
push
lds
adc
clc
mov
cli
xchg
in
adc
in
mov
push
arpl
adc
mov
data16
mov
xor
adc
mov
cmp
cmp
inc
mov
arpl
jbe
sti
mov
lcall
cmp
mov
push
mov
mov
mov
lret
mov
inc
das
sbb
icebp
mov
movsl
adcl
xor
ljmp
mov
dec
cmpsl
ljmp
mov
jae
insl
ja
mov
or
test
jo
iret
mov
ja
lods
enter
and
jbe
bound
and
fcmovb
cmp
enter
je
mov
and
mov
popf
push
and
test
pop
outsl
test
dec
loopne
rcll
fiadds
xor
leave
leave
xor
ret
sbb
fsts
lahf
xchg
lea
test
fisubs
testb
xlat
xchg
sbb
fcompl
mov
xchg
pushf
lock
adc
mov
pop
lea
imul
push
and
iret
mov
lds
insb
pop
ss
daa
cmovbe
and
add
or
or
hlt
into
jecxz
fcomps
cwtl
in
lds
cld
stc
std
repz
ds
mov
lcall
xchg
jne
and
adc
dec
add
sbb
mov
js
mov
inc
cmp
insb
dec
xor
add
push
push
std
mov
into
inc
or
pop
mov
cmpsl
lds
fcmovbe
adc
adc
std
adc
push
ljmp
mov
jp,pn
lahf
xor
pop
cli
clc
ja
addr16
jp
or
in
jle
jmp
dec
sub
sub
mov
push
jo
xor
popa
dec
sarl
inc
test
in
idivl
ret
jp
mov
pop
xchg
fs
js
jmp
push
aam
cs
xchg
jbe
mov
mov
jne
add
subb
mov
into
xchg
shl
rcrl
jle
push
decl
shll
xchg
mov
mov
mov
inc
out
movb
dec
orl
mov
lock
mul
push
xchg
stc
push
in
xchg
mov
adc
xor
int
mov
cvtpi2ps
mov
xchg
jae
and
inc
loopne
mov
add
scas
jns
xchg
and
jo
lret
dec
or
cmpl
out
cltd
stos
les
mov
sub
fcmovb
xor
sahf
cltd
sub
push
mov
xor
adc
lods
cmp
or
dec
push
push
jp
sub
jecxz
lret
xchg
stc
mov
dec
pop
imull
jmp
or
imul
in
mov
jmp
gs
xchg
xchg
push
lds
adc
jge
push
out
ja
rolb
mov
std
pop
mov
mov
or
ds
icebp
jns
scas
sub
mov
push
xchg
jne
sbb
leave
cld
in
sub
fcomps
popf
fsubrp
lods
test
test
pop
xor
lock
push
jns
push
int3
cmp
pop
add
shrl
aaa
pop
pusha
jo
dec
and
cmp
jle
or
iret
jge
lea
jecxz
or
jge
pop
loopne
ficoms
cli
cli
push
das
and
add
mov
mov
pop
or
ljmp
push
mov
scas
sahf
pop
fcomps
sub
and
cmc
mov
push
mov
push
js
pusha
bound
sub
ret
popf
or
fldl
fildll
push
shlb
mov
mov
dec
inc
mov
data16
movsb
cmp
add
movsb
cmp
mov
push
add
icebp
pop
das
pop
xor
clc
pop
ldmxcsr
and
xchg
shlb
rcll
lods
or
mov
lcall
fldt
xchg
sahf
pusha
jp
call
js
dec
xor
fisubrl
enter
out
adc
repnz
or
imul
stos
je
inc
push
mov
sarl
fstpt
jne
clc
lock
sarb
je
push
sub
or
xor
cmp
jecxz
lods
cmp
int3
and
sti
or
mov
sub
cmpsl
cmp
xor
xchg
outsl
xor
jg
mov
pushf
popa
test
jmp
adc
dec
cmp
int
or
push
nop
in
decl
inc
or
dec
fisubl
adc
lods
js
int3
fimull
repnz
xchg
cli
aad
or
or
clc
pushf
aad
ss
dec
lahf
mov
sub
push
jne,pn
or
enter
fbstp
inc
dec
inc
inc
mov
pushf
dec
loope
xchg
add
js
cmpsw
adc
cmp
cmc
hlt
push
jnp
ret
mov
shll
mov
pop
mov
es
sub
and
aam
or
cli
inc
cmpsb
loope
adc
fimull
arpl
pop
xchg
ljmp
inc
mov
pop
mov
imul
lahf
or
or
imul
lret
pop
ret
subl
and
jo
sbb
cmpsb
test
iret
testb
shlb
stos
js
je
push
dec
sub
push
das
pop
dec
sbb
pop
sbb
scas
or
jg
std
xor
js
and
sub
add
and
imul
popf
popa
sub
or
ret
hlt
push
inc
add
sbbl
mov
dec
fisttpl
or
sbb
arpl
ficomps
push
out
aad
je
popf
je
mov
inc
lea
mov
or
jne
in
fistps
lcall
aaa
push
or
xlat
out
rcll
jns
lret
daa
or
outsb
sbb
cmp
sbb
mov
add
out
aas
fs
shr
sbb
add
fnsave
jmp
cld
and
pop
add
adc
das
jae
icebp
or
dec
testl
or
mull
test
jno
add
pop
loop
mov
dec
push
xor
call
imul
push
jb
lret
addr16
or
jg
es
xor
loop
inc
push
lods
xchg
xchg
cmp
fmuls
dec
lods
cmp
lea
push
andb
ss
lods
dec
lods
mov
pop
in
jb
mov
aaa
mov
add
pop
push
or
inc
cmp
imul
movsb
cmp
stos
cs
ss
test
ret
cmc
aaa
sub
pop
mov
stos
jns
mov
test
xor
dec
push
movsb
les
ljmp
cmpsl
pop
adc
stc
jge
mov
xchg
dec
repz
xchg
ret
and
mov
je
dec
decl
in
inc
jecxz
aad
orb
or
adcl
out
add
fmuls
ss
test
xchg
lods
xor
cmp
vmovd
and
xchg
and
cmp
outsl
adc
es
arpl
das
jno
push
rolb
aad
loope
int3
cmp
jno
xchg
mov
sub
push
fdiv
cmp
mov
dec
jl
lret
roll
cmp
add
out
add
pcmpgtd
add
in
les
xchg
sub
mov
jmp
mov
dec
cwtl
dec
enter
mov
loopne
mov
lret
call
pop
or
icebp
sahf
sub
repz
fwait
sbb
pop
into
popf
lock
jno
enter
out
cmp
ret
sti
xorb
jle
lcall
pop
mov
scas
into
jns
js
out
xor
xchg
mov
add
leave
stc
or
icebp
into
lahf
jle
xchg
inc
jb
mov
mov
in
das
dec
xchg
dec
push
shlb
dec
inc
push
fwait
and
out
movsl
jno
or
sbb
pop
lret
xor
sahf
fscale
outsb
loop
fadds
fwait
scas
jge
mov
sbb
repnz
pop
or
xchg
xor
xchg
rol
dec
daa
aas
ljmp
mov
pop
mov
push
outsb
pop
add
popf
inc
lcall
push
mov
mov
and
mov
lock
and
gs
sub
aaa
aam
mov
push
scas
gs
jns
inc
push
cli
push
push
pop
bound
ja
pusha
xchg
mov
pop
in
lahf
cmp
ret
gs
ds
stc
mov
xacquire
fwait
sbb
icebp
xchg
out
es
popa
dec
pop
fstps
jle
jbe
pop
and
xchg
dec
push
mov
shll
bound
push
cmpl
call
push
mov
xor
jae
std
jns
cmpsl
sbb
add
cmp
sbb
loope
mov
ja
xchg
movhps
arpl
inc
mov
sub
iret
sbb
add
mov
cmpsl
je
out
lcall
cmp
jae
sub
adcb
in
cli
out
push
inc
jge
xor
nop
dec
testl
lahf
rcrb
icebp
cmp
pop
mov
cmp
in
dec
nop
or
xlat
dec
fucompp
dec
adcb
pop
rcl
das
mov
imul
addr16
dec
pop
xchg
xor
leave
xchg
orl
ret
push
xorl
stos
imul
out
sub
mov
icebp
fimull
push
jo
clc
das
cmp
mov
sub
mov
cmp
xchg
and
sub
push
shll
and
sahf
jmp
test
lcall
test
and
into
dec
xchg
xor
sbb
or
cmp
out
stos
jno
jmp
mov
cmp
xchg
push
sbb
cmp
sbb
mov
shrb
push
sbb
out
jne
pop
xor
mov
xor
push
dec
jp
cmp
and
iret
pop
faddl
inc
lahf
hlt
scas
sub
lds
xor
popf
sbb
add
imul
lahf
rclb
pushf
xchg
int3
push
or
bound
popf
pushf
push
popa
mov
add
int
fildll
adcb
inc
mov
jne
push
pop
and
or
out
pop
push
mov
adc
movsb
pop
sub
dec
fisttps
push
in
mov
sub
sub
rcrb
jae
and
xorb
scas
sub
cmc
out
daa
cmp
cmpsb
sti
sahf
xor
push
cli
mov
jo
fnstcw
mov
mov
mov
xor
in
mov
push
jge
aad
fwait
lar
adc
jbe
negl
and
add
enter
jp
fidivs
hlt
inc
push
jnp
jbe
cltd
add
pusha
mov
fwait
icebp
push
push
sub
xlat
inc
or
add
test
je
push
xchg
jmp
xchg
xlat
adc
dec
or
scas
xlat
aad
xor
imul
sub
or
xor
test
lret
xchg
es
xor
loopne
inc
mov
lock
addr16
mov
mov
icebp
std
push
push
xor
add
pop
ljmp
stos
mov
adc
rcrl
xor
push
nop
cmp
add
leave
repz
sar
stos
inc
push
mov
mov
fstp
ud0
xor
push
dec
insl
fdivrs
mov
xchg
pop
inc
lods
pop
lods
out
fmul
and
xchg
fmuls
out
mov
fcmovb
adcl
mov
xchg
push
stos
sub
dec
ja
mov
dec
clc
push
sbb
cltd
and
cltd
icebp
lods
mov
inc
aad
add
shll
adc
iret
xor
mov
std
sahf
dec
cmpb
ret
dec
negb
inc
popa
jno
adc
stc
fstpt
mov
pop
lds
inc
sub
aas
push
je
nop
imulb
es
cli
inc
pusha
int
mov
fdivrs
shl
std
andl
inc
push
xchg
mov
push
jge
outsb
xchg
mov
lods
jle
mov
xchg
mov
loope
mov
jbe
sahf
xor
jb
js
dec
jp
pop
cmp
mov
ja
jge
cmp
in
mov
imul
popa
jnp
faddl
lock
mov
xchg
ds
jmp
xlat
jnp
push
dec
stos
xchg
cmp
pop
stos
jmp
lods
cmc
xor
xor
mov
dec
cmpsl
fnstsw
sub
push
add
jne
push
mov
jecxz,pt
pop
dec
mov
jbe
test
rolb
clc
ds
jno
pop
sub
cld
xchg
push
in
loop
pop
imul
xor
pop
mov
nop
popl
add
test
push
ds
pop
adc
mov
aaa
repnz
out
jl
sub
out
outsb
and
dec
mov
stos
ds
sti
pusha
dec
xor
cwtl
push
and
adc
arpl
add
lahf
dec
push
int
adc
jae
inc
sti
fcmovbe
pushf
pop
js
dec
add
pop
adc
stc
out
inc
sbb
xchg
mov
dec
fisttpll
mov
cmpsl
xor
cmp
dec
jge
pop
sub
gs
inc
das
mov
loope
ds
push
imul
stos
into
push
inc
sbb
fisubl
mov
push
push
stc
cmp
mov
adc
outsl
sbb
push
imul
lock
call
xor
or
add
lcall
cmpsb
imull
xchg
cwtl
arpl
ret
push
mov
aad
into
xlat
sub
loopne
lahf
xor
sarl
sbb
pop
pop
xchg
and
sub
mov
cmp
add
push
loopne
icebp
into
sub
lret
adc
sub
outsb
out
mov
push
gs
pop
lret
mov
fbstp
out
cltd
mov
and
vmread
imul
mov
imul
xchg
mov
mov
out
arpl
orl
sahf
lret
aas
sub
dec
jle
push
pop
pusha
xlat
lret
int3
sbb
cld
out
stos
faddp
mov
jno
add
and
xchg
xor
daa
pop
gs
push
inc
aas
xchg
xor
add
push
sar
or
sti
ja
lcall
hlt
jg
adc
scas
dec
adcl
dec
dec
shrb
jo
mov
xorl
push
lods
push
cmp
jae
push
lret
or
ret
in
push
scas
divb
sahf
xchg
or
leave
push
dec
inc
add
fldenv
inc
xchg
test
imul
xor
mov
outsb
es
push
xchg
push
mov
dec
dec
xor
int3
mul
and
adc
pop
xor
inc
stc
jne
cmp
cmp
addb
test
std
jne
outsb
or
sbb
cwtd
pop
sub
dec
and
fldcw
xor
cmpb
sub
addr16
sbb
sbb
push
mov
jecxz
mov
fs
ja
rolb
jge
fwait
adcb
movsl
mov
jbe
xchg
pop
dec
fstpt
mov
test
sub
add
add
and
jne
inc
or
mov
pop
daa
mov
or
cltd
rcll
ss
loope
push
mov
lds
xor
jecxz
pop
pusha
dec
and
test
jl
and
rorl
enter
mov
leave
movl
mov
add
and
dec
das
in
sbb
iret
cmpsb
shlb
std
cmp
ds
push
and
mov
ja
clc
jg
xlat
mov
daa
xchg
dec
lcall
loope,pt
add
stos
xor
pop
xchg
ja
sbbl
inc
hlt
and
jb
clc
mov
loop
inc
push
pop
das
rcrb
lret
jg
frstor
mov
mov
and
jge
sbbb
xor
ffree
gs
inc
pop
lods
xlat
add
lods
xor
pop
inc
fildl
xchg
inc
iret
lahf
jge
hlt
inc
nop
or
lea
subl
xchg
add
pop
and
jno,pn
pop
shl
mov
add
rcr
rcl
dec
cmpsl
shrl
mov
mov
leave
js
pop
sub
lret
mov
pop
outsb
sub
xchg
dec
in
inc
add
adc
inc
pop
dec
dec
lods
test
std
mov
fsubs
imul
fsubrl
and
jbe
sbb
add
mov
mov
popl
adcb
gs
movl
nop
add
or
mov
mov
push
sub
pop
lret
jo
add
lcall
push
in
mov
jns
testl
dec
test
pusha
jb
mov
sbb
movb
mull
icebp
inc
shrl
inc
aam
xchg
into
push
mov
js
fs
scas
scas
mov
pop
aaa
xchg
mov
hlt
inc
daa
or
outsb
loop
xor
cmp
jle
out
xor
test
fcmovu
adcl
xor
cmpl
or
pop
pop
jns
out
and
enterw
cmp
test
bound
das
rcrl
test
add
cmp
rclb
jns
das
jne
mov
fsts
jle
daa
inc
push
das
cli
mov
pop
inc
test
pop
ficomps
add
pop
or
jne
mov
adc
mov
leave
adc
ret
pop
sub
mov
in
in
out
sub
stos
mov
mov
pop
push
add
and
cmp
mov
cmp
cmpsl
test
int
push
mov
cmp
inc
enter
repnz
xchg
dec
jb
je
mov
int3
and
test
repnz
fwait
mov
fucomp
les
fs
in
addr16
lcall
mov
cmp
repnz
jl
arpl
and
es
or
fs
sbb
outsb
xchg
icebp
roll
sbb
jbe
incb
or
pop
add
add
jge
fsts
mov
in
idivb
xchg
xchg
into
in
call
orl
and
aaa
jmp
repz
inc
les
daa
sub
jl
dec
mov
cmp
cwtl
loopne
adc
jae
lock
adc
dec
sbb
push
push
push
jae
xchg
mov
bound
pop
ljmp
mov
movb
pop
jb
mov
repnz
loope
dec
out
xor
aas
jns
xchg
popa
mov
pop
fnsave
mov
loope
test
inc
pop
idiv
cmc
mov
mov
mov
mov
and
jle
and
fwait
sbb
addl
push
loope
test
in
int3
sub
mov
sbb
cmp
push
lds
xchg
mov
sbb
addr16
adc
jp
mov
mov
mov
push
mov
jg
inc
pop
pop
nop
and
pop
mov
addb
mov
in
ror
xlat
sub
xor
fnstenv
jne
stc
punpckhwd
inc
xchg
adc
shlb
inc
sbbl
jb
pop
jno
push
iret
push
pop
imul
gs
inc
push
outsb
jnp
orb
mov
and
mov
je
test
add
loopne
loop
xchg
mov
sbb
sbb
in
adc
dec
in
mov
pusha
mov
dec
jle
rcrb
pop
dec
popf
mov
fildl
daa
dec
clc
fsubs
push
or
dec
ljmp
hlt
loope
lds
xchg
out
mov
mov
popa
loopne
push
int
mov
arpl
mov
arpl
sub
xchg
jle
mov
jbe
mov
mov
faddl
cmp
mul
push
test
ret
out
jp
bound
jle
mov
jg
shll
dec
fldl
cld
hlt
jle
cmp
mov
sub
xchg
loopne
adc
insl
mov
add
int
inc
xor
mov
sub
lret
xadd
outsl
mov
jle
or
lret
popa
mov
insl
fwait
outsl
cmp
xchg
sbbl
push
hlt
pop
mov
je
push
scas
data16
xor
jb
fisttpll
jp
inc
mov
lret
aam
push
nop
inc
cltd
nop
add
cmpsb
sti
mov
int
pop
fstps
shl
mov
jns
lea
outsl
mov
cwtl
pushf
sub
inc
cmp
testl
push
sub
stos
ljmp
lea
xchg
jg
lods
adc
clc
jno
out
cmp
xor
and
rcr
mov
push
cmc
sahf
lahf
adc
push
sub
out
adc
ss
pop
fisubs
gs
ja
push
sahf
push
xchg
jp
scas
mov
adc
cld
sti
xor
das
sub
fcomip
sub
mov
mov
stos
fmull
push
fmuls
cmp
mov
lea
jp
xor
mov
out
repnz
cld
cmp
test
divl
mull
jl
sub
cmp
mov
mov
dec
cmc
sbb
outsb
mov
jno
sahf
xlat
imul
insb
movsl
loop
inc
lea
ljmp
pusha
adc
js
jle
and
lock
push
adc
xor
push
loop
sub
and
sti
popa
out
mov
jge
insl
iret
push
jne
mov
ret
push
pop
aam
sbb
xchg
out
fsubp
push
jae
sti
vcvtps2dq
adc
mov
pop
mov
adc
add
lea
lods
loope
or
loop
jae
pusha
mov
sbbl
lods
fidivrs
add
aad
mov
xor
inc
out
jae
xor
adc
xchg
shll
xor
inc
push
bound
mov
cmp
arpl
mov
sbb
movsb
pop
stos
in
adc
inc
out
adc
pop
lea
xor
fistpl
cmp
cmp
cltd
or
lea
clc
and
pop
xchg
pop
stc
push
cld
stos
mov
pusha
jmp
jns
data16
stc
lds
jle
jge
cmp
pop
adc
mov
mov
sbb
adc
inc
xor
xchg
aaa
mov
aaa
sbb
xchg
movsb
sarl
mov
cwtl
lods
lods
aam
mov
cmc
xorl
cmpsb
sar
nop
popa
push
pop
cli
jg
rcr
daa
outsl
outsb
pop
lret
push
call
movsb
inc
mov
pop
mov
pop
cmp
shlb
call
cli
icebp
fimull
xchg
fsts
fstl
lods
add
out
jnp
cmpl
sahf
int
js
hlt
jo
dec
push
jne
fdivr
pop
pop
or
loopne
lock
stos
mov
or
push
jb
hlt
add
mov
mov
gs
fdivrs
adc
scas
movsb
jp
fists
shl
fldt
adc
cmc
in
jecxz
jmp
pop
inc
push
sbb
ja
sar
repz
sbb
dec
sahf
out
pop
lcall
scas
clc
xor
jecxz
mov
mov
stos
out
loop
stc
adc
rolb
pop
repz
les
insb
iret
mov
dec
and
shll
cmp
and
loope
jbe
pop
ret
test
out
daa
ret
mov
ret
cmpsb
ljmp
inc
sub
mov
addb
push
js
or
rorb
hlt
mov
push
xor
push
push
dec
aas
cmpsl
push
cs
cli
push
addb
xchg
call
lods
adc
inc
ss
scas
aas
loopne
movsl
loop
dec
push
mov
xchg
int3
cmpsl
ja
jne
add
xor
mov
jge
pushf
sbb
add
lds
cmp
inc
fisttpll
and
arpl
pop
outsb
lret
fwait
in
mov
xchg
xchg
add
jo
sti
dec
mov
ret
cmp
fnstenv
or
enter
es
popa
imul
orb
inc
sbb
daa
pusha
jns
cmp
sbb
cwtl
add
sub
fwait
sub
repz
testb
jg
cmpsb
add
mov
lods
aas
dec
ss
andb
xor
pop
hlt
xchg
pop
cli
sub
sbb
dec
xlat
cmp
loopne
fldenv
imul
inc
aad
into
fs
fs
outsl
mov
adc
and
jmp
adc
outsb
lea
xor
or
sbb
inc
pop
aas
rcll
incb
in
mov
inc
hlt
push
cmp
pop
push
iret
rolb
xchg
xor
mov
and
or
jae
jmp
fs
pop
arpl
out
je
out
adc
outsl
ret
xchg
lcall
cmp
add
or
stc
jnp
adc
mov
or
jg
and
test
or
push
push
jmp
push
sbb
pop
in
inc
adc
xchg
cmp
sbb
xor
test
cltd
xor
jne
fadd
std
stos
mov
jns
loopne
xor
addr16
xlat
mov
pop
out
mov
pop
shl
pusha
xchg
mov
sbb
addl
cmp
inc
cli
xorb
dec
mov
sub
out
addr16
xchg
mov
cli
push
mov
and
and
enter
dec
and
aaa
xor
aaa
lret
inc
cmc
sbb
inc
clc
push
pop
adc
dec
mov
jle
scas
mov
xchg
cmp
ljmp
dec
push
and
push
shrb
cltd
pop
outsl
testb
mov
subb
and
xor
cmpsb
out
mov
mov
xchg
rcl
andb
sub
mov
dec
xchg
or
sar
xlat
sti
push
xor
sub
js
lahf
mov
xor
jp
movsl
push
pop
push
iret
scas
sbb
mov
add
mov
mov
repz
ljmp
xchg
out
and
pop
outsl
adc
mov
inc
cmc
push
cld
idivl
or
jbe
jecxz
int
jo
shlb
fldt
mov
dec
shlb
xchg
and
pop
gs
sahf
stos
pop
leave
dec
test
in
mov
ja
sbb
aam
mov
lcall
fcmovnbe
dec
popf
sahf
cmp
and
cmp
jne
pop
sahf
jbe
ret
sbb
inc
xor
cmp
in
addb
push
int3
insb
xor
and
insb
fcmovnb
mov
adc
inc
xor
movb
add
out
aaa
add
movsb
mov
lret
sub
cld
mov
aad
iret
je
pop
movsl
push
xchg
stos
adc
imul
popf
out
dec
in
stos
sub
mov
in
sbb
and
sub
out
cwtl
inc
xor
xchg
jle
mov
pop
pusha
insb
pop
mov
fdivr
mov
and
lahf
test
jnp
adc
aam
lods
adc
mov
pop
movsl
ss
inc
test
mov
jg
nop
movsl
test
ret
pop
pop
xchg
add
jns
sub
lea
push
xchg
stos
mov
loopne
pop
adc
pop
xchg
ja,pt
xchg
adc
xor
stos
pop
addr16
leave
lock
stos
adc
pop
or
inc
in
pop
hlt
icebp
mov
pop
xchg
shll
jne
iret
xchg
or
pop
in
lcall
lds
push
popa
pop
cli
xchg
sbb
jmp
or
dec
out
ret
cmp
push
sub
insb
or
and
xchg
jb
mov
push
or
jbe
or
ja
inc
sbb
cli
lods
ds
sbb
mov
or
inc
sbb
or
jnp
or
shlb
aad
loope
ljmp
pushf
inc
movsl
nopl
adc
push
sti
pop
jnp
inc
jo
adc
fldt
adc
and
xchg
daa
push
sub
xchg
orb
faddl
fildl
into
orl
mov
insb
out
sbb
jle
ljmp
out
in
int3
mov
stos
jne
push
sub
mov
clc
scas
cmp
loope
aam
jmp
push
push
fdivp
stos
sarl
std
sbb
movsl
enter
or
insl
jo
stos
popf
loope
jns
and
repnz
out
push
sahf
adcb
clc
adc
cli
repnz
adc
push
push
repnz
xor
xlat
imul
out
push
xchg
xchg
outsl
jge
lea
enter
aas
mov
ret
out
mov
cmp
push
cmp
mov
mov
jl
repz
or
pop
mov
jns
lods
rol
out
gs
mov
sbb
insl
sub
mov
mov
xchg
push
mov
inc
xchg
dec
fcom
repnz
andl
icebp
inc
lea
or
pop
cld
inc
clc
mov
lret
mov
lret
out
add
imul
add
repnz
into
imul
xchg
scas
or
dec
pop
sub
mov
dec
cmpsl
pop
repz
xchg
lcall
xchg
outsl
sub
inc
mov
cli
jne
dec
xchg
adc
call
sbb
sbb
movsl
outsb
jg
sub
in
aad
dec
insl
aad
lcall
les
and
mov
jae
mov
popa
out
cmp
stc
stos
repz
jmp
decl
jmp
aam
mov
sbb
mov
dec
xchg
sbb
mov
pusha
cmc
push
lock
scas
add
stos
mov
lahf
dec
cmp
dec
mov
push
jge
fdivl
push
je
stos
xlat
mov
sbb
xchg
xor
and
lock
loope
test
adc
push
dec
insl
xor
imul
dec
mov
inc
ret
xor
jo
xchg
adc
push
lcall
cmpsl
cmpsb
cwtl
jns
rorl
mov
cmp
iret
inc
add
adc
shl
cs
jbe
cs
js
into
push
cld
jno
dec
std
push
mov
scas
mov
and
xor
and
jg
cmp
mov
pop
cmp
adc
pop
add
nop
jne
mov
xchg
js
mov
das
pop
fildl
mov
pop
push
jns
sub
pop
leave
clc
adc
mov
das
lods
cwtl
stos
mov
popa
adc
lret
cwtl
cmp
jo
testl
ja
sarb
hlt
mov
or
add
mov
mov
aas
or
mov
jge
lods
mov
sub
add
cmp
mov
sbbb
sub
xor
jns
lret
push
push
mov
inc
push
outsl
int
lret
pop
js
mov
or
pusha
ljmp
sahf
mov
pushf
divb
imul
lea
lea
mov
fsubp
sub
mov
mov
cmc
loop
dec
incl
popa
popf
out
mov
call
xchg
pop
into
cmp
push
sub
stos
insb
sub
push
enter
push
mov
popa
hlt
push
add
cwtl
test
inc
mov
mov
stos
jo
flds
xchg
mov
pop
mov
sbb
imulb
bound
std
ret
pop
inc
mov
out
cld
xlat
mov
jnp
cmp
dec
rcll
or
pop
shll
and
add
ja
push
mov
fs
xchg
ret
movsb
jno
or
adc
add
test
mov
ftst
mov
cmp
push
pushf
std
dec
test
mov
xchg
outsb
sbb
pop
shrl
inc
insl
mov
dec
adcl
ss
sub
cmp
push
loopne
movl
push
in
std
leave
arpl
mov
mov
sbb
sbb
mov
mov
scas
pushl
sbb
dec
push
sub
in
jecxz
psubd
jp
mov
push
pop
mov
mov
push
shll
lea
into
stos
or
fdivl
mov
add
add
inc
imulb
sbb
sbb
nop
iret
repz
push
aaa
pop
mov
int
je
pop
mov
add
adcb
xor
sbb
mov
and
fisubl
jnp
xchg
and
dec
in
and
jmp
mov
push
sar
and
jns
js
or
cmp
aas
pop
popf
iret
mov
inc
pop
mov
stc
push
fildl
push
inc
inc
fwait
rclb
mul
sahf
arpl
mov
fldenv
je
dec
aad
xchg
lret
bound
push
cmp
cmovg
jo
hlt
test
fisubrl
dec
icebp
mov
es
inc
jno
dec
scas
push
int
pop
sbb
sub
mov
inc
ficompl
jo
xchg
jge
push
imul
bound
mov
mov
icebp
mov
cmp
jecxz
cmp
dec
xor
jno
dec
loope
mov
dec
pop
insb
sbb
lcall
mov
push
outsl
sub
sub
lds
sub
out
movb
std
outsl
je
pop
mov
pop
mov
jmp
push
push
cld
cs
or
mov
idivl
int
and
lret
fs
cmp
sbb
inc
mov
push
add
test
or
push
jge
mov
or
jmp
push
inc
add
in
sbb
push
sub
pushl
push
add
fdivr
sub
insb
cwtl
cmc
fcomps
in
mov
mull
stos
jne
push
or
mov
mulb
sbb
cmp
sub
mov
pop
cld
mov
inc
popa
add
cli
fwait
pop
mov
pop
out
outsb
and
add
xlat
fs
out
std
pop
pop
or
lds
pop
xorb
dec
inc
mov
and
pop
icebp
mov
nop
add
sub
clc
bound
mov
pop
int3
and
in
aaa
mov
fs
scas
es
jmp
lret
fstps
jecxz
in
mov
or
cmc
add
sbb
orl
aam
frstor
sbb
loope
fsubrl
dec
cmp
jae
ds
clc
pop
test
fistpll
push
push
mov
insb
mov
jmp
shrb
out
push
lods
scas
call
cmpsl
cld
pop
adc
popa
das
and
clc
int
mov
pop
add
push
add
je
in
adc
cwtl
ja
push
mov
sbb
or
xor
mov
push
sub
shrl
jne
mov
push
add
ret
jg,pn
lret
sbb
cld
cld
sbb
sahf
xchg
ret
dec
xchg
mov
dec
jo
mov
inc
lock
sbb
xchg
mov
push
add
rcrl
call
sub
mov
xlat
or
out
sahf
ret
in
xchg
aas
clc
or
lcall
data16
scas
add
dec
insl
out
xchg
xchg
cmp
mov
push
xchg
lods
mov
mov
pop
cmc
inc
mov
cmp
push
jnp
add
lahf
popa
ret
push
or
in
push
notb
or
sbb
jmp
inc
push
sbb
cmp
sbb
pop
scas
adc
mov
lods
xor
cmp
cmp
andb
mov
sbbb
push
or
inc
fdivrs
test
jge
ljmp
cmpsb
cmp
sbb
stc
fstl
pop
push
cmp
jb
mov
clc
stos
add
sbb
and
iret
andb
fmull
push
in
sub
adcl
cmpsl
in
adc
add
movsl
cld
roll
repnz
jb
and
jp
and
cmp
inc
cmpsl
outsl
xor
push
mov
ljmp
int
cld
insb
lea
frstor
mov
mov
bound
jecxz
mov
inc
add
aad
pusha
cmpsb
arpl
pop
lods
pop
sub
mov
mov
in
mov
inc
xor
cmp
les
out
jle
in
cmpsb
in
shlb
rorb
shrb
fadds
das
sahf
iret
xchg
jp
mov
sub
push
roll
pop
pushf
dec
sbb
cmpsb
mov
lea
iret
iret
pop
adc
xchg
scas
imul
adc
sar
jg
shr
push
or
outsl
pushf
stos
xchg
lods
pop
push
mov
fldenv
jge
cmp
sahf
arpl
jmp
jp
lcall
lcall
mov
lds
stos
push
cltd
adc
js
xor
cmp
rcrl
mov
sub
cmp
repnz
int
push
jle
movsb
lods
cmp
xchg
lea
and
inc
sub
sub
loopne
test
dec
fwait
movsl
das
mov
fimuls
test
mov
pushf
nop
push
inc
sbb
mov
out
and
cmp
xchg
jmp
data16
push
and
std
mov
roll
adc
cmpsb
mov
jle
cli
ss
loope
mov
or
push
xor
and
and
jmp
jnp
jmp
pop
scas
xchg
arpl
or
jo
pop
jae
xor
rcr
test
cli
in
push
mov
xor
outsl
ret
inc
sub
push
outsb
movsl
mov
push
push
mov
outsl
xor
jb
das
rcrl
xchg
mov
mov
xor
push
sbb
dec
loopne
inc
mov
icebp
mov
add
test
pushl
jno
xorl
enter
lahf
fsubrl
xor
pop
and
mov
sub
mov
mov
mov
cld
pop
rcrl
imul
xchg
adc
cmpb
ljmp
gs
mov
movsb
inc
in
insl
js
loope
les
xchg
pop
xlat
fildll
sbb
lret
hlt
xor
jecxz
inc
cmc
pusha
jmp
test
or
in
mov
xchg
je
lret
mov
pushf
shl
and
fs
xchg
push
push
adc
pop
push
fimull
dec
sti
mov
or
lahf
cld
pop
push
fs
mov
rorl
ret
cld
add
mov
cltd
shlb
clc
test
ds
mov
sbbl
sub
fdivrs
adc
inc
in
or
jns
das
xchg
je
jecxz
fcoms
add
sub
jbe
scas
xor
out
fsubs
adc
imul
sub
xbegin
dec
pop
stos
inc
das
rorl
adc
mov
rcr
mov
fwait
inc
stos
testb
mov
push
add
pop
mov
mov
add
aaa
inc
jns
stc
cld
xchg
arpl
xchg
orl
adc
xchg
jp
xor
std
push
jbe
pop
les
add
js
sti
xchg
cmp
pop
jmp
pop
sbb
insb
aas
je
popf
or
imul
call
popa
add
inc
inc
jg
mov
test
push
int3
mov
push
fcompl
xchg
es
lods
lods
pop
addb
xor
lcall
inc
and
inc
std
dec
or
daa
jns
jo
sahf
sub
test
inc
insb
inc
es
push
mov
in
mov
sbb
mov
fndisi(8087
pop
jo
lcall
add
test
adc
mov
int3
jmp
push
or
xor
sub
fwait
lret
adc
mov
pusha
pop
mov
adc
sbb
adc
movsl
jae
inc
repz
fs
xchg
sub
imull
sub
insl
mov
ss
inc
adc
test
call
mov
xor
stc
daa
bound
out
das
das
notl
dec
enter
loopne
mov
xchg
icebp
les
pop
aaa
cmp
dec
mov
mov
in
dec
repnz
inc
inc
es
inc
loop
push
push
cs
pop
jl
xchg
icebp
out
and
nop
xor
popa
loop
data16
jp
push
inc
push
sbb
push
rcr
imul
aas
push
cmpsl
pop
mov
push
mov
push
insb
dec
cltd
adc
mov
shrb
es
in
aam
inc
jnp
scas
push
add
jo
idiv
scas
fldenv
ja
push
loopne
ss
lcall
mov
dec
cltd
dec
sbbb
fmull
dec
xor
lahf
nop
shll
jge
push
push
xchg
ret
mov
rcrl
mov
jne
cmc
mov
out
lret
loope
out
add
adcb
adc
cmp
add
insb
pop
push
arpl
popa
fnstcw
in
stos
inc
inc
inc
outsl
sbb
jbe
cmp
movsl
sahf
lcall
pop
jns
pop
int
mov
std
push
insl
in
mov
push
and
insb
cmpsb
inc
cmp
es
sbb
out
enter
js
out
xchg
enter
inc
test
fsubrl
pop
dec
pop
xor
lret
push
fistpll
xor
adc
lret
leave
xchg
cmc
xlat
or
jo
pop
outsb
aad
dec
sub
test
mov
lcall
sub
cmc
popf
fs
xor
dec
aaa
adc
mov
mull
movsl
jle
das
addr16
inc
addr16
outsl
fistpll
movsb
scas
push
fidivrl
pop
minps
add
push
sbb
in
inc
add
loopne
pop
add
leave
xor
push
fs
mov
arpl
scas
lods
mov
pop
movsl
outsb
mov
mov
push
popa
xor
sub
loop
push
mov
rorb
clc
cli
push
sbb
sbb
cltd
stc
gs
cmp
jbe
std
xchg
test
push
pusha
ja
dec
shll
ljmp
push
loopne
mov
inc
and
adc
xchg
sub
jl
scas
js
pop
pop
out
ljmp
js
shl
mov
out
cmp
adc
fucomp
sti
pop
les
inc
mov
cwtl
jle
stc
jbe
mov
cli
aaa
lea
pop
pop
repz
scas
fstl
stc
sub
dec
scas
daa
cli
jne
inc
pop
ss
outsb
cmp
sarb
lret
sbb
lock
pusha
mov
ficompl
mov
fisttpll
enter
cmp
inc
fidivs
and
mov
pop
push
cmp
xchg
push
fs
aas
adc
push
pop
fcomps
push
loop
loop
pop
fs
ja
scas
pop
fnstenv
imul
mov
cmpb
mov
dec
subl
shrb
ficomps
jne
xor
cmpsb
popf
jbe
mov
lea
out
push
dec
sub
mov
test
inc
decl
cmp
cmp
aas
push
jae
shl
mov
mov
dec
int3
lret
xor
cs
xchg
icebp
sbbl
sub
add
out
dec
movsl
stos
aad
fadd
or
mov
pop
in
int
aas
fs
sub
or
add
pop
inc
lcall
jns
repz
jo
lods
fidivl
sub
sub
cs
es
stc
aas
add
loopne
adc
leave
jmp
enter
jge
les
inc
icebp
push
jg
loopne
stc
rorl
lret
inc
sub
cmp
loope
add
adc
fdivrs
jne
sbbl
mov
mov
repnz
xor
in
inc
pushf
push
pop
imul
iret
xchg
dec
fdivrp
loop
mov
js
jge
daa
mov
push
mov
and
mov
lea
push
test
dec
or
sub
mov
aam
dec
andl
inc
mov
ret
sub
cmp
data16
mov
lcall
jp
jl
push
out
mov
test
outsb
gs
sbbb
lret
gs
pusha
push
jnp
sub
in
adc
test
or
std
test
test
push
in
lahf
lcall
sbb
jns
mov
fisttpl
add
shlb
fxch
aad
dec
pushf
mov
ljmp
jmp
mov
fcoms
insb
in
sub
mov
cmp
cmp
push
rcll
testl
ret
inc
sub
aad
adc
xor
insl
sarl
mov
stos
je
sub
fbld
or
fs
mov
fcoml
into
mov
fldcw
inc
enter
clc
mov
xchg
daa
cmc
sbb
sbb
pop
or
outsl
pop
mov
xor
xchg
sub
push
jnp
minps
mov
cwtl
iret
fdivl
int
scas
lcall
test
jns
arpl
add
pusha
pop
jne
jge
fadd
dec
call
roll
ret
lret
iret
bound
and
push
out
xchg
jne
lds
dec
sub
aam
push
dec
lea
mov
or
lret
mov
addr16
test
mov
in
xchg
xchg
cmp
pop
addr16
out
movsb
cmpsl
push
cltd
add
xorb
xor
bound
mov
mov
push
xchg
sbb
ret
cmp
jbe
sbb
out
out
test
dec
insl
inc
nop
pop
mov
incl
inc
adc
xchg
mov
dec
mov
cmp
in
and
adc
pop
scas
cmp
or
in
xchg
mov
or
or
xor
mov
push
pop
push
xor
repnz
je
push
adc
xlat
outsl
inc
cs
mov
mov
repnz
mov
xchg
adc
jmp
xchg
outsl
push
cs
xor
movsl
add
mov
arpl
dec
stc
adc
insl
cli
adc
adc
stos
sbb
sti
shrl
insl
mov
scas
cmp
xchg
jle
frstor
sbb
lea
xor
push
sbb
push
xor
jb
scas
push
movsb
dec
mov
repz
cs
mov
es
jle
movw
adc
in
or
neg
inc
loopne
xchg
add
mov
mov
mov
xor
out
test
inc
mov
sbb
xlat
xor
inc
les
push
lea
sbb
add
rcl
push
mov
fldenv
mov
jb
movsl
mov
mov
inc
cmc
dec
xchg
adcb
pusha
imul
jne
adc
idivl
cmp
mov
jle
sub
xor
call
test
outsl
or
nop
arpl
lods
ficompl
repnz
sub
fstps
and
push
cltd
dec
ret
aam
ss
adc
add
adc
daa
or
add
xchg
xchg
mov
xor
iret
ds
in
test
scas
ret
sub
and
adc
xor
xor
adc
mov
pop
push
sbb
in
idiv
mov
das
test
cmp
or
sahf
xor
test
mov
add
fldl
gs
sarl
mov
aad
or
inc
push
std
scas
push
push
xor
pop
iret
inc
mov
fcmove
dec
jno
push
and
addb
arpl
inc
cltd
in
xlat
sbbl
fsubs
mov
dec
in
sub
jle
es
nop
into
push
leave
enter
movsb
into
jecxz
inc
insb
pop
iret
xor
mov
das
cld
add
dec
aad
enter
inc
insl
aas
arpl
mov
sahf
leave
cmp
and
mov
dec
data16
xor
popf
dec
push
and
int3
xor
std
fisubl
xor
push
into
cs
or
popa
cmpsb
or
pop
sahf
jnp
dec
push
mov
xchg
add
out
lods
mov
negl
out
fdivp
lock
ficompl
insb
cmpsb
sbb
mov
hlt
push
pop
repnz
or
pop
jns
mov
rcrb
sbb
imul
pushf
js
inc
or
addr16
inc
shrl
pop
sti
xchg
arpl
push
adc
incb
outsb
jbe
aam
cmc
lds
cmp
sahf
mov
pushf
and
ja
xor
xchg
dec
mov
pusha
sub
insl
dec
das
or
aad
push
xchg
push
sub
test
add
dec
movsb
pop
add
mov
push
ret
addr16
cli
inc
push
sti
jmp
or
sub
test
testl
in
imul
cmpsl
xor
adc
pop
ret
loopne
jnp
aaa
mov
test
rcrb
jae
jl
mov
jnp
and
mov
push
xor
jl
cld
mov
sub
and
mov
rclb
adc
adc
adc
stc
lret
fidivrs
aam
add
lods
aam
mov
sbb
add
lock
test
xchg
cmpl
or
xchg
loope
das
push
xchg
inc
cmp
inc
stos
stc
jecxz
sbb
lahf
popa
mov
lds
aas
or
addr16
sub
test
push
shrb
sbb
inc
inc
jecxz
xor
into
jl
lds
aad
or
jmp
xor
add
push
jnp
mov
addr16
mov
mov
dec
sub
jle
out
jae
les
aam
adc
xor
mov
cs
repnz
inc
les
or
rolb
jle
pushf
jge
jl
jg
insl
out
dec
dec
cmp
stos
hlt
mov
ss
pop
aam
je
outsb
mov
cmp
or
or
iret
push
xor
leave
push
rol
lock
mov
push
inc
add
push
mov
leave
hlt
push
js
enter
aas
sub
inc
shl
insl
xchg
xchg
dec
cmp
jnp
in
shrl
in
cmp
jl
fisubs
xchg
xchg
jle
sub
lds
adc
aad
in
rcll
inc
cmpl
xor
mov
lahf
xchg
sub
and
jg
push
pop
leave
dec
inc
sarl
dec
cld
jg
shl
int
push
cli
push
pop
ss
push
cwtl
adc
cmp
cwtl
out
mov
jl
gs
scas
and
lods
adc
adc
and
mov
movsb
aaa
sub
int3
fmuls
aaa
xlat
sub
sarl
push
test
pop
push
in
sub
add
mov
shll
bound
pop
xchg
mov
xchg
lcall
pop
ss
sub
jg
pop
or
adc
add
xlat
rcll
repnz
xchg
je
fcoms
bound
scas
inc
call
or
jmp
cmp
jecxz
fnstenv
cwtl
in
mov
sbb
xlat
mov
movsl
pushf
insb
cwtl
push
sub
mov
jnp
push
inc
pop
clc
jl
cmp
push
pop
decb
mov
das
test
outsb
cmp
insb
jne
push
aam
push
sub
stos
addb
rorl
pop
pop
dec
sub
imul
or
push
push
roll
adc
icebp
xchg
js
aas
arpl
jo
mov
jne
xchg
dec
add
inc
pop
subb
xor
sub
lcall
sbb
cmp
mov
nopl
dec
mov
xor
or
sub
push
xchg
pop
mov
hlt
push
and
fstpt
loope
enter
sub
pop
cmpsb
int3
inc
fwait
int
jmp
mov
mov
dec
or
iret
dec
in
push
imul
inc
adcl
add
lret
and
jne
push
fwait
and
xchg
add
shll
dec
shrl
or
xchg
lret
lds
adc
int
daa
jmp
cwtl
xorb
mov
mov
sahf
nop
call
fldenv
dec
shll
mov
es
lahf
dec
cmpsb
outsl
mov
lahf
sbb
jle
ret
push
test
sbb
repnz
das
out
dec
xchg
mov
stc
cmc
fwait
aas
ja
add
mov
sub
out
xor
pop
or
cmp
cmp
nop
das
insb
pop
push
cmp
lahf
pop
shr
test
sbb
mov
sub
popf
dec
xchg
leave
sub
adc
and
icebp
xchg
fstp
fdivl
mov
ds
fs
pop
scas
in
mov
test
outsl
out
fisubrs
movsl
jg
mov
jne
aaa
popf
pop
mov
add
dec
inc
add
fwait
mov
aas
push
fildl
roll
movsb
xchg
mov
fldcw
jle
loopne
jns
cmpsb
sbb
lret
jns
or
ljmp
add
push
int3
insl
sub
test
pop
fwait
mov
jne
inc
mov
in
out
imul
push
sub
adc
idivb
xchg
mov
pop
into
inc
and
dec
dec
pop
inc
cltd
xchg
out
les
std
mov
pop
mov
into
mov
ficoml
adc
xchg
push
cltd
je
adc
divl
add
scas
cmp
sarl
ja
daa
movsb
addb
mov
das
lea
negl
dec
stos
mov
ficomps
shr
rclb
jmp
sbb
aad
sbb
cmp
fdivr
ret
mov
into
inc
sub
out
loopne
sub
mul
inc
and
repnz
mov
rcll
stc
pop
add
xor
stc
lods
das
lods
fistps
or
out
push
mov
adc
xchg
mov
hlt
sbb
jp
mov
insb
sub
pusha
sbb
mov
loop
mov
adc
or
mov
jae
insb
sbb
push
jb,pt
addr16
or
cwtl
push
pop
call
sbb
shrl
jbe
mov
push
jecxz
inc
test
pop
xchg
mov
mov
shlb
dec
jbe
dec
orl
mov
mov
cmp
fistps
add
iret
out
xor
and
les
sbb
bound
jo
sbb
xchg
test
dec
test
lods
push
push
pop
xchg
mov
int
pop
adc
xor
mov
dec
mov
mov
int
aad
subl
movsl
shrl
fnsave
push
inc
jecxz
jl
std
add
fisubl
hlt
shlb
cmp
inc
adc
mov
rcr
sbb
fildll
int
stos
ret
lea
js
cltd
xor
aas
sar
jne
call
adc
gs
fiaddl
push
cmp
mov
push
or
into
jle
mov
sub
mov
jne
mov
push
fistpll
xlat
and
cmpl
ss
ss
mov
push
aad
out
and
or
mov
push
je
into
pop
aam
stc
ffreep
clc
out
pop
xchg
ljmp
mov
ss
js
add
fs
pusha
aam
push
outsb
mov
lahf
jmp
pop
mov
jg
jbe
pop
mov
call
adc
sbb
dec
movsl
jo
cwtl
push
stos
mov
mov
ja
jmp
mov
jl
xchg
inc
loope
sarb
mov
test
pop
push
mov
fwait
mov
adc
cltd
lock
xchg
addr16
sub
sub
sti
cmpsb
out
test
bound
pop
int
in
ljmp
test
aaa
jb
xchg
xchg
jae
mov
jbe
cmp
jmp
scas
inc
sbb
ljmp
popa
jle
fwait
rcrb
or
fmull
clc
fmull
xor
inc
clc
repz
fisubl
inc
jmp
or
aas
aaa
xor
out
xchg
inc
es
sub
xchg
jb
xchg
pusha
xchg
mov
mov
lcall
xchg
leave
sbb
enter
fidivs
xchg
fwait
imul
rcrl
imul
fcoms
fsub
sbb
dec
cmpb
mov
jle
push
xchg
jmp
bound
xor
fistps
fcom
mov
add
aas
xchg
cmpsb
dec
stos
sub
stos
clc
test
ret
mov
sbb
fs
arpl
popl
cmp
fisttpll
ret
ljmp
mov
shrb
push
aaa
cmp
mov
jecxz
test
mov
shll
dec
in
loop
fstpl
aam
push
cmp
push
mov
daa
mov
test
negb
sbb
and
and
jne
xchg
les
gs
mov
sub
aam
mov
and
in
jecxz
dec
and
sub
dec
fsubrs
loopne
rorl
xchg
cmpsb
pop
lds
fistl
or
jnp
test
bound
pop
xorl
sarb
cmp
mov
xchg
out
pop
cli
lret
cld
iret
loope
mov
popf
pop
cmc
jo
mov
loope
lret
or
dec
arpl
orl
lea
das
test
cmc
call
rcr
cmp
adc
insl
cmp
jmp
mov
mov
xlat
jp
fs
add
jno
imull
xadd
imul
lar
push
clc
stos
cmc
mov
pop
jnp
out
or
cmpsl
movb
pop
lods
fwait
sti
fsubrs
jns
add
mov
cld
mov
jbe
push
or
pop
mov
data16
mulb
imul
pop
pop
xchg
mov
push
imul
pop
jl
fucomp
sbb
mov
mov
fstpl
movsl
outsb
movsb
sub
orl
es
into
jne
jo
push
cwtl
icebp
loopne
push
mov
lret
das
jg
outsl
repz
js
adc
mov
aam
mov
jo
loop
mov
dec
fwait
ss
sbb
ss
lock
dec
sar
jecxz
jecxz
xchg
int
popa
rcll
mov
mov
call
lret
cs
fistpll
inc
push
mov
xor
test
xor
and
jo
cmp
aaa
xchg
pop
mov
pop
xchg
das
mov
xchg
mov
xorl
xor
mov
pushf
inc
ds
cld
sub
inc
out
das
outsl
push
shrl
ss
push
pop
sahf
xor
test
sub
or
out
mov
cld
mov
ja
daa
sbb
pop
ja
pop
cmp
imulb
movsl
or
popa
pop
adc
mov
js
data16
ret
ret
lds
sub
in
or
or
dec
pop
pop
into
xchg
add
outsl
xor
pop
lock
jg
mov
mov
add
rorb
push
cmc
and
mov
repz
leave
sub
push
cmp
out
fidivl
push
clc
xchg
pop
pop
fcompl
cmp
sub
push
xlat
movsl
es
int3
test
rolb
hlt
push
jae
adc
enter
pop
fwait
jg
mov
lahf
dec
sbb
faddp
rorl
sbb
xchg
test
repnz
or
mov
int3
subl
pop
lea
mov
inc
sub
insb
rcrb
push
js
mov
hlt
lret
or
test
test
and
pop
popf
sahf
push
mov
mov
aad
push
mov
mov
lock
out
rcr
sbb
cmp
xchg
shr
fwait
sbb
xor
xchg
out
rolb
pop
xor
lea
ss
inc
shrb
ficoms
cmpsl
ljmp
and
mov
rorb
andl
andl
cmc
xchg
scas
fmul
push
dec
ljmp
popf
jmp
sub
int3
mov
and
pop
dec
jb
cmp
xchg
ljmp
popa
test
les
pop
fs
popf
jae
pop
push
xchg
mov
mov
scas
mov
outsl
scas
jbe
insl
cmp
daa
sub
or
pop
rorl
mov
std
inc
int3
ret
cmpsl
fcompl
and
sub
jmp
mov
sub
std
icebp
rcr
or
mov
adcl
xor
mov
push
insl
adc
out
mov
fsubr
fidivrl
orl
push
mov
xlat
mov
dec
addr16
jne
sub
mov
popf
push
test
aaa
fisttpll
mov
je
lahf
pop
inc
push
out
scas
mov
clc
and
int
lock
add
xchg
jb
push
xchg
int
bound
cltd
test
seto
jp
mov
mov
push
data16
dec
scas
andb
jg
adc
xor
jb
adc
pop
cmp
pop
or
xor
repz
xor
sarl
sbb
push
dec
mov
outsl
sub
sbb
push
dec
pusha
repz
jp
mov
jae
iret
xor
lods
ret
cmp
loop
push
enter
xchg
pop
fisttpll
hlt
push
sub
enter
and
loopne
jnp
icebp
mov
cmp
add
inc
adc
movsb
jp
jp
fisttpll
mov
icebp
scas
dec
cli
jbe
fcoms
jb
cmp
sahf
out
rorb
leave
js
aad
pop
inc
xchg
into
xchg
or
mov
or
sbbb
push
or
movsl
or
pop
sti
sub
push
fldl
outsb
lods
nop
mov
mov
and
sub
dec
in
test
push
sub
cmpsl
int
sub
mov
loopne
lret
inc
mov
nop
mov
fdivl
dec
dec
sub
inc
stos
lret
xor
popf
or
aas
ja
les
pop
movsb
jp
pusha
cmpsl
sub
pop
xchg
xchg
and
push
mov
std
dec
xchg
mov
rolb
cltd
sbb
sti
iret
enter
test
mov
scas
push
loopne
stc
xchg
jle
mov
imul
sub
inc
dec
sbb
sahf
test
adc
ror
in
icebp
stos
ret
dec
sub
iret
sbb
mov
sbb
mov
loop
mov
hlt
int
dec
pop
adc
or
dec
loopne
iret
jmp
and
enter
sbb
inc
add
adc
push
mov
popf
push
push
nop
sbb
xchg
xchg
xor
cmc
add
shlb
cmp
dec
in
std
jo
int
sub
or
push
and
leave
std
sub
lea
fidivs
pop
arpl
subb
xor
adc
gs
ss
stos
test
sbb
adc
jnp
push
cld
cwtl
jg
popa
dec
fdivrp
mov
jmp
dec
mov
in
jno
xchg
ja
xchg
ret
shlb
mov
or
pop
mov
jbe
adc
adc
pop
or
jle
insb
les
add
loope
sti
daa
scas
xchg
pop
in
negl
imulb
xchg
addr16
mov
pop
mov
xlat
xchg
cmp
addr16
xchg
call
push
loope
cvtps2pi
mov
add
lods
sarl
pop
inc
dec
and
loope
shll
mov
and
xchg
movsl
mov
fwait
dec
stos
add
push
lret
adc
mov
or
rclb
and
pop
inc
lcall
test
push
cmp
push
cld
mov
pop
std
fsubl
fwait
in
in
push
or
jp
mov
mov
and
cmpsb
movsb
or
mov
xlat
enter
mov
es
shrb
and
mov
sbb
ja
lcall
hlt
rcr
pop
cmp
push
outsb
incb
out
xlat
xchg
push
sahf
mov
sbb
or
or
in
std
enter
dec
pop
cmp
adc
dec
sbb
fs
sub
enter
movl
sahf
pop
xor
in
pand
rcrb
and
imulb
out
sub
dec
fldcw
or
fnsave
andb
sbb
mov
mov
pop
mov
ret
push
mov
test
insb
hlt
insl
xchg
push
fadds
push
adc
add
mov
mov
inc
adc
popa
stos
adc
cld
test
subb
mov
aaa
dec
add
ss
inc
mov
xlat
mov
jnp
scas
dec
xor
push
push
add
xchg
pushl
adc
nop
xchg
addr16
and
je
stos
stos
dec
sub
fstpl
dec
lret
lea
and
xor
adc
jns
add
xchg
pop
mov
inc
cmp
out
inc
sbb
or
add
pusha
aad
jno
les
imul
mov
dec
sahf
mov
and
aaa
out
testb
inc
cs
adc
sub
pushf
test
and
lods
std
jae
jmp
out
popf
add
and
dec
dec
pop
push
dec
jmp
outsl
xchg
push
sub
ljmp
cmp
pusha
jmp
adc
gs
dec
jge
pop
jecxz
dec
ret
pop
mov
dec
lret
bound
aaa
lds
mov
shlb
push
in
or
and
sub
or
scas
mov
mov
mov
dec
stos
mov
int3
and
dec
sub
cltd
push
xchg
in
xor
addb
shrl
push
sbb
mov
add
cmpsl
lahf
int
push
and
lret
xchg
mov
dec
stos
sub
cmp
cmpsb
mov
rol
mov
repz
xchg
xor
imul
jge
das
es
ja
pop
leave
test
sbb
and
pop
xchg
push
mov
daa
cmp
mov
rcr
sub
and
ljmp
cwtl
cld
daa
mov
dec
xchg
imul
insb
negl
addr16
pop
mov
cld
es
or
sbb
sbb
mov
pop
mov
das
stos
dec
int3
inc
sub
int
leave
xor
sbb
cld
add
ret
or
pop
enter
les
sub
dec
push
out
push
arpl
fcomi
mov
pop
mov
inc
or
mov
pop
dec
sbb
ret
cltd
movsb
xchg
pop
ret
or
in
sub
mov
or
out
hlt
popf
andb
push
mov
pop
daa
xchg
shll
mov
jmp
jle
pop
dec
adc
in
jnp
add
ret
les
loop
inc
stc
les
jp
adc
mov
and
js
pop
shlb
divb
dec
mov
or
and
scas
inc
cmc
xor
lock
pop
scas
arpl
mov
insb
es
mov
sbb
hlt
mov
xlat
icebp
lds
in
push
scas
pop
xchg
xchg
inc
push
outsl
xor
loope
shrl
insb
pusha
or
cltd
stos
fcoml
lock
pop
mov
or
add
addb
imulb
das
clc
ret
sub
mov
aaa
sbb
jae
cmpsl
das
mov
fldl
call
imul
stos
mov
lea
shll
push
repz
cltd
mov
insb
mov
fwait
xchg
insb
cmpsb
push
lea
dec
pop
mov
mov
adc
sub
xor
orl
jmp
push
pop
fistpll
sub
lahf
mov
loop
sbb
and
loope
call
cmp
cmp
lods
pop
cmp
movsb
xchg
cmpb
mov
rcrl
test
dec
and
mov
sahf
out
xchg
fcomps
push
mov
xor
or
aam
and
stc
jb
or
add
in
mov
sub
add
es
stos
cmp
inc
cmc
mov
fidivrs
rcll
out
imulb
inc
xor
iret
xor
aas
mov
in
push
mov
push
adc
in
dec
mov
sbb
pop
mov
jo
es
cmp
leave
out
add
pop
dec
mov
sbb
xchg
roll
pop
and
and
lods
lret
cmc
fucomi
mov
pop
jmp
sbb
mov
std
rcll
pop
cmp
inc
filds
dec
sbb
sub
fidivrs
xchg
add
cmc
fs
mov
iret
dec
sahf
cs
adc
fildll
inc
ja
mov
gs
push
adc
sbb
negl
xchg
cmpsb
cmp
daa
xchg
mov
rol
sub
add
lods
and
dec
add
jmp
and
jg
fiadds
xlat
jmp
sbb
out
dec
sub
out
mov
stc
in
mov
outsb
adc
mov
sub
push
sbb
jg
call
stos
add
sbb
rclb
popa
gs
ret
sbb
divl
subb
out
push
jb
push
sbbl
dec
xchg
sbb
stc
scas
lea
mov
cmp
cli
mov
push
dec
stos
cmpsb
js
fnstenv
fimull
and
shll
std
pop
and
pop
mov
iret
jb
mov
jl
inc
cli
fwait
das
mov
js
xchg
stc
imul
inc
gs
scas
rclb
fimull
dec
mov
sbb
sub
mov
or
repz
sarl
repz
aad
inc
lahf
ja
divb
mov
xor
cmc
inc
pushf
mov
or
insb
inc
or
inc
cmp
scas
jge
xlat
xchg
sti
mov
popl
mov
mov
stc
or
shl
test
push
int3
outsl
ret
notb
jp
add
and
test
cmp
pushf
repz
add
das
sbb
xchg
cltd
repnz
push
jns
inc
loopne
jae
xchg
dec
imul
orb
repnz
inc
enter
out
adc
cs
enter
dec
rolb
cmpl
pusha
sbb
cmp
shlb
add
push
mov
adc
shll
std
xorl
dec
pop
sbb
idivl
popf
lret
xor
cltd
lcall
rorl
cmp
cmpsb
push
ljmp
lcall
mov
jge
jne
xchg
push
jnp
push
shlb
xchg
inc
es
shrl
test
addb
inc
inc
inc
out
pop
rcll
call
insb
enter
mov
push
test
lret
in
adc
push
or
testl
dec
xor
decl
adc
out
sbb
iret
mov
in
push
and
xchg
jl
cmp
xchg
data16
push
insb
sub
cmp
cli
push
inc
cmc
adc
add
mov
cmovge
push
mov
dec
sub
clc
add
ljmp
xor
cmpsb
inc
pop
popf
test
push
fwait
jnp
inc
mov
jg
sbb
lret
inc
jecxz
mov
sub
add
sub
daa
xor
inc
add
aaa
xchg
jmp
add
fbld
mov
xor
and
or
fnstcw
sbb
xor
add
jo
xor
or
mov
xchg
lcall
fstpt
fimuls
lock
leave
lahf
lods
cmpsl
or
je
les
les
jns
sub
les
xor
or
push
iret
sub
jl
ljmp
inc
cmpsl
shlb
imul
dec
out
js
iret
das
gs
push
xor
push
inc
dec
cli
lock
leave
in
xor
sub
inc
or
setno
clc
pushf
xchg
pop
ret
lret
dec
add
cmp
pop
cmpsl
inc
gs
sbb
lods
stos
add
push
xchg
jg
mov
fisubs
and
dec
test
cltd
and
sbb
xchg
jnp
stos
jl
mov
lahf
insb
sahf
fbld
cmp
cwtl
mov
icebp
inc
rcr
dec
pushl
imul
jmp
das
mov
ds
xchg
leave
cmpsl
outsb
enter
mov
psraw
icebp
sub
and
leave
pop
test
addr16
imul
adc
insl
push
jecxz
inc
jbe
ss
or
enter
sub
mov
popf
lods
rol
cmc
push
cmp
or
ss
ja
inc
pop
pop
mov
pop
cld
and
adc
in
icebp
aas
add
lds
mov
stos
or
fnstenv
std
or
sub
testl
xchg
loop
inc
xor
pop
scas
lret
lret
push
dec
insb
adc
push
mov
push
js
mov
mov
xlat
sbb
add
neg
cmc
mov
in
mov
sub
and
dec
mov
mov
jl
push
cmpsl
pop
shr
mov
mov
addb
sbb
iret
xlat
and
mov
add
ret
cmp
push
in
adc
test
out
rol
mov
lods
lock
jo
cli
test
ret
arpl
adc
cmpb
mov
add
rclb
pop
fildll
xchg
arpl
divb
insb
ljmp
xchg
jp
inc
sub
and
mov
and
mov
in
mov
daa
dec
aaa
mov
mov
mov
std
xchg
ds
add
fdivs
dec
fwait
add
cmc
push
das
cmp
cmpsl
pop
rcr
fnstsw
dec
dec
repz
jns
nop
mov
and
mov
mov
rcll
lret
mov
inc
and
sub
sbb
pop
aaa
iret
jge
cmp
fldenv
push
sub
dec
pop
cmp
stc
roll
inc
pushf
cli
in
push
mov
popf
xchg
mov
and
cmp
mov
pushf
into
jl
push
pop
incb
and
xor
out
ds
testl
and
orl
movsl
sbbb
pop
call
xchg
xchg
stos
das
xchg
mov
jo
jg
aad
inc
dec
mov
push
add
push
mov
pop
push
jbe
jmp
mov
dec
inc
dec
ret
xchg
pop
mov
adc
call
outsb
shlb
cmc
push
inc
addl
cmp
jne
stc
mov
push
pusha
and
clc
adc
xchg
xchg
or
pop
lret
sub
mov
cmpsb
push
adc
push
inc
push
xor
xor
lods
mov
xchg
cs
andb
loopne
cwtl
push
jmpw
mov
adc
xchg
movsl
mov
test
push
adcl
jo
hlt
ss
sub
jne
icebp
dec
jb,pt
dec
sbb
roll
ror
add
sub
xchg
xchg
cmp
ret
faddl
cmp
cltd
push
sub
stc
scas
xchg
stos
ficoms
loope
push
push
inc
mov
dec
xchg
mov
std
repz
stos
into
add
mov
mov
inc
hlt
popa
test
xor
stos
sti
sbb
inc
rclb
fs
add
pop
popf
in
xlat
stc
cmp
sti
rcll
or
add
add
push
and
dec
jb
jecxz
jo
xchg
inc
std
stos
xchg
pop
sub
test
pop
fdivp
xor
jno
dec
daa
mov
outsl
insb
and
cmp
cmp
xchg
inc
nop
xor
outsl
jb
aam
shll
or
ljmp
mov
mov
sbb
in
movhlps
test
pop
movsb
aaa
inc
inc
int
out
adc
pushf
cmp
xor
mov
inc
and
into
in
or
jbe
inc
repnz
ljmp
pop
mov
add
cld
shlb
sub
stos
jb
xchg
out
aad
aaa
scas
cmc
leave
and
sti
test
and
std
scas
mov
out
jmp
mov
in
dec
inc
dec
adc
cmpb
and
shrb
push
ret
imul
cmp
insb
pop
movb
shl
pop
sub
cmp
addr16
lcall
mov
mov
cli
push
es
nop
fiadds
bound
jnp
test
inc
xchg
stos
mov
pushf
mov
jmp
cmp
outsb
out
mov
add
mov
or
mov
jp
adc
mov
push
pmaddwd
cmp
ficoml
fadds
jb
repnz
rcl
ja
push
lahf
dec
fs
mov
push
xchg
lods
test
push
dec
or
out
in
jp
or
jae
cmp
repz
xchg
xor
cmp
mov
sbb
push
push
push
mov
push
inc
dec
inc
mov
add
stos
pop
imul
dec
enter
iretw
sub
sbb
dec
mov
xchg
rol
xor
cs
dec
jl
repnz
rol
popf
mov
inc
push
pop
fdiv
into
jmp
repnz
sbb
popf
jns
shll
xchg
call
cltd
mov
push
lods
pop
or
scas
mov
cmp
sub
shlb
jge
adc
jno
aam
imul
inc
loope
std
add
in
pop
pusha
and
call
pop
leave
daa
into
sub
inc
fldt
andb
inc
adc
fucomi
es
out
add
scas
add
insb
sbbb
lret
hlt
outsl
and
sub
mov
int3
or
push
push
xor
add
mov
test
aas
sbbl
cmpsb
ret
movsl
aas
gs
bound
xchg
mov
xor
xchg
ret
jg
xchg
add
pop
cltd
std
das
dec
shrb
sbb
sti
ret
outsb
adc
shl
enter
scas
es
inc
sub
sub
aam
scas
in
sub
and
fs
jo
push
jno
add
inc
adc
or
adc
lods
fadds
popf
insb
sbb
pop
mov
push
jb
daa
dec
cmp
out
sub
pop
in
sbb
xor
scas
inc
mov
call
mov
rclb
xchg
jmp
outsb
out
ljmp
xchg
xrelease
loop
cmp
fisubrs
pop
ljmp
mov
orb
icebp
test
sbb
inc
adc
dec
push
in
cmp
cs
imul
pop
out
push
cmp
fmul
insl
mov
sbb
xchg
incl
lods
lock
sti
pop
push
xlat
stos
xchg
jae
outsl
shl
outsb
push
cmp
aas
lahf
jb
inc
push
into
and
inc
add
and
mov
push
inc
mov
mov
dec
fstpl
in
xlat
mov
lret
insb
ficompl
imul
or
dec
aam
jmp
lahf
cltd
mov
dec
sti
mov
mov
cli
or
cld
cmp
dec
outsb
push
push
xchg
mov
push
pop
addl
in
movsl
mov
fiadds
pop
nop
jmp
out
out
addl
inc
mov
mov
in
or
mov
ja
or
push
ficompl
xchg
lods
sub
inc
inc
jmp
xchg
push
es
mov
das
pop
fisttpl
sub
mov
negl
cmp
mov
jl
and
dec
mov
jmp
cmp
cmp
push
ljmp
push
cwtl
dec
cltd
adc
adc
repnz
and
add
test
xor
jge
dec
sti
mov
jo
loopne
mov
push
testb
imul
mov
test
dec
iret
andb
shlb
xchg
mov
fwait
in
cmp
int
inc
inc
insb
cmc
xchg
inc
clc
sbb
in
push
in
pusha
add
cmc
xchg
sahf
mov
cmp
jbe
mov
into
add
jne
add
pop
dec
std
fbstp
sahf
dec
mov
sub
scas
push
gs
jb
push
fisubs
ret
push
xchg
int
enter
mov
mov
adc
adc
cmp
sub
aas
jnp
ret
das
push
daa
push
dec
cltd
pop
fnstenv
push
sub
mov
scas
mov
push
arpl
cmp
cmp
cmp
roll
setns
xchg
mov
mov
and
mov
decl
imul
mov
xchg
sub
scas
xor
cli
int3
lahf
fidivrs
sub
fs
sarb
push
push
push
xor
jecxz
ds
xchg
das
adc
cld
mov
push
xor
xchg
pop
push
adc
repz
xor
in
out
or
stos
sub
fwait
sbb
popa
mov
sub
dec
or
push
cmpsb
add
add
ds
jmp
push
push
mov
sub
rclb
lret
lret
cmp
or
icebp
lahf
and
xor
popf
insl
adc
mov
cmp
mov
sbb
lea
enter
sbb
xor
or
icebp
outsl
push
jp
mov
daa
cmp
cs
mov
add
mov
jmp
sbb
je
subl
es
je
inc
mov
out
mov
aas
push
mov
pop
mov
sbb
int3
jbe
mov
sub
fsubrs
mov
jecxz
jge
lret
repnz
cmp
sahf
add
jg
sub
mov
pop
outsl
insl
lods
pop
mov
xchg
mov
in
cwtl
iret
mov
xchg
jge
inc
inc
pop
inc
sub
hlt
outsl
xchg
cmp
call
lock
sbb
in
sub
popf
mov
movsb
out
xor
mov
aam
fisttps
push
in
frstor
pushf
gs
push
in
mov
mov
call
mov
cmpsl
ds
adc
inc
jae
pusha
jno
add
jno
js
and
mov
fdivrl
mov
enter
shl
fidivrl
xor
cmp
add
imul
pop
adc
fs
add
adc
movsb
xor
lock
test
pop
and
cmp
lds
pop
ljmp
cwtl
adc
pop
fwait
adc
jp
cmp
fwait
pop
loop
and
pushf
pop
sub
and
shlb
dec
fstpl
cwtl
sbb
int
adc
mov
bound
mov
call
push
push
sub
clc
jae
or
lahf
int3
fwait
dec
cmp
subb
adc
adc
fs
lea
dec
ja
push
stc
sti
sbb
cmpsl
std
sbb
push
inc
lods
std
jp
or
lock
cld
sbb
and
mov
lcall
sub
push
les
mov
mov
sarl
jecxz
dec
mov
loop
shr
and
sti
push
mov
or
push
ljmp
mov
adc
mov
lods
or
xlat
xchg
lock
and
idiv
push
and
int3
pop
or
hlt
jge
dec
int3
shlb
dec
xchg
push
sbb
inc
pop
int
out
inc
and
mov
andl
sbb
jae
lea
bnd
pop
shrb
mov
cmpsl
repz
sub
pop
lods
and
cmp
dec
mov
cli
rcll
pop
jbe
dec
mov
test
insl
shlb
pop
stc
and
enter
mov
push
pushf
cmp
mov
js
dec
push
mov
lcall
lock
lahf
test
and
xchg
mov
jl
call
push
or
dec
lock
or
insl
stos
xchg
jns
inc
imul
jnp
xchg
cmp
and
movsl
mov
cmpsb
mov
sbb
adc
or
pop
fisubrl
jge
push
mov
repz
xchg
out
data16
xorb
mov
fistps
mov
mov
insb
pop
inc
out
or
in
fldcw
cmpsb
xchg
jae
push
adc
sbb
sti
inc
pop
sbbl
je
cmpsl
outsb
pop
xchg
xor
aaa
pop
xlat
lock
lahf
lea
sbb
cs
cmp
fcompl
pop
adc
add
decl
hlt
add
mov
push
mov
enter
jb
je
xchg
fstpl
cld
mov
std
fsubrs
sub
inc
xlat
enter
add
xor
daa
xchg
aas
mov
sahf
mov
dec
pushf
testl
push
inc
push
inc
shll
sub
mov
pop
ja
call
fiadds
sub
jnp
mov
sbb
gs
outsb
cmp
push
or
cmp
ljmp
xchg
loop
pop
std
or
mov
sbb
or
subb
jge
or
push
mov
shl
loop
dec
test
sbbb
pop
lds
sbb
or
xchg
mov
dec
mov
aas
sbb
jl
inc
pminsw
pmaxsw
lock
scas
ret
add
out
mov
stc
nop
xor
addr16
popf
mov
icebp
ljmp
sbb
sarb
xchg
clc
movsl
pop
push
jnp
add
cmp
mov
test
adc
mov
xor
in
aas
cld
fsubs
enter
adc
test
imul
lret
lods
xchg
ss
mov
lahf
movsl
movsl
push
int3
xchg
cmp
dec
sbb
dec
pop
into
decl
inc
mov
push
mov
out
or
loop
aad
jecxz
xchg
mov
sub
sbb
and
or
mov
mov
iret
push
imul
jne
cmc
pop
pop
push
rcrb
shl
stos
popa
xor
mov
pop
pushf
sarl
test
dec
or
je
aas
jne
mov
pop
inc
cmc
sbb
xchg
and
loope
aad
jne
xchg
xchg
in
lret
xchg
xchg
daa
xor
clc
adcb
jno
out
pop
xchg
cmp
inc
jbe
fs
andb
aad
lea
cmpsl
arpl
adc
dec
popf
pop
insl
js
sub
ja
sbb
ds
mov
inc
fwait
aaa
jmp
dec
sbb
mov
imul
xbegin
and
and
int
cmp
in
and
add
add
cmpsl
mov
sub
outsb
pop
push
mov
jmp
and
add
and
sbb
lahf
shll
push
sub
test
fcoms
mov
sub
cmpsl
xor
and
or
xor
jecxz
test
push
xor
fcompl
cs
dec
lock
push
xor
add
ljmp
leave
mov
adc
adc
popa
or
mov
arpl
in
imul
and
scas
cmp
xor
xchg
jg
outsl
call
xchg
das
or
lahf
shrl
push
mov
out
sarl
mov
xchg
adc
das
outsb
mov
adc
adc
xchg
or
jb
xchg
movsl
rorl
push
mov
mov
std
jne
icebp
rclw
pop
mov
push
inc
repz
aad
add
xor
out
repnz
mov
push
adc
es
xchg
adc
mov
inc
daa
outsl
sub
sub
xchg
movsb
push
fnstcw
mov
adc
scas
mov
pop
and
aad
movsb
aam
xchg
in
sti
jmp
push
pop
je
fsubrp
mov
mov
xor
sbb
sbb
push
sbb
xorl
gs
xor
inc
in
mov
fs
fbstp
mov
or
leave
cld
adc
or
in
cmc
adc
stc
ja
pop
sbb
inc
icebp
add
lea
dec
and
mov
std
pop
aaa
test
dec
jno
or
xchg
outsb
insb
mov
cmp
repnz
sub
movsl
pop
inc
loop
movlps
xor
insb
ja
ljmp
mov
ss
push
insl
inc
punpckhdq
into
sbb
xor
sub
pusha
mov
lods
in
aad
mov
jnp
insb
iret
mov
mov
daa
sub
push
pop
pop
and
cmp
je
testb
jnp
cwtl
xor
mov
in
and
or
mull
mov
xchg
imul
and
add
std
jno
inc
sub
shll
int
mov
and
imul
gs
fldcw
jbe
push
or
ds
in
xor
mov
dec
shr
pop
cmp
ds
test
ds
ljmp
push
stc
je
sbb
mov
sub
out
or
mov
mov
les
pop
mov
push
add
xchg
into
mov
cli
dec
dec
leave
xchg
dec
sub
push
mov
jge
les
subb
push
shlb
push
xlat
cmpsb
push
out
or
js
arpl
xor
mov
out
cmp
lahf
jno
test
adc
das
mov
fs
adc
xor
fs
js
and
ret
mov
adc
push
pop
mov
test
enter
iret
jns
test
hlt
xchg
push
mov
ja
sbb
scas
xchg
das
nop
pusha
loope
pushf
mov
or
mov
xchg
ljmp
xchg
loope
push
das
push
sbb
jne
cmp
scas
in
cli
adc
in
mov
das
sub
lret
mov
xchg
cwtl
sbb
inc
iret
movsb
shll
loope
cmp
orb
push
xlat
dec
sbb
mov
ret
cmpsl
and
push
rol
cmc
xor
mov
xor
push
test
pusha
jg
jae
cmp
or
nop
and
dec
sahf
stos
push
jns
ror
sub
jecxz
or
inc
into
cmpsl
pop
add
cli
mov
dec
add
pushf
scas
inc
push
call
mov
xchg
sbb
push
mov
stc
mov
adc
call
adc
lret
lea
int
sbb
cld
lods
push
dec
pushf
xchg
mov
mov
mov
lds
fidivl
stos
xlat
pop
lret
imul
add
jns
add
gs
jmp
shrl
ljmp
push
mov
lds
fadd
rcl
scas
cmp
stos
cmp
mov
xorb
xchg
fidivl
sbbl
xchg
ja
lock
mov
mov
adc
hlt
cmp
jle
xchg
hlt
sub
inc
ret
shlb
ret
into
fcomps
loope
pop
out
das
pusha
arpl
scas
loop
pop
cmp
in
mov
push
mov
cmp
mov
lea
std
xchg
sar
outsb
cli
mov
adc
imul
inc
movaps
shlb
shll
cli
xchg
jecxz
aad
pop
inc
insl
or
shlb
sahf
jg
cmp
adc
outsl
sarl
js
mov
mov
adc
xor
sbb
dec
push
rcll
add
outsb
adc
jno
aam
arpl
inc
adc
mov
movsl
push
loope
out
mov
or
popa
adc
cmpsl
lcall
xor
add
pop
stos
cmpsl
pushf
test
mov
dec
xchg
jle
mov
lret
jecxz
jns
inc
mov
jmp
jo
jns
cmp
jge
add
mov
xor
aam
jecxz
sub
je
inc
mov
js
jecxz
andl
adc
aad
inc
out
out
dec
shll
les
jg
jl
stos
mov
aad
mov
sub
dec
shl
sub
andl
sbb
jae
out
insb
sub
inc
out
out
movsl
stos
loopne
mov
pop
mov
sbb
cmp
inc
repz
xor
jo
xor
sbb
or
pop
scas
repz
jb
sarb
push
mov
int3
push
call
incb
inc
sahf
dec
inc
in
lret
rclb
push
push
in
in
fistpl
or
sub
in
pop
lea
mov
mov
add
js
inc
loop
cltd
jbe
xsavec
dec
mov
shrb
jmp
data16
movb
inc
sub
mov
nop
pop
cmc
push
mov
fimull
loop
inc
cmp
push
sbb
fsubl
dec
add
stc
fstl
cmp
xchg
xor
lods
outsb
test
clc
cwtl
mov
ds
lods
dec
mov
push
xor
push
aas
imul
jns
cmp
mov
mov
push
std
mov
pushf
mov
das
add
dec
popa
inc
sub
xor
xchg
inc
sbb
jb
call
cld
and
test
or
mov
shrb
inc
lcall
mov
xor
arpl
mov
jmp
jb
and
mov
inc
dec
jmp
or
insl
mov
jmp
jp
or
cltd
cli
jno
push
loope
mov
pushf
scas
daa
push
out
neg
sub
sbb
and
notl
jno
orl
sub
jge
jl
fucomi
stc
into
sbb
jge
aaa
mov
popf
add
lret
push
mov
cmp
or
das
mov
call
dec
pushf
cmp
mov
aam
push
push
push
aaa
sbb
xor
mov
dec
fwait
xchg
das
aas
push
js
push
adc
sbb
cmp
aaa
jns
int
cltd
xchg
shll
aad
jg
les
sub
xor
gs
jae
loop
loop
lock
jle
or
adc
jmp
sbb
mov
out
mov
inc
pop
adc
scas
fwait
sbb
lock
sub
inc
inc
xchg
outsl
or
jns
push
jne
mov
bound
test
and
ret
pop
mov
out
in
push
test
fcmove
mov
adc
adc
mov
mov
in
das
testl
add
ret
dec
xchg
and
sub
cmp
lcall
ja
sbb
lods
in
xchg
mov
pop
es
adc
icebp
into
jecxz
inc
xchg
lock
or
inc
aam
loope
arpl
stc
hlt
jbe
daa
fnstsw
fstps
call
cwtl
push
es
por
rcll
add
cmp
lods
loopne
and
jnp
repnz
push
and
xlat
outsb
mov
cmp
es
sub
mov
stos
std
std
lea
jne
loop
ss
or
ljmp
xor
andb
pop
ret
enter
xchg
out
test
nop
hlt
cmp
and
push
adc
mov
push
jbe
cmpsb
mov
jns
inc
pop
xchg
push
mov
clc
mov
punpcklbw
mov
pop
mov
cmp
loop
out
stc
mov
and
jle
add
inc
inc
idiv
fdivp
adc
xor
sbb
fmul
xchg
push
stc
jl
xchg
bound
shll
faddp
cmpsl
add
dec
js
mov
push
sub
or
imul
mov
aam
cwtl
fcmovnbe
in
cwtl
call
shll
bnd
cs
dec
fs
cmp
pop
arpl
arpl
and
popf
movb
add
stc
in
lahf
nop
mov
call
in
stc
or
and
pusha
sub
push
cmp
loope
cwtl
int
adc
jecxz
test
inc
push
push
sti
lcall
dec
cmp
lods
ficoml
les
ficoml
pop
jb
push
jecxz
ja
pop
cmpb
sbb
loope
ja
loop
mov
jae
add
faddl
gs
ja
arpl
das
inc
clc
jmp
inc
repnz
out
arpl
aas
test
dec
je
xor
xchg
dec
repnz
xor
insb
rcrb
push
stos
mul
push
xchg
cltd
inc
aas
and
sbb
jmp
xchg
fs
add
dec
insb
test
mov
fnstcw
push
lret
inc
push
movsb
inc
sub
mov
dec
shlb
loop
cld
mov
cmc
aam
mov
packssdw
dec
sub
jo
sahf
movsb
das
fisttpl
xchg
addr16
loope
aad
sub
xor
loope
mov
mov
popa
pop
insl
pusha
test
pop
enter
pop
jae
insl
sbb
mov
ja
mov
dec
testb
or
xchg
inc
inc
and
cmp
cwtl
into
ds
rcrb
or
lahf
loope
fidivrs
inc
sbb
sbb
inc
add
push
or
sbb
sbb
gs
insb
mov
cltd
ja
cmp
sbb
cmp
and
dec
push
xchg
mov
rcll
nop
cmp
cli
mov
mov
adc
pop
lods
jo
cwtl
add
sbb
enter
fdivr
sub
xor
or
bound
js
repz
xchg
cmpsb
sbb
pop
lock
xchg
ljmp
lds
adc
std
int3
cs
stos
repnz
mov
rcll
jne
or
ret
dec
test
and
lds
and
sbb
insb
mov
sahf
and
scas
lock
int
cs
stos
cmp
in
ja
or
pop
push
out
mov
shlb
sub
sarl
aaa
mov
xchg
fs
stos
movsb
jl
sbb
jb
xor
int3
leave
fucom
loop
inc
insl
and
shlb
and
sbb
xchg
clc
push
push
jno
dec
cmp
flds
dec
lea
ljmp
aam
in
cmp
xchg
add
lock
out
imul
mov
push
scas
insl
and
adc
xor
or
or
push
push
pop
inc
aam
in
std
dec
inc
mov
jmp
shll
mov
sub
in
jmp
dec
roll
out
or
arpl
push
sti
sub
fmull
jo
int3
sbb
pop
push
ds
sbb
xchg
aad
adc
mov
cmp
ds
aas
sbb
movsb
test
xchg
cmp
cli
xchg
fs
in
mov
mov
fistps
shlb
sarl
inc
add
js
xchg
sbb
jb
jle
jge
das
push
ljmp
cmp
stos
rolb
loop
aad
repz
mov
xor
adc
add
sbb
clc
pop
fiaddl
aas
xchg
les
fs
sub
pop
jno
fnstsw
lods
pop
fmuls
mov
and
and
xchg
mov
xor
movsl
pop
pop
nop
lods
and
rcll
inc
mov
lret
pushf
push
sbb
pop
adc
cmp
call
cs
fcmovnu
jb,pt
bound
repz
adc
push
popf
rolb
out
pop
add
negb
and
dec
or
sahf
sub
mov
scas
rcl
and
jb
js
cmpsb
mov
shlb
into
sbb
cmpsl
insl
xor
push
insl
call
mov
dec
or
mov
decl
xchg
mov
adcl
fcmovu
psllq
in
idivb
mov
daa
lcall
bound
lea
loopne
mov
cwtl
sub
lods
pushf
and
out
repz
and
and
repz
icebp
mov
jmp
dec
sbb
sub
pop
cmp
sbb
andl
push
jge
xor
and
add
cld
lahf
vmaxpd
movsl
insb
xchg
cmpsb
xchg
imul
xor
out
dec
rol
push
or
xchg
inc
sub
mov
jmp
icebp
adc
adc
push
sbb
std
or
dec
rcll
shrl
jne
aad
xor
mov
shll
sahf
shl
cmp
lods
decb
ds
xchg
mov
sub
add
iret
pop
mov
xlat
mov
mov
or
cltd
sbb
fmul
sub
and
test
dec
cmpl
fdiv
mulb
lret
call
clc
mov
inc
cmp
cmp
std
lds
decb
or
pop
pop
ja
sbbb
rcrb
out
out
sub
push
movb
pop
xchg
xchg
fildl
push
ficomps
dec
std
xor
xlat
cli
sahf
push
jge
xor
mov
pop
lret
adc
ret
mov
data16
std
sar
std
xor
xor
mov
daa
fcmovb
or
add
decb
shlb
sbb
xrelease
adc
push
push
push
cld
movsb
push
or
add
sbb
dec
fstpl
cmp
dec
icebp
test
fcmovnb
arpl
or
fwait
push
popf
mov
pop
jns
rclb
mov
mov
movsb
pusha
cmc
daa
fwait
rclb
push
sbb
inc
scas
iret
pop
and
mov
ljmp
dec
push
add
xchg
xor
gs
aad
jl
sub
cwtl
mov
call
iret
rorl
dec
xchg
xor
adc
test
int
into
loope
jp,pn
inc
hlt
xor
popl
int
and
sbb
fistpl
clc
xor
ja
ss
faddl
cmp
xor
cli
add
pop
daa
sbb
adc
push
lcall
gs
cmp
xchg
lret
outsl
ljmp
push
push
dec
gs
cmp
stos
mov
push
pop
ja
jecxz
dec
lret
dec
mov
cwtl
addr16
loope
loop
cmp
into
jno
push
sub
scas
jle
test
popf
loopne
mov
cmp
sbb
divl
lea
xor
out
cli
jno
push
mov
ljmp
pop
or
cmpsb
push
pop
dec
lahf
mov
add
inc
pop
mov
add
cmp
sub
dec
filds
nop
inc
cmp
gs
test
movb
nop
cmpsb
lahf
stos
xchg
call
xor
xor
shr
mov
jmp
icebp
push
push
mov
loopne
and
fidivl
adc
dec
jecxz
addr16
aaa
test
sbb
out
imul
jae
in
xor
and
push
cmp
scas
gs
push
xor
ret
cmp
push
imul
movsb
rcl
inc
adcl
std
mov
into
in
and
mov
sbb
mov
loope
adc
aas
call
loopne
xchg
enter
addr16
faddl
push
dec
inc
insb
and
mov
adc
fimuls
lods
pop
dec
inc
outsb
in
push
push
les
stos
pop
sbb
sbb
mov
mov
outsl
mov
std
js
out
push
sub
mov
sbb
dec
data16
sbb
inc
or
std
mull
mov
in
cmp
stc
arpl
dec
daa
dec
inc
inc
add
cwtl
mov
mov
adc
sbb
mov
dec
cld
ss
mov
push
sahf
lahf
sbb
mov
jecxz
ljmp
cwtl
pop
mov
cmp
push
push
pop
scas
es
lret
ret
negl
push
iret
stc
dec
movl
fsub
sub
aad
and
sbb
xchg
dec
add
lods
mov
mov
out
jne
dec
outsl
shlb
rclb
insb
xchg
inc
and
std
shrb
pop
sub
in
pushf
ret
nop
and
ja
push
popf
out
shlb
add
or
lds
inc
andl
dec
mov
sbb
test
movsl
cwtl
into
faddl
xor
pop
inc
dec
and
daa
and
push
jnp
and
adc
es
cmp
mov
js
xor
daa
pop
or
ret
fsubrs
sbb
mov
mov
cmp
and
cmp
dec
sub
push
in
inc
loop
incl
xchg
adcb
push
call
mov
mov
clc
xchg
cmpb
add
fistpl
test
mov
pop
mov
add
jmp
cmp
in
icebp
les
push
popa
jp
pop
mov
repz
jmp
bound
rcrl
fs
inc
in
jle
inc
outsb
xchg
sub
lahf
imul
push
test
xchg
test
es
test
bound
pop
repz
mov
jno
adc
inc
xchg
addl
pop
inc
mov
adc
cmp
loop
aad
stc
fcoml
or
or
mul
jbe
mov
call
add
dec
lods
sbb
pop
movsb
imul
cmp
mov
push
or
sahf
fs
mov
mov
ficompl
aam
outsl
incb
lds
sbb
cmp
push
out
sub
int3
sub
xor
roll
mov
cmp
ja
outsl
jno
ret
cmp
xchg
out
sbb
outsl
out
lock
outsl
and
loope
nop
lret
add
scas
mov
popf
cld
int
lea
mov
inc
lea
andl
cmp
sbb
sub
stos
sbb
jns
cld
stc
aam
pushf
sbb
mov
mov
mov
inc
jne
shll
push
es
or
mov
jne
add
xor
outsl
cmp
imul
call
push
inc
mov
mov
in
das
cltd
mov
or
add
in
and
lret
fsubrs
mov
mov
mov
lret
and
and
mov
lods
mov
imul
or
sti
and
mov
ds
jge
mov
call
sub
jo
nop
pop
mov
cmp
or
es
add
xchg
ret
sbb
call
dec
aaa
fidivrl
and
xor
outsl
push
add
icebp
pop
ret
test
jmp
ret
and
das
adc
cmpsw
adc
inc
dec
jle
xor
mov
mov
inc
outsb
adc
hlt
repnz
push
jno
sbbb
movsb
out
fisubrs
shr
adc
and
dec
loope
adc
pop
je
jne
jns
outsl
sbb
je
test
sub
pop
xlat
or
or
mov
lods
jne
pop
sub
sub
adc
gs
cmpsb
jp
cmp
adc
adc
sub
mov
push
xchg
pop
adc
inc
js
mov
cli
and
pop
dec
xlat
dec
ss
fistpll
mov
insl
sbb
and
punpcklbw
add
mov
push
xchg
data16
lods
push
mov
inc
movsl
or
or
insl
stos
sahf
test
hlt
in
jl
leave
sbb
push
imul
lcall
clc
pop
test
sbb
outsl
and
loop
les
ja
loope
imul
mov
std
es
sti
add
hlt
rcr
inc
rcr
int3
lea
and
loope
and
nop
push
add
jno
xchg
xchg
nop
lahf
call
inc
addr16
xchg
scas
lahf
xchg
lock
adc
loope
adc
and
std
and
pop
aad
lods
ja
ljmp
cwtl
loopne
cmp
and
out
addr16
cmp
dec
scas
fcmovnb
or
mov
rclb
test
lds
push
and
mov
xor
scas
pusha
and
push
and
das
adc
out
xchg
or
cmc
and
push
fwait
pop
negl
stos
cmp
scas
sbb
rorl
popf
iret
es
xchg
jnp
xor
call
add
ret
jle
xlat
scas
xchg
cwtl
mov
pop
loope
dec
in
cli
sub
mov
dec
push
mulb
cs
cs
jle
pop
xchg
mov
inc
mov
fsubl
sbb
add
ss
movsb
lret
sub
inc
inc
or
jecxz
pop
shlb
push
jo
aad
out
xor
mov
bound
shll
xor
push
push
popa
xchg
subb
ja
push
iret
setae
shll
dec
nop
mov
mov
cmpsl
inc
xor
test
bound
mov
test
lret
dec
fdivr
sahf
mov
es
aad
inc
or
push
ret
lock
clc
imul
hlt
dec
popl
and
lahf
push
scas
int3
xchg
or
andnps
mov
arpl
pop
andl
test
enter
add
arpl
or
pop
shrb
test
or
push
push
aaa
in
lods
les
xchg
in
push
and
lock
loope
fldenv
inc
lcall
popa
punpckhdq
daa
push
mov
mov
dec
arpl
in
or
pushl
mov
push
push
adc
fs
subb
sub
or
jnp
enter
or
jecxz
pop
ds
pop
out
mov
inc
adc
push
lds
repz
fucomp
xchg
mov
push
rep
or
mov
dec
xchg
roll
addb
fdivl
cwtl
sldt
cmp
adc
pop
mov
int3
xor
imul
lea
mov
mov
xor
sub
scas
lds
inc
in
mov
dec
arpl
cmp
ffree
jns
int3
mov
out
mov
test
add
xchg
mov
xchg
jp
sbb
cwtl
xchg
dec
dec
repnz
or
inc
xchg
mov
jbe
push
fldenv
cmc
sbb
xorb
mov
insl
dec
pop
dec
lds
mov
pop
jae
pop
mov
dec
aam
fmul
jp
fsubs
jge
xor
ds
movsb
xor
ret
sbbb
xor
or
mov
pop
sti
dec
or
cmpsl
int3
mov
jbe
xchg
jb
div
xor
inc
xor
mov
xchg
inc
xchg
inc
scas
js
sub
jae
fbstp
push
adc
adc
add
ss
xchg
xor
scas
xor
loop
mov
cmp
rcl
fdivl
lcall
aam
data16
pusha
adc
mov
jl
sbb
push
mov
in
pop
test
shl
cltd
pop
mov
aad
xchg
adc
out
cmp
mov
xor
pusha
cmp
jle
push
bound
or
xor
stos
ret
stc
stos
jle
add
sub
loop
rclb
lds
cmc
ss
std
js
inc
xor
fsubl
xchg
mov
bound
cld
stos
lret
testl
jo
sub
mov
jg
addr16
lods
and
ja
mov
xor
fs
leave
out
test
aas
dec
cmp
shrl
ret
int
fiadds
xlat
ficompl
lea
inc
test
xchg
jg
pop
add
stos
jns
push
shrl
inc
loope
mov
add
jmp
stc
or
inc
pop
frstor
fmull
xchg
test
and
enter
jns
mov
lcall
sub
mov
test
sub
cmpb
push
cli
pop
sti
mov
orb
arpl
sbb
imull
sub
iret
dec
push
mov
mov
lahf
jne
in
lahf
add
xor
jg
aas
loopne
push
xchg
inc
testl
mov
xchg
ret
sti
stc
std
xchg
mov
popa
push
adc
pop
imull
insb
inc
loope
pop
mov
ljmp
inc
outsb
push
xor
inc
jecxz
sbb
lea
lods
ljmp
mov
mov
xor
in
jb
push
fildll
fidivl
in
sbb
push
cltd
pop
idiv
cld
les
or
dec
aas
sbbl
add
cmp
leave
dec
jp
mov
xlat
push
jb
dec
mov
xchg
push
add
popa
xchg
mov
popf
adc
jns
adc
jge
scas
inc
in
lea
loop
cmpsb
hlt
jno
xchg
mov
imul
test
daa
lcall
push
xor
fidivrs
cs
sbb
data16
leave
pusha
imul
pop
sub
cwtl
push
outsb
jge
cmc
dec
mov
mov
popa
pusha
loope
stos
leave
jnp
sbb
fisubs
push
leave
into
cmp
mov
fdivrl
jnp
fwait
aas
sub
jbe
rolb
repz
lods
cwtl
ljmp
in
clc
arpl
pop
shll
into
or
jb
subl
adc
testl
or
jmp
pop
jno
orb
cmpsb
pop
ds
pop
andb
imul
jge
ret
fmull
jge
mov
mov
gs
test
push
iret
push
inc
add
sahf
jle
dec
shrb
ror
pop
lret
add
imul
cmp
mov
shlb
mov
push
xor
cmpl
in
pop
sub
mov
push
xchg
in
sub
insl
add
bound
mov
lahf
dec
adc
lea
lods
lahf
adc
xor
inc
clc
jno
sarl
roll
push
das
mov
rcl
adc
iret
gs
xchg
dec
pop
pop
dec
jmp
mov
pop
test
xor
push
aas
mov
add
xchg
lock
xchg
push
das
sbb
cld
into
fnstsw
fwait
outsb
xchg
fdivr
fwait
push
or
jbe
sbb
ja
push
aad
decb
loopne
and
shll
repnz
or
ret
mov
inc
adc
mov
sbb
std
outsl
jmp
rol
outsl
add
cmpsl
inc
stc
pop
les
cmpsb
cmp
stos
das
mov
inc
shrb
fsubrp
mov
xchg
and
ljmp
dec
imul
xchg
out
movsl
int
out
gs
daa
int
cmp
enter
popf
mov
repz
or
mov
xchg
hlt
push
sub
and
pop
call
ret
fldt
push
inc
imul
sbb
adc
incl
mov
dec
cmp
xchg
pop
mov
dec
push
fs
loop
lods
fs
add
add
cld
mov
dec
inc
icebp
in
dec
popa
stos
xor
mov
sbb
lock
and
aam
cmp
jae,pn
loopne
push
ret
ds
lods
mov
sub
add
mov
insb
cmc
fs
xchg
test
or
sbb
sub
pop
jmp
arpl
mov
dec
inc
adc
jp
jb
xchg
out
mov
pop
aas
ss
lret
pushf
cmpsl
mov
out
dec
jp
push
push
fstps
cld
iret
lods
iret
fildll
dec
andb
push
aad
jg
jge
push
sbb
ret
xlat
or
xor
dec
inc
js
es
ret
ret
adc
lret
nop
movsl
xchg
jecxz
mov
push
add
fcoms
mov
mov
fisubrl
iret
sub
mov
jnp
fstl
mov
popa
jp
dec
push
jne
lods
lods
jbe
ud2
pushf
mov
add
int
sahf
rorb
imull
outsb
push
pop
mov
ficoml
push
cmpsl
add
rorl
cmpsb
xchg
pop
and
mov
cld
push
sbbb
add
ss
loop
jne
sbb
push
or
push
insl
arpl
pop
xchg
adc
cmpsl
jb
fistpl
xlat
jns
xor
mov
xchg
mov
mov
mov
mov
jecxz
dec
mov
push
ret
and
loop
mov
shrb
add
subb
leave
sti
jge
fs
lret
gs
inc
out
pop
xor
jns
jne
or
sbb
aas
je
loop
sbb
or
push
incb
mov
xor
sub
lahf
ret
loopne
stos
mov
bnd
xor
pop
into
lock
in
neg
mov
sbb
insb
leave
orl
mov
addr16
mov
stc
xor
mov
insb
mov
jmp
pop
movsl
xchg
test
in
fstpl
lock
loope
xchg
jae
pusha
rcrl
add
cld
jp
test
xchg
inc
adc
popa
bnd
pop
add
mov
out
jae
std
sub
jne
dec
mov
outsb
and
outsb
push
movsl
pop
jge
aaa
imul
jnp
lret
xchg
fwait
int3
pusha
jbe
dec
je
les
pop
push
cmpsb
mov
enter
leave
or
push
or
insl
pop
xchg
push
shll
sarl
cs
cwtl
mov
sbb
xor
out
hlt
lret
mov
push
push
cli
dec
jle
movsb
enter
movsl
cmp
cmp
dec
jge
aas
push
and
dec
cld
shlb
scas
inc
jnp
loope
dec
adc
push
pop
jo
lds
mov
ja
mov
jg
mov
mov
and
flds
adcl
sub
cmp
cli
pop
add
repnz
aad
sub
lods
sbb
xchg
and
sub
testb
or
mov
add
sbb
and
push
jb
test
jae
sub
mov
addr16
pop
mov
or
jbe
cmp
js
mov
ret
adc
mov
mov
sub
jecxz
lret
push
fadds
leave
clc
lods
lock
shlb
adc
shrl
xchg
ficomps
dec
es
mov
call
mov
leave
cmpsl
lret
xor
xorl
mov
inc
or
sub
jo
ja
push
sub
pushf
shl
sarb
adc
cmpsl
insb
repnz
push
into
popa
dec
push
mov
add
lret
lret
push
int3
mov
dec
ficoml
daa
jnp
mov
mov
xor
or
jle
imul
push
out
pop
jbe
pop
add
jp
and
loop
dec
pop
sub
xchg
pop
cmp
push
dec
jp
insl
aaa
test
subl
jmp
insb
ss
psubb
test
das
int3
jbe
push
cwtl
cld
cmp
mov
out
mov
decl
sbb
in
addr16
push
mov
and
push
mov
lea
inc
mov
inc
ret
lds
andl
cmpsl
lahf
scas
xlat
push
adc
sub
test
and
xchg
add
mov
orl
push
sbb
hlt
jmp
pop
shl
mov
inc
mov
clc
jmp
ja
sahf
xchg
jmp
add
movsl
push
jo
ret
popa
minps
mov
jecxz
cli
pop
fidivrs
shlb
rol
adc
mov
test
out
movsb
shll
int3
sub
pop
fsubp
hlt
mov
dec
mov
mov
fdivs
sub
loop
inc
mov
push
sarb
sbb
test
push
push
jmp
test
xchg
repnz
xchg
jnp
pusha
imul
inc
cli
jnp
pop
or
data16
add
mov
fistpll
hlt
arpl
cmp
sub
fimull
mov
or
les
mov
push
inc
es
jp
inc
lds
aam
xor
sbb
mov
ror
cmpsb
or
test
lea
stos
mov
aas
sarl
int
dec
cmpsb
mov
mov
push
fiadds
adc
and
add
push
sbb
clc
test
push
shlb
xlat
mov
push
test
stos
fimull
cwtl
mov
and
mov
mov
scas
push
filds
mov
mov
mov
mov
cmp
mov
push
cli
xlat
lea
or
xor
pusha
je
dec
xchg
add
jle
pushf
dec
mov
push
push
mov
dec
pushf
divb
jnp
jno
sarb
mov
xor
cld
enter
pop
sub
cmp
cmc
sarb
icebp
inc
jne
mov
lods
mov
mov
jmp
andl
sbb
push
in
sbb
fwait
in
jae,pt
mov
inc
sti
bound
dec
or
clc
ljmp
mov
inc
pop
xchg
adcb
iret
add
or
mov
jecxz
arpl
xor
sub
mov
mov
ss
xchg
jo
fsubrs
cmp
or
dec
inc
sbb
cmp
mov
push
cmpsb
sarb
mov
ljmp
sub
adc
xchg
sub
mov
iret
xor
out
xchg
adc
push
insl
add
stos
mov
push
ud0
or
mov
xor
imul
test
dec
cld
jecxz
adc
bound
or
out
mov
dec
fwait
in
imul
push
xor
outsb
jg
lret
loopne
mov
inc
sub
inc
jno
push
imul
mov
jns
call
movsl
jbe
cmpsl
mov
hlt
scas
imul
push
inc
sbb
push
arpl
imul
jge
mov
mov
lret
outsb
add
inc
cmp
cld
xchg
stos
jecxz
in
shlb
out
and
je
scas
jp
lret
or
push
push
mov
cmp
sbb
xchg
imul
mov
cld
xchg
xchg
test
pop
lret
mov
and
jp
xor
and
ds
test
inc
mov
loope
insl
push
mov
test
shlb
lock
icebp
jle
daa
inc
pop
push
pop
js
imul
jb,pn
push
push
mov
dec
mov
inc
sub
call
enter
mov
cmp
pop
ret
negl
lcall
nop
ds
push
adc
jl
cli
push
aas
inc
sahf
aaa
popa
fwait
das
gs
and
dec
xchg
and
xchg
aas
cmp
or
test
frstor
push
inc
add
cmpsb
push
stos
out
xor
push
movsb
repnz
outsb
cmpsl
test
mov
or
cmp
fimull
repz
ret
sbb
je
push
fimull
fucomi
mov
push
repnz
add
fwait
testb
sub
fdivrp
fiadds
push
mov
inc
jnp
out
jecxz
inc
dec
pop
lea
cmp
jae
ljmp
pop
je
shlb
pusha
int
sti
mov
fbstp
push
mov
fcoml
inc
add
mov
test
mov
aaa
inc
cmp
mov
ret
divb
or
mov
pop
stos
dec
cmp
mov
pop
push
mov
call
push
incl
sbb
xor
aas
jmp
rcrl
mov
aam
in
cmpsb
cmp
inc
aaa
pop
sbb
dec
lock
and
addr16
push
xchg
imull
ja
push
hlt
push
out
inc
lret
xor
repz
cwtl
lea
jle
jno
outsl
push
sub
mov
jl
arpl
jmp
xchg
fwait
cs
cmp
sbb
and
inc
sub
push
pop
mov
pop
int3
stc
cmpsl
xchg
xchg
out
sub
lcall
mov
inc
mov
test
xchg
ds
mov
sbb
clc
lods
jo
rcr
jno
jl
jecxz
add
shll
cmc
ret
les
add
lods
xchg
mov
sbb
cmp
out
cmpsb
movsl
xchg
xchg
rcl
mov
mov
add
pop
cmp
xchg
fadd
xchg
push
and
cmp
out
dec
push
lahf
imul
aaa
mov
inc
mov
mov
mov
mov
pushf
scas
arpl
sub
xchg
lods
test
fs
mov
add
jb,pn
xlat
addr16
dec
std
cmp
inc
mov
mov
bswap
sbb
fisttpll
push
inc
jmp
push
and
lret
inc
mov
or
test
push
js
cmpb
sbb
shrl
xchg
mov
sahf
arpl
mov
stos
add
movsl
fistpl
add
pop
xchg
xchg
out
lea
inc
cmp
outsb
jecxz
push
jb
xchg
addr16
mov
adc
pushf
mov
xchg
push
sub
push
inc
and
scas
div
xor
mov
jnp
mov
add
test
sub
xchg
in
je
out
and
daa
xor
cmp
stos
push
addl
lds
mov
jl
stc
cmp
mov
bound
and
nop
inc
shufps
pop
or
negb
sbb
loope
mov
cmp
fs
insl
pop
jle
inc
jge
mov
or
lret
adc
cmpsb
aam
xchg
xlat
pop
std
push
and
in
lret
rcll
mov
lret
inc
push
push
xor
movsl
loope
stos
popa
out
cmpsl
divl
pop
jl
nop
dec
or
mov
lods
and
mov
out
call
xchg
mov
sub
addr16
mov
add
test
xlat
in
inc
mov
jns
shl
push
push
call
mov
lret
xor
insl
jno
sbb
mov
cmp
scas
mov
es
fsubl
sbbb
divb
call
in
jae
pop
into
hlt
ja
fistpll
xchg
inc
test
lock
add
xor
popa
xchg
lcall
into
or
jns
ud1
adc
arpl
push
xchg
loopne
addr16
cmp
pop
loope
push
add
les
add
outsl
hlt
loopne
or
cmp
mov
mov
or
cmpsb
mov
and
or
mov
and
xor
jns
xchg
dec
add
cmp
lcall
push
loopne
jl
cmpl
lods
data16
es
push
sub
xchg
pop
cmc
shrb
inc
mov
mov
jne
out
mov
incl
inc
push
test
and
or
pop
xchg
fdivl
int
inc
push
add
jp
cmp
jne
cmp
sub
sarb
cmp
mov
mov
in
repnz
pop
dec
testl
inc
sub
inc
adc
leave
cvtpi2ps
inc
and
rcll
cmpl
cmpsl
jns
push
pop
jnp
adc
pop
pop
pop
dec
shrl
xlat
cwtl
fildll
imul
mov
mov
or
mov
cmc
cmpb
jbe
cmp
add
sub
and
fnsave
leave
adc
aaa
inc
in
or
call
fsub
or
cmpl
lock
jmp
lea
sub
sub
mov
std
scas
pop
in
aad
cltd
sub
jl
fdiv
cmp
mov
int3
pop
add
call
push
adc
addr16
add
fwait
cwtl
xchg
jge
dec
inc
das
and
dec
les
in
or
jbe
adc
cs
dec
xchg
lret
aaa
push
jge
add
xor
cwtl
push
je
jne
jnp
popf
call
loope
fnstsw
inc
test
shrl
jp
mov
adcl
cmp
lret
rol
inc
pop
insl
or
mov
iret
inc
inc
jmp
dec
scas
cmc
dec
cmp
or
insb
sub
push
aaa
sarl
and
jne
in
inc
inc
test
stc
push
inc
test
aam
push
push
lret
je
sbb
shl
push
fildll
push
out
fcmovnb
adc
adc
sub
pop
es
sub
dec
mov
and
outsl
out
push
lock
push
pop
mov
sub
out
aaa
mov
cmp
mov
leave
iret
xchg
insb
push
cmp
pop
mov
cmpsl
ret
sub
sub
aam
shlb
aaa
test
dec
jns
inc
sub
in
adc
push
jle
enter
icebp
fidivrl
jno
fnstenv
add
rclb
cmpsb
push
ja
scas
or
push
xchg
jl
cmc
fcompp
and
pushf
add
movsl
les
test
push
sarl
leave
shl
scas
cmpl
dec
test
jb
or
ja
icebp
bound
mov
lea
or
add
pop
sbbl
cmp
xor
std
mov
dec
or
sbb
rcll
bound
out
mov
xor
pop
rorb
mov
jo
popf
adc
mov
and
icebp
nop
mov
pop
es
ljmp
push
dec
or
add
xchg
jecxz
aaa
mov
sub
shl
outsl
test
mov
movaps
dec
mov
fists
sub
insb
xchg
mov
push
push
gs
mov
inc
or
je
ja
mov
es
pusha
xchg
or
jno
jne
imull
mov
dec
xor
push
in
push
loop
aam
repz
jnp
into
ret
addb
jecxz
cli
pop
orl
add
push
les
pop
dec
aad
jns
mov
mov
dec
lods
mov
push
jg
mov
outsb
xchg
mov
pop
mov
test
stc
es
mov
mov
or
sbb
ljmp
adc
rolb
das
adc
aaa
and
xor
scas
dec
fcomi
dec
sbb
fistps
jge
into
stc
sbb
rcll
inc
mov
mov
pop
lret
fsts
cld
push
cwtl
add
sbb
hlt
ret
pop
and
jge
push
xchg
int3
lahf
or
mov
or
xor
mov
popa
xchg
and
sbb
imul
add
out
inc
ret
xchg
stos
hlt
lods
fildl
and
outsb
cmovle
jge
jnp
adc
pop
xchg
pop
mov
adc
or
sub
pop
push
lcall
mov
jmp
xlat
icebp
dec
fwait
mov
mov
aaa
xor
jl,pt
in
adc
movsl
jmp
xchg
push
inc
mov
push
test
mov
or
test
mov
push
adc
into
stos
loop
xchg
xor
add
movsl
mov
push
jno
shll
sahf
imull
xor
jae
je
xor
mov
test
add
movsb
xchg
mov
add
inc
sub
std
cmp
and
iret
clc
fistpll
sbb
mov
mov
dec
ror
in
orl
push
outsl
pop
mov
add
ljmp
pop
jae
cmp
fwait
add
pushf
push
adc
mov
jno
adc
push
and
shrb
std
test
gs
outsb
lods
sahf
mov
cmp
aaa
notb
mov
and
xchg
mov
xor
xchg
test
lods
cmp
test
std
jle
lret
pop
dec
cmp
mov
adc
ret
aad
imul
sti
lods
pop
fadd
jo
inc
rcrb
sub
adc
lods
pop
xor
add
sub
int3
dec
sub
shl
pop
mov
xor
and
ja
mov
xchg
sbb
mov
add
fwait
out
fsubr
loope
sub
lods
sub
jp
mov
push
loopne
or
pop
and
sbb
mov
dec
cmp
dec
mov
aas
or
jnp
mov
aas
out
adc
push
pop
fists
dec
lods
mov
pop
mov
xor
push
popf
mov
xlat
lcall
je
test
dec
es
adc
add
clc
lret
inc
cltd
lret
repnz
mov
mov
or
mov
cmpsb
aas
jne
les
jnp
dec
push
or
mov
clc
jo
lock
out
dec
loop
lods
jae
dec
fwait
fwait
and
lea
jl
cld
mov
inc
xchg
repz
lcall
sbb
cmp
sub
out
add
call
mov
inc
jo
jae
cld
das
or
sbb
push
outsl
shlb
push
mov
jge
ja
in
xor
sbb
out
inc
push
mov
cmpsb
je
sub
lahf
xchg
loopne
icebp
in
pop
adc
jg
pop
mov
mov
fdiv
fwait
stc
imul
loop
fmuls
mov
mov
pushf
lea
mov
add
inc
adcl
imul
movsb
arpl
in
push
divb
lea
mov
lds
outsb
in
mov
jecxz
add
test
imul
fmuls
cmp
xchg
add
inc
out
adc
cmp
or
sub
mov
orl
lds
icebp
sbb
mov
jo
aam
jb
hlt
out
cmpsb
in
sbb
insl
outsb
inc
sbb
test
ss
loopne
pop
pop
mov
out
fsub
pop
mov
cmp
pop
add
inc
clc
movsb
and
dec
add
test
inc
pop
and
mov
js
sub
fidivs
mov
int
out
scas
lea
add
jno
gs
rol
and
lret
out
outsl
popa
in
cli
loopne
add
inc
fwait
stos
mov
fistps
or
sbbb
dec
add
shlb
xchg
xor
mov
push
sbb
test
mov
outsl
add
dec
aas
pop
push
sti
jb
xchg
js
testl
enter
mov
mov
add
xor
jo
jl
push
dec
movsl
mov
fs
mov
inc
add
nop
mov
xor
mov
jno
and
dec
sub
addr16
inc
mulb
push
mov
movsl
mov
sub
jo
xchg
dec
lock
add
jecxz
daa
out
push
lock
add
sarb
in
push
dec
pop
ret
cmp
sub
mov
testl
mov
add
xchg
je
adc
sub
cmp
sti
dec
cmp
ja
mov
mov
das
int
leave
out
push
test
jge
push
ljmp
pusha
mov
adc
loop
aas
xchg
push
fmull
mov
xor
inc
push
mov
adc
sub
out
ret
push
pop
cli
or
sbb
add
mov
or
aaa
mov
cld
mov
mov
mov
je
push
shl
les
sub
rcrl
push
movsb
xor
stos
test
mov
jg
js
cmpsl
fs
xlat
mov
adc
jo
push
rcr
adc
sti
repnz
xor
loop
lahf
xor
loop,pt
je
orl
outsl
mov
ss
mov
clc
std
iret
loope
add
and
add
inc
cmp
mov
sti
cmp
pushf
in
pushf
jno
lcall
lds
loop
push
aas
sub
xor
ret
shl
xor
ljmp
push
inc
movsl
das
sysexit
pop
test
cmpsl
in
inc
testl
outsl
pop
cmp
sbb
lods
inc
call
popf
test
addr16
or
pop
sbb
popa
mov
xchg
jmp
mov
or
out
sbb
loop
call
push
sub
scas
push
into
movsl
and
inc
ljmp
adc
adc
pushl
cmp
add
lock
push
pop
inc
decb
xchg
mov
nop
es
pop
lcall
sti
cmp
mov
inc
fdivrs
dec
xchg
pop
cltd
in
lret
push
rcll
push
cwtl
filds
cmp
std
xchg
ja,pn
sbb
xchg
ret
inc
sbb
insb
xchg
push
pusha
pop
nop
mov
mov
mov
mov
and
pop
stc
add
stos
mov
pusha
leave
xchg
in
out
hlt
sub
cmp
popf
loopne
mov
lock
and
ja
sub
test
pushf
orl
mov
test
add
add
aam
cltd
insb
pop
nop
xor
fcomip
mov
or
lret
pop
sub
cltd
or
bound
fwait
and
fisubs
push
jle
js
sti
cmp
sub
mov
mov
je
mov
jne,pt
out
outsl
or
lcall
pop
fcomps
pop
mov
lcall
dec
cli
mov
cmp
and
repz
dec
invd
sbb
xor
jbe
ficoml
mov
xchg
in
es
sarb
mov
cmp
jmp
pop
test
xor
mov
mov
mov
jo
cmpb
mov
scas
scas
insl
xchg
iret
sahf
adcl
jge
arpl
adc
int3
cmpsb
roll
mov
js
inc
xor
mov
test
or
jae
sbb
sub
add
mov
pop
push
loope
mov
iret
test
xor
rcr
mov
dec
dec
fnstcw
push
and
mov
in
imul
inc
insl
out
out
insl
mov
movsb
loopne
jnp
loop
test
mov
leave
jb
dec
enter
data16
dec
adc
aaa
pop
arpl
add
xchg
ret
dec
int3
imul
repnz
sbb
mov
push
mov
jo
dec
xchg
ja
pop
push
popf
adc
movsb
xor
loop
or
fisttpl
jo
aad
jl
adc
xchg
lods
mov
xor
push
fisubs
mov
and
sbb
popl
jge
in
and
rcrl
popa
xchg
adc
xchg
aam
rol
jecxz
fnstcw
mov
dec
enter
xor
icebp
push
clc
lods
mov
push
stos
jecxz
jle
lahf
popa
pop
cmp
and
outsl
inc
jge
cmpsl
sbb
ja
shlb
pavgw
shll
iret
push
add
push
sbb
sahf
insb
test
cwtl
and
in
dec
pop
insb
jo
adc
push
gs
xchg
push
mov
cmp
daa
lock
pop
jge
sub
mov
cmp
les
push
lds
imul
dec
xchg
inc
dec
and
lret
or
xor
dec
repnz
and
jecxz
test
pusha
or
sbb
sbb
dec
test
mov
aad
xor
pop
sbb
cmp
pop
nop
xor
outsb
pop
and
ja
jns
insb
fnstcw
je
jl
pop
cmpsl
int3
insb
sbbl
inc
sti
pmaxsw
mov
push
lret
mov
sbb
add
dec
and
jno
cli
add
leave
xchg
push
negb
xor
cmpsb
nop
and
mov
std
sti
mov
jb
scas
rcll
hlt
jl
insl
push
xchg
cmp
dec
fucom
add
rcr
aad
repz
das
js
mov
and
test
sbbl
sbb
ds
push
adc
adc
or
and
mov
test
test
push
and
test
lret
in
mov
pop
push
xchg
jecxz
mov
ja
out
mov
icebp
cmpsl
mov
mov
sbbb
xchg
sub
test
xchg
mov
pop
ret
lds
adc
and
jne
and
sub
in
int3
mov
mov
jl
es
shll
fstl
cmp
pop
test
out
sub
mov
dec
and
or
and
notb
xor
or
bound
push
push
call
aad
sub
popa
add
cli
in
pushf
or
ret
inc
loop
mov
fcmovnu
in
adc
xor
push
xlat
xor
mov
nop
jnp
out
cltd
jno
add
xchg
popf
lahf
push
into
cld
icebp
pop
in
mov
pop
jg
dec
subl
dec
sub
jno
cmpsb
xchg
xor
mov
inc
pushl
ret
sub
cmc
sub
pop
andb
std
testl
es
icebp
mov
pop
mov
mov
and
sbb
mov
and
lcall
pop
jno
mov
inc
loope
aas
sub
push
sbb
data16
mov
subb
nop
ds
ds
cmc
xchg
cld
inc
xlat
jb
fsubrs
jle
cmp
cmp
fadd
jmp
sarl
inc
daa
dec
mov
aaa
lret
cmp
loopne
mov
leave
pop
xchg
xchg
xchg
cmpsb
fildll
inc
add
and
out
js
mov
jg
loopne
dec
jbe
mov
add
int
icebp
push
clc
cmp
add
fadd
mov
mov
inc
inc
repnz
aad
lock
pop
test
lret
jae
into
pushf
jl
out
add
addr16
push
lods
addb
in
and
cltd
mov
enter
leave
mov
xor
sarb
and
jno
mov
pop
test
jmp
inc
insl
mov
mov
popf
jmp
mov
mov
jbe
mov
mov
mov
mov
lods
or
sahf
push
fs
ss
fs
ret
pop
outsb
dec
call
xor
jb
jecxz,pn
in
add
pop
add
adc
jno
mov
shl
mov
add
subl
test
cs
cmovge
or
xchg
inc
push
dec
xchg
repz
ret
jmp
lahf
dec
or
outsb
out
and
repz
lret
pop
add
mov
mov
mov
ret
fimuls
fstpt
jne
scas
cmp
repnz
cmp
mov
in
int
xchg
xor
mov
movsb
pop
or
nop
adc
out
movsb
popf
pusha
sub
lods
push
out
out
ret
pop
mov
dec
pop
add
dec
dec
push
fstpl
jecxz
test
jecxz
in
xor
push
xchg
js
mov
fnstcw
cli
pop
adc
xchg
idivl
dec
in
pop
xchg
sarb
cmpsb
push
cli
sbb
sub
and
mov
pop
mov
pop
and
das
or
dec
xor
popl
nop
das
xor
add
and
es
fdivrl
push
xchg
push
xor
iret
cmp
mov
imul
mov
jp
sub
sub
scas
out
lods
xchg
inc
or
sarl
jmp
dec
xchg
xchg
pop
add
jns
popa
sbb
aam
adc
jno
jne
cmp
xchg
xchg
sysret
ss
pusha
adc
hlt
ljmp
lds
mov
xchg
mov
nop
dec
cmp
rcrl
jb
or
stos
mov
push
xor
fildll
xor
or
sahf
shlb
cmp
pop
mov
rcrb
sti
xchg
jno
xlat
sbb
jge
mov
mov
lods
shr
add
or
sub
or
stos
les
stc
or
data16
add
cld
add
fdivl
dec
call
or
lods
add
push
jns
jae
out
add
mov
ds
je
stos
bound
std
aas
out
ret
and
inc
mov
cmp
sub
shrb
dec
push
lods
clc
and
sub
int3
cmp
inc
jae
jo
push
cmp
shll
and
jne
shll
shll
outsb
fnstsw
xor
or
stos
sub
aaa
iret
icebp
loope
aad
adc
push
imul
mov
inc
mov
push
dec
icebp
sub
cld
lahf
filds
dec
adc
mov
in
aaa
inc
rcrb
das
fxch
lock
insb
xor
aaa
xor
jne
xchg
and
call
pop
xchg
and
jo
sub
scas
xorb
xor
insb
mov
and
rorb
daa
rorb
outsl
mov
xor
cld
and
push
inc
mov
shlb
and
xor
fsubrl
stos
mov
pop
stc
andb
sbb
repnz
sti
or
and
dec
cmp
pop
xlat
mov
inc
push
outsb
dec
mov
stos
xor
cmpsb
decb
xor
flds
std
adc
sub
mov
scas
pusha
push
jecxz
jne
shrl
aaa
adc
jns
daa
pushl
sub
mov
je
adcb
sub
mov
push
in
inc
cmp
insl
js
ss
adc
in
fistpll
push
xor
fmuls
jecxz
pop
lret
enter
adc
and
cs
sbb
scas
xchg
stc
scas
inc
shl
mov
push
push
sahf
shl
gs
dec
rol
and
dec
cmp
leave
inc
dec
fwait
add
sbb
xchg
dec
rclb
mov
insl
mov
push
add
push
xor
mov
sarb
xlat
lock
push
scas
dec
cmp
mov
mov
cli
repnz
jo
movsl
inc
rolb
iret
jnp
mov
xchg
push
jns
jb
add
adc
inc
xchg
pop
pop
cmp
jge
and
mov
pop
xor
or
hlt
mov
mov
cmpsl
insl
xchg
scas
mov
mov
lds
je
pushf
pop
push
dec
fsub
push
loopne
mov
out
loope
add
leave
lea
xchg
xchg
xchg
insb
repnz
sub
in
or
adc
mov
cmp
clc
out
and
push
insl
sub
leave
jbe
movl
cli
jae
dec
adc
stos
mov
dec
nop
inc
sahf
aad
xor
mov
dec
pop
jle
xchg
push
les
mov
cmp
mov
jmp
adc
push
inc
pop
mov
dec
mov
add
adc
fisubl
mov
and
in
jmp
repnz
ficompl
jne
or
adc
sti
insb
push
out
add
mov
push
addr16
jmp
clc
add
mov
mov
pushf
stos
nop
sbbl
popa
xchg
pop
pop
pop
dec
fcoms
xchg
push
cmp
or
pushf
adc
gs
aaa
js
push
xor
cmp
or
mov
xlat
xor
mov
out
loopne
jb
lret
js
push
pushl
adc
pop
fdivrs
sti
cmp
jo
in
dec
out
xor
push
aam
xchg
sub
dec
pop
es
test
dec
fidivl
fisubrl
mov
sub
inc
xchg
mov
lods
fadds
dec
out
jl
ljmp
fmul
jp
in
sbb
sbb
jle
cmp
add
push
mov
add
pop
insb
mov
mov
loopne
mov
hlt
jns
cmpsl
pushf
or
push
fldenv
cmp
push
push
and
jns
lcall
dec
repz
movsl
mov
int
loop
hlt
rorl
mov
movsl
dec
push
cmp
fstl
repnz
pushf
push
lock
cmpsb
ret
fs
jbe
xor
fsubs
add
adc
cmpsb
movsl
into
mov
and
inc
mov
rcl
pop
inc
sub
idiv
inc
int
cmp
sub
clc
push
push
repnz
movsb
clc
icebp
popf
ficoml
lahf
xlat
scas
pop
cltd
stos
cmp
jno
in
repnz
lods
test
mov
jno
push
out
pop
fstpl
rorb
sarl
add
mov
mov
popf
and
std
sbbb
push
repz
cmpsb
inc
adc
daa
sbb
sub
ja
negb
sbb
int3
test
pop
push
xor
cwtl
ljmp
sahf
out
rorl
add
or
aas
loope
xchg
fwait
and
ljmp
adcl
mov
jp
imul
add
ss
mov
pop
jle
jae
dec
push
or
cmpsl
mov
scas
mov
push
cld
lret
mov
add
dec
pop
ss
loopne
subl
rcll
imul
cmp
int
fisttpll
pop
cli
in
mov
stos
sbb
sbb
cmc
imul
sub
out
jecxz
test
sub
pop
rcll
and
adc
rorb
and
pop
lds
jge
shrb
xchg
inc
stos
mov
hlt
scas
aad
pop
ds
clc
out
add
xchg
decl
lcall
xchg
and
out
pop
popa
cmpsb
test
push
shr
mov
outsb
out
faddl
addl
es
mov
or
mov
xchg
pop
and
sbb
cld
inc
aas
xor
mov
aam
inc
dec
loope
fdivs
sbb
jl
dec
add
inc
test
insl
faddl
mov
xlat
sub
and
mov
add
rclb
jge
inc
push
dec
pop
iret
mov
outsb
pusha
cmc
push
sbb
scas
enter
xchg
lock
enter
mov
das
cs
nop
or
mov
btc
cmp
mov
fmull
pop
or
cmpl
pusha
sar
jmp
aas
pop
loope
das
je
push
cmp
outsb
dec
pop
mov
pop
add
mov
fnstsw
xlat
idiv
push
nop
mov
mov
push
ja
dec
cmp
cmp
into
movsb
adc
shlb
aam
push
dec
js
jp
xchg
mov
arpl
scas
sbb
aaa
sbbl
push
adc
daa
icebp
add
jmp
sbb
dec
inc
rclb
push
and
das
pop
inc
dec
es
gs
mov
jle
dec
je
cmp
or
jl
push
sub
xchg
das
push
hlt
clc
inc
addr16
sahf
mov
int3
sti
adc
pop
and
cs
cmp
dec
std
mov
lcall
scas
fsubl
arpl
test
shll
add
es
js
test
stos
lods
jmp
sub
out
add
fldlg2
lea
mov
jg
jae
into
pop
scas
cltd
mov
push
pop
idivl
xchg
push
jmp
hlt
and
call
and
loopne
xor
push
shl
cmp
pop
inc
hlt
push
arpl
mov
loop
fistl
jmp
dec
push
fsubl
jle
and
and
scas
jg
leave
out
pop
ret
out
outsl
add
aaa
cmp
cmpsb
sbb
adc
add
pop
mov
iret
dec
int3
cli
add
loopne
jmp
leave
xor
jbe
sti
adcb
pop
cmp
xor
lahf
out
lea
mov
mov
adc
lock
mov
mov
or
add
out
loopne
addr16
sub
mov
ficomps
int
dec
push
add
fmulp
cmpsb
push
push
and
int3
clc
fcompl
shl
mov
jp
mov
popa
mov
lods
inc
xchg
in
mov
and
xchg
push
push
rclb
call
jo
sbb
mov
ss
incb
xor
mov
sbb
mov
popf
sahf
dec
xchg
push
push
dec
mov
subb
mov
jecxz
xor
mov
push
push
lods
loope
cmpsl
xor
inc
sbb
insb
jg
mov
mov
stos
lea
push
xchg
inc
jo
fiadds
in
loop
out
pop
lock
jbe
outsw
or
adc
and
cmp
push
test
jl
xchg
xor
cmp
adc
pop
sub
and
fldenv
mov
in
gs
fcompl
or
insb
cmp
push
iret
call
andl
aas
push
cmp
or
cltd
pop
jns
xchg
xchg
in
cmp
mov
jg
pop
sbb
test
cmp
adc
push
into
fisubl
call
clc
jbe
push
cmp
adc
cmpsl
dec
lahf
pop
add
adc
sub
mov
faddl
movsb
sub
out
pop
sub
stos
outsl
sub
pop
imul
cmpsl
lds
lret
xchg
testl
push
in
mov
lods
mov
lret
xor
lret
push
and
sub
imull
and
lock
push
cmpsl
subl
push
xchg
mov
mov
xchg
sbb
cmpl
int
leave
ss
and
rorb
enter
lea
cmp
loopne
or
add
xor
popf
std
inc
sti
ret
mov
push
xor
mov
movsb
or
xor
sbb
mov
push
xchg
pop
xor
dec
and
add
mov
adc
ret
mov
jns
mov
and
push
push
mov
add
push
jp
out
outsb
les
mov
lret
clc
lock
pop
xchg
cwtl
insb
xor
andl
mov
pop
and
ljmp
xchg
lock
push
and
add
jno
mov
stc
ss
loopne
push
pop
mov
mov
iret
lds
cmp
jge
xor
popa
jle
fdivl
adc
scas
fcmove
cmp
repnz
mov
dec
fcompl
mov
push
mov
clc
sbb
mov
mov
mov
incb
xor
add
dec
ljmp
sar
outsb
jg
push
das
std
xchg
add
je
mov
aaa
mov
xor
dec
je
cwtl
jne
in
xor
mov
or
roll
hlt
dec
sbb
sub
push
imul
push
mov
addb
xchg
cmc
push
callw
lret
fstpt
add
cld
imul
test
inc
add
jle
aad
into
and
sti
stos
aaa
xor
xor
sbb
bound
dec
insb
xchg
sbb
dec
mov
adc
ja
xor
mov
movsl
push
das
scas
jns
enter
pop
cmpsl
aas
sub
jnp
add
popa
mov
cmp
pop
pop
lret
aas
sub
adc
rorb
cwtl
mov
pushw
and
stos
aad
sbb
icebp
cltd
clc
cmp
and
cltd
pop
insl
in
aas
lcall
shr
sbb
out
pop
or
scas
jnp
or
popf
lret
push
and
or
imul
push
adc
leave
cmp
orb
add
jne
xorl
ret
stos
aam
or
sbb
cwtl
push
jl
push
and
lret
pop
adc
jecxz
xor
sub
mov
in
xchg
xchg
xor
jecxz
push
stos
xor
dec
loop
bound
mov
hlt
dec
sbb
pop
aad
add
arpl
subl
rorl
xor
imul
cltd
sbb
and
xchg
test
jns
xchg
das
out
jo
daa
xorb
cltd
ret
rcr
xchg
cld
mov
pop
dec
stos
mov
int
jge
lds
lahf
xchg
mov
out
dec
fs
push
sub
push
xchg
add
push
lods
cmp
fstps
fstpl
jae
pop
fidivl
filds
sbb
pop
fdivs
js
pop
mov
out
cmpsb
adc
mov
adc
xchg
or
add
mov
sub
mov
sub
cmp
jno
pop
and
push
lahf
mov
shll
cmp
out
xchg
loope
inc
or
pop
test
scas
lock
fiaddl
arpl
and
adc
aam
cmpsb
mov
test
test
stos
ljmp
aad
jmp
orl
push
into
sbb
adc
cli
push
push
xor
popf
jae
and
mov
ljmp
and
aas
add
mov
ljmp
scas
jg
xlat
xchg
lds
stos
or
leave
xor
inc
clc
das
add
sti
cmp
jle
and
jl
mov
popf
int
pop
andl
ss
jmp
jbe
dec
cmc
mov
xchg
pop
int
cmp
or
pop
add
xchg
cmc
fwait
inc
cmpl
orl
pop
cmc
orb
daa
outsb
sub
jg
ret
insl
jbe
popf
adc
mov
inc
mov
scas
pop
or
mov
inc
jge
in
mov
pop
sub
cmc
pop
rorb
xchg
mov
xor
pop
testb
dec
or
push
and
scas
dec
sbb
scas
push
xor
leave
inc
dec
sbb
add
rol
enter
cmc
cmp
jle
or
pop
mov
repz
mov
sub
xchg
and
daa
jb
jns
int
les
mov
pop
mov
jg
popa
insl
xchg
adc
dec
cld
std
mov
jl
xor
mov
xchg
cmp
std
adc
dec
mov
pop
push
jmp
imul
mov
or
scas
hlt
sahf
xor
pop
inc
cmp
lret
nop
lret
add
jp
inc
shlb
ss
mov
dec
imul
mov
or
inc
outsl
pop
adc
cld
adc
out
into
xchg
out
jae
fmuls
cmp
push
fldenv
loopne
clc
jnp
or
xchg
test
sbb
in
fwait
adc
js
cmpsb
add
fnop
mov
repz
fnstcw
pop
inc
scas
pop
cltd
aas
jmp
leave
sub
fidivs
dec
insb
sbb
mov
outsb
fdivs
mov
mov
hlt
xchg
add
rcrl
jno
xchg
push
sbbl
xchg
jmp
cmpsb
xchg
outsb
ljmp
in
jae
mov
loope
mov
test
jg
cli
fwait
xor
push
loopne
jge
jecxz
push
orl
xor
jl
and
or
dec
sub
fsubl
in
and
test
xchg
dec
cltd
mov
sub
popa
adc
xchg
sti
and
daa
mov
inc
inc
jecxz
idivb
xchg
xchg
dec
test
add
popa
insl
pop
stos
loope
pop
xchg
insb
and
popa
sahf
fbld
aaa
jnp
cmp
cli
adcl
jle
xchg
lahf
das
sbb
adc
enter
movsl
adc
mov
pop
out
pop
dec
int3
imul
mov
int3
es
adc
mov
mov
int3
aad
mov
jge
push
movsl
aas
xor
pop
sub
jbe
test
aam
jp
lods
or
sub
sub
and
loopne
es
push
repz
cmp
mov
mov
insb
pop
lret
pop
adcl
lods
push
mov
or
ss
stos
int
mov
repnz
js
inc
aad
das
jnp
add
sub
hlt
dec
adc
imul
pop
testl
sbb
add
stos
rcrb
mov
push
je
leave
cmp
cli
addr16
stos
push
push
xchg
shll
mov
daa
lods
nop
lods
pop
insl
mov
push
shll
jae
mov
mov
lret
mov
cwtl
push
testl
inc
cmpsb
jne
jg
lcall
idivl
das
mov
shr
or
mov
dec
les
pop
lcall
test
aas
cmp
mov
mov
mov
mov
adc
repnz
fdivs
pop
cltd
jp
sub
mov
inc
sbb
xchg
fwait
mov
xor
xor
mov
and
push
loopne
dec
cmp
mov
mov
repnz
nopl
sub
adc
mov
push
jp
or
add
je
push
xor
mov
outsb
pop
push
ljmp
mov
outsl
xor
dec
xchg
mov
adc
push
lods
sub
push
pop
addr16
xchg
call
jne
sti
lcall
nop
and
or
iret
xchg
rcrb
push
sub
and
or
and
sub
mov
rclb
mov
add
jge
cwtl
pushf
xor
ja
mov
mul
and
scas
stos
loop
pop
jae
xchg
add
mov
inc
sub
les
pop
xchg
cmp
jl
daa
stos
inc
das
movsb
rcll
lret
mov
push
js
adc
mov
mov
mov
jnp
sub
lods
mov
jecxz
std
add
xor
cwtl
outsl
pop
inc
mov
sub
lahf
and
cmp
repz
bound
ds
inc
int3
lret
fadds
xchg
shrl
jge
push
loopne
cmp
dec
icebp
push
stos
add
or
lret
fsubs
aam
sti
lds
js
addr16
cltd
repz
lahf
clc
ja
cli
cmc
movsl
out
out
mov
jnp
icebp
pusha
ja
mov
out
andps
jo
jnp
into
jae
push
cmpsl
leave
rorl
testb
mov
aam
lcall
adc
out
aad
cmp
js
aad
pop
pop
add
mov
mov
movsl
xchg
jmp
adc
inc
aas
add
shrl
sub
lds
addb
test
icebp
outsl
ret
in
inc
outsl
or
mov
mov
jbe
push
scas
mov
into
pop
mov
rclb
lcall
sub
test
hlt
orb
hlt
nop
out
lods
jg
jbe
stos
inc
or
pop
leave
jle
dec
ljmp
pop
lods
clc
mov
sbb
push
or
jb
les
cmp
sbb
cwtl
xchg
cmp
lods
push
repz
and
fistpll
xchg
stos
xor
pop
fdivrl
ja
xchg
jae
xchg
cli
push
ret
popa
clc
jge
pop
mov
js
add
dec
mov
mov
arpl
imul
in
mov
les
mov
pop
outsl
push
les
adcl
mov
and
and
cwtl
mov
popf
sub
adc
push
popaw
sub
ss
mov
out
inc
pop
pushf
mov
add
sbb
aam
xor
setb
bound
inc
hlt
dec
jmp
mov
outsl
adc
xor
push
call
cmpsb
or
and
scas
push
sub
lcall
outsl
adc
jle
mov
push
mov
paddusb
jecxz
dec
mov
pop
pop
imul
push
and
jle
fstp
fadd
frstor
jmp
and
dec
stos
sbb
xor
pminub
jne
sub
mov
mov
sub
lds
inc
test
push
adc
inc
adc
pop
or
jae
sbb
jl
stos
jb
iret
fs
fsts
sbb
ret
pop
pop
icebp
repz
push
push
aaa
inc
cmp
leave
jmp
adc
rolb
sub
xchg
sub
sti
in
mov
push
dec
je
and
or
out
adc
std
mov
loopne
pop
push
pusha
add
nop
inc
xor
cwtl
ss
shl
add
mov
jl
es
jge
add
call
sub
iret
icebp
cltd
mov
iret
pop
cwtl
test
shll
popa
test
push
inc
lods
fisttpl
out
stos
push
fld
into
movmskps
mov
mov
inc
cmp
xchg
pop
mov
imul
in
add
or
mov
cltd
jno
fsubrs
xor
push
es
or
push
add
pop
or
lahf
add
pop
sarl
dec
stc
jp
cmp
call
xchg
aad
test
or
int
cld
mov
mov
or
add
addr16
xor
ret
bound
ret
dec
popf
rolb
jne
nop
stos
mov
movsl
leave
inc
jae
mov
sub
ficoms
stos
jge
and
mov
add
push
or
adc
ja
xor
jle
xchg
arpl
dec
mov
mov
test
out
cmp
out
sub
push
push
jbe
repz
subl
psubsw
jge
mov
lret
rcrb
cs
add
jno
pop
lcall
mov
xchg
test
dec
sub
adc
dec
cmc
fwait
xor
test
aas
fisubrs
cld
shlb
sbb
cmpsb
outsl
xchg
scas
jmp
adc
pop
jmp
ljmp
dec
outsl
fs
fst
aam
xor
test
add
repnz
loope
int
xchg
lods
add
jle
jns
mov
popa
pop
cld
xchg
bound
inc
fwait
push
enter
xchg
clc
add
xchg
insb
pop
sbb
add
test
out
sub
mov
xor
inc
add
das
adc
and
mov
xchg
loopne
das
pop
clc
inc
mov
add
outsb
jbe
jnp
xchg
test
mov
lret
out
pushf
je
shlb
and
cld
or
flds
mov
add
subl
add
inc
cmp
adc
scas
cmp
dec
sub
and
jle
fwait
xchg
xor
pop
mov
mov
sarb
sbb
dec
stos
and
fisttpll
fcmovnb
shll
ds
mov
gs
out
cmp
lods
xor
dec
movsl
pop
int3
fwait
loop
xor
repz
or
repnz
addr16
sbb
push
ds
ja
cmp
std
push
cld
mov
out
aam
pop
dec
push
mov
cmp
push
push
jo
enter
test
sub
addr16
mov
lcall
cmp
lea
sub
int3
mov
mov
in
cltd
es
xor
inc
les
sahf
sub
mov
mov
stc
sti
adc
inc
xchg
into
xchg
es
jbe
pop
xchg
or
movsb
std
pop
repz
in
les
in
adc
ljmp
dec
popa
sbb
jne
fwait
add
mov
daa
rcll
gs
pop
xchg
mov
push
xchg
dec
add
out
mov
fisubl
add
or
mov
pop
jb
mov
aaa
mov
dec
jle
pop
lock
dec
xlat
push
add
jp
arpl
push
cmp
jbe
mov
pop
jbe
add
in
loope
xchg
mov
dec
hlt
js
mov
repnz
mov
inc
lock
cltd
xor
cmp
shll
push
jmp
lret
pop
or
jnp
inc
aaa
ret
add
adc
dec
enter
cmp
test
or
aaa
xor
push
xchg
pop
add
sub
jge
inc
nop
xchg
es
gs
aaa
in
pusha
insb
cmp
dec
aas
mov
mov
hlt
sub
xchg
dec
call
lahf
or
xchg
jns
cwtl
cmp
leave
jnp
daa
add
sub
jnp
push
mov
sbb
pop
jl
dec
xor
fisttps
push
push
and
add
aam
stos
inc
clc
adc
out
add
adc
and
ja
leave
xchg
xor
cld
cs
xchg
mov
loopne
dec
aas
mov
sub
ja
test
xor
push
mov
popa
dec
leave
test
push
adc
mov
testb
test
mov
ss
mov
cmpsb
rorl
pop
xchg
xchg
outsb
mov
ja
in
rclb
fcomip
clc
fidivl
inc
iret
fs
pop
fucomip
jae
lods
outsl
rorl
rcl
sbb
and
inc
pop
push
sbb
aam
add
push
pushf
and
imul
and
int
mov
fnstsw
notl
push
scas
push
xchg
pop
mov
mov
dec
pop
daa
pop
sbb
xchg
xchg
movsb
mov
sbb
js
dec
jg
dec
mov
push
pop
pop
pop
cli
fisttpll
sbb
xchg
out
fxsave
and
shll
cmp
in
xchg
aas
mov
lods
orl
and
hlt
cmp
mov
mov
mov
imul
mov
arpl
popa
aaa
mov
push
mov
imul
mov
in
dec
xchg
jae
dec
stc
add
in
je
mov
rclb
pop
mov
jbe
push
movsb
lret
jno
push
or
or
test
stos
add
jle
cld
aad
in
aaa
sub
mov
xchg
and
outsl
mov
loop
in
pop
ss
mov
cmp
lods
push
sarb
jae
out
mov
mov
rcll
add
sbb
xchg
inc
cmp
lcall
xchg
mov
push
lods
mov
cmpsb
hlt
adc
lret
ja
push
sahf
mov
out
or
shlb
jg
and
mov
subl
xchg
lea
ja
xchg
aad
ror
pop
icebp
loop
mov
outsb
or
lods
pop
mulb
pushf
add
xor
xor
int3
xchg
xlat
adc
iret
jnp
mov
xor
movsl
stc
mov
pop
cmp
adc
ja
or
xchg
ret
dec
pop
inc
add
sbb
pop
iret
jb
push
inc
imul
pop
aad
or
jmp
mov
movsl
jns
xchg
iret
jo
xchg
mov
xchg
sbb
cli
push
sti
cmc
fdivs
inc
aaa
adcl
out
cltd
aaa
adc
mov
lret
pusha
xor
or
xchg
js
cmpsb
sub
dec
adc
sahf
ret
mov
js
andb
ljmp
xchg
es
sbb
xor
pusha
pushf
jmp
cmp
or
lods
add
pushf
push
andl
test
sbb
sahf
xor
push
mull
fwait
mov
repnz
push
bound
cltd
aas
loop
loop
sbb
sbb
pop
jne
popa
and
out
xchg
and
xor
mov
xor
jp
rcl
sub
popf
add
pop
test
outsb
xor
int3
fstl
mov
push
imul
push
dec
pop
mov
ja
insb
flds
xor
dec
rorl
outsb
mov
sub
jmp
repz
andl
out
inc
stos
dec
jecxz
jbe
ret
adc
jnp
rorl
sti
les
xchg
outsb
mov
lods
mov
sub
jnp
and
push
mov
xchg
stos
addr16
cs
sub
andl
iret
xchg
insl
pusha
ljmp
mov
pop
xor
addl
jbe
push
insb
icebp
addr16
cwtl
sarb
cmp
cmp
out
xor
hlt
sbb
mov
into
sbb
sbb
jg
test
mov
sub
imul
repz
add
dec
lea
aas
inc
fldl
xor
push
aam
sub
mov
sbb
jns
ret
jae
repnz
divb
mov
mov
xchg
cmp
or
popa
int3
sub
jge
subb
xor
ficomps
pop
add
inc
cmp
psrlw
lret
and
adc
sub
cmp
sbb
lock
sub
dec
add
adc
and
out
sbb
ss
lret
cmp
in
aas
mov
inc
fisttpl
negb
mov
lods
adc
fwait
inc
sarb
test
push
bound
loopne
dec
dec
fstl
and
jo
mov
je
cmp
pushf
dec
push
add
cmp
std
scas
gs
push
sub
jl
sbb
xor
idivb
out
sbb
out
mov
pop
sbb
or
dec
inc
push
lahf
insl
adcb
mov
out
and
imul
mov
mov
loop
dec
fldenv
mov
add
imul
sub
sub
mov
mov
ds
sahf
inc
jl
outsb
fwait
pop
out
cmpsb
xchg
imul
or
rclb
cwtl
out
inc
sbb
mov
in
sub
jo
mov
addr16
push
jge
mov
int3
push
mov
sub
loope
or
cmp
cmp
ljmp
mov
pop
jg
cmovnp
sbb
ljmp
aam
pop
out
xor
and
xor
sub
xchg
test
ds
ja
les
sbb
jnp
push
sub
push
xchg
ret
adc
cmp
lock
push
aam
jle,pt
push
test
lock
inc
xchg
inc
ja
fs
jno
add
lret
cmp
rcrb
pop
jns
out
cmc
mov
bound
jae
lods
loopne
fldcw
sbb
fs
and
dec
jo
and
adc
push
jo
mov
xor
enter
fistps
pop
xchg
sbb
pop
repnz
outsl
stos
mov
daa
loope
mov
lea
jp
xchg
xlat
sbb
std
mov
dec
mov
inc
les
scas
ret
aad
mov
lahf
xchg
and
jp
faddl
sub
filds
lahf
and
icebp
movsl
lcall
push
add
cmp
cmpsl
insb
adc
data16
adc
jo
sbb
cwtl
cmpsl
loop
test
fnsave
nop
sbb
dec
and
mov
cmc
lret
xor
lret
xchg
inc
loope
cld
jne
or
mov
mov
int3
shl
xlat
pushf
arpl
rol
sti
cwtl
add
mov
jae
xlat
rol
repnz
xchg
and
outsl
sub
stos
lcall
std
dec
imul
imul
cmc
adc
mov
pop
adc
inc
test
pop
clc
imul
cld
data16
decl
stos
rcrb
ret
ja
push
and
loope
in
xchg
mov
inc
fwait
xor
dec
daa
xchg
fidivs
cmp
fcmovu
jnp
jb
sbb
mov
and
mov
mov
and
push
test
sub
scas
rcrb
lcall
sti
pusha
movsl
or
int3
and
mov
jge
mov
push
mov
int3
jp
jno
adc
shr
sub
test
ret
xor
mov
fidivrl
lea
leave
pop
cmc
mov
cmpl
js
insl
pop
and
mov
popa
rol
or
test
xchg
lock
dec
mov
inc
jp
add
js
cs
adc
inc
inc
dec
jecxz
addr16
lret
mov
aad
pop
jnp
rcll
xor
pop
mov
xchg
mov
lret
adc
jb
in
ret
lods
jno
xor
mov
pushf
inc
ljmp
or
mov
int3
xchg
adc
mov
out
ljmp
push
lret
aad
in
je
addr16
xor
pusha
test
popa
test
aad
inc
loopne
mov
push
out
dec
mov
pusha
inc
add
jno
mov
popa
call
jmp
jns
loope
dec
sub
jb
inc
cmpsb
jge
cmp
lret
push
inc
jbe
mov
and
xor
fists
inc
das
inc
add
xlat
ljmp
xsaves
push
std
cmp
xchg
rorl
pminub
shll
mov
adc
jae
push
fsubrs
std
inc
or
adc
sbb
stc
ja
add
ret
jbe
inc
jbe
out
popf
pop
lret
inc
lods
xor
dec
jg
scas
and
mov
sbb
test
pop
inc
jmp
jb
out
enter
or
jle
mov
lods
xchg
mov
ret
adc
mov
cmpsb
sahf
mov
add
aaa
out
jo
mov
aas
cltd
or
mov
sub
adc
mov
mov
cld
ficomps
mov
jle
xchg
cld
lea
movd
outsb
mov
mov
add
bound
bound
sbb
sarb
rcrl
aad
pushf
aam
inc
shrl
bnd
subl
andb
lret
inc
inc
pop
lea
je
and
rclb
fistpll
in
cld
mov
push
mov
daa
add
in
in
xchg
inc
stc
mov
mov
scas
jmp
nop
inc
scas
sub
rcrb
lds
inc
enter
fwait
outsb
cmp
mov
push
lcall
or
xchg
inc
pop
sbb
idivl
sbb
std
xor
into
das
jmp
fbld
add
jno
ljmp
mov
lods
adc
xchg
jp
push
fistpl
int
ret
inc
push
push
dec
pop
dec
loope
mov
and
sub
js
lds
adc
shrb
enter
mov
decb
add
into
sbb
repnz
or
add
movsb
jbe
mov
lahf
ror
fbstp
dec
ret
xor
adc
ror
lods
xchg
xor
and
faddl
orl
mov
cmpsb
inc
lea
sbb
cmp
fistps
lahf
push
es
inc
mov
cmpsb
inc
popa
icebp
add
ss
add
addr16
pop
sub
jp
bound
mov
xor
movl
sbb
and
in
scas
lret
out
xor
rorl
in
mov
subl
jmp
movsb
jb
jmp
pop
mov
ljmp
std
sub
js
outsb
imul
hlt
into
scas
add
adc
in
sub
mov
sarl
andb
rclb
cs
fcoms
lds
ret
aaa
fs
inc
xor
jnp
inc
pushf
out
mov
lds
pop
das
faddl
and
cli
sub
xchg
lea
fldcw
test
push
pop
pop
adc
in
je
es
lret
mov
insb
cwtl
push
pop
mov
pop
fldl2e
xor
loope
jmp
aas
pop
jae
mov
pop
mov
push
dec
repnz
pusha
popa
sbb
test
bound
mov
lds
sub
test
ja
repnz
dec
jge
fimull
push
mov
mov
aas
xchg
ficoms
addb
jge
rcrb
cmp
int3
mov
hlt
fwait
pop
or
mov
popa
out
dec
mov
jnp
repnz
pop
psllq
cld
dec
jno
loope
ss
aas
fdivrp
subl
ret
adc
adc
pop
jns
fildll
mov
cmpsl
xchg
and
xorl
mov
lcall
out
icebp
xor
pop
xor
mov
insl
testb
sbbb
scas
repnz
jle
dec
xchg
stos
adc
stos
dec
iret
mov
pusha
ret
push
inc
cmpsb
adc
iret
pop
les
testb
xchg
out
dec
push
rorb
in
add
loopne
xchg
adc
dec
test
jge
pop
fbld
adc
xchg
es
jb
adc
in
push
inc
mov
into
fiaddl
and
or
cwtl
and
and
adc
sbb
out
sbbb
jecxz
cltd
mov
lods
jae
xchg
push
lods
cltd
in
mov
gs
outsl
lods
push
mov
xor
loop
ret
or
loop
popf
adc
mov
js
imul
lahf
inc
or
sub
icebp
outsb
pop
rorb
dec
lret
data16
loopne
xchg
jmp
cwtl
jmp
pusha
dec
ret
lret
xchg
enter
sub
enter
sbb
fs
sub
icebp
inc
imul
jecxz
fstpt
imul
inc
cmp
or
aaa
jl
push
cmp
pop
sbb
mov
adc
push
pop
xor
adc
ss
adc
pop
fisttps
jmp
js
aas
mov
cmc
mov
int
sub
dec
loop
xor
xor
in
mov
push
movb
stos
loopne
adc
xchg
sub
out
ja
cmp
jmp
int
mov
outsl
shlb
jns
jne
mov
frstor
loopne
cmc
dec
aam
lds
je
test
xor
cltd
push
adc
je
popf
adc
popf
enter
out
add
add
xchg
arpl
daa
push
test
xlat
shll
dec
cmpsb
je
mov
mov
push
addr16
out
dec
ds
lcall
or
je
push
inc
jne
es
pop
ret
mov
add
mov
sbb
insb
in
aad
fstps
aam
add
in
loope
fcoms
mov
pop
lods
or
stc
mov
cmp
outsb
xchg
fnstenv
imul
pusha
test
jecxz
adc
jb
in
inc
pushf
mov
and
out
jb
mov
popf
cltd
loope
dec
shrl
shl
iret
push
add
shlb
inc
loopne
rcrb
pop
push
sub
sbb
in
scas
and
and
aam
lret
jge
pop
sbb
test
cmp
mov
shr
inc
xchg
jle
pushf
sbb
iret
out
call
jae
roll
xor
mov
mov
sub
add
cwtl
fildll
jns
call
je
mov
mov
xor
add
jns
pop
gs
push
push
push
jg
sahf
lea
clc
mov
adc
jbe
int
mov
pop
mov
aaa
cltd
ljmp
push
js
jl
cmpsl
sbb
loope
lcall
push
push
std
and
fwait
mov
in
push
sti
adc
mov
lret
cli
push
ds
sub
cli
lret
push
push
inc
subl
xlat
es
stos
fs
xchg
outsl
dec
inc
mov
int3
popf
ljmp
push
push
add
dec
xor
mov
lret
xchg
lods
int
mov
in
lds
inc
sahf
adc
fs
mov
mov
sub
in
std
jno
pop
push
xchg
icebp
popf
les
hlt
je
dec
push
mov
inc
dec
outsl
sub
ljmp
add
add
ret
pop
scas
lods
repnz
mov
fcmovnbe
ret
sbb
insl
xor
jnp
jp
or
adc
adc
nop
in
int
inc
mov
leave
or
mov
inc
cwtl
lock
fldenv
add
cmp
ljmp
pop
push
iret
jp
stos
cmp
mov
lods
push
dec
xor
mov
inc
repz
sbb
sub
push
pop
mov
or
jae
adc
push
xchg
aad
or
cmp
or
hlt
xor
xchg
mov
repz
cmp
push
leave
adc
int3
mov
sbb
pop
test
cwtl
data16
sub
inc
mov
nop
lods
push
movsl
outsb
sbb
int
stos
dec
ret
xchg
les
cmp
out
fdivrs
or
push
add
cmpsb
jecxz
mov
cmp
jmp
std
jb
cmpsl
mov
cmp
push
outsl
jecxz
adcl
out
lds
fs
cmp
mov
xchg
push
jge
mov
ret
test
pop
rolb
addr16
in
call
jp
sbb
cmpsb
scas
mov
mov
or
fwait
idivb
aam
sub
mov
push
int
stos
or
ret
pop
jmp
push
mov
fbld
jecxz
repnz
mov
loopne
cld
stc
add
add
nop
push
divl
cmp
and
push
add
and
xor
mov
ret
cltd
jecxz
clc
pop
xor
pop
mov
stos
adcb
fdivrp
icebp
dec
dec
push
shlb
int3
outsl
popf
hlt
push
sbb
xorl
or
jg
jno
inc
adcl
push
adc
lcall
frstor
out
mov
jmp
cmc
mov
inc
mov
movsbl
push
jno
insl
jo
movsb
xchg
inc
setg
xchg
cmp
cwtl
jmp
sbb
xor
push
test
scas
mov
mov
dec
loopne
dec
out
and
aas
xor
sbb
mov
adc
xrelease
movsl
jle
ja
jmp
mov
mov
repnz
jge
test
lahf
mov
popf
loope
scas
or
gs
lret
insl
push
jmp
aaa
pop
sbb
incb
test
jmp
insb
inc
adc
add
outsb
ffree
sbb
mov
shr
popa
xchg
scas
ret
std
mov
push
dec
inc
cmp
lods
mov
sub
push
sti
xor
stc
test
mov
or
ljmp
sti
cmp
jns
shll
dec
scas
mov
outsb
pop
xchg
or
jne
leave
jne
ss
out
out
jl
pop
fistpl
push
sar
jl
loopne
jg
repnz
mov
ljmp
pusha
or
xor
sbb
push
xchg
addr16
cmp
iret
es
add
xchg
ss
and
xor
mov
mov
aad
mov
insl
xor
adc
das
add
push
xchg
outsb
insl
pop
fdivs
in
in
insl
xor
dec
popf
loope
cs
fldcw
outsb
xor
aam
mov
fiaddl
push
xor
sub
push
add
fsubr
ds
divb
inc
arpl
xor
mov
iret
pop
outsl
ljmp
sub
outsl
dec
add
dec
jmp
sub
dec
hlt
and
dec
test
pop
lahf
jno
cld
in
and
or
lcall
scas
sbb
stos
push
sub
out
in
dec
rolb
or
mov
lret
lahf
inc
xlat
roll
dec
imul
dec
add
and
mov
or
ja
popa
popf
cmp
and
mov
push
scas
repz
inc
hlt
sarb
in
sbb
xor
mov
mov
mov
inc
inc
aad
mov
movsl
mulb
jae
ror
in
cs
mov
orb
cld
fcmovnu
mov
jge
adc
nop
sbb
or
movsl
ljmp
jecxz
loop
fidivrs
mov
inc
add
test
inc
rsqrtps
mov
ja
mov
in
jb
push
mov
xchg
mov
and
inc
scas
mov
int
adc
les
and
mov
inc
mov
jb
pushf
rorb
movsl
cmp
cmpl
cmp
data16
lods
mov
push
mov
arpl
loope
in
addr16
or
push
leave
push
mov
fiaddl
ret
or
fistps
sti
aam
mov
cwtl
fwait
std
int
or
mov
xor
xor
sbb
adc
sbb
data16
int
dec
ret
push
inc
insl
push
bound
mov
adc
mov
adc
pusha
push
jae
lahf
shrl
adc
nop
ret
sbb
jmp
repnz
cmp
cmpsl
pop
gs
inc
test
cs
stos
push
hlt
sub
lock
cli
jmp
in
push
out
push
shrb
out
mov
or
add
jo
loope
les
pop
jb
pop
aam
hlt
js
mov
cli
cld
xchg
in
xchg
mov
jnp
xchg
push
fwait
mov
inc
bnd
mov
subl
lods
xchg
xor
aaa
adcl
in
hlt
pop
out
sbb
dec
das
push
dec
cmp
jmp
mov
cmp
mov
iret
les
std
push
xchg
mov
add
xchg
daa
fs
inc
dec
fidivrs
pushf
popa
jb
and
push
cmpsb
mov
je
out
inc
push
lods
adc
outsl
fsubrs
fs
pop
ss
push
andb
outsb
mov
mov
scas
adc
push
cs
ficoml
pcmpeqd
mov
inc
xor
ja
lds
push
xlat
mov
ljmp
xchg
out
int3
fwait
arpl
mov
jbe
out
bound
mov
into
repz
orb
xor
jl
cmpsb
xchg
mov
imul
stos
andl
aaa
mov
cmp
je
jmp
jg
popf
rorl
out
test
mov
or
lret
mov
ja
jmp
mov
jg
push
out
jmp
dec
ds
mov
sbb
fidivrs
adc
xor
int
push
lret
xlat
inc
cltd
xchg
jecxz
inc
icebp
sarb
and
xchg
push
jmp
subl
pop
dec
push
push
cltd
cmpl
mov
pop
mov
jae
test
test
or
das
mov
fs
neg
cmp
mov
cmp
sbbb
adc
out
out
push
insl
pop
dec
into
sarb
cli
fnsave
mov
data16
mov
cld
jecxz
cmpsl
aam
fdivrp
fisubs
scas
popf
push
test
jo
xchg
dec
out
aaa
pop
leave
xchg
add
iret
cmp
jp
jo
xor
ret
lahf
sbb
fisubrs
negl
adc
loop
pop
sahf
sarl
mov
mov
out
push
push
mov
aas
mov
lahf
inc
jge
fsubrp
xchg
aas
dec
cmp
popa
xor
cwtl
push
cmp
icebp
mov
dec
je
cs
cmpsl
out
mov
dec
adc
adc
dec
cmp
fdiv
insb
jns
enter
idiv
rsm
or
fstpl
pop
cwtl
std
push
mov
in
shrb
xor
mov
scas
xchg
sub
ja
mov
push
adcl
inc
stos
mov
cmp
or
xchg
lds
sbb
pop
fsubrl
jno
cld
jnp
xor
mov
rclb
aam
sub
dec
repz
test
in
test
jle
shll
xlat
inc
cltd
ds
int3
cmp
lret
mov
sarl
push
or
loope
ret
cmpsl
or
stos
mov
shll
int3
xchg
mov
leave
and
xchg
sarl
push
mov
add
push
imul
jge
sti
int
rcll
jmp
dec
mov
or
xchg
cwtl
mov
adc
cs
xchg
out
ffreep
lret
mov
mov
aaa
lods
mov
cwtl
addr16
mov
lahf
ret
scas
and
inc
sahf
mov
and
movsb
ret
pop
cmc
dec
aam
sub
push
sub
or
cli
xor
pop
nop
xchg
add
insl
js
ds
std
out
sub
aam
pop
inc
mov
push
stos
jmp
out
imul
sub
xchg
sbb
mov
cmp
iret
jl
mov
test
js
pop
xchg
jp
stc
inc
in
sbb
dec
scas
jmp
pusha
push
clc
enter
rolb
jg
cmc
pop
ret
and
mov
mov
test
cmp
adc
shl
lea
jb
out
mov
lods
and
cmpsl
dec
rol
cmc
jb
cltd
out
dec
imul
xchg
fmuls
test
in
sti
fwait
jns
aaa
mov
fs
jb
adc
daa
mov
lahf
call
pop
xor
pop
sub
cmpsb
mov
in
and
leave
imul
shll
in
leave
adc
insb
mov
jge
popl
pusha
addr16
mov
out
ds
jo
mov
sub
fnstenv
pop
jg
xchg
in
sbb
pusha
pop
or
push
mov
sub
fisubl
scas
lcall
mov
daa
pop
add
in
jg
je
int3
jmp
fs
loop
inc
insb
push
mov
fnstenv
pusha
jge
rcrb
dec
xchg
dec
jmp
stos
xchg
inc
sti
add
aas
xchg
xchg
aaa
jle
adc
lcall
adc
cli
xchg
ljmp
cs
or
sub
or
sti
sub
jnp
insl
jle
jecxz
fistl
cmp
fwait
movl
into
ret
loopne
pop
add
xorb
pushf
pop
out
dec
das
ret
pop
xlat
xor
lods
push
pop
dec
adc
pushf
test
adc
ret
push
fdivl
mov
pushl
les
cmp
cmp
pop
mov
sub
pop
fsubr
sbb
inc
in
or
hlt
jb
xor
inc
cli
enter
ret
addr16
dec
je
loopne
dec
in
int3
out
rorl
or
push
mov
lock
lock
or
xlat
loope
enter
fldl
push
or
cwtl
mov
dec
xchg
cmp
xlat
push
xchg
loopne
outsl
mov
and
orl
jmp
stos
mov
decb
das
scas
push
stc
lahf
sub
adcl
add
notb
ret
or
push
scas
sbb
cli
mulb
iret
sti
add
jmp
arpl
std
mov
imul
in
in
ret
mov
push
arpl
ds
cmp
adc
data16
or
rolb
mov
push
in
sub
mov
push
bound
fdivl
leave
sub
adc
add
stc
aas
es
dec
and
js
sub
cltd
cmpsl
xchg
jecxz
rcl
scas
push
loope
mov
ljmp
shlb
jbe
fcmovu
negl
insl
mov
nop
cmp
mov
pop
jne
cmp
or
xor
gs
out
mov
mov
or
sub
lret
xchg
shrb
arpl
gs
movsl
cs
jnp
in
xchg
jb
mov
sub
mov
add
fstpl
or
mov
xchg
ret
and
xchg
push
inc
inc
sub
out
addb
repnz
mov
pop
aam
ljmp
push
ret
cld
mov
pop
or
sar
repz
xchg
aas
push
push
and
mov
testb
adc
pop
mov
xchg
sahf
cmp
out
pop
shlb
ret
cmp
inc
push
add
loopne
mov
mov
mov
sarl
push
mov
and
mov
dec
cmp
inc
jns
mov
mov
movl
sub
pop
jae
cmpsl
test
xchg
lret
or
test
jb
lods
fs
subb
sub
dec
pushf
dec
cmp
cmc
mov
shll
aam
and
jnp
mov
mov
mov
dec
idivl
lods
push
cmpsb
pushf
mov
mov
cmpsl
dec
or
mov
insl
jo
adc
add
fnstsw
add
call
sbb
leave
cmp
arpl
mov
xlat
gs
pop
jg
nop
icebp
lods
mov
push
mov
sbb
lds
pop
in
cld
jg
cld
mov
out
xchg
mov
out
xchg
sbb
not
stos
aas
fisubl
ss
jle
and
push
in
mov
dec
jl
aam
das
shlb
pusha
add
fs
push
loopne
test
mov
and
leave
jbe
sub
mov
out
jmp
sbb
test
sbb
lcall
iret
pushf
mov
lods
mov
mov
jmp
aam
movsb
andl
pop
lcall
and
inc
leave
push
sub
scas
mov
int
in
jns
pop
jge
pop
das
popl
dec
test
mov
lea
or
mov
rcrl
mov
mov
cli
aad
std
lds
jbe
scas
rol
sarl
movsl
subb
out
loopne
inc
sbbl
add
ficoms
push
mov
jp
cmc
mov
push
aad
fstps
loop
pop
cltd
iret
push
jle
daa
outsb
mov
call
xchg
cmp
push
jmp
mov
dec
es
push
inc
mov
sbb
and
clc
js
sbbb
lahf
jo
lea
adc
xchg
loop
xchg
mov
outsl
bound
imul
pop
adc
push
mov
movzwl
std
sbb
fcmovb
ret
jmp
int
mov
int
subl
stc
pop
in
stc
int
sbb
cmpb
shlb
ljmp
and
push
in
dec
add
mov
cmpsl
dec
push
stos
cmpb
xor
push
ja
mov
sub
dec
outsl
cmpsl
sahf
pushf
dec
cmp
mov
enter
and
dec
inc
adc
cltd
mov
cwtl
dec
jbe
cli
xor
test
je
add
decl
xor
push
sub
mov
movsb
sbb
dec
cmpb
jne
std
fistl
pop
movsl
ss
inc
pop
mov
rorl
sub
rolb
dec
out
repnz
dec
xchg
les
out
add
xchg
lods
shrd
out
push
push
adc
loop
jne
push
push
inc
inc
notl
out
lahf
movsb
jbe
inc
mov
inc
mov
scas
cmpsl
pop
outsl
mov
ja
cmp
pop
mov
jne
std
mov
xchg
mov
mov
fs
jl
mov
ja
mov
add
mov
xor
les
lds
pop
cld
das
mov
hlt
and
ficoms
fidivs
xchg
pop
jmp
mov
xor
xor
ljmp
jo
and
mov
and
aam
pushf
jl
lods
mov
cmpsl
cmp
xor
lret
enter
jbe
push
sbb
push
mov
dec
call
pop
in
mov
inc
dec
mov
ss
adc
out
inc
arpl
das
jmp
fisttpl
or
mov
xchg
test
hlt
jne
cltd
push
mov
mov
cs
cwtl
add
subb
int3
ljmp
cmp
and
mov
sahf
xor
daa
xor
and
mov
mov
movsl
jnp
lods
int
aas
mov
cmp
pushf
jno
imul
aas
sub
fldenv
lcall
adc
mov
adc
add
jne
bound
movsl
int3
pop
mov
ja
and
sub
inc
lcall
add
movsb
jmp
sahf
push
xchg
xchg
sarl
xchg
jp
mov
insl
jbe
xchg
popf
out
aaa
sbb
loop
jle
test
daa
xchg
and
popf
out
xchg
stos
mov
push
pop
pop
sub
add
test
sti
cltd
inc
test
scas
mov
pop
cmc
mov
pop
mov
fnstenv
fbstp
sub
mov
int3
add
iret
mov
pushf
cltd
pop
leavew
mov
or
jecxz
mov
push
sub
stos
stos
push
sub
push
and
cmp
fistps
repnz
cmp
jb
test
mov
or
cli
mov
das
std
pusha
pop
mov
in
sbb
mov
push
cmp
pop
dec
xor
dec
dec
js
mov
xor
cmp
cmp
sbb
insl
jp
jl
mov
fxch
adcl
sysret
pop
jb
jnp
loop
into
test
into
jge
test
fstpt
scas
dec
fcompl
loop
inc
dec
ljmp
jne
pop
xlat
jnp
imul
jae
xlat
adc
sbb
testl
jg
jae
dec
lcall
jns
clc
adc
xchg
into
fcomps
stos
in
std
pop
dec
stc
cmp
jecxz
ljmp
lahf
xchg
outsl
in
sub
sti
daa
out
ror
sbb
xlat
pusha
cmp
push
enter
ja
sbb
jle
rol
adc
pop
sub
loop
xchg
cmp
adc
mov
inc
ljmp
push
or
pop
sahf
dec
iret
leave
aad
mov
xor
ss
mov
sbb
cmp
push
push
imul
scas
push
lock
bnd
dec
mov
sub
mov
fnstsw
push
jno
xor
add
push
mov
inc
add
xor
sbb
es
push
int3
jae
jo
jns
dec
sub
in
mov
push
sarb
mov
aad
cmp
inc
daa
push
pop
clc
shr
fucomip
jecxz
negb
lds
sarl
js
ficompl
int3
enter
fimull
cmpsb
and
addr16
fwait
das
imul
xchg
inc
xor
cmp
ja
lcall
adc
push
stc
xorl
mov
lahf
cmp
dec
lods
dec
mov
sahf
pop
cmpsb
push
cmp
inc
les
scas
sub
out
cmc
jns
sub
sub
inc
ds
push
sbb
jo
sbb
cmpsl
out
jno
add
cmovp
stos
inc
stos
xor
pop
jecxz
pop
cmp
aas
sarb
nop
sub
aas
and
aad
jne
imul
pushf
dec
hlt
push
dec
xchg
xor
int3
push
js
jmp
or
aam
mov
sbb
sahf
add
dec
mov
jo
inc
pop
dec
inc
xchg
sbbb
xchg
ds
and
shl
int3
and
mov
mov
xor
popa
mov
push
test
inc
mov
imul
add
das
mov
cmpsb
lock
loop
push
sbb
jns
js
push
jecxz
sub
xor
mov
mov
cmp
fs
sbb
xor
xor
cld
inc
ficoms
ss
jmp
jmp
popf
sbb
cmp
lods
jo
bound
cmp
dec
insb
scas
pop
stos
pushf
pop
sarl
adc
data16
movb
or
pop
push
in
movsb
insl
cmpsb
pop
dec
and
iret
mov
sti
sub
mov
outsl
loope
sbb
or
sbb
inc
adc
xor
les
sbb
sahf
or
mov
push
subl
inc
pop
test
cli
inc
sub
push
sbbl
or
push
or
adc
daa
stos
xor
fsts
arpl
test
xchg
dec
ret
adc
cltd
inc
repnz
or
daa
jecxz
add
pop
jbe
pop
ss
push
sbb
fiadds
outsb
cmc
sbb
inc
fsubrs
and
repz
daa
push
mov
jg
scas
shll
sub
in
gs
dec
mov
inc
lret
xchg
jbe
inc
mov
mov
push
jecxz
mov
outsb
enter
subb
cmp
inc
stc
lahf
push
incl
xchg
sub
pusha
imull
cltd
dec
flds
je
loopne
push
ja
and
cmp
popf
adc
std
out
stc
adc
or
mov
xchg
ja
cmp
xor
in
mov
fstps
lret
push
mov
stc
mov
jno
pop
nop
adc
pop
fisttpl
lods
jne
xchg
popf
pop
or
or
adc
xchg
cld
flds
mov
sahf
mov
pusha
out
push
movsl
ljmp
out
jmp
cmpsl
stc
jae
test
add
aas
cs
aas
stos
sahf
sbb
ficomps
jle
ja
mov
leave
mov
push
mov
jge
cmp
push
sub
popl
and
cmp
lea
shl
push
adc
lods
insb
add
mov
lret
sub
pop
xor
mov
in
xchg
outsl
test
xor
test
jle
jge
scas
repnz
cltd
cmpsb
mov
cmp
push
pop
inc
xor
xlat
mov
inc
sar
lret
outsl
rolb
xchg
lahf
rclb
or
jb
psadbw
adc
ds
xorl
nop
xchg
cmpsb
repnz
jnp
sbb
sahf
scas
dec
and
push
inc
lods
popa
xor
jp
cmp
aaa
mov
xchg
aad
mov
push
push
push
scas
in
imul
pusha
push
push
mulps
mov
addl
jge
movsb
cltd
adc
ljmp
roll
and
cltd
mov
cmpsl
sub
pop
cwtl
sahf
cmp
shrb
or
hlt
pop
fcmovb
add
push
inc
fs
shlb
mov
nop
pop
pop
adc
dec
ret
cmpsl
cwtl
sub
cli
sbb
xchg
xchg
cmp
movsl
idivb
inc
add
std
scas
fisttpll
push
out
pop
sarl
js
pop
enter
inc
jns
cmp
jo
sbb
mov
xlat
pop
mov
cmc
jle
mov
out
outsl
sbb
cmp
xchg
das
arpl
push
mov
rclb
add
enter
push
xchg
lahf
idivb
paddsw
jmp
cld
mov
mov
fbstp
je
adc
rclb
add
sbb
pop
pop
cmp
scas
fidivs
lods
xlat
sbb
rep
rcrl
lahf
scas
inc
test
sahf
mov
pop
xchg
cld
jecxz
sti
mov
xor
add
dec
jle
or
push
push
movsb
jecxz
xlat
test
xchg
stc
nop
scas
dec
hlt
sub
xor
dec
test
mov
pusha
mov
lods
push
js
pop
push
mov
or
add
cmpsl
jg
jbe
pop
stos
cmp
shll
cmp
pop
lods
lods
cmp
dec
out
subb
into
shlb
sbb
lods
and
mov
rorb
add
popf
enter
ljmp
sarb
sbbl
cltd
ficomps
lods
insb
dec
dec
jb
les
adc
ds
jge
xchg
hlt
fimull
imul
nop
adc
hlt
int3
or
fdiv
sarb
cmp
inc
and
cld
or
mov
push
in
inc
jmp
lcall
inc
idivb
fs
mov
xchg
inc
sarb
or
and
mov
xchg
cs
mov
gs
mov
inc
out
fiadds
cwtl
pusha
inc
scas
adcl
fnstenv
mov
mov
and
adc
addr16
stc
xchg
pop
jne
pop
add
popf
rcrb
mov
push
jg
adc
enter
push
mov
loopne
push
cmp
add
xor
and
mov
mov
dec
in
mov
shlb
mov
push
xor
loop
out
fcmovnb
jbe
nop
cmp
jnp
sbb
sub
cwtl
repnz
sbb
mov
aaa
decl
mov
xchg
push
int3
fisubrl
add
cmp
push
js
andb
jle
dec
adc
mov
xchg
scas
adc
adc
push
sbb
xor
outsb
and
arpl
lcall
repz
stc
or
in
mov
shll
mov
mov
cmpsb
enter
arpl
addl
cmpb
xchg
push
inc
jo
add
cmpsl
or
jb
rcrl
clc
lods
push
movsb
enter
daa
mov
cld
movsl
iret
js
sub
jae
fwait
out
add
das
iret
jno
dec
xchg
fiaddl
dec
pop
stc
mov
push
sti
adc
hlt
sub
mov
sub
pop
jbe
push
out
push
and
in
xor
add
stos
enter
add
inc
addl
add
bound
adc
pop
cmp
mov
pop
repz
xchg
insb
xchg
jg
aas
ret
push
mov
lret
push
mov
roll
dec
jnp
adc
sarl
pop
sbb
shr
adc
and
std
outsl
popa
push
loopne
ss
mov
fcoml
and
fwait
dec
jle
stos
xor
fistl
inc
fdivr
dec
cmpsb
pop
adc
test
aas
and
loopne
cmp
inc
and
rcrb
cmp
dec
xchg
inc
test
rcrb
xchg
dec
push
lds
fildl
lret
pusha
adc
mov
mov
rcrl
cmp
pushf
fstl
dec
movnti
sbb
dec
lahf
fnstcw
mov
in
cmp
mov
pause
xor
mov
scas
mov
inc
idiv
jmp
ss
pop
leave
pop
cli
inc
das
jb
test
sbb
fldenv
aas
fdivs
xchg
in
ljmp
lret
sub
roll
mov
fs
jbe
movsb
test
and
inc
test
pop
pushf
adc
jp
mov
sub
push
inc
dec
push
inc
jno
cmp
push
movl
mov
addr16
xchg
sub
push
in
pop
add
call
sarl
xor
mov
mov
fadds
ret
inc
pop
xchg
pop
cmp
repnz
in
push
mov
sub
pop
push
sub
gs
xchg
inc
xchg
inc
inc
mov
and
xor
sbb
fmull
push
iret
mov
clc
scas
fnstenv
cwtl
and
movsl
ljmp
cmp
aas
lret
jns
ret
and
outsl
int3
fwait
mov
or
fcmovnb
pushf
add
pop
aaa
xchg
dec
cwtl
inc
iret
mov
aas
and
dec
hlt
and
inc
jne
mov
add
xor
push
mov
out
pushf
fsubrs
in
fmull
shlb
clc
xchg
js
daa
and
mov
cmpsl
inc
es
cmp
test
push
call
xor
cs
dec
leave
xlat
push
nop
out
mov
inc
lret
inc
xor
movaps
cmp
jl
sub
pop
mov
jecxz
mov
pop
fsub
mov
fsubs
add
enter
addr16
imulb
add
shlb
cmp
mov
arpl
adc
cld
mov
loop
add
lret
dec
in
clc
pusha
ret
xchg
popa
or
pop
mov
pop
push
cmp
test
dec
push
mov
fwait
js
xchg
adc
push
mov
and
insl
jge
mov
inc
cmp
jo
adc
pop
mov
jle
cmp
mov
mov
mov
iret
in
or
test
mov
pop
sub
leave
push
push
jp
mov
cmp
inc
mov
sbb
xchg
adc
in
push
lret
cmp
cli
xor
push
lret
push
iret
and
adc
or
add
cmpsl
int3
inc
pop
lea
les
add
and
outsl
sub
fsub
push
pop
clc
xchg
outsl
out
inc
mov
faddp
inc
arpl
push
cwtl
movsl
jne
pop
pop
mov
push
fcmovu
cmp
pop
sbb
adc
addb
push
cmc
out
sbb
out
adc
pop
sub
aam
and
inc
fcoml
add
std
xor
pop
sbb
push
mov
lock
lahf
mov
xor
pop
lods
addb
mov
xchg
movsb
add
popf
adc
es
pop
jb
add
es
pop
push
mov
xchg
insl
add
nop
jbe
test
mov
pop
push
inc
or
mov
int
ret
subb
jnp
rolb
je
jmp
jg
cmp
fwait
test
outsb
push
pop
lcall
and
aaa
sub
sub
fadds
cli
aam
out
mov
loop
lods
and
mov
jmp
int3
sbbb
jb
aam
inc
repz
mov
loope
mov
jp
cmp
incb
pop
push
repz
test
and
lea
pop
or
insb
test
ljmp
mov
orb
inc
xor
xchg
mov
inc
add
rol
dec
inc
das
xor
and
sahf
sbb
push
fsubrp
mov
and
sahf
xor
subl
pop
push
add
std
arpl
inc
lret
lods
mov
lods
cmpsb
jp
cltd
sbb
lds
test
sub
and
mov
dec
push
xor
xchg
sub
inc
mov
adc
push
lds
test
std
xchg
mov
and
int
mov
sub
fisttpll
lods
test
jle
xchg
cmp
jl
mov
xchg
jge
mov
jp
mov
mov
scas
xchg
out
sbb
inc
pop
mov
xchg
outsl
mov
movsl
sti
int3
repz
xor
xor
fstp
les
pop
std
outsl
mov
pop
outsb
subl
loope
cwtl
mov
xchg
lods
call
mov
loope
pushf
mov
adc
mov
fidivrs
scas
sub
stos
stos
scas
test
add
inc
insb
and
call
pop
push
or
das
stos
push
out
hlt
cmp
jp
fisttpll
adc
outsl
xlat
int3
and
jg
cmp
sub
ds
fs
sti
sub
fistps
pop
popa
push
push
scas
add
lahf
pushf
inc
sub
in
stos
dec
into
scas
xchg
jo
dec
pop
sbb
push
mov
sub
jo
mov
and
cmp
enter
fildl
add
sub
test
lea
add
mov
fwait
ds
mov
inc
add
cmp
jg
imul
cli
and
jns
pop
sub
fcmovnb
jge
mov
ret
push
lods
fstps
loope
loop
or
dec
mov
push
lods
rcrl
mov
sub
pop
lods
push
xlat
push
push
push
es
je
int3
sbb
sti
cli
ja
in
sti
push
leave
scas
cmpl
subl
mov
lahf
imul
clc
dec
jns
pop
cmpl
xor
xchg
and
inc
pushf
cmpsl
in
push
xor
fsubrp
or
inc
nop
rclb
mov
cmc
add
out
int
add
mov
inc
aaa
mov
faddp
repz
add
test
cli
and
push
mov
addl
mov
inc
out
push
cmpsb
imul
mov
js
loope
insl
sahf
mov
cltd
pop
aas
dec
loop
outsl
and
enter
fisubrl
loopne
jle
xor
sub
call
imul
outsb
lahf
loopew
mov
imulb
fldl
pop
mov
xor
mov
dec
dec
sub
mov
fdivl
arpl
shlb
push
scas
daa
xchg
mov
stos
addr16
and
xchg
adcl
cmp
or
add
mov
xchg
dec
mov
jo
and
je
mov
push
lods
and
aad
clc
mov
in
fcmovu
div
mov
dec
pop
sbb
mov
cmp
xlat
enter
icebp
push
mov
les
shl
out
pop
jge
icebp
dec
xchg
sub
inc
jae
cmp
jg
jl
out
push
push
mov
lahf
test
pop
or
xor
roll
sub
jo
int3
add
mov
pop
inc
ss
adc
add
pop
xor
into
icebp
test
nop
insb
dec
popa
inc
aaa
jbe
xchg
ja
sub
add
mov
gs
and
cwtl
pop
cmp
sbb
filds
enter
xchg
mov
xor
pop
aam
lock
push
mov
sbb
xor
lret
fadds
dec
pop
ljmp
xchg
cmp
push
jns
mov
dec
cmp
iret
xchg
sbb
inc
add
cmp
mov
arpl
loop
sbb
lahf
fsubrl
out
les
or
or
movsb
hlt
ljmp
pushf
mov
imul
xchg
and
loopne
test
aad
mov
in
add
push
mov
xchg
stos
jns
push
cmpsb
mov
mov
xor
lahf
cwtl
mov
xor
sahf
mov
dec
adcl
or
jae
clc
std
je
movsl
jmp
xchg
xorb
add
sub
inc
jbe
pop
mov
lcall
push
or
jno
in
popa
insb
stos
cmpsl
sub
pusha
lahf
add
hlt
test
mov
xlat
rcll
lods
sti
pop
mov
cmpsl
cmpsl
inc
rorl
stos
adc
loop
fwait
push
in
adc
scas
dec
cmp
mov
in
ss
insb
dec
leave
mov
sbb
in
stos
test
mov
jae
orb
adcl
add
lods
loopne
bound
dec
and
jbe
hlt
fsubrl
test
movsb
call
stos
add
mov
jle
sbb
mov
and
bound
lods
push
jl
push
and
addr16
inc
nop
mov
and
push
decb
sub
movsl
std
push
cli
leave
rcll
dec
inc
ret
adc
or
mov
and
dec
test
frstor
jae
lahf
in
shll
popf
cmp
sbb
fisubs
cmp
dec
shlb
rcll
movsb
outsl
movsb
pop
mov
rorl
nop
aad
pop
loopne
pop
xor
mov
lds
inc
xor
ret
call
jle
shll
mov
pop
test
push
sbb
pop
mov
call
out
push
sub
mov
lret
dec
or
fsubp
jae
xor
sbb
ja
or
mov
or
call
dec
dec
je
mov
shlb
bnd
rorb
and
mov
pop
fnstsw
mov
push
or
adc
and
jecxz
bound
inc
into
stos
int
cmp
push
dec
clc
cmp
push
sub
dec
add
in
and
mov
in
mov
fimuls
jle
or
push
pusha
cmc
xlat
fbstp
jg
shl
cwtl
inc
jp
sub
and
call
inc
mov
inc
mov
js
xor
in
push
imul
fstpl
ret
and
les
outsb
cltd
or
jbe
push
xchg
lods
out
aaa
jae
mov
pop
mov
or
pop
xor
or
pop
jecxz
push
out
in
mov
out
maskmovq
jb
mov
icebp
add
addl
icebp
cmp
subb
xchg
push
loop
xor
js
dec
aad
je
xor
imul
jnp
and
cmc
popf
cld
repnz
mov
mov
ja
bound
cmp
ret
or
inc
pusha
jg
jb
cmp
jp
cmc
imul
adc
sbb
mov
cmp
fistl
insb
aas
cmp
pop
jmp
enter
pop
or
shll
or
push
inc
mov
ds
les
lret
sahf
sub
push
outsb
cmpsl
out
cmp
sbb
jo
pushf
push
jmp
stos
jg
xor
ret
in
aaa
popf
rolb
cmpsb
jge
mov
xchg
mov
bound
mov
pop
and
xchg
cmp
push
dec
and
mov
imul
stos
ljmp
and
in
xchg
sub
popa
mov
lret
jo
fldcw
inc
fiadds
aas
lcall
dec
dec
xor
dec
call
cmp
ret
in
cmp
in
mov
insb
jp
call
or
inc
inc
insl
pop
les
out
mov
cmpsb
mov
sbbb
repz
or
xlat
int
in
push
fdivrp
jbe
dec
daa
insl
mov
push
les
mov
pusha
fidivl
scas
in
cmp
ss
out
popa
jmp
pop
divl
dec
adc
adc
push
repz
in
test
push
jne
xchg
sbb
insb
xchg
mov
orl
add
bound
lcall
int3
in
jp
daa
cmp
std
lret
mov
lods
fwait
jp
sbb
dec
loopne
enter
js
out
int3
mov
inc
fsin
enter
jmp
rcll
dec
mov
xor
xor
int3
cmp
stc
or
lret
out
sub
mov
jno
into
jae
pop
aad
mov
jne
test
jb
sbb
fildll
ret
insb
pop
xchg
cld
bswap
enter
stos
stc
or
jne
xor
sahf
test
pop
dec
pop
mov
dec
rorl
in
dec
push
mov
sbb
clc
xchg
cmp
and
cmp
pop
mov
xor
mov
pop
add
xor
xchg
pop
mov
pop
int3
jmp
inc
lods
addr16
and
ffree
test
mov
mov
cmp
fisubl
inc
test
loope
imul
pop
daa
ljmp
or
fxch
scas
cmc
xchg
in
add
add
dec
inc
or
pushf
cs
test
cmp
sbb
sub
std
mov
lods
jle
loop
or
nop
int3
lods
fs
ret
ret
ja
and
xlat
sbb
mov
mov
cmp
shrb
pop
data16
and
cmpb
mov
lahf
mov
ja
and
stc
push
in
and
mov
addr16
retw
inc
mov
mov
out
dec
in
scas
insb
lock
fildl
aas
hlt
test
cmp
std
sub
mov
int3
and
insb
cmp
inc
out
cmp
or
das
sbb
ljmp
push
in
jmp
cmpsb
or
lret
into
jmp
test
push
pushf
sbb
test
pop
mov
push
jnp
lahf
mov
jns
out
ljmp
cli
sbb
dec
jno
hlt
mov
ds
daa
icebp
pop
inc
inc
mov
push
mov
pusha
xchg
mov
leave
and
push
ret
or
cs
enter
add
outsb
lock
rorl
dec
dec
jge
jns
subl
popa
es
push
mov
nop
push
insb
add
sub
iret
jbe
pop
das
push
or
dec
int
xor
mov
sbb
incb
or
jo
mov
daa
sbb
ret
jp
xchg
hlt
jl
push
das
pusha
call
insl
cmp
xchg
dec
orb
mov
out
mov
icebp
rcrb
rorb
pop
push
in
sub
cmp
mov
and
loope
sar
inc
addr16
jb
add
mov
mov
and
lods
jmp
jp
or
lds
and
das
imulb
xchg
adc
jno
repnz
jp,pn
adc
fistl
iret
xchg
fdivrs
dec
sub
mov
jnp
mov
fmuls
adc
int
xor
clc
or
jae
test
xor
sbb
jb
mov
movsl
dec
xor
dec
mov
cmp
xchg
stos
out
xchg
leave
xchg
int3
aad
cwtl
loop
scas
je
and
add
mov
int3
inc
cmp
fstpl
cmp
scas
push
cltd
sub
cmp
aaa
cmp
pushf
in
jmp
ljmp
in
cmovne
mov
mov
dec
hlt
ret
nop
es
jp
subb
ret
stc
stos
fs
sub
je
out
adc
inc
loop
aad
adc
arpl
xchg
repnz
xorl
sub
or
sti
shl
jmp
push
es
in
mov
int
mov
adc
pop
pop
sti
add
sti
js
push
jg
pop
aad
jno
repnz
inc
add
xchg
ret
pop
or
xor
add
bnd
or
sbb
add
jae
js
or
jg
xchg
adc
movsl
pop
xor
pusha
aad
jne
clc
mov
mov
shr
mov
pushf
jb
sbbb
dec
add
roll
push
mov
nop
dec
arpl
sti
push
orl
fimuls
mov
test
adc
movsb
push
xchg
sub
xor
data16
inc
test
xor
shl
loope
jg
into
jo
gs
jbe
sub
inc
gs
out
add
ljmp
std
imul
arpl
fdivs
pop
pusha
jno
fidivs
jecxz
lods
pop
or
inc
adc
out
std
xchg
add
xor
cmpb
dec
cmc
hlt
pop
mov
push
mov
inc
pop
repz
fcomps
dec
jb
inc
popf
xor
inc
add
shll
adc
or
lret
stc
aad
cmc
aad
xchg
jmp
in
push
adc
pop
sub
add
imul
pop
jg
movsl
dec
shrl
mov
movsl
xor
sub
es
jg
xlat
sub
and
xor
clc
std
dec
dec
in
orb
ds
push
xor
inc
add
push
outsb
push
out
out
sbbb
jecxz
jno
rorb
push
ret
push
or
aaa
test
out
popa
int3
dec
sub
lcall
mov
pusha
xchg
lea
call
das
mov
mov
addr16
cmp
sub
xor
mov
data16
pop
imul
mov
rol
jb
test
mov
push
gs
test
icebp
es
cld
push
out
mov
pop
and
fiaddl
ljmp
sarl
xchg
mov
sub
and
dec
add
test
aad
push
scas
xor
orl
imul
xor
iret
out
add
fbld
mov
lods
push
and
cmp
push
popf
or
jle
jl,pt
fwait
stc
rorl
push
jnp
repnz
xorb
pop
mov
mov
les
xor
cld
out
idivb
mov
push
and
fistpll
cltd
fsubr
pop
and
cli
cmp
bound
jne
jmp
aad
jg
int3
sbb
inc
pop
sbb
pop
in
aam
pop
sub
ss
and
pop
and
gs
jbe
test
mov
or
mov
ret
ds
mov
mov
outsw
inc
adc
jae
mov
fisttps
mov
mov
jl
jns
loopne
aas
cs
lock
adc
pop
popa
sahf
and
jns
hlt
inc
mov
push
sbb
fsubrl
jmp
movsb
mov
lods
xchg
popa
inc
lretw
lcall
pop
test
mov
or
fistpl
dec
cmpsl
pop
cmp
sub
sbb
js
int
sub
fsts
les
pop
adc
lods
jp
lods
rcrl
sti
bound
jb
inc
fs
xor
lret
imul
fildll
pop
fidivl
jb
push
or
sbb
dec
xchg
test
jl
or
call
cmpsl
mov
or
push
dec
or
push
push
insb
jae
lret
aaa
fiaddl
sbbb
mov
call
pop
pop
in
gs
data16
or
stc
orb
leave
je
fidivrs
cmp
xchg
pop
fnsave
or
xchg
add
jle
sbb
into
pop
insb
push
or
and
xchg
cmp
inc
fnstsw
jo
out
pop
jo
adc
jb
lcall
mov
loopne
push
lahf
fistpl
rolb
int3
shlb
adc
adc
jle
loopne
lahf
iret
sub
sahf
push
mov
repz
push
cmovbe
mov
pop
cmp
add
cs
std
lock
add
pop
inc
inc
repnz
xor
nop
das
sbb
in
lahf
mov
adc
gs
mov
testl
dec
out
test
push
test
in
push
sub
mov
aaa
sarb
data16
shlb
adc
aaa
test
jne
imul
dec
gs
lock
add
adc
or
push
mov
repz
add
int3
mov
fmuls
lret
lds
mov
nop
cli
lods
fwait
clc
add
popf
cld
xchg
push
fsubr
mov
daa
mov
jae
jmp
mov
sbb
push
push
fmull
js
sahf
data16
outsl
sub
loop
mov
cmp
mov
nop
and
xor
cmp
popa
sbb
push
cmp
dec
aam
fwait
add
mov
push
cltd
pop
and
sbb
test
xchg
daa
cmp
push
push
dec
and
ljmp
inc
test
mov
mov
or
mov
or
movsb
xchg
adc
sub
mov
out
push
lock
xor
push
addl
addb
adc
mov
lret
xchg
cmp
push
div
pop
imul
sbb
pop
push
mov
sub
mov
sub
push
xchg
lods
nop
jo
int
add
pop
inc
add
icebp
sarb
xchg
sbb
jne
repz
imul
pop
movsb
and
leave
lahf
inc
mov
movsb
xorb
mov
lret
cmpsb
sbb
mov
mov
pop
cmpsl
les
loope
jge
imul
xchg
inc
test
pushf
mov
fistps
jo
adc
xchg
insl
fisttpl
push
repnz
dec
xor
cmp
ret
in
ret
dec
imul
inc
insb
vminsd
dec
pop
mov
arpl
sub
lcall
subl
lahf
jmp
sahf
icebp
repz
or
in
addr16
or
ret
insl
mov
in
inc
outsl
xchg
je
pusha
dec
mov
adc
gs
mov
daa
jns
push
fwait
lcall
lcall
dec
sbb
cmp
scas
fdivr
repz
in
mov
mov
in
out
data16
mov
inc
inc
mov
cmp
stos
dec
jb
int3
pop
sbb
jbe
enter
adc
loope
cmp
jmp
mov
inc
fisttpl
xor
pop
mov
mov
add
shll
cwtl
test
xor
gs
add
mov
push
mov
pop
negl
pop
cmp
in
movsb
dec
xchg
fiaddl
jne
cmpsl
push
xchg
mov
and
sarb
idivb
aas
bound
add
sub
das
sub
fists
jb
cmovl
jo
lcall
lret
shll
movsl
jae
adc
sub
imul
cmp
call
les
xchg
xchg
and
sub
out
adc
stc
and
icebp
call
sti
jmp
popf
jae
push
push
or
repnz
push
jecxz
ret
push
and
push
aam
int3
and
jge
sbb
cli
adc
dec
sbb
repnz
roll
xchg
dec
mov
cltd
orb
adc
cmp
ret
bound
cld
dec
and
gs
test
dec
out
movsl
sub
push
scas
xor
dec
loop
pop
xchg
sub
bound
imul
jno
fsub
cld
test
testb
imul
and
sbb
ret
jo
jmp
adc
mov
sahf
rorb
movsl
xchg
stc
fisubrs
addl
or
inc
lcall
sub
ja
add
push
gs
mov
es
push
mov
jle
imul
adc
ja
add
cmpb
pop
xchg
cmc
jmp
scas
adc
ljmp
adc
in
push
jns
fwait
mov
icebp
mov
jle
xor
pop
lock
dec
mov
xchg
jnp
add
cli
adc
out
xchg
sarb
mov
xor
cmp
scas
cmp
adc
int
cmp
add
gs
iret
adc
push
std
jbe
xchg
test
or
mov
ljmp
push
lds
testb
das
and
shll
jb
inc
sarl
loope
and
or
repnz
aas
sub
adc
cmpsb
imul
pop
fimull
out
mov
or
arpl
shrb
dec
dec
mov
sbb
jbe
ret
or
stos
ds
sub
fcompl
stos
inc
jae
mov
mov
cmp
dec
pop
movsl
cmc
dec
mov
cmc
mov
mov
dec
mov
xchg
inc
unpckhps
and
lods
mov
sbb
xchg
dec
xor
call
in
inc
lcall
sbb
cmpsl
in
and
and
test
or
cwtl
stos
loope
mov
bound
add
pop
ds
inc
dec
pop
jnp
jne
cwtl
hlt
loope
imul
test
xor
lods
inc
outsl
repnz
jbe
stc
jo
filds
pop
stos
orl
dec
cmp
add
cwtl
into
scas
addr16
lret
mov
aam
xlat
xchg
adc
dec
test
push
in
push
pop
or
fisubrl
iret
xlat
sub
sbbb
out
cmp
jmp
and
arpl
imul
mov
sub
mov
arpl
cmp
outsb
adc
negb
mov
cwtl
jne,pn
push
jl
cmp
mov
stc
and
add
in
cltd
lock
mov
inc
cmp
sbb
stos
inc
mov
in
or
mov
ss
sti
cld
pop
repz
cmp
pop
jp
xchg
cli
pop
dec
xchg
shll
and
imul
push
scas
fs
orb
inc
adc
cmpsl
decl
push
into
leave
insl
fidivrl
dec
cli
lret
sbb
and
inc
mov
inc
mov
sti
mov
dec
pop
push
in
mov
or
sub
and
jl
das
aad
or
push
rcll
in
mov
fidivrl
push
in
sub
xor
call
pop
sbb
lods
jmp
sbb
mov
add
aaa
fsubr
xchg
jge
cmp
ficoms
push
and
sub
xor
lock
sbb
cmp
int3
jl
mov
xorb
lods
sub
jge
subl
pop
fnstcw
sahf
or
into
inc
mov
inc
push
sti
decb
adc
adc
cmp
jmp
cld
cmp
imul
lock
mov
jmp
xchg
inc
icebp
shrl
ds
lds
xchg
lods
and
jae
pop
sub
add
dec
and
fsubrs
mov
mov
push
imul
fs
pop
xlat
adc
mov
icebp
mov
pusha
or
movsl
or
out
sub
adc
fisttpll
bound
sbbb
push
movsb
cltd
inc
notl
xor
and
cld
add
adc
imul
mov
mov
xor
rcll
inc
push
pop
inc
cmpsl
arpl
push
nop
je
movsb
push
inc
dec
in
push
push
movsl
in
sbb
push
outsb
xchg
xchg
in
mov
fsubl
sahf
mov
inc
pop
fiadds
jno
cmpsl
inc
lds
aad
mov
inc
add
jae
test
test
adc
sbb
mov
rcl
jp
les
or
push
js
mov
jg
scas
mov
int
dec
lret
or
cmpsb
enter
push
out
mov
cmp
dec
lret
inc
mov
inc
lds
test
fcompl
out
addr16
cmpb
sbb
or
xor
push
adc
and
mov
add
cmpsl
jge
shrb
sbb
xor
and
pusha
lahf
lods
pop
pop
inc
ficoml
jmp
mov
iret
jl
mov
push
mov
sbb
out
test
sub
push
xchg
pop
fnstenv
pusha
stos
inc
sub
pop
shr
cld
xchg
out
cmc
lahf
xchg
jg
and
pmaddwd
mov
cmp
fistpl
push
push
aaa
xor
sbb
ds
cli
cmp
sub
push
dec
pop
rolb
in
or
mov
sub
add
mov
cld
or
xor
jne
jnp
cltd
insb
or
xchg
sub
js
pop
push
inc
pop
iret
jae
push
cld
cli
mov
scas
sbb
sub
fsubl
or
outsl
jecxz
test
mov
pop
xor
cmp
or
mov
in
push
fbld
ljmp
negb
inc
xchg
scas
pop
xchg
lahf
insb
lock
pop
jae
nop
mov
fldt
in
push
adc
inc
sub
das
xchg
out
jno
sub
shll
or
mov
push
xchg
je
icebp
in
mov
add
es
lcall
push
fnstenv
xchg
push
jae
mov
popa
push
add
mov
mov
add
pushf
mov
in
jnp
js
fcmovb
jo
cmp
repz
cmp
adc
fwait
cmp
cmp
mov
cld
add
or
jae
mov
mov
jl,pt
into
jnp
cmc
dec
jge
pop
sbb
cmp
test
mov
fisttpl
cltd
mov
jmp
mov
pop
dec
inc
push
and
mov
mov
pop
into
loopne
call
jmp
mov
call
fdivs
inc
int3
lock
insb
jno
jno
idivl
call
cmp
sub
outsb
call
lods
jae
movsb
add
movsl
dec
cmp
and
pop
inc
into
xor
inc
fdivs
jmp
mov
dec
adc
push
mov
testl
lret
dec
adc
divb
adc
pop
je
int
xor
inc
ror
ds
std
test
in
mov
cld
imul
sbb
sub
sbb
inc
mov
jge
data16
in
mov
xchg
enter
cmpsb
push
jb
jge
inc
test
stc
dec
and
pop
jae
jg
jge
sub
push
fdivs
push
outsb
test
lea
lods
xchg
sti
lods
pop
repz
jo
cwtl
sub
jg
ja
push
adc
fnstsw
flds
mov
jg
sub
add
movsb
and
xor
jae
test
test
lods
push
sbb
bound
mov
dec
in
repnz
out
add
fcmovu
inc
adc
xor
ror
stos
cmp
dec
inc
jl
sahf
dec
mov
lods
xor
push
les
stos
pop
push
scas
dec
mov
mov
leave
pusha
push
nop
arpl
push
xorl
repz
cmp
push
jmp
mov
les
pop
mov
sub
addr16
adc
xchg
push
mov
cmpl
cmp
mov
sbb
popa
outsl
mov
push
lahf
adc
xchg
sbb
cmp
pop
mov
push
xchg
lods
cld
lret
imul
or
lea
jne
sahf
cmp
fs
mov
sub
and
mov
ds
rcr
rcll
scas
jl
filds
mov
iret
es
into
mov
lods
jae
popf
js
stos
lea
add
cmp
or
xor
ror
and
jg
fistps
lret
mov
je
xor
lods
sbb
ficompl
in
clc
xchg
mov
setno
xchg
loope
xchg
mov
call
adc
out
arpl
add
in
ret
pop
repz
dec
mov
mov
mov
leave
je
sub
mov
dec
xchg
mov
fmull
ret
clc
cmp
sub
cld
bound
mov
mov
dec
mov
test
or
movsl
fmuls
inc
cmp
inc
stos
outsl
sbb
cmp
adc
cmp
sub
je
xchg
out
xor
jne
aam
repnz
push
sbb
or
std
or
add
sbb
js
mov
filds
sahf
jns
mov
xchg
mov
mov
or
fstl
jno
sub
repz
dec
faddp
ja
ficomps
inc
cmp
xor
mov
std
cmpsl
in
sub
xor
and
mov
or
mov
scas
dec
cmp
jns
stos
and
pop
push
jnp
add
divb
enter
sbb
adc
jge
sbb
orb
imul
dec
cmpsl
enter
inc
and
int3
mov
xchg
mov
out
insl
jns
mov
and
cmp
popa
insl
sub
and
fcomp
pop
mov
pop
xor
mov
out
dec
fcoms
xchg
insl
xchg
pop
sti
sbb
int
sub
lahf
jne
and
js
jmp
push
cmpsb
xchg
inc
daa
mov
dec
ja
lahf
inc
movsb
pushf
fistpl
mov
adc
negb
sbb
rclb
shll
mov
test
mov
adc
subb
lcall
ja
cmpsb
lea
or
mov
add
mov
jne
xchg
push
and
cli
in
cmc
out
mov
fidivrl
pop
lods
hlt
lret
dec
lcall
cmp
dec
mov
into
pop
fs
sub
sti
rcrl
movsb
stos
dec
or
pop
out
sub
pop
push
sbb
xor
xchg
push
pop
int
lcall
xchg
xchg
and
popl
mov
adc
dec
pop
mov
cltd
inc
pop
ljmp
pop
cmc
and
mov
add
cmp
adc
jno
aas
xchg
stc
lods
lahf
add
xchg
lods
xchg
mov
inc
dec
js
ds
sub
push
pop
or
icebp
cwtl
inc
mov
push
test
negl
test
sub
div
out
add
push
dec
pop
push
cmc
jge
clc
divb
std
out
push
jmp
stos
cltd
addr16
andps
and
je
sbb
rolb
gs
mov
pop
jl
push
popf
xlat
xor
jl
fdivrl
pop
dec
repz
jbe
mov
pushf
mov
xchg
arpl
cmc
aam
std
mov
test
ss
xlat
xor
in
pop
pop
mov
movsb
sahf
push
ds
das
inc
fistpl
dec
xor
xor
xchg
test
cmp
hlt
and
divb
and
jecxz
add
into
testb
pop
sbb
ds
xor
mov
sub
cmp
mov
popf
lcall
aad
add
fnclex
hlt
icebp
mov
loope
or
js
jb
pop
mov
sar
push
xchg
movsl
in
mov
xchg
jle
test
jbe
mov
cwtl
add
jne
push
inc
dec
jb,pt
leave
aas
jecxz
sbbb
shlb
cmp
and
stos
loope
xor
stc
mov
je
or
test
aam
ret
push
shl
pop
pop
adc
mov
iret
cmc
xchg
mov
jmp
xor
push
sub
in
ds
adc
and
pop
ret
mov
scas
fwait
movsb
inc
js
sbb
shl
add
mov
arpl
mov
adc
pop
ds
in
sub
hlt
mov
aaa
inc
or
or
and
mov
loopne
adc
jo
push
sub
jmp
push
mov
mov
xchg
pop
pop
push
shll
daa
push
adc
xor
cld
xor
hlt
sbb
andb
mov
insb
les
addr16
push
or
cmc
sub
mov
jg
orb
jns
test
out
sbb
push
insb
pushf
shl
int
adc
lods
xchg
xchg
mov
call
and
xchg
sub
out
mov
in
icebp
les
aas
out
and
lret
outsb
push
and
call
mov
in
arpl
ljmp
imull
push
xor
and
push
mov
jae
lods
cmpsb
and
pop
roll
movsb
xor
mov
fcos
rorb
in
push
std
inc
lahf
rcrb
add
push
adc
add
outsl
loopne
xor
or
push
xor
adc
inc
rcll
lcall
mov
repnz
push
lret
adc
outsb
insl
rclb
mov
clc
idivl
xlat
clc
test
es
iret
out
ss
into
movsl
mov
ljmp
dec
xor
dec
and
inc
mov
fstpt
dec
mov
or
sti
xor
out
lahf
mov
lcall
inc
in
dec
outsb
dec
push
sbb
ficoms
cltd
mov
es
scas
sbb
popf
addr16
and
out
ror
shrb
loop
sarb
imul
inc
andb
hlt
ss
testb
pop
jecxz
sbb
cwtl
outsb
sti
jb
sbb
jl
mov
mov
and
xor
push
sbb
add
mov
test
dec
dec
xor
loopne
xor
lock
mov
rcrl
jmp
fnsave
and
imul
xchg
fcomps
push
xchg
dec
jne
popl
in
xorl
jg
mov
xchg
push
fistl
sahf
push
and
stos
leave
push
movsb
pop
sbb
popf
mov
in
insl
aaa
fldenv
fsts
aas
int3
sbb
imul
mulb
jbe
insb
jl,pn
lret
loopne
ds
xchg
mov
in
inc
mov
sub
sub
add
rcrl
mov
mov
iret
lcall
inc
test
enter
int
dec
adc
xchg
mov
jo
xor
jp
xor
repnz
xchg
aaa
lock
outsb
mov
mov
mov
jecxz
sub
rcll
rcrl
lea
jmp
movsl
jl
fistps
cld
pop
stc
mov
push
icebp
mov
cld
pop
push
enter
shll
arpl
mov
gs
pop
ljmp
adc
xor
mov
in
push
add
test
fs
hlt
xor
sub
rcll
add
sbb
and
sub
adc
lods
xchg
clc
mov
jb
clc
mulb
daa
sti
aad
movsb
pop
sub
aaa
addl
inc
jecxz
in
clc
gs
lret
jno
or
cltd
pop
mov
sub
cmc
adc
insb
xor
enter
jp
xor
out
lds
enter
fiaddl
int3
sub
fwait
ds
sub
sub
sbb
outsb
push
out
push
add
notl
mov
lret
jo
std
call
cmc
hlt
or
cmp
sub
adc
cwtl
aas
cmp
push
mov
sub
insl
outsb
mov
call
pop
and
inc
and
int
clc
ja
xor
jnp
lret
popa
es
mov
inc
movsl
jle
jge
imul
jecxz
adc
push
mov
inc
cmc
shlb
mov
or
incb
inc
bound
sub
inc
aaa
into
loope
rcrb
sub
out
inc
pop
sahf
fdivrl
jmp
sbb
sahf
fcmovbe
stc
mov
popf
push
cs
and
lods
or
mov
in
inc
stos
push
je
shlb
repz
lock
add
andl
pop
jo
add
ds
ficompl
jg
icebp
gs
ljmp
and
je
lahf
lret
pop
push
gs
mov
sbb
jo
sahf
pop
adc
repnz
or
mov
aas
mov
mov
lret
addr16
aad
mov
mov
call
mov
test
dec
sbb
aad
fists
rorl
push
fistpl
iret
pand
ret
pop
bound
repz
or
int
arpl
xor
mov
addr16
jnp
inc
dec
xchg
cwtl
sahf
sbb
inc
mov
xor
mov
dec
pop
jmp
shrl
fldl
xchg
pop
cld
cmp
aas
and
xchg
pop
xchg
inc
mov
inc
xor
out
mov
cltd
cwtl
dec
stos
push
ror
das
cmp
adc
push
push
mov
push
out
cmc
nop
or
pop
xchg
mov
ljmp
in
call
push
movsl
addr16
addr16
xchg
xor
xchg
mov
adc
jecxz
daa
ret
jae
mov
rol
or
notl
dec
pop
xchg
inc
push
test
call
xor
cmp
loop
xor
sub
sub
push
or
mov
leave
cli
shrl
movsb
and
dec
mov
xor
scas
and
dec
or
dec
rorb
jle
pop
fidivrl
shrl
cs
leave
push
cld
jg
jp
push
hlt
in
fs
xor
push
mov
andl
into
cmp
fwait
jle
and
xor
aad
daa
inc
popf
int3
repnz
or
adc
rorb
mov
fwait
pop
jg
inc
dec
in
mov
lret
repnz
jmp
jbe
enter
sub
leave
inc
iret
int3
mov
mov
inc
pushf
sahf
inc
push
mov
fcomip
scas
sbb
adc
mov
dec
jmp
cmp
pop
rcll
lock
sarl
inc
sbb
loop
scas
and
cld
icebp
jmp
pavgb
xchg
movsl
xchg
inc
add
arpl
push
idivb
loope
iret
loopne
loope
loopne
push
std
fstpt
jbe
into
cld
loope
push
mov
adcb
xchg
push
out
mov
bound
or
cmp
fistps
cmpsb
add
mov
cld
sahf
xor
mov
fcom
sbb
sbb
dec
int3
cmp
mov
aaa
ret
push
jb
inc
push
jg
mov
jbe
mov
sbb
jns
jo
into
and
mov
or
cmp
in
shlb
dec
ret
cwtl
in
pop
jae
jge
enter
adc
cmp
inc
cld
dec
pop
xchg
insl
fildl
popf
stos
or
lods
scas
cmpsb
jae
or
add
mov
mov
xor
push
test
lock
and
jecxz
popa
movb
mov
push
add
scas
push
movsl
es
sbb
neg
xchg
pop
imul
cmp
icebp
jbe
pop
sub
leave
clc
inc
xchg
adc
lahf
pusha
fisubs
jecxz
sbb
movsb
adc
movsl
dec
xchg
jae
push
daa
out
sbb
cmp
fisubrl
mov
mov
es
pop
aas
int3
jge
jmp
adc
adc
insb
jecxz
xchg
inc
cwtl
jne
out
push
or
divb
dec
or
movb
fisubl
pop
std
mov
or
sbb
push
nop
pusha
lret
and
lds
jge
push
or
inc
imul
fists
mov
adc
cmp
add
test
mov
insl
fwait
ret
dec
pop
pop
adc
leave
movsl
cmp
call
add
mov
mov
inc
lahf
aad
call
pop
mov
je
push
mov
cmp
idivb
mov
shl
jo
int3
in
pop
or
pop
dec
mov
in
xor
inc
cld
push
lods
mov
pop
jle
xchg
leave
cmp
pop
xchg
adc
in
or
scas
or
fdivrs
mov
cmpsb
repnz
dec
push
or
movsb
jecxz
aam
aas
push
mov
lret
dec
mov
and
xor
cmp
xor
lods
mov
enter
and
and
cwtl
dec
aas
jp
fisttpl
clc
imul
jp
pushf
sub
out
aam
mov
or
sarb
outsb
sarl
sbb
mov
fdiv
sbb
movsl
mov
es
into
pop
or
xor
pop
lret
mov
lret
xor
xchg
popw
movsl
gs
adc
dec
and
jne
popl
add
in
cltd
inc
testl
inc
push
dec
sbb
aas
xor
pop
xchg
adc
jmp
dec
inc
and
mov
mov
in
add
hlt
cmp
add
push
ds
arpl
sbb
xlat
in
adc
cmc
loopne
and
subb
hlt
sarb
mov
inc
ret
jecxz
sub
inc
daa
sahf
in
aaa
jle
repnz
mov
pop
add
in
adc
pop
xchg
mov
lods
mov
pop
mov
add
std
jmp
outsb
jl
cld
mov
test
adc
addr16
lret
mov
mov
lods
jno
gs
mov
loop
repz
push
shrl
pop
ret
jge
inc
nop
pop
sbb
lcall
or
or
fs
enter
ljmp
adc
xlat
scas
pop
loope
in
test
cmpl
mov
jp
cmp
pop
lcall
xlat
and
rcrb
push
lea
dec
hlt
and
cmp
hlt
and
pop
flds
mov
outsb
int3
insb
xchg
aad
inc
fisubs
icebp
loop
ret
xchg
outsb
adc
lret
jae
mov
in
mov
lret
in
pop
imul
js
cmc
popa
cmpsb
xor
stc
out
in
insb
je
out
lea
sahf
dec
push
andb
push
test
and
push
cwtl
scas
popa
jno
adc
add
cmp
pop
int3
lret
mov
sti
pusha
mov
cmc
loop
inc
call
cmc
in
repz
popf
mov
fcoms
fstps
mov
or
cld
aad
sub
pop
in
aam
jae
test
lods
pop
mov
lods
cmp
jge
cld
roll
mov
cmp
sub
pop
sub
subl
pop
fnstsw
out
outsl
sti
mov
adc
lock
and
pop
cmp
testl
xchg
rcrb
insl
dec
les
xchg
fstps
mov
out
jns
push
jmp
mov
inc
dec
mov
int3
inc
mov
inc
ss
jle
add
and
scas
loop
nop
pushf
insb
push
mov
push
sub
sub
xor
movsl
popl
mov
dec
lcall
pop
data16
daa
testl
mov
or
lcall
push
push
jle
loope
cld
pop
xchg
dec
mov
mov
pushf
mov
out
sarl
pop
repnz
lea
shll
push
push
inc
lret
sub
das
lods
outsl
mov
jp
inc
cltd
rolb
aam
xor
sahf
lods
es
sbb
inc
mov
jno
fdivs
mov
ja
push
push
adc
xchg
push
ljmp
negl
or
or
imul
cld
bound
icebp
scas
jne
xchg
lock
jbe
repnz
test
stos
jl
xor
and
outsb
xchg
std
fnstcw
add
sub
fwait
movsl
movsb
cmp
std
sahf
pushf
gs
mov
xlat
fidivl
dec
pop
xor
cltd
inc
or
sti
stos
push
xchg
daa
out
mov
dec
jg
scas
mov
js
test
loope
rol
xor
rcrl
add
jl
cltd
mov
loop
sbb
push
out
sub
sub
pop
jmp
mov
mov
popf
jp
mov
in
test
or
outsl
sub
mov
add
mov
cli
mov
pushf
pop
icebp
flds
loop
notb
lcall
cmc
mov
sub
or
roll
xor
rcrb
cwtl
mov
add
adc
xor
pusha
iret
cli
adc
rorb
adc
in
lods
icebp
das
and
arpl
pushf
outsb
dec
adc
mov
cmp
dec
sbb
jne
jbe
cmp
data16
stc
inc
rcrl
push
sbbl
xor
add
int3
or
sbb
loopne
push
add
xchg
mov
cli
ret
gs
fsubl
cld
enter
stos
xor
icebp
pusha
iret
daa
popf
imul
cmpsb
push
test
aam
into
stos
imul
mov
test
mov
dec
mov
inc
adc
lret
xchg
pop
or
mov
sub
ret
ja
stos
adc
push
pop
enter
mov
subb
mov
popl
imul
lock
or
cmp
out
mov
fs
mov
fdivrl
loopne
cltd
dec
dec
xchg
sub
addr16
shrl
imul
mov
push
in
or
jge
inc
into
push
xor
jne
mov
inc
out
shl
outsb
mov
insl
sub
pop
add
pop
aam
outsl
xchg
loope
out
adc
ficomps
push
and
mov
mov
cmp
je
and
daa
dec
push
jl
cmc
cltd
popf
jmp
push
rcrb
adc
arpl
call
xor
add
inc
daa
xor
mov
sub
rcrl
pop
xor
iret
out
lret
insb
flds
js
lock
jno
andb
mov
mov
cli
imul
mov
xchg
scas
inc
ret
imul
pop
mov
mov
push
xchg
sbb
lret
cld
lock
dec
in
push
mov
outsl
test
pop
mov
jbe
pop
test
addr16
mov
and
push
aad
out
push
or
fdivrs
or
test
adc
or
mov
mov
test
sahf
adc
push
fadd
xorl
ljmp
push
xorl
insb
int
out
and
stos
dec
fcomi
mov
xchg
pusha
adc
adc
jecxz
pop
aas
es
divb
lret
dec
and
lds
scas
sti
fwait
inc
ss
add
addr16
nop
and
sub
jmp
aam
inc
cwtl
call
sti
mov
ja
in
push
hlt
jge
rclw
xor
jnp
jl
and
lods
xchg
inc
sbb
adc
jle
sbb
adc
lds
dec
mov
jecxz
mov
and
pushf
and
add
lahf
push
imul
mov
mov
xchg
in
mov
push
push
enter
pand
xor
sbb
cwtl
sbb
jmp
div
ret
cmpsb
dec
sbb
enter
jns
xchg
xchg
mov
mov
cmp
dec
push
and
adc
sbb
sbb
jp
stc
dec
dec
pop
rcrl
inc
pop
mov
in
sub
clc
mov
iret
add
loopne
dec
xor
bound
inc
pop
fsts
dec
pop
in
dec
xchg
test
outsl
inc
or
mov
xchg
mov
sub
xchg
and
rcrl
add
xchg
dec
ljmp
push
fists
out
loopne
fsubrp
xor
xor
inc
or
arpl
sub
mov
dec
shrw
jb
inc
sub
stc
imul
dec
es
mov
cmp
out
pop
pop
xchg
std
push
pop
pop
sub
cmp
cmp
inc
fnstenv
movq
cmp
negl
shl
adc
inc
cmc
icebp
int3
aaa
cmp
dec
xchg
mov
push
push
test
jmp
aam
jae
push
add
enter
ss
adc
sub
dec
jbe
sub
or
inc
hlt
push
movsl
dec
xlat
mov
cmp
lods
ljmp
jmp
mov
fs
bound
or
rcll
jns
mov
mov
fdivs
rorb
lret
pop
inc
ret
and
jnp
imul
pushf
push
ret
das
sbb
fdivr
cmp
mov
pop
sub
inc
and
sbb
les
push
jnp
inc
shlb
add
call
test
inc
add
or
mov
shr
jg
mov
push
mov
mov
or
mov
int
pop
jne
mov
push
imul
mov
cmp
pop
or
jecxz
sub
pop
aad
push
scas
inc
clc
hlt
or
rcrl
enter
repnz
flds
add
es
mov
cltd
mov
xchg
lds
cli
lcall
mov
mov
mov
pushf
sahf
pop
ljmp
dec
sub
push
lea
lods
and
and
xor
data16
mov
in
xchg
sahf
rolb
xchg
das
mov
inc
je
jnp
jmp
adc
lock
repnz
popa
arpl
pop
ss
aaa
ja
ret
jb
inc
scas
push
dec
negb
pushf
dec
ret
add
mov
lods
inc
fs
sbb
test
jne
xor
lods
arpl
cld
xchg
sbb
int3
fwait
outsl
lret
mov
mov
loope
scas
mov
test
out
fwait
cld
sahf
test
jmp
dec
cmp
sbb
inc
pop
xlat
or
xchg
mov
data16
inc
clc
je
cmovnp
dec
idivl
movsl
dec
jb
sub
out
sub
lods
dec
lds
subb
and
mov
lret
mov
jns
push
sub
int3
stc
jae
jmp
inc
pop
in
pusha
test
test
jo
push
add
in
jne
aaa
lods
add
inc
or
jo
jmp
cld
add
lret
cmp
mov
push
xchg
push
push
jo
leave
mov
ficompl
std
xor
fcoms
popf
idiv
or
pop
pop
and
gs
push
cmp
sbb
jno
and
add
xor
jp
cmp
or
sbb
lods
mov
xchg
jns
out
mov
filds
cld
in
and
or
insl
push
mov
dec
les
movsb
sahf
lret
and
into
out
hlt
pusha
jle
ret
push
rclb
leave
faddl
lret
int3
jmp
sbb
mov
insl
ja
xlat
testl
movsl
jp
push
xchg
hlt
sahf
sbb
pop
adc
push
movsl
adc
or
inc
pop
mov
jb
out
fisttpl
rcrl
adc
inc
sub
aaa
repz
jle
shrl
mov
pop
mov
mov
and
mov
pusha
js
dec
rorl
mov
mov
and
inc
arpl
jge
je
stos
lret
loopne,pn
mov
lds
jmp
pop
sahf
cli
cli
mov
addr16
dec
js
cmpsb
or
loop
cmc
add
cmpb
jbe
andl
aas
sub
ljmp
and
push
pop
int3
js
jge
out
les
push
lds
js
or
jge
pop
popf
daa
fs
loope
xchg
pop
ljmp
cwtl
pop
jecxz
bound
dec
sti
hlt
push
in
aaa
scas
rcll
arpl
jle
shl
fdivs
test
mul
jno
insb
jge
insl
push
xorb
scas
mov
xor
mov
fbstp
dec
ss
push
sti
mov
sub
icebp
and
mov
pop
gs
fs
ror
sub
or
cmpb
xor
inc
cs
rorb
lods
loope
rcrl
pop
or
sbb
aam
cmp
gs
clc
cmp
mov
adc
push
shr
fisubs
xchg
test
jmp
mov
hlt
fldl
scas
jecxz
js
ds
ljmp
or
sub
or
push
sbb
lods
mov
fistpll
push
push
cmc
ret
es
repz
dec
or
aas
mov
outsb
jae
cli
lret
pop
xor
cli
stos
subl
notb
jne
out
pop
fadds
push
mov
ss
pushf
mov
push
ds
or
xchg
scas
shrb
xchg
aad
scas
sub
arpl
enter
insl
inc
icebp
scas
xor
xor
fsts
pop
mov
scas
or
mov
dec
iret
add
cmp
cld
and
push
movq
cmp
fst
mov
jne
mov
enter
xor
jmp
xor
sub
mov
push
jg
jo
cmp
rclb
shl
movsb
imul
movl
lock
mov
les
mov
xor
pop
fmull
lret
mov
mov
mov
flds
loopne
outsl
aam
inc
mov
mov
bound
iret
jb
addr16
int3
mov
cmp
in
xchg
mov
cmp
jl
or
jb
fimull
test
fwait
jne
xchg
dec
test
sbb
out
cltd
cmpsb
popf
pop
push
xor
dec
xchg
repnz
pop
scas
pop
gs
ja
sahf
idivl
aam
or
in
inc
clc
dec
dec
es
aas
testb
or
push
shl
cmp
pop
mov
shrl
stos
mov
mov
je
int
ljmp
push
lods
mov
push
jmp
iret
test
test
stc
and
sbb
fistpl
jmp
mov
call
call
mov
lods
xchg
xchg
or
shlb
or
or
inc
push
and
shlb
loop
mov
insl
into
pusha
call
xor
inc
sub
imul
out
cltd
mov
in
pop
sub
dec
push
pop
aaa
xchg
aas
lret
sbb
xor
and
ret
dec
adc
mov
push
cmp
jle
add
and
cmp
lahf
inc
orl
ret
lcall
mov
fidivrs
outsl
pop
popa
out
movsb
iret
dec
ret
mov
jo
sbbb
int
fprem1
mov
fisttpl
mov
hlt
lods
sub
and
aam
pop
or
push
inc
mov
adc
nop
int
push
movsb
fsts
fisubrl
loopne
ljmp
or
pop
pushf
movsl
or
outsb
inc
imul
mov
mov
push
imul
dec
cmp
add
testl
aam
push
sbb
jae
movsb
lock
loope
dec
xchg
push
rcrb
xor
pop
push
fnstcw
dec
cmp
inc
jbe
adc
rcrl
mov
xlat
out
ret
repnz
or
dec
jg
subl
mov
outsl
xchg
sbb
or
xorl
faddl
sti
nop
xchg
ror
in
filds
bound
mov
popf
cmp
neg
jp
cmp
aam
pop
addr16
xor
mulb
lds
fs
jecxz
push
push
dec
int
inc
pop
cmpsb
or
lret
rcll
inc
arpl
in
dec
sub
sarb
jmp
rcrb
xchg
movsl
xchg
in
gs
lret
pop
pop
inc
cmp
rolb
jecxz
and
cmp
pop
dec
std
out
aaa
or
hlt
add
movsl
mov
stos
jnp
xchg
mov
and
push
adc
cmp
mov
orl
mov
mov
out
lahf
popa
jne
rcll
mov
dec
mov
cld
enter
push
pop
pop
adc
push
cmp
cs
pop
dec
xor
push
test
lock
sub
mov
leave
pop
jg
xor
pop
js
iret
movsl
scas
jbe
cmp
pop
sti
xchg
xchg
aaa
pop
jbe
imul
in
adc
shll
cmp
xchg
scas
es
pop
or
xor
stos
jp
insl
mov
call
sbb
push
sub
xorb
mov
out
inc
jmp
mov
aaa
mov
inc
pop
mov
popf
push
in
rcr
in
mov
jnp
add
outsl
cmp
fisttpll
call
mov
mov
je
jg
popf
int
and
inc
lahf
clc
adc
xchg
push
cwtl
cmp
rol
insl
sbb
dec
leave
or
inc
push
push
cwtl
push
in
or
sub
out
push
les
pop
pusha
rclb
push
inc
adc
and
xor
xchg
jbe
pushf
repz
subl
or
dec
cmp
push
push
orb
cmpsb
out
or
ficoms
stos
sbb
paddusb
lret
xor
das
xchg
shll
mov
cmp
call
or
and
dec
fdivrl
xchg
jns
jg
jo
cmpsl
xlat
xchg
iret
subb
sub
and
push
dec
dec
inc
jle
aas
int3
adc
pop
add
hlt
lret
xchg
inc
xor
cmp
push
push
test
int
jg
sahf
mov
call
aad
dec
cmc
cmpsl
adc
and
push
or
mov
mov
add
sub
outsl
mov
mov
out
sub
mov
or
pop
sbb
or
push
popa
mov
adc
rorb
push
push
imul
or
nop
xor
dec
or
inc
mov
pop
sbb
and
pop
das
call
mov
test
jno
dec
lret
pop
mov
xchg
mov
cs
push
shrb
pop
popf
push
fidivrs
mov
shlb
test
sbbb
xchg
cmpsl
js
sbbb
mov
mov
movsl
and
or
push
pop
or
scas
xchg
mov
mov
mov
xchg
adc
lds
dec
sti
pop
lods
push
mov
popa
js
sub
sbb
ds
mov
sahf
push
dec
movsl
ljmp
pop
lcall
pop
ds
jb
jp
and
out
cmp
jp
jle
mov
ljmp
bnd
cwtl
js
insl
in
and
or
mov
aad
arpl
add
out
lret
jns
add
jg
xor
negb
adc
out
fistpll
fwait
cli
push
sti
orl
popa
cli
fsts
fs
push
arpl
mov
mov
adcb
mov
ja
shll
jns
in
leave
out
ss
xchg
mov
push
mov
outsb
gs
pushf
mov
addr16
mov
inc
pop
in
push
enter
cmp
addr16
mov
pop
xchg
insl
arpl
push
pop
cmp
pop
push
xchg
loop
sbb
xchg
call
mov
add
sbb
pusha
adc
mov
dec
add
push
cmp
mov
fisubrs
sub
sub
out
push
mov
jg
cmp
movsl
push
jnp
mov
subl
idivb
aaa
call
dec
push
das
dec
cmp
ret
and
outsl
cmpsb
or
push
xorb
lahf
ret
pop
mov
ret
cld
in
xor
rcrl
call
je
dec
sub
sbbb
mov
shlb
mov
mov
test
loope
shl
fcmovu
hlt
aaa
cs
cmp
cmp
test
fdivrs
outsl
dec
pop
push
pushf
int3
cmp
xchg
adc
in
jae
xchg
add
stos
push
rcr
push
cmpsl
clc
xchg
ds
in
js
ljmp
add
mov
xchg
imul
push
loopne
jmp
out
adc
pusha
pop
push
xorb
into
xchg
cmpsl
pop
jo
push
push
inc
test
ss
dec
mov
test
ljmp
sbb
or
rorl
mov
pop
or
mov
mov
lahf
xor
icebp
sbb
jle
adc
mov
repz
stos
xor
inc
aas
pop
in
sahf
test
push
movsl
xor
and
mov
and
adc
push
mov
jp
pop
cltd
fs
or
aas
or
mov
push
andb
paddusw
es
js
jmp
mov
fmuls
pop
mov
xchg
push
fsubrs
mov
call
mov
ja
adc
jns
add
inc
call
sub
jg
dec
roll
xchg
xchg
xlat
cmpsb
xor
pusha
mov
mov
addr16
xorb
dec
inc
dec
pushf
jns
dec
lock
fdivrs
xchg
daa
mov
and
push
inc
and
popa
test
in
adc
shll
lret
xor
cmc
sub
sahf
pop
sarl
ret
out
dec
mov
loope
xchg
push
icebp
xchg
ljmp
fs
inc
xor
cmp
sub
outsl
enter
ret
jbe
jl
mov
pop
ljmp
add
pop
rorl
jp
clc
bound
mov
ds
pop
aad
ljmp
add
outsb
out
mov
xchg
or
inc
inc
scas
sahf
inc
pop
inc
push
push
dec
and
add
mov
xlat
test
xor
ror
adc
daa
pop
jg
dec
sbb
mov
mov
jmp
sti
mov
mov
jp
lahf
pop
repz
pushl
xor
mov
pop
mov
jb
call
mov
cltd
lcall
or
les
sahf
ss
pop
bound
scas
xor
in
xor
cltd
rcll
in
fadd
call
add
push
pop
cmpsb
mov
stc
ret
xor
push
mov
shlb
cltd
mov
xor
jbe
rcr
std
mov
push
mov
sbb
test
ss
mov
insb
pop
pop
push
shrl
popa
in
std
jl
sahf
lea
cmpsb
adcb
add
jmp
adc
mov
or
inc
imul
imul
ret
dec
aas
mov
mov
in
xchg
jns
loope
mov
cmpsl
or
or
pop
fdivrl
and
cmpsb
add
push
cmp
jl
jmp
and
sbb
mov
loope
in
push
leave
pop
lahf
insb
pop
mov
es
cmp
push
into
popf
xor
jno
xchg
ret
sub
push
mov
aam
cmp
out
xor
adc
fisubrl
add
jno
mov
pop
pop
add
and
popa
jbe
xlat
add
add
popf
dec
outsb
cltd
arpl
push
lret
xchg
adc
pop
adc
xchg
dec
or
aad
pop
mov
loop
push
lret
jb
push
cmp
mov
das
inc
xchg
inc
ss
lods
mov
dec
ret
int
rorb
jnp
testb
xchg
mov
sbb
movsl
test
and
mov
sub
mov
and
add
push
cmc
add
push
jg
sahf
arpl
sub
lods
in
daa
adc
jmp
xor
imul
stos
adcb
or
movsl
test
test
bnd
xchg
push
std
xchg
cld
xchg
inc
flds
and
inc
mov
jae
nop
into
rcrb
das
or
mov
mov
nop
ret
adc
inc
jae
ss
loop
mov
test
call
outsb
hlt
push
mov
daa
xor
fisubl
add
mov
and
jbe
dec
mov
adc
inc
shrb
cmp
call
leave
cmc
cmp
loopne
pusha
inc
mov
je,pn
add
pop
pop
pop
repz
mov
test
xor
or
stos
mov
cltd
lds
cld
add
mov
adc
cmp
je
pop
or
test
pop
adc
jle
jl
mov
out
inc
lods
enter
das
ljmp
jg
fidivrs
outsl
cs
pushf
add
push
inc
mov
fs
mov
cmp
jle
ret
nop
iret
jae
imul
imul
movsl
cmp
add
and
ficompl
mov
aad
adc
cmp
daa
aad
sub
mov
and
jmp
mov
test
lcall
decl
pop
leave
or
or
inc
cld
mov
xor
xchg
mov
lret
jbe
addr16
and
daa
popa
mov
outsb
sbb
mov
cli
movl
cmp
inc
in
data16
mov
sub
dec
sub
scas
jle,pt
mov
aam
js
popf
cs
or
inc
pop
aaa
rcr
ljmp
fcomp
repnz
mov
sbb
cltd
pop
pushf
and
fistl
lret
out
inc
out
andb
and
sub
lock
leave
mov
outsb
dec
ret
cmpsb
mov
sbb
xorl
cmpsl
xchg
xor
nop
inc
mov
daa
push
xchg
gs
sbb
test
imul
xchg
in
call
popf
mull
dec
sbb
inc
mov
lret
xor
clc
add
fidivrl
das
ror
or
imul
mov
jns
add
push
sarl
dec
lcall
xor
or
push
clc
idivl
mov
push
push
adc
push
lahf
xchg
adc
cmpsb
inc
test
repnz
cmp
imulb
push
mov
xor
adc
scas
cmc
out
scas
pop
push
xchg
test
inc
movsl
dec
ret
mov
out
scas
push
cmp
lods
inc
aam
jb
or
into
mov
in
jg
add
jae
push
sar
xor
shl
mov
imul
add
mov
mov
inc
jae
mov
iret
mov
mov
xchg
cmp
lea
fsubrs
out
jg
ficompl
popf
mov
push
pop
lcall
jp
or
stos
mov
in
push
out
addr16
sub
inc
and
pop
jmp
jge
mov
xor
popw
daa
fnop
mov
pop
or
cmp
sti
into
or
stos
inc
mov
cmpl
or
and
in
int
pop
push
shll
leave
outsb
sub
jne
movsl
dec
jns
adc
dec
pop
ss
jb
mov
or
jno
into
cld
add
stc
and
jae
jmp
mov
fwait
pop
lahf
int3
fsubs
push
jne
push
jmp
cmc
and
mov
movsl
call
and
adc
sbb
push
pop
add
cmpsl
pop
xchg
and
shll
mov
inc
xchg
sub
ficomps
sub
push
push
loopne
fs
inc
inc
mov
lahf
std
clc
stos
test
mov
test
hlt
addl
adc
adc
jge
mov
mov
push
xor
dec
into
cld
addr16
mov
fmulp
xor
dec
mov
jge
mov
xchg
cmp
and
insl
call
aaa
mov
pop
mov
push
xchg
add
jmp
and
push
jge
mov
mul
fisttps
sub
jge
fdivl
inc
mov
mov
push
xor
test
ja
inc
lahf
mov
jns
hlt
lock
cwtl
sub
iret
js
lock
and
jge
call
sbb
nop
imull
or
addb
mov
loop
push
rol
push
stos
inc
lds
lods
shrb
cmpl
scas
mov
jae
pusha
mov
mov
add
aam
aad
ret
or
stc
xchg
mov
sub
inc
pushw
add
repz
scas
repnz
es
push
into
or
jg
repz
sub
sbb
inc
mov
ljmp
lock
lcall
pop
mov
js
dec
orl
sub
push
push
fildl
jecxz
pushf
mov
push
bound
int
fwait
mov
test
push
jnp
adc
shlb
pop
jecxz
ds
jne
es
cmp
and
rorb
pop
aas
jle
inc
pop
aad
ret
adc
daa
jne
mov
push
outsb
xchg
imull
in
cwtl
xchg
insl
add
add
jecxz
ljmp
sub
or
lahf
adc
push
fnstenv
aad
or
inc
cmp
or
out
xchg
jp
out
cmovo
jmp
fdivs
imulb
jb
adc
ja
rolb
mov
ret
rorb
mov
insl
cmc
cmp
scas
movsb
xor
fbld
jns
sub
test
mov
cld
inc
arpl
sub
repz
enter
hlt
cltd
cmp
mov
xor
fstpl
xor
xor
push
repnz
fdivp
inc
push
stos
cs
inc
jmp
push
int3
adc
mov
sbb
inc
test
in
cmp
or
jno
aas
dec
mov
mov
pop
xchg
mov
jl
mov
xchg
dec
iret
popf
sub
xor
jg
ja
jmp
aad
mov
in
insb
stos
divb
pop
jno
cmpsl
push
mov
and
adc
movsl
inc
add
repz
mov
out
xchg
add
movsl
scas
in
mov
push
ljmp
fdivrp
jno
push
out
test
ja
adc
data16
sub
shl
mov
mov
cmc
jge
pop
sbb
xor
xchg
ja
loope
andl
mov
inc
shrb
mov
and
pop
std
in
stc
and
cmp
test
xor
push
clc
out
pop
repz
in
and
inc
push
dec
jno
popa
xchg
dec
gs
enter
lods
push
ss
push
push
xchg
fs
nop
mov
mov
shl
adc
pop
dec
lret
icebp
ret
aas
enter
test
add
add
xchg
mov
push
ret
xchg
adc
mov
mov
add
test
inc
mov
stc
push
or
outsl
pop
pop
test
lock
and
pop
adc
pop
mov
testl
or
test
xlat
mov
mov
jge
push
test
pop
repnz
push
or
inc
dec
push
mov
mov
test
sub
data16
xchg
xchg
shrb
sbb
push
imul
in
aam
clc
mov
dec
add
add
mov
les
loop
jle
cld
call
inc
test
push
out
or
adc
pop
push
addr16
cmp
xchg
iret
adc
and
sub
adc
sbb
jle
adc
mov
movsl
xor
mov
icebp
mov
loop
enter
cwtl
popa
nop
nop
out
in
pop
mov
iret
pop
iret
xlat
mov
mov
bound
pop
test
xchg
sti
dec
jb
scas
inc
mov
fidivs
xchg
jb
inc
mov
inc
cmp
cli
jae
xor
outsl
jbe
xlat
sbb
inc
jp
sti
popf
cmp
std
pop
pusha
repnz
add
pusha
mov
std
push
dec
sarl
jne
and
pop
pushf
ljmp
pushf
out
icebp
xchg
in
arpl
loopne
sub
add
adc
stos
pop
int3
fbstp
cltd
mov
sbb
xor
mov
and
hlt
ds
cmp
movsl
cld
pop
xorl
stc
lcall
push
and
es
adc
push
adc
jne
fdiv
iret
rcrl
mov
ljmp
std
testl
fidivs
add
xor
jno
cmp
stos
icebp
cmp
xor
push
mov
mov
jl
sar
lods
jmp
xor
ja
cmp
in
inc
fs
pop
dec
ja
sarb
ljmp
pop
inc
mov
aaa
sub
or
jle
pop
sub
adc
mov
frndint
mov
pop
inc
mov
sub
add
sbb
jl
cmp
loope
sbb
shrb
imul
hlt
jle
roll
sub
mov
mov
test
notb
outsb
add
subl
movsl
repnz
push
inc
sub
pop
fcom
jle
iret
sbb
and
mov
push
xor
push
pop
xchg
in
push
adc
cld
cmp
fwait
int3
adc
mov
mov
and
sbb
out
dec
add
push
jne
js
aaa
leave
daa
adc
mov
sarb
mov
leave
xor
push
jne
sub
aam
inc
mov
or
inc
jle
je
push
sbb
fmull
hlt
into
jbe
popa
bound
fbstp
fdivrs
jecxz
mov
lret
mov
cltd
dec
xor
jno
mov
in
dec
pop
and
repnz
adc
in
xorl
repnz
cltd
jae
xor
cli
push
enter
lock
inc
das
notl
xor
adc
mov
inc
es
inc
stc
cmp
or
jne
movsl
out
repz
or
ljmp
xchg
subl
in
xchg
loop
lods
daa
push
sub
shll
sbb
xor
jle
test
xlat
xchg
cmpsl
pop
jle
outsl
mov
jae
pop
fnsave
test
push
jno
or
rcrl
or
sub
push
inc
int3
mov
fistl
out
mov
aam
add
inc
mov
xchg
sbbb
sbb
and
fildll
mov
xor
pop
int
int
adc
mov
push
sbb
cvttps2pi
fnsave
xchg
idivl
sbb
fiadds
and
add
adc
ds
cmp
fwait
cli
xchg
inc
jbe
dec
dec
mov
shlb
push
jge
ret
jae
push
jno
test
xorl
pop
sub
inc
test
loope
xchg
lea
sbb
cmpsl
push
fistpll
dec
lock
movsl
or
inc
sub
mov
ljmp
pop
pusha
jbe
sbb
mov
mov
add
and
push
mov
add
mov
cld
sub
xchg
inc
scas
adc
dec
repz
imul
and
inc
xchg
aas
imul
jo
sub
mov
push
pop
loope
stc
pop
popa
mov
xchg
and
push
orl
adc
inc
js
es
add
xchg
lea
xor
push
fucomip
xchg
or
push
xor
js
pop
out
add
loopne
or
mov
sbb
pushf
pop
iret
imul
push
sbb
jge
mov
pop
pop
hlt
sub
jno
fimull
add
gs
pop
sti
test
sub
or
lret
fdivrs
sbb
shlb
inc
data16
cmc
mov
das
xchg
xlat
sbb
cwtl
pop
dec
insb
pop
or
into
fistps
mov
jne
sbb
stos
hlt
xchg
adc
jne
lea
add
or
pop
test
sub
sbb
mov
xor
loopne
and
xor
fwait
dec
into
mov
call
or
ja
ss
dec
fidivs
mov
mov
mov
fwait
aam
inc
mov
or
je
or
pop
je
mov
outsl
insb
push
jo
test
cli
xor
ljmp
sub
popa
pop
dec
divb
mov
pop
adc
or
ror
fs
mov
or
divl
mov
push
std
je
aaa
out
repnz
das
or
jbe
xchg
and
sbb
int
inc
int3
test
jge
cld
arpl
test
inc
xchg
or
setp
mov
cmp
sbb
push
out
clc
rorb
pop
rcll
push
loope
mov
and
mov
mov
mov
enter
mov
dec
pop
xor
pop
mov
mov
xchg
jl
imul
xchg
and
inc
data16
mov
mov
cs
inc
outsl
popf
in
lods
leave
cmp
mov
xchg
adc
sbb
adc
into
dec
daa
loop
xchg
jne
mov
dec
outsl
daa
sbb
loope
pushf
mov
pop
cmp
mov
ja
mov
fidivrl
psrlq
outsb
sub
adc
dec
xchg
dec
jg
std
mov
imul
push
loope
inc
jmp
rolb
sub
inc
mov
xchg
jmp
sbb
push
shr
cmpsl
repz
lods
test
pop
jg
pop
cmc
lods
in
sbb
js
addr16
push
xchg
pop
mov
adc
inc
pop
xchg
repz
mov
adc
push
xor
pop
lret
push
stos
fnsave
fisttpll
sbb
fidivrl
pop
jmp
xor
xor
inc
or
mov
scas
and
dec
popf
insl
fsub
lods
sti
cld
xor
ds
mov
ss
pop
es
mov
jo
call
sub
cmp
or
lahf
lock
or
shlb
mov
xor
dec
cld
cli
stc
add
jp
popf
pop
enter
mov
test
mov
daa
xchg
insl
cmpb
js
jnp
xchg
cli
xchg
adc
lret
jbe
loop
inc
stos
lea
mov
dec
inc
cmp
imul
jp
inc
prefetch
cmp
and
das
shrl
jnp
addr16
pop
push
xor
mov
call
pop
mov
repnz
cmp
nop
adc
bnd
xchg
mov
insl
xchg
and
or
movsb
in
in
mov
out
mov
rcr
les
insb
pop
xchg
scas
jbe
mov
stc
mov
sbb
enter
cmp
out
and
pop
mov
imul
lahf
mov
mov
cli
fucom
jne
cmp
inc
inc
adc
lahf
repz
rcrb
xchg
push
out
dec
and
scas
popf
cld
ficompl
mov
test
xor
shrb
out
ret
shll
sub
xchg
jb
popa
ret
xchg
inc
jb
test
sub
push
in
push
call
test
pop
dec
adcl
cmp
loope
xchg
icebp
fwait
cmp
test
lods
cmpsl
in
and
lock
dec
adc
outsb
cltd
test
mov
lahf
movsl
mov
cmp
dec
shlb
js
cld
loop
pushf
scas
adc
push
bound
js
sbb
and
add
stos
xchg
outsb
test
adc
lea
lds
jns
sbb
mov
outsl
dec
mov
in
mov
cmpl
pop
ljmp
cmp
add
sarb
mov
push
push
jmp
push
sbb
ret
inc
xchg
call
cs
gs
loope
pop
push
in
out
push
push
fbld
pushf
insb
adc
xchg
add
aas
xor
lcall
test
mov
mov
adc
cmpsb
aas
cmpsb
mov
int3
fs
mov
sub
loop
mov
cmp
jle
inc
es
xor
xorl
nop
xchg
inc
fnop
sub
mov
hlt
adc
xchg
nop
mov
jo
addr16
jns
pop
jle
add
push
les
adc
popf
push
xor
test
xchg
cld
stc
or
xchg
sub
push
mov
test
jp
sti
filds
jnp
xor
das
add
pop
adc
loope
xor
jae
jo
int3
pop
loopne
das
inc
or
insb
mov
mov
adc
dec
outsl
sahf
mov
mov
xchg
xlat
xchg
pop
pop
inc
fldt
fadds
imul
sub
ret
bound
mov
jecxz
sub
mov
pop
scas
clc
scas
add
mov
push
sub
cmc
pop
loop
rcr
imulb
cmpsb
int3
test
push
pushf
add
subb
out
arpl
cli
cmc
mov
and
jle
or
or
jo
ds
sub
enter
inc
stos
cmp
fimuls
sbb
add
repnz
in
adc
mov
in
loop
addr16
pop
mov
sub
pusha
cs
iret
aas
xor
ss
mov
mov
mov
aas
rorl
push
cmc
movsb
xchg
je
sti
subl
inc
add
add
push
mov
adc
add
loop
pop
jae
add
or
leave
cmp
jnp
scas
repnz
jmp
lea
mov
mov
jl
movsb
jl,pn
lahf
repz
movsb
push
xor
jl
ret
icebp
mov
dec
inc
xor
pop
dec
push
mov
test
pop
cmpsb
inc
int
sarb
mov
and
rcll
pop
int3
lods
sbb
stos
sub
fwait
addr16
addr16
sub
cmp
mov
adc
cmp
ss
jnp
imul
sarl
mov
and
dec
repnz
rcl
js
dec
insb
stos
pop
rcll
out
cmp
popl
lahf
jp
mov
pop
sarl
and
sbb
adc
ret
bound
cmp
jne
cmp
xrelease
sub
xchg
les
fldenv
lods
call
mov
and
scas
dec
dec
xor
in
stc
cs
popl
mov
xchg
daa
je
std
push
call
test
mov
aam
ficoms
and
outsb
sbb
jns
je
jg
adc
shrl
jno
mov
jne
jl
addr16
pusha
cs
sahf
into
rcll
movsb
jns
aam
inc
jecxz
ja
fists
cli
inc
mov
inc
pop
adc
ss
insl
jae
cmpsb
cmp
cmp
dec
pushf
and
les
jle
push
lea
cmp
andb
into
jne
mov
xor
test
mov
adc
cld
sti
fwait
loope
or
out
xchg
roll
int3
jno
jmp
add
mov
add
dec
add
clc
cmpsl
pop
icebp
mov
js
test
or
int3
mov
inc
cs
addr16
popa
enter
in
mov
mov
jae
mov
jae
fistpll
and
push
adc
jecxz
cmp
clc
pusha
inc
clc
jmp
movsb
mov
xchg
mov
aam
mov
pop
mov
leave
lret
jae
popf
inc
dec
icebp
inc
loopne
std
dec
add
cli
mov
xchg
cs
insl
loope
loopne
xchg
hlt
jecxz
ja
push
lock
es
xchg
jl
sub
pop
outsb
sub
add
add
add
mov
lea
sub
insb
xchg
ret
outsb
xor
loope
mov
jle
and
dec
push
loopne
lds
mov
pop
push
sbb
divb
jns
iret
and
xchg
lret
add
mov
xchg
mov
test
cmp
sbb
mov
lock
lods
gs
out
jae
sub
sarb
dec
xor
cmp
jb
mov
xchg
dec
gs
movsb
jg
mov
push
test
out
or
push
mov
pop
inc
xor
jne
add
fisubrs
dec
xlat
sahf
fiaddl
clc
adc
jp
dec
ret
or
lods
add
cmp
xchg
mov
test
jmp
jnp
out
push
sahf
inc
push
int
pop
sub
imul
fs
xchg
sub
sbb
sbb
data16
mov
fwait
jg
int
mov
and
test
lahf
sti
sub
mov
outsl
cbtw
scas
inc
push
sub
pop
add
add
and
pavgb
mov
mov
sbb
repnz
mov
adc
mov
mov
lea
clc
insl
jns
push
jge
adc
pop
mov
btc
iret
mov
call
nop
aas
es
cmp
ja
and
in
cmp
dec
pop
fnstsw
fildl
dec
bound
dec
jns
jg
mov
movsb
outsl
addr16
mov
xchg
aaa
movsl
popf
jg
inc
push
and
enter
inc
je
jno
cmpb
loope
mov
xor
das
push
test
lahf
ret
jbe
mov
cmp
cmpsb
xor
cmc
fimull
add
mov
ja
push
mov
push
mov
loopne
js
dec
clc
dec
jl
and
ret
fwait
ret
into
jb
dec
jae
and
adc
ja
adc
xor
mov
cwtl
pop
into
mov
xchg
ret
sub
ss
hlt
bnd
adc
ret
mov
jle
adc
js
xchg
add
adc
inc
repnz
call
cwtl
mov
std
xchg
cld
aas
out
repnz
loop
ficompl
mov
mov
stos
pop
cmp
icebp
mov
cli
cmc
cmp
ss
xlat
add
test
jmp
push
fwait
push
and
ret
lock
sbb
push
dec
push
push
sub
in
push
add
scas
lret
push
jl
in
or
loope
inc
lea
out
adc
movsl
call
add
and
or
mov
sbb
mov
mov
cltd
ret
push
xchg
iret
xor
jmp
gs
sbb
and
pop
add
and
push
xchg
clc
mov
faddl
push
divb
jne
cmpsl
stc
cld
and
rolb
icebp
pop
sub
lods
or
orl
test
insl
push
push
arpl
call
or
leave
aam
int3
test
in
push
mov
sbb
frstor
mov
adc
add
push
sbb
push
gs
mov
lahf
faddl
cmp
mov
add
jae
sbb
lahf
dec
notl
mulb
push
imulb
jnp
cwtl
fsubs
push
test
pushf
and
pop
mov
xor
xchg
js
jne
jge
or
mov
mov
xchg
xor
jno
xchg
cmp
stos
std
mov
or
add
xor
xchg
jmp
lahf
inc
popa
flds
mov
imul
add
add
fnstcw
loope
push
rolb
jge
add
faddl
add
test
fs
inc
mov
mov
in
data16
pushf
dec
daa
repnz
mov
push
fidivl
cmp
sub
xchg
mov
lods
shlb
xlat
mov
xchg
imul
mov
push
jne
pushf
push
or
clc
jmp
push
inc
data16
push
mov
sahf
clc
jge
jmp
add
dec
pop
and
jl
cmp
adc
sbb
bound
pop
mov
push
pop
xorb
mov
negb
popf
lea
xchg
cmp
cmpsb
movhps
lea
xchg
xchg
jecxz
out
sti
inc
adc
bnd
jb
pop
in
sarb
ds
das
add
es
je
test
mov
mov
pop
data16
fildl
dec
push
or
fsub
inc
mov
jge
int3
xor
popf
lea
movsb
cmc
jnp
cld
das
jne
or
inc
sbb
inc
dec
dec
mov
sbb
lcall
rcrl
adc
jae
test
test
imul
enter
mov
add
mov
xor
ret
sahf
inc
inc
out
out
cmp
fs
inc
xchg
rcr
jge
pop
mov
inc
dec
cmpl
mov
sub
push
in
nop
sub
sub
mov
add
sti
fists
sbb
loope
sub
mov
pop
in
mov
push
clc
mov
xor
popa
imul
loop
xor
nop
cmp
ja
mov
xchg
or
jge
xor
and
scas
sub
and
out
das
data16
add
dec
or
adc
nop
sub
push
xor
test
mov
mov
pop
icebp
sbb
mov
enter
push
push
loopne
loopne
xor
cmp
fstps
push
shl
push
sbb
xchg
pusha
xchg
sbb
cmc
loop
std
repz
popf
lock
pause
inc
jge
jbe
scas
sbb
into
roll
rcrb
pop
dec
shll
data16
insb
data16
iret
mov
or
in
loop
fs
hlt
ljmp
fdivl
loope
ja
sbb
mov
xor
int
shrb
sub
adc
imull
mov
push
mov
bound
rolb
cmpsb
je
sbb
scas
inc
and
mov
fnstcw
sbb
adc
sbb
sbb
and
add
daa
addb
mov
mov
lods
mov
or
mov
pop
mov
and
inc
fsts
jbe
mov
sarl
mov
sbb
mov
orb
lcall
push
push
push
ja
push
movsl
shlb
in
testl
add
fwait
aaa
jle
push
mov
mov
add
xchg
push
fmul
push
adc
xor
fsub
push
cltd
push
movsl
xor
sbb
pusha
sub
xlat
into
jg
adcl
jne
loopne
add
xchg
les
jns
jae
enter
sub
aam
sub
lock
jle
sbb
addr16
lock
cli
into
inc
jg
or
xlat
dec
cld
test
push
mov
push
lods
sub
repnz
dec
insb
rcrl
jp
add
das
jge
stos
pusha
sbb
adc
jo
jl
ljmp
imul
jnp
and
mov
lret
stos
test
dec
ret
faddl
fsubs
cmp
popa
sar
lods
out
mov
ja
lea
jg
xor
adc
and
rcrl
cmp
mov
mov
cmpsb
iret
mov
add
inc
gs
or
sarb
test
xchg
aam
jle
xchg
xlat
insl
test
rorb
mov
ror
sbb
nop
dec
dec
bound
sub
push
sbb
cmp
jae
int
fbstp
fwait
adc
ds
in
shll
dec
and
testb
jb
ja
sub
call
ja,pn
insl
dec
aam
popf
mov
push
bound
mov
sahf
xchg
insb
and
fadd
mov
dec
and
leave
fstpl
cltd
pop
divb
mov
adc
cmc
lret
jbe
adc
adc
dec
jmp
sub
ja
cmp
inc
dec
pop
dec
out
pop
bnd
jge
xor
idivl
aam
loope
in
fucomp
cmp
mov
in
jge
and
pop
addr16
fidivrl
and
push
in
or
ss
xlat
adc
bound
cs
fadds
es
insb
pop
dec
mov
ss
mov
sub
jo
int3
into
push
das
divl
xchg
mov
jne
fs
mov
fwait
insb
cltd
dec
fwait
insb
in
jae
stc
cmp
std
pop
mov
and
pop
jnp
xor
pop
data16
xlat
out
test
and
fsubrs
sub
pushf
adc
int
push
stos
roll
pop
pushf
xor
ja
imul
mov
sub
dec
pop
jno
sar
and
jmp
and
adc
jae
mov
mov
sbb
mov
or
rdpmc
ret
cmp
rcll
inc
mov
nop
in
pop
mov
sbb
scas
into
inc
adc
insl
mov
lea
push
cmp
dec
out
scas
idivl
xchg
mov
pop
sahf
leave
dec
mov
push
test
mov
pop
adc
rorb
xchg
sub
add
scas
aaa
ljmp
push
or
sbb
aas
mov
sub
jl
lock
hlt
adc
cmpsl
jb
hlt
adc
shr
jbe
ja
mov
xchg
push
into
sbb
rolb
inc
dec
mov
xor
mulb
pop
sbbl
push
repnz
inc
inc
leave
mov
lock
jle
adc
test
mov
rcrb
sub
test
jbe
add
or
out
inc
sub
loopne
xchg
roll
in
jle
sbb
cmpsb
xchg
stos
insb
cmc
fbstp
leave
or
ss
out
ffree
pop
jg
sbb
or
jmp
adc
add
dec
pop
ds
ret
jae
push
xchg
movb
dec
push
pop
data16
iret
push
sbb
lcall
cld
xchg
pusha
mov
fistpll
iret
lods
dec
adc
cltd
push
js
sbb
rcrb
push
mov
or
sbb
or
and
sub
jo
mov
imul
lock
jge
push
xlat
xlat
sub
adc
lods
mov
and
je
insb
inc
and
ret
adc
lds
cmc
inc
sbb
adc
in
subl
fistps
adc
outsl
and
push
cmp
roll
sbb
enter
scas
add
adcl
mov
add
pop
mov
les
stc
mov
xchg
push
lods
or
sbb
mov
in
fnstenv
mov
and
jnp
loope
mov
jbe
mov
push
sbb
sub
sub
mov
push
ljmp
mov
cmpsl
dec
inc
or
ljmp
pushf
or
aad
std
fidivs
sbb
subl
ljmp
jmp
pop
cmp
test
add
std
push
cmp
sbb
sbb
mov
dec
lret
cmp
fsubrs
jecxz
sahf
in
mov
call
xchg
xor
ficomps
cltd
jno
in
dec
shl
es
gs
fimuls
mov
movsb
pop
ror
sub
call
mov
cmp
es
enter
or
push
pop
pop
lea
cwtl
push
test
fsubrs
mov
mov
paddb
dec
xchg
jge
mov
push
xchg
notl
das
sbb
fmull
dec
cmp
jno
sti
fs
jmp
jno
sbb
cmpsb
arpl
pop
js
push
in
sub
lret
inc
and
cltd
mov
clc
aas
dec
add
movsl
scas
mov
add
push
xchg
mov
sbb
mov
ret
test
jp
popf
dec
cli
xor
dec
fisubrs
xlat
jbe
xchg
stc
mov
inc
stos
in
cltd
fists
sbb
dec
or
push
mov
dec
int
out
jmp
jo
repnz
fistpl
clc
mov
in
in
ds
mov
shll
rol
mov
jns
cmc
scas
push
mov
sahf
dec
inc
test
cmpsl
mov
xor
and
leave
shll
pop
push
leave
stos
inc
notl
inc
pop
pop
dec
aam
mov
jge
movsb
mov
test
lock
nop
and
push
xchg
cwtl
add
sahf
out
pusha
pop
mov
and
push
ds
cmpsl
int
addr16
imul
scas
or
sbb
mov
scas
sbb
mov
xchg
int3
xor
mov
in
cmc
push
sar
jno
outsl
stc
xchg
mov
iret
in
inc
in
add
orl
adc
dec
sub
inc
rorb
or
mov
in
pop
and
push
icebp
scas
jbe
dec
push
std
add
lods
pop
xchg
shlb
mov
sbb
mov
xchg
cmp
lock
js
jbe
or
imul
inc
shll
popf
lret
pop
ds
push
adc
or
xchg
lahf
je
das
idivl
add
xchg
lret
call
jb
sub
das
add
lods
and
int
push
and
mov
sub
lods
bound
xorb
adc
adc
int3
ret
testb
stc
out
call
inc
lret
add
fsubrl
je
inc
push
pop
ret
call
fwait
mov
push
add
fs
cmp
add
loope
jne
scas
xor
lock
push
dec
cmp
mov
ljmp
pop
aaa
repz
cwtl
sti
sbb
push
add
ss
in
adc
mov
mov
outsb
cmp
stos
or
repz
popf
dec
repz
in
iret
divl
mov
mov
pop
insl
adc
push
test
insl
sbb
dec
xchg
bound
int3
cld
sbb
mov
bound
jbe
jecxz
adcb
jge
sub
inc
lret
pop
insl
and
pusha
lcall
jnp
cmpsl
idivb
inc
out
mov
lea
sub
rcll
xor
sbb
fbstp
rcrl
out
movsb
push
mov
or
in
and
push
jo,pn
cmp
jp
dec
pop
insl
js
add
mov
xor
nop
jb
add
xor
pushf
in
sub
add
mov
and
adc
pop
push
pop
sub
repnz
cs
xchg
ret
data16
leave
lods
mov
subb
mov
lahf
pop
scas
jo
outsl
push
add
jo
cmp
cld
pop
push
and
xchg
test
add
das
loop
sub
das
mov
rcrb
add
add
popa
xrelease
pusha
lcall
and
mov
fucomip
cmpsl
addr16
cltd
mov
add
lcall
addb
aas
cli
adc
loop
adc
fneni(8087
and
cmc
cmp
xchg
xchg
inc
stos
cld
mov
cmp
arpl
dec
in
mov
cltd
imul
rcr
add
pusha
mov
xor
inc
xchg
fisttpll
push
sub
lock
jp
out
mov
and
adc
call
xor
es
push
inc
pushf
xchg
aas
and
aas
repnz
sub
xchg
pusha
into
sbb
mov
mov
insl
jnp
and
push
cmp
ds
add
cs
movsb
repz
sbb
mov
jo
add
std
and
jnp
fs
xor
sub
aad
mov
mov
or
mov
data16
pop
pop
popa
pushf
repnz
xor
sahf
mov
mov
sub
add
hlt
aad
jge
movsl
icebp
int3
or
xor
sbbb
pop
and
subl
je
pop
js
jle
sub
into
cltd
push
or
push
dec
push
loop
scas
jmp
or
push
mov
lods
push
sbb
loope
dec
insb
add
in
in
sbb
mov
insl
enter
mov
out
repz
pop
mov
lods
inc
mov
xchg
or
daa
jae
fninit
add
inc
ja
aaa
test
jno
cmp
or
dec
nop
lds
bound
dec
adc
stos
ret
shlb
add
cmp
test
mov
imul
sbb
pusha
cmp
mov
dec
sub
lock
mov
in
scas
and
aad
cmpl
inc
sbb
jg
adc
mov
jne
mov
cmp
aad
shrl
dec
pop
jg
inc
inc
mov
in
xchg
sahf
cmp
xchg
shr
leave
sbb
push
jmp
sbb
sub
jmp
mov
adc
pop
hlt
enter
fdivs
loope
push
rep
lahf
sub
mov
cmp
pop
jle
adc
hlt
pop
je
out
es
js
in
jae
cwtl
sahf
xor
and
jae
jecxz
add
subb
and
sti
push
push
pop
jmp
sub
rclb
or
mov
sbb
popf
out
sub
or
push
test
mov
push
sub
out
cmc
add
mov
xchg
repz
hlt
aas
subb
popf
dec
and
ss
sub
inc
push
nop
enter
sub
xchg
cltd
and
jnp
mov
cmp
mov
push
cmpsb
loop
in
jle
mov
pop
add
scas
add
les
insb
sub
ljmp
fcompl
sub
aam
js
aad
dec
mov
rorl
dec
jle
adc
lock
pminsw
sub
push
pop
rcrl
push
fcompl
xchg
xor
pop
adc
jecxz
cmp
fmuls
inc
push
cmp
sub
mov
test
jbe
test
into
xchg
mov
jbe
mov
icebp
out
cmp
xchg
push
add
shr
ds
outsl
adc
ror
sub
imul
push
dec
fmull
negl
movsl
pop
push
jecxz
add
adc
shrb
lret
xchg
movsl
movsl
fstps
inc
jp
shll
sub
notb
bound
mov
inc
orl
sub
push
cmp
mov
out
outsl
fiaddl
mov
xlat
imul
and
mov
xchg
push
pop
and
stc
imul
sub
pop
rcll
jb
loope
lds
cmc
sbb
das
add
adc
xor
pop
dec
mov
ficoml
pop
test
std
mov
test
jb
stos
xchg
fisubrl
jmp
or
lahf
sub
subl
es
jmp
jge
or
pop
jmp
xor
stc
and
aad
jle
xor
sub
mov
ja
insb
ficomps
in
fs
into
pop
aam
adc
add
int3
out
mov
sub
cwtl
iret
lahf
inc
outsl
data16
pusha
ret
push
xchg
sbb
sub
jo
aad
shll
push
jg
jmp
popa
or
inc
popf
nop
mov
inc
imul
cmc
pop
gs
cmc
js
or
add
int3
shll
gs
pop
lcall
inc
mov
mov
jge
push
mov
jnp
fimull
cmp
pusha
ret
ja
arpl
push
sbbl
movsb
sarl
or
popf
fwait
xchg
add
lds
push
or
or
inc
xchg
rolb
xchg
insb
iret
inc
sub
lea
daa
jae
test
lret
loop
lods
dec
outsl
imul
ss
js
cltd
fcoms
popa
or
cmpb
repnz
xchg
push
xchg
sbb
testl
fdivrl
cmc
and
lods
ss
xchg
dec
js
imul
insl
or
in
jbe
testb
adc
sub
mov
ds
xchg
call
fdivp
pop
nop
inc
inc
push
in
test
enter
lret
dec
cwtl
mov
pop
or
sarl
sub
dec
sub
pop
jno
subl
dec
call
lahf
in
cmp
mov
pop
pop
xlat
pop
xchg
xchg
imul
popa
mov
pop
movsl
mov
mov
mov
mov
push
cld
sbb
mov
cs
test
std
inc
inc
pop
mov
push
push
jle
add
or
adc
push
xchg
or
jbe
pop
cs
incb
mov
outsl
inc
push
repz
lds
cmpsb
and
ds
das
stos
pusha
fwait
inc
adc
movsb
jbe
push
pop
inc
adc
and
pop
shr
mov
cwtl
fwait
in
sti
inc
ror
ret
dec
std
frndint
and
pop
dec
fiadds
mov
sbbb
addl
mov
mov
sbb
xchg
xor
insl
push
pop
jl
add
and
sub
xor
jns
call
lret
cmp
sub
adc
into
movsb
jnp
lods
mov
pop
in
push
xchg
jb
lret
in
icebp
push
fimuls
sarl
test
xchg
mov
or
int3
loop
inc
mov
xchg
or
imul
out
inc
dec
in
call
repnz
pop
xchg
ret
imul
dec
dec
test
je
inc
subb
fsubr
ja
shl
outsl
rcrl
lret
adc
pushf
popa
lods
lret
popl
sbb
bound
aas
gs
xchg
mov
lock
popl
jne
sbb
out
sbb
and
movsb
push
push
xor
and
addr16
repnz
ja
sbb
test
mov
adc
mov
in
inc
fisubrs
xor
lahf
mov
cwtl
cltd
mov
dec
scas
aam
inc
test
mov
push
outsb
mov
push
fldenv
pop
xor
push
push
or
frstor
cmpsb
in
imul
pop
dec
xor
enter
pop
das
mov
shll
mov
out
pop
push
add
int
fbld
dec
data16
aaa
les
je
xchg
lret
cmp
lea
lods
xor
dec
or
repz
xchg
push
inc
pushf
imul
aad
rcrb
iret
fsubl
arpl
out
push
orl
pushf
insb
repnz
push
inc
sti
xchg
je
cmp
xor
int3
jns
dec
push
push
ss
xor
aas
or
mov
fldenv
add
inc
leave
and
or
adc
cmp
sahf
push
movl
testl
aad
xor
sbb
jecxz
insl
bound
cmp
arpl
lods
mov
jg
dec
mov
mov
dec
pusha
int3
xor
sbb
inc
mov
fs
repz
test
inc
lcall
insb
inc
xchg
sub
add
pop
decl
jmp
and
ljmp
sbb
adcb
push
dec
jle
aam
shrd
jno
push
dec
sahf
or
pop
cltd
or
jb
insl
push
nop
add
mov
adc
push
and
lea
and
mov
mov
mov
adcl
xchg
daa
cmc
pop
arpl
sti
outsb
repz
adc
xor
lret
cmpb
mov
mov
lock
rorb
fidivs
lods
mov
cmpsl
leave
or
mov
pop
test
cmp
xor
and
and
lds
mov
icebp
je
test
pop
out
mov
dec
mov
mov
cmp
ljmp
ret
mov
mov
sub
dec
adc
mov
mov
or
dec
insb
inc
inc
mov
sub
fs
insb
sti
xor
mov
adc
push
add
or
ljmp
inc
in
aaa
jae
xchg
sbb
add
out
arpl
jne
mov
sahf
popa
pop
adc
add
rcrl
jb
and
xor
and
loop
arpl
roll
xchg
loopne
cmp
adc
push
adc
movsb
fstpt
sbb
sub
dec
mov
jge
mov
stos
add
pop
pop
fidivl
test
mov
aam
aaa
or
pop
add
mov
jl
pushf
sub
push
test
or
loopne
inc
jbe
test
push
movsl
inc
scas
int
sub
cmp
in
xor
mov
jne
mov
nop
js
mov
jge
sti
call
lahf
pop
shll
xchg
ds
jp
aas
pop
mov
testb
xchg
xchg
xorb
xor
fimull
inc
cmp
mov
jg
push
out
jl
inc
add
mov
cmp
mov
scas
xor
fdivr
into
repnz
xlat
and
mov
jno
sub
ljmp
push
subl
xchg
aaa
and
cld
aaa
scas
or
jl
lahf
dec
sbb
fcomi
xor
jb
dec
sbb
repnz
test
lods
ret
pop
lret
mov
xchg
hlt
mov
cmpsl
dec
gs
insb
call
es
std
mov
inc
fwait
push
and
jp
sbb
xorb
pop
call
nop
fcmove
bound
lret
out
in
fwait
sbb
test
lret
sbb
or
std
push
pushf
stos
call
nop
sub
inc
jg
inc
js
aam
mov
and
cmp
push
push
mov
cmc
loop
pushf
test
mov
xlat
jb
test
mov
scas
inc
cmp
in
bsr
jb
call
add
cmp
cmp
pop
loopne
mov
lahf
ror
or
adc
mov
or
mov
cmp
adc
cmpsb
pop
les
mov
jno
fwait
xor
xor
aam
ret
sbb
stos
sub
imul
xor
movsb
rol
dec
sbb
out
inc
lcall
fst
shll
adc
or
mov
out
ret
add
fisubs
xchg
loopne
jmp
sub
test
dec
dec
daa
xor
xorb
pop
xchg
push
scas
add
xchg
cli
lods
mov
jae
push
inc
adc
bound
dec
lods
outsb
and
jmp
sbb
scas
out
inc
cmpsw
nop
fstps
xchg
add
xchg
pop
shlb
pop
xchg
inc
dec
xor
mov
mov
test
sub
add
je
cld
dec
or
aaa
sbb
imul
sti
and
jno
test
stos
fidivs
jnp
test
pop
push
or
push
lahf
popa
icebp
divb
dec
push
mov
mov
pop
fimuls
or
xchg
shll
or
xor
push
push
leave
mov
loope
cmp
add
in
push
xor
jo
xorb
loopne
sbbb
mov
mov
shlb
cmpsb
fiaddl
cli
mov
jg
fiadds
fld
dec
inc
scas
sub
xor
jnp
test
scas
sbb
in
jbe
mov
int
xchg
cmp
jne
mov
jb
dec
dec
pop
ss
out
dec
in
cmp
in
jmp
bound
jns
mov
xchg
and
cmp
adc
inc
addr16
or
cs
gs
ja
pushf
rcrl
out
dec
shll
xor
mov
jne
lret
scas
rorl
adc
jns
in
gs
inc
lahf
sarb
repz
lcall
jae
dec
loopne
nop
and
xchg
jbe
cmpsl
nop
sub
pop
out
std
lea
jl
pop
addl
inc
mov
inc
add
loopne
pop
ss
idivb
stos
mov
mov
imul
xchg
je
inc
orb
inc
push
stc
pop
mov
sub
jp
sbb
dec
cmp
adc
mov
or
push
stos
xchg
jno
fcomip
pop
pop
lods
repz
dec
popa
neg
testl
dec
in
xchg
sbb
out
mov
ror
out
inc
cltd
jb
cwtl
adc
loope
and
cmp
movsb
in
enter
ror
xor
mov
sahf
insl
adc
sbb
xchg
fdivs
mov
inc
or
mov
pop
mov
jmp
shll
push
jmp
daa
and
xchg
pop
cmovo
inc
xor
push
xchg
dec
ror
stos
inc
dec
outsl
ljmp
sbb
test
jecxz
push
mov
adc
nop
mov
pop
dec
lds
pusha
imul
arpl
dec
pop
mov
dec
mov
cmp
ret
sahf
lret
or
leave
cmc
lret
fs
daa
dec
aaa
xchg
cmp
inc
addr16
pop
pop
fwait
das
xchg
xchg
sub
adc
daa
xchg
or
insl
jge
aam
mov
dec
fsubl
das
rcrb
sub
or
and
xchg
nop
popa
int3
sub
loopne
into
xchg
inc
int3
cs
push
xchg
sub
xchg
inc
mov
es
scas
shll
das
or
shrl
outsl
rorl
mov
aad
push
daa
jg
mov
insl
lods
add
stc
jbe
shrb
repz
mov
sbb
std
mov
test
lods
cltd
push
pop
aam
shlb
mov
and
aam
enter
sub
in
push
pushf
push
mov
arpl
fsubp
lahf
movsb
jmp
cmp
xchg
xchg
mov
mov
or
or
mov
sub
test
adc
pop
or
lret
jg
xchg
ljmp
push
sub
aas
add
xchg
mov
cltd
add
data16
push
orb
mov
mov
ror
jp
pop
and
pop
mov
jl
imul
mov
testb
mov
idiv
mov
enter
test
fcompl
cmp
les
adcb
or
sahf
pop
cmp
jl
fs
mov
cs
daa
xor
and
sub
sub
adc
in
stos
and
mov
fistps
cmc
pushf
inc
inc
jne
pop
ljmp
je
jae
in
pop
dec
aaa
adc
xchg
inc
sub
nop
imul
sub
sbb
push
jg
mov
pop
sub
ds
pop
xlat
inc
xor
xor
in
jo
into
inc
jae
and
call
int3
mov
mov
lcall
jbe
sti
pop
jne
sti
jae
or
or
mov
clc
seto
in
stc
setge
sbb
aad
aam
fbstp
inc
cltd
fscale
sbb
push
loope
cwtl
cmp
push
jge
pop
ljmp
mov
xchg
jne
xor
into
sbb
out
xor
or
mov
mov
sub
jne
or
xchg
jb
test
xor
pusha
mov
or
loopne
cs
mov
xor
das
push
xchg
push
sbb
outsb
int3
mov
xchg
cmpsl
and
and
adc
inc
inc
shrl
iret
xchg
mov
sbb
lret
push
arpl
dec
sbb
push
mov
mov
inc
add
int3
mov
push
push
outsb
sahf
inc
aam
mov
outsl
dec
in
push
inc
add
test
test
mov
rorl
adc
fadds
fwait
out
push
nop
repnz
in
mov
adc
push
jmp
add
cmp
out
sub
xlat
jne
sbb
pushf
push
cmp
insl
sub
jo
push
mov
int3
dec
sub
dec
and
dec
shlb
in
adc
fiaddl
xor
sub
xor
jle
les
fildll
fidivrs
js
mov
mov
xor
jnp
mov
les
lods
adc
mov
add
mov
dec
fsubl
subb
aaa
sbb
jp
daa
xor
ds
jno
push
adc
pop
push
in
pop
cld
lret
lds
mov
pop
jge
je
jmp
or
popf
outsl
xchg
aas
ret
or
cmp
push
lea
push
sbb
jge
mov
jno
push
pop
out
rorb
int
push
out
popa
popf
or
test
fldt
mov
push
adc
stos
cmp
pop
pop
jae
push
fnstenv
sbb
aad
or
pop
push
push
dec
out
es
cmpsb
jp
aam
mov
test
pop
or
arpl
inc
and
dec
sbb
adc
aas
mov
int3
adc
jge
cld
test
push
mov
leave
push
jb
push
bswap
sbb
add
push
mov
pusha
and
inc
sarb
push
pop
pop
and
jl
xor
cmp
xchg
pusha
dec
sti
cmpsb
stos
xor
iret
mov
dec
push
pop
xchg
sub
stc
test
cmc
push
dec
insl
maskmovq
idivl
imul
outsb
adc
loop
pop
cmp
je
pop
inc
clc
stos
lea
in
jne
iret
add
fdivrs
fwait
pusha
daa
ret
daa
in
loopne
imul
stc
inc
test
inc
out
add
push
jg
adc
stc
push
and
out
in
jecxz
test
xor
aas
pop
adc
out
pop
ret
and
rorl
xchg
loopne
das
push
ret
dec
xor
fisubrs
sub
fstl
xor
jl
xor
pop
xor
cwtl
mov
sub
pop
jge
cli
add
mov
pop
xor
fxch
ficoml
shl
fsts
and
jb
repnz
shlb
jno
pop
xor
mov
fcoms
in
idivb
or
lret
xchg
push
fiaddl
out
fimull
mov
inc
int3
dec
out
leave
pop
inc
jg
xchg
push
and
pop
sub
pusha
mov
scas
pop
outsb
or
cmpsb
pop
sbb
fs
mov
loope
xchg
inc
adc
inc
in
gs
fsubl
out
inc
push
notb
add
das
jge
add
fidivrs
loop
sub
jns
push
mov
xchg
stc
loopne
jl
nop
and
xor
jne
cld
sahf
push
lahf
out
add
sbb
fidivrl
jmp
fnsave
ret
add
push
sbb
mov
jl
jns
sub
rolb
jge
imul
xor
xchg
dec
lcall
sbb
lock
dec
inc
xchg
inc
inc
mov
gs
lret
xlat
adc
xchg
sbb
mov
xchg
jl
testb
js
jl
or
ss
pop
inc
sub
lods
test
in
or
nop
clc
xor
push
cmp
scas
test
mov
fists
or
mov
adc
push
pusha
jne
pop
lret
aaa
lds
call
mov
popa
fildl
jno
mov
pop
add
dec
idivl
inc
pop
cmp
lret
cltd
aad
mov
cmp
mov
lods
push
mov
fimuls
xlat
loope
fcomi
loope
mov
jmp
pop
bound
push
adcl
movl
nop
inc
pop
push
jge
push
rorb
mov
lret
stc
mov
shlb
aas
fwait
mov
outsl
jns
mov
ss
insb
popa
ljmp
jecxz
imul
fst
pop
adc
add
and
pop
test
data16
in
push
data16
std
xchg
jle
rclb
sbb
mov
orl
pop
mov
sahf
xchg
test
fdivrp
lahf
push
xchg
out
mov
ljmp
sbb
jno
sahf
mov
addb
jae
pop
test
pop
stos
outsb
and
movsb
fs
sub
insl
mov
jp
mov
xor
hlt
dec
mov
cmc
jg
fadd
test
popf
leave
mov
movsb
and
jbe
lods
movsl
cmpsl
shrb
out
and
adc
pop
or
inc
push
mov
sub
lods
dec
out
lea
es
dec
test
cs
xchg
arpl
adc
out
mov
inc
add
test
lds
adc
inc
daa
pushf
xlat
pop
adc
cmp
dec
mov
loope
inc
mov
call
int3
mov
jnp
jecxz
sbb
fs
test
dec
in
int
pop
xchg
jg
xor
xchg
repnz
sbb
pop
pop
stc
mov
orb
or
and
xor
arpl
insl
fyl2x
ret
jg
cli
sahf
xchg
ret
mov
inc
inc
sbb
push
scas
and
push
cld
jno
dec
lret
sub
aaa
arpl
xor
or
mov
mov
leave
aad
push
stos
dec
pop
das
insb
jg
adc
xchg
scas
fdivrp
stc
data16
clc
mov
cmp
dec
mov
push
lret
loop
add
mov
add
test
jns
push
sahf
jg
adc
pop
shr
mov
stos
out
ds
sbb
test
jge
aaa
jge
adc
add
ss
in
test
pop
aaa
sbb
mov
out
inc
add
cmpsl
dec
das
and
in
adc
pop
xor
adc
popa
fwait
mov
and
incl
push
sub
adc
clc
das
adc
push
adc
cmp
shll
or
divb
xchg
adc
sbb
testb
sub
and
fdivs
dec
mov
mov
fistpl
gs
and
xchg
dec
out
addr16
ret
mov
test
in
orl
test
rcrl
test
jecxz
cmp
inc
orb
loop
adc
pop
sahf
lret
push
stc
jnp
sub
imul
jns
mov
and
call
dec
fwait
cs
xchg
add
bound
mov
sub
cltd
cmp
fs
push
xchg
nop
sbb
rcrb
jbe
mov
inc
xchg
subps
jecxz
out
rol
cwtl
xor
daa
fmul
and
cmp
dec
iret
sub
loopne
and
rcll
inc
repz
pop
jl
jno
std
lahf
out
insb
fdivs
cmp
lcall
inc
pusha
or
outsb
cmpsl
out
or
xchg
shrb
fs
mov
adc
lods
xor
clc
dec
cmpsl
neg
mov
mov
xchg
cmp
push
arpl
cmp
sub
test
into
in
scas
aam
jge
add
test
ret
push
jnp
add
lock
sub
jg,pt
into
cmp
sbb
mov
in
sub
push
ret
pop
sbb
and
xchg
push
in
lret
rorb
pop
rolb
mov
adc
dec
cmp
pop
sahf
adc
ret
pop
xchg
fs
push
adc
xor
out
outsl
and
sbb
lea
into
movl
xchg
and
mov
das
or
sub
jmp
xchg
nop
daa
aas
insl
inc
mov
jle
dec
mov
or
xor
notl
es
jb
jbe
cld
cli
jae
fcmovnb
xorb
sbb
cmp
push
inc
ljmp
add
stos
stc
pop
mov
and
insb
arpl
dec
fs
loope
xor
mov
xchg
andl
stos
inc
ficoms
adc
ss
xchg
mov
cmc
xchg
mov
ja
pop
icebp
stos
inc
lcall
pop
pop
lcall
push
mov
fs
jo
or
rolb
decl
sub
aas
clc
enter
in
push
in
insb
xor
fistps
test
dec
mov
test
movsl
popf
imul
adc
icebp
pop
mov
notl
mov
mov
push
add
cld
sub
int3
push
mov
shlb
pop
adc
shll
mov
outsl
pop
dec
enter
xchg
out
shll
int3
sbb
outsb
inc
cwtl
lcall
out
xchg
test
and
je
mov
pushl
loope
lods
push
dec
fidivl
sub
lcall
gs
and
inc
lret
mov
out
mov
pop
and
jmp
or
sbb
push
repz
es
mov
or
loop
and
or
mov
popa
outsb
sub
in
xor
outsb
in
jp
fwait
or
iret
push
stc
or
or
xor
sub
inc
pushf
or
sbb
aam
jbe
aam
xchg
sbb
or
out
ret
loopne
or
inc
xor
repnz
int
aad
sub
test
dec
push
mov
mov
mov
fcoml
jp
cltd
pop
in
dec
std
push
testb
cwtl
inc
enter
sub
xlat
and
fidivrl
sub
mov
ret
cmp
fisubl
fisubl
clc
fisttpl
mov
push
cmc
ds
shll
movsl
stos
sub
lcall
lea
test
inc
mov
arpl
xor
jae
cmp
stos
xlat
inc
adc
xchg
repz
xor
loop
or
mov
inc
and
les
mov
or
jle
pop
scas
not
xchg
cmc
sbb
mov
and
dec
sbb
pop
paddq
cmp
mov
push
mov
and
dec
xor
jae
movsb
push
es
xor
std
lods
clc
xor
mov
fistl
ret
cwtl
lahf
mov
adc
rcrb
jb
inc
aas
jge
inc
or
cmp
add
xor
sub
out
push
dec
ret
fdivs
pusha
mov
repnz
fwait
inc
iret
fnstcw
or
test
lods
or
xchg
rcrb
scas
pushf
cld
sub
cmp
fisubl
push
mov
mov
ret
xlat
cmp
rcrb
or
fisubrs
icebp
sahf
jbe
or
push
push
flds
xchg
mov
push
jecxz
lea
cmp
xor
dec
clc
sbb
mov
imul
push
add
lds
call
sub
jnp
jl
data16
cld
cmpsl
fnstcw
jmp
mov
sbb
data16
xor
mov
mov
scas
fidivs
fildll
cmp
push
cmc
dec
out
in
dec
jecxz
int3
sub
cmpsb
push
dec
sbb
dec
fdivrs
cwtl
je
sbb
dec
and
gs
push
lods
pop
pop
pop
test
mov
xor
ljmp
dec
adc
pop
lods
pop
incb
jg
test
push
std
cmp
jns
scas
mov
or
jmp
mov
and
bnd
js
and
call
jne
mov
mov
lret
adc
jge
call
lcall
movsb
insb
lret
imul
aam
lcall
lods
xchg
inc
xor
add
mov
fistl
xor
pop
sahf
sub
mov
cmpsb
imul
xchg
outsb
xor
adc
out
xor
cs
mov
imul
jge
mov
das
nop
xchg
out
notl
mov
imul
mov
sbb
fucom
hlt
inc
mov
pop
mov
mov
mov
xchg
and
adc
mov
cld
mov
fdivr
loope
push
add
lahf
decb
in
in
push
insb
lds
xor
add
mov
fbld
mov
xor
iret
or
js
mov
fistl
rolb
sub
pop
xchg
lcall
mov
data16
sub
inc
sub
mov
aaa
orl
jb
shrb
sub
xchg
shll
repnz
push
outsl
add
leave
or
mov
into
loopne
mov
je
daa
test
arpl
xchg
cli
mov
jns
aad
dec
jbe
or
or
addb
adc
push
nop
add
mov
aad
imul
sbb
mov
xchg
jp
inc
sub
sbb
stos
lret
sub
out
and
into
lret
nop
jns
in
add
jmp
popa
mov
pop
mov
xor
or
clc
or
cld
sub
mov
jno
lahf
xor
hlt
aas
mov
sub
pop
jge
mov
scas
out
sbb
adc
add
cmp
push
or
faddl
mov
clc
loope
rcr
push
cwtl
fdivl
jae
ds
xchg
jo
push
mov
sbb
dec
jne
xor
cltd
fsubs
adcb
sarb
mov
mov
pusha
jno
mov
mov
gs
dec
lods
inc
ret
inc
pop
repz
maskmovq
into
mov
ret
jno
cmp
test
mov
jae
aam
add
ljmp
dec
adc
aam
adc
clc
adc
lcall
lea
xor
sub
adc
mov
mov
loopne
adc
in
es
or
enter
sti
mov
cli
repnz
add
shlb
aaa
out
jo
daa
into
mov
stos
pushf
into
xor
arpl
dec
divl
mov
popa
adc
jmp
sub
adcl
jo
mov
sbb
inc
aad
xor
pop
repnz
insb
or
sarb
movsl
into
in
cmp
lret
pop
mov
mov
sbb
ret
es
lahf
out
jno
frstor
rcll
icebp
jmp
lods
pop
mov
xor
and
push
repz
hlt
xor
mov
icebp
and
and
push
jbe
and
aad
jne
adc
xchg
push
adc
lock
sub
and
cmp
xor
sub
or
push
fbstp
lods
adc
andb
and
mov
mov
fdiv
inc
and
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
ljmp
pop
.byte
loope
gs
xchg
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
cmp
aas
gs
add
add
popfw
testb
cmp
add
add
add
add
pop
add
orb
add
inc
add
adcb
add
sub
add
popfw
testb
cmp
add
add
add
add
call
add
add
testb
cmp
add
add
add
add
add
add
popfw
testb
cmp
add
adc
xor
add
jne
add
add
push
add
xorb
xorb
add
or
add
lock
cmpb
add
fadds
add
rolb
cmpb
add
test
add
nop
add
cmpb
cmpb
add
dec
add
cmpb
add
xor
add
sbb
add
popfw
testb
cmp
add
add
or
add
add
add
testb
cmp
add
add
add
add
test
add
add
add
popfw
testb
cmp
add
add
add
add
mov
add
add
testb
cmp
add
add
add
add
enter
add
add
popfw
testb
cmp
add
add
add
add
fadds
add
add
add
popfw
testb
cmp
add
add
add
add
call
add
add
testb
cmp
add
add
add
add
clc
add
add
add
add
testb
cmp
add
add
add
add
or
add
add
add
popfw
testb
cmp
add
add
add
add
sbb
add
add
add
popfw
testb
cmp
add
add
add
add
sub
add
add
add
popfw
testb
cmp
add
add
add
add
cmp
add
add
add
popfw
testb
cmp
add
add
add
add
dec
add
add
add
add
testb
cmp
add
add
add
add
pop
add
add
add
add
testb
cmp
add
add
add
add
push
add
add
testb
cmp
add
add
add
add
js
add
add
add
popfw
testb
cmp
add
add
add
add
mov
add
add
add
popfw
testb
cmp
add
add
add
add
cwtl
add
add
add
add
testb
cmp
add
add
add
add
test
add
shlb
add
add
mov
add
add
add
add
or
call
add
add
add
add
daa
or
push
add
add
add
add
or
mov
add
mov
add
add
add
fdivs
add
mov
add
add
add
addb
test
add
mov
add
add
add
sub
sub
add
add
add
or
rorb
add
add
add
or
push
add
add
add
add
or
enter
mov
add
add
add
inc
dec
or
test
add
mov
add
add
add
call
push
add
mov
add
add
add
nop
popa
or
sub
add
mov
add
add
add
mov
add
add
add
add
js
add
add
add
add
add
jp
add
add
add
add
add
push
add
mov
add
add
add
sbb
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
sbb
adc
adc
add
sbb
adc
adc
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
add
je
jae
add
data16
add
add
data16
add
add
xor
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
add
push
add
data16
push
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
add
jbe
add
imul
cmp
cmp
xor
data16
push
add
data16
push
add
insb
add
add
outsl
add
add
add
cmp
push
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
data16
push
add
add
add
inc
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
data16
push
add
data16
push
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
add
data16
push
add
data16
push
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
xor
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
xor
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
je
jne
bound
add
add
cmp
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jae
je
jne
bound
add
js
add
add
add
add
add
add
adc
add
add
push
jne
xor
add
add
push
jne
and
add
add
call
jne
sbb
add
add
call
jne
adc
add
add
sub
add
xor
add
add
add
push
add
ss
xor
add
add
add
jne
and
add
add
add
jne
sbb
add
add
add
push
add
cmp
adc
add
add
add
add
cmp
add
add
inc
push
mov
jne
inc
add
add
and
sub
add
add
and
test
add
cmp
add
add
add
jne
sbb
add
add
add
jne
adc
add
add
add
add
inc
jne
add
add
add
add
add
add
add
add
add
add
add
add
leave
cwtl
push
xchg
cwtl
push
lock
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
repz
cwtl
push
mov
cwtl
push
lock
aad
fucomp
aam
jmp
shrb
jmp
int
jmp
lret
movsl
jmp
lret
in
movsb
jmp
lret
in
movsb
jmp
lret
in
movsb
jmp
int3
cmpsl
cwtl
push
repz
cwtl
push
in
xlat
mov
loope
mov
fistpll
jmp
mov
jmp
adc
and
decl
mov
call
lods
jno
aam
jno
aam
jno
in
movsb
dec
cwtl
push
dec
cwtl
push
out
fidivrl
fidivrl
incl
jg
incl
cmp
add
incl
xor
add
aas
test
call
lods
jno
in
movsb
dec
cwtl
push
dec
cwtl
push
push
fdivrl
lcall
ret
incl
xor
jmp
nop
incl
mov
incl
mov
incl
mov
incl
jnp
decl
mov
aam
jno
in
movsb
dec
cwtl
push
dec
cwtl
push
stc
out
ljmp
jle
incl
xchg
lcall
xchg
jmp
repz
decl
incl
mov
incl
mov
incl
mov
incl
jbe
call
lret
leave
cwtl
push
dec
cwtl
push
out
aad
push
fwait
incl
cmp
add
lcall
nop
incl
mov
incl
jle
aas
cmpb
cwtl
push
dec
cwtl
push
out
aad
xor
cld
incl
mov
lcall
xchg
fdivp
aas
cmpsb
incl
test
jmp
js
jmp
lret
leave
cwtl
push
dec
cwtl
push
out
aad
das
mov
incl
test
incl
xchg
lcall
xchg
fsubr
pushl
mov
stc
lcall
js
jmp
lret
movsl
dec
cwtl
push
dec
cwtl
push
out
aad
pop
lahf
fdivr
add
lcall
xchg
decl
incl
mov
incl
jg
incl
mov
dec
cwtl
push
dec
cwtl
push
out
aad
mov
jle
incl
xchg
lcall
xchg
jmp
repz
incl
incl
mov
incl
mov
incl
xchg
incl
jp
lcall
into
test
dec
cwtl
push
out
aad
std
in
ljmp
incl
xor
push
xchg
jmp
mov
incl
mov
incl
xchg
incl
xchg
incl
jg
lcall
mov
jmp
shrb
dec
cwtl
push
out
aad
std
in
push
loope
lcall
loope
add
cli
incl
test
incl
test
incl
cmp
add
decl
int
fidivrl
jmp
cwtl
push
dec
cwtl
push
out
aad
std
in
std
in
std
in
mov
movsl
loopne
sub
mov
scas
jmp
lds
jmp
mov
mov
leave
cwtl
push
dec
cwtl
push
in
cli
call
aad
out
aad
out
aad
out
aad
out
aad
out
aad
out
aad
out
aad
stc
out
push
fdivrl
in
xlat
mov
in
aad
cwtl
push
lock
cwtl
push
test
cwtl
push
in
leave
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
dec
cwtl
push
lock
cwtl
push
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
add
test
stos
xchg
pop
or
cmpsb
jno
mov
popa
aaa
mov
mov
jb
ret
int
stos
jp
shll
popa
push
adc
add
add
add
xchg
pop
and
insl
mov
ja
cmpsb
jb
shlb
ret
les
js
scas
jge
int
xchg
into
mov
mov
sarl
xchg
out
rol
pushf
jmp
lret
test
mov
mov
pop
mov
add
add
into
mov
jg
les
js
lds
lock
mov
xchg
out
fcmovnb
mov
lock
mov
scas
jmp
les
out
movsb
call
xlat
ret
lahf
jmp
int
out
mov
push
call
mov
pop
mov
mov
xchg
in
aam
std
out
loop
shl
shlb
jmp
shlb
ffreep
into
mov
repnz
cmc
fwait
mov
icebp
lret
out
rol
nop
in
fcmovnb
mov
in
fcmovnb
mov
jmp
mov
push
ljmp
push
fistpll
iret
mov
scas
mov
ret
lahf
mov
stos
aad
scas
xor
decl
pop
decl
push
decl
pop
cmp
jg
mov
mov
fsubp
shrb
shrb
jmp
mov
mov
push
push
loop
out
xchg
push
dec
mov
cmpsb
lret
ljmp
fxch
enter
cmp
add
incl
inc
lock
jno
ljmp
outsl
in
jmp
addr16
decl
pop
clc
decl
pop
decl
cld
pushl
ret
in
scas
shrb
jmp
mov
mov
jecxz
in
xchg
push
call
mov
movsl
lret
int3
stos
mov
incl
dec
cld
jmp
lock
outsl
icebp
incl
push
icebp
lcall
imul
sub
jb
lcall
addr16
decl
pusha
decl
clc
pushl
rcrb
mov
push
jmp
mov
mov
in
in
xchg
push
call
mov
cmpsb
out
ret
test
std
add
call
outsl
in
fsubr
cld
sti
ljmp
idiv
add
decl
pop
bnd
jno
ljmp
repnz
insl
decl
stos
jp
out
mov
mov
xlat
mov
mov
in
in
xchg
push
dec
mov
stos
ret
mov
pop
outsb
incl
icebp
ljmp
jmp
inc
fdivr
pushl
jl
incl
pop
out
lcall
outsl
repnz
jne
call
insb
cld
cmp
pushl
les
jmp
mov
mov
in
in
xchg
push
call
mov
stos
ret
stos
mov
call
jb
jmp
jl
call
out
push
stc
decl
arpl
decl
repz
jns
call
mov
push
jmp
mov
mov
in
in
xchg
push
call
mov
test
lcall
jnp
call
bnd
jg
cld
jmp
icebp
decl
idiv
or
repz
mov
jmp
cwtl
push
jmp
mov
mov
in
in
xchg
push
call
mov
mov
lcall
cmp
adc
jmp
xor
fucompp
cld
push
idiv
pushl
jno
lcall
stc
sarl
push
jmp
mov
mov
in
in
xchg
push
call
mov
movsb
into
ds
lcall
xchg
call
repz
jmp
jmp
mov
decl
lcall
mov
sarb
push
in
fidivl
push
in
out
xchg
push
call
mov
movsl
lret
in
lcall
mov
call
repnz
xchg
fucomp
std
cld
std
inc
pushl
cmc
call
test
pushl
mov
ljmp
mov
mov
in
out
xchg
push
call
mov
stos
ret
xchg
test
call
repz
mov
fsubr
cld
jmp
lock
jmp
stc
incl
insl
idiv
pop
js
lcall
jle
jmp
call
mov
push
ljmp
push
in
out
xchg
push
call
mov
lods
rol
pushf
fcomps
decl
cmp
xor
cld
cld
ljmp
test
incl
jno
jmp
test
ljmp
xchg
incl
hlt
pushl
leave
movsl
in
cwtl
push
jmp
cwtl
push
push
in
out
xchg
push
dec
mov
test
mov
xchg
aam
add
repz
clc
cld
fldl2e
std
jmp
cli
incl
jne
call
mov
ljmp
mov
jmp
cmp
sbb
sahf
cld
shrl
jmp
out
push
in
out
xchg
push
dec
mov
mov
lods
mov
xchg
decl
nop
jle
clc
lcall
xchg
idiv
add
mov
ljmp
nop
idiv
das
idiv
sub
call
in
pushl
int3
cmpsl
in
loope
out
mov
fnstenv
push
in
out
xchg
push
dec
mov
sahf
lret
les
stos
mov
incl
mov
decl
cmp
pop
mov
pushl
xchg
hlt
pushl
nop
repz
incl
xchg
incl
pushl
mov
call
mov
fidivl
push
in
out
xchg
push
dec
mov
cli
sarl
shlb
mov
mov
inc
xchg
sar
add
decl
xchg
decl
xchg
incl
xchg
call
xchg
ljmp
inc
cmpsb
jns
ffree
mov
jmp
shrb
out
mov
fidivl
push
in
out
xchg
push
dec
mov
stc
rol
lahf
ret
jecxz
mov
loopne
ret
loop
mov
fld
xchg
jmp
andl
std
pop
xchg
sti
xchg
mov
nop
icebp
fld
xchg
jmp
jmp
shrb
out
fidivl
in
fnstenv
cli
out
jmp
sarl
loope
fadd
mov
fmulp
mov
loopne
shrl
stc
jmp
aam
cmc
ljmp
hlt
ljmp
icebp
out
icebp
in
fnstenv
mul
shl
popf
pop
in
fnstenv
fcmovb
popf
ror
mov
test
mov
scas
jb
int3
scas
jb
int3
scas
jb
lret
lods
jno
lret
lods
jo
lret
lods
jo
lret
dec
stos
insl
dec
stos
insb
dec
test
push
cmpsl
imul
lds
inc
movsb
gs
mov
dec
xchg
mov
push
push
incb
add
addb
add
add
add
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
push
add
add
add
jmp
add
jmp
add
jmp
mov
sarl
jae
scas
xchg
arpl
scas
xchg
add
mov
cmp
lea
add
sahf
adcb
nop
pop
adc
mov
pop
inc
mov
pop
pop
mov
pop
jno
lcall
mov
mov
gs
mov
inc
mov
add
add
jl
pop
scas
push
push
mov
pop
and
push
gs
lahf
imul
mov
stos
jns
shlb
in
mov
out
mov
cltd
in
rcrb
loope
popf
idivb
mov
in
lea
cmp
cmp
add
add
cmp
cmp
mov
pop
sahf
mov
mov
insl
rol
movsb
jae
lods
jnp
shlb
xchg
call
fcmovnb
pushf
call
faddp
mov
out
rcrl
loop
mov
in
lahf
out
enter
popf
jmp
mov
lret
mov
dec
lods
jns
ret
mov
cmp
sub
cmp
add
add
add
cmpsl
pop
ret
xchg
std
jmp
int
loopne
iret
stos
loop
int3
movsl
in
movsb
loope
int
fucomip
mov
repz
icebp
neg
mov
out
xlat
mov
jmp
lods
call
call
int
in
in
lahf
in
in
lahf
out
jecxz
lahf
jmp
iret
mov
cmc
fidivs
push
fidivs
repnz
cmp
cmp
sub
cmp
xor
cmp
or
add
add
add
add
mov
sti
cmpsb
int3
repnz
mov
iret
stos
aam
lds
loopne
aam
ffreep
sarb
sub
call
push
incl
aam
mov
int3
call
les
icebp
jecxz
movsl
in
shrl
in
into
cmpsb
loope
shlb
std
lock
push
fnsave
cmp
cmp
cmp
cmp
aad
data16
mov
mov
iret
lods
rcl
mov
jg
clc
pop
outsb
out
std
sbb
jmp
push
jmp
out
jmp
imul
decl
jo
inc
ret
lds
mov
in
shrb
icebp
mov
fdivl
push
fnsave
incl
add
add
mov
neg
mov
mov
shll
cli
cmp
sti
adc
data16
decl
popa
lock
bnd
outsb
bnd
outsb
bnd
insl
repnz
outsb
repnz
out
lcall
addr16
mov
stos
xor
int
jecxz
shrl
icebp
rcrb
rcrb
clc
rcrl
aad
data16
mov
scas
fcompp
iret
fdivs
jp
adc
ljmp
repnz
std
dec
loopne
pushl
pop
repnz
insb
bnd
jno
jmp
outsl
bnd
outsl
bnd
push
lcall
insb
in
mov
cmpsb
jge
in
movsb
in
aad
icebp
rcrb
rcrb
clc
rcrl
aad
data16
lds
pop
mov
call
imul
or
lock
jnp
idiv
lcall
imul
adc
jmp
jo
jmp
jno
jmp
jo
call
repz
shrl
lock
std
lock
push
fidivs
incl
add
add
mov
neg
test
ror
and
jmp
push
idiv
jmp
in
sti
lcall
repz
push
bnd
jae
call
push
mov
mov
out
cmc
fldt
std
lock
push
fidivs
incl
add
add
mov
neg
lret
jle
ret
out
adc
ljmp
hlt
decl
imul
jle
idiv
ljmp
jp
call
push
lock
imul
fs
inc
lods
test
repnz
std
lock
push
fidivs
incl
add
add
mov
neg
leave
stos
lret
sbb
ljmp
hlt
decl
outsb
cmc
incl
pushl
jmp
ja
call
and
scas
test
in
shlb
std
lock
push
fidivs
incl
add
add
mov
hlt
fcmovb
cmpsb
into
xor
sbb
test
decl
jb
incl
jmp
repz
insl
repz
jnp
dec
scas
test
jmp
pushf
push
std
lock
push
fidivs
incl
add
add
mov
hlt
fcmovb
cmpsl
int
jg
pop
test
ljmp
mov
decl
idiv
xorb
pushl
idiv
adc
ljmp
jle
dec
scas
test
jmp
movsl
out
rcrb
rcrb
clc
rcrl
aad
addr16
test
dec
xchg
cli
and
hlt
call
xor
xchg
ljmp
ljmp
xor
adc
incl
out
lds
cmpsl
out
rcrb
rcrb
clc
rcrl
aad
neg
lret
insl
xchg
mov
ds
hlt
call
xchg
decl
call
xor
sbb
jmp
jg
call
cld
ljmp
into
inc
stos
xor
fsubrs
std
lock
push
fidivs
incl
add
add
mov
clc
scas
pushf
movsl
mov
incl
stc
lcall
idiv
mov
jmp
lock
call
clc
call
jnp
lcall
xor
sub
cmc
call
xchg
lahf
std
lds
mov
mov
fdivl
push
fidivs
incl
add
add
mov
neg
leave
test
loope
ret
mov
ljmp
cltd
std
lcall
nop
cmc
call
call
mov
lcall
idiv
sub
idiv
sub
idiv
push
jl
call
loope
mov
into
cmpsl
in
fidivs
std
lock
push
fidivs
incl
add
add
mov
neg
les
scas
xchg
lcall
sbb
scas
idiv
fucomi
cld
call
stc
lcall
mov
ljmp
mov
ljmp
idiv
sub
idiv
es
jmp
pushf
std
sarl
mov
neg
mov
rcrb
rcrb
rcrl
aam
gs
rcrl
lods
lret
orb
jmp
xchg
sti
incl
idiv
sub
idiv
xor
idiv
xor
idiv
daa
mov
lcall
mov
nop
div
fidivl
jmp
rcrb
rcrb
rcrl
aam
gs
mov
mov
iret
sarl
cwtl
cld
cmp
sti
ljmp
xchg
clc
pushl
cmc
pushl
cmc
ljmp
cmc
lcall
mov
decl
mov
imul
scas
ljmp
mov
neg
mov
rcrb
rcrb
rcrl
shrl
lcall
int
rcr
lahf
ljmp
jl
jae
mov
inc
mov
jmp
mov
call
mov
incl
jns
mov
cld
sarl
scas
ljmp
mov
cmc
fdivl
hlt
rcrb
rcrb
rcrl
aam
gs
sarb
mov
rcr
rclb
shrl
clc
enter
mov
sti
mov
cld
enter
iret
mov
mov
lock
mov
cmc
fdivl
jmp
fidivl
call
rcrb
rcrb
clc
mov
add
add
scas
addr16
shlb
mov
shl
lret
out
aam
jmp
neg
scas
div
fldt
hlt
neg
scas
hlt
neg
mov
neg
mov
cli
loopne
hlt
cld
loop
hlt
stc
fbstp
repnz
fidivs
out
stc
fbstp
rcrl
lds
arpl
mov
add
add
cwtl
data16
mov
jo
ret
lahf
outsl
inc
lahf
outsb
inc
sahf
insl
inc
popf
imul
pushf
push
mov
lcall
mov
xchg
pusha
mov
xchg
pop
pushl
xchg
pop
pushl
push
pushl
mov
mov
pop
mov
movsb
mov
test
pop
push
in
add
clc
add
inc
add
pop
rolb
add
add
add
add
add
add
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
ljmp
add
add
add
add
add
add
and
add
add
andb
add
add
push
adc
adc
add
add
add
sbb
add
push
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
adc
or
push
adc
and
and
sub
jbe
ss
xor
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
or
and
adc
and
daa
or
cmp
pop
sub
mov
push
sahf
jle
stos
xchg
jle
mov
lea
fwait
inc
mov
mov
cmp
add
add
push
add
push
add
add
add
add
add
add
add
add
or
add
or
add
adc
push
add
add
adc
add
push
sbb
and
sub
sub
and
nop
jne
push
movsb
test
xorb
inc
scas
ret
ret
dec
leave
movsb
push
into
lret
rcl
mov
fcom
mov
mov
out
cwtl
in
jmp
fdivl
jmp
mov
add
add
add
add
add
push
add
add
add
add
add
pop
adc
prefetch
sbb
push
pop
sub
aas
pop
das
outsb
pop
sub
xchg
jnp
pop
cmpsl
xchg
stos
xchg
xorb
scas
rcrl
into
leave
movsl
push
aad
scas
arpl
xlat
mov
sub
mov
out
xchg
out
in
cwtl
call
nop
nop
faddp
xchg
rcr
xchg
rcr
ret
mov
fld
xchg
out
fnsave
mov
xchg
sub
lret
movsb
push
test
add
add
add
or
add
or
pop
or
add
add
pop
and
xchg
js
push
movsl
test
insl
stos
xchg
test
fwait
inc
mov
sahf
dec
int3
mov
pop
scas
in
mov
jle
faddp
test
loope
in
rcrb
fsubp
into
pushf
fnclex
lret
cwtl
xlat
fmulp
xchg
aam
nop
rcr
xchg
aad
fcmovnu
nop
loope
mov
ffreep
out
les
out
lds
jecxz
fdivl
loope
ja
repnz
mov
xchg
imul
sbb
push
add
dec
dec
push
push
lods
scas
add
add
add
ret
mov
push
xlat
int3
stos
pop
mov
loope
mov
mov
in
xchg
ljmp
cltd
int
loop
cltd
aam
int3
cltd
shl
lret
cwtl
aad
lret
loopne
xchg
xchg
fucom
enter
leave
xchg
in
lret
jecxz
xchg
call
loopne
nop
out
in
mov
faddp
mov
ffreep
in
lds
fcmovnb
xchg
out
fdivl
fistpll
mov
test
lea
idivl
xchg
scas
ja
push
push
sub
daa
add
shll
jl
out
pushf
lret
mov
mov
jecxz
fwait
leave
jecxz
lcall
int3
xchg
lret
loope
xchg
in
rcrl
jmp
out
xlat
cmpsb
call
jmp
movsb
loopne
rcrb
in
lret
xchg
out
int3
xchg
out
lret
loop
xchg
out
loop
lock
icebp
loopne
mov
ffreep
mov
faddp
mov
fadd
xchg
out
fdivl
fistpll
mov
scas
jg
dec
test
mov
mov
xchg
pop
or
and
and
add
mov
jmp
int
mov
out
fdivl
scas
out
lcall
shll
fld1
shll
cli
in
in
into
mov
cmpsl
mov
cli
lea
idiv
nop
stos
out
mov
iret
fnsave
repz
xchg
in
in
xchg
call
in
xchg
out
lret
xchg
out
lret
loop
xchg
out
lret
ffreep
mov
icebp
fidivs
fistpll
mov
mov
sbb
shrl
mov
mov
or
adc
adc
daa
sbb
or
sub
pop
into
mov
jmp
rcrb
cmpsl
out
fdivl
mov
mov
loopne
mov
jmp
stos
int3
repnz
jmp
lds
cld
inc
xor
jmp
push
jmp
repnz
jo
pushl
jne
decl
hlt
addr16
hlt
sahf
mov
jecxz
lods
cli
ljmp
out
rcrb
in
int3
cwtl
in
int3
xchg
in
lret
xchg
in
leave
xchg
in
loopne
out
int
cmp
fistpll
mov
mov
lods
in
fistpll
std
lret
pop
or
or
adc
pop
movups
pop
or
xor
cmp
into
mov
jmp
iret
sahf
mov
out
fdivl
mov
lds
loope
loopne
fldl2t
fnstenv
clc
aaa
jp
std
outsl
lock
outsb
icebp
jmp
insl
icebp
jmp
insb
icebp
jmp
push
jmp
icebp
jmp
jnp
push
mov
fwait
hlt
fadd
xchg
out
sahf
jecxz
into
lcall
int3
xchg
in
lret
repnz
in
int
cmp
fistpll
mov
mov
scas
in
loope
loopne
xchg
xor
aam
jno
sub
adc
and
and
pop
es
pop
sub
xor
outsb
xor
add
lods
mov
add
add
add
mov
jmp
iret
sahf
mov
out
fdivl
mov
mov
lcall
nop
loopne
xor
daa
jno
jmp
jo
jmp
outsl
bnd
outsb
icebp
jmp
insl
icebp
jmp
insb
icebp
jmp
imul
and
decl
popf
mov
cld
in
popf
not
mov
lahf
jecxz
into
cltd
in
int
in
lret
repnz
in
int
cmp
fistpll
mov
ret
xchg
cs
mov
in
loope
loopne
lahf
cmp
mov
add
dec
outsl
and
and
add
add
add
mov
jmp
iret
sahf
mov
out
fdivl
jmp
sahf
out
int3
mov
sti
sub
jmp
jo
call
gs
call
fs
call
insb
bnd
outsl
bnd
outsl
icebp
jmp
outsb
bnd
insl
bnd
insb
icebp
jmp
insl
icebp
decl
out
cltd
mov
jmp
mov
popf
jecxz
int
in
lret
xchg
jecxz
loopne
in
iret
mov
ja
icebp
call
mov
in
loopne
loopne
lahf
cmp
fstpt
add
into
mov
jmp
iret
sahf
mov
out
fdivl
lock
std
daa
ja
jmp
jb
jmp
icebp
lcall
js
idiv
sub
and
jmp
bnd
jo
jmp
jo
jmp
outsl
bnd
outsb
bnd
insl
icebp
jmp
insb
icebp
decl
icebp
mov
loopne
repz
mov
out
fwait
in
lret
xchg
jecxz
loopne
in
into
mov
ja
icebp
call
scas
addr16
loope
loopne
mov
jg
into
mov
jmp
iret
sahf
mov
in
fdivl
rcrb
jne
ljmp
js
call
push
pushl
idiv
call
jecxz
decl
repz
jo
jmp
jno
jmp
jno
jmp
jo
jmp
jo
jmp
outsl
bnd
outsl
bnd
insl
icebp
lcall
repz
lret
fnstcw
fwait
jecxz
int3
xchg
jecxz
loopne
in
into
mov
ja
icebp
call
mov
in
loope
loopne
mov
xchg
add
add
mov
jmp
iret
sahf
mov
icebp
loopne
mov
xlat
mov
cs
ljmp
js
call
push
lcall
stc
sti
lcall
jge
jmp
jo
jmp
jno
jmp
jb
jmp
jno
jmp
jno
jmp
jo
jmp
jo
ljmp
jne
decl
ret
xchg
hlt
fnstcw
lcall
mov
js
lock
call
mov
in
loope
loopne
mov
xchg
add
add
mov
call
fidivrs
int3
andl
ljmp
jnp
ljmp
jp
call
insl
bnd
fsub
sti
ljmp
hlt
ljmp
jne
jmp
jb
jmp
jae
jmp
jae
jmp
jb
jmp
jno
ljmp
je
call
out
mov
mov
aam
jbe
out
lcall
mov
je
out
fidivl
call
mov
in
loope
loopne
mov
xchg
add
add
mov
call
loop
mov
sbb
jge
ljmp
jge
ljmp
jl
call
insl
bnd
lcall
mov
ljmp
js
jmp
je
jmp
bnd
je
jmp
jae
ljmp
je
cmp
popf
mov
xor
enter
loope
in
into
mov
jae
out
fnstenv
call
mov
in
loope
loopne
mov
xchg
add
add
mov
call
jecxz
scas
lret
mov
ljmp
jg
jmp
jle
ljmp
jg
call
outsl
hlt
jmp
push
idiv
ljmp
hlt
pushl
jle
ljmp
repz
je
jmp
bnd
jne
ljmp
js
pushl
out
int3
mov
jns
hlt
loop
in
into
mov
jae
out
fidivl
call
mov
in
loope
loopne
mov
xchg
add
add
mov
jmp
in
rorb
ljmp
xor
sub
cmc
call
jno
jmp
pushl
xchg
repz
jg
ljmp
repz
jno
decl
dec
les
ljmp
cmp
fnstsw
mov
cltd
xor
in
loope
loopne
mov
mov
add
add
mov
ljmp
rclb
out
jmp
idiv
sub
cmc
ljmp
xor
jmp
push
clc
std
ljmp
idiv
cmp
repz
mov
mov
in
hlt
loop
in
into
mov
je
out
fnstenv
call
mov
in
loope
loopne
mov
mov
add
add
mov
ljmp
fisubrl
cmp
ljmp
xor
sub
cmc
call
jne
jmp
std
call
repnz
repz
bnd
jg
pushl
mov
in
repz
in
into
mov
je
out
fidivl
call
mov
in
loope
loopne
mov
mov
add
add
mov
jmp
mov
icebp
fbstp
ljmp
xchg
ljmp
test
ljmp
test
ljmp
test
call
ja
jmp
ljmp
hlt
ljmp
xor
and
icebp
jmp
ror
into
mov
in
repz
in
into
mov
je
out
fidivl
call
mov
in
loope
loopne
mov
mov
add
add
mov
in
fsubrs
test
ljmp
xchg
ljmp
xchg
ljmp
xchg
ljmp
test
call
jns
jmp
mov
sahf
idiv
sub
jp
ljmp
xchg
inc
int
in
repz
in
into
mov
je
out
fidivl
call
mov
in
loopne
loopne
mov
mov
add
add
mov
in
fdivl
into
inc
cmc
jmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
call
jnp
pushl
push
idiv
incl
fwait
idiv
cmp
hlt
jmp
jp
incl
std
dec
les
hlt
loop
in
into
mov
je
out
fidivl
call
mov
in
loopne
loopne
mov
mov
add
add
mov
in
fdivl
mov
and
idiv
sub
idiv
adc
pushl
ljmp
idiv
aaa
mov
ljmp
xor
and
cmc
ljmp
xor
sbb
cmc
ljmp
cmc
dec
mov
imul
loop
in
into
mov
je
out
fidivl
call
mov
in
loope
loopne
mov
pop
into
mov
in
lods
sarl
ljmp
mov
ljmp
mov
ljmp
mov
call
idiv
mov
cli
jmp
repnz
incl
idiv
xor
cmc
jmp
xor
sub
cmc
call
jns
call
mov
repz
and
loopne
in
into
mov
je
out
fidivl
call
mov
in
loopne
loopne
mov
xchg
add
add
iret
mov
in
lahf
fmulp
test
and
ljmp
idiv
sub
pushl
std
inc
decl
pushl
mov
ljmp
idiv
and
test
ljmp
test
ljmp
test
ljmp
xor
sub
cld
enter
loope
xchg
jecxz
loop
out
into
mov
je
out
fidivl
call
scas
in
loope
loopne
mov
xchg
add
add
into
mov
in
lahf
in
fidivrs
ljmp
sti
ljmp
idiv
sub
idiv
adc
aam
std
push
clc
std
jns
stc
cmp
idiv
xor
idiv
daa
mov
ljmp
xchg
ljmp
xchg
ljmp
xchg
ljmp
xchg
jmp
xor
pop
cmpsl
sti
dec
mov
in
out
pushf
in
in
icebp
int
cmp
fnstsw
mov
cwtl
xor
aad
data16
loope
jecxz
mov
xchg
add
add
int
arpl
in
fnstenv
movsb
lock
mov
mov
ljmp
nop
idiv
sub
idiv
adc
stc
std
pushl
mov
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
cld
pushl
mov
icebp
loope
nop
ljmp
mov
fnstsw
mov
cwtl
xor
xlat
mov
jmp
iret
mov
xchg
add
add
int3
scas
popa
jmp
mov
repnz
cmpsb
repz
cmpsb
jmp
pushf
loopne
daa
xchg
ljmp
xchg
jmp
push
clc
decl
xchg
idiv
xor
idiv
sub
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
lcall
test
jmp
repnz
mov
jne
jmp
mov
out
in
icebp
shlb
je
out
fidivl
call
mov
call
iret
mov
xchg
add
add
int3
lods
pop
ljmp
movsl
icebp
jecxz
lods
icebp
in
lods
fcmovne
mov
ljmp
xchg
stc
jmp
cltd
idiv
mov
sar
decl
clc
pushl
xchg
idiv
sub
idiv
sub
idiv
sub
idiv
sub
ljmp
mov
jmp
mov
ds
sti
call
lret
shll
fwait
jmp
ljmp
repz
je
out
fnstenv
call
mov
call
iret
mov
xchg
add
add
lret
lods
pop
ljmp
movsb
lock
lods
repnz
scas
out
movsb
call
sbb
ljmp
cli
jmp
idiv
sbb
idiv
daa
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
sti
pushl
mov
out
mov
jmp
xlat
cmpsb
in
ljmp
repnz
jae
out
fidivl
call
mov
call
iret
mov
fwait
push
add
add
lods
pop
jmp
loop
movsb
lock
lods
lock
mov
shll
out
mov
xchg
std
ljmp
xchg
ljmp
xchg
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
clc
pushl
cwtl
stc
pushl
lret
jecxz
fwait
out
icebp
fdivl
jmp
fsubrs
ljmp
cmp
out
fidivl
call
mov
call
iret
mov
fwait
push
add
add
lods
pop
jmp
loope
movsb
out
loopne
lods
lock
scas
out
movsl
call
ljmp
cld
xor
hlt
jmp
lcall
cs
idiv
cs
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
idiv
sub
ds
std
dec
enter
lret
cltd
cmc
out
cmpsb
in
icebp
fidivs
jmp
fisubrl
jmp
xlat
stos
ljmp
cmp
jmp
cwtl
xor
xlat
mov
call
iret
mov
fwait
push
add
add
lods
pop
call
loopne
mov
out
loope
scas
out
movsb
call
repnz
aam
fnstenv
lock
movsl
scas
jmp
xchg
lcall
cwtl
jmp
cwtl
jmp
xchg
jmp
xchg
lcall
xchg
lcall
xchg
call
into
test
in
mov
jmp
fidivs
jmp
jmp
fidivl
ljmp
cmp
ljmp
xor
xlat
mov
call
iret
mov
fwait
push
add
add
stos
pop
call
loopne
mov
out
loope
scas
out
mov
out
loopne
icebp
loopne
xlat
out
fnsave
mul
shrl
cli
mov
int
inc
xchg
in
imul
lods
cld
out
stos
imul
fldcw
in
lock
jmp
fnsave
jmp
fdivl
out
ljmp
cmp
jmp
shll
call
mov
call
fsubrs
fwait
push
add
add
stos
pop
call
fidivrs
stos
out
fistpll
jmp
icebp
loopne
aad
fistpll
in
lods
imul
out
fdivl
out
out
fdivl
out
fnsave
ljmp
mov
ljmp
mov
lock
jmp
fnsave
jmp
fdivl
stc
jmp
cmp
bnd
xchg
xor
fidivl
cmp
mov
incl
add
add
mov
jmp
in
fadd
imul
fmul
clc
lock
cmc
ljmp
imul
fsubr
imul
xlat
jmp
in
xlat
ljmp
iret
hlt
hlt
out
repz
out
repz
out
repz
out
repz
out
repz
icebp
repnz
repnz
repnz
repnz
repnz
loope
icebp
icebp
loope
repnz
loope
icebp
icebp
loope
repnz
fistpll
lock
fnstsw
in
stc
ljmp
aad
outsl
jmp
rcrb
call
stos
dec
cmc
shrl
insl
nop
lcall
int3
lods
popa
movsb
mov
insb
repz
mov
repz
mov
cmc
fdivrs
js
ffree
cmp
ffreep
xchg
ffreep
mov
loope
mov
in
xchg
std
in
lcall
rcrl
sti
ljmp
cli
in
fidivl
cli
out
stc
icebp
loopne
stc
repnz
stc
repnz
clc
repnz
clc
repz
clc
hlt
call
int3
hlt
stc
jmp
push
call
stos
dec
clc
shlb
jge
incl
call
ret
fcmove
nop
aas
aam
jg
fld
adcl
jnp
aam
outsb
gs
scas
pop
addr16
scas
push
insb
iret
scas
pop
insl
into
scas
pop
jg
lods
pop
test
lods
pop
nop
into
lods
pop
xchg
int
pop
fwait
shll
push
mov
mov
mov
test
into
test
push
ror
test
push
test
push
in
stos
pop
repnz
stos
pop
repz
test
hlt
int3
movsb
dec
repz
lds
add
incl
inc
add
incl
add
lock
add
add
cld
add
add
incl
add
add
add
jg
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
pop
add
rolb
add
add
add
add
add
add
add
add
add
jns
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
addb
add
add
add
add
add
inc
add
mov
popf
outsl
adc
outsl
cs
popf
outsb
sub
popf
outsl
or
add
add
outsl
adc
outsl
cs
xchg
popa
pop
mov
mov
stos
orb
dec
shrb
push
fcoml
jle
gs
popf
outsl
add
add
add
outsl
adc
outsl
das
mov
xchg
pop
bound
xchg
test
dec
mov
jle
lds
mov
xchg
call
int
mov
fld
fwait
icebp
in
scas
repnz
xlat
mov
lock
sti
mov
pop
inc
jnp
mov
mov
popf
outsl
cmp
add
mov
popf
outsl
push
mov
popf
outsl
cs
xchg
pop
popa
mov
push
lea
orb
jle
iret
stos
orl
mov
pop
jmp
into
mov
lock
test
out
fstpt
jmp
mov
call
leave
mov
mov
mov
xorl
shrl
call
mov
test
data16
insb
dec
fs
popf
outsl
push
mov
add
add
outsl
or
mov
xchg
arpl
pop
data16
xchg
movsl
orb
jg
lds
orl
mov
pop
ljmp
jle
fidivrl
in
in
fdivrs
fucomip
fnstcw
jecxz
movsl
mov
fnstcw
xorb
mov
adc
call
les
ljmp
scas
repz
xorl
int3
scas
jle
jecxz
cwtl
ret
pop
incl
push
cmp
mov
outsl
sbb
mov
xchg
pop
je
xchg
cmpsb
orl
cmpsl
orb
orb
test
mov
push
in
rcrl
fidivrl
sahf
jmp
lock
fucomp
fidivrl
lret
lods
ret
lahf
mov
fdivrs
add
fidivrs
and
jmp
les
out
mov
in
mov
in
fucomi
mov
jmp
mov
jmp
mov
in
lds
out
rorb
shrb
ja
leave
lcall
mov
mov
inc
in
push
add
or
add
pop
add
add
lcall
mov
pop
mov
ret
repnz
test
in
cwtl
out
aam
fucomp
fnstcw
aad
xlat
mov
rcr
popf
rcr
mov
fnstcw
jle
fistpll
jge
out
jle
call
ret
ljmp
loop
fucomp
enter
nop
jmp
lds
xlat
jmp
ret
xchg
in
les
ljmp
xchg
repz
out
aad
stc
les
cmp
fnstsw
jbe
int
pop
ljmp
jae
lret
mov
rcl
cmpsb
jle
sub
add
add
add
add
add
add
add
add
add
add
lcall
test
push
rcrl
cmc
in
mov
in
fdivs
mov
les
xlat
loop
sbb
mov
test
jmp
test
lock
out
fldcw
out
fnstenv
fisubrl
xlat
icebp
lret
in
lds
in
mov
in
mov
out
mov
lock
lret
repz
mov
hlt
int
in
hlt
into
nop
jmp
test
in
rcll
repnz
xchg
dec
pushl
mov
jns
shlb
divb
mov
rcl
movsl
lcall
add
and
add
add
add
add
add
add
add
add
lcall
in
je
hlt
int
mov
fisubrs
mov
fisubrs
xchg
lock
not
xchg
fdivrp
aad
iret
stc
aad
leave
fstps
int
loope
ret
jge
repnz
pop
mov
std
dec
test
decl
clc
decl
clc
jmp
cmc
decl
mov
mov
in
lret
in
lret
not
cltd
loop
aad
loope
aam
loopne
aam
aam
rcrl
loopne
rcll
loopne
aad
fcomip
fidivl
mov
cmp
in
mov
fidivrs
arpl
mov
das
cmc
shll
rcr
stos
lcallw
add
add
and
add
and
add
add
add
add
add
add
add
add
add
lcall
in
jne
cmc
rclb
fisubrs
mov
rcrl
hlt
int
out
mov
in
aam
subl
hlt
lcall
icebp
lcall
gs
lcall
fs
lcall
popa
icebp
lcall
pop
repz
gs
inc
jg
decl
leave
mov
out
int
fisubl
fdivrp
popf
fdivrp
pushf
fdivrp
aad
fdivrp
aad
aad
aad
fidivrs
pushl
mov
loopne
jle
fldcw
xor
les
adc
scas
push
sahf
je
roll
add
or
add
push
add
add
add
add
add
add
add
add
lcall
in
jne
cmc
rclb
mov
fisubrs
mov
rcrl
push
rclb
mov
mov
ja
call
bnd
push
jmp
insb
icebp
jmp
imul
and
push
jmp
imul
lcall
arpl
lcall
pusha
repz
ljmp
mov
jecxz
fldenv
fcomps
xlat
popf
xlat
cltd
loop
icebp
loop
je
mov
enter
ret
sbb
mov
xor
shll
mov
loope
outsb
jmp
add
add
add
push
add
add
add
add
add
add
lcall
in
jbe
hlt
rclb
mov
fisubrs
not
popf
stos
in
ret
cmp
rorl
fsubrs
repz
sbb
jmp
insb
icebp
jmp
outsl
icebp
jmp
outsb
icebp
jmp
insl
icebp
jmp
insl
icebp
jmp
insb
icebp
jmp
imul
and
push
jmp
arpl
jmp
push
icebp
rol
movsb
repz
mov
mov
sahf
popf
pushf
xlat
jecxz
icebp
call
xchg
inc
out
in
leave
xchg
out
sbb
mov
pushl
mov
nop
mov
scas
andl
add
lcall
in
jbe
hlt
rclb
mov
fisubrs
mov
aam
stos
repnz
pop
xchg
repnz
pop
imul
jmp
jno
jmp
outsl
bnd
outsl
bnd
outsb
icebp
jmp
insl
icebp
jmp
insb
icebp
jmp
imul
and
imul
and
lcall
arpl
incl
mov
mov
cli
fsubs
xlat
lahf
popf
xlat
pushf
jecxz
icebp
ljmp
out
in
leave
xchg
out
xchg
jmp
test
mov
mov
xchg
mov
mov
add
add
lcall
in
ja
hlt
rclb
mov
fildll
mov
aam
stos
repz
lcall
insb
cmc
jmp
jae
jmp
jae
jmp
outsl
bnd
outsl
icebp
jmp
insl
bnd
bnd
outsl
bnd
outsl
icebp
jmp
outsb
bnd
insl
bnd
insb
icebp
jmp
push
lcall
fs
call
mov
icebp
fidivrl
mov
xlat
sahf
xlat
popf
jecxz
icebp
ljmp
out
ljmp
fdiv
iret
xchg
mov
mov
nop
mov
mov
add
add
lcall
in
ja
repz
mov
fildll
xchg
fsubl
sbb
jmp
jne
jmp
jne
jmp
jo
incl
repz
mov
loope
decl
xor
sub
bnd
jno
jmp
jo
jmp
jo
jmp
outsl
bnd
outsl
icebp
jmp
outsb
icebp
jmp
insl
icebp
jmp
push
jmp
lds
lcall
xlat
lahf
fcomps
icebp
ljmp
out
ljmp
fdiv
into
nop
mov
mov
xchg
mov
mov
add
add
lcall
in
js
repz
mov
fbstp
mov
leave
ret
js
jmp
jne
jmp
ja
jmp
jb
mov
call
loop
insl
mov
repz
jne
jmp
jno
jmp
jno
jmp
jo
jmp
jo
jmp
outsl
bnd
outsl
bnd
outsl
bnd
outsb
repnz
icebp
decl
cli
dec
ret
mov
jmp
stc
fsubs
jecxz
icebp
ljmp
out
jmp
movb
mov
mov
xchg
mov
rclb
add
lcall
in
js
repz
mov
loope
xchg
fildll
sbb
idiv
daa
js
jmp
js
jmp
jne
cmp
stc
sti
jmp
hlt
pushl
jnp
ljmp
jne
jmp
bnd
jb
jmp
jno
jmp
jno
jmp
jo
jmp
jo
jmp
outsl
bnd
outsl
repnz
push
in
std
scas
nop
out
loop
cltd
loop
fisubl
jecxz
icebp
ljmp
out
jmp
movl
repz
xchg
xchg
jmp
xchg
mov
rcrl
add
lcall
in
js
repz
mov
in
mov
sarl
es
jmp
jp
jmp
jns
jmp
jne
decl
repz
repnz
std
fucomp
cld
jp
idiv
cmp
repz
jnp
jmp
je
jmp
jb
jmp
jb
jmp
jb
jmp
jno
jmp
jno
jmp
jo
lcall
imul
inc
xchg
dec
ret
lods
mov
clc
fsubs
jecxz
icebp
jmp
jg
mov
lret
in
xchg
lock
nop
mov
mov
xchg
mov
rcll
add
lcall
in
js
repz
test
fildll
sti
sbb
ljmp
jl
ljmp
jnp
ljmp
jnp
jmp
jbe
decl
repz
icebp
idiv
std
pushl
hlt
pushl
xor
sub
jae
jmp
jae
jmp
jae
jmp
jae
jmp
jno
jmp
jb
jmp
jno
lcall
outsb
idiv
stos
mov
mov
ljmp
fcomi
jecxz
icebp
ljmp
out
call
movb
mov
mov
xchg
mov
rcll
add
lcall
in
jns
repz
and
test
jmp
jl
jmp
jge
jmp
jge
jmp
jl
jmp
js
decl
hlt
std
repnz
jmp
out
std
incl
mov
pushl
jg
ljmp
ja
jmp
jae
jmp
je
jmp
je
jmp
jae
lcall
imul
je
hlt
dec
mov
icebp
aad
xchg
in
frstor
lock
outsb
mov
lret
in
mov
lock
nop
mov
mov
xchg
mov
rcll
add
lcall
in
jns
repz
test
jl
jmp
jg
ljmp
jle
jmp
jle
jmp
jle
jmp
jns
decl
cmc
std
cmc
clc
std
inc
fdivr
popa
pushf
cmc
cmp
jle
jmp
jne
jmp
je
jmp
je
jmp
jo
decl
cli
dec
mov
jmp
mul
mov
mov
lret
pushf
in
mov
out
int3
mov
mov
mov
xchg
mov
rcll
add
lcall
in
jns
hlt
rcrb
mov
sti
ljmp
xor
ljmp
xor
sub
jmp
jnp
decl
cmc
std
idiv
out
cmc
call
hlt
cmp
jmp
jne
jmp
jbe
pushl
jg
inc
ror
shlb
loope
lock
pop
pushl
int3
sahf
in
mov
in
movb
aam
xchg
xchg
ljmp
inc
xchg
aas
roll
add
add
lcall
in
jns
hlt
rcrl
cltd
push
jg
ljmp
xor
sub
cmc
ljmp
xor
decl
cmc
std
stc
sti
dec
push
mov
ljmp
jns
jmp
jbe
jmp
clc
pushl
cmpsb
mov
in
shll
lock
pop
pushl
int3
sahf
in
mov
jmp
cmp
aam
cwtl
xchg
ljmp
inc
xchg
cmp
jmp
in
jns
cmc
rcrl
mov
and
cmc
ljmp
xor
sub
cmc
jmp
jle
decl
cmc
std
clc
cli
std
in
hlt
bound
hlt
jmp
jp
jmp
js
jmp
jbe
jmp
cmpsb
in
jmp
loop
lock
pop
pushl
int3
lahf
in
mov
jmp
mov
repnz
cltd
xchg
jmp
ret
cmp
jmp
in
jns
cmc
aam
test
dec
mov
jmp
cmp
sub
ljmp
xor
sub
cmc
decl
idiv
idiv
call
mov
ljmp
jnp
jmp
jns
lcall
jbe
lcall
cmpsl
mov
out
mov
lock
pop
pushl
lret
lahf
in
xchg
jmp
mov
repnz
cltd
xchg
ljmp
mov
add
add
jmp
in
jns
cmc
aam
test
dec
mov
jmp
test
ljmp
xchg
ljmp
test
ljmp
test
ljmp
test
jmp
xor
dec
xchg
idiv
hlt
clc
sti
incl
test
jmp
jge
ljmp
jnp
jmp
jns
jmp
movsl
in
call
out
repz
pop
pushl
lret
sahf
ret
out
fsubrp
mov
cmp
aam
cwtl
xchg
jmp
mov
das
int
add
add
jmp
in
jns
cmc
aam
test
dec
aam
and
idiv
sub
idiv
sub
cmc
decl
idiv
repnz
std
ljmp
cwtl
idiv
sub
jle
ljmp
jg
ljmp
xor
lods
mov
mov
in
fdivrs
cmc
loope
pop
pushl
int3
lahf
mov
mov
mov
movsb
leave
out
jp
mov
add
add
jmp
in
jns
cmc
aam
test
pop
xchg
leave
std
and
idiv
sub
idiv
sub
cmc
call
idiv
idiv
std
std
std
call
mov
idiv
cs
ljmp
xor
daa
jle
ljmp
jle
pushl
cmp
mov
lods
xchg
out
cmc
in
jmp
loope
pop
pushl
shrl
in
mov
aaa
repnz
mov
out
js
mov
add
add
jmp
in
js
hlt
rcrl
xchg
jbe
mov
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
jmp
test
call
idiv
idiv
cld
std
std
mov
mov
idiv
cs
ljmp
xor
jmp
jg
jmp
sti
dec
vpmaddwd
shrl
mul
scas
push
mov
mov
jmp
mov
cmp
xlat
scas
cmpsl
out
fldcw
mov
add
add
jmp
in
js
hlt
rcrb
popf
movsl
mov
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
jmp
test
call
idiv
idiv
cld
std
std
jmp
mov
idiv
cmp
cmc
ljmp
xor
sub
cmc
ljmp
xor
lcall
stc
cmc
fcmove
mov
sti
in
in
jecxz
repz
pop
mov
aam
int3
call
mov
cmp
fmul
lods
movsl
out
aad
enter
mov
add
add
jmp
in
js
repz
or
mov
ljmp
clc
ljmp
mov
ljmp
mov
ljmp
mov
jmp
xchg
call
idiv
idiv
cld
std
std
mov
movsb
clc
aas
xchg
idiv
xor
idiv
sub
ljmp
test
ljmp
test
ljmp
xor
daa
xor
jmp
enter
into
mov
std
out
jecxz
jecxz
repz
pop
mov
shrb
jecxz
mov
cmp
aad
mov
int
mov
das
int
add
add
jmp
in
js
repz
xor
xchg
stos
dec
int3
jmp
ljmp
mov
ljmp
idiv
sub
idiv
push
mov
sti
std
std
in
hlt
decl
cwtl
idiv
cmp
mov
ljmp
test
ljmp
xchg
ljmp
test
ljmp
test
ljmp
test
jmp
xor
pop
movsb
cld
fcomp
loopne
into
mov
mov
in
in
cmc
loopne
pop
mov
shrb
out
mov
cmp
aam
mov
into
out
js
mov
add
add
jmp
in
ja
hlt
rcrl
mov
fisubrs
in
and
idiv
sub
idiv
and
idiv
div
sti
std
std
inc
jmp
clc
incl
idiv
aaa
nop
idiv
sub
idiv
sub
idiv
sub
idiv
and
mov
lcall
clc
lcall
int3
shl
shrb
ljmp
loopne
pop
mov
shrl
jmp
mov
shlb
out
js
mov
add
add
jmp
in
ja
hlt
rcll
mov
jecxz
test
mov
es
cld
ljmp
nop
idiv
sub
idiv
push
movsl
idiv
clc
idiv
std
std
out
idiv
decl
pushf
clc
ds
idiv
das
mov
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
jmp
xchg
jmp
xchg
idiv
push
clc
ljmp
std
inc
jmp
icebp
jmp
call
jecxz
cmc
loopne
pop
mov
aad
shr
iret
sahf
out
mov
cmp
aam
mov
into
out
js
mov
add
add
jmp
in
je
hlt
rclb
mov
loopne
mov
and
idiv
sub
idiv
and
idiv
dec
mov
sti
inc
loope
jmp
stc
incb
idiv
cmp
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
jmp
mov
call
pushl
stc
lcall
clc
decl
int3
ret
ret
cli
in
ljmp
ret
jecxz
cmc
loopne
pop
mov
shrl
call
cmp
aam
lahf
test
out
js
mov
add
add
jmp
jmp
rclb
xchg
fisubrs
test
ret
mov
xchg
ljmp
idiv
sub
idiv
test
clc
push
clc
sti
jmp
lock
call
lahf
clc
ds
idiv
xor
idiv
sub
idiv
sub
idiv
and
idiv
dec
pushf
idiv
imul
lcall
clc
jmp
std
call
fsub
cli
sarl
mov
call
out
jmp
in
mul
scas
pop
mov
shrl
out
mov
cmp
aam
sahf
test
out
jns
mov
add
add
jmp
out
shll
sar
mov
std
fildll
cld
pushf
test
xor
xchg
ljmp
xchg
idiv
sub
idiv
inc
pushf
idiv
xor
ljmp
nop
idiv
sub
idiv
sub
idiv
sub
idiv
dec
mov
stc
pushl
cli
jmp
clc
lcall
clc
lcall
cld
mov
shll
out
ljmp
shr
out
ljmp
pop
mov
shrl
out
mov
cmp
aad
popf
test
out
jns
mov
add
add
jmp
in
int
clc
jecxz
out
aad
ljmp
clc
xlat
movsl
scas
hlt
movl
jmp
cld
ljmp
xchg
idiv
sub
idiv
and
nop
idiv
es
idiv
daa
idiv
sub
idiv
cmp
clc
jmp
stc
ljmp
cli
ljmp
cli
jmp
stc
lcall
clc
lcall
stc
call
cld
ljmp
mov
icebp
sti
out
in
out
in
std
out
jmp
out
jmp
out
jmp
loopne
pop
mov
shrl
out
mov
cmp
aad
popf
test
out
jns
mov
add
add
jmp
in
int3
cwtl
clc
loopne
sar
int3
cmpsb
in
iret
scas
out
aad
stc
out
neg
stos
stc
fldenv
testb
cmp
clc
cmp
popf
clc
incl
clc
decl
clc
call
stc
lcall
stc
ljmp
cli
pushl
cli
pushl
cli
ljmp
stc
jmp
stc
lcall
stc
lcall
stc
lcall
cli
lcall
cld
ljmp
leave
mov
icebp
sti
in
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
loopne
pop
mov
shlb
out
mov
cmp
aad
popf
test
out
jns
mov
add
add
jmp
in
int3
cwtl
push
fnsave
scas
sti
in
mov
out
lods
clc
loopne
test
jmp
jmp
mov
test
ljmp
std
pushl
cli
pushl
cli
pushl
cli
ljmp
cli
ljmp
cli
jmp
stc
jmp
stc
lcall
stc
lcall
stc
jmp
stc
lcall
stc
call
cld
ljmp
sti
mov
enter
int
out
cld
in
jmp
out
jmp
out
jmp
out
jmp
out
jmp
in
jmp
out
jmp
loopne
pop
mov
shlb
out
mov
cmp
mov
mov
mov
add
add
jmp
in
int3
xchg
clc
fnsave
cli
in
mov
out
scas
clc
fidivrs
stc
fbstp
aad
out
aad
shrl
cld
push
in
lcall
lcall
lcall
sti
lcall
sti
jmp
cli
jmp
stc
jmp
cli
lcall
cli
lcall
sti
lcall
std
jmp
cli
call
int
cli
in
mov
out
fdivs
jmp
out
jmp
out
jmp
out
jmp
out
jmp
in
jmp
in
jmp
out
jmp
loopne
pop
mov
shlb
out
mov
cmp
mov
mov
mov
add
add
jmp
int3
xchg
push
fnsave
sti
in
mov
in
scas
clc
fidivs
stc
fbstp
std
in
fdivr
call
scas
jmp
stos
mov
fdivr
imul
sti
lcall
cld
lcall
jmp
pushl
in
lcall
lret
jmp
xlat
mov
sti
jecxz
jmp
out
jmp
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
out
jmp
loopne
push
mov
shlb
out
movl
test
jmp
xchg
cmp
jmp
int3
xchg
push
fnsave
scas
sti
in
mov
in
scas
clc
fidivrs
cli
fbstp
std
in
fdivr
in
cld
loope
jmp
jmp
mov
clc
repz
mov
stc
stc
lret
int3
ret
clc
fst
shl
fnstcw
out
sti
loopne
jmp
in
ljmp
mov
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
loope
pop
mov
shll
lock
cmc
mov
mov
inc
cltd
inc
rolb
add
add
jmp
jmp
cwtl
push
fnsave
sti
in
mov
in
scas
stc
loopne
shl
mov
out
in
in
xlat
in
aad
loop
loope
fisubrl
hlt
jmp
mov
in
jmp
mov
jmp
out
jmp
out
jmp
out
ljmp
mov
jmp
in
in
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
outsb
mov
shlb
out
loopne
inc
lahf
pop
cmc
sarl
mov
inc
popf
dec
roll
add
add
incl
enter
fisubrl
ret
sti
out
fcmovne
cld
out
fcmove
cli
jmp
idiv
call
int
sti
jmp
lret
in
lock
in
hlt
cli
in
repz
in
hlt
cli
in
repnz
in
hlt
sti
jecxz
repz
loop
repz
jecxz
hlt
cli
jecxz
repz
jecxz
cmc
cli
loop
repz
jecxz
repz
loop
repz
loope
repz
loope
hlt
cli
loop
repz
loop
hlt
cld
loope
cmc
cld
loope
repz
loop
hlt
cld
loope
repnz
loop
repnz
loopne
icebp
stc
in
clc
call
pushf
push
clc
in
iret
mov
out
icebp
fsubrs
cld
faddp
pushf
mov
fldt
push
loopne
outsl
stos
push
in
scas
outsl
loop
mov
loopne
mov
loop
mov
jg
jle
fidivrs
mov
loop
hlt
jecxz
xchg
repz
xchg
repz
xchg
hlt
in
cltd
repz
popf
hlt
out
mov
repz
aam
repz
aam
hlt
out
mov
out
mov
lock
hlt
repnz
cmc
cmc
loope
hlt
cmc
loop
cmc
mul
hlt
clc
in
hlt
clc
in
hlt
clc
out
cmc
clc
call
shl
cli
call
mov
inc
test
xchg
iret
in
lret
xchg
loope
lds
mov
mov
in
ret
jp
ljmp
add
add
add
mov
push
sub
pushf
push
sub
popf
push
xor
sahf
push
cmp
sahf
push
aaa
lret
aas
lret
inc
lret
inc
enter
enter
leave
popf
push
push
leave
sahf
push
popa
leave
lahf
push
pusha
lret
mov
pop
outsl
lret
mov
pop
jl
mov
pop
or
mov
pop
into
movsl
arpl
int
arpl
into
test
stos
iret
test
insb
mov
stos
insl
mov
lods
outsl
mov
shrl
jno
fidivs
imul
and
or
cmc
into
mov
cld
pop
incb
add
incl
add
aas
incl
inc
add
add
add
incb
add
add
add
add
add
add
pop
cld
add
add
add
pop
cld
add
add
add
add
add
add
add
add
add
add
add
paddb
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
incb
add
add
add
incl
add
add
jg
decl
or
or
add
or
add
add
add
add
or
add
add
data16
and
dec
inc
inc
push
js
in
mov
jns
idiv
mov
fmulp
fwait
add
and
outsb
and
inc
adc
mov
mov
and
mov
mov
dec
stos
loop
mov
test
push
and
xchg
mov
fldenv
dec
push
dec
mov
xchg
gs
or
and
adc
roll
pusha
xor
data16
idivb
mov
jmp
lret
cmp
inc
incl
shll
jp
repz
xor
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
push
test
mov
in
jne
push
sbb
call
loopne
pushf
gs
jo
repz
stos
jnp
les
xor
mov
adc
dec
xchg
in
lea
xor
jecxz
and
cmp
xor
outsl
std
negb
add
js
adc
fwait
sbb
test
cmp
call
fidivrl
mov
push
mov
mov
sbb
iret
cld
xlat
mov
and
adc
jl
gs
fidivrl
lea
sti
stc
out
clc
aaa
cli
push
add
adc
dec
mov
daa
inc
cmpsl
mov
arpl
mov
or
aam
inc
enter
push
inc
out
aaa
orl
lret
add
pop
and
adc
adc
push
insb
cmp
jo
sub
jg
scas
mov
jb
xlat
pop
jmp
and
sbb
sbb
pop
add
rclb
in
push
mov
iret
aam
pusha
push
scas
mov
das
add
imul
mov
mov
mov
jle
cli
fisttps
adc
mov
inc
movsl
cmp
icebp
lds
and
push
lahf
cltd
xor
mov
test
in
out
inc
sub
cltd
sub
adc
in
xlat
pop
mov
std
stc
xorb
sub
inc
push
xchg
movsl
or
xchg
fwait
sub
das
add
cmp
adc
loope
or
dec
or
push
xchg
out
push
mov
lahf
pop
sbb
cmp
lret
dec
cmp
push
jo
cwtl
push
xor
pop
dec
xchg
cmpsb
pop
adc
sbb
cs
adc
lea
lret
pop
cmp
mov
hlt
mov
aas
jno
mov
mov
dec
add
incl
and
test
lahf
nop
add
adc
inc
adc
push
les
dec
and
inc
clc
mov
xor
data16
rol
xor
cwtl
cli
jnp
cltd
and
sub
pop
repz
nop
cltd
xor
addl
aam
adc
jbe
add
and
sahf
stos
add
xchg
mov
sbb
or
add
mov
add
bound
pop
pop
adc
mov
lcall
mov
pop
mov
mov
and
mov
mov
loopne
pop
clc
cmpsb
mov
jecxz
pop
faddp
and
push
pop
fldcw
jns
popa
jecxz
mov
fwait
dec
xor
or
fisttpl
dec
jo
add
test
xchg
sbb
jno
mov
add
mov
divb
jg
xchg
mov
and
xor
push
jl
repz
inc
mov
nop
mov
sub
mov
adc
lea
mov
or
cld
xor
aad
and
lcall
popf
dec
mov
jmp
and
push
cmp
mov
stos
push
aad
xor
mov
mov
xor
mov
jecxz
insb
add
sub
push
loopne
sbb
push
mov
jl
orb
sub
adc
enter
xchg
sbb
lahf
inc
adc
xor
push
add
inc
bound
lahf
mov
mov
rcrb
pop
add
mov
hlt
xor
cmp
lea
jbe
inc
cmp
nop
push
mov
movzwl
sub
rorb
sbb
mov
ret
std
fiadds
and
int3
sub
inc
mov
popf
inc
mov
and
ss
les
stos
pop
jg
addl
push
mov
adc
test
cld
out
clc
out
mov
dec
inc
cmp
addl
outsb
sub
jne
fisttpll
mov
in
lcall
gs
movsl
lea
ss
sub
fstpl
cs
and
push
cmp
cmp
and
add
and
push
sbb
mov
add
jo
lea
pop
mov
loop
pushf
inc
inc
or
ret
sub
and
xchg
mov
inc
inc
push
jle
add
fstpl
lret
xor
mov
aas
or
adc
sub
xorw
insl
divl
mov
xor
sub
xlat
dec
cmpb
cmpsb
adc
jbe
imul
dec
popf
cmp
pop
insl
das
push
shr
lds
lea
cwtl
xchg
push
add
call
or
add
and
jbe
jmp
or
xor
sbb
xchg
dec
mov
adc
or
inc
push
fdivs
shr
dec
popf
or
cmp
mov
sti
ret
dec
cmp
fadd
outsb
mov
aaa
sub
mov
mov
dec
popf
data16
mov
bound
dec
inc
push
gs
dec
sbb
lea
das
cmc
xor
xchg
jmp
fcmove
mov
imul
jbe
mov
cld
cmp
shl
mov
inc
loope
xchg
dec
rolb
jbe
dec
ja
test
pop
adc
les
mov
lea
mov
insl
xchg
in
adc
push
xchg
jae
add
fbstp
xchg
and
inc
aad
inc
mov
cld
cmp
adc
hlt
xor
out
lcall
push
pop
scas
xchg
inc
sub
and
mov
mov
lea
bound
xor
xor
and
roll
jl,pt
cmp
outsl
cmp
cmp
mov
mov
fsubrl
sbb
cmpsl
sub
mov
icebp
mov
rcr
out
cli
xchg
out
outsl
jl
adc
mov
movsb
js
sbb
mov
mov
int
lods
xor
sbb
aad
inc
add
cld
pusha
aas
lret
outsl
sbb
and
push
sub
mov
sbb
mov
jno
rclb
arpl
dec
insl
xorl
pop
testb
sub
aad
filds
stos
push
or
leave
push
std
pop
lahf
xor
dec
ja
and
xchg
inc
mov
cmpb
inc
or
in
and
xchg
sub
sbb
xor
xor
faddl
pop
mov
mov
lds
sbb
pushw
shlb
ret
fs
and
mov
movsl
ret
push
pop
out
mov
mov
mov
aaa
scas
ds
test
movhps
fnstsw
pop
cmp
fmul
xchg
insb
test
in
std
cld
mov
dec
insl
push
xlat
sti
cmpsb
imul
iret
and
fldpi
leave
cltd
clc
xchg
add
fbstp
jo
es
enter
adc
push
lds
pushf
push
xchg
sbb
lods
pop
inc
cmp
jne
lahf
jmp
inc
cltd
cmp
and
mov
cmpsb
popa
mov
in
or
lods
flds
stos
jnp
and
insl
dec
lret
or
stos
jne
hlt
mov
adc
sub
subl
add
mov
push
fimull
and
jmp
sub
jnp
lock
mov
adc
int
push
incl
mov
jo
leave
push
adc
and
push
ja
xor
inc
mov
inc
lcall
cwtl
arpl
outsl
insb
stos
pop
inc
xchg
jge
add
jns
cmp
cmp
cmc
push
ficomps
mov
out
rorl
aas
mov
repnz
lds
cli
jecxz
mov
push
scas
xlat
sbbb
pop
std
retw
add
mov
faddl
pusha
mov
xor
imul
fbstp
mov
push
jae
and
int
sub
push
inc
and
movsb
adc
jle
loope
inc
jno
adc
xor
push
repnz
stos
add
add
lcall
adc
mov
xor
or
push
or
mov
jne
mov
cmpsl
aas
ret
aam
mov
lea
cmp
or
mov
dec
dec
sarb
xchg
mov
push
inc
push
stc
in
lea
sub
add
and
data16
jae
cmp
cmc
add
and
inc
pusha
inc
sub
mov
out
insl
dec
imul
sarb
not
jle
sarb
jmp
filds
addl
into
divb
push
scas
or
ror
mov
pusha
mov
mov
inc
or
mov
inc
shll
push
cmp
int3
sbb
hlt
dec
mov
std
xor
test
push
inc
rolb
enter
adc
jb
or
iret
inc
push
ret
and
sub
inc
pop
push
dec
xchg
jge
fiaddl
scas
cwtl
aad
arpl
mov
dec
les
notl
mov
adc
cwtl
or
pop
mov
cltd
cld
cwtl
cmp
aad
push
mov
sub
or
pushf
les
mov
push
pusha
test
roll
pop
inc
add
sub
xchg
xor
sbb
add
and
inc
shlb
inc
ret
dec
jmp
aad
inc
dec
xchg
add
addr16
xchg
leave
in
push
adc
cmp
cmp
out
insb
inc
and
xor
adc
mov
lcall
inc
outsb
mov
sbb
dec
aad
sbb
mov
pop
enter
fstl
or
mov
imul
mov
push
je
add
add
stos
xor
scas
jno
addb
imul
adc
es
out
cli
xor
jne
push
sar
mov
mov
pop
rcrl
shll
push
mov
repnz
xchg
adc
sbbb
loope
roll
sbb
and
add
sub
test
fwait
push
rcrl
adc
jns
xlat
or
mov
inc
inc
in
adc
movsb
jns
je
imul
xchg
sbb
test
mov
sub
pop
loopne
cmpsb
xor
cld
fwait
push
jbe
jno
cli
scas
fimull
jbe
mov
test
xor
andl
cmpsb
in
or
fimull
push
loopne
bound
jae
dec
push
or
rorb
mov
mov
sbb
fisubrs
stc
pop
sbbl
out
and
jae
loopw
enter
jmp
or
roll
cli
stc
add
xchg
mov
sub
dec
sub
mov
shrb
add
add
pusha
push
imul
and
cmp
cmpsb
pop
push
cmp
imul
jle
push
xor
iret
pop
lcall
xor
ret
popa
mov
shlb
add
pop
imul
inc
or
test
xchg
sub
xor
xchg
mov
sbb
pop
rorb
popf
inc
xor
aaa
xor
cld
xchg
jbe
movsb
xor
sbb
negl
sarl
inc
mov
jl
push
les
cmpsb
inc
add
cmp
sbb
or
mov
add
mov
lds
mov
adc
mov
lods
jecxz
inc
popl
fs
fisubs
or
aaa
pop
jp
lods
xor
or
in
insb
adc
std
ret
and
dec
and
imul
out
orl
xchg
or
and
sub
add
pushf
movsb
mov
pop
pop
rolb
push
sbbl
mov
rolb
mov
or
push
mov
ficoms
or
xchg
out
add
es
inc
lea
fmuls
sbb
stc
adc
rcrl
and
lret
cmpsb
and
pop
dec
sub
add
lea
xchg
xchg
and
sub
sbb
in
add
push
in
nop
bound
or
fisubrl
inc
inc
dec
insb
xor
add
lods
ss
inc
aas
pop
inc
scas
jno
fidivl
push
adc
mov
bound
std
insb
mov
lcall
mov
insl
test
xor
loop
mov
rorl
push
cmp
jae
mov
stos
jne
jle
lods
sbb
adc
and
fildl
out
dec
inc
lcall
pop
pop
inc
mov
push
jae
add
add
mov
adc
jae
test
push
ret
mov
mov
jae
rolb
and
lcall
outsb
xor
sbb
out
int3
or
xor
cmp
or
loope
lock
mov
faddl
jae
popa
mov
insb
das
jbe
bound
fistps
hlt
lcall
int
dec
lcall
mov
pop
les
arpl
lea
inc
jg
sbb
pop
push
pop
inc
fdivl
stos
mov
cmpsl
call
xor
inc
pop
rolb
mov
mov
mov
mov
mov
dec
inc
out
cmpsb
add
cmp
test
push
mull
ds
xchg
adc
lds
shl
xchg
outsb
push
add
mov
xor
enter
push
rcr
pop
lret
fsubr
ret
pop
xor
cmpsl
mov
add
or
call
push
negb
lods
jmp
inc
into
sub
ljmp
sub
ss
xchg
push
sbb
sub
xchg
mov
sub
push
lods
xchg
test
push
jae
or
filds
subb
cmp
dec
sbb
push
popf
sub
xlat
add
pushf
xorb
lahf
add
orl
sbb
arpl
out
and
clc
adc
fiadds
scas
adc
addr16
test
push
jecxz
or
out
loop
jo
inc
or
in
cmp
aas
sbbl
jo
mov
sub
jecxz
fistl
jl
cltd
std
sbb
xchg
fwait
push
jns
rcrl
cmpsb
data16
pop
ffreep
mov
test
ret
cmp
enter
mov
es
lret
dec
int
cmc
in
inc
jg
cmpsl
repz
pop
fisttpl
pop
pop
jne
pop
xor
stos
rorb
sub
ds
in
pusha
add
cmp
imul
inc
add
repz
mov
lea
test
sbb
fiaddl
mov
les
or
clc
aad
add
jle
sub
repz
mov
cld
call
add
nop
jle
outsl
aaa
iret
mov
mov
les
sbb
mov
cmc
mov
inc
inc
adc
mov
mov
inc
lea
adc
mov
xor
inc
sbb
jnp
inc
xlat
push
inc
scas
jge
scas
fdiv
xor
pop
pop
in
ljmp
mov
jne
xlat
pop
cmp
incb
fst
imul
sarl
rclb
aad
scas
adcl
sbb
pop
push
cmp
adc
sbb
lret
das
inc
cmp
fcomi
xor
add
or
jnp
fwait
pop
push
leave
mov
repz
pop
outsl
mov
outsl
aas
cmp
fsubs
sbb
add
sarb
mov
das
and
sahf
pop
rolb
in
mov
je
and
sub
mov
jge
jnp
xorb
sbb
std
das
jno
sub
push
xchg
outsl
stc
push
lods
pop
mov
div
loope
jge
repnz
pusha
imul
fldl
jge
pop
cmp
jmp
or
xor
es
lret
push
pop
movsb
ror
adc
int
in
push
rorl
jb
add
adcl
push
inc
lds
or
addr16
adc
mov
cmp
addr16
stos
lcall
jns
add
mov
xchg
mov
pop
int
push
std
dec
adc
imulb
dec
jno
lods
mov
cmp
movsl
sub
or
cmpsl
and
cmpsl
mov
divl
fcompl
arpl
enter
fwait
xchg
cmp
inc
mov
sub
testl
sub
sub
cmc
push
mov
aad
ret
imul
and
mov
mov
pop
xchg
mov
xlat
add
jae
inc
fs
pop
sbb
icebp
jmp
dec
xchg
cli
adc
iret
insl
cs
push
mov
das
jle
lds
roll
aas
fs
push
lods
js
daa
sbb
fsub
cmp
cmp
das
js
sbb
sbb
xchg
scas
rcr
ds
jno
mov
scas
loop
push
incl
pop
jge,pn
push
out
jl
xchg
test
mov
pop
fstps
pop
pop
int
iret
fldcw
push
and
sbb
rcrb
stos
fnsave
pushf
movsb
xchg
movsb
cmp
leave
sbb
cmp
push
pop
ja
loopne
cwtl
mov
in
fnstcw
and
fnstsw
dec
std
imul
loope
adc
out
roll
xchg
popf
dec
cwtl
aas
lds
subl
sub
fcomp
lods
das
ret
sbb
dec
sarb
adc
ficoms
mov
jns
test
lock
push
sbb
lods
mov
repz
cmp
ret
pop
mov
xchg
in
in
dec
repnz
dec
std
popa
jg
or
pushf
out
int3
xor
mov
aad
ja
sub
and
xorb
in
cwtl
pop
arpl
mov
mov
testb
or
cld
adc
rcll
aas
adc
aad
xor
addr16
fidivrs
cmc
fdivl
pop
xor
leave
add
icebp
or
push
fmull
cmpsl
xchg
jmp
jbe
adc
fsts
mov
pop
sbb
pop
pop
mov
stc
cmpl
insb
ror
test
cwtl
inc
sub
xchg
adc
cld
push
sarb
in
addr16
sbb
ficomps
lret
out
cli
imul
pop
mov
xor
sub
lcall
jbe
test
xor
adc
mov
push
xor
jae
es
jne
mov
rcrb
lods
loope
adc
jmpw
fsubs
lds
ret
daa
iret
outsb
sbb
stc
or
dec
pop
ret
add
imulb
dec
sub
adc
sub
arpl
mov
enter
jbe
repz
xchg
test
not
add
sahf
fadds
inc
movsb
push
lret
mov
push
stos
mov
fwait
ja
add
mov
mov
cmp
rolb
push
pop
mov
cmp
popf
imul
lret
shlb
xchg
cwtl
inc
fldenv
cwtl
xchg
dec
mov
dec
sub
mov
jns
shlb
add
add
popf
dec
adcl
mov
mov
mov
imul
pop
stc
cmp
cs
mov
adcl
lret
adc
jmp
mov
adc
jp
into
cmp
mov
adc
cmp
sub
scas
adc
push
popf
or
cmp
xchg
cmc
xor
icebp
lds
out
pop
mov
sahf
call
in
jbe
push
daa
dec
sahf
jmp
iret
sub
sbb
push
mov
xchg
inc
dec
jle
in
sub
inc
adc
mov
sahf
push
mov
push
jecxz,pt
mov
add
xor
out
push
lods
enter
aas
inc
add
dec
mov
push
and
ret
cmp
aas
popf
sbb
pop
xchg
jno
pop
push
sub
div
sahf
testb
shll
pop
inc
pop
jns
add
mov
mov
add
inc
cld
sahf
and
mov
fistpl
mov
xchg
cmp
lahf
shlb
std
jg
cli
inc
mov
cli
into
ja
xchg
mov
mov
xchg
loope
inc
xchg
call
jns
sbb
andb
rcll
les
cmpsl
jb
push
je
stos
fnstsw
xor
jp
xor
leave
pop
lods
mov
sbb
lret
mov
add
inc
lret
adc
inc
dec
lret
adc
les
xchg
adc
lea
daa
dec
fnsave
stc
or
adc
mov
cmp
jl
insl
mov
in
fcomip
add
movl
lret
lcall
xor
bound
push
les
xor
mov
push
cmp
inc
and
bound
push
pop
repnz
mov
divl
pop
ljmp
cli
idivl
jl
ret
jmp
mov
imul
push
lods
add
adc
sarl
adcb
data16
cmpsl
pusha
push
adc
movsb
and
inc
adc
fisttps
xor
mov
pusha
cmp
jno
mov
push
and
inc
sub
negb
adc
movzwl
daa
mov
repz
dec
mov
adc
nop
sarl
je
ja
inc
out
mov
dec
dec
test
add
into
add
fs
insb
mov
push
int
jo
andl
and
cmp
add
jbe
cmpsb
subl
push
ss
or
or
adc
adc
hlt
decl
adc
cmp
popa
jle
pop
cmp
cmp
fistpl
inc
xor
aaa
xchg
outsl
mov
insb
out
mov
inc
pop
outsl
cltd
fdivrs
mov
xor
fmuls
test
cwtl
or
mov
nop
lods
lret
insb
in
popf
jb
hlt
pop
aad
les
negl
dec
add
pusha
mov
enter
xor
dec
outsl
gs
pop
sti
lret
lret
push
jle
loope
loope
rolb
daa
data16
adc
push
into
push
femms
mov
nop
ficoms
cmp
idivb
imul
sbb
mov
add
pop
andb
mov
inc
xor
add
mov
in
adc
xchg
out
sub
test
inc
jo
inc
imul
das
and
add
idiv
sbb
out
fstpt
dec
popf
js
mov
mov
xor
inc
xchg
lods
pop
inc
dec
add
mov
push
test
adc
lods
dec
dec
pusha
push
jo
cmpsl
imul
mov
imul
lcall
cmp
sub
and
cmp
jo
and
pop
cli
add
add
push
mov
xor
int3
lea
imul
arpl
sarb
pop
shll
mov
lods
outsl
adc
cmpsl
dec
push
pop
loope
cmp
fisttpll
shrl
ss
xchg
lret
movsl
mov
or
sbb
xor
push
loopne
add
adc
shrl
xor
pushf
rorb
push
decl
movsb
xor
test
cmp
nop
pusha
hlt
sahf
iret
icebp
subl
repz
cmpsl
sti
sbb
popf
sbb
call
es
and
xchg
mov
xchg
adc
xor
cld
sbb
jns
dec
mov
cmp
ds
pushf
add
xor
add
stos
cli
inc
in
xor
sahf
ss
push
cli
data16
sub
push
and
jo
mov
repnz
lahf
nop
out
sahf
out
out
mov
js
mov
mov
popf
dec
pop
repnz
xor
adc
xchg
dec
dec
dec
dec
pop
sahf
jns
pop
jl
test
and
repnz
jne
mov
test
mov
push
push
jnp
xor
inc
mov
or
xor
je
loope
lock
fbstp
cld
scas
hlt
or
xchg
add
mov
cmp
jg
cltd
sar
aad
arpl
or
add
ds
dec
mov
rorb
pop
into
dec
cld
mov
popa
xchg
sbb
repz
fildll
dec
pusha
aas
popa
dec
add
stc
jns
fs
sahf
add
cmp
sbb
lret
inc
mov
sbbl
divb
xchg
fstpt
xor
ret
jb
mov
out
lock
mov
cmpsb
rcrl
sub
bsr
push
cmc
xchg
xor
inc
clc
test
lea
and
insl
cltd
divb
js
push
pusha
loope
push
arpl
pop
or
loop
stos
mov
cmp
or
mov
mov
lods
mov
lods
or
push
sbb
popf
ja
mov
out
dec
add
inc
imul
rcl
aad
subb
sbb
add
or
mov
sbb
lret
add
ficoml
push
mov
jle
es
inc
test
jp
mov
push
fs
test
inc
dec
xchg
xchg
xor
or
add
xchg
ds
pop
in
lret
lret
subl
xlat
xlat
sahf
cld
xchg
hlt
jb
xchg
outsb
cmpsl
jae
outsl
int
mov
xchg
stc
add
test
adc
inc
fcoms
xchg
xchg
cmp
xlat
cmpsl
adc
inc
jb
sarl
pop
add
mov
bound
lahf
les
or
jmp
and
add
mov
mov
sbb
sti
xchg
pop
incb
pop
cmp
ds
xor
pop
std
decl
mov
or
pop
mov
hlt
nop
lods
xchg
and
sbb
mov
in
orb
jg
mov
xor
push
imul
in
cmpsb
add
rclb
cmpsl
mov
aaa
stos
pop
push
popa
jecxz
push
scas
pop
in
popa
aad
jp,pn
repnz
jo
repnz
dec
jle
fucomip
pop
movsl
sbb
jg
jle
sbb
mov
imul
inc
mov
scas
fdiv
in
adc
ror
jl
pop
dec
mov
notl
lcall
cmpb
test
cmp
jo
pop
mov
call
add
or
cmpxchg
pop
pushaw
mov
or
dec
dec
xchg
inc
roll
xchg
cmp
data16
jecxz
or
sub
aas
lock
jnp
das
push
jbe
push
lods
xchg
psubd
shll
jecxz
xor
fists
imul
mov
jne
out
mov
dec
add
sub
adc
and
and
cmpsb
pusha
sub
lret
pop
cli
jb
insl
test
inc
xchg
dec
jg
inc
adc
daa
icebp
in
cs
test
pop
xchg
mov
pop
sbb
cmpsb
les
sbb
or
adc
mov
movsb
popa
clc
sbb
mov
sbb
mov
cvtpi2ps
sbb
dec
push
lods
popf
subl
in
inc
fiaddl
pop
push
or
xchg
sbb
inc
add
add
lds
orl
rcrb
loope
add
add
inc
push
js
repnz
out
imul
xchg
imul
loop
and
xlat
inc
pop
arpl
xor
fcompl
nop
lret
xchg
adc
sbb
jae
jmp
xlat
test
sub
mov
mov
pop
out
add
outsl
leave
stc
jle
mov
adc
icebp
int3
lret
sub
push
pop
in
cmp
out
inc
inc
aad
repz
bound
jb
rcr
popa
filds
and
or
sub
cs
pop
mov
pushf
sub
inc
pushf
sub
adc
sbb
push
popa
clc
add
add
loopne
mov
int3
jae
mov
stc
adc
add
pop
inc
sbb
dec
inc
xlat
mov
cmpsb
adc
jmp
mov
lcall
out
mov
cmp
mov
add
sbb
jmp
xor
or
adc
inc
add
mov
or
dec
push
shrb
sahf
ljmp
xor
push
sub
mov
jecxz
xor
pop
xchg
call
clc
push
xchg
and
mov
test
int3
mov
jmp
neg
std
fdivs
ret
or
pushf
push
adc
dec
fidivl
mov
add
shr
das
xchg
or
sbb
es
jno
cmp
test
inc
pop
int3
and
imul
gs
pusha
add
mov
test
adcb
test
inc
sub
fs
cmp
or
and
hlt
cmc
filds
std
ja
fcomps
fucomip
lods
lods
outsb
sbb
add
mov
mov
adc
cmpsb
inc
lcall
arpl
mov
push
call
insl
ficoms
lock
insb
mov
xlat
mov
clc
cmp
xchg
in
in
sar
mov
je
dec
inc
jle
fadd
das
lds
add
dec
jp
outsl
repz
adc
scas
add
in
aam
pop
flds
mov
xchg
mov
movb
jl
mov
inc
mov
fnstcw
add
cmp
or
popf
add
jae
pop
sbb
add
sbb
mov
cli
sub
push
add
push
ja
lret
mov
cmp
clc
enter
add
add
lcall
xor
push
xchg
add
into
incl
fcomip
scas
cmp
fcomi
xlat
inc
xor
rcll
pop
outsl
dec
push
mov
aam
or
xchg
sub
mov
lcall
stc
and
dec
pop
pop
imul
sbb
and
mov
mov
enter
pop
int
ficoml
pop
int
jmp
inc
popf
aas
mov
push
aas
xchg
pop
jns
stc
movb
cmp
mov
dec
out
cli
lods
inc
xor
dec
loopne
add
push
gs
jge
xor
sti
pop
out
aas
mov
rclb
xorl
hlt
add
cmp
cltd
push
mov
and
mov
vscatterdps
clc
jns
leave
loopne
sbb
int3
xchg
jnp
push
jmp
pop
jg
jp
rolb
add
cmp
test
xchg
arpl
mov
ljmp
mov
lock
fucomp
mov
cmpsl
xor
into
mov
mov
cmc
xchg
pop
and
pushf
or
test
in
fsub
xchg
cs
sahf
dec
shll
out
movsb
sbb
xor
mov
and
mov
subps
ss
push
addr16
inc
es
shrb
pusha
inc
andb
call
pop
fidivrs
in
mov
add
pop
push
test
scas
shr
aad
dec
dec
in
shlb
shlb
cmp
rorb
jnp
aam
divl
xchg
cmp
ljmp
push
or
lods
pop
sahf
push
or
mov
cmpsl
leave
inc
incb
or
xchg
add
out
out
and
bound
fnstsw
or
cli
sbb
push
lock
dec
stc
es
pop
mov
jb
and
popa
cmp
sti
dec
mov
ljmp
popf
mov
mov
in
dec
mov
loop
push
xchg
mov
mov
sahf
push
pop
inc
loopne
scas
pusha
add
sub
rdpmc
flds
xchg
jmp
dec
cwtl
imul
inc
add
and
and
jecxz
add
in
ljmp
mov
loop
pop
pop
xchg
cs
repnz
jo
push
jmp
popl
push
or
jns
repz
out
sub
adc
pushf
adcb
add
dec
pop
cwtl
test
loope
rolb
push
inc
mov
lea
jae
xchg
mov
xchg
pop
cmc
dec
in
inc
and
ja
inc
jne
jnp
fcoms
adc
push
add
rclb
ja
cld
or
cmp
pop
incb
out
adc
test
mov
sub
sbb
xchg
jecxz
push
in
xchg
mov
lods
psllq
aas
add
inc
out
mov
sub
sbb
push
xor
sub
cltd
bound
or
mov
mov
adc
mov
dec
pop
push
xor
arpl
lcall
shl
fsts
add
adcb
sub
fnsave
stos
jae
xchg
cli
clc
add
cld
sub
adc
xor
fxch
and
jecxz
cmpsb
sbb
test
mov
cmpsl
decb
inc
out
jl
add
sub
outsl
or
add
mov
test
icebp
dec
scas
daa
pop
sti
out
mov
insl
hlt
mov
lret
mov
or
shlb
xchg
pop
or
lret
push
dec
or
adc
fcoml
nop
mov
mov
fistl
fs
and
std
mov
push
cwtl
enter
adc
sbb
mov
mov
cmpsl
xchg
jns
push
xchg
ds
jne
pop
pop
shlb
add
jnp
in
lcall
aas
add
jnp
les
add
lods
stc
and
outsb
jne
inc
hlt
mov
jl
loop
adc
xor
mov
jae
and
adc
ror
popa
push
add
aas
icebp
ja
xchg
mov
bound
rclb
or
dec
call
les
inc
jbe
rcl
pop
test
xchg
cmp
sahf
test
sti
mov
hlt
loop
sub
sbb
cmpl
and
adc
push
adc
aas
jmp
sub
rcl
lahf
clc
out
shll
fnsave
push
cmpsl
mov
inc
rol
sbb
adcb
inc
jns
push
fdivrl
mov
xchg
fbld
sbb
sub
pop
mov
lcall
mov
les
cmp
js
test
mov
jae
icebp
add
lret
iret
jl
xchg
cwtl
movsl
inc
outsl
repz
mov
in
pop
aad
fst
xor
xchg
pop
or
mov
adc
cli
lds
iret
sub
push
fcomip
sub
inc
jp
or
movsb
pop
and
rorb
cmp
cmp
test
dec
cmpsl
sarb
je
push
jbe
xor
stc
daa
pusha
dec
jg
sbb
addr16
adc
push
mov
add
jno
jb
dec
mov
mov
shl
shl
roll
xor
xor
push
sbb
mov
inc
rorl
adc
loope
sbb
mov
ss
dec
inc
fnstenv
out
daa
mov
xor
xchg
lret
mov
cld
xor
pop
ret
jl
pushl
cld
int3
jno
mov
out
sub
push
add
clc
jae
insl
pop
push
xchg
xchg
nop
ds
jae
clc
in
inc
aaa
por
dec
test
clc
push
rcrb
xchg
scas
aad
xchg
out
inc
lds
int
cwtl
popf
push
sahf
mov
enter
dec
lock
out
sti
gs
stos
cmc
subps
loope
outsb
cmpsl
or
or
and
insb
add
sbb
popf
mov
ret
or
sbb
sahf
mov
cmovns
xchg
adc
daa
jl
mov
notl
or
int3
sahf
or
xchg
adc
imul
sbb
cmp
jge
imul
sub
and
adc
inc
cmc
jg
fldenv
aas
mov
repnz
es
and
repnz
push
sbb
mov
enter
cmp
jg
imul
mov
movsl
and
mov
fdiv
mov
inc
sbb
adc
or
cltd
scas
nop
push
repz
test
sti
daa
xchg
cld
mov
pop
cmp
rol
dec
cmc
xchg
aas
cld
aam
add
repz
and
movb
into
jbe
mov
hlt
ja
shll
adc
xorl
clts
xchg
cmova
add
or
sbb
push
bound
lods
in
dec
cmp
mov
mov
std
fwait
mov
std
fadds
or
mov
push
aad
add
push
ret
lds
cmpsl
hlt
pop
inc
push
xor
test
jge
dec
mov
in
sub
shl
inc
inc
jae
int
incl
xor
or
in
mov
imul
add
jae
repz
notb
pusha
mov
rorl
mov
mov
jo
cli
sti
pop
sbbl
push
ret
push
lret
jb
inc
jae
add
push
xchg
fdivl
xor
sbb
enter
push
add
rorl
xchg
dec
aas
in
mov
adc
insl
test
iret
in
pop
lcall
or
xlat
in
aaa
jo,pt
sbb
fdivrs
std
imul
movsl
addr16
cld
js
and
fdivrs
ret
mov
push
or
dec
pop
mov
mov
mov
mov
jecxz
pop
adc
jle
mov
fdivr
mov
cmp
inc
cmpl
jmp
mov
push
rorb
cmp
or
loopne
xchg
rorb
pop
mov
addr16
and
cmc
or
std
add
sbb
test
gs
sbb
jo
sbb
arpl
insl
jo
inc
cld
ja
sbb
push
adc
icebp
into
aad
jp
sti
cli
jno
xor
push
lea
loop
loopne
add
sub
inc
xchg
xchg
or
mov
out
push
rolb
lret
imul
fwait
mov
in
test
push
je
nop
cs
or
add
and
fisubl
test
nop
subl
adc
or
and
inc
adc
pop
mov
pop
fisubrs
ds
gs
cmp
cmp
stos
add
dec
arpl
sbb
movsl
xchg
xor
aad
cld
mov
cmp
out
pop
rcrl
loop
test
cli
push
pusha
or
loop
or
cmp
iret
daa
pop
lcall
pop
movsl
aas
mov
dec
rclb
add
dec
es
pop
mov
movsb
rolb
push
insb
or
dec
out
movl
xchg
stos
push
sti
cmp
lea
jl
inc
mov
stc
sbb
mov
and
inc
mov
les
and
testb
push
ds
push
cmp
cmp
adc
jmp
repz
adc
inc
lea
sub
or
pop
push
bound
ja
xor
out
insl
iret
lods
outsl
pop
enter
outsl
or
mov
cwtl
sti
testl
or
inc
test
dec
sub
jbe
inc
cmp
xor
rol
aam
jecxz
xlat
mov
push
sbb
push
sub
jl,pn
pop
pop
mov
rorb
cmp
xor
jg
les
ret
orb
jo
dec
pop
lret
xchg
dec
inc
sbb
xor
adc
push
test
mov
pop
int
dec
fidivl
mov
lds
mov
in
fmull
add
jp
cli
lds
inc
inc
popa
lret
or
xchg
pop
and
mov
push
sub
xlat
insb
inc
inc
movsl
xchg
ss
and
inc
fs
mov
mov
add
xlat
xlat
inc
mov
and
inc
push
cs
in
pusha
out
push
adc
stos
push
mov
sbb
add
xchg
pop
or
jnp
scas
insl
imul
jge
push
fidivl
pop
fsubl
jnp
repnz
addl
dec
add
repnz
mov
repz
fdivr
push
mov
push
in
fwait
insb
adc
add
add
in
out
lret
jae
pop
popf
fidivl
xchg
lock
mov
add
xchg
push
sbb
loopne
adc
cld
jae
mov
gs
or
sbb
dec
neg
jno
and
cmp
mov
mov
loop
xchg
or
push
xor
mov
add
inc
cmp
jl
out
adc
pop
scas
or
test
xchg
pop
pop
jecxz
sbb
hlt
push
aas
leave
add
mov
inc
nop
jae
adc
bound
in
push
test
xchg
cmc
outsl
mov
fwait
ror
push
sbb
loop
mov
mov
xor
pop
cmp
add
movsb
sbb
addb
rorb
mov
xlat
cmp
lods
pop
and
xchg
add
jb
add
mov
nop
mov
dec
ss
xchg
xchg
cmc
push
jo
repz
testb
mov
out
inc
daa
hlt
mov
mov
sbb
bound
mov
adc
jo
andl
push
dec
mov
push
fidivrl
push
in
adc
imul
add
outsb
daa
jmp
pop
inc
fstp
mov
push
test
popf
enter
movsl
repnz
sub
add
mov
out
lea
fldl
stc
push
mov
std
bswap
fdivr
mov
jmp
pop
add
loopne
fldt
pushf
mov
sub
test
xchg
sti
out
mov
cltd
dec
jg,pt
loope
and
pop
jns
jb
jns
jecxz
insb
mov
repz
adc
cld
cmp
cmp
mov
jo
inc
jbe
nop
mov
addl
cwtl
mov
insl
fidivrs
inc
nop
sbb
in
pop
orb
jns
mov
jo
sbb
lods
xlat
shlb
mov
aas
test
lock
cli
sbb
bound
das
fldcw
outsb
popa
xor
push
xlat
sahf
sub
adc
pop
lcall
stc
fsubrs
xor
movzbl
in
add
add
push
mov
frstor
sub
popf
cmpsl
xor
adcl
sbb
adc
add
mull
test
and
mov
into
and
sbb
xor
sbb
xlat
cld
mov
lods
pop
pusha
out
push
dec
adc
or
mov
or
out
add
xor
dec
push
mov
fadds
mov
cwtl
fwait
xchg
pop
or
dec
cli
adc
add
out
xchg
insl
jnp
stos
pop
jg
popa
mov
shll
aad
dec
sar
test
js
arpl
inc
ret
push
mov
push
aaa
pop
call
add
inc
push
or
movsb
mov
in
outsl
mov
pop
rorl
std
xchg
movsb
loop
add
addr16
je
jae
xor
sub
sbb
push
push
xchg
in
push
inc
xchg
test
mov
in
fdivr
adc
lods
mov
push
int3
pop
push
and
fcom
push
mov
pop
in
test
shr
test
sub
rcr
repnz
imul
push
jge
dec
popf
clc
or
jge
cmp
jo
mov
out
testb
int3
pop
aas
call
lock
cld
xchg
xor
mov
jbe
inc
pop
dec
cmp
in
loop
scas
js
lods
push
fsubrl
lea
jne
fwait
adc
int3
in
xor
ret
mov
pusha
addb
in
cmp
jmp
dec
rcrl
inc
mov
jl
jno
clc
out
ficoml
repnz
lds
inc
mov
mov
push
mov
sbb
pop
add
ljmp
stos
pop
add
aaa
movsb
cmpsb
dec
pushl
out
mov
repnz
mov
lds
lahf
in
rcll
les
icebp
sbb
decl
fiaddl
cmp
pop
loope
iret
cld
push
fwait
and
xchg
inc
push
call
or
lods
imul
mov
call
scas
fiadds
gs
sub
pop
pushf
push
lods
push
xchg
lods
sub
cmp
inc
lahf
cmp
hlt
push
jo
fldt
xchg
jge
pop
add
nop
or
flds
lahf
or
aaa
dec
pop
xchg
fxch
and
or
or
lcall
insl
add
add
dec
popf
cmp
xchg
and
pmulhw
aam
cwtl
roll
xchg
cmpsl
lret
inc
push
ds
push
mov
out
stos
mov
mov
jg
sbb
xchg
mov
pusha
pop
imulb
add
fidivl
xchg
stos
and
cmpl
push
test
sbb
add
add
sbb
add
outsl
cmp
add
repnz
fs
mov
in
xor
xchg
fimuls
xor
iret
mov
xor
sub
jbe
std
bound
xor
xchg
incb
xor
ret
inc
fs
popa
daa
jecxz
cmp
or
jecxz
xor
out
and
pop
fimuls
push
stc
sub
mov
push
into
roll
jns
xchg
es
add
repnz
jne,pt
or
or
mov
sbb
adcl
rcrb
jle
jmp
addr16
add
je
lea
es
addr16
or
stc
shrl
xchg
lea
inc
mov
enter
xchg
dec
iret
hlt
data16
scas
pop
imulb
enter
orb
repnz
dec
out
fs
fdivrp
cmp
jnp
outsl
in
inc
cmp
adc
inc
jmp
cwtl
or
je
rolb
mov
or
adc
pop
push
arpl
sub
push
in
push
and
or
add
mov
sbb
out
aam
cmp
daa
mov
out
ss
mov
dec
add
sbbb
insb
mov
pusha
dec
loopne
xchg
divl
xchg
add
dec
or
das
stos
arpl
add
ds
lds
mov
insb
push
in
xchg
adc
jnp
imulb
jp
add
cs
or
jmp
and
pop
lods
mov
cld
test
fcompl
aas
scas
daa
movsb
movd
fcomps
or
push
ret
pop
push
loopne
cmpsl
pusha
and
adc
inc
mov
loope
nop
lea
and
fdivs
add
in
cmp
insb
xchg
pop
orl
push
bound
sahf
xor
and
sub
mov
fidivl
repnz
loop
add
sarb
pop
mov
das
adc
push
adc
shl
shlb
orb
outsl
notb
jle
cwtl
mov
add
sub
xchg
pop
cmpsb
pop
push
and
dec
pop
cli
xor
pop
shll
add
fcomps
call
xchg
jmp
xor
std
fcoml
rclb
adc
fs
xor
fisttpll
es
les
inc
xlat
aas
mov
sub
lods
cmp
lods
adc
in
inc
aam
mov
fdivr
cli
repnz
sbb
jo
dec
inc
test
lcall
and
lahf
stos
cli
xchg
jge
jmp
mov
jnp
int
mov
fisubs
ja
gs
dec
insl
jp
push
sbbb
xchg
fimull
shlb
loop
dec
add
lcall
fdivs
mov
xchg
jbe
pop
mov
xchg
and
mov
lcall
dec
adc
adc
gs
add
pop
adc
jae
and
rcrb
xor
sti
mov
fstpt
xchg
shll
adc
mov
cmpsb
push
or
dec
hlt
aad
icebp
mov
dec
test
xchg
jmp
add
ror
call
pop
jl
add
js
mov
add
js,pn
or
adc
add
in
sbb
xchg
mov
into
cmp
add
cmc
icebp
pusha
adc
cmp
shlb
and
and
mov
jns
pop
andb
xchg
add
mov
loop
jb
nop
xchg
push
mov
xchg
mov
push
add
outsb
insl
testl
sub
pop
repnz
and
pop
jb
dec
mov
cmp
mov
jecxz
filds
push
inc
int3
and
rcrb
xor
cmp
loope
nop
add
mov
ss
and
pop
pop
add
mov
aaa
sbb
pop
push
dec
dec
jbe
xor
cltd
dec
mov
sbb
aaa
rolb
add
push
in
jmp
and
fmull
dec
and
mov
out
inc
mov
add
mov
fistpl
xor
mov
sub
cli
mov
xchg
sbb
fidivrs
lret
std
add
clc
xchg
dec
out
xor
clc
mov
test
fbld
push
jmp
sarb
insb
sbb
mov
push
sub
jnp
in
mov
dec
lds
and
sbb
inc
pop
out
ljmp
dec
lcall
pop
and
jmp
push
inc
push
popf
mov
add
sub
push
jbe
shr
mov
xchg
pop
and
icebp
mov
bound
sub
gs
rol
mov
sbb
fdivrp
gs
push
stc
xor
in
xchg
jge
mov
lahf
cli
dec
call
es
mov
mov
sub
dec
popf
xchg
nop
std
ss
push
mov
add
out
sub
push
push
or
jg
adc
outsb
cmp
enter
pop
scas
in
and
add
les
mov
and
repz
lods
divb
adcl
sarb
outsb
lods
out
fs
ss
sub
dec
push
fsub
jbe
pop
add
or
push
lea
repz
cld
dec
pop
lret
inc
pushf
xchg
dec
in
mov
in
mov
push
dec
mov
mov
cmpsl
jg
icebp
sahf
call
jb
xchg
adc
dec
jo
add
popl
xor
inc
loope
jg
movsb
jl
cmpsl
inc
cmpsl
sti
clc
xorb
pop
jnp
adc
mov
insb
cmc
xchg
ror
push
jb
xchg
bound
icebp
cmp
add
fs
int
out
add
adc
adc
cs
notl
adc
jo
daa
sub
jo
xchg
add
dec
inc
mov
in
mov
and
adc
jle
push
jl
daa
movsl
mov
dec
dec
mov
pop
sbb
mov
negb
pop
pop
cld
stos
sub
test
push
sbb
cmp
mov
mov
add
sbb
mov
andl
lods
shlb
jl
jge
inc
cmpb
sbb
fsubrl
and
add
cltd
mov
mov
xorl
push
add
stos
lock
ljmp
daa
add
insb
loopne
pop
scas
lahf
jns
jno
jge
adc
jg
test
cmp
fistps
sbb
jle
fcoml
pop
xchg
pop
and
inc
insb
mov
imul
jecxz
push
repnz
pop
xlat
and
sti
ret
ss
int
jmp
call
fcomp
imul
pusha
fdivrl
inc
leave
mov
xchg
cmpb
add
rorl
xchg
out
scas
fs
and
nop
sbb
xorb
cmp
jne
pop
jg
sub
daa
add
insb
mov
jne
jp
mov
pop
iret
mov
mov
mov
xchg
jmp
jnp
adc
push
fs
add
xor
es
fwait
cmp
inc
sub
inc
loope
mov
scas
jl
pop
cmp
pusha
jl
jmp
in
fists
jge
addr16
cli
xchg
jg
cmpsb
jge
add
fucomip
or
shrl
popf
gs
ret
imul
fldt
push
sbb
or
and
addl
jge
std
pop
cmp
inc
jo
mov
mov
repz
push
xor
and
fisubl
repnz
jbe
je
testl
repnz
sti
jmp
out
movsl
inc
inc
into
scas
scas
rorb
push
sub
rcrb
pop
jl
popa
sub
iret
int3
xor
adc
inc
fcoml
das
js
and
inc
into
aas
out
add
sbb
int3
popw
mov
mull
jb
punpckhdq
and
fiaddl
shlb
test
push
mov
add
and
mov
imul
test
sub
fucomp
addr16
int
push
sub
mov
jae
sub
movsb
pop
cmp
add
adc
dec
xchg
adc
in
out
es
jle
mov
int3
lods
ret
dec
sub
shr
sbb
add
dec
mov
jne
dec
add
xchg
lahf
inc
dec
mov
cmp
mov
popf
stos
out
adc
pop
inc
repnz
dec
dec
rorl
enter
pushf
lods
xor
add
cmpsb
sbbb
sub
loope
or
mov
or
xchg
add
add
lods
dec
imul
add
imul
rcrb
je
lret
repnz
dec
outsb
push
xchg
lret
and
dec
das
ja
orl
sbb
mov
cmpb
jmp
jnp
or
cmp
pushf
cmp
cmpsl
lds
cltd
and
adc
pop
test
insl
adc
stos
push
cwtl
or
out
cltd
and
sahf
inc
xchg
mov
lahf
clc
out
pop
out
cld
mov
xchg
pop
mov
rolb
mov
in
dec
or
inc
adc
xchg
movsb
jo
push
lret
add
mov
inc
mov
lret
pop
and
jbe
jo
js
lock
inc
pusha
inc
sbb
int
or
mov
not
push
mov
mov
xor
ljmp
inc
aam
mov
enter
inc
mov
adc
ds
pop
inc
jmp
jg
test
inc
xlat
shlb
xchg
fstpt
mov
mov
jo
push
pop
cwtl
inc
jns
adc
dec
pop
out
mov
aad
mov
mov
sbb
lea
inc
movsl
inc
leave
dec
or
add
inc
add
es
das
cmp
inc
outsl
nop
leave
add
pusha
out
repnz
popa
shll
adc
mov
sbb
mov
sub
ret
mov
jmp
sti
test
rorb
add
sub
cmpb
push
fnstenv
sbb
mov
pop
movsb
shll
imul
movsl
rcr
in
or
cs
adc
popa
js
jnp
dec
lods
or
mov
or
out
jg
rolb
dec
push
inc
mov
mov
push
dec
pop
movl
mov
rclb
cmp
ficomps
test
jp
daa
mov
lock
lret
adc
stos
mov
cwtl
les
xchg
enter
or
fistpll
xor
pop
popa
inc
insb
pusha
xor
xchg
pop
or
lods
sub
ret
pop
or
sub
add
or
sbb
jae
bound
dec
bnd
les
mov
and
push
cmp
imul
dec
cwtl
xchg
add
push
cmpb
iret
mov
mov
lcall
add
inc
push
loopne
and
jmp
imul
jle
sub
repnz
idivl
mov
lds
add
inc
out
adc
adc
adc
add
movsb
ja
jp
ficompl
add
int
sbb
dec
fidivrl
imul
mov
out
add
iret
mov
hlt
jbe
lds
in
int3
xchg
popf
clc
jp
push
cltd
add
push
scas
lods
mov
adc
jg
ss
jns
dec
inc
mov
push
sti
push
mov
test
lcall
cli
sbb
or
sbbb
sub
std
and
push
and
stos
out
add
inc
mov
mov
inc
jmp
loope
sub
mov
sbb
jmp
in
mov
push
in
cltd
push
add
adc
mov
arpl
imul
pop
lods
mul
xorb
xchg
loop
inc
inc
loop
aas
repnz
insb
adc
push
dec
jle
push
mov
cld
dec
arpl
daa
xlat
adc
test
adc
push
sbbl
fstps
push
fldenv
mov
idiv
clc
pop
xor
scas
jno
outsl
outsb
nop
mov
fcoms
or
ret
cmp
sbbb
xor
dec
mov
inc
in
xchg
popf
movsb
stos
xchg
aaa
push
lds
out
out
xchg
push
sti
pop
push
aaa
fldl
sbb
cmpl
mov
imul
xor
fcmovne
rcll
sarb
fstps
aas
lea
push
or
aas
arpl
loopne
int
jle
fidivrs
call
dec
add
adc
sub
lcall
outsb
dec
push
cmp
add
cmp
testb
xor
inc
loope
cmc
sub
xchg
loope
inc
jecxz
add
pusha
mov
out
aad
out
roll
fidivrl
pop
jg
xor
clc
retw
pop
xor
cs
icebp
cmpsb
pop
into
sub
loope
aas
jge
fsubr
inc
add
inc
dec
ret
jno
sbb
xchg
addb
stos
jmp
test
mov
outsl
sbb
xchg
shl
outsb
inc
push
cmp
fisubs
push
arpl
or
pop
fcmovne
and
stc
and
push
adc
lcall
push
rcrl
les
sbb
add
addb
adc
jns
cs
repz
mov
pop
outsl
xlat
inc
test
jg
js
aad
push
push
clc
pop
mov
inc
ja
or
icebp
xchg
shl
out
imul
pop
xchg
and
mul
jle
insl
loope
mov
xchg
pushf
test
xor
jns
add
cmp
js
scas
cmp
inc
daa
sub
dec
outsl
sahf
loopne
cmp
sbb
xchg
inc
into
je
fwait
add
scas
mov
pop
xchg
adc
sti
loopne
mov
add
add
sbb
call
dec
scas
loopne
aaa
loope
aas
sbb
jg
rorl
insl
lds
cmp
cwtl
adc
les
negb
sbbl
xchg
cmp
xor
and
int
mov
ret
loopne
mov
arpl
pop
mulb
test
inc
pop
popa
js
out
lcall
adc
hlt
aaa
shll
loope
cmc
adc
jge
arpl
scas
mov
mov
in
inc
out
cmp
cmp
sub
cld
cmc
jnp
dec
inc
push
push
mov
mov
jecxz
in
pusha
lea
aas
dec
xchg
movsb
insb
das
mov
xchg
jb
sahf
xchg
sub
mov
jbe
inc
mov
push
rcll
rorl
stos
ret
dec
or
mulb
int3
cmp
jae
sarb
mov
mov
xor
jle
adc
sti
adc
std
adc
pop
das
mov
in
outsl
movsb
fisubs
jmp
es
cmp
dec
push
insl
add
add
add
mov
int3
or
les
xchg
cld
adc
mov
or
jle
push
insb
dec
xchg
hlt
mov
sub
movsl
fisubrs
or
pop
add
dec
xlat
mov
add
enter
test
add
sbb
mull
sub
cmp
adc
or
push
and
lret
sbb
test
xchg
pop
les
std
sahf
sbb
je
add
cmpsb
add
inc
push
pop
mov
push
xchg
lret
lods
fisttpl
inc
mov
jecxz
sub
sub
mov
or
adc
sbb
popf
movsb
inc
sbb
inc
das
pusha
sti
pop
decl
cmp
pop
mov
cmp
in
nop
lahf
popf
mov
pop
push
loop
sbb
jge,pn
push
inc
cwtl
out
xchg
adc
cs
push
sub
sbb
inc
fxtract
rcl
push
lock
pop
push
pop
cmpsl
mov
mov
test
std
pop
ret
ljmp
lock
ret
or
mov
cmc
scas
test
mov
jae
jo,pt
shll
decl
adc
add
push
ljmp
and
js
test
adc
stos
movsl
arpl
dec
jmp
call
in
rolb
mulb
rolb
jb
mov
inc
les
mov
dec
mov
movl
test
js
and
jb
mov
hlt
mov
neg
es
and
imul
std
out
push
js
sbb
mov
movsb
scas
insb
hlt
xor
loope
xor
jns
dec
loop
jle
popl
mov
hlt
fdivrs
shl
sbb
xor
xor
xor
push
aaa
or
jo
dec
sbb
cmc
xchg
lret
mov
aad
adc
je
loop
rcrb
iret
jge
or
cld
dec
test
in
cld
or
cmc
and
add
jmp
jne
mov
adc
inc
pop
out
jbe
inc
pop
push
dec
mov
adc
cmp
add
push
adc
daa
cmp
into
pop
mov
adc
lret
sub
popf
cmp
stos
std
dec
mov
test
ficoms
stc
jno
sub
and
dec
nop
rcll
lock
imul
test
jns
add
loop
add
xchg
or
rcrb
subl
lods
lods
outsl
cltd
push
dec
adc
xchg
or
iret
xor
lds
adc
mov
idivb
or
add
test
xor
iret
scas
pop
mov
and
shrl
or
enter
mov
repnz
jb
or
pop
imull
in
ret
jp
cli
inc
pushl
call
mov
rolb
call
in
cwtl
insb
add
sbb
mov
packssdw
in
jne
lods
jg
mov
push
gs
add
insl
testl
adc
xchg
nopl
lods
mov
sbb
jmp
pop
xchg
mov
shll
insl
outsb
in
test
push
and
mov
push
out
outsl
or
mov
aas
les
sub
data16
loopne
adc
inc
mov
cltd
xor
scas
dec
cwtl
cmc
push
mov
inc
jg
push
pop
dec
inc
jecxz
inc
dec
pop
xchg
inc
repnz
fiaddl
and
fdivp
lods
and
cmp
aaa
insb
in
sbb
xor
mov
pop
mov
loope
hlt
inc
cmp
and
jecxz
cli
add
in
jo
scas
shlb
xchg
test
out
mov
arpl
cmp
call
inc
jne
push
mov
mov
movsb
ror
cmp
jmp
hlt
mov
cli
dec
dec
gs
xor
bound
sbb
pop
or
ss
cmp
loopne
mov
inc
dec
mov
add
hlt
xchg
sbb
mov
pop
push
mov
fs
ret
or
push
and
fsubl
lods
jnp
or
mov
mov
sahf
xor
add
sahf
iret
inc
sub
popf
cmp
out
adc
das
imul
sbb
push
adc
jg
jl
pop
xlat
mov
in
jg
pop
lcall
pop
pop
mov
cmp
inc
cmp
pop
jmp
mov
push
int3
or
inc
pop
inc
inc
dec
nop
cld
gs
push
adc
mov
add
or
push
arpl
push
mov
daa
jmp
cmc
push
pop
rclb
rcrb
add
mov
or
jbe
pop
fcmovnb
mov
pop
clc
and
outsl
add
mov
out
mov
or
fdivrl
in
jg
aas
sbb
outsl
xor
pusha
adc
sahf
std
mov
add
dec
inc
add
mov
into
in
xor
dec
mov
jmp
mov
sbbl
and
sbb
push
mov
bound
fucomip
les
lcall
mov
lock
in
out
neg
mov
pop
add
loopne
xchg
xchg
dec
lods
es
xchg
arpl
pushf
dec
lret
push
and
fnstenv
in
xor
lea
mov
push
das
adc
push
jns
mov
mov
mov
pop
and
andl
adc
lods
out
mov
pop
neg
out
cli
add
sub
and
jge
fidivrs
neg
and
outsl
xchg
cmpsl
add
push
cltd
and
rcrb
pop
cld
push
mov
fmull
cmp
mov
pop
mov
lods
add
mov
dec
or
mov
add
das
mov
push
mov
std
icebp
lret
pop
ljmp
pop
sbb
pop
scas
xor
sahf
clc
orb
xchg
notb
test
mov
xchg
test
add
notl
jl
faddl
mov
cmp
out
dec
jae
in
add
dec
sahf
jns
push
lahf
mov
nop
dec
cmpsb
xchg
stos
clc
cmp
sbb
sub
add
jno
jmp
std
pop
mov
in
movb
mov
dec
ret
jge
dec
cmp
rcr
cmp
cmp
push
in
push
stos
cmp
pop
add
push
xlat
pop
bound
sarb
jb
nop
mov
mov
mov
jnp
mov
call
fiadds
jmp
mov
pop
lods
xor
dec
test
aaa
jb
mov
push
mov
fwait
mov
xor
pop
das
jmp
adc
sbb
sbb
test
adc
fildll
clc
xchg
imul
sub
test
scas
xchg
mov
in
jge
dec
ds
shr
xor
mov
iret
sbb
fs
lcall
mov
adc
ret
scas
inc
in
js
push
xchg
jnp
decl
dec
pusha
dec
add
sbb
jne
sub
flds
xchg
pop
scas
out
stos
lahf
popf
adc
popa
in
mov
push
test
lods
movsb
fmull
outsb
jg
add
dec
sahf
cmp
xlat
out
dec
mov
sub
mov
push
mov
and
std
outsl
pop
sub
jge
mov
add
jae
jecxz
jne
push
or
repz
mov
jnp
pushf
movswl
test
jmp
mov
add
rol
shll
scas
cs
addl
pop
pop
lods
xor
das
xchg
dec
arpl
iret
jle
repnz
push
out
pop
negb
lods
inc
inc
fwait
into
into
push
jne
mov
jg
xor
fdivrl
ds
xlat
push
lds
int
fcmovbe
shrb
addb
dec
scas
das
adc
and
int3
mov
inc
adc
xchg
cltd
sub
mov
test
add
mov
adc
dec
in
sub
loopne
ret
xor
and
std
push
stos
ljmp
mov
pop
fsubl
das
push
mov
jne
add
out
insl
jns
sti
enter
stos
loop
sub
jg
subl
jmp
call
cli
int
push
mov
mov
add
js
inc
test
stc
add
orb
mov
out
and
rcrb
repnz
cmp
leave
mov
mov
lods
jg
je
add
rcrb
jne
add
cmp
loopne
addr16
or
push
xchg
fimull
fidivrl
or
pop
jp
cli
add
int3
and
clc
enter
in
push
xchg
notb
add
fnstsw
ret
or
stos
mov
es
push
mov
fwait
outsl
jnp
mov
jmp
pop
dec
sub
mov
repnz
test
or
lret
out
test
cmp
cmc
cltd
sub
out
push
clc
fisttpll
mov
out
add
pop
mov
mov
int3
imul
dec
aaa
mov
rol
repz
in
push
fisubl
adc
xor
movb
push
rorl
aam
ja
and
cmp
add
mov
mov
imul
iret
stos
sti
ret
mov
xor
shrb
sbb
test
and
adcb
inc
and
jecxz
loope
add
jb
mov
ss
xor
es
clc
jne
icebp
scas
dec
mov
loopne
add
dec
mov
int3
cld
lcall
mov
xchg
mov
movsb
in
arpl
jbe
fsubs
inc
dec
test
mov
push
sbb
mov
adc
pop
int
bound
pop
or
sub
inc
test
pop
js
mov
mov
inc
mov
aam
inc
xor
pop
cld
xchg
cli
pop
fcompl
xchg
nop
into
sub
push
pop
jns
int
add
push
dec
push
repz
mov
cmpsb
mov
arpl
jle
cmp
cmp
lret
popf
xlat
subl
or
popa
ds
xchg
mov
lea
mulb
ds
mov
push
sbb
ljmp
mov
sbb
jo
mov
repz
iret
lods
scas
mov
jmp
jge
inc
or
inc
cltd
cld
mov
mov
jns
inc
sbb
addb
insb
push
rcl
cmp
out
add
imul
cmp
into
push
add
enter
lea
fwait
mov
popa
fiadds
daa
daa
dec
adc
int3
push
xchg
add
xchg
fwait
mov
sbb
sbb
subb
imul
ljmp
mov
lea
aas
cmp
dec
add
inc
push
mov
inc
inc
movsb
and
add
dec
cmp
loopne
ljmp
add
adc
out
push
cmc
jbe
and
add
push
add
imul
inc
xor
sbb
das
sti
sti
or
mov
jns
scas
xchg
add
in
adc
cwtl
mov
dec
adc
mov
add
loopne
dec
cmp
aas
gs
mov
test
sahf
sar
xlat
or
pop
add
ljmp
test
pop
ja
add
lahf
aas
inc
jecxz
mov
pop
mov
jae
pop
jae
cmpsl
daa
vfrczps
pop
and
mov
daa
rcl
cmp
in
lods
cmp
xorb
sub
sbb
scas
stos
in
lcall
stos
sbb
pop
mov
dec
repz
sbb
cltd
fs
mov
push
inc
adc
nop
fdivr
sbb
arpl
sahf
push
pause
add
push
lcall
pop
fnsave
popa
fcmovnu
mov
rol
jo
fildll
sbb
mov
mov
in
dec
stos
pop
imul
outsl
sti
mov
sbb
mov
pop
dec
scas
pop
and
mov
or
addr16
imulb
scas
xchg
and
jg
mull
push
fisubrs
out
add
lret
sahf
jge
divb
push
xor
jo
js
push
pop
jmp
icebp
dec
mov
xor
lret
scas
mov
ss
and
notl
pop
out
inc
inc
je
cld
cmc
aas
cmp
push
cmp
mov
adc
ss
mov
mov
xchg
fwait
cmpsb
pop
mov
pop
fucom
test
call
inc
push
out
cli
cmpsb
out
lahf
pop
movsb
add
xchg
inc
test
dec
popf
push
mov
out
fwait
ss
test
fcmovb
repz
or
dec
cmpsl
mov
ficomps
sub
cmpsl
jle
test
ljmp
xchg
cs
daa
fildll
mov
imull
outsl
int3
mov
cmp
pop
jge
int
mov
loop
scas
leave
repnz
leave
jno
pop
es
sub
jmp
scas
dec
incb
mov
jle
insl
mov
mov
inc
jmp
pusha
dec
test
inc
cmpsb
cmp
into
inc
xor
out
jp
shlb
repz
stos
mov
mov
lock
adc
fldt
push
scas
lock
leave
mov
xchg
out
mov
loopne
enter
mov
test
dec
cmp
mov
cwtl
mov
jno
scas
push
sbb
clc
xor
insl
pop
sub
mov
jmp
ss
aas
insb
repnz
mov
bnd
test
nop
stc
jecxz
mov
inc
lret
daa
bound
sarl
xlat
out
fisubrl
xor
push
arpl
imul
dec
orb
cmp
mov
jns
icebp
ret
dec
rclb
and
push
pop
adc
xchg
or
mov
lds
push
sbb
jb
adc
out
jge
mov
sbb
fidivl
mov
je
or
sub
push
jnp
mov
or
mov
sub
js
imul
mov
push
xor
fisttpl
push
jl
call
adc
jge
mov
pushl
das
fidivl
jle
aam
pop
call
dec
inc
mov
push
adcb
mov
ficompl
xchg
imull
xchg
mov
repnz
jl
xor
or
pusha
add
push
fcmovb
mov
jne
cli
cmp
cmp
pop
dec
or
inc
test
pop
gs
adc
mov
pop
xor
lcall
ret
cli
addr16
adc
fwait
mov
clc
lcall
ds
cmp
xor
in
dec
or
jne
aam
out
mov
pop
xchg
dec
add
loopne
mov
dec
xor
fimuls
iret
cmpsl
rcl
add
mov
adc
add
xor
mov
xor
loopne
or
xchg
scas
pop
and
pop
stos
sbb
in
je
in
jg
push
jg
icebp
loopne
pushf
mov
push
into
fistpll
pop
jecxz
mov
rolb
call
or
pop
icebp
negb
inc
add
jmp
xlat
push
mov
and
lahf
aas
cmp
jae
mov
and
iret
pop
push
stos
ds
inc
cmp
inc
mov
mov
xchg
xorl
jbe
jecxz
mov
dec
cli
sti
outsl
pop
inc
stos
jge
xchg
aad
inc
data16
dec
inc
repnz
addr16
hlt
fbld
and
aaa
push
fnstsw
mov
mov
xor
mov
cmpsb
mov
das
pop
jp
pop
arpl
mov
js
mov
push
or
add
lret
push
sbb
ja
push
aam
stc
xor
loopne
cltd
mov
ja
lods
add
pop
dec
mov
shl
mov
push
arpl
int
insb
imul
addr16
iret
push
cli
ja
mov
pop
mov
cmpsb
fisubrl
add
mov
fs
inc
lock
es
dec
pop
mov
jg
lcall
aas
mov
popf
ficoml
and
movsl
xor
imull
push
cmp
adc
hlt
pop
mov
xor
ljmp
inc
aaa
cs
pop
out
dec
repz
outsb
xchg
repnz
ja
gs
shrb
mov
and
roll
or
jns
mov
decl
int
fwait
jne
dec
dec
xchg
dec
mov
in
aas
sbb
imul
mov
xor
jmp
or
inc
xchg
or
push
pop
inc
leave
out
pop
ljmp
xchg
rcrl
rcrb
in
jmp
out
enter
and
dec
lcall
sbb
xor
jg
pop
fnclex
dec
jg
adcl
jbe
jle
int
fnsave
jl
or
jg
out
mov
sub
imul
dec
lds
add
std
xorl
jg
js
aad
push
jb
jg
pop
mov
fcoml
dec
cmp
std
mov
frstor
cld
insl
dec
scas
xchg
andl
push
add
jnp
mov
add
cmp
xor
inc
out
jl
mov
and
out
leave
or
pop
push
push
push
push
popa
cld
mov
ljmp
cmc
test
icebp
scas
test
or
mov
aaa
imul
movsl
mov
xlat
mov
mov
aam
aas
mov
xor
pop
mov
mov
inc
out
adc
outsb
inc
imulb
daa
test
arpl
or
xchg
insb
jno
xor
mov
out
test
mov
test
pop
insl
or
xor
add
cs
xchg
adc
insl
aas
xchg
add
xchg
das
inc
push
fdivrp
sbb
mov
stos
test
jmp
fidivrs
dec
dec
daa
cmp
or
repz
movsl
jle
mov
xchg
inc
push
lret
es
inc
and
lods
mov
adc
inc
mov
jmp
je
xchg
xlat
lock
xchg
cli
pop
push
pop
test
cmpsl
ljmp
add
aam
es
mov
lock
shlb
lock
mov
mov
dec
sub
fcoml
in
fcomps
xchg
xor
lods
outsb
dec
jp
out
xchg
inc
push
mov
outsl
fnstsw
sub
jmp
scas
sbb
test
cmpsl
pop
scas
mov
mov
arpl
pop
adc
cli
call
outsb
dec
inc
sub
cmc
cmc
jmp
xor
les
mov
imul
pop
mov
test
add
inc
jae
jl
and
testl
std
icebp
push
je
and
lcall
add
es
push
dec
sbb
xor
hlt
dec
mov
pop
test
or
mov
mov
mov
int
out
fdivp
loopne
xchg
pop
adc
fdivp
mov
cli
xor
or
mov
dec
clc
out
and
pushf
clc
mov
data16
icebp
xchg
xor
scas
adc
mov
test
mov
and
pop
add
fdivrp
push
nop
aam
add
xchg
add
cmp
cmp
or
in
shl
pop
cld
jb
jge
fdivrs
icebp
iret
popa
cmc
xlat
jle
shl
ficoms
popf
mov
out
and
leave
cmp
ljmp
sbb
cmp
daa
sbb
adc
and
jo
rcl
data16
inc
popf
aaa
sub
pop
fistps
out
popf
incl
aam
jmp
mov
imul
repnz
rorl
leave
sbb
cs
cld
fneni(8087
fmull
mov
mov
loopne
inc
mov
pop
outsb
imul
add
ljmp
rcll
sar
outsb
add
add
cmpsl
xchg
and
fdivrp
outsb
add
popa
xor
les
mov
xor
loope
jnp
scas
shr
aas
cltd
add
pop
dec
test
in
imul
pop
cmp
je
xchg
enter
std
xor
pop
mov
xchg
jp
out
and
and
ljmp
movsb
xlat
push
rcl
push
lea
jo
sbb
mov
and
mov
cld
cli
or
je
test
leave
dec
pop
leave
fcoml
icebp
jecxz
sahf
jbe
decb
loopne
shll
divb
lret
inc
popf
adc
not
outsl
and
mov
test
xchg
psraw
pushf
mov
xor
test
xlat
adc
repnz
sbbb
into
jle
xchg
cmc
jo
jecxz
cmp
inc
scas
in
das
jnp
idivb
imul
or
outsl
xlat
xchg
push
cld
cmp
insl
jae
mov
mov
sti
jle
cs
xchg
mov
in
scas
out
scas
ss
and
idiv
inc
cltd
cmp
push
or
jp
mov
sub
and
lods
mov
sbbb
outsb
int3
stos
adc
xlat
or
push
mov
cmpsb
lock
imull
push
push
cmp
subl
ljmp
mov
in
jmp
sbb
xchg
cli
out
out
fdivs
dec
jb
sbbb
pop
sahf
mov
add
cli
test
cld
jmp
adc
insb
xchg
xchg
xor
scas
and
dec
mov
inc
jecxz
int
cmpsl
imul
adc
enter
cltd
test
cmp
mov
cli
mov
sarl
test
cmp
and
lahf
sar
sub
push
adc
iret
push
jl
inc
and
push
mov
popl
xchg
rclb
cld
xor
imul
int
in
sub
jge
sub
ljmp
stc
in
inc
test
dec
adc
and
inc
testb
test
xchg
lahf
out
scas
les
sahf
in
das
out
into
jnp
sub
jmp
insl
scas
pop
int
cs
push
fcmovu
in
mov
pop
push
std
or
pop
iret
cmpsl
in
mov
inc
cmp
mov
or
adc
mov
in
push
push
out
pop
dec
clc
icebp
out
std
adc
add
aaa
sbb
cmc
mov
mov
lods
push
sbb
and
fs
jg
cmp
xor
ret
clc
jnp
or
ret
push
mov
ljmp
jae
shlb
repz
subb
sahf
pop
movl
imul
aaa
cmp
inc
repnz
xor
adc
mov
xchg
inc
mov
xchg
mov
pop
iret
dec
dec
imul
lcall
insb
pop
or
enter
push
pop
insl
inc
cmc
pxor
scas
push
stos
in
inc
push
fisttpl
pop
stc
mov
rcl
or
inc
or
mov
outsl
jno
dec
jl
jg
mov
inc
jmp
mull
cmp
sub
pusha
xchg
test
push
jp
aam
sarl
push
sub
lods
sub
pushf
stos
filds
xlat
roll
adc
ljmp
test
pop
push
fists
iret
shlb
xchg
cwtl
pop
cli
inc
fwait
out
mov
push
jle
xor
or
aas
ss
xchg
mov
sub
add
pop
cmc
scas
cmp
jns
iret
cmp
jmp
jo
push
cmp
cli
movsl
sub
adc
add
push
push
cmp
pop
jne
mov
add
mov
inc
das
cmpsl
xor
pop
pop
movsl
mov
or
mov
xor
push
mov
push
enter
sbb
xchg
daa
xlat
sbb
mov
add
jbe
push
inc
jnp
xor
sbb
xchg
jmp
repz
out
pop
call
dec
stos
ljmp
into
into
in
fdivrs
out
cmpsl
cli
pop
test
dec
jnp
fidivl
sbb
mov
bound
and
stos
scas
scas
xchg
insl
add
and
dec
inc
inc
push
inc
sti
mov
shll
push
out
inc
arpl
add
lock
mov
jge
pop
clc
ret
cmp
montmul
cmpsb
xchg
rcl
loop
pop
sti
push
shll
imulb
mov
imul
add
dec
cmp
add
cwtl
mov
test
cmpb
lret
je
add
gs
ljmp
lea
negl
lea
pop
and
movsb
aas
sub
cmp
lea
cmp
dec
sti
push
les
fdivr
jb
ja
fldenv
push
popa
sarb
hlt
cmp
icebp
test
jb
imul
cmp
cmpsb
add
mov
shr
lock
dec
test
sarb
pop
sub
xchg
insb
mov
inc
mov
stos
inc
fidivs
mov
mov
adc
test
add
mov
shr
push
xchg
lock
clc
jp
aas
mov
jge
aas
jecxz
pop
fnstsw
nop
out
jae
jbe
fcos
scas
or
and
jge
jecxz
test
push
add
xchg
lcall
fimuls
loop
and
out
insl
repnz
outsl
xor
stc
int
mov
ret
inc
lock
int
lds
push
jmp
mov
add
mov
mov
xchg
push
pop
mov
repz
fsubp
aaa
mov
jmp
daa
popf
sbb
jo
jns
xor
xchg
mov
lea
and
lods
cmpsl
sti
inc
out
or
loop
les
fadd
xchg
sahf
aad
sub
daa
data16
popf
hlt
testl
jle
cmpsl
mov
push
pop
sub
mov
sahf
mov
jp
or
out
push
pop
int3
aas
stc
cmp
mov
test
adc
add
and
push
pop
xchg
cmp
out
dec
pop
rorb
mov
sbb
sub
add
jb
xchg
lods
repz
mov
into
testl
mov
fstpl
push
sub
push
cmc
mov
cmpsl
cltd
xchg
pop
test
xchg
xor
dec
and
push
or
dec
jg
cmp
aaa
pushf
loop
cltd
xorl
fwait
pop
js
mov
mov
xor
std
sbb
sti
cmpsb
aas
push
dec
mov
jg
shrl
xchg
push
pop
dec
testl
mov
adc
ret
and
inc
stos
adc
xor
add
mov
loopne
sub
add
fadd
xor
xor
mov
leave
lock
mov
pop
push
cmp
inc
je
shlb
push
and
mov
into
movsb
push
sub
pop
mov
mov
inc
inc
or
mov
mov
in
pop
jo
adc
or
cmp
xchg
stos
inc
ret
adc
and
xor
inc
dec
ds
mov
and
mov
cmp
jmp
in
cmp
aaa
hlt
jns
cmpsl
jne
mov
punpcklbw
lock
fmul
lret
dec
andb
insl
mov
add
sbb
inc
adc
cmp
fidivrs
adc
add
fisttpll
cwtl
repnz
cli
dec
pop
sahf
sub
inc
lds
addr16
push
out
mov
sbbl
push
pop
popf
stos
jge
mov
mov
mov
mov
test
test
xor
leave
mov
stos
cwtl
pushl
dec
insb
std
icebp
daa
pop
pop
ja
addr16
sti
or
push
mov
pop
xor
jmp
pusha
pop
in
cld
es
inc
int3
mov
or
aas
inc
cmpb
pushf
hlt
sub
sbb
ret
mov
xchg
mov
jl
imul
jmp
xor
arpl
repz
int3
mov
out
test
shll
stos
ja
jmp
cmpsb
aaa
and
pop
idiv
and
push
push
mov
sub
mov
rcrb
and
inc
fistpl
push
jl
lods
outsb
dec
jl
rolb
jl
push
dec
sbb
mov
fidivrs
jg
adc
or
mov
mul
repz
outsb
sbb
mov
rcrb
push
icebp
in
sahf
cltd
lock
mov
sbb
outsl
jmp
sub
aad
push
xchg
pop
sti
stc
dec
xlat
jle
ret
cmpsb
pop
lods
cli
shl
mov
cmpsl
or
sbb
fadds
lahf
js
xchg
out
pop
push
outsb
fdivrp
jecxz
int
mov
inc
sub
add
fistpll
pusha
ljmp
xor
scas
dec
shrl
lret
or
mov
adc
pop
xor
outsb
mov
dec
jnp
cld
rsm
and
fldenv
mov
and
jnp
out
sbb
fs
sub
push
mov
imul
shl
icebp
icebp
mov
adc
mov
xchg
jl
or
dec
push
int
stos
pop
jecxz
fwait
je
fdivp
cld
imul
cld
icebp
and
sub
dec
jmp
xchg
xlat
stos
mov
bound
fsubr
pop
nop
ret
cmove
sbb
adc
mov
lahf
adc
add
add
push
push
lock
mov
clc
add
clc
push
mov
push
jg
dec
out
mov
pop
add
jb
out
ret
shr
jecxz
out
and
pop
fdivrp
cmp
jae
jge
cwtl
aas
rolb
xlat
mov
lods
lret
jbe
fidivs
add
insl
ret
jnp
outsb
fsubs
in
jb
pop
mov
or
sub
cmp
stc
leave
stos
lea
test
cmp
xor
jo,pt
ds
mov
sub
out
int
lds
and
ljmp
dec
dec
jl
or
push
movsb
insb
xor
bound
xchg
and
xchg
dec
sbb
mov
pop
ffree
mov
mov
fiaddl
xchg
pop
fisttps
cmpsb
aaa
mov
das
jg
std
negl
jge
lods
add
and
stos
pop
fdivs
push
jg
scas
pushf
mov
sub
or
jbe
daa
repz
faddp
in
stos
xor
dec
jl
cmp
std
out
xlat
in
xor
imul
stos
ds
and
in
insl
ret
stos
inc
add
add
pop
sub
push
pop
push
mov
push
xchg
push
and
minps
jae
call
inc
mov
dec
cld
into
jmp
sti
jmp
outsb
xchg
push
jbe
push
mov
imul
mov
xchg
inc
pusha
and
in
ja
les
and
pop
inc
sub
aas
mov
pop
push
movl
fistl
aam
ss
movb
ja,pn
sahf
and
mov
pop
dec
repz
mov
push
setnp
adc
ja
dec
jp
stc
out
dec
mov
mov
cld
mov
insl
or
adc
fidivl
jg
addr16
sub
xchg
xchg
inc
les
mov
aas
lds
decl
sbb
mov
pop
std
mov
out
es
sub
pop
push
adc
movsb
sub
cmpsb
inc
fisttpll
xchg
jl
and
or
stos
mov
fsin
pushf
jmp
lock
cmp
aaa
int
or
pop
lea
dec
or
fisubs
jae,pt
jp,pn
fsubrl
clc
mov
hlt
cmp
cmpsl
inc
out
dec
ret
or
mov
andl
push
scas
in
out
inc
dec
in
and
push
mov
mov
fnsave
cs
or
and
xlat
mul
mov
xchg
jl
iret
dec
mov
data16
movsl
jg
jle
in
dec
dec
in
lods
movsb
lcall
jecxz
repnz
popa
jp
popa
xchg
or
aas
stc
mov
adc
sub
repz
mov
mov
imul
sahf
stos
nop
mov
mov
rorl
dec
aam
jl
popa
mov
mov
xchg
test
inc
cmp
das
repz
xchg
scas
mov
into
in
adc
imul
add
scas
out
xchg
adc
sub
jp
and
out
sub
les
sbb
shll
cmp
jge
stos
jge
sub
jmp
jge
add
leave
jg
ja
cmp
imul
mov
inc
pop
insb
mov
mov
xlat
dec
ret
push
aam
adc
cmp
inc
fwait
sbb
pop
adc
fwait
push
mov
loope
push
ja
mov
shll
leave
mov
adc
push
sahf
hlt
xchg
jbe
std
movsl
sbb
dec
adc
scas
xor
and
ffree
cld
push
stos
pop
loop
push
stos
addr16
pushf
pop
pop
arpl
dec
aaa
stos
push
adc
mov
negl
pushf
popf
aas
inc
subb
push
mov
xchg
mov
inc
xchg
daa
inc
ds
cmc
mov
cmp
push
jb
xchg
int
or
sbb
push
mov
add
adc
inc
popf
daa
mov
loopne
ja
mov
sti
sbb
pop
aad
push
xor
sub
jo
out
mov
lret
outsb
jp
cld
stos
fistpll
scas
js
ds
lock
lods
ret
imul
pushl
push
jbe
mov
jp
lock
sbb
orl
jo
sub
push
xlat
adc
jl
shr
stc
jno
jg
xchg
cli
cmpsl
movl
adc
mov
push
cwtl
xor
dec
push
and
add
ss
lea
jge
sbb
push
jge
ret
cmpsb
jle
bound
scas
mov
cs
cmp
push
adc
int3
push
mov
jl
ljmp
pop
les
sub
xlat
sub
inc
add
pop
movsl
cwtl
in
scas
add
mov
mov
repnz
push
js
insl
jae
push
or
mov
or
push
sub
roll
jbe
jge
cmp
push
pushf
cli
scas
lods
ljmp
mov
dec
jbe
loop
jmp
xor
rcrl
in
dec
movsl
push
ret
adc
push
mov
dec
inc
or
test
jno
ret
push
xchg
cmp
dec
mov
sbb
stos
imul
negb
jle
int
std
push
cmpb
shl
sbb
pop
pop
xor
fstps
push
hlt
xchg
push
or
mov
jns
jne
call
ss
sbbb
arpl
pushf
adc
or
in
lods
outsb
xchg
js
insl
xor
mov
test
push
jno
mov
jmp
cmpsb
xchg
dec
xchg
pusha
aad
adc
mov
pop
sbb
repz
push
adc
scas
cmp
movsl
mov
inc
jb
lcall
mov
popa
lods
and
lret
mov
xchg
push
sub
sahf
mov
sub
leave
mov
mov
fidivs
hlt
loope
cmp
test
mov
call
xchg
stc
lahf
incb
repz
fmulp
lea
out
in
fidivrl
stos
push
pop
cmc
mov
addr16
inc
mov
test
std
jns
push
pop
pop
jne
pop
ljmp
stc
scas
pop
jno
dec
rolb
rcl
dec
jmp
lret
dec
sub
ret
lds
adc
int3
mov
xchg
and
sbb
ficomps
mov
stos
jecxz
jle
dec
dec
dec
stos
lods
add
fcompl
icebp
idivb
in
jbe
adc
enter
xor
jl
xchg
cwtl
cmp
lods
insl
das
sbb
jl
cmpsb
insb
mov
xor
je
xor
call
fwait
add
mov
or
sti
dec
adc
push
mov
imul
mov
and
pmaddwd
lods
xchg
mov
or
test
int3
dec
mov
jnp
dec
xchg
std
scas
jg
out
std
and
jge
xchg
adc
lods
mov
sub
stos
ds
inc
sbb
clc
cli
jge
xor
jno
imul
push
int3
rcr
jge
cmp
ja
push
mov
mov
or
pop
xchg
and
pop
fcompl
xchg
ja
std
xchg
sbb
dec
test
jns
add
ss
outsl
push
jo
mov
jns
pop
scas
fistl
cmp
lods
xchg
mov
lock
jmp
ljmp
pop
sahf
push
adc
sbb
or
aas
int
popf
xchg
inc
xchg
sti
cmp
arpl
mov
stos
imul
push
pusha
test
sbb
dec
shlb
fidivs
mov
xchg
mov
les
and
push
cltd
add
test
dec
dec
scas
les
jg
cmp
je,pt
cld
cld
jb
movsl
outsl
fsts
jg
lret
cmp
pop
cmpsl
mov
jmp
dec
je
push
lea
ficomps
fstp
fs
lock
faddl
and
inc
sbb
out
jno
jp
mov
inc
repnz
ret
lahf
stos
cmp
adc
push
push
ljmp
mov
xchg
in
das
sbbl
inc
dec
xchg
sub
push
push
ja
cmp
icebp
out
cmpb
and
fucomip
das
cwtl
cmp
stc
enter
iret
mov
push
imul
add
int
dec
pop
push
add
cmp
adc
mov
mov
sbb
in
rclb
add
xchg
rcr
and
inc
push
mov
lcall
lock
cmp
xchg
push
cmp
test
sub
out
add
push
sbb
xchg
mov
and
pop
stc
in
jae
fcompl
mov
jo
and
and
jl
clc
jl
inc
div
sbb
out
repnz
in
lcall
hlt
mov
stos
jmp
jg
les
push
lret
bound
jne
stos
mov
outsl
push
out
aad
push
xorl
sbb
add
nop
mov
incb
into
outsl
xlat
je
lods
movsb
les
jmp
int
lock
hlt
xchg
jbe
lret
mov
mov
adcl
sub
mov
push
xrelease
dec
lds
inc
xlat
in
cs
in
jb
test
arpl
cmp
dec
fucompp
lock
aam
addr16
or
dec
es
and
out
test
adc
sarl
mov
shl
insl
shlb
dec
fldl
sub
ds
xor
jo
xlat
fiaddl
adc
dec
arpl
aad
shlb
or
and
xor
and
test
and
add
inc
xchg
add
xchg
xor
test
loopne
sbb
lcall
mov
pop
mov
ja
ja
fbstp
adc
adc
sahf
lcall
cmp
rcll
out
cmp
xchg
mov
or
aad
add
cmc
xchg
xor
andl
daa
cwtl
pop
jge
js
inc
cwtl
inc
das
sbb
mov
sub
hlt
clc
cmp
lock
xor
adc
fwait
pop
sub
fcompl
xchg
xchg
dec
add
orl
push
pop
mull
jne
push
nop
and
push
out
push
int3
movsb
adc
outsb
sbb
mov
shl
pop
and
fildll
and
inc
lods
lods
mov
xor
and
pushf
pop
mov
push
lahf
push
xchg
pop
xchg
inc
int
gs
mov
jge
pusha
fcoms
pop
sbb
add
push
in
rclb
inc
ret
push
mov
xlat
sub
pop
addl
cmc
lods
pop
test
pop
and
enter
mov
adc
les
adc
push
outsb
cwtl
dec
add
pop
mov
cmp
test
adc
adc
push
add
jmp
pop
sub
sbb
mov
outsl
jbe
cltd
jmp
cwtl
mov
fldl
mov
fidivrl
bound
hlt
jecxz
mov
mov
push
xchg
push
roll
repz
imul
pop
pop
in
inc
ret
aaa
in
shr
cli
les
pop
fwait
or
mov
xor
dec
das
das
and
push
xchg
test
and
xchg
js
inc
inc
xchg
icebp
lods
jo
xchg
dec
js
mov
rclb
arpl
daa
dec
out
dec
xor
mov
cmc
inc
xchg
movsb
aad
inc
ljmp
jno
lds
sub
sbb
add
dec
shlb
add
das
xbegin
mov
jl
add
inc
pusha
pop
hlt
cmc
push
addb
mov
repz
stos
cmp
mov
ret
in
ficoml
dec
dec
adc
inc
fistps
out
outsl
sub
and
mov
enter
sub
inc
push
sti
pusha
dec
dec
xchg
inc
shll
xchg
cmpb
aad
xchg
nop
and
add
push
dec
push
and
addr16
or
pop
adc
cltd
int
fidivrs
xchg
adc
sti
sti
out
loop
mov
xchg
push
cmpsb
testl
push
rcll
insb
in
pop
pop
dec
jle
lret
out
push
sahf
pop
das
repnz
das
in
add
rorb
cli
flds
xchg
cmp
addb
add
fimull
cld
add
dec
adcb
pop
jl
xchg
dec
aam
scas
adc
mov
jo
enter
in
cmp
push
push
pop
mov
xchg
fdivl
das
xchg
pop
inc
pop
inc
pop
sbb
push
popf
ret
xor
mov
lea
and
or
fwait
add
add
iret
sub
fisubs
int3
pop
clc
dec
or
inc
or
mov
scas
sub
mov
std
rcr
lret
xor
xlat
add
and
pushf
out
and
sbb
aam
dec
stos
jae
push
adc
adc
les
push
int3
adc
adcb
sti
and
leave
nop
and
inc
xchg
adc
test
test
orb
xchg
subb
inc
push
mov
aam
push
adc
addb
and
lods
inc
jecxz
fwait
iret
outsl
xchg
imul
adc
jb
dec
xchg
out
pop
dec
push
cli
or
jb
and
or
nop
push
test
add
nop
addl
into
mov
add
add
inc
inc
fldl
pop
loop
sbb
push
adc
and
add
sub
addl
or
lock
pop
cwtl
in
xchg
mov
shr
cltd
sub
mov
movsb
insb
push
push
add
sub
test
scas
out
adc
adc
mov
es
inc
frstor
orb
mov
or
movsl
jl
repnz
sub
test
aas
rcl
pop
add
out
inc
dec
out
pop
xchg
shrl
dec
inc
je
scas
jp
dec
sub
cwtl
jmp
repnz
and
fistpl
inc
push
add
add
int
mov
xchg
sub
push
or
aad
mov
test
add
or
xor
out
push
sbb
mov
les
fadds
int
loop
shrl
inc
pop
adc
dec
sub
test
sub
add
xchg
stos
mov
ja
out
test
add
mov
cltd
and
and
pop
push
xor
cs
ljmp
cltd
rolb
dec
sbb
sbb
stos
mov
and
add
mov
shlb
cmp
inc
xor
jne
pushf
mov
sbb
adc
jmp
daa
add
ja
push
inc
xor
adc
aas
ljmp
shlb
fmull
and
pop
dec
aad
xchg
aas
and
in
into
les
ljmp
and
inc
je
or
jecxz
addr16
cs
ss
int3
pop
mov
mov
jg
mov
call
jg
icebp
repnz
cld
rcr
bnd
mov
das
testb
inc
jne
and
xchg
enter
add
imul
fisttpll
jp
gs
xor
int
xchg
test
xor
mov
cmp
adc
pop
add
push
inc
sub
enterw
push
lahf
fdiv
mov
jne
xor
int3
andb
mov
sub
mov
sub
or
jne
and
adc
and
int
sub
mov
fdiv
out
add
out
xchg
popf
xor
cmp
icebp
xchg
roll
adc
lods
or
mov
adc
stos
icebp
loop
add
and
test
sub
mov
addl
or
loop
icebp
es
mov
add
sbbl
les
pop
push
push
cmp
sub
and
xchg
test
cmpsb
sahf
das
int
negl
mov
add
xor
mov
cmpsb
scas
aaa
add
add
cmc
enter
rcr
jp
sub
xchg
int
mov
xchg
fs
xor
xor
aad
or
mov
adc
inc
lods
mulb
dec
dec
mov
sub
xor
mov
int
ja
imul
stos
ja
cmpl
add
add
adc
orl
dec
adc
daa
in
test
jge
mov
fs
or
inc
leave
adc
xchg
push
sub
sbb
and
lcall
add
sub
adc
xchg
mov
ja
xchg
mov
and
dec
add
addb
mov
inc
xor
test
addr16
adcb
rol
jge
push
aad
incl
xor
mov
mov
scas
or
mov
adc
mov
cmpsb
dec
push
stos
mov
and
jae
out
pushf
inc
sar
loop
and
pop
adc
je
mov
pop
mov
iret
outsl
pop
fidivs
arpl
mov
jb
cmc
and
xor
xor
pop
pusha
loop
insb
enter
int3
and
jnp
addb
sub
mov
push
push
mov
les
loopne
test
imul
ret
adc
and
push
or
or
add
jo,pn
dec
dec
or
xor
adc
cwtl
pop
sbb
cmpb
addb
add
loop
mov
pushf
cmpl
imul
dec
or
inc
and
orb
data16
mov
and
pusha
subl
or
aam
dec
push
pop
mov
fdivrp
es
cmp
mov
dec
push
mov
test
cmc
movsb
push
inc
and
int3
shrb
andb
or
xchg
push
push
mov
add
add
mov
jo
jbe
repnz
gs
ljmp
mov
sub
inc
and
adc
adc
stos
stos
and
xchg
mov
ror
xchg
aam
aam
jmp
cli
lock
fistps
pcmpeqb
fdivp
xchg
push
add
icebp
aaa
xor
jg
lcall
adc
pusha
or
mov
and
mov
mov
dec
popl
add
out
pop
in
xchg
xchg
ljmp
add
cmp
push
dec
pop
jge
insl
and
jle
dec
push
push
adc
imul
xor
inc
sbb
clc
inc
jle
lret
cld
movsb
and
mov
and
loop
inc
sub
es
daa
bound
loop
inc
adc
ret
adc
stos
aaa
sti
sub
mov
pop
pop
mov
dec
fs
stc
inc
adc
cmp
stos
add
lock
iret
adc
adc
std
pop
sub
mov
mov
addr16
inc
dec
inc
or
xchg
dec
fstpl
inc
mov
adc
or
xor
bound
adc
and
hlt
ljmp
xchg
test
dec
add
aad
push
add
sub
out
mov
inc
mov
subb
das
pop
inc
mov
cmovl
sti
xor
jmp
clc
subl
add
add
and
bound
testl
dec
dec
fimull
sbb
shrl
leave
push
pop
mov
dec
sub
xor
push
push
mov
or
inc
inc
shr
sub
je
shlb
stos
movsb
mov
int3
iret
inc
gs
sbb
jb
push
out
jo
push
aaa
xor
and
jo
adc
lcall
push
pusha
push
or
sbb
enter
xor
cmp
aaa
jecxz
and
les
cwtl
mov
cmpsl
loop
add
jae
aad
addl
roll
sub
sub
mov
test
sub
or
mov
int
jge
inc
cmp
add
lret
push
add
xorb
pop
and
addr16
xchg
cmp
xor
dec
or
inc
mov
adc
push
pop
pop
lahf
movsb
dec
xchg
sub
xor
xchg
rolb
pop
bound
or
dec
out
cltd
cmc
jl
cmp
jecxz
std
into
iret
jl
mov
outsb
jnp
fcmovnbe
mov
loop
jnp
je
xor
sub
add
or
sarb
jae
xchg
pop
shl
and
xchg
dec
rclb
sbb
pop
inc
cwtl
movsl
fwait
out
fdivrs
fimuls
popf
mov
gs
scas
xlat
out
movhps
out
insb
cwtl
dec
out
lret
cmpsl
dec
jge
sbb
inc
mov
pushf
add
xchg
add
push
add
inc
push
sahf
xor
and
push
mov
mov
add
xor
inc
xchg
notl
icebp
int
inc
dec
xchg
cwtl
mov
rolb
inc
add
test
sbb
adc
adc
inc
les
xchg
popa
loop
adc
jo
adc
adc
pop
xchg
cmpps
mov
sub
xchg
into
mov
lods
nop
or
andb
or
push
pop
jns
orl
orb
mov
add
sbb
addb
or
xchg
pop
add
fcmovnu
mov
adc
dec
adc
pop
leave
and
jae
rcll
sbb
test
dec
jbe
das
es
daa
icebp
test
cmp
icebp
add
add
les
mov
rorl
sub
lea
movsb
enter
addr16
cli
je
loope
lahf
in
xchg
xor
repz
mov
push
adc
leave
lea
daa
ja
inc
ret
fwait
mov
push
jbe
in
mov
fcomps
add
ret
mov
adc
and
add
pop
adc
les
adc
into
inc
gs
push
add
push
mov
lcall
xor
les
pop
pop
xchg
dec
xor
loopne
push
lods
or
jo
dec
push
adc
xor
or
add
repz
inc
rolb
stos
mov
mov
data16
add
test
sub
add
and
adc
dec
js
pop
xchg
add
cmp
scas
fucom
or
sub
push
mov
dec
test
adc
cmp
aas
scas
add
and
rcrb
dec
test
and
adc
mov
pop
jl
push
ficomps
std
cmpsl
jnp
mov
repz
jg
adcl
sahf
outsb
pushf
inc
test
fdivrp
or
orps
inc
push
ljmp
aas
or
mov
xchg
mov
lods
adc
mov
sbb
jno
mov
icebp
mov
xchg
ljmp
test
je
fimuls
sub
in
add
add
out
scas
pop
sar
in
test
cmp
cmpl
int
push
jae
or
push
jecxz
pop
sbb
cmp
mov
mov
rorb
sub
xor
cltd
push
mov
or
pop
sbb
int
cmp
inc
test
jmp
jne
rorb
mov
adc
push
inc
sbb
in
int3
or
xchg
mov
jo
idivl
popa
or
xchg
aam
rolb
inc
loope
mov
lahf
orl
jmp
inc
lods
sbbb
add
lods
outsl
mov
adc
and
mov
das
add
xorl
sets
insb
lods
pop
cmp
mov
push
stos
xor
insb
mov
jo
subl
pop
xlat
pop
in
sbb
outsl
fdiv
hlt
fsubs
jmp
pop
or
cmp
pop
mov
scas
cmpsl
add
loope
out
pop
jg
in
std
pop
cmp
aas
push
repz
add
stos
push
inc
add
ds
mov
dec
loope
std
pop
adc
mov
xor
xor
jae
jno
sbb
scas
std
jnp
lret
jnp
scas
in
aas
jl
ret
repnz
jle
pop
bound
or
or
push
jae
add
inc
pop
andl
das
sub
jmp
mov
pop
ds
sub
cmp
icebp
cmp
sbb
rol
cltd
int3
loop,pt
dec
or
fmuls
adc
adc
test
pop
add
dec
mov
mov
jnp
mov
mov
mov
loop
pop
jns
sbbb
xchg
lods
xchg
stos
xor
aad
and
loope
adc
inc
ret
sub
mov
and
mov
bound
adc
sti
and
adc
rclb
dec
jbe
lret
bound
add
mov
lea
incb
mov
jp
adc
mov
lock
fwait
mulb
mov
dec
andb
js
pop
mov
pushf
lret
xchg
and
xchg
sbb
jle
addr16
fdiv
jnp
rcll
ret
mov
js
or
pmuludq
adc
movsl
cmp
adc
and
sbb
repnz
aaa
add
adc
add
aaa
cld
jecxz
and
sti
outsl
cmp
fmull
ficompl
in
cwtl
pop
hlt
pop
adc
or
add
add
pop
add
pop
mov
inc
pushf
aaa
outsb
push
imul
inc
cmpsb
sbb
add
or
mov
or
movsl
and
sub
sbb
cwtl
ret
dec
push
xorb
sub
push
push
fyl2xp1
pop
cwtl
dec
add
inc
sub
cmpsl
cs
cmp
xchg
inc
cli
mov
ret
into
out
push
xchg
dec
dec
cmp
add
pop
fs
mov
adc
sub
movsb
sub
sub
pop
into
aaa
inc
loope
adc
lods
dec
xor
movsb
adc
movsb
sub
out
mov
fstl
and
sub
stc
pop
fcomip
inc
mov
inc
mov
pop
sti
pop
pmaxub
dec
ja
pop
jae
mov
xchg
xchg
sub
xchg
sbb
in
sti
jle
dec
cmc
mov
iret
cwtl
cmpsb
jmp
add
inc
sub
add
jb
or
jle
add
dec
jle
jle
pop
test
mov
je
pop
jg
fs
popa
icebp
loopne
mov
fwait
pop
repnz
jle
lret
pop
add
pusha
sub
dec
jo
fcmovb
mov
adc
inc
nop
bound
sub
push
add
movsb
dec
stos
ljmp
push
pop
xor
push
push
test
inc
inc
jae
pop
mov
xor
push
cmp
subb
bound
jo
ljmp
or
movsl
insb
mov
push
or
inc
sbb
push
lahf
or
int3
pushf
xor
xchg
cltd
or
adc
adc
add
in
jb
cld
cmp
push
movsb
jo
inc
out
insl
mov
pusha
stos
sub
movsl
sub
mov
add
pop
in
stos
sbb
gs
lcall
mov
sub
jp
cmp
lods
lret
stc
icebp
lea
xchg
movsb
xor
std
repz
icebp
add
mov
roll
fiaddl
leave
xchg
sbb
sti
jmp
dec
add
push
sbb
xchg
mov
mov
jmp
xlat
fstpl
mov
jnp
sahf
pop
mov
sbbl
mov
nop
sbb
bound
push
test
mov
xor
adc
push
popa
push
mov
add
cltd
sahf
add
mov
and
cmp
push
inc
enter
or
jo
les
dec
outsl
addb
stc
ljmp
dec
and
pop
lahf
or
jbe
dec
in
sbb
pushf
add
fstps
dec
aam
ss
popa
lret
mov
cmc
dec
sub
pop
fwait
sub
popa
loopne
cltd
push
inc
andb
push
xor
idiv
repnz
aad
push
sub
das
femms
jle
clc
push
jno
cltd
dec
cld
incb
insb
inc
mov
shlb
test
or
cs
jg
xor
fbstp
add
ljmp
adc
xchg
inc
xchg
mov
lahf
lret
in
rsqrtps
add
dec
hlt
push
mov
cli
or
sti
pandn
cld
incb
popa
jno
sar
fcoml
sbb
std
adc
inc
fdivs
sbb
cs
sub
lods
pop
mov
mov
std
mov
push
mov
dec
je
and
mov
fsubrs
push
cmpsb
pop
rcrb
repz
mov
addl
sbb
mov
xchg
repz
inc
push
bound
out
nop
xor
cltd
push
xchg
adc
into
mov
dec
mov
xor
or
xchg
orb
loopne
outsl
dec
jp
cmp
leave
test
dec
push
ss
xor
je
out
sbb
cmp
loop
pop
cmp
fyl2x
cltd
lahf
push
lds
imul
pushf
int
lods
iret
jne
xor
js
mov
adc
jns
mov
add
movsb
aas
cli
sti
pop
lret
jp
call
mov
into
xchg
fdivrl
loope
lods
sti
out
fdivl
leave
push
repz
aaa
sbb
jae
mov
xchg
jp
push
test
xor
in
daa
lea
hlt
movsl
push
fldcw
inc
sub
movsl
mov
sbb
idivb
push
inc
and
cmp
aad
pop
and
and
gs
add
test
out
fsubrp
shlb
mov
clc
leave
int3
lods
push
scas
fsub
inc
adc
xor
adc
mov
imul
ror
cmp
sbb
negl
les
cld
xor
loopne
sub
insb
mov
cmp
push
outsl
fwait
xlat
and
inc
xchg
int3
cli
fistpll
pop
sub
in
push
mov
out
cld
das
or
bound
xchg
outsb
mov
dec
inc
jae
mov
pop
mov
int
loopne
mov
dec
ds
and
push
xchg
mov
xchg
out
jmp
sub
inc
pop
inc
cmp
mov
fcomip
ficoml
divl
fistps
into
das
out
cmp
shl
mov
push
pop
cmp
or
popa
sbb
dec
sbb
add
xchg
jb
push
pusha
cmp
inc
mov
sbb
je
sub
sbb
pop
pop
adc
daa
or
or
pop
js
or
mov
or
xchg
pop
add
leave
les
and
inc
int3
or
or
xchg
xchg
div
add
aaa
dec
jmp
mov
arpl
lds
xor
xchg
addb
mov
mov
pusha
lods
mov
cli
sahf
jmp
ja
push
mov
mov
aas
sbb
scas
aaa
jne
das
pushf
cmovb
add
and
push
cmp
push
mov
adc
jb
fbstp
mov
mov
jle
pop
pop
ljmp
or
sti
push
pop
adc
mov
pop
sub
je
out
push
or
test
movaps
dec
add
repnz
xor
add
xor
pusha
adc
cwtl
sbb
push
push
adcb
in
pop
mov
loopne
outsl
jmp
rolb
jmp
xor
mov
and
out
aas
jo
sarb
sub
mov
adc
or
pop
and
or
ja
repz
mov
mov
stc
rorb
jmp
iret
add
lea
inc
add
add
sahf
cld
enter
and
test
mov
sub
pop
cli
lcall
inc
sub
cwtl
fstpt
movsl
aaa
in
fnsave
cmp
cmp
das
gs
pushf
dec
xchg
sbb
sub
clc
jns
inc
push
cs
jno
sub
pop
push
jno
push
mov
nop
ljmp
mov
inc
and
xor
pop
cmpsl
movb
add
pop
fwait
push
add
hlt
dec
mov
iret
cltd
faddp
dec
sahf
dec
in
rcrl
aam
into
lock
mov
lods
pop
sub
sub
lea
mov
or
or
or
mov
jns
aad
icebp
scas
and
dec
dec
insb
daa
jp
jle
insl
lods
inc
mov
inc
jp
sub
cmc
into
jg
mov
and
adc
pop
mov
bound
loope
fnsave
divb
mov
popf
sti
mov
xchg
fnstsw
ja
or
outsl
jns
lds
jno
inc
mov
pop
daa
adc
pop
or
in
loope
sub
mov
pop
add
xchg
mov
sbb
int3
test
jns
or
sbb
jnp
testl
cmp
mov
jne
scas
mov
lcall
les
mov
cltd
test
loopne
jge
int
loopne
cmpsl
mov
sub
in
push
je
loope
mov
mov
mov
dec
hlt
ss
cmp
xor
push
popa
dec
test
or
ja
movsl
bound
adc
in
aaa
mov
cmpl
cli
sub
jl
mov
add
in
fwait
in
and
ret
mov
addr16
ss
insb
in
mov
enter
dec
cmc
adc
mov
sti
outsl
mov
push
mov
fbld
out
ds
stos
mov
das
mov
stos
mov
push
aad
mov
lods
push
sarb
jge
xor
shlb
dec
and
add
xchg
push
test
movsb
enter
and
mov
or
outsb
cmp
jg
int
out
mov
pop
fnstenv
sahf
sbb
mov
cmp
cltd
iret
rorb
aaa
cs
add
xor
neg
inc
cs
lret
add
pop
in
loopne
inc
mov
pushf
loop
sti
pop
std
xchg
jle
jg
sub
jg
ja
dec
loop
jl
repnz
stc
ror
stc
lret
lods
mov
mov
mov
jnp
es
rorb
sbb
movsb
sub
mov
scas
das
add
into
mov
out
fdivl
in
jbe
sbb
cwtl
fstpt
lods
jmp
outsb
popa
iret
dec
outsb
jb,pt
mov
divl
dec
mov
xor
daa
aad
or
int3
add
test
clc
jmp
aas
mov
mov
popa
outsl
jle
mov
jg
iret
shll
je
pop
mov
adc
pop
inc
insl
imul
pop
rorl
data16
pushf
jmp
jle
rcrl
mov
fldcw
or
gs
add
and
movsbl
pop
mov
pop
mov
xchg
sub
cmp
repnz
std
sub
push
add
pop
xchg
cmp
mov
call
stc
or
cld
pop
push
std
in
cmc
cmp
push
stos
jecxz
fidivrl
mov
cltd
negl
add
cli
mov
out
shlb
das
mov
loopne
pop
clc
cmp
or
outsl
pop
jl
sbb
cmpsb
subl
test
xchg
das
cld
fdivs
lods
mov
insb
insl
jle
js
pushl
push
es
lea
lret
ret
ljmp
in
cmp
scas
lahf
cmp
sub
sbb
xchg
and
imul
fdivs
aas
dec
lcall
pop
insb
arpl
lock
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
inc
aas
jecxz
sub
xchg
dec
stc
add
add
add
dec
inc
scas
inc
pusha
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
push
add
lcall
lret
add
mov
add
test
jo
fstpt
lret
jns
add
jg
add
add
adc
add
mov
add
incl
push
xchg
incl
sub
in
add
mov
add
movsb
incl
dec
xchg
leave
add
lds
pop
popf
fildl
pop
mov
roll
pop
movsb
loope
push
cmpsb
cli
add
mov
lods
add
mov
addl
out
xchg
add
enter
lret
movsl
add
int
add
shrl
add
fdivs
add
fstpt
cld
jecxz
add
sar
add
leave
lret
out
add
out
add
jmp
aad
fucomp
std
add
repnz
incl
push
add
add
add
add
add
add
add
push
add
daa
es
and
and
daa
add
sub
and
sbb
sbb
add
sub
pop
adc
or
or
pop
and
add
and
or
adc
pi2fw
add
push
or
adc
xor
or
add
xor
or
adc
ljmp
adc
or
add
xor
push
movups
pushl
push
or
add
adc
movups
pushl
push
or
add
pop
push
movups
ljmp
and
add
das
or
adc
xor
or
xor
or
adc
ud2
push
or
add
xor
sbb
push
push
push
push
or
add
sub
sub
sbb
adc
push
and
and
add
xor
xor
xor
xor
xor
sub
sub
add
add
add
add
add
add
add
add
push
sub
add
sbb
add
xor
add
add
or
add
add
inc
add
add
add
add
add
add
add
add
xchg
push
add
pushf
pop
add
movsb
jp
ret
add
movsl
push
add
lods
js
shrb
incl
add
add
pop
cli
add
repnz
insb
cmc
add
push
hlt
add
jno
add
jl
add
push
add
insl
icebp
add
je
add
jnp
add
jnp
add
add
mov
add
incl
or
incl
adc
std
add
xchg
incl
sbb
mov
add
xor
daa
xor
sub
testb
mov
add
mov
add
std
add
mov
add
testl
dec
xchg
leave
add
lds
inc
nop
xlat
add
enter
cmc
add
cmc
add
testl
gs
xchg
xchg
add
mov
mov
add
scas
xchg
iret
mov
add
mov
add
mov
add
mov
add
mov
xchg
add
mov
xchg
add
mov
cltd
add
rcrl
leave
cwtl
add
ret
mov
add
leave
cmpsb
add
lret
int
cmpsb
add
fldcw
add
int
add
sarl
add
shrl
add
shlb
add
aad
add
fnstenv
add
fdivs
add
aam
add
xlat
mov
add
fidivrl
add
fstpt
mov
add
mov
int3
add
lret
mov
cli
add
fcmovb
add
in
add
in
add
out
add
out
add
jmp
rolb
out
out
add
jmp
rolb
icebp
jmp
cli
add
call
std
add
out
loop
out
incb
icebp
idiv
add
clc
std
add
clc
clc
add
cld
incb
incb
incl
add
dec
inc
inc
inc
inc
add
add
dec
dec
inc
inc
dec
dec
dec
dec
dec
push
pop
add
or
add
inc
inc
inc
inc
inc
dec
dec
push
pop
pop
pop
push
push
pop
push
push
push
pop
add
pop
add
jnp
pop
arpl
inc
inc
inc
inc
push
dec
push
pop
push
push
pop
add
je
dec
arpl
sbb
push
inc
dec
push
pop
pop
pop
add
je
dec
pop
jnp
push
push
or
bndldx
push
push
push
aaa
inc
push
pop
data16
jbe
dec
pop
jl
push
or
push
sbb
push
push
aaa
push
push
add
je
dec
pop
jp
push
adc
jle
push
nopl
adc
add
dec
arpl
nopl
jge
push
adc
adc
inc
push
add
je
dec
arpl
adc
jle
incl
adc
add
dec
arpl
adc
incl
dec
add
add
dec
pop
xor
adc
jle
incl
add
je
dec
pop
xor
incl
add
add
dec
pop
cmp
jge
adc
pop
dec
add
jbe
dec
arpl
and
jle
incl
cs
jbe
dec
arpl
and
jle
pushl
adc
sub
add
dec
arpl
and
jle
adc
inc
je
data16
add
jl
and
insl
outsl
sub
sub
je
add
dec
push
js
and
and
xor
daa
cmp
push
imul
je
inc
push
js
push
inc
xor
es
ss
pop
data16
jbe
dec
push
js
push
jb
inc
inc
xor
inc
dec
pop
pushaw
pop
je
add
dec
dec
jnp
push
pushaw
pusha
pusha
pusha
pusha
pusha
pop
imul
add
or
inc
or
or
or
or
or
or
or
or
or
cld
pop
add
add
add
add
add
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
push
add
pushf
pop
add
lcall
mov
mov
push
add
sahf
pop
add
lahf
insl
add
movsl
push
add
movsb
jbe
leave
lods
jg
enter
shlb
repnz
insb
cmc
add
push
stc
add
jl
add
push
add
jg
add
jno
add
jnp
add
jnp
add
xlat
add
add
xor
sbb
std
add
mov
add
mov
add
xor
daa
xor
sub
testb
mov
add
mov
add
nop
testl
and
clc
add
cwtl
cld
add
adc
push
mov
add
xlat
add
enter
in
add
add
loope
inc
cltd
testl
gs
movsl
testl
jp
testl
test
mov
mov
mov
lods
add
scas
xchg
lds
mov
lret
add
mov
add
mov
xchg
add
mov
xchg
add
mov
pushf
add
lds
fadd
mov
add
lds
add
mov
add
sarl
add
lret
movsl
add
int
add
shll
add
shrl
add
fsubrs
add
shlb
add
aad
add
fdivs
add
fidivl
loope
mov
add
fdivrs
add
fdivrl
add
fnsave
lock
add
loopne
add
jecxz
add
mov
testl
xchg
cli
add
lret
fcmovb
add
fcompp
add
loop
add
loop
add
out
add
out
add
jmp
fadds
ret
add
in
std
add
repnz
incb
incl
add
dec
dec
dec
dec
dec
adc
add
dec
dec
dec
push
push
push
push
push
push
push
pop
add
dec
dec
dec
dec
dec
dec
push
push
push
push
pop
pop
push
push
push
bound
pop
pop
pop
add
dec
dec
add
add
add
adc
push
jbe
js
imul
popa
add
jbe
add
add
add
push
xchg
push
sbbb
adc
and
bound
push
jbe
add
add
add
push
xchg
jg
sbb
sbb
sbb
bound
or
imul
add
push
xchg
adc
adc
push
jbe
add
add
add
push
push
xchg
mov
adc
sbb
dec
dec
bound
or
add
add
add
push
insl
xchg
adc
inc
jnp
adc
xor
imul
add
add
push
andw
inc
decl
sbb
or
jne
add
add
add
push
insl
jns
sub
jle
adc
adc
dec
jne
jne
jbe
add
add
add
push
insl
cmp
sub
inc
incl
adc
dec
popa
or
imul
add
push
sbb
sub
inc
ds
dec
arpl
jbe
jbe
add
add
add
push
pop
sbb
incl
pop
dec
arpl
jne
jne
add
add
add
push
insl
ss
jp
decl
dec
arpl
jbe
jne
add
add
add
push
insl
cmp
jge
pop
sub
cmp
add
jbe
add
add
add
push
orb
das
jp
decl
sub
or
imul
add
push
insl
xorl
das
jge
jge
sub
bound
jne
jbe
add
add
add
push
xchg
es
decl
sub
push
js
add
jne
add
add
add
push
push
test
xor
cmp
das
xor
xor
sub
js
add
jne
add
add
add
push
pop
test
inc
sub
xor
inc
dec
imul
jne
add
add
add
push
push
test
jo
and
daa
and
aaa
cmp
jo
jne
je
jne
jbe
add
add
add
push
push
andl
jo
dec
dec
push
dec
push
push
data16
jne
ja
or
jbe
add
add
add
push
push
xorb
imul
jne
ja
ja
ja
add
or
add
add
add
add
or
or
or
push
push
push
add
add
add
or
add
add
inc
inc
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
loopne
add
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
scas
jg
add
mov
add
xchg
aas
add
cwtl
xor
ret
add
mov
inc
add
pushf
dec
add
popf
dec
add
test
pop
add
lods
push
add
scas
pop
add
mov
add
mov
popa
add
mov
add
mov
add
scas
jo
shlb
jbe
aam
je
fidivrl
ja
xlat
mov
js
fstpt
repnz
insb
cmc
add
push
stc
add
jl
add
push
add
insl
icebp
add
je
add
jnp
add
jnp
add
xor
sbb
std
add
xchg
incl
cmp
xor
daa
xor
sub
testb
mov
add
cmp
and
std
add
mov
add
nop
testl
and
clc
add
cwtl
cld
add
popf
fildl
insl
mov
in
add
add
loope
dec
test
add
cmc
add
testl
gs
ja
out
movsl
testl
jp
testl
scas
mov
add
scas
xchg
sarb
mov
lret
add
mov
stos
add
roll
ffree
mov
aad
pushf
add
lds
out
rolb
add
lret
loope
cltd
add
int
add
iret
sahf
add
leave
cmpsb
add
mov
lret
add
int
add
lret
movsl
add
int
add
shll
add
shrl
add
xlat
test
add
shlb
add
fidivl
add
fdivl
add
fdivrl
add
fnsave
repnz
add
jecxz
add
mov
add
test
out
mov
clc
add
ror
xchg
cli
add
sar
add
lret
lret
loop
add
loop
add
in
add
in
add
jecxz
add
in
add
in
add
out
add
out
add
out
add
call
leave
add
jmp
rolb
repz
ret
add
call
out
clc
lock
out
incb
icebp
idiv
add
clc
std
add
cld
incb
incb
incl
push
push
sbb
adc
add
add
push
push
push
push
sbb
pop
pop
push
js
pop
add
pop
push
push
push
adc
pop
bound
bound
imul
or
push
push
push
adc
pop
pop
bound
insb
imul
pop
pop
bound
push
pop
ja
add
add
sbb
pop
pop
bound
insb
insb
insb
insb
push
bound
bound
bound
bound
pop
pop
js
pop
js
add
or
add
jb
jne
jb
insb
push
bound
outsb
outsb
outsb
insb
push
imul
pop
pop
ja
pop
js
adc
adc
xchg
cwtl
insb
pop
outsb
jb
jns
outsl
jge
dec
jg
mov
bound
imul
or
push
nop
add
add
jne
xchg
xchg
pop
bound
jp
dec
inc
sub
and
sub
jl
push
insb
push
imul
add
nop
push
add
adc
xchg
xchg
pop
pop
nop
jb
and
es
and
dec
andl
push
imul
push
nop
push
add
adc
xchg
xchg
pop
push
inc
sub
daa
daa
es
inc
jl
sbb
imul
add
jb
xchg
xchg
outsb
addr16
sub
push
push
and
daa
es
es
jl
pop
insb
push
jns
pop
ja
sbb
add
add
add
add
jne
xchg
xchg
jb
sub
daa
sbbb
daa
daa
es
sbbl
imul
nop
or
add
jb
xchg
xchg
jge
sub
dec
lcall
daa
daa
daa
daa
es
gs
push
nop
or
sbb
add
add
add
add
jne
xchg
jne
sub
pop
cmp
incl
daa
daa
daa
daa
daa
sub
or
sbb
add
add
add
add
jne
nop
jnp
sub
pop
test
lcall
sub
daa
daa
sub
pop
push
or
sbb
add
add
add
add
js
js
sub
sub
test
incl
sub
sub
or
sbb
add
add
add
add
jbe
and
xor
pop
test
lcall
daa
sub
dec
push
pop
nop
or
sbb
add
add
add
add
nop
xchg
jnp
xor
xor
test
incl
daa
inc
sbb
pop
ja
sbb
add
add
add
add
mov
xor
test
jmp
mov
nop
or
sbb
add
add
add
add
nop
nop
xor
xor
and
decl
sub
sbbl
or
sbb
add
add
add
add
xchg
nop
xor
xor
and
decl
sub
sbbl
or
sbb
add
add
add
add
xchg
nop
xor
incl
mov
nop
or
sbb
add
add
add
add
xchg
xchg
cmp
xchg
lcall
sub
adc
pop
jb
sbb
add
add
add
add
xchg
xchg
jnp
xor
incl
xor
dec
push
sbb
sbb
add
add
add
add
xchg
cltd
push
aaa
xor
lcall
xor
xor
adcb
or
sbb
add
add
add
add
xchg
popf
outsl
aaa
xor
lcall
xor
punpckldq
sbb
add
add
add
add
xchg
popf
xchg
dec
cmp
cmp
jmp
xor
dec
push
push
push
or
push
sbb
add
add
add
add
nop
cltd
cwtl
push
cmp
xor
xchg
xor
xor
bound
or
sbb
add
add
add
add
mov
cmp
aas
aas
xor
xor
pop
sbb
or
sbb
add
add
add
add
mov
cmp
dec
aas
cmp
cmp
xor
sbb
insl
jp
pop
ja
sbb
add
add
add
add
mov
cs
cmp
cmp
cmp
cmp
cmp
ja
insl
nop
or
sbb
add
add
add
add
jb
push
cmp
cmp
cmp
cmp
cmp
cmp
andl
ja
outsb
jp
pop
ja
sbb
add
add
add
add
insb
jb
push
aas
cs
cmp
inc
bound
ja
outsb
xchg
or
outsb
push
sbb
add
add
add
add
insb
insb
xchg
jne
dec
das
cs
cmp
cmp
cs
push
js
jb
xchg
or
outsb
push
sbb
add
add
add
add
insb
insb
xchg
xchg
jns
insb
push
dec
inc
xor
push
insb
jb
nop
jns
jns
js
ja
or
insb
push
sbb
add
add
add
add
insb
insb
xchg
nop
nop
outsb
jne
jne
js
jns
js
jns
jns
jns
jns
jns
or
push
adc
adc
add
mov
cltd
cltd
cltd
cltd
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
xchg
nop
nop
jns
jns
jne
xchg
or
addr16
movups
add
pop
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
bound
imul
mov
xchg
adc
add
bound
pop
pop
pop
pop
sbb
sbb
adc
adc
adc
or
incl
add
incl
add
push
jg
add
push
add
incl
add
clc
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
cld
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
addb
add
add
add
add
add
adc
add
add
add
add
add
add
add
jnp
add
test
add
xchg
add
cmp
add
mov
mov
inc
add
xchg
dec
add
nop
push
add
xchg
pop
add
xchg
movsb
mov
xchg
bound
mov
xchg
push
mov
insl
add
pushf
jb
mov
xchg
inc
add
xchg
dec
add
fwait
dec
add
pushf
push
add
sahf
pop
add
pushf
pop
add
movsb
pop
add
mov
pop
add
scas
push
add
mov
add
popf
fs
test
outsb
add
lods
imul
movsl
popa
add
test
add
stos
data16
scas
imul
les
jge
shrb
jb
shll
jle
loop
imul
mov
add
mov
jne
in
js
jmp
lds
sbb
add
data16
insb
icebp
add
jnp
add
stc
add
mov
add
mov
add
in
add
sub
xor
xchg
add
test
add
xchg
clc
add
xchg
testl
push
nop
leave
add
xlat
add
aad
imul
out
add
repz
hlt
add
repz
cli
add
clc
add
cli
add
testb
xchg
testb
xchg
hlt
add
add
hlt
add
add
stc
add
incl
push
in
add
out
add
in
add
add
cmc
add
cli
add
stc
add
mov
mov
movsl
mov
stos
mov
xchg
add
lods
lods
add
cmpsl
test
lds
mov
leave
scas
mov
int3
mov
add
mov
add
mov
lea
xlat
mov
mov
les
xchg
add
mov
add
mov
xchg
add
mov
cwtl
add
mov
mov
add
mov
mov
ffree
lea
fadd
xchg
add
ret
lcall
ret
jmp
leave
mov
repnz
jmp
lret
xchg
add
lret
xchg
add
lcall
int
add
int
add
rcrl
add
rcrb
add
fcomps
add
ret
mov
add
ret
fmul
lods
add
ret
fxch
mov
jecxz
movsb
add
into
mov
add
shlb
in
aam
add
fsubrs
add
xlat
mov
add
fldenv
add
fsubrs
in
mov
in
mov
in
mov
out
fnstenv
add
aad
add
fidivrl
clc
fidivs
add
fistpll
add
loopne
add
jecxz
add
ljmp
stos
fadds
xorb
cmpsb
mov
filds
mov
add
mov
repnz
lods
icebp
add
mov
add
fildl
mov
ret
xchg
cli
add
mov
aam
add
iret
cli
add
lds
fmul
movb
rol
add
aad
add
fadd
add
fadd
add
ror
add
fcmove
add
ffreep
add
loopne
add
jecxz
add
in
add
call
lret
out
add
jmp
rolb
out
fadds
cmc
out
add
jmp
add
in
roll
cli
out
fiaddl
lock
jmp
add
fdivr
add
loope
add
in
add
repnz
out
std
add
repz
add
idiv
add
idiv
add
clc
cld
add
incl
add
sbb
pop
sbb
add
push
push
push
push
pop
sbb
jnp
stos
mov
add
push
push
push
push
push
sbb
jnp
test
in
mov
test
push
adc
adc
add
add
push
push
push
push
bndldx
jns
test
in
loop
stos
stos
test
xchg
xchg
xchg
xchg
xchg
xchg
fwait
mov
or
jo
sub
sub
movlps
xor
out
loop
stos
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
or
jl
and
je
adc
add
adc
xor
loop
out
mov
xchg
mov
cwtl
cmpsl
cmpsl
cmpsl
cwtl
cmpsb
fwait
xchg
xchg
nop
nop
fwait
mov
pop
xchg
and
add
out
stos
mov
popf
mov
mov
lcall
fwait
fwait
fwait
popf
lcall
mov
add
mov
fwait
lea
out
int3
pop
pop
pop
pop
pusha
lret
cwtl
xchg
mov
mov
mov
scas
popf
scas
scas
mov
sub
or
cmp
cmp
mov
inc
aas
aas
aas
aas
aas
ds
inc
lret
scas
mov
mov
mov
mov
mov
das
add
add
mov
lea
ds
inc
inc
inc
inc
inc
inc
inc
inc
inc
ds
inc
enter
mov
mov
mov
call
xor
mov
cmp
lea
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ds
into
mov
mov
mov
cmp
mov
aaa
or
lods
cmp
add
mov
xchg
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ds
test
call
lea
loope
cmp
add
mov
lcall
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
rolb
mov
lea
stos
cwtl
cltd
adc
cmp
les
inc
inc
dec
fdivr
iret
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xlat
jbe
mov
adc
lea
add
mov
inc
inc
inc
inc
inc
fdivr
clc
push
inc
inc
inc
inc
inc
inc
inc
inc
aas
pop
fidivrs
mov
in
adc
xchg
sub
cmp
inc
inc
inc
inc
dec
sti
std
ficompl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
aas
sarb
mov
lods
cwtl
cltd
adc
mov
sub
cmp
lock
inc
inc
inc
pop
cld
cli
int3
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
movsb
js
mov
cwtl
cltd
adc
lods
cltd
sub
cmp
inc
inc
inc
inc
pop
cld
fistpl
inc
inc
inc
inc
inc
inc
inc
inc
enter
call
cltd
push
mov
cmp
dec
inc
dec
inc
pop
cld
cli
into
push
inc
inc
inc
inc
inc
inc
inc
aas
push
aaa
adc
cltd
sub
cmp
inc
inc
inc
inc
pop
cld
push
pusha
push
inc
inc
inc
inc
inc
inc
pop
movsb
js
in
adc
cltd
sub
cmp
icebp
ret
inc
dec
inc
inc
dec
inc
push
sti
aad
push
inc
inc
inc
inc
inc
fnstsw
mov
cmp
loope
cltd
sub
cmp
in
push
inc
dec
dec
dec
dec
inc
pop
cld
push
pusha
push
inc
inc
inc
inc
sarb
call
cmp
loope
cltd
sub
cmp
dec
inc
inc
dec
push
cld
pusha
dec
inc
inc
inc
enter
daa
adc
lods
cmp
add
in
push
inc
dec
dec
dec
dec
inc
pop
cld
call
dec
inc
inc
inc
lret
jle
call
cmp
loope
cmp
add
mov
dec
dec
dec
dec
push
cld
dec
dec
inc
inc
inc
sarl
jmp
adc
lods
cmp
add
mov
dec
dec
dec
inc
pop
cld
ficoml
dec
inc
dec
sarb
jmp
or
loope
cmp
add
call
dec
dec
dec
dec
popa
cli
iret
pop
inc
dec
inc
inc
dec
leave
and
daa
adc
call
add
add
shr
inc
dec
dec
dec
dec
dec
pop
cld
fsubl
inc
inc
inc
dec
inc
push
frstor
loop
cmp
loope
cmp
add
shl
inc
dec
dec
dec
dec
dec
popa
sti
iret
pop
dec
dec
dec
dec
dec
inc
inc
daa
adc
sarb
add
mov
dec
dec
dec
dec
popa
std
fsubl
dec
dec
dec
dec
inc
dec
dec
inc
movsl
mov
mov
mov
add
add
mov
dec
dec
dec
dec
popa
std
sti
iret
popa
push
dec
dec
dec
dec
dec
dec
inc
inc
cmc
mov
in
jmp
adc
mov
add
add
shl
jno
dec
dec
dec
dec
std
push
addr16
dec
dec
dec
dec
dec
dec
dec
dec
dec
popa
fcmovu
mov
in
jmp
adc
lods
cmp
add
mov
dec
dec
dec
dec
popa
std
sti
aad
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
addr16
call
cmp
mov
cmp
inc
dec
dec
dec
popa
std
clc
bound
dec
dec
dec
dec
dec
dec
dec
dec
bound
aam
movsl
call
adc
mov
add
add
stos
dec
dec
dec
dec
dec
cli
aam
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
bound
mov
call
adc
mov
and
cmpsl
in
repz
repz
dec
dec
popa
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popa
imul
mov
out
adc
lods
cmp
add
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popa
bound
addr16
movsl
movsl
jmp
in
call
mov
lods
cmp
add
repz
jae
dec
push
dec
dec
push
popa
bound
imul
fisubl
jmp
adc
mov
add
add
jmp
ret
lds
push
imul
bound
fdivs
call
adc
lods
cmp
add
in
scas
mov
arpl
arpl
arpl
imul
call
mov
mov
lods
cmp
add
call
icebp
mov
arpl
addr16
fucom
mov
jmp
jmp
cmpsl
cltd
push
mov
cmp
add
in
scas
mov
mov
mov
fucom
mov
call
mov
in
daa
adc
mov
add
add
call
jmp
ret
ret
ret
ret
mov
mov
aaa
and
mov
add
add
stc
lock
in
jmp
call
shr
call
mov
jmp
lods
and
sarb
add
ss
mov
mov
test
mov
mov
out
in
in
jmp
in
in
rcrb
stos
test
mov
mov
mov
add
clc
ud0
cld
add
incb
add
jg
incl
add
add
incl
pop
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
pop
incl
add
add
jg
inc
add
ljmp
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xchg
xchg
mov
mov
mov
js
jae
mov
out
mov
mov
mov
mov
xchg
mov
mov
jnp
push
mov
clc
fwait
xchg
mov
fwait
lcall
idivl
mov
mov
js
clc
mov
clc
mov
outsb
jle
js
add
add
add
add
add
add
add
add
add
add
add
and
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
mov
mov
mov
mov
mov
js
mov
xchg
mov
mov
xchg
mov
fwait
clc
fwait
cltd
mov
mov
mov
mov
decl
mov
jns
xchg
sti
xchg
mov
stc
mov
xchg
clc
mov
mov
mov
mov
mov
testl
mov
mov
xchg
mov
mov
mov
cltd
mov
mov
call
mov
clc
mov
mov
mov
out
jle
jle
add
cld
pop
add
add
add
add
add
incl
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
mov
xchg
add
add
mov
mov
add
add
mov
mov
add
mov
mov
mov
add
call
fwait
xchg
cwtl
mov
add
mov
xchg
mov
mov
mov
mov
cwtl
mov
add
mov
mov
stc
mov
decl
xchg
sbbl
jnp
xchg
mov
clc
cltd
mov
add
call
pushl
add
add
decl
add
add
sti
fwait
js
testl
clc
fwait
xchg
js
mov
mov
mov
mov
add
mov
mov
xchg
clc
jnp
mov
xchg
mov
mov
xchg
clc
xchg
cwtl
mov
mov
mov
js
mov
add
call
mov
add
add
mov
mov
add
add
out
call
jle
xchg
add
inc
inc
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
rolb
xadd
add
loopne
add
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
jo
mov
mov
add
add
mov
mov
mov
add
add
add
mov
mov
mov
add
add
or
mov
mov
push
add
mov
mov
call
add
mov
clc
mov
mov
mov
outsb
xchg
add
add
call
mov
mov
mov
add
add
add
cmp
mov
out
add
add
add
decb
fwait
xchg
fwait
js
mov
testb
add
call
cltd
mov
mov
mov
xchg
add
add
mov
mov
mov
mov
mov
add
add
add
clc
mov
cwtl
mov
jnp
mov
add
add
mov
clc
mov
mov
testb
add
js
mov
clc
xchg
cwtl
cwtl
mov
call
add
out
clc
aaa
fwait
lahf
decl
mov
add
add
mov
decl
mov
add
add
clc
fwait
xchg
mov
mov
mov
xchg
add
add
mov
clc
fwait
fwait
mov
add
add
js
fwait
fwait
mov
decl
out
add
add
add
mov
mov
push
add
mov
mov
clc
mov
mov
add
add
js
cwtl
fwait
cwtl
decl
mov
add
add
add
idivl
decl
xchg
add
add
sti
xchg
mov
cwtl
mov
add
add
js
jnp
cwtl
clc
mov
xchg
fwait
cwtl
mov
add
add
out
jnp
lahf
mov
mov
mov
add
add
decl
fwait
mov
add
add
add
clc
divl
jns
mov
decb
add
add
clc
mov
fwait
mov
xchg
add
add
call
fwait
fwait
ja
mov
mov
mov
add
add
add
clc
call
mov
jnp
mov
xchg
add
add
call
mov
mov
testb
add
mov
fwait
mov
fwait
mov
mov
xchg
add
add
js
mov
clc
mov
clc
mov
testl
out
mov
mov
clc
clc
out
mov
mov
add
add
mov
clc
clc
clc
mov
add
add
mov
mov
mov
dec
add
out
mov
add
incl
add
incl
add
push
jg
add
push
add
incl
add
clc
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
cld
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
addb
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
pop
xchg
add
ja
ja
mov
mov
add
add
ja
jle
call
mov
jo
add
ja
ja
call
mov
mov
js
add
xchg
mov
mov
mov
pop
jle
mov
mov
call
mov
out
add
add
add
add
vpmacssdd
call
mov
mov
add
add
add
or
clc
mov
mov
mov
xchg
add
add
add
add
mov
cmp
mov
jle
jle
xchg
add
add
add
add
mov
cmp
cltd
mov
mov
add
add
add
add
mov
jns
xchg
xchg
jns
fwait
mov
mov
add
add
add
or
clc
mov
xchg
jns
jns
mov
mov
mov
add
add
add
mov
fwait
fwait
cwtl
fwait
mov
xchg
add
add
add
cwtl
lahf
clc
fwait
fwait
fwait
xchg
xchg
fwait
xchg
cwtl
mov
mov
or
clc
jns
mov
mov
mov
add
add
or
decl
fwait
fwait
mov
clc
xchg
add
add
add
add
ja
decl
xchg
cwtl
mov
mov
add
add
add
add
fwait
clc
mov
mov
xchg
mov
add
add
add
add
mov
clc
fwait
jns
cwtl
cwtl
mov
mov
add
add
add
add
popl
push
mov
mov
mov
add
add
add
or
decl
mov
mov
mov
add
add
or
clc
mov
mov
clc
out
add
add
add
add
jnp
jns
push
fwait
fwait
mov
mov
add
add
add
add
cmp
clc
mov
mov
call
add
add
or
clc
fwait
fwait
xchg
xchg
add
add
add
add
jnp
mov
decl
xchg
add
add
add
add
jnp
mov
clc
fwait
jnp
mov
out
add
add
add
add
mov
clc
mov
mov
mov
mov
add
add
add
add
popl
decl
clc
clc
mov
add
add
add
add
mov
decl
mov
mov
add
add
add
mov
clc
mov
mov
mov
push
idivl
cwtl
clc
mov
jnp
mov
mov
add
add
add
add
mov
mov
mov
jns
mov
clc
out
mov
add
add
add
mov
cmpl
fwait
jnp
jae
mov
mov
mov
add
add
push
clc
popl
mov
mov
jns
mov
mov
add
add
add
or
mov
mov
mov
out
call
add
add
add
or
clc
mov
cwtl
mov
mov
mov
out
add
add
add
add
mov
clc
mov
cwtl
mov
mov
add
add
add
or
mov
mov
clc
mov
mov
or
mov
mov
mov
mov
add
add
add
add
mov
mov
mov
add
add
add
or
clc
mov
mov
mov
xchg
add
add
add
clc
clc
mov
mov
mov
mov
add
add
add
decl
mov
mov
mov
add
add
add
call
call
mov
clc
mov
add
mov
call
call
add
add
clc
ud0
cld
add
incb
add
jg
incl
add
add
incl
pop
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
pop
incl
add
add
jg
inc
add
.byte
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
andl
pushl
pushl
mov
call
orl
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmpb
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmpl
jne
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
lea
push
pushl
call
pushl
call
mov
pushl
pushl
call
mov
push
push
push
pushl
pushl
pushl
push
push
pushl
call
pushl
pushl
call
pushl
call
lea
push
pushl
call
xor
jmp
pushl
pushl
pushl
pushl
call
pop
leave
ret
push
mov
push
andl
lea
push
pushl
call
call
cmp
jne
mov
cmp
je
pushl
call
andl
pushl
call
pushl
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
andl
xor
lea
stos
stos
stos
stos
stos
lea
push
push
pushl
call
movl
movl
movl
push
call
mov
push
call
push
call
mov
push
call
mov
mov
sub
cltd
sub
sar
mov
mov
sub
cltd
sub
sar
mov
mov
add
mov
mov
add
mov
movl
push
push
pushl
lea
push
call
push
push
push
push
mov
sub
push
mov
sub
push
pushl
pushl
pushl
push
push
push
call
mov
mov
mov
push
push
pushl
lea
push
call
test
je
mov
cmp
jne
cmpl
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
andl
jmp
mov
inc
mov
cmpl
jge
push
push
call
cmpl
jne
jmp
push
call
jmp
pushl
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
pushl
call
pop
mov
cmpl
je
push
push
pushl
push
push
push
call
push
call
push
pushl
call
leave
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
movl
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
call
mov
movl
movl
movl
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
push
add
add
je
js
add
add
add
add
push
add
adc
add
add
pusha
cs
je
add
add
add
add
pop
add
adc
add
inc
push
add
add
jb,pn
jb
add
add
add
add
jo
add
push
push
add
add
je
js
add
add
adc
add
nop
or
add
add
add
pop
add
add
jb,pn
popa
je
add
and
or
add
add
add
add
inc
add
loopne
fs
je
add
add
add
add
or
add
add
add
add
inc
add
loopne
add
xor
xor
call
pusha
call
roll
test
push
xchg
pop
push
xchg
sbb
xchg
in
imul
clc
notl
pop
and
lcall
mov
ret
dec
loopne
fwait
pop
sbb
sahf
repz
inc
jle
sahf
repz
jmp
jmp
jmp
call
jle
add
pop
xchg
add
mov
or
xor
movsb
std
mov
es
loopne
out
sbb
jmp
jmp
pop
push
inc
cmp
and
mov
push
int3
sub
outsb
in
or
std
pop
shl
mov
nop
mov
push
shll
dec
imul
stos
dec
jg
enter
sbb
jne
sub
enter
out
xchg
imul
mov
xchg
mov
sbbb
andb
adc
push
sbb
jmp
pusha
adcl
xchg
out
arpl
fiaddl
and
ret
imul
daa
jmp
scas
fcompl
out
inc
jo
adc
mov
pusha
jl
fsubl
iret
decb
aas
inc
fsubr
and
aas
imulb
cmp
and
push
dec
pushf
fneni(8087
mov
jecxz
add
xor
and
xchg
fld
gs
pop
nop
imul
mov
jns
xchg
sub
data16
and
jle
repz
aaa
pop
xlat
subl
lahf
into
pop
fdivl
push
cmp
push
xchg
addr16
in
mov
movsb
lock
arpl
aas
mov
fwait
out
iret
inc
aam
or
arpl
lods
mov
push
cwtl
mov
ret
pop
movsl
mov
cld
mov
mov
psubsw
jle
nop
aaa
and
mov
jbe
xor
shlb
bound
mov
popa
ficoms
mov
fcoml
mov
shll
add
dec
adc
inc
call
loopne
cmp
sub
and
dec
int
cli
leave
ficomps
fbld
add
loopne
push
clc
jae
xor
push
popf
pop
pcmpgtb
mov
inc
or
mov
pop
jle
aas
jg
xchg
inc
lcall
xor
mov
dec
or
subb
mov
shll
lahf
pop
mov
fdivs
inc
inc
aad
sbb
loop
sub
lret
and
xchg
mov
adc
mov
xchg
add
fidivrl
xor
js
out
scas
mov
ja
stos
xchg
roll
inc
jmp
mov
adc
in
bound
ret
sub
sub
shll
outsl
add
mov
stos
lods
jle
inc
cld
notl
push
in
mov
mov
out
movsb
xchg
into
clc
xor
xchg
pop
xchg
mov
xchg
inc
in
mov
jle
dec
xchg
add
cld
jmp
je
outsl
or
jo
outsl
in
mov
lods
mov
loopne
lahf
sbb
xchg
mov
pusha
mov
es
dec
mov
mov
dec
mov
fneni(8087
or
mov
shlb
jge
stos
sbb
sub
or
fistps
mov
mov
icebp
dec
push
mov
icebp
xor
cltd
adc
sbb
call
rorb
jno
les
adc
inc
mov
xchg
adc
fisubrl
cmp
jge
push
jae
lods
fsubs
sub
inc
sbb
out
mov
mov
jmp
fidivrs
je
clc
mov
add
cmp
fmuls
push
add
jg
aaa
lock
sub
dec
pusha
jnp
push
jo
outsl
pop
nop
daa
ret
jns
mov
push
testl
add
push
fs
inc
mov
mov
adc
es
mov
xchg
push
sbb
mov
inc
mov
jge
cltd
jno
dec
or
inc
mov
mov
jb
orl
sub
fstpl
mov
outsl
cmc
sub
mov
xor
pop
dec
or
xchg
push
mov
push
sub
ja
cmp
dec
xor
fs
or
rorb
mov
imul
mov
clc
adc
sarb
stc
mov
outsb
pop
imul
push
rcr
mov
jae
cwtl
jne
sbb
or
push
loop
xlat
mov
add
imul
adc
idiv
add
icebp
std
jle
inc
jp
xor
and
or
lret
neg
jb
push
test
out
sbb
adc
out
or
movsl
fadds
and
movsl
cmp
mov
sub
sbb
xchg
cmp
mov
loopne
shl
ja
fwait
sbb
xchg
pop
cmp
cmp
jg
lret
bound
scas
mov
dec
leave
xchg
jp
das
pop
mov
cmp
mov
loope
push
popl
insb
popf
dec
inc
arpl
pop
adc
sub
jns
out
dec
sbb
fnstenv
xchg
add
add
mov
lods
xor
insb
push
adc
repnz
aas
mov
ds
mov
sub
scas
movsb
adc
mov
insb
ss
std
adc
jp
imul
sub
out
xlat
addl
xlat
mov
fiadds
outsb
in
add
fimuls
pop
sarb
out
inc
mov
mov
jnp
jp
repnz
clc
test
push
xor
lods
movsb
jmp
mov
jnp
ret
aas
shl
das
fidivl
mov
movsl
dec
adc
mov
aas
xchg
cmpsb
xchg
int3
aad
adc
sub
push
test
subl
jle
jl
mov
push
push
jmp
inc
ja
movsl
cwtl
push
add
into
push
mov
into
adc
leave
mov
icebp
sbbb
mov
pop
lds
sahf
push
rcrl
mov
inc
mov
pop
cmc
roll
xor
test
sub
movsl
xchg
lahf
xor
sub
ret
xchg
jne
mov
lea
sar
mov
inc
lret
ret
mov
aam
popf
roll
ret
lahf
push
or
xchg
jmp
push
mov
xor
inc
into
cmp
dec
xchg
fs
jbe
jb
jne
jle
fwait
out
lds
leave
xchg
rolb
stos
xchg
movsb
xchg
mov
addr16
ss
push
cwtl
pushf
pop
insl
pop
push
icebp
mov
sub
les
mov
or
add
mov
jl
push
shrl
in
je
sbb
dec
inc
mov
cmpsb
lds
in
adc
lods
fsubrl
fcomip
sub
mov
mov
sub
push
hlt
loop
dec
fistl
pop
pop
lods
lret
jp
fscale
jb
dec
sub
cltd
mov
daa
and
movsl
mov
add
push
lods
xor
push
movsl
das
or
shl
push
dec
int3
or
mov
pop
inc
and
ss
pop
out
mov
mov
mov
jo
ss
imul
inc
insl
xor
mov
data16
fsubrs
or
sbb
sti
fidivl
fiadds
loope
pop
cmpsb
fdivs
out
insb
sub
mov
push
cmpsl
adc
lahf
push
jl
inc
pop
push
xchg
bound
pop
faddl
push
mov
fwait
test
sub
outsb
test
mov
repnz
je
jae
sbb
pop
mov
mov
ret
push
xchg
push
scas
in
lret
or
mov
mov
push
movsl
push
add
int3
test
call
xchg
jb
dec
out
les
mov
stc
push
testl
pusha
inc
push
icebp
push
adc
daa
xlat
cmpsb
and
jbe
das
fistpl
mov
notb
inc
and
jl
push
lret
or
mov
into
xchg
inc
ljmp
stc
lods
pop
pop
adc
bswap
push
loope
mov
add
and
jno
mov
mov
xor
test
or
push
pop
repz
pop
cmp
dec
sbb
add
loopne
nop
push
xor
dec
ret
daa
push
lods
and
xor
adc
xor
sbb
jns
inc
nop
push
add
icebp
lods
fadd
int
mov
ficomps
jne
js
rcl
into
adc
jmp
daa
lods
sbb
mov
fucomp
add
adc
add
push
push
lods
leave
outsl
ret
outsl
scas
rcrl
repz
jl
inc
movsb
mov
jno
lods
cli
addr16
outsb
out
fistpl
add
jnp
int3
es
insb
es
imul
cmp
insl
lahf
loope
outsb
mov
pop
sbb
dec
mov
mov
movsl
dec
sub
pop
pushf
mov
clc
loop
lea
sahf
jle
or
fstpt
into
jecxz
fiadds
mov
xchg
jecxz
jmp
push
aaa
dec
dec
popa
mov
xchg
cmp
shrl
jnp
out
or
cmp
add
xchg
push
add
sub
sahf
jmp
pop
cltd
xchg
mov
outsl
dec
ljmp
icebp
ficompl
stos
inc
cli
push
jnp
mov
test
pop
push
cmp
pushf
xor
incb
jae
ds
push
jno
jecxz
in
adc
xor
xorb
pop
jb
lahf
cmp
sub
mov
mov
mov
add
sbb
movsl
or
mov
std
js
insl
loop
jno
ss
popf
mov
sbb
pop
xchg
and
popa
cltd
mov
es
rolb
xchg
xor
xchg
sbb
bound
adc
cld
adc
cmp
cmp
xchg
mov
fwait
sbb
divb
jmp
xor
dec
movsb
addr16
jae
push
mov
sub
sti
loop
and
push
mov
sti
inc
pop
adc
sub
pusha
fildl
jb
fsubrs
sbb
inc
sbb
movsl
ljmp
orl
push
add
xchg
push
outsb
pusha
cwtl
and
mov
xchg
adcb
out
aaa
popl
movsb
out
jne
sbb
push
loopne
xor
in
mov
mov
add
or
cmpsb
xor
add
mov
scas
dec
pop
and
or
xchg
add
sbb
pop
lds
dec
adc
in
lcall
or
xor
xor
dec
lods
aam
ret
xor
cmp
xchg
lret
add
sbb
mov
push
test
cwtd
iret
pop
inc
jns
jo
movsb
jp
fisubrl
imul
out
push
loop
xchg
and
push
pop
sbb
lahf
sbb
mov
daa
test
mov
enter
mov
dec
pop
push
insb
loope
mov
mov
mov
leave
mov
jbe
or
dec
lods
pop
in
inc
in
ja
pop
ret
dec
jnp
cltd
roll
push
std
shlb
in
roll
out
shrb
mov
push
fsub
insl
je
pop
dec
inc
pop
repnz
xor
gs
insb
mov
push
adcb
pop
or
jg
push
in
mov
adc
fnstcw
mov
pop
pop
or
popa
dec
fistpl
pop
ja
adc
mov
shlb
jg
lcall
xchg
adc
sbb
mov
dec
xchg
js
stos
rcrl
xor
fisttpll
or
pop
pop
sbb
ljmp
test
jl
testb
insl
sub
mov
mov
mov
push
pop
rcrl
scas
jg
in
mov
aaa
aad
jns
dec
xchg
loop
shlb
hlt
icebp
scas
mov
sbb
out
xchg
adc
inc
sbb
es
cmpsl
sub
inc
xor
inc
xor
cmp
lock
aad
mov
ja
cmpsl
pop
mov
nop
outsb
inc
mov
cld
cmpsb
xorl
sbb
pop
xor
cmc
push
jl
test
sahf
gs
ljmp
ds
mov
sub
sub
pop
pop
pop
add
ss
mov
call
sub
int
in
int3
shll
aaa
mov
repz
add
js
dec
mov
xor
xlat
mov
loop
mov
js
cwtl
cmp
pop
fwait
rclb
mov
sarb
jmp
mov
iret
enter
pop
or
pop
js
cltd
test
jo
lods
repz
and
outsl
dec
cmp
fisttpl
xlat
test
cmp
mov
add
addb
pop
inc
mov
lods
daa
mov
rcrl
cmp
fwait
mov
sbb
daa
mov
movsl
nop
xchg
xchg
lret
add
push
pop
out
cld
es
imul
icebp
lock
mov
cmpsb
imul
mov
shr
push
jp
inc
add
insl
enter
sbb
xlat
es
sub
aaa
push
pop
pop
int
mov
ret
dec
fists
sub
jo
jne
push
jb
cld
ds
push
lcall
lods
lea
je
jo
mov
loopne
xorb
or
dec
lock
sar
out
or
loope
mov
mov
fidivrl
and
inc
push
sbb
mov
pushf
push
inc
mov
das
icebp
test
std
fisubs
aas
mov
lea
and
pushf
divl
xor
push
test
outsb
fwait
xchg
mov
mov
rcrl
popf
adc
insb
sub
mov
jmp
cmpsb
jnp
hlt
xchg
pop
das
cmp
jae
enter
dec
mov
stc
inc
mov
test
imul
loop
sbb
repnz
arpl
lcall
mov
dec
cs
dec
mov
push
shr
idivb
adc
ljmp
xor
fisubs
stos
xor
fwait
das
mov
push
sub
mov
sub
xor
add
popa
jmp
or
test
lods
repz
daa
cmp
out
xor
fsubl
mov
lds
add
sbb
das
sti
cmp
sbb
popf
das
out
mov
insb
call
push
adc
pop
aaa
shlb
jg
sub
sub
bnd
popa
clc
ljmp
sarb
cltd
popf
pop
fnsave
das
jmp
inc
mov
jle
push
stos
xchg
jo
imul
pop
jb
scas
xchg
push
push
shrb
jns
xchg
pop
imul
outsb
sahf
roll
aas
cmp
mov
fnstsw
jg
mov
js
mov
jp
sub
dec
adc
popl
addl
ficoms
lods
adc
stos
pop
loope
ret
mov
and
les
or
mov
adc
jp
scas
loop
adc
mov
aas
push
stos
jl
jecxz
inc
cmpsl
dec
jno
mov
add
push
push
rep
mov
imul
sahf
jl
popf
fldl
ss
or
ret
adc
cs
ret
subl
and
push
mov
sbb
fisttpl
adc
cmpsl
adc
mov
popf
jo
jge
mov
xor
std
inc
xchg
aas
mov
mov
inc
out
pop
mov
mov
les
insb
jp
inc
out
ds
pop
cmp
leave
sub
lcall
sub
int3
or
mov
lret
iret
sbb
adc
es
sub
xor
aam
fs
xor
ret
push
dec
out
enter
insb
test
pop
push
sub
out
jp
add
sub
cltd
test
fnstsw
test
loopne
rorb
daa
push
xchg
jl
cwtl
xlat
lock
adc
inc
sti
lret
mov
mov
in
cmp
mov
fdivrs
jbe
clc
inc
sub
mov
repz
inc
fs
mov
fwait
pop
shlb
lds
xchg
mov
jne
aam
cmp
xchg
jbe
mov
mov
sub
cmp
mov
stos
test
punpckhdq
dec
je
pop
cs
cmpsb
insb
mov
or
aam
adc
inc
push
xchg
sub
mov
xor
std
inc
lods
aad
popf
movsl
cmpsb
mov
adc
xchg
sahf
iret
incb
sbb
pop
flds
or
mov
ss
mov
sub
xchg
in
push
push
push
xor
jp
clc
out
inc
pusha
xor
dec
xor
stos
mov
in
loopne
pushf
cmp
fwait
mov
out
pop
xchg
xchg
loopne
cmp
push
xchg
cmp
push
mov
in
js
and
sti
xor
repz
out
push
nop
add
test
xchg
das
cmp
jns
pop
pusha
aad
repz
adc
sti
push
daa
dec
xor
imul
xor
pop
xor
jbe
cli
je
pop
sbb
sub
ds
mov
add
xlat
push
cmp
inc
xchg
push
inc
inc
and
mov
jmp
mov
dec
iret
ja
cwtl
dec
out
pop
popf
ss
rcr
inc
loope
lret
aad
push
gs
push
add
ret
sub
dec
push
jp
out
lds
add
mov
stos
mov
xchg
pop
movsb
cmpsb
push
and
imull
push
pop
adc
cmp
pop
sbb
imul
inc
xchg
adc
push
sub
adc
xorl
xchg
div
or
inc
repnz
jno
dec
cld
xlat
mov
jns
leave
vmovq
out
xlat
cmpsb
ret
jo
pop
sbb
sbb
jl
inc
js
popa
loopne
out
stos
clc
jae
shll
lret
addr16
mov
test
jl
sahf
sti
sub
and
sbb
fs
testb
pop
mov
lahf
fldt
loop
xchg
std
push
daa
and
jmp
jo
or
mov
lea
cmc
roll
clc
xchg
rol
aad
fdivl
sbb
add
jmp
adc
inc
fidivl
xchg
aaa
stos
sbb
lret
inc
fmull
push
imulb
xchg
daa
scas
mov
mov
test
shlb
cmpsb
mov
push
je
mov
fld
out
and
xor
lock
jp
int
adc
add
push
jle
sbb
int3
xchg
fists
fimull
scas
mulb
out
inc
bswap
xor
xchg
mov
push
sbb
mov
in
sub
inc
push
outsl
add
xor
pop
lock
aad
and
insl
xor
xchg
andb
testl
into
pushf
test
aas
push
nop
fistl
add
ficompl
jle
sbb
sub
adc
and
xor
cld
pop
shlb
pop
sarb
cli
fwait
mov
jp
push
sbb
imul
jbe
xorl
inc
adc
cmp
jno
cmp
sub
fists
mov
mov
xchg
lcall
mov
fwait
adc
outsl
aad
jb
mov
mov
nop
inc
adc
sarb
repz
scas
add
into
es
aad
add
xchg
lcall
sar
cmp
sbb
inc
lods
fwait
add
pop
xchg
mov
pop
or
jle
pop
mov
out
xchg
movsb
mov
cmp
inc
sub
icebp
fsubs
scas
sub
adc
push
arpl
or
add
mov
mov
pop
push
mov
mov
sbb
mov
push
mov
xchg
lods
sbb
inc
xchg
adc
test
pop
mov
push
cmp
mov
push
cmp
dec
add
ljmp
push
in
and
add
or
xchg
imul
inc
inc
mov
inc
or
sbb
loopne
pop
dec
push
cmp
mov
sahf
lock
mov
cwtl
push
mov
mov
negl
mov
addl
test
pop
xchg
mov
fildl
gs
sub
test
fnstsw
push
jle
lret
xor
jg
xor
and
mov
iret
dec
xchg
scas
pop
imul
fistps
dec
cmp
les
aaa
int
pop
jl
int
mov
pop
push
jge
cmp
ja
mov
fmuls
mov
fs
aad
js
or
sbb
ljmp
outsb
out
mov
xor
xchg
cmp
mov
sbb
test
fdivrs
sbb
and
jecxz
movsl
pop
imul
aas
movsb
xor
xor
test
ja
mov
cwtl
mov
out
mov
xchg
daa
ljmp
push
lock
cmpsb
in
notl
repz
imul
fcomi
and
repz
imul
xchg
adcl
outsl
mov
call
mov
movsl
adc
stos
jo
insl
pop
pop
push
add
inc
rolb
lret
adc
mov
push
mov
subl
add
sub
sub
mov
push
loopne
or
sahf
repz
out
insl
dec
and
cmp
dec
cmc
movsb
pop
fimuls
out
mov
ds
mov
pop
add
outsb
dec
fimull
inc
clc
mov
pusha
jo
push
push
or
insl
cmp
mov
lret
and
sbb
ss
xor
inc
jns
push
and
fnstenv
cmp
in
xchg
fucomip
push
push
lds
xor
leave
mov
fwait
inc
and
movsl
iret
xchg
sub
xchg
mov
mov
cmpsb
cmp
jo
pop
mov
add
or
out
lret
inc
sub
repnz
cmp
in
pushf
cld
adc
shrl
push
adc
jp
and
inc
jno
cltd
jecxz
test
ret
dec
shll
test
adc
lea
sbb
dec
mov
add
imul
dec
rcll
gs
jns
rcll
daa
add
roll
jb
inc
fwait
pop
xchg
lea
mov
add
int
xchg
ljmp
dec
ret
mov
sbb
sbb
icebp
aam
loopne
lret
out
daa
push
cli
xor
int
sar
sbb
sarb
in
inc
cmp
sub
jno
cwtl
out
std
jae
movsb
sahf
pop
fdivrp
inc
adc
sbb
loop
mov
popa
dec
mov
lods
pop
xor
les
xor
in
and
dec
dec
jno
jge
fldcw
jecxz
call
or
dec
in
lds
add
int
adc
jp
lret
aam
inc
mov
hlt
push
ds
cmp
lret
repz
lods
nop
subl
test
cmp
sub
or
nop
bound
xor
mov
js
adc
push
push
movsb
and
cwtl
test
mov
mov
lds
mov
or
inc
push
adc
mov
sahf
data16
test
repz
lcall
jecxz
mov
rorl
mov
mov
movsb
lods
push
sbb
pop
add
iret
popf
std
shlb
hlt
iret
mov
bound
jne
pop
pop
push
in
push
lret
stos
and
leave
mov
inc
jns
fisubs
mov
jmp
ds
push
addr16
sub
dec
adc
pop
out
test
insb
xchg
mov
sbb
out
pop
mov
mov
add
clc
pop
dec
adc
push
xchg
popf
jg
pop
push
mov
popa
push
jle
cld
sahf
and
and
es
in
inc
jbe
mov
dec
cmc
lea
stos
xor
sub
das
mov
imul
jns
scas
mov
nop
sbb
je
jnp
aaa
mov
imul
push
mov
jb
sti
stos
fcoms
gs
imul
and
outsl
cmp
push
ror
adc
dec
scas
add
popa
nop
push
pop
dec
nop
jae
mov
push
dec
pop
dec
ja
loope
adc
out
adc
add
sbb
sbb
cmc
test
fdivrp
cmp
aad
push
fcmove
fdivs
xchg
mov
dec
or
stc
jns
adc
lret
pop
insl
add
pop
push
dec
inc
and
or
aam
shl
dec
mov
das
push
mov
loopne
test
pop
js
cmpsb
testl
ja
and
scas
mov
xchg
cmp
jae
aam
sti
mov
sar
adc
xor
jge
mov
sub
and
aaa
and
dec
xchg
push
push
inc
mov
and
inc
aas
sub
push
mov
data16
push
dec
adc
sub
sbb
jl
sub
insl
or
pop
sahf
daa
cwtl
jp
adc
push
repz
scas
xchg
pop
movsb
js
inc
ja
jo
je
cmp
push
push
lcall
pop
icebp
iret
lock
cld
vmovhps
das
lock
out
jge
pop
xlat
mov
inc
xchg
cld
dec
in
ficoms
add
rclb
jp
xor
lea
dec
add
mov
xlat
lcall
in
lea
ljmp
movq
or
shll
mov
sub
adc
gs
push
call
movsb
repnz
pop
push
stc
jmp
scas
adc
mov
fadds
outsb
push
scas
insl
out
push
cmp
mov
jb
test
inc
movsl
cmp
jp
lds
insl
push
aam
rolb
adc
inc
aaa
fcmovu
cltd
data16
das
scas
mov
movb
aad
test
fldt
jae
dec
jp
dec
sti
push
xor
sahf
dec
and
cmc
xchg
dec
test
js
push
inc
sbb
mov
xchg
mov
sbb
push
das
mov
and
pushf
inc
test
mov
std
cld
out
cmp
dec
and
cmp
outsb
loope
xchg
test
cmpl
cmc
pop
push
ficompl
mov
or
sbb
pop
mov
lret
and
push
dec
mov
cmpsl
fsts
out
fidivrs
jo
mov
ja
inc
loopne
and
test
std
dec
add
mov
push
jl
dec
adc
mov
dec
cmpb
pop
adc
jne
daa
jns
lcall
movsb
out
andb
imul
adc
faddl
xlat
out
and
sub
sub
sbb
int3
mull
jmp
mov
push
push
iret
sbb
xchg
stc
sbb
fs
mov
test
pop
jmp
dec
mov
test
jg
adc
mov
into
push
cmc
sahf
cltd
ret
ror
sahf
jno
cwtl
xlat
fildl
inc
es
in
mov
cltd
or
dec
shr
stos
daa
je
enter
mov
cli
incl
jmp
ret
decb
mov
cmc
push
xor
push
push
mov
xchg
xor
dec
lcall
es
adc
push
test
sub
les
dec
ljmp
sbb
leave
clc
insl
repnz
outsl
xchg
jne
mov
dec
sbb
aad
jb
int
mov
insl
or
jecxz
mov
jnp
jbe
xor
push
ret
adc
lods
dec
push
movq
arpl
fisubrl
data16
push
and
fiadds
sbb
scas
jb
fists
dec
xchg
imul
in
xor
inc
lock
sub
fs
sbb
mov
daa
or
sub
pop
aas
xchg
aad
daa
enter
aam
fdivl
mov
cmpb
nop
mov
cmc
fsubrl
idivl
out
push
mov
xchg
lods
cwtl
orb
movsl
sub
mov
or
xchg
jp
or
and
push
movb
xchg
pushf
rcrb
enter
or
std
leave
pop
or
es
ds
ljmp
in
ss
test
pusha
jge
popf
enter
ret
push
dec
add
sahf
sbb
jg
fimuls
xchg
out
arpl
or
sarb
lock
pop
inc
lret
popa
in
and
mov
aas
xor
aad
bound
or
cmc
shrl
mov
out
mov
psraw
pop
lahf
repnz
fwait
inc
sub
and
scas
adc
add
cmp
gs
out
fstpt
stos
adc
lods
fs
xchg
inc
shrb
addr16
insb
push
in
or
arpl
imul
sub
popf
leave
es
fistl
sub
out
xor
mov
and
es
mov
addr16
ret
sub
lahf
push
sub
add
loop
leave
fwait
lcall
fildl
insb
mov
cs
mov
jmp
scas
mov
je
adc
imul
paddq
sahf
shll
xor
pop
aad
scas
mov
mov
dec
mov
mov
mov
leave
pushf
push
jg
jl
bound
fmul
mov
mov
rcrl
mov
cmpsl
add
pop
shrl
cmp
gs
mov
jnp
push
adc
imul
lret
ja
stos
fnsave
mov
imul
cli
sahf
mov
jle
cmp
pop
add
jg
lea
lret
push
cwtl
jbe
cmp
rorl
mov
iret
sbb
mov
jnp
pop
mov
shrb
jge
addr16
pop
movsl
hlt
sahf
loopne
mov
dec
inc
pop
jp
add
and
lods
mov
xor
xor
jp
sahf
jnp
mov
fwait
xchg
dec
es
jo
jb
jmp
mov
push
mov
rcrl
jbe
cmpsl
pop
xor
test
stc
pop
mov
mov
mov
mov
lahf
pop
sbb
sbb
mov
mov
jno
les
dec
add
and
aas
js
int
cmpsl
xor
adc
out
push
negl
xchg
xor
inc
fldcw
into
jne
xchg
sub
das
lret
popf
sbb
pop
or
sbb
jecxz
and
ret
out
push
dec
sbb
inc
es
stos
cltd
mov
mov
pop
outsl
cmpsb
rcl
sub
repz
cmp
adcl
sub
and
mov
sti
mov
popf
xchg
scas
jg
add
cld
push
stc
cmpsl
lcall
mov
fs
rcrl
or
push
aam
mov
lcall
rcr
aas
mov
cmp
test
sub
sahf
push
inc
pop
sub
mov
jecxz
sbb
js
arpl
pusha
push
push
rorl
mov
imul
mov
orb
xchg
ffreep
jbe
dec
les
and
loop
mov
push
sbb
push
testb
iret
or
adc
in
fstps
xor
bound
fildl
incb
stc
mov
out
addr16
jno
rolb
xor
aaa
aad
or
loop
fmull
sbb
inc
fdivrl
fnstenv
push
out
sahf
pop
add
test
pop
or
sub
lock
fs
pop
int3
inc
cmc
xor
repz
aas
push
je
subb
add
lret
mov
arpl
jp
push
mov
je
clc
xchg
stos
sbb
mov
sub
movsl
mov
nop
xchg
dec
insl
xchg
xchg
outsl
xchg
pop
fisubrl
lods
icebp
sub
cmp
mov
push
movsb
push
ret
sub
lds
inc
rolb
dec
movsb
scas
adc
mov
cmp
mov
push
add
add
insb
adc
cld
xor
push
call
mov
in
push
sub
pop
test
mov
stc
addr16
jns
pop
mov
cmp
dec
mov
arpl
xchg
adc
test
mov
xchg
ljmp
and
shr
insb
jmp
rorb
or
mov
jge
inc
add
mov
cli
sub
mov
lret
enter
sub
pop
and
push
mov
push
lcall
add
cmp
aam
jne
pop
cmp
or
adc
xor
mov
out
dec
xor
call
jns
xor
add
pop
nop
in
lcall
out
cmp
sahf
ljmp
xchg
push
bound
and
sbb
shlb
sbb
xchg
scas
in
into
insl
or
push
mov
jnp
stc
idiv
mov
inc
pop
sub
nop
inc
test
or
xchg
add
jge
je
jns
cmc
cmp
mov
jnp
fcmovb
sub
mov
mov
shl
loop
and
mov
mov
gs
pop
mov
mov
xchg
push
movsb
dec
faddl
inc
sti
jo
fcmove
ja
gs
mov
dec
imul
xor
sub
cmpl
lret
push
ret
das
jmp
das
mov
adc
or
stos
daa
pop
mov
fsubl
fcoms
jno
test
sub
in
and
ss
outsl
out
ret
and
cwtl
xor
jno
out
std
sahf
hlt
mov
jo
adc
mov
int3
popa
scas
lock
fwait
addr16
das
cmp
dec
out
mov
cs
cltd
lret
test
aad
xchg
mov
adc
cmp
jecxz
and
or
mov
popl
ljmp
xchg
mov
push
mov
popa
sbb
xlat
mov
add
imul
and
iret
adc
xor
addb
sub
and
pop
sub
jle
jae
push
mov
sbbb
mov
mov
push
jg
insl
sbb
pop
adc
mov
ds
dec
or
xor
sub
dec
lea
popa
fdivp
std
cmp
popa
pop
lret
mov
pusha
lea
push
les
mov
lahf
sbb
sahf
cmpsl
mov
pop
mov
out
add
in
adc
into
pop
aad
stos
push
jp
jecxz
ljmp
xor
fsts
roll
enter
sub
mov
sub
sub
leave
and
sbb
repz
sbb
out
lret
cmp
adc
fnstsw
push
mov
inc
data16
pop
dec
gs
test
mov
in
aam
sbb
jno
dec
fisubrs
and
lahf
cmpsl
pop
imul
aad
int
rol
jne
int
xchg
dec
and
lahf
test
dec
cmp
sbb
mov
pop
cmp
out
push
fs
pushf
scas
sbb
mov
mov
sub
mov
rol
andl
loop
pop
mov
push
enter
xchg
out
ret
inc
scas
xchg
out
push
cld
stc
lret
shrd
pusha
dec
xlat
into
push
pop
popa
cli
add
mov
insl
cmp
mov
shll
mov
push
mov
pop
leave
lret
out
push
inc
push
inc
adc
in
test
sahf
jae
pop
push
mov
lcall
in
js
pushf
mov
and
fs
mov
fildl
xchg
int3
xchg
pcmpgtd
je
sti
push
mov
sbb
ja
and
inc
inc
mov
imul
mov
fwait
iret
mov
mov
sbb
cmpsl
popa
mov
push
sbb
sub
cld
ret
pop
dec
adc
mov
mov
mov
sbb
arpl
mov
shll
xchg
cld
data16
jne
xor
cmp
or
or
out
sub
and
inc
insb
mov
mov
stos
jns
cli
cld
mov
xchg
pop
mull
mov
in
mov
sbb
mov
scas
pushf
jmp
mov
shrd
xlat
aaa
add
in
test
or
pusha
pop
mov
jmp
std
inc
popa
mov
lods
je
adc
jo
jecxz
stc
sub
popf
xchg
xchg
push
xchg
dec
subb
outsb
ja
test
pusha
jae
out
test
addr16
cmp
mov
mov
adc
xchg
xor
les
pop
lods
test
scas
mov
cmp
add
idivb
or
and
data16
xor
clc
adc
add
mov
inc
push
push
stos
xchg
pop
adc
scas
sti
sbb
shrl
stos
in
xchg
call
push
sub
inc
inc
sbb
mov
jp
ret
jne
inc
pushf
xor
push
adc
daa
jno
cmc
pop
lea
cmp
cmc
cmpsb
dec
test
and
out
adc
jl
push
rcrb
int3
fildll
nop
or
xchg
stos
push
mov
inc
adc
fs
jnp
fnstsw
xor
inc
cli
jb
inc
mov
sbb
fldl
sub
xchg
mov
jae
sub
loope
jb
ficoms
sub
ficompl
subl
aad
je
fistl
pushf
cmp
adc
mov
mov
aaa
notb
mov
push
mov
inc
mov
lea
loope
pop
and
xor
std
outsl
cmp
and
andb
daa
mov
and
cmpsl
pop
pop
scas
adc
test
loop
imul
xchg
cmp
jne
nop
iret
outsl
mov
aas
pop
mov
mov
sub
in
rcll
ds
loop
lods
push
adc
imul
pop
rcrl
cmp
lods
lea
fwait
je
shll
push
dec
xchg
je
mov
es
add
out
cli
push
xchg
sbb
jo
jbe
outsl
add
pop
sbb
aad
ret
cs
aaa
dec
push
cmp
cmp
sub
mov
jne
mov
sahf
sbb
out
dec
sub
cmpsl
xor
mov
inc
movsb
or
add
lcall
cld
je
inc
xor
push
mov
repz
loope
add
mov
std
out
mul
scas
jnp
and
mov
test
jp
cli
and
in
lahf
decb
push
inc
icebp
in
ret
imul
jecxz
add
cmp
push
sub
leave
repnz
xchg
aam
push
ret
insb
jg
adc
and
push
xor
and
fdivr
cmp
mov
mov
ja
or
imul
lods
or
sti
loopne
mov
sahf
jnp
inc
loope
lea
loopne
add
push
stos
add
sub
repz
sub
sahf
sti
inc
dec
popf
stos
fldenv
fnstcw
mov
dec
jge
ljmp
ret
jo
jo
stos
xor
cmc
cli
xchg
rcr
and
xchg
insb
icebp
stc
mov
dec
rcrb
jne
cmp
mov
outsl
popf
icebp
push
xor
lds
shll
mov
or
mov
lock
js
xchg
sbbl
sti
cmpsl
mov
lret
and
xchg
mov
inc
in
insb
out
xor
fists
mov
dec
dec
xchg
add
lahf
sub
ljmp
pusha
mov
xchg
xchg
pop
in
fiadds
adc
iret
dec
push
pop
cmp
pop
stc
or
out
or
xchg
jmp
jecxz
xchg
push
pop
in
jae
aad
adc
in
mov
gs
push
or
sbb
mov
jmp
cmpsb
movsl
xchg
outsb
gs
ja
lcall
lahf
mov
lds
and
add
adc
xlat
pop
sbbl
cmpsb
fwait
out
jle,pt
call
mov
inc
push
dec
dec
addb
pop
aas
sub
in
pushf
sub
dec
jb
push
ret
xor
loope
dec
push
fldl
and
mov
rcrb
sub
fistl
je
test
mov
std
nop
cwtl
mov
adc
or
cmp
xchg
ss
aaa
icebp
push
dec
ss
mov
clc
dec
and
sbb
cs
or
in
out
jno
xchg
push
out
mov
add
cld
push
xchg
rolb
cs
pushf
pop
add
add
push
stc
jno
sahf
cli
js
mov
sub
icebp
cld
or
notl
and
and
mov
pop
std
nop
sbb
es
cmp
inc
sub
lahf
notb
push
je
lock
xor
push
mov
cmp
or
out
out
nop
imul
in
stc
in
mov
xchg
sub
rcrb
push
push
pop
cli
inc
decl
xlat
inc
push
adc
in
jo
mov
push
das
inc
mov
in
hlt
data16
fildl
jp
loop
into
push
xor
cmpsl
stos
nop
enter
outsb
out
incl
das
dec
inc
pop
ficoms
sbb
popa
cld
jne
push
aam
shrb
jo
add
aad
push
in
push
or
xchg
test
and
mov
popa
cmp
mov
sbb
or
cmp
or
cmp
shlb
test
dec
les
mov
mov
daa
test
out
mov
stos
or
lods
inc
jb
or
in
add
xchg
dec
outsl
sbb
dec
popf
ss
aad
mov
and
fcomps
add
iret
pop
push
imul
hlt
push
lods
in
dec
dec
jmp
shrl
imull
push
sub
into
add
fistpl
jmp
jg
sti
sub
dec
pop
pop
lods
sti
loope
iret
xchg
xlat
test
push
cmpsl
imul
adc
mov
sbb
fdivrs
stos
stos
mov
xchg
dec
shrb
fcomps
mov
push
fwait
mov
iret
insb
and
repnz
push
jecxz
sub
out
lds
lahf
cmpl
mov
push
mov
loope
pop
pop
test
insb
cmp
mov
lds
cmpsl
xorl
pushf
into
inc
sub
pop
sti
jno
xchg
lock
loop
ss
imul
sub
popa
push
mov
and
pop
in
mov
xor
jns
push
and
mov
aam
xchg
add
pop
xor
jns
cmpsl
pop
xchg
inc
fidivs
sbb
repz
push
rorl
rcr
mov
cltd
pop
popa
mov
sbb
test
pop
cs
sbb
hlt
loopne
mov
lods
cmp
dec
pop
pop
sub
sbb
fs
call
cmp
and
cli
or
push
clc
mov
mov
int3
call
nop
pop
sti
add
ficoml
pop
int
jge
and
or
jecxz
std
loop
cld
ljmp
add
icebp
nop
pop
leave
dec
scas
mov
fs
loope
add
adc
lret
cmpsb
out
dec
push
ja
dec
pushf
fidivl
dec
inc
jp
pop
les
mov
cltd
stc
pop
iret
xlat
bnd
push
push
out
xchg
cmc
sbb
icebp
xor
adc
inc
mov
xchg
ds
stos
lock
dec
in
insb
or
fadds
daa
xchg
jno
outsb
mov
jmp
jb
xchg
mov
push
lret
les
and
and
sub
mov
jge
mov
dec
xlat
dec
test
or
es
mov
mov
pushf
aad
fiadds
cmp
push
pop
pop
mov
imul
cli
ljmp
stos
repnz
adc
xor
and
xor
nop
subb
push
dec
icebp
mov
pop
inc
sbb
cmp
xchg
testb
push
addr16
imul
or
scas
dec
cwtl
pop
dec
mov
clc
fs
sub
push
xchg
xchg
aad
jge
and
adc
dec
fsubp
cmpsl
ret
lds
jge
mov
shlb
ja
push
dec
lea
dec
sbb
iret
jo
push
ret
sub
xchg
pop
mov
stos
jmp
push
cmp
pushf
cmc
popf
pop
push
cmc
popa
pop
out
mov
jmp
mov
or
imul
push
bound
ficomps
shr
xchg
call
cmc
mov
sub
ror
out
mov
inc
adc
in
xor
inc
sub
sub
jb
cld
das
pop
adc
dec
mov
roll
or
cwtl
sub
mov
jmp
aas
xchg
jmp
idivl
shl
and
nop
jo
pop
test
jne
fsts
and
mov
or
mov
xor
mov
push
xchg
sti
cmp
jns
mov
push
xchg
or
mov
aam
pop
xchg
ds
lcall
aad
inc
bound
rolb
fisubrl
push
wrmsr
clc
xchg
pop
mov
aam
fs
xchg
cmp
movsb
clc
rcrl
or
jmp
fdivrl
and
ss
sbb
movsb
fwait
out
xor
adc
dec
cmpsb
add
xor
inc
fs
xor
or
outsl
enter
lahf
mov
inc
cmp
and
cmc
mov
cmpsb
cmp
add
scas
cmp
xor
cmp
cmp
inc
repnz
push
mov
mov
add
cmpsl
rclb
lock
je
dec
dec
jnp
or
daa
push
outsl
dec
xor
pop
lahf
and
jbe
sbb
lret
mov
leave
imul
pop
out
lea
lahf
dec
loopne
cli
out
xchg
hlt
dec
push
adc
xor
int3
and
cmpl
gs
mov
out
cwtl
push
mov
pop
fcmovnbe
out
repz
mov
inc
leave
or
std
jle
loope
cmp
enter
rcrb
shrl
mov
push
clc
push
rcrl
scas
scas
adcb
push
mov
xchg
mov
mov
out
push
adc
loop
sbb
cmpsl
fistpl
lea
push
xchg
lcall
in
cld
ds
push
les
das
and
and
xchg
push
push
push
inc
xor
sbb
in
sbb
sbb
je
pusha
add
cmp
inc
insb
sub
out
jle
or
lods
pop
xchg
sbb
es
mov
test
fbstp
jge
movsb
mov
mov
push
mov
mov
or
push
mov
aaa
jno
test
gs
xor
xchg
pop
add
dec
sbb
push
pushf
in
dec
dec
dec
xor
jge
inc
aad
inc
jnp
adc
push
pop
shrl
jae
frstpm(287
dec
cwtl
push
cmp
add
int
mov
xor
fcompl
jl
call
sub
mov
outsb
add
cmp
subl
jns
mov
mov
in
stos
aam
insb
or
int3
sub
jmp
xorb
lods
xor
movsb
cmpsl
lahf
sahf
stos
mov
jle
mov
loope
clc
inc
loopne
test
leave
aaa
jecxz
dec
jmp
fs
cmp
aas
dec
sti
inc
sub
sbb
mov
and
push
cmp
sti
fdivs
or
add
mov
mov
lods
jg
popa
pop
push
ds
add
repnz
dec
jge
push
js
notb
xchg
push
pop
stos
pop
push
cltd
mov
push
loope
loopne
or
dec
push
lret
cmpsb
mov
mov
andb
pushf
jo
pushf
cmpl
dec
sub
pop
dec
fs
adc
pop
jl
push
clc
jbe
adc
dec
jo
xor
pusha
pop
sbb
and
movsb
into
fimuls
shlb
ljmp
out
pop
mov
push
popa
add
out
lock
rolb
enter
cmp
push
fwait
fs
int3
push
cld
and
sbb
das
or
xchg
mov
mov
adcl
jae
popa
ds
int3
cmp
inc
inc
out
jno,pn
xor
jle
mov
enter
lea
add
icebp
ret
aad
adc
cmp
mov
fcmovu
leave
or
xchg
adc
xor
ret
or
int
mov
test
nop
xchg
jecxz
out
frstor
idivb
mov
pop
mov
aaa
aas
aaa
sbb
or
ja
jnp
inc
xor
add
into
ret
xchg
das
nop
int3
sbb
pop
cwtl
sbb
xchg
pop
aas
sub
mov
test
lods
loope
lcall
xchg
or
cmp
roll
ds
push
push
divb
jecxz
inc
mov
jne
in
cmpsb
imul
jo
xchg
adc
movsb
lock
outsl
loope
jge
popf
repnz
xchg
cmpsl
test
dec
push
cs
and
lahf
dec
cltd
sbb
fcmovu
fsubrl
nop
daa
cwtl
sbb
jl
lret
mov
mov
pop
mov
icebp
movsb
or
jns
mov
pop
push
and
fdivrl
or
xchg
sbb
cli
pop
dec
pushf
notb
mov
and
cmp
adc
repz
cs
inc
mov
cwtl
cmp
pushf
add
xchg
lea
jb
push
add
nop
ja
dec
or
dec
in
push
das
dec
bound
adc
jle
cltd
xor
lods
sbbl
aad
int3
mov
and
outsl
push
dec
pop
je
test
inc
daa
push
add
adc
imul
or
push
fwait
rcl
adc
xor
cmp
push
push
mov
ljmp
dec
mov
and
sub
lahf
ror
cmc
mov
loope
mov
cltd
jns
std
nop
xchg
lcall
cmp
add
mov
fstps
test
mov
aas
inc
insl
test
gs
ds
sub
loop
add
jbe
adcl
push
repnz
push
jnp
pslld
add
push
jne
dec
test
and
insb
popa
sahf
divb
adc
xchg
sub
mov
sarb
mov
shrb
inc
add
or
dec
xchg
lock
or
dec
inc
sbb
xor
or
cmpsl
sbb
pop
fisttps
mov
stos
aas
xor
frstor
inc
cmp
xchg
mov
push
subb
inc
push
add
call
sbb
and
xorl
sub
push
xchg
lahf
mov
xchg
icebp
xor
or
hlt
push
xor
lods
xlat
adc
push
pop
mov
mov
sahf
aaa
xchg
sbb
or
in
leave
mov
std
pop
sbb
push
lahf
push
inc
push
pop
lahf
das
inc
xchg
lahf
gs
xor
dec
fwait
mov
sbbl
mov
inc
fs
subps
cmp
out
pusha
mov
xor
aaa
mov
pop
mov
sar
addr16
adc
enter
movsb
loope
jbe
inc
loopne
jg
out
xor
mov
or
popa
cmp
flds
les
and
or
cltd
idivl
and
stos
cmp
lods
test
jns
push
add
int3
es
jne
lcall
xorl
scas
adc
pop
mov
outsl
sub
inc
xchg
xor
je
in
ja
pop
and
mov
adc
sub
sbb
icebp
loope
fimuls
mov
outsl
pop
and
xchg
divb
pop
inc
ficoml
int
and
inc
test
xor
and
out
out
mov
xlat
push
in
mov
sahf
in
mov
ss
mov
xor
adcl
lret
mov
mov
aaa
sti
lods
leave
arpl
js
out
fwait
mov
ja
test
adc
mov
and
pop
sbb
mov
fsubs
in
stos
mov
mov
dec
jne
mov
fbstp
adc
loope
lahf
and
imul
rcrb
inc
fsub
inc
and
add
frstor
sub
mov
test
lods
loop
scas
ret
pop
pop
add
fimull
in
in
cs
popf
adc
test
ja
cmp
and
filds
scas
sbb
loopne
xchg
mov
ret
fildll
cmp
inc
push
dec
test
fstpl
mov
in
xchg
jmp
mov
imul
jo
sub
push
repnz
adc
or
mov
pop
repz
lret
subl
mov
adc
sub
cmp
xchg
cmp
out
mov
fdivrl
cltd
fs
xchg
mov
notb
xchg
mov
js
iret
dec
repnz
pop
std
mov
orb
iret
pop
popf
out
or
adc
cmp
insb
sub
stos
add
out
fsubl
fidivl
sbb
adc
pop
sub
outsb
mov
aas
mov
pop
rdpmc
jns
push
xor
in
jb
inc
fxch
sub
fistl
xchg
fildll
mov
mov
jae
ret
neg
jo
cltd
xchg
sbb
cwtl
sahf
and
call
jg
std
sbb
pop
arpl
add
adc
ds
sub
clc
dec
movsl
and
cmpsb
lds
sub
mov
daa
mulb
pop
pop
inc
nop
in
out
jmp
mov
add
in
test
push
sbb
repnz
mov
sti
mov
sbb
imul
fldln2
shlb
lahf
pop
xor
dec
int3
ljmp
jmp
imull
add
mov
jle
pop
pop
push
cltd
cwtl
mov
inc
sahf
inc
shll
push
inc
mov
sbb
cmp
mov
aas
jmp
mov
or
mov
xor
adc
repz
jns
cmp
push
jae
pop
sub
pop
or
inc
flds
jle
push
dec
int
inc
lods
lds
mov
sub
cmc
sbb
aad
pop
mov
inc
jecxz
mov
mov
adc
add
and
rcll
sub
pop
pusha
popa
and
mov
push
xchg
pop
int3
cmp
jmp
movsl
movsb
shll
cmp
add
adc
sub
jbe
xor
call
xchg
jp
adc
lods
adc
dec
xchg
xlat
shll
mov
xchg
mov
xchg
xchg
add
outsb
fcoml
int3
out
xor
jnp
mov
sub
xor
popf
mov
cmc
cmp
fidivrl
mov
sub
gs
rorb
aaa
xchg
das
sbb
into
es
push
xchg
lods
dec
or
mov
fwait
repnz
and
mov
cmc
testl
adc
pusha
dec
mov
adc
loope
out
ret
sahf
iret
cmpsb
xor
pop
test
pusha
push
jns
push
aaa
xchg
jbe
jg
xchg
addb
jbe
mov
clc
xchg
test
fsubr
pop
push
pop
in
mov
fcoms
mov
sub
mov
les
mov
shll
jb
push
inc
inc
lret
inc
iret
daa
ret
lret
roll
dec
sub
sub
adc
fildll
jo
ret
add
lahf
hlt
fs
push
inc
icebp
or
repz
std
cmp
out
and
inc
add
dec
lret
pop
clc
test
ret
sahf
jb
cmp
in
and
pop
sahf
inc
lock
mov
clc
pop
scas
sub
insl
add
rolb
lret
sub
jp
aas
jae
test
mov
cmp
repz
clc
jb
cmp
lds
mov
test
push
add
mov
sbb
insb
std
outsb
mov
and
sbb
xor
xor
mov
movsl
push
xchg
leave
jno
ljmp
lret
dec
and
outsb
jmp
mov
pop
jmp
fsubl
mov
fnstsw
xchg
bound
mov
outsb
jno
xchg
lock
adc
mov
inc
sbb
dec
jp
or
xor
mov
repnz
jg
push
xor
jecxz
test
inc
popa
test
mov
stos
jb
pop
cs
nop
add
ret
xchg
test
test
and
enter
lret
dec
rcr
pushl
xor
aam
test
inc
movsl
sub
mov
pushf
filds
xchg
in
fldl
shrb
out
and
lds
pop
sub
clc
mov
jbe
mov
xor
cmp
add
outsl
xchg
fbld
lods
leave
sub
pop
in
pusha
arpl
add
adc
scas
add
inc
sbb
loop
mov
add
jle
divb
or
shll
movsb
pop
stc
push
and
incl
push
xor
out
push
cmp
movsb
daa
xchg
daa
leave
ficoml
leave
movsl
pop
in
jae
test
xlat
pop
push
in
scas
call
in
sub
mov
inc
jnp
popf
sub
loop
jnp
loopne
sbb
in
mov
ja
leave
aad
or
enter
cltd
pop
mov
or
outsb
adc
rclb
fstps
and
xor
ret
mov
jo
data16
dec
mov
or
push
mov
roll
or
lods
fistpll
dec
xor
inc
fsincos
mov
cltd
add
dec
push
lret
daa
fsubl
pop
add
mov
loope
rorb
sti
jns
push
mov
adc
add
push
fucomi
pop
xor
sbb
fdivs
push
mov
or
push
sbb
pop
flds
movsb
sub
push
add
pop
aaa
js
shll
cmpsb
js
cmpsb
cwtl
sarl
aaa
pop
push
adc
movsl
xchg
pop
sti
pop
xlat
fildl
add
loopne
mov
hlt
push
push
insb
add
add
enter
pop
sbb
nop
out
into
xchg
repz
jle
cld
aad
sbb
sarl
test
scas
sbb
pushf
lods
shlb
jb
sub
jle
adc
cs
pusha
aaa
push
fistpl
mov
stc
add
mov
mov
nop
push
and
data16
in
pop
int
jnp
je
pusha
shrb
xchg
es
stos
xor
pop
mov
adc
ret
jne
bswap
icebp
cmpsb
in
mov
cs
adc
in
inc
aas
leave
int
ljmp
insl
jp
xlat
add
or
in
xor
stc
add
and
and
mov
push
xor
shrb
pop
push
xchg
sub
repz
mov
cmpsl
push
add
adc
ds
adc
ds
cmp
cmp
jg
lcall
popa
icebp
xlat
sbb
pop
pop
fcompl
es
push
pop
rorb
fildl
jns
int3
sub
dec
adc
je
or
lods
xor
xchg
add
inc
xor
dec
xchg
nop
int3
inc
cmp
lods
inc
pop
addr16
or
xchg
pushf
xchg
push
inc
or
adc
lret
mov
lcall
push
cmc
mov
xchg
sbb
or
jns
pop
stc
std
push
push
dec
mov
out
jp
rcrl
inc
push
outsb
mov
hlt
jge
cmp
cmp
into
pop
lret
mov
and
das
ror
xchg
pop
sbb
adc
inc
int3
push
xchg
lret
mov
cmpsl
movsl
mov
pop
inc
bnd
mov
jo
mov
int3
lret
pop
mov
push
je
orb
or
fdivl
xor
sbb
push
cmp
icebp
int3
sarl
das
mov
jl
and
repz
scas
pop
negb
cmp
cmp
jmp
or
rcll
inc
enter
movsl
sbb
xchg
add
adc
sub
cmp
and
xchg
mov
mov
jecxz
mov
sbb
stc
jo,pt
popw
add
ja
sbb
mov
repnz
stc
pop
ret
mov
in
dec
pop
sbb
dec
xorb
pop
jno
in
cmp
movsl
rcll
or
in
cwtl
fdivrl
pop
xor
xor
pop
pop
loop
add
clc
leave
ret
and
and
out
movsb
jns
or
add
jo
andl
mov
out
and
aad
push
inc
repnz
xchg
lret
jle
mov
pop
cltd
pop
lods
push
dec
scas
adc
mov
loopne
mov
fidivs
gs
or
aam
pop
sbb
mov
xchg
pop
jnp
sub
mov
xchg
jo
js
imul
mov
aas
adc
rsm
fs
jbe
xchg
push
int3
test
mov
sbbb
lret
adc
mov
leave
sub
pop
movsb
inc
jg
leave
jle
dec
mov
jge
ds
out
divl
out
mov
loop
out
scas
int
and
sbb
ja
pop
mov
arpl
in
mov
fdivs
adc
movsb
adc
mov
repz
jne
out
adc
ret
pop
fbld
nop
mov
adc
dec
and
cli
fbld
sbb
mov
sahf
and
push
jnp
scas
popf
pusha
icebp
push
pop
repnz
mov
orl
inc
xchg
test
jg
push
out
les
sbb
lods
repnz
out
fnstenv
out
xchg
dec
imul
sbb
sbb
sbb
cmp
push
jg
cwtl
cmpl
es
jmp
jb
pop
sub
out
mov
gs
inc
add
icebp
movsb
jae
dec
clc
orl
sbb
rorl
imul
es
pop
outsl
outsl
outsb
repz
xchg
lock
pop
pop
sub
cmp
xchg
lcall
adc
push
out
xlat
adc
fisttpll
xchg
es
xchg
in
divl
repnz
test
push
imul
mov
stos
xlat
pop
fwait
call
std
ret
push
daa
jae
outsl
lcall
repz
xor
push
push
mov
dec
je
jb
mov
inc
pop
cmpsb
cmp
ljmp
aad
aaa
int3
pop
into
xor
add
orl
adcb
popl
push
cmp
adc
test
enter
inc
dec
add
repnz
bound
movsb
mov
xor
adcl
sbb
ja
xorb
clc
popa
cmp
es
mov
fisubrl
add
mov
sbb
add
dec
or
clc
jle
stos
xchg
sub
rolb
jo
pusha
call
cmp
stos
in
test
mov
mov
sub
call
fisubrs
jle
push
cmp
mov
and
xor
fistl
in
jno
pop
dec
inc
gs
pop
int3
adc
dec
inc
push
jbe
cmc
or
testl
faddl
sbb
jge
xor
loopne
or
nopl
inc
xchg
lret
scas
sub
jnp
sub
or
cmp
add
ljmp
push
pop
gs
pop
jp
adc
cs
ss
mov
test
scas
and
pop
scas
loope
mov
mov
cmp
sahf
popf
stc
mov
in
orl
dec
out
adc
lea
push
mov
or
mov
scas
xchg
out
sti
mov
mov
shrl
stc
je
pop
lods
aad
xor
xor
mov
or
xor
int
cltd
stos
pushf
loope
popf
jne
push
scas
mov
call
inc
into
cmpsl
add
mov
outsb
push
repnz
pop
nop
cmp
xlat
sub
jns
lock
test
jnp
push
lea
in
add
pop
shlb
sub
mov
add
fdivrl
lds
fadds
data16
fcoms
flds
insb
dec
pop
jle
push
inc
mov
addr16
and
into
ret
pop
mov
and
and
adc
es
loop
rcrl
pop
jbe
adc
shrb
inc
adc
sbb
mov
jmp
adc
jae
xchg
add
lds
clc
adc
add
inc
lock
sub
jbe
xchg
fs
int
lds
push
xor
adc
shll
pop
xchg
cmp
cmp
push
mov
pop
shl
dec
mov
ret
sub
push
jg
pop
xor
mov
xchg
xchg
lods
das
push
stc
pop
inc
and
dec
aam
push
sub
dec
mov
mov
testl
shrl
push
sub
adc
cs
sbb
xchg
jbe
cmpl
jmp
inc
cmpsl
leave
xchg
cmp
pop
push
std
adc
jg
ficomps
cmc
out
popa
jmp
icebp
jecxz
fisubs
fmul
pop
sub
outsb
dec
lods
sbb
adc
mov
push
shl
push
fistpll
or
sub
and
jns
xchg
call
outsl
or
dec
clc
js
or
xchg
mov
and
pop
mov
adc
sub
sti
insl
sarl
addr16
or
dec
xchg
imul
sbb
xchg
adc
dec
and
pop
add
insb
push
inc
ret
clc
mov
adc
jns
lret
shrb
pop
xchg
lds
jns
les
xchg
and
mov
dec
aas
movsl
dec
jl
notl
arpl
xor
les
xor
addr16
sub
pop
insl
add
dec
call
stos
add
jns
lods
pminub
mov
cmp
jbe
xor
fnstenv
pop
daa
adc
ret
pop
cmp
push
push
je
addr16
data16
mov
scas
sbb
js
mov
mov
jge
stos
adc
mov
cmc
mov
mov
out
leave
cmp
je
insb
cmp
pop
lock
gs
ljmp
das
mov
and
movsl
shlb
jecxz
gs
jne
add
mov
and
aad
mov
push
dec
or
lcall
push
daa
inc
aaa
ret
movsb
cmp
lods
cltd
add
pop
loope
inc
out
xchg
sbb
and
outsb
fldt
movsl
sbbl
sbb
push
das
mov
test
fistps
in
ljmp
jg
xor
shll
pop
adc
aaa
ret
sti
and
dec
in
xor
cmp
or
call
jl
and
lods
xlat
mov
mov
mov
add
cwtl
pop
inc
cmp
xor
sarb
adc
jns
mov
add
xchg
jge
xor
gs
mov
sub
mov
outsb
ret
fisubs
popa
push
inc
mov
mov
arpl
jns
shll
add
jle
dec
sub
cmp
jge
xlat
in
mov
out
loop
mov
sbb
jne
cwtl
mov
enter
lret
mov
fsubrl
mov
inc
addr16
lods
and
lret
or
pop
adc
jbe
jmp
inc
lock
cmp
inc
sbb
jg
mov
cmp
mov
in
pop
jle,pn
cmc
dec
movups
push
outsl
adc
and
call
inc
cld
cmp
add
call
mov
pop
push
xchg
sbb
jle
cmpsl
stc
fmull
pusha
or
adcb
inc
xor
aad
jp
fs
scas
in
pop
sub
mov
das
push
jl
lds
mov
roll
imul
test
mov
in
mov
dec
not
cltd
dec
stos
pop
test
sub
add
repnz
gs
inc
xorl
loopne
mov
je
subb
out
popa
sbb
sysenter
lods
jecxz
add
and
cmpsb
mov
rclb
adc
daa
push
mov
push
jmp
add
std
cmp
lods
dec
daa
jbe
mov
jecxz
out
dec
pop
in
cmp
jns
and
cwtl
ss
pop
je
imul
ret
pop
push
movsb
push
lcall
inc
sbb
aaa
imul
iret
jns
sahf
arpl
in
gs
loopne
imul
sub
enter
xlat
ss
dec
in
je
xorl
in
rolb
dec
push
int3
out
popa
xor
cltd
decl
nop
ror
fldenv
shrl
jno
fwait
lcall
sub
mov
mov
inc
jge
dec
and
rcll
gs
pop
outsb
aad
fstps
add
lahf
mov
jp
xchg
adc
in
or
mov
enter
cmp
das
in
xor
aas
ljmp
nop
outsl
jae
test
negb
mov
out
dec
aas
ja
int3
cmpsl
out
loopne
pop
outsl
xchg
test
mov
xor
sub
fldl
mov
push
sahf
pop
jp
push
mov
and
enter
dec
mov
jecxz
jg
dec
mov
mov
mov
and
cmc
inc
mov
push
sbb
clc
jp
lock
cmpsl
mov
cs
insl
mov
stos
popf
or
cmp
fiaddl
sub
mov
cmpsl
out
dec
aad
push
filds
push
push
xchg
inc
call
jno
adc
or
cmp
subl
cld
adc
addl
sub
adc
xchg
sub
lret
fsts
and
das
xchg
sbb
push
cmp
scas
adc
in
or
loope
mov
sub
daa
fcmovne
or
lret
cmp
out
push
mov
xlat
sbb
add
mov
lret
xor
xor
outsw
mov
fldenv
neg
test
ljmp
outsl
adc
cmp
in
jg
jle
push
insl
sbb
rcr
cld
adc
incb
idivl
in
es
popf
push
adc
je
sarb
inc
bound
out
loopne
cmpsb
mov
adc
pop
sbb
pop
jno
xchg
and
fstps
insb
sub
add
and
jge
mov
pop
push
xchg
add
out
xchg
out
and
outsb
fldl
and
xchg
adc
js
mov
aaa
push
push
addr16
out
inc
imul
xchg
cmp
popf
xlat
pop
pop
nop
pop
dec
xor
push
xor
std
mov
jecxz
cmpsl
add
inc
gs
push
lea
lods
push
sbb
mov
pop
sahf
bound
pop
inc
and
dec
jl
cmp
out
mov
cmp
add
ja
jne
mov
imul
mov
xchg
push
bound
rolb
repz
js
jno
mov
out
mov
cld
inc
int
in
jmp
shlb
ds
xchg
sahf
push
mov
out
sub
push
fs
xor
xor
loope
pop
nop
sub
data16
adc
xor
push
cmpsl
mov
mov
rol
mov
jge
add
and
insb
xor
int
fwait
sti
mov
outsl
sub
mov
repnz
mov
scas
andb
adc
in
stos
sti
orl
add
sbb
dec
push
xadd
sbb
mov
jge
jl
xor
aad
mulb
inc
gs
sbb
or
fmul
daa
lahf
jl
das
fiaddl
movsb
les
jmp
in
das
pop
lret
jne
jnp
movsb
cltd
stc
test
imul
outsb
cmp
push
mov
fstp
fdivrl
push
and
mov
lahf
jmp
cwtl
rcl
jl
jns
fisubl
mov
mov
pushf
xlat
push
lods
and
pop
lods
adc
push
fstpl
ret
and
shl
cmp
aam
sbb
xor
ret
sub
lret
js
dec
jbe
inc
mov
pop
dec
or
inc
xlat
sahf
add
aad
pusha
nop
mov
aas
mov
lcall
add
outsl
jnp
xor
jl
addb
pop
xor
rorl
mov
inc
pop
cwtl
fistps
fsubp
sub
fldl
sahf
push
arpl
ss
xchg
rorl
cmc
movsl
testl
mov
mov
pop
xlat
sti
push
xchg
mov
lock
bound
pop
rcll
movsl
in
jmp
and
ficompl
fcmovbe
push
loop
xlat
inc
add
das
mov
inc
mov
movsb
cs
out
push
mov
sbb
fmul
nop
mov
inc
and
sub
ja
jb
rclb
adc
fs
test
jns
sub
je
shrl
sbb
push
out
insb
popa
mov
lods
mov
inc
outsb
mov
es
mov
pop
into
xchg
xchg
cmp
adc
fbld
mov
cli
je
jl
test
pusha
pop
pop
repnz
cmp
jmp
setns
sbb
cwtl
dec
aaa
mov
popa
data16
lea
jmp
mov
stc
xchg
outsb
insb
aaa
icebp
aam
addr16
stos
rolb
into
xchg
pop
jnp
lret
das
lods
or
jecxz
and
mov
or
sarb
dec
inc
pop
adc
pop
jp
jl
jae
sbb
stc
shl
add
xor
sbb
repz
pop
loopne
dec
pop
gs
cmpsl
pusha
mov
lahf
push
sbb
add
test
mov
ret
xchg
xor
mov
sahf
xchg
mov
outsl
add
repz
xchg
jne
adc
and
sbb
data16
imul
pop
cs
iret
call
je
fidivl
mov
mov
mov
push
sti
push
push
out
les
dec
push
in
pop
pop
sbb
adc
sbb
fisubs
mov
pop
fildll
sub
xor
dec
stos
inc
insl
imul
push
cmp
dec
cmp
es
xor
xor
push
mov
jg
fldcw
jecxz
push
jo
gs
push
bound
dec
in
or
push
cmp
dec
xchg
mov
xlat
jecxz
push
cmpsb
mov
in
mulb
cmpsb
jae
out
push
push
inc
dec
ja
fwait
pushf
inc
push
cmp
jb
xchg
mov
inc
cmp
clc
je
aad
mov
sarb
mov
cmpl
rolb
enter
js
sahf
push
mov
loope
int3
daa
pusha
monitorx
sbbb
dec
xorb
mov
loop
pop
cmp
jns
mov
movsl
pop
fisttpl
pop
out
push
and
adc
lret
ret
insl
sub
cmpsl
mov
sbb
popa
rcrl
mov
mov
mov
and
xor
incl
rcrb
out
push
out
and
jl
adc
jl
xchg
jbe
mov
add
out
sub
and
add
add
test
bound
or
adc
das
sarl
sbb
hlt
negl
ret
xchg
dec
add
stos
xchg
xor
mov
or
ljmp
sarb
mov
mov
adc
xor
mov
adc
xchg
inc
lea
jge
out
pop
leave
inc
mov
les
arpl
xchg
xor
lret
test
cmp
in
mov
adc
add
dec
mov
inc
lds
pop
sub
outsl
jl
and
sti
cmpsl
xor
jg
or
add
mov
mov
or
add
jle
out
adc
inc
es
pop
flds
or
aad
push
adc
push
inc
sbb
or
adc
pop
popa
xchg
add
ret
xchg
pop
or
outsl
ror
stc
mov
outsl
jno
lahf
push
add
repz
in
cwtl
push
ret
iret
cmc
ja
and
lods
push
cmp
out
jnp
fwait
je
fwait
xchg
in
ljmp
loope
out
fchs
movsb
sbb
mov
sub
cmp
cmp
xor
loopne
cmp
inc
in
shll
or
jns
push
cmp
mov
sbb
out
cmp
pushf
loopne
sub
repz
std
ror
and
jp
and
into
shl
fimuls
mov
mov
cmp
pop
push
mov
sbb
jge
mov
sbb
jbe
dec
mov
out
jge
mov
adc
push
add
jl
pop
push
outsl
pop
pop
sti
mov
xchg
mov
push
sub
in
cld
rcrl
nop
mov
aam
sub
lret
xchg
in
pop
xor
jmp
sbb
std
mov
cmpb
movsb
in
cmp
adc
adc
call
jg
fsubrs
pop
xor
push
aaa
mov
push
mov
and
jns
cwtl
pop
push
xchg
mov
jp
lea
sbb
sub
imul
sub
jmp
xor
and
jbe
shufps
test
cmp
xchg
add
fstpl
fstpt
mov
mov
push
inc
orl
hlt
cmp
cmc
or
mov
pop
add
leave
fisttps
jns
push
mov
and
jae
push
push
fsubs
repz
jmp
popf
mov
andl
add
out
jb
cmpsl
mov
nop
mov
jp
jmp
cwtl
mov
aas
lods
inc
push
push
or
das
mov
gs
fistl
push
xchg
data16
fidivrs
mov
mov
add
insb
shll
shl
jb
repnz
mov
fs
and
mov
addl
mov
or
mov
push
rorl
mov
repz
jg
mov
sub
aaa
std
ret
jae
hlt
pop
jecxz
cmpl
pop
sbb
adc
mov
fldl
xor
xor
sub
cmp
lds
sub
sbb
sbb
pop
out
out
stos
push
mov
test
cmp
sub
arpl
mov
mov
push
icebp
out
scas
fwait
push
clc
pop
jno
cmp
jns
nop
ds
jmp
loope
fcompl
inc
mov
aaa
test
pop
shll
push
lret
cmpsl
cwtl
inc
pop
inc
xor
scas
insl
hlt
push
mov
push
popf
mov
rcrb
outsl
ss
add
jns
mov
shll
das
jbe
push
iret
stc
cwtl
testl
pop
fstl
aas
push
jg
inc
mov
xor
dec
daa
call
aam
repz
aas
jo
jg
std
push
dec
xchg
xlat
push
xchg
imul
pop
mov
rclb
dec
pusha
cmp
popf
sbb
jg
je
iret
cwtl
adc
cwtl
pop
cmp
inc
cmc
mov
sbb
cltd
inc
sub
mov
cld
add
clc
add
in
pop
or
xchg
mov
jno
or
movsb
sbb
or
or
mov
popf
add
xor
lods
adc
xchg
testl
loop
iret
sub
out
push
pop
scas
xlat
call
push
das
sub
js
adcl
sub
cld
sahf
jmp
shrb
inc
out
adc
push
mov
xlat
cwtl
ja
or
sub
leave
lods
movsw
mov
call
push
xor
xchg
scas
nop
add
ret
andl
push
push
test
mov
push
adc
rcrb
in
fsts
jmp
jns
pop
fs
clc
addr16
lds
xlat
jmp
ret
pop
rcr
xchg
popa
sti
jno
push
testb
cs
hlt
aas
das
sti
or
pop
pop
loopne
std
or
and
and
sub
or
in
or
pop
sbb
iret
xchg
pusha
fs
inc
popf
pop
xor
push
sub
lahf
pusha
call
lock
sbbl
sub
aad
inc
cmpl
movsl
adc
mov
and
call
movsl
cmpl
jp
sahf
mov
push
sbb
jo
test
xchg
jns,pt
add
mov
push
dec
xchg
test
or
jg
enter
or
push
gs
movsl
cli
jbe
mov
or
adc
push
pop
xor
das
movsl
cli
loope
daa
scas
pusha
enter
push
fwait
jbe
push
leave
aas
inc
push
cmp
or
or
cmp
cs
lret
dec
addr16
and
ret
sahf
pop
rclb
jbe
dec
xchg
cltd
lcall
pop
jae
dec
mov
sub
dec
pop
xchg
inc
dec
jns
mov
gs
inc
int3
divl
sbb
fistpl
mov
stos
lea
pop
sub
inc
sti
xrelease
add
pop
cmc
icebp
mov
aaa
in
cmp
xchg
mov
add
stc
lahf
mov
adc
mov
cmp
add
movsl
outsb
cld
push
cmpsl
sub
and
mov
pop
sub
repz
ficoms
xchg
test
inc
test
cs
add
cwtl
and
aad
mov
mov
xchg
movl
adc
and
pushf
cltd
lods
or
xchg
movsl
xlat
inc
cld
add
cmc
sbb
in
cltd
movsb
add
shrb
cmp
lahf
push
fists
sub
cld
mov
cltd
pop
jae
mov
push
sub
repz
sub
adc
scas
cmp
push
xor
sbb
sub
out
aad
dec
mov
pusha
leave
mov
add
enter
dec
daa
ja
imull
jle
mov
fdivs
or
shrb
jge
cmovo
mov
hlt
ja
push
xchg
mov
xchg
pushf
add
sti
fldt
in
pusha
nop
ss
imul
in
hlt
loopne
fsubrl
ret
aad
loopne
iret
jg
mov
push
sub
outsl
mov
sub
mov
sbb
in
push
filds
pushf
inc
scas
xor
in
mov
imul
fmuls
pushf
les
mov
mov
push
aas
xor
lcall
in
ficomps
dec
push
xchg
push
push
fwait
xor
add
or
or
lret
outsb
mov
je
cmpsb
push
clc
call
mull
jne
in
add
inc
and
push
add
inc
sbb
mov
add
scas
imul
out
jb
movb
mov
cmp
clc
je
in
js
sbbl
jb
mov
insl
jecxz
out
aaa
scas
cmp
ret
push
mov
rcrb
mov
push
adc
xchg
mov
aas
out
push
leave
add
inc
inc
aad
jnp
mov
and
into
xor
fldl
push
pusha
add
fldcw
or
hlt
push
jne
ret
and
and
lahf
mov
or
lock
cmp
out
nop
and
in
xchg
test
hlt
adc
sub
adc
bound
es
lods
or
movsl
jnp
push
pop
sti
sbb
jnp
sbb
push
int3
inc
inc
mov
mov
test
jg
repz
aam
mov
and
add
rcl
push
fsubs
sarb
inc
push
imul
add
fcoms
gs
dec
insb
enter
in
int
pop
pusha
bound
cld
mov
in
les
ljmp
xorl
and
jbe
push
or
outsl
mov
cmpsl
fwait
push
mov
sub
and
mov
pop
add
xchg
cwtl
cmp
ja
xor
popa
shlb
lcall
sub
insl
xor
mov
test
fsubrs
rcll
xchg
ffree
dec
mov
in
nop
pop
jmp
lahf
add
xchg
sub
notl
or
cmp
addr16
inc
popf
pop
cmpsb
push
ficoml
dec
out
inc
xchg
clc
xchg
fldt
pop
sbb
inc
gs
cmp
js
cmp
test
out
cmp
or
cmpl
cmc
and
xchg
and
repnz
xor
in
mov
mov
push
test
xchg
fwait
cli
hlt
shrb
push
cmp
test
add
into
xor
pop
leave
outsb
sbb
push
sub
lods
push
pusha
inc
jmp
rcrb
gs
mull
sbb
pusha
pop
scas
ret
fucompp
test
mov
imul
dec
xchg
popa
push
push
cmp
repz
popf
add
jnp
pop
mov
cltd
test
mov
popa
add
pusha
xor
rcll
rcrl
lahf
pushf
jge
pop
call
popa
lea
pop
fisttpll
cmp
or
cmpsb
inc
dec
and
adc
stos
fwait
dec
subb
sub
test
jb
mov
cs
mov
repz
mov
sar
sbb
sbb
pop
jmp
xor
lret
jnp
pop
shr
push
stc
ds
sbb
add
mov
lret
scas
in
lock
push
aas
adc
xor
cmc
inc
cmpsb
xchg
andl
test
xorb
stc
cmpsb
sub
jns
jl
jns
xchg
addr16
fwait
addb
xchg
sti
pusha
rolb
push
mov
push
insl
pop
xchg
repz
pop
test
or
shll
jge
adc
push
aad
pusha
cmp
mov
bound
adc
inc
lret
inc
xchg
xchg
fidivs
jg
and
adc
cltd
lds
idivl
sbb
mov
jl
xor
inc
loope
jno
ljmp
push
jl
xor
ss
bound
sbb
lret
inc
arpl
add
inc
addr16
pop
dec
cmpsl
pop
jb,pt
sbb
adc
adcl
stos
popa
cmpsb
out
cmpsb
stc
iret
loopne
push
fwait
stos
add
or
das
xchg
jmp
add
sti
and
scas
mov
clc
call
sub
or
sub
enter
jno
push
imul
pop
cmp
inc
xlat
push
filds
jle
mov
adc
mov
jbe
xchg
mov
jl
stos
jle
shlb
movsb
stos
jae
insl
mov
pop
imul
rorl
pop
arpl
scas
xchg
js
adc
es
sub
sub
mov
ljmp
mov
into
cmp
cli
sub
jne
xchg
push
fnstenv
cmp
cmp
fucom
pop
mov
out
ret
and
cmpl
js
inc
movsl
mov
xor
add
push
sbb
xor
xchg
lcall
jo
xor
and
std
cmp
pushf
iret
mov
dec
in
pop
push
pop
lahf
add
pop
movsl
sahf
pushaw
dec
cmp
rclb
icebp
inc
jp
mov
mov
jb
lret
xor
ret
mov
xchg
pop
hlt
adc
xor
sbb
ret
into
sub
lret
int3
pop
dec
push
insb
push
idivb
pop
dec
test
hlt
pop
xor
fwait
or
pop
into
data16
sarb
aaa
cmpsl
sarb
mov
fcompl
cmc
mov
insb
dec
mov
cmpsb
pop
xchg
movsl
mov
sub
stc
xor
jnp
inc
or
adc
xchg
shlb
cwtl
and
lcall
mov
test
xchg
sti
int3
popf
data16
add
orl
popa
or
rol
xchg
pop
int3
xlat
sbb
and
addl
push
sahf
dec
pop
out
cld
or
cmpsb
push
pop
jns
fistpl
scas
in
dec
popf
loope
out
stos
gs
push
aam
pop
sub
sbb
and
movsb
xorb
mov
pop
cmp
and
or
jo
push
gs
shrb
and
sub
adc
dec
mov
lcall
sub
sbb
fiaddl
jns
jns
pop
unpcklps
fiadds
lock
sub
divb
jmp
adc
push
test
add
scas
dec
mov
push
jg
xchg
mov
mov
mov
adc
jle
mov
gs
mov
mov
inc
mov
xchg
and
sub
out
pop
gs
mov
xor
fs
data16
idiv
fldcw
in
outsb
hlt
pop
add
setp
mov
mov
aad
inc
fcmovnu
es
push
in
arpl
cmp
push
dec
sbb
push
and
and
push
fsubs
call
mov
push
leave
test
adc
stos
ss
push
sahf
pusha
sub
mov
sti
sub
mov
jl
std
dec
mov
mov
int
sbb
push
mov
jle
sub
bound
dec
mov
je
std
test
aad
xor
pop
and
fisttpl
cs
dec
inc
mov
popa
fisubs
sub
arpl
inc
shlb
sub
or
xor
fildl
out
lods
pusha
mov
mov
cmp
pop
out
roll
push
dec
pop
pop
cmp
dec
mov
andb
cmp
in
loopne
add
xor
out
pop
jnp
mov
jae
ss
push
fs
idivb
xchg
jb
jecxz
mov
mov
xor
movsb
pop
jp
insb
xorl
pop
sub
aam
fucomp
clc
iret
sbb
jne
lret
pop
xchg
cwtl
jb
add
ljmp
jg
js
or
jp
ja
adc
movl
cmpb
or
dec
rcll
push
push
out
test
cmp
mov
pop
lods
shlb
or
ss
mov
lret
lret
js
and
dec
test
pop
loopne
cwtl
in
test
push
int
xchg
sbb
cmc
or
pop
aad
popa
in
push
sbb
cmpsb
add
ret
pop
cmp
jbe
dec
add
cmc
xor
xchg
or
xlat
sti
insb
cltd
pop
pushf
sub
xchg
xchg
xor
and
popa
inc
jecxz
loop
cmpsb
jno
pusha
xor
cmp
and
xchg
dec
jl
xchg
jo
push
fmul
int3
cwtl
iret
sbb
jae
cmp
loopne
mov
xchg
xchg
hlt
mov
lcall
or
cld
loop
cwtl
cmpsb
pop
ja
inc
mov
jne
xchg
test
mov
sub
daa
movsb
stos
rcrb
lods
mov
mov
xor
fsub
fistpll
and
addl
aaa
sbb
push
jle
es
adc
or
mov
repz
sti
aaa
loopne
scas
xor
test
sub
es
out
aad
gs
jp
inc
mov
push
pop
push
mov
sub
out
das
ljmp
pop
repz
mov
inc
jle
mov
out
pop
stos
xchg
vmovd
adc
stc
test
daa
data16
or
je
mov
stc
out
jecxz
out
mov
pop
push
or
mov
insb
pusha
jne
cs
outsb
inc
cld
stos
dec
xchg
test
aaa
xor
push
push
mov
jg
out
test
cltd
jp
and
pop
test
jle
sbb
test
rorb
les
ltr
cld
sbb
push
mov
sarb
sub
adc
sub
pop
push
pop
jno
andl
aaa
or
loopne
xchg
and
dec
icebp
pop
dec
dec
shll
std
data16
push
dec
xor
test
and
sub
arpl
movsl
mov
cmp
jns
arpl
out
adc
test
jbe
push
mov
pop
dec
in
xor
or
ja
sub
cld
push
ret
ds
pop
cs
cmp
call
cmp
pop
scas
test
mov
aad
jmp
mov
push
or
jl
sbb
cmp
or
xchg
out
leave
sub
fdivr
psubusw
ds
cmp
xchg
jecxz
pop
scas
repz
add
push
xchg
push
cmp
cli
cmpsb
or
fmuls
mov
push
rolb
dec
xor
arpl
loope
mov
or
iret
mov
icebp
push
mov
stos
int
add
rcll
push
imulb
es
int3
sbb
and
shll
outsl
or
insb
inc
test
les
int
cmp
cmpsb
aaa
pop
mov
in
and
insb
pop
hlt
and
pop
or
cmp
jns
mov
mov
fidivrl
out
shl
xlat
daa
hlt
jb
mov
ss
jb
sub
arpl
in
jmp
cmpsb
sbb
sarl
in
mov
aam
and
inc
add
rcrl
fs
push
stos
sub
cld
mov
xorl
mov
fsubl
and
xor
jge
dec
ss
in
dec
bound
xchg
out
rorb
mov
loop
gs
mov
xor
ds
xchg
jae
daa
ss
je
sti
xchg
sahf
sbb
sarb
jecxz
jns
outsl
fldt
out
lret
sbb
inc
or
test
xor
cmp
sub
out
cmp
jg
lret
fucomp
cmc
add
sbb
lods
sbb
xor
out
dec
dec
xchg
dec
lea
adc
adc
orl
sub
les
dec
dec
mov
or
arpl
insl
xor
icebp
mov
scas
pusha
cmp
mov
dec
mov
test
jle
cmpsb
lret
mov
pop
sbb
xchg
cmc
andb
cmpl
fsubs
orl
out
push
nop
jae
cmpsl
xor
cmp
lock
movsl
xor
sarl
or
cli
imul
jb
outsb
fs
int3
inc
or
lret
sbb
or
xchg
icebp
lcall
lock
mov
mov
sub
scas
outsb
mov
mov
pop
xor
pop
adc
mov
roll
les
add
push
mov
call
test
aad
out
addr16
adcl
outsb
push
pop
xchg
int3
imul
mov
mov
repnz
aas
js
jnp
out
xor
and
or
mov
ds
sbb
cltd
add
in
add
hlt
mov
cs
xchg
pusha
stos
std
scas
nop
mov
or
sbb
test
aad
cmc
popf
mov
movl
test
fsubl
mov
cmc
aas
fs
addr16
push
stos
xchg
shl
clc
inc
fadds
jecxz
rol
push
xchg
xor
aad
lret
adc
inc
pop
pop
nop
aaa
add
inc
mov
arpl
pop
subb
mov
scas
xchg
xchg
lods
nop
jne
mov
push
ss
xchg
addr16
imulb
test
rolb
push
in
and
test
sbb
and
les
stc
jnp
push
and
aam
mov
loopne
lods
pop
lods
ret
mov
popa
pushf
lock
adc
in
sub
fimull
xchg
xlat
xchg
outsb
cmp
mov
ret
sbb
jo
rcrb
out
int
test
sbb
mov
in
jae
inc
sub
push
cmp
test
je
les
and
and
fdivrs
mov
lret
hlt
push
lods
loopne
push
fadd
sbb
jle
call
es
mov
mov
xchg
pop
mov
je
rolb
pop
mov
pop
mov
popl
pusha
les
into
pop
mov
in
sub
xor
inc
lock
lret
jbe
push
xchg
cmp
rol
sbb
push
stos
push
mov
mov
out
push
and
jnp
in
rcr
cmc
sbb
jno
lret
das
decl
inc
hlt
fistpll
sub
ja
jno
inc
dec
jbe
test
adc
cmp
loope
sbb
push
cs
cmc
add
sub
pop
lret
dec
jge
mov
mov
and
loope
lods
addr16
jp
jp
or
out
or
sbb
mov
jo
dec
dec
jo
fldcw
ljmp
lods
flds
cmpsl
push
hlt
mul
ret
cmp
aam
sbb
cmpsl
sti
jno
cwtl
adc
sbb
or
sti
std
stc
sbb
bound
test
les
adc
inc
push
subl
mov
push
jp
add
cmp
rolb
adc
mov
xchg
jl
cmpsb
pop
push
js
inc
mov
sbb
pop
jmp
in
enter
pushf
cmp
inc
pop
sahf
cwtl
mov
xor
out
cmp
ret
push
xchg
xor
pop
rorl
sarb
popa
scas
cld
pop
push
jmp
xchg
dec
xlat
jp
push
add
mov
fcomps
repz
int
je
lahf
cmc
jge
mov
lret
mov
lods
imul
sbb
hlt
ljmp
push
fucomip
stc
add
pop
lea
add
call
cltd
adc
int
test
add
jno
ret
in
jno
hlt
or
add
icebp
mov
xchg
cwtl
sbb
repz
cmc
lds
mov
adc
add
das
iret
aam
in
in
jns
jb
fnstsw
fsubrl
or
xor
daa
mov
std
sub
sbb
sarb
test
inc
or
add
pop
je
jl
mov
hlt
mov
sbb
sub
rolb
or
lahf
vcvtsi2sdl
xchg
cmp
fwait
add
mov
add
in
je
cmp
jno
mov
leave
jmp
addr16
jne
hlt
inc
test
inc
ljmp
adc
or
insb
sub
js
ret
in
pop
mov
add
jno
scas
adc
push
jb
popa
push
out
pop
sbb
fldcw
mov
out
push
lea
xchg
scas
in
jmp
cmp
lret
dec
push
mov
gs
dec
test
jecxz
or
mov
addr16
or
ret
xor
cmpsb
lods
lods
int3
xchg
mov
mov
pop
mov
push
push
push
mov
pushf
int
push
xchg
cmp
xor
cli
std
popf
into
loop
stos
pop
push
jno
shl
dec
and
jmp
mov
and
sahf
jp
aaa
test
mov
xchg
or
push
or
hlt
inc
add
call
std
mov
inc
xchg
popa
xlat
in
jne
popf
cwtl
gs
add
adc
jmp
mov
sbb
sbb
mov
and
es
sbb
aad
stos
sub
lcall
jp
shll
inc
mov
cli
xchg
les
arpl
xchg
pop
aaa
movsb
inc
lods
in
aam
movsb
out
inc
xchg
fidivrl
inc
xchg
roll
lahf
out
mov
pop
test
jmp
movsb
scas
ja
scas
cmp
out
sub
sbb
repz
sahf
into
aad
fiaddl
push
jo
out
xchg
in
mov
cmp
ds
gs
mov
cwtl
sbb
repnz
cli
adc
or
push
inc
mov
je
xchg
imul
push
shrl
cmpb
ret
and
push
dec
mov
sbb
frstor
mov
add
pop
sahf
xchg
lcall
mov
stos
mov
bound
das
sarl
and
cmp
cmp
push
inc
xchg
mov
push
bnd
adc
adc
mov
mov
shl
mov
out
in
repnz
shll
loop
out
dec
leave
pop
jmp
dec
test
xchg
rcrl
pop
jnp
rcll
in
dec
push
xchg
add
dec
adc
clc
cmpsb
cmpsb
inc
xlat
jnp
mov
push
cmp
ja
mov
subl
xchg
or
jmp
cmp
fs
mov
fwait
dec
mov
sbb
inc
sub
gs
or
jns
clc
es
or
iret
pushf
fdivr
mov
push
mov
jmp
ficoml
ficoml
sbb
xlat
dec
jg
insl
les
outsb
aam
jg
push
mov
mov
jb
inc
repnz
sbb
jl
pop
jmp
mov
sarl
ds
mov
sub
pop
lock
data16
push
js
and
add
aam
inc
movsb
push
xor
divb
sbb
jp
push
xchg
out
test
dec
inc
or
mov
das
inc
pop
push
inc
inc
inc
pop
arpl
rcrb
push
and
in
inc
mov
sbb
pop
dec
and
xor
lea
xchg
sbbl
cli
push
sbb
outsl
dec
xchg
ja
scas
aaa
sahf
and
repz
mov
or
xchg
sbb
xor
in
dec
mov
stos
push
test
in
and
and
jl
repz
pop
xchg
fcompl
aam
add
pop
or
jle
dec
mov
push
xchg
or
test
das
outsl
jmp
adc
cmpsl
xchg
das
and
or
ss
mov
push
mov
cli
test
cltd
and
xor
inc
push
mov
test
inc
cmp
addr16
add
test
and
outsl
test
arpl
inc
sub
lock
mulb
imul
jbe
cmpsl
mov
jae
lea
xor
push
dec
inc
pop
popa
lods
into
jle
imul
xchg
in
cwtl
lods
mov
popf
fldcw
mov
lcall
push
dec
fnstenv
lods
in
gs
rcrl
jbe
sbb
mov
inc
lcall
or
sbb
scas
stos
das
mov
mov
push
fnstsw
mov
mov
sbbl
xor
mov
jno
mov
mov
test
faddl
pop
adc
fdivrl
mov
ljmp
fsubrs
cmp
int
nop
ds
shl
mov
nop
lods
movsl
sbb
mov
sbb
in
inc
sbb
aaa
inc
mov
cltd
lea
pop
bswap
sub
push
jbe
push
push
adc
xor
pop
imul
addb
sbb
shlb
push
or
shrb
pop
es
inc
jmp
and
jns
jp
push
addr16
dec
adc
ret
xor
mov
adc
xor
cmp
jb
inc
cmp
loopne
pusha
mov
xchg
xor
xchg
lods
shlb
adc
jmp
aas
and
or
pop
pop
loopne
mov
and
sub
mov
push
rorb
xor
dec
test
js
pop
negl
aas
fxch
decl
dec
out
js
or
outsb
loopne
and
shrb
jbe
movsl
pop
inc
sub
jmp
mov
in
gs
int
xor
pop
push
pusha
xor
jp
outsl
fs
sub
mov
pop
movsb
xor
push
jnp
cmp
loop
xor
push
popa
mov
mov
jne
loop
aam
mov
push
sub
scas
out
adc
rorl
xchg
out
jns
lods
je
lcall
fisubl
sbb
ret
lret
xchg
repz
xchg
push
pop
xchg
loopne
jae
dec
xor
sbb
lock
shlb
pop
psrlw
xchg
pop
pop
call
pop
sub
xchg
inc
and
mov
mov
pop
cmp
mov
lds
mov
xchg
xchg
stos
je
sbbb
mov
sbb
push
sub
xchg
pushf
xchg
mov
mov
cmp
mov
lcall
clc
scas
movsb
out
sbb
scas
rorl
in
inc
cmpsl
shr
dec
pop
jns
push
mov
dec
and
in
cmp
mov
cmpl
mov
fcoms
fwait
lret
shlb
imul
push
or
sti
push
pop
fidivrl
fwait
dec
rcrl
setle
inc
xchg
movsl
jne
sbb
iret
std
adcb
ss
jmp
or
icebp
lea
mov
sub
or
inc
jp
icebp
mov
ficoml
dec
fdivrp
push
jne
in
adc
sub
fists
dec
in
push
shlb
aas
sub
jge
and
lcall
mov
jge
fistpl
cmpl
rcrb
mov
aas
pop
mov
jo
mov
test
mov
cmp
add
hlt
pop
push
popa
loopne
les
push
mov
test
repz
lods
add
enter
in
add
dec
adc
and
pop
or
xchg
or
jo
in
mov
sarb
notl
sbb
push
and
jmp
add
jmp
adc
das
mov
sbb
clc
inc
push
fsubrs
sub
call
lds
bound
mov
rclb
ret
mov
pushf
sbb
and
icebp
call
jl
and
mov
mov
cld
pop
push
jecxz
mov
lods
shll
pop
jg
push
pop
popa
mov
pop
scas
mov
xor
cmp
lock
sub
mov
popa
push
cwtl
jne
xchg
inc
pop
cmp
stos
jg
out
sbb
fistl
stos
int
add
popa
insl
addr16
pop
out
xor
mov
mov
fldcw
cmc
mov
fdivrp
popa
adc
dec
inc
bound
jae
xchg
dec
xchg
sbb
push
push
cwtl
and
or
or
xor
and
pop
jbe
pushf
push
les
test
and
pop
push
xor
pop
jl
imul
stc
imul
xor
push
mov
iret
stos
mov
inc
test
sub
adc
add
std
adc
enter
sbb
mov
or
mov
in
push
mov
addr16
dec
push
xchg
out
xlat
pop
loop
push
cmc
repnz
cmc
xor
call
pop
push
enter
sub
fwait
jae
ja
pusha
loopne
or
sarl
push
test
repz
mov
mov
push
pop
das
int3
mov
cmp
jnp
mov
xor
sub
ror
pop
cli
sbb
out
xlat
sbbl
cmp
xor
frstor
mov
jp
lahf
push
repz
sbb
cmpb
aad
clc
clc
aaa
inc
cmp
sbb
addr16
jbe
je
fucomip
not
aas
mov
addl
cmc
ds
jns
mov
xlat
inc
popa
jo
or
mov
outsb
sbb
sub
mov
xchg
lods
cmpb
test
in
adcb
lret
in
adc
loope
insl
mov
mov
sti
sbbb
adc
sub
mov
adc
enter
icebp
bound
es
xor
xor
inc
jle
adc
and
jnp
adc
xchg
adc
sbb
pop
out
jo
xor
and
cmp
mov
or
push
push
lahf
and
push
xor
hlt
pushf
test
xor
sbb
hlt
in
lea
or
mov
clc
cmc
adc
rcrl
popa
insb
stc
and
push
push
mov
push
lea
in
test
repz
pop
and
fwait
jbe
aas
fidivs
push
add
rcll
mov
subb
addr16
test
push
dec
inc
hlt
aas
lcall
arpl
inc
xor
inc
push
push
mov
dec
das
fildl
fwait
cmp
cmp
and
clc
push
and
mov
outsb
aad
orl
xor
ja
jns
mov
adc
push
jbe
sub
inc
push
aaa
mov
xchg
mov
jno
rcl
pop
cld
xchg
adc
cs
add
push
xchg
sub
pushf
add
jo
sub
leave
push
jnp
ja
stc
inc
shll
fsubp
inc
adc
imul
shlb
and
mov
test
push
inc
les
fisubrl
xor
inc
add
jecxz
and
enter
loop
sbb
sub
sub
pop
cmpsb
add
pop
mov
insl
mov
mov
in
mov
imul
shlb
cwtl
aaa
push
mov
pop
rolb
in
sbbb
loopne
fwait
add
or
mov
sbb
adc
push
inc
popf
clc
and
cmp
pop
and
out
cld
mov
jecxz
test
aas
mov
fsts
inc
mov
xor
es
mov
and
xor
call
add
out
inc
fs
insl
jecxz
cvtpi2ps
popf
mov
mov
jle
push
jo
mov
loop
outsb
adc
cld
out
jmp
push
ja
xchg
or
jp
call
or
pop
xchg
mov
pop
inc
push
push
inc
rorb
std
faddl
sub
adc
jmp
cmp
inc
add
sub
mov
dec
shrb
js
mov
and
sbb
sub
scas
ss
push
pop
out
xor
ja
jle
and
mov
add
into
push
adc
and
dec
clc
movsb
sbb
sbbl
imul
cmc
jge
pop
cli
inc
mov
push
insl
dec
sub
sahf
mov
push
orl
dec
jbe
inc
sub
mov
dec
adc
mov
jge
ja
fnsave
jl
mov
jae
imul
add
aas
push
inc
movsb
stc
jp
mov
xchg
xchg
push
test
push
movsl
mov
cld
cmp
push
jno
daa
add
popa
xor
lret
sbb
pmaddwd
add
dec
mov
mov
mov
iret
push
pusha
jg
leave
inc
fidivl
or
jmp
pop
sbb
and
dec
les
inc
push
pop
inc
and
lods
les
mov
cli
mov
push
sahf
ror
rorl
popa
pop
dec
daa
push
cmpsl
push
sbb
adc
pop
pop
aad
and
mov
lods
pop
ficompl
dec
add
pop
adc
or
test
cmc
xor
jg
mov
pushf
jnp
or
mov
addr16
popa
mov
in
bound
stos
aaa
sbb
add
mov
cmc
adc
fs
sub
mov
aaa
push
jno
or
pop
xor
andb
lods
por
popa
add
xchg
outsb
sub
jecxz
repz
repnz
adc
fsubrl
arpl
scas
inc
rorl
xor
mov
push
paddsb
push
stos
rorl
ss
mov
xchg
ja
std
addl
xchg
std
sub
lods
int3
push
adcb
inc
push
bound
test
jmp
test
scas
push
scas
jb
imulb
fdivl
pop
divb
in
cltd
jmp
lahf
push
sub
pop
test
dec
xchg
repnz
es
dec
add
imul
fnstcw
cmpsl
insl
xchg
push
and
rep
das
add
cs
and
dec
sbb
in
cwtl
mov
repz
mov
inc
pop
adc
cmpsl
xor
inc
fwait
dec
aaa
int3
and
lret
fcmovnbe
jae
notl
lret
xchg
inc
leave
xchg
dec
shl
mov
sahf
sub
insl
aaa
cmp
mov
pop
bound
xchg
cmpsb
scas
lods
scas
xor
pop
pop
mov
xchg
mov
cmpsb
int3
enter
insl
and
inc
mov
insb
cmp
jo
nop
lods
es
mov
fcomp
test
sub
movsb
xchg
inc
dec
pop
mov
dec
pop
or
outsb
fldcw
ss
or
mov
mov
imul
push
jae
scas
sub
stc
call
inc
or
scas
loopne
movsb
xor
pushf
fidivl
add
mov
sub
lahf
stos
iret
dec
xor
dec
jmp
mov
rcl
jnp
push
jno
paddw
mov
push
lret
xor
bound
xor
outsb
xor
push
mov
sbb
ret
std
in
push
jge
dec
mov
aas
xor
repnz
jo
inc
js
rcrl
jge
xchg
push
and
inc
xor
in
mov
cmp
lcall
add
adc
mov
adc
test
lahf
int3
scas
test
shrb
mov
inc
cmc
adc
fstl
xchg
stc
adc
movsl
idiv
xor
mov
mov
add
lret
mov
pop
mov
and
adc
outsb
pop
jg
stc
push
push
nop
les
in
inc
fistpll
inc
xchg
js
dec
ja
mov
imul
inc
jmp
test
dec
pop
sbb
insl
shrb
rolb
pop
add
push
xchg
int3
popa
inc
sbb
insl
dec
sub
dec
add
iret
lret
nop
add
cmp
out
push
movb
jnp
sbb
repnz
pop
adc
push
or
leave
and
js
and
ja
mov
shufps
das
adc
mov
jg
neg
fwait
mov
lcall
jge
push
neg
cs
stos
xchg
fstpt
pop
loop
std
adc
push
pop
push
push
dec
lahf
lods
pop
iret
imul
cmpb
leave
dec
and
mov
or
in
ja
jo
push
iret
test
inc
mov
mov
ret
pop
add
cmp
mov
jle
xlat
addr16
mov
int
fdivl
inc
mov
or
popa
push
in
mov
aaa
mov
repz
jp
sbb
dec
into
ret
aaa
loop
scas
mov
sbbl
inc
cmp
je
mov
enter
mov
hlt
add
scas
mov
sbb
jle
xchg
sahf
stos
mov
mov
push
fstpl
iret
outsb
fbld
xor
pop
mov
push
push
gs
mov
mov
push
jae
pushf
jo
cs
mov
fidivrl
jle
add
sbb
push
mov
cli
add
xlat
fmull
stc
push
xor
mov
int
adc
add
pusha
es
dec
jl
jo
movsb
push
lods
jb
push
pop
jmp
bound
iret
add
stc
cmp
cmp
mov
aad
push
push
push
ja
cmp
adc
jp
xchg
pop
pusha
xchg
mov
cld
jnp
push
xor
xchg
xor
mov
loop
js
mov
push
sarb
add
add
aas
negl
loope
mov
cli
cmp
jle
inc
repz
insl
mov
or
clc
int
pop
inc
pop
sbb
cmpsb
mov
nop
pop
cmp
xchg
or
shrl
inc
mov
pop
aaa
dec
testl
pop
enter
xor
fldcw
pop
scas
loop
xor
test
cwtl
lahf
cli
sti
movsl
test
inc
mov
shrb
push
mov
stc
mov
mov
adc
scas
add
pop
outsl
in
arpl
aad
jnp
icebp
insb
sti
js
fwait
adc
pop
or
inc
ret
out
xor
inc
xchg
jmp
roll
xchg
outsb
adc
cmp
fcmovbe
push
xor
xorl
je
mov
cmp
or
ret
pop
out
cli
and
test
es
aaa
push
fstpt
movsb
lds
dec
daa
xor
cmp
pusha
jl
imul
mov
lahf
mov
popa
mov
xchg
popa
push
in
bound
js
lret
es
jne
int
and
das
push
mov
in
ja
movsl
call
call
sti
test
popa
xchg
mov
sub
xlat
cmp
cld
mov
jecxz
in
call
mov
mov
lahf
dec
push
sbb
in
or
stc
xor
addb
lods
movsl
lods
rorl
outsb
data16
lcallw
sub
in
fsubs
adc
lahf
push
repnz
xor
movsb
cltd
jnp
mov
aas
popa
inc
mov
mov
je
aad
pop
dec
popl
jge
xchg
jle
subl
enter
inc
sbb
jl
mov
loop
xor
xor
pop
int
je
pop
std
movsl
mov
cmp
adc
add
xchg
jo
add
adc
imul
jb
and
cmpsb
test
outsb
xor
sti
lret
pop
insl
div
fs
not
sub
push
pop
in
sub
push
adc
je
daa
js
mov
mov
mov
shrl
inc
mov
rcr
lods
sub
icebp
lcall
sub
push
jle
cmp
out
scas
popf
pop
push
jmp
sbb
mov
cmp
ss
cwtl
adc
or
mov
cs
subb
test
mov
inc
dec
fistpl
xor
clc
jns
mov
repnz
xor
loopne
hlt
dec
clc
decl
add
jg
mov
mov
imul
or
bound
shrb
xchg
aad
das
sbb
adc
mov
and
leave
icebp
or
fildll
popf
mov
xchg
pop
fcmovbe
inc
and
jge
inc
add
outsb
fcomip
das
ficompl
mov
cmp
cmpl
xchg
xor
dec
mov
std
scas
out
xchg
add
sub
dec
push
mov
mov
push
enter
lock
xor
xchg
xor
xlat
push
rolb
fisttps
icebp
push
es
and
nop
clc
ret
cmpsb
je
cmp
push
loopne
pop
add
inc
sbb
test
cmc
xchg
jns
sub
jbe
popa
sub
cwtl
pop
das
test
stc
sbb
roll
inc
mov
arpl
insl
xor
mov
jae
or
or
loope
shlb
push
mov
push
notb
sub
lock
insl
dec
sub
pop
in
stos
inc
pop
mov
mov
mov
cmova
adc
out
mov
mov
arpl
es
sub
and
add
insl
daa
push
add
stc
mov
dec
cltd
loop
dec
dec
enter
fisttps
push
inc
mov
cmp
jo
pop
add
test
lcall
ret
mov
mov
outsl
jp
xchg
or
aaa
sbb
dec
and
jnp
imul
inc
fisubrs
sub
ret
bound
int3
add
push
das
or
pop
shlb
sub
inc
leave
adc
lret
in
pop
pusha
or
adc
pop
mov
sub
and
inc
divl
inc
mov
popf
sub
dec
mov
out
popa
pop
and
mov
sub
shll
sub
xchg
sub
add
mov
adc
loope
fiaddl
inc
hlt
xchg
out
mov
punpcklbw
faddl
repnz
sahf
push
aam
jp
xor
sub
loop
adc
dec
lcall
fwait
dec
repz
insb
arpl
and
cmp
data16
cmpl
test
sub
fs
insl
imul
lea
push
cwtl
adc
xchg
cwtl
or
mov
xor
sbb
mov
ljmp
shrb
scas
lods
scas
mov
sar
dec
cmp
cwtl
add
popf
es
std
clc
js
insb
leave
repz
pop
jae
mov
inc
aaa
fildl
adc
jb
mov
bound
pop
daa
add
sbb
cs
push
mov
les
inc
shll
push
mov
lock
jo
hlt
mov
fldenv
divl
mov
cmp
lea
sbb
sbb
push
js
xchg
sub
and
xchg
xchg
dec
push
loopne
push
or
xorl
jb
fs
adc
xchg
lock
cs
mov
shrb
out
stos
mov
mov
sbb
loope
ss
dec
ret
enter
cmp
inc
mov
out
mov
ja
or
fsubrl
ret
or
sub
xor
aam
dec
pop
xchg
jp
inc
dec
mov
es
cmp
and
push
mov
jo
xor
inc
loope
ljmp
popf
adc
mov
lret
jg
scas
xchg
arpl
mov
cwtl
jmp
into
aad
mov
xor
push
mov
push
ffree
jp
es
pop
hlt
mov
push
out
push
fidivrs
cmp
pop
fstps
mov
mov
pop
mov
sub
lret
pop
scas
jle
xor
cmc
sub
or
xor
pusha
add
lret
rcrb
or
xchg
lods
imul
push
out
push
enter
adc
add
fdivs
pop
jne
hlt
stos
mov
mov
xor
loopne
xor
sbb
loop
pop
sbb
cmp
pop
repnz
lret
inc
fldt
pop
sub
sbb
jp
sbb
sbb
test
fucom
cmp
jb
and
sub
outsl
adc
movsb
xor
cld
repz
mov
xchg
stc
inc
test
into
lret
jmp
jmp
mov
iret
or
cmc
sbb
loop
aaa
rorl
sahf
mov
outsl
fwait
out
loopne
pushl
fisubrl
in
sbb
or
add
clc
imul
repnz
out
imul
pop
xchg
sbb
stc
mov
dec
je
subb
aaa
dec
jl
and
inc
cltd
pop
vcvtpd2ps
pop
mov
sub
cmc
dec
out
out
cmp
bound
and
mov
sbb
fidivrs
add
mov
sbb
sbb
cs
mov
pop
mov
imul
jg
push
and
mov
pop
adc
mov
push
and
das
cmc
pop
shrl
in
pop
mov
push
push
into
mov
xor
xlat
testb
cli
cmc
sahf
jno
ja
jno
push
and
and
jg
xlat
ljmp
push
cmp
test
enter
repnz
ficoml
mov
cltd
icebp
mov
inc
scas
mov
fisubs
xchg
fcompl
popa
in
mov
js
insl
sub
cmp
adc
loope
mov
fildl
stos
xor
jnp
fwait
sbb
adc
in
cwtl
sbb
aaa
and
and
fisubrl
push
xor
push
pop
mov
mov
aam
xchg
or
orl
mov
mov
mov
jno
xlat
imul
sub
pop
lahf
inc
fmull
xor
jns
cmc
inc
sahf
lds
dec
je
mov
pop
bound
dec
loopne
xchg
loopne
and
adc
cmp
sub
or
or
jne
cmp
fdivrl
push
adc
hlt
push
push
add
aam
in
test
rcl
sbb
shll
ds
inc
xor
clc
xchg
mov
mov
xor
ds
enter
xchg
ds
inc
test
out
aas
sbb
js
pavgb
insb
jmp
push
xor
call
mul
subl
test
mov
int
daa
negl
dec
push
xchg
mov
push
shlb
inc
ja
cltd
inc
pop
jb
push
in
lds
xchg
jecxz
or
add
adc
add
loopne
test
stos
fildl
jge
test
bound
jo
sub
adc
out
xchg
jb
push
jo
xor
sti
mov
xchg
fwait
jns
sub
leave
mov
cmc
in
scas
xchg
gs
cwtl
sarb
mov
aaa
inc
cmpsb
outsb
idiv
fcoml
xor
out
mov
int3
mov
cld
nop
stc
lret
push
in
fucom
sbb
dec
arpl
jae
lret
mov
dec
inc
pushl
sub
push
pop
push
adc
ficoms
ljmp
ret
mov
shl
add
dec
leave
dec
gs
pusha
xchg
call
cmp
in
scas
jge
jnp
push
scas
sbb
sbb
negl
jno
stc
adc
adc
in
lods
bound
dec
mov
fldt
outsb
sbb
jge
dec
jg
cs
cmpsb
das
imul
jno
aam
mov
sbb
addr16
pop
inc
mov
and
cmp
pushf
jle
inc
or
jnp
addr16
roll
dec
dec
inc
push
mov
insb
mov
mov
lea
into
lea
addr16
jecxz
xchg
imul
jns
fadd
in
ret
insl
test
mov
mov
pop
aas
std
int3
scas
jnp
loop
rol
jg
lahf
sub
pushf
push
inc
jnp
arpl
lahf
xchg
sub
leave
and
cmp
sub
or
mov
popf
jmp
and
rorb
cmp
add
sti
sub
cmp
les
int3
and
xor
jnp
repz
mov
in
lods
int3
mov
mov
fcoms
aad
mov
divb
enter
jo
inc
mov
fbld
mov
jmp
fs
cmp
mov
aas
pop
pusha
xor
nop
adc
adc
push
gs
fwait
out
push
je
xor
mov
sarb
int
in
cmp
mov
test
insb
mov
rorb
add
test
or
jb
dec
daa
push
cmp
fstps
je
pop
int3
xchg
sbb
inc
cmp
arpl
inc
mov
xchg
adc
shlb
pop
adc
inc
fstpt
lods
rclb
js
and
aad
mov
clc
jbe
es
xor
jae
add
ror
cwtl
pop
leave
jo
nop
add
pusha
push
arpl
into
data16
xlat
cli
push
sub
stos
add
push
test
and
inc
insb
or
es
mov
ja
into
loope
jmp
popa
ds
repnz
sub
cmpps
mov
into
jge
out
lock
pop
jb
pop
jmp
mov
jle
mov
repnz
xor
lret
and
inc
push
xchg
repnz
push
les
pop
hlt
adc
jns
loope
xor
jmp
mov
scas
inc
or
ljmp
pop
adc
out
cld
lret
add
in
lret
mov
xchg
shrb
fs
aaa
fistl
stos
cltd
lret
rcl
push
push
lea
sub
notb
loop
addr16
pop
sahf
jno
jnp
lcall
push
mov
jmp
cmpb
push
and
push
mov
or
out
fsubl
bound
sbb
fildll
out
mov
loope
xchg
ss
scas
int
hlt
jno
sub
fldcw
loope
jns
ret
adc
cwtl
fisubrl
loop
aaa
imul
xchg
mov
out
test
repz
aaa
or
je
push
icebp
xchg
clc
fmuls
testb
push
cmp
or
cmp
inc
fs
or
lea
sub
shl
jp
shll
mov
daa
xchg
sub
sbbl
sub
adc
shrb
mov
add
xor
dec
sbb
stos
mov
pusha
mov
add
xchg
jbe
adc
ret
jb
dec
or
pop
push
lods
dec
xchg
jle
outsl
sub
clc
std
xor
pop
icebp
lock
sbb
xchg
jns
cmp
lahf
pop
push
cmp
pop
inc
mov
mov
mov
pushf
faddl
mov
int
mov
jnp
pusha
fnop
out
data16
inc
add
hlt
sbb
sbb
push
jle
mov
addr16
pop
inc
jp
sub
fs
sub
fildll
and
xor
out
push
push
out
push
shll
pop
andl
mov
pusha
dec
sbb
mov
xchg
imul
cmp
sub
adc
or
shl
xchg
sub
cmp
xchg
mov
push
jg
in
cld
fiaddl
xchg
gs
fldenv
adc
push
mov
sti
test
aad
adc
stos
pop
je
sbb
sub
mov
aas
loop
sub
adc
inc
push
scas
pop
mov
lds
jmp
int3
push
push
out
aam
int
enter
lods
push
andl
fiaddl
xor
cmp
aam
mov
mov
pop
push
addl
adc
sub
mov
movsb
ja
pop
pop
add
lahf
or
push
inc
jnp
and
mov
or
cwtl
push
cmpsb
pop
push
mov
std
js
cmc
push
lahf
addr16
mulb
scas
stos
int3
enter
adc
push
pusha
mov
popl
jae
imul
sub
dec
mov
pop
add
push
and
inc
mov
dec
or
mov
mov
push
xchg
filds
cmp
iret
clc
inc
lods
bound
pop
sub
leave
add
xchg
lcall
sbb
out
and
sar
fdivs
xor
rorb
push
and
xchg
je
out
pop
xchg
jns
pop
inc
mov
xchg
out
imul
or
fldcw
rol
push
fsubrl
shlb
mov
mov
stc
xorb
jbe
popa
jecxz
mov
sub
scas
aad
in
pop
adc
jns
lret
xlat
push
mov
dec
daa
shll
mov
scas
daa
cwtl
shl
test
mov
shll
inc
xchg
cmc
mov
add
test
xor
popa
rclb
lahf
mov
out
mov
cmp
loope
adc
or
cmp
je
sarl
fs
stos
mov
dec
lock
jg
bound
cmp
loopne
mov
adc
orl
mov
idivl
enter
and
xor
mov
add
addr16
mov
bound
adcl
xor
or
int3
cmp
and
outsb
aas
push
stc
stc
dec
cmp
pmaddwd
sti
sub
mov
les
push
inc
mov
xchg
icebp
cmpsb
shlb
add
sbb
mov
dec
cmp
rolb
and
dec
mov
lret
xchg
xor
std
cltd
ret
pop
mov
repz
sub
mov
sub
sub
push
inc
mov
jne
cmpb
sbb
jae
repz
pop
sbb
cmpsb
mov
in
into
jbe
push
int
sbb
shlb
int
xor
mov
cld
test
cmpsl
jbe
xchg
popa
sub
mov
pop
cmp
pop
lret
movsb
sub
jge
aam
pop
ficomps
cwtl
lods
inc
fnstsw
xchg
jno
data16
shll
pop
testb
cmpsb
arpl
insb
sub
iret
mov
pop
ret
scas
mov
mov
dec
sub
cwtl
outsl
leave
scas
jns
cwtl
popa
iret
cld
cmp
int3
lods
stc
xchg
sarb
dec
lds
jae
dec
fs
pushf
idivl
pop
mov
jp
inc
xchg
dec
mov
clc
sahf
pop
xchg
adc
and
add
stos
sub
jno
and
mov
cmc
inc
mov
inc
xchg
inc
stos
sahf
push
xchg
push
push
adc
lock
sub
mov
sti
cmp
jae
xchg
pusha
roll
inc
orl
add
outsl
in
es
hlt
mov
test
mov
sub
cmp
jno
sub
sbb
jbe
mov
cmp
xlat
pop
aam
insl
arpl
cmp
sub
dec
lcall
mov
jnp
in
mov
mov
in
push
jmp
in
mov
stos
xor
movsl
lds
sarl
cmpsb
int
sbb
xchg
push
leave
or
fcoml
loopne
dec
add
jb
pushf
adc
mov
and
push
pop
dec
adc
pop
cmpsb
jle
lock
aas
jge
xchg
es
cltd
pop
in
in
loop
mov
repz
cmpsl
test
mov
movsl
xchg
pop
out
jp
push
daa
test
aad
filds
xor
call
mov
sub
xor
lods
push
mov
ficoml
xchg
imul
mov
add
out
loope
pop
addr16
in
in
movsl
xchg
mov
xor
hlt
sub
pop
fidivs
notl
call
adc
push
cmc
jmp
mov
dec
dec
jnp
cltd
orl
pop
jae
fistpll
mov
cmpsl
fildll
mov
fidivrs
fbstp
add
loope
enter
addb
inc
andb
ds
outsl
sbb
xchg
addr16
dec
adcl
mov
stos
cmpsl
std
inc
adc
in
sbb
repz
xor
xchg
je
loope
pop
cmp
sub
xchg
cwtl
mov
jae
rcl
cmp
inc
sub
rcll
xor
pop
add
dec
js
sub
cwtl
push
pop
pop
pop
sub
arpl
xor
mov
lock
loop
jo
mov
fiadds
adc
out
cmp
int3
xor
jnp
fbld
cli
lret
mov
js
mov
push
pop
test
xchg
or
jmp
cld
xchg
movsb
test
cmp
lock
testl
dec
mov
mov
mov
test
pop
fdivrs
and
mov
lcall
mov
pusha
sub
bound
jno
pop
mov
push
and
adc
repnz
into
out
nop
add
test
mov
shrl
or
push
mov
dec
mov
inc
fisttpll
sarl
fdivrs
or
nop
ficomps
cmp
add
leave
mov
cmp
cltd
xchg
xor
inc
mov
sbb
mov
sub
lods
or
dec
int
push
jecxz
imul
jbe
mov
xor
clc
inc
in
sbb
pop
sbb
sub
xchg
rclb
or
lock
lret
ja
xor
aad
in
jmp
xor
push
pop
push
mov
mov
and
pop
adc
popf
sbb
cmpb
rolb
mov
push
mov
js
sub
push
mov
push
xchg
jp
push
inc
popf
test
xor
daa
int
test
mov
add
xchg
or
in
js
les
or
insl
fstl
xorl
mov
enter
cmp
sahf
imulb
xor
pop
and
sbb
push
xlat
xlat
mov
cli
cmc
push
xor
stos
into
shll
mov
xchg
inc
adc
pushf
pop
mov
fisubrl
jle
adc
lcall
or
cld
stc
mov
aam
mov
out
add
jbe
outsl
pop
lock
repz
and
fwait
pop
xchg
aad
insl
sub
imull
adc
xchg
sub
lahf
jge
imul
sti
test
hlt
int
shlb
int
pop
mov
ret
cs
addr16
mov
xlat
mov
sbb
stos
cmp
mov
clc
add
and
sbb
and
iret
daa
jns
jo
dec
pop
lea
jle
clc
pop
aam
dec
mov
movsl
stos
daa
pop
cmp
lret
scas
mov
outsb
jecxz
test
call
pop
loope
lock
stc
xchg
and
imul
sub
inc
and
adc
je
fsts
sub
cmp
mov
mov
cwtl
out
sub
insb
cli
inc
or
pop
das
sbb
arpl
popf
and
dec
and
ds
lods
fdivrs
aaa
sahf
fdivrp
mov
inc
das
ja
sub
ret
outsl
adc
dec
mov
push
icebp
dec
aam
les
imull
jbe
js
lea
or
cmp
push
jb
movsb
xlat
iret
loop
cs
cmc
inc
fildl
inc
adc
pop
xor
and
jb
popf
pushf
add
sbb
mov
fwait
daa
inc
cltd
orb
cltd
dec
gs
leave
cmp
inc
sbb
or
pusha
stos
fimuls
je
adc
xchg
jmp
sub
jo
rol
and
add
mov
jno
ret
stc
or
mov
mov
cmpb
sub
sahf
sbb
aaa
shl
mov
xchg
xchg
daa
inc
mov
ja
pop
clc
cwtl
push
mov
cmp
mov
xchg
insb
mov
test
xor
jo
outsl
mov
ds
dec
cli
xrelease
mov
call
sub
int3
mov
jno
daa
lahf
subb
dec
add
scas
cmpsl
fisubrs
scas
mov
add
sbb
adc
inc
lods
xchg
push
xchg
inc
fdivs
cmp
pop
pop
sub
xchg
sub
pop
mov
inc
jae
dec
movsl
or
add
cmp
jl
sarb
mov
cli
ds
mov
mov
sti
push
cmc
lret
mov
push
xchg
pop
mov
lahf
sub
add
jae
and
out
push
cmp
fisubrl
adc
push
repnz
adc
lods
mov
pop
adc
cmp
aaa
je
mov
pop
daa
shlb
push
je
push
mov
loopne
sbb
push
jns
sub
pop
and
ficompl
std
pop
imul
xor
pop
jmp
bound
data16
test
push
enter
movsb
bound
lods
or
pop
ss
out
lcall
ficoms
mov
outsb
and
sbb
lods
nop
mov
mov
cwtl
jge
push
mov
clc
pop
mov
jb
iret
repz
cmp
stc
les
xchg
ret
pushf
es
cltd
or
pop
pop
mov
dec
shl
jl
sbb
xchg
push
clc
sub
aas
push
ljmp
sbb
or
loope
sub
push
int
add
sbb
outsb
xchg
fldt
xor
adc
out
shlb
push
xlat
cmpsl
pop
out
hlt
add
or
xchg
push
pop
stos
dec
cwtl
add
adc
or
pop
xchg
pop
loope
aaa
mov
push
inc
sbb
fsubp
shl
in
data16
add
or
and
mov
insb
cmp
xor
push
movsl
ds
push
cmp
stos
dec
adc
stos
cmp
sub
movsl
jge
jp
loope
mov
and
mov
cmc
xor
cmp
repnz
stos
cmp
int
pop
popa
mov
xor
lret
ret
ja
sub
pop
mov
aam
sbb
push
shll
adc
sbb
es
dec
pushf
jns
int
sarl
xor
jnp
pop
push
iret
sub
inc
pop
xor
sbb
rolb
ja
lahf
xlat
cwtl
lock
dec
scas
or
repz
insb
inc
mov
lea
jbe
mov
mov
mov
add
mov
shll
jmp
sbb
adc
sbb
push
mov
rclb
jmp
rorl
outsl
pop
push
lea
fiadds
mov
xor
inc
xchg
push
fldt
sbbl
into
test
rol
test
arpl
pop
xchg
test
insl
add
je
out
push
or
cltd
punpckhbw
xchg
sbb
leave
dec
xchg
adc
cltd
insl
jge
xor
add
dec
and
mull
cld
mov
cltd
fisubrs
test
adc
sub
push
cld
and
scas
ret
call
scas
rcll
fbstp
test
je
js
pop
lods
mov
mov
ret
lret
xchg
sub
mov
jge
xchg
enter
add
mov
bound
or
cmp
push
xchg
push
leave
jle
jle
or
mov
or
fnstsw
jmp
jmp
pop
fisubrl
aad
pop
cwtl
mov
jp
mov
mov
pop
and
aaa
sub
mov
aad
cmp
push
xchg
scas
pop
jb
enter
inc
rcrb
push
imul
or
dec
push
add
xor
dec
ror
cmc
aad
sub
add
jecxz
test
xlat
stos
jnp
movsb
add
xorl
ficompl
ja
sbb
outsl
fwait
mov
outsl
xchg
push
xlat
add
shlb
or
cmp
pop
mov
loop
inc
pop
mov
hlt
test
rclb
bound
or
cmp
push
mov
mov
cmpsl
pop
clc
mov
js
pop
out
adc
addl
bswap
cmp
or
mov
outsb
push
sub
ljmp
sbb
aad
jno
aas
rcll
decl
mov
or
jnp
cmp
fistpll
scas
movsb
inc
and
ljmp
dec
jmp
loopne
aas
popf
outsb
pop
cmp
jge
sbbl
mov
cmp
pop
push
and
cmpsb
adc
scas
add
in
jbe
es
pop
xchg
sbb
cmp
pop
xchg
negb
gs
fwait
test
out
ss
pop
push
mov
addr16
lds
sbb
out
inc
mov
loope
jl
negl
clc
pop
repnz
in
xor
mov
insb
fistpll
push
aaa
push
loop
insl
add
es
dec
pop
sbb
and
adc
rcrl
test
mov
and
and
or
sbb
imul
aad
pop
add
jae
mov
lock
daa
lock
jno
lods
roll
loop
in
dec
jecxz
in
aaa
aaa
dec
xor
mov
xchg
shll
cmp
add
daa
add
mov
jl
adc
cmpxchg
flds
insb
add
jne
shl
xchg
imul
cmp
push
fs
repz
sti
xor
movsb
inc
xlat
push
mov
shrb
xor
lret
mov
xchg
out
cltd
push
sti
add
sub
or
push
clc
inc
mov
lret
push
mov
xor
out
push
or
sub
inc
inc
cmp
inc
mov
mov
in
sti
cmp
jecxz
push
add
jns
xacquire
jo
mov
dec
sahf
lock
jnp
sbb
data16
jo
cmp
imul
push
out
gs
pushf
arpl
int3
imul
mov
dec
sti
mov
sub
cmp
and
mov
fidivrs
dec
mov
mov
gs
aad
test
pop
stos
jl
inc
jbe
pop
fistps
shrl
sub
fdivl
outsb
inc
mov
imul
mov
xor
fucomp
xchg
jnp
mov
fisubs
test
scas
mov
lods
cli
and
std
jo
cmc
outsb
cmp
outsl
dec
inc
repnz
xchg
push
cwtl
loop
cmp
addb
js
jnp
pop
xchg
pushf
pop
and
push
js
add
das
shl
mulb
pop
xor
add
jae
int
sub
mov
rcll
mov
xorb
and
adc
cmp
mov
mov
mov
ficompl
stc
iret
inc
xor
sarl
dec
fisttps
fisubs
and
xchg
lea
cld
jne
xchg
out
jge
mov
mov
inc
lea
inc
sbb
sbbb
jmp
sbb
sahf
xor
in
nop
sub
.byte
mov
.byte
push
mov
or
mov
mov
or
into
mov
or
cli
mov
or
and
add
or
cld
mov
or
fdivrl
add
mov
or
add
add
jo
or
cmpb
adc
add
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
mov
add
movsb
mov
dec
add
incl
add
add
rorb
add
add
incl
add
add
ret
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
enter
add
add
incl
add
add
leave
dec
add
add
add
incl
add
add
add
add
add
add
dec
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
rorl
add
add
incl
add
add
xlat
dec
add
add
add
incl
add
add
xlat
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
in
add
add
add
incl
add
add
jmp
add
incl
add
add
dec
add
add
add
incl
add
add
icebp
dec
add
add
add
incl
add
add
add
add
add
add
add
adc
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
cmp
dec
add
dec
add
add
add
pop
dec
add
dec
add
incl
add
add
dec
add
add
add
incl
add
add
and
add
incl
add
add
dec
add
add
add
dec
add
dec
add
sub
add
add
incl
add
add
add
add
ss
add
add
add
add
add
dec
add
add
add
fidivrl
dec
add
fisttpll
aam
dec
add
fisttpll
ljmp
dec
add
dec
add
add
add
incl
add
add
push
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
push
push
dec
add
push
dec
add
add
add
call
pop
dec
add
pop
dec
add
add
add
jmp
pop
dec
add
pop
dec
add
lcall
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
gs
gs
xor
cs
insb
add
add
imul
insb
add
add
gs
xor
fs
insb
add
outsl
insb
xor
cs
insb
add
add
jbe
jo
xor
cs
insb
add
add
outsl
insb
gs
jne
xor
cs
insb
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
inc
gs
outsl
fs
gs
imul
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
je
imul
outsb
fs
insb
outsl
jae
add
add
outsb
fs
gs
inc
imul
imul
inc
imul
imul
je
imul
add
pop
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
outsl
arpl
imul
add
je
arpl
fs
outsb
outsw
inc
jb
insl
inc
jne
fs
add
je
arpl
fs
outsb
outsw
inc
jb
insl
push
jns
gs
outsb
outsw
add
add
fs
gs
jns
gs
imul
fs
jns
gs
imul
decl
dec
add
insb
dec
add
jmp
insb
dec
add
dec
add
incl
dec
add
dec
add
call
dec
add
dec
add
jp
dec
add
dec
add
decl
insb
dec
add
incl
add
add
outsb
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
jo
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
lcall
dec
add
jns
add
incl
add
add
decl
dec
add
jp
add
add
add
incl
add
add
jnp
add
call
fwait
dec
add
incl
add
dec
add
mov
sahf
dec
add
mov
add
add
add
bound
add
add
mov
add
or
je
or
nop
mov
or
scas
mov
or
into
mov
or
cli
mov
or
and
add
or
cld
mov
or
fdivrl
add
mov
or
add
add
jo
or
cmpb
lods
add
jb
popa
je
add
sbb
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
push
jb
arpl
fs
jae
add
push
add
popa
insb
inc
jb
add
jae
inc
js
gs
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
popl
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
into
add
popa
jb
push
inc
add
add
jae
insl
gs
push
add
popf
add
imul
jae
dec
gs
outsl
jb
add
nop
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
mov
inc
gs
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
push
push
inc
push
xor
cs
insb
add
lret
je
push
outsb
ja
outsb
add
gs
push
dec
jne
je
inc
jns
add
dec
jne
je
inc
jns
gs
outsl
push
imul
cmp
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
jne
mov
push
sarb
test
pusha
pop
sub
jnp
les
push
lret
and
or
sahf
pop
add
jg
mov
nop
pop
sbbl
xchg
push
xchg
sbb
les
jbe
cmpsl
pusha
mov
test
sbb
xchg
ret
push
pop
inc
inc
addr16
adc
push
test
jbe
mov
in
sbb
jns
or
cmp
mov
shlb
xchg
adc
xorl
or
aaa
sub
inc
stc
outsb
dec
xor
mov
test
lret
clc
cmpsl
fildll
adc
and
out
sbb
mov
fistps
in
popf
stos
jle
out
in
push
push
jae
inc
adc
push
imul
mov
repnz
cld
jns
pop
dec
movsb
or
ds
mov
jmp
int
push
sub
sub
mov
es
xor
adc
call
aad
outsb
insb
jb
xchg
fcomp
xchg
push
pop
cltd
dec
les
js
and
adc
or
dec
pop
jge
xchg
adc
jo
lock
mov
xchg
ret
pop
shr
dec
iret
and
pop
xchg
arpl
scas
out
xchg
or
xor
sahf
out
xchg
sbb
mov
mov
fucomip
xorl
cld
mov
push
mov
test
inc
ja
iret
mov
sub
cmc
and
fnsave
cmp
or
in
xchg
add
cld
xlat
lds
movb
filds
roll
ret
test
push
mov
mov
mov
cmpsb
add
pop
fsub
stos
cmp
sub
push
loopne
rorb
mov
not
dec
scas
or
add
inc
adc
or
push
repnz
ds
test
lock
in
test
outsl
nop
movsb
insl
pop
xchg
loopne
jmp
pop
imul
addr16
icebp
mov
cmc
jl
call
mov
inc
push
iret
in
ret
and
push
or
xchg
cmpsl
test
call
fisubrl
stos
pop
hlt
ret
cmp
icebp
enter
dec
dec
insb
imul
enter
sbb
mov
test
sbb
mov
sbb
cmp
adc
jle
or
mov
cmpsb
xchg
fldenv
dec
and
sarl
ss
shll
pop
pop
push
in
add
fidivl
jns
scas
fs
or
scas
dec
aas
or
das
mull
outsl
add
sbb
lretw
cltd
std
cwtl
cmp
inc
adc
fisubrs
sbb
imull
sbb
sbb
push
lahf
lret
and
jns
dec
ja
sub
xor
lahf
popa
dec
cwtl
pop
push
arpl
xchg
xchg
mov
and
jne
push
hlt
adc
and
jg
jmp
xor
inc
xor
mul
dec
int3
rorb
ror
loop
mov
addr16
sti
add
das
sahf
mov
push
sbb
ljmp
lock
mov
adc
cmpsl
inc
ss
mov
inc
push
xlat
mov
cli
add
pop
loopne
into
mov
jnp
or
jge
les
aas
or
fimuls
and
pushf
push
pop
adc
cmpsl
push
pop
push
pop
push
aas
sub
mov
shll
xorl
xchg
dec
std
mov
inc
or
lret
push
dec
fidivs
push
xor
popa
rorb
cmpsl
leave
pop
andb
test
loope
and
sti
inc
popf
shr
pop
mov
xor
jae
fs
xor
frstor
bound
xor
push
sbb
add
mov
cld
outsb
dec
into
or
fwait
jmp
test
adc
dec
push
adc
cmp
jnp
arpl
inc
mov
gs
mov
mov
inc
rorb
adcb
popa
cmpsb
add
cmpb
cmp
adc
lods
stos
add
jbe
std
push
mov
fstl
ja
pop
mov
sbb
sub
sub
pop
movsl
in
lds
insb
xor
jno
inc
sub
inc
adc
mov
pushl
dec
lret
cmp
push
stos
inc
fstpt
movsb
or
sub
movsl
testb
into
fcoms
jg
pop
or
fld
fldt
in
or
cs
fwait
xor
ret
mov
push
push
ljmp
ds
mov
scas
pushf
clc
pop
xor
mov
mov
cld
push
dec
push
ss
ljmp
jae
in
push
roll
loope
lods
out
add
out
dec
xor
lahf
sar
sub
icebp
pop
xchg
or
stc
insb
xlat
ret
adc
push
push
push
mov
fwait
add
lahf
cmpb
pop
xchg
cmc
inc
mov
xlat
call
das
sbb
xchg
dec
addl
pop
in
add
add
sbb
imul
add
pop
incb
inc
push
mov
push
mov
loopne
roll
add
fcompl
lock
jae
cmp
call
cld
aam
gs
clc
imul
lahf
xchg
pop
xchg
inc
hlt
ja
jno
lea
add
insb
add
ljmp
xchg
call
into
sub
mov
mov
fistl
inc
icebp
dec
movsl
adc
xor
lret
leave
js
les
stc
cmp
adc
ds
xor
jae
fwait
xor
mov
movsb
dec
enter
add
out
cli
jne
insl
push
add
sbb
cmp
mov
xor
std
lcall
dec
mov
mov
movsb
and
xor
inc
mov
bound
push
stos
sub
jg
pop
in
or
subb
aas
cmp
jmp
ljmp
mov
je
je
lahf
ljmp
cmc
mov
dec
fisubrl
add
push
mov
jae,pt
add
sub
insb
enter
sub
neg
mov
adc
leave
pop
dec
insl
xor
add
push
rolb
sub
add
fcmove
adc
mov
imul
mov
jnp
mov
xchg
pushf
xor
sbb
out
fisttpl
in
xchg
sbb
cwtl
cmp
fisubs
dec
shll
jmp
cwtl
mov
dec
add
xorl
gs
inc
clc
adcl
mov
add
aas
xchg
clc
xchg
clc
daa
int3
mov
dec
mov
adc
ret
jnp
fstl
ret
icebp
pop
leave
call
cwtl
in
bound
fwait
lods
jae
pop
adc
ret
and
push
mov
imul
mov
inc
test
scas
stos
or
lods
jo
or
dec
in
cld
pop
loop
lods
dec
inc
jecxz
xor
enter
mov
mov
xor
fisubrs
rcr
dec
dec
adc
push
pop
push
into
les
sub
imul
xchg
outsl
sbb
push
cmp
push
add
addr16
daa
inc
clc
pushf
mov
stc
daa
adcb
cwtl
xor
jge
js
and
les
lcall
popf
mov
push
out
adc
pop
pop
dec
je
clc
sub
lret
dec
cmp
pushf
push
aad
add
loopne
ret
pop
cmp
adc
xor
sbb
insb
xchg
mull
aad
mov
mov
adc
push
dec
data16
lret
cmpsl
leave
ret
pop
xor
imul
sbb
mov
ret
mov
sbb
inc
xchg
jb
adc
mov
movsl
sub
mov
sub
out
notb
push
pxor
jno
jge
in
inc
sub
or
add
ja
cmc
add
mov
out
jbe
mov
stc
mov
dec
popa
stc
dec
dec
adc
add
stc
and
pusha
cmpsb
daa
sbb
dec
jns
std
pop
xchg
stc
dec
push
xchg
or
push
popf
into
dec
inc
push
xchg
and
mov
jne
push
jb
xor
or
dec
push
add
dec
mov
fimuls
cld
push
aam
fcmove
push
movsl
outsl
jae
add
push
lods
inc
inc
test
sub
pop
jmp
push
int3
mov
icebp
lcall
inc
cmp
imul
leave
daa
and
mov
push
lock
xchg
ljmp
cmp
adc
cmp
in
xlat
inc
sub
jl
jae
lcall
xchg
stos
sub
fmul
adc
sbb
pop
imul
nop
jb
adc
push
xor
jmp
mov
dec
pop
jb
fcoms
ret
sub
push
xchg
or
insl
repnz
mov
mov
mov
insb
jmp
pop
sbb
mov
sub
and
dec
xchg
dec
mov
lds
or
movsb
inc
mov
cmp
shll
pop
jmp
fldenv
xchg
or
push
dec
cmp
inc
andl
push
fimuls
sbb
into
adcl
adc
repz
jnp
push
push
mov
mov
adc
mov
push
call
sub
pop
inc
orl
dec
pop
stos
scas
jg
cmp
push
adc
xchg
mov
ja
dec
sarb
shl
adc
inc
push
jecxz
cmp
jne
outsl
ret
pop
jbe
dec
jnp
jge
out
imul
pop
xchg
dec
or
rol
fiaddl
inc
mov
cwtl
push
xor
in
ja
dec
xchg
and
shrl
in
fdivl
lcall
push
mov
inc
and
aas
repnz
out
repnz
add
lret
call
scas
inc
movsb
add
push
xlat
mov
xchg
mov
or
mov
fcomip
dec
jmp
sub
rol
mov
jb
fisubs
dec
test
mov
xchg
movsl
push
hlt
cmp
fdivs
ret
incb
in
loop
xor
dec
jb
arpl
mov
std
cmp
nop
jg
inc
dec
push
in
int3
xlat
out
jge
mov
ffreep
cmp
xchg
clc
cmp
cmp
mov
cmp
in
jne
ja
in
stos
jecxz
push
das
pop
or
lcall
aaa
ss
push
out
cmp
lock
scas
pslld
clc
test
rcrb
add
and
out
jbe
cmp
pushl
add
mov
or
cmp
imul
xchg
inc
in
out
sub
lret
pop
push
or
or
ret
aas
flds
mov
inc
pusha
xlat
xchg
shll
das
inc
mov
or
bound
lret
push
dec
add
pop
push
sub
mov
cmpsl
xor
outsl
adcl
dec
xor
sbb
xorl
mov
push
inc
out
cmp
mov
mov
fsubrl
dec
dec
sbbb
xchg
and
mov
push
subl
pop
sbb
and
pop
test
and
repz
lahf
pop
mov
push
jmp
push
xor
fwait
xor
iret
xchg
jecxz
mov
loope
loopne
decb
mov
xchg
sar
mov
pop
cld
mov
outsl
stos
shl
pop
dec
data16
stc
inc
insl
leave
outsb
outsb
rcrb
aas
int
lcall
imul
lods
mov
jmp
sbb
test
jp
xor
pusha
idivb
ror
js
int3
push
mov
sbb
mov
inc
xchg
out
cli
jmp
pop
jne
adc
mov
mov
xor
cmp
pusha
adc
lahf
dec
pop
push
and
loope
mov
stos
fs
sub
cld
int3
jbe
add
adc
pop
lock
adc
push
mov
push
mov
clc
cmp
xor
sub
xlat
iret
mov
insb
add
pushf
fistps
mov
stos
fcmovnb
in
stos
les
test
cltd
scas
cmp
enter
add
mov
ljmp
mov
mov
and
scas
lahf
mov
xor
sbb
push
or
outsb
and
push
mov
mov
cld
dec
icebp
mov
lahf
rclb
pop
adc
cld
cmpsl
adc
into
jecxz
jecxz
cli
add
push
cltd
fstp
dec
inc
aam
testl
into
pop
inc
push
loope
js
std
mov
cmp
mov
sbb
or
les
nop
data16
js
scas
xor
test
push
aaa
sub
push
icebp
inc
incb
jmp
pop
xor
outsl
outsl
ljmp
aam
into
fsubr
jg
aad
mov
xchg
mov
mov
dec
mov
ss
negl
out
pop
out
sbb
bound
iret
jl
stos
cmp
loope
adc
lds
stc
and
jl
movsl
outsl
call
adc
xchg
mov
aad
leave
mov
xchg
insl
pusha
mov
and
xchg
mov
sub
std
dec
mov
xor
lret
std
cwtl
fdivl
xchg
pop
rolb
adc
adc
xchg
mov
call
lds
adc
sub
sbb
out
and
divb
cmp
inc
pop
subl
jp
xlat
std
dec
mov
test
adc
cwtl
pop
push
mov
int3
rcrl
mov
jns
daa
xor
pop
dec
test
fdivrl
js
sahf
ljmp
jnp
imul
lret
and
div
cmp
push
loop
xchg
push
leave
dec
sbb
cli
dec
rorb
cmp
es
jne
jne
inc
in
cmpsb
inc
mov
test
push
andb
dec
aaa
pop
add
sub
mov
fists
or
pop
nop
into
mov
lds
mov
and
sub
mov
imul
ret
std
and
mov
mov
sbb
jns
repnz
or
pop
jmp
cltd
enter
lret
fidivs
loopne
jae
mov
leave
mov
mov
adc
adc
ja
inc
xchg
xchg
outsb
test
lahf
mov
ret
add
and
test
push
cmp
movsb
out
xor
xchg
push
loope
outsb
cli
cli
mov
test
adcl
inc
xchg
cmp
addb
push
inc
pop
cli
jnp
pusha
fs
mov
outsl
stos
cmc
and
fcmovb
adc
rcrb
push
adc
adc
jbe
popa
push
xchg
pop
sub
daa
xchg
ret
mov
in
xchg
pop
aad
xchg
jo
mov
aad
mov
pop
xor
lret
test
sbb
push
xchg
jbe
mov
cmp
mov
lea
jmp
push
or
xor
stos
insl
mov
cmp
adc
pop
ljmp
stos
test
mov
cld
dec
or
push
push
pop
jne
fwait
orl
shll
int
jg
fxch
or
adc
es
sbb
fnstsw
mov
daa
mov
xor
add
adc
dec
mov
in
sub
mov
cmp
inc
sti
mov
sar
std
mov
adc
add
cltd
sbb
xor
mov
filds
outsl
push
or
iret
lret
cli
cwtl
inc
andl
mov
ret
sbbb
mov
xchg
rcrb
push
inc
push
cmpb
push
mov
lds
bound
adc
push
mov
xchg
out
loop
std
xchg
cmp
xchg
nop
pop
pop
jne
or
cmp
cmp
pop
movsl
lea
adc
dec
xlat
mov
xchg
jae
fstps
push
popa
and
pusha
ljmp
lret
push
das
and
push
push
jmp
cmp
mov
and
fsubs
subl
lret
mov
pop
xor
inc
into
or
push
jmp
pop
push
lcall
addr16
mov
pop
push
loopne
xor
jg
dec
mov
cmpl
aam
sbb
adc
mov
negl
mov
adc
mov
cmp
sub
cmp
xor
cmp
dec
cmp
add
cmp
mov
out
pop
out
pop
fsubs
in
add
jae
aas
mov
jg
adc
stos
outsl
cmpl
ret
iret
enter
dec
les
fwait
sub
dec
dec
mov
lods
cmc
pop
jmp
push
jge
jg
sub
into
negl
repnz
or
or
stos
imul
fstpt
orb
mulb
inc
fidivl
cltd
push
jb
fmul
outsb
or
add
mov
xchg
or
insb
imul
in
xor
scas
and
lods
ds
cmc
mov
jns
jmp
lret
scas
leave
sbb
push
xor
mov
scas
sahf
insl
stos
push
mov
lret
jne
lds
loopne
insb
sti
popa
pop
mov
mov
mov
inc
mov
test
les
sbb
fwait
rorb
stos
jecxz
mov
xor
dec
fsubp
lcall
xchg
mov
adc
xchg
inc
jmp
sub
xchg
fstpt
fistpl
jbe
add
jle
hlt
xor
mov
scas
sbb
rcl
mov
into
testb
cmp
pop
push
lods
jecxz
movsb
adc
fidivrl
ret
rcll
ficompl
cmp
lea
mov
repnz
dec
lods
sbb
loop
xchg
jle
ds
gs
xor
xchg
dec
iret
lea
rclb
dec
call
pushf
sub
insb
pushf
push
gs
imul
and
aam
mov
popf
fdivp
xorl
pop
xor
repnz
xchg
popf
dec
mov
push
inc
and
fldcw
and
leave
adc
or
cmp
ljmp
pop
pop
int3
and
mov
mov
cmpsl
cwtl
cmp
loope
push
sbb
fdivs
mov
loop
cli
mov
addr16
adc
cwtl
xlat
test
xchg
out
lcall
push
sbb
lock
pop
pop
add
push
pop
dec
int
dec
push
pop
dec
shlb
jne
adc
cmpsb
mov
in
stos
sarb
loop
mov
or
jp
jo
imul
sbb
xor
or
jp
lcall
xor
push
mov
mov
movsb
xor
xchg
imul
mov
jae
mov
daa
and
add
stos
mov
cld
mov
mov
push
sub
inc
mov
ja
mov
test
jno
mov
push
fistl
dec
aad
sahf
bound
push
stos
xchg
add
les
cmp
push
pop
test
adc
pushf
gs
lods
push
xchg
sub
push
xor
cmp
jge
add
les
aad
out
aam
xor
out
mov
inc
jbe
sub
lods
pop
repz
cltd
stc
arpl
push
loopne
lods
jbe
inc
xor
jno
aaa
pushf
dec
mov
popa
lods
xchg
jmp
hlt
test
and
jl
xor
dec
scas
and
repnz
xchg
pop
or
mov
push
mov
push
stos
cmp
pop
and
shll
xor
or
imull
and
lcall
pop
pushf
loop
add
adcl
subb
jno
inc
xor
pavgb
in
xlat
pop
add
sbb
cmp
adc
or
stc
gs
jg
fdivs
mov
pop
repnz
fs
jge
je
or
movb
lock
xor
xor
mov
mov
mulb
xchg
xchg
push
int3
data16
fnstenv
cmpsb
add
ljmp
sub
pop
insl
xchg
or
cld
mov
dec
inc
mov
pop
pop
outsb
jge
aaa
mov
xor
inc
pop
js
push
insb
cltd
add
rclb
cmpsb
cwtl
xchg
out
xlat
aad
popf
mov
psubq
aam
jmp
shrb
cltd
call
adc
lods
mov
sahf
ljmp
aas
shrl
sub
adc
mov
push
shlb
ss
mov
mov
in
gs
test
jmp
adc
cld
adc
adc
stc
fbstp
scas
add
lretw
and
ret
sbbb
adc
mov
sahf
mov
insb
add
je
lret
jbe
sbb
popa
fdivl
jnp
ds
xchg
mov
cmpsl
jmp
mov
and
in
je
or
sub
and
scas
in
stos
fwait
adc
lcall
lods
int3
cmp
test
imul
sub
clc
stc
inc
subl
jmp
cmp
or
xor
data16
aad
mov
and
icebp
push
stos
lods
cli
stc
push
ljmp
inc
lahf
into
ficomps
imul
jle
and
fcomp
mov
push
pop
rep
std
aas
ljmp
movsl
cmpsb
es
cmp
fst
rorb
xlat
sub
pop
or
mov
das
fldl
xor
movsb
jge
divl
inc
insl
mov
pop
push
add
xchg
fisubrl
or
insb
test
dec
sahf
and
inc
jnp
xchg
jne
outsl
clc
and
ljmp
push
sbb
movsl
dec
aaa
popf
jne
fisttpll
fisttpl
mov
jns
enter
xchg
xor
fldenv
mov
fucomip
mov
xchg
xchg
and
sub
dec
call
clc
pop
shl
add
sti
adc
mov
cmp
add
add
sub
sub
pop
xchg
arpl
mov
aam
lahf
outsb
shll
xor
sar
or
xchg
mov
and
aad
pop
fdivrl
fnstsw
cmpsb
xchg
jnp
jmp
mov
stos
popa
andl
xchg
nop
dec
cmp
pop
xlat
das
push
or
push
sub
out
mov
roll
out
dec
adc
and
push
inc
and
fistl
test
lret
cmp
mov
cli
addr16
mov
jbe
xchg
int3
sbb
cmpsl
sbb
insb
inc
push
repz
and
enter
cmpsb
imul
outsb
lods
and
push
sbb
push
dec
dec
adc
mov
adc
mov
aaa
cmp
and
add
xor
xor
jmp
dec
out
pop
lock
and
inc
jne
adc
push
add
pusha
pop
sbb
in
notb
or
movsl
and
cwtl
xor
fnstcw
xor
adc
insb
in
popa
outsb
repnz
fs
add
divl
imul
mov
or
js
adcl
mov
jne
xchg
xchg
or
pop
sub
fwait
pop
jnp
clc
cmc
adcb
lahf
lods
cmpb
push
xchg
mov
shl
scas
ljmp
pop
xor
mov
cmpsb
das
lea
mov
inc
clc
mov
cmpsb
loop
inc
xor
xchg
loope
or
xor
mov
stos
push
jb
sub
cmpsl
fistl
in
jecxz
dec
in
test
lret
or
fnsave
imul
mov
or
icebp
mov
mov
aad
mov
fwait
fwait
sbb
rcl
inc
push
dec
cmp
add
inc
icebp
loopne
fwait
pop
fistps
mov
leave
push
inc
jge
fmuls
das
cwtl
or
fiaddl
jb
lock
fnstcw
mov
push
call
push
int
mov
pop
aas
pop
jno
cltd
repnz
int
adc
hlt
jo
mov
loop
setge
and
mov
ljmp
mov
ds
or
adc
pop
jae
mov
jnp
mov
sarb
xchg
jae
pop
and
cmp
fiadds
fwait
jle
into
insb
in
and
roll
adc
arpl
iret
adc
movsl
cmp
pop
dec
dec
mov
sub
mov
dec
adc
or
and
inc
es
xor
xor
out
cld
test
push
mov
aad
mov
int3
inc
in
in
js
mov
or
mov
pop
jmp
lds
adc
xchg
lcall
mov
es
and
dec
cld
in
jb
add
test
loopne
push
cmp
inc
dec
cmp
sahf
pop
mov
das
pop
orb
lcall
daa
iret
jmp
jo
pop
adc
push
lret
sahf
aas
leave
subb
xor
add
pop
pop
aad
popf
in
sbb
scas
inc
inc
and
gs
cmp
or
push
testb
add
mov
mov
pop
movsl
dec
movsl
sbb
dec
les
dec
mov
add
mov
xchg
adc
call
cmpsb
loopne
lret
push
subb
psrld
jge
adc
roll
mov
push
push
pop
into
call
pusha
push
fs
mov
dec
mov
rcr
dec
sub
inc
flds
push
mov
stos
cltd
repz
imul
shrl
repnz
xchg
jne
dec
out
das
add
cld
dec
pop
jnp
lods
sub
xor
jg
sar
xchg
mov
push
fs
and
xchg
xor
dec
xor
pinsrw
push
mov
and
loope
add
lock
push
sti
sbb
outsl
push
dec
dec
loopne
push
push
mov
loope
jne
imul
push
lret
mov
lea
cmc
fstpt
mov
mov
push
and
pop
int
call
sub
sbb
push
out
sti
inc
imul
mov
arpl
xor
sub
nop
sub
mov
bound
sub
arpl
sbb
adc
cmpsl
or
movsl
inc
les
push
inc
jbe
or
xchg
je
ss
xchg
in
and
aas
fiadds
insl
sbb
jmp
dec
push
sti
insb
std
loope
pop
lcall
aad
sub
fmull
and
inc
xchg
stos
pop
pop
fldl2e
mov
push
cs
mov
fisubl
popf
flds
test
shlb
and
fdivrp
idivl
inc
mov
lods
jbe
fidivrs
cmp
add
xchg
jg
ret
push
xor
jg
jmp
xor
cwtl
enter
cmp
les
mov
xor
dec
cwtl
and
push
mov
gs
addl
push
stos
jg
sahf
mov
pop
jae
jg
jecxz
std
addr16
xchg
push
shll
sbb
js
adc
je
jae
int3
xchg
icebp
sub
into
shll
push
mov
or
fwait
std
cwtl
xchg
mov
sti
out
sbb
push
ret
inc
push
pop
nop
xchg
or
mov
pop
push
mov
adc
xor
loope
inc
jne
jl
lret
stc
test
dec
mov
adc
or
leave
and
sub
ret
jg
xor
mov
mov
sub
or
jns
cmpsl
xchg
in
xchg
hlt
fwait
test
sub
mov
pop
inc
gs
mov
jmp
xor
testb
sub
and
sbb
test
std
push
incb
lock
add
and
lds
lcall
mov
jno
int3
arpl
or
iret
dec
cwtl
in
mov
adc
pop
pushf
in
sbb
mov
aaa
popf
jb
jp
pop
test
aad
xchg
sti
daa
mov
aas
fstl
and
mov
int
mov
sbb
adc
xchg
lea
lock
xor
dec
mov
pop
inc
lea
in
inc
push
cmpsl
pop
push
lods
adc
and
.byte
