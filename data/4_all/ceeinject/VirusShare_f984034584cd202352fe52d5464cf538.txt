call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
shufps
dec
iret
push
loop
jmp
imul
mov
adc
iret
push
das
out
shufps
outsl
cmpsb
jg
dec
xchg
scas
mov
inc
lahf
roll
iret
push
fildll
data16
push
xchg
add
pop
out
aaa
mov
scas
or
mov
jne
mov
jle
pop
mov
cmp
int3
test
pop
int
je
aaa
arpl
push
xor
xchg
cli
sub
cld
out
jnp
loopne
jp
hlt
mov
push
fwait
inc
test
cli
mov
xchg
inc
mov
push
inc
out
ds
loop
mov
scas
test
sbb
add
sbb
mov
sahf
aas
stos
or
dec
xchg
popl
inc
jo
sahf
mov
xor
mov
sub
push
loopne
pop
and
mov
test
test
ljmp
out
sub
iret
cmp
pop
mov
aas
jg
mov
sahf
out
push
pop
inc
cmc
mov
es
lds
stos
pop
mov
loop
xchg
dec
ds
scas
hlt
pop
mov
cmp
push
xlat
in
test
nop
push
xchg
arpl
adc
in
daa
iret
push
sub
cld
pop
test
nop
bound
outsb
jns
jl
jae
cmp
cmc
insb
dec
into
daa
lret
sub
arpl
aad
cmpsb
arpl
jg
dec
xchg
scas
mov
inc
lahf
ss
call
iret
push
fcomip
das
out
shufps
outsl
cmpsb
jg
dec
xchg
scas
mov
inc
lahf
ss
call
iret
push
fcomip
das
and
jb
icebp
cli
or
jbe
out
pusha
xor
push
cltd
or
xchg
mov
or
scas
mov
pushf
push
cmpsb
jp
cmpsb
dec
mov
popf
lods
cmp
lahf
neg
add
enter
dec
sbb
xchg
dec
aad
pop
fwait
mov
sub
dec
lret
pop
jecxz
cmp
ret
movsl
into
jbe
inc
and
jnp
xchg
popa
aad
shr
in
movsl
das
dec
jecxz
movsb
sbb
dec
push
and
mov
loope
nop
adc
hlt
sub
mov
dec
mov
lods
cmp
mov
dec
aam
mov
jae
lock
sub
fwait
test
dec
jne
sarb
cmp
filds
aaa
in
pop
popa
push
insl
push
mov
sahf
inc
ljmp
enter
fwait
je
mov
jns
jnp
jg
lods
mov
fiaddl
out
push
inc
sbb
cmp
loopne
mov
mov
inc
scas
cli
fisttps
xor
inc
dec
mov
push
cmp
insb
cs
stos
push
xor
push
jo
mov
outsb
ljmp
les
pop
test
lahf
in
aas
rorl
mov
loop
dec
neg
testl
jno
pop
in
popf
mov
push
ret
push
in
dec
and
sub
mov
push
jp
call
inc
in
les
jp
aaa
push
jmp
loope
inc
add
shlb
imul
and
xor
or
out
mov
dec
pop
xchg
adc
jecxz
test
negb
and
xchg
cmp
pop
shlb
stos
xor
add
sub
or
pop
scas
ss
jge
fstpl
sbb
mov
jbe
mov
sbbb
jbe
adc
jns
lock
or
jl
or
rolb
inc
stc
daa
xchg
or
sub
pushf
and
mov
shr
jecxz
sub
pusha
roll
cmc
ds
sbb
pop
shlb
insl
adc
aaa
xor
data16
cwtl
mov
pusha
outsl
jmp
pop
pop
xor
pop
jg
push
loop
add
inc
test
jae
mov
scas
out
sahf
inc
adc
repz
scas
into
inc
mov
and
mov
sub
and
pop
mov
adc
cmp
jb
add
jmp
push
push
insl
scas
xchg
imul
cmc
sub
or
test
and
insb
and
inc
xor
mov
jge
jnp
push
inc
dec
je
or
sbb
xlat
mov
mov
sub
sbb
notl
cmp
fnstsw
lret
sub
sub
push
add
fucomip
hlt
jo
or
enter
loop
and
mov
inc
push
jb
push
jbe
fwait
mov
pop
inc
out
add
incl
adc
outsb
pop
les
push
lea
mull
cmp
jmp
lods
pop
jle
jecxz
xchg
cmp
nop
push
add
fs
out
mov
xchg
daa
or
movsb
adc
cmpsl
leave
mov
stos
movsb
mov
mov
xchg
popa
mov
loop
cmp
sub
std
test
mov
sbbb
mov
cmp
mov
and
push
cmp
push
ret
mov
xor
pop
ret
sbb
iret
stc
cmp
mov
jo
mov
and
leave
pop
or
push
pop
fucompp
and
mov
in
clc
and
mov
pop
mov
push
lods
aam
fidivs
rorb
xor
cs
dec
les
lods
pop
sub
and
jmp
pop
shr
sbb
lret
mov
aas
sbb
sub
js
fwait
lcall
add
mov
fisubrl
sahf
shlb
fcomip
loop
ret
mov
pusha
mov
push
and
daa
lock
push
mov
push
in
int3
ret
jb
ja
fisubl
xchg
std
popf
out
pushf
mov
and
dec
cs
add
or
push
aaa
pushf
in
insb
or
sbb
inc
pushf
push
daa
fs
les
mov
mov
or
xlat
cs
popf
das
xor
aaa
pop
pop
sbb
lock
add
adc
out
cli
sahf
sbb
sub
add
lea
cmp
push
xor
mov
push
sbb
rcr
push
jae
xchg
adc
sbb
sbb
test
ret
loope
lea
sub
aad
sbb
sub
int
xor
mov
mov
repnz
das
mov
arpl
sub
mov
es
mov
es
insl
xor
and
inc
cltd
ret
xor
sub
dec
mov
inc
rcr
into
mov
addr16
adc
push
jp
out
xchg
xor
es
jg
into
sti
pop
into
xchg
fbld
das
jbe
les
fs
movb
ds
jo
sahf
cmc
dec
arpl
mov
and
and
out
add
inc
mov
push
dec
xor
clc
repz
loope
inc
pop
dec
clc
xchg
mov
shlb
cmp
jbe
dec
dec
cmp
adc
pushf
rorb
cmp
inc
outsb
out
mov
add
out
orl
shrl
mov
scas
hlt
jne
fildl
dec
xchg
push
inc
iret
ficoms
fs
cmp
xchg
negl
add
xchg
inc
loope
adc
add
iret
test
cmp
or
shll
ds
sbb
outsl
in
loopne
fs
pop
or
jl
ficompl
mov
movsb
jbe
push
mov
push
scas
fildll
xor
testl
adc
and
sarb
mov
xchg
stos
imul
mov
lea
enter
mov
inc
pop
push
inc
popf
repz
daa
int
sub
sarl
sarb
pop
push
mov
dec
adc
xor
or
insb
sahf
or
test
push
shlb
or
repz
mov
pop
leave
outsl
xor
shll
aam
mov
leave
loopne
les
hlt
inc
push
mov
dec
or
imul
inc
js
and
inc
cmpsb
mov
xor
fisttpll
push
out
mov
inc
push
iret
pushf
enter
popf
rcrb
test
mov
mov
daa
fxch
sbb
push
scas
mov
cld
mov
xchg
imul
push
fnstcw
jnp
push
inc
cli
dec
lahf
cmp
int
mov
push
out
das
cmp
ret
mov
mov
fnsave
jo
pop
mov
das
pop
adc
push
mov
stc
xchg
cmp
ja
cmp
int3
popa
pop
imul
xchg
push
sbb
ja
mov
push
and
mov
int3
int3
sbb
jle
cmp
out
out
lahf
mov
dec
fsubl
mov
iret
jecxz
xchg
pop
mov
adc
lods
hlt
xchg
mov
cmp
data16
fimuls
ja
cwtl
repnz
and
jo
cwtl
pop
out
mov
fstl
add
mov
test
dec
sub
pop
mov
or
add
xchg
out
gs
or
cmpsl
cmp
dec
sahf
outsl
inc
adc
cmc
fistps
les
out
mov
xchg
mov
mov
stc
out
stc
sahf
lock
lret
nop
push
lock
xlat
adc
cmc
adc
mov
repnz
push
add
jle
fs
xor
dec
stc
repnz
push
hlt
or
lods
cmc
adc
add
cmp
sbb
outsl
and
jmp
fwait
adc
cmpsb
xor
pop
rcrb
push
push
xlat
add
cwtl
xchg
push
xchg
sub
mov
mov
push
into
inc
or
push
sbb
cs
push
xchg
aaa
icebp
mov
mov
mov
xorb
ss
jb
dec
inc
enter
pop
mov
clc
mov
adcb
orl
jp
lds
outsl
dec
inc
aas
sbb
cmp
push
mov
add
lock
xchg
aad
cmp
fadds
pop
cmc
cmp
pop
mov
mov
dec
inc
lds
enter
adc
cwtl
jg
insb
cli
or
pop
mov
adc
mov
repnz
fwait
aad
xchg
jnp
cmp
insl
inc
mov
push
cmp
xor
mov
mov
mov
push
decb
mov
lock
mov
push
fwait
sub
push
or
fdivl
fsubl
add
pop
mov
pop
loope
or
loopne
jg
inc
push
sbbl
pop
into
add
xchg
in
jl
jmp
lods
jne
push
xor
outsb
scas
ljmp
cmp
rcr
inc
sbb
fists
adc
jne
lds
in
test
jle
cmpsb
ret
lds
inc
icebp
jno
pop
fists
outsb
adc
mov
ljmp
loope
iret
into
dec
xchg
mov
out
mov
mov
push
fs
sub
jb
or
adc
data16
jae
mov
fistpll
xor
je
mov
int
pop
clc
mov
je
push
xchg
xor
and
out
xor
das
push
sbb
addr16
xchg
pushf
test
inc
shl
xor
push
and
call
inc
jnp
or
sti
dec
mov
mov
sub
out
xlat
inc
and
pop
lahf
nop
xchg
fildll
cmp
stos
jmp
adc
cmp
ret
push
sub
loop
jne
mov
in
xchg
imull
shl
dec
mov
jne
xlat
xchg
sarb
ret
add
sub
mov
mov
fs
mov
shll
mov
test
or
xchg
or
push
leave
fwait
es
clc
cs
xchg
inc
dec
test
dec
ljmp
sbb
pop
xlat
jns
dec
bound
pop
inc
out
stc
push
cld
mov
sub
pop
sbb
mov
xchg
push
stos
lcall
push
add
mov
clc
mov
je
repnz
into
jno
or
mov
cmc
jae
sbbb
cltd
mov
int3
xor
addl
sub
std
push
add
bound
inc
loopne
sbb
xor
mov
dec
pop
iret
movsb
jl
sbbb
pushl
loope
cwtl
rcrb
sub
mov
repz
in
movsb
adc
sub
js
int3
pop
sub
icebp
jecxz
mov
sahf
sbb
push
popf
sti
push
ficomps
pop
fsubs
xchg
ret
cmp
lods
sti
xchg
or
push
das
pop
das
xchg
xchg
mov
add
inc
aas
sbb
cmpb
stos
ja
sti
call
insb
and
arpl
jns
mov
inc
repz
pop
xchg
loopne
jo
fcompl
push
lcall
and
mov
adc
mov
pop
iret
lret
sti
int
and
or
cmp
gs
cld
scas
insb
lcall
jmp
jl
test
lock
xor
int3
push
mov
into
push
sbb
cmpsb
dec
sbb
cltd
cmp
aad
cmp
pushf
aad
int
stos
mov
xchg
pop
push
icebp
and
iret
dec
mov
fildll
cmc
les
fldl
cmpsl
push
jnp
push
jo
mov
std
das
mov
leave
jno
and
dec
incl
shll
and
cmpb
add
jmp
or
push
push
mov
out
pop
mov
dec
or
sbb
nop
lds
out
push
test
popf
lcall
adc
stos
hlt
mov
lret
jno
mov
pop
cmp
in
sbb
push
lcall
xchg
sbbl
hlt
pop
loop
arpl
add
movsb
xchg
xchg
popf
int3
movswl
mov
cmp
lret
sub
pop
push
out
pop
push
mov
lea
ljmp
adc
lahf
mov
add
dec
fmuls
xchg
xchg
ljmp
std
negb
movsb
mov
test
icebp
push
cld
scas
jp
jp
mov
rcrl
pusha
les
xor
fsubs
test
mov
add
icebp
ja
mov
popa
adc
pop
fdivrs
and
test
and
jle
out
test
dec
inc
sub
lock
xchg
call
je
enter
movsb
jle
repz
cltd
jl
insb
andl
dec
adc
movsb
ss
mov
pop
sbb
inc
jno
mov
stos
fsubrs
popa
mov
loopne
xor
outsb
xor
das
xor
clc
cltd
divl
and
xor
enter
mov
adcb
rcll
add
mov
push
mov
addl
xchg
inc
sbb
add
xchg
iret
fsubrs
push
jno
in
dec
dec
pop
cmp
or
pop
jge
movsl
mov
rcll
xchg
xor
inc
xchg
jmp
test
ret
xlat
popa
xor
push
adc
out
cmp
pusha
jno
mov
sub
cltd
iret
out
inc
jb
and
lahf
add
cmp
xor
adc
sarb
dec
jecxz
pop
mov
pop
hlt
adc
stos
mov
nop
mov
les
aam
pop
fwait
enter
mov
into
inc
xchg
outsl
xlat
popf
popa
sub
push
pop
push
xchg
jle
je
push
dec
or
inc
rorl
adc
dec
pop
adc
mov
std
mov
sub
pop
push
cmp
add
fcoms
hlt
sub
mov
addr16
test
sti
fmulp
les
insl
out
ffreep
call
fisttps
fmul
push
or
add
test
fwait
call
lret
xor
push
jo
aam
adc
jge
cmp
call
push
push
scas
mov
pcmpgtd
dec
mov
or
pop
loop
neg
imul
push
mov
dec
sbb
out
test
or
sbb
mov
inc
aam
in
add
mov
push
and
into
jg
cmc
call
adc
addr16
cs
add
jns
cmpsb
std
add
xor
mov
push
jae
dec
rorl
data16
mov
jne
push
pop
mov
mov
sub
dec
mov
call
or
and
add
je
xchg
out
insb
mov
fwait
lods
sbb
mov
cs
jns
push
roll
ficoml
loop
xchg
stc
lods
dec
jno
cmpsb
xchg
xchg
pushf
cltd
dec
inc
lea
es
in
add
mov
jle
aam
int3
xlat
and
mov
jg
mov
jbe
in
xlat
pop
mov
jle
sti
cltd
mov
and
push
adc
xlat
jmp
jmp
jbe
sub
es
inc
rcll
hlt
stos
pop
dec
scas
outsl
int
sub
loope
sarl
test
shrl
inc
add
jo
mov
xorb
dec
mov
pop
and
mov
or
movl
mov
ljmp
xor
push
and
ja
inc
out
add
adc
lea
pop
push
loopne
out
inc
cmp
inc
int
and
fcmovu
push
jne
mov
clc
notl
xchg
cmp
pop
mov
in
xor
jge
roll
call
ss
xchg
lahf
inc
dec
sub
xor
mov
mov
xchg
xchg
sbb
shlb
pop
fstl
clc
push
dec
adc
pop
pop
push
cs
cmp
and
in
imul
sahf
stos
mov
int3
or
cwtl
mov
loopne
lahf
data16
cmp
adc
out
cli
inc
adc
insl
mov
mov
xchg
sub
fcmovnbe
mov
dec
into
lea
push
inc
sbb
mov
fnstsw
imul
mov
pop
scas
xchg
fs
testb
adc
pop
fwait
stc
mov
mov
insl
jmp
icebp
fcom
pop
jmp
insw
and
jl
rcll
testl
jnp
push
pop
sub
add
adc
push
inc
fwait
cltd
pop
aam
jle
adc
jo
jg
pushf
fucomi
cmc
add
rorb
bound
xor
cmp
and
mov
mov
pop
or
fisubs
add
pop
jp
hlt
mov
popf
cmpsb
maskmovq
stos
adc
mov
movsl
push
mov
lock
addr16
rclb
cltd
xchg
lret
and
mov
loop
xchg
scas
scas
aam
popf
sti
xor
adcl
outsl
xchg
inc
push
inc
das
pop
loopne
imul
out
mov
int
inc
outsl
jl
mov
or
test
arpl
xchg
add
inc
pusha
xor
imul
in
arpl
stos
mov
loop
insl
iret
lret
out
insl
loop
xchg
jo
or
mov
mov
lret
adc
xor
inc
call
imul
test
scas
xchg
adc
pop
and
cmp
gs
lods
dec
scas
leave
pxor
mov
xor
ja
js
mov
shrb
and
xchg
xchg
pop
cmp
mov
or
cltd
nop
pop
inc
push
and
test
sub
rcll
or
dec
mov
pop
push
mov
icebp
arpl
popa
mov
hlt
sbb
aaa
aas
mov
push
adc
cmp
ss
lods
xchg
iret
adc
cli
arpl
movsb
adc
insb
jge
aas
xor
insl
scas
jo
lock
mov
in
and
pop
xlat
cmpsb
mov
xlat
jge
push
and
popa
cld
pop
mov
jmp
aad
ja
push
mov
test
jbe
orb
fstl
hlt
loopne
repz
std
rorl
or
sbb
sbb
fucom
rorb
popf
add
into
ss
mov
sub
xor
mov
bnd
xchg
jecxz
mov
cmp
mov
cli
adc
jle
mov
arpl
push
cmp
mov
out
jmp
or
xchg
sti
into
xchg
cmp
xor
ds
loope
fidivrl
cmp
loop
xchg
arpl
loope
test
push
jecxz
lret
insl
sbb
jle
dec
pop
shlb
aaa
leave
cltd
dec
jp
mov
movsl
cmpsb
out
dec
jae
add
mov
test
aam
inc
ljmp
xchg
sbb
xlat
sbb
xor
jp
call
xor
mov
pop
shrb
ss
int3
and
or
call
add
jne
loope
cltd
into
adc
jmp
aas
lods
push
sub
jb
test
push
jl
pop
push
dec
dec
cs
xchg
push
dec
movl
notl
pop
xor
inc
xchg
xchg
movsb
stos
and
sub
push
shll
outsl
inc
pop
outsb
rorl
nop
gs
bound
repnz
adc
dec
cmp
repnz
add
push
push
fiaddl
cmpsl
fs
js
es
repnz
inc
in
sbb
mov
xchg
movsb
dec
iret
sar
pop
mov
imul
aas
popl
js
push
lret
cmpsl
mov
sub
pop
xor
sbbl
sub
dec
movb
testb
mulb
pop
mov
jmp
mov
mov
xor
push
je
out
in
inc
adc
xlat
rcll
imul
and
or
jb
fidivs
mov
iret
addl
jno
pop
xor
pop
aad
fisubrl
push
pushf
rorb
pop
dec
fwait
cmpsb
cmp
imul
call
mov
arpl
in
or
jns
sbbb
rcrl
test
add
xchg
push
enter
and
xchg
jl
push
mov
shll
in
ret
lcall
shlb
hlt
jno
push
cmpsl
push
icebp
test
inc
jo
ja
popf
dec
mov
incb
std
xchg
and
dec
xchg
movsb
and
icebp
pop
pop
sbb
ret
daa
adc
inc
mov
and
add
inc
rcrb
inc
push
rcrl
xchg
jle
mov
iret
rorl
sbb
add
or
mov
test
push
sahf
lods
int3
mov
icebp
rcrb
mov
xchg
movsb
fidivrs
fidivrs
adc
clc
xchg
sub
jp
lea
mov
or
fwait
sbb
test
mov
dec
xorb
fnstsw
testl
mov
addr16
dec
dec
aad
jne
xchg
mov
movsl
enter
push
test
subl
shll
pop
jnp
lahf
mov
pusha
mov
scas
add
aad
ja
fsubrs
test
mov
cmpsb
outsl
test
mov
sbb
insl
mov
xchg
xlat
ljmp
imul
xchg
jecxz
adc
adc
jbe
test
lahf
std
and
mov
fnstcw
repnz
push
push
push
dec
sub
fs
subl
ficompl
mov
cmpsb
jg
dec
xchg
scas
mov
inc
lahf
ss
call
iret
push
fcomip
das
out
shufps
outsl
cmpsb
jg
dec
xchg
scas
mov
inc
lahf
ss
call
iret
push
fcomip
sub
xor
pop
sbb
dec
xchg
scas
mov
inc
xchg
ss
call
ss
lret
lret
jmp
pop
mov
mov
xchg
iret
push
lahf
jbe
cltd
adc
inc
xchg
scas
xchg
mov
cmpsl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
or
mov
orb
adc
add
push
int
frstor
std
xchg
or
mov
pop
repnz
loop
add
sub
push
mov
std
mov
mov
pop
ljmp
mov
push
cltd
sub
mov
jle
push
mov
aam
subl
notb
jp
pop
mov
stos
push
mov
lret
mov
ja
ja
xchg
stc
sub
mov
push
adc
in
popf
lods
insl
or
in
adc
fnstsw
and
inc
adc
hlt
scas
in
push
fdivrs
inc
xchg
dec
xchg
cmp
xchg
out
ret
pop
or
jb
bound
sub
pop
lods
int
and
out
cld
ret
dec
aas
jge
mov
mov
jb
shll
push
sarb
in
jb
jp
bound
sub
gs
push
jb
pop
int
mov
call
mov
mov
pop
repnz
sti
jge
lea
popf
sub
pop
bound
sub
movsb
xor
sub
sub
hlt
outsb
pushf
inc
enter
mov
mov
std
push
sarb
repnz
sbb
addr16
arpl
push
mov
push
xchg
testl
pop
lcall
jge
lea
popf
xor
inc
fnsave
std
xchg
or
mov
pop
repnz
loop
adc
and
jb
std
xchg
or
sar
mov
loop
aas
xor
fsubrp
aas
fsubrs
push
or
jp
mov
fnsave
push
pop
dec
mov
and
scas
aad
sbb
lcall
bound
mov
into
stc
push
lods
cld
mov
dec
aam
lods
je
test
mov
mov
pop
leave
inc
mov
mov
xchg
repz
xchg
addb
ret
nop
xchg
andb
add
dec
test
test
pop
bound
dec
push
jnp
imul
jecxz
fldenv
in
hlt
mov
mov
sbb
shrl
adc
and
std
aam
add
jge
or
add
push
inc
jecxz
xchg
icebp
and
daa
push
fsubr
adc
jb
pop
mov
xor
fstpl
or
or
dec
pop
xchg
push
sbb
sbb
sub
fildl
imul
push
ficomps
xchg
xchg
fwait
mov
push
and
inc
xor
loopne
sub
sub
cmp
out
shr
jno
lcall
jae
mov
aad
cmp
mov
ja
addb
pusha
aad
repz
push
inc
xor
pop
xchg
dec
push
jae
push
and
in
mov
jae
or
scas
lcall
arpl
insl
xor
std
pop
cmp
insb
add
shl
pop
daa
or
cmp
mov
leave
scas
jno,pn
fimuls
pop
nop
and
xor
pop
mov
push
mov
pop
ret
mov
cmp
imul
sub
in
icebp
dec
out
popa
pop
fbstp
lods
mov
xchg
push
jns
out
mov
lods
ret
adc
mov
loopne
add
dec
sbb
mov
mov
push
xchg
aad
notl
dec
xor
inc
and
inc
cmp
mov
test
and
jge
pop
cmp
pop
enter
and
mov
adc
mov
mov
add
push
movsl
pop
mov
jo
mov
ficompl
das
sbb
push
ret
xchg
ds
sub
pop
dec
add
es
inc
mov
mulb
out
or
aas
xor
sahf
aad
shrb
cmpsl
xchg
addr16
sub
outsl
xchg
dec
shrb
jmp
std
test
and
stos
popa
or
xor
mov
xchg
pop
and
pop
pop
aad
jmp
xchg
outsb
shlb
std
imul
mov
imul
or
and
push
and
push
lock
out
int3
cwtl
push
es
xor
xchg
inc
xor
fstl
lcall
pop
andl
adc
sbb
sbb
pop
push
mov
sbb
jp
mov
push
sub
mov
jb
inc
cmp
popf
xchg
lds
imul
cli
insl
pop
out
repnz
sarb
imulb
movsb
outsl
mov
lods
xchg
inc
mov
call
cmpsl
mov
loopne
call
ficompl
sub
jg
dec
outsl
rcrb
inc
adc
ja
rcr
lock
call
push
int3
pop
nop
or
hlt
push
fisubl
lods
adc
outsl
xor
pusha
ja
ds
lds
in
pop
imull
fs
cmpsl
mov
pop
roll
pop
cltd
mov
hlt
jae
sbb
jg
test
xchg
ret
cmc
pop
or
out
fdivr
push
mov
pop
pushf
sbb
or
xor
mov
fbld
push
inc
or
aam
push
outsl
dec
or
rcr
out
and
cs
inc
fdivrl
or
pop
inc
push
jge
dec
std
inc
lea
mov
mov
lcall
ss
lods
lods
pop
jecxz
repnz
or
and
mov
aam
scas
push
sub
popf
test
mov
pop
jnp
push
aam
xchg
jae
loop
or
cmp
jns
neg
movsb
xchg
nop
insb
or
jl
stos
adc
jns
ret
mov
add
std
mov
fldl
dec
pop
cmpsb
pop
push
mov
movsb
mov
push
lcall
pusha
jl
rcl
and
out
lds
test
adc
shl
mov
add
aas
xor
cs
adc
mov
xor
stos
jnp
das
jnp
push
mov
out
sbb
sbb
lret
adc
inc
add
movsl
push
cmc
push
jle
icebp
lret
pop
daa
popa
rorl
push
icebp
lock
cmp
sbb
pop
jp
mov
inc
decl
push
push
mov
lea
imul
mov
cltd
add
add
das
mov
rclb
out
sar
ficomps
jnp
adc
insb
hlt
pop
sti
iret
outsb
mov
jnp
add
push
test
mov
js
mov
outsl
adc
int3
lret
or
pop
or
int3
aaa
dec
call
dec
dec
sub
xor
inc
mov
dec
aam
mov
inc
jg
cmp
mov
mov
pushl
pop
fldenv
push
push
lahf
xor
inc
mov
or
xchg
lcall
js
lahf
pop
into
mov
inc
push
nop
das
xchg
test
mov
icebp
and
int3
sbb
mov
leave
dec
inc
adc
sahf
sbb
sahf
mov
pop
mov
inc
push
cmp
std
scas
push
out
out
mov
into
enter
push
int
add
das
sub
jbe
lahf
adc
icebp
pop
lds
pusha
push
pop
mov
ret
mov
adc
xchg
mov
jmp
jns
pop
mov
mov
dec
aaa
mov
push
les
leave
divl
inc
xchg
mov
jecxz
and
sub
add
popf
mov
popf
or
loope
jmp
cmc
add
cpuid
mov
dec
addr16
mov
lret
xchg
outsb
xchg
repz
pop
mov
pop
add
sub
cmp
shl
iret
cmp
sbb
imul
xor
jno
cld
ret
dec
cmp
mov
pop
xchg
inc
push
jae
or
cltd
sub
dec
dec
mov
cltd
rcll
int3
mov
mov
mov
push
xor
dec
pop
inc
mov
orb
fimull
test
nop
push
mov
sbb
lds
mulb
in
movsb
in
mov
jmp
add
cltd
or
sbb
inc
lret
lds
cmp
mov
or
aas
repnz
stos
jo
mov
stc
testb
adc
add
imul
sub
imul
mov
or
mov
push
cltd
and
fiadds
inc
cmpb
sub
fisttpll
repz
xchg
fcmove
ljmp
mov
sbb
jmp
clc
xchg
sub
cld
mov
sbb
sarl
pop
repnz
mov
int
and
xchg
pop
stos
and
stos
push
inc
pop
jnp
addl
sar
mov
mov
ret
jb
jne
fs
or
sbb
push
xchg
pop
fstl
inc
mov
in
and
lock
pushf
mov
jne
cmp
push
and
fnstcw
fisttpll
dec
movsb
cmp
arpl
mov
ss
cs
sti
fisttpl
sbb
aas
push
jmp
outsl
imul
or
js
mov
cwtl
xor
psubb
rcrb
ret
xchg
in
ss
std
std
inc
out
scas
xchg
je
scas
sti
inc
das
sbb
push
clc
pop
imul
inc
iret
sarb
aaa
test
iret
jo
pop
inc
add
sti
jb
icebp
je
aaa
shl
xchg
push
in
jo
dec
cs
popl
adc
stos
xchg
sub
cld
or
push
ret
inc
clc
or
mov
mov
daa
popf
mov
adc
and
jecxz
sbb
daa
sbb
rclb
inc
in
pop
shr
mov
int
popf
pop
jmp
xchg
sbb
inc
cmp
xor
repz
cmp
sbbl
cmp
and
or
inc
das
shl
call
adc
lock
adc
xchg
push
jg
leave
movsb
into
fcoms
enter
lods
in
sub
sub
les
decb
iret
mov
lods
fisubrl
mov
int3
and
mov
insl
dec
lods
negl
fs
xchg
jp
into
jge
mov
adc
rcrb
gs
cld
scas
adc
sub
cmp
mov
pushf
inc
lret
mov
mov
dec
std
dec
xor
adc
and
leave
adc
xlat
push
jge
and
adc
push
es
or
add
add
fs
cmp
movsb
sbb
lods
push
outsl
addb
lods
mov
ret
movsl
popf
je
cmp
pop
lahf
jmp
pop
xor
and
dec
imul
sub
sbb
lea
mov
pop
cmp
loope
sbb
xor
test
cs
and
adc
arpl
or
in
pop
and
aaa
aam
push
and
dec
xchg
addr16
sbb
ja
dec
out
push
mov
cmp
fbstp
outsb
ret
fnsave
ficomps
in
rcr
dec
fsubrp
xchg
mov
mov
test
xcrypt-cbc
cmpsl
push
cwtl
lret
les
popf
movsl
cltd
fidivs
in
inc
and
lods
cmpsb
xor
pop
movsb
push
jne
and
sub
ljmp
add
xor
inc
imul
sahf
mov
or
fldl
jnp
push
jnp
cs
pop
lock
dec
outsl
jecxz
cmpsl
out
sub
js
mov
jo
mov
push
outsb
int
pop
jg
fs
inc
std
xchg
movsb
scas
adc
shrb
adc
cmpsl
cmp
je
xchg
dec
mov
pop
out
inc
ja
iret
movsl
pop
dec
add
adcl
addr16
sub
xchg
mov
std
mov
mov
lret
pop
into
rep
pop
fistps
or
dec
shlb
mov
ja
fisubrl
fdivp
inc
add
dec
jnp
ljmp
int
add
push
mov
cmpsb
xlat
je
shr
push
faddp
cmp
jns
imul
inc
jge
out
dec
inc
sub
inc
push
jne
jecxz
leave
sbb
daa
rclb
in
ja
xor
push
int
shr
xor
outsl
jl
mov
loopne
lods
or
mov
fidivs
adc
adc
push
push
xor
mov
mov
xor
mov
push
xorl
jp
mov
imul
aad
es
leave
sub
roll
subl
pushl
dec
scas
shl
pop
int
inc
loopne
fdiv
rclb
sahf
das
repnz
lock
dec
adc
loopne
jmp
pop
repnz
pusha
pop
out
movsb
in
cld
loopne
lds
add
jmp
inc
test
mov
add
fmuls
lods
je
into
loope
jo
decb
xchg
mov
jmp
mov
push
test
jge
cmc
out
inc
imul
jecxz
rcrb
or
push
cmpsl
inc
xchg
mov
aaa
stos
hlt
xor
jp
pop
mov
inc
call
stos
cmp
fcom
mov
je
and
dec
insl
mov
fwait
stc
adc
dec
movsb
push
scas
mov
xchg
stos
and
arpl
adc
divb
sub
cs
jae
adc
xor
jbe
shrb
aas
inc
cwtl
jns
mov
enter
lret
mov
xor
or
sbb
fstp
jmp
negb
pop
add
jbe
jno
sbb
das
dec
or
and
scas
rolb
rep
push
out
test
loope
lock
cmp
cmp
imul
inc
js
or
xlat
and
push
shlb
call
aad
jne
inc
out
pop
mov
les
fistpl
dec
je
fiaddl
test
pop
scas
push
dec
sub
sub
pop
jne
cmp
pop
pop
test
push
cmp
jno
sti
push
dec
adc
data16
aaa
or
fs
stmxcsr
hlt
data16
call
mov
and
xor
into
inc
xchg
lret
movsb
scas
popa
popa
sbbl
mov
cmp
dec
ss
cltd
lcall
stc
aaa
mov
in
add
pop
icebp
lcall
add
pushf
push
in
add
sarl
mov
add
cmp
scas
orb
or
ljmp
push
roll
jl
jne
push
jb
data16
or
leave
popa
push
js
stc
test
loopne
xchg
pushf
mov
jl
bound
mov
sbb
dec
popf
and
adc
bound
icebp
or
and
xchg
rolb
cmp
orl
mov
fmul
pop
xor
mov
fs
repz
insb
dec
jnp
jecxz
pop
mov
sub
mov
in
mov
xchg
pop
roll
mov
bound
sbb
mov
fidivrl
pop
inc
mov
xchg
out
decl
loope
stc
fsub
cmp
mov
push
push
sub
push
imull
jnp
pop
push
cmpsl
or
cmc
js
mov
add
les
lea
aam
xor
cli
inc
call
sub
aas
insl
xor
push
pop
sub
stc
orb
sbb
scas
mov
loope
mov
mov
sbb
lahf
inc
lret
dec
notl
sub
xchg
pop
adc
inc
mov
and
call
cwtl
sub
dec
mov
jae
pop
sub
out
sbb
jecxz
jne
lea
lret
add
xor
imul
jb
dec
or
mov
push
jne
and
jbe
lcall
ds
rclb
sahf
ret
pop
pop
cs
cltd
push
adc
rorb
adc
jo
je
cmp
and
add
lidtl
or
ret
nop
std
lcall
test
and
cli
mov
shlb
sbb
pop
add
xrelease
out
fldenv
mov
orb
xor
loopne
add
xor
mov
addr16
sahf
dec
mov
dec
pop
xchg
cmp
xor
in
enter
popa
mov
xor
jp
add
cmp
movsl
test
les
push
and
andb
add
test
lds
imul
jbe
into
jo
jle
inc
out
fbld
into
cmpsl
adc
insl
mov
in
sbb
rcrb
fs
xor
fwait
lods
inc
xchg
mov
cld
push
fs
pop
jmp
dec
dec
ljmp
cmp
ss
xlat
xchg
inc
lea
ss
addr16
shlb
mov
loop
jmp
jp
aaa
cmp
sbb
lds
int
out
pop
out
inc
xchg
lods
jno
mov
or
mov
sbb
sub
mov
xlat
idivb
sub
add
dec
push
jbe
mov
ficompl
and
lret
sbb
je
inc
mov
daa
mov
xor
fdivs
cmc
cs
repnz
data16
adc
sub
adc
ds
mov
jge
xchg
mov
mov
cmp
cmp
push
jno
xorb
scas
imul
xor
pop
sub
xchg
ja
inc
and
faddl
hlt
ret
jae
mov
add
push
pop
sub
jge
call
inc
mov
mov
add
aam
add
mov
jle
inc
lods
leave
sti
or
aad
xor
sahf
inc
jmp
fcompl
movsl
fcomi
xor
pop
ja
mov
mov
sbb
cwtl
inc
outsb
sub
jo
add
mov
jns
xor
int
jp
sub
lock
push
rcr
pop
dec
mov
out
jne
fbld
xchg
mov
push
jge
or
pop
sub
cmc
imul
dec
mov
in
mov
jp
adc
mov
jp
jle
hlt
sbb
movsb
sar
sub
in
aas
xor
sub
stc
dec
sahf
btr
call
data16
ret
push
mov
jle
loopne
rcl
rcl
add
push
mull
test
xchg
jmp
push
dec
and
dec
ret
je
insb
cld
sub
ficompl
mov
inc
ljmp
movsb
test
outsl
inc
mov
inc
aad
push
pop
push
test
ljmp
mov
push
mov
scas
inc
leave
dec
xor
ja
cmp
in
testb
int
push
push
cmp
stc
xchg
cld
mov
cmp
fmul
data16
mov
adc
add
inc
inc
pop
push
push
xchg
xchg
sub
push
sbb
and
mov
mov
imul
mov
sbb
aad
mov
xor
pop
pop
pusha
je
incb
dec
and
or
lods
bound
sbb
movl
push
lods
loop
jo
mov
hlt
movsl
mov
imul
push
adc
dec
mov
mul
cmpsl
inc
xchg
fcmovbe
movsl
fsubrs
es
nop
mov
jecxz
sbb
loop
push
cld
jne
inc
adc
mov
outsl
and
xchg
insl
test
sub
aam
enter
cmp
mov
push
orl
xor
mov
stos
cltd
jmp
sub
xchg
pop
mov
push
fnstsw
in
mov
jns
and
into
xchg
xor
mov
cs
inc
mov
adc
insl
jmp
ss
je
enter
flds
jns
xor
pop
push
sub
inc
and
cmc
pop
cmp
out
add
mov
mov
push
xor
shl
inc
jnp
push
sahf
std
sbb
ret
dec
bound
dec
cmp
stos
das
sarb
add
jp
cmpsl
in
sahf
dec
push
je
fistps
mov
xlat
cmp
aas
xchg
dec
cwtl
and
ss
repz
lcall
shrb
jl
dec
add
test
pop
dec
jns
aas
ds
out
mov
inc
dec
pop
iret
outsl
inc
lock
xchg
nop
mov
jb
in
inc
push
xchg
scas
dec
das
xor
std
or
push
jecxz
dec
cmpsw
xchg
sub
and
inc
aad
xor
add
or
xorl
cmp
int3
adc
pop
xor
or
das
jle
xlat
mov
push
ret
mov
shlb
insb
fs
in
sbb
in
fdivrs
movl
scas
adc
mov
in
xchg
jg
cmpsl
ss
push
pop
shr
push
xor
pop
bound
inc
dec
mov
adc
fcoml
pop
sahf
icebp
inc
call
jns
add
in
push
outsl
clc
pop
jg
sub
cltd
daa
add
lcall
or
xchg
adc
cmp
add
popf
xor
lea
arpl
inc
in
loop
mov
jb
and
outsl
es
push
adc
cmp
fisttpll
addr16
or
mov
add
pop
and
or
lock
adc
cmp
sub
data16
pop
push
xchg
pop
pop
or
mov
bound
mov
mov
jbe
fldl
ret
fmuls
push
lds
in
outsb
scas
aam
inc
inc
xchg
ja
and
enter
bound
jge
add
jg
cltd
dec
jne
ljmp
shlb
adc
sub
and
mov
mov
aas
rorb
lcall
jo
sbb
xchg
fwait
ds
aas
dec
mov
aad
mov
mov
fadds
add
xchg
aad
shlb
mov
stos
xchg
js
in
pop
arpl
into
xchg
xchg
adc
and
push
and
inc
pop
pop
mov
xchg
ds
stos
pop
push
nop
sbb
mov
sub
dec
pop
inc
fnstcw
insb
fstps
push
xor
andl
pop
test
add
inc
lahf
loopne
jecxz
or
add
sub
and
sbb
imul
or
jo
push
push
js
ret
daa
xor
icebp
int
or
push
inc
data16
push
mov
outsl
aad
pop
jae
add
jl
mov
lods
daa
int3
inc
adc
jg
out
xchg
testb
fs
cmpsb
sub
test
xor
mov
jns
fnstenv
mov
icebp
mov
lcall
adc
add
push
sub
cmc
sbb
test
and
adc
out
cmp
rorb
pop
repnz
loop
adc
and
jb
std
xchg
or
mov
pop
repnz
loop
adc
and
jb
std
xchg
or
mov
pop
repnz
loop
adc
and
jb
pusha
std
xchg
or
mov
pop
jb
bound
std
aaa
cwtl
lods
and
and
adc
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
mov
nop
xor
movsl
xor
outsb
in
aad
lds
scas
and
sahf
jne
gs
push
into
inc
fidivs
test
cmc
or
lds
mov
mov
jne
gs
inc
les
jnp
push
popf
das
xchg
fwait
sbb
xlat
data16
ja
xor
push
mov
mov
or
dec
jle
cmc
inc
pop
mov
add
loopne
mov
gs
pop
inc
mov
inc
scas
mov
sbb
add
or
lock
dec
cmp
int
scas
cmp
rorl
sub
iret
push
out
fwait
push
jle
jle
mov
pop
jo
and
arpl
jne
stos
xchg
sub
rcrl
mov
adc
xchg
push
pop
jg
cmp
add
fbld
dec
or
js
out
xor
mov
in
aam
pop
stos
hlt
into
push
in
iret
sub
rorb
cmp
lods
dec
imul
test
gs
push
xlat
inc
mov
movsl
es
pop
test
cmc
jbe
imul
lret
dec
mov
sbb
add
hlt
inc
mov
jno
add
ss
push
mov
xor
inc
mov
push
cmpsl
pop
aam
rcrb
mov
cmpsl
and
cmp
fstpt
jmp
andb
into
inc
fidivs
push
test
cmc
outsb
in
aad
lds
scas
and
sahf
jne
gs
push
into
inc
fidivs
push
test
cmc
outsb
in
aad
lds
scas
cmpb
scas
and
in
jb
fdivrl
xlat
adc
push
adc
pop
addr16
xor
xchg
mov
lahf
push
into
inc
insl
mov
sti
pop
scas
mov
and
push
lret
in
jnp
inc
xchg
in
xor
call
mov
pop
jns
jle
pushf
sub
out
in
xchg
insl
xor
jns
cmpsl
xchg
stc
aas
addr16
mov
fsubr
sbb
insb
jge
cmc
js
nop
push
iret
fldl
out
and
pop
nop
call
fcoml
push
xor
lcall
scas
imul
add
test
gs
push
shr
dec
imul
lcall
and
out
call
out
sti
gs
jg
je
imul
add
pop
pop
cmpsb
mov
push
push
out
data16
or
mov
incl
icebp
into
mov
xlat
cmpsl
inc
arpl
cmp
inc
out
adc
ret
push
loopne
xor
inc
sbb
call
sub
arpl
sarb
shlb
dec
arpl
inc
xchg
hlt
lea
test
inc
mov
adc
inc
lods
insl
mov
and
xor
push
mov
or
movsb
sub
fdivrs
pop
orb
out
repnz
lds
out
in
int
mov
jnp
sbb
ja
fistps
out
mov
inc
lret
movsl
mov
xor
inc
clc
inc
fcmovnu
push
inc
jno
mov
inc
ja
xor
sub
and
cmp
ljmp
fstl
lcall
dec
mov
dec
shlb
hlt
test
mov
jno
aaa
jp
rcl
or
xchg
sti
leave
mov
int
pop
cmp
jnp
and
xor
jmp
inc
xchg
cmc
pop
cltd
push
adc
test
and
push
sbb
add
jp
mov
movsl
jecxz
mov
cld
xor
or
fcoml
mov
jge
xchg
and
stos
lea
xchg
mov
rol
andl
aas
pop
shl
xchg
frstor
fistpll
inc
dec
jnp
mov
out
and
lea
add
fldl
adc
lea
lea
pop
push
and
xor
xchg
jecxz
cmp
pop
pop
dec
xchg
call
dec
fcomi
in
and
cmp
dec
sbb
mov
int3
mov
iret
out
mov
add
out
pop
sbb
leave
movsl
adc
push
test
mov
jge
negl
data16
arpl
out
aad
push
and
adc
dec
mov
insb
jl
xor
popf
fwait
femms
fwait
xchg
into
aad
inc
enter
or
mov
ficoms
mov
clc
add
mov
pusha
pop
or
or
adc
mov
ret
pop
rcrl
bound
lahf
push
sbb
adc
jb
jne
push
cmp
out
adc
jne
mov
add
pop
imul
cmpsb
push
sub
ret
mov
test
lods
mov
into
pop
lods
and
cmp
mov
shll
dec
xorb
movsb
push
jne
popf
mov
push
aaa
in
or
std
mov
fmul
test
in
jo
out
sbb
testl
mov
in
push
mov
jecxz
mov
ss
mov
mov
add
arpl
xchg
jge
or
inc
sahf
pushf
mov
xchg
mov
mov
jo
xchg
out
popl
push
leave
push
jge
mov
xlat
test
lods
push
mov
or
xchg
pop
fbstp
mov
fstl
movswl
cmpsl
cmp
dec
or
jmp
loope
adc
adc
dec
jb
loop
je
cli
mov
push
cs
cmpsl
jp
and
sbb
fwait
add
adc
into
cs
adc
xchg
imul
call
rolb
or
jecxz
mov
test
jo
jnp
cwtl
push
fdivrl
xchg
pop
push
enter
cmp
and
xor
inc
in
push
push
ss
iret
inc
insl
lret
push
loope
test
mov
mov
arpl
jno
mov
jl
mov
lea
scas
push
insb
dec
sbb
xrelease
pop
push
jle
adc
aad
jle
inc
aad
inc
repz
dec
movsl
mov
stos
xchg
xchg
clc
mov
dec
fcompl
lea
fmull
loopne
divl
fistpll
jl
fdiv
jmp
cmp
lcall
fistpl
jno
sub
ljmp
aam
pop
pushf
add
dec
xchg
push
jmp
mov
jl
or
mov
push
das
test
or
pop
imul
mov
xor
sub
jmp
cs
xchg
stos
fwait
xor
ret
subl
sub
xor
shll
repz
inc
mov
xor
xor
jg
enter
mov
and
push
mov
cltd
decl
or
insb
lret
cmp
test
cmpsb
imul
cs
lahf
and
je,pt
xor
dec
pop
fidivrs
enterw
sbb
and
jne
movsb
cmp
pop
ljmp
adc
inc
movsb
or
rorl
stos
enter
mov
mov
das
cltd
insb
add
nop
sahf
pushf
idiv
out
imul
sbb
pop
sbb
jl
jecxz
jg
and
repnz
adc
mov
sbb
arpl
push
sub
mov
flds
jns
pushf
das
pusha
dec
imul
jl
adc
mov
sub
pop
pop
cmp
xchg
stos
stos
jmp
in
fdivs
push
stc
push
xchg
dec
cmp
mov
movsb
test
cmp
add
cmp
not
pop
jne
jg
outsb
icebp
clc
jno
lock
mov
jp
jbe
inc
fnsave
pop
mov
xchg
aad
xor
and
jbe
add
mov
dec
jne
int
xorb
adc
inc
movsl
inc
dec
pop
push
inc
add
or
sbb
call
ret
push
xchg
daa
push
movsb
lods
fs
aam
shll
jg
adc
jl
cmp
inc
fnstenv
push
icebp
bound
jg
out
stos
adc
loope
cmp
push
xor
into
sub
and
pop
fucomp
mov
and
push
lret
leave
test
incl
adc
jae
mov
addl
mov
mov
dec
push
jae
rcrl
cmp
loope
shrb
cmp
mov
xchg
jb
out
mov
inc
jge
pop
or
add
lock
insb
xchg
and
push
adc
sbb
dec
mov
mov
loope
xchg
xchg
and
in
xchg
aas
ficomps
dec
insb
sbb
mov
xor
fsubrl
fisttps
jl
xchg
xchg
mov
out
adc
push
call
repz
mov
fistpll
xor
dec
fbstp
dec
push
movsl
adc
cmpsl
ljmp
mov
jge
jns
xor
cmp
cld
cli
out
mov
inc
popa
fidivl
fdivrs
sbb
in
dec
sbb
enter
push
fs
sub
lods
inc
pop
sub
pop
fbld
push
shlb
dec
inc
and
mov
xchg
sub
imul
mov
jmp
mov
sbb
dec
orl
mov
mov
jmp
mov
jg
add
fwait
std
sbb
mov
adc
mov
lea
inc
cmp
test
jecxz
mov
xchg
fnstenv
xor
push
in
and
jno
dec
sbb
ljmp
hlt
mov
inc
pop
popf
pop
inc
push
scas
les
jo
and
cli
xchg
shll
cmp
jae
fnsave
aam
sub
inc
xlat
loop
aas
pop
loopne
sbb
cmp
cmp
xchg
inc
insl
pop
mov
pop
push
loope
inc
fwait
and
repz
inc
mov
out
ja
jo
xchg
test
adc
lds
sub
or
mull
pop
enter
sbb
negl
rcll
add
or
jo
pop
jno
addr16
sarb
popf
xchg
add
jmp
inc
jge
mov
loope
pushl
xchg
daa
mov
lea
fstps
add
dec
inc
out
cmp
jmp
jb
push
outsl
adc
cmp
push
mov
pop
inc
lcall
ret
or
xchg
pop
pop
mov
scas
mov
cmpsb
repnz
push
adcb
push
rorb
in
loopne
movsl
repz
addr16
mov
lcall
inc
aad
repnz
je
cmpsl
push
cmc
lcall
enter
enter
out
dec
push
mov
loopne
pop
add
adc
int
sub
lret
sbb
int
std
dec
cmpsl
jnp
sbb
jl
call
call
lret
push
adc
dec
adc
in
fs
movl
in
int
pop
daa
loop
cmp
out
pushaw
add
push
add
xor
cmp
mov
arpl
filds
pop
daa
iret
gs
lfs
mov
lahf
mov
subl
jp
mov
movsl
addr16
mov
testl
mov
adc
sbb
and
bnd
xchg
andb
repz
jl
push
test
mov
xchg
cltd
std
or
mov
lods
and
popf
cwtl
sub
data16
add
pushw
mov
clc
mov
sti
in
push
fwait
pop
fldcw
sbb
mov
test
pop
mov
jle
cmc
sbb
ljmp
testb
xchg
pop
inc
adc
nop
push
pop
fdivl
pop
loopne
dec
mov
int
aad
mov
hlt
sub
push
test
mov
mov
cmp
in
jl
dec
lret
and
lock
lcall
ja
aad
fucomi
dec
out
dec
add
mov
in
xor
call
dec
mov
call
add
push
or
push
into
out
fwait
out
push
lret
jl
xchg
sub
mov
and
cmpsl
xchg
ss
addr16
cld
mov
dec
and
out
leave
pop
fwait
insb
mov
das
mov
mov
pop
leave
xchg
xor
out
mov
jg
mov
int
sarl
push
jb
call
jl
pop
inc
test
pop
test
or
es
jmp
push
in
push
jno
jge
xchg
inc
call
push
out
pop
adc
sbb
sub
dec
push
mov
rolb
jecxz
es
outsb
and
addb
aad
mov
cmpsl
or
inc
orl
stc
out
jle
jge
jg
pusha
jns
test
pushf
gs
mov
ds
jbe
mov
das
cmp
fsubrs
mov
pop
cld
pop
push
xor
clc
clc
call
in
inc
sub
mov
enter
movsl
cltd
inc
lret
popa
cmp
push
ror
adc
clc
outsb
pop
fstpl
sbb
pop
mov
pop
mov
mov
inc
mov
test
in
jle
mov
mov
inc
jg
sahf
xlat
int3
ret
int3
sub
cli
daa
es
xchg
sahf
jae
jg
jbe
lods
sbb
and
js
and
fs
adc
jl
xor
sub
dec
aam
into
xor
jmp
arpl
aaa
mov
fisttpll
imul
ds
sahf
sub
xor
jl
and
sub
mov
dec
pusha
mov
pop
cmp
mov
clc
jp
out
cmp
pop
xchg
adc
outsb
mov
ja
jnp
xor
and
mov
inc
and
inc
aam
fldz
push
in
mov
push
movsl
push
mov
sbb
call
xchg
rcrb
jnp
sub
ljmp
mov
cmp
out
jle
lods
adc
push
push
adc
dec
xlat
pop
push
add
out
sahf
dec
add
scas
test
stos
stc
lahf
push
ljmp
fnstenv
gs
pusha
adc
mov
ret
das
icebp
cmp
and
cli
pop
pop
fadds
adc
add
inc
mov
sbb
js
sbb
das
lods
test
lds
push
fdiv
or
xorb
sub
push
dec
mov
cmpsb
fisubrs
inc
in
sbb
mov
insl
push
pop
inc
xchg
sti
outsb
mov
shl
lret
xor
push
push
cmc
rol
dec
jne
or
int3
or
xor
cwtl
aad
mov
pop
and
jno
test
xchg
add
popf
ret
jp
pop
mov
imul
enter
sub
pop
sbb
sbb
ss
cld
mov
movsb
enter
call
add
adc
cmp
lahf
cmp
je
popf
mov
mov
mov
lock
es
das
sbb
and
jecxz
sarb
dec
inc
lcall
dec
stc
outsl
adc
aad
ss
rcrl
aas
add
gs
sarb
or
mov
pop
test
sbb
dec
or
mov
adc
and
or
push
ljmp
adc
dec
ds
or
xchg
lods
mov
popf
sbbb
sbb
dec
adc
out
stos
lahf
push
mov
push
pop
dec
cli
mov
mov
fadds
or
ficomps
pop
jo
rcll
pop
or
roll
fcoms
jmp
and
daa
jmp
shrb
xor
mov
stos
out
add
or
push
mov
das
xlat
test
outsl
pop
lahf
test
test
in
mov
lds
sub
sub
adc
es
or
dec
mull
pop
outsl
ds
inc
sbb
ja
cmp
and
push
jg
xchg
jge
and
mov
adc
add
jno
mov
mov
jno
jb
arpl
or
jo
xchg
and
leave
ficoms
push
inc
jecxz
rcrl
jns
repz
mov
cmp
insl
insb
mov
jbe
push
or
div
xchg
dec
push
xor
pusha
push
mov
out
xlat
popf
sub
cmp
xor
out
fs
test
insb
mov
lahf
flds
decl
adc
pop
xchg
lcall
sub
imul
cwtl
cmp
imul
loope
mov
in
fidivrl
mov
dec
inc
sbb
pop
sbb
fidivs
ja
bswap
cmc
xlat
push
sarb
std
xor
jmp
jl
scas
orb
jbe
adc
xor
inc
jmp
pop
xchg
xchg
out
lods
dec
pop
pop
scas
push
test
pop
jmp
scas
test
push
cmpsb
mov
clc
cmp
lds
xchg
mov
dec
bound
jne
push
cmp
inc
dec
xlat
and
mov
add
sbb
xor
push
je
dec
sbb
or
push
sub
icebp
push
xchg
or
imul
mov
cmp
icebp
mov
xchg
pop
jmp
cli
lods
out
xor
fucomip
sub
mov
cmpsb
push
xchg
idivl
ljmp
mov
mov
inc
std
pop
movsl
push
insl
iret
push
mov
pushf
aam
es
mov
jmp
dec
notl
xchg
dec
test
pop
cmp
mov
xchg
or
add
mov
clc
in
or
fwait
je
dec
adc
pop
cld
lret
fnsave
xlat
fwait
push
insb
icebp
leave
fdivrs
or
xor
in
adc
pop
push
insl
push
xor
pop
shll
cltd
gs
xchg
add
ljmp
add
mov
pop
lret
test
repnz
aad
lock
pop
insb
mov
into
stos
jg
dec
jo
jmp
stos
ret
jb
adc
mov
inc
sti
xchg
std
dec
out
sub
mov
pop
movsl
insl
sti
jge
mulb
fisubl
dec
lret
mov
jb
mov
sub
shll
fcmovne
xor
inc
imul
jp
pushf
xor
mov
or
ret
outsl
sbb
test
ja
push
arpl
pop
fiadds
push
add
lds
lret
pop
enter
mov
lods
dec
aas
mov
mov
mov
int3
jo
xchg
fcmove
mov
mov
ja
push
inc
pop
aaa
sub
pushf
xor
frstor
sbb
sub
sbb
fdiv
jmp
xchg
fistl
jmp
or
add
adc
fldt
inc
mov
gs
xchg
aam
sub
xchg
and
mulb
or
js
dec
mov
push
or
add
cwtl
popa
pcmpgtd
inc
adc
sarb
jge
aam
push
inc
dec
int
out
inc
xchg
in
push
cli
cwtl
sahf
loopne
cmpsb
push
ss
in
loopne
or
gs
mov
sub
fmuls
mov
pop
movsb
in
or
xor
inc
icebp
mov
push
or
gs
jl
adc
hlt
mov
mov
xchg
or
cmp
outsl
loop
test
xchg
out
mov
lods
fsubl
inc
aam
out
adc
popf
call
shrw
stc
xchg
xchg
out
inc
lahf
repz
outsb
mov
mov
dec
sbbb
outsb
cmpsl
jbe
imul
lret
add
pushf
jae
fildl
cmp
push
sub
ja
nop
jb
jle
xor
cltd
leave
inc
push
pmaxsw
xchg
call
push
adc
sub
dec
gs
mov
jmp
out
xchg
jle
dec
mov
ret
fistps
shll
mov
pop
lahf
rcll
aad
xchg
ret
lea
adc
adc
or
subb
add
jb
add
subl
mov
fwait
aam
pusha
push
mov
scas
xchg
jg
fisubl
ficompl
js
mov
cli
jecxz
xor
bound
popa
push
mov
mov
out
push
and
fistpll
rclb
mov
movsl
adc
outsb
cmp
mov
leave
or
push
add
fistpll
sbb
cmp
ljmp
insl
sub
mov
inc
mov
push
dec
iret
xchg
hlt
shl
or
clc
xchg
mov
jbe
xchg
data16
ret
cs
dec
adc
out
pop
sbb
test
push
push
pop
and
or
shrb
clc
rorb
mov
jl
mov
lds
stos
pop
sbb
xchg
xchg
sbb
xchg
lahf
xchg
sbb
or
and
mov
mov
insb
lahf
pop
rcl
cmpsl
cmp
inc
push
je
xor
jl
stos
fistpl
pop
inc
pusha
sub
aas
movsl
es
sbb
jbe
inc
rorb
mov
outsb
pop
or
pop
xor
push
push
mov
jno
dec
clc
imul
xor
push
mov
adc
sbb
sub
shlb
lods
fisttpll
js
cmp
cwtl
out
pop
push
cli
jl
out
add
sbb
xchg
mov
repz
test
dec
mov
pop
sbb
imul
cmp
mov
adc
daa
sbb
jmp
or
jge
popa
das
popf
add
dec
push
icebp
mov
test
mov
pop
jle
and
pop
jne
scas
sti
sub
ret
das
pop
adc
jmp
stos
mov
cmp
add
push
xor
pop
pop
push
cwtl
pop
mov
pop
bound
mov
or
imul
mov
jmp
mov
cmpsb
insb
and
nop
lret
pop
xchg
subb
lret
or
rcr
scas
in
push
fistl
mov
lods
cmp
pop
sti
xor
lahf
ret
mov
add
roll
cmpsl
test
cli
loope
inc
inc
out
rcrl
pop
inc
mov
xlat
sub
insb
xchg
push
adc
xlat
push
push
or
mov
mov
in
js
enter
push
notb
cmp
icebp
aad
jae
xchg
cmp
xchg
sub
xchg
fidivl
mov
mov
ret
icebp
xchg
and
stos
push
pop
jns
mov
mov
xlat
sub
cli
hlt
insl
push
gs
in
sbb
mov
hlt
je
push
test
in
xor
and
push
out
mov
stc
or
cmp
loope
push
loopne
add
dec
repnz
xor
ljmp
dec
push
jmp
sbb
div
pushf
xchg
pop
out
mov
out
imul
dec
add
dec
roll
xchg
mov
push
cmp
adc
popa
add
push
into
inc
fidivs
push
test
cmc
outsb
in
aad
lds
scas
and
sahf
jne
gs
push
into
inc
fidivs
push
test
cmc
outsb
in
aad
lds
scas
and
sahf
jne
gs
push
into
inc
fidivs
push
test
cmc
outsb
in
aad
lds
scas
and
sahf
jne
gs
push
into
inc
fidivs
push
test
out
subl
push
mov
xorl
imul
xor
add
adc
pusha
xchg
jo
push
mov
movsl
mov
jne
gs
icebp
add
and
xor
pusha
cmc
adc
popa
xchg
jno
inc
mov
movsl
mov
jne
gs
icebp
add
and
xor
add
sbb
popa
sarb
movsl
rcll
xor
adc
mov
rol
cmp
loop
mov
cmc
inc
mov
xchg
in
push
fisubrl
cmp
hlt
rcrb
dec
cmp
pop
cmc
pushf
in
push
mov
dec
mov
pop
and
mov
mov
jnp
dec
xor
push
lock
and
ret
movsb
data16
mov
mov
adc
adc
xor
not
add
stc
sbb
dec
pop
test
mov
or
shll
nop
inc
les
adc
xor
rol
scas
cmc
pop
shlb
adc
fidivrs
push
cmp
pop
mov
je
pushf
in
push
jno
mov
mov
xorl
add
and
xor
add
adc
popa
xchg
jno
inc
mov
jecxz
cmp
xchg
in
xor
and
push
mov
dec
mov
jne
adc
aaa
and
pmaddwd
xor
test
test
sub
add
adc
dec
lret
xlat
add
mov
mov
xor
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
jne
gs
icebp
add
and
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
xchg
mov
sar
adc
int3
push
mov
pop
inc
cmc
sbb
adc
pop
cmp
rorb
orl
or
mov
push
out
push
push
sbb
loop
std
test
mov
mov
rolb
push
and
out
cmp
mov
aad
shr
jge
jne
rcl
lds
xor
fistpll
fdivrl
and
mov
add
sbb
push
icebp
push
cmp
jmp
or
mov
repz
and
adc
dec
popa
shr
adc
fucomip
xor
into
test
movsb
in
test
inc
push
lret
aas
pop
or
push
inc
push
mov
out
mov
movsb
lods
sar
dec
push
pusha
pop
roll
icebp
popf
push
mov
sub
push
mov
cmpsb
scas
jbe
and
in
scas
jg
xchg
sbb
xchg
inc
ret
adc
js
in
bound
int
dec
jne
mov
ds
sub
jge
inc
mov
ss
mov
in
int3
arpl
aam
test
dec
xchg
mov
roll
scas
mov
dec
incb
rcr
inc
sahf
xor
jnp
loopne
mov
ljmp
adcl
jnp
in
rcl
adc
inc
or
fdivl
cmp
mov
sbbl
pop
add
inc
test
inc
bound
xchg
in
ds
es
push
mov
sbb
into
pushf
jge
insl
mov
inc
inc
adc
es
cmp
cmp
fwait
pop
sub
xchg
loope
js
mov
adcl
int
test
or
mov
fsubrl
pop
test
jb
push
mov
adc
xlat
nop
out
add
imul
daa
rcrl
cmpsb
mov
dec
or
cmp
jne
dec
mov
sub
outsb
push
inc
orb
inc
scas
inc
cmp
sub
out
mov
mov
xchg
sti
xchg
jl
add
push
lret
xchg
mov
hlt
mov
in
movsb
jmp
je
dec
movsb
fwait
test
mov
sub
or
push
xor
hlt
pop
loopne
pushf
stos
lea
shlb
int3
jbe
sub
out
add
add
inc
sbb
xor
adc
in
pop
ret
nop
jo
jmp
arpl
sahf
imul
enter
pop
and
nop
cmpsb
loop
or
xchg
add
adc
pop
pop
pusha
test
test
and
xchg
jae
mov
sub
xchg
into
lea
adc
cmp
add
faddl
movl
add
cmp
fisubrl
test
mov
cmp
adc
icebp
test
jno
pop
jg
shll
or
xorl
mov
lret
dec
sbb
in
subl
or
jecxz
outsb
jp
insl
push
ja
data16
push
mov
mov
sub
gs
lods
jle
lahf
mov
and
adc
dec
sti
imul
leave
imul
sbb
les
pop
mov
mov
js
add
scas
add
and
and
sbb
cmp
loop
aam
xor
aas
cmpsl
repnz
arpl
push
mov
lds
dec
dec
add
into
sbb
sahf
stc
push
xchg
xchg
xor
or
mov
loopne
andl
push
cwtl
xor
mov
std
nop
in
lret
inc
mov
pop
mov
or
imul
mov
testl
out
inc
jb
aad
lret
add
sub
sti
mov
fcmovnu
xchg
lcall
std
scas
shr
aaa
adc
les
xor
rcll
addr16
mov
enter
mov
cmpsl
nop
lock
fucomp
jl
into
cmp
add
dec
push
std
cmp
cs
and
test
mov
mov
cmc
or
bound
imul
and
pop
jle
sub
inc
fldcw
test
insb
mov
bound
out
hlt
pop
loopne
mov
lods
mov
cltd
loop
or
sarb
xchg
sub
jmp
aas
lea
fcoml
imul
pop
add
jno
add
ja
test
pop
push
xor
push
popa
dec
loop
outsl
sbb
mov
sahf
cld
sub
add
cmp
fcmovu
sbb
jg
inc
jne
jp
push
scas
xor
dec
iret
in
jle
sbb
shll
push
or
lds
push
or
xorl
mov
jno
rcll
push
and
roll
leave
loop
repz
xor
and
sub
mov
shrb
adc
imul
cs
jg
xchg
lock
subb
das
test
or
pop
hlt
lahf
sbb
pop
xchg
enter
cmp
mov
jle
lret
cmc
fsubrl
int
sbb
push
loope
ja
fists
xor
jle
push
push
push
push
inc
mov
sbb
cmp
pop
adc
inc
pop
inc
xchg
or
movsb
hlt
roll
adc
mov
lahf
mov
mov
and
in
inc
cmp
push
ljmp
movsl
sahf
pusha
bound
xchg
aas
jl
lea
pop
stc
xor
fs
stos
fisubrs
push
cmpsl
int
mov
add
rol
inc
or
inc
mov
add
hlt
or
lea
aaa
push
out
mov
ja
sbb
and
paddq
jb
push
movsb
jge
mov
mov
pushl
xor
mov
test
cmp
rcr
xchg
pushf
lock
call
adc
vmulpd
xchg
outsb
add
sub
xlat
jecxz
fcoml
adc
out
mov
push
stos
add
sar
dec
dec
and
filds
inc
addr16
lret
scas
out
pop
lahf
enter
cli
je
imul
xor
aaa
xlat
in
les
push
push
imul
test
mov
jb
fnstenv
mov
test
lret
pusha
push
test
fnstsw
in
or
adc
cmp
adc
jge
mov
inc
daa
ja
sbbl
or
popa
sti
sbb
mov
sbb
and
test
fisttps
mov
ret
jo
inc
lock
data16
inc
mov
leave
pop
or
xchg
mov
iret
sub
dec
lods
dec
xchg
outsl
jb
xchg
jecxz,pt
or
cmp
cld
add
imulb
fs
pusha
adc
jnp
aas
dec
clc
mov
sbb
es
adc
mov
sbb
cmp
ret
add
repz
sbb
out
daa
arpl
into
in
mov
cld
jle
cmp
jno
cld
test
push
xchg
lret
es
fwait
sub
pushf
and
push
shrb
or
scas
xchg
mov
shll
adc
and
push
test
insb
pop
test
adc
enter
push
nop
fincstp
ret
cmp
fdivrl
jno
fwait
mov
aam
xchg
adc
in
rcrl
scas
adc
enter
ljmp
adc
push
ret
mov
or
adc
sbb
fidivs
push
inc
mov
aaa
jns
fnsave
add
add
xchg
loope
inc
ror
dec
cmpsb
movsl
repnz
insb
ds
cmp
mov
pop
pop
pushf
xchg
pusha
leave
inc
add
test
push
scas
cwtl
addr16
mov
inc
addr16
pop
push
add
inc
sbb
cmpsb
testl
push
push
lahf
push
jl
pop
and
call
gs
lea
push
mov
mov
scas
loop
cmpsl
hlt
sub
jmp
ds
xchg
mov
dec
fs
mov
int3
scas
mov
fdivrl
inc
mov
lret
pop
dec
mov
mov
xor
testb
mov
je
aaa
test
mov
cmp
xor
and
mov
testl
gs
clc
pop
adc
stc
adc
out
in
sbb
popa
enterw
stos
cmpb
pop
dec
adc
repz
repz
decl
das
push
ljmp
ljmp
dec
pop
fwait
jmp
or
sub
mov
mov
lcall
sti
mov
xor
and
outsl
mov
enter
xchg
into
imul
imul
lods
mov
lret
and
nop
sub
mov
les
push
jne
cmp
sbb
adc
popl
xor
imul
jmp
ljmp
jbe
mov
add
cmpsl
ret
jns
jmp
cmp
movl
shll
cmc
imul
push
and
repz
lcall
out
clc
orb
cmp
adc
mov
cmp
adc
sbb
mov
sti
jns
mov
mov
in
sub
das
fidivrs
jmp
xchg
cmp
or
mov
cmpsl
imul
scas
je
fcmovnb
pushf
xchg
xor
call
sbb
cmp
fisubl
or
xchg
aad
xchg
push
popa
adc
out
mov
sbb
mov
mov
xchg
jp
xchg
cs
lret
and
inc
test
mov
sbb
cmp
pusha
pop
lods
push
dec
sahf
roll
aaa
daa
mov
add
cli
fwait
dec
mov
lock
fld
mov
aas
fdivrl
xchg
and
inc
xor
popf
push
adc
es
shll
pushf
mov
dec
pop
test
in
pop
mov
mov
push
or
lret
movsl
dec
pop
cmpsl
add
adc
lahf
fiadds
push
lcall
lret
mov
adc
into
sub
mulb
sahf
sbb
leave
jo
dec
jle
iret
repz
lods
pop
arpl
jge
cmp
add
insb
mov
imul
aam
sarb
test
out
rolb
sub
sarl
xlat
clc
in
mov
int3
push
lock
lea
shrb
or
fwait
sbbl
fisubrl
or
jne
fiadds
imul
out
sbb
inc
xchg
es
dec
cmp
jae
fistps
in
push
stos
cmpsl
sub
clc
and
sub
mov
pop
adc
push
xchg
inc
mov
pop
xchg
mov
in
add
pop
and
add
inc
icebp
shl
test
sbb
fucom
shl
addr16
adc
mov
pop
arpl
mov
bound
sbb
das
adcl
outsl
xchg
dec
sub
inc
and
out
hlt
pushf
ficompl
push
andl
push
aas
cmp
inc
xchg
fldcw
test
mov
adc
dec
inc
cmpsl
or
clc
inc
jmp
imul
push
adcl
ss
mov
adc
inc
xor
sbb
lcall
mov
xor
and
mov
inc
inc
jmp
or
adc
xchg
cmp
mov
imull
gs
sbb
stos
fs
aam
out
cmp
push
mov
scas
shll
movsl
popa
cltd
shl
sti
add
push
mov
loopne
and
mov
mov
inc
push
sub
ret
test
adc
bound
gs
xchg
aad
push
or
mov
daa
shll
xor
sbb
xor
cmp
pop
xchg
inc
stos
sbb
mov
in
lods
lar
test
cltd
mov
pop
inc
or
push
rcrl
lahf
mov
jg
jl
in
sbb
js
sbb
or
and
xchg
rcrl
sub
and
aam
cwtl
mov
fimuls
sub
push
fwait
mov
mov
negb
cltd
inc
cmp
mov
push
outsl
add
inc
mov
outsl
xchg
repz
data16
xchg
out
ds
mov
jb
shrb
daa
adc
xchg
call
shlb
imul
arpl
nop
jo
out
push
loopne
push
jg
shrl
inc
popa
sbb
cmp
out
pop
sbb
or
adc
and
out
mov
pop
mov
insl
mov
mov
inc
push
pop
mov
inc
push
int
lcall
ja
pushf
movsb
test
push
je
xlat
dec
sahf
cli
inc
bound
push
mov
or
mov
xchg
out
cmp
xchg
fsubrl
fstps
xchg
jne
sbb
cli
stos
scas
ss
lahf
lods
cmp
lahf
cmpb
mov
lcall
or
fstpt
mov
dec
fmull
xchg
pop
adc
call
mov
dec
aaa
and
pop
xor
in
ss
pop
push
int
dec
mov
subb
cmpsb
int3
mov
inc
mov
inc
sbb
lea
sbb
sub
lret
call
xchg
mov
cmpsl
jbe
push
mov
rorb
push
popa
rcrb
lcall
pop
mov
fstl
xchg
dec
cld
jae
adc
mov
jb
mov
repnz
pushf
in
xor
sahf
mov
fisubrl
adc
aaa
mov
int
sub
mov
movsb
cmp
add
test
fiadds
sbb
mov
leave
jae
and
add
pop
lahf
sbb
cli
fs
mov
push
inc
sbb
xchg
aam
lods
imul
sbb
sbb
jge
movsl
lret
dec
mov
xchg
rcrl
aad
lds
pop
sub
popf
cmp
cmc
pop
mov
addb
inc
add
jmp
dec
xlat
dec
loopne
jp
or
jns
fiadds
or
les
jg
repnz
pop
sub
mov
push
xor
dec
lods
push
ja
jmp
mov
inc
mov
out
cmp
in
add
mov
jl
mov
cmp
xor
pusha
push
inc
mov
cmp
fimuls
inc
inc
mov
pusha
bswap
pop
arpl
mov
orb
cmp
mov
mov
inc
je
xor
add
nop
fs
push
jg
xchg
add
sub
pop
ljmp
imul
cmpsb
aas
push
call
dec
inc
xor
fdiv
ror
dec
sbb
jmp
sub
inc
mov
sub
out
adc
fwait
jo
in
push
xchg
mov
fsubrs
push
mov
ret
dec
add
cmp
inc
or
cmp
lock
pop
lret
popf
pop
popf
shrl
xchg
sbb
cmc
dec
popf
jb
jnp
mov
mov
ja
push
out
push
inc
stos
fidivl
fdivs
test
sahf
jmp
push
fcomps
fsubrs
hlt
je
add
sti
dec
mov
push
stos
mov
shrb
iret
inc
cmc
cmp
sbb
not
lret
adc
pushf
push
bound
out
mov
inc
pop
xor
and
pop
mov
lds
xor
pop
fwait
push
add
roll
and
mov
das
mov
add
pop
sub
or
mov
xchg
into
mov
lcall
sbb
nop
mov
xchg
call
push
mov
sub
mov
lcall
lahf
inc
jns
dec
popa
mov
and
sbb
push
jl
pusha
inc
in
data16
mov
push
sbb
sbb
add
scas
sub
mov
dec
cs
add
mov
sub
push
add
fidivrl
push
orl
push
sbb
cmpsb
adc
test
cwtl
adc
mov
enter
push
adc
fcmovb
cld
cmp
je
dec
xchg
mov
fidivl
rclb
push
fildl
cltd
dec
push
jne
fwait
jno
jge
hlt
mov
adc
and
loope
outsb
ja
or
cli
xor
jg
in
xor
jl
push
sub
data16
rcrb
mov
pop
sub
vmread
ret
insl
add
lds
dec
dec
sub
mov
leave
loope
pop
adc
movb
pop
mov
jb
test
pop
mov
push
cmp
pop
call
ret
repz
jo
push
adc
push
roll
xchg
loop
loop
mov
jns
cmp
aaa
dec
adc
mov
jl
fisubrl
shll
rcll
out
xchg
pop
mov
in
sbb
scas
imul
into
xchg
add
imul
sbb
mov
xchg
jl
xchg
or
mov
mov
xor
test
xorl
jns
test
sti
add
mov
push
gs
jb
xchg
out
popf
mul
pop
fucomip
push
sbb
loope
cmp
xor
mov
and
outsb
sbb
cmp
rcrl
or
push
stos
int3
or
mov
add
je
sbb
movsl
sbb
xor
sbb
jg
mov
cli
inc
aam
loop
push
jle
shrl
cltd
adc
mov
fisttpl
sbb
fstl
jnp
dec
leave
dec
sbb
into
les
cmp
mov
ljmp
inc
je
mov
or
push
lods
enter
push
test
lds
popf
in
mov
sbb
or
pop
xchg
add
xorb
push
pop
pop
inc
mov
jo
enter
adcl
fwait
inc
sahf
pop
in
jp
ljmp
lods
imul
sbb
stos
push
dec
icebp
add
dec
fstps
adc
pop
sub
jnp
out
shlb
pop
jl
js
push
xchg
inc
and
jg
mov
stc
insl
mov
xor
mov
xor
std
shl
xlat
mov
mov
xchg
and
mull
add
loop
dec
out
xchg
ljmp
pop
mov
or
icebp
push
fisubl
push
dec
add
fsubrl
pusha
adc
push
mov
pop
jae
in
sub
jl
int3
push
xor
push
xor
mov
loope
and
jecxz
jle
inc
jae
dec
fstps
sbb
outsl
inc
sbbl
sub
jns
aam
jne
jne
fisubs
insb
mov
jo
xor
icebp
inc
pop
dec
cmp
sub
lds
jne
sub
sub
mov
mov
cmp
incb
repz
leave
dec
mov
jnp
gs
and
lds
jle
stos
mov
push
push
dec
sar
lock
shrl
mov
sbb
sub
shlb
adc
cmp
inc
push
cmp
pop
int3
or
mov
or
or
jge
sub
inc
mov
lahf
icebp
jmp
mov
dec
sub
xchg
sti
jecxz
dec
call
push
xor
lea
stc
mov
cmp
mov
jo
cmp
movsl
mov
aad
mov
mov
jg
and
mov
mov
std
sub
fstpl
ljmp
and
adc
xchg
inc
fwait
dec
lds
cmc
flds
pop
xor
cmc
rorl
inc
push
test
jmp
adc
fistl
mov
or
inc
cs
push
hlt
dec
mov
push
in
pop
xchg
iret
jp
inc
lahf
and
xchg
outsl
lock
xor
cwtl
adc
xlat
sarl
cmp
arpl
lahf
stc
sub
test
dec
dec
ja
vpshlw
dec
out
loope
inc
or
pop
mov
jnp
and
or
cli
xchg
movsl
mov
cmp
stos
test
add
outsb
lret
out
pop
mov
into
imul
xlat
xor
dec
mov
push
sbbb
pop
xchg
insb
pushf
cmpsb
pop
negb
pop
js
cmp
cmp
sub
pop
loope
lock
test
adc
fsts
stc
fstpt
in
inc
loop
hlt
pop
pop
popa
fldenv
dec
inc
jmp
push
sahf
clc
or
inc
aad
mov
or
dec
loope
popl
sbbl
mov
jne
lret
cmp
mov
xchg
pop
cld
add
cli
ja
lods
xchg
ficompl
daa
sub
pop
cltd
into
mov
je
inc
mov
out
mov
mov
insl
cmc
sti
adc
nop
xor
push
dec
cmp
lea
xchg
push
xlat
sub
repnz
stc
lods
aas
hlt
dec
push
mov
in
add
jne
cltd
xchg
sar
and
adc
loopne
adc
cli
adc
mov
xchg
gs
icebp
add
and
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
jne
gs
icebp
add
and
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
jne
fs
icebp
add
and
xor
add
adc
popa
xchg
jno
inc
mov
movsl
mov
jne
popa
loope
icebp
test
mov
fisubl
sub
outsl
stos
cmc
adc
mov
repnz
loop
rcl
ret
int
mov
subb
xchg
bound
inc
and
xor
add
add
xor
loop
rcl
ret
mov
test
je
and
xor
add
adc
pop
repnz
loop
rorb
mov
xchg
xchg
addb
push
bound
xor
ja
dec
push
pusha
dec
add
mov
mov
pop
dec
mov
push
pop
fld
popa
cmc
xor
add
adc
or
cmp
or
popf
rcll
fildl
into
add
jmp
sbb
ret
aas
cmc
jae
shlb
popf
push
xchg
push
mov
int3
in
sub
and
cmp
pop
mov
mov
gs
stos
adc
pop
xor
add
adc
sbb
pop
mov
mov
xchg
add
xor
popa
and
cld
in
sbb
lds
das
jnp
mov
int
mov
in
push
pop
add
rcl
ret
int3
mov
mov
push
fs
insb
xor
and
adc
lea
lods
stos
lret
mov
fs
daa
push
and
xor
push
pop
push
insl
adc
test
shlb
jno
roll
xor
insl
ja
push
mov
xchg
test
je
inc
push
push
inc
and
xor
add
adc
in
hlt
loop
rcl
ret
mov
test
je
inc
push
push
inc
and
xor
add
adc
in
push
stos
push
pusha
adc
imul
ljmp
cmp
lret
jg
mov
fs
ds
adc
inc
movsl
inc
push
outsb
or
push
sbb
add
push
cmp
push
sbb
into
mov
daa
inc
dec
pop
movsl
pushf
xchg
dec
cmpsb
mov
mov
and
sahf
pop
idiv
sub
sbb
ja
int3
pop
push
dec
fisttpll
rcr
push
mov
inc
pop
lcall
add
inc
rcrb
sub
and
ljmp
mov
popf
movb
lret
scas
imul
push
cmc
data16
push
push
sbb
xlat
in
adc
pop
ja
inc
or
adc
lcall
lods
jp
ljmp
mov
bound
mov
shlb
sti
cmpsl
lock
push
pop
jnp
call
pushf
stos
xor
cld
xor
outsl
jb
ret
out
out
sub
mov
call
sahf
ret
popf
fs
repnz
push
mov
xorl
stos
mov
adc
ret
mov
push
les
fimull
or
xor
imul
dec
jmp
mov
or
or
push
lods
xchg
insb
imul
in
push
cmc
and
iret
aad
jle
cli
out
jmp
add
pop
lret
xchg
cmp
inc
dec
dec
insb
idiv
ja
xchg
jo
push
pop
pop
or
jns
sub
sub
xor
add
mov
daa
push
fwait
outsl
out
in
lret
jle
dec
daa
jmp
psllq
ds
and
mov
fimull
aas
inc
and
pop
add
movsb
pop
lds
and
cmp
lret
jbe
scas
xor
mov
xlat
in
lahf
sub
adc
cltd
mov
dec
ja
loopne
inc
add
and
mov
sbb
loope
jg
pusha
sbb
push
shlb
add
cld
sti
mov
mov
and
arpl
pop
repnz
loopne
sbbb
lret
jmp
sub
call
div
rcrl
or
jae
jp
call
popa
lea
and
push
and
insl
js
xchg
imul
ss
add
and
sub
sbb
add
mov
mov
add
mov
push
jae
ficoms
and
clc
xor
lock
dec
stc
mov
xor
repnz
ret
aas
add
pop
mov
lret
sti
pop
push
mov
pushf
push
pop
mov
sbb
loope
xchg
adc
push
push
shlb
loope
cli
fdivr
mov
pop
lock
xor
xor
aaa
jb
inc
add
test
and
dec
daa
push
into
inc
push
push
jne
int3
inc
arpl
call
xchg
push
aas
cmp
cvtps2pd
adc
andl
add
nop
mov
mov
pop
pop
sbb
mov
xchg
das
adc
add
cmc
sub
mov
sar
pushaw
jl
xlat
or
cs
inc
pop
notb
fisubrs
push
cmp
dec
leave
iret
loop
mov
outsb
ljmp
pop
cmp
and
push
fldenv
or
cli
stc
jg
sub
lea
pop
fisubrs
or
das
dec
stos
or
jne
in
into
sub
inc
sti
jl
adc
jno
fildll
xchg
lds
ret
jecxz
dec
cltd
push
jo
movsb
mov
inc
push
scas
in
lock
xchg
adc
xor
and
pushf
jae
enter
sti
jbe
adc
aaa
push
movsl
push
sbb
shlb
cmpsl
push
shrb
out
mov
mov
dec
lods
or
sub
dec
outsl
jp
push
mov
xchg
je
loop
lds
sub
sti
add
jp
rorl
dec
shll
int3
mov
xchg
xchg
mov
jb
xlat
sub
icebp
push
stc
push
std
dec
jecxz
adc
hlt
sbb
jns
xchg
out
in
or
xchg
jle
movsl
sbb
stos
loopne
cld
movsl
pop
ja
push
sbb
test
clc
imul
mov
out
por
mov
push
jecxz
xchg
out
sbb
dec
mov
insl
inc
or
push
dec
test
sbb
ss
xor
sti
bound
mul
sbb
dec
insb
mov
xchg
adc
adc
addr16
stos
jbe
icebp
out
enter
mov
faddl
adc
xor
jns
inc
pop
inc
rclb
das
rcrl
xchg
cmpsb
icebp
mov
inc
mov
mov
mov
dec
or
rorb
cmp
fldcw
pop
jb
aas
cmp
ja
into
into
mov
sti
jecxz
aaa
jo
sahf
ret
ret
cmp
enter
xchg
sbb
add
notb
dec
adc
leave
jecxz
xor
adc
xchg
int
sbb
rcrl
mov
aad
inc
rol
pop
inc
cmp
aas
in
add
insb
xor
pusha
mov
push
push
add
mov
mov
mov
dec
pop
mov
shll
cs
jnp
mov
stos
lea
sahf
push
mov
pop
outsb
xchg
fsubrs
cs
jp
clc
inc
ret
pop
fisubs
mov
call
mov
fistpll
test
fmul
jb
dec
cli
sub
repnz
xorb
pop
int
adc
movsb
or
sub
mul
inc
pop
lds
ss
rcrb
sarb
in
sbb
push
inc
inc
or
or
aad
testb
in
adc
push
cli
push
push
ficoms
pop
sbb
push
xchg
cmp
cmp
and
push
sub
mov
bound
jb
inc
cmp
cmp
push
int3
jno
lret
xchg
int
pop
stos
push
push
and
insb
cs
xchg
fadd
mov
stc
cmp
mov
stc
jb
call
mov
lea
movsb
loope
push
bnd
std
mov
jge
or
cmpsb
outsb
pusha
jae
mov
xor
sti
mov
int3
mov
inc
or
mov
push
mov
ss
adc
mov
pop
mov
in
ljmp
and
pusha
imul
and
mov
push
push
xchg
out
out
mov
and
pop
shll
test
cmp
adcl
jnp
pop
xor
or
sbb
pusha
pusha
cwtl
dec
mov
ljmp
imul
adc
insl
hlt
xchg
adc
lods
add
std
in
or
iret
ret
sbb
mov
and
mov
mov
dec
mov
popf
add
nop
mov
inc
mov
fldcw
add
mov
and
dec
mov
rorb
xor
push
and
jp
nopl
cmpsb
or
mov
pop
inc
or
aam
mov
xor
data16
pop
testl
daa
addr16
jge
xchg
shrb
aad
fisubrl
movsb
inc
insb
popf
push
push
mov
mov
divl
xchg
push
sbbl
idivl
push
out
mov
insb
notl
add
xorb
mov
push
inc
enter
pushf
cli
xchg
xlat
int3
int
jl
sbb
insb
mov
test
and
rorl
push
dec
xor
inc
test
test
aaa
pop
insl
repnz
ds
insb
cli
xchg
push
jo
into
std
mov
sti
dec
dec
aam
cs
pusha
add
sti
jle
fwait
cmp
dec
inc
scas
cmp
jo
push
imul
add
mov
mov
popa
or
pop
push
xchg
mov
push
add
sub
mov
xchg
out
int3
fs
cmpsb
lret
fdivs
out
mov
add
push
cli
ret
push
cmpsl
sub
fucomip
adc
insb
lret
mov
add
cli
enter
cmp
sub
mov
xor
sub
pop
test
in
push
dec
stc
mov
mov
out
andl
mov
xor
push
or
mov
sbbb
lahf
shl
stc
orl
sbbb
subl
cltd
mov
sbb
sub
xchg
sbb
jno
ljmp
add
sbb
imul
aam
fldt
cs
cmpsb
xchg
rorb
sbb
mov
lods
push
pop
dec
xchg
in
add
aad
ficoms
popf
adc
and
push
inc
or
sub
adc
into
mov
push
je
std
mov
ljmp
sbb
add
mov
and
mov
icebp
dec
fcoml
lock
jno
cmp
lcall
pop
xor
andl
push
adc
mov
cmp
xchg
fldl
mov
repz
and
out
scas
sbb
pop
cli
inc
stc
xlat
pop
lods
cmp
int
ret
in
mov
popf
lret
daa
push
and
orl
lret
fsub
pop
mov
shrb
and
jb
sbb
packsswb
or
rol
push
and
mov
jg
dec
adc
bsf
icebp
movsb
mov
xchg
pop
imul
mov
push
mov
xor
das
xor
pop
mov
add
movsl
fistpl
aas
clc
mov
shll
clc
jmp
fstps
pop
das
inc
lock
lods
iret
bound
movsl
lods
jl
outsl
sub
arpl
dec
loopne
add
lret
cmp
ret
fadds
cmc
xlat
cmp
movsl
test
push
mov
inc
add
xor
cwtl
sub
and
dec
scas
jnp
push
mov
jae
push
or
jecxz
jb
ljmp
inc
mov
mov
cmp
inc
adc
or
aas
aam
je
fstpt
pop
mov
nop
xor
mov
or
ret
jo
int3
out
mov
idivb
icebp
mov
push
lcall
mov
ret
shr
add
and
jmp
push
cmp
jge
cmp
add
aad
cwtl
cwtl
movsl
cld
lods
lock
push
ja
and
loop
inc
mov
ficoms
inc
ret
cmc
movsl
mov
iret
jo
jecxz
es
in
cmp
dec
push
movsl
subl
lahf
in
lea
add
rcrl
bnd
outsl
xchg
add
mov
arpl
jo
pop
shrl
out
cmp
mov
pusha
xchg
mov
cmp
push
xchg
addb
aam
fists
xor
inc
or
jmp
ss
outsl
pushf
push
jae
jp
push
ljmp
arpl
xchg
aas
add
add
push
pushf
stos
or
lods
test
cmp
jns
push
push
inc
repz
dec
pop
stos
outsb
fisubrl
test
mov
pop
push
adc
push
pop
das
push
jbe
enter
and
push
ret
pop
leave
outsb
cld
popf
lock
jl
in
add
popf
movsl
xor
test
jmp
or
sbb
sbb
aas
sbb
or
cmc
mov
shlb
lcall
addr16
js
mov
ds
shrl
cmpsl
add
xor
in
xor
es
adcb
push
dec
or
xor
les
mov
cmc
sub
loopne
cwtl
dec
adc
not
test
mov
loop
xor
movsb
ror
or
inc
sbb
rclb
add
imul
mull
sub
imul
cs
test
loop
or
aas
add
sbb
pop
insb
in
repz
into
xor
or
iret
cltd
inc
insb
aad
sbb
aam
adc
pushf
add
loop
std
stos
pop
cmp
sbbb
std
nop
inc
aad
in
fmul
nop
leave
flds
pop
mov
inc
xchg
icebp
fidivl
or
cmp
pop
loop
cs
push
inc
xchg
sti
and
je
dec
sahf
std
daa
daa
cs
xor
mov
xchg
fwait
nop
insb
jno
sti
arpl
inc
lds
sub
movsb
xor
inc
cwtl
xchg
xor
in
lds
jnp
hlt
in
fs
lret
cmpsb
push
fldenv
call
and
call
xor
rep
add
aam
stc
ja
cli
mov
mov
xor
cwtl
pushf
pusha
repz
ds
std
in
sbb
mov
mov
adc
dec
jmp
xor
hlt
adc
jp
rcrb
inc
mov
xlat
in
sub
or
cmp
out
ret
pusha
mov
pop
jno
mov
arpl
int
ret
adc
aaa
mov
std
aas
arpl
sbb
dec
out
test
jecxz
stc
pop
test
outsl
add
icebp
test
cmc
cmc
or
insl
xchg
cmp
xchg
xchg
pop
int3
shlb
xchg
adc
pop
pop
dec
mov
push
xor
xchg
mov
das
dec
into
rol
loop
aaa
push
jmp
popf
es
popa
pop
jno
movsb
loope
adc
push
push
add
dec
sbb
lret
mov
sub
enter
inc
pop
xor
xor
push
pusha
sbb
fwait
pusha
hlt
out
dec
rorl
inc
repz
dec
jg
cwtl
sahf
mov
fadd
daa
stos
jle
or
mov
ds
add
imul
cmp
xchg
sbb
mov
sbb
mov
jns
cmp
int3
mov
gs
cmpsb
lds
push
jbe
push
push
iret
adc
jbe
mov
mov
stc
sbb
or
ss
cwtl
push
outsb
cmp
xor
loopne
inc
fdivr
lds
xchg
ficompl
leave
aaa
add
pop
xchg
push
xor
enter
push
gs
pusha
adc
out
push
xor
ret
jno
fs
fwait
mov
ja
es
inc
and
dec
or
imul
fcomip
mov
ror
mov
out
sbb
ret
enter
sbb
add
mov
xor
pop
aam
pop
repz
xchg
xchg
scas
xchg
lods
lret
and
iret
xor
pop
sti
mov
sub
sub
xor
jmp
jle
pop
and
lea
call
push
mov
mov
sti
cmpl
daa
xchg
int3
inc
sub
xlat
pop
imull
adc
pop
out
lcall
push
jmp
inc
into
test
lds
imul
fadd
cmp
lcall
ljmp
xor
repnz
ss
add
mov
je
shll
dec
sbb
or
and
stos
xor
push
ljmp
shl
mov
lods
push
jge
xchg
pushf
sbb
lcall
and
data16
add
sub
mov
jmp
enter
icebp
lcall
adc
ja
stc
nop
out
mov
cmc
stos
fwait
mov
loop
jb
cmp
inc
inc
push
pusha
dec
jp
mov
add
fsub
sub
sub
arpl
and
aas
push
xor
xchg
xchg
in
dec
lds
shll
sub
inc
xchg
aam
iret
scas
sbb
pop
shrl
or
and
cmp
jg
mov
and
fsub
push
jae
ret
pop
sub
mov
add
inc
inc
inc
push
mov
fcoms
xchg
adc
std
addr16
add
rcll
pop
xor
cmpsb
cmp
xchg
cli
pop
sub
ja
cmp
ret
jmp
outsb
out
clc
push
shlb
push
pushf
jmp
and
psrld
leave
and
add
push
lret
gs
movsb
lret
mov
test
add
xchg
sub
rorb
cmp
push
cld
and
xor
mov
or
sub
lods
jns
ror
jno
cmc
das
pop
add
pop
mov
insb
lods
imul
jns
into
mov
rcll
iret
addr16
ds
cmp
pop
xchg
jmp
push
sub
pop
xchg
imul
mov
mov
lods
mov
mov
jns
js
pusha
imul
jns
add
mov
mov
push
push
ljmp
data16
mov
orb
jle
fs
xchg
xorb
lods
test
adc
shrl
jns
ja
hlt
fidivrl
mov
mov
dec
cmp
test
rclb
jnp
and
lock
sub
jbe
cmp
xor
cmp
xchg
jno
mov
cmp
cs
cli
push
stos
and
push
xchg
add
mov
jp
dec
sbb
push
cltd
icebp
lds
rol
ds
jne
inc
mov
dec
pop
dec
adc
test
cmp
cmp
stos
push
je
dec
stc
cmp
cmpsl
enter
dec
shlb
jo
push
aas
insb
popf
and
dec
push
jb
adc
addb
and
xchg
jbe
xchg
cmp
movb
in
outsb
int3
xorb
add
lret
fadd
cmovp
pop
sahf
mov
mov
adcb
ja
jle
cltd
xchg
pop
enter
lret
rolb
mov
push
or
xchg
lcall
xchg
cmp
or
push
push
pop
xor
loopne
add
adc
adc
xor
fdivrs
push
xor
sbb
push
ljmp
jo
sbb
adc
jecxz
shlb
icebp
imul
cmp
sahf
es
dec
pop
cltd
jb
lods
lods
shlb
xchg
sub
scas
mov
fstpl
ds
add
mov
inc
cli
dec
inc
cmp
dec
in
pop
in
lret
xor
lea
mov
subb
xchg
fstpt
xchg
mov
mov
addb
in
cmp
mov
xor
outsl
lea
daa
cmp
repz
pop
add
fdiv
movsl
out
std
push
fcmovu
aad
inc
sarl
loopne
sbb
mov
scas
add
fisubs
rclb
sarb
xor
aam
jbe
sub
jb
mov
outsl
cmp
push
cmp
adc
mov
stc
mov
lock
jb
sbb
and
mov
popf
movsb
mov
add
pop
ds
sbbl
jmp
pop
or
mov
xchg
ja
ds
repz
lds
popf
out
inc
fs
xor
popf
and
lahf
fimull
out
xor
icebp
je
aaa
jecxz
lret
sbb
cmc
dec
repz
inc
gs
mul
out
and
xor
and
daa
and
lods
fisubrs
ss
or
inc
jecxz
xlat
push
mov
lods
jmp
fs
jmp
xchg
loopne
es
bound
mov
aaa
inc
adc
mull
lret
mov
jp
stos
loop
jae
pop
int3
fcomp
sub
adc
fidivs
add
clc
jae
push
enter
in
mov
dec
cmpsb
mov
idiv
push
xchg
push
add
cmc
decb
lds
roll
inc
mov
xchg
stc
jge
xchg
push
mov
pop
ret
ljmp
test
aam
mov
and
sbb
das
jmp
mov
cmpsb
pusha
mov
incl
jno
test
or
pop
cmpsb
mov
testb
scas
cli
and
dec
in
out
adc
dec
ror
inc
movsb
xor
xlat
sbb
pop
sub
or
xor
sub
jge
cld
lcall
in
jle
outsl
pop
sbb
sbb
mov
push
out
aam
pop
pop
inc
pushf
jge
lods
jo
outsb
pusha
icebp
sub
mov
sub
mov
cwtl
js
in
pop
ss
sahf
int3
cmpsl
dec
sub
addr16
jo
push
add
fisubrs
and
mov
outsb
pop
add
repz
mov
ret
lods
dec
pushf
es
sbb
imul
xchg
stc
xchg
popa
fsub
sub
imul
fbld
add
int3
sub
pop
jnp
ret
out
outsb
lods
inc
push
pop
inc
lods
jns
jmp
rolb
icebp
clc
sbb
pop
test
sbb
sub
in
inc
mov
lods
pop
and
fwait
lock
and
testl
data16
inc
adc
into
fistl
dec
shr
inc
mov
ret
dec
call
aam
xchg
inc
sti
sbb
jg
mov
imull
push
jecxz
in
mov
xlat
rcrl
addr16
push
jno
es
mov
mov
push
xchg
lahf
add
pusha
popa
mov
mov
outsb
mov
mov
mov
fidivrl
add
adc
xor
shl
imul
jmp
or
xor
xorl
pop
sbb
mov
arpl
in
mov
jne
pop
add
adc
ret
mov
test
je
inc
push
push
inc
and
xor
add
adc
in
hlt
loop
rcl
ret
mov
test
je
inc
push
push
inc
and
xor
add
adc
in
les
push
aam
xor
mov
test
je
mov
push
inc
and
and
add
cld
add
repnz
sahf
shl
ret
movsb
mov
fs
enter
xor
sti
in
jmp
es
leave
out
imulb
push
in
enter
inc
pop
push
dec
data16
imul
cmp
sub
leave
out
imul
xchg
mov
inc
pop
push
imul
push
or
jns
sub
dec
leave
out
imul
xchg
mov
inc
xchg
or
jbe
push
dec
jns
push
dec
pop
sub
mov
add
pop
cltd
repz
mov
push
test
xor
push
pop
fdivrs
cwtl
xchg
jne
stc
dec
jmp
jl
sbb
sbb
lret
mov
int3
loope
add
lret
sub
aam
int3
data16
mov
push
cmp
inc
stc
ss
sbb
and
inc
mov
lret
cmpsb
rcrl
cwtl
dec
sbb
stc
sbb
movsl
roll
jp
int3
and
stos
or
xchg
int3
and
or
pop
jecxz
or
dec
jmp
cmp
sub
jge
inc
fisubs
stc
mov
adc
and
sbb
lods
or
cmp
jge
jecxz
cltd
xchg
mov
fists
imul
push
icebp
cmp
inc
xchg
lahf
movl
pop
xor
or
push
jge
js
dec
mov
cwtl
lcall
xlat
in
and
pop
fs
push
pop
dec
js
dec
pop
inc
inc
mov
test
xchg
mov
pop
push
dec
data16
imul
cmp
sub
leave
out
imul
xchg
mov
inc
pop
push
dec
data16
imul
cmp
sub
fpatan
push
jnp
fld
js
xchg
stos
dec
out
loop
cltd
and
dec
ret
cmpb
imulb
inc
jo
repz
jge
dec
pop
in
fldt
sub
xor
dec
into
xlat
lods
pop
mov
jbe
inc
pop
jle
iret
cwtl
fwait
sub
mov
pop
mov
cmpsl
out
jmp
scas
dec
insb
cmp
fmull
sub
cli
daa
push
jle
xchg
daa
xchg
add
mov
rcr
imul
mov
jecxz
enter
sti
jp
ja
sub
fisttpl
subl
push
inc
jg
sti
adc
adc
pop
push
mov
into
mov
lcall
pop
insb
imul
inc
sbb
iret
lret
adc
imul
insl
sub
test
xlat
mov
push
inc
popl
andb
icebp
pop
cli
mov
or
loope
jo
ror
mov
testl
rcr
mov
pop
ja
ficomps
push
popa
xor
xor
mov
jmp
sarb
mov
cltd
ljmp
lret
xor
fcoms
lock
loope
sub
xchg
jnp
mov
jae
adc
lea
js
mov
repnz
ret
inc
bnd
je
mov
outsl
pop
aas
mov
add
iret
dec
adc
roll
cltd
scas
test
push
inc
push
jno
cld
outsb
dec
das
jns
and
pmullw
jb
testb
xlat
iret
add
ret
aaa
mov
pop
mov
arpl
fcompl
pop
pusha
lcall
je
je
push
dec
dec
mov
ss
or
xor
or
cmp
xchg
stc
mov
mov
arpl
pop
sbb
mov
repnz
jnp
push
push
cmc
test
inc
xchg
outsb
inc
addb
lods
mov
mov
shlb
mov
inc
xor
mov
xchg
fsubr
lock
ret
xor
cwtl
loope
pop
fbstp
adc
push
outsb
dec
mov
lret
sub
fadds
sbb
fwait
push
cld
aad
or
or
stos
gs
sub
loope
mov
jne
adc
lds
loopne
sub
mov
and
jne
push
lcall
lahf
mov
xchg
dec
mov
movsb
xor
pop
test
xor
inc
nop
into
mov
mov
ret
mov
mov
fiaddl
sti
enter
pop
dec
mov
decl
sti
paddq
jmp
mov
jne
or
setae
cltd
add
js
mov
push
loopne
sti
adc
in
out
pop
adc
push
cmp
bound
in
sahf
and
mov
mov
loope
add
pop
jbe
adc
and
lock
out
cmpsl
or
pushf
int3
enter
xor
imul
out
xor
in
inc
loopne
enter
jecxz
cwtl
adc
mov
cmp
mov
mov
mov
push
mov
mov
pop
nop
mov
mov
push
std
and
mov
fisubrs
movsb
mov
jo
add
mov
fdivs
xor
xchg
mov
or
test
sub
and
xchg
out
cli
stos
jne
dec
add
sbb
cli
mov
add
in
mov
mov
pop
inc
xchg
add
or
pop
lea
mov
cmp
inc
int3
sub
stc
xlat
dec
ss
cmpl
mov
aaa
outsb
pop
fidivs
jp
pop
lahf
ljmp
pop
shrb
xlat
mov
enter
jmp
add
sbb
mov
jmp
ss
cmp
pop
push
lods
pop
jle
cmc
inc
pop
cld
mov
ljmp
add
push
push
xchg
lods
repz
inc
shll
dec
rclb
or
test
add
lods
pop
ret
loop
mov
js
aas
loop
enter
jp
movsb
lds
lds
roll
mov
and
mov
push
sub
mov
cmp
jb
fnstcw
iret
sbb
xchg
adc
sbb
mov
cwtl
and
out
xchg
lds
xchg
pop
mov
mov
pop
rcrl
int
dec
push
pop
add
in
mov
out
mov
fldcw
idivl
adc
push
push
or
mov
and
jae
ljmp
int
in
sbb
enter
les
je
loop
ret
pop
std
ror
fdivl
xchg
fsub
cmpsl
sti
sbb
inc
push
lods
cmp
in
sbb
push
je
inc
aam
and
imulb
out
aam
in
cmp
repz
loopne
ja
jns
lahf
jp
fisttpll
out
push
cmpsb
aam
mov
or
inc
jbe
push
test
ret
divb
lcall
enter
xchg
cmp
adc
std
xor
pop
mov
jb
sub
mov
cmpsl
sbb
test
sbb
mov
mov
lret
ret
jnp
std
gs
adc
ret
dec
loopne
jmp
cmp
pop
inc
sti
cmpsb
xor
cmp
jecxz
insb
imul
sti
jae
add
adc
pop
loope
sbb
adcb
jae
pop
sub
pop
jg
add
aas
ss
fs
inc
test
xchg
add
movsb
xchg
xor
imul
pop
outsl
cmp
mov
or
shl
cwtl
add
adc
xor
cwtl
adc
jecxz
dec
daa
mov
mov
cmpsl
insb
jae
daa
rol
dec
and
sbbl
lcall
mov
incb
loope
lock
sbb
jns
enter
lret
icebp
pushf
out
sub
mov
pop
das
push
mov
mov
jb
mov
inc
cltd
cs
andb
push
pop
mov
mov
and
push
in
push
inc
xor
int
jns
xchg
movsl
dec
inc
inc
or
jbe
stc
inc
shrb
mov
stos
stos
add
outsl
cmpsb
ds
insb
cmpsw
test
dec
orl
lods
add
mov
push
adc
jno
loop
mov
xchg
mov
jmp
movsb
mov
xchg
cmp
cmpsb
xor
dec
mov
pop
ss
in
bnd
jne
js
xchg
sarb
aam
xchg
sbb
push
out
adc
mov
dec
hlt
sar
shl
jmp
or
mov
cmp
adc
imul
add
sbb
dec
daa
js
mov
out
push
mov
cmpsl
cmp
cmpsb
or
sub
xchg
sbb
or
add
gs
test
xchg
cmp
out
loope
enter
jne
testl
or
xchg
fdiv
roll
aaa
shlb
repz
lock
pop
clc
insb
in
loope
push
sbb
mov
xchg
cmc
mov
imul
push
je
sahf
clc
dec
outsb
jb
test
push
stc
xor
inc
jb
jmp
mov
shrb
das
sti
cmp
jecxz
cmp
adc
shlb
add
inc
dec
pop
hlt
jmp
push
sbb
bound
mov
pusha
jae
test
pusha
mov
and
mov
rcl
das
inc
xor
es
mov
imul
iret
pop
push
adc
mov
adc
rol
inc
pslld
cwtl
fisttps
fs
sahf
or
xchg
hlt
sti
ds
xor
push
je
mov
push
xchg
xchg
and
fwait
lahf
or
push
mov
mov
add
xchg
xchg
pop
inc
sub
and
jbe
mov
inc
sub
aas
pcmpgtw
repz
pop
xor
fsubrl
dec
scas
lds
mov
mov
jo
sarb
std
cld
popa
cwtl
ret
stos
call
in
jnp
lea
or
cwtl
or
mov
bound
lret
lea
hlt
out
and
test
les
loope
and
pop
and
mov
sbb
sbb
pop
ret
scas
ja
add
mov
or
das
test
xchg
sarb
test
pushf
out
pop
pusha
leave
jle
cmpsb
jb
test
push
fcomps
pushf
mov
push
lds
testl
adc
xchg
test
jecxz
es
cmc
ret
cmp
jecxz
outsb
or
cmp
xchg
push
mov
lret
adc
insl
dec
repz
movsl
push
lret
sub
or
mov
cwtl
dec
popf
das
add
in
mov
xchg
les
add
lcall
outsb
imul
mov
adc
shll
adc
dec
jmp
inc
jo
clc
mov
pop
scas
mov
mov
pop
add
pop
xlat
movsl
inc
or
pmaxub
xchg
mov
pop
sbb
jnp
mov
dec
cmp
and
repnz
mov
pop
fnstenv
and
aam
jmp
insl
pop
sbb
or
repz
loopne
cs
xchg
xchg
or
insb
repnz
push
mulb
pop
fadd
movsl
jbe
cltd
cltd
nop
clc
adc
stc
mov
imul
daa
cltd
mov
inc
push
mov
shufps
inc
jns
xor
imul
push
mov
shlb
jnp
cmovo
test
sbb
dec
and
insl
test
faddl
ret
in
sbb
mov
ljmp
notb
mov
dec
mov
sbb
mov
rcll
lods
mov
mov
das
loopne,pn
pop
mov
movsl
xor
pop
add
mov
int
jnp
xor
or
mov
push
sub
xchg
fisttps
shlb
adc
push
in
stos
mov
mov
fdivs
push
dec
cs
inc
adc
push
ror
xor
dec
dec
jp
push
fs
xor
stos
xor
ljmp
dec
pop
cwtl
shll
fildll
fldcw
or
cmpsl
dec
mov
test
popl
fcoml
mov
mov
les
popf
ljmp
jp
rorl
dec
and
call
mov
call
mov
inc
mov
outsl
loop
mov
lods
adc
xor
lcall
cltd
lret
push
sbb
cmp
sub
add
add
std
sbb
inc
add
and
mov
ret
sub
inc
xchg
pop
jae
ss
sub
dec
xchg
hlt
jb
dec
insb
mov
and
xor
fs
add
rolb
push
repz
add
mov
mov
mov
roll
xor
scas
push
inc
in
pop
inc
jno
inc
xor
mov
or
aas
sbb
mov
xlat
jg
sub
dec
insb
js
or
mov
jge
fnsave
aaa
mov
adc
mov
mov
out
in
ret
in
adcb
arpl
jle
aad
cmc
mov
in
stos
push
cltd
xchg
je
ret
in
enter
stos
pop
in
inc
adc
out
sub
sbb
int
dec
cltd
movsb
pop
sti
jmp
sbb
mov
xchg
fildll
test
inc
sbb
hlt
loop
repnz
xlat
ret
add
mov
nop
aas
inc
aas
or
fs
cli
mov
mov
leave
popl
mov
rolb
or
and
mov
inc
imul
fsubrs
jb
movsb
and
repnz
cld
push
pop
aad
xor
pushf
push
jno
push
movsl
mov
iret
out
inc
sbb
push
adc
leave
push
jnp
add
push
sub
movsb
pop
cmp
mov
js
mov
hlt
loop
ljmp
push
scas
dec
lret
pop
xchg
push
aam
std
out
dec
sbb
jbe
push
shll
mov
shlb
test
js
not
add
xchg
leave
or
ja
sahf
and
and
pop
cmp
rcr
ds
xor
and
adc
adc
fs
inc
movsl
loopne
push
fucomi
mov
mov
test
and
dec
shr
xor
xchg
add
push
das
dec
js
das
shll
pop
adc
or
xor
pop
in
add
push
js
inc
push
scas
lret
mov
mov
mov
ficompl
mov
in
out
movsl
loopne
sub
sub
xchg
dec
movsl
jp
jmp
loope
aas
push
jb
pop
into
inc
xchg
imul
fnstcw
rorb
pop
push
sub
jne
incl
push
mov
sti
xor
xchg
lahf
xor
hlt
cwtl
jo
xchg
jge
js
inc
inc
cmp
lret
lods
or
and
mov
shll
ss
dec
and
inc
pop
out
cmpl
sub
inc
mov
loop
inc
mov
enter
loop
jns
and
pusha
mov
call
cmp
pop
movsb
sbb
pop
inc
push
std
sbb
pop
ret
push
inc
adc
nop
xor
mull
ja
pop
outsl
loopne
mov
push
sbb
not
ljmp
adc
pop
dec
ficoml
mov
fstpl
outsl
push
rcrb
hlt
roll
dec
adc
js
pop
dec
lods
sbb
call
scas
out
aas
test
bound
and
ficompl
jge
test
fcom
adc
lret
push
push
cld
add
es
push
out
fwait
rolb
push
jnp
xchg
dec
sub
dec
add
jo
and
das
jo
scas
mov
mov
shrb
hlt
movsb
pop
in
jns
mov
imul
xchg
push
sub
inc
divl
jp
xor
add
or
fadd
push
push
add
inc
inc
xor
jecxz
mov
push
xchg
les
outsl
out
sarl
push
arpl
jge
cwtl
inc
sub
cmp
imul
inc
pop
shlb
push
testl
je
cltd
ljmp
enter
or
in
aam
sub
ja
add
jp
in
adc
loopne
mov
add
fildl
push
out
sbb
mov
repnz
pop
jb
push
jg
aad
jb
aaa
jne
andb
mov
inc
into
xor
popa
jne
mov
pop
mov
ja
inc
aad
insl
lcall
imull
insl
sbb
jmp
mov
mov
add
sub
mov
popa
repnz
fwait
addr16
mov
jmp
loop
inc
sbb
or
jmp
inc
pushw
xor
in
bound
pop
daa
xchg
inc
mov
lods
pusha
push
call
rolb
pop
mov
call
mov
fwait
push
mov
fbstp
xchg
add
shrb
fistl
adc
arpl
inc
sub
push
lret
xor
and
popf
push
and
scas
dec
sub
mull
adc
xlat
cmp
lret
dec
int
cmp
dec
fadds
js
and
repz
cli
rorb
cmpl
outsb
adc
push
cld
push
mov
notb
jecxz
lcall
aam
int
repz
fistpl
test
pop
and
mov
cmp
out
rcll
push
fidivl
mov
mov
pop
sbb
shll
mov
xor
mov
sub
pop
xchg
ret
fs
jg
mov
in
jne
adc
and
in
cmp
xorl
test
ljmp
pop
xchg
in
jmp
jl
movsb
inc
mov
stc
and
xor
fwait
add
adc
es
pop
in
add
orl
addb
fisubrl
sbb
pop
adcl
cmpsb
out
aaa
mov
shr
dec
int
nop
mov
inc
sub
fists
cmp
push
cli
inc
or
jecxz
out
pop
iret
fstpl
mov
and
test
ret
scas
in
xor
add
pusha
fldcw
and
sub
xor
das
xlat
adc
ret
mov
cld
jle
mov
sbb
jns
out
incl
nop
andl
jge
pop
adc
cmp
lock
mov
lahf
jns
das
jp
sbb
mov
mov
pushl
test
movsb
pop
movsl
pop
sub
pop
jno
mov
les
movsb
mov
pop
stos
xor
lahf
push
loop
sbb
test
push
movsl
xchg
or
dec
xor
sti
sbb
es
orl
aas
pop
mov
push
mov
push
jo
mov
push
cltd
add
out
or
icebp
or
bound
test
movsb
xchg
dec
iret
mov
mov
adc
dec
lret
mov
in
stos
cmp
inc
lret
mov
out
lods
fimuls
xchg
jl
or
jle
cltd
cwtl
dec
xchg
bound
out
cs
addr16
dec
das
flds
lret
or
xchg
sub
add
testl
popa
adcl
jg
fstp
lahf
cs
int3
lcall
or
push
mov
or
test
lods
ljmp
in
mov
inc
jg
jl
cmp
loop
stc
pop
inc
out
sbb
pcmpeqb
push
fiadds
sub
push
push
fadds
jbe
stc
mov
or
repz
arpl
jp
and
mov
shll
outsl
andl
sbb
jnp
fstps
xor
dec
mov
sbb
jecxz
add
scas
inc
push
rcr
sbb
popa
jmp
not
scas
mov
cli
cwtl
cmp
lret
cmpb
das
inc
sub
sub
sbb
pop
jb
leave
hlt
repz
outsl
xor
add
inc
sub
in
pop
and
scas
xchg
fcoml
aas
loope
mov
jge
fmull
lds
or
push
call
pop
push
sbb
es
inc
aas
call
inc
push
in
cmp
frstor
test
xchg
mov
mov
lea
inc
ljmp
jo
fisubrl
mov
sar
gs
mov
pop
and
cmp
loopne
aam
mov
lock
stos
adc
mov
out
xor
adcl
xchg
ret
sbb
data16
mov
iret
lds
lods
fs
iret
pop
pop
mov
mov
and
lds
jmp
dec
ret
rorb
cmp
into
mov
and
cwtl
xchg
pop
test
xchg
sbb
pop
push
out
push
inc
faddl
addl
mov
loope
cs
pop
sbb
das
pop
inc
das
inc
or
rcrl
or
pop
xor
repz
lods
cltd
jns
lret
lcall
scas
mov
pusha
in
sahf
fcompl
enter
jg
sbb
cmp
lret
lret
enter
mov
dec
adc
sub
sub
xlat
jge
das
inc
inc
mov
inc
dec
push
mov
loopne
daa
frstor
mov
clc
jbe
cwtl
and
mov
jp
fisubs
xchg
sahf
dec
cmp
push
sbb
loope
mulb
rcrb
adc
push
pop
dec
ret
pop
insl
jns
add
int
lock
shlb
hlt
add
out
int3
ds
add
jp
aaa
std
ljmp
sbb
pop
mov
pop
std
cmp
xchg
inc
inc
call
or
and
xchg
in
enter
lret
ja
push
xchg
fdivrs
aam
ss
insb
out
ljmp
jge
xchg
inc
pop
insb
scas
movsl
outsb
mov
inc
sub
hlt
enter
adc
in
hlt
mov
hlt
mov
push
pop
xchg
add
adcb
mov
outsb
ljmp
rclb
mov
xchg
push
add
mov
bound
rol
icebp
xchg
cmpsb
lock
mov
fsubs
in
pop
jno
jbe
sbb
test
cmp
cmp
pop
idivb
mov
jle
mov
out
repz
jo
movl
repz
popa
xchg
push
lods
loop
sbb
arpl
popa
lock
popf
inc
out
fidivs
inc
pop
xchg
lret
into
xor
fdiv
pop
orb
mov
test
and
push
in
or
jmp
dec
push
ret
leave
testl
push
cltd
jle
outsb
mov
dec
ds
dec
fsubs
adc
jmp
xchg
pop
inc
sbb
ss
sbb
sbb
xchg
rolb
adc
jl
push
sub
adc
in
cmp
lods
push
cmc
jno
idivl
leave
out
imul
xchg
mov
inc
pop
push
dec
data16
imul
cmp
sub
leave
out
imul
xchg
mov
inc
pop
push
dec
data16
imul
cmp
sub
fsts
xor
cltd
xchg
and
adcl
push
sbb
or
sbb
sub
leave
out
imul
xchg
mov
inc
cmpsb
push
jecxz
jns
push
jbe
data16
inc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
rorl
cmp
sub
adc
push
jae
inc
mov
xor
and
sbb
or
cmp
sub
js
sbb
xchg
inc
mov
stos
add
xor
and
enter
jmp
inc
cwtl
push
test
cwtl
dec
stos
sbb
xchg
dec
mov
mov
pop
dec
cltd
nop
jge
sbbb
lds
and
inc
cmp
cs
rcrl
dec
xor
icebp
js
sub
inc
xchg
cwtl
addr16
push
lods
mov
lods
adc
arpl
roll
xor
and
sahf
push
out
jge
jno
clc
out
add
notl
push
mov
xchg
pop
pop
or
in
gs
jbe
inc
cmp
dec
jno
enter
imull
cwtl
inc
cmp
pop
fs
adc
stos
fldcw
out
jl
shrb
or
push
jns
cmp
inc
pusha
push
shl
adc
sar
and
adc
rcrl
and
sub
js
jno
cwtl
pop
nop
imul
cmp
mov
pop
test
pop
in
sub
testl
jge
gs
inc
test
jno
popa
xchg
dec
jecxz
in
out
push
fisttpll
pop
push
in
inc
in
xor
adc
je
jb
inc
lahf
and
pop
loope
jmp
js
push
jno
popa
test
fadds
enter
call
icebp
cmp
sub
js
push
jno
popa
test
fadds
enter
call
test
mov
mov
mov
ja
add
je
mov
mov
cmp
mov
scas
leave
clc
je
cmp
mov
mov
popa
mov
cmp
adc
sub
aam
scas
xor
movsl
sahf
pop
adcb
mov
pop
mov
adc
cld
sar
flds
out
push
push
mov
sbb
lods
xor
popl
dec
sub
mov
ds
cltd
rolb
out
cmp
xor
mov
out
into
outsb
mov
jp
sub
adc
push
pop
pop
shlb
cli
adc
icebp
aam
push
outsb
inc
das
pop
int3
int3
jbe
inc
stos
loope
loopne
mov
arpl
push
mov
cmp
lcall
xor
pusha
jl
pop
aad
ret
daa
ficoms
inc
cmp
push
inc
ss
sub
push
push
aad
xor
and
ja
mov
mov
andb
int
loopne
rol
cmovno
cmpsb
mov
test
shll
sub
dec
sub
in
movsl
fwait
sbb
mov
mov
jge
mov
loope
push
cmpl
loop
mov
psubusb
add
mov
cwtl
insl
inc
fimull
fs
int
xor
dec
jge
mov
jl
pusha
lcall
or
test
adc
adc
mov
fildl
add
out
inc
and
pop
fisubs
sbb
or
inc
jns
popf
shl
imul
movsl
add
es
or
push
adc
add
push
sub
or
dec
adc
adc
shrb
jne
aaa
xchg
orl
fst
mov
xor
out
fsubs
das
jb
xchg
in
push
mov
pushf
sbb
add
mov
and
int3
fs
sub
mov
and
xchg
stos
or
aaa
mov
adc
xor
inc
shr
aam
ja
ds
adc
sub
sbb
das
jae
int
stc
stos
call
out
or
mov
push
push
ret
mov
std
fcomps
lods
sub
dec
mov
add
ss
xor
js
lret
cmp
outsl
adc
mov
jge
adc
pusha
pop
xor
and
lods
hlt
xchg
in
fsubr
aas
mov
xlat
push
xor
mov
add
loopne
in
out
mov
decl
aas
out
xor
dec
js
xchg
dec
sbb
add
movsb
add
inc
inc
and
lret
mov
mov
jp
mov
lods
mov
stos
adc
push
jne
daa
adc
sub
push
stos
aam
adc
leave
notl
cld
rcrb
movsl
inc
fisubrs
xor
jne
jo
or
cmpsl
sbb
rcl
jo
cmpl
cmp
jnp
lahf
cmpsb
out
sub
pusha
cmp
inc
mov
scas
cmpsb
push
xor
jno
cmp
dec
aam
sub
mov
add
or
lods
cmp
lret
aaa
lahf
arpl
add
sahf
pop
add
stc
jg
mov
hlt
aas
das
mov
fldt
jno
mov
enter
add
loop
xor
pop
jp
lock
xor
push
insb
xchg
xor
cmp
xchg
sub
fldt
pop
adc
add
movsb
mov
lcall
ds
mov
xor
dec
inc
xchg
xor
push
popf
and
je
push
lcall
mov
out
push
sbb
push
ja
mov
dec
mov
fildl
inc
xchg
xor
add
pop
add
movntq
into
sbb
xchg
push
iret
jbe
jae
jb
lret
inc
add
sub
inc
mov
fcoml
mov
jg
inc
mov
ja
push
cli
jp
andb
or
dec
out
xchg
xchg
or
loopne
pop
pop
int3
cmp
lea
fistps
push
sbb
mov
cmp
aam
pop
js
push
std
ss
filds
add
or
arpl
es
pop
adc
xor
mov
lock
or
mov
sub
sub
dec
mov
inc
ficompl
push
into
int3
out
pop
imul
cld
fstp
mov
sub
sub
and
adc
mov
pop
les
and
repz
sub
repz
adc
sub
sbb
pop
outsb
cli
or
jmp
dec
push
jg
xchg
cmp
push
popa
xlat
add
sbb
push
ljmp
inc
out
dec
cs
jge
fdivrs
decb
mov
xor
sub
adc
hlt
jnp
lods
add
in
out
jbe
dec
pop
in
les
inc
mov
mov
outsl
out
aam
lods
push
mov
push
repnz
mov
sub
loope
shlb
or
test
outsl
fsubs
mov
jbe
lds
adc
call
rclb
mov
mov
jns
push
adc
fdiv
shlb
sbb
mov
pop
arpl
dec
leave
dec
xor
pop
ret
hlt
or
inc
mov
mov
ds
outsb
cmp
xchg
and
in
sub
pop
cmp
lods
subb
push
dec
jge
xchg
repz
push
xchg
out
push
hlt
push
add
arpl
lods
inc
sti
pop
ljmp
nop
ds
cli
sub
inc
and
dec
xor
in
inc
ret
mov
cmpsb
cmp
mov
arpl
sub
bnd
daa
mov
ljmp
int3
cmp
cmp
jbe
ret
add
aam
or
and
dec
lret
xchg
inc
inc
jecxz
and
push
icebp
fdivl
sahf
mov
in
stos
pusha
fwait
aad
mov
mov
mov
xchg
jns
aam
jbe
mov
ffreep
jne
into
test
ja
mov
xchg
mov
push
inc
insb
and
pmaxsw
loop
test
jg
cmp
arpl
push
sahf
mov
and
test
test
mov
xor
hlt
hlt
out
sbb
xchg
mov
pop
jb
and
dec
out
push
xor
or
mov
mov
decl
jle
notb
stc
or
adc
mov
mov
ss
leave
imul
clc
jge
mov
roll
cmpsb
adc
xor
xchg
mov
bound
shlb
stos
fdivl
daa
daa
aad
push
pusha
sub
mov
jae
icebp
add
repz
and
in
jp
test
popf
ja
mov
jnp
pop
movzwl
pop
or
fstpl
aaa
sbb
sbb
sbbb
repnz
mov
orb
push
inc
dec
cmp
movsb
test
into
push
mov
scas
pop
repz
adc
bound
punpckhwd
mov
gs
jns
mov
mov
add
loopne
jns
testb
repnz
das
outsl
hlt
fsts
mov
sbb
je,pt
cld
aaa
in
dec
out
adc
xchg
lods
push
out
inc
xchg
test
lds
ljmp
sbb
fwait
push
cmp
xchg
mov
rcrl
push
dec
lret
jmp
mull
dec
fiadds
test
jmp
jo
xchg
add
popa
lea
pop
popf
push
stos
mov
inc
xor
hlt
fdivs
lea
or
gs
cmp
xor
fcomip
dec
shrl
mov
das
movsl
loop
or
mov
roll
lret
cwtl
mov
or
clc
sub
xor
and
data16
mov
push
int
fimuls
in
xor
sbb
out
arpl
imul
addr16
nop
jmp
stos
movsl
jecxz
mov
fimuls
mov
lret
nop
ja
xor
insb
bound
sub
out
cwtl
pop
add
leave
fsqrt
mov
mov
pop
pushf
jbe
and
inc
sahf
inc
sarb
ja
jg
mov
repnz
push
outsb
data16
fcmovne
xchg
sub
leave
inc
mov
dec
push
lahf
mov
pop
bound
or
xchg
in
fldcw
je
cmc
jno
scas
jle
sti
lret
movsb
xor
test
rcrb
mov
sbb
leave
mov
es
or
xchg
jle
dec
jo
dec
adc
ret
xor
das
or
mov
repz
loopne
lods
xchg
or
jecxz
into
push
out
outsl
add
dec
lret
inc
jle
add
inc
lods
es
pusha
lods
inc
push
loop
mov
fstps
jbe
xchg
add
mov
pop
cmp
dec
inc
lds
or
jb
popf
inc
imul
pop
daa
pusha
mov
mov
and
mov
std
xor
test
jb
and
xchg
inc
xor
int
and
movsl
sbb
sub
jge
lods
sbb
cmp
push
lret
adc
hlt
push
add
mov
jmp
xchg
es
pop
dec
andb
stos
ja
cltd
jge
pusha
cmp
push
aas
movlps
jmp
add
sbb
test
jg
fstpl
mov
pushf
movsl
es
movsl
lahf
jmp
add
insl
pop
or
or
repz
push
push
cltd
and
dec
xor
daa
lret
loopne
sbb
cmp
dec
cmpsl
sbb
aas
pop
outsl
lea
mov
pop
idiv
lcall
cmp
fs
jnp
jmp
pop
jns
jge
imul
das
dec
mov
adc
aad
push
add
push
cltd
mov
inc
loope
mov
sub
inc
sub
lcall
int
lcall
insb
jge
adc
pop
es
add
subl
sahf
cmpsl
xor
mov
insl
xchg
jno
imul
jmp
test
arpl
or
fwait
cmpsb
cli
outsb
addr16
rclb
or
add
sbbb
and
stos
pop
punpckhwd
stc
mov
xchg
repz
mov
lret
scas
xor
daa
xchg
pop
pop
mov
imul
ds
add
xchg
add
mov
xor
jmp
sbbl
pop
rcl
jge
lcall
sub
vaddpd
mov
mov
repnz
and
cltd
inc
mov
movsl
nop
mov
sub
push
ja
push
add
shll
push
dec
fdivr
out
jmp
mov
std
sbb
fidivrs
cltd
mov
xchg
or
cs
pop
cmp
inc
xchg
fiadds
fs
add
insb
or
sbb
adc
scas
test
cmp
sti
and
cmp
add
xlat
out
into
add
rclb
pop
jle
mov
or
jecxz
dec
fwait
imul
mov
xchg
jne
push
scas
jb
popa
in
mov
mov
testl
in
cmp
dec
adc
pop
or
jle
dec
out
dec
xor
sbb
aas
sbb
lods
test
cmpsl
mov
mov
mulb
scas
jne
mov
roll
out
in
xor
pushf
adc
fcmovne
mov
sbb
xchg
rorl
jecxz
out
mov
xchg
loopne
dec
xchg
jbe
xorl
fimull
clc
ret
pop
hlt
sbb
sub
rcll
or
cmp
jbe
add
mov
mov
mov
nop
inc
int3
cmpsb
and
loopne
sti
out
out
out
dec
inc
xor
cmpsb
lahf
mov
ja
inc
jecxz
mov
pop
sub
and
loope
xchg
jbe
ret
lcall
lret
xor
mov
mov
pop
outsl
scas
inc
sub
dec
jo
sub
popa
fidivs
out
icebp
and
pop
sub
and
lcall
mov
push
jmp
xchg
loop
inc
lea
sti
mov
mov
insb
add
ss
les
jbe
lock
dec
sbb
and
aaa
imul
dec
dec
hlt
repnz
cmpsb
dec
lock
stc
lods
xchg
aaa
jp
push
shrb
sahf
mov
cmp
int
repnz
mov
sar
and
out
inc
cmpsb
jge
std
fstpt
addr16
es
es
js
sarl
dec
pop
xlat
xchg
lea
cwtl
mov
gs
jne
adc
dec
sub
cwtl
mov
sbb
inc
fld
lcall
data16
pop
scas
daa
fmull
push
jno
mov
fists
ljmp
shrl
mov
andl
and
sub
pop
ds
popf
pushf
scas
ja
sarl
push
push
and
xchg
ret
lret
inc
into
sbb
mov
mov
out
cli
jle
cld
inc
sub
iret
loop
mov
add
pop
mov
mov
adc
enter
enter
inc
lahf
dec
mov
jle
leave
ds
add
lret
fcom
enter
dec
sub
add
andl
lods
and
dec
mov
dec
into
int
bound
das
xchg
jecxz
leave
mov
cltd
mov
push
adc
mov
push
sub
mov
jns
iret
pop
pop
push
out
je
or
dec
push
adc
pop
jl
mov
or
xor
push
popa
xor
clc
xchg
mov
in
sbb
jl
adc
pushf
sub
pop
ja
mov
mov
mov
call
leave
icebp
mov
add
enter
sub
mov
addr16
lahf
mov
mov
dec
xchg
aad
test
mov
aad
pop
stc
insb
insb
out
mov
jge
and
les
jp
adc
adc
dec
mov
iret
outsb
sub
mov
pop
pusha
cmp
sahf
out
clc
pusha
xchg
ja
jnp
ret
in
mov
fisubl
cmp
sub
or
pop
mov
jl
jmp
call
in
icebp
outsl
in
addr16
inc
shll
cmpsl
mov
sbb
rolb
inc
sub
or
pop
push
loopne
mov
lahf
push
pop
lock
cwtl
push
jno
adc
add
and
and
scas
xor
ss
loop
adc
sub
xchg
jbe
cmp
mov
mov
mov
stos
jae
ja
jp
add
adc
pop
sar
xchg
lds
mov
xor
dec
movl
xor
mov
rcrb
test
dec
aaa
fdivrs
and
les
adc
scas
out
test
in
and
in
lcall
xlat
in
sub
jle
cmpsb
mov
lea
mov
mov
in
fwait
dec
fstl
push
sub
push
cmp
or
sub
xchg
pushf
fiaddl
aas
push
fcmovb
pop
cmpsl
cmp
loop
rclb
popa
sub
and
cli
xor
jne
mov
ja
das
ret
push
add
cmp
push
leave
xchg
mov
lds
push
sbb
cwtl
movsb
stos
sub
popf
cmp
lock
jp
inc
bnd
repnz
iret
push
nop
push
jne
scas
inc
leave
pusha
cwtl
cmpb
mov
addr16
mov
sbb
adc
pop
icebp
dec
adc
aaa
mov
dec
sarb
sub
mov
pop
jbe
jle
xchg
hlt
cli
imul
shlb
push
div
int3
cmp
in
sbb
add
push
mov
mov
inc
mov
repnz
inc
jp
pop
cmp
ja
and
dec
int
ss
aam
cwtl
insb
dec
enter
dec
mov
hlt
xor
xorl
cld
popf
ret
sbb
mov
rcl
mov
xchg
mov
adcb
push
faddl
test
xchg
adc
inc
push
lea
sub
mov
dec
scas
aas
fdivr
mov
test
or
push
sub
add
fnstsw
dec
bound
scas
jecxz
push
repz
movsl
rorb
cli
mov
xor
cmp
mov
pusha
mov
les
lock
push
loope
mov
sub
fmuls
insl
push
mov
out
jge
jmp
sub
mov
and
in
fs
fimuls
pushf
dec
push
xorl
mov
lods
scas
or
pop
rclb
sbb
dec
push
mov
push
cmp
jns
push
and
orl
cmc
aam
mov
xor
sbb
out
or
lods
add
jbe
outsb
in
imul
or
mov
sbb
and
orl
rorl
insb
adc
rcrl
punpckhbw
xchg
jo
lea
xorb
js
arpl
out
sbb
rorl
iret
popa
jg
dec
outsb
lea
xchg
fs
cli
sub
sub
push
mov
cs
loopne
and
fimull
and
pop
jg
js
adc
cld
cmp
inc
pop
mov
inc
mov
sbb
into
mov
push
mov
fwait
lds
adc
movsl
mov
mov
add
mov
test
push
std
xor
shl
add
add
mov
loop
mov
and
stc
lret
int
push
es
es
mov
jge
dec
out
pushf
inc
sub
dec
insl
sub
add
aad
icebp
stc
or
imul
inc
cli
and
movsl
cmp
mov
and
addr16
pop
or
lds
fiadds
andb
call
shrl
scas
addl
cmp
sub
push
insl
pop
adc
xor
cmp
dec
push
data16
cmp
sub
push
movntps
ret
inc
sub
xchg
pusha
jbe
rolb
add
pop
bound
ja
xor
or
pop
inc
mov
mov
fisubrs
sub
adc
iret
les
mov
cmpb
push
daa
fwait
mov
movsb
or
movsl
fcomi
push
sarb
pop
inc
out
mov
imul
dec
inc
imul
dec
mov
adc
popa
xor
xor
cmp
xchg
inc
mov
test
orb
fimull
int
repz
inc
mov
data16
loope
in
sub
jp
sub
cmpsb
adc
dec
lea
jp
sbb
iret
pusha
pop
xchg
loope
or
sub
jno
sbb
and
orb
push
cmp
adcl
mov
or
fcompl
mov
pop
push
and
xor
jmp
loope
jge
repz
push
repnz
orb
icebp
loopne
or
add
xchg
fildl
ljmp
mov
xchg
movsl
push
push
enter
inc
outsb
in
shr
pop
js
pop
js
cld
xlat
mov
in
cmpb
inc
loopne
push
mov
jo
sub
ficompl
in
popf
and
fnstcw
fwait
dec
mov
push
xchg
neg
push
xchg
push
das
pop
lea
or
dec
stos
pop
cwtl
lock
push
inc
pop
adc
sti
push
out
imul
jl
inc
aaa
mov
imul
jne
call
jnp
push
lcall
xor
rorb
std
sbb
faddl
das
adc
push
cmc
adc
stos
enter
xchg
mov
cli
mov
int3
jmp
mov
into
inc
fwait
mov
cwtl
ss
dec
inc
lods
cmp
mov
dec
and
arpl
adc
das
xchg
lcall
sbb
insl
rcr
mov
sub
nop
push
xchg
xor
popf
lcall
and
es
xchg
lret
ret
dec
rcll
gs
sub
mov
adc
addb
fdivs
xchg
js
call
or
das
iret
dec
mov
iret
loopne
xor
xchg
pop
xchg
imul
std
adc
xchg
pop
sarb
fwait
out
add
sub
xchg
add
in
mov
cmp
add
lods
push
icebp
dec
fidivs
lcall
out
xchg
fisubrl
xchg
dec
cwtl
mov
fwait
jp
int
es
lret
dec
lea
pusha
xchg
aad
pop
dec
daa
int
lods
minps
fwait
adc
lret
and
mov
lds
out
jge
icebp
dec
stc
lods
mov
jg
movsl
dec
sbb
mov
lcall
pop
cld
sub
imul
or
pop
test
xor
jb
jae
or
repz
aam
stos
pop
cs
daa
add
in
jge
cld
pop
clc
mov
ljmp
or
jmp
adc
and
das
dec
sub
lret
sub
dec
or
mov
add
xlat
push
lods
out
pop
and
movsl
or
push
cmpsb
imul
adc
jbe
fldpi
push
pop
adc
or
dec
les
jg
mov
or
cmp
sub
js
push
jno
popa
test
fadds
enter
call
icebp
cmp
sub
js
push
jno
popa
test
fadds
enter
call
icebp
cmp
sub
js
push
jne
popa
lods
adc
add
in
in
cmc
or
cmp
sub
js
test
cwtl
mov
fbld
mov
pop
testb
insl
adc
push
dec
clc
and
std
push
in
inc
popf
aaa
lea
mov
testb
insl
sbb
xchg
sub
data16
push
in
inc
popf
push
mov
mov
testb
insl
sbb
xchg
sub
inc
lea
mov
popf
jo
jp
jae
jno
mov
add
adc
dec
xchg
cmpsb
adcl
ljmp
jmp
mov
cmpb
rcrl
or
inc
cltd
add
lea
scas
cld
push
mov
add
add
fildll
dec
jb
arpl
addr16
push
push
sbb
fwait
lods
lret
push
mov
mov
cmpsb
fs
sub
cltd
sbb
adc
int
movb
push
push
ss
nop
lret
loop
sub
xchg
mov
jae
test
or
out
scas
mov
inc
push
xchg
lcall
mov
jp
scas
stc
sahf
testb
insl
sbb
xchg
sub
data16
push
in
inc
popf
lea
mov
imulb
lahf
cmp
push
repz
jg
add
int3
popa
fsubs
sub
sub
js
inc
jecxz
shrl
adc
adc
push
call
push
cmp
or
cmp
jbe
data16
push
in
inc
popf
lea
mov
testb
insl
sbb
xchg
sub
data16
push
in
inc
popf
lea
mov
imulb
loopne
adc
int
jmp
outsb
pushw
js
and
xchg
mov
mov
fucomi
dec
ljmp
stos
xchg
inc
xchg
lahf
movsb
lcall
cmp
and
mov
faddl
push
jo
fnstenv
and
push
xor
push
lods
xor
jae
test
ja
jns
xchg
mov
int
jo
xbegin
pop
stos
notb
std
jl
dec
sbb
pusha
or
aam
js
incl
hlt
aad
jl
cmp
outsl
xchg
in
add
dec
out
rol
inc
xor
stc
or
mov
int
xchg
mov
cmpsl
dec
inc
xor
xor
pop
test
and
mov
popa
in
cmpsl
sub
push
and
enter
add
dec
hlt
push
sysret
gs
pop
mov
jbe
or
push
shl
sub
stos
jge
sbb
jb
out
cltd
jp
sti
mov
pop
pop
arpl
stc
mov
and
cmp
pop
push
xor
inc
mov
inc
push
mov
xchg
inc
shlb
mov
lods
adc
outsl
jg
mov
adc
xchg
cli
or
fcomps
pop
jecxz
hlt
mov
incb
lods
loope
jp
mov
mov
jl
pushf
mov
ss
xor
in
add
dec
loop
outsl
add
push
jmp
sbb
and
dec
dec
sbb
sbb
test
bound
mov
adc
cmpsb
aad
dec
outsb
popf
mov
mov
insb
lods
mov
fcom
outsl
addl
and
xchg
add
xchg
cmp
cmpsl
es
js
es
xchg
in
or
xor
insl
stos
mov
jae
xor
xor
fyl2xp1
lods
fdivl
mov
and
daa
cmp
and
out
cs
std
or
das
out
xor
push
cld
arpl
add
jge
sti
cmp
sbb
mov
pop
sub
sub
dec
dec
stc
push
das
push
xlat
imulb
adc
dec
dec
and
dec
and
cmpsl
imul
add
cmp
mov
int3
fs
push
shll
jno
gs
ss
pop
adc
and
push
aad
add
pop
lret
push
pop
loope
popf
sahf
lods
jb
aaa
hlt
mov
sub
lods
sarb
ljmp
inc
hlt
pop
push
and
dec
or
pop
or
lods
adc
dec
add
loop
lds
sbb
imul
xor
pop
pop
popf
push
push
data16
outsl
mov
and
dec
popa
xor
lret
aad
fwait
inc
aas
int3
in
jo
and
xchg
and
testl
sti
arpl
movsl
loop
adc
aad
jno
sub
das
rcll
pop
fnstcw
dec
test
adc
andl
outsb
and
xor
int
iret
mov
cmp
mov
stos
mov
push
ja
mov
jg
inc
cmc
cmp
jnp
pop
repz
ret
sbb
mov
xor
and
mov
fmuls
adc
inc
mov
jbe
xchg
fildl
add
insl
xorl
sti
addr16
xchg
lods
sub
fists
mov
sbb
std
cmp
lock
mov
jge
jo
aad
addr16
push
rcrl
dec
xchg
add
lods
jns
in
cmp
inc
ret
mov
leave
loopne
sahf
xor
in
das
xor
test
lcall
mov
test
cmpsb
inc
and
lods
jg
ficoms
cs
push
repnz
cli
cmp
lahf
or
push
jbe
aas
xor
adc
fs
ss
dec
fwait
inc
xor
bound
loop
aaa
aas
jns
cltd
and
add
mov
inc
orl
setne
stos
add
push
cmp
inc
adc
fisubrs
jbe
sti
dec
outsl
pop
adc
dec
mov
dec
in
dec
hlt
bound
xchg
pop
dec
jecxz
dec
out
inc
bound
inc
mov
lods
sbb
insl
scas
repz
and
sbb
jge
push
mov
lock
xor
loop
push
fstl
bound
aam
dec
aam
sub
popl
cmp
pop
cli
movsb
xchg
loopne
gs
fcmovnbe
test
lock
jecxz
in
leave
jo
fistpl
xchg
call
movaps
dec
sbb
int3
sahf
and
pop
out
test
hlt
mov
daa
out
stos
lret
jle
test
stc
dec
subb
icebp
jb
sbb
sahf
jns
outsl
mov
notb
inc
lahf
or
les
push
je
clc
cmpsl
negl
data16
mov
xchg
and
test
jmp
idivb
add
decl
pushf
hlt
mov
ljmp
orl
aam
repz
jl
ljmp
mov
push
ret
inc
push
and
div
imul
mov
sbb
mov
add
outsb
aam
xor
lret
mov
or
sub
fcmovbe
je
mov
cwtl
mov
fstpl
movsb
sbb
pop
imul
popf
aaa
and
and
adc
push
movd
scas
fadd
or
idivl
test
or
push
xor
daa
cmpsb
iret
cmp
mov
push
xor
fisubrs
and
xchg
sbb
int
daa
sti
rcr
jle
xchg
push
outsl
aaa
and
loopne
adc
inc
push
clc
push
push
popf
lods
repz
and
adc
mov
test
adc
jnp
out
test
add
mov
gs
mov
scas
xor
push
cmp
push
loope
lods
mov
ret
imul
test
sub
ljmp
popf
sub
jbe
cltd
shlb
lret
or
iret
mov
xor
pop
dec
mov
jb
push
inc
lock
xchg
cmp
repnz
repz
push
jle
or
div
xor
ja
mov
int3
mov
adc
into
outsl
lcall
aad
das
stos
inc
dec
xchg
fsubrp
pushl
adc
jge
xchg
int3
push
sub
inc
push
sub
xor
pop
pop
stos
jge
stos
jmp
pop
arpl
aas
ret
insb
push
jg
xchg
cmp
pushf
xor
rol
leave
test
jle
and
dec
jecxz
fcmovb
sub
jecxz
shlb
test
mov
add
lahf
jl
das
in
inc
ss
mov
mov
sarl
pushf
mov
fstps
add
dec
stos
sbb
cmp
sbb
stc
insl
jge
cltd
lcall
lds
sub
mov
cmpsl
popf
cmp
or
popf
push
stos
and
mov
subb
aaa
push
test
dec
cmp
pop
mov
repz
pop
test
cmc
pop
pop
call
loop
lds
push
stos
out
mov
mov
ds
add
lods
lods
stos
xor
pop
jge
xchg
jmp
or
pusha
outsl
cmp
xor
push
or
leave
push
push
push
lret
mov
cmp
and
adc
pop
mov
imul
jecxz
lahf
gs
addr16
push
push
pop
xor
or
ds
jge
dec
in
push
dec
pop
fmulp
pop
mov
mov
xchg
mov
shll
cld
int3
int3
aas
sbb
push
mov
inc
rcrl
fstpt
rclb
movsb
inc
push
sub
das
dec
pop
mov
mov
scas
cmpsl
inc
push
mov
inc
aad
jbe
add
jns
in
lock
sbb
js
fcomi
sub
or
jae
and
sbb
or
loope
sbbl
inc
into
ret
pop
dec
enter
out
scas
or
js
sbb
pop
mov
lods
mov
pop
adc
adc
xor
addr16
xchg
test
sub
inc
shlb
pinsrw
dec
lret
dec
rcrl
mov
mov
adc
test
add
outsl
cltd
pop
cld
adc
sub
push
add
jecxz
xchg
stc
mov
xchg
stc
jae
out
pop
and
mov
out
jne
jnp
daa
js
adc
inc
inc
fcompl
fwait
push
push
mov
adc
das
ret
pop
add
add
and
into
push
hlt
mov
test
xchg
andb
cmp
movl
push
jecxz
and
push
rcll
sub
cld
xchg
jp
popa
push
fiaddl
nop
fnstenv
js
sbb
out
int
lcall
add
xchg
stos
mov
mov
movsb
mulb
mov
out
add
addr16
push
push
or
loopne
lods
cli
push
dec
decl
cmp
jle
mov
adcb
fldenvs
dec
xor
push
add
pop
xchg
sbb
mov
add
xor
fbstp
xlat
xorl
shrl
sub
cmp
push
push
scas
sub
jmp
push
fincstp
aaa
mov
in
sub
outsb
or
cs
jno
pop
lahf
imul
cmp
and
pop
xchg
ret
push
jp
pop
mov
test
lret
sbb
mov
push
outsl
lret
mov
test
sbb
sbbl
fcmovnb
test
aad
shlb
and
mov
push
mov
dec
sub
decl
scas
pop
inc
stos
out
mov
jp
mov
or
add
cltd
movsl
ljmp
inc
mov
push
inc
addl
xor
sbb
out
cmp
lock
mov
xchg
xchg
xor
in
scas
mov
in
and
or
jle
sbb
movsb
dec
mov
inc
sbb
lds
lock
repnz
and
scas
inc
xchg
insl
fs
or
xor
dec
mov
pusha
sarb
loop
popa
ds
stos
jno
icebp
out
mov
shrl
mov
lea
add
sbb
leave
add
xchg
std
mov
pushf
pop
or
inc
xchg
ss
ret
loope
mov
mov
push
in
adc
dec
cmpsl
mov
adc
xchg
push
js
js
mov
push
sti
sbb
adc
lret
add
addl
movd
pusha
fcmovb
je
out
rorb
cmp
mov
xchg
arpl
xlat
pop
cltd
icebp
dec
dec
fstps
and
mov
int3
fnstsw
mov
cwtl
sbb
xchg
sub
std
jb
mov
mov
mov
scas
xor
test
stc
pop
cmp
lahf
int
call
stc
cli
xchg
jbe
dec
cmp
inc
dec
or
sti
cmc
sbb
pusha
and
daa
push
mov
insl
je
cld
arpl
ds
mov
les
adcl
sarb
fisubrs
lret
pop
dec
out
test
sbb
mov
call
aam
insl
sti
adc
pushf
push
lock
push
dec
loop
sub
fs
hlt
ja
stos
mov
mov
test
jb
arpl
mov
gs
ficomps
dec
pop
add
inc
outsl
mov
in
sub
lahf
negb
mov
mov
mov
lcall
dec
les
jg
mov
jg
push
mov
scas
adc
pop
pop
pop
mov
icebp
adc
mov
or
mov
ss
mov
and
lds
ficoml
sahf
fcos
adc
loop
bnd
loopne
xchg
not
jo
test
flds
sub
sahf
xor
add
dec
mov
aaa
mov
xchg
xlat
call
xchg
adc
sti
imul
lea
mov
push
mov
pop
and
inc
sbb
jno
sti
push
shll
int3
es
sub
mov
jge
popa
std
lods
leave
or
in
aaa
js
xchg
fisubrs
inc
fisttps
pop
cltd
pop
mov
mov
les
fstpl
fsts
sarb
outsb
jg
lret
add
fildl
pop
and
mov
add
cmc
sub
aas
mov
and
movsb
sti
jb
mov
dec
call
mov
lret
popf
cwtl
mov
dec
jecxz
cld
sbb
popa
push
push
loope
pop
push
es
lcall
lret
hlt
scas
jle
out
addl
jbe,pt
movsb
add
mov
rcrb
pop
mov
add
sbb
aam
mov
scas
xchg
insb
cmp
mov
scas
push
loope
loope
leave
int3
pop
xchg
mov
and
xlat
xchg
fsubs
mov
push
dec
hlt
sarb
shr
out
xchg
test
ljmp
test
jae
mov
push
int3
push
or
fidivl
adc
sbb
pop
add
cmp
loop
loopne
jnp,pt
cwtl
xchg
jne
cmovnp
inc
xor
jmp
jge
ljmp
imul
fimuls
jecxz
add
in
xchg
pop
dec
xchg
jo
testl
push
jl
shrl
rcrl
inc
xor
jmp
push
pop
sbb
stos
adc
and
cmp
ret
aaa
sbb
idivb
jne
and
fisttpll
leave
ljmp
sub
loop
cmp
ret
test
push
int
xor
sbb
movsl
push
and
mov
xchg
pop
cmp
sub
dec
xor
popa
fisubrl
cmp
lods
jge
mov
aaa
push
movsl
xor
or
mov
inc
mov
fimull
sub
not
mov
and
lahf
add
loopne
push
fsubrs
gs
push
rcll
mov
cltd
add
inc
outsb
cmp
mov
xor
lds
xor
inc
cmp
lods
push
lock
into
sub
cmp
mov
mov
inc
rcll
jle
jecxz
push
sahf
add
insb
jl
mov
ficoms
loop
fmuls
out
sub
out
les
xor
pop
outsl
int3
dec
inc
jne
dec
loop
ret
in
aas
cld
add
loop
sub
into
sbbl
add
cmpsb
mov
nop
mov
adc
mov
cs
fidivrl
mov
aaa
xchg
notb
push
and
jl
pop
data16
or
pop
scas
ret
xchg
in
mov
lds
cltd
clc
and
inc
adc
std
fisttps
and
mov
pop
aam
xchg
push
sahf
js
setno
sbb
pop
lret
and
jg
add
mov
mov
dec
imul
xchg
scas
adcl
cmpsl
inc
mov
or
shlb
int
jp
cmp
das
jg
sbb
jp
push
push
in
ss
xchg
dec
mov
in
xor
popf
arpl
mov
stos
ficomps
add
in
cmp
mov
add
aas
xchg
lret
inc
andl
ret
cmpsl
push
push
cli
dec
adcb
insl
sbb
add
push
mov
pop
pop
inc
jno
fs
loope
pop
xor
xor
xor
dec
lds
and
in
and
lea
fs
out
pop
fimull
test
rorb
and
xchg
lds
jmp
icebp
jecxz
movsl
repz
pop
mov
test
mov
pop
mov
adc
pop
in
cmp
push
repz
jnp
jo
mov
cmpsb
add
mov
notb
push
cmpsl
push
lds
cwtl
mov
das
into
scas
push
out
mov
cltd
fdivrl
adc
test
xchg
or
insl
and
aas
es
and
ficoms
ret
daa
jo
push
mov
pop
sub
push
jbe
adc
in
insb
cwtl
xor
jno
in
inc
mov
jp
loopne
popa
and
rorb
or
out
cmp
inc
sub
jmp
lahf
jge
ret
shll
clc
dec
ret
repz
daa
out
in
imul
push
mov
iret
in
jl
dec
in
daa
or
sub
pop
mov
ja
fsubl
pop
xchg
js
push
sahf
outsb
mov
sub
int
pop
mov
and
push
cmp
jno
fisubrs
xor
popa
xchg
push
popf
adc
fisubrl
adc
inc
insl
mov
jl
sbb
into
ficoms
add
xor
or
and
push
lea
add
repz
ljmp
insb
mov
in
popa
dec
out
inc
repnz
xchg
or
adc
jecxz
sti
cmp
jbe
in
or
jnp
dec
ljmp
dec
insb
add
nop
fdivrs
adc
int3
sub
int
ret
fsubs
out
mov
ljmp
mov
add
xchg
aam
push
pop
je
movsb
or
sub
aaa
sar
ss
cmpsl
lods
sbb
js
add
shlb
popa
aaa
ffreep
push
lods
js
lcall
and
xor
inc
fimull
leave
out
push
fs
mov
or
sub
push
mov
imul
mov
or
out
repz
jb
jmp
mov
mov
rcl
test
cmp
pop
xchg
jmp
sub
aaa
leave
mov
pop
aad
add
mov
stos
and
mov
jmp
das
xchg
xor
push
dec
sbbl
int
lea
mov
or
pop
insl
mov
fnstsw
sub
scas
lds
and
mov
xor
out
out
mov
mov
lods
lds
mov
xchg
push
mov
add
sbb
shrl
xchg
jl
arpl
jb
inc
subl
mull
in
adc
jo
pop
shlb
adc
int
cmc
xor
mov
xor
adc
sbb
pusha
sbb
mov
jb
jl
lods
push
sbb
std
fists
dec
push
cmp
imul
sbb
or
jb
movsl
rcrl
push
imul
pop
sbb
mov
sbb
dec
stos
sub
xchg
push
xor
cltd
mov
mov
dec
mov
adc
adc
xchg
and
scas
jae
jmp
xchg
cmp
or
dec
es
das
or
imul
out
dec
xor
dec
fldcw
movsb
das
loop
inc
lret
dec
cmp
mov
mov
jo
stos
xor
sbbl
push
push
shrb
ja
mov
jmp
clc
cs
add
or
mov
mov
xor
or
enter
test
aam
out
inc
faddl
jne
add
add
cmpsl
pushf
dec
or
xlat
mov
xchg
nop
data16
les
out
jo
push
adc
pop
scas
dec
stos
fwait
repz
xchg
cs
adc
xor
xor
mov
and
mov
cmp
xchg
mov
mov
mov
xor
leave
mov
imul
lock
repz
xor
mov
mov
mov
pop
xchg
sub
cmc
cwtl
fidivrl
mov
mov
mov
data16
push
fs
inc
aaa
or
negl
arpl
add
adc
arpl
adc
push
or
call
ljmp
lret
dec
push
pop
push
jmp
mov
mov
cmp
push
jb
xor
clc
mov
jecxz
jge
insb
pop
scas
xor
fisubrs
mov
xchg
sbb
js
cmp
or
jbe
sbb
stos
xor
mov
jl
or
ficoms
scas
xchg
xlat
pushf
lcall
xlat
mov
iret
cmpsb
cmp
jge
pop
mov
and
repz
fs
sahf
aaa
or
in
mov
xor
lea
mov
dec
mov
test
mov
sub
lahf
insl
test
pop
mov
and
fldt
inc
out
push
stc
stc
pop
std
js
aam
mov
and
addb
ss
dec
and
and
aas
dec
xor
jl
cmpsl
jno
xchg
ret
ret
call
out
scas
data16
rolb
into
xchg
xchg
into
pop
fiadds
lods
cmp
pop
mov
lcall
imul
jg
repz
lcall
aam
sub
pop
xchg
jl
ret
call
cli
and
adc
movsl
loop
ljmp
in
inc
not
clc
shl
mov
dec
fs
and
cwtl
xchg
mov
shll
dec
mov
add
retw
repnz
xchg
mov
in
movsl
andb
nop
mov
sti
test
xor
icebp
lcall
popa
scas
dec
imul
aad
fisttps
push
xchg
icebp
cld
jge
scas
cmp
stc
jbe
mov
push
cmp
std
inc
sub
imul
mov
lret
add
xor
push
shl
cs
dec
xor
add
arpl
jecxz
xor
xor
pop
sbb
ficoml
mov
add
xorb
pop
iret
or
enter
insl
sbb
xchg
sub
data16
push
in
inc
popf
lea
mov
testb
insl
sbb
xchg
sub
data16
push
in
inc
popf
lea
mov
testb
insl
sbb
xchg
sub
data16
push
in
inc
popf
lea
mov
testb
insl
sbb
xchg
lods
inc
and
int3
push
push
in
xor
mov
push
stc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
not
mov
shll
cld
push
aad
pop
std
add
add
add
pop
or
push
add
incl
add
add
leave
add
add
add
add
ret
add
add
movsb
add
add
add
add
add
add
add
xchg
add
add
add
add
add
es
add
add
add
adc
add
add
add
add
add
add
fldl
cltd
add
fadds
sub
faddl
rolb
xor
add
add
add
add
add
add
cld
add
adc
add
add
add
add
add
add
dec
add
xchg
add
push
add
add
add
add
add
add
add
add
jb
sbb
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
mov
add
sub
jl
aas
add
inc
add
add
clc
add
add
add
add
mov
or
ret
add
add
add
fadds
sbb
add
cltd
add
add
add
add
test
leave
add
add
add
add
add
add
les
add
roll
push
add
add
add
pushf
add
add
add
cltd
add
sub
cltd
add
add
push
add
add
add
add
add
add
add
add
dec
add
add
add
cltd
add
add
add
add
add
ret
add
add
add
add
add
addb
add
add
fldl
add
add
into
add
add
add
add
add
add
add
add
add
faddl
popf
add
add
add
add
add
add
add
add
add
cmp
rolb
add
add
add
add
add
add
add
cltd
add
mov
add
adc
or
add
push
insb
add
add
add
add
add
dec
add
add
add
add
add
add
add
adc
cmp
pop
add
cltd
add
add
add
add
add
add
insb
add
add
add
add
lret
add
add
add
mov
add
les
add
or
pop
add
add
add
add
pop
add
add
add
add
add
add
add
add
fildl
fldl
push
add
add
add
add
add
cltd
add
add
dec
add
add
dec
add
sbb
bound
aas
add
add
add
add
mov
add
add
add
add
add
test
add
add
dec
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
fildl
mov
add
inc
add
add
popl
sub
cmp
push
add
add
xor
les
add
add
fadds
out
add
dec
add
add
add
mov
not
andl
mov
repnz
js
mov
out
sahf
xor
aad
mov
mov
jge
shrb
out
rol
mov
icebp
aam
stc
leave
in
xchg
aaa
sbb
cmp
rep
data16
mov
loope
cmp
add
xchg
push
xlat
mov
pop
sub
pusha
jle
movsl
mov
in
push
push
mov
js
sbb
dec
lods
adc
inc
mov
jg
inc
lret
clc
mov
dec
das
inc
cli
push
imul
and
lds
pop
ret
fdivl
aad
ficoml
pop
and
mov
fldt
mov
and
movsl
sti
jo
add
sbb
inc
imul
pushw
outsl
push
mov
mov
lcall
add
bound
daa
mov
cmp
lods
cli
les
into
jge
popf
mov
sahf
pop
dec
jb
cmc
lds
add
nop
cmp
jg
sub
shl
mov
lea
jecxz
xchg
loopne
movsl
adc
jns
lds
testl
and
mov
push
add
xchg
lfs
scas
aam
int
fwait
cltd
mov
cmp
xor
in
xchg
mov
push
mov
and
daa
and
fld
push
pop
cwtl
jle
repnz
movsl
hlt
add
cmp
fcomps
sahf
push
sbb
xor
cltd
ficoml
sub
test
push
and
out
mov
mov
loop
mov
pusha
inc
and
hlt
imul
sbb
push
dec
and
pop
stos
mov
shlb
or
shrb
les
pop
mov
dec
xor
mov
mov
adc
fisubrs
mov
cmp
das
jb
bnd
jbe
and
inc
sarb
jl
fiaddl
jge
sub
aam
sahf
addl
mov
cmpsb
xchg
dec
les
cld
loope
xchg
sub
test
scas
jne
lahf
cmc
pop
cmp
test
daa
push
test
cmp
xchg
inc
into
xor
mov
in
dec
mov
lcall
fwait
inc
cmp
lods
sbb
jbe
mov
inc
push
sbb
push
jmp
jge
rorb
sub
jno
push
scas
fwait
test
js
and
sbb
fisubrl
leave
or
xchg
inc
pusha
js
adcl
pop
scas
sbb
cld
inc
push
je
mov
call
mov
fs
xor
test
sbbb
jbe
inc
and
stos
mov
jno
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
