call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
adc
and
xor
inc
out
and
inc
push
pop
addr16
mov
mov
ret
xlat
rorl
mul
out
pop
adc
dec
aaa
xor
inc
push
push
push
arpl
adc
mov
cmpsl
andl
out
push
loope
mov
jmp
pop
dec
xor
outsl
jae
out
mov
lret
into
shrb
test
ja
push
pop
inc
inc
lahf
push
xchg
dec
mov
movsb
xchg
rorl
negl
mov
daa
shll
push
dec
pop
cmp
cltd
jecxz
or
std
mov
push
add
js
fcoml
insb
imul
xchg
xchg
xchg
jb
jle
test
clc
enter
push
push
push
pushf
add
xorb
daa
dec
dec
sub
roll
or
idiv
xchg
push
clc
add
scas
push
mov
jg
bt
js
dec
negb
xchg
rcl
sbb
jae
iret
int
mov
jbe
aaa
mov
xchg
in
sub
pop
dec
incl
loope
add
and
xor
cmpsl
push
sub
ja
jle
xchg
or
mov
shr
repz
pop
popa
jne
push
dec
inc
sub
cmp
add
mov
ret
mov
mov
jbe
push
inc
push
dec
sub
or
jecxz
loop
ror
movsl
mov
nop
mov
outsl
pop
jg
inc
push
pusha
bound
fs
inc
arpl
adcl
mov
cmpsl
ret
xlat
rol
jecxz
repz
pop
adc
and
xor
inc
push
push
inc
arpl
adcl
mov
cmpsl
ret
xlat
rol
jecxz
repz
pop
mov
loope
repz
or
push
pusha
jnp
scas
cwtl
lock
es
add
mov
xor
fldenv
lcall
lods
or
push
dec
repnz
movsl
xchg
dec
adc
lret
sub
jp
test
stos
pop
jge
pop
jmp
ss
mov
fsubs
daa
int
sbb
arpl
dec
dec
xchg
add
xchg
insb
xor
cs
shll
add
enter
loopne
lahf
icebp
sub
lods
sbb
jle
inc
mov
sbb
dec
xor
mov
and
fdivr
jecxz
in
inc
add
mov
fsub
push
or
dec
cmp
inc
dec
adc
xlat
dec
aaa
sub
lods
mov
xor
adc
lcall
jp
sarl
pushf
data16
fidivs
jle
cmp
dec
lret
mov
jge
mov
push
cmp
gs
lcall
hlt
sbb
push
in
sahf
mov
push
jg
mov
mov
adc
mov
fstpl
inc
cltd
sbbl
shr
jle
int3
scas
sub
icebp
sti
sub
mov
adc
and
mov
roll
push
outsl
clc
lret
mov
out
pop
test
jg
and
jge
je
es
mov
lods
cltd
rcl
inc
inc
and
xchg
test
xlat
mov
stc
aas
mov
out
mov
mov
out
aad
xchg
ficomps
mov
inc
xchg
jno
sbb
xchg
push
dec
xchg
mov
adc
adc
xor
or
into
mov
out
aaa
aad
movsl
push
inc
inc
mov
mov
dec
jo
push
aaa
push
out
pop
scas
sarl
mov
mov
jl
push
xchg
cmp
nop
jno
xchg
addr16
nop
loop
movsb
sahf
sahf
js
pop
cld
cmp
hlt
jmp
pop
loope
mov
push
mov
pop
inc
add
pop
pop
test
push
mov
mov
sbbb
add
or
adc
sbb
cmp
and
les
data16
adc
out
add
pop
sub
inc
push
aam
popf
imul
xor
jecxz
sbb
mov
mov
testl
mov
mov
cmpl
add
cwtl
aad
int
xchg
inc
test
test
scas
push
adc
pop
movsl
jnp
lea
insl
sbbl
mov
aaa
fdivs
adc
mov
out
jae
or
jg
adc
mov
cmp
shll
or
pop
lods
mov
mov
sbb
mov
pop
push
ss
pop
lock
adc
jb
or
std
inc
out
pushf
xchg
loopne
jmp
lret
cmp
mov
call
mov
out
jge
sarl
sub
in
loop
dec
xor
dec
jns
notb
xchg
mov
dec
fwait
jmp
inc
lret
lods
jb
pop
pop
arpl
nop
or
in
cmp
shll
sbb
std
cmp
pop
in
stc
xchg
mov
dec
cli
or
dec
testl
push
in
cwtl
inc
loope
sbb
stc
movb
jp
jge
sahf
add
cmp
push
ret
xor
sbb
dec
les
adc
xchg
popa
jecxz
jne
lods
xor
call
mov
xor
aad
adc
inc
fwait
inc
ss
push
call
lea
xor
loope
mov
arpl
add
jle
dec
add
dec
add
repz
cmp
fs
loop
adc
cld
xlat
fisubs
sbb
lods
ja
setno
ja
je
iret
mov
and
push
add
jp
sbb
enter
push
jle
enter
jns
push
and
or
adc
fdivl
outsb
cmp
stc
mov
mov
xchg
sbb
ljmp
push
xor
iret
into
popa
push
adc
add
lret
xchg
and
pop
jmp
push
repz
xchg
in
idivb
fisttps
aam
cmp
cmp
push
add
stos
in
jmp
inc
pop
hlt
in
mov
sub
and
sarl
adc
pusha
andb
dec
push
or
arpl
push
xchg
arpl
push
pop
pushf
mov
repnz
int
popf
popf
fcoms
imul
xchg
cltd
ljmp
xchg
mov
dec
sub
inc
mov
jnp
pop
mov
sbb
sbb
repz
dec
mov
and
xchg
jecxz
data16
pop
or
movsl
dec
or
out
adc
dec
testl
pop
xor
cmpsl
dec
dec
sub
in
fxch
ds
inc
fwait
dec
jnp
sub
pop
aas
xchg
mov
xchg
icebp
stos
adc
inc
sbb
enter
xor
fwait
jns
mov
adc
test
in
jno
mov
pop
adc
and
or
loope
daa
inc
ffree
sbb
out
data16
cs
jp
out
stos
pop
pushf
cmc
cs
incb
lock
imul
bound
popa
popf
fwait
and
push
jne
sarl
dec
dec
lcall
dec
in
daa
idiv
pop
lahf
mov
cltd
je
jl
mov
lahf
mov
stc
jmp
imul
sbb
mov
xchg
xchg
jp
mov
pop
sbb
mov
cmp
push
dec
mov
aas
jmp
adc
stos
movsl
pop
mov
adc
aam
jno
or
scas
xchg
mov
sub
ret
in
mov
iret
cmp
xor
mov
negb
out
push
rcrb
jl
pop
std
arpl
jl
adc
fdivrs
adc
inc
or
mov
and
into
repz
imull
sarl
pushf
das
loop
je
jle
aad
mov
dec
fdivrp
sub
lret
nop
adc
int3
sbb
xchg
arpl
aaa
mov
mov
testb
pop
scas
push
pop
test
cmpsl
cmc
pop
shlb
rorb
sub
jne
sbb
rclb
insb
testl
pop
pop
jbe
cmpsl
lds
jp
ret
mov
inc
out
adc
xchg
int3
test
cmp
outsb
mov
sub
in
push
xor
pusha
std
in
mov
inc
and
loope
adc
negl
cmpsl
gs
fnstsw
jmp
ljmp
sbb
xchg
pop
push
int3
enter
nop
pop
movsl
pop
or
add
scas
sub
test
cmp
out
mov
lods
pop
rorb
pusha
and
iret
shr
dec
and
repnz
and
jmp
faddl
popa
repz
xchg
sbb
repz
ficomps
scas
test
pop
add
jbe
fnstsw
test
xchg
xchg
enter
jne
add
call
xor
mov
mov
mov
enter
jae
test
mov
cld
test
xor
push
adc
jmp
mov
dec
push
cltd
sarl
xor
add
push
aam
inc
push
mov
stc
addr16
cltd
cmc
adc
mov
imul
loope
jl
push
js
hlt
lock
jns
cmpsb
sbb
cld
mov
push
lret
sub
mov
sub
pop
mov
rcrl
or
insl
mov
daa
push
xor
mov
cmp
cmpsb
mov
in
and
xchg
out
outsl
imul
stos
ss
dec
cwtl
sbb
stc
jecxz
ja
mov
inc
or
mov
std
xchg
jbe
cmp
sbb
pop
out
mov
cli
or
decl
imul
push
dec
mov
add
and
test
out
shrl
push
mov
cwtl
aad
mov
jecxz
nop
adc
call
cmp
lret
sbb
pop
xchg
mov
xchg
stos
jnp
sub
and
aaa
call
fdivrs
sarl
xchg
rolb
lret
imul
fcomi
imul
adc
in
imul
mov
pop
xchg
and
or
and
sbb
sbb
push
aas
mov
pop
xor
js
add
movsl
pop
jg
rcll
inc
sub
dec
stos
pop
jbe
push
cmc
sbb
icebp
subb
jecxz
inc
sbb
pop
jle
mov
cmpsb
hlt
fptan
adc
inc
adc
and
cltd
jae
insb
lcall
and
out
add
mov
lods
loopne
loope
xchg
lret
xchg
adc
scas
jne
movsl
push
adc
add
xor
popa
into
push
push
in
mov
scas
arpl
fdivrs
adc
fidivl
test
hlt
nop
and
je
push
fildl
sbb
and
push
icebp
sub
xor
xchg
mov
dec
add
push
das
addr16
or
mov
lods
ror
and
popf
fwait
bound
ljmp
clc
ret
shr
mov
popf
repz
mov
in
jne
outsl
repz
mov
cmc
lock
add
add
sahf
and
jno
mov
sub
dec
cmpsl
dec
sbb
test
push
push
cmc
ret
in
fs
imul
adc
sub
imul
shlb
pop
jle
and
lahf
mov
cwtl
pop
outsb
cmp
mov
dec
xor
mov
test
insl
hlt
dec
rcll
mov
xchg
jle
push
pop
stos
add
in
in
adc
pop
mov
ljmp
aam
imul
enter
inc
inc
add
arpl
pop
cwtl
mov
lock
fmuls
push
enter
andl
je
xchg
sbb
inc
xor
jns
sbb
mov
std
fists
or
call
arpl
cmpb
mov
xor
popa
pushf
adc
sbb
mov
push
add
movb
shrb
in
mov
sbb
adc
pusha
inc
xchg
jb
stos
jmp
shr
sahf
inc
xchg
mov
daa
mov
stos
std
lret
pusha
xor
movsl
cmpsl
xchg
pop
cmp
push
xor
dec
jmp
daa
ss
xchg
sbb
ljmp
mov
test
ret
mov
cmp
pop
sbb
pop
jg
dec
iret
fimull
cmp
add
outsb
xchg
test
lods
loopne
cld
cmp
fistl
jb
push
jp
mov
adc
xor
dec
mov
jb
inc
and
loopne
xor
push
lret
push
jne
push
inc
int
mov
cmc
adc
dec
or
cld
push
adc
jmp
mov
cmp
cld
and
jae
cltd
ja
rol
in
pop
shll
idivb
inc
and
insl
scas
rolb
int3
aam
xor
js
pop
lods
or
iret
loopne
ret
mov
jmp
loopne
adc
cmp
mov
mov
mov
fiadds
hlt
adc
sub
mov
jle
rcrb
cltd
or
and
int
cltd
scas
and
xlat
inc
xor
or
or
jns
mov
mov
lods
pop
mov
dec
cltd
shlb
sub
scas
movsl
adc
adc
and
ds
int3
aad
lret
ljmp
leave
and
stc
push
and
dec
jbe
and
dec
gs
ret
push
mov
mov
pop
movsb
cmp
fdivp
cmp
loope
orb
popf
mov
push
cli
std
mov
pushf
mov
sub
sub
jae
mov
jae
lret
test
jle
jmp
fstpl
push
xchg
inc
bound
or
push
adc
sub
push
movsl
test
faddl
inc
out
xchg
cwtl
imul
jns
arpl
push
testb
jno
push
movsb
lret
out
ficoml
push
mov
xor
ret
shl
add
mov
cwtl
sbb
mulb
jl
cwtl
rolb
arpl
dec
mov
or
inc
ja
xor
add
xor
dec
and
xlat
inc
outsl
dec
mov
adc
xor
fcoms
sub
lea
mov
rorl
add
je
sub
jge
cmp
arpl
dec
sahf
jnp
std
cmpsl
inc
cmc
arpl
or
jne
pop
les
popf
mov
test
repnz
loopne
cmpsb
fisubrs
sub
aaa
lock
adc
ja
pop
cwtl
sbb
mov
mov
cltd
or
arpl
mov
icebp
cmp
xchg
adc
mov
add
sub
fsubr
push
inc
icebp
test
ret
pop
dec
xor
mov
lds
cmpsb
scas
jge
repnz
fs
sti
inc
dec
out
mov
cmp
mov
bound
das
cmp
lea
dec
sub
inc
ret
cli
jl
imul
jbe
mov
and
adc
jnp
mov
jb
fadds
adc
inc
ret
xchg
push
xor
xchg
pusha
pusha
std
cmpsb
or
jns
jnp
test
out
sub
fs
insb
orb
in
popa
call
add
int3
or
sub
add
lds
int
mov
pushf
jnp
mov
cmp
aas
dec
dec
or
mov
cmp
fidivs
ret
ret
mov
pop
clc
jecxz
outsb
aaa
dec
imul
add
test
ja
mov
mov
add
cmp
fucomi
outsl
int3
sbb
hlt
fildl
popa
jo
lods
dec
flds
cmp
popa
ljmp
dec
lret
sbb
jmp
mov
xchg
jp
cltd
out
push
jmp
stos
pop
mov
push
pop
test
and
xor
sbb
mov
jmp
shrb
xchg
lcall
jg
ret
jmp
cmpsb
lret
shl
rclb
xor
xor
sub
mov
xchg
dec
test
xor
mov
loope
and
dec
test
enter
rolb
clc
push
fisubrs
and
dec
jle
out
sahf
ja
inc
jbe
ljmp
pop
sbbb
mov
fimuls
xor
cmpsl
push
inc
or
fists
xchg
ret
adc
mov
movsb
and
shl
mov
dec
adc
scas
mov
add
test
imul
cmpsl
mov
add
icebp
inc
xchg
and
xchg
mov
push
insl
add
cmc
xchg
pop
out
jno
hlt
and
pop
std
add
and
sub
lods
xchg
cmp
daa
xchg
jnp
dec
mov
clc
int
int
nop
sti
or
addr16
outsb
les
mov
mov
lock
push
dec
mov
inc
ret
jne
xchg
lods
pop
lods
dec
xchg
sub
pop
aaa
adc
add
pop
clc
fnstcw
lds
mov
test
lret
sti
cmp
add
divb
xrelease
jne
loop
inc
jg
xlat
dec
mov
ds
cmp
in
xlat
flds
pop
sbb
or
test
fsts
add
mov
mov
mov
inc
sbb
stos
mov
push
mov
popa
jo
sbb
sub
sbb
xor
lahf
mov
push
out
in
sahf
adc
stc
in
sub
and
cli
in
loop
push
repnz
std
cs
das
inc
lret
mov
sub
aas
push
lahf
cmpsl
in
pop
sbbb
add
adc
lcall
out
push
fcmove
xchg
mov
mov
movsb
xchg
insl
fsubrs
jno
jmp
push
mov
ja
in
out
scas
orb
test
ret
push
scas
cld
mov
in
adc
jns
enter
xchg
leave
outsl
or
and
xor
and
test
mov
std
cmp
repnz
add
xchg
test
sbb
and
subl
jle
mov
add
in
mov
xor
or
cmp
add
sub
in
dec
lea
cli
add
xchg
aaa
or
add
lret
sti
imul
mov
xor
scas
push
addl
into
int
rcr
nop
test
jge
sub
out
pop
mov
mov
outsl
loop
lds
lock
push
into
pop
jp
dec
pminub
addl
push
aam
mov
enter
aam
xchg
lcall
in
dec
sti
xchg
lret
lods
daa
xchg
jb
lahf
jge
mov
push
push
pushf
addr16
and
shlb
into
sbb
mov
sub
add
mov
outsb
fildl
call
fldcw
xchg
fstpl
lret
jp
into
insb
push
cmp
pop
jae
push
add
cld
push
mov
xchg
addr16
push
out
jle
repz
enter
add
jae
mov
fistl
jo
loop
mov
repnz
and
xlat
cmpb
jge
and
rcrl
mov
cli
aam
fcmovb
jnp
lcall
and
pop
jo
int
outsl
and
sbb
icebp
std
aaa
pop
jne
popa
and
mov
sbbl
fiadds
mov
or
mov
addr16
cwtl
imul
xchg
xor
adc
lahf
enter
pop
xor
filds
hlt
ficoml
pop
popa
or
repz
xchg
push
pop
pop
inc
mov
mov
aaa
sub
fildl
pop
mov
insl
or
sub
cmc
lcall
ret
pop
loop
pop
xchg
jns
adc
in
mov
jge
xlat
add
pop
cmc
inc
pop
sub
push
adc
pop
imul
mov
in
dec
push
mov
sahf
adc
mov
icebp
cs
popa
lods
sbb
push
iret
cmp
cmp
mov
into
or
jl
pop
divl
aas
aas
int
js
fwait
shll
popf
push
and
or
sbb
out
jnp
aad
pop
xchg
jecxz
testl
arpl
or
fwait
cmpsl
push
loopne
in
add
ret
jle
les
push
fistl
aam
add
inc
mov
jmp
hlt
dec
mov
stc
jns
clc
movsl
jl
mov
sbb
sub
ljmp
aas
addr16
mov
push
sbb
mov
test
xchg
rorl
fs
mov
cmp
xchg
mov
fidivrl
leave
mov
and
xchg
mov
stc
fs
fnsave
pop
in
dec
testl
repnz
dec
dec
or
clc
loope
cmp
push
mov
lcall
fcom
dec
daa
dec
or
out
lock
lret
das
push
imul
push
mov
repnz
mov
ss
popf
stos
pushf
js
sub
adc
push
and
out
adc
mov
sar
push
stos
pop
xchg
fcoms
cmp
add
mov
cmpsl
aad
out
adc
rorl
mov
sahf
mov
and
mov
femms
jg
lods
sub
pop
setns
out
les
mov
ret
mov
mov
xchg
leave
repnz
adc
jnp
xor
mov
xchg
repnz
scas
inc
or
inc
mov
push
cmp
xor
int3
mov
xor
cmp
push
jge
push
arpl
hlt
inc
mov
adcl
test
fdivl
pop
out
pop
lahf
pop
rclb
jge
adc
xor
adc
xchg
repz
int3
stc
xor
add
push
xchg
mov
mov
cld
cmp
fildl
mov
scas
mov
mov
dec
mov
add
sub
sar
push
cmp
mul
cmp
andb
mov
push
scas
xchg
inc
inc
cmp
jnp
pop
pop
jge
jno
push
call
in
or
dec
jns
jns
loop
and
clc
les
lret
cmp
push
xchg
xchg
dec
jg
inc
xchg
inc
or
test
fldcw
enter
shll
es
mov
repnz
orb
xchg
iret
sbb
adcb
cmp
mov
cmp
xlat
fists
dec
inc
xor
rorb
inc
sbb
sub
scas
jb
mov
xchg
rclb
mov
sub
fisubl
add
push
cld
popf
movsb
xchg
fistl
jns
test
cmpsl
std
sbbl
mov
jmp
or
iret
ss
sahf
gs
clc
or
jle
fisttpl
adc
les
dec
in
sbb
data16
test
inc
cmc
pop
mov
ret
jmp
inc
mov
outsb
fwait
cmp
xor
fsubrl
jnp
inc
es
pop
loope
cmpsl
jbe
sub
xchg
popf
ljmp
notl
adc
jbe
and
sbb
mov
std
cmpsb
int3
lcall
add
pop
push
lcall
push
push
inc
arpl
adcl
mov
cmpsl
ret
xlat
rol
jecxz
repz
pop
adc
and
xor
inc
push
push
inc
arpl
adcl
mov
cmpsl
ret
xlat
rol
jecxz
repz
pop
and
inc
aaa
xor
rcll
inc
arpl
adcl
mov
mov
jecxz
sbb
pop
adc
jns
adc
inc
push
inc
inc
arpl
cmpsl
adcl
shlb
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
pushf
inc
lods
jbe
rolw
push
dec
sbb
negb
dec
xchg
sbb
insb
mov
cmpsb
fwait
push
pushf
inc
pushf
jbe
data16
push
faddl
in
ss
es
sbb
dec
idiv
out
xchg
pop
xchg
cmpsb
xchg
push
test
jbe
data16
lds
hlt
ss
or
pop
lcall
adc
pop
rcll
xor
adc
mov
shlb
fbstp
in
in
shlb
fs
adc
lods
lods
cltd
or
and
sbb
xor
cmpsb
shl
xor
lock
or
add
nop
in
jle
addb
xor
cmpsl
push
push
jecxz
jl
ret
es
sbb
pop
test
aaa
jb
pop
leave
push
add
cld
jbe
in
shrl
pusha
sbb
lds
sub
xchg
xchg
mov
pushf
push
sbb
cld
leave
in
jo
xchg
jecxz
cmp
cmp
out
pop
ret
loope
test
insb
rcrl
jno
push
add
repz
xlat
shl
cmp
jb
mov
pushf
inc
lods
jbe
data16
movb
ss
adc
mulb
xchg
loopne
cmp
xchg
leave
xor
and
push
xchg
push
js
sbb
pop
cwtl
push
mov
sti
cmp
or
ret
mov
pushf
or
jbe
xor
pop
mov
stos
imul
jl
in
scas
xor
add
in
ss
es
sbb
sub
cmp
dec
xchg
pop
xchg
cmpsb
mov
inc
lods
jbe
data16
push
faddl
in
ss
es
sbb
sub
cmp
dec
xchg
pop
xchg
cmpsb
mov
push
cmc
test
mov
shl
adc
movsb
pop
and
outsl
add
lods
or
popa
inc
shrl
xor
adc
mov
dec
mov
sub
pop
pusha
inc
mov
adc
inc
sbbl
sti
ds
test
lahf
cmc
jmp
or
cs
fistps
push
xor
pop
pop
pop
mov
push
and
mov
das
push
sbb
in
dec
mov
out
es
mov
add
sbb
mov
je
push
iret
cmpsb
sbb
outsb
mov
sti
lds
pop
loopne
popa
push
pop
cmp
test
adc
insb
pushf
fiadds
xchg
iret
add
mov
hlt
inc
or
xchg
mov
lret
jb
pop
rcrb
loope
cltd
addr16
jmp
sbb
cmp
or
mov
sbb
leave
adc
loope
popa
lock
cmp
push
fildl
jmp
mov
and
inc
add
and
ljmp
mov
push
xor
push
mov
popf
inc
jp
adcl
movsl
xor
mov
lahf
fidivrl
in
js
fs
fidivrs
imul
xor
lret
add
push
ret
aaa
or
cli
ja
jmp
sub
inc
das
push
std
xor
xchg
mov
cmp
xchg
pop
les
or
push
subl
sub
lock
jae
lds
repz
sbb
mov
ds
push
and
cmp
sub
push
enter
inc
push
sub
sahf
mov
rcrl
mov
hlt
fwait
xchg
dec
inc
pop
fs
and
in
mov
lods
add
mov
fnsave
push
dec
push
fistpll
jno
add
cli
orb
frstor
movsl
mov
cmp
sbb
imul
or
cld
out
xor
sub
fldcw
movsb
mov
stos
adc
daa
xchg
clc
xchg
mov
mov
scas
jae
push
shrl
add
mov
in
icebp
fucomp
or
jne
lahf
mov
out
push
jo
mov
lahf
enter
das
fisubrs
mov
xchg
cld
adc
das
xor
lods
pop
clc
sub
adc
xchg
ret
jg
outsb
std
push
add
icebp
repnz
je
int
or
pushw
mov
stc
jle
rol
ja
hlt
xor
sahf
xchg
in
repz
xor
fidivrs
dec
jno
mov
pop
sbb
out
push
xor
sbb
rcrb
rclb
lods
inc
add
lret
test
adc
aas
sbb
lret
mov
enter
loop
sbb
inc
pop
adc
ljmp
jecxz
loope
loopne
jb
mov
inc
pop
sbb
and
data16
mov
ret
js
add
xor
cmp
cwtl
sub
clts
lods
mov
dec
sti
mov
fsubl
or
pop
clflush
push
sub
aad
out
pop
shr
push
push
inc
outsb
int3
push
mov
outsl
inc
push
sub
sub
xchg
ret
inc
dec
scas
mov
idivl
lahf
cmp
push
mov
in
testl
leave
lods
inc
imul
sbb
jecxz
movsb
int3
xorb
adc
add
add
adc
fldt
out
test
dec
add
jp
pop
out
out
dec
pop
fidivrs
or
xchg
fisubs
mov
sub
test
mov
dec
mov
outsb
int
insb
xchg
push
pop
js
aas
mov
popa
in
lahf
cmc
cli
addr16
insb
cli
xchg
or
incb
mov
mov
fnstenv
pop
dec
inc
xor
mov
adc
adcl
jmp
mov
in
lret
xchg
sub
outsb
and
incb
dec
pop
adc
adc
pop
out
stos
xchg
outsl
sub
inc
cmp
add
mov
aas
mov
shr
repnz
leave
insb
push
sub
pop
jae
pop
and
cmp
dec
add
dec
jge
dec
jo
int3
pushf
push
cmpsl
leave
out
ficompl
cmp
cmp
ss
push
loope
inc
inc
xchg
push
mov
aas
mov
mov
mov
inc
push
rorb
leave
aaa
mov
fidivs
scas
pop
pop
je
shl
mov
and
xchg
jp
out
mov
lock
pop
mov
inc
lds
mov
stc
dec
and
ds
popl
lcall
and
sub
cmpsb
add
shll
sbb
aam
std
adc
mov
cwtl
sahf
int
inc
inc
sub
rclb
icebp
ljmp
scas
rcr
bnd
pop
mul
stos
xchg
sub
shr
xchg
sub
add
lock
sbb
xchg
out
adc
sub
js
inc
pop
lret
ds
mov
addl
inc
mov
out
lcall
loop
out
push
movl
cmp
add
rcll
xor
cwtl
sarb
inc
inc
into
popa
inc
clc
xchg
xchg
mov
es
xlat
lea
push
dec
test
ss
xchg
lret
out
sub
test
inc
jle
or
rcrb
adc
jno
sub
bound
movsb
jno
cmp
out
and
inc
je
idivl
adc
mov
daa
and
mov
sahf
hlt
sub
fcoms
shr
pop
das
faddl
ss
or
jge
aaa
sub
popf
sbbb
cmpxchg
dec
cltd
inc
js
in
xor
push
push
lahf
arpl
mov
addr16
aas
or
adc
cltd
pushf
xchg
and
sbb
xchg
mov
dec
push
pushf
or
ja
outsl
std
push
sahf
sbb
leave
stos
push
dec
sbb
adc
push
addl
jecxz
push
adc
mov
popf
cmp
ljmp
aaa
pop
in
xor
adc
shll
inc
cmp
les
xlat
out
add
mov
cmp
lods
cmp
cld
rorb
repz
and
cmp
iret
loopne
daa
sub
ds
icebp
jne
lods
lret
je
cmp
inc
shll
aam
scas
cwtl
andb
movsb
pop
mov
adc
sub
outsb
outsl
sub
in
leave
sbb
fistpl
jmp
sarb
adc
add
fistl
cmp
inc
mov
push
mov
divl
dec
sbb
inc
dec
fcmovbe
pusha
mov
mov
mov
dec
sub
int
cmpsb
sub
push
cmp
mov
jp
dec
cmpsb
repnz
cmp
jnp
movsb
push
pushf
push
loope
out
sbb
pop
sbbl
and
lcall
nop
out
mov
pop
jne
jle
cmp
xor
das
lea
inc
loopne
sbb
test
mov
dec
sbb
push
or
jmp
shlb
fsubs
jnp
int3
lret
inc
mov
lret
stos
mov
xor
aaa
jnp
add
out
push
cli
imul
xor
or
sub
cmpsl
sbb
cltd
sbb
sub
cs
aas
es
inc
lea
js
jo
ret
ljmp
pop
sbb
mov
fdiv
sbb
xor
inc
sbb
push
daa
imul
jnp
mov
jb
dec
inc
loop
ds
int
mov
subl
mov
mov
nop
fcoml
mov
fnsave
sbb
dec
xlat
sub
jmp
dec
aaa
pop
mov
rcrl
pusha
cmpsl
das
sarl
out
push
iret
xor
data16
or
sub
inc
mov
xchg
sub
pop
cmp
cwtl
cmp
les
shrl
or
xchg
pop
mov
aaa
ja
les
add
ljmp
mov
in
mov
pop
mov
vmovntps
andl
lds
es
mov
xor
cmp
cmp
sbb
xchg
xor
cmp
xor
icebp
jo
aam
cmp
lea
addr16
lcall
sub
sbb
mov
popf
xchg
aas
add
xchg
mov
inc
dec
mov
pop
and
inc
and
icebp
aas
jg
dec
das
adc
cmp
call
mov
jae
push
lea
fiaddl
sbb
sbb
mov
sbbl
test
aam
xor
insb
xchg
push
shrl
dec
cmpsb
mov
cmp
rcrb
pop
mov
inc
fstps
push
mov
sub
addr16
pop
fucomi
sahf
insl
rcll
xor
sub
inc
jp
pop
xor
xor
xchg
fbld
mov
lea
and
sub
xchg
repz
push
jle
insl
sti
hlt
cltd
sub
rorl
test
icebp
in
aad
dec
inc
sbb
stc
int3
pop
sbb
aad
sbb
xchg
adc
cmp
sub
scas
inc
jae
xor
sub
ljmp
icebp
ljmp
stc
inc
sbb
xor
mov
sub
loop
cmc
dec
mov
push
in
mov
dec
or
lret
cs
xchg
clc
imul
shll
repnz
xchg
push
lret
sub
ljmp
sub
push
popa
inc
inc
jecxz
das
mov
sub
test
xchg
in
pushf
jne
or
lret
in
test
add
outsl
adc
xchg
pop
nop
sbb
icebp
loop
daa
popa
fldl
bound
and
pop
ljmp
es
out
xchg
xchg
push
or
pop
fldl
outsl
pop
lods
mov
push
xchg
das
insb
mov
inc
jnp
fistl
stos
pop
popf
xor
fwait
sbb
lea
cmpsb
mov
xchg
xchg
mov
jg
sub
add
insl
push
xchg
rcll
mov
mov
aas
or
inc
ljmp
and
push
inc
imul
or
push
sbb
cld
jge
hlt
les
sub
mov
cmp
out
jle
jo
sub
jns
rcrb
mov
outsl
in
sub
mov
jne
mov
mov
hlt
cmp
mov
sbb
fs
mov
xor
lods
pop
adc
sbb
mov
inc
xor
cmpsb
mov
pop
in
lods
ljmp
test
dec
movsb
cmp
repnz
repz
rolb
mov
xor
pop
or
or
xlat
jp
imul
mov
test
lock
or
sti
out
popa
in
rcrw
mov
jmp
cmp
lds
and
mov
in
or
xor
aam
ljmp
pop
sub
cmp
and
ljmp
add
inc
fidivrs
mov
mov
scas
mov
sahf
in
and
sub
pop
test
into
mov
xchg
add
add
adc
loopne
sub
insl
jge
cwtl
adc
into
frstor
push
ret
addr16
jb
pop
push
and
dec
enter
xchg
jg
pop
iret
cmp
xor
dec
in
inc
push
icebp
inc
mov
popa
bound
and
mov
mov
push
in
js
cmp
sub
mov
lret
arpl
iret
rclb
aad
inc
jb
inc
orl
mov
popa
cmpl
in
negl
imulb
incb
scas
int3
sub
xchg
add
push
dec
mov
repnz
xchg
inc
inc
ret
push
or
shrb
add
stos
adc
or
dec
andb
and
xor
mov
or
jne
sbbl
or
dec
in
xchg
fnstsw
dec
sbb
scas
adc
xchg
pop
addr16
dec
iret
xor
xchg
jb
push
mov
mov
mov
add
out
inc
daa
mov
xchg
aas
inc
cld
push
icebp
test
mov
js
pop
adc
xor
rcrl
push
rorb
scas
jge
addr16
adc
add
jno
hlt
mov
roll
cltd
sub
loopne
lea
cld
aas
mov
push
adc
aad
sti
popa
cmp
setp
das
ret
mov
repnz
add
cmp
mov
sub
ja
jle
xchg
stc
xchg
dec
insl
rcll
das
in
call
inc
or
push
xchg
xchg
lods
shl
pusha
cmp
xchg
mov
outsb
arpl
sub
xlat
add
sbb
stos
ficoms
into
push
stos
cs
pop
mov
cmp
sub
lret
xchg
mov
mov
lds
add
insl
push
adc
movsb
sbb
jo
pop
or
data16
cmpb
aad
xor
lods
jns
push
xor
insl
in
in
test
push
scas
pop
mov
dec
testl
ss
dec
dec
jb
ljmp
jo
cmp
frstor
iret
cwtl
or
das
dec
scas
cmc
mov
arpl
icebp
adc
fisubrl
ss
iret
xchg
sbb
mov
cmp
and
pop
xor
jle
out
jmp
out
xor
and
mov
jns
xor
out
hlt
nop
ljmp
mov
fisubs
and
outsb
cwtl
adc
data16
or
movsl
or
dec
int
mov
mov
inc
dec
adc
in
aaa
and
jg
dec
pop
lret
sbb
mov
or
adc
jl
in
pop
outsl
fnstsw
aaa
sbb
xchg
push
mov
fdivl
mov
lock
adc
cs
inc
popa
ret
fnstenv
repz
cmp
sub
les
lock
sub
cmp
adc
cmp
pop
cmpsl
ret
fisubrl
and
cmpsb
or
pop
popf
mov
nop
shrl
lods
pop
mov
push
icebp
inc
and
inc
xor
xchg
add
popa
sbb
inc
pushf
inc
adc
ret
out
inc
lds
sarb
into
mov
lds
push
push
call
jmp
fldl
mov
clc
xchg
and
jmp
jmp
mov
or
jmp
xchg
arpl
imul
movsb
ss
in
inc
lock
lret
pop
pop
or
dec
mov
sbb
or
aam
xchg
cld
les
ret
sbb
push
insb
mov
sub
push
cmp
jo
pop
add
notb
mov
je
add
hlt
ja
jle
movsl
adc
in
dec
and
fxch
add
dec
fs
xor
mov
pop
lahf
cmp
std
clc
jae
push
push
mov
pushf
ds
lret
or
lea
dec
adc
aaa
mov
daa
push
lret
dec
jno
jb
pusha
clc
loopne
mov
cmp
mov
mov
cld
and
sbb
push
ja
push
lods
rorl
jmp
push
lods
mov
add
out
loopne
in
mov
and
adc
out
jge
rolb
pusha
mov
adcb
add
mov
xor
repnz
inc
out
push
sub
push
fcomi
ficoms
inc
add
sbb
outsb
dec
mov
insb
js
mov
add
je
xor
mov
xor
aam
sbb
push
jmp
push
fsubs
mov
das
shrl
push
dec
adc
lret
pop
dec
adc
or
xor
cmpsl
insb
shlb
or
cmp
enter
mov
sub
adc
mov
push
cmp
cli
jno
push
sbb
jb
or
stc
jmp
in
ret
add
stc
mov
or
imul
mov
push
andb
hlt
sub
rcrb
jmp
cmc
dec
mov
cmp
pop
cwtl
and
jno
mov
insl
js
or
subl
ret
aam
es
into
frstor
adc
nop
and
ret
sbb
leave
shl
cmp
js
sbb
cmp
push
dec
sbb
hlt
lret
push
fwait
mov
push
in
dec
inc
cmpsb
out
enter
gs
outsb
repz
insw
mov
ljmp
mov
xchg
loope
leave
sbb
push
arpl
cmp
push
inc
adc
jp
notl
jp
inc
out
or
lea
push
jne
xor
repz
dec
sti
adc
test
mov
ljmp
xor
inc
enter
in
mov
sub
test
dec
pop
mov
imul
jae
imull
mov
int3
xor
stc
out
outsl
dec
loop
pusha
cmp
fbstp
cmpsb
aam
shlb
dec
xor
dec
add
sbb
lret
dec
jno
push
sahf
fimuls
stos
mov
adc
in
int3
add
int
shrb
rorl
int3
jne
scas
clc
dec
xor
pop
imul
and
ljmp
loopne
sub
mov
scas
js
push
sub
ss
out
pop
xchg
mov
xchg
and
gs
xor
jg
sbb
pop
sbb
mov
pop
sbb
dec
fists
jnp
mov
sahf
jle
int
pop
addb
xchg
push
sub
mov
xor
adc
add
movsl
xchg
jg,pn
inc
sbb
dec
cmp
imul
jns
gs
fsts
pop
pop
mov
xchg
sub
cwtl
fmul
lcall
pop
ss
in
mov
xchg
xor
xor
pop
mov
sub
pop
mov
sbbb
dec
lcall
cmp
sub
and
andl
out
cltd
shlb
iret
ljmp
test
loope
enter
loope
std
stc
clc
adc
push
ror
cmp
ljmp
xchg
pop
lock
lret
cmpsb
mov
arpl
ja
mov
mov
int
mov
dec
add
or
je
movsb
bound
cmpsl
inc
jg
out
sbb
incb
xor
mov
push
xchg
stc
jne
jl
shll
dec
add
bound
xchg
or
mov
pop
xor
cmp
cwtl
pop
xchg
sbb
and
lock
mov
xchg
pop
pop
loope
mov
into
push
scas
movsl
stc
std
inc
push
sbb
dec
xor
out
mov
xchg
cmp
loop
fucomp
jnp
pusha
push
lret
and
call
insl
andl
fidivl
mov
xchg
xchg
xor
outsl
fldl
jns
xchg
loopne
loop
inc
call
ljmp
rcrb
push
sub
inc
je
xchg
jb
je
je
mov
cmp
bound
ret
mov
cwtl
out
cmp
mov
pop
xchg
cmpsb
jecxz
pop
adc
push
hlt
movsb
pop
jnp
sbb
or
or
dec
dec
out
movsl
movsl
sbb
inc
rorb
push
xor
mov
push
js
out
xchg
cmp
adc
rcrb
std
sub
inc
cmpsb
out
dec
mov
pop
iret
xchg
shll
push
push
clc
stc
pop
fldl
or
pop
xorw
in
lahf
push
mov
xchg
push
inc
imul
in
pop
jp
loope
test
les
outsb
sbb
test
into
mov
lret
push
pushf
mov
push
inc
lret
push
fistl
pop
aaa
inc
data16
xchg
cmp
mov
lret
xor
std
push
jns
pop
sbb
out
int
jb
lock
mov
aad
sbb
fwait
ss
sbb
mov
mov
jns
fisttpll
scas
add
fstpl
mov
iret
dec
cmp
cmp
fdivs
insl
cmpsb
inc
ja
addr16
mov
fs
add
clc
add
iret
pusha
cmp
imul
repnz
cwtl
fs
and
fdivrl
mov
leave
push
dec
addr16
mov
shrl
out
mov
sub
stos
jae
push
cmpsl
addr16
mov
or
inc
test
test
jo
stos
push
xor
sub
add
sub
push
jp
inc
cld
mov
in
movsb
push
sub
sbb
xchg
xchg
pop
out
xor
adc
mov
movsb
xor
lret
pop
mov
mov
decb
ja
dec
xchg
mov
je
mov
jbe
fmuls
or
das
push
cs
jns
test
sub
mov
lcall
jecxz
xor
stc
mov
mov
jne
mov
and
fstl
ds
fisubl
jae
mov
scas
mov
cltd
add
movsb
jg
loopne
scas
pop
test
lea
jmp
or
fnsave
jle
sti
cmpl
inc
mov
cwtl
imul
addb
mov
push
in
ss
es
sbb
sub
cmp
dec
xchg
pop
xchg
cmpsb
mov
inc
lods
jbe
data16
push
faddl
in
ss
es
sbb
sub
cmp
dec
xchg
pop
xchg
cmpsb
mov
inc
lods
jbe
addr16
push
faddl
in
aaa
cld
es
sbb
sub
cmp
dec
xchg
pop
xchg
cmpsb
mov
jbe
int3
push
faddl
repz
insb
xchg
cmp
cmp
aam
xchg
dec
sbbl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
or
sbb
sub
cmp
inc
adc
sbb
push
into
lods
hlt
mov
test
movsb
cld
movsb
or
sbb
sub
cmp
dec
adc
add
xor
inc
mov
pushf
fdiv
mov
test
mov
movsb
or
sbb
sub
cmp
dec
adc
add
xor
and
aam
out
xchg
xchg
mov
xchg
roll
sbb
pop
daa
dec
add
pop
jmp
aaa
xchg
dec
push
inc
cmp
scas
inc
sbb
mov
push
fstps
mov
data16
mov
mov
and
cmp
xor
cmc
hlt
inc
xchg
test
cmpsb
mov
adc
lret
xchg
out
aam
lds
sbb
mov
dec
fstps
xor
add
cmp
les
lcall
sar
repz
push
imul
gs
pushf
sub
mov
ficoms
or
fsubrl
popf
xchg
mov
test
cmp
aam
mov
pop
push
push
sbb
sub
cmp
dec
adc
add
xor
and
aam
les
faddl
push
jne
dec
xor
adc
push
int
cwtl
cmpsl
rclb
test
sub
pop
or
inc
insb
arpl
mov
mov
xchg
stc
mov
icebp
mov
sahf
sar
lock
cmp
add
xor
and
aam
les
faddl
push
sbb
sub
cmp
dec
adc
add
xor
and
aam
les
faddl
push
mov
mov
aad
arpl
in
jmp
ds
xor
insl
out
sub
mov
sbb
and
arpl
test
loop
pop
scas
leave
push
movsl
jmp
out
lods
jae
mov
xor
mov
xchg
adc
imul
jg
and
in
sbb
aam
cwtl
add
aam
rorb
ret
shl
fldl
jge
fstpt
rorl
enter
add
lea
cltd
bound
jecxz
cmp
or
mov
push
das
fiadds
xchg
addr16
dec
adc
pushl
enter
adc
inc
add
pop
repz
rol
fwait
cmp
add
jae
cwtl
mov
mov
sti
dec
cmp
pushf
sahf
shrl
ret
insb
or
and
pop
in
adc
push
push
xor
nop
sub
cmp
int3
xchg
lahf
jns
cmpb
jge
add
div
stos
or
lea
or
xor
cmp
movlps
mov
mov
call
mov
mov
pop
ds
arpl
and
scas
mov
jl
push
push
lret
xor
imul
mov
lahf
imull
into
lds
and
clc
imul
fwait
mov
dec
jge
lret
movsl
xchg
ds
sti
lea
pop
mov
out
dec
cmp
fiaddl
sbb
or
dec
fs
ja
adc
and
mov
add
xchg
jnp
ljmp
cli
xor
sub
push
fwait
in
xlat
pop
add
fbstp
dec
jbe
pop
loopne
stos
dec
and
mov
cld
jae
pop
push
add
sahf
loopne
mov
dec
sub
pop
dec
sub
addr16
mov
mov
mov
dec
and
mov
js
sti
push
lcall
shrl
xchg
out
les
sub
popf
out
adc
jge
xor
test
mov
and
mov
jge
mov
mov
push
mov
bound
rcrb
and
mov
iret
lock
cmp
and
inc
jmp
cmp
cld
and
jo
arpl
test
lahf
jne
fistps
inc
int3
or
mov
cmpsb
push
lcall
movsb
jecxz
sbb
sbbl
cmpsb
mov
jne
pop
jbe
enter
dec
xor
imul
ljmp
xor
xor
add
in
inc
loop
dec
xchg
mov
dec
mov
fnsave
je
jmp
arpl
cwtl
fiaddl
aaa
insl
addl
in
stc
je
adcl
jmp
movsl
sbb
xchg
fwait
aad
push
aad
aam
and
lods
nop
adc
fmull
enter
or
dec
je
movsl
and
dec
jmp
aam
icebp
insl
ja
iret
sub
ret
jg
pusha
jecxz
mov
cmp
mov
in
cmp
or
inc
sbb
or
aad
pop
and
adc
push
dec
fcomps
xor
jbe
dec
xor
and
lcall
pop
mov
xchg
scas
or
cli
sub
rcrl
adc
cwtl
clc
jmp
dec
push
push
mov
iret
push
cmp
xchg
addr16
mov
iret
test
or
sbb
or
leave
add
and
nop
cmpsb
clc
hlt
sahf
jnp
sub
add
enter
fs
aaa
mov
cmpsl
jae
addr16
inc
mov
sub
dec
enter
movb
lods
es
jmp
test
ja
add
sbb
outsb
es
filds
push
pop
mov
cmp
push
out
or
sub
inc
sub
jnp
inc
call
les
sbb
fildl
inc
ret
dec
jmp
jbe
mov
or
add
mov
mov
pop
jb
inc
xchg
sub
push
lods
lret
lods
iret
xchg
cmpsb
dec
pop
popf
in
add
rorl
push
push
mov
xchg
or
push
iret
movsb
jecxz
scas
xor
arpl
andl
cmp
sbb
mov
mov
cmpb
xor
pop
dec
les
fidivl
jno
adc
ficoml
mov
mull
or
cli
sbb
stos
mov
insb
dec
jne
jmp
ss
clc
mov
lret
pop
fiadds
test
add
les
sub
push
push
adc
ret
int
mov
iret
mov
pop
int3
mov
call
and
lds
addr16
mov
mov
lods
push
sub
mov
std
rcrl
pop
lret
fistpll
or
mov
sarb
mov
add
pop
mov
icebp
stos
pop
test
loopne
orl
aaa
mov
jecxz
push
xchg
xchg
push
mov
pop
leave
sbb
cld
lea
pop
imul
loop
push
push
xor
in
or
insl
lods
incb
repz
cmp
ds
stos
pusha
dec
cld
mov
mov
loopne
shrl
arpl
jne
mov
adc
add
xchg
mov
fiadds
push
xor
adc
test
or
add
xor
xchg
and
sbb
jecxz
xor
flds
pop
or
out
or
loopne
pop
int3
ds
mov
inc
int
mov
adc
icebp
cmp
mov
dec
jbe
loopne
movb
out
call
pop
xchg
cmp
bound
dec
arpl
pop
mov
xchg
lahf
fwait
icebp
sbb
push
and
push
loope
adc
pop
mov
and
lret
push
adc
pminub
loopne
hlt
imul
lock
mov
and
sbb
jmp
cmp
sub
out
rolb
cmpsb
jno
dec
in
jmp
dec
xor
repz
xorl
jp
sub
xchg
cmp
xor
icebp
pusha
cmp
negl
mov
sbb
icebp
xchg
sub
repnz
mov
jmp
lret
data16
je
mov
mov
fprem1
lods
cmp
jmp
insl
push
mov
in
add
out
mov
sbb
and
jge
out
sub
cmp
push
sarl
lahf
fwait
or
aam
loope
enter
mov
repz
inc
clc
push
adc
arpl
mov
js
xor
pop
loope
push
push
mov
inc
cmp
sub
xchg
sub
mov
pushf
xor
stos
mov
push
pop
ds
imul
cltd
mov
enter
leave
or
xchg
je
cmp
lahf
test
push
cwtl
cs
inc
push
insl
mov
les
cmp
or
dec
add
pop
cs
adc
adc
popl
xor
xor
adc
add
xchg
das
divl
push
xor
dec
leave
jecxz
test
pop
fisttpl
clc
in
push
xor
jmp
mov
icebp
lcall
jno
nop
cmp
dec
mov
in
scas
mov
xor
sti
into
stos
arpl
pop
stc
push
daa
les
stos
mov
cmp
rorl
or
sahf
cwtl
popf
sbbl
js
dec
pop
xchg
leave
ljmp
stos
mov
xor
fprem
sbb
enter
int
jb
sahf
and
fmuls
mov
fistps
or
inc
push
mov
filds
mov
inc
test
ljmp
cmc
sub
push
cld
mov
push
pminsw
data16
mov
ds
movsb
inc
sar
sti
rclb
adc
mov
jo
mov
jmp
sbb
xchg
mov
enter
and
cmp
jecxz
cmpsb
jp
xchg
js
gs
pop
or
movsb
push
add
inc
dec
or
iret
jle
add
pop
mov
inc
mov
sbb
mov
cmc
jge
add
in
pop
add
pusha
cmc
lcall
fsubl
inc
xor
das
mov
push
jp
or
leave
add
add
or
and
out
sbb
push
jecxz
adc
lock
arpl
imul
xor
inc
xchg
inc
add
inc
pop
arpl
addr16
mov
mov
xchg
adc
sbb
aas
mov
xchg
in
pop
mov
jne
fisttpll
and
lods
sbb
jmp
cmp
adc
pop
call
or
jb
xchg
icebp
dec
pop
mov
xlat
push
jp
cld
sbb
out
xchg
inc
cs
and
ret
jp
jnp
lahf
cmovo
sbb
dec
add
roll
push
out
mov
push
sub
lock
cmp
pop
ficoml
imul
mov
enter
jp
pop
popf
pop
and
and
es
int3
xor
pop
push
addr16
jmp
fstpl
jne
jns
bound
call
scas
ss
add
pop
iret
and
sub
add
xor
adc
push
fisubl
lret
icebp
mov
cmp
cmp
add
add
xor
inc
jle
mov
cld
ja
and
mov
mov
fcmovbe
dec
in
ja
jns
sub
sti
in
lds
pop
mov
xor
cli
dec
in
je
adc
mov
hlt
cmpsb
jmp
stos
bound
push
cmp
or
test
iret
pop
xor
pop
add
dec
aad
mov
cmp
xor
push
cwtl
sbb
daa
and
ds
push
int
cmc
cwtl
hlt
das
jo
and
into
lret
inc
inc
lahf
cmp
cmp
lcall
data16
cli
aad
mov
stos
ljmp
mov
sbb
or
jne
push
xor
mov
cld
push
movb
pop
or
mov
or
insb
adcb
and
mov
dec
or
and
fcmovu
and
mov
mov
orl
mov
sub
sbb
stos
loope
pop
arpl
lea
cmpsl
inc
push
push
test
cmp
scas
sbb
xchg
loop
dec
add
inc
fsubrs
add
stc
mov
cmpsb
inc
dec
movsb
pushf
inc
add
aad
ss
xchg
sub
loop
in
cmpsb
push
loopne
ret
in
pop
bound
mov
pop
mov
add
and
das
xchg
dec
mov
push
decb
add
aam
dec
aad
mulb
pop
add
push
inc
sub
pop
mov
mov
ljmp
sarl
lret
cmp
ret
inc
push
xor
xchg
sub
inc
xor
push
add
stos
int
pop
xchg
enter
clc
jns
add
lahf
lods
in
outsl
addb
sbb
imul
dec
mov
mov
outsl
das
lahf
es
ja
mov
popf
mov
ret
xor
pop
lods
shl
insl
mov
in
mov
test
shll
in
pop
test
ret
sbb
dec
xor
sarl
push
sub
insl
mov
mov
insb
mov
and
shr
jg
andb
jmp
imul
fs
or
call
lret
std
and
movsb
push
xchg
mov
lahf
cmpb
push
cmc
mov
mov
inc
xchg
pusha
xor
cmp
inc
pop
aas
clc
movsl
or
and
lret
sbb
lahf
incb
xchg
repnz
addr16
push
mov
inc
cmp
rcr
repnz
jnp
imul
inc
pop
lods
lret
insl
dec
inc
pop
cmpb
pop
js
loopne
cmpsb
test
jno
in
or
pop
iret
inc
popf
rcrl
in
je
push
push
mov
jge
sarl
pop
jmp
jo
xor
jns
pop
xor
sub
scas
mov
cmpsb
mov
shl
mov
lcall
sbb
add
roll
in
sahf
inc
out
movsl
pop
mov
cmp
int
xchg
cmpsl
mov
jbe
add
je
enter
jl
push
out
into
mull
xchg
test
and
push
clc
xchg
xor
sub
or
cmpb
and
ret
movsb
ficompl
scas
dec
and
imul
xchg
jmp
inc
jae
inc
shlb
notb
mov
xlat
mov
rol
outsl
pop
daa
mov
aas
cwtl
sbb
popl
inc
cmp
add
and
mov
mov
xchg
test
loope
sahf
xor
ficoms
jmp
push
sbb
inc
add
add
cld
jne
int3
push
sub
xor
jecxz
insb
lahf
add
aad
inc
adc
pop
test
hlt
mov
cmp
dec
icebp
push
bound
cs
fstps
pop
jg
call
fistl
fbstp
out
call
mov
bndstx
leave
sub
add
pop
dec
sbb
adc
inc
cmp
mov
fidivrs
sbb
sbb
push
pop
dec
cmpsl
xchg
jmp
notl
xor
in
insb
stos
jg
ret
pop
xchg
sub
sub
push
test
xlat
mov
rcrb
sbb
clc
pop
movsb
xorl
ljmp
popf
mov
in
shr
pop
jnp
icebp
js
stc
mov
and
push
sahf
mov
ret
pop
dec
popf
push
push
dec
lret
gs
movlps
xchg
loope
iret
dec
push
in
dec
pop
sub
pop
outsl
cmp
pop
pop
lea
cmc
test
pop
push
pop
popa
lods
xor
int3
andps
xchg
mov
add
push
mov
push
mov
mov
xor
imull
jp
sbb
mov
insl
mov
call
stos
inc
sbb
or
xchg
out
push
bnd
xor
cmp
xchg
lock
pop
cmpsl
and
std
adc
lods
push
mov
out
lcall
xor
in
xchg
mov
add
sbbb
ds
cmpb
aas
mov
mov
and
adc
mov
jnp
lahf
aaa
pop
stc
ss
in
in
imul
push
jg
lds
ss
popf
fidivrl
mov
fistps
pop
mov
push
sarb
ret
mov
sub
dec
decl
add
insl
out
in
sbb
pop
nop
jo
mov
adc
cld
sub
ret
mov
mov
lret
andb
cmp
push
pop
sbb
cwtl
push
test
test
inc
out
inc
mov
push
movsl
mov
outsl
pop
push
lds
dec
popa
fadd
xor
sti
lcall
inc
sbb
push
mov
jl
jg
pop
pop
pop
push
mov
or
mov
sahf
fsts
jl
repnz
dec
jge
sub
cmpsb
shll
loop
lret
shl
ljmp
movsl
int
movsl
into
mov
jbe
lock
mov
pop
loopne
cld
mov
inc
adc
cmc
pushf
call
mov
xor
dec
stos
movsb
cmp
fildl
mov
inc
js
pop
dec
add
bnd
das
ds
jecxz
lahf
mov
rcll
ljmp
ficoms
xchg
push
fidivl
std
scas
outsb
cmc
rclb
jbe
test
push
xchg
dec
mov
add
cmpsl
ja
mov
outsb
dec
fptan
jg
daa
mov
popf
lcall
xlat
mov
hlt
imul
lcall
xlat
repz
movsb
mov
push
sbb
xchg
lods
je
les
inc
adc
or
ljmp
pop
add
fiadds
lea
ljmp
mov
mov
mov
and
and
dec
pop
mov
push
mov
popa
add
mov
jno
fidivrl
xchg
iret
sub
mov
gs
sahf
add
push
and
iret
mov
xor
ret
call
push
inc
mov
cmc
stos
aaa
js
movsl
aad
jbe
and
iret
push
test
sbb
pop
mov
pushf
push
sbbl
int3
cwtl
mov
adc
adc
fwait
or
and
adc
ret
push
sbb
push
jmp
test
imul
mov
mov
insl
xchg
inc
test
lret
push
mov
das
dec
dec
push
sbb
or
mov
lea
xchg
js
ja
ficompl
inc
and
xchg
and
inc
cmpsb
pop
ret
fidivrs
inc
xor
inc
xchg
pop
sbb
dec
fsts
pop
dec
push
or
add
imul
stos
adc
push
mov
mov
fldenv
lret
int3
push
fmull
repz
call
and
or
insb
fisttpll
ret
shll
mov
cmp
mov
fcom
fildll
jo
xor
xor
shll
or
lods
or
inc
mov
ret
lods
pop
mov
loop
pop
test
xchg
jns
mov
popf
repz
or
mov
ss
mov
mov
lds
mov
jmp
pusha
decb
or
pop
xchg
jb
test
or
jae
cld
repz
jb
jl
xor
cli
jecxz
dec
pop
jle
loop
pop
or
mov
cs
dec
mov
push
xchg
rol
adc
hlt
mov
pop
and
adc
mov
movsb
mov
daa
or
ljmp
push
inc
jge
pop
in
je
dec
shll
inc
dec
jbe
xchg
push
inc
repnz
mov
enter
inc
mov
icebp
cs
ret
movsl
pushf
nop
push
add
outsl
mov
cmpsb
rol
mov
aam
sub
ret
xor
push
push
leave
xor
lcall
cmc
jnp
rorl
es
sbb
ret
mov
xor
add
lcall
or
jnp
and
pop
push
adc
jno
jb
jns
std
ljmp
sbb
inc
inc
bound
push
clc
jno
call
mov
mov
std
cs
daa
dec
gs
imull
sub
test
pusha
push
adc
stos
or
dec
fwait
xchg
and
pop
dec
xor
push
outsl
ret
lret
push
push
push
cmp
testb
ror
iret
pop
pop
mov
sub
mov
mov
mov
pop
loop
ret
mov
pop
push
shrl
imull
arpl
pushf
jmp
loope
mov
sub
aaa
aas
xchg
push
adc
add
pop
inc
es
int
push
aam
push
je
inc
scas
and
push
cli
add
lahf
insl
or
mov
or
xlat
push
push
sub
sub
arpl
fmull
bound
xchg
and
cmp
adc
mov
insl
aas
pusha
loop
mov
sub
dec
dec
cmp
mov
stos
aad
das
mov
xchg
repnz
fmulp
sbb
loope
jnp
add
pop
fst
mov
jns
push
nop
loopne
jno
adc
int
gs
push
mov
dec
nop
sub
sbb
sbb
imul
inc
mov
xchg
add
dec
stos
adc
adc
cmc
xchg
jle
int
test
push
mov
and
stos
xchg
pushf
out
pop
lret
push
movl
test
int3
adc
xlat
fidivrs
movsb
das
sbb
add
icebp
dec
and
fisubrl
pop
repnz
jo
add
in
sbb
jbe
lcall
xor
icebp
dec
pop
ret
mov
mov
or
icebp
mov
pop
repz
push
inc
inc
lea
sti
pop
bnd
xchg
push
aad
dec
push
add
hlt
mov
xchg
aad
jg
ret
aaa
mov
sbb
repz
icebp
add
mov
push
pushf
sahf
lock
inc
sbb
jns
shll
popa
pop
inc
mov
loopne
fiaddl
es
sahf
cmp
loope
mov
jns
sub
sbb
sub
inc
test
mov
fnsave
rcrb
outsb
outsl
jo
std
sub
inc
bound
sbb
ds
add
repnz
stos
pop
aad
stos
ljmp
jl
in
outsl
mov
imul
sub
frstor
scas
ficoms
in
nop
adc
inc
in
dec
mov
aam
sarb
repnz
adc
sbb
sahf
lds
lcall
lods
out
pop
sbb
inc
ret
inc
in
push
mov
mov
lods
jecxz
out
arpl
outsl
dec
in
psrlw
and
hlt
pop
fs
ret
pextrw
lods
cmpsl
xchg
les
mov
popf
test
fucompp
scas
mov
iret
aaa
ret
notb
adc
clc
lods
jl
jo
sbb
xor
dec
adc
add
xor
and
aam
les
faddl
push
sbb
sub
cmp
dec
adc
add
xor
and
aam
les
faddl
push
sbb
sub
cmp
dec
adc
add
xor
and
aam
les
faddl
push
sbb
sub
cmp
dec
adc
add
xor
in
aam
outsb
push
hlt
mov
jnp
dec
add
lret
dec
adc
push
or
pop
inc
jmp
cli
test
stos
cmc
mov
lds
jp
dec
adc
cmp
push
sbb
mov
movsl
lret
test
aad
lds
arpl
xor
adc
pop
repz
fstps
stos
mov
mov
or
add
sub
jns
cmp
add
inc
xchg
adc
push
mov
sahf
jmp
test
out
add
cmp
outsl
xor
and
cli
jo
mov
aad
mov
dec
sbb
jmp
and
test
repnz
stos
in
in
sub
and
aad
cmp
popa
in
pop
pushl
jp
cmpsb
mov
scas
cmp
mov
cltd
inc
add
cmp
lret
shrb
test
mov
cmp
adc
cmp
mov
mov
orb
mov
lcall
add
sub
dec
add
loop
rorb
repnz
aad
mov
das
adc
add
and
cmp
sub
fcoml
ljmp
imull
and
push
cmp
xor
test
loope
stos
xchg
mov
mov
push
inc
es
jo
sbb
or
inc
ljmp
test
aad
lds
jp
dec
adc
cmp
push
sbb
mov
movsl
lret
test
aad
lds
push
mov
inc
dec
pop
add
jmp
mov
mov
out
int3
ret
jnp
inc
cmp
sub
jb
ja
cmp
push
out
inc
ja
adc
ret
sub
in
fstpl
xor
popa
popa
fs
push
inc
fwait
out
int
jno
cmp
or
mov
mov
sbb
pop
push
xchg
insl
adc
jo
or
push
scas
popa
aas
lock
jge
adc
cmc
pushf
imul
lret
adcb
dec
dec
xchg
pop
sub
mov
subb
lods
std
mov
rcrl
inc
fwait
cltd
movsb
out
mov
sub
lcall
jmp
daa
out
xchg
aaa
lahf
clc
add
jno
fld
lock
and
repnz
or
das
cmp
jg
scas
dec
test
rorb
sbb
pushf
cmp
dec
jb
pop
daa
mov
test
aas
jmp
xchg
icebp
fcomps
popa
loope
and
push
lods
inc
nop
cltd
mov
push
xchg
movsl
clc
nop
call
dec
test
in
xorb
leave
add
pop
imul
push
andb
lahf
jl
test
push
sahf
mov
popf
dec
mov
dec
loopne
aam
cmc
movsl
jb
mov
jecxz
push
dec
cmpsb
jns
cmc
or
je
cld
dec
jg
and
mov
jge
xor
lods
inc
pop
dec
mov
mov
aam
sbb
gs
lods
out
push
xchg
dec
lret
cwtl
add
insl
cltd
adc
cmpsb
cmp
hlt
jno
adc
ds
loope
jp
bound
jb
fcmovnu
clc
dec
flds
dec
test
mov
add
cmc
xchg
jp
movsb
push
repz
out
lds
mov
dec
inc
rol
sbb
dec
pusha
arpl
roll
es
xchg
sub
mov
std
and
push
mov
push
push
xchg
push
test
jae
sbb
add
or
test
adc
hlt
dec
sbb
sbb
ja
out
test
mov
push
sub
lods
mov
sti
mov
sub
dec
imul
adc
je
aaa
adc
test
leave
lods
in
les
mov
xchg
jmp
shrl
popa
jmp
scas
loope
add
outsb
push
les
mov
or
add
push
pushf
ret
or
insl
out
sub
call
pop
ret
add
fwait
enter
pop
lret
dec
clc
add
sbb
mov
cmp
mov
cmp
xchg
repnz
jecxz
push
push
xchg
fnstenv
mov
mov
lea
mov
sbb
aas
aad
jbe
pushf
in
or
test
jns
jecxz
lods
movsb
and
les
scas
dec
inc
lds
pop
sub
fdivl
jp
mov
mov
jg
mov
push
ret
lret
pop
adc
scas
add
sarb
arpl
mov
jecxz
sbb
loop
ss
mov
push
inc
and
fwait
mov
xor
sub
sbb
mov
rorb
xor
push
push
sbb
out
cltd
popf
add
xchg
or
mov
rcl
or
dec
shl
ja
cmp
jecxz
loopne
aam
xchg
sub
cmp
scas
fnstsw
mov
mov
addr16
push
adc
cld
inc
lods
inc
mov
shrl
insl
ljmp
fldl
imul
xlat
clc
fchs
jae
xor
faddp
lahf
icebp
pop
call
cld
fldl
inc
sbb
aas
insb
push
add
adc
rcll
dec
popa
das
mov
shll
add
push
lock
test
aam
insb
cmp
jbe
or
cld
xchg
or
inc
fimuls
fsub
and
and
push
sbb
cmp
shl
mov
addr16
xor
sahf
js
loopne
cmp
pop
jg
je
mov
pop
xchg
push
shrl
jae
cmp
jge
js
aas
daa
aam
and
addr16
outsb
dec
lea
push
sbb
add
inc
outsb
je
jns
repnz
xchg
gs
and
movsl
jae
add
outsb
ficoms
out
inc
cmpsl
imul
scas
jbe
sub
jmp
mov
cltd
lock
stc
mov
mov
jns
je
push
into
lds
outsl
dec
xor
push
fidivs
stos
push
shrb
inc
hlt
jo
mov
add
sbb
jmp
mov
mov
push
incb
xchg
jnp
insl
dec
mov
scas
mov
js
cmp
xchg
lea
neg
lcall
add
arpl
adc
rclb
cmpsl
stos
lds
mov
sbb
jne
stc
adc
xchg
sbb
addr16
mov
cltd
pop
pop
adc
fbstp
shlb
cwtl
enter
sbb
sub
pop
popf
fisubl
push
pop
mov
sbb
stos
adc
and
lret
and
jo
cmpsb
js
lret
mov
and
lds
ja
ret
stc
mov
test
xor
jne
mov
inc
jle
jecxz
cmp
xchg
lret
cmp
lret
add
outsb
movsb
movsl
xlat
fstpt
shrl
dec
stc
out
aas
ja
das
cmpsl
sub
adc
ljmp
out
lds
pop
pop
cmovnp
insb
push
mov
popf
popl
jp
std
xchg
inc
jae
and
xor
sti
nop
outsl
sub
mov
or
je
mov
in
dec
inc
xchg
or
mov
lock
xor
outsb
sub
cmc
cmp
stos
adc
push
test
adc
mov
lea
inc
and
lock
js
xchg
mov
movsl
mov
popf
jnp
test
inc
enter
cmp
lea
pop
jns,pt
je
mov
outsb
mov
out
or
push
pop
xor
mov
out
inc
dec
sub
lcall
xor
fwait
scas
stos
test
fucomp
insl
fwait
dec
or
ja
movsl
add
cmp
mov
xor
mov
mov
and
ss
inc
std
loope
push
jb
mov
stc
movsl
rcll
adc
sbb
inc
or
stos
mov
xchg
hlt
mov
repnz
xor
std
mov
jbe
dec
adc
add
in
loopne
fcmove
or
fdivrs
rolb
shll
and
sub
loop
rcll
jb
add
je
inc
js
add
scas
hlt
cmpsl
fistpll
sub
pop
inc
loope
inc
mov
in
mov
stos
shrb
cmp
hlt
into
stos
das
jnp
pusha
aaa
popf
xor
popa
sahf
mov
enter
cltd
stos
popf
push
cmp
shrb
mov
sbb
or
js
xchg
movl
daa
insb
xchg
add
mov
repz
in
fucomp
sub
sahf
mov
and
push
sub
mov
mov
icebp
xchg
out
and
outsb
sbb
into
push
movsl
dec
fwait
call
xchg
push
sub
inc
add
push
cs
flds
int3
push
mov
sbb
cmpl
in
imul
push
cmp
and
nop
adc
loop
cld
push
xchg
xchg
mull
inc
lahf
test
push
xor
xor
jne
cmp
dec
xchg
adc
push
sbb
out
roll
mov
xor
mov
jmp
shlb
pop
test
and
or
add
popa
call
jnp
lods
sbb
mov
loopne
scas
xor
inc
mov
pop
adc
test
iret
xchg
out
fs
ds
dec
add
orl
pop
test
cltd
lcall
repz
mov
mov
dec
dec
cmpsb
ss
jg
insl
movsl
and
andb
cltd
aas
sti
pop
je
cwtl
cmpsb
push
fadd
mov
push
push
xchg
and
add
pop
xlat
rcrb
imul
add
or
out
pop
jmp
inc
xchg
cmp
outsb
hlt
outsb
dec
cs
xor
inc
lahf
push
lret
cmp
hlt
aad
and
add
mov
aam
add
inc
cmpsl
outsl
xchg
loopne
es
push
int3
enter
dec
int3
les
movl
lods
inc
ret
dec
push
add
xor
jb
jle
fmuls
sbb
push
add
cmp
add
imul
test
add
jmp
jbe
add
cmp
arpl
push
test
fsubl
ret
pop
and
ljmp
and
xlat
sbb
repz
repz
dec
aam
inc
shlb
cmpsl
jno
jmp
daa
cltd
or
xchg
jnp
call
in
negl
push
mov
sub
mov
movsb
adc
sub
jns
mov
add
popf
mov
fstl
dec
fildl
in
in
mov
adc
lds
stos
cwtl
sbb
mov
cmpsb
push
ficoml
push
in
int
adc
in
dec
sub
pop
scas
xor
jp
setp
inc
fildl
mov
inc
mov
jge
daa
mov
add
push
mov
in
outsb
in
stos
imull
pop
fmul
adc
adc
inc
jg
pop
xor
jecxz
xchg
jl
mov
mov
xor
imul
cmp
jmp
out
sti
and
jecxz
and
nop
mov
icebp
xlat
xor
fcomps
out
xchg
shrb
je
ffree
cmp
or
popf
cmpsl
mov
and
mov
into
or
movsb
cmp
imul
jns
dec
scas
sbb
xchg
je
xchg
enter
arpl
jno
insl
enter
push
daa
push
push
inc
cmp
fmull
cmpsl
push
gs
mov
fadds
add
cmp
inc
add
cld
and
jecxz
dec
pusha
fstl
adc
leave
sbb
les
or
jnp
loopne
loopne
xor
iret
mov
push
sbb
out
imul
push
and
jnp
js
jo
xor
cmp
jp
mov
imul
sahf
ret
lods
xchg
adc
cltd
stc
pop
and
pop
inc
mov
dec
lret
out
jo
lods
lret
lret
mov
jne
call
popa
push
jae
cli
jmp
xchg
clc
cmp
and
cmpsb
cltd
sub
push
lret
inc
mov
push
and
mov
push
mov
xor
ret
daa
sbb
popf
dec
test
push
in
or
cmp
push
sub
mov
mov
cmc
sbb
pop
inc
xlat
lods
xchg
fs
outsl
dec
push
inc
dec
pop
push
ds
enter
idivl
test
ss
lea
or
fmuls
cmp
notb
popa
shll
rorb
jmp
sub
sub
inc
jne
mov
int
xchg
mov
jmp
mov
cltd
inc
cmp
bound
xor
pop
stc
adc
or
jge
push
ljmp
or
jbe
rcll
mov
rcrl
push
outsl
mov
in
mov
xor
fidivs
gs
sub
or
and
and
enter
lock
adc
nop
jle
je
or
fiadds
insb
dec
sub
fs
test
leave
std
gs
inc
aaa
sbb
sub
aas
add
xchg
mov
push
xchg
test
xor
sub
and
fidivl
inc
mov
mov
ljmp
mov
sub
jbe
arpl
dec
dec
jecxz
inc
or
rclb
inc
es
jae
jo
jnp
dec
test
mov
das
dec
fsubrp
ret
mov
movsl
mov
sub
test
push
pop
int
mull
inc
imul
fwait
sbb
push
mov
adc
push
iret
push
and
adc
ja
add
inc
in
in
adc
push
cmp
mov
xchg
dec
mov
fsubrl
inc
arpl
jne
push
jo
int
add
sahf
inc
lcall
lret
out
cmp
fs
cwtl
jg
lods
leave
bound
adc
inc
jae
aam
push
cs
test
pusha
mov
movsb
jo
lcall
add
push
ljmp
das
aas
sub
cmp
sub
call
sub
lret
insl
test
add
xor
fiaddl
inc
pop
sarb
pop
inc
add
aaa
add
jae
mov
lea
dec
add
jmp
enter
or
xor
pop
jle
mov
in
add
dec
sub
shll
lret
and
jb
xchg
cli
adcb
inc
jmp
lds
pop
xchg
xchg
bound
stc
movsl
mov
out
dec
lock
push
mov
stos
sub
inc
dec
xor
push
pusha
lods
hlt
push
sti
adcb
cltd
imul
filds
inc
cmpsb
dec
mov
mov
xchg
inc
ret
xchg
sbb
das
mov
sbb
add
push
add
int
mov
xchg
dec
mov
lds
push
inc
repz
xchg
aaa
cmp
xchg
nop
jmp
outsl
or
cli
pop
cli
test
jge
fmull
xor
out
xchg
enter
loope
xchg
iret
adc
add
jg
sbb
pop
loope
cmpsb
scas
fsubs
std
and
xor
mov
xor
xchg
xchg
and
sbb
jbe
ljmp
roll
sbb
jmp
sarl
enter
xchg
lds
mov
sbb
jge
fwait
xchg
out
mov
clc
jle
leave
sbb
push
pop
test
jnp
aad
setg
fmul
inc
lods
mov
jae
ljmp
arpl
mov
pushf
adc
push
jl
fs
cmp
ds
psubsw
jo
sahf
cld
jb
enter
out
or
add
xor
pop
mov
mov
mov
pop
xlat
lds
xchg
sub
pop
sub
cld
cld
lods
lods
jmp
cs
xchg
xor
int
cld
push
dec
jmp
mov
pusha
arpl
or
sub
mov
inc
js
aad
pop
inc
loop
aam
stc
movsb
xchg
inc
jnp
xlat
cmc
mov
sbb
rcl
xor
dec
lcall
jecxz
lea
and
jae
push
das
in
inc
pop
stc
aam
lods
out
stc
fstpt
cwtl
jecxz
cmpsl
ret
mov
mov
fistps
jl
cmp
mov
das
xchg
inc
lds
ror
test
xlat
pop
test
ret
adc
add
jnp
jb
sub
ret
mov
or
or
scas
arpl
ss
inc
lds
fstl
test
je
xacquire
dec
push
pop
add
add
push
cmp
jae
or
add
sarl
inc
mov
jns
dec
int3
hlt
dec
mov
sbbl
movsl
pop
pusha
xchg
scas
cmpsl
push
adc
fidivrs
jmp
dec
push
mov
add
sbb
jbe
inc
and
pop
jecxz
jnp
xchg
fisubl
xchg
gs
dec
dec
jmp
outsl
mov
jp
les
in
and
aaa
sbb
pop
ret
jae
push
shlb
xchg
pop
loop
iret
sub
aas
and
push
dec
jae
jo
stos
xchg
push
out
pop
mov
jecxz
or
andb
sub
push
stos
leave
cli
insb
les
stos
pop
xchg
sub
out
lods
or
jg
out
xchg
cwtl
lock
adc
and
gs
dec
repz
push
and
fs
ror
pop
ret
hlt
repnz
sub
xlat
xor
rcr
or
cwtl
mov
jmp
mov
lss
inc
lds
xorb
stos
or
loope
push
mov
pop
jp
dec
cmp
fsubrl
sbb
iret
cvtps2pd
xor
push
mov
jl
ret
mov
cmovs
jo
stos
mov
gs
inc
arpl
das
sahf
jmp
mov
bound
aaa
sub
sbb
roll
mov
das
push
jmp
cs
ljmp
cmp
lret
or
out
xor
rcll
in
daa
call
mov
or
xchg
es
dec
lock
rcrb
xchg
mov
mov
cwtl
mov
dec
lret
and
ja
dec
adc
mov
sub
adc
shrl
in
lods
nop
mov
or
repz
mov
mov
lods
push
out
es
jae
in
sub
lret
adc
push
mov
cmp
cmp
push
imul
call
getsec
scas
xor
les
dec
mov
cmpsl
dec
inc
inc
int
jge
push
and
jae
mov
or
int
push
dec
dec
fldt
je
sub
test
repnz
pusha
or
cli
popl
sbb
shlb
andl
push
and
loope
aam
mov
sub
push
xor
add
call
and
lods
sbb
pop
mov
in
subb
mov
jle
stos
outsb
int
dec
and
cmp
fcoms
sbb
push
es
adc
push
mov
mov
cmpl
and
rcrl
jecxz
ret
mov
scas
out
pop
inc
lcall
dec
sti
add
addr16
loop
inc
mov
xor
mov
mov
aam
call
pop
iret
cmp
negb
ret
jg
and
adc
loopne
jo
mov
push
popa
leave
sahf
jae
pop
sub
cmc
pop
das
daa
pop
insb
or
and
mov
xchg
outsb
add
push
mov
mov
xchg
loop
push
out
aam
dec
dec
cmp
addl
adc
sbb
mov
loopne
fcmovne
js
cmp
je
fwait
mov
ljmp
jp
inc
jg
dec
jl
push
mov
dec
aas
push
push
mov
jb
movsb
les
mov
mov
push
rcrl
xchg
mov
mov
xor
mov
pusha
cli
jne
lock
xchg
xchg
dec
fbld
xlat
es
int
sti
into
aam
dec
in
push
fdivrl
pop
mov
xchg
mov
jno
sub
xchg
mov
xorl
call
push
cmc
and
cwtl
xchg
and
fdivrs
add
sti
fidivrs
aaa
cmp
or
sarl
cmpsl
push
in
test
loop
adc
stc
pop
cmovle
sub
dec
lahf
adc
outsb
dec
jecxz
and
lcall
in
repnz
xchg
add
mov
pop
xchg
or
jp
repz
pushf
xchg
jb
dec
mov
push
dec
dec
fimuls
repz
sub
popa
stos
lcall
stos
fimuls
ljmp
cmp
cmpsl
lea
test
lea
mov
and
je
xchg
lods
pop
out
sti
xchg
xor
jne,pt
xor
mov
ret
adc
push
push
pop
mov
sub
ljmp
xchg
in
xchg
pop
mov
mov
cmc
rorb
pop
mov
dec
push
pop
cmpsl
in
ficoml
fsts
out
in
rcrb
push
jno
sti
leave
jecxz
movsb
push
dec
pushl
xchg
cmp
dec
sbb
push
fadd
insl
cmp
push
js
jne
push
push
sbb
sub
out
xchg
out
das
imul
in
sub
mov
jb
push
leave
jne
rorb
push
decb
outsb
jg
adc
adc
iret
jle
dec
push
xor
and
jg
xchg
insl
mov
jmp
js
ljmp
rorb
inc
addr16
mov
dec
int3
dec
or
testb
sbb
rolb
or
clc
scas
sbb
cmp
or
sub
test
add
shrb
rorl
mov
cmp
cmp
push
jmp
add
clc
stos
dec
or
ret
hlt
daa
mov
lds
xor
push
dec
mov
xchg
out
pusha
sahf
loopne
aaa
rorl
or
ret
push
inc
dec
cmp
lahf
fdivrs
and
scas
fidivrl
fisubrs
jl
adc
mov
jmp
outsb
shlb
cli
je
push
mov
outsl
aaa
sub
rorb
or
ja
sub
mov
cwtl
jg
or
fmuls
xchg
out
out
lcall
cmp
mov
mov
pop
out
sub
or
add
outsl
js
outsb
imul
lds
sub
roll
xchg
lcall
mov
mov
push
jno
ret
in
adcb
xor
iret
push
add
and
ret
mov
or
in
mov
fistl
cmp
push
lcall
mov
mov
mov
rcll
arpl
mov
mov
idivl
jg
cwtl
stc
inc
imul
and
sub
or
inc
ljmp
test
aad
lds
jp
dec
adc
cmp
push
sbb
mov
movsl
lret
test
aad
lds
jp
dec
adc
cmp
push
sbb
mov
movsl
lret
test
aam
lds
js
dec
adc
cmp
push
lcall
xchg
fnstsw
sbb
cmp
pop
sbb
inc
cmp
push
or
fcomps
sub
sub
pop
sbb
sub
pop
or
fcomps
test
fcmovu
mov
pop
sbb
sub
pop
or
mov
mov
mov
mov
pop
js
aaa
or
ljmp
lret
cmpsb
ret
gs
loopne
lea
and
cs
loopne,pt
insl
mov
mov
adc
xor
jae
bound
int
inc
fwait
enter
and
scas
push
and
mov
stc
xchg
in
add
sbb
dec
fldl
sub
xchg
sbb
cmp
negl
xor
sar
push
xor
cwtl
mov
mov
cmp
mov
mov
push
or
fldl
adc
lds
inc
dec
mulb
ljmp
leave
or
fisttps
or
cmp
dec
sbb
lods
clc
mov
enter
test
cwtl
fucom
dec
pop
pop
push
or
and
pop
fstpl
fmuls
test
lods
leave
pop
js
push
pop
pop
cmp
jo
dec
or
or
sbb
lock
cwtl
ret
movsb
std
mov
dec
xor
sub
dec
sbb
lods
clc
mov
enter
test
cwtl
fisttpll
or
cmp
dec
sbb
lods
clc
mov
enter
test
cwtl
fisttpll
nop
ljmp
sbb
sbb
mov
lock
icebp
out
insb
hlt
jbe
push
mov
inc
inc
insl
adc
pop
adc
mov
icebp
mov
in
in
dec
lods
xor
in
lea
or
dec
xchg
cmpsb
adc
aas
shl
push
jl
jae
clc
sti
xor
cwtl
mov
repnz
cmp
inc
pop
push
addr16
aaa
aad
stos
sub
jb
or
dec
sbb
jl
jmp
clc
insb
inc
push
test
mov
sub
jl
fcomip
nop
pop
mov
cmp
leave
outsb
fcmovne
sarl
sbb
inc
dec
xchg
jo
pop
lds
lods
fdivs
mov
sbb
cwtl
data16
mov
aam
cs
pusha
mov
cmc
or
dec
rclb
pop
xor
cs
mov
sbb
jo
pop
leave
or
test
jne
sbb
xchg
adc
sbb
mov
sub
cmp
xchg
ja
jne
adc
mov
mov
mov
jne
ds
and
iret
outsl
dec
inc
add
aam
js
dec
adc
cmp
jmp
jne
push
loope
movsl
shr
insl
jp
nop
ljmp
mov
dec
in
adc
inc
clc
inc
pusha
mov
mov
adc
je
or
hlt
fcoms
clc
lcall
mov
addr16
pop
mov
es
push
dec
scas
aaa
stos
shll
and
shrl
std
pop
ja
add
shl
fs
es
hlt
jecxz
hlt
mov
inc
mov
outsl
pop
mov
fs
add
stc
mov
ss
insb
inc
mov
xchg
push
and
sahf
jg
push
jnp
pop
mov
sbb
mov
or
inc
popf
jbe
cld
jb
pop
push
mov
outsl
mov
movsb
cs
mov
cmp
popa
fbld
xor
mov
add
call
pop
dec
lret
daa
pop
repz
add
jbe
dec
cld
xchg
sbb
jno
sbb
mov
pop
push
cs
mov
lods
jbe
sbb
test
push
jno
and
rcll
jnp
adc
or
lret
or
sti
daa
popf
xor
mov
rcl
test
nop
and
call
push
das
ljmp
jns
pop
xchg
push
stc
xchg
bound
add
insl
and
mov
lret
loopne
jmp
mov
sbb
scas
js
loopne
mov
adc
pop
loope
mov
push
add
pushf
stos
fucomip
fistl
dec
mov
in
cmp
lcall
call
mov
ret
movsl
push
pop
add
add
cmp
das
sti
in
dec
add
xchg
cmp
shlb
inc
notb
test
rcll
popf
xchg
pop
mov
inc
lcall
mov
dec
das
rclb
fdivs
imul
cmp
pop
mov
jmp
dec
lahf
outsl
roll
sbb
aad
mov
lods
push
mull
lret
ja
iret
add
cmp
sbb
xchg
xchg
pop
xor
xchg
mov
pop
gs
cmp
pop
stos
jl
jl
into
imul
or
shr
push
push
add
fmull
mov
inc
cld
push
mov
push
imul
shll
sbb
icebp
icebp
in
int
das
imul
fstps
mov
into
int
lahf
shlb
ljmp
movsl
mov
into
in
sub
jmp
mov
adc
aad
cmp
loope
jns
hlt
mov
jo
dec
js
mov
pop
mov
stos
mov
pop
or
and
mov
mov
dec
repnz
ficompl
mov
cmp
addr16
in
bound
mov
in
repz
sub
or
mov
popf
xchg
mov
sarl
lods
incb
inc
dec
and
jg
test
push
aad
sbb
mov
push
lahf
adc
fmulp
or
xlat
push
mov
in
cwtl
inc
mov
adcl
push
sbb
add
sahf
dec
xor
xor
test
jmp
mov
pop
clc
dec
in
loopne
xchg
mov
cmpsb
stos
cwtl
pop
cwtl
mov
cltd
xor
int
sub
shll
dec
sti
movsb
mov
scas
pop
mov
add
test
mov
scas
iret
adc
stc
cmp
in
mov
rcrb
jle
mov
xor
addr16
pusha
pop
adc
loop
push
mov
mov
lea
rcr
and
sub
flds
shl
push
jne
or
scas
lea
sbb
sahf
inc
out
mov
jmp
jns
pop
pop
cmp
aas
mov
jecxz
stos
std
mov
ret
add
addb
mov
fmull
sub
loopne
push
cmp
lea
xor
scas
push
cli
xchg
mov
fwait
mov
loopne
mov
xchg
push
adc
dec
dec
sbb
out
jg
and
mov
push
not
ret
pop
divl
das
adc
sar
imul
push
fcompl
or
test
pusha
insl
mov
push
gs
aam
jae
js
fisttpl
iret
sub
fmuls
popa
and
lock
fldenv
lds
iret
push
in
lods
leave
leave
xor
mov
cmc
xchg
sti
in
sbb
mov
ss
popf
pop
cmpsl
std
out
xor
xchg
test
or
es
je
cld
or
xor
les
lock
jns
into
addl
dec
dec
popa
icebp
stos
mov
mov
add
rolb
std
xlat
sbb
test
and
lods
mov
inc
js
xchg
jns
test
repnz
adc
dec
mov
mov
push
mov
add
les
int
insb
push
notb
les
push
xchg
push
bound
ret
mov
idivl
test
cwtl
js
jbe
mov
nop
mov
xchg
xor
das
js
mov
nop
push
je
popa
fxch
cli
subb
into
loop
inc
fcoml
push
icebp
ret
xchg
and
cmp
dec
xchg
pusha
dec
mov
xchg
jno
xor
les
cmp
sub
bound
and
fadds
adcl
and
adc
add
pop
iret
inc
icebp
and
fwait
mov
cmp
adc
sbb
sub
movsb
adc
mov
dec
ret
in
scas
push
xchg
or
pop
add
sahf
mov
or
xor
add
xchg
insb
push
cmp
mov
xor
leave
insb
lret
pop
jno
and
movsl
mov
aad
aad
stos
pop
aaa
movsl
loopne
rcrb
jno
pop
xor
xchg
stos
imul
arpl
inc
and
sub
gs
push
xor
imul
mov
add
or
jg
mov
or
xor
test
xor
pop
push
inc
out
outsb
mov
push
inc
mov
push
or
into
cli
pop
push
lods
mov
and
xchg
jbe
dec
test
fsub
xchg
xlat
imul
fdivl
jecxz
mov
lret
shlb
add
jo
push
outsb
and
jns
pop
adc
loopne
xor
xchg
push
in
aaa
add
popf
lret
xchg
inc
scas
repnz
pop
push
ja
test
pop
fnstsw
in
adc
popl
sti
xchg
adc
adc
leave
adc
scas
mov
das
pop
push
cmp
adc
mov
pop
mov
jne
out
add
insb
dec
mov
scas
pop
jge
xor
adc
das
ljmp
ljmp
aaa
xchg
add
or
out
hlt
xor
test
sub
xor
lds
xchg
fnstcw
jp
test
mov
cmp
xor
rcrb
inc
loopne
out
cmpsb
jecxz
cltd
inc
dec
ss
add
int
jmp
mov
dec
andb
and
xchg
stos
or
call
and
mov
movb
sub
sub
movsl
xor
adc
lahf
test
les
xor
or
push
dec
in
sbb
pusha
adc
iret
sbb
imul
test
sub
xchg
bound
in
push
mov
push
lcall
pop
scas
adc
xchg
ficomps
xor
xchg
nop
lds
iret
dec
call
or
or
ror
mov
mov
push
inc
test
push
sbb
clc
inc
lock
xor
inc
xchg
pushf
xor
cwtl
add
scas
call
push
xchg
das
mov
jo
insl
cmpsb
xor
jle
hlt
mov
das
shr
xchg
pop
lock
aaa
xchg
loope
push
inc
mov
std
daa
mov
push
das
sub
jnp
ret
cmc
mov
outsl
test
sbb
bound
ss
rorl
fmulp
divb
dec
inc
jge
aad
xchg
jl
add
std
mov
fstpl
cmpsb
in
and
push
outsl
inc
clc
mov
aad
mov
xchg
or
add
clc
mov
es
push
pop
mov
adc
nop
js
mov
fcompl
dec
jae
jge
clc
push
stos
cmc
ret
dec
mov
outsl
jns
jecxz
adc
fisubrl
pop
or
cmp
dec
lret
pop
jl
ret
adc
out
cmp
mov
push
xchg
bound
add
movsl
inc
int
loopne
fs
adc
out
xchg
sti
or
or
clc
test
cmp
fs
mov
ja
and
jnp
mov
ds
add
dec
jl
push
mov
sbb
dec
in
jnp
mov
outsb
insl
mov
inc
lahf
nop
jmp
sub
pop
addr16
jo
imul
xchg
negl
enter
mov
aam
adc
add
cs
add
inc
xor
push
mov
jb
sbbl
adc
pop
inc
jne
push
mov
pop
cmp
adc
test
sbb
outsl
add
adc
add
sahf
out
in
bound
lods
movsb
cmpsl
fcompl
out
xor
mov
add
or
or
adc
sub
fcmovu
inc
out
ss
out
xchg
push
mov
add
push
std
pop
push
dec
lock
cmc
pop
int
sahf
jmp
mov
sbb
lret
inc
imul
incb
push
mov
addr16
cli
fcompl
mov
jp
or
inc
mov
inc
add
movsl
and
or
imull
clc
mov
add
push
popa
mov
xchg
pushf
enter
mov
push
pop
mov
test
ja
dec
jmp
sbb
mov
mov
dec
and
mov
movsb
push
iret
aas
int3
mov
rorb
inc
or
lret
or
add
jno
in
or
or
sub
mov
jl
loope
jbe
sbb
repnz
cmpsl
inc
lods
inc
jl
roll
jne
pop
aam
xor
jno
movsl
or
jecxz
or
mov
xchg
or
pushf
movlps
xlat
jnp
mov
push
out
cmp
pop
into
cmpsb
dec
mov
cmpsl
and
ret
sti
mov
cmp
mov
mov
cmpsl
aas
sub
adcb
inc
mov
aad
inc
add
jb
sbb
test
addb
clc
sahf
testl
ss
pop
and
cs
mov
movsl
sbb
in
push
repz
mov
pushl
mov
sub
stos
mov
push
push
sub
rorb
popa
jge
enter
leave
lods
adc
mov
fmul
leave
movsl
fdivrs
mov
xchg
inc
jg
xor
test
fisubl
adc
xchg
push
xor
stos
mov
adc
cmp
jnp
or
jle
mov
aaa
lret
mov
jecxz
or
mov
lcall
jmp
scas
das
in
mov
cmc
pop
xlat
add
repz
cmp
sub
and
stc
or
xor
lds
cltd
pop
scas
or
dec
sbb
cmp
ds
and
mov
lret
xor
gs
pop
mov
and
add
lock
mov
leave
mov
jg
stos
push
rorl
sti
ljmp
mov
inc
ja
lods
les
subb
insl
mov
outsb
xchg
std
cmp
addr16
into
loop
out
popf
aad
lock
mov
push
lcall
mov
imul
sti
lock
enter
adc
fcoml
int3
mov
ds
aas
dec
hlt
rolb
sbb
fidivrs
sbbl
mov
push
dec
cmp
mov
mov
inc
cmp
lret
or
imul
fisttps
push
pop
popa
pavgb
and
push
mov
and
mov
cwtl
negl
jg
mov
sub
pusha
sub
jo
xor
lcall
hlt
xchg
ljmp
nop
inc
mov
add
adc
push
and
aam
addr16
xchg
xor
pop
scas
lret
mov
dec
fisubl
mov
sbb
lock
add
push
stos
push
jae
and
pop
mov
lods
shl
mov
or
inc
sbb
push
push
fisttpll
push
dec
hlt
dec
fmulp
stos
dec
stos
ja
es
push
mov
pop
leave
push
and
imul
push
jl
outsb
mov
dec
push
mov
aas
psubsb
test
cmc
sub
hlt
sbb
xchg
addb
into
sub
repz
cmpb
xorl
pop
out
cmp
push
and
out
adc
mov
ret
xor
fs
pop
loopne
neg
jl
into
add
xchg
fcmovb
shll
in
rcl
ror
loop
jno
pop
push
ljmp
mov
lods
push
mov
cltd
inc
stc
lds
or
outsl
clc
cmp
dec
loop
sbb
mov
sbb
and
int3
test
push
imul
aas
push
cmpsl
call
jbe
add
push
sub
or
add
push
jne
lret
inc
pop
movb
xor
xchg
daa
dec
fldl
cmp
mov
push
sub
movsl
dec
aad
jp
mov
les
sbb
push
adc
sub
movsl
stos
fnstenv
lods
movsl
xor
mov
cmpsl
sub
push
std
lods
inc
icebp
sbb
lea
or
jmp
not
sub
xor
aad
gs
aas
add
jecxz
cltd
dec
in
es
fucom
jbe
mov
ja
mov
inc
rcr
arpl
pop
dec
mov
or
and
call
add
popa
ret
mov
test
call
jg
sub
js
jb
dec
cmpsl
test
or
add
cmp
xor
test
subl
incb
in
nop
xor
lock
sbb
jg
punpckldq
xlat
in
hlt
mov
mov
inc
enter
dec
mov
pop
ss
push
push
xchg
aas
aas
and
cmp
lret
and
in
leave
xchg
loopne
adc
leave
xlat
sbb
push
in
fldt
aaa
movsl
stos
cmp
mov
sub
sub
and
and
mov
xlat
fbld
leave
data16
idiv
hlt
imull
aam
xlat
test
out
xor
mov
stos
xor
push
mov
fwait
imul
add
mov
sub
stos
pop
mov
lahf
lret
jmp
daa
aas
jne
cmpsl
inc
pop
mov
test
lcall
nop
cmpsl
and
mov
xchg
xor
outsl
dec
sub
les
std
or
ss
divb
dec
pop
push
add
aam
jl
inc
xchg
push
cmp
and
and
push
stos
sbb
cs
mov
mov
leave
sub
ret
loopne
nop
xchg
jo
sub
nop
imul
mov
ljmp
fmul
cmp
jns
popa
or
lods
mov
push
mov
das
les
loope
test
sbb
mov
sbbb
movsb
aas
and
mov
cmp
mov
push
push
pop
or
sahf
out
ret
in
mov
dec
adc
aam
push
add
xchg
mov
mov
idiv
out
addl
jl
mov
fs
lds
jo
push
into
js
pop
push
outsl
sub
dec
cmpsl
pushf
pop
int3
mov
test
mov
push
rorl
imul
jmp
pop
jnp
ljmp
xor
jl
sti
xchg
push
sbbb
dec
pop
add
add
jbe
ret
add
adc
movsb
xchg
call
enter
loope
sahf
mov
shrl
fisubl
sub
scas
jg
sbb
loopne
loopne
mov
jnp
xchg
aas
in
or
lods
lcall
aad
clc
or
in
push
pop
sub
in
loopne
sti
daa
mov
pop
imul
jne
push
cmpl
jg
scas
mov
idivb
push
decl
into
fisubrl
adc
jp
mov
and
push
pop
ret
jle
mov
insb
insl
push
ret
xchg
inc
in
xor
daa
fsubrs
aaa
push
bound
dec
lods
jle
lds
clc
into
testb
push
jg
cmc
jnp
adc
push
test
insb
in
mov
fiadds
repz
push
sbb
sti
jecxz
icebp
and
adc
dec
notb
out
popf
inc
or
push
aas
jb
inc
and
mov
leave
push
ja
lods
in
je
xchg
into
or
test
pop
out
ss
inc
jno
jno
cmpsb
mov
and
insb
dec
mov
xchg
sar
dec
movsl
div
xchg
les
popl
aaa
push
call
push
clc
push
xchg
cmp
sbbb
js
mov
sub
cmp
or
popf
or
mov
frstor
stos
scas
mov
test
cwtl
sbb
pop
popf
jbe
pop
add
sub
and
pop
add
or
ficoms
idivb
jb
shlb
mov
mov
or
mov
rorb
test
call
test
jge
push
sarl
ficoms
leavew
int3
xchg
xchg
pop
adc
out
push
cltd
sub
mov
mov
ret
cmpsl
clc
out
jle
js
cmc
dec
jne
nop
and
sbb
or
sti
jae
addr16
das
jne
aam
mov
mov
ljmp
xor
test
mov
in
and
mov
into
lds
jp
sar
cwtl
sti
and
arpl
loope
aaa
sbb
and
xchg
push
push
cmc
lret
xor
cld
mov
fidivrs
jns
outsb
stc
scas
int
out
out
sub
jnp
outsl
mov
gs
movsl
jmp
jnp
iret
into
or
adc
ret
pop
sbb
out
xchg
xchg
addr16
sub
cmp
mov
sbb
dec
fisubrs
mov
mov
xlat
es
cmc
add
mov
addr16
pop
imul
lock
push
insl
mov
rorb
jle
out
mov
insl
rolb
lods
jmp
pop
pop
adc
sbb
dec
adc
popa
dec
sahf
adc
push
sbb
xor
pop
cli
lret
dec
dec
nop
sbb
inc
aaa
lea
repnz
mov
adc
jmp
mov
inc
adc
fisttpl
jbe
mov
add
push
sub
push
mov
mov
dec
mov
mov
rcl
xchg
cmp
outsb
aas
xchg
xlat
lahf
add
stos
dec
sub
xchg
ret
mov
mov
test
lcall
stc
aas
pop
xor
leave
cltd
int
out
or
jmp
mov
cmpsb
sbb
jecxz
cmp
sub
jle
ljmp
nop
or
mov
jno
lcall
and
cmp
ret
pop
inc
inc
jle
repnz
pop
inc
add
out
pop
ret
movsl
aam
lret
inc
and
mov
fnstcw
mov
mov
mov
jg
sub
aad
cmp
rorl
lds
sub
test
popf
mov
in
jg
dec
fistl
cli
mov
fldcw
std
dec
stos
mov
sbb
inc
mov
lock
addb
and
sbb
leave
lods
cmpsb
mov
inc
xor
inc
dec
mov
stc
aad
xchg
scas
sbb
sbb
mov
jp
stos
inc
jmp
add
leave
fsubl
test
hlt
aaa
mov
movsl
ds
adc
sub
dec
or
testb
jmp
clc
xor
aam
adc
and
sahf
sub
xchg
hlt
ljmp
push
arpl
outsl
mov
lods
or
ljmp
push
mov
lret
xor
icebp
fisttpll
push
addr16
fsubp
inc
cwtl
cli
or
adc
xor
dec
insl
cmp
dec
sbb
lods
clc
mov
enter
test
cwtl
fisttpll
or
cmp
dec
sbb
lods
clc
mov
enter
test
cwtl
fisttpll
or
cmp
sbb
lods
js
call
in
mov
fisttpll
or
cmp
int
fisttpll
push
clc
inc
inc
daa
fcomps
push
xor
mov
ja
add
push
and
jmp
mov
cld
mov
movsb
fsts
sub
push
or
imul
mov
mov
stc
xchg
in
data16
dec
inc
imul
mov
mov
mov
mov
loope
iret
scas
loop
xchg
or
pop
and
repnz
mov
stos
pop
xchg
adc
xchg
dec
lods
sub
jle
and
cli
sub
xchg
fidivl
int
cmp
mov
js
pop
xchg
inc
or
cmp
dec
mov
sbb
sub
jnp
arpl
ja
push
xchg
cmpsb
sub
xchg
jl
push
jbe
inc
pop
js
xchg
dec
pop
in
dec
stc
lods
or
mov
jecxz
cmp
pop
int3
jle
aad
arpl
mov
add
ljmp
movsl
stc
mulb
mov
or
jmp
jns
mov
inc
lods
jl
jno
movsl
fcoml
cli
inc
notb
cwtl
sub
pop
pushf
xchg
flds
or
xchg
sbb
gs
jns
sub
xchg
cmp
inc
xchg
mov
xchg
lods
call
pop
adc
sbb
dec
jg
arpl
mov
mov
nop
flds
out
xor
arpl
pop
or
adcl
mov
lods
testl
and
pop
push
dec
push
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
mov
stc
mov
cmpsb
fsts
in
mov
cmc
push
push
scas
push
add
cli
sbb
insl
aam
mov
add
rol
dec
ja
leave
cmp
and
cmp
and
cld
ljmp
pop
fdiv
je
pusha
jnp
ss
addr16
jae
mov
imul
nop
leave
shl
sahf
lcall
gs
divb
jo
in
sahf
inc
xor
or
ja
ss
adcl
pop
mov
loopne
mov
xchg
insl
inc
jns
mov
jns
sbb
adc
lea
out
fisubrs
mov
test
dec
mov
mov
jb
insb
or
inc
jg
inc
hlt
sahf
jmp
in
push
pop
or
lcall
shl
es
jo
mov
dec
and
outsl
sbb
cmp
or
and
leave
pop
insl
fxch
ja
mov
imul
hlt
pop
jae
sbb
daa
repnz
jb
cmpl
push
pop
cwtl
jle
aad
loop
js
les
lret
jo
arpl
test
fdivr
loop
pop
or
push
pop
pusha
add
jl
fwait
cmp
jns
fcmove
mov
cmp
ds
aas
lods
or
and
js
out
cmpsl
je
and
pusha
pop
mov
pop
fisttps
pop
fadds
fcmovne
mov
lret
lret
aaa
mov
loopne
push
into
adc
fs
xor
data16
aaa
fimull
jno
les
popf
ds
testb
invd
out
imul
pop
or
shll
mov
clc
mov
enter
out
cmp
mov
dec
test
or
jns
sub
loope
dec
pop
xchg
push
int3
adc
jg
lds
cmp
and
dec
jae
or
out
call
inc
incl
mov
push
test
subl
bound
rclb
inc
test
sbb
and
and
insl
rorl
mov
iret
mov
push
dec
scas
sub
push
fidivs
xchg
and
insb
xchg
sub
cmp
in
or
lods
sarl
aad
mov
out
imull
or
sbb
push
sahf
fwait
or
lret
xchg
lea
arpl
jp
cwtl
cs
sti
mov
mov
cmc
jmp
test
outsl
dec
mov
jns
cmc
imul
cmp
mov
jae
sub
dec
enter
xchg
cmp
mov
pop
daa
in
leave
pop
icebp
cmp
scas
aaa
mov
or
aas
cwtl
add
pop
ss
outsb
mov
add
cmpsl
pusha
jecxz
test
les
clc
push
xor
or
pop
out
aad
add
cmp
sub
shl
jl
xor
test
xchg
icebp
jmp
dec
imul
ja
mov
xor
and
or
out
out
popa
add
mov
add
dec
sub
adc
mov
jae
mov
gs
es
and
mov
pop
sub
aad
bound
cld
ja
xorb
and
hlt
icebp
inc
popl
and
push
test
ds
xchg
or
xchg
sub
xchg
jae
test
cmp
jge
idiv
fbld
inc
and
es
in
outsl
lcall
add
rcrb
mov
rep
add
mov
add
adc
in
push
test
jp
dec
negb
push
jge
adc
popa
sbb
cmp
std
adc
popf
add
fldenv
shrl
cmc
or
insb
out
push
sbb
mov
add
dec
lcall
sahf
mov
cmpsb
ds
cli
mov
jle
data16
pop
add
aad
inc
pop
mov
fistpll
and
test
sub
inc
mov
pop
jo
testl
fsubrl
loop
mov
xlat
jae
mov
pushl
dec
mov
inc
cld
xor
push
je
add
cmpsb
in
loopne
or
sahf
gs
jae
adc
push
sbb
mov
in
pop
xor
out
pop
adc
adc
mov
mov
scas
orl
push
in
sbb
lahf
dec
jecxz
les
adc
mov
jb
and
mov
outsb
mov
aaa
sub
mov
movl
fdivrs
xor
push
xchg
insb
enter
push
pop
mov
daa
mov
cmp
stc
fcoms
xchg
mov
cmp
sbb
sidtl
daa
hlt
mov
xor
xor
sbb
xchg
sbb
jb
push
aaa
xchg
fsubl
dec
out
fsubs
sbb
lods
enter
mov
aaa
lea
js
in
aam
repz
pop
xchg
cltd
or
sbb
out
mov
mov
rcrl
mov
jbe
or
fs
addr16
adc
jl
js
repz
sbb
jb
jno
outsb
ret
incl
mov
shl
or
xlat
jge
jbe
adc
clc
imul
fsubrl
in
pusha
pop
imul
sub
xor
push
pop
test
loop
daa
inc
jne
test
stos
nop
and
jle
popf
adc
pop
or
out
pop
jg
mov
mov
je
out
add
loope
cwtl
jnp
lods
bound
xchg
shl
lcall
fdivr
mov
cmp
mov
out
mov
xor
dec
bound
fbld
pop
mov
mov
cmc
and
and
cltd
je
outsl
adc
loope
mov
cmpl
popf
add
push
lds
orb
jnp
idiv
ljmp
add
adc
add
ljmp
cmp
popa
test
pop
cmp
sbbl
mov
jmp
pop
push
lret
rcll
adcb
xor
sub
mov
xchg
and
fdivp
fistl
popf
sar
lds
dec
lea
fidivrs
push
leave
xor
sbb
push
sub
xlat
in
pop
mov
popl
mov
int
dec
jmp
ret
jae
fxch
dec
imul
xchg
in
test
cmc
sub
pop
int
add
xor
cmpsb
cmpsl
clc
sub
cmpsl
in
das
lret
inc
mov
mov
fcoml
lret
xchg
mov
jno
cmpl
je
dec
add
xchg
xor
inc
ja
or
test
mov
mov
cmpsl
leave
sbbl
pop
adc
adc
loopne
pop
inc
jb
movsb
ss
mov
fwait
push
cmc
dec
dec
lods
sub
pop
jne
xchg
dec
sbb
div
pop
xchg
add
adc
dec
jecxz
xchg
stos
push
lahf
adc
stc
sar
cmp
cmp
call
enter
scas
jge
dec
gs
push
in
cmp
lea
mov
shl
jnp
jle
inc
out
push
andl
mov
dec
mov
sbb
sarb
add
in
mov
lcall
jle
mov
sti
and
mov
test
ret
fwait
pop
hlt
jge
repz
call
and
push
push
lock
mov
and
mov
cmp
lods
aad
mov
rorl
mov
sub
inc
scas
shl
aad
add
and
xor
inc
aaa
aaa
and
xchg
fnstcw
mov
into
aas
dec
jb
loope
lahf
test
jo
inc
xlat
in
sub
inc
jecxz
pop
out
mov
mov
push
xor
add
xor
sub
add
outsb
hlt
test
insb
inc
push
cmp
pop
popw
je
xlat
add
push
xchg
sub
jo
mov
push
ljmp
dec
out
inc
imul
or
int3
xchg
mov
xchg
mov
or
sarb
pop
push
adc
ficoms
push
jecxz
lock
jbe
cmp
jp
cli
int
imulb
js
jae
jae
cmp
jmp
jge
cmp
rorb
pop
adc
shlb
pushf
pop
nop
mov
imul
cmp
es
mov
fwait
scas
loop
es
inc
ss
adc
mov
sub
fimuls
and
inc
lcall
lock
cmp
mov
daa
and
dec
ss
insl
xchg
adc
mov
jge
incl
fnstenv
mov
dec
add
std
je
cmp
inc
daa
adc
rcrb
out
loope
or
icebp
in
iret
xchg
les
mov
dec
and
in
pusha
adc
jns
jnp
inc
imul
loop
mov
push
iret
xor
mov
adc
adc
clc
dec
mov
in
pop
and
inc
mov
out
xchg
lcall
out
rep
mov
jecxz
pop
aaa
nop
sbb
scas
push
xchg
sbb
call
arpl
cmp
loopne
filds
stos
lret
sbb
cmp
enter
ret
cli
mov
pop
jp
rcrb
pop
inc
xchg
sbb
jae
loopne
adc
lret
loop
ret
jl
xchg
jno
sbb
mov
dec
testl
mov
lock
mov
cs
test
jecxz
adc
cld
cmc
dec
dec
cmp
lods
lret
arpl
pop
xor
in
cmpl
inc
or
outsl
mov
mov
push
inc
mov
push
popa
add
jnp
out
shl
mov
cmp
mov
mov
xchg
out
stos
stc
mov
mov
sbb
leave
insb
or
ljmp
or
movsb
pop
pop
out
and
test
sbb
xchg
fistl
scas
mov
sahf
movl
inc
mov
jle
push
aad
push
push
roll
or
enter
cmp
jnp
fs
idivb
jmp
add
pop
aas
adc
mov
int3
es
sbb
jl
stos
fstl
pusha
ss
push
push
push
push
push
xchg
push
cmp
mov
sahf
ja
cmc
adcb
pop
adc
or
stos
je
in
inc
cmp
xchg
mov
in
jb
sub
cmpsl
mov
outsl
fwait
loopne
je
iret
inc
sbb
sbb
and
outsl
aam
dec
fdivrl
dec
lods
cmpsb
inc
outsb
int
js
inc
jo
xchg
jle
out
fcompl
mov
lea
cli
and
add
cmp
sbb
test
jg
pop
xchg
int3
repnz
mov
cmpsb
into
sbb
and
cmpsb
leave
loop
sbb
aam
xchg
popf
ss
lahf
add
push
mov
adc
les
pop
pop
sbb
push
xor
xchg
sbb
mov
orl
mov
xor
fdivl
jp
aad
push
sbb
adc
add
and
js
ss
fsubs
insl
sbb
push
pop
xchg
rcrl
pop
jbe
in
lret
fwait
shll
clc
cmp
ret
jmp
push
shll
js
int
add
shlb
fistpl
scas
ss
push
or
mul
cmp
mov
add
inc
cmc
insl
and
and
inc
mov
cmp
arpl
xchg
cmpsl
arpl
jg
pinsrw
mov
add
fstpt
test
testl
arpl
and
movsl
wrmsr
arpl
xchg
xor
bound
add
repz
mov
pushf
xor
pusha
push
addb
mov
adc
out
jecxz
int3
dec
repnz
ljmp
negb
xlat
pop
out
jo
pop
fistpll
rclb
jae
sbb
fiadds
das
xchg
or
pop
mov
mov
add
dec
add
out
push
and
into
popf
push
mov
jl
das
push
cs
insb
rcrl
stc
pusha
sub
fld
mov
mov
fisttps
jo
dec
mov
test
mov
adc
mov
push
jb
push
xor
dec
jne
sbb
sub
cmpl
pop
ljmp
out
pusha
lods
lods
pop
idivl
fnstsw
lock
push
ret
rcrb
pop
or
jge
out
iret
in
gs
andb
mov
sub
mov
adc
jl
cwtl
loop
scas
fildl
or
fistpl
stc
dec
out
clc
pop
cmpsb
jae
iret
inc
in
dec
imul
jecxz
lret
mov
jno
aad
sub
leave
and
jae
push
les
xor
rorl
popf
cltd
lock
loope
iret
pop
lret
sbb
jp
test
xchg
jle
or
je
outsb
inc
div
fstpt
les
pop
in
jbe
jecxz
mov
test
adc
and
mov
js
out
mov
ret
insl
cs
movsb
fs
imul
data16
pop
sahf
cmp
fwait
cmpsl
ds
xchg
sbb
call
dec
xchg
rcr
mov
and
pop
and
inc
stc
lock
and
xchg
mov
cmpsb
sub
jb
add
aam
adc
cmp
aad
mov
insb
das
and
cmp
adc
fstpt
rorl
mov
xchg
enter
addr16
enter
dec
cld
repz
popf
mov
add
jle
aas
xchg
xor
imul
push
inc
mov
xchg
movsb
test
mov
mov
cli
out
xor
dec
addr16
mov
adcl
push
add
inc
into
dec
push
pop
js
cs
jg
push
rorl
sub
push
push
adc
jbe
and
daa
daa
fmull
cmp
push
subl
mulb
adc
into
mov
out
cmp
test
icebp
cmp
mov
mov
fcom
and
mov
and
jnp
mov
leave
fstpt
test
out
mov
cmpb
dec
jecxz
and
xor
test
iret
addr16
pop
pop
sti
adc
shll
mov
or
adc
insl
sub
mov
sub
stos
lea
shlb
sub
imul
mov
add
mov
fistpl
adc
fstl
dec
add
repnz
cld
adc
dec
push
push
nop
jno
push
stos
cmc
and
cmp
arpl
mov
call
pop
jmp
and
mov
ret
pop
xor
sbb
and
loop
cmp
iret
pop
or
ficompl
sbbl
or
mov
rcr
in
les
lret
adc
or
push
inc
rcr
insl
ja
sahf
lcall
jne,pt
cmp
movl
add
into
push
jmp
cld
xchg
cmc
dec
lock
outsb
pop
jnp
icebp
mov
sub
fs
xchg
loopne
cmp
mov
adc
mov
xchg
jb
push
movsb
jae
cmc
pop
mov
xorb
pop
sub
rolb
mov
push
out
jno
inc
mov
rcl
jge
adc
mov
inc
cwtl
xlat
cmp
cmpsb
mov
sti
in
jg
divl
imul
cli
adc
fs
xor
or
mov
inc
xchg
lock
and
cmpsb
ret
lea
mov
out
aam
xor
pop
scas
mov
inc
sub
sbb
lahf
es
cmp
in
sub
inc
in
in
xchg
stos
dec
mov
sbb
mov
lods
ljmp
xor
or
shrb
cwtl
inc
push
pusha
rclb
insb
in
sbb
jle
inc
arpl
filds
mull
daa
mov
fwait
mov
push
mov
pop
movsl
insl
cmovnp
jno
push
jg
cld
insb
pop
sub
push
and
cmp
call
decl
in
push
addr16
mov
fdivrl
jge
imul
cli
rcl
dec
movsl
sub
cmpsb
divb
or
pop
rcl
int3
lret
xor
mov
cmpsb
ja
pop
ret
stos
jae
test
sub
sahf
jns
add
outsb
mov
adc
jne
sbb
out
imull
jbe
or
cmp
push
je
xchg
scas
call
ja
push
jmp
in
sbb
sub
mov
jne
xchg
mov
and
jmp
hlt
sbb
jg
repz
add
xchg
sbb
loope
mov
xor
daa
sub
mov
test
ffreep
das
data16
cmc
dec
sbbl
scas
testb
sahf
insl
into
jb
test
inc
dec
insl
sub
or
mov
test
adc
sub
pop
xchg
add
ret
pop
lret
rcrl
loopne
mov
mov
cwtl
dec
mov
dec
sahf
xor
ds
cmp
jecxz
lcall
push
roll
jg
push
aam
movsb
sbb
ds
mov
jno
orl
mov
hlt
mov
cmp
out
das
xchg
fists
add
das
cmpsb
pop
addr16
out
mov
mov
movsl
sub
xchg
push
mov
sub
adc
push
and
xor
dec
jb
int3
jp
int3
mov
call
mov
ja
rol
push
es
int3
jo
pop
xchg
mov
decb
lahf
ljmp
in
cmp
xchg
add
inc
mov
int3
push
loop
out
pop
repz
ret
dec
dec
scas
rcrb
rorb
imull
and
aad
inc
add
repnz
adc
mov
shll
xor
mov
cmp
mov
cmp
fadds
xor
and
jae
lret
psubd
test
in
add
mov
pushf
and
jl
jmp
adc
cmp
push
dec
adc
ret
push
xchg
fnstsw
les
divb
add
hlt
sahf
arpl
ficomps
xchg
repnz
inc
loope
or
test
push
cmpb
pop
sub
repnz
decl
iret
imul
ret
pop
pop
loopne
mov
inc
or
insb
adc
rclb
mov
mov
das
push
hlt
or
insb
mov
bound
xor
divl
xchg
pop
pop
xchg
outsl
or
mov
sub
mov
inc
testb
lods
cli
sbb
push
shl
in
addr16
imul
mov
out
or
push
pop
jle
push
push
icebp
jns
adc
push
xchg
shr
sub
rclb
ret
pop
mov
popf
sub
in
xchg
mov
xchg
push
pop
cs
push
and
sahf
hlt
pop
inc
fwait
or
icebp
inc
out
stos
faddp
mov
mov
ret
out
push
xor
insb
sarl
cmp
add
cltd
adc
lock
push
sub
jp
jo
push
xchg
stos
or
sub
add
scas
pop
sbb
lods
pop
and
mov
cltd
lcall
rcll
lret
mov
sbb
lahf
je
pop
leave
cltd
cltd
cmp
xchg
mov
cmpsb
loop
xchg
dec
lea
xchg
xor
movsb
in
mov
inc
in
pop
pop
push
inc
add
idivb
adc
and
and
xor
lea
or
cmp
insb
insb
jnp
subb
and
mov
mov
mov
and
pusha
mov
out
enter
dec
xchg
mov
subl
push
sbbl
xchg
cmpsl
jl
inc
mov
fstl
xor
jno
jp
sbb
fistpll
xlat
aam
lret
mov
rcl
push
cmc
mov
xchg
add
out
add
popa
jle
or
mov
addl
push
imul
lcall
out
movsb
dec
inc
pop
fisttpl
ja
dec
mov
orl
into
cmp
test
inc
add
pushf
fcmovbe
in
mov
je
add
xor
adc
inc
push
lods
and
in
push
in
fisttpl
lret
shr
cmp
or
mov
mov
jl
jae
dec
iret
daa
or
lods
popf
ss
xchg
sub
adc
fdivl
jnp
cld
mov
xchg
arpl
clc
test
and
cmpsl
cld
cmc
jl
and
dec
inc
lds
arpl
fldcw
adc
sub
testb
shlb
jnp
insl
mov
mov
aas
fldl
cmp
push
xlat
frstor
movsl
jb
cmp
repnz
repnz
in
jb
cmp
cmpl
test
jb
jb
mov
jp
outsl
lcall
push
fwait
aaa
test
shll
mov
lret
das
scas
fstpt
es
mov
pop
orl
loope
outsb
fidivs
faddl
lcall
inc
jecxz
stc
sbb
adc
es
push
dec
push
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
mov
stc
mov
cmpsb
fsts
sub
or
or
ss
mov
dec
push
mov
stc
mov
cmpsb
fnsave
add
inc
jns
jns
pop
xchg
leave
push
mov
mov
imul
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
and
adc
add
mov
push
dec
popa
mov
mov
mov
shl
ret
loope
adc
add
xor
and
arpl
jno
sbb
mov
mov
shl
ret
loope
adc
add
xor
and
arpl
jno
popa
mov
andb
test
insb
bound
adc
and
cli
mov
hlt
sbb
fnstenv
jp
mov
dec
insl
cld
movsb
mov
les
in
jle
movsb
jl
or
loop
test
dec
mov
adc
or
pop
jbe
clc
pop
push
rcr
sbb
or
call
sahf
shll
and
push
bnd
sbb
outsb
es
xor
mov
loopne
gs
push
repz
cld
lods
sub
arpl
rcrb
push
inc
pop
outsb
cmc
int
dec
movsl
mov
icebp
ret
xchg
fmull
push
xchg
mov
jns
and
adcb
dec
stos
mov
shrl
xchg
icebp
inc
hlt
call
and
adc
add
jae
arpl
jno
popa
mov
mov
mov
shl
ret
mov
push
inc
jp
push
jae
adc
aaa
aaa
inc
xor
xchg
aam
aad
xchg
jecxz
mov
test
jbe
outsl
and
es
clc
xchg
loop
repnz
mov
push
push
and
inc
outsl
inc
aas
jg
inc
push
jno
popa
mov
mov
mov
shl
ret
loope
adc
add
xor
and
arpl
jno
popa
mov
mov
mov
shl
ret
loope
adc
imul
mov
les
sbb
setb
dec
enter
mov
lods
setae
lret
mov
xlat
push
rol
cmc
je
lods
xchg
cli
mov
dec
repz
xchg
mov
filds
repnz
test
xchg
popf
into
pop
fdivr
xor
xchg
in
shll
leave
dec
jns
mov
jb
dec
mov
cwtl
popa
pop
ret
inc
test
bound
pop
cmpsb
sub
xorl
xchg
daa
lahf
out
add
jp
clc
shlb
aad
inc
out
clc
mov
inc
addl
pop
jno
les
xor
cmp
out
lcall
xchg
cmc
mov
or
adc
jnp
mov
cmp
cmp
dec
mov
cmp
inc
cmp
vxorpd
insl
mov
mov
xchg
jae
scas
or
idivb
rcrl
or
addr16
sub
jne
fdiv
mov
insb
mov
cmp
pop
test
adc
les
dec
mov
ds
sbb
mov
fists
sti
mov
int
jmp
mov
jle
fs
leave
xchg
adc
stc
jne
lcall
shll
loope
ret
xor
mov
xchg
call
test
pop
add
sahf
dec
push
cwtl
lret
repz
jae
loop
fs
cmp
mov
jg
jns
movsb
mov
mov
mov
fimull
dec
push
outsb
pop
sbb
in
mov
cmc
push
mov
mov
aas
lret
orl
cmpb
mov
mov
or
xor
xchg
mov
sub
lock
xlat
pushf
fnstsw
adc
rorb
adc
push
xchg
pop
push
or
mov
imul
mov
dec
shr
jbe
push
movsl
pop
pop
sbb
push
lret
pop
cmp
push
mov
add
jmp
test
cs
jns
shl
fdivrs
jo
fwait
and
adc
adc
pop
cmp
push
jbe
and
popf
push
inc
jae
sbb
mov
test
xlat
dec
push
lock
lea
sub
cmp
jns
aaa
xlat
xor
push
jp
cltd
pushl
and
js
xchg
mov
in
dec
aad
ja
arpl
sbb
movsb
lods
dec
loopne
in
mov
cmp
sub
xchg
cld
cld
pop
xchg
bnd
in
push
loope
mov
xor
jmp
xlat
xchg
pop
mov
repz
cmp
mov
stos
push
and
scas
push
jge
cli
testl
mov
lahf
movsb
jle
aas
test
gs
mov
sbb
dec
sar
and
and
jg
int
pop
cmp
and
push
jnp
js
or
mov
xor
imul
cmp
mov
ljmp
xchg
xor
xchg
and
es
pop
fsubrp
add
jae
lods
addr16
jmp
imul
jl
movsb
cmc
aad
fs
push
pop
outsb
push
adc
jno
mov
gs
or
rcrb
jnp
nop
out
movsl
pop
jle
sbb
enter
hlt
lcall
sbb
cmpsb
nop
fs
nop
jnp
jns
ss
jmp
filds
sub
pushf
adc
adc
mov
leave
sarl
xor
sub
in
aaa
cs
out
xor
mov
fwait
rcrb
push
fldt
cmpsb
or
xor
add
mov
dec
sbb
aam
pop
push
xor
cmp
fidivrl
in
aaa
fistpl
pop
sbb
sub
dec
imul
sbb
jae
scas
lcall
cld
imul
pushf
scas
out
sahf
xchg
fmulp
add
and
jg
fnstenv
arpl
adc
xlat
adc
xchg
mov
or
jo
dec
rclb
loopne
scas
adc
sub
xor
aad
sub
lea
mov
movsl
dec
cli
adcb
daa
sub
in
push
push
sub
ret
pop
dec
leave
fsubrs
and
sar
mov
rcrl
cli
mov
test
rcl
or
jno
or
adc
outsl
je
rorl
sahf
arpl
div
int3
aam
mov
outsb
daa
mov
lcall
xchg
clc
and
stos
sub
cld
mov
enter
mov
jle
adc
rorl
jl
xlat
mov
xor
or
jnp
cmpsl
or
outsl
gs
jb
scas
fsubs
out
out
lea
pop
hlt
sub
xchg
sbb
ja
ja
pop
popa
pop
xlat
push
xchg
bound
nop
cmp
pop
push
test
lret
or
loop
jl
scas
lea
add
mov
popa
adcl
jmp
inc
stos
or
test
cmp
mov
fstl
xor
call
cld
loop
adc
loop
xchg
pop
push
dec
inc
cmp
pop
in
lcall
add
jo
aam
mov
or
clc
pop
stc
xor
test
cmp
jb
dec
cmp
fs
xlat
dec
iret
xchg
mov
xor
sbb
mov
clc
es
dec
lcall
mov
and
mov
nop
pop
dec
inc
frstor
push
or
pop
jb
mov
sbb
and
pop
mov
xchg
push
inc
insl
jecxz
xchg
repnz
cmc
imull
scas
int
pop
sbb
and
pushf
dec
daa
inc
movsl
inc
jnp
push
scas
jmp
xor
lods
mov
or
cmp
sbb
sarb
in
add
xorl
faddp
jb
mov
roll
push
insl
lcall
dec
mov
mov
xchg
sbb
dec
adc
or
mov
inc
push
imull
xor
test
cmpb
inc
dec
lds
or
fs
mov
lods
cli
int3
cmp
aas
sbbl
xor
xor
iret
xor
xor
mov
inc
fiaddl
push
aaa
mov
push
jle
push
fnstsw
jbe
and
into
jb
dec
and
hlt
fcmovnbe
push
aaa
ficomps
cmpsb
jle
stos
fwait
sarl
jno
sbb
and
lret
add
lods
push
or
aad
in
add
fmul
jnp
sbb
out
jns
adc
in
les
xchg
dec
int3
nop
lds
jb
dec
mov
cmc
fcmovnb
mov
or
push
shrb
push
scas
mov
xor
sub
bnd
inc
dec
ficoml
in
pusha
cs
outsl
into
fstpt
push
arpl
add
in
das
outsb
out
repz
add
into
rcr
sub
imul
pop
xchg
lock
lahf
repnz
jno
nop
xchg
test
mov
mov
mov
mov
xchg
pop
jge
add
adc
out
mov
cmc
test
inc
jle
out
and
xor
adc
mov
popa
movsb
pop
imul
inc
mov
stc
push
inc
loop
sti
sub
popa
dec
outsb
push
xor
fdivs
fimuls
mov
js
aad
jae
stos
xchg
xor
push
pop
inc
jp
jmp
daa
lret
mov
mov
cmpsl
icebp
cmp
cmpl
sbb
inc
subl
sub
in
out
jb
std
mov
test
sti
hlt
jg
adc
lds
stc
xchg
xor
test
pop
out
adc
and
out
fwait
mov
rol
xlat
cmc
int3
mov
into
cmc
stos
insb
testl
in
out
scas
push
iret
mov
or
in
mov
nop
adc
lods
push
inc
push
ret
mov
push
mov
orl
mov
test
sarl
cli
cmc
adc
repz
inc
sbb
mov
xor
lock
cwtl
xor
adc
mov
scas
adc
in
outsb
movsb
or
icebp
or
decl
movsl
and
push
jmp
mov
dec
loope
sbbl
not
mov
xor
repz
movsl
jb
repnz
je
xor
ret
mov
pop
mov
jo
stc
push
sti
add
xor
call
pcmpgtw
xor
xchg
add
flds
dec
insl
negl
cmp
lcall
pushf
sbb
adc
lcall
xchg
cmpl
mov
pop
sbb
push
dec
mov
cs
ja
lock
xor
cmp
jg
push
mov
in
and
std
push
cmpsl
dec
cmc
mov
ljmp
mov
push
clc
adc
inc
xor
xor
xor
mov
imul
mov
mov
sbb
hlt
and
and
clc
cmp
add
pop
es
pop
insl
mov
outsl
jg
cmp
inc
in
ljmp
mov
xchg
les
fistl
and
nop
pop
out
or
lea
adc
dec
test
fsubrs
mov
mov
adc
mov
lahf
xchg
pop
xor
pop
dec
daa
lret
fs
pop
cli
push
outsb
fmull
mov
out
adc
mov
pop
cltd
cmpsl
orb
push
push
or
test
pop
adc
push
push
push
out
icebp
in
addr16
mov
fisttpll
insl
push
fisttpll
fs
inc
popa
or
out
mov
cmp
andb
loope
pop
jno
and
cmp
sti
std
in
dec
or
cwtl
sbb
add
jp
cltd
pop
or
cmp
jbe
cwtl
fbstp
fldt
sub
cli
outsb
push
jg
xchg
pop
inc
pop
fadds
in
je
imul
divb
mov
add
adc
jnp
mov
push
sbb
gs
int
into
insl
shlb
imul
jmp
push
mov
psraw
mov
outsl
push
enter
out
mov
aas
cmpsl
fs
aaa
pop
into
xchg
sahf
scas
nop
push
sbb
sbb
fisubrs
pop
xor
loope
into
in
bound
fdivl
pop
push
push
xlat
mov
add
dec
inc
xchg
repnz
mov
jnp
jb
push
iret
fstpl
xchg
xor
andb
and
push
jp
xor
add
mov
lods
outsb
dec
inc
insl
shlb
stos
int3
pop
ljmp
mov
xchg
insb
in
jle
popf
add
dec
mov
into
mov
sahf
push
xchg
repnz
xor
xchg
rcl
mov
adc
cmpsb
sbb
in
pop
mov
outsb
jae
xor
xor
cmp
xor
dec
lea
sbbl
xchg
pop
aas
cs
stos
xor
imul
sbb
aas
dec
or
cltd
sahf
cmp
xor
dec
add
push
dec
sub
ficompl
jbe
cmpl
or
cli
dec
loop
in
ja
iret
bound
ljmp
adc
fimuls
ror
imul
push
dec
repnz
stc
pop
loop
and
lahf
jb
sahf
js
inc
aad
mov
int3
pop
pop
ja
jbe
ret
push
mov
sbbl
mov
std
or
push
cli
cmp
xor
enter
xchg
daa
or
lea
push
daa
in
in
out
iret
ljmp
inc
jecxz
out
out
or
out
andb
inc
jno
into
mov
jae
iret
sub
mov
jg
and
xor
sbbb
dec
mov
mov
sub
shll
rolb
mov
push
mov
and
out
ljmp
popf
aad
push
xor
dec
push
jo
mov
mov
mov
jbe
lods
pop
stc
rcrl
mov
popa
xchg
mov
in
sbb
push
jbe
decb
cs
rorb
push
xchg
enter
in
inc
and
fwait
stos
xor
movsb
jb
loope
ficoml
jp
aad
out
pop
ret
push
cmpb
mov
clc
stos
jnp
cmpsl
popf
sbb
add
jp
xchg
stos
sbb
cltd
dec
mov
inc
mov
and
scas
fs
sbb
jbe
fcoml
lods
inc
scas
pop
xchg
outsb
les
mov
adc
stos
imul
popa
mov
iret
inc
movsl
les
aad
movb
adc
movsl
packssdw
mov
sub
mov
cmp
or
lods
fcomip
cmpb
cli
xor
shl
mov
call
lds
xchg
jne
fdivrs
add
fisubrs
add
xchg
xchg
sub
sub
jae
lea
scas
add
arpl
loope
mov
pop
dec
pop
xor
xor
xchg
sbb
lea
sub
rorl
mov
aam
sub
icebp
cmpsl
popf
call
jne
sub
imul
sub
xor
loop
inc
stos
jmp
call
push
cmpsl
repz
jns
push
cmc
push
insb
mov
hlt
mov
sub
jg
xchg
in
sub
shrb
test
jg
push
pop
jmp
sub
test
mov
mov
rcll
rcrl
rorl
daa
scas
jmp
ja
psubd
cmpsl
stos
cmp
xchg
fldenv
loop
stos
mov
cmp
jmp
stos
test
lcall
enter
ret
sub
fs
daa
push
lods
push
das
jae
cli
inc
lret
outsl
pop
sbb
stc
cmpsb
popf
jmp
rolb
pushf
xchg
mov
dec
dec
mov
stos
xor
jnp
pop
inc
mov
cli
inc
fs
add
lds
mov
ret
dec
jns
inc
mov
and
mov
fcmovnbe
ror
jnp
enter
xor
inc
sti
pushf
dec
mov
mov
rcll
mov
sbb
add
jge
pop
call
jnp
mov
enter
bound
sbb
rclb
leave
popf
sub
mov
push
outsl
sub
or
push
mov
test
lahf
loopne
aam
add
sahf
sti
popf
repz
mov
iret
dec
imul
mov
test
std
xchg
enter
dec
push
imul
adc
mov
movsb
add
mov
push
or
jo
insb
jge
pop
jmp
mov
pop
mov
jnp
or
inc
pop
or
or
out
iret
icebp
sub
add
add
xor
mov
pop
lods
test
dec
mov
jge
pushf
push
gs
sbb
rcrb
in
mov
xor
sarb
pop
and
pushf
adc
pop
push
pop
pop
push
fucomip
std
mov
int
mov
shrl
push
mov
es
sub
stc
mov
outsl
add
js
int3
jmp
mov
add
jo
add
add
xor
add
scas
test
mov
xchg
rclb
jne
add
insl
push
in
fcoms
mov
inc
cltd
dec
dec
fldenv
mov
popf
mov
mov
jmp
rcr
pusha
mov
mov
js
pop
pop
ljmp
fnstsw
pop
mov
jp
repnz
or
enter
repz
mov
lock
jp
cmp
popa
and
jp
mov
sbb
repz
in
aas
push
mov
or
mov
in
jne
add
mov
fbld
push
jnp
xor
rorb
jnp
outsb
movsb
fidivrl
mov
outsb
push
out
cmp
pop
mov
pop
scas
sub
shr
int3
or
sub
mov
ret
insl
xor
repnz
inc
outsb
js
hlt
push
stos
lea
ret
dec
mov
movsb
call
and
push
and
je
xchg
dec
out
xor
and
adc
and
scas
sub
std
pop
push
rcrb
push
shr
fisttpl
icebp
into
xlat
jle
pop
push
scas
sti
mov
fildl
push
cmpsb
dec
sub
orl
sub
ret
cs
shl
pop
inc
xlat
dec
inc
push
xlat
or
mov
mov
mov
adc
icebp
add
maskmovq
clc
push
push
xor
pop
mov
sti
sarb
sbb
divb
mov
les
pop
and
roll
nop
and
mov
js
add
call
lcall
dec
pop
imul
jl
lret
imull
cmp
stos
outsl
cmp
dec
sbb
or
cmp
lret
xchg
or
and
lds
mov
shl
leave
leave
mov
jge
test
dec
fiaddl
push
xorb
mov
movsl
cmp
in
add
xchg
outsl
es
stos
aaa
push
fstl
xchg
lahf
jg
jecxz
xor
aaa
out
jge
std
cltd
aas
push
sbb
iret
mov
fildl
sub
cmp
mov
mov
mov
test
scas
into
lahf
arpl
jge
pusha
push
fcompl
loop
nop
cmpsl
iret
fcmovbe
pop
mov
lds
test
pop
push
fmull
jmp
mov
xor
imul
les
out
push
sub
or
jl
adc
or
leave
into
sahf
repz
and
dec
sub
jno
fistps
sub
or
mov
fsubl
fcom
sbb
rcll
jg
mov
jp
repz
imul
cmpsb
or
push
test
jnp
dec
in
xchg
push
pop
in
sub
js
pop
test
das
or
imul
lods
push
push
mov
xchg
inc
shlb
lds
pushf
aam
in
dec
adc
insb
xlat
xchg
xorl
dec
test
xchg
test
in
dec
pop
shl
push
inc
cwtl
out
inc
pop
movsb
pop
bound
sub
xlat
fildll
lcall
pop
xchg
mov
pop
mov
fistl
jge
and
push
test
jmp
xchg
xchg
or
mov
insl
outsb
aam
push
push
sub
xorb
stos
hlt
inc
mov
roll
push
jns
aaa
sub
stc
arpl
movsl
stos
sahf
test
or
push
movsb
or
ds
pop
sqrtps
push
out
ret
int3
int3
je
mov
stc
icebp
mov
mov
out
push
fnstenv
add
bound
pop
cmpsl
jno
gs
cmp
testb
roll
outsl
enter
loope
jnp
push
inc
inc
es
notb
iret
rolb
fildl
nop
inc
int3
adc
mov
inc
and
sub
in
ja
int
cmc
add
inc
imul
adc
repz
inc
jnp
and
mov
arpl
mov
fcomps
mov
xor
mov
sbb
int
sub
pop
imul
sbb
adc
jnp
loope
push
mov
js
popa
movsl
adc
adc
dec
pop
cmpsl
rolb
push
out
scas
lods
push
leave
mov
push
shrb
je
adc
lret
sub
and
fstl
mov
dec
test
pop
shrl
and
push
aas
xor
imul
or
lock
or
mov
aaa
into
lahf
subl
mov
movsb
test
popa
iret
test
cld
ss
dec
xor
push
js
inc
cmpl
cmpsb
dec
mov
test
arpl
dec
sti
add
enter
mov
insb
ret
aaa
dec
add
xor
movsb
out
bound
pop
addr16
imul
aam
cmc
mov
push
and
mov
xor
cli
into
add
lods
mov
jb
shlb
das
jae
mov
jp
pop
xor
xlat
cmp
adc
std
mov
inc
mov
inc
sarb
lea
cltd
add
cmpsb
xor
cmp
in
adc
xchg
repnz
mov
lcall
inc
inc
testb
jl
xchg
outsl
lds
ja
push
xchg
sti
xchg
jmp
pushf
xchg
push
mov
negb
rcl
mov
mov
filds
and
out
xchg
mov
in
cmc
fsubl
push
imul
and
xlat
adc
insl
push
cmp
test
mov
lahf
or
mov
or
cmp
test
mov
cli
in
jle
add
pushf
jb
pop
test
inc
mov
add
shlb
pusha
mov
cmp
add
mov
jne
shrb
xor
cpuid
je
dec
leave
inc
dec
jns
cwtl
out
mov
repnz
sbb
jae
mov
inc
stc
cltd
push
sti
sbb
jbe
rorb
dec
xor
add
xor
and
arpl
jno
popa
mov
mov
mov
shl
ret
loope
adc
add
xor
and
arpl
jno
popa
mov
mov
mov
shl
ret
loope
adc
and
push
arpl
jno
popa
mov
mov
mov
shl
ret
loope
adc
add
xor
and
arpl
jno
popa
mov
mov
sbbl
mov
pop
xchg
xor
and
push
pop
mov
andl
push
inc
addr16
adc
and
push
movl
xchg
pop
adcl
mov
ja
jcxz
mov
lds
arpl
or
jns
push
pop
xchg
pop
mov
xor
movsl
push
orl
inc
sti
pusha
testl
lock
xchg
sbb
cmp
jbe
pop
or
iret
and
test
adc
rol
out
inc
enter
xchg
pushf
bound
outsb
dec
stos
rep
mov
scas
adc
pop
mov
mov
xchg
cmp
xchg
push
xchg
popa
mov
pop
jmp
daa
and
adc
and
inc
jmp
pop
mov
out
pop
push
shll
iret
mov
addr16
lahf
push
js
in
mov
aas
pusha
iret
inc
divl
jb
addr16
daa
push
add
das
repnz
xchg
cmp
sbb
mov
add
call
gs
leave
and
mov
lahf
xchg
mov
cmpsl
and
push
movl
xchg
pop
sub
mov
lahf
push
out
inc
sub
jecxz
ret
insb
fistpl
dec
xchg
mulb
and
shlb
shlb
or
push
les
inc
out
dec
mov
mov
push
inc
repnz
dec
loope
xchg
sbb
xor
daa
xchg
js
loope
test
dec
xchg
pop
movl
xchg
pop
xorl
daa
mov
ja
jcxz
adc
and
push
movl
xchg
pop
xorl
daa
mov
ja
jcxz
adc
int
xor
dec
test
adc
pop
stc
mov
jp
push
xor
ret
loope
popf
insl
in
je
sbb
jae
mov
call
sub
fidivl
cmc
adcl
pop
lcall
push
movl
mov
xchg
les
jnp
daa
mov
pop
adc
mov
movsb
inc
shrb
sub
arpl
ja
shrl
adc
inc
adcb
add
xchg
or
fistpll
das
mov
mov
or
mov
loope
call
sti
pop
mov
mov
ljmp
mov
sqrtps
aam
test
xchg
xchg
nop
push
mov
scas
mov
jae
pmaxub
iret
mov
out
stos
push
xchg
mov
mov
sbb
inc
lcall
jmp
rcrb
enter
xchg
mov
int3
je
in
push
pop
cmp
int3
dec
fistl
mov
in
xchg
mov
leave
xor
loopne
jp
filds
imul
shl
ja
subb
imul
mov
add
mov
push
ja
cmpsl
inc
rcrl
fisubrs
insb
push
push
rclb
mov
ss
xchg
std
stos
leave
pusha
mov
push
mov
aam
pop
xor
sbb
shrb
fists
adc
sbb
push
and
dec
xor
rolb
sbb
push
xchg
rorl
mov
pop
and
popf
aam
aaa
or
push
scas
sbb
push
cmp
pop
mov
jo
rclb
mov
push
pusha
mov
call
pop
ret
push
cs
frstor
xchg
push
lahf
aam
popa
popa
jmp
cmp
push
scas
shl
sbb
rcr
xchg
fdivs
data16
shlb
pop
dec
jae
pop
pusha
sub
xlat
lock
loopne
xchg
pop
cmp
aad
jbe
cmp
xchg
and
jo
int3
pop
in
push
mov
int3
js
out
into
xor
mov
mov
cmpl
push
and
cmp
or
xchg
xchg
cmpsb
in
test
mov
add
pop
fcomps
mov
inc
adc
test
push
xor
in
popa
lock
dec
or
fstpl
adc
outsb
mov
xchg
mov
push
sub
mov
sti
inc
into
addr16
mov
pop
jl,pn
pushf
scas
mov
outsb
push
sahf
cmp
mov
pop
flds
in
rorb
push
cmp
add
cs
xchg
mov
pop
insb
cmpsl
inc
out
xor
pop
push
in
sbb
jbe
out
cmp
xor
add
int
and
mov
pusha
stc
mov
or
mov
add
and
jge
out
inc
inc
lods
fsubs
outsb
ja
jns
mov
add
push
lcall
fucomip
inc
mov
cmpsb
in
imul
in
mov
mov
shll
and
shl
in
jl
stos
outsb
das
xchg
cmp
shlb
test
adc
push
outsl
pop
adc
call
ds
xor
aam
cmp
cmpsb
mov
xor
cltd
lcall
scas
mov
cltd
adc
loope
orl
push
cli
inc
mov
sbb
pop
mull
cli
jnp
jl
cmp
lds
icebp
mov
mov
pop
mov
imulb
mov
add
cmp
in
fwait
inc
call
mov
fdivs
sub
and
repz
rcrl
cmp
scas
add
loopne
pop
xor
xor
pop
pop
jge
adc
pop
mov
cmpsl
and
js
jbe
inc
imul
and
test
scas
dec
cmp
ficoml
sub
stos
push
mov
pop
inc
movsb
or
cmp
lret
or
xor
and
stos
mov
test
aad
in
cli
shlb
imul
push
inc
adc
push
push
add
nop
fucomip
add
sub
mov
sub
fdivrp
and
xchg
jne
mov
sbb
inc
mov
loopne
ficompl
arpl
dec
adc
push
dec
sub
jnp
cmp
cmp
mov
xor
push
cmp
push
push
insl
fwait
mov
mov
rol
jmp
xor
mov
xor
ret
sbb
into
shrb
rcrl
xchg
inc
notb
out
loop
and
add
int
lahf
popa
dec
jmp
cmp
sahf
orl
inc
aaa
in
jo
cmpsl
pop
sbb
addl
shrb
leave
xchg
insl
aas
loopne
cmpsl
in
or
mov
lods
in
lods
push
xor
ficoml
popf
xchg
mov
sbb
bnd
fisubl
mov
dec
into
pop
aad
jno
dec
popf
out
insb
movsb
and
fucomi
xor
stos
lods
cs
dec
fistps
adc
sbb
jo
sahf
add
aaa
out
adc
sub
int3
lock
sbb
pop
xor
cmpb
push
jmp
daa
shrb
push
push
mov
in
stc
sub
sti
loopne
or
mov
cmp
jl
cmp
cmp
xchg
add
loopne
jnp
loopne
mov
loope
and
push
mov
xor
ss
daa
jmp
pushf
add
popa
in
pop
lret
rcrl
push
pop
ja
rorb
int
stos
test
mov
adc
outsl
sahf
mov
out
imul
inc
fiadds
ret
inc
xor
enter
roll
push
in
shrl
aam
pop
and
jg
xor
loop
lahf
scas
jb
or
cmp
insl
test
xor
sti
dec
fisttpll
out
pop
insb
pop
xchg
push
inc
inc
lods
pop
cli
inc
adc
dec
ljmp
push
dec
pop
mov
pop
pop
into
pop
gs
pop
and
jb
mov
mov
fisubl
adc
mov
push
mov
out
add
push
pop
pop
in
cmp
inc
lret
sahf
and
pop
sub
out
push
aas
dec
dec
enter
jne
adc
pop
nop
movsl
mov
add
std
loopne
jg
jmp
cmp
pushl
lods
adc
cs
lcall
push
sbb
inc
and
push
inc
dec
int
adc
int3
sub
loopne
xchg
gs
imul
mov
push
xor
addr16
pop
stos
add
cmc
adc
adc
xor
out
pop
ret
shl
outsl
jnp
push
fs
xchg
loop
jle
rolb
pusha
cmc
push
adc
aas
loop
dec
push
rol
ret
adc
aam
adc
cli
pushf
mov
inc
cmp
cmp
xchg
pop
popl
outsb
inc
add
mov
mov
aad
pop
imul
and
push
sub
es
nop
movsl
jne
aaa
bnd
jp
scas
insb
inc
std
faddp
sahf
xchg
into
sbb
jmp
clc
sarb
out
xchg
lret
xchg
and
jecxz
or
xchg
mov
int3
cmpsb
arpl
jmp
subl
enter
mov
sub
mov
dec
xchg
mov
push
mov
cli
dec
mov
cltd
fisubl
ret
sub
lahf
jge
in
cmc
xor
test
movsb
push
sub
fnstenv
jg
sub
pop
jge
add
iret
xchg
rcll
add
xchg
fsubs
loopne
sub
sub
mov
xor
jae
movsl
iret
mov
loop
pop
mov
in
push
dec
enter
jbe
jno
inc
jmp
jle
cmp
add
lods
mov
add
mov
stos
add
idivb
das
int
mov
adc
mov
jbe
sahf
les
adc
cmp
dec
sbb
sbbl
xchg
addr16
xor
push
pop
push
leave
add
outsb
outsb
mov
and
xchg
jnp
dec
imul
jecxz
scas
scas
repnz
test
inc
add
jge
jp
or
cmpsl
mov
or
mov
jbe
icebp
ret
xchg
iret
out
cli
jno
ret
jp
cmpsl
int
jns
adc
sub
adc
push
sbb
fmul
imul
notb
jb,pt
call
movsl
xchg
push
imul
jnp
xlat
aam
stos
mov
repz
add
push
int
std
shll
andb
lds
xchg
leave
jl
xor
in
jns
test
inc
mov
in
call
dec
cmovg
jecxz
jmp
in
push
pushf
sbb
push
es
stc
jge
sbb
aam
mov
sub
nop
jae,pt
sub
inc
pop
js
repz
push
push
dec
imul
sahf
fadds
icebp
pop
push
pushf
pop
xor
clc
inc
fcomip
test
out
rol
dec
mov
idivl
aas
imul
xchg
pop
enter
inc
insb
mov
xchg
arpl
pop
sub
push
mov
cld
and
push
pop
mov
aas
mov
mov
sbbb
imul
jb
pop
es
mov
pop
es
sbb
dec
push
lahf
call
inc
insb
lahf
enter
inc
xor
xor
pop
addl
add
sub
shrb
lahf
insb
outsl
mov
jno
mov
pop
jecxz
and
adc
inc
lock
fucomp
ds
pop
test
mov
ror
test
or
lea
std
iret
and
sub
sbb
or
scas
jge
push
mov
cmc
sub
cmpsl
or
dec
xor
jl
rcrl
imul
lods
push
mov
fidivrl
add
inc
dec
jo
nop
push
lods
js
xor
gs
aam
stos
orl
xchg
push
bound
xchg
mov
cld
cltd
jge
inc
xchg
daa
pop
movsl
jmp
sub
inc
pop
xchg
loope
sub
mov
pop
mov
test
xchg
lahf
xchg
and
addr16
mov
rorb
cld
jl
push
fisttpll
xor
or
adc
xor
je
les
lahf
xchg
push
andl
add
aas
popf
out
scas
pop
pop
cli
jae
test
pop
ss
add
ds
cmp
and
cs
push
cmpsl
nop
push
or
les
sbb
fmuls
sti
imul
ret
in
loopne
push
das
and
stc
lret
mov
stos
adc
jp
push
xchg
mov
ret
das
sub
adc
mov
mov
lds
ljmp
inc
sbb
push
xor
pop
mov
dec
add
mov
mov
mov
sub
lods
adc
cltd
mov
mov
mov
xchg
mov
mov
clc
and
jl
cmpsb
dec
mov
jmp
or
daa
mov
push
or
push
pop
cmp
aam
in
in
dec
rcrl
jno
mov
mov
out
aad
mov
adc
fucomp
dec
decb
xor
cmpsb
xchg
imull
dec
sbb
mov
sbb
lcall
pop
and
jmp
push
cmp
stc
in
outsb
fisubs
sbb
inc
cld
push
jp
sub
push
or
notl
aaa
mov
push
xchg
leave
or
jge
mov
xchg
mov
mov
lods
adc
or
and
xor
pop
negl
dec
cmp
push
push
lock
ffree
pop
sub
gs
and
sbb
fldenv
dec
popa
cmpb
mov
into
and
mov
hlt
cmp
or
loope
imul
mov
pop
xor
outsb
jno
push
shrl
lea
add
jbe
stos
repnz
sbb
sbb
push
adc
jge
std
das
in
stc
mov
sbb
out
out
inc
ss
ljmp
lea
xchg
sub
jnp
cmc
adcb
sahf
bnd
sub
jno
xchg
imul
jae
inc
call
mov
mov
test
push
psubsw
xor
into
fiaddl
rol
dec
pop
sbb
hlt
pop
xor
shll
outsl
mov
testl
fdivrs
dec
push
jmp
test
or
loop
ja
sbb
sbb
xchg
or
pop
inc
callw
daa
cmp
int3
push
and
pushf
outsb
adc
dec
and
mov
fisubs
jns
addl
jle
repz
movsl
mov
mov
sbb
movnti
lock
xchg
push
stc
adc
jo
mov
fstpt
xchg
fwait
arpl
push
shl
cmp
ja
cmpsl
cmp
sbb
mov
mov
ss
movsb
jb
inc
fists
mov
outsl
ss
lret
xchg
push
add
sub
mov
test
imul
sbb
dec
daa
fdivs
jno
test
lahf
mov
mov
das
mov
pushf
push
imul
in
or
cmp
insb
test
cwtl
in
jle
adc
push
push
add
ds
pop
push
sub
xorl
push
call
cli
jg
push
insb
mov
jmp
enter
xchg
add
mov
out
rcrb
ss
mov
ds
cmp
xchg
shl
jo
sub
cmp
cmp
fmul
or
mov
bound
or
cmpsl
sbb
lea
stc
inc
cwtl
jg
jo
in
int
cmc
inc
enter
jmp
mov
jp
fwait
shl
cltd
lds
fwait
cmp
in
push
stc
frstor
in
cwtl
mov
popf
aad
in
mov
xchg
or
pop
scas
mov
sub
test
add
adc
aas
sub
fidivs
arpl
mov
and
jmp
push
dec
shlb
dec
push
das
mov
dec
pop
pop
cmpsb
fists
push
lea
mov
lds
cmp
fldl
js
iret
sub
test
mov
ret
lods
lcall
insl
jg
add
lahf
enter
mov
dec
fs
stos
push
xorb
xlat
inc
dec
push
xrelease
fnstsw
stos
fsubs
sbb
jmp
and
mov
les
scas
shll
push
je
inc
cmp
and
add
movsb
pop
inc
lahf
and
nopl
dec
mov
mov
or
add
lret
fdiv
sbb
iret
jecxz
inc
xchg
imul
test
in
lea
and
xor
xchg
pop
repz
ret
jl
adc
fdivl
xchg
int3
mov
subb
or
jb
or
adcb
mov
push
sbbl
push
dec
das
fwait
daa
es
out
pop
and
inc
ja
adc
scas
mov
lret
pop
sti
xchg
mov
cwtl
pop
xchg
push
lods
nop
test
lea
dec
cmpsb
inc
lods
lea
or
sbb
mov
adc
bound
push
in
jmp
out
cltd
leave
mov
and
inc
jmp
lods
xor
sbb
fwait
push
pop
out
test
popa
pop
mov
sbb
int3
and
or
jnp
es
mov
xchg
int3
int
and
std
ror
nop
loopne
sub
stos
cmpsl
jb
mov
and
jmp
fisubrl
mov
dec
in
push
fsubr
arpl
and
lods
xlat
jb
outsl
insl
dec
cmp
cmp
test
or
fldl
leave
pop
icebp
jae
sti
incb
cmp
sbb
or
movsl
cmp
push
shll
cld
xor
fists
push
sbb
dec
inc
and
add
insb
xor
ds
xchg
push
cwtl
ret
outsl
add
jp
out
xor
pushf
pop
pushf
sbb
sub
jecxz
ds
pop
sub
mov
dec
inc
mov
add
inc
outsb
push
dec
hlt
jae
sub
jmp
lahf
test
cmp
loop
sahf
fwait
es
sysexit
inc
movb
jb
jl
sub
lret
cmp
mov
xor
cld
call
cmp
sub
das
cmpsb
cmpsl
in
nop
xchg
hlt
sarl
jg
pop
xchg
cmpsl
insl
cmc
mov
je
jae
push
xor
xor
leave
pop
ja
outsb
shll
adcl
lods
fistpl
sti
and
orb
push
mov
and
aad
sub
addr16
test
dec
jge
pop
inc
pop
pushf
mov
add
fdivs
or
mov
mov
add
cs
pop
rolb
test
sbb
and
jp
arpl
adc
xor
xlat
mov
js
cmp
iret
sub
daa
arpl
cmp
inc
adc
ja
add
push
sti
xor
sbb
test
mov
les
and
outsw
xorb
sti
and
push
push
xor
dec
add
sub
aaa
fcmovb
les
push
mov
mov
mov
mov
shr
mov
jmp
jmp
cmpsb
aad
jbe
adc
test
pop
scas
or
lahf
adc
daa
loop
or
insb
add
adc
cltd
inc
xchg
adc
sub
pop
je
pop
ret
lret
push
push
xchg
loopne
aam
je
xchg
sbb
int3
nop
lock
int
pop
aaa
jp
scas
push
loopne
fdivs
fwait
in
mov
pop
inc
mov
mov
fs
cmp
jmp
addl
sub
sbb
add
test
in
clc
sarl
dec
loopne
fs
push
leave
xchg
add
dec
arpl
push
mov
cli
push
adc
inc
pop
and
push
test
pop
pop
ss
popa
orb
dec
cltd
lods
add
dec
pop
clc
mov
mov
stos
loopne
jno
and
lods
inc
jno
scas
add
jbe
sbb
stos
mov
mov
popf
out
aam
pop
push
cmp
inc
mov
adcl
xor
aam
test
cmp
or
adc
outsb
cld
pop
jno
inc
add
cs
jb
jg
stc
shll
mov
mov
dec
aad
add
xchg
std
adc
xchg
add
das
fstl
imul
aam
in
add
hlt
sbb
cmp
pop
or
xchg
mov
push
xor
iret
shlb
cld
inc
pusha
xchg
sub
pop
add
fld
subl
addr16
dec
mov
cmp
push
orl
lea
jl
lock
and
and
pop
fisttps
push
lret
ficoms
aaa
inc
cwtl
inc
mov
sahf
out
dec
sbb
pop
ja
test
add
enter
jge
pop
sbb
mov
fdivl
bound
push
dec
aaa
shrb
out
es
dec
inc
mov
movsb
stc
dec
fdivr
in
enter
rcrb
subb
pop
pop
in
fwait
test
lea
or
fs
mov
mov
add
mov
shrb
lret
dec
cld
iret
cmp
add
add
push
cs
add
daa
movl
xchg
aam
js
lock
adc
pop
pusha
inc
test
mov
bound
push
into
mov
sbb
mov
loopne
push
push
mov
movsb
or
and
pusha
jne
imul
out
dec
outsb
sbbb
mov
rcll
xor
mov
xor
xchg
inc
das
gs
pop
test
xor
fwait
pop
nop
sbb
movsb
call
and
dec
das
cmp
adc
stc
sti
das
shl
cld
inc
repz
cmp
inc
pop
insb
rclb
dec
dec
insl
loop
shll
movsb
jae
add
add
out
fwait
in
sbbl
insl
mov
push
pushf
dec
adc
xchg
dec
pop
push
mov
jmp
dec
ds
mov
dec
mov
test
mov
sar
pop
inc
jecxz
scas
cmp
ja
cld
ds
shrl
jecxz
pop
inc
xor
sub
sbb
cmp
mov
mov
push
add
and
sub
jmp
mov
data16
jns
sub
jo
fs
and
and
lret
imul
jmp
mov
cmp
hlt
jp
sub
dec
rcrb
pop
je
cmp
ret
cmp
xchg
push
gs
sub
mov
loop
lcall
call
cmp
shll
inc
int
fs
sbbl
xor
fildll
outsl
push
aas
jmp
mov
out
pusha
inc
push
dec
popa
pop
mov
add
sbb
scas
pop
jae
jno
add
cmpsl
and
push
movl
xchg
pop
xorl
daa
mov
ja
jcxz
adc
and
push
movl
xchg
pop
xorl
daa
mov
ja
jcxz
pop
xchg
xlat
push
sub
ja
arpl
xchg
pop
xchg
mov
stos
push
xlat
inc
ret
ja
popw
xchg
testl
inc
div
out
pop
insb
pop
sub
stos
iret
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
sub
push
pop
sbb
pop
ja
add
add
add
pop
or
add
push
add
add
mov
add
add
add
add
add
add
sub
add
add
and
lea
mov
aad
dec
add
add
sub
lea
push
add
rolb
add
add
add
add
outsl
add
or
add
add
add
add
add
mov
inc
add
add
add
add
add
or
adc
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
mov
lea
leave
add
add
mov
xor
cwtl
add
add
addl
add
add
add
add
add
aad
dec
add
add
sbb
sbb
adc
pop
add
add
add
add
add
add
add
add
add
nop
add
movsb
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
pop
add
add
add
popa
add
icebp
add
add
add
push
add
add
add
add
add
add
push
cwtl
add
rolb
add
rolb
add
add
add
add
add
add
add
sbb
pop
add
push
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
push
add
add
nop
add
add
add
add
test
dec
add
add
push
add
jmp
roll
cwtl
add
push
mov
add
pop
add
add
add
add
add
cmp
or
add
push
lret
add
add
add
add
add
add
add
add
add
add
add
fldl
nop
add
add
inc
add
add
cs
add
add
add
fiadds
pop
add
add
add
add
push
add
outsb
add
add
add
add
add
mov
adc
jg
fldl
sbb
dec
add
inc
add
add
push
pop
or
addb
add
add
add
add
add
ja
mov
out
add
add
add
add
push
aaa
add
add
fldl
roll
dec
add
xor
out
add
add
add
push
add
add
add
add
add
add
add
add
add
add
jg
push
add
test
dec
add
movsb
add
add
add
add
add
add
jnp
push
add
add
add
add
add
add
add
add
sub
add
mov
add
add
or
pop
add
ljmp
add
push
push
add
lea
sbb
stos
add
sti
add
sub
fiaddl
lock
add
add
add
out
push
cmpsb
jbe
inc
add
cmp
cmp
es
or
adc
push
js
jp
in
xor
inc
mov
jge
dec
or
aad
jbe
push
push
out
or
movsl
cmp
add
push
mov
mov
xlat
or
jg
pushf
xchg
lret
scas
and
jns
outsl
movsb
aas
xor
adc
daa
mov
hlt
and
jl
sbb
or
xor
into
push
add
add
add
push
pop
push
mov
mov
jno
loopne
mov
xchg
testb
movsl
lea
sbbl
xor
into
movsl
jl
pop
mov
mov
cmp
aaa
jp
sub
in
mov
inc
push
out
ja
lret
dec
leave
into
sar
or
jecxz
mov
cmp
push
dec
mov
push
int
mov
aam
mov
stos
data16
out
push
fprem1
dec
add
mov
cwtl
mov
fmuls
sub
jle
stc
mov
popa
fdivrl
pop
or
mov
jp
sub
jns
pop
add
negb
sbb
xchg
ss
lds
xchg
enter
daa
push
iret
adc
jno
bound
dec
fsubs
mov
xchg
pop
out
push
adc
fiadds
push
inc
adc
loop
xor
aam
mov
pushf
adc
mov
aam
sub
push
aad
fisubrs
jg
sbbb
mov
leave
sahf
inc
and
mov
scas
sbb
out
xchg
daa
cmpl
xchg
adc
xchg
pop
jmp
jge
test
cmpsb
insb
ret
mov
xchg
mov
ret
cwtl
mov
sub
xchg
push
iret
loop
sub
pushf
mov
add
push
xor
jge
out
inc
lret
es
sbb
shrb
jg
adc
lret
xor
mov
adc
mov
inc
ds
inc
das
mov
movsl
sbb
and
je
xchg
popa
push
mov
push
cwtl
dec
push
addr16
push
dec
popl
out
push
lods
cltd
cwtl
fadd
arpl
dec
roll
js
mov
push
ss
ja
mov
in
imul
jl
dec
cmp
lock
inc
aam
shrl
mov
push
dec
into
cmpsb
add
jmp
dec
dec
mov
adc
dec
into
scas
cld
out
repz
aad
out
enter
mov
mov
mov
es
enter
mov
mov
stos
or
mov
cmc
xchg
sar
mov
fbld
mov
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
