repz
add
add
add
add
addr16
mov
hlt
fisubl
sub
ret
jne
jnp
cmp
cmpsb
es
mov
pop
scas
call
mov
add
pop
ss
push
pop
add
add
cmp
fcomi
xchg
rol
out
call
mov
leave
je
mov
pop
push
cmpsl
aam
mov
add
inc
sbbl
cmp
fistps
cmp
leave
mov
jge
push
mov
jae
mov
lds
fidivs
test
andl
and
cld
sub
mov
rorb
xchg
or
mov
sub
jnp
ffree
mov
add
aad
add
cltd
in
push
sub
insb
sub
pop
sub
test
cmpsl
hlt
mov
iret
and
or
jae
std
sub
fdivl
cwtl
xchg
test
lcall
into
dec
dec
cs
jbe
outsl
or
add
fildl
inc
jnp
loop
jns
jl
xor
repz
test
mov
fistps
mov
sahf
adc
push
aam
ret
sub
cmpsb
jecxz
xchg
sbb
movsl
test
cmpsl
mov
lds
js
icebp
push
idiv
out
sub
sahf
das
mov
aaa
icebp
lahf
jno
neg
and
push
xchg
movsl
test
hlt
fstl
adc
xchg
dec
fcomps
xchg
lret
notb
shlb
es
mov
enter
xchg
push
mov
sub
cmp
inc
xor
bnd
pop
dec
add
lds
and
xor
sbb
in
sti
pop
jns
into
xchg
mov
loope
cmp
cli
aad
fcomps
faddl
scas
lcall
ljmp
out
test
jp
jno
pop
pushf
lods
xchg
lahf
hlt
out
imul
inc
inc
jg
jmp
add
lcall
mov
push
sbb
mov
adc
leave
dec
add
inc
xchg
in
inc
xor
push
ljmp
rolb
movsl
addb
dec
xlat
mov
orl
sub
jae
sahf
xor
lock
sub
ret
mov
adc
fwait
push
inc
enter
test
lds
inc
out
mov
pop
scas
insb
xor
push
mov
jo
jnp
daa
mov
icebp
js
sbb
les
stc
fmulp
enter
sbbb
or
inc
adc
push
xor
pop
sub
mov
xchg
push
push
mov
xor
push
in
fst
stc
adc
mov
orl
adc
xor
aaa
aam
or
inc
cmpsl
xchg
mov
push
fcomps
mov
sarl
xchg
mov
sbb
jp
stos
cltd
mov
cmp
sub
push
mov
testb
mov
sub
out
sbb
ljmp
mov
sahf
in
jmp
stc
push
adc
pushf
xor
push
mov
jle
or
js
dec
arpl
rcr
sbb
aaa
arpl
jmp
cs
mov
mov
std
cld
pop
pop
and
mov
cmpsl
inc
dec
loopne
mov
in
stc
or
jb
mov
cmp
test
loope
sar
aas
lods
insb
sub
mov
enter
or
ljmp
pop
rcl
sub
inc
adcl
push
int
inc
leave
addr16
icebp
push
cs
xor
int
or
pushf
outsb
pop
ljmp
dec
dec
dec
gs
pop
mov
mov
xor
imul
idivl
mov
loop
sbbb
adc
adc
popa
call
mov
daa
test
cwtl
int3
inc
mov
cmp
or
mov
mov
sub
dec
sub
adc
mov
sbb
inc
jmp
xchg
inc
lock
enter
scas
push
movl
mov
inc
fildll
int
mov
push
xor
rcll
fnstsw
sub
sbb
mov
push
loopne
push
push
addr16
push
gs
lret
aad
xor
or
stos
mov
push
dec
ss
dec
xchg
jbe
rolb
cwtl
out
and
add
jno
adc
lds
push
in
test
cmp
jns
mov
adc
jb
sub
fucomip
lods
mov
pusha
ds
outsb
jns
scas
adc
adc
pushf
or
mov
or
loope
jmp
jmp
out
outsb
lcall
inc
mov
push
outsb
xchg
sub
push
mov
aam
outsl
mov
jle
or
jg
xor
lret
xchg
pop
adcl
cmp
pop
or
into
addl
cmpsl
ds
xchg
lock
pop
push
mov
inc
push
dec
mov
rcrl
jge
jge
pop
jns
rorb
or
adc
decl
mov
std
jnp
cwtl
add
jle
pop
out
jno
imul
xchg
enter
cmp
pop
mov
jle
sub
pop
inc
push
mov
insl
mov
loop
mov
test
adc
divb
ficomps
jns
adc
in
loope
jae
loope
lret
les
pop
outsb
jge
stos
mov
sub
jp
pop
fsubp
pop
lds
cmp
movsb
cwtl
push
mov
xchg
add
mov
jbe
imul
and
mov
or
jle
inc
cmp
mov
stos
push
shrl
pushf
jns
xor
lret
mov
in
iret
inc
xor
lods
subl
loope
lea
sti
mov
lds
jle
andb
iret
lods
add
xor
mov
dec
jne,pt
xlat
lds
cmpsb
push
xorl
push
xchg
repnz
ss
or
dec
jg
push
int
test
cltd
outsl
or
mov
shlb
stc
dec
xchg
inc
mov
xlat
jb
dec
cmp
aaa
push
jno
test
sbb
inc
push
inc
loop
stos
adc
add
subl
aas
inc
rcl
ljmp
mov
lds
in
xor
repz
jp
mov
mov
inc
popf
inc
mov
pop
mov
sarb
imul
sbb
and
jbe
sbbl
insb
scas
fists
je
in
xchg
push
mov
xor
and
ret
cmp
cmpsl
pop
mov
jle
mov
dec
cmp
inc
sti
mov
mov
pop
int
pop
in
movl
or
enter
mov
jl
mov
inc
cld
ss
insl
mov
adc
imulb
sbb
push
faddl
dec
dec
mov
cmp
xchg
mov
mov
clc
jmp
mov
mov
push
mov
in
insb
sbb
int3
dec
in
cld
xchg
lret
jae
mov
cmp
inc
mov
lds
leave
mov
sub
or
or
ficomps
xor
fwait
inc
mov
into
or
pop
filds
fstpt
popa
mov
movsb
hlt
adcl
xchg
push
push
or
inc
out
mov
sub
lea
scas
jbe
in
cli
mov
rclb
cmpl
lea
jne
xchg
adc
jne
xchg
pop
loope
lds
scas
sub
lods
fwait
or
fstl
push
mov
mov
addl
jae
and
shll
mov
mov
pop
jne
out
lods
jnp
adc
movsl
hlt
xchg
sbb
inc
jns
sbb
mulb
cs
jg
in
es
mov
mov
mov
xorl
scas
enter
or
add
notb
stc
and
ljmp
jb
xlat
and
mov
pop
xor
adc
fsubl
or
adcl
jae
sbb
jnp
sahf
loopne
jbe
pop
mov
jb
mov
rol
push
popf
lea
pop
aas
xor
adc
outsb
xchg
in
sti
push
inc
iret
int
pop
lret
test
mov
mov
mov
pop
arpl
adc
inc
lahf
push
fnsave
adc
aaa
fstpt
imul
scas
push
dec
popa
sbb
cmp
pop
lcall
lods
mov
dec
adc
das
or
scas
mov
loope
daa
jle
mov
loope
aam
scas
jle
fidivs
xchg
call
stc
inc
push
or
repnz
sti
adc
movhps
add
push
xchg
sbb
jmp
stc
sub
test
fcomp
pop
ret
loopne
in
insl
push
mov
mov
inc
pusha
and
cmp
jg
add
push
xor
jle
test
cmpsl
push
mov
or
push
mov
jl
xor
add
adcb
loope
addb
insb
mov
adc
into
inc
fimuls
shll
pop
daa
hlt
pop
shll
dec
jl
xchg
mov
cmc
sbb
xorl
bound
fs
cmpsl
or
add
cmp
dec
ss
jecxz
es
test
mov
push
mov
cmp
mov
and
repnz
cmpsl
mov
xor
inc
xchg
push
inc
ss
xor
and
mov
enter
or
sbb
daa
or
mov
push
or
jne
mov
stos
xchg
add
mov
je
push
adc
jp
mov
jecxz
rorb
mov
push
inc
mov
std
popa
or
rclb
das
sbb
call
cli
test
loop
mov
test
aas
cmp
dec
movsl
adc
repz
pop
in
lods
xchg
mov
mov
es
mov
push
xchg
adc
cltd
sbb
mov
dec
mov
add
sub
mov
call
out
jo
sbb
lcall
rolb
jbe
aas
cmp
push
or
add
in
jo
fcoml
fcoml
gs
push
clc
bound
mov
inc
out
pop
jle
push
push
dec
loope
fnsave
inc
out
fnsave
dec
mov
add
in
sbb
lret
data16
mov
mov
push
enter
push
sub
movsb
mov
push
jp
test
push
shlb
cmpsb
insl
mov
imul
mov
shrl
aam
cmc
mov
mov
inc
pushf
aas
iret
mov
fisttpll
jns
cmp
xchg
int3
test
adc
iret
xor
je
ret
imull
jmp
mov
adcl
add
shlb
aaa
push
sbb
mov
in
daa
stc
xor
or
inc
fdivrs
jbe
mov
ret
xchg
test
cmpsl
pop
and
jmp
adc
loop
xchg
mov
mov
shlb
inc
pop
push
test
fdiv
mov
mov
in
jno
les
outsl
hlt
push
xlat
stos
pop
xor
ficomps
add
shll
ja,pn
mov
enter
call
jne
push
test
sbb
xor
sub
add
scas
inc
mov
cmp
lea
mov
jbe
out
adc
jnp
mov
repnz
xchg
jl
inc
inc
cmp
call
insl
dec
xor
mov
mov
and
js
adc
push
addr16
outsb
adc
pop
jae
lds
jnp
inc
idivb
and
mov
cmp
insb
out
or
and
dec
fwait
enter
bound
push
mov
stos
lea
cmpsl
mov
rcll
mov
cmp
loopne,pn
cwtl
adc
jl
test
out
mov
lcall
xchg
push
mov
ret
adc
sahf
fnsave
jle
rcr
lock
add
lock
xor
rorl
inc
ret
push
xor
lods
into
cmpsb
adc
fldcw
sahf
push
gs
pop
push
stc
push
jge
cmovne
pop
test
loopne
fnstsw
test
push
mov
xor
sub
inc
adc
xor
pop
push
mov
jl
fwait
int
popf
xor
mov
cmpsl
in
adc
movsl
int3
xor
xor
sbb
cmp
mov
jno
jge
push
lcall
inc
call
push
popa
iret
ja
sti
lahf
repnz
mov
and
stos
ds
inc
adc
shr
int
and
inc
jnp
push
xchg
sbb
cmpsl
rorl
jecxz
sbb
jmp
test
and
inc
jb
ret
xchg
xor
mov
out
sbb
mov
and
inc
loopne
shlb
cmpsb
test
ficomps
jns
ret
mov
xor
mov
std
push
mov
xor
out
sbb
adc
shrb
cmpsl
jno
push
cmp
push
data16
insl
loopne
push
jae
xchg
popa
rclb
jns
add
les
pop
das
dec
mov
mov
jns
fidivs
test
cmp
push
jmp
cmpsl
aaa
jp
cmpsl
aas
in
mov
mov
push
pop
lret
pop
inc
mov
and
jae
mov
das
stos
cmpb
nop
loopne
iret
icebp
sbb
jmp
clc
cmp
mov
push
inc
idivl
lds
pop
jnp
popa
mov
inc
mov
sbb
and
scas
jmp
push
aaa
xchg
ret
aam
xchg
pop
outsb
test
aam
pop
lock
lea
stos
fidivrs
or
cmc
dec
adc
cltd
ret
jno
jne
mov
sub
sqrtpd
mov
mov
out
aam
mov
bound
sbb
inc
lea
push
mov
cmp
mov
in
jmp
jge
xor
fbstp
sbb
sub
mov
jo
jb
xchg
jecxz
js
and
fcompl
mov
in
lock
push
mov
mov
pop
testb
inc
dec
ret
insl
in
insl
arpl
xor
jnp
xor
lea
test
outsb
insb
insb
mov
pop
cwtl
in
rol
cmp
aam
jg
pop
mov
call
cltd
repz
enter
sbb
lahf
call
jecxz
cmc
push
mov
in
or
mov
sbb
sbb
rcl
imul
push
inc
popf
jne
sarb
xchg
stos
push
mov
andl
mov
add
fimuls
lahf
addr16
and
sbb
jnp
cmc
dec
mov
repnz
mov
in
rcl
xchg
mov
jmp
mov
jae
enter
outsb
ret
push
daa
jp
push
pop
or
mov
icebp
cmpsl
xor
pop
pop
dec
mov
cli
out
cmp
mov
cmp
daa
sarb
sub
push
cmpsl
push
mov
push
les
incb
adc
pushw
nop
pop
cmp
ficoml
mov
adc
rolw
je
gs
inc
in
push
je
gs
repz
sti
movsl
std
xchg
js
cmp
mov
or
scas
push
int
idivl
addr16
cmp
cmp
out
push
leave
sar
xchg
xor
sbb
scas
in
mov
arpl
sub
mov
insl
adc
hlt
sbb
jnp
stc
xchg
adc
xor
jne
ret
sub
insb
pop
pop
shlb
cli
out
cmpb
adc
shlb
mov
mov
dec
adc
mov
fs
adc
xor
pop
lods
insb
out
cmp
outsb
xlat
adc
dec
inc
fistl
negl
std
loope
adc
jne
pop
add
cli
push
push
adc
roll
adc
dec
dec
fsubl
mov
test
mov
addb
push
pop
test
sbb
adc
pop
or
push
fistps
adc
sbb
inc
jne
xorl
mov
xchg
mov
cmp
mov
push
lahf
fcoms
dec
push
sbb
int3
fists
test
xchg
add
bound
imul
outsl
cmp
loope
pop
cltd
popf
ljmp
xor
mov
or
mov
mov
cwtl
and
dec
std
sti
imul
in
mov
movsl
pop
mov
inc
and
add
test
jae
push
or
fnsave
cld
imul
jle
adc
lods
jg
fwait
lock
mov
icebp
dec
mov
stos
or
ja
xchg
out
mov
jno
leave
dec
inc
or
jne
icebp
xchg
add
mov
stos
movsl
rolb
pop
cmp
mov
or
and
dec
movsl
das
scas
loopne
pop
pop
jmp
cmp
insb
lods
xchg
aam
mov
push
sbb
sub
xchg
insb
rclb
sub
cltd
icebp
ss
push
pop
sbb
cmp
or
lock
lods
sbb
ss
xchg
mov
mov
adc
xchg
cmp
mov
xor
and
incl
jns
dec
lahf
or
inc
stos
es
and
xchg
fs
imul
stos
mov
mov
pop
fisttpl
aas
dec
sub
test
mov
pusha
add
in
pop
jp
test
or
fisubrs
push
lea
ret
inc
lods
lret
dec
and
pop
outsl
arpl
adc
lcall
mov
inc
inc
mov
push
xchg
sbb
sub
dec
je
lret
dec
aad
hlt
sbbb
cmp
std
cmp
aaa
cmp
sbb
jne
xchg
loop
fwait
les
cmp
pop
mov
pop
scas
push
push
xor
addl
std
or
mov
dec
mov
out
adc
andb
jae
inc
jp
adcl
pop
xlat
jmp
mov
pop
xor
xchg
push
sbb
fldl
loope
dec
sbb
push
or
dec
call
mov
or
adc
mov
xor
inc
test
cpuid
and
adc
mov
xor
xlat
loopne
sbb
mov
inc
mov
and
jae
jb
mov
aad
lds
xchg
enter
out
stos
iret
inc
or
add
jmp
pop
jno
mov
jb
fiadds
pop
cmc
ret
xor
push
sbb
outsb
sub
xchg
sub
mov
pop
std
movsb
pop
xchg
mov
sub
sbb
into
sbb
or
ja
cmc
pop
fcmove
sti
push
push
faddp
loopne
sarb
dec
sub
std
lahf
cmovae
sub
xchg
jne
pop
cmp
xchg
inc
icebp
cmpsb
aam
mull
pop
in
jmp
or
movsl
les
mov
out
pop
xor
cmc
cmpsl
sub
inc
xchg
mov
ds
out
lock
data16
mov
cli
jl
arpl
jns
arpl
xor
fildll
enter
xor
cltd
subl
gs
cmp
xchg
and
mov
fwait
push
cli
test
push
imul
push
mov
loopne
call
mov
jle
mov
sbb
push
adc
push
push
sbb
fistl
imul
out
into
mov
mov
mov
push
fnstcw
rolb
cld
ret
fiadds
subb
mov
iret
jecxz
mov
mov
enter
popf
mov
dec
jae
ja
repz
int
lock
loopne
cmp
inc
sbb
lock
imul
imul
fistpll
cmc
xchg
xor
negl
adc
cli
and
test
pop
addr16
pop
call
pop
cmp
dec
push
je
sbb
addr16
cmp
push
or
jmp
cmp
dec
pop
je
test
dec
fs
popa
pop
repz
sbb
mov
leave
xor
pop
mov
add
add
add
sbbb
sub
cld
or
xchg
jle
addr16
pop
mov
rcr
scas
test
leave
mov
leave
dec
es
mov
cmp
xchg
lock
enter
lds
inc
mov
xchg
mov
adc
aam
push
add
dec
cmp
mov
xchg
insl
push
shlb
mov
test
lcall
jge
loopne
jle
pusha
mov
adc
aaa
pop
rcrb
hlt
fwait
inc
cwtl
pop
jecxz
mov
jno
adc
imul
adc
xor
test
sub
jge
add
push
inc
lods
stos
mov
jo
sbb
push
loopne
aad
add
movsb
push
sbb
adc
xor
xchg
lret
pxor
aam
jp
or
mov
xchg
sbb
movsb
mov
mov
sahf
lock
adc
int
aas
push
cmp
push
push
scas
iret
rclb
movsl
xor
xchg
lods
mov
loope
adc
loope
jecxz
mov
pop
mov
push
insb
jge
rcrb
xor
push
cwtl
cli
add
movsb
push
inc
jo
mov
sub
jb
add
add
jnp
push
hlt
loope
popa
jno
mov
idivl
fistpll
jo
mov
out
loopne
outsb
lret
xor
or
dec
mov
push
sub
into
stos
inc
ret
sbb
inc
es
xor
sub
adc
add
pop
dec
xor
dec
or
bound
sub
or
cwtl
ss
pop
mov
push
mov
out
lock
fnsave
fnstenv
push
jbe
add
jnp
mov
sbbl
jge
lret
dec
mov
jnp
and
xchg
adcb
add
mov
pusha
mov
mov
dec
rol
sub
mov
fnsave
pop
lahf
aam
hlt
mov
inc
xchg
mov
cltd
subb
push
movsl
add
cmpsl
xchg
pop
push
sub
and
aaa
mov
xlat
mov
out
mov
push
jbe
add
inc
cmc
push
mov
sbb
sbb
pop
cli
test
adc
icebp
or
add
pop
add
dec
sub
cwtl
cmpb
dec
testb
and
push
loop
cli
shll
in
icebp
mov
or
lret
nop
ljmp
push
aad
cmp
and
inc
out
mov
out
dec
je,pn
xchg
in
inc
gs
cmp
jb
cmpsb
sub
inc
jo
xchg
and
mov
daa
push
rcrl
int3
pop
fdivrs
xor
and
loop
sub
sub
inc
sub
cmc
movsb
btr
and
mov
sub
sub
fbstp
into
rorb
movsb
jb
int3
mov
divl
jbe
push
inc
fdivrp
ficoml
jns
insb
mov
ja
inc
sbb
rolb
movsb
aam
mov
nopl
sbb
jne
leave
icebp
adc
lds
xorl
das
lods
cmpl
insl
jnp
cmp
repz
pop
rol
mov
je
mov
push
shlb
push
cltd
shrl
jle
and
xchg
outsl
aaa
negb
loopne
popf
mov
lcall
out
jecxz
fnstsw
push
pop
ret
add
out
inc
or
jg
or
push
mov
xchg
outsl
jl
mov
mov
cltd
cs
insb
outsl
mov
jb
sbb
inc
pusha
popl
mov
test
xchg
int3
mov
push
pusha
jns
xchg
aas
or
cmp
ror
or
leave
mov
daa
inc
mov
scas
ljmp
xchg
mov
mov
mov
push
adc
in
sarb
aaa
dec
xor
hlt
adc
mov
int
cs
sarb
jbe
gs
outsl
test
pop
dec
mov
iret
push
inc
aam
jno
scas
out
scas
or
jmp
mov
and
xchg
mov
sahf
addr16
pop
outsl
dec
pop
lret
idivl
cmc
bound
pop
andb
xchg
add
or
fbld
and
seta
mov
cmp
mov
rcrb
ja
inc
sub
rorb
mov
adc
cmp
aaa
inc
sub
mov
imul
xor
jo
pop
into
mov
clc
add
sarl
loope
adc
lea
faddl
xchg
shlb
adc
push
jg
sbbl
je
fimuls
idiv
or
insl
inc
jp
out
inc
daa
in
jg
fcomi
cmp
adc
sti
aas
sbb
imul
cmp
pop
inc
pop
cmpl
push
sub
xchg
leave
or
jge
subl
xchg
mov
cmp
lcall
xchg
push
pop
aad
xor
cwtl
cmc
mov
cmp
add
pop
pop
call
sub
push
mov
or
enter
jnp
aas
push
aaa
mov
ror
jnp
jl
ret
in
add
popf
push
mov
pushf
cwtl
filds
sub
and
lods
add
dec
pushl
jecxz
bound
jno
rcrl
sbb
movsl
arpl
jno
xor
fwait
push
icebp
rorb
jb
les
pop
outsb
xchg
jge
and
push
icebp
jo
inc
jecxz
sbb
mov
je
cmpsl
inc
sub
push
movsl
mov
iret
ret
lds
inc
and
insb
repz
fstps
push
lret
mov
movaps
pop
sub
sub
cmc
mov
fs
ss
push
out
jge
orb
and
dec
out
xchg
fs
and
rolb
ss
das
pop
mov
stc
or
in
inc
push
mov
in
fs
cmpsl
pop
mov
sub
daa
pusha
pop
addb
iret
mov
fdivl
cmp
leave
stc
lret
inc
vmovd
mov
cmp
sub
dec
lcall
mov
mov
out
mov
arpl
mov
lret
movsl
icebp
jmp
repnz
dec
in
faddl
inc
lock
fsubl
cmp
mov
sahf
fisttpll
add
xchg
cld
nop
lcall
mov
call
scas
cmp
fadd
repnz
cmp
or
lods
repz
mov
in
pop
pusha
pop
lret
push
sbb
and
mov
loope
mov
lods
sahf
jno
jle
push
ret
fsubrl
repz
add
mov
and
imul
fdivrs
jbe
inc
addl
scas
lret
roll
outsl
push
and
pop
dec
push
leave
push
dec
add
inc
lods
icebp
loop
aas
sbb
sbb
ss
sub
cmc
cltd
add
jb
sti
inc
or
lock
and
sti
push
insb
sbb
je
ret
or
cmp
jg
scas
push
xchg
cs
push
or
rcrb
sti
xorb
dec
mov
das
adc
add
call
adc
push
clc
lds
jge
jmp
xor
jne
mov
inc
test
lahf
jnp
fiaddl
dec
icebp
dec
mov
loop
dec
sbb
gs
cs
dec
data16
mov
mov
push
xor
stos
je
mov
inc
cmc
js
sub
testl
sti
repnz
shrb
aam
test
cmp
icebp
out
xor
sbb
loopne
mov
lcall
cli
pop
or
test
adc
sub
pop
mov
cmp
push
inc
shlb
outsl
push
bound
mov
cmp
imull
clc
incl
rcl
sbbb
jae
sub
es
gs
lret
ds
cmp
mov
push
repnz
in
lret
xchg
dec
pop
xchg
cmpsl
cli
jnp
jp
or
add
nop
jne
jge
stc
mov
lret
xchg
stc
je
sbb
cli
adc
add
insl
cmp
ljmp
pusha
adc
xlat
pop
xlat
bound
cld
rol
lods
xor
hlt
pusha
push
sbb
lret
mov
fadds
jmp
mov
fs
add
dec
pop
in
js
into
pop
jge
sbb
or
addl
mov
xor
fnstcw
shrb
andb
sub
dec
stos
and
rclb
mov
das
jbe
icebp
xor
int
rorl
scas
sahf
cmp
mov
repz
jecxz
outsl
std
adc
xorb
aam
jbe
jmp
mov
mov
push
gs
mov
data16
mov
lods
pusha
cli
lods
fwait
cmpsl
mov
pop
jbe
scas
andl
leave
xchg
jo
cwtl
and
outsb
push
and
mov
outsl
fdivrs
mov
int3
pop
aaa
push
adc
jno
sahf
mov
ficoml
ljmp
je
test
or
adc
subl
outsb
xor
lock
xchg
test
ret
sub
cmp
testl
or
adc
ja
sub
jmp
dec
popf
fistpll
sbb
cld
shll
push
in
mov
shlb
pop
push
jnp
out
push
xchg
xor
jae
out
inc
push
aas
out
rclb
push
adc
inc
je
mov
inc
cmp
cli
addl
lahf
mov
lahf
xchg
stc
mov
lods
mov
inc
xlat
dec
push
int3
sub
xchg
stos
sbbl
hlt
je
icebp
dec
bound
and
cmp
std
repz
insl
dec
movb
xlat
nop
xor
push
aas
or
lock
or
lret
outsb
in
or
divl
js
mov
or
ja
stc
int
loop
lock
test
imul
arpl
push
mov
in
outsb
pop
pop
gs
add
xchg
xor
popl
mov
fs
xchg
int3
sub
push
push
cmc
sub
out
test
jne
test
push
loopne
aas
and
lret
dec
push
xor
xchg
jp
insb
leave
scas
mov
adc
frstor
sbb
push
sub
nop
jge
mov
pop
jge
ss
je
and
out
test
cs
loop
inc
sub
icebp
xor
repz
push
imul
ds
scas
lods
test
jno
mov
test
test
int
mov
and
mov
popa
test
daa
cli
aad
push
shufps
and
or
bound
or
dec
incb
jae
cmp
hlt
jmp
nop
in
out
or
jl
xchg
sub
jne
add
xor
or
ljmp
scas
iret
xchg
and
xor
mov
add
es
pop
stc
pop
cmp
pop
cmp
test
push
mov
add
mov
shlb
arpl
inc
in
sbb
cmp
mov
xchg
lea
daa
or
test
cmc
mov
xor
and
inc
pop
pushf
add
or
inc
movsb
dec
mov
sbb
imul
ret
out
inc
xchg
cwtl
mov
sbb
gs
sbb
imul
push
subb
pop
test
xorb
jno
stos
xor
lcall
mov
jae
bnd
or
movsb
mov
cltd
add
in
mov
jg
repz
stc
mov
push
lock
cwtl
fiaddl
push
jne
add
inc
div
shl
sub
sub
push
sahf
outsl
sbb
push
movsb
scas
lahf
mov
xchg
xlat
stc
lcall
inc
sti
sub
orl
pop
popf
lea
and
shll
mov
lret
xor
jp
test
mov
arpl
dec
aaa
adcl
sbb
adc
mov
mov
cmp
sub
jecxz
imul
add
fnstcw
ret
fistpll
xchg
or
in
stos
jae
sbb
jle
push
test
out
mov
stos
loope
orb
movsb
cmpsl
roll
lods
or
in
pop
sbb
lea
scas
in
mov
pop
jle
divb
sbb
xchg
das
sbb
aas
push
cli
xchg
adc
fbld
sti
mov
outsb
aam
mov
jae
xchg
add
aad
mull
push
pop
sub
push
sbb
pop
xchg
test
daa
sbb
data16
movsl
inc
in
mov
loop
and
sahf
or
insl
cmp
mov
repz
dec
inc
jg
shlb
cltd
or
cmpb
fwait
xchg
aam
ljmp
pop
lea
or
mov
push
int3
push
mov
jle
xchg
scas
sti
and
sub
jae
mov
and
mov
sti
jb
add
fdivl
dec
mov
jmp
cmp
out
mov
add
mov
test
add
cli
imul
pop
cmpsb
fistpl
xchg
hlt
or
in
cmp
sti
repnz
mov
loope
stc
test
test
les
rclb
xchg
lcall
mov
movsb
xchg
inc
arpl
push
movb
iret
adc
fwait
imul
xlat
cwtl
inc
test
rorl
cmp
adc
aad
push
sbb
imul
adc
mov
les
xor
aas
push
add
loopne
add
shrb
push
cmp
mov
xor
cmp
enter
mov
push
aad
loope
mov
lcall
add
push
mov
push
das
sbb
pop
adc
clc
inc
mov
lahf
jl
dec
sbb
sbb
dec
inc
push
mov
pop
mov
xchg
cmp
xchg
jecxz
addl
imul
ljmp
pop
adc
push
lock
movsl
insb
jo
out
out
sahf
cmp
in
xchg
jnp
cmc
mov
int3
cmp
pusha
arpl
jge
movsb
jg
cmp
jl
repnz
clc
mov
lret
lods
js
insb
inc
jbe
xor
push
inc
jo
or
cld
jae
mov
lock
std
sbb
je
xor
out
rclb
cmp
hlt
sbb
lcall
std
mov
mov
mov
imul
add
and
addr16
adc
xchg
dec
mov
sub
mov
add
scas
shl
or
dec
cmpsl
arpl
sub
cmpsb
mov
or
cmc
scas
sbb
insl
xchg
aas
inc
lret
jp
pop
cwtl
and
jmp
xchg
adc
xor
dec
mov
mov
push
and
jecxz
cmc
pop
and
pop
jge
fcmovnb
test
iret
cmc
ja
push
mov
mov
cmc
test
push
pop
repz
f2xm1
inc
jmp
fbld
into
int
dec
pop
xchg
popa
cmc
stos
into
mov
scas
mov
pop
adc
and
movsb
mov
add
xchg
movl
sbb
dec
fwait
adc
in
sbb
sbbl
gs
pop
adc
xor
xchg
inc
push
stc
pushf
or
sbb
mov
or
lret
decl
in
lret
mov
mov
adc
push
jle
cmp
jo
gs
inc
pop
push
inc
stc
and
jle
shlb
mov
bound
jmp
xor
data16
inc
sbb
jnp
cmc
mov
ja
bnd
fiaddl
lds
adc
adc
pop
and
mov
outsb
sbb
std
test
mov
adc
add
dec
cwtl
mov
jb
enter
mov
dec
loopne
outsl
imul
mov
shrl
int
clc
sbb
insb
sbb
fdiv
in
sub
or
test
or
cmc
dec
xchg
xor
imul
or
std
repz
sub
jecxz
loop
adc
pop
bound
or
aam
icebp
leave
lock
cmp
inc
cli
aaa
pop
lods
stos
jno
sbb
mov
pop
jbe
sub
or
push
sbb
xchg
xor
jmp
adc
sbbl
xchg
cmp
cli
xor
mov
dec
or
xchg
ret
sbb
xchg
xchg
sbb
cs
mov
mov
movsb
sbb
in
and
push
cmp
je
lods
mov
xchg
stos
out
xor
cmpsb
push
xchg
rclb
inc
sbb
lahf
or
push
ret
pop
scas
repnz
add
mov
and
dec
jecxz
mov
addr16
scas
or
mov
in
adc
ficompl
mov
sub
or
mov
or
mov
sbb
push
xlat
mov
push
jns
aaa
xchg
ja
enter
mov
fcomps
or
mov
inc
fcmovb
adc
or
add
inc
cmpsl
clc
xchg
inc
rol
repnz
pop
lods
sub
aas
stos
je
mov
push
add
cs
pop
cmp
xor
insl
mov
ret
mov
mov
cltd
sbb
jns
jbe
jne
sub
xchg
inc
xlat
sbb
aam
inc
mov
mov
push
lret
inc
sarl
repnz
push
cs
scas
in
mov
inc
aaa
jge
pop
incl
enter
insb
cwtl
ret
dec
mov
cmc
jnp
mov
mov
pop
jne
pop
rcrb
testb
mov
mulb
iret
ds
sub
in
rcrb
xchg
test
stos
mov
inc
xchg
inc
enter
dec
push
mov
cltd
movb
fsts
add
es
shll
jae
or
aaa
loope
sarb
aad
xlat
outsb
mov
negb
sarb
fcompl
mov
outsl
push
sbb
sti
stos
fmul
out
mov
mov
dec
clc
movsl
iret
into
pushw
sbb
sub
dec
ds
int3
xlat
js
outsl
mov
cmpl
aas
fwait
xchg
jae
sbb
jb
inc
sub
jo
push
mov
addb
cmp
mov
sbb
mov
adc
xor
lret
push
cli
sarb
jbe
xor
rcrb
dec
xlat
mov
sarl
add
jmp
movb
frndint
insb
nop
mov
sub
mull
fldenv
pop
mov
fadd
outsl
int
xor
and
addl
cli
sbbl
mov
out
in
in
fiadds
jb
inc
stc
inc
push
xor
sahf
cmp
movsbl
popa
pop
ror
fwait
mov
cltd
or
inc
sub
test
fsubrl
rol
out
daa
stos
dec
push
rorl
dec
jns
pushf
mov
cmpsb
int
idiv
adc
dec
inc
jnp
add
ljmp
push
fistps
jp
dec
xor
jg
and
addl
and
gs
lret
movsl
cmpb
cltd
insl
or
dec
push
pop
jecxz
jecxz
enterw
jecxz
leave
mov
xor
xor
fucomp
or
and
inc
adc
fisttpl
or
inc
leave
es
pop
fldcw
mov
mov
cmp
sbb
out
cltd
test
mov
int
mov
ffreep
push
and
out
movsb
dec
mov
adc
test
jmp
pop
jno
mov
xchg
ja
mov
or
ret
daa
in
jns
out
in
jbe
les
and
pop
addr16
idivb
in
add
loope
pxor
cld
dec
idivl
jg
ds
lcall
mov
jl
into
outsb
adc
lods
fnsave
pop
ljmp
push
mov
aaa
outsb
stos
outsl
daa
stos
sbb
push
sub
mov
jae
mov
test
mov
pushf
or
rorl
cmp
fidivl
mov
aam
pop
mov
lds
inc
push
int3
pushl
dec
test
push
push
pop
sbb
push
jno
sbb
sahf
outsb
mov
inc
hlt
ret
adc
pop
mov
lcall
fsubrs
arpl
cmp
cmpl
mov
push
inc
xor
pop
jmp
xchg
push
jae
adc
xor
loop
pop
aas
cmp
lods
ss
cmp
fcompl
int
cld
ret
outsl
pop
sbb
pop
sbbl
pop
pop
xor
mov
jne
pop
adc
sbbl
mov
add
push
cmpsl
repnz
add
jge
and
cmp
imul
inc
ljmp
jmp
int3
mov
mov
add
push
jge
fdivl
mov
stc
pop
jg
jbe
test
mov
out
cld
inc
adc
mov
dec
aam
ds
fs
push
in
outsl
lods
loope
nop
inc
ds
ss
rorl
bound
xchg
mov
lods
pop
sub
mov
jns
jbe
nop
xchg
movsl
stos
push
inc
in
lahf
stos
and
mov
xchg
shl
jo
pop
mov
fisubl
andb
mov
jns
sahf
loope
pop
mov
aam
addl
iret
shrl
jns
cltd
sub
lods
jo
dec
in
adc
shrb
aad
cwtl
cmp
add
iret
jnp
jno
iret
inc
stc
xor
jge
push
or
pop
and
out
pop
mov
or
jns
jmp
jb
loope
sub
ds
cmpsl
bound
push
xchg
pop
movsb
xchg
inc
mov
push
cmc
jne
out
dec
jo
push
rol
and
mov
aad
push
mov
and
and
xrelease
sarb
ret
fcomp
fs
mov
fcoms
ja
push
mov
mov
xchg
fnsave
jg
jnp
test
sti
xor
mov
loop
les
adc
mov
mov
mov
fbld
fmull
push
push
imul
xor
into
push
aaa
lods
xor
inc
dec
popf
and
sbb
and
fidivl
cmp
jle
mov
xchg
xchg
scas
and
fcompp
mov
xor
add
popf
bound
and
in
insl
inc
mov
jg
inc
lock
pop
sbb
ds
mov
lcall
ficompl
xchg
and
sbb
roll
orb
jno
vmwrite
cmp
stc
xchg
xchg
cmpsb
notb
cmp
out
jno
sbb
mov
in
es
clc
mov
jno
jo
mov
inc
nop
push
scas
outsl
cmc
sbb
scas
jbe
jg
dec
fisubrl
xor
enter
pushf
stos
pop
mov
gs
sub
ficomps
lds
roll
mul
add
pop
adc
push
movsl
add
or
mov
jge
add
les
jb
outsl
inc
fmulp
lahf
inc
incl
xor
leave
jo
sbb
pushf
add
or
push
dec
lahf
addr16
mov
dec
mov
sub
imul
lcall
imul
into
in
outsl
mov
cli
cmp
loope
inc
adc
stc
test
enter
xchg
cmp
add
cmpsb
loopne
jne
sub
cmpsb
cmp
push
sub
pop
je
mov
test
rcrb
cmp
ljmp
movsb
jg
xchg
pop
or
add
aas
fistl
mov
daa
push
into
fisttps
add
xor
sbb
xor
shl
repnz
mov
or
into
mov
jb
cmp
sub
mov
pop
stc
adc
andb
es
jmp
sti
xchg
mov
repz
inc
or
sub
out
in
sub
push
test
test
jae
cmp
pushw
in
call
or
lcall
pop
ss
test
push
mov
mov
insl
adc
repz
in
test
mov
out
mov
scas
cwtl
jge
gs
pusha
and
dec
lret
int3
es
jmp
gs
in
call
insl
mov
sahf
loop
push
push
jno
xchg
leave
in
cmp
fimull
lock
bound
jae
mov
out
int
test
mov
push
inc
cltd
iret
dec
add
pushf
rcrb
or
mov
clc
into
divl
adc
adc
icebp
loopne
outsb
jo
lods
fistpll
mov
in
int
pusha
pop
push
add
cli
dec
mov
es
mov
popf
int
in
push
cmp
sbb
ss
outsb
fstpl
nop
notl
lods
jge
fs
cld
and
sarb
mov
inc
mov
jns
and
mov
xchg
inc
jg
mov
add
sub
pop
stc
cmp
inc
mov
pop
gs
inc
pop
insl
inc
or
shlb
jp
aam
push
or
adcb
pop
cmc
and
int3
fdiv
add
mov
bound
dec
clc
test
lods
inc
push
adc
sti
pop
int
rcr
inc
dec
jmp
test
mov
inc
in
sarl
mull
mov
pusha
sbb
dec
popa
mov
xchg
pop
pop
popa
inc
hlt
xor
clc
imul
jne
cmc
push
loope
jp
lock
jns
jo
adc
imul
loopne
jns
inc
and
lret
insl
pop
movsl
testb
push
decb
mov
pop
adc
adc
xor
or
sti
orb
cmpsl
pop
xchg
xor
ljmp
ljmp
fidivrs
shrb
shll
fcoml
dec
sbb
lds
mov
fs
mov
jecxz
in
insl
adc
cmp
mov
movsl
dec
lods
xchg
mov
mov
in
push
xchg
jle
jbe
pusha
sarb
and
enter
or
xchg
or
push
jns
and
xor
pop
ja
push
push
xor
pop
pop
int3
or
sub
cmp
adc
fs
push
mov
or
xlat
das
out
out
xchg
adc
inc
xchg
inc
pushf
cmp
mov
in
pop
test
mov
xor
cld
add
push
jae
filds
mov
dec
out
out
test
dec
cmc
imulb
mov
repz
daa
sbb
push
mov
iret
jae
in
aas
fwait
mov
add
cmp
mov
int
xor
inc
sub
jb
int
mov
outsl
jp
jns
mov
jge
inc
dec
adc
in
ret
mov
mov
lods
popa
xor
addr16
sahf
sti
fcoml
das
push
jno
pusha
sbb
lahf
jb
and
iret
push
dec
sbb
inc
mov
enter
xlat
pop
pop
xlat
lods
sub
xor
mov
into
jge
cltd
adc
decb
push
push
aaa
andb
lret
daa
mov
cmp
shrb
sarb
push
inc
xchg
hlt
pop
xchg
xchg
mov
test
adc
into
in
or
lret
push
sbb
aad
mov
mov
push
pop
sbb
ljmp
push
sbb
sub
xor
sbb
dec
lods
mov
or
adc
lds
repz
fstps
shlb
adc
sub
imul
iret
daa
jnp
lock
mov
dec
dec
push
and
mov
push
shlb
adc
shll
scas
push
add
sbb
sbb
and
pop
mov
adc
and
inc
or
clc
test
out
mov
cli
mov
lcall
pop
out
add
leave
cmp
add
pop
sbb
xchg
pop
jbe
in
add
cld
gs
call
cmp
cs
cli
ficomps
jne
jb
iret
mov
xor
mov
sub
pop
jbe
push
pop
imul
ret
das
mov
dec
cmp
mov
lods
out
jae
mov
xor
insb
outsb
sbb
dec
loop
cmc
sbbl
loope
inc
addr16
repz
nop
jb
adc
insl
jmp
xchg
mov
mov
push
jne
pop
cmp
mov
pop
sub
xchg
push
nop
inc
xor
sarb
outsb
mov
data16
out
fnstcw
iret
loop
push
stc
inc
xlat
jae
cmp
in
repz
lock
sub
mov
xchg
sub
jo
inc
sub
iret
lods
rcll
fmull
outsl
sub
xor
loopne
insl
test
jp
gs
mov
mov
add
xchg
or
rolb
stc
inc
add
jecxz
out
lods
loop
mov
mov
stos
sbb
mov
xlat
popa
arpl
test
hlt
dec
fimull
jmp
int3
pop
cmp
addr16
mov
ret
inc
xchg
out
ja
std
jno
std
pushf
sub
mov
gs
mov
pop
dec
lock
dec
fstpt
xchg
mov
cmp
pop
pop
fnstenv
repnz
add
or
cld
add
push
sbb
add
sahf
sbb
mov
jb
pop
push
cmp
lods
imul
pop
aad
sub
cmp
dec
lcall
xor
sub
mov
xchg
adc
rorb
sub
in
cli
shlb
aaa
mov
jmp
jl
mov
dec
sarl
jnp
mov
sub
and
dec
mov
jge
mov
movsl
faddl
aam
lock
ret
daa
mov
jno
js
mov
push
or
cmc
fcoms
cmp
pushf
pop
push
dec
addr16
aas
mov
cld
imul
jno
es
repz
cmp
push
inc
pop
fcmovbe
push
xor
add
lods
sub
popf
addr16
cmp
stos
test
jle
lret
mov
fsubr
pop
sub
inc
pop
pop
shr
in
mov
pop
xor
add
dec
inc
mov
push
dec
inc
cmp
inc
dec
mov
lods
imul
mov
lss
iret
ret
aas
jg
mov
mov
insb
adc
scas
push
sub
ss
mov
arpl
iret
test
inc
dec
repz
lcall
in
xchg
iret
add
iret
dec
ret
push
mov
lods
ret
inc
testb
subb
inc
sbb
jle
xor
in
push
in
and
leave
out
arpl
push
stc
dec
int
fcoms
call
or
jo
xor
xchg
aas
cmp
xchg
call
inc
pop
xor
adc
pop
outsl
pop
dec
push
cli
loopne
imull
dec
dec
inc
dec
mov
rcrl
leave
pop
dec
cld
push
mov
mov
ror
or
rorb
or
insl
mov
push
call
ds
mov
sub
enter
sub
push
sbb
lcall
sti
and
inc
dec
cwtl
in
sub
and
out
lahf
cmpsl
movsl
pop
sbb
pop
sub
cmp
shl
pop
jns
movsb
mov
fwait
jo
cmp
adc
ret
xor
mov
stos
mov
jp
mov
xor
or
pop
mul
push
je
shll
cmp
mov
xor
fucom
incl
in
cmc
mov
inc
and
lods
rorb
fcmovnu
mov
lds
pop
cmp
cmpsb
pusha
loopne
hlt
imulb
mov
ficoml
cmc
insl
in
dec
fidivl
mov
bnd
jmp
adc
mov
inc
xchg
xchg
add
mov
sti
imul
fimuls
jbe
push
popa
fildll
jb
lea
jp
and
xchg
sub
push
mov
dec
cmp
iret
add
ret
mov
gs
inc
inc
cmp
lods
cmp
mov
lds
out
jno
mov
dec
popl
sbb
arpl
mov
sbbb
mov
push
js
adc
dec
lds
rorl
adc
into
mov
mov
pop
clc
cs
insl
pop
aam
sbb
arpl
bound
sbb
push
pushf
pop
mov
sub
push
cltd
cld
mov
sbb
or
cmp
xlat
ss
shrl
fisubrs
aas
mov
das
pop
or
mov
add
jg
xor
es
inc
call
fld
add
adc
push
pop
push
xor
pop
mov
nop
repz
outsl
xor
bound
dec
das
dec
xor
mov
mov
fmull
push
mov
add
outsl
daa
mov
data16
in
jecxz
dec
movsl
int
inc
outsb
xchg
ret
mov
cwtl
loop
test
lock
cltd
push
stos
jne
repnz
adc
mov
jg
add
stc
lock
mov
cmpb
adc
xchg
mov
pop
lock
cmp
or
lret
int3
mov
mov
dec
xor
les
mov
push
and
aaa
and
and
lahf
cli
jl
shlb
ret
lds
test
cmc
dec
pop
or
mov
and
xor
and
mov
ret
mov
out
sub
jmp
cmp
inc
jp
lods
or
jecxz
cmc
pop
addl
dec
cs
bound
ss
jmp
jns
pop
push
mov
xor
rcrb
sbb
outsl
mov
mov
and
xor
sub
mov
scas
aam
ss
sub
sub
jb
sub
mov
push
and
mov
inc
insb
or
and
add
ljmp
out
xchg
int3
and
mov
jg
loop
xchg
out
xor
jno
dec
stc
sub
into
inc
inc
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
arpl
bound
or
adc
or
mov
xor
push
mov
movlhps
rorl
add
bound
clc
hlt
pop
inc
cli
out
pop
adc
sti
icebp
int
ja
pop
xlat
jae
test
push
and
test
sub
out
sub
pusha
mov
mov
add
xor
sbb
cmp
mov
loopne
cmc
pop
mov
adc
xlat
addb
rcrl
mov
loop
dec
ret
iret
mov
add
mov
push
sub
cld
bound
mov
cmc
fwait
dec
push
add
bound
xchg
and
adc
or
lock
divl
ds
je
imul
mov
add
and
cld
adc
and
pop
in
and
or
roll
dec
jbe
scas
sbb
sub
nop
and
and
pop
iret
xchg
rcr
fnstcw
sub
inc
outsl
sbb
and
pop
mov
roll
fsub
pop
cmc
inc
inc
cmp
mov
xchg
shll
daa
xchg
cmp
ja
add
pusha
mov
popw
sub
sbbb
push
lds
sub
add
push
dec
dec
xchg
mov
dec
mov
mov
xor
mov
out
cld
add
cmp
shl
push
sbb
mov
lods
pop
and
jmp
rolb
dec
daa
xchg
mov
fistps
and
call
sbb
lahf
in
in
mov
sbbb
or
cmpsb
pop
loope
push
out
jmp
gs
idiv
jmp
inc
dec
shll
mov
testb
lock
cmpsl
xor
mov
sub
push
sbb
inc
fstpt
dec
rol
test
jne
cmp
sbb
or
add
ret
inc
je
jo
mov
cmpsb
inc
std
js
mov
sub
mov
rclb
inc
jne
cmpsl
adc
out
scas
push
sahf
test
out
lret
add
dec
and
mov
push
ss
daa
add
or
ljmp
fisubl
imul
push
lcall
or
int3
shr
sbb
loopew
adc
mov
hlt
pop
aaa
mov
cmp
dec
fistpll
sar
cmp
jecxz
pop
xchg
cmp
cmpsl
xchg
push
push
cs
xlat
xchg
lds
hlt
call
in
rcll
sbb
mov
inc
mov
mov
inc
mov
test
inc
mov
sbb
rcrb
xor
push
clc
cwtl
popf
add
mov
inc
push
call
and
xchg
fists
add
jecxz
mov
arpl
pop
test
in
sbb
call
and
popf
mov
sbb
pop
leave
cmp
call
stos
cmp
push
mov
cmp
das
jmp
iret
inc
repz
jns
outsl
cli
pop
ja
sarl
cmp
imul
pop
sbb
ficoml
inc
sub
daa
popa
jp
adc
or
and
test
mov
fnstcw
add
cmp
js
mov
cltd
imul
ret
imul
mov
or
xchg
pop
sbb
pop
pushf
cmpsl
mov
out
test
shl
dec
jecxz
inc
cmpsl
jp
pusha
xor
repz
pop
pusha
scas
and
sti
fwait
addr16
xor
mov
sbb
test
js
sbb
shll
aaa
push
xchg
outsb
adc
pop
inc
in
loop
mov
xor
adc
jbe
dec
es
jbe
dec
sbb
mov
div
xor
nop
lret
scas
xlat
and
jle
adc
ret
test
dec
dec
aad
jae
xchg
jne
movsl
push
fcomps
pmaxub
pusha
sbb
into
sarb
push
mov
ret
and
insb
lods
cwtl
mov
mov
mov
xor
dec
fisubl
sarb
out
mov
sbb
int3
repnz
xchg
mov
mov
pop
imul
in
call
addl
dec
std
mov
inc
test
xor
jnp
sbb
fistl
fistps
adc
testl
test
test
lock
xchg
stos
in
shr
pushf
mov
inc
repnz
test
ljmp
jmp
cmpsb
mov
jl
stc
sbb
push
push
dec
or
pop
out
test
pop
aad
cmp
fidivs
mov
sbb
mov
lret
scas
stos
aad
iret
lcall
arpl
xlat
xor
mov
push
sub
cmp
call
pop
pop
lcall
push
xchg
sub
pusha
out
xor
sbb
scas
or
inc
adc
je
xchg
test
adc
push
js
mov
mov
mov
xor
pop
test
cmp
pushf
sbb
cmpsl
pushf
sub
dec
fs
sub
adc
xor
cld
outsl
adc
faddp
mov
cmpsl
mov
mov
cmp
fisttpll
jecxz
test
dec
lcall
ret
popa
cmpsb
cli
xchg
mov
xchg
sar
out
cmc
mov
mov
loope
rorl
pop
dec
jb
pop
ds
mov
mov
lods
mov
fidivl
jb
cmpsb
sbb
mov
cwtl
xchg
stc
rcrl
jb
cmp
and
mov
fsubrs
push
pop
mov
out
sbb
jge
insl
fisttpll
jge
test
jl
jnp
sbb
xchg
cmpsl
inc
int3
arpl
in
lea
push
pop
mov
sub
lret
cmp
dec
mov
test
leave
in
icebp
lock
xchg
and
push
pop
jno
jecxz
test
mov
xchg
mov
dec
mov
xlat
ljmp
imul
pop
arpl
pop
dec
shll
lods
jp
mov
pushf
call
ss
pop
pop
dec
cld
adc
mov
filds
daa
aas
sbb
xor
arpl
negl
es
ret
pop
je
into
or
xchg
out
out
xchg
out
push
rcr
add
cmp
jl
fldl
out
imul
lret
sbb
mov
push
addr16
sbb
mov
xchg
or
jnp
jle
mov
pop
cmpl
add
mov
arpl
lcall
mov
cld
lock
xchg
nop
xor
cltd
into
pop
sbbl
xchg
or
pop
fwait
pusha
cmc
xchg
mov
cs
and
lds
push
xchg
push
sar
pushl
cmpsl
push
cmp
fiadds
loopne
jl
or
sub
xchg
xlat
fdivrs
les
gs
pop
lods
cs
sub
popa
pop
sbb
arpl
clc
inc
lods
pop
xlat
pop
int
adc
int
orb
aaa
aaa
ret
mov
pop
xchg
fnstcw
pop
icebp
adc
and
add
sbb
movl
in
adc
inc
dec
xchg
pop
lock
popa
cmp
xchg
xor
out
js
pop
pop
in
cltd
cs
loop
fdivp
das
fcmovne
mov
cltd
stos
adc
mov
std
mov
popa
nop
idivb
mov
and
cmc
roll
nop
xchg
in
jecxz
push
sub
scas
movsl
pop
enter
inc
cmp
inc
idivl
or
and
int3
jp
pushf
sub
mov
pop
addr16
test
cmp
sub
pop
jae
ret
lret
fldenv
sub
mov
into
inc
out
jns
xchg
ret
pushf
inc
adc
dec
stos
adc
mov
xor
mov
lahf
mov
sarl
movsl
in
sbb
pushf
push
push
pop
enter
mov
cmp
mov
jp
mov
fildll
push
dec
and
pop
cltd
sbb
sub
or
sub
xchg
pop
jecxz
mov
int3
rcr
inc
mov
adc
dec
insb
fcomps
sub
arpl
or
cmp
lds
shr
fidivrl
cmp
outsl
mov
sbb
push
push
mov
mov
pop
jge
push
pop
out
add
std
adc
adc
push
xchg
call
dec
iret
in
and
sub
ret
jo
mov
mov
pop
jge
dec
adc
pop
mov
shll
jp
loop
mov
pop
loopne
aad
mov
add
movsl
xchg
scas
adc
arpl
xor
dec
scas
jo
lods
push
cmp
aas
cwtl
shlb
push
and
das
dec
sahf
dec
aas
aam
mov
cs
icebp
aas
sbb
jle
stos
xor
lds
mov
cmp
daa
jge
jmp
mov
xlat
leave
jo
jl
pop
adc
out
out
loop
int3
insl
xor
inc
push
lcall
push
jne
or
test
push
sub
lahf
add
pop
cmp
inc
pop
cli
mov
inc
iret
jg
sub
test
imul
jg
lahf
mov
shll
fbld
aas
adc
cmp
and
adc
sbb
adc
push
xor
cli
test
lods
push
dec
out
inc
add
dec
add
mov
sbb
pop
jb
imul
call
mov
in
out
sub
dec
cmpl
push
cmp
lret
aaa
leave
inc
mov
iret
mov
rorb
orl
jo
push
popl
arpl
mov
cmp
nop
std
rol
pop
into
sbb
cs
add
hlt
add
pop
xchg
inc
in
les
out
cli
adc
mov
sub
xor
ljmp
fwait
jno
sbb
ja
xchg
mov
pop
jecxz
je
clc
push
fdivrs
lods
test
xchg
mov
cwtl
jne
lock
pop
sti
enter
outsl
or
je
add
mov
xchg
mov
push
stos
sbb
insb
cwtl
adc
daa
gs
out
es
push
sbb
push
lods
or
mov
in
sti
es
fnstenv
or
cmpsb
ds
lcall
dec
push
adc
bound
jmp
insl
icebp
sub
xor
lods
sbb
outsb
jae
ljmp
inc
ljmp
lock
add
je
inc
pusha
pop
notl
in
pop
notb
pop
icebp
cmp
pop
pop
outsl
loope
mov
js
cmpsl
mov
dec
outsl
mov
adc
xchg
mov
cmpsl
jl
ret
jns
sbb
cmpsl
jbe
ficoms
sbb
jle
xor
addr16
mov
iret
pop
fs
cmc
xorl
pop
test
cmpsl
loope
into
rcll
inc
push
rcrb
inc
cmp
mov
mov
into
xchg
inc
mov
jmp
cmpb
loope
mulb
jl
or
sbb
imull
inc
mov
pop
mov
dec
jae
push
xor
or
rolb
lcall
into
lcall
mov
shlb
add
in
sub
jmp
stos
test
and
inc
mov
into
adc
subl
xchg
jp
movsl
sub
mov
test
xchg
sbb
mov
adc
ret
cmpsl
out
test
xchg
inc
out
mov
jns
sub
push
pushf
sub
xchg
mov
mov
cmp
xor
outsl
mov
cmp
imul
enter
push
xor
loop
lret
xor
lahf
sub
cwtl
scas
mov
mov
scas
imul
das
mov
arpl
mov
iret
aam
push
loop
mov
fisubs
nop
mov
xchg
fidivs
or
mov
or
in
aaa
nop
outsb
xchg
imul
lret
dec
mov
mov
sub
test
or
xchg
mov
adc
push
out
jecxz
inc
jmp
scas
popf
repz
sti
pop
jge
pop
sub
jmp
adc
xchg
fwait
je
inc
add
das
inc
fildll
or
sbb
jbe
dec
ja
data16
cmp
pop
xchg
push
out
fs
stc
xchg
stos
daa
jns
in
mov
pop
jmp
out
sub
xor
adc
pop
jmp
das
jp
sub
push
push
adc
dec
jb
cmp
jns
sbb
ret
xor
jae
dec
fs
out
cmpsb
outsl
int3
xchg
les
cwtl
scas
jecxz
lret
stc
push
mov
js
insl
mov
or
notl
mov
mov
cmp
fwait
push
incb
pop
sub
mov
push
push
iret
imul
cmp
add
mov
inc
cmp
test
cmpsb
mov
mov
jl
mov
mov
push
pop
xor
lahf
cmp
or
push
fidivrs
je
popf
xchg
rcrl
test
mov
divps
rolb
call
xchg
push
sbb
fildl
data16
pushf
mov
repnz
fnstsw
dec
idivl
xchg
jno
pop
inc
test
mov
push
cmpsl
mov
cmp
jle
jo
sbb
enter
je
movsl
ret
pop
mov
outsl
inc
and
outsb
cmp
mov
fldlg2
popf
xor
lahf
arpl
push
push
in
or
sub
xchg
scas
or
aam
repnz
flds
arpl
push
cmp
stos
cli
test
sub
sarl
ret
jne
cmp
jge
or
in
mov
dec
jle
shrb
sti
stos
sbb
xlat
addr16
arpl
call
or
pop
cmp
pop
jns
cmc
lock
popf
mov
aad
add
and
test
xorl
cld
sub
dec
loop
or
lret
xchg
aad
popa
and
in
scas
mov
mov
lods
out
xor
push
in
mov
testl
jo
dec
cmp
stos
xlat
or
mov
push
inc
loopne
pop
cmp
test
mov
ret
jbe
inc
push
mov
push
inc
arpl
mov
inc
into
outsl
orb
movsb
xor
gs
lea
cmc
cmp
popa
insb
sbb
cwtl
pop
das
fdivrl
push
lods
xchg
int
rcr
add
ret
adc
fistpl
push
push
add
icebp
mov
fildl
mov
mul
cmp
xlat
sub
mov
sbb
clc
inc
stc
adc
cmp
test
pop
outsb
out
fs
add
mov
or
mov
stc
push
jle
adc
or
lea
insb
aam
adc
dec
cmpsl
aaa
jnp
mov
mov
xchg
lcall
ret
dec
shll
sbb
dec
and
pop
pmullw
aaa
jl
sahf
jbe
clc
arpl
dec
jo
ds
test
popf
mov
jl
js
sub
das
pusha
push
inc
cmpsl
enter
and
inc
jle
scas
mov
aas
dec
push
add
shll
cmp
sub
aaa
ficoml
push
xor
cmp
cmp
mov
in
les
xchg
and
dec
adc
stos
mov
add
mov
sub
pop
sub
clc
xchg
data16
or
repnz
sarb
test
aam
daa
jae
adc
fimull
test
mov
push
fcoms
cwtl
decb
jl
xchg
jge
icebp
pop
jp
test
mov
shr
test
dec
dec
add
xor
andl
aam
mov
aas
cmp
aam
jbe
scas
or
mov
xorl
mov
xchg
je
dec
sub
movsl
xchg
add
cmp
jns
hlt
push
imulb
mov
dec
push
int
mov
jle
lcall
adcl
lahf
mov
imul
mov
xor
jnp
in
repz
pop
mov
add
lods
xlat
mov
inc
outsl
cmp
leave
sbbl
inc
repz
pusha
sub
fisubrl
adc
iret
dec
icebp
icebp
int
pusha
addr16
outsl
mov
enter
xchg
and
aaa
mov
push
loope
mov
cmp
sub
xchg
lods
xchg
adc
fisttpl
arpl
add
jg
cmp
pop
cltd
lock
cmp
jmp
aad
push
rcl
xor
dec
enter
jnp
int
lret
sub
in
into
aaa
inc
out
mov
imul
js
adc
push
xor
call
mov
mov
pop
dec
clc
pop
shlb
out
shlb
cld
mov
mov
add
mov
mov
push
adc
pop
mov
jne
mov
push
int
inc
andb
lock
dec
add
out
or
pusha
jl
push
aad
pushf
in
in
sub
xchg
mov
sti
nop
mov
shl
push
cmp
mov
int
sti
sti
xchg
lock
rclb
fstl
movsl
fsubl
dec
stos
and
out
dec
cmp
lret
push
pop
call
pop
dec
aaa
movsb
mov
cmp
dec
inc
lret
int
xchg
popf
inc
rolb
insb
cmpsl
xor
dec
push
movsl
fsubrp
or
add
loopne
shlb
bound
fists
dec
dec
mov
imul
jo
or
pop
dec
mov
jbe
push
std
ret
inc
mov
jmp
or
sub
movsl
xchg
cs
fists
mov
dec
add
mull
in
in
pop
ret
das
lcall
pusha
mov
dec
jg
outsb
lahf
xchg
in
xor
jno
push
lcall
mov
daa
sub
insb
push
mov
sbb
jae
and
jbe
push
repnz
jp
cmp
shll
lret
add
ljmp
or
mov
push
jg
push
sbb
test
jp
jb
les
push
mov
cli
and
xor
lock
jge
lds
ret
mov
jb
push
sub
jbe
adc
fstpt
lret
mov
or
mov
test
add
pop
ja
scas
xchg
roll
andl
movaps
fistpl
or
daa
or
out
push
lahf
inc
in
test
hlt
repnz
inc
fs
sub
fwait
xor
jg
dec
adc
cmpsb
pop
sahf
push
push
arpl
xchg
push
push
rcll
fstpt
inc
adc
xor
pop
mov
jns
subl
in
mov
push
mov
or
mov
push
mov
sub
scas
sub
cmc
outsl
dec
dec
push
sbb
das
cs
pusha
and
pop
out
shrl
dec
lock
cmp
aaa
andb
jge
dec
rorl
repnz
sub
int
xor
out
out
dec
out
inc
out
cmp
shrb
dec
cmpsl
mov
out
jle
fwait
movsb
das
leave
jns
push
cmp
call
cmpsb
in
insl
sbb
mov
cltd
mov
push
pop
push
xor
push
or
iret
sub
or
jmp
imul
es
fcomip
pop
mov
inc
xor
loop
sub
push
cmc
jb
loopne
enter
notb
hlt
nop
jg
hlt
sub
std
sbb
xchg
aam
je
xor
lahf
ds
lods
push
stc
out
mov
and
push
inc
data16
xlat
aam
inc
cmp
mov
sbb
mov
mov
fimuls
xchg
cli
adc
std
sub
cmp
pop
push
fcomip
xor
inc
in
cmpsb
scas
not
mov
notl
mov
mov
jg
mov
cmp
adc
cmp
daa
aam
xchg
stc
sbb
lcall
js
jg
jbe
dec
mov
adc
fdivl
paddusb
int
and
sub
mov
cwtl
leave
dec
dec
pop
mov
pop
sbb
fimull
mov
orb
lds
pop
xchg
jl
fcoms
mov
inc
das
mov
or
popf
and
pop
mov
pop
nop
add
pop
adc
ljmp
ret
test
push
lret
adcb
adc
leave
adc
out
mov
or
adc
mov
popf
outsb
jg
out
push
or
outsb
xchg
xor
aaa
push
cli
outsb
mov
inc
lret
dec
mov
jns,pn
dec
jae
push
test
mov
adc
xor
mov
je
lds
call
jecxz
jecxz
mov
sbb
jno
call
movsl
jp
cmp
and
fists
mov
xor
arpl
xchg
fdivr
test
popa
jno
push
aam
mov
sub
cmp
icebp
jno
jb
mov
test
or
adc
dec
jnp
fdivs
mov
lea
inc
jb
bound
aam
mov
and
pop
out
sub
pushf
jmp
sub
dec
aad
iret
mov
add
inc
mov
hlt
shlb
pop
mov
je
je
int
mull
addr16
xlat
repnz
arpl
shll
push
test
xchg
mov
cmpsb
mov
cmpsl
jmp
fstpt
add
sahf
xor
push
loopne
fbld
or
enter
cmp
jl
lea
or
cld
scas
dec
add
mov
xchg
mov
incl
push
xchg
mov
inc
inc
mov
xchg
aad
sub
push
and
rol
jg
push
js
dec
mov
test
testl
arpl
ret
imul
sbb
popf
jne
call
or
push
push
lock
fwait
inc
cwtl
pop
popa
dec
pop
sub
pop
je
mov
cli
jecxz
sbb
xchg
in
ret
or
jnp
push
pop
iret
mov
and
xlat
mov
addr16
mov
mov
push
lar
sbb
lahf
push
jne,pn
add
icebp
icebp
jns
fmul
arpl
dec
fxch
gs
adc
cmpl
pop
fwait
pop
test
and
cmp
dec
mov
fisubrl
dec
rclb
fisttpll
loopne
xchg
insb
or
dec
add
test
adc
clc
test
imul
adc
pop
lret
fsubs
or
push
mov
call
scas
adc
lods
shlb
add
aad
xchg
sub
daa
fcoms
mov
int
movsb
jnp
jecxz
fwait
ds
inc
and
mov
sahf
sub
dec
inc
push
xchg
test
cmc
jno
inc
andb
add
into
iret
cld
push
dec
jne
push
mov
inc
in
test
mov
fdivrl
das
push
and
aas
movsl
cmpsb
stos
pop
popf
mov
jns
push
out
and
cwtl
movb
jns,pt
lods
dec
cmpsl
fucomip
pusha
sub
mov
dec
addr16
push
sub
icebp
xchg
or
stos
int
cmc
xchg
cmp
fcoml
sbb
push
push
pop
mov
inc
leave
xor
inc
pop
dec
mov
in
xlat
int
xor
mov
enter
cmc
push
push
es
lods
adc
xor
repnz
dec
rclb
mov
inc
shlb
push
pop
lock
sub
iret
stos
jns
xchg
pushf
jo
ljmp
aam
mov
mov
popf
fwait
cmp
aad
lods
stos
in
inc
sbb
pop
lock
push
xor
mov
lret
je
jb
out
inc
std
mov
out
push
or
pop
pop
aad
mov
and
cwtl
sbb
cmp
je
inc
aam
bt
sbb
jbe
xchg
nop
ss
sub
out
lock
mov
je
sbb
sbb
adc
mov
adc
mov
mov
lock
mov
js
inc
add
ficoms
addb
mov
mov
dec
xchg
jbe
jbe
sbb
lcall
xor
addb
xchg
xchg
push
xchg
jge
stc
int
push
je
imul
cmc
inc
stos
push
cmc
cmc
aam
mov
loopne
jl
jnp
rorl
mov
inc
in
ret
sub
inc
hlt
push
jbe
and
push
pop
test
ret
xor
mov
cmp
push
insl
dec
jno
lret
fucom
sbb
ret
adc
and
pop
xlat
out
xor
dec
mov
mov
sbb
push
push
jo
mov
es
inc
xor
scas
lret
loope
js
js
cmp
lret
leave
insl
mov
mov
mov
or
mov
mov
mov
adc
fwait
lods
notl
push
fstpt
add
adc
jno
cmpsl
test
ljmp
aas
add
fwait
test
decb
inc
sub
and
fildll
pop
scas
xchg
je
push
or
pushf
enter
clc
aaa
sub
cli
jmp
insl
scas
xchg
or
push
cltd
jnp
mov
adc
or
stos
fmulp
pop
mov
xor
call
sub
dec
cmc
cmp
push
mov
pop
das
std
push
sub
dec
mov
pop
mov
pop
std
jae
xor
jmp
mov
xor
xchg
das
adc
ret
push
mov
fidivl
fsubrl
fstl
mov
aam
out
lahf
sbb
dec
fwait
and
push
mov
sub
sbb
pop
daa
outsl
fists
loopne
pop
dec
add
mov
jne
clc
fcmovnbe
gs
not
mov
xchg
push
xchg
add
mov
iret
popf
mov
push
or
mov
sub
inc
mov
mov
push
aam
add
sahf
and
jmp
out
xor
mov
es
adc
lods
aam
mov
dec
jl
add
pop
pop
xchg
sbb
out
xchg
cmp
sub
mov
cmp
push
rclb
mov
jmp
push
rcrl
cmp
push
hlt
pusha
daa
aaa
aaa
xchg
cmp
pop
out
xor
xor
fwait
jno
add
out
add
lods
push
jno
testl
fiaddl
xor
into
xor
jge
adc
xor
loopne
nop
pop
mov
stos
dec
fsub
jmp
mov
sub
fbstp
adc
fwait
pop
dec
insb
cmc
test
mov
out
lret
es
repz
repnz
nop
mov
loope
inc
sahf
scas
in
daa
and
bound
lahf
dec
inc
shlb
fsubl
push
adc
es
cmp
cltd
mov
rcrb
je
mov
sbb
in
sub
std
sbb
pop
imul
mov
lds
or
inc
or
and
xchg
or
add
pop
jg
lcall
ret
popf
cmp
push
sbb
jae
scas
int3
mov
lret
in
sbb
push
inc
xchg
xchg
pop
and
push
xor
inc
adc
mov
cs
std
movsb
sti
pop
jle
jnp
cli
popl
jp
inc
mov
push
dec
jnp
add
pop
dec
das
xor
hlt
dec
mov
rcll
mov
jge
mov
imul
push
shlb
ror
cwtl
rol
sbb
mov
pop
imul
push
call
mov
push
ret
ljmp
cld
fwait
fs
or
dec
clc
jmp
and
cld
mov
xchg
jb
pop
pop
sbb
std
out
xchg
fidivrs
mov
movsb
cli
or
loopne
mov
scas
sub
pop
or
mov
in
mov
adc
cli
enter
neg
shlb
lahf
cmp
xchg
mov
jg
out
xchg
sub
push
pop
insb
aad
into
imul
mov
xor
imul
roll
sbb
outsb
xor
dec
imul
xor
out
pop
jl
jne
dec
push
dec
sbb
push
sbb
fwait
subl
je
popf
pop
mov
sbb
stos
sarl
xchg
scas
pop
imul
add
imul
les
mov
out
inc
scas
cmpsb
and
fsincos
lea
jb
nop
lcall
adc
push
aaa
xorb
pop
adc
sub
lahf
xor
pop
mov
xchg
mov
out
fdivrs
or
push
into
inc
out
xchg
lds
mov
das
pop
cmp
sub
xchg
std
lods
into
test
cmp
xchg
adc
icebp
pop
cli
pop
or
mov
inc
pop
cmp
adc
fcompl
lret
inc
mov
pop
mov
xchg
mov
adcl
stos
adc
ss
dec
push
jle
xchg
sbb
dec
mov
dec
int3
leave
int
cli
lods
repz
pop
std
xchg
xlat
lcall
test
repnz
movsb
adc
and
aam
sub
mov
and
push
fs
lahf
fstpt
jae
push
lret
out
dec
dec
and
pop
ret
sub
push
shll
mov
pop
inc
leave
mov
inc
cmpsl
sub
shl
pop
cmc
jnp
mov
in
arpl
fimull
inc
push
push
sahf
cmp
mov
xchg
push
jg
lret
cmpsb
inc
jmp
gs
addr16
insl
in
popf
mov
lret
cmpsb
pop
pop
add
jno
into
sub
dec
mov
push
mov
xor
popl
mov
xchg
or
popf
jg
andl
lret
dec
dec
mov
sub
ret
sub
fimuls
cmp
xor
pop
push
js
sbb
dec
shrl
and
mov
dec
push
push
jecxz
adc
mov
test
mov
cmp
test
out
ljmp
aad
sbb
fiaddl
push
shlb
lcall
and
cli
jns
pop
mov
or
add
add
mov
pusha
adc
in
dec
in
push
sbb
pop
mov
and
scas
cltd
flds
push
cmpl
cmpsb
pop
push
xchg
inc
lock
call
aam
sbb
sarb
mov
jge
cmp
push
int3
inc
test
bound
fsts
push
mov
into
je
jmp
pop
push
stos
mov
in
repz
sub
pusha
pusha
lock
inc
lods
ja
test
and
stc
stos
or
mov
mov
sub
mov
fbld
out
fnstenv
lds
lods
into
ror
fldl
mov
clc
mov
gs
negb
pop
cmp
push
addr16
orb
push
in
ret
pop
jno
pop
push
and
push
cmp
lret
je
divb
inc
mov
dec
loopne
adc
pop
mov
lds
mov
mov
lahf
push
xchg
fs
lock
or
ds
sbb
sbb
xor
inc
mov
push
inc
lcall
jns
mov
aaa
or
shrb
jecxz
jle
daa
mov
add
in
movsb
push
fcmovbe
jnp
mov
adc
jb
hlt
mov
loope
adc
mov
cld
inc
fcompl
cmp
sub
lods
jae
incl
push
mov
adc
ret
mov
adc
cmpsl
ret
pop
outsb
das
inc
push
adc
icebp
xchg
cmp
dec
add
fsubrp
jne
addb
out
mov
aam
enter
xchg
push
mov
dec
dec
xor
cmp
jmp
repnz
cmp
jne
imul
pop
push
sub
mov
fcoml
sub
sar
in
xor
fs
mov
lock
fcoms
push
adc
push
out
int3
loope
lahf
shll
adc
mov
ds
push
shrb
cmp
xor
mov
xchg
int
lret
inc
inc
jne
call
sub
xorl
fists
mov
insb
and
cmp
sahf
push
cmp
fstl
xchg
frstor
xabort
jns
jle
leave
into
mov
popl
out
jg
imul
mov
jb
inc
js
out
cmc
xchg
xor
imul
push
xor
mov
addr16
sbb
test
fidivs
aam
jo
lea
mov
mov
xor
std
in
into
ss
sub
mov
js
or
inc
into
cs
scas
hlt
fisttps
shll
stos
cmp
or
cwtl
sbb
jmp
push
aam
xchg
dec
movsl
dec
add
test
test
lods
inc
lret
fdivs
pop
loop
rcrb
les
fsub
dec
push
out
pop
cli
leave
add
icebp
rorl
pop
lahf
jo
stos
stc
cmpsl
sub
mov
mov
jnp
and
dec
inc
les
rcrl
mov
ret
pusha
push
jnp
pop
stos
mov
ret
inc
out
mov
loope
insl
jmp
add
pop
pop
dec
mov
movsl
cmpb
nop
sub
icebp
and
mov
jno
mov
adc
mov
cmp
jns
dec
mov
lea
xchg
pop
in
fidivl
jp
stos
sub
add
loope
addr16
jl
movsb
imul
add
mov
push
mov
fdivrp
inc
leave
add
ljmp
fcmove
stos
out
frstor
xor
xchg
inc
test
adc
xchg
cmp
dec
lcall
mov
push
cmp
cwtl
out
aas
test
cmc
stc
rorl
jle
mov
jle
in
sbb
push
gs
mov
add
add
fimuls
bound
jecxz
sub
inc
es
and
cmp
stos
out
cld
jl
fimuls
sub
add
movsl
adc
out
lods
fdivs
bound
mov
mov
and
sbb
icebp
cmc
jno
nop
sbbb
jmp
push
xchg
leave
fsubp
jb
cld
jno
mov
bnd
pop
and
in
dec
andl
jl
iret
imul
jmp
andps
inc
xlat
jbe
xchg
mov
popa
pop
inc
lock
mov
cld
rcr
arpl
mov
lds
cs
push
int
push
pop
push
sub
push
sbbb
xor
fcomip
mov
jmp
xor
fdivr
sbb
jo
dec
cs
jp
rcrb
or
sbb
sub
in
cld
ret
pmulhuw
inc
dec
jge
mov
mov
movb
push
add
sarb
mov
aaa
dec
xor
clc
xor
sbb
das
mov
sbb
movsb
ljmp
mov
inc
sub
dec
jl
adc
push
cmp
inc
lock
push
add
nop
adcb
xchg
jne
es
test
repnz
mov
inc
push
jmp
stos
or
div
loope
or
push
mov
add
dec
mov
lods
popl
sbb
xorl
xchg
incb
aad
int3
je
cmp
sahf
adc
sbb
sahf
pop
fadd
stos
pop
cmp
adc
aad
cld
lock
jecxz
sub
push
jne
sbb
loop
inc
popa
xchg
int3
jmp
mov
or
lcall
or
inc
mov
mov
xchg
sbb
adc
jecxz
sbb
jmp
mov
mov
in
idivl
cmp
insb
lock
xchg
pusha
js
icebp
shl
mov
pusha
or
sti
sahf
jl
push
dec
scas
add
xchg
or
imul
loope
mov
imul
sbb
sbb
icebp
lea
daa
nop
push
sbb
jne,pt
mov
fcmovne
in
fadds
mov
or
jbe
cltd
dec
and
inc
sub
hlt
push
jl
repnz
test
jns
cmp
out
ret
nop
addr16
xchg
ror
mov
lcall
shrl
xor
sbb
adc
push
jge
dec
dec
imul
pop
fldt
xchg
pop
pushf
test
aad
xchg
mov
popa
cmp
in
mov
inc
sti
mov
sbb
cwtl
and
lret
lret
xor
mov
and
jge
int
insl
movsb
pop
dec
push
mov
sub
xor
fnstenv
popa
xchg
sbb
dec
mov
pusha
xor
loopne
inc
jmp
xchg
mov
popf
notl
nopl
lahf
pop
add
cmp
lret
enter
mov
leave
es
int
cmp
sbb
xchg
test
subb
and
xor
push
stc
add
jmp
fwait
fwait
dec
lea
mov
or
push
jl
cmpsl
ss
addl
xor
push
jg
les
mov
pop
adc
insl
aam
sbb
es
xor
jl
and
dec
pop
or
sbbl
aam
test
push
cwtl
pusha
hlt
jmp
mov
loop
xor
sbb
frstor
push
jp
call
jl
inc
mov
cmp
sub
daa
std
test
stc
adc
ss
xchg
mov
divb
sahf
loope
fisttpll
fcoms
int
push
or
pushfw
bound
ret
orb
mov
loope
outsb
push
pushl
add
scas
aam
xor
sub
push
test
push
scas
sbb
mov
dec
push
ljmp
cmp
mov
cmpsl
or
push
jbe
or
jnp
mov
xlat
test
cmp
push
pop
mov
push
shlb
das
pushf
or
fucom
mov
lret
mov
imul
jge
mov
js
rcl
xlat
je
mov
lcall
and
nop
cmpsl
push
ljmp
xchg
out
int3
dec
xchg
xor
and
ret
and
mov
pop
jae
in
fwait
and
cmpsb
ja
dec
fisttpl
aaa
push
into
and
insl
leave
hlt
jmp
in
cs
xchg
pushf
pop
mov
popw
sarb
add
jmp
mov
ret
cmp
jg
sub
lea
insb
and
pusha
aaa
addb
dec
aam
jo
icebp
inc
xchg
fimull
mov
sub
in
stos
jno
out
or
adc
inc
xor
outsl
sub
dec
lret
andl
aam
nop
jb
and
movsl
ljmp
sub
push
imul
clts
xchg
jnp
mov
outsl
push
push
out
stos
sub
sub
loope
je
pop
cmpsb
test
pusha
sbb
dec
mov
es
push
pushf
sti
pop
jbe
push
insb
rcrl
adc
sbbb
movb
punpckldq
xchg
sub
mov
rclb
imul
pushl
add
andb
mov
lret
in
fwait
cmp
fdivl
xchg
jnp
rorl
es
sub
inc
enter
jns
push
push
jmp
incb
mov
inc
adc
cmpsl
nop
sub
push
aam
lods
loop
test
xor
sub
pusha
insl
xlat
sahf
xchg
dec
jle
rolb
adc
add
cwtl
lahf
xchg
dec
dec
add
jge
and
adc
mov
outsl
cwtl
push
aad
orb
idivb
cmpsl
fwait
or
int
das
int
add
jno
pop
mov
gs
fdivs
jp
add
xchg
push
jae
ja
data16
testb
insb
xchg
jns
push
jmp
icebp
insb
rolb
adc
aas
and
sarb
orl
sub
xlat
mov
mov
sbb
test
out
jb
mov
lret
dec
cmc
xlat
das
addr16
push
ljmp
push
inc
adc
int
repnz
daa
pop
shlb
aad
xor
mov
flds
nop
lcall
scas
mov
mov
nop
std
sub
adc
mov
push
out
or
push
ljmp
ret
mov
push
cmp
and
cwtl
sub
mov
xchg
out
dec
xchg
out
andb
add
das
push
mov
and
loopne
push
push
aas
sbb
xchg
imul
add
shrl
mov
popf
rcrl
aam
lret
dec
or
ffreep
ja
lods
das
sbb
sub
sbb
mov
mov
push
lret
movsl
mov
and
push
push
lock
xchg
lds
shll
mov
mov
inc
mov
mov
pop
fidivrs
sub
sbbb
mov
imul
pusha
stos
bound
fstl
loopne
shll
pop
mov
fistpll
fmuls
mov
mov
cmp
std
mov
cmp
sbb
repnz
sbb
xor
xchg
mov
or
ss
std
loopne
jecxz
mov
xchg
fiaddl
movsl
xchg
cmpl
mov
push
sbb
test
jo
rcrb
and
lret
popa
jbe
fiaddl
mov
adc
dec
dec
mov
js
repnz
jl
lahf
fidivrs
pop
push
inc
arpl
fcmovbe
mov
mov
xorl
shlb
ret
push
mov
mov
fcmovnbe
adc
cwtl
int3
or
mov
push
in
lcall
sbb
and
xlat
xchg
push
clc
xchg
arpl
jmp
insb
addl
cmp
aad
lock
shrl
inc
loope
out
int
in
xor
lds
xor
negb
mov
mov
sub
push
xlat
jo
pop
enter
push
inc
xchg
fisubrs
cwtl
xchg
push
mov
inc
js
and
ja
sbb
mov
ffree
outsl
aam
scas
int
out
inc
or
add
dec
push
in
fsub
mov
ja
rcll
les
xor
push
aas
jns
mov
jns
fisttps
movsl
outsl
push
aad
mov
call
outsl
xchg
or
scas
jns,pt
inc
jp
test
lods
aam
hlt
outsl
xor
ds
jecxz
rclb
lock
adc
add
mov
addr16
fdiv
jl
imul
cmpsl
add
and
push
insb
popa
and
jb
mov
mov
enter
fisubrl
mov
clc
pop
push
push
mov
adc
mov
rcll
pusha
mov
scas
test
jmp
fwait
hlt
std
inc
mov
lret
xor
popa
xor
shlb
cwtl
mov
in
sbb
sbb
scas
adc
dec
ja
test
cwtl
inc
icebp
push
jb
mov
in
mov
sahf
mov
mov
push
jge
mov
jne
imul
sbb
loope
call
vpunpckhbw
orl
jb
pop
lret
repnz
shrb
jne
sbb
xor
ror
pop
sbb
push
enter
add
out
add
mov
fldl
jle
push
xor
dec
stos
shll
negb
pop
xchg
cmp
sub
divb
pop
mov
test
cs
cmp
stc
and
in
and
data16
mov
cmp
or
mov
mov
mov
movl
fadd
jg
xchg
clc
ja
aam
cmpsl
in
cld
jbe
outsl
inc
insl
xchg
sbb
mov
xchg
push
les
into
mov
test
xor
ffreep
add
adc
jns
shrl
es
das
or
xchg
ljmp
and
rcrl
stos
lea
loope
mov
insl
lds
add
cmpsl
jge
xlat
data16
pop
or
xor
lock
xor
dec
inc
addb
xchg
jno
outsl
mov
into
add
and
or
push
sbb
xchg
out
push
mov
iret
jecxz
add
test
fs
iret
add
mov
xor
pop
jns
sahf
add
sub
out
rorb
mulb
in
sahf
sbbb
test
jmp
cmp
fildl
stos
cmp
jns
into
mov
or
jl
mov
jl
test
add
outsb
adc
lret
mov
lahf
pop
aad
xchg
mov
jno,pn
mov
sub
mov
leave
movsl
dec
dec
xchg
inc
mov
pusha
fimull
dec
lcall
xor
test
es
push
rolb
or
inc
test
pusha
and
ja
lea
in
sbb
or
ljmp
imul
aad
jmp
mov
jg
out
dec
mov
mov
ficoml
xchg
jge
dec
mov
mov
sub
daa
sbb
test
in
inc
cs
cmp
insb
lea
inc
movsb
ss
or
lahf
imul
jle
xchg
pusha
ret
mov
adc
stos
lock
jno
test
out
adc
lret
push
add
adcl
cli
push
jmp
jmp
sti
pop
jp
sub
ss
test
push
jmp
inc
dec
int
cld
out
jae
add
pop
test
lea
mov
jbe
outsb
pop
nop
mov
fstps
ja
in
and
xchg
mov
mov
loop
out
mov
ss
fsubl
mov
cmp
sbb
sub
jl
cmp
sub
movl
and
cltd
sub
movsl
jns
ret
mov
popa
loop
dec
add
jnp
mov
push
mov
inc
dec
stos
out
pop
imul
pop
and
adc
icebp
xchg
xlat
cmc
das
test
stc
dec
icebp
mov
mov
out
or
cli
int
mov
and
jbe
mov
xchg
outsl
jo
push
clc
lock
aam
pop
mov
dec
xor
mov
std
test
xor
int
jno
imul
dec
loopne
inc
xchg
xchg
and
xchg
dec
cmp
lea
pusha
push
dec
mov
outsl
pushf
inc
sbb
pop
xor
cmpsl
fwait
aad
mov
shrb
mov
mov
add
outsb
mov
clc
movsb
in
mov
inc
stc
jge
pop
pop
ret
push
dec
inc
push
scas
pop
lods
xchg
or
inc
sbb
push
frndint
iret
cld
dec
popf
inc
adc
lock
mov
lock
jbe
or
test
dec
int
cmp
imul
sbb
les
sarl
jp
jle
shr
adc
fwait
sar
mov
fldl
mov
and
ret
mov
cmp
sbb
xchg
jl
pop
pop
incl
sbb
and
leave
adc
gs
arpl
dec
sahf
cmp
mov
ljmp
mov
xor
fsub
add
cmp
dec
jmp
imul
and
sahf
push
inc
inc
fdiv
lret
aad
cmp
stc
into
shll
leave
jl
inc
aas
test
and
mov
fldl
mov
push
xchg
and
imul
cmpsb
or
jb
xor
out
adc
xor
insl
push
mov
icebp
outsl
jne
popf
push
mov
mov
and
data16
test
out
loope
mov
cmp
shl
push
je
jo
xchg
mov
test
in
jl
int3
cmp
sub
pop
outsb
shlb
test
or
add
cli
mov
ds
jo
loopne
and
jle
insb
pop
cmpsl
ret
jae
pop
ret
dec
mov
add
ss
xor
popf
dec
add
gs
jle
leave
mov
in
push
and
cmp
inc
mov
idivl
push
mov
cmc
jb
int
fiaddl
test
loope
add
repz
adc
pop
xlat
mov
jle
xchg
lea
addr16
dec
test
ljmp
lret
or
lret
xor
jbe
and
filds
or
mov
out
jne
pop
jmp
push
sbb
cmpsl
and
arpl
bound
mov
inc
jmp
mov
fs
ds
orl
stc
or
call
cwtl
jne
jmp
xchg
mov
xchg
and
pop
testl
jb
mov
sarb
subl
inc
push
mov
subb
loopne
iret
cmp
inc
repz
inc
mov
scas
add
jge
scas
in
aad
mov
inc
daa
lods
add
les
sub
dec
dec
sahf
shl
add
jmp
mov
test
imul
push
lods
xchg
add
push
or
scas
xchg
mov
clc
iret
add
add
jno
pop
xchg
mov
fisttps
clc
jbe
xchg
popa
dec
or
and
in
dec
clc
insb
fwait
loop
mov
pop
dec
divb
cmp
push
and
in
inc
push
stc
pop
es
ss
pop
sbb
out
ja
leave
mov
out
lcall
jmp
pop
pop
fsubrl
inc
lret
std
inc
and
or
jge
or
insb
lahf
cmp
push
andl
xor
sub
jne
andb
gs
dec
es
xlat
mov
mov
mov
dec
jmp
sub
push
insl
pop
cmp
xor
aas
sbbl
jl
lods
aad
jle
repnz
push
push
pop
xor
jp
and
pop
cmpsb
sub
stc
data16
int
xchg
sbb
jl
pop
push
jmp
xchg
jns
lret
test
xor
jmp
jno
and
scas
jb
pop
jne
fstp
andl
mull
aad
fistps
mov
pop
push
ret
fbld
xor
inc
lret
jno
sbb
xor
mov
and
xchg
loopne
in
xor
pop
mov
add
gs
sahf
mov
mov
fcompp
test
aam
dec
fisubs
test
or
popa
in
loope
sahf
aad
pop
iret
hlt
pop
icebp
in
jmp
int3
int
mov
dec
mov
pop
sub
aad
pop
ds
lock
jne
mov
iret
dec
fisubs
mov
pop
mov
addb
aas
aam
movsl
inc
cld
mov
rcrb
sar
mov
iret
mov
mull
lea
sahf
rolb
mov
cmc
pop
jne
mov
pop
cwtl
in
nop
pusha
and
sarb
pop
adc
add
sbb
xchg
push
xor
sub
in
pushf
nop
rolb
and
push
lods
jae
ljmp
pop
outsb
int3
daa
mov
adc
frstor
mov
clc
mov
notl
shlb
jno
jae
psrad
js
lds
jecxz
subl
test
or
inc
dec
fstl
popa
stos
lret
or
rorb
dec
cwtl
or
mov
les
mov
sbb
or
fs
sub
mov
and
mov
sar
shlb
or
les
jb
cmp
and
push
leave
dec
aaa
aaa
dec
iret
and
mov
popf
jnp
pop
andb
xchg
mov
lret
push
and
in
dec
mov
mov
sbb
fdivrs
pop
xchg
ja
mov
test
cld
loopne
pop
sbb
outsl
cmpsb
cs
xor
mov
arpl
lret
aas
into
roll
movsb
mov
popf
out
mov
je
sub
je
mov
adcb
lcall
sarb
push
pop
insl
push
test
sub
cmp
pop
xor
xor
test
adc
cwtl
push
inc
andl
insb
and
scas
push
mov
mov
cli
std
mov
dec
fnstcw
mov
sbb
test
adc
mov
negb
sub
imul
pop
jmp
pop
dec
pop
cmp
test
mov
lret
imul
fnstenv
xchg
divl
jecxz
mov
adc
ret
inc
mov
loope
mov
or
jmp
mov
gs
mov
repz
xchg
inc
xor
repz
bound
and
xor
mov
and
aas
mov
scas
pop
xor
mov
and
sbb
iret
mov
pop
pushf
inc
sub
out
or
mov
inc
xor
insl
cmp
jo
cmovge
jp
out
and
jecxz
xor
cmp
or
mov
inc
mov
mov
sub
test
sahf
scas
jp
sar
xchg
lcall
jb
push
test
push
loopne
xor
jmp
in
mov
dec
mov
int3
xor
loopne
dec
dec
outsb
daa
cmpsl
insl
xorl
add
lcall
cmp
push
add
cmc
xor
jno
push
ret
ds
lret
jmp
fisubl
jo
fdivl
into
inc
lods
and
lret
mov
push
and
lea
xchg
sti
setge
scas
and
xor
fidivs
pop
xchg
bound
popf
add
xor
std
push
dec
mov
jmp
sub
cmp
dec
in
and
jnp
sbb
or
mov
out
pop
sub
lock
lds
sbb
inc
stos
mov
xchg
repz
jmp
sarb
ds
push
cmpsb
imul
jge
movsb
adc
adc
adc
jg
sbb
jnp
popa
jecxz
aad
dec
call
addl
call
inc
and
push
inc
ret
cmp
xchg
xchg
bound
xchg
divb
sbb
jb
outsb
lahf
jl
cmp
xchg
mov
nop
jmp
outsb
clc
mov
mov
and
ret
fisttpl
inc
and
or
dec
and
mov
jl
repz
notb
stos
jae
fwait
shl
sti
dec
in
add
xlat
pop
sub
daa
pop
and
popf
jbe
cmp
or
outsl
jge
push
int3
cmp
arpl
call
test
push
insl
pop
pusha
les
push
aad
sbb
in
cmp
out
jl
mov
and
inc
ss
stos
rcr
dec
ja
adc
clc
imul
mov
xchg
stos
movsl
das
jmp
push
js
hlt
dec
jg
cmc
pop
inc
push
insb
mov
aaa
sarl
xchg
pop
fs
hlt
outsl
divl
ss
push
mov
mov
adc
adc
xor
addl
in
and
lods
add
mov
imul
jmp
adc
cli
mov
and
push
mov
cmpsb
ja
ja
cmp
dec
mov
rcll
test
fsubr
ljmp
dec
out
push
xor
or
ja
inc
and
add
inc
imul
inc
iret
and
in
dec
enter
pop
mov
subb
inc
sbb
popf
insl
jecxz
xor
xchg
cmpsb
pop
add
and
adc
lods
jg
repz
incl
leave
int
daa
add
and
inc
cmp
mov
push
jl
mov
mov
sarl
mov
mov
in
aas
cmp
sar
sbb
cli
and
push
out
mov
lret
imul
testb
insl
pop
aad
pop
pop
lds
fiaddl
cmpsb
cmp
lahf
dec
inc
jg
insb
stos
lahf
jne
jb
mov
in
addr16
mov
scas
and
mov
or
sub
and
adc
sbb
jge
jg
testl
pop
stc
add
mov
sub
aaa
scas
mov
cltd
mov
pop
mov
xor
pop
mov
inc
call
xchg
and
push
and
mov
in
pop
aad
das
es
cmpsb
push
fistps
das
xchg
xor
dec
push
loopne
sub
pop
pushl
rcll
out
int
popa
add
or
loope
insl
iret
push
pop
icebp
dec
mov
push
pop
mov
addr16
jns
out
test
clc
adc
add
and
shl
test
insb
aaa
ds
cmp
mov
int
or
daa
mov
adc
out
pop
ja
dec
push
scas
pop
ljmp
xchg
push
push
cld
ja
sub
sti
pop
stc
aad
in
cmpsl
xor
inc
andb
mov
push
out
jl
mov
test
adc
mov
push
mov
dec
fimull
xor
dec
mov
adc
pop
or
inc
sbb
jle
mov
and
push
and
scas
jp
stc
fnstsw
jns
ret
ret
cmp
loopne
testl
jo
dec
push
sub
mov
lahf
fsts
fimuls
movsb
aad
jp
mov
push
nopl
in
dec
jae
stos
mov
push
push
jne
addl
jle
test
mul
insb
lret
aas
leave
fcmove
xchg
shrl
inc
mov
jno
ret
xchg
push
popf
sbb
sbb
sbb
sti
or
and
push
mov
xor
subl
and
insb
add
lret
mov
scas
pop
popa
loopne
adc
pop
mov
jp
cli
or
popa
fucomip
mov
mov
repz
cld
int
scas
push
push
fwait
daa
nop
lock
js
mov
lcall
fistpll
stc
inc
jbe
outsb
sbb
sub
push
fwait
pop
pop
loope
popf
cmp
mov
and
in
mov
xorb
cmc
fdivs
les
cmp
cmpsb
adc
aam
mov
out
mov
sub
fcmove
repnz
xor
scas
jge
aaa
inc
push
cmpsb
outsl
and
push
aam
cld
fists
loopne
xor
xor
xchg
xor
sbb
dec
ljmp
sub
cmpsb
call
jl
loopne
jnp
fwait
rclb
pop
test
mov
and
mov
xor
pop
inc
inc
sbb
scas
repnz
xchg
add
jns
jno
cmp
cmpsb
inc
and
ret
xor
mov
lods
jne
nop
mov
inc
movsl
in
xor
sbb
cmp
cmpl
mov
movsl
push
std
push
mov
mov
jg
jge
cwtl
xchg
xchg
and
mov
fsub
scas
into
jae
xchg
gs
dec
stos
mull
or
clc
xchg
push
lock
dec
sub
inc
lcall
fbld
add
mov
jecxz
sbb
xchg
cmp
push
out
test
ficoml
push
fildll
jnp
mov
js
lahf
xchg
jecxz
aam
fnstcw
out
rcl
test
pusha
test
cmc
or
push
lcall
int3
test
loop
mov
adc
imul
cmp
sahf
ss
fcompl
sub
js
xchg
call
mov
jl
cld
mov
movsb
jnp
lods
sbb
or
fwait
add
loope
mov
pop
js
sti
stos
fcompl
mov
cmc
sbb
push
mov
fwait
xchg
iret
and
insl
lcall
lea
adc
push
jecxz
les
mov
push
insl
add
int3
mov
sbb
inc
or
xchg
cmc
jae
stos
out
or
pop
fsub
inc
sbb
dec
and
stos
xchg
int
sub
lea
or
das
cmp
dec
sti
mov
mov
in
bnd
gs
dec
bound
js
je
sub
push
int3
pushf
sarb
push
repz
jo
sbb
and
mov
je
xor
push
popa
adc
or
or
dec
push
inc
inc
andb
inc
push
dec
jne
mov
scas
in
lret
push
fs
jmp
decl
dec
or
data16
dec
push
cmp
popa
cmp
fwait
gs
cld
aaa
sub
icebp
and
xor
and
imul
je
or
jbe
movsl
popf
dec
sub
mov
or
addr16
mov
test
cmp
jmp
dec
aad
mov
jecxz
fcmovnu
pop
sub
sbbb
rclb
mov
or
test
jp
lcall
lret
cmp
std
mov
fstpt
idivb
int
rcll
or
stos
jg
lods
jns
je
cs
lcall
inc
mov
push
test
ss
stos
adc
and
xor
lahf
lret
es
mov
or
pushf
call
and
test
push
loop
ficompl
push
jns
mov
lea
push
xor
lea
sbb
jmp
popa
es
je
fwait
add
lods
push
lea
push
test
sub
cmp
xchg
js
cmp
mov
loopne,pn
mov
frstor
jg
and
loope
inc
aas
idivl
jne
in
lods
ljmp
sbb
fdivl
push
cmp
add
bound
push
movb
xor
arpl
jg
out
call
push
jg
mov
sbb
jg
sub
insl
repnz
jbe
enter
jmp
pop
lock
test
cld
outsl
outsb
cmpsb
scas
jae
sub
cmp
int3
add
pop
fwait
push
loop
test
or
mov
xor
imul
outsb
js
sti
add
sub
adc
popa
inc
repz
xlat
sahf
iret
nop
ja
scas
fimuls
cmp
stos
cmp
aad
in
aaa
sbb
outsl
jp
add
imul
jmp
cmp
push
hlt
ja
and
out
cmp
shrb
lock
hlt
pop
mov
xor
hlt
cmp
insl
cld
ficoms
add
sbb
push
fisubs
mov
stos
push
or
jl
jecxz
icebp
loopne
xor
mov
or
ror
cmp
loop
pop
pop
mov
sbbl
vpaddq
and
mov
dec
in
lcall
dec
xchg
xor
jmp
pop
jb
cmp
testb
mov
lods
andl
mov
mov
mov
ficompl
or
cwtl
pop
scas
jp
mov
inc
orb
lock
leave
shrb
fwait
fwait
out
dec
jge
jecxz
andl
jb,pt
or
out
out
data16
sbb
mov
push
fldt
or
pop
cmp
mov
jne
pop
adc
shr
in
jnp
mov
jno
cmp
pop
xlat
push
out
mov
inc
inc
out
sub
inc
call
and
sahf
sbbl
loopne
cmp
int
ss
push
shr
jle
xchg
sti
add
out
jp
inc
mov
aaa
les
push
in
mov
cmp
cs
jnp
jecxz
add
inc
stos
add
lock
mov
in
cld
lock
mov
jle
sub
mov
outsl
mov
mov
mov
loope
test
inc
js
pop
shll
imul
fisubs
add
pop
jg
jge
sbb
pop
jae
iret
or
fimull
cmp
js
lods
iret
xadd
into
push
hlt
mov
jns
fs
das
jae
movsb
mov
push
sbb
shl
push
subb
cmp
stos
jb
xchg
popa
mov
les
loope
jecxz
fucomip
or
imul
mov
cmp
xchg
mov
jb
push
cwtl
roll
adc
lds
push
repz
pop
sahf
add
jg
or
out
and
or
add
mov
out
push
ficoms
xchg
pushf
frstor
mov
rorl
mov
mov
imul
movsb
cmp
pushf
pop
sti
sti
push
lods
das
mov
jg
adc
mov
xor
in
ljmp
gs
jmp
in
mov
push
add
or
push
adc
rol
scas
xchg
push
fsub
cmp
xlat
inc
outsb
test
add
jp
popf
int3
mov
test
pop
mov
ret
inc
gs
mov
push
sub
stc
arpl
scas
cmp
jo
push
and
insb
dec
aaa
sarl
xchg
cmpl
inc
sarb
adc
aaa
or
test
repnz
repz
xor
xchg
push
int
mov
shlb
xchg
cs
in
jle
xchg
lcall
rep
pop
inc
xchg
push
cmp
push
roll
rcrb
xor
divl
xchg
xchg
add
mov
lret
call
stos
lods
stc
mov
sbb
pusha
pop
je
test
or
je
es
insb
lods
sbb
mov
daa
sti
mov
fdivl
adc
stos
enter
xchg
sub
insl
xchg
cmp
xor
adc
jne
divl
adc
fsubs
dec
loop
iret
cmp
into
pop
and
rorl
into
test
scas
int3
xchg
cmc
fwait
leave
push
in
dec
lret
jbe
cmp
add
xchg
xor
stos
movsl
and
scas
repz
xlat
arpl
sub
xchg
fwait
cmp
loopne
cmc
cmp
shrb
jbe
hlt
repnz
xchg
popa
in
sti
iret
je
sub
and
bound
aas
jl
add
cmp
cmp
xlat
cli
push
arpl
ret
stos
aaa
adc
fistl
fists
mov
cli
movsl
mov
test
jne
in
sbb
cmpsb
das
pop
mov
or
mov
fidivrl
jbe
cli
push
lods
mov
stos
stos
test
in
mov
enter
cs
add
sbb
insl
push
jge
loopne
pop
mov
ss
or
pop
mov
add
test
repz
outsl
je
jp
js
sbb
mov
pop
shr
rorb
test
fldcw
dec
jo
ret
inc
icebp
dec
int
lcall
jle
and
jne
leave
cmc
mov
mov
push
cmpsb
sub
dec
int
out
rclb
mov
pushf
mov
test
add
push
loope
rolb
mov
add
and
sbb
dec
rep
fbld
scas
outsb
shlb
adc
mov
iret
sub
xchg
dec
js
mov
inc
inc
push
inc
mov
push
mov
loop
sub
add
jbe
mov
sub
mov
sbb
call
lods
flds
imul
mov
pop
enter
dec
aad
movsl
dec
mov
push
and
sub
inc
insb
je
add
add
js
dec
lds
and
test
aas
ss
add
inc
cli
cmpsl
push
add
fstpt
aas
jo
ds
shll
test
inc
mov
int
test
ss
movq
into
dec
jbe
into
insl
ror
or
or
rorl
in
mov
test
inc
bound
ss
xorl
adc
pop
lds
das
xor
cmp
or
sub
arpl
cmp
pushf
adc
mov
pop
dec
outsb
es
mov
or
testl
shrl
in
hlt
mov
sbb
jne
xor
into
ja
xor
inc
push
and
cmpsb
mov
scas
xor
mov
imul
push
rclb
mov
sbb
bnd
xlat
mov
int
mov
imul
rcrl
into
add
sub
nop
adcb
jle
push
cltd
lods
fistpl
inc
jg
push
lcall
jecxz
jae
and
mov
scas
push
mov
and
jae
pop
test
adc
pop
pushl
mov
push
mov
loop
fsts
imul
repz
rorl
in
fldt
negl
mov
jle
jbe
jl
pop
and
movq
or
cs
dec
cmp
jbe
fiaddl
in
je
test
dec
mov
lahf
dec
jle,pn
mov
and
into
insb
push
mov
inc
inc
cmpsl
jbe
rorl
shl
arpl
inc
or
xchg
push
pop
mov
mov
dec
insb
mov
iret
lcall
je
jp
rcrl
stos
pop
lret
add
adc
adc
test
or
pop
outsb
push
lcall
jmp
mov
scas
dec
xchg
scas
jnp
and
push
mov
pop
xlat
jp
aam
mov
sub
cmp
stc
push
mov
pushf
mull
stc
or
dec
bound
jo
push
push
and
ret
xor
push
insb
cwtl
push
inc
lods
mov
or
xor
adc
add
ss
xlat
sbb
ror
fdivl
fmulp
push
pusha
into
add
jmp
inc
pushf
gs
or
xchg
and
mov
imul
inc
pop
pusha
dec
pop
ret
and
jge
lahf
ficoms
fnstcw
imul
mov
cs
mov
lea
add
mov
mov
push
shrb
mov
cmc
xchg
cmc
jae
fstpl
rcrb
scas
repz
mov
or
xlat
arpl
mov
incl
data16
mov
add
pop
loopne
lret
pusha
in
imul
repnz
fs
fwait
out
ret
cmp
push
daa
push
sbb
rcrb
test
xlat
mov
adcl
pop
fidivrl
cs
fadds
int3
pop
int
inc
pop
cmp
aam
or
imul
hlt
jae
data16
sbbl
icebp
pop
sbb
and
mov
insb
dec
cmp
inc
jge
or
jp
cli
arpl
lcall
aad
cwtl
shl
jne
bound
or
pop
mov
pop
int3
dec
aaa
mov
pop
xchg
idivb
or
sti
rorb
outsl
loopne
stos
xor
adc
lcall
out
or
dec
cmp
repnz
mov
in
xor
xlat
ja
aam
lret
sbb
faddl
in
push
call
iret
inc
jle
dec
bound
loopne
pop
das
pop
or
shll
lea
pop
pop
sbb
lds
inc
ret
jp
pop
js
adc
add
fisttps
inc
adc
sbb
mov
mov
outsl
sbb
xchg
test
inc
insl
lock
adc
xor
sub
popf
gs
aas
adc
lahf
arpl
fs
cmp
sub
aas
dec
xchg
neg
xchg
call
fadds
lret
push
pop
mov
mov
hlt
lcall
xchg
ffreep
jnp
push
cmpsb
mov
and
cmp
mov
lcall
push
vmovss
mov
fsubr
lds
test
lcall
or
fcmovb
mov
and
push
repz
pop
jl
mov
pop
cmp
push
mov
inc
lock
push
sub
add
adc
fisubs
mov
fstpl
pop
ljmp
xchg
shrb
jo
jne
xor
iret
ljmp
adc
stos
mov
mov
scas
rorl
and
movsl
mov
in
mov
ret
loopne
in
push
jo
xchg
lcall
mov
mov
flds
ret
aad
orl
add
mov
cmpl
pop
iret
cmpsl
push
in
scas
cmpsl
testl
inc
repnz
xchg
mov
popa
xor
lds
insl
hlt
std
or
and
cmp
cmp
outsl
jg
or
and
ss
and
xchg
add
cmpxchg
and
jg
out
out
clc
cmp
scas
xor
or
mov
mov
scas
mov
sbb
enter
out
into
adc
jle
fisttps
mov
cmp
dec
fsubrs
jge
jg
push
mov
loope
sub
mov
sub
xor
cmp
pop
int3
std
xor
imul
xor
stos
push
sub
pop
inc
push
inc
and
mov
test
jl
push
movsb
cmpl
insl
mov
pusha
fisubl
sub
sbb
es
or
movl
dec
scas
out
mov
shlb
fistps
push
negb
fidivs
xchg
lock
add
push
pop
adc
andb
rcrb
mov
xor
lds
adc
daa
shrb
mov
pop
in
push
xchg
dec
sub
ja
or
jecxz
stc
inc
imul
cli
or
xor
lahf
loop
shll
push
pop
fidivl
jb
sbb
sbb
notl
rolb
jbe,pt
xor
mov
mov
xor
mov
inc
mov
cmpsl
xchg
and
fs
fisubl
and
sub
addr16
xchg
cmp
push
les
inc
je
cmp
or
sbbb
shrl
xor
mov
mov
arpl
dec
inc
push
push
mov
inc
adc
jmp
lods
pop
pop
andl
xor
pushf
xor
add
push
mov
ret
push
jb
in
pop
xor
hlt
sahf
mov
lods
movsl
repnz
jne
jl
rcrb
jecxz
or
xlat
add
jl
ds
mov
fimuls
pop
inc
jge
push
sbb
or
test
sbb
cmp
enter
aam
lcall
xchg
in
test
cmc
data16
mov
mov
mov
movsb
dec
lds
and
ret
ret
xchg
in
and
sbb
lcall
adc
push
adc
inc
loopne
xor
and
sub
pop
jne
and
mov
call
movsl
test
test
les
xchg
in
push
notb
push
aad
mov
pop
lret
xchg
movsl
dec
in
mov
jnp
cmp
icebp
outsb
lds
push
ret
out
mov
ret
movsb
push
xor
sub
imul
aam
mov
call
xor
add
dec
movsl
sub
inc
sub
loop
cmp
xchg
pop
jge
jne
jnp
dec
ret
leave
insb
or
adc
pop
fstp
out
push
into
sbb
add
repnz
outsb
loope
mov
pushf
and
cltd
add
mov
movsl
lods
sahf
es
jo
roll
or
orb
pop
addr16
dec
pop
out
mov
add
pop
ss
insl
xchg
jnp
clc
cmp
dec
jae
fdivl
xor
icebp
lock
shll
jne
int3
hlt
notl
in
shrb
std
stos
lods
in
push
push
data16
cmp
pop
sti
test
mov
jno
jnp
loopne
sahf
cmpsl
fwait
jmp
pop
push
loope
sub
imul
mov
sub
outsb
imul
aaa
pop
xor
sub
cmp
inc
add
sub
aad
or
mov
rcrl
xchg
test
xorw
mov
inc
je
cli
in
cmp
lcall
test
and
mov
jp
xchg
mov
pop
jmp
mov
and
inc
cmp
stos
lods
loopne
push
inc
mov
and
sub
xor
push
jnp
pop
outsl
inc
and
jno
into
push
jbe
fmuls
pop
inc
loop
dec
mov
cmpsl
loop
sub
xlat
add
les
sahf
fstl
add
lods
in
cmp
mov
push
xor
rorl
loopne
ss
lods
aas
mov
test
push
nop
popf
lcall
pop
and
xlat
inc
rcll
stc
test
out
outsb
jno
mov
cmp
leave
enter
sbb
pushf
jb
inc
decb
jb
or
aas
push
xchg
sub
aam
cmp
inc
push
inc
inc
jbe
xchg
into
sub
push
jbe
aaa
adc
xor
addr16
test
dec
jno
into
add
ss
mov
subl
movsb
pop
cmp
lds
addl
test
das
mov
or
std
cld
cmc
jge
ja
pop
test
mov
arpl
or
jmp
mov
or
test
sbb
push
test
dec
mov
popa
lods
or
push
sarl
mov
or
pop
cmpsb
sbb
mov
push
pop
je
rol
mov
adc
jg
adc
push
mov
cmp
cltd
push
mov
mov
pushf
movsl
jns
dec
jl
mov
xchg
inc
sbb
sti
fdivrl
loopne
push
ja
jmp
dec
sbb
loopne
lods
adc
jb
sub
out
sub
mov
push
out
xchg
xchg
push
call
xchg
mov
mov
mov
inc
add
ds
mov
push
or
test
lahf
mov
imul
or
sbb
popa
mov
dec
xchg
call
jno
sarb
nop
dec
pop
jae
xor
dec
dec
ja
aam
jne
inc
jp
jg
inc
bound
mov
shll
lahf
mov
clc
push
mov
add
pushf
subl
pop
xchg
ret
jp
sbb
fwait
idivl
push
je
incl
dec
fistps
mov
mov
fwait
dec
jl
insb
xor
sbb
mov
subl
pop
jl
sbb
icebp
pop
push
inc
jne
mov
and
jge
jmp
sbb
lret
pop
jae
orb
adc
xor
mov
outsb
push
adc
and
sbb
lret
mov
inc
cvttsd2si
adc
scas
push
lret
insl
sbb
dec
mov
adc
jo
imul
inc
fwait
cld
lcall
das
sbb
scas
push
cli
icebp
scas
pop
sub
loopne
adc
xchg
bound
adc
loopne
sbb
cmp
into
sbb
add
mov
jno
inc
fsubrs
pop
jmp
jp
adc
cmp
aaa
pushf
lret
rclb
sbb
cmpsl
sub
xchg
cmp
nop
popa
repnz
sbb
jp
shll
hlt
push
dec
movsl
ljmp
sbb
in
cmp
cmp
jle
push
out
mov
sarb
pop
inc
leave
clc
ds
inc
or
cmpsl
inc
repnz
xchg
jns
push
out
adc
xchg
fwait
in
push
fidivrs
push
sub
sub
mov
ljmp
ret
movzbl
mov
mov
into
lret
dec
mov
mov
mov
mov
pop
xchg
dec
cltd
mov
pmulhw
sti
cmpsb
ret
push
addr16
cmpsb
mov
xor
pop
push
adc
scas
sti
fbstp
loop
lock
push
push
ret
pop
pop
inc
and
mov
xchg
and
xchg
adc
pop
insl
pop
xor
and
xchg
push
test
cmp
push
scas
jg
add
sub
loop
or
arpl
clc
or
lods
shlb
imul
aas
cmpsl
xchg
inc
add
push
jge
dec
dec
and
adc
fdivrl
mov
and
mov
cmpsl
xor
js
dec
push
sarl
jp
jecxz
mov
iret
out
lahf
jnp
and
int3
inc
add
test
mov
push
pop
hlt
cpuid
inc
sbb
lcall
sub
adc
jg
popa
rcr
std
xor
fcmovnu
les
xor
xor
dec
sbb
lea
fwait
in
arpl
add
push
xchg
fdivs
lds
inc
cltd
popa
shlb
dec
lret
js
push
mov
inc
fidivl
movsb
inc
adc
or
push
push
sub
movsl
xchg
xor
repz
test
dec
pusha
push
fistpll
push
cltd
inc
push
into
rcrl
rorb
int
scas
arpl
test
sbb
xor
insl
jge
rcl
mov
daa
mov
das
and
push
add
jbe
sub
or
lret
mov
in
cltd
repnz
fsubrs
jae
push
pop
lods
ret
and
inc
add
lret
rcr
and
push
test
stos
fwait
xchg
mov
aaa
int
xchg
jecxz
sub
pop
cmp
xchg
icebp
mov
fildll
out
test
add
xchg
mov
sti
mov
fstpt
sahf
pop
lods
mov
sub
push
xchg
enter
aam
rorb
adc
stos
and
addr16
dec
mov
sub
mov
pop
std
inc
mov
in
pop
in
mov
sbb
insl
sahf
jb
or
mov
mov
or
das
lcall
add
inc
jle
icebp
push
ds
jnp
pop
in
data16
insl
je
mov
jbe
xor
stc
and
fs
pop
pop
sbb
xlat
es
cltd
cwtl
in
adc
jle
repnz
add
nop
xor
ljmp
incl
pop
insb
lcall
mov
lret
sbb
xor
and
int
mov
inc
aaa
arpl
push
jo,pt
in
add
mov
daa
rcll
mov
xor
pop
mov
add
xor
xchg
add
scas
push
mov
xchg
std
and
cld
mov
mov
jmp
mov
out
cli
adc
mov
add
pop
mov
idivb
mov
sub
daa
js
mov
mov
or
in
and
nop
dec
pop
or
ja
or
fdivrs
ret
mov
xchg
xor
lcall
mov
ja
pop
cmp
inc
ss
fwait
ss
icebp
repz
jnp
rorl
outsl
outsl
flds
inc
jno
ret
call
add
int3
sub
out
sub
cmp
push
jecxz
test
aam
js
jg,pn
push
je
ret
or
and
and
dec
xor
adc
int3
xchg
adc
mov
xchg
in
lahf
sbb
adc
cmpl
outsl
test
xchg
cltd
inc
adc
mov
sub
roll
scas
pop
dec
cmpsb
mov
mov
cmc
dec
dec
xor
dec
repnz
pop
movsb
adc
out
adc
and
xchg
mov
cmpsl
cltd
sbb
mov
push
and
pop
imul
nop
lret
clc
insb
add
test
call
mov
pop
in
cld
vcvtss2si
add
rcr
jo
dec
and
leave
fidivs
and
mov
fsubrs
cmp
popf
incb
fildl
mov
out
out
sub
out
scas
xorb
jle
fisubrs
dec
fdivl
push
adc
xor
scas
and
mov
push
or
fucomip
and
rorl
stos
push
mov
lret
in
mov
bound
iret
enter
ret
xchg
and
push
add
push
xor
or
lret
mov
clc
lcall
jno
aam
add
jl
and
add
cs
daa
pop
jge
xor
or
xor
cmpsb
xchg
and
xlat
fldenv
xor
testl
repz
add
or
mov
mov
inc
sub
mov
loopne
incb
jg
dec
mov
imul
xchg
sti
add
ret
mov
push
sbb
mov
push
jnp
dec
iret
not
pop
pop
xchg
pop
leave
cld
cmp
or
mov
or
roll
jecxz
das
pop
jmp
call
clc
ja
int
inc
sub
js
out
sub
adc
jns
dec
je
push
lret
shll
daa
pop
jle
scas
data16
andb
lahf
and
in
js
add
pop
clc
pushf
fnstcw
cmp
inc
iret
and
jo
test
jns
sbb
pop
mov
mov
or
out
ret
negl
pop
ja
sub
pop
xchg
pop
sbb
stos
das
sar
add
mov
jmp
mov
inc
imul
flds
jnp
push
sbb
jb
repz
test
xchg
pop
inc
inc
popa
dec
hlt
inc
adc
mov
aam
ret
rcrb
imul
jmp
aas
xchg
add
xor
lea
inc
mov
ret
add
cmp
aad
int
mov
fisubrs
pop
mov
sbb
add
and
inc
int
dec
imul
jg
sub
pop
out
dec
mov
xor
mov
cmp
call
aaa
xchg
mov
divb
out
bound
fadd
inc
pop
push
iret
adc
lds
inc
cmp
sub
mov
int
sub
in
ret
clc
cltd
xchg
sub
cli
mov
cmp
xlat
out
pop
jp
mov
push
das
jp
sub
mov
out
mov
pushl
test
pop
pop
and
subb
out
dec
adc
das
mov
pop
fcmovb
aam
xchg
push
leave
cmp
push
je
cmp
adc
in
xor
mov
mov
js
cmpsl
mov
leave
inc
pop
cwtl
outsl
push
xchg
mov
push
xlat
test
lods
mov
xchg
jns
xlat
scas
test
lods
add
push
sbb
ds
adcb
and
enter
or
pushf
ror
out
imul
pusha
rclb
icebp
or
xor
or
mov
mov
or
and
std
fs
jb
or
enter
xchg
push
add
icebp
sub
int
xor
adc
xchg
and
xchg
shr
out
test
ret
sub
xchg
sbb
mov
stos
faddl
les
fdivrs
inc
mov
movsb
int
stos
adc
cmp
shrb
pop
out
push
out
test
inc
into
scas
jnp
cmp
push
push
add
ljmp
jo
mov
inc
lock
cmp
das
jecxz
pop
fcomps
push
and
jl
sbb
aas
lods
jp
aad
aas
and
ret
repz
sbb
test
jne
jp
mov
movsb
pop
xor
stos
jle
add
jne
scas
adc
dec
or
das
mov
gs
jne
fsubrl
jg
or
inc
orb
lock
mov
dec
inc
lcall
ss
arpl
or
jge
out
aam
dec
cmp
xorl
cmp
or
addr16
mov
sub
dec
in
lds
pop
xor
or
loop
mov
in
fdivs
and
jns
xchg
test
icebp
inc
jne
ljmp
mov
in
dec
aas
cmpsl
mov
movsl
sbb
fcmovnb
cmc
add
push
push
fildll
push
rolb
sub
xchg
inc
shr
lock
cmpsl
les
cwtl
dec
arpl
adc
lret
fs
icebp
cwtl
push
aad
cmc
test
in
adc
sbb
sub
pop
mov
repz
ds
cmc
dec
and
scas
je
mull
iret
jl
sub
cmp
jae
mov
inc
ja
arpl
sub
xchg
inc
fistl
cmpsl
aas
sbb
lods
jnp
jbe
xchg
out
inc
cmp
ljmp
cmp
loopne
push
aaa
cmpsl
fisttps
loop
jp
add
inc
loopne
cwtl
dec
xchg
shl
push
xchg
sbb
adc
pusha
push
in
mov
subl
adc
ss
pop
xchg
xchg
push
mov
xchg
js
sbb
out
adcb
pop
add
adc
repz
dec
push
into
jno
xor
lods
lcall
int3
rcll
hlt
sub
aad
mov
lods
loopne
adc
sub
mov
cmp
sub
cmp
je,pn
sbb
xor
imul
orb
shlb
lret
out
ret
sti
cltd
inc
out
leave
test
mov
xchg
lods
add
mov
scas
push
fwait
mov
push
out
xchg
lret
fisubrs
mov
popf
sub
cltd
jns
sarl
cs
or
sbb
lahf
adc
icebp
out
add
clc
cli
mov
pop
iret
pop
nop
inc
jl
pop
push
stos
jns
scas
call
sbb
test
cmpsl
dec
aaa
sub
loope
aas
into
int3
or
fldl
in
pop
aaa
mov
mov
sbb
cmp
jge
int3
imul
ds
pop
xchg
pushl
and
insl
sub
and
bound
mov
clc
sub
pop
bound
push
pushf
repz
adcb
sar
push
cmpsb
adc
das
ret
dec
sub
insl
mov
mov
or
adc
je
das
xor
insl
inc
ds
in
lcall
jne
aaa
movsl
mov
pop
lods
pop
jge
popf
sbb
sub
fs
subb
mov
mov
pop
dec
xor
lods
clc
xchg
out
mov
popa
stos
scas
cld
fistps
test
std
scas
mov
ret
mov
insl
test
in
ds
add
test
lods
cmpsl
add
cli
jl
scas
cmc
incl
push
inc
lcall
out
test
ret
mov
mov
cmp
gs
jne
cld
push
push
sahf
pop
push
pushl
les
push
sbbb
lea
int3
mov
loop
mov
test
and
cs
or
or
jno
pop
mov
dec
jp
incl
addl
fsubrs
inc
dec
mov
bound
repz
addr16
push
mov
push
jns
mov
scas
in
xor
mov
push
adc
les
cmp
xchg
push
and
mov
jb
jbe
mov
dec
or
jo
mov
dec
scas
lods
cltd
xchg
inc
sbb
push
loopne
mov
out
outsb
mov
mov
pop
clc
and
or
and
or
mov
xchg
in
out
mov
sub
xabort
jle
jl
scas
fsubl
testb
or
xor
sbb
ror
aam
in
lock
jl
xchg
std
insl
pop
sbb
xchg
pusha
add
xchg
push
pusha
pop
arpl
adc
jg
inc
aas
call
pop
mov
ds
cmc
push
int
xor
stc
out
out
hlt
fistps
mov
bound
inc
hlt
iret
cmp
cwtl
cld
outsb
inc
rcrl
adcb
hlt
xchg
fwait
and
inc
jns
mov
add
add
roll
gs
adc
or
sub
add
mov
pop
mov
lcall
int
dec
pop
push
push
cmp
mov
stos
repz
push
sti
push
jnp
pop
out
loope
sbb
cmc
dec
mov
sub
roll
into
push
xlat
fmulp
je
test
cltd
lods
into
dec
inc
fstl
sbbb
add
xor
add
in
gs
push
test
sub
jle
les
ss
movsb
fadds
mov
fisttpll
fidivrs
in
pop
aam
or
jmp
inc
sub
pop
xchg
mov
pop
clc
xchg
outsb
pop
or
add
outsl
xorb
test
push
cwtl
sbb
sub
pop
stos
inc
pop
mov
mov
outsb
push
mov
jbe
int3
enter
xchg
cmpsl
pop
mov
inc
dec
repz
mov
sbb
test
aaa
dec
adc
lret
inc
cwtl
leave
cmc
or
inc
iret
arpl
adc
aaa
adc
nop
xchg
call
dec
dec
aam
mov
jae
lds
mov
lahf
seto
and
lods
pop
loope
cwtl
mov
insl
sub
je
add
idivb
jmp
mov
into
sub
pop
les
enter
xchg
and
ret
dec
push
adc
add
mov
push
and
jns
jns
je
stos
and
pop
mov
movsb
push
sbb
xchg
mov
enter
push
sahf
pop
pusha
call
jg
enter
mov
popf
mov
sub
add
loope
xchg
les
mov
jnp
lcall
mov
pop
sbb
pusha
push
mov
dec
mov
lods
test
sbb
cmp
je
loopne
into
xchg
xor
test
mov
testl
div
loopne
shlb
mov
mov
into
push
lea
xchg
stos
ret
inc
mov
pop
das
inc
mov
outsl
imull
adc
pop
js
or
loope
das
popa
xchg
dec
mov
enter
add
pop
imul
or
inc
sub
out
or
push
xchg
pop
icebp
dec
fdivrs
push
cmp
inc
mov
sub
push
mov
push
cltd
shll
jp
outsb
lret
stc
addr16
lahf
jl
xchg
mov
nop
fldt
mov
loop
sbb
adc
cmp
inc
int3
xor
mov
js
jp
pop
mov
xchg
pushf
xor
movsb
pop
sub
rcll
sbbb
push
adc
mov
dec
in
fstp
xor
adc
sahf
lods
nop
loop
sub
cmpsl
xor
mov
icebp
jl
ljmp
lock
cmp
imul
mov
cltd
mov
rcrb
add
push
ljmp
jno
jge
repz
push
dec
pushf
pop
mov
out
mov
push
jne
mov
or
dec
je
cmp
and
add
and
cmp
mov
dec
and
jl
dec
aas
filds
insl
jecxz
in
sub
jg
add
push
enter
scas
push
mov
lods
lcall
test
hlt
cmpsl
and
add
inc
push
mov
shlb
mov
inc
mov
push
push
push
fwait
icebp
imulb
int3
les
mov
xor
mov
xor
jae
mov
cmpsl
hlt
data16
or
jp
rolb
leave
call
cltd
jns
add
in
loopne
call
bound
insl
test
gs
add
or
or
mov
ja
dec
cmp
cli
cmc
arpl
dec
jmp
mov
xchg
ja
dec
push
xchg
jle
in
mov
adc
pop
xchg
cmp
sbb
push
mov
xchg
pop
cmpsl
popa
shr
pop
fwait
inc
fldcw
imul
mov
orl
scas
mov
fistps
xor
hlt
insb
fcoml
adc
xchg
xchg
movsl
mov
into
cmp
popf
dec
cmp
mov
sbbb
pop
and
lds
push
bound
add
cmpsl
aas
mov
pop
mov
push
es
push
outsb
je
shlb
sbb
pop
std
ljmp
imul
mov
sub
out
jle
mov
scas
pop
int3
pop
xchg
inc
insl
sbb
and
movsl
jae
inc
dec
sub
jnp
xchg
mov
mov
fnstcw
sub
mov
inc
test
and
mov
jo
in
add
repz
mov
inc
in
sbb
jae
jecxz
scas
and
fwait
pusha
lock
xchg
dec
xor
pushf
cs
push
shlb
cmp
sbb
cs
cmp
pop
into
or
clc
xchg
sub
pop
xor
popa
fcoms
popf
sbb
push
cmp
in
or
movl
rolb
bound
jge
insb
enter
mov
dec
mov
mov
loopne
push
outsb
sbb
imul
jo
and
fcmovu
int3
ljmp
icebp
mov
pop
out
or
mov
pop
push
adc
lock
aas
jns
fsubrl
xor
mov
mov
jg
pop
int3
repz
sarb
sbb
insb
add
and
jmp
les
test
add
pop
xlat
pop
push
mov
and
dec
and
and
mov
adc
jne
push
aas
jbe
mov
loop
and
cltd
push
rcrl
push
mov
lret
rcll
cmpsb
dec
pop
pop
sub
mov
lret
insl
pop
push
lods
and
pop
daa
icebp
jo
cld
push
sbb
mov
arpl
inc
in
cmpsb
jns
fnstsw
mov
jno
bound
mov
mov
cli
scas
data16
sub
lods
and
sbb
xor
imul
int3
test
jg
push
sbb
dec
lock
cmpsb
fmuls
outsl
ret
repz
mov
and
sbb
add
out
fs
outsb
dec
repz
mov
xlat
jmp
mov
cmpsl
mov
arpl
fdivrs
test
fs
sub
ja
mov
int3
cmp
arpl
vandnps
insl
pop
inc
inc
sbb
outsl
push
fstpt
stc
outsl
int3
test
sub
inc
shrb
inc
outsb
idivb
fsub
cli
pop
insl
jbe
test
lahf
dec
fwait
or
mov
jbe
xor
test
add
inc
and
and
xchg
jnp
sub
push
jmp
shlb
push
scas
push
scas
ss
dec
and
cmp
in
insb
dec
jg
cwtl
mov
mov
inc
pop
sub
mov
popa
pop
sub
adc
mov
push
mov
insl
stos
stos
sbb
setg
and
stc
pop
sarb
push
jle
xor
xchg
fbld
fwait
jle
add
push
popf
jne
cli
stos
jnp
lods
or
xorl
push
pop
cs
dec
enter
loope
lock
mov
fwait
sub
loopne
cmp
leave
add
sbb
testl
xchg
xchg
cmp
in
cmp
sbb
mov
mov
clc
aaa
repz
fs
push
daa
or
cld
push
xor
pushf
fs
mov
and
adc
test
xlat
jnp
mov
sahf
sbb
insl
push
push
jmp
inc
sbb
pop
inc
cmp
ja
pop
sahf
and
mov
lds
cli
xor
xor
mov
sahf
mov
mov
jnp
pusha
jmp
ds
mov
dec
ljmp
adc
dec
insb
fst
pop
fdivrs
daa
sbb
or
enter
orb
insl
mov
loope
xor
xlat
lret
or
xchg
sbb
add
jbe
imul
jno
cmp
sbb
mov
cmp
or
call
push
stc
js
into
mov
outsb
mov
mov
sbb
leave
out
lret
xchg
scas
add
sub
shlb
stc
sub
aad
mov
pop
cmpb
movl
cmp
fsubr
imul
frstor
sub
shrl
mov
cmc
mov
push
subb
xchg
add
mov
repz
inc
imul
pop
insb
rclb
leave
mov
push
aad
dec
jle
inc
xor
jns
hlt
je
cmp
mov
int
adc
xchg
shll
sbb
dec
mov
hlt
or
popf
mov
nop
xchg
and
popa
pop
adc
inc
shll
xor
push
sbb
hlt
mov
pusha
ficoms
icebp
stos
call
mov
mov
and
xorb
sub
out
push
daa
sub
shl
push
pop
cmp
xlat
dec
mov
and
arpl
xor
out
mov
lcall
in
outsb
jns
pop
frstor
aad
sub
aas
rcr
lods
xchg
dec
sub
pop
fwait
add
xorl
pop
inc
inc
ljmp
aaa
xchg
cmp
testb
cmc
or
add
imul
sub
mov
jae
das
mov
lret
mov
push
push
and
inc
roll
les
lret
icebp
dec
push
add
arpl
aam
xor
sbb
xor
out
inc
mov
xchg
mov
adc
daa
movsl
mov
adc
add
fs
enter
aas
xchg
repz
xchg
mov
sbb
int3
mov
cli
cs
sub
sub
je
mov
jno
add
mov
add
roll
mov
in
pop
pop
xor
test
out
sbb
out
imul
xchg
jnp
pop
sub
ja
subb
imul
test
cmp
sti
push
dec
add
sbb
ss
fadds
or
cltd
xor
loope
addb
cltd
sub
adc
jmp
mov
call
test
pop
add
adc
stc
dec
xchg
xchg
inc
add
pop
xchg
or
outsb
push
mov
pxor
dec
fisttpl
arpl
fistpl
stos
outsb
jp
sub
dec
xor
sahf
mov
stos
sub
and
aad
imul
sbb
lea
out
sbb
cmp
dec
push
out
mov
mov
jmp
aas
arpl
dec
jns
inc
or
mov
pop
mov
dec
or
das
and
icebp
push
js
loopne
into
les
mov
push
and
cmp
cmp
in
dec
mov
lcall
aas
test
gs
mov
repnz
mov
arpl
jge
insl
cmp
clc
test
imul
mov
pop
into
mov
add
mov
and
cli
add
add
push
testb
fwait
stc
push
test
adc
int
in
sub
dec
mov
dec
mov
imul
sbb
mov
mov
aas
mov
mov
inc
inc
out
or
cmp
adc
xlat
or
push
insb
adc
pop
fiaddl
cmp
xchg
add
mov
xlat
xchg
stc
fisubrs
cmc
mov
mov
dec
pop
adc
inc
inc
or
loopne
jge
xchg
sbb
pop
dec
inc
into
cli
leave
out
pop
mov
and
cmpsl
and
xchg
cld
mov
cmp
in
xor
add
xor
mov
and
ja
sub
or
jae
cmp
add
mov
mov
mov
mov
faddl
mov
inc
jo
test
test
nop
sbb
cltd
lret
or
rcrb
in
dec
cmp
cwtl
xlat
add
into
or
mov
jge
jae
pop
dec
xchg
adc
das
popl
ja
dec
and
lds
push
sbb
pop
mov
mov
ret
xrelease
mov
pop
nop
test
in
and
add
jmp
jl
cwtl
inc
jg
mov
fwait
and
mov
shrl
push
xor
pop
mov
and
addr16
cmp
and
iret
xor
aam
cmp
adc
mov
push
add
pop
add
jmp
pop
sub
inc
push
jl
ret
inc
and
push
test
mov
dec
loope
mov
mov
lods
movsl
jbe
out
pop
xchg
test
fldenv
cld
add
repz
pop
aaa
shrb
ret
dec
js
hlt
dec
addr16
fisubl
adc
mov
test
mov
and
adc
or
xchg
add
mov
ja
inc
cmp
or
mov
clc
mull
or
sahf
mov
inc
lods
rorl
xchg
adc
push
jg
pop
fbld
or
cmp
mov
mov
sahf
sbb
and
mov
sbb
adc
outsl
dec
inc
xchg
lock
pop
gs
daa
fnstsw
sti
cmpb
incb
lods
andb
loop
incb
aad
call
pop
xlat
and
dec
lds
inc
or
bound
orl
cmp
jge
lea
ja,pn
adc
push
fwait
add
sti
mov
inc
push
xchg
cmc
das
jne
sbb
sub
repnz
sar
push
mov
jl
xchg
lods
push
lret
loopne
int3
pop
popl
jmp
dec
orl
arpl
das
cs
cmp
lcall
or
test
pop
es
xchg
mov
fwait
sti
adc
push
jg
out
cmpb
push
sahf
and
fs
or
dec
adc
leave
push
xchg
push
sarb
lcall
sbb
pop
xchg
notb
lcall
pop
sbb
jl
push
sbb
dec
cmp
shll
lret
and
daa
das
jno
jecxz
rorb
add
cmp
aas
xlat
mov
add
adc
out
ret
inc
pushf
push
adc
cs
dec
stos
sub
inc
bound
adc
aad
aad
dec
loop
mov
ds
in
adc
cmp
lock
daa
xchg
adc
fxch
xchg
fwait
scas
cld
sbb
sub
nop
rcl
mov
cmp
add
stos
movsl
int
mov
jmp
out
sub
popf
xchg
mov
mov
cwtl
sub
cmc
mov
xchg
sbb
idivb
cmp
sub
repnz
shrb
cmpsb
mov
add
or
sub
sahf
add
mov
inc
stos
iret
les
test
add
dec
repz
inc
lret
push
clc
xorl
jmp
popf
adc
xor
push
test
fbstp
lock
mov
imul
adc
mov
xchg
jns
mov
dec
dec
call
sub
pop
or
pusha
test
xor
sbb
lock
xchg
lret
daa
fisttpll
mov
loope
pop
mov
hlt
xor
push
jb
icebp
repz
stc
mov
and
push
add
loop
sub
sbb
mov
xchg
imul
sar
mov
dec
movl
push
pop
cs
rorb
mov
es
pop
mov
dec
jae
lret
fisubrs
xor
rorb
and
negl
dec
inc
xor
fmuls
pop
test
mov
jns
out
sub
bswap
in
cmc
gs
sub
enter
and
or
dec
pusha
or
cmp
add
dec
push
sbb
inc
mov
pop
test
xchg
sbb
jecxz
fstpl
cmp
xor
cmp
icebp
ja
mov
jl
sahf
xlat
inc
loope
mov
sbb
mov
in
daa
mov
mov
fwait
mov
out
push
cmp
add
adc
xchg
fsubs
decb
jb
adc
xchg
inc
or
push
pop
sarb
sbb
pop
sbb
or
es
movsb
fadds
adc
xchg
daa
fnstcw
sbb
and
call
mov
rcrl
mov
sub
push
dec
dec
xchg
jno
mov
js
add
sub
cmp
les
sub
ret
aad
mov
push
aam
jge
push
imul
or
mov
jmp
jae
cmpsb
mov
cmc
in
jp
roll
dec
sub
jle
imul
std
pop
out
jne
adc
cld
jmp
stos
adc
sbb
add
ss
loop
adc
es
fs
rol
imul
cmp
fsts
and
movsb
push
loope
adc
pop
cmp
sub
imul
and
sahf
inc
pushf
test
pop
inc
push
cmp
or
clc
cmpsb
dec
xchg
and
mov
inc
mov
or
inc
repnz
inc
mov
ja
xchg
dec
dec
xchg
pop
in
mov
sbb
dec
out
or
scas
push
push
push
jnp
fwait
popf
ret
push
int
aaa
data16
insb
xlat
cs
or
jg
xor
cmp
out
xchg
or
or
add
stc
mov
mov
imul
cmc
gs
lret
cld
inc
sub
mov
ret
loopne
call
mov
pop
sarb
mov
or
add
shlb
iret
out
stc
xchg
aaa
dec
jmp
decl
push
mov
subb
mov
adc
jle
push
mov
popa
sub
test
insl
loopne
mov
pop
push
arpl
inc
inc
inc
loopne
popf
add
test
cmp
cmp
sub
sbb
scas
mov
hlt
inc
pop
xchg
fmull
aaa
mov
push
fwait
aad
jg
xlat
push
and
cmpb
inc
pushf
xlat
mov
dec
and
jo
mov
cltd
ja
scas
xchg
xchg
lea
fbld
cltd
and
xchg
inc
sub
jno
mov
bound
cmp
lret
sbb
ret
shll
sarb
enter
outsl
std
int3
jno
mov
and
addl
lds
jmp
mov
mov
cmp
mov
or
psubw
or
jecxz
xorl
fmuls
cmp
addb
sbb
push
loope
fmull
jecxz
iret
dec
loop
stos
inc
mov
in
lock
lret
insl
mov
mov
scas
sbb
mov
arpl
leave
in
and
cmp
cmp
mov
sub
movsl
dec
inc
and
mov
xor
mov
jne
mov
test
xchg
push
std
or
push
mov
add
sarb
sar
jns
mov
inc
mov
mov
outsl
fnstenv
sub
nop
out
jae
xor
mov
adc
adc
add
xlat
clc
and
cmp
adcb
sbb
sbb
je
xchg
shl
insl
movsl
fucomi
sub
lret
aam
bound
mov
dec
outsl
dec
test
xchg
push
stos
jne
push
lds
outsl
sbb
leave
ja
outsb
cmp
jb
and
push
int3
pop
pop
scas
ds
movsl
lds
mov
repnz
aad
std
mov
stc
jp
inc
dec
dec
bswap
sbb
test
pop
dec
pop
jle
mov
cs
sbb
out
pusha
nop
enter
je
jmp
mov
dec
jecxz
outsl
xor
jbe
mov
adc
dec
dec
cs
xor
insb
stos
dec
xchg
fwait
std
test
pop
mov
iret
add
inc
cmp
add
inc
insl
addl
lea
xchg
xchg
or
adc
xor
mov
adc
mov
or
push
rolb
mov
mov
push
ds
fcoms
adc
rolb
icebp
push
inc
sbb
sahf
mov
add
and
fimuls
fwait
ds
xlat
sarb
icebp
out
jns
push
roll
in
into
lods
movsb
sbbl
adc
pop
or
cmp
leave
hlt
lret
lock
hlt
dec
mov
cli
xchg
xor
fdivp
sbb
or
pusha
outsb
lcall
jnp
xchg
jecxz
sub
mov
pop
xchg
cmpsl
bnd
into
popa
das
xor
xchg
rclb
fs
int3
mov
nop
test
xchg
lds
cmc
jecxz
dec
sahf
insl
movsb
int3
jmp
loope
mov
aam
leave
aad
lret
push
in
dec
out
xchg
test
jle
mov
mov
pop
enter
loopne
jg
cld
and
xchg
mov
ficomps
adc
mov
cmp
pop
adc
push
loopne
popl
or
dec
pop
mov
mov
inc
or
or
or
repnz
std
enter
lahf
mov
idivb
stos
pop
enter
loopne
les
in
xchg
rolb
cmc
cwtl
ret
mov
xchg
ret
lods
push
dec
movl
mov
jmp
cmp
xor
xchg
push
add
dec
pop
rcl
enter
fimuls
jno
stos
and
xor
fnstenv
lods
imul
icebp
movsb
daa
daa
loope
pop
xor
es
iret
imulb
pushf
or
pop
ds
push
in
rorl
xor
enter
or
jae
jl
fstpl
shlb
out
pop
mov
inc
outsb
and
ja
pusha
dec
or
scas
add
cwtl
add
adc
movsb
adc
fistl
fcmovnu
adcb
testb
lea
insb
cltd
mov
xor
into
ljmp
jle
inc
in
fwait
lds
xchg
cmp
mov
sbb
inc
jle
dec
sbb
lds
data16
xchg
ds
lret
fsts
inc
mov
lret
mov
mov
fucom
xor
icebp
xor
dec
fsubrl
orl
xor
mov
ja
ss
cmpsb
push
xor
lds
mov
jbe
xchg
mov
cmp
mov
scas
pop
jp
out
or
lret
push
cmpsl
sub
mov
sbb
add
add
fldln2
dec
mov
hlt
xor
das
stc
test
imul
arpl
pop
push
test
mov
aas
insl
sub
sbb
cmp
in
cmp
loopne
outsb
mov
in
rcll
push
sarl
imulb
push
pushf
data16
jo
mov
or
shll
mov
mov
push
cld
dec
add
and
mov
fs
sar
cmp
insb
jl
in
cmc
call
inc
jns
in
and
mov
mov
in
cwtl
hlt
xchg
jg
inc
les
or
xchg
fdivrl
sahf
jecxz
cmp
fidivrl
jle
pop
xor
pop
or
push
es
sub
xchg
jne
test
data16
test
cli
fstpt
rorb
test
popa
cmp
nop
fbstp
mov
in
or
mov
into
orb
push
or
mov
push
pop
pusha
inc
insb
cmc
xchg
push
pushf
jle
mov
std
xchg
lea
cmc
sub
cmpl
jo
mov
and
lret
scas
loopne
or
nop
sbb
icebp
outsl
xor
cltd
cli
push
lods
lahf
cwtl
push
ljmp
pusha
xor
and
cmpsl
pop
pop
sub
push
cvtps2pd
ret
orl
cmp
test
xchg
mov
mov
lods
mov
cmp
jne
insl
jne
int
lahf
xchg
jmp
lods
outsl
in
adcl
adc
add
into
lret
int3
int
loop
leave
mov
adc
js
or
adc
cmpb
lock
lcall
sub
xor
sbb
lret
jl
and
clc
sub
aas
sbb
repnz
xchg
mov
xor
cld
push
mov
adc
pusha
loop
mov
ss
sub
wrmsr
inc
jmp
or
or
lock
repz
xor
mov
add
inc
cmpsb
sahf
sbb
mov
popf
and
int
pop
cltd
or
sbb
ret
and
mov
xchg
fprem
inc
sub
xchg
push
iret
fs
and
inc
inc
jo
inc
cmpsl
sub
pop
inc
mov
repz
add
mov
cmp
dec
bound
fwait
lea
xchg
inc
scas
les
popf
lock
xlat
mov
inc
xchg
inc
mov
cmpsl
push
inc
xor
xchg
jae
sub
gs
hlt
ret
mov
adcb
loope
cmpsl
imul
pop
aam
in
push
mov
aad
fsts
jae
cmp
and
stos
into
sahf
mov
add
xchg
pop
jmp
movsb
popa
adc
into
ds
or
jne
in
xor
jb
lods
inc
inc
cmp
cmpxchg
adc
fimull
and
in
push
add
pop
in
setne
sahf
rcll
mov
jg
dec
push
ds
and
cld
pop
lea
sbb
pop
jle
pop
repnz
jo
mov
std
cmp
rolb
scas
xor
mov
or
pop
incb
rcll
add
stc
iret
mov
andl
jnp
mov
sub
popf
xor
in
int
xor
mov
ret
jp
insl
stos
dec
addr16
ret
pushf
push
sub
je
lods
aam
push
mov
xchg
mov
ljmp
and
movsb
and
lret
and
lcall
add
xor
test
fists
rolb
jge
push
cmp
cmp
sbb
jno
mov
iret
inc
fwait
in
and
filds
sti
pushf
xchg
push
outsb
inc
aaa
mov
xlat
mov
cmp
pop
incb
jg
fiadds
jnp
sbb
std
clc
mov
test
jb
outsb
insl
orb
xchg
add
push
mov
test
fstl
js
ret
inc
enter
cmp
jg
adc
scas
stos
push
mov
jo
icebp
and
cli
popa
add
jb
test
out
mov
movsb
sub
inc
loop
jmp
cmpsb
fldt
xor
inc
insb
aam
shll
push
enter
arpl
mov
dec
lods
fistps
mov
dec
out
jno
push
sub
lcall
insl
aam
ret
push
arpl
sub
pop
dec
mov
imul
sub
fcomps
lods
cltd
je
mov
repnz
xchg
inc
and
push
xor
push
dec
pop
shl
xchg
mov
mov
mov
and
in
mov
cli
inc
mov
jle
add
aad
jge
mov
icebp
sahf
push
lret
gs
or
add
aam
out
mov
mov
lret
ror
roll
loopne
add
addr16
cmp
paddq
sub
cmpsb
xchg
mov
cmc
cwtl
mov
mov
out
mov
loope
in
push
fadds
stc
nop
inc
add
lcall
sbb
rcrb
mov
js
xchg
lcall
xor
push
sti
pop
push
inc
dec
jmp
clc
repz
xor
test
and
mov
decl
ret
insb
inc
subb
jns
xor
pop
xlat
mov
mov
add
ja
cmc
inc
dec
cmc
cli
mov
mov
mov
mov
test
xchg
sbb
mov
lds
shlb
mov
repnz
fwait
std
stos
xchg
mull
cld
or
cmp
fisttpll
outsl
sub
addr16
mov
mov
xlat
xorb
cmpsb
and
sbb
aam
lcall
out
push
scas
sub
cli
adc
xchg
mov
mov
sub
mov
xchg
adc
mov
cmp
cmc
lods
rcrl
pusha
mov
cmp
sub
mov
addr16
sahf
pop
or
scas
sbbb
pusha
lret
push
pusha
insl
cld
jge
lds
sbb
je
inc
xor
and
mov
mov
pop
mov
popa
jg
mov
xchg
addb
xor
bound
jecxz
cmp
add
pop
adc
adc
jmp
es
sub
jnp
in
inc
jge
dec
pop
cmp
mov
out
and
call
sub
stos
inc
lcall
fnstsw
insb
loopne
clc
and
cli
fnstsw
nop
loop
xchg
mov
sbb
sbb
sbb
push
insl
and
mov
cli
outsb
jecxz
jge
dec
mov
pop
cmp
cld
aam
dec
fdivl
cmpsb
xor
add
ja
fwait
xor
icebp
cltd
lcall
cmc
imul
idivb
je
out
xchg
ja
stos
xchg
cmc
add
xor
movsl
mov
xchg
fidivs
inc
mov
sti
push
dec
out
mov
inc
mov
xor
sub
inc
mov
outsb
push
ljmp
push
leave
inc
push
loope
mov
inc
outsb
dec
cmp
ss
mov
mov
clc
jecxz
adc
sbb
cmp
cmp
pop
xchg
aas
int
and
aaa
aas
xor
leave
stc
iret
cmpb
cltd
xchg
cltd
cmp
or
sbb
pop
push
push
xor
mov
stc
test
cld
mov
ljmp
lret
sub
in
add
nop
leave
xchg
push
sub
sbb
pop
and
push
cmpsl
daa
xor
jb
jmp
out
jno
data16
dec
mov
or
add
out
ss
xchg
mov
xchg
adc
int
xor
nop
push
mov
sarl
sub
dec
mov
jp
cmp
add
sarl
andb
xchg
stc
mov
shll
push
shrl
xchg
adc
les
fiadds
jo
int
pop
aaa
dec
and
insb
arpl
push
pop
cmp
add
jmp
ljmp
pop
repnz
dec
mov
inc
sub
cmp
mov
sbb
xchg
add
jecxz
add
jns
mov
icebp
decl
jecxz
lcall
dec
xchg
into
fcoms
leave
leave
jne
test
cwtl
mov
or
stc
and
lds
aas
out
lret
xor
push
push
shrl
dec
lcall
xchg
sahf
xlat
dec
jb
int
and
stos
add
and
out
addr16
in
or
int3
push
jle
sarl
push
lahf
jo
xchg
das
std
pop
mov
mov
cs
ljmp
pop
shll
push
mov
add
cmp
fstps
das
aaa
xchg
and
aam
and
inc
divb
adc
cld
ret
psrad
roll
jl
jae
xchg
pop
ffreep
les
fstps
dec
push
jge
mov
pop
out
shrb
add
cs
lahf
lods
fwait
cmpsb
les
fcompl
mov
xchg
inc
mov
inc
sbb
bnd
xchg
inc
lds
dec
xlat
std
cmp
and
daa
out
adc
mov
push
je
test
fdivrl
mov
in
mov
mov
pop
jg
shlb
arpl
push
sub
lods
xchg
mov
addr16
push
dec
clc
into
in
jmpw
clc
cmp
nop
lret
rorl
scas
jne
pusha
jbe
flds
jmp
loopne
cmp
subl
mov
or
outsb
push
or
push
mov
mov
sahf
add
rolb
mov
sub
lods
pop
pop
mov
outsl
sbb
and
mov
insl
inc
mov
out
test
sbbb
iret
sub
push
sub
adc
pop
lods
ret
mov
loop
sub
mov
dec
outsb
inc
push
or
scas
add
mov
lods
fnsave
fstpt
cmp
jns
inc
jo
mov
loope
popa
mov
mov
mov
repnz
jge
adc
adc
adc
cmp
add
cmp
xor
push
cs
push
mov
cmp
adc
jnp
adc
dec
and
push
lds
je
sti
test
jmp
xchg
movsl
pop
jne
cld
jae
dec
xor
addb
jno
fstpt
fdivrs
push
xchg
pop
icebp
je
stc
ret
add
mov
pop
mov
lcall
ss
stc
adc
sbb
mov
inc
cmpb
cli
xor
mov
loop
fwait
scas
pop
test
outsl
jp
adc
mov
adc
imul
fisttpl
mov
iret
sbb
dec
jecxz
testl
pop
rclb
cmc
and
push
hlt
sub
hlt
insb
aam
std
sti
ss
cld
dec
lods
cmp
sub
mov
mov
imul
out
movsl
or
mov
cmc
das
ror
jnp
dec
lcall
xor
and
lods
jb
inc
xor
push
and
test
pushf
cwtl
and
sbbl
jne
mov
test
push
out
mov
mov
push
inc
pop
int
lahf
sub
fs
dec
stos
sub
mov
cmpsl
dec
bound
xor
jno
sub
sahf
lret
xor
add
nop
loope
push
or
leave
dec
mov
push
insl
out
adc
cmove
or
iret
cmp
sub
add
adcb
adc
ja
repz
pop
xor
dec
pop
loope
xor
dec
cmpb
daa
pop
add
iret
fwait
sub
jno
jnp
xchg
pushf
and
jmp
fimull
fwait
mov
push
loope
dec
cmp
adc
xlat
xor
bound
jmp
push
mov
or
adc
cmpsb
xor
imul
pop
popa
enter
xor
dec
iret
and
adc
sub
push
add
inc
add
aad
xchg
movsl
or
cmp
outsl
adc
roll
mov
pop
inc
enter
inc
mov
mov
mov
jmp
arpl
xor
push
pop
fidivl
nop
aad
cmp
repnz
out
popa
std
js
lahf
xchg
inc
mov
jecxz
and
mov
jp
loope
push
add
icebp
fdivrs
hlt
cltd
mov
test
adc
xor
scas
jp
inc
xor
push
add
pop
mov
push
xor
arpl
rcl
mov
sub
push
test
sahf
inc
add
out
sbb
pop
add
pop
outsb
fs
fnstenv
adc
xchg
jecxz
iret
in
dec
adcb
jle
pop
fucomip
xchg
js
fsubrs
movl
shl
popf
adc
adc
insb
jb
mov
jecxz
ja
fstl
sub
add
sti
scas
sbb
daa
lcall
xorb
mov
inc
pmaxsw
push
sub
pop
inc
sbb
scas
mov
out
adc
out
adc
das
les
roll
outsl
sbb
or
add
add
rcrl
mov
sbbb
mov
shl
int
fs
jae
sub
in
sbb
js
inc
sub
add
gs
call
adc
ret
aaa
cmpsl
jg
daa
mov
mov
xchg
faddp
stos
repnz
loop
lcall
mov
inc
push
sbb
sub
repz
mov
add
push
repnz
inc
adc
loopne
addr16
xlat
adc
pop
or
je
jne
loopne
push
stc
xor
jge
and
mov
xchg
mov
xor
mov
enter
mov
movsb
adc
mov
jge
enter
leave
and
loopne
mov
ss
mov
call
test
or
rcrb
fcomi
dec
xchg
pop
rclb
das
aad
cmc
cmp
movsb
pop
pop
or
divl
pop
into
std
ja
ss
outsb
mov
push
sti
sub
iret
inc
jne
sbb
or
dec
sahf
dec
cmpsl
adc
fidivl
fisttpll
jl
stc
and
pop
sahf
movsl
add
and
xor
jnp
jbe
xchg
adc
out
mov
cmpsb
mov
es
push
shll
or
pop
sub
test
shrl
mov
imull
cwtl
sbb
repnz
mov
sub
in
mov
inc
subb
sbb
mov
je
dec
push
sub
and
push
inc
push
jge
jp
shlb
add
lret
aad
out
and
inc
add
mov
out
jae
jb
mov
or
pop
js
cmp
in
cmp
bound
icebp
popf
outsl
xchg
out
dec
pop
les
mov
addr16
jo
mov
inc
sti
scas
jl
xor
dec
jbe
add
js
push
mov
dec
dec
sbb
push
mov
xor
sub
enter
mov
lds
fnstsw
dec
sbb
out
fst
mov
call
lock
iret
aaa
pop
mov
icebp
les
mov
mov
push
sbb
sbb
data16
gs
add
insl
inc
dec
fistpl
out
lahf
or
rcrb
mov
xor
mov
cwtl
aaa
push
shrb
add
int3
xor
adc
sbb
ljmp
popl
fiaddl
xor
js
insl
repnz
and
fnsave
lea
jnp
out
mov
js
cmp
xchg
test
mov
clc
adc
and
imul
mov
jbe
out
inc
loopne
xchg
dec
hlt
cmpb
push
push
scas
pop
mov
int3
das
stos
js
cli
cmpl
push
icebp
and
call
sbb
inc
in
mov
hlt
jae
mov
leave
adc
or
lahf
out
pop
std
jnp
and
adc
fwait
popl
mov
divl
ja
popf
jmp
bound
fildll
fdiv
test
fadds
pop
ret
loop
int
lods
movsb
int3
jmp
mov
push
outsl
les
inc
mov
sbb
jg
sub
in
jl
pusha
loopne
jmp
aas
mov
mov
stos
or
lea
stos
faddp
test
push
test
mov
inc
pop
sbb
and
mulb
and
add
or
leave
mov
jbe
add
aas
lds
mov
inc
dec
inc
mov
jbe
inc
rcrl
add
aam
loop
sarl
pop
test
imul
loope
dec
or
ljmp
sub
or
popa
mov
mov
loopne
ss
outsb
fs
mov
dec
je
js
push
jg
cmp
mov
outsb
xchg
out
jae
pushf
in
mov
rolb
push
cmp
jmp
sbb
push
cltd
repnz
mov
cld
jp
aam
loopne
and
mov
stos
shlb
je
fcoml
jle
sarl
mov
mov
jbe
pop
lock
ljmp
lds
jp
sub
or
xchg
stc
and
push
fldcw
leave
fisubs
inc
xchg
pop
xor
aam
lock
push
and
mov
add
jmp
cwtl
push
in
or
and
add
leave
add
pop
fcoms
sti
or
sub
mov
insb
jp
addr16
jae
xor
pusha
push
jbe
mov
sub
ret
push
mov
imul
xor
jns
rcrb
ret
push
add
pop
loop
mov
test
dec
xor
lcall
fidivs
xor
adc
clc
fwait
cli
or
lea
pop
shlb
addr16
enter
ret
ja
test
cwtl
movsl
adc
aad
ror
icebp
push
out
fcmovnb
mov
out
jle
lcall
or
add
pop
pop
sbb
outsb
dec
xchg
cmp
jecxz
popa
and
fidivrs
push
push
push
or
mov
add
sbb
push
push
mov
push
sbb
sub
push
sub
ss
filds
jg
rorl
into
adc
lret
cmpsb
xor
inc
popa
pop
xor
outsl
sbb
inc
loope
inc
xchg
dec
jb
inc
pop
int3
in
jge
cli
push
negb
jmp
sbb
cmpsl
repz
repnz
push
sbb
ljmp
in
aad
sbb
push
and
fs
push
mov
sub
daa
pop
push
lahf
add
decb
in
mov
sahf
mov
sbb
icebp
sub
shll
fmull
gs
adc
ja
mov
rclb
or
pop
mov
mov
dec
outsb
or
sbb
mov
lret
xchg
xor
pop
orl
xchg
xor
dec
imul
jne
jge
add
dec
fwait
aas
add
xchg
cmp
fldl
icebp
int
lcall
filds
sub
cmpsl
mov
and
sbb
sub
loopne
cmp
dec
les
sarl
push
dec
scas
jge
int
js
xchg
inc
push
push
dec
xchg
es
enter
adc
sahf
xor
scas
push
ret
sbb
ja
lahf
dec
xchg
sbb
pop
test
cmpsb
fs
mov
xor
add
dec
subl
add
inc
xor
cmpsl
push
mov
in
shlb
sub
test
cltd
les
add
and
sti
or
aam
or
into
pop
xor
test
das
adc
jle
cmp
mov
lcall
pop
sbb
xchg
dec
mov
nop
cmpsl
daa
xchg
xchg
pushf
sahf
es
fdivrs
popf
jmp
ret
mov
mov
mov
dec
jnp
push
xchg
cmp
out
fcoms
pushl
fadds
inc
xchg
aaa
ss
mov
fstps
mov
iret
xchg
xchg
cld
fmuls
int3
mov
dec
addr16
rclb
jno
jb
out
inc
inc
pushl
push
jecxz
pop
jg
lock
aas
xchg
mov
add
jnp
dec
lods
dec
mov
test
test
or
pushf
cmpl
push
fiadds
jp
inc
mov
inc
push
aad
das
xor
les
fwait
imul
out
cmp
push
cmp
out
mov
sbbl
fstps
outsl
and
add
arpl
or
mov
fisubrs
nop
stc
mov
lahf
push
mov
dec
call
fnstsw
and
and
insl
out
cmpsb
cmp
pop
lcall
je
cmp
jne
loop
xchg
inc
sbb
push
scas
xor
pop
in
fadd
repz
test
outsb
aas
sbb
pop
lods
mov
loop
cmp
fadds
add
push
test
aad
ret
jl
sbb
imulb
and
mov
insb
push
inc
pop
jns
mov
xchg
dec
xor
cmp
out
or
inc
xchg
insl
addb
movsl
pop
int
mov
pop
and
jo
xor
push
fidivs
mov
mov
jnp
dec
fistpll
add
lods
mov
jl
sbb
dec
pusha
mov
ja
sbb
ret
mov
outsb
xor
push
mov
bound
sbb
es
pop
push
cld
sarb
pop
adc
jbe
mov
lea
decl
in
pop
and
xchg
shll
sub
test
dec
movsb
scas
in
and
das
mov
xchg
lods
bound
mov
push
in
sbb
fwait
cltd
push
adc
dec
idivl
push
outsl
out
xchg
dec
inc
xchg
cs
jg
in
xor
dec
or
jo
and
jb
jmp
ljmp
aam
lcall
push
adc
mov
test
jecxz
icebp
jo
pop
lret
outsl
fstp
or
out
stos
mov
insb
outsl
push
pop
inc
mov
jbe
push
aas
cmp
sub
sbb
leave
jle
dec
lahf
addr16
cmp
inc
add
stos
rolb
ror
or
dec
mov
push
lock
mov
sub
int
jno
sub
jg
mov
xor
adc
and
jae
sub
orl
or
xchg
dec
in
shl
cmpb
shll
lcall
push
addb
icebp
or
jb,pn
push
cmc
lods
adc
insl
or
and
mov
int3
mov
out
in
ljmp
xchg
adc
sub
jmp
xchg
fdivrl
mov
sub
imul
test
cwtl
push
cli
jnp
jae
imul
in
fcomps
push
sahf
imul
adc
jne
lods
cs
xchg
aam
mov
and
or
push
test
insb
push
cmp
mov
xor
push
add
out
xor
dec
insb
imul
lret
sbb
inc
push
test
mov
int
int3
adc
ss
shr
dec
mov
cmpsl
test
test
in
data16
push
and
popf
add
loopne
adc
push
mov
loopne
adc
mov
ret
in
pop
jecxz
aad
or
insl
add
and
std
repz
push
pushf
lret
sub
sub
and
ja
ja
rcrb
pop
jge
fnstsw
or
pop
das
add
pop
sub
mov
lock
lcall
xchg
lea
sti
aas
mov
push
repz
mov
sub
fiaddl
pop
ja
into
mov
cmpl
in
andb
or
into
outsb
inc
call
loop
push
mov
push
dec
icebp
jl
aam
push
sub
gs
movsl
loope
cmpsb
cmpsl
xchg
jo
xor
dec
cmp
add
loop
mov
in
add
pop
enter
sbb
jge
popf
or
sahf
jecxz
mov
bound
sub
sub
les
inc
movsl
or
xchg
xor
xorb
dec
xor
jecxz
addr16
mov
pop
fs
nop
xor
int
out
loopne
idivl
hlt
cmpsb
jno
scas
inc
jg
or
push
insl
cmpsl
inc
into
xor
fdivl
jb
sti
push
incl
adc
stos
ds
mov
jge
xchg
arpl
nop
jmp
inc
xchg
cwtl
pop
fcom
fstpt
in
jmp
xchg
jp
jne
cmp
rcll
adc
cmpsb
mov
lods
pop
insb
ja
lret
test
add
inc
xchg
stc
mov
mov
dec
insl
std
lcall
cwtl
push
pop
mov
shll
or
jae
sbb
mov
jmp
adc
out
lahf
sbb
mov
repz
jnp
flds
aad
test
jne
sub
lret
daa
xor
fcomip
jmp
push
fucomi
pop
cwtl
lret
scas
sub
fmuls
pop
lret
data16
mov
push
pop
mov
mov
stos
adc
or
stc
repz
scas
fadd
and
pop
cmp
xchg
sahf
test
xchg
fimuls
hlt
xchg
cmp
jl
lret
mul
pop
das
lods
xchg
mov
inc
push
mov
jne
out
int3
adc
addr16
sbbb
pop
mov
sub
push
dec
stc
cmpsb
out
jle
mov
loopne
inc
arpl
popa
jb
sub
inc
jno
xchg
and
adcb
enter
test
test
adc
push
cli
cs
jg
loop
stos
sbb
ret
pop
insb
data16
cmp
lds
pop
sub
loope
jg
mov
ret
inc
push
stc
cltd
xchg
call
lahf
xchg
ret
xchg
loope
icebp
jno
jae
inc
sarb
leave
orl
mov
lahf
sub
push
cmpb
lock
inc
xchg
int3
push
push
xor
sbb
pop
and
pushl
out
ss
cs
sbb
sbb
mov
cmpsb
gs
push
pop
lods
dec
pop
mov
sbbb
and
xor
push
jbe
adc
dec
popa
jbe
sub
test
or
adc
int
pop
inc
or
mov
into
xchg
sti
or
add
pop
sub
fistl
data16
iret
cmpsb
mov
fcoms
or
lcall
shlb
mov
push
jae
lret
sbb
jp
std
fsubl
push
test
dec
pop
mov
test
icebp
outsb
mov
call
inc
loopne
jp
cmc
inc
mov
mov
push
adc
stos
add
data16
jmp
ljmp
pop
adc
lea
mov
mov
sub
notl
notl
sbb
sub
and
call
xor
push
and
fs
mov
test
mov
add
add
add
push
cltd
pop
in
push
lods
mov
inc
lds
xchg
stc
sti
inc
repnz
jg
xor
cmpsb
cmp
pop
dec
lret
push
fdivrl
pop
scas
pop
or
mov
or
inc
jae
mov
loop
lahf
jp
sub
xchg
jge
inc
add
shlb
pop
loope
dec
leave
outsl
pop
ljmp
pop
mov
int
ja
test
cmpsb
dec
dec
dec
push
dec
jae
adc
jne
sbb
les
out
aad
loop
xor
fdivp
shl
loop
push
cwtl
inc
mov
es
push
sti
lods
out
das
popa
pop
ljmp
xor
das
cmp
add
sub
jmp
mov
push
add
pop
cmp
jns
cmp
loope
fstpl
cmp
or
movsl
sbb
rcrl
or
pusha
adc
jns
cmp
push
mov
outsl
push
sbb
pop
jns
pop
mov
jmp
sbb
ret
mov
sbb
daa
jp
aaa
xchg
xor
ficompl
inc
shrb
les
sub
inc
test
sbbl
subl
fistps
sub
rolb
repnz
fbstp
pop
sub
xchg
xchg
popa
mov
ficoms
into
or
shlb
add
aas
inc
cmp
add
add
mov
mov
jecxz
pandn
popf
pop
mov
mov
or
push
cmp
mov
test
mov
aas
stc
xor
and
imul
mov
jb
fnstsw
outsl
bound
dec
mov
cwtl
repz
xchg
sbb
ja
mov
jno
pop
insl
ljmp
xchg
add
test
jo
mov
adc
test
imul
xor
mov
push
jmp
std
fwait
xor
movsl
sahf
mull
imul
cld
es
in
out
stos
or
xor
addb
sbb
lea
shll
adcl
cwtl
daa
or
nop
sbb
imul
out
in
mov
inc
rorl
push
inc
mov
or
mov
shlb
pushf
loopne
cmp
mov
and
cmp
out
pop
popf
xchg
inc
cmpsb
sub
and
xor
ret
mov
pop
push
fsubrl
cmp
jle
inc
sarl
ljmp
xchg
decb
rolb
push
sub
mov
sub
dec
and
xchg
jp
mov
cli
adc
add
mov
jno
fistl
popf
repz
aad
cmc
aam
inc
push
sbb
mov
movsl
mov
lods
ret
shlb
out
cmp
or
push
lods
fiadds
xor
pop
leave
movsl
and
xchg
out
arpl
jns
in
stc
inc
add
pop
pop
das
inc
rcr
fiadds
xor
jns
call
cmp
jo
cmc
test
sahf
xchg
sub
xchg
dec
pushf
xor
push
jns
iret
adc
sbb
jo
xor
jnp
scas
and
pop
cmp
mov
in
fimull
sbb
cmpsb
mov
mov
sbb
insb
xor
jns
dec
shrl
sti
insl
pop
mov
jnp
inc
push
imul
jo
cltd
cmp
movsl
std
lcall
jle
pop
dec
mov
scas
add
pop
testb
push
lock
add
xor
or
insl
adc
pop
jl
stos
xor
add
jo
in
xchg
movsbl
push
and
notb
push
scas
or
dec
ja
lods
mov
add
sbb
negl
dec
mov
mov
les
lea
sbb
pop
jmp
cli
xchg
das
es
fbstp
int
sti
into
add
inc
and
lods
xchg
dec
sbb
pop
add
popf
popl
push
jge
jp
std
cli
ds
adc
cltd
cmpsb
dec
inc
rclb
push
shr
pop
daa
jmp
pop
xchg
or
mov
lock
out
mov
push
jnp
pop
jp
fildl
xor
shlb
fisttpl
pop
mov
mov
cltd
pop
add
sbb
sub
lcall
xchg
or
mov
push
sbb
xchg
pop
test
js
add
add
in
or
in
hlt
adc
fwait
sub
jb
mov
xor
mov
cmp
mov
mov
mov
or
inc
fs
pop
jnp
sbb
iret
repnz
js
lds
divb
repz
out
add
sbb
jae
les
gs
test
fidivrs
pop
xchg
fistl
push
inc
testl
xchg
iret
adc
push
sahf
push
mov
fsubs
pop
jne
mov
mov
adc
aaa
inc
test
xchg
xchg
cmpsl
lahf
mov
in
mov
jge
movb
xor
and
mov
aaa
jg
sub
push
cs
sbb
mov
mov
sub
mov
mov
xbegin
push
add
pop
xchg
aas
cs
hlt
adc
xchg
iret
push
xchg
add
xchg
les
leave
add
sub
outsl
insl
mov
cmp
fstp
or
xchg
outsb
fs
xchg
mov
jb
sbb
repz
ljmp
dec
xchg
dec
outsl
adc
push
fildl
adc
jbe
mov
das
fcoml
mov
push
or
mov
pop
nop
jmp
arpl
pop
int
outsl
push
sbb
insb
sbb
shll
mov
add
push
and
paddusb
aas
jbe
pop
inc
cmp
hlt
lock
jbe
sbb
cld
daa
fsubrs
mov
xorl
sub
push
cli
ret
int3
pop
mov
in
add
test
hlt
inc
sbb
bound
dec
cmp
and
fdivrp
sarl
sti
repz
mov
fidivl
mov
mov
mov
cmpsl
mov
call
insl
fimuls
pop
or
sti
pop
sbb
and
loopne
mov
xchg
mov
push
not
lahf
imul
jne
mov
popf
stos
mov
pushf
shlb
andb
sub
sbb
data16
in
scas
ja
cmpsl
addl
nop
sbb
push
sub
pop
jle
or
dec
mov
or
hlt
dec
insl
push
pop
pop
adc
testl
cmp
xchg
xchg
cs
push
cmpsb
mov
stc
outsb
push
jbe
mov
mov
pusha
out
ret
jle
adc
and
jg
pop
sbb
pop
hlt
mov
mov
into
incb
int
arpl
fsubrs
push
repz
xlat
mov
mov
sbb
jae
negb
sbb
or
or
fiadds
adcb
shll
seta
fmull
fcmovb
fbld
mov
fdivl
xor
pop
jne
aaa
lods
je
stos
decb
push
outsl
nop
lahf
pop
cmp
or
push
into
pop
xchg
mov
dec
mov
cmp
pop
adcl
stc
mulb
inc
inc
icebp
popf
shll
cmpb
ret
outsb
ss
loope
into
sbb
lea
xchg
int3
push
sub
add
fwait
call
cmpsb
pop
in
mov
ljmp
mov
adc
xchg
mov
mov
mov
repnz
in
xor
sub
jae
iret
fs
out
sub
test
clc
jmp
into
lock
fisubl
pop
xchg
cli
pop
xchg
mov
push
xlat
add
lret
aaa
push
mov
cli
pop
sysexit
je
in
orl
loope
inc
lock
insl
stos
ljmp
test
in
or
push
popf
and
lret
cmpsb
dec
sub
shlb
movsl
mov
jmp
jno
mov
test
mov
xor
lock
test
inc
iret
inc
mov
jbe
fisttpll
add
push
stc
fistps
decl
psubq
shrl
test
lods
out
movsb
and
fistl
dec
jp
mul
leave
cmp
arpl
insl
and
mov
adc
mov
push
mov
faddl
push
sahf
gs
stos
aam
pop
push
lret
ljmp
add
mov
andl
and
cmp
sti
pop
cs
sub
add
scas
imul
pop
sub
ret
fs
xchg
loop
and
movsb
xchg
sbb
ljmp
lahf
mov
mov
scas
mov
cmc
sub
jmp
push
loopne
adc
leave
push
lock
cmp
mov
imul
fwait
cmp
dec
jp
imul
shl
cld
js
icebp
gs
inc
xchg
adc
daa
mov
nop
test
insl
pushf
orl
stos
lods
push
xor
ret
or
sub
inc
sbb
js
push
cmc
movsl
sub
or
sti
mov
xor
dec
xchg
mov
sbb
jl
lahf
icebp
jge
pop
es
in
push
test
adc
inc
popa
hlt
and
in
insb
shll
pop
sub
jne
jb
jmp
cmp
or
mov
lea
jmp
xor
std
nop
lret
dec
hlt
sub
or
sbb
add
inc
mov
mov
loop
dec
pop
inc
into
dec
movsl
mov
in
popf
arpl
outsl
lods
out
dec
xchg
repz
ss
sbb
push
dec
mov
inc
xchg
and
stos
test
fnstcw
xchg
movsb
xchg
pop
loope
sub
mov
jbe
cmpsb
add
xchg
or
imul
sbb
imul
outsl
je
xor
hlt
out
inc
int3
sub
cmc
or
out
cmpsb
outsl
fisttpl
mov
fstl
in
pop
in
sahf
adc
sahf
xchg
xchg
cmp
bound
jge
dec
test
xchg
jb
lds
push
xchg
jae,pt
xchg
and
repz
sub
outsb
jecxz
adc
mov
cmpl
jno
fadds
arpl
mov
xchg
cmpsl
cwtl
xlat
pop
lahf
aaa
fadd
pop
clc
xor
pop
mov
push
push
adc
int3
jno
mov
bnd
jp
sub
inc
nop
mov
jge
out
shlb
cmpsb
pop
and
xor
fcompl
jp
jg
sti
call
xor
sbb
gs
mov
aas
add
pop
pop
lret
fcmovu
inc
push
mov
sahf
cmpsl
ror
aas
xor
ret
sahf
mov
gs
aaa
mov
or
jge
or
lea
das
outsb
and
and
add
mulb
movsb
inc
ss
pop
cmpsb
push
sub
sahf
mov
adc
jl
dec
nop
fst
dec
mov
fcmovb
and
ja
pusha
imul
pop
shll
jns
shrb
repnz
push
jne
shlb
ljmpw
in
arpl
inc
sbb
xchg
inc
sbb
lock
add
aaa
mov
push
leave
sbb
mov
mov
stc
push
cli
ror
inc
aas
imul
inc
leave
dec
cmp
pop
sarl
cmp
xor
int
jns
xchg
in
aaa
sbb
xchg
or
jle
cld
test
andb
xchg
popa
mov
and
xchg
call
fdivp
addb
jne
decb
shlb
cld
xchg
clc
loop
xor
push
dec
fcompl
xlat
in
sahf
popf
cmpsl
inc
call
std
xchg
jecxz
xor
inc
bound
jo
in
push
dec
into
mov
xor
mov
push
inc
adc
sbb
xchg
cltd
or
cmp
bound
lods
push
addr16
push
arpl
stos
lds
imul
ljmp
pop
adc
inc
mov
jge
aad
jg
int
ss
call
push
cmp
rcrb
sbb
fiaddl
and
pop
sbb
sbb
cmp
xchg
sub
mov
xchg
jmp
lahf
popl
jmp
mov
and
jmp
test
insl
sahf
in
sub
loop
pop
lea
outsl
call
adc
insl
mov
push
cmpsl
sbb
shl
leave
mov
lods
subb
lret
dec
rol
pop
xchg
call
shr
push
pop
or
or
ret
lods
or
imul
mov
push
dec
in
loopne
rcr
or
mov
js
jg
mov
and
xor
pop
jl
and
gs
push
cwtl
lcall
push
xor
fidivs
loop
adc
mov
sti
push
and
addr16
ss
inc
or
push
clc
cli
dec
push
mov
fs
or
add
ds
cmp
push
out
dec
ss
pusha
arpl
push
iret
movsl
sahf
test
mov
ds
fmuls
sbb
fmuls
ss
mov
out
jmp
test
push
fdiv
add
jb
enter
add
mov
jnp
dec
cmp
cwtl
ficoms
xor
xchg
mov
test
dec
std
xchg
lds
push
mov
roll
xchg
jns
dec
jae
dec
popf
test
ds
jge
xor
lods
adc
icebp
iret
mov
clc
and
sahf
stc
cmpsb
test
lds
cmpsl
data16
sub
daa
mov
movsb
daa
mov
rcll
push
cmp
push
mov
mov
xchg
xchg
push
adc
sub
lahf
mov
outsb
inc
es
and
lock
es
mov
add
ss
rcll
hlt
or
ljmp
or
mov
inc
push
sbb
stos
or
push
sub
pop
outsb
add
ret
pop
mov
jo
icebp
and
aas
shll
xor
push
jne
or
fsubp
pushf
ret
mov
leavew
sub
mov
xor
xchg
or
xlat
and
loope
pop
adc
sbb
add
adcl
mov
adc
pop
push
mov
mov
shlb
mov
dec
jg
inc
loop
jmp
movsb
mov
es
push
xchg
xchg
mov
pop
aam
lcall
mov
aam
and
fmul
int
leave
icebp
lfs
std
xlat
ja
xor
sbb
pop
popa
inc
or
imul
lock
popf
jo
stos
inc
jl
and
jno
idiv
orb
push
pop
push
dec
outsl
adc
jg
mov
call
ss
cs
mov
clc
push
and
mov
inc
mov
shll
pop
cmc
xor
sub
jb
ret
cmp
ret
xlat
shrb
addr16
jne
pusha
xchg
out
sti
push
mov
bound
sbb
mov
sub
insl
xorl
mov
lea
sbb
iret
or
loopne
xor
stos
sarl
push
fs
jge
sub
dec
shll
pcmpeqd
dec
cwtl
sub
adc
test
jb
jl
xchg
mov
dec
gs
xchg
insl
jo
or
data16
push
xchg
dec
mov
xor
lahf
or
mov
daa
insl
adc
jge
rolb
sbb
inc
xchg
xchg
dec
dec
mov
subb
lret
bound
aad
cmp
add
mov
xor
jg
std
out
add
jecxz
mov
neg
out
lea
in
xchg
adc
xchg
push
dec
stc
ret
sub
clc
imul
inc
adc
xor
popa
mov
mov
mov
sbb
xchg
stos
dec
stc
andl
das
nop
push
jp,pn
icebp
cs
fs
add
jae
pop
push
dec
xchg
sahf
sub
aam
into
and
or
add
push
cmp
test
lcall
adc
add
mov
shl
stos
fisttpl
ficoml
and
mov
pop
pop
cmp
rclb
lret
adc
aam
and
jmp
in
inc
je
or
push
lods
mov
sbb
sub
fmuls
imul
mov
jns
push
lods
fldcw
test
jge
decl
ret
or
dec
mov
sti
icebp
mov
inc
sti
add
xchg
xchg
nop
dec
and
dec
ljmp
mov
mov
fnstenv
aas
loope
inc
dec
or
mov
outsl
sahf
push
mov
mov
nop
nop
xchg
fwait
cs
and
adc
inc
xchg
pop
popf
dec
jmp
inc
pop
jecxz
lock
movsl
xor
in
lahf
rol
out
add
mov
nop
add
lds
in
adc
mov
or
cwtl
add
mov
xor
mov
sub
push
in
push
sub
sub
popa
jae
dec
mov
stos
jmp
or
adc
lods
pop
mov
xor
add
ljmp
pop
xor
jne
movsb
shll
test
sbb
leave
xchg
popa
stos
ss
xchg
movsb
shll
cltd
mov
mov
loope
pop
xchg
cmpsl
mov
push
fidivs
iret
mov
out
dec
movsl
clc
cltd
sarl
faddl
das
mov
inc
mov
xor
les
daa
mov
jne
adc
jnp
adc
dec
xlat
push
or
enter
xchg
mov
mov
add
dec
mov
hlt
test
popa
leave
shll
nop
stc
cmp
sti
sub
fimuls
mov
adc
psrld
cmp
sarl
jecxz
push
mov
mov
repnz
mov
pop
lods
jae
ficoml
jle
insb
mov
enter
lea
lea
xor
je
pushf
mov
outsl
js
pop
cmp
sub
inc
fisubrs
ljmp
and
test
xor
xchg
mov
cmp
sbbb
or
jno
pop
mov
and
mov
xor
gs
sub
inc
xchg
mov
jae
sbb
cmc
mov
movsb
insb
ja
and
lock
jl
ja
sbb
ret
sbb
sub
int3
ss
mov
cli
jnp
pop
pop
pop
or
or
adc
ljmp
pop
xchg
xchg
cld
mov
xor
cmp
xchg
xchg
xchg
jge
pushf
mul
sbb
push
xor
popf
pop
nop
mov
arpl
gs
into
popa
repnz
shll
adc
mov
or
or
push
xchg
push
xor
movsb
xor
jle
shrb
xor
roll
out
idivl
jb
push
test
roll
jg
or
arpl
inc
cmp
mov
push
int3
and
int
and
xchg
iret
andb
adc
inc
mov
adc
sti
pop
rcrb
pop
add
popa
ja
aaa
bound
xchg
mov
dec
push
add
cmpsw
nop
push
dec
ljmp
adc
mov
jno
popf
push
inc
xchg
adc
and
fidivrs
jl
lret
out
jg
add
jno
rorb
xor
sbb
icebp
mov
mov
test
stos
mov
inc
icebp
xor
arpl
pop
aas
loop
movsl
mov
ds
dec
adc
push
stos
dec
xchg
test
pop
mov
lcall
push
push
cmp
cmp
push
xchg
xchg
scas
mov
in
jl
sub
mov
jbe
add
cmp
rorb
dec
scas
bound
sbb
xchg
daa
pop
lahf
clc
test
in
and
insl
dec
pop
xor
cmp
cmp
mov
out
stc
mov
divb
lods
mov
xor
dec
add
loopne
into
cwtl
inc
fs
pop
lds
pop
or
outsb
cmpsb
xchg
int3
sub
mov
pusha
and
jae
xor
push
and
jg
cmp
inc
mov
mov
pop
flds
jo
cltd
fldcw
enter
cwtl
xor
xchg
or
sbb
sub
bound
push
push
pop
inc
mov
test
cmpsl
mov
push
xchg
call
fisubrs
filds
pop
dec
mov
pop
mov
pop
nop
cmp
sub
jb
push
sub
loopne
sub
sub
les
xchg
jne
jne
mov
sub
call
insl
inc
or
lret
inc
pop
out
and
iret
mov
mov
subl
fildl
rorb
sub
mov
pop
push
pop
adc
or
mov
push
sbb
repnz
in
or
lahf
or
cmp
mov
lret
fisttps
fdivrl
ret
gs
and
push
cwtl
pop
sub
sub
jl
push
push
mov
sub
dec
push
sub
mov
lods
das
je
mov
xorb
mov
rolb
push
les
pop
das
xor
xor
mov
sbb
test
cmc
inc
ds
jbe
mov
sbb
nop
or
insb
push
pusha
lods
mov
and
sbb
fdivs
les
lock
mov
mov
test
pop
xchg
cli
xor
jnp
cmc
sahf
bound
jmp
or
out
jg
cmp
and
xor
jno
leave
xchg
mov
repz
jmp
gs
pop
xchg
cmp
jg
xchg
out
jl
xlat
test
jl
arpl
in
insb
sbbb
stos
mov
sbbb
sbb
test
leave
push
ret
dec
loop
pop
sub
into
call
out
pop
lret
je
jp
jnp
mov
aas
ret
into
aad
mov
ficomps
mov
inc
cmpsb
jnp
movsl
mov
sub
pusha
pop
dec
cmp
mov
fcmovnbe
scas
xor
dec
rcl
mov
in
sarl
pop
imull
cmp
push
cmc
cltd
rorb
movsb
adc
lods
xchg
add
sbb
xchg
and
dec
jmp
sti
inc
data16
jp
ret
lods
lods
rcll
aas
mov
add
dec
xchg
fidivrl
jmp
xlat
outsb
stos
adc
dec
mov
mov
sbb
pop
test
pop
add
imul
and
pop
lcall
mov
jmp
xchg
push
push
push
cmc
add
ss
inc
mov
daa
cmp
push
sub
inc
aam
notb
pusha
push
mov
stos
mov
add
xchg
js
popf
xchg
jecxz
out
dec
lret
and
mov
orb
or
test
xchg
push
fcoms
adc
lock
aam
push
pop
push
add
mov
xchg
add
sub
gs
jge
neg
xchg
gs
es
sarl
imul
sbb
inc
mov
and
xchg
dec
mov
iret
call
cmpsl
cli
sbb
fldcw
cmpsl
adc
iret
sbb
scas
aam
int3
jb
cmpsb
adc
mov
dec
add
push
add
xor
pop
in
jne
or
aas
cmpsl
jno
call
ljmp
xor
xchg
call
xchg
inc
aaa
in
in
addr16
jle
jge
cltd
sub
pop
shll
or
negb
mov
gs
movb
das
fists
xchg
pop
dec
jl
rorl
loope
mov
ja
outsl
leave
lret
insb
lcall
push
inc
pushf
mov
nop
ret
int3
mov
sub
mov
nop
data16
test
adc
push
and
cmp
ljmp
and
adc
outsb
ds
pop
push
loopne
imull
adc
jno
sbb
dec
push
mov
xlat
inc
fiadds
lock
loop
push
shrl
mov
lahf
jae
into
sbb
sub
sbb
mov
jbe
ret
aaa
mov
xchg
in
imul
enter
dec
js
das
dec
mov
add
xor
iret
cli
xchg
popl
shlb
and
sti
jp
lcall
mov
insl
cmp
sbb
or
push
shrb
dec
into
movsb
rorl
and
mov
xor
pop
cwtl
mov
pusha
sub
lds
stos
xchg
leave
mov
pop
cmpsl
rol
cmpsb
jns
dec
frstor
stc
out
xor
sub
or
outsl
ss
xchg
add
rcr
dec
test
cli
push
imul
shl
in
pop
mov
push
sti
movsl
fisttps
mov
mov
inc
mov
lods
ret
popf
inc
xorb
push
add
fsts
adc
push
test
ret
flds
push
ss
call
mov
adc
outsl
outsb
or
mov
inc
mov
fistpl
popl
ret
inc
mov
lods
and
jnp
add
pop
fcomp
dec
cmp
leave
das
rcrb
mov
mov
and
mov
sbb
dec
ret
enter
mov
cmp
mov
inc
int3
subl
mov
adc
sbb
ss
movl
sbb
daa
sub
scas
mov
push
out
and
mov
imul
xchg
mov
jle
sarb
inc
fistpl
cmp
lea
cmp
or
cli
dec
lds
jle
orb
sub
jb
pop
dec
jno
fldenv
repnz
xchg
lods
push
subb
sub
cmp
add
arpl
stos
pop
mov
loop
ror
pop
jb
mov
jo
pop
jne
mov
jb
jle
cs
stc
in
push
ret
cmp
pop
pushf
mov
mov
jg
in
push
lret
int3
jns
dec
mov
fadd
pop
xchg
pop
cltd
xchg
mov
leave
icebp
cmp
and
push
sti
jo
and
pop
add
jl
sarl
mov
pop
or
jge
and
daa
jge
enter
fisubrs
data16
lret
dec
dec
mov
pop
lds
out
cmp
pop
xor
clc
aaa
jbe
jae
cli
loopne
test
shlb
sbb
pusha
js
insb
or
ds
cmpsb
cmp
dec
icebp
sbb
xchg
lods
mov
in
push
pop
lea
xchg
test
mov
movb
sbbl
add
jno
push
cmp
mov
pop
push
sti
mov
dec
lea
mov
add
test
lods
rcrb
adc
inc
mov
aad
leave
cwtl
divb
pop
imul
push
popa
jge
push
lods
mov
dec
iret
mov
mov
pop
daa
cli
std
or
cmpsl
adc
sahf
call
jecxz
jge
cmp
dec
dec
and
cs
aas
repz
daa
icebp
or
cmpsb
stos
xchg
clc
add
dec
hlt
ja
arpl
inc
scas
xchg
or
mov
xor
xchg
adc
xor
add
push
pop
cld
ret
or
jmp
or
inc
mov
dec
movsl
or
shr
roll
add
push
push
sub
enter
xchg
mov
ljmp
dec
js
xchg
mov
adc
sub
xor
je
out
push
jne
jecxz
outsb
jne
mov
fcompl
adc
inc
xchg
into
popa
inc
pop
sbb
pop
jge
xor
jl
push
aas
adc
movsl
cmp
adc
inc
pop
mov
mov
or
mov
cli
repz
and
xchg
and
notl
push
dec
xchg
std
add
mov
cmp
fildl
dec
push
adc
push
push
gs
data16
aad
lahf
sub
jmp
xchg
dec
jmp
stos
data16
cmpl
enter
adc
mov
jbe
jnp
push
adcl
ret
sub
push
xor
xor
clc
mov
test
mov
add
dec
lea
jae
inc
cmp
add
dec
ret
fucomi
pop
cmpsl
cs
mov
jb
lcall
or
int
cld
out
jnp
repnz
cld
sahf
jae
popf
and
in
mov
in
push
adc
xor
repnz
sbb
dec
mov
incb
mov
into
xchg
push
in
mov
jb
mov
test
dec
inc
jmp
sbb
stos
enter
jle
arpl
pop
cmp
mov
inc
mov
lds
and
insb
jb
mov
sub
outsb
inc
jg
adc
test
inc
popa
adc
pusha
pop
andl
push
inc
push
mov
test
fmul
cmpsl
nop
jp
out
jns
push
sub
shl
aaa
mov
jmp
dec
fiadds
clc
dec
cmp
les
dec
popa
loopne
movsb
push
push
mov
mov
xchg
loop
outsb
mov
andl
outsl
sbb
sub
add
adcb
mov
mov
ds
inc
js
mov
sub
scas
gs
fisubs
mov
es
push
cmp
xor
scas
xchg
mov
outsb
sahf
push
popf
mov
fidivs
movsb
cwtl
mov
jl
rcll
fsts
test
cmp
sti
mov
cmpsl
ret
and
pop
dec
mov
lret
pop
xor
bound
jg
push
sub
pushf
jb
xchg
dec
dec
mov
call
std
or
and
inc
lock
mov
jle
mov
jae
sub
movsl
lods
cwtl
xchg
repz
mov
inc
incl
lods
andl
sbb
xor
mov
sbb
fcompl
cmp
pop
add
jne
ja
in
pop
inc
bound
dec
jge
xchg
call
iret
addr16
sub
jo
jne
ljmp
mov
sahf
mov
fisubl
jmp
pop
jns
popf
add
cmp
mov
mov
mov
and
sbb
insb
nop
push
mov
jle
test
fisttps
cmp
movd
sub
jge
mov
or
je
pop
js
scas
and
aam
sbb
ljmp
and
movsl
cmpsb
test
aas
inc
sub
and
pop
mov
fwait
add
ljmp
jl
scas
sbb
dec
scas
or
xchg
inc
sti
xor
divl
in
pop
mov
cmpsb
push
mov
daa
and
adc
movl
cmp
dec
or
cmp
lcall
insb
xchg
sub
nop
fxch
pop
fwait
aad
repnz
jge
mov
cmp
pop
aad
stc
jmp
aas
push
mov
inc
pop
popf
push
repnz
sti
adc
xchg
in
lds
add
and
sbb
or
sbb
xor
call
setp
jmp
sub
mov
mov
xchg
into
mov
lods
rorl
add
hlt
and
sub
je
cmpsb
cmpsb
sbb
dec
lahf
sub
sub
mov
stos
flds
arpl
xchg
mov
adc
pop
adc
or
or
sbb
xchg
jb
or
cs
xor
outsb
and
dec
pushf
inc
in
sti
lahf
push
ds
and
and
xchg
pop
jne
sbb
decl
sub
cmpsb
out
ret
stc
mov
jno
cwtl
addr16
mov
shrl
push
mov
jmp
call
les
mov
adc
nop
call
bound
cmp
adc
and
dec
cmpsb
jne
je
mov
mov
sbb
mov
inc
pop
xchg
cltd
lcall
faddl
dec
jae
fistps
jmp
cld
mov
or
dec
bound
push
stc
rcr
in
adc
test
js
mov
lahf
cmp
pop
cmp
pop
and
and
pop
addr16
mov
fisttpll
and
mov
mov
aas
arpl
cmpb
jae
into
sub
lods
insl
insb
xchg
mov
push
loop
xchg
push
push
push
ret
shll
xor
jns
pop
pop
test
ret
push
and
jge
xchg
mov
mov
addr16
add
jne
adc
and
cmp
out
ret
sbb
stos
repz
jp
add
js
test
add
insb
jmp
dec
inc
adc
cmp
or
test
cmc
int3
cld
jbe
add
mov
dec
mov
mov
xorb
imul
cmpsb
push
sbb
sbb
fmull
lcall
mov
ret
loopne
xorb
push
lods
scas
or
push
js
mov
stc
xor
mov
push
mov
cmpsl
pop
sarb
mov
cmp
sbb
repz
test
mov
inc
cmpl
xchg
mov
adc
pop
push
andl
mov
mov
lods
jmp
test
jns
push
stos
lahf
xchg
xchg
mov
dec
ret
in
push
jnp
sub
dec
inc
or
lea
or
mov
push
pop
push
aad
mov
cld
lret
cmp
ja
mov
aaa
aam
into
filds
ljmp
sti
adc
dec
push
adc
loope
outsb
mov
and
pop
test
ficoms
xchg
int3
jne
cmp
cs
ret
and
ficoms
movsl
mov
dec
loopne
or
xor
cmp
dec
inc
or
lahf
push
push
mov
xor
dec
loopne
inc
sbb
jmp
mov
xchg
movsb
xchg
mov
adc
add
nop
out
ljmp
push
cmp
jmp
dec
cmp
xchg
dec
jecxz
mov
outsl
jp
std
xor
mov
push
cmp
ss
add
mov
cmpsb
or
in
adc
cli
sub
es
jp
sub
aad
cmpsb
inc
loope
pop
xor
loop
call
outsl
push
imulb
dec
xchg
pop
stc
fildl
jl
cmp
fstps
cwtl
cs
ds
scas
cmp
xchg
outsl
lahf
and
jge
jo
sarl
daa
insl
addr16
sub
xor
inc
js
push
stc
xchg
add
fwait
jl
xlat
jle
jecxz
sbb
mov
in
sub
ds
fildll
psubb
lea
fists
pop
aad
rdpmc
or
loopne
sar
xor
fdivp
dec
mov
lea
lods
jne
cmp
out
jo
mov
fmuls
cwtl
push
sahf
sbb
lock
dec
into
data16
pop
jbe
pop
fdivr
dec
scas
rclb
icebp
fwait
inc
call
xchg
fistpl
rclb
push
test
dec
outsb
test
dec
jmp
cmc
and
sub
fldt
and
push
std
push
lcall
pop
add
mov
cld
dec
push
stos
insb
loope
iret
sub
imul
mov
mov
int
adc
and
jle
mov
popf
inc
inc
cld
fs
xchg
into
or
fisubs
add
adc
adc
call
adc
pop
xorl
jge
mov
dec
pop
lret
data16
add
popf
mov
sub
add
aam
mull
inc
cmc
in
jo
and
pop
test
mov
lods
dec
insl
push
jne
cli
pop
add
fnstcw
xor
dec
cmp
rorb
pushf
sbb
cmp
mov
shrb
pusha
xor
andl
push
cmp
cld
add
test
popa
fcoml
jle
popa
cmp
xor
push
dec
pop
loope
rclb
push
js
add
sbb
push
ljmp
repnz
stos
adcl
push
cmpsb
add
push
nop
ljmp
mov
and
jno
ret
rcll
ret
xor
das
and
add
mov
xchg
imul
cwtl
inc
mov
jno
xorb
push
ja
cmp
xor
mov
lret
cmp
and
movsb
mov
andb
mov
dec
mov
call
push
fwait
or
pushf
int
add
xchg
cmp
hlt
push
ja
xchg
leave
add
jne
adc
fwait
mov
fwait
arpl
sub
pop
bound
enter
mov
in
jo
or
pop
cmp
cs
mov
pop
imul
push
push
xor
cmp
out
out
fcom
xchg
ljmp
xor
adc
hlt
inc
lahf
enter
pop
mov
inc
sbb
lret
push
cmpb
jmp
dec
sbb
lea
push
iret
arpl
or
in
jb,pt
lods
mov
cmp
pop
and
fs
insb
jno
stc
jecxz
adc
rorb
sahf
sbb
cltd
lock
rol
xlat
cmp
mov
mov
xor
out
xor
inc
cmp
adc
sbb
and
jle
push
fnstcw
sub
cli
movsb
sbb
mov
mov
ret
mov
aas
rol
mov
pop
mov
jne
jmp
push
mov
pushf
test
sub
mov
orb
lods
cmp
js
sarl
cmpsb
fnstcw
ds
jge
sti
cmpsb
lcall
mov
das
push
inc
idivb
mov
mov
loopne
sbbl
out
adc
cli
fwait
mov
push
mov
mov
data16
je
int
sbb
sbb
test
lret
pushf
pop
mov
int
xorb
rcl
or
icebp
xchg
sub
xchg
mov
mov
rcrl
mov
sub
push
sub
dec
nop
xlat
push
mov
mov
xlat
xchg
loope
sub
pop
jmp
sbb
cltd
sar
dec
sbbl
movsl
adc
inc
rcll
hlt
and
adc
sub
in
or
pop
fs
mov
cld
into
sbb
pop
stc
sub
popf
inc
sbb
jg
jge
fidivl
xorl
or
sub
lret
iret
dec
push
cwtl
addr16
mov
repnz
inc
or
pop
add
test
daa
push
int
xchg
lret
jbe
shll
mov
dec
aam
imul
jbe
xchg
xchg
jae
push
jns
mov
mov
les
push
xlat
cs
call
repnz
cli
pop
or
sbb
xchg
jns
dec
popa
repnz
adc
jmp
dec
sarb
mov
jge
jle
xor
xchg
dec
dec
inc
push
cmc
jb
xchg
out
dec
in
inc
adc
mov
cmp
jns
hlt
xlat
sbb
push
inc
mov
out
fwait
jns
in
xor
jmp
adc
lods
sbb
lcall
inc
iret
and
cmpsl
and
push
inc
repz
test
shll
mov
jmp
loope
sub
mov
in
or
movsl
pop
inc
testb
xchg
in
mov
xor
out
or
xchg
adc
stos
pop
xchg
in
sbb
jge
or
mov
dec
adc
bound
add
loop
movsl
pop
scas
and
sbb
test
imul
in
int
push
mov
add
xchg
pop
jno
fdivp
sub
divb
outsl
push
jl
push
jns
daa
leave
leave
lds
push
push
lds
rcll
pop
mov
pop
or
ficoml
lea
mov
xchg
stos
jl
ret
push
jbe
adc
js
cmp
dec
imul
jbe
jnp
cmp
frstor
and
iret
aam
mov
insb
out
enter
andb
addr16
jne
ljmp
lea
dec
out
je
inc
popa
mulb
jg
sahf
inc
push
outsb
xchg
test
jbe
out
add
push
or
inc
pop
push
xor
cltd
dec
jmp
mov
in
cltd
into
dec
shlb
pop
jns
scas
pop
sub
push
sub
insl
cmp
add
inc
pusha
into
leave
mov
jns
cmpsl
test
fimull
jo
jmp
les
cmp
push
mov
add
jle
cmc
xchg
xor
in
repz
in
in
mov
dec
mov
arpl
mov
lahf
and
inc
rcrb
or
cmpsl
pop
xchg
pusha
int
icebp
inc
mov
or
ss
push
sbb
xor
cmpl
pop
jnp
popf
sub
andl
ficoms
sub
mov
cmc
fnstenv
test
in
push
js
imul
cmc
shll
push
sub
add
int3
ss
int3
push
movsb
ret
push
mov
imul
movsl
jne
rcll
out
jg
xor
in
pop
popf
mov
mov
mov
repz
mov
pop
mov
insb
hlt
mov
test
ja
shll
enter
idiv
dec
in
dec
popa
enter
or
or
cmp
addr16
xchg
pcmpgtb
and
mov
ret
inc
sbb
push
mov
inc
daa
loope
pusha
in
ds
xchg
mov
mov
add
xchg
inc
xchg
pop
adc
pop
data16
lahf
fimull
icebp
or
mov
dec
xchg
lahf
mov
je
shl
stos
idivl
int3
mov
push
jecxz
clc
push
into
xchg
cltd
fstl
arpl
outsl
jo
push
pop
mov
inc
sub
sbb
out
lret
iret
or
cmp
mov
stos
add
or
jge
std
gs
sahf
rcll
xor
adc
data16
xor
fcomps
test
enter
adc
inc
in
clc
mov
into
icebp
mov
push
inc
cmpsl
icebp
xor
push
pop
add
or
adcl
mov
mov
pop
xchg
jg
lds
rorl
repz
fs
lock
cld
sbb
popf
rcrl
movsb
and
mul
mov
int
mov
int3
inc
std
lea
ret
movsl
pop
out
pop
inc
and
rcrl
sarb
mov
jnp
movsb
pushf
xor
cmc
in
jae
rcrb
out
mov
es
dec
ja
xchg
dec
out
and
repnz
mov
mov
or
outsl
adc
rolb
rolb
lods
or
shl
in
sbb
cltd
mov
rcrb
mov
outsb
push
pop
cli
or
lds
push
out
jno
aam
pop
push
mov
and
pusha
dec
clc
mov
xor
aaa
jb
jo
ss
mov
jp
inc
mov
adc
add
movsb
insb
mulb
imul
inc
ficoms
loop
nop
or
ljmp
rol
popf
jl
jno
cmpsl
mov
cmp
in
mov
jbe
push
test
inc
xchg
test
jp
xchg
test
fwait
lods
jns
xlat
call
add
pusha
sbb
in
mov
inc
loope,pt
inc
sbb
loope
lahf
clc
add
aaa
cld
lahf
fwait
iret
jg
mov
cmp
jo
iret
add
mov
xor
push
orb
inc
and
lahf
iret
sub
lahf
out
push
and
out
cmpsb
adc
push
lock
and
sbb
out
sub
scas
dec
repnz
js
xchg
inc
pop
xor
xor
inc
push
inc
pop
sub
mov
clc
mov
mov
adc
pop
sbb
ficomps
push
sbb
es
leave
loop
out
mov
sub
jle
fsubrp
ja
adc
push
or
adc
fs
xor
mov
or
ja
dec
mov
andb
jg
jp
icebp
iret
cmpsl
mov
rorb
insl
sbb
cmpsb
push
xor
lret
xchg
mulps
xchg
inc
xchg
shll
xchg
inc
jb
cmpsl
loopne
ficomps
push
popf
pop
clc
mov
jle
sbb
insl
popa
or
loope
inc
repz
lods
jno
jns
pop
enter
fisubrl
out
ja
adc
mov
jno
jp
repz
pop
dec
mov
sahf
orb
in
pop
ret
sbbl
pop
mov
imul
push
push
bound
out
lods
xchg
inc
lahf
xor
xchg
xchg
or
cmp
addr16
mov
std
adc
scas
test
iret
inc
daa
jnp
lea
imul
in
test
xor
push
test
mov
pop
inc
out
jmp
shll
lret
xchg
cwtl
sti
pop
pop
lods
testb
xchg
gs
hlt
xchg
or
add
mov
jae
jnp
fistpl
mov
xchg
lods
stc
inc
mov
fwait
push
lret
pusha
jnp
fisubrl
jl
hlt
jle
xor
cmpps
imul
out
es
add
and
dec
sbb
cmovp
or
mov
sub
in
fmull
pop
fisttpl
aad
or
pop
jle
in
clc
mov
cmp
jno
mov
loope
je
push
cmp
test
lcall
lods
cs
mov
mov
je
mov
iret
pop
int
push
pop
lods
mov
test
mov
or
push
in
xchg
fs
cmp
pop
xor
aam
popf
lds
lcall
pushf
jne
les
ja
jae
pop
imul
lods
fidivrl
pushf
mov
loope
jbe
mov
hlt
clc
insl
pop
scas
inc
mov
stc
enter
xchg
scas
xchg
cltd
add
test
insl
jb
out
incb
xchg
lock
cld
xor
sub
pop
std
jns
pop
pop
sub
test
adc
repnz
mov
les
ljmp
loope
or
out
mov
cmp
jle
in
packssdw
subb
dec
ficoms
adc
push
jmp
fistpl
cmp
adcl
fisubrs
lods
xchg
jp
jecxz
shl
stos
das
insb
and
dec
cs
xor
outsl
popa
jecxz
xchg
aad
lods
push
pop
scas
xchg
out
add
mov
addb
repz
pop
js
inc
pop
add
lea
cmp
aas
or
dec
repnz
cmp
shrb
inc
pop
mov
sbb
push
dec
xchg
in
jo
in
ljmp
mov
outsb
mov
loopne
push
mov
sub
bound
and
aas
gs
and
mov
fdivl
repz
pop
pop
push
mov
push
jl
arpl
aas
sbb
mov
int
adc
pop
inc
fisubl
xor
int
cmpsb
xor
lahf
add
movsl
jg
cltd
xchg
cmc
jno
popa
jmp
xchg
pop
popa
mov
push
jg
stos
and
fisttpl
test
insb
inc
mov
lods
push
negl
cmp
dec
jge
mov
hlt
jns
rcl
fmul
cmp
gs
outsl
or
sbb
mov
cmp
xor
ja
or
inc
aam
jnp
adc
push
out
and
es
cmp
je
cmp
mov
sbb
or
lods
arpl
gs
clc
mov
jl
mov
jb
mov
inc
and
aad
jp
ret
fmuls
cli
push
sbb
cli
orb
fsubr
mov
fcos
mov
lcall
pushf
test
popf
popa
jp
or
dec
xchg
push
data16
adc
xor
push
lea
icebp
pop
mov
jecxz
jl
sub
jne
loopne
test
mov
push
enter
mov
scas
xchg
mov
adcl
push
cmpsb
adc
adc
jge
mov
mov
push
pop
mov
adc
mov
sub
jle
cltd
xor
mov
mov
lock
insb
imul
arpl
incb
jbe
addr16
shll
jb
rorb
mov
pop
mov
vpminsw
ss
pop
in
arpl
in
pushf
add
jns
out
fildll
jae
mov
adc
aaa
das
fld
call
xchg
pop
pop
enter
adc
inc
and
xor
push
fwait
fs
xor
mov
adc
outsl
xlat
flds
or
fsubs
dec
xchg
into
std
test
jne
scas
ret
xchg
std
cmp
loop
test
shrb
add
mov
mov
leave
ljmp
ss
repnz
cwtl
cmp
adc
pop
xchg
mov
inc
ds
js
push
push
sahf
pop
adcb
sahf
sub
scas
adc
or
xor
stc
ret
sub
int
dec
cwtl
sub
jmp
adcb
add
or
pop
cmc
aaa
jp
jbe
mov
mov
cld
mov
xor
cmp
xchg
jae
sbb
pop
je
cwtl
inc
cwtl
xchg
scas
mov
mov
neg
repz
js
xor
dec
int
jae
ret
jnp
jle
mov
adc
insl
inc
jbe
fstps
adc
jp
ret
ret
inc
cmpb
pop
mov
mov
scas
orl
aaa
sub
das
test
inc
repz
cmp
mov
insb
push
fs
add
adc
cmp
sets
inc
arpl
xchg
dec
xor
shrb
push
les
cmp
sub
rclb
fcom
pop
data16
jge
mov
arpl
cmpl
push
mov
or
jmp
das
repz
fsubrs
sub
or
push
out
sub
jo
xorl
jae
mov
pop
sbbb
js
xor
lock
mov
jnp
mov
pop
xor
jecxz
xchg
sbbl
push
fsubr
mov
and
add
sbb
inc
ficomps
ret
push
int3
push
scas
out
sbbb
fistl
iret
jecxz
std
pop
je
pop
outsb
sub
aaa
shll
xchg
test
sub
jl
lret
cmp
aas
push
push
cmp
in
out
ss
jecxz
sbb
push
lods
prefetch
or
inc
out
xchg
mov
and
xor
xchg
cmpsl
imul
cwtl
jge
or
mov
rep
call
and
inc
adc
mov
mov
out
or
mov
rcl
repnz
add
mov
push
out
jp
or
push
std
fnstsw
jmp
add
inc
in
ret
popf
inc
out
scas
cmp
je
push
push
cmpl
mov
aaa
dec
inc
js
and
addl
pop
pop
xlat
adc
insl
mov
test
das
ret
cli
mov
xor
mov
push
lcall
xchg
jae
sub
pushf
addr16
cmc
lahf
mov
pop
xchg
into
mov
lock
xlat
mov
xchg
fisubrl
push
jle
sarl
roll
aad
lea
imul
fwait
ror
xchg
and
mov
xchg
mov
loope
cld
mov
test
or
push
mov
aad
mov
xchg
test
in
pop
popf
pop
imul
shll
cmpsb
jmp
xchg
shll
or
add
call
je
xchg
dec
inc
les
data16
jb
rorb
fcomi
fdivs
dec
icebp
jo
cwtl
adc
xor
xchg
movsb
and
jbe
into
jle
xchg
test
imul
dec
lods
pusha
jae
insl
sbb
in
xchg
jbe
sub
fwait
int
in
int3
mov
lds
push
in
adc
inc
je
jle
dec
or
fnstsw
movsl
out
sub
pop
mov
sbb
mov
lret
mov
ljmp
int3
add
outsl
xchg
mov
imul
out
movsl
fs
cli
lret
dec
jbe,pn
sbbb
cli
loope
pop
leave
mov
lods
in
push
mov
jg
mov
push
sub
and
sbb
ror
or
pop
mov
mov
outsl
dec
je
mov
add
jl
xor
mov
push
pushf
cmpsl
and
movsb
das
xlat
movsl
dec
xchg
mov
push
ds
xorb
aaa
mov
pop
shll
jmp
cs
out
ss
negb
push
mov
inc
loop
and
pop
imul
js
or
xchg
ljmp
push
mov
push
adc
addb
mov
xor
andb
pusha
imull
jae
pop
jne
and
mov
pushf
push
and
in
sar
sarl
mov
repz
sbb
mov
mov
mov
je
loope
xchg
mov
xlat
push
bound
sub
xchg
stos
xchg
cwtl
xchg
fwait
bound
jecxz
sub
jecxz
push
mov
out
push
frstor
lods
adc
into
bound
push
push
sub
xor
daa
test
mov
jmp
mov
lds
enter
sub
dec
adc
dec
jbe
push
sub
mov
push
dec
sbb
mov
loope
mov
aas
adc
inc
cmpsb
repz
push
mov
mov
fs
lret
shr
inc
shr
insl
mov
arpl
sbb
fwait
mov
int
into
sub
in
js
shrl
pavgw
fwait
je
in
xor
in
mov
fs
shl
ret
stos
dec
cli
sarl
arpl
inc
in
pop
cs
cltd
push
subl
jo
lret
dec
ja
nop
cmc
xchg
dec
fbstp
sbb
fdivr
pop
testl
jmp
and
fisubl
dec
orb
dec
xchg
lods
mov
jno
push
inc
cvtdq2ps
pop
orl
arpl
pop
andb
adc
cmp
arpl
sub
rorl
xchg
push
cmp
mov
data16
stos
lcall
loopne
xor
sub
lods
test
popf
aad
push
pusha
das
add
jle
out
ret
cld
add
std
in
aaa
test
xchg
adc
xchg
mov
xchg
pop
jae
inc
sbb
xchg
ficoms
out
cmc
pop
fwait
int
jno
addb
in
or
mov
js
psllq
and
jg
mov
dec
arpl
add
in
icebp
add
mov
insb
sub
fisubl
scas
dec
jmp
hlt
xor
cmpsl
sub
fidivrs
and
and
icebp
fdivrs
sbb
mov
cmp
ds
rcrl
int
and
adcb
cmpl
test
nop
mov
int
adc
sbb
aad
inc
outsb
cli
jb
imul
loopne
inc
mov
dec
repnz
xchg
push
js
enter
loop
dec
fidivrl
add
adc
inc
fdivp
push
push
int
xchg
or
jecxz
jbe
mov
adc
lahf
rolb
outsl
das
stc
inc
jg
jp
iret
or
cmp
clc
mov
pusha
mov
and
adcb
daa
hlt
dec
pop
clc
inc
insl
add
mov
stc
jb
xor
sub
dec
into
movsl
aaa
test
sbb
mov
push
popa
jae
inc
mov
mov
sub
sbb
xor
mov
jle
movsb
sbb
ficompl
cld
stc
dec
test
clc
cmc
xchg
ljmp
fists
cwtl
cmp
hlt
fdivrs
pop
jno
leave
xchg
loope
adc
cld
out
ret
pushl
xor
xchg
or
fxch
psrld
dec
repz
cmp
fwait
arpl
dec
mov
mov
ljmp
pop
xor
out
in
mov
push
or
xchg
xchg
test
mov
add
loope
ljmp
or
or
shr
and
xchg
test
outsb
fnstsw
in
xchg
lock
call
or
or
xchg
inc
mov
xchg
and
lahf
cmp
jo
lods
ret
adc
sbb
das
adc
or
shll
fstpt
into
xor
push
cmpsl
mov
cmp
fldcw
sbb
mov
add
call
pusha
cli
mov
mov
mov
add
xor
fimull
mov
cltd
or
je
cs
push
dec
je
ja
adc
sarl
dec
xchg
add
imul
xlat
or
pushf
in
push
xchg
subl
mov
je
test
xlat
lret
pop
or
mov
int3
sub
xlat
repz
insb
jno
cld
push
aam
leave
pop
stos
mov
pop
pop
cltd
push
pop
push
ret
pop
xchg
mov
or
mov
js
xchg
cmpsb
out
mov
repz
movzbl
pop
cmpsl
les
enter
push
ds
cwtl
cmp
enter
pop
pop
mov
add
push
push
into
push
jl
lret
cmc
cld
mov
mov
xchg
leave
test
sti
and
fsubrl
icebp
xchg
push
cmpsb
lahf
xchg
cmp
movsl
jle
in
shlb
inc
mov
lret
fsubrl
and
pop
sub
dec
sub
xlat
cmp
mov
mov
or
cli
inc
jb
pop
mov
and
adc
sbb
popf
xchg
jle
mov
pushf
mov
dec
out
and
push
jecxz
and
xlat
imul
data16
insb
loope
sub
xchg
movsb
xchg
push
dec
ljmp
shll
push
jmp
mov
stc
mov
out
lods
xlat
lock
mov
dec
dec
and
sti
xor
xor
out
push
fsubrl
mov
roll
hlt
mov
add
pop
xor
jbe
sub
mov
divl
cs
sti
lds
aad
cmc
xchg
mov
jb
jne
sbb
and
xor
rcl
inc
jge
cmp
sarl
call
xchg
outsb
in
in
mov
cs
mul
cmp
mov
lock
push
movsb
sbb
mov
xchg
inc
fisubs
scas
pusha
mov
inc
mov
rclb
test
in
out
mov
cli
adc
push
repz
mov
dec
outsb
gs
cmp
cmp
ljmp
ret
or
aad
arpl
jo
dec
add
cld
pop
popf
aas
test
cld
cwtl
and
adc
lods
xlat
ja,pn
add
sub
int3
add
shr
sti
mov
cs
in
sbb
movsl
xchg
inc
imull
sbb
mov
int3
sti
mov
jns
or
adc
shrb
cmpsl
mov
notb
cmp
xchg
js
jbe
nop
pop
or
out
sbbb
mov
add
and
fsubl
pop
push
jmp
cwtl
aad
jb
dec
sub
dec
lds
out
sbb
or
pop
jno
lods
sbb
int3
loop
or
pop
and
and
imul
sub
call
jge
mov
gs
test
dec
xchg
lea
mov
subb
int
fdivr
and
add
lcall
sbb
std
int
fidivrl
xchg
inc
mov
ret
pop
mov
mov
add
repz
push
test
pop
daa
pop
in
fs
leave
test
mov
or
mov
xchg
xor
jl
mov
in
mov
movsl
test
pushf
out
dec
push
pop
je
push
cmp
hlt
xchg
adc
stc
in
iret
dec
pop
ret
jl
inc
sti
stos
movsl
mov
dec
adc
scas
cmp
or
cwtl
aam
jecxz
stos
outsb
je,pt
sbb
bound
lods
mov
sbb
push
add
lods
sub
pop
jbe
fstpt
das
adc
sbb
lcall
orl
fnstcw
popf
lods
icebp
das
push
xchg
jmp
cmpb
js
and
xor
adcl
rclb
inc
jae
dec
popf
push
push
jbe
fucomi
loope
rclb
push
push
jb
out
jmp
ljmp
jns
scas
sub
mov
cld
cmpsb
xor
inc
jp
add
mov
jb
mov
dec
xlat
lcall
push
jbe
aam
test
insl
bound
cmp
xorb
aaa
dec
push
sti
jl
pop
inc
enterw
xor
les
pop
je
dec
jnp
adc
or
push
sbb
xchg
mov
insb
popfw
pop
cltd
addb
inc
cltd
js
pop
mov
and
ret
inc
shr
cmp
fidivs
push
insl
push
cmc
add
xor
cmp
inc
or
in
bound
xor
sub
jbe
mov
xor
jbe
test
push
mov
xchg
cs
dec
inc
cli
mov
gs
xor
fcoml
xchg
jp
add
sub
fs
addl
xchg
pop
hlt
or
xor
out
pop
gs
in
lods
mov
xchg
mov
fisubs
mov
sbb
rep
les
sub
decb
insl
test
push
stos
push
movsl
jle
test
xchg
mov
insb
hlt
imul
pop
shll
test
xor
mov
lret
pop
or
fidivrs
lods
aaa
mov
jl
loopne
or
std
scas
fisubrs
pop
mov
mov
push
push
fldcw
enter
jne
jle
push
or
shrb
adc
push
inc
stos
enter
pop
bt
out
mov
test
dec
sbb
push
xor
into
jno
outsl
mov
loope
mov
jmp
add
dec
lahf
repnz
lret
bound
xchg
mov
rcrl
mov
scas
mov
icebp
imul
add
pop
inc
lahf
loope
adc
mov
outsl
mov
sub
cmpsb
scas
rorl
mov
mov
and
jg
sbb
bound
sbb
jmp
rol
test
push
jns
xchg
ret
mov
andb
test
pop
jns
jmp
xchg
daa
push
movaps
push
lea
jb
dec
fsubrs
add
lods
ja
xchg
fwait
bound
push
sahf
fs
pop
jb
xlat
push
sub
jbe
pushf
sbb
mov
cmpsl
sar
je
nop
xor
inc
popf
push
fcoms
movsb
das
push
imul
pop
cltd
push
pavgw
aam
out
pushl
dec
ss
xchg
out
sbb
push
mov
sub
jns
outsb
inc
test
pop
fs
or
cld
stos
push
jo
stos
daa
jle
dec
lcall
std
push
in
stos
jmp
cmpb
in
mov
xor
enter
sub
cmpsb
rclb
repz
cmp
push
xor
xlat
pop
inc
mov
dec
pop
and
popf
mov
test
xlat
push
cmp
dec
arpl
addb
fwait
jnp
int
scas
sarb
add
hlt
mov
xchg
xor
ljmp
mov
mov
dec
ss
cmc
data16
push
cmp
int3
xchg
cmp
mov
bound
add
jne
cmp
test
notl
pop
cmp
shlb
push
insb
loopne
sub
imul
packssdw
loop
sti
mov
adc
insb
out
jge
xchg
into
pop
add
and
movsl
stos
push
cwtl
iret
nop
outsb
lds
out
imul
sub
or
mov
inc
and
sub
repz
lret
popa
shll
jno
push
mov
inc
test
mov
insl
aam
inc
mov
sub
pop
jmp
jg
mov
das
lret
mov
jb
in
hlt
aam
stos
cmp
add
pop
xchg
ds
int
sbb
imul
daa
xor
test
out
cmpl
cwtl
cmp
leave
xlat
ja
test
outsb
sahf
stc
adc
aaa
cwtl
mov
das
xchg
rclb
jle
cmpsl
test
inc
cltd
push
movsb
push
xchg
lock
repnz
data16
outsb
test
test
rorl
mov
lds
aad
and
nop
jnp
and
sbb
pop
sbbb
imul
inc
aas
sbb
incl
cmp
sub
mov
xchg
pop
popf
mov
xor
mov
jbe
stos
and
xor
adc
inc
fimuls
sti
in
jecxz
insl
sub
xchg
inc
outsl
into
aad
xor
jg
loope
rol
mov
imul
insb
mov
int3
ljmp
cmp
scas
pop
xchg
lea
adc
addr16
inc
addb
sti
jb
pop
push
mov
mov
push
dec
sarb
ret
int3
popa
addb
sti
out
xor
jne
xchg
sbb
mov
jle
lea
and
xor
dec
inc
xor
jo
add
mov
in
mov
jne
cmc
std
movsl
cli
repnz
aas
and
push
jge
hlt
pop
fs
xchg
and
pusha
js
in
sub
arpl
imul
repz
lods
push
mov
andb
loopne
gs
call
xor
lcall
inc
mov
dec
xchg
fcoml
dec
dec
push
or
in
xlat
mov
clc
or
lret
loop
clc
jg
add
rorl
jl
mov
adc
lcall
push
push
or
xor
jo
out
orb
mov
or
add
shrl
push
pop
pop
enter
push
push
das
int3
push
inc
and
popf
push
push
lds
fdiv
clc
cmpsb
cli
jmp
mov
push
push
pop
cwtl
mov
mov
push
push
cmp
jmp
roll
push
sub
in
xor
pop
out
inc
mov
mov
pop
xchg
mov
ret
fiadds
sbb
pushl
pop
xchg
test
or
fnstsw
neg
push
and
aam
int3
pop
lock
hlt
jl
mov
xchg
mov
lcall
lods
aaa
jo
add
adc
inc
sbb
das
sub
lds
push
test
pusha
nop
cmc
aad
fst
js
jmp
jmp
inc
jb
inc
les
push
loop
pop
cmp
addr16
loop
sti
shll
jne
ret
adc
mov
add
push
jne
int
jg
sbb
les
ljmp
mov
dec
xchg
nop
mov
fwait
mov
int
cmpsl
repnz
data16
sub
jg
movsl
hlt
xchg
fldenv
xor
das
mov
jo
je
scas
shll
adc
test
jne
push
imul
in
mov
loop
fwait
add
pop
stos
jno
dec
test
mov
add
ja
loop
dec
xchg
or
sbbl
mov
or
cmp
jo
aas
sarl
shll
leave
push
jl
and
int
sti
out
xor
jns
nop
push
mov
in
pop
xchg
mov
xchg
in
sub
pop
repz
dec
xchg
or
das
add
fldt
sbb
mov
in
jg
pop
fwait
or
loopne
or
lret
mov
setno
in
mov
in
mov
cltd
loope
enter
mov
and
sub
mov
lds
jge
sbb
imulb
lcall
dec
sub
scas
mov
jne
clc
leave
mov
data16
icebp
xor
aam
sub
cmpsl
shll
dec
sbb
inc
xchg
popa
clc
loop
cmp
jae
jp
out
pop
and
pop
xchg
stos
mov
not
push
and
jle
idivl
jne
movsb
shlb
pop
mov
aam
adc
shlb
fidivrs
out
decb
push
mov
stos
repz
pusha
lods
in
mov
shrb
lock
or
mov
jb
out
xchg
mov
and
and
dec
and
jecxz
into
roll
sbb
mov
orl
push
std
pusha
hlt
push
cmp
shr
inc
sub
fbstp
cmp
fs
sub
mov
je
dec
imul
scas
mov
or
into
lahf
lea
dec
adc
shlb
mov
daa
inc
stc
cmc
outsl
xchg
mov
fimull
sahf
add
stc
cmp
pop
push
dec
in
aad
cli
jne
or
das
fadds
adc
xchg
cmp
lret
dec
and
sti
adc
cmp
xchg
push
sbb
sahf
push
pop
jge
add
les
lock
xor
shrb
lods
push
mov
push
mov
ds
sbbb
mov
lahf
lea
inc
ret
or
pop
and
sbb
repz
mov
and
fwait
xchg
aaa
xorb
pop
mov
sbb
sub
mov
xchg
out
push
pop
hlt
xor
mov
mov
add
or
xchg
das
sub
jle
xchg
cmpsb
jp
push
sahf
push
dec
mov
idiv
lahf
and
fcompp
sub
inc
sahf
icebp
bound
outsb
cmp
mov
push
mov
and
mulps
subb
in
jno
fldt
xlat
inc
inc
clc
ret
push
fmul
out
outsb
mov
pop
pop
lds
pop
dec
outsl
adc
jl
idivl
mov
sbb
enter
das
dec
scas
jae
into
inc
jae
repnz
es
ljmp
sbb
lock
stos
icebp
daa
push
adc
adc
sbbl
mov
dec
inc
js
shufps
jo
mov
jge
mov
sti
sbb
push
cmpb
mov
inc
xor
mov
sub
jp
dec
jbe
sbb
dec
dec
negb
mov
in
cmc
fwait
test
inc
xchg
sbb
lcall
rcrb
mov
and
mov
enter
pop
ror
mov
xchg
mov
test
inc
jae
adc
in
pop
add
push
mov
xchg
or
cmp
ds
mov
jne
mov
xchg
cmp
lods
ljmp
sub
loop
ss
push
dec
cmp
mov
inc
arpl
movl
fs
jge
mov
ds
push
ja
dec
push
and
dec
jle
pop
adc
pop
adc
pop
repz
daa
in
or
push
push
xor
adc
fwait
cli
push
add
jg
inc
stc
pushf
iret
sub
test
mull
loopne
fcom
jmp
dec
cmp
insl
imul
loop
repz
std
rcl
fistpl
sub
in
in
ret
js
push
sub
cmp
and
int3
dec
lods
sarb
jmp
sbbb
lret
push
dec
push
test
int
lret
sub
es
fistpll
imul
mov
adc
or
cmpsl
popf
mov
sub
cld
sub
mov
hlt
sub
aaa
movsw
pop
inc
add
mov
adc
sub
fmull
xchg
mov
aas
or
rcrb
imul
adc
xchg
xchg
clc
mov
subl
push
xorb
sub
testl
nop
xlat
mov
fisubs
je
push
and
sub
int3
cmp
fstl
pop
imulb
imul
and
and
idivb
and
jle
loop
jmp
int3
push
in
mov
addr16
cwtl
lret
out
cmpsl
imul
cmpsl
lcall
cmp
sub
fcoml
inc
movsl
add
test
mov
sub
jno
ficompl
xorl
es
sub
ret
and
imul
jae
out
nop
dec
bound
insl
mov
repz
fs
sub
cs
dec
xor
sahf
imul
imul
pop
outsb
inc
test
daa
inc
loop
push
mov
push
mov
lods
cmp
call
xchg
inc
addl
xlat
imul
insl
jecxz
mov
mov
inc
xchg
jle
inc
daa
stos
scas
std
mov
adc
andb
mov
mov
mov
mov
or
jge
fsts
push
das
dec
out
stos
mov
xchg
dec
cmpsb
clc
arpl
shr
in
adc
xor
mov
xchg
mov
ja
lcall
dec
insl
imul
xor
ja
dec
jl
fwait
push
mov
insl
mov
cmpsb
push
ss
jno
push
lods
inc
mov
pop
inc
ds
mov
mov
pop
stos
cld
call
in
in
mov
xchg
iret
mov
cltd
jae
imul
test
push
int
into
xor
push
jp
inc
pop
xchg
push
sbb
pusha
dec
into
scas
cltd
jno
mov
jae
pop
jnp
mov
mov
jle
test
jae
addb
repz
sub
xchg
xor
push
mov
push
dec
mov
fcmove
pop
or
push
les
pushf
lret
mov
jg
inc
cmp
mov
or
scas
into
adc
xor
and
xchg
out
andl
jge
aas
xchg
cs
mov
jno
pop
pusha
test
cmp
and
das
inc
ss
xchg
clc
pop
out
cmp
push
xchg
mov
dec
add
int3
mov
fcomps
lcall
inc
jg
insl
mov
mov
and
sub
push
sbb
jg
inc
add
fwait
test
in
icebp
lcall
movsl
test
js
sbb
xlat
shrb
pop
and
outsl
repz
and
add
lahf
lock
add
mov
add
cmp
mov
pop
mov
out
pop
mov
mov
jb
clc
add
es
fisubl
ret
sub
popf
cmovae
adc
or
xor
push
pop
xor
faddp
lods
xchg
xchg
popf
dec
or
xlat
lret
pushf
icebp
adc
inc
cs
and
xchg
sbb
lods
cli
ret
call
scas
push
cmp
popa
lods
mov
mulb
adc
nop
sub
dec
mov
dec
push
nop
jp
mov
sub
push
xchg
insl
pop
pop
es
inc
int
test
call
in
and
sahf
scas
negb
dec
mov
out
adc
cs
nop
stc
add
pusha
lods
cmp
add
mov
jb
pop
cltd
fs
dec
aas
sub
push
out
inc
sub
out
sahf
jno
fistpl
adc
or
inc
or
out
mov
and
add
pop
jbe
mov
sti
or
aam
jg
or
loope
cmp
sub
xor
pop
repnz
xor
and
jae
pop
stos
xchg
shrl
jmp
mov
lea
lds
cmp
cmp
rol
hlt
dec
insb
mov
mov
xor
and
imul
inc
fbld
xor
fcmovbe
sbb
nop
xchg
cmpsl
cltd
jno
out
adc
lock
cltd
mov
inc
and
out
and
cmpsb
cltd
scas
mov
mov
xor
push
push
inc
mov
lret
out
lock
cs
or
xor
jge
adc
mov
fiadds
in
int
lods
cli
mov
lods
in
leave
aas
mov
fistpl
mov
lods
inc
mov
loop
push
inc
push
mov
cmpsb
lahf
fwait
dec
outsl
dec
cmp
jbe
cld
lret
lea
mov
jbe
or
inc
fisttps
inc
push
insb
stos
scas
or
rorb
pushf
mov
or
nop
gs
stos
daa
bound
or
sbb
or
push
mov
sbbb
push
pop
mov
cld
add
push
std
outsb
cmpsb
cmp
mov
mov
test
ficoml
enter
in
mov
dec
fs
out
push
int3
fwait
in
sarl
in
mov
xchg
mov
hlt
sbb
dec
push
imul
xchg
and
jl
cmc
ljmp
jo
sbb
int
mov
std
and
mov
lret
test
dec
lods
pop
sbb
insb
outsl
mov
or
bound
rorl
imul
test
inc
pop
ljmp
xchg
pop
das
jno
fiadds
sti
sub
jns
cmp
and
mov
sbb
inc
stos
pop
xchg
xor
jo
mov
mov
aaa
out
cmpsb
push
test
push
or
add
out
xrelease
cmpsb
mov
xchg
lea
or
cmp
mov
adc
cmp
shll
mov
add
mov
js
xor
cmp
push
int3
fcom
lret
test
cltd
mov
call
mov
movsl
loop
inc
mov
pop
and
sbb
jmp
movb
sub
jns
jns
and
sub
push
push
mov
xchg
sub
jbe
out
inc
and
cmp
add
sub
ss
mov
call
mov
lret
push
dec
cltd
aaa
call
in
inc
push
sub
sarl
imul
in
loope
mov
into
in
aaa
xor
xlat
xchg
mov
cmp
xchg
aad
arpl
add
aas
jle
or
adc
cmp
out
jmp
pop
je
sub
add
pop
pop
nop
leave
aaa
scas
bound
sub
inc
inc
dec
xchg
jle
gs
in
jno
mov
pop
and
mov
dec
imul
jmp
leave
or
leave
xchg
rorb
jnp
test
imul
add
lret
test
lahf
sub
das
sub
jle
or
aad
fdivl
vmwrite
xchg
addr16
enter
loopne
dec
mov
jne
sbb
sub
outsl
pop
cwtl
out
neg
popa
out
dec
outsb
add
icebp
jae
mov
ror
mov
ret
outsb
cmp
std
jge
jmp
lods
inc
aaa
fidivrl
pop
lds
add
js
mov
mov
xchg
lea
rcrl
xchg
int
cmc
rolb
lahf
popf
or
inc
cmp
jbe
xchg
outsl
stc
enter
aaa
lret
push
jae
mov
dec
cld
mov
and
jecxz
jo
mov
xchg
outsl
pop
adc
and
aaa
es
or
in
std
jb
ljmp
das
aaa
sub
and
rcrb
pop
rol
pop
std
pop
cmp
sti
xchg
stc
inc
xor
test
pop
mov
dec
or
mov
pusha
lret
jle
mov
shrl
fldl
imul
sub
adc
sbb
cmp
roll
clc
jne
insl
shrb
test
test
mov
xorl
xor
mov
inc
ret
xchg
and
arpl
scas
mov
mov
mov
adc
inc
pop
add
mov
sub
mov
test
add
inc
mov
sbb
ds
ror
adc
jge
int3
jle
xchg
pop
out
push
je
leave
repz
mov
out
ret
bnd
and
movsb
gs
incb
sbb
call
bound
xchg
mov
pop
adc
repz
das
test
mov
popf
mov
pop
shlb
xchg
push
push
mov
and
inc
mov
and
pop
and
es
shlb
leave
ret
int3
and
pop
loopne
adc
xchg
fs
shll
inc
es
out
jo
test
mov
cmp
mov
iret
dec
fildll
in
jnp
inc
xchg
cli
es
jl
mov
lret
pop
push
jge
adc
add
and
cs
add
and
into
stos
cmp
mov
xlat
mov
cmp
out
jmp
fsubr
jecxz
jae
mov
mov
mov
mov
adc
mov
pop
xchg
jp
inc
mov
sbb
ret
and
pop
sbb
jecxz
adc
or
mov
adc
add
scas
out
fstl
mov
xorb
sahf
std
dec
xchg
dec
fwait
sub
xlat
cld
cmp
jecxz
mov
loope
sub
repz
push
mov
xor
in
cs
sti
push
cli
shll
jge
cmp
idiv
repnz
in
mov
rclb
dec
out
and
out
jecxz
mov
stos
lahf
xchg
xchg
shlb
in
int3
xor
andl
insb
xor
in
jo
sub
leave
insb
int
inc
pop
insb
sbb
inc
fistps
jns
push
loopne
in
mov
test
enter
shll
ljmp
sbb
dec
bound
mov
ret
test
sub
aad
push
and
pop
pop
cmc
xor
cmp
xor
jne
iret
test
mov
out
add
or
scas
fsin
loope
hlt
cli
dec
add
xor
or
cltd
mov
test
xor
jmp
bound
mov
add
aad
leave
and
not
je
mov
leave
mov
mov
pop
mov
adc
or
mov
xor
cmpsl
mov
and
dec
inc
xor
insl
sti
xor
mov
ds
stc
sub
fs
out
fsubl
and
mov
pop
jae
test
and
fstpl
mov
pop
leave
stos
in
popl
sub
outsl
pushf
mov
mov
mov
sub
test
idivb
and
dec
aam
lods
push
mov
ss
cmp
jecxz
cld
stos
stos
pop
in
shrl
push
int
and
loop
inc
test
push
mov
insb
cld
stos
mov
icebp
movsl
loope
call
ds
dec
mov
es
pop
or
jecxz
idivl
pop
xchg
in
sahf
cmp
mov
divl
inc
sub
add
push
mov
pop
mov
sbb
outsb
insl
enter
rcrb
jecxz
mov
dec
push
cmp
or
mov
inc
and
mov
mov
sub
ljmp
out
mov
sbb
rcl
out
cmp
and
bound
divb
add
jb
out
int
pop
pop
and
mov
xlat
cmp
cmpsl
cltd
mov
gs
es
stos
inc
pop
jge
sub
push
or
push
int3
movsl
pop
data16
add
sub
jns
fs
xorl
cmc
inc
pop
ret
pop
ljmp
cwtl
enter
jb
mov
or
add
call
insl
jb
inc
aam
jg
nop
mov
lds
addr16
inc
ret
hlt
movsb
cmp
ds
popa
ss
mulb
add
dec
fdivrl
or
hlt
outsw
cmc
or
sbb
xchg
lret
and
pop
out
in
xchg
mov
push
lods
dec
jl
pop
pop
xchg
push
mov
cmp
enter
and
sbb
sbb
dec
ss
cs
les
xchg
imul
js
inc
cli
mov
or
loop
xor
xchg
call
dec
pand
imul
pop
sub
cmp
call
popa
in
push
test
sbb
aam
cmp
add
mov
les
mov
out
dec
and
xchg
std
dec
xchg
sub
push
push
jo
cmp
adc
inc
jmp
imul
cwtl
pop
xor
mov
inc
and
fcomps
pop
and
adcl
cmc
ret
pcmpgtd
jge
rol
push
inc
fimull
mov
pop
or
xchg
ret
enter
scas
mov
ret
xchg
ret
adc
pop
xor
or
and
jle
sub
addr16
push
push
sub
imul
xor
fildll
pop
lods
fwait
out
fiaddl
mov
aas
imul
xchg
jle
outsb
ja
lcall
mov
mov
aas
mov
and
mov
pop
fiaddl
fists
mov
push
sbbl
out
inc
cmp
insb
sub
jge
pop
jo
out
ljmp
clc
call
add
fsubr
cmp
sub
out
jo
std
jnp
adc
mov
jecxz
pop
adc
jns
lret
jl
jnp
cli
jle
mov
adcb
mov
fstps
mov
sahf
lcall
rclb
je
outsb
mov
mull
push
scas
push
mov
movsb
xor
imul
push
iret
adcl
loop
mov
es
fsts
inc
repnz
mov
sbbb
inc
test
cmp
or
inc
jns
ljmp
sub
daa
in
cli
jecxz
push
mov
mov
int3
ficoms
int3
outsb
repnz
test
adc
dec
push
xor
imulb
pop
fsubrl
inc
push
rcrl
nop
xchg
lods
out
ljmp
sbb
data16
outsl
fbstp
jl
test
cmpsb
jp
push
push
gs
cmp
shrd
dec
push
xchg
leave
imul
adc
orb
bound
lods
test
xor
add
cwtl
lea
cmp
jecxz
inc
scas
or
adc
mov
enter
push
cmc
jne
fldenv
sub
pop
mov
test
fxch
bound
dec
fisttpll
cmp
sbb
enter
pop
cmp
test
jne
adc
cmp
push
lret
cmpsb
mov
cld
adc
in
clc
dec
das
or
js
cs
and
outsb
or
clc
fwait
inc
ljmp
lock
into
push
fsubs
popa
mov
or
mov
sub
push
scas
jle
and
scas
xor
sub
outsb
adc
lret
pop
call
dec
imul
dec
xchg
dec
aam
enter
lret
flds
gs
pop
popf
sbb
notl
pop
nop
sbb
lds
dec
out
pop
out
mov
sbb
aaa
stc
stos
inc
cmp
sarb
popf
aad
xchg
rcrb
cltd
push
or
orl
sbb
testl
jb
push
pop
push
mov
call
lret
idivl
in
sub
mov
mov
and
in
or
out
les
push
jb
sbbb
sbb
sahf
xchg
and
jecxz
scas
inc
stc
sahf
dec
imul
lcall
aas
xor
int
mov
and
push
and
cli
fs
xor
mov
and
jge
inc
adc
inc
mov
out
gs
mov
mov
cmpb
mov
cld
aam
test
dec
mov
mov
xchg
push
cmpl
bound
fcompl
xchg
inc
jae
loopne
and
mov
xlat
add
xchg
push
pop
xor
addr16
fbstp
out
sbb
xchg
add
add
inc
lahf
int3
out
in
cmp
mov
adc
cwtl
jl
sahf
jle
pop
xor
int
repnz
fldcw
or
sahf
cmpsb
in
sti
out
or
das
cmp
jp
stos
test
lcall
or
cmp
sub
sub
sbb
out
call
cmp
push
push
cmp
fstpt
fcomps
je
in
pushf
cmp
pop
sahf
movsb
rcrl
dec
adc
mov
sarb
ds
arpl
rcr
add
hlt
test
pop
movsl
cmp
out
add
in
aaa
vpmuludq
pop
push
dec
stc
cmpsb
les
aam
out
sub
pop
add
mov
jmp
dec
add
xchg
pop
xchg
es
je
adc
stc
addr16
mov
lcallw
cmp
mov
out
shr
stos
andl
pop
push
adc
jbe
sub
pop
mov
clc
lock
inc
xor
dec
lcall
int3
fiaddl
popa
cmpsb
mov
mov
jnp
dec
imul
pushf
imul
xor
int3
xchg
sbb
out
sbb
sbb
or
fs
sarb
fstl
xchg
sbb
movsb
cmp
xchg
jnp
fisttps
xchg
xor
lret
jbe
loopne
arpl
mov
popa
jbe
inc
mov
sub
cmp
xchg
stc
pop
mov
ljmp
mov
inc
loop
dec
dec
les
push
je
int
adc
sub
pop
sub
mov
lods
cld
mov
cmp
dec
mov
stos
sti
adc
cmpb
test
or
add
lds
dec
xchg
divb
adc
xlat
cli
inc
outsl
adc
lock
enter
push
sarl
fdivp
push
mov
in
push
mov
ss
mov
lcall
add
sub
out
loop
dec
sub
outsb
leave
js
cmp
cmpsb
fisubs
sti
das
loop
adc
cmpxchg
pop
mov
pop
adc
add
divb
push
cmpsl
push
das
aaa
cmpl
ja
sti
pop
test
leave
cmp
fsubrs
ljmp
fisubl
cmc
push
cmpsb
push
outsb
jge
inc
sub
adc
fiadds
leave
sbb
pop
pop
xchg
xchg
loop
aas
andb
outsl
mov
sub
cmp
loop
in
mov
movsb
gs
add
popf
ds
lret
stos
mov
fdivrl
icebp
into
jbe
mov
xor
lea
mov
push
orb
data16
pop
mov
outsb
inc
sbb
inc
mov
pop
jp
ljmp
daa
sti
mov
mov
out
lea
mov
fwait
mov
je
rclb
int
adc
aaa
mov
fsubrl
xor
subl
or
fs
shrl
rolb
iret
mov
out
mov
adc
mov
push
xor
jmp
aaa
in
dec
pop
sub
js
pushf
roll
adc
mov
fwait
andl
insb
push
push
fcoml
cmp
sub
loopne
fstpt
movsl
popa
xchg
inc
inc
pop
xchg
flds
fucom
int3
and
jecxz
add
mov
add
push
ljmp
or
out
ss
mov
subl
pop
out
aad
push
or
out
insb
aam
outsl
cmp
sbb
js
icebp
ret
and
xlat
mov
gs
loope
aas
mov
lcall
jl
mov
xor
mov
jo
and
dec
cmp
adc
jmp
xchg
dec
mov
dec
push
lea
push
sbb
fcomps
sahf
cwtl
mov
cmp
lods
inc
mov
das
clc
or
insl
loopne
arpl
lds
xlat
int
cmp
sub
add
pop
enter
int3
sbb
icebp
sahf
mov
add
inc
std
in
xor
mov
add
pop
sahf
or
xor
sub
ja
shll
stos
dec
push
loopne
movsl
push
stos
movsb
push
shl
xchg
and
or
bound
sub
in
out
es
lods
ja
out
ss
dec
pop
jle
pop
in
roll
mov
push
pop
and
stos
dec
stos
mov
sub
insl
ja
fwait
fs
cs
in
das
call
cwtl
and
adc
repz
or
lcall
dec
fidivs
sbb
mov
clc
mov
push
pusha
dec
nop
std
pop
fimull
jbe
add
out
movb
cmpsl
aam
xchg
sahf
mov
int3
lds
divl
ds
ret
mov
out
jno
xchg
cmp
adc
imul
es
adc
call
add
pusha
mov
dec
es
or
test
jno
push
iret
sub
cwtl
shl
jg
rcl
clc
pop
in
add
cmpsl
pop
iret
cld
adc
push
push
mov
sahf
ljmp
loope
es
into
leave
dec
or
hlt
xor
and
jbe
mov
push
inc
cmp
cmp
jg
add
movsb
adc
push
mov
xchg
jmp
rorl
je
xchg
mov
or
int3
pop
les
lcall
lods
out
add
cmp
lret
push
mov
xchg
sarl
leave
push
lcall
push
insb
inc
decl
xlat
xchg
cltd
dec
imull
cs
sbb
aad
popf
inc
pop
out
sbb
sub
push
out
cli
push
mov
aas
ljmp
jp
lcall
cmp
loopne
shlb
push
xor
sub
std
push
cmpsl
cmp
test
bound
mov
jno
push
dec
out
mov
sahf
loop
popf
xchg
or
push
inc
xor
add
jmp
cmp
sbb
ret
jno
sbb
and
out
pusha
xchg
sub
push
push
jnp
xchg
repz
out
int3
in
imull
call
in
and
jecxz
sti
xchg
sbb
jl
adc
call
cmp
and
mulb
scas
inc
dec
loope
daa
imul
add
ret
pop
push
or
jecxz
movsb
shlb
sti
leave
into
iret
lock
scas
cltd
movsb
dec
idivl
lret
and
pusha
mov
xor
clc
fwait
xchg
push
lret
add
int3
and
and
or
mov
daa
ss
shr
int3
dec
movsl
mov
sbb
scas
sbb
cwtl
aas
dec
or
and
add
sbb
cmp
lret
rcrl
mov
push
and
jg
mov
add
subb
add
sub
data16
ja
mov
enter
hlt
sbb
pop
divl
outsl
mov
pop
adc
test
ds
jmp
stos
shrl
or
mov
les
inc
addb
mov
adc
jnp
inc
int
jbe
data16
arpl
outsl
push
mul
ret
mov
clc
xchg
and
and
dec
cmp
inc
cmp
aam
fisttpll
cmp
addr16
dec
and
push
xor
push
mov
mov
insl
push
sub
jge
xor
sub
and
cmpsb
clc
in
std
stc
loopne
push
cmp
repz
cltd
xchg
outsl
mov
adc
cmp
sub
popf
ja
xchg
mov
cmc
sbb
sub
lea
xor
addr16
and
test
dec
fiaddl
bound
jl
aas
cltd
mov
sub
add
out
inc
aad
inc
in
sarb
cmc
ljmp
mov
dec
push
pop
notl
in
call
pop
sub
aad
mov
xor
pop
movsb
push
cmpb
iret
sbb
mov
sbbb
sub
sti
fnstsw
push
int
xchg
mov
fst
xor
xchg
out
jle,pt
inc
mov
jno
and
sbb
sbb
test
mov
fwait
sbb
xchg
mov
mov
mov
pop
stos
int3
jns
cmp
xchg
fiadds
cltd
gs
insl
mov
addb
jo
mov
loop
test
nop
aas
sbb
mov
idiv
pushf
fidivrs
ret
lahf
mov
test
mov
push
sub
inc
mov
pop
jbe
stc
lods
xlat
hlt
loop
std
in
push
fbstp
push
xchg
inc
sub
pop
push
push
shl
ret
push
xchg
rcr
lods
sub
stos
xor
movsb
movsb
mov
cmp
popa
mov
nop
std
dec
cwtl
fidivs
rcrb
lcall
pop
jp
push
mov
lret
sub
aaa
mov
ror
sbb
mov
addl
shrb
hlt
inc
outsl
icebp
das
cmpl
cld
inc
in
mov
mov
jg
nop
adc
bound
rol
adc
test
mov
cmp
cmpsb
sub
ss
inc
push
lods
jl
sbb
dec
stc
or
andb
xchg
push
in
arpl
xchg
test
mov
out
sub
sub
push
jle
adc
mov
cltd
loopne
inc
dec
outsb
add
fwait
and
pop
daa
jge
fsubr
and
or
addb
popf
shlb
daa
rclb
mov
mov
push
mov
std
movsl
pop
test
pop
aad
cwtl
or
iret
add
test
cwtl
jns
jns
inc
mov
outsl
in
lea
and
test
icebp
mov
xor
test
pusha
and
mov
sti
adc
jp
into
fidivs
sahf
test
push
adc
repz
in
jge
ret
notb
mov
dec
xchg
scas
sbb
lods
mov
sub
pop
out
cmp
push
adc
out
mov
pop
and
mov
mov
and
push
pop
sbb
adc
adc
sbb
cmp
repnz
outsb
test
cmp
mov
dec
inc
ficoms
cmpsl
out
cmova
mov
mov
lcall
out
add
mov
inc
mov
test
clc
fadd
jb
into
or
cmpsl
xor
or
cmp
test
hlt
sub
orb
stos
dec
push
data16
dec
mov
dec
jne
dec
pop
out
int
outsl
sbb
dec
fnstsw
lods
rorb
rcrb
push
sbb
xor
js
bnd
push
cli
or
sbb
cmp
sub
mov
lods
jnp
fwait
sub
jmp
incb
daa
inc
inc
push
out
mov
push
scas
jbe
pop
dec
int
xchg
push
ljmp
fbstp
call
movsl
cmp
sub
adc
jb
sub
sbb
inc
fs
push
xchg
push
mov
les
outsb
nop
in
push
jae
or
mov
push
sub
lret
pop
rolw
mov
dec
bound
pop
ljmp
addb
cs
mov
push
aad
mov
shr
imul
ret
mov
inc
nop
or
dec
enter
or
insb
jp
sub
pop
test
divb
jl
leave
aaa
sub
stos
sarb
mov
in
lock
push
mov
inc
pop
pushl
pop
push
rcll
fldl
pusha
movsb
jmp
pusha
fldl
adc
sbb
push
sti
daa
lret
je
repnz
cs
stc
mov
loopne
in
sub
outsb
rcl
loope
mov
scas
jp
pop
out
sub
test
mov
xor
dec
into
or
xor
popa
rcrb
rolb
pop
push
rcrb
mov
add
sub
pop
in
cmp
mov
push
out
mov
outsl
rcrb
fnstenv
mov
ljmp
mov
sbb
mov
xchg
xchg
push
xor
push
sub
std
push
inc
pop
dec
pusha
jns
xor
dec
orl
pop
ret
call
adc
xor
ljmp
sub
repz
sub
add
int3
xchg
fstps
int
mov
cmp
daa
shll
push
mov
iret
xor
mov
fdivr
xchg
mov
xor
dec
fistpl
mov
xor
xchg
cli
enter
insl
stos
daa
cmpsb
cmp
unpckhps
mov
cmp
push
inc
push
xor
add
aad
mov
add
stos
xchg
call
inc
lcall
push
in
and
addr16
pop
mov
in
mov
mov
out
ljmp
pusha
push
out
adc
cmpb
iret
mov
push
jae
stos
inc
aad
mov
dec
mov
dec
fldt
inc
xchg
adc
push
stos
mov
test
jmp
jo
insl
fwait
sub
test
das
dec
jp
push
inc
xchg
mov
push
jmp
pusha
push
sbb
div
call
mov
das
xchg
sbb
icebp
in
jecxz
pop
enter
pop
mov
mov
sbb
or
subb
pop
ds
xor
ljmp
call
xor
or
dec
cmpsb
adc
push
nop
sar
push
cmp
lahf
je
cwtl
dec
push
mov
pop
sub
lret
fmuls
mov
in
into
mov
cmpsl
stos
push
in
push
add
data16
pop
js
and
clc
cmp
jne
popa
add
pop
in
sbb
lret
arpl
lahf
mov
aam
pushl
mov
rol
push
jo
dec
xchg
hlt
mov
add
roll
pusha
stos
fcmovne
push
pushl
pop
mov
dec
lods
popa
loop
popf
pop
sub
and
adc
jns
sbb
test
lret
cmp
add
fistl
popa
jle
sub
xor
push
add
push
pop
ret
sub
je
repnz
push
xchg
mov
arpl
pop
sub
cmp
and
dec
push
scas
data16
mov
mov
repnz
push
es
stos
fcoms
test
mov
xchg
inc
in
xchg
pop
adc
mov
xchg
pop
adc
std
xor
jnp
dec
testl
popf
hlt
addl
or
push
mov
cmp
push
jno
lock
and
add
shr
shll
insb
dec
cmp
pushf
push
cmp
push
clc
pop
pop
xchg
push
mov
jbe
pop
std
sub
push
or
bound
push
fwait
test
daa
jmp
ret
sub
jnp
add
jne
fidivl
adc
xchg
bound
outsb
cmpsl
mov
mov
mov
or
jne
lock
pop
cwtl
out
mov
in
inc
and
pcmpeqd
lcall
in
mov
notl
xchg
rorb
jle
rcpps
mov
sbb
mov
in
xchg
popa
fisubrs
push
jo
loopne
pop
mov
lea
jmp
fistpll
adc
inc
dec
cmp
add
into
xor
incl
pop
scas
mov
mov
xor
aas
push
cmp
xchg
push
mov
iret
mov
js
sarb
nop
jp
cmpsl
test
cmp
lods
enter
scas
adc
dec
pop
xchg
mov
jg
imul
aad
pop
sbb
rcrl
in
push
cmpb
scas
lret
outsl
push
cmp
push
shrb
lds
imul
subb
pushf
push
fdivl
adc
cld
add
jp
shr
call
mov
mov
test
out
jns
lahf
dec
pop
shrb
mov
hlt
cltd
push
fdiv
lcall
add
fdivrl
arpl
adc
and
ret
call
push
adc
add
push
out
mov
adc
xor
sbb
pop
filds
mov
je
popa
sbb
push
cmp
jp
inc
movl
xchg
jae
add
mov
mov
shll
adc
pop
sbb
aaa
xor
aam
aas
mov
icebp
lea
and
sbb
rolb
sub
rcl
or
insl
outsl
mov
repz
in
cmp
sub
mov
cmp
ljmp
ret
dec
clc
repnz
ret
stc
jp
test
ret
sbb
mov
jnp
xlat
lret
cli
xchg
jmp
adc
loopne
popa
test
scas
pop
xchg
push
xor
cmc
scas
fstps
into
mov
jp
enter
ja
mov
jns
fdivrl
fnstenv
xor
push
lods
dec
cld
in
cwtd
xchg
inc
aad
xchg
pop
pop
inc
out
xor
sub
jne
test
and
xchg
adc
xchg
mov
sbb
int
xchg
mov
push
jge
adc
sub
loope
aam
xorl
call
pop
cwtl
shrl
pop
aad
ljmp
mull
pop
mov
xchg
aad
test
push
jns
hlt
rcrb
insb
and
pop
cmpsl
scas
es
xchg
mov
xlat
loopne
inc
mov
in
push
lods
pop
out
gs
sbb
xchg
pop
inc
dec
mov
cmovge
into
je
inc
xchg
arpl
adc
in
sub
mov
push
test
push
mov
in
cwtl
or
outsb
rclb
jne
fcomip
adc
into
pusha
das
shl
popf
icebp
pop
loope
jno
test
int
add
gs
adc
pop
cmpsl
fstps
add
mov
dec
ficomps
popa
cmpsl
mov
movsb
xor
sbb
scas
dec
icebp
and
dec
add
mov
push
bound
dec
rorb
xorb
push
out
jg
sub
sub
cmp
push
les
mul
xor
adc
ljmp
addr16
push
popf
out
add
aam
jge
mov
jle
shlb
push
add
add
and
or
sbb
sbb
lcall
leave
fldl
andl
sub
mov
mov
outsb
and
jmp
mov
lahf
dec
insl
shl
push
dec
and
daa
imul
scas
ret
clc
repnz
sub
pop
cmp
push
lock
jbe
out
fnstsw
add
cmp
or
cmpsb
sbb
gs
xorl
cwtl
std
jne
xchg
out
in
xor
fisttps
and
jnp
sbb
fwait
lahf
add
adc
adc
xor
jbe
sahf
cld
mov
sbb
test
mov
jge
shl
jns
sub
cmc
xchg
push
add
or
mov
pop
addr16
mov
in
popa
xchg
dec
out
jae
cmpsb
popf
nop
mov
data16
out
pushf
push
cmp
or
daa
mov
loopne
aaa
ss
outsb
lahf
sarl
ljmp
gs
mov
pop
jmp
push
imul
push
into
mov
pushf
or
push
xchg
xlat
xor
test
rcl
xchg
mov
push
add
inc
cmpl
xor
cmp
sub
decl
iret
iret
stos
enter
movsb
ret
popl
and
fistpll
push
popa
sarl
pop
loopne
adc
sbb
mov
stos
cmp
dec
pop
rcrb
popa
fistpl
pop
iret
add
pop
push
sub
cmp
jnp
inc
pop
pop
hlt
dec
orb
or
xor
int3
or
mov
push
mov
insl
jle
add
push
or
jmp
in
jae
and
xchg
in
push
mov
lock
push
jp
test
jmp
subb
mov
ljmp
orb
jl
adc
mov
fisubl
mov
inc
mov
imul
fsts
and
cwtl
lcall
mov
in
in
and
push
mov
dec
les
xor
xchg
pop
push
iret
cmc
dec
mov
in
or
dec
mov
inc
sub
mov
out
es
in
xlat
adc
mov
cmpsl
jg
pop
into
sbb
and
jnp
mov
adc
inc
xchg
jbe
add
cmp
push
mov
push
mov
add
popa
add
fisubs
or
add
or
push
leave
push
leave
adc
sub
sub
cmpsb
aam
add
pop
mov
in
arpl
pop
push
bnd
pop
lods
int
or
cmpsb
cwtl
stos
adc
roll
jp
or
sub
ja
push
sbb
adc
js
fiaddl
movsl
xor
mov
inc
pop
sbb
fldl
and
outsl
dec
imul
les
outsl
cmp
pop
mov
cmp
jmp
or
mov
sbb
mov
dec
jl
add
fdivrs
loop
cwtl
mov
adc
ficoms
mov
pop
push
mov
mov
std
cmp
gs
mov
mov
shr
cmp
es
push
in
cli
sbb
push
pushf
push
cltd
jge
adc
sub
cmp
jne
mov
rdmsr
into
scas
sbb
repnz
mov
mov
push
xor
xchg
shlb
dec
xchg
imul
pop
mov
out
out
sbb
fistpl
mov
mov
xchg
xor
mov
dec
push
cmpsl
ss
mov
daa
xchg
cli
pop
lods
daa
xchg
pop
out
push
cld
adc
lahf
lock
xchg
and
test
xchg
jmp
add
lret
leave
roll
ss
jecxz
stc
das
push
out
xchg
push
shrl
adcl
test
sub
out
and
lods
icebp
cli
movsb
in
das
outsl
popa
cmp
dec
push
push
dec
or
sub
notl
xchg
inc
das
mov
sbb
push
jae
cs
loope
aaa
mov
push
xorb
and
mov
xchg
data16
mov
fcoms
pop
mov
pop
pop
movsb
dec
fcmovnbe
push
jp
movsl
insb
xchg
dec
cmp
and
aaa
push
nop
or
pop
or
scas
mov
gs
sub
cmpsl
cld
xor
and
test
adc
loopne
fildl
mov
jge
and
cmc
mov
inc
xchg
pusha
repnz
dec
in
dec
mov
mov
outsb
cwtl
outsl
or
sub
popf
cmp
xor
test
fisubrs
mov
pop
xchg
outsb
je
sub
cmp
pop
dec
or
mov
popf
pop
int
shrl
loopne
mov
xchg
lret
cmc
push
pop
and
jae
mov
shll
fistpl
add
inc
cmpsb
pop
cmp
call
dec
sbb
lock
dec
imull
mov
adc
mov
scas
mov
or
pop
aam
and
movsb
and
and
push
jbe
pop
inc
ds
mov
pop
mov
and
pop
test
pop
fcompl
inc
out
mov
xchg
xchg
rcrb
in
nop
mov
lret
and
sbb
cli
inc
xlat
add
gs
mov
mov
sahf
stos
pop
in
sarb
into
mov
mov
mov
mov
pop
enter
jne
rolb
daa
adc
out
jmp
imul
es
mov
mov
out
in
les
and
outsb
lret
and
outsl
and
push
out
mov
add
xchg
push
jge
sbb
mov
cmp
mov
mov
xchg
jecxz
imul
mov
dec
out
push
js
in
ljmp
pop
das
data16
cld
jo
mov
inc
ret
inc
pop
or
in
pop
into
cmp
push
fwait
push
mov
lods
mov
mov
aas
dec
mov
in
inc
mov
repnz
xchg
rorb
mov
mov
nop
sti
add
xor
and
repnz
jno
pop
xchg
add
gs
push
add
pop
push
cmp
jl
rorb
jmp
in
mov
sub
fucom
xor
dec
pushf
iret
pop
nop
pusha
sbb
dec
sti
in
in
cmp
in
and
je
and
mov
dec
loope
mov
add
and
pushf
jmp
lcall
cmp
inc
incb
xor
cmpsb
pushf
aad
push
out
pop
jmp
lea
loop
loopne
and
js
lcall
lods
pop
push
test
outsl
mov
dec
add
gs
cmpsl
cmp
out
xchg
cmp
inc
sbb
pusha
ficoml
inc
xor
or
int3
adc
cmp
or
fdivrs
in
sub
inc
cmp
cmp
inc
sarb
inc
in
ror
xlat
mov
lock
sbb
pushf
test
in
xchg
les
mov
jl
mov
jnp
aam
test
stos
fwait
ja
or
les
scas
test
clc
iret
scas
int
mov
stos
icebp
jg
jo
fdivrs
shrl
xor
adc
push
lock
cli
xlat
or
in
add
push
fldcw
jb
sbb
out
aad
je
jne
icebp
sbb
fidivs
fsubs
push
dec
add
addr16
cltd
cs
repz
sbb
xchg
adc
repz
dec
shr
and
xchg
jbe
mov
in
ss
jge
in
mov
inc
push
jl
mov
fisubrl
sarl
fistpl
lea
push
popa
das
shlb
xchg
test
jge
pop
push
out
mov
push
test
fwait
xchg
repnz
clc
dec
jo
sti
mov
in
push
mov
ds
mov
mov
xlat
cmpsl
add
nop
fwait
in
sarl
mov
push
pop
loopne
shrb
sbb
in
rorb
test
dec
jno
push
push
push
sbb
and
and
or
jbe
xlat
mov
movsl
int3
int3
xchg
inc
mov
add
fldenv
xchg
lea
push
aaa
nop
or
jecxz
mov
decb
mov
out
mov
jo
xor
pop
mov
push
loopne
pop
arpl
sub
jne
xor
jecxz
aas
mov
lcall
mov
mov
lret
ss
testb
stc
int3
lods
js
enter
cltd
or
cli
jno
movsl
dec
sbb
xorl
out
dec
jl
push
inc
cltd
mov
cmp
ret
adc
mov
sub
add
xchg
rcrl
mov
jae
xorb
aas
adc
test
push
jnp
xor
mov
cmpsb
int3
push
jb
pop
cmc
jne
and
shll
and
es
insb
ss
adc
jmp
test
test
adc
and
jb
add
js
cmpsl
and
insb
mov
and
cmp
lods
ds
push
mov
fstl
divl
int3
mov
fstps
mov
or
nop
push
mov
pop
dec
mov
int3
push
lods
push
mov
mov
add
push
sbb
or
and
inc
inc
push
lret
jbe
je
aam
aas
and
jg
mov
leave
inc
xor
arpl
inc
push
mov
gs
popa
push
mov
mov
lods
add
les
cmp
mov
and
adc
icebp
jbe
dec
ret
aam
pushf
jo
push
dec
pop
jnp
mov
lcall
pop
pop
int
cmpsb
xor
in
frstor
and
jge
xchg
adc
cmp
int
jg
out
dec
cmp
xchg
pop
and
pop
push
or
outsl
mov
js
adc
aaa
xchg
mov
xchg
lret
dec
shlb
mov
pusha
movsl
mov
ss
les
mov
stos
push
and
and
or
mov
daa
dec
sbb
fwait
scas
pushf
xor
cld
adc
dec
scas
fstl
testb
pop
add
xor
adc
test
mov
jns
stos
mov
xchg
inc
lock
add
sub
mov
sub
inc
mov
loopew
jno
xchg
cs
push
lock
dec
push
cld
push
sub
xchg
push
mov
xchg
jecxz
jo
neg
or
or
shll
in
adc
and
std
je
cmp
push
stos
adc
adc
mov
xchg
push
ss
cmpsb
jb
cwtl
mov
mov
shrl
fdivs
inc
mov
dec
sbb
sbb
stos
xchg
lea
inc
lods
inc
je
push
inc
cld
push
xor
and
sbbb
aas
push
arpl
mov
mov
jo
pop
int3
imul
xchg
cmp
add
and
dec
loopne
mov
and
test
lods
popa
jmp
jne
mov
hlt
repz
in
jnp
push
ja
mov
mov
out
and
push
adc
outsb
xchg
leave
pushf
js
sbb
jp
stos
movsbl
xchg
test
imul
setne
pop
pop
in
or
sub
cmpsb
fstpt
pop
mov
movsb
jb
out
pop
cli
call
testl
push
in
loopne
in
int3
mov
out
add
and
jl
sub
pop
hlt
fsub
cltd
data16
inc
aam
jnp
into
pushf
movsl
loope
mov
push
std
es
movsb
adcb
mov
jg
icebp
call
cmp
mov
loop
call
aad
aam
stos
jne
jl
scas
adc
mov
pminsw
jp
jae
or
and
pop
add
xchg
push
cli
enter
add
and
mov
repz
lods
cmp
sahf
inc
aas
cld
add
push
in
sub
repz
sahf
pop
mov
push
and
rolb
fldt
stos
aaa
insl
fwait
jge
sbb
mov
sub
adc
insb
xor
or
stc
xor
pop
in
pop
xorb
stos
sbb
in
loopne
or
pop
or
inc
and
sarb
ljmp
sti
shll
mov
add
int3
stos
daa
negb
mov
ja
push
xchg
pop
cmpsb
fidivrs
mov
adc
push
jae
mov
mov
daa
cmp
enter
ljmp
mov
adc
je
xor
mov
pop
ss
push
rol
and
xchg
in
jge
sub
call
stos
inc
cwtl
pop
lea
addr16
or
xchg
stc
push
or
rcrl
ret
adc
imul
popa
lret
fsubr
mov
lock
stos
xchg
push
insl
mov
pop
insb
push
pop
pop
fs
out
ret
cltd
in
lods
xchg
jmp
js
push
add
stos
pop
ret
xchg
bound
js
sbb
sub
jle
cs
sbb
sub
push
adc
inc
cmp
aaa
adc
leave
dec
mov
in
arpl
add
push
arpl
push
fdivl
enter
insb
mov
leave
stc
hlt
add
in
xor
or
mov
inc
mov
ljmp
push
repnz
jmp
cmp
pop
sbb
cmp
insb
leave
mov
int
lods
js
jnp
into
mov
ffreep
gs
movsb
pop
mov
iret
icebp
daa
sub
jp
lock
lret
aas
arpl
and
data16
sub
popa
xchg
inc
mov
dec
mov
in
and
push
xchg
into
mov
push
mov
jp
mov
cmc
rclb
inc
mov
lea
cmp
sbb
jb
push
dec
jmp
jp
in
in
adc
pop
sub
pop
lods
pop
loopne
into
subb
std
and
mov
lret
cmp
je
mov
fcmovnb
loope
pop
ss
shr
das
inc
push
aad
add
inc
rcr
mov
xlat
inc
xchg
xlat
test
dec
in
and
pop
jne
push
mov
push
mov
sub
dec
scas
mov
jb
sbb
xor
sbb
adc
xor
ja
in
mov
fsubp
repnz
jmp
cmp
std
fidivrl
fcoms
and
sarb
mov
xchg
adc
ja
dec
fmul
stos
stos
in
add
sub
lcall
repz
std
sub
or
inc
or
lcall
sbb
xchg
xlat
in
loopne
imul
cmp
mov
or
stos
sbb
xchg
es
mov
call
roll
inc
dec
pop
sub
cmc
leave
movsb
jmp
pop
dec
cwtl
cli
ret
inc
fld
cmp
pushf
add
mov
pop
sub
rol
movsl
pop
mov
aas
xchg
and
mov
xchg
dec
mov
mov
xchg
push
dec
int3
xchg
lods
mov
cli
movsl
aaa
out
out
xchg
fistps
ret
fwait
jge
jns
inc
adc
or
and
pop
jbe
xchg
mov
std
stos
in
xor
test
mov
jle
loop
jecxz
outsl
in
nop
pop
mov
sti
loop
jnp
mov
mov
mov
mov
cltd
lret
stos
test
sbb
mov
mov
outsl
sub
scas
push
dec
test
cmp
outsb
fsubrs
ret
out
cmp
cmp
and
dec
mov
ret
loopne
es
rorl
pop
mov
int3
mov
pusha
repz
xor
add
xor
jmp
ja
cs
pop
xor
ja
scas
andl
push
dec
out
mov
aaa
aam
scas
jbe
adc
mov
jo
push
sub
mov
test
xor
add
sub
das
push
subb
stos
mov
clc
or
call
xchg
lahf
ret
dec
bound
mov
sbb
dec
dec
repz
icebp
mov
mov
pop
lds
call
mov
shlb
lret
jbe
mov
or
sub
cmp
xor
dec
dec
in
sahf
xor
cmp
pop
mov
cmpl
lea
lods
js
test
rolb
outsb
lods
pop
xor
clc
xor
adc
cmc
ficompl
rorl
pop
and
mov
push
fstpt
sahf
xchg
frstor
jns
lds
bound
lods
test
stos
repnz
dec
cwtl
repnz
mov
xchg
scas
sub
pop
xchg
mov
inc
test
movsl
xchg
test
cmp
int
adc
loopne
mov
in
rcr
sub
shl
lods
call
cwtl
sarl
mov
ljmp
xor
mov
jb
mov
out
loopne
out
fsubrl
xor
fsubrp
xor
nop
in
pop
pop
in
xchg
add
cwtl
mov
pop
jo
pop
aam
in
or
or
push
mov
andl
lcall
mov
daa
ds
push
popl
cmp
jno
pop
fbstp
cli
cmpsb
shlb
imul
pusha
shr
lock
aaa
inc
mov
dec
cwtl
lahf
fwait
insb
push
jmp
cli
into
fadds
ljmp
push
push
int3
pop
arpl
push
shl
clc
jno
sub
cmpsb
pop
ds
jmp
jmp
loop
jp
into
out
mov
sahf
xchg
insb
jno
cli
mov
push
jl
out
orb
jo
add
cs
cmp
movsl
sbb
int
add
sub
add
push
adc
nop
shr
push
insl
mov
pop
fwait
lea
aas
ss
int3
test
fnstcw
xchg
daa
inc
cmc
adc
mov
arpl
dec
mov
cmp
or
mov
pop
test
int
xchg
lea
sbb
cltd
jp
dec
jle
int
sbb
cmc
dec
pop
mov
jnp
mov
cltd
sti
xor
repz
movsb
push
ret
inc
xor
adc
repz
pusha
addb
push
js
mov
xchg
insl
insb
xchg
jb
ja
xchg
std
mov
lods
dec
push
sbb
imul
cltd
xchg
sbb
hlt
icebp
out
fldcw
and
add
jne
fstpl
mov
ljmp
cmp
pop
xor
pop
and
cmp
xchg
test
pop
jl
aad
dec
leave
test
pop
xorl
xchg
pusha
data16
cmp
adc
cld
sub
add
dec
les
jns
mov
arpl
jo
inc
fadds
pusha
stc
aad
jle
pop
push
xorb
mov
popf
orl
mov
xchg
test
dec
in
stos
sub
aaa
mov
pop
push
jns
xchg
mov
aaa
xchg
mov
std
adc
cld
add
fucom
lods
js
hlt
lock
cmpsl
pusha
scas
lret
mov
insl
xchg
or
in
cltd
test
enter
pop
mulb
inc
outsl
mov
leave
push
xor
inc
arpl
pushf
add
xor
cltd
dec
pop
mov
test
cmp
lcall
jl
jmp
pop
mov
cs
cmp
cmp
inc
jo
sbb
mov
call
cltd
aaa
mov
push
xor
into
sub
fdivrl
cmpl
sbb
dec
inc
jo
dec
pusha
lret
push
and
jmp
xchg
je
push
pushf
jg
imul
sub
fisttps
stos
add
cmp
scas
pop
pop
push
test
rclb
out
mov
cmc
push
das
mov
mov
in
fisubs
std
lods
jns
popf
cmp
sbb
adc
pop
cmp
pop
inc
ret
and
pusha
xlat
mov
les
roll
shlw
loope
xchg
jg
jbe
cli
sub
mov
mov
pop
mov
pop
in
lds
dec
adcl
push
dec
pop
jecxz
inc
mov
inc
cmp
and
scas
jb
stc
xor
cmpsb
arpl
pop
jno
push
rcll
aam
adc
cmp
push
test
inc
xchg
xchg
pop
pop
andl
sbb
pop
lock
mov
cmp
dec
cltd
cmp
out
imul
adc
out
dec
and
in
ljmp
cmp
adc
rclb
push
cmp
sub
xchg
mov
cmp
xor
push
in
and
call
cmp
mov
dec
inc
jge
pop
hlt
cmp
addb
lds
stos
push
sbb
popa
fs
jbe
iret
or
arpl
pusha
jne
xor
sub
mov
mov
add
lcall
sbb
mov
gs
or
incl
mov
add
divb
lds
xchg
inc
sbb
or
and
cmpl
out
add
addr16
dec
or
test
mov
mov
pop
loope
jns
mov
sub
repnz
fadds
outsb
and
enter
xor
mov
in
ds
sahf
jne,pt
pop
ja
cmp
push
sub
jne
and
mov
pop
inc
aam
test
fistps
xor
jp
mov
inc
aad
pop
jmp
lock
or
push
mov
sub
int
and
pop
inc
or
in
scas
shl
dec
ja
dec
xor
push
loope
mov
scas
push
mov
dec
inc
inc
jmp
and
scas
repz
and
test
push
pop
and
andl
or
jb
imul
rorb
mulb
sub
scas
push
add
rclb
sbb
add
mov
mov
je
cltd
movsb
sahf
insb
add
stos
jmp
mov
mov
aad
cmp
addb
arpl
mov
scas
cmp
mov
push
insb
lock
inc
ss
pop
pop
jecxz
xchg
mov
in
scas
adc
ja
scas
clc
adc
push
rcr
cmp
xchg
icebp
cmc
les
loopne
sbb
mov
ret
jg
pop
add
jbe
ret
stos
mov
add
mov
aam
sub
movsl
push
mov
pop
dec
mov
xor
sbb
pushf
movsl
dec
mov
je
mov
mov
mov
inc
call
rorl
stos
popa
or
or
dec
sbb
imul
mov
lods
adc
inc
sbb
sti
lcall
xor
mov
or
in
adc
loope
into
and
push
ja
cmp
imul
enter
sti
repz
sbb
and
mov
cli
push
lcall
icebp
xchg
out
jae,pn
mov
lahf
rcr
push
sbb
outsb
lret
sbb
fstps
repz
push
push
xorps
leave
inc
daa
xor
mov
rol
hlt
push
mov
cld
adc
dec
xor
cs
ret
sub
adc
lcall
movsb
cmp
ficomps
cmc
adcl
push
mov
ret
repnz
repz
movsb
mov
mov
or
outsl
fidivs
cmp
jae
int
xchg
sbb
out
adc
mov
sub
mov
push
fnstenv
popf
loope
or
bound
aaa
jmp
dec
popf
pop
dec
sbb
cmp
jno
mov
mov
leave
cmpsb
or
incb
cmovl
test
bnd
add
test
inc
push
jb
push
cmp
push
inc
loope
xor
je
outsl
addr16
add
jl
movb
mov
ret
jno
not
adc
fdivs
fcomip
inc
daa
dec
stos
sub
and
pushf
jmp
jmp
jo
and
pop
imul
cmpsl
or
lds
popf
sub
loop
mov
push
xor
pop
xor
movsw
mulb
cmp
lahf
mov
pop
push
cli
mov
jbe
pushf
pop
mov
xchg
in
dec
cmpb
mov
mov
subl
xor
pop
pop
rclb
lods
sbb
iret
ret
aas
scas
pop
cli
fs
ret
test
leave
jb
arpl
cwtl
sub
lcall
mov
and
push
pusha
icebp
inc
out
daa
xchg
jns
dec
pop
repz
insl
arpl
cld
in
mov
cmp
popf
and
sub
into
xchg
lock
xor
push
mov
test
xchg
mov
jo
jecxz
sti
loopne
loopne
fs
xchg
iret
jl
cld
sarl
pop
or
cmp
scas
mov
iret
cmpsb
mov
sti
push
xor
inc
add
jg
call
xchg
sub
repz
enter
hlt
pop
sbb
test
imul
outsl
push
cmp
jge
gs
add
sub
pop
loopne
je
cmp
ret
sub
lret
xchg
cmpsb
shll
lcall
in
daa
jecxz
sbb
in
push
popf
sub
aam
je
mul
xchg
xchg
bound
xlat
imul
sarl
repz
icebp
dec
mov
andb
scas
outsb
jp
sub
xor
inc
pop
pop
in
xchg
lcall
xorb
mov
pop
cmpsl
lret
into
test
sub
xchg
std
mov
add
jp
stos
xor
ret
lret
aas
pop
ljmp
pop
cwtl
mov
insb
lods
push
shlb
sti
in
lret
cli
lahf
in
mov
lods
mov
sub
idiv
fwait
cmpsb
pop
push
cmp
bound
mov
and
mov
cli
insb
mov
in
in
mov
lret
mov
loop
adc
in
push
stc
add
pop
push
cmp
fs
cmp
insb
aam
jl
lods
jne
fimull
cmp
xor
xchg
daa
lock
sbb
dec
hlt
out
mov
loopne
sub
sub
scas
sbb
lods
adc
pop
cltd
xchg
ficoml
jno
outsb
mov
mov
jne
sbb
cmp
push
cmp
in
dec
roll
nop
jmp
mov
lea
push
test
aad
cmp
push
ja
xchg
sti
cld
push
xchg
mov
cmp
popf
pop
mov
sbb
or
xchg
je
mov
sbb
fwait
call
inc
xor
or
les
test
adc
jo
rolb
in
pusha
rolb
dec
movsb
mov
int3
cmp
in
sbb
xchg
pop
sbb
insb
in
test
stos
pop
fcomps
vrcpss
hlt
cmp
scas
inc
int
pop
fmuls
mov
pop
dec
lock
cltd
jbe
orl
ficoml
cld
pop
or
arpl
mov
mov
jo
in
in
mov
rcr
arpl
sbb
in
inc
jno
pop
cmpl
sbb
fs
mov
push
fsubs
inc
in
adc
add
mov
lret
arpl
sub
push
movsl
sub
dec
out
cmp
mov
adcl
pop
inc
xchg
test
sub
push
sbb
push
fstp
stos
xor
pop
push
arpl
jno
dec
inc
insb
int3
aam
jg
inc
sbb
divl
in
leave
mov
push
mov
dec
inc
xchg
mov
and
mov
xorb
jno
popa
dec
or
sub
scas
faddl
mov
pop
sahf
leave
movsl
nop
negl
int3
or
outsb
xchg
sahf
pop
mov
or
and
push
and
enter
mov
xchg
mov
mov
in
sbb
fadds
gs
je
addb
out
cmp
mov
cld
sbb
fnstcw
mov
pop
ret
imull
addr16
insb
mov
inc
and
or
lcall
jl
pop
shlb
mov
fs
xchg
test
jns
es
mov
loope
xor
xchg
sbb
data16
les
fidivrl
pusha
aad
adc
insl
orl
adc
jl
jno
aaa
add
inc
les
mov
push
push
icebp
sti
mov
xor
cmp
and
sub
cmp
xor
lods
aam
mov
xchg
ficoms
sbb
cmp
push
hlt
mov
imull
mov
cld
hlt
xchg
jge
fwait
into
pop
push
out
dec
jp
cmp
add
jl
sahf
pop
inc
jnp
pop
sub
rcll
or
cmc
mov
mov
add
les
cli
insb
inc
es
ss
call
repz
sub
xchg
pop
out
imul
push
test
aas
fwait
addb
mov
push
stos
ja
or
inc
xor
out
in
aad
mov
fwait
xor
jno
notb
scas
push
imul
outsb
xchg
mov
popa
pusha
lds
andl
sbb
mov
aas
fidivrs
jecxz
and
aad
pusha
jg
push
sbb
cwtl
jp
mov
popw
repnz
in
cld
dec
fs
mov
stc
adc
jecxz
and
xchg
ror
mov
faddl
jge
lret
xchg
dec
ffreep
xchg
cwtl
lret
adc
fistps
inc
in
push
add
xor
arpl
jge
dec
dec
cmc
jb
cmp
adc
adc
mov
aam
aaa
jg
inc
jmp
sub
push
cmp
call
aaa
mov
lahf
or
push
pop
adc
add
mov
jl
xor
data16
out
shrb
push
push
sub
mov
mov
mov
leave
and
stos
push
inc
into
inc
adc
mov
test
mov
inc
lods
inc
jns
mov
jge
pop
lret
mov
inc
push
into
mov
jae
loope
into
js
out
cmc
cmp
and
cmp
push
push
mov
jge
aam
xchg
push
sub
mov
jl
or
or
sarl
stos
mov
xor
adc
mov
addr16
mov
in
xchg
xchg
adc
scas
lahf
dec
loope
aas
lea
jge
add
arpl
cli
hlt
scas
push
sub
or
xchg
gs
xchg
fdivrs
or
dec
ja
add
fbstp
mov
or
or
ds
movsb
jmp
mov
jae
and
jmp
mov
xchg
outsb
or
pop
fadds
xchg
cmpsl
fdivs
push
cmp
in
loop
xor
fwait
stos
mov
dec
js
xor
inc
gs
in
fisubrs
jle
daa
mov
stos
lahf
sbb
int
mov
sbb
cmp
xor
repz
mov
dec
inc
add
add
sub
mov
movsb
mov
mov
pop
lods
aam
inc
outsb
stc
cmpsl
dec
push
xor
push
jnp,pn
mov
dec
mov
add
adc
xchg
fidivl
fistl
cmp
mov
adc
inc
movsl
jo
push
les
popa
in
sbb
fnstsw
mov
repz
fdiv
fldl
xchg
jmp
cmpsb
pop
xor
shll
xlat
dec
push
cmc
jp
dec
in
xor
or
dec
and
cmpl
jno
or
mov
out
sbb
cmp
push
cld
push
jnp
das
jp
and
sub
push
mov
insl
leave
sub
cmpsb
sub
mov
inc
call
sahf
aaa
rcrb
sahf
xchg
rcr
dec
test
leave
or
adc
aad
sbb
xor
push
dec
pop
scas
das
or
pop
sbbl
adc
push
xchg
shl
dec
mov
push
js
mov
sub
or
repz
sub
daa
cmpsl
cs
xchg
mov
iret
pavgw
test
out
or
lea
xchg
pop
sub
xor
mov
pop
add
rcrl
lock
mov
ds
insb
mov
insb
icebp
lea
int3
xchg
adc
sarb
pushf
mov
push
mov
daa
in
xchg
daa
shll
fxch
and
test
xor
and
test
add
imul
imul
xor
jg
cmp
lods
shl
cmc
xchg
nop
aas
mov
push
jo
add
outsb
imulb
mov
jecxz
push
aas
push
and
xor
xor
into
xchg
jle
xor
dec
xchg
mov
or
ficoms
mov
jo
adcb
xchg
nop
mov
xor
mov
ja
xchg
cwtl
imul
ljmp
cld
pushf
sub
cmp
mov
jbe
pop
push
xchg
insl
mov
mov
jne
in
aam
jp
lea
or
mov
add
xchg
popf
movsl
xor
nop
pop
push
add
mov
test
insb
and
or
xor
inc
outsl
sub
mov
rorb
mov
push
mov
push
sub
cmc
mov
jns
daa
lods
and
jae
mov
push
mov
stc
das
and
inc
mov
pop
adc
jge
push
adc
adc
out
jmp
aaa
cs
add
cmpsb
sub
cmp
cmpsl
pop
in
and
xchg
loope
cmpsl
call
ret
jle
adc
gs
stc
mov
ja
pop
cmp
loop
pop
gs
cs
push
fnstenv
dec
outsl
scas
or
lock
dec
enter
and
inc
out
inc
filds
pusha
adc
aas
mov
and
out
out
sti
cmpsl
inc
movsb
mov
jnp
push
sti
ds
ficoms
xchg
sti
mov
dec
mov
xchg
adc
lods
mov
dec
mov
sbb
cmpsl
fistpll
into
cli
push
xor
push
out
adc
add
xchg
pop
push
fcomps
stc
or
push
xor
ret
mov
mov
pop
lea
test
fs
push
adc
jl
jl
cmp
xchg
out
push
fwait
pop
cwtl
sbb
xor
stos
cmp
adc
and
adc
pop
mov
mov
lahf
in
outsb
cwtl
cltd
cwtl
cs
inc
jnp
enter
ds
adc
add
or
adc
pop
or
mov
cmp
sub
lret
mov
mov
loopne
fmuls
nop
call
pop
sbb
sbb
sub
jne
rcrl
lods
pushf
dec
sahf
test
or
push
pushf
js
xchg
jno
jle
and
push
xlat
add
rep
mov
dec
cmp
mov
mov
pop
aas
in
sub
ficomps
dec
rclb
jle
sub
dec
sahf
gs
aas
leave
sbb
jno
dec
pushl
mov
jo
addr16
subl
and
fs
iret
mov
cmpsl
rcll
lret
scas
stos
icebp
stc
movsl
xchg
inc
xchg
nop
xchg
sbb
lahf
inc
inc
lock
jle
xchg
int3
into
push
xchg
imul
inc
xchg
movups
jge
inc
aad
push
sub
adc
test
mov
loope
aas
lret
daa
ljmp
push
mov
dec
out
ret
and
lcall
mov
inc
je
mov
and
jp
adc
xor
clc
jb
addr16
fsub
and
xchg
mov
jl,pn
mov
rcrl
adc
pop
test
jbe
das
pushf
orl
in
out
push
xor
jmp
jb
test
insb
add
ret
push
push
fldenv
rcll
fidivrl
call
adc
sbbb
ss
jp
mov
arpl
mov
add
mov
gs
dec
and
cmp
mov
push
pop
add
sub
sub
cmpsl
pop
sbb
mov
jno
inc
adc
addl
gs
sbb
inc
dec
inc
pop
scas
lret
mov
aaa
loop
int3
lock
mov
push
add
fsubrs
popa
adc
mov
cmp
dec
lcall
ja
gs
scas
pop
repz
inc
sub
sub
outsl
cmp
mov
push
dec
les
cmp
sub
ret
mov
inc
hlt
movsb
push
out
insb
inc
or
mov
add
scas
imul
icebp
arpl
pushl
sub
stos
mov
mov
or
mov
xchg
insl
dec
jae
cmpsl
sbb
add
cltd
clc
inc
outsl
sbb
sbbl
dec
pop
and
sub
scas
test
ja
push
sub
aad
and
mov
test
mov
lods
aas
mov
loop
int
mov
mov
ja
aaa
cli
add
gs
in
mov
or
stos
daa
cmp
mov
orb
cwtl
xor
roll
mov
je
inc
outsb
unpcklps
negb
sub
adc
mov
fistps
mov
icebp
stos
lcall
nop
and
int
cmp
jecxz
and
cmp
or
into
iret
adc
sub
test
adc
js
inc
in
and
mov
mov
rorl
sub
jnp
rcrl
mov
aad
pop
in
cld
xor
and
cmp
test
into
cmp
dec
jns
pop
out
dec
loop
dec
in
dec
cmc
inc
arpl
dec
xor
jo
mov
mov
xchg
jnp
mov
pop
int
gs
out
orl
dec
test
jl
out
xchg
push
fdivrs
dec
test
inc
mov
in
jg
xchg
ret
push
aas
pop
mov
icebp
xor
ja
mov
push
in
ljmp
push
int
jae
lahf
pop
popf
mov
sbb
fisubrs
jnp
mov
js
xchg
lock
inc
mov
cmp
push
sti
aas
pop
sti
xor
sub
add
fdivrl
gs
imul
dec
add
push
jnp
jp
mov
mov
sbb
mov
cmp
inc
push
jg
hlt
fcomp
fdecstp
sub
insl
clc
pop
jmp
or
faddl
sbb
daa
xchg
stc
clc
ret
mov
jnp
dec
or
add
add
push
pop
aaa
sbb
sub
aas
cwtl
push
aas
icebp
mov
arpl
jnp
scas
int
pop
dec
iret
das
dec
cwtl
push
imul
cmp
ja
rorb
popf
mov
hlt
adc
stos
pop
dec
xchg
adc
ret
in
dec
repnz
jb
imul
add
loope
add
dec
sub
sbb
lahf
int3
dec
dec
mov
push
pop
repz
in
dec
cmpb
dec
inc
mov
imul
sahf
sahf
mov
stos
cmp
mov
mov
jo
mov
mov
in
lds
adc
add
std
mov
mov
pop
mov
inc
fdivl
dec
stos
xchg
push
pop
inc
push
cmp
mov
xor
sbb
adc
push
jp
sub
jge
cld
adc
and
in
xchg
xor
fsts
mov
cwtl
test
sbb
stos
push
pop
iret
pushf
movb
bound
pusha
mov
mov
mov
sbb
cli
xor
enter
loop
subb
mov
pop
bound
mov
mov
data16
aam
daa
call
jp
leave
and
fildl
movsl
scas
lcall
dec
icebp
push
je
ds
out
push
pushf
pop
inc
cmp
aas
add
ds
aad
dec
pop
outsb
aam
and
aas
push
adc
cmp
sub
jne
fmul
mov
mov
test
jns
pop
sub
jno
repz
stc
frstor
inc
cmpsb
mov
sti
sub
cwtl
xorb
int
add
fs
mov
lea
sub
out
mov
insl
or
icebp
inc
or
hlt
cmp
push
outsb
mov
mov
mov
jmp
out
out
jae
cmp
pop
or
pop
decl
add
scas
add
pop
lret
and
xor
xor
cmpsl
mov
cmpsb
cmc
orl
mov
pop
add
adc
fwait
into
scas
dec
movsl
pop
vfmsub132pd
add
test
enter
cmp
mov
mov
jns
dec
and
jg
loope
enter
shll
jbe
adc
mov
mov
daa
aaa
dec
lock
lahf
add
rclb
and
inc
out
mov
insb
mov
mov
cltd
pusha
icebp
push
outsl
xlat
jg
add
test
insl
sahf
mov
cli
lret
movsb
pusha
in
add
xchg
out
div
and
and
popf
mov
xlat
loope
pushf
adc
sub
push
pop
loopne,pn
and
lahf
sub
or
repz
jle
jbe
cli
scas
mov
cld
mov
aas
shrb
call
idivl
mov
xchg
stos
and
pop
mov
pop
inc
inc
lret
and
mov
iret
aas
aam
lcall
in
mov
mov
js
sbb
mov
rclb
mov
int3
xchg
lcall
jp
ret
out
mov
dec
test
ss
or
jle
sbb
cmp
push
ja
loop
int3
or
push
repnz
mov
fcompl
loopne
jne
jbe
jecxz
push
mov
cwtl
jb
inc
pop
or
stos
xor
repz
fiadds
into
xchg
lahf
jle
dec
add
cmpsl
and
cmp
mov
daa
xchg
popa
jne
xchg
out
inc
push
push
jle
xchg
jge
pusha
jge
inc
cmp
in
lahf
cmpsl
push
jle
pushf
mov
inc
mov
adc
lods
sub
pop
aam
mov
in
inc
pop
jl
push
cmpsl
mov
pop
xchg
jmp
adcb
xor
out
call
ss
mov
sub
ja
jne
or
cmp
and
dec
jbe
subb
bound
out
and
mov
iret
jmp
stos
js
dec
xor
cmpsl
pop
sub
jmp
das
and
gs
xchg
jle
dec
cmp
mov
adc
push
jp
jle
sub
sub
out
test
rorl
test
and
xchg
inc
out
dec
dec
in
mov
neg
xor
out
pop
gs
lret
xor
outsl
and
fstpl
and
insl
pusha
sub
sbb
pop
jne
loop
adc
xor
pop
jle
movsl
push
enter
jae
rorl
jne
sub
lods
add
loopne
scas
imul
mov
and
cld
out
xor
jmp
sbb
pop
sub
frstor
xchg
jbe
and
pop
mov
test
int
addr16
sbb
nop
outsl
int
cmp
out
pusha
jecxz
cmp
movsb
mov
and
loope
mov
xor
shll
jne
adc
inc
inc
jbe
stos
testb
testl
int3
mov
enter
adc
mov
dec
stos
jbe
or
enter
push
scas
cwtl
popf
std
mov
xor
subb
sbb
nop
addr16
sbb
add
sub
loopne
push
cwtl
stc
xor
jae
add
std
sahf
push
inc
sub
push
dec
sbb
dec
aad
cmpsl
fmull
std
das
adc
mov
push
cmp
jg
push
loope
dec
ljmp
stos
cltd
jecxz
jne
push
add
out
or
push
cmpsl
pusha
faddl
aad
inc
scas
lcall
adc
cmpsl
shl
xor
pop
mov
cmp
pop
aam
es
out
jns
into
inc
dec
mov
fsubr
aaa
sbb
dec
testb
cld
xchg
mov
pop
and
xchg
xchg
dec
fwait
mov
andb
sbb
inc
lret
mov
mov
jle
push
sbbl
xor
in
out
lock
jp
sahf
cmc
adc
sub
jb
sub
idivl
or
lods
xchg
or
das
xor
jecxz
stos
test
mov
sbb
rclb
mov
lea
adc
sub
jecxz
jno
inc
jg
rep
nop
fistl
push
out
mov
inc
cmc
push
test
push
fldl
nop
inc
or
jle
push
mov
cmp
sbb
cs
shlb
fildll
les
jne
push
inc
insb
test
add
push
clc
jbe
inc
mov
stc
roll
add
lds
addr16
cmp
cs
std
adc
icebp
jl
cld
pop
adc
fsts
les
rcrb
insb
cmp
jb
dec
push
inc
mov
filds
ds
iret
and
or
test
outsb
jae
fnsave
xor
jb
in
fsubs
sbb
shlb
les
push
lea
dec
insl
mov
rolb
rcl
xor
add
xor
jg
loopne
rcrb
adc
jnp
sub
dec
or
cmp
enter
jmp
mov
insl
mov
push
dec
out
cltd
icebp
mov
stos
in
cmp
xchg
sub
fs
jle,pn
shlb
in
cmp
cmp
adc
inc
pop
into
xchg
adc
std
pushf
jo
nop
xor
cmp
dec
fbld
jns
fisttpll
loope
cmp
movsb
stc
out
das
inc
push
jecxz
mov
mov
jl
js
mov
repnz
negl
lods
adc
cmpsb
enter
inc
pop
lds
mov
imul
adc
stos
out
xor
inc
push
bound
mov
repz
cmpsb
mov
dec
adc
or
outsb
imul
push
or
ja
jbe
sub
xchg
into
mov
mov
xchg
mov
xchg
vmwrite
ficoms
jbe
repz
or
cmp
inc
in
mov
pop
lcall
jbe
add
cmpsl
mov
jb
inc
dec
xchg
mov
mov
cmp
daa
dec
popf
xor
nop
popl
xchg
test
mov
dec
out
lock
aaa
dec
imul
adc
sub
mov
bound
xchg
adc
nop
xchg
add
popa
gs
ljmp
addr16
hlt
or
xor
xchg
cwtl
jns
rcrb
std
jge
xchg
lcall
pop
fildll
and
test
int3
sub
iret
pusha
fcoml
frstor
xor
xor
repnz
gs
stc
and
out
out
sub
xchg
shll
xor
inc
movsb
lods
mov
push
and
xchg
push
mov
adc
add
stos
loop
stos
sbb
dec
or
daa
or
xor
add
repz
xchg
call
jbe
aaa
in
push
and
in
hlt
jnp
and
cmp
mov
jecxz
scas
jl
jnp
inc
sbb
lods
mov
xor
std
dec
or
inc
jb
sub
cmp
add
xchg
fsub
int
loopne
lcall
orl
bound
dec
enter
out
cmp
jno
push
aad
je
add
into
jecxz
sbb
lock
push
std
xchg
push
scas
mov
repnz
mov
push
sbb
dec
sub
xchg
cli
xchg
xchg
sub
lea
xor
clc
cmc
or
sub
int
mov
sub
xor
into
mov
lret
insl
mov
cmp
jp
notl
sbb
pushf
mov
lret
xor
and
xchg
aam
pop
cmp
iret
outsl
cs
add
std
loop
sbb
and
or
stos
fwait
in
pusha
dec
xor
jl
pop
xchg
sti
cmp
movsb
mov
aam
ds
jns
fs
push
mov
data16
bound
test
pop
sub
mov
pushf
iret
repz
dec
ficoml
lahf
fcmovu
mov
mov
mov
jne
test
pop
jns
pop
xchg
inc
xor
xchg
lods
push
push
adc
mov
call
stc
mov
jmp
mov
sbb
push
pop
jb
xchg
inc
or
mov
and
int3
add
test
mov
cmp
mov
sbb
mov
mov
mov
rcl
mov
lds
test
lock
cmc
lods
test
mov
lock
and
pop
popf
sub
pop
sarb
jno
cmp
mov
xchg
jno
stos
aad
ret
stos
jmp
mov
inc
or
mov
rolb
pop
out
jbe
xlat
stos
test
fwait
aaa
mov
push
sub
push
inc
mov
pop
test
xchg
lret
sub
leave
xor
or
stc
mov
push
scas
adc
xor
in
ds
das
pop
adc
jmp
insl
and
aam
jge
sbb
lock
sub
subl
sbb
sti
jb
decl
shrb
in
mov
or
lret
pop
es
pusha
add
xor
fistl
std
mov
ret
sbb
pop
rorb
pop
pop
div
sbb
xchg
gs
add
and
push
mov
or
cwtl
test
in
xlat
shrl
jg
push
mov
push
xor
mov
hlt
add
cltd
mov
dec
cmp
sub
rcl
push
adcb
ret
jp
int3
sbb
fiadds
std
xchg
mov
mov
mov
pop
push
fcomp
mov
sub
cmp
cmp
lods
cmpsb
scas
jno
sbb
fsubrp
test
adc
notb
test
pop
jnp
sbb
mov
cmp
outsb
fwait
xchg
xchg
jmp
mov
mov
jg
push
push
stos
test
cmp
jo
aas
out
daa
aaa
cmp
sbb
jmp
xchg
jnp
testl
pusha
mov
pusha
pop
and
or
sbb
mov
in
stos
mov
sub
sub
sbb
scas
out
fimuls
movsl
and
cmp
mov
out
adc
and
mov
pop
inc
mov
stos
mov
insb
cltd
sbb
arpl
mov
xchg
subl
addb
or
mov
push
aad
outsb
fnstsw
fwait
or
gs
loopne
jge
pop
xchg
cltd
out
pop
dec
mov
arpl
cmp
cmpsl
fwait
data16
in
jl
dec
pop
into
xchg
sbb
jl
gs
cmc
adc
js
aas
sahf
pop
mov
arpl
cs
lods
jmp
adc
fs
mov
jecxz
mov
pop
mov
outsl
mov
push
inc
stos
mov
pop
es
push
xor
push
jg
lret
loope
jecxz
mov
sti
inc
mov
sahf
xchg
xor
mov
ret
or
inc
out
push
mov
or
ja
test
lods
inc
scas
inc
mov
in
mov
fisttps
or
popf
push
dec
pop
xor
sbb
push
dec
imul
in
mov
mov
stc
arpl
mov
push
scas
lea
mov
fwait
orb
roll
adc
insl
and
sbb
push
inc
lahf
sub
std
xchg
outsb
call
lahf
arpl
fistl
adc
out
out
sbb
int3
jns
repnz
and
fistl
dec
xchg
xchg
adc
into
mov
cmp
int
aam
fisttpl
sub
cli
jge
mov
test
dec
xor
stos
rep
into
mov
adc
cs
ffree
jmp
push
sub
call
orl
adc
js
out
bound
jg
and
insl
pop
inc
add
mov
cmp
or
xchg
cmc
or
adc
and
mov
sub
add
dec
or
or
inc
or
fistpll
sete
push
pop
test
xlat
or
les
cmc
imul
shlb
cmp
leave
and
lds
jnp
fwait
add
add
push
pop
scas
xor
or
xchg
jo
scas
out
int3
pop
pop
aas
imul
std
mov
stc
mov
adc
mov
add
aad
cmc
outsl
push
push
jno
xchg
mov
pop
gs
stc
pop
or
and
adcl
mov
loop
mov
lahf
ja
je
outsb
dec
xor
popl
shll
mov
ret
mov
data16
std
shlb
loop
aas
dec
int3
mov
cwtl
ret
dec
jo
xchg
mov
pop
jle
mov
add
sbb
in
je
fwait
jae
cmp
mov
fs
js
pop
lods
inc
in
hlt
mov
dec
pop
dec
cmp
lcall
pushf
adc
movsl
shlb
fnstcw
jmp
sub
or
pop
pop
mov
and
mov
pop
adc
mov
lods
mov
imul
mov
lcall
cs
aaa
dec
cmp
nop
into
mov
cmp
cmc
scas
stc
dec
pop
pusha
xchg
mov
out
pop
adc
and
les
mov
pusha
mov
lahf
cmp
fstl
repz
loopne
and
xchg
aas
fisubl
dec
pop
stc
xor
push
lcall
jae
je
add
jns
les
orl
sub
sbb
pop
mov
mov
cmpsb
inc
rcrb
popa
push
out
jmp
xor
and
fnstsw
aad
fcmovbe
add
gs
jle
in
stos
push
lcall
imul
and
in
cs
ss
mov
xor
cmpsl
sbb
dec
add
dec
shr
sbb
popa
mov
lret
xor
adc
sbb
adc
or
insb
fs
das
cs
aam
adc
xor
xor
xchg
pop
xor
jne
add
push
and
fiaddl
pop
xor
pop
aam
push
mov
cwtl
imul
sub
in
push
fnstsw
lret
fs
fsubr
sbb
aad
jnp
mov
pushl
ja
test
or
pop
sbb
adc
lods
and
and
add
hlt
xor
mov
popa
mov
daa
int3
int
push
adc
dec
cmp
xchg
je
sub
sahf
dec
leave
mov
hlt
push
leave
fdivrl
mov
dec
pusha
or
cmp
shlb
inc
sub
mov
pusha
or
push
ja
fs
cmpsl
sub
aas
add
xor
in
lock
jge
push
jp
sbb
fsubrl
pop
mov
dec
sbb
lret
clc
nop
scas
jg
inc
and
cmpsb
push
scas
mov
pop
sbb
lret
xchg
add
pusha
jb
popf
jne
aam
pusha
dec
lods
stos
imul
insl
enter
imul
inc
sti
dec
mov
mov
incb
push
push
ljmp
test
or
mov
int3
cmovge
fldt
cmp
mov
or
push
aad
mov
sub
jecxz
adcb
cmpsb
repnz
adc
push
inc
or
shlb
lret
in
pop
int
push
int
sbb
sbb
pushf
ret
push
aas
pop
cmp
test
pop
cmp
in
pop
mov
repz
sti
push
scas
mov
lret
repz
cld
ljmp
xor
xor
icebp
xchg
out
inc
fisttpl
jns
inc
push
dec
mov
jl
into
push
cmpsb
hlt
push
or
jmp
mov
ficomps
es
jg
mov
les
in
stos
jbe
inc
sbb
jle
test
shll
mov
div
ja
sub
inc
or
push
dec
cli
int3
pop
sub
jle
bnd
les
ss
nop
lock
mov
xchg
xor
jle
int3
lods
movl
mov
mov
addr16
in
out
stc
sti
fisubl
repz
pop
add
test
and
sub
mov
xor
mov
in
popf
pusha
inc
loope
pop
mov
mov
adc
push
shlb
cmp
lea
mov
inc
add
pop
ret
mov
xlat
fisubl
jb
xchg
or
xor
test
dec
push
mov
and
sub
mov
test
sti
mov
out
sti
sbb
pusha
sbb
fdivl
popf
aaa
jge
mov
adc
rcl
jae
cli
and
push
gs
fistpl
movsb
dec
mov
loop
ss
insb
loope
jns
f2xm1
adc
lock
cld
add
test
call
adc
loope
adc
cwtl
jp
push
fdiv
mov
repnz
add
xchg
iret
fs
stc
and
mov
jae
pop
sbb
aam
cmc
adc
loope
jle
add
in
cwtl
jg
pop
test
leave
popf
std
dec
or
lahf
mov
ja
pop
fidivs
and
test
xchg
mov
aad
sub
xchg
repz
aam
pop
rcrb
pop
xchg
clc
xor
lret
xor
mov
add
test
or
jge
shrb
cmp
mov
mov
fldcw
sbb
out
sub
xlat
pop
and
mov
dec
shl
sbb
xchg
fbld
lahf
les
pop
leave
mov
aam
push
mov
push
push
mov
call
xchg
cmp
push
jae
jb
mov
shlb
sub
ljmp
gs
or
sub
mov
inc
sarb
cmp
ss
std
adc
xor
popf
xchg
leave
dec
pop
pop
push
pop
in
and
addr16
imul
ljmp
and
ja
push
je
dec
inc
inc
loope
insl
lret
lds
mov
daa
jecxz
loopne
mov
enter
pop
out
cmp
loopne
pusha
xor
sub
jns
movsb
cmpb
xor
lret
pop
ljmp
hlt
xor
iret
in
ret
out
sbb
pop
xchg
or
add
or
aad
int3
push
lock
sub
cmp
pop
jmp
adc
repnz
pop
mov
add
or
push
lds
fnstcw
sti
loope
mov
sbb
jns
das
ret
mov
jecxz
sub
mov
mov
aad
test
pop
jne
cmp
imul
mov
sbb
pusha
out
adc
loopne
xor
popa
inc
out
jbe
fdivrs
dec
insb
and
ficomps
dec
mov
and
aad
mov
dec
sbb
ja
add
xlat
mov
pop
ror
lea
mov
add
loopne
push
jae
xchg
iret
add
lea
xlat
out
pop
push
inc
or
push
pop
out
stos
pop
daa
addr16
sub
adc
mov
dec
xor
and
pop
rcrb
sub
sti
stc
rol
inc
lock
xor
add
cmp
testl
xchg
xchg
adc
jge
repnz
test
push
inc
xlat
negl
mov
xor
xor
out
sub
ja
inc
ret
inc
inc
or
std
xor
sbb
cmp
int
scas
subl
fidivl
or
sub
mov
test
adc
les
rol
xchg
dec
sub
adc
out
lret
out
cli
jmp
add
push
loop
test
dec
mov
mov
mov
shlb
lods
shlb
push
lcall
adc
pop
sarb
test
lcall
imul
das
call
and
jl
bound
and
in
push
push
in
test
and
call
push
jae
fs
sub
loope
xor
jecxz
imul
inc
cld
stos
mov
nop
push
push
lods
add
mov
mov
sbb
leave
push
arpl
pop
push
add
sub
out
adc
xchg
jns
ror
mov
push
xchg
cs
cli
movb
stc
movsb
addr16
add
jg
mov
nop
hlt
or
mov
push
aam
dec
test
xchg
push
les
mov
mov
push
shrb
xchg
arpl
cmc
movsb
pop
push
jbe
mov
ds
dec
mov
out
or
jns
jbe
push
cmpsl
sar
les
fldenv
test
aas
ret
sub
repz
jp
cmp
mov
push
dec
repz
inc
movsb
lock
dec
sbb
add
adc
inc
mov
add
lahf
sub
mov
add
sub
in
cmpsl
aam
mov
lcall
daa
lahf
dec
mov
lock
jecxz
and
rcl
jecxz
mov
cmp
push
push
shlb
stc
jb
lcall
leave
aad
mov
shl
mul
arpl
push
ljmp
mov
ljmp
pop
lods
sti
hlt
mov
and
xchg
add
mov
sbbl
sub
les
ja
mov
imul
mov
lret
add
into
or
int
scas
push
dec
mov
movsl
adc
insb
mov
adc
mov
pop
and
xor
sarb
ss
jo
rcrl
ja
mov
loopne
jecxz
rcll
sub
pushf
mov
add
or
in
sub
cs
pop
js
ss
loopne
mov
das
xor
adc
lret
inc
inc
push
stc
addr16
inc
movsb
pop
push
pop
fisttpll
adc
out
mov
mov
adc
mov
out
or
enter
in
sub
dec
mov
andl
and
lods
shrl
push
add
xchg
lock
push
sbbl
pop
outsl
leave
ja
mov
in
lea
xchg
sub
or
js
push
sbb
pop
outsl
pop
mov
jmp
sbb
lock
popa
cmp
and
pop
mov
icebp
xchg
jecxz
push
and
xor
into
fs
int
sbb
mov
loopne
fstpl
pop
test
mov
add
mov
lahf
cmp
pop
repnz
icebp
xchg
adc
out
jg
in
mov
in
orl
stos
xchg
aaa
xchg
fdivrl
ret
inc
jle
pop
cli
xchg
dec
pop
xchg
or
les
xchg
jne
popf
lods
cmp
xchg
jne
add
leave
loope
cmpsb
or
bound
dec
pop
and
mov
cwtl
mov
mov
jne
cmc
mov
mov
mov
jb
enter
dec
xchg
and
popa
out
push
jl
dec
mov
and
sahf
mov
lret
loopne
pusha
and
bound
adc
jno
rcl
pushf
shlb
popf
incl
pop
cwtl
jg
xor
insl
je
shl
cmp
adc
loopne
inc
mov
test
or
aaa
mov
into
dec
cmp
sub
lods
jo
jae
pushf
sbb
movsl
and
arpl
out
xchg
inc
insb
pushl
xorb
in
sub
dec
in
insb
mov
push
shl
adc
xor
bound
fdivrp
sub
sub
jge
and
loopne
sub
out
test
cwtl
and
dec
hlt
and
cmpsb
scas
addr16
ret
mov
nop
das
add
mov
jg
jge
icebp
dec
rcl
sti
cwtl
cmp
andb
rcrb
pop
sbb
xchg
aad
or
jbe
pop
mov
inc
mov
stc
sahf
roll
out
mov
xor
xchg
inc
sub
sub
add
sbb
adc
sub
dec
popa
sbb
xchg
cltd
out
mov
lods
stos
cltd
pop
std
sahf
or
arpl
jnp
xor
xor
test
aas
dec
je
popa
call
jne
jnp
into
dec
mov
sub
movsb
jle
mov
je
jbe
loopne
push
mov
mov
outsl
lcall
pop
lcall
jno
mov
mov
push
add
jge
mov
btr
sbb
fidivrs
or
clc
ficoml
or
adc
fucomp
adc
sahf
sub
lret
icebp
mov
jbe
xor
push
insb
jbe
pop
int
ss
mov
aad
mov
pop
loope
stc
ficoms
mov
dec
fucomp
movsl
repnz
jae
lcall
mov
mov
ja
inc
imul
fisubs
sbb
inc
les
mov
imul
adc
sub
lcall
xor
jle
jnp
inc
cmp
out
xlat
cmp
push
test
fists
repnz
mov
xchg
pop
dec
inc
cli
sbb
in
push
adc
js
cltd
ficompl
xor
imul
ficomps
iret
add
popa
xor
aam
xchg
rorb
addr16
ljmp
pop
data16
mov
xor
jle
bound
in
out
mov
mov
mov
das
mov
lret
rolb
xchg
push
fwait
inc
xor
dec
sbb
in
jne
pop
xchg
mov
lods
in
inc
dec
es
push
cmp
mov
fbld
daa
add
daa
addr16
push
jmp
or
fwait
or
in
add
mov
sti
or
pushf
inc
push
sub
jno
fistl
je
sarl
imul
imull
inc
or
push
cvtdq2ps
push
pop
mov
lds
push
aas
fadds
xchg
in
imul
ret
pushf
loopne
pop
fimuls
scas
push
cmp
mov
pop
lahf
push
xchg
push
ds
or
cmp
xchg
pop
imul
rclb
aam
mov
in
adc
ficomps
and
ret
sub
mov
mov
mov
ss
sarl
sub
adc
add
das
mov
adc
fmuls
ja
inc
in
test
push
stc
stc
lods
xor
mov
mov
mov
jmp
inc
add
mov
lahf
lea
mov
sbb
test
fiadds
xchg
outsl
add
loope
shlb
pop
push
loope
lahf
mov
sbb
xchg
mov
xorl
adc
es
or
push
test
shll
jno
lret
dec
jbe
hlt
cmp
jno
stc
lds
stos
jnp
pop
sahf
fidivrl
sub
mov
adc
dec
and
pop
scas
aad
pop
jecxz
ja
pop
push
or
repz
push
sbb
jmp
insl
bound
inc
push
mov
xor
cs
lea
cld
cld
pop
sbbb
mov
ss
xchg
adc
pushf
out
inc
cmp
push
test
mov
lcall
int3
ret
mov
out
test
pusha
inc
imul
mov
outsb
cli
jb
enter
cmp
push
test
sbb
into
and
xchg
movsb
jb
mov
adc
pop
loopne
sub
outsl
les
and
inc
mov
in
cltd
les
cmpl
movsl
es
std
cmp
jecxz
dec
push
adc
adc
lret
cmc
sub
jmp
sarb
clc
xor
push
imul
sahf
into
pop
xor
std
inc
push
dec
sti
dec
jp
mov
pop
cmpsb
lahf
mull
push
sbbb
insb
inc
and
mov
cld
test
cmp
jge
mov
outsl
bound
aas
dec
rclb
outsb
xchg
push
xchg
adc
pop
test
inc
inc
mov
mov
jo
mov
xchg
mov
adc
xchg
test
call
cli
andb
dec
sbb
dec
lcall
aad
pop
or
test
call
sarb
fstps
sbb
xor
pop
xchg
test
lods
subl
adc
mov
cmc
xchg
fwait
test
pop
movsl
jp
outsb
dec
dec
cmpsb
xchg
icebp
jae
ret
lret
inc
iret
xchg
popa
xchg
loop
int
jno
movl
mov
push
or
loope
inc
dec
sbb
and
mov
pop
adc
xlat
cld
test
xchg
lahf
adc
lret
neg
sbb
jp
and
arpl
or
inc
ljmp
int
inc
sbb
int3
stos
cmp
fldcw
cmpb
pop
into
and
ljmp
xor
cmpsl
sbb
push
jns
adc
notb
adc
jmp
mov
mov
lods
rol
or
fimuls
sub
cmpsb
jecxz
test
push
out
test
mov
mov
push
sahf
push
pop
data16
adc
negl
push
int3
mov
sub
mov
mov
xchg
xor
aam
dec
or
sbb
or
aam
xor
xchg
dec
xchg
jle
push
xchg
inc
push
pop
in
repnz
mov
das
push
sub
push
push
push
imul
ljmp
shll
ss
out
lret
inc
out
bswap
and
cmc
push
das
leave
cwtl
shr
sub
push
inc
dec
xchg
shrb
loope
mov
pop
mov
sub
pop
jb
mov
adc
xor
xor
mov
xchg
in
js
pop
xor
ficompl
int
ljmp
insl
mov
pushf
ror
xchg
ret
jbe
and
repz
jne
test
push
shlb
je
fxch
out
or
adc
pop
xchg
mov
pop
jne
shrb
xor
ljmp
fcomip
jl
sub
cmpb
pop
xlat
pop
pop
xor
stos
stc
add
ret
icebp
ds
js
incl
movsl
add
lahf
lret
mov
adc
pop
lock
jnp
lea
xchg
cmp
adc
shrl
and
mov
lret
movhps
sti
dec
daa
cmp
dec
sub
push
add
scas
mov
out
shrl
inc
popf
dec
mov
out
int
rclb
addr16
pop
add
sbbl
incb
mov
int3
stos
repnz
mov
mov
ja
mov
sbb
xor
lock
xor
call
bound
pop
icebp
lea
nop
push
cmovge
jns
dec
cli
mov
imul
sub
or
push
ret
xchg
add
jnp
inc
int
mov
or
enter
and
jmp
pop
movsb
lcall
mov
test
loopne
inc
fcoml
mov
divl
fwait
push
mov
movsb
idivl
dec
roll
mov
pop
push
sbb
into
shlb
out
bound
pop
sbb
daa
cmp
xor
je
mov
sbb
dec
mov
lahf
shrb
das
inc
les
mov
dec
mov
loop
add
adc
inc
and
or
jno
enter
cli
jnp
mov
mov
cwtl
test
stc
or
and
js
out
daa
pusha
adc
xchg
mov
stos
nop
movsl
xor
dec
out
and
mov
jge
xchg
addr16
add
lret
push
out
fcompl
or
lods
leave
dec
out
push
inc
out
jg
or
cmc
arpl
mov
mov
ljmp
pop
mov
std
jo
mov
imul
and
xor
cmc
mov
lods
and
cld
fldenv
mov
test
dec
imul
jnp
mov
lahf
lds
xor
and
cli
dec
in
es
sbb
aad
imul
mov
outsl
test
mov
int3
jo
push
adc
inc
sub
test
sbb
jae
outsl
aam
ret
mov
sbbl
lahf
fldl
mov
mov
loopne
inc
fisubrl
je
mov
add
cmp
gs
sub
inc
add
mull
or
jmp
xchg
push
xchg
dec
xlat
push
out
repz
addr16
push
dec
lods
adc
adc
dec
xchg
ljmp
jb
mov
mov
xchg
call
inc
imul
xor
mov
pop
cmp
pop
in
sbb
dec
push
cwtl
dec
ficompl
pop
rcl
adc
jo
jmp
inc
push
iret
in
mov
lcall
cs
add
cmp
jno
or
and
cmp
and
adc
mov
rcrl
lods
leave
repz
cld
add
push
xor
addb
in
lods
mov
dec
push
jbe
sbb
enter
push
std
sub
rcll
inc
adcl
imul
ret
ret
fyl2xp1
ds
fisttpll
sub
lret
das
loopne
movsl
mov
adc
cmc
adc
adc
or
cmp
test
inc
es
movsb
push
sbb
pop
fcoms
out
inc
es
dec
cmpsb
dec
mov
into
scas
mov
or
inc
mov
xchg
jecxz
lock
add
push
dec
dec
insb
andl
mov
sbb
iret
cmp
adc
mov
insb
add
pop
sarl
sbb
pop
cmp
dec
jecxz
rorl
aam
les
xchg
cmpsl
mov
nop
repnz
lret
add
adc
rorl
pop
pop
insb
popf
rcrl
fidivs
std
mov
out
jne
fstpl
cltd
dec
clc
mov
dec
movlps
push
call
inc
in
and
xchg
mov
and
pop
push
sbb
cmp
dec
and
or
inc
in
outsb
sbb
std
mov
shl
dec
imul
data16
jg
pop
sbb
pop
es
push
mov
ja
mov
jnp
mov
subb
loop
inc
gs
inc
aas
push
add
out
cmp
mov
xchg
out
jle
and
mov
mov
mov
addr16
add
push
mov
in
out
cmpsb
leave
leave
out
in
or
pop
imul
sbb
sarb
call
pop
xchg
adc
outsb
into
dec
dec
sbb
mov
xor
fs
xchg
xor
lahf
adc
mov
lods
ret
cs
add
icebp
jge
std
mov
xor
ficoms
hlt
push
mov
mov
pop
pop
add
jle
dec
pop
or
lcall
outsl
mov
inc
xor
sbb
xchg
inc
popa
not
mov
jns
adc
inc
movsl
jo
in
leave
cmp
mov
xor
lds
dec
stos
shrb
adc
xchg
jge
jnp
cmpsb
jae
popa
ja
or
mov
mov
xlat
dec
xchg
fnstcw
movsb
mov
jl
jnp
inc
inc
sub
cmpb
aad
fidivrl
aad
push
sbb
mov
pusha
xchg
inc
add
xchg
and
out
or
inc
jge
add
ljmp
test
in
jno
xor
jge
or
int3
popf
test
mov
ja
sub
xchg
sub
mov
or
loopne
stos
push
or
push
ss
jg
and
xchg
je
add
push
fdivrl
sti
mov
dec
or
xchg
mov
cmp
rcrl
inc
mov
xchg
dec
in
sbb
test
in
xchg
or
imul
loopne
rorb
movsb
ret
repnz
rcll
mov
mov
push
jbe
or
sub
cli
mov
or
jnp
push
push
mov
js
cmp
or
sub
insl
sub
fstl
shl
mov
or
or
mov
nop
mov
sbb
adc
cld
fwait
inc
push
jp
adc
stos
xor
mov
jne
mov
cltd
sub
les
js
rcll
push
pop
sbb
mov
test
pop
sbb
outsb
mov
adc
cmpsb
es
popl
sahf
pushf
mov
out
shrb
cld
mov
jns
mov
loop
icebp
mov
aad
and
mov
pop
inc
xchg
loop
addr16
test
jb
mov
inc
sub
sbb
jns
mov
imul
fcomp
pop
gs
out
mov
loope
sti
pop
imul
dec
incb
outsl
add
insl
in
cltd
loopne
es
sub
scas
mov
push
pop
outsb
loopne
cwtl
adc
cmp
xlat
xlat
xchg
loope
inc
icebp
add
push
jecxz
inc
fstpt
repz
push
add
leave
inc
and
xchg
adc
dec
ljmp
dec
ljmp
out
adc
int
std
pusha
add
sti
adc
popf
sub
cmp
and
int
sub
fwait
pusha
push
pop
arpl
jle
push
pop
pop
jne
jl
add
or
sbb
bound
xchg
xor
jae
jb
cmp
int3
repnz
repz
add
lahf
pop
lods
mov
int3
sbb
mov
nop
pop
sti
stos
or
inc
outsb
in
add
popf
cltd
pop
aaa
iret
mov
loop
mov
cmc
fwait
sbb
mov
and
xor
dec
push
sbb
or
push
push
mull
mov
femms
clc
xchg
sbb
cwtl
lret
cld
test
add
rclb
call
pop
or
mov
xor
sbb
mov
xor
fadds
icebp
arpl
incl
outsl
nop
ss
mov
mov
aad
pop
add
mov
ds
in
test
xor
adc
test
test
push
mov
into
pop
xchg
out
xchg
push
es
and
aaa
insb
or
sub
sub
xchg
arpl
out
push
inc
sbb
addw
cmp
out
idivb
dec
das
jp
cli
jmp
mov
sub
sbb
sbb
mov
and
icebp
add
addr16
jno
jo
js
js
mov
mov
je
gs
mov
mov
pop
div
sahf
adc
lcall
jbe
pop
rol
inc
pop
pop
cmc
fcoml
dec
inc
data16
call
jge
test
push
adc
das
gs
add
mov
xchg
mov
inc
dec
sub
pushf
pop
jns
faddp
out
mov
popa
push
jns
jnp
addb
or
dec
add
sahf
daa
cmpsb
mov
loop
testl
xchg
outsl
add
les
out
lock
jae
mov
ror
testb
adc
add
sahf
sahf
mov
ror
stc
insb
sbb
repz
pop
jo
cmp
dec
jge
pusha
or
xchg
push
ss
das
lcall
add
jp
out
sub
andb
shlb
jne
ds
clc
inc
shlb
add
movsb
jp
movsb
scas
lret
ds
and
loope
or
sbbl
std
mov
rorl
jle
aad
xor
das
or
into
pop
xchg
insl
imul
out
and
cli
notb
or
jg
test
pop
or
xchg
fdivrl
push
or
jp
pushf
test
lock
mov
sub
aam
jp
test
pop
mov
movsb
mov
cmp
ret
mov
adc
ret
in
pop
ss
icebp
or
les
jbe
aam
imull
sub
mov
add
lds
push
fwait
ja
jns
mov
sar
dec
je
je
mov
pop
repnz
lret
jge
fnstsw
clc
imul
cmp
pusha
adc
ret
and
stos
sub
push
mov
outsl
insl
add
pop
jmp
ror
inc
std
scas
pop
mov
sub
xchg
add
mov
fcomp
sbb
mov
cmp
shl
inc
cmpsl
enter
notl
mov
jle
test
adc
push
xchg
in
mov
mov
inc
cmc
xchg
int3
das
dec
dec
scas
jg
jne
ds
pusha
xor
xor
pop
in
jnp
cmp
cmc
mov
fidivl
cmp
sub
fwait
shll
cmp
push
cmp
cmp
je
es
xor
push
scas
or
mov
aam
add
popf
push
cmp
sbb
xchg
jecxz
mov
cltd
xchg
jo
pop
fidivs
int
es
imulb
and
cmp
xor
in
push
and
jnp
lcall
dec
push
sbb
jmp
cmp
mov
rcl
cmp
mov
test
je
and
jmp
push
inc
or
mov
rolb
negl
loopne
jg
adc
or
sbb
xchg
adc
in
mov
notl
out
into
cmpb
cmpsl
sub
xchg
ljmp
stos
inc
test
mov
orl
cmpsb
pusha
jo
loop
ss
fldenv
movsb
pop
in
addb
inc
sub
push
mov
push
xor
out
mov
cmp
or
out
cmp
movsb
xor
pop
pop
sbb
outsl
inc
lret
rcrb
imul
push
sbb
xchg
insl
stos
xor
andl
int
pop
add
loopne
ret
dec
inc
in
mov
cmp
xor
data16
sub
ljmp
insl
push
pushf
into
clc
mov
xlat
in
nop
int
mov
mov
aam
push
in
adc
mov
inc
jbe
mov
mov
lahf
cmp
jl
or
inc
outsl
je
pop
adc
jmp
loop
fwait
mov
pop
pop
mov
inc
ja
pop
push
sbb
pop
inc
push
stos
xor
addr16
mov
jae
arpl
fisubl
sub
test
cltd
cltd
mov
int
repz
mov
push
repnz
std
dec
dec
test
xor
js
and
adc
lahf
pop
add
pop
add
inc
leave
setle
xor
jmp
push
xchg
in
ja
outsb
jbe
adc
xor
dec
test
or
aad
lcall
subb
sbb
pop
adc
or
or
cmpsl
dec
std
fisttpl
aad
cmp
dec
fdivrp
and
xor
xchg
mov
mov
xchg
jmp
insl
push
inc
enter
jge
shll
repnz
dec
jle
lahf
jnp
push
imul
mov
mov
sbb
push
inc
ss
loopne
in
pusha
mov
je
xchg
dec
push
jbe
inc
sub
dec
ficomps
mov
dec
lods
or
mov
sbb
aad
push
shl
test
insl
add
push
leave
sbb
out
add
decl
daa
pop
aad
xchg
mov
shrb
sub
push
loopne
sbb
cmp
andb
sbb
dec
jns
mov
data16
in
xchg
inc
sbb
push
xor
mov
sub
data16
dec
cli
ja
inc
rcll
clc
mov
jge
xorl
xchg
mov
cmp
loop
sbb
cld
jge
and
lods
push
fdivr
sbb
xor
aam
and
inc
mov
xor
jg
in
out
mov
lods
nop
nop
sub
repnz
ds
and
mov
mov
fs
mov
addr16
fcmovbe
push
mov
cmpsl
lea
outsl
mov
pop
inc
aaa
ljmp
cs
jnp
mov
or
lahf
add
cs
loopne
mov
call
jb
sarb
repz
hlt
pop
mov
inc
loop
insb
imul
cmp
inc
or
sub
sbbb
jno
pop
adc
sbb
mov
xor
push
outsl
or
cmp
aaa
aaa
lock
dec
jbe
mov
mov
push
dec
mov
mov
lahf
push
repnz
les
cs
test
loopne
and
mov
jbe
popf
push
cmp
pop
sub
jge
mov
mov
xsha256
cmpsb
adc
mov
xor
mov
add
jp
jbe
ljmp
fisubl
iret
fcmovne
mov
popf
scas
pop
cmp
inc
mov
add
sbb
cltd
cmpsl
xor
adc
push
and
or
cli
movsb
adc
adc
divb
mov
jae
incb
cmp
xchg
shll
jo
cld
cwtd
arpl
mov
loopne
xchg
mov
test
dec
ret
sbb
jmp
sub
lret
imul
scas
jge
xor
movntps
cmpsb
push
and
mov
dec
adc
mov
push
outsb
faddl
stos
lds
mov
fdivs
and
fimull
scas
and
add
add
pop
fcoms
adc
add
and
lahf
dec
out
pop
rcrb
ss
xor
xchg
ljmp
adc
push
inc
pop
dec
lret
loope
scas
fnstenv
daa
ficoml
pop
xchg
cmpsl
or
pop
sbb
popa
push
xor
push
gs
inc
rcrb
addr16
pop
in
loop
pop
jae
fidivs
lret
jl
outsb
xchg
movsb
in
mov
jg
jae
shr
out
add
push
stc
xor
int
insl
loop
cmp
inc
filds
cld
mov
int
icebp
sub
mov
mov
insb
push
rcrl
pop
scas
or
pop
jecxz
mov
popf
and
cmp
pop
xchg
xchg
push
inc
movb
in
xlat
jp
mov
shll
and
in
add
cmp
mov
cmc
data16
push
movsl
mov
sbb
fldcw
sbb
dec
in
fs
arpl
fimull
jg
inc
lock
ljmp
mov
mov
or
cmp
lea
inc
or
stos
cmp
lods
dec
cmp
push
adc
xchg
dec
push
dec
mov
aas
mov
out
jp
push
push
fstps
pop
insb
jo
lods
pop
add
repnz
movsb
and
jns
mov
lret
outsb
mov
lock
xor
fcoml
insb
sbb
pop
mov
pusha
adc
sub
cli
xor
mov
mov
or
cmpsb
fs
mov
pop
inc
or
test
cmp
mov
mov
mov
hlt
pop
in
xorl
cmpl
aam
nop
jmp
aad
aam
out
in
repz
mov
mov
rolb
jno
fisubrl
mov
ficompl
push
mov
xor
mov
push
push
test
jne
loope
or
dec
cmp
mov
fs
push
cmpsb
push
mov
addr16
mov
movsl
sbb
aaa
fisttps
sbb
pop
and
push
sub
enter
push
stos
push
jp
mov
adc
cmp
mov
cmp
mov
aad
mov
call
add
xor
fistpl
sahf
aaa
push
fldenv
sti
or
push
fistpll
cmc
js
dec
aaa
or
or
and
xchg
jg
sub
jle
fnstenv
inc
icebp
insb
int3
out
out
outsl
testl
iret
test
iret
outsl
dec
dec
int
pop
inc
xor
insb
cmp
dec
hlt
pop
ss
add
movl
aad
popa
iret
xor
enter
mov
jb
sbb
insl
push
fstpl
jl
pop
enter
sbb
popf
bound
and
sbb
lret
movsl
xor
cmp
in
cmp
incl
test
inc
and
mov
mov
add
adc
andl
out
mov
insl
and
icebp
shr
fidivrl
or
push
mov
lods
lahf
cmpsb
lret
adc
mov
lock
pop
mov
std
and
pop
mov
iret
stc
sar
jo
hlt
rcl
test
dec
cld
add
aad
dec
sbb
testb
xchg
dec
cmp
lods
loope
push
rorb
popa
inc
xor
jo
push
fstl
mov
push
loopne
aam
es
orb
ret
add
or
divl
dec
lret
inc
pop
mov
or
jg
xor
jl
cmp
dec
fimull
sub
mov
addl
ss
mov
sahf
mov
or
ds
mov
jne
dec
xchg
imul
je
popf
ret
imul
je
loop
push
mov
enter
xlat
mov
dec
sbb
mov
rcrl
add
rolb
shr
xor
add
or
or
nop
in
mov
sbb
bound
lea
add
bswap
jne,pn
dec
loopne
push
sbb
or
mov
imul
mov
orb
add
dec
and
xor
cmp
das
mov
fisttpl
test
mov
add
out
int3
out
or
rorb
test
sbb
loopne
mov
push
std
lahf
cmp
in
in
fnstcw
scas
jg
aas
jo
std
sbb
imul
and
mov
gs
addr16
cmp
lahf
psrad
or
ljmp
or
or
adc
addb
out
scas
pop
js
int3
push
and
push
pop
jmp
pop
inc
pushl
xor
cmp
or
lar
popa
call
test
scas
cltd
dec
jbe
or
out
sbb
mov
inc
or
inc
jb
lret
adc
or
inc
mov
lds
dec
aaa
xchg
inc
dec
sub
ror
jo
loope
jb
outsb
mov
and
fsubs
xchg
rcll
pop
pop
lahf
jbe
cwtl
xchg
adc
out
daa
ss
or
pop
sub
insl
or
xchg
scas
imul
loopne
iret
mov
jle
pop
add
mov
push
cmp
sti
in
xor
lret
cld
int3
cwtl
sahf
lcall
pushf
es
inc
fnstsw
pusha
sub
lret
fwait
dec
push
pusha
adc
mov
pop
pop
and
scas
movsb
xor
push
push
and
shll
clc
aad
fildl
in
lods
sbb
aas
lret
adc
movsl
jne
pop
dec
movl
outsl
jno
mov
rorl
les
js
jecxz
insl
jl
push
mov
dec
cmp
jnp
bound
pop
jge
add
mov
mov
pop
fisttpll
sbb
scas
push
add
leave
inc
imul
mov
aaa
test
sbb
cltd
xchg
jb
mov
movsl
jns
cmp
mov
cwtl
mov
fdivl
inc
mov
inc
jae
jae
jno
adc
stos
adc
jb
stc
ss
xor
lcall
filds
xor
leave
cmp
push
sbb
cmp
adc
jl
sbb
or
fisubs
mov
aad
cmp
push
cmp
mov
or
icebp
repnz
mov
push
sub
in
aad
cmp
or
stos
imul
inc
mov
add
imul
shlb
or
loopne
add
stc
cld
mov
mov
bound
mov
popf
jg
xchg
cwtl
insl
mov
dec
inc
test
imul
int
cmp
out
js
xchg
xor
push
xor
popf
xlat
lea
aas
nop
mov
ja
add
iret
sub
and
or
sahf
repnz
push
insl
push
jmp
pusha
jge
arpl
push
xlat
or
popa
fcomp
push
mov
sahf
je
dec
adc
rcrb
arpl
popf
int
pop
cs
push
aas
mov
adc
lea
js
leave
imul
cmp
add
add
push
cltd
cmp
cli
loopne
or
pusha
stos
outsl
cld
popf
sub
push
filds
lods
sbb
or
lock
add
dec
shlb
adc
popf
subl
aam
cli
and
add
pop
aaa
inc
lods
mov
or
mov
call
imul
push
mov
filds
lahf
cld
les
and
xor
ret
sub
adc
mov
leave
lahf
or
lret
scas
aas
dec
cmpsb
mov
inc
hlt
inc
testl
add
pop
dec
push
xchg
mov
shl
mov
sbb
addb
test
jecxz
popf
loope
inc
mov
sbb
push
stos
lret
cmp
xchg
jne
jle
xor
fs
insl
cmpsl
enter
enter
jo
in
cmp
jne
jno
lods
sar
cmp
inc
and
adc
pop
lea
loope
sbb
aam
lret
mov
sub
testl
mov
shrb
repnz
out
daa
fcmovnbe
scas
scas
movsb
xor
xrelease
xchg
shr
or
and
loop
sti
cs
cmpsl
inc
icebp
jg
fldcw
mov
or
pop
mov
add
or
mov
enter
test
fs
jl
or
popa
push
fnstcw
ret
sahf
mov
sti
addb
icebp
pop
and
and
inc
dec
pop
repz
jne
sbb
cmp
cmp
xlat
sub
insl
in
hlt
xor
xor
in
lcall
lea
aaa
in
test
aaa
jle
hlt
inc
xchg
test
mov
gs
pop
in
pop
dec
insl
lahf
inc
stos
adc
xorb
inc
and
clc
arpl
fildll
shrl
sbb
mov
mov
nop
jmp
sti
mov
insl
fnstcw
repnz
in
outsb
mov
jnp
mov
mov
mov
adc
in
pop
xchg
fsubp
adc
mov
insb
idivb
cmp
call
dec
mov
xchg
ja
jecxz
or
add
or
xor
movsb
xchg
sbb
clc
push
cmp
xchg
xor
outsb
sbbb
push
outsb
cld
mov
push
stos
jne
mov
dec
push
test
jno
stos
adc
jns
lods
fwait
repnz
dec
add
xchg
jmp
adc
lea
mov
cli
mov
xchg
and
mov
jb
xchg
pop
shr
xchg
mov
push
into
stos
int3
in
mov
add
fists
mov
xor
or
adc
push
mov
in
xor
adc
sbb
dec
cwtl
fwait
loop
int3
jnp
cmp
sub
xchg
insl
dec
mov
cmp
in
or
rcll
adc
int
jg
imul
aam
pop
and
je
dec
div
incl
mov
mov
lock
dec
dec
decb
out
in
inc
stos
mov
jns
fidivl
test
sub
inc
sbb
inc
es
mov
xchg
ret
cld
cltd
gs
pop
jne
adc
cmc
stos
and
cmp
stos
sub
jg
jmp
jo
jno
shrb
call
scas
ja
aaa
cld
fsubrp
dec
lds
gs
std
xor
sub
pop
or
mov
je
or
seto
jo
pop
cld
lret
popf
faddp
ret
cli
jg
sti
and
insl
xor
or
jns
scas
mov
mov
arpl
xlat
and
ss
adc
push
out
movsl
bound
dec
inc
pop
fxch
sub
push
push
add
imulb
cmp
ljmp
inc
ss
lret
inc
jno
push
pop
fldcw
cmc
xchg
arpl
inc
adc
mov
outsl
rcr
cli
push
ret
adc
pop
fistl
inc
sti
xchg
mov
push
rol
lcall
mov
mov
push
insb
mov
pop
aam
fmull
and
inc
lcall
adc
stos
hlt
stos
flds
push
movsb
add
icebp
add
cmp
inc
add
adc
loope
mov
cld
xchg
aas
and
mov
ret
push
fistl
mov
add
cmp
out
dec
test
bound
pop
xor
outsl
fsubl
pusha
test
ljmp
cmc
pop
sbbl
or
arpl
inc
adc
pop
jle
adc
pop
inc
test
push
frstor
frstor
int3
fbstp
stos
inc
std
mov
jge
lods
or
jns
out
pushf
mov
push
dec
xchg
andb
fucom
in
adc
push
ffreep
push
push
xchg
dec
jl
mov
or
pop
pusha
pop
popa
or
add
enter
xchg
data16
fldenv
test
xchg
or
push
mov
leave
and
lcall
xor
test
mov
push
mov
lret
ds
fsubl
pusha
mov
ja
test
adc
inc
and
or
sub
jecxz
ror
mov
xor
or
add
out
push
mov
aaa
push
jg
fidivrl
mov
ret
and
in
mov
push
dec
sub
loopne
and
mov
ss
mov
out
push
clc
cmpsb
dec
fbld
pop
lcall
lods
scas
sub
jp
cmp
roll
xor
in
sub
inc
andl
adc
pop
cltd
imul
pop
repz
sbb
add
inc
and
out
pop
ljmp
subl
cld
lea
dec
pop
push
pop
clc
inc
and
push
fcoml
push
push
call
pop
cmpsl
or
out
mov
lret
fidivs
pop
pop
mov
cmpsl
insl
js
clc
cmp
jo
pushl
ret
dec
xchg
or
popf
ds
push
rcll
sbb
xor
stc
xchg
call
packsswb
add
out
add
ja
mov
add
sub
sbb
mov
add
pop
push
and
push
inc
xor
or
in
loopew
inc
pop
xor
gs
dec
or
loope
sub
jns
ds
add
pop
stos
imul
dec
mov
not
popa
and
lds
pushf
fdivl
pop
xchg
popf
xchg
or
in
addr16
mov
sbb
and
ffree
adc
jg
jge
mov
adc
dec
lock
and
sbb
cli
xchg
xchg
pushl
xor
sub
test
dec
mov
xchg
sar
and
les
mov
sbb
js
mov
outsl
bound
adc
xorb
dec
out
mov
push
cli
push
cmc
ret
xor
repz
in
into
loop
mov
push
lret
addl
stos
insb
into
push
xchg
lds
xchg
insb
pusha
fwait
sbb
push
aas
enter
mov
mov
cli
jmp
bound
or
psllw
mov
mov
fisubrl
xchg
dec
mov
pop
insb
ret
outsl
fdivp
mov
pusha
sub
sbb
pop
sahf
ss
outsb
jecxz
test
push
push
adc
pop
pusha
xchg
add
stc
neg
call
add
xor
xchg
fwait
cmpsb
mov
sbb
push
ss
fld
popf
pop
outsb
shl
test
lret
push
mov
and
es
jle
pop
imul
mov
popa
in
hlt
in
or
sbb
jnp
inc
cmp
and
mov
xchg
ror
fwait
push
push
push
adc
movsb
std
lret
mov
xchg
and
adc
cltd
lods
stos
push
test
cmp
ljmp
fdivrl
push
sbb
jl
jne
pop
mull
loope
or
das
mov
sti
push
test
mov
packssdw
xorb
repnz
adc
ljmp
mov
test
rorb
inc
fsubrl
mov
fs
test
rcll
mov
cs
push
inc
test
xchg
test
cmpsl
repnz
mov
push
mov
call
ss
int
jge
sub
mov
jle
stos
sub
cli
mov
jmp
fimuls
loopne
pop
jns
jmp
lahf
decl
into
test
aas
scas
mov
sbb
inc
push
dec
xor
loopne
ds
or
sbb
je
mov
out
pop
or
cld
or
int3
mov
fdivrs
les
cmp
lods
xchg
das
push
jg
dec
and
fidivl
push
orb
shrl
mov
push
jae
sbb
fisubrs
push
dec
push
mov
xor
adc
sarb
adc
popf
shll
lds
jo
aas
jae
xor
push
mov
mov
xor
dec
and
or
inc
sub
dec
insl
daa
pop
cmp
sbbl
lcall
mov
icebp
xchg
and
jne
sbb
pushf
push
pop
mov
loope
pop
or
aad
dec
testb
xchg
fsubs
ja
test
or
or
sahf
sarb
sub
enter
or
es
sahf
test
add
sbb
jmp
dec
push
test
push
popf
popf
mov
js
sbb
add
pop
add
adc
push
sbb
stos
loop
lret
or
push
mov
add
xlat
or
sahf
xchg
ret
out
pushf
cmp
dec
aaa
test
jno
int
pop
aaa
fistpl
mov
das
adc
push
lods
or
or
out
out
push
mov
sbb
rcr
test
bound
ret
inc
shll
lret
mov
dec
out
lock
decl
xchg
movsl
lock
dec
rcrl
sub
jo
mov
test
mov
sbb
xchg
cmp
daa
xor
and
jne
xor
cmpsb
ja
popf
dec
add
out
shll
in
ja
add
hlt
xlat
jmp
jl
ljmp
xchg
mov
out
stos
xchg
scas
out
iret
mov
mov
mov
stc
mov
xchg
ds
mov
jg
gs
call
in
mov
pop
push
in
mov
es
movb
mov
roll
inc
sub
in
rolb
push
add
cs
arpl
sub
add
scas
mov
push
jbe
scas
mov
jne
outsl
cmp
divl
ljmp
mov
pop
xor
inc
xchg
fs
fs
push
stos
mov
inc
pop
lods
push
dec
popa
add
in
in
filds
sti
lret
out
mov
rclb
push
loop
pop
jo
iret
int3
iret
adc
lcall
movsb
xor
jbe
fdivrs
xor
fcoms
sahf
adc
lea
sub
imul
mov
push
xchg
push
cmc
adc
sbb
jmp
in
sbb
lret
add
sub
mov
iret
push
fcompl
mov
jbe
addr16
dec
jnp
repz
out
sar
cmp
in
mov
and
adc
jno
jno
shrl
xor
inc
aas
adc
xchg
scas
cs
scas
mov
mov
fsubp
shlb
and
orl
mov
pop
dec
popa
pop
push
pop
mov
std
and
xor
nop
in
shr
test
pusha
test
aad
push
icebp
adc
ja
add
shlb
pop
xchg
shll
mov
or
aam
jge
insl
jne
inc
out
mov
in
push
mov
popf
xchg
and
lcall
je
sbb
cltd
cmpsb
jmp
inc
sub
push
and
pop
adc
pop
cmp
jmp
mov
cwtl
addr16
filds
jge
mov
pushw
adc
xchg
aam
jo
mov
add
out
cmpsb
or
jo
fldcw
test
test
fldenv
dec
nop
xor
and
rcrb
dec
stos
popa
mov
and
stos
outsb
ds
clc
andb
jmp
cmpsl
cs
and
mov
dec
pop
notl
adc
xor
mov
inc
cmc
out
lods
dec
and
push
dec
lds
mov
lcall
inc
jp
xchg
enter
ret
dec
aam
jno
loope
insb
sti
fstpl
inc
mov
aad
ja
nop
push
mov
cltd
clc
push
mov
scas
ss
mov
lret
iret
sbb
iret
and
lds
inc
neg
push
xchg
mov
xlat
dec
cmp
dec
scas
jl
ficoml
outsb
lds
call
sub
shll
or
lret
xchg
push
and
mov
rclb
and
scas
and
cmp
or
cmp
mov
daa
lcall
sbb
mov
cmpsb
jp
outsl
sbbb
pusha
mov
test
mov
orl
movsb
test
das
mov
subb
xor
push
rcr
cmp
and
in
in
fs
inc
xchg
jp
test
mov
stc
xchg
mov
sti
dec
aas
pop
add
pop
stc
stc
adc
fsts
mov
fisttpl
or
push
jecxz
add
inc
sub
lcall
test
inc
pop
inc
mov
jl
mov
test
bound
ja
and
mov
xchg
clc
jae
out
dec
adc
cld
mov
mov
nop
sub
mov
xor
mov
imul
jle
mov
push
dec
ret
scas
mov
add
push
cmpsb
insl
es
pop
mov
lds
je
push
js
and
fisubl
lcall
adc
gs
xchg
pop
bound
cmp
dec
sub
or
push
push
jne
pop
mov
jb
or
inc
jmp
or
xor
sbb
mov
cmp
loopne
dec
add
mov
sub
stc
xchg
xor
pushf
clc
push
ret
xchg
sbb
mov
cmpsb
repz
stos
lcall
adc
dec
movsl
fs
inc
int
loop
cmc
cmp
push
mov
mov
sub
push
inc
rclb
cli
outsl
mov
cwtl
nop
hlt
cmp
jo
mov
dec
jbe
lods
aas
mov
mov
insl
jge
rep
out
in
int3
xchg
sbb
lds
insl
mov
hlt
cmp
xchg
inc
xor
add
sbb
push
subb
sub
cltd
cltd
jp
and
push
xchg
insb
push
int
jp
mov
or
adc
jle
dec
sbb
and
bound
es
mov
xor
call
adc
mov
outsl
mov
mov
pop
rclb
xor
scas
in
mov
sbb
or
mov
leave
mov
pop
cmp
jp
pop
loopne
mov
movmskps
xchg
cmp
cmp
test
sti
inc
mov
mov
adc
jnp
loop
fdivr
repz
mov
mov
ret
inc
fcmovbe
ficoml
jg
test
movsl
fld
inc
movsb
pop
ret
pop
std
imul
daa
mov
pusha
negb
dec
sub
call
or
mov
dec
or
loopne
shll
andb
xor
mov
ja
xchg
mov
ret
mov
pop
jbe
cld
jno
call
addb
lods
mov
mov
mul
enter
xor
cli
or
or
push
and
push
jmp
fists
push
and
jmp
jno
bndstx
cmp
and
add
mov
add
pop
setno
mov
push
xchg
fnsave
jecxz
call
call
dec
insb
adc
popf
jg
xchg
ret
inc
repz
adc
push
into
cmp
push
imul
xor
scas
incb
pusha
clc
and
dec
sub
sub
lret
add
push
pop
sub
xchg
and
aaa
subl
sti
jge
mov
mov
add
dec
and
add
fwait
stos
bound
or
ret
aas
outsl
aad
cmp
arpl
scas
lret
stos
lea
cmp
mov
out
sbb
push
aas
cltd
shrl
lods
fdivp
into
xchg
cmp
popa
and
dec
mov
cld
test
inc
daa
sub
fistpl
mov
add
add
add
add
mov
add
sbbb
add
pusha
add
addb
add
add
add
add
add
add
add
mov
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
push
add
in
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
or
add
rolb
pop
add
add
add
add
add
add
add
inc
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
insb
ret
jl
add
nop
ret
mov
add
add
ret
add
add
lcall
add
ret
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
push
ror
xchg
repnz
add
dec
cmpsl
or
mov
pusha
hlt
je
out
lret
cmp
cmp
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
dec
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
push
push
jmp
cwtl
sub
je
subl
adc
pusha
cld
adc
js
jmp
and
inc
nop
stos
and
inc
pop
leave
push
and
fwait
fwait
std
fldcw
add
sbb
loope
std
in
or
rclb
imul
test
adc
dec
rcrb
xor
xor
mov
xchg
orl
or
mov
pusha
imulb
push
add
les
cs
jno
sbb
add
jmp
bound
test
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
push
add
add
xchg
mov
ds
sub
incb
sti
sub
dec
add
lods
outsl
sbb
sbb
sti
fwait
add
add
pop
aas
dec
push
mov
xchg
pushf
cmp
push
add
mov
xchg
xchg
insl
adc
mov
push
mov
mov
add
push
ljmp
or
lret
stc
es
adc
add
stos
packsswb
in
test
add
mov
sub
add
clc
rorl
call
jb
sub
fmuls
lea
sub
je
mov
inc
pushf
mov
aas
test
inc
adc
mov
jmp
dec
add
shrl
data16
or
outsb
lea
add
pushf
inc
mov
adc
loopne
jg
sti
push
jno
add
cmp
ja
test
repz
arpl
dec
hlt
mov
cmp
xchg
push
pushf
adcb
lea
jb
pop
aad
xchg
jb
mov
lock
rclb
enter
in
jne
mov
inc
add
cltd
push
sbb
add
adc
rcrl
inc
xchg
cltd
negl
cmp
loop
mov
push
pop
stc
and
sbb
push
push
call
xchg
push
cmp
cld
clc
cld
push
sti
inc
enter
fldcw
mov
orb
or
pop
mov
loope
jecxz
pop
pop
push
loopne
test
xor
or
adc
mov
and
or
rep
or
push
mov
inc
xor
rorb
bnd
adc
dec
mov
or
movsb
jo
sahf
int3
or
mov
sbb
mov
stc
push
loop
sbb
xor
dec
or
js
cmp
or
repnz
sbb
xor
push
rcrb
xor
xor
imul
scas
cmp
jmp
and
adc
sbb
pop
sub
lea
inc
cld
add
sub
fcmovne
push
inc
pusha
jbe
cwtl
sub
lods
push
stos
add
nop
cmpl
je
dec
jae
inc
test
push
mov
cmp
mov
rep
cld
repnz
sub
add
xchg
outsl
jae
mov
jmp
sbb
mov
test
das
sbb
push
or
add
fimuls
repz
and
call
push
test
sub
imul
std
sti
dec
push
stc
adc
nop
add
xchg
fstps
pop
xor
rorb
dec
sub
lea
popf
xchg
inc
xchg
push
inc
notl
test
push
cmp
movzbl
or
add
push
mov
test
xor
mov
cmp
or
jnp
mov
icebp
or
jl
mov
push
add
loope
adc
jg
lea
push
dec
xor
jmp
sbb
sbb
pop
push
aas
and
ficoml
xor
rcrb
inc
pop
or
add
mov
jo
icebp
add
test
popa
mov
add
nop
add
or
pop
rclb
icebp
sub
and
cmpsb
dec
push
pop
pop
push
pop
pop
ret
and
call
jmp
adc
add
add
push
call
nop
or
ret
shl
sti
nop
xchg
in
add
je
push
mov
pop
inc
xchg
inc
add
pop
add
jmp
mov
ret
lods
push
jne
aaa
scas
leave
push
or
clc
dec
int3
pushfw
inc
xorb
cmp
je
movsb
ja
sarb
push
add
repnz
sub
pop
psubb
leave
bound
test
sub
xchg
in
data16
and
lods
loop
push
jg
jg
outsl
add
mov
jnp
mov
and
sti
loope
call
pop
jne
mov
and
pop
dec
xchg
shr
mov
jbe
jae
shll
adc
sbb
pop
xor
ret
jmp
test
pop
add
push
loop
push
sbb
pop
cmp
or
and
xor
mov
movzwl
test
jge
jne
xchg
or
cld
pop
inc
pop
adc
testb
cmp
jge
shlb
lmsw
sub
and
cli
incb
enter
sbb
cmp
ret
pop
pushf
or
rclb
les
push
add
jle
addb
pop
pop
dec
mov
xor
dec
pop
cmpsb
pop
popa
jmp
jg
push
mov
sub
ret
add
jbe
push
push
and
cmpsl
nop
cwtl
pop
mov
mov
dec
push
out
loope
in
xchg
pop
pop
fistpll
fimuls
int
ss
dec
es
push
sbb
dec
or
stc
add
movsl
add
push
jnp
inc
push
cli
cmp
sbb
lret
pop
shl
cmp
cmp
ret
add
adc
std
adc
push
lcall
push
push
sbb
mov
jge
jno
test
dec
cmp
enter
push
pop
xor
stc
mov
hlt
push
xchg
dec
or
cmp
test
mov
lret
push
in
mov
adcl
mov
mov
adc
lret
sbb
popa
jne
stc
jmp
inc
ficompl
add
outsb
loopne
sub
pop
jns
fcmove
or
xchg
sub
nop
add
jp
fwait
sub
cmp
pop
sbb
and
jae
call
dec
or
into
push
jle
test
and
add
push
push
push
call
sbb
mov
clc
dec
test
xchg
aad
or
addb
sbbl
mov
icebp
or
jno
adc
icebp
sbb
shlb
jle
popf
mov
ss
test
fsubr
inc
mov
push
adc
rcl
add
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
mov
or
inc
cmpsl
data16
pop
push
inc
sbb
inc
sub
pop
outsl
dec
popa
stos
leave
add
lods
popf
inc
pushf
lods
jb
mov
stos
pusha
div
mov
icebp
mov
movsl
call
dec
or
push
adc
hlt
ret
dec
pop
xchg
or
sbb
and
inc
cmp
inc
dec
adc
jl
add
add
mov
push
loope
push
lea
divl
iret
aad
das
mov
pop
test
cmp
cmp
sub
mov
sbb
xchg
mov
adc
mov
inc
and
jmp
inc
adc
dec
scas
test
sbb
mov
lea
jmp
sti
xor
pop
pop
cmpsb
shrl
cmp
pop
subl
bound
adc
popa
je
pop
outsl
outsb
and
push
fsubr
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
xor
cmp
popa
jnp
push
inc
outsl
js
emms
jnp
sbb
data16
mov
aas
inc
js
je
push
nop
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
mov
insb
sbb
jl
imul
mov
hlt
arpl
add
inc
fsubl
addr16
xor
inc
adc
inc
imul
mov
lods
dec
outsb
data16
insl
lea
push
jecxz
push
fs
rolb
jne
jns
sbb
mov
fildl
and
mov
notl
or
add
sub
xchg
or
lods
stos
enter
lds
lea
dec
xchg
cltd
xor
xor
jl
sbb
or
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
aam
add
pushf
daa
add
mov
add
mov
ret
sub
add
add
inc
add
ret
and
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
mov
rolb
or
add
mov
jnp
add
cltd
add
out
add
icebp
scas
add
test
add
ret
mov
add
add
add
dec
out
mov
