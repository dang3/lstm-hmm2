call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sahf
sarb
repz
popf
cli
ljmp
push
inc
inc
jae
arpl
adc
xchg
xor
and
rol
ret
jecxz
xchg
xchg
addl
push
inc
and
arpl
adc
xor
and
rolb
jne
and
sbbb
das
inc
adc
push
pop
insl
inc
inc
push
and
popf
xchg
mov
push
popa
mov
mov
dec
jl
call
mov
adc
filds
sbb
cwtl
mov
loop
mov
mov
xchg
addr16
out
mov
scas
jae
mov
shl
add
repnz
repnz
dec
adc
popf
lahf
in
adc
stos
xchg
mov
loop
xchg
jl
mov
mov
arpl
add
es
scas
push
xor
cmp
insb
xchg
add
xchg
scas
adc
loopne
add
arpl
push
scas
push
inc
ret
cmp
push
out
pop
inc
stos
daa
mov
arpl
xor
loopne
ret
ret
loop
xchg
movl
stos
jb
bound
sbb
dec
mov
fwait
lea
mov
aaa
add
and
add
jae
jno
xor
rorb
mov
sub
ffreep
shlb
push
adc
or
inc
push
bound
fwait
lock
sbbl
xorb
inc
inc
jae
arpl
adc
add
xor
and
rol
ret
jecxz
xchg
xchg
addl
push
inc
inc
jae
arpl
adc
add
xor
and
rolb
mov
mov
ds
adc
mov
pop
pop
inc
nop
jo
dec
dec
lahf
sub
lods
arpl
and
lods
testl
ror
sbb
pop
push
mov
sahf
mov
jbe
das
xchg
cltd
pusha
or
xchg
cmp
mov
inc
xlat
outsb
jge
jmp
pop
push
leave
aam
test
sbb
sub
out
flds
mov
mov
insb
shl
rolb
jl
fnsave
mov
cmp
mov
jb
sbb
stc
cs
mov
xor
mov
cmp
shr
mov
sbb
imul
loop
xchg
and
stos
push
pop
pusha
push
sbb
test
jg
fs
movb
out
adc
insb
hlt
xlat
adc
int3
scas
xchg
rclb
xor
inc
mov
decb
outsl
cwtl
icebp
cmpb
cmp
test
in
adc
xchg
xchg
dec
cs
pop
nop
outsl
sbb
dec
xor
es
mov
cmp
inc
dec
adc
mov
cmc
dec
daa
fdivrl
movsb
pop
or
cmpl
test
mov
fbld
or
add
ret
xchg
inc
sub
test
popf
fs
xor
or
pop
mov
fiaddl
stos
pushf
mov
loope
mov
cmp
push
fistl
scas
out
jne
pop
cmp
ja
mov
xor
add
mov
loopne
and
stos
dec
xchg
jle
mov
es
fstpl
movsl
fstpt
aam
enter
or
lret
cmp
rcrl
jae
inc
or
ja
ret
or
mov
loopne
loopne
mov
push
mov
and
ds
mov
or
mov
pop
inc
mov
cltd
sub
cwtl
test
add
push
mov
popf
xchg
or
add
es
cmc
or
stos
jmp
std
mov
mov
call
dec
out
hlt
mov
outsb
les
ret
sti
xlat
dec
or
sub
pusha
jmp
push
lea
mov
adc
adc
add
jns
ficompl
push
fwait
push
jbe
lahf
lahf
out
adc
pop
mov
jmp
xor
or
pop
repz
fildl
mov
sbb
int
out
popa
out
jge
push
imul
mov
mov
sahf
push
andl
stos
notb
sub
enter
or
and
outsb
nop
pop
jecxz
imul
jo
inc
nop
lcall
pop
arpl
out
orb
cwtl
sub
leave
cmc
push
out
aas
mov
outsb
fldenv
mov
nop
mov
adc
mov
pushf
sub
xchg
xor
lock
and
add
movsb
adc
cmpsb
ret
jbe
imul
push
enter
sbb
jl
cwtl
addb
addl
sti
fldenv
and
outsl
das
push
lds
jbe
insb
ds
call
pop
add
jecxz
cmp
cmp
fcomp
pop
jae
scas
cmp
addr16
sbb
icebp
mov
cs
jmp
mov
lods
adc
xlat
mov
stos
iret
lcall
shlb
pop
outsb
nop
and
imul
ss
push
sahf
testl
adc
or
adc
and
jecxz
icebp
push
push
xchg
xchg
pop
mov
jne
movsb
mov
cmp
test
dec
clc
fstps
or
mov
pushf
fnsave
cmp
push
cmpsb
in
lret
pop
dec
popf
lods
cmp
xchg
rclb
inc
dec
mov
in
idiv
sub
enter
dec
adc
or
ret
mov
push
and
fwait
pusha
push
add
cmp
sub
int
mov
loope
inc
imul
sar
sub
ret
inc
pop
outsl
out
loopne
adc
loop
in
rclb
ret
mov
icebp
out
insl
pop
jle
fisubl
push
mov
aas
xchg
cli
stos
mov
dec
and
bswap
je
loop
mov
imul
xchg
mov
mov
out
ljmp
stos
fldcw
adc
aas
sub
mov
xchg
jno
dec
push
int3
popa
cs
mov
out
ja
mov
adc
out
ds
cmpsb
imull
xchg
xchg
aas
pop
imul
shll
mov
test
aas
rcll
xchg
pop
xor
imul
call
inc
jp
dec
sbb
lods
cld
or
jne
push
out
hlt
lcall
or
cld
scas
ret
fidivl
dec
loopne
and
daa
arpl
push
push
fwait
sub
loope
mov
push
xchg
xlat
inc
sub
dec
inc
or
add
or
pop
push
ljmp
insb
fwait
xchg
sbb
int3
and
std
insb
pop
lods
xchg
mov
push
lss
cmpsb
pop
mov
in
cld
mov
in
xchg
pop
lods
out
add
sbb
loopne
loope
rolb
jno
mov
mov
add
xchg
cmp
mov
inc
movsl
jmp
sub
sub
mov
arpl
ror
pusha
sub
push
xchg
or
mov
cmp
negl
sbb
xor
setnp
insb
cmp
aad
shl
inc
scas
lret
lea
insl
jecxz
out
movsl
jl
icebp
add
sahf
notl
or
sbb
xchg
out
dec
cmpsl
les
pcmpeqd
add
rorb
fs
xchg
ret
outsb
jno
lods
shll
cmp
mov
dec
shlb
sbb
sbb
ja
adc
daa
int
cmp
or
inc
sbbl
xchg
movsb
mov
leave
mov
mov
mov
dec
popf
imul
xchg
fcoml
das
in
or
add
fadds
jg
imul
rcr
repz
les
or
test
rcrb
xchg
xchg
cmp
adc
push
sbb
add
push
and
cltd
jle
push
adc
std
outsl
xor
mov
xchg
dec
lea
loop
add
or
fiaddl
stos
cmp
mov
inc
mov
test
sbb
xor
test
test
int3
mov
xchg
in
mov
roll
sbb
js
inc
adc
lods
stos
sbb
sub
arpl
push
xor
cmp
andl
jo
mov
mov
lock
sub
leave
xchg
rcrb
ljmp
fs
lods
fnstcw
fwait
and
rol
xlat
fidivl
inc
sub
mov
sahf
xor
cmpsl
mov
stc
in
fistps
jae
dec
and
push
ss
dec
in
and
divb
imul
cmpsl
das
lret
push
pop
das
mov
or
es
xor
and
stos
stos
cmp
test
pop
iret
shlb
mov
and
dec
testb
or
test
mov
lea
loopne
test
mov
pause
int
mov
bound
sub
xor
loopne
out
mov
push
dec
gs
aas
mov
xor
notl
out
shrb
fstps
or
mov
in
nop
loope
cmp
je
lods
mov
outsl
push
ret
lds
in
jge
aaa
pop
push
xchg
orl
dec
test
jns
ja
xchg
mov
bswap
test
cmp
mov
inc
jns
cwtl
push
add
sub
repnz
or
mov
xchg
das
dec
mov
and
xchg
xchg
lods
mov
add
fidivrs
and
cmp
or
test
mov
pop
pusha
adcb
leave
sub
and
ficoml
mov
or
mov
inc
pop
or
insb
int3
cmp
add
mov
mov
jecxz
out
dec
xor
sub
cmp
sub
xchg
cmp
dec
xchg
jg
scas
xor
andb
mov
loopne
adc
and
sbb
mov
xor
push
pop
xor
sbb
insb
ds
rorb
iret
repnz
ret
stos
mov
mov
pop
rorb
xor
jnp
mov
jge
cmpsb
cmp
popf
stc
adc
cwtl
loopne
add
popf
add
test
outsl
jecxz
or
jle
pop
adc
std
dec
jg
fwait
or
das
cwtl
push
shl
inc
lods
jecxz
or
mov
hlt
sbb
cmp
push
mov
push
or
imul
add
movaps
mov
sarl
mov
push
pop
and
dec
scas
jge
xor
xchg
cmp
pop
outsl
mov
in
and
cmpsb
pop
jno
jno
jp
movl
in
lods
inc
repnz
jmp
xor
mov
aas
mov
sbb
mov
and
cmp
loop
inc
mov
jp
cli
xchg
mov
add
dec
cmp
mov
mov
adc
aas
icebp
push
or
into
aas
out
lahf
loope
cli
out
shrb
out
cmpl
sbb
xchg
call
movb
pop
cmpsl
popa
aam
mov
xor
loopne
push
pushf
loope
xor
mov
mov
jge
add
or
push
clc
jmp
sbb
fidivl
adc
cmp
pop
cmpl
popa
mov
sub
test
mov
and
out
add
dec
adc
bound
pop
out
loopne
inc
jbe
pop
inc
jecxz
push
bound
add
das
dec
scas
jmp
shll
shl
xlat
leave
xchg
adc
inc
shll
lods
jge
dec
cmpsb
push
out
addr16
aam
fidivs
sbb
add
xchg
lods
xchg
leave
outsb
jp
sbbb
stos
adc
inc
cmp
jno
out
popa
xor
push
sbb
rcll
or
cld
xchg
cmp
jb
mov
and
pusha
repnz
pop
jbe
lods
push
imul
sub
cld
mov
imul
out
es
adc
or
repnz
mov
fdivrp
lods
xchg
fistpll
mov
imul
js
fisubl
mov
out
in
ja
inc
adc
xchg
add
xor
mov
push
aaa
cmp
mov
pusha
aas
dec
aaa
idivw
int
jmp
std
inc
pop
pop
frstor
sub
add
pusha
int
pop
outsb
adc
or
les
mov
jo
jecxz
and
repnz
cld
ret
lcall
cli
xchg
inc
cmp
sub
pop
mov
icebp
jb
push
rorb
sub
int3
dec
fwait
andl
aaa
pop
adc
cmp
jle
lods
push
ja
add
and
in
xchg
mov
adc
adc
imul
loopne
sbb
inc
aas
cwtl
sbbb
mov
mov
ret
js
scas
movsl
cmp
adc
repnz
stos
mov
adcl
jne
jp
out
or
add
popf
inc
gs
jmp
or
aam
jl
cmc
push
insb
aaa
cltd
cld
js
inc
lds
mov
push
add
sub
dec
pop
sub
mov
inc
jae
movsb
dec
sarl
jmp
movsl
sarl
std
sub
cmc
mov
js
inc
jp
in
xor
jo
inc
mov
idivb
cmp
leave
mov
js,pt
imul
xchg
pop
ja
insl
mov
mov
adc
loop
push
out
fstpl
in
sbb
fsts
jae
aaa
xor
ds
es
loopne
cld
or
mov
mov
fidivl
ret
jmp
test
jo
mov
push
push
and
mov
lock
push
popl
and
lcall
loopne
pop
push
or
pop
loop
mov
inc
xchg
add
leave
pop
push
cwtl
jmp
mov
daa
cs
add
aaa
pop
mov
in
loop
mov
cld
cmp
jbe
sub
cmp
mov
lret
sub
sar
inc
cmovg
loop
clc
adc
xchg
dec
sbbl
dec
xor
in
iret
ja
rol
jnp
ret
cmpsl
hlt
and
pop
jnp
rorb
iret
and
xor
imul
mov
mov
cmp
adc
pause
adc
leave
pop
pop
sub
scas
xchg
orb
fyl2xp1
loopne
inc
adc
rol
out
sbbb
inc
mov
inc
jle
in
cmp
push
sbb
mov
adc
add
test
or
jbe
sub
scas
int
push
inc
mov
or
cmp
pop
xchg
add
adc
mov
std
jb
xor
and
out
aaa
jge
aaa
arpl
jl
shlb
fistpl
push
jbe
lahf
fstl
test
mov
les
and
fwait
and
pop
lds
xchg
mov
mov
xchg
pop
outsl
int3
int
mov
mov
sarb
or
lret
lahf
push
call
mov
jg
imul
jnp
sub
dec
xchg
outsl
sub
xchg
push
ret
shrd
das
jecxz
add
xchg
jbe
or
arpl
jmp
pusha
dec
pop
outsb
jecxz
loop
fdiv
jne
sti
leave
test
mov
mov
ret
or
mov
mov
mov
test
popa
movsl
mov
inc
hlt
inc
lret
xor
adc
in
dec
ficoml
call
popa
in
jno
inc
add
lods
loopne
scas
sbb
movsb
popf
and
cmp
les
je
xlat
lcall
add
add
adc
push
mov
decb
insl
rcrl
fists
imul
outsl
mov
xchg
or
int
mov
pop
and
sub
outsb
push
adc
aad
xchg
push
in
roll
lock
pop
sub
in
adcb
ljmp
mov
popa
mov
cltd
dec
loope
rorb
add
out
lods
jb
mov
dec
xorl
cwtl
xor
aam
mov
jns
aaa
cmc
add
pusha
lds
in
xor
sahf
jle
test
pop
ds
adc
imul
dec
add
mov
mov
sub
sub
lahf
inc
cld
mov
cmp
cmp
into
xor
test
shlb
sbb
leave
stos
ljmp
int
notb
test
into
pop
push
mov
into
add
jmp
push
sbb
std
pop
jnp
pop
int3
sub
into
jp
sahf
fcompl
inc
lret
cli
mov
xlat
jle
or
into
mov
xchg
jns
es
xchg
rcl
sub
pop
fs
xchg
fidivrs
jb
repz
pop
in
lock
or
mov
not
adc
or
xchg
pusha
jbe
data16
aaa
cmp
dec
js
mov
xor
xchg
mov
dec
xchg
pop
jmp
gs
movsl
mov
add
mov
mov
jp
sbb
iret
outsb
mov
mov
xchg
or
in
and
jge
adc
xchg
mov
mov
adc
sub
loope
jns
fucomp
inc
arpl
inc
jl
inc
inc
insl
shll
pop
or
aam
jae
cs
out
insb
mov
mov
jne
pop
cs
xor
nop
and
mov
adc
std
dec
repz
and
mov
pop
push
or
push
iret
stos
cmp
push
je
imul
pop
leave
test
aas
je
dec
stos
daa
cld
cmp
sbb
enter
xchg
and
inc
dec
pushf
xor
mov
test
mov
lret
adc
mov
negb
xorb
sub
xchg
mov
pop
sahf
fstps
dec
jb
cli
scas
add
pusha
inc
loope
pop
aas
lds
test
out
addr16
cmc
je
mov
rorl
repnz
cmpb
and
int3
jno
add
cmp
lret
dec
cmp
loope
arpl
cs
adc
mov
cmc
fadd
sub
push
fsubr
ljmp
or
out
mov
hlt
xchg
cld
lcall
and
es
cmp
mov
enter
push
out
mov
cs
pop
add
or
out
movsb
imul
int3
pushf
pusha
bound
outsl
and
loop
pop
scas
je
xchg
mov
xchg
or
xchg
cmp
jo
pop
mov
xchg
mov
call
jne
sti
adc
push
filds
sbb
aas
or
cmp
das
mov
xchg
cmp
adcb
adcb
jo
jle
sub
or
int
aaa
mov
sahf
jns
xor
je
fdivl
dec
data16
jg
and
push
or
pop
xchg
dec
popa
xor
push
fistps
add
mov
das
js
icebp
or
dec
and
fidivrl
pop
dec
iret
pop
lcall
mov
sti
push
add
cltd
rcll
leave
or
into
pop
sbbb
fldz
popf
out
bound
add
add
lcall
add
jno
lods
push
push
sub
lea
jns
xchg
add
lcall
adc
ljmp
das
dec
addb
lea
add
shlb
repz
scas
outsb
jmp
loop
push
fsubr
iret
fimuls
add
jnp
nop
shrl
pop
in
fcoms
out
pop
add
lock
xchg
dec
aad
ret
xorb
jbe
imul
push
fdivs
cmp
imul
mov
js
fnstsw
repnz
leave
lods
fistpll
rcll
gs
adc
push
sub
aad
lock
sub
dec
mul
inc
stc
add
fnstenv
push
or
stc
inc
js
sbb
push
mov
gs
scas
stc
mov
inc
rclb
shl
hlt
ljmp
push
pushf
imul
mov
sbb
push
ret
jnp
and
cli
jge
or
in
dec
mov
shrl
xor
js
std
sub
sbb
es
das
pop
jl
dec
popa
or
mov
gs
lods
movsb
jp
ljmp
pcmpeqw
mov
push
inc
cwtl
push
dec
jb
xchg
lds
loope
push
dec
pop
jp
mov
mov
dec
out
nop
mov
test
outsl
lea
mov
cmp
jbe
out
cwtl
loop,pn
cwtl
stos
add
adc
cmp
pop
test
jne
out
lods
stos
mov
and
into
pusha
js
sub
enter
jmp
mov
fiaddl
rorb
sub
cmp
cltd
das
lods
lods
test
das
daa
jo
pushf
add
mov
dec
pop
pop
pop
xor
imul
addb
lds
sub
int
loope
mov
lods
stc
cmc
jg
jle
and
or
rcrl
jbe
cmp
mov
data16
pop
ss
sub
stc
inc
inc
inc
push
aad
push
and
out
popa
sbb
cwtl
adc
inc
scas
add
inc
cmp
add
imul
andb
stos
jecxz
lahf
cld
adc
sub
adc
imul
cmp
xlat
xchg
mov
dec
mov
pop
adcl
or
adc
xchg
mov
inc
fwait
sti
xlat
popf
inc
push
addl
inc
stos
stos
pop
leave
lock
mov
lahf
jno
xor
lock
sbb
jno
lahf
mov
jp
push
xor
cli
or
aad
xchg
mov
jne
pusha
sub
pop
mov
lcall
add
fnstcw
push
jb
inc
mov
addr16
push
push
sbb
lcall
or
pop
mov
bound
in
sub
jne
jmp
mov
adc
jecxz
lods
orps
cs
rclb
inc
mov
sub
test
lds
push
out
jb
cld
inc
in
imull
jno
in
pop
or
mov
lods
das
jbe
je
and
in
fldt
scas
dec
adc
xchg
lahf
inc
xlat
mov
jne
sub
push
pop
sbb
mov
mov
sbb
add
cmpl
das
adc
das
out
inc
mul
xchg
xchg
sarl
imul
cmp
sahf
arpl
push
into
aam
dec
dec
lahf
and
pop
and
and
sbb
mov
cmp
cmp
cwtl
mov
ret
js
jae
loop
mov
test
mov
and
add
addr16
and
mov
sbb
sbb
sub
insl
pop
enter
arpl
nop
xchg
jmp
jmp
xchg
xchg
addl
push
inc
inc
jae
arpl
adc
add
xor
and
rol
ret
jecxz
xchg
xchg
addl
push
inc
inc
jae
arpl
adc
add
xor
and
rol
inc
jecxz
jecxz
xchg
xchg
xchg
mov
mov
inc
jp
bound
adc
add
xor
and
shr
ret
lret
loop
xchg
xchg
xorb
mov
adc
int3
int
fstl
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
cwtl
or
cmp
sub
inc
mov
cmpsb
pop
stos
add
fstps
mov
mov
pop
mov
cld
js
push
or
sub
pop
fmuls
clc
insb
call
fdivrs
outsb
sub
pop
int
cld
js
push
and
xor
inc
fcoms
fs
jnp
pushf
xchg
fsubrs
repz
push
jo
inc
inc
push
push
mov
dec
sti
xchg
or
je
jne
inc
jg
pop
xor
sbb
or
fwait
and
loopne
movsl
jae
inc
cmp
ret
adc
xchg
xchg
lea
jne
out
les
dec
inc
outsb
pushl
fdivs
in
cmp
mov
xchg
imul
mov
pop
fcoms
in
mov
or
dec
cld
add
pop
push
or
mov
insb
pop
jl
xchg
pop
jae
test
nop
int
jno
adc
cld
sbb
mov
lret
pushf
xor
arpl
jae
inc
cmp
sub
fdivrl
cwtl
or
cmp
cmp
jl
jne
test
xchg
or
aam
cld
js
outsl
cmc
imul
mov
mov
add
into
push
ret
xor
mov
pop
mov
and
adc
mov
flds
mov
push
jne
ds
pop
int3
sub
and
dec
enter
call
mov
pop
int3
dec
cld
js
push
cmp
sub
pop
fmuls
clc
insb
call
mov
pop
int3
dec
cld
js
push
gs
inc
jns
sbb
xor
mov
dec
inc
arpl
sbb
mov
jge
and
add
shlb
lcall
aaa
mov
push
adc
cmp
clc
dec
dec
jbe
adc
cmp
test
fstpl
aaa
movsl
xor
or
mov
adc
mov
test
pop
aam
repnz
jnp
mov
gs
test
mov
ljmp
add
add
popf
in
fs
mov
xchg
cs
add
jno
and
imul
adc
cli
aas
lahf
push
add
cmp
mov
mov
outsl
js
inc
roll
cmp
mov
add
cmp
orl
jmp
pop
les
inc
xchg
in
enter
daa
fisttps
sbb
inc
std
subl
pop
mov
mov
jb
dec
add
stc
dec
or
lret
mov
das
icebp
or
mov
xchg
pop
xor
iret
lds
test
bound
jnp
cmp
mov
dec
add
jecxz
ss
stos
mov
cli
call
push
loopne
shl
cltd
loop
jl
ja
cmp
imul
sub
cmp
enter
sub
inc
imul
push
jle
mov
rcr
mov
xorb
loop
xlat
dec
push
pop
jg
inc
fldt
and
push
out
fsubs
clc
and
xchg
in
pushf
push
cmp
mov
cmc
cwtl
xchg
test
in
out
lret
insl
push
dec
fs
mov
inc
push
inc
mov
jnp
inc
xlat
movsl
xchg
leave
jae
mov
mov
cmp
add
dec
pop
dec
mov
fsubr
sbb
cs
int3
sar
dec
adc
lahf
mov
inc
pop
pop
sahf
out
xor
rclb
loope
js
sbb
orl
call
pop
lcall
mov
pop
les
mov
inc
gs
sti
sbb
aad
mov
fs
imul
xchg
imul
mov
inc
cs
dec
and
pop
icebp
call
rcrl
int
dec
ja
aas
sbb
xchg
shll
out
mov
lods
movl
add
fsubp
or
dec
mov
sub
xchg
mov
sub
sub
pop
push
mov
fbld
push
inc
mov
pop
sbb
cmp
jg
aam
stc
adc
xchg
movsb
aas
fistps
adc
xchg
gs
les
out
out
iret
rclb
fwait
into
jno
sbb
cmpl
adc
dec
icebp
lods
cmp
repz
mov
rorb
and
cmp
divb
pop
lret
gs
xor
dec
bound
fs
xchg
lret
xchg
mov
push
add
adc
mov
cwtl
dec
and
push
xchg
inc
ljmp
sti
repz
cmp
push
xchg
fcmovb
xchg
sub
pop
add
push
sub
cmp
sti
dec
jo
fildll
lret
ljmp
and
mov
xchg
int
cltd
sub
dec
xchg
loop
sahf
out
mov
cli
fstps
js
ret
mov
xor
sub
test
pop
push
inc
jns
sub
fdivrs
sub
int
push
mov
adc
sub
mov
or
push
mov
mov
and
push
pop
xchg
lods
dec
ret
in
aam
dec
jne
lret
mov
ds
sub
int3
mov
aam
jbe
test
lcall
push
adc
cld
xor
sbb
xlat
push
xlat
es
test
adc
xchg
js
out
ds
hlt
push
xor
fnstenv
inc
mov
cmp
sti
or
xchg
sahf
jbe
mulb
test
das
jge
pop
jb
stos
mov
popa
mov
test
hlt
cmpsb
lret
sbb
mov
push
mov
loopne
mov
rep
loop
inc
inc
pop
dec
push
mov
nop
enter
adc
dec
and
mov
test
sub
cld
lret
mov
inc
adc
adc
push
adc
iret
push
add
push
sahf
push
dec
pop
out
scas
cmpsl
adc
dec
or
pop
jecxz
fcomps
mov
out
addb
cmpsl
push
pop
adc
je
and
jne
push
mov
push
dec
mov
int3
enter
insb
cmpsl
pop
jo
jge
ja
jb
mov
ljmp
enter
inc
mov
cmpsl
ret
mov
jb
test
js
adc
aas
inc
lret
push
in
push
cmp
addl
repz
lahf
xorl
ljmp
jmp
jp
and
std
clc
test
pop
in
outsl
xchg
xor
xchg
in
mov
dec
pop
lds
jns
aad
out
dec
gs
and
push
pop
push
lods
cmpsl
lods
sbb
data16
es
xor
std
cmpsl
inc
out
xor
sub
pop
inc
and
jl
fbld
pop
dec
push
add
movsb
xchg
sub
cli
mov
test
lret
sahf
pop
adc
xchg
push
data16
in
add
pop
arpl
scas
out
icebp
push
add
adc
popa
sti
nop
add
les
pop
dec
unpckhps
out
adc
pop
and
pop
mov
ficoml
inc
cmpsb
jo
sbb
hlt
xor
push
push
aaa
push
into
sbb
sbb
arpl
mov
adcl
data16
insl
sbb
inc
adc
fucomi
cwtl
sub
cli
push
jae
add
jo
andl
aas
fldcw
clc
int
and
test
jo
fwait
jo
jae
sub
mov
pop
sbb
dec
or
aam
das
imul
fsts
dec
mov
sbb
fstps
lahf
imul
pop
pop
push
lret
call
scas
fsubrl
mov
popa
movsl
dec
inc
orb
in
push
sahf
int
and
cmp
out
outsl
icebp
dec
xchg
out
jl
pop
into
mov
ja
adc
dec
popa
pusha
shl
jne
adc
mov
inc
push
push
scas
mov
mov
test
pushf
outsl
inc
icebp
push
xlat
add
or
sub
sarl
pop
dec
xlat
xchg
out
ljmp
in
cmpsb
call
inc
sub
cmpsl
cli
icebp
push
inc
insb
fstpt
cmp
xchg
sahf
bound
imul
stos
xchg
inc
jo
add
in
inc
jmp
push
icebp
roll
inc
inc
inc
push
iret
sub
pop
dec
sub
push
loope
sub
cmpsb
loopne
daa
jl
sub
arpl
cmc
sbb
xchg
adcl
lds
or
sbb
stos
int3
jmp
or
outsl
adc
pop
enter
jns
mov
pop
scas
call
je
mul
bound
cmp
push
dec
divb
in
shll
inc
xor
xor
addr16
sub
iret
in
dec
stc
in
jb
js
lret
mov
and
and
out
bndldx
aad
iret
dec
jge
fwait
mov
fdivp
hlt
jp
outsb
ret
fimull
add
mov
mov
shlb
pushf
pusha
xchg
sub
push
mov
jbe
xor
fistpl
inc
insl
cmp
mov
push
add
stc
jp
call
dec
mov
fsubrl
aaa
hlt
jle
gs
adc
fsub
mov
or
in
into
push
aaa
mov
add
ljmp
push
outsb
xchg
and
icebp
lret
stos
or
ja
jp
xchg
sbb
test
push
arpl
repz
pop
ds
vphaddubq
cs
add
cmp
mov
jmp
jp
mov
scas
jbe
out
cwtl
insb
call
mov
mov
das
sbbb
aas
push
sub
xorl
shll
xor
inc
push
sbb
mov
dec
int3
stc
push
dec
push
xchg
jnp
fwait
js
dec
jno
adc
pop
lods
pop
das
pusha
es
dec
pop
dec
imul
mov
cltd
stos
cmp
bound
jmp
xchg
rcrb
and
mov
pop
mov
aas
mov
xlat
int
push
dec
or
cmp
addr16
sbb
and
mov
cmpb
mov
adc
push
jae
lods
in
daa
pop
jg
jle
test
dec
lea
add
cmc
mov
mov
ret
repz
mov
adc
out
pop
xlat
std
adc
icebp
lret
dec
daa
ljmp
ret
or
and
loop
mov
mov
cmp
mov
cltd
sub
xchg
mov
popf
fstp
sbbl
fistpll
jno
adc
dec
je
stos
adc
call
adc
jns
dec
shrb
jne
cmp
xor
clc
incb
idivb
fnstcw
in
push
inc
in
and
dec
les
pop
in
hlt
movsl
hlt
hlt
pop
pop
test
mov
jge
push
xor
inc
push
add
in
in
and
rolb
mov
mov
push
mov
inc
inc
lods
jp
adc
or
push
repz
pop
or
rcrl
add
call
rcrb
mov
js
jge
jno
les
inc
jb
and
sub
ljmp
pop
mov
xchg
cmp
ficoms
mov
xchg
xor
mov
mov
ret
out
fcomps
aad
mov
fisubrs
fsubl
add
mov
mov
mov
stos
adc
pop
dec
sti
andb
xor
sub
daa
roll
fbstp
add
shll
nop
mov
sub
int
xor
repz
adc
xlat
dec
mov
incb
mov
push
dec
mov
fwait
pop
cwtl
pushf
inc
push
cmp
int
sub
pop
and
sbb
out
dec
ret
fisttpll
ss
xchg
bound
rcrl
jnp
fucomi
pop
cmp
mov
mov
sbb
out
scas
mov
fcomps
lods
mov
mov
or
or
dec
adc
xchg
scas
sbb
pop
inc
addr16
cmpsl
mov
push
mov
sbb
aam
mov
jg
and
sahf
fnstcw
pop
test
and
ja
ljmp
sbb
xor
jl
xlat
stos
or
xchg
loopne
ja
filds
cmpsb
test
and
pusha
fistpll
sub
pop
mov
fldl
cmp
and
xchg
and
dec
ficomps
into
mov
add
or
sbb
add
cmpb
outsl
adcb
xchg
adc
xchg
mov
test
arpl
jp
push
aaa
xor
pop
in
movsb
mov
inc
xor
addr16
imul
insl
ret
leave
cmp
jmp
scas
inc
sbb
test
call
xor
dec
in
push
bound
dec
cmp
xchg
xchg
js
mov
scas
and
fisttps
xor
add
test
fadds
and
jge
mov
cli
and
sbb
push
dec
outsb
or
push
sub
aam
dec
mov
stos
test
insl
out
pusha
ss
cmp
cld
mov
fucomip
sbb
add
loope
add
mov
ret
ret
mov
fnstcw
es
xchg
sub
push
mov
cmp
push
std
pop
or
xchg
ret
sub
inc
mov
mov
dec
clc
add
mov
lods
jl
test
bound
repnz
addr16
xor
or
rcl
shl
lds
pop
lea
xchg
cmp
jp
lea
xchg
jnp
dec
in
leave
imul
adc
pusha
inc
insl
adc
mov
js
lcall
aad
xchg
enter
arpl
push
insb
sub
lods
test
test
in
mov
pop
outsl
xchg
js
inc
fwait
lahf
sti
mov
or
cli
pop
ds
out
repnz
mov
jge
push
leave
cmc
dec
addl
mov
lods
in
dec
fsts
fsts
cmp
push
loopne
sarl
adc
jmp
inc
or
mov
movsl
inc
roll
sub
inc
sub
cmp
cwtl
insb
dec
dec
enter
sub
in
cmp
lcall
mov
cmp
mov
mov
add
xchg
stos
push
push
repnz
lea
scas
pusha
or
mov
mov
push
sbb
mov
imul
andl
push
bound
loope
add
xchg
cmp
add
sbb
inc
dec
inc
mov
nop
leave
push
rorb
cld
mov
das
lock
leave
fnsave
pop
sbb
imull
sbb
mov
inc
adc
add
cmpsl
sbb
and
xchg
fbld
dec
jle,pn
lret
cmp
push
outsl
push
add
mov
mov
rcr
cmp
mov
sub
xchg
sub
xchg
pushf
xchg
jp
jg
cmp
add
mov
push
sbbb
lock
adc
xchg
cmpb
mov
insb
cltd
mov
jne
sbb
or
lahf
fidivrs
pop
mov
pop
xchg
xor
xchg
lahf
jnp
repz
mov
test
sub
mov
mov
lea
adc
scas
ret
xchg
nop
icebp
or
push
xor
ret
lcall
add
leave
loope
sbb
shlb
aaa
jmp
mull
sub
push
data16
ja
repnz
xor
test
mov
fs
or
cmp
xchg
cmp
fstpt
mov
push
dec
sbb
mov
jbe
fwait
cmp
iret
xor
push
shl
call
mov
or
into
sub
fwait
vmwrite
add
sbb
xchg
dec
ljmp
subl
out
jl
aad
cmp
das
std
sub
mov
adc
sub
clc
in
jb
xor
pop
cld
ljmp
xchg
inc
test
mov
movsl
popa
pop
in
test
stos
outsb
cwtl
shlb
xlat
call
jecxz
mov
lret
cs
fbld
push
lahf
mov
or
pop
add
adc
cmpsl
mov
scas
js
xchg
movsl
faddl
dec
imul
dec
xchg
ffree
mov
jp
or
es
in
jnp
mov
xor
push
pop
ja
xchg
ja
scas
repnz
mov
das
out
xchg
cmpb
adc
mov
sbb
sub
lods
mov
push
pop
gs
lcall
sbb
cmp
gs
xor
leave
arpl
inc
jp
iret
paddsw
nop
jbe
outsb
sub
sahf
or
xchg
in
and
xor
sub
rcll
mov
xorl
stc
add
inc
lcall
negb
cmp
mov
dec
in
or
addl
lret
das
jb
in
pop
fistl
testb
mov
xchg
push
fiadds
mov
sarl
xor
loopne
or
cmp
jge
add
fcomps
mov
mov
icebp
add
sub
jg
sbb
mov
shrl
out
or
fsubrl
test
nop
pusha
add
pop
or
inc
and
dec
daa
inc
push
adcb
xchg
jmp
das
add
mov
out
ret
or
shl
xchg
mov
push
sub
push
pusha
aas
sbb
cmp
test
sub
in
or
in
test
shrl
mov
loop
leave
imul
add
ret
jns
push
outsl
or
test
imul
jle
and
in
push
mov
lret
mov
rorb
insl
adc
mov
inc
mov
pop
cmpsb
push
cld
sbb
repnz
imul
das
or
adc
lock
int
shlb
insb
lret
jo
cwtl
inc
loopne
mov
push
and
add
push
pop
pop
fs
ret
or
or
add
push
imull
shlb
sbb
cmp
cmpsb
out
test
sahf
sbb
xor
daa
mov
mov
add
scas
js
cs
dec
inc
roll
push
add
jmp
adc
mov
xchg
faddl
mov
push
mov
aam
insb
fwait
mov
movsb
sbb
cwtl
dec
cmp
cmp
in
mov
push
adc
clc
icebp
and
mov
idiv
lretw
xor
ja
push
jmp
mov
lods
jge
inc
mov
jbe
out
dec
outsl
imul
mov
in
mov
pop
imul
call
stos
aad
or
jecxz
ds
clc
add
jge
mov
xchg
bound
test
jae
les
and
cmp
loopne
or
into
dec
jmp
scas
jnp
jle
cmc
mov
add
cmp
mov
mov
aaa
notb
cwtl
sub
mov
sub
call
mov
inc
outsb
pop
stos
push
ljmp
and
and
jno
adc
or
or
pop
ret
popf
ret
and
mov
in
stos
adc
js
mov
cltd
xchg
jbe
mov
xchg
test
mov
iret
sahf
cmp
xor
imul
add
fs
mov
ds
cmp
adcl
pop
jb
lahf
repz
in
outsb
fcmove
push
dec
add
fidivrs
fidivrs
inc
cld
cmp
sub
out
jnp
ficompl
loope
int3
stc
mov
imul
mov
xor
out
dec
mov
mov
aam
cld
push
fld
sub
movsb
push
sbb
nop
in
push
aad
iret
lcall
jb
repz
inc
test
jecxz
stos
popf
sub
daa
aam
xor
or
lds
and
lcall
clc
and
cs
pop
xlat
rcr
mov
fldl
mov
iret
push
nop
mov
icebp
pop
cmp
cmpsb
inc
lcall
and
and
or
mov
add
xchg
leave
lods
push
cs
fsts
std
gs
inc
in
leave
lret
test
popa
sub
cmpsb
lods
jg
adc
cmp
lcall
push
aaa
sbb
xchg
das
insb
mov
pop
popf
mov
adc
shl
gs
bound
arpl
jo
fwait
mov
ret
int
pop
je
aam
and
push
rol
push
xchg
sbb
in
data16
fmuls
arpl
enter
addl
lret
inc
mov
lods
push
jle
icebp
mov
sub
enter
movsb
mov
out
scas
cmp
xchg
imul
mov
movsl
ja
jb
xchg
hlt
push
lcall
cmc
xchg
xchg
out
jg
add
rclb
icebp
repz
enter
movsl
xchg
loop
shrb
jmp
push
sbb
es
cmpsl
push
pop
inc
or
jne,pt
ret
sbb
jg
and
push
xchg
or
mov
lods
shrb
sbbb
inc
adc
or
lea
lahf
das
pop
imul
test
sbb
or
jp
mov
cmp
and
aam
adc
jno
add
int
xchg
call
xor
cmp
dec
push
shlb
mov
mov
add
pop
xor
aam
movb
inc
leave
xor
mov
mov
pusha
cs
pop
pop
xor
cltd
inc
cmp
mov
xor
xor
fldcw
push
ds
or
or
mov
xor
dec
dec
inc
cmp
in
shl
sbb
insl
aaa
dec
imul
imul
jbe,pt
push
mov
pop
sbb
sub
sub
sbb
jno
add
inc
pop
imul
loop
sbb
ffree
int
test
mov
cwtl
pop
or
add
divb
call
shlb
pop
mov
cmp
inc
mov
lds
pop
add
jne
dec
and
vcvttps2dq
xlat
outsb
adc
inc
pop
xor
or
stc
xchg
pushl
sbbl
pushf
push
push
push
dec
add
push
cmpsl
push
mov
pusha
dec
call
das
mov
or
loopne
cltd
add
xchg
scas
xchg
xrelease
aaa
pop
lods
dec
push
push
das
jae
adc
jmp
xchg
popa
rcr
shl
and
jb
adc
sbb
dec
mov
push
es
test
push
xlat
sub
sahf
jns
call
insl
sbb
js
movsl
xchg
pop
das
mov
in
out
xor
data16
dec
push
aaa
divl
lcall
jecxz
movl
cmpsl
push
mov
aaa
inc
mov
mov
push
and
negl
mov
imul
mov
sub
pop
fmuls
clc
insb
call
mov
pop
int3
dec
cld
js
push
cmp
sub
pop
fmuls
clc
insb
call
mov
pop
int3
dec
cld
js
push
cmp
sub
pop
fmuls
stc
insb
call
mov
pop
enter
cwtl
cmp
pop
fmuls
js
pop
arpl
jae
push
cmp
add
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
into
mov
cmpsb
jle
outsb
xchg
dec
fimuls
out
push
lahf
ja
scas
inc
scas
inc
pop
mov
cmpsb
jg
outsb
xchg
testb
ds
mov
lahf
pop
out
push
sahf
adc
inc
pop
mov
cmpsb
jle
outsb
xchg
testb
ds
cs
fidivs
into
add
std
xor
cmp
cli
dec
xor
jecxz,pt
dec
cs
aad
ret
pop
mov
dec
mov
adc
test
ret
mov
cld
das
or
out
imul
fldenv
data16
mov
push
pop
cmovno
mov
pop
add
test
adc
and
jmp
cltd
cmp
pop
addl
cs
lret
call
push
cmpl
xchg
jbe
pop
sub
jge
or
xchg
mov
mov
push
int
out
cmp
push
cmpsb
cmpsb
out
dec
mov
sub
mov
mov
call
and
mov
scas
mov
jle
outsb
xchg
testb
ds
cs
fidivs
into
es
push
out
push
sahf
jbe
mov
add
mov
fists
xlat
and
pop
mov
xchg
jns
dec
mov
inc
jl
xchg
inc
mov
add
and
and
and
fimull
in
mov
mov
mov
push
xchg
push
aad
std
lock
xor
cmc
sbb
les
out
cs
fidivs
into
es
push
out
push
sahf
jbe
mov
inc
pop
mov
cmpsb
jle
outsb
xchg
testb
ds
cs
fidivs
into
es
push
out
push
sahf
jbe
mov
inc
pop
mov
mov
stc
cmp
insl
add
and
es
cmp
mov
lahf
adc
or
mov
and
and
mov
push
lea
mov
int
xchg
bound
call
or
jge
idivb
mov
mov
movsb
sbb
cmp
adc
aam
arpl
xor
push
pop
test
push
add
dec
insb
dec
or
push
repnz
in
and
addr16
mov
inc
test
fwait
pcmpgtd
in
dec
xor
push
pop
adc
das
cs
scas
push
inc
pusha
sbb
out
sub
scas
jo
pushf
test
dec
clc
popf
pop
add
push
cmp
cld
push
cwtl
jne
jno
movsb
pop
pop
in
inc
xor
cltd
idiv
cmp
adc
aaa
test
lret
add
add
test
cld
aam
sbb
mov
insb
dec
and
push
fsubs
jmp
add
shrl
xchg
imul
sub
cltd
test
adc
cwtl
mov
loop
out
cltd
cmp
pop
sub
lds
mov
mov
aam
sbb
in
xor
test
pop
lcall
add
testb
rorb
dec
repnz
xchg
shrl
ret
dec
inc
stc
sub
xchg
fadds
pop
jg
xchg
test
sbb
xchg
cmp
mov
and
xchg
lock
pop
xchg
jbe
adc
scas
add
out
test
sti
sbb
push
and
lods
call
adc
sub
push
call
sub
pop
nop
enter
das
push
fsts
lds
rcr
idiv
adc
and
push
clc
repz
aam
in
cmp
loopne
in
sbb
ss
sarl
les
mov
stc
push
testl
imul
xlat
aaa
into
add
push
push
inc
adc
dec
ret
and
es
cmp
or
daa
dec
push
push
xchg
icebp
mov
mov
mov
cltd
jg
cmpsb
sti
out
in
stc
xorb
lcall
mov
jne
cmp
jle
pop
ret
xorb
gs
test
mov
mov
pop
js
scas
dec
xchg
or
dec
mov
insb
mov
push
xchg
cli
sti
jle
out
sar
clc
push
mov
mov
mov
mov
popa
xchg
mov
mov
addr16
icebp
jecxz
pop
lods
out
pop
fsubrs
aas
fs
cmpb
cltd
mov
sahf
sub
and
mov
int
mov
mov
and
mov
inc
ss
inc
sub
mov
icebp
je
add
cmp
sbb
mov
decl
ret
mov
jle
mov
lahf
push
and
out
divps
js
cmp
xchg
or
lahf
xchg
or
push
jmp
add
dec
adc
test
ljmp
movsl
mov
sbb
xor
mov
push
inc
and
mov
sbb
arpl
inc
or
add
lret
sub
xor
dec
and
aad
ret
cmpsb
test
push
xor
lods
fucomip
shll
pop
aam
xchg
pop
sbb
jnp
mov
nop
faddl
popa
mov
xchg
arpl
sbb
xor
add
sub
mov
stos
push
outsb
das
push
jg
dec
mov
add
sti
jno
inc
jg
jge
cmp
scas
sub
sub
sbb
repz
sub
loop
fcos
cmp
mov
inc
mov
sub
data16
mov
mov
loope
jmp
insl
shrb
jae
or
lcall
sahf
jne
fistpll
out
inc
pop
cld
les
stos
pop
sbb
xor
push
test
and
lahf
idivl
cld
jl
and
sbb
sub
jne
ja
mov
test
int
and
cld
popf
lods
xor
jmp
std
outsl
xchg
into
test
in
adc
in
aad
mov
orl
ljmp
pop
add
movl
out
jo
sbb
fs
pop
fildl
mov
cmp
and
cltd
cmc
hlt
stos
or
dec
adc
mov
sbb
stos
cmpsb
fmuls
nop
adc
out
dec
stc
mov
in
or
mov
movsl
repz
je
ja
jns
push
dec
shlb
jae
out
mov
test
int
insb
mov
or
pop
ret
lea
mov
inc
fwait
movsb
inc
jb
addr16
add
sbb
gs
out
int3
and
out
pop
inc
inc
inc
jp,pn
xor
sub
xchg
or
mov
fldenv
cli
or
xchg
jge
arpl
xchg
mov
daa
mov
pop
and
or
sbb
jmp
pop
adc
xor
inc
fiadds
scas
testb
sbb
jbe
cmpsl
in
ret
add
xchg
lahf
push
push
sti
repnz
fisttps
push
rcrb
movsb
andb
pop
les
jb
push
je
pop
stos
xchg
ficomps
lcall
add
or
adc
das
and
mov
rcrl
movsl
das
or
add
jb
out
lods
imul
cmp
xchg
sti
adc
roll
or
cmpl
out
and
xor
das
mov
jle
adc
mov
bound
in
fs
rcrl
iret
movsb
xchg
pop
cmpsb
sbb
mov
shll
test
adc
int
inc
jmp
fs
lds
cltd
adc
jge
or
xor
pop
jge
dec
sub
adc
dec
test
add
xlat
add
mov
call
mov
sub
lcall
pop
stos
mov
jmp
fsubrl
sub
sub
lahf
rcrb
inc
sub
pop
test
sub
jns
push
pop
pop
addb
aas
cmpsl
adcl
mov
mov
sub
into
lret
inc
out
rorb
popf
cmp
pop
or
movsl
stos
adc
outsl
movl
test
test
int
cltd
xchg
add
leave
stc
aad
leave
xor
or
jle
and
jne
arpl
cmc
sub
mov
bound
sbb
loopne
xchg
repnz
sub
dec
stos
add
mov
add
sub
sbb
fbstp
hlt
outsl
push
or
orl
enter
aaa
and
fnstsw
xor
hlt
xchg
loop
lahf
repz
push
fcomi
in
ret
mov
pop
mov
subb
popa
xor
bound
add
mov
push
int
cmc
addr16
lea
nop
into
push
test
jp
xor
sarl
sbbl
rcrl
sub
sahf
cmp
jne
pop
pushf
in
push
cmpsb
mov
sub
add
pushf
lds
shlb
clc
xchg
sti
jbe
je
lcall
loopne
or
dec
mov
xchg
fidivrs
out
or
inc
push
mov
shl
popa
out
in
stos
pop
lods
loop
mov
andb
and
ds
shlb
and
xor
inc
push
cmp
nop
cmp
fldt
aad
and
gs
data16
mov
jae
pop
add
in
dec
subb
jno
ret
dec
lods
jl
mov
lcall
cmpsl
mov
or
cmpsl
cmp
fwait
mov
jne
jl
cltd
movsl
dec
inc
lock
mov
xor
sub
add
jl
mov
testb
xor
in
test
jo
mov
sub
lea
and
push
movsb
and
sarb
mov
leave
aam
js
icebp
in
fst
jnp
adc
in
aam
testl
icebp
aam
mov
clc
xchg
imul
int
add
and
leave
ficomps
sub
cmp
jmp
and
sub
mulb
mov
divps
in
and
arpl
jmp
push
or
ficoml
lods
lods
sbb
inc
push
xchg
adc
mov
xchg
jp
jnp
orb
mov
or
push
xor
dec
jb
jecxz
cli
test
outsb
xchg
sbb
jge
sub
add
sub
inc
int3
jg
mov
jae
and
out
mov
cli
mov
scas
stos
fs
repnz
adc
sub
ficoms
xor
arpl
stos
jmp
jl
pop
sbb
mov
jae
cli
stos
int
andb
add
ret
and
mov
pop
mov
xchg
push
or
pop
ljmp
js
adc
xor
sarw
in
lds
mov
xchg
cs
mov
cmpl
insl
dec
pop
and
add
or
inc
mov
stos
pop
cld
sub
incb
repnz
cmp
inc
xchg
jo
xchg
adc
ret
add
das
test
sbb
jmp
xor
xor
jne
popf
and
sbb
jle
jo
push
sub
outsl
cmp
daa
jns
rcll
shll
push
jmp
pop
mov
mov
pop
xchg
iret
and
and
mov
mov
arpl
pop
ss
repnz
add
test
cmc
mov
dec
cmp
daa
jp
jns
mov
repnz
and
lock
xor
ficompl
mov
ja
push
hlt
sub
ror
jno
or
xor
jecxz
jbe
jmp
sbb
dec
cmp
notl
enter
clc
out
cmp
test
jno
in
sub
aaa
xor
lods
cmp
and
add
in
pop
dec
in
dec
cmc
loope
and
sbb
cmp
cmp
jb
shll
sbb
cltd
xchg
outsb
sub
call
iret
jo
loope
sbb
outsl
lock
add
ljmp
stos
fisubrl
les
std
or
orl
scas
mov
push
pop
popa
mov
repnz
xchg
dec
mov
loop
insb
mov
cmp
lret
pop
and
push
out
les
sbb
jl
jle
rcrl
fstpl
insl
cmp
and
mov
push
gs
fdivrl
sub
push
into
lret
inc
faddl
rolb
push
loopne
cmc
and
mov
shr
or
sbb
lcall
icebp
fstpl
insl
into
fcomp
fdivr
push
fnstenv
shrl
adc
repz
xorl
jl
clc
sbbl
mov
popa
in
jecxz
pop
inc
cmp
mov
orb
imul
dec
push
insb
aaa
push
outsb
fadd
and
mov
jae
add
dec
popf
sbb
push
ss
sub
imul
xor
push
pop
ds
xor
fucom
faddl
sbb
cmp
push
outsl
call
xchg
adc
mov
pop
sbb
aad
lret
loope
adc
and
mov
add
xchg
xchg
sub
or
scas
fidivrl
dec
rolb
pop
pop
loope
xor
pop
mov
or
xchg
add
adc
xor
xlat
enter
test
ljmp
loopne
xchg
out
push
popf
subl
or
lcall
mov
int
pop
jb
int
mov
jno
movsb
cltd
mov
lahf
test
xchg
lea
aam
cld
cmp
add
je
aas
push
xchg
je
les
in
sbb
inc
mov
lcall
movsl
or
arpl
or
fnsave
sbb
in
sti
pop
rolb
cmp
lea
adc
decb
je
js
stos
mov
xchg
dec
nop
imull
cmp
imul
stos
xchg
jge
lods
dec
stc
inc
popa
jae
jp
push
pop
sbb
je
or
sub
lret
xor
and
sarb
sub
jb
sarl
in
outsb
insb
cmp
fnstcw
adc
cli
in
sub
andb
ficomps
xor
ljmp
notl
test
pop
add
push
add
pop
callw
mov
in
jns
and
lds
push
mov
jg
in
lahf
and
scas
xchg
push
mov
aaa
cs
dec
lret
adc
xchg
and
mov
adcb
mov
ja
add
xor
add
arpl
lock
je
out
adc
pop
push
xor
fcmove
adc
js
push
jbe
push
push
cli
imul
shlb
xchg
aam
stc
xlat
mov
xchg
aam
cmp
jge
movsb
aad
pop
cli
mov
out
lret
xchg
xorl
inc
inc
pushf
ds
ret
in
inc
fcmovnbe
imul
imul
das
outsl
xchg
pop
pushf
aas
insb
mov
mov
mov
clc
addr16
fs
mov
xchg
cmp
ds
pop
repz
fidivrs
xor
dec
and
dec
aam
sub
jo
test
xchg
mov
mov
jno
mov
stos
insb
scas
scas
cmp
fstpl
add
cltd
enter
jae
xchg
mov
lahf
push
sbb
popf
pop
outsb
xorl
jle
jnp
add
lahf
loopne
in
addr16
mov
xchg
lret
pop
ror
lcall
mov
push
ja
pop
xchg
cmp
mov
cmpl
xchg
pop
and
hlt
push
cld
adc
call
pop
cmpsl
addr16
jbe
das
pop
test
popa
sub
push
les
sbb
cmp
mov
cmp
push
fidivrl
or
adc
mov
adc
pop
rcll
mov
fisttpll
cwtl
das
dec
mov
xchg
cwtl
rol
cltd
pop
out
sahf
pop
pop
stos
cmp
rorb
out
sub
push
repz
stos
adc
xor
jbe
xor
mov
ret
call
pop
sbb
pop
push
lahf
jge
or
push
imul
lcall
movsl
xor
es
pop
xlat
cmp
lock
orl
lods
inc
lods
and
xchg
mov
push
sbb
jge
loopne
dec
mov
jle
sbb
mov
aas
iret
cmpb
cld
cmpsl
adc
jae
mov
cltd
addr16
push
mov
scas
and
mov
push
outsl
mov
cmpsb
adc
push
fiadds
jae
stos
pusha
cli
ss
inc
in
rcl
or
in
xchg
mov
dec
loope
xchg
bound
inc
pop
or
out
dec
loopne
mov
or
fwait
mov
loopne
pop
movsl
mov
push
aam
mov
loope
lea
in
pusha
outsb
insl
pop
pop
inc
bound
mov
jmp
cmp
mov
jne
test
in
outsl
pop
pop
fs
fs
popa
sbb
loopne
test
std
popa
mov
sti
bound
sbb
fwait
shlb
pop
and
adc
dec
xchg
lcall
add
sbb
pop
pusha
cmp
data16
jno
xchg
in
imul
push
jg
xor
frndint
mov
xchg
stos
jns
xor
hlt
out
clc
jo
jle
das
sbb
dec
jl
cwtl
mov
and
outsb
sbb
mov
les
in
mov
outsb
dec
outsb
mov
adc
shlb
mov
data16
out
aad
xchg
lret
scas
lea
sub
cli
hlt
adc
in
dec
dec
adc
test
or
add
mov
jbe
push
or
icebp
adc
and
push
lods
sbb
aas
sti
inc
jmp
aad
mov
xlat
rorb
scas
pop
and
push
mulb
mov
int3
and
xchg
decb
mov
scas
xor
xor
scas
jle
jmp
xchg
iret
rcrb
ret
cmpl
ljmp
inc
sahf
mov
call
mov
sub
or
fnsave
sub
sub
or
scas
iret
mov
xor
xchg
pop
movsb
sub
jae
sarb
xchg
pop
inc
push
cld
inc
xchg
loop
inc
cmp
push
gs
cld
ljmp
mov
fcomps
dec
shrl
pop
test
fwait
pop
jns
lea
outsb
in
inc
ja
jno
cld
test
push
dec
push
mov
out
notl
pop
pushf
mov
push
inc
insl
int
dec
mov
add
cmp
decb
shrl
xchg
out
mov
punpckhdq
cmpl
xchg
mov
inc
js
mov
add
cmp
lret
fnstcw
adc
jns
scas
add
adc
mov
cmp
mov
stos
int3
cmp
cld
xlat
mov
dec
mov
lock
jp
lock
std
shr
in
sbb
in
movsb
or
pop
jns
imull
aas
lret
push
cmpsl
mov
sti
test
and
mov
shlb
xorb
pop
aad
test
xor
cli
jnp
je
sub
ret
pop
out
aad
insb
repnz
or
fwait
lock
stos
pusha
stc
pop
mov
push
add
and
lock
gs
push
scas
push
cmp
xor
or
fistps
cwtl
ret
lret
inc
mov
popa
dec
lcall
lea
int
aam
jne
cmp
push
pop
and
push
scas
push
insb
ror
push
fwait
es
ss
loope
ss
cmp
cmp
push
and
imul
adc
pop
xor
ljmp
mov
mov
dec
lret
les
leave
pop
ret
pop
dec
cmp
stc
mov
stos
ja
xchg
pop
or
pusha
and
or
mov
mov
imul
lds
mov
out
int3
sub
pop
pop
xor
push
sbb
mov
ja
pop
loope
adc
loop
insb
lock
cltd
jnp
vmread
stos
sbb
cmp
sbb
cltd
pop
pop
sarl
mov
pop
xchg
imul
fisubl
das
push
dec
dec
in
loope
adc
xchg
aas
mov
ret
mov
cmpsb
mov
aaa
shlb
pop
insb
xchg
fstpl
hlt
or
clc
js
mov
loopne
pushf
shll
jns
cmpsb
add
xor
mov
mov
xor
in
xchg
push
jg
out
cli
cs
ret
mov
negl
inc
mov
loope
outsb
dec
xchg
mov
xchg
xlat
xor
inc
pushf
in
cli
mov
addr16
mov
xor
insl
or
test
decl
ret
enter
lret
jb
xor
cmpsb
icebp
movsb
pop
arpl
pop
and
mov
and
movsl
mov
in
push
out
lret
insb
movsl
pushf
aas
cli
sarb
leave
xchg
dec
mov
mov
je
pop
push
je
in
sti
popf
rcl
out
mov
aaa
push
loop
add
scas
pop
int3
mov
popf
in
pop
cmp
sub
push
xchg
ret
sbb
push
das
cwtl
pop
jne
rol
decl
fimull
cmpsl
hlt
pop
push
fdivr
pop
cltd
sub
inc
jle
cmp
xorb
ds
xor
cwtl
sbb
or
xor
mov
popl
mov
adc
xchg
cmpsl
daa
gs
fnstsw
mov
pop
cmp
sub
xchg
jge
repz
iret
mov
xchg
mov
add
jp
subb
pop
push
sub
sub
sub
sub
addr16
test
sub
push
lea
add
addb
clc
mov
pop
adc
cmpsl
ljmp
movsb
fmul
stc
mov
out
mov
in
push
mov
jge
arpl
gs
shll
cmp
decb
dec
fstpt
scas
std
idivl
in
sub
aas
and
insl
cmpsl
mov
xchg
loope
jae
in
int3
or
sti
hlt
or
call
dec
lret
cmc
sbb
add
jmp
in
sbb
mov
mov
pop
outsl
rol
push
or
inc
mov
loop
mov
xchg
jp
out
jg
aas
les
sub
cs
jbe
dec
mov
sub
mov
xchg
inc
xor
pop
ljmp
fldcw
leave
das
cmovno
xor
cs
test
js
inc
mov
loopne
xor
pop
andb
pop
xchg
jno
dec
xlat
test
sub
push
and
mov
lods
sbb
pop
sbb
xchg
mov
inc
push
cmp
sub
or
sar
xor
push
into
aad
test
xchg
movsl
xchg
sahf
mov
xor
sbb
and
xchg
push
sti
lea
ja
cmp
dec
fistpll
jl
xor
aaa
jb
mov
repnz
into
dec
mov
dec
sarb
mov
outsb
xchg
testb
ds
cs
fidivs
into
es
push
out
push
sahf
jbe
mov
inc
pop
mov
cmpsb
jle
outsb
xchg
testb
ds
cs
fidivs
into
es
push
out
push
sahf
jbe
mov
inc
pop
mov
cmpsb
jle
outsb
xchg
testb
ds
cs
fidivs
into
es
push
out
push
sahf
jbe
mov
inc
pop
mov
cmpsb
jg
outsb
xchg
testb
ds
cs
fidivs
into
mov
jno
incb
cltd
inc
test
daa
ficoml
ljmp
and
dec
mov
xchg
jle
push
or
xchg
xlat
sub
cmp
lret
pop
ljmp
push
stos
inc
into
mov
cmpsl
pop
xchg
push
jp
js
sbb
sub
cmp
shll
ret
pop
repnz
loop
xchg
adcb
mov
out
loop
testl
push
inc
xchg
pop
outsb
popf
js
xor
dec
int3
push
jg
mov
popf
outsb
cmpb
insb
xchg
aas
aad
inc
fcmovne
fcoms
jecxz
stos
ja
imul
movsb
imul
out
sbb
dec
mov
and
mov
popf
cltd
sbb
or
pop
xchg
add
push
sub
jg
xchg
add
pop
mov
aas
inc
stos
sub
ss
das
aad
sub
and
mov
out
stos
mov
scas
movsl
sbb
or
jns
mov
sub
add
aas
rep
push
ljmp
in
test
and
hlt
frstor
lret
pop
cli
ja
addr16
cmpsl
inc
xchg
jae
arpl
adc
add
xor
cmp
inc
test
popl
adc
ret
ffreep
and
ret
outsl
cmpsb
sbb
mov
inc
xchg
adc
add
ljmp
sbb
lret
push
mov
xor
inc
mov
xchg
push
jp
or
sbb
sub
cmp
lret
pop
ljmp
push
stos
inc
mov
xchg
push
jp
or
sbb
sub
cmp
lret
mov
clc
cmpsl
add
movsl
add
je
test
ljmp
addr16
data16
sub
subb
pop
sub
ss
cs
cmp
xchg
push
or
pop
xor
mov
add
cli
push
push
imul
clc
outsl
test
add
cmpsl
sub
movsb
insl
add
mov
or
mov
mov
or
and
pop
adc
mov
jmp
jl
jecxz
xchg
inc
cltd
stos
push
sbb
stc
popa
xchg
jl
loopne
sbb
jle
fbld
daa
lods
jbe
daa
pop
cmc
pop
add
mov
ret
insl
je
mov
stc
mov
mov
rolb
push
popa
outsb
jecxz
vpternlogq
push
pop
cmp
insl
clc
movsb
sub
push
and
stos
fcmovbe
mov
aas
shlb
call
cmp
inc
cwtl
pop
inc
dec
jno
sbb
xchg
pop
mov
cmc
fldcw
ja
mov
pop
mov
aas
sbb
or
out
test
pop
outsl
inc
push
mov
xor
aad
xor
jg
call
pop
icebp
cmpsl
pusha
mov
and
sub
fisubrl
cmp
push
dec
pop
bnd
mov
enter
insl
into
data16
lcall
mov
push
mov
into
push
insl
or
xchg
fs
or
mov
js
mov
mov
mov
sub
xor
and
movsb
mov
pop
dec
pop
xchg
mov
out
cmp
lcall
les
or
orb
dec
cmp
ja
popf
mov
mov
sub
mov
rcll
xchg
adcl
pop
push
icebp
icebp
call
fwait
stos
adc
dec
fiadds
ret
sub
sbb
pop
mov
or
stos
mov
mov
xchg
inc
xor
mov
sub
pop
cmp
pop
mov
ret
hlt
das
cmp
sub
adc
pusha
stos
mov
dec
dec
pop
sarl
push
push
push
sub
sbbb
ja
xor
xor
cmp
dec
pop
insb
cmp
inc
fisubrl
pop
popl
mov
mov
inc
je
cmpsb
mov
xor
mov
mov
sbb
lock
pop
cmpsl
imul
mov
movsb
xchg
dec
sub
inc
in
je
shll
xor
push
add
fsts
pushf
iret
loopne
int
lret
jmp
imul
sbb
out
ret
cmp
pushf
out
pop
dec
sbb
movsb
rcr
mov
inc
adc
adc
push
cmp
lret
bound
inc
jo
in
inc
or
adc
lods
rcr
outsl
pop
out
or
fldt
dec
or
mov
or
das
push
or
repz
and
push
adc
enter
andl
mov
mov
jnp,pt
sub
and
outsb
ja
jb
mov
mov
or
aam
push
jae
xorl
pushl
sub
loope
loop
mov
cld
sub
enter
cltd
div
dec
into
popa
mov
dec
test
cmp
jo
fstl
popf
inc
inc
inc
mov
cmpsb
dec
inc
das
scas
pop
cltd
xorl
out
cmp
add
push
push
outsl
xchg
outsl
inc
sbbl
mov
push
dec
inc
mov
into
into
js
sbb
out
stc
ja
pop
add
mov
xchg
fs
mov
sbb
rolb
loopne
aam
int3
jg
xor
ss
adc
ret
loopne
in
scas
mov
in
sbb
daa
add
push
jl
arpl
mov
orl
cmp
or
jp
mov
fstpt
lahf
xchg
and
cmpsb
dec
mov
addr16
dec
cmp
push
loopne
jp
pop
or
mov
les
mov
test
movsl
push
inc
and
call
fwait
inc
lods
jp
or
xor
jg
xchg
lock
push
icebp
or
lea
push
clc
cli
lcall
xlat
addr16
push
mov
push
jmp
dec
les
mov
sbb
fdivrp
out
dec
jp
lods
cs
int
es
dec
loope
mov
inc
pop
lods
push
jo
and
dec
xor
std
sti
popl
cmp
movsl
repz
and
pusha
cmp
shll
bound
mov
mov
test
ret
sub
int
data16
cmc
jecxz
mov
sub
add
scas
lcall
mulb
insb
notl
fmull
scas
lea
pushf
push
and
mov
aam
jns
int3
nop
mov
dec
mov
imul
dec
sbbb
mov
fs
bound
lods
mov
or
lcall
arpl
and
or
ja
pop
xchg
xchg
add
subb
jmp
dec
loope
dec
repnz
jp
xor
push
xchg
pop
inc
inc
ljmp
loop
inc
push
add
insb
mov
cld
outsb
stos
cmpl
inc
pop
test
cmp
adc
movsl
data16
add
adc
mov
bnd
mov
jne
lahf
rcrb
mov
or
pop
adc
pop
add
and
sub
sbb
imul
mov
mov
sub
clc
push
cmp
push
dec
ljmp
inc
aas
int3
lcall
and
push
push
pop
add
movsl
daa
flds
cwtl
loop
push
mov
sbb
in
cli
fs
mov
cwtl
jle
sub
repnz
mov
stos
fpatan
or
push
dec
fldenv
dec
jbe
and
xchg
loopne
mov
mov
jmp
inc
push
sub
add
add
cmpb
mov
sub
jbe
bt
and
shll
mov
enter
test
sub
xor
aaa
lret
inc
inc
push
roll
sbb
pusha
mov
jb
push
dec
xorl
jnp
add
lods
repz
add
cmp
dec
aaa
mov
fwait
mov
shlb
cmp
ja
add
in
iret
iret
add
out
or
or
sub
insb
test
pop
dec
sbb
ret
in
mov
cmpsb
add
xchg
push
xchg
mov
sbb
adc
popf
outsb
add
sub
iret
jl
shlb
dec
data16
xor
mov
test
sub
mov
aad
fdivp
loop
bound
repnz
out
sub
inc
fdivrs
dec
jbe
adc
test
mov
aam
sub
outsl
cld
xor
cmp
je
mov
imul
pop
notb
push
cmp
popa
fdivl
pop
scas
stc
mov
fcom
push
xor
ss
mov
push
push
xor
rcll
arpl
add
push
pop
and
test
in
or
test
mov
jnp
dec
cltd
test
sub
mov
addr16
mov
jnp
mov
xlat
movsb
es
aam
inc
jns
gs
outsb
enter
testl
lds
aas
lret
test
jne
mov
sbb
add
mov
mov
dec
dec
xchg
pop
lfs
dec
fstl
push
pushf
adc
mov
jg
dec
adc
jnp
xchg
sarl
xchg
jmp
jl
and
aam
test
je
jb
mov
mov
xchg
popl
mov
push
pop
mov
fnstcw
mov
or
iret
rorl
jge
jae
in
sbbb
inc
test
jne
faddl
dec
sub
test
int
push
pushf
jne
mov
lret
scas
pop
int
bnd
pop
jle
lcall
and
popf
imul
test
lret
mov
sbb
rclb
std
in
xor
jecxz
ja
jno
repnz
xchg
add
or
rol
add
pop
mov
sbb
jns
sbb
inc
pop
push
ds
cld
xlat
shr
cs
inc
cmpl
fcos
popl
shrb
xchg
jo
test
ficoms
nop
jns
cmc
mov
cld
call
mov
add
dec
test
loope
pop
mov
dec
or
inc
cmp
in
push
scas
repz
dec
push
addb
ficoml
sub
xor
and
frstor
pushf
fimuls
dec
sbb
test
add
vmread
sbb
cld
xchg
scas
sbb
xchg
out
int
inc
xchg
orb
mov
push
rclb
adc
fmuls
jns
mov
movsb
mov
sarb
rcrb
cmp
das
or
hlt
or
movsl
call
orl
mov
jb
xor
sbb
in
out
mov
sti
loop
cmp
in
pop
mov
add
lods
ret
into
cmp
inc
and
cmc
ljmp
add
cmpsl
jbe
movsl
bound
lods
cs
dec
mov
ja
idivb
lds
imul
dec
mov
xchg
ljmp
out
pop
gs
dec
push
xchg
xchg
mov
pop
pushl
pop
sub
mov
or
pop
xorl
filds
arpl
sub
add
out
cs
jb
fwait
cmp
enter
xchg
shl
and
addr16
add
lcall
mov
or
cmp
pop
test
pop
outsb
orb
mov
xor
sbb
icebp
pop
test
in
shl
adc
dec
and
negl
popa
je
push
mov
mov
bnd
or
fidivl
idivl
or
cltd
seto
sbb
dec
arpl
cli
xor
adc
cltd
nop
fs
cli
lret
sti
lret
inc
aad
inc
lcall
fmull
push
xor
dec
mov
stos
es
mov
inc
lds
js
jl
mov
cmove
push
outsb
dec
mov
enter
add
push
and
and
jle
push
adc
jl
or
scas
enter
in
push
mov
cmc
add
adc
in
outsl
cmc
insb
xchg
stos
jae
ret
shr
insl
mov
movsb
cmpb
ret
punpckhwd
jmp
int
mov
push
xchg
jo
bnd
jne
fsubl
mov
nop
mov
das
xchg
arpl
push
dec
ja
pop
lret
push
sbb
scas
adc
mov
fisttps
test
sti
int3
outsl
jmp
scas
or
mov
push
mov
lea
push
push
mov
xchg
stos
lcall
dec
rcr
dec
inc
ljmp
fmull
inc
cmp
push
fildll
in
and
push
enter
test
mov
lahf
insl
dec
out
pop
pop
aas
out
jmp
inc
adc
adc
pop
adc
push
or
push
out
sub
in
roll
aas
sbbb
int3
mov
mov
or
xchg
rcrb
and
iret
js
out
push
xchg
push
mov
inc
or
sbb
adc
je
movl
hlt
es
inc
arpl
xorb
test
dec
jbe
jp
sbb
cmp
jbe
mov
fs
dec
inc
push
cmpsl
mov
mov
in
iret
add
adc
lcall
adc
test
mov
fisubrs
mov
jmp
xor
add
dec
jbe
push
iret
fst
dec
and
sbb
adc
adc
mov
ljmp
clc
push
ss
ret
fcoml
xchg
insl
mov
loope
fcomps
add
aad
xchg
sub
cmp
jge
addr16
push
movsb
xor
sti
and
cli
mov
xchg
notl
cmp
jle
jo
aam
mov
add
xchg
mov
pop
arpl
out
mov
jae
xchg
stc
lds
push
mov
and
cmp
mov
cmpsb
push
out
fisubs
mov
xor
test
call
jbe
or
fidivrl
hlt
or
arpl
stos
rclb
outsb
pusha
clc
add
sub
sub
lahf
jne
in
adc
arpl
pop
inc
mov
ljmp
stos
sub
aad
and
imul
les
and
or
lcall
in
jmp
pop
mov
lods
jbe
mov
movsbl
test
pusha
push
out
aaa
jecxz
stos
dec
decb
clc
or
lock
xchg
insl
aas
xchg
mov
dec
je
pop
stos
mov
addb
or
test
inc
inc
and
rcrl
jne
pop
xor
xor
mov
fwait
dec
fs
rcr
adc
aad
testl
inc
cmpb
sahf
and
sbb
sahf
lea
test
add
xchg
mov
rcrl
inc
push
push
mov
lock
int3
add
jmp
leave
add
dec
in
inc
outsl
pop
dec
lods
jnp
adc
sbb
pop
scas
nop
mov
mov
push
sbb
rcl
lcall
cld
mov
mov
mov
repnz
fsubr
jle
lahf
test
loop
mov
iret
sahf
mov
shlb
movl
xabort
sbb
pop
sub
push
popa
fistl
dec
out
aas
push
inc
sub
rcrl
sub
fldt
mov
daa
lcall
mov
addb
daa
leave
mov
stos
outsl
jo
pushf
les
mov
stos
add
and
push
pusha
and
stos
push
inc
mov
lds
pop
in
clc
fbstp
es
or
push
sub
test
pop
sahf
mov
mov
mov
xlat
xchg
push
push
and
pop
push
repnz
sbb
xor
dec
cli
clc
push
xor
jp
outsl
into
rolb
lahf
sub
add
adc
cs
cmovno
testl
push
mov
mov
inc
mov
bound
rcrb
jge
sti
pop
int3
mov
mov
lret
sbb
mov
mov
adc
xlat
mov
and
aam
mov
mov
sbb
and
ss
jl
dec
and
sbb
mov
aam
cmp
mov
in
arpl
test
mov
dec
sub
cmp
jecxz
add
bound
insb
bound
jl
and
mov
mov
sub
imul
popf
pop
sub
out
or
daa
mov
loop
cmp
and
cmp
in
clc
sarb
sub
mov
pop
add
and
lock
cmp
push
cmp
mov
aas
dec
shr
mov
mov
pop
addr16
mov
jne
adc
call
fs
ret
aam
popa
pop
pop
lret
pop
mov
je
roll
hlt
gs
lcall
daa
test
ss
stos
jno
cmpsl
sub
std
jp
fcompl
cmp
xor
fildl
mov
pop
je
or
xchg
aam
xor
jg
inc
mov
sub
pop
push
je
inc
sub
add
je
and
movsb
shrb
in
and
arpl
pop
out
pop
daa
jb
pusha
stos
pop
xlat
sbb
addr16
cmp
cwtl
xchg
bound
xchg
jp
or
sahf
imul
imull
xchg
dec
aaa
push
fsubl
pop
dec
dec
sub
adc
ja
lret
push
push
out
enter
or
aas
in
xor
lcall
xchg
push
mov
jmp
pop
pop
stos
sbb
pop
push
lret
cmovns
sbb
shr
jl
push
jle
or
push
sbb
xchg
or
push
sbb
inc
lods
subb
ljmp
jp
inc
mov
lods
test
adc
lret
arpl
xor
inc
sbb
sbb
push
cli
mov
cmc
loope
test
mov
scas
push
pop
jmp
sahf
shrb
sub
push
cli
xchg
das
arpl
shrb
or
shr
jge
inc
pop
xchg
les
divl
jmp
jo
fnsave
dec
or
and
incb
enter
push
nop
inc
xchg
push
fsubrl
out
cmp
pop
xchg
mov
popa
inc
lahf
loop
jge
jp
decb
scas
xchg
dec
scas
cmp
dec
test
shl
jb
or
jg
scas
mov
adc
gs
leave
ja
jg
in
fmuls
pop
lods
jnp
jbe
jge
lret
lret
ss
sub
pop
mov
sub
out
int
fildll
insb
cld
pop
jno
sub
mov
add
rcrb
mov
pusha
mov
jns
loope
sbb
pop
mov
add
or
mov
push
in
mov
pop
repz
popl
nop
loope
cs
add
shrl
in
pop
mov
lret
daa
xor
jns
and
xor
pmullw
inc
popf
sub
cmp
adc
fldcw
test
xor
testb
shrl
add
pop
pop
repnz
dec
mov
mov
les
sti
ja
adc
push
loope
cmp
cmc
cmpsl
rcll
lds
cmp
jl
adc
jge
stc
jo
xchg
lods
mov
sbb
xor
mov
lods
lods
add
mov
push
pop
sub
pop
mov
out
fdivr
movsl
inc
mov
mov
mov
fidivl
imul
lock
subl
push
xchg
jecxz
out
jge
divb
lods
in
mov
push
imul
repnz
mov
jnp
mov
addr16
pop
out
rol
in
push
mov
pop
or
cmp
jne
push
cmp
dec
sarl
je
fadds
out
shl
out
xor
fstpt
lcall
clc
xchg
out
ret
push
inc
push
cs
mov
or
stc
or
scas
inc
xchg
push
insl
cli
dec
xchg
scas
xchg
and
mov
dec
add
bound
pop
cli
int3
push
lods
push
out
outsl
lahf
mov
jmp
mov
idivb
mov
push
adc
in
fwait
fwait
mov
sub
int
and
outsl
clc
cmpsl
incl
outsl
jmp
push
fildl
push
sbb
dec
sub
push
fdivrs
mov
addl
adc
mov
roll
lds
sub
cmp
xchg
in
cld
add
dec
mov
mulb
jecxz
inc
mov
arpl
dec
orb
sti
adc
decb
pop
cwtl
test
mov
mov
test
adc
hlt
jnp
mov
sbb
data16
lods
mov
pop
jmp
sub
push
outsl
mov
or
sahf
pop
or
pop
bnd
cmp
rcl
xor
xor
mov
loop
or
add
enter
dec
sbb
mov
sub
fdivs
add
pushf
rorb
lds
xor
ss
xchg
push
push
mov
clc
sahf
lea
dec
or
jne
and
out
xchg
mov
xchg
shlb
lock
cwtl
clc
jo
lahf
repnz
mov
into
xchg
and
add
pop
dec
movsb
jp
test
test
mov
enter
mov
jae
lods
dec
jo
pop
adc
lds
adc
movsl
pop
dec
adc
lods
jg
outsb
sub
cmp
sub
cmp
pop
mov
and
add
xor
data16
fdivrl
mov
xchg
movsb
push
inc
and
jl
stos
shrb
xchg
cld
xor
data16
xchg
fadd
mov
mov
cmpsb
loopne
jae
mov
mov
aam
pop
sahf
xchg
cwtl
xchg
out
xorl
add
mov
add
ficoms
add
mov
push
jle
enter
pusha
lds
and
outsb
fildll
pop
es
sbb
add
adc
in
scas
adc
mull
pop
mov
mov
jg
xchg
mov
loopne
inc
cmpsb
mov
push
daa
lods
aas
adc
sub
rclb
jne
loope
push
jecxz
jo
int3
sub
fs
lret
mov
push
and
daa
xor
xchg
push
pop
xchg
mov
add
dec
push
or
add
push
rcr
mov
fcomi
adc
movsb
lahf
insb
clc
movaps
jb
push
int3
or
in
leave
lock
and
push
jne
faddl
aam
cmp
mov
insl
hlt
or
sahf
xor
mov
pop
cli
ja
addr16
cmpsl
pop
xchg
push
jp
or
sbb
sub
cmp
lret
pop
ljmp
push
stos
inc
mov
xchg
push
jp
or
sbb
sub
cmp
lret
pop
ljmp
push
stos
inc
mov
xchg
push
jle
or
sbb
cs
ds
into
daa
ficoms
out
pop
cli
ja
addr16
pop
lock
subb
push
aas
inc
fsubs
call
arpl
jb
sub
js
imul
cmp
enter
call
or
pop
fisttps
js
push
pop
cmp
enter
call
adc
pop
ds
mov
sbb
jcxz
jmp
lods
xchg
and
or
mov
push
in
cmp
inc
icebp
stc
test
mov
inc
sub
nop
add
movsb
cmc
pop
xchg
addr16
mov
inc
mov
movsl
movsl
pop
int
xchg
xchg
in
out
or
outsl
mov
ror
and
or
pop
pop
sbb
js
test
dec
lea
pop
inc
sub
xchg
jge
pop
mov
gs
aad
int
xchg
dec
jb
aaa
sbb
lods
sbb
mov
cmp
sub
push
push
int
mov
testl
and
jge
cmpsb
pop
daa
jp
xor
fdivrl
std
dec
into
test
jge
test
adc
enter
call
or
pop
lds
js
push
lcall
mov
insb
cwtl
dec
cli
arpl
push
stos
inc
pop
mov
mov
test
sbbb
or
pop
mov
lods
dec
popf
or
int
rcrb
cmp
mov
sbb
data16
rcrl
mov
sbb
sbb
jno
or
pop
fisttpll
js
push
lea
mov
enter
call
or
pop
fisttpll
js
push
lea
mov
in
lret
jle
and
lds
dec
jns
jnp
push
loope
out
movsb
call
lret
jecxz
loop
sbb
sbb
mov
sahf
cmp
bound
sub
sbb
sub
das
mov
sahf
fcomi
jae
test
rclb
jl
frstor
mov
cli
mov
xor
out
sub
pop
test
in
pop
data16
lds
sbb
push
std
loop
mov
jmp
int3
xchg
stc
outsb
hlt
dec
mov
mov
dec
bound
lock
lock
in
out
fadds
and
stos
push
lods
add
gs
in
cmpsb
jnp
xchg
inc
push
cmp
push
sbb
sbb
pushw
scas
pusha
cmpsl
leave
lock
pop
push
xchg
inc
cmpsb
aas
sub
cs
jl
cmc
cld
mov
inc
mov
jg
bound
xchg
pop
popa
dec
aas
pop
mov
sub
nop
cmpsl
mov
mov
mov
or
pop
les
lods
popa
inc
or
lock
adc
mov
sbb
dec
inc
and
lods
mov
push
pop
xchg
fs
scas
xlat
add
mov
dec
loop
push
in
fsubrs
or
ret
mov
xchg
aam
mov
sti
ret
popa
cmp
xchg
into
inc
pop
or
or
or
enter
pop
and
mov
cmp
add
jnp
mov
push
aad
mov
pop
push
loope
or
dec
dec
mov
pop
ds
inc
fstl
push
adc
xchg
fstps
cmpsb
jle
mov
fstpl
lods
popa
jecxz
shrb
jg
inc
repz
in
movl
sbb
andb
int3
dec
stos
cwtl
pop
stos
aaa
insl
addl
mov
loope
cli
cltd
ss
mov
dec
in
mov
mov
outsl
push
shrl
jmp
and
fstpt
sbb
insb
cmpsb
sbbl
mov
data16
pop
cwtl
add
out
cmp
mov
stos
mov
loopne
xchg
in
adc
and
daa
pop
cld
icebp
xchg
fnstcw
jbe
xchg
pop
mov
and
pop
ja
cmp
hlt
pop
rorl
mov
mov
enter
cmp
mov
imull
out
clc
push
ja
outsb
daa
js
sbb
or
add
mov
sbb
jecxz
lock
cwtl
and
jg
daa
cmp
or
mov
enter
sub
les
ss
xor
cmc
xor
dec
int3
dec
insb
test
dec
popa
pop
jne
mov
sbb
jb
fcompl
xorl
popf
xlat
outsl
add
mov
ljmp
jbe
push
mov
mov
or
add
sbb
cmp
xchg
adc
pop
mov
testb
mov
jmp
outsb
pop
js
scas
add
inc
movl
xchg
outsl
lret
cmpsl
testl
cmp
mov
ss
xchg
gs
decb
or
pop
daa
ficoml
sbb
mov
mov
dec
test
sbb
xchg
mov
mov
movsl
cmp
jns
jp
sub
nop
xor
pop
adc
insb
ret
inc
hlt
subb
adc
fistl
jle
inc
sbb
in
std
sub
xchg
jo
aaa
cmp
push
repnz
mov
fisttpl
cmp
xchg
jle
pop
mov
push
inc
push
jne
jl
sti
push
xor
mov
into
roll
and
xchg
pop
jno
arpl
les
mov
jg
mov
add
pusha
outsl
imul
xchg
fsubrl
cmp
mov
push
icebp
and
or
or
fsub
or
cltd
mov
push
aaa
pusha
xchg
pop
adc
addl
in
insb
fdivs
inc
stos
cmp
imul
sub
aaa
sbb
into
cmp
mov
cs
rolb
mov
mov
inc
xchg
pop
aas
test
xor
mov
and
das
outsb
rcl
sti
and
addr16
pop
xorb
cmp
push
and
outsl
pop
pmovmskb
xchg
fwait
lods
fwait
insb
out
adc
cmp
scas
pushf
jo
aaa
fidivs
stos
test
cmp
xor
js
jge
addr16
imul
mov
fistps
stos
jbe
in
adcb
btc
stos
push
pause
iret
inc
rorl
xchg
decb
push
inc
and
sbb
push
ds
les
xor
je
ja
insb
pop
xchg
ss
mov
in
sbb
scas
insb
cmp
and
lcall
repnz
push
repnz
push
push
imul
loopne
or
cmp
out
xchg
pop
out
dec
cwtl
outsl
push
xchg
rcll
xchg
cmp
lcall
or
cmpb
imul
test
int3
add
mov
xlat
or
push
arpl
out
jo
mov
stc
lea
dec
mov
mov
andb
inc
out
dec
mov
and
add
jle
pop
xchg
cmp
insb
loope
lahf
cmp
mov
mov
sbb
movl
ljmp
jg
inc
mov
lcall
xorl
hlt
push
popa
aas
out
cmp
add
push
jl
inc
es
leave
ja
mov
pop
pusha
push
adc
test
mov
in
push
mov
mov
cmpsb
addb
add
mov
int
mov
ret
sub
outsl
lret
or
dec
sub
sahf
mov
cltd
and
dec
fcomps
adc
mov
adc
imul
icebp
xchg
and
shlb
sbb
inc
add
pop
xchg
clc
push
push
mov
xchg
orl
pushf
jle
dec
adc
mov
mov
xchg
imul
adc
cmp
cwtl
movsb
add
stc
mov
dec
scas
sbb
faddp
outsb
nop
jecxz
js
in
pushf
std
add
inc
add
mov
js
mov
cld
outsb
mov
jns
inc
inc
dec
lods
lret
mov
xchg
in
inc
add
rcrb
div
and
cmp
xor
sbb
push
add
mov
sti
xor
loope
mov
pop
pop
xchg
jnp
dec
ljmp
fdivrl
mov
loope
xchg
insb
testl
out
pop
int
lods
mov
sbb
loopne
andl
roll
dec
lock
push
and
mov
mov
std
cmpsb
jne
adc
pop
jg
sub
mov
adc
push
imul
inc
mov
sbbl
jmp
sbb
hlt
or
mov
cmpsb
repnz
aam
mov
jbe
mov
dec
cwtl
sub
push
out
xor
inc
in
inc
sbb
xor
out
out
lds
bound
shll
rorb
xor
inc
test
lock
mov
add
cmp
dec
add
xor
push
cmp
iret
cmp
xchg
xchg
data16
inc
xchg
fisubrl
test
shlb
lret
js
out
popf
or
shl
mov
out
jl
add
mov
pop
inc
mov
push
push
popf
fcompl
pop
ss
or
xor
daa
mov
xchg
mov
mov
ja
sbb
pop
stos
into
xlat
sub
lods
into
mov
push
lods
mov
mov
addr16
pusha
pop
mov
hlt
cs
adc
sbb
aam
loope
jbe
add
push
movsb
jns
mov
dec
in
movsl
cmp
push
adcb
ss
add
sbb
es
xchg
incl
xchg
jmp
aam
sub
dec
inc
sahf
aam
insl
jno
mov
cmp
aas
push
les
aad
in
lods
push
repz
push
mov
mov
je
push
xchg
push
je
mov
movsl
jge
lock
jns
ja
and
mov
in
pop
jg
aam
add
in
or
mov
into
cmpsb
sbb
stc
outsl
cs
pusha
lock
adc
add
std
jnp
daa
out
aam
fwait
daa
xor
test
repz
jg
into
cmp
mov
shl
inc
inc
xchg
pop
mov
repz
inc
jmp
frstor
loope
rorl
mov
push
call
inc
dec
inc
pop
mov
pusha
cli
xor
push
js
mov
ret
dec
mov
adc
and
mov
out
mov
and
cmp
addr16
mov
je
insl
in
jne
cmp
fists
inc
fbstp
push
inc
cmp
repz
lock
outsl
or
les
add
std
mov
imul
mov
int
bound
add
in
push
lahf
adc
mov
mov
subl
in
add
repnz
add
xchg
loope
es
pop
or
or
call
sbb
ljmp
test
jae,pn
jnp
xor
sti
mov
cmp
cmp
stos
jle
xchg
xor
jle
js
call
ret
push
jge
mov
jmp
jo
rclb
sbb
sub
xchg
imul
daa
push
add
mov
jne
testl
ss
mov
addl
xlat
push
pop
xchg
imul
lods
fadd
jb
push
loopne
sbb
scas
adc
add
icebp
inc
xchg
mov
pop
cli
out
cmpl
int3
inc
jne
fstp
dec
ret
inc
mov
mov
into
sub
imul
cmc
pop
mov
daa
rorb
js
cltd
xlat
add
jp
dec
mov
fdivl
add
and
dec
aad
pop
out
push
int3
icebp
mov
lea
mov
leave
fcoml
add
jnp
xor
or
insl
vmovntdq
cwtl
test
or
sbb
negl
jecxz
sti
dec
fcmovu
int
jg
mov
insb
jle
xchg
mov
rol
push
sbb
aad
je,pt
xchg
mov
add
mov
test
gs
js
sbb
movsl
les
push
popf
into
push
add
mov
pusha
sbb
mov
orl
and
add
arpl
es
mov
ja
out
leave
dec
inc
ljmp
mov
pushfw
ret
cwtl
mov
mov
lret
push
arpl
xor
dec
xchg
stc
bound
in
push
mov
test
jg
stos
cs
adcb
pop
xor
ret
call
jo
call
mov
insb
push
jnp
rcll
enter
push
iret
cltd
hlt
or
ffreep
mov
cltd
std
ja
outsl
out
push
nop
and
jnp
clc
xor
xchg
out
pop
pop
xchg
push
ret
cld
adc
sub
mov
or
pushf
loop
into
xor
jmp
out
inc
jp
rorl
daa
sbb
mov
cmp
test
adc
mov
mov
or
sub
mov
in
or
cmp
xchg
out
and
inc
pop
movsb
mov
arpl
inc
jno
cmp
negl
adc
jle
inc
fnsave
inc
popf
dec
pop
pop
xchg
push
negl
xor
imul
clc
mov
in
js
or
push
rcrl
push
ljmp
popa
adc
pop
pop
aad
mov
sahf
call
sub
adc
add
push
or
in
lahf
in
js
rorb
cmp
inc
push
dec
loopw
sahf
fnstsw
loopne
jbe
out
in
sbb
cmp
adc
outsl
mov
cltd
addb
adc
dec
jo
outsb
inc
je
push
dec
add
or
ja
jns
fcomps
pop
pop
mov
jmp
aam
mov
push
test
add
ret
rcr
ret
ds
mov
dec
add
imul
cwtl
jmp
mov
ret
xchg
mov
mov
pop
lret
ret
aam
or
cmp
adc
loope
inc
paddsw
pop
jnp
shll
xor
cli
pop
add
mov
test
sbb
ljmp
add
push
aaa
cmp
add
or
push
sub
add
jl
loop
lods
adcb
hlt
iret
or
popf
out
mov
jg
loopne
cmp
xor
inc
lds
xor
or
lret
jb
dec
pusha
call
and
mov
cmc
fwait
aaa
in
and
sbb
mov
mov
or
and
hlt
lret
sub
fstpt
cli
xor
daa
mov
mov
out
dec
adc
inc
xor
stos
add
aaa
loopne
push
adc
or
push
insb
xchg
fwait
sahf
jo
fwait
lret
nop
push
pop
stc
sbb
push
cmp
add
push
loopne
rcll
addr16
push
add
mov
jp
testl
scas
push
and
dec
adc
jne
ljmp
cmp
mov
cltd
dec
je
pop
das
cwtl
mov
jne
lods
sub
mov
inc
or
cmp
shll
les
out
shl
jp
mov
add
push
lret
stos
pop
sub
ljmp
jae
push
jo
ret
sbb
leave
push
pop
pop
mov
pop
js
rolb
dec
xchg
testb
cmp
into
push
lea
push
rclb
insb
or
imul
cmp
cld
rcl
loopne
filds
sub
pop
dec
push
cmpsl
fwait
ret
data16
pop
aam
xchg
lea
sbb
ror
pop
sbb
cmp
loopne,pt
jmp
sub
fnsetpm(287
cmp
push
and
call
mov
inc
pop
hlt
adc
jg
pop
aaa
shr
or
jge
xor
dec
je
ja
icebp
cmpb
ficomps
cwtl
cmp
cltd
fsubrl
adc
jns
dec
mov
cld
out
pop
xor
hlt
jno,pt
mov
jp
inc
fcmove
inc
and
sub
aaa
lods
repz
jne
inc
scas
mov
jo
lcall
fidivrs
loop
xor
imull
outsb
int
sub
idiv
mov
jl
into
mov
inc
xchg
sub
daa
inc
sub
fsts
cmp
mov
xor
popf
in
mov
icebp
jnp
mov
ss
sahf
sub
adc
icebp
sub
imul
arpl
inc
mov
test
add
push
adc
clc
cwtl
cld
dec
movb
jb
push
imul
adc
push
enter
popl
xchg
mov
xlat
iret
in
sub
sbb
mov
inc
xor
movsl
mov
xchg
cli
mov
xchg
jge
push
pop
insb
addr16
cmp
outsb
and
lock
cmc
jmp
scas
scas
sub
pop
in
fdivl
sub
push
mov
xchg
sbb
jno
ja
mov
lcall
dec
lahf
int
int3
mov
mull
pop
gs
jnp
pop
pop
pop
in
mov
fsubs
sub
sub
lock
into
pop
shlb
negb
aas
mov
in
jb
adc
popf
lahf
add
sti
lds
jnp
push
jp
push
xor
dec
sbb
cltd
mov
mov
mov
loop
dec
push
xor
ljmp
pusha
std
add
mov
cmp
ja
into
sub
iret
xor
sub
stos
rorb
push
clc
adc
repz
aad
mov
hlt
inc
adc
call
fsts
lods
aas
ja
inc
mov
out
pop
inc
pop
aam
cmp
lds
cmp
shr
mov
jae
sahf
jp
imul
pop
cli
scas
stos
into
test
xchg
pop
nop
data16
clc
out
aas
and
fucomi
pusha
lock
or
int3
xchg
sub
pusha
shr
stc
shlb
sbb
lret
cmpsb
sub
ret
sbb
mov
sub
filds
incl
imul
jg
imul
push
les
or
mov
loopne
scas
ret
push
mov
mov
in
les
sub
xchg
inc
loope
nop
data16
xor
mov
dec
ja
lea
movsl
out
insl
inc
xchg
sbb
nop
int
test
inc
scas
dec
movsb
sub
sub
fadd
movsb
cmc
cmpl
adc
jbe
fildl
shll
movsb
cmp
cmp
mov
testb
push
inc
or
in
mov
xor
sub
aam
add
and
jle
mov
mov
in
sbb
lret
call
fimull
orb
insb
fnstenv
and
jo
jbe
and
push
jecxz
cmovl
push
rcl
inc
stc
in
mov
add
dec
pop
cwtl
imul
dec
and
int
movsl
scas
pusha
cmp
sbb
add
and
jl
mov
dec
dec
popa
in
jmp
pop
cmp
xchg
bound
pop
dec
jp
clc
sbb
test
inc
roll
jmp
mov
test
test
xor
out
xor
dec
adc
mov
mov
arpl
adc
mov
jne
jb
es
ficoms
jecxz
pop
push
aas
fisubrs
imulb
and
sub
adc
push
push
repnz
or
repnz
adc
sbb
stos
dec
xlat
clc
mov
shr
pop
push
pop
das
sub
mov
xchg
inc
pop
imul
adc
xchg
xor
push
cmp
ret
jnp
into
fdivl
dec
push
stc
lods
push
add
jae
cmp
lock
mov
mov
movb
mov
mov
jne
pop
in
mov
nop
ret
mov
lret
data16
and
mov
scas
daa
rcrb
bound
jl
cmpsl
pop
shll
dec
add
xchg
lret
pop
sti
loop
jl
pop
cmp
arpl
mov
scas
repnz
add
or
push
aad
sahf
add
sub
mov
fs
add
rcll
mov
subl
aas
insb
cmp
andb
arpl
sbb
mov
jle
dec
add
xchg
and
shrl
sbb
or
ja
fimuls
pop
aaa
pop
inc
std
out
ljmp
push
enter
push
rcrl
ja
mov
enter
insl
repz
loop
rclb
mov
push
cmpsb
add
jae
out
sti
loope
inc
push
cmpsb
mov
xchg
das
cld
sahf
bound
test
loope
daa
inc
lret
inc
test
fildll
xlat
sub
pop
sbbl
adc
jmp
adc
dec
mov
xorl
rcll
mov
push
mov
jb
xor
sbb
xor
mov
notl
xor
inc
icebp
inc
inc
adc
jg
jne
mov
lods
xchg
jmp
adc
fbld
sbb
fadds
mov
push
shll
ja
cmp
push
mov
mov
sahf
test
cmp
je
mov
inc
call
mov
clc
jle
inc
dec
mov
movsb
push
icebp
mov
push
dec
dec
movsb
mov
cmp
adc
aas
push
xchg
push
jmp
daa
popa
addb
pushf
jle
xor
xchg
scas
ficoml
jne
sbb
aad
loopne
subb
push
in
dec
leave
adc
int
test
loop
cltd
aam
jl
lock
add
sbb
pop
and
arpl
lock
add
dec
add
test
fnstenv
sub
jg
cmpsb
iret
repz
add
xchg
cltd
inc
jbe
cmpsb
add
shrl
cmpsb
push
sbb
loopne
add
adc
shrl
fstl
cmp
clc
insb
out
jmp
int3
inc
int
ficomps
or
mov
mov
pop
push
dec
dec
test
test
mov
xchg
push
jmp
cmp
aaa
mov
pop
adc
enter
sbb
imul
jne
lods
test
mov
sbb
mov
test
sbb
xor
cmp
jb
lret
fldcw
pop
hlt
sub
jns
stc
mov
ret
cltd
fidivrl
jge
xor
xor
or
xor
cltd
mov
mov
mov
daa
push
cmp
iret
jo
sbb
ljmp
repnz
cld
push
ret
enter
fistps
sub
xor
cmp
mov
shl
jle
xor
out
outsb
mov
adc
jns
adc
mov
pop
loopne
mov
cmp
sahf
jge
mov
int
cltd
fsubrl
out
jae
xchg
pop
inc
cwtl
adc
lcall
aad
pop
cli
pusha
inc
hlt
into
jecxz
mov
jmp
pop
mov
or
add
dec
stc
xchg
call
or
pop
fisttpll
js
push
lea
mov
enter
call
or
pop
fisttpll
js
push
lea
mov
dec
dec
js
call
or
pop
fisttpll
js
push
lea
mov
enter
call
or
pop
fisttpll
sar
push
jb
inc
pop
push
cmp
or
je
sbb
das
add
lcall
cmpsl
ficoml
sub
push
or
xor
dec
jno
cmc
stos
mov
cli
movsl
fcmovbe
lret
out
gs
or
or
pop
sti
dec
sbb
jmp
loop
int3
xchg
loope
test
sub
imul
push
rorl
mov
js
jo
push
pop
flds
push
rorb
je
ja
fsts
mov
mov
mov
jmp
xchg
xor
ret
pusha
rorb
imul
sbb
mov
pop
loopne
pop
xchg
arpl
jg
sub
inc
mov
jp
jp
movsb
out
and
mov
loopne
cmp
sbbb
enter
pop
lea
xor
rcll
pusha
pop
sbb
push
cmc
mov
add
ja
call
jp
mov
fcomps
ljmp
push
sar
cmc
rorb
mov
pop
ficoml
sub
jp
push
pop
iret
dec
test
lds
pop
ficoml
inc
gs
outsl
imul
and
jl
pusha
sti
mov
mov
lahf
fiaddl
in
xor
dec
xor
pusha
cmp
push
push
pop
jnp
imul
mov
mov
test
lret
and
jae
or
jp
push
pop
adc
stos
in
aad
ljmp
jne
sbb
inc
jp
push
pop
adc
stos
in
aad
ljmp
jne
mov
imulb
imul
xor
fsubrs
xlat
pop
mov
add
adc
leave
in
rclb
cmp
adc
adc
cmc
pop
xor
jl
inc
dec
fstps
and
pop
std
push
cmp
and
sub
push
je
push
add
fcompp
push
inc
mov
std
andb
and
jg
fisttpll
mov
push
fstp
inc
aas
lea
nop
fcmovnbe
repnz
pop
ret
and
inc
dec
iret
add
or
mov
pop
fistps
pushf
xchg
out
xor
movsl
cmpsb
mov
sbb
aaa
sub
or
pop
rol
pop
into
mov
aam
in
add
push
roll
xor
cmpsb
rep
and
jne
cltd
cmc
sbb
rcl
fsts
aas
inc
loope
add
dec
jmp
or
fcmovnbe
mov
test
sub
jecxz
sbb
imul
push
mov
aam
xor
xor
mov
and
mov
div
call
movb
inc
xor
aas
cmp
or
call
popf
inc
xor
add
lods
adc
shl
and
daa
xchg
imul
pop
jle
xorl
outsl
shlb
mul
std
sbb
das
adc
jnp
call
rcll
in
adc
xchg
push
test
es
sarl
push
imul
or
xor
dec
pop
stos
mov
push
add
repnz
mov
cltd
fstp
ljmp
outsl
lret
add
arpl
orb
xor
pop
cld
ds
cmc
cmp
into
insl
add
push
xchg
test
cmp
mov
sbb
sub
add
bnd
dec
aam
pop
sub
sahf
cmp
sub
push
shrb
sub
xor
clc
pop
iret
inc
mov
cmpsb
jmp
in
inc
dec
das
sbb
sti
push
call
cmp
or
mov
addr16
test
sub
insl
insl
xchg
and
lds
call
popa
out
enter
or
add
push
pop
xorb
add
jbe
mov
sbb
cmp
xchg
repz
pushf
addl
test
insb
mov
adc
test
sbb
inc
loopne
mov
imul
mov
movsl
insb
ja,pt
call
mov
jnp
imul
out
gs
jmp
nop
sti
rol
add
mov
mov
pop
sbb
mov
xlat
push
mov
push
mov
cmovp
enter
loopne
pop
movsb
popf
scas
mov
lods
popa
or
lret
ret
out
sub
lods
in
adc
inc
mov
outsb
sub
and
xor
or
or
pop
rorl
andl
push
popf
and
mov
dec
sub
cld
pop
inc
and
arpl
pop
xchg
pop
jl
push
xchg
xchg
movsl
jne
dec
jae
jb
adc
add
pop
fldenv
and
fldz
sub
sub
mov
out
or
es
lcall
in
xchg
leave
mov
clc
xor
ficoml
adc
test
in
mov
out
and
push
lock
call
rorl
cmp
sbb
xchg
sbb
bound
push
mov
aaa
jg
xchg
cs
gs
adc
push
ss
mov
repz
imul
shlb
jo
je
lret
jmp
loope
ja
enter
cmp
lret
std
inc
addr16
mov
inc
dec
sub
xchg
scas
pop
or
adc
xorl
nop
jnp
and
imul
and
lock
mov
mov
push
sub
add
push
cmpsb
adc
stos
mov
push
mov
xorb
fldl
mov
call
gs
jge
adcl
xchg
ret
inc
dec
push
dec
inc
and
rcr
shrl
mov
cmp
xchg
in
jae
cld
rcr
aad
add
scas
inc
mov
inc
pushf
out
std
pop
jne
mov
mov
mov
adc
aam
loopne
ljmp
jg
mov
pop
les
pushf
mov
pop
xchg
sbb
incb
inc
std
xchg
xor
loope
add
jp
fs
xchg
shl
lock
scas
xor
push
icebp
sub
mov
outsl
clc
cmp
cmc
pop
cs
push
out
or
sbb
adc
dec
cmpsl
and
sub
mov
mov
xchg
aam
movsb
leave
lret
mov
ss
and
lahf
fwait
hlt
filds
push
sbb
outsb
or
add
mov
fldt
inc
sub
push
imul
lds
out
xor
in
fistl
mov
in
xor
sub
or
add
mov
jle
push
sbb
das
cwtl
outsb
lods
aas
or
enter
or
dec
cmc
inc
add
sub
and
insb
fwait
xor
xchg
xchg
stc
cwtl
pop
push
inc
push
mov
ljmp
cltd
pop
or
out
mov
push
add
int
daa
mov
pusha
cmp
xor
stos
mov
pop
imul
pop
pushf
and
clc
xchg
mov
cld
adc
mov
cld
dec
sbb
repnz
fcomip
out
cmc
jae
imul
lods
enter
xchg
cmpl
out
out
push
xchg
mov
sbb
xchg
xchg
inc
dec
cltd
xor
lcall
dec
stos
aaa
adc
fisttps
ljmp
dec
sarb
inc
jo
dec
ficomps
into
std
sbb
movsb
test
ja
test
rcll
jb
sub
sub
aam
lds
jns
adc
adc
scas
aad
repnz
dec
sbb
lods
jnp
loopne
cmp
sbb
into
xor
ss
rcll
imul
int
or
xchg
mov
xchg
jbe
push
dec
add
add
pop
push
mov
adc
into
stc
xor
add
dec
push
fcmovne
jae
mov
mov
mov
outsb
and
in
push
call
pop
inc
lock
push
fcomi
ljmp
push
lahf
inc
fildl
adc
sub
cmpsl
jne
enter
sub
push
inc
and
pop
dec
mov
push
dec
xor
and
xor
xlat
jp
push
mov
mov
add
fisubrs
shrb
adc
adc
xchg
jb
into
std
sbb
pop
repnz
insl
xor
das
mov
cltd
mov
mov
sbb
sahf
cmc
arpl
aam
dec
and
dec
daa
mov
xor
mov
fmull
cmp
xor
call
push
pop
push
mov
push
loopne
sti
test
pop
cmp
pop
negb
fidivrl
sub
mov
pop
das
sbbb
pop
fsubl
xchg
mov
add
cmp
and
mov
sbb
popf
cmpsb
sti
adc
je
or
mov
mov
cmp
mov
test
adc
mov
mov
sub
clc
sbb
xor
addr16
popfw
int
loopne
int3
or
das
shrl
xlat
or
outsl
cli
int
insl
push
mov
cmpl
ss
rclb
inc
fmulp
pop
inc
cli
insb
jle
jecxz
xchg
loop
cmp
inc
cmpsb
and
cltd
push
dec
or
lcall
rep
or
idiv
fadd
adc
mov
or
lret
negb
sub
dec
xchg
adc
mov
jns
int3
fnstenv
cmp
stc
rclb
stos
inc
insb
inc
out
scas
inc
repnz
fucomp
imul
cmp
jnp
insl
fdivr
cwtl
sbb
shrl
roll
call
cmpsl
xor
jb
roll
xchg
bound
cwtl
pop
or
jne
mov
popf
cmpl
mov
pop
add
rorl
imul
fisubl
xor
adc
fstps
cwtl
sahf
and
stos
lcall
shrb
pusha
mov
or
push
int
out
das
stos
out
pop
pop
ss
rorl
outsl
lcall
jp
cmp
xlat
cmp
xchg
sub
sub
jae
fcom
jl
nop
mov
dec
pop
pop
and
mov
cmp
push
mov
out
adcb
stos
inc
mov
out
jp
dec
fwait
mov
stos
mov
pop
rep
in
js
cs
enter
jecxz
cmp
ret
insl
nop
mov
dec
into
rcr
cmpsb
mov
mov
lock
test
shl
push
js
sub
cmp
push
xchg
ljmp
push
rcrb
jg
loope
xchg
sub
mov
pop
fdivr
jmp
jmp
cltd
and
aam
fcompl
rcll
ret
fsub
fsubl
and
dec
and
mov
test
pop
xchg
lods
testb
arpl
arpl
insl
stos
cmpsl
decl
pushf
inc
mov
add
and
shll
push
scas
stos
cmp
xor
fiadds
mov
mov
xchg
int
fists
sahf
add
or
out
or
inc
mov
data16
push
or
and
loop
cli
stos
adc
lods
test
jno
xchg
dec
pusha
rcll
adc
adc
dec
neg
sub
pop
cltd
push
imul
pushf
and
pop
and
je
add
jne
les
mov
and
imul
rorl
push
shl
lds
das
push
pop
cwtl
outsl
das
xchg
push
mov
ret
outsl
push
loop
jb
mov
lods
ja
mov
std
inc
and
sbbb
xlat
pop
test
ss
leave
enter
add
ret
cli
stc
sub
test
mov
inc
sysexit
arpl
pushf
xorb
or
jns
jp
das
lods
mov
sbb
lods
in
xchg
insb
push
fdivrp
mov
repnz
push
dec
push
cmpsb
lods
jle
jmp
jb
jae
inc
mov
cmc
push
pusha
sbb
xchg
xchg
mov
adc
or
in
lret
adc
adc
mov
loopne
cmp
cli
pop
mov
fcmovu
or
fstpl
xchg
ret
stc
cmpb
out
gs
cmp
and
sub
enter
sub
xchg
scas
outsb
push
xor
push
adc
fsin
stos
popa
in
cmpsl
mov
aad
fcoms
fsubrs
or
ret
mov
add
js
inc
lret
mov
sub
cltd
push
mov
mov
ficomps
inc
sarb
jge,pn
addb
dec
push
xor
sbb
dec
shll
lods
mov
imul
stos
out
in
or
mov
rorb
xor
les
jmp
stos
mov
or
jle
popa
out
scas
xchg
jg
push
das
sbb
ret
mov
ljmp
popa
out
cmp
shrl
frstor
cwtl
lock
or
xchg
sbb
cmpsb
add
int
mov
iret
xor
ljmp
or
dec
les
stos
adc
inc
adc
cwtl
ret
and
nop
pop
mov
push
sub
es
xor
out
ret
adc
in
imul
arpl
push
negl
mov
cli
int3
dec
cltd
out
xchg
inc
sahf
std
aad
fldenv
mov
xor
hlt
mov
jno
push
leave
push
sarl
lret
xor
addr16
ljmp
aas
jne
xchg
sbb
xchg
into
inc
pop
lahf
lods
js
scas
add
add
inc
push
cmp
fisubrs
loope
or
mov
pop
jmp
push
aaa
or
icebp
js
adc
cmpsb
ss
addr16
mov
scas
cmpsb
sarb
adc
insl
adc
fdivrs
xor
mov
outsl
mov
dec
pop
lods
push
xor
cmp
fcomip
cmp
shrb
fsub
into
cli
loope
jo
cmp
test
fists
lcall
in
push
test
lahf
pop
inc
xor
es
jcxz
cmp
mov
pop
aaa
adc
add
jp
jo
adc
pop
scas
lds
pop
fadds
int3
push
and
jg
lret
aam
in
xchg
cwtl
dec
shl
xchg
mov
mov
rdmsr
mov
and
sahf
pushl
xor
imul
dec
arpl
fsts
daa
add
mov
mov
mov
sti
lahf
mov
iret
cltd
enter
stos
loopne
push
jmp
xchg
sbb
and
push
test
fidivs
lcall
mov
sub
mov
and
std
adc
push
mov
or
in
imul
sub
nop
adc
and
imulb
jbe
pop
or
or
sub
fs
xor
mov
sahf
sahf
sub
movsb
jne
dec
popf
pop
mov
mov
je
testl
sarl
aaa
int
mov
outsl
pop
pop
mov
sub
cmpb
and
mov
cltd
pop
jmp
mov
popa
daa
mov
dec
and
push
pop
pop
adc
xor
out
xchg
and
loop
stc
sub
pop
repz
outsb
repnz
push
xor
inc
pop
adc
pop
xchg
bound
fmuls
dec
stos
inc
iret
inc
xor
jne
sub
outsb
xor
rcr
mov
call
stos
dec
pop
dec
fisubrs
pop
xchg
jg
pop
es
out
imul
lock
adc
inc
xchg
ja
int
mov
icebp
roll
in
cmpl
stc
xor
cmp
lds
jne
movsb
cwtl
xor
xor
xlat
pop
xchg
mov
call
pop
sub
out
xchg
test
andb
ret
jecxz
and
cmpsb
inc
rorl
dec
iret
bound
push
ss
cmp
adc
jecxz
js
jecxz
jne
inc
loope
sti
mov
loop
xchg
jo
hlt
xchg
inc
lods
leave
push
cltd
add
insl
pop
mov
jmp
lods
mov
xor
cmp
and
daa
mov
jo
ds
push
shrl
xor
xchg
cmp
xchg
xchg
sbb
mov
negb
xor
mov
lahf
js
fnstenv
jns
adc
iret
pop
std
xchg
enter
cld
pop
xchg
push
push
fistpl
add
arpl
lea
xor
xchg
inc
or
lods
jne
shll
and
inc
cmpb
pusha
sub
sahf
pop
mov
repnz
loop
insb
dec
in
cmpsl
xchg
nop
ret
dec
sbbb
dec
lods
iret
cli
aad
xacquire
mov
stos
cmp
sbb
push
push
fs
sbb
scas
xchg
mov
jl
pushf
ret
outsb
je
lret
mov
push
cmp
push
and
mov
pop
repnz
aam
cli
or
cmc
adc
roll
mov
dec
mov
imul
stc
sub
repnz
jle
xor
xchg
and
repnz
push
cmp
shrb
in
inc
leave
mov
loop
scas
push
mov
sub
inc
add
lcall
xor
cld
jecxz
pusha
jo
ds
leave
fists
inc
lock
mov
mov
sti
addl
jno
imul
stos
inc
fs
flds
jns
xor
ss
std
test
loope
cli
push
es
adc
xchg
shlb
adc
cli
mov
movsb
add
cmpsb
in
std
scas
xor
sub
xlat
cld
xor
mov
push
xchg
xchg
fcoml
mov
inc
jle
pusha
mov
xchg
inc
js
cmp
bound
pop
xchg
daa
adc
push
adcl
adc
andl
adc
movsl
mov
push
movsb
sub
sbb
loop
mov
clc
add
cmpsl
inc
int3
xor
call
movb
xor
mov
lock
insb
adc
lret
mov
xchg
push
inc
xchg
inc
add
sarl
dec
lret
xor
mov
push
sub
mov
jge
sti
cli
fwait
mov
mov
sbb
lcall
fcmovne
or
jg
mov
out
dec
inc
and
mov
out
cmp
insb
dec
jnp
mov
xchg
add
adc
xchg
sbb
mov
cmpsl
popa
inc
sti
dec
or
and
xor
xor
cmp
insl
sub
xor
xchg
mov
sahf
dec
out
daa
bound
push
lret
mov
cmp
loopne
mov
mov
xchg
rcrb
push
sbb
lods
push
scas
lods
addr16
sbb
xchg
call
cmp
xchg
dec
cmpsb
or
dec
nop
and
imul
nop
ja
sbb
aas
mov
jecxz
shlb
stos
inc
fsubr
popa
sahf
pushf
mov
cld
or
cmp
out
dec
add
scas
fisubrs
xchg
jmp
dec
push
jnp
and
mov
jb
xor
pop
add
cli
shl
push
xor
outsb
mov
test
mov
pop
jno
jns
int
je
sbb
add
xchg
push
push
popa
cwtl
in
add
cmp
sbb
aam
mov
arpl
lods
ret
testl
in
lcall
adc
inc
aas
cmc
mov
loopne
aam
sbbb
adc
and
mov
stc
mov
in
mov
movsb
cli
cmpb
jne
lahf
clc
lds
gs
mov
idiv
insb
xor
push
xchg
sub
mov
mov
inc
jae
pop
daa
dec
pop
dec
push
or
mov
stos
lret
push
cmp
sarl
in
mov
sbb
sub
addb
jge
or
mull
inc
add
ds
push
xor
sbb
inc
lret
call
in
out
push
cwtl
mov
adcb
pop
mov
int
sub
sti
mov
cmp
sbb
mov
sub
insb
pop
flds
in
mov
push
xchg
and
psllw
sbb
sub
js
mov
xchg
mov
dec
and
into
sahf
shl
xorl
push
mov
insl
mov
or
int
fcomi
jge
dec
and
and
mov
outsb
testl
fcmovnu
dec
movsl
stc
out
mov
fisubs
dec
notl
aad
xor
lds
xchg
inc
sub
jno
pop
jb
jp
push
mov
add
add
fisubs
std
and
adc
jae
lds
into
mov
adc
inc
push
jge
jno
sbb
sub
push
mov
add
mov
inc
sbb
lock
mov
lahf
and
fistpll
jno
inc
mov
testb
push
fstpt
cmpsb
aas
dec
notl
out
jecxz
subb
jbe
adc
mov
mov
mov
jne
movsl
icebp
xchg
leave
sbb
test
ljmp
add
xchg
add
and
mov
xchg
xlat
xchg
jno
test
mov
cmovae
sbb
pop
loope
mov
sbb
adc
imul
sub
fld
repz
sub
ret
aaa
dec
push
enter
rclb
stos
push
rol
xchg
sub
mov
xor
icebp
ss
or
or
fwait
icebp
pop
nop
pop
iret
xor
pop
shlb
ret
mov
test
add
inc
fbstp
mov
mov
pop
imul
clc
push
int3
jmp
repz
out
pop
xchg
jns
xchg
jmp
xor
sub
or
mov
flds
lea
fwait
sub
sbb
inc
repz
aam
xor
bound
cmp
and
fsubrl
shlb
jmp
xlat
pop
outsb
inc
mov
mov
cmp
mov
lds
lcall
mov
xchg
rolb
mov
pop
mov
push
or
cmp
outsl
cwtl
sbb
sub
mov
aas
rcrb
stos
daa
in
or
jb
cmp
cmp
xorl
xor
mov
in
jbe
push
scas
or
pop
sub
insl
das
hlt
push
hlt
inc
or
imul
inc
mov
mov
mov
shrl
dec
jl
xlat
mov
daa
sti
repz
xchg
jmp
aaa
fwait
mov
scas
xchg
addr16
sub
sub
add
lods
pop
cmp
jle
xchg
mov
fldl
dec
mov
mov
insb
add
or
ret
sbb
jns
arpl
jne
or
xor
dec
add
lcall
movsl
ficoml
sub
push
or
xor
dec
add
lcall
movsl
ficoml
sub
jp
push
pop
adc
stos
in
aad
ljmp
jne
sbb
inc
jp
push
pop
xchg
dec
add
xor
mov
and
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
movsl
jecxz
roll
shlb
and
inc
jne
and
inc
add
roll
mov
and
push
or
pop
push
and
inc
add
popf
ret
in
mov
mov
sub
push
inc
dec
and
jne
or
adc
or
xchg
mov
in
adc
add
mov
ficoms
pushf
lcall
lea
pop
imul
cmp
mov
es
fwait
push
mov
inc
sti
daa
and
adc
out
mov
ss
add
out
sub
es
and
inc
mov
pop
sti
mov
mov
mov
xlat
cli
mov
ficomps
inc
add
xchg
mov
andl
cmp
sub
mov
das
adc
cmc
inc
lea
and
jbe
outsb
rol
jp
or
int
lret
xor
push
push
xor
ss
adc
jl
mov
ret
loop
cmc
mov
sub
cmp
inc
insl
xor
dec
adc
fincstp
shlb
or
aad
xlat
xor
ss
aaa
jne
add
push
dec
ficoml
cmc
ret
cltd
out
aad
xchg
out
cmp
adc
pop
push
and
inc
and
leave
stos
stc
mov
in
aad
lds
adc
xor
push
adc
mov
movsl
jecxz
roll
mov
xor
push
add
and
inc
add
testb
movl
clc
stc
adc
es
xor
mov
in
enter
loop
test
call
cwtl
jecxz
ja
repz
mov
icebp
nop
mov
mov
pusha
mov
xor
push
jne
mov
cmp
sub
pop
imul
push
push
or
sahf
enter
dec
lods
test
data16
popf
out
pop
mov
jge
ljmp
mov
xchg
out
iret
pop
inc
mov
pop
jg
pop
jb
orb
lea
xor
shr
sbb
push
ds
pop
mov
mov
arpl
push
xchg
fisubs
pop
negb
out
leave
into
imul
add
sub
mov
outsl
btr
fucom
sbb
jno
xor
adc
in
pop
ret
sub
mov
mov
call
loope
lock
jnp
push
dec
fabs
sbb
aaa
pop
jno
ja
jbe
adc
dec
div
loope
lods
aam
lret
mov
jle
mov
cli
mov
add
add
out
sub
orl
dec
clc
test
into
insb
mov
mov
xor
lock
fstl
xchg
lret
arpl
cmp
ljmp
adc
push
imul
inc
insb
and
fwait
sbb
xor
insl
mov
inc
xor
sbb
jmp
shrb
xchg
lcall
and
out
pop
cmpsl
add
mov
mov
and
mov
fisttpll
stos
outsl
mov
mov
pusha
data16
xchg
push
enter
arpl
push
cmpsl
mov
push
outsl
aam
cmpsb
mov
add
mov
mov
add
movsb
dec
mov
mov
pminub
shll
rcl
sub
out
sbb
or
movsl
mov
aam
adc
cmp
mov
cmp
dec
cmp
dec
jg
xor
fisubrs
inc
inc
adc
jbe
jae
dec
rolb
mov
xor
fwait
call
xchg
mov
jp
fcompl
cmp
incl
lds
push
lods
xor
lds
pop
xor
es
mov
lea
pushf
sub
cmpsb
test
mov
mov
aam
jbe
icebp
imul
push
clc
mov
push
xor
je
les
or
mov
or
add
push
xlat
jae
bound
jmp
fdivs
ret
js
aas
xlat
js
mov
push
mov
inc
cld
test
and
daa
fistps
jl
dec
sbb
loopne
test
xchg
movsb
orl
fs
andb
mov
inc
fisubs
stos
pop
xor
lods
inc
in
loop
ret
jno
dec
pop
mov
stc
cmp
or
mov
adc
out
in
cmp
repnz
ss
inc
outsb
imul
in
rolb
lds
push
ret
ret
jns
push
or
ljmp
pop
pop
lea
push
pop
cltd
fdivrs
ja
or
sub
out
stc
pop
xchg
call
das
mov
inc
mov
test
mov
mov
adc
sub
fidivl
mov
mov
mov
rcll
jb
push
dec
jb
pop
jae
mov
mov
push
jge
mov
shrb
inc
adcl
and
jge
repz
push
jp
mov
nop
out
pop
xchg
imul
inc
xor
adc
sbb
rorl
pop
xor
or
push
test
out
add
in
int
push
push
stos
pushf
testl
push
xor
xchg
inc
xchg
push
lock
xchg
dec
getsec
xchg
xchg
outsb
push
sub
jno
enter
mov
xor
cmp
add
addb
xchg
aad
jle
pop
popf
cmp
dec
mov
mov
push
or
inc
xor
fcmove
pusha
and
jle
mov
pusha
in
int3
push
icebp
jecxz
pop
gs
lods
jp
in
mov
pop
or
es
out
and
out
aaa
push
xchg
dec
subb
fstl
sti
ja
clc
nop
leave
xor
jbe
icebp
lret
lret
cmp
sbb
lea
insl
and
xchg
xor
es
arpl
dec
test
jg
test
jae
push
mov
ja
inc
dec
pushf
icebp
mov
aam
leave
aam
lret
scas
es
pop
dec
sahf
add
clc
or
lds
ror
cli
call
popf
js
mov
leave
jmp
inc
mov
and
inc
mov
pop
aad
test
addr16
jmp
cmpsb
mov
or
shrl
arpl
insb
push
cmp
mov
repz
scas
pop
in
inc
cld
xor
or
sbb
dec
cmpsl
scas
cmp
or
js
lods
out
dec
ja
add
and
shll
pop
testl
push
daa
sbbl
lret
cli
jl
xchg
or
mov
filds
sub
pop
or
in
jmp
cmpsb
xchg
cmp
outsl
sub
cli
jp
xor
adc
push
mov
and
inc
test
jle
rcrl
in
sub
mov
xchg
inc
test
cltd
push
shll
xorb
sbb
push
jecxz
adc
xchg
jmp
mov
xor
cmp
clc
pop
flds
scas
jo
inc
mov
add
adc
daa
dec
xlat
inc
inc
iret
leave
mov
sub
roll
jne
shlb
lcall
or
sub
adc
out
pop
push
cs
ds
jbe
mov
hlt
in
mov
popa
std
ja
pop
jns
xchg
push
dec
fwait
xor
rolb
cmp
popa
adc
es
cld
mov
mov
sub
ljmp
mov
gs
xchg
mov
lods
inc
popa
cltd
sub
aam
sub
ljmp
aas
jg
jl
dec
and
fisubrl
pop
shl
daa
xor
movsb
pushf
mov
lea
mov
add
add
rolb
popf
stc
mov
inc
or
cmp
xor
jmp
adc
call
ja
mov
xchg
lret
fstp
in
xor
lods
repnz
les
fidivl
jns
in
cmp
outsl
insl
jmp
mov
subl
or
hlt
lods
jecxz
fsubr
pop
adc
out
test
mov
rclb
inc
jp
mov
sub
cmp
je
or
xlat
mov
push
dec
dec
xchg
sti
dec
xchg
sub
inc
add
repnz
cmp
pop
stos
inc
inc
dec
adc
fwait
pop
jg
fcmove
pop
mov
dec
add
sbb
cs
push
lret
out
loopne
loope
dec
add
lret
cmp
mov
push
call
lahf
in
cmpsb
lcall
sahf
pop
ljmp
add
or
push
xchg
jae
sarb
pusha
cmc
adc
imul
sub
push
cmpb
mov
in
test
lcall
add
pop
pop
pusha
std
test
jmp
mov
cld
xor
stos
les
repnz
bound
mov
lret
push
or
cmp
mov
ret
pop
xor
ds
or
neg
rol
int3
bound
jmp
fs
stos
aaa
pop
dec
xchg
ljmp
adc
cltd
stos
push
hlt
xor
subb
popa
push
js
pop
adc
adc
xchg
stc
icebp
push
rclb
jb
or
pop
sbb
xor
imul
stc
lret
rorl
jmp
xor
jecxz
bound
and
sbb
fidivs
dec
js
and
in
or
clc
in
xchg
or
and
mov
das
add
imul
lret
lahf
jecxz
fdivs
aas
cmp
insb
jmp
int3
movsl
cs
xor
in
lahf
adc
loope
cltd
push
js
fsubr
insb
loope
xchg
sbbl
lret
pop
cmp
mov
add
test
ljmp
test
loope
pop
in
xor
iret
fidivrl
add
pop
in
mov
or
cmp
dec
fldl
ljmp
sbb
clts
out
hlt
stos
or
mov
fists
jle
dec
mov
insb
xchg
jno
ss
dec
rcrb
and
xchg
cmp
xor
lea
dec
jns
jl
fmul
push
cmp
push
xor
fsubr
pop
scas
pushf
clc
mov
mov
inc
inc
aaa
in
push
sahf
stos
mov
xchg
outsb
push
je
xchg
incb
fildl
cmp
push
int3
cmp
or
les
sti
mov
out
popl
xlat
mov
out
sti
movsl
jp
xchg
loope
inc
lods
jmp
fisubrl
cwtl
xorl
adc
fiadds
fstpl
push
lret
mov
cmp
test
lods
aad
fistpll
sbb
sbb
mov
mov
adc
les
dec
loope
inc
adc
iret
cmp
popf
sti
push
call
popf
pop
rorl
or
push
lcall
xchg
repz
mov
lods
into
aam
int
xor
out
in
mov
rorb
shrb
mov
test
in
mov
pop
lret
jl
loope
push
pop
test
mov
ja
jmp
je
sub
or
add
lods
inc
jae
cmp
into
lods
knotw
jp
in
hlt
int
sub
cmp
loop
cmpsl
test
lock
xchg
je
sub
mov
adc
dec
lret
stos
sub
call
cld
mov
lahf
enter
mov
push
jbe
and
and
xchg
dec
repnz
mov
sub
push
or
cmp
inc
sub
pop
adc
push
fisttpll
sbb
dec
push
movsl
and
or
push
cs
mov
inc
add
mov
stos
jno
xor
frstor
pusha
jno
aam
outsl
or
or
push
add
imul
jne
xchg
mulb
ds
xor
jae
iret
lods
sub
push
inc
das
js
sub
in
rorb
cwtl
adc
stc
fstps
cmpsb
sbb
pop
sub
dec
mov
sbb
mov
pop
test
pop
cld
or
inc
loopne
jmp
incb
adc
push
dec
gs
rcrl
in
mov
fldt
mov
hlt
inc
lods
and
in
lods
jp
push
jbe
xor
sbb
push
xor
scas
ss
imul
pop
or
aaa
cmpsb
jle
leave
pop
in
sub
adc
xchg
loope
mov
fldcw
sub
clc
fs
xor
enter
neg
sti
dec
ss
out
add
pop
idiv
push
jne
dec
add
mov
xor
jl
sahf
xchg
push
repnz
sbbl
std
xor
stc
dec
pop
xchg
add
mov
testb
or
jg
jae
adc
pusha
int3
dec
cmp
lcall
sbb
je
movsl
andl
sub
into
jno
push
imul
pop
dec
ret
aaa
test
out
cmp
sbb
mov
mov
push
jae
leave
ja
cmp
lcall
push
cltd
fwait
sbb
mov
loop
or
les
std
fstps
xchg
mov
sarl
inc
xchg
jmp
jb
jp
push
fmuls
xor
loope
test
cmp
or
testb
jns
mov
rolb
hlt
lods
stos
and
repz
addr16
int3
sti
punpcklbw
xor
sub
jne
fwait
icebp
and
inc
pop
lods
adc
in
enter
sbb
xchg
adcb
xchg
xor
int
xchg
fwait
sbb
lea
jns
dec
dec
mov
arpl
lods
adc
jns
xor
in
aam
pop
test
shrd
mov
ficoml
mov
push
ret
jnp
inc
in
iret
or
mov
or
xchg
bnd
es
dec
addr16
adc
mov
les
cltd
mov
add
data16
cmc
fbld
jle,pt
jbe
aad
loop
adc
sbb
je
fildll
pop
andl
add
rcl
das
mov
daa
stos
out
mov
add
cmpsl
scas
pop
mov
pop
inc
push
int3
dec
int3
ret
mov
imul
mull
rclb
les
dec
mov
jg
fisubs
add
std
inc
stos
leave
jo
out
in
shl
mov
lods
pop
addr16
or
sub
sub
fisubrs
les
dec
test
addb
mov
shl
fxch
loopne
sbb
bound
pop
das
push
dec
fadd
lret
ja
inc
add
in
mov
mov
xor
adc
stos
inc
jg
stc
shr
das
jae
inc
and
add
add
or
mov
mov
repnz
shll
inc
les
aas
sub
pop
les
call
cltd
repz
cmp
cmc
ret
mov
stc
insl
adc
sbbl
push
mov
jns
add
cmpsl
gs
addb
cmpsl
call
xchg
inc
xchg
push
xchg
jae
into
jno
fstps
nop
mov
fnstenv
pop
mul
mov
aas
sbb
lret
pop
lock
mov
addr16
fistpl
out
lret
or
xor
or
inc
lea
testb
movsl
filds
out
sub
dec
sub
mov
or
movsb
cltd
test
ja
cmpsb
xor
xchg
or
inc
jno
mov
dec
rcll
push
xchg
and
mov
adc
mov
idivb
mov
adc
int3
cmp
mov
xchg
xlat
repnz
mov
pop
jge
mov
sbb
lret
cmc
decl
dec
pop
or
fs
sbbb
pop
xlat
clc
hlt
fcoms
inc
mov
ds
push
cmpl
mov
jo
mov
and
jp
pop
leave
dec
mov
movsl
nop
sub
dec
jge
push
pop
icebp
dec
adc
mov
fidivl
fwait
das
xchg
inc
jmp
fwait
sbb
sub
or
cmp
icebp
jns
sub
lods
xor
jo
pop
into
mov
adc
gs
sub
filds
in
and
pop
in
pusha
stos
enter
shl
aam
setge
pop
or
mov
cmp
mov
fs
ds
mov
mov
mov
inc
push
and
mov
clc
mov
call
adc
mov
xchg
or
sub
fildll
shll
push
cmc
cmpsb
aaa
jp
pop
push
or
inc
push
pop
cs
out
ja
jne
pop
ret
lea
ss
cmpb
mov
repz
lods
sub
add
lahf
xchg
mov
lods
orb
nop
leave
cmc
xchg
cmc
in
inc
push
imul
sbb
in
cli
dec
fstl
sbb
mov
into
movsb
int
adc
ss
mov
add
xchg
inc
xor
scas
mov
mov
mov
push
cmp
cmp
sbb
mov
in
sub
mov
dec
fdivs
stos
cwtl
popf
xchg
push
xchg
mov
dec
inc
mov
cmpsl
andl
imul
mov
push
lret
imulb
sub
les
dec
jo
test
or
lret
dec
mov
ss
out
js
adc
sbb
stos
jo
dec
sub
adc
int
out
lock
movsl
cmp
pop
daa
insl
stos
sbb
jmp
pop
xchg
pop
sub
pusha
mov
or
hlt
or
add
cmp
imul
lahf
push
pop
mov
jne
xchg
loopne
insb
enter
or
cli
bound
adc
stos
bnd
or
xchg
xchg
pusha
aas
pop
push
sbb
std
stos
es
push
xchg
xchg
movq
xchg
mov
dec
cli
mov
cmpsb
iret
cli
stos
push
sub
inc
movsb
incl
jbe
jge
dec
dec
xor
sti
sub
mov
ljmp
jp
push
popa
push
shlb
sub
pop
or
push
out
ret
cmpsb
and
jmp
loope
addl
jle
xor
test
cld
pop
dec
push
add
test
andb
adc
insb
mov
bound
jl
lea
inc
mov
or
fists
mov
and
aam
sub
mov
daa
fdivrl
pop
in
sbb
or
cli
cmp
pop
mov
ds
add
popf
xor
sub
xor
cld
mov
fsubrs
outsb
push
loope
sti
mov
sub
xchg
push
push
inc
xchg
insb
popa
jmp
cmpsb
mov
loope
outsl
lds
dec
hlt
xchg
adc
arpl
jle
inc
push
sbb
xor
mov
lret
aaa
inc
inc
dec
in
sub
mov
fimull
sub
and
add
jne
add
imul
scas
push
test
mov
fidivl
dec
movsl
adc
push
out
sbb
mov
mov
inc
shr
lods
inc
xchg
ja
aas
jbe
dec
mov
scas
jb
sub
xchg
pop
pop
pop
fisubl
stos
sbb
cltd
sbb
xor
lods
push
push
jbe
inc
push
cmp
mov
imul
sbb
push
xor
mov
pop
inc
push
int
insb
arpl
and
imul
in
rcr
push
dec
aas
shlb
les
pop
push
ret
jns
dec
call
jbe
cltd
mov
scas
cmpsl
inc
or
push
jl
daa
mov
scas
fwait
lea
jecxz
jae
cmp
adc
add
push
outsl
pop
lea
fildll
cmp
test
push
nop
test
inc
inc
fwait
xor
jnp
and
inc
pushf
pop
out
pop
out
cmp
pop
int
loop
es
pop
and
adcb
pop
xor
out
ss
xor
outsl
fadds
inc
push
data16
and
xchg
mov
xor
daa
and
mov
aam
je
inc
xchg
sbb
xchg
loopne
lret
sahf
mov
dec
es
and
out
pop
push
rclb
xor
int3
stos
scas
or
xor
arpl
push
shll
and
clc
add
sub
mov
pusha
pushf
out
pop
mov
test
xor
dec
cmp
xchg
stos
pusha
cwtl
mov
dec
popa
lret
jl
mov
adc
dec
add
leave
movsl
mov
repnz
lret
ja
in
subl
inc
int
das
movsl
fisttpl
lods
dec
aam
jmp
add
movsb
leave
add
fsubrl
test
jae
jae
mov
add
je
into
pop
insb
ret
push
andb
pop
jmp
data16
and
xchg
sbb
inc
xor
mov
cmpl
adc
mov
mov
mov
repnz
xchg
pop
ja
es
pusha
scas
adc
push
test
push
leave
pop
fwait
or
mov
ret
repz
xor
leave
jle
add
shlb
xor
cmpsl
jp
mov
xchg
mov
ret
adc
sbb
test
cs
fcomip
and
push
in
iret
les
and
lcall
frstor
gs
inc
insb
fnstcw
cmp
mov
dec
xor
jl
sbb
dec
sbb
out
or
push
adc
xchg
test
jns
xchg
das
xor
or
shlb
fsubl
lret
dec
outsb
pop
push
lret
outsl
out
xchg
mov
mov
filds
cmp
sarl
and
popf
enter
jecxz
inc
cmp
les
push
mov
pop
lahf
pushf
lds
lock
mov
popa
jl
inc
mov
xchg
addl
testl
xchg
xor
addr16
enter
pop
lock
test
sub
mov
mov
clc
jns
pop
rcrl
cltd
xor
sbb
sbb
cli
and
arpl
rcll
adc
nop
jno
aas
cmc
in
inc
gs
shlb
adc
neg
mov
cltd
and
mov
fiaddl
inc
ljmp
dec
push
sub
lds
inc
and
movsl
out
xor
lods
or
cmp
pop
mov
push
jb
and
cmpsb
cmpsl
jmp
pop
les
adc
inc
xchg
jnp
movsb
and
sti
push
inc
nop
xchg
add
hlt
je
fiaddl
daa
out
push
xor
movl
rcr
cwtl
dec
mov
xchg
adc
mov
mov
lahf
roll
mov
xor
push
add
and
inc
add
roll
mov
xor
push
add
and
inc
add
roll
mov
xor
push
add
and
inc
add
roll
mov
lret
leave
mov
mov
mov
fcmovbe
stos
sarl
lret
cmp
sbb
xor
mov
push
jp
mov
lcall
mov
aam
or
xor
inc
cmp
and
push
jp
sub
pop
inc
xor
int3
scas
cli
rcll
or
cmp
dec
pop
sbb
inc
sbb
lahf
into
lods
fcmovnbe
stc
test
mov
mov
cmp
adcl
je
and
xchg
add
pop
push
fiadds
fbld
push
sbb
or
xchg
adc
push
pop
jge
adc
aaa
psrad
js
loopne
cltd
sbb
or
les
mov
cmp
lcall
mov
ja
popa
cli
aad
mov
xlat
adc
in
addr16
push
pop
inc
dec
stc
sub
sbb
or
push
sub
dec
push
lret
je
and
cmp
gs
aas
push
test
outsb
lcall
fdivr
mov
mov
xchg
adc
faddp
mov
xchg
ljmp
daa
sub
jns
sub
mov
fisubrs
mov
lahf
cmpl
inc
or
adc
mov
mov
leave
push
imul
push
js
or
dec
pop
js
inc
or
xchg
loop
mov
cli
jno
popa
sbb
inc
cmp
dec
and
push
jp
mov
lcall
mov
cli
jno
popa
sbb
inc
cmp
dec
and
push
jp
mov
adc
add
dec
sar
inc
and
sbb
pusha
xor
xor
shrl
imul
out
sbb
pushf
or
xor
rorb
mov
inc
fisttpl
and
testb
cwtl
pop
xchg
mov
in
mov
ret
dec
cmp
mov
dec
jnp
shll
mov
or
dec
repnz
insl
lret
dec
fmul
insl
int3
jnp
dec
lret
rcrb
outsb
lret
xchg
pop
aad
xor
cmpsb
shr
sbb
or
fcoml
xchg
or
rcrb
std
cs
pop
jb
jne
mov
insl
adc
cmp
or
xchg
data16
xor
add
imul
rcrb
cmp
test
xor
sbb
sub
xor
leave
aad
test
inc
sti
pop
sbb
push
jge
xchg
mov
in
cmp
adc
mov
adc
push
mov
fldt
or
pusha
shr
inc
sub
fstpl
jl
push
mov
mov
jo
lcall
inc
xorb
andl
push
jmp
cmp
loop
pop
and
jecxz
out
or
mov
mov
jnp
cmp
inc
cld
stos
nop
xchg
fcoml
gs
insb
ja
add
pop
push
xchg
dec
scas
mov
pop
repz
inc
into
push
mov
shl
into
xchg
fucomip
sahf
push
outsb
mov
pop
jl
push
push
stos
popa
jnp
aam
push
stc
mov
outsl
push
int
xchg
dec
faddl
and
pop
cmp
mov
je
and
xchg
pop
popa
pusha
mov
int
aaa
std
sarb
shll
xchg
in
mov
mulb
mov
cs
sbb
xchg
fldenv
lods
int3
ds
out
inc
and
xlat
dec
cmp
std
fildll
pop
mov
inc
add
cwtl
lret
or
lods
pop
fs
pop
push
mov
enter
mov
xor
repnz
and
lret
cmc
outsl
rcll
or
sti
add
lds
loope
arpl
pop
aam
jge
fwait
xor
adcl
xor
pushf
lea
push
sti
lea
in
inc
xchg
sub
sbbb
repz
scas
xor
fldcw
fadds
subb
js
mov
ret
into
xor
and
jg
mov
xor
loope
leave
pop
rclb
push
es
push
cmp
pusha
in
sbb
stos
add
pusha
mov
subb
inc
js
mov
pop
pop
lock
rorl
xchg
fimuls
aam
pushf
repz
ss
sub
leave
jae
movsb
sbb
xor
cli
or
push
mov
cs
jp
sbb
in
xchg
in
dec
dec
ja
fwait
inc
jmp
das
push
fdivrs
pop
psubsb
insb
aam
aam
repnz
jle
jge
mov
int3
das
push
out
mov
xor
icebp
adc
dec
cmp
xchg
sahf
cmp
push
ljmp
fistpl
lds
dec
scas
es
jmp
adc
movlps
das
mov
subb
mov
sub
in
cmp
scas
cmc
popf
movsl
imul
mov
hlt
or
adc
mov
jl
jae
sti
push
jp
lret
xor
add
cli
sbb
cwtl
xchg
out
or
push
clc
ds
mov
xlat
xchg
fwait
cmpsb
icebp
pop
push
ret
lret
cmc
pop
xchg
xchg
iret
ret
fisubrl
and
push
shrb
pop
pop
xchg
out
test
call
inc
sub
fstps
stos
das
into
stos
xchg
and
and
xchg
test
test
mov
imul
roll
mov
mov
test
push
outsl
or
mov
in
loopne
fdivs
test
leave
enter
xchg
popa
je
outsl
shll
ds
in
out
push
rorb
and
xchg
mulb
pushf
mov
scas
addr16
lret
mov
mulb
in
jne
addb
xor
xchg
shl
jmp
sub
inc
inc
or
sbb
scas
fadd
mov
mov
pop
dec
mov
mov
dec
jg
cs
cmp
add
lods
js
xor
loop
test
fwait
rolb
das
inc
cltd
add
xchg
sub
pmuludq
pop
or
bound
in
jge
mov
push
jno
int3
jle
xchg
mov
ljmp
cmp
push
cmp
nop
push
pop
cwtl
sbb
push
add
scas
mov
movsl
lods
mov
int
rcl
fwait
xchg
fcompl
dec
aam
in
adc
test
push
or
xor
and
sarb
les
sub
adc
mov
xor
mov
mov
imul
dec
lcall
popa
shlb
das
dec
xchg
imul
pop
idiv
out
jne
lret
sbb
popa
xchg
cmp
fmuls
or
or
lea
out
call
mov
filds
xor
lret
pop
add
jg
jmp
and
icebp
cmp
cmc
outsb
nop
shll
xchg
xlat
movsl
imull
jecxz
and
repnz
pop
aas
lods
lea
push
jnp
adc
and
xor
shll
cmp
push
push
mov
inc
in
std
cmp
pop
outsl
push
int3
or
mov
hlt
pushl
and
cmp
lret
rol
mov
les
mov
sbb
inc
decl
mov
insb
jecxz
mov
sbb
insb
jno
or
lret
pop
fists
imul
aaa
aad
rcll
jp
xor
add
bound
xor
xorb
push
aaa
jbe
nop
icebp
mov
xor
mov
inc
dec
inc
sub
inc
sub
test
jmp
faddp
add
imul
inc
les
into
xchg
clc
add
xchg
mov
int
lds
jo
cmp
push
mov
outsl
or
inc
lea
iret
je
jp
loop
mov
out
push
adc
xchg
dec
hlt
sbb
lock
jle
mov
mov
shrl
lcall
and
bound
mov
adc
add
mov
mov
cli
call
loope
xchg
imul
jge
lahf
stos
loopne
test
dec
dec
adc
mov
movsl
or
dec
xchg
push
pop
mov
cmc
shll
and
mov
add
add
mov
nop
xor
loopne
add
mov
out
leave
push
inc
mov
aas
sbbb
dec
ret
aas
enter
mov
mov
je
cmp
addb
adc
mov
repz
shr
cmp
ret
mov
cltd
shl
push
jns
int
sbb
das
test
outsb
test
mov
or
and
fisttpl
sub
sbb
lcall
mov
mov
or
iret
lds
pop
cmp
fidivrs
fdivrl
aas
js
leave
je
sbb
leave
test
cld
jnp
lcall
pop
sub
int
and
sub
sub
mov
lret
imul
insb
inc
dec
xor
cmp
mov
ret
push
or
fwait
jmp
movsl
sub
stc
popa
xchg
adc
adc
xchg
add
fdivrl
lcall
loopne
fsubs
jb
adc
mov
push
inc
mov
sub
clc
repnz
xchg
or
mov
jecxz
xchg
imul
xchg
outsb
aam
mov
in
and
pop
pop
lods
pushf
jp
stc
andl
xchg
sub
adc
pop
inc
cmc
nop
mov
mov
pop
outsl
hlt
imul
in
inc
popf
mov
mov
push
and
xor
cs
loop
dec
rcrb
stos
cmc
jbe
jnp
ljmp
fistpl
push
xor
xor
divb
dec
jae
mov
fbld
clc
xor
mov
add
inc
sub
and
mov
mov
dec
jns
inc
inc
mov
xor
cmp
nop
pop
fisubs
mov
inc
jp
ljmp
jbe
test
repnz
jge
ja
push
push
lea
jae
add
jb
push
lahf
insl
scas
ss
mov
insl
fcomps
inc
inc
lds
jg
mov
iret
jg
in
sub
inc
adc
shrb
inc
lret
mov
inc
icebp
mov
mov
loopne
rol
inc
cmp
stos
test
inc
sbb
and
arpl
xlat
push
inc
int3
push
nop
aam
test
lock
jnp
or
jae
mov
mov
es
aaa
mov
leave
dec
jl
cmp
mov
aam
lods
xor
mov
cwtl
lock
mov
mov
shll
mov
mov
sbb
xchg
pop
xchg
sbb
and
fsts
xchg
mov
dec
clc
lret
pop
test
pop
or
jmp
sbb
add
mov
cld
adc
jno
sub
inc
fbstp
stos
sub
std
aam
bound
cld
bound
add
add
pop
std
addr16
jmp
jne
leave
push
adc
loop
mov
sub
leave
out
cmc
data16
lahf
loop
xchg
addr16
test
into
xor
jecxz
in
pop
and
stos
daa
mov
adc
imul
mov
addr16
fdivrs
or
adc
push
inc
xchg
sub
fbstp
xchg
pushf
jns
addr16
xor
stc
mov
sub
outsb
popf
cmp
rcrb
and
fstps
test
xchg
and
pop
adc
mov
mov
cld
push
mov
mov
xor
sarl
pop
popw
or
jb
cmpsl
push
push
xchg
je
movsl
jle
sbb
sbb
out
imul
imul
pop
pop
inc
scas
xor
aad
addb
icebp
or
jle
jbe
lahf
pop
gs
mov
std
ljmp
pop
jecxz
pop
push
or
in
xchg
scas
into
movsl
xlat
or
sbb
outsb
sub
repz
xchg
shlb
mov
or
push
mov
lock
jb
call
sub
das
dec
imul
xchg
or
inc
cmp
lret
jno
mov
fsts
shll
fs
andb
mov
repz
and
push
cld
aaa
mov
xor
aas
sub
add
cli
sbb
repnz
jbe
and
out
test
nop
xlat
sub
movsl
sub
or
cmc
push
into
and
ficoms
cmp
xlat
or
dec
nop
sbb
mov
and
imull
mov
out
dec
lret
popf
inc
and
jne
mov
in
rcrb
js
and
mov
pushf
lock
in
jns
bound
sub
loopne
mov
cmp
inc
xchg
jmp
test
mov
mov
jle
mov
out
inc
lods
mov
arpl
sarl
pop
mov
jl
mov
push
icebp
jmp
mov
xor
mov
xor
fsts
mov
dec
mov
jg
mov
out
cs
pop
mov
int3
jns
dec
cmpsb
nop
int3
movb
andb
js
rolb
fistpl
in
ss
aaa
xchg
sarl
aad
pop
mov
inc
nop
or
inc
xor
fnstsw
push
outsl
push
sbb
rcll
sbb
into
jbe
shll
pop
test
imull
pop
dec
loopne
clc
ret
xchg
sub
call
cmp
ret
repz
int3
jp
aad
dec
rclb
push
add
clc
rorb
xchg
inc
repz
cld
xchg
inc
cli
shlb
mov
adc
xchg
stc
stos
roll
cmp
scas
xchg
and
sbb
cld
dec
lock
add
sbb
pop
movsl
lret
cmpsb
push
shll
add
lcall
cmp
lods
je
pop
insb
xchg
stos
sar
cmpsl
arpl
stc
insb
jmp
rol
adc
shl
xor
pop
in
test
pop
sub
dec
ds
pop
dec
pop
or
ss
int3
fsubs
mov
dec
sub
adc
imul
jo
dec
adcb
jnp
das
rolb
mov
xor
jg
js
jle
cwtl
daa
adc
js
jbe
sub
jns
popa
pop
fidivrs
ljmp
cmp
cmp
cli
jne
fmul
mov
adc
pop
push
cld
xorl
jecxz
inc
fldt
sbb
imul
sub
fmuls
add
inc
lret
out
mov
fnsave
cmp
mov
stos
xchg
testb
ja
fdivl
add
push
mov
or
cmc
data16
into
xor
ljmp
icebp
addr16
jbe
mov
jne
movsl
lea
insb
cmc
lods
jnp
fisubrl
adc
inc
inc
repz
dec
ret
pop
fidivrl
fbld
jp
mov
ret
jecxz
inc
ljmp
xchg
dec
scas
gs
call
pop
mov
stos
in
xchg
into
leave
lret
cmpsb
cmp
mov
fsts
mov
out
stc
js
cli
fadd
push
js
push
xchg
ja
cwtl
xchg
add
clc
movsb
push
arpl
faddl
int3
cwtl
xor
daa
cmpsb
subb
mov
add
mov
ljmp
outsb
xor
movsb
push
pop
lret
adc
sahf
jecxz
pop
adc
int
gs
push
scas
mov
pop
and
fwait
hlt
rcll
and
and
mov
icebp
and
mov
push
jo
pop
pop
and
movl
xchg
pushl
xor
push
popf
and
aaa
and
pop
mov
loope
mov
bound
pop
fwait
out
icebp
imul
pop
mov
mov
bound
mov
pop
jae
ret
sbb
adc
jns
add
mov
push
xchg
or
jp
jno
loop
repz
sbb
push
ret
and
pop
cltd
out
test
inc
add
add
dec
mov
bound
jl
jp
mov
lock
mov
aam
mov
leave
mov
mov
andb
xorl
mov
inc
cli
xor
inc
xor
sub
xchg
push
stc
xchg
rorl
fistpl
cmp
mov
adc
pushf
scas
mov
cmp
cltd
out
stos
das
xchg
mov
sbb
adcb
pop
icebp
lds
ficoms
subl
cwtl
outsl
ror
mov
pop
div
fcoms
cmp
xchg
xchg
in
inc
mov
ljmp
sub
cmpsb
mov
insb
add
xlat
jl
xor
cmp
xchg
insb
lods
push
mulb
test
inc
leave
add
inc
dec
push
jae
out
cmpsl
int
cltd
dec
test
notl
icebp
xor
shrb
adc
push
jmp
pop
arpl
pop
rep
cwtl
xor
xchg
lret
and
sub
mov
lahf
push
cmc
into
and
jae
dec
in
movsb
out
jmp
adc
popa
and
xor
or
pop
mov
pop
test
or
add
jae
aaa
test
out
icebp
dec
cmc
iret
dec
addr16
mov
inc
lea
popa
pop
sbbb
ret
pop
negb
cmp
dec
jp
dec
dec
sti
imul
insb
push
leave
xor
cld
in
les
ret
mov
and
mov
mov
cmp
or
push
push
dec
mov
jns
test
adc
mov
aad
sbb
mov
gs
je
dec
ja
test
adc
ja
pop
lea
dec
jne
mov
movsb
call
mov
push
aaa
ss
xor
gs
xchg
mov
cmp
fwait
push
cmp
data16
jo
pop
movsb
and
xchg
jne
mov
dec
xor
push
shl
push
cmpsl
es
sub
imul
bound
das
cmp
or
outsl
sbb
push
inc
loop
sbb
hlt
lret
xor
or
cmp
gs
les
mov
icebp
xchg
jnp
dec
jbe
mov
jle
sub
add
and
mov
daa
jp
into
enter
jmp
inc
je
adc
pop
fstpl
ds
aas
js
xor
sbb
testb
add
outsb
sti
push
fwait
in
mov
mov
push
pop
mov
pusha
ljmp
sub
shrb
idiv
xor
dec
loope
and
lret
pop
or
cli
and
push
inc
fs
mov
dec
iret
es
pop
xchg
lds
insb
negl
dec
adc
push
daa
cmp
dec
pop
and
mov
mov
orb
sbb
fs
popa
pop
inc
divb
sub
mov
js
sub
mov
sub
sbb
aam
outsl
pop
outsb
int
lods
pop
sbb
inc
stc
jle
sub
inc
loopne
jl
push
jecxz
sarb
cmp
aad
and
pop
jge
add
fwait
sub
rorb
jg
scas
xor
int
cli
vandpd
mov
xor
sbb
pop
sub
and
cld
xlat
add
in
mov
mov
lahf
lock
xchg
mov
push
lret
ds
insb
pop
fsubs
ret
jnp
fdivs
insl
push
pop
push
clc
outsb
rcll
mov
bound
lret
int3
and
ss
in
out
ss
jb
cmp
jmp
pusha
jge
sub
bound
cmpsb
mov
pop
das
pop
pavgb
int3
fsubs
out
sub
pusha
ret
push
adc
add
nop
push
push
popa
sub
adc
aaa
popf
incl
jns
jecxz
xor
cmpsb
lret
or
push
mov
sbb
subl
jae
mov
iret
mov
pusha
mov
adc
ret
adc
add
nop
fs
loope
and
iret
inc
push
mov
fmul
dec
test
and
and
jno
clc
aas
int
sbb
xor
sbb
push
add
fbstp
int3
bound
push
mov
dec
or
insb
scas
stos
movsl
divb
loop
xor
mov
movsl
sub
lcall
test
mov
cmp
mov
jl
mov
lahf
add
pop
push
dec
imul
adc
xchg
push
cmp
mov
jg
test
les
push
mov
pop
addb
inc
add
aas
jo
and
loopne
mov
and
cmp
js
lds
int3
push
cmp
fldenv
push
sbb
call
inc
into
mov
dec
xor
mov
xchg
ja
pop
sub
xchg
mov
adc
ret
inc
ds
sbb
fnstsw
mov
xchg
and
cmp
jb
sbb
xchg
pop
adcl
enter
pop
cs
sbb
orl
push
fdivrl
add
sbb
and
dec
push
push
push
cmp
jge
int3
insl
sub
pop
lahf
mov
pop
cmc
jo
inc
lock
cmpsl
jge
dec
adc
lret
in
cmpsb
std
loopne
push
mov
mov
xor
sub
in
sub
and
and
mov
and
jecxz
mov
xchg
mov
lock
shlb
ret
xchg
cmp
shlb
enter
pop
mov
test
push
or
mov
jl
inc
cmp
out
rolb
out
xchg
fwait
sbb
adc
and
fstps
test
mov
fbld
jmp
mov
sbb
sub
repz
cmp
mov
cld
add
or
cmp
push
lret
or
dec
mov
dec
cmp
mov
ds
in
dec
mov
out
out
test
mov
mov
rcl
adc
mov
int
and
xchg
lds
fidivrs
mov
xchg
push
lea
popf
cmpb
jl
and
push
inc
clc
and
ret
adc
rep
aam
and
imul
test
jne
add
jns
push
adc
add
and
aaa
ficompl
inc
cs
pop
pop
sub
daa
jge
sbb
stos
fistpl
mov
mov
cli
jno
popa
sbb
inc
cmp
dec
and
push
jp
mov
lcall
mov
cli
jno
popa
sbb
inc
cmp
dec
and
push
jp
mov
xchg
mov
sarl
out
inc
cli
jno
popa
push
mov
dec
xor
arpl
sahf
in
mov
cli
mov
mov
xchg
push
cmp
sahf
mov
sub
inc
xor
add
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
rcrl
xor
add
clc
jns
xchg
fldl
add
push
or
add
or
pop
push
add
inc
add
int
int
pop
add
add
add
add
inc
add
jae
sub
or
mov
xor
add
add
add
add
bound
sub
add
sub
and
or
stos
add
add
test
cmp
push
add
dec
add
add
add
or
add
add
mov
add
add
pop
add
scas
add
add
pop
add
lret
add
pop
add
add
add
bound
hlt
add
add
add
add
push
add
sub
add
pop
add
rolb
mov
add
add
add
add
add
and
push
add
add
dec
add
add
add
add
add
add
jnp
cmp
add
hlt
add
add
add
scas
add
add
add
pushf
add
add
add
add
add
add
pop
add
add
add
add
add
add
out
mov
xchg
xchg
add
add
pop
add
add
add
add
add
adc
xor
arpl
mov
add
add
push
add
add
add
mov
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
test
cmp
mov
mov
add
add
add
add
add
add
add
xchg
add
add
cmpsl
add
add
sbb
pop
add
sub
dec
add
add
add
add
cmp
lds
add
add
add
add
stos
add
pop
add
add
add
add
add
add
add
add
add
jnp
mov
add
add
add
jnp
jl
add
add
add
or
or
filds
push
add
add
push
add
add
add
jae
popa
add
add
xchg
add
add
add
add
add
add
add
add
mov
cmp
add
add
add
adc
lea
mov
add
hlt
add
add
add
add
add
add
sub
adc
sub
dec
add
add
add
add
add
add
mov
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
jae
roll
add
or
clc
add
cmp
mov
add
add
add
add
add
add
add
sahf
add
add
add
add
add
pop
add
add
pop
add
add
bound
hlt
add
add
test
sahf
add
add
add
add
add
add
add
or
lahf
add
add
add
add
add
hlt
add
add
and
les
xchg
add
add
add
add
add
xchg
mov
js
pop
fcom
rcrl
pop
aam
adc
xor
rcl
or
push
fcmovb
xchg
pop
scas
and
jne
jecxz
cmp
shlb
xchg
ret
push
cmp
cmpsl
jnp
enter
ja
popf
add
addr16
dec
push
cmp
or
stos
pop
lods
dec
adc
ljmp
ret
clc
mov
ret
leave
push
inc
sti
nop
mov
popf
stos
cmp
std
cmp
fstpt
jo
xchg
pop
pop
pop
outsl
pop
movsl
push
sbb
orl
aaa
stos
pop
mov
fisubrs
je
fbld
clc
int3
leave
adc
lret
rcll
shr
leave
into
dec
sub
pop
shlb
adc
xchg
sub
xchg
ret
dec
and
aad
sbb
or
fs
xchg
push
out
popf
xor
test
cmp
push
sbb
pop
push
bound
xlat
xor
shlb
push
or
adc
xchg
sbb
inc
add
js
jb
ljmp
out
sbb
mov
ja
pop
enter
xchg
pop
xchg
aaa
mov
cld
ret
jne
mov
mov
xlat
out
sub
add
nop
aad
xor
sub
mov
cmpsb
pop
mov
inc
mov
lods
in
fdivrs
xor
mov
int
leave
ss
in
pop
xor
cmpsb
stos
loope
cmpsl
and
or
ss
mov
xchg
popf
adc
push
lds
push
test
dec
stos
jl
inc
mov
shl
dec
cmp
aas
mov
fldt
clc
movsl
lods
and
in
and
or
jg
clc
out
jecxz
push
push
lock
je
lods
sbb
jp
setg
sbb
cltd
mov
fmuls
mov
or
loopne
int3
sbb
mov
decl
xchg
outsl
adc
insl
push
push
int
pusha
push
jle
mov
mov
sbb
or
repz
std
cld
lahf
dec
dec
xorl
push
jp
mov
insl
out
xchg
pop
jae
adc
xchg
aad
cmp
cmp
imul
xor
mov
mov
rorl
leave
cmc
ja
cwtl
adc
test
inc
negl
lret
lods
and
ss
fistps
inc
adc
xchg
inc
mov
xor
or
mov
mov
mov
pop
sbb
lret
xor
mov
subb
or
shll
inc
popf
int3
mov
push
jp
jl
cld
sbb
push
mov
mov
push
push
insb
out
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
