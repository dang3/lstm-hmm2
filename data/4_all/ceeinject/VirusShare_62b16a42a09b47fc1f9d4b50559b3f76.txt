call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
jne
inc
xor
and
adc
int3
pop
jo
mov
movsb
shlb
adc
inc
xor
and
jo
and
cmc
rol
aad
rcl
loopne
lock
mov
inc
call
xor
in
mov
enter
stos
jecxz
jmp
outsb
sub
push
pop
xor
fidivrl
mov
sahf
test
shl
hlt
push
in
gs
mov
xor
std
lahf
jbe
in
and
mov
out
loopne
pinsrw
push
mov
xchg
es
mov
sti
push
in
hlt
mov
mov
rcrb
mov
or
pop
fsubr
js
lds
add
or
nop
or
dec
push
aas
mov
push
loope
lock
jmp
lods
pop
mov
push
sti
adc
mov
not
movsl
sbb
cld
jne
cmp
arpl
sti
into
pop
mov
popl
mov
xchg
icebp
sub
and
test
push
gs
jne
inc
xor
and
adc
lds
mov
test
shrl
bound
add
adc
bound
inc
adc
jo
adcb
movsl
mov
mov
lock
or
push
or
xor
cmp
add
mov
sarb
insb
and
es
and
adc
push
xor
and
cmc
mov
movsl
shlb
add
jne
inc
xor
and
jo
and
cmc
mov
movsl
shlb
add
pop
loop
lock
sarb
icebp
jmp
mov
add
xor
cmp
push
pop
addr16
push
test
aas
ja
ljmp
xchg
mov
es
pop
sub
dec
xchg
gs
xor
dec
imul
sbb
arpl
inc
mov
push
sbb
cmp
clc
stc
and
enter
into
jge
lret
cmp
xchg
lods
and
mov
add
inc
pushf
ds
mov
insb
mov
pop
addl
insb
pusha
jno
lea
push
cmp
loop
pushf
lea
mov
stos
out
mov
popf
and
dec
repnz
popa
and
mov
rorb
inc
std
clc
imul
fwait
lret
sub
js
cmp
and
imul
cltd
xor
sahf
mov
lret
sub
xor
sub
cmp
cmp
enter
xor
sti
jmp
ja
jns
adc
push
add
aam
shrb
sub
lahf
add
test
lahf
mov
out
das
js
repz
and
ret
xchg
mov
fwait
cmp
cmc
sub
cld
mov
add
loopne
push
cmpsb
ds
inc
jmp
bound
cwtl
clc
cltd
add
sbb
and
xchg
ds
imul
jecxz
mov
xchg
std
cmp
xchg
mov
sbbl
mov
pop
sbb
cli
fimuls
adc
or
pop
sbb
sbb
push
xor
dec
loope
rcll
pmulhuw
pop
bound
pushf
jmp
sbb
pop
testb
pop
scas
inc
int3
adcb
mov
rol
imul
mov
cmp
xorl
sbb
clc
jb
xor
mov
mov
mov
mov
les
aam
lock
push
lcall
or
into
or
xchg
adc
shlb
mov
nop
xorb
adc
cwtl
cld
int
cmp
cmove
cmc
add
std
xchg
movsb
push
cltd
jbe
pop
mov
push
arpl
cmp
lcall
adc
in
shlb
call
xchg
xchg
iret
adc
dec
lahf
add
sub
adc
scas
cmp
mov
mov
sub
std
mov
sub
inc
inc
mov
ret
shll
xor
mov
ss
cltd
and
or
mov
or
dec
notl
stos
inc
enter
test
sub
inc
stos
push
jl
cmc
imul
mov
loopne
fsts
xor
or
sti
imul
movsl
ja
punpcklbw
imul
pop
inc
pop
pop
ret
aad
push
cmp
aam
jge
hlt
sbbl
dec
movsl
and
mul
xor
insb
mov
cmp
pop
pusha
adc
shl
call
inc
push
hlt
in
push
ss
sbb
pop
std
sub
dec
pop
push
imul
pushf
out
cmp
jp
std
xor
push
xchg
sub
je
lea
inc
adc
mov
pop
xchg
jnp
scas
dec
sbb
in
insl
adcb
cmp
mov
movsb
pop
sti
and
stos
jge
arpl
mov
mov
lock
aas
outsl
pushl
rcl
dec
mov
and
sti
lods
mov
xor
inc
mov
cs
fdivrs
add
cmp
pusha
cltd
push
stos
jnp
xchg
popa
arpl
shr
mov
inc
lret
cmpsb
inc
mov
add
jg
out
cmc
movsb
push
add
lds
data16
mov
bound
in
and
lods
jmp
pusha
sub
xchg
loopne
cmp
ljmp
lds
lahf
cmp
cmp
xchg
daa
outsb
dec
enter
lret
push
add
mov
adc
popa
out
in
in
or
dec
inc
push
leave
out
xchg
xchg
dec
adc
in
imul
dec
sbb
mov
cmp
pop
inc
clc
out
push
push
lahf
mov
jge
xor
sbb
adc
divl
orb
jb
popf
pop
sub
sub
pop
lock
cmp
mov
lods
mov
pop
cli
mov
cmp
lret
xor
mov
mov
dec
xor
fdivrs
out
pop
nop
dec
sbb
add
and
jne
sub
cwtl
push
sti
adc
pusha
call
mov
out
jne
pop
mov
mov
pop
mov
in
insb
cld
xor
mov
fadds
outsl
shl
mov
or
mov
cmp
mov
out
xchg
adc
mov
sub
gs
arpl
and
or
out
xchg
aam
adc
ja
pop
cmp
mov
jl
lock
adc
dec
mov
cltd
push
andb
mov
mov
push
in
mov
sbbb
ss
sub
loopne
mov
push
dec
inc
sbb
lcall
push
push
repz
je
mov
lods
inc
and
xor
in
xchg
pop
xor
xchg
loope
add
mov
or
push
out
pop
lds
add
push
stc
nop
popf
cltd
mov
in
subb
mov
jmp
lea
add
dec
lcall
sar
ret
aam
push
mov
sub
subl
lods
rcr
ja
jne
sub
xchg
popa
in
xchg
sbb
mov
iret
fisubs
das
add
aas
jns,pt
pop
jo
test
dec
mov
jb
insl
loope
mov
mov
push
mov
ficoml
mov
aaa
add
xor
pop
in
nop
sub
mov
lea
pxor
or
int
and
jno
cmpsl
icebp
jp
into
inc
loop
cmp
and
enter
xor
rcr
fmull
dec
scas
xchg
repnz
ss
sti
adc
addr16
add
sub
jnp
mov
adc
adc
sub
loope
test
out
clc
inc
stos
hlt
loope
inc
inc
push
loope
or
aam
dec
cmpsb
aaa
popf
insb
js
adc
sbb
adc
pop
or
clc
cmp
xchg
jo
mov
in
pop
aad
das
insb
mov
sub
mov
lret
ljmp
test
cmpsb
shlb
sahf
fcom
add
pop
push
sub
sub
aas
mov
xor
mov
cmp
pushf
xlat
idivl
insb
cmp
js
mov
mov
xlat
xchg
sbb
sbb
rcll
addr16
inc
scas
or
test
jbe
cmp
jns
cmpsb
adcb
jle
push
arpl
jg
sub
test
sub
sbb
sub
inc
jae
jne
adc
xchg
add
mov
sbb
lods
add
cmc
mov
movsb
test
jecxz
sbb
je
lods
jp
shl
dec
add
repz
jmp
lock
dec
sub
ret
sbb
push
push
push
jmp
dec
push
sbb
xor
pop
mov
jle
ljmp
inc
inc
xchg
xchg
das
sbb
lahf
sub
push
xchg
mov
mov
jno
xchg
scas
or
stos
gs
inc
lret
jo
je
mov
and
gs
sub
xchg
jo,pn
rolb
sbb
xor
out
pop
daa
xchg
in
outsl
adc
push
pop
or
arpl
std
or
out
add
mov
mov
stos
or
pop
mov
ret
popf
pop
mov
and
addr16
xlat
mov
push
dec
cmp
js
mov
ss
mov
xchg
popf
add
xor
sub
cmpl
add
enter
cmp
test
pop
sub
mov
xorb
or
lahf
arpl
push
sub
ss
dec
xor
pop
xchg
pop
or
out
jne
adc
cmp
inc
sub
mov
ljmp
lods
mov
mov
jp
add
movsb
addl
mov
shrl
outsl
jge
or
pushf
mov
inc
enter
fstpl
add
xchg
cltd
repnz
mulb
or
or
int
sbb
std
pop
push
mov
je
or
in
dec
cmp
sarl
mov
push
leave
shl
shll
aas
jnp
imul
pop
dec
roll
cmpsb
mov
jo
sbb
sub
or
pavgw
nop
sahf
in
mov
jle
std
xor
fs
xchg
inc
insb
push
pusha
sbb
dec
aaa
andl
insb
cwtl
jns
xchg
push
add
lock
cmp
testb
into
in
pop
sub
shr
mov
pop
xor
pop
jl
lods
scas
or
cmp
jo
and
repnz
mov
mov
lahf
add
pop
or
xor
movsb
call
mov
or
lret
shlb
mov
push
addr16
xchg
mov
adc
xlat
repz
loope
xor
lods
ror
pop
jl
pop
lods
adc
cmc
add
ss
jae
aas
aaa
mov
pop
add
pop
push
std
shl
xchg
push
stc
stos
loope
stos
popf
mov
sarb
out
mov
dec
mov
sbb
fs
sbb
add
lods
cli
jb
dec
in
sub
lds
nop
and
subb
out
movsb
sbb
fxch
xchg
sbb
mov
push
pop
lds
dec
std
jbe
lock
scas
stos
inc
frstor
push
movsl
cmpsb
dec
les
cld
clc
lock
aad
and
orl
movl
lods
outsb
lods
nop
in
mov
jbe
in
test
call
dec
or
xlat
lret
fnstcw
pusha
lods
inc
mov
and
and
shrl
and
adc
push
dec
fmull
insb
out
push
call
lcall
repnz
test
or
aam
add
faddp
push
sub
inc
scas
cmpsl
mov
and
test
push
or
in
push
in
jae
out
scas
or
xor
push
inc
jae
loop
inc
repz
in
adc
outsl
pop
js
xor
test
xchg
repz
cs
fstl
cmpsl
xchg
test
cmp
jne
sbb
pop
mov
dec
fisttpll
fcompl
or
xchg
lds
lcall
jb
sbb
aas
call
sub
inc
mov
mov
mov
push
xor
jb
mov
xor
pushf
notb
dec
mov
jnp
jb
mov
push
lahf
call
lds
std
daa
ret
inc
js
jge
aam
add
xchg
sarb
stc
or
xchg
push
jae
xchg
adc
adc
stos
sbb
scas
pop
jl
sbb
arpl
cmp
xchg
jmp
push
outsb
push
in
fwait
enter
daa
push
pop
mov
cmpsl
int3
out
or
push
aam
add
movsb
mov
xchg
dec
add
stc
jb
inc
stos
imul
push
bound
sbb
fbld
js
test
dec
and
or
pop
jmp
testl
enter
cwtl
movsb
lcall
inc
mov
leave
cmpsl
sub
outsl
sbb
mov
and
ljmp
dec
mov
imul
lods
xor
lret
jecxz
mov
movups
icebp
mov
enter
fwait
jns
jecxz
inc
xor
sahf
xlat
stos
jae
lock
out
push
push
or
push
push
mov
mov
imul
sbb
ffreep
sbb
arpl
or
mov
icebp
push
jb
je
pop
out
rorb
xchg
loope
jmp
ss
rcll
mov
inc
dec
xchg
sub
mov
sub
sub
pop
flds
dec
fucomip
mov
das
aaa
mov
mov
push
jmp
sar
jnp
adc
faddl
dec
dec
clc
mov
push
leave
pop
ljmp
mov
loopne
mov
sahf
xorl
ret
mov
xlat
aas
pop
mov
lret
mov
lea
jp
inc
cmp
xchg
shlb
adc
mov
push
test
cmp
int3
jl
shrb
xchg
jo
icebp
cmp
repnz
jno
adc
jmp
or
sbb
mov
lahf
cli
pop
jg
inc
push
mov
movaps
fcoml
data16
scas
inc
popa
es
xchg
sub
cmpsl
iret
lcall
imul
jmp
das
xlat
shrb
cmp
call
sahf
cmc
adc
jo
xor
and
push
roll
inc
decl
cmc
and
mov
and
call
mov
stos
mov
sub
sbb
orl
add
mov
sbb
push
cmc
movsl
out
sbb
sbb
lcall
push
mov
and
cmpb
jns
imul
js
adc
das
mov
ss
int3
mov
mov
cmp
pop
cmpsl
sub
sbb
jg
or
mov
sub
cmpsl
arpl
jle
add
lods
mov
mov
mov
add
in
sub
js
in
fistps
mov
bound
pop
call
pusha
add
mov
add
sti
dec
gs
adc
xchg
mov
mov
rorl
push
mov
and
mov
rcr
push
cmp
mov
jl
inc
push
or
dec
movsb
mov
aam
sbb
pop
leave
pop
jbe
xchg
or
mov
orb
adc
test
rcrl
push
adc
mov
sub
xor
and
out
ss
das
aam
xor
ret
aas
mov
ret
stos
jbe
pushf
xor
or
pop
arpl
pop
dec
xchg
mov
out
jmp
xchg
cmp
xor
loope
rcl
fnsave
out
xchg
shll
push
mov
dec
mov
enter
js
aaa
lret
loopne
out
fisubrl
faddp
pop
popa
addr16
pop
sarl
add
iret
xor
mov
push
jmp
mov
add
bswap
ret
push
daa
leave
out
sub
imul
xchg
adc
jmp
push
insb
inc
xchg
dec
int3
insb
pop
and
mov
cmp
mov
mov
or
ret
aam
sub
popf
inc
dec
mov
mov
sbb
cmp
pop
cmp
jmp
xor
mov
stos
paddw
jae
xchg
jo
sub
xchg
sbb
lods
xchg
jle
push
ja
mov
je
xchg
clc
bound
add
mov
mov
add
dec
aam
or
sbb
cmc
popf
and
dec
sub
fmuls
adc
pop
xchg
and
fnstcw
mov
xor
in
xor
pop
rcr
out
push
inc
pushf
mov
mov
dec
xchg
adcl
gs
bound
dec
inc
stos
and
mov
adc
lret
pop
loope
jecxz
mov
fsubrp
xchg
fstl
data16
jmp
xor
add
sub
loop
add
xchg
dec
mov
or
das
inc
jnp
dec
sahf
mov
ret
lock
lahf
mov
scas
cmpsb
inc
cltd
mov
dec
lds
jecxz
movsb
cld
xor
or
nop
gs
jns
ret
mov
xor
or
cmp
cs
loopne
jno
pushf
xor
ja
adc
mov
push
or
nop
dec
sar
int
int
pop
dec
inc
pop
push
popa
andl
leave
add
cwtl
out
hlt
jecxz
add
add
or
jmp
or
lahf
pop
cmp
arpl
int3
fnsave
pop
fmulp
mov
lcall
ja
cld
ret
inc
scas
pop
lret
mov
xchg
mov
cmc
xchg
and
fs
ja
leave
dec
pop
lea
jo
mov
std
shlb
fiaddl
ss
into
fldenv
mov
sub
mov
cmp
dec
ret
popa
jl
push
outsl
mov
das
xchg
subb
dec
cmp
or
pop
and
mov
imul
sub
xor
push
ljmp
je
bound
xor
sbb
loop
or
cmpb
aaa
xlat
test
icebp
inc
aaa
add
repnz
popa
lea
sub
push
sub
pop
fsubrp
sbb
dec
sub
xor
dec
mul
push
subb
adc
movsb
popf
pop
pop
dec
add
sahf
push
clc
lock
pop
and
movsl
mov
jmp
sbb
pop
inc
push
inc
inc
inc
sbbb
mov
inc
test
or
inc
and
pop
sbb
int3
leave
cmpsl
xor
loop
add
push
cmc
jbe
clc
ja
insb
imul
add
push
repnz
pusha
pop
sahf
stc
xor
or
loope
cmp
mov
lret
sahf
leave
pop
and
aaa
leave
mov
fsqrt
fstps
scas
mov
ret
call
inc
es
push
pop
push
lods
mov
sbb
and
lods
cmp
in
push
sysret
adcb
xchg
outsl
cltd
daa
or
push
aas
into
xchg
je
shrl
jge
cmp
addr16
pop
subl
pop
inc
cmpsb
push
cli
fldenv
mov
jne
ret
or
icebp
das
jecxz
pushf
pop
mov
cmp
imul
add
or
push
or
aad
lcall
mov
iret
inc
xchg
mov
sub
loop
je
add
adc
std
out
or
dec
and
enter
pop
push
add
mov
fwait
adc
add
pop
je
leave
add
sbb
push
pop
and
jo
ja
push
pop
es
outsl
stos
adc
aam
test
call
fsubr
int
jg
mov
push
aad
pop
arpl
sar
pushf
dec
sub
jmp
lret
sub
or
or
or
insb
dec
sbb
aam
lods
xor
icebp
jno
xor
dec
mov
mov
push
pop
pop
int3
es
in
pusha
mov
lahf
pushf
or
loop
adc
clc
add
cs
pushf
xor
loopne
out
fdivrp
hlt
jae
cmp
mov
aaa
add
aad
jp
int3
fwait
push
leave
sub
sub
jmp
iret
mov
or
mov
dec
xorb
xor
fisubs
xlat
pop
repnz
loop
pop
xchg
fs
addr16
test
jmp
push
aas
add
sbb
mov
ljmp
inc
jb
int
mov
into
aad
mov
mov
mov
jmp
cli
and
and
jo
rolb
mov
inc
jmp
leave
jae
xchg
sbb
sub
daa
cltd
mov
aaa
dec
xchg
shl
push
fsubl
sbb
cmpsl
dec
push
mov
mov
scas
sub
stc
jp
sub
jb
mov
imul
add
nop
xchg
movsb
movsl
add
inc
adc
fldt
test
add
and
shl
ret
data16
xlat
in
clc
aas
popf
jnp
enter
lock
test
xor
fwait
mov
cmpsl
sub
cld
push
rolb
xor
jne
leave
mov
mov
push
sti
cmp
in
addb
aam
add
cmpsl
cmp
sbb
pop
jp
es
movsl
cmp
lahf
xlat
jne
adc
adcb
testb
repnz
mov
mov
or
lret
insl
adc
adc
daa
push
or
adc
jns
scas
adc
xchg
cmp
mov
ljmp
mov
jle
ret
movl
xchg
and
inc
cwtl
mov
popa
mov
sub
es
lahf
sub
mov
push
jo
jnp
sub
pushf
in
and
dec
and
or
push
pop
int3
int3
bound
mov
and
or
sub
and
or
sub
mov
out
outsb
pushf
mov
mov
je
pop
adc
gs
adc
mov
icebp
jmp
dec
add
sbb
mov
ja
and
popa
pop
jnp
ss
aam
jo
dec
add
jge
outsb
mov
dec
lret
mov
aaa
jl
das
xlat
dec
fiadds
js
outsl
out
xchg
pushf
push
cmp
adc
fstl
push
nop
fisttpl
popf
aad
push
movsb
cmp
lea
out
and
test
dec
pop
mull
aaa
arpl
nop
pop
cli
nop
divb
inc
xor
and
jo
and
cmc
mov
movsl
shlb
add
jne
inc
xor
and
jo
and
cmc
mov
movsl
shlb
add
jne
inc
xor
and
mov
and
cmc
push
lds
mov
test
xchg
adc
dec
jne
inc
adc
and
lock
in
pop
or
mov
mov
pop
dec
pop
jp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
roll
fisubl
xchg
adc
and
add
jae
arpl
mov
mov
xchg
rep
jecxz
adc
push
xor
jne
sub
jae
arpl
mov
mov
scas
jecxz
adc
jbe
add
pop
push
push
xor
push
or
and
nop
fmull
push
stos
cmp
and
enter
and
jg
jl
dec
xchg
pop
or
nop
ret
push
cvtps2pd
dec
scas
mov
fsubl
and
lods
jmp
add
cmp
out
lods
inc
push
inc
and
push
test
lock
arpl
xchg
lds
mov
gs
jecxz
mov
add
inc
cwtl
mov
call
sub
sbb
sub
jecxz
pcmpgtb
adc
add
outsl
ret
add
jnp
mov
dec
push
aad
mov
push
inc
add
mov
adc
leave
popa
pop
push
dec
xor
xchg
mov
xchg
rep
jecxz
adc
std
xor
dec
push
cmp
jae
arpl
test
mov
mov
lods
clc
pushf
shlb
arpl
and
pushw
aad
add
push
adc
notl
mov
mov
mov
cmpsb
xchg
and
and
dec
es
hlt
mov
xor
xchg
leave
ret
xchg
rep
jecxz
adc
push
xor
jne
add
arpl
mov
mov
xchg
rep
jecxz
adc
push
xor
jne
add
arpl
cs
fcompl
add
xor
or
das
or
dec
loope
jecxz
scas
dec
jge
imul
push
pop
xchg
cld
jg
sub
mov
sub
jp
jg
aad
fldenv
lock
dec
dec
and
bound
dec
es
push
mov
dec
sbb
xchg
pop
jns
push
pusha
stos
mov
xor
jp
dec
inc
lahf
ljmp
stc
xor
loopne
pop
or
sub
movsl
push
iret
cmp
test
loopne
jecxz
js
xlat
in
xchg
aas
sub
xor
enter
shll
xchg
jo
xchg
addr16
mov
and
lahf
or
sbb
in
int3
push
xchg
sub
xor
sub
inc
lret
rcl
mov
pop
in
sarb
cmp
push
cmp
in
mov
mov
out
data16
lock
mov
mov
or
leave
mov
cmpsl
add
jbe
lcall
mov
xchg
scas
lea
ja
xor
nop
fisubrl
sub
scas
jno
aaa
adc
lcall
mov
mov
lahf
xor
std
addb
imull
sbbl
fnsave
mov
fwait
ret
movsb
dec
xchg
pop
dec
jl
mov
adc
outsb
aam
iret
pop
mov
movsb
leave
sbb
cltd
or
xchg
push
xchg
jb
loope
sub
and
xchg
push
ret
push
pop
call
jl
pop
xchg
push
inc
xchg
xchg
jle
push
movsl
jecxz
jno
mov
pop
stc
fcoml
push
mov
or
jp
push
out
out
nop
sbb
roll
and
or
pop
cmp
dec
mov
pop
sbb
repz
inc
inc
xor
loope
bound
dec
lds
xor
cmp
aam
sub
es
sub
adc
jge
pop
pop
sbb
arpl
mov
enter
sbb
sub
xlat
stc
jno
mov
mov
lods
xor
loop
jnp
cltd
das
stc
cmpsb
cmp
cmpsl
jmp
xchg
sti
mov
test
push
push
shl
xchg
sbb
jbe
or
jb
xor
and
xchg
test
ja
sub
ss
cvttps2pi
inc
outsl
es
push
add
add
imul
popa
int3
xor
lods
scas
mov
adc
adc
or
les
pop
cmc
jno
mov
push
sub
cmpsb
push
and
xchg
test
adc
loop
sarl
fnsetpm(287
outsl
add
pop
push
iret
mov
mulb
lods
stc
adcb
iret
push
adc
imul
jmp
popf
repnz
sub
fst
dec
pop
cmp
cli
xchg
xor
cld
dec
cmp
in
pop
fwait
or
push
lret
mov
adc
test
pop
incb
add
ds
scas
xchg
push
mov
add
push
mov
jp
lock
mov
popa
jbe
cmpsl
adc
mov
mov
add
leave
xlat
ljmp
mov
mov
jg
ss
inc
cmp
push
push
rcll
test
lock
or
shll
pop
jo
and
pop
mov
sub
xchg
lock
out
xchg
inc
add
push
xchg
mov
ja
jle
xchg
test
sbbl
add
out
dec
mov
pop
push
add
adcl
sbb
xchg
repz
jo
arpl
stos
xchg
lahf
out
aas
jbe
dec
inc
pop
or
into
nop
dec
gs
inc
js
inc
imul
repnz
xchg
in
push
jbe
and
push
aaa
cli
loop
cwtl
xchg
mov
rolb
sub
adc
loopne
std
dec
insb
mov
push
sub
movsl
cli
pop
aad
fsub
fs
mov
mov
jge
mov
jae
cmp
inc
cmpsb
push
lods
negb
push
adc
out
mov
xchg
lcall
mov
in
sub
repz
inc
adc
ret
test
jne
jmp
mov
lock
stos
jg
or
repz
hlt
js
loope
dec
pop
xchg
and
xchg
xor
or
mov
sbb
enter
cmp
dec
and
outsb
mov
pop
daa
pop
cmc
scas
fwait
lods
repz
pusha
xor
mov
cmp
lds
rcr
das
jnp
pop
lcall
ljmp
shl
shrb
lods
jp
or
adc
mov
adc
jl
das
adc
and
outsb
mov
aam
adc
js
lret
jl
out
cltd
push
mov
mov
jp,pt
lock
or
dec
scas
dec
aaa
mov
mov
mov
out
loop
ror
cmpsl
push
inc
push
cltd
sbb
pop
pop
adc
loope
inc
jecxz
sahf
pop
pop
mov
sbb
data16
mov
pop
test
int3
in
push
add
cmp
mov
mov
cmp
cmp
fcmovbe
add
pop
sbb
je
out
inc
adc
dec
test
sub
jns
dec
dec
xchg
pop
inc
push
shll
mov
push
sub
sbbb
xor
mov
dec
leave
push
cmpsl
mov
push
inc
mov
out
mov
dec
outsl
std
jb
hlt
mov
cmpsl
mov
cmp
sbb
in
sbb
adc
push
lods
cld
pop
pop
mov
cmp
xchg
fistps
daa
mull
mov
lock
add
clc
cmc
cltd
lea
dec
int3
mov
ret
push
push
leave
fisubrl
mov
daa
lods
iret
fisttps
rcll
pushf
mov
pusha
add
fdivp
je
mov
add
pusha
xor
and
scas
clc
scas
inc
adc
test
and
lcall
add
stc
xchg
pop
in
and
dec
add
cmp
xor
sub
or
test
xor
lods
pop
inc
call
cmc
ficoml
lcall
pop
push
bound
push
or
add
or
sub
shrb
sbb
push
popa
in
xor
in
loopne
jg
and
cmp
clc
dec
sub
cwtl
addb
daa
mov
jbe
inc
lret
jg
jmp
cmp
in
mov
sti
sub
fists
mov
das
jne
mov
fimuls
int3
scas
ret
mov
iret
cld
stc
dec
inc
cmp
outsb
and
rcl
cmp
add
and
cmp
xchg
test
sbb
loop
xor
not
push
daa
lds
xor
mov
rclb
jo
sub
dec
imulb
jmp
mov
cmp
jbe
mov
repz
pusha
test
xchg
mov
dec
bound
cmp
cld
push
sahf
jne
sar
xchg
fwait
in
xchg
addb
lds
lds
and
lea
mov
xor
rorl
xchg
push
ret
dec
sbb
sub
mov
add
popa
ljmp
jecxz
pop
cmp
xchg
lods
sub
xor
in
cmp
lret
mov
repnz
test
test
stc
fsub
jge
jle
inc
dec
inc
inc
insl
pop
sbb
cmp
es
outsb
jmp
in
mov
dec
lea
and
insl
aad
insb
sbb
jp
stc
pop
and
lds
mov
adc
pop
test
add
dec
push
xchg
mov
xchg
repz
nop
lcall
insl
rcll
xchg
mov
push
pop
mov
popf
rorb
add
mov
or
andb
mov
add
in
lcall
push
bound
shlb
ffree
add
jge
icebp
mov
cmp
jp
and
cmp
jae
shlb
xchg
lds
popf
or
lods
arpl
std
mov
test
aam
dec
sbb
dec
out
pusha
sti
cwtl
or
icebp
dec
mov
mov
and
mov
insl
adc
pop
inc
sub
inc
out
xor
shl
push
test
je
pop
and
mov
pusha
stc
jbe
dec
mov
addr16
add
add
adc
cmpl
mov
xlat
jnp
out
stos
fwait
test
and
je
or
jno
hlt
sbb
sub
cmp
mov
mov
adc
stos
xchg
jmp
xchg
mov
push
not
adc
lods
imulb
mov
lods
cmc
hlt
andl
push
mov
jne
xchg
adc
lret
jb
popa
pop
xor
jle
push
adc
addr16
push
cmp
pop
mov
clc
jbe
daa
jp
mov
add
push
xlat
je
xchg
or
and
scas
jmp
sbb
rcrl
les
iret
dec
xor
sbb
aaa
pop
sbb
insl
cmpl
aas
add
in
or
dec
cmpsb
faddl
mov
adc
cmpsl
pushf
ret
mov
and
inc
stos
push
test
mov
mov
data16
cmpsb
dec
es
jl
mov
jp
fwait
sbb
ret
sbb
push
int
pop
jno
or
pop
pop
imul
or
popa
push
xor
js
scas
add
fs
fisubs
arpl
jl
movsl
cmp
inc
lcall
out
ret
rcl
mov
sub
xor
pushl
add
es
cmc
add
divb
jnp
pop
mov
inc
mov
ret
mov
push
mov
mov
add
fs
xchg
jp
scas
std
daa
sti
mov
inc
and
scas
sbb
xor
cmc
pushf
pop
jmp
cs
inc
aas
bound
subb
cltd
pop
pop
mov
cld
and
stos
lcall
cli
push
outsb
and
outsl
not
sub
std
cld
loop
pop
sub
mov
daa
aad
jg
xacquire
les
sub
pop
sub
rol
pop
mov
mov
leave
cmp
popa
mov
or
mov
int3
imul
movsb
push
cmp
mov
hlt
and
shlb
mov
sbb
lahf
imul
lret
aad
xchg
roll
pop
sbb
jbe
jno
hlt
and
lret
add
bound
flds
mov
xor
loop
inc
popf
add
cmp
lods
jl
mov
jae
jns
in
sub
or
adc
cmp
daa
sarb
push
movntps
adc
xor
push
aad
repz
subl
int3
pop
dec
stos
jmp
xchg
xchg
add
sbb
imul
mov
dec
shrl
xorl
int3
cmpsb
aas
mov
mov
jbe
mov
adc
mov
push
jo
inc
pop
cmp
das
data16
rcrw
mov
pop
mov
jnp
mov
lret
fmuls
adc
inc
ss
ret
or
fidivl
loope
mov
mov
mov
test
sub
cmp
xchg
sbb
add
or
xor
xchg
or
clc
insb
dec
mov
mov
sbb
pop
cwtl
jb
das
jl
add
aad
jo
les
call
outsb
ja
pop
inc
pusha
mov
and
xor
js
add
inc
inc
mov
pop
sbb
leave
xchg
adc
in
fucomp
repz
push
pop
mov
pop
xlat
push
add
jb
aad
dec
js
stos
cmp
int
lret
or
leave
cmp
and
cmpsb
shl
shrl
lret
aas
jae
test
insl
loope
cmpsl
mov
cmp
test
stos
or
rcl
lahf
call
dec
mov
les
int3
jmp
adcl
pushf
and
jl
adc
fcmove
hlt
sbb
lret
pop
dec
adc
mov
pusha
nop
loopne,pt
mov
xor
outsl
shlb
mov
pop
lcall
adc
or
insb
popf
push
inc
or
ja
and
icebp
jne
fbld
sub
push
int3
mov
or
and
and
imul
cmpsb
xchg
push
ret
idiv
rol
in
inc
in
push
int3
inc
lea
pop
dec
aam
cltd
mov
lret
lods
cli
push
test
daa
bound
in
arpl
mov
jg
addl
inc
mov
fmull
fnstsw
sub
adc
testl
out
insb
in
xchg
icebp
xchg
xchg
fiaddl
sahf
mov
lret
and
loop
ret
mov
lds
jns
cltd
out
std
repnz
ljmp
push
xchg
pop
sbb
out
test
repnz
loope
int
xchg
ss
lds
ret
loop
xchg
and
push
shll
aam
repnz
js
jae
sbbl
mov
ret
adc
stos
mov
mov
cmpb
mov
cmpsb
pop
push
repz
inc
fstps
cmp
orb
add
out
cltd
push
xchg
les
idiv
stos
mov
lahf
inc
dec
inc
and
iret
sbb
sub
xor
cmpl
sbb
sbb
pop
add
aas
jns
and
popa
adc
push
xchg
sub
std
or
out
mov
xchg
in
iret
push
sahf
outsl
push
dec
pop
outsl
testl
stos
add
sub
test
pop
xchg
push
iret
shl
insl
lcall
sti
mov
out
sub
insb
sbb
hlt
aad
hlt
xor
hlt
push
xchg
xor
lahf
test
sub
jno
roll
pop
decl
pop
addr16
maskmovq
mov
jmp
stos
ljmp
push
sbb
push
xor
mov
cmp
push
jmp
xlat
rcl
jge
xor
mov
add
lds
adc
fsubrp
rdpmc
setnp
hlt
dec
xor
aas
pusha
cmp
sbb
lds
sbb
dec
add
jl
sub
or
push
ret
inc
popf
std
orl
and
inc
jmp
mov
shrb
sub
sbb
out
sahf
push
out
pop
movsl
imul
push
jbe
inc
cmp
inc
sbb
xor
mov
mov
dec
fwait
pop
dec
mov
mov
insb
ds
mov
aad
movsl
dec
sbb
push
out
jo
inc
fwait
packuswb
xchg
imul
pop
sub
mov
sub
add
xor
push
jbe
rcr
jnp
bound
sbb
pop
aad
jl
hlt
adc
or
shll
mov
mov
repz
test
mov
pop
into
push
cmp
das
inc
pop
and
fbld
dec
test
test
cmp
and
popa
lods
xchg
jne
scas
js
xor
inc
mov
mov
pop
xor
jmp
mov
cwtl
mov
pop
or
or
in
shl
imul
push
in
loop
mov
test
or
adc
pop
dec
fisubrs
sbbb
cmp
imul
ret
rorl
and
or
add
push
mov
jne
repnz
or
jo
sar
pop
cld
cmp
dec
clc
dec
test
mov
movsl
jnp
sub
js
into
mov
mov
jbe
jmp
popa
sub
xchg
pop
mov
sub
mov
cmp
adc
andl
cmp
xchg
and
clc
insl
imul
movsb
mov
xchg
or
dec
xchg
push
add
sbb
rclb
popf
into
and
cmpsb
adcl
stos
xor
repnz
mov
add
inc
xor
xor
xor
insb
fsubr
into
jb
gs
imul
clc
mov
and
or
int3
sahf
nop
cmc
rcll
hlt
mov
sti
div
int3
jno
in
dec
cli
incl
xchg
hlt
bound
sbb
es
iret
xchg
fistps
mov
adcl
out
push
imul
xchg
jne
aam
ljmp
or
mov
jmp
inc
stc
in
dec
shrl
jp
push
push
xor
out
pushf
cmp
push
xor
push
fwait
or
sub
push
imul
mov
fiadds
inc
gs
mov
fldl
sub
cmpsl
fs
mov
leave
shrl
pushf
repnz
fistpl
mov
cmp
scas
icebp
andl
negl
aam
xlat
cs
int3
stos
or
xor
aad
mov
ffreep
jae
pop
inc
pop
jb
dec
lods
push
cld
cli
and
sub
sbb
xor
mov
nop
pop
call
mov
mov
bound
daa
jns
clc
std
js
mov
out
in
scas
test
movsl
mov
push
icebp
in
or
mov
xchg
pushf
pop
outsb
and
fdivrs
andl
cld
ret
pop
scas
fsubl
js
icebp
into
bound
xchg
lahf
add
stos
loopne
les
mov
mov
cmp
aaa
push
push
outsb
movsl
jmp
fs
mov
xchg
cmpsl
out
jmp
cmp
das
movsb
mov
das
xor
cltd
xchg
or
sbb
js
xor
lock
jg
lds
icebp
ljmp
js
mov
mov
insl
push
lock
inc
je
xchg
cmp
push
cmp
sahf
xorl
push
sbb
push
push
sbb
in
test
lret
push
mov
add
and
dec
pop
arpl
push
or
repz
lods
xlat
ret
push
xor
fcompl
mov
xchg
sahf
jp
and
lea
jp
jl
cmp
ljmp
fwait
xlat
mov
xor
push
jb
mov
cmp
jnp
xor
sub
sub
lea
sbb
sbb
loop
sbb
sti
in
mov
adc
subl
repnz
mov
add
int3
imul
and
pop
lods
ds
dec
jle
mov
add
frstor
out
aam
add
mov
add
rorl
outsl
sub
push
push
aad
dec
mov
push
andl
jecxz
xorl
push
test
add
jl
test
pop
je
or
or
iret
data16
mov
les
adc
test
push
pop
addr16
fcomps
test
out
mov
addr16
mov
and
jmp
gs
sub
mov
test
popa
push
test
mov
stc
and
xor
mov
or
ss
fwait
jle
pop
xchg
nop
in
mov
push
push
repnz
mov
dec
xor
insb
test
xchg
bound
adc
jo
ds
cli
sub
mul
mov
cli
adc
xor
imul
aaa
fstps
out
jecxz
sub
dec
imul
or
jmp
xchg
pop
push
mov
popf
adc
call
pop
adc
enter
lods
pop
xchg
jg
popa
arpl
fcom
xchg
adc
loopne
cmc
mov
movsl
addr16
mov
mov
add
jecxz
adc
add
cmp
hlt
sub
xchg
jecxz
fdiv
ljmp
xor
and
mov
or
mov
ss
dec
sub
xchg
outsb
dec
sub
add
mov
in
cmp
inc
test
xchg
xchg
enter
push
fbstp
adc
mov
and
stc
stos
mov
cmp
loopne
xchg
movb
das
inc
adc
mov
xchg
movsb
fdivrp
cmp
test
add
in
cmp
lea
rorb
xchg
mov
andb
int
add
mov
xchg
jl
testl
jbe
frstor
inc
jl
xor
mulb
cld
arpl
pop
and
scas
mov
rorl
mov
or
hlt
pop
js
enter
push
test
sub
cmp
or
mov
or
mov
dec
insl
arpl
xorl
std
out
add
in
dec
pop
addr16
gs
ja
inc
mov
popf
lahf
subl
movsb
lahf
or
addl
push
lahf
insb
imul
lea
mov
sub
xchg
push
or
and
mov
aas
ds
out
xchg
je
dec
xchg
jg
xor
jle
dec
jne
or
and
mov
fcoml
cmpsl
push
mov
push
xlat
mov
out
outsb
test
packuswb
mov
fiadds
jne
lds
aam
mov
sbb
in
scas
int3
push
inc
cmpsl
jo
rorb
fsubs
test
aad
loopne
cmc
roll
jecxz
adc
push
xor
jne
add
arpl
mov
mov
xchg
rep
jecxz
adc
push
xor
jne
add
arpl
mov
mov
repz
add
and
inc
adc
xchg
and
mov
test
xchg
jae
arpl
mov
and
and
lret
insl
mov
dec
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
repnz
mov
std
cli
mov
inc
bound
and
and
ret
aad
movsl
xchg
mov
test
jne
and
bound
xor
ret
int
mov
stos
cmpb
pop
and
push
js
jbe
jl
xchg
shl
stos
mov
dec
pop
mov
insb
arpl
jbe
xor
stc
leave
ds
js
lds
push
bound
dec
jl
cmp
rorb
bound
xor
inc
mov
mov
xchg
lea
xlat
mov
fiaddl
jo
scas
int3
shlb
xor
repnz
rolb
ljmp
inc
xchg
or
inc
mov
or
pushf
or
jne
xchg
loop
mov
push
aaa
push
bound
xor
fldl
repnz
sub
test
arpl
mov
push
mov
inc
and
xor
loop
clc
mov
scas
addb
insl
pop
pop
imul
sub
inc
xchg
mov
ret
mov
rol
in
xchg
clc
iret
adc
jne
aaa
daa
cmp
pusha
xor
in
cmc
ret
xlat
out
loope
mov
ror
sub
add
and
inc
pusha
inc
insl
jne
adc
cmpsl
mov
mov
test
jne
inc
jb
bound
xor
ret
aad
movsl
xchg
mov
test
jne
inc
jb
bound
xor
inc
pushf
sarl
out
push
int
dec
les
sub
push
mov
sbb
inc
popf
xchg
push
push
punpckhwd
outsb
test
andb
cmpsl
enter
push
pop
push
shlb
ds
mov
mov
ret
mov
push
mov
shr
add
pusha
imul
inc
xchg
and
iret
pushf
hlt
mov
loop
adc
and
scas
scas
inc
dec
push
dec
pop
mov
xor
push
push
sub
xchg
outsb
or
inc
sub
ja
add
lret
mov
add
xor
or
pusha
push
scas
pop
lahf
and
mov
dec
cmp
push
arpl
lcall
xcrypt-ctr
cmpsl
sbb
pop
add
mov
inc
in
call
mov
jge
setle
dec
gs
jge
hlt
daa
pop
mov
scas
xchg
arpl
movsb
jb
daa
scas
jne
xor
nop
int
push
rorb
jmp
jo
lods
aad
in
and
out
movb
fdivs
mov
pusha
out
pop
in
fwait
cmpb
repnz
fwait
insb
mov
test
pushf
adc
or
dec
lret
mov
xchg
cs
jmp
out
xor
enter
add
daa
aam
into
pusha
sbb
jg
mov
xchg
jmp
scas
lock
push
popa
addr16
xor
push
mov
cltd
enter
ljmp
jns
test
xor
xchg
je
sub
xor
xorb
ficompl
or
lods
mov
fidivs
cmpsb
les
xor
movsb
inc
push
cmp
xor
sub
add
lea
jp
and
popf
sub
sbb
fwait
mov
add
arpl
nop
in
mov
xchg
mov
test
lods
fsubl
ja
or
mov
or
fcompl
dec
xorb
jne
lahf
ss
fcmovnbe
mov
fnsave
lock
fdivs
push
xchg
test
sbb
or
lds
cmp
lea
xor
stos
adc
mov
or
adc
into
sub
sub
fmuls
xchg
pop
or
shll
inc
icebp
cmpsl
in
dec
sbb
push
sub
lahf
jbe
ja
cli
sbb
sbb
mov
xchg
inc
gs
cs
cmp
movsb
insl
arpl
mov
add
dec
jge
int
dec
mov
stos
addr16
push
mov
loopne
inc
xor
mov
mov
mov
lea
in
mov
or
xor
test
xor
jbe
test
mov
fsubs
pop
sub
mov
aaa
ja
lock
pop
xor
mov
sbb
test
clc
mov
add
or
pop
mov
mov
mov
fsubrl
mov
stos
add
mov
xchg
fbld
leave
sub
mov
pop
fistps
repz
jb
fbstp
sbb
or
push
stos
lock
cld
push
cltd
hlt
xlat
out
je
mov
das
aas
mov
xlat
jae
emms
sti
call
lret
sbb
add
mov
js
sub
movsb
inc
jne
rolb
imul
frstor
xchg
les
lods
insb
fistpll
lods
andl
addr16
mov
jns
ljmp
aas
mov
insb
filds
mov
or
inc
ljmp
cmp
int3
hlt
lods
jnp
call
add
lea
cmp
adc
shrb
xor
call
jno,pn
dec
xlat
std
pop
push
mov
fs
fdivrs
cmpl
pop
cmpsb
fwait
add
cmp
jmp
std
jne
int3
adcl
xor
mov
pop
int3
xchg
xor
jmp
and
rcl
jne
dec
addr16
int
cmpsb
iret
inc
shll
mov
cmp
mov
sahf
arpl
pop
shlb
mov
dec
and
negb
aad
stos
cmp
adc
inc
stc
fidivrl
ljmp
rcll
sbb
iret
cmpsb
ljmp
sbb
psubsw
mov
pop
stos
push
jg
cmp
xor
sbb
add
outsl
mov
shr
dec
adc
outsb
adc
adcb
dec
and
adc
inc
call
movsl
lret
addr16
xchg
sub
int3
mov
xor
cli
outsb
std
xchg
xor
push
subb
xchg
les
cld
push
ror
mov
inc
mov
xchg
clc
je
mov
mov
mov
out
and
mov
in
xchg
jb
push
in
jle
test
movsb
jmp
jle
dec
jae
pop
stos
popa
adc
cmp
iret
add
sub
jne
xor
adc
xor
pop
inc
rclb
inc
sub
imul
and
mov
iret
xchg
xchg
inc
and
popa
ja
es
in
jle
enter
int
jno
leave
mov
jp
inc
jp
jbe
sbb
cwtl
mov
cmc
and
rorl
in
jo
pushf
xchg
dec
shll
or
neg
push
sarb
out
nop
sbb
loope
pushf
mov
ja
pop
fsts
hlt
adc
std
mov
insb
fwait
pop
daa
rcl
cltd
inc
sub
jl
lret
push
orl
insl
fistps
dec
xor
dec
xchg
sahf
add
fs
sub
lods
mov
mov
xchg
and
and
or
mov
das
xchg
gs
sbbl
lods
fldenv
xor
cltd
addl
and
or
mov
pop
repz
rcrb
shrl
scas
aad
dec
scas
sub
stos
inc
dec
push
fistl
inc
jle
push
push
dec
xor
cmpsl
and
jmp
data16
jbe
mov
xchg
sub
xor
in
repz
stos
pop
cmpl
mov
dec
fiaddl
ljmp
push
mov
add
lods
dec
cli
fs
cmp
dec
loope
lods
mov
jl
or
cmp
outsb
scas
fnstsw
testl
push
pop
lock
mov
lods
xor
xchg
aad
das
pushl
mov
mov
dec
cmp
and
arpl
shrl
dec
dec
mov
or
repnz
inc
cwtl
js
cmp
adc
test
imul
sub
sub
lods
push
cltd
adc
xor
filds
dec
test
push
and
cmc
jl
ja
fwait
inc
nop
inc
push
ja
aam
mov
xor
or
mov
mov
jp
adc
divl
push
lods
mov
and
out
das
add
push
mov
andl
jecxz
jecxz
mov
sbb
or
mov
xchg
pop
les
mov
lods
adcl
push
stos
mov
pop
cmp
mov
and
pop
mov
and
xlat
imul
mov
xor
xchg
mov
bswap
and
cs
clc
scas
pop
pop
mov
fdivrp
int3
clc
loop
cltd
sub
or
stos
push
mov
inc
mull
cmp
jg
jnp
decl
xchg
addr16
xchg
outsl
push
dec
inc
mov
aad
push
js
sarb
and
in
fldenv
iret
sbb
inc
out
inc
out
cmp
mov
aas
dec
pop
mov
mov
mov
lea
pushf
pop
lcall
testl
and
jae
mov
movb
push
fisttpl
dec
rorb
jbe
cmp
xchg
sbb
test
dec
and
and
lahf
xor
jnp
incb
fs
sbb
rcrb
xchg
into
xchg
lcall
dec
repnz
addb
stos
jp
shll
sub
inc
test
shrl
mov
xchg
mov
xorb
jns
cld
sub
fldcw
push
leave
loope
mov
repz
lahf
mov
sbbl
lcall
or
xchg
sub
decb
leave
xchg
mov
adc
adc
das
pop
adc
out
sbb
mov
cmp
lock
pusha
rorl
cmpsl
ja
jno
mov
sub
rclb
fstpl
std
and
pop
xor
jb
scas
sarb
imul
jbe
cld
or
mov
fisubrl
aas
add
pop
mov
push
test
push
in
pop
push
adc
sti
icebp
pop
movsb
cmc
fildl
adc
pop
jp
cli
adc
outsl
mov
adc
mov
adc
jg
in
push
xchg
mov
pop
jnp
arpl
and
sbb
arpl
mov
mov
pop
popf
jle
int3
cwtl
adc
adc
jmp
and
dec
fisttpl
mov
sbb
loopne
test
adc
int3
mov
lock
xor
es
imul
pop
rorl
and
ja
adc
cmp
call
insb
imul
push
mov
push
in
mov
fwait
loop
sbb
pop
rolb
in
pushf
sbb
mov
xor
xchg
in
adc
cmp
mov
xor
cmc
mov
inc
filds
xor
stc
mov
mov
jno
add
mov
pop
mov
dec
imul
popf
adc
adc
js
pop
or
xchg
rcr
add
cmc
outsb
push
nop
insl
sub
dec
jp
pop
out
adc
scas
mov
xchg
adc
jle
pop
fistps
lahf
pop
cmp
cmp
mov
sti
inc
gs
push
xchg
mov
jl
lods
mov
cmpsl
orb
stc
bound
xchg
mov
std
hlt
jl
fsubp
xchg
les
lret
cmp
push
ss
int3
jp,pt
sahf
ljmp
jae
jb
mov
xchg
iret
add
cltd
adc
pop
frstpm(287
and
mov
ret
jns
mov
aam
in
xchg
aam
adc
mov
ds
jb
scas
cmpsl
fistpll
xchg
cmp
lahf
push
or
loop
pop
dec
ljmp
insb
add
mov
sub
negl
fst
push
xor
inc
and
in
mov
cmp
lcall
inc
sub
lcall
in
nop
add
les
add
jl
aad
adc
sbb
jo
dec
out
aad
and
sbb
cli
ret
xchg
testl
stc
mov
add
std
loopne
sbb
cli
jo
add
jne
repnz
int3
dec
add
inc
outsb
fstpl
sarl
xor
mov
pop
lock
mov
sbb
cmp
shl
dec
les
jl
jmp
aam
cmp
fcoms
mov
insl
roll
xorl
add
lahf
push
imul
mov
fsubrl
in
mov
repz
jb
and
cwtl
mov
lcall
rcrb
popa
mov
es
pop
in
sub
lods
push
stos
es
mov
sbb
lods
arpl
test
fldt
mov
stos
lds
out
jo
jbe
outsb
rolb
jo
mov
jno
push
or
or
ljmp
mov
adc
es
imul
adc
str
mov
dec
cwtl
mov
or
mov
adc
mov
xchg
mov
adc
mov
and
and
test
inc
or
pop
fists
cltd
subb
cmp
arpl
mov
in
xchg
or
test
dec
mov
les
mov
loope
jbe
adc
enter
in
mov
inc
mov
out
test
jmp
jae
ds
loop
scas
pusha
or
orb
test
call
or
push
inc
lock
bound
add
mov
xor
dec
adc
xchg
pushf
sub
imul
sub
ljmp
jns
movsl
in
pop
clc
inc
andl
std
arpl
cmc
mov
sub
imul
xorl
sbb
push
lods
mov
xor
js
leave
sbb
lret
call
push
sub
in
bound
fwait
dec
pop
inc
and
in
push
fcomp
xchg
sbb
cld
push
test
loopne
icebp
rcrl
and
sub
dec
loopne
test
cmp
loopne
pop
inc
cmp
aam
btr
repnz
or
push
push
out
icebp
testl
xchg
xor
dec
or
xor
idivl
pop
cmp
xor
adc
jno
out
push
mov
icebp
sub
mov
cld
cmp
sti
inc
lret
mov
xor
sub
arpl
jle
and
repnz
mov
in
lahf
mov
and
out
shlb
loope
ficomps
movsb
push
mov
adc
ss
jecxz
and
mov
out
pop
pushl
cs
push
lea
aad
jns
fsub
push
sub
out
leave
jmp
push
adc
sub
ret
aas
push
cmpl
ja
dec
add
dec
mov
sub
and
or
mov
xchg
cmpsl
mov
test
lret
mov
push
mov
add
addr16
test
mov
fldenv
outsl
inc
sub
mov
pusha
lahf
mov
cmp
jne
xor
mov
adc
orb
mov
mov
movsl
movsl
test
mov
inc
mov
fwait
xor
sbbb
outsl
nop
fsubl
add
cmp
inc
pop
xor
xchg
insl
mov
test
fidivrl
mov
sbb
xchg
sbb
pop
dec
fstpt
roll
shlb
mov
test
std
xchg
and
and
xchg
inc
dec
mov
aas
or
movsl
pop
les
mov
dec
ja
icebp
push
xor
je
cmpb
cmpl
lock
push
repz
in
cld
adc
call
lahf
je
ret
cmp
icebp
mov
insl
pop
pop
sbb
pop
ds
repnz
arpl
lods
in
sub
arpl
repnz
test
addl
cld
imul
jae
push
add
mov
mov
sub
shrl
or
in
loope
jns
add
pop
loope
in
xlat
rol
aad
mov
push
cmpsb
scas
roll
movsb
or
addr16
xor
xchg
mov
imul
mov
push
cmp
jb
mov
inc
xchg
stos
inc
popf
dec
jg
sub
xor
outsl
cld
mov
mov
xor
xor
xor
cmp
scas
add
das
mov
push
inc
pushf
sub
adc
mov
leave
pop
test
xchg
lods
push
imul
sbb
cmc
dec
popa
cmp
in
outsb
mov
mov
test
mov
fisubrl
enter
mov
sub
push
daa
sarl
out
inc
jns
lds
pop
shlb
jp
lahf
insb
jecxz
jge
cmc
cmc
inc
popa
jnp
stos
cmpb
jle
pop
cmp
clc
lods
cmp
sarl
shlb
jl
ror
jp
pop
lahf
mov
push
xor
push
dec
rorl
imul
testl
das
mov
mov
pop
std
adc
cs
mov
xchg
daa
test
and
jbe
daa
call
idivl
ret
pop
pop
mov
mov
mov
pusha
lods
mov
dec
lock
out
dec
pop
jmp
push
inc
pop
mov
mov
xchg
pop
xchg
mov
sbbl
or
lods
in
mov
mov
xchg
or
inc
les
mov
or
arpl
jp
and
jmp
pop
or
outsb
adc
pushf
mov
enter
dec
les
cltd
stc
mov
in
add
rcrl
test
daa
cs
dec
stos
pop
push
xchg
add
adc
xlat
fimuls
ret
int
sbb
aad
bound
xchg
xor
pop
jae
xorb
insb
movsb
adc
aad
pushf
insl
movsb
test
testl
cmp
inc
xor
pop
lods
repnz
testl
cmp
out
fidivrs
cmp
ja
and
sbb
and
jge
aad
ss
xchg
std
xchg
inc
orb
mov
pusha
arpl
mov
adc
int3
sbb
mov
mov
stos
les
push
dec
push
xor
mov
and
rcll
in
lds
inc
dec
mov
jg
xchg
mov
dec
and
and
shll
das
adc
pop
fwait
jbe
subl
scas
mov
fstp
enter
sbb
rcr
jl
and
pop
mov
mov
mov
call
out
push
fistl
push
pop
mov
aas
fisttpll
mov
jmp
pop
inc
scas
mov
xlat
in
pop
and
pop
into
mov
cmc
xchg
jg
lods
push
scas
cmpsb
cwtl
and
lods
daa
xchg
fcmovne
sub
nopl
mov
insl
fwait
mov
arpl
dec
inc
lret
loopne
div
sbb
hlt
addb
and
jp
jl
outsb
inc
imulb
imull
mov
rolb
push
jno
ds
xchg
jbe
fisubl
xchg
inc
add
add
out
shr
mov
bound
cmp
dec
gs
pop
jg
addr16
dec
setns
outsb
sub
imul
jb
in
adc
pushf
jecxz
aad
sbb
loope
mov
dec
mov
sub
out
or
sbb
xor
insl
ficomps
xor
daa
test
sbb
js
dec
outsl
cmpsl
in
pop
aam
ljmp
and
cmp
adc
add
inc
dec
pop
dec
call
out
jp
es
sti
stc
jbe
pop
add
cltd
xor
jle
or
pop
arpl
addr16
out
sub
ret
cmp
mov
or
push
sbb
fcomps
adc
scas
cmpsb
cwtl
mov
and
mov
mov
jnp
test
icebp
push
sub
aad
sbb
in
insl
xchg
popa
rol
mov
mov
out
ffreep
test
pop
jge
inc
or
gs
inc
jno,pn
cwtl
dec
adc
dec
adc
xor
push
sahf
stos
sbb
ljmp
outsb
xchg
test
fldcw
out
and
adc
subl
jmp
adc
fdivrs
inc
jo
andb
sub
insb
bound
inc
pop
mov
xor
sub
scas
mov
xchg
or
push
sub
cld
xchg
mov
ficoms
jge
arpl
subb
sub
jns
cs
mov
jmp
lods
mov
inc
aad
stc
out
xlat
fstps
xorb
pop
xor
add
fdivl
std
xor
cmp
dec
sbb
das
ss
cli
loop
fsubrp
test
fs
jle
dec
rcll
test
cmp
fwait
xchg
mov
stos
or
xor
inc
scas
xchg
xor
push
cmp
mov
outsb
insl
nop
push
adc
test
fcoms
js
aam
movsl
xchg
mov
jae,pt
lret
inc
mov
call
add
jb
fildll
jnp
or
and
rorb
shll
cltd
faddl
pop
pop
cmp
repz
push
sarl
faddl
sbb
add
inc
and
and
mov
and
mov
xchg
hlt
jmp
sub
popa
push
outsl
sbb
data16
out
push
xchg
push
out
pop
ret
add
je
jo
shl
xor
popf
nop
fimuls
xchg
and
shrl
push
jnp
mov
cld
pop
aas
cmpsb
mov
test
mov
popa
popf
xchg
test
mov
jmp
test
std
adc
repz
add
cld
out
fisubs
jb
mov
scas
fldcw
push
pop
sbb
cmpsb
cmp
enter
inc
aad
cmp
cld
cmp
lds
inc
not
xor
xor
aam
pop
je
or
fiadds
insb
mov
push
aaa
xchg
cmp
sub
xchg
jl
pop
sub
dec
xorl
cmpsb
sbb
insl
test
int3
roll
xchg
insl
xor
mov
mov
popa
lret
imul
mov
xchg
mov
test
jne
inc
jb
bound
xor
ret
aad
movsl
xchg
mov
test
jne
inc
jb
bound
xor
ret
aad
movsl
xchg
mov
test
jne
inc
jb
arpl
xor
rcl
rol
repnz
movsl
xchg
mov
add
push
mov
out
jb
adc
cli
int
fisttpll
push
mov
dec
pushf
inc
repz
hlt
push
in
aam
les
pop
in
xchg
jle
mov
scas
push
mov
and
adc
add
hlt
push
in
aam
les
outsb
movsb
outsb
xchg
jle
xchg
je
fs
cmpsb
inc
xlat
xor
and
adc
add
lret
jno
inc
les
xor
xor
sub
xor
test
repnz
das
pop
cmp
mov
in
cmpsl
aam
xchg
inc
mov
jl
pop
dec
dec
popa
and
inc
add
imul
or
dec
aaa
test
aam
lds
je
das
outsb
xchg
cmpl
mov
pop
scas
adc
test
loope
push
shll
xchg
outsb
imul
mov
push
xor
call
pop
icebp
sbb
sarl
out
hlt
in
jle
fsubrp
adc
xor
mov
in
sub
divl
xchg
outsb
aam
icebp
jle
jmp
fsubl
sbb
or
les
dec
or
test
xchg
mov
and
adc
add
hlt
push
in
aam
les
inc
movsb
je
jle
loop
sti
mov
adc
add
jno
je
cwtl
jb
pop
mov
cmp
sbb
adc
loope
ljmp
rcll
push
fimuls
out
jnp
add
mov
mov
cmpb
ljmp
xor
adc
add
hlt
push
in
aam
les
pop
movsb
outsb
xchg
jle
mov
scas
push
mov
and
adc
add
hlt
push
in
aam
les
pop
movsb
outsb
xchg
jle
mov
adc
mov
jp
in
pop
and
and
es
leave
fdivr
bound
sub
mov
push
xor
lret
sub
pop
jb
xchg
loope
or
loope
jb
stc
add
cs
shll
and
or
xlat
stc
jmp
sti
xor
std
mov
clc
cmp
jnp
push
ret
loope
add
add
cli
pop
sti
rorl
js
pop
int3
sub
xor
aaa
sti
rsm
sub
jge
add
jle
icebp
loopne
sbb
xchg
inc
aas
xchg
sub
mov
andl
popf
push
ret
mov
mov
mov
js
popf
push
mov
sub
jg
loop
rorl
leave
jns
insb
mov
loope
iret
cli
mov
insb
mov
leave
and
nop
sbb
adc
std
pop
push
lods
xchg
push
pop
popa
fnstsw
outsb
loopne
lds
xchg
ljmp
mov
gs
jnp
stos
cmpsb
xor
push
arpl
mov
mov
inc
xchg
adc
xchg
jg
ja
sarb
sub
shl
cmpsl
mov
lods
xor
jno
pop
push
sub
loope
add
push
lea
jbe
mov
jp
mov
mov
adc
xor
pop
and
jbe
in
mov
adc
or
cmpsb
xor
repz
inc
pop
lcall
mov
pushf
mov
fs
cvtps2pi
frstor
push
add
xchg
int3
sbb
mov
pop
adc
sub
add
mov
or
xlat
dec
rolb
icebp
and
outsl
dec
cmp
xor
xchg
repnz
sarb
adc
pop
fists
jmp
aaa
cwtl
lea
loop
push
aam
loop
test
sbb
dec
enter
or
std
dec
leave
xor
cli
fldln2
pmulhuw
pop
dec
bound
mov
pushf
mov
or
or
pop
mov
cltd
push
mov
cmpsl
and
add
fstps
push
xor
dec
push
daa
add
pop
dec
push
mov
loope
in
add
jp
in
loopne
sub
jle
bound
and
push
adc
ds
or
mov
lret
pop
aas
xchg
mov
test
mov
jno
and
aas
mov
pusha
insl
xchg
addr16
inc
int
xor
dec
scas
adc
sbb
popa
adc
inc
mov
loopne
inc
mov
notb
scas
inc
add
dec
je
jno
pop
shlb
dec
sbb
pop
push
arpl
add
fisttpll
insl
ljmp
inc
xchg
sbb
lods
inc
jl
adc
pop
sub
inc
or
cmpsb
jp
dec
scas
lret
jbe
aas
stc
data16
mov
mov
sub
aas
add
rcl
std
add
push
fstpl
sbb
subb
and
ffreep
pop
jno
je
sub
mov
shlb
shll
rolb
inc
ss
pop
cmp
outsl
mov
xor
mov
lcall
stc
inc
ret
jp
jns
adc
add
loop
cvtps2pd
mov
sahf
push
movsl
cmpsl
dec
arpl
stos
hlt
shrb
stos
in
add
add
imul
aas
pop
lret
mov
dec
dec
or
mov
ja
push
and
gs
in
repnz
fcoml
popa
je
adc
xchg
mov
cli
jecxz
scas
jnp
mov
scas
test
lahf
mov
mov
insb
jns
scas
ss
mov
push
pop
and
cmpsb
cltd
iret
scas
xchg
mov
jns
mov
int3
frstor
xor
movsb
test
xchg
in
test
adc
popa
outsl
nop
jae
pusha
cmc
xor
cltd
push
and
dec
shrb
bound
fwait
fwait
outsb
mov
xchg
les
in
xlat
orb
sub
not
imul
repz
adc
popf
les
jmp
dec
inc
jecxz
fisttpl
and
sti
or
add
inc
jmp
out
adcb
inc
xlat
out
imul
xor
sbb
insl
nop
popa
jb
sbb
test
inc
scas
and
pop
fidivl
outsl
negl
negb
and
dec
aaa
dec
xor
jno
ds
xor
cmpsb
addr16
pop
lret
dec
sbb
int3
loopne
jnp
loopne
adc
je
xor
dec
roll
sbb
adc
push
dec
imul
jno
lds
pop
fmuls
fstpt
jecxz
les
xchg
incl
xlat
clc
mov
and
aam
jns
sub
rcrl
ds
dec
fidivrl
outsb
push
and
imul
stos
add
or
and
mov
jp,pt
dec
mov
pop
int
pusha
es
movsl
shlb
jbe
rorb
cmpsb
mov
push
fisubl
rolb
mov
dec
sub
pop
lcall
dec
xor
testb
cld
cmp
mov
push
mov
xlat
mov
push
pop
ret
scas
or
push
mov
aas
movsb
bound
mov
in
pushf
sub
xchg
cmp
inc
les
into
xchg
iret
sbb
test
jbe
mov
fisubl
insb
and
ja
std
mov
sbb
dec
stos
enter
push
jo
mov
push
sbb
push
lret
push
sbb
push
out
lods
mov
incl
mov
fs
add
inc
lods
dec
sbb
cmp
dec
push
notl
xchg
jo
push
gs
xchg
pop
test
push
rcrb
jge
stos
xchg
out
xor
mov
push
addr16
dec
dec
mov
dec
cmp
fs
dec
push
lds
fsubp
sub
push
mul
jg
std
jno
sbb
insb
cwtl
jno
or
mov
sub
sub
inc
and
call
pop
addr16
or
dec
pusha
ret
sti
mov
cmp
inc
jle
dec
negb
pop
cmp
push
les
add
test
xchg
sub
dec
scas
mov
imul
pop
mov
cs
std
dec
test
push
xlat
add
or
xchg
adc
sub
test
jae
add
xchg
jg
jo
test
fists
shlb
fnsave
jnp
inc
call
call
add
push
inc
mov
shll
in
inc
jbe
cmp
mov
xchg
xchg
loope
or
inc
cmp
in
mov
call
add
outsl
sbb
or
push
outsb
sbb
mov
in
pop
or
negb
aaa
push
sahf
repz
xchg
scas
add
jge
nop
adc
leave
add
sbb
xor
push
aaa
cld
xchg
jne
mov
cwtl
inc
push
add
xchg
push
xor
xor
lds
cmpsl
mov
filds
adcb
popa
sub
out
mov
test
or
shlb
xchg
lods
leave
xlat
xor
xchg
addr16
es
jbe
jb,pt
insl
xchg
cmp
mov
idivb
inc
ja
push
repnz
mul
xchg
sub
cmpsl
fadds
adc
jmp
fidivrl
rclb
leave
test
pop
insl
test
mov
pop
sub
sbb
jb
pop
outsb
mov
scas
fists
cmp
stos
jb
mov
pop
or
outsb
mov
lods
inc
outsl
fstpl
jne
add
xchg
ljmp
test
hlt
fisttpll
push
adc
sub
xsaveopt
adc
dec
arpl
mov
jmp
pop
hlt
dec
xor
lea
xchg
fwait
mov
jecxz
pusha
imul
inc
push
repz
test
xchg
out
test
xor
aas
pop
push
in
out
add
popf
jp
stc
adc
loop
loop
dec
cmp
mov
cltd
out
aam
mov
inc
mov
inc
pop
loop
cwtl
push
adc
popa
nop
jp
jns
mov
ror
outsb
xchg
add
xchg
jbe
mov
and
movsb
jp
insb
xlat
jl
fisttps
and
add
cwtl
or
jo
xchg
mov
repz
mov
cmp
int
cltd
in
and
mov
sbb
mov
cmp
pop
jo
xor
scas
and
je
gs
dec
xchg
mov
sbb
aam
mov
and
jbe
rdpmc
jno
mov
imull
aas
jg
icebp
iret
aaa
test
out
ss
arpl
dec
and
pusha
xor
sbb
and
mov
flds
stc
es
xchg
adc
sbb
fbld
imul
xor
mov
loopne
sbb
pop
out
lods
sbb
sti
sti
cli
push
mov
push
loopne
test
jecxz
and
jmp
fldt
adc
lret
je
outsl
je
iret
sub
sbb
jbe
rolb
xor
inc
jns
imul
jmp
xor
jmp
std
loop
fnstcw
sub
fiaddl
in
push
mov
in
lock
frstor
jle
pop
orb
lcall
imul
insb
jno
fildl
dec
xor
pop
movsb
pop
and
sbb
test
cmpsl
xchg
jl
adc
adcl
cli
push
sti
sub
jo
xchg
inc
push
dec
lock
sbb
filds
addb
pop
stos
mov
mov
jnp
push
xlat
pop
loopne
adc
mov
enter
and
ficomps
pop
lret
push
decb
mov
and
mov
dec
jge
fidivl
add
loopne
add
inc
lock
add
dec
xchg
or
sbb
mov
sub
add
mov
jp
adc
push
out
test
test
push
idivb
xor
push
aad
lahf
int
sub
jp
nop
fisttps
cmp
das
scas
push
adc
cmp
mov
dec
cmpsl
adc
dec
mov
mov
or
cmp
jp
js
mov
cmp
pusha
test
add
ja
xchg
sarl
adc
jg
mov
push
fs
mov
ja
lods
leave
xchg
cld
xchg
dec
out
xlat
pop
mov
fwait
or
cmpsl
lcall
loopne
shlb
inc
sub
movsb
push
repnz
out
pushf
mov
pop
cwtl
inc
pushf
push
repz
stos
cmp
push
ljmp
cmp
xchg
ficoml
into
lds
push
inc
or
xorl
mov
cmp
das
mov
mov
int3
jo
pop
movsb
jo
sbb
lods
mov
push
in
mov
pushf
stos
push
test
add
xor
in
in
outsw
mov
cld
sbb
xor
mov
sahf
adc
mov
mov
test
ret
cmp
movsb
dec
imul
inc
call
mov
pop
std
cmp
jmp
jae
cwtl
adc
aas
push
movsl
orl
in
jp
insb
sub
gs
pop
push
sahf
adc
mov
cmpsb
lret
or
popf
sub
jmp
mov
loope
pop
out
test
sbb
mov
dec
in
sbb
adc
cmp
je
lcall
lods
mov
dec
ljmp
pop
addr16
dec
adc
mov
cld
pop
bound
js
outsl
or
jae
test
inc
ss
or
mov
jb
or
daa
movsl
mov
sets
and
jb
dec
fdivl
xchg
cld
or
shll
lods
mov
push
mov
out
aam
sub
roll
hlt
jecxz
cmp
cwtl
andl
shl
mov
imul
sahf
in
insb
int3
fbstp
pop
test
aad
int
cwtl
sarl
in
lock
call
out
subb
dec
in
ja
clc
mov
repnz
dec
mov
orb
sbb
cmp
push
add
mov
faddl
jbe
push
cmp
push
mov
mov
xchg
and
fidivl
mov
stc
je
adc
gs
lahf
icebp
inc
and
mov
add
aad
out
shl
adc
ret
sbb
cli
sbb
add
and
xchg
movsb
adc
sti
imul
cs
and
and
cli
jo
jo
and
adc
add
shrb
les
pop
pushf
push
arpl
sub
jmp
sbb
xorl
shlb
imul
xchg
jae
pusha
add
frstor
outsb
leave
sbb
mov
cwtl
imul
repnz
fwait
nop
inc
xlat
cli
les
dec
adc
arpl
push
mov
repnz
lahf
pop
mov
pop
mov
repnz
icebp
sti
jg
aas
hlt
cmp
mov
push
or
cmovp
adc
mov
xchg
push
in
outsb
jp
inc
xchg
aaa
cltd
pushw
or
shlb
leave
push
mov
outsl
mov
leave
ret
sub
mov
int3
cmc
aam
sbb
sbb
push
cmp
stos
cwtl
mov
adc
in
fiadds
lret
push
in
xor
pop
cmpsb
inc
lea
xor
rcr
inc
jecxz
lock
mov
cld
mov
int3
adc
pop
test
jl
xor
fdivl
insl
jo
mov
pop
mov
popa
jbe
sarl
push
jbe
stos
and
inc
fldcw
mov
and
xor
outsb
add
sbb
pop
jl
dec
aas
and
xchg
loop
or
in
mov
test
enter
and
pop
lcall
pop
sbb
or
jmp
xchg
push
sti
inc
mulb
cmpsl
test
pop
pop
in
gs
cwtl
js
lods
and
test
mov
arpl
xchg
into
jmp
push
fcmovbe
ds
push
xor
xchg
mov
stos
push
adc
xlat
insl
in
pop
push
or
ret
jns
nop
inc
sahf
jne
jl
call
jne
inc
bound
mov
arpl
cmpsl
or
adc
mov
and
inc
pusha
and
cltd
push
subw
js
fcmovnb
mov
cld
push
or
sub
jmp
xchg
arpl
cmp
cli
sbb
imul
push
jge
mov
cmpl
or
cmpsb
enter
jle
popl
scas
mov
ja
mov
mov
xchg
sbb
test
and
fistpl
jnp
imul
inc
por
cmp
in
std
adc
in
mov
test
mov
mul
jecxz
in
xor
push
mov
ljmp
leave
lds
sub
lods
jl
mov
jbe
fldl
repz
jle
icebp
sub
pop
mov
stos
lret
int
inc
jg
pusha
icebp
push
mov
jns
mov
div
pop
leave
sub
or
aam
xchg
ds
and
fwait
xlat
or
inc
imul
and
fidivs
jnp
inc
movl
out
push
adc
sahf
imul
add
jb
jmp
outsl
outsb
sub
mov
lahf
or
xchg
mov
push
fsubs
das
sub
lret
dec
inc
sbb
leave
mov
lcall
aas
add
clc
mov
add
jns
cmp
clc
pop
adc
ds
push
ds
fwait
aad
xor
jmp
popf
insl
neg
pushl
mov
cmp
aam
out
nop
sub
sbb
push
cld
sub
jnp
mov
cmpsb
mov
pop
cli
add
nop
fstpl
sti
jne
inc
dec
inc
inc
jecxz
add
aam
push
cmc
mov
out
cmpsb
shrl
loopne
rcll
aam
lock
jo
jl
adc
ljmp
imull
pop
loope
mov
iret
sub
testl
call
cmp
movsl
jecxz
sub
repz
cmpsl
fdivp
test
dec
imul
les
js
popf
frstor
jne
leave
or
xor
mov
mov
lds
jne
mov
fnstenv
xchg
arpl
lea
push
mov
sbb
or
jno
lock
jg
fisttps
int3
je
mov
cmp
mov
jo
push
xchg
fists
xchg
mov
shrb
inc
cwtl
sbb
jae
cmp
inc
es
sbb
sbb
out
aad
adc
shlb
dec
sahf
ficoml
and
lds
cs
int
cli
popw
jno
mov
loopne
adc
sub
inc
aad
ja
dec
rol
push
repz
lods
cmpl
mov
mov
add
pop
test
xor
stos
adc
mov
sarl
pop
insb
movsb
push
movsb
ljmp
enter
mov
lods
addr16
js
fstpl
lret
orl
rcll
cmc
fcomps
pop
add
shrl
mov
fistpl
shrb
enter
fld
push
stos
xor
les
lods
dec
cmp
loopne
in
mov
jle
xchg
es
test
rol
mov
test
popa
jle
test
negb
jmp
aam
insl
repz
insl
clc
fnsave
xlat
lcall
enter
clc
jo
clc
inc
mov
popa
adc
ja
push
mov
mov
dec
push
dec
ja
loope
jl
into
loopne
pop
out
cmp
dec
xor
xchg
pop
imul
rclb
jle
stos
fisubs
mov
cld
out
fistpl
cmp
sbb
cmp
repz
cwtl
xlat
addl
fcmovu
enter
popf
add
cmpsl
std
xchg
jg
popf
jecxz
cmp
mov
insl
push
and
xlat
jge
mov
mov
push
push
and
stc
les
mov
test
test
jge
ljmp
in
jnp
orb
cs
lods
jnp
jmp
je
insb
xorb
inc
mov
add
sbb
jae
mov
in
mov
test
clc
or
add
sbb
hlt
adc
mov
push
mov
push
and
in
addr16
xor
test
lods
popf
pop
sub
pop
pushf
ds
lods
sub
sub
fwait
mov
dec
andl
shll
lock
mov
dec
push
dec
jmp
aas
ljmp
cmp
push
push
jl
popf
lcall
test
mov
lahf
int
xor
sub
ret
cmp
call
js
in
addb
adcb
inc
and
jno
in
or
test
ljmp
mov
dec
pop
pop
sar
jmp
and
bound
inc
mov
insb
call
add
add
subb
pop
lret
adc
sbbl
and
ja
xor
das
loope
insl
mov
mov
mov
std
or
repnz
cmp
mov
les
jp
xor
xor
cmpl
push
inc
cmpsl
ljmp
inc
sbb
push
fstp
sub
mov
insl
push
ja
pop
mov
sbb
sbb
mov
cmp
adc
mov
mov
sub
mov
scas
jmp
jo
dec
sub
xchg
mov
add
or
adc
push
mov
xchg
dec
sbb
add
mov
inc
testl
insl
lret
mov
cltd
out
movsl
jg
andb
jmp
fildl
insb
inc
sbb
cld
push
cmp
sbb
lea
dec
push
test
outsl
sti
mov
xchg
test
test
add
sub
lods
dec
inc
push
loop
ret
sbb
adc
jbe
mov
fnstsw
xorb
sti
fnstenv
push
inc
rcr
mov
push
xor
sbb
inc
orl
or
mov
pop
push
stc
in
xchg
rcr
xor
push
adcl
xor
popa
dec
rorb
xor
xchg
cmp
cmp
dec
repz
adc
call
mov
pop
mov
les
pop
test
into
icebp
data16
mov
or
mov
lret
rorl
mov
inc
mov
ret
pop
imul
ds
or
addl
outsl
in
das
pop
popf
xchg
clc
je
ljmp
leave
test
push
push
dec
insl
dec
cs
add
or
xor
jg
lcall
rcrl
and
hlt
fcomip
popa
xor
xor
xlat
xchg
adc
mov
aas
in
cmp
into
add
divl
fnop
push
sti
sbb
xchg
insl
sbb
xor
loopew
add
push
xchg
dec
sub
jle
clc
xchg
sbb
dec
insb
movsl
push
stos
loope
push
mov
inc
into
xor
and
adc
add
hlt
push
in
aam
les
pop
movsb
outsb
xchg
jle
mov
scas
push
mov
and
adc
add
hlt
push
in
aam
les
pop
movsb
outsb
xchg
jle
mov
fs
push
mov
and
adc
push
in
aam
les
pop
movsb
outsb
xchg
jl
mov
scas
push
mov
movsb
outsb
xchg
jle
icebp
or
dec
test
ds
cmp
pop
xchg
imul
mov
les
pushw
ja
inc
ds
cs
ss
push
jle
outsb
out
testb
fidivs
lcall
push
cs
ss
push
ds
outsb
out
testb
loop
xacquire
xchg
mulb
push
insl
sub
pop
or
jae
js
mov
lret
mov
inc
loop
ss
sbb
xchg
outsb
bound
adc
scas
adc
sub
pop
fbstp
lods
fwait
cmp
pop
mov
pop
aaa
lea
fwait
jecxz
lahf
decb
sub
pop
enter
and
jbe
dec
dec
arpl
negb
sbb
xchg
adc
loope
pop
mov
pop
jbe
test
push
es
sub
cli
mov
add
dec
and
ret
stc
sub
jne
leave
dec
push
outsl
pop
xchg
sbb
xor
cltd
inc
dec
or
xchg
sarl
pop
mov
ljmp
movsb
cmpsb
fidivs
outsb
cbtw
jbe
inc
cs
data16
mov
jle
add
std
mov
mov
pop
adc
dec
cs
daa
xor
cmp
push
jae
fistpll
std
nop
les
inc
pop
push
dec
daa
push
pop
add
arpl
test
mov
xchg
out
pushw
jbe
inc
ds
cs
ss
push
jle
outsb
out
testb
fidivs
out
pushw
jbe
inc
ds
cs
ss
push
jle
outsb
out
rcrl
sbb
mov
insl
mov
inc
inc
pop
outsl
test
ljmp
das
cld
lods
pop
jno
cmpsb
shll
cmp
push
mov
rclb
sti
push
mov
mov
movsb
xor
stos
dec
sbb
ds
mov
pop
jae
pop
add
test
int3
loop
pusha
sbb
push
xlat
shrw
sbb
xchg
cmp
js
ficompl
lods
idivb
stos
nop
lds
pop
fisubs
cmp
mov
cmp
and
shr
jp
push
mov
les
push
mov
into
sbb
dec
add
ds
ret
xor
bound
popa
aad
arpl
dec
xchg
lret
leave
fisubl
fidivrl
sbb
ret
jo
jmp
jl
push
int3
int
add
in
stc
lds
jbe
ret
bound
aad
and
inc
inc
jp
outsb
addr16
pop
in
jle
xchg
adc
mov
sbb
add
int3
shlb
jmp
clc
cmp
sbb
ret
shlb
xchg
or
std
jecxz
jns
scas
mov
int
leave
lods
lea
push
push
inc
fmul
mov
gs
mov
add
movhps
xor
sub
sbb
pop
xrelease
mov
mov
push
jmp
and
mov
inc
adc
xor
cmp
mov
lret
int
lret
mov
cmc
or
push
or
movsl
and
and
outsb
icebp
mov
or
mov
inc
jae
jp
cs
lods
push
ret
and
aad
push
adc
sbb
ljmp
jbe
in
jge
mov
xchg
lods
ljmp
xor
dec
adc
add
inc
push
js
mov
xchg
lret
push
ss
pop
dec
cltd
jecxz
push
dec
daa
jge
add
inc
popf
loope
test
cli
jae
bound
inc
mov
out
arpl
jge
mov
jp
jp
pushf
adc
jo
lods
in
out
scas
xor
or
hlt
shl
stos
stc
and
sbb
push
sub
test
pop
add
sbb
jmp
ja
xchg
inc
cs
mov
lcall
imul
icebp
and
push
dec
fbld
in
dec
fsubrl
iret
cmpsb
push
sarb
mov
adc
inc
filds
inc
mov
adcb
push
dec
mov
and
fwait
dec
outsl
or
pop
gs
add
mov
jge
push
push
xor
popf
cmpsb
sti
sub
sub
and
and
or
cltd
jle
add
loope
fdivl
lock
and
testb
scas
test
mov
adc
or
hlt
push
int
xor
mov
xchg
or
aas
cwtl
loop
add
cmp
fsubrl
loope
xchg
dec
shll
xorl
idiv
cmp
mov
and
dec
and
push
push
xor
jle
jno
mov
mov
push
sub
push
push
test
add
xlat
mov
xor
adc
ds
sub
mov
rcrb
inc
not
int
jo
pushf
pop
shll
div
fcompl
pusha
inc
pusha
inc
add
dec
push
outsl
mov
nop
xchg
mov
stos
jge
mov
outsl
cmpsb
push
push
mov
subb
jae
and
adc
pop
int
xchg
mov
mov
loopne
mov
push
je
ret
and
dec
mov
mov
inc
jbe
bound
mov
sub
pop
ss
ljmp
cmpl
mov
sbb
cmpsl
sbbb
adcl
mov
sub
addr16
pushf
jl
insl
jo
lods
add
cmp
pshufw
dec
or
xor
js
pushl
inc
shlb
push
pop
sbb
icebp
imul
mov
jne
pop
xchg
mov
sub
pop
rcrb
stos
rcll
pushf
es
or
mov
sub
or
adc
aaa
xor
ret
jno
mov
aam
mov
adc
out
push
scas
loop,pn
shlb
mov
cmp
addr16
dec
rep
stc
lods
xlat
sub
dec
in
cli
or
sarb
inc
pop
cli
xchg
arpl
mov
scas
sbb
popf
inc
mov
scas
sub
jne
stos
pop
outsb
sbb
lock
mov
or
push
hlt
cmp
xchg
je
cmp
mov
repnz
mov
adc
dec
jecxz
add
mov
dec
loop
pop
stos
add
mov
js
arpl
cli
jp
jl
xchg
xor
xor
xor
jnp
mov
xchg
push
ficompl
sti
sub
mov
in
mov
out
addr16
sti
add
fs
into
mov
pop
xchg
sbb
jge
das
lods
fcomp
cmp
arpl
or
xchg
imul
mov
dec
xchg
jg
inc
jne
mov
aad
add
cmpb
mov
adc
popa
mov
jno
call
and
sahf
outsb
push
roll
test
mov
xchg
inc
insl
pop
pop
std
movsl
xlat
shll
int
xor
scas
xchg
pop
out
xorb
mov
insb
xchg
push
test
sbb
lods
xor
out
xor
mov
cltd
or
cmp
push
inc
fs
sbb
push
int
ds
jp
fsts
iret
arpl
lret
mov
lock
lods
cmp
cltd
adc
mov
fwait
cmc
push
or
stos
lret
leave
push
xchg
addl
cs
shl
mov
xchg
fildll
pushf
shr
dec
ljmp
je
clc
shll
ret
mov
cmp
aas
mov
dec
in
jge
mov
ds
fildll
xchg
mov
out
or
aad
and
jp
pushf
das
lea
scas
scas
sbb
test
jne
mov
test
jo
ljmp
movsl
lret
pop
sti
imul
inc
jb
lods
xor
adc
cmp
xor
dec
gs
inc
cmp
dec
adc
push
sub
cwtl
insb
daa
js
int
cli
aas
xchg
pop
sahf
push
pop
mov
jo
mov
ds
and
jge
push
lret
lahf
dec
push
cltd
adc
or
mov
decb
adc
inc
jbe
and
jnp
dec
push
mov
int3
movsb
fsubrs
cld
enter
adc
mov
ss
sub
push
imul
mov
dec
mov
push
inc
adc
out
or
inc
dec
mov
fnsave
mov
xor
cld
mov
stc
adc
cli
mov
mov
sub
dec
leave
das
in
inc
xchg
fs
and
enter
sbb
mov
cmpsb
ror
pop
icebp
dec
shll
cli
sub
xchg
inc
push
pop
push
push
xor
pop
ffreep
mov
int
sub
ss
jle
adc
dec
pop
les
in
jne
jle
stc
cmp
out
add
mov
xchg
mov
fiaddl
pop
jecxz
push
or
pop
add
jmp
ret
xor
icebp
sbb
int
mov
push
cmp
arpl
lret
insb
fsin
mov
test
sbb
mov
dec
mov
int3
inc
jg
adc
test
lods
stos
dec
cmp
and
shrb
push
push
mov
mov
mov
pushf
inc
test
test
sub
lock
dec
les
xchg
sub
repz
pusha
nop
dec
sub
pop
subb
mov
and
or
push
inc
or
fwait
cmp
xor
in
aam
mov
add
mov
jmp
jmp
int3
fnstcw
lret
jle
add
cli
rcrb
fs
iret
and
shll
test
dec
pop
int3
in
test
jae
sub
out
cmpsl
lret
insb
mov
cmpsb
mov
imul
sub
xchg
mov
add
add
aad
scas
push
jl
aas
jo
notb
jl
or
mov
notb
and
add
movsb
stos
xchg
add
add
mov
or
xor
lret
sahf
fdivs
popa
jmp
insl
push
mov
out
inc
iret
xchg
lods
add
xlat
xor
bound
mov
mov
aam
jne
enter
lret
mov
into
insl
inc
and
in
lods
loopne
psubd
mov
jl
mov
repnz
ds
in
and
gs
dec
push
popf
and
mov
lret
into
push
and
jecxz
lahf
and
les
loop
jo
loop
std
mov
adc
xchg
and
jne
push
test
mov
stos
loope
mov
cmp
stos
cwtl
add
jnp
outsl
test
aaa
push
add
jge
mov
clc
icebp
int
add
addr16
adc
insl
rorb
and
jo
repz
insb
popa
inc
push
adc
decb
jns
cltd
adc
xor
ds
movsb
push
xor
es
clc
mov
push
sub
aam
movsl
or
pop
ds
scas
jmp
cmp
ret
dec
cmpsl
jns
cmp
lret
sahf
dec
mov
mov
add
or
and
mov
push
jnp
push
mov
xchg
mov
in
sahf
arpl
jg
sbb
push
and
rcll
xchg
push
sahf
inc
dec
add
pop
mov
dec
ljmp
ret
dec
dec
aas
testb
jae
xor
je
pop
lret
jno
mov
insb
xchg
int3
ja
jmp
int3
push
repz
cs
xchg
mov
push
aas
movsb
arpl
stc
mov
add
or
into
xchg
inc
mov
push
ds
mov
outsb
cli
sub
rcrb
jp
pop
mov
mov
jmp
jmp
or
push
cmp
hlt
sti
pop
push
inc
inc
es
std
push
imul
mov
cmc
fldt
stc
and
mov
test
or
leave
loope
add
ja
xchg
icebp
out
fs
fcoms
in
pusha
stos
xor
idivl
mov
popf
lods
add
push
jo
stc
pop
sub
jne
pop
adc
dec
push
repz
inc
xchg
dec
mov
adc
pop
sahf
fwait
cmc
scas
and
lds
inc
cmp
repz
aas
fs
and
aad
xchg
push
pop
sahf
jns
inc
loopne
mov
lods
push
dec
dec
adc
cmp
fsubr
nop
mov
and
pop
push
and
mov
push
push
xchg
pop
jne
enter
rcll
iret
mov
in
data16
push
xchg
push
es
adc
or
mov
pop
or
shlb
dec
dec
das
lcall
jo
add
scas
fmull
bnd
mov
add
rcr
shrl
jmp
pop
movsl
mov
pop
push
test
shrb
es
leave
add
jo
mov
popa
andb
push
mov
jb
outsl
movsb
outsb
in
xor
enter
xchg
xor
sbb
lds
push
and
rorl
mov
test
sbb
lds
mov
sbb
add
mov
shll
shl
push
pop
push
hlt
xor
icebp
mov
dec
scas
mov
imul
in
sbb
aaa
lcall
and
fildl
sbbl
mov
adc
and
arpl
adc
mov
xchg
clc
pop
mov
daa
inc
push
lret
adc
arpl
fistl
pop
test
pop
jae
lea
push
sbbl
outsb
mov
xor
mov
mov
fwait
int3
add
pusha
pop
cmp
sub
xor
call
adc
movsb
xchg
add
dec
push
mov
outsl
and
movsb
mov
push
xor
adc
mov
or
aas
or
jp
popa
fstpt
ljmp
in
pop
adc
rol
adc
xor
in
push
or
cli
mov
lret
push
dec
nop
fwait
rol
fildl
sbb
aam
push
mov
cmp
jo
fstl
jae
insl
sbb
dec
rolb
arpl
sarb
stos
push
fld
divb
pop
push
lcall
dec
mov
push
nop
out
mov
mov
adc
xor
mov
rcll
sbb
xchg
xlat
add
jecxz
push
stos
movsl
jo
das
lret
mov
add
and
pop
cmc
call
in
stos
and
lods
push
push
mov
jb
xchg
das
or
ret
mov
ret
ja
mov
lods
xchg
fcoml
je
adcl
call
cmp
in
add
jae
adc
enter
not
dec
mov
ja
lret
mov
add
cmp
int3
inc
fs
lods
sti
hlt
jae
iret
xchg
dec
or
movd
arpl
dec
cmc
shrb
sub
jb
arpl
cmp
movsl
xor
enter
xor
mov
mov
sbb
sub
cmpsb
in
lock
inc
lcall
pop
xchg
stos
xchg
shr
cmpsb
popa
mov
rcll
inc
or
xor
int
js
lods
stos
cmp
xlat
push
mov
sub
dec
adc
cmp
stos
xor
icebp
data16
sbb
loop
add
cs
dec
movsl
cmp
rolb
inc
popf
inc
ds
cmc
je
shld
pop
push
fimuls
test
mov
push
out
inc
lret
inc
ret
xchg
mov
push
loop
mov
jns
cmp
sbb
stos
pushf
sbb
jae
fstpt
add
inc
pop
dec
stc
jno
cs
cwtl
ja
push
cwtl
mov
sar
hlt
and
cmp
adc
jns
into
sbb
jmp
outsb
movsl
out
lods
mov
pusha
test
test
test
push
sahf
ss
ds
jno
das
or
push
jns
push
push
pushf
mov
dec
push
xchg
mov
int
andl
dec
nop
scas
test
jo
or
mov
aad
mov
inc
mov
mov
jae
js
mulb
sbbb
pop
or
scas
mov
mov
gs
ds
sub
mov
adc
sbb
xor
dec
jmp
icebp
cmovnp
idivl
lods
clc
xchg
adc
jmp
mov
adc
lret
fs
leave
aas
inc
rcll
mov
jbe
fisttpll
and
je
das
loope
enter
roll
add
fnstcw
xchg
xchg
dec
mov
cmc
xchg
push
aas
mov
xor
xor
aaa
ret
jmp
mov
push
jle
or
mov
add
adc
mov
sub
pusha
in
sub
cmp
jnp
pop
cmc
cmc
mov
sub
xor
cmpsl
push
insb
aaa
popf
add
ret
push
and
pop
aad
int
testl
pop
or
pop
or
mov
aam
leave
sbb
inc
xchg
jmp
add
test
fimull
loopne
sbb
testl
loope
jg
idivb
ja
fiadds
movsb
mov
addr16
lock
push
xchg
mov
lods
inc
xlat
out
cmp
cmp
rcl
pop
fmull
add
pop
stc
add
int3
sub
adc
jle
mov
js
sahf
cld
aaa
jmp
push
cmpsl
fiaddl
mov
aaa
repnz
inc
mov
lret
xor
aas
push
or
sbb
adc
out
mov
jge
into
pop
repnz
fdivrs
xor
mov
orl
fimuls
cmpsb
xchg
pop
into
int3
daa
pop
gs
inc
repnz
loopne
aam
scas
test
mov
sub
mov
negb
mov
and
pop
inc
clc
outsb
adc
xor
inc
inc
push
dec
fidivrl
les
add
mov
movsl
jo
addr16
fsubp
xchg
xchg
and
aaa
adc
xchg
fildl
lea
imul
mov
add
adcl
in
add
pop
mov
fs
mov
lcall
pandn
jnp
and
or
test
mov
jno
shr
add
cs
ja
jo
mov
add
sub
lret
fcmovnu
enter
adc
insb
test
sbb
push
sahf
mov
cmp
cmpsl
fimuls
pop
jmp
stos
out
jne
sub
cmp
add
mov
pop
popa
pop
jae
cli
pop
adc
ror
xorl
loop
dec
and
cmp
out
push
add
cmpb
fs
cmpsl
ret
into
xor
dec
mov
xor
sub
cli
dec
pop
xlat
bound
jecxz
cmp
movsl
fcmovnu
jne
cmpl
and
cmpsl
jne
nop
and
shrl
movsb
mov
xchg
shrb
jl
ds
pop
call
xor
lcall
add
cmc
push
and
push
or
mov
popf
xchg
xor
jmp
out
js
arpl
sti
cmp
sahf
out
push
inc
xchg
pop
shlb
dec
jle
mov
mov
sbb
inc
imul
scas
popa
mov
cwtl
cmpsb
pop
xor
mov
and
gs
pop
insb
mov
lret
jg
lret
not
mov
pop
arpl
or
cltd
cmp
xchg
imul
xchg
repnz
dec
lea
popa
and
mov
bound
push
xor
orb
fstl
adc
ja
adc
inc
sbb
mov
insb
shlb
outsb
or
adc
sub
ljmp
push
mov
cmpb
sbb
sbb
or
mov
adcb
xor
outsb
jo
jbe
in
and
dec
sahf
or
pop
sbb
inc
dec
imul
mov
aaa
jmp
sub
mov
or
inc
add
inc
pop
fs
push
hlt
add
sti
mov
stos
movsb
in
lds
xchg
sbb
ret
aad
arpl
jmp
aaa
jmp
and
loop
fwait
jg
into
aam
into
cmc
daa
adc
out
sti
dec
pop
jg
push
xchg
lock
jnp
adc
sbb
mov
jb
outsl
les
mov
push
add
fwait
jle
jno
gs
mov
mov
push
jno
cli
add
jns
lds
enter
mov
fsubrs
pop
cmp
sub
adc
iret
out
push
pop
lods
add
and
xor
jp
dec
dec
jae
jno
out
pop
mov
andb
inc
cli
mov
mov
cs
add
mov
in
xchg
dec
scas
jo
and
lods
jp
add
push
movsb
shll
adc
std
stos
pusha
cli
clc
or
dec
ja
idiv
aam
sbb
cwtl
enter
cs
xor
lock
fcompl
outsl
mov
dec
pop
insb
js
pop
inc
inc
push
lods
mov
enter
cli
aas
pop
xchg
mov
cli
movsb
stos
movsb
pushf
dec
jle
jae
outsb
push
cmp
or
ror
lcall
rorl
lcall
daa
push
loop
jno
das
mov
and
mov
and
aam
lcall
lock
pushf
test
push
inc
and
push
ja
dec
sti
daa
mov
xchg
cmovp
add
dec
or
add
mov
pop
testl
mov
shlb
adc
pop
mov
jae
jmp
shlb
sbbb
and
repnz
mov
jae
or
out
pop
push
cmpl
ja
ljmp
mov
in
pop
sahf
das
inc
dec
stos
pop
sbb
out
or
pop
and
push
enter
lretw
dec
cmp
ds
into
incb
cld
test
inc
loopne
xor
push
or
js
cmp
push
or
lods
pop
ss
aad
ja
push
xchg
stc
in
jmp
inc
shl
hlt
in
imul
sti
mov
push
xchg
outsl
mov
scas
cmp
jle
adc
es
jp
mov
rclb
jne
fpatan
push
dec
or
test
cmp
xchg
aam
mov
cmc
repz
xchg
cli
xchg
insb
inc
into
cmpsl
ds
loopne
int3
fidivrs
inc
stc
cmpsl
sbb
dec
repnz
mov
ret
or
into
push
arpl
cmp
xor
das
pop
push
sub
fdivrl
out
push
mov
imul
jne
xchg
xchg
iret
notl
shlb
addr16
jnp
ficoml
and
mov
rcl
scas
cmpsb
fidivs
out
pushw
jbe
inc
ds
cs
ss
push
jle
outsb
out
testb
fidivs
out
pushw
jbe
inc
ds
cs
ss
push
jle
outsb
out
jbe
inc
scas
fidivs
out
data16
jbe
inc
ds
cs
ss
push
pop
push
outsb
out
testb
fidivs
out
data16
movsb
in
ds
pop
push
inc
mov
andl
in
lret
and
stos
rcrl
insb
dec
jl
or
sbb
sub
cmp
ljmp
mov
mov
jp
dec
jl
or
js
sub
cmp
push
ljmp
pushf
stos
aam
orb
pop
or
sbb
insl
pop
fs
imul
mov
mov
jg
pop
packsswb
pop
sub
or
jb
xchg
jne
fsubrl
cmp
xchg
pop
xchg
mov
rep
or
imul
mov
in
cmp
jns
iret
or
mov
or
aas
xchg
cmp
arpl
xchg
loop
lea
loopne
fs
xchg
jne
subl
ret
sbb
and
jae
pop
xor
loopne
mov
xchg
mov
pop
jns
cmp
in
outsl
fdivl
ficompl
add
inc
fbstp
jl
mov
sbb
imul
fdivr
in
lret
mov
add
mov
dec
bound
sub
cmp
pop
jae
out
stos
mov
loop
jmp
into
sub
das
sbb
pop
pop
jae
push
int3
push
lahf
stos
scas
aaa
std
test
iret
je
sbb
aas
jg
jns
pop
pop
jge
mov
mov
pushf
mov
dec
push
jp
dec
jl
or
sbb
sub
cmp
int3
ljmp
mov
mov
jp
dec
jl
or
sbb
sub
cmp
int3
ljmp
rcr
push
int3
add
in
loope
or
mov
inc
xchg
mov
mov
xor
idivb
imul
fdivrl
mov
cmp
push
mov
int3
pop
push
lret
out
sub
inc
in
dec
add
xlat
shrl
pop
ss
mov
cli
mov
pop
inc
inc
shlb
filds
out
stc
push
and
sub
cltd
sbb
out
aam
ds
push
mov
scas
es
and
pop
fildll
out
pop
inc
icebp
push
cmp
sbbl
or
test
leave
aam
int3
sbb
push
xchg
xchg
mov
push
int3
jbe
negb
xchg
out
push
cmc
fsubl
movsl
lahf
push
or
in
les
lock
xor
xchg
inc
push
pop
fsubs
inc
xlat
repnz
sbb
fldcw
dec
or
or
imul
mov
jge
ss
decb
push
xor
jge
dec
lods
and
cs
xor
out
jnp
and
imul
add
fdivl
pop
mov
out
jge
jbe
pop
xchg
mov
dec
jb
pop
push
pop
add
popa
mov
xor
push
js
out
mov
push
es
mov
hlt
cmp
pop
pop
mov
or
icebp
pusha
int3
mov
fwait
adc
cmpsl
adc
rcl
xlat
sbb
dec
scas
loope
or
hlt
inc
mov
pop
fdivl
dec
pop
push
shll
and
js
push
xor
lret
jne
nop
int3
ss
lods
or
dec
test
sub
mov
add
jno
lea
adc
ds
sub
add
or
shl
mov
test
ljmp
es
mov
xchg
movb
orb
add
loop
mov
pop
jg
cld
clc
xor
cld
push
or
aas
xor
xchg
xchg
daa
or
push
jo
imulb
pop
mov
xchg
rclb
xorb
jg
sti
mov
sub
fst
fstl
sbb
leave
and
jno
ss
data16
cli
cmp
pushf
jns
das
sbb
ja
sub
push
fidivs
adc
loop
dec
push
cli
ds
and
shrl
mov
and
push
or
push
adc
rcl
sub
xchg
mov
fwait
lret
mov
ja
xor
or
xchg
daa
iret
add
add
vorps
icebp
out
pop
ret
jl
inc
sbb
enter
add
cmp
inc
mov
pop
int3
dec
clts
sub
mov
movsb
lods
or
mov
push
loop
sub
sub
jae
xchg
push
pop
or
inc
je
cmpsl
xor
repz
pop
xor
or
in
inc
sub
and
sub
mov
ret
hlt
mov
cmp
sub
mov
scas
jnp
push
test
or
add
push
jo
mov
add
mov
or
push
pop
cltd
add
dec
pop
adc
iret
lahf
sub
xchg
movb
in
into
aam
jne
out
jb
fcoms
sbb
cwtl
dec
in
bound
jge
les
push
xchg
sbb
js
insl
jmp
imul
push
pop
pop
in
lds
xor
mov
xor
scas
pop
gs
imul
out
dec
add
ret
stc
pushf
sub
jle
hlt
or
test
and
cmp
cwtl
jp
nop
loop
and
add
inc
or
lret
sbb
push
jo
divl
aas
adc
cmp
cmp
mov
sbb
popa
adc
xlat
shlb
mov
hlt
aas
lret
test
fdivl
cmpsl
lds
lahf
rclb
jbe
dec
es
pop
mov
clc
pop
mov
lods
ret
mov
mov
xchg
ret
pop
aam
fcoml
fs
adc
push
ficompl
daa
mov
xchg
or
icebp
lcall
data16
mov
jle
pop
mov
mov
enter
rol
and
sbb
sub
cmc
or
xchg
in
jecxz
shll
fs
mov
fildl
dec
cmp
add
shr
jge
pushf
rcrl
ret
popf
out
mov
loope
jle
jmp
mov
fldl
je
lods
fucomi
adc
test
out
rorb
stc
mov
jbe
xchg
mov
rcrb
lret
out
out
jge
fistps
in
fisubrs
aad
inc
cwtl
dec
ljmp
stc
daa
dec
fwait
int
daa
mov
in
pop
pop
mov
lret
jge
add
pop
push
ja
inc
stos
mov
jmp
jno
sbb
lods
pop
pop
jle
test
lods
xchg
aaa
mov
mov
push
adc
inc
jbe
adc
or
int
test
shlb
out
mov
dec
call
loopne
xor
add
in
sub
rcrb
and
pop
xchg
fisttpll
push
test
call
stos
gs
cmp
dec
movsb
jp
jecxz
inc
lret
mov
enter
add
push
xchg
push
sbb
std
in
push
xchg
loopne
pop
push
sbb
cli
outsb
adc
pop
ret
popf
sti
mov
ds
mov
test
imul
shlb
push
aaa
je
cltd
cmp
adc
in
cmp
cmp
xor
push
outsb
dec
out
push
imul
cmp
sub
leave
aad
add
lock
add
stos
sti
add
xor
dec
mov
lret
xchg
lds
xor
pusha
scas
lret
adc
cmp
push
push
sub
fld
xchg
ljmp
addr16
cmp
stc
inc
iret
mov
sarb
mov
pushl
dec
pop
or
xchg
loope
sbb
out
sbb
cmp
dec
fwait
cmp
loop
jle
adc
ljmp
sub
gs
pushf
fwait
pop
pop
popf
ret
mov
iret
shll
push
inc
dec
and
clc
mov
adc
outsb
lea
cmp
xchg
dec
mov
dec
adc
imul
inc
sub
daa
je
inc
iret
xchg
mov
cmpb
lods
das
cltd
jg
xor
inc
cli
rorb
cmp
popa
loope
xchg
adc
and
xchg
or
lods
mov
scas
sub
lcall
and
sub
fstl
out
sbb
push
cld
flds
cs
ljmp
mov
int3
shlb
pusha
roll
imul
mov
fdivrs
mov
insl
cltd
pop
pop
mov
sbb
push
cltd
cltd
push
dec
push
test
leave
fsubs
daa
test
ja
or
sbb
mov
dec
rorb
push
sbb
scas
clc
or
and
mov
pop
xchg
out
xchg
test
pop
cmp
adc
fmull
shll
scas
shr
mov
lahf
mov
inc
xor
inc
testb
sbb
jg
push
lds
push
adc
addl
add
div
imul
movsl
out
mov
and
dec
jmp
out
xor
push
int
test
nop
sbb
adc
icebp
cmpsl
hlt
orl
das
adc
inc
pop
fwait
std
sub
movsb
imul
js
sbb
cmc
imul
inc
xor
js
add
fistl
sbb
xchg
pop
sahf
mov
xchg
xchg
pop
inc
mov
lret
cmp
and
rorb
cmp
in
aam
out
enter
xor
mov
mov
rolb
stc
sbb
jp
add
sub
mov
mov
neg
and
js
dec
xchg
test
or
or
ret
out
add
cld
jl
dec
xchg
jl
xor
or
adc
test
loope
mov
stos
sarb
dec
test
cwtl
out
ja
out
js
sahf
js
mov
dec
arpl
ss
popa
insb
jp
fisubl
sub
pop
sbb
arpl
sub
sbb
jl
leave
scas
mov
xor
mov
cmc
mov
lds
enter
popl
mov
cmp
jecxz
out
cmp
dec
xor
jmp
outsl
jecxz
mov
and
je
lock
sbb
fmull
or
aam
mov
call
into
loopne
shrl
div
push
popf
cmp
adc
cmpsl
daa
iret
xchg
fldcw
xor
in
pop
mov
scas
jb
pop
or
inc
cltd
ljmp
in
mov
shl
jle
dec
rorl
mov
cmp
lea
scas
fistpll
loop
popa
iret
addr16
dec
int3
std
jae
clc
xor
cld
mov
imul
xchg
decb
lcall
aam
movsl
jne
roll
xor
push
cmp
cmp
faddl
jo
std
insb
fs
and
ficomps
xchg
loope
inc
inc
xor
sbb
sahf
cld
sub
push
rolb
pop
cmp
add
jb
sar
idiv
jp
lea
xor
jb
jb
in
ret
push
lcall
dec
jmp
decl
or
fistpl
out
xchg
sbb
cmc
xor
mov
or
jns
pusha
mov
mov
xor
mov
lods
test
call
addr16
jbe
sti
cwtl
ljmp
cltd
mov
add
cld
stc
and
add
mov
shll
outsl
into
xchg
add
pop
cwtl
xor
cmp
push
push
jnp
ljmp
sub
out
stc
xchg
xchg
xlat
jl
cmp
ret
cmp
int3
add
jb
pop
adc
imul
test
adc
jl
xchg
and
dec
nop
jecxz
or
mov
pop
or
int3
clc
adc
daa
into
mov
mov
and
cld
and
icebp
test
dec
xchg
dec
jno
stos
push
adc
xor
out
ja
out
sub
xor
add
popf
cmpb
pop
mov
fiaddl
imul
aad
jno
xor
call
out
pop
or
xor
shlb
fcmovne
mov
jge
push
push
icebp
add
adc
fisttpl
test
dec
lahf
dec
cmc
add
add
out
lock
add
in
jg
adc
fwait
mov
iret
or
jg
inc
mov
movsl
insl
imul
pop
dec
aaa
pusha
and
mov
dec
jp
das
cld
ficompl
ds
jne
and
leave
and
jae
lods
sub
lods
adc
sti
jmp
ljmp
push
xchg
movsl
inc
xor
nop
jp
andb
hlt
test
adc
xchg
or
xor
mov
shl
popa
push
add
or
adc
mov
cwtl
dec
push
pop
pop
out
pop
cld
sbb
xor
and
add
pop
and
mov
ds
cmpsb
loop
rcrl
lods
and
add
jne
mov
aas
ja
push
inc
xchg
mov
ret
jnp
or
push
pop
jno,pn
or
adcl
xchg
sahf
jo
lahf
test
aas
mov
adc
mov
pop
scas
movsb
scas
xlat
lds
mov
pop
pop
icebp
in
cmp
fldenv
cmp
and
out
inc
stc
popf
fwait
xor
sub
rclb
int
add
lcall
idivl
out
loopne
adc
popf
arpl
adc
adc
sahf
fs
inc
adc
fisubrs
popf
scas
pop
orl
cmpsb
popf
pop
cmp
dec
lret
ljmp
inc
sub
jnp
cmpsl
mov
inc
inc
and
mov
out
push
dec
cmp
out
mov
jnp
mov
inc
sbb
in
pop
add
orb
push
add
nop
int
dec
and
mov
or
lcall
or
mov
mov
jo
push
dec
push
mulb
jp
imul
imul
cmp
aaa
stos
lods
mov
test
scas
or
or
jnp
jo
icebp
cmc
jae
sub
push
arpl
push
cmp
hlt
cmp
aaa
pushf
inc
mov
fidivl
mov
rolb
out
inc
lahf
js
lcall
cmpl
mov
insl
xor
pushf
adc
mov
lret
data16
int3
mov
pop
stos
je
xor
add
cmp
inc
mov
dec
mov
xlat
mov
mov
inc
adc
sbb
loopne
insb
cmc
mov
push
das
test
jns
ret
test
push
movsl
iret
fcmove
xchg
jns
xchg
xchg
mov
inc
or
jg
mov
mov
mov
aas
dec
mov
lahf
jo
mov
push
test
jp
jnp
out
leave
mov
addr16
pushf
dec
jno
pop
cmp
cld
add
mov
adc
add
sub
div
cmpsl
mov
mov
movsl
ljmp
and
jo
lods
cmp
rclb
pop
cmp
test
enter
lods
mov
add
dec
aaa
mov
xor
in
mov
xchg
fmull
xchg
cmpsb
scas
or
gs
test
jbe
gs
outsl
mov
popa
sbb
sbb
paddw
pop
pushf
pop
call
imul
data16
fnstsw
loop
push
xor
dec
aaa
int3
push
mov
xor
adc
jmp
dec
test
sub
or
jg
stos
jecxz
scas
mov
sbb
dec
movsb
mov
fnsave
sahf
inc
sarl
das
cltd
ror
mov
mov
mov
fldl2e
pusha
xor
jecxz
mov
or
daa
outsl
js
imul
xchg
add
fucom
push
inc
add
add
lods
push
stos
xor
rcrl
jmp
xor
scas
xor
data16
lcall
or
mov
sbb
inc
mov
clc
movsl
pop
bswap
ret
cltd
jae
sub
adc
mov
jge
hlt
movsb
ret
fsubl
mov
add
dec
dec
imul
fisttpll
jne
int
fisttpl
push
call
aam
inc
push
or
xchg
in
test
add
lods
jnp
adcl
pop
loopne
orl
sub
mov
sub
popa
lcall
mov
lcall
cmp
pop
popa
mov
js
or
sub
fwait
sub
insl
lock
es
ljmp
stos
fwait
push
bound
rclb
xor
sbb
push
mov
cmp
inc
pop
mov
lods
mov
mov
jo
pop
mov
clc
mov
mov
fucomp
sub
inc
push
jno
pop
lock
testb
dec
add
push
call
imul
inc
jle
inc
cmpsb
mov
push
popa
pop
pop
xchg
sbb
das
sub
push
adc
andl
mov
mov
xorb
int3
adc
push
mov
xor
out
or
xor
xchg
inc
fcomps
jb
pop
idivb
add
cmp
push
lods
pop
xchg
mov
std
xorb
push
sub
and
add
lahf
fiadds
mov
hlt
fwait
xorb
inc
in
inc
dec
mov
sbb
out
es
rorb
dec
out
shlb
pusha
xchg
sahf
imul
repnz
fnstcw
stos
sub
cmp
jo
mov
sbb
adc
lock
lret
in
andb
mov
cmc
fwait
in
loopne
push
pop
shl
xor
inc
in
loopne
dec
push
lahf
call
loopne
shll
jecxz
pop
aad
jno
js
out
test
mov
imul
mov
mov
nop
loope
fnsave
mov
jmp
inc
push
mov
lods
daa
mov
ss
pop
xchg
call
mov
rorb
outsb
and
cs
mov
ret
fdivs
xchg
out
cmp
inc
loop
xor
sbb
insl
add
out
mov
and
pop
out
dec
insb
imulb
cmpsb
xchg
pop
or
xor
fsubs
test
inc
xchg
pushf
sar
dec
cmp
stos
mov
sub
mov
lods
mov
dec
mov
sub
outsb
mov
jno
sti
lea
loope
aaa
mov
inc
lods
popa
and
xchg
test
cmpsb
cmc
mov
sarb
xchg
aaa
mov
sahf
aas
or
lods
sub
scas
int3
pusha
jle
mov
iret
and
mov
or
sahf
push
dec
xchg
test
pop
shll
inc
jle
mov
jb
nop
sub
dec
loopne
dec
imul
aad
push
fabs
dec
data16
cmp
adc
icebp
pop
or
jno
movsb
jle
fstl
dec
jae
inc
jg
orb
pop
adc
inc
not
xlat
mov
adcb
lods
inc
mov
movsb
clc
sub
and
mov
inc
test
mov
mov
pop
out
push
movsl
jo
int
jb
cmp
xchg
sub
pop
mov
nop
mov
cmc
mov
xchg
push
ret
mov
daa
cmp
mov
stos
je
sub
sub
cmpsb
pushf
jg
out
mov
in
sti
pop
test
cmpl
adcl
out
mov
bound
repnz
cmpsl
mov
jecxz
jns
shl
inc
call
lea
sub
sub
mov
lahf
enter
test
hlt
iret
je
adc
shlb
cwtl
arpl
nop
xchg
jbe
movsl
mov
daa
pop
insl
lret
fisubrs
les
idivl
jns
push
cmp
popa
nop
jp
fsubl
push
ficoml
push
out
inc
rorb
inc
les
and
cmp
xor
mov
shll
and
mov
pop
js
cs
fs
orb
xlat
xor
mov
orl
and
test
sub
out
mov
mov
pushf
in
and
xor
rcrb
mov
insl
inc
cmpl
xor
inc
pop
dec
or
dec
loope
ss
inc
xchg
inc
push
xchg
sbb
out
sub
xchg
test
add
out
mov
fiaddl
push
aas
cmp
mov
dec
rorl
pop
in
push
xlat
loop
stc
bnd
push
push
sub
jecxz
arpl
nop
dec
dec
pop
cmp
mov
mov
sti
jae
push
cmp
mov
lds
cli
cmp
sbb
in
push
les
mov
add
inc
rol
nop
lea
dec
in
adc
out
sbb
sub
js
pop
loopne
mov
adc
test
and
data16
mov
mov
ror
clc
cwtl
xchg
mov
mov
xchg
mov
lds
icebp
sub
loopne
cmp
or
sti
dec
pop
cmc
test
daa
fadd
mov
fnsave
and
out
cmp
sub
test
mov
mov
cmp
jle
or
in
pop
sub
sbb
es
mov
sub
cmp
js
and
iret
int3
imul
mov
adc
loop
jo
jp
data16
adc
sahf
inc
jo
inc
jp
lock
mov
in
add
scas
rorl
jmp
pop
pop
pop
popf
xor
or
mov
lds
mov
mov
push
cmp
je
cld
dec
scas
inc
in
adc
push
inc
and
pop
shl
and
hlt
aam
pop
pop
jbe
mov
repnz
aas
cmpsb
pop
scas
sbb
and
push
sub
mov
xchg
mov
mov
mov
std
leave
out
dec
xor
push
ja
clc
ljmp
aam
mov
stos
xchg
cmp
fldcw
sbb
pop
sbb
mov
jno
roll
daa
push
mov
aad
push
movsl
cmc
ss
add
adc
inc
pop
clc
stos
cmp
or
ja
xchg
stc
sarl
setl
push
popf
mov
hlt
cld
stos
mov
icebp
out
cli
test
jne
xor
addr16
sahf
jmp
mov
add
and
pop
jbe
adc
mov
mov
test
js
int3
out
add
dec
insl
dec
mov
hlt
shl
xchg
jg
testl
push
sti
in
mov
push
inc
lea
sub
inc
rorl
mov
or
movl
idiv
push
cwtl
repz
jl
adc
mov
inc
aad
jbe
je
imul
daa
fmuls
adc
sub
arpl
fimull
push
push
jae
push
sti
jne
cmp
or
mov
cs
scas
in
popf
dec
int3
sahf
lcall
xlat
cmp
cmp
pusha
or
xchg
loop
adc
insl
jae
xor
icebp
lock
push
and
xchg
mov
dec
and
mov
push
mov
sti
mov
stos
fcmovb
sbb
je
dec
cli
ret
lret
mov
mov
jp
dec
jl
or
sbb
sub
cmp
int3
ljmp
mov
mov
jp
dec
jl
or
sbb
sub
cmp
int3
ljmp
lea
mov
jp
dec
js
or
add
sbb
ljmp
mov
cmp
dec
push
rol
dec
jl
jnp
xchg
ret
in
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jecxz
arpl
mov
addr16
repz
jecxz
sarb
ret
cs
mov
outsb
jae
arpl
xor
and
adc
add
repz
jecxz
mov
ret
cs
mov
outsb
jae
arpl
xor
and
adc
add
repz
push
mov
cmpsb
rcrb
lret
or
outsb
add
adc
mov
and
ljmp
xchg
stos
mov
jbe
lods
es
fadds
push
xor
xor
negb
mov
dec
mov
fwait
jnp,pn
test
pushf
pop
dec
and
aaa
push
test
add
jecxz
icebp
test
cmp
or
add
or
xor
bswap
repz
adc
lds
jle
xor
mov
orl
push
fcmovnu
sub
adc
add
loop
pop
add
out
loopne
lret
mov
cmpl
fadd
push
shrl
lds
or
xor
das
dec
mov
outsl
sub
arpl
xor
and
adc
add
repz
jecxz
sarl
ret
cs
mov
pop
pop
icebp
daa
mov
xlat
or
into
push
mov
mov
mov
aas
out
cmp
sub
and
xchg
inc
stos
adc
mov
pop
cmpsb
inc
clc
cmp
pushf
ds
arpl
jb
and
adc
add
repz
jecxz
sarl
ret
cs
mov
outsb
jae
arpl
xor
and
adc
add
repz
jecxz
sarl
ret
cs
mov
outsb
jae
data16
fimuls
jmp
popa
xor
in
mov
jmp
lods
hlt
dec
lea
daa
cltd
cmp
pop
cwtl
test
aad
dec
fadds
test
ljmp
roll
dec
sbb
imul
inc
sub
pop
mov
rclb
jle
sub
mov
stc
sub
adc
pop
clc
mov
mov
rolb
add
in
sub
jnp
arpl
daa
fs
mov
incb
testl
sub
fisubl
mov
out
aaa
rclb
sub
aam
mov
inc
movsl
push
mov
jg
int
aas
es
jae
or
sub
ficoml
push
movsb
mov
stos
xchg
pop
mov
scas
leave
mov
hlt
int
adc
and
add
add
sahf
dec
std
and
inc
inc
std
cmp
mov
jg
dec
stos
mov
insb
jle
push
push
xor
stos
add
cmp
mov
hlt
fstl
cmp
popf
fldcw
cmp
add
in
xchg
int
pop
inc
mov
aam
mov
push
inc
pop
addr16
inc
dec
test
xchg
cs
jns
aaa
test
jecxz
in
aad
pop
lock
mov
cmp
into
sbb
outsl
push
test
push
cli
sbb
mov
subb
loopne
call
std
stos
lret
jbe
push
jl
and
push
out
push
adc
mov
jnp
mov
imull
pop
mov
jmp
dec
shl
cmpsb
int
mov
subb
out
cmp
bound
out
icebp
adc
mov
cld
mov
idivb
xchg
add
push
xchg
sbb
jne
adc
xchg
push
push
pop
pop
in
mov
jbe
cwtl
fucomp
sub
push
dec
stos
push
mov
and
in
push
popf
dec
in
or
loopne
or
lds
mov
push
hlt
push
ds
xchg
mov
push
aas
aas
dec
pusha
xchg
aas
or
xor
int3
popf
sbb
les
jmp
dec
in
mov
popf
jns
shrb
bound
movsb
mov
jl
and
repz
pop
stos
adc
outsb
loope
or
in
mov
and
jge
jnp
sbb
test
aas
dec
mov
je
jge
bound
iret
or
xlat
sub
sarl
sahf
pop
pop
cmp
js
cmp
pop
mov
aas
pop
xor
or
xor
mov
mov
lret
adc
scas
hlt
aad
scas
nop
and
out
cmp
cmp
cmp
sub
jb
mov
jbe
les
dec
or
inc
mov
loopne
jnp
sbb
inc
daa
sub
xchg
lods
inc
out
sbb
mov
inc
fisttpl
jg
lock
adc
sbb
mov
inc
sbb
out
xor
dec
lcall
dec
iret
xorl
outsl
mov
movsb
adc
mov
call
jbe
fldl
shrb
lea
les
inc
pushf
push
jo
notb
into
popa
mov
inc
jno
out
ljmp
push
mov
hlt
dec
and
mov
xchg
mov
mov
lds
testb
aaa
adc
jmp
push
cmc
push
aaa
xchg
cs
sbb
ss
inc
sti
inc
xor
dec
ds
mov
pop
xor
imul
aas
nop
in
sbb
jle
sbb
sahf
bt
insl
pop
and
inc
push
lods
lock
or
cmp
xchg
rolb
cmp
inc
loopne
jo
not
mov
pusha
add
pop
sahf
add
je
sti
inc
lock
jmp
mov
xor
fwait
add
pop
fwait
jp
lret
adc
ret
mov
dec
inc
std
push
inc
bound
and
ss
ljmp
rcrl
imul
dec
fwait
daa
pop
shll
mov
add
std
hlt
lods
push
sub
add
nop
clc
clc
mov
dec
push
and
jecxz
cmp
cs
call
push
pop
lret
aaa
jg
roll
xor
and
lea
mov
sahf
arpl
jmp
cmp
push
rcr
fwait
pop
fwait
les
nop
pop
mull
push
popa
mov
in
xor
cmp
xchg
xchg
add
pop
inc
and
jae
jmp
mov
sub
scas
cmpsb
ljmp
push
jno
dec
roll
cmp
dec
fldlg2
xchg
xor
leave
xchg
mov
mov
xor
int
adc
lods
jge
push
xchg
mov
jnp
leave
out
mov
lret
mov
and
jnp
cmp
jecxz
push
cmp
sti
cmp
aam
mov
jnp
pop
pushf
dec
sbb
xchg
ror
and
add
lret
aam
int3
fistl
pop
loopne
dec
mov
adc
fwait
jle
mov
faddl
or
mov
mov
pop
mov
pop
fadds
gs
mov
inc
ds
aam
xchg
and
movsb
mov
rcrb
insb
mov
xor
movsl
sub
and
cmp
jmp
or
push
adc
fsts
add
test
in
je
mov
xor
into
sbb
pop
sub
clc
cmp
sub
cltd
jo
dec
lock
xor
adc
fstl
aad
cmp
dec
scas
mov
jnp,pt
push
sahf
jg
test
sbb
icebp
fmuls
negb
xchg
jbe
lret
mov
jge
push
insl
mov
mov
xchg
imul
jno
jle
pop
pop
mov
mov
jns
cmp
loope,pt
jbe
aam
cmc
cmp
lea
mov
scas
push
mov
add
je
loopne
xor
notb
pop
adc
sub
jge
cmc
gs
lahf
lret
testl
or
aad
arpl
add
jle
rclb
adc
cmp
shll
nop
push
lret
imul
icebp
adc
mov
pop
mov
sarb
lods
xchg
fstps
rcrl
jne
loopne
repnz
cmc
addr16
add
int3
mov
loop
pop
movl
js
pop
jb
imul
cmp
out
out
or
jmp
xchg
inc
push
ret
shrl
out
inc
dec
leave
subl
inc
sub
js
fndisi(8087
push
and
fnsave
aaa
addl
pop
in
jno
ss
sarb
xor
call
stos
outsb
pop
jp
repz
mov
add
dec
test
imul
mov
das
and
dec
jbe
sbb
mov
dec
out
cmp
leave
enter
xor
pop
in
clc
stc
mov
xor
mov
dec
mov
movl
cltd
and
jno
push
inc
push
mov
out
add
popa
xchg
sbb
mov
push
ss
cmp
addr16
int
push
cwtl
mov
fisubl
adc
or
std
pop
cli
cmp
mov
mov
icebp
pushf
cmpsl
loopne
hlt
shl
sub
int
divl
jnp
in
inc
stc
cmp
rolb
sbb
or
je
adcl
push
loope
xchg
ja
jo
push
mov
cmp
jae
hlt
test
pop
nop
gs
shlb
insb
pop
pop
inc
pop
lret
xor
mov
sub
jbe
jg
sbb
inc
loope
sahf
movl
aaa
adc
aaa
xor
push
sbb
cmp
jge
mov
jno
jp
sub
mov
jmp
dec
cmpsl
mov
clc
or
sbb
or
ljmp
loop
sbb
cmp
xor
mov
dec
sub
fdivl
ja
cmp
lods
xchg
scas
mov
fidivl
cmpsb
incl
pop
jecxz
cmpsl
std
xor
out
dec
xchg
and
sub
cmpsl
popf
add
push
lcall
fdivs
mov
and
inc
xchg
lds
and
std
push
dec
jge
popf
dec
movsb
fistps
repz
loopne
pop
hlt
ljmp
mov
ret
fidivl
int3
and
add
movsb
lods
xchg
into
lret
fwait
fwait
jb
xchg
fsts
leave
push
sbb
cmp
mov
ss
add
je
jno
jg
cltd
xor
sti
jne
mov
xchg
push
in
push
lods
cmc
or
xchg
outsb
mov
rolb
push
pop
les
imul
fs
movsb
push
mov
dec
bnd
iret
inc
out
pop
loopne
dec
push
imul
sub
xor
cmp
test
popf
or
and
pop
xor
fidivrl
movsb
mov
movsl
or
mov
and
cmp
adc
nop
out
js
mov
scas
gs
hlt
mov
sbb
pop
mov
jp
sub
imul
in
sbb
loopne
adc
daa
pop
icebp
jae
cmpsl
add
aaa
inc
int3
test
sti
in
data16
dec
xor
or
xlat
dec
clc
mov
inc
fwait
scas
or
mov
fidivl
push
out
inc
sub
mov
sbb
xor
pop
cltd
cmp
hlt
andb
push
lret
subb
mov
scas
jmp
or
scas
mov
and
dec
inc
mov
xchg
sbb
or
mov
lret
aas
mov
fsubrl
loope
xchg
push
push
in
mov
push
lds
popa
add
enter
and
pop
cmp
add
cmp
gs
mov
xchg
icebp
mov
sbb
imul
es
mov
mov
xlat
pop
mov
insl
pop
sbb
or
imulb
aam
mov
sbb
jb
pushf
iret
test
shlb
mov
jl
test
es
or
jae
pop
lds
int3
clc
sbb
and
mov
adc
ss
and
xor
divb
pop
jge
mov
sub
in
or
jne
xlat
and
aad
push
imul
out
mov
ret
mulb
stos
and
jl
stc
sub
repz
jp
push
pop
lock
push
dec
bound
mov
mov
add
test
cli
mov
out
inc
jp
mov
shll
addr16
adc
pop
repnz
sbb
mov
shll
mov
push
push
mov
pop
ror
dec
repz
adc
out
outsl
push
std
or
inc
ds
cmp
into
enter
xchg
inc
xchg
mov
in
mov
adc
pushf
insb
or
xorl
xor
sbb
test
ficomps
repnz
dec
adc
shr
idivb
in
cmp
mov
push
jno
or
fsubp
int3
inc
sahf
xor
notl
mov
loop
in
cs
push
das
mov
sub
out
roll
movsl
push
loopne
jle
hlt
xor
out
xchg
cmp
jmp
hlt
mov
sbb
mov
cltd
adc
mov
inc
aad
sbb
stos
pop
pop
mov
xorl
jg
sub
jno
and
gs
mov
xor
jecxz
pop
inc
stos
and
mov
cmp
or
mov
sbb
repz
test
scas
mov
pop
outsb
inc
mov
or
iret
icebp
cmc
sub
cltd
adc
xchg
enter
xchg
daa
cmp
add
xor
pop
test
push
push
mov
sbbb
out
mov
push
bound
xchg
mov
jecxz
and
stos
cvttsd2si
and
rorb
sbb
dec
pop
xchg
lret
sbb
loop
add
pop
into
inc
push
outsl
xor
inc
lcall
mov
and
stos
cmp
or
aad
mov
scas
std
rorl
in
js
fcos
pop
jmp
lret
jae
adc
cmp
int
sub
mov
cltd
jnp
faddl
mov
xlat
xor
adc
xchg
int3
mov
jge
loopne
in
xchg
adc
popf
or
rcrl
xor
jb
pop
into
xchg
mov
in
adc
sub
push
jbe
icebp
cmp
inc
mov
xor
jecxz
or
xor
shrl
movsb
lods
push
addr16
dec
std
ss
das
stc
pop
pop
push
pop
fildll
lcall
lea
sahf
sub
cmp
es
out
aas
adc
lea
mov
pop
adc
cwtl
outsb
dec
and
data16
movsb
mov
scas
test
in
rclb
mov
xor
inc
data16
xor
xchg
sub
nop
mov
push
adc
cmp
stos
mov
add
push
popa
cmc
add
ret
pop
dec
mov
push
jecxz
push
mov
jne
sbb
or
xchg
xor
inc
add
mov
sbb
and
test
flds
cs
loope
fidivrs
icebp
sbb
testb
aaa
clc
mov
jne
sub
loopne
notb
rolb
lahf
lahf
xchg
xor
mov
or
mov
ret
dec
mov
test
outsl
loop
or
push
xchg
lea
jnp
jne
rorl
icebp
outsw
fwait
andb
sbb
mov
mov
in
loop
outsl
cmp
addb
mov
mov
push
shr
dec
jns
mov
in
push
jns
dec
push
adc
enter
stos
ss
mov
daa
xor
sub
cmpsb
and
mov
mov
mov
adc
pop
daa
into
add
pop
or
hlt
sub
js
pushf
and
js
shrl
es
rcr
xor
daa
insb
xorb
adc
mov
xor
or
pushf
or
pop
inc
std
dec
xor
mov
mov
sub
lds
aaa
stc
inc
and
test
stc
ret
fs
pop
lahf
inc
pop
or
insb
lods
pop
push
push
hlt
out
dec
push
jp
lret
push
sub
lret
ss
fwait
mov
icebp
aam
out
and
inc
push
int3
out
and
cwtl
dec
xchg
sub
testb
std
xlat
sub
xor
push
dec
movl
and
sbb
dec
sbb
shrl
stc
js
lret
pop
fcomps
test
jb
jle
popf
je
xchg
pop
mov
adc
popa
adc
fs
in
push
sbb
sbb
xchg
push
push
test
ljmp
jbe
xor
in
mov
das
cmp
lret
mov
dec
cmp
or
and
mov
xchg
cmpsl
outsb
rcrl
jnp
bound
shrb
jge
fmull
sbb
mov
pop
or
adc
fcomps
jb
and
lahf
dec
push
xchg
mov
cmp
nop
pop
inc
jb
mov
stos
daa
and
out
sti
cld
pop
jge
push
jo
in
gs
jns
adc
sub
mov
xlat
test
fldz
inc
sub
adc
pop
jb
sahf
pop
clc
test
out
in
adc
pop
sub
cmc
sbb
inc
loop
add
inc
inc
fstpt
sub
and
sub
je
movsl
daa
dec
aas
int
lret
ja
mov
mov
inc
insl
lods
ficoml
adc
clc
sbb
std
mov
mov
pop
cmpsb
mov
fnsave
fdivrs
push
pop
and
mov
pop
negl
ja
sub
aam
sub
ret
cwtl
das
adc
mov
inc
and
adc
jno
pop
jo
adc
cmp
aaa
addb
jle
popa
or
adc
sub
loope
rorl
das
loop
mov
unpcklps
stos
sub
and
dec
push
iret
jle
pop
out
mov
outsl
stos
pop
ret
dec
xchg
mov
mov
mov
xchg
cmovle
xchg
push
dec
mov
pop
jl
lret
xor
rcrb
jnp
sub
arpl
scas
aas
ss
adc
cmp
test
sbb
mov
imul
cmp
xchg
insb
push
pop
push
adc
shll
stos
scas
inc
lods
dec
sbbl
push
pop
testb
out
call
cmc
insb
in
xor
xchg
mov
sbbb
int
sti
sub
in
repz
or
sbb
popf
shll
and
je
mov
inc
out
sub
push
sarl
hlt
or
int
push
andl
pop
out
sahf
arpl
push
dec
ja
sub
fdivl
popf
dec
lock
loope
xor
sub
pushl
push
filds
jmp
xor
and
pop
rorb
clc
fisttpll
mov
xchg
xor
push
lahf
jno
jbe
xchg
jno
mov
gs
call
pop
cli
adc
pop
xchg
cs
gs
sbb
mull
out
out
rolb
mov
cmp
and
push
rcll
insb
inc
xchg
repz
shll
je
pop
lds
and
mov
mov
inc
insb
test
fstpt
loope
pop
mov
push
ret
or
inc
or
jl
addr16
jns
sbb
gs
out
hlt
inc
mull
movsb
shrb
mov
dec
adc
xchg
inc
jp
call
push
lds
and
shl
cmp
je
int
rcrb
cmp
popa
aaa
mov
das
out
and
das
aam
mov
cmp
push
push
xchg
aas
jge
jp
jl
xchg
rcrl
dec
out
or
das
out
mov
cmp
fstp
push
sub
cmpsb
mov
xchg
jne
cmp
push
jo
jg
jnp
nop
dec
sbb
cmp
mov
test
cmp
push
mov
push
xor
int
js
imul
in
enter
pop
bound
pop
idivl
xor
cmpsl
jne
sub
aaa
dec
in
out
or
out
lahf
mov
mov
fadd
cltd
ret
mov
add
cltd
cli
mov
sub
leave
aad
imul
idivl
push
bound
mov
mov
pushf
or
xchg
ret
popa
xor
insl
mov
mov
add
fwait
ljmp
mov
cmp
adc
mov
mov
fld
pcmpeqd
lret
fdivs
lahf
inc
lret
xchg
or
and
cmp
inc
xchg
imul
out
ja
sbb
outsl
dec
push
cltd
mov
sets
pushf
loopne
loopne
dec
iret
xor
inc
or
and
and
mov
mov
jno
xor
les
test
push
arpl
pop
cmpsb
imul
push
icebp
push
test
lret
lock
leave
xor
adc
imul
mov
mov
subl
out
ds
inc
movsb
int
dec
add
inc
das
loope
loope
xor
mov
inc
sbb
nop
aam
inc
repnz
push
and
iret
loopne
pop
fbstp
xor
adc
ss
les
push
dec
push
push
jno
add
cmp
iret
push
add
add
enter
inc
xchg
loopne
test
daa
test
dec
rcrl
xchg
jl
add
and
je
es
sub
adc
xchg
xorl
loop
lahf
push
inc
fiaddl
das
push
mov
dec
mov
loop
xchg
cltd
mov
jp
xchg
test
fs
jae
addr16
or
sbb
mov
roll
fucomip
cmp
test
arpl
jae
mov
std
xor
adc
jb
add
pop
dec
push
and
mov
shl
add
shl
xor
add
pop
inc
ss
push
dec
or
push
jp
ljmp
cmpsb
call
mov
insb
cmp
aaa
jae
cltd
cmp
add
fwait
in
sti
leave
stos
push
xor
sahf
insb
sbb
in
pop
leave
add
sbb
adc
ja
inc
jle
ret
mov
mov
dec
sub
dec
out
fsubr
pop
sbb
dec
int3
in
mov
pop
push
aaa
push
jp
and
mov
jo
dec
test
cmp
cmp
or
insl
fisubl
jns
cmpl
fsts
imul
inc
sub
and
pop
imulb
mov
pop
cmpsb
push
mov
ds
fldt
cmpb
sbb
cld
testl
ja
dec
sub
sbb
pop
lret
dec
mov
fisubs
into
adc
add
repz
jecxz
sarl
ret
cs
mov
outsb
jae
arpl
xor
and
adc
add
repz
jecxz
sarl
ret
cs
mov
outsb
jae
arpl
push
ds
scas
xor
and
incb
out
repz
jecxz
sarl
ret
cs
mov
outsb
jb
bound
xor
and
adc
add
repz
jecxz
jns
ret
pop
sub
jle
outsb
mov
xor
xchg
jnp
imul
sbb
aas
ficomps
into
push
mov
dec
mov
scas
outsb
mov
ds
cs
push
into
push
stos
and
ds
push
into
push
mov
dec
mov
mov
cmpsl
pop
xchg
dec
xchg
imull
out
push
cs
sbb
and
or
cmp
xor
loop
into
sub
es
xchg
sub
xor
push
or
cmc
adc
shlb
xchg
into
adc
stos
or
or
rol
pop
dec
loope
push
mov
cmpsb
xchg
in
xchg
mov
aas
aad
std
loopne
test
and
push
lret
daa
sti
dec
dec
sbb
lock
inc
sub
int
out
ds
loopne
pop
dec
inc
push
icebp
call
sti
sahf
mov
dec
subl
jbe
test
and
mov
rclb
ror
inc
cmpsl
xor
jle
fildl
jbe
adc
fs
pop
loope
test
es
mov
addb
sahf
dec
out
and
dec
sahf
ds
cs
push
into
push
cs
ficoms
into
pop
mov
push
mov
scas
pop
int3
cmp
sub
push
in
addr16
jnp
dec
mov
mov
or
jl
and
xor
sbb
push
std
sub
js
inc
mov
mov
in
pop
lahf
imul
in
sub
mov
push
into
push
fdivrp
cs
fimuls
into
push
mov
dec
mov
scas
outsb
mov
ds
cs
push
into
push
fdivrp
cs
fimuls
into
push
mov
dec
mov
scas
lret
lods
in
push
in
andb
adc
xchg
mov
ret
pushf
dec
aaa
lahf
pop
mov
es
rclb
push
js
mov
test
push
xchg
push
mov
repnz
fimuls
mov
data16
mov
inc
les
sub
div
jmp
or
sbb
imul
adc
ds
push
jbe
stc
push
hlt
inc
jecxz
cmp
outsl
and
mov
push
daa
or
mov
cmp
rcrl
movsl
xchg
arpl
jns
mov
jg
popa
loope
scas
lret
aad
push
pop
es
add
inc
outsl
push
call
add
push
sbb
jecxz
xlat
testl
and
or
cmpsb
inc
gs
outsl
cmp
icebp
cs
dec
xor
mov
dec
xchg
inc
inc
sub
cmp
rdmsr
add
in
addr16
mov
call
ret
es
xor
aaa
sub
xlat
pop
ficompl
and
cmp
outsb
jmp
mov
rcr
push
xlat
lret
adc
mov
or
cmp
adc
add
cmp
bound
fsubrs
mov
xchg
lret
out
mov
divl
push
inc
test
shrb
jmp
or
mov
adc
fdivrl
daa
pop
cmpsb
sbb
cmpb
mov
jl
pop
push
mov
sub
loop
xchg
adc
jg
insb
xchg
cmp
add
int
gs
sbb
mov
aad
loope
lea
test
out
outsl
push
lock
fnsave
add
push
cmp
icebp
out
push
mov
inc
fnstcw
lods
sub
arpl
into
int3
jp
xchg
rorb
test
stc
push
mov
pushf
jl
sbb
mov
shrb
mul
loop
lcall
jb
sbb
pop
rclb
jl
imul
and
in
scas
jmp
repz
dec
xlat
fiadds
flds
mov
in
mov
dec
pop
mov
sbb
pop
pop
in
fwait
in
fimuls
jo
dec
mov
jnp
bnd
dec
mov
insl
daa
and
std
jbe
imul
add
fsubrl
sbb
aam
xor
lock
mov
in
mov
daa
into
fcoms
inc
pop
int3
cmp
ds
sub
popf
xor
outsl
xor
jne
repz
mov
and
loopne
xchg
jno
add
testl
pop
insb
ss
add
iret
sub
popa
add
mov
inc
add
fisttpll
test
add
mov
movsl
sub
add
bound
popa
xchg
xor
cmp
push
sbb
sub
mov
hlt
sbb
pop
sarb
cwtl
jbe
lcall
ret
or
sub
lea
cltd
insb
aad
push
inc
es
mov
js
stos
pop
lods
stc
pop
pushf
jge
cmp
out
mov
add
insb
push
je
xchg
das
sub
cmc
sar
popa
inc
jb
jno
cmp
jmp
sbb
pop
pushf
popa
sub
pop
arpl
push
mov
sbb
jae
adc
in
mov
inc
fs
pop
icebp
mov
push
loope
and
fistl
push
lret
jns
and
rorl
fwait
cld
push
or
cwtl
mov
or
lds
daa
notb
xchg
jg
ret
mov
loop
pop
inc
dec
popf
jg
and
pop
xor
test
sbb
cltd
cmp
mov
jbe
mov
adc
arpl
bound
lea
aas
shrb
in
popa
mov
lcall
addl
push
out
test
cmpsl
inc
rcrl
scas
lcall
test
inc
adc
jmp
mov
and
mov
std
dec
push
dec
aas
mov
mov
sub
cld
shl
in
pop
cmp
mov
fdivrl
in
mov
sarb
das
outsb
sbb
inc
out
xchg
xchg
cmpsb
pop
and
push
mov
into
lret
sub
std
sbb
sbb
gs
imul
jge
js
lea
xor
dec
adc
repz
test
ror
dec
out
aaa
scas
push
call
or
push
dec
pop
cmpb
hlt
adc
jg
out
pop
outsb
push
call
or
pop
push
lcall
and
sub
xor
shrl
cs
in
lock
jb
mov
mov
and
test
jle
fnstcw
leave
push
outsl
jnp
leave
mov
push
lret
mov
popa
and
out
or
adc
in
cmc
add
add
rolb
repnz
sti
in
imul
leave
pop
mov
aas
and
repz
test
leave
dec
mov
jmp
and
insl
adc
xlat
inc
and
ss
and
mov
les
out
int3
mov
jb
cmp
and
lods
mulb
enter
orb
push
jo
lds
push
adc
mov
les
icebp
pop
push
sub
fs
mov
leave
dec
sbb
xchg
fimull
call
mov
jmp
push
mov
cltd
jp
mov
lahf
test
aaa
adc
sub
js
and
leave
pop
inc
dec
push
jae
xchg
lods
pop
cmp
jmp
hlt
jmp
push
xchg
ret
push
cmp
mov
pop
lods
mov
sbb
loopne
sbb
inc
sub
iret
lahf
push
jmp
add
vpshufd
js
jmp
lods
test
repnz
negl
mov
dec
mov
movl
sbb
gs
hlt
mov
sbb
dec
push
xor
push
adc
rol
pop
sbb
aad
inc
inc
mov
adcl
push
lds
sub
arpl
push
shlb
std
sub
xchg
cmpsl
lods
cmp
lret
or
adc
pop
mov
fisttps
fcmovbe
stc
cwtl
test
dec
int3
js
and
loop
sub
loop
les
xor
mov
xor
adc
sub
divb
sbb
clc
jp
jnp
adc
movsl
mov
sbb
or
adc
mov
adc
sub
shrb
or
ss
jl
push
pop
out
nop
mov
push
pop
and
in
xor
rcrl
cmp
ds
mov
notb
jmp
pop
jmp
repnz
push
cmp
mov
add
cmp
decl
test
cs
shr
xor
pop
sub
iret
pop
xor
ljmp
fmuls
pop
dec
mov
test
test
lds
sub
enter
imul
and
rcl
inc
or
aas
jno
xchg
cld
mov
push
int
jno
xchg
insb
fiadds
jns
sub
jae
div
sti
jp
mov
and
push
and
icebp
pop
mov
add
insl
les
and
movsl
pop
mov
inc
dec
adc
rclb
cmc
mov
test
push
mov
push
cmc
xchg
xchg
ds
xchg
lret
stos
dec
sahf
lahf
lock
push
inc
and
add
loopne
ret
xor
jae
dec
into
fcmovne
daa
xchg
mull
add
mov
mov
dec
sub
ljmp
inc
sub
sub
ja
aam
pusha
cmp
aam
xchg
in
scas
xor
adc
lcall
ss
clc
cmp
aam
inc
and
adc
xor
icebp
ljmp
ja
and
call
cli
sarl
lds
mov
stos
jge
lahf
dec
ja
cmp
sub
mov
mov
jmp
and
dec
pop
popa
testb
cmp
xchg
das
sarl
sub
mov
js
clc
adc
or
xor
jmp
xor
mov
aaa
out
mov
das
loopne
push
sub
cmp
push
mov
mov
ficoms
ss
xor
jmp
xlat
std
cmp
inc
loopne
push
inc
ja
mov
bound
cltd
imul
stc
insb
push
fcompl
call
sub
mov
cli
ja
cmpsl
cltd
push
cli
inc
aad
push
push
cwtl
andl
lods
xchg
xor
pop
popa
and
out
test
lock
dec
sbb
bound
in
sbb
dec
clc
xor
pop
dec
dec
sbb
adc
xor
bound
mov
outsl
mov
out
push
jns
and
dec
lret
test
inc
ret
fildll
mov
mov
ss
mov
or
gs
loopne
xchg
adcl
and
arpl
stc
imul
mov
jmp
jge
fldl
adc
add
or
adc
fisubrl
in
fs
lret
clc
xchg
pop
or
outsl
sub
shr
adc
sbb
scas
mov
sub
dec
in
and
cmp
xchg
shlb
inc
fcmovb
arpl
test
cmp
push
rcrl
jle
rcrl
rcrb
sub
das
pop
push
cmp
popa
adcb
cmp
fsubl
pop
jmp
ljmp
mov
fmull
stos
insl
xor
mov
clc
out
faddp
dec
sub
je
pop
jge
stc
and
pop
pop
inc
nop
outsb
sbb
icebp
ds
dec
xchg
dec
shlb
inc
pop
aad
dec
andb
inc
int
mov
cmc
jmp
cmpl
outsl
jo
xchg
das
mov
xor
or
jns
out
aas
cli
cmc
stos
inc
out
and
mov
in
sub
add
xorl
pop
out
and
add
inc
jo
mov
test
xlat
fisttps
or
mov
jno
inc
mov
iret
test
test
lds
sahf
movsl
aas
lret
lock
iret
mov
ds
shlb
bnd
add
push
sahf
sbb
jp
cmpsb
popa
mov
adc
fisttpl
adc
pushf
lds
mov
mov
mov
test
je
fwait
pop
jbe
push
mov
jbe
fwait
push
jle
adc
push
popf
js
fbstp
mov
sbb
daa
andl
fcompp
in
jmp
adc
mov
jmp
or
nop
mov
ds
stos
fbstp
sbb
daa
pop
jge
cmp
adc
dec
cmp
mov
fwait
cld
push
repz
mov
pop
repz
or
or
add
repz
fsts
xchg
gs
test
pop
adc
aaa
int
aaa
fs
call
pusha
loopne
mov
sbb
inc
sbb
outsb
and
adc
lea
add
fsubl
dec
or
aaa
scas
xchg
rcrl
push
lahf
aaa
or
adc
shlb
dec
dec
leave
and
and
push
out
movl
cmp
push
xchg
ret
mov
cmpsw
sbb
mov
outsl
cltd
fbld
xchg
cltd
sbb
mov
mov
lret
inc
icebp
xchg
lret
movsb
sbb
push
mov
inc
cmpsl
shrl
rorb
mov
jns
jbe
sub
xor
xchg
cwtl
xchg
jnp
inc
aaa
aam
mov
cmp
popf
or
test
lea
add
lahf
cwtl
ss
mov
pop
shll
bound
cld
js
cmpsb
ds
mov
sbb
adc
lock
and
in
mov
fbstp
in
cmp
arpl
cld
or
mov
lods
sarl
dec
hlt
in
inc
rorb
mov
mov
mov
lds
in
in
dec
lret
rorb
sub
pop
shlb
pop
push
pop
sub
inc
fwait
dec
icebp
mov
fstps
dec
mov
adc
les
xlat
mov
aad
sbb
push
rdtsc
std
pusha
mov
xor
aaa
jo
cld
lods
jp
in
mov
clc
ss
xchg
mov
outsl
out
jl
pushf
jae
fsts
cmp
mov
xchg
lods
cmp
insl
sub
in
lods
imul
int
pop
pop
rclb
and
in
sbb
lret
fisttps
add
inc
sub
push
lret
out
movsb
cld
icebp
cmp
jo
cmc
or
cmp
jg
hlt
iret
and
gs
test
addb
outsb
lahf
push
xor
cwtl
pop
jne
cmpsb
js
test
fwait
jmp
shl
cltd
lahf
jb
sti
xchg
xor
cltd
fistpll
cmp
inc
iret
sub
scas
jo
mov
add
popf
jno
push
cld
jle
inc
or
cmpl
out
sub
jns
lret
cmpsb
xchg
mov
sbb
hlt
cmp
adc
pushf
cltd
push
neg
xchg
andl
mov
in
fcompl
mov
push
lock
sbb
stos
push
pop
imul
fs
fidivrl
ljmp
mov
jae
push
in
clc
and
loop
jge
push
jecxz
pop
aam
or
ja
in
repz
jp
push
or
lock
rol
aam
int3
enter
xchg
imul
fs
adc
fisubrs
fdivs
or
js
das
int3
adc
rcrb
adc
xchg
xorb
push
sub
xchg
stos
jo
inc
mov
lahf
push
lds
ret
cmpsl
pop
stc
sbb
sbb
and
mov
insb
xchg
movsb
std
incl
ret
cs
test
jmp
inc
call
lahf
and
xchg
icebp
cwtl
cmp
xchg
jno
test
fsubs
das
pop
sub
adc
mov
loop
xor
push
loopne
ss
fmuls
mov
add
dec
dec
sbb
inc
pop
fstl
leave
adc
nop
dec
dec
or
push
scas
cld
sub
imul
inc
xchg
enter
push
popa
push
jo
sbb
mov
sbb
and
push
sbb
inc
cld
jns
mov
orb
ret
cmp
jns
fnstcw
mov
fisubs
imul
in
ljmp
lcall
mov
bound
loopne
daa
fcomip
roll
mov
xlat
fs
pop
enter
xchg
lea
shrl
mov
sbb
jb
mov
inc
inc
jne
add
mov
sub
into
mov
sub
dec
mov
in
lret
shrb
cmp
repz
std
cltd
mov
add
mov
xchg
push
pop
sub
imul
insb
pusha
les
std
popf
sti
mov
notl
cmp
repnz
xchg
test
push
jbe
xchg
testb
invd
cli
lcall
mov
push
jne
adc
mov
or
sub
movsb
int
pop
addr16
mov
scas
cs
push
and
xchg
fisubs
cmpsl
repnz
and
xor
inc
mov
mov
fldcw
sub
sub
rol
sub
popa
insb
icebp
sub
mov
cmp
aaa
loope
mov
rorl
inc
mov
imul
pushf
movsl
push
pop
mov
adc
test
or
jl
or
in
sub
rorl
mov
lcall
aaa
clc
out
out
iret
push
sbbb
dec
or
jbe
in
in
push
hlt
cli
adc
adc
movl
data16
leave
test
jno
movsl
lahf
push
dec
arpl
jp
and
nop
stos
aad
xchg
adc
test
lret
jne
nop
lds
pop
jno
and
aad
xlat
mov
adc
sbb
sbb
cmp
or
cmpsl
xor
icebp
cwtl
mov
inc
xor
out
stos
add
sbb
xchg
mov
lds
xor
push
in
popf
rcrl
sbb
fildl
jns
sub
loope
sub
sbbb
sub
xchg
cmp
inc
rorb
nop
cmp
cld
test
or
mov
mov
dec
loopne
mov
jbe
dec
mov
pop
dec
push
xorb
xor
sahf
divl
sub
out
mov
je
pop
jno
into
inc
jo
scas
mov
jecxz
pop
fildll
cmp
sbb
subl
mov
sub
and
mov
loop
aaa
lahf
popf
hlt
cmpsl
push
faddp
test
inc
mov
imulb
test
adc
sub
out
jae
inc
in
add
jns
cli
scas
or
out
iret
mov
dec
jbe
ret
jmp
mov
and
enter
adc
fs
call
xchg
push
xor
mov
hlt
vmwrite
jns
and
sub
jbe
lahf
xor
mov
and
rolb
mov
or
rclb
cmp
mov
imul
lcall
and
popa
lds
cwtl
iret
leave
fnstenv
jns
mov
repnz
xor
dec
jecxz,pt
and
add
pop
pop
dec
or
cmp
scas
or
sbb
sub
add
popa
jl
mov
std
dec
in
aam
stos
mov
pushf
push
data16
mov
ja
add
xchg
mov
pop
add
sbb
scas
and
inc
outsl
insb
int3
jge
je
popa
cmp
jle
xor
hlt
gs
adc
xchg
out
hlt
filds
rorl
push
mov
sbb
cwtl
outsb
xor
push
imul
push
mov
daa
xor
insl
xor
pop
xchg
sbb
or
in
ret
push
gs
inc
or
jae
js
iret
sub
dec
les
xchg
sub
sub
jge
sub
mov
mov
lea
fistpl
stc
sbb
in
std
int
pop
sti
mov
inc
mov
add
icebp
inc
out
jp
jnp
and
xor
in
dec
aam
pop
cmpsl
hlt
xchg
mov
rorb
fwait
imul
mov
adc
daa
adc
sbb
rorb
in
insl
pop
daa
xchg
push
sub
mov
lock
addr16
jg
adc
xchg
or
push
adc
pop
push
bound
std
fdivrl
in
test
bound
and
mov
dec
xchg
push
fucomp
mov
lock
roll
mov
roll
cld
icebp
pop
xor
sbb
adc
pop
ljmp
cld
fsubrs
addr16
ret
lahf
mov
shlb
dec
push
mov
leave
or
adc
fnsave
movsb
adcl
into
inc
push
addr16
sub
clc
lods
int3
sub
pop
cs
prefetch
push
dec
jecxz
and
in
popa
dec
into
xorb
test
in
cld
aam
pop
xor
testb
xor
xchg
jo
jecxz
das
aas
mov
xchg
or
daa
sar
add
inc
in
inc
sbb
loop
cs
imul
aaa
insb
xchg
or
push
insl
in
loope
or
frstor
pop
in
test
neg
cld
adc
dec
aaa
ficoml
lret
in
int
mov
pushf
inc
adc
mov
and
negl
addr16
out
and
cmp
pop
sub
inc
fcompl
mov
arpl
inc
cltd
push
or
or
jo
and
arpl
sub
stos
fs
inc
xlat
push
mov
fdivr
sub
lods
jp
cmc
push
mov
pop
inc
mov
and
add
sub
aad
sbb
in
dec
push
insb
dec
pop
lret
sahf
mov
jmp
sbb
mov
in
xor
jb
ljmp
push
jl
mov
pusha
cmp
jns
movsb
and
movsb
mov
mov
xor
xchg
cltd
rorl
stc
data16
out
mov
int
roll
push
mov
out
pop
push
shlb
xchg
or
gs
mov
push
dec
inc
dec
arpl
push
gs
xchg
jp
test
in
and
inc
hlt
fwait
add
sub
mov
adc
jmp
pop
popa
mov
jns
imul
loope
sbb
mov
sub
inc
xor
jae
sub
popf
mov
aam
pop
cltd
jp
adc
jecxz
pushf
add
push
popa
xchg
faddp
mov
dec
push
int
pop
push
xchg
sbb
cmc
jno
mov
sub
cmp
add
pushf
popa
std
push
das
mov
sub
sub
icebp
clc
xor
ds
cs
push
into
push
fdivrp
cs
fimuls
into
push
mov
dec
mov
scas
outsb
mov
ds
cs
push
into
push
fdivrp
cs
fimuls
into
push
mov
dec
mov
scas
outsb
mov
ds
cs
push
into
push
fdivrp
cs
fimuls
into
sbb
dec
mov
stos
outsb
mov
ds
cs
push
into
push
push
cs
xchg
je
into
imul
xor
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
int3
in
jge
mov
loope
fistpll
push
add
or
add
add
add
add
les
addl
add
loope
lock
add
dec
add
pop
add
add
add
add
add
insl
add
hlt
add
add
fldl
imul
add
add
add
lods
add
aam
xor
cmp
cmp
lock
and
add
add
add
mov
adc
test
sahf
add
add
add
std
add
jnp
and
dec
add
add
add
sbb
jnp
mov
add
add
stos
add
add
add
add
out
mov
mov
add
add
les
cmp
cltd
add
add
add
add
or
add
xor
scas
add
inc
add
inc
add
add
test
faddl
fildl
inc
add
add
add
popf
add
add
imul
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
popa
add
faddl
xchg
add
add
add
add
add
add
add
mov
lcall
add
mov
add
add
add
faddl
ja
clc
add
add
add
movsb
add
add
add
add
add
add
add
mov
add
add
pop
add
add
add
add
add
add
add
cltd
add
add
add
fs
add
dec
add
inc
add
add
add
add
add
add
add
add
adc
test
test
and
adc
cwtl
add
add
add
add
add
add
in
add
add
add
add
gs
add
add
add
add
add
clc
add
add
add
fldl
filds
hlt
add
dec
add
test
rolb
sbb
pop
add
add
add
mov
fadds
insl
add
add
add
add
add
add
add
add
add
add
dec
add
or
add
add
add
into
add
cmpsl
add
add
add
add
lcall
add
add
adc
add
add
enter
rolb
inc
add
add
add
sbb
cltd
add
add
dec
add
aaa
add
add
add
add
adc
xor
cmpsl
add
add
add
icebp
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
jbe
or
adc
lods
add
add
add
repnz
aaa
add
add
clc
add
add
mov
dec
add
xchg
add
add
add
pop
add
add
nop
add
add
add
add
bound
mov
add
add
add
add
add
add
ljmp
stos
shlb
int3
mov
mov
lods
jne
sahf
adc
cmp
insb
lret
test
lods
cld
lds
jne
pop
add
mov
jmp
pop
in
cmpsb
mov
addr16
dec
and
mov
daa
dec
inc
jae
inc
inc
xbegin
dec
xor
mov
push
dec
inc
adc
xchg
imul
jecxz
ljmp
insl
stos
jae
mov
ret
jbe
insb
das
ljmp
ret
adc
data16
jbe
repnz
outsl
inc
js
xchg
scas
cwtl
aas
dec
sub
mov
cmp
mov
mov
sub
test
pop
pop
aas
pop
fists
popa
lea
jne
scas
push
xchg
rcrl
aad
dec
sbb
iret
mov
cmp
sbb
add
xchg
jo
mov
cmp
mov
ret
lods
jmp
lret
and
fdivp
mov
adcb
sbb
loop
xchg
fwait
insl
test
pop
stos
inc
add
addr16
pop
sbb
jmp
mov
add
pop
mov
dec
mov
sbb
pop
dec
scas
mov
fsubl
dec
cwtl
adc
xor
pushf
mov
inc
push
and
xor
mov
mull
out
repz
or
mov
js
fcomps
gs
cld
loope
sub
jge
push
pop
in
push
sbb
adc
adc
mov
adc
add
iret
mov
and
jle
mov
push
subb
call
xchg
cmc
cmp
pop
movsl
and
movsl
pop
jne
xchg
adc
push
call
je
and
xor
fistpll
dec
mov
inc
cmpsl
or
push
xchg
inc
inc
mov
jg
cmc
imul
pop
jnp
jmp
push
je
sbbl
ss
mov
out
les
scas
sub
and
repnz
jns
add
loopne
out
aad
cs
in
mov
mov
inc
fisubrl
xchg
stc
sbb
jae
shll
add
push
test
pop
jl,pt
push
cmpl
shl
mov
dec
insb
icebp
cmp
pusha
out
repz
rol
and
mov
adc
cltd
clc
sbb
dec
push
pop
bound
or
sbb
xchg
jg
imul
inc
lods
outsb
popf
pop
clc
sbb
popf
les
scas
jle
es
daa
xchg
dec
pop
fwait
lods
shl
sub
icebp
nop
xchg
popa
sub
idivl
dec
inc
cmp
add
lret
aas
imul
inc
ret
sub
push
adc
dec
int
pop
fs
mov
push
mull
jae
sbb
lock
lock
jg
push
out
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
