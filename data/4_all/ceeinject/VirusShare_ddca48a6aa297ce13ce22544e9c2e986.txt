call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
add
adc
and
xor
pop
lods
cmp
pop
orl
mov
or
sub
add
adc
and
xor
arpl
xchg
sbb
insl
mov
ret
or
repz
int
std
and
xor
arpl
iret
sbb
or
sbb
add
addr16
mov
xchg
inc
pusha
sahf
nop
fcompl
cmp
adc
cltd
or
cmpsb
cmp
xor
aaa
outsl
fdivrs
ds
and
loopne
loopne
repnz
xor
push
int3
mov
adc
fdivs
fs
pop
inc
sbb
jae
ret
int
mov
cld
int
frstor
add
popf
inc
mov
and
mov
std
nop
pop
subl
xor
scas
cmc
clc
into
jne
test
cmp
dec
or
mov
xchg
jmp
and
jge
inc
push
inc
test
mulb
cmpsl
loopne
imul
adc
and
xor
arpl
xchg
jge
insl
mov
ret
or
mov
outsb
mov
xchg
mov
adc
push
enter
cli
adc
or
imul
mov
and
jge
or
jae
and
add
lods
jle
insl
xchg
xor
sahf
push
int
fsubrl
lea
arpl
xchg
jge
insl
mov
ret
or
repz
int
std
and
xor
arpl
xchg
jge
insl
mov
ret
or
repz
enter
mov
inc
iret
xor
or
clc
xor
sbb
pop
andl
scas
nop
inc
push
cmovno
mov
mov
push
lods
xorl
enter
mov
mov
dec
scas
scas
cmpsl
rcl
add
jb
lds
fistpl
cmp
cmc
inc
jns
sub
mov
mov
lods
add
pop
mov
scas
inc
xor
movsl
fdiv
test
popf
ss
mov
std
xor
mov
dec
insb
sub
fsts
xorl
dec
aas
xchg
mov
jmp
jle
lds
push
push
lods
cli
and
mov
xor
insb
stos
sbb
loop
xlat
pop
dec
inc
stos
and
jns
add
mov
js
push
inc
and
xchg
fiadds
fcompl
push
dec
xor
adc
lea
imul
fildll
xchg
cmp
and
lahf
loope
cld
into
lock
xchg
out
jle
xor
push
mov
mov
dec
sbb
lds
repnz
push
scas
fmull
push
push
jbe
pop
in
xor
and
into
movsl
insl
daa
in
mov
sub
or
lock
sbb
add
mov
fs
sahf
outsl
ret
push
xchg
out
loope
aam
xchg
jb
test
pop
mov
inc
nop
ja
sub
cltd
stos
lret
xchg
and
jae
push
mov
push
mov
call
je
jns
std
jmp
push
int3
rcll
dec
xlat
adcb
adc
std
jno
jae
dec
rcll
dec
imul
jo
mov
xchg
mov
sbb
inc
jo
mov
rdtsc
cmp
jo
xchg
fcoml
push
mov
push
jmp
push
lret
movsb
mov
inc
out
aaa
lahf
in
scas
call
fcomip
cltd
dec
push
call
loope
or
pop
adc
mov
bnd
mov
int
popf
cltd
rol
test
fwait
adc
fcoms
out
into
ja
pop
loop
fisttpl
gs
aam
stc
in
cmpsl
movsb
imul
negl
and
fldt
outsb
andb
jmp
mov
push
in
aam
jg
fdivrl
out
ds
iret
jae
push
add
inc
mov
cmp
test
lea
fdiv
mov
push
nop
mov
sbb
aad
mov
lea
pop
sbb
nop
mov
int
testb
jbe
jecxz
sub
cmp
js
ds
arpl
sub
pop
mov
js
xor
test
add
inc
mov
mov
jg
enter
dec
fdivs
data16
xor
jns
jnp
xchg
iret
push
cltd
es
enter
daa
out
sbbl
mov
mov
pop
sbb
cld
cmp
sti
pop
sub
pop
mov
push
lds
popf
js
add
divl
stos
aaa
mov
cld
and
stos
push
sub
loop
xchg
pusha
push
imul
mov
mov
and
incb
sbb
lcall
mov
inc
stos
testb
les
in
fdivrs
cmp
jne
push
aas
jecxz
push
aas
cmpsb
mov
inc
add
inc
psllq
inc
mov
clc
cmp
orl
orb
daa
inc
bound
xor
shl
add
adc
frstor
popa
cmp
xchg
pmaxub
lcall
mov
pop
or
data16
jp
loopne
pop
es
push
xor
jge
std
ja
vblendvpd
push
jg
pop
jno
leave
pop
xchg
idivb
ljmp
inc
xchg
popa
mov
cmp
stos
mov
cmp
inc
ja
je
fmul
into
test
add
and
mov
inc
daa
mov
sub
andb
or
fs
loop
xchg
in
add
sub
fmul
push
push
ja
fnsave
xchg
cwtl
inc
mov
sub
ficomps
push
icebp
insl
popf
aam
ds
pop
mov
mov
scas
sti
and
test
addr16
push
mov
pop
mov
push
repnz
jbe
dec
lock
lcall
add
es
xor
inc
cwtl
out
inc
jge
mov
mov
test
mov
int3
ds
adc
push
inc
cmp
arpl
push
fs
mov
outsb
and
mov
fldcw
dec
lret
xor
push
inc
cmpb
adc
in
push
daa
mov
or
loope
jno
push
mov
in
lret
cwtl
loope
xor
mov
push
jb
or
add
jp
in
roll
mov
insb
xchg
cmc
push
sub
iret
lock
cmpsb
call
inc
lcall
pop
negb
movsl
jg
int
into
shll
jne
out
or
sub
and
lea
jmp
mov
xor
pop
add
repz
in
in
mov
das
pop
sub
dec
in
mov
sahf
inc
leave
push
push
push
insb
cmpsb
subb
arpl
cltd
orb
adc
mov
xchg
jne
mov
pop
jmp
fbld
mov
jbe
cmp
popf
mov
sbb
or
and
test
gs
cmpsl
loop
imul
into
hlt
sahf
es
pop
and
add
sub
mov
pop
imul
xchg
dec
push
push
add
dec
idivb
ror
lods
add
xchg
sbbb
sti
pop
je
cmp
lret
xchg
fucomi
push
add
mov
add
push
dec
push
push
jo
insl
mov
out
xchg
call
jbe
cltd
sub
adc
cmpsl
push
jnp
cld
xchg
pop
pop
jns
gs
ds
fcmovb
sbb
mov
mov
adc
in
imul
sbb
sahf
es
pop
xorb
rolb
push
mov
pop
adc
out
lock
and
inc
mov
sbb
fwait
aam
lcall
aad
int
in
jae
cld
adc
dec
push
pop
fwait
test
aam
dec
dec
mov
out
push
xor
inc
int3
bound
lret
ficompl
repz
popa
mov
sub
pusha
out
stos
fistps
dec
addr16
icebp
and
push
pop
or
sub
dec
dec
popf
xchg
jnp
fdivr
jmp
sbb
inc
std
or
xchg
push
pusha
cmpxchg
push
shr
dec
inc
or
ss
mov
jns
pop
stc
ret
daa
mov
jmp
or
data16
cmc
cwtl
fnstenv
inc
xor
mov
cmpsb
pop
imul
adc
adc
aam
add
js
lock
xchg
cmpb
out
inc
pop
xchg
cmpl
dec
push
xchg
xor
or
aad
dec
adc
dec
mov
divps
push
jl
clc
xchg
testb
jo
add
pop
and
repz
mov
mov
xchg
push
dec
mov
jle
jns
mov
inc
sahf
push
dec
mov
ret
arpl
pusha
ret
shrl
mov
fsubrl
in
xlat
outsb
sti
xorb
cmpl
adc
es
jns
out
mov
xchg
inc
das
inc
mov
addr16
jnp
xorb
cli
out
xor
pop
aad
outsl
mov
mov
xlat
add
or
shll
pop
mov
inc
inc
jecxz
scas
shrl
cmpsl
adc
std
fisubl
jae
mov
insb
mov
mov
movsl
cld
shlb
jbe
mov
adc
repz
cmc
int
pop
jg
pop
shrl
out
xor
push
stos
cmp
fisttpll
sbb
dec
sbb
push
leave
lods
push
pusha
clc
inc
pop
nop
cli
cltd
mov
lret
xchg
push
pop
lods
and
daa
nop
sub
mov
shl
pop
jbe
jmp
adc
xor
imul
pop
loope
mov
mov
and
inc
arpl
jecxz
movsl
ss
js
jbe
pop
iret
es
mov
or
add
ds
or
frstpm(287
enter
or
dec
and
or
adc
rcll
lret
mov
pop
iret
jb
int3
mov
sbb
push
test
das
movsb
lgs
lods
and
fisttps
rcl
mov
adc
in
xor
movsl
roll
jns
push
lret
mov
push
shrl
fwait
lds
lods
or
add
xchg
ja
mov
add
inc
fcoml
in
or
in
lds
popf
and
xchg
mov
test
mov
test
jns
ss
es
shlb
pop
jb
mov
incl
fucomp
xor
sbb
sub
test
cmc
pop
mov
test
dec
dec
mov
push
loop
mov
and
mov
mov
lds
pop
lcall
mov
xchg
jne
add
inc
or
lret
and
imul
aam
jmp
push
jns
daa
push
sub
cld
jl
cmp
push
push
pop
xchg
mov
cmp
cmpb
sub
cmp
std
inc
test
sbb
shlb
stos
adc
adc
fwait
sub
lret
rorb
adc
les
idivl
jnp
jg
enter
rcrb
mov
adc
dec
test
movsb
sbb
push
adc
imul
xchg
sbb
aas
mov
sub
xor
out
and
mov
repz
xor
cmp
xchg
adc
lahf
aas
movsl
and
test
lock
lret
mov
decb
popf
mov
mov
fwait
jmp
fldl
pop
adc
lods
andl
mov
push
jno
addr16
popl
pop
sub
add
push
stos
mov
jne
lcall
out
adc
fisttpl
call
xchg
ja
in
notb
xchg
xor
mov
shll
or
lret
lret
ret
adc
repnz
outsl
cli
fdivrl
in
sub
jle
rorl
mov
push
mov
sub
clc
or
cli
stc
dec
push
sbb
pop
or
push
hlt
es
add
fst
mov
inc
inc
sbb
and
dec
xlat
ja
imul
cmp
pop
jl
mov
xchg
inc
leave
push
sub
push
adc
leave
enter
pop
sahf
push
in
sbb
imul
jp
loopne
xchg
mov
inc
pop
or
mov
lahf
lds
mov
xorb
in
push
frndint
sbb
and
rcll
nop
push
cs
dec
stos
std
leave
call
into
mov
sbb
push
xor
iret
dec
jmp
xorl
daa
add
stc
sbb
clc
cmp
in
outsl
repnz
aam
ror
xchg
xchg
outsl
cmpsl
adc
and
dec
mov
cmp
inc
in
iret
repz
lcall
push
mov
dec
notb
fcoms
das
or
sbb
xor
into
stc
bound
ljmp
xor
mov
in
xchg
fldcw
dec
pushf
in
negb
imul
dec
out
inc
lret
nop
mov
push
add
movl
cltd
or
rcrb
and
stos
inc
push
ret
and
inc
rolb
dec
cli
mov
fcomi
loope
cli
clc
aam
xchg
cld
subl
aad
movsb
jns
lds
cmp
pop
rol
sub
mov
mov
popf
cmp
sub
or
mov
mulb
dec
int3
sbb
gs
cmp
mov
add
adc
not
push
sub
movsb
movsl
dec
scas
dec
stos
xor
lock
int3
and
or
jo
test
inc
pop
push
fstp
pop
ss
aad
jno
adc
dec
rorb
loope
inc
xor
ljmp
gs
setp
cmp
xor
and
mov
push
mov
adc
lods
mov
dec
fistl
push
adc
inc
leave
push
mov
mov
push
dec
inc
mov
pusha
fsubs
sbb
ljmp
int3
out
sahf
cmp
jnp
inc
mov
mov
adc
jge
cmpsl
xor
imul
sbb
fadd
jnp
ret
rolb
aas
mov
or
test
pop
xor
sbbl
mov
cmpsl
cmp
sub
test
jo
dec
dec
jg
jnp
add
inc
aam
add
ds
and
inc
adc
in
aas
push
mov
mov
popa
in
dec
repz
lcall
mov
xchg
int
xor
xchg
mov
pop
mov
fcomi
inc
orb
push
or
and
jp
lret
sub
push
mov
shrb
leave
or
repnz
call
pop
lods
push
stos
adc
pop
sbb
xor
xchg
and
lret
mov
ljmp
bound
movsl
aas
mov
stos
sbbl
ds
cmp
inc
push
test
xchg
mov
push
jecxz
pop
lds
mov
sub
arpl
add
call
and
popa
mov
dec
jo
mov
mov
push
push
mov
in
test
arpl
jmp
sbb
das
inc
push
leave
imul
cmp
sti
sbb
mov
sti
pop
jmp
mov
xchg
lods
incb
es
inc
sbb
daa
inc
scas
inc
cwtl
ret
lds
mov
jo
push
pop
dec
push
dec
adc
adc
out
add
inc
adc
nop
dec
push
xor
test
push
call
shll
pop
aaa
mov
stc
test
sbbl
je
and
and
cmpsl
and
mov
iret
push
cltd
scas
sbbb
and
int
aas
mov
or
xor
cmp
jnp
leave
test
outsb
inc
arpl
imul
repz
call
sub
cmp
test
stos
adc
jg
add
insb
lods
das
sub
call
push
pop
or
movsl
stos
sbb
sub
mov
and
aaa
push
div
in
dec
sub
enter
lods
sbb
jl
test
gs
jg
dec
sbb
hlt
cmp
xchg
push
stos
cld
xchg
xlat
in
jne
scas
jno
dec
xchg
fldl
stc
lcall
add
inc
adc
pop
adc
inc
mov
xlat
pop
cmp
out
push
mov
push
inc
jbe
inc
imul
sbb
mov
enter
jl
sbb
xor
int3
dec
popf
int
subb
push
stos
cli
sub
push
std
dec
dec
jecxz
cltd
inc
fisttpl
jb
or
jbe
and
leave
mov
lret
or
xor
nop
iret
jno
rclb
jae
sbb
lahf
jnp
push
adc
mov
sbb
add
push
inc
ret
pop
sbb
and
xchg
fucomp
push
mov
aad
mov
movsl
addr16
cmp
jo
mov
fsubrs
pop
movsb
cmp
pop
or
xor
ds
fisttpl
push
adc
push
popf
frstor
xchg
sub
loop
xchg
adc
out
sbb
rolb
sahf
fistpll
or
mov
imul
das
loop
mov
and
popa
test
pop
cmp
lods
pop
popf
mov
stos
ja
cmc
cmpsb
xor
ja
cwtl
and
and
test
rorb
mov
jne
cmp
hlt
arpl
push
jae
das
fcmove
dec
loopne
xor
fs
adcl
cld
xorl
adc
arpl
movsl
popa
cmp
cld
jmp
or
dec
push
subl
add
addb
inc
lods
iret
add
inc
fisubs
mov
mov
mov
addr16
out
sarb
push
sbb
sti
mov
fdivrs
negl
dec
orb
and
shll
sbb
test
test
pop
movl
mov
jg
testl
cs
aad
jnp
mov
imul
into
icebp
push
adc
lcall
iret
mov
jmp
cwtl
fisttps
fimull
xchg
add
pop
mov
xchg
fwait
sub
je
pop
sub
test
fldt
subl
inc
stos
roll
pop
int3
sbb
and
mov
fnstsw
mov
cmp
xchg
testl
mov
cmp
fs
leave
outsl
fsubrs
popl
popa
xchg
add
inc
cmp
iret
dec
cmpsl
sbb
adc
ds
inc
mov
dec
dec
rclb
push
jnp
push
mov
test
sub
and
in
test
sub
push
leave
mov
mov
push
jo
aaa
pusha
cmp
fcomip
mov
xchg
fwait
dec
orb
inc
sbb
mov
std
loope
and
pop
fisubrs
pop
sub
jne
jns
cmpb
fwait
pop
mov
into
and
xchg
xor
cmp
jp
outsb
shll
mov
mov
lds
push
push
mov
ret
stc
dec
insl
mov
jnp
int3
or
sti
jae
stos
shl
outsl
imul
sar
cmp
push
pusha
fs
mov
xchg
ja
subl
cld
jnp
fwait
inc
daa
pushf
out
enter
mov
push
lea
pop
data16
push
addl
fcoms
nop
add
sbbb
pop
xlat
lock
in
movl
rorl
jp
test
xor
pushf
inc
jb
push
dec
lcall
or
cwtl
stos
xchg
sub
inc
rcll
cmp
jno
repz
and
fs
push
xchg
xchg
cmp
bound
xchg
stc
push
add
ljmp
je
call
mov
addr16
inc
repnz
leave
js
leave
jae
jo
sbb
mov
filds
dec
lret
mov
push
sarl
test
cs
out
iret
mov
adc
jmp
sahf
mov
jg
out
fimuls
into
sub
shr
gs
inc
stos
stos
jmp
xchg
std
orl
mov
scas
jo
adc
push
fmuls
xchg
mov
mov
leave
xor
frstor
sub
push
pop
and
lods
jno
sbb
pop
push
or
outsb
test
mov
mov
repnz
test
je
push
sahf
das
add
mov
inc
stos
mov
jg
iret
jl
mov
mov
inc
sub
data16
aam
rcrl
cmp
xor
int3
dec
or
and
in
sbb
lock
dec
sub
xorl
push
or
cmove
je
sbb
pop
xchg
adc
add
mov
inc
inc
sbb
xchg
nop
ja
or
adc
ljmp
jmp
pop
imul
add
and
or
add
popa
enter
sbb
xchg
data16
xchg
inc
cmpsl
mov
mov
shl
pop
pop
xchg
das
add
jge
pop
enter
lcall
jne
or
mov
es
xchg
leave
cmp
pop
sub
movsl
or
sti
into
outsb
stos
and
aas
into
hlt
mov
das
and
xchg
cmpb
punpcklwd
in
mov
pusha
ja
dec
xchg
push
daa
ss
jbe
pusha
gs
mov
cmpsl
adc
std
cld
add
mov
outsl
sbb
push
cmp
add
jp
xor
int3
jl
leave
and
scas
out
mov
mov
sub
lcall
aas
jg
xchg
xchg
mov
jecxz
gs
pop
lea
faddl
cmpb
into
dec
dec
pop
shrb
and
aad
ret
cwtl
mov
ret
dec
xchg
push
sbb
xor
pop
inc
pop
add
mov
ret
sbb
adc
out
and
fmul
nop
arpl
xchg
sub
dec
pop
sub
in
jbe
or
xlat
mov
sub
mov
lds
add
jbe
pop
pop
fwait
sbb
cmp
jb
int3
aas
pop
jge
repz
jbe
mov
test
out
lahf
fs
pop
subb
lcall
iret
daa
xor
sarl
aad
sub
add
scas
adc
fisttpl
int3
push
mov
pop
lods
cli
inc
imul
inc
repnz
loop
sub
pop
pop
ret
cld
repnz
xchg
ret
cmp
leave
fistpll
rorb
adc
jp
or
lcall
cmp
and
mov
xor
jae
sahf
outsb
pop
lcall
outsb
adcl
push
inc
ror
or
jecxz
adc
mov
lret
in
xor
daa
xor
cmpb
sahf
or
mov
jnp
or
sbb
sahf
lock
fsubrl
sbb
pop
cmp
cmp
in
sbb
mov
and
rol
out
loope
sti
inc
jge
lds
adc
push
and
xor
arpl
xchg
jge
insl
mov
ret
or
repz
int
std
and
xor
arpl
xchg
jge
insl
mov
ret
or
repz
int
std
and
xor
bound
xchg
jge
insl
mov
ret
cmp
add
adc
and
aaa
popf
inc
sarl
jl
cmp
mov
test
sbb
or
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
stos
insb
loopne
rorb
scas
xchg
rcll
gs
sbb
fldenv
push
fsubs
xor
pushf
out
loopne
loopne
rcrb
sub
or
push
xor
sbb
fisubs
mov
jmp
push
fadds
mov
push
jo
imul
mov
test
arpl
imul
pushf
sub
std
mov
ss
mov
enter
push
fdivl
sbb
in
insb
insl
not
inc
rorb
pop
pop
iret
pusha
repz
jecxz
adc
and
lea
loopne
cltd
jg
add
cmpsl
mov
inc
jb
lahf
cld
add
gs
and
lock
dec
setne
cltd
inc
or
add
sbb
mov
jae
push
jae
mov
jmp
mov
loopne
pusha
dec
addb
js
lahf
add
inc
gs
sbb
xchg
loopne
lahf
mov
or
or
lahf
xchg
scas
xor
lock
pop
lock
lcall
xlat
pop
mov
or
add
dec
aad
lds
mov
movsb
adc
test
mov
movsb
cmp
cs
xchg
pusha
in
jns
andl
enter
leave
inc
mov
lock
ret
sub
jb
js
jb,pn
pusha
cltd
adc
fcoml
pusha
jmp
call
mov
rcrb
pop
mov
sbb
in
pusha
cld
push
int3
inc
fdivl
lods
and
insb
loopne
rorb
mov
mov
sbb
in
pusha
cld
push
int3
inc
fdivl
lods
and
insb
and
lret
test
lahf
cmpsl
mov
pop
jne
add
pop
nop
jg
shrl
out
ficompl
push
adc
divb
mov
cmp
outsb
pop
cmp
sbb
xor
jl
das
std
inc
add
mov
insb
sbb
sub
test
mov
sbb
mov
push
mov
jge
push
pop
and
push
dec
test
pop
xor
sbbb
lcall
xor
roll
mov
and
mov
and
mov
out
fnstenv
neg
or
aas
rorl
in
push
std
in
loopne
mov
sbb
mov
pushl
jp
and
js
shrb
adc
iret
mov
lds
mov
int
cld
push
or
jmp
inc
popf
xchg
js
jge
js
test
cmp
outsb
push
xchg
ljmp
sbb
and
mov
icebp
fsub
cmp
or
add
pop
mov
fyl2xp1
xchg
stc
hlt
repz
imul
cmp
unpcklps
lods
bound
outsl
push
out
and
popa
sbb
pop
xchg
sbb
mov
daa
clc
and
add
pop
sahf
sbb
cli
sbb
pop
jnp
xchg
shlb
movsl
cld
sub
and
fidivl
rorl
mov
sarl
test
pop
inc
dec
mov
jle
add
stos
push
sbb
jae
sahf
inc
xchg
inc
sbb
outsb
sbbb
iret
jb
sbb
pop
xchg
push
scas
ljmp
pop
sahf
dec
jb
inc
jnp
shlb
dec
ja
mov
dec
fdiv
push
data16
jae
mov
dec
adc
add
shrl
pop
sub
cmp
mov
sti
mov
aaa
daa
mov
or
loope
movsl
cmp
inc
mov
xchg
mov
testl
dec
mov
add
dec
pop
fsubl
dec
sub
enter
or
rcrb
xor
push
lock
cmc
jae
inc
jbe
mov
jno
das
dec
dec
repnz
cmp
push
jge
inc
jecxz
leave
ss
das
enter
sub
leave
insb
inc
les
sti
or
pop
and
pushf
ds
jecxz
bound
dec
add
jno
in
push
mov
cmp
mov
jge
aam
outsb
cmp
add
xchg
and
loope
mov
call
lds
or
push
in
xchg
mov
rolb
cwtl
add
aaa
cmpsl
and
sarb
jmp
cmp
addb
mov
mov
cltd
add
leave
je
push
roll
rcll
xchg
lea
sbb
in
ret
jmp
or
lret
mov
sub
inc
add
mov
out
stos
xchg
jp
test
std
xor
adc
fdiv
arpl
movsl
enterw
sbb
and
push
jb
jle
aad
out
pushf
js
pop
cmp
xchg
test
and
mov
fwait
enter
xchg
lcall
scas
pop
loope
lahf
sbb
xchg
dec
mov
mov
test
cmp
pop
les
push
push
lods
dec
scas
mov
mov
jno
xor
mov
cmpsb
mov
shll
arpl
pop
fst
stc
push
mov
ljmp
into
sbb
and
add
cmp
lahf
xchg
imul
push
jecxz
fdivrl
ja
loope
ljmp
sub
xorl
mov
repnz
pusha
idivb
and
or
fisttps
mov
aaa
jmp
shrb
xor
add
lods
in
loopne
and
sar
iret
push
xor
mov
out
movsb
jle
in
push
mov
or
xorl
push
pop
mov
pop
clc
loop
xchg
imul
jge
mov
into
sbbl
fsubrp
xor
dec
or
out
jge
outsb
push
loope
cmp
outsb
das
xchg
movsl
and
adc
jmp
stos
in
ljmp
mov
lret
scas
add
sub
dec
aas
clc
pop
sbb
adc
mov
push
fmull
or
fsubrl
sub
or
xlat
pushf
rcrl
pusha
lea
aad
imul
shl
fidivs
lds
sbb
scas
xchg
xor
loope
cmp
jno
or
xchg
mov
loopne
shlb
out
scas
dec
nop
jae,pn
subl
jge
fwait
pop
pop
jnp
imul
test
pop
add
dec
xchg
lea
inc
push
push
jnp
je
jecxz
cmc
or
xor
or
pop
push
and
inc
lret
xchg
addl
and
int
mov
mov
xchg
add
movsb
cs
pop
sbbl
imul
mov
cmpsl
stc
xchg
push
mov
adc
and
shlb
cli
out
sub
test
shl
pushf
out
push
jne
lods
call
sbb
xor
std
cmpb
cmp
mov
stos
ds
pop
sub
xchg
mov
xchg
mov
repnz
inc
dec
cmp
cmp
mov
sbb
add
orl
ds
adc
fwait
mov
xchg
std
or
movsb
ljmp
jmp
mov
leave
ret
je
push
int
rolb
cwtl
movsb
xor
add
imul
mov
sub
test
shll
pop
in
pop
add
xlat
pushf
js
push
adc
inc
push
xchg
mov
xchg
jb
or
mov
adc
jmp
fwait
adc
test
xchg
ss
test
cmpsb
pop
pop
sub
rorb
lret
push
iret
or
lret
mov
outsb
cmp
add
lock
mov
adc
hlt
mov
push
add
scas
data16
mov
cmc
or
or
pop
xchg
push
test
inc
clc
ficompl
xchg
dec
and
dec
or
repz
dec
push
leave
jle
ret
popf
out
std
and
ds
push
aam
pop
loopne
out
xchg
jne
mov
push
jns
xchg
mov
mov
pop
lahf
or
xchg
subl
les
int
jl
test
xchg
cmpsl
js
rorl
push
popl
and
fldcw
mov
sub
data16
mov
pop
sub
cmp
stc
nop
fucomp
movsb
in
adc
rorl
push
xor
mov
bound
mov
js
out
outsb
pop
mov
jp
adc
add
mov
jb
and
xor
ret
fwait
orl
dec
div
aad
mov
out
jae
inc
or
int
xchg
rorl
dec
pop
push
sarb
lcall
in
loopne
icebp
out
arpl
cmp
adcb
pop
pushw
pshufw
in
fistpll
lret
push
ss
sarl
jecxz
push
imul
push
sbb
jb
icebp
fmull
push
sti
js
nop
ds
or
lock
sbb
sti
jl
shrb
test
mov
sub
outsl
inc
mov
idivl
je
adc
nop
out
andb
sbb
xchg
push
dec
inc
pop
mov
jl
aad
pop
imul
bound
pop
addb
andb
aad
js
das
fwait
xchg
shlb
idivl
jp
test
mov
insb
mov
aas
into
mov
mov
inc
jecxz
fs
popa
ss
out
xchg
adcb
lahf
adc
adc
outsb
fcmovne
jmp
mov
add
dec
faddl
mov
iret
or
add
inc
out
popa
pop
pop
outsl
ja
test
or
cmpsb
inc
icebp
sub
in
mov
out
cmp
dec
test
xor
push
repnz
mov
sbbl
mov
ss
insl
ljmp
push
add
ret
outsl
je
daa
inc
pop
stc
imul
insl
pop
outsl
rcrl
dec
jnp
add
scas
bound
ss
bound
xchg
lahf
out
in
cmp
xlat
cld
sub
pop
push
push
pop
pop
pop
push
xor
ja
stos
pop
cmp
push
les
mov
adc
jl
sbb
xor
xchg
cmpsb
push
jo
repz
bound
jns
dec
jae
jl
out
jg
into
sbb
ret
mov
ljmp
out
cmpxchg
arpl
int
xchg
jnp
push
leave
std
or
fs
sub
fstp
test
push
xor
pusha
in
sbb
jno
sub
out
or
leave
mov
adc
ds
xchg
mov
jbe
sub
sbb
pop
cmp
testl
or
fisttps
mov
mov
mov
pop
jmp
cmp
dec
je
mov
loopne
movd
cmp
pop
lods
jge
xor
arpl
inc
jno
adc
pop
imul
loopne
pop
xchg
scas
test
cld
jl
mov
in
mov
loope
cmp
xchg
scas
mov
sti
dec
push
jle
and
aam
jno
jns
mov
add
push
sarb
inc
add
mov
xchg
add
out
adc
cmpsb
lds
testl
xor
mov
mov
adc
into
cwtl
cmp
or
sbb
movl
ret
inc
fstps
repz
in
pop
add
jl
sbb
sbb
daa
adc
lds
jbe
cmp
out
mov
sbb
sbb
pushl
rorl
jae
jns
insl
data16
mov
jl
popf
in
inc
jae
in
pop
cmp
nop
mov
sbb
xor
mov
arpl
or
shll
pop
clc
imul
jl
xor
mov
adc
inc
into
cmp
dec
shrl
push
cmp
inc
add
sub
pop
mov
dec
mov
mov
imul
rolb
dec
enter
jle
arpl
sub
xchg
in
outsb
push
scas
sbb
sahf
cmc
cld
mov
mov
cmp
sub
adc
fcompl
cmp
inc
cmpsb
add
fidivrl
mov
mov
jmp
mov
and
fstpl
jb
out
adc
mov
push
out
jl
hlt
inc
stc
xchg
or
shlb
repnz
ljmp
and
test
pop
test
add
int3
ds
adc
int3
mov
push
fmull
sbb
fstps
sub
inc
lds
inc
sub
push
negl
sbb
ret
mov
scas
xchg
test
ja
es
es
out
leave
mov
inc
jmp
rcrb
mov
jle
xchg
jle
dec
inc
incl
clc
das
rcrb
out
push
incb
addr16
push
mov
adc
lret
pushf
ret
pop
mov
ss
in
les
jmp
cmpsl
sbb
in
rol
aam
inc
sbb
sbb
jo
icebp
or
push
scas
lds
or
pop
jne
lcall
pop
push
imul
lods
jo
loopne
sbb
testb
testb
test
enter
popa
clc
inc
xor
arpl
repz
int3
orl
bound
push
stc
push
lods
out
sysenter
test
insl
xchg
cmp
pop
mov
adc
aad
lret
cs
pop
flds
sub
pop
ss
lret
or
pop
xor
and
cmpsb
jae
pop
dec
or
xor
mov
adc
or
into
sub
cmc
test
iret
subl
std
mov
data16
pop
adc
xchg
lds
mov
lret
loop
rol
sbb
push
lret
xchg
jp
ss
mov
loope
xor
subl
sub
pandn
mov
popf
fsubs
push
in
sbbl
xchg
mov
subb
test
dec
bound
icebp
cmpsb
cmpsl
cmp
mov
dec
pop
call
fistl
push
lret
mov
in
pusha
mov
enter
ja
jbe
jmp
and
daa
xchg
xor
dec
loopne
stos
je
push
imul
ret
fists
adc
pop
xchg
lret
push
sub
inc
jl
add
dec
arpl
inc
adcl
insb
outsb
stos
imul
popa
jl
inc
xchg
gs
sub
dec
fs
loopne
add
outsb
scas
shrb
sub
leave
je
mov
testb
jecxz
push
test
mov
insl
add
add
xor
pop
insl
pop
out
sbb
mov
insb
xor
add
pop
int
mov
adc
sbb
fdivrl
rcrb
xlat
adc
imulb
cmp
dec
mov
and
es
rorl
loop
pop
mov
push
enter
mov
pop
sub
cmp
pop
cmpsl
fs
scas
jle
sub
loopne
xchg
mov
inc
je
add
xor
jns
movsb
in
xlat
xor
mov
popf
es
adc
loop
inc
dec
shll
outsb
fwait
mov
mov
adc
cmpsl
push
cmp
fwait
test
bound
sub
sbb
aam
and
mov
mov
or
mov
inc
jg
insl
stc
sub
std
jl
mov
in
fbstp
data16
int
mov
mov
mov
hlt
mov
je
mov
ret
pusha
cwtl
scas
movl
pop
orb
mov
outsb
mov
sbb
loope
stos
add
ja
subb
pusha
lahf
mov
sbb
nop
pop
and
ret
repnz
or
fwait
sti
lods
and
inc
int
adc
or
dec
mov
mov
sub
xchg
sti
cmp
shrl
ljmp
sub
retw
les
pushf
pushf
mov
int3
fistps
roll
xchg
arpl
dec
cmp
and
loop
push
es
mov
inc
mov
scas
xor
mov
pop
and
int3
xor
cmp
mov
push
adc
dec
xor
arpl
fadd
lret
pusha
inc
mov
xor
push
cltd
in
sub
sbb
lods
add
mov
jl
flds
xor
xchg
inc
dec
push
jns
pushf
je
iret
pop
pop
inc
sub
cmp
jae
jg
jae
pop
int
add
mov
fldenv
mov
popa
sbb
sub
xchg
repnz
gs
sbb
cmpsl
mov
cltd
js
ds
aas
mov
loopne
sahf
add
xchg
and
aaa
inc
call
std
push
mov
in
push
pop
jbe
andb
push
cltd
jo
mov
dec
dec
sbb
jle
xchg
shlb
mov
je
push
mov
adc
test
inc
cmpsb
clc
icebp
jns
cld
jbe
inc
mov
and
loop
or
add
inc
jno
and
and
mul
xchg
dec
ss
into
jns
jno
stc
push
daa
insb
dec
push
pop
fnstsw
add
sbb
insl
cmp
call
lret
or
push
pop
pusha
dec
ret
push
push
inc
bound
xor
dec
xor
in
mov
ljmp
scas
cld
in
in
jae
andl
lret
ret
jl
inc
stos
iret
mov
xor
js
and
mov
cltd
push
sahf
jae
into
and
jae
pop
in
ficompl
lods
cmp
dec
sti
inc
shrb
jo
bnd
jge
jns
xchg
push
inc
in
and
loope
xor
aad
cmp
xor
scas
mov
shrl
mov
repnz
jae
clc
fldcw
jo
xor
mov
mov
loope
jno
in
fwait
or
je
rcll
pop
stc
push
lahf
mov
inc
idivb
mov
scas
xor
out
scas
popf
adc
loopne
in
cmpsb
mov
insb
inc
push
mov
repnz
sbb
add
fwait
dec
dec
jae
jle
loopne
mov
and
xlat
clc
outsb
cwtl
mov
push
mov
sbb
push
scas
cmp
das
pop
gs
and
adc
jg
add
jbe
add
mov
pop
dec
mov
out
in
hlt
jp
lock
inc
dec
sti
es
sbb
movsl
xorb
cmp
sub
push
pop
pop
inc
sub
push
addr16
add
test
pop
jb
leave
push
fdivr
inc
dec
ljmp
mov
popf
into
loop
pop
outsb
mov
ret
jecxz
outsl
adc
subb
mov
mov
inc
out
mov
pop
nop
repz
in
das
xlat
mov
dec
stc
mov
or
lods
repnz
aam
fwait
sbb
inc
shl
inc
cld
jmp
test
dec
es
lret
pop
xor
mov
push
inc
out
out
xchg
insb
aaa
testl
add
pop
fmull
adc
in
pop
dec
xchg
test
testb
inc
les
xlat
movsb
daa
mov
jge
lret
test
add
stos
fsubl
test
push
and
push
add
jb
mov
orb
imul
stos
mov
scas
pop
cmp
in
movsb
sub
lds
xchg
xor
push
push
popa
dec
ds
daa
mov
hlt
fs
xor
sbb
shll
fmull
movsl
add
dec
popf
test
inc
mov
lock
arpl
lahf
and
xor
or
push
popa
sbb
inc
movsl
sub
cltd
jns
mov
je
ss
add
or
add
js
vmaxpd
sbb
dec
xchg
dec
xchg
jge
inc
pop
xchg
cltd
jmp
cwtl
adc
and
lods
xchg
adc
cmc
and
or
rorl
lods
xor
int3
call
test
int3
dec
shlb
outsl
pop
mov
out
stos
rep
stc
jle
lds
lods
mov
mov
rcll
mulb
or
adc
pop
clc
sbb
pop
int3
or
es
scas
les
xor
out
pop
jb
orl
test
or
inc
push
shr
push
fsubs
fucomip
xchg
cmpsb
xor
sub
and
cmp
mov
test
inc
and
push
push
push
xchg
push
adc
cmp
cmp
mov
outsl
inc
sbb
mov
mov
mov
add
jae
inc
cmc
lods
scas
xor
fidivrs
psraw
sub
lea
sbb
inc
inc
addl
out
dec
cld
mov
sbbb
bound
lods
jbe
push
hlt
gs
orl
cmp
pop
fbld
lret
cmp
frstor
enter
jmp
aaa
gs
call
aad
push
jle
mov
test
mov
jp
and
xchg
inc
or
jo
sbb
mov
mov
jno
adc
inc
mov
pop
push
int
pop
mov
ljmp
adc
pop
and
dec
pop
cli
sbb
stos
subl
adc
pop
and
test
sub
fsts
pop
int3
jne
jbe
push
jns
sbb
xor
mov
sbb
fdivs
xchg
jno
out
and
adc
nop
loopne
sarl
into
or
lret
or
adc
fwait
in
jae
jl
test
pop
rolb
or
movsl
push
stos
xchg
fisubl
dec
cwtl
sub
stc
cmp
or
xchg
sbb
xor
in
push
cwtl
inc
jmp
scas
jg
insl
rcr
mov
fmuls
inc
adc
lcall
repnz
and
loopne
push
inc
lods
bound
enter
adc
scas
popl
adc
jle
stc
rolb
mov
adc
pop
cmp
adcb
and
in
roll
jp
scas
aam
lret
scas
jge
jo
xchg
xor
iret
cltd
mov
notb
test
jae
aad
adc
repz
stos
cmc
and
dec
inc
xchg
das
inc
jbe
jb
push
mov
cli
jp
pop
mov
xor
jno
add
and
dec
imul
xchg
arpl
mov
and
jecxz
pop
fdivrp
cmp
and
dec
cmp
push
lods
pop
fsubr
push
test
mov
sub
int
xchg
xor
push
pop
push
mov
popf
xor
jb
mov
adcl
fdivs
ja
fidivrl
or
in
or
jns
xchg
dec
test
push
mov
cmp
jecxz
xor
ret
push
popf
js
or
push
mov
enter
pop
lea
pushf
rcl
and
inc
xchg
inc
daa
lahf
pop
cli
fidivs
push
fdivrl
cmp
jb
aaa
push
pop
jmp
in
fldl
jno
inc
fistl
push
je
push
mov
jae
inc
js
sub
mov
shlb
scas
adc
xchg
shlb
sbb
adc
in
jbe
roll
mov
pop
imul
mov
mov
sbb
in
pusha
cld
push
int3
inc
fdivl
lods
and
insb
loopne
rorb
mov
mov
sbb
in
pusha
cld
push
int3
inc
fdivl
lods
and
insb
loopne
rorb
mov
mov
sbb
in
pusha
cld
push
int3
inc
fdivs
lods
and
adc
aam
out
rcrb
cmp
or
fmull
int3
inc
stos
inc
and
ret
out
repz
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
pop
pusha
insl
push
jge
add
insl
dec
dec
pop
pop
add
lock
in
sar
lea
mov
pusha
insl
push
jge
or
adc
loopne
lock
rorb
mov
pusha
insl
dec
jge
or
or
ficompl
icebp
dec
jecxz
roll
push
and
lret
dec
fistps
rorl
pop
imul
lea
sub
lock
es
pusha
sarb
xor
inc
int
out
pmaddwd
data16
push
fs
int
mov
adc
sub
outsb
jge
or
pop
pusha
sbb
jo
adc
dec
mov
fstpt
jae
cmc
pop
lods
sbb
addl
adc
fsubrl
cmp
fnstsw
loopne
xchg
je
add
lahf
sub
mov
subb
popf
mov
or
rcl
mov
popf
icebp
mov
adc
jecxz
aad
outsl
aad
adc
ja
inc
jge
or
or
clc
in
leave
std
nop
mov
pusha
or
inc
popa
push
dec
dec
jl
insl
mov
xchg
scas
call
nop
jmp
pusha
cmp
inc
jno
sub
mov
subl
mov
add
or
adc
loopne
sar
rorb
mov
pusha
insl
push
jge
or
adc
loopne
sar
rorb
mov
out
jno
push
xlat
or
and
movsb
data16
mov
scas
int3
add
sub
insb
mov
fnstsw
pop
sub
lret
push
imul
xchg
cs
cmp
lock
shll
adc
repnz
lea
repnz
push
pop
ret
mov
sub
jno
fs
test
xlat
inc
loope
insb
jb
sub
cmp
rol
addr16
cs
dec
fisubrs
add
dec
jmp
lods
mov
adc
cmp
dec
out
dec
imul
jae
pop
mov
sbbl
and
cmp
dec
movsl
ficompl
adcl
in
sub
je
lret
aam
repnz
cmp
adc
xchg
in
push
jne
cmp
subb
in
in
sub
sbb
mov
jecxz
mov
add
inc
ss
or
sub
icebp
push
mov
xchg
jnp
cmp
push
out
pusha
lock
xchg
out
fcomip
mov
push
cli
lds
popa
aam
xchg
xchg
inc
xchg
sub
mov
repnz
mov
pop
aad
pop
adc
add
jbe
mov
sbb
shrb
push
push
arpl
mov
sub
inc
cmpsb
pop
inc
mov
and
lret
jmp
scas
in
ja
pushf
fimuls
mov
dec
xchg
push
lock
adc
jecxz
add
clc
mov
fisubl
sbb
and
mov
stos
sub
dec
mov
xor
xor
imul
arpl
es
call
sub
adc
pop
shll
insb
pop
outsb
mov
push
jns
sahf
mov
shrl
or
pusha
mov
sarb
mov
shrb
loope
mov
imul
mov
fidivl
neg
movsl
rep
xor
mov
lcall
popf
orb
std
inc
repnz
in
clc
ljmp
mov
inc
xlat
jae
enter
mov
das
add
push
daa
pop
xchg
js
fwait
jmp
and
jle
ret
out
pop
jmp
sbb
xchg
sub
loop
xorb
sti
andb
mov
fimuls
loop
dec
jle
adc
loopne
push
bound
adc
xchg
insb
shl
mov
cmp
jle
mov
call
test
out
subl
cmp
imul
xchg
cmpsl
mov
mov
xchg
add
stos
cmp
inc
xor
repz
test
pop
insl
std
xchg
jb
xlat
jg
cmc
lods
pop
or
mov
jae
mov
sbb
cmp
js
shll
fwait
outsl
rcl
push
inc
mov
xchg
dec
jge
mov
insl
ja
jp
popa
pop
stos
xchg
fdivs
mov
xlat
xchg
and
pusha
imul
pop
out
cld
adc
gs
rcrl
imul
out
gs
adc
sahf
inc
mov
outsb
out
enter
push
ds
loopne,pn
enter
fwait
mov
test
push
add
in
stc
mov
push
inc
mov
rcll
dec
cmp
xchg
ja
or
and
xor
leave
test
setns
popl
add
jb
dec
xchg
subb
xchg
inc
bound
mov
rcr
jmp
cli
jb
add
xor
xor
mov
sbb
js
loopne
push
imul
push
inc
test
data16
pop
pusha
rclb
push
stc
mov
aam
dec
push
int
inc
lods
std
mov
mov
frstor
es
adc
jl
insl
pop
add
pushf
inc
cmc
cmp
cmpb
push
push
daa
or
insl
icebp
mov
add
or
cmp
mov
shrb
push
sbb
inc
cmp
test
xchg
addr16
andb
or
fcoms
and
repz
xchg
push
mov
xlat
js
jle
sahf
out
and
cmp
scas
je
inc
push
sbb
add
das
sub
add
mov
adc
mov
push
mov
addr16
push
push
sbb
mov
xor
mov
mov
divb
xlat
push
popa
ret
cmpsb
mov
pop
or
mov
dec
mov
push
mov
xchg
bound
sub
xor
mov
mov
push
mov
cmp
or
add
mov
cmpsb
iret
and
add
test
std
xchg
cmpsl
mov
sbb
sbb
mov
or
aas
sub
pop
mov
ficoms
inc
ss
xchg
cmp
lds
aam
jns
lods
jbe
insl
fsubrs
and
jle
push
jae
iret
int3
jg
in
xchg
add
inc
rcr
loop
out
inc
shr
lcall
or
pop
jo
sub
test
xchg
and
out
pop
movsb
lahf
sahf
bnd
pop
dec
loopne
xchg
sahf
test
mov
mov
mov
xchg
xchg
shlb
icebp
ljmp
xor
jg
mov
xchg
sub
and
jl
stc
arpl
and
push
stos
adc
add
or
shll
add
push
pushf
pop
out
rcrl
out
je
sub
pop
test
fsubl
sahf
int3
ja
pop
repz
and
nop
lcall
sbb
pop
fimuls
mov
insl
mov
jl
leave
mov
add
sbb
push
fstpl
adc
arpl
xor
jnp
cmp
adc
in
dec
shll
cmp
push
sarb
pop
jl
inc
ficoms
pop
adc
adc
ret
push
pop
pop
xor
dec
mov
sub
mov
lds
mov
inc
insl
dec
imul
shll
adc
push
or
aas
jge
xchg
fxch
adc
jbe
sahf
cs
push
push
or
and
inc
push
fwait
jns
scas
or
push
push
lds
shrb
or
or
les
push
jge
out
add
push
mov
ljmp
pushf
ret
fnstsw
mov
fdivrs
push
pusha
or
xor
jp
into
leave
sbb
movb
pop
ret
fldl
mov
cli
ret
stos
negl
or
nop
movsb
jg
test
add
sbb
inc
push
lods
pop
divb
push
xchg
and
in
iret
and
pop
je
enter
mov
aaa
mov
push
loopne
push
xor
dec
mov
aas
xor
push
push
fisttps
sarb
fidivrs
xor
dec
rolb
adc
dec
cli
fisubrs
pop
cmp
jp
sbb
out
in
aas
push
mov
test
insl
mov
xchg
daa
jg
flds
jle
dec
and
sbb
sub
push
in
movsb
bound
mov
xchg
icebp
shll
sub
push
jo
inc
leave
mov
dec
adc
gs
cmp
fisttpll
in
mov
mov
sub
adc
ss
and
imul
scas
mov
xor
fadd
adc
push
sbb
adc
adc
fs
inc
mov
xor
mov
add
and
ret
sbb
iret
jl
addr16
or
ficompl
js
sahf
enter
push
pop
pop
orl
inc
test
mov
pop
sarb
pusha
add
js
or
mov
decl
jno
inc
xchg
fwait
aad
mov
lds
aam
mov
add
out
mov
cmp
inc
je
scas
rol
sbb
cmc
fisubrs
shll
fbstp
and
into
cli
cmc
std
lods
jle
push
sbb
test
adc
jg
leave
ret
mov
repnz
adc
mov
rcrl
xchg
movsl
sub
push
push
std
popf
or
sbb
aam
push
add
mov
mov
addr16
lahf
sub
and
fsqrt
inc
rcl
pop
mov
and
mov
ficoms
fidivrl
dec
add
push
mov
mov
fisubrl
xchg
or
adc
cmpsb
hlt
dec
cwtl
into
push
jnp
pop
lock
pop
push
ret
xor
mov
mov
push
push
stos
mov
iret
jo
lret
mov
rolb
push
mov
shll
xor
push
aas
xchg
add
jbe
adc
mov
repnz
push
pop
jne
jg
lcall
in
out
sbb
lea
pop
push
cmp
scas
cld
ret
and
pop
or
stos
lods
pushf
dec
sub
lods
lds
rcrl
xor
sbb
inc
repz
push
fisubrl
mov
mov
mov
ret
icebp
mov
pop
in
add
cld
xor
pushf
cs
popf
aas
add
mov
inc
sub
dec
gs
or
int3
rcr
mov
xchg
jbe
push
cs
xchg
add
sahf
cmc
sbb
fistpll
fwait
inc
jne
sub
inc
cmpsl
in
jle
pop
sub
fisttpll
cmp
pop
lods
add
mov
cmpsl
xor
add
mov
push
ljmp
imul
inc
fucomp
jne
and
js
mov
fstpt
loopne
and
inc
loop
mov
mov
lds
adc
xlat
add
aaa
iret
xor
and
adc
in
push
adc
inc
fwait
mov
add
adc
lods
pop
scas
sbb
cmp
test
cmp
neg
mov
xor
mov
cmp
pop
out
mov
in
cmpsb
lock
pop
mov
and
xor
int
xchg
push
mov
cld
jge
adc
call
in
mov
lret
mov
pop
mov
jle
push
rcll
pop
pusha
mov
or
in
unpcklps
mov
pop
aaa
or
scas
mov
mov
adc
add
mov
pop
jl
jg
cmp
sub
xor
int3
mov
cwtl
test
subb
mov
jne
mov
ds
dec
ret
out
mov
in
or
push
sub
sbb
pop
lcall
movsl
xor
cmp
push
dec
mov
mov
divb
push
movb
aam
mov
pop
adc
cmp
mov
std
push
ljmp
ficoms
jmp
fwait
insl
xchg
xchg
popa
or
imulb
in
push
jns
jg
inc
mov
cmp
lea
mov
xchg
loope
push
mov
pusha
xor
pusha
or
scas
mov
icebp
insb
ficomps
js
mov
or
out
out
pop
add
mov
mov
pop
and
mov
test
xchg
outsb
insb
fimuls
in
sub
subb
cli
or
fidivs
push
and
std
roll
insb
pop
test
mov
sarb
pop
mov
imul
adc
xchg
xor
xor
cmpsb
sub
xchg
xchg
adc
pop
sub
sti
push
push
insl
jle
push
imul
lcall
lea
or
jecxz
dec
test
aad
adc
push
push
ret
fwait
add
mov
cmp
mov
push
sub
ret
adc
pop
sub
inc
or
es
inc
mov
xorl
xchg
jmp
dec
xor
cmp
jg
xchg
or
mov
je
ret
push
add
sbb
jl
pusha
dec
jns
rolb
adc
xorb
mov
or
jne
mov
fsubl
fcoml
mov
xchg
dec
mov
arpl
fnop
mov
inc
push
lahf
pop
jns
xchg
cmp
repz
cmp
add
repnz
js
or
xchg
xrelease
push
test
outsl
or
mov
popf
xor
or
adc
enter
mov
mov
arpl
adc
push
pop
push
adc
sbb
adc
insb
sub
sub
xor
out
sbb
mov
pop
out
in
aad
into
ss
mov
movsb
test
loopne
adc
sbb
test
lds
sbb
mov
and
std
arpl
loop
stos
popa
in
cmp
add
mov
aaa
cmp
into
or
mov
sub
and
and
test
rclb
push
popf
sar
testb
push
arpl
popa
push
cld
scas
add
sbb
xor
orb
pop
adc
lods
dec
repnz
flds
mov
scas
int
push
xor
fcomi
sub
sti
fcomps
test
les
testb
hlt
jg
fwait
test
mov
mov
cmpsb
xchg
sbb
push
push
sbb
stos
stc
clc
mov
mov
xchg
imul
jae
popa
sbb
mov
sbb
lahf
mov
bound
cmpsl
xchg
aad
aas
data16
jo
cmp
popa
adc
addr16
xchg
call
lock
mov
sbb
push
stos
jb
popa
leave
and
cmpsl
mov
push
cltd
aas
dec
adc
sub
fdivrs
cmc
fadds
push
sub
shl
sbb
rcll
rclb
pop
in
sbb
sbb
mov
rcl
sub
cmp
jmp
nop
mov
xchg
cs
sbb
push
or
roll
xor
cmp
mov
ljmp
pop
cmpsb
shlb
repz
cmp
sub
insl
in
inc
stos
sti
pop
xchg
dec
jo
adc
fnstcw
mov
int3
jns
dec
les
loopne
mov
in
dec
pop
mov
mov
dec
addb
sbb
fnstcw
pop
jb
or
cmp
ds
adcb
xchg
adcb
ljmp
call
xor
push
push
push
sbb
adc
pop
xor
dec
mov
movl
and
int3
dec
mov
xchg
shlb
out
scas
in
pop
adc
dec
mov
push
lods
mov
jg
je
cmp
xchg
xor
insl
sti
nop
adc
rorb
daa
xchg
xchg
mov
test
jb
pop
mov
mov
clc
or
add
adc
cmp
xchg
imul
adc
cs
shl
call
into
jecxz
jae
jbe
icebp
mov
pop
push
fcoml
fwait
addr16
push
add
stos
pop
hlt
dec
lcall
stos
dec
js
int3
orl
imul
outsb
cmc
mov
mov
add
mov
dec
pop
test
inc
fcmovnbe
push
std
xor
ja
aaa
sbb
xor
rcll
movsb
mov
fs
cltd
rcll
mov
leave
mov
or
pop
jle
xchg
ret
adc
pop
sahf
mov
fldt
xor
push
fmuls
mov
lods
push
clts
pop
repz
icebp
or
dec
jg
dec
out
jbe
lods
inc
push
sar
cmc
std
adc
test
fs
fnstsw
or
mov
push
ljmp
fwait
das
roll
je
stos
push
pop
sub
cmp
rolb
add
mov
cmp
cmp
pop
dec
mov
hlt
jle
loopne
int
sub
je
pushf
ror
popf
or
jg
pop
scas
and
sbb
sub
xchg
mov
jmp
jae
pop
addl
cli
imul
dec
mov
gs
inc
cmp
pop
mov
mov
out
pop
and
jmp
push
dec
jecxz
test
adc
pop
xlat
mov
movsl
ds
loop
adc
add
jle
dec
test
jle
nop
pop
xchg
and
or
or
mov
fcomps
adcl
out
cmc
push
xor
jg
xchg
icebp
add
inc
and
out
or
dec
adc
push
cmpl
jno
jecxz
adc
sbb
ds
jg
push
ja
mov
adc
decb
push
lods
imul
lcall
push
pop
adc
mov
gs
fisttpl
insl
jle
dec
push
lds
in
sub
sub
mov
add
push
sahf
mov
ret
xor
sbb
inc
mov
xchg
sbb
ss
xor
pop
mov
int3
xor
inc
cmp
adc
fcoms
shl
jne
in
je
pop
or
inc
sub
sar
xlat
or
or
mov
inc
icebp
or
dec
std
add
xchg
mov
push
insl
js
out
adc
test
jnp
pop
addb
and
sbb
in
xchg
sbb
dec
mov
lods
adc
je
adc
cmpsl
mov
add
shll
push
shr
xchg
lods
jne
sub
data16
jb
in
push
std
daa
pop
mov
inc
movsl
adc
push
jbe
in
xchg
cs
push
xor
push
mov
pop
push
in
sbb
mov
lds
mov
sub
sub
out
mov
jnp
rcr
adc
outsl
cmpsl
jae
lock
mov
pop
push
cli
adc
dec
push
insl
and
mov
lret
and
pop
add
cmpsl
pop
bound
es
xor
popf
pop
adc
insb
jns
popa
dec
mov
shrl
mov
sub
icebp
mov
mov
push
pop
mov
out
cmc
or
imull
sbb
mov
xchg
incl
mov
gs
sbb
in
and
and
mov
xchg
xor
xlat
mov
out
das
subb
loope,pt
inc
mov
mov
into
rorb
inc
mov
pop
pop
and
add
cmp
lret
mov
nop
and
out
fisubs
ficomps
xchg
lds
ret
loopne
cmp
push
leave
adc
add
mov
testb
adc
js
lahf
out
add
int
inc
push
push
xchg
jb
int3
jmp
lahf
mov
enter
les
adc
sub
mov
inc
mov
lcall
and
pop
jbe
push
xlat
push
subl
push
inc
add
push
fnstsw
push
or
push
out
xchg
mov
mov
es
movaps
sbb
cmp
mov
pushf
jle
adc
push
arpl
ljmp
pop
sbb
sbb
adc
lcall
cmp
jbe
jno
jnp
shlb
je
xchg
add
pushf
xor
inc
fmuls
and
icebp
movl
pop
lahf
loop
jo
out
faddl
xchg
cmp
movl
jge
adc
sbb
sub
aaa
and
test
cmp
loop
xor
inc
sti
pop
fnstenv
xchg
out
movb
je
aam
cwtl
dec
lods
or
jns
sbb
adc
push
rcll
mov
inc
dec
mov
stc
stc
mov
sub
pop
lcall
add
xchg
dec
pop
xor
push
es
lret
jge
mov
into
aam
jne
pop
mov
jg
lds
loope
test
ds
unpcklps
sahf
test
add
or
mov
mov
fcom
and
pop
inc
stc
or
je
mov
mov
fadds
loope
das
xor
iret
std
mov
xchg
mov
dec
or
loope
jbe
repz
dec
movsb
popa
push
and
pop
movsl
dec
cli
dec
into
roll
sbb
lods
negb
jns
movsl
jnp
mov
outsl
xor
push
daa
arpl
xor
cmc
mov
test
fildll
mov
dec
ror
inc
ss
cmc
push
lcall
js
out
loope
mov
push
cltd
inc
shll
out
lcall
das
aas
shrl
scas
inc
or
incl
sub
stc
jno
adc
roll
in
mov
in
sub
push
sub
dec
adc
std
outsb
movq
fldl
dec
sbb
mov
sbb
cmp
in
mov
in
lcall
jg
in
ss
insl
or
sub
out
jge
out
dec
or
push
rorl
lds
or
in
dec
pop
leave
add
icebp
push
mov
mov
jne
sub
xor
cs
aad
mov
adc
push
adc
pushf
push
divb
jg
pop
lahf
ret
sub
sbb
xchg
mov
clc
mov
push
scas
pop
scas
mov
mov
jl
sbb
fwait
test
sti
fstl
cmpsl
xor
push
xchg
ficompl
call
ror
cltd
sbb
push
test
mov
pop
cmp
jg
inc
jp
push
aaa
cmp
dec
stc
sbb
js
pushf
sub
enter
cltd
xor
xchg
pop
fimull
test
push
mov
mov
inc
inc
hlt
fmull
subl
jo
das
cmpsb
pusha
pushf
mov
sbb
add
lock
in
sar
rorb
mov
pusha
insl
push
jge
or
adc
loopne
sar
rorb
mov
pusha
insl
push
jge
or
adc
loopne
sar
rorl
mov
pusha
insl
push
jge
or
adc
dec
inc
sar
mov
cmp
jg
dec
std
pop
int
fnstsw
or
cmp
inc
xchg
cmp
jl
dec
jmp
cmp
mov
int
fnstsw
or
pop
insl
leave
jge
dec
call
cmp
mov
int
fnstsw
or
cmp
pop
cli
and
lds
jae
mov
cltd
sub
cmp
testb
mov
les
js
pop
push
sbb
dec
jbe
xchg
add
hlt
push
sbb
mov
fprem
es
mov
ret
nop
call
lret
mov
push
bnd
cli
insl
leave
sub
dec
out
popf
push
jge
inc
movsl
push
std
dec
cmpsl
jl
das
mov
test
or
popf
fchs
xor
aaa
jl
cltd
jge
mov
sub
sub
cmpb
test
sub
enter
jle
ret
rcrl
adc
dec
push
xlat
push
jno
inc
dec
xchg
add
fnsave
cwtl
mov
dec
test
std
pop
int
fnstsw
or
cmp
jge
dec
jmp
cmp
ljmp
mov
lods
dec
iret
insl
jmp
mov
and
fisubrs
pop
fmull
and
pop
cmc
jle
pop
or
stos
sub
push
punpcklwd
push
or
cmp
cmp
jge
dec
jmp
cmp
mov
int
fnstsw
or
cmp
jge
dec
jmp
cmp
mov
push
push
repnz
data16
fstpl
fwait
fs
adc
aas
in
push
push
lahf
ja
push
pop
ret
add
fwait
xor
filds
popa
jae
movsl
adc
shl
aas
cmp
pop
lds
bound
xorb
adc
inc
lahf
jmp
or
jne
dec
push
fs
data16
pop
stos
sbb
sti
pop
xchg
stos
aad
movaps
or
add
test
imul
lcall
data16
sub
lcall
push
fsubl
int
flds
inc
insb
cwtl
cs
xchg
sbb
mov
fcoms
add
loop
in
mov
lods
xorl
pop
rorb
shlb
nop
jb
rorb
iret
push
xor
cmp
push
inc
js
cmp
scas
cmp
push
xor
idivb
insb
jle
out
bound
outsl
adc
cmc
aam
sbb
cmp
mov
imulb
mov
and
gs
shlb
outsl
sbb
and
aas
out
add
sahf
dec
sbb
orb
sti
add
fisubrs
test
sbb
mov
xor
out
jb
sbb
lods
out
imul
push
inc
and
in
adc
adc
mov
ljmp
nop
hlt
fstp
sub
stos
ficoml
out
loope
or
mov
loope
fxtract
mov
scas
adcl
inc
test
cmc
sub
mov
push
ret
mov
inc
movsb
pushf
in
mov
mov
lock
cmovbe
inc
inc
add
stos
xor
fs
lea
mov
inc
add
push
pop
fcmove
das
cli
add
cmp
test
insb
push
add
mov
lret
jb
jae
jb
and
pop
pop
add
xor
pop
lcall
int
and
test
xchg
jg
xor
mov
inc
movsb
fistl
and
sub
mov
sahf
mov
call
push
mov
repz
lods
inc
and
hlt
pop
xchg
addl
jo
fs
sbb
xchg
sbb
mov
daa
js
sub
out
lods
push
fimuls
mov
in
bound
push
insl
out
aad
push
mov
bound
push
xor
and
ret
sub
mov
loopne
mov
jns
mov
imul
sub
bound
leave
in
push
shlb
inc
add
pusha
ret
addr16
dec
fisubl
mov
cmc
sbb
push
and
cmc
push
push
ljmp
pop
imul
fstpl
mov
in
popf
add
xor
test
sbb
rcrb
cli
ljmp
repz
fildll
or
pop
add
and
inc
dec
jmp
inc
and
das
xchg
cmp
adc
test
popf
sbb
std
push
mov
lods
ja
das
loop
xor
shr
mov
cmc
or
fdiv
insl
push
jge
mov
push
ljmp
movsl
add
adc
clc
jg
jecxz
or
sbb
mov
out
divb
pop
lods
or
push
aad
imul
adc
cmp
add
jge
mov
push
cmp
xor
xlat
adc
dec
push
mov
xchg
or
mov
or
adc
lcall
fmull
sub
add
out
mov
aaa
mov
fnstcw
mov
or
mov
outsb
adc
jle
mov
lret
dec
insb
mov
sti
push
dec
xor
dec
fidivrl
aam
out
pop
arpl
imul
sbb
sbb
in
jne
cmp
xor
ret
lret
dec
jl
jne
mov
outsl
pop
mov
inc
mov
addl
adc
imul
aam
or
add
stc
scas
cmp
je
stos
lcall
jb
ret
jge
sbb
xchg
xchg
adcl
cmp
ss
inc
mov
pushf
ljmp
pop
lsl
sahf
mov
inc
daa
and
in
adc
push
mov
pop
push
sarl
xor
push
jp
or
cld
mov
push
xorl
cli
loope
cmp
fmull
fucomi
popf
and
add
xchg
loop
jae
xchg
rcl
push
lcall
inc
idivl
xchg
jae
outsl
push
imul
and
push
dec
inc
inc
mov
in
jnp
or
xchg
and
sahf
push
dec
shlb
push
div
push
push
and
lock
mov
es
subl
xchg
cmc
push
cmp
shrb
repz
clc
test
scas
mov
nop
cmpsl
pop
xchg
jmp
je
xchg
mov
ljmp
fcomps
rcl
push
jmp
rorl
cmp
lret
test
xor
insl
jne
mov
roll
popa
imull
out
movsl
mov
daa
or
lret
mov
sti
sub
aad
mov
outsl
add
enter
aad
mov
inc
arpl
sbb
into
sbb
mov
lods
cli
mov
fistps
adc
xchg
mov
or
and
popf
or
mov
insl
dec
loop
mul
adc
and
in
or
add
jle
mov
sbb
insb
mov
sti
mov
xchg
sbb
jb
dec
mov
add
mov
sti
cmp
clc
mov
je
fsub
xchg
add
movsl
dec
jb
cmpb
pop
xor
fsubrl
addr16
sub
jns
pop
pop
stos
dec
push
push
add
xchg
jmp
das
cmc
aaa
push
sub
iret
xchg
xchg
inc
inc
dec
ss
out
fistpl
out
mov
leave
paddb
jns
push
inc
xchg
sbb
xor
inc
ds
mov
ret
xchg
mov
xchg
push
and
insb
test
icebp
cmpsl
mov
add
ss
je,pt
arpl
js
xor
jl
leave
inc
orl
bound
jmp
sub
jb
mov
leave
hlt
adc
shlb
pop
or
pusha
inc
sbb
and
fwait
adc
jno
fs
lds
les
inc
pop
rolb
cwtl
cmpsb
testb
fidivl
pusha
or
adc
or
push
pop
xchg
sub
movsl
inc
repnz
dec
bound
pop
mov
insb
inc
push
inc
pop
cltd
stos
adc
lods
push
in
pop
fisubl
lret
fldcw
sbb
lock
dec
loop
arpl
cmp
sar
lret
shl
or
stc
jle
mov
jo
dec
daa
pop
adc
push
in
out
test
jno
lret
aam
dec
push
scas
jp
push
mov
scas
cmpsl
idivl
icebp
cmp
dec
cmpsb
fwait
loopne
add
pop
mov
jnp
inc
add
push
mov
lods
add
insl
fldt
inc
sub
jge
mov
jg
mov
ljmp
inc
shll
icebp
inc
fwait
arpl
fwait
loop
rol
leave
popa
lock
imul
xchg
sti
outsl
xchg
aaa
ss
adc
push
clc
dec
push
stc
inc
cmc
fsts
decb
out
lret
jae
ss
cmp
andl
aaa
push
insl
push
std
mov
dec
sbb
lahf
xchg
daa
aas
aad
push
ja
call
jecxz
idiv
loopne
dec
and
es
gs
inc
mov
out
push
push
jmp
ja
outsl
loop
inc
stos
add
repz
inc
xlat
mov
xchg
fidivrl
and
popa
lret
lea
std
add
xor
sbb
xchg
dec
xor
mov
dec
lock
pop
stc
inc
cmp
mov
test
mov
das
pop
sub
xor
mov
ds
pop
xor
lret
dec
in
insb
cmp
repnz
fisubrl
add
mov
lods
aaa
subb
jp
js
mov
push
je
pop
roll
jns
mov
adc
lret
or
adc
loope
mov
iret
bound
addr16
xchg
cmc
and
jo
lahf
cmp
ljmp
loopne
push
aas
and
xlat
lcall
push
add
push
jg
xchg
lcall
push
push
loopne
in
repnz
jo
iret
ja
int3
daa
pop
cmp
dec
jb
gs
mov
xor
test
leave
mov
out
outsl
inc
das
mov
inc
jmp
xchg
adc
and
lret
mov
pushf
add
mov
fwait
dec
scas
dec
daa
jne
mov
xor
in
lea
mov
ret
les
je
sbb
popa
js
or
sub
aad
mov
xchg
sub
adc
out
push
pusha
mov
rcrb
dec
imul
sti
push
sbb
fwait
iret
test
mov
fcmovnbe
cwtl
sahf
loope
pop
push
jo
mov
adc
adc
add
popf
pop
mov
xchg
loop
leave
mov
getsec
std
outsb
sarb
and
ljmp
imul
adc
mov
lret
jge
mov
mov
add
pop
jg
pop
mov
pop
sub
xchg
in
push
pop
btc
or
pop
mov
adc
pop
xor
pop
sub
cmp
sub
stc
pop
cli
cs
aas
lea
aam
and
pop
out
loope
iret
xchg
pop
inc
inc
add
push
jns
ffreep
sub
push
push
xor
mov
adc
push
data16
int3
pop
cmp
adc
cmp
sti
mov
mov
aaa
mov
mov
outsl
lods
cmpsl
mov
test
sub
inc
ss
iret
daa
lret
bound
int3
xor
into
popf
insb
dec
lods
lcall
add
push
cmp
pop
push
icebp
andb
mov
dec
xchg
push
or
out
push
sbb
pop
xorl
movsl
push
fists
fwait
mov
test
fimuls
aad
outsb
lods
push
int3
add
add
lahf
movsl
mov
lock
insb
mov
xchg
stos
cltd
fimull
xor
lahf
cwtl
pusha
sub
cmc
mov
xor
xchg
cmpsb
movntps
aaa
insb
lcall
mov
ret
push
mov
xchg
lea
hlt
add
pusha
adc
imul
mov
fcoms
fs
xor
aad
push
xor
and
lds
clc
pop
shll
mov
in
and
fistl
xor
push
movsl
dec
imul
xchg
rcrl
cmc
push
inc
sbbb
xor
add
sub
push
aaa
inc
push
in
sub
int
mov
jmp
jge
inc
lods
pop
jmp
mov
adc
data16
loopne
in
push
dec
out
sub
ret
popa
loope
cwtl
pop
xchg
leave
lods
or
adc
pop
xchg
add
jbe
loop
lcall
jp
enter
inc
sbb
in
leave
mov
cld
ficoms
iret
mov
inc
leave
mov
xchg
jno
mov
mov
push
lret
adc
fiaddl
sahf
enter
or
dec
mov
notl
mov
xor
into
fldcw
jmp
cli
aas
stc
test
lret
mov
cmpsl
lods
fmuls
repnz
sbb
or
mov
sbb
jge
arpl
testl
and
es
adc
add
cmpsb
jg
mov
shlb
sub
dec
push
push
enter
inc
aam
jecxz
incb
push
loop
mov
out
push
sub
add
push
gs
inc
adcb
xchg
cmp
movb
pop
test
cmp
stos
jb
stos
dec
mov
scas
fbstp
mov
xchg
cmp
aas
gs
fstl
je
adc
scas
mov
adc
testl
testl
dec
mov
lods
aad
mov
jg
aaa
dec
add
sbb
push
jl
push
mov
mov
mov
xchg
xchg
aad
cmp
mov
fsubr
adc
rorb
mov
xor
enter
add
sarb
cli
test
fnsave
dec
or
xor
rcrb
call
out
and
leave
push
stos
andb
sub
mov
push
push
fnstcw
mov
rclb
inc
loop
push
jbe
pop
xor
push
and
out
inc
inc
into
jb
repnz
stos
incb
addr16
dec
xchg
insl
lahf
imul
mov
mov
int
and
sub
outsb
adc
jae
jo
xchg
movsb
mov
jmp
mov
test
cmp
or
rol
sti
cmp
int3
clc
xchg
sub
fstpt
mov
sub
loope
xchg
jo
clc
mov
sub
es
or
cmp
inc
pop
sbb
in
leave
enter
fcom
jno
cmpsl
jnp
inc
data16
xchg
jmp
cmp
in
adc
pop
mov
daa
mov
imul
pop
mov
and
jae
or
xor
mov
cmp
js
out
pop
jne
pushf
dec
inc
rorb
mov
out
lock
sub
sub
je
imul
mov
mov
orl
inc
mov
fs
rcl
loope
mov
adc
leave
cs
and
xchg
cmpsb
pop
addb
aaa
and
xchg
pop
dec
sbbl
cld
add
je
sbb
mov
inc
movsl
mov
sub
fldln2
repnz
pop
and
cmpsl
or
bound
mov
ret
fisubrs
pop
shr
fiaddl
test
mov
xor
shlb
les
out
dec
cmc
inc
lret
xchg
adc
mov
clc
cwtl
into
insb
mov
jnp
pushf
pop
addr16
mov
adcb
aam
into
fisubl
aam
pop
insb
mov
dec
arpl
inc
enter
add
mov
lret
xchg
out
clc
pushf
mov
inc
push
in
xchg
mov
lods
inc
mov
leave
imul
mov
sti
test
push
push
cmp
popa
sbb
in
mov
sub
rcrl
sub
mov
lea
push
push
push
mov
push
rcll
adc
fbstp
hlt
ds
out
dec
mov
add
data16
inc
add
ret
addr16
aas
idiv
fs
lahf
rorl
cmc
test
adc
jle
jae
jnp
add
test
jge
ds
dec
loop
enter
aad
in
rorb
xchg
jecxz
int3
or
pop
xlat
jae
sbb
lds
mov
cmp
movsl
std
inc
in
inc
sbb
iret
mov
es
out
rorb
jl
pop
mov
mov
cmp
rcrb
dec
jp
mov
xchg
mov
in
in
jge
mov
loope
aas
push
leave
filds
addb
shlb
mov
or
jle
xchg
aaa
and
xchg
andl
dec
push
lret
jge
lds
and
inc
sub
dec
cltd
xchg
negb
adc
inc
mov
push
lods
jecxz
mov
popa
call
fistps
push
ja
js
fwait
lcall
mov
cli
sbb
mov
fadd
outsb
ficoms
add
loopne
pop
out
mov
test
daa
sbb
adc
jecxz
jo
cmc
sbb
fiaddl
or
jb
push
je
inc
cmp
and
push
pop
icebp
mov
scas
adc
fs
cmpsb
adc
pop
cld
je
icebp
out
push
aam
outsl
in
pop
inc
les
mov
xlat
icebp
mov
xchg
rolb
pop
shlb
jb
cmpb
repnz
xchg
and
sub
push
orl
dec
rcr
mov
iret
arpl
mov
mov
push
enter
mov
jge
or
sahf
test
insl
push
jmp
mov
dec
sub
outsl
aas
leave
mov
icebp
fcomps
cld
out
lock
sahf
fcmovnu
ficomps
pushl
lods
jecxz
out
divl
push
or
pop
fisubl
push
gs
lret
jmp
jl
push
and
scas
sbb
out
mov
ss
push
je
popf
jge
pop
mov
xchg
xor
popf
and
dec
es
call
cmp
insb
pop
or
lcall
mov
or
outsb
pusha
mov
push
scas
cmp
push
mov
cmpsl
scas
cwtl
and
mov
iret
cmpsb
mov
lds
push
ljmp
ljmp
or
or
gs
and
in
cmpsl
movsl
fwait
mov
ljmp
rolb
adcl
or
adc
add
mov
ljmp
imul
out
iret
inc
or
sahf
mov
cmpsb
mov
aaa
dec
out
sub
adc
insb
dec
adc
sub
stos
fidivrs
or
iret
stc
aam
adcb
sarb
mov
lods
in
dec
sahf
sbb
ljmp
xor
es
jg
jb
mov
fidivs
fdivrl
and
pop
mov
xor
dec
les
dec
adc
mov
in
inc
loope
inc
jecxz
sarb
in
outsl
in
repz
xor
mov
inc
cmp
sub
sbb
sahf
mov
mov
or
out
pop
out
aad
pop
mov
mov
mov
jge
pop
xchg
nop
sbb
mov
ret
jge
daa
sar
or
popf
xor
or
loope
push
mov
les
out
icebp
mov
xor
fwait
mov
lds
filds
in
sbb
cmp
into
dec
pushf
mov
in
mov
sbb
add
mov
cmp
jmp
cmp
neg
adc
mov
mov
mov
bound
mov
push
test
cmp
lock
or
cli
aas
pop
dec
sbb
push
out
mov
movb
stc
jmp
call
adc
push
enter
movsb
cmp
xchg
push
mov
leave
in
sbb
in
loopne
xlat
jp
push
xor
nop
insl
jno
test
test
push
push
mov
mov
loope
sub
mov
inc
pop
xorps
fst
mov
fidivrl
jl
popa
sub
mov
cmpsb
or
push
out
and
leave
test
dec
bound
stos
out
mov
loop
add
dec
shrl
mov
jmp
cli
das
les
mov
cmp
pop
das
pusha
dec
cmc
lods
stos
shr
xor
xor
mov
dec
cmpsb
cwtl
test
and
cltd
push
dec
cs
adc
mov
mov
or
rorb
push
jp
das
dec
and
mov
cmp
push
lret
dec
cmp
mov
mov
jae
add
inc
icebp
inc
subl
out
push
cmp
hlt
cmpsb
dec
or
iret
test
out
xchg
push
push
xor
sub
xlat
sbb
jb
ds
cmc
xor
arpl
push
cmp
cmp
mov
pop
enter
mov
inc
sahf
or
push
or
xlat
es
or
dec
popf
lret
in
push
sbb
push
rcrl
mov
or
hlt
mov
jge
stos
jg
sbb
scas
xchg
fmuls
popl
popa
cli
fisubrs
popa
sub
push
sbb
aad
lea
adcb
ljmp
xor
mov
fcoms
sbb
daa
cli
mov
inc
xor
mov
sub
inc
cmpsl
pop
xchg
rol
test
xchg
insb
sbb
and
mov
push
dec
mov
gs
sbb
jge
leave
rclb
outsl
clc
mov
xchg
jns
mov
ds
mov
push
xchg
xchg
in
sbb
in
pop
in
adc
data16
data16
sub
adc
sti
mov
cld
imul
mov
mov
frstor
xchg
sub
mov
lahf
vaddpd
popa
les
jbe
lret
dec
cmp
lahf
inc
arpl
repz
sbb
test
out
test
mov
scas
sbb
add
test
mov
cld
jae
test
push
xchg
adc
jo
pusha
and
in
cld
fistpl
adc
adc
movsl
jo
loopne
test
jge
outsb
sbb
mov
cmp
mov
icebp
and
imul
aaa
push
jge
das
push
xor
lea
xor
loope
push
rcrb
enter
lret
pusha
dec
test
push
insl
jecxz
inc
sbb
imul
sbb
leave
jge
dec
jmp
cmp
mov
int
fnstsw
or
cmp
jge
dec
jmp
cmp
mov
dec
imul
sbb
leave
jge
dec
jmp
cmp
mov
int
fnstsw
or
stc
insl
leave
jge
out
pop
mov
dec
data16
insl
inc
pushl
sahf
fildll
sarb
push
outsl
push
pop
cs
ds
dec
sub
jle
mov
sahf
fildll
scas
push
lahf
out
outsl
ds
cs
ds
and
pop
pop
cs
sbb
sahf
movl
mov
xchg
out
rorl
jno
dec
aas
sbb
inc
sbb
xchg
mov
jmp
stc
scas
push
pop
repnz
es
or
pop
jle
mov
rol
sub
and
adc
xchg
iret
scas
and
scas
sbb
inc
mov
outsl
dec
aas
popf
pop
outsl
lock
mov
adc
dec
jne
adcl
aas
outsb
rcrl
scas
movd
dec
decl
inc
into
scas
mov
adc
outsb
dec
push
mov
rorb
xchg
xchg
sub
push
std
das
cmp
mov
shl
jg
jg
test
ds
sbb
pop
adcl
mov
lods
pop
insb
scas
xchg
orb
jbe
rcrl
es
jl
pop
outsb
psubd
mov
outsb
fildll
iret
mov
into
mov
jle
mov
inc
ds
jbe
bound
cmpsb
add
fmull
nop
int3
mov
fwait
jg
add
pop
sub
and
insl
das
bound
nop
lret
mov
mov
mov
in
lahf
sbb
cmp
or
dec
push
pop
aas
push
inc
adc
imul
cmpsl
stos
scas
ficomps
push
outsl
push
pop
cs
ds
dec
das
pop
pop
outsb
movd
mov
sahf
fildll
scas
ficomps
push
outsl
push
pop
cs
ds
dec
das
pop
pop
outsb
movd
mov
dec
pusha
or
int
popf
mov
mov
into
das
jbe
dec
push
xchg
les
dec
push
cli
popa
mov
dec
fincstp
cltd
xor
aad
lods
mov
aam
out
jp
pushf
push
ja
mov
jnp
mov
or
or
mov
jnp
test
pop
push
xchg
dec
shlb
cmpb
and
mov
mov
lret
insb
xor
pop
stos
mov
shl
cs
mov
rclb
mov
xor
ret
inc
pop
mov
movsb
pushf
gs
sti
aaa
fnstcw
in
add
mov
iret
sbb
cwtl
push
rorl
sti
mov
mov
and
push
mov
test
jae
mov
xchg
adc
mov
mov
add
sbb
clc
iret
fistpll
jl
lods
mov
xchg
outsl
int3
push
idivb
add
jmp
pop
sbb
pop
loope
mov
mov
dec
in
mov
aad
sbb
fs
call
push
jno
or
nop
fcoms
sub
jo
insl
push
dec
arpl
fs
inc
fimuls
sti
push
lods
shl
add
push
outsb
mov
push
sub
sbb
fucomi
push
je
mov
mov
cwtl
lds
add
mov
xor
and
shl
data16
dec
mov
rcrb
xor
pop
adc
sbbb
jecxz
xchg
dec
dec
sub
inc
mov
mov
or
outsb
or
sub
jmp
jno
jne
daa
dec
and
dec
mov
mov
out
cwtl
into
mov
jo
scas
fdivr
inc
lahf
jb
and
shrl
lcall
sub
and
dec
pop
pop
push
cmpsb
popa
mov
imull
mov
rcl
enter
into
lret
loop
dec
fiadds
jmp
jg
mov
fwait
incl
adc
adc
dec
mov
jl
scas
rep
ss
jae
dec
js
mov
inc
push
int3
out
jmp
enter
xor
or
jb
cmpsb
sbb
lret
pop
sub
lahf
pop
rorb
faddl
sbb
loope
fdivl
push
mov
pop
aas
cmp
test
adc
inc
push
movsb
fistl
sbb
sbbb
daa
sbb
mov
sbb
std
test
or
scas
sub
mov
mov
fwait
out
test
mov
mov
jp
roll
jne
aam
push
push
inc
lret
fldt
jo
loope
mov
jne
and
dec
call
xor
push
or
das
or
dec
jno
xchg
adc
inc
mov
xor
mov
test
in
lret
es
sub
lret
xchg
add
stc
stos
sbbl
inc
mov
lret
and
fisttps
pop
sbb
adc
cmc
inc
xchg
add
jno
aas
test
mov
sub
ss
cmp
xchg
mov
stos
xor
push
into
out
mov
ret
scas
ja
hlt
inc
xchg
push
das
int
stos
mov
jno
les
dec
xchg
and
clc
std
cmp
and
pop
repz
pop
mov
push
xlat
inc
cltd
inc
icebp
pop
xor
je
arpl
jle
cltd
cmpsb
test
roll
add
lock
or
adc
addb
xor
jp
mov
outsb
push
xchg
in
sbb
das
mov
mov
mov
cmp
inc
les
inc
ffreep
cmp
arpl
movsb
into
adc
int3
ror
sahf
imul
mov
mov
mov
mov
shll
mov
pop
adc
jle
push
nop
clc
sub
push
jo
inc
sbb
add
xchg
push
cwtl
jne
fldt
cmp
in
add
repnz
stos
rcll
mov
cmp
mov
dec
mov
mov
mov
xor
push
aas
xchg
xor
push
dec
sub
jb
cmp
lods
call
ffreep
inc
lds
xchg
pop
jns
inc
sub
xor
push
or
subb
jae
mov
inc
sti
pop
iret
inc
in
fisubrs
cmp
or
cmp
lods
fcmovnu
test
ja
mov
mov
mov
push
das
sbb
pushf
orb
xchg
mov
test
nop
sti
sbb
jbe
aas
int
fsubl
mov
icebp
dec
or
dec
fcompl
cmp
or
insb
mov
lahf
and
lcall
adc
mov
leave
mov
scas
std
leave
stc
push
mul
pop
leave
lret
ljmp
cmp
sbb
hlt
sbb
push
call
in
mov
int
testl
out
or
adc
sbb
add
sahf
aam
push
xor
in
jge
mov
xlat
pop
ret
arpl
movsl
lea
arpl
lods
loopne
mov
and
cmp
add
push
shrl
rcr
xor
and
iret
mov
movsb
aad
dec
in
flds
inc
es
sub
lcall
mov
jns
fsubrs
aas
sbb
in
xchg
ja
lods
or
out
cmp
std
jp
test
outsb
push
adc
pushf
cmp
cmp
lods
adc
les
movsl
jmp
sbb
push
mov
lock
into
sbb
mov
cmpsl
je
jno
fcomip
xor
pushf
cmpsb
xchg
mov
dec
sub
sti
cmc
mov
jp
stos
sahf
jle
jp
cmp
jb
mov
xchg
adc
mov
cmpb
push
lods
xchg
mov
imul
cmpsb
imul
pop
stos
mov
insl
stos
mov
xor
lods
repz
jg
mov
rcrb
bound
ret
fwait
ret
fbld
mov
xchg
and
div
ja
popf
lods
roll
jmp
sub
mov
inc
lea
inc
mov
dec
movsb
fisubs
movsl
call
add
pop
xor
pop
inc
lock
or
leave
and
divb
aad
hlt
add
cmp
jb
mov
xorl
xor
mov
sbb
jo
pop
or
dec
dec
adc
fidivrs
jp
add
mov
mov
movsb
dec
xor
movsl
addl
fbstp
jg
adc
xor
push
mov
in
jb
sti
push
and
ret
cmpsb
lret
or
xor
xchg
movsl
mov
enter
lcall
mov
jbe
arpl
xor
add
add
adc
add
xchg
lea
inc
or
sub
xor
and
xchg
out
inc
int3
pop
mov
pop
mov
aaa
negb
lds
jbe
pop
test
incb
pop
jnp
cmp
insb
fidivrs
sarb
add
cli
lahf
adc
jle
push
dec
in
and
shrl
stos
cmp
clc
ja
ret
jbe
xchg
adc
shlb
pushf
xchg
aad
inc
jne
rcrl
inc
sbb
pop
push
testb
mov
mov
popf
lods
cli
outsb
add
iret
or
cld
sbb
sbb
adcl
mov
mov
or
dec
inc
bnd
jmp
pushf
fstl
pop
aaa
rclb
xor
mov
sub
test
add
dec
movl
inc
imulb
push
sbb
imul
ljmp
sarb
sbb
adc
xor
jno
lahf
push
ss
pop
mov
or
push
xchg
cmc
sub
push
test
mov
cmc
cmpsl
call
cmp
sub
or
mov
push
int3
sbb
cmp
inc
pop
pop
push
stc
inc
sub
mov
test
ds
xlat
outsb
mov
jge
add
sub
or
pop
test
push
sbb
lcall
inc
xor
mull
push
cmp
gs
es
sbb
data16
out
fwait
sbb
lods
or
push
loop
rcrb
enter
adc
dec
jg
pop
cmpsl
mov
shl
fwait
pop
pushf
xor
es
shl
pop
das
push
decb
add
sbb
test
cwtl
sbb
addr16
lds
stos
push
jb
sbb
and
pop
jo
test
je
or
pusha
and
shlb
pop
mov
lahf
xchg
rorl
loope
cmp
xor
in
out
fisubrl
es
nop
in
adc
into
movsl
sub
dec
pop
xchg
orl
lods
adc
gs
adc
pop
imul
push
mov
daa
adc
pop
stc
mov
out
mov
and
je
mov
mov
pusha
fidivl
loope
cld
fwait
movsb
stc
xchg
in
in
arpl
fld1
sbb
sbb
mov
lahf
pushf
lea
xchg
daa
mov
inc
je
inc
and
cmpsb
inc
arpl
mov
in
ret
and
in
sbb
pop
hlt
enter
mov
repz
or
adc
fistpll
fiaddl
adc
loope
cli
adc
cltd
mov
or
popf
lahf
movsl
lret
add
adc
stos
sti
xchg
nop
xchg
shll
js
sub
out
rcll
cmpb
xchg
sarl
rclb
push
movsb
leave
adc
xlat
mov
out
mov
cld
adc
addr16
adc
mov
add
or
jmp
cli
test
dec
insb
fwait
pop
lds
out
sbb
cmp
lcall
hlt
test
xor
iret
xchg
dec
pop
test
sub
pop
or
push
fisttps
pop
xchg
ljmp
test
mov
xchg
jmp
andb
cmp
or
jne
repnz
mov
or
push
movsb
add
push
cmpsb
and
inc
and
adc
xor
mov
push
movsl
mov
push
cmp
pop
clc
sbb
push
mov
sub
add
lods
cmpsl
stos
loope
jne
movsb
movsl
dec
in
mov
mov
icebp
cmp
cmp
das
push
xor
xchg
scas
shlb
xchg
addr16
push
enter
out
test
sub
mov
movsb
dec
push
cltd
xchg
adcb
mov
loop
xor
repnz
sbb
incb
add
add
jge
lods
call
fisubrs
test
daa
fsub
sub
jne
test
jne
pop
lret
and
mov
mov
lret
add
rcrl
push
lret
rcr
inc
stos
add
push
mov
ud2
xchg
into
stos
cmc
ss
xchg
imul
adc
xchg
in
stos
mov
xchg
add
xchg
mov
xchg
and
sbb
lea
add
ds
mov
sub
jne
mov
push
imulb
mov
insl
mov
shll
in
fdivl
stos
dec
pusha
fisttpll
notl
ljmp
ja
jle
xor
sbb
mov
mov
mov
pushf
mov
sbb
sbb
cmpsl
mov
iret
clc
shr
aas
lahf
xor
mov
mov
mov
pop
jg
mov
fs
pop
push
push
push
movsl
xchg
cmp
push
push
pop
add
lods
sbb
sub
rorl
lea
cmc
sbb
pop
or
adc
into
mov
insl
cmc
fsubl
jecxz
xchg
jmp
pop
lret
push
mov
fbstp
lahf
int3
pushf
pusha
push
rep
lahf
mov
xlat
rorl
out
xchg
xor
insl
inc
addr16
outsl
xchg
fadds
inc
nop
fidivrl
push
adc
jge
rcr
inc
cmp
shl
ret
lods
xor
xchg
es
je
mov
pop
mov
xor
or
fdivrs
sub
data16
or
jg
cwtl
test
roll
xor
sti
out
cmp
xchg
cmp
aad
loopne
pusha
movsl
lds
repnz
cld
mov
iret
xor
enter
fsubl
aad
pop
cmp
out
data16
adc
loop
mov
repz
pusha
or
adc
cmpsb
push
add
loope
outsb
mov
push
inc
in
push
cli
add
xchg
loopne
push
enter
cmc
sbb
testl
push
lds
lahf
add
push
push
cmpsl
mov
aam
dec
xchg
cmp
xchg
push
in
jno
enter
scas
cmp
ja
mov
daa
stos
shll
add
orl
call
roll
stos
pop
divl
repz
mov
fwait
ror
and
fsubr
lcall
loopne
mov
pusha
in
xor
loope
cs
insl
jne
jecxz
out
pop
das
out
adc
nop
fnsave
sti
push
xlat
leave
bound
mov
test
cmc
mov
divb
mov
repnz
lcall
lahf
repz
mov
lcall
cld
test
ret
aam
in
imul
shr
sbb
or
ljmp
jne
and
add
mov
aaa
xor
jae
inc
outsb
or
sbb
push
or
out
in
jns
pop
xlat
mov
or
dec
movsl
mov
int3
in
stos
pop
pop
js
les
mov
mov
cmp
lods
cli
das
je
js
and
xlat
jnp
pop
into
dec
xchg
scas
mov
in
adc
fdivrl
push
mov
stc
iret
fstpl
mov
sbb
push
lcall
popf
xor
jnp
bound
insb
fstl
and
adc
test
stos
test
xor
out
push
cltd
and
ljmp
or
add
insb
adc
mov
loopne
aam
icebp
jo
es
das
inc
jae
pop
mov
adc
dec
adc
jl
add
arpl
push
rorl
add
lcall
xchg
or
insb
inc
xchg
in
popf
mov
mov
cli
bound
push
xchg
inc
inc
cmpsl
fimuls
mov
dec
shl
nop
or
mov
pop
aas
or
and
into
nop
shlb
pop
xor
and
pop
leave
mov
jns
mov
mov
lods
pop
jno
sbb
xchg
cmp
mov
xor
push
data16
push
fmuls
stos
or
sbb
sahf
adc
arpl
pop
pop
imull
lds
dec
xchg
pusha
push
pop
stc
jecxz
in
pop
xchg
adc
sub
movsb
mov
cmp
jp
push
pusha
popa
iret
movsb
mov
jg
cltd
jb
pop
push
in
jle
jle
scas
mov
cs
pop
push
rcll
in
or
pushf
and
pop
fs
and
xor
cmp
adc
lock
ret
pop
daa
sub
lret
repz
ja
bound
loope
mov
testl
mov
pop
dec
push
push
insb
mov
fistpll
jp
jmp
dec
ljmp
enter
insb
rcll
mov
push
cmp
cmp
test
subl
gs
insl
fdivl
cmp
sub
or
adc
sub
push
sbb
ss
mov
ficompl
js
adc
int
js
jno
mov
sbbb
xor
jge
ss
repz
sbb
icebp
inc
fwait
movsb
push
nop
mov
pop
fistl
jl
xchg
mov
subl
cpuid
lods
imul
cmp
lret
mov
xorb
mov
sbb
sbb
aas
or
inc
xchg
out
je
inc
bound
out
jmp
push
jl
cld
int3
popa
in
ficompl
mov
cmp
sub
cmova
sbb
icebp
sub
cmp
fsub
inc
out
nop
cmp
xor
adc
sbb
loopne
push
lret
mov
call
xchg
cmp
push
adc
jae
inc
cmp
and
shrl
dec
aas
sub
mov
jns
inc
arpl
or
ret
xor
mov
out
icebp
xchg
int3
mov
pop
push
push
and
mov
mov
aam
mov
inc
insb
sti
loopne
sbb
or
les
lea
sub
call
xchg
test
add
stc
add
inc
add
jno
pushf
dec
cmp
add
xchg
cli
ss
in
lret
or
lea
enter
test
cmpl
sahf
lods
xor
cmc
int3
push
cmp
inc
cmp
cmc
fiadds
mov
xor
mov
jb
lods
add
dec
push
or
mov
pop
dec
insb
aas
push
fisttpll
ljmp
ret
xchg
xchg
push
fnsave
pop
sub
movsb
mov
or
rcll
in
dec
pop
sti
int
insb
cmp
in
aad
sbb
ljmp
or
loopne
mov
addb
into
pushf
jbe
jns
sbb
mov
push
testl
cld
mov
scas
dec
scas
int3
lods
mov
mov
gs
xor
in
add
xor
sub
push
inc
or
jo
cltd
incl
pop
xchg
jno
mov
loope
sub
and
fnstcw
js
jno
out
test
movsl
cli
push
sub
mov
outsl
repz
int
out
testl
xchg
sbb
xchg
out
fidivl
sub
sbb
insl
lcall
call
mov
pop
jecxz
bound
xchg
sti
in
pop
or
add
push
sub
fildl
outsb
outsl
jp
mov
ret
in
xor
js
and
lret
imul
jmp
dec
or
pop
nop
mov
leave
das
hlt
lcall
repz
scas
outsb
jmp
inc
mov
fnstenv
fiadds
scas
or
iret
out
inc
dec
in
push
push
add
dec
fsub
in
jo
jg
xor
and
pop
cmp
ret
cmp
push
not
or
xchg
mov
outsl
mov
adc
mov
les
stc
push
pusha
or
dec
stos
cmp
es
sbb
in
inc
xor
fstpl
mov
push
mov
rclb
jbe
ss
add
cmp
bnd
or
dec
lcall
idivb
mov
xor
hlt
inc
bnd
ja
mov
mov
fmul
dec
jmp
cld
ja
ret
out
pop
arpl
faddl
test
icebp
mov
cmc
xor
sbb
popf
dec
ficompl
lret
push
mov
mov
adc
mov
fcoml
lcall
inc
fsubs
pop
sbb
into
es
mov
out
sbb
fwait
lcall
mov
cmc
dec
popa
out
and
and
cmp
push
mov
dec
dec
inc
mov
leave
cmp
mov
inc
xchg
repnz
daa
leave
xchg
hlt
cltd
mov
jecxz
mov
das
sub
in
popa
faddl
mov
inc
xchg
jae
insl
je
aam
ja
and
mov
mov
xlat
and
or
hlt
mov
sahf
cmp
int
fs
and
cmpb
xlat
push
outsb
adc
inc
mov
push
in
aad
aas
cmp
lods
insb
fcoml
popa
sti
aam
add
pusha
xlat
jnp
test
ja
inc
ds
sbb
loope
test
pop
clc
mov
cmp
push
mov
sbb
fld
es
enter
repnz
sub
xchg
jne
mov
xchg
outsl
xor
enter
mov
mov
sub
loopne
rclb
mov
xchg
call
shrb
mov
sbb
int
adc
das
andl
push
dec
mov
pop
fidivs
add
sbb
add
shl
enter
xor
gs
test
imul
jle
stos
xor
add
iret
movlps
sbb
out
repz
mov
add
mov
pop
cmp
pop
push
shlb
rclb
testb
dec
mov
repz
add
fdivrl
test
shr
rclb
mov
xchg
lret
sbb
pop
mov
ljmp
in
andl
mov
ret
inc
jp
std
insl
das
jo
iret
pop
icebp
push
xlat
fidivrs
hlt
fildl
clc
mov
orb
add
pop
jg
mov
stc
pop
pop
jle
cmp
xchg
xchg
pop
mov
insl
loope
jl
push
cmp
fnstcw
pop
inc
push
in
inc
jnp
js
lcall
mov
sub
sub
mov
inc
fstpt
jns
leave
dec
es
incb
sub
push
add
repnz
sbb
cmp
sub
imul
xchg
std
out
dec
stos
jecxz
mov
shr
dec
enter
inc
dec
in
repnz
mov
aad
iret
mov
lahf
out
jg
outsl
push
pop
cs
ds
dec
das
pop
pop
outsb
movd
mov
sahf
fildll
scas
ficomps
push
outsl
push
pop
cs
ds
dec
das
pop
pop
outsb
movd
mov
iret
mov
lahf
out
jg
outsl
push
pop
cs
ds
dec
cs
pop
dec
or
sahf
fisubrs
scas
ficomps
outsb
paddd
cs
dec
dec
cmpsl
mov
pop
xchg
dec
cmpb
mov
sbb
pop
loop
pop
sub
stc
xor
and
jb
bound
mov
mov
cmp
sub
cwtl
xor
and
mov
jb
xchg
mov
mov
daa
repnz
mov
inc
mov
push
sti
adc
aaa
loope
lret
jns
add
jecxz
add
icebp
cli
ja
sti
fs
fcoml
mov
stc
lods
cmp
stc
out
in
daa
aaa
rorb
call
jl
adc
mov
xchg
or
or
jg
rcr
dec
inc
xor
sbb
in
imul
mov
inc
jno
xchg
fiaddl
lcall
cwtl
sub
in
leave
std
jge
pop
ret
mov
out
rcrb
hlt
das
in
orl
in
dec
dec
stc
int
faddl
mov
jb
pushf
cmpsb
pop
aam
js
xchg
loop
shl
or
cli
sbb
ljmp
aaa
adc
ficoml
mov
xchg
pop
cmpb
mov
cmp
loop
adc
xor
and
push
addl
test
ret
or
mov
stos
dec
mov
mov
imul
jmp
out
rorb
int3
sub
imull
or
or
int3
fwait
jl
mov
popa
xchg
inc
loopne
out
shlb
or
sbb
cmp
dec
cld
or
cmp
sub
fsts
leave
add
xor
and
jb
bound
dec
cmpb
mov
cmp
sub
fsts
leave
add
xor
and
jb
bound
out
ljmp
loope
push
jge
mov
lcall
shlb
mov
data16
add
xchg
jnp
push
dec
xor
rolb
test
pop
mov
rclb
adc
cli
lret
jle
add
jp
rcrb
in
repz
test
fsubrs
xor
adc
es
sti
xchg
inc
mov
fimuls
mov
add
imul
xlat
sbb
in
and
cmp
iret
fsubl
mov
or
stc
stos
and
cli
pminub
lods
sbb
jno
mov
jmp
dec
xor
sub
lret
imul
dec
mov
pop
aas
push
sbb
pop
xchg
push
mov
jecxz
mov
shrb
mov
or
cmp
add
jge
jge
fdiv
loope
sub
mov
sub
mov
adc
fdivrl
mov
pushf
jae
pop
jg
rol
sti
xor
xchg
and
sti
sub
cmpb
mov
fdivl
sbb
les
clc
idivl
inc
cmpsl
sbb
out
enter
jge
push
jae
into
aam
xchg
dec
loope
cmp
inc
push
stos
inc
mov
das
ds
hlt
inc
pop
sub
mov
xor
push
lea
retw
or
jmp
call
inc
rcll
jecxz
fiaddl
test
xor
pop
xchg
in
xor
xchg
pop
cld
mov
jg
js
and
or
inc
leave
pop
mov
ffreep
push
mov
out
std
mov
pop
jmp
aaa
cmp
popa
inc
xlat
mov
jmp
add
push
int
and
xchg
jge
divb
fldt
out
jp
in
data16
sub
andl
cmpsl
inc
cwtl
jne
mov
xchg
cmpsb
mov
aaa
pop
cs
mov
cmpsl
sub
push
jae
subl
push
xlat
ret
cltd
loope
mov
lahf
sub
xchg
add
aas
jae
mov
out
xchg
shl
and
hlt
cltd
inc
dec
mov
insb
cmovge
ja
jne
not
push
cmp
outsl
ja
xor
or
or
jns
push
or
repz
or
sti
outsb
shl
dec
icebp
adc
leave
jle
nop
sbbl
jl
into
lret
jecxz
sbbb
fmull
xchg
pop
jno
jl
js
js
dec
inc
sbb
pop
push
arpl
mov
dec
add
fiadds
sbb
mov
pop
cmc
cli
in
push
mov
jg
xchg
jb
jmp
adc
inc
movsb
xor
lock
mov
cwtl
divps
pushf
subl
sub
imul
mov
das
push
mov
mov
pushl
nop
jge
aam
push
lea
push
aaa
xchg
ja
and
mov
fsubs
push
movb
pop
lcall
xor
or
cwtl
mov
sbb
sbb
je
cltd
clc
or
gs
sbb
sub
push
add
mov
jbe
aas
cmp
inc
mov
mov
arpl
movsb
test
iret
pushf
rcrl
in
bound
cwtl
outsb
call
add
mov
jno
inc
imul
jns
fwait
in
sar
add
mov
repz
inc
xchg
jle
mov
imul
fisubl
jne
int3
insl
pop
in
loope
sbb
jo
aam
sbb
cmp
test
pop
stos
dec
sub
outsl
xlat
idivl
jle
jb
ret
and
push
xor
add
jbe
dec
cmp
and
es
ljmp
shl
push
test
and
stc
dec
mov
aam
cli
fiadds
mov
lahf
adc
or
pop
negl
jle
jge
mov
sub
xor
in
mov
pop
iret
or
call
scas
ret
pop
xchg
sbb
pop
lahf
aad
adc
add
mov
xor
add
in
adc
and
into
mov
je
jmp
mov
or
fstl
push
std
shl
and
push
scas
ss
shrb
popa
adc
adc
cmp
scas
leave
adcb
test
cmp
bound
add
and
adc
bound
jnp
dec
sub
cs
pusha
mov
orl
movd
push
xchg
icebp
cmpsl
jecxz
dec
add
pushl
inc
lock
cmovge
sub
pop
mov
adcl
test
arpl
sub
mov
jne
jl
daa
dec
mov
outsb
xchg
xor
rcr
mov
xlat
call
sub
aaa
sub
test
sbb
dec
jle
imul
aaa
lds
add
shrl
or
ret
bound
xor
dec
mov
push
cmp
inc
fdivrp
es
addr16
test
push
int3
adc
pop
repz
xchg
pop
dec
push
jo
cmp
jg
jbe
jp
lret
daa
scas
mov
inc
or
arpl
jecxz
sub
incl
aas
ficoms
jecxz
cmpl
push
outsl
mov
pop
gs
je
push
lock
ljmp
mov
add
sub
inc
jbe
into
mov
jmp
je
adc
lret
sbb
adc
fidivl
int
xchg
sbb
hlt
mov
stc
push
add
and
das
stos
orl
fisttps
movsl
mov
aas
mov
inc
xchg
jp
lock
fiadds
imul
add
cli
mov
add
adc
std
test
nop
cli
and
push
and
pop
mov
cmc
rcpps
cmp
aaa
cmp
cmpsl
inc
or
mov
sub
sbb
mov
imul
inc
test
sub
mov
sub
jne
movsl
fisubrl
les
inc
sti
jb
lea
in
inc
call
and
mov
sti
mov
dec
sub
sbb
jno
sub
mov
add
scas
or
cmp
outsb
aaa
dec
insl
outsl
xor
dec
mov
jae
jecxz
jno
sarb
gs
shlb
pop
mov
mov
mov
xor
sub
lcall
push
lret
les
dec
dec
sbb
fmul
inc
push
les
ret
inc
push
cmp
shl
add
mov
push
sbb
xor
hlt
fs
in
dec
rclb
adc
loopne
adc
or
xorl
fdivrl
mov
int
jae
testl
int3
cmpsl
mov
rcll
test
cli
sub
mov
or
cmp
stos
pop
jge
push
cld
sahf
dec
xchg
mov
mov
aaa
mov
aaa
dec
fbld
sbbb
test
clts
cld
loopne
popa
test
pop
popa
pop
inc
jecxz,pt
lods
inc
add
call
cmpsb
push
outsl
call
mov
movsb
out
pop
sbb
push
adc
and
sbb
sahf
outsb
or
xchg
or
loopne
out
mov
jle
dec
fs
jns
sbb
or
outsb
mov
sub
jmp
cmp
push
fiadds
add
test
mov
pop
cli
cmpsl
shr
xor
arpl
or
and
mov
cmpsl
into
pop
push
jno
mov
movsl
fsub
xchg
push
mov
mov
jns
or
and
cmp
cmp
cmc
cmpsb
clc
xor
insl
setae
xlat
xchg
push
sbb
inc
fstl
cmp
cmpsl
xchg
xor
mov
std
sbb
cltd
sbb
outsb
int
push
xchg
ss
wrmsr
pop
pop
xor
dec
cmp
outsl
cmp
js
sbb
sub
jp
cwtl
lahf
shrl
cmp
adcb
or
push
jns
mov
test
pushf
inc
sub
subb
aam
int
pop
xor
add
adc
jnp
xor
mov
sbb
inc
ja
mov
jbe
pop
cmp
and
movsb
or
dec
test
pushl
mov
jbe
clc
cmp
push
idiv
andl
xchg
loope
lcall
loopne
ret
lea
push
arpl
out
pop
push
shrb
ds
js
inc
mov
add
aaa
repnz
pushl
pop
gs
filds
data16
outsb
add
arpl
test
mov
stos
clc
xchg
xor
inc
stos
dec
ds
sbb
aam
dec
mov
mov
fabs
in
pop
nop
lds
inc
cmpsl
or
pop
add
inc
or
imul
inc
mov
orb
pop
fsubs
sbb
inc
xor
jl
fisttps
lret
cmp
dec
bound
repz
jo
jae
inc
arpl
cmp
cmp
mov
sub
jg
sbb
cmpsl
xor
xor
and
mov
or
outsl
fimull
mov
mov
in
rcrl
xor
sti
out
mov
fbld
xchg
mov
out
fldcw
faddl
mov
cwtl
xchg
shrb
movl
shlb
push
add
ljmp
or
jl
mov
shrl
sub
mov
xchg
inc
hlt
mov
push
out
ss
adc
xchg
scas
pop
daa
ljmp
pusha
pop
or
xor
lahf
sbb
stc
enter
loop
insb
push
adc
xchg
xchg
pop
and
adc
pop
out
xchg
cmp
inc
xor
sub
jb
mov
fstl
and
in
je
pop
mov
xchg
idivl
ret
jne
dec
mov
and
mov
mov
xor
lahf
add
rcll
lods
addl
loopne
sbb
cmp
sbb
mov
icebp
xor
add
xor
mov
jb
clc
or
pop
pop
in
or
stos
mov
std
lcall
adc
pop
inc
popf
test
cltd
fwait
in
jo
jno
fbld
stc
out
shll
adc
inc
adc
filds
pop
clc
mov
mov
cmpsb
inc
outsb
fdivp
mov
outsb
pushf
push
push
inc
popa
mov
dec
pop
scas
lahf
push
test
or
mov
xor
lds
push
push
out
cmc
fmulp
xchg
pop
push
fdivl
mov
sbb
sbb
inc
push
pop
orl
adc
mov
jle
cmc
inc
loope
mov
dec
add
hlt
dec
push
in
pop
add
mov
inc
inc
push
arpl
sub
mov
push
jne
fsubr
inc
adcb
sub
xor
jge
xchg
jbe
pop
aad
lcall
insb
std
jo
jae
xchg
inc
out
mov
negb
jmp
and
adc
stos
xchg
sbb
push
int3
push
mov
mov
lds
xorps
pop
je
ja
pop
pop
jnp
push
push
xchg
std
push
pop
fs
ds
jl
out
dec
pop
pop
std
test
dec
fidivrs
sub
mov
add
mov
cmp
mov
lods
lock
js
je
dec
dec
pop
ds
roll
dec
cmpsl
push
mov
hlt
icebp
xor
std
adc
jp
add
andb
add
ficoms
push
pop
loop
push
ds
mov
scas
data16
std
out
mov
push
outsl
mov
call
hlt
jl
ljmp
cmp
mov
jbe
daa
xchg
or
hlt
mov
clc
std
jb
scas
push
jl
dec
into
insl
mov
add
in
mov
push
push
mov
rcrb
out
xchg
or
inc
mov
cmp
nop
mov
in
das
fcomps
in
sub
push
repnz
pushf
xchg
push
or
aad
popa
and
pop
mov
loopne
pop
iret
jmp
data16
pop
add
movl
imul
sub
jns
jecxz
push
call
lods
fnstsw
and
subl
push
inc
xchg
clc
mov
cmp
fisubs
jb
xor
jge
mov
sub
pop
data16
pop
inc
in
or
aaa
push
call
jns
sti
jnp
divl
mov
dec
xor
movsb
movsl
aad
pushf
sub
stos
jns
mov
in
lock
xchg
xor
xchg
mov
pop
sub
mov
mov
pop
jb
pop
cmp
mov
loope
fldenv
xchg
pop
loope
jb
cli
add
insl
push
test
cmc
and
sub
popa
daa
cmpsl
pop
pusha
mov
test
pop
xchg
shl
push
push
hlt
loopne
repnz
sub
sbb
push
sbb
mov
adc
cmpl
data16
call
cltd
mov
cmp
sub
in
add
sub
mov
sbb
rorl
push
or
add
das
sti
decb
cmp
jae
lds
pop
push
cltd
xchg
jno
lahf
sti
mov
imul
jl
dec
jp
aaa
test
mov
mov
icebp
das
fcmovb
roll
mov
pop
ficoms
arpl
jecxz
adc
lret
imul
jne
jns
jle
and
lds
sbb
adc
mov
sbb
lret
sahf
rorl
inc
movl
xchg
jl
jp
in
adc
add
fs
cmpsl
sub
shll
xchg
daa
xchg
xchg
sbb
dec
pop
push
inc
and
mov
mov
clc
dec
mov
sub
cmpb
mov
imul
scas
adc
fstpt
push
std
jecxz
aaa
call
xchg
dec
aas
jecxz
add
mov
mov
nop
sbb
jae
or
lds
inc
add
iret
inc
add
push
cmp
cmc
fidivl
cmpl
lods
xchg
or
or
mov
inc
add
ret
shll
int3
lea
adc
stos
or
or
paddq
mov
push
xlat
mov
sbb
cmp
gs
sub
jl
jo
jge
cmpsl
cwtl
cmp
cwtl
scas
pop
cltd
int3
pop
mov
and
cmpl
and
je
xchg
test
cmp
das
cmp
cmp
cmpsl
shrl
add
ficomps
mov
sbb
mov
sub
sbb
and
cmpsb
xor
inc
mov
ja
and
mov
jecxz
cli
ja
sbb
xor
out
ficoms
dec
stos
ljmp
subb
call
push
test
jmp
jo
popa
lcall
fidivrl
cltd
loope,pn
mov
xor
xor
in
push
add
movsl
lock
es
sbb
mov
or
inc
pop
jns
repz
add
testb
push
push
inc
mov
fidivrl
shrl
movb
adc
fnsave
js
inc
cmp
push
imul
addr16
xchg
and
out
xor
movsl
xchg
mov
into
dec
pop
cmpsl
dec
add
nop
lret
sbb
dec
fdivl
repnz
dec
test
ds
ds
dec
sbb
xor
inc
cli
xchg
mov
push
jg
rol
ja
cmpsl
scas
jae
call
xor
dec
int
pop
int
mov
lahf
sub
repz
and
idivb
outsb
jns
es
lahf
adc
leave
ret
insl
mov
subl
sub
sahf
icebp
sbb
cmp
out
xchg
dec
popf
imul
xchg
iret
stos
and
sub
jno
or
daa
pop
fnstenv
sub
xchg
dec
ret
inc
push
lds
push
arpl
mov
jb
lret
jb
pop
push
call
adc
mov
mov
push
xlat
xor
jb
lock
mov
test
mov
pop
inc
call
xlat
xchg
xor
sarl
xchg
test
push
sub
cs
in
shrb
cmpsl
ret
sbb
rorb
gs
inc
xor
ss
dec
jp
hlt
js
mov
jmp
add
xchg
mov
insb
adc
lret
dec
ss
pop
jecxz
mov
pop
pop
gs
movsl
dec
dec
pop
repnz
push
inc
and
mov
dec
push
lods
add
js
das
sbb
roll
fwait
shll
test
and
push
fdivs
push
testb
lods
cli
pusha
dec
fnstenv
sbb
int
mov
and
daa
rcrl
fs
mov
je
xor
ficoms
cwtl
rcrb
jp
sti
and
dec
enter
popa
dec
dec
dec
mov
inc
je
dec
jbe
dec
in
inc
ja
pop
pop
lods
ret
xchg
xor
mov
or
mov
dec
push
add
ljmp
pop
dec
in
into
decl
dec
cmpsl
subb
mov
enter
mov
sub
jo
jp
les
mov
aaa
mov
call
xchg
in
lods
add
cmp
fst
mov
pop
xor
pusha
push
and
sbb
out
faddl
insl
dec
or
popl
inc
movsl
loope
fld
mov
and
aam
ffreep
rcl
sbb
into
mov
mov
ljmp
ret
icebp
popf
pusha
pop
fcoml
jae
ret
xchg
jne
call
push
cwtl
loopne
xchg
insb
mov
lret
and
lds
sbb
test
mov
leave
mov
leave
sub
push
dec
outsl
or
es
lds
es
adc
jmp
jbe
hlt
or
mov
cmp
pop
or
cmp
dec
lds
shl
inc
icebp
aas
popf
or
cmp
test
adc
push
andl
fwait
insl
imul
je
loop
add
push
push
enter
jb
dec
cmpb
and
mov
iret
mov
lods
les
push
shll
lods
xlat
and
outsb
lret
add
stc
xchg
push
add
icebp
cmp
xor
inc
jno
jecxz
addr16
pop
jecxz
adc
jge
shrl
repz
cmp
mov
xor
int3
mov
jl
cmp
stc
adc
mov
lds
test
cmp
dec
mov
out
inc
cmp
add
loope
ljmp
push
test
and
jp
add
cmp
pop
out
mov
mov
mov
sbb
push
loop
and
andl
lock
lds
lret
lods
ret
loop
mov
sbb
dec
mov
and
sub
and
mov
xor
addr16
cmp
fsub
or
or
icebp
aad
push
popa
dec
cli
xor
sub
pop
jecxz
das
pop
jne
adc
push
fs
add
das
xchg
popa
iret
test
xchg
add
arpl
fsubrs
es
adc
movsb
insl
or
stc
pop
adcb
mov
mov
push
pop
faddp
movsb
clc
divb
stc
jecxz
inc
and
ror
adc
pop
fstl
pop
push
in
cmp
mov
inc
jecxz
add
out
mov
adc
stos
dec
cli
xchg
xchg
fnstenv
push
sub
dec
mov
call
push
les
sbb
xchg
xchg
jmp
dec
loop
clc
mov
add
test
rcrl
xorb
sbb
adc
jmp
push
pop
sbb
fistl
jae
dec
pop
push
cmp
dec
pop
dec
mov
andb
fistps
mov
fsubrs
test
iret
xchg
push
mov
add
ja
repz
sub
fistps
faddl
sti
or
pop
sti
repnz
into
and
push
xchg
mov
add
addr16
sub
pop
in
lcall
sub
push
insb
jl
fildl
mov
mov
inc
sbb
inc
aaa
push
aam
inc
fists
pop
push
or
out
push
push
inc
mov
stos
or
push
pop
pop
test
and
ss
mov
and
inc
les
in
xchg
ret
dec
xchg
mov
imul
inc
scas
lcall
out
pushf
sti
sahf
fildll
repz
cltd
push
loopne
push
xor
ret
mov
or
repz
add
repnz
add
dec
add
mov
cs
xor
fwait
sahf
mov
arpl
dec
dec
cmpb
imul
fsts
leave
add
xor
and
jb
bound
dec
cmpb
mov
cmp
sub
fsts
leave
add
xor
and
jb
bound
jns
sbb
or
cmp
jmp
add
xor
and
jb
bound
adc
mov
cmp
test
test
xor
push
out
fiaddl
mov
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
add
jp
push
adc
insl
ds
inc
daa
jno
or
mov
rorl
pop
add
jp
push
sbb
push
cmp
jno
or
mov
rorl
pop
add
jp
push
sbb
push
cmp
jno
sub
xchg
mov
mov
test
mov
add
dec
jp
add
xchg
sarl
loope
lock
in
xor
push
add
jmp
mov
test
into
sbb
or
imul
adc
cmp
movsl
pop
and
adc
and
int3
fadds
fs
outsb
ljmp
adc
push
stos
js
adc
xchg
mov
inc
cmc
push
arpl
sub
sbb
loope
stos
mov
inc
push
and
iret
out
jmp
inc
je
repnz
ja
popa
jno
rorl
sub
xchg
mov
inc
inc
xchg
enter
fcompl
hlt
xchg
or
fsts
jge
test
cltd
add
jp
push
sbb
push
cmp
jno
or
mov
rorl
aas
outsb
sub
cmp
sub
jg
gs
push
das
scas
and
leave
scas
negl
lret
mov
sub
adc
and
inc
jg
inc
xor
test
lods
in
shr
insl
mov
shlb
dec
andps
or
popa
sub
or
mov
rorl
pop
add
jp
push
sbb
push
cmp
jno
or
mov
rorl
pop
add
pop
out
adc
in
push
mov
imul
je
xor
add
pusha
push
add
lds
lret
lret
invlpg
cmp
test
adc
push
jbe
mov
and
pop
xchg
inc
push
jg
aas
push
ret
and
movsl
push
pop
xchg
das
sub
sarl
sbb
or
ficoms
sbb
faddl
andb
cmp
lahf
mov
notl
hlt
push
fadds
iret
out
mov
insb
ret
mov
adc
incl
clc
imul
xor
xchg
insb
adc
stos
and
xor
pop
and
clc
sbb
in
jb
cmpsl
mov
mov
dec
jb
fcoms
arpl
jno
out
mov
orb
mov
push
ret
xor
and
fwait
pop
popf
sub
or
cmp
push
push
addr16
rclb
out
and
bnd
rdmsr
inc
xchg
fcoml
sub
repz
aad
js
sub
in
jg
es
stc
ds
pop
push
jl
xor
ja
clc
xor
cmp
cli
sub
iret
cs
push
outsl
loop
mov
scas
cld
mov
xor
inc
jno
in
adc
sub
push
pop
es
add
test
cli
cmp
test
mov
push
call
imul
cmc
sbb
das
das
dec
outsl
or
jg
jmp
mov
mov
jl
jne
inc
mov
xchg
test
shl
outsb
push
ss
out
scas
shrb
sub
pusha
sahf
mov
push
scas
push
mov
add
mov
outsl
add
xchg
fs
lea
repz
jg
fcmove
ret
mov
stos
or
mov
xor
andb
das
mov
lret
scas
xchg
mov
lcall
popa
cmpsb
jp
cs
push
sbb
mov
test
icebp
insl
dec
ret
lods
pop
enter
iret
insl
out
testb
cmp
lds
mov
push
lods
mov
xlat
jmp
mov
jb
cmp
mov
arpl
in
dec
xchg
adc
xor
xor
in
xchg
jne
dec
hlt
data16
shll
add
pop
mov
les
mulb
mov
mov
adc
popf
and
mov
or
fwait
jmp
jb
loope
cmpsl
push
out
lret
test
aas
repnz
imul
sbb
sub
and
and
or
xor
rcll
pop
dec
mov
rcll
pop
int
inc
mov
lcall
mov
mov
xor
add
jle
mov
mov
cwtl
pushl
mov
pop
inc
jno
or
mov
jmp
mov
jle
addb
orb
inc
movsb
out
repnz
or
inc
jno
push
xchg
mov
fldln2
div
fldenv
das
xor
jne
sbb
mov
cltd
add
mov
das
mov
jp
mov
icebp
cli
cmp
mov
xor
loopne
push
hlt
popa
call
fstpl
sub
inc
mov
dec
cltd
clc
cld
sub
hlt
lods
sub
sbb
repz
pop
xchg
testl
arpl
push
mov
or
stos
xor
xlat
sbb
sti
lds
mov
xchg
dec
dec
add
in
clc
xchg
sub
and
jecxz
push
lds
mov
push
out
test
xor
pop
lods
cs
in
out
push
outsl
iret
dec
mov
and
jg
scas
es
push
das
push
lret
xchg
mov
sbb
pop
cmp
push
push
out
pushf
inc
inc
cmp
data16
call
je
adc
jns
in
xchg
movsl
dec
pop
repz
outsb
push
adc
mov
sub
jne
pop
rcll
ret
xlat
xor
dec
repnz
push
fwait
pop
je
ds
js
lock
cmp
shrb
aas
mov
faddl
test
das
jp
mov
insb
mov
adc
sub
fcmovne
bound
ret
hlt
movsb
push
lret
dec
add
lahf
nop
iret
iret
cmp
insb
and
out
jg
out
movsb
jae
rorl
pusha
mov
mov
jl
adc
or
cltd
aad
jb
pop
push
lock
in
rcll
sbb
dec
imul
test
stos
repz
and
orb
das
cmp
in
imul
neg
nop
jnp
nop
jnp
loope
jge
mov
out
jno
fadd
or
shlb
sbb
and
push
neg
es
stc
fbld
mov
fisttpl
adc
sarb
adc
aam
fadds
add
sbb
daa
rcrb
push
into
rcll
mov
dec
pop
gs
insb
jnp
sub
push
and
sbb
add
aaa
test
in
xor
adc
jmp
jecxz
testl
gs
fistps
es
mov
test
insl
outsb
cltd
out
es
mov
sbb
push
fwait
mov
add
shlb
jg
push
cmp
fimull
pop
pop
and
cwtl
lret
and
out
xchg
and
stc
adc
xchg
pop
imul
cmpl
dec
push
fcomps
aad
fcoms
jge
dec
cmp
mov
or
jecxz
js
xabort
mov
mov
cmp
js
add
jnp
jle
cmp
test
iret
lret
cs
aam
pop
notb
bound
adc
mov
int
mov
cmp
dec
sti
imul
fstpt
imul
out
dec
call
xchg
and
jle
icebp
in
ds
and
inc
inc
xlat
loop
mov
add
mov
ss
jp
cmp
mov
xchg
push
scas
shll
xlat
std
mov
mov
jp
pushf
outsb
ss
outsl
js
inc
addr16
es
aam
bound
mov
fisubrs
push
fdivs
out
mov
shll
test
shl
jbe
loopne
insl
fimuls
es
test
in
cmpsb
mov
cmpsb
xchg
jae
mov
sbb
shr
pop
cmp
cli
mov
stos
pop
daa
cmpsl
aaa
adc
iret
repnz
in
mov
cmpsb
dec
sbb
lock
jns
out
jmp
push
or
cwtl
cmpl
test
jo
pushf
cmpsl
arpl
mov
pop
repz
lret
cltd
mov
test
mov
imul
ret
in
popf
in
mov
jns
enter
rorl
xchg
jge
xchg
mov
lret
subl
rorl
push
mov
lcall
in
lods
ds
push
hlt
dec
es
into
mov
cmpsl
rclb
fdivs
push
sbbl
imul
decb
pop
xor
repz
lods
loop
push
decb
out
push
orl
cmp
roll
loopne
adc
icebp
rcrb
fldt
loope
push
push
dec
sub
ror
lret
shll
and
inc
sbb
sbb
xlat
in
fisttpl
jecxz
sbb
lds
in
sbb
subb
arpl
sahf
pop
pop
jge
jbe,pn
shr
lcall
js
add
add
xchg
cli
cmp
cmp
xor
jo
shlb
pop
orb
rorl
push
fstcw
push
cmp
lods
loope
pop
mov
cmpsb
cltd
pop
mov
jnp
lods
sub
stc
rcrb
xchg
mov
repz
call
out
sub
imul
call
jo
imull
mov
ljmp
ret
mov
inc
aaa
jo
dec
scas
mov
xlat
ds
es
fisubl
in
call
jmp
sbb
mov
lds
mov
mov
xor
mov
jo
and
outsl
subb
or
aad
and
les
dec
cmpsb
sti
mov
dec
inc
rolb
sahf
xor
mov
xorl
adc
mov
adc
fldl2t
outsl
std
or
push
fimull
mov
iret
push
push
adc
mov
stc
adc
test
sbb
adc
rorb
cwtl
and
or
add
jl
add
jl
out
test
jo
lods
cld
inc
mov
pop
sar
add
push
push
call
jmp
lods
xchg
inc
mov
das
ret
dec
rolb
jl
xchg
dec
dec
cmp
fists
loop
movsl
addr16
bnd
mov
gs
pop
in
pop
clc
adcl
add
dec
fwait
mov
mov
test
inc
jmp
repnz
jmp
mov
test
insb
aas
test
jb
inc
and
rorl
call
test
repnz
js
add
mov
and
cmc
incl
icebp
loope
xchg
movsl
rcrl
nop
cmp
mov
bound
mov
push
jb
xor
iret
xchg
cld
xchg
jle
mov
add
lods
fs
push
and
insl
inc
pusha
sbb
ss
push
jecxz
push
dec
push
inc
mov
pop
insb
orb
idivb
repnz
in
push
add
adc
mov
test
scas
xor
adc
mov
pop
loop
sahf
lock
js
das
mov
push
loopne
adc
int3
jle
cmp
movl
cs
cwtl
popa
push
inc
std
cld
test
lock
mov
ret
pop
dec
mov
push
dec
test
lods
push
outsl
mov
clc
xchg
sbb
insl
or
and
or
mov
pop
or
fwait
dec
mov
repnz
fmulp
lret
mov
imul
loopne
jb
arpl
jge
sub
and
inc
and
loope
xor
decb
jno
xchg
testl
mov
gs
imul
pop
and
fiaddl
lods
mov
xchg
ljmp
pop
push
scas
and
je
stc
outsb
fs
jmp
dec
pushf
push
in
mov
rorl
push
sbb
xchg
mov
xchg
faddp
inc
sbb
scas
sbb
icebp
or
cs
mov
sti
nop
sbb
push
lods
mov
movsl
lods
and
icebp
filds
mov
mov
pop
pop
sbb
ret
add
inc
mov
mov
inc
insb
fisttpll
inc
and
imul
gs
aaa
jnp
lods
sub
insl
inc
out
stc
bound
mov
jle
shl
pop
test
adc
xchg
rorb
stos
mov
inc
dec
adc
enter
push
lock
pop
insb
dec
sbb
pop
cmpsb
adc
dec
jecxz
cmpsl
add
lret
mov
push
push
dec
adc
pop
cmpsl
incb
inc
cmp
and
push
bswap
jle
sub
imul
inc
jl
dec
xor
cmp
fnsave
ja
add
adc
bound
fldcw
cmp
sub
lret
xor
enter
pop
mov
add
fldt
xchg
xchg
adc
call
jae
mov
hlt
adc
xor
jbe
test
pop
pop
inc
fistpll
les
jae
mov
xchg
xchg
mov
dec
dec
push
sbb
data16
jne
jno
cmpsl
andl
push
and
xchg
jb
jnp
cltd
mov
lahf
or
or
incb
sbb
pop
or
dec
fsubrs
and
test
sub
xchg
mov
dec
jle
lds
cmc
cmc
movlps
ljmp
roll
fnstenv
stc
dec
addr16
sbb
or
sub
jns
mov
rolb
xchg
daa
jmp
mov
outsb
cltd
mov
jp
add
in
jno
dec
xor
jmp
leave
mov
jg
adc
notb
iret
xor
add
jg
mov
lcall
in
int3
lods
sbb
xor
fwait
lahf
lods
daa
dec
cli
les
xchg
pop
js
mov
rorl
add
jecxz
icebp
loop
popf
std
fdecstp
addl
jnp
ror
outsl
inc
in
std
xor
rcrb
daa
push
push
push
jle
loopne
jb
dec
sbb
pusha
fnsave
cmp
ss
std
mov
dec
mov
inc
sub
fdiv
pop
test
xchg
mov
lock
addr16
mov
xchg
data16
adcb
inc
fwait
insl
mov
arpl
mov
test
popf
mov
rcl
movsb
push
mov
dec
jmp
adc
or
sbb
in
and
sub
icebp
pushw
ret
lret
and
jp
out
ds
icebp
xchg
pop
pop
adcl
sti
sub
lea
loopne
fistpll
lods
adc
mov
xchg
xor
les
xorl
pop
jmp
ret
cmp
fidivrs
cmp
and
push
scas
lcall
test
mov
pop
push
loope
cld
in
in
aas
cmp
out
xor
inc
bound
xchg
inc
pop
popa
cli
jmp
cmp
jmp
adc
inc
loope
cld
shll
mov
adc
and
mov
or
adcb
enter
cli
xchg
xchg
shll
jbe
xor
addb
enter
call
cmpsb
leave
mov
mov
aam
mov
je
rolw
add
loope
and
inc
sub
jbe
xor
mov
loope
aam
imul
sub
loope
cs
jns
leave
cmpsb
xchg
push
sbb
and
mov
inc
sbb
rcrl
dec
fwait
sub
add
fimuls
mov
jnp
jns
jg
hlt
mov
cmp
and
stos
call
outsl
sbb
in
ljmp
mov
fcmovb
nop
push
out
lret
push
fwait
mov
addr16
jns
call
test
addr16
stc
sahf
ret
inc
aaa
xor
ss
pop
push
cmpsb
push
repz
loopne
incl
cmp
mov
or
jle
push
loopne
jno
addl
push
pop
pop
stos
mov
out
imul
data16
add
adc
mov
xor
jo
mov
into
std
add
jl
mov
sub
mov
xor
arpl
loope
negb
mov
pop
sbb
mov
jb
and
add
add
mov
outsb
push
int3
mov
push
xlat
jl
clc
xchg
dec
pop
pop
inc
aam
stc
xchg
add
das
sbb
out
sbb
add
xchg
mov
jg
add
jb
or
ljmp
or
testb
pushf
out
sbb
loop
mov
adc
cmc
int3
test
xor
and
jae
mov
aaa
mov
cmp
dec
jo
sub
pop
xor
out
ret
out
sti
push
dec
mov
test
shlb
int3
pop
push
xor
cs
sub
mov
cli
mov
mov
ret
push
repnz
push
bound
add
scas
xchg
loop
add
hlt
lock
leave
pop
push
aas
mov
xor
push
cltd
jb
mov
leave
out
test
call
nop
push
xchg
push
adc
cmovl
sbb
cmp
pop
in
addr16
push
hlt
lret
adc
adc
jl
jo
call
test
and
and
sbb
pop
ret
mov
fistl
call
enter
call
sub
ret
pop
enter
and
mov
negl
dec
ret
pop
jne
ljmp
pop
mov
xchg
popa
std
sbb
and
ficomps
in
or
jnp
andb
push
lds
aaa
addr16
repnz
out
sbb
sub
repnz
sbb
fstpl
cmp
add
popa
cli
push
out
bound
adc
ffreep
or
mov
repz
add
stos
std
in
push
mov
test
adc
adc
adc
mov
popf
pop
fstpl
mov
mov
xor
mov
hlt
je
ret
mov
pop
fs
cli
lahf
adc
pop
cltd
sti
jp
dec
test
mov
das
into
sahf
out
jns
dec
xchg
jo
repz
movsl
xor
insb
incl
mov
out
pop
dec
inc
xor
add
out
lahf
jecxz
push
les
xor
cld
mov
mov
aaa
mov
push
movsl
xchg
dec
fistpll
stc
cmp
cmp
imul
loope
xchg
push
add
ljmp
mov
movsl
in
push
mov
lcall
lock
je
lods
in
rorb
adc
and
orl
out
jle
lcall
jo
pop
into
cltd
lret
xor
imul
mov
sub
std
jmp
stos
inc
fucomip
pop
jae
adc
push
sbb
and
or
lcall
xchg
xchg
fmuls
sbb
xchg
xor
cmpb
mov
jge
inc
call
stos
mov
lahf
lcall
test
pusha
sbb
xchg
cli
mov
cmp
stos
ljmp
ja
inc
lcall
cmc
adc
jns
mov
sarb
jnp
movsl
aaa
pop
pop
sub
inc
jae
pop
mov
insl
mov
mov
push
adc
les
repnz
sarl
nop
cwtl
lods
cli
test
orb
mov
inc
dec
jne
fucomp
mov
fdiv
mov
mov
push
das
dec
pusha
pop
rol
xchg
push
leave
xor
sub
xlat
push
subb
ret
mov
mov
pop
subb
int
addl
dec
cwtl
imul
mov
fsubrl
dec
xchg
jae
xor
sbb
in
js
adc
movsb
fldl
add
mov
lcall
mov
mov
es
aam
push
sbbb
sbb
imul
div
je
aaa
cmp
or
mov
popf
push
xor
pop
xor
adc
lret
xchg
xchg
inc
stc
mov
cwtl
jecxz
popf
pop
and
aad
sahf
pop
sub
xchg
jo
jecxz
xor
imulb
scas
fidivl
inc
test
mov
mov
into
jge
add
xor
insb
lods
stos
aaa
inc
push
jnp
and
cwtl
xchg
push
les
ds
les
pop
mov
add
push
popf
lahf
stos
cmpsl
outsb
push
mov
ret
gs
dec
fcmovne
adc
mov
sbb
fsts
cmpsb
add
nop
ftst
xchg
or
out
sub
cli
inc
andl
sub
repnz
mov
ja
ds
jb
inc
or
jbe
ljmp
cltd
inc
cmp
js
mov
cmp
adc
dec
rol
xor
in
out
pop
dec
cltd
aad
pop
cmp
idivl
cli
into
leave
ret
int3
sti
jg
mov
aam
or
xor
addr16
mov
test
icebp
adc
repnz
adc
or
call
mov
in
popf
jno
dec
aad
jge
cmovg
lahf
repnz
std
rcr
and
mov
cs
in
enter
mov
or
popa
and
dec
sub
ret
lods
push
jmp
sbb
or
shrb
shll
jmp
lea
pop
stc
mov
pop
push
jbe
test
pushf
xor
icebp
push
rcrb
enter
ljmp
imul
mov
ds
lea
pop
icebp
jle
or
out
push
sub
push
out
inc
mov
or
and
xchg
dec
rolb
int
sub
int
xor
xlat
mov
stc
add
ret
jne
mov
out
loop
cmp
pop
and
cmp
adc
push
icebp
test
andl
xor
mov
iret
stc
call
mov
adc
rclb
mov
jecxz
movsl
lock
fs
or
adc
xchg
sub
sbb
adc
stos
push
ret
test
cld
dec
repnz
scas
data16
push
inc
cmp
nop
or
lock
lret
fisttpll
stos
xchg
push
gs
jbe
or
pop
in
sbb
sub
jae
lahf
jae
ret
dec
out
dec
cld
in
int3
or
shlb
xor
or
cmp
out
mov
pusha
adc
push
sbb
push
cmp
jno
or
mov
rorl
pop
add
jp
push
sbb
push
cmp
jno
or
mov
rorl
pop
add
jp
push
sbb
sarl
popa
sub
add
xchg
cli
mov
mov
mov
add
jp
push
sbb
push
mov
xorl
cs
push
push
push
push
xor
cmp
sub
pop
or
pop
fisttps
jnp
imul
sbb
sub
pop
lret
dec
sti
jp
inc
dec
lcall
pop
hlt
das
lret
imul
mov
insl
pop
lret
push
add
jo
pop
sbb
dec
fdivrs
pop
lods
or
sbb
ljmp
dec
push
push
mov
sub
or
clc
mov
ds
fmul
orl
mov
rcl
outsl
xchg
lahf
divb
inc
sar
iret
ficoml
lret
jb
push
mov
mov
mov
mov
xor
hlt
lcall
mov
xor
ficomps
repz
ds
sub
dec
xor
cli
mov
pop
push
inc
aam
iret
dec
inc
outsb
add
jbe
inc
imul
imul
fstpt
sub
mov
fildll
test
mov
inc
dec
push
cli
push
adc
adc
leave
repz
insb
sub
fidivs
jnp
test
mov
mov
pop
push
clc
jmp
mov
push
and
loop
fsubr
sbb
call
inc
mov
mov
sub
imul
leave
xor
sub
fwait
pop
add
pusha
inc
mov
stos
sbb
sti
dec
lcall
inc
lcall
sub
lret
push
ljmp
jp
push
lcall
pop
fimull
jnp
imul
sbb
sub
pop
lret
dec
sti
jp
push
lcall
pop
fimull
jnp
imul
sbb
adc
les
rorl
lock
hlt
ds
cmp
jno
mov
pop
call
mov
mov
xor
sub
dec
dec
lock
loopne
out
add
dec
lret
cmp
cmp
adc
push
test
jae
scas
shlb
xchg
xchg
lahf
pop
push
pop
arpl
es
xchg
mov
mov
adc
cmpsb
jae
sbb
mov
rcl
aas
sbb
imul
ljmp
cs
dec
test
mov
imul
xchg
aad
dec
js
dec
add
shlb
into
into
icebp
lret
push
imul
out
test
add
shrl
sub
fwait
out
divb
lock
sahf
jno
sub
out
mov
repnz
and
xor
push
stos
cmpsl
inc
pusha
or
sbb
push
data16
pop
mov
lcall
pop
or
ss
testb
inc
in
sbb
insl
pop
lods
push
jge
dec
daa
cmp
mov
xchg
jbe
xorl
scas
mov
clc
sbb
aad
loop
out
es
mov
mov
and
sarb
lcall
mov
push
or
in
sti
xchg
jp
inc
std
sti
lea
or
mov
and
out
sarb
cmp
jmp
ljmp
imul
cwtl
imul
sbb
sub
test
adc
pop
xchg
addr16
out
je
shlb
mov
cmp
shlb
pop
call
inc
lock
mov
mov
je
cmp
xor
cmp
mov
or
dec
aas
push
dec
fisttpl
xor
jge
push
test
cmp
popf
adc
cmp
dec
cmp
add
sbb
xchg
mov
in
mov
xor
int3
and
ja
adc
in
repz
dec
mov
out
outsl
adc
or
push
in
cmpsb
pop
imul
out
cmpsl
sahf
jmp
mov
int
mov
mov
cmp
mov
push
push
or
int
in
add
inc
pop
cmp
mov
fadds
call
xchg
popf
push
sbb
mov
add
and
xchg
cmpl
movsb
xchg
testl
test
add
or
jle
push
add
jns
jg
nop
xchg
aam
xchg
adc
into
mov
sub
mov
jecxz
test
mov
repnz
xchg
cltd
push
or
cli
cmpsl
dec
adc
mov
cltd
push
mov
mov
loope
fldcw
jmp
fs
cmpsb
mov
cmpsl
out
aam
xor
stc
cmp
jmp
push
adc
sbb
repnz
std
inc
cmp
dec
scas
dec
fistps
inc
repz
je
pop
dec
xchg
imul
pop
inc
jae
mov
dec
int3
adc
cltd
pusha
sbb
add
xor
push
sbb
fstp
inc
lea
loopne
scas
and
mov
cli
cmpb
cmp
orl
imul
or
nop
push
add
lret
icebp
clc
mov
aas
dec
jbe
mov
dec
sub
fs
mov
shll
cwtl
jae
lock
dec
int
mov
sbb
lret
add
out
call
imul
mov
fnsave
mov
jne
rorb
divl
jle
in
jae
xchg
jbe
je
push
shr
out
rcrl
loop
test
mov
sub
add
push
lock
imul
inc
sahf
mov
ds
into
pop
push
inc
popf
nop
insb
aas
lea
mov
xchg
js
loope
into
addb
xchg
cmpsb
stc
cmc
xlat
mov
add
mov
ljmp
xchg
or
mov
sub
les
cmpsb
xchg
aam
ret
cmpsb
in
xor
std
scas
lds
nop
xchg
mov
popa
add
outsb
sahf
mov
pop
cmpsb
repz
nop
push
int
daa
add
jecxz
push
jg
imul
dec
cltd
fnsave
adc
in
xchg
dec
xchg
int
shlb
push
orb
rol
dec
stos
push
xor
mov
leave
xchg
adc
pop
cmp
mov
mov
imul
mov
inc
xor
dec
call
xchg
aad
aaa
cmc
inc
es
pop
repz
outsb
sbb
push
rclb
popa
cmp
test
mov
pop
out
insl
fdiv
mov
sub
stos
jp
sub
mov
jbe
fsubrp
xchg
icebp
subl
xchg
mov
out
sbb
push
push
int
pop
mov
cmpl
rorb
cmp
inc
in
xchg
jnp
push
pop
movq
out
movsb
fstpt
aam
and
cmc
and
sbb
xchg
cmp
sub
push
or
cltd
shrl
enter
push
mov
push
push
add
xlat
xchg
das
cs
test
xlat
sub
xor
mov
dec
push
and
andb
int3
xor
stos
mov
jle
mov
add
mov
in
inc
mov
sahf
mov
hlt
inc
push
pop
pop
out
adc
adcl
cmp
add
cmp
jge
enter
cltd
aam
loope
imul
add
jl
adc
es
ret
pop
dec
push
cli
jl
loop
aad
push
fisubl
and
test
inc
cmpsb
les
jmp
sbb
insb
fs
xchg
insb
movsb
sub
adc
push
hlt
push
test
jp
test
rcl
sarb
pop
push
push
dec
call
xor
shlb
xor
stos
es
adcl
and
push
cmc
or
icebp
pop
mov
frstor
insl
xchg
xchg
inc
cmp
jl
push
cwtl
das
test
or
dec
xchg
adc
dec
xchg
dec
insl
ss
xor
test
push
cwtl
es
dec
and
loopne
jl
stos
fcompl
push
cmp
sbb
push
test
jno
add
or
cli
mov
popa
mov
into
push
arpl
xchg
iret
sbb
faddl
mov
ficompl
sti
cmp
outsl
loop
movl
jne
and
xchg
in
fs
adc
cmpsb
or
insb
mov
xor
xchg
mov
ss
hlt
xor
out
push
cltd
pop
shrb
fsubp
sub
mov
mov
xchg
call
add
repnz
push
in
rcrb
in
or
insl
out
push
and
dec
out
cmpsl
and
mov
mov
mov
xor
mov
xor
mov
push
outsb
jp
ret
pop
in
lcall
scas
sbb
sub
sbb
aad
push
mov
adc
ja
cmp
ljmp
dec
aaa
mov
lret
xchg
lahf
ds
cmp
in
leave
jo
scas
xchg
enter
subl
scas
call
sub
or
test
xchg
sbb
sbbb
or
mov
xchg
pop
push
inc
dec
cmp
jecxz
int
out
outsb
and
movsb
add
das
cwtl
lods
or
into
sarb
push
xchg
inc
loop
adc
daa
filds
push
xchg
sbb
or
jecxz
xchg
inc
scas
inc
subb
andl
ret
sbb
sbb
add
xchg
mov
fmuls
adc
or
andb
dec
adc
xlat
rcll
fimuls
and
frstor
cmp
enter
mov
lods
adc
push
mov
lea
or
adc
lods
rorl
int
cld
loop
arpl
pcmpeqb
loop
mov
jae
cmp
adc
adc
cli
das
add
cmovb
push
cli
cmpsb
orb
rclb
mov
in
dec
addb
jnp
in
mov
sub
jmp
stc
adc
jne
inc
xchg
testl
popa
sbb
clc
int3
mov
push
out
mov
or
pop
lret
pushf
cmp
icebp
sbb
outsb
jl
std
dec
push
fwait
cmp
xor
mov
fistl
pop
out
enter
xor
mov
cmp
lret
int3
stos
push
adc
movsb
cmp
cmp
xor
lret
clc
xor
fucom
sbb
test
ja,pn
push
or
xchg
sar
push
enter
inc
call
xor
pop
loope
mov
call
les
scas
fldl
lahf
and
pop
popa
dec
je
gs
and
bound
clc
scas
lcall
movsb
mov
xlat
push
lock
mov
cmp
inc
mov
mov
mov
int
jo
ret
push
inc
push
ret
mov
test
insl
adc
repnz
in
clc
in
xchg
inc
xor
cmp
sbb
sbb
out
shlb
inc
aam
xchg
in
ficoml
cmp
aam
push
or
pop
addr16
cmpl
add
pop
jmp
adcb
jo
sbb
sbb
leave
dec
jbe
xor
mov
rcrb
mov
lods
xchg
std
rcrb
pushf
xchg
xlat
data16
sub
je
add
fs
stos
xor
cmp
dec
pop
mov
mov
movsb
pop
jg
jo
nop
push
mov
jmp
xchg
sub
add
cli
or
mov
mov
push
jb
jnp
outsl
cmp
out
rorl
test
cwtl
jg
enter
adc
xor
cmp
lret
cwtl
daa
and
decb
cmp
repz
negl
das
mov
faddl
sub
jecxz
out
add
or
jae
negb
mov
movsb
fdivrp
push
adc
push
aad
sub
lods
push
daa
and
das
xchg
or
outsb
jo
or
dec
insl
mov
xchg
sbb
testl
adc
xor
sbb
mov
push
add
test
push
mov
ret
sbb
lds
out
pushf
cs
in
cwtl
repz
push
mov
popa
stos
call
ss
dec
xchg
and
push
mov
leave
in
mov
sbb
jno
sub
cmp
pop
push
push
sbb
int3
sub
mov
in
mov
mov
das
adc
movsl
pop
xlat
pushf
test
push
dec
cltd
not
and
and
mov
and
loop
inc
arpl
sbb
icebp
bound
imul
cld
imul
adc
outsb
sub
mov
lret
fdivs
lods
addr16
scas
push
mov
idiv
std
or
and
dec
xchg
or
imulb
dec
mov
xor
ret
icebp
out
fucomi
xchg
cmc
xchg
inc
ret
inc
cld
dec
std
test
mov
jp
loop
xchg
sbb
aad
inc
rol
jle
push
int3
frstor
aaa
add
addb
popa
rclb
xchg
adc
popf
mov
mov
cmp
ljmp
fwait
xchg
outsl
cmp
loopne
test
hlt
stos
cmp
shrl
sar
movsb
jge
add
ret
icebp
mov
rorb
imul
inc
xchg
cwtl
dec
inc
cwtl
push
xor
stos
pop
mov
mov
xlat
and
mov
sahf
jne
add
scas
mov
xchg
jno
jmp
or
in
push
push
inc
in
push
push
insl
mov
mov
fsubp
xor
pop
xchg
adc
cmc
mov
adc
cmp
mov
add
nop
mov
push
push
shlb
outsl
loopne
xor
mov
sbb
cmp
sub
cmpsb
sub
aaa
sub
int3
data16
xchg
xchg
test
or
cmpl
sbb
cs
cmpsb
addl
arpl
dec
adc
pusha
lods
movsl
or
xchg
jae
sub
loop
mov
loop
fnstsw
bound
aam
je
pop
sub
ret
inc
sbb
mov
test
ds
xchg
mov
scas
inc
xor
cmpsb
dec
sbb
repnz
fisubrl
cld
sbb
shlb
in
movsb
inc
inc
rol
xor
std
leave
inc
pushf
sbb
adcb
fistl
push
sub
mov
jle
mov
inc
add
pusha
adc
sbb
jo
mov
js
insl
xchg
stos
sbb
aas
movsb
jne
sub
stos
in
ja
insl
in
fwait
cmp
sub
pop
imul
dec
repz
mov
cmpb
std
or
sti
xchg
add
push
adc
cmpsb
or
cmp
mov
pop
insb
cmp
xor
jae
nop
hlt
add
imul
mov
mov
sub
mov
shlb
std
lret
mov
sbbl
popf
inc
imul
scas
pop
or
sbb
int3
imul
test
fmuls
out
aam
jp
push
lds
xor
idivl
push
cmpsl
imul
movntps
push
fbld
aad
mov
in
mov
jns
mov
cltd
leave
mov
fcmovne
mov
cmc
mov
xchg
hlt
xchg
cmp
sub
xlat
push
adc
in
mov
cwtl
mov
fs
aaa
fmuls
in
cmp
rcll
mulb
in
mov
js
mov
dec
sub
mov
mov
pop
cmp
inc
dec
hlt
dec
fisttps
adc
test
mov
xchg
inc
cmp
orl
adc
lcall
outsl
es
sub
adc
in
testb
insb
inc
inc
call
add
loope
mov
insb
push
push
dec
fs
inc
scas
test
push
test
fiadds
mov
test
or
fbstp
push
inc
dec
sub
aas
test
mov
cmpsl
pop
js
cmp
pushf
aas
and
in
not
mov
repnz
hlt
push
or
popf
sbbl
pop
mov
mov
push
out
icebp
jno
xchg
and
dec
mov
out
xchg
scas
in
pop
mov
adc
dec
xor
sub
gs
sarl
push
ds
mov
cmp
mov
mov
iret
aas
aaa
into
dec
int
imul
dec
sbb
nop
addr16
stc
leave
sub
pop
fsubl
jg
adc
add
dec
cmp
daa
dec
mov
dec
stos
imul
sti
cmp
in
sbb
pop
cmp
jle
lahf
loopne
maskmovq
push
mov
mov
adc
jns
push
out
negl
in
mov
mov
xchg
pop
aaa
cmp
sbb
dec
mov
and
call
add
lods
jne
loop
inc
push
sub
das
mov
jg
xlat
inc
sub
fcomip
outsb
arpl
push
les
cmp
mov
fsubs
rcl
ds
fildll
mov
aam
pop
jae
and
fsubrl
data16
stos
sub
sub
in
sbb
inc
jns
ror
int3
or
arpl
sti
pop
jp
in
fsubrs
and
add
mov
fdivl
push
pop
jecxz
rorb
lahf
inc
jg
mov
andb
mov
icebp
mov
xchg
mov
lahf
fsts
lahf
movsl
push
das
sti
adc
stos
cmpsb
sbb
xor
mov
mov
icebp
cltd
jl,pn
sub
pusha
lods
or
fs
inc
inc
fnsave
std
xor
addr16
arpl
sbbl
cmp
push
mov
into
xor
xor
pop
aaa
sub
add
add
jmp
arpl
add
mov
and
xchg
inc
sub
fstl
jo
rorb
add
and
cmpsb
and
stos
out
xchg
push
mov
pushf
aam
mov
je
ljmp
loop
outsl
mov
test
xchg
and
dec
mov
push
aad
push
cmp
inc
fwait
ja
adc
cmpsl
movsl
push
pusha
roll
popa
xchg
dec
cltd
ret
push
aas
jg
fstpt
add
jp
xchg
std
pop
sub
js
test
sbb
cmpsl
lods
add
arpl
pop
fsubs
movsl
push
inc
xchg
popf
hlt
mov
lods
mov
or
mov
orb
pop
imul
fcompl
stc
or
add
mov
sbb
leave
mov
jns
adc
adc
sub
leave
inc
lret
pop
into
hlt
div
lahf
lea
das
sar
rcll
or
movsl
xchg
dec
push
mov
pop
jnp
shll
mov
or
dec
xchg
out
scas
fsubl
test
inc
sarb
out
mov
mov
lahf
test
shlb
add
rclb
test
popa
push
mov
or
dec
cmpl
mov
xor
mov
inc
jno
movl
inc
pop
push
pop
push
push
data16
sbb
std
xchg
adc
sbb
movsl
xchg
xor
in
push
cmp
outsl
xor
pop
js
sbb
lcall
add
lea
popa
mulb
test
dec
rcll
add
and
mov
xor
aaa
add
ds
fsubl
xor
stos
loop
leave
jo
pop
ret
clc
xor
push
jae
or
fists
call
xlat
cwtl
mov
inc
inc
mov
mov
enter
mov
mov
sahf
out
and
pop
add
push
add
and
mov
cmp
in
insb
xor
mov
es
hlt
lods
bound
mov
dec
je
pop
cmpsl
int3
loop
mov
jle
push
imul
sub
mov
movsl
push
pusha
lea
xchg
sbb
popf
jns
jg
adcl
sub
jmp
outsb
xor
sbb
sbb
scas
mov
inc
xor
lock
mov
xor
psubb
or
es
pop
fcomps
rolb
imul
dec
push
jmp
ljmp
hlt
ds
push
inc
cmpsb
ret
shl
subl
jae
out
or
outsb
cmp
jl
das
cld
in
movsl
add
loop
sbb
pop
add
dec
adc
sbbb
outsb
std
clc
xchg
call
scas
call
sub
and
push
or
sahf
and
jp
into
xlat
pop
ret
or
mov
test
cli
insl
cmp
sub
dec
call
mov
data16
xor
cli
and
insl
dec
sbb
mov
adc
pop
sbb
pop
ficoms
dec
jae
push
lcall
daa
aam
stos
imul
push
inc
fldt
scas
fdiv
dec
pop
cli
add
pop
in
imul
inc
push
lcall
pushf
push
je
xor
sbb
je
fildll
cltd
and
lock
inc
shrb
mov
jmp
loope
int3
push
shrb
lock
ret
jl
jmp
pop
fstpt
aas
fdivl
aas
mull
mov
call
rclb
sbb
dec
and
pop
int3
cld
repnz
dec
imul
testl
icebp
insl
push
test
lcall
jbe
mov
mov
test
jae
adc
int3
in
imul
add
adc
push
inc
sbb
subl
fnstenv
dec
out
and
lret
fnstenv
popf
adc
lea
cmp
adc
movsb
push
pushf
add
mov
shrb
pop
movsb
mov
push
pop
jnp
fsin
xor
push
mov
hlt
push
push
lret
dec
xchg
mov
ljmp
xchg
lret
rcr
mov
mov
shrb
push
add
or
jae
xchg
pop
mov
mov
jecxz
ds
fistpl
sti
les
das
jg
adc
cld
movsl
imul
add
ret
or
push
adc
xchg
idiv
rorb
inc
cmc
sbb
es
mov
lea
and
cmc
jne
lock
mov
inc
inc
mov
lods
mov
out
pop
data16
addb
push
inc
inc
xor
add
insb
stos
mov
sbb
dec
jmp
adcl
mov
jmp
adc
int
rclb
and
ljmp
mov
ret
cmp
dec
test
scas
lret
int
clc
cmp
fwait
cmpsl
es
loopne
mov
mov
ficoml
sbb
and
arpl
xchg
movsb
lea
xchg
stos
pop
js
jo
movsl
or
sahf
lock
add
or
aas
mov
fistpl
dec
sti
jp
push
lcall
pop
fimull
jnp
imul
sbb
sub
pop
lret
dec
sti
jp
push
lcall
pop
fimull
jnp
imul
push
mov
and
and
jle
push
fwait
or
pop
ficoms
jg
pop
push
cmp
out
xor
subl
fisttpl
cli
imul
mov
ret
mov
adcb
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
fwait
icebp
fisttps
cli
pop
ljmp
or
add
add
add
add
add
jl
test
add
add
add
pop
add
add
add
sbb
add
add
add
imul
cmp
xor
and
and
dec
add
pop
add
add
xchg
add
add
add
add
add
cmp
and
and
movb
add
add
adc
add
popa
add
add
pop
add
add
add
add
insl
add
add
add
add
add
str
add
add
add
inc
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
and
aam
test
pusha
add
add
add
insl
add
add
add
add
add
add
and
jae
ret
add
add
ljmp
add
add
add
add
jae
add
out
sbb
add
sldt
add
or
and
lret
add
add
add
add
add
add
add
imul
add
stos
add
add
sbb
sub
add
add
add
add
add
add
add
add
add
add
movsb
add
pop
add
add
add
pop
add
add
sub
in
add
add
add
add
rolb
aam
testl
sbb
pop
add
add
sbb
add
add
test
add
add
add
add
add
add
add
add
add
lret
add
outsb
add
add
add
add
add
or
rolb
inc
add
add
add
add
add
stc
add
add
or
leave
add
add
add
lds
xchg
add
add
add
add
add
add
rolb
add
add
add
add
sldt
add
verw
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
push
add
movsb
add
pop
add
add
add
roll
add
adc
dec
add
jge
sbb
out
push
add
mov
stos
add
add
inc
add
add
testl
or
popa
add
inc
add
add
add
add
add
adc
mov
add
add
add
add
add
add
xchg
add
add
add
add
add
mov
lret
add
add
add
add
dec
add
add
add
add
jge
scas
add
add
add
leave
add
outsl
add
cmp
mov
add
add
add
add
add
add
and
str
add
add
test
fildl
filds
pop
add
add
add
add
cmp
mov
add
aas
add
add
add
add
add
add
jnp
into
mov
shrl
mov
mov
push
mov
in
dec
add
lods
imul
lcall
out
xor
aas
xchg
or
imul
dec
dec
ljmp
dec
xor
out
mov
mov
out
inc
pushf
mov
ds
popl
jbe
out
jle
int3
push
int
pop
mov
lea
sbb
mov
mov
jns
js
inc
movsb
ret
sub
test
lret
pop
or
cmp
dec
adc
insl
clc
pop
loopw
sbb
das
fldt
adc
jmp
popf
mov
xchg
lret
popa
pop
shlb
psubq
mov
iret
mov
push
jmp
std
aas
or
or
mov
xor
dec
sub
sub
scas
jo
mov
push
add
inc
lcall
pop
and
adc
pop
inc
xchg
dec
pop
or
testl
subb
fldt
xor
cs
sub
xor
stos
jae
xor
xor
cmp
adc
mov
lret
mov
pop
dec
shll
fists
lcall
lahf
cmp
sub
adc
sub
into
adc
jne
mov
ds
dec
pushf
ja
out
pop
les
push
add
into
lea
and
pop
mov
insl
imul
adc
and
jp
cmc
icebp
sbb
jmp
and
pusha
pop
cmpsb
dec
add
pop
aaa
das
in
pop
dec
inc
mov
add
push
mov
mov
inc
pop
sub
fs
xor
fbld
fucomp
push
cld
cs
and
and
jmp
xor
mov
cwtl
inc
xor
sbb
dec
insl
mov
push
mov
stos
inc
stc
mov
sub
inc
out
pop
jp
cmp
xor
mov
loope
fnstcw
popa
and
jge
pop
mov
stos
fucomip
jl
inc
ja
inc
or
rorb
wrmsr
xchg
xchg
stos
push
aam
in
test
lahf
cmp
adc
arpl
rorb
sbb
jnp
dec
sub
in
outsl
or
lea
movb
insl
push
inc
ss
sbb
imulb
inc
xor
call
cmp
push
pop
mov
outsl
stc
in
pop
imulb
out
dec
out
mov
push
insb
icebp
iret
pop
out
pop
lret
and
in
mov
aam
pop
std
push
or
gs
into
test
int3
lret
or
fwait
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
