call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
movsb
mov
xchg
xchg
ljmp
shll
xor
add
adc
fs
je
inc
inc
push
push
movsb
mov
xchg
xchg
in
hlt
icebp
and
xor
jo
adc
fs
je
inc
inc
push
push
movsb
mov
xchg
xchg
in
hlt
icebp
and
xor
ja
cmp
or
pop
adc
in
mov
out
movsb
daa
hlt
xor
das
xor
cmp
inc
inc
out
fs
adc
das
test
sbb
sbb
iret
int
pushf
sbb
add
cli
inc
inc
stos
lods
pop
mov
addr16
jbe
std
mov
cmp
loope
iret
sti
add
rol
popa
std
inc
and
mov
repnz
cmp
mov
and
pushl
out
lcall
jo
cmp
dec
out
push
lods
insb
pop
loope
push
lds
aad
xor
enter
popf
and
test
inc
add
mov
xorb
xor
push
je
pop
and
add
jne
inc
push
cmp
cli
mov
xchg
xchg
in
hlt
icebp
and
xor
add
adc
fs
je
inc
inc
push
pop
loop
frstor
icebp
xlat
mov
xchg
mov
outsl
js
add
xor
loopne
sti
aam
icebp
mov
scas
aam
inc
fs
inc
push
push
jge
push
and
ss
aas
int
rol
in
cmc
xchg
in
hlt
icebp
and
xor
add
adc
fs
je
inc
inc
push
push
movsb
mov
xchg
xchg
in
hlt
icebp
and
xor
add
adc
fs
je
inc
inc
push
push
movsb
mov
mov
ds
out
xchg
lret
scas
dec
cmp
xchg
pop
inc
push
in
dec
lds
test
loopne
data16
addb
mov
clc
jns
xor
adc
adc
test
adc
push
dec
mov
sub
pop
add
and
fsubrl
insb
inc
mov
movsb
ret
js
mov
les
pusha
in
sbb
lcall
psubsb
sub
iret
int3
mov
inc
popa
popf
add
or
xchg
mov
mov
or
rclb
or
icebp
cli
imul
jnp
fnstsw
cmp
cmpsb
xor
adc
pop
mov
jne
jnp
popf
lahf
int
cwtl
fidivrl
scas
fucom
imul
into
das
jg
pop
cld
dec
cli
mov
push
adc
cwtl
jl
imul
push
xor
stc
xlat
or
fisttpll
pop
out
inc
sub
cmp
adc
lods
pop
inc
rol
jl
fadds
jg
filds
scas
cmp
push
outsb
or
fnstcw
in
stos
xor
sbb
sub
xor
aas
pop
sbb
negb
outsb
in
and
and
sarl
jl
mov
mov
add
sub
dec
movsl
loope
jg
and
mov
ret
ret
jge
and
inc
mov
add
xor
cmp
insb
adc
cmp
or
scas
out
fucomi
or
fs
je
push
inc
gs
in
lea
dec
ficomps
scas
sbb
fs
pop
push
adc
cmp
push
add
mov
dec
xorps
arpl
addr16
cmp
scas
scas
into
in
xchg
push
popa
mov
dec
pop
push
sub
xor
cs
mov
push
inc
popa
jl
js
sbb
das
ljmp
and
rcll
cli
cli
das
gs
movsb
dec
out
cmpsb
and
or
data16
jbe
imull
test
xchg
push
call
lahf
fs
push
cmpsl
sahf
jle
out
test
icebp
test
loop
xchg
ret
stc
stos
idivl
daa
dec
fildll
cmpsb
mov
das
jle
sti
shrl
pop
cld
adc
cwtl
imul
and
notb
out
ds
or
dec
inc
pop
pop
push
pop
dec
rclb
addr16
lcall
mov
sahf
jge,pt
sbb
push
pushf
shl
out
xchg
loop
daa
jne
cmp
mov
dec
test
loop
and
sub
push
stos
mov
and
and
cmc
ffreep
mov
xor
sub
add
out
jp
or
push
clc
sbbl
sbb
pusha
dec
cmp
adc
jnp
sbb
pop
inc
loope
idivl
ja,pt
jmp
sbb
test
adc
xchg
cmc
push
test
push
lock
push
mov
and
cmp
cmp
hlt
adc
adc
and
dec
mov
mov
adc
mov
dec
daa
iret
adc
cmp
and
sbb
lret
pop
icebp
hlt
icebp
popf
cmp
lods
imul
and
or
sti
dec
mov
cmp
jbe
dec
add
in
xchg
adc
and
cmp
andb
push
mov
repz
enter
jp
jmp
into
push
aaa
lret
pushf
scas
cmp
push
lcall
mov
mov
call
std
pop
nop
data16
jg
add
sbb
movsb
and
inc
mov
lahf
cltd
mov
add
mov
jno
sbb
pop
push
pop
push
js
cmovbe
adc
sub
hlt
pop
aad
cmp
cmp
test
push
mov
lahf
add
sbb
jg
inc
inc
cli
call
and
pop
jge
mov
in
pop
mov
mov
into
pop
lret
repnz
pop
std
or
sub
mov
sub
outsl
mov
xchg
inc
lret
insl
sarl
repz
push
repnz
movsb
push
fldenv
pushf
popa
mov
lea
and
push
movb
stos
clc
sub
dec
mov
sbb
xchg
push
in
adc
sub
mov
call
mov
out
mov
iret
mov
dec
mov
ret
lods
std
pop
sub
sbb
push
pushf
into
cmp
pop
mov
test
orl
nop
mov
negb
push
std
cmp
sbb
inc
mov
and
pop
dec
fimull
jbe
mov
jo
xchg
nop
mov
fldcw
cmp
lds
sbb
add
shll
sahf
jne
adc
scas
sbb
pop
sahf
dec
into
cmp
dec
sub
aad
popa
mov
test
push
idivl
cmpsb
insb
jecxz
cltd
push
pop
lahf
outsb
jmp
orl
das
cli
js
inc
add
movsb
lret
pop
add
adc
jbe
and
cmpsb
mov
loop
push
pop
mov
adc
pop
sti
adc
scas
mov
fwait
insl
xlat
cmc
pushf
dec
inc
add
pusha
jno
imul
sbb
insb
and
int3
aam
stc
sub
xchg
ljmp
in
scas
cmpsb
stc
divl
adc
adc
fidivs
dec
inc
inc
xor
pop
test
imul
popf
mov
int
push
dec
scas
and
xchg
mov
testb
pop
sub
inc
add
push
loop
out
scas
inc
sub
or
dec
js
in
bound
adc
pop
sbb
and
imul
out
aad
out
aas
pop
pop
jnp
ds
jb
iret
mov
push
mov
arpl
test
add
data16
xchg
lcall
cs
stos
sbb
xchg
xor
ja
aaa
clc
lret
andl
imul
mov
jo
jo
lea
mov
clc
hlt
xchg
xchg
rorb
pop
iret
inc
jns
rorb
add
pop
push
xchg
mov
dec
sub
test
lods
push
jb
xor
sub
sub
addb
xor
pop
out
cmc
adc
mov
push
cmpl
icebp
mov
dec
adc
and
add
mov
mov
and
jp
jbe
test
jmp
lock
sarl
mov
sbb
test
lcall
fmull
popf
and
push
lret
lea
mov
xchg
adc
iret
sbb
fs
cmpsl
fistl
pop
pop
into
in
dec
lods
or
cwtl
or
sub
mov
es
shl
dec
add
stos
jae
or
xor
nop
xchg
fldl
outsb
sbb
aas
push
into
xchg
and
js
xchg
cmc
cmp
and
iret
mov
mov
imul
outsb
add
cmpsb
in
jns
bound
or
mov
xchg
pusha
sub
icebp
sub
repnz
lock
dec
lods
divb
imul
adc
mov
mov
je
mov
mov
fldt
fcompl
das
js
sbb
nop
or
dec
cmp
insl
inc
jo
xchg
sbbb
sarb
in
push
jg
or
sarl
pop
xchg
sbb
mov
add
adc
aam
jne
or
arpl
xchg
mov
inc
sub
or
xchg
cltd
inc
test
or
push
and
int
xchg
mov
push
add
js
mov
ljmp
lock
or
int
rclb
mov
inc
in
imul
mov
sbb
sub
dec
fnsave
subb
test
push
lods
xor
mov
lahf
xor
mov
or
pop
xchg
lahf
lahf
idivl
test
in
std
cmpxchg
mov
sahf
sti
stos
in
je
jae
and
adc
sbb
popa
pop
add
cmp
mov
mov
jmp
fidivrl
jno
popa
in
jne
enter
nopl
xchg
ja
outsb
sbb
pushf
add
test
push
daa
sub
inc
sbb
sub
in
add
je
lret
lock
mov
addb
fnsave
inc
cld
and
jae
ret
addps
adcl
sar
push
repz
mov
bound
aas
outsl
ss
push
xchg
ret
mov
pop
in
ret
jmp
mov
and
scas
ret
xor
int3
aad
inc
sub
push
cmp
cmp
pop
adc
int
fucomi
inc
dec
testb
pop
inc
or
mov
add
rcl
mov
xlat
icebp
or
xor
pop
rcrl
pop
arpl
fists
cli
data16
sbb
sbb
fcoms
movsb
lcall
push
mov
xor
pop
lock
pop
adc
push
push
jmp
sub
push
cwtl
inc
mov
popf
jne
lahf
pop
add
cltd
xchg
test
push
push
sub
sub
xchg
push
scas
push
adc
mov
out
lret
adc
xlat
nop
mov
rorb
aaa
sub
pop
jmp
xor
xchg
icebp
or
stc
clc
push
mov
movsb
sbb
jmp
fwait
jns
ss
or
or
cld
scas
nop
adc
and
mov
sbbl
mov
mov
call
jg
int3
adc
push
mov
cmp
cmp
mov
mov
or
pop
aad
or
or
es
les
or
adc
call
loope
dec
mov
mov
jg
mov
jae
inc
je
mov
inc
and
jecxz
lret
xchg
scas
repnz
mov
jno
outsl
cmp
pop
ss
vpsraw
fdiv
dec
inc
enter
sbb
ss
pop
sbb
fwait
dec
aas
pop
mov
out
cwtl
xchg
movsb
sub
sub
cmpsl
jmp
sbb
push
mov
mov
in
inc
in
das
enter
jb
add
push
add
jo
aam
lahf
push
dec
sub
pop
xchg
inc
mov
sbbl
xchg
in
xchg
or
test
lret
stc
xor
lahf
lret
pop
mov
sbb
hlt
or
sbbb
or
cmc
lcall
add
mov
sbb
push
test
pop
in
push
inc
xchg
or
das
xor
aas
cmpsl
jb
pop
in
adcb
mov
xor
sbb
dec
in
jl
addl
cmp
inc
adc
jne
push
sbb
xor
mov
cli
movsl
adc
shrl
push
pop
les
stc
mov
call
cwtl
pop
add
xchg
inc
fbld
in
je
hlt
test
test
mov
jnp
or
aaa
icebp
mov
rcl
fistpll
sbbl
daa
ss
xorl
inc
mov
mov
aad
jl
pop
sbb
pop
mov
fnstsw
adc
test
push
xchg
mov
fstpl
jle,pt
pop
mov
jmp
xor
shll
cmc
jp
add
es
mov
std
or
enter
lock
mov
xor
fstp
push
test
pop
pop
pop
out
ja
repz
enter
jge
pop
push
mov
sahf
pop
cmp
sbb
mov
imul
pop
dec
mov
lods
xchg
push
outsb
pop
sub
lds
fdivs
or
push
pop
test
xchg
add
xor
lcall
xor
xchg
insb
jne
popf
into
mov
inc
push
mov
mov
stos
xchg
pushf
dec
sub
insl
shlb
lds
mov
lea
cwtl
mov
pop
and
xchg
test
adc
xlat
icebp
inc
std
enter
imul
jbe
push
inc
pusha
sub
mov
dec
push
insb
xchg
add
mov
insl
push
outsl
pusha
adcb
int
fstl
stc
dec
sbb
pop
jns
pop
fst
and
scas
sbb
movsb
sub
xchg
sti
xor
out
out
rcrb
cmpsl
mov
mov
mov
fldcw
imul
push
mov
adc
cmpsb
lcall
mov
xor
push
into
popf
bound
dec
in
jne
sub
js
mov
call
insb
jnp
add
xchg
cmp
xor
in
sub
or
int3
dec
adc
cmc
scas
pushf
xor
pop
jb
or
insb
jns
inc
pusha
insl
mov
and
std
xor
iret
xchg
or
cmp
mov
xchg
cmp
insb
ret
leave
addb
jp
push
mov
cmp
fsubrl
add
es
cli
mov
inc
std
lret
cwtl
ficompl
jge
insl
out
mov
mov
cs
dec
cld
mov
ja
lods
arpl
adc
out
arpl
roll
lods
add
cmp
mov
add
inc
or
je
notb
sbb
movsb
pop
mov
in
clc
xchg
bnd
loop
shr
adc
repz
das
test
fisttpl
cmp
sbb
fstl
xchg
jns
je
mov
stc
xchg
repz
test
xchg
cmc
dec
adc
push
mov
aad
mov
and
loopne
je
xchg
shll
and
jb
enter
scas
aaa
or
bound
hlt
pusha
xchg
and
lret
pop
mov
or
imul
pop
enter
pushf
xor
mov
int3
dec
sub
jecxz
loop
and
loopne
les
pop
jl
add
lods
aad
int
sub
cmpsl
pop
cmpsl
xlat
lret
aam
mov
enter
push
sbb
lods
xor
push
call
inc
cli
data16
jge
cmp
loopne
lock
int
pop
xlat
enter
sub
xor
sahf
xor
jecxz
jl
in
rorb
jae
xchg
dec
add
push
sbb
adc
jbe
mov
xor
mov
cmp
out
inc
arpl
mov
cmp
jo
in
out
mov
jecxz
lret
out
rclb
icebp
and
pop
or
and
jmp
movsl
ret
lahf
adc
inc
sub
mov
ret
xchg
mov
and
push
inc
loop
in
xchg
inc
test
sbb
test
sub
gs
call
mov
hlt
sbb
xchg
cmp
xorl
dec
lock
addr16
cmp
idiv
aas
pop
sar
movsb
jbe
cli
scas
ret
out
mov
rclb
fidivrs
dec
push
test
int
jne
or
repz
test
scas
enter
fdivr
je
daa
divb
fstps
xchg
pop
cld
inc
pop
jbe
daa
push
mov
pop
addr16
push
cmp
mov
dec
sbb
sbb
pop
add
sbb
lods
fisttpl
cld
sbb
iret
add
rorb
dec
mov
lea
xchg
dec
lea
leave
cmp
lcall
scas
fnclex
and
jnp
mov
and
xchg
add
sub
mov
jle
int3
outsb
test
cmp
test
pop
cmc
repz
mov
icebp
xchg
xorl
xor
fstl
and
shr
add
stos
in
ficomps
adcb
xchg
mov
ss
pop
mov
aam
xor
sbb
xor
mov
aaa
jnp
iret
sahf
cmc
stos
push
sarl
pusha
popa
xchg
adc
or
lds
inc
iret
adc
push
loop
cwtl
and
shll
xor
outsb
les
push
lock
add
sbbb
mov
mov
loopne
inc
mov
int3
mov
scas
and
nop
gs
repz
addl
or
test
inc
fdivs
jecxz
push
call
add
cld
repz
jecxz
jb
lock
mov
popa
xchg
xor
or
ret
pop
lretw
bnd
outsb
xor
fcmovbe
mov
inc
cmc
lahf
fwait
push
pop
pop
xorb
mov
loope
lret
aad
cwtl
mov
test
pushf
push
sbb
adc
mov
arpl
push
sbb
in
outsl
pop
aas
and
daa
ljmp
cli
pusha
xadd
push
xor
pop
xchg
imul
or
out
dec
stos
and
push
sub
fs
dec
jns
xchg
xorb
pop
adc
push
cmpsl
rcl
adc
call
xorb
divl
rorl
or
fistl
add
jg
push
cmp
inc
sbb
lods
sar
pusha
adc
pusha
insl
mov
mov
iret
fsubs
pop
insb
in
movsb
pop
mov
js
adc
int3
shl
loopne
imul
fsubrs
and
out
mov
arpl
scas
lfs
pusha
dec
or
or
mov
enter
mov
loop
ja
lret
fiadds
in
add
bnd
sbb
stos
cmp
mov
iret
lret
and
movsb
adc
aad
mov
test
dec
mov
stc
dec
cmp
or
ss
cli
xor
incb
mov
scas
sti
xor
xor
aaa
jg
pop
mov
xor
jbe
pop
js
or
rcrl
das
mov
dec
push
adc
push
cld
movsl
bound
ret
testl
push
sbbl
cmp
xchg
cmp
add
mov
aam
mov
inc
mov
testl
dec
add
inc
jp
pop
mov
stos
in
daa
cmp
mov
addr16
fdecstp
les
or
sub
mov
or
ret
mov
cmp
mov
test
xchg
bound
add
insl
mov
js
xchg
movsl
mov
fisttpl
lods
sti
push
in
lds
push
cmp
push
fwait
imul
test
aad
cld
hlt
outsl
and
add
outsb
mov
pop
in
xlat
fcmovnbe
dec
test
sbb
ret
sub
jmp
insl
inc
xchg
dec
push
repz
out
lods
add
sub
call
mov
sbb
mov
mov
dec
jmp
jno
daa
push
stc
add
add
pop
test
cmp
fcomp
enter
push
mov
or
mov
or
sbb
cld
xor
mov
cmp
sbb
jl
jle
cmp
imul
dec
shll
push
loop,pn
mull
mov
ret
das
lock
sbb
mov
mov
lock
jns
inc
xchg
xor
mov
je
faddl
xor
rcl
jae
inc
inc
pop
adc
gs
push
daa
cli
push
jnp
in
xchg
inc
lret
or
xor
add
xor
pop
leave
mov
enter
in
pop
cmpsl
sbb
mov
add
jp
or
out
stc
cwtl
movsb
cld
mov
fs
pop
adc
push
bound
repz
adc
push
fadds
loop
fwait
mov
sbb
or
jno
insl
sbb
test
ljmp
test
cmp
xor
lahf
push
add
negl
out
leave
es
pop
rolb
mov
sub
adc
push
pop
dec
or
push
daa
pushf
notb
jg
ror
jnp
int
out
cwtl
clc
loopne
or
pop
dec
inc
repnz
scas
scas
daa
dec
bound
jno
mov
decl
andb
roll
shlb
sub
cltd
idivl
imul
inc
stos
loopne
iret
mov
mov
dec
cltd
pop
test
inc
xchg
cltd
stos
sbb
push
insl
leave
int3
jmp
inc
mov
std
and
lods
in
xchg
test
sbb
add
insb
jns
cmpsl
mov
stos
sbb
shlb
idivl
sub
or
xor
in
sbb
shrb
jne
mov
sahf
repz
adc
inc
sbb
jge
ljmp
scas
xchg
movsb
ss
mov
push
inc
jg
push
test
jo
mov
and
sbb
lods
rcrb
shr
jg
mov
movl
fnstsw
test
dec
rcrb
mov
push
cmp
dec
inc
aad
add
jg
test
jnp
cmp
fiaddl
jnp
rcl
inc
pushf
jnp
inc
into
mov
mov
mov
sbb
push
lret
dec
mov
add
jo
xor
loopne
jo
dec
pop
es
dec
pop
mov
adc
test
imul
sub
andl
push
mov
cmp
pusha
inc
mov
push
mov
xor
in
into
sbb
cld
in
pop
fistpll
leave
fimull
mov
xchg
mov
adc
insl
in
push
gs
mov
jmp
mov
outsb
mov
jne
sti
jbe
inc
mov
pushf
mov
adcb
rcl
and
xor
add
adc
fs
je
inc
inc
push
push
movsb
mov
xchg
xchg
in
hlt
icebp
and
xor
add
adc
fs
je
inc
inc
push
push
movsb
movsl
mov
test
hlt
icebp
rcl
and
xor
add
adc
fs
je
inc
inc
push
push
movsb
mov
xchg
xchg
in
hlt
jno
inc
aam
and
xor
scas
add
adc
cld
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jmp
sbb
add
mov
gs
jno
popa
and
ja
bound
push
lds
mov
add
loop
rolb
jnp
movsl
and
jb
push
cmc
push
lds
push
lahf
inc
arpl
push
stos
cmp
xor
arpl
push
mov
xchg
and
popa
xorb
jo
push
mov
mov
add
and
mov
cmp
jae
mov
jno
ljmp
inc
stos
mov
fisttps
jp
rep
rorl
cwtl
loop
mov
xchg
pop
add
jp
xchg
mov
movsb
frstor
lea
out
or
and
xlat
adc
roll
jno
add
xchg
push
pusha
js
cmp
enter
ljmp
mov
in
add
loopne
xchg
aaa
pop
aaa
fisubl
lds
sbb
lret
in
push
add
testl
mov
adc
rolb
mov
xchg
adc
jl
push
frstor
out
and
in
jns
rclb
push
out
lds
arpl
sbb
add
jae
jbe
jns
aaa
andl
sub
data16
arpl
ja
outsb
movsl
add
add
loop
ret
jns
sub
jne
inc
ret
movsl
and
jb
cmc
push
lds
mov
mov
adc
rolb
push
xor
add
push
lds
mov
data16
js
sti
mov
in
cmpsb
push
ljmp
out
icebp
dec
cmp
pop
arpl
daa
ja
sub
mov
mov
aam
lds
inc
lahf
or
fidivrs
dec
lods
or
repz
movsl
jp
into
xor
ja
mov
in
inc
push
iret
mov
into
fimuls
mov
pop
or
push
push
repz
outsb
lock
jge
mov
jge
xor
shll
lret
sub
cmp
mov
mov
es
mov
int3
mov
inc
mov
xchg
xchg
arpl
lds
out
pushf
std
imul
xor
mov
adc
dec
and
sti
insb
sbb
xchg
dec
mov
fnsave
ret
push
sarl
fidivl
ja
sub
iret
pop
pop
rorb
mov
and
call
test
cwtl
stc
repz
lret
dec
mov
and
jp
in
push
dec
inc
mov
cltd
xorl
xor
and
cltd
adc
sub
mov
mov
pop
les
stos
test
sbb
aad
inc
out
in
add
and
and
ds
dec
xchg
rolb
pop
cmpsb
dec
in
push
jnp
insb
stc
movsb
dec
inc
mov
add
test
fbld
push
mov
push
insl
popf
out
pop
or
lahf
idivl
cltd
add
cmp
fidivl
mov
dec
fisubs
xor
dec
dec
push
dec
enter
test
je
lret
out
dec
aaa
or
sbb
pop
shlb
test
out
sbb
icebp
push
dec
ficomps
icebp
mov
ss
pop
ret
shll
popa
loop
and
jle
leave
insl
cs
nop
loope
popf
push
lods
popf
pusha
dec
leave
or
addl
rolb
arpl
and
push
cltd
mov
mov
sub
cld
pop
sub
cmp
outsl
cmp
pop
mov
stos
pop
pop
shlb
addr16
hlt
es
mov
xor
adc
xor
or
loopnew
mov
sub
sbb
xlat
fmul
nop
jge
test
and
sub
pop
lods
imul
lret
sub
cltd
xchg
push
xchg
or
push
jle
push
dec
dec
push
cmp
xor
jge
adc
add
movsb
out
popa
cmpsl
stos
leave
mov
pop
inc
or
iret
sbb
add
leave
out
shr
lods
or
mov
ljmp
add
pop
lods
mov
cmp
dec
imul
mov
inc
or
cmp
lcall
add
mov
ja
sub
rolb
inc
sbb
movsb
pop
push
dec
aaa
xchg
push
lahf
insl
inc
jnp
dec
jb
out
xchg
nop
in
psubusw
fistps
and
xor
fdivrs
sbb
mov
fs
mov
test
xor
dec
push
ret
inc
dec
mov
stos
mov
cmpsl
xor
ljmp
add
pop
test
pop
mov
out
mov
adc
push
shlb
dec
xchg
or
xor
test
jle
xchg
fistpl
and
test
fimull
filds
adcb
cmc
xchg
nop
repnz
pushf
xor
and
scas
daa
les
xor
inc
aad
gs
sbb
pushf
fnstsw
outsb
cmp
xchg
jmp
or
mov
fwait
inc
lret
mov
stos
mov
pop
leave
sti
xor
cmpsb
push
push
movsb
inc
mov
inc
pop
roll
inc
pop
xchg
xchg
out
je
sub
push
and
cli
lahf
in
testl
sub
fisubrs
add
jno
rcl
pop
test
mov
ret
mov
inc
sahf
in
lahf
xlat
jno
jg
popa
jg
and
dec
lret
jg
xchg
mov
mov
aam
ja
incl
push
mov
jb
sub
mov
aas
je
aas
mov
or
xchg
inc
pop
cmp
movsl
aaa
lock
ljmp
out
shll
xchg
or
add
sub
xor
fld
loope
and
dec
leave
lret
xchg
push
pop
in
xor
pushf
lods
enter
push
mov
push
into
mov
daa
cmpsl
ret
cmp
rcl
xchg
aad
subl
gs
mov
nop
and
jge
and
inc
je
mov
repz
pop
xlat
insb
xchg
das
adc
out
lcall
and
jns
add
cmp
cltd
add
call
fstpl
shrb
xchg
cmpsl
mov
not
sbb
mov
pop
mov
mov
cmp
dec
sub
push
pop
push
sbb
inc
xor
js
fisubl
add
xor
popa
and
ficomps
mov
popf
aas
arpl
arpl
push
test
cltd
mov
jnp
or
pop
fistpll
add
or
push
lods
jmp
inc
push
cmpsb
add
loopne
int
jmp
fiaddl
fbld
shll
cwtl
sbb
inc
pop
lret
inc
dec
pop
push
dec
push
loope
mov
stc
cwtl
insb
clc
xchg
xor
pop
xchg
or
mov
and
xorb
out
jmp
lods
xchg
mov
cmp
imul
rcrb
push
stos
push
pusha
out
fildll
out
mov
jb
cli
adc
aad
insl
or
and
sub
pop
cmc
in
lea
fldl
daa
inc
inc
or
sbb
mov
xor
stos
gs
xchg
int
outsb
fmuls
test
inc
es
ljmp
sbb
fistl
rorl
lret
aad
pusha
push
add
or
insl
sbb
xchg
int3
jae
cmp
ret
out
stos
sahf
inc
and
sti
scas
sub
repz
lea
js
lret
divl
mov
sarb
add
dec
xor
push
jae
xchg
repz
loope
dec
and
inc
push
or
push
or
dec
rcrl
addr16
cmp
sbb
in
and
adc
push
loope
push
mov
push
stos
add
mov
int
out
dec
sbbb
outsb
sbb
loop
push
mov
fsubs
xchg
lock
mov
dec
jae
daa
stos
outsb
movsl
pop
push
scas
fldl
mov
test
mov
xchg
hlt
subb
mov
push
and
addr16
pop
pushf
mov
jmp
fcmovu
inc
xorl
imulb
ret
ja
dec
inc
mov
scas
mov
lds
pop
sub
push
xor
lcall
xor
mov
inc
inc
into
movsl
add
adc
icebp
dec
or
mov
lcall
cs
popf
push
fucomp
xor
add
sub
fldpi
dec
aam
imull
xor
movsl
mov
and
lcall
jno
cmp
lret
hlt
stc
stc
xor
or
mov
cmp
movsb
add
cmp
xlat
cmp
xor
mov
cmp
sbb
repnz
sub
xor
and
xchg
insb
mov
and
dec
out
fdivl
scas
cld
dec
jle
daa
xor
sub
cli
jg
bound
out
xchg
inc
in
mov
push
pop
or
ss
loope
cmp
mov
into
lahf
sbb
stos
mov
adc
divl
adc
push
pop
adc
test
imulb
in
xchg
sbb
jne
or
cmpsb
xor
xchg
cmp
ljmp
jp
aas
sub
lret
lret
push
pop
mov
adc
insb
jle
or
cmp
stc
test
cmp
jle
adc
push
pop
cld
inc
lock
les
xchg
test
ret
ljmp
lock
sub
dec
scas
mov
jle
jno
mov
cltd
jmp
inc
out
ret
pop
pusha
cmp
xor
mov
add
js
shlb
mov
mov
insl
mov
push
add
push
pop
xchg
sahf
dec
mov
into
ret
and
pusha
popf
adc
lds
mov
add
sahf
lods
inc
jg
or
pop
jmp
or
repz
jo
sbb
ja
xchg
int
fs
call
out
mov
test
inc
and
push
fistpll
shrb
sub
test
add
xchg
lcall
jnp
shr
rolb
jecxz
push
adc
xchg
xchg
fs
repz
push
dec
push
inc
aam
jns
int3
sub
icebp
in
lret
imul
rcrl
cwtl
fidivs
fcomps
and
test
fnstenv
dec
andl
push
or
mov
fists
pusha
cwtl
and
lods
in
dec
pop
in
and
xor
popa
or
lods
mov
or
or
repnz
jmp
xor
sbbl
cmc
mov
stos
sub
xor
imul
mov
lret
imul
add
jmp
bound
loop
aam
add
cmp
test
cmpsl
xlat
scas
std
ja
sbb
outsb
add
ja
mov
cmp
cmp
jle
aam
out
enter
in
into
lcall
xor
leave
lret
add
loopne
add
inc
push
mov
lcall
xlat
and
out
dec
pop
xchg
cmp
cld
je
mov
mov
sub
and
negl
jle
inc
aam
cmpsb
mov
insb
arpl
fdivl
lahf
jge
cmpl
push
fistl
jp
test
mov
pop
test
lock
imul
or
rclb
shrd
pop
push
nop
xlat
push
stos
jb
fnstenv
lcall
fsts
sub
mov
push
ret
inc
insb
or
pop
pop
adc
pop
or
sub
push
pop
lret
lock
dec
push
mov
nop
into
or
mov
jmp
lods
jle
addr16
loop
inc
dec
sbb
leave
mov
out
mov
add
fnstenv
std
int3
cmp
mov
push
pusha
mov
push
and
cld
pop
sub
jns
mov
loopne
add
dec
sbb
mov
push
mov
mov
pop
dec
inc
sub
loopne
fwait
and
push
arpl
in
popa
pop
fistpll
or
push
push
enter
js
push
dec
ja
fistps
pop
add
mul
cltd
and
mov
jecxz
adc
imul
push
xor
out
adc
in
loop
adc
push
lcall
in
mov
inc
sahf
mov
jecxz
push
pop
fistl
adc
pop
inc
wrmsr
xor
insl
xchg
jbe
jecxz
push
mov
xchg
addl
lods
insl
jno
dec
push
lock
pop
dec
jl
aam
xchg
into
test
pop
adc
in
fcoms
mov
pop
std
mov
sbb
mov
pop
sub
lret
test
and
test
xor
push
push
movsl
bts
pop
ret
ficoml
mov
pushf
das
cltd
inc
data16
hlt
into
add
mov
xor
icebp
into
push
scas
clc
or
idivl
xchg
test
lret
cld
sub
pop
push
mov
lds
dec
mov
test
cmp
pop
movsb
insl
mov
stos
into
lods
ljmp
sahf
xchg
inc
shr
add
aas
xchg
push
neg
sbb
inc
add
lret
xchg
cmp
xor
pop
push
xor
ret
pop
test
in
add
or
mov
push
push
xor
cmp
sar
push
and
mov
bound
sub
push
mov
loope
xor
loopne
outsb
lret
mov
sub
mov
dec
jbe
jl
adc
jle
fsubrs
push
xor
aaa
cmp
lahf
or
push
push
mov
ret
dec
and
and
incl
mov
push
fs
push
hlt
cmc
aas
aaa
push
sub
inc
adc
mov
jmp
cmp
roll
inc
data16
and
ds
push
das
push
fisubs
cmpsl
in
shll
sub
fsubrs
push
aam
cmc
fldt
inc
out
inc
pusha
nop
cmpsl
es
loopne
fcom
sub
mov
and
lods
xchg
or
push
push
cld
rcrb
ret
shlb
jns
mov
adc
cld
sub
mov
xlat
outsl
pusha
pop
jmp
std
pop
xlat
out
ja
sbb
jb
lret
lret
stos
sbb
roll
xchg
xchg
push
test
or
icebp
mov
xor
inc
inc
lock
mov
mov
out
jb
cmp
lcall
ds
push
out
fiadds
jb
stos
mov
lods
or
mov
testb
sub
or
pop
ret
adc
jle
mov
stc
xchg
in
enter
add
mov
lea
mov
dec
sbb
sub
in
or
dec
xchg
mov
inc
sbb
xchg
popf
popf
mov
xchg
dec
sbb
push
or
int
ds
sub
xchg
rorb
xor
rorl
scas
jae
pop
xchg
mov
or
sub
cmpsb
popf
xchg
loope
dec
jmp
dec
nop
test
cwtl
nop
jle
repz
cmp
jnp
int
sbb
lret
add
jns
fwait
ljmp
arpl
add
cmp
clc
icebp
push
and
cmc
out
mov
push
loope
xorl
jle
adc
xor
mov
and
mov
mov
xor
push
xchg
pop
das
aas
jmp
jns
sarl
sub
sbb
pushf
lcall
inc
pop
dec
sahf
jo
sbb
sub
push
outsl
bound
leave
pop
xchg
cmpl
dec
xchg
xor
pop
fsts
mov
loope
push
test
xchg
inc
in
into
adcl
test
std
cmp
dec
lcall
les
aad
arpl
movsb
bound
add
pop
cmc
mov
xchg
jg
js
aas
fsubrl
cmp
pop
xchg
stc
push
popf
outsl
sub
das
mov
ret
cmpsl
or
mov
or
lods
scas
cmpsb
cmp
push
jo
pop
push
lods
fnstcw
test
icebp
sub
inc
jbe
fdecstp
dec
xor
repz
sahf
add
pop
inc
imul
adc
test
sbb
lret
sbb
jge
repz
roll
jnp
push
cmp
push
cmpsb
dec
ja
or
add
pop
xchg
aas
cwtl
cs
xlat
aam
inc
shl
and
inc
or
pop
push
lret
loopne
andl
stc
roll
dec
int
in
adc
xor
xor
cli
in
add
adc
xchg
in
dec
mov
ss
enter
mov
or
jg
pusha
inc
mov
test
out
rorb
iret
mov
les
loop
les
loope
movsl
out
aad
dec
sub
adc
enter
xchg
pusha
in
test
test
and
mov
fwait
xchg
and
cwtl
loope
pmaxsw
test
xor
pop
fnstenv
test
ss
das
jns
and
bound
push
mov
loope
ret
mov
sub
dec
movsl
adc
push
sbb
jo
jno
jne
enter
pop
or
dec
dec
fcmovb
cmpsl
frstor
push
dec
nop
fldenv
mov
es
xchg
mov
cld
repz
or
movsl
jnp
jns
xchg
mov
ret
push
leave
mov
xchg
fimuls
dec
mov
or
jge
aam
movsb
cmp
test
or
jge
dec
test
imul
sub
dec
jno
mov
xchg
icebp
bound
inc
adc
cwtl
pop
or
pop
add
cld
fld
ss
pushf
push
lods
scas
cltd
mov
sbb
and
inc
mov
xor
lcall
fmulp
lds
pushf
frstor
lock
cmp
inc
mov
cmpsl
push
ds
daa
mov
lcall
icebp
sbb
roll
pop
mov
mov
jle
call
mov
mov
loop
adc
dec
insl
movl
hlt
mov
test
sub
pop
aam
loope
into
and
sub
pop
imul
in
push
cmc
scas
dec
clc
int
cwtl
push
std
sbb
jns
adc
loopne
push
aad
ss
test
adcl
nop
jb
rcrl
mov
jle
xchg
fnstsw
pusha
lods
mov
lds
cmp
lock
cmpsb
mov
pushf
clc
fstpl
in
rclb
xor
jo
lret
add
inc
push
push
jl
ja
in
mov
in
add
outsb
lcall
mov
mov
cmp
test
xchg
mov
jmp
xchg
insb
xor
pop
and
adc
push
out
mov
cmp
push
out
movsb
cmc
movsl
add
fdivs
movsl
xchg
pop
jg
leave
push
loop
lock
and
nop
pop
sub
sbb
roll
movsl
mov
pop
push
and
das
cmpsb
xor
push
cmp
cwtl
push
adc
roll
lret
scas
xlat
jle
in
incb
inc
std
xor
in
sarb
jb
pop
push
jbe
cwtl
cs
jne
push
in
xchg
adc
cmp
imul
cmpsl
fcomps
outsb
std
mov
inc
out
sti
shll
add
clc
pop
and
jl
mov
mov
loopne
adc
iret
sbb
xor
cmp
mov
fistl
add
sar
iret
mov
sub
ss
andl
mov
bound
pushf
dec
fnstcw
cmpsb
or
jns
mov
in
jecxz
notb
or
popa
jge
push
lods
insl
or
popa
jno
xchg
adc
pop
pop
out
in
dec
aam
daa
outsl
sbb
lcallw
or
jp
jno
sahf
or
sbb
in
push
cmpsb
out
jns
js
negb
and
lret
fnstcw
mov
pop
sbb
hlt
push
push
stos
cmp
sbb
cmp
int
sbb
das
neg
lret
jae
lret
push
hlt
lods
or
mov
inc
mov
aam
inc
push
and
fcmovnb
pop
and
jnp
adc
mov
mov
rcll
int3
js
cli
and
xor
popf
push
jp
scas
in
dec
xor
mov
pusha
in
push
mov
std
or
mov
and
inc
lahf
mov
int3
pop
sub
out
mov
dec
cmp
rcl
xchg
lret
mov
insl
cwtl
loope
or
cmpsl
xchg
inc
addr16
loop
add
push
mov
push
jp
jo
jge
ljmp
inc
and
mov
push
push
add
mov
rorl
fs
sahf
repnz
cmpb
dec
cmpsb
fbstp
into
xchg
add
mov
out
add
lds
rorb
addl
popf
jnp
push
scas
stos
mov
push
mov
pop
adc
out
ds
jbe
hlt
cmp
dec
ljmp
sub
xor
push
pushf
xchg
jle
dec
ficompl
mov
adc
xchg
mov
addr16
idivl
add
rcrb
mov
xor
insb
lret
insl
out
fisttpll
mov
std
repz
dec
add
lods
adc
pop
mov
fnsave
cltd
ret
out
jae
jnp
roll
adc
ss
sbb
add
daa
dec
dec
push
shll
adc
jns
fstpl
adc
insl
inc
push
add
pop
cmp
outsb
in
shll
in
xor
int
in
or
jbe
xchg
mov
sub
or
les
dec
mov
cmpsl
xchg
mul
or
xlat
dec
push
pop
inc
xor
mov
lahf
imull
out
cs
sub
cwtl
int3
in
ljmp
sbb
add
dec
push
sub
pop
pop
add
bound
subb
hlt
push
popa
lods
push
cli
incb
push
test
cs
xchg
mov
je
into
xor
loopne
iret
or
mov
mov
lret
jbe
adc
popf
pop
xchg
adc
xor
adc
rcr
aam
cld
add
pushf
fwait
out
ss
subl
or
loopne
pop
fimull
lock
pop
popf
and
xor
divl
adc
jno
dec
adc
mov
sub
fstl
sbb
jae
jbe
pop
cs
cmpsl
push
pop
xchg
imul
xchg
push
inc
mov
daa
pop
dec
mov
inc
xor
dec
xor
rorl
jmp
imul
adc
rorb
dec
sbb
bound
fs
xor
add
xor
xor
sahf
adc
rolb
push
xor
add
push
lds
mov
mov
adc
rolb
push
xor
add
push
lds
mov
mov
adc
gs
rolb
push
movsb
and
jb
jnp
push
int3
jb
stos
rorl
repnz
lds
xor
pop
mov
popf
ljmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
xchg
inc
js
dec
addr16
fimull
jne
pop
inc
sub
hlt
neg
out
xchg
test
mov
push
push
addr16
pop
sub
cmp
or
sbb
ljmp
push
lret
xchg
mov
js
push
addr16
pop
xor
and
adc
add
or
ret
out
xchg
jmp
leave
cwtl
or
adc
or
faddp
mov
cmp
mov
or
int3
es
inc
ret
je
ret
pop
xor
cwtl
movsb
call
sbb
sub
adc
fcomps
fsubrs
xchg
loopne
sub
pop
xchg
dec
pushl
adc
jle
cmp
xchg
cmp
je
pop
mov
cmpsl
cwtl
push
cmp
sbb
or
clc
mov
daa
out
mov
lea
push
add
cltd
xchg
mov
mov
mov
bound
aas
gs
clc
jb
lcall
mov
cwtl
mov
in
xchg
aad
cmc
fnstcw
jmp
iret
enter
int
ja
mov
pop
addr16
pop
sub
cmp
adc
add
lock
loopne
shl
rcll
cmpsl
cld
push
or
push
pop
pop
jle
push
push
fs
xor
lahf
mov
lds
cmc
xor
and
cmp
pop
pop
pop
inc
or
jne
mov
xchg
cltd
cmc
mov
jmp
std
xor
inc
sbb
pop
inc
pop
cmp
or
sbb
call
out
xchg
test
mov
push
push
addr16
pop
sub
cmp
or
sbb
call
out
xchg
test
mov
push
push
dec
dec
jmp
mov
lock
inc
adc
notb
jbe
xor
dec
cmp
xor
push
dec
movsb
xchg
lock
int3
rorl
push
mov
mov
es
enter
in
bound
es
xchg
push
xchg
xchg
adc
mov
xor
rol
scas
add
pop
jne
adc
push
pop
sub
sub
cmc
dec
dec
mov
out
ljmp
lods
cmpsl
pop
stos
repz
les
popf
dec
notb
mov
adc
enter
xchg
test
bound
or
out
cwtl
push
fistpll
das
and
out
mov
scas
iret
push
pop
arpl
dec
mov
lds
je
inc
shlb
adc
or
cmp
into
lret
xchg
or
aam
and
mov
sub
out
das
inc
test
fs
and
and
push
mov
inc
and
loope
or
mov
mov
cmc
cmp
jae
xchg
bound
clc
movsl
inc
mov
adc
into
mov
outsl
test
roll
inc
xchg
sub
pusha
in
or
in
rolb
mov
push
xorb
xchg
lret
into
lods
out
sub
pop
imul
leave
lea
pusha
add
sti
jns
mov
ss
ret
in
outsl
jp
scas
or
roll
sbbb
lret
xchg
xchg
push
ljmp
push
mov
int
jg
sub
or
jno
mov
jmp
mov
in
mov
xlat
cmpsl
js
add
and
movsl
mov
test
pop
popf
xor
mov
and
xchg
pop
or
es
fisttpll
pop
lds
push
lcall
fstps
into
je
xor
ret
adc
push
add
insl
jg
mov
dec
dec
push
cltd
int
and
cs
stc
xchg
push
pop
jmp
xor
and
cld
js
push
dec
test
pop
aaa
sbb
mov
mov
mov
lock
and
cmpsl
test
adc
and
mov
mov
add
test
xchg
mov
inc
sbb
clc
or
xor
xor
push
push
inc
enter
shll
mov
or
lret
sub
cmp
dec
mov
lods
mov
push
cmp
add
aad
outsl
pop
sub
mov
lahf
lret
filds
scas
loopne
cltd
jmp
stc
pop
sub
lret
jmp
subl
mov
xchg
dec
fucomi
cwtl
aas
dec
repz
xrelease
lret
push
scas
movsl
jl
xchg
pop
and
sub
out
sub
push
and
dec
sahf
pop
sub
dec
lock
or
repz
lret
pop
cmp
dec
push
dec
fldl
xor
loop
push
dec
ret
pop
cld
aam
pop
add
jg
movsb
mov
ja
mov
daa
cmp
mov
sbb
pop
xor
cltd
in
cmp
fsubl
call
outsb
test
push
ja
adc
lods
cmc
icebp
decl
mov
ficoms
xchg
sub
mov
inc
xor
mov
std
add
dec
sbb
iret
hlt
sub
cld
call
insb
fldcw
inc
dec
sbb
mov
mov
xlat
sub
les
loop
jl
ljmp
push
jp
test
dec
imul
fnstsw
adc
movsb
cltd
mov
movhps
xchg
in
sbb
les
and
scas
xor
xlat
dec
pusha
cmp
cltd
sub
loop
jbe
jne
dec
sbb
push
stos
mov
loope
jne
std
cmp
bound
mov
out
leave
rcrl
cld
popf
leave
sbb
out
sub
xchg
inc
movsb
cs
mov
les
cs
xchg
shlb
fistpll
mov
rclb
fs
sbb
bound
mov
les
out
icebp
xchg
jmp
jg
and
and
pop
mov
iret
pusha
popa
test
insl
inc
sub
mov
push
lcall
test
data16
sbb
aaa
pop
dec
cmp
xor
dec
inc
dec
xor
aad
and
sbb
mov
fidivrs
rcrl
cmp
cmp
jg
popa
mov
xchg
enter
call
mov
sub
insl
pop
sbb
adc
adc
imul
push
sbb
jb
addr16
add
dec
inc
jo
push
ss
dec
jne
sub
rcll
mov
sub
stos
insl
jle
mov
jmp
pop
cmpsl
mov
movsl
push
xor
out
sub
repnz
add
jg
les
fcoms
fwait
sub
xchg
mov
repz
js
lahf
or
lea
cld
mulb
pushf
js
mov
sub
pushf
jle
and
mov
lea
and
call
xchg
or
lock
add
adc
sbb
adc
cmpsl
push
jmp
out
lret
out
jmp
scas
shlb
mov
data16
mov
scas
scas
inc
lret
sub
je
jg
push
fwait
inc
mov
aam
imul
std
std
lods
imul
lock
mov
ficoms
inc
ficoml
or
andb
pushf
sbb
push
addl
push
ss
fisubrs
mov
fs
subl
scas
rcll
ret
dec
cmpsl
push
jo
repnz
mov
dec
rorb
push
or
ds
xor
mov
xor
cmpsl
in
aad
test
sub
ret
cwtl
inc
jecxz
sbb
sbbb
out
mov
xchg
movsl
dec
loop
cs
push
xchg
lods
scas
cmp
xchg
insl
inc
pop
mov
jbe
mov
sub
and
scas
or
roll
enter
dec
and
cmp
mov
test
pop
popl
dec
loopne
pushf
xchg
mov
mov
and
sti
adc
cmpsb
push
fcmove
and
jbe
dec
fcmovnb
pop
adc
push
fildl
cmp
sub
fsub
lds
push
xchg
fmulp
sbb
mov
ljmp
mov
push
inc
or
mov
push
or
push
fsubrl
and
push
pusha
add
leave
or
jns
fldl
mov
insb
pop
pushf
push
lods
mov
or
test
ds
fstps
scas
js
push
cmpsl
fldl
sarl
cmpsl
xchg
ljmp
rcrl
clc
mov
inc
mov
jp
mov
sarl
inc
mov
inc
jae
xor
adc
pop
xchg
daa
call
jp
sar
adc
mov
mov
adc
push
lret
jl
bound
fcoml
or
adc
mov
xchg
lahf
pop
in
dec
mov
xchg
inc
dec
stos
sarb
outsb
shr
push
push
or
pop
mov
mov
xlat
cmc
aam
enter
mov
lds
out
ss
mul
fisttpl
lods
inc
imul
sbb
lahf
jnp
popf
ret
rorl
pop
cltd
pop
cmpsl
xchg
inc
into
inc
ja
dec
mov
xchg
mov
outsl
orb
and
rcr
add
mov
repz
je
add
fsubrl
adc
mov
out
sbb
aas
mov
and
test
shl
lds
jb
xor
popf
scas
push
call
cs
push
inc
sahf
dec
out
arpl
push
fbstp
movb
xchg
xor
cmp
mov
xor
xchg
sbb
mov
push
xor
rcrb
stc
shll
pop
fcomip
imul
push
idiv
dec
mov
xchg
adc
sub
mov
imul
dec
jo
sbb
dec
xchg
inc
mov
inc
stos
and
scas
dec
jg
inc
jl
les
mov
dec
xor
add
lahf
mov
sbb
scas
xchg
cmp
push
mov
pop
pop
xchg
pop
fcoms
mov
aad
imull
aas
incl
or
inc
sub
in
and
and
xor
imulb
out
adc
and
dec
jmp
pop
xchg
std
mov
cld
add
loop
filds
jb
les
sbb
scas
aas
or
shll
pop
rcr
fidivs
xlat
fiaddl
movsb
add
shr
icebp
in
sti
lcall
jno
inc
pusha
jno,pt
not
mov
shlb
and
sbbb
add
sahf
jle
mov
bound
inc
jle
push
popa
jo
sti
xchg
pushf
jg
nop
mov
scas
sbb
sbb
loope
mov
jecxz
jmp
cmp
repz
or
jns
or
icebp
aaa
adc
inc
fsubrp
popf
xor
ljmp
jp
and
scas
in
stos
mov
bound
inc
stc
dec
or
rcr
xchg
push
decl
cmpsl
and
or
or
sub
mov
cmp
push
adc
lods
lret
aaa
fcoms
jbe
inc
xchg
push
test
fdivl
mov
cli
test
clc
jne
ljmp
les
ficoml
testl
cmp
stos
dec
xlat
or
sbb
lods
dec
push
cmp
ret
shl
sbb
ljmp
in
leave
stos
sbb
jb
in
mov
pop
mov
dec
dec
xor
repz
push
mov
rorb
loop
mov
push
and
dec
jl
bound
loop
nop
and
xor
cld
mov
jmp
jnp
ja
jp
mov
cltd
stc
stc
shl
jno
push
ljmp
mov
movsl
cmpsl
mov
xor
cmp
fisubrs
lods
sbb
mov
push
cli
jns
dec
pushf
cmpsl
lods
call
in
or
mov
stos
fidivs
sub
sub
jb
insl
push
hlt
jge
shl
cltd
lcall
xlat
shl
jle
sbb
xor
xorb
pushf
cli
bound
sub
xchg
jno
out
adc
dec
in
mov
inc
inc
dec
push
and
test
test
dec
orl
fcmovnu
in
push
jns
pop
and
push
or
mov
mov
xchg
es
inc
test
pop
iret
xchg
adc
pop
repnz
mov
call
xchg
mov
dec
add
pop
fsubs
sub
mov
lock
jle
dec
js
or
aaa
insb
pusha
jge
pop
fcoml
in
add
push
mov
stc
cmpsb
cmp
movaps
push
xchg
sub
mov
xchg
out
sbb
subb
mov
adcb
cmpsl
inc
or
call
les
sub
sti
inc
jecxz
out
mov
call
orl
pop
sbb
inc
jns
fadd
adc
sbb
aam
dec
sub
repnz
aas
jmp
push
into
jmp
or
and
cmc
subb
les
and
mov
mov
adc
aas
mov
jo
pop
test
cmpb
xlat
xor
cmp
jmp
adc
xchg
fs
add
jbe
xchg
xor
std
fisttpll
xchg
arpl
addb
fcmovne
mov
xchg
popf
arpl
sahf
pushf
mov
jecxz
mov
jp
mov
push
mov
gs
adc
jns
scas
mov
cmp
xor
inc
loopne
lea
jecxz
pop
inc
inc
je
mov
push
into
stc
push
inc
xlat
xchg
jmp
sbb
cmp
outsb
pop
sbb
movsb
aas
adc
sbb
in
mov
loopne
push
cld
add
jge
mov
sub
repz
test
adc
mov
add
fs
inc
xor
push
mov
push
andb
jo
cs
sbb
adc
enter
dec
adcb
mov
nop
jns
mov
repnz
scas
cmp
inc
or
stc
xor
movsb
je
out
jbe
cli
cs
lret
pop
std
dec
in
cltd
inc
push
xor
push
sahf
mov
or
int
lret
mov
fnstsw
xchg
bnd
jnp
push
jl
shlb
and
mov
mov
add
mov
add
in
fadds
inc
inc
fildl
ror
test
testl
aaa
aas
int3
sub
popa
xor
inc
add
dec
push
es
add
dec
adc
add
mov
cmp
stc
xor
in
jmp
and
xor
mov
lret
adc
pop
dec
push
jmp
mov
pop
and
enter
inc
add
xlat
movsb
inc
out
jmp
inc
pop
scas
dec
fwait
mov
cmp
sub
xor
out
sub
cmc
inc
out
push
cmp
lock
cltd
mov
movsb
into
mov
pop
push
out
push
cmpsl
jbe
push
xlat
inc
nop
mov
out
xchg
pop
or
divb
xor
aad
and
std
in
arpl
inc
push
xor
jecxz
hlt
enter
push
sti
pop
or
pop
out
pop
mov
incl
jl
push
cmc
inc
lock
xor
pop
push
call
pushf
inc
push
cmp
inc
or
jle
mov
pusha
sbb
add
fwait
mov
std
add
mov
xchg
push
push
xor
mov
push
popf
add
test
jle
bound
inc
push
cmp
insb
xchg
lea
les
shl
in
int3
ss
dec
std
jmp
mov
das
and
adc
imul
mov
xlat
lea
pop
das
aaa
sbb
sbb
pushf
pop
repz
or
imul
sbb
fstl
adc
mov
in
mov
fwait
loope
iret
ja
cmp
movsl
cmp
pop
incl
adc
sub
out
iret
sahf
cvtps2pi
outsl
fs
sti
jp
xor
jbe
andl
and
inc
lds
add
lret
inc
cs
jge
cmp
jecxz
outsb
and
inc
mov
sbbb
into
neg
pop
dec
es
push
cwtl
pop
test
sbb
or
inc
push
push
or
rcll
mov
xchg
negl
stos
mov
xchg
cli
mov
pusha
cmpb
cltd
cmp
xchg
push
sub
lock
pop
fs
pop
cmc
pop
jns
jle
jmp
mov
add
dec
shlb
xor
pop
in
in
mov
xchg
or
adc
add
jno
xchg
mov
fisttpll
xor
in
jle
jo
jl
sbb
addr16
jge
ret
movsb
ds
pop
andl
xor
scas
inc
inc
jge
xor
leave
add
push
dec
notb
xor
sub
pop
ljmp
fcmovnbe
imul
loope
pop
das
cltd
xor
xor
inc
and
lea
cmc
sub
movsb
jl
fisubl
test
inc
push
jb
out
shl
aad
call
inc
xchg
loop
inc
pop
xchg
call
push
sbb
mov
outsb
mov
mov
in
mov
inc
test
jl
lods
ds
iret
rol
jb
rcrb
add
adc
and
in
dec
pop
add
aad
es
cltd
jo
mov
mov
jno
xor
ret
and
inc
insl
in
popa
pop
jo
or
and
mov
jne
fcomi
mov
nop
sbb
xchg
fbld
popl
fcom
lahf
xchg
cmpsl
add
xchg
stos
out
mov
add
cltd
outsb
leave
mov
mov
das
aas
fldl
outsl
mov
add
xchg
rcrb
pop
pop
flds
xchg
sub
add
movl
adc
movsb
insl
jecxz
stos
sti
and
jne
jne
pop
cmp
lret
push
lds
pusha
adc
xor
jecxz
pushf
xchg
loope
inc
inc
jo
sub
ds
cmovnp
pop
repnz
cld
addb
mov
stc
push
and
jno
dec
arpl
ret
xchg
and
xor
push
ret
scas
cmp
movsb
js
mov
or
iret
adc
sahf
sbb
outsl
xchg
jg
jmp
nop
inc
shlb
lds
notb
mov
mov
sub
iret
xchg
fldt
dec
hlt
stos
daa
movsl
lret
jnp
jge
cwtl
mov
push
aaa
add
xor
enter
scas
pop
les
in
mov
repz
imul
push
gs
jp
int3
add
roll
je
rcll
sbbl
int3
or
aad
mov
shrl
in
pop
inc
ret
les
push
inc
leave
jl
mov
sbb
cmp
mov
adc
push
inc
es
addb
sub
mov
ficompl
in
sub
addr16
jge
ja
stos
insl
xchg
mov
call
or
jb
pop
shrl
and
add
int3
and
xchg
ret
cmp
mov
enter
dec
xlat
aas
inc
fstps
jns
xchg
es
jbe
bound
pop
jno
ret
int3
stc
cmc
sbb
inc
incb
shl
out
test
inc
stc
mov
and
fnstcw
sbb
popf
xor
push
add
imul
sbb
sbb
lcall
xlat
pop
adc
out
push
movsl
pusha
push
lods
ja
jg
mov
sub
repnz
mov
cltd
jno
xchg
outsl
xchg
lods
in
cmpsl
enter
mov
mov
stos
jg
sub
insb
ret
cltd
add
scas
test
lds
add
xor
mov
or
mov
xor
xchg
das
fcmovnbe
aas
filds
jno
out
jp
mov
movsl
sub
xchg
cmpb
mov
adc
add
in
inc
sbb
cmp
test
call
sar
sbb
push
pop
sbb
in
pop
add
loopne
fistpl
cltd
xlat
mov
inc
in
mov
mov
dec
ret
dec
pop
scas
les
dec
push
jg
xlat
rolb
inc
xchg
pusha
fisttps
inc
int
in
cmpsb
popa
sbb
sti
orl
xchg
xor
pop
ret
leave
popa
shll
sub
fnsave
jbe
mov
ffree
js
fstpt
mov
int3
sbb
jle
outsl
jecxz
ficoms
fstp
dec
mov
imul
mov
mov
fldl
pop
push
push
ljmp
mov
loopne
decb
or
lret
mov
dec
jmp
insl
cmp
xchg
pushf
fcoms
ss
jb
sbb
in
scas
nop
mov
test
and
icebp
lods
pop
mov
pushf
rclb
mov
mov
cld
fldl
dec
adc
cmp
xor
mov
dec
pop
out
sub
out
clc
jne
ja
ljmp
inc
cmc
sub
or
mov
xchg
mov
sahf
bound
imul
movsb
mov
cmp
inc
or
xchg
jnp
mov
cmp
mov
mov
or
int
scas
cmp
cmp
xchg
add
and
sub
lock
jle
fs
adc
push
rcll
sub
out
dec
jo
add
xchg
inc
or
les
mov
nop
mov
mov
int3
out
jp
mov
inc
fisubs
mov
lea
cmp
mov
push
lea
xchg
fwait
cmc
aam
jnp
into
or
and
adc
test
add
add
imul
sbb
loopne
jl
in
push
jae
stos
insl
repz
mov
sete
sub
cmp
sbb
ja
xchg
and
push
inc
dec
and
prefetchnta
cli
xchg
push
aaa
ret
je
jb
or
repnz
ja
push
insb
mov
xlat
nop
lods
fistpll
je
cmp
icebp
inc
or
adc
xchg
test
adc
xchg
mov
aam
lods
aam
movsl
nop
cmp
fsubrl
das
sbb
cmpsl
js
and
sbb
jo
sub
call
lret
add
add
aaa
imul
add
repz
iret
xlat
loope
and
adc
pusha
jp
in
fistpl
into
adc
mov
jb
icebp
popa
push
jne
lahf
cmp
rclb
jbe
ret
mov
in
out
aas
sti
mov
pop
mov
testl
dec
sbb
xchg
jmp
xchg
cmpsl
subb
cmpsb
clc
in
fistpll
lret
or
jne
and
ret
popa
in
pmullw
scas
jl
mov
mov
cld
cmpsl
push
dec
and
xchg
out
mov
outsl
mov
sbb
rcll
cmpsl
dec
lea
sub
lods
jnp
or
jle
sub
scas
mov
cld
cmp
or
inc
mov
rorb
xlat
jecxz
and
xchg
inc
mov
lock
stos
push
xchg
fsubs
add
mov
pop
adc
mov
and
xor
sbb
pop
aam
std
fdivr
in
in
cmovg
cmpsl
addr16
pop
sub
cmp
or
sbb
call
out
xchg
test
mov
push
push
addr16
pop
sub
cmp
or
sbb
call
out
xchg
test
mov
push
push
addr16
xchg
sub
cmp
or
clc
test
xchg
push
push
addr16
pop
sub
cmp
or
sbb
call
out
out
testl
inc
fisubrs
mov
in
mov
aas
mov
femms
jg
insl
cs
cs
stos
mov
decb
scas
fistpll
nopl
dec
adc
outsl
cs
ds
jbe
sub
jl
lea
xor
dec
push
inc
sbb
insb
push
jp
bound
mov
xchg
fimull
ret
xchg
pop
or
dec
dec
sbbl
sub
cmp
and
mov
mov
lahf
xor
jmp
sbbb
jle
lods
cs
rol
mov
call
xlat
cmpsb
jns
inc
sbb
jle
push
pop
pop
outsl
out
add
jg
mov
jno
sahf
xchg
mov
jg
sub
nop
das
mov
sbb
stos
roll
int3
arpl
jb
push
stos
and
insb
fnstsw
outsb
fdivrs
cmovnp
outsb
dec
xor
out
mov
mov
mov
mov
jge
pop
inc
out
mov
cmpl
cs
cmp
pop
out
sbb
test
out
scas
add
jmp
inc
push
adc
sbb
and
faddl
sbb
mov
push
imul
jl
jo
inc
push
pop
cs
out
pushf
lahf
stos
out
sti
fcompl
jmp
sub
jns
jp
push
inc
jg,pt
mov
iret
lods
in
fstpl
mov
das
outsb
pop
jle
push
jg
outsl
cs
ds
into
mov
decb
scas
fistpll
das
outsb
pop
jle
push
jg
outsl
cs
ds
into
mov
mov
rolb
inc
or
sbb
cwtl
jno
push
loope
jbe
mov
imul
pop
lods
xchg
loopne
stos
sbb
push
or
clc
pop
orb
stos
mov
mov
insb
mov
lock
adc
loope
dec
xor
shl
mov
lods
sub
dec
sbb
sub
aaa
pop
jbe
or
pop
jmp
xor
testb
popa
pop
pop
sbb
xchg
fbld
mov
push
jge
xchg
mov
xor
cmp
jecxz
in
ljmp
xchg
jb
mull
stc
ja
or
insb
rclb
in
insl
sbb
jle
xchg
push
add
nop
or
cmpsl
hlt
inc
std
nop
push
fadds
test
mov
idivb
insl
ds
dec
xor
or
mov
in
push
out
sub
adc
cwtl
sbb
repz
mov
rcrb
test
pop
mov
flds
adc
inc
and
stos
cmp
dec
mov
clc
sbb
retw
dec
sbb
in
push
aam
and
dec
insb
popa
add
pop
insl
addl
push
cmp
ljmp
xchg
out
loope
mov
jno
cmpl
cmpsl
push
scas
fs
sbb
scas
test
pop
outsl
and
inc
mov
xchg
sti
adc
dec
mov
icebp
sbb
mov
stos
shll
xchg
js
mov
std
mov
addr16
and
pop
hlt
adc
xor
arpl
roll
cmc
cli
js
mov
das
stos
xlat
sti
out
hlt
push
ja
mov
jmp
add
lret
mov
push
mov
sahf
mov
test
fwait
inc
or
call
sahf
jb
add
fildl
or
inc
sbbl
stc
jbe
insb
or
pop
or
out
inc
cmc
cs
dec
arpl
mov
pop
lds
mov
push
and
outsb
dec
les
mov
sti
outsb
in
add
pop
jg
sub
jp
fsubr
aas
and
push
dec
jmp
in
imul
mov
mov
mov
enter
push
or
pop
jb
push
jl
jnp
sub
cmpsl
stc
std
dec
icebp
out
jp
inc
push
or
loop
lds
es
or
mov
jo
test
scas
push
pushf
stos
enter
mull
inc
rcll
inc
cwtl
jnp
fldl
add
mov
jns
lret
sub
out
mov
jbe
leave
out
cmp
xor
push
nop
mov
mov
mov
fistps
push
sarb
mov
push
mov
stos
cmp
lret
xor
sbb
cmp
xchg
sub
mov
mov
push
test
stos
out
imul
call
or
pop
or
mov
in
jle
icebp
les
outsl
push
xor
xchg
push
ljmp
push
push
jne
jecxz
sub
test
mov
movntps
mov
shlb
icebp
mov
sub
mov
fisttpl
cmpsb
dec
and
push
stos
out
cltd
repnz
ja
sarb
pop
mull
and
or
into
rcl
ds
jmp
test
stos
ret
pop
fdivrl
clc
lods
xor
add
sbb
fiadds
sarl
dec
inc
scas
gs
push
scas
mov
sbbl
out
push
or
enter
lock
jg
push
inc
nop
xor
pop
mov
shlb
scas
and
movsl
test
movsl
sbb
arpl
jp
sarl
pop
jae
push
enter
lret
xchg
push
mov
lret
lahf
test
loopne
das
sbb
les
pop
mov
ret
mov
sbb
jle
add
xchg
inc
clc
outsb
int3
outsl
das
les
or
scas
mov
or
lcall
cli
dec
repz
out
xchg
dec
mov
lods
xchg
push
fs
cmp
mov
mov
mov
stc
and
or
je
cmp
fs
lods
push
fwait
jns
lret
ret
push
sub
cmpsl
xchg
lret
push
aaa
and
add
mov
mov
add
rcll
addl
addr16
rorl
jns
cmp
pop
scas
imul
push
cwtl
bound
pop
cmp
sub
xor
sahf
pop
push
in
mov
xchg
ret
aad
insl
add
ret
and
inc
call
lds
lea
mov
std
out
and
adcl
mov
adc
jo
insb
sbb
loope
scas
cmp
cmc
into
popa
inc
lods
mov
pop
fstp
icebp
pop
call
add
cli
add
pop
addb
xor
sub
iret
adc
push
xor
push
mov
xor
icebp
lods
dec
jb
push
mov
int
pop
xchg
add
decb
sub
sahf
cmpsl
data16
loope
repnz
jmp
imul
mov
sub
cmp
std
jno
js
sub
sbb
scas
test
out
mov
jmp
hlt
add
adc
mov
mov
mov
mov
pop
mov
and
sub
iret
mov
js
cmc
iret
push
and
nop
jbe
inc
push
test
mulb
cmp
aaa
pop
cmc
adc
dec
pop
dec
lret
fxch
arpl
push
lods
imul
inc
mov
ljmp
out
jns
mov
mov
insb
cwtl
pop
testl
int
pop
enter
and
cmc
xor
icebp
imul
sub
jbe
pop
cmpsl
sahf
gs
sub
xchg
sub
jb
aaa
adc
test
sbb
push
jle
shll
add
test
jle
jl
cmp
xchg
lcall
in
test
lahf
adc
outsl
cmp
add
lret
push
or
adc
push
cmc
scas
divb
jmp
dec
daa
and
movsb
push
add
orps
jge
or
sub
cmp
sbb
pop
dec
mov
cmp
or
ja
inc
leave
cltd
push
mov
pop
orl
pop
xor
das
xchg
out
jl
adc
outsl
js
or
inc
dec
xor
push
xor
fs
push
lahf
xor
sbb
and
cmp
cli
pop
daa
sub
add
jnp
test
mov
mov
mov
cmpsb
or
inc
add
je
lcall
stos
pop
dec
mov
xchg
leave
ja
mov
imul
inc
outsb
sbb
call
fiadds
dec
push
shlb
lcall
popa
or
dec
ljmp
fcom
in
into
subb
in
sub
arpl
xor
test
mov
sbb
sti
and
dec
mov
pop
sub
adc
lods
iret
jg
ljmp
mov
jg
mov
cmp
cmpb
jge
cmp
or
dec
imul
es
lcall
shlb
loopne
adc
mov
add
lods
adcb
dec
into
movsl
je
inc
pop
or
push
xchg
or
sbb
imul
add
ret
xchg
call
dec
aad
fstps
test
or
dec
jo
repnz
pusha
xchg
popf
ja
or
mov
pop
stos
gs
mov
mov
xor
jge
test
mov
imul
xor
fldenv
test
cmp
inc
mov
add
incl
sub
mov
xchg
or
mov
xchg
lock
mov
cmc
push
je
fwait
test
sbb
pop
dec
jo
jecxz
and
popf
pop
inc
pop
pop
incb
daa
and
xchg
pop
cmp
addr16
stc
mov
push
pop
aas
into
add
je
inc
add
or
cmp
mov
rcrb
add
int
js
push
ja
xchg
and
mov
loopne
pop
sub
mov
fcmovb
mov
shrl
xchg
std
test
xor
shl
inc
push
mov
or
sarb
aam
jecxz
inc
daa
jne
cld
icebp
push
lret
cmp
sub
push
inc
out
add
in
push
xlat
push
shrl
repz
mov
or
cmp
daa
dec
inc
popa
dec
mov
cmp
push
call
fstpt
pop
jae
mov
mov
in
push
add
cld
aas
js
jno
cmpsl
loopne
insl
xor
sub
stos
or
cmp
push
ret
sar
fs
xlat
mov
jmp
jno
push
out
ja
cli
mov
lock
inc
enter
rcrb
movsl
loop
mov
mov
push
inc
pop
lret
jle
mov
mov
daa
xchg
and
mov
push
jecxz
out
bound
xchg
or
sbb
xchg
mov
add
xchg
idivl
nop
fdivrl
insb
cmp
data16
jmp
pop
jle
dec
repnz
xor
movsb
sahf
mov
leave
push
add
dec
sbb
sbb
rorb
cli
mov
push
mov
int3
jmp
mov
subb
sub
outsb
mov
fwait
mov
adc
lea
push
cs
rorl
xor
pop
push
jge
jno
test
out
dec
dec
orl
push
nop
inc
or
mov
xchg
cmp
int
cmp
pusha
in
jnp
out
sub
fimuls
inc
out
mov
xchg
call
pushf
ds
ja
leave
sub
jae
pop
fstl
std
push
in
cmp
and
imul
cwtl
popf
lret
shld
sub
mov
int3
xchg
jecxz
aas
xor
lahf
shlb
jp
add
out
mov
xor
mov
daa
pop
ds
jmp
inc
imul
jbe
sbb
dec
jl
mov
sti
jns
xchg
mov
lret
xor
mov
mov
loop
and
lahf
pushf
pusha
add
clc
cli
ljmp
sbb
clc
pushf
lods
pushf
arpl
push
aaa
bound
cmp
enter
fdivr
loopne
inc
arpl
ds
push
sbb
es
movsb
push
mov
mov
inc
out
mov
and
int
mov
xchg
lods
rorb
bound
aad
jge
sub
or
adc
rorl
or
rcrb
loope
xchg
lods
mov
pop
daa
pushf
sub
cli
jb
dec
imul
sarl
push
fidivrs
push
popf
es
sbb
ss
cld
bound
inc
dec
pop
mov
addr16
outsl
stos
fiadds
cltd
dec
pop
mov
inc
dec
inc
pop
gs
jl
xor
xchg
sub
mov
shl
aaa
inc
or
loop
cld
xchg
push
cmp
adc
jbe
jae
xor
aaa
fmuls
idivl
jecxz
sub
pop
inc
js
js
adc
sbb
adc
pop
push
mov
mov
adc
aam
pusha
aaa
mov
jo
and
jo
xchg
pop
lahf
daa
sbb
in
cwtl
sbb
fistpl
pop
in
sub
or
fbstp
cmpsb
imul
ds
cld
and
jl
imul
mov
push
inc
inc
push
fsub
gs
mov
shl
cmp
pushf
scas
adc
mov
nop
movl
adc
popf
sub
pop
adcl
pop
push
sarl
sbb
xchg
adc
cmpl
add
sahf
scas
lock
mull
mov
sbb
or
inc
and
lahf
shrb
xchg
and
cmp
test
push
outsl
jecxz
xchg
mov
and
lcall
cmp
lods
mov
xchg
mov
and
aaa
imul
cmp
lods
cld
jo
mov
into
mov
es
sub
test
enter
cltd
shufps
js
in
dec
ds
pop
lods
cs
mov
and
dec
lret
pop
lret
data16
dec
sub
cmpsl
popf
jbe
sub
loop
mov
mov
insb
fs
fwait
mov
cmp
jmp
or
outsl
or
pop
xchg
mov
jecxz
sbb
dec
insb
mov
addb
pushf
xchg
stos
and
and
test
cs
clc
aam
push
fildll
pop
aam
dec
mov
addr16
clc
xor
push
jmp
xor
sub
je
enter
sub
or
outsb
mov
js
mov
mov
add
jecxz
xchg
push
lret
lahf
or
add
xorl
fucom
popf
test
inc
sub
jecxz
push
and
ret
fdivs
or
push
jg
inc
pop
xchg
lret
jae
or
pusha
pushf
sti
clc
dec
notb
mov
shlb
adc
mov
iret
pusha
mov
xchg
sub
icebp
in
cld
popf
insb
fdivr
jg
or
add
jp
xchg
jmp
jge
nop
loope
fisubrl
mov
out
inc
pop
dec
popa
pop
sub
scas
movsb
or
call
push
das
jp
in
or
cmp
sbb
xor
push
inc
cmp
mov
ljmp
sbb
jne
out
push
ja
adc
dec
cli
outsb
rcrl
inc
xlat
mov
mov
out
and
pop
jmp
filds
movsl
das
out
mov
ss
cmpsl
lock
sti
fcoms
in
lock
dec
mov
sahf
mov
xchg
jns
jbe
pop
inc
sbb
cs
jge
rorl
cmp
out
cmpsl
or
out
aad
mov
and
pop
adc
lret
loop
arpl
aas
inc
push
adc
call
imul
pop
std
ljmp
and
cltd
dec
mov
pop
popa
xchg
mov
addr16
ret
mov
and
xchg
inc
iret
sbb
mov
xorb
or
push
bound
mov
stos
jbe
idivb
xchg
jb
sahf
add
mov
inc
jp
jb
or
cmp
cmc
scas
test
pop
adc
movsl
add
xor
dec
in
adc
pmaddwd
push
adcb
xor
jb
push
hlt
loope
int3
cwtl
xor
jge
mov
imul
fbld
subb
jge
loopne
insl
iret
lahf
hlt
ja
fldenv
idivb
push
into
pop
and
sbb
mov
jbe
jg
sbb
in
or
enter
mov
iret
shll
cli
int3
in
scas
pushf
cmp
aaa
bound
gs
mov
imul
mov
jbe
adc
aad
sub
push
lods
lock
data16
fcompl
fistl
dec
adc
xchg
lret
mov
jmp
cmp
ljmp
sahf
mov
dec
lods
jb
sbbb
mov
js
mov
out
xor
out
mov
sub
sub
leave
xorb
imul
adc
jmp
stos
inc
dec
sub
mov
adc
sub
mov
subl
rcll
jmp
inc
ret
jecxz
nop
nop
xchg
in
cmc
push
clc
shrb
repnz
leave
shrl
sub
test
mov
adc
loope
aas
xchg
arpl
mov
jns
mov
push
lods
or
pushf
lock
repnz
push
or
ljmp
push
inc
add
jo
xor
mov
das
add
mov
pop
dec
xor
out
mov
cmp
nop
xor
or
pusha
cld
lods
fsubr
add
xchg
lea
sbb
pop
aas
insb
mov
clc
lahf
fsubl
mov
and
mov
cmpl
leave
pop
fwait
mov
xchg
pop
mov
mov
lea
mov
imul
out
mov
je
or
jmp
inc
in
xor
stc
sub
inc
jo
push
jge
xchg
push
sub
mov
out
out
aad
push
cs
inc
movsb
dec
fmul
iret
mov
cmp
sbb
andb
push
sbb
call
setns
add
mov
jg
pop
jno
pop
or
dec
jmp
pop
adc
movsb
das
push
stos
imul
mov
xlat
push
dec
add
test
add
sahf
fdivl
sbb
out
hlt
testb
fsubr
nop
hlt
lock
inc
insl
mov
jmp
ss
aad
dec
jmp
xchg
pop
shlb
sbb
sub
out
movsb
xchg
xchg
test
cwtl
fidivrl
andb
mov
mov
cwtd
aad
negb
push
stc
jno
jg
cmpsb
inc
mov
xor
es
das
popf
xchg
xchg
xor
xlat
inc
and
pushf
adc
pusha
and
and
lds
int3
push
push
out
xchg
outsb
add
jg
jae
out
push
inc
and
inc
lds
mov
jbe
or
cmp
mov
in
pop
arpl
js
lret
loope
inc
xchg
test
pop
cltd
jmp
cmpsl
gs
sbbl
out
subl
push
jbe
jae
fidivrs
xchg
test
stos
nop
cmc
rcr
mov
sub
lret
pushf
or
adc
add
push
adc
repnz
xchg
sbb
cmpsb
adc
rcrb
and
inc
cmp
xchg
lea
lcall
lea
mov
cltd
pop
xchg
or
sub
stos
push
fnstsw
insb
mov
sbbl
mull
shll
cmp
adc
sub
jnp
inc
dec
and
mov
sub
add
sub
out
int
in
jp
dec
mov
out
add
mulb
sub
dec
mov
pop
aaa
testl
or
add
pop
jae
cmpsb
add
inc
jmp
and
mov
insb
out
dec
loope
or
cmpsb
dec
push
cmpb
sub
pop
and
lods
cmp
aas
jp
in
or
mov
sbb
js
test
cld
jp
fcmovnu
mov
add
adc
lock
fisubl
imul
push
pop
mov
vpcmpgtb
lret
or
dec
mov
mov
scas
sub
xor
add
pusha
outsb
push
jmp
ficoms
inc
push
inc
adc
jg
insl
mov
sub
push
ja
je
xchg
pop
leave
or
cmp
xchg
cmp
push
movsl
lods
data16
mov
inc
in
cvtps2pd
test
mov
xchg
xchg
mov
mov
jl
or
ljmp
jns
adc
popa
loop
lret
aas
sub
outsl
adc
loop
ret
out
xchg
std
gs
jle
jae
push
cmp
pop
scas
insb
mov
pop
sbb
and
xor
pushf
push
jbe
stc
out
jb
mov
mov
ret
aad
dec
mov
je
and
fsts
xor
add
sub
jno
dec
push
inc
mov
mov
enter
cmp
fisttpll
les
pop
std
or
loopne
pop
jb
shlb
data16
pop
call
ficoml
fldl
test
dec
add
xchg
int
inc
shl
jp
jp
jne
push
jp
lds
ret
out
mov
pop
lcall
or
mov
pusha
xchg
sub
imul
jno
add
mov
push
sbb
mov
pusha
js
fwait
push
add
jne
add
out
cs
mov
lret
aas
inc
jmp
jb
mov
push
pop
mov
mov
lahf
inc
sarl
fneni(8087
icebp
in
pop
out
push
dec
pop
hlt
scas
add
cmp
lahf
scas
out
mov
test
ret
and
into
pop
mov
push
popa
or
adc
into
and
std
lea
mov
cs
rolb
xorl
push
push
and
dec
leave
adc
mov
mov
shrl
cmp
lds
ret
cmp
xor
mov
mov
add
leave
mov
rol
inc
push
repnz
daa
out
xchg
or
das
mov
or
add
dec
jnp
jge
dec
cmpsl
mov
loopne,pt
daa
pop
cmpsl
push
sub
movsl
pop
shll
xchg
xchg
icebp
ret
push
pop
mov
mov
adc
loopne
jp
jge
push
adc
sbb
xchg
shrb
in
add
xchg
inc
fs
insb
xor
pop
repz
jne
popa
adc
popf
hlt
add
dec
cmp
rcll
movsb
fisttpll
add
jp
inc
outsl
mov
mov
notl
push
xor
sbb
sahf
cwtl
into
outsl
and
fnsave
dec
popa
adc
cmp
mov
or
dec
mov
fwait
and
mov
jle
jmp
stc
mov
and
mov
filds
cmp
pop
rorb
jle
daa
xor
stos
add
data16
cli
pop
test
loope
and
xor
pop
pusha
stos
or
sbb
int
and
repz
scas
fistpll
das
outsb
pop
jle
push
jg
outsl
cs
ds
into
mov
decb
scas
fistpll
das
outsb
pop
jle
push
jg
outsl
cs
ds
into
mov
decb
scas
fistpll
dec
out
das
sahf
pop
jle
push
jg
outsl
jg,pn
dec
fidivrl
fimuls
scas
pop
ds
dec
shlb
jns
xchg
nop
shll
test
inc
movsb
push
lret
fwait
mov
aam
mov
push
add
xlat
add
push
mov
fs
andl
test
push
aam
les
hlt
add
addr16
out
add
push
ret
out
push
roll
je
fs
lea
push
pop
mov
sub
sbb
or
pop
mov
or
pop
icebp
or
add
es
jmp
repnz
loopne
cld
out
cmp
mov
and
cmp
ljmp
mov
adc
rolb
in
fstpl
or
call
jae
imul
test
std
jo
or
test
sbb
xor
dec
push
jecxz
repz
add
fiadds
xchg
mov
add
and
and
in
and
insb
or
rcrl
lea
in
mov
add
in
hlt
jnp
pop
sti
or
cmp
mov
pushf
push
je
test
sti
mov
dec
xchg
adc
iret
inc
jmp
sti
cltd
lret
cmp
sub
mov
andl
pop
mov
les
fidivs
hlt
add
or
fidivrl
stos
je
jge
out
loope
shll
shlb
and
jbe
mov
inc
dec
mov
and
xchg
or
mov
ja
and
xchg
add
jno
push
shll
shll
mov
in
out
arpl
push
lods
adc
xor
add
adc
add
xor
and
push
mov
fs
xchg
arpl
aam
les
hlt
add
adc
add
xor
and
push
mov
fs
xchg
arpl
in
int3
push
sti
test
lods
dec
int
or
jp
bswap
fistl
test
push
hlt
jo
into
leave
sbb
jle
lods
xor
icebp
mov
fsubrl
xor
jae
rcr
sti
xor
pop
sar
lahf
adcb
inc
shll
add
ds
ljmp
ret
int
adc
je
imull
ret
xchg
inc
lcall
mov
sub
bound
inc
scas
jnp
push
out
sub
outsl
xchg
mov
jle
test
dec
sbb
sbb
or
push
inc
cmpsb
fisttpll
or
push
rcr
cli
sub
sti
arpl
jecxz
add
mov
mov
lods
fcoms
scas
sub
inc
jmp
xor
push
mov
or
and
xchg
jno
dec
fsts
jg,pt
and
and
adc
addr16
fs
xor
pop
adc
pop
pop
jl
daa
clc
pop
or
cmp
jne
ficoml
pusha
addr16
adc
xchg
aas
out
insb
jge
cmp
inc
sub
lahf
cld
lods
and
fcoml
mov
rolb
gs
sub
out
in
pop
mov
sbb
sbb
shl
fsubs
iret
xlat
inc
cli
and
and
inc
cmp
jmp
add
xchg
mov
cmpsl
pop
adc
repz
cmp
cmpsb
jns
cmc
daa
sarl
jp
or
cld
out
jae
dec
sub
mov
cwtl
push
clc
stos
adc
popf
mov
sahf
test
adc
pop
aad
movsl
or
testb
mov
add
cltd
in
enter
sbb
jmp
adc
or
ret
movsbl
xchg
push
scas
add
inc
pop
dec
mov
add
ds
or
mov
xor
rol
das
test
adc
sub
bound
hlt
sub
push
clc
leave
lds
mov
ss
dec
push
into
imul
inc
add
sbb
inc
add
xchg
pop
mov
xor
cmpsl
stc
sub
rcl
jmp
push
lock
or
sub
sub
xlat
jle
in
adc
jno
lahf
out
stos
das
icebp
mov
xchg
mov
mov
adc
adc
lods
mov
fwait
outsl
dec
idivl
jl
push
sbb
sahf
push
push
mov
scas
ja
mov
std
into
xor
xchg
dec
movsl
mov
rcr
gs
std
and
adc
outsb
insl
dec
pushf
pop
mov
jg
aas
lds
mov
shll
push
scas
lahf
or
dec
scas
fisttps
add
icebp
adc
dec
inc
mov
mov
mov
test
out
repz
pop
lock
and
outsb
pop
cmp
call
fists
xor
mov
or
jmp
call
mov
cli
iret
lock
lds
push
fcomp
mov
mov
inc
sbb
sbb
jmp
mov
scas
popl
shlb
fstpl
add
mov
xor
jb
sub
mov
insl
mov
mov
or
xchg
lods
enter
repz
ds
push
fdivrs
movsl
sti
pop
adc
inc
aad
mov
test
outsb
sbb
add
mov
int3
lock
das
cmp
out
out
or
sbb
cld
cs
sbb
mov
rcrl
adc
pop
jp
jnp
or
xchg
insb
jmp
dec
fdivl
outsl
mov
sub
stc
jg
pushf
js
adc
test
mov
push
aad
fsubs
pop
and
fistps
ror
orl
nop
and
cmp
popf
pusha
pop
pusha
dec
or
scas
push
or
jg
dec
fs
insl
or
pusha
push
cmp
repz
jno
div
and
mov
test
cmp
fnsave
add
fwait
movsl
lods
ret
sti
xchg
loopne
dec
addr16
loope
sarl
push
dec
add
jno
or
push
xor
test
ss
cmp
leave
outsl
inc
mov
inc
or
rcrl
inc
cmp
xor
sbb
stos
cmp
lock
andnps
lahf
popa
or
loope
xchg
mov
aad
inc
inc
mov
cmpsl
mov
adc
jbe
iret
sar
mov
jmp
sub
repnz
mov
jmp
inc
in
inc
add
mov
sub
pop
aaa
sub
flds
xchg
jbe
sbb
inc
xor
flds
cmp
subb
inc
inc
rcll
jmp
jo
mov
xor
mov
les
xchg
and
mov
sub
cmpsb
mov
inc
jp
and
jnp
inc
hlt
test
pop
ja
push
sbb
and
sbb
roll
imul
lock
cmp
in
inc
inc
mov
daa
xchg
jbe
into
cmpsb
or
sub
jg
in
inc
jbe
or
add
sub
cmp
mov
fwait
aas
mov
pop
cmpsl
mov
shr
test
lock
jp
sbb
mov
jo
not
or
sar
pop
ds
lahf
popf
mov
jge
dec
das
ja
test
jp
cmpsb
mov
stos
in
and
xor
xchg
jle
xlat
xor
cwtl
mov
mov
cmpsl
sbb
shll
jb,pn
fdivrs
xchg
mov
adc
jmp
repnz
mov
imull
fadds
sub
and
test
sub
fadds
aam
mov
or
pop
ficoms
call
mov
fnstsw
inc
mov
fwait
xor
xor
dec
lret
add
je
or
rorb
test
hlt
jecxz
outsb
cmp
jge
pop
lock
je
cmp
fistl
imul
daa
cltd
enter
mov
inc
cmp
stos
pushl
inc
lods
inc
mov
xor
xchg
rorl
stos
out
arpl
adcb
xchg
es
and
or
mov
stos
push
jp
dec
popa
rcrl
mov
stos
repnz
popf
insl
aam
in
sbb
movsl
add
dec
sbb
sbb
xorl
imul
ret
dec
movsl
cmp
jns
out
rorb
bswap
mov
xor
lock
cmc
xchg
enter
les
ficoms
pop
push
mov
stc
jg
inc
les
sub
mov
arpl
add
lcall
mov
aam
mov
pop
adc
mov
es
sbb
sbb
xchg
pop
stos
push
and
mov
sarb
mov
cmpsb
lret
mov
movsb
subb
jl
fidivrl
dec
ss
jge
adc
imul
mov
dec
or
pop
repnz
aam
jns
sbb
mov
and
cmp
loope
cld
sbb
push
rcrl
push
mov
or
mov
xchg
stos
call
repz
mov
add
icebp
movsb
and
aad
adc
or
mov
stc
sub
xchg
push
rol
ficoml
sub
sbb
xor
pop
sbb
out
cmc
mov
iret
movb
adc
cmp
out
sbb
pushf
pop
jecxz
nop
xchg
and
jge
xchg
lret
repz
xor
out
push
sbb
js
imul
fildl
fnsave
out
sahf
iret
xchg
xor
ficomps
mov
outsb
jg
xchg
xchg
mov
jl
mov
xor
outsb
inc
rdpmc
xor
or
bound
adcb
dec
adc
out
gs
cld
or
insb
pop
lods
outsb
mov
mulb
jnp
sub
sbb
dec
mov
mov
ja
cmp
es
cmpb
pop
mov
mov
mov
shlb
xchg
aas
pop
out
inc
int3
inc
xchg
lcall
out
and
cld
stos
mov
dec
push
ja
mov
adc
jg
jns
adc
add
add
mov
imul
jbe
sub
and
fmul
xchg
inc
push
fwait
mov
jnp
sbb
das
fisubl
pop
pop
imulb
pop
sahf
hlt
mov
sbb
mov
idivb
inc
test
pop
pusha
jb
movsl
test
cltd
outsl
sub
xor
push
xor
and
push
inc
inc
push
movsb
insb
mov
inc
outsl
and
mov
data16
dec
mov
or
mov
xchg
aad
inc
push
in
lock
dec
imull
xchg
movsb
xchg
stos
insb
pcmpgtd
jl
sub
mov
or
cmpsb
flds
out
sbb
lcall
rolb
or
es
test
mov
mov
adc
fnstsw
icebp
and
movsl
out
and
in
test
or
int
adc
in
cmpsb
stos
dec
cmpsl
int
xchg
imul
test
xchg
popf
test
mov
adc
and
mov
out
jge
jmp
jne
jle
push
jg
mov
arpl
pop
add
fcmovne
inc
shl
push
cmp
mov
test
ja
lret
mov
dec
pop
cmp
jbe
mov
add
fcoms
mov
es
jb
ss
add
mov
mov
test
ret
sbb
jecxz
fcmovb
mov
jl
and
leave
dec
roll
das
shlb
ja
in
xchg
sti
jo
lret
scas
loop
aas
pushf
loope
jle
pop
cmpsl
rorb
icebp
repz
orb
popa
cmp
arpl
mov
adc
mul
jmp
dec
cltd
sub
mov
jbe
jl
aam
pop
jae
loop
mov
pop
dec
jg
jl
popa
add
sub
mov
sbb
addr16
ljmp
lods
and
stc
aad
xchg
jnp
sbb
test
inc
cmp
mov
jl
addr16
or
pop
imul
idivl
cmp
cmp
fistps
mov
inc
jo
pop
push
enter
jae
mov
test
mov
into
pop
stos
sub
sub
lea
leave
inc
fwait
ret
lcall
sub
arpl
xchg
inc
xchg
xchg
inc
pop
daa
or
imul
fmull
dec
xor
mov
loope
jne
adc
fsts
cmpsl
sbb
cmp
in
mov
mov
repz
repnz
repz
xor
out
movsb
lcall
test
adc
jnp
xor
stc
push
sbb
movsb
push
sub
cmp
push
cli
repnz
mov
aam
aam
adc
dec
push
fwait
and
push
arpl
xchg
jge
inc
mov
cmpsl
in
aad
jns
inc
sarl
xor
push
lock
sbb
out
dec
cmc
loopne
jns
cwtl
xchg
stc
mov
aam
test
mov
icebp
stos
mov
repz
xchg
data16
mov
aam
inc
testl
cmp
and
je
sahf
jle
sub
push
test
mov
mov
fiadds
addr16
cmc
out
add
or
inc
mov
xchg
push
pop
inc
jge
cmc
jns
push
xor
mov
sar
in
nop
imul
xor
mov
and
lea
jle
les
cmp
imul
das
out
mov
mov
loopne
sbb
pop
aad
out
in
push
popa
pop
movsl
jnp
sub
inc
popa
test
inc
ret
pop
pop
loopne
mov
inc
and
push
cltd
push
ljmp
sub
mov
push
arpl
imul
out
sbb
out
pop
test
aaa
push
ljmp
adc
cmp
scas
out
mov
cmpsl
sbb
out
scas
mov
test
je
sar
imul
sub
mov
adc
punpcklbw
test
push
jae
mov
and
nop
or
ret
adc
std
xchg
sahf
jecxz
lock
lds
fmuls
and
sbb
data16
jns
xchg
or
add
sub
xchg
rcl
xor
push
into
pop
mov
pop
xor
or
xchg
shr
and
outsb
arpl
push
push
sub
lods
roll
pop
add
push
movsl
pop
fimull
push
xor
push
adc
push
enter
mov
leave
sti
rolb
push
add
sub
mov
stos
sub
stos
and
xor
pop
dec
cmp
cltd
fistpl
daa
pusha
adc
sbb
fcoms
dec
loop
push
pop
inc
leave
and
andb
and
test
mov
and
shll
sub
xor
movsl
push
rcrb
push
xor
cmp
add
push
jne
dec
in
pop
out
lret
or
dec
or
cmpsl
outsl
lods
scas
jne
inc
mov
push
inc
cmp
mov
mov
jp
aas
out
dec
or
gs
mov
dec
ficompl
sbb
mov
aam
in
inc
cmc
mulb
sub
lret
inc
shll
push
dec
sbb
push
in
in
sahf
push
daa
mov
xorb
xor
jge
lret
xchg
cmpsb
xor
jle
add
lods
xchg
repz
sub
add
aad
movsb
ret
xor
outsb
push
pop
pop
or
cwtl
jmp
add
daa
imulb
push
lahf
and
adc
outsl
cli
aam
xchg
cmpsl
cmpxchg
mov
sbb
and
sahf
pop
ljmp
fucom
jbe
add
pusha
sarl
inc
jecxz
out
and
jle
push
xchg
mov
mov
pop
cmp
pop
popa
mov
sub
add
and
xchg
pop
incl
adc
gs
in
js
pop
test
push
je
fbld
out
stos
mov
add
sbb
push
fst
subb
clts
cli
push
mov
xchg
xor
mov
inc
lock
jge
dec
add
lahf
loop
sahf
aad
add
je,pt
dec
push
adc
cmp
ret
js
mov
scas
movsb
stc
lods
pop
inc
push
mov
sarb
fisubrl
xchg
adc
or
pushf
dec
jo
test
jge
ret
fiaddl
add
xor
jp
pop
cmc
addr16
test
mov
push
in
cmp
or
daa
jno
adc
pop
adc
frstor
nop
cs
nop
and
add
pop
dec
dec
dec
mov
jnp
pop
xor
fucomip
push
das
cmp
pop
hlt
sub
mov
jne
sbb
cmpsb
pop
enter
jno
xchg
push
dec
dec
jne
sti
add
inc
or
push
arpl
fsubr
ror
push
aad
jne
mov
push
in
jle
jle
idivb
and
dec
add
push
add
cmp
call
fmull
das
cmp
add
repnz
flds
out
mov
into
rol
mov
test
mov
cmp
mov
cmpsb
pop
roll
xchg
outsl
into
sti
lret
inc
or
sahf
out
cs
inc
pop
xor
outsl
dec
lret
lock
xchg
sbb
outsl
aad
stc
mov
lcall
pop
mov
fcoms
bound
movsl
mov
jne
aaa
movb
fwait
lods
jmp
rclb
and
fistl
stos
enter
inc
jbe
mov
decl
xlat
sbb
dec
shlb
cs
add
mov
mov
fidivrs
sti
cmp
lret
inc
stc
imul
lcall
aad
sbb
or
jge
adc
mov
andl
mov
rorb
jns
cwtl
fstpt
lock
cmp
lods
push
cmp
movsb
xchg
xor
rclb
mov
ljmp
xchg
repz
xchg
jge
fs
pop
jge
pop
mov
sarb
call
sbb
mov
js
fistl
mov
mov
lret
or
xchg
fwait
sar
or
aaa
mov
ss
mov
push
dec
pop
mov
jb
gs
mov
data16
sub
in
je
cmovg
daa
dec
xor
cltd
out
ja
int3
outsb
push
nop
insl
xchg
out
jecxz
das
xchg
mov
push
outsl
cli
mov
mov
imul
call
xor
adc
cmpsb
notb
inc
adc
mov
inc
es
adcl
jae
jecxz
dec
dec
jae
imul
push
jnp
mov
jbe
test
push
adc
jmp
test
inc
cmc
or
adc
mov
cmp
or
adc
push
icebp
mov
sub
daa
adc
inc
mov
clc
sarl
mov
pop
fstpl
fcmovb
push
adc
insb
jb
jo
addb
ljmp
imul
fildl
pop
jno
mov
loop
mov
or
jns
mov
scas
outsb
fstpt
lock
out
lds
add
or
outsl
stos
xlat
add
xlat
decb
jno
or
test
ss
mov
sub
adc
and
fistl
in
aaa
mov
lcall
jnp
pop
jle
mov
dec
inc
sub
fimuls
addr16
adc
stc
and
cli
cli
loopne
aad
movsb
lock
sahf
test
bound
and
fwait
push
pop
sahf
push
ja
cmp
daa
and
test
data16
push
mov
sbb
das
stos
adc
cwtl
push
insb
cmc
lods
out
ja
dec
fistpll
jbe
fcoml
sahf
movsl
fsubrl
or
sbb
inc
loope
or
mov
lcall
jae
sahf
into
test
inc
mov
mov
fildll
xor
je
stos
stos
mov
lods
or
xchg
ret
cwtl
push
sbb
xor
es
enter
push
sbb
pop
fdivrp
push
or
or
push
jge
xor
out
jge
aad
or
ja
adc
cwtl
addr16
in
dec
cmp
mov
jl
lods
sahf
hlt
pop
mov
fcmovnb
sub
sub
jl
les
frstor
das
lcall
mull
es
xchg
xor
fst
xchg
bound
das
fs
jl
adc
adc
call
and
mov
enter
xor
pop
add
xor
leave
lea
mov
xchg
rcrl
jnp
jg
mov
xor
xchg
lds
or
outsb
or
sbb
mov
and
daa
fistps
subb
arpl
or
or
outsl
movb
and
mov
fidivl
pop
cmp
pop
loopne
cli
mov
push
adc
or
shlb
push
add
or
xchg
jb
mov
lods
je
sub
jo
call
std
mov
fstps
pop
out
sub
ret
ja
push
das
popa
stos
sub
or
push
gs
sahf
and
ret
stos
xor
lret
sub
pop
les
sub
test
das
scas
inc
in
scas
filds
sub
dec
test
cli
cmp
xchg
inc
add
pushf
loope
cltd
sbb
fwait
or
lock
or
imul
loope
pop
aam
orb
push
loop
scas
fistpl
push
paddsb
xor
test
scas
push
push
stos
std
in
inc
outsb
mov
outsb
ret
mov
xor
pop
hlt
sub
in
cmpsl
test
jg
add
repz
fs
add
stc
ds
in
es
aas
lock
stc
push
lock
push
inc
rorl
mov
jg
inc
dec
js
ficomps
int3
mov
adc
les
jno
out
lret
out
xor
aam
out
sub
stos
cmp
pop
fwait
push
or
cmc
jle
cmp
xchg
xchg
cs
cs
push
mov
imul
into
mov
jle
leave
inc
aad
cmp
lds
out
stos
movsl
testb
pop
cli
mov
inc
mov
outsl
mov
test
lcall
cli
jmp
sbb
lock
stos
mov
scas
imulb
lret
and
imul
adc
sub
ret
sahf
movsl
xchg
sbb
jge
cli
es
pop
sbb
mov
imul
imul
das
xchg
cltd
dec
mov
mov
push
mov
shrb
jo
lahf
jle
mov
xchg
push
outsl
lret
cmpsb
popa
push
lret
cmp
lods
stos
adc
jl
adc
cmp
push
adc
notb
or
repz
ss
lret
cmp
ret
loopne
enter
cmpsl
in
xchg
adc
push
push
adc
jmp
push
adc
jecxz
scas
jecxz
mov
cld
pop
add
sbb
cmpb
push
mov
push
and
sarb
loope
jae
inc
movsb
push
aam
les
hlt
add
adc
add
xor
and
push
mov
fs
xchg
arpl
aam
les
hlt
add
adc
add
xor
and
push
mov
fs
xchg
arpl
aam
les
hlt
add
adc
add
xor
and
push
mov
push
xchg
mov
inc
movsb
push
aam
les
je
fs
jecxz
pop
sahf
ret
and
and
int3
int3
mov
fwait
in
add
adc
and
xor
lock
int
mov
addb
mov
les
cmpsl
hlt
adc
add
adc
and
xor
inc
mov
mov
xchg
jb
add
in
in
hlt
add
shrb
pop
mov
mov
popf
fidivl
inc
les
dec
mov
bnd
and
inc
xchg
pop
jne
inc
movsl
dec
mov
add
outsl
push
pop
in
int3
cmc
aad
cmp
movsb
jmp
pop
mov
cmp
loope
loope
add
dec
iret
xchg
inc
into
in
or
stos
call
scas
xchg
shlb
shlb
pushf
xchg
cmp
in
hlt
mov
push
adc
mov
sbb
xchg
push
xchg
lods
dec
adc
pop
aam
outsl
in
hlt
push
adc
cmp
sub
push
xor
cmp
aam
sbb
in
in
fs
sbb
mov
out
bound
sbb
inc
in
andl
hlt
add
repnz
ret
inc
mov
popf
jb
bound
int3
and
adc
imul
loop
mov
xor
test
clc
push
xlat
cmp
add
push
mov
xchg
adc
loopne
rolb
cli
push
fs
add
icebp
pop
movsb
xor
sub
xchg
ja
push
popa
mov
pop
cmpsl
or
push
mov
test
bound
aam
in
hlt
add
adc
and
xor
inc
mov
mov
test
bound
aam
in
hlt
add
cmp
sub
push
data16
mov
movsl
nop
aam
dec
lret
test
daa
lods
fs
addl
push
loop
enter
adc
sub
inc
mov
loop
leave
or
js
xchg
pop
or
fstpt
jmp
lcall
popf
dec
mov
lahf
push
jne
xor
lret
imul
jmp
and
jae,pn
loope
mov
xchg
imul
sbb
rolb
add
push
push
jl
cwtl
mov
stc
mov
xchg
movsl
xchg
in
pop
mov
xor
jae
xchg
sbb
inc
jns
jnp
mov
xchg
cmpsb
popf
mov
js
push
sti
xchg
adc
pop
stos
jg
in
jg
lret
adc
jmp
cmc
out
cltd
xchg
arpl
cmp
mov
lcall
mov
push
mov
mov
jle
sbb
mov
dec
xchg
sub
xchg
enter
aaa
mov
jnp
sbbl
dec
aad
jae
pop
iret
lock
inc
push
cltd
pop
push
push
jbe
jns
dec
mov
cmp
adc
js
or
inc
mov
or
pusha
icebp
add
or
stc
xor
mov
sub
xor
and
cld
dec
xchg
xchg
pop
pop
xchg
mov
inc
imul
push
push
or
jb
pusha
cmp
pop
nop
jae
fstl
bound
or
cmpsl
sub
rcrb
stos
xlat
cmp
bound
clc
sti
mov
jo
push
push
std
xor
test
aas
ret
enter
push
and
pop
imul
addl
into
mov
stc
sbb
pop
jl
sbb
jg
inc
mov
lds
adc
dec
test
mov
mov
or
or
mov
jbe
lcall
fdivr
rcrl
iret
push
mov
sbb
stos
jb
outsb
mov
pop
out
dec
insb
ds
adc
jns
add
stc
in
cli
push
je
adc
cwtl
mov
stc
mov
nop
inc
int
cmc
mov
fistpl
movntq
lock
mov
xchg
sbb
flds
scas
jp
jne
aam
scas
xlat
fidivrs
pop
adc
outsb
iret
mov
cs
outsl
dec
je
add
sub
js
xchg
aaa
enter
ljmp
xchg
das
nop
and
imul
pop
mov
and
fs
cli
cmc
movsl
push
hlt
cli
fwait
sub
mov
sbb
in
ljmp
inc
sbb
das
dec
fcompl
jo
add
mov
or
and
dec
dec
jb
insb
scas
out
pop
outsb
lcall
cli
aaa
decb
popf
jbe
js
cli
and
push
in
loop
add
inc
push
je
xor
cmp
adc
jp
push
stos
adc
mov
push
add
lods
and
adc
adc
jbe
fmull
mov
jl
and
adc
das
jp,pn
insl
jb
ss
mov
shlb
imulb
lret
incb
cmc
mov
imul
mov
add
add
lret
movsb
fstps
sti
mov
mov
or
xchg
lret
jp
sbb
push
movsb
frstor
sub
sub
xor
loop
and
jae
fldt
movsl
or
loope
mov
jb
or
mov
jmp
push
movsb
out
aas
sbb
fadds
nop
mov
stos
data16
jg
xlat
test
mov
xor
sti
sub
clc
sub
clc
mov
jo
cmp
sbb
shr
pop
add
sub
es
push
rcrb
aam
dec
cmp
sub
fnstenv
lcall
mov
add
dec
js
iret
cmp
or
adc
and
adc
pop
test
pop
mov
test
scas
cmp
add
fnsave
loope
cmpsb
ret
sub
mov
xor
movsb
inc
dec
stos
insl
mov
add
leave
sbb
pop
sti
ljmp
lock
inc
lahf
clc
pop
cld
inc
cmc
add
xchg
push
ret
inc
je
pop
and
pop
inc
insb
sub
cmp
sub
mov
out
lods
cmp
dec
pop
mov
stos
movsl
sub
sbb
mov
ljmp
imul
dec
push
dec
pop
cmpsb
or
scas
xor
adc
es
lea
int3
movsb
imul
roll
daa
mov
sbb
or
add
enter
jmp
jge
scas
es
rolb
lret
fisubs
ffreep
js
les
xor
add
dec
subb
sbb
add
inc
or
xchg
addr16
mov
lret
popa
ja
pop
sub
push
imul
inc
call
dec
sub
mov
jnp
lods
xchg
pushf
or
add
lret
jno
in
insl
dec
std
cld
push
leave
sbb
push
add
daa
adc
pop
and
xchg
dec
mov
pop
int3
xor
stos
lods
mov
pop
sqrtps
inc
int3
dec
les
push
xchg
add
test
xchg
cmp
xor
pop
adc
insl
jno
and
and
inc
mov
xchg
push
daa
mov
xor
out
cmc
lds
and
jmp
das
or
fsubs
cmp
sub
mov
ljmp
jnp
jb
xor
rclb
cmp
dec
popf
adc
jge
mov
add
retw
int
inc
jb
inc
sarl
aas
push
bound
mov
pop
in
movd
jbe
fidivrl
scas
mov
and
data16
xchg
daa
mov
cmpsl
int3
xchg
cmp
cmp
xor
sub
movsb
and
jmp
jmp
xchg
mov
mov
fsubs
or
fimull
sub
or
mov
mov
and
scas
addr16
aad
ljmp
push
pop
mov
dec
jge
mov
aam
push
lods
push
cmpl
hlt
jg
xchg
push
cmp
xor
cmp
xor
fs
out
cmc
sbbb
adc
nop
in
lret
lock
jge
sahf
or
aam
push
mov
aaa
filds
lods
push
leave
pushf
xlat
out
mov
mov
mov
in
inc
push
and
inc
and
mov
sti
fs
loope
inc
mov
iret
repz
test
mov
sub
jnp
in
mov
mov
nop
xchg
adc
ret
ja
xor
push
push
adc
add
repnz
rcrb
outsl
xchg
or
push
dec
jmp
pushf
pop
jae
lcall
jnp
mov
mov
jae
shll
test
adc
fcomip
dec
xor
cmp
dec
incb
in
push
pop
rcrl
jbe
stos
leave
xor
dec
or
add
and
mov
jne
faddl
popa
mov
mov
push
push
lahf
pop
push
and
lret
loop
test
fisttpll
out
xchg
adc
jbe
lret
mov
ret
test
mov
int
movswl
adc
push
and
dec
sarl
mov
loopne
ror
aas
cmp
mov
idivl
pop
mov
xor
adc
stc
out
test
scas
mov
mov
jb
stc
push
xchg
sti
ss
sub
movsb
sbb
dec
sbb
pop
and
inc
imul
mov
push
in
pop
inc
clc
into
insl
mov
stos
mov
test
mov
fcomp
test
fimuls
jbe
lcall
int3
arpl
push
in
in
push
mov
add
pop
add
repz
insl
addr16
test
fwait
dec
xor
pushf
and
xlat
hlt
mov
adc
aas
pop
dec
nop
jg
sub
outsl
in
adc
mulb
or
sbb
jne
daa
dec
push
push
xor
adc
push
jge
dec
sbb
and
adc
shlb
xchg
loope
jb
and
fcomps
mov
pop
lret
loop
adc
xchg
stos
test
gs
imul
pop
bswap
adc
jbe
adc
stos
stos
dec
push
push
int3
pop
test
movsb
loope
dec
cs
lret
add
in
rclb
iret
shrl
js
push
aam
cld
hlt
arpl
xor
rorl
jmp
int
inc
xor
int
lds
flds
xchg
roll
leave
pushf
push
and
imul
pop
adc
jg
lret
dec
jno
mov
dec
sbb
mov
shrl
adc
pop
int3
mov
push
jmp
jne
push
mov
addr16
lret
cld
movsb
jp
shll
cs
xchg
out
xchg
lods
ljmp
test
mov
decl
sub
cltd
mov
mov
divl
psrlw
cmpsl
xchg
xlat
inc
dec
popa
dec
lahf
bound
pop
repnz
movsb
xchg
cmpsb
mov
imul
lds
stos
or
or
imul
jmp
int
and
and
cwtl
cmp
jge
shlb
mov
jno
adc
xchg
les
lret
xor
add
fisttpl
nop
das
std
adc
outsb
data16
fmul
sbb
das
stc
adc
adc
xchg
xlat
stos
lahf
adc
inc
pop
imul
sub
push
add
insl
loopne
arpl
test
sbb
adc
sbb
lret
jo
push
jne
xchg
cmp
add
shrl
les
adc
sub
add
sbb
pushf
fimuls
std
pop
mov
imul
cwtl
jbe
sub
imul
jbe
xor
sahf
mov
icebp
aam
cmp
jp
xchg
mov
pop
xchg
and
push
fwait
add
mov
sbb
mov
xlat
dec
pop
out
bswap
in
adc
dec
popf
scas
out
push
inc
ret
jl
out
xchg
int
jle
push
or
fbstp
push
push
in
scas
jne
jbe
inc
sub
mov
or
dec
xchg
push
into
pop
pop
xor
imul
lret
pusha
xor
sbb
mov
ret
imul
sbb
xchg
sbb
out
push
lret
test
mov
fimuls
mov
popf
mov
mov
in
inc
adc
andb
add
fsubl
in
lods
outsb
mov
ror
sbb
sti
imul
mov
pop
adc
or
mov
in
and
les
jnp
mov
lock
lret
es
or
popf
mov
lret
loop
jmp
xchg
or
pop
ss
test
bnd
mov
lret
insb
stos
std
push
jo
jbe
xchg
push
push
mov
xchg
push
rcr
loopne
pop
mov
ret
lds
inc
mov
in
cmp
sbb
fisttps
pop
sub
loop
in
push
add
stc
inc
xor
jb
stc
out
orb
and
pop
jp
out
les
nop
ret
pusha
test
dec
push
and
fcoms
int3
dec
pop
sub
xchg
inc
pusha
leave
scas
daa
in
xchg
fdivs
pop
call
jmp
inc
pushf
sub
push
xorb
stos
kmovb
sub
movsl
adc
xchg
cmp
ds
loopne
or
jl
mov
pop
test
xchg
andl
dec
mov
xor
imul
xor
ss
arpl
dec
lret
icebp
out
jae
sub
fstps
cmp
mov
pop
sbb
lret
je
subb
cmp
inc
adc
and
repz
cmp
mov
inc
cmp
out
insb
inc
sbb
rolb
push
in
xchg
mov
dec
out
xor
cmp
xchg
enter
adc
cltd
aaa
cmpsb
stos
out
out
dec
or
mov
stos
aaa
adc
jbe
mull
adc
iret
dec
inc
xchg
mov
jecxz
fs
fld
jnp
idiv
jl
mov
sbb
ljmp
sub
scas
hlt
movsl
pop
push
mov
sbb
and
call
test
xor
pop
add
test
popa
adc
inc
rcll
imul
mov
sarl
in
pusha
out
cli
xor
jl
ja
aam
xor
pop
stos
out
jbe
sti
adc
std
test
cmp
fldcw
cmp
sub
popl
pushf
es
jp
and
clc
test
pop
dec
push
jo
inc
push
subl
test
xor
movsl
das
in
sbb
hlt
mov
mov
js
pop
inc
xor
mov
mov
push
gs
cmp
pop
scas
sub
mov
cli
dec
pop
in
fsubl
jl
jo
fsubl
fildl
inc
int
and
mov
sbb
frstor
inc
and
mov
ja
xchg
add
scas
cwtl
cmpsl
push
cmp
stos
out
mov
xchg
ficoms
sarb
xor
ficomps
pop
jae
nop
adc
jecxz
sub
or
imul
or
adc
fiadds
bound
fisubl
sbb
mov
mov
sbb
dec
imul
or
or
and
mov
movsl
pop
or
jae
sahf
and
bound
inc
pop
scas
testb
or
pop
movsb
and
dec
xor
ss
imul
mov
aad
nop
xchg
cmc
call
jne
mov
scas
leave
aaa
jmp
xor
adc
mov
sub
js
sahf
mov
mov
rcr
mov
dec
cltd
incb
fsubrs
mov
cld
jo
aam
lea
push
xchg
mov
pushf
xor
or
loopne
jp
stc
sbb
xchg
mov
sbb
push
sarl
out
dec
sub
fdivr
popa
dec
leave
add
sbb
lea
cmp
iret
add
sti
push
and
sub
add
inc
cmc
out
sub
add
sbb
mov
jb
mov
repnz
push
sbb
movsl
xchg
jbe
lahf
pushf
or
pop
jmp
pusha
mov
mov
gs
pop
jae
clts
dec
inc
std
xor
sub
mov
clc
lea
pop
outsl
xchg
test
loopne
scas
cmpsb
loope
push
or
or
or
inc
pop
shlb
pop
dec
push
mov
fidivrl
out
dec
push
sbb
push
xchg
jg
aaa
jl
xchg
mov
xchg
xchg
inc
arpl
lret
xor
mov
mov
adc
bnd
xchg
jg
lods
and
mov
xchg
push
or
psllw
stos
pop
mov
stos
movsl
ja
push
nop
dec
jmp
fwait
std
xchg
or
jg
repnz
aad
test
mov
inc
jecxz
and
xchg
sub
lahf
adc
push
jl
scas
in
push
adc
mov
jl
jno
adc
xchg
aam
repnz
loope
test
or
xor
jmp
clc
decl
insl
mov
stos
sub
pop
fsubl
stc
fs
lahf
sub
iret
fstpt
mov
ds
cmp
push
test
mov
mov
repnz
fwait
pextrw
jae
nop
jg
test
mov
cmpb
add
ret
repnz
jmp
dec
and
pop
mov
stos
shll
lret
add
sbb
adc
cmp
bound
jbe
mov
js
mov
mov
lods
lret
movsb
xlat
jne
iretw
mov
pop
cmp
leave
sub
xor
xchg
movb
inc
test
inc
adc
popa
insb
call
gs
dec
lret
cmp
mov
sub
cli
cmpl
sbb
lret
sbb
lcall
and
sub
ljmp
inc
mov
or
jmp
adc
add
test
test
mov
inc
sub
lea
dec
testb
div
jns
push
sub
es
sub
pop
and
out
or
ds
cmp
sarb
mov
pushf
repnz
xchg
jns
inc
in
push
cmp
jb
sti
xor
mov
scas
xor
das
or
jg
sbb
fimull
icebp
rclb
pop
xchg
aas
aam
inc
pushf
add
in
addb
xchg
insl
pop
dec
add
mov
aaa
scas
dec
ficoms
inc
sub
mov
cli
das
ljmp
push
mov
add
jp
sbb
call
lahf
dec
lcall
dec
fdivrl
out
sbb
mov
and
in
ds
xor
sub
daa
xchg
mov
lods
push
mov
insl
inc
mov
sarb
push
loope
jo
and
cmp
cmp
imul
xchg
imull
ljmp
sub
insb
push
fbstp
push
aad
xor
pop
xchg
xchg
mov
outsb
mov
xchg
add
cmp
in
xlat
inc
add
and
xchg
sahf
cs
insl
push
add
pop
xchg
and
dec
or
ftst
jnp
repnz
mov
aaa
and
cld
pusha
andb
fsts
sbb
inc
scas
leave
adc
sub
call
in
aam
aas
aad
jecxz
mov
sarl
adc
stos
test
cmp
mov
in
fists
inc
std
nop
ja
xlat
iret
xlat
and
shlb
dec
pop
xchg
mov
and
pop
ret
push
or
dec
mov
dec
or
mov
lock
bound
ljmp
pop
jo
sbb
inc
js
dec
mov
into
cmp
mov
sbb
cmpsb
pushf
xor
lret
adc
jge
pop
add
js
adc
or
xchg
out
mov
sub
orb
jmp
fwait
dec
test
mov
stos
bswap
adcb
test
cmpsb
jmp
lods
xchg
mov
push
push
outsl
scas
inc
mov
mov
mov
sti
jbe
call
mov
push
out
xchg
jl
out
inc
rcll
or
jmp
mov
mov
cs
das
adc
movsb
test
mov
daa
push
mov
movsl
popf
dec
inc
repz
mov
into
in
push
add
mov
dec
nop
cld
mov
inc
andb
jl
pop
mov
mov
mov
adc
jbe
push
data16
repnz
clc
mov
push
ja
pop
pushf
cmp
and
xor
andl
lahf
mov
inc
pop
pop
push
scas
add
adc
cwtl
negl
or
pushf
push
mov
cmc
pop
cs
cld
cmp
adc
hlt
mov
out
dec
aaa
dec
add
jo
mov
push
sbb
into
and
jle
push
jo
cmp
test
inc
outsl
push
fldenv
inc
sar
xchg
sub
stos
xchg
cmp
inc
lcall
int
mov
jle
add
pop
popa
dec
in
fcmovnb
mov
repz
fwait
or
loope
in
dec
cltd
mov
jnp
insb
das
in
aaa
pop
mov
leave
dec
mov
add
sbb
push
sbb
jmp
mov
mov
inc
dec
outsl
into
or
jge
cmp
insb
inc
fiadds
add
mov
mov
mov
jo
jnp
xor
mov
imul
js
mov
dec
mov
aam
jge
lret
dec
stos
jbe
mov
jmp
arpl
jnp
sub
insl
cltd
dec
sub
lret
sti
xchg
popf
xor
shl
mov
int3
int
xor
push
popf
push
adc
jb
xchg
stos
inc
or
and
mov
inc
mov
mov
dec
mov
inc
sbb
cmp
jmp
push
push
andb
push
push
sbb
push
cltd
addr16
cmpl
mov
popf
fstps
jp
sbb
ljmp
inc
or
adc
sbb
aad
test
mov
mov
rcrl
cmp
mov
stos
push
push
mov
sub
adc
in
data16
and
movsl
int
imul
in
int3
inc
jle
xchg
roll
mov
mov
and
mov
in
mov
xor
addb
stos
cmpsb
jo
cltd
fwait
mov
mov
add
data16
in
cmpl
jmp
and
dec
push
and
int3
push
decl
cmc
pop
xor
push
inc
xor
sub
cltd
imul
dec
xchg
dec
loop
shlb
inc
mov
mov
test
bound
aam
in
hlt
add
adc
and
xor
inc
mov
mov
test
bound
aam
in
hlt
add
adc
and
xor
inc
mov
and
addb
inc
les
aad
in
testb
repnz
loop
shlb
inc
mov
mov
jnp
imul
push
mov
mov
pop
fstpl
in
or
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sahf
test
mov
mov
cmc
sbb
and
dec
push
jle
outsb
jne
test
mov
in
lea
add
cs
jle
outsb
jne
test
mov
in
cmc
push
add
dec
push
pop
adc
push
ljmp
mov
in
rclb
out
pusha
xor
sub
add
inc
xchg
out
sub
jb
jno
inc
stc
push
xor
add
push
jmp
xor
push
or
pushf
sub
and
test
cwtl
aam
out
mov
sbb
xor
mov
mov
jl
gs
push
lds
loopne
int
shrb
mov
xor
cmpsl
out
or
cli
sub
mov
dec
stos
xchg
je
icebp
or
cmp
push
cmp
dec
out
pop
add
push
pop
mov
movsl
xor
push
into
push
andl
sbb
inc
sbb
pop
adc
inc
into
fldl
inc
sbb
pusha
pop
test
mov
in
cmc
push
add
cs
jle
outsb
sbb
sub
mov
mov
push
outsb
jl
adc
inc
imul
wrmsr
sbb
cmp
loopne
lock
out
mov
test
stos
xchg
insb
dec
imul
sub
add
stc
rorl
fwait
jmp
aad
in
cmc
push
add
cs
jle
outsb
jne
test
mov
in
cmc
push
add
cs
jle
outsb
jne
test
std
and
ja
mov
cmp
in
fisttpll
ja
jg
inc
xor
or
lock
pop
fidivs
std
inc
orl
add
popa
inc
mov
lea
in
xchg
add
sbb
xchg
cs
push
add
cmp
xor
sub
jg
lret
in
jg
or
pop
mov
mov
iret
sarl
inc
sarl
push
pushf
pop
add
mov
cs
es
push
xchg
mov
mov
inc
mov
mov
rcrl
add
loope
push
cmc
and
cmp
and
mov
jmp
or
pop
jmp
movsb
cmp
lretw
push
rol
stc
inc
mov
fs
lahf
mov
inc
mov
xor
cmp
add
push
jb
sbb
sti
jg
cli
unpckhps
shll
mov
icebp
dec
pop
jge
rolb
icebp
add
imul
mov
cwtl
mov
xchg
push
testl
test
or
es
rcll
mov
lcall
push
leave
cmp
mov
mov
fisubrl
mov
idivb
out
insb
inc
rcl
js
imul
leave
xor
mov
cld
pop
mov
lods
and
sbb
adc
and
mov
push
scas
pushf
addb
cwtl
sti
cmpsb
jb
adc
arpl
pop
mov
mov
jnp
inc
xchg
daa
mov
mov
out
and
mov
aam
outsl
cmp
ret
mov
mov
ds
iret
cwtl
arpl
inc
test
stc
into
push
mov
xor
sti
outsb
jp
and
pop
jmp
adc
sub
sbb
or
and
or
pop
jl
mov
std
pop
sub
test
out
lret
and
repnz
mov
xor
mov
shrl
xlat
xor
xor
sbb
xor
fadd
ror
lcall
fldl
mov
in
add
rcrb
pop
pop
fisubl
xchg
ret
je
idivb
xlat
repz
sbb
add
cld
cwtl
imul
cmp
mov
push
mov
cli
test
ss
std
jns
nop
ds
std
dec
lea
dec
cmp
popf
out
sti
hlt
scas
inc
test
push
mov
sbbl
inc
outsl
in
insl
mov
outsb
fnstenv
sub
lods
jbe
fstps
cmp
mov
out
cld
insl
dec
mov
push
lds
add
dec
out
jle
adc
or
negl
add
leave
mov
aas
dec
ret
add
mov
stos
sub
push
jle
stc
sub
push
push
or
mov
stos
pop
cmp
xor
mov
mov
inc
jbe
shr
in
clc
mov
push
jle
jge
in
mov
push
pop
shll
jle
hlt
aad
cmp
aam
mov
mov
mov
lahf
ss
inc
test
fadds
pop
cltd
test
testl
icebp
push
nop
in
hlt
jmp
es
push
pop
inc
lea
pop
mov
scas
mov
pop
jns,pt
xchg
push
mov
mov
cmp
hlt
mov
out
hlt
stos
cmp
aad
cltd
mov
jg
ja
bound
jge
pop
cs
out
dec
hlt
sbb
push
mov
xorb
xlat
lret
cmc
enter
mov
hlt
out
iret
xor
jo
mov
xor
adc
rorl
imul
rcll
pop
xlat
mov
shl
shlb
clc
and
cmp
jg
or
lret
jge
inc
imul
mov
mov
movsl
mov
xorl
inc
aam
mov
add
loop
fs
and
mov
push
pop
sbb
cmovbe
add
cli
cmp
lds
neg
add
mov
dec
ficompl
inc
aam
es
adc
push
mov
mov
xchg
cmp
mov
lea
mov
jmp
mov
insb
ret
lock
jb
inc
mov
inc
pop
pop
pusha
in
loop
jecxz
fisttpll
push
shrb
rcl
mov
inc
fs
lret
jle
aas
sti
call
cld
jecxz
xlat
add
outsb
mov
outsl
adc
jecxz
ja
adc
add
xchg
lea
mov
lds
adc
cmc
and
adc
ljmp
mov
mov
fcompl
movsb
in
cmp
jle
and
cwtl
inc
and
lret
sbb
repnz
push
jl
test
gs
imul
repnz
push
push
xor
sub
mov
mov
jne
xchg
mov
xlat
idiv
subb
loop
and
cmpsb
mov
shlb
fsts
ljmp
movsl
fdivrl
mov
divb
inc
fmulp
ljmp
sti
pop
dec
jp
pop
rcrb
bound
inc
and
pop
jno
cli
sub
lds
lods
mov
ror
lods
jle
inc
add
out
mov
xchg
sub
dec
inc
popf
push
xor
mov
cmpsb
pavgw
mov
mov
hlt
or
dec
iret
push
and
xor
repnz
scas
repz
fisttpl
push
jg
push
push
mov
xchg
pop
in
jl
icebp
daa
shlb
test
mov
or
popa
test
adc
addr16
js
icebp
aas
loop
stos
hlt
shll
shrl
sub
inc
outsl
push
ret
ret
imul
dec
cmp
cltd
nop
aas
and
aad
cmpsb
mov
imull
jp
add
jne
repz
xchg
adc
je
jbe
mov
pushf
xor
test
push
push
mov
jge
in
mov
xchg
das
sti
bound
fs
pusha
dec
jg
cmp
mov
mov
mov
clc
cmp
mov
test
aaa
xchg
jl
xor
nop
xchg
inc
rcll
fisubl
push
fidivrs
int3
mov
add
xchg
dec
ret
mov
repz
sbb
fs
jmp
push
pop
cltd
hlt
jle
xchg
cmp
ret
cmpb
outsl
insl
sarb
cli
dec
dec
xchg
push
mov
test
dec
sti
xchg
cmp
mov
sarb
xchg
dec
icebp
xchg
ficoms
jo
hlt
ljmp
or
je
sarb
mov
loop
or
mov
cltd
fdivr
mov
movb
push
mov
and
pusha
dec
test
xchg
jne
and
xchg
sub
cld
int3
scas
cltd
xchg
notl
test
cmp
movsb
cmpsb
mov
cmp
adc
push
sti
jno
fists
clc
pop
cmpsl
inc
or
and
popf
ja
dec
push
mov
dec
fst
addr16
and
xor
dec
ja
in
aas
inc
cmpsb
jmp
adc
nop
outsl
mov
pop
pop
stos
cmc
cmc
xchg
stos
scas
cltd
jne
aad
jle
mov
cmp
sbb
adc
pushf
push
stos
inc
dec
in
cs
stos
and
xor
cmpsb
add
mov
xchg
xchg
ret
adc
enter
cld
adc
repnz
loope
xchg
sbb
sbb
mov
pop
int3
jmp
inc
add
mov
fmull
dec
jl
sahf
ret
aam
cltd
jmp
xlat
jns
or
xor
inc
pusha
add
push
fcmovb
jae
repz
jnp
fisubl
cmpl
movb
cmc
mov
push
jnp
sub
popf
cmpsl
in
inc
fildl
cmp
sbb
int
push
mov
or
mov
and
in
pop
mov
ret
stc
fs
sub
popa
xor
shlb
shll
ja
jne
xchg
shll
sti
pop
enter
test
shlb
icebp
aad
inc
mov
mov
xor
push
lock
adc
sbb
or
ficoml
repz
adc
inc
stc
adcb
fs
neg
dec
sub
mov
xchg
cli
call
sub
imul
push
pop
dec
mov
addb
loope
add
inc
mov
gs
xchg
in
repz
sub
add
push
icebp
or
rcr
fbld
xor
sahf
ret
dec
movl
insb
sarl
xchg
insl
pop
mov
icebp
je
int
add
fwait
movsl
aaa
push
or
sub
cmp
mov
outsl
add
lea
in
or
sub
data16
cmpl
cld
inc
adc
ficoms
jo
lods
ss
jns
sbb
inc
pop
xchg
sub
psrlw
lahf
dec
sub
jbe
dec
dec
stos
stc
jp
sbb
fwait
jecxz
jnp
sti
pop
cmp
xchg
xchg
enter
push
int3
push
adc
aad
aaa
out
les
cmp
xor
mov
stos
shll
or
repnz
push
push
inc
imul
loop
outsb
scas
sub
lcall
mov
hlt
rcrl
fildl
test
lret
fcom
movsb
xchg
repz
fwait
orl
add
adc
or
xor
js
xor
sbb
and
sub
aas
testl
ja
pushf
aas
popa
cmc
imul
pop
xchg
mov
rolb
mov
test
rorl
inc
inc
xor
movsb
aam
mov
cli
xor
in
js
iret
lahf
shrl
pop
clc
sub
pop
out
xlat
dec
lret
mov
xor
sub
jecxz
lret
lret
and
and
xchg
cmp
xchg
jne
fisttpll
test
fcoml
in
jl
pop
or
dec
ss
pop
fmuls
cmc
outsl
mov
pusha
enter
movsl
shr
insb
xchg
mov
mov
add
dec
inc
repz
and
mov
pushl
jmp
mov
aas
pop
xchg
push
fs
and
push
mov
push
nop
dec
add
jnp
sub
adc
shr
xor
cmp
jb
push
or
enter
fadds
cmp
jbe
and
push
add
and
cmp
repz
sub
push
dec
xchg
lahf
testl
fists
orb
andb
js
lret
ret
sbb
cmp
add
lds
cmp
insb
lea
push
mov
fs
loope
in
es
mov
push
xor
lea
add
xor
push
xchg
dec
xchg
dec
sub
scas
hlt
jl,pn
icebp
push
mov
insl
cmp
decl
inc
and
adc
mov
jne
cmp
fcoml
xor
adc
add
push
aam
inc
sbb
iret
adc
idivl
imul
stc
pop
push
fs
shlb
mov
lcall
addr16
mov
mov
cmp
adc
fbld
es
adc
call
leave
ss
sub
pop
pop
xchg
and
pop
cmp
data16
and
and
outsl
or
cltd
sub
push
inc
icebp
sbbb
popf
enter
add
sub
mov
cwtl
xlat
imul
push
in
in
test
insb
add
cmp
mov
movsl
test
jecxz
sub
aaa
sti
sti
notl
add
jecxz
sub
imul
push
imul
jmp
rcrl
sub
loop
mov
mov
jg
fcompl
xchg
push
and
cmp
add
jnp,pt
scas
mov
cwtl
fidivs
cmc
mov
scas
cmp
mov
dec
adc
in
ret
xor
xor
cmp
and
cld
leave
jno
jnp
cmp
mov
mov
xor
negb
pop
xor
orb
lcall
mov
xor
in
leave
adc
mov
jb
push
call
lret
shl
fisubrs
xchg
fwait
nop
mov
or
add
fwait
or
mov
add
ret
orb
inc
ss
or
pop
fsubrs
pop
cmc
loope
cmp
lcall
call
sub
add
add
jmp
aad
subl
daa
sahf
inc
lahf
nop
xchg
rorb
lea
dec
les
or
push
adc
mov
pusha
fdivrs
jne
xchg
jmp
data16
imul
fucomi
mov
arpl
mov
movb
mov
xchg
mov
mov
das
adc
ret
out
repz
data16
stc
mov
test
xor
push
sub
cmp
adc
test
ljmp
out
push
lahf
lahf
jp
or
fists
mov
and
jbe,pn
outsl
ret
dec
adc
int
dec
ja
jns
int
mov
inc
rcll
and
arpl
rcrl
es
add
lahf
sub
mov
jns
push
sub
call
iret
push
inc
cmp
rolb
ret
pop
cmp
fnstsw
orl
ss
jmp
dec
shlb
lds
daa
and
les
movsl
pop
cltd
sub
adc
dec
mov
sahf
adc
clc
xchg
insl
fs
mov
shll
push
mov
adc
fildll
mov
cmp
pop
shrb
pusha
flds
fisubl
mov
sub
lahf
mov
jmp
imul
adc
stos
pop
mov
insb
stc
lock
cltd
sti
icebp
shlb
xor
and
sbb
mov
popf
pop
shll
es
iret
jno
stos
test
add
pop
enter
test
mov
mov
popf
pop
pushf
jb
lret
sbb
mov
dec
pop
mov
xchg
cli
jge
lret
repz
cmc
dec
nop
adc
xchg
inc
sbb
pushf
push
fstl
adc
xchg
repz
lds
shrl
mov
sbb
stos
add
bound
or
inc
fs
lret
ja
jns
repnz
repz
inc
push
lods
test
mov
ret
push
popa
add
mov
cmp
jl
add
mov
pop
out
loop
and
push
mov
dec
into
shll
mov
push
cmp
lock
sbb
push
adc
test
sub
dec
ja
mov
icebp
push
imul
mov
push
add
xor
adc
or
cmc
cmc
imul
cmp
inc
or
dec
notl
scas
dec
sub
fwait
xor
icebp
aad
jo
or
insb
subl
mov
add
out
jnp
fldt
or
pushf
aaa
and
pop
scas
adc
sti
sub
pop
adc
xchg
mov
enter
stos
pop
outsl
in
push
out
fistpl
adc
popf
jno
lods
xlat
lods
addb
and
fs
jmp
add
jp
fisubrl
cli
inc
ja
mov
push
nop
dec
push
lcall
subb
lahf
out
lods
mov
in
les
jb
xchg
pop
xchg
and
mov
adc
daa
out
push
ret
lret
scas
clc
cmc
push
jmp
out
sbb
xchg
push
aas
dec
sbb
jbe
rol
push
sub
xchg
or
sahf
xchg
xchg
ret
adc
nop
sub
add
dec
in
aaa
mov
movsb
cmp
dec
adc
dec
nop
shlb
pop
inc
adc
shr
scas
in
nop
push
imul
adc
add
subb
xor
adc
xchg
cmp
rdmsr
dec
aad
mov
jnp
inc
push
in
out
add
pusha
stos
sti
pushf
icebp
jae
test
mov
ja
sub
fdivl
xchg
push
mov
sbb
loop,pn
add
lea
aad
mov
clc
jmp
mov
call
gs
cmp
into
and
adc
inc
loopne
jb
dec
dec
dec
jg
shlb
cmp
sti
inc
pop
mov
or
push
call
aam
lahf
push
cwtl
stc
push
daa
pop
dec
xchg
mov
mov
je
loop
mov
cmp
inc
loop
mov
or
in
repz
out
ljmp
cmpsb
inc
into
mov
call
in
xor
cmp
ret
xchg
ja
pushf
lds
xchg
add
push
ds
jmp
jg
push
ret
leave
xchg
mov
xchg
push
inc
je
jmp
es
jnp
jo
loopne
push
lods
test
sub
and
sti
call
mov
jne
or
and
push
adc
subl
inc
dec
ret
imul
aad
call
push
pusha
inc
lock
add
xor
mov
leave
in
inc
cmp
shll
lock
mov
lret
loopne
pop
or
add
mov
repnz
jns
test
inc
push
jecxz
sti
call
lcall
jmp
xchg
imul
jae
sub
dec
scas
mov
push
lock
inc
cmp
jg
sub
insl
sub
loope
or
jne
imul
inc
leave
fldcw
nop
pop
enter
loop
fwait
pop
pusha
test
test
or
das
mov
js
add
jl
call
idivl
outsb
test
rcrl
mov
nop
dec
popa
cmp
mov
jecxz
dec
cmp
push
stc
cld
scas
pop
pushf
and
adc
sub
dec
ja
mov
jp
cmp
out
fdiv
popa
push
jmp
jl
rorl
stc
jl
jmp
mov
arpl
loope
add
sub
lds
adc
cmp
adc
inc
stos
out
xchg
mov
lea
mov
ret
test
insl
ss
sahf
add
loop
adc
sahf
xor
mov
mov
xor
addr16
dec
arpl
jb
int3
push
xchg
stos
rolb
mov
lods
mov
rorl
inc
dec
pop
mov
mov
insb
addr16
mov
push
dec
into
xor
enter
jmp
sub
outsl
push
cmp
add
push
xchg
cs
fwait
pop
mov
xchg
dec
addb
rorb
push
mov
push
gs
test
rolb
push
cs
or
xchg
cwtl
mov
cmp
jmp
dec
lcall
jp
out
push
mov
ja
popa
fisubrl
mov
push
mov
add
dec
popf
mov
dec
jne
xchg
cmp
int
mov
test
inc
xor
push
in
std
fwait
in
xor
call
xchg
daa
jmp
out
cmpsb
pop
js
jnp
sub
or
cs
fs
test
cmpsl
or
push
aaa
dec
jb
stc
mov
mov
cli
mov
sub
pop
ss
mov
aad
add
std
stos
cld
cmp
fstpl
push
mov
pushf
add
sahf
stos
xchg
insb
or
nop
jp
pop
data16
sub
xor
cmpsl
or
sti
add
dec
mov
sub
adc
add
jecxz
pop
les
jns
jl
mov
lea
out
jb
gs
jae
rcr
cwtl
adc
iret
jnp
inc
mov
int3
mov
arpl
daa
push
push
jle
dec
dec
and
out
arpl
inc
in
aaa
scas
dec
mov
stos
mov
out
sub
into
xlat
xor
outsl
jge
sub
lcall
cmp
jmp
mov
insl
xchg
mov
inc
push
aam
mov
mov
cld
inc
popa
ja
int
push
subb
call
out
mov
pusha
cs
jb
adc
movsb
cmpsl
xchg
popf
orb
fsub
mov
fisubrl
clc
pop
aaa
adc
pop
sbb
dec
push
outsb
xchg
cld
fiaddl
jbe
js
insb
jb
mov
and
sbb
pop
repz
inc
mov
mov
lea
lds
stc
cli
out
out
divl
sbb
addb
es
jbe
jmp
xlat
mov
push
std
inc
aam
add
aaa
inc
movsb
repz
js
outsb
sub
sub
ret
mulb
das
cld
in
sub
sarb
jbe
fstps
out
je
or
aaa
jp
or
dec
mov
xchg
ljmp
out
jmp
fs
xchg
mov
in
mov
pop
pushf
sbb
in
fimull
sbb
aad
jae
cli
test
scas
push
inc
xor
test
adc
jl
int
dec
or
or
or
add
out
sub
jns
pop
nop
and
mov
jno
sub
mov
and
mov
sbb
popa
mov
out
dec
jo
xor
xchg
andl
out
cmc
push
add
cs
jle
outsb
jne
test
mov
in
cmc
push
add
cs
jle
outsb
jne
test
mov
in
cmc
pop
add
das
xor
jg
outsb
jne
test
mov
jle
outsb
cmc
loope
icebp
mov
sub
stos
xchg
mov
stos
dec
fcmovb
jmp
xchg
movsb
jmp
movsl
and
adc
add
jno
popa
dec
inc
imul
fwait
mov
stos
lock
lret
sar
rorb
cmp
sub
pusha
dec
push
jnp
imul
subb
sti
shr
sbb
sub
gs
adc
das
sbb
xlat
mov
into
jnp
shlb
repz
mov
and
pop
pusha
push
pusha
jl
hlt
ds
test
scas
in
sub
es
lret
out
inc
pop
jae
popa
inc
or
hlt
dec
les
adc
mov
dec
lahf
imul
add
xor
jo
inc
cmp
mov
cmpsl
ja
mov
std
lock
lret
xor
rorb
out
hlt
adc
call
stos
inc
push
dec
imul
je
inc
xchg
cmpsb
sbb
and
stos
shr
in
push
inc
les
sub
or
pop
aad
mov
popf
sbb
sub
jno
iret
sbb
pcmpgtw
aam
dec
pusha
sbb
inc
xchg
out
fwait
mov
stos
lock
lret
sar
shr
sbb
or
cmp
sub
pusha
dec
push
jnp
sub
cld
cli
into
ljmp
movsl
lahf
pop
imul
add
sub
cmp
mul
out
repz
test
bound
jns
pop
gs
ds
add
pop
aas
fimull
shll
sti
shr
sbb
or
cmp
sub
pusha
dec
push
jnp
imul
subb
sti
shr
sbb
or
cmp
sub
pusha
dec
push
jnp
imul
shrb
jmp
mov
or
xchg
dec
pop
cld
jno
aaa
and
in
mov
mov
inc
jne
adc
and
loop
pop
les
mov
xor
sbbb
sbbb
mov
and
jge
imul
and
xor
jns
mov
cwtl
cmpsb
xchg
mov
int
sub
outsb
scas
std
jbe
sub
shrl
or
pop
adc
jge
sbb
loop
jecxz
loopne
addr16
or
jmp
sub
sub
sbb
icebp
add
stc
shl
es
mov
xor
jns
pop
loope
pop
lea
cli
add
sti
cmp
andl
dec
testl
out
clc
mov
lcall
jmp
or
fdivp
enter
or
stos
inc
movsb
sub
cltd
mov
out
ja
sbb
sbb
sub
imul
shll
sbbb
push
mov
stos
shll
push
or
sti
cs
stos
pusha
cmp
xchg
cmp
cmp
mov
out
clc
out
fnstenv
lea
inc
in
mov
out
jae
inc
in
dec
mov
xchg
dec
or
clc
loope
scas
into
sbb
test
push
cmpsb
outsl
mov
or
push
pop
aad
xchg
or
test
pushf
aam
xchg
test
cld
and
mov
mov
inc
dec
dec
popa
dec
pop
xchg
outsb
jecxz
in
fs
orb
dec
in
lods
imul
aad
popf
data16
addb
dec
unpcklps
jne
add
jbe
arpl
pop
push
imul
mov
push
push
pushf
popf
mov
dec
push
mov
mov
jno
hlt
xor
adc
rol
and
mov
mov
outsb
int
pop
dec
mov
stos
cmp
jle,pt
fstl
mov
cmp
xor
mov
stos
and
pop
mov
pop
and
fmull
dec
cwtl
jp
mov
es
xchg
sbbl
popa
out
xchg
cmp
cmp
cltd
ficoms
adc
add
pop
sti
cmc
adc
lds
repz
push
out
push
iret
mov
and
je
into
addb
scas
ffreep
shl
add
pop
int3
int3
sti
outsb
je
lods
mov
rcrl
mov
cmp
sub
sbb
pop
add
mov
mov
mov
mov
mov
pop
loope
xchg
clc
adc
push
mov
dec
and
and
mov
add
add
icebp
dec
cli
in
repz
push
data16
ficoml
test
jg
xchg
jmp
fld
push
mov
inc
and
dec
stos
dec
stos
stos
jmp
dec
add
mov
ret
pop
nop
push
das
sub
or
dec
fistps
shll
xchg
xor
xor
aam
xor
xlat
sbb
push
call
mov
jbe
or
adc
push
out
and
xor
or
cmc
inc
sbb
mov
or
sbb
mov
jg
jne
push
loope
xor
rorl
xor
ljmp
mov
addr16
push
jb
je
jmp
fimull
fmull
add
fs
lods
mov
mov
aaa
xor
cltd
mov
pop
lcall
mov
fldcw
pop
xchg
inc
ds
repnz
imul
repz
insb
adcl
rcr
adc
cmpsb
sbb
cmpsl
push
andb
cli
mov
mov
jns
scas
jne
pop
pusha
xchg
cmp
inc
pop
cmp
sbb
cs
mov
or
jl
in
xor
mov
mov
add
dec
arpl
and
push
imul
js
rolb
add
jecxz
out
cwtl
jle
cmp
mov
xchg
fmull
mov
or
imul
loop
pop
pop
cmpsl
jg
ja
jnp
xor
loopne
xchg
jg
out
mov
lret
movsb
iret
xchg
push
and
sub
mov
cmp
adc
cli
loope
sti
or
adc
cmpsb
std
ljmp
jge
sub
jecxz
jge
xchg
push
pop
dec
dec
ljmp
xor
mov
rol
je
or
scas
or
outsb
out
leave
pop
xor
jp
dec
jge
dec
push
pop
push
insb
mov
mov
stos
jge
sub
or
xchg
mov
stos
push
ret
in
ss
sbb
mov
pop
add
stc
lahf
fmull
popa
jo
jno
mov
push
movsb
jecxz
jecxz
and
inc
xchg
xchg
jnp
call
xchg
scas
pop
popa
pop
mov
mov
cmp
mov
push
out
push
sub
mov
scas
cmp
inc
filds
push
lcall
mov
adc
or
mov
shl
hlt
cmp
ss
add
es
js
xor
cltd
push
sbb
daa
sbb
xchg
dec
dec
mov
lret
fistl
push
jle
and
mov
hlt
call
test
aam
or
push
mov
ds
jb
jns
rcrl
stos
lcall
int
adc
cmp
jno
andl
xchg
dec
adc
orb
ljmp
loope
jge
hlt
shll
ja
cs
jecxz
popf
dec
mov
lret
out
out
add
imul
cmc
inc
ror
and
les
daa
imul
mov
inc
mov
cmc
mov
ss
sbb
push
add
push
adc
je
icebp
je
add
jnp
push
xchg
lds
pusha
push
sbb
push
xor
mov
cmp
ret
jle
call
loope
mov
arpl
lret
or
aaa
clc
push
adc
push
jbe
dec
subb
test
insl
pop
add
outsb
pop
sbbb
gs
shll
jle
movsb
cmp
or
xchg
or
sbb
cmp
enter
bound
hlt
andl
xchg
jb
std
fsubrs
add
mov
fwait
shr
pop
lods
iret
or
rcl
cwtl
pop
pusha
iret
cmp
jne
adc
push
in
testb
push
inc
mov
ficomps
pop
dec
sub
cmp
sbb
and
sahf
test
nop
sbb
int3
pop
bound
lcall
les
popl
repz
push
xchg
mov
popa
cmc
stc
mov
adc
sub
and
mov
xlat
push
lahf
leave
call
sbb
in
inc
nop
xor
ljmp
test
pop
xchg
les
fimull
femms
sub
das
sbb
xchg
outsb
or
lds
mov
mov
popf
push
mov
cld
push
push
xchg
add
jo
jno
pushf
cmp
fists
rcrl
cmp
add
iret
push
sbb
int
add
pushf
push
lret
imul
stc
andl
icebp
jecxz
lret
lahf
dec
or
into
add
dec
xor
mov
mov
cmp
inc
js
adc
xor
sbb
xor
jmp
xlat
inc
jl
sti
pop
repz
sub
loopne
lea
cli
cmp
xor
jp
dec
dec
sub
rcrl
add
std
enter
loop
mov
cmp
cltd
mov
pop
fnstenv
mov
ja
out
movsl
dec
inc
xor
es
xor
mov
out
and
sbb
je
jnp
inc
mov
add
sbb
lea
popf
loop
scas
rcrb
lods
jbe
fdivs
cmc
jb
xor
jnp
notl
cmc
sub
imul
lds
das
sbb
icebp
inc
pushf
or
sti
push
iret
cmp
cmp
adc
cmp
in
xchg
mov
lret
and
or
enter
in
add
fmuls
add
adc
jmp
shll
add
addb
mov
les
test
xorl
lret
push
adc
xor
fnsave
lahf
scas
out
mov
add
mov
xchg
bound
ds
push
and
and
mov
pop
jno
add
hlt
repz
mov
xor
cmpsb
sub
je
push
mov
adc
xor
push
sbb
adc
cs
ficoms
mov
push
lret
ljmp
cmp
int3
pop
daa
das
xor
jmp
nop
pop
inc
jb
rcr
xchg
decl
popf
xor
xor
add
pushf
out
lds
cli
lcall
add
fs
push
xor
int
popfw
sub
jp
pop
pusha
dec
fwait
jns
sub
mov
pushf
fnstenv
sbb
and
sub
idivb
nop
adc
iret
adcl
arpl
andl
rcrb
incl
leave
mov
adc
js
shrl
shrl
adc
sbb
xchg
jae
in
nop
sub
cmp
jmp
dec
xor
in
idivl
imul
push
inc
pusha
mov
and
xor
aam
add
and
out
sub
mov
in
insl
insl
or
and
jge
push
lahf
dec
or
and
cmp
test
stos
dec
sub
aam
cmp
jb
loop
lcall
mov
xchg
sub
dec
addb
push
lock
add
jge
fldt
pop
and
lods
js
pop
sbb
addr16
pop
sbb
into
cmpsl
mov
mov
pop
idivl
fdivrs
add
sub
dec
pop
xchg
out
push
gs
xor
xor
in
dec
shrb
repz
pop
pop
ret
sub
jl
scas
divb
std
and
push
clc
data16
movsb
push
dec
pop
pop
mov
push
xor
pop
aad
addr16
cmp
jbe
std
add
cmpsb
rcrb
push
lock
popa
mov
mov
sti
mov
pop
addb
ss
jge
paddsb
add
adc
jb
xchg
jp
mov
fwait
movsb
xchg
aad
into
dec
pop
xchg
mov
enter
testl
cmpsb
and
mov
or
pop
jns
cmp
or
cs
out
ss
pushf
jecxz
mov
mov
insb
and
scas
call
bound
sbb
jnp
sbb
xchg
add
adc
cli
in
rclb
pop
xchg
and
and
dec
mov
les
cmp
mov
inc
loopne
gs
sbb
aad
cmp
mov
inc
adc
xchg
add
ror
cltd
xorl
pavgw
xchg
pop
lret
mov
aas
fs
scas
out
mov
add
popa
pop
pop
adc
adc
es
adc
xchg
dec
enter
nop
rcrb
fcmovne
dec
mov
aam
rcrl
lea
orb
pop
bound
mov
mov
orb
repz
or
cwtl
mov
mov
dec
xchg
mov
movsl
mov
cmp
and
mov
lahf
ret
fistl
das
mov
fwait
je
fwait
adc
bound
fcmove
jge
push
mov
shlb
lea
lods
inc
mov
xor
xor
xor
mov
inc
rcl
loop
rolb
out
jmp
lahf
sbb
mov
adc
sub
loope
test
mov
subb
jl
mov
gs
inc
ja
jb
xchg
and
xor
sub
and
cwtl
enter
loopne
test
cmp
je
push
scas
push
dec
sbb
adc
mov
data16
cmp
int
or
adc
in
in
and
ret
aam
stos
and
add
xor
and
mov
pop
adc
ja
mov
mov
daa
mov
inc
test
std
cltd
iret
adc
sbb
push
xlat
enter
rcl
xor
std
sbb
dec
test
push
fs
mov
inc
not
pop
cmp
roll
mov
fdivr
scas
lods
mov
xchg
add
sahf
fucom
xor
lret
aaa
es
push
xchg
mov
inc
sbb
add
enter
pushf
int
in
adc
cmp
sbb
dec
das
test
xchg
or
neg
adc
jne
stc
fwait
fwait
xor
leave
and
lahf
inc
lcall
xor
je
mov
test
mov
adc
xchg
jnp
int3
xchg
adc
aas
pop
fiaddl
pop
mov
or
jge
fstpt
clc
sbb
leave
xor
pop
push
mov
and
pop
sub
push
sbb
sbb
lsl
andb
fwait
xchg
or
jnp
mov
scas
push
ret
xchg
movsb
push
dec
iret
xchg
cld
lods
popa
test
xor
mov
inc
mov
add
mov
push
lods
xor
mov
xchg
inc
xchg
xor
dec
push
jbe
testl
ficoml
ds
ret
and
xor
pop
xor
push
rcr
pop
adc
outsl
in
sbb
gs
mov
adc
adc
int3
xor
inc
xchg
cmpsb
mov
adc
insl
inc
push
or
popl
repnz
test
testb
add
cmp
in
ficompl
call
sarl
pop
aam
popa
mov
lcall
lcall
fists
jns
addr16
sti
lret
jbe
xchg
sbb
mov
mov
xchg
fmull
dec
jo
sub
add
lock
popf
mov
in
cmc
mov
sub
icebp
adc
sarb
adc
mov
ror
int
mov
cli
cmovle
xchg
cmp
loop
orl
and
mov
mov
mov
int
and
sarb
in
pop
mov
incl
into
dec
pop
das
xchg
mov
addl
lea
inc
jne
ljmp
fisubl
push
jle
icebp
inc
sarb
in
lret
and
lock
jo
dec
mov
xor
clc
jg
jns
sbb
fidivs
push
sbb
stos
inc
and
mov
pop
xchg
or
fxam
jmp
loope
pop
mov
scas
imul
stc
adc
into
ret
clc
test
cmp
pushf
aam
mov
fidivs
adc
inc
push
subl
sahf
xchg
out
lret
repnz
stc
mov
mov
lods
or
icebp
std
push
sbb
sub
add
jnp
das
mov
daa
sub
orl
add
adc
xchg
fnsave
ss
ljmp
and
mov
in
gs
shrb
sbb
jnp
xchg
cmp
adc
or
sub
adc
daa
addr16
push
adc
les
sahf
lcall
xchg
loopne
mov
sub
and
cmp
push
insb
mov
and
push
and
std
shl
lcall
fldcw
jg
dec
pop
xchg
out
fimuls
or
das
sti
sti
adc
and
call
dec
adcb
push
sbb
std
into
or
mov
loopne
adc
adc
sub
lret
cld
dec
cmpsb
add
addb
xchg
fisubs
dec
mov
adc
fcmovnbe
lcall
cmp
test
xor
nop
lds
or
cmp
sbb
sbb
addr16
bswap
add
pop
loopne
sub
inc
nop
stos
ja
mov
loope
cmp
inc
pop
jo
stos
push
push
call
jp
fstpt
pop
sti
mov
dec
in
movsl
sahf
mov
push
push
pop
mov
mov
or
inc
je
inc
xor
lods
pop
hlt
mov
or
dec
lahf
sbbl
add
dec
imul
lret
repnz
pusha
insl
fucomi
mul
pop
or
pushf
es
mov
clc
test
and
jne
lret
xchg
mov
or
xchg
add
orb
scas
jbe
std
stos
arpl
into
sarl
adc
hlt
cmpsb
test
test
sarl
je
daa
add
mov
jae
out
clc
pop
mov
iret
aas
dec
or
imul
jp
gs
dec
jnp
xchg
imul
lret
mov
sub
ljmp
shlb
mov
dec
or
adc
fs
fcomp
mov
das
and
movsb
adc
mov
gs
lods
mov
mov
addl
arpl
dec
mov
add
cmp
enter
adc
add
imul
pop
roll
adcb
mov
mov
mov
fdivr
repz
mov
fbstp
imul
test
jp
xchg
lret
or
insb
fcompl
cmp
dec
mov
lds
and
scas
pop
sbb
jp
loop
adcb
das
and
mov
int
das
mov
dec
mov
push
cwtl
out
and
dec
nop
xchg
mov
dec
dec
sbb
push
sbb
stc
sub
mov
jp
popa
movsb
loopne
jmp
outsb
bound
lret
sbb
pcmpgtw
in
lods
xor
movsb
sbb
enter
hlt
loop
icebp
pop
out
mov
adc
stos
in
int
jmp
test
dec
imul
lret
xchg
xor
mov
stos
xchg
ds
bsf
aam
mov
or
lret
dec
mov
dec
flds
int
idivl
cwtl
pushf
rep
or
scas
aaa
fdivrs
push
test
mov
cld
inc
ret
int
jecxz
xlat
dec
icebp
pop
orl
addr16
mov
or
test
cld
fwait
call
inc
inc
sub
cmpsl
jb
ss
cmp
mov
xor
stc
popf
inc
or
ds
outsl
mov
add
mov
fldl
arpl
pushf
mov
cmp
test
xor
fadds
hlt
pop
inc
xchg
jp
mov
popa
lods
fldenv
and
or
push
cmc
ficoml
jno
xchg
mov
mulb
xchg
js
rcll
push
pusha
xchg
lcall
cmpsl
test
iretw
fistl
pop
fnstsw
clc
push
arpl
cmp
dec
adc
inc
xor
gs
and
adc
enter
adc
push
js
cli
daa
and
lret
lods
mov
movsl
cli
insb
jnp
xchg
inc
xchg
loope
lds
xchg
pusha
mov
sbb
fistl
loope
pushf
pop
mov
call
das
mov
pop
pop
mov
lret
mov
jl
push
repnz
imul
sub
add
xchg
xchg
int
or
pop
in
sarb
test
clc
jmp
mov
mov
mov
or
fsts
pop
lds
lds
movsb
or
je
int
lcall
pop
xor
mov
cld
js
mov
dec
cmp
push
ja
fcompl
xor
push
jmp
xchg
pop
test
xchg
jle
daa
fsqrt
scas
xlat
pcmpgtw
sarl
lret
out
cli
or
inc
js
cmp
xor
mov
imull
sbb
fcmovb
lret
ss
hlt
cmpl
out
rcr
inc
out
shrb
int3
push
ds
jae
inc
loopne
icebp
mov
xchg
aas
int3
ret
and
mov
dec
mov
and
popf
leave
push
test
movsb
mov
es
adc
mov
inc
ljmp
lods
xchg
nop
push
xor
lea
arpl
adc
add
sub
adc
lahf
ret
aas
cmp
minps
push
mov
pop
arpl
daa
loope
shll
das
test
push
repnz
stos
or
jge
or
dec
sbb
lods
and
pop
daa
rol
js
xchg
cltd
out
mov
sub
push
mov
pop
scas
into
shlb
cmc
dec
ret
and
out
adc
es
data16
jecxz
sub
lret
jbe
mov
out
aas
shlb
jecxz
jb
ret
adc
fcom
sbb
out
adc
jbe
jp
leave
or
xchg
hlt
lea
or
jmp
pop
adc
mov
sarb
jne
xchg
ljmp
pop
test
mul
test
jge
test
xor
fxch
xchg
xlat
clc
or
iret
jnp
or
sahf
xor
push
mov
push
mov
cmp
call
ja
outsb
stos
shll
iret
pop
xor
int3
cmp
lds
xchg
push
cmp
test
xchg
pop
xor
dec
les
das
lret
lea
cs
xchg
xchg
fiaddl
in
mov
das
xchg
add
push
std
mov
mov
pop
xor
sahf
scas
daa
mov
mov
mov
loopne
sar
shr
sbb
or
cmp
sub
pusha
dec
push
jnp
imul
subb
sti
shr
sbb
or
cmp
sub
pusha
dec
push
jnp
imul
subb
sti
shr
sbb
or
cmp
sub
pusha
dec
push
jnp
imul
subb
sti
shrb
sbb
mov
pop
shr
mov
test
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
mov
lret
push
sub
gs
std
add
pop
add
add
add
cwtl
add
add
xor
xor
lods
add
add
add
add
add
add
add
add
add
push
add
add
add
inc
add
cmp
test
inc
add
add
mov
pushf
add
add
fildl
fadds
flds
inc
add
add
or
xor
inc
add
add
add
fadds
dec
add
add
add
cmp
popl
add
add
add
add
add
add
add
add
int3
add
in
add
add
add
add
add
sbb
dec
add
add
add
push
add
add
xor
add
cmp
mov
filds
mov
add
add
mov
add
stos
add
push
add
add
add
add
dec
add
add
stos
add
add
add
add
add
add
add
add
add
scas
add
fadds
pop
add
aas
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
sub
adc
das
add
add
add
or
add
js
das
add
xor
mov
and
add
add
add
adc
cwtl
add
add
mov
add
add
add
add
in
add
add
add
add
add
lea
lret
add
ja
mov
add
add
mov
mov
add
add
add
add
xchg
stos
add
xor
add
cmp
adc
add
aam
push
add
add
add
incb
add
add
lcall
add
add
add
add
add
pop
add
add
in
add
add
add
add
add
add
add
cmp
in
add
push
add
add
add
sub
and
mov
add
add
add
test
inc
add
push
add
add
add
pop
add
mov
add
add
add
push
add
add
faddl
int
sbb
sub
dec
add
inc
add
insb
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
sbb
sub
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
imul
sbb
sbb
add
add
add
add
add
xor
or
mov
add
int
lcall
add
add
add
stc
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
push
add
add
add
add
add
add
add
cmpsb
add
add
add
add
add
sub
lcall
add
add
add
add
in
add
insb
add
add
add
pop
pop
daa
and
adc
xor
push
mov
repnz
pop
sub
popa
mov
insl
clc
inc
cld
and
and
dec
rolb
push
mov
mov
xchg
sub
mov
fiadds
xor
mov
lock
mov
jge
repz
ja
xchg
std
aaa
xchg
ja
push
jb
daa
notl
mov
aas
adc
aas
xchg
movsb
mov
imul
lret
sar
sti
pop
clc
push
sbb
jmp
mov
clc
mov
clc
popa
adc
std
int3
dec
dec
test
inc
dec
fistpll
mov
insb
mov
mov
incl
hlt
in
jo
mov
les
sbb
inc
dec
movsb
test
dec
scas
sbb
mov
stos
or
xchg
dec
adc
cmp
mov
stos
or
dec
cmp
cmc
repnz
sub
movsl
mov
ljmp
ret
ljmp
sub
out
xorb
adc
sub
out
ret
repnz
test
lods
push
out
scas
sti
inc
loope
loop
mov
sahf
stos
fwait
idiv
jle
pop
out
or
push
into
scas
fs
mov
sub
adc
decb
mov
aad
daa
pusha
ss
inc
sub
or
inc
xor
insb
jle
mov
xor
xchg
push
lods
mov
hlt
inc
jne
sahf
inc
pop
push
sti
sbb
insl
or
das
mov
dec
inc
push
add
in
sub
or
and
and
xor
call
jg
loop
fs
push
cmp
mov
xor
fnstcw
lea
dec
ja
dec
or
cltd
adc
std
in
aam
jecxz
push
mov
cmc
lods
cmpsb
add
push
and
xchg
hlt
sbb
push
xchg
mov
push
je
cmpsl
sahf
sub
ja
inc
inc
mov
fistl
and
imul
pop
push
xchg
or
dec
push
adc
jecxz
je
icebp
mov
dec
mov
mov
aas
inc
nop
jecxz
icebp
daa
adc
mov
or
sbb
or
jns
outsl
test
push
jb
fsubrs
pop
flds
mov
cli
pop
cmpsb
pusha
fadds
mov
int3
stos
imul
sti
bnd
cmp
popf
jle
outsb
stc
inc
xchg
pop
fwait
shll
or
dec
mov
mov
gs
and
add
jnp
xor
mov
xor
jg
or
xor
sbb
sub
cmc
jmp
or
sbb
adc
cmp
mov
or
cmp
and
daa
ds
into
mov
std
and
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
