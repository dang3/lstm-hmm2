call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
movsb
sub
jg
bswap
pop
mov
outsl
loope
cmp
mov
mov
outsb
adc
iret
push
fucomip
das
out
aas
out
bswap
pop
mov
dec
mov
scas
outsb
mov
shrl
push
iret
push
mov
stc
xchg
imul
scas
gs
xor
cmp
adc
mov
xchg
pop
mov
xchg
and
inc
xchg
int
je
aaa
shl
push
xor
xchg
sub
cld
fidivrs
loopne
jp
hlt
outsb
mov
mov
mov
cli
jns
repnz
adcl
push
or
lock
jl
xchg
scas
push
mov
add
aas
or
fwait
jnp
dec
jbe
mov
dec
sub
pop
pop
jo
sahf
mov
xor
mov
xchg
mov
jle
mov
call
xchg
test
ljmp
out
rclb
and
pop
cmp
dec
cmc
incb
push
mov
mov
fstps
scas
outsl
mov
sahf
dec
xchg
int
scas
jbe
inc
lea
shll
adc
xlat
pop
in
lea
mov
arpl
adc
outsb
iret
sub
and
push
test
nop
jnp
imul
jl
jae
cmp
lret
insb
jl
outsb
lret
cmp
outsb
stos
push
lods
xchg
pop
mov
and
pop
jle
outsb
mov
ds
lcall
iret
push
das
out
aas
fimuls
into
pop
mov
dec
mov
scas
outsb
mov
ds
lcall
iret
push
das
sub
icebp
xchg
or
pusha
push
loopne
lds
or
jbe
mov
add
cld
add
mov
in
sub
ss
fstpt
push
xor
inc
fldt
scas
bound
lret
push
mov
je
icebp
out
lods
jge
mov
sub
dec
sub
dec
imul
iret
out
jo
test
stc
mov
ja
lret
aaa
stos
xor
aaa
add
jmp
out
es
fsubs
sub
out
pop
mov
out
jnp
hlt
push
pop
fcompl
ror
or
lock
adc
rolb
cmp
enter
jae
cmp
lahf
scas
das
lret
cmp
and
es
push
dec
sbb
sub
lds
dec
popf
fucomip
push
enter
sbb
sub
inc
test
daa
jbe
stos
rorb
pop
inc
cli
in
cmp
dec
push
movsl
orl
lds
lahf
mov
mov
into
orb
push
xchg
in
add
cmpsb
dec
sub
outsl
shlb
cwtl
push
je
pop
inc
xchg
das
out
sbb
outsb
pop
fwait
cmpsl
out
jp
outsb
lret
lods
mov
jae
jecxz
or
lea
jg
add
mov
aas
push
in
imul
int
add
add
lcall
adc
push
and
es
lods
adc
pushf
pushf
cmpsb
test
lods
cmp
pop
sbb
nop
mov
push
mov
push
pop
fwait
pop
into
jp
lds
xchg
lret
sub
sbb
and
aad
sbb
and
cmpsl
loop
scas
or
adc
pop
mov
jp
out
sub
sbb
dec
add
jae
out
into
jp
sbb
insl
out
fstp
cmpsl
insb
pop
mov
fwait
dec
clc
jnp
pop
jl
aam
insb
and
insb
or
fcmovne
adc
les
cmpsb
pop
mov
cltd
adc
push
add
ss
pop
ljmp
repnz
fcoml
pop
jecxz
filds
icebp
jae
sub
outsl
mov
and
mov
pop
dec
inc
lock
fdivrp
lret
scas
out
cs
inc
or
insl
cld
cmpsb
sub
in
ljmp
and
inc
pop
lcall
sub
test
and
loopne
test
pusha
push
xchg
es
jp
sub
dec
loop
sbb
lods
adc
sahf
pop
inc
mov
push
push
xor
jo
in
xor
leave
sbb
je
out
or
cmpsl
mov
arpl
lea
xlat
xor
fwait
aas
pop
add
adc
xchg
ljmp
mov
lahf
xchg
and
sbb
mov
addr16
sbb
jle
aad
js
ret
insl
outsl
arpl
lret
dec
jne
mov
clc
mov
out
adc
scas
jp
mov
data16
repz
aaa
mov
push
test
mov
gs
pop
cmpsl
and
loop
cmp
dec
inc
pop
xor
clc
cmp
xor
shl
cmp
fwait
fs
and
sbb
or
shl
outsb
nop
jo
pop
ss
sbb
pop
xorl
data16
int3
xchg
lea
mov
shrb
inc
push
mov
push
shl
rcrb
or
inc
pop
dec
imul
das
inc
sbb
icebp
shl
mov
sarl
loope
cltd
cltd
adc
jle
inc
push
stos
divb
pop
adc
adc
or
or
clc
cmc
lret
les
ror
test
adc
fs
mov
and
cmpsl
shll
repnz
sub
add
shrl
or
or
xor
or
mov
xchg
mov
dec
jne
jg
lea
mov
cmpsl
movsl
inc
icebp
icebp
xor
push
das
fstpt
scas
jg
nop
jg
sub
mov
mov
cwtl
lods
xchg
lcall
iret
movsl
mov
xor
xchg
xchg
lds
fldcw
lcall
mov
pop
dec
cmp
jl
cmpsl
xchg
out
jnp
push
push
pushf
scas
inc
rcrb
add
outsb
inc
in
jmp
pop
mov
pop
mov
inc
mov
cld
pop
xor
push
pop
push
stc
mov
mov
push
or
scas
mov
lods
lock
aad
jae
mov
test
insl
popa
mov
mov
dec
add
xor
stos
or
mov
test
aaa
push
test
jmp
mov
pop
and
cmp
sbb
adc
xchg
data16
fsubrs
jne
stos
in
movsb
mov
ja
loop
xor
push
mov
nopl
mov
pop
push
loopne
or
insl
test
dec
test
scas
lahf
rcl
mov
xchg
mov
jecxz
push
mov
aam
jle
xchg
outsb
in
jns
inc
sbb
bound
mov
in
and
add
mov
fidivrs
adc
adc
movsb
call
sub
jmp
lock
add
imull
test
add
sahf
loopne
jo,pt
add
lods
orb
mov
scas
rorb
jae
push
insb
mov
lods
push
test
cmp
mov
jl
lods
or
xor
push
rsqrtps
int
push
pop
popf
int
sub
or
sub
xor
cltd
push
inc
pusha
and
in
jmp
xor
dec
aam
fisttpll
pop
shr
loope
and
jp
fisubrs
push
and
pop
ficomps
dec
cmp
sahf
push
daa
fldenv
pop
addr16
dec
repnz
mov
pop
gs
pop
mov
xchg
test
sti
sar
pop
mov
adc
sbb
mov
in
add
fsubl
sub
imul
xor
dec
dec
pop
or
mov
mov
outsl
inc
cs
pop
inc
clc
push
in
jae
inc
cli
jb
jmp
mov
adc
xchg
xor
shll
fwait
sbb
mov
and
scas
dec
sbb
or
xor
cmp
or
xchg
sub
aam
push
fiadds
outsl
mov
adc
movsl
cli
jecxz
dec
imul
int3
inc
push
push
fldcw
cmp
mov
push
fisubrs
leave
lret
sbb
dec
or
pop
std
imul
js
jle
sub
dec
jbe
stos
paddw
lods
std
push
ret
inc
arpl
insb
mov
xchg
das
aaa
stos
jge
mov
lock
dec
cs
xchg
xchg
dec
jl
mov
jge
add
jecxz
mov
cmp
sbb
push
cltd
lret
adc
std
lea
or
in
mov
dec
pop
push
ja
add
ljmp
dec
fdiv
lea
inc
mov
push
and
sbb
sarb
stos
xor
fadds
dec
out
or
dec
dec
xor
jl
repnz
mov
cmc
stos
sub
inc
cmpsl
jmp
iret
jno
nop
cmp
sarb
xchg
jge
mov
adc
mov
xchg
cmpl
in
sub
andl
aad
push
sub
lret
xchg
mov
js
sbb
pop
mov
mov
addr16
push
rclb
add
or
in
lods
push
add
clc
in
ljmp
cmpb
mov
sbb
jb
insb
rorb
pmullw
xchg
daa
mov
xchg
mov
jb
jae
ljmp
inc
loopne
sbbl
scas
stos
insl
lahf
push
xchg
in
jmp
fmuls
xchg
xor
cltd
push
xchg
aam
movsl
enter
mov
call
jb
imul
aam
add
sbb
cs
aam
iret
fsubrs
xor
inc
mov
rcl
daa
arpl
cmpsl
test
xchg
stos
dec
inc
jg
sti
stos
pop
push
nop
mov
cmc
aam
imul
mov
xchg
dec
nop
mov
test
rcr
and
mull
test
mov
dec
sbb
cld
dec
xchg
lds
in
cmp
lods
or
arpl
stos
fadd
and
movsl
cmpsl
mov
or
rcll
xor
xchg
push
pop
in
cmp
out
jg
or
inc
bound
and
insl
sbb
test
addr16
cmp
adc
lods
jp
stos
jecxz
mov
loope
loop
out
in
sub
movsl
push
xlat
pop
loop
mov
orl
leave
movsb
dec
je
push
jp
cmc
mov
push
and
dec
rolb
in
mov
ljmp
dec
out
addr16
or
arpl
dec
into
dec
out
std
out
pop
imul
xor
into
push
xlat
or
and
sarl
les
jle
lock
les
dec
lods
mov
loop
mov
mov
push
scas
mov
sbb
inc
and
cmp
xchg
popf
sub
pusha
cmp
inc
dec
cmpsb
sbbl
adc
and
jp
fwait
fs
andl
and
test
jge
mov
or
sub
mov
add
cmp
daa
movsl
das
rorb
loop
push
or
pop
push
aaa
enter
pop
adc
sub
push
out
xor
bound
xchg
sbb
fyl2x
push
pop
xor
adc
adc
push
mov
pop
pop
lock
push
les
jns,pn
jp
pop
xor
xchg
movsl
cmpsl
add
xchg
aaa
pop
and
es
out
loopne
jo
fdivs
inc
clc
pop
fsubrl
dec
inc
cmp
imul
leave
mov
outsb
mov
test
cmp
rolb
loope
clc
jnp
orb
jnp
ret
fstps
in
lcall
lahf
inc
inc
je,pt
inc
add
mov
sar
push
jecxz
inc
mov
movsl
dec
jnp
loop
xor
jne
cmp
pop
gs
loope
dec
mov
push
mov
pop
jne
scas
jg,pn
int
ljmp
dec
in
arpl
les
jne
in
sbb
mov
and
push
mov
push
les
out
lahf
mov
xchg
mov
mov
in
sbb
fcoms
sbb
ljmp
and
ja
xchg
daa
popl
stos
aas
push
dec
cltd
jl
aad
push
int3
pop
jb
mov
cmp
fiaddl
iret
or
pushf
outsl
test
adc
push
test
dec
dec
cmpsl
leave
and
mov
inc
fsubrs
or
into
in
out
and
popf
sub
fistpl
xor
jle
mov
insb
test
jge
nop
inc
push
sahf
pop
and
jmp
dec
dec
mov
lds
leave
in
push
pop
inc
push
add
insl
in
in
sub
in
jne
stc
adc
gs
pop
xchg
adc
xchg
loope
jl
or
dec
pop
dec
or
divl
jbe
out
lds
dec
repnz
lcall
or
hlt
mov
jle
aas
cmpsl
inc
cmp
adc
jecxz
shlb
push
pop
cmp
cmc
mov
daa
scas
movsb
insb
pop
movsb
daa
das
sbb
and
jge
fstl
rorb
test
jge
adc
cli
in
ret
in
sub
jge
jl
cmp
cmp
push
inc
inc
in
sbb
add
mov
mov
lea
mov
push
xchg
stos
jp
movb
movsl
xor
xchg
mov
daa
add
xchg
fildll
xchg
lret
not
and
in
and
add
ss
or
mov
push
sti
pusha
mov
les
sub
or
test
xor
dec
sub
xor
test
data16
lods
js
lret
leave
paddb
sti
xor
xor
fimull
cmpsb
fisubrs
push
push
push
es
lods
cld
pop
cld
mov
lahf
sub
inc
inc
cmpb
dec
ret
mov
jl
push
inc
xchg
pop
fdivs
notl
inc
idivb
or
arpl
pop
inc
jl
inc
in
lret
fidivl
clc
pusha
and
mov
outsb
stos
mov
aad
push
jmp
mov
adc
lret
out
xchg
mov
mov
movsl
sarl
xor
jae
movq
cs
lahf
sarl
sahf
in
sbb
sbb
enter
mov
push
pop
mov
sarb
outsb
cld
mov
divl
ds
cli
das
inc
sub
rcrl
mov
sbb
push
shrl
repnz
and
and
sub
adc
out
sbb
sbb
dec
mov
and
and
adc
pop
push
add
jb
sbb
sti
shlb
into
xlat
dec
sub
sbb
inc
sarb
and
popl
xor
xchg
nop
jge
in
xor
ljmp
mov
insl
negb
clc
enter
add
xchg
push
fs
push
dec
pop
scas
fstpl
add
xchg
lahf
cli
xchg
in
dec
jp
mov
jns
sub
je
cmp
stos
pop
popa
hlt
jmp
sarb
fwait
scas
fidivl
mov
insb
lret
in
xchg
movsl
addl
cmp
mov
mov
mov
mov
and
mov
lods
mov
cli
outsb
ret
je
and
lcall
mov
in
sbb
jge
mov
out
mov
push
jno
add
ss
xchg
adc
mov
fs
ret
stos
cmp
cwtl
test
mov
add
subb
mov
and
add
cmp
lods
xlat
call
loope
clc
int
cmp
lcall
inc
rcrl
iret
adc
leave
popf
fstpl
fwait
das
xchg
sbb
ds
sti
jg
lcall
outsb
out
jb
call
fs
push
xlat
pop
jmp
fsubrl
add
inc
ljmp
cmp
movsl
dec
dec
nop
sarl
ret
popf
mov
mov
inc
and
add
and
aad
mov
lea
dec
stos
fsubs
xchg
cmp
mov
dec
fcmovu
out
pop
cwtl
sbb
inc
dec
dec
test
pusha
xchg
pop
push
jmp
jne
ss
or
mov
gs
cmp
inc
xchg
shrb
imulb
mov
sub
jb
push
mov
xor
mov
popa
insl
mov
addr16
mov
leave
pop
das
mov
dec
les
scas
mov
cmpsl
xlat
push
push
negl
add
mov
mov
aaa
dec
daa
cmpsl
call
shl
push
pop
sub
loopne
xor
out
xor
mov
adc
adc
shrl
rcrb
call
js
push
push
mov
mov
popf
js
test
pop
popf
roll
xchg
in
das
mov
test
cmp
add
cmp
enter
mov
add
lods
push
mov
and
mov
sti
testl
push
jne
test
jo
sahf
jecxz
enter
movsl
mov
jmp
inc
and
mov
sbb
pop
cmp
add
xchg
aaa
adc
cmpsl
and
repz
mov
and
mov
mov
jg
pusha
mov
or
cmpsl
pop
sub
mov
pop
mov
ret
repnz
and
movsb
lcall
dec
push
push
pop
add
js
xchg
dec
mov
rorb
les
cmp
enter
out
shl
stos
bound
adc
popf
leave
push
enter
js
mov
mov
popa
outsl
adc
dec
xor
aas
xchg
jl
dec
aad
mov
out
inc
push
push
or
leave
insb
cmp
add
push
pop
or
pop
in
and
inc
pop
xchg
xchg
lods
out
jg
into
jb
fbld
jne
call
outsb
sti
mov
mov
xor
imul
aad
in
mov
ljmp
int
inc
pop
pop
jg
aaa
out
mov
jae
sbbl
andl
jne
cmp
sub
adc
notb
cmpsl
icebp
push
nop
or
fs
call
inc
push
or
xchg
jg
aam
dec
pop
pop
aad
sbb
ss
xor
adc
imul
pop
xchg
adc
xlat
inc
sbb
js
or
in
popf
fdivrl
adc
mov
dec
out
addb
sbb
xchg
cwtl
adc
addr16
lods
push
jno
xchg
and
push
adc
push
shrl
mov
bound
in
inc
mov
push
stos
arpl
mov
hlt
fldenv
ror
jnp
das
bound
into
ret
jp
test
jmp
es
pop
jne
xchg
push
mov
divl
adc
loopne
mov
add
adc
jmp
into
lret
sbb
adc
ja
cmp
mov
cmpsb
cmpsl
sarl
movsl
mov
jge
pop
pusha
stc
mov
in
mov
ljmp
bound
ds
mov
lods
movsb
inc
adc
jg
mov
add
fcompl
push
out
and
inc
inc
cltd
sti
add
test
out
cmpsl
lock
inc
es
outsl
dec
and
xchg
inc
mov
imul
orl
pop
mov
dec
push
dec
jl
adc
pushf
in
or
pop
es
pop
mov
dec
dec
push
lret
jne
xor
add
sub
dec
pop
xor
mov
mov
in
mov
add
ret
jl
pop
decb
test
repz
push
xchg
add
and
out
and
mov
jle
push
shlb
jg
adcb
idivb
add
das
bound
cmp
pushf
mov
imul
inc
repz
out
xchg
out
shrb
lahf
je
mov
push
cmc
sar
push
push
lret
xchg
dec
lcall
fcomp
or
dec
addr16
push
cmpsb
fs
jne
loopnew
jae
xchg
addb
pusha
sub
adc
cltd
dec
and
lods
xor
out
test
loope
lods
xor
push
cmpsl
les
mov
pop
push
add
jl
dec
cmp
push
fs
jae
cmpsl
jb
sbbb
push
inc
mov
mov
pop
push
aad
mov
sbb
or
sub
ret
xor
dec
test
push
xchg
sub
data16
mov
fnstenv
aam
inc
or
int
add
out
clc
jg
dec
test
mov
out
sub
jge
out
pop
sub
xchg
sub
aas
dec
mov
pop
lcall
dec
xchg
push
test
mov
ret
shl
sarl
outsb
add
andl
sub
pop
dec
and
dec
lods
lds
insb
leave
sub
repnz
daa
jbe
cmpsb
aad
add
inc
fs
imulb
pop
pop
test
lret
jne
into
mov
sahf
dec
cmp
stc
jnp
xchg
xchg
mov
idivb
cmpsb
rorb
test
jnp
in
inc
jmp
popa
mov
pushl
pop
xlat
call
lcall
pop
xchg
sub
lcall
sub
arpl
cmpb
mov
movsb
xchg
or
and
int3
dec
mov
inc
jmp
push
movsl
cli
ja
jl
cmpsb
clc
adc
pushf
cmp
call
jae
ret
sti
into
mov
mov
or
addr16
fimull
scas
mov
pop
enter
outsb
mov
aas
mov
cltd
pop
int3
sbb
jae
repz
jp
fstpt
mov
addb
shll
leave
cmp
lock
loop
and
mov
data16
mov
insb
pop
push
scas
xchg
pop
mov
std
in
test
mov
cmp
cmp
movsb
shrb
add
insb
push
stos
aas
push
repnz
into
mov
cmp
ret
or
ss
dec
adc
imul
pop
add
lods
gs
push
pop
or
loope
jl
scas
jo
lods
sbb
ljmp
jecxz
popa
mov
xor
inc
sub
mov
inc
or
das
sti
pop
dec
sub
ljmp
cmp
jnp
lahf
out
jae
js
mov
mov
outsb
mov
mov
je
outsl
pop
xchg
neg
scas
add
mov
in
shl
xor
aaa
jmp
add
jnp
mov
pop
ror
inc
sbb
adc
adc
enter
pop
sbb
popa
push
dec
xor
fimull
inc
testl
add
scas
ss
jg
mov
mov
into
and
mov
addr16
lods
adcl
inc
cwtl
in
sub
fidivs
inc
sub
addr16
les
jmp
lods
aas
cli
or
pop
mov
dec
mov
scas
outsb
mov
ds
lcall
iret
push
das
out
aas
fimuls
into
pop
mov
dec
mov
scas
outsb
mov
ds
lcall
iret
push
sub
xor
pop
into
sbb
dec
mov
scas
outsb
mov
ds
lcall
aas
cmp
lret
fcmovu
call
outsl
scas
jg
iret
push
lahf
adcl
call
loope
icebp
cmpsl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
push
inc
push
jae
arpl
adc
jno
adc
jle
mov
sahf
repz
jecxz
xchg
into
sbbl
mov
aaa
push
inc
push
pop
arpl
adc
pop
xor
jle
mov
xchg
scas
jecxz
ror
sbb
lods
mov
push
loope
mov
pop
sub
es
fwait
lret
clc
mov
mov
pushf
cmp
inc
or
mov
mov
xchg
adc
xchg
lods
sti
outsb
cmp
or
cmp
pop
mov
sarl
scas
ds
scas
pop
xor
xor
push
push
or
fnstenv
fcmovb
inc
cmp
adc
out
jecxz
or
push
jnp
lahf
ja
sbb
popf
xchg
loop
ds
dec
add
loope
adc
push
sbb
and
out
dec
loope
stos
inc
out
dec
mov
jnp
std
repz
leave
repz
cmpsb
jle
fiadds
jae
cwtl
fsubp
jb
popf
in
cmp
ror
sbb
sahf
loopne
sahf
jp
pop
mov
mov
mov
push
jae
arpl
testl
jle
mov
test
mov
sub
xor
pop
inc
sbb
and
inc
and
cs
nop
ljmp
in
lods
mov
add
add
data16
sbb
mov
xchg
jmp
iret
fwait
shr
lods
in
mov
mov
scas
aas
inc
das
dec
adc
pop
inc
dec
add
outsb
and
mov
sahf
repz
jecxz
xchg
into
sbb
out
mov
push
jae
arpl
adc
pop
xor
jle
mov
sahf
repz
jecxz
xchg
into
sbb
out
mov
push
mov
mov
loop
adc
rclb
fldt
add
sbb
rclb
testb
push
pushf
inc
dec
push
xchg
pop
or
or
push
out
pop
rcr
sbb
add
fildl
out
mov
arpl
insl
inc
inc
loopne
dec
fcomps
and
shlb
and
dec
fmull
loop
cmp
jp
push
rcrl
jp
in
dec
mov
stos
inc
dec
sbb
ljmp
jmp
xchg
mov
and
jmp
pop
mov
fistl
xlat
jno
jl
decl
mov
ret
mov
add
imulb
cmpsl
stos
popl
adc
ficoms
jge
dec
je
in
lret
xchg
jge
jge
push
jg
or
mov
fwait
out
cmpb
xor
outsb
jo
pop
cltd
mov
fdivrl
sbb
pop
push
cmpsb
inc
or
mov
xorl
mov
jl
leave
orb
sub
or
add
xchg
jg
ret
mov
push
add
adc
lret
dec
sub
xor
jmp
pusha
sbb
ret
movsb
dec
mov
in
shll
adc
xchg
inc
in
ds
inc
mov
add
inc
xor
imul
es
inc
mov
pop
scas
fdivrl
aas
cmp
sbb
mov
push
mov
cs
mov
jbe
clc
sbb
ret
add
mov
lods
mov
imul
in
outsl
xlat
fisubrs
xchg
mov
jae
sti
lahf
iret
scas
xchg
xchg
out
pmaxsw
shll
jno
mov
xchg
sub
mov
sub
push
pop
sub
inc
push
add
ds
int
cmp
fcomi
mov
add
shrb
dec
lods
push
pop
pop
push
push
xchg
mov
lods
adcb
loope
lret
adc
sbb
cmp
and
mov
inc
adc
push
in
pop
push
inc
adc
mov
mov
xor
push
adc
in
inc
cmp
stos
aaa
hlt
cmp
adc
clc
sub
popa
insl
rorl
or
arpl
std
in
lods
popa
sub
mov
aaa
mov
icebp
imul
out
mov
pusha
in
xor
ss
repnz
repz
push
dec
icebp
push
or
ljmp
aam
or
jns
adc
pop
mov
add
repnz
mov
in
cmpl
jae
arpl
test
and
sub
inc
in
jae
cwtl
in
jmp
lcall
int
push
sbbl
clc
repz
dec
fldenv
sbb
jo
mov
jle
jae
or
push
pop
arpl
test
xchg
rcrb
daa
sbb
sub
push
loop
pop
push
push
xor
add
dec
cmp
sub
or
fs
iret
jl
cmp
mov
sub
into
aas
mov
popa
mov
dec
jmp
popf
lds
repnz
sbb
repnz
and
mov
insl
jmp
aaa
cmp
lret
rcrl
push
lret
mov
inc
pop
xchg
cmp
shld
mov
xor
xor
dec
call
sub
in
stos
out
and
mov
xor
pop
lea
aad
or
jns
push
mov
lahf
cmp
cmp
jne
xor
jae
mov
and
mov
xchg
sub
scas
sbb
xor
movsl
lds
nop
mov
fmuls
ss
cs
in
add
lds
xchg
dec
xor
out
add
xchg
push
jle
outsb
cmp
bound
aad
pusha
sbb
cmp
push
xor
or
icebp
out
pop
xor
mull
hlt
lods
sbb
and
mov
leave
push
adc
dec
rolb
jmp
push
into
lcall
rclb
aam
adc
jl
stc
mov
sub
jp
or
or
sub
mov
jnp
cwtl
aas
cmpsl
shrb
in
les
inc
jecxz
scas
sbb
mov
ret
jle
loope
dec
and
testl
lods
jl
and
fiadds
es
loope
popa
dec
jae
push
push
aam
aaa
outsl
mov
mov
add
mov
test
repz
and
sub
mov
push
push
rol
xchg
sub
sub
xor
mov
imulb
ror
in
in
push
jae
clc
je
push
ret
add
iret
jg
lahf
jno
jo
leave
ficoms
jo
movsl
jo
jmp
loop
and
and
stos
fsubl
sub
mov
bound
cwtl
push
dec
push
mov
xor
std
roll
lea
ret
inc
lea
xor
cmp
add
nop
cmp
scas
push
mov
mov
icebp
adc
loope
clc
popf
lret
sbb
xor
aam
inc
mov
mov
rcll
das
outsb
test
push
xor
fs
pop
cwtl
aam
lret
mov
test
jl
fmull
mov
cmp
xchg
pop
aad
clc
roll
jecxz
mov
jge
cmp
push
inc
pop
ss
xchg
sub
sub
cmp
repnz
in
sbb
jg
cmp
xchg
xor
aas
cltd
push
jp
int
pop
fldenv
jmp
xor
push
adcl
or
jns
cmp
pusha
ret
sti
int3
fisubs
cmp
mul
jae
imul
adc
xchg
clc
inc
mov
push
and
pop
sub
stc
loopne
cmc
lahf
jbe
jl
movl
in
jb
loopne
les
inc
mov
fsub
sbb
cs
jno
in
enter
adc
inc
push
mov
pop
mov
loop
iret
test
fstpl
ret
rcrl
or
ss
orb
mov
in
lret
jno
mov
xchg
stc
inc
repnz
stos
cmp
jmp
adc
imull
adc
mov
cltd
mov
mov
popa
jno
cmpsb
test
xor
divb
add
ss
or
lret
add
pop
or
std
scas
dec
cmp
ffree
sub
int
adc
adc
sbb
mov
iret
pop
sub
xor
stos
fstpl
jb
push
mov
mov
inc
sbb
mov
imul
pop
sbb
or
fadds
xlat
add
test
sbb
mov
dec
jns
outsl
fadds
cld
sbb
into
dec
inc
add
cmp
hlt
jmp
repnz
push
fiadds
arpl
jae
loop
push
cmpl
mov
inc
inc
fiaddl
push
and
lcall
sub
xchg
fstpl
sbb
dec
call
mov
mov
scas
fs
scas
xchg
adc
jbe
dec
pushl
lret
push
ss
daa
xorb
jne
movsl
jg
mov
and
xchg
fdivrl
mov
push
repz
jl
fs
pushf
and
or
jp
dec
cmc
jnp
and
out
cwtl
ficoms
rep
jbe
sbb
jl
sub
jo
std
addb
out
lahf
mov
pop
into
adc
out
xor
loope
pop
sub
mov
scas
or
shlb
dec
ljmp
sub
push
bnd
push
lods
je
xchg
jns
popf
pop
in
adc
lahf
xchg
and
push
repnz
fcom
fnstsw
sahf
xchg
faddp
push
pushf
roll
jecxz
or
sub
popa
pop
adcb
add
aas
out
clc
in
mov
dec
push
std
rcll
mov
add
lds
push
adc
sbb
mov
insb
sbb
sbb
adc
shrb
aad
clc
cmc
push
sbb
mov
mov
jne
sub
test
arpl
pop
sbb
sub
inc
popa
decb
std
data16
mov
sub
cmp
xchg
ja
pop
adc
inc
loopne
sub
xor
movsb
nop
xchg
mov
loope
cmpsb
dec
jo
push
outsl
ljmp
and
push
shlb
into
mov
in
mov
adc
mov
push
mov
or
jp,pt
jb
adc
fldcw
or
xchg
mov
mov
mov
mov
cmpsb
sbb
movsl
xchg
in
lods
movsl
mov
xor
loopne
xchg
pushf
in
aam
push
jle
loop
xor
and
icebp
xchg
push
in
movsb
shll
cmp
clc
pop
sbb
or
pop
les
pop
cmc
inc
aas
imul
clc
inc
or
mov
ss
lcall
sub
popf
mov
xor
lcall
mov
lods
popa
dec
add
or
inc
lret
iret
lret
daa
lret
push
aas
mov
cmpsl
test
test
js
push
sub
cmp
or
pop
sub
sti
js
lds
sbb
ljmp
mov
mov
jo
jmp
stc
mov
out
inc
mov
scas
adc
in
push
and
xor
pop
test
jl
push
aad
mov
sub
cwtl
and
cmpb
mov
adc
xchg
je
hlt
hlt
sub
ds
lds
cmp
iret
cs
push
sbb
cs
repnz
jle
stos
ret
mov
sbb
shrb
jl
pop
sar
lock
push
sub
aas
inc
mov
int3
aad
push
dec
ja
iret
inc
ret
xchg
mov
shrl
jbe
sbb
mov
xchg
and
out
icebp
fmuls
push
cld
jnp
push
ret
icebp
scas
fnstcw
test
outsl
mov
int3
jnp
ljmp
aad
out
test
das
ret
fsubs
mov
out
push
sub
adc
sbb
fs
push
mov
jmp
das
daa
jnp
xchg
into
push
test
adc
mov
out
pop
call
adc
lea
inc
outsl
mov
loop
xchg
jae
pop
aam
sahf
les
push
mov
fcmovnu
inc
mov
or
or
add
insl
xchg
fcoms
adc
or
popa
xchg
repz
fs
in
or
adcl
outsb
or
mov
je
xchg
repnz
fldenv
push
pop
sbb
jecxz
sub
push
nop
mov
je
dec
shrl
scas
imul
mov
ljmp
dec
iret
or
jge
jmp
sbb
push
inc
ljmp
mov
and
xor
stos
movl
xchg
push
jno
stos
push
jbe
pop
pop
fistps
in
xchg
and
pop
mov
enter
cmc
loope
cmp
mov
stos
orb
and
pop
mov
dec
out
and
pop
or
cli
dec
imul
test
pop
out
mov
andl
ret
clc
sbb
imul
pop
push
jbe
arpl
gs
jle
imul
test
mov
repz
insl
mov
lods
dec
call
rorb
push
pop
arpl
push
jne
sub
sub
pushf
mov
rcll
mov
fcmovbe
imul
daa
stos
push
jge
data16
xchg
in
lret
ja
mov
sahf
mov
stos
mov
lods
cmp
push
test
mov
add
ss
fbld
dec
jno
das
int3
jl
sbb
jmp
ljmp
or
mov
lahf
pop
add
mov
add
mov
cs
jmp
and
mov
cs
pusha
sub
enter
jp
cli
xlat
dec
adc
mov
adcl
inc
call
or
gs
nop
test
adc
pop
mov
xchg
roll
call
and
fsubr
mov
inc
and
popa
sbb
fs
jl
stc
add
cmp
div
leave
sbb
sub
mov
insl
push
bound
inc
stos
xchg
mov
aaa
cld
and
xchg
je
out
loope
xchg
xchg
cli
xchg
scas
shrb
mov
xlat
fiadds
sub
bound
test
lcall
xor
aas
cmp
or
or
icebp
aad
dec
mov
inc
lods
dec
in
adc
ljmp
cmp
sbb
xor
out
insl
jnp
dec
mov
cmpsl
xor
cmp
sub
mov
inc
mov
or
movsb
leave
xorl
int
sub
and
orl
mov
shll
xlat
or
into
call
arpl
xlat
call
andb
push
mov
xor
fistpll
stos
cmp
fcomps
testl
inc
mov
xchg
adc
sub
add
test
iret
mov
add
adc
mov
push
dec
cmpsl
movsb
mov
or
xchg
movsl
icebp
jne
mov
xchg
xor
lds
add
push
inc
jno
jae
xchg
aaa
jae
pop
dec
mov
mov
jno
sub
sub
aam
push
pop
mov
push
int
sti
enter
mov
mov
leave
js
xor
or
out
sub
mov
cmp
mov
mov
repnz
adc
outsb
xchg
ret
or
add
in
sbb
and
xchg
mov
imulb
cmp
add
in
add
ficompl
mov
cmp
jmp
inc
push
dec
jns
push
fwait
lock
rolb
sbb
xchg
outsl
jns
rorb
xchg
lds
stos
bswap
sbb
minps
cmp
mov
ret
adc
mov
jae
les
jb
jecxz
sub
test
push
add
lcall
mov
idivl
and
pop
dec
push
jle
hlt
gs
adc
sbb
mov
addr16
xor
lcall
sbb
xchg
add
cmp
insb
imul
xor
push
inc
and
inc
jmp
mov
adc
pop
rolb
stos
push
cmp
jp
lcall
sti
inc
mov
js
pop
jo
pop
test
adc
xor
mov
daa
andl
ljmp
cmpl
push
ds
dec
xor
mov
stos
scas
sub
pop
inc
cmp
cmpb
rol
sti
sub
mov
addr16
adc
rorb
inc
xchg
into
xchg
sahf
cmpsb
sbbb
sbb
out
lods
mov
sub
test
push
pop
dec
xchg
or
mov
popf
daa
insb
jmp
sub
push
dec
cld
les
ljmp
dec
push
sbb
jl
inc
call
repz
popf
sar
push
outsl
lret
idivb
fimuls
ret
rcrl
dec
cmp
sarl
ds
aaa
adc
cltd
pop
push
ret
lret
std
les
xor
ret
das
dec
pusha
sarb
sbb
adc
lds
js
ja
daa
data16
mov
mov
or
sbb
or
andb
outsl
pop
std
jmp
cmp
push
xchg
jns
xlat
lock
addl
push
mov
inc
push
mov
mov
outsb
sahf
pusha
xchg
or
daa
mul
pop
out
repz
out
fstpl
jmp
mov
fadd
push
or
fstps
dec
loope
notl
shl
mov
xchg
push
adc
inc
dec
push
lcall
mov
nop
lahf
inc
ljmp
fdivl
aaa
adc
std
ja
pop
cpuid
mov
jl
out
in
fildl
mov
dec
loope
pop
cmp
lods
fisttpl
dec
mov
iret
sbb
xchg
rolb
les
out
mov
adc
pop
adc
aaa
imul
lds
jmp
and
mov
xor
lret
popf
xchg
outsl
leave
push
xor
test
scas
test
ror
mov
iret
xor
push
enter
sub
lea
pop
and
testb
xchg
lret
in
or
jbe
jb
cltd
or
inc
pop
sub
clc
std
pop
imul
and
lock
ud1
loop
mov
lcall
mov
adc
jmp
mov
dec
pop
arpl
or
mov
add
lret
repnz
ds
add
ror
bound
pusha
fisubrs
js
cltd
xorl
xor
ficompl
xor
std
std
ja
dec
rcl
scas
imul
add
testb
pop
xchg
je
push
imul
push
inc
push
das
or
mov
mov
xlat
cmp
fsubrs
sub
insb
mov
or
xor
lock
xor
mov
rorl
pushf
mov
ja
mov
mov
lcall
movsl
or
in
lds
in
jp
and
aas
fistps
test
dec
jl
cmp
mov
enter
xor
inc
aas
lret
xchg
cs
mov
push
lods
jmp
xchg
inc
hlt
lods
xor
out
out
add
sahf
repnz
es
into
push
in
push
ficoml
cmpsb
cwtl
test
or
push
add
je
test
loope
xor
xor
jne
mov
push
in
nop
shlb
mov
loop
pop
jmp
mov
daa
lret
cltd
fsubl
push
nop
push
dec
sub
inc
dec
stos
push
adc
mov
popf
daa
sbb
inc
test
mov
xchg
and
and
scas
dec
adc
push
std
sub
daa
divb
mov
in
jg
loopne
loopne
inc
sbb
sahf
rclb
fimull
cmp
shlb
and
pmaddwd
mov
dec
ret
loop
cmpsl
and
hlt
in
mov
xor
iret
rcr
stc
ficoml
inc
sub
add
or
filds
add
mov
mov
xor
ficompl
xor
ret
adc
clc
jne
xchg
das
and
mov
int3
mov
dec
push
jmp
cmpb
or
add
mov
mov
push
frstor
push
mov
push
je
adc
rcll
popf
or
addb
stos
arpl
out
jbe
dec
mov
je
xchg
push
sar
loop
dec
lea
lds
fs
add
rcll
js
lods
int3
push
ja
xor
repz
xchg
roll
inc
addb
pop
ret
cld
fdivrl
add
cltd
cmp
mov
fwait
fnstenv
fstps
dec
cmc
repz
jo
in
movsb
jbe
or
cmp
pop
cmpsl
lahf
rcr
xor
mov
test
shlb
pushf
fs
pop
push
sbb
mov
mov
test
js
movsl
shr
in
jo
int
inc
mov
inc
cmpsb
pop
inc
lock
pusha
mov
daa
push
mov
andb
and
int3
jne
mov
pop
pop
pop
cltd
in
jmp
lock
movsb
stos
ljmp
cld
cmp
fadds
incb
dec
jnp
lods
lret
sub
dec
into
es
popa
out
sahf
mov
xchg
mov
mov
clc
mov
pop
adc
push
cltd
adcl
in
push
jno
jl
shlb
mov
arpl
push
es
jge
cmp
jns
test
aaa
lods
and
lea
hlt
ja
jb
dec
add
call
inc
add
mov
iret
aad
mov
sbb
inc
xchg
js
lahf
insb
mov
and
clc
inc
daa
orb
insb
movsb
gs
or
cltd
dec
dec
hlt
or
sub
rcrb
cltd
test
push
jbe
mov
js
xchg
idivb
jl
fldt
js
addr16
sub
adc
popa
lret
add
push
mov
inc
movsb
imul
imul
into
popa
sbb
mov
pop
bound
mov
inc
jge
sbb
aas
add
mov
mov
xchg
insl
es
jno
add
es
push
bnd
lret
testb
dec
mov
icebp
jnp
imul
push
lcall
mov
add
jne
mov
pop
mov
mov
mov
sahf
mov
in
mov
movsl
push
outsl
inc
dec
xor
mov
in
xchg
xor
repnz
test
cmp
and
dec
clc
push
mov
mov
mov
and
outsl
xchg
inc
lahf
lcall
and
in
pushw
cmpsb
call
add
xor
test
jecxz
test
fld1
and
inc
mov
int3
je
mov
imul
aam
icebp
jne
mov
push
xor
arpl
adc
pop
xor
jle
mov
sahf
repz
jecxz
xchg
into
sbb
out
mov
push
jae
arpl
adc
pop
xor
jle
mov
sahf
repz
jecxz
xchg
into
sbb
out
mov
sahf
adc
add
xor
jle
push
ret
sahf
add
xchg
fidivs
push
pop
push
sub
inc
adc
pop
xor
jle
mov
pop
scas
jecxz
in
or
dec
adc
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
loop
jb
dec
xchg
stos
out
mov
inc
sub
bound
jb
add
dec
and
mov
loop
repnz
sub
fldenv
sub
bound
jb
insl
pop
adc
dec
xor
dec
xchg
lock
icebp
scas
rorl
popf
or
inc
cmp
push
jnp
push
push
xor
ret
cltd
xchg
jmp
sbb
shr
nop
mov
push
insb
cmp
ret
loope
xor
outsb
pop
loop
lock
or
bound
add
pop
and
xlat
push
iret
fdivrl
shrl
push
add
cmp
xlat
and
test
jns
xchg
adc
dec
and
repnz
dec
push
sub
es
enter
sub
sub
testb
lret
jmp
mov
ja
cmpsb
icebp
xlat
xchg
stos
cmp
sbb
imul
push
add
fdivp
jbe
push
vmovsd
adc
loop
dec
movb
fs
pop
push
add
in
pop
and
jo
mov
cltd
mov
out
cmp
fnstcw
xor
les
xchg
add
cmp
jno
inc
and
aad
int3
sar
mov
std
xchg
lret
leave
xlat
cmp
sbb
or
sub
push
xchg
xchg
testb
mov
jp
dec
add
pop
dec
adc
das
inc
sub
xchg
cmc
mov
xchg
mov
jmp
mov
inc
sub
bound
jb
add
pop
and
mov
loop
repnz
sub
fldenv
sub
bound
jb
add
pop
and
mov
inc
cli
ficoms
cld
or
sbb
adc
andb
adc
pop
sbb
int3
or
add
sub
subb
cld
jnp
sub
jge
movsl
imul
cmp
sbb
pusha
xchg
js
stc
call
pop
ss
popa
sub
leave
rol
mov
lods
sbb
bound
inc
sbb
cmp
sbb
pop
insb
rorb
push
cmpsb
je
daa
repnz
push
add
nop
jge
not
mov
xchg
xor
cmp
mov
dec
mov
jnp
pop
negl
add
jp
faddl
fldl2e
outsl
int3
js
mov
imul
adc
adc
sub
loopne
sbbl
mov
sahf
iret
out
into
xchg
imul
out
pushf
xchg
insb
add
mov
mov
orb
decl
std
shll
pop
cmp
pop
pusha
inc
rolb
loopne
mov
or
xchg
mov
aam
incl
mov
movsb
dec
popa
pop
in
rcr
sbb
jb
pop
mov
jmp
cmp
andb
adc
pop
test
subb
mov
sub
addr16
jmp
and
scas
rol
out
adc
je
xchg
aas
loop
push
pop
ljmp
jmp
push
sub
cmp
add
sahf
inc
or
repnz
adc
push
push
addr16
ficomps
adc
mov
mov
push
out
out
xchg
sbb
out
adc
das
ljmp
or
scas
adc
mov
lret
out
xor
fadds
dec
hlt
adc
into
pop
cs
ljmp
and
push
fdivs
jge
adcl
push
mov
inc
es
mov
out
cmp
pop
jle
dec
and
std
mov
in
aas
jmp
popf
ljmp
jmp
movsl
pop
negl
les
mov
push
inc
adc
dec
inc
push
sub
xorb
and
loope
imul
adc
pop
mov
shlb
xor
cmc
out
jae
mov
pop
push
lahf
pop
nop
sub
inc
loope
mov
xor
in
xchg
dec
loop
add
arpl
cs
add
cmpsl
bound
jo
stc
pushf
in
push
and
in
sahf
shll
leave
fstpl
sbb
enter
push
sub
add
mov
stos
and
enter
call
imul
mov
xor
int3
pslld
leave
rcrl
sub
ss
add
out
fucomip
dec
ja
jl
out
in
cli
daa
dec
push
fistpll
xor
inc
ds
aaa
mov
dec
mov
icebp
sahf
xor
scas
lret
jo
arpl
sub
mov
imul
mov
pop
sub
mov
or
ljmp
sbb
inc
test
mov
adc
jle
xchg
addb
daa
sub
add
xchg
inc
repz
ror
pusha
flds
and
cs
enter
enter
clc
call
cli
cmc
enter
xchg
dec
fmuls
mov
lret
pop
fsubl
test
arpl
sbb
sbb
pop
icebp
push
mov
lods
icebp
mov
imul
clc
in
and
in
nop
sub
cmp
jb
pop
inc
jle
add
and
data16
test
jno
imul
pop
cmp
sub
xor
into
scas
inc
push
addps
hlt
pop
pop
arpl
dec
xchg
jne
mov
xor
push
imul
push
mov
sub
imul
push
testl
orl
in
xor
inc
push
add
gs
or
jg
add
fs
jge
out
inc
sub
cmp
lret
xchg
cmp
push
inc
jle
or
inc
dec
in
iret
shll
add
xchg
inc
dec
mov
in
pop
int
cmp
loope
push
cli
mov
test
or
jno
in
xchg
xchg
fs
push
and
xor
jl
xlat
out
xor
in
fisubrl
cmp
inc
lret
mov
rcll
ja
adc
test
dec
aas
xchg
test
int3
pop
scas
cmp
test
add
pop
cmpsl
jl
adc
xlat
pusha
cmpsl
out
pushf
mov
add
cli
xchg
sbb
inc
pop
imul
repz
in
pop
xor
icebp
sub
pop
jge
xor
pop
xlat
lods
test
in
cli
mov
shrl
sbb
xchg
inc
inc
dec
movsb
pop
in
jnp
outsl
inc
lahf
push
std
ds
fistps
fldlg2
mov
sub
dec
dec
jg
imul
cwtl
inc
dec
popa
js
shl
inc
fwait
push
les
sbb
imul
inc
ljmp
enter
or
leave
push
cmpsl
fcmovb
push
cmp
nop
fucomp
pusha
push
outsl
cmpsb
jp
sub
mov
xorb
jnp
mov
push
mov
cmc
int
cli
sub
mov
dec
lods
xchg
mov
test
mov
insb
sysret
xor
jae
mov
xchg
add
push
test
adc
pop
pushf
or
fsubs
pop
icebp
inc
fsubrl
pop
adc
sub
ss
xchg
sub
push
lods
movsl
sbb
fmuls
fistpl
ds
popa
movsb
xor
adc
mov
cmp
xor
lret
lahf
adc
or
test
xchg
movl
pop
popa
jg
aad
mov
sti
rep
or
pop
fnsave
frstor
jle
and
lock
or
lret
pop
jp
mov
xor
or
dec
xchg
push
adc
aaa
xor
xchg
and
dec
inc
xchg
dec
cmp
ss
rcrl
mov
cld
test
cmpb
or
cld
int3
add
cmp
nop
fcomps
loope
test
dec
mov
movsl
or
jae
or
and
scas
iret
jbe
mov
push
aas
xor
js
test
xchg
jmp
loopne
mov
pop
fwait
jecxz
xlat
jae
mov
leave
fdiv
enter
cltd
jl
aad
iret
sub
cmp
iret
sbb
insb
hlt
mov
xor
lds
jno
aam
push
movb
popa
into
sti
push
cltd
mov
stc
pop
mov
sbb
arpl
xor
sub
or
push
dec
jno
push
jmp
loop
ljmp
or
mov
inc
addr16
cmp
and
sahf
andb
adc
sub
mull
mov
sub
sti
fildl
cmc
gs
mov
sbb
cmp
sbb
jne
jne
dec
mov
or
lods
pop
sbb
les
or
dec
jg
in
ss
insl
ja
daa
adc
stc
shll
fldl
inc
aad
jg
ficomps
insl
sub
imul
jmp
fcmovnb
adc
xor
cmp
xchg
sub
stos
inc
xlat
outsl
xor
data16
movsl
in
outsb
xorl
cwtl
repz
jmp
shl
sbb
mov
sbb
ja
sti
cmc
sti
repnz
inc
mov
bound
subl
stos
adc
sub
dec
dec
lea
mov
mov
out
shrb
jns
loop
jg
mov
mov
mov
adc
fs
push
ljmp
push
testl
pop
stos
or
cmp
add
cld
rclb
cmp
push
enter
push
out
arpl
sub
and
test
lods
xchg
add
lock
sbb
inc
add
sub
out
aad
pop
call
call
xor
pop
mov
loope
rorl
inc
xchg
adc
ljmp
orl
sub
fsubrl
ds
cli
or
cwtl
iret
mov
pop
and
sbb
adc
sub
andl
jle
mov
rorl
in
push
ss
xor
mov
insl
dec
sbb
gs
ret
or
ret
add
or
sub
pop
mov
sub
int3
add
dec
loope
aas
lock
mov
adc
sbb
cmp
ja
pop
int
adc
and
enter
cmp
pop
es
mov
icebp
or
movsl
fwait
mull
mov
loope
cli
loopne
loope
jbe
xchg
xor
out
adc
rcrb
movl
cli
sbb
jle
js
pop
xor
dec
popf
ljmp
iret
jno
add
mov
push
shll
fnstenv
pop
xchg
jb
je
mov
divl
and
mov
mov
push
xor
sahf
out
or
xchg
filds
lahf
xchg
sti
clc
addl
dec
ror
js
mov
imul
in
sahf
aad
push
adc
in
jmp
add
repnz
xor
and
lret
inc
and
lock
cmp
scas
loop
lcall
jge
inc
js
push
fcompl
shrl
aaa
xchg
cmpsb
or
aas
push
jl
mov
add
fdivrp
inc
jo
push
or
shll
pop
jecxz
or
add
pop
mov
sbb
mov
cmp
gs
ret
aas
mov
int
imul
inc
cmp
and
lcall
enter
movsl
push
in
xchg
rorb
ds
stos
rcrb
arpl
xchg
loope
rcll
notl
push
lcall
add
dec
jg
xor
les
cld
test
mov
scas
push
popf
fs
adc
or
popa
dec
push
icebp
dec
adc
mov
mov
mov
mov
dec
inc
repz
nop
mov
cmc
and
sbb
pop
stos
inc
sub
int3
add
repz
jbe
popf
not
mov
mov
mov
les
pop
xchg
leave
stos
cmpsl
dec
pop
in
xchg
aam
rcrl
xchg
imul
add
mov
sbb
pop
mov
mov
xor
jmp
xchg
xchg
ja
mov
mov
xor
adc
in
dec
xchg
aam
lcall
mov
push
cwtl
movsl
mov
pop
lods
fndisi(8087
jne
outsl
in
inc
push
push
push
movl
xor
imul
xchg
cmp
inc
arpl
in
sub
push
gs
jge
nop
jnp
mov
push
push
or
jge
aam
cmp
out
loop
repnz
lods
cmp
hlt
bndstx
in
adc
outsl
leave
mov
inc
xor
std
or
inc
mov
mov
jae
lods
mov
insb
nop
int
dec
sbb
pop
inc
or
fsubl
test
stos
jbe
out
xchg
scas
jno
sarl
jmp
outsl
nop
shrl
and
fcmovu
sub
inc
inc
sbb
sbb
movsl
xor
or
addr16
xor
sbb
popf
push
hlt
mov
repnz
cmpsb
sbb
and
push
xchg
clc
cmp
push
lahf
in
mov
xchg
jnp
pop
ljmp
test
xor
movsb
in
jle
or
dec
test
movsb
mov
cli
or
jno
dec
dec
jecxz
cwtl
jb
mov
lods
mov
repz
cld
mov
xor
js
jg
mov
mov
in
pop
mov
inc
dec
dec
ds
cmp
call
mov
cwtl
fmuls
add
inc
lahf
ss
loopne
cmp
add
in
std
and
adc
or
mov
jecxz
into
imul
push
subb
pop
sti
jnp
push
inc
insl
nop
jg
cmp
fistpll
mov
nop
jecxz
fwait
mov
jns
insl
outsl
mov
rcr
pcmpgtb
add
and
orl
adc
test
adc
jmp
inc
xor
cmp
imull
push
sub
xor
nop
mov
int
push
sub
dec
dec
mov
jne
ja
dec
std
mov
outsl
fcomps
imul
lods
pop
xchg
dec
xor
icebp
sub
out
jbe
dec
iret
fnstenv
insl
adc
sbb
bound
je
pop
cwtl
nop
fisubrl
sbb
rcl
nop
cld
inc
rorb
inc
movsl
int
cmpsl
mov
in
jo
out
dec
fwait
lret
fistpl
adc
mov
sub
movsl
shl
cmp
sub
mov
xchg
jne
push
mov
sbb
aaa
xor
dec
inc
lahf
addl
mov
rcrb
mov
and
lods
arpl
call
rolb
cltd
and
in
cmp
idivb
shlb
fs
cmpsb
add
pop
lahf
sahf
pop
test
or
lahf
iret
mov
pop
jae
pop
mov
and
ja
fdivl
fisttps
movsb
add
jecxz
in
push
pushf
popf
inc
test
cmc
cs
jae
and
ss
pop
ja
jbe
cmp
js
mov
hlt
push
repz
jge
cmpsb
mov
pop
sbb
cltd
out
out
gs
mov
stc
outsl
jbe
scas
dec
jp
and
fbld
xchg
dec
call
push
push
mov
adc
sbb
push
mov
add
fs
test
push
call
adc
sarb
les
fsubrs
je
xchg
stos
xor
adc
add
js
sub
pushf
gs
jg
divl
dec
jmp
mov
imul
sbb
inc
push
pop
lock
pop
addr16
sub
lods
or
jp
or
adc
sub
sub
push
test
xor
xor
out
xor
jle
inc
jecxz
imul
fcomps
ja
clc
dec
cltd
ja
push
cmc
adc
fldcw
fistl
push
add
es
pop
stos
sbb
fldenv
loopne
iret
icebp
push
sub
es
add
shlb
cli
push
or
insb
das
outsl
sbbl
sub
enter
mov
xor
mov
sahf
add
xchg
incb
mov
stos
imul
js
movl
cmp
out
and
pusha
push
clc
and
inc
inc
add
xchg
xchg
ret
mov
or
jnp
jns
insb
adc
aam
dec
sub
test
and
test
icebp
cmp
lret
andb
jle
or
jg
das
icebp
cmpsl
loop
mov
cs
dec
nop
jb
sahf
aam
xor
push
sub
and
pop
sahf
rcr
or
add
lret
sub
mov
mov
loope
push
subb
pop
out
adc
gs
xchg
lock
push
test
dec
or
dec
and
xchg
mov
ljmp
pop
inc
cmpb
xor
push
mov
mov
adcb
dec
mov
jne
fiadds
xor
jp
mov
or
outsl
sub
rcr
scas
xchg
jg
inc
or
fwait
call
test
ljmp
jge
outsl
pop
cmp
andb
negl
shr
jl
shrl
xchg
mov
lock
inc
or
or
out
lds
mov
ficoms
mov
xor
and
mov
mov
or
lahf
pop
jnp
fildl
fsub
inc
iret
imul
loope
dec
lds
sbb
mov
or
xchg
sbbb
adcb
sub
test
or
imul
push
sbb
les
sahf
jg
lret
call
out
push
push
out
xor
sub
cli
cltd
insb
cmp
arpl
inc
loopne
fsubrl
hlt
sub
bound
addr16
jb
or
dec
mov
cmp
and
loop
mov
pusha
insl
jl
sbb
xchg
clc
cltd
hlt
insb
inc
push
and
rcrl
imul
push
and
rcrl
cli
add
dec
leave
jo
adc
mov
enter
orl
jne
sbb
fucom
sbb
out
addr16
cmpsb
das
push
int
and
lcall
fwait
mov
add
lds
addr16
rolb
or
mov
pusha
pop
mov
pop
push
arpl
inc
enter
ljmp
mov
add
out
xor
pop
ret
sbb
cmp
push
int
dec
inc
sub
cmp
xor
les
enter
and
ja
scas
pop
orb
mov
xor
cld
adc
mov
add
loop
jle
adc
cmp
sahf
mov
push
mov
mulb
mov
sbb
cmp
in
call
mov
into
xchg
aad
fcmovnu
pop
aad
icebp
pop
jg
shlb
sti
es
inc
les
jbe
xor
pop
mov
movsb
mov
xchg
mov
jne
ds
or
adc
add
dec
leave
sbb
add
pushf
add
and
push
pop
mov
test
mov
ret
dec
movsl
inc
lock
ret
mov
push
mov
xor
cmp
imul
push
sbb
mov
notl
xchg
ja
push
outsb
sub
ficoms
ljmp
sahf
aas
mov
movl
dec
dec
repz
xlat
cmpb
push
inc
xlat
mov
sarb
or
lret
loop
fs
mov
xchg
repnz
mov
mov
fists
daa
notb
add
test
xor
and
mov
fs
data16
cltd
or
pop
into
and
or
out
mov
icebp
inc
call
ret
xchg
pusha
fs
xor
test
iret
adc
push
or
sub
jno
push
jns
mov
roll
into
mov
mov
mov
cmp
or
jg
xchg
pop
cwtl
nop
push
mov
cmp
mov
iret
push
inc
dec
mov
cld
pop
add
clc
lods
pop
in
aam
push
dec
das
push
or
dec
cmp
movsl
jmp
cmp
movd
lea
rorl
xchg
inc
fs
mov
inc
aam
pop
lods
sbb
das
mov
out
cmp
mov
xor
popa
inc
push
or
ret
mov
out
cmp
sub
outsb
pop
inc
cmp
inc
dec
dec
daa
testb
mov
out
inc
shl
jne
stos
pusha
pop
loope
and
push
in
mov
jl
into
and
rorl
loope
shll
xchg
ds
fidivrs
into
leave
iret
push
and
daa
push
jecxz
jecxz
sti
add
aam
insb
enter
inc
lods
out
movsb
sbb
insb
shlb
and
mov
int3
es
add
pop
imul
pop
mov
lret
push
dec
xchg
lret
and
mov
lods
mov
cmp
aas
xor
scas
lcall
scas
sbb
jl
inc
lock
add
jp
sub
push
add
in
push
add
inc
xchg
mov
call
inc
loopne
sarb
mov
dec
and
sub
and
mov
aad
out
or
fdivrs
ja
dec
cmp
pop
push
adcb
pushf
pop
mov
outsb
into
jl
stc
pop
popf
mov
sbb
pop
lock
mov
jbe
jp
mov
dec
or
insb
inc
push
pop
subb
adc
jg
imul
fstps
scas
push
bound
addr16
mov
mov
in
jbe
movsb
jecxz
insb
dec
push
xor
shr
fwait
and
push
gs
mov
out
es
lret
or
rcrb
rcll
push
sub
in
testl
outsb
jp
xor
push
pop
or
dec
xchg
inc
fdivp
lea
push
add
icebp
out
repnz
imull
xchg
push
ljmp
cmp
push
lret
fbld
ficoms
push
ljmp
repz
jl
mov
xchg
add
add
pop
subl
inc
cwtl
int
inc
in
into
xchg
cmp
movsb
jb
in
dec
in
push
lds
adc
test
in
pminub
jl
subb
lahf
and
cld
sub
ret
daa
rol
push
imul
adc
cmp
push
outsl
iret
popa
mov
jbe
sub
nop
cmp
mov
and
cmpsl
xor
xor
add
push
call
mov
sub
jns
add
xchg
jns
mov
mov
mov
fadds
mov
stc
cmp
mov
xor
xchg
inc
lret
add
fnstcw
jmp
jp
push
or
int
test
rclb
sub
fldenv
sub
bound
jb
add
pop
and
mov
loop
repnz
sub
fldenv
sub
bound
jb
add
pop
and
mov
lcall
fldenv
sub
bound
jb
add
pop
add
mov
loop
repz
sub
pop
and
mov
or
cmpsb
fnsave
cmp
popf
push
mov
mov
mov
popa
jmp
je
lret
push
fldt
xchg
sbb
imul
les
das
je
xor
sub
adc
inc
lret
push
fstpt
xor
add
push
add
jb
arpl
push
sub
and
pop
cwtl
movsb
sub
in
xchg
dec
shrb
outsl
mov
xlat
mov
jno
testb
lahf
cwtl
mov
xor
mov
mov
sbb
mov
mov
movsb
mov
fs
in
lds
fldenv
hlt
mov
push
test
adc
insb
loopne
push
mov
in
push
fs
lret
mov
fwait
dec
stc
inc
mov
or
stc
hlt
rorl
or
aas
fidivs
dec
addr16
adc
jmp
jmp
xor
lret
and
push
outsl
sbb
pushf
xor
push
fs
sti
jae
and
cwtl
and
aam
dec
jnp
xor
inc
dec
sub
roll
ret
je
add
inc
fstl
adc
sbb
imul
stos
cmpsb
mov
add
push
inc
shll
fcmovbe
sub
dec
shrb
mov
sbb
daa
mov
inc
les
push
jne
or
movsb
adc
ret
js
je
imul
sbb
jne
popa
out
js
pop
fwait
adc
xor
cmp
outsl
aad
mov
dec
aam
and
xor
add
adc
fs
sti
inc
lret
push
xchg
sbb
imul
les
pop
and
xor
add
adc
fs
sti
inc
lret
push
lret
sbb
test
inc
and
out
sub
sbb
sub
inc
dec
mov
push
xchg
cmpb
outsb
jnp
cmp
stos
testb
sbb
and
mov
test
outsl
xchg
or
pop
lcall
push
insb
mov
fs
mov
mov
cmp
fwait
xor
fcoml
fs
push
sub
dec
sbbb
rcll
add
or
xchg
inc
xchg
std
jl
jle
das
xchg
sub
dec
mov
inc
sub
std
and
movsl
pop
push
pop
mov
push
shr
inc
int3
sub
fisubl
fnop
mov
adc
mov
pop
adc
inc
mov
push
adc
cmpl
int
sub
iret
xchg
push
fidivrl
mov
popf
push
dec
out
push
sub
negb
jns
add
xchg
xor
pushf
sbb
test
fcmovbe
jae
xchg
in
es
fs
xchg
dec
push
mov
pop
dec
aam
loopne
sbb
addl
mov
xchg
push
sbb
mov
fmull
xchg
push
or
dec
jle
std
adc
xlat
leave
pop
mov
ret
outsb
xchg
ffree
lods
outsl
pusha
ds
int3
lods
pushf
les
adcl
shr
fucomp
xchg
clc
jne
sub
aam
ljmp
lock
xor
pop
mov
mov
push
push
into
fsts
adc
std
push
scas
xchg
xor
insl
repz
hlt
push
add
fstpt
movsl
adc
imul
cwtl
xchg
test
aam
xchg
jp
and
ja
cmp
xor
pop
or
mov
iret
lret
pushf
aas
push
sub
hlt
xor
lret
insb
jmp
xrelease
std
cwtl
fdivs
dec
cltd
fidivs
rorl
repnz
xchg
repnz
xchg
fs
jp
lret
pop
jecxz
sub
sbb
xchg
ljmp
dec
out
mov
scas
mov
mov
push
loopne
fwait
js
das
push
adc
loopne
fwait
repnz
ret
das
and
nop
adc
aam
xchg
jg
enter
mov
dec
jle
add
cmpsb
add
movsb
xchg
cmc
lock
lret
test
pop
outsb
mov
loop
pop
imul
ja
xor
mov
sub
cmp
test
imulb
fdivs
jl
mov
popf
jnp
je
cmp
imul
xor
push
test
ret
and
pushf
xor
inc
pop
mov
xor
clc
dec
jmp
add
hlt
loope
adc
sar
and
les
aad
hlt
test
loope
mov
xchg
dec
sbb
shrl
call
inc
cmp
xchg
sbb
push
mov
or
cmpsl
push
adc
lret
test
fs
mov
ror
cmp
pop
fwait
negl
mov
insl
push
mov
ljmp
into
insl
dec
lret
subb
and
das
stos
dec
mov
jle
lds
mov
mov
icebp
or
daa
adc
xchg
fldln2
or
in
xchg
jecxz
dec
in
test
fsts
jecxz
dec
clc
jg
dec
imul
push
out
lcall
int
fisubs
int
mov
cmp
jno
loopne
mov
lahf
sub
push
repz
jg
adcw
jnp
outsb
and
mov
arpl
fldt
mov
lcall
pop
decl
xchg
lret
js
stos
and
cltd
lret
mov
hlt
adc
pop
jnp
jne
in
xor
lahf
push
sarb
cmpsl
jbe
push
xchg
dec
fs
and
cmpsb
inc
add
cmp
jp
stc
and
mov
cmp
xchg
sbb
fistl
ret
bound
dec
out
stos
jp
hlt
clc
or
fnstcw
jecxz
dec
adc
adc
push
jae
or
mov
addl
sbbb
dec
out
jecxz
xchg
arpl
mov
sub
fs
dec
lods
scas
shll
push
pop
sub
cmc
rorl
push
push
jge
dec
scas
dec
iret
xchg
mov
aas
push
dec
adc
mov
stc
and
rclb
dec
jmp
cmp
repz
sbb
cli
ret
cmp
rcrl
loopne
add
dec
jmp
mov
in
mov
cmp
fidivrs
or
leave
sub
aas
push
sub
mov
test
inc
add
xchg
add
es
leave
dec
jp
andb
out
add
mov
mov
push
orb
pop
jae
test
xor
int3
movsl
in
movsl
hlt
push
jg
inc
daa
sub
ljmp
clc
stos
sbb
es
cld
js
sbb
cmp
mov
dec
jmp
add
out
leave
pop
pop
pop
lret
les
mov
cmp
movsb
mov
or
dec
jmp
sub
jbe
mov
dec
jle
xchg
add
push
pop
push
ss
call
iret
sti
popf
dec
std
xchg
stos
push
imul
insl
mov
cmp
test
rorl
xor
cmp
jbe
out
rolb
add
pop
or
imul
cmp
jns
out
push
sbb
shlb
jg
adc
scas
sbb
out
fcoml
adcl
lods
incl
pop
ret
inc
cmp
cmp
nop
aam
add
jb
das
mov
xchg
test
jmp
add
mov
cmpl
mov
or
ret
pop
stc
add
out
xchg
scas
mov
aas
pop
std
js
std
ret
ss
or
pop
pop
jbe
xlat
insb
mov
sub
mov
pop
add
jno
nop
lcall
push
pop
mov
shll
subb
sbb
dec
mov
and
pop
and
fs
push
cltd
mov
mov
mov
add
icebp
and
out
xchg
loopne
push
add
or
mov
test
or
or
in
movsb
in
add
pushf
inc
push
mov
popa
jp
mov
mov
sar
out
lret
stos
xchg
ret
in
gs
push
push
ja
xlat
pop
lods
cltd
imul
push
addr16
xor
ja
mov
jb
fbstp
xchg
inc
das
out
int3
sub
enter
mov
jo
xor
or
xchg
or
mov
xchg
test
nop
xchg
ss
cmpsl
jae
addl
push
int
fdivs
xchg
dec
iret
cmp
mov
cmpsb
mov
dec
loope
ss
fisubrl
cmpsb
add
mov
xor
fistl
pop
stc
les
mov
push
jmp
mov
hlt
inc
mov
cmp
mov
movsl
jne
faddl
xorb
fwait
ret
lock
mov
pushf
js
fdivrl
or
js
arpl
mov
dec
jle
lret
ret
pop
test
inc
mov
or
adcl
push
mov
xchg
jl
fidivl
cltd
xchg
adc
mov
out
mov
aaa
xchg
mov
lret
fst
maskmovq
inc
pop
repnz
mov
adc
adc
into
inc
pop
adc
lock
ljmp
cmp
mov
sub
imulb
lea
mov
sub
cltd
dec
jmp
add
das
cli
cli
test
enter
push
pop
push
mov
fwait
leave
cmpb
cmp
shlb
pop
loopne
loope
cmp
adc
xor
push
nop
push
push
cwtl
push
movsl
stc
out
or
movsl
dec
and
and
sub
aam
jns
pop
shrb
push
lods
push
and
pop
xor
popa
out
out
das
mov
popf
mov
xor
fstpt
stc
mov
into
stc
mov
ret
sub
push
jb
addr16
mov
dec
in
repz
inc
dec
jg
movsl
lret
pop
aas
ss
rcrb
lea
aas
mov
fst
rcll
lahf
cmp
push
mov
stos
movsl
pop
mov
fcmovu
jne
sbb
mov
xor
aad
mov
and
pop
ret
sbb
decl
xor
mov
movsl
push
inc
mov
rcrb
std
into
inc
push
inc
push
push
jl
in
out
cmpsl
out
das
movsl
pop
xor
mov
lods
jp
xorl
xor
cmp
rcll
dec
xchg
or
cltd
jge
mov
or
push
shrb
std
inc
adc
adc
inc
fnsave
ficoml
mov
lock
and
sub
sub
ret
and
jo
inc
push
adc
gs
sub
stos
jecxz
sub
sub
and
fcomip
mov
sub
data16
jns
ds
std
dec
mov
in
int
aam
inc
and
jbe
inc
mov
int3
call
clc
out
std
jb
leave
push
aas
dec
adc
scas
pop
insl
push
add
push
outsl
sub
or
or
lea
mov
xchg
sub
das
out
ss
pop
stos
lds
add
push
mov
adc
ljmp
int3
or
dec
or
gs
insl
roll
loopne
pop
sub
std
push
adcl
test
mov
fdivrl
add
xlat
movsb
gs
movaps
ss
stc
jne
or
cmc
out
xchg
mov
sbb
and
stc
xchg
push
pop
mov
imul
lahf
aaa
pop
push
mov
add
out
xchg
xchg
aad
lds
int3
into
int
dec
lahf
add
and
gs
mov
movsl
mov
ficoms
lcall
rorb
dec
jnp
mov
stos
in
in
pop
ret
int
pop
pop
cmp
std
jl
or
mov
push
xchg
orl
in
rorl
sub
mulb
xchg
repz
sahf
in
ljmp
or
inc
lcall
mov
mov
jl
jne
mov
mov
in
outsl
in
jno
push
push
shrb
mov
mov
xchg
jbe
cli
int
mov
lea
ss
inc
cmp
aas
push
int3
pop
stos
and
or
aas
into
jne
loope
dec
mov
sub
lea
pop
ss
movsl
pop
out
cmc
adc
jle,pn
and
insl
pop
in
sub
mov
aas
mov
sub
dec
and
das
fsubrs
inc
enter
sti
mov
push
xor
daa
xorb
pop
jmp
leave
cld
inc
cltd
call
scas
add
cmp
into
mov
xchg
fwait
mulb
push
mov
fstps
dec
ds
adc
insb
xor
or
stc
inc
loop
movsl
int3
lcall
stos
xor
repnz
mov
sub
repz
aas
popf
lds
enter
and
rorb
sbb
cmpsb
add
lret
xor
or
fdivl
inc
sub
hlt
fs
add
cwtl
jmp
fsubrs
stc
or
imul
add
test
push
mov
mov
movsb
jl
mov
jo
pop
pop
jg
jae
jge
pop
inc
nop
outsl
ret
imul
xor
fisttpll
lea
inc
in
mov
xor
and
inc
repnz
jne
inc
fildl
ja
pop
addr16
pop
cmc
dec
les
push
inc
xor
aad
icebp
inc
pop
or
push
leave
gs
icebp
stos
or
sarl
sbb
incb
mov
add
xchg
adc
lds
lods
lahf
ror
mov
dec
jbe
adc
and
jp
cmp
inc
cld
das
stos
mov
in
mov
dec
add
push
pop
mov
mov
cmp
ret
jbe
pop
adc
sub
xor
jo
aam
stos
fisttpll
push
xchg
sub
shlb
incl
inc
stos
mov
mov
into
leave
jge
ret
or
jge
sarl
dec
das
movsb
mov
jp
cmp
sub
or
cwtl
sbb
cwtl
push
pushf
adc
cmp
lods
xchg
in
inc
cld
push
and
lea
jnp
aad
push
dec
xor
mov
inc
xchg
lods
pop
popf
movb
inc
out
std
mov
inc
xor
cmp
mov
jb
out
leave
sub
xchg
sub
add
xchg
push
dec
out
jae
popa
jae
pop
pop
jge
push
jle
or
xlat
sub
fbstp
bound
lock
sti
mov
cmp
popf
dec
dec
sbb
repz
mov
hlt
inc
mov
push
ret
push
push
pop
or
and
das
es
leave
xchg
jecxz
int3
dec
dec
add
jb
rcl
pop
aas
or
das
push
push
stos
sbb
ret
faddl
xchg
aam
fildll
test
daa
shlb
jp
fs
mov
add
push
and
mov
out
rcl
adc
in
in
pop
mov
lret
dec
cmpsl
popa
jg
mov
cmp
movsb
push
mov
xchg
arpl
gs
mov
les
mov
inc
dec
xchg
push
imul
mov
pop
pop
cmp
jo
out
mov
mov
icebp
loope
push
movsb
cmpsl
adc
arpl
inc
pop
popf
push
dec
ljmp
and
cmpsb
cmp
imul
int
out
or
jnp
xor
sbb
push
ja
stc
aam
pop
xor
inc
xchg
mov
dec
dec
pusha
mov
dec
mov
and
mov
push
or
jge
mov
and
sti
add
pushf
lods
jb
pop
fs
out
or
clc
filds
push
js
std
push
mov
cmp
ljmp
mov
xor
cmp
mov
xor
or
mov
mov
cmpsb
lret
sbb
repnz
adc
jno
aas
push
sub
fnstenv
add
pop
fucomp
mov
iret
rorl
nop
stc
mov
out
jbe
mov
and
in
adcl
inc
nop
xor
mov
jno
cld
movsb
adc
fwait
ljmp
daa
dec
ljmp
vpmacsswd
js
mov
add
insl
cmp
fcompl
nop
jmp
xchg
pop
movl
lahf
ja
and
pop
faddl
cmp
adc
fsubs
sub
mov
cmpsb
and
loope
add
and
cmc
imul
jecxz
or
mov
stc
jns
repnz
pop
adc
or
ljmp
stc
jnp
in
cmp
push
or
jl
and
rsqrtps
int3
pop
add
mov
jle
fwait
shll
jnp
fstpl
xor
cmp
int
scas
adc
dec
test
adc
mov
inc
lcall
cltd
incb
imul
popa
inc
fdivrl
fildl
dec
in
cli
jle
arpl
push
add
scas
mov
cwtl
sub
in
out
push
xor
jle
shl
mov
decl
mov
in
pop
cmp
jb
xchg
iret
mov
push
adc
data16
and
dec
xchg
mov
mov
fsubs
add
inc
cmp
jb
ret
lods
jmp
jb
mulb
ljmp
scas
lods
icebp
in
aad
mov
dec
jb
int3
and
inc
mov
das
insl
sub
dec
mov
jmp
fsubrs
fchs
or
iret
test
mov
xchg
in
cltd
sub
push
iret
test
test
jle
jecxz
push
lods
lds
lcall
int3
dec
filds
inc
sub
dec
xlat
mov
imul
ss
lds
jbe
das
lret
sub
repz
cs
mov
inc
cmp
and
inc
enter
mov
incl
jp
imul
shll
adc
sbbl
scas
test
out
rclb
jmp
push
pushf
sbb
mov
mov
and
cld
call
rorl
ror
jb
and
test
arpl
mov
jmp
and
jl
mov
mov
test
adc
push
dec
push
lahf
fwait
mov
jb
lret
leave
mov
jle
out
jns
dec
adc
mov
lea
xor
mov
test
dec
ja
out
xchg
loopne
inc
adc
daa
ds
push
in
mov
push
cld
pushf
in
mov
cli
and
enter
push
jecxz
dec
add
and
pinsrw
adc
movsl
xor
xchg
inc
push
mov
xchg
cmp
lods
dec
cmpsb
and
add
push
out
or
pop
and
lea
addr16
xchg
shll
cmc
jno
and
test
popa
les
inc
xlat
loope
push
into
jo
jbe
jo
movsl
dec
stos
jg
mov
cmp
lds
cs
in
pop
inc
and
dec
pusha
dec
inc
rcrb
popa
fsubl
js
and
scas
mov
jl
push
fbld
imulb
lahf
popa
xor
sbb
mov
cmp
ss
fistpl
rcll
and
fiadds
push
cmp
xchg
idivl
or
pop
lods
ja
or
pop
adc
push
cmpsb
imul
mov
int3
add
xchg
adcl
pop
ret
es
mov
mov
test
and
into
insl
repz
mov
mov
add
sbb
popf
test
inc
lahf
out
dec
rolb
addb
or
push
mov
shl
sbb
fisttpl
inc
lods
dec
rcrl
fwait
das
mov
mov
mov
add
jnp
mov
sub
or
subb
fisubs
lret
xchg
sti
lret
in
in
cmp
dec
lods
dec
jp
iret
mov
xchg
imul
nop
aaa
insl
add
mov
popa
push
js
mov
xor
daa
push
lock
ficoml
mov
inc
ds
push
pop
push
pusha
cmp
cld
mov
aad
push
lock
mov
lcall
pusha
jno
jecxz
jmp
push
sbb
dec
gs
dec
out
jle
mov
jmp
inc
je
cli
add
or
adc
clc
pop
es
and
pause
inc
mov
scas
pop
out
add
push
dec
adc
inc
and
push
stos
stos
loope
mov
lods
fwait
xor
mov
push
and
sub
pop
xchg
xchg
std
add
xchg
es
mov
test
mov
cmpsl
add
mov
pop
sub
jecxz
sbb
jmp
pop
mov
xorb
mov
sub
jno
imul
inc
aas
mov
fcoms
pushf
xchg
jne
out
jg
cmp
unpcklps
int
shlb
hlt
adc
xchg
fs
fidivrs
fldenv
push
gs
cmpsb
add
idiv
enter
jbe
aas
push
test
lret
xchg
jmp
inc
jl
ret
leave
es
jne
pop
sub
sti
ret
cmpsb
jno
push
sub
int
fldenv
inc
int
jno
add
cmp
fsubp
mov
inc
stos
xchg
loope
movsl
mov
out
push
and
adc
cmp
jae
subb
cmp
inc
jno
sti
cli
in
loop
ljmp
sub
js
cmc
outsl
test
jmp
adc
sub
jl
jb
xchg
out
sbbb
sub
push
das
lea
cmp
cmp
xchg
fiaddl
dec
xchg
push
sub
sahf
js
add
stc
lahf
popf
dec
sbb
loope
and
adc
inc
enter
incb
int3
test
stc
jbe
push
mov
fnstsw
bound
xchg
cld
mov
jno
movb
cmpl
stc
mov
fdivs
and
fildl
call
xchg
add
loop
xor
xor
push
out
es
out
fs
push
clc
dec
add
cmpsb
xor
cli
mov
push
pop
scas
rclb
sti
push
xchg
movsl
push
ret
xchg
add
or
sbb
mov
inc
mov
pop
add
sub
push
ret
jbe
daa
sub
in
ds
mov
cmp
xor
jmp
pusha
mov
mov
adc
adc
jae
das
xchg
mov
cmp
dec
cld
pop
xor
lds
jmp
inc
adc
in
mov
lcall
fsubs
pop
mov
lea
insb
negb
pop
dec
aaa
mov
out
bound
push
push
out
mov
stos
mov
jecxz
jb
jmp
stc
and
adc
insb
fmull
das
or
in
cmpsl
jbe
xchg
sbb
frstor
xchg
and
cmp
add
scas
outsb
jbe
mov
mov
scas
or
lea
cmp
mov
jmp
and
adc
pop
xlat
movsb
mov
sbbb
inc
aaa
cs
mov
mov
cmp
mov
imul
fcompl
inc
rorb
fsubs
dec
cmp
pop
xchg
into
xchg
outsl
and
vdivpd
iret
or
jnp
dec
aam
and
xor
add
adc
fs
sti
inc
lret
push
xchg
sbb
imul
les
pop
and
xor
add
adc
fs
sti
inc
lret
push
xchg
sbb
imul
les
pop
and
adc
inc
iret
fistpll
mov
jnp
dec
push
fwait
and
lret
adc
arpl
test
mov
mov
daa
cmpsl
mov
sub
cmp
or
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
ljmp
ret
sub
cmp
or
sbb
stos
jae
arpl
pop
inc
stos
mov
mov
ljmp
ret
sub
sbb
push
adc
inc
cmc
mov
xlat
mov
imulb
xor
and
dec
das
cmc
jbe
adc
push
je,pn
mov
loop
xor
andb
or
sbb
fbld
lret
xlat
mov
add
push
xlat
mov
lea
popa
movsb
test
rep
fisttpll
push
fcmovb
cmp
push
das
lods
pop
inc
stos
dec
mov
xchg
int
out
repz
cmp
xchg
cmpsl
add
cld
xchg
and
xor
lods
outsl
bound
pop
pop
push
gs
repz
sbb
sub
xchg
ret
and
mov
pop
adc
inc
pop
dec
xchg
adc
sub
or
inc
sbb
inc
jge
lret
pop
xor
cmp
inc
data16
mov
ljmp
ret
sub
cmp
or
sbb
push
jp
dec
push
pop
add
jecxz
repz
mov
sub
dec
or
insl
imul
sbb
rcrl
iret
repnz
out
xchg
not
ljmp
ret
dec
jbe
dec
or
outsl
imul
es
sub
in
div
cmpsb
lahf
cli
jecxz
rcr
ret
sub
cmp
or
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
ljmp
ret
sub
cmp
or
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
popa
mov
adc
clc
cmc
and
out
dec
and
pop
or
lcall
pop
xor
popa
inc
es
dec
xchg
jae
jo,pt
ja
incb
fldt
inc
loop
stc
xlat
xchg
jae
sub
fcompl
ret
imul
sub
ds
xlat
sub
xchg
add
xor
mov
movsl
cmp
nop
fidivrl
dec
mov
or
jnp
fdivrp
test
jae
xrelease
xchg
mov
push
fcoml
inc
repz
int
xchg
xor
shll
fs
adc
cmp
add
scas
xchg
xchg
popf
popa
pop
ret
inc
or
pusha
mov
rcrl
repnz
scas
ljmp
inc
fidivl
lds
and
cmp
dec
lds
aaa
jne
add
fmull
push
stc
cmp
inc
stos
out
std
xor
pushf
sar
push
icebp
neg
imulb
or
mov
push
mov
cmpsb
push
loop
pop
insl
pop
out
dec
pop
fucomip
cmp
or
out
inc
mov
and
xchg
pop
cmp
and
jge
push
sysexit
mov
jne
lds
add
shrb
cld
aam
adc
pmuludq
movb
xchg
popl
cltd
cltd
out
imul
fwait
in
shll
adc
aam
cmc
cmp
mov
lods
movsb
enter
xchg
cli
call
insb
push
fwait
xchg
stos
jge
mov
jae
xchg
mov
add
lahf
aam
ss
cwtl
jae
pop
pushf
scas
clc
adc
out
or
imul
mov
ret
jno
sbb
flds
call
or
add
mov
jecxz
bound
lods
call
inc
ret
adc
test
and
dec
fxch
outsb
mov
dec
addr16
jns
sti
sbb
leave
add
inc
int
cmpsb
dec
lcall
test
repz
pop
out
sub
pop
xchg
fisttpl
or
mov
or
out
cmpsl
sbb
dec
dec
xchg
dec
iret
adc
jae
imul
jb
jb
push
pop
adc
mov
xchg
iret
insl
outsl
jl
xlat
ss
test
cmp
mov
pop
pushf
mov
bswap
jmp
lcall
outsl
cltd
sub
out
das
insb
repz
iret
sbb
mov
mov
sub
daa
mov
lock
jbe
ret
imul
arpl
and
notl
mov
jge
mov
sti
and
xor
mov
dec
cs
fs
cwtl
lds
jmp
out
sbb
push
cmpsb
push
cmpsb
adc
sbb
pop
dec
fcomps
addr16
xchg
jle
insl
or
cmp
in
imul
add
mov
sti
xchg
xchg
or
push
aam
push
inc
dec
adc
ret
ljmp
cmc
mov
jl
jp
shlb
int
outsb
das
int
dec
ret
adc
push
pop
sub
orl
add
inc
stc
lods
xchg
mov
movsl
out
in
mov
insl
dec
jmp
into
andb
adc
addr16
xchg
or
or
adcl
xchg
repnz
mov
out
sbbl
push
ss
mov
sbb
addl
mov
sub
sub
ret
fadds
push
add
loope
arpl
arpl
mov
pop
fmuls
fdivl
ret
jecxz
aad
mov
data16
das
inc
sub
inc
in
faddp
jl
add
dec
cwtl
adc
add
sub
or
pop
fs
dec
or
push
xchg
shlb
push
jb
shrb
mov
or
jns
mov
iret
xorb
sbb
js
pop
ja
mov
pop
fcomps
sub
push
es
cmp
shld
push
addr16
or
mov
fwait
imul
cmp
ret
inc
inc
xchg
dec
shll
imul
lea
add
rcr
adc
dec
sti
or
inc
loopne
mov
jb
lods
xor
in
test
stos
lock
repnz
push
cmp
dec
ret
bsf
sbb
mov
mov
enter
add
mov
mov
xchg
push
mov
fwait
push
inc
out
and
add
adc
in
xor
mov
out
sub
inc
sbb
out
pop
lds
cmp
cmc
sbb
push
pop
lcall
add
cltd
push
pop
pop
outsl
cltd
fnstenv
mov
fdivrl
xlat
enter
imul
pop
xchg
sbb
xor
pop
sub
subb
stos
hlt
nop
mov
pop
popf
xor
loop
pushl
ret
xor
sarb
jb
pop
fwait
cmp
popa
clc
imul
xlat
lock
mov
dec
out
dec
sub
fsubr
sub
xchg
mov
shll
add
dec
dec
rorb
mov
pop
addr16
push
dec
negb
lods
popf
lea
outsb
xchg
lcall
inc
cwtl
arpl
mov
test
int
inc
daa
cmc
inc
xchg
push
outsl
or
cmp
push
in
into
mov
cltd
in
movsl
int3
out
sbb
lahf
jno
xchg
mov
xchg
repnz
jo
les
stos
cmp
mov
cld
sarl
loope
push
ds
and
clc
out
mov
adc
lcall
out
or
fisttpl
inc
and
xorb
or
sahf
xchg
pop
inc
shlb
adc
or
imul
cmc
cmpl
adc
pop
cmp
jae
mov
fisubl
push
jecxz
push
cmp
push
add
add
mov
add
inc
ret
pop
mov
and
mov
roll
jne
stos
push
rorb
xchg
push
scas
jg
push
mov
loope
push
nop
test
dec
jmp
mov
repnz
sti
mov
insl
sub
stos
imul
pusha
pop
mov
cmp
clc
jns
push
je
aaa
shrb
lahf
idivb
inc
mov
ficoms
bound
gs
dec
mov
je
push
inc
xchg
dec
cmpsl
mov
xor
insb
push
daa
cmc
stos
sarl
mov
lds
in
and
fisubl
daa
xchg
cmpsl
pushf
xchg
jns
movsl
push
xchg
cmpsb
and
xor
clc
stc
test
icebp
rol
mov
mov
add
into
push
sbb
daa
adc
ja
int
mov
xor
xchg
mov
jge
out
cmpsb
add
insb
inc
mov
nop
inc
push
pop
pop
popf
and
cmp
ljmp
mov
daa
add
jno
movsl
arpl
xchg
out
jecxz
dec
lds
test
sub
pop
lods
xor
pop
call
xor
mov
push
and
lods
mov
idivl
aaa
mov
mov
push
sub
cmpsl
andb
pop
int3
or
inc
add
add
dec
mov
imul
and
pop
imul
mov
or
ret
dec
lds
and
push
cs
mov
pop
insb
jns
stos
bound
and
inc
jp
fmull
sahf
fcompl
xor
daa
jne
call
inc
scas
in
jmp
icebp
scas
nop
sbb
cs
sbb
fucom
mov
out
in
fsubl
cmp
in
or
fs
xchg
push
cmpsb
dec
fwait
testl
or
loopne
lcall
pusha
xchg
mov
jo
out
loop
pop
xor
mov
jle
call
imul
sahf
lock
mov
xor
and
inc
nop
inc
rol
push
pusha
cwtl
pushf
adc
addl
das
jmp
inc
in
cs
mov
mov
xchg
push
arpl
lcall
cmc
pop
dec
icebp
push
and
xchg
mov
mov
mov
ss
scas
sub
bound
mov
mov
mov
int3
stos
add
das
adc
inc
cld
mov
out
out
mov
insl
mov
push
mov
enter
mov
inc
out
add
mov
xorl
push
cmp
or
dec
adc
fimull
adc
cmp
das
mov
cwtl
jecxz
jns
add
sbb
xor
xchg
mov
in
xchg
and
xor
out
scas
jb
test
lods
pop
lahf
int3
mov
jnp
rcll
dec
popf
pop
xor
inc
pop
push
or
pushf
and
fldt
mov
mov
subb
xchg
pop
or
dec
inc
rcr
movsb
jle
mov
sbb
scas
loop
pop
mov
lods
aas
pop
dec
out
out
in
imull
iret
pop
scas
test
jle
push
cli
lods
pop
scas
lods
outsl
leave
xor
les
movsl
inc
stos
fdivr
push
das
push
clc
cmpsb
add
mov
or
mov
icebp
push
das
xor
fwait
pop
add
mov
pop
clc
cmpb
rorb
lods
mov
and
cli
xlat
loope
lock
mov
sarb
inc
sbb
pusha
dec
xchg
mov
jmp
enter
arpl
or
jmp
xor
jecxz
in
xor
ljmp
test
xor
xor
jo
pop
sub
jp
mov
icebp
ja
shlb
mov
int
aam
fdivrl
mov
imul
mov
sub
cmp
fdivs
sbb
fcmovnu
fsubrs
cld
loop
into
orl
dec
fists
test
push
mov
mov
gs
movl
stos
mov
sbb
push
push
xchg
or
jbe
add
sbb
push
lea
clc
push
xor
add
cmp
add
cwtl
dec
popf
pop
cmpsb
repz
jbe
mov
xchg
pop
mov
movsb
or
and
sbb
xor
pop
inc
cltd
and
scas
fs
add
es
shr
jne
sahf
es
jno
jo
jp
je
iret
mov
inc
fwait
mov
mov
or
xchg
sub
inc
mov
cmp
push
cwtl
pop
pop
push
sub
sub
mov
jmp
fsubs
cs
fcompl
jg
les
stos
sub
nop
push
stos
jl
and
out
loopne
lock
movsb
and
sbb
adc
pop
aas
inc
sub
add
mov
movsb
arpl
push
std
pop
cltd
in
push
lds
adc
sarl
mov
cmp
add
dec
add
hlt
xor
jle
lock
sbb
sub
pop
lods
mov
jb
jmp
or
call
inc
inc
push
insb
xchg
pop
cmpsb
repz
and
sbb
mov
mov
xor
add
add
cs
mov
sub
jecxz
mov
push
cmp
js
dec
sub
dec
jb
fiadds
mov
dec
jecxz
adc
clc
jns
jne
push
xchg
add
adc
test
mov
std
pop
shl
daa
in
fbstp
repz
push
adc
std
mov
sahf
iret
movsb
sbb
in
jp
mov
jmp
ja
addl
pop
ret
ret
es
or
push
mov
or
fimuls
mov
les
dec
cmpsb
inc
mov
jbe
mov
shlb
sub
es
mov
insb
jnp
add
ja
nop
adc
fstpt
mov
fildll
push
ret
jge
imul
push
inc
cmp
fisubrl
mov
stos
fwait
cli
outsb
pop
aas
sbb
mov
test
sub
add
sahf
ss
mov
pop
loope
pop
xchg
fldlg2
jle
and
adc
xchg
jb
rclb
mov
xchg
mov
or
and
stos
or
and
jmp
cmp
lods
lods
add
cmpsb
jb
fmull
lods
xchg
hlt
xlat
shr
mov
pop
inc
jl
stc
push
movl
push
aam
cmpsb
pop
jmp
test
and
push
sbb
js
mov
lcall
add
pop
mov
out
cmc
js
xchg
hlt
jb
in
xchg
pop
mov
jge
aam
push
adc
push
add
cmc
inc
xchg
fstpl
das
ds
test
adc
in
ljmp
enter
addb
mov
fsubrs
test
cmp
sub
pop
push
and
or
xchg
bnd
jmp
leavew
push
repz
mov
ret
fiadds
dec
jae
cltd
mov
outsb
fistl
xlat
cwtl
add
iret
adc
and
cmp
mov
insb
mov
jne
cmp
bound
loope
mov
push
pop
cmp
inc
mov
fsubrs
fsts
dec
mov
mov
adc
inc
sbb
cli
or
push
or
popf
mov
and
loopne
xlat
ljmp
xlat
js
outsl
test
jmp
pop
mov
mov
add
fwait
adc
mov
notl
adc
test
xor
popf
inc
nop
leave
xchg
gs
mov
xor
loope
inc
and
insb
sbb
cmp
repz
mov
shr
fstpt
jl
out
jns
jecxz
add
movsl
outsl
add
xchg
sbb
inc
inc
inc
jmp
nop
push
insb
lret
jge
in
out
in
pop
adc
imul
sbb
hlt
aam
insl
mov
cmp
jnp
test
mov
mov
popf
pushf
daa
in
int
pop
test
lds
test
aaa
cli
xor
inc
add
fisttps
push
inc
repz
and
aad
fs
lock
shlb
adc
jmp
movsb
sahf
sbb
jl
stc
test
pop
cmp
jo
hlt
cld
sbb
xchg
hlt
adc
push
sub
cmp
add
iret
and
mov
ja
jb
jne
xchg
dec
add
cmp
lcall
xor
jecxz
fxch
rclb
jmp
nop
dec
mov
sbb
jl
inc
sub
jno
ficoms
out
pop
mov
filds
movsb
loopne
mov
std
es
imul
rcrl
cltd
sti
ret
inc
out
mov
lods
cld
lods
xchg
xorb
jnp
test
jae
stc
icebp
aas
mov
push
fldt
andb
stc
loop
sbb
enter
mov
fldz
das
jle
pop
push
inc
leave
jl
mov
std
inc
aas
dec
sbb
insl
aad
mov
je
test
jl
adc
outsl
push
xchg
add
mov
adc
cli
sahf
jp
ss
dec
or
out
mov
repnz
cmp
push
addb
push
xchg
and
add
jg
dec
adc
mov
ljmp
out
addb
add
push
jle
jo
movb
repz
in
xchg
mov
pop
int
and
ret
aas
add
cmpsb
jo
lods
sti
inc
fdiv
add
mov
mov
imul
or
push
in
xor
movsl
dec
jecxz
push
scas
nop
cli
adc
mov
inc
sarb
push
call
pop
subl
lods
imul
in
loopne
inc
mov
cmp
pop
shl
cmp
push
out
adc
xchg
dec
int3
mov
inc
mov
inc
ja
inc
sti
mov
push
cmpsl
mov
in
push
lret
iret
dec
or
jbe
mov
rcll
idivb
shlb
cwtl
push
sub
jecxz
aam
sub
inc
and
xchg
inc
cvttps2pi
cmc
bound
insb
out
aaa
xchg
jno
test
add
lcall
mov
xor
outsb
sahf
jge
ret
pop
and
scas
das
rcr
ficoms
rcrb
sarl
cs
push
sbb
fidivs
mov
mov
repz
jne
cmp
fcmovbe
xor
test
stc
push
mov
lds
cmp
pop
xlat
orb
fstps
out
or
hlt
jno
mov
xor
xchg
push
insl
push
add
xor
xor
je
iret
jb
xor
lds
out
leave
pushf
pop
mov
cmp
lret
inc
ljmp
pop
fs
adc
arpl
pop
mov
out
mov
jp
or
inc
arpl
adc
sub
adc
xchg
jg
stc
fbstp
mov
test
xchg
rol
sbb
mov
pop
mov
ret
cmp
in
mov
dec
pop
xor
mov
int
lock
punpckldq
add
fidivs
fisubs
std
and
push
testl
loop
addr16
lcall
adc
mov
fsubrs
sbb
push
pop
dec
nop
push
add
xchg
ret
lods
outsb
js
dec
or
inc
xor
inc
arpl
pop
mov
cmpsl
roll
push
into
and
dec
or
cs
xchg
clc
pop
test
mov
movsb
jns
fdiv
push
push
jnp
jecxz
stos
scas
jg
test
add
fucom
push
pop
fs
sub
push
jb
sbb
popf
adc
bound
adc
sarl
mov
jae
add
rcll
sbb
jl
outsb
pop
jns
xor
xlat
fstpt
scas
xor
mov
jl
lock
sbb
imul
pop
out
push
test
cwtl
das
ja
fs
lods
in
cmc
mov
or
push
xchg
jp
movsb
push
fcmovu
jg
dec
sub
aaa
cmp
lock
les
or
icebp
out
std
xor
adcl
xor
ja
xchg
add
dec
add
cli
cmp
popa
jecxz
adc
je
repz
ffreep
jl
aam
movsl
lods
sub
in
scas
lds
stos
icebp
loope
arpl
xchg
mov
dec
or
stc
ss
add
xchg
sub
out
es
int3
bound
sub
xchg
jo
dec
int3
lcall
dec
outsb
roll
lock
arpl
imul
popa
or
xchg
inc
mov
push
mov
push
lahf
xor
pusha
data16
xchg
cmp
jp
movsb
in
cmc
pusha
add
icebp
dec
mov
push
cmc
sti
stos
push
cmp
pop
stos
jbe
pop
cmpsb
std
mov
jns
mov
enter
enter
dec
mov
loope
xlat
in
lds
out
jae
adc
and
leave
frstor
hlt
clc
lcall
sbbb
xchg
push
pop
sub
sbb
inc
cwtl
ret
mov
outsl
push
ror
inc
mov
les
imull
lret
and
dec
repnz
jbe
daa
lret
pop
mov
push
fdiv
pop
ficoms
test
mov
dec
add
leave
dec
jge
sub
xchg
xor
jo
xor
inc
lods
push
insb
and
loopne
or
andl
ja
fldt
ja
das
lret
xor
pusha
and
pop
push
push
xchg
mov
jmp
test
test
stos
cs
jge
bound
sub
nop
mov
jg
xlat
arpl
mov
push
test
mov
movsb
out
pop
mov
inc
mov
in
jno
sti
rcll
sub
and
lds
jo
shlb
xor
pushf
loope
arpl
aad
ja
cmp
jno
sub
std
xor
hlt
scas
repnz
andb
int
or
mulb
cmp
je
adc
pop
shl
sbb
jmp
sub
mov
xchg
cmc
mov
stos
sbb
add
adc
or
pop
pop
push
repnz
lcall
add
inc
xchg
and
cmp
cmc
or
pop
inc
mov
les
js
ss
jp
lret
fneni(8087
fsubs
pop
les
shll
sub
xor
pop
ja
push
dec
std
inc
push
ret
movsb
hlt
mov
fsubl
test
incl
clc
int
lock
mov
xchg
pop
clc
adc
lcall
repz
inc
repnz
popa
ds
add
sbb
adc
adc
std
add
jp
mov
cwtl
int3
inc
sarb
insl
xchg
lds
gs
int3
adc
add
test
lea
ss
shrl
ja
dec
mov
rcrl
sbb
call
mov
adc
out
enter
divl
sahf
mov
or
jb
xchg
int3
adc
sarb
pop
or
in
inc
xlat
pop
jne
mov
add
xor
movsl
and
into
hlt
or
jle
mov
test
int3
or
sbbb
pop
insl
rcrb
sti
inc
fcoml
mov
pop
fcmovu
icebp
xchg
repnz
lock
iret
es
inc
in
push
or
shll
mov
mov
cli
jecxz
rcr
ret
sub
cmp
or
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
ljmp
ret
sub
cmp
or
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
push
cli
jecxz
rcrb
sub
cmp
or
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
ljmp
cmp
int3
cmp
sbb
or
ds
push
out
mov
sub
cmp
imul
pop
into
test
push
cltd
push
jmp
pop
fnstenv
sub
sbb
dec
ficomps
test
push
cltd
push
jmp
pop
mov
aaa
out
add
aaa
mov
cli
jbe
push
test
aad
vminsd
fcmovnb
push
dec
mul
mov
sbb
jl
adc
ret
jle
jmp
push
das
inc
pop
push
test
insb
daa
dec
fisubs
and
adc
mov
call
sbb
call
jae
leave
jmp
out
sub
cltd
jbe
jnp
or
sbb
fucomp
outsl
aaa
xor
mov
inc
sub
sbb
outsb
xchg
adc
dec
aam
iret
push
dec
int
jecxz
mov
out
xor
outsb
cmp
loop
popa
nop
mov
lods
jnp
test
mov
jns
adc
cmpsb
ss
push
or
push
std
icebp
pop
fwait
push
js
dec
fidivs
fcomi
ds
push
jmp
pop
mov
sbb
dec
ficomps
out
cmp
outsl
in
push
cld
push
test
mov
lods
sbb
scas
push
jne
or
adc
stos
pop
lret
dec
fnstcw
push
scas
adc
sub
xlat
dec
int
jmp
nop
sub
mov
loopne
cwtl
imul
stc
outsb
leave
pop
mov
sbb
dec
ficomps
test
push
cltd
push
jmp
pop
mov
sbb
dec
ficomps
test
repz
xorl
dec
xor
loopne
enter
sarb
jbe
jmp
xchg
in
lret
scas
andl
pusha
sbb
out
mov
es
imulb
xchg
fildll
push
adc
jecxz
adc
sub
movsl
or
sub
idivb
jg
jns
sbb
stc
gs
lahf
pop
push
or
sbb
xchg
rcrl
jp
xor
xchg
imul
sbb
and
and
ror
fisttpl
lret
dec
or
and
mov
fimuls
and
sbb
test
into
cvtpi2ps
fadd
cmp
daa
pop
out
jns
or
iret
or
popa
mov
dec
iret
std
sbb
mov
clc
es
daa
movsb
xchg
test
xlat
cmc
and
out
in
push
xor
push
inc
mov
jbe
or
popf
rcr
ret
fimuls
cmpsb
pop
into
fwait
jecxz
out
out
addr16
mov
mov
lret
in
int3
loopne
js
nop
dec
pop
dec
jnp
lcall
pop
movsb
jo
mov
repz
sub
mov
inc
icebp
pop
pop
cld
faddp
addl
jmp
sbb
das
sbb
mov
es
sarb
mov
rclb
inc
adc
lock
lods
ror
pop
lods
or
xor
dec
push
and
fldl
push
cltd
fs
sub
cld
or
out
mov
xor
xchg
into
dec
xchg
shlb
cmpb
imul
lods
pop
xchg
cltd
int3
and
clc
xchg
push
jns
mov
jns
jge
mov
out
xlat
xchg
sahf
xor
jae
sub
cmp
arpl
fnstcw
jo
inc
jge
xor
push
or
divl
push
test
xchg
mov
in
addr16
xor
and
xchg
xchg
sbb
or
daa
push
dec
dec
movsl
stc
cmp
add
cmp
jle
cmp
cwtl
dec
mov
inc
jae
push
pop
js
adc
cld
notb
xchg
or
mov
inc
scas
mov
rcrb
adc
pop
outsl
pop
inc
mov
popa
pop
in
mov
adc
sbb
enter
dec
mov
test
outsl
jmp
leave
popa
out
sbb
rolb
jecxz
aaa
icebp
les
out
fsubr
mov
jb
out
pushf
jae
aaa
sbb
int
fcoml
or
sub
dec
jecxz
or
aad
lret
loop
stos
sbb
cld
mov
jb
inc
cmp
xchg
cmp
xor
rcr
test
mov
fiadds
movsb
lods
sbb
mov
or
mov
sub
nop
dec
inc
out
jbe
mov
inc
shll
lds
mov
mov
jecxz
dec
inc
pop
cmp
inc
adc
fwait
mov
sbb
xor
inc
cmp
ljmp
add
test
push
push
mov
jg
jp
or
fsubrs
fwait
mov
aad
inc
das
clc
adc
xchg
add
fidivrl
sbb
dec
pop
sub
in
call
sub
fisttpll
mov
ljmp
inc
leave
pushf
loope
add
in
or
loop
dec
insb
lahf
push
incb
push
mov
lret
in
mulb
and
jp
or
inc
push
out
mov
sbb
mov
and
outsb
dec
out
pop
cmpsb
pop
dec
push
sbb
mov
jg
cmpsb
jnp
inc
dec
fucom
mov
or
out
insb
sbb
pop
jb
inc
mov
test
es
and
jge
in
or
xchg
mov
push
add
push
adc
int
xlat
out
mov
cld
insl
cmp
rcl
ret
sbb
lods
inc
lods
stos
and
aas
stc
sbb
ss
and
mov
fdivs
lock
inc
and
loope
mov
and
fdivl
add
cld
xchg
and
push
cld
jns
bound
sbb
and
loopne
sub
jne
mov
sbb
flds
push
clc
xor
xlat
jmp
jb
pop
pop
insb
lea
ljmp
jae
add
out
xor
fldl
lret
sti
or
mov
cmp
xor
bound
repnz
je
add
or
addb
sbb
dec
dec
xor
xlat
scas
aas
shl
mov
xchg
rorl
mov
popa
int3
ret
hlt
nop
xchg
mov
lds
mov
adc
xchg
lods
sub
jmp
frstor
popf
hlt
mov
sbb
adc
daa
movsl
fcoms
jp
sub
lahf
hlt
xor
inc
test
sub
or
xchg
mov
stos
mov
lret
mov
pushf
mov
sbb
out
leave
pop
addr16
movb
or
pop
xchg
popa
in
cmp
inc
inc
repnz
push
stos
xor
jp
jns
aam
insl
sub
and
test
imul
cmp
popa
lods
js
xor
je
mov
jnp
dec
iret
pop
push
dec
jnp
inc
sahf
dec
mov
mov
xchg
loope
in
mov
mov
sbb
test
cmp
test
popf
push
aas
xchg
xchg
popf
mov
jg
lret
pop
sahf
mov
jae
cmp
lcall
sub
pop
in
cs
lds
mov
push
ret
jae
sub
add
sbb
adc
cmp
pop
std
cltd
or
dec
lods
ja
lea
out
test
jne
mov
ja
push
adc
push
inc
pop
ja
sub
sarb
xorb
sub
or
and
aas
out
out
xor
jae
call
and
mov
js
jg
sbb
jmp
iret
ret
repnz
pop
and
test
jg
lret
es
icebp
add
xchg
inc
inc
les
pop
es
lcall
stos
cmpsl
push
mov
mov
mov
xchg
push
or
mov
cs
xchg
adc
sarl
movsb
jmp
push
xchg
mov
mov
dec
aaa
xchg
push
add
xchg
lcall
push
jg
mov
insb
aaa
sahf
out
pop
push
pop
call
mov
imul
leave
adc
cmp
aad
adc
sbb
inc
mov
xchg
add
sarl
hlt
mov
mov
xor
pushf
fisttpll
inc
sub
pop
push
lret
xchg
pop
xchg
in
mov
icebp
cmp
fnsave
xchg
xor
in
outsl
xchg
bound
mov
cltd
mov
ja
out
cmpsb
jle
push
sub
dec
mov
cltd
inc
xchg
cs
xchg
sub
pop
ficoms
pop
cmp
lods
push
adc
cwtl
je
test
out
mov
pusha
xor
push
xchg
sub
imul
stc
mov
xchg
bound
jmp
xchg
divb
idivb
adc
cli
xor
scas
cmp
aam
push
mov
ljmp
test
pop
xchg
mov
cmp
jno
orb
jg
sbb
add
rclb
mov
or
mov
lds
cmp
xor
iret
arpl
data16
add
hlt
mov
xor
sbbb
mov
vfnmadd213pd
aas
mov
push
xor
shl
xor
mov
in
lock
mov
lods
gs
add
dec
addr16
xlat
xor
mov
jns
cmc
dec
jae
fdivrp
mov
mov
push
aas
roll
adc
sbb
pop
xchg
sbb
sbb
aad
inc
pop
push
cmc
and
ljmp
popf
and
push
mov
lods
arpl
cmp
or
mov
outsl
cltd
fcmove
mov
jbe
xor
cmp
jnp
mov
jb
sub
adc
mov
les
xlat
xlat
enter
sub
das
dec
mov
pop
in
sbb
xchg
movsl
mov
outsb
roll
fsubl
out
xchg
mov
jge
mov
sbb
push
or
ljmp
int3
jae
jbe
inc
pop
shrl
push
add
inc
mov
and
ja
data16
mov
clc
mov
popf
adc
mov
jp
sub
mov
and
insl
dec
adc
mov
mov
jns
adc
and
ljmp
or
scas
stos
adc
lods
fldt
test
mov
inc
stos
sti
or
xchg
mov
bound
sub
inc
or
dec
repnz
push
test
lcall
cmp
jp
inc
ss
push
push
sbb
fsubr
test
xor
and
popa
dec
loopne
clc
testl
pop
cltd
sbb
mov
cmp
adc
cltd
dec
movsb
add
sub
in
mov
pop
daa
mov
lods
adc
shlb
scas
lock
mov
mov
push
fabs
fdivs
sub
push
or
aam
jmp
test
jno
lcall
ss
add
mov
mov
repz
inc
rclb
andl
xor
fistpl
push
iret
sub
es
scas
sbb
sub
mov
daa
jnp
lret
xchg
dec
rcrl
pop
adc
cmp
xchg
pop
aaa
insb
js
loopne
jb
nop
out
push
mov
lahf
mov
sub
call
outsb
mov
push
xchg
lahf
lods
fucomp
scas
xchg
setle
adc
jmp
inc
sbb
push
stos
xchg
pushf
fildl
jmp
push
pop
cmp
ret
rcl
std
shll
cmp
jg
cmc
fdiv
pop
popa
xor
orl
pusha
dec
inc
add
mov
add
fsubr
cmp
push
mov
subl
and
mov
test
or
cmp
call
or
out
xor
cmp
fisttpl
hlt
pop
mov
jecxz
cmp
or
lds
push
jge
enter
inc
mov
inc
fistl
rcr
adc
or
scas
test
lods
mov
dec
roll
jno
push
inc
dec
data16
and
dec
mov
les
scas
loope
adc
adc
xchg
mov
repnz
sub
les
lcall
rcll
jmp
into
cmp
jae
hlt
add
nop
add
push
jbe
loope
and
pop
add
or
mov
jo
mov
outsb
mov
enter
cmp
sub
dec
lods
mov
xchg
cmp
pop
mov
icebp
pop
or
inc
jp
or
subb
cs
fistpll
lods
jb
add
xchg
bound
xchg
enter
and
mov
xchg
or
pop
movsb
outsl
movsb
dec
adc
lahf
jnp
xchg
iret
adc
or
or
adc
mov
cld
popf
xchg
into
out
sub
mov
fcomi
sbb
dec
pop
jb
push
mov
cmp
loop
xor
cwtl
inc
add
sbb
ds
pop
test
ds
push
xor
cmc
adc
pop
outsb
pusha
and
int3
rcrl
jae
cltd
inc
jbe
shrl
daa
and
xlat
inc
push
push
rcrb
push
push
movb
mov
loopne
cmp
enter
jnp
xor
xchg
out
sbb
repnz
lcall
int
clc
popf
inc
xchg
loop
hlt
jle
cmp
bound
cltd
rclb
mov
mov
lock
cmp
or
or
xlat
and
enter
jl
or
cwtl
ljmp
jo
lret
mov
mov
xchg
aad
repz
xchg
out
pop
mov
shlb
cmp
mov
mov
jecxz
jnp
and
fabs
fdivrs
scas
ret
addr16
and
xorl
fiadds
jns
lds
jmp
jge
out
add
push
test
dec
arpl
aaa
mov
sar
and
or
nop
lahf
orb
sub
cmpsl
push
std
jnp
js
jno
jmp
fmulp
incb
test
enter
mov
hlt
xchg
notl
cmp
shlb
and
pop
jle
cld
mov
xor
je
outsb
or
insb
mull
pop
inc
mov
pop
jp
mov
dec
mov
xchg
out
sub
pop
sbb
bound
shl
mov
adcb
inc
inc
orb
jge
jne
andl
xchg
out
mov
and
sbb
sub
out
aas
ss
pop
cmpsb
sarb
and
test
aad
jnp
lahf
fstl
or
mov
cli
push
or
mov
dec
jno
xor
push
jae
sub
fiadds
rclb
xchg
loop
out
pop
out
stos
ret
jnp
jmp
call
imul
push
cmpsb
adc
push
scas
imul
daa
out
cmpsl
dec
loope
xor
sub
inc
and
and
jle
cmp
sub
andl
mov
lahf
and
call
mov
sub
addr16
les
cs
addr16
cli
xchg
arpl
and
loopne
sahf
aaa
cmpsb
mov
andl
cmpsb
out
jno
nop
mov
bound
cwtl
test
insl
mov
pop
add
and
xchg
enter
mov
dec
in
lods
inc
or
adc
dec
mov
or
out
pushf
bound
fisttpll
mov
lcall
stos
cmp
sbb
xchg
fnstsw
push
mov
sbb
adc
mov
cltd
inc
add
xchg
fwait
jecxz
xchg
and
je
fs
adc
paddd
nop
scas
and
add
add
lock
aad
fcmove
push
into
lret
sti
out
rorl
lds
daa
mov
das
sub
mov
xchg
cs
je
mov
movlps
mov
xchg
arpl
mov
test
sub
and
mov
mov
test
xchg
pop
aas
pop
cmpsl
int3
pushf
cmp
into
test
cmpsb
or
aam
adc
imul
mov
fucomp
mov
mov
or
ret
jmp
hlt
in
adc
pop
fistpl
test
imull
data16
jmp
repz
popf
cli
repnz
stos
and
imul
adc
jno
jecxz
sbb
movups
ja
lahf
insl
clc
push
cmp
pop
sbb
pop
cs
xor
inc
roll
and
xlat
scas
sub
pop
movsb
sub
mov
movsl
mov
clc
xchg
loope
mov
pop
xchg
mov
xchg
cmp
mov
add
jge
push
pop
sbb
stos
adc
mov
xchg
scas
hlt
inc
pop
out
leave
fldt
jns
pop
sub
adc
xlat
adc
pop
push
jb
cmp
ljmp
in
sti
inc
fsubrs
sti
xor
int
jns
xor
mov
in
cltd
xorb
test
sbb
jae
js
add
cmc
pmulhuw
jge
test
push
shrb
imul
mov
dec
imul
gs
sub
fdecstp
inc
jmp
push
xor
mov
arpl
mov
pusha
std
mov
fcmovbe
pop
leave
mov
push
fwait
mulb
cmp
mov
sahf
rcl
scas
imulb
out
pop
daa
cmpb
mov
stos
dec
loope
mov
sahf
adc
inc
aam
test
mov
xchg
adc
mov
arpl
scas
decb
imul
or
push
out
and
xlat
sbb
nop
icebp
fsubl
inc
mov
push
and
xorb
fsubrl
sub
sub
nop
push
dec
jmp
adc
adc
or
push
mov
pop
xchg
std
enter
jne
xchg
cs
pop
sub
jo
jle
pop
pop
jmp
add
in
dec
cld
mov
fdivs
leave
cwtl
mov
or
jnp
outsb
jmp
add
fisubl
sub
adc
jg
lods
xchg
incl
js
jo
sub
add
imul
jg
dec
jns
data16
nop
adc
lea
leave
bound
aam
mov
test
fiaddl
lcall
gs
test
jne
fs
jae
inc
and
cld
movsb
and
iret
sbb
imul
sbb
jge
push
mov
ja
orl
je
jae
pop
mov
inc
popf
xor
jnp
xor
out
xor
shl
and
add
mov
test
xchg
ljmp
jmp
fimull
repnz
pusha
inc
sbb
test
lcall
iret
mov
mov
jl
gs
in
shrb
imul
loop
cmc
pop
insl
mov
gs
jne
mov
xchg
cmp
dec
jbe
mov
dec
fmuls
iret
scas
imul
test
movsl
xor
jg
cwtl
hlt
dec
xchg
fisubrs
xlat
int
dec
sbb
and
subl
ss
xchg
and
mov
mul
lods
push
push
xchg
aam
mov
jns
or
or
or
jle
fsubr
clc
repnz
cwtl
or
pop
negl
mov
cli
adcb
cmp
push
mov
sahf
pop
lods
push
dec
test
push
sub
pop
push
rcpps
icebp
out
sti
dec
call
les
mov
dec
orb
sbb
rcrb
cmpsb
lahf
mov
xor
shll
xor
insl
sub
lcall
pop
dec
mov
push
inc
movl
jo
mov
push
fldenv
stos
hlt
faddp
cmp
add
jae
adc
xchg
popf
fstp
inc
jbe
xor
lods
mov
pushl
jg
xchg
push
stc
imul
out
shr
popa
and
lods
pop
xchg
fdivl
imul
dec
mov
std
mov
lds
mov
mov
push
pop
jne
or
jbe
lcall
inc
sub
shrb
mov
add
scas
fiaddl
stc
bound
call
mov
mov
enter
push
inc
in
lret
mov
sbb
out
movsl
adc
loope
sti
add
dec
iret
or
int
enter
xchg
dec
dec
mov
or
sub
cmp
xchg
clc
fwait
lock
mov
jnp
mov
scas
ret
int3
pop
inc
cmp
or
push
or
outsl
pushf
jno
in
in
push
cmp
cmp
out
in
mov
aaa
icebp
not
cltd
rorl
mov
outsl
addr16
jge
shl
xchg
cmp
adc
scas
gs
mov
dec
into
pop
jmp
lds
int3
addr16
mov
dec
xchg
xor
or
dec
inc
dec
pop
fsubrl
push
mov
pop
negb
in
pop
movsb
fs
dec
and
mov
movsl
mov
cmp
jecxz
shrl
mov
enter
clc
mov
rorb
push
enter
subb
mov
mov
mov
test
clc
fstpt
in
popf
or
xor
push
arpl
dec
rep
mov
cltd
jle
cmpsb
fdivp
cmp
pusha
push
mov
sub
xchg
leave
iret
sub
maskmovq
inc
fdivl
mov
inc
aaa
stc
sbb
mov
outsl
sub
inc
sbb
sub
cli
pop
mov
orb
add
sahf
inc
xor
and
test
sbb
cmpb
inc
add
adc
mov
ficoml
in
faddl
jno
xchg
insb
pop
inc
ret
stos
jecxz
xchg
xor
sbb
xor
lea
mov
cmp
mov
mov
cmpsl
bound
jecxz
sub
aam
adc
mov
or
repz
scas
filds
dec
or
mov
push
aam
push
lea
push
sbb
sahf
push
sbb
inc
xorb
inc
jne
out
push
mov
out
push
stc
gs
jns
and
lods
dec
sbb
popf
mov
push
and
loope
int
jge
add
lea
jo
jg
cmpsl
sbb
mov
scas
lret
xchg
sub
lods
pop
test
mov
sti
fists
pop
inc
jno
fs
cmc
mov
es
in
ret
jbe
pop
aas
int
mov
insb
xchg
dec
in
or
cltd
push
jmp
pop
mov
sbb
dec
ficomps
test
push
cltd
push
jmp
pop
mov
sbb
dec
ficomps
test
push
cltd
push
jmp
pop
mov
sbb
dec
ficomps
test
push
cltd
push
jmp
pop
mov
sbb
push
jbe
adc
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
repnz
not
mov
enter
addr16
jnp
push
inc
push
xor
and
adc
add
repnz
not
mov
mov
xchg
ja
addr16
push
xor
adc
add
repnz
loop
rcr
ret
mov
orb
xor
push
xor
pop
push
push
imul
out
sahf
shlb
cmc
outsb
jns
or
in
dec
cld
pop
inc
inc
add
sti
inc
dec
push
mov
aas
sub
or
out
lahf
lods
push
mov
bound
pop
or
cwtl
mov
pop
repz
loop
mov
sti
shlb
aaa
test
pop
repnz
notl
mov
ja
filds
mov
je
enter
jge
fbld
push
cmp
aaa
dec
xchg
xchg
jae
push
filds
leave
push
bound
mov
into
call
cmp
push
ss
daa
arpl
je
inc
aad
add
xor
loop
rcl
ret
cmpsl
mov
mov
bound
pop
inc
dec
xor
and
adc
add
addb
xlat
icebp
int
std
jmp
cli
add
pop
mov
pop
cmp
jb
test
adc
aam
test
jecxz
sti
add
add
adc
push
inc
pop
jnp
push
xchg
xchg
cmpsb
cmpsl
mov
xchg
xchg
ja
inc
inc
push
xor
and
adc
add
repnz
not
mov
mov
xchg
ja
inc
inc
push
xor
and
adc
add
repnz
jo
out
les
push
rol
cmp
sbb
int
pop
sbb
push
sub
daa
fidivs
add
or
jns
stos
out
insb
lret
ficoms
js
pusha
ret
cmp
and
testb
hlt
or
repnz
call
fmuls
aas
ret
adc
dec
xchg
jg
xchg
cmp
sub
mov
pushf
push
inc
jmp
sub
sbb
leave
mov
cmp
dec
out
jns
sbb
iret
pop
in
jno
lcall
sbb
aaa
fs
gs
sbbb
xchg
jecxz
inc
aad
lea
shrb
pop
or
in
mov
mov
mov
enter
in
dec
and
mov
int3
xor
cli
or
add
sbb
adc
and
data16
fidivrs
in
sub
sbb
jecxz
shr
mov
adc
pop
rolb
jbe
cmc
dec
jmp
push
push
les
repnz
nop
xchg
add
mov
ss
rcll
inc
je
fimuls
push
jbe
jbe
adc
adc
mov
pop
push
hlt
add
xchg
jl
loope
and
cmp
aas
int3
hlt
or
adc
loope
xchg
pop
sub
data16
and
xchg
mov
jecxz
add
testb
sbb
daa
ret
mov
cmp
adc
sti
outsb
inc
fimuls
in
or
mov
ljmp
mov
xor
or
push
ficomps
or
adc
addl
xchg
ficoms
mov
mov
jne
push
dec
push
mov
movsl
stos
mov
push
dec
pop
rolb
xchg
mov
imul
pop
cld
loopne
in
cmp
push
data16
xor
cmp
inc
fcomps
xchg
sbb
push
out
adc
shlb
andl
leave
push
inc
jl
lods
xchg
cvtpi2ps
cwtl
roll
xchg
push
or
dec
inc
xor
test
push
aam
bound
dec
movl
mov
xlat
aas
jae
mov
or
inc
je
out
dec
mov
push
in
and
adc
push
fwait
ljmp
and
push
adc
arpl
mov
test
xchg
add
add
xlat
mov
xchg
mov
popf
push
jmp
xor
lock
mov
and
dec
std
cmp
dec
xchg
jmp
jle
sub
mov
push
js
mov
inc
add
rcl
sbb
jmp
fsubl
in
cmp
cmp
cmpsb
cmp
mov
movsw
push
shr
lcall
and
add
mov
inc
pop
adc
mov
adc
pop
shl
and
out
cmpsb
int3
outsl
sbb
mov
sub
pop
jle
add
scas
cmp
dec
in
or
xchg
jl
lds
push
out
lahf
ja
mov
inc
mov
dec
sbb
inc
jb
sbb
xchg
dec
mov
or
xchg
ficomps
divb
push
cld
data16
daa
out
jl
dec
mov
add
jb
imul
andl
js
lret
lret
inc
xchg
adcb
sti
adc
je
jae
mov
mov
adc
sbb
fisubl
in
int
rolb
test
sti
sar
js
js
push
push
or
jg
mov
mov
aad
or
adc
jae
mov
sbb
into
or
imul
mov
test
push
jge
daa
ljmp
pop
in
add
xor
or
inc
add
pop
rcrl
dec
ljmp
push
cli
jnp
mov
dec
loope
ja
enter
or
jno
pop
test
mov
idivb
push
push
icebp
mov
outsb
fwait
pop
pop
popa
gs
xchg
lret
mov
repz
bound
push
push
fdivl
dec
cli
arpl
sub
mov
fwait
loope
js
fisttps
add
xlat
or
lea
xchg
sbb
clc
lods
notb
dec
fs
call
insl
or
jbe
insb
jo
push
inc
mov
popf
push
or
jmp
push
aas
test
in
lods
pop
push
add
jns
mov
sub
inc
lret
and
jge
xchg
scas
mov
xchg
mov
mov
out
xor
mov
js
dec
push
test
loop
jno
cwtl
cmp
arpl
xlat
das
dec
sti
add
imul
pop
push
adc
popf
mov
xor
in
adc
fdivs
mov
pushf
das
or
push
sbbl
pop
aas
jae
mov
lods
rorl
xlat
cltd
cmpsb
imul
inc
xchg
mov
stos
sub
sbb
test
mov
sub
clc
popf
loope
cmpsb
sbb
decb
clc
adc
jge
mov
jp
hlt
push
mov
sbb
push
dec
scas
cmp
push
push
push
mov
or
fstpt
inc
mov
push
mov
dec
scas
dec
out
push
movsl
testl
fcomip
call
sar
repz
roll
sarb
mov
sbb
loopne
das
push
lahf
dec
mov
divb
imulb
lds
not
ljmp
ljmp
sbb
loopne
or
inc
outsl
mov
push
bound
fwait
aaa
cltd
stos
iret
xchg
movsl
cmp
aad
cltd
mov
lcall
fadd
shlb
clc
lea
cli
mov
je
xchg
jge
mov
mov
jg
jecxz
xchg
dec
adc
leave
loop
aam
nop
mov
rorl
or
or
scas
sub
sti
or
mov
sbbb
in
and
divl
dec
mov
fnstenv
into
mov
jne
push
cmp
scas
cld
ljmp
mov
and
jbe
fisttpl
dec
xchg
mov
roll
sbb
dec
jnp
insb
idiv
in
add
repnz
and
adc
push
and
lret
sahf
adc
mov
and
inc
insl
loopne
cmpsl
rol
fwait
cmp
repz
scas
fs
xchg
fcmovbe
xchg
sbb
std
pop
push
stc
mov
or
push
push
cmpsb
adc
jle
cmp
pop
loopne
lods
in
mov
aam
stos
lods
fstpl
jbe
frstor
jmp
lahf
pop
fptan
in
in
call
push
imul
hlt
icebp
in
arpl
int
mov
les
xor
hlt
sbbl
imul
mov
adc
das
push
cltd
inc
out
pop
xchg
jne
fucomp
push
movsl
xor
sar
xchg
xchg
sbb
add
fdivs
jns
jbe
push
add
icebp
inc
sbb
cmc
adc
jb
lahf
and
mov
push
dec
jp
mov
dec
push
mov
cld
fstpl
into
hlt
xchg
or
into
and
and
adc
lahf
ds
test
jns
push
leave
fcomi
or
pop
imul
jno
and
into
into
xchg
add
sub
stos
iret
stos
stos
and
andl
cmp
push
packssdw
push
pop
xchg
daa
jbe
cmp
push
jle
cmpb
gs
cld
sarb
push
cmpsl
ljmp
sbb
jbe
pop
push
add
andl
ret
push
cld
mov
xchg
rcll
push
adc
int3
sbb
mov
lcall
or
or
lea
rcrb
std
test
pop
mov
sub
jbe
add
dec
aaa
repz
jnp
jno
push
repnz
add
test
xor
inc
bound
shl
sub
jns,pt
cmp
in
fsubrl
test
cmp
repnz
sub
mov
mov
outsb
in
push
les
mov
rclb
in
xchg
or
add
dec
fs
xchg
dec
pop
or
cmp
push
fisubs
sub
pop
mov
pop
pop
mov
push
mov
and
sub
jne
shll
xor
cld
cmp
test
mov
cmp
dec
xchg
sbb
paddw
mov
addr16
dec
mov
xlat
pop
fnstenv
ja
outsl
test
repz
mov
jg
cs
js
cmp
add
insl
icebp
adc
or
dec
pushf
push
jne
aaa
push
inc
xor
ja
push
ret
ds
popa
adc
sbb
xchg
popf
ret
fs
sbb
mov
dec
int3
mov
stos
inc
push
jns
aas
mov
mov
cmp
pop
pop
cwtl
adc
mov
icebp
sbb
aad
add
mov
cld
cmpsb
xor
pop
ja
sbb
popf
ja
push
and
in
adc
mov
fwait
mov
data16
xor
popa
add
loopne
ja
sbb
in
shll
imul
mov
xlat
mov
fbld
into
add
mov
arpl
mov
dec
xchg
jnp
out
jecxz
test
sub
push
xchg
fnstenv
ds
jae
and
jg
and
adc
mov
and
push
adcl
inc
divl
jg
and
enter
dec
pop
insb
or
inc
xchg
sub
call
pop
test
orl
loopne
lea
xor
gs
adc
and
jp
js
sbb
xchg
jmp
push
xchg
popa
jp
add
fwait
or
aas
loope
push
sbb
inc
adc
jnp
lods
sbb
xor
stc
push
cwtl
sub
and
lds
scas
sbb
inc
popf
movsl
bound
ja
sbb
dec
dec
xchg
repz
xchg
int
cltd
loope
mov
lcall
cmpsb
ja
es
loopne
lock
push
dec
cmp
sbb
cs
pop
xor
pop
jecxz
repnz
dec
or
mov
sub
mov
and
ss
fs
lret
push
mov
adc
stc
aas
add
xchg
xchg
cli
repnz
js
push
jl
inc
loopne
push
and
cli
fwait
cmp
ljmp
push
stos
pop
or
xor
das
arpl
and
cwtl
fwait
push
call
or
out
sti
fldcw
out
push
mov
cmp
cmp
std
xor
mov
clc
push
sbb
and
fiaddl
push
xchg
xor
mov
xor
arpl
mov
shll
xlat
lock
inc
mov
lock
loope
cmp
pusha
mov
scas
jno
mov
rcrb
dec
pushf
mov
std
bound
cld
mov
mov
cmc
subl
mov
jp
lcall
sahf
loop
sub
push
xchg
xor
sub
and
dec
xlat
rorl
ret
negb
sub
sbb
mov
test
icebp
and
dec
mov
push
inc
sbb
jp
loope
mov
add
add
ja
sub
push
jmp
xor
and
sub
mov
mov
and
movb
push
xchg
inc
pop
adc
ror
push
mov
fbstp
scas
pop
data16
std
push
mov
repz
mov
or
xor
push
mov
xchg
mov
mov
mov
cmpsl
sbb
cmp
jg
cmpsb
lcall
std
mov
mov
mov
das
pusha
push
xor
jbe
and
rcr
push
push
lahf
clc
pop
push
stos
icebp
sub
pushf
mov
loop
popaw
cmpsb
out
mov
inc
into
inc
adc
iret
mov
out
popf
enter
xor
xchg
mov
mov
test
pop
xor
dec
pop
in
xchg
mov
mov
push
inc
sub
aaa
adc
mov
mov
rorl
mov
shll
popa
or
mov
add
jo
ret
cld
xchg
daa
aad
and
movsb
xchg
icebp
xchg
and
call
push
mov
cli
dec
loopne
int
or
das
iret
das
test
ret
jg
push
xchg
ror
push
cmp
nop
push
sbb
jb
jl
push
add
xchg
or
fbld
in
je
push
shll
rclb
and
aam
jae
cwtl
cmp
cld
mov
daa
lret
and
push
mov
insl
into
aas
xchg
adc
mov
mov
ret
inc
out
loope
jbe
imul
jp
and
inc
scas
ret
xorl
lods
es
arpl
out
push
mov
arpl
outsl
fisubs
and
cmpsb
and
popf
daa
movsl
sub
add
loop
ret
pop
mov
dec
add
ret
jne
stos
ss
adc
jp
inc
mul
int
leave
mov
xor
dec
sub
mov
imul
inc
jp
xchg
inc
cmp
pop
push
icebp
insb
mov
xlat
imul
adc
les
xchg
xor
fdivrs
lret
outsb
cli
aad
mov
loope
pop
jae
mov
repnz
std
adc
test
popf
in
insb
test
lcall
and
dec
je
push
leave
and
push
xlat
dec
cs
mov
gs
xchg
mov
mov
and
mov
mov
repnz
cli
sbbb
or
add
sbb
repz
cmp
test
insl
mov
popf
jle
jo
add
mov
pop
fimull
jns
mov
xchg
and
ljmp
ret
ljmp
jno
sbb
ds
stos
sub
dec
aad
xchg
icebp
or
cmp
es
sub
int
stos
lds
outsl
xchg
inc
jns
sahf
jbe
sub
mov
xlat
fidivs
and
stos
dec
mov
sti
xor
push
mov
loope
xlat
xchg
cs
push
mov
push
lea
fmuls
int
stos
call
mov
cwtl
mov
mov
mov
cwtl
cmp
aas
int3
cld
int
push
les
daa
xor
lock
cmp
ficoms
pop
dec
sub
mov
mov
cmp
stos
xchg
lods
cld
or
subb
mov
adc
mov
inc
jmp
psrld
test
orl
add
jnp
mov
or
jle
mov
scas
push
loop
sub
adc
daa
jl
cmp
sbb
add
pop
dec
das
fisttpll
insl
xor
add
gs
imul
out
fistps
nop
lods
push
xchg
adc
lret
mov
xchg
mov
popf
cmp
dec
je
pushf
and
rolb
movsb
fidivs
int3
push
cmp
cmp
cld
call
lods
orl
and
xchg
rcl
out
sub
xor
adc
aas
aas
call
shrb
ficoms
fdivl
and
mov
mov
ret
mov
mov
mov
push
or
call
mov
scas
fwait
jg
flds
arpl
pusha
test
sbbb
jmp
sbb
repz
aas
adc
js
pop
ret
jl
cmc
or
outsb
cmpsl
stc
js
mov
dec
stc
in
cmp
pushf
cs
scas
mov
push
sbb
int3
dec
xchg
add
out
call
jno
jo
xchg
iret
insb
mov
test
mov
mov
jmp
dec
cwtl
pushf
hlt
cmp
xchg
mov
sub
pop
jle
lods
or
xor
stos
std
je
cmp
stos
push
mov
insl
cmp
loop
dec
mov
test
cmp
fstpt
out
incl
imul
mov
mov
into
mov
repnz
sbb
add
or
fdivrp
cmpsb
in
pop
add
and
cmp
jne
pushf
mov
xchg
mov
xchg
xor
xor
xor
lahf
test
pusha
stos
iret
int3
adc
loopne
sbb
adc
lock
xchg
sub
push
andb
dec
or
call
mov
add
cmp
fidivl
fcmovb
inc
sub
sahf
mov
xchg
mov
mov
xchg
mov
in
sub
or
mov
pop
mov
sub
test
aas
jae
adc
pop
dec
or
sahf
xor
or
es
jns
mov
pop
ja
xchg
adc
shlb
loop
lds
jg
inc
xor
cmpsb
lods
aam
jnp
aaa
test
mov
jb
pushl
sbb
aad
sti
pop
push
sti
inc
adc
sbb
mov
in
sub
insb
and
mov
sbb
ret
push
shrb
inc
push
mov
mov
loope
add
icebp
pslld
out
addr16
ja
icebp
in
jl
push
stc
inc
js
std
adc
test
mov
xchg
fildll
dec
mov
xchg
pop
mov
adc
pop
and
mov
daa
xchg
xchg
mov
mov
cld
jle
push
pop
jnp
rorl
imul
cmp
jno
mov
enter
dec
sbb
mov
ret
js
push
fmuls
arpl
jmp
mov
or
mov
inc
rcl
in
cmp
mov
loopne
mov
aaa
xor
out
test
lock
pop
xchg
or
pop
in
adc
jmp
mov
stc
cmp
mov
and
pop
test
daa
addr16
and
in
loop
sub
test
mov
xchg
in
jne
aad
pop
and
movsl
inc
mov
data16
pop
jne
sub
dec
sbb
fldl
pop
imull
das
stos
sub
adc
nop
or
jo
jnp
fadd
lock
dec
call
mov
cld
stc
cmpsb
lcall
push
sbb
sbb
sbb
push
inc
push
sub
add
mov
andl
xor
gs
aaa
cmc
or
cmc
stos
incl
inc
in
push
rcll
mov
jp
rclb
dec
dec
divl
cmp
lds
mov
inc
push
test
adc
stos
hlt
in
mov
or
in
or
stos
jne
pop
sbb
call
cmpsl
fbstp
outsl
push
in
outsb
cmpb
repz
fdivs
pop
pop
xadd
into
sbb
fldl
sahf
iret
lea
pop
in
cmp
cld
inc
adc
and
and
ss
inc
outsb
les
lret
pushf
cmpsl
cmp
lock
cmp
insb
lret
inc
inc
inc
push
imul
pop
and
cmp
cmp
outsb
cltd
and
testl
imul
aam
je
dec
push
sub
fdivrs
loop
outsl
add
into
xchg
dec
sub
sub
jle
mov
pop
add
adc
fnop
jne
fst
push
mov
mov
lock
push
jb
in
cwtl
sbb
xor
loope
cli
enter
iret
sub
cmp
inc
fnstsw
push
sbb
pop
add
xor
daa
jb
inc
sbb
mov
sbb
ljmp
repnz
adc
cmp
or
aaa
mov
push
push
pop
out
mov
in
mov
xchg
xchg
imulb
scas
lahf
push
mov
pop
adc
mov
rorl
je
rep
lahf
sub
pop
iret
mov
mov
aam
sub
cmc
cmp
mov
data16
sub
push
fidivl
mov
mov
sbb
push
and
rclb
xor
ja
or
js
push
shll
xchg
pop
mov
insl
sbb
outsl
int
sti
ds
cmp
daa
fnstcw
lret
and
jge
lcall
cltd
adc
sbb
inc
decl
aaa
pop
lea
lods
pop
insl
pop
jg
cmp
test
dec
shlb
xor
in
les
in
aad
xor
xorl
or
cli
cmp
bound
push
insl
imul
dec
gs
lcall
or
hlt
imul
js
pop
test
int3
les
sub
out
popf
sub
les
mov
pop
mov
xor
imul
xor
movsb
cmp
add
push
push
mov
sarb
jne
adc
pushf
mov
test
shlb
ret
out
stc
scas
hlt
addr16
push
repnz
pop
or
adc
sub
jmp
and
pusha
in
jmp
repnz
hlt
imul
fcomp
fisttpl
jle
push
icebp
dec
add
sub
push
nop
out
repnz
xchg
xchg
lods
in
xchg
adcb
outsl
cmpsb
pop
add
cmp
mov
xchg
lds
out
mov
hlt
mov
add
jecxz
outsl
xor
mov
out
outsb
jbe
add
pop
push
push
pop
sub
adc
lret
pushf
out
mov
lods
movsb
fdivs
in
sub
xlat
mov
mov
xchg
jb
bound
inc
inc
push
xor
and
adc
add
repnz
not
mov
mov
xchg
ja
inc
inc
push
xor
and
adc
add
repnz
not
mov
mov
xchg
ja
inc
inc
push
xor
and
adc
add
repnz
not
mov
mov
xchg
xchg
lea
inc
inc
and
stos
enter
call
not
out
sub
cmpsb
xchg
clc
ret
enter
push
inc
pop
aaa
pop
daa
es
es
test
not
out
xchg
mov
cmpsb
mov
cmpsb
jecxz
jbe
popw
push
inc
push
push
push
es
es
test
not
out
xchg
mov
cmpsb
mov
cmpsb
xchg
inc
inc
pop
xor
sub
outsl
jp
jae
jno
mov
mov
sbb
xchg
xchg
adc
inc
lcall
xchg
push
popa
jmp
dec
testb
mov
cmp
rorl
mov
test
stc
jge
scas
ficoms
out
es
add
add
dec
roll
jbe
and
mov
mov
arpl
adc
repz
ret
or
push
sahf
cmpsb
inc
mov
ret
mulb
push
arpl
sub
cmp
movsl
sub
lret
jle
mov
cmpsb
xchg
mov
jae
test
outsb
ss
cs
lock
arpl
jbe
dec
sub
test
and
mov
aaa
push
daa
stc
mov
out
out
xchg
mov
cmpsb
mov
cmpsb
xchg
inc
data16
inc
push
ss
es
es
mov
xchg
test
aad
jecxz
icebp
repz
repnz
hlt
jg
add
dec
popa
pop
fs
arpl
sahf
scas
movsl
repz
loop
mov
fisubrs
push
xor
adc
push
jne
data16
push
mov
mov
mov
mov
cmpsb
xchg
inc
data16
inc
push
ss
es
es
test
not
out
xchg
mov
cmpsb
mov
cmpsb
xchg
inc
data16
inc
push
ss
es
es
test
jnp
mov
in
lea
inc
popw
js
and
xchg
pop
push
push
dec
sub
sbb
adcl
adc
ficoml
lods
mul
test
into
popf
xor
mov
push
jne
xchg
xor
fmul
ret
sbbl
test
sbb
mov
jmp
inc
in
std
push
inc
sbb
or
pop
arpl
dec
pop
jp
sub
mov
mov
shlb
dec
repz
cmp
std
xchg
sti
aaa
loope
test
int
sarb
cmp
cmp
inc
shl
dec
add
rcrl
pop
aam
mov
pop
fisttpl
mov
ret
enter
imul
dec
popf
loope
in
cmp
out
jl
addr16
pop
ret
test
les
mov
lea
js
xor
mov
sub
mov
cmp
dec
mov
ja
push
xor
gs
add
and
and
xor
negb
pop
pop
outsl
loopne
mov
js
sub
mov
sahf
movsl
xchg
mov
lods
inc
sub
mov
daa
inc
cwtl
mov
movsl
loope
xchg
shr
jo,pt
push
stc
fs
jne
push
repnz
dec
xor
les
idivl
lret
xchg
roll
or
xor
and
fcomps
push
cmp
and
cwtl
fcomps
jne
out
mov
ret
hlt
push
mov
leave
aaa
jo
movsl
roll
insl
mov
jp
pop
flds
mov
push
pop
pop
fcom
add
out
mov
push
or
lods
cmp
in
insl
movsl
clc
js
xchg
dec
movsw
nop
rclb
fsubrs
lods
stos
popf
and
pop
mov
out
sbb
and
pop
mov
testl
fs
mov
push
bound
dec
adc
imul
xchg
sbbb
push
or
lahf
roll
in
test
jns
dec
add
fisubrl
pop
push
fwait
cmp
fnstcw
movsb
ret
xchg
sub
pop
jecxz
or
repnz
loope
or
mov
repz
dec
pushf
outsb
push
out
adc
mov
std
jno
add
push
push
and
push
pop
daa
push
sub
pushf
xchg
jno
fdiv
mov
movsb
icebp
pop
out
jp
js
xor
aad
add
push
push
jecxz
in
pop
nop
scas
aad
test
cmp
faddl
in
xchg
pop
call
push
push
sti
pop
cs
sub
ja
fbstp
js
dec
shrl
and
loope
inc
popa
lahf
fnsave
xchg
or
notb
push
repnz
jne
push
stos
je
pop
popf
lcall
addr16
xor
mul
lock
clc
push
pop
and
push
out
ja
and
aam
fucomi
add
inc
idivb
jp
sbb
cmpsl
hlt
adc
inc
pop
xchg
xchg
ficoms
push
or
popa
mov
sbb
jle
in
mov
outsb
loope
arpl
fwait
or
sbb
mov
mov
xchg
pop
lods
pop
xor
mov
adc
push
pop
in
mov
loopne
out
cmp
cmp
es
dec
mov
jge
cmp
add
jne
adc
lcall
push
mov
in
push
mov
add
pusha
xor
fisubrs
mov
imul
and
cmp
push
mov
sbb
inc
add
jo
mov
dec
fs
inc
sbb
dec
dec
cwtl
and
fistpll
jnp
jg
xor
in
int
cld
mov
lret
popa
push
in
adc
and
cltd
in
pop
dec
out
ds
mov
and
shll
push
mov
scas
aaa
mov
mov
sti
popf
dec
das
and
mull
xchg
xchg
ljmp
hlt
dec
add
fimull
mov
pop
pop
scas
movsb
inc
add
dec
idivl
inc
pop
mov
or
out
fwait
adc
cmp
cld
pop
mov
test
test
orb
das
insb
mov
mov
inc
ja
dec
ljmp
loope
sbb
xchg
mov
addr16
out
stos
xchg
shr
fbstp
push
cmpsb
subb
and
jb
dec
lds
mov
cmpsl
mov
xor
stos
adc
mov
xchg
pop
mov
mov
imul
cmpsl
pop
jo
jb
cmp
or
and
cmp
jl
xchg
and
xor
inc
jo
adc
fdivs
mov
sbb
add
mov
daa
lcall
leave
mov
jbe
aam
loope
out
push
ret
cmp
jg
dec
stos
hlt
jl
je
popf
mov
and
aad
imul
mov
pop
shll
sub
adc
loop
jne
enter
ljmp
fcoms
inc
mov
xchg
int3
lds
adc
xor
inc
fcomps
xor
xchg
push
sbb
cmp
jae
out
push
sub
subb
shlb
outsb
mov
xchg
xchg
inc
pop
mov
xchg
pop
mov
jns
imul
pcmpgtw
or
sub
mov
sahf
insl
in
jns
mov
jge
rclb
out
dec
or
push
lret
mov
mov
push
outsb
int
jp
xchg
popf
and
test
sahf
mov
ret
and
orb
test
cwtl
insl
xor
inc
jne
call
adc
xorb
out
int3
mov
push
into
sub
insb
outsb
or
imul
dec
gs
jmp
mov
mov
dec
in
jmp
fistpll
adc
dec
cmp
imul
dec
stos
icebp
ror
sbb
lea
push
stos
xor
cmp
orl
scas
sahf
adc
adc
int3
sub
mov
cwtl
fnsave
cs
or
pop
imul
and
jnp
loopne
fimull
sbb
ljmp
adc
divb
inc
or
roll
gs
add
pop
outsb
jne
popa
dec
hlt
loop
mov
lods
jmp
sub
xchg
lods
mov
mov
repnz
jbe
mov
gs
sbb
xchg
je
push
jl
call
daa
lods
cmc
jecxz
inc
cwtl
jae
pusha
jns
mov
enter
ljmp
jp
add
xchg
je
out
cld
cmp
lea
gs
shrl
sub
fadd
cmp
imul
add
adc
stc
scas
mov
enter
sarb
sub
cs
arpl
xor
pop
cli
cld
imul
inc
out
mov
sti
addr16
pop
cwtl
pop
add
jecxz
and
mov
mov
ret
in
push
cs
addl
and
imul
out
add
sbb
cs
ljmp
sbb
bound
jp
pop
sbb
push
in
jbe
cmp
inc
jno
dec
outsb
sbb
icebp
and
inc
inc
sub
lret
xor
inc
sub
push
jecxz
xchg
repnz
lds
push
adc
mov
push
aaa
sbb
hlt
adc
xor
addr16
mov
lcall
push
adc
jbe
fs
out
ficompl
inc
dec
add
inc
es
xchg
es
test
dec
shlb
sub
sub
insl
jbe
es
shrb
imul
aaa
lcall
inc
or
lods
data16
outsb
scas
push
sbb
das
jg
or
sub
mov
enter
push
ljmp
shr
int
cmp
aad
outsb
push
loope
sub
jns
dec
popa
lds
jle
add
mov
mov
mov
sti
fnsave
pop
push
push
les
scas
test
loopne
or
roll
js
mov
xor
aas
mov
cltd
inc
lret
sbb
adc
pop
shll
push
movsb
enter
lods
jecxz
das
imul
stos
js
dec
inc
outsb
jmp
shrl
rorb
js
sbb
test
daa
std
dec
fdivs
sbb
fs
mov
fs
jl
inc
pop
mov
lahf
jo
cltd
xchg
popa
cwtl
mov
movl
add
inc
jno
pop
sbb
lret
cs
cmp
push
scas
js
popa
pusha
cmpsl
sub
and
fwait
into
out
dec
faddp
mov
ret
sbb
add
loope
mov
add
xor
mov
psllq
loop
mov
adc
dec
push
xchg
fadds
xchg
mov
jae
dec
add
xorl
xchg
xchg
gs
sbb
and
icebp
mov
inc
xor
call
shlb
jecxz
pop
shll
dec
mov
cmpsb
xor
pop
mov
insl
push
cmp
push
in
fidivs
ss
add
mov
sahf
in
mov
ds
push
std
lea
add
pop
cmp
push
mov
fst
mov
imul
rolb
je
fcoml
lods
imul
jmp
rcrb
insb
push
enter
ret
pusha
jne
stos
inc
xlat
xchg
pop
daa
jle
or
aam
add
scas
adc
inc
mov
xchg
cltd
mov
pop
lods
add
push
insb
mov
push
add
xchg
mov
les
jle
mov
xchg
sub
mov
cmc
mov
sbb
or
adcl
pop
in
push
int
pop
ret
pop
sbb
rorb
shrl
fdivrl
jmp
mov
jae
fdivp
inc
xchg
cmpsb
std
push
xchg
push
cmp
insl
add
stos
into
sub
add
push
mov
dec
imul
mov
cli
std
cmpsl
loopne
adc
stos
shll
adc
sbb
and
and
jge
pusha
ds
pop
jo
add
mov
lret
xchg
or
adc
mov
xor
aam
add
scas
xchg
cmc
movsl
sti
bound
sarl
movsb
add
inc
dec
std
pop
push
and
int3
sub
mov
shll
xchg
imul
mov
inc
push
pop
jne
adcb
mov
cmp
das
jne
mov
lret
mov
sbb
in
mov
ljmp
adc
mov
jne
shlb
lods
or
xor
fsubl
mov
orl
cli
pop
mov
xchg
ss
test
mov
xchg
cmp
faddl
arpl
mov
xchg
mov
jp
mov
cs
movsb
nop
mov
xchg
repz
pop
xchg
dec
in
mov
sub
pop
sarl
mov
sbb
adc
adc
pop
dec
mov
stc
push
jle
aam
pop
dec
sti
or
shll
aad
je
std
dec
scas
inc
loope
shr
dec
mov
fsubs
icebp
repz
out
inc
jge
mov
mov
dec
lcall
mov
sbb
nop
loop
dec
sti
insb
cmp
scas
sbb
and
enter
pop
or
jmp
daa
xchg
ljmp
cwtl
mov
jae
cmc
fcoms
sti
test
pusha
adc
flds
stos
int3
xor
imul
mov
insl
aas
mov
mov
xchg
insb
xchg
sub
sub
jo
shrb
xchg
nop
jecxz
xchg
sahf
cmp
arpl
push
incb
fs
in
inc
and
in
and
jge
pop
xor
inc
data16
jmp
and
shll
mov
cmp
mov
and
mov
lret
sbb
inc
mov
mov
sbbb
xor
std
mov
gs
les
or
lods
dec
mov
jns
push
xlat
fmull
pushf
cmp
push
mov
xchg
lret
pop
or
dec
outsl
xchg
fstp
mov
jge
mov
inc
dec
fsts
fcomi
out
dec
std
add
imul
adc
mov
sub
xchg
xchg
enter
sbb
fidivrl
xor
insb
int3
pop
mov
inc
xlat
adc
pop
lds
xchg
xor
mov
mov
shrb
fbld
or
pushf
test
sub
pop
stos
mov
adc
test
push
mov
pxor
dec
test
popf
dec
jg
or
pop
in
out
mov
sti
addr16
xchg
addl
xor
mov
sbb
ud0
pop
inc
mov
xchg
mov
mov
mov
int3
jle
arpl
cmp
pop
icebp
push
movsb
fimuls
pop
sub
mov
ljmp
icebp
out
shll
ret
xchg
cmp
out
push
adcb
mov
in
push
sub
jo
mull
xchg
push
and
xor
adc
sbb
popf
test
add
fmuls
roll
fadd
ljmp
decb
or
js
jecxz
xor
repz
mov
sub
hlt
clc
xor
add
scas
pushw
test
sub
xchg
repnz
bound
dec
mov
in
xor
ds
cmp
insl
fdivrl
adc
aad
and
stc
das
push
jns
inc
mov
mov
adc
scas
pop
ds
out
jno
push
sbb
add
push
sub
cli
dec
xor
stos
push
inc
pmulhw
cmp
push
in
movsb
xlat
fwait
loope
aam
insl
add
imull
jae
push
push
jnp
mov
lahf
inc
add
push
pop
add
js
pop
mov
shlb
adc
imul
mov
pop
stos
add
xchg
call
sti
push
mov
cs
push
sub
mov
insb
ja
or
jmp
and
sbb
mov
out
jl
and
adc
push
cmp
out
aas
cmp
cmp
xor
test
mov
xor
sub
icebp
push
and
scas
sbb
pop
jbe
mov
ss
adc
dec
sti
sti
imul
adc
sbb
fists
andb
cmp
test
les
push
push
or
in
jle
fs
mov
mov
pop
lahf
jae
test
sub
pop
sub
sti
testb
fldcw
sub
push
leave
jmp
xchg
push
imul
sub
aaa
ret
sti
pop
mov
pop
mull
cmp
lret
fs
orl
push
sub
jns
xchg
sub
pop
xor
dec
pop
adc
fwait
test
dec
into
repz
add
jge
fbstp
or
dec
sbb
inc
jp
push
mov
dec
xor
dec
movsl
dec
dec
aam
iret
incb
mov
ficompl
xor
rorb
cmp
mov
mov
xor
pushf
popf
mov
frstor
cmpsb
inc
sahf
je
test
jae
mov
cwtl
and
lea
test
arpl
pop
scas
test
pop
sbb
ret
mov
mov
enter
ret
sub
sub
mov
loope
or
loope,pn
or
arpl
inc
jl
push
pushf
mov
mov
std
pop
cltd
ds
subb
mov
in
and
dec
adc
out
sbb
cmpsl
js
push
rcl
cmp
ficoms
sub
cmp
jbe
xchg
jg
sub
and
and
lret
push
inc
ds
mov
loop
jnp
cmp
and
pop
shlb
and
and
xchg
pop
xor
and
xlat
test
xchg
hlt
pusha
xor
push
sub
call
lods
mov
out
dec
push
pop
into
jl
jp,pt
xor
sbb
pushf
jb
addr16
sub
jns
test
roll
push
sub
and
lret
movsb
inc
sbb
adc
jge
push
and
imul
mov
mov
cmp
mov
pushf
adc
lds
push
jg
push
xchg
sub
outsb
xor
push
mov
mov
adc
xchg
fisttpll
fistps
rclb
iret
fldcw
add
jo
aad
rcr
negb
mov
adc
push
cs
add
inc
sub
shl
sub
xor
cmp
cwtl
ljmp
pop
testl
push
push
xchg
cltd
cmp
into
das
insb
add
add
and
and
mov
ror
cld
mov
mov
ja
xlat
sbb
rol
cmp
jmpw
cmp
push
js
inc
mov
mov
or
imul
cmp
insl
xchg
fdivrp
xchg
aas
mov
jle
imul
sbb
adc
lods
roll
pop
lahf
test
inc
addr16
xchg
cmp
stos
jg
pop
pop
out
fsubrl
das
dec
mov
ret
jo
mov
sbb
mov
int3
cmp
dec
inc
or
push
xlat
or
push
adc
sbb
xchg
inc
lea
xchg
or
mov
dec
lret
insl
icebp
dec
lahf
cmp
decb
fucomp
dec
andb
dec
mov
call
out
mov
xor
or
pop
out
test
xchg
notb
mov
imul
add
lret
pop
sahf
stos
es
rcrb
or
mov
cmp
push
or
out
mov
sub
cld
cld
mov
ljmp
test
jae
inc
aad
lss
mov
push
mov
mov
mov
pop
rorl
sbb
add
fnstcw
repnz
test
shlb
add
insl
xor
push
push
xchg
shlb
lcall
rcr
and
or
mov
push
insb
add
push
cld
ljmp
cld
pop
mov
or
test
or
push
jb
lods
xchg
and
fiaddl
dec
pop
stos
clc
ret
sub
mov
movsb
out
dec
or
inc
jg
rclb
dec
das
cwtl
jne
xchg
jno
pusha
divb
daa
sbb
out
cmpsl
cli
sub
mov
push
stc
mov
movsl
scas
and
pushl
or
sub
push
movsl
fcoms
rorl
sbb
insl
les
mov
xor
scas
xchg
shll
adc
in
stc
add
or
or
scas
les
mov
icebp
lcall
pop
push
sub
dec
jmp
fisttps
sbb
mov
ret
mov
int3
test
outsl
jnp
xchg
icebp
insl
or
cmovg
jp
xor
cmp
dec
std
daa
add
addb
sub
add
adc
sbb
push
into
mov
fwait
movsl
or
mov
mov
loopne
dec
ljmp
cmpsb
push
int
sbb
pop
jbe
lret
mov
test
sbb
push
and
pop
mov
xor
lds
adc
pop
and
cmp
push
test
popa
popa
movsl
add
in
mov
and
addr16
leave
lods
push
fwait
add
and
sub
push
pop
cmp
push
test
push
sti
divb
adc
cmpsb
jns
mov
inc
adc
orb
mov
sub
xchg
add
dec
pop
dec
jno
mov
push
pop
cmp
in
inc
mov
adc
pushf
sbbl
test
out
xor
jae
sub
inc
test
sbb
negl
cmp
out
enter
test
das
jle
jg
sub
dec
test
sub
and
mov
cmp
lcall
loop
jno
xor
lods
sahf
aas
icebp
rorl
jecxz
cmp
out
xchg
sub
mov
adc
xchg
mov
mov
add
mov
imul
pop
rclb
popf
push
dec
sbb
insb
mov
cmpb
cmpb
sahf
jo
nop
ljmp
sub
jns
cmp
cmp
inc
mov
cmpsl
cmp
std
jmp
xchg
mov
cmpsb
sub
or
scas
sbb
xchg
lcall
out
roll
cmpsb
jno
adc
out
fwait
ljmp
call
inc
push
pop
pop
fsubl
sub
das
jp
int3
add
popa
test
push
push
inc
out
xchg
mov
cmpsb
mov
cmpsb
xchg
inc
data16
inc
push
ss
es
es
test
not
out
xchg
mov
cmpsb
mov
cmpsb
xchg
inc
data16
inc
push
ss
es
es
test
not
out
xchg
mov
cmpsb
mov
cmpsb
xchg
inc
data16
inc
push
ss
es
daa
push
xlat
test
not
out
xchg
mov
cmpsb
mov
cmpsb
inc
push
jbe
int3
fcoml
xor
mov
leave
jmp
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
movsb
call
stos
push
mov
cld
xor
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
pop
add
pop
daa
add
add
add
add
lea
sub
or
or
mov
add
add
add
add
add
add
faddl
push
add
fadds
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
xchg
add
add
faddl
add
add
inc
add
add
add
mov
pop
dec
add
dec
add
add
add
insb
add
add
add
mov
add
add
add
dec
add
push
add
add
lock
add
add
add
add
test
add
add
add
add
clc
add
add
add
inc
add
add
xchg
add
add
add
mov
add
add
lods
add
lea
inc
add
add
test
jge
fadds
add
add
sbb
xchg
add
add
add
push
add
add
add
add
add
and
jecxz
add
add
mov
cmp
sub
push
add
add
add
add
ret
add
add
movsl
add
add
add
sub
xchg
add
adc
and
inc
add
mov
add
add
add
add
add
cwtl
add
into
add
add
add
add
jecxz
xor
push
add
add
add
add
sbb
sub
sbb
mov
adc
sub
dec
add
add
sub
push
add
add
cwtl
add
adc
jns
scas
add
add
dec
add
push
add
add
daa
add
add
add
add
add
add
add
add
add
or
cmp
push
jg
and
inc
add
mov
add
add
add
adc
int3
add
add
add
add
add
add
add
and
add
add
add
add
dec
add
fadds
mov
add
add
insl
add
add
mov
xchg
add
add
add
stc
add
add
add
movsl
add
add
pop
add
add
movsl
add
add
add
add
add
add
add
add
daa
add
cltd
add
add
add
xlat
add
add
add
add
inc
add
dec
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
mov
add
cwtl
add
add
add
mov
add
stos
add
add
add
add
jno
addb
add
add
fadds
ja
dec
add
add
add
jne
sub
js
mov
out
push
movsb
mov
xlat
rorb
jp
push
jnp
sahf
dec
popa
cltd
ret
dec
cmp
xor
pop
cmp
fidivs
dec
ja
aam
loop
or
inc
inc
xor
loop
sahf
jge
fwait
mov
mov
xchg
sbb
aas
cmovns
clc
mov
pop
sbb
xchg
adc
orb
sbb
jbe
jbe
movsb
scas
test
sti
mov
in
pop
dec
xchg
xor
push
sahf
sub
mov
test
adc
and
cld
scas
pop
add
add
adc
lret
test
jo
imul
pop
inc
insb
clc
int3
mov
les
inc
call
lret
mov
aam
hlt
mov
test
divl
loope
das
call
inc
cmp
adc
test
nop
fwait
mov
cli
imull
xor
das
mov
sub
mov
and
cmc
testb
push
ret
inc
enter
mov
rcl
xchg
sti
sub
jnp
xchg
loopne
movsl
and
lahf
cs
cmp
ret
xchg
mov
in
pop
movsb
sbb
outsl
cmpsb
sbb
repz
scas
xlat
xchg
add
testl
xchg
test
addr16
xchg
xor
xor
xchg
inc
sbb
add
add
rclb
sub
lret
xchg
xor
xchg
xor
push
pop
jle
inc
cmp
bound
jmp
sti
mov
xor
testb
fstp
ss
inc
daa
xchg
xchg
sbb
pop
mov
push
xor
inc
inc
clc
sbb
push
lock
jo,pn
push
sub
testl
es
iret
adc
mov
pusha
lret
test
repnz
push
ficomps
inc
mov
xchg
mov
das
inc
test
sbb
out
pop
cmpb
cld
into
rcll
lods
dec
add
sbb
mov
or
sub
mov
cltd
pop
in
dec
fstl
sahf
push
jp
aam
outsb
sbb
jbe
push
icebp
cmp
ljmp
dec
aaa
and
pop
jae
ja
sub
ljmp
cmp
pop
xchg
test
add
jge
mov
ror
jl
andl
mov
shll
mov
cmpsb
int
cmp
in
call
inc
push
std
dec
jmp
andb
add
sbb
xlat
sbb
imul
sub
pop
xor
mov
out
pop
sub
jno
mov
lds
inc
pop
pushl
or
pop
push
das
mov
inc
aaa
mov
imul
or
xor
jb
lea
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
