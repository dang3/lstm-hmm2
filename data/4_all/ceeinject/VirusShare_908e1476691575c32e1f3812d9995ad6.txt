call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
mov
xchg
not
jecxz
repz
sub
daa
cmp
dec
jb
mov
push
cmpsl
les
fsub
call
aaa
sbb
dec
pop
cmp
or
addr16
adc
cmp
mov
cmc
insb
aaa
cmp
jbe
jne
and
add
aam
test
shl
int3
clc
fcomps
xor
dec
mov
mov
or
test
or
mov
fs
cmp
insb
sub
dec
insb
fldt
bound
push
scas
ja
sbb
pushf
pop
sbb
cmp
test
adcb
dec
xchg
push
xchg
jecxz
xlat
pop
pop
clc
dec
or
movb
bound
imul
and
out
push
jae
sub
jo
idivl
or
add
lret
add
push
aaa
mov
int
cmp
mov
pop
or
push
cmp
xchg
mull
push
into
aaa
orb
dec
push
mov
js
loope
ljmp
push
mov
pushf
mov
dec
push
dec
mov
cmp
or
and
loope
in
jmp
movsl
mov
hlt
outsl
push
dec
push
sub
aaa
xor
aaa
add
cmp
hlt
inc
leave
sti
jmp
fwait
mov
clc
or
sbb
sub
cmp
dec
ja
addr16
mov
cmpsl
test
mov
out
xlat
clc
or
sbb
sub
cmp
dec
ja
addr16
mov
icebp
push
js
pop
nop
xor
xchg
clc
popa
js
pop
dec
xchg
xchg
aad
mov
mov
insl
xchg
lahf
ljmp
push
movsb
dec
out
xchg
mov
jnp
enter
pop
and
pop
or
inc
repnz
mov
push
cmc
dec
test
bound
xor
jo
loope
rorb
add
icebp
mov
add
jle
xor
jecxz
sbb
loope
jno
jb
cmp
cmp
xor
xor
outsb
mov
sbb
xor
aaa
incb
dec
cmp
fiaddl
out
les
out
adc
mov
lock
scas
push
or
add
dec
movsl
pop
jmp
stos
pop
jbe
aaa
daa
std
adc
fists
in
repz
adc
inc
mov
jbe
and
jnp
hlt
lret
pop
cmp
jnp
mov
mov
dec
in
mov
xchg
jo
subl
gs
push
jo
insl
xor
inc
in
push
inc
adc
je
cwtl
dec
sahf
cmp
sub
pushaw
sub
das
sbbb
mov
sbb
mov
js
mov
lock
fistpll
fildll
adc
out
ljmp
sbb
mov
repnz
cmp
leave
xor
ds
dec
adc
pop
imull
push
roll
insb
mov
adc
lret
mov
xor
in
lea
lahf
arpl
mov
in
push
adc
sbb
inc
add
pop
sub
and
mov
cmpsb
je
ret
mov
fstl
ljmp
or
dec
cmp
mov
into
data16
dec
popa
icebp
sub
imulb
jp
fildll
xlat
cs
mov
inc
shrl
ss
jl
mov
mov
or
divb
cltd
mov
repnz
or
out
daa
roll
sbbl
cltd
inc
int
adc
fimull
daa
xchg
fistpl
fidivrl
cmpsb
cmc
lcall
xor
push
mov
out
mov
in
shll
stos
shlb
mov
jns
pop
cld
std
jae
loop
dec
adc
xchg
stos
int3
or
push
cmpsb
cmp
fsubr
cmp
pop
jle
sti
adc
sarl
stc
cltd
adc
inc
cmp
push
pop
clc
fwait
jbe
lds
push
test
ds
arpl
dec
out
mov
lds
push
test
clc
cmp
xchg
mov
adc
nop
std
std
fwait
xchg
mov
icebp
pop
sbb
into
add
dec
hlt
push
subl
inc
ds
add
imul
sbb
cmp
mov
adc
sub
mov
inc
imul
enter
inc
lods
push
push
lcall
mov
mov
insb
movsb
and
or
cli
sbb
loope
push
add
cmpsl
sub
cwtl
xor
loope
jmp
idivb
push
popa
arpl
push
stos
xor
es
ss
out
dec
jnp
or
test
arpl
fisubs
lret
testb
jecxz
mov
sub
xor
loopne
add
sbb
outsb
jb
sbb
inc
xor
mov
rcrl
shrl
fsubs
pop
and
ds
std
jle
and
jmp
sbb
out
jns
ret
dec
xor
js
xor
js
sahf
dec
test
js
mov
xchg
icebp
pop
call
call
pushf
sti
sbb
sahf
xor
leave
in
dec
cmpb
enter
mov
cld
arpl
and
fucomip
fists
xor
cmc
mov
jno
cmp
and
mov
lods
arpl
pop
jecxz
mov
je
sub
xor
ret
inc
cmp
int3
inc
jecxz
imul
daa
mov
out
out
in
gs
popa
in
popf
rclb
imul
adc
cmpsb
ficoml
ljmp
push
xor
lret
xchg
or
pop
mov
sub
stos
mov
and
shrb
sub
test
mov
mov
jns
mov
cmp
push
rcrb
xor
push
subb
mov
mov
mov
aaa
fisubl
mov
pop
pop
adc
push
mov
or
dec
in
jp
bound
sti
fiadds
fistpl
loop
sbb
mov
cmp
push
add
cmpsl
loop
nop
lret
cmp
aam
popf
xor
and
fstl
push
dec
mov
in
jns
je
jbe
push
adc
fistpl
jne
loopne
fildl
scas
xchg
mov
lea
lock
xchg
shr
repnz
add
cmp
jecxz
adc
push
mov
sbb
xchg
jp
cli
out
ret
ret
in
lahf
or
nop
test
xchg
les
mov
into
pop
jmp
movsb
std
sub
cmpsl
xchg
adc
jg
das
gs
pushf
icebp
mov
adc
test
or
enter
clc
ret
stos
popa
ret
push
sbb
or
xor
sti
out
outsb
xchg
popf
mov
xchg
lcall
aaa
bound
jge
cli
push
xlat
bound
jle
mov
jmp
mov
repnz
call
sbb
sub
xor
stos
ret
aaa
and
add
sbb
jno
mov
xor
scas
aas
imul
repnz
xchg
int
mov
push
mov
cli
add
ja
xchg
add
loope
mov
shrb
sarb
repz
xchg
out
sub
lret
pop
sbb
dec
add
imul
push
stos
mov
not
sub
out
stos
mov
jge
popa
inc
jnp
adc
pop
clc
inc
push
jge
adc
rorb
mov
movsl
iret
decb
inc
add
pop
out
or
xor
jb
sbb
add
mov
nop
in
mov
or
mov
clc
ret
out
xor
dec
gs
push
add
in
push
les
mov
push
mov
sub
or
ds
shrb
dec
and
dec
cli
and
inc
stos
pop
shlb
outsb
xor
xchg
add
insb
rorl
pusha
sbb
and
hlt
push
movsb
in
enter
rcrb
sbb
dec
addr16
sbb
sbb
or
ljmp
pop
sub
pop
sub
loopne
or
push
out
xchg
mov
xchg
sub
fsts
adc
das
xchg
int3
mov
lea
jecxz
clc
inc
movsl
jae
dec
es
mov
fidivrs
mov
pop
xor
aam
outsl
js,pn
icebp
loope
mov
aas
out
outsl
pop
mov
repz
pop
mov
lods
ffree
call
jo
sti
mov
xchg
lcall
aam
and
pop
or
aam
das
fiaddl
rol
mov
nop
jmp
sbb
pop
adc
dec
pop
movsl
aaa
cmpsb
pop
loopne
nop
cmpsb
inc
jl
pusha
xor
and
jno
fidivrl
outsl
mov
adc
inc
pushf
ret
mov
cmp
sub
push
ret
sbbb
das
in
add
scas
push
dec
add
test
inc
and
push
xlat
cmp
inc
dec
pop
popf
mov
in
stc
cmpsl
lock
dec
iret
jmp
in
repnz
xchg
ficoms
inc
push
aaa
jno
pop
and
cmp
dec
call
lock
mov
jae
jb
imull
fidivl
icebp
dec
clc
cmp
xor
and
or
and
leave
adc
jge
mov
jno
mov
jl
add
fnstenv
ljmp
imul
mov
je
ret
out
out
mov
sub
pop
jns
adcl
jmp
ljmp
rcrb
inc
dec
es
gs
hlt
rcr
mov
aas
outsl
xor
or
mov
loope
push
neg
mulb
popf
pop
testl
mov
add
jp
and
pop
dec
pop
call
mov
sbb
mov
addb
jge
addw
clc
mov
dec
and
jne
pop
push
inc
gs
jle
mov
xor
dec
mov
push
ds
shrl
mov
in
ret
push
mov
add
sbb
repz
lret
inc
mov
testl
mov
pop
enter
out
cld
stc
dec
push
hlt
mov
or
push
loope
xchg
xor
xchg
std
xchg
jns
popa
ret
aaa
pushf
xchg
mov
idiv
dec
sar
pop
jbe
push
pop
mov
sub
dec
xchg
jne
fwait
test
mov
sbb
lods
mov
or
in
mov
or
add
fsub
aam
mov
xor
cmp
subl
xor
mov
mov
cmpsb
mov
loopne
nop
jmp
and
adc
fsubs
inc
sbb
jmp
shll
or
cmp
pop
movsb
or
sbb
and
dec
mov
inc
mov
cmpsl
jb
and
aad
ds
ds
xchg
outsl
or
in
aad
push
stos
sub
mov
cmp
and
shrl
addr16
or
mov
subl
cmp
repz
mov
dec
jge
xor
js
cld
dec
rol
adc
cmp
aaa
sub
xor
cmp
cmc
mov
xor
pop
fs
stc
clc
ror
push
aam
aas
or
cmp
popf
shll
into
out
cwtl
dec
sti
popa
push
sbb
insb
jnp
mov
addb
push
movsb
cmp
shll
cs
inc
fnsave
jns
jb
mov
pop
mov
out
test
or
mov
sub
dec
mov
sbb
adc
popa
push
cs
jp
sbb
adc
jp
dec
sub
xor
push
pusha
adc
sub
mov
jl
mov
jmp
xor
sbb
mov
add
adc
pop
cmp
leave
clc
mov
inc
mov
das
add
loopne
add
jbe
adc
and
jmp
mov
sbb
lods
sbb
dec
sbb
stc
in
pop
mov
dec
dec
or
ja
cltd
add
sbb
or
lea
repz
xor
push
scas
push
pushf
cmpsb
pop
movsl
cli
inc
dec
xchg
into
and
loope
fnstcw
sbb
fidivrl
loop
adc
sbb
mov
fmul
dec
ficomps
in
and
mov
lock
sbb
mov
pop
inc
push
out
lcall
or
jns
fisubl
xor
cmc
pop
sarl
xor
sub
jb
mov
das
jnp
jecxz
sbb
jnp
sbb
mov
imul
in
mov
sbb
adc
mov
roll
xchg
pop
fistps
loop
mov
mov
mov
jne
jl
rolb
loope
mov
rcrl
lret
outsl
dec
popf
xor
mov
mov
mov
push
add
out
lcall
mov
inc
cltd
push
insb
aas
loop
icebp
mull
xorb
jo
xchg
aaa
push
movsl
and
and
mov
popa
rcr
test
stos
sub
push
pop
in
lret
flds
test
and
jo
mov
movsl
push
push
mov
or
jno
sbb
lock
cmp
mov
repz
cmp
je
adcl
pop
jnp
mov
push
inc
jmp
ss
mov
jecxz
cld
in
push
xor
mov
push
daa
out
or
std
mov
xor
xor
out
in
and
mov
mov
xor
sti
ret
or
dec
and
outsb
sbb
adc
cltd
es
xor
rclb
orb
xchg
push
lahf
iret
es
mov
xchg
les
pop
pop
mov
insb
or
in
lret
cmp
jne
into
sahf
fwait
push
scas
ja
lods
enter
and
add
mov
jb
mov
mov
and
lods
in
roll
outsb
dec
shr
xchg
push
adc
sub
inc
iret
inc
fs
imul
stos
inc
pop
mov
cli
inc
add
jmp
adc
push
popf
mov
and
dec
adc
inc
rclb
loop
pushf
cmp
sub
or
and
pop
popf
lds
je
imul
in
adc
jle
mov
insl
xchg
sub
movsb
outsb
lods
xchg
cmp
mov
lahf
outsl
test
pop
icebp
loope
int
rcrb
sub
dec
lahf
mov
pop
ret
sub
add
lods
mov
fiadds
mov
movsl
lea
jns
pusha
stos
repnz
xchg
test
cltd
jbe
int
mov
lret
leave
flds
xchg
into
and
pop
jns
adc
movsl
mov
dec
sub
adc
or
js
and
jbe
lahf
jg
repnz
gs
sbb
lahf
es
dec
jle
mov
filds
movsl
jo
cs
mov
jmp
stc
sbb
xchg
lea
mov
xchg
scas
mov
jae
sbb
dec
cltd
dec
sub
push
sub
xor
fdivrl
movsl
xchg
paddusw
xlat
push
dec
or
addr16
pop
push
adc
pushf
xchg
inc
in
out
testb
loope
rolb
stos
int
arpl
xor
or
push
adc
jbe
sub
pop
enter
fidivrs
push
out
push
adc
push
add
aas
popf
loopne
aaa
xlat
lahf
mov
or
add
std
push
lods
negb
xorl
dec
inc
data16
ja
mov
clc
cld
push
stos
dec
sahf
sbb
mov
lret
adc
icebp
filds
loopne
in
xchg
subb
pop
mov
sbb
pop
rcr
mov
mov
dec
mov
loopne
sbb
iret
mov
mov
cltd
outsl
push
inc
and
adc
pop
fimuls
cmc
xchg
sub
sbb
mov
add
ljmp
mov
cmpsl
mov
mov
mov
imul
xorb
pop
jbe
jg
mov
xchg
mov
std
add
sub
mov
and
sti
inc
cmp
mov
mov
call
cs
stos
and
jbe
mov
fucomp
or
xchg
aam
jle
lret
hlt
mov
xchg
dec
adc
and
adc
fs
inc
or
mov
inc
daa
das
cmp
cltd
inc
cmp
lcall
ret
int3
repnz
sti
ret
ficomps
bnd
cmp
cmp
cltd
ds
out
sub
xor
stc
test
loopne
xchg
mov
scas
popf
rcll
mov
loopne
mov
add
jns
mov
icebp
mov
shlb
sub
or
lods
test
rcr
lods
int
pop
mov
cmp
add
in
jl
cmp
cltd
push
in
or
adc
cmp
outsl
inc
pop
mov
pop
jae
mov
repnz
and
mov
loope
cwtl
bound
repz
xchg
addr16
ja
fucomp
dec
push
inc
mov
sarl
loope
incb
jle
push
testb
mov
xor
or
push
adc
cmpsl
mov
push
aam
sub
xchg
sub
add
sbbb
mov
insb
jle
sbb
fcomp
and
ret
sbb
or
xchg
push
sub
pop
daa
mov
fisubrs
int3
js
xchg
jbe
mov
mov
xchg
or
adc
jae
stc
dec
adc
daa
test
or
sub
sti
ss
mov
test
hlt
in
xor
insl
or
sbb
inc
fists
cmp
xor
xchg
cli
lahf
or
mov
mov
test
ljmp
js
jbe
test
dec
push
sub
out
lock
mov
js
andb
outsb
sub
cmp
push
lret
inc
jno
jl
call
xchg
aas
ja
inc
dec
sbb
push
and
xchg
adc
inc
nop
pop
ljmp
dec
mov
pop
adc
stc
das
jle
dec
lcall
cltd
je
and
sub
sarl
sbb
and
xor
mov
add
idivb
inc
in
cmp
mov
popf
aas
adc
sub
dec
or
std
fidivl
xor
dec
fisttpll
inc
jge
js
sub
adc
and
inc
out
out
repz
roll
sbb
push
add
out
test
inc
repz
adc
and
jg
ss
aas
movsl
add
mov
es
push
mov
mov
fisubrl
ljmp
cmc
movsb
adc
into
pop
fdivr
test
ret
mov
stos
out
mov
mov
mull
xor
fwait
inc
daa
movsl
sbb
adc
push
fldcw
test
mov
in
fldenv
sbb
dec
mov
cwtl
fmuls
cwtl
std
adc
hlt
inc
into
adc
mov
mov
loop
movsb
push
xor
movsl
or
jmp
rorb
cmp
jecxz
fldl
jne
pusha
inc
lock
fstps
xlat
jmp
push
mov
dec
ret
xor
sub
mov
push
mov
test
adc
mov
inc
push
jbe
push
loope
inc
mov
push
sub
gs
jg
nop
adc
insb
cmp
jne
jmp
out
and
cmp
cmpl
mov
push
cmp
test
jae
cmp
ffree
mov
cwtl
in
mov
hlt
cmp
and
pop
mov
mov
mov
arpl
ficompl
fnstsw
je
aaa
xchg
mov
shlb
arpl
sahf
inc
aas
lods
addr16
jecxz
inc
mov
dec
push
mov
sub
les
inc
mov
cmp
fwait
in
iret
inc
pop
xchg
adc
out
das
lret
push
popa
ds
arpl
mov
sarl
jns
in
mov
mov
mov
sub
push
jo
xchg
pop
jnp
cmpsl
push
cmpsl
sbbb
and
out
and
cmc
dec
mov
mov
inc
ss
scas
in
mov
or
sbb
ret
push
or
movsl
pushf
clc
pop
add
sahf
out
in
adc
sub
inc
rcl
fisubrl
dec
xor
gs
pop
test
or
push
adc
in
outsl
xor
ret
mov
and
dec
mov
fstpt
adc
clc
cmc
lret
xchg
inc
pop
cmp
cwtl
lcallw
iret
jo
push
mov
or
jge
push
jmp
sarl
dec
aad
imul
adc
adc
test
in
movsl
jns
pop
jae
pop
rcl
sbb
sbb
lds
jb
js
adc
mov
push
test
cmp
adc
arpl
push
rorl
and
fmul
or
cwtl
fwait
ljmp
mov
shr
jb
xchg
fs
jo
bswap
aad
cmpsb
js
ss
cs
mov
in
add
sub
jecxz
aad
js
ret
in
pop
cmpsl
in
push
iret
cmpsl
pop
mov
or
cli
cli
mov
rclb
add
add
xcrypt-cbc
cmpsl
push
jo
dec
mov
sub
inc
xchg
pop
or
or
jns
jp
lds
imulb
jecxz
enter
fs
cld
xor
scas
jl
js
pop
jle
popf
insl
enter
enter
loopne
add
inc
xchg
fildll
sti
cmp
sti
pop
addr16
test
mov
and
pop
repz
push
jae
je
int3
pop
nop
sahf
sub
in
lods
scas
dec
popa
ljmp
into
outsl
loopne
sti
sti
xchg
xor
jg
rorl
push
test
cmp
mov
pop
or
clc
add
fisttpl
mov
dec
in
push
adc
pop
fdivp
adc
dec
sbb
sub
adc
xor
inc
cmpl
jo
pop
loopne
push
jb
push
icebp
cmpsl
fisttpll
mov
adc
mov
mov
in
jmp
lock
jmp
movsb
and
mov
in
test
rorl
std
xor
cmp
cltd
push
js
mov
pop
push
or
loop
insb
pop
stos
cmc
xchg
add
add
stc
sub
out
cmpsb
stos
cmp
push
dec
mov
out
xchg
mov
out
xlat
clc
or
sbb
sub
cmp
dec
ja
addr16
mov
cmpsl
test
mov
out
xlat
clc
or
sbb
sub
cmp
dec
ja
addr16
mov
test
pop
neg
mov
sarl
or
sbb
fcoms
cmp
dec
jae
addr16
push
les
jae
enter
call
enter
pop
cmp
pop
xchg
das
xchg
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
test
xchg
movsl
ds
jge
mov
mov
sahf
adc
xor
gs
jne
test
xchg
movsl
ds
lds
outsb
in
orl
aaa
ficoms
gs
jne
pushf
push
mov
mov
pop
int
std
jle
mov
nop
inc
cmpsb
or
sbb
push
in
rorb
pop
adc
push
test
dec
filds
and
ss
mov
mov
pop
fldt
es
jmp
jne
lret
lret
or
xchg
add
out
mov
adc
adc
nop
test
add
aam
outsb
loopne
in
mov
xor
pop
push
pop
mov
lds
in
jmp
ficompl
shr
lcall
inc
pop
push
shl
push
mov
sahf
stc
ljmp
faddl
ss
icebp
jp
loope
pop
fidivrs
mov
lahf
jo
in
movsl
fisubrs
jg
lret
fbstp
push
xchg
push
test
mov
pop
aad
in
in
mov
mov
dec
out
jg
je
test
dec
rcrb
pop
mov
mov
nop
iret
push
adc
stos
and
sbb
pop
fimull
lds
fwait
outsb
xchg
jle
jmp
pushf
jo
inc
sti
aaa
stos
xor
incb
test
inc
sarl
dec
negb
outsb
in
cmc
mov
mov
push
out
gs
jne
test
xchg
movsl
ds
lds
outsb
in
cmc
mov
mov
push
out
gs
jne
test
mov
dec
repnz
xlat
sub
out
jmp
bound
outsl
xchg
das
sub
cwtl
arpl
pop
jp
pusha
xchg
mov
popa
or
adc
sbb
mov
shll
xor
sti
enter
mov
fisubs
jmp
pop
mov
xor
setne
mov
ss
fistps
es
jns
not
dec
fnstenv
add
xor
or
lods
add
out
mov
lods
dec
and
out
xor
jae
mov
inc
push
mov
pop
hlt
add
gs
mov
ss
add
sub
jnp
testb
sarl
pop
out
jle
loop
aam
cmp
xchg
mov
xchg
mov
adc
inc
fisttpl
clc
cmpsb
test
mov
and
movsl
iret
cld
ja
leave
cmp
and
cmp
xor
xor
cs
lcall
shrb
pop
inc
aam
ss
and
sub
insl
xor
daa
dec
push
notl
sti
test
jecxz
rolb
sahf
in
nop
mov
in
call
jge
or
cmovge
mov
imul
idiv
lds
ret
out
rclb
hlt
sbb
cmp
sbb
mov
stc
xchg
loop
xlat
dec
cmp
cs
jae
mulb
mov
dec
clc
icebp
jg
insb
lret
loope
in
fdivr
test
sbb
inc
imul
xor
xchg
jb
and
jb
sub
arpl
test
dec
push
cmp
xchg
out
push
fxam
and
insl
mov
mov
insb
jb
mov
outsb
daa
iret
cltd
jno
dec
mov
pop
sub
addr16
inc
shrb
mov
push
jns
and
sub
ret
pop
mov
inc
fstpl
mov
pop
hlt
or
add
sahf
and
mov
outsl
mov
repnz
sahf
movmskps
scas
gs
jecxz
jecxz
aad
dec
outsb
xchg
mov
leave
mov
les
push
push
dec
leave
pop
mov
stc
adc
xchg
leave
ss
cmpsb
pop
mov
and
xchg
enter
add
jp
inc
pop
cwtl
filds
ja
add
testl
mov
lahf
imul
mov
out
pop
jnp
out
push
jmp
sub
lods
repz
outsl
xchg
les
sbb
cmpsb
push
insl
jle
cmp
and
js
jmp
mov
pop
push
repnz
pop
es
push
mov
dec
ss
loope
sbb
dec
add
cmp
push
out
subl
adc
sbb
sbb
inc
pusha
movsl
push
sbbb
insb
insb
test
jne
into
movsl
or
insb
cs
mov
aad
ja
sub
and
stos
mov
cmp
repnz
lods
dec
xor
mov
test
pop
insb
push
sub
mov
in
xchg
add
xchg
andb
mov
mov
lret
push
or
scas
jp
adc
xor
xchg
jmp
sbb
popa
lock
xchg
mov
xchg
mov
loop
jge
or
test
aaa
xchg
xlat
icebp
push
add
mov
ja
cmc
dec
jl
push
icebp
ljmp
mov
cmpb
cld
jle
jp
fdivr
push
xchg
jg
stos
fdivs
fildl
push
xchg
movsb
sub
inc
jmp
cmpsl
push
sbb
imul
lret
test
xchg
popf
into
out
dec
push
cmp
sbb
enter
sub
dec
loop
out
sbb
in
clc
aad
or
dec
test
jle
pop
or
inc
pop
repz
loopne
fcmove
cltd
xchg
sub
jl
hlt
xchg
pushf
stos
cmp
orl
xchg
jmp
sti
imul
and
fsts
imul
mov
daa
pop
out
sbb
ret
dec
in
test
adc
mov
insl
jnp
outsb
inc
add
mov
cmc
in
xchg
jns
jp
jle
or
pop
jp
dec
fsubp
loope
adcl
test
adc
mov
and
rorl
adc
lods
cmp
cwtl
sub
fisttps
inc
lret
jo
stc
sahf
dec
hlt
jp
es
outsl
cmc
negb
mov
add
pop
insb
stos
sahf
jnp
cmp
cmpsb
sbb
mov
repz
iret
adc
notb
adc
mov
stos
jb
inc
sub
sub
sahf
lcall
frstor
push
xchg
jnp
dec
pop
mov
fdivl
cmp
xchg
push
cli
xchg
pop
lea
lods
adc
into
cmp
fwait
adc
and
push
leave
jo
cmp
daa
pop
daa
gs
add
test
cmpsb
clc
mov
in
pop
sub
loop
xor
inc
bound
lods
pop
lock
xor
cld
sbb
fsubl
ja
js
mov
sub
pop
mov
ljmp
sbb
stc
js
fimuls
xor
push
inc
or
mov
dec
les
les
call
addl
lret
hlt
cltd
jo
rorb
popa
leave
icebp
cld
out
andl
add
sub
sub
push
jge
mov
mov
adc
rcrb
push
push
inc
xchg
repnz
mov
repz
pop
into
sarb
pop
lods
insb
and
mov
push
cpuid
pop
ss
xchg
aaa
clc
test
test
loop
xchg
les
sbb
sub
inc
clc
add
hlt
cmpsl
push
aad
stos
inc
aaa
add
scas
or
cli
jns
jb
jg
bound
mov
pandn
cmp
int3
jp
xor
mov
in
gs
arpl
pop
xor
call
insl
pusha
ljmp
outsb
shrl
pop
add
mov
fldenv
mov
daa
pop
fcomp
cli
fcoml
adc
icebp
xchg
stc
mov
iret
mov
in
jp
xor
aas
ret
loopne
or
mov
mov
jnp
mov
or
stos
mov
jp
cwtl
adc
mov
aad
mov
sub
adc
mov
dec
mov
jo
leave
jp
mov
out
shrl
shll
cmc
fnsave
cmp
hlt
adc
inc
fs
test
out
sbb
sbb
lock
jl
hlt
je
jns
cli
repnz
add
icebp
xchg
int3
insb
push
test
stos
add
sub
loopne
call
pop
cltd
mov
mov
hlt
mov
jecxz
xor
in
icebp
mov
inc
adc
sub
popa
daa
cmp
lods
lret
fidivs
inc
xchg
sbb
and
lret
cs
inc
push
sub
pusha
xorl
sub
test
cmp
stos
push
fstps
push
cmp
bound
imul
sbb
sub
fists
aad
sbb
and
jb
push
sbb
mov
cmpsb
and
sub
dec
pop
outsb
inc
cld
cmp
lock
inc
mov
xchg
push
stos
xchg
or
iret
lods
dec
add
int3
std
test
or
js
ret
aad
dec
xchg
fldt
push
iret
clc
cmp
xchg
jge
sub
test
ret
add
leave
scas
pop
cmp
cs
cmpsb
lret
xor
stc
adc
pop
aas
push
adc
sbb
push
pop
and
out
pushf
icebp
inc
test
jle
sbb
cmc
xchg
push
and
push
or
ret
rolb
jb
xchg
insl
sbb
mov
insb
ret
shlb
mov
inc
and
iret
loopne
sub
outsl
aas
fcmovu
xchg
out
jle
ds
xor
cltd
les
sahf
push
jns
loopne
cs
lock
pop
shrb
aam
add
mov
or
add
scas
inc
sub
and
and
dec
or
sub
inc
sar
xchg
repnz
jno
test
inc
mov
and
adc
cmp
sub
andb
cmpsl
adc
inc
lds
mov
insl
ljmp
sti
dec
jnp
ret
jno
inc
jmp
inc
push
add
lcall
and
push
sub
or
lock
or
sub
test
pop
xchg
imul
pop
cs
pop
lahf
cld
dec
inc
fisttpll
popf
scas
xor
pushf
pop
or
push
stos
outsb
fwait
enter
mov
and
pop
cmc
arpl
xchg
add
cmc
mov
xor
pop
sub
lret
fwait
ja
in
fdivl
jbe
in
lahf
xchg
pushf
mov
movl
call
pushf
mov
xor
push
sbb
lock
adc
adc
mov
or
xchg
push
and
cmp
lods
fmul
pop
enter
out
js
xor
lods
in
pop
dec
add
andb
xor
fstl
mov
lahf
sbb
gs
fmuls
mov
xchg
loopne
out
rorb
xor
cmpb
shrb
push
inc
push
push
aad
adc
push
or
daa
lock
repz
inc
popf
pusha
lods
sbb
arpl
or
roll
ds
mov
mov
fsts
shrb
fidivrs
push
pop
push
mov
je
jmp
arpl
addr16
int3
dec
arpl
mov
push
pop
leave
idivl
js
xchg
psubw
jnp
into
jg
stc
and
jge
repz
adc
sbb
push
fiaddl
cmpsl
es
popf
cmp
add
push
sub
outsl
lret
ds
mov
mov
in
add
lret
cmp
lock
xor
adc
adc
dec
clc
lock
sub
sub
mov
and
dec
mov
inc
clc
lock
mov
and
stos
or
lock
push
call
mov
jbe
mov
fsub
call
inc
notb
xchg
mov
rclb
add
dec
mov
dec
pop
mov
cmp
push
xchg
sbb
adc
scas
aad
adc
sti
or
cs
inc
cmp
imul
mov
cmp
adc
in
cmp
repnz
push
hlt
stos
mov
or
std
mov
cmp
leave
test
orl
cld
sbb
push
popf
fsub
mov
pop
xchg
out
dec
hlt
int3
or
pop
frstor
xor
icebp
inc
inc
call
ljmp
mov
cmpsb
mov
fsubs
movb
fnsave
sub
imul
imul
mov
jecxz
insb
movsl
adc
add
add
push
or
and
pop
sbb
int3
hlt
gs
inc
addr16
loopne
aaa
dec
inc
fsubrs
lds
sub
fbstp
mov
xchg
out
fs
push
xlat
jno
aaa
xchg
jge
mov
lsl
mov
cld
in
push
mov
pop
gs
out
ss
adc
jecxz
xchg
mov
or
jnp
add
push
aam
mov
add
dec
sahf
jl
jecxz
test
das
in
cli
dec
dec
and
in
test
xor
sub
push
pop
out
pop
xchg
cmpsl
or
inc
test
js
ljmp
scas
cmpsl
jb
sbb
mov
out
in
jne
or
push
les
sbb
mov
and
outsl
mov
cmpsl
shll
stc
cmp
jl
add
or
movlps
add
in
idivl
xor
add
xchg
stos
scas
xor
mov
or
xor
pop
and
xor
cmp
lcall
hlt
pop
mov
movl
xor
pusha
bound
mov
cmp
pop
insl
packsswb
jge
orl
sub
insb
sbb
sub
test
lods
push
and
lret
or
roll
mov
insl
and
and
pop
push
sub
inc
mov
cmc
and
xor
iret
dec
movsb
jns
mov
and
mov
dec
scas
lcall
mov
jp
push
js
push
xchg
xor
sub
lds
dec
and
mov
int
mov
mov
test
jno
push
sub
mov
inc
mov
mov
inc
cltd
in
sbb
mov
pop
push
mov
daa
push
sbb
jno
jmp
mov
sbbb
addb
cli
push
mov
clc
aad
xor
mov
out
cmp
mov
loope
mov
jge
test
mov
adc
gs
arpl
in
shll
push
pop
push
shll
jge
ret
pop
mov
adc
out
push
repnz
dec
fwait
jecxz
bound
js
mov
mov
imul
mov
push
loope
lods
pop
inc
cmp
add
ret
jg
adc
nop
in
pusha
ficomps
or
dec
sbbl
push
jae
imul
mov
sarl
sbbb
imul
fdivrs
icebp
dec
push
ret
aad
sub
loopne
icebp
pop
adc
les
testl
lock
arpl
scas
xchg
sahf
add
subb
sbb
imul
icebp
mov
lret
mov
jae
push
iret
push
xchg
jle
cmp
inc
cmc
sub
xor
push
mov
mov
test
les
lret
xorb
aas
dec
cmp
aas
insl
cmp
rcrl
mov
ret
sub
adc
jbe
mov
xchg
test
cmp
jle
in
mov
pushf
xor
call
ret
pop
and
lods
in
push
sub
loope
inc
insb
pop
jnp
or
and
mov
test
fsubrp
adcl
loopne
call
inc
cmpsl
pop
in
inc
jl,pn
mov
adc
mov
add
mov
inc
xor
dec
pop
fnstcw
call
push
shl
nop
std
xchg
fbld
jnp
sar
adc
enter
push
push
out
test
mov
push
out
out
mov
and
mov
roll
mov
cmp
mov
mov
das
es
arpl
mov
mov
sub
mov
mov
cli
xchg
fadd
dec
cmp
fsts
push
or
push
and
mov
fstps
add
out
das
jmp
mov
sbb
pop
xlat
inc
mov
mov
cli
jo
fnstsw
mov
xchg
jle
popa
aam
int
and
fisubrs
or
xchg
jb
mov
es
sbb
inc
adc
sarb
mov
data16
mov
pushf
test
pushl
int3
lods
adcb
inc
test
jne
xor
leave
xchg
pusha
or
imul
adc
pop
jne
loopne
lods
fisubrs
sub
orl
adc
add
push
rorl
jecxz
and
shlb
add
cmp
call
xchg
fcomps
arpl
push
lahf
imul
push
xor
and
lret
cmp
insl
inc
mov
xchg
or
jo
add
mov
insb
pusha
push
int3
aad
mov
icebp
dec
int3
stos
mov
cmc
cmp
push
scas
or
xchg
lret
rcrl
jle
add
mov
xlat
mov
and
outsb
arpl
mov
mov
push
inc
ret
mov
mov
inc
inc
jg
scas
ret
shr
xrelease
sti
and
or
xchg
gs
mov
push
imul
sarb
aas
arpl
sub
clc
dec
inc
xchg
xchg
fisubrs
mov
in
es
sbb
fists
cltd
cld
xchg
stc
addr16
xchg
add
mov
mov
iret
jge
std
xor
push
push
movsl
movsl
fwait
inc
cmp
dec
adc
mov
rclb
or
inc
push
jge
add
sbb
cmpsl
or
ret
pushl
dec
mov
and
mov
bound
xchg
idivl
lock
cmp
bound
jge
call
cmp
dec
in
cmpsl
or
bound
popa
loopew
dec
inc
mov
or
icebp
movsl
adc
rcrb
ss
stc
adc
sub
mov
cmc
cs
push
sbb
xchg
mov
inc
or
pop
push
push
jo
and
pop
cmpsb
mov
lcall
inc
repz
dec
and
or
repnz
divl
add
or
cmp
daa
into
fisubrl
mov
xchg
mov
mov
adc
cwtl
xchg
cmpsl
in
scas
dec
sub
or
dec
rclb
insb
pop
cmp
push
out
test
shlb
leave
adcb
je
sub
inc
mov
fimull
adc
movsb
stos
jnp
daa
or
pop
dec
jmp
mov
mov
daa
shll
iret
sub
mov
pop
dec
in
or
loope
ret
js
sarb
out
mov
sub
aas
fwait
gs
lret
adc
pop
cmpsl
addr16
push
out
addl
push
clc
mov
mov
add
dec
mov
jnp
mov
cltd
aam
adc
movl
mov
cmc
dec
xchg
sbb
rdtsc
jp
or
xor
out
aam
jne
xchg
sbb
aaa
jmp
shrb
and
stos
xchg
lock
pop
hlt
clc
mov
adcb
xor
mov
rorl
dec
mov
daa
sub
test
addb
rcrb
mov
add
es
bound
dec
sub
mov
pushf
incb
mov
out
mov
mov
mov
lret
lods
scas
bound
lret
icebp
cmpsl
add
rcrb
or
pusha
inc
mov
push
mov
imul
sahf
jg
out
in
pop
ss
dec
ss
xor
test
adc
pusha
push
nop
repnz
add
xor
dec
cwtl
push
pop
push
imul
jnp
jne
sbb
push
push
cli
cmp
out
xchg
ljmp
sub
sbb
pop
jp
add
xchg
ret
aam
sub
rolb
mov
sbb
loopne
loope
insl
sub
mov
in
push
cmc
add
addr16
out
fcomps
fistpl
pop
jle
fimull
dec
cwtl
dec
loopne
pusha
cwtl
stos
stc
jb
sbb
jb
icebp
stos
dec
fadd
repnz
mov
mov
int
pop
gs
pop
or
lahf
and
jmp
xor
pop
cwtl
ljmp
sahf
xor
jge
outsl
scas
in
ds
je
int
sbb
dec
dec
addr16
adc
adc
sahf
sbb
popa
fsubrl
orb
push
sbb
movsb
push
adc
sbb
repnz
mov
ret
divb
push
je
sub
pop
push
sbb
test
lea
adc
mov
stc
dec
fs
dec
stc
add
das
mov
mov
mov
xorps
fcmovnu
sub
call
add
push
gs
stc
pop
push
insl
aas
pop
repnz
adc
sbb
movsl
lods
imul
push
in
rorl
cmp
test
or
jmp
outsl
in
pop
adc
je
gs
push
lea
inc
mov
out
lock
adc
leave
fs
push
cmp
fnstcw
les
sub
arpl
data16
insb
ret
inc
inc
push
pusha
push
and
fldcw
mov
push
xor
xor
add
inc
sbb
xor
xchg
pop
bound
push
push
jecxz
cmp
rorb
xchg
inc
or
dec
movsl
sahf
dec
fsubr
mov
inc
mov
fwait
xor
push
pusha
pop
jns
movsb
mov
mov
testb
jmp
inc
push
stos
jae
pop
xchg
push
xor
jno
mov
sarl
mov
adc
bound
stos
rcll
dec
sbb
mov
cmpsl
mov
inc
and
pop
xchg
pop
mov
das
ljmp
roll
ds
test
jb
enter
push
rcr
lock
enter
mov
jns
cmpsb
lods
mov
dec
or
call
fbstp
add
mov
dec
push
jae
insb
testl
fsubrl
daa
mov
mov
mov
or
out
xchg
sbb
int3
repz
xchg
inc
sahf
push
aaa
sbb
je
mov
adc
les
mov
clc
jbe
xchg
cwtl
subb
mov
mov
push
je
mov
fsubs
cmpsl
lcall
js
mov
pop
sub
and
push
jo
adc
pop
jb
cmp
dec
lds
outsb
in
cmc
mov
mov
push
out
gs
jne
test
xchg
movsl
ds
lds
outsb
in
cmc
mov
mov
push
out
gs
jne
test
xchg
movsl
ds
lds
outsb
in
cmc
mov
mov
push
out
popa
jno
sbbl
mov
lds
outsb
in
xor
add
mov
sub
sbb
or
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
insl
sarl
inc
sarb
cld
cmp
inc
in
jae
and
adc
rep
sarl
or
xchg
inc
imul
xchg
std
and
xor
cli
dec
ljmp
or
test
das
lahf
daa
pushf
or
jle
jo
jp
xchg
ds
add
dec
sbb
mov
push
enter
es
jecxz
jle
ret
xor
clc
fs
pop
aaa
stos
mov
pop
cltd
lahf
lea
lods
sahf
in
outsb
dec
repz
mov
adc
add
mov
fwait
mov
mov
lods
fcompl
aam
xor
jecxz
and
sub
inc
xchg
ret
push
xor
and
nopl
cmpsl
cli
mov
lcall
xchg
xchg
inc
sbbl
adc
mov
xor
add
repz
cmp
arpl
mov
jecxz
and
jecxz
adc
ret
insl
les
or
mov
pop
in
dec
std
cmp
or
nop
dec
xchg
sbb
insl
mov
push
imul
mov
clc
data16
repz
repz
popa
fstl
inc
pop
popa
xchg
push
mov
inc
pushf
jae
adc
mov
rcll
and
cmp
inc
in
push
std
and
adc
ret
insl
sarl
or
xchg
cmp
inc
in
push
std
and
adc
lcall
repnz
lret
jg
and
inc
mov
push
sbbl
pop
mov
pop
mov
mov
cmp
push
sub
sub
mov
test
loope
fmull
rolb
mov
mov
mov
arpl
add
jae
pop
dec
mov
push
jmp
repz
mov
ljmp
inc
aad
cmc
div
int3
add
dec
inc
testb
jno
adc
lahf
ljmp
ljmp
mov
insl
pop
mov
xchg
inc
push
scas
sub
mov
pop
lret
mov
movsb
sbb
xchg
sub
cmp
pop
cmc
jno
stos
adc
data16
insb
out
cmp
xor
sbb
stos
jge
mov
cmp
rcr
xchg
lcall
int3
aam
scas
andl
xor
mov
movsl
out
cltd
and
in
inc
in
and
gs
push
dec
jl
icebp
xor
scas
aam
pop
push
inc
xor
adc
stc
outsb
pushf
in
imul
outsb
imul
cmp
pop
jmp
and
inc
out
mov
xor
xlat
lret
and
adc
mulb
cmp
hlt
mov
decl
push
or
inc
test
push
push
inc
daa
sbb
into
push
js
add
stos
dec
filds
scas
adc
adc
or
ret
add
insl
xchg
cmp
cli
in
ret
dec
fidivrs
jmp
pop
rcrl
xlat
cs
call
cmp
xlat
adc
inc
adc
mov
sahf
dec
inc
mov
cli
mov
dec
pop
std
ss
jg
pop
adc
or
arpl
mov
fwait
inc
inc
jbe
xchg
xchg
and
mov
iret
pusha
mov
inc
cmc
add
pop
mov
sbb
jg
or
sarb
inc
lret
les
and
sub
mov
sbb
aas
int3
and
in
js
add
add
xchg
fnsave
fwait
xchg
cld
popf
cmpsl
pop
out
mov
bound
scas
mov
aaa
jb
notl
sub
cs
mov
jns
sub
inc
pop
push
shlb
nop
push
mov
sub
sub
inc
iret
lea
dec
gs
ficoms
xor
jae
jae
stc
mov
cmp
inc
lock
xchg
jge
jne
pop
sub
mov
dec
or
dec
mov
sets
push
mov
push
notl
nop
push
sub
dec
int
outsb
jnp
ja
rolb
or
dec
mov
arpl
ja
ja
inc
cmp
jmp
insb
cli
mov
mov
testb
test
cmp
lahf
mov
leave
or
xlat
subl
sub
or
jnp
subl
rcll
inc
fildll
sbb
popf
xchg
xchg
lcall
in
lcall
mov
repz
dec
xchg
mov
std
adc
roll
aas
les
push
fistl
mov
cmpsl
push
mov
das
adc
and
xchg
bound
roll
arpl
cltd
or
loope
sub
and
lds
or
bound
sahf
inc
test
nop
lds
ret
inc
dec
lcall
lret
sti
mov
insl
popa
sub
ror
sbb
ret
mov
les
and
mov
mov
pop
xorl
pop
add
mov
inc
mov
lret
scas
push
fdivrs
pop
pusha
lock
stc
jle
and
sbb
stos
popf
lcall
shll
sub
mov
dec
sub
and
cli
adc
or
int
in
jmp
xlat
sbb
in
rcrb
ret
push
cmc
pop
fs
xchg
hlt
and
xchg
adc
fucom
pop
xor
subb
imul
testl
es
ja
int3
out
inc
push
sbb
lods
je
addr16
mov
shll
pcmpgtw
cmp
xchg
sbb
adc
inc
stos
xchg
cmpb
insl
rorb
loop
daa
nop
xor
aas
sarb
jg
mov
cld
mov
inc
sti
mov
popf
xor
mov
iret
xor
jb
shlb
pop
adc
loope
mov
mov
js
daa
shl
shll
and
xor
fcoml
stos
mov
mov
mov
stos
lock
push
dec
sbb
sbb
pop
mov
sbb
mov
push
jnp
data16
add
mov
imul
mov
stos
cmp
inc
sbb
adc
mov
pop
fidivs
mov
add
mov
pop
pop
test
mov
loop
loopne
jbe
pop
stc
call
lds
lahf
xlat
mov
sbbl
xchg
mov
add
pop
loope
jle,pn
mov
or
fdivp
adc
icebp
fs
sbb
iret
pop
mov
xor
jns
lret
outsl
movsl
out
jg
inc
je
and
mov
lods
xlat
pop
pop
loop
push
int3
inc
push
arpl
sbb
scas
aas
jnp
xchg
push
inc
pop
jge
and
les
push
por
dec
push
push
mov
mov
cmc
rolb
or
mov
mov
xor
xor
xchg
mov
outsb
das
std
xchg
sbb
iret
jo
les
mov
ss
add
aam
and
leave
cs
add
pop
push
les
lret
push
test
and
jg
jno
dec
movsb
mov
jbe
mov
rcrb
adc
pop
sahf
inc
sar
mov
sarl
xchg
mov
pushf
cmp
clc
ljmp
arpl
hlt
or
out
lea
out
mov
mov
popf
pop
cli
sbb
jp
ret
repz
or
fimull
pop
cld
lock
pusha
icebp
cltd
dec
xchg
xchg
inc
imull
cmp
insb
and
jns
xor
jae
mov
jmp
jns
test
and
xchg
pop
repnz
negb
jg
xor
in
clc
insb
pop
or
cmp
push
das
xor
sub
jns
mov
jl
jo
mov
jmp
popf
mov
sub
dec
movsl
jb
lret
and
mov
cmp
mov
lea
es
pop
inc
orl
mov
push
dec
jae
add
out
fbstp
mov
jecxz
push
nop
addr16
jmp
sub
xor
je
int
out
sbb
cmp
xor
cwtl
sub
or
or
add
xchg
adc
sbb
data16
jecxz
aaa
sbb
cmp
push
jp
faddp
inc
sbb
cli
jmp
in
cmp
add
xlat
subl
in
xor
mov
scas
or
cli
mov
xchg
fs
rclb
call
jmp
shl
jo
inc
mov
movsb
mov
mov
imul
ret
sti
out
rcrl
mov
xchg
add
adc
push
fldcw
fidivrl
xchg
mov
addr16
fucom
dec
dec
movsl
pop
mov
in
push
cwtl
ss
mov
lea
imul
mov
std
lds
vmovups
mov
lock
punpcklwd
adc
xchg
mov
jns
sub
pop
sbb
shlb
xor
inc
lea
cld
or
ret
sbb
mov
lods
jno
sub
je
lods
aam
or
out
enter
mov
clc
pop
iret
mov
mov
push
xchg
mov
fs
pop
test
dec
das
dec
push
out
xchg
sub
inc
je
das
push
dec
cmp
mov
dec
fiadds
jne
xor
adc
pop
testl
cmp
test
cmp
test
push
mov
pop
arpl
mov
add
aas
int
or
jno
push
shrb
sub
add
cmp
lahf
les
sbb
mov
inc
jmp
int3
sbb
aad
mov
decb
xchg
adc
xor
stos
das
sbb
jmp
mov
addb
xchg
adc
xchg
insl
push
or
sbbl
cmp
subb
jns
or
fbstp
push
lods
jg
in
and
aad
adc
pop
push
dec
push
into
jg
xchg
mov
jnp
pop
inc
dec
xchg
test
fdivrs
cmp
movsl
xchg
sub
cmp
hlt
scas
inc
jl
sbb
push
negl
sub
es
in
and
lret
or
sar
sub
ss
in
dec
mulb
imul
sti
inc
scas
pusha
xchg
out
outsb
xchg
adc
cmc
leave
mov
pop
push
and
icebp
in
cmp
icebp
lock
push
pop
sti
add
cmpl
sub
fmulp
dec
in
inc
cmp
sbb
fptan
or
xorb
xor
mov
xchg
mov
inc
dec
arpl
adc
mov
daa
mov
sti
lret
cmp
shrl
adc
lods
outsl
dec
mov
mov
ljmp
pop
push
and
mov
pop
mov
lret
cmp
xchg
popf
fwait
xchg
cmp
add
dec
or
cmc
adc
idiv
mov
pushf
push
inc
rclb
add
cmp
cmp
test
enter
lret
imul
popf
sbb
iret
xor
movsl
lcall
mov
es
adc
stos
lds
lock
repnz
sbb
jp
mov
lcall
fdecstp
inc
loope
cmp
rorb
in
mov
cmpsb
xchg
mov
xchg
mov
fcoml
pop
out
jbe
sub
fisubl
mov
pusha
imul
ds
jmp
jge
sbb
add
jge
dec
inc
pxor
fucom
and
pop
push
jge
ret
jae
mov
out
push
lods
iret
test
cmp
hlt
pop
mov
xor
and
xor
aaa
in
in
pop
fs
dec
cli
aaa
pop
mov
movsl
loopne
insb
adc
mov
fcoms
sbb
inc
pop
mov
xchg
pushf
aas
mov
aas
cld
rep
lret
or
dec
mov
cmp
mov
pusha
jae
bound
test
loopne
std
sbb
jge
adc
xchg
xchg
aad
dec
ljmp
or
lret
mov
repz
mov
lret
sub
pop
adc
add
dec
rol
dec
mov
jns
pusha
sbb
and
loopne
les
repz
roll
dec
jo
outsb
enter
scas
adcl
jb
mov
adc
mov
mov
adc
nop
push
pop
inc
mov
loope
sub
dec
outsl
fdivs
stc
xchg
pop
gs
jp
lods
or
arpl
pop
aam
and
adc
jecxz
add
mov
call
shrb
cld
sbb
rorb
int3
lahf
je
in
mov
sub
sbb
pop
dec
ret
popa
inc
shlb
ss
test
add
idivl
scas
jo
fsubl
mov
xlat
scas
mull
leave
sti
mov
adc
push
fwait
mov
loopne
push
lret
sub
pop
or
call
pop
lods
push
mov
sbb
orl
fisubs
std
lea
jge
pusha
jnp
push
xlat
push
cmc
movsb
xchg
sbb
pop
sub
dec
dec
pop
add
or
fists
jp
sub
lds
mov
jmp
repz
lock
cmp
mov
sub
arpl
cmpsl
fwait
sub
add
mov
out
mov
testb
icebp
idiv
mov
lds
into
adc
add
fsub
into
cmp
push
jp
dec
popf
idivl
cmp
loop
pop
std
test
sbb
push
xchg
mov
pop
faddp
loope
out
popf
mov
sub
mov
insb
add
nop
add
xchg
sbb
pop
mov
and
cmp
push
jp
xchg
pop
aad
dec
xchg
test
js
mov
mov
sbb
xchg
mov
jp
stc
push
cmp
aam
push
dec
cwtl
jns
mov
pop
movsb
loop
cmpsb
call
sub
push
mov
or
scas
jae
lods
pop
pop
pop
cmpl
out
outsb
enter
sub
dec
push
rcrb
sub
mov
test
push
lcall
dec
mov
popf
mov
pushf
ds
dec
and
cs
mov
add
mov
sbb
ss
xchg
in
lods
rorb
jb
add
xchg
lahf
int
popf
mov
mov
imul
inc
or
or
int3
dec
mov
and
lret
scas
add
test
repz
pushf
sbb
jl
stos
insl
push
ja
cld
push
imul
enter
mov
dec
push
pop
mov
sub
leave
jl
icebp
ss
jg
fisubrl
rol
inc
pop
out
fbstp
mov
xchg
xchg
jmp
fcmovnu
das
cld
xor
aam
sub
fwait
jmp
sbb
jge
enter
add
test
push
mov
and
mov
xchg
push
cmp
popf
fnsave
add
cmpsb
add
mov
inc
arpl
jae
sbb
fimuls
cmpsb
pop
xor
mov
pop
sub
cli
jnp
cld
mov
push
icebp
pop
repnz
fbstp
sub
xchg
mov
sahf
xor
out
les
mov
imul
fs
fwait
dec
movsl
jg
sub
cltd
xchg
push
inc
mov
cmpsb
fs
ficompl
cmp
gs
sub
pusha
out
adc
lock
sub
mov
dec
jno
mov
leave
sbb
outsb
sub
fwait
pop
dec
in
sti
cmp
dec
mov
fisubs
push
adc
imul
mov
or
cmp
add
cmp
or
lahf
or
mov
pop
imul
adc
lock
lods
xchg
je
adc
in
in
jnp
add
stc
out
cwtl
in
mov
addb
andb
je
push
jecxz
out
cmc
lcall
negl
rcll
jecxz
cmpsb
dec
ljmp
add
pop
inc
in
push
stos
sub
into
lods
mov
mov
push
add
mov
pop
dec
in
mov
js
mov
jae
or
mov
or
insl
mov
pop
add
push
lcall
nop
xor
push
mov
sub
int3
pop
cmp
insb
ret
pop
sub
push
push
out
sbb
stc
ja
or
mov
xchg
lahf
mov
imul
adc
sub
nop
jle
xchg
ficomps
add
nop
push
sti
pop
inc
jnp
mov
icebp
sub
pop
sub
push
adc
mov
rcr
dec
jp
mov
push
and
int
daa
movsb
ror
lcall
push
pop
adc
jo
mov
cwtl
jns
mov
inc
mov
stc
pop
pop
pop
in
idivl
xor
sub
clc
pop
mov
mov
lahf
clc
jae
lret
sbb
mov
jbe
arpl
aam
pop
popf
jp
mov
incl
or
and
mov
add
js
sbb
mov
xchg
mov
mov
pop
pop
imull
jb
add
mov
inc
lods
clc
gs
and
mov
fstps
clc
or
test
xor
jmp
mov
sbb
cmp
push
inc
loopne
sbb
mov
lock
fbstp
sbb
pop
push
mov
repz
pop
xchg
mov
rcrl
xor
bound
imul
push
test
mov
push
aam
adcb
xor
or
sub
ficoml
mov
negl
mov
mov
pop
mov
fdivrl
rcll
movsb
decl
repnz
or
sahf
addr16
addr16
insl
dec
fsubrs
push
mov
shr
mov
cmp
mov
mov
testl
inc
popf
fxch
ficompl
sub
jne
push
jge
mov
je
fisttps
sub
test
test
mov
push
jle
aam
jns
test
cmp
fnstcw
rcl
and
mov
mov
imulb
insl
icebp
xchg
push
adc
lahf
mov
mov
add
faddl
jbe
cmp
pop
add
jnp
lahf
fadds
add
mov
and
xchg
in
bts
mov
xchg
push
insl
rolb
fstpl
add
cwtl
push
fwait
jl
or
mov
jecxz
mov
xor
sub
enter
negb
stos
jg
push
push
mov
adc
jo
or
std
fwait
rorb
adc
cmp
xchg
xor
add
jae
xor
sti
or
outsb
push
ret
fstpl
fists
inc
adc
dec
loopne
jbe
pop
scas
loope
repz
fidivrs
xchg
xor
lods
lea
lahf
cltd
loopne
push
ret
xor
daa
sbb
xor
fsubrs
mov
hlt
jp
jge
pop
insb
mov
jmp
push
inc
mov
mov
shrl
sbb
sub
jae
mov
xchg
or
add
das
test
test
add
icebp
ljmp
sbb
fadds
sbb
and
mov
jns
lods
pop
test
movsl
cmp
xor
call
roll
sub
sub
or
push
jno
mov
int3
xor
test
mov
cmpsl
jae
jl
push
dec
sar
ljmp
outsl
cmp
jle
push
icebp
or
sub
nop
cwtl
lods
int3
iret
stos
sarb
dec
nop
xor
lods
sub
add
stc
scas
jno
mov
inc
rcrb
jno
xchg
loopne
xor
mov
fldcw
sub
sub
dec
hlt
das
jae
adc
bound
sub
pop
je
jo
mov
int3
out
mov
push
lds
lods
pop
cmp
aas
sahf
mov
adc
xor
fisttpll
sbb
out
loopne
popf
sub
and
pop
popl
cmpsb
lret
pusha
cmp
mov
jmp
add
sub
lret
sbb
ror
mov
movl
adc
push
push
dec
loopne
stos
loop
jae
std
sub
xor
andb
mov
fsubl
sti
pop
inc
sar
pop
idivl
lret
pop
fcompl
sbb
push
lea
scas
and
arpl
mov
xorb
or
sub
mov
cmp
or
lods
imul
fstpl
cmp
add
addr16
push
aaa
pop
or
in
popf
sti
jl
rorl
mov
xchg
add
sbb
sub
cs
icebp
in
pop
rcr
loope
rorl
or
push
sbb
jb
lret
stos
stos
cld
pop
je
ss
in
stos
cli
leave
sbb
xor
out
pop
push
mov
fiadds
xchg
and
bound
movsb
sbb
and
pop
pop
xchg
popl
dec
jno
and
push
incl
or
scas
and
xor
incb
enter
insl
addl
jb
or
cltd
js
cs
mov
xor
lret
int3
xor
test
jmp
aaa
pop
jl
rorb
push
xor
xor
nop
push
dec
jae
dec
inc
int3
inc
xor
jle
aaa
mov
dec
test
sub
cld
fwait
adc
addr16
in
outsb
jne
aas
aas
rolb
jo
xchg
or
xchg
outsb
popf
into
cli
jbe
insb
xchg
sub
xorb
outsb
imul
xlat
xor
sbb
push
or
and
mov
test
xchg
movsb
adc
iret
jle
jno
jmp
in
pop
sbb
stc
lahf
movsb
ret
sub
aas
aaa
inc
imul
mov
aas
popa
inc
decb
mov
cwtl
aaa
push
rep
push
mov
xchg
mov
mov
jbe
sarl
jp
inc
out
cmp
pusha
add
pop
jl
mov
pop
xchg
xor
push
add
stos
lret
inc
subb
js
icebp
test
push
mov
adc
pop
insb
sahf
lret
gs
dec
cs
clc
aaa
mov
mov
pop
sbbb
sarl
or
xchg
cmp
inc
in
push
std
and
adc
ret
insl
sarl
or
xchg
cmp
inc
in
push
std
and
adc
ret
insl
sarl
or
xchg
cmp
inc
in
push
std
and
and
cmc
insl
sarl
or
adc
jmp
add
in
inc
xchg
adc
aaa
mov
add
push
jbe
pop
mov
sub
cmp
sbb
sbb
ljmp
inc
stos
push
mov
xchg
jp
push
pop
dec
xlat
ljmp
pop
cli
daa
shlb
ret
inc
mov
mov
xchg
rcrb
imul
ja
pop
xchg
imul
arpl
xchg
icebp
test
out
lret
roll
idivb
mov
mov
inc
and
in
add
adc
ljmp
cmp
xorps
xchg
push
mov
in
incb
jbe
out
mov
jns
pop
cmp
sbb
mov
fucomi
inc
mov
xchg
ja
xchg
cmp
cmpsb
stos
pop
movsl
daa
jns
std
jo
shr
sbb
cmp
fidivl
out
out
jp
movzwl
inc
mov
in
in
sbb
nop
lahf
pop
lahf
mov
pop
js
inc
outsb
rcrb
dec
mov
xlat
dec
out
testb
ljmp
inc
stos
push
mov
xchg
bound
xor
sub
jae
push
cli
dec
lret
jns
add
xor
and
adc
out
add
xor
mov
xorl
push
cli
push
mov
xor
aad
cli
sbb
rcrb
mov
push
mov
call
lahf
inc
stos
pop
scas
push
push
mov
xchg
jp
dec
mov
sub
cmp
or
sbb
ljmp
inc
stos
push
mov
xchg
jp
dec
mov
sub
cmp
or
sbb
ljmp
xor
pop
fists
cld
into
adc
ljmp
daa
push
dec
lahf
cs
mov
shl
mov
adc
in
lret
mov
std
icebp
loopne
mov
add
loop
jns
movq
push
movsl
lods
sahf
mov
jbe
repz
lods
sub
daa
das
cld
stc
cmpb
pop
fwait
and
lret
mov
push
dec
cmp
pusha
add
add
xor
orl
int3
push
popf
push
adc
shlb
sbb
repz
aam
mov
icebp
and
xchg
aam
adc
or
push
mov
xchg
xor
aas
pop
frstor
jbe
pop
and
xchg
dec
lret
inc
clc
movsb
or
push
aad
adc
jmp
xchg
push
mov
cs
mov
aad
dec
gs
or
lret
jp
mov
cwtl
test
imul
in
imulb
popf
pop
and
dec
lock
push
std
jp
lock
int
je
xor
leave
movntq
push
cmpsl
aaa
add
jmp
into
sbb
outsl
shll
sahf
push
xor
cmc
mov
xlat
mov
xor
and
push
frstor
mov
sbb
loope
ljmp
dec
inc
lret
cli
loop
clc
ss
aam
adc
ss
add
sbb
mov
mov
dec
stc
pop
cld
or
pop
lods
add
scas
push
aas
aaa
subw
sub
push
ljmp
sub
lds
int
xor
jo
pop
rolb
jge
testb
gs
mov
sub
pop
cmp
and
pop
push
xchg
aam
mov
push
clc
stos
inc
in
adc
daa
or
es
mov
test
bound
stos
shrb
jg
cwtl
xchg
iret
movsb
cmp
xchg
cli
inc
in
clc
and
dec
mov
out
cmp
adc
jns
fldl
shl
jmp
jp
xchg
lret
cs
xor
js
jne
sarl
dec
mov
push
jno
orl
imul
arpl
or
and
mov
loope
dec
xorb
xchg
sahf
sahf
push
lcall
adc
rolb
xchg
xchg
out
cmp
push
fcmovu
pop
push
cld
sub
xchg
js
xor
pop
das
cmp
in
out
pop
icebp
jae
sub
cld
and
sbb
inc
inc
xchg
test
mov
mov
and
push
sbb
js
gs
jno
lahf
in
test
mov
scas
movntq
je
test
xor
stos
out
or
dec
inc
sahf
cmc
jno
fisubl
movsl
es
test
pop
push
sub
orl
pop
sbb
cmp
xor
sub
jge
daa
nop
cmp
mov
mov
aam
xor
cltd
lret
dec
rorb
nop
movsb
in
mov
insl
stc
dec
mov
xor
in
pop
out
mov
sub
jg
jl
push
sub
lret
add
sub
adc
ficompl
and
movsl
lcall
xchg
rorl
mov
mov
sbb
insb
cli
push
inc
push
cmp
pop
lcall
mov
sub
add
jecxz
or
push
scas
gs
cwtl
es
test
adc
mov
cwtl
out
loop
push
cs
aam
faddl
out
repnz
aaa
or
jne
faddl
jbe
sbb
adc
cld
lahf
jbe
or
fsubrs
insb
sbb
addr16
xchg
ds
clc
xchg
mov
nop
sbb
cltd
inc
pusha
dec
fwait
xchg
icebp
mov
fmul
mov
shrl
pop
xchg
lcall
mov
lds
add
mov
cld
push
mov
jecxz
add
jae
mov
shlb
xchg
sub
sbb
scas
jmp
cmp
loope
cwtl
jo
out
cwtl
dec
xlat
add
or
lods
pop
sub
bound
dec
mov
push
mov
int3
andl
xor
cmp
xor
or
push
jecxz
mov
adc
mov
mov
movsb
or
pop
repz
movsb
push
mov
add
sub
pop
cmpl
testb
fdivrs
loop
fistpll
mov
nop
sarl
mov
out
sbb
xor
out
and
xchg
fnstcw
or
pusha
jae
filds
std
bound
gs
push
sub
inc
or
add
mov
xor
jmp
sbb
movsl
adc
cmpsb
inc
hlt
mov
adc
test
mov
add
pop
sti
sbb
push
out
filds
pushl
ds
mov
lea
push
imul
movsb
mov
in
mov
sbb
dec
imul
out
in
xchg
movsl
jge
lea
imull
fldenv
mov
lock
cmpsb
loop
dec
sub
fistl
jle
xchg
lret
add
and
insb
push
out
sahf
push
mov
fiaddl
pop
jecxz
pusha
movsl
sub
in
cmpsl
jae
add
fnstcw
inc
fsubrl
faddl
stc
lds
mov
das
mov
clc
fwait
xchg
mov
ret
loopne
jne
add
sarb
in
mov
or
cltd
enter
insl
roll
pop
movsb
push
jnp
mov
fdivr
sbb
and
cli
shrb
pop
push
pop
lock
mov
inc
xchg
jl
test
incb
test
cmc
mov
in
sub
stos
clc
enter
or
or
add
pop
push
push
ds
mov
mov
dec
dec
je
pop
xor
mov
arpl
sarb
out
inc
jo,pn
insl
mov
sahf
movsl
aam
mov
fmull
aam
xchg
pop
or
incl
fsubrl
ret
outsl
push
iret
adc
push
outsb
jg
cli
add
ret
jno
mov
popa
popf
add
frstor
sbb
ficomps
xlat
scas
adc
repz
popf
or
sub
inc
ficoml
fiadds
cmp
lds
sarb
jp
inc
cmp
push
and
pop
imull
bound
adc
and
rorl
push
or
cli
push
andl
jb
ret
arpl
cmp
test
call
pop
xchg
xchg
fcomps
push
sbb
xchg
mov
add
nop
add
rcll
rcrl
repnz
cwtl
ja
clc
notb
scas
sbb
sahf
cli
xchg
add
mov
sbb
or
jecxz
jl
push
sub
enter
dec
pusha
insl
inc
imul
inc
sbb
in
mov
fs
mov
inc
fisttps
dec
lea
nop
cmp
clc
push
enter
adc
jne
in
mov
ret
repz
dec
jge
mov
aaa
jp
mov
pop
mov
les
adc
jne
jp
add
sub
xor
lods
jae
mov
bound
jbe
enter
inc
mov
and
mov
mov
pop
test
cmpsl
or
fwait
push
daa
xchg
xchg
mov
into
mov
mov
aad
test
mov
sti
fdivr
jbe
adcl
mov
adc
mov
jl
mov
shrb
push
sbb
cmc
les
fsubl
js
sbb
xchg
jae
pushf
or
icebp
in
lods
push
and
cmp
mov
adc
adc
add
sub
enter
pop
mov
in
notl
xchg
mov
add
or
sub
jge
call
popa
aaa
sarb
mov
mov
jmp
int3
leave
sub
shlb
add
cmp
mov
push
les
clc
push
cwtl
xor
or
pop
stos
call
aaa
push
negl
int3
ds
pop
adc
fisubl
pop
frstor
push
mov
in
arpl
test
xchg
inc
decb
mov
xor
add
aaa
push
sahf
or
mov
call
and
aad
push
ret
mov
or
out
mov
adc
push
shrl
out
push
xchg
les
divps
int
dec
iret
xchg
mov
out
add
or
imul
cmp
nop
fcompl
mov
pop
les
or
cltd
ja
imul
pop
or
inc
movsl
cmp
test
sbb
gs
outsl
lock
data16
add
sbbl
add
sbb
pop
das
cmpb
ror
lcall
pop
push
inc
shll
cld
cli
aam
inc
andl
or
imul
sub
xchg
sub
mov
pop
pop
fnstcw
lahf
sub
sbb
mov
mov
in
imul
movsl
inc
sub
xchg
addr16
fucomip
sub
inc
inc
sub
into
into
xor
cld
repnz
mov
sub
dec
or
adc
pushf
sub
xor
mov
cmp
dec
fsubp
in
dec
repnz
sti
inc
add
shlb
sub
push
push
push
pop
cli
jg,pn
dec
loop
xchg
scas
push
ss
test
out
push
jmp
pop
mov
or
jnp
or
mov
sbb
xlat
xor
scas
lea
xchg
lods
das
jg
mov
push
lgs
pop
inc
in
js
pop
cmp
pop
mov
ljmp
xlat
pop
push
shl
rorl
mov
out
push
mov
adc
idivl
outsb
leave
cmp
inc
imul
jge
xchg
bound
lods
ret
push
pop
mov
movsl
jp
mov
dec
ljmp
hlt
mov
cmp
pusha
lahf
adc
std
xchg
push
lea
mov
into
mov
xorl
push
fbld
pushf
cmpsb
pop
movsl
scas
sbb
addb
xchg
ret
push
dec
rcrb
sub
mov
popa
cmp
adc
add
lret
mov
mov
xchg
ljmp
bound
inc
dec
jns
out
fnstcw
insl
out
cltd
add
or
mov
sbb
aam
js
enter
sbb
mov
jnp
inc
push
push
push
ja
shrb
fiadds
shlb
shlb
addr16
dec
or
jns
jne
leave
rolb
push
fnstcw
cs
orb
mov
loope
fmull
push
or
out
xchg
loope
stos
fstpt
sbb
mov
filds
sbb
push
sbb
jp
lahf
mov
sahf
xor
pusha
ljmp
das
pop
inc
leave
sub
out
stos
sbb
cmpsl
test
test
inc
popa
sbb
mov
lret
adc
jbe
xor
xlat
pop
mov
out
or
rcr
fldcw
mov
outsb
xchg
push
icebp
lret
testl
pop
push
mov
and
aaa
pop
js
stc
xchg
xchg
das
xor
sbb
lods
xchg
daa
ss
pop
fs
lock
test
xchg
sbb
lret
xor
jp
cmp
in
insb
cmp
cmpb
je
mov
lds
je
test
xor
pop
enter
and
test
ret
je
and
ffreep
cmp
xchg
inc
xor
mov
insl
pop
gs
lahf
dec
int3
xchg
mov
inc
orl
daa
sahf
outsl
in
bound
out
pop
mov
fistpll
xchg
cmpsl
bound
fisubs
push
and
cmc
cmp
push
popf
leave
loope
insb
sarl
jle
and
fcmovb
xor
movsl
mov
divb
jb
insb
cmp
adc
or
sbbb
insl
xor
sbbl
jmp
xlat
xor
xchg
cltd
stc
cmc
mov
mov
mov
jg
push
cld
movsl
sti
test
dec
rcr
lcall
popf
cmp
xchg
addr16
flds
and
xchg
lret
je
push
in
inc
aad
movsl
or
jne
dec
je
jg
out
dec
out
xchg
aas
ret
inc
and
inc
outsb
int3
pop
pop
pop
test
in
adcl
jnp
fwait
sbb
test
jle
imul
in
stc
loopne
mov
in
out
cmc
daa
mov
push
sub
fldcw
fs
inc
dec
dec
mov
movsl
in
fcmovnu
ja
sub
popa
lods
aas
pop
fwait
in
cwtl
cs
push
leave
push
pusha
xchg
mov
rclb
mov
nop
pop
shlb
bound
pop
xor
ret
sbb
cli
je
pushf
ret
mulb
inc
dec
dec
bound
lahf
sub
xchg
xor
in
fisubrl
mulb
addr16
dec
lods
mov
clc
mov
cmp
les
scas
lods
icebp
imul
xorb
pop
lds
jb
adc
sti
fmul
lods
lcall
les
push
orl
les
mov
mov
adc
fiaddl
cld
movsb
dec
push
lock
add
push
and
imul
fidivrl
xor
cs
dec
mov
lcall
mov
xor
sti
sti
mov
mov
movl
loop
lahf
jno
and
lock
mov
xor
xchg
aam
sub
roll
xor
lret
icebp
popa
mov
out
imul
notb
int
sbb
mov
adc
add
add
fistps
ds
fs
rorb
cmpsb
or
lds
jge
pop
or
push
push
sahf
fstps
pop
jns
insl
or
sub
sub
rcrb
stc
fnstcw
icebp
jbe
inc
lock
sub
cmp
ja
sbb
divb
push
shll
in
imul
mov
mov
stos
xor
fcompl
pop
mul
cmp
mov
push
les
mov
lret
and
mov
mov
cmc
add
cli
notb
mov
inc
sub
lret
and
mov
pop
mov
sub
cmp
mov
lods
stc
adc
cmp
mov
cltd
xchg
int
xor
add
push
sub
imul
nop
testl
cmp
inc
add
jl
sub
lods
out
cs
pusha
cld
inc
push
scas
out
cmp
adc
sub
cmp
xchg
jmp
dec
jl
das
repnz
pop
aas
sbb
mov
in
jle
xchg
rorl
aad
xchg
and
daa
add
or
cmc
sbb
lsl
int
pushf
jle
sti
add
int
mov
mov
imulb
jbe
fs
jg
xchg
sub
adc
cmp
loopne
sub
dec
push
xchg
movl
mov
out
or
dec
cli
movsb
aam
adc
inc
hlt
ret
cmp
dec
stc
movsb
jno
movsl
int
inc
sti
push
cmp
and
fisubs
pop
add
mov
jno
pop
inc
clc
or
mov
pop
ret
in
cltd
xchg
shl
sub
or
cmp
ja
outsb
mov
inc
cld
add
sub
ljmp
mov
lods
lods
subb
mov
pushf
pop
cmpsl
fstpt
or
movsb
out
sub
insb
pop
ficoml
push
jle
addb
sahf
aam
sub
dec
jecxz
das
push
in
test
sub
jne
xchg
jle
iret
ret
outsb
into
fsts
and
hlt
xchg
sbb
rcrl
mov
andb
in
mov
movsl
fisttpll
xchg
mov
sbb
scas
cld
je
mov
rclb
popa
lock
xchg
or
pop
scas
mov
ljmp
lcall
xchg
and
pop
sbb
inc
push
push
in
add
movsl
push
dec
stc
dec
stos
icebp
iret
jge
ss
mov
dec
and
jb
loopne
xchg
test
movsl
aaa
loop
je
and
and
xchg
mov
or
add
ds
mov
test
rcrb
stos
sbb
loope
inc
out
popa
mul
shll
outsb
icebp
ret
sub
xchg
mov
fstl
dec
inc
gs
xor
ss
fldt
out
arpl
pop
inc
jl
add
cmp
sbb
and
sub
out
pop
xor
adc
jns
adc
mov
adc
jge
mov
not
hlt
rorb
leave
pop
lds
jl
cmp
cmpsl
pop
fistl
sbb
out
xor
jge
cmp
or
pop
lret
rorl
lds
aas
pusha
enter
ja
mov
outsb
cmpsb
inc
lret
outsb
in
jnp
lgs
and
sbb
adc
jnp
jge
pop
aaa
fwait
xor
lea
int
or
add
and
dec
xchg
mov
adc
sar
pushf
dec
xchg
or
jp
dec
shlb
popf
mov
pusha
nop
out
cmp
js
push
ficompl
rcll
xlat
dec
sbb
popa
dec
mov
push
jle
push
add
outsb
in
in
adc
leave
mov
imul
mov
in
add
mov
xchg
imul
xlat
jne
mov
sub
sub
pop
or
inc
in
fsts
dec
in
mov
in
movsb
sub
push
dec
scas
lahf
sbbb
jp
jno
jnp
xor
mov
out
or
xchg
aaa
push
nop
addr16
and
xchg
ja
pop
ret
arpl
lock
test
mov
cmp
jecxz
mov
mov
or
cmp
add
testl
xor
lea
mov
push
jg
mov
fistpll
int
push
cmp
cltd
push
aas
adc
scas
mov
rolb
lods
mov
popf
outsb
in
imul
lds
xor
inc
push
jp
popa
repnz
jl
mov
push
adc
inc
and
repz
shrl
scas
sahf
add
jmp
andl
lret
cmp
cmp
jnp
dec
mov
int
out
mov
inc
stos
jl
xor
es
stos
pushf
fdivs
cs
cmp
ror
sbb
xor
pop
clts
pop
add
mov
adc
cmp
push
mov
imul
hlt
js
mov
xchg
dec
cltd
fistpll
dec
cmp
lahf
push
or
addb
and
pop
xchg
jno
js
or
mov
rorb
push
hlt
sbb
xchg
cld
mov
icebp
jecxz
push
rorl
inc
jg
jle
push
inc
testl
cmp
mov
jno
fldenv
fdivrl
push
xchg
loopne
in
or
xchg
rol
popf
jo
in
mov
movsl
loopne
or
mov
adc
lods
xor
sbb
pop
inc
movsb
cli
inc
xchg
jno
adc
hlt
outsl
adc
cmp
jle
mov
lea
in
pusha
popa
jbe
adc
inc
aam
xor
push
xor
mov
pop
cmp
jno
ljmp
insb
mov
pminub
sbb
lea
adc
nop
sub
daa
xchg
ds
popf
pop
inc
cmp
hlt
out
data16
push
push
sub
mov
insb
std
mov
mov
and
push
push
fcomi
mov
sarb
or
daa
jo
loopne
das
mov
xor
push
dec
xor
pop
daa
xchg
jmp
jp
adc
ja
or
ja
stos
shr
push
mov
fidivrs
and
cmp
mov
xor
xchg
in
inc
pop
in
inc
or
dec
clc
gs
scas
stc
cld
xor
sbb
aas
jnp
ja
loopne
add
cwtl
xchg
sub
cmpb
cmpsl
pop
push
fs
hlt
mov
sbb
sbb
sar
cmp
fsubrs
ljmp
jns
add
xor
mov
aam
and
sub
cwtl
jg
repz
leave
push
jl
popf
ja
sub
testb
add
or
daa
sti
orb
data16
jg
mov
cltd
lret
and
xchg
out
or
or
cli
add
rolb
sqrtps
lret
adc
jnp
loopne
pop
mov
cmpsb
ljmp
push
xchg
movsl
fwait
mov
rcll
mov
add
divl
pop
xlat
add
sub
scas
loope
arpl
test
jp
jns
and
mov
iret
aaa
cmp
mov
push
adc
std
fwait
mov
in
loopne
xchg
add
pop
jg
inc
int3
in
adc
insl
cmp
pop
mov
pop
push
lock
mov
subb
repnz
and
shll
pop
inc
xor
pushf
out
das
mov
jle
das
popa
mov
out
leave
dec
lea
and
test
push
pop
inc
or
and
shr
imul
dec
cld
cmp
cmp
stos
and
test
adc
repz
sub
xchg
inc
daa
mov
fiaddl
push
mov
xchg
jp
dec
mov
sub
cmp
or
sbb
ljmp
inc
stos
push
mov
xchg
jp
dec
mov
sub
cmp
or
sbb
ljmp
inc
stos
push
mov
xchg
jp
dec
mov
sub
cmp
or
sbb
ljmp
inc
stos
push
mov
xchg
rorb
mov
or
fldenv
jmp
lcall
dec
xor
sbb
lock
push
fldenv
jmp
cmc
mov
and
imul
fldenv
jmp
cmc
mov
lea
or
adc
jp
inc
push
lods
movsl
test
stc
ljmp
push
pop
and
xchg
mov
outsb
nop
xchg
mov
outsb
xchg
xor
jecxz
push
mov
inc
ret
inc
xchg
in
lret
xchg
cwtl
dec
adc
cltd
outsl
adc
mov
stc
int3
push
idivb
out
pop
lret
in
call
mov
mov
cmp
xchg
icebp
in
cmc
loopne
test
pop
cwtl
cli
xchg
inc
dec
wbinvd
mov
mov
dec
dec
jl
adc
data16
loopne
shlb
push
pop
flds
hlt
cli
loop
dec
jne
mov
mov
xor
jecxz
insb
mov
add
mov
xor
mov
pop
mov
push
sub
leave
mov
test
xchg
cltd
in
cmc
mov
and
imul
mov
in
scas
cld
cld
mov
cmc
mov
inc
or
push
lahf
add
push
pop
inc
pop
adc
movsl
mov
out
lods
ret
mov
aad
pop
cs
add
imul
and
mov
in
mov
fsub
mov
mov
and
imul
fldenv
jmp
cmc
mov
and
imul
fldenv
xchg
rorb
jnp
jmp
lcall
xchg
cmp
xor
andb
lret
stc
out
mov
daa
xchg
mov
jg
xchg
jbe,pn
in
das
push
add
cmp
and
mov
sbb
stc
jno
call
mov
mov
adc
dec
in
xor
dec
mov
je
adc
adc
std
or
dec
and
sti
inc
stos
xchg
mov
xchg
cmpsb
enter
add
add
xchg
scas
sti
jp
mov
addr16
inc
fstps
inc
xor
mov
decb
inc
into
add
adc
pop
and
cmp
lock
dec
mov
sbb
jmp
pop
aas
sub
xchg
pop
push
in
mov
lretw
sbb
sti
xor
mov
leave
xchg
mov
mov
dec
stos
xchg
jno
jno
cmc
xchg
xchg
inc
mov
inc
mov
adc
ss
andl
out
inc
fcomps
adc
inc
mov
dec
loope
scas
push
add
hlt
cld
mov
sbb
mov
push
push
push
mov
mov
or
mov
and
mov
pop
pop
leave
in
test
xor
inc
mov
add
clc
ret
jno
cmp
mov
pop
adc
sbb
int
jle
filds
lcall
jmp
jmp
vmwrite
ret
lret
jp
mov
cmp
or
addr16
xchg
dec
lcall
sub
and
jle
jo
mov
loop
enter
pushf
iret
sarl
inc
and
ret
jp
xchg
cmpsl
and
inc
or
jg
rclb
xchg
mov
mov
adcb
mov
dec
ja
movsl
sub
in
movsb
cmpsb
jns
xchg
inc
fmuls
adc
inc
lods
iret
mov
mov
loopne
aaa
push
movsb
adc
jp
lret
dec
shl
push
dec
mov
clc
mov
lods
fisubrl
das
fstpl
je
test
ja
mov
jmp
or
sti
addl
xor
notb
dec
mov
sbb
lods
jmp
push
xchg
movsl
xchg
jl
stc
dec
adc
incb
or
dec
inc
push
sub
push
push
add
lcall
test
incb
movnti
out
out
dec
push
stos
cmp
xchg
out
pushf
inc
mov
je
arpl
jb
jp
dec
or
movsl
pop
lret
lock
dec
cmc
into
pop
cmp
mov
adc
ds
fbstp
int3
hlt
jbe
fdivl
insb
add
mov
or
sbb
cmp
push
or
mov
and
addr16
cld
push
dec
loop
cmp
fs
jae
xor
mov
sbb
pusha
cmpsl
sti
ficoml
pop
inc
imul
mov
xchg
push
mov
nop
decb
mov
pop
jo
sub
addr16
pushf
lretw
hlt
mov
scas
int
jge
int
mov
mov
jl
stos
hlt
mov
lea
addr16
mov
jmp
cmp
rorl
je
sbb
stc
movsb
cli
in
jb
cwtl
fcmovnbe
stc
iret
and
jmp
lcall
pusha
dec
pusha
or
lea
je
inc
testb
pop
pop
call
loop
and
jne
fidivs
pushf
or
lea
inc
in
aad
js
jl
popa
adc
hlt
add
in
lods
mov
sub
pavgw
in
sbb
ss
mov
roll
jl
and
push
int
arpl
mov
add
pop
js
stos
xchg
cmp
xor
inc
pop
mov
ret
aam
mov
push
sbb
pop
xor
pop
in
lock
inc
xchg
mov
push
pusha
dec
cwtl
mov
fstps
cmpsl
insb
inc
sub
stos
insl
xchg
push
mov
test
mov
cmp
or
xchg
jl
pop
adc
pop
push
fldt
mov
je
cli
frstor
xchg
sub
psrad
js
and
mov
push
pop
cmp
jb
loop
pop
insb
mov
jae
bound
clc
aad
jmp
adc
mov
sbb
pop
lods
or
xchg
lret
subb
or
cmp
mov
and
pop
movsb
subb
and
fiaddl
dec
inc
jp
imul
aad
xor
gs
shl
sub
push
fs
ja
popf
pop
fcompl
xchg
fwait
mov
pop
jl
pushf
mov
and
addr16
loop
mov
int
or
icebp
icebp
lea
push
inc
jge
xchg
aad
mov
or
lcall
jmp
outsb
mov
xor
loope
icebp
jl
ljmp
shl
sbb
mov
insl
das
sbb
cld
push
inc
dec
outsb
push
adc
mov
mov
push
iret
iret
in
loop
stos
inc
dec
jne
rcrl
xchg
adc
dec
inc
or
ja
push
add
xor
in
scas
mov
ljmp
mov
adc
addr16
cmc
mov
shlb
lods
xor
loope
ss
inc
test
fisttpll
adc
jmp
xchg
ljmp
mov
adc
pop
int3
hlt
test
dec
push
pop
jge
jbe
dec
aad
js
lds
loope
adc
cmp
addr16
mov
lret
orl
js
sarb
inc
loop
shl
subb
inc
and
test
mov
faddl
clc
add
xlat
shl
iret
iret
lret
jl
into
mov
int3
cld
movsb
addr16
int
test
sub
inc
in
insb
test
scas
test
pop
add
mov
and
jecxz
xchg
inc
add
rorb
jg
shr
and
daa
xchg
sbb
test
fidivs
push
icebp
ja
jmp
outsb
xchg
xchg
lcall
test
icebp
ljmp
mov
outsl
sbb
push
imul
mov
out
mov
outsl
lea
cld
ss
stos
shlb
filds
sub
jb
in
popa
fwait
or
jo
mov
imul
cltd
mov
dec
mov
add
pop
add
mov
xor
xchg
cmp
xchg
mov
enter
repnz
out
sub
or
bound
xor
pop
jmp
sbb
lahf
adc
push
xchg
lods
pop
ljmp
or
stos
and
mov
loope
movsb
or
xor
push
sbb
rcll
aam
mov
jg
arpl
test
cs
lods
hlt
scas
mov
mov
addr16
addr16
jg
std
cwtl
cmp
nop
mov
rorl
sbb
mov
es
mov
push
imul
mov
inc
daa
inc
movsw
jne
mov
push
inc
push
paddw
sbb
jecxz
cs
xchg
lahf
ret
mulb
ljmp
xchg
add
imul
or
dec
scas
mov
push
mov
jg
fwait
push
and
rol
je
xchg
mov
push
arpl
or
inc
mov
mov
fsts
aaa
shl
lahf
cmp
or
popa
imull
cmc
or
addl
lea
cmp
incl
les
push
pop
xchg
mov
push
clc
mov
gs
mov
jne
mov
cmp
outsb
push
add
sbb
in
cmc
inc
dec
arpl
insl
mov
lods
pop
aas
repnz
cmp
dec
daa
jge
outsb
mov
hlt
addl
or
sub
into
mov
add
jns
ja
or
and
add
jecxz
jge
out
jp
pop
mov
xchg
inc
sub
pop
jno
dec
movsb
push
ss
pop
negb
jo
xor
xchg
aam
mov
shl
inc
test
andb
movsl
data16
fisubrl
mov
jbe
xor
fstps
loopne
xchg
jne
shlb
dec
mov
fsubrl
sbb
cmp
inc
dec
movb
push
and
push
in
dec
jbe
sub
sub
sub
loopne
xor
stos
popf
mov
jbe
shl
xchg
push
mov
xchg
fwait
daa
dec
outsb
jnp
pop
jl
shrl
pop
mov
pop
mov
in
cmp
sbb
clc
xchg
sub
push
mov
adc
out
xchg
pop
dec
adc
xchg
xchg
frstor
mov
pop
adc
push
ficompl
aam
xchg
sub
outsb
bswap
daa
stos
jg
cmpsb
nop
mov
lret
adc
adc
gs
push
lret
inc
xchg
fistl
jge
mov
xor
xchg
xor
xchg
mov
adc
aam
sbb
mov
shll
push
sbb
dec
or
adc
outsb
jo
roll
mov
clc
pop
les
aas
cmpsb
push
pusha
cmpsb
sbb
push
into
xor
sbb
pop
inc
ret
xchg
xchg
add
push
mov
test
adc
and
mov
adc
xchg
jbe
inc
xchg
outsl
mov
mov
imull
sub
int
jae
mov
sub
mov
sub
aam
fsts
and
not
fwait
es
push
std
dec
mov
jecxz
add
pop
mov
jo
push
in
insl
push
popf
xchg
pop
push
xorl
xchg
cmp
stc
and
leave
sbb
mov
jp
add
imul
pop
jge
adc
adc
lahf
in
stos
in
out
pop
add
xchg
push
loopne
add
pop
inc
adc
fnstenv
push
adc
cmpsl
mov
daa
fnop
pop
add
or
imul
rolb
lea
sahf
add
and
dec
add
mov
or
clc
dec
hlt
jmp
push
pop
mov
sub
arpl
cmc
fwait
std
lds
popf
push
or
cltd
xchg
inc
fldl
notl
ficoms
js
sub
dec
xor
sub
push
fs
dec
fcoms
and
aad
xchg
pusha
adc
mov
js
jle
insb
incl
sub
pop
das
lret
adc
loopne
cwtl
out
push
mov
cmp
clc
mov
sub
loop
or
cmp
push
push
jbe
push
xchg
push
insb
push
mov
lds
xchg
pop
pusha
pop
mov
lahf
xchg
pop
movsb
sbb
mov
push
call
pop
jno
hlt
andl
xchg
hlt
push
adc
xchg
push
cld
sbb
gs
jecxz
xor
pop
aam
jno
mov
jge
fcomp
sbb
jne
movsl
clc
jnp
sub
cld
bswap
call
push
movsl
sti
aas
mov
cmpsl
stos
fwait
ds
pusha
dec
and
xchg
sub
scas
dec
push
or
shr
mov
mov
orl
adc
push
fndisi(8087
mov
inc
inc
sbb
call
aaa
fwait
or
and
pop
leave
ds
aad
in
jg
xchg
inc
fistl
js
aas
jmp
fimuls
fnstenv
push
call
add
xchg
sub
bound
push
adc
out
inc
pop
adc
js
push
lcall
cli
test
dec
xor
in
mov
mov
push
lret
cmp
leave
test
das
dec
rcrl
mov
add
or
scas
test
sti
cmpsb
adc
sbb
in
mull
clc
lods
xchg
jg
sbb
icebp
shll
sub
negb
dec
jl
loope
ret
movsl
mov
aas
pop
ds
sbbl
push
mull
sub
xchg
scas
add
xor
in
sub
jle
dec
iret
out
jb
out
loopne
xor
shl
lahf
not
adc
jecxz
addl
repnz
cmp
and
bound
dec
adc
xchg
inc
fisttpl
jbe
jecxz
in
jp
add
inc
mov
sbb
inc
jmp
jno
xor
andb
jnp
roll
scas
sbb
in
jne
mov
bound
andl
insl
test
test
jns
xor
jns
jp
xchg
push
sub
jle
mov
imul
insb
inc
in
and
imul
jp
rclb
gs
pop
mov
iret
ljmp
inc
xor
sbb
and
sbb
sbb
cmp
lahf
adc
pop
test
mov
out
pop
or
pop
mov
das
fldt
mov
scas
mov
es
andl
jno
push
fnsave
into
insb
pop
das
das
xor
mov
sub
cli
andb
mov
push
fs
fst
mov
rcrb
pop
jo
pop
cmp
gs
push
push
clc
daa
pop
or
cmp
pop
sbb
sbb
jmp
pop
lret
or
sbb
inc
mov
bnd
pop
ja
sub
sbb
fdivr
add
cmp
jne
pop
cld
dec
notl
pop
repnz
push
sub
push
xor
data16
jecxz
push
or
movsb
cmp
loopne
fiaddl
fildl
iret
test
in
xchg
decb
fistpll
mov
mov
fbld
pushf
mov
jg
push
inc
sub
push
push
ljmp
adc
cmp
pop
cmp
mov
push
mov
xor
sub
xchg
addb
sti
push
inc
das
sub
sub
mov
pop
insb
adc
fst
add
movsb
sbb
ret
add
cwtl
icebp
fucom
sbb
movsb
ret
jbe
xchg
outsb
div
sti
jge
into
mov
cmp
push
je
pop
fsubr
or
add
cvtpi2ps
sbb
sbb
xchg
out
mov
push
add
sub
dec
addr16
pop
test
sbb
hlt
adc
f2xm1
xor
push
mov
fsubrl
je
shl
fistpll
stos
out
cwtl
pop
arpl
cwtl
dec
mov
mov
int
aas
and
sub
adc
das
stc
adc
push
inc
iret
bound
sbb
add
mov
sub
out
dec
jg
mov
fisubl
lcall
xchg
dec
pop
iret
mov
and
xchg
and
add
fistps
aas
inc
jnp
mov
enter
mov
push
js
push
rol
or
cltd
push
fldcw
popf
in
movsb
and
sub
mov
cmp
jp
jmp
pushf
lods
inc
scas
dec
xor
push
dec
sbb
sahf
cmp
les
sub
mov
and
call
cld
jl
daa
xor
out
lret
inc
cmp
lea
shlb
sub
rorl
sti
push
or
sub
insl
in
lock
cmp
mov
pop
fdivrs
mov
rcll
ja
popf
lds
shr
lahf
fcompl
dec
and
clc
push
xor
sub
pusha
test
subl
pop
iret
xchg
nop
cld
ljmp
add
jbe
push
adc
xor
jae
dec
cmp
push
and
sub
jl
dec
push
push
push
mov
sbb
stos
lea
pop
repz
or
mov
dec
outsb
es
jmp
jp
jns
loop,pn
into
mov
fildll
dec
decl
fisttps
push
add
inc
push
jbe
jno
mov
mov
jle
sub
insb
jl
repnz
cmp
loop
data16
lods
movsl
mov
cld
pop
or
cltd
divb
shlb
sub
in
outsl
stos
inc
imul
sahf
icebp
xor
sub
mov
in
push
aad
add
in
pop
sbb
ja
in
lahf
xor
call
mov
pop
xchg
mov
sub
jge
sbb
pop
xor
testb
mov
loop
ljmp
and
daa
es
inc
dec
add
jbe
xchg
sbb
jne
sbb
mov
dec
cld
jno
fsts
rolb
push
in
ljmp
mov
int
mov
ds
fisubrl
inc
gs
fwait
inc
cmpsb
xchg
jnp
repnz
lret
imul
mov
daa
mov
pop
dec
popf
pop
lea
fldenv
mov
shll
outsb
mov
mov
insb
mov
stos
jl
shr
pusha
ret
adc
je
jb
sub
lods
arpl
in
mov
mov
add
jno
scas
in
je
or
out
mov
xchg
fbstp
hlt
push
pop
xlat
fdivrl
pop
mov
in
call
or
ficomps
fimuls
jmp
xor
mov
test
add
sahf
pop
imull
jl
add
mov
mov
ret
sub
js
pop
lea
mov
in
push
mov
mov
popa
mov
jb
dec
add
test
mov
out
xchg
cmpsl
mov
mov
ds
and
and
mov
jbe
xor
cmp
lea
inc
lods
loopew
ret
dec
test
fadds
xor
xchg
mov
jg
sub
rol
adc
push
jecxz
or
popf
sub
or
mov
loopne
aad
test
and
push
ds
repnz
adc
mov
push
xor
dec
xchg
les
push
jae
cs
jno
outsb
adc
fsubrs
jo
cld
inc
push
repnz
hlt
loopne
mov
outsl
lcall
xor
push
xchg
loope
aam
je
inc
loop
js
out
jo
mov
pop
xchg
sysexit
movsl
pop
in
mov
repnz
push
adc
ss
xchg
push
xchg
push
pop
popa
call
test
and
popf
push
xchg
mov
nop
je,pn
xor
and
mov
arpl
fs
int
cmp
push
dec
les
dec
xchg
jbe
stos
popa
pusha
mov
out
fldt
repz
ret
mov
loopne
jmp
adc
xor
mov
pop
lret
fwait
xor
xor
mov
enter
pop
mov
cmp
mov
add
mov
fsubrs
pop
xor
mov
stc
cli
xchg
sbb
inc
lods
jecxz
and
lea
or
rcr
bound
call
pusha
sub
pop
sahf
popa
in
iret
push
xchg
pop
mov
mov
pop
sub
aad
jns
out
scas
shrb
shrb
or
add
xchg
sub
stos
lahf
dec
dec
inc
orl
daa
jo
pop
xor
cmp
aad
xchg
xchg
jl
sbb
outsb
mov
ret
and
out
shll
mov
sbb
dec
data16
outsl
nop
pop
mov
sub
add
sub
pushl
pop
sbb
jnp
pop
push
mov
and
lea
push
dec
xor
fbstp
xor
and
dec
mov
addb
inc
jmp
dec
stc
sbb
and
imul
or
into
mov
loop
cmpsb
iret
dec
sub
mov
cmp
mov
jne
add
stc
dec
add
mov
das
xor
js
adc
scas
loop
inc
mov
mov
dec
inc
xor
or
lcall
push
subl
xor
adc
je
fimull
jl
fwait
xor
xor
cmp
sub
nop
jae
add
bnd
in
xor
outsb
inc
push
out
aad
dec
cmpsb
loope
pop
std
mov
adcl
lods
rcll
repnz
test
xchg
jg
hlt
mov
jnp
cmpsb
and
push
sbb
aad
xchg
mov
jmp
les
ret
inc
push
enter
mov
cltd
scas
faddl
insb
es
cmp
push
or
ror
enter
lock
dec
cmp
xchg
ret
xchg
mov
aam
lea
lock
rclb
add
cli
loop
and
inc
mov
pop
jg
fimull
xor
push
mov
sbb
and
mov
fdivrs
push
mov
lea
or
pop
popa
or
or
mov
loop
mov
inc
cmp
adc
dec
arpl
popa
lea
pop
push
mov
aam
jge
shrb
lods
push
ja
mov
mov
jp
and
cmp
js
inc
das
jle
or
rcrb
addr16
lods
enter
xlat
push
je
jg
mov
arpl
cld
aad
sar
pushf
cmp
sub
and
testl
and
pop
jnp
mov
push
subl
dec
cmp
mov
xor
xchg
int
clc
xlat
icebp
repz
fisubrl
stc
lea
pop
xor
xchg
mov
test
xchg
cltd
in
cmc
mov
and
imul
fldenv
jmp
cmc
mov
and
imul
fldenv
jmp
jne
lds
xor
sbb
jne
inc
sub
movsl
leave
mov
test
xchg
cltd
in
cmc
cmp
sub
cmpsb
and
imul
mov
push
fs
je
leave
cli
data16
ds
les
jle
dec
cmc
pop
test
xchg
jle
push
mov
inc
out
push
fs
je
add
adc
and
xor
les
jle
dec
hlt
pop
inc
cs
movsb
push
mov
inc
out
push
fs
je
add
adc
and
xor
les
and
jl
pop
shrl
push
sbb
xor
int
lahf
jg
int3
jge
jb
sub
xor
out
test
mov
sti
push
adc
fiaddl
push
push
sbb
pop
jnp
xchg
mov
push
cmp
adc
pop
sub
add
scas
mov
les
xor
aam
jmp
pop
inc
adc
iret
je
and
xor
dec
pop
push
imul
sahf
mov
daa
lock
test
mov
pop
scas
adc
cmpsl
jno
enter
jg
mov
insl
xlat
out
jnp
lgs
imul
gs
test
xchg
and
sbb
pop
aam
sbb
loope
xor
mov
push
fs
je
add
adc
and
xor
les
jle
dec
hlt
pop
test
xchg
movsb
push
mov
add
mov
incl
ss
les
mov
in
mov
test
inc
mov
jnp
scas
xor
lret
push
nop
pop
loope
sahf
mov
sbb
xor
jnp
jo
mov
sbb
and
xor
les
jle
dec
hlt
pop
test
xchg
movsb
push
mov
inc
out
push
fs
je
add
adc
and
xor
les
jle
dec
hlt
pop
test
xchg
movsb
push
mov
inc
out
jno
stc
cmp
psubd
test
fld
loopne
ja
mov
add
in
je
mov
mov
jno
movsb
into
sahf
sbb
xchg
jecxz
sbb
es
pop
mov
xchg
cs
inc
push
xor
icebp
xchg
mov
outsb
jmp
subb
insb
push
hlt
jae
mov
int
nop
jmp
cs
mov
mov
lret
mov
dec
std
and
out
jno
mov
pop
out
jle
inc
rclb
shrb
jbe
sub
push
and
push
call
sub
enter
pushf
push
in
cli
sub
mov
loope
lds
aam
movsl
mov
and
fisubrl
mov
or
out
jbe
sub
adc
aad
jno
adc
and
jmp
das
inc
movsl
sub
stos
push
push
roll
jb
jecxz
out
jg
ret
and
inc
jne
xor
push
cs
lret
lods
mov
cmpsb
lds
sahf
pop
or
lds
shlb
lods
xchg
add
cmpl
sub
mov
adc
enter
sbb
push
scas
negb
aaa
lea
dec
cmc
rcr
or
imul
pop
push
push
add
adc
lcall
mov
aam
aaa
mov
cmp
shlb
jnp
or
sub
xor
push
test
jbe
stc
aas
lods
in
mov
pop
clc
dec
lock
push
and
and
test
ljmp
shll
pushf
dec
jae
aad
imul
push
fdivs
mov
in
fisubl
adc
dec
movsb
pop
idivl
xchg
lahf
icebp
addb
lahf
std
and
lock
jns
or
push
mov
adc
mov
mov
or
and
dec
cmpsb
test
sbbb
stos
out
lock
jne
test
xchg
movsl
int
loope
ljmp
int
in
push
sbb
es
cwtl
incl
push
mov
out
pop
pop
push
mov
jno
icebp
add
xchg
test
cmp
inc
or
mov
dec
and
insl
dec
mov
aas
jo
cs
mov
cmc
loope
shll
jg
cld
xor
and
into
shl
sub
insl
lock
mov
mov
faddl
sti
push
ret
dec
lahf
test
or
mov
mov
pusha
push
mov
xchg
dec
jecxz
rclb
stos
cmp
out
mov
outsl
xchg
subl
dec
jecxz
sub
test
aam
sti
or
adcb
rol
into
jbe
pop
adc
jo
adc
xchg
subb
push
movb
add
cmc
and
out
sbb
rcl
lods
insl
xchg
cli
mov
jl
adc
es
out
mov
jecxz
add
push
and
loopne
dec
sub
push
out
std
lods
mov
pop
adc
pusha
bnd
jne
push
cwtl
jae
mov
adcl
sbbl
sahf
sbb
sbb
add
xlat
push
inc
out
dec
jecxz
xchg
inc
arpl
mov
jg
sti
mov
insl
xor
mov
insl
outsb
jno
xchg
sbbl
or
inc
aam
test
dec
sub
movsb
jnp
dec
dec
sbb
push
mov
xchg
xor
xchg
jge
xchg
cmp
or
sbb
andl
divb
test
adc
or
xchg
or
loopne
and
jmp
es
xor
clc
xchg
cmpsl
pop
aas
hlt
push
hlt
icebp
sbb
pop
int
adc
mov
sbb
dec
sub
ss
sub
sub
mov
push
mov
adc
aad
into
jnp
clc
shlb
xchg
mov
adc
push
popa
ret
notl
pop
push
testl
loope
jno
cmc
fidivrl
mov
or
movsbl
and
cltd
cmc
xchg
xchg
es
lea
adc
dec
inc
shrl
xor
adc
mov
les
cmpsb
dec
mov
out
test
test
xchg
scas
xor
jnp
mov
mov
ret
lea
and
xor
cmpsb
iret
xor
adc
dec
shlb
mov
push
subb
or
dec
cmp
mov
enter
sub
addl
adc
sub
sbb
jns
js
aam
gs
aad
mov
aam
jecxz
jae
jne
xlat
daa
jmp
xlat
mov
cmp
pop
cmp
cmp
clc
icebp
lret
movsb
imul
ss
or
push
pushf
cmpsl
test
roll
jo
sub
out
push
inc
outsb
jle
shrl
lahf
imul
push
dec
sub
inc
fisubl
popa
and
and
adc
jmp
mov
leave
push
lcall
inc
mov
icebp
fs
inc
adc
pop
adcb
lret
dec
xlat
lcall
sbb
xor
das
sbb
imul
push
outsb
pushf
rclb
add
out
or
arpl
pusha
or
out
sbb
add
and
movsb
ds
sub
imulb
lea
add
sub
mov
scas
jge
mov
arpl
mov
loope
jl
scas
push
mov
addl
test
add
fs
aad
jne
mov
aad
and
pushl
lea
imul
stos
mov
shl
daa
dec
mov
mov
test
mov
or
fsubrl
and
sub
and
xchg
dec
or
ret
enter
in
bnd
aam
cmp
sub
add
sub
adc
or
mov
pop
iret
dec
xor
out
dec
js
ret
mov
mov
in
jo
sti
mov
scas
adc
cmpsl
int
icebp
lcall
cmp
jl
inc
pop
cmp
jge
repnz
bound
cmpsb
mov
mov
sbb
lret
push
cmpl
xor
xchg
xchg
loopne
push
int3
push
iret
mov
mov
rclb
push
dec
test
pop
loope
sub
cmpsl
or
push
mov
xor
mov
sbb
in
fstpt
push
clc
jp
nop
sbb
pop
out
cwtl
jl
or
add
jle
cmp
aad
push
mov
push
jecxz
in
lock
adc
cmp
pop
fbstp
and
cmp
fwait
je
mov
sbb
xor
inc
cmp
fisubrl
in
jl
push
push
es
sti
mov
pop
loopne
sarl
jns
cmp
ret
cld
mov
mov
out
add
ja
push
imul
js
imul
and
js
rcrl
cs
jbe
mov
xor
shll
in
xchg
mov
addl
imul
inc
cmp
int
adc
inc
in
jns
add
mov
aas
jne
shll
push
jg
sub
outsb
pushf
fnstenv
scas
sbb
pop
or
push
xor
ror
jns
pop
adc
stc
mov
pop
rcrl
test
shlb
sbb
add
mov
aas
add
sbb
sbb
jp
jbe
inc
imul
mov
xor
scas
push
aam
sti
sbb
aaa
sbb
inc
insb
test
call
sbb
std
pop
mov
push
cmpsl
shlb
fs
sub
stos
mov
pushf
sahf
or
inc
adc
mov
push
test
addr16
jnp
xchg
ret
sbb
test
xchg
sbb
test
push
and
test
arpl
xchg
sbb
cld
insb
sbb
insl
inc
sti
pushf
inc
xchg
push
cwtl
jle
inc
pop
xchg
sub
lahf
pop
shrl
negb
push
iret
mov
jo
pop
push
add
jb
xchg
in
popa
push
lret
fistpl
pop
xchg
jg
outsl
xchg
or
icebp
jecxz
push
mov
sbb
arpl
jecxz
mov
dec
decl
fs
push
in
push
push
out
rol
sub
xchg
aad
inc
jecxz
adc
add
sbb
pop
dec
pop
pusha
jge
pop
jecxz
ss
jne
in
out
insb
aas
fs
scas
or
insl
cltd
fisubrl
xchg
or
insl
int3
dec
inc
in
mov
xchg
sub
cld
adc
xchg
jnp
pop
mov
test
scas
push
dec
pop
in
pop
std
mov
lds
clc
and
push
cmc
mov
adcl
aam
sarl
repz
sub
outsb
dec
sti
into
mov
test
push
xchg
add
into
sub
shll
fcoms
cld
scas
shr
pop
pop
sub
sub
xchg
cmp
dec
out
cmp
cmp
fbstp
mov
mov
out
mov
repnz
loop
xchg
rcll
cwtl
imull
adc
mov
icebp
xlat
xchg
mov
cmpsb
add
add
lret
jl
pop
xor
in
bswap
pusha
or
shrl
fidivrl
out
mov
rclb
push
jmp
push
sbb
dec
xlat
ljmp
mov
jge
not
int3
add
inc
repz
cmp
mov
cmp
mov
mov
es
lods
push
testl
push
in
divb
outsb
shll
decb
dec
clc
xor
mov
cmpsl
lahf
loopne
mov
inc
sbb
es
mov
mov
push
mov
push
adc
in
scas
inc
fdivs
test
mov
sub
ret
sub
pop
mov
mov
pop
or
dec
push
in
or
lret
inc
xchg
push
inc
xchg
jnp
data16
notl
dec
fs
mov
sbb
cs
rcrl
sub
fisttps
dec
xchg
pop
push
mov
push
ret
push
xor
mov
sbb
out
mov
subl
fs
ljmp
sbb
jb
pop
or
fistps
loopne
mov
testl
jne
inc
pop
out
jno
jbe
inc
cmpsl
pop
push
and
dec
data16
cld
jle
and
add
pop
aam
bound
les
cmp
inc
mov
fs
int
jge
stc
test
dec
xchg
add
sti
shll
push
jns
movb
inc
scas
int3
fdivrs
mov
inc
pop
fsubl
mov
pop
lea
jo
loopne
inc
pop
mov
fsin
xchg
fiaddl
mov
mov
lods
cmp
sahf
mov
mull
rcr
sub
push
push
out
jl
mov
movsl
aas
jb
mov
cmp
xchg
fimuls
dec
cmp
xchg
pushf
jae
dec
or
xor
insl
pop
pop
inc
mov
jg
push
sahf
lods
ret
adc
stc
daa
pop
cmpsb
cltd
xchg
jg
dec
outsl
int3
or
roll
clc
nop
and
ss
enter
flds
pushf
ljmp
lods
cli
pop
jne
pushf
mov
xlat
inc
mov
lea
lods
mov
adc
dec
and
pusha
test
inc
push
cmp
jns
js
bound
ljmp
dec
scas
out
push
nop
repz
push
dec
out
in
adc
xor
pop
sahf
sti
lret
and
inc
pop
or
push
inc
cmp
pop
data16
fucomi
sbb
adc
sbb
popa
test
mov
ds
nop
imul
gs
data16
testl
pop
add
sub
stos
lcall
sbb
bound
repnz
add
movl
mov
adc
inc
outsb
ror
cmp
sbb
or
cmp
mov
mov
insb
loope
repz
cmp
insb
push
outsl
dec
xlat
push
pushf
adc
dec
push
std
xorb
lahf
sbb
or
gs
xlat
push
pop
push
mov
pop
lods
sub
imulb
sahf
xor
dec
jle
pop
adc
stc
hlt
sub
and
les
test
and
mov
dec
xor
mov
lahf
cmc
inc
lret
jecxz
dec
fildll
call
out
adc
sbb
fdivrp
pop
mov
nop
cmp
dec
pushf
inc
mov
out
push
sbb
fisubl
ss
add
je
adc
add
cs
and
sbb
fs
mov
mov
lret
jp
jecxz
mov
test
int3
xor
mov
out
int3
nop
shlb
push
adc
pushl
ljmp
scas
add
roll
fincstp
cs
repz
int3
lcall
ljmp
arpl
ret
sbb
loop
xor
inc
test
call
lods
or
repnz
lcall
out
cld
push
icebp
adc
popa
mov
xor
dec
xchg
stos
mov
repz
dec
outsl
cld
ret
sahf
xchg
pop
inc
xor
inc
test
out
rcrb
call
ret
rcrl
inc
int
lods
int3
cltd
or
push
pop
popf
sbb
jno
add
imul
popf
loope
out
not
xor
jl
pop
pop
mov
push
lea
out
inc
and
rcrl
jb
inc
mov
push
cmp
jecxz
fidivrs
cld
inc
das
fwait
pop
mov
xor
dec
icebp
lods
sbb
mov
xor
jnp
icebp
fs
lret
test
imull
ret
xor
mov
jns
dec
adc
aas
int
mov
movntq
add
add
or
dec
stos
repnz
xchg
ror
jo
push
mov
pop
sahf
inc
mov
sub
cmp
aaa
push
jecxz
sub
out
lock
fs
gs
shrb
aam
and
push
xor
or
clc
nop
adc
fs
outsb
or
mov
in
aam
movsb
and
repz
inc
nop
pop
xor
push
jge
jecxz
shrl
inc
das
xchg
mov
push
mov
test
and
mov
insl
xor
sti
or
dec
fisubrl
aas
mov
jle
mov
frstor
int
repz
mov
sub
mov
mov
shrl
insb
mov
xchg
mov
add
jge
pop
movsl
mov
test
dec
push
into
loop
movsl
ja
rorb
movsb
cmc
lock
les
in
pop
xor
daa
loope
inc
cld
das
pop
sahf
mov
shlb
stc
out
popf
test
push
ss
and
aaa
push
mov
xchg
fldt
mov
lods
xchg
mov
in
pop
jecxz
outsb
fcmovnbe
mov
push
int
cmc
sbb
rolb
aaa
fnstenv
insl
fisttps
sbb
ds
xchg
jle
pop
icebp
cmp
ret
adc
inc
sub
mov
out
push
movsb
cmp
push
in
aas
je
mov
sbb
dec
adc
mov
mov
in
fstl
in
sar
nop
nop
fadds
and
sar
cltd
inc
push
pop
in
xchg
jb
xlat
pop
cmp
cmp
fildl
inc
mov
je
lcall
sbb
in
aad
lods
repz
nop
stos
jge
fstps
jo
cmp
jp
add
xchg
sti
mov
cli
sahf
imul
push
inc
pop
cld
loopne
ret
sub
iret
pushf
or
xor
jg
ret
fmull
test
xorb
push
push
loope
out
iret
xor
das
jecxz
imul
test
add
xor
leave
and
xchg
jmp
jp
xchg
and
xorb
pop
mov
inc
lret
pop
dec
mov
sub
clc
popa
gs
xchg
mov
out
cli
lds
mov
pop
iret
lock
mov
or
xchg
in
adc
push
pop
fsubr
ret
sbb
leave
jnp
xchg
loopne
cmp
div
push
inc
notl
xor
pop
push
ds
lret
add
pop
dec
add
or
into
data16
hlt
int
sbb
in
hlt
repz
out
paddusb
fdivl
ja
or
pop
mov
push
sbb
test
dec
cltd
lret
add
sahf
add
arpl
sub
fstl
in
out
jmp
sbb
jl
mov
mov
mov
dec
scas
fldcw
jl
in
in
pop
pop
sub
sbb
repnz
enter
js
sahf
cwtl
roll
cmp
push
pop
and
jmp
mov
lea
jns
sar
daa
mov
iret
enter
insb
es
pop
imul
mov
push
sub
popf
jmp
push
or
mov
in
sub
lcall
xchg
imull
cwtl
push
inc
dec
inc
mov
filds
or
lea
sbb
cmp
daa
in
aam
or
inc
mov
xor
pop
sbb
jnp
jg
jno
es
mov
xor
cmc
shrl
inc
mov
sbb
mov
pop
mov
push
sbbb
push
push
lret
push
fdivrs
fidivs
rcr
out
movsl
shll
inc
push
cmp
push
and
ljmp
pop
dec
out
scas
jns
pop
fs
fwait
xchg
adc
imul
push
mov
leave
scas
movsb
jecxz
mov
jle
loope
cmp
or
pop
rcr
jg
xor
lret
push
xor
mov
push
inc
lods
push
fists
aad
push
repz
jmp
scas
test
fistpll
mov
mov
and
pop
or
shrb
repz
add
jmp
sub
jg
push
sarb
xchg
xchg
jns
repz
sub
std
xchg
dec
jae
cmp
xchg
leave
idivb
cmp
in
xor
ret
ret
push
adc
popl
xor
arpl
flds
push
lods
or
fidivrl
push
ja
mov
dec
mov
jns
sbb
push
mov
dec
in
clc
ljmp
pusha
outsl
mov
rcll
das
mov
fcmovne
or
push
push
testb
mov
sbb
in
aas
adc
outsl
or
loopne
cwtl
and
fwait
xor
push
sbb
test
shlb
fbstp
dec
jmp
mov
xchg
mov
cltd
and
jle
orl
and
fwait
les
iret
aad
and
and
mov
cmp
sbb
jp
loope
stos
sub
add
xchg
dec
mov
cmp
dec
flds
inc
mov
push
pop
or
jp
mov
pop
xchg
inc
xor
test
fimull
lock
mov
adc
adc
test
jg
adc
cltd
in
js
mov
add
sub
adc
mov
dec
push
push
adc
xor
or
mov
enter
mov
xlat
xchg
xor
xchg
sti
add
dec
lret
mov
mov
in
adc
ds
jmp
test
mov
leave
or
jnp
cmp
icebp
inc
dec
clc
hlt
push
pop
xchg
scas
fldl
add
sbb
cmp
push
push
out
sub
add
cmpxchg8b
fsubl
out
nop
rcll
fsubrs
shlb
pop
push
dec
and
push
fs
add
push
mov
enter
push
xchg
loop
xor
fisubrs
jo
test
inc
add
mov
bound
rcrl
aas
cmpsl
fs
push
ljmp
mov
std
imul
cmp
add
pop
xor
sahf
cmp
pop
adc
pop
dec
loope
fldcw
fidivl
jns
push
fdivl
leave
shl
aam
jb
adc
pop
shl
call
pop
push
jp
mov
les
loopne
push
push
test
push
mov
and
pop
out
jmp
mov
xchg
call
xor
sti
mov
lahf
addr16
fimull
std
jne
cs
pop
xchg
inc
add
adc
inc
leave
cltd
cmp
adc
xchg
lahf
das
adc
jae
sbbl
add
mov
cltd
or
insl
iret
orl
cmc
inc
or
mov
lds
or
je
ret
or
loopne
pop
je
ss
pop
sbb
pushf
test
dec
xchg
and
aas
cwtl
jne
pop
xchg
clc
stos
cmp
shlb
mov
sub
push
test
mov
scas
fwait
push
xor
push
mov
out
mov
mov
outsb
and
sub
not
push
shlb
sbb
xchg
outsl
push
cmpsb
pusha
mov
rcrb
fdivrs
sbb
mov
adc
push
jns
mov
mov
std
shl
xor
mov
mov
push
lock
jmp
xor
ljmp
and
mov
cli
jl
into
cld
test
ret
sbb
jecxz
adc
mov
mov
xchg
repnz
ljmp
xor
stc
dec
inc
js
dec
xchg
jg
cltd
adc
sti
aaa
mov
push
sub
push
cs
das
pusha
mov
sbb
gs
je
add
adc
and
xor
les
jle
dec
hlt
pop
test
xchg
movsb
push
mov
inc
out
push
fs
je
add
adc
and
xor
les
jle
dec
hlt
pop
test
xchg
movsb
push
mov
inc
ljmp
test
mov
les
jg
dec
hlt
pop
test
xchg
movsb
push
mov
inc
out
push
fs
je
add
adc
and
xor
les
hlt
sub
cmpsb
in
aam
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
xchg
push
movsl
cs
jno
mov
jle
mov
mov
jne
jne
test
xchg
push
movsl
cs
lds
shl
outsb
cmc
or
scas
cmp
gs
jne
pushf
pushf
mov
mov
jb
std
xor
sbb
ss
jp
dec
int
cltd
cmp
in
push
cli
jo
pop
ret
imul
xor
lods
insb
insl
decb
push
push
mov
test
fnsave
out
dec
aad
pusha
cs
cmp
stos
cmp
fld
lret
scas
adc
out
mov
punpckhwd
push
xor
adc
sbb
xor
sbb
out
test
out
test
test
insb
ds
xchg
dec
aam
sbb
adc
adc
push
and
push
jne
aad
sbb
sub
mov
test
add
mov
lds
lcall
mov
cmp
xlat
fstl
cs
cmp
cwtl
negb
cmpsb
add
push
and
jne
dec
push
mov
movsl
stos
mov
rorb
pop
in
in
sbb
or
negb
dec
es
jne
jmp
insl
rcll
cmp
sbb
ficoml
inc
mov
sbb
lret
sbb
add
enter
flds
ds
adc
stc
pop
leave
jle
pop
lea
aad
in
cmc
jle
mov
mov
gs
jne
test
xchg
push
movsl
cs
lds
pop
in
cmc
jle
mov
mov
gs
jne
test
mov
adc
xor
xor
leave
enter
lods
add
sub
psubb
push
or
mull
scas
int
sbb
add
xchg
and
pop
push
insl
and
jns
push
negl
jge
dec
or
xlat
lret
leave
mov
movsl
outsb
mov
jbe
push
rorb
fdivl
orl
fdiv
nop
dec
cld
sub
add
lods
shrl
rorl
fldl
mov
shrl
mov
jg
ja
adc
movl
int3
inc
push
jbe
cmpb
push
fs
dec
in
push
gs
out
xor
fwait
sub
popf
ss
repz
enter
leave
or
std
negl
scas
push
push
das
mull
cmpsb
and
adcb
jno
out
push
sahf
dec
loope
imull
inc
icebp
das
mov
sahf
add
push
dec
inc
sbbl
rorb
std
cmc
xor
fcomps
stos
xor
dec
out
jns
lcall
mov
mov
lret
lea
push
add
call
sub
dec
pop
movl
ret
sarb
jo
pop
int3
add
dec
mov
sub
xor
insb
pop
adcl
adc
jbe
cmp
mov
and
fs
shlb
mov
push
dec
push
inc
inc
dec
je
mov
call
das
add
mov
jne
out
aam
push
inc
imulb
idivl
mov
mov
dec
add
out
pop
xchg
outsl
movsl
adc
cmp
popf
ret
ret
in
stos
subb
push
pop
scas
adc
adc
pop
pop
in
push
das
mov
mov
mov
pop
test
pop
sbb
pop
sbb
inc
rolb
es
xlat
sti
or
lret
inc
cmp
lcall
fldcw
lds
outsl
out
movsb
punpcklwd
and
jmp
jae
hlt
jnp
jnp
adc
pop
xor
add
shll
jbe
pop
popa
add
sbbb
in
decb
mov
test
int3
arpl
fwait
jb
mov
shrl
push
adc
xchg
pop
sbb
sarl
repz
outsb
jo
mov
inc
xor
rcrb
ret
push
enter
add
sub
lods
pop
or
jmp
or
dec
add
push
pop
sub
aam
and
pop
jmp
popf
iret
stos
cs
push
movsl
ljmp
jns
sub
bound
xor
jnp
fcoms
mov
lret
mov
mov
pusha
and
and
popf
loop
mov
add
movsl
inc
lods
cmp
imul
ljmp
lods
dec
data16
out
or
mov
cmp
addr16
adc
gs
jecxz
cmc
std
ret
jle
jae
fsqrt
aad
fcomp
idiv
jbe
cld
sbb
gs
cmc
sbb
loop
js
push
cld
imul
dec
notl
mov
test
or
lods
jbe
jne
pop
xlat
and
or
int
mov
shrb
adc
mov
sbb
subl
push
push
or
mov
mov
mov
xor
shll
fdivs
outsb
or
pushf
jmp
das
je
jb
out
add
test
sbb
push
in
cld
push
sbb
cltd
push
stos
dec
inc
or
or
inc
ret
daa
sbb
pop
cld
xor
inc
dec
xchg
dec
dec
adc
inc
push
and
jne
cmp
enter
push
adc
cmp
std
push
push
sahf
ret
loop
in
icebp
out
ljmp
xchg
les
mov
or
and
sub
icebp
pop
pop
cli
jle
testl
ud1
mov
sbb
loopne
lock
pop
mov
cwtl
fstpt
xor
sub
sbb
add
or
mov
enter
push
mov
or
inc
lock
rcrb
fwait
or
add
mov
mov
xorb
cltd
mov
lret
jmp
jmp
push
mov
jle
pop
insl
sub
call
mov
dec
jmp
jnp
divb
sub
cmpsl
sub
ficompl
gs
std
fimull
ss
mov
mov
lods
jbe
push
mov
adc
xor
test
in
test
mov
xchg
inc
cmpsl
arpl
xchg
js
repnz
push
stc
es
cltd
insl
adc
test
std
or
or
or
pop
pop
mov
shlb
xor
push
xchg
addb
aas
call
adc
mov
or
jmp
sbb
lock
jg
cmp
out
sti
xchg
fdivr
push
xchg
inc
and
mov
add
jg
mov
stos
xchg
sahf
out
test
fistpll
xchg
jmp
dec
mov
mov
test
xchg
lods
ss
flds
sub
dec
je
repnz
rcrb
cmp
xlat
pop
lahf
ficoml
shlb
sbb
mov
sahf
mov
pop
mov
insb
add
xor
push
mov
dec
jle
jne
pop
orl
xor
lds
imul
popf
aam
enter
dec
dec
add
dec
test
mov
adc
lret
out
test
sarb
out
pop
fiaddl
fucomip
mov
xor
push
popf
adc
ret
sub
ficoml
sbb
jno
add
pop
into
xor
pop
mov
cwtl
pop
and
sub
sbb
dec
adc
mov
cmp
mov
fs
aas
js
adc
dec
mov
sbb
dec
aad
aad
cmpl
add
loope
pusha
icebp
ret
shlb
mov
lret
aaa
insl
jne
sub
pop
mov
pop
add
pusha
pop
and
sub
cwtl
test
jne
xorb
test
bound
dec
push
sbb
push
dec
push
push
or
je
fimull
jmp
xor
inc
icebp
subl
cwtl
fsts
mov
xchg
lea
xchg
stc
jmp
leave
inc
clc
ret
ljmp
adc
dec
insl
jne
inc
xchg
mov
fimuls
sub
in
adc
scas
mov
enter
loope
pop
mov
add
sub
mov
push
or
insb
push
lahf
std
addr16
loopne
cmp
cmp
imul
aam
lahf
pop
lods
sub
rcr
inc
mov
push
xor
inc
sti
mov
sbb
cmc
dec
sub
xchg
psubusb
mov
mov
add
pop
pop
in
mov
jl
pop
mov
sub
addr16
clc
jno
pop
pop
gs
lea
loope
scas
sub
dec
ret
push
pop
cmp
dec
stos
outsb
lock
pop
xor
xchg
sbb
push
mov
jl
mov
and
dec
lahf
ret
sub
push
das
cmp
jo
pop
mov
or
inc
add
lock
aas
cmp
jo
inc
iret
subl
lods
imul
je
mov
xor
mov
pop
xchg
xchg
inc
fcmovbe
inc
and
sti
xchg
jbe
imulb
push
sub
xlat
jb
pop
or
pop
xor
and
lods
out
insb
pop
lods
xor
sahf
rolb
jno
push
push
lret
loope
mov
mov
arpl
adc
push
fs
mov
adc
jae
adc
or
dec
jp
shll
ror
fwait
arpl
stos
cmp
sub
xor
push
adc
cmpsb
outsb
sbb
int3
jne
mov
dec
or
xchg
addl
sbb
mov
mov
pushl
in
lcall
imul
rclb
out
xchg
adc
fstpt
cld
or
jge
and
cmp
mov
mov
add
cmp
adc
es
popa
mov
test
pop
add
pusha
mov
jmp
pusha
jge
sbb
mov
cs
inc
or
cmp
rcrb
imul
cli
jns
stc
sbb
xor
mov
jae
cltd
fists
xchg
xor
push
pop
mov
and
add
or
xchg
inc
es
out
sub
sahf
ds
loope
jae
push
mov
push
mov
sub
mov
loopne
movsl
xchg
inc
add
inc
inc
test
fnstcw
jl
jle
xor
mov
aaa
xor
popf
sbb
fstps
cmc
int3
sti
pop
dec
lds
xor
sub
sbb
sbb
popa
leave
xlat
mov
and
lahf
in
imul
mov
mov
lea
lds
cmpsb
dec
push
enter
pop
fimull
mov
pop
or
rcrb
xchg
mov
shl
mov
fildll
mov
jle
pop
lods
loope
or
das
stos
or
orl
stos
push
in
bound
addr16
push
cli
daa
jo
aas
rcrb
mov
inc
out
lods
and
mov
fwait
aad
cmp
aad
mov
aas
and
bound
and
pop
std
or
adc
push
pop
push
mov
insb
shll
sahf
sahf
jmp
insl
aaa
scas
pop
sub
ljmp
inc
in
jecxz
sbb
lea
in
mov
add
mov
mov
pop
je
mov
fiaddl
sub
and
xchg
jbe
pop
cwtl
aam
and
mov
push
or
cli
test
mov
cltd
out
es
add
jmp
outsb
inc
sub
inc
insb
mov
mov
mov
mov
iret
jecxz
rol
dec
outsl
int
sarb
add
mov
iret
pushl
aaa
jb
data16
dec
add
push
aam
mov
mov
leave
pop
push
roll
jl
lea
jge
cmp
aaa
adc
sbb
dec
stos
lds
jl
into
mov
mov
inc
decl
mov
mov
mov
jmp
mov
aaa
jns
or
lock
cwtl
add
lret
shrb
leave
mov
movsb
outsl
mov
xor
adc
sbb
push
fdivl
cs
and
cmp
xchg
loopne
fs
sbb
insb
xchg
push
arpl
jae
shlb
test
imul
xchg
pop
xchg
dec
insb
das
loopne
inc
sarl
push
xor
mov
pop
frstor
push
adc
xor
test
xchg
jmp
mov
sbbl
adc
jl
fstl
lret
and
mov
cmp
and
int
out
and
xchg
xor
and
mov
sbb
int
cltd
pop
cwtl
cmp
mov
push
mov
jo
mov
and
sbb
or
mov
and
pop
xor
lods
xchg
inc
adc
sub
mov
fisttpll
push
jns
dec
fsts
iret
je
insl
jmp
fidivrl
sbb
push
outsb
jns
shll
pop
cmp
fistps
xchg
sub
loopne
lret
mov
leave
mov
sti
stos
pop
xlat
fimull
out
loopne
in
mov
out
test
push
xor
aaa
push
fmull
adc
dec
push
scas
mov
mov
dec
adc
inc
out
pop
out
mov
inc
outsl
andl
xchg
nop
adc
mov
xor
pop
pop
mov
int3
pop
sub
icebp
je
pop
sub
mov
test
adc
dec
mov
out
mov
mov
jns
mov
nop
cmc
mov
inc
mov
mov
in
mov
test
and
mov
cmp
push
jnp
icebp
leave
jns
aas
jmp
mov
int
pop
pop
sbb
xor
mov
or
scas
pop
and
subb
xor
mov
mov
test
rcrl
rol
stos
leave
pushf
inc
sahf
cltd
add
mov
int
loop
pop
in
pop
dec
jmp
vpmacsswd
cwtl
pushf
ljmp
sti
fstpt
xchg
pushf
das
cmpsb
cmp
in
cmp
ss
cwtl
or
cmp
fadds
lock
sar
popa
add
shlb
cmp
add
ss
jge
mov
inc
or
stos
lret
add
lock
inc
mov
adc
xlat
and
cs
or
int
dec
shll
imul
sbb
push
test
mov
addl
ret
sub
pop
xchg
jae
out
scas
cmp
push
in
das
iret
test
jno,pn
stc
add
inc
fisubrs
dec
outsl
push
sub
jg
push
or
pop
nop
rol
mov
mov
fwait
cmp
mov
in
aad
imul
sbb
and
lods
repnz
push
notl
aad
or
les
sti
and
sbb
or
mov
cmp
inc
jno
loopne
ss
and
mov
push
call
pop
jg
lret
pop
repz
repnz
popf
les
fisubs
mov
xchg
dec
push
xor
icebp
mov
hlt
scas
mov
fcoml
sti
dec
popa
inc
scas
fcomps
fucomp
test
jbe
into
and
add
movsl
push
mov
mov
jg
popa
out
or
jns
lea
lea
pop
dec
push
ljmp
nopl
iret
xchg
dec
shlb
lret
sbb
or
call
stos
pop
pop
sbb
mov
xor
fwait
xor
pop
pop
adc
mov
mov
push
es
cmc
and
arpl
xchg
mov
outsl
pop
lods
add
adc
sbb
andl
lret
addl
mov
jb
mov
mov
xchg
push
dec
cs
ja
or
mov
jmp
ds
jno
jnp
pushf
push
lods
inc
jne
lret
scas
cmp
mov
dec
push
pushf
andb
enter
sahf
loopne
lock
hlt
div
aaa
jo
aaa
aam
mov
lcall
mov
add
rcll
jbe
add
arpl
dec
pop
inc
cs
mov
push
icebp
jp
mov
filds
mov
stos
mov
and
popf
cwtl
push
into
jno
dec
jg
cmp
xor
xchg
in
xor
in
mov
jnp
clc
rcr
inc
mov
outsl
push
rep
out
push
cmp
sbb
nop
int3
add
xor
or
cmp
adc
cmc
bound
lret
add
gs
in
loope
int
mov
push
dec
decb
stos
mov
scas
mov
out
stos
shrb
cmp
fsubrl
jmp
sub
popa
lods
ret
lahf
mov
cmp
sub
in
adc
xor
jp
mulb
enter
mov
rcl
lods
punpcklwd
dec
repz
cld
clc
inc
dec
hlt
inc
popa
fs
inc
jg
arpl
adcb
jnp
push
push
bound
add
out
jecxz
test
xchg
rcll
xchg
jg
jo
inc
out
and
out
imul
xchg
pop
pushf
sahf
ljmp
ljmp
bound
mov
inc
sbb
movsb
jmp
ljmp
cmp
mov
jecxz
pop
adc
cmpsl
test
jl
and
jne
inc
push
fnstenv
in
sub
cli
push
mov
incl
cli
xor
shrb
mov
push
mov
mov
xor
push
sbb
es
inc
loope
int
dec
stos
adc
jmp
jns
into
int
adc
arpl
rorl
dec
xor
cwtl
lds
loope
inc
mov
and
cmp
push
clc
xchg
sahf
push
mov
and
repnz
dec
pusha
pop
pop
sbb
lods
mov
arpl
call
popa
mov
jge
and
push
or
mov
sub
mov
loope
imul
sub
test
push
push
push
xchg
in
jo
sbb
icebp
fldenv
mov
test
nop
popa
sbb
inc
xor
lret
mul
lods
es
stos
lds
push
dec
mov
dec
jbe
shlb
or
xor
std
loopne
dec
ffree
enter
push
sbb
sar
xor
mov
add
cwtl
mov
sbb
or
mov
mov
pop
mov
xorl
sbb
inc
popf
negl
or
push
jbe
mov
pop
sbb
stos
mov
jp
lcall
loop
xlat
sahf
fsubl
xchg
dec
jge
movsb
add
cmp
mov
in
in
ret
lock
movsb
aas
pusha
leave
cmp
aas
mov
in
cmp
leave
mov
jge
rolb
dec
dec
mov
in
pop
lods
cmc
mov
mov
mov
lods
sti
repnz
out
pop
or
cld
dec
aaa
sbb
or
sbb
sub
and
push
sbb
or
push
cmp
mov
mov
shll
rorb
xchg
pop
mov
push
popf
xor
out
outsb
insb
test
inc
mov
in
sub
aad
movsl
repz
aam
outsb
iret
add
inc
jp
sbb
adc
pusha
adc
in
sarl
fimuls
ja
lahf
out
push
mov
dec
cli
incb
add
rorb
imull
pop
rol
std
shlb
push
cwtl
or
scas
lock
adc
mov
xchg
add
jg
call
je
sbb
ja
stos
ljmp
xchg
jp
or
aaa
in
lcall
loop
sub
call
adc
jbe
adcb
sbb
pushf
pop
mov
cmc
lret
or
mov
jbe
xor
negl
idivl
ret
sbb
filds
sub
mov
push
adc
stos
das
cmp
or
mov
les
xor
out
add
sbb
imul
lea
sarl
jmp
mov
and
test
or
fcmovnu
fsubrl
jecxz
xchg
mov
lods
pusha
sbb
sub
testb
jle
aad
jp
pop
or
loop
lods
outsb
int
and
cmp
lods
push
inc
in
ds
inc
xchg
shrl
fs
lock
in
daa
divl
cmpsl
in
add
pop
ljmp
sahf
aas
pop
sub
mov
out
xchg
aas
pushf
cmp
push
cmpsb
or
jl
pushf
inc
xchg
adc
test
daa
cmp
jns
cmpsb
enter
clc
jns
jg
mov
xchg
mov
ror
fdivr
out
lods
pop
adc
movb
add
out
cli
loop
aas
pusha
jne
cltd
mov
pop
push
aas
jge
enter
and
inc
inc
adc
inc
add
push
push
lea
outsb
add
cli
adc
rol
push
outsb
xor
jno
dec
cmp
out
xchg
bound
sbb
sbb
add
sub
rcrl
ret
movsb
cld
mov
mov
adc
mov
clc
xchg
sbb
mov
xchg
int3
xchg
adc
sbb
popf
adc
movsb
xchg
fists
xor
pop
mov
jecxz
pop
cmpsl
sbb
push
push
and
adc
hlt
inc
push
mov
adc
leave
sub
and
in
mov
loop
xor
dec
jb
aaa
mov
shrl
pop
lcall
in
sar
cwtl
outsl
call
sbb
jne
xchg
sub
dec
mov
and
mov
or
xchg
lahf
rcrl
cmc
jae
xchg
in
or
add
arpl
mov
or
cltd
stos
popf
xlat
pop
lods
or
dec
leave
mov
mov
push
loop
mov
cmp
inc
stos
mov
mov
jns
stos
or
in
clc
leave
mov
mov
push
sub
dec
aad
out
fsubs
or
push
xchg
out
push
sub
aam
fsubrp
dec
mov
mov
out
mov
mov
add
cmpb
mov
test
inc
add
mov
mov
push
cs
xchg
mov
int
push
lcall
xor
gs
sbb
inc
xlat
jle
fwait
or
and
rcr
movsb
dec
dec
jge
mov
icebp
jl
popa
mov
int3
std
dec
call
and
insb
mov
mov
push
push
cmp
scas
inc
mov
lds
pop
in
cmc
jle
mov
mov
gs
jne
test
xchg
push
movsl
cs
lds
pop
in
cmc
jle
mov
mov
gs
jne
test
xchg
push
movsl
push
mov
lds
mul
outsb
cmc
jle
push
adc
mov
gs
ja
test
xchg
push
movsb
cs
dec
aad
gs
jne
cli
jno
xor
scas
xor
and
dec
mov
cmp
jle
mov
or
jo
aam
out
test
lahf
stc
mov
or
outsb
sub
push
dec
push
jns
imul
out
test
sahf
stc
scas
jmp
pop
mov
push
add
push
cs
ds
into
in
fisttps
xchg
ret
lcall
cmp
or
jge
push
stos
dec
mov
mov
and
mov
dec
pop
dec
add
repz
mov
push
cmpsb
in
mov
fidivs
adc
pop
sahf
pop
lds
fs
dec
pop
sbb
roll
rorb
into
jbe
inc
call
inc
mov
pop
ret
jno
inc
jnp
sub
mov
js
imul
xor
and
sahf
lret
jle
fistl
mov
xchg
jmp
icebp
cmp
xor
lret
inc
adc
mov
pop
or
rorb
cld
movsb
nop
mov
into
jno
mov
lahf
leave
into
mov
dec
or
outsb
inc
jle
push
or
ds
fisubs
mov
mov
scas
clc
imul
jge
inc
aas
aaa
dec
cmp
push
or
mov
enter
cmpsl
and
sbb
adc
stos
enter
lds
lret
test
imul
or
sbb
dec
push
jns
imul
mov
mov
sahf
stc
scas
jmp
pop
cmp
jle
push
dec
push
jns
imul
mov
mov
sahf
stc
scas
jmp
jbe
add
adc
jns
fcmovu
fidivrs
rcrb
pop
cmc
xchg
adc
dec
mov
mov
and
sbb
subb
ret
lea
dec
pop
xor
sbb
ss
and
push
xchg
mov
mov
mov
push
sbb
and
icebp
fdivl
jmp
add
and
pop
popa
iret
push
push
outsl
dec
jmp
roll
gs
xchg
sub
cmp
mov
sbb
add
or
rclb
fisubs
lods
repnz
jl
imulb
jnp
cmp
call
mov
inc
das
sbb
xchg
imul
clc
loopne
decb
jg
push
outsb
mov
jne
lds
or
pop
fbld
xchg
cmpsb
jg
mov
call
in
mov
sub
and
rorl
and
inc
ja
push
lcall
cwtl
outsb
rclb
bound
mov
jb
push
fcmovnbe
jns
xor
push
cwtl
inc
mov
lea
inc
cmp
imul
movsl
inc
inc
rolb
pop
cmp
inc
cmpsb
mov
xor
test
aad
push
fiaddl
sti
jno
std
sbb
int3
hlt
mov
xlat
mov
jne
call
fwait
dec
mov
fscale
inc
add
orb
cmp
inc
out
cmp
sbb
fadds
adc
ss
mov
cmp
aam
pop
adc
ss
pop
add
jno
adc
jge
mov
rcrl
rcr
ljmp
sub
xchg
loopne
dec
sub
mov
push
repnz
adc
ja
sbb
test
mov
xchg
cmp
mov
inc
in
jl
movsl
jo
imul
mov
mov
lcall
hlt
xchg
xchg
lock
cmp
int3
pop
adcl
aaa
sbb
adc
test
cwtl
insb
push
repnz
call
sti
jbe
mov
incb
js
sbb
dec
imul
imul
movsb
in
push
loop
cmp
arpl
dec
ss
mov
jl
pop
insb
iret
cmp
data16
pop
or
or
stos
cld
jns
fisttpl
daa
mov
push
sbb
xchg
inc
xor
or
cmp
test
adc
shrb
repnz
das
cmp
mov
stos
bound
pop
and
add
je
sbb
mov
inc
shl
fs
inc
push
fdiv
aam
push
shrl
sti
mov
xchg
xorb
pop
lret
inc
pop
jbe
addr16
adc
in
movsb
stc
pop
fs
pushf
fs
xchg
cmp
or
jmp
sti
or
xor
xchg
add
pop
pop
in
lods
lds
data16
lods
sub
xchg
leave
lcall
addr16
mov
cmc
fisubrl
or
in
stos
hlt
mov
aad
je
mov
xchg
cld
cmp
movl
out
scas
cltd
add
dec
fdiv
dec
roll
adc
or
cmpsb
cmp
xchg
sub
bound
mov
js
pushf
lock
lret
xchg
mov
adc
mov
add
sub
and
cmp
mov
sub
cmp
sti
xchg
int3
mov
xchg
outsl
adc
es
push
push
gs
fistpll
mov
lret
adc
mov
sub
sbb
push
xchg
arpl
sub
out
pop
xchg
cltd
dec
mov
mov
cmp
jnp
push
fadds
sub
je
jo
aam
sub
out
sbb
shlb
cmc
addl
and
jl
push
arpl
cmp
dec
stc
push
inc
stc
scas
fimull
sbb
or
das
sub
pop
cmp
out
out
pop
das
test
sahf
imulb
mov
cs
mov
stc
stos
xchg
jns
repnz
das
mov
mov
jo
push
loopne
xchg
and
nop
movsb
ss
stos
pop
sbb
sbb
adc
xchg
aad
mov
mov
mov
xchg
cltd
or
jle
cmp
daa
pop
pop
jle
mov
mov
mov
aas
popf
xchg
fildll
xchg
push
lock
xor
stc
adc
push
popa
jbe
hlt
fistl
dec
shll
lock
sbb
push
pop
movsl
cmp
cmp
or
xor
mov
and
or
cli
stos
dec
ret
xchg
add
push
idivl
dec
lret
add
cli
mov
es
cld
pop
stos
push
das
aas
mov
ds
xor
xor
mov
add
fwait
push
out
mov
repnz
cltd
shlb
ljmp
xchg
fs
out
ss
adc
movsb
iret
int
subl
mov
sub
test
pop
loop
sti
aas
jp
push
les
sbb
and
push
aad
jnp
push
push
mov
outsl
rol
ljmp
pop
cmpsb
or
xor
mov
pop
sub
push
push
xor
push
imul
mov
sbb
fldl
mov
nop
mov
pusha
test
inc
add
cmp
sub
jb
adc
pop
out
aaa
xor
loope
jne
xor
aas
ja
sub
or
dec
mov
inc
and
push
and
insl
jg
ja
and
pop
iret
inc
mov
dec
lds
fwait
lea
and
int
xchg
add
cmpsb
jo
jmp
dec
rorb
and
mov
pop
out
arpl
add
sbb
cmpb
incb
shrl
and
xor
dec
jne
pushf
cli
in
sub
sbb
cli
xor
ficompl
loopne
lcall
cwtl
lret
cmp
mov
mov
stos
adc
addb
push
cmp
xchg
push
dec
loopne
adc
pop
or
lahf
push
in
pop
xchg
imulb
js
jo
xor
push
outsl
and
ds
dec
inc
or
sbb
icebp
call
addr16
rorb
outsl
insl
out
xchg
lock
loop
pop
xchg
pusha
push
pop
sub
pushf
pop
xchg
pop
pop
fidivrs
and
mov
or
or
lcall
mov
jb
sub
mov
repz
insb
sbb
pop
sbb
cmpsl
mov
repnz
cltd
pop
fdiv
imul
scas
mov
lret
mov
pop
push
dec
cmp
insl
sbb
addl
pop
add
bound
and
inc
inc
xchg
mov
mov
sti
loopne
and
std
xchg
insl
xor
xchg
and
in
testb
inc
push
mov
inc
sbb
mov
icebp
mov
data16
ljmp
jb
orl
cmp
test
fldl
xor
mov
cmp
inc
sub
testl
mov
xor
dec
xchg
xchg
jae
shl
add
sbb
xchg
gs
shrb
scas
adc
xchg
cmp
lods
idivb
test
cmp
int
loope
loope
cmp
fcoms
sbb
and
pusha
les
aam
std
shrl
iret
dec
shl
insl
cmp
cmc
daa
shll
fucomip
insl
repnz
and
push
arpl
jbe
push
test
push
xor
mov
icebp
popa
cmp
ret
sbb
adc
in
les
in
fistl
inc
inc
push
or
sub
iret
scas
rol
out
xchg
cwtl
and
jne
in
sbb
ja
test
adc
mov
jne
mov
test
cmp
or
insl
call
fstpl
out
pop
imul
fcmovne
push
pop
pop
xlat
mov
cmpsb
das
sbb
std
mov
movl
scas
sahf
popf
xor
out
fidivrl
jl
jle
clc
inc
jbe
push
mov
push
ret
gs
xor
clc
pop
fwait
push
xchg
les
dec
shrb
cmpsb
std
fisttps
sub
lea
ret
pop
outsb
fdivp
dec
sub
mov
jge
dec
push
jge
add
fs
jg
cltd
hlt
lds
or
test
cmp
dec
stos
cwtl
mov
out
pop
mov
xlat
push
adc
gs
pop
dec
mov
imul
ljmp
push
divl
xlat
jp
aam
cmp
jno
aas
mov
or
shlb
or
xchg
aaa
ficoms
cmp
daa
repnz
add
int
insb
jb
pop
sarl
es
sub
pop
je
or
push
out
xlat
mov
cmp
xorl
pop
in
pop
pop
mov
lods
push
mov
xchg
sarb
test
in
gs
mov
sub
xor
test
adc
or
fcomp
adc
push
gs
add
mov
mov
mov
loop
daa
scas
push
test
loope
movsl
sub
push
adc
lcall
jmp
jae
js
stos
bound
out
cwtl
call
pusha
mov
fwait
leave
aam
jo
xor
lmsw
xor
sub
push
jle
and
lcall
aad
add
or
pop
xor
jl
into
andb
mov
cwtl
fcoml
imul
jge
frstor
sub
mov
leave
into
cmp
pop
and
and
bound
jns
push
insl
cmp
es
shrb
adc
loopne
jnp
jg
jle
xor
or
sbb
pop
pushf
icebp
out
shlb
sahf
sub
sahf
mov
xchg
mov
cmpl
or
div
and
enter
movsl
jnp
sub
ljmp
fmulp
fcomip
sub
stc
mov
push
popa
inc
fdivs
lds
in
push
pusha
sbb
mov
mov
ds
mov
mov
cli
push
mov
lds
jo
cmp
sbb
ss
pop
sbb
js
orl
mov
and
xchg
outsl
and
pop
sbbl
lods
insb
stc
rcrl
ljmp
jmp
inc
aad
lret
pop
sub
xchg
dec
scas
xlat
cld
jnp
iret
shll
paddsw
mov
dec
lret
xorl
adc
ljmp
jle
lahf
shlb
lret
fmuls
jno
lahf
mov
push
mov
dec
aam
add
pop
jnp
stc
xor
jmp
pop
xor
imul
outsl
xchg
jbe
push
call
cmp
cmp
idivl
push
pop
repz
mov
cmp
enter
imul
add
lods
push
lahf
je
xlat
add
add
mov
pop
cmpsb
jle
pop
xlat
daa
dec
mov
jmp
jnp
xor
and
sub
inc
out
pop
outsl
ja
xchg
lods
insb
dec
shll
inc
in
cmp
mov
or
and
testl
cmpb
jb
movsb
mov
pop
and
pop
mov
push
dec
cmp
aas
mov
cmp
movsb
out
cmp
mov
in
pop
mov
jecxz
in
or
xchg
lock
lret
push
jle
in
insl
outsb
push
push
sbb
xchg
sub
mov
jae
hlt
nop
push
leave
or
out
lds
je
sub
and
mov
inc
roll
inc
into
dec
adc
clc
cmp
out
push
jp
shl
out
jmp
nop
aas
inc
cld
insl
pop
test
xchg
sti
and
dec
jle
pop
popf
mov
cmp
shr
add
mov
adc
enter
mov
add
mov
mov
xor
inc
repz
rcrb
lods
cmp
divl
jns
adc
or
and
push
adc
or
pop
lods
ljmp
mov
dec
push
cld
nop
cmp
hlt
stos
das
mov
scas
out
cs
jge
into
jno
cld
cmp
cmpps
loopne
inc
stos
add
cmp
dec
sub
xor
sbb
add
and
add
pop
cli
loopne
dec
scas
loopne
insb
xor
push
lods
data16
loopne
mull
xchg
cmp
add
clc
xchg
imul
push
xchg
ret
cli
mov
popf
xchg
and
pop
and
adc
dec
pop
mov
add
jp
inc
mov
aas
xor
stos
inc
subb
sub
inc
fldcw
sub
nop
loopne
fsubl
enter
movsl
test
mov
fmuls
mov
test
adc
enter
bnd
popa
jae
push
add
stc
gs
mov
movsl
mov
push
dec
lock
scas
dec
incl
fwait
cmp
sub
xchg
and
fs
push
das
int3
shll
cmp
cld
ss
std
addr16
in
call
dec
mov
fs
cmp
xor
mov
inc
mov
xor
imul
lcall
movsb
leave
pushl
movsl
jl
cmp
into
sub
mov
fdivl
sbb
aad
xlat
repz
xchg
ss
sbb
shll
arpl
mov
aam
sbb
dec
dec
jnp
lods
icebp
leave
pop
cmpsb
adc
aas
mov
adc
adc
and
std
jecxz
rorl
push
das
jmp
or
pop
ja
sbb
xchg
and
lahf
frstor
in
jno
cli
sahf
sbb
push
push
jns
rcl
mov
cmpsb
sbb
mov
jns
adc
dec
mov
enter
push
sbb
cmp
and
or
pop
mov
pop
mov
add
test
aas
jo
mov
fistpl
aad
stos
pop
mov
sahf
xor
sub
pop
and
test
add
push
sub
mov
test
popa
xor
mov
jno
xchg
icebp
add
movsb
fmuls
inc
mov
iret
pop
xlat
repz
jne
daa
incb
movsl
int3
loop
dec
insb
cmpsb
push
lcall
in
jns
cmc
xchg
mov
dec
in
add
popf
mov
hlt
jmp
in
mov
inc
inc
add
ret
mov
cltd
test
dec
das
cmp
and
cli
sub
xchg
sub
repz
mov
and
leave
push
scas
into
nop
or
cmp
add
je
scas
cmp
adc
cmp
xlat
or
add
add
dec
test
sub
hlt
pop
xor
int
mov
jae
dec
push
enter
imul
in
mov
xchg
inc
jle
xor
ficoms
sti
xor
mov
dec
sub
sahf
ljmp
push
pop
xchg
mov
add
push
xor
call
call
add
mov
movsb
sbb
fstps
jge
jle
movsl
and
push
sub
int
iret
cli
mov
sub
pusha
test
sahf
outsl
aam
sbb
mov
xchg
popa
aam
cli
insl
mov
test
xchg
sarb
sbb
or
bound
ljmp
pop
pop
idiv
cmp
xlat
sub
popa
iret
stc
mov
add
jmp
xor
pop
jl
jle
negl
clc
jmp
bound
fwait
pop
jae
xor
jle
xor
jge
fwait
pop
data16
push
mov
mov
jecxz
mov
pop
or
jl
das
movsb
lea
inc
insb
cltd
push
repz
loop
xchg
mov
out
dec
in
test
imul
xor
imull
inc
cltd
push
cmp
xchg
loop
mov
xor
inc
mov
dec
ds
inc
movsb
mov
add
and
aas
xor
ss
xor
fadd
add
mov
rcrl
jbe
xchg
subb
pop
int3
adc
in
mov
add
or
ja
int3
lcall
mov
dec
fdivs
xor
xchg
sbb
out
sub
mov
dec
stos
bound
push
xor
icebp
jmp
cmp
jne
and
rcll
sub
push
cld
rcl
push
cmp
fcoms
imul
pusha
fmuls
enter
stos
leave
inc
sar
pop
jle
aaa
std
cmp
push
mov
mov
cld
cld
mov
xchg
or
sbb
mov
rcrl
cli
addl
add
dec
adc
stos
xor
hlt
sub
sbb
cld
sbb
adc
test
out
daa
fyl2x
rcrl
sub
gs
adc
aam
out
lea
mov
sarl
stc
fbld
inc
lcall
jb
pop
mov
add
es
imul
pushl
xor
and
adc
negb
pop
imul
into
jno
test
loop
cmp
movsb
mov
sub
imul
cli
push
xorl
pop
lret
fidivs
adc
loope
sbb
and
push
test
dec
add
out
mov
out
pop
jecxz
inc
push
xchg
push
pop
cli
icebp
pop
mov
shr
ret
mov
test
rcll
add
push
das
xor
add
adc
std
lods
xor
or
sti
or
adc
cmp
fmuls
ret
out
out
sub
subl
sub
dec
stc
rcll
clc
and
push
add
ja
or
pop
push
scas
cmp
push
ljmp
xchg
dec
xor
fadd
fldl
mov
bound
rcrl
std
sub
int3
pop
jl
push
faddl
dec
loop
out
mov
ljmp
cltd
aad
jns
lods
iret
cmp
mov
repz
xchg
xor
jg
sbb
xor
cmp
lcall
iret
test
ss
jg
push
pop
xor
movsl
dec
sbb
push
in
data16
pop
mov
cmpl
push
outsl
test
lea
into
push
dec
lret
in
int
out
add
imul
xchg
mov
push
out
stos
repnz
and
repz
cmp
cmc
test
mov
loop
ret
push
pop
ds
push
je
shrl
mov
aad
scas
mul
jle
adc
sub
ss
pop
adc
movzbl
jp
insl
push
into
mov
movb
jb
add
pushf
je
dec
xor
pop
int3
shrl
xor
dec
enter
sub
inc
jbe
imul
add
push
in
aaa
pushf
push
push
add
mov
std
cltd
mov
das
inc
dec
add
clc
mov
aaa
loope
cwtl
xor
je
add
test
mov
cmp
hlt
mov
pop
lahf
jmp
mov
test
mov
adc
add
out
mov
outsb
out
mov
mov
mov
leave
ja
aas
jns
ja
rcrw
jo
cmp
into
out
xchg
jge
mov
rcll
rol
inc
out
bound
fdivrl
xor
cmp
mov
adc
fld
shrl
and
pop
sarl
xchg
ret
pop
aaa
mov
icebp
stos
call
mov
mov
dec
repnz
add
add
pusha
push
je
cmp
roll
pop
dec
and
outsb
ljmp
sar
and
lret
stos
or
mov
stos
test
stos
jns
jmp
xor
xor
rolb
orl
xchg
xchg
pop
rolb
bound
jg
sbbb
hlt
shr
mov
mov
roll
cmpsl
inc
mov
pop
push
loop
mov
cmpsl
std
xor
push
mov
shlb
fsubrs
ss
sub
into
jp
or
test
or
add
stc
add
pusha
sub
addr16
dec
inc
push
insl
mov
sbb
imul
mov
scas
pop
jecxz
inc
dec
outsl
add
sbb
dec
arpl
out
bound
enter
jg
bound
mov
jnp
decl
inc
xor
push
adc
fstpt
and
cmp
sbb
cmp
dec
inc
dec
cmpps
jge
cmpsl
aad
cli
outsl
dec
push
arpl
fs
mov
je
cmpsl
mov
scas
dec
cmp
jns
cbtw
xchg
cmp
xor
sti
shr
pop
mov
daa
cs
push
cmp
and
mov
push
insl
adcl
stos
dec
and
enter
xchg
shll
mov
out
stc
inc
push
pop
ss
dec
lret
js
mov
lret
adc
cmp
inc
or
inc
rorl
aad
out
or
outsb
jae
xchg
adc
pop
sahf
or
mov
pop
lea
jle
push
dec
push
jns
imul
mov
mov
sahf
stc
scas
jmp
pop
cmp
jle
push
dec
push
jns
imul
mov
mov
sahf
stc
scas
jmp
pop
sub
jle
push
dec
push
jns
push
fidivs
mov
sahf
std
scas
fnstcw
mov
add
push
pop
push
jns
jmp
je
out
test
popa
push
push
push
inc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
add
inc
mov
out
stos
or
add
add
add
add
add
add
push
add
add
add
add
movl
xor
or
add
add
dec
add
mov
add
add
add
add
add
add
mov
add
jno
incl
add
fadds
faddl
xchg
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
nop
add
add
add
add
mov
push
push
fs
add
push
add
nop
add
add
add
fldl
push
add
cmp
mov
push
mov
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
add
pop
add
cmpsl
add
add
add
add
and
add
push
push
add
cmp
add
add
add
add
addr16
add
add
mov
faddl
push
push
pop
add
add
jecxz
push
add
add
add
cmpsl
add
add
add
add
xchg
and
adc
imul
add
add
imul
lahf
add
push
add
insl
add
add
add
add
inc
add
test
iret
add
add
push
push
nop
add
add
add
and
push
add
add
add
add
addl
faddl
addl
sub
add
adc
add
add
add
cmpsl
add
int3
add
add
xlat
add
movsl
add
add
sub
add
add
add
ja
out
cmpsl
add
add
add
sbb
mov
add
movl
dec
add
push
add
nop
add
mov
inc
add
add
add
add
add
movsb
add
add
add
add
add
cmpsl
add
jns
xor
testl
jb
iret
add
add
add
push
push
add
fadds
mov
faddl
fildl
cmp
test
add
rolb
cltd
add
jle
hlt
add
add
add
add
add
inc
add
add
cmp
pop
add
push
add
inc
add
movb
add
add
add
add
add
rolb
add
add
fadds
cmp
adc
test
mov
add
add
add
add
nop
add
or
add
add
adc
push
add
test
fldl
fiaddl
test
add
add
popl
int
pop
add
add
sbb
addl
adc
push
add
ja
test
add
add
add
add
add
add
add
add
add
add
add
mov
push
add
add
adc
inc
add
add
test
add
push
pop
add
add
add
dec
push
push
add
ljmp
lods
mov
pop
dec
dec
ja
movsl
adc
jmp
xchg
clc
mov
pusha
mov
inc
push
mov
lea
mov
xchg
es
cltd
adc
dec
dec
in
mov
adc
inc
or
insl
jmp
pop
push
loope
jmp
hlt
add
test
fldt
add
test
push
repz
jne
stos
popa
add
inc
mov
mov
hlt
loope
fwait
push
pop
mov
lods
enter
xchg
jne
pop
scas
lcall
fldenv
or
mov
or
adc
or
inc
shlb
dec
leave
push
insb
pop
sbbl
and
loope
sub
xchg
add
icebp
push
pushf
adc
add
mov
test
stos
cmp
ljmp
movsl
jg
pushf
out
data16
sub
divb
mov
sub
hlt
lods
push
js
sbb
test
and
mov
add
cmp
loope
fs
xchg
pop
mov
xchg
cmpl
ret
dec
mov
xor
sub
in
cwtl
push
xchg
pop
mov
jbe
loope
jmp
loope
jo
mov
jge
ljmp
mov
cmp
data16
sub
pop
inc
lock
and
sti
sar
cwtl
adc
and
jmp
jne
sbb
gs
cli
rcrl
lcall
aaa
xchg
idiv
xor
jae
in
jle
negb
dec
lods
sbb
xor
sbb
pop
lahf
popf
fidivs
bound
push
dec
or
fdivrs
mov
jl
mov
in
sbb
repnz
pop
inc
mov
dec
mov
adc
push
sbb
rol
push
and
jbe
pop
test
xor
and
xchg
out
adc
mov
ds
shll
mov
mov
lds
int
add
jnp
out
cmp
dec
fisttpl
xchg
pop
push
xor
call
ljmp
data16
mov
repz
lret
cmp
xchg
xlat
leave
pushf
repnz
push
mov
leave
or
mov
mov
int3
test
mov
mov
jmp
fisubrl
xor
adc
int3
push
fmulp
dec
inc
or
fstpt
sub
cmp
sub
out
into
jl
pop
mov
daa
insb
icebp
addr16
cld
mov
bound
shll
fadd
lea
and
xor
xor
insl
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
