call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
inc
sqrtps
popa
das
jno
add
arpl
add
pop
jg
mov
icebp
scas
or
mov
pop
or
dec
adc
outsl
xor
roll
mov
mov
push
mov
daa
pop
push
jno
aas
ja
movsl
repnz
ljmp
nop
das
inc
sbb
pop
add
mov
nop
xchg
sarb
aaa
xchg
push
movsl
adc
xchg
loope
hlt
outsl
das
aas
xchg
lods
lods
nop
mov
popa
decl
andl
sbb
pusha
enter
sub
xchg
rcrl
xchg
push
imul
popf
push
cmp
test
popf
insb
decb
dec
ficomps
xor
shrb
gs
rdmsr
jle
xchg
pop
mov
mov
shr
dec
std
cltd
sub
jae
pusha
loope
mov
int
iret
pop
mov
int3
imul
mov
fisubrs
das
repnz
cmc
push
out
aas
mov
sbb
punpcklwd
jno
in
imul
dec
xchg
xlat
fwait
xchg
cmc
mov
sub
and
dec
or
dec
jg
push
add
sbb
loopne
lahf
test
adc
or
xor
adc
push
sbb
sti
cmp
lret
clc
mov
lock
dec
and
jl
pop
and
jg
rcrl
or
mov
inc
sqrtps
popa
das
jno
add
pop
and
jg
rcrl
or
mov
inc
maskmovq
testl
stc
rorl
pusha
test
and
mov
call
js
pop
cmp
aaa
cmp
adc
popf
sub
push
repz
outsb
jmp
arpl
test
out
cmp
and
lods
jbe
icebp
push
lcall
inc
mov
xor
add
xchg
ja
or
das
inc
scas
and
or
add
mov
xchg
add
pop
orl
inc
test
and
icebp
testb
mov
outsl
xor
imull
jge
xor
xor
insb
repz
roll
scas
outsl
mov
fdivs
adc
lock
test
add
pop
aam
jp
xchg
inc
jp
xchg
int
cmpsl
mov
jns
xchg
repz
rorl
and
outsb
ljmp
or
scas
dec
add
dec
insb
mov
inc
jg
stc
pop
adc
jmp
into
pop
mov
int3
pop
imul
sbbl
in
or
and
dec
out
sbb
out
out
jecxz
sbb
fwait
or
add
popf
outsb
add
nop
cmpsl
xor
in
add
insb
push
sub
aas
clc
fnstsw
inc
ds
insl
and
loope
or
sub
nop
decl
pusha
sub
stos
popf
enter
dec
test
sti
out
adc
jbe
mov
int
xchg
xchg
push
xor
inc
cli
jecxz
mov
movsb
jnp
sti
shl
movsb
xor
int
filds
adc
ja
shrb
and
inc
es
xchg
mov
inc
add
call
dec
xchg
stc
sbb
sub
jg
insb
xchg
xchg
mov
iret
aam
lock
lock
icebp
insb
xchg
xor
mov
ret
shr
leave
outsb
lds
imul
outsl
stc
mov
mov
int3
loope
sbbl
pop
mov
mov
adc
rcr
cld
loop
pusha
push
enter
js
xchg
fsubr
test
notl
pusha
lahf
and
out
pop
sti
ljmp
stos
pusha
cld
jecxz
and
cmpsb
out
sub
ret
and
ds
jnp
and
ret
add
fistpll
ja
cmp
repz
inc
dec
out
cs
test
sbb
fildl
roll
test
out
and
mov
jp
xchg
clc
cs
dec
cli
gs
cmp
xchg
add
dec
test
add
cmp
mov
sub
mov
dec
mov
and
mov
dec
shrl
shl
inc
outsb
imul
mov
pop
adc
les
jbe
jmp
xchg
scas
mov
sbb
adc
and
addr16
adc
mov
lock
insl
xor
loop
fs
ja
mov
int
jge
or
pusha
add
xlat
push
push
inc
jne
push
dec
push
add
sti
pusha
int
push
cld
fimull
jge
sub
jnp
adc
fldt
pop
fistpl
jmp
push
jnp
mov
inc
xchg
pop
ja
idivb
sub
fcoml
push
js
xchg
xorb
pusha
int
iret
jmp
out
jno
rorb
aas
fabs
shlb
mov
ret
outsl
adc
loopne
xchg
mov
lds
cld
xor
sub
push
int3
jl
inc
movsb
test
mov
or
out
popa
jge
out
mov
mov
cmp
adc
cmp
push
xchg
ljmp
sbb
ljmp
iret
fidivrl
xchg
sbbb
and
fadds
adc
mov
jmp
xchg
mov
and
lods
mov
mov
jecxz
mov
adc
sahf
out
and
sbb
lods
scas
ss
cmp
jecxz
icebp
mov
sti
add
lods
out
xor
lret
aam
icebp
mov
fistpll
sbb
xchg
iret
popa
and
xchg
sub
stc
jmp
mov
cmp
pop
cmc
test
int
stc
xchg
push
fcomps
jge
fisubl
popa
aad
xorl
or
jnp
jnp
aas
insb
sub
addr16
cmpsl
sti
mov
fisttpl
test
xchg
jg
in
in
stc
loope
xchg
repnz
mov
mov
sbb
lret
jno
cltd
stc
lods
jbe
daa
mov
je
lret
dec
cmc
xor
bound
adc
mov
mov
mov
pop
orl
or
inc
cmp
cmp
or
movsl
and
or
add
sahf
sti
in
push
dec
daa
mov
jne
cmpsl
jne
sti
pop
pavgw
out
les
daa
mov
mov
jg
inc
fcomi
jae
jae
cmp
out
nop
xor
adc
neg
mov
dec
cmp
xchg
jle
push
mov
ss
loope
adc
lret
sub
jae
jae
mov
iret
sub
mov
aam
jno
outsl
cmp
ljmp
jne
pop
jo
sub
and
aam
iret
das
fs
outsb
cmpsl
inc
jp
mov
popa
gs
popa
pop
push
call
test
stos
loop
dec
push
movb
es
dec
xor
mov
cmp
push
mov
sub
mov
jae
aam
das
jg
aaa
mov
data16
or
add
fwait
adc
jl
and
dec
push
push
sahf
std
repnz
gs
aam
jne
push
add
dec
andl
ret
shll
cmp
mov
xchg
sub
or
mov
test
int
mov
mov
adc
loope
add
push
cwtl
sahf
and
or
mov
aad
mov
test
fldt
adc
mov
into
mov
frstor
add
pop
fwait
xchg
adc
lea
into
pushf
and
shll
lret
xchg
dec
mov
mov
mov
lcall
cmp
aaa
test
adc
cli
jbe
roll
pop
push
mov
cmpb
and
insb
outsl
push
jg
popa
sbb
xchg
ss
les
pop
nop
pop
xorb
bound
jmp
push
fsubrs
aad
cltd
pop
lret
enter
sbb
fstpl
scas
inc
mov
pop
xchg
pop
jb
dec
inc
xor
inc
imul
xchg
aaa
and
dec
gs
jmp
std
int3
push
leave
sbb
jno
aas
lds
xlat
outsb
sub
jns
test
repnz
jnp
sti
and
dec
sub
mov
jmp
xor
mov
cli
push
jns
add
movb
sub
cs
sub
inc
pop
mov
cli
mov
sub
js
cwtl
mov
jo
stc
hlt
dec
test
aam
ficomps
pop
out
fcoms
out
push
stos
cmp
int
push
mov
mov
push
and
mov
and
out
jecxz
cwtl
add
lcall
ja
pushf
loope
and
inc
sarb
jo
fwait
push
jns
lret
sub
dec
arpl
dec
inc
and
lods
scas
in
mov
push
subl
xor
mov
lcall
scas
scas
imul
sub
mov
fdivs
popf
les
and
cmpb
fmull
cmp
test
je
mov
cmp
es
dec
arpl
add
sub
mov
lods
mov
lods
or
add
ret
fildll
arpl
xor
xor
fidivrl
cli
sbb
inc
out
xchg
adc
call
imul
cwtl
jbe
icebp
mov
inc
es
sub
scas
sub
cmp
or
or
xchg
jl
incl
scas
add
rcrb
iret
xor
jge
mov
int
cmpb
sub
fxch
scas
sub
adc
std
or
push
out
dec
into
lahf
aad
cmpsb
outsl
rorl
add
movsb
fdivs
popa
insl
cld
movb
jp
inc
fcmovnb
mov
mov
mov
imul
cld
or
dec
hlt
add
std
xchg
push
mov
dec
out
mov
out
leave
shlb
clc
mov
jae
int3
clc
mov
repz
sbb
fwait
pushf
scas
pop
push
mov
dec
mov
cltd
pop
dec
inc
push
loope
adc
out
adc
outsb
sti
frstor
and
fwait
mov
xor
jno
push
and
push
aas
mov
adc
and
mov
sub
rcll
mov
push
inc
fldt
aam
dec
inc
sbb
int3
adc
mov
pop
add
jnp
dec
jno
lods
adc
cmp
jbe
dec
jp
test
sahf
inc
out
adc
out
inc
rol
lods
xchg
lock
inc
aam
xchg
xchg
outsb
jns
sarb
dec
add
or
mulb
mov
mov
xlat
sub
cmp
push
lock
mov
dec
stos
cmp
je
popf
fs
and
mov
xor
sub
nop
sahf
hlt
lock
sbb
lcall
test
adc
sub
push
repnz
mov
jge
xchg
dec
lods
inc
jecxz
dec
mov
ss
js
fnsave
jp
sbb
xchg
adc
dec
cli
insb
and
cmp
fadds
jge
jge
mov
and
pop
inc
add
or
ljmp
icebp
push
popf
ljmp
in
jp
sarl
test
and
dec
jl
sbb
fimull
out
mov
dec
and
jae
les
cli
sbb
xchg
fwait
loop
out
xchg
out
cli
vpmaddwd
lods
lds
in
dec
xchg
sahf
cmpsl
or
pop
stos
jo
outsb
fstps
dec
pusha
xchg
mov
daa
push
lahf
adc
out
loopne
xchg
clc
push
arpl
xorb
je
mov
cmp
stos
sbb
inc
pop
aaa
jg
ljmp
xor
dec
bound
and
jb
js
outsb
push
inc
enter
testl
push
outsb
mov
add
mov
push
pop
roll
add
mov
adc
js
sbb
loop
leave
ror
movsl
sub
std
aaa
mov
mov
int3
in
in
ret
push
js
dec
pop
in
add
mov
xlat
jns
mov
scas
sub
mov
inc
insl
loope
dec
cmc
mov
les
mov
ret
mov
add
xchg
icebp
scas
inc
test
aam
in
rclb
or
sub
mov
es
sti
sbbl
xor
ja
sarl
dec
rclb
rorl
jl
xlat
aam
add
in
in
jmp
or
pop
mov
mov
or
loop
sahf
mov
cltd
outsb
loopne
mov
inc
shr
and
or
dec
es
leave
push
mov
and
mov
adc
mov
insl
inc
cmp
pop
sub
cmp
push
inc
out
pop
leave
imul
les
sub
jns
adc
enter
sub
popl
mov
arpl
movsl
mov
repnz
sbb
mov
sti
test
repnz
mov
stc
sbb
cmp
or
mov
in
xchg
rorl
cli
jo
gs
sub
imul
fmull
mov
mov
xchg
mov
sti
mov
jmp
notl
xor
cltd
pop
xor
cmpsb
fdivr
adc
rolb
or
mov
add
in
mov
shll
push
push
xchg
pop
das
test
shl
cmp
or
inc
popf
dec
bts
in
mov
adc
mov
lock
adc
inc
mov
jmp
std
xchg
arpl
ja
fs
push
and
insb
jecxz
outsb
mov
cwtl
push
push
push
arpl
sub
ljmp
mov
mov
xchg
sub
test
sub
imul
push
push
mov
pop
sub
outsl
shlb
jnp
xor
jge
icebp
daa
repnz
movsb
pop
adc
mov
cli
mov
dec
data16
cmp
mov
lret
inc
out
hlt
pop
and
jmp
mov
adc
or
mov
lcall
add
dec
hlt
sbb
inc
mov
and
adc
test
sbb
rcrb
shlb
sub
nop
push
xor
jp
mov
loop,pt
sub
or
ds
pop
jecxz
sub
test
loop
repnz
clc
sahf
cltd
popf
das
hlt
sub
stc
and
les
and
jb
jo
push
in
mov
jl
push
cmp
jne
and
imul
mov
sub
pop
sub
dec
inc
mov
aaa
cltd
push
jge
xor
movsl
push
sahf
add
lods
insl
stc
in
pop
push
icebp
mov
xchg
fisubrl
sub
push
or
inc
push
or
cmpsb
xchg
fs
out
and
pop
sbb
jmp
sbb
cmpsl
adc
push
xchg
push
push
in
fisubs
sub
cwtl
ret
xor
out
addl
jmp
stc
add
xor
popa
addl
push
out
sti
mov
jbe
bound
fbld
adc
push
ja
or
lea
xchg
out
pop
aaa
pusha
adc
sub
movsl
xchg
and
movsb
fimull
xor
fsts
mov
push
mov
dec
ret
mov
movsl
pusha
cmc
sbb
mov
cmpb
out
fwait
divps
mov
sub
lods
cmp
repnz
js
popf
clc
mov
fidivl
icebp
jg
sahf
or
fstpl
cmpsl
or
popa
mov
xchg
jmp
fadd
lods
fldcw
cmp
mov
out
lret
sbb
daa
or
add
idivb
test
jmp
inc
int
inc
addr16
mov
adc
adc
jle
cmp
jmp
cmp
movsb
sbb
sahf
push
mov
clc
xchg
and
xor
stos
or
push
xchg
dec
lahf
mov
aaa
mov
mov
mov
sub
adc
cli
insb
xchg
dec
mov
inc
je
insb
dec
cli
sub
out
test
fidivl
push
jae
xor
sbb
dec
pop
adc
jb
lds
push
movsl
cmp
int3
mov
jnp
insl
xor
std
pop
or
pop
cmp
sbb
jns
sbb
leave
xlat
or
cli
out
pop
popf
fsts
sbb
mov
inc
stos
loope
andb
cmp
lret
sbb
imul
test
jmp
inc
or
in
add
and
ja
and
std
xlat
out
or
mov
xor
sbb
or
testb
xchg
mov
out
or
mov
imul
inc
adc
inc
and
sbb
pusha
fldenv
adc
mov
pop
int3
ret
xchg
in
out
cmp
mov
lret
lds
sub
fsub
outsb
andb
sub
bound
cltd
cmc
push
in
popf
add
cs
push
jecxz
jp
cmc
jle
mov
pusha
ds
mov
js
push
mov
repnz
lcall
sbb
aaa
add
jbe
sub
or
enter
movsb
adc
jns
or
xor
repnz
mov
jae
je
leave
pop
popf
or
int
fsubrl
sahf
sbb
cs
mov
cmpsb
into
fistps
jg
push
cmc
sbb
test
frstor
hlt
cmc
push
xor
lock
mov
push
xorl
push
xchg
mov
ljmp
stos
add
fnstcw
cwtl
mov
ret
scas
jbe
ljmp
xor
mov
dec
sub
mov
sarl
mov
movsb
or
xlat
fnstsw
lret
mov
jge
dec
dec
in
hlt
pop
popf
or
rcrb
imul
or
inc
add
test
insl
adc
ret
jo
or
push
out
cmc
adc
sub
arpl
pop
cmp
mov
cmp
push
pop
xor
jmp
ficoml
nop
loope
add
mov
call
fadds
fsts
call
fidivrs
shrl
sub
dec
mulb
leave
in
mov
jecxz
xchg
subps
mov
pop
fisttpll
inc
fwait
cmp
cmp
aas
xor
loope
fnstsw
add
aam
or
or
ret
adc
les
sbb
mov
dec
scas
out
lahf
mov
push
jb
pushf
dec
sbb
adc
ja
cld
mov
gs
cld
sbb
jns
push
out
sub
add
push
adc
and
dec
jb
cmp
test
call
sub
cmp
sbb
clc
push
mov
dec
and
jbe
jb
mov
incb
and
xchg
adc
mov
push
inc
test
push
jge
gs
ficoms
inc
imul
adc
outsl
xlat
xchg
idivb
sub
lcall
into
lret
xchg
jae
push
pop
inc
mov
test
ja
outsb
pop
mov
daa
idivb
les
hlt
cmc
lods
dec
inc
jmp
idivb
cmp
sti
fcmove
aad
scas
inc
inc
xchg
jno
dec
movsl
orb
jecxz
aaa
sbb
pop
or
icebp
cs
fnstenv
sub
cmp
dec
or
pusha
int
mov
movl
popa
movsl
mov
xor
xor
es
mov
push
fstp
mov
std
push
jmp
scas
mov
mov
movsb
xchg
js
pop
and
fisttps
pushf
add
xor
andb
in
sbb
lods
adc
call
jo
sbb
test
out
inc
test
imul
push
mov
lds
pop
out
push
insb
push
or
insl
jnp
pop
dec
push
inc
cmp
rorb
bound
inc
mov
inc
mov
cmp
xor
loopne
sti
cli
and
cmc
mov
icebp
dec
ljmp
outsl
js
sbb
push
nop
inc
xor
adc
push
add
xor
pop
sti
inc
cmc
xchg
jmp
jbe
and
lret
mov
mov
cmp
mov
push
cmpsb
sub
pop
ret
pop
push
or
repz
sbb
xchg
push
inc
dec
cs
dec
xchg
xchg
fcoms
repz
xchg
add
pop
or
cltd
cmpsb
add
daa
xor
aam
pop
and
cld
aad
lock
or
sub
loop
jmp
inc
xchg
repnz
out
or
fldl
mov
xchg
dec
sahf
xchg
lahf
scas
js
xor
andb
pushf
or
jp
dec
out
or
shrb
out
je
fidivl
pushf
adc
push
mov
mov
push
imul
mov
cmp
test
cmpsb
xchg
and
cmpsb
mov
je
imul
push
dec
test
int3
xchg
mov
pop
mov
add
cli
add
push
and
scas
xor
std
mov
adc
jecxz
inc
test
scas
je
int3
mov
repnz
fisubl
cld
sbb
sub
popl
jns
sti
sarb
and
push
mov
stos
adc
pop
je
rcl
dec
mov
mov
cli
loopne
xchg
and
sub
mov
add
xor
push
push
sub
fadd
jmp
mov
int
ljmp
cltd
test
in
inc
nop
leave
push
add
mov
sbb
scas
in
js
aam
stc
loop
inc
fnstcw
pop
push
pop
into
add
jmp
lock
pop
cmp
lock
out
sub
daa
movsl
xchg
fcmovne
test
orl
cli
xchg
out
push
dec
jae
add
xor
mov
sbb
xchg
jnp
push
sub
mov
and
mulb
xchg
sti
leave
lock
push
shlb
and
cmpsl
mov
fs
xor
sbb
out
push
mov
popa
insb
sti
xor
ss
cmp
je
gs
cmpsl
loop
mov
mov
xor
cmp
popf
adc
in
mov
push
and
and
jno
lock
lea
cmp
pop
test
push
and
push
imul
inc
out
xor
stc
xor
or
in
jbe
jno
sbb
push
dec
xor
mov
xchg
cmpsb
fimull
ds
mov
push
mul
push
dec
outsl
arpl
les
push
add
fstps
dec
mov
popa
lret
repz
and
pop
sub
mov
popa
mov
lret
mov
xchg
dec
movsl
push
pop
adc
stc
mov
in
add
pop
imul
push
aaa
out
pop
es
jno
add
pop
and
jg
rcrl
or
mov
inc
sqrtps
popa
das
jno
add
pop
and
jg
rcrl
or
mov
inc
punpcklwd
add
jno
xchg
dec
adc
outsl
icebp
jg
rcrl
or
pop
sti
push
or
aas
add
pop
and
mov
dec
scas
icebp
enter
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jg
jmp
iret
ffreep
adc
mov
xchg
jg
dec
push
pop
inc
cs
push
pop
push
out
idiv
out
ffreep
scas
mov
cmpsb
xchg
lahf
outsl
jbe
cs
pop
inc
das
pop
aas
movhps
push
out
idiv
out
ffreep
scas
mov
cmpsb
xchg
lahf
xchg
jg
cs
daa
dec
bound
das
js
jne
test
scas
cmpl
mov
out
xchg
jl
inc
lahf
push
and
ss
popf
xchg
pop
mov
mov
and
add
and
ss
push
out
push
jmp
mov
xor
shrl
das
jmp
push
push
xchg
and
mov
inc
out
xor
outsl
cld
lahf
js
mov
cmpsb
iret
ss
fcomps
sbb
pop
adc
lret
ds
cld
lahf
cmpsb
pop
mov
sub
test
push
mov
loopne
pop
jae
imul
xchg
ja
ja
pop
ret
nop
addr16
push
pop
ss
jne
push
push
adc
ffreep
scas
mov
cmpsb
xchg
lahf
xchg
jg
dec
push
pop
inc
das
ss
movhps
outsl
fwait
repnz
in
rcr
iret
enter
pop
bswap
and
cmp
pop
jne
inc
bound
dec
mov
mov
lret
ljmp
adc
aaa
add
dec
daa
pop
inc
add
mov
scas
lods
movsb
jmp
xchg
lahf
xchg
jg
dec
push
pop
inc
das
ss
movhps
push
out
idiv
out
ffreep
scas
mov
cmpsb
xchg
lahf
xchg
jg
dec
push
pop
inc
das
ss
movhps
push
out
idiv
mov
lea
ret
std
sbb
js
es
int3
push
add
cs
mov
insl
daa
aas
adc
pop
add
mov
lcall
outsb
push
hlt
std
add
aaa
jp
dec
xchg
int
cmp
shrb
fcomip
fists
xor
fs
inc
aaa
daa
inc
jo
xchg
xor
cmp
cmpsb
sarb
nop
leave
xor
dec
pop
imul
dec
xlat
push
rclb
scas
jb
test
fs
cmp
jae
test
sahf
lret
jb
adc
cltd
lods
std
call
in
jl
xchg
and
scas
das
shrl
ret
adc
inc
sahf
mov
in
sti
in
sbb
mov
inc
xor
or
jae
nop
jb
inc
pop
ja
popa
insb
scas
fucom
pushl
cli
push
pop
xchg
fdivrl
mov
or
pusha
fsubs
mov
lea
cmc
dec
push
int
add
ss
insb
add
and
stos
mov
mov
xchg
xchg
lds
cmc
andl
jmp
jb
push
mov
or
das
imul
into
push
fdivp
xor
or
and
dec
mov
push
outsl
sti
pop
jo
push
fcompp
and
cmp
mov
cmp
js
scas
push
dec
clc
mov
sub
xor
sbb
jecxz
sub
adc
leave
adc
stos
inc
bound
add
xchg
cmp
xor
or
out
sub
test
pop
sbb
add
xor
das
hlt
xor
and
inc
lds
add
fmull
mov
pop
mov
pop
xor
in
mov
hlt
sub
jmp
test
add
fdivr
aaa
jmp
mov
jg
enter
mov
push
xor
or
push
scas
pop
stos
addr16
adc
cmp
loopne
cli
inc
xor
gs
add
xor
jns
enter
push
movsl
sti
push
cmpsl
pushf
xchg
pop
fnsave
xor
add
sub
mov
testb
push
daa
js
inc
xchg
mov
lods
int
push
jg
jb
and
mov
ja
xchg
outsl
dec
sub
jns
filds
clc
int
movsb
xor
in
in
sub
roll
gs
jno
mov
mov
cmpsl
sahf
mov
jp
mov
mov
inc
lds
test
mov
mov
loop
subb
ja
je
sbb
and
sbb
cltd
mov
loopne
mov
aad
lcall
pop
hlt
mov
fcoms
aad
add
ffree
pop
dec
mov
xchg
mov
or
mov
cmp
shl
sbb
push
dec
xchg
cwtl
scas
aas
push
pop
pusha
in
dec
int3
fwait
fs
loope
add
xor
popl
or
sbb
dec
mov
stc
xor
sbb
xchg
xor
cltd
push
mov
dec
add
sbb
dec
push
in
std
push
pusha
ds
int3
cli
arpl
sbb
rorl
sbb
inc
push
jo
dec
cltd
cltd
xchg
rclb
adcl
lock
cltd
adc
mov
mov
mov
int
jp
jbe
cli
fdivrl
ds
cmp
cmpsb
add
fldl
xchg
leave
xor
jl
sbb
pop
sbb
cs
sub
pushf
push
mov
cmpsl
push
pop
cmp
or
xchg
std
pop
data16
mov
mov
int3
fnstenv
loope
fcmovne
or
inc
mov
sti
clc
jae
cmp
cmp
lods
test
pop
sbb
add
pushf
and
dec
xor
pop
loop
addl
mov
es
imul
enter
repnz
mov
inc
inc
cmp
lcall
xchg
pop
jo
cmpsb
jbe
hlt
lods
inc
pop
shrl
filds
cs
xlat
or
in
sub
jp
add
xlat
arpl
push
lcall
aas
divb
xchg
in
inc
mov
mov
mov
out
cmp
shl
icebp
enter
push
push
int3
jmp
ljmp
gs
mov
mov
jmp
sbb
pop
clc
dec
fsubrs
add
test
dec
jecxz
cli
mov
mov
je
not
dec
pop
jbe
mov
add
dec
addr16
dec
cmpb
inc
mov
push
lahf
xchg
ja
xor
fistpl
mov
cmp
inc
and
out
xor
mov
push
popf
popf
sub
inc
por
dec
scas
stos
or
push
jecxz
add
xchg
and
mov
sbb
or
cmp
cmp
cmp
pop
mov
push
dec
pushf
add
aad
add
and
jbe
push
xlat
jae
push
lea
mov
mov
jp
push
add
mov
stc
dec
mov
xchg
xor
fmuls
jo
leave
out
push
in
jns
stos
mov
repnz
pop
imulb
loop
sbb
fcmovnb
xchg
pop
imul
add
sub
inc
jo
push
lret
shll
lcall
mov
mov
lods
pop
sbbb
dec
out
sub
xor
arpl
cmp
fnstenv
stos
daa
jge
addr16
and
shr
jne
nop
mov
out
mov
mov
cmp
sti
or
sub
and
inc
iret
push
dec
hlt
ret
mov
lret
xchg
pop
lock
pop
iret
cmc
xchg
jge
lcall
je
into
leave
mov
jecxz
pop
dec
lret
les
nop
sti
xlat
mov
icebp
xchg
loopne
jae
sbb
out
fwait
inc
mov
js
icebp
test
xorb
dec
cmc
negb
lret
push
cli
out
push
adc
out
add
cwtl
repnz
data16
into
ja
bound
fucom
lods
push
xchg
rcrb
orb
lea
lock
orb
push
mov
popa
add
outsb
cli
cmp
dec
jae
aaa
or
jle
mov
push
cmp
aaa
or
cmpsb
mov
inc
push
mov
pushf
push
cmp
test
jl
mov
in
in
and
out
stos
ljmp
inc
fisubl
push
xor
cli
inc
inc
ss
dec
adc
lods
or
je
mov
test
lods
scas
add
jp
pop
pushf
mov
mov
popf
and
fwait
nop
int
push
mov
lods
sbb
jecxz
and
add
icebp
xlat
test
cmpsb
rorb
pop
add
pop
mov
loopne
mov
sbb
push
mov
cmp
inc
js
fimull
jno
ja
sub
hlt
sbb
xchg
inc
cmp
xlat
jb
jae
jnp
jg
push
pop
sahf
shlb
sbb
rclb
ljmp
fistpll
mov
repnz
test
dec
lds
add
cmc
adc
jmp
xchg
jmp
inc
das
iret
jecxz
adc
arpl
in
pop
jno
ud1
cmc
add
jo
xchg
aad
arpl
dec
jns
imull
pop
pusha
lea
dec
popl
mov
mov
xor
fdivr
imul
xchg
adc
pop
push
xlat
xchg
mov
sbb
scas
dec
out
mov
cmpb
mov
insb
adc
or
lcall
popa
and
imul
inc
inc
mov
lds
lea
jl
setb
jge
cwtl
push
inc
js
jmp
fisttps
cmpsb
mov
enter
fcompl
push
xchg
and
idivb
inc
ret
xor
mov
ret
imul
cs
push
lret
popa
mov
push
jb
xlat
xor
mov
and
bound
outsl
ss
gs
lahf
loopne
add
push
adc
sbbb
sbb
sub
push
test
pop
sarl
in
es
dec
rclb
xor
jp
sub
sbb
iret
mov
repz
push
inc
add
enter
inc
lcall
mov
ss
mov
cltd
shrb
addr16
sub
fsubs
pop
adcb
andb
sub
insl
push
mov
xchg
arpl
sbb
cmc
xchg
or
cltd
inc
adc
fdivrs
or
mov
into
fimuls
stos
lahf
nop
in
add
insl
adc
lcall
in
ja
or
mov
mov
or
mov
addr16
in
leave
xchg
das
push
jp
in
mov
mov
pop
mov
pop
lcall
pop
adc
add
in
push
mov
ja
adc
pop
and
or
sub
movsl
out
jecxz
adc
rcrb
jmp
dec
add
loopne
cmp
jns
adc
adc
nop
pop
ret
mov
push
mov
pop
push
xor
push
fcomps
or
and
decb
jns
insb
mov
sub
push
jns
mov
inc
jb
lcall
cmp
sbb
icebp
adc
dec
xchg
das
je
in
lret
lret
push
pop
aam
pop
pop
mov
rorl
mov
loop
call
inc
lds
cli
adc
pop
add
jp
js
sub
xor
mov
lea
ret
je
cmp
sbb
pop
mov
add
popa
es
jge
lret
insb
insb
sbb
jo
fadds
sbb
ret
sbb
sub
jne
arpl
add
push
dec
xor
scas
add
mov
sbb
stos
jbe
fists
jno
je
mov
stos
pop
inc
ret
sbb
sub
push
pop
inc
cmp
sub
xchg
ficoml
fcompl
popf
bound
mov
int
insb
pusha
fcmovb
mov
and
clc
dec
out
pop
pop
ja
xor
lds
mov
stos
shll
xor
push
ret
push
rclb
lods
popa
mov
add
mov
addl
dec
out
js
jns
jae
mov
scas
adc
mov
pop
stos
jb
jb
xlat
bound
faddl
inc
mov
and
jo
mov
es
lret
loop
adc
sbb
fdivrl
sbb
mov
add
sahf
adc
pop
mov
out
cld
orl
fldt
jg
cwtl
aad
cld
arpl
fucomp
or
xchg
fucomi
cmpsl
imul
ljmp
dec
mov
leave
testl
add
xor
push
int
mov
aam
xchg
pop
and
fdivs
jmp
mov
xor
gs
mov
sub
stos
or
pop
jge
adc
iret
popf
out
push
inc
loopne
pop
pusha
jg
mov
insl
shrl
and
ss
pop
insb
push
jecxz
leave
xor
mov
icebp
add
test
jnp
jle
sti
test
or
ret
push
arpl
push
cmc
jl
imul
lcall
fldenv
sub
repz
dec
push
das
lods
dec
mov
in
or
or
pop
arpl
and
repnz
inc
mov
mov
sarl
push
divb
push
rolb
sbb
dec
or
cmpsb
iret
inc
fisttpl
cmp
jmp
cmp
add
mov
sbb
xchg
or
inc
or
dec
aaa
jb
pop
push
adc
xchg
sahf
outsb
cltd
adc
sbb
cmp
ljmp
repz
ljmp
cmp
fwait
sub
adc
jnp
push
push
mov
scas
mov
js
dec
add
jns
or
xchg
pop
dec
lods
insb
mov
lods
or
mov
jle
repnz
add
mov
xsave
hlt
jmp
movsb
pop
adc
inc
je
jg
sbb
xchg
cmpsb
popf
lods
popa
outsl
xchg
pop
repnz
popf
inc
mov
repnz
jnp
push
mov
xlat
movsl
mov
pop
movsl
push
jg
ficompl
scas
push
push
lods
mov
ficoms
loopne
mov
les
jbe
cmp
fxch
xor
ss
js
aad
push
imul
mov
insb
and
or
daa
mov
popl
enter
inc
adc
xor
iret
fildl
push
and
std
int
orl
mov
jae
lods
push
frstor
repnz
shll
mov
adc
jl
fldl
mov
inc
mov
das
shll
aaa
cld
xor
lods
mov
jecxz
cmovne
cmp
lret
ja
movl
adc
out
pushf
shrl
push
movsl
imull
dec
and
orl
repz
pushf
cmp
sbb
sahf
idiv
sbb
jns
push
pop
test
daa
call
imul
mov
je
push
jmp
and
push
sbb
ss
mov
xor
enter
add
leave
repz
xchg
sbb
fwait
sti
lgs
lret
lds
adc
jne
and
and
mov
test
inc
jb
in
add
repz
icebp
shl
push
pusha
stc
sbb
out
inc
pushf
mov
pop
xlat
stos
fs
xlat
scas
mov
jge
cmp
sti
add
mov
outsl
cmp
and
push
lods
andb
and
std
rcrb
xchg
lea
pop
aaa
shlb
outsl
jp
gs
sbb
push
push
cmpsb
xchg
rolb
dec
inc
shrl
ret
ret
sbb
or
ds
jp
icebp
cltd
pop
test
scas
fmull
pop
pop
mov
mov
dec
and
scas
adc
sub
jl
cmp
outsb
sbb
rclb
mov
les
mov
mov
hlt
pop
mov
add
gs
jbe
repz
or
test
sti
mov
and
gs
xchg
mov
call
sahf
aaa
sahf
fsubrs
ljmp
imul
aad
cmp
jl
test
lahf
jnp
cmc
std
out
pushf
cld
sub
and
leave
dec
repnz
bnd
aas
insl
push
push
movsl
pop
lret
adc
jmp
fstl
pop
push
mov
call
adc
add
into
fildll
jo
std
repz
aas
arpl
or
mov
in
pop
jg
pop
cld
mov
add
jle
xchg
ja
das
jecxz
sub
push
shrl
and
es
out
push
sbbl
dec
shlb
ja
jb
clc
mov
mov
test
hlt
out
push
sbb
sub
out
cmp
into
mov
pop
xchg
bound
aaa
dec
push
mov
lea
sub
mov
push
xor
inc
in
mov
push
pop
clc
mov
mov
pop
jne
ljmp
add
xor
jns
insb
scas
stc
lcall
lret
xchg
cmp
out
hlt
test
into
cmp
cwtl
inc
mov
shll
mov
cli
jmp
test
add
mov
ja
xchg
jg
ret
fidivrl
nop
stc
mov
add
push
je
fldl
fucomp
hlt
cwtl
ffreep
dec
insb
lods
roll
and
jns
adc
jbe
test
clc
jo
loop
xor
push
pushf
nop
jbe
daa
push
shl
lcall
pop
sbb
xchg
test
xor
mov
push
dec
pushf
cmp
push
sbb
mov
pop
das
cwtl
rolb
push
arpl
insb
jne
mov
xchg
testl
test
cmp
adc
cld
inc
push
jg
sub
add
jecxz
loopne
xchg
nop
insb
mov
lock
push
add
cmpsl
xchg
cmp
insl
rcrl
mov
outsb
mov
stc
pop
sbb
in
sub
and
hlt
jg
cld
int3
daa
popl
add
mulb
xchg
test
lahf
imul
jnp
inc
inc
enter
test
cwtl
adc
ja
pop
cli
cs
je
test
jl
mov
mov
leave
test
insl
ja
stos
push
mov
mov
adc
mov
lea
mov
inc
and
stos
mov
rolb
sub
clc
lahf
lahf
rorb
or
jp
clc
inc
jl
jp
insl
dec
dec
pop
and
dec
in
jbe
into
sbb
mov
sub
mov
and
xchg
mov
and
pop
js
dec
xor
test
in
dec
popf
jns
sub
inc
cmp
add
or
adc
inc
cmp
sub
loope
xor
or
scas
cmp
into
add
inc
inc
inc
push
ljmp
cli
mov
jmp
mov
je
and
xor
pop
adc
insl
pop
inc
and
pop
sub
loopne
loop
xchg
push
inc
daa
cwtl
sbb
sahf
ja
in
inc
mov
push
inc
cmp
xchg
xor
cmpsl
push
jnp
out
les
adc
mov
push
lock
ds
aad
pop
loop
jge,pt
repnz
and
ret
shr
dec
xor
out
jno
mov
inc
inc
mov
add
adc
push
ret
mov
push
pusha
lods
sahf
sub
fwait
arpl
lds
mov
sarb
lret
dec
mov
test
fiaddl
fwait
mov
lcall
pop
lock
pop
jle
add
push
sbb
hlt
inc
into
ret
sub
std
inc
sub
pop
loop
test
push
outsb
inc
jno
jecxz
filds
xchg
jbe
rorb
jle
push
xor
and
js
ficompl
jle
inc
inc
jmp
xor
leave
add
fsubrs
scas
xchg
jb
cs
scas
shll
xor
lcall
mov
and
jns
nop
xlat
js
adc
and
je
jae
les
je
xor
dec
repnz
push
pop
inc
icebp
cmp
imul
pusha
jl
arpl
or
sub
nop
imul
je
enter
cmp
js
aas
ja
xor
pop
movsl
aas
cmpsl
dec
mov
insb
sub
cmc
pop
nop
inc
mov
fsubl
mov
jg
nop
arpl
mov
push
cmc
cwtl
or
xchg
mov
dec
jp
dec
int
dec
inc
mov
in
push
ret
hlt
dec
and
sti
sbb
push
push
jmp
or
mov
pop
mov
xchg
mov
adc
jns
jecxz
sub
mov
rcrl
in
dec
insl
jno
mov
shl
orl
daa
push
xchg
les
fidivrl
loop
outsl
popf
and
cmp
sub
ret
negb
inc
loopne
dec
mov
mov
or
testl
sbb
sub
stos
insb
push
jno
addr16
fcomps
adc
ficoms
sbb
je
mov
sarl
jmp
mov
xchg
lret
and
dec
adc
xchg
pop
out
pop
xchg
xor
jno
push
ds
mov
leave
xchg
adc
xchg
leave
popf
push
mov
rorl
addr16
test
xchg
jnp
orb
aaa
jmp
jecxz
add
dec
sbb
pop
push
jge
inc
pusha
dec
data16
aaa
testl
mov
fwait
sbb
jecxz
movl
rol
leave
sub
clc
push
push
jno
dec
movsb
nop
lods
pop
fists
jp
cmp
push
jge
adc
jnp,pt
push
xchg
jae
adc
cs
push
pop
icebp
stc
cmp
mov
test
sub
dec
insb
repz
and
leave
cwtl
outsl
lea
cwtl
mov
xor
nop
cmpsb
fdivrs
popf
sub
pop
push
cmp
sbb
mov
jne
loopne
cld
xlat
cs
or
mov
lahf
stc
out
dec
repnz
mov
lcall
add
or
fdivs
mov
jo
add
mov
fcomps
mov
inc
or
test
xchg
pop
test
iret
xor
mov
mov
cmp
cs
dec
out
pop
aaa
and
repz
mov
ds
mov
cmp
jecxz
jno
jecxz
xor
fisubrs
mov
icebp
sbb
push
cli
pop
jbe
ret
jmp
rcrl
out
pop
sahf
ja
sub
mov
sub
ss
jmp
sbb
adc
stc
push
add
clc
xor
xor
leave
sub
mov
mov
or
notl
rcr
cltd
inc
shlb
addr16
lret
out
stos
imul
cli
jno
push
repz
jnp
out
in
ret
dec
and
sbb
pop
push
mov
scas
out
add
insb
sub
add
cwtl
adc
and
add
push
or
jnp
imul
int3
sub
pop
mov
in
adc
repz
out
stos
loop
xor
fnsave
or
mov
mov
mov
psubb
mov
loopne
scas
mov
inc
cmp
arpl
std
or
std
xor
scas
lea
clc
ja
xor
add
cli
aad
and
xchg
popf
xchg
outsl
shlb
das
xchg
popf
aaa
xchg
push
add
sbbb
imul
inc
mov
xor
inc
and
scas
mov
cmpsb
xchg
lahf
xchg
jg
dec
push
pop
inc
das
ss
movhps
push
out
idiv
out
ffreep
scas
mov
cmpsb
xchg
lahf
xchg
jg
dec
push
pop
inc
das
ss
movhps
push
out
idiv
out
ffreep
scas
mov
cmpsb
xchg
lahf
xchg
jg
dec
push
pop
inc
das
ss
movhps
push
out
idiv
out
ffreep
scas
mov
cmpsb
xchg
lahf
xchg
jg
in
pop
xor
mov
lock
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aaa
mov
out
xchg
pop
xchg
pop
xchg
mulb
loop
repnz
sub
divl
mov
push
movl
xchg
pop
xchg
addr16
inc
call
jecxz
xchg
negl
data16
push
movl
or
lock
scas
push
faddl
mov
cmpsl
add
lahf
and
test
out
lds
aaa
stc
addr16
fcoml
pop
jne
jge
pop
push
aam
jl
imull
test
fwait
gs
mov
jecxz
insl
pop
sub
ficompl
jmp
repnz
fnstsw
or
fisubrs
sub
jbe
sub
test
ss
test
mov
pop
xorl
xchg
test
mov
sbb
mov
jmp
test
push
pop
jge
aas
jns
lds
pop
inc
cmp
testb
jp
in
aaa
add
pop
pop
push
jecxz
push
mov
int3
out
int
outsl
rol
lret
push
out
xlat
mov
daa
xchg
loop
xchg
addr16
inc
push
mov
cmpsl
mov
dec
out
xlat
dec
je
mov
leave
jb
ljmp
push
xor
mov
gs
xor
das
xor
push
loopne
in
ljmp
inc
cmc
rclb
push
inc
ret
cmp
xor
jle
push
ljmp
inc
mov
cmpsl
es
push
xchg
divl
data16
push
movl
xchg
pop
xchg
addr16
inc
mov
cmpsl
es
push
xchg
divl
data16
push
movl
jmp
push
out
jg
stc
fidivrs
pop
add
nop
push
fstl
push
pop
inc
and
mov
or
xlat
and
jg
pop
and
cmp
push
and
fsub
xor
push
mov
jl
dec
test
mov
mov
cld
xor
push
jo
test
scas
dec
mov
and
cmp
outsl
cltd
mov
xchg
mov
in
cmp
adc
insl
enter
repnz
push
or
adc
imul
xchg
mov
cmp
jnp
sub
in
mov
and
add
mov
pop
sbb
rolb
mov
pushw
push
sub
pop
imul
push
sbb
pop
mov
sub
fsubr
dec
mov
xchg
negb
sub
orb
push
mov
rolb
dec
scas
dec
and
mov
scas
movsb
test
rol
push
mov
dec
pushf
hlt
out
xor
inc
jl
repz
push
adc
push
lods
mov
int
push
fisttpl
mov
icebp
ljmp
aam
inc
lods
stos
lds
in
sub
mov
outsl
int3
scas
mov
mov
lcall
sti
inc
mov
stos
pop
mov
push
sbb
addr16
sti
cwtl
xchg
push
adc
lcall
lret
mov
cltd
pop
mov
iret
sub
jecxz
cwtl
push
out
pop
in
sub
or
sar
and
ljmp
mov
and
cmp
daa
cmp
cmp
mov
lcall
mov
lret
mov
adc
sbb
mov
sub
cmp
in
out
cld
data16
xchg
nop
add
roll
insl
xor
fidivs
cli
xchg
push
jno
negl
xchg
xchg
ret
fldcw
pop
pop
sub
adc
sidtl
xchg
in
bound
hlt
movsl
popf
sbbb
loope
pop
dec
loopne
or
sti
cmpsb
in
test
out
jecxz
loopne
inc
add
pop
and
sub
lea
sub
fldenv
cli
push
dec
test
stos
in
push
sbb
pop
push
adc
mov
gs
xchg
aas
pop
inc
jle
inc
cmpsl
xchg
out
or
imul
jecxz
hlt
push
sbb
cld
loopne
lret
pop
xor
and
aaa
jne
inc
ja
dec
ror
sub
bound
mov
cwtl
sbb
jmp
mov
les
sub
adc
pop
sbb
mov
jns
xor
ja
call
xchg
fiaddl
les
jae
pushaw
sub
jne
test
sahf
xorl
imul
dec
jmp
pop
cli
lcall
movsb
cmpsb
icebp
pushf
xchg
movsl
dec
ret
xor
repz
cli
jae
in
xchg
inc
lds
sahf
rorl
jmp
int3
pop
in
test
or
fcmovnu
cmp
sub
lods
inc
in
mov
jmp
push
std
xchg
outsl
rorl
test
movsb
add
push
or
arpl
adc
cmovne
jb
mov
jne
inc
or
dec
cmp
xor
jge
in
cld
das
and
clc
outsb
push
pop
mov
mov
movsb
jl
test
repnz
dec
adc
inc
mov
xor
jle
cmp
scas
xchg
movsb
push
pusha
test
and
sar
and
idiv
mov
mov
xchg
sbb
in
test
xchg
int3
sub
int3
das
outsb
cmp
dec
mov
in
fnsave
jmp
push
add
cmp
or
mov
sbb
mov
adc
mov
sub
fs
shlb
or
js
pop
xlat
cwtl
jle
mov
xchg
mov
xor
iret
mov
imul
jns
adc
faddp
and
lret
push
add
roll
mov
pop
mov
jnp
inc
adc
fistpl
out
jg
lret
cmc
dec
mov
sbb
add
add
movl
jae
into
mov
mov
fisttpl
dec
cmp
testl
ljmp
fs
inc
cmp
imul
pop
xor
lock
mov
fsubrl
shll
out
lods
push
or
orl
fidivrs
dec
mov
adc
mov
daa
shr
daa
add
rcrb
aad
fstpt
mov
cld
popa
adc
out
lret
mov
andl
mov
lret
enter
fdiv
sbb
pop
push
cwtl
repz
add
es
shrl
inc
out
std
xchg
notb
test
pop
cmpsb
xchg
test
add
data16
lcall
int3
decb
push
ss
push
cwtl
mov
add
or
fdivl
mov
icebp
loope
jne
mov
xchg
cmpsb
mov
pop
mov
sub
je
fldenv
stos
mov
ds
xlat
xchg
ret
cmpsb
pop
orl
pop
push
cli
xlat
into
xchg
push
xchg
push
mov
jl
and
inc
or
inc
fiadds
inc
out
cli
pop
mov
mov
scas
jne
pop
fwait
pop
sbb
pop
jg
and
mov
mov
push
sbb
mov
gs
adc
xor
fstpt
ja
and
sbb
stos
into
jge
xchg
jnp
lret
dec
mov
dec
ret
js
xor
mov
or
outsb
cmpl
mov
and
dec
lret
stos
push
xor
stos
push
adc
mov
sbb
sbb
repnz
in
xor
and
cmp
or
mov
scas
push
jne
push
out
inc
cmpsb
lods
pusha
imulb
test
dec
pop
push
icebp
lcall
jne
imul
cmc
and
repnz
std
mov
ss
loopne
and
mov
mov
adc
pop
inc
fldl
push
sub
xor
mov
cmp
lcall
lods
testb
test
sub
sahf
mov
inc
js
bound
jb
movsl
push
dec
aam
aas
es
out
aam
mov
jecxz
cld
lds
or
xchg
jle
cmp
insl
push
test
inc
inc
test
dec
pop
mov
data16
push
enter
pop
enter
mov
js
out
js
mov
inc
cmp
inc
xlat
inc
inc
fs
sub
add
xor
mov
sub
lcall
nop
orl
repz
movd
int3
push
lea
aam
cltd
mov
mov
xchg
hlt
call
pop
inc
ds
andb
mov
adc
icebp
stos
stos
jmp
aas
stc
pop
aas
add
cmc
pop
je
lods
xchg
das
sub
aam
lock
rolb
pop
push
xlat
pop
sti
pushf
push
adc
std
pop
inc
push
out
push
test
xchg
adc
subl
imull
pushf
adc
adc
cli
sub
fldl
xchg
mov
enter
nop
pop
fsubrs
pop
test
dec
mov
sbb
mov
js
test
lahf
shll
insb
or
lock
cmp
hlt
xchg
mov
pop
mov
es
sub
sarl
push
js
push
pop
sbb
push
push
pop
scas
dec
pop
loop
dec
dec
push
push
dec
jb
jnp
pop
loop
testb
and
inc
add
inc
pop
dec
add
jmp
cmp
or
jp
popf
push
cwtl
xor
lds
andb
bound
pop
pop
xor
cmpsb
lcall
fidivl
mov
fstpt
pop
push
jne
mov
jbe
es
sbb
fmuls
rep
adc
xor
cmpsl
int
or
outsl
mov
hlt
fbld
jecxz
lea
in
sub
and
xchg
pop
dec
pop
lock
cwtl
fs
loop
lcall
add
jle
xchg
in
idivl
fwait
hlt
cmp
and
addr16
mov
test
inc
setns
ja
mov
push
dec
push
mov
fistps
adc
aaa
fisubs
sbb
pop
repz
mov
jbe
mov
cmp
or
mov
push
push
jmp
inc
sbb
lcall
je
mov
rclb
and
leave
lods
and
gs
inc
icebp
stc
cmp
inc
aad
mov
movsl
pushf
push
jne
push
push
loop
dec
ja
xchg
bnd
mov
loop
sbb
shrl
fsubrs
test
jg
fisttpll
data16
arpl
mov
mov
cwtl
daa
cmp
or
out
aas
in
sbb
sub
mov
in
xchg
stc
cld
mov
movsb
push
das
sbb
sub
push
push
test
xor
jge
adc
in
lods
nop
ljmp
loop
movb
leave
fadds
xor
roll
push
ja
fisubrs
test
push
ss
pop
sbb
jp
imul
jge
pop
cld
xor
cmp
pusha
pop
mov
ret
xchg
fxch
push
in
ret
rcll
sub
jae,pt
outsb
clc
jo
ss
test
xchg
push
test
fnstsw
clc
cwtl
mov
cltd
outsl
push
roll
add
xchg
ror
out
add
inc
movsl
popa
test
stos
lods
push
sub
nop
bound
add
mov
xor
jnp
pop
pop
std
and
inc
or
shl
jmp
and
push
cs
es
push
aas
sbb
push
pop
sbb
push
mov
or
or
mov
or
aas
pop
cwtl
loopne
push
push
inc
cld
mov
sub
pop
sahf
add
mov
call
push
filds
fldcw
leave
pop
mov
jl
jg
aam
in
sti
aas
xor
int3
jnp
xor
or
xchg
lods
xchg
mov
enter
dec
mov
outsb
incl
mov
cwtl
pop
inc
inc
and
and
subb
loop
sbb
and
sub
mov
mov
sbb
pop
push
and
or
xchg
sub
mov
xor
in
test
cmp
popa
mov
clc
adc
inc
jmp
pushf
inc
scas
mov
mov
loop
js
scas
loope
add
test
test
mov
push
or
sub
push
adc
and
mov
add
insl
loope
test
cmpsb
pop
and
rcrl
mov
movsb
clc
mov
push
clc
frstor
nop
dec
out
loope
aam
push
movsl
jg
imul
mov
in
fsubrl
add
pusha
popa
push
xlat
ljmp
xor
lea
cmp
sbb
or
js
leave
cmp
repz
mov
in
adc
adc
push
out
call
pushl
inc
mov
subb
std
or
je
sub
and
int
xor
mov
cmp
push
in
rcll
jp
xchg
ret
inc
mov
cmp
bound
call
subl
push
gs
mov
lods
repnz
xchg
das
mov
push
xchg
pop
sti
iret
into
push
xor
pop
pop
pop
subb
nop
cmp
movsl
fstps
add
imul
mov
pop
cmp
mov
adc
jbe
imul
jmp
mov
enter
push
test
bound
jns
lret
stc
outsl
imul
or
daa
daa
imul
rcll
sub
iret
repz
mov
inc
cwtl
fadd
imul
push
divl
pusha
idivl
cld
mov
dec
aad
lock
xor
outsl
fcmovnbe
pop
fimull
test
mov
push
dec
dec
adc
dec
ja
jge
mov
data16
mov
lcall
stos
inc
pop
popa
fdivrl
repz
cmpsb
aad
adc
sbb
pushf
mov
add
mov
scas
jnp
inc
and
pop
cld
cmp
lock
inc
js
adc
lock
cmp
fwait
rorl
jne
xchg
push
imul
scas
xor
mov
adc
fcomps
cmpsb
xchg
jne
add
insl
mov
pop
iret
sub
cmc
cmp
or
mov
imulb
mov
sbb
lcall
lret
cltd
xor
mov
xor
dec
mov
add
or
sub
inc
jno
mov
push
sbbb
mov
pushaw
daa
xorl
ljmp
add
and
lods
sbb
push
jecxz
dec
push
lds
push
cwtl
dec
mov
mov
cmp
sarl
cmp
loop
pop
sub
push
push
sbbb
pop
inc
cltd
pop
nop
loopne
mov
lret
xchg
aaa
or
in
or
adc
and
xchg
cmp
rorl
enter
stos
andl
arpl
mov
sbb
adc
aad
mov
out
sub
loope
fdivrl
xchg
mov
xchg
inc
rorb
mov
out
inc
sub
and
shlb
cmpb
imul
dec
addr16
mov
xchg
dec
ret
arpl
popa
jns
loop
xorl
mov
scas
adc
sbb
mov
mov
ds
lock
enter
icebp
xorb
xor
shrl
xor
daa
mov
loopne
out
lods
fistps
add
and
mov
dec
fstpt
sbb
push
push
out
mov
mov
loop
pop
mov
xchg
inc
or
dec
inc
jmp
push
inc
mov
or
adc
ficompl
cmp
or
push
jg
dec
jecxz
inc
add
add
xor
sbbl
mov
outsb
mov
jle
mov
sti
jp
push
adc
divb
adc
lret
imul
pop
cmp
lods
mov
icebp
mov
rcll
inc
inc
out
in
test
inc
push
ret
shlb
xor
inc
stos
sti
add
push
push
jmp
sti
add
pop
roll
push
orb
push
dec
xchg
and
pop
mov
int3
mov
sub
ljmp
arpl
loopne
xor
and
mov
mov
repnz
xrelease
ss
mov
repnz
dec
cmp
out
int
insb
dec
out
pop
cmc
cmpsb
inc
cltd
clc
ds
add
in
lds
scas
cwtl
fisttpll
pop
sbb
mov
xor
pop
inc
xchg
testb
cli
mov
inc
data16
out
mov
cmp
xor
fwait
imul
test
cmp
dec
lret
mov
pop
jne
cmc
mov
insb
pop
loop
leave
mov
mov
fcomps
pushf
ficompl
int3
lds
adc
in
inc
mov
aam
xor
mov
stos
xor
xchg
fcmovu
mov
test
jge
inc
mov
mov
aam
push
pop
mov
push
icebp
in
mov
rep
pmaxub
inc
add
jg
loope
sub
adc
add
mov
and
pusha
pop
movsb
test
sbb
inc
sub
xchg
addb
gs
mov
aas
mov
pop
xchg
fistps
adc
or
cmp
sbb
jo
js
mov
lock
popf
inc
add
xor
mov
rcll
ss
and
dec
fistpl
mov
je
mov
aam
jmp
jle
orl
and
test
cmp
and
nop
jae
push
push
mov
test
cmp
mov
or
js
fstpl
cmpsl
or
leave
stos
pop
cmp
sub
popa
mov
or
or
aam
adc
xchg
mov
mov
mov
mov
dec
test
das
cmp
stos
jmp
lret
push
out
adc
jge
sar
adc
add
push
pop
jbe
int
fnstsw
decb
inc
loopne
xchg
idivl
or
fs
pop
xlat
push
aad
aas
xor
ror
mov
xor
adc
mov
dec
rcr
add
call
xlat
sahf
or
fldenv
add
xor
out
add
xchg
xor
rcrl
loop
call
mov
jl
inc
pusha
push
push
stc
jmp
mov
and
loop
jo
push
pop
pop
lahf
inc
mov
mov
popf
xor
enter
dec
ja
xchg
adc
dec
dec
repnz
xlat
stc
imul
ja
fs
mov
pop
add
lret
inc
addr16
sbb
fldcw
cmp
push
push
add
jmp
push
enter
add
sbb
fs
cltd
pop
in
push
movsb
sbbb
lahf
push
or
sub
mov
adc
scas
daa
pop
xor
mov
mov
sub
mov
inc
frstor
or
and
sub
mov
adc
sbb
dec
and
push
loop
jl
cmp
mov
mov
inc
jg
cmpsl
adc
lea
xor
and
mov
lret
mov
loop
fnstenv
imul
push
repnz
push
xchg
mov
imul
int3
fs
pop
icebp
inc
push
xchg
and
jle
je
cmp
cmp
sti
stc
xor
mov
jg
push
pop
into
icebp
cs
into
sub
fildl
es
inc
add
xchg
mov
in
cmpsl
pushf
rcrl
push
adc
xlat
into
popf
sub
mov
pop
popa
sbb
sub
daa
push
movsb
pop
das
add
jg
mov
mov
cwtl
or
add
in
repnz
bnd
push
jp,pn
lcall
pop
int
shlb
mov
or
xchg
xor
mov
sbb
xchg
xor
arpl
push
cwtl
sbb
mov
ja
rcl
jbe
psubb
loopne
sbb
nop
adc
or
add
test
fstp
movsb
movsb
pop
pop
pop
into
jge
fists
pop
pop
outsb
in
cmp
pop
cmp
sbb
lret
jnp
push
das
lock
mov
xchg
jbe
jl
mov
pop
sbb
cld
imul
into
pop
xor
icebp
std
cld
pop
insb
test
sar
cli
fwait
and
fcompl
divb
pop
out
outsl
jmp
mov
jno
push
cmp
sub
icebp
sub
hlt
xchg
mov
pop
adc
daa
and
js
roll
push
push
dec
mov
hlt
in
mov
movsl
call
cmpsl
sbb
loope
adc
inc
sub
scas
jbe
je
les
fsubp
cld
std
ljmp
insb
imul
sub
add
jno
adc
mov
fadd
pop
push
jb
mov
mov
daa
add
repnz
xor
jecxz
xor
shll
mov
dec
leave
pop
fcmovb
and
fxch
in
inc
pop
jne
aad
and
cmp
jne
sub
ljmp
addr16
mov
mov
aas
pusha
jecxz
and
cmp
addr16
mov
popa
popf
imul
cld
add
ret
inc
popa
insl
ss
push
jmp
jae
or
or
pusha
test
or
icebp
fstpt
or
cmpsl
and
lret
daa
and
push
or
or
xor
jmp
cs
mov
addl
add
lock
out
fbstp
cmpsl
jg
lcall
add
aam
out
outsl
shlb
and
adc
int3
push
inc
pop
mov
sub
push
pop
push
push
sub
push
jecxz
dec
sbb
inc
rorl
mov
fs
rolb
adc
stos
mov
xchg
sub
mov
jecxz
jnp
dec
fistl
push
mov
cmp
cmp
and
jmp
mov
dec
jne
mov
xchg
imul
pop
test
test
adc
lahf
and
clc
bound
enter
movsb
testl
divb
movsl
xor
xlat
push
inc
dec
or
dec
add
add
das
mov
outsl
outsb
push
aam
dec
ficompl
push
push
mov
popl
hlt
add
jbe
shll
jg
nop
imul
push
movsl
stos
xchg
jmp
out
ret
pop
inc
test
xchg
test
jae
dec
push
dec
sub
sbb
fwait
dec
mov
shl
out
push
insl
stos
push
or
pop
dec
xchg
push
mov
jge
pusha
fucom
inc
shlb
shlb
xor
jnp
pushf
or
xor
lret
sub
jge
xchg
in
cmpsb
mov
addr16
inc
mov
cmpsl
es
push
xchg
divl
data16
push
movl
xchg
pop
xchg
addr16
inc
mov
cmpsl
es
push
xchg
divl
data16
push
movl
mov
xorb
lea
inc
mov
cmpsl
and
jb
data16
pop
mov
pop
jb
ja
addr16
push
inc
push
mov
cmpsl
mov
push
outsl
push
sub
cmp
popa
adc
inc
into
push
fisubrs
push
shlb
sahf
loop
repz
pop
rcrl
mov
sbbl
jno
inc
into
push
fisubs
scas
xor
loope
icebp
jle
outsb
rcrl
dec
mov
orl
jno
inc
push
and
adc
cmp
ret
push
adc
mov
addr16
in
cmc
lret
dec
or
inc
lea
lods
and
and
stc
push
pop
out
jl
aas
pop
cs
imulb
rclb
sbb
xchg
sbb
lret
cli
dec
jb
jmp
mov
mov
lock
push
popa
mov
push
out
dec
mov
jle
adc
jl,pt
and
mov
jns
sbb
hlt
pop
les
lods
fimuls
lcall
or
icebp
inc
xor
pop
loope
push
jnp
scas
adc
movsl
mov
adc
pop
mov
dec
inc
icebp
xchg
push
mov
ficoms
and
adc
rcll
mov
push
xchg
jp
mov
incb
iret
pop
filds
shrb
xchg
repz
pop
xchg
push
mov
xchg
xor
inc
lock
in
loope
pop
xchg
add
fildl
mov
repnz
pop
xchg
pop
mov
pop
aam
call
scas
jno
pop
scas
xor
fs
add
icebp
jle
dec
rcrl
cs
orl
jno
inc
into
push
fisubs
scas
xor
loope
icebp
jle
dec
rcrl
cs
orl
adc
out
cs
xchg
ret
fistl
mov
clc
and
mov
mov
js
inc
repz
loope
jb
stc
mov
imul
aaa
gs
mov
push
dec
fsubrs
pop
adc
sub
rol
adc
ret
arpl
push
loop
xor
jns
sbb
mov
push
ret
push
mov
das
std
mov
mov
aam
mov
dec
or
adc
sub
xchg
lds
insl
lret
adc
aad
sub
pushf
scas
push
mov
fsubl
mov
push
das
std
icebp
xchg
mov
xor
jle
in
int
jbe
and
in
dec
mov
fldl
lock
jge
pop
mov
and
jl
mov
sbb
aas
mov
adc
sbb
fdivrl
push
loop
stos
sbb
adc
inc
jp
jle
jg
add
lahf
or
jae
xchg
ljmp
hlt
mov
into
ret
sbb
call
xchg
push
adc
xchg
enter
push
jecxz
and
jns
lods
fs
or
test
mov
cmpsb
leave
rcrl
mov
mov
fimuls
adc
sub
mov
cmp
push
sbb
jbe
cmp
mov
push
dec
mov
data16
xor
jmp
addr16
fsubr
cmpsl
sub
or
int3
ja
pop
pop
pop
dec
out
pop
xchg
stc
je
mov
push
lea
cs
push
lds
pop
je
add
jns
test
cmpsb
mov
xor
lcall
sahf
int3
jne
insb
cs
mov
push
cs
rcll
mov
call
ret
jns
push
and
sti
scas
xchg
lahf
or
xchg
sub
stos
inc
inc
sbb
and
in
pop
out
ret
ja
movsl
and
sbb
add
sbb
sub
js
cmp
pop
nop
mov
or
std
fldenv
push
cs
sbb
aad
mov
out
fisttps
into
rcrb
clc
leave
sbb
loope
jg
fnstenv
bound
mov
dec
xor
push
out
je
inc
jle
adcl
cmp
and
cmp
es
divb
pushf
inc
ja
push
sub
and
xor
adc
jns
jp
loopne,pn
test
dec
xchg
pop
inc
mov
insb
out
js
mov
insl
jno
mov
into
pop
jnp
pushf
adc
ljmp
sub
aad
hlt
cmp
bound
or
jnp
int
fistpl
inc
mov
xor
mov
and
mov
xchg
xlat
cmc
xorl
cmp
mov
mov
mov
fbstp
jbe
xor
inc
sahf
pusha
cli
lea
lret
push
arpl
xor
xor
or
mov
insb
jbe
lds
jp
enter
cmp
je
xor
stos
hlt
div
cmp
dec
fldt
aas
sbb
loopne
mov
jne
mov
pop
adc
pop
mov
cltd
aas
inc
add
cmpsb
jmp
icebp
lea
mov
pop
mov
adc
dec
clc
rcll
repz
pop
sub
pop
sub
repz
loope
adc
jmp
std
dec
mov
lret
sub
pop
push
adc
call
insb
mov
test
in
dec
std
sub
out
inc
inc
push
pop
out
fs
aas
sahf
mov
adc
mov
movd
dec
xchg
fisubrl
je
sbb
sbb
jno
xchg
lds
les
rcrl
lock
cmp
push
pop
shll
and
jge
lock
sbb
mov
inc
lods
add
test
pop
lar
jae
in
out
repnz
movsl
into
jnp
fldenv
cmp
and
jmp
jno
in
sbb
lods
orb
add
push
aaa
mov
push
inc
cmp
pop
in
and
mov
stos
jle
sub
fdivrl
les
lcall
push
and
sbb
cmc
mov
push
sub
adc
sbb
sbb
jns
fldenv
rcl
or
and
insl
fidivs
pop
fsubp
pop
push
add
call
mov
imul
jo
ljmp
cltd
rorb
mov
dec
or
call
mov
mov
loope
dec
shll
mov
mov
xor
pop
xchg
inc
movsb
ret
inc
jg
adcb
jmp
insb
shll
add
and
cmp
ret
jle
inc
push
push
das
push
push
sub
jb
lret
cmp
push
push
dec
fs
test
mov
or
insb
cmc
push
stc
lods
xor
cwtl
push
ja
subb
pushf
mov
cmpsl
mov
fdivr
les
pop
loop
pusha
outsl
sbb
adc
inc
jns
and
pop
aaa
dec
fcoms
mov
jp
in
outsl
push
sub
aam
fs
stos
and
loope
inc
mov
daa
enter
push
ret
test
push
into
stos
mov
push
aas
sbb
pushf
inc
bound
bound
outsb
std
decb
inc
cmp
mov
jae
xor
push
mov
cmp
fldl
insl
xor
push
je
push
outsl
gs
xor
mov
sbbl
fstl
mov
loop
mov
or
xchg
jb
in
das
mov
add
and
cmpsl
and
adc
cmpsb
das
repz
jno
sub
out
cmp
outsl
dec
mov
mov
idivl
cmp
inc
adc
orb
add
mov
xchg
mov
cmp
push
into
fs
test
shll
mov
scas
and
cmp
mov
pop
fsts
sub
enter
or
push
lret
sub
rolb
orl
incl
pop
dec
incb
jecxz
inc
sbb
push
fimull
mov
test
dec
mov
dec
popf
fcmovnbe
add
jbe
xor
xchg
and
inc
popa
das
mov
sub
enter
mov
cmp
jmp
stc
push
adc
pop
or
mov
iret
scas
addr16
mov
jmp
jno
adc
lock
pop
push
cmpsl
sub
outsb
dec
shrb
pop
lcall
mov
fidivl
daa
xchg
bound
jae
mov
pop
sbb
cmp
je
inc
dec
mov
mov
movsb
jmp
jns
lods
xor
mov
xor
inc
jecxz
aas
add
std
out
imul
js
cmp
insb
aad
xor
sbb
xor
pop
push
mov
sbb
fisubrl
js
repnz
popa
movups
mov
daa
mov
imul
fxch
test
pushf
int
test
repnz
aas
adc
inc
mov
xor
in
xchg
fimuls
jnp
mov
inc
fistpl
lahf
fisubl
fiadds
stc
out
repnz
xchg
sbb
inc
repz
xchg
pop
je
dec
push
pusha
out
dec
lahf
mov
xchg
dec
mov
aaa
or
fsts
arpl
cmp
mov
fidivl
data16
jg
fadds
mov
out
mov
jno
inc
test
jb
adc
mov
push
repz
sti
inc
or
pusha
ret
mov
jge
mov
inc
or
and
jmp
mov
push
lret
or
xor
sub
test
sub
repz
xchg
sub
hlt
mov
mov
add
fwait
outsl
fadd
into
push
icebp
or
cmp
sbb
or
xor
cmp
shrb
mov
icebp
xchg
push
mov
pop
cmp
pop
xchg
loope
test
in
mov
bound
adc
cld
adc
cwtl
or
sbb
popa
mov
int
push
xchg
pop
ss
and
icebp
sahf
aad
push
inc
mov
add
mov
sti
addb
mov
push
leave
or
mov
insb
push
test
ret
movsl
mulps
jge
or
and
fldt
stos
lods
outsb
enter
jge
loopne
lods
xchg
aam
repnz
imul
call
adc
adc
jbe
pop
push
jns
insb
mov
push
pusha
jge
cmc
cmp
arpl
ds
fsubrp
and
mov
imul
sub
push
xchg
sar
or
mov
jg
cmp
aam
or
sbb
int
out
faddl
mov
stos
lret
and
cwtl
gs
push
jo
test
fcomp
ds
sbb
aas
or
cmpsl
mov
xchg
add
mov
add
and
loopne
pop
inc
xor
test
and
gs
hlt
xchg
mov
cmc
arpl
push
dec
sbb
orl
sbb
arpl
jns
pop
xlat
enter
aas
cmp
adc
inc
imul
arpl
mov
cmpsb
test
mov
pop
xchg
cmpsl
pop
out
xchg
jne
mov
aam
sub
sub
and
je
sbb
push
xor
mov
pusha
int
push
test
ss
mov
sub
or
sub
cmp
scas
adcl
sbb
fstps
lods
mov
aam
xchg
in
jns
fisttps
inc
xor
inc
in
adc
hlt
ljmp
cli
cwtl
and
xor
mov
addb
int3
cmpb
daa
dec
sub
dec
jle
jp
add
inc
lret
xchg
inc
cld
out
daa
mov
mov
adc
lret
scas
test
sub
movsb
mov
jbe
lods
scas
mov
iret
xchg
insb
jge
dec
cld
icebp
dec
pop
fisttpll
jne
das
pop
mov
int
sti
fnstsw
jecxz
loopne
sbb
mov
pop
into
xchg
mov
push
roll
mov
xor
xor
mov
cmp
leave
popa
fidivs
sub
lcall
add
inc
mov
jmp
sbb
out
mov
dec
mov
lods
lods
mov
or
push
sub
enter
sub
popa
sbb
pop
cmpsl
sub
rclb
in
cmp
fcoml
leave
xchg
jg
xchg
jle
push
jmp
pop
aad
push
mov
in
mov
xchg
jge
loope
mov
lods
aam
orl
movsl
mov
incl
or
cs
mov
xor
push
mov
jb
aam
jmp
inc
push
lds
enter
cmpsl
add
push
sbb
sbb
stos
xor
sub
pop
xor
sbb
rclb
push
filds
sahf
add
xchg
cmp
in
mov
incb
adc
nop
mov
repz
dec
cmp
dec
pop
mov
adc
cli
iret
or
dec
inc
fsubl
imul
dec
adc
shlb
test
xor
test
out
in
iret
dec
into
cmpsb
ret
icebp
sub
in
lods
xor
pop
inc
sbb
out
repnz
aaa
je
inc
xor
push
in
xchg
push
jecxz
cld
ljmp
dec
mov
aaa
mov
inc
inc
mov
xchg
mov
cmpsl
shlb
loopne
push
push
push
mov
push
pop
lret
stc
data16
pop
pop
pop
and
aaa
push
xchg
dec
outsl
mov
inc
sub
dec
push
ret
dec
mov
and
roll
sahf
loope
cmp
addr16
nop
xor
sti
sti
xchg
add
pusha
jle
xchg
mov
idivl
bound
cs
in
outsb
sub
mov
cli
pop
inc
or
insb
adc
clc
popa
inc
push
cwtl
sti
imul
inc
pop
lds
add
lock
out
lods
mov
dec
call
inc
imul
pop
nop
and
cmpsb
adc
clc
cli
mov
jle
fists
sbb
push
or
jae
aaa
mov
fldcw
call
testb
inc
cltd
lods
ds
dec
sub
push
inc
loope
addr16
xor
pushf
and
or
cmp
jecxz
cmp
int3
dec
mov
lods
push
pop
repnz
sub
rcll
mov
mov
jmp
sbb
push
mov
sbb
ficoml
rolb
inc
das
mov
jb
lods
pushf
jmp
in
icebp
nop
fimuls
das
jg
inc
cmpb
cmc
inc
daa
add
packsswb
cmp
dec
test
adc
mov
lds
gs
mov
mov
ja
ret
sub
lods
loope
shrb
pusha
les
std
mov
mov
sub
xchg
xor
les
aas
into
dec
mov
sbbb
push
add
faddl
es
int
pusha
mov
ljmp
ret
cli
ss
loopne
imul
nop
add
jns
movsb
daa
add
and
fiadds
cmp
movsb
addr16
test
inc
mov
pop
orl
push
in
pop
scas
or
mov
pop
cwtl
jmp
inc
xchg
sub
sti
loope
stos
sub
xchg
movsb
dec
pushf
xchg
shr
stc
fsubrs
into
adc
dec
in
mov
and
movsb
xchg
movsb
dec
mov
adc
cmp
cli
sarb
cmpsl
inc
cmpl
fwait
pop
cmp
nop
aaa
jne
add
jno
jne
aam
xchg
xor
xchg
rol
es
jmp
mov
incl
ficoms
jo
or
dec
inc
cwtl
xor
mov
sahf
or
ja
mov
pop
mov
out
stc
jo
add
nop
and
xchg
jl
in
push
mov
ret
repnz
mov
flds
sbb
ds
mov
mov
jns
adc
addr16
cmp
mov
or
mov
pop
pop
jne
xor
rcl
inc
adc
clc
push
push
lds
mov
xor
ja
adc
xor
mov
sbb
in
stos
daa
loop
jl
cmp
xlat
ljmp
inc
adc
cmp
dec
outsb
test
orl
pop
xlat
repz
or
sti
imul
loopne
and
sbbl
ss
std
hlt
push
inc
xor
and
or
pushf
ret
in
cmpsb
cmp
popa
stos
dec
lahf
cmc
inc
mov
stos
or
jno
mov
call
jmp
cmp
mov
or
mov
mov
cmp
push
dec
mov
lock
push
cmp
and
pusha
add
stos
insb
ss
roll
cmpl
sti
and
das
icebp
test
pop
loopne
jp
in
out
push
orb
mov
dec
sub
jb
pop
jecxz
xchg
fcmovu
adc
xchg
mov
fmuls
cmp
movsb
pushf
fadds
xchg
dec
xchg
das
iret
mov
pop
or
jne
xchg
ret
ss
cmpsl
adc
jecxz
push
fimull
in
jo
gs
inc
rcl
stos
iret
add
adc
add
and
push
cmp
jle
sbb
push
movsl
sub
out
fwait
add
into
mov
lods
test
or
or
lods
add
into
mov
loop
jecxz
or
cltd
cld
jp
pop
faddl
mov
push
adc
cmp
jecxz
movsb
shrb
lcall
mull
fiadds
cmpsl
pushf
jnp
sub
mov
push
into
xor
mov
shll
xchg
mov
sbb
and
push
push
inc
shll
lret
repnz
lret
fbld
xor
mov
xor
inc
cmpsb
cwtl
mov
test
lcall
rcrb
repnz
jns
mov
jl
rclb
in
xor
or
das
insb
int
mov
push
dec
movsl
lret
loop
dec
mov
mov
lock
sbb
push
into
shll
fcompl
bound
ss
or
orb
in
mov
push
mov
xor
das
inc
pop
adc
dec
fidivs
imul
or
xor
movsb
cmp
jge
jnp
lock
push
pop
dec
jne
in
mov
repnz
mov
lahf
stos
push
xchg
sub
out
pop
in
add
mov
adc
adc
cmpsl
pop
fdivr
sarb
adc
xchg
in
xor
or
mov
push
and
jge
in
mov
pop
push
and
push
or
jmp
xchg
xor
sbb
je
add
cmp
adc
fcmovu
aad
xchg
xor
adc
outsb
push
pop
lahf
mov
cld
xchg
test
or
jae
ret
push
pop
movsl
fisttpl
push
push
stos
push
mov
pushf
mov
push
cs
repz
icebp
adc
adc
mov
rcr
mov
popf
loope
sbb
shll
mov
mov
pop
mov
in
xor
in
jbe
cltd
aaa
cmp
or
mov
ret
sub
xor
clc
mov
mov
jns
jecxz
test
lahf
unpcklps
lea
mov
shll
mov
lret
rcrb
jnp
loope
in
cmp
xchg
mov
lret
stc
dec
outsb
std
lret
jno
das
aas
mov
ret
gs
push
or
enter
jne
lahf
and
mov
adc
ljmp
test
je
pslld
and
mov
lods
sbb
arpl
cmp
testl
leave
ret
sub
leave
inc
xor
inc
ss
jae
data16
and
sub
daa
sarb
add
sub
movsb
sti
mov
jg
imul
test
out
jle
in
cmp
or
pop
push
daa
adc
adc
ss
inc
outsl
cmp
and
push
pop
pop
push
add
pop
jns
sbbb
cmp
in
pushf
fsts
pushf
stc
xchg
lods
and
out
jo
arpl
mov
sbb
addl
xor
movsb
mov
cmp
cmpsl
negl
and
cmpsb
mov
pop
inc
out
mov
mov
fstps
jl
adcl
out
dec
and
mov
sbb
aam
mov
iret
push
stos
sub
outsb
sub
cmp
shr
adcl
faddl
das
push
stc
lea
das
fsub
int
push
adc
out
lcall
int3
call
jae,pn
iret
add
dec
cmc
addr16
bswap
sbb
pushf
sahf
and
shrb
orl
das
push
xor
push
bound
adc
push
dec
sbb
aad
xchg
clc
push
insl
jmp
adc
rorb
lcall
mov
out
push
cltd
push
add
dec
push
mov
call
jge
adc
bswap
cmpsb
ret
popf
jg
sarl
pop
loop
data16
imull
adc
scas
push
ret
inc
hlt
cs
icebp
lret
mov
inc
sbb
xor
sbb
xor
and
mull
xchg
add
repnz
mov
pop
fwait
aaa
inc
xor
in
sub
rorl
and
and
jp
insl
int
cmp
inc
and
jle
adc
sahf
mov
mov
shll
scas
cmc
sub
rcr
mov
aaa
jo
xchg
dec
mov
push
push
fnstenv
movb
je
shlb
loop
add
shrb
push
shll
push
iret
insl
fdivrs
out
add
cld
push
lods
pop
or
mov
cmpsb
cmp
jmp
notl
inc
jnp
test
sub
sbb
out
fnstenv
mov
adc
lcall
adc
sbb
das
int3
xchg
ret
and
sub
mov
pop
mov
sub
mov
fistpl
and
pop
std
pop
mov
pushf
into
gs
je
arpl
cmp
test
mov
daa
mov
scas
xor
push
loopne
rorb
inc
sbbb
lret
pop
shl
push
and
xchg
xchg
adc
addr16
ja
fldenv
inc
xchg
jle
shr
adcl
mov
xor
shrb
not
in
mov
jo
push
fstpt
mov
adc
pop
clc
arpl
js
mov
jns
in
or
mov
ret
xor
mov
ret
fdivrp
imul
push
aaa
sub
pop
inc
mov
decb
je
add
inc
dec
or
mov
and
adc
pushf
popa
xor
sar
cmc
incb
add
shl
test
pop
inc
push
popa
aad
pop
mov
sar
sahf
sub
push
stos
add
jle
push
fisubs
scas
xor
loope
icebp
jle
dec
rcrl
cs
orl
jno
inc
into
push
fisubs
scas
xor
loope
icebp
jle
dec
rcrl
cs
orl
jno
inc
into
push
fisubs
scas
xor
loopne
icebp
jle
dec
rcrb
cs
orb
push
popa
out
jno
inc
into
push
fisubs
scas
xor
push
outsb
push
aam
dec
shrl
cmpsb
cmp
jns
imul
and
xor
pop
sbb
sbb
cltd
mov
leave
xchg
cltd
loop
repnz
adc
sub
cmp
push
pop
bound
jns
mov
mov
loop
repnz
sbb
or
cmp
sub
pop
dec
dec
pop
jp
gs
mov
mov
xchg
mov
insl
outsb
dec
pop
aad
scas
cwtl
push
push
lcall
pop
out
mov
cs
std
xor
add
movb
mov
stc
pop
test
test
jmp
adc
imul
push
or
push
shlb
push
orb
repnz
dec
jns
leave
xchg
ljmp
add
ret
sub
mov
cli
mov
lcall
loop
in
in
incl
adc
cmpsb
jb
bound
mov
insl
cwtl
mov
mov
push
call
adc
insl
sub
pop
andb
mov
mov
add
ret
cld
repnz
ret
sbb
sub
pop
bound
jns
mov
mov
loop
jmp
jno
ja
inc
outsl
push
jg
es
sbb
pop
or
in
lock
scas
movsb
mov
xchg
pushf
add
push
inc
sub
outsb
ss
ja
push
aaa
jns
int3
xchg
cmc
out
aad
cmpsb
mov
xchg
imul
inc
pop
xor
and
jb
orb
mov
loop
repnz
add
adc
and
xor
inc
dec
push
pop
bound
jns
mov
mov
loop
repnz
add
rorl
fistpl
insl
mov
fnstsw
sub
lods
nop
loope
pop
repnz
jle
bound
inc
inc
dec
addb
push
das
test
push
inc
mov
jge
aad
in
rcrl
and
ficompl
sbb
in
test
xchg
jmp
add
sti
adc
jnp
adc
lods
dec
shrb
mov
or
or
mov
pop
mov
lcall
push
adc
push
das
xor
mov
mov
inc
aaa
ss
and
or
xor
cmp
pop
push
sub
pop
mov
sbb
lock
mov
inc
lahf
arpl
mov
nop
mov
and
push
mov
out
inc
mov
sbb
xchg
pop
std
cmp
adc
nop
ds
scas
jnp
xchg
aam
cmp
popa
xchg
pop
xchg
and
popf
xchg
inc
cld
shl
icebp
clc
test
arpl
mov
movb
inc
test
cmp
push
cmpsl
xor
xchg
and
loope
jmp
add
icebp
test
pop
test
in
xchg
inc
rorb
insb
pop
dec
fisubrs
mov
mov
aaa
fsub
sarl
inc
loopne
cmp
lods
jnp
xchg
push
das
pop
xchg
cmovns
mov
push
add
test
out
jp
pop
lahf
js
repnz
popf
and
mov
add
imul
jp
mov
lods
mov
popf
mov
sub
fiaddl
xchg
xchg
sub
mov
jbe
xchg
scas
pop
sbb
loopne
stos
jp
cmp
aaa
ret
xor
and
movsl
aas
xor
cltd
xor
jp
jmp
mov
xchg
pushf
and
and
repz
sbbb
ficoms
inc
sbb
lds
add
ds
test
sbb
aad
inc
cwtl
jo
mov
xor
loopne
inc
lock
xor
push
push
aaa
loopne
repz
aas
outsb
repz
out
sub
sub
xchg
mov
aaa
js
xor
in
insl
arpl
add
mov
jge
cmpsl
inc
push
inc
popf
aad
mov
test
xchg
fwait
stc
roll
addr16
mov
xchg
sbb
pop
add
dec
jge
xchg
cltd
adc
mov
dec
add
mov
push
cmp
dec
mov
xchg
jecxz
stos
into
mov
stc
inc
bound
inc
fs
push
jmp
and
testl
cmp
movsb
neg
sub
pop
addb
cmpsl
addb
popa
xchg
mov
in
cmpl
inc
insb
dec
jecxz
iret
hlt
int
xchg
enter
dec
push
xchg
inc
mov
nop
sub
xchg
xor
cmp
xor
mov
xchg
out
push
mov
pushl
jp
popa
fidivs
fisttpll
in
fst
xor
fwait
inc
or
add
xchg
sbb
lret
es
fcompl
push
inc
lods
fs
xchg
lods
icebp
imul
inc
and
addr16
stc
insb
jmp
sbb
ss
pusha
pusha
out
xchg
popf
int
and
mov
imul
das
pop
mov
or
divb
fdivs
popa
sbbl
cmpsl
je
mov
scas
inc
fldcw
and
enter
movsl
gs
test
xchg
je
lock
mov
xchg
and
lret
dec
in
xorl
shlb
in
push
mov
mov
addl
inc
int3
add
movsb
lods
xorb
and
mov
scas
cmp
sbb
stos
sti
sti
test
mov
sub
add
in
and
or
inc
sbb
mov
push
imul
lahf
loop
shll
cmp
dec
in
test
mov
xchg
int3
jg
or
pop
ss
repnz
pop
ss
mov
int3
aad
getsec
setne
ja
out
mov
and
lret
xor
jae
cmc
mov
andb
jbe
jge
sub
les
xchg
ljmp
sbb
pusha
cwtl
pop
cmc
fcmovnu
mov
stc
loopne
sub
nop
jae
adc
insb
xor
mov
outsb
mov
push
sbb
scas
mov
fs
mov
ljmp
hlt
movsb
jg
inc
loopne
stc
inc
ds
ret
ss
add
addr16
cmp
scas
pop
jl
dec
jp
addr16
or
xchg
cmp
insl
mov
add
mov
push
pop
inc
sbb
cmpsb
or
push
jg
adc
cli
outsb
add
mov
std
jl
repnz
lcall
mov
pusha
insl
push
cmp
xchg
xchg
mov
leave
ret
xchg
and
and
mov
mov
and
aad
mov
mov
xor
aas
cmp
pop
pop
xor
js
repz
add
add
or
out
xchg
int3
dec
loop
mov
mov
jle
mov
sbb
mov
out
aam
add
out
sbb
cltd
mov
andb
sub
adc
adc
sahf
mov
imul
xor
mov
lds
rclb
jbe,pn
clc
leave
test
in
inc
fwait
dec
mov
or
dec
pop
and
inc
add
test
adc
stc
outsb
and
inc
sbb
in
inc
mov
or
cmp
das
out
xor
cltd
hlt
aad
sbb
es
sbb
push
add
fiaddl
fwait
xchg
or
cmp
test
lods
inc
int3
gs
daa
sbb
cmpsl
mov
and
push
lods
icebp
or
jns
cmp
shrl
andb
mov
jne
push
enter
dec
es
inc
sbb
add
aad
cmpxchg
fsub
xchg
int3
dec
pop
jl
orl
call
xchg
add
lcall
sahf
mov
int
popf
add
ja
inc
adc
jmp
mov
adc
sub
mov
and
push
or
sub
pushf
push
mov
call
loop
pop
xlat
sbb
xchg
jnp
ljmp
dec
and
hlt
cmp
sbb
xchg
jg
out
xchg
mov
test
pop
addr16
xchg
jnp
fdivrs
push
gs
and
pushf
mov
cld
dec
insb
xor
repnz
pop
popa
xlat
cltd
shll
xchg
ss
mov
adc
and
repnz
inc
add
or
jge
xchg
mov
sub
outsb
inc
push
jnp
sub
icebp
lods
jns
fisttps
lea
xor
arpl
jo
sbb
push
mov
enter
cmp
or
lcall
mov
imulb
js
movsb
scas
jmp
clc
out
mov
jl
cs
int
dec
stos
cmpsb
aas
adc
pop
xlat
dec
and
out
dec
add
repnz
shlb
addl
xchg
lret
mov
jno
lret
mov
inc
ljmp
stos
mov
jnp
cld
ret
clc
mov
sbb
push
rcll
jg
inc
sbb
imulb
jnp
jecxz
insb
popa
sbb
loopne
stc
stos
xor
iret
cmp
std
and
nop
pop
mov
xchg
sbb
int3
sub
cmp
pop
shll
jg
call
jne
adc
negl
xor
adc
les
xorl
hlt
mov
in
cmpsb
ja
add
sbb
cld
sbb
sahf
adc
lock
pop
and
sub
std
stos
cmpsl
cs
sbb
nop
jb
stos
inc
icebp
orl
ficoml
inc
or
push
cmp
mov
stos
push
in
sbb
inc
lcall
mov
stos
pop
pop
loope
dec
dec
mov
xchg
push
xor
sub
test
data16
mov
cli
xor
sub
cs
clc
arpl
sahf
adc
or
imul
popf
xor
mov
inc
and
out
or
jle
cld
xor
cmpsb
mov
fimuls
scas
push
jnp
xchg
pop
ljmp
inc
sbb
or
and
mov
cld
xchg
movsl
and
sbb
mov
cmp
sbb
cli
xchg
stos
fadds
movsl
scas
adc
mov
repz
cld
clc
xchg
jecxz
sub
cli
mov
push
sub
mov
adc
add
cs
add
imul
dec
xchg
jbe
negb
insb
inc
push
jb
adc
pop
add
fwait
sub
add
lods
movsl
fs
fmul
nop
push
sub
cmp
inc
add
ljmp
xor
and
and
adcb
mov
mov
cmpsl
faddl
dec
xchg
ja
rcll
imul
inc
adc
mov
add
test
and
mov
scas
inc
xor
jno
xor
arpl
jl
stos
setnp
insl
xchg
lea
nop
scas
jno
sti
dec
jg
iret
testl
shrl
mov
push
mov
xchg
xor
loopne
sti
sub
xchg
imul
rol
and
xor
das
adc
xchg
movsl
int
js
push
and
jmp
mov
xchg
fsubrl
sub
int
dec
and
push
insl
lods
outsl
cmp
stos
icebp
aas
or
adc
call
faddp
xor
cmpsl
sub
shlb
pop
das
repz
mov
test
sbb
push
rcl
and
cltd
sbb
lret
outsb
add
mov
mov
pop
icebp
mov
or
cmp
loop
adc
jnp
ud1
or
xchg
shl
aaa
andb
jmp
adcl
push
imul
es
aam
les
insb
stos
loope
jecxz
pop
push
xchg
mov
mov
push
cld
cmp
adc
test
inc
pop
adc
clc
adc
mov
xchg
pusha
in
test
sub
push
roll
call
dec
xchg
pop
mov
test
cmp
jmp
std
int3
int3
insb
sub
outsb
enter
pop
rorb
mov
inc
or
or
mov
iret
in
pop
mov
or
sti
je
in
add
push
dec
mov
sub
push
cmpsb
sbb
push
adc
pop
pop
mov
cmpsb
sbb
cmp
pop
pushf
popf
stos
psubb
sub
ret
fdivrs
pop
into
bound
inc
jmp
push
lock
add
aaa
jl
loop
in
lret
jp
les
das
icebp
inc
cmp
incl
sbb
cwtl
ret
mov
rorl
rcrb
push
mov
jmp
jl
cwtl
call
push
loope
aaa
test
sti
cs
jbe
hlt
in
pop
dec
and
test
add
or
mov
stos
push
in
xor
movsl
das
js
mov
pusha
sub
xchg
gs
lret
cmp
clflush
arpl
test
rolb
in
xor
cmc
pop
xorl
out
dec
xlat
inc
sbb
das
mov
add
in
inc
dec
cld
or
xchg
add
stos
scas
mov
or
add
or
add
rcrl
aaa
and
xchg
and
sub
mov
push
inc
ja
inc
out
cmpsl
adc
subl
sbb
jne
adc
adc
xchg
pop
fistl
insb
mov
inc
mov
fsubrp
or
in
xlat
icebp
ret
sub
inc
dec
repz
jbe
add
or
imulb
lock
lret
adc
mov
add
jns
add
inc
sub
pop
lret
fcmovnu
mov
add
xchg
imul
or
scas
add
sbb
push
pop
jno
fists
sub
enter
ss
jns
into
out
push
in
or
mov
inc
jp
insb
mov
mov
icebp
pop
js
lret
and
xor
int
aam
xlat
fidivrs
mov
popf
addr16
cmp
rsm
push
lea
or
inc
and
jp
jnp
or
cmp
ret
and
insl
daa
fdivrl
cmpsb
push
sbb
adc
xor
push
jge
test
adc
loope
pop
ss
imul
popa
bound
daa
mov
adcl
sub
sahf
sub
lods
push
pushf
setge
fsts
pop
mov
je
js
mov
lret
xchg
cmp
xchg
sub
aam
or
jno
dec
fucomp
pop
and
inc
sub
pop
mov
or
jle
je
pop
in
cmpl
clc
xchg
jnp
jbe
sub
clc
or
cmc
stos
subl
mov
sahf
cmc
push
test
aaa
mov
lret
out
in
inc
nop
push
test
sbb
aam
sbb
repnz
mov
rcrl
loop
into
test
ret
push
mov
or
or
pop
xor
pop
es
mov
scas
add
cmp
jle
daa
pop
fwait
pop
lock
fnstcw
je
adc
cli
gs
jae
inc
mov
repz
sbb
xlat
xchg
xchg
stos
cmc
sub
mov
sbb
rcrb
pusha
mov
repz
aad
adc
xor
loope
adc
jmpw
mov
lock
jnp
hlt
mov
movsb
dec
mov
gs
or
notl
mov
jns
loop
insl
or
xchg
rolb
xor
mov
push
or
jmp
push
les
out
stos
aas
addr16
mov
push
adc
leave
stos
jg
ljmp
jbe
mov
mov
jae
shl
inc
imul
adc
lcall
mov
rclb
mov
jno
inc
daa
mov
push
and
in
out
adc
imul
loope
insb
adc
mov
push
xlat
pusha
stc
xchg
lcall
fmul
sbb
mov
iret
push
cmp
sub
jb
xchg
push
repz
dec
xchg
call
aad
outsl
sbb
jns
push
mov
lcall
cmp
cmc
sbb
adc
addb
imul
sub
mov
rolb
mov
xchg
push
xchg
loop
call
push
loopne
sbb
pop
push
sbb
lea
cmpl
xor
out
mov
and
add
adc
sahf
lods
pushf
lock
shll
pop
xor
mov
into
push
mov
sbb
les
dec
xor
hlt
jb
enter
in
jmp
push
insl
mov
stos
test
icebp
mov
stos
int3
sahf
test
pop
sub
ljmp
mov
add
or
outsl
or
sbb
or
xchg
mov
dec
sub
sarb
ficoms
stc
add
add
cs
imul
xor
ja
adc
in
jae
xchg
pop
and
sarl
mov
mov
mov
add
mov
sub
push
xor
loopne
shrl
leave
out
dec
rorb
adc
aad
cltd
cli
xchg
xlat
fucomp
int
xor
or
orl
fdivrs
mov
lds
in
repnz
push
inc
push
leave
sub
test
dec
in
cmp
enter
pop
cwtl
faddl
mov
mov
scas
dec
dec
jge
mov
out
iret
push
rcr
and
cmp
xchg
outsb
inc
arpl
imull
push
clc
aam
loop
scas
pop
stos
lods
and
mov
dec
andb
andl
std
mov
lock
fdivr
and
mov
dec
out
add
inc
fcompl
es
and
loope
fcoml
shlb
imul
imulb
lods
or
frstor
fwait
movsb
inc
scas
push
andb
std
or
mov
ret
cmc
aad
inc
sahf
mov
jb
add
nop
repz
push
push
aad
xor
mov
inc
xchg
not
xchg
mov
adc
mov
adc
inc
es
cmp
test
stos
push
dec
sbb
pop
insl
and
jnp
aam
and
andb
sub
mov
les
dec
jnp
imul
cmp
aam
push
jp
stc
mov
ret
inc
aad
jmp
repnz
pop
inc
mov
fnstsw
in
test
mov
stos
jmp
lret
push
stc
sti
in
push
cmp
pusha
cmp
sub
in
mov
movsb
sub
xor
rolb
dec
jge
push
imul
sub
mov
dec
rolb
cltd
mov
xlat
pusha
paddw
leave
int
iret
loope
clc
mov
pop
fmuls
cmp
out
pop
aam
dec
fcomps
jb
testl
mov
ret
mov
sbb
cmpsb
outsb
mov
and
xor
or
add
clc
jg
sbb
adc
rcl
fwait
cmp
mov
mov
sti
add
jno
jle
xchg
sub
adcl
push
gs
je
sub
push
inc
jecxz
mov
xchg
and
or
xor
and
mov
cmp
cli
xor
loope
add
xchg
push
jnp
mov
mov
shr
xor
leave
inc
sbb
lahf
push
ficomps
out
mov
lret
add
mov
in
arpl
cmc
xchg
aaa
and
daa
jae
mov
pop
addr16
or
in
ljmp
fsubrs
stc
test
lret
lock
sti
mov
push
outsl
sbb
loopne
fists
inc
jns
pop
inc
nop
dec
enter
xchg
inc
sbb
test
sub
int3
in
sub
dec
rcll
mov
cmp
int
pop
mov
mov
clc
popl
clc
add
and
mov
sbb
or
out
push
xchg
pop
cmpsl
jecxz
jmp
adcb
mov
shll
mov
gs
repz
sti
movsb
sbb
test
push
flds
and
lret
repz
push
cltd
loope
xchg
stc
aam
cmp
push
popf
popa
movb
scas
add
cmp
sbb
push
mov
add
add
or
clc
shll
push
pop
mov
sbb
xchg
das
lahf
cltd
dec
push
add
pop
imul
push
faddp
xlat
out
cmp
data16
int3
mov
les
jno
lods
fwait
pushf
push
or
mov
ljmp
push
xchg
arpl
or
xor
popa
cmp
fdivrs
dec
mov
xchg
jb
mov
neg
jmp
nop
iret
mov
je
push
sbb
add
xor
mov
push
out
and
mov
inc
adc
fcomp
popa
or
push
xchg
mov
dec
mov
rcrb
lods
das
out
jns
outsb
pop
sbb
sub
loopne
data16
pop
mov
lret
cmp
mov
or
sub
xor
pop
dec
in
imul
or
inc
mov
mov
cmpsb
imul
fisubl
les
lcall
pop
fs
dec
mov
fbstp
xor
cltd
xor
in
cmp
cmp
add
pushf
xchg
pushf
std
jg
sbb
mov
inc
lock
mov
div
fwait
lret
enter
adc
jle
mov
das
adc
shrl
scas
fnstenv
lret
fsubrl
loop
xchg
daa
fcom
pop
lea
adc
xchg
dec
fstps
icebp
mov
std
shlb
mov
lods
movsb
jmp
int3
ficoml
mov
inc
and
xlat
mov
dec
cld
push
push
inc
data16
mov
sub
jae
mov
mov
pop
clc
popa
jo
loopne
cmp
push
dec
mov
mov
xchg
sub
les
add
hlt
push
inc
jl
xchg
mov
je
pop
sbb
pop
icebp
ja
xchg
test
add
test
stc
in
adc
popa
mov
mov
aam
sub
cld
mov
out
enter
mov
fdivs
shrb
jae
adc
mov
push
addr16
fs
push
xor
mov
fsts
push
loopne
popa
lcall
test
cltd
adc
fdivrl
test
pop
loopne
push
jbe
mulb
jmp
cs
mov
jno
xor
movsb
jnp
jecxz
xor
mov
jb
popa
lea
enter
call
xchg
mov
cmp
mov
out
sub
lock
mov
out
scas
adc
sti
add
pop
mov
lahf
lret
sahf
or
lods
cltd
xlat
and
dec
push
mov
mov
iret
pop
add
rclb
sbb
xor
inc
dec
push
pop
bound
jns
mov
mov
loop
repnz
add
adc
and
xor
inc
dec
push
pop
bound
jns
mov
mov
loop
repnz
add
xor
inc
dec
push
pop
bound
jns
mov
mov
loop
ret
stc
or
sbb
xor
loop
xacquire
insl
xor
test
pop
es
repnz
sbb
repnz
sub
popf
fildll
scas
fistps
or
dec
cmp
pop
insl
wbinvd
decl
iret
mov
lahf
lods
std
jg
outsl
sbb
aas
jno
popa
pop
orl
call
mov
iret
into
mov
cltd
loope
and
and
jp
adc
mull
push
outsl
push
std
sti
xor
push
into
test
mov
add
add
sub
push
and
xor
enter
das
or
sbb
cmp
mov
pop
gs
lret
push
idiv
add
xor
in
rcr
cli
sub
outsl
or
sbb
xor
jb
push
and
out
and
cmc
mov
imul
jge
fidivrs
mov
iret
cld
mov
or
mov
std
or
ficoms
lea
cmc
and
movsl
out
int3
and
vmwrite
test
das
pop
pop
mov
std
decl
out
pop
fistpll
scas
and
ds
sbb
aas
cmp
jnp
or
fcomp
fnstenv
test
sbb
pop
cmp
aas
and
add
lcall
fidivrl
mov
xchg
sbb
pop
xor
pop
jae
das
pop
pop
insl
decl
iret
mov
lahf
in
std
jg
outsl
sbb
aas
dec
das
pop
pop
insl
decl
iret
mov
lahf
in
std
jg
dec
lret
pusha
adc
aam
jle
xor
mov
cmc
fmul
notb
cmp
test
jne
xchg
fidivl
shlb
jge
mov
jb
arpl
or
xchg
scas
mov
push
ds
push
pop
jg
inc
mov
inc
jb
in
nop
cmp
sbb
xchg
rcrl
cmp
jge
rep
and
or
out
and
push
loope
push
mov
addr16
inc
cld
and
add
sbb
push
dec
je
popf
dec
jbe
mov
pushl
adc
sbb
dec
aas
push
rcrb
mov
xor
lahf
pop
rclb
sbb
repnz
les
pop
loope
movsb
clc
in
sub
mov
stos
push
mov
sub
shrl
cwtl
mov
mov
pop
mov
xor
pusha
sbb
mov
fiaddl
mov
pusha
cld
adc
fistl
pop
lock
add
dec
sti
push
or
imul
mov
fwait
adc
test
sbb
call
out
and
pop
fisttpl
loop
lea
or
insb
dec
imul
data16
sbb
and
ret
adc
or
pop
lds
adc
mov
test
sub
cld
add
inc
mov
repnz
push
outsb
mov
mov
xlat
xlat
and
add
mov
stos
sub
rcrb
ret
jns
sbb
imul
inc
push
add
cmpsb
in
or
cs
sbb
mov
mov
inc
adc
push
ds
jb
push
mov
jnp
push
mov
dec
mov
scas
jbe
jno
sub
sbb
cmp
lds
inc
mov
in
ljmp
inc
cmp
xor
in
sarl
mov
and
insb
jecxz
mov
push
add
out
cmpsb
mov
imul
adc
pop
lcall
push
test
mov
mov
and
push
lea
scas
and
arpl
cwtl
repz
fcmovb
xor
neg
xchg
sub
lods
jae
lret
fidivs
pop
mov
push
xor
jle
divl
cwtl
xchg
repnz
lea
out
mov
ds
cmp
pop
adc
mov
clc
call
mov
xchg
cs
mov
ss
rorl
test
jecxz
cmp
pop
rcl
or
jne
cmpps
stos
test
ja
andb
cmpsb
cmp
jp
pop
xor
cmpsb
push
mov
mov
ficomps
pop
xchg
adcl
lods
fildl
xchg
imul
mov
mov
mov
add
add
jb
and
aas
mov
xorl
iret
fxch
jae
xor
xor
sub
in
negl
xchg
pop
movsb
dec
sub
dec
aam
ret
hlt
cs
xchg
cmc
icebp
sbb
dec
pop
jl
and
push
and
pop
push
cmp
cmp
stos
jp
pop
xor
sub
aam
pop
aaa
in
cmp
dec
addr16
aad
cmpsb
adc
repnz
lcall
cmp
fwait
mov
lods
dec
cmpsl
repnz
enter
popa
insl
push
pop
stos
adc
pushf
sbb
push
loop
lock
dec
push
lods
push
jl
bound
cmpsb
and
fistps
cli
adc
xor
cmp
mov
lret
cmp
lock
sub
xchg
ljmp
fiaddl
pop
lcall
mov
out
mov
dec
mov
insl
pop
fs
xchg
daa
cs
pop
xchg
lds
xor
test
sub
into
in
and
fwait
push
dec
mov
lds
and
fs
lcall
inc
fisubrs
sub
jge
mov
in
test
sub
scas
jmp
xor
pop
fldl
adc
pop
mov
pop
mov
sbb
cwtl
xor
loopne
mov
sar
mov
mov
adc
out
movsb
lds
cmp
mov
int
ja
imul
popf
cmpsb
mov
mov
dec
andb
pop
adc
mov
xchg
stos
inc
mov
scas
int
js
or
sbb
inc
pop
push
adc
testl
scas
fisttps
sahf
xchg
stc
cmp
enter
sahf
int3
push
loope
je
ret
int3
arpl
push
adc
xchg
adc
cmp
cld
fcmovnu
mov
adc
enter
mov
std
xchg
iret
pop
cwtl
into
pop
sbb
jle
mov
inc
mov
jae
pop
pop
data16
xchg
dec
xor
orl
std
and
pop
mov
push
rclb
pop
push
sub
scas
movsl
sbb
in
cmpsl
mov
fninit
es
inc
push
scas
pop
cld
loopne
mov
adc
adc
leave
adc
cmpsl
cmpsl
adc
inc
je
jbe
rorl
testl
clc
push
xor
xchg
pop
int3
lods
std
in
and
xor
sub
mov
daa
in
icebp
cmpsb
jg
sbb
push
push
lea
add
or
xabort
xor
or
push
xchg
orb
push
add
je
mov
dec
sub
dec
push
gs
sub
outsb
test
dec
aam
popf
test
cmpsb
lds
mov
pop
std
mov
fwait
div
mov
out
sbb
dec
dec
in
stos
in
adcl
cmp
mov
and
cmp
dec
mov
jne
mov
mov
into
jno
cwtl
adc
loope
sbb
scas
stos
push
mov
inc
inc
mov
shlb
mov
ss
ja
xchg
mov
xchg
ja
nop
mov
lock
jecxz
lock
xchg
push
iret
fdiv
les
je
out
outsl
andl
js
scas
xchg
push
xor
bound
push
xchg
shlb
call
in
add
adc
sarl
dec
xor
cmp
pop
cmp
adc
mov
mov
add
dec
or
popa
mov
call
jecxz
xor
lods
outsl
mov
adc
push
push
xchg
push
dec
push
mov
repnz
aam
cmpsb
xor
cmp
mov
add
pusha
rcrb
xor
ja
data16
sub
xchg
jmp
sub
mov
dec
mulb
mov
xchg
mov
add
jnp
enter
sbb
popf
mov
std
xchg
xchg
jnp
mov
ret
ror
jnp
jmp
sbb
imul
dec
mov
add
mov
and
aas
mov
pop
repz
dec
int
imul
mov
mov
jns
push
jbe
iret
gs
xchg
pop
jb
sub
mov
sbb
nop
dec
xchg
notb
sbbb
xor
ss
clc
dec
outsb
jo
xor
pop
push
sar
mov
add
inc
mov
rcrl
lds
xchg
fwait
or
dec
jbe
sub
lods
jne
fcmovb
test
lret
neg
in
aas
imul
stos
das
lret
mov
xlat
adc
in
clc
or
cmpsl
mov
ficompl
adc
mov
subb
adc
scas
popf
adc
icebp
dec
push
rclb
cmpsb
xor
push
loope
push
pop
push
mov
cs
mov
adc
loopne
jle
jne
mov
std
je
push
int
cmpsl
inc
mov
push
jne
vsqrtsd
jle
das
insb
xchg
aad
dec
test
jecxz
orl
out
aas
mov
test
pop
data16
push
ljmp
les
out
sbb
mov
mov
lret
movsb
fistpll
enter
sahf
jae
sbb
mov
adc
push
jle
cmp
ds
pop
jae
lahf
dec
fisttpll
xchg
je
mov
push
lods
jecxz,pt
mov
pop
incl
mov
jo
addr16
imulb
pop
cltd
xchg
inc
icebp
xchg
adc
movsb
mov
sahf
outsl
in
repnz
mov
push
ds
push
push
es
inc
push
push
xchg
lods
daa
add
in
movsb
add
jmp
sub
jge
aas
enter
inc
in
test
iret
mov
es
mov
fisubs
outsl
pop
and
xchg
mov
add
dec
mov
xor
push
daa
pushf
outsb
mov
lods
jbe
mov
lods
mov
jg
push
out
js
lret
lahf
ss
mov
loopne
inc
fiadds
test
push
sub
sub
xor
loopne
lcall
mov
and
jmp
mov
test
xor
nop
xor
jo
leave
jle
pushf
int
dec
adcb
dec
iret
and
pop
fcmovnbe
push
in
xchg
xchg
mov
cmp
fcoml
ds
mov
aad
add
pop
insl
xor
sub
aaa
enter
adc
mov
scas
mov
outsl
dec
mov
push
mov
mov
add
outsl
sub
dec
call
stos
enter
stos
pop
std
insb
repz
mov
cld
inc
shlb
pushf
adc
arpl
mov
sbb
xchg
inc
stos
jbe
sub
test
adc
pop
xchg
mov
xor
inc
adc
inc
pop
jne
and
jne
outsl
cmp
jmp
sub
test
mov
mov
in
push
lahf
pop
bound
in
push
or
fsubs
filds
push
cld
push
or
dec
sub
pushf
push
icebp
mov
adc
mov
movsb
inc
les
orb
sub
adc
movsb
imul
insl
insb
dec
ja
enter
mov
ror
jnp
xor
sbb
loop
and
mov
push
bound
dec
movsl
dec
in
stc
mov
xor
in
cli
and
in
movsb
mov
dec
aad
push
push
ss
pop
inc
les
and
movsb
jg
movl
psrlw
adc
jno
mov
sbb
imul
ret
pop
jl
mov
aaa
and
and
push
icebp
add
or
subb
insl
pop
test
and
std
sbb
aam
xor
pop
test
loope
sbb
out
jecxz
cmpsl
add
add
mov
mov
inc
inc
popf
add
or
sub
clc
imul
sahf
inc
lods
imul
jnp
gs
push
mov
imul
pusha
scas
cmp
movsl
mov
add
mov
cltd
test
aam
jb
aam
dec
jns
fsubr
mov
mov
pop
aaa
popf
add
add
int3
int3
xor
mov
jbe
push
data16
mov
or
shll
test
adc
div
lods
in
pop
ja
ror
push
cmp
dec
repnz
dec
cmp
push
xor
cwtl
bound
test
and
andl
aam
test
cmp
or
and
lea
cmpsb
js
shr
mov
inc
adc
dec
jg
sbbb
xchg
icebp
test
push
inc
adc
test
cmp
subb
loop
stos
mov
jmp
adc
lds
pop
xchg
cmp
je
outsb
in
mov
add
inc
lds
std
or
mov
iret
in
cmpsl
repz
stos
fucomip
or
xchg
push
mov
cld
xchg
add
js
add
inc
jecxz
leave
mov
mov
sub
fistps
js
xchg
push
mov
data16
arpl
and
sti
and
movsb
cmc
mov
jbe
filds
inc
and
push
pushf
dec
lret
hlt
bnd
pop
add
dec
pop
movsb
dec
mov
data16
js
push
popf
and
rol
jle
jg
jne
jp
dec
leave
jns
push
arpl
imul
xor
out
lds
test
mov
jno
dec
xchg
pop
out
lahf
repz
dec
adc
iret
dec
jle
and
popl
icebp
mov
adc
jo
ret
sub
loop
inc
mov
xchg
lods
mov
popf
jb
sbb
sbbl
pop
and
cs
movsb
add
daa
call
inc
cmovle
push
lock
sahf
shr
xchg
or
mov
f2xm1
aaa
add
inc
sbb
xchg
or
test
sar
mov
push
add
ret
adc
or
cmc
pop
mov
push
cmp
iret
adc
cmp
pop
pop
or
mov
stc
push
mov
xchg
outsl
cmp
mov
or
fs
and
xchg
mov
xchg
pop
xadd
and
loop
mov
fidivs
fwait
jne
unpcklps
mov
add
cld
loope
loopne
mov
popf
movsl
mov
addr16
lds
sarl
outsb
mov
sub
ja
or
or
fidivl
dec
lret
pusha
and
push
xchg
cmp
inc
arpl
pop
fcomi
int3
and
sub
shrb
add
out
or
mov
adc
cmc
int
dec
xor
in
test
sub
jmp
sub
ds
bound
push
ficoms
pop
jne
aas
xchg
dec
addr16
shlb
call
push
xchg
add
out
movsb
shrb
int
mov
bnd
push
inc
ret
xor
loopew
test
push
sub
fldt
sbb
push
mov
rolb
xor
sub
sbb
or
lea
cmp
dec
xchg
add
pop
xor
aaa
dec
mov
mov
sub
ljmp
cld
js
ffreep
roll
mov
or
or
loopne
imul
jecxz
loopne
out
pusha
dec
inc
xchg
insl
or
and
pop
in
gs
mov
fimuls
arpl
xor
mov
push
xchg
and
lahf
jg
cmpl
mov
loop
add
stos
pop
pop
popa
push
fdivl
push
cwtl
mov
push
jg
imul
push
rcll
xchg
ret
das
test
sub
mov
adc
mov
repz
cmp
mov
sbb
xor
jecxz
cmp
scas
clc
adc
out
push
add
popa
lds
sub
hlt
movsl
sub
pusha
cmp
and
or
insl
xor
sti
jmp
mov
cmp
sbb
orl
add
add
decb
gs
ljmp
sbb
dec
orl
ds
adc
cmpsl
inc
popf
sub
out
cmp
inc
add
xchg
dec
mov
cmp
call
and
dec
inc
lods
jp
fdivrl
int3
or
cmp
lds
stos
add
popf
mov
sub
sub
adc
std
cmpsb
cwtl
mov
cwtl
and
dec
xchg
stos
jmp
lahf
out
add
flds
add
or
adc
jle
sbb
loop
sbb
and
cs
sbb
gs
xor
loope
lods
ja
into
mov
int
fiadds
aam
jge
push
mov
jmp
movsb
adc
mull
sub
pop
insl
mov
out
mov
in
rcl
cmp
mov
mov
std
add
xlat
inc
dec
jae
and
data16
inc
sbb
add
scas
jp
push
popf
xor
xchg
xor
mov
mov
ret
sub
add
jne
fwait
push
mov
jmp
pop
pop
adc
or
pop
push
pop
add
std
daa
cmp
push
jmp
je
cld
iretw
out
adc
inc
das
mov
pop
lret
sbb
lret
and
xchg
cs
add
push
lock
orl
sti
mov
cli
mov
scas
sbb
inc
and
mov
clc
and
lahf
add
lods
push
inc
sbb
pop
clc
mov
pop
rcll
inc
ds
jnp
cmp
jae
or
outsb
stc
mov
pusha
imul
cmpsl
cltd
rolb
pop
cmpsl
loopne
hlt
cmp
adc
movb
fbld
out
fs
sub
sti
js
sbb
jb
push
mov
fldl2t
xor
mov
push
xlat
sti
xchg
arpl
jmp
cmp
xor
mov
add
arpl
flds
daa
loop
xor
pushf
mov
es
dec
faddp
repz
stc
cmp
cmp
xchg
dec
fs
data16
insb
fs
xor
dec
lea
xor
je
pop
mov
les
push
xchg
pushf
subb
in
jg
andl
sbb
add
pusha
mov
mov
pop
sbb
lods
ja
pop
movsb
fs
rclb
pushf
jmp
sbb
cmpsb
sbb
cmp
push
adc
lock
jecxz
push
ds
pop
into
mov
test
jne
lcall
in
pop
adc
cli
repnz
pop
mov
inc
stos
mov
push
xchg
movsl
push
jp
xor
push
aam
pop
in
hlt
jge
iret
dec
shrb
fisubrs
je
loope
push
insb
cs
je
sti
popf
jne
pop
or
aaa
test
ret
ds
subb
aaa
and
fldl
mov
sub
lret
add
scas
mov
jne
stos
jno
jl
aas
sbb
int
fildll
mov
lods
in
pop
mov
jbe
jno
lds
data16
and
stc
push
mov
scas
mov
mov
cld
inc
sub
ret
arpl
popa
loopne
ret
sbb
mov
mov
mov
and
push
inc
mov
push
adc
lret
or
outsb
icebp
aaa
in
clc
jle
ficomps
int
fs
loope
push
jne
xchg
pop
icebp
sti
add
and
aas
mov
or
std
icebp
dec
stc
or
pop
fs
fwait
push
push
dec
inc
fidivrs
jmp
or
push
jns
and
std
je
or
dec
mov
adc
fwait
fs
pop
outsb
and
or
cli
int
bound
jo,pn
lods
cwtl
shlb
xchg
subl
jb
cs
xor
xchg
setb
cmp
aad
fisttps
pop
add
je
push
adc
std
cmpsb
insb
lahf
add
test
aaa
aaa
sbb
xor
lods
insb
inc
fisttpll
xor
dec
sbb
xor
mov
js
repz
dec
int
sti
jp
nop
incb
push
xor
rcr
push
repnz
push
inc
aad
movsl
push
aas
sub
in
lds
movl
ret
adc
pop
fidivs
aam
pop
jae
fldt
out
cmp
pushf
ljmp
scas
addr16
popa
addr16
lcall
test
xor
bnd
sbb
cmp
in
xchg
subb
sub
push
jae
das
jp
push
mov
mov
push
ja
dec
shlb
stc
push
daa
sub
out
ss
xchg
bound
in
test
inc
cli
aad
je
aam
fs
push
push
sbb
jnp
xchg
pop
shlb
or
loope
test
fisttps
pop
xor
loop
mov
fs
iret
xchg
loope
in
inc
scas
push
clc
std
add
dec
in
pop
xor
orl
test
jo
pop
pop
adcl
dec
in
add
out
into
nop
push
rolb
jg
mov
mov
fpatan
dec
dec
int
test
and
xor
xchg
fidivrl
aad
mov
sbb
adc
jns
pop
pop
jnp
sbb
test
jae
icebp
fldcw
imul
or
lock
push
dec
or
mov
inc
rclb
mov
inc
sub
mov
pop
pop
js
cs
dec
sub
sahf
xor
sbb
sbb
bnd
push
mov
addr16
test
scas
sub
shll
xchg
into
lahf
ficoml
in
lea
clc
sub
aaa
adcb
out
data16
push
sbb
adc
fs
pop
jmp
xchg
and
in
dec
loopne
adc
stc
sub
out
arpl
movsb
pop
dec
rcr
xchg
movsb
adc
or
mov
call
bound
push
dec
ds
stos
xchg
pop
lods
jb
sbb
in
in
adc
nop
inc
push
xchg
int
fiadds
sub
imul
je
mov
push
out
in
das
adc
sbb
jp
mulb
movsb
shrb
out
adc
das
adc
jnp
pop
push
test
push
push
mov
vpmaxub
int
dec
sub
jo
and
add
out
push
add
add
popa
out
adc
xchg
push
in
aas
and
cmp
rol
ds
sbb
aas
dec
das
pop
pop
insl
decl
iret
mov
lahf
in
std
jg
outsl
sbb
aas
dec
das
pop
pop
insl
decl
iret
mov
lahf
in
std
jg
out
push
fists
cmp
pop
insl
jge
push
out
popf
fildll
scas
fstpl
or
dec
cmp
dec
das
pop
pop
in
pushl
aaa
jne
iret
lret
fbld
out
adc
add
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
insl
cld
jge
dec
fcompl
cltd
aam
ret
jg
adc
pop
fisttpll
mov
or
cld
jge
dec
fcompl
sub
pushf
sbb
or
pop
rorl
lea
cld
fs
push
faddl
xor
and
mov
aam
insb
xchg
cmp
inc
shrl
or
cld
adc
jle
cmp
mov
push
fs
or
cmpsl
push
adc
into
in
stos
subb
xor
aas
cmp
int3
push
pop
and
std
dec
lods
rorb
cmp
out
xor
pusha
mov
pushf
push
mov
cmp
popf
test
outsl
test
jns
sarb
sbb
cmpsw
cld
add
mov
mov
cmpl
mov
in
paddsw
sub
shlb
lea
or
aas
and
jmp
jo
mov
lea
sub
jmp
or
in
dec
fcompl
cmp
mov
jl
insb
aad
les
movsl
sub
sbb
add
sub
inc
rcrb
sbb
pop
fcomps
push
lock
add
sbb
and
sub
enter
mov
cmp
inc
sti
jns
pop
or
xor
lods
or
jl
insb
int
fisttpll
mov
or
cld
jge
dec
fcompl
sub
pushf
sbb
insb
int
fisttpll
mov
or
cld
push
movsl
repnz
mov
pop
adc
loop
dec
int3
sahf
mov
mov
jmp
mov
pop
inc
lret
ret
jns
push
sbb
xchg
movsl
movsb
jl
or
dec
push
or
je
sub
ret
and
add
out
es
int
arpl
lret
adc
mov
cmp
out
nop
pop
sub
sbb
in
push
pop
jmp
xlat
mov
mov
lods
inc
imul
inc
stc
dec
out
fidivrs
xor
jae
and
and
and
mov
in
pop
cs
pop
xchg
mov
mov
mov
filds
dec
outsl
jae
sub
aam
jg
daa
iret
call
push
cmp
or
cmovno
pop
stos
lret
fidivrl
aam
sub
mov
js
sahf
jg
lcall
lcall
out
jl
test
xlat
jb
inc
inc
dec
inc
scas
shr
sbb
xchg
filds
sbb
xlat
pop
or
popf
dec
imul
pop
call
stos
lea
adc
inc
and
inc
lahf
mov
mov
jg
add
push
call
xor
div
xor
push
insl
call
push
sbb
sarl
dec
push
scas
leave
jns
xchg
mov
outsb
dec
push
je
outsb
sub
pop
insb
pop
mov
pop
add
loopne
jne
inc
sti
aam
lea
lret
pop
sbb
test
test
dec
into
jecxz
jnp
hlt
sbb
icebp
and
in
leave
sbb
jne
sti
repnz
sub
fldenv
les
xlat
stos
lea
fidivs
scas
call
leave
lret
pop
sar
sbb
mov
int
das
add
fisubrs
fs
inc
sahf
dec
and
xchg
pop
or
cmp
mov
xor
pusha
push
pop
outsb
pop
xlat
inc
mov
ffreep
adc
mov
add
mov
adc
pop
pop
sub
mov
xacquire
aas
insb
and
data16
jns
outsb
cmp
shlb
lods
dec
daa
cs
rclb
push
hlt
mov
push
divl
cld
ds
cmp
dec
jae
mov
das
stos
hlt
fnstcw
je
sub
out
cmp
loopne
cmp
out
jne
xor
dec
dec
add
cmp
ljmp
push
in
dec
mov
push
fidivs
outsl
xchg
mov
jno
cld
mov
fdivrs
rol
pushf
inc
fstpt
push
xchg
mov
repz
in
jns
or
and
mov
outsl
push
arpl
xchg
jecxz
lea
sub
dec
sbb
push
and
cmp
push
bound
fwait
sarl
mov
roll
adc
push
cmp
xor
js
lds
mov
inc
out
in
or
jb
out
cmc
and
cmp
inc
das
in
daa
jle
and
loopne
jae
xchg
rcrl
sub
flds
sar
mov
int
cmc
aas
icebp
xchg
push
icebp
inc
leave
push
addr16
lea
adc
lods
or
xchg
cmp
add
leave
cs
mov
cli
or
aam
or
sbb
add
adc
jle
fldcw
cmp
mov
and
daa
insb
leave
pop
jp
out
mov
dec
inc
mov
lods
and
cmp
das
push
enter
daa
adc
popa
in
rcrb
cs
push
js
sub
out
xor
push
push
and
ficompl
mov
mov
jle
scas
jne
mov
mov
dec
lret
out
mov
jge
add
jl
adc
lods
pop
jae
sti
mov
pop
ficompl
xor
idiv
loop
ret
jp
or
cli
insb
test
push
fbld
pop
mov
leave
jns
pop
in
out
add
hlt
mov
add
xchg
repz
cmp
bound
idivl
jnp
lods
pusha
ret
fmuls
cmp
gs
xchg
jg
outsl
add
movsb
lret
fistps
inc
rcr
xchg
stos
and
lahf
push
lahf
js
mov
sbb
test
nop
sbb
cltd
jmp
inc
cld
xor
stos
int3
push
mov
aad
jne
push
fwait
daa
push
fs
or
pop
icebp
xchg
mov
or
loopne
and
add
cltd
push
stos
inc
std
popf
insb
stos
jp
sbb
inc
mov
xor
push
push
cs
xor
call
shll
in
push
push
movsl
and
mov
gs
pop
cmp
adc
inc
mov
inc
cwtl
push
mov
push
jb
fldpi
xchg
daa
add
add
dec
scas
pop
bound
stos
in
inc
mov
pop
jo
push
mov
mov
repz
adc
imul
sbb
mov
jae
loope
inc
ljmp
daa
stos
pop
adc
lods
mov
add
lcall
lcall
leave
jp
in
jb
pop
xor
cmp
js
sub
aad
adc
int3
xor
jae
mov
jne
bound
cs
lds
clc
jns
stc
push
or
jle
adc
mov
and
jo
je
ret
cmpsl
pusha
addps
std
repnz
jle
hlt
hlt
std
sahf
pop
dec
pop
mov
mov
jo
movsl
or
mov
daa
mov
ja
xchg
hlt
pop
stos
inc
js
mov
pop
push
push
test
es
push
clc
jno
jne
sbb
mov
fwait
and
mov
xchg
pop
sbb
popa
outsb
sbb
icebp
cmp
cld
addl
jnp
and
negb
jbe
je
mov
pop
movsl
cmp
jb
popf
push
jge
test
hlt
sahf
test
sbb
jne
sar
push
add
icebp
or
cmp
les
outsb
add
push
arpl
inc
inc
add
loopne
ret
mov
or
xchg
xor
pop
pop
xchg
scas
push
xchg
lret
scas
bound
mov
xchg
adc
ret
xchg
sbb
fimull
cmp
inc
sbb
les
and
lahf
lret
cmp
adc
add
and
jbe
mov
xchg
test
mov
jae
add
ja
dec
cmp
ja
push
pop
cmpsl
adc
push
inc
add
cmpsl
jg
dec
in
jmp
and
insl
mov
mov
incb
and
add
movsl
pop
test
inc
shlb
scas
pushf
inc
pop
or
pushf
jle
fsubrs
push
adc
loop
cmp
push
ds
mov
or
push
call
cmp
mov
stc
shll
mov
and
in
jae
sub
aaa
pop
data16
mov
mov
fldl
fsub
fisubs
push
pusha
icebp
enter
lods
jle
cs
mov
les
inc
lods
dec
rclb
pop
ret
inc
aad
shlb
mov
cmp
jp
stos
iret
std
cmp
lret
in
and
dec
popf
cmp
scas
out
mov
je,pt
inc
inc
leave
mov
sub
shll
mov
mov
lcall
or
testl
or
jnp
pop
in
ret
xchg
pop
add
push
sarb
in
and
outsl
cmp
push
xor
jmp
push
and
stc
bound
outsl
clc
xor
int
in
iret
push
lahf
roll
dec
arpl
adc
insb
leave
sub
mov
in
xor
add
cmp
jp
cmp
pop
mov
and
and
cmpsl
pop
and
and
cmpsb
out
cwtl
adc
add
cmp
add
adc
push
notb
jmp
xor
rcrl
jle
rorl
cmpsb
mov
mov
rcll
insb
cmp
or
xor
lock
cmc
outsb
test
pop
daa
xchg
insl
xor
xor
ljmp
mov
out
adc
clc
repnz
outsb
pop
pop
mov
enter
aad
in
mov
mov
stc
push
cli
fdivrs
aaa
mov
movb
dec
or
imull
std
in
mov
ja
push
adc
fisubrl
popa
xor
add
scas
inc
cmp
push
shll
sub
inc
aad
add
push
ss
inc
daa
add
push
out
xor
jno
andl
jp
lahf
cmpl
mov
adc
out
daa
jno
push
in
mov
or
test
inc
ss
sbb
in
cmp
les
pop
jecxz
mov
in
push
sub
mov
mov
or
push
nop
cwtl
fs
adcb
or
movsl
outsb
mov
xlat
pop
iret
test
movsl
mov
push
fucomi
shrl
popa
xlat
inc
pop
mov
cli
orb
popf
sbb
fldcw
push
inc
cmp
sub
inc
push
icebp
pushl
mov
xor
mov
lret
lock
push
mov
push
pop
loopne
lds
mov
es
add
pop
hlt
cmpsb
pop
inc
js
dec
sub
lock
rcll
mov
out
imul
js
gs
sbb
lea
sar
xor
flds
push
pop
sbb
orl
or
sub
sbb
mov
insb
flds
sub
cmp
xchg
cld
xchg
sbb
lods
ljmp
cmp
push
nop
loopne
andl
xor
dec
in
out
jb
or
scas
orl
and
inc
out
imul
shlb
into
pop
outsl
daa
aas
out
ficoml
jp
xchg
mov
jae
add
insb
rcrb
pop
mull
jns
xchg
inc
fists
lcall
adc
sti
jno
push
mov
mov
mov
mov
rcr
mov
in
xor
mov
mov
mov
shrb
outsl
jae
ret
loopne
mov
imul
push
andl
jne
mov
or
jmp
jl
and
inc
mov
leave
loope
xor
and
dec
jmp
jnp
push
repz
mov
jle
dec
sub
mov
xchg
dec
ds
mov
rcrb
cs
jl
insb
jg
fldcw
xchg
mov
sub
scas
fs
add
in
idivl
test
pop
adc
in
mov
in
pusha
cltd
mov
sbb
mov
push
lret
cmp
sub
mov
push
jae
sub
lahf
stc
movsl
sub
pop
pop
xor
inc
or
and
xchg
sahf
xchg
adc
xor
fnsave
testl
pop
push
dec
leave
pop
jecxz
cli
adc
and
sub
sub
mov
fxam
pop
testb
mov
mov
mov
cld
push
cli
sub
je
test
adc
xchg
pop
fidivrs
pop
pop
add
sub
mov
pop
stc
fimuls
bound
test
arpl
movsl
in
cmovne
int3
jecxz
ljmp
mov
gs
popa
mov
mov
adc
cwtl
mov
popf
xchg
jnp
push
and
arpl
fwait
movsl
and
push
mov
cmp
lds
inc
icebp
loopne
inc
and
divl
xor
lret
lds
jle
or
pop
in
test
je
xor
xchg
mov
fwait
jae
pusha
lock
cmc
in
fidivrl
jmp
add
shrb
mov
jo
sahf
xchg
adc
jp
sbb
incl
fsub
push
fistpll
fs
mov
lret
xchg
lea
inc
cmp
cmp
pop
repz
push
movl
mov
cmp
mov
jg
jge
lcall
mov
test
cwtl
push
xchg
pusha
or
fnstenv
mov
jmp
enter
fstpl
addr16
cmp
xor
pavgb
imul
imul
movnti
movsb
stc
inc
rcr
xchg
daa
push
mov
jge
lods
add
aas
lea
or
mov
imul
jmp
popf
mov
sub
push
int3
push
xlat
hlt
push
add
or
inc
push
push
repnz
int
push
lods
lahf
xor
jg,pt
mov
popa
or
into
leave
divb
insb
popl
dec
leave
xorl
add
mov
in
fstps
ja
out
fs
dec
ret
and
dec
sub
pop
es
in
pushf
cwtl
push
lock
cmp
xchg
jl
in
jmp
pop
and
jns
scas
xchg
xchg
mov
xchg
aaa
dec
loopne
fisubl
cmp
pop
pop
test
push
aam
ret
mov
loope
mov
dec
pop
addb
pusha
je
sarb
dec
jl
cmp
pop
aam
lret
or
std
jne
fs
fwait
daa
pop
shrl
cmp
repnz
cmp
push
sti
push
mov
mov
psubw
or
adc
sbb
dec
xlat
mov
outsl
ja
pop
or
mov
sub
stc
cmpsb
loopne
xchg
jle
cmp
lock
inc
subl
in
das
push
push
pop
ljmp
sti
ja
pop
sbb
adc
cmpsl
insb
xchg
inc
shrb
enter
fsubrs
push
inc
xor
lock
xchg
cmpsb
and
pop
dec
adc
pop
xlat
jmp
jbe
mov
inc
xor
lods
sbb
movsl
dec
inc
repnz
jns
jne
mov
and
inc
cwtl
icebp
push
lods
mov
add
insb
rcrl
or
into
jp
pushf
icebp
loopne
je
jbe
or
mov
or
jo
add
jbe
xchg
in
add
mov
shll
and
cmp
inc
pop
mov
loop
mov
es
divb
scas
mov
mov
xor
inc
outsl
std
jb
and
xchg
and
pop
fwait
mov
pop
xlat
int3
push
shlb
mov
inc
sbb
pop
jns
mov
jae
mov
xchg
int
adc
je
push
inc
push
mov
insl
jg
popa
add
cmpl
shll
data16
mov
mov
push
fdivr
aad
xor
sbb
pop
pushf
sub
pop
in
ficompl
mov
jg
loop
xor
jecxz
mov
popa
loope
out
sbb
mov
or
out
dec
or
jg
sahf
mov
pop
shll
repz
aad
pop
bnd
sub
adc
imul
and
ret
jecxz
and
das
adc
ja
and
into
push
call
or
add
cmp
dec
fildl
jo
xchg
mov
in
push
loop
xchg
out
jmp
xor
adc
out
mov
xchg
loope
inc
les
cmp
aam
xchg
jns
inc
jp
pop
shrb
or
xor
sbb
jg
and
call
or
pop
rorb
jg
cmp
rorl
outsb
fistl
cli
outsl
add
mov
xchg
daa
fisttpl
sbb
or
test
xor
and
sti
jp
scas
cli
lcall
loope
les
repnz
adc
loope
dec
or
jmp
xchg
xlat
gs
movsl
and
popf
aam
push
jnp
sbb
test
adc
inc
fildl
dec
shlb
xchg
out
mov
cmp
rolb
xlat
out
xlat
int
jbe
rorl
sahf
repnz
ficompl
cli
imul
jo
pop
inc
add
push
lret
and
xor
push
xchg
imul
loope
mov
pop
fsubrl
or
mov
or
mulb
push
loop
jg
jge
sub
mov
popf
in
cmp
cvtps2pd
mov
lds
dec
nop
negb
pusha
stc
or
push
stc
adc
loop
or
mov
pop
sarl
ficoms
cmp
clc
push
cmp
out
clc
mov
popa
test
out
mov
xlat
gs
mov
lea
sub
bound
dec
scas
jmp
mov
or
adc
insl
lods
cmpsb
insl
dec
fcmovbe
add
shlb
xor
sub
push
out
dec
pop
sbb
push
test
pop
push
inc
jge
into
and
pop
mov
add
addr16
or
fs
dec
mov
stos
mov
loopne
add
cli
iret
xchg
loopne
int
inc
dec
jb
loopne
jb
inc
mov
or
cmp
mov
or
ror
imul
cli
jo
rolb
jge
push
pop
out
xchg
sbb
inc
fmuls
cli
and
movsb
mov
cmpsb
mov
ret
test
imul
push
cmp
inc
idivl
cmp
daa
jb
cmp
inc
cmc
fwait
je
xchg
mov
je
test
sub
insb
push
std
nop
imul
divb
push
out
sub
pop
ja
jg
lahf
add
mov
push
xorb
iret
push
add
lret
insb
into
mov
out
mov
decb
mov
add
jp
push
sti
jecxz
dec
mov
cwtl
rclb
add
nop
xor
cmpsb
jae
jne
dec
add
outsl
das
push
or
sub
aam
mov
rorb
movsb
jg
addr16
pushf
mov
xor
or
jl
aam
mov
and
jg
ss
sbbb
out
enter
cltd
lods
pop
adc
fnsave
test
or
cmp
xor
arpl
fidivs
inc
or
cs
and
dec
mov
hlt
pop
shll
sub
and
mov
or
dec
fmul
cmp
incl
jp
mov
popa
or
mov
stos
pop
stc
sti
push
cmpsl
push
mulb
outsl
jg
add
adc
sti
or
fldpi
xorb
aas
test
sbbb
mov
fsubrl
sub
inc
pop
movsl
popa
lcall
adc
pop
mov
in
mov
mov
dec
subb
roll
lock
xchg
pop
repz
and
push
push
add
pop
std
scas
adc
inc
sub
push
mov
mov
jae
or
into
mov
mov
cmp
pusha
sahf
pusha
sub
mov
rorb
push
imul
jo
je
mov
push
mov
fidivrs
xor
xchg
lcall
andb
inc
mov
mov
cli
adc
movsb
gs
sub
push
faddl
add
mov
push
repz
mov
mov
testl
movsb
mov
jae
pop
pop
imul
push
mov
cli
mov
xchg
mov
sahf
jl
ret
shl
leave
mov
out
jnp
xor
repnz
cmp
setle
decl
inc
xor
std
bnd
cltd
jnp
jb
cmp
dec
leave
lret
es
leave
mov
jecxz
outsb
cmpsl
pop
mov
sub
and
xchg
mov
and
pop
scas
push
cmc
lock
xchg
outsb
leave
push
enter
or
in
out
jbe
adc
mov
inc
jb
jo
mov
xor
xchg
xchg
or
lea
pop
fxch
sub
inc
jb
xchg
xor
hlt
daa
outsb
xchg
mov
sti
test
lea
es
lea
in
popa
pop
scas
sbb
inc
dec
stos
addl
icebp
add
sub
xchg
sahf
jo
pop
ja
and
xchg
pop
cmp
loop
jo
lret
push
mov
cmp
mov
pop
fwait
out
enter
inc
add
pop
jbe
call
pop
addr16
and
lahf
cmp
in
scas
pop
out
cltd
dec
cmp
movsb
jns
loope
xchg
xor
mov
ja
flds
xor
sub
out
jns
sbb
lret
or
cmp
mov
sub
orl
test
xchg
cmp
lret
fstp
out
test
jbe
fdecstp
pop
into
sti
out
ljmp
pop
dec
mov
jo
sub
xchg
std
mov
adc
mov
sub
mov
cli
mov
mov
xchg
xchg
pop
or
ljmp
cmpsb
adc
cli
sti
insl
and
push
pop
movlps
mov
sbb
inc
or
lods
jb
lahf
push
stos
jae
popf
idivb
sbb
imul
and
inc
jl
fs
jl
push
mov
pop
jb
pop
mov
pop
or
test
fcomp
idivl
push
jle
icebp
mov
add
xchg
adc
jne
push
xlat
dec
lret
mov
ds
aad
jge
mov
mov
fmuls
lea
mov
and
mov
nop
dec
push
outsb
in
inc
fcompl
sub
pushf
sbb
insb
int
fisttpll
mov
or
cld
jge
dec
fcompl
sub
pushf
sbb
insb
int
fisttpll
mov
or
cld
jge
dec
pop
pop
int3
sub
pushf
sbb
insb
int
fisttpll
mov
or
cld
jg
dec
fcompl
das
mov
popf
mov
jl
addr16
fnstsw
fidivl
repz
xor
fidivrl
pop
outsb
adc
add
jne
gs
ds
mov
movsb
out
xchg
incb
aam
mov
inc
adc
jp
cs
ds
adc
pop
movsb
push
hlt
in
aam
les
xor
or
push
xor
pop
xor
clc
aam
mov
add
xlat
mov
fsubs
cmc
dec
aad
pop
adc
jo
ja
fsubp
popa
imul
jmp
adc
in
mov
sahf
movsb
into
fs
inc
jle
push
mov
xchg
push
xor
and
icebp
mov
mov
subl
and
enter
rolb
test
and
inc
dec
je
pop
adc
mov
sbb
les
jmp
add
daa
push
je
cmp
movsb
dec
in
fidivs
add
inc
dec
mov
cmpsb
and
jle
mov
xor
push
cs
out
xchg
xchg
test
aam
les
pusha
add
je
fs
pop
add
nop
jmp
mov
inc
pop
cmp
add
pop
es
into
fcoms
test
mov
mov
jbe
pop
push
or
push
jge
jnp
pop
xor
mov
icebp
mov
in
aam
les
pop
and
adc
add
je
fs
ds
into
mov
movsb
out
xchg
incb
aam
les
pop
and
adc
add
je
fs
ds
into
mov
mov
mov
addr16
sbb
or
mov
cmovno
lea
xor
insb
std
pusha
mov
mov
lret
inc
dec
dec
in
mov
addr16
xor
dec
jns
stos
jo
add
imul
cmpsb
xor
enter
cmp
inc
or
popa
aas
vsubpd
lret
sti
sbb
sbbb
fnstcw
dec
push
pusha
jno
or
pop
push
imull
les
xor
mov
push
lods
adc
imul
adc
lret
fidivrs
mov
lock
adc
std
adc
orb
mov
mov
in
or
rcl
add
mov
mov
sbb
push
scas
adc
add
cmp
cmp
sbb
xchg
cmp
mov
cs
mov
push
xchg
jno
mov
in
mov
das
rolb
xor
imul
xchg
inc
mov
cmpsb
add
push
popf
xor
call
dec
xchg
dec
or
out
pop
lock
mov
mov
pop
test
lock
lret
flds
cmp
push
stos
flds
fstp
and
mov
out
xor
sbb
inc
xlat
or
mul
push
inc
sub
movl
ficoms
mov
jge
or
bound
jno
dec
out
xor
pusha
je
pop
in
jbe
cltd
push
std
cmpsl
stos
push
jb
jl
jp
addr16
or
cmp
mov
pushf
fisubs
mov
xor
cmp
test
jo
popa
out
adc
mov
lock
enter
lahf
insl
sub
xchg
pop
and
scas
cltd
movsb
int3
cwtl
iret
fmulp
fisubs
dec
incb
cmpsb
pop
adc
cmpsl
clc
mov
sub
aaa
dec
lods
jmp
mov
mov
mov
stos
pop
and
push
and
sub
js
push
adc
ss
stos
and
dec
mov
out
jp
cmp
mov
jbe
ret
addr16
dec
mov
lds
pop
sub
scas
in
pop
fnsave
or
ljmp
xor
pop
mov
testb
rsqrtps
lahf
fldenv
out
stos
lret
pop
cmc
ret
lock
ret
and
lock
lock
dec
stos
mov
cmp
mov
jl
lods
cmp
sub
ret
popa
sti
add
mov
ret
fsubrl
addl
aaa
sbb
xor
or
jl
jo
inc
es
cmc
pop
mov
ja
adcl
bound
pusha
popa
icebp
cmpsb
ljmp
jns
mov
jp
shl
clc
arpl
cmpsl
add
adc
or
fldenv
mov
pop
pop
xor
dec
sub
or
negb
jl
popf
adc
int3
adc
fidivs
and
fists
adc
mov
std
pop
repnz
pop
rcr
ds
inc
push
cld
jo
ljmp
adc
sti
jmp
lret
hlt
sub
add
pop
pop
outsb
xchg
xchg
out
shr
call
aad
dec
pop
mov
add
int3
fs
jbe
enter
inc
add
loopne
add
or
mov
push
xor
dec
scas
sbb
jne
decl
push
fnstcw
lods
xchg
mov
js
sub
pop
xlat
popa
xchg
mov
sub
push
xlat
push
in
jmp
mov
add
insl
sbb
adc
and
imul
mulb
roll
stc
xor
add
lock
cld
xchg
dec
and
das
pop
leave
std
cmp
xor
mov
push
loop
dec
push
inc
and
nop
pop
gs
daa
add
testb
jmp
ret
in
and
jge
adc
xchg
adc
adc
mov
call
jb
ds
cmpsb
sub
mov
loope
or
test
lods
add
jmp
aas
out
loopne
mov
push
aam
xchg
jg
sub
or
push
xchg
or
sahf
jecxz
pushf
jb
pop
loope
das
out
fwait
or
dec
mov
mov
js
hlt
mov
ret
bound
out
jge
out
int3
sbb
pop
add
out
mov
call
pop
or
ljmp
inc
arpl
daa
bound
sbb
inc
and
les
xchg
insl
dec
lock
in
inc
stos
mov
sub
xor
aam
rcr
add
jmp
ret
or
xor
test
lock
sbb
adcb
cmpsl
xorb
stos
repz
imul
jmp
inc
jb
pop
cmp
stos
adc
clc
dec
lds
cltd
push
mov
pop
push
in
mov
sbb
fneni(8087
cmp
push
adcl
cli
dec
jp
and
lods
mov
ja
or
gs
out
dec
inc
mov
mov
rcrb
add
scas
aaa
mov
sub
jnp
sub
xor
loop
fldt
dec
mov
mov
add
out
mov
lahf
inc
rclb
loope
imul
xor
imul
push
roll
lock
mov
mov
push
lods
test
and
cmpsb
cmp
inc
cmp
shr
mov
push
les
shlb
jnp
mov
sub
fisttpl
fistl
bound
outsb
dec
mov
lret
adc
movsl
xor
decb
lret
sub
in
sbb
mov
push
dec
xchg
adc
pop
or
and
adc
loopne
sub
ja
jg
rdtsc
xchg
lods
lods
lea
mov
pop
mov
insl
xchg
mov
pop
mov
std
pusha
notb
cwtl
sub
or
cmpsb
imul
mov
lods
sub
xor
and
test
stc
mov
pop
lret
inc
push
xor
fidivrl
xor
stc
dec
sub
inc
xlat
aam
stc
cmpsb
sbb
inc
es
jnp
xlat
jle
int
test
push
jp
gs
fs
sahf
mov
outsl
test
jmp
ja
xchg
push
inc
or
arpl
enter
clc
popa
std
fisubs
pop
lods
and
xor
jl
out
jg
movsl
push
cli
cmp
dec
add
sahf
std
pushf
fwait
mov
mov
inc
sbb
and
pop
jp
dec
jbe
xchg
and
sbb
cmp
scas
stos
mov
gs
jl
mov
mov
mov
jne
xchg
mov
std
jae
int
sbb
lock
fcmovne
daa
test
les
mov
icebp
xor
fcompl
fdivs
in
mov
leave
xchg
pop
inc
xor
push
ss
mov
xchg
imul
and
test
cs
push
shll
out
hlt
popf
in
mov
insb
fmull
mov
cmp
jg
push
out
lods
stos
test
cmp
icebp
les
cltd
pop
fistpl
inc
cmc
in
push
sarl
movsb
push
call
ficompl
pop
repnz
jle
lcall
mov
enter
pop
iret
decl
jnp
sub
inc
in
adc
dec
push
mov
pushf
rcll
cs
ror
push
sub
dec
xchg
inc
mov
in
call
sarl
mov
sahf
push
enter
inc
shlb
nop
xor
add
lock
jl
and
incl
xchg
cltd
or
jb
adc
cmpsl
push
push
test
decl
mov
icebp
and
adc
sbb
enter
xchg
xor
pop
push
pop
xor
push
mov
mov
add
mov
shlb
and
scas
cmp
rcrl
loop
sub
loopne
inc
mov
and
enter
lahf
mov
mov
lea
push
out
shll
les
cmp
addr16
std
subl
cmp
icebp
mov
cmp
push
call
subb
loope
add
in
push
push
cmpsl
les
js
mov
sbb
mov
fsubrl
xchg
aaa
sahf
mov
getsec
jmp
xor
xchg
mov
pop
lahf
aas
sbb
das
sub
sar
add
mov
fbld
mov
fistps
fs
cmp
in
stos
clc
icebp
out
push
ds
not
loop
mov
cltd
jo
bnd
fdivl
mov
das
mov
mov
mov
push
leave
sti
filds
cli
mov
jecxz
lret
ret
popf
fisttps
jmp
aam
ljmp
sub
stos
das
mov
jo
sahf
outsb
loope
bnd
xor
test
nop
mov
iret
stos
jle
ja
call
jne
lods
add
lret
out
inc
cltd
dec
xor
xor
push
out
lret
outsl
jns
shl
adc
leave
mov
je
fmul
movsl
rorl
xchg
scas
leave
ret
sbb
das
dec
inc
data16
pop
loopne
push
fisttpll
xchg
dec
call
addr16
add
xchg
sub
adc
mov
xchg
daa
sarb
xchg
xchg
xor
jae
and
push
dec
add
adc
in
cltd
repnz
popa
adc
xchg
push
aad
lcall
lret
mov
add
fucomp
cmc
setnp
ret
cmp
fwait
ljmp
repz
sti
ss
fdiv
adc
pop
jp
outsb
adc
push
xchg
lock
les
rcrb
loopne
lcall
dec
and
pop
jp
popf
fldl2t
les
cmp
stos
hlt
push
mov
mov
in
sbb
ret
movsb
add
aad
or
stc
mov
insb
inc
aas
pop
jge
ss
arpl
mov
imulb
ror
xchg
addr16
fs
push
push
sub
sub
adc
mov
fidivl
add
icebp
and
sbb
outsb
int
lea
jo
xor
adc
jns
mov
jb
inc
or
push
aas
inc
loope
push
aas
in
push
add
inc
add
xchg
or
in
in
xchg
lods
or
shrb
sti
adc
lahf
cwtl
cltd
add
pushf
bound
or
loop
or
in
inc
frstor
and
mov
inc
push
push
jne
push
lret
ret
xor
push
test
cld
clc
sti
cltd
neg
inc
test
push
inc
cmp
mov
ds
outsb
xor
sbb
mov
push
sub
cmp
sbb
push
imul
rcll
lcall
scas
ljmp
loop
mov
cs
divl
mov
ds
lods
int3
sbb
loopne
das
mov
std
int
scas
xor
and
sbb
icebp
pop
arpl
cmpsl
cmp
xchg
jmp
sbb
jnp
inc
add
into
nop
xchg
push
je
repnz
mov
push
dec
mov
pop
int
pop
or
adc
out
lcall
sub
mov
sub
aad
adc
jmp
out
rcl
xor
enter
mov
cmp
sbb
test
xchg
pop
pop
xor
inc
jb
clc
ficompl
rcll
fldt
test
movsb
pop
loope
stos
in
xor
jge
sub
cmpsl
dec
or
addr16
cmp
xchg
fisubrl
movsl
aad
notl
adc
stos
cmpsb
add
out
push
in
xchg
inc
lea
pop
in
mov
jl
jno
add
sbb
dec
pop
push
xchg
xchg
repz
std
loope
pop
out
push
or
jae
add
sbb
and
adc
fnstcw
call
inc
rclb
repz
sub
and
enter
loop
imul
mov
xchg
pop
sbb
dec
or
or
and
adc
cli
pop
push
mov
pop
imul
aaa
push
lret
imul
in
rorb
xor
push
xor
fwait
mov
cmpsl
push
mov
popf
sub
scas
pushf
ljmp
pop
mov
jno
div
out
or
add
rorl
shl
outsb
mov
mov
mov
dec
xchg
push
ljmp
fldenv
ja
outsb
xlat
ret
pusha
inc
shlb
lahf
in
jle
xchg
aas
nop
adc
bound
es
adc
pop
out
hlt
mov
mov
dec
lcall
loopne
daa
mov
jl
out
mov
inc
popf
fldcw
pusha
mov
add
out
enter
mov
outsb
xor
sbb
ja
add
and
mov
inc
mov
xor
aaa
dec
push
addl
shl
mov
test
mov
aas
je
ss
ds
mov
mov
pop
aad
sbb
fbld
pushf
and
jno
sti
hlt
xchg
add
jmp
int3
pop
cli
or
push
xchg
mov
sub
movsl
shlb
mov
and
int3
repnz
lods
cmc
dec
out
notrack
xchg
cld
push
sub
out
mov
mov
and
hlt
addr16
jg
xor
js
push
js
test
or
inc
ja
or
sbbl
jo
lcall
add
pop
mov
lret
out
jo
addr16
push
ja
mov
mov
or
daa
out
or
in
mov
xor
and
insb
or
and
cwtl
add
rol
mov
ds
mov
inc
ja
in
shlb
mov
out
push
add
cmp
aaa
imul
adc
js
sti
rorl
mov
out
lock
sub
cmp
sahf
push
in
lret
stos
mov
pop
mov
jecxz
gs
add
or
or
jno
lods
in
inc
or
orb
inc
dec
lahf
inc
pop
out
xchg
dec
neg
cmp
cmpsb
mov
pop
gs
cs
cmc
les
push
jno
inc
imul
js
xor
add
call
jb
ds
mov
jns
push
imull
cmp
in
loop
in
mov
xor
xor
sub
or
dec
or
insl
cs
pop
mov
lods
test
loope
popa
stc
adc
test
cli
aam
pop
inc
xor
movsl
xor
cli
pop
fidivrl
fwait
inc
or
add
test
movsl
xchg
dec
or
out
test
pop
loop
xor
pop
mov
inc
mov
jg
sbb
xchg
inc
arpl
into
outsl
sahf
ljmp
sub
in
mov
lock
push
mov
or
flds
in
popf
push
imull
or
push
add
pushf
fsub
out
in
mov
out
test
and
pop
out
jnp
addr16
scas
xchg
out
and
in
cmpsb
pop
mov
add
mov
lock
jmp
cltd
test
push
sarl
in
push
jl
in
adc
adc
out
or
ret
das
jg
pop
gs
sbb
pushf
push
ret
xor
and
jb
mov
or
aad
inc
shlb
jbe
popf
icebp
adc
push
std
sar
fwait
inc
dec
xchg
inc
gs
sahf
sbb
and
icebp
push
test
or
cmpsb
test
xchg
sbb
dec
rcrl
loopne
mov
xchg
popf
jl
mov
stos
je
ljmp
sbb
stc
push
push
jbe
clc
push
test
lds
jge
mov
test
xor
loop
cmp
fisubrs
cmp
jle
jae
push
in
push
push
clc
mov
sub
sub
add
sbb
out
insl
xchg
iret
dec
xchg
add
out
inc
adc
lcall
xchg
bound
cmc
scas
push
jg
push
lea
mov
leave
test
sahf
dec
fcoml
mov
daa
mov
add
ja
test
das
pushf
in
dec
mov
or
add
jg
jmp
xlat
fiaddl
jbe
idiv
push
xchg
insl
push
or
es
aam
jnp
add
cld
pushf
sbb
cmp
outsb
js
mov
frstor
dec
in
dec
out
mov
push
out
sahf
out
or
cmp
gs
lods
ret
movsb
xchg
xor
mov
sub
sub
xor
xchg
push
ljmp
pop
inc
xorl
imul
or
push
into
inc
sub
cmpsl
in
out
mov
mov
das
out
cmp
sbb
sub
inc
scas
js
jb
loopne
mov
xchg
pop
enter
or
add
xchg
and
cmpb
out
xor
jnp
pushf
stc
out
push
ja
gs
scas
pushf
cmpsb
clc
testl
and
orl
movsb
std
in
adcl
adc
mov
dec
fiaddl
jae
mov
pop
fcompl
and
insb
pop
lods
in
inc
in
jle
sbb
xchg
outsb
test
lret
pop
cwtl
rorb
cwtl
ja
ljmp
push
cli
gs
popf
aad
das
cmc
sub
into
fisttpll
mov
fdivl
dec
pop
lahf
fldl
push
or
out
inc
scas
mov
iret
mov
mulb
inc
or
sarl
sbb
shr
fisubrl
ja
xchg
cltd
add
sub
jns
mov
xor
or
cwtl
mov
adc
mov
jl
outsb
jne
xor
mov
test
repz
sub
mov
daa
arpl
fcmovb
sbb
xor
cmpsb
lahf
sarb
outsb
push
xchg
cmpsb
mul
xorl
pop
mov
cmp
cmc
adc
and
xor
out
fadds
faddl
push
push
push
adc
pushf
mov
scas
sub
or
push
inc
out
cmp
dec
mov
movsb
sub
xchg
enter
inc
ret
ljmp
lret
inc
mov
xchg
in
sub
or
iret
pop
popa
sbb
pusha
or
js
imul
fistl
fmull
divb
jecxz
mov
pop
ljmp
push
mov
cli
pop
xor
inc
icebp
int3
jle
rcrb
stc
pop
popf
xchg
arpl
rcl
popa
or
and
mov
movb
push
mov
inc
pop
mov
push
in
test
or
sub
outsb
xor
mov
mov
js
sub
dec
mov
cmp
std
xchg
fs
sub
xor
loopne
daa
mov
outsb
stos
sbb
ret
or
sbb
out
mov
sbb
rorb
movsb
bound
insb
jmp
fs
je
mov
jl
add
xchg
mov
mov
jbe
inc
sti
out
sbb
fildl
lock
repz
je
adc
out
sub
shl
cmp
mov
inc
sbbl
rcl
add
pop
mov
cmp
jnp
jmp
jmp
jns
xchg
aaa
shrl
mov
xchg
les
dec
adc
sbb
xchg
fwait
adc
jns
sbb
push
mov
mov
in
rcrb
faddl
gs
fdivl
js
push
sbb
push
or
push
mov
jb
aad
inc
or
jns
and
mov
adc
or
into
and
push
sbb
push
xor
inc
dec
dec
inc
mov
cmp
xchg
mov
ficoms
mov
or
sub
aam
jecxz
add
imul
jo
nop
jmp
xor
adc
test
mov
adc
fwait
pusha
adc
adc
mov
loopne
scas
push
sbb
push
fs
test
cwtl
sahf
jbe
loopne
xchg
jbe
jge
cltd
sti
lock
and
imul
sbb
mov
mov
xchg
popf
lock
pusha
shr
sbb
sbb
popf
stos
adc
push
sbb
call
cli
fs
das
xchg
adc
jo
std
sahf
mov
jae
loop
sahf
jge
sarb
pop
imul
fidivl
xor
xchg
cmpsl
frstor
aam
add
add
adc
cltd
out
dec
push
test
xchg
and
insl
aas
insl
loope
pop
call
stos
jnp
and
xchg
add
jo
push
mov
int3
dec
fs
adc
xchg
jo
sbb
call
call
pop
sub
pop
into
cmc
mov
ss
rcll
jbe
movsl
push
orl
xchg
lcall
push
lret
jge
pop
push
pop
add
inc
std
cld
out
movsb
adc
in
aam
les
pop
and
adc
add
je
fs
ds
into
mov
movsb
out
xchg
incb
aam
les
pop
and
adc
add
je
fs
ds
into
mov
movsb
xchg
incb
aam
les
pop
and
adc
add
je
sub
mov
movsb
xchg
test
aam
add
xor
mov
adc
jae
cld
xchg
fwait
shrl
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
into
add
xor
push
mov
repz
add
add
or
push
add
pop
dec
add
add
add
add
aaa
add
add
add
add
add
bound
lea
xlat
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
mov
addl
lret
add
add
add
stc
add
enter
lahf
add
add
add
add
mov
xlat
add
add
pusha
add
dec
add
add
add
hlt
add
or
add
add
jg
scas
add
add
push
add
add
add
add
add
outsb
add
add
daa
add
adc
mov
dec
add
xchg
add
add
add
add
lea
push
add
add
add
roll
add
add
add
add
add
sbb
test
mov
adc
inc
add
add
fadds
add
dec
add
arpl
addl
or
xchg
add
add
add
add
add
xchg
add
add
add
add
pop
add
add
cmp
add
add
add
add
add
add
add
js
lret
add
add
add
xor
add
mov
add
add
add
add
add
add
pusha
add
flds
stos
add
add
add
add
add
add
add
adc
inc
add
lret
add
add
dec
add
add
add
add
add
add
add
add
add
add
or
movb
add
add
ja
pop
add
add
add
cmp
mov
add
add
add
add
add
nop
add
add
add
add
add
add
inc
add
mov
lea
scas
add
and
add
add
inc
add
add
add
add
add
add
les
sbb
or
mov
mov
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
stc
add
add
add
sbb
jmp
dec
add
add
add
add
add
add
add
fadds
das
add
add
add
add
add
add
out
add
add
add
add
add
add
add
stos
add
add
mov
add
add
add
add
rolb
add
add
add
add
add
add
add
outsl
add
add
add
add
add
add
add
ljmp
add
inc
add
add
add
aaa
add
add
add
add
cmp
into
add
add
daa
add
xor
add
add
or
cmp
out
dec
cld
into
inc
inc
adc
pop
pop
or
inc
cld
adc
cmpsl
xlat
jae
push
or
push
sub
cmpsb
in
and
cltd
out
out
sub
mov
and
mov
js
dec
mov
xor
shrb
std
and
faddl
pop
imul
pop
rcll
jbe
inc
add
cmp
lea
cmp
mov
cmc
and
mov
or
add
adc
jp
sbb
jnp
aad
and
fistl
ret
in
ret
sarl
xor
inc
iret
mov
ds
std
les
jnp
and
add
inc
arpl
push
mov
mov
test
push
popa
ds
mov
stos
lea
or
lock
orb
mov
loop
rolb
mov
popa
popa
hlt
jmp
mov
mov
je
fimull
xchg
sbb
xchg
cli
gs
push
pop
sbb
sub
scas
stos
and
test
pop
push
cmp
mov
pop
mov
xor
mov
cmp
cmpsb
cs
dec
dec
mov
ret
insl
adc
das
pop
lea
pop
and
pop
lret
cltd
lea
push
cmp
mov
dec
inc
test
cmp
imul
cmpsl
lret
xor
and
cmpsl
push
std
icebp
test
iret
jne
fcoml
xchg
popf
xchg
and
lahf
adc
dec
jnp
push
test
rorb
fwait
or
ss
pop
xchg
outsb
fcoml
imul
dec
adc
int
dec
inc
sbb
dec
test
clc
sub
fnsave
mov
xlat
cmpsl
mov
shll
and
inc
loope
imul
sbb
out
jle
mov
jg
gs
cmp
movsl
mov
imul
and
inc
pop
xchg
sub
push
adc
pop
fidivrl
iret
pop
add
mov
cli
pushf
jno
dec
incb
cmp
xorl
adc
cmpsb
mov
xor
mov
lahf
mov
mov
mov
fidivl
cmp
mov
fidivl
push
jge
mov
xor
sub
cli
sub
sti
int
scas
and
scas
shr
xor
mov
push
inc
mov
adc
xchg
mov
test
mov
fdivrs
pop
xor
int
sbb
mov
mov
iret
aam
xchg
or
jb
dec
pop
cmpl
cli
and
lea
xchg
insb
mov
fsubr
out
scas
imul
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
