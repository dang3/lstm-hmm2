call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pushf
inc
mov
pusha
lods
jo
push
mov
xor
or
cmp
sub
pop
orb
insb
mov
inc
mov
pusha
lods
jo
add
adc
and
xor
or
dec
loopne
lock
orb
insb
mov
inc
mov
pusha
lods
jo
add
adc
and
xor
or
dec
nop
add
xor
das
hlt
xor
add
iret
add
pushf
pushf
int3
shll
pop
rcr
test
loopne
cmpsl
xlat
xchg
sub
pop
dec
xor
dec
jno
idiv
dec
out
imull
cmp
jge
mov
loopne
icebp
mov
mov
pop
xchg
sbb
push
fstpl
sbb
cs
in
xor
add
sbb
mov
mov
sub
add
leave
test
repz
mov
or
mov
pop
outsb
xchg
arpl
clc
lods
mov
lea
out
std
fucomip
data16
lock
movsl
ret
rorl
aad
mov
mov
sti
popa
dec
add
add
addr16
aas
rol
imul
jl
add
ret
push
mov
add
adc
and
xor
or
cmp
sub
pop
orb
insb
neg
sub
leave
ss
test
inc
lods
inc
pop
lods
or
cmp
and
aad
add
sbb
pusha
leave
daa
lcall
xor
push
mov
cmp
sbb
push
aad
fdivp
adc
and
adc
add
insb
int3
adc
and
xor
or
cmp
sub
pop
orb
insb
mov
inc
mov
pusha
lods
jo
add
adc
and
xor
or
cmp
sub
pop
orb
insb
mov
inc
sub
xchg
mov
inc
ja
dec
jne
jnp
scas
mov
std
ret
cmc
in
and
andl
ss
icebp
addr16
rorl
dec
test
jecxz
xor
xchg
ret
sarb
idiv
inc
ja
jg
cli
lret
pop
and
xor
dec
fwait
pop
in
lea
push
loopne
inc
arpl
sbb
xchg
fstpt
mov
add
sbbb
mov
cli
dec
mov
pop
sbb
jp
mov
push
mov
lods
loop
in
dec
adc
or
cld
push
js
sbb
xor
jp
jbe
pop
add
int
mov
add
fdivr
ja
mov
rcll
in
inc
lret
push
and
xchg
inc
xchg
mov
jns
inc
mov
or
sub
lcall
mov
inc
pop
cmp
and
jns
ret
jp
jl,pn
push
jne
pop
lods
pop
pause
mov
jecxz
push
xor
mov
lcall
fdivrs
mov
cs
jp
inc
ret
sub
xchg
mov
jp
sub
adcb
jnp
fisttps
inc
cmp
ret
rorl
test
inc
pop
aam
stc
movb
adc
lds
or
or
mov
add
mov
repnz
sbb
cmp
mov
sbb
cmove
inc
jecxz
mov
jle
sub
inc
xchg
clc
leave
sbb
in
add
adc
xchg
or
inc
das
sub
faddl
popa
xchg
sub
inc
and
sbb
lods
mov
stc
cmc
push
push
imull
xor
or
pop
call
jge
sbb
push
adc
outsl
xchg
sbb
xorl
push
inc
movsl
scas
icebp
roll
insl
cs
fistpll
test
cld
cltd
jae
jo
loope
jbe
pop
dec
xor
jle
mov
mov
fsubrs
sbb
ds
adc
aaa
orb
std
add
xor
sarl
lea
out
jno
cltd
mov
lds
inc
iret
pushf
rol
mov
xchg
mov
test
js
push
pusha
and
in
neg
lods
insb
or
dec
cmpsb
jae
push
or
jp
data16
rolb
push
test
cmp
add
cmp
ror
test
add
sbb
loopne
out
dec
cmp
mov
push
mov
ljmp
adc
push
adcl
out
or
dec
lods
or
clc
cmc
clc
lahf
sbb
and
int
cwtl
push
cmp
bound
orl
pop
loope
jno
inc
push
popa
mov
push
pop
icebp
cmp
je
mov
xor
daa
xchg
leave
repz
adc
in
div
mov
shll
in
pop
sbb
shlb
andl
test
repnz
or
mov
push
fwait
jg
mov
dec
xor
inc
icebp
xchg
dec
fwait
sub
or
lock
out
lods
xchg
leave
outsl
mov
in
or
adc
shlb
icebp
in
andl
mov
pop
sbb
leave
and
in
push
xor
out
or
inc
sarb
jp
test
ss
mov
mov
push
sub
orb
inc
push
cmpsb
lret
jbe
jmp
jl
pop
mov
fcomp
cs
add
dec
mov
subb
or
loopne
shlb
jne
sahf
ja,pt
cli
jb
test
add
stos
cwtl
test
inc
test
mov
lods
aam
fwait
lods
gs
sub
mov
and
lcall
fsts
stos
push
dec
inc
fimuls
test
enter
xor
movsl
das
push
fiadds
adc
dec
ds
cmpsb
out
sub
xchg
pop
adc
sub
jp
fcompl
dec
pop
pop
or
mov
es
leave
jne
mov
lods
sub
xorb
loopne
movb
lods
loopne
dec
cwtl
adc
shl
jp
aaa
adc
jg
inc
xchg
nop
repz
bound
inc
push
sti
pop
repz
popf
outsb
add
push
or
mov
cltd
das
enter
inc
cmp
lahf
mov
fwait
mov
mov
dec
push
fs
icebp
testl
shl
sbb
sbb
aas
aas
fimull
popf
dec
and
hlt
jecxz
fbld
fidivrs
das
mov
inc
push
sarl
negb
data16
fwait
les
aad
roll
pop
shll
adc
lds
lods
lods
jmp
popa
jae
lret
adc
test
js
jo
cld
fisubrs
inc
mov
movsl
jecxz
dec
imul
xchg
push
popf
adc
cmc
ret
xchg
stos
dec
pushf
popa
push
ficompl
out
jns
jp
icebp
xchg
mov
lea
mov
mov
fstl
jae
fistpl
sbb
or
or
addr16
add
and
push
or
pop
inc
push
cltd
jno
aad
addl
mov
loopne
insb
outsb
faddp
pop
or
xchg
pop
clc
out
sahf
enter
lods
out
in
les
popf
fistl
sti
sbb
mov
addb
push
xchg
jmp
or
js
enter
insl
xor
ds
fldlg2
rcl
mov
les
add
je
pop
aam
mov
fcmovb
scas
jb
dec
mov
mov
mov
adcl
inc
xchg
jg
lret
lret
in
pop
sarb
cmp
mov
or
cltd
cs
mov
cmp
mov
or
cmpsb
cmp
pop
adc
imul
imul
fisttpll
xchg
jmp
cmp
sub
adc
jmp
cs
enter
jmp
jge
inc
iret
insl
cltd
mov
in
daa
mov
std
lea
or
xchg
jg
cwtl
mov
mov
popa
xchg
sub
loopne
mov
pop
pop
clc
push
sahf
push
pop
popa
clc
das
aam
push
out
aaa
and
jnp
popf
outsb
or
ret
popf
jl
cmp
push
xchg
dec
xchg
inc
sbb
pop
fwait
push
fucomip
mov
test
jnp
test
jns
inc
inc
sbbb
dec
xchg
adc
mov
mov
lret
dec
push
mov
mov
scas
outsl
roll
pop
into
xchg
daa
lods
in
push
popf
lret
nop
je
out
dec
or
out
mov
jecxz
sbb
sub
addr16
sbb
loop
pop
cmp
dec
sub
leave
mov
outsb
dec
into
mov
mov
xchg
rcll
fnsave
dec
inc
add
nop
js
and
test
clc
ret
mov
sub
imul
push
inc
xlat
jns
outsl
fildll
cmp
stos
ja
adcl
je
sbb
fsubrs
or
insb
or
pop
fwait
roll
lahf
pop
fnstenv
push
iret
bound
iret
in
insb
add
push
std
sahf
repnz
xchg
sarb
sub
jl
outsb
inc
imulb
mov
jl
or
pop
and
test
pop
jg
pop
mov
fstl
lea
enter
insb
andl
int
jecxz
adc
xchg
movsl
pop
aam
push
adc
xchg
into
inc
jg
xchg
imul
aam
shl
xchg
int3
lock
xchg
jmp
out
fcoml
jb
mov
gs
stos
sub
jmp
sti
push
arpl
imul
adc
sbb
ljmp
jno
je
xor
mov
fsts
or
or
popf
gs
stc
sarl
mov
inc
mov
out
cmpb
cli
rcrl
pop
xor
lods
jg
sbbl
pop
movsl
into
lea
sub
loope
mov
adc
orl
push
sbbl
rolb
jo
mov
pslld
cmpsl
pmaxub
imul
xchg
mov
in
mov
pop
sahf
pop
dec
cmp
jl
pop
jle
iret
mov
mov
mov
cmp
or
nop
leave
repnz
movsl
outsl
scas
in
dec
and
jb
cmp
popa
cmpsb
mov
into
repnz
nop
or
js
push
lahf
jle
jmp
sahf
int
and
cmp
cmpsb
dec
xor
add
daa
repnz
out
lret
movups
mov
sub
sbb
ss
loop
mov
inc
sbb
or
sbb
notl
add
stos
in
mov
or
iret
insl
dec
das
sbb
dec
ret
stc
ficomps
sbb
iret
je
cmp
jb
mov
int
xor
xchg
mov
dec
js
pop
ds
inc
mov
in
cwtl
aad
imul
lcall
push
into
lret
mov
pop
and
xchg
sarl
gs
bnd
lods
mov
movsb
pushf
movsb
movsl
cld
jbe
in
int
dec
scas
jo
stos
cmp
scas
rcrl
in
out
xchg
dec
or
jmp
or
addb
scas
push
pop
mov
out
push
sbb
lahf
pop
jp
adc
pop
and
adc
sub
outsl
and
jg
adc
mov
pop
sub
pop
dec
add
xchg
test
out
lods
test
push
ret
jno
sub
adc
mull
or
mov
sub
sbb
lea
pop
stos
cmp
or
pop
sbb
push
push
sub
nop
mov
mov
pusha
fdivl
out
jmp
repnz
pop
mov
stc
lret
movsb
leave
pop
sub
mov
jg
mov
sub
into
xor
popa
movsl
cwtl
addr16
adc
frstor
push
lahf
cs
or
mov
test
in
mov
stc
call
cmp
dec
aam
stc
or
out
imul
jae
sbbb
add
dec
push
xor
push
push
ficompl
faddl
inc
pop
push
iret
repz
add
popf
aaa
and
mov
testl
test
ja
bound
outsl
in
jae
inc
xchg
pop
mov
inc
adc
pop
xchg
adc
mov
push
test
nop
test
enter
fwait
rclb
fwait
xor
cmp
fsubrs
out
xchg
mov
xchg
dec
mov
mov
mov
cmp
fisttps
std
jp
sub
mov
rcrl
jnp
push
in
daa
sbbl
cmp
jp
xchg
xchg
js
dec
push
shlb
mov
cmpsl
inc
pop
leave
cs
jg
push
or
sub
repz
sub
cmpsb
dec
sbb
das
mov
aaa
or
jb
cs
ss
fsubl
btcl
xchg
cmp
fwait
mov
mov
sbb
xchg
out
add
inc
cmp
scas
push
ss
jge
jb
mov
fmuls
das
push
adc
lcall
mov
or
stos
insb
xchg
inc
jle
lds
cmp
push
fdivr
cmc
mov
or
int
std
or
pop
je
mov
es
inc
xor
mov
dec
sub
pop
push
test
test
and
inc
insl
je
in
stos
dec
jp
imul
insb
std
push
decb
ss
shll
pop
test
loop
rorb
push
mov
inc
sbb
cltd
fisttpll
inc
fadd
push
mov
cwtl
cmpsb
add
shll
dec
or
loopne
push
xor
fsubrl
xchg
xchg
loop
out
and
cmpsl
shr
fistpl
xor
jmp
in
jle
lcall
js
dec
imull
ror
imul
mov
vcvttps2dq
add
call
xor
aad
dec
pop
pop
pusha
mov
add
xor
lret
push
out
xchg
xlat
xor
testw
stc
cmp
in
aaa
rolb
icebp
cmp
adc
mov
push
push
fimull
outsb
repnz
test
pop
andb
mov
xor
ret
test
lret
lds
fnstsw
inc
mov
sub
je
adc
cli
and
mov
cmpsl
repnz
insb
mov
adc
rcl
mov
fdivl
icebp
ret
int3
jne
cmp
mov
fldcw
clc
pusha
jmp
or
sbbb
ficompl
lds
add
or
lock
aaa
jnp
cltd
lret
gs
cmp
xor
enter
dec
inc
leave
cs
insl
imul
adc
call
add
xchg
fmuls
dec
inc
mov
xchg
addr16
lea
xor
je
push
add
dec
xor
and
mov
sahf
or
inc
inc
iret
hlt
dec
cmpsl
xchg
mov
and
or
pop
ljmp
movsb
movsl
out
cwtl
das
sahf
iret
mov
mov
push
cli
cwtl
mov
jns
pop
mov
icebp
push
cs
or
xlat
outsl
in
fdivrl
cmpsl
xor
shrl
aad
adc
scas
fldl
xchg
xor
aam
add
fs
cmp
mov
dec
int3
mov
xchg
sbb
icebp
jl
inc
mov
push
shll
shlb
xchg
and
or
lret
loopne
or
mov
insl
push
stos
inc
pop
fwait
and
dec
pop
xchg
je
outsl
push
outsl
dec
add
mov
lcall
dec
mov
lock
xchg
jbe
sbb
ds
pusha
push
nop
decb
inc
lcall
or
jbe
roll
hlt
imul
daa
xor
adc
lock
and
pop
dec
int3
adc
js
sbb
fs
cld
inc
les
popf
xor
pop
sub
fcmovnb
inc
lcall
xchg
sbb
add
adc
xchg
adc
rcll
ljmp
test
scas
mov
mov
mov
cmpsl
insl
in
pop
sbb
xchg
lods
add
es
dec
or
imul
bnd
or
in
sub
sub
xor
inc
xor
andl
pop
xchg
inc
pop
arpl
jmp
push
sbb
movsb
into
dec
dec
jns
aas
or
sbb
cmp
jnp
or
arpl
std
add
or
xor
aad
add
cpuid
dec
mov
xor
dec
aaa
dec
shl
divl
cs
out
inc
in
adc
out
xorb
sub
sub
inc
xorb
mov
mov
sahf
cwtl
and
daa
adc
inc
call
pop
popa
hlt
outsb
outsl
pop
negb
out
mov
or
mov
or
dec
cltd
andb
into
jbe
inc
inc
mov
push
mov
arpl
aas
nop
add
push
or
in
push
daa
movsl
loop
dec
ficompl
and
insb
xor
inc
test
push
xor
fiaddl
sti
add
push
pop
gs
push
cmp
cmp
push
mov
fwait
add
push
pop
dec
and
sub
xchg
movsl
xor
pop
aaa
int3
inc
jmp
adc
mov
leave
rorl
xor
push
arpl
add
xor
rclb
or
test
enter
mov
mov
sub
sub
push
push
daa
fldcw
cli
push
mov
js
or
jge
jae
stc
xlat
and
mov
add
mov
data16
in
mov
or
enter
mov
mov
xchg
movsl
jbe
leave
xlat
dec
mov
xchg
cmp
or
dec
inc
insb
cltd
repnz
fwait
and
mov
setg
mov
pop
pusha
pop
in
jl
jle
out
iret
lcall
in
pop
nop
fstps
sub
dec
mov
inc
test
jle
lcall
test
or
imul
ja
jbe
and
repz
in
ret
andb
dec
sub
adc
std
ss
pop
aaa
inc
loopne
push
jae
cmp
fildl
cs
pop
xchg
aaa
pop
and
ljmp
mov
dec
inc
fmull
jmp
xchg
ret
js
incl
add
addr16
inc
addl
xor
movsl
call
sub
ljmp
shl
pop
bound
popf
dec
sbb
jns
ficomps
sarb
sub
dec
mov
mov
push
cmp
lahf
aaa
in
or
aas
adcl
jb
mov
scas
mov
in
cmc
dec
xor
sti
fisubrs
mov
lea
outsb
dec
loopnew
div
cmp
pop
mov
jno
xchg
pop
mov
mov
and
add
loopne
pop
repnz
inc
dec
movsl
pop
push
popf
dec
call
aas
add
arpl
dec
insb
mov
dec
stos
ja
pop
cli
lahf
sbb
mov
rclb
push
sub
fstps
jbe
nop
aaa
int3
sbb
mov
lret
adc
push
mov
push
cmp
xlat
mov
xchg
repnz
pop
call
adc
popa
sub
fmuls
mov
adc
and
fmuls
cmpl
dec
nop
push
je
je
mov
mov
insb
mov
mov
mov
add
or
dec
lock
int3
push
jmp
push
ret
fwait
inc
cmp
fdivr
int
sbb
movsl
int
jle
pop
push
pop
test
rclb
push
test
fcomip
xor
ja
aam
ret
testb
addb
call
jmp
lcall
aad
lret
adc
pop
fadd
out
xlat
xchg
in
push
mov
and
add
mul
sub
xchg
add
dec
mov
and
push
push
push
mov
push
xchg
call
scas
push
jns
pop
call
daa
sub
faddl
shll
inc
mov
int
cmpsl
lea
push
cmc
sbb
jecxz
sub
or
sub
cmp
imul
mov
das
mov
lret
mov
or
mov
push
addr16
mov
or
mov
adc
sub
mov
mov
test
lahf
leave
xchg
xchg
ds
sbb
jl
mov
adc
cmp
imul
dec
or
mov
pmaxub
int
fwait
mov
test
push
jp
bound
dec
movsb
xorl
sbb
and
stos
mov
jo
jb
sub
jmp
cmp
gs
sbb
jbe
test
mov
mov
mov
rcrl
pop
fadd
ljmp
xchg
aad
xor
jmp
dec
jp
mov
adc
xor
jnp
mov
pop
inc
push
icebp
and
insl
imul
pushf
push
fs
cmpb
xchg
xlat
cwtl
xchg
adc
lea
clc
add
test
jmp
cwtl
pop
cmp
aaa
lea
fcoms
push
imul
sub
bound
insl
insb
ret
stc
mov
sbb
nop
hlt
cwtl
hlt
sbb
mov
sahf
push
movsb
jge
stos
push
cmp
aaa
xor
imul
cwtl
jbe
xor
enter
scas
push
dec
sbb
cmp
orl
les
xchg
sbb
orb
inc
mov
add
or
sbb
push
ss
cmp
insb
lret
and
xchg
into
mov
rcrb
rep
jp,pt
push
jmp
pop
sub
out
divl
fistps
and
pop
lock
jecxz
gs
xlat
ss
or
fdivr
popa
cmc
inc
mov
ficoml
js
repz
push
and
lret
mov
out
gs
mov
add
jns
sbb
imul
test
jb
add
jp
rorb
cld
stos
js,pt
dec
repnz
in
push
sahf
call
lds
dec
imul
pop
jp
shl
fmuls
push
daa
lret
scas
lea
xor
sti
ret
imul
dec
fcmovnb
dec
xchg
jp
xor
das
pop
hlt
inc
out
jo
lock
or
pusha
js
mov
aas
rcll
pop
xchg
jecxz
sub
inc
xor
ljmp
je
inc
cmpsl
ss
mov
xchg
int
test
bound
shll
loop
jno
sbb
mov
andb
mov
pop
or
icebp
insl
xor
adc
xchg
inc
dec
inc
mov
pop
arpl
jb
xor
sub
jp
fwait
or
mov
mov
ljmp
popa
dec
mov
cwtl
jbe
ds
sti
cmpsb
leave
jmp
sub
lahf
sbb
mov
pop
mov
andb
inc
inc
push
call
out
cltd
add
xchg
loopne
lahf
test
nop
cmc
hlt
stos
or
mov
sub
jmp
idivb
hlt
ss
or
dec
mov
xor
fimull
popa
lods
jo
add
adc
and
xor
or
cmp
sub
pop
orb
insb
mov
inc
mov
pusha
lods
jo
add
adc
and
xor
or
cmp
sub
pop
orb
insb
mov
inc
mov
pusha
lods
jno
add
adc
and
xor
or
cmp
sub
pop
orl
inc
mov
pusha
lods
je
add
nop
cld
mov
or
xchg
loopne
xchg
or
outsl
sbbl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
push
stos
mov
pop
test
or
fsubrl
out
testb
xchg
imul
push
stos
mov
push
fistl
jmp
sti
push
or
sbb
sub
cmp
mov
pop
xchg
imul
push
stos
mov
push
fistl
jmp
sti
ss
cmp
inc
cmpl
dec
shlb
ret
adc
es
xor
push
stc
loopne
add
push
aam
mov
nop
cmp
jb
inc
adc
or
sti
xor
fistpl
not
sahf
sub
sbb
jecxz
xchg
pop
int
push
mul
fistl
xchg
lods
mov
mov
dec
scas
fsubs
movsl
cmc
or
dec
xlat
sub
sti
or
jns
stos
push
sub
mov
fwait
inc
shll
in
pop
into
push
outsb
cs
xchg
sahf
sub
and
mov
sbb
rorl
je
jnp
dec
cltd
inc
jnp
push
cmp
scas
sbb
sbb
movsb
xchg
into
jp
jbe
fs
push
dec
sub
pop
jmp
aam
adc
sbb
sti
dec
inc
inc
fwait
push
stos
mov
push
fistl
jmp
sti
ss
sbb
sub
cmp
dec
xchg
imul
das
ret
aaa
lret
inc
test
inc
or
inc
xchg
pop
rorl
aam
shr
sub
cmp
xlat
adc
xchg
jno
sbb
dec
movsb
sub
xor
loop
pop
fwait
add
xchg
push
jmp
sti
ss
sbb
sub
cmp
dec
xchg
imul
push
stos
mov
push
fistl
jmp
sti
ss
sbb
sub
cmp
dec
xchg
imul
jle
or
add
sarb
enter
and
in
std
mov
sub
add
sbb
ret
outsl
xchg
fiadds
pop
test
pop
js
popa
test
aam
sbb
xor
cmp
jno
lods
cld
imul
mul
loope
jns
push
popa
mov
sub
xor
daa
cwtl
inc
scas
mov
push
xorl
sbb
sbb
imul
dec
mov
std
jmp
fisubl
pop
jns
pop
data16
jbe
fbstp
push
push
adc
or
mov
jne
adc
jmp
mov
adc
fdivl
mov
add
fldl
inc
imul
xchg
add
jmp
ljmp
and
xor
jb,pn
and
mov
sbb
jle
fsubl
std
push
mov
jns
pusha
call
jb
mov
or
sub
sbb
rcrb
cmp
leave
mov
ret
xchg
test
std
push
pop
lock
or
xchg
int3
lret
mov
xchg
fcmovb
push
lret
mov
inc
lahf
sbb
or
std
popf
xor
fidivrs
imul
loopne
add
dec
frstor
jg
mov
or
pop
aas
aas
es
js
add
mov
or
add
pusha
mov
inc
fsubs
cmp
je
push
lahf
xchg
std
negb
es
out
push
js
sbb
push
rcrl
ja
mov
icebp
fwait
xchg
push
xchg
mov
add
out
std
pop
js
xchg
fildl
dec
enter
mov
and
jecxz
rclb
xchg
dec
outsl
iret
mov
xchg
xor
and
test
push
inc
ret
and
jbe
push
mov
clc
adc
pop
ss
adc
pop
add
insb
dec
inc
shll
cmp
out
mov
fldenv
inc
sbb
jecxz
out
fs
add
mov
and
and
pop
pop
aas
pop
mov
pop
mov
add
rclb
loop
aam
dec
jmp
fimull
xchg
push
jge
lods
fisubrs
rcl
sbb
add
sahf
daa
sbb
test
jge
insl
pusha
ret
sub
or
mov
and
inc
bound
xor
and
fs
das
addr16
fisubrl
dec
dec
push
addr16
xchg
and
and
and
add
mov
mov
imul
xor
sub
cmp
aad
and
aad
sub
or
lret
stc
lret
push
sahf
pop
ds
fildll
mov
sbb
shrb
pop
arpl
push
mov
in
in
clc
ja
int
out
xchg
cmp
mov
dec
fucomip
sbb
mov
pop
xchg
hlt
lock
cli
int3
out
call
repnz
xchg
mov
inc
rorl
clc
lods
lahf
lcall
xchg
xor
inc
pshufw
sub
dec
loopne
mov
subl
mov
or
mov
movsl
clc
je
jecxz
inc
xchg
cltd
repz
add
or
push
jnp
push
jmp
jle
push
cmp
jp
xchg
sub
or
mov
daa
push
xor
push
mov
cmpsb
cwtl
lret
xchg
mov
jnp
xor
dec
dec
movsb
dec
xlat
jo
je
add
repnz
lret
mov
pop
and
arpl
push
stos
inc
jnp
sbb
test
pmulhuw
push
jne
mov
or
or
mov
hlt
mov
xchg
lret
in
pop
fimuls
xor
neg
lods
mov
sbb
and
cmp
push
ret
scas
jne
stos
fsubr
test
cs
orl
mov
out
mov
push
cli
movsb
xchg
in
sub
loop
adc
push
shll
push
xchg
xchg
int3
js
mov
mov
push
call
fistps
mov
jg
pop
or
insb
xchg
push
ss
pop
cmp
jmp
pushf
test
sbb
cs
aad
arpl
and
or
fmull
nop
mov
icebp
dec
insb
xlat
cmp
in
push
mov
pushf
jg
jns
pop
push
out
and
push
mov
push
pop
xor
jo
xchg
fldenv
jb
dec
adc
dec
lods
loopne
pop
lret
js
fldl
movsb
pop
mov
fldt
orb
fisttpll
bound
push
adc
clc
or
sub
sub
clc
std
mov
jmp
ss
out
dec
lret
aas
movsl
mov
es
dec
cmpsb
adc
jp
scas
test
js
cmp
cmp
mov
mov
jae
dec
push
jae
or
xchg
jae
add
cmp
xchg
xchg
fdivrs
xchg
jmp
aam
insb
jae
sbb
jmp
ficoms
std
lods
lahf
cmp
or
movsl
push
jnp
shufps
adc
push
push
insl
rcll
sahf
shll
shll
test
call
inc
test
push
push
xor
jg,pt
cwtl
xor
push
mov
and
jmp
adcb
pusha
in
lret
pop
or
enter
not
jb
js
loop
in
test
lea
sbbl
mov
mov
add
repnz
cmpsb
adc
jno
pop
imul
in
xchg
and
sub
push
pop
push
cmp
adc
and
push
shrl
xchg
cld
stc
mov
sahf
nop
cmp
loopne
cmp
mov
and
lcall
dec
pop
in
loope
mov
xchg
mov
add
push
call
mov
mov
push
and
mov
inc
lahf
sbb
and
xchg
jb
dec
scas
sbb
out
xor
pop
popa
xor
inc
pushf
cli
xor
dec
insl
lahf
jl
sbb
adc
out
mov
sahf
add
movsl
cmpsl
icebp
loopne
leave
cmp
mov
loope
xor
roll
mov
repnz
cmp
lea
inc
sbbb
dec
jae
mov
pusha
mov
ret
push
jl
shlb
stos
leave
pop
jp
inc
sti
insl
and
lcall
out
shr
mov
xor
jnp
or
or
repz
pop
cmp
pop
cli
inc
out
xchg
daa
movsl
push
nop
cs
dec
mov
push
in
cmp
add
jg
scas
dec
repz
pop
ret
cli
and
fnstenv
push
out
mov
adc
testb
xchg
inc
mov
lret
xchg
stos
mov
and
xor
je
mov
outsb
add
lret
cmp
stos
test
mov
mov
loope
and
icebp
add
sub
sahf
enter
mov
inc
movsl
push
sub
daa
mov
call
into
rep
xchg
cmovg
cmp
push
inc
dec
sub
insb
sbb
sub
mov
push
jne
push
push
das
pop
rorl
jae
jle
fistps
and
mov
jns
inc
lcall
and
shlb
sub
jmp
int
mov
mov
je
mov
jbe
lods
or
dec
xchg
jp
bound
jns
aaa
pop
mov
adc
mov
lods
iret
scas
jmp
repnz
cmpsb
add
xchg
inc
mov
call
data16
fsub
adc
ljmp
xchg
ret
lods
rolb
cmp
out
loope
mov
cmp
ss
inc
xchg
mov
dec
and
mov
push
stos
jbe
dec
repnz
cmpsb
mov
inc
dec
add
ret
test
mov
pop
pop
mov
ret
cltd
fisubl
pop
jae
xchg
popf
mov
add
test
push
push
sbb
inc
sub
outsl
inc
outsb
sub
sahf
cmpsb
push
imul
in
sbb
cltd
jg
xchg
cmc
repz
das
jno
jno
or
xor
mov
andb
repz
cmp
loope
es
mov
scas
cli
inc
sub
lods
xor
and
fistpll
fadd
sub
sbb
sub
mov
or
mov
xlat
mov
jnp
cmp
roll
nop
mov
cmp
out
lcall
stos
xchg
sbb
add
out
inc
sub
adc
inc
sub
jmp
xchg
jnp
clc
mov
and
mov
jno
adc
cmpsb
pop
push
pop
mov
or
or
testl
mov
insb
pop
jne
push
outsb
in
or
dec
cs
js
xchg
inc
push
adc
pop
jo
xchg
neg
add
lahf
out
push
clc
data16
hlt
imul
cmpsl
mov
jnp
mov
and
repnz
push
pop
hlt
loope
xor
lret
sub
adc
mov
push
popf
dec
pop
gs
xchg
scas
fdivp
or
dec
mov
out
pop
pop
dec
mov
sbb
notb
xor
in
loop
aas
xor
pop
mov
jno
repnz
pop
sub
in
dec
pop
js
pop
push
jno
mov
inc
push
fcom
pop
xlat
jnp
lds
and
jbe
mov
call
fs
push
push
aad
insb
lret
lahf
enter
pop
push
imul
xor
or
sbb
inc
mov
cvtdq2ps
pop
sub
cli
xor
les
cmp
arpl
fisubrs
pop
fwait
shrb
jecxz
xor
leave
xor
mov
add
mov
inc
sub
jg
test
test
fsubrl
sti
mov
clc
jne
adc
push
dec
sub
ret
mov
xchg
aam
lahf
mov
or
cmp
mov
xlat
rcl
test
pop
jae
xchg
mov
fisttpll
dec
out
fwait
xor
cmpsb
inc
rdpmc
and
les
jns
outsl
int
pushl
mov
xor
jle
in
les
clc
leave
test
and
aas
movsl
test
mov
mov
mov
shl
push
push
ret
test
adc
fiadds
jecxz
push
adc
call
push
icebp
mov
or
in
adc
enter
add
xlat
dec
or
sub
inc
pop
dec
dec
jno
mov
inc
mov
cmpsw
addb
jo
or
adc
push
adc
add
xor
fcmovu
pop
movsl
fadd
shll
faddl
in
fwait
outsl
scas
sti
cmp
inc
lods
sahf
xchg
gs
stos
pop
mov
das
in
dec
mov
mov
mov
jp
cmp
outsb
ljmp
jnp
pop
leave
in
gs
frstor
cwtl
outsl
pushf
cmp
lock
xlat
je
inc
rorl
or
add
idivb
mov
push
dec
fisubl
xor
and
cmp
push
push
mov
add
mov
sub
enter
sub
sub
loop
ret
push
adc
aad
mov
push
stc
cmp
cmp
adc
inc
xchg
or
adc
lock
leave
arpl
arpl
xor
sub
jbe,pt
ficomps
fstl
cmp
decb
and
jge
xchg
lods
test
popa
jl
sarb
jge
lcall
pop
clc
jo
sbb
rcr
xchg
dec
gs
stos
icebp
mov
outsl
push
pop
and
cmp
aad
pop
add
dec
fistl
dec
jbe
insl
adc
push
mov
or
insb
mov
andnps
sub
test
mov
xor
jns,pn
cmp
and
mov
mov
out
inc
in
or
popa
sbb
imul
mov
outsl
pop
shrb
xor
xchg
aam
popf
pop
mov
jg
imulb
lret
mov
mov
js
mov
xlat
outsl
cmc
or
fmuls
les
dec
adc
sub
sbb
push
mov
inc
clc
lock
in
mov
cmpsb
add
push
icebp
xchg
movsl
fists
into
scas
sbb
popa
push
out
pop
jb
sbb
mov
mov
adc
mov
sub
outsl
out
lret
xor
and
dec
dec
loope
add
outsl
cmp
shrb
sbb
in
into
movsl
mov
int
in
hlt
out
pop
xor
cmpsl
lds
add
clc
mov
insl
int
jnp
pop
adc
jecxz
add
push
test
cld
or
mov
dec
jne
pop
mov
xor
popf
ret
je
lea
pop
aaa
cmpl
sub
cmpsl
xor
data16
test
dec
sbb
leave
inc
fnstenv
jbe
mov
jmp
movsl
inc
ljmp
cwtl
or
int3
pushf
mov
iret
in
ljmp
sbb
pushl
sub
xchg
je
sahf
les
inc
sub
or
sub
inc
or
mov
cmp
pop
cli
add
inc
dec
pop
jb
dec
int3
rcl
repz
js
xchg
lret
jo
aas
loope
lods
push
insl
mov
mov
imul
push
jl
xchg
pop
cmp
movsb
mov
jp
call
pop
mov
sbb
mov
popf
out
fs
lods
inc
and
aas
fmul
adc
pushf
add
call
ss
shll
std
push
mov
in
pop
pusha
add
outsb
sti
test
arpl
or
jg
mov
mov
lds
sub
int3
mov
xchg
lds
and
push
sub
adc
cmp
mov
insl
push
loopne
lock
scas
mov
mov
jmp
lcall
adc
mov
cmc
pop
iret
dec
xor
push
jl
push
xor
mov
mov
stc
imul
sub
and
lods
push
push
cltd
nop
and
xchg
push
leave
es
pushf
insb
mov
sbb
mov
pushf
cmpsb
in
jne
jge
clc
out
mov
lea
lods
imul
fwait
pop
pop
bound
iret
cs
xor
jp
mov
mov
cmpsb
mov
fstpt
je
xorb
xor
jno
xor
or
sbb
jne
inc
or
addr16
xchg
and
pop
push
icebp
and
insl
inc
add
dec
lea
fstps
pushf
in
adc
jo
and
lret
xor
stos
mov
mulb
mov
fadds
or
xor
mov
lret
loop
loop
dec
and
hlt
inc
sbb
mov
aad
data16
mov
adc
js
dec
sub
and
add
jbe
inc
or
imull
dec
daa
push
in
add
push
arpl
mov
and
jbe
adc
jae
outsl
pop
fs
xorl
ljmp
sbb
xor
rorl
inc
push
leave
fidivrl
nop
imul
call
lcall
add
dec
scas
adcl
out
les
and
dec
repnz
in
sbb
mov
bound
out
jo
xchg
aam
sahf
inc
fsubr
pushf
lcall
mov
cmpsl
cmp
adc
sub
xchg
mov
xchg
test
mov
ficompl
in
push
xor
mov
jge
or
gs
fistps
sbb
mov
pushf
cmp
push
out
jl
clc
cmp
cmp
divb
clc
lahf
je
gs
fmuls
and
lods
ret
test
push
pop
in
xchg
dec
add
push
xchg
adc
gs
insl
outsb
js
nop
pop
mov
bound
out
lahf
sbb
mov
push
and
fs
popa
mov
cmp
out
push
xorb
xchg
and
inc
daa
out
pop
or
mov
mov
stos
scas
dec
cmp
pop
test
mov
loope
mov
dec
addr16
jecxz
cli
xlat
out
sub
les
sub
test
bound
push
out
mov
sbb
into
in
add
xchg
xor
inc
jmp
loopne
mov
movsb
mov
add
mov
pusha
push
lods
sbb
cmp
test
aaa
sub
xor
scas
cmpb
sub
adc
scas
in
sti
jl
ficompl
jnp
aad
stos
nop
pop
shl
ss
jo
push
lcall
sbb
jl
cmc
pop
jg
jae
mov
sub
mov
test
iret
push
adc
into
shll
or
repnz
stos
leave
cmp
out
xor
scas
mov
lahf
aam
jb
dec
pop
test
cld
mov
push
dec
enter
push
jp
add
mov
cmp
iret
or
popa
repz
ljmp
loope
mov
xchg
imul
or
dec
and
mov
sub
pop
and
in
lea
jb
mov
into
sbb
cmp
dec
xchg
push
imul
fsub
jo,pn
sbb
nop
out
rolb
scas
stos
dec
cmpsl
fcompl
call
and
scas
mov
fs
sbb
xorb
xchg
sbb
cmp
push
inc
xor
jmp
pop
push
adcl
push
jnp
dec
mov
lods
sub
movsb
mov
jbe
pop
lahf
dec
pusha
inc
cmp
cld
or
lds
dec
stc
xchg
push
out
xor
xchg
sbb
repz
bnd
cmpsl
insb
fs
ret
or
cmc
jmp
testb
pusha
psadbw
test
add
xor
jbe
lea
xchg
adc
in
cmpsb
adc
out
lods
mov
or
adc
stos
popa
stos
or
add
scas
clc
add
gs
add
sub
dec
sub
test
pop
mov
jmp
push
xchg
into
sbb
clc
adc
jnp
mov
pushf
cmp
dec
inc
mov
and
out
mov
mov
lret
mov
ljmp
xor
stc
out
add
mov
mov
add
leave
insl
cmp
jae
xlat
pop
xchg
aaa
shr
shll
test
popa
jl
std
push
xor
push
jecxz
inc
sbbb
test
in
into
jmp
popf
fistpll
fidivs
xorl
cmp
adc
aaa
pop
jne
stc
mov
sbb
jecxz
in
pushl
fsub
clc
mov
scas
repnz
arpl
mov
dec
inc
adc
push
xor
xchg
xor
xor
cmpb
inc
add
pop
sub
adc
cmpsb
out
fs
lods
addr16
jo
lods
std
xchg
inc
lods
test
into
pop
jb
es
mov
daa
xlat
int3
sbb
pushl
int
jl
loop
movsl
fisttpll
push
adcb
nop
xchg
repnz
addr16
xrelease
cmpsl
add
xor
fadd
lods
pop
ljmp
negb
aam
fstl
sbb
push
dec
inc
mulps
xor
gs
sub
push
jo
pushf
jbe
lret
sahf
rclb
stos
xchg
mov
ss
scas
hlt
out
repz
dec
leave
testb
in
cmpb
add
jp
push
inc
in
fsubl
mov
adc
jo
lret
scas
push
cwtl
inc
sub
lock
rcrb
push
in
rorl
mov
pop
or
dec
pop
mov
jmp
mov
repz
hlt
ljmp
das
ds
daa
je
test
es
mov
mov
jnp
or
fs
imul
lods
sub
imul
loop
xchg
cmp
inc
insl
sub
movl
out
xorl
push
pop
leave
insb
ret
enter
xchg
jecxz
push
rcrl
inc
pop
fstps
push
dec
pop
aam
jae
lea
outsb
outsb
ds
jb
shl
fmuls
inc
insl
push
pop
xchg
mov
add
fnsave
es
mov
pop
insb
cmp
push
cld
data16
andb
pop
ds
lods
jecxz
movsl
push
inc
inc
xchg
push
popf
push
aaa
imul
lock
sub
mov
mov
mov
xchg
jnp
mov
outsl
test
push
sub
sbb
mulb
gs
push
xchg
in
test
in
cmp
movsb
push
ud0
add
adc
das
shlb
adc
cmp
lret
clc
jmp
ds
sub
hlt
outsb
lcall
insl
mov
fdecstp
pop
sbb
pushf
jnp
mov
mov
inc
adc
dec
or
push
aam
icebp
call
mov
mov
add
or
push
mov
sbb
outsb
push
or
js
insb
sub
lock
jae
hlt
inc
inc
xor
popa
xor
mov
push
fistl
jmp
sti
ss
sbb
sub
cmp
dec
xchg
imul
push
stos
mov
push
fistl
jmp
sti
ss
sbb
sub
cmp
dec
xchg
imul
push
sub
jbe
push
fistl
jmp
jnp
or
sbb
sub
cmp
dec
xchg
imul
push
stos
mov
push
fistl
jmp
sti
testb
sbb
cmp
sbb
dec
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jns
pushf
in
xchg
add
jp
or
loope
icebp
movsb
cs
and
in
aam
les
mov
movsl
adc
add
je
fs
aad
jmp
xor
test
aam
les
adc
lds
mov
enter
in
aam
mov
and
add
push
jae
cli
and
push
inc
add
mov
pmaxsw
lods
mov
push
cmp
lea
loopne
outsb
jg
sarb
lret
imul
push
jno
jne
push
fimuls
fnsave
adc
test
sbb
sahf
hlt
xor
xor
or
fwait
xorb
movsl
imul
inc
dec
mov
ljmp
shrl
pop
jmp
les
out
adc
cmp
jb
cmc
xchg
pop
pop
in
test
mov
mov
and
jmp
mov
push
shll
pop
jne
ret
test
sbb
aam
pop
cmp
je
and
push
aad
push
inc
xor
lcall
dec
mov
lret
push
sbb
mov
and
push
les
mov
mov
rep
jecxz
out
jmp
cmp
push
icebp
inc
call
mov
pop
inc
fs
inc
jmp
push
aad
lds
test
aam
les
mov
movsl
adc
add
je
fs
aad
lds
test
aam
les
mov
repz
xchg
or
xor
and
idivl
pop
mov
pop
xchg
pusha
xchg
ja
mov
mov
jg
cmp
and
xor
imul
insb
in
fs
mov
loop
in
mov
aad
mov
into
push
repz
sub
fwait
clc
fcompl
pop
jg
xor
cmp
push
mov
xchg
cmpb
mov
idivb
rolb
jo
dec
out
xchg
aad
mov
repz
or
and
pusha
xor
mov
lret
popf
sbb
sti
mov
ret
push
aas
sbb
in
add
fisubrl
cwtl
lahf
mov
je
xchg
adc
sbb
out
sbb
aaa
xor
in
hlt
cmp
in
sbb
fs
add
fdivl
or
add
jmp
jnp
fs
xchg
inc
mov
fs
or
push
push
or
mov
js
xchg
sub
or
test
xor
repnz
fs
lock
loopne
adc
lods
adc
leave
xor
push
mov
or
mov
popf
nop
push
and
gs
lock
jae
pushf
js
sub
jae
sub
jecxz
cmp
jmp
scas
push
movsl
cmp
mov
mov
in
sbb
pop
mov
dec
aas
repnz
sti
leave
sbb
jnp
add
pop
pop
mov
int
mov
mov
repz
add
xchg
or
jno
mov
into
rorl
push
xchg
imul
cmpl
mov
fs
sbb
out
ret
dec
sub
jns
xor
test
and
mov
push
cmpsb
out
andl
scas
mov
adc
aaa
sbb
leave
mov
sar
xor
add
adc
arpl
and
jo
ror
and
mov
dec
jbe
loop
xor
vpmacssww
lret
lods
fwait
or
mov
push
sti
dec
push
cmc
push
imul
lret
sub
sar
xlat
inc
lret
pop
push
xor
clc
mov
shr
mov
pextrw
pop
ss
cltd
fildl
sub
cmpsb
gs
sbb
jns
add
cmp
mov
mov
ljmp
dec
mov
or
mov
fstps
xchg
pop
int3
mov
test
push
loope
lock
dec
and
inc
fs
fbstp
sub
inc
cli
insl
mov
fs
sub
leave
push
and
and
mov
or
enter
subb
lret
clc
push
xchg
ret
pop
and
fadd
push
aas
stos
imul
lret
inc
leave
test
les
addb
cli
fld
xchg
jg
push
pop
enter
mov
xlat
sub
repnz
stc
mov
fcoms
xor
dec
movsl
sarb
xor
mov
xchg
pop
xchg
jb
rcll
inc
inc
scas
lahf
clc
or
xchg
sbb
push
xlat
popa
jge
dec
pop
cs
adc
push
sbb
inc
in
push
roll
jne
jae
cwtl
sbb
out
add
and
in
xor
neg
mov
fstl
pop
cmpsl
leave
push
or
test
and
xlat
push
jns
lahf
jmp
out
xchg
inc
pop
inc
testb
dec
xchg
and
mov
cwtl
push
icebp
fnstsw
add
outsl
hlt
dec
lret
mov
test
gs
scas
push
or
adc
sahf
out
sub
and
je
pop
mov
push
pop
jecxz
jmp
sub
mov
jge
mov
jg
bswap
or
fwait
cmp
std
bound
sbb
lret
aaa
or
std
fbstp
rclb
das
gs
faddl
cmpsb
lret
loopne
mov
fs
jg
repnz
add
nop
mov
cmpsb
ds
inc
nop
mov
add
icebp
popf
in
push
sarl
pushf
test
inc
cmp
cmpb
jecxz
popf
loop
cmp
cmp
inc
loopne
xchg
pop
push
arpl
mov
and
dec
mov
shlb
dec
xor
fistpl
mov
dec
add
ret
popa
adc
mov
pop
ss
adc
dec
cltd
arpl
jecxz
jo
cmp
jno
pop
dec
mov
add
inc
dec
mov
adc
or
rorl
mov
insl
adc
xor
lods
add
into
imull
psraw
mov
sub
add
stos
f2xm1
movl
xchg
mov
mov
inc
stos
sbb
cmp
pop
scas
ret
rorl
flds
xchg
loop
adc
mov
repz
vmaxss
mov
mov
push
insb
sub
sub
movsl
les
mov
xlat
test
push
sub
ljmp
and
fidivs
aas
or
repnz
dec
pop
dec
in
into
leave
lock
out
push
imul
adc
fnstcw
cs
cmpsl
mov
cmpb
add
notb
dec
fmull
pop
mov
sbb
mov
jecxz
movsl
inc
cmpsl
pop
scas
mov
movsb
push
lea
inc
icebp
out
push
pop
lods
cmp
mov
scas
mov
imulb
push
pop
push
inc
adc
dec
popa
mov
adc
js
movsb
sub
cmpl
adc
jl
outsl
mov
into
roll
sarl
pop
push
std
inc
jge
inc
jge
fwait
pop
scas
inc
and
mov
test
subl
and
pop
insl
mov
stos
lcall
xchg
cmp
movsl
addb
xchg
fstps
test
pop
movmskps
rorb
jns
test
mov
addb
xor
xchg
in
fs
loope
stos
subb
xor
ret
or
in
fisubs
jmp
cmpsb
jmp
pop
in
cltd
sub
or
inc
lcall
jmp
ja
mov
adc
add
cmp
lcall
scas
dec
sub
cmp
and
cwtl
sub
addr16
dec
mov
out
add
xchg
enter
or
fwait
out
xlat
cld
shrb
mov
std
jno
jno
je
and
adc
pusha
test
xchg
test
loope
inc
loop
or
add
jecxz
pusha
dec
std
movsl
dec
or
adc
fiadds
out
cmp
insl
push
std
shrl
test
jl
sub
test
mov
pop
sarb
addl
sbb
call
ret
shlb
xchg
sub
clc
sub
sahf
push
popa
gs
cmc
dec
adc
jnp
or
mov
aam
and
pusha
cmc
dec
mov
mov
jle
cmp
jbe
add
rep
cli
add
out
or
aam
loop
das
xor
fnsave
xor
stos
xchg
and
insl
mov
lret
jae
js
and
mov
mov
sub
inc
popa
or
out
js
roll
push
std
pop
sub
in
fbld
lock
push
sbb
xlat
pusha
sub
loope
mov
sub
push
test
mov
aas
push
stos
inc
subb
adc
into
stc
test
scas
and
dec
les
mov
mov
popf
ja
mov
sarb
je
inc
jmp
outsb
xchg
mov
mov
cs
cmp
std
call
push
adc
pusha
ljmp
or
jmp
pop
bound
aad
inc
cmc
mov
fisubrs
push
icebp
lds
test
inc
pop
xchg
ret
dec
cli
in
pop
test
fs
add
fwait
push
push
mov
pop
or
push
mov
adc
sub
add
and
in
arpl
hlt
and
imul
inc
inc
in
cmp
sti
hlt
pop
in
adc
mov
outsl
jae
es
shr
mov
or
scas
jp
gs
lahf
sbb
inc
pusha
dec
les
popf
mov
movsb
xor
jmp
inc
xchg
pop
stos
imul
xchg
or
and
push
decb
in
movsl
cmp
and
sub
mov
std
cmpsl
xchg
frstor
push
adc
jb
cmp
push
ja
mov
jmp
mov
mov
aam
mov
rcll
shll
xlat
je
push
inc
incb
sbb
je
sbb
cld
aad
pop
fistl
and
inc
xor
push
outsb
pop
and
pop
fsub
pop
arpl
pop
rorl
add
jns
xchg
cmpsl
test
test
or
dec
outsl
push
enter
leave
sbb
adc
dec
sub
xor
mov
test
mov
or
shrl
or
lcall
fisttpll
pop
pop
out
hlt
es
movsl
or
nop
cmpsl
ja
fsubl
pop
mov
adc
js
std
mov
mov
inc
inc
out
ljmp
and
push
xor
bound
or
std
mov
or
cmp
test
cmp
mov
notb
adc
fists
out
mov
lds
mov
mov
aam
sbb
xchg
lods
cli
jae
mov
xor
mov
mov
and
std
push
cmp
fsubl
imul
aas
xorl
jae
mov
mov
cmp
mov
in
rorl
in
add
push
mov
xor
cmpsl
es
ss
jno,pt
cld
mov
loope
dec
fildl
andb
sbb
sub
pop
sbb
add
in
mov
movsl
fstpt
inc
adc
sbb
cltd
nop
cltd
dec
xor
fdivrl
dec
mov
nop
shll
or
mov
lret
push
jg
cmp
cmc
mov
inc
test
ss
fmuls
mov
aam
xchg
or
outsl
outsb
aas
sbb
xor
bound
xchg
mov
pop
push
ror
jb
jb
add
mov
dec
or
gs
inc
mov
das
jge
sub
mov
fs
jecxz
xchg
add
pop
pop
sbb
popf
pop
push
xchg
xchg
xchg
sub
and
gs
push
cwtl
adc
movsb
add
add
fidivrs
mov
ror
test
cmp
fxch
aaa
adc
les
in
sbb
scas
inc
lahf
call
dec
mov
and
cmp
cmp
insl
xchg
ljmp
addr16
lcall
and
daa
cmp
adc
push
insb
test
lea
cmp
push
call
push
jl
cmpsb
cmc
out
xchg
xchg
pop
xor
add
negb
lods
add
fmuls
pop
dec
jp
pop
scas
sti
stos
jmp
push
hlt
popa
push
inc
out
int
mov
inc
sbb
push
in
scas
fidivl
fisubl
fidivrl
lods
adc
ret
xchg
mov
jnp
inc
sbb
sarl
adc
jge
jg
xchg
and
jo
fistpl
jae
dec
adcl
sbb
adc
and
adc
add
aam
inc
ret
ds
arpl
leave
out
lock
and
sub
shll
xchg
sbb
aam
push
rorb
cwtl
popa
xor
std
mov
movsb
inc
in
xchg
and
xchg
xor
jp
xor
cmpsl
rcl
pop
outsb
push
jmp
mov
xor
outsl
adc
sub
pop
lods
mov
inc
cmpsb
xchg
inc
out
adc
les
fsts
fs
add
cmpl
repnz
imul
jns
leave
adc
push
mov
adc
xchg
mov
fcoml
xchg
jnp
cmp
je
fcom
and
and
mov
test
leave
adc
hlt
es
sub
cmp
cmpl
adc
incb
add
mov
enter
gs
out
ss
xchg
xor
push
xor
sahf
loop
jp
xor
mov
cmp
mov
fidivs
insb
lods
jbe
jno
insl
adc
dec
fwait
xchg
sub
mov
adc
andb
sbb
cmp
pusha
cmp
imul
add
mov
cmp
negl
adc
xor
mov
roll
push
clc
xlat
push
cmp
mov
sarb
cmp
adcb
xchg
clc
ss
mov
andb
jne
mov
and
inc
imul
cmp
es
dec
cmpsl
pop
xchg
daa
aam
ja
mov
ljmp
ds
jne
lret
mov
xchg
xchg
sub
pop
push
mov
and
or
aaa
dec
jns
ror
jp
je
jbe
and
in
jmp
inc
fistl
sbb
je
and
xchg
xchg
sbb
pop
faddp
cli
jmp
and
or
invd
mov
xor
leave
inc
bound
ss
fadd
repz
in
lods
or
push
mov
push
pop
jne
je
insb
ss
rclb
lods
sub
mov
xchg
add
xchg
sbb
icebp
sbb
pop
or
lock
mov
xorl
cmp
xchg
inc
jns
jb
std
push
mov
sbb
ja
addb
jg
fimull
iret
jl
lahf
pop
sub
lock
jge
cld
jecxz
test
xor
in
mov
out
cmc
push
fsts
cmp
jge
rclb
jle
inc
negl
pop
daa
rorl
mov
lods
subl
mov
dec
adc
mov
in
fldt
xor
scas
pop
clc
aas
aas
ret
adc
jo
cmp
push
scas
mov
insb
dec
xor
sub
je
ss
call
imul
mov
sbb
stc
in
daa
push
xchg
fsubrl
jno
lock
mov
insb
add
dec
pop
test
adc
mov
rclb
jg
and
xchg
insl
mull
xorl
dec
mov
insb
jl
mov
aam
cmp
iret
push
iret
shrb
jno
lahf
pusha
stc
and
fisubrl
jns
fsts
cmpsb
pop
jne
out
mov
aad
in
das
cs
ror
sahf
cmp
in
mov
lret
les
jns
aad
mov
add
loopne
movl
lahf
scas
rolb
inc
loope
dec
es
hlt
mov
icebp
aaa
loop
in
mov
andl
cmp
rcrl
ret
pusha
mov
cwtl
add
xchg
jb
add
adc
lret
iret
xor
sbb
xor
icebp
pusha
les
ja
mov
dec
or
sti
fwait
push
mov
cmp
dec
or
inc
movsb
mov
pusha
and
pushf
lret
sub
out
jl
shl
pop
lahf
dec
jmp
pusha
lods
rcll
test
or
popf
xor
xor
test
pop
sahf
fists
into
xor
add
fsubl
in
push
push
sbb
lahf
lcall
sbb
lahf
ja
cltd
fildl
push
bound
mov
push
jecxz
push
outsl
cwtl
scas
cli
fmull
mov
mov
mov
fsubr
scas
adc
sub
pop
fidivrl
add
js
jg
repz
les
xchg
sbb
inc
test
ss
and
mull
xchg
jge
push
dec
or
and
cmpsb
mov
in
mov
mov
inc
cs
push
adc
mov
mov
xor
pop
cld
dec
xchg
fnstenv
movsl
arpl
insl
inc
stc
pop
sti
sbb
push
test
lcall
in
loopne
and
in
scas
sti
leave
fmul
or
repnz
or
lret
addl
ja
push
pop
and
mov
mov
repz
scas
ret
inc
push
jmp
pop
arpl
clc
cmp
nop
scas
pop
xchg
imul
inc
fbstp
mov
lock
adc
inc
adc
test
or
test
hlt
inc
cmp
mov
xchg
jae
mov
mov
jae
xchg
mov
repnz
lahf
add
ds
aad
jg
sbb
imul
inc
xchg
ja
das
in
jmp
mov
add
xchg
add
mov
repz
xor
jp
and
das
lock
cld
push
lea
cmpsw
inc
in
cmp
adcb
jbe
mov
cmp
jmp
idivb
mov
xchg
mov
jo
mov
faddl
push
mov
or
into
jb
inc
daa
roll
push
repz
jb
add
lahf
out
orl
iret
ja
pop
mov
mov
dec
pop
pop
je
pushf
cmp
psubd
ja
out
fldt
scas
xor
aas
sti
pop
pop
pushf
ss
enter
movsl
jmp
sbb
stos
les
xchg
loope
sbb
cmpsb
sbb
mov
jmp
popl
and
mov
fsubrs
push
mov
adc
cmp
adc
mov
adc
mov
mov
pop
pop
dec
stos
cli
decl
adc
mov
pushf
or
lds
and
das
inc
jp
jae
and
inc
aad
push
push
sub
cmp
movsb
mov
mov
fnsave
aaa
cmp
das
ja
xor
ljmp
ljmp
sarl
stc
cmc
pop
add
out
daa
fs
ds
pop
popf
push
mov
push
imul
daa
inc
mov
adc
pop
loope
pop
pop
or
icebp
icebp
or
jne
insl
ficoml
cmpsb
loopne
cmp
mov
mov
fmul
aas
scas
add
push
inc
rol
xchg
dec
cmp
xchg
out
out
sti
cmp
sub
insb
cmp
int
stos
into
sub
enter
mov
jp
ret
stc
loope
mov
adc
test
mov
sbb
scas
add
pushf
pushf
loop
and
ret
mov
lfs
pop
in
jbe
xchg
outsl
aam
mov
jle
push
jge
mov
cmpsl
test
jle
or
mov
xor
jl
mov
ss
ds
outsb
sahf
imul
mov
popf
call
sbb
loopne
mov
cmpb
aad
inc
sbb
mov
xchg
aad
adc
fadds
nop
in
inc
rcrb
iret
cli
pop
and
or
sbb
dec
cbtw
nop
aad
cld
pop
mov
inc
fldcw
int
sub
mov
jg
loop
push
push
mov
testl
add
inc
push
std
out
es
mov
mov
ficompl
jp
cwtl
loop
insb
outsb
jl
aaa
pop
adc
and
imul
imul
enter
xor
dec
ja
loopne
mov
daa
cltd
flds
pop
xchg
popl
lds
out
jl
lcall
ret
in
sbb
andl
loop
das
or
ret
call
aad
mov
dec
ja
push
popa
push
rcrb
pop
xor
inc
pop
ficompl
adc
lret
jle
dec
sub
ret
cltd
xchg
lret
mov
push
dec
jnp
dec
mov
and
hlt
sub
add
arpl
int3
push
mov
and
das
ret
dec
js
lahf
xlat
scas
call
xor
fbstp
scas
sbb
dec
cmp
push
clc
lret
mov
push
clc
mov
pop
lock
cmp
pop
lods
mov
loopne
aam
std
dec
xchg
lret
clc
lods
pop
or
mov
mov
sbb
sbb
sub
adc
stc
mov
insl
push
jle
and
leave
push
insb
in
and
repnz
mov
cmp
gs
inc
popa
cmpsb
nop
shlb
imul
push
lret
add
in
fists
nop
mov
std
popf
or
pop
jne
pop
jl
es
iret
stos
in
enter
pop
inc
mov
xor
cmp
mov
es
lahf
repnz
in
sbb
xor
pusha
inc
push
in
das
pop
cmpsb
xor
mov
or
in
insl
mov
outsb
inc
insl
inc
or
xor
shr
jno
sbb
loope
mov
testl
adc
sbb
adc
sub
cmp
adc
xor
pushf
or
mov
rcll
aam
rol
jmp
sub
mov
inc
jmp
test
xor
sbb
dec
aas
fdivrl
shl
jp
xor
imul
stos
mov
dec
arpl
and
and
push
lea
cmp
movsl
push
lods
into
fsubl
fwait
lret
mov
jno
in
pop
sbb
int3
stc
fnstcw
notb
dec
movsl
sbb
sbb
push
aad
lds
test
aam
les
mov
movsl
adc
add
je
fs
aad
lds
test
aam
les
mov
stos
add
add
jne
pusha
mov
lds
adc
std
rcrb
sub
or
jno
lds
in
push
les
ds
insb
sbb
or
jecxz
sarl
ret
repnz
pop
arpl
push
aas
inc
dec
xor
jg
jg
repz
jecxz
sarl
das
out
xchg
push
pop
jae
inc
das
push
xor
pop
outsl
and
jg
xchg
popa
xchg
mov
cmpsl
rcl
lahf
idivl
fwait
push
lods
cmp
jo
inc
xor
xor
sub
out
lock
test
sub
cmp
jo
fldenv
iret
pop
scas
mov
dec
pop
push
js
repnz
mov
jg
mov
pop
push
push
mov
xor
cmp
push
pop
xor
outsl
adc
out
leave
stc
in
or
pop
fwait
fs
loopne
pop
fidivs
and
jg
mov
repz
fwait
jnp
mov
lret
adc
jl
mov
xor
data16
sti
jg
adc
and
out
fwait
jae
cs
iret
inc
mov
pop
and
xor
call
hlt
frstor
sbb
idivl
jae
or
outsl
pop
or
or
outsl
adc
inc
xrelease
scas
push
mov
mov
push
cmc
pop
movsl
aaa
inc
or
inc
jg
jecxz
cli
jecxz
nop
lret
in
mov
cli
jmp
sysexit
jae
pop
daa
pop
sub
cmp
push
adc
mov
mov
mov
std
lods
out
dec
push
jp
das
ss
dec
arpl
sbb
push
ret
adc
xchg
fbld
pop
arpl
push
aas
inc
dec
xor
outsl
adc
repz
jecxz
sarl
mov
pop
arpl
push
aas
inc
dec
xor
outsl
adc
repz
adc
out
mov
int
enter
or
xor
or
daa
xchg
add
inc
and
ljmp
imulb
aam
stc
lea
data16
inc
add
xchg
je
xor
add
inc
repz
jo
jp
push
cmc
xchg
dec
dec
or
push
cltd
xchg
jmp
mov
std
fwait
mov
pop
dec
push
ss
shll
pusha
xchg
in
out
rolb
testl
pop
shrl
movsb
xor
pop
dec
cli
rclb
stc
ficoml
jle
stos
inc
repnz
rcrb
ret
es
mov
sbb
adc
insb
or
repz
dec
ficomps
or
shrl
push
ret
aam
or
std
lret
adc
fwait
or
stos
dec
stc
ljmp
xor
out
lds
adcb
lds
aaa
fldt
mov
adc
cwtl
sarb
jb
std
std
or
cmp
or
or
sub
fmuls
fcmovb
addb
mov
pop
push
and
pop
in
push
push
jmp
adc
mov
mov
jg
add
les
shrb
add
and
popa
ljmp
add
jae
xor
sbb
cmp
lea
mov
jns
adc
xchg
xchg
or
cmp
addr16
and
push
cmp
xchg
popf
sbb
push
and
xor
jle
repz
jg
dec
ret
or
sar
jae
mov
push
push
xchg
push
in
sub
rcrb
sbb
xchg
stc
cld
xor
ret
das
insb
aad
xorb
jl
mull
pop
in
dec
cmpsb
mov
sbb
lea
les
in
xchg
sub
ficompl
js
mov
stos
int
loope
sub
out
jg
pop
aas
out
push
xor
lret
dec
mov
dec
mov
es
neg
mov
pop
test
fwait
lret
xor
and
pop
cmp
loop
inc
add
jns
lahf
movsl
sub
fnsave
push
mov
jle
adc
mov
les
inc
xor
xchg
aam
mov
test
adc
repnz
cmpsl
icebp
arpl
adc
jns
jmp
or
fimuls
mov
enter
sbb
sub
xor
jno
test
pop
loope
test
shrb
mov
not
and
loope
outsl
push
mov
dec
fwait
mov
jbe
jb
in
ja
mov
testl
sub
mov
ror
shrl
add
jns
jl
push
cmp
jb
loopne
pushf
insl
lahf
jle
push
push
mov
sub
inc
xchg
xchg
scas
mov
xchg
xor
gs
rcr
imul
lock
aaa
dec
cmp
add
pop
dec
repnz
cltd
push
add
push
and
xchg
leave
call
sbb
jg
pop
pop
adc
call
sub
in
lea
icebp
jl
mov
sbb
lock
out
popf
mov
les
adc
cmp
daa
jns
repz
jae
leave
les
push
cwtl
repnz
repz
pop
in
and
rolb
loope
fldl
jg
cltd
pop
mov
mov
ds
mov
fchs
test
jae
sahf
nop
dec
jbe
cmp
fcomps
lret
mov
xrelease
andb
roll
dec
mov
iret
outsb
fistl
adc
jbe
xchg
scas
mov
lea
inc
push
repnz
xchg
xchg
pop
xor
paddq
mov
pop
in
jp
daa
add
mov
push
or
int3
add
ret
mov
fisubrl
mov
push
and
scas
fwait
push
out
call
pushf
xchg
mov
xchg
pop
insl
lods
adc
jbe
fwait
cwtl
cmp
jge
dec
pop
jno
jg
push
adc
jmp
aaa
das
imul
popl
andb
inc
leave
ss
js
ljmp
sub
mov
add
inc
add
sbb
arpl
nop
jmp
adc
stc
dec
leave
mov
fisttpll
add
xchg
inc
jb
mov
inc
inc
dec
imul
in
rolb
sbb
cmp
xor
jne
mov
pop
mov
scas
in
xor
add
aaa
jmp
in
loope
fwait
sarb
jp
mov
jnp
shrl
movl
push
pop
mov
test
xor
scas
sub
sub
jge
xchg
pop
arpl
mov
incl
mov
int3
xchg
push
test
aaa
movsb
xchg
repz
or
mov
out
pop
clc
add
dec
jle
aad
pop
insl
and
push
cmpsl
and
cmc
and
jae
nop
mov
popf
jle
dec
sub
push
inc
sbb
mov
adc
outsl
inc
std
and
jl
mov
inc
sbb
cwtl
and
aas
enter
in
nop
dec
mov
mov
ficompl
mov
mov
movsb
shlb
mov
pop
push
dec
mov
jb
pop
ss
push
stos
inc
jp
pop
in
cmp
shll
push
insl
pop
push
stos
stos
out
dec
mov
popa
pop
push
clc
imul
sub
test
enter
push
iret
xor
mov
and
push
fcmove
fs
dec
mov
shrl
repz
int
xor
ljmp
adc
or
jne
push
negb
imul
les
xchg
fcmovbe
sub
ror
xor
cmpsb
mov
mov
test
and
mov
adc
xor
ret
popw
dec
aam
bound
sbb
push
sbb
cmp
test
repz
data16
cmp
cmp
cmp
stos
mov
pop
fcoml
gs
or
cs
pop
or
lahf
adc
subl
mov
dec
mov
push
rorb
out
sub
sahf
mov
xchg
jecxz
loop
ret
insl
or
xchg
test
es
or
mov
filds
pop
jmp
rep
ds
pop
rol
ret
popf
inc
sub
xchg
and
in
mov
das
push
das
push
cmpsl
aas
mov
popa
lahf
pushf
adc
sbb
cmc
inc
fidivl
lret
pop
push
xchg
lea
mov
es
sub
les
push
aad
bound
mov
popa
arpl
dec
cwtl
jb
mov
lcall
jnp
fdivrl
fiadds
popf
insb
hlt
mov
pop
int
ja
jg
setno
mov
inc
int
jle
lds
cmp
xor
in
out
into
xchg
cmp
jbe
out
inc
sbb
mov
rolb
movsl
incb
sub
lods
cltd
dec
pop
cld
pop
cld
and
or
xchg
out
inc
iret
movsl
dec
cmpsb
pop
cwtl
push
aad
loopne
pop
push
dec
je
add
or
sbb
imul
fimull
xchg
stos
adc
int3
inc
and
xchg
xchg
mov
incl
ret
std
and
xchg
out
xor
pop
or
ss
mov
lock
jge
int
mov
jnp
adc
scas
cmp
popf
ret
xor
cmp
cmp
dec
and
ljmp
mov
lock
sti
xchg
or
jge
inc
push
arpl
sbbl
add
and
pop
mov
ror
into
add
clc
mov
mov
mov
pusha
shlb
dec
cltd
lret
clc
add
dec
inc
xor
jnp
jp
sub
xchg
mov
cmp
mov
outsb
mov
mov
dec
aad
push
inc
out
lret
and
pop
cmp
movsb
popf
cwtl
mov
mov
shlb
shll
dec
ja
inc
in
mov
sbb
imul
xor
pop
imul
gs
filds
fdiv
rcrl
push
in
sub
hlt
or
out
pushf
andl
mov
aam
stos
cmpsl
jnp
mov
push
mov
out
dec
xchg
xor
adc
push
sbb
push
mov
into
stos
mov
pop
jp
xchg
mov
sahf
test
or
shr
jle
stc
imul
push
xchg
push
and
cmp
pop
jp
sbb
loopne
sub
and
xchg
adc
stc
push
add
lea
shll
add
mov
or
mov
xchg
imul
insl
jno
movsb
mov
sahf
ret
jl
add
push
xchg
outsl
xchg
xchg
aaa
xor
lds
push
jge
jmp
insl
sub
inc
cs
sbb
mov
rclb
popa
push
fstpt
cmp
mov
mov
fnstcw
pop
mov
andb
xor
inc
lret
fisttps
ret
adc
jns
arpl
and
repz
xchg
and
mov
pop
adcl
jo
xchg
jns
mov
xchg
mov
and
push
testb
mov
out
push
movsb
push
xchg
in
mov
leave
test
mov
lds
and
mov
pushf
add
lret
push
mov
jmp
pop
aas
imul
aad
movsl
jbe
ret
movsl
jg
sub
and
cmpsb
sahf
addr16
add
dec
jno
jg
subb
xor
push
push
repz
sbbl
mov
movsb
jmp
cltd
or
lods
and
mov
jo
inc
add
push
stc
bound
fistl
cltd
add
push
jmp
cmpsb
mov
ljmp
pop
lcall
push
or
cmp
mov
inc
pop
xchg
imul
push
dec
mov
in
es
mov
sbb
push
fmuls
inc
jbe
push
out
js
or
in
test
jg
sub
in
cmp
out
cmpb
push
aas
cmp
ds
stos
lock
mov
ficompl
adc
adc
add
leave
scas
notb
cmp
fucomip
inc
pop
lods
jl
nop
mov
roll
mov
adc
les
js
pop
mov
push
or
lock
test
movsl
or
push
mov
sub
sub
xchg
sub
push
inc
sub
xchg
and
stos
or
or
mov
movsb
push
mov
fstps
scas
jne
sbb
mov
pop
shlb
test
inc
and
cld
and
xchg
inc
xchg
das
mov
adc
and
fsub
add
lret
sub
out
movsl
mov
test
xchg
xchg
in
adc
fimull
jns
lods
xchg
lcall
xor
jns
mov
scas
push
sbb
or
enter
add
mov
dec
inc
adc
shll
xchg
mov
loopne
mov
addr16
add
lock
sbb
pop
adc
aaa
mov
jno
mov
or
mov
or
sar
sub
movsb
ror
inc
mov
fisubrl
or
popa
xor
mov
inc
mov
adc
pop
mov
mov
test
daa
sbb
clc
dec
jbe
jno
mov
xlat
xchg
pusha
inc
xchg
adc
pop
mov
pop
lock
and
pop
cmp
repz
mov
mov
cmp
arpl
fisubrl
xor
dec
mov
sbb
mov
jmp
leave
lea
or
jp
std
les
sbb
add
push
push
push
ljmp
add
cmp
lcall
stc
daa
mov
xor
xor
int
popl
sub
jnp
adc
and
rcrb
stos
frstor
push
clc
loopne
dec
and
jnp
movsb
sbb
add
xor
jb
cmpsb
pop
jne
cld
movsb
mov
add
jge
ja
movsb
mov
dec
inc
iret
jbe
jns
repnz
lahf
inc
cmc
test
repz
cltd
aaa
mov
mov
das
pusha
push
mov
sub
addb
pop
test
dec
shlb
mov
and
test
into
cmc
or
fs
mov
pop
mov
fld1
outsb
dec
loopne
mov
rcr
inc
lahf
pusha
shrb
pop
sub
jb
gs
mov
dec
adc
xchg
sub
or
lahf
pop
mov
jmp
movb
fisttpl
ss
push
lea
or
jl
jb
jnp
insb
adc
outsl
mov
xchg
lock
and
movsl
jmp
dec
or
add
push
dec
out
xchg
xor
aam
add
cmp
push
fwait
call
pop
xor
dec
jmp
inc
push
add
xor
xor
sub
in
inc
mov
data16
testl
adc
aas
dec
repz
mov
test
addr16
ror
or
test
movsl
iret
mov
fldt
adc
int
ds
ja
lea
daa
test
in
sub
dec
outsl
add
scas
cmovl
out
mov
ret
cmc
aam
pop
mov
and
hlt
jbe
mov
cli
mov
jmp
mov
loop
add
pop
sbb
aad
xor
cmp
in
das
aas
aad
push
mov
mov
or
xchg
cli
push
lock
stos
inc
inc
add
xorb
fcompl
fisttpl
out
push
mov
sub
mov
sbb
ret
sub
adc
mov
adc
sbb
mov
lds
and
ja
mov
xor
into
iret
sahf
call
sub
sbb
push
xorl
enter
add
push
sahf
pop
pop
inc
es
stc
inc
push
cwtl
xor
push
or
shl
imul
out
ljmp
cwtl
or
aad
xchg
inc
mov
fdivp
inc
rep
cmp
fldt
outsb
dec
js
fiaddl
stos
test
repz
lock
arpl
xorb
repnz
sub
push
out
hlt
jbe
loopne
jmp
jle
or
ja
mov
or
imul
sbb
fimuls
pop
aaa
cmc
jecxz
cmp
cmp
frstor
movsb
or
sar
pop
mov
xor
ss
jb
dec
movsb
std
dec
insb
testb
mov
int3
jns
pop
je
hlt
sbb
icebp
adc
imul
loope
push
fs
xchg
sti
mov
test
fwait
dec
mov
aad
and
sbb
sbb
ficoml
outsl
sub
mov
sti
xor
pop
test
fistpl
or
fnsave
lahf
jns
movsl
mov
cli
sbb
aad
add
push
insl
pop
xor
and
sub
jne
mov
mov
loope
sub
adc
jbe
inc
push
or
cltd
mov
push
mov
outsl
stos
lret
inc
adc
pusha
mov
xchg
pop
mov
and
test
mov
mov
push
in
adc
and
push
cmc
imul
clc
out
cld
xchg
scas
adc
push
fldt
call
jecxz
xor
jo
jp
aaa
mov
jmp
pop
or
pop
inc
dec
dec
outsb
fistps
cld
add
inc
dec
sbb
outsl
jp
and
jae
pushf
scas
test
push
jle
cmp
rorl
xor
and
xor
cmp
jmp
pop
imul
pop
push
pop
ds
add
sbb
pop
je
jne
in
jecxz
push
sub
in
xor
in
bound
xlat
lods
lds
stos
sub
lret
mov
bound
aam
lods
mov
dec
sbb
jle
mov
cli
sub
mov
cmpb
inc
loope
cmp
sub
insl
nop
adc
pop
xchg
nop
push
in
xor
inc
ret
sub
orl
pop
adc
xchg
xor
sarl
fwait
add
dec
xor
in
jle
or
push
lock
mov
shll
inc
push
xchg
cmp
mov
xchg
mov
aad
jo
lea
xlat
adc
and
imul
idiv
mov
cltd
aaa
inc
ljmp
mov
lea
sub
sbb
mov
mov
scas
mov
dec
ja
scas
cld
fwait
jbe
das
ljmp
clc
push
aam
xor
adc
fidivl
and
addr16
in
lock
or
iret
loop
out
repz
out
pop
out
push
aad
sbb
imul
std
push
and
out
fdivr
and
pusha
pop
jne
xchg
pop
sub
and
mov
adc
les
ljmp
lret
sub
data16
decb
mov
ret
andl
rcrb
adc
std
sahf
scas
leave
arpl
jo
ret
fidivl
pushl
mov
imull
in
sahf
imul
insl
add
xor
out
aas
xchg
arpl
sbb
xor
mov
setl
xchg
out
notl
imul
mov
sbb
int3
xor
cmp
ds
leave
mov
iret
rol
imul
xchg
shlb
and
imul
rorb
mov
push
mov
adc
es
jbe
les
js
out
cmpsb
push
xlat
in
sbb
jmp
incb
sub
sbb
and
dec
hlt
adc
xor
xchg
aaa
jecxz
sarl
pop
aaa
mov
push
in
mov
inc
xchg
jecxz
add
popf
cmpb
dec
pop
push
jbe
and
adc
je
adc
shll
adc
mov
inc
xorb
xorb
mov
out
cmpsb
push
mov
adc
dec
push
out
aas
push
mov
mov
imul
setne
add
cmp
loope
xor
nop
jbe
xchg
mov
ss
out
sbb
outsl
addb
xor
or
int
cmp
int3
jle
mov
inc
aad
cmp
jb
xchg
dec
int3
shr
popa
mov
outsb
shll
cmove
cmpsb
lods
sbb
loop
imul
call
mov
daa
mov
mov
xchg
jb
xchg
rcl
push
loopne
xchg
and
inc
add
push
xchg
test
test
daa
push
lret
pop
cmp
jne
out
mov
lahf
cli
dec
jns
enter
decl
lahf
jns
into
jge
mov
xchg
cmpsl
fisubrs
and
and
jo
incl
mov
mov
outsl
dec
ret
scas
cli
lds
mov
out
push
jecxz
and
xchg
lea
mov
mov
pop
mov
movsl
bound
lock
jmp
fdivs
sar
or
mov
das
jb
lcall
out
sbb
addr16
mov
push
mull
popa
ljmp
addb
xor
inc
jbe
je
insb
and
movsl
cmp
and
sub
pop
bnd
sbb
lods
nop
mov
sub
push
fidivs
sub
pop
cmp
mov
jo
outsl
pop
nop
mov
or
mov
sahf
push
mov
sbb
xor
xor
in
pusha
ja
xlat
pop
sub
or
lahf
add
or
jbe
xchg
add
mov
pop
pop
mov
fwait
ret
lds
mov
sbb
out
inc
enter
cmpsl
jmp
test
shrb
cmpsl
hlt
repnz
dec
out
mov
out
adc
icebp
jbe
xor
sub
loope
movsb
test
mov
mov
movsl
push
outsb
mov
mov
hlt
jo
mov
xor
adc
shll
iret
into
popf
sub
fs
leave
xorl
movups
rol
lea
pop
negl
push
jge
stos
mov
out
lock
adc
movsl
lods
ret
xor
inc
jle
scas
inc
int
mov
cmpsl
cmpsb
mov
lcall
rcr
out
and
jg
imul
lea
outsb
ljmp
push
jle
iret
popf
sub
mov
push
lahf
arpl
enter
adc
inc
jp
insl
add
int
pop
cwtl
cs
loope
push
mov
addb
fcmovnu
push
mov
cld
nop
adc
mov
leave
loopne
add
loop
gs
loopne
not
into
into
cmp
movsbl
add
sub
xor
and
cmp
adc
mov
ja
jge
xchg
out
negl
or
loop
popf
push
into
and
roll
icebp
cwtl
xchg
and
outsb
cmpsl
mov
pushf
push
frstor
sub
pop
cmp
insl
call
lcall
fs
enter
stos
movsb
sub
fs
xchg
mov
test
ret
sub
cmpsl
push
sbb
sub
cli
mov
rcr
jne
scas
fmul
and
test
movsl
mov
fbld
pop
arpl
push
aas
inc
dec
xor
outsl
adc
repz
jecxz
sarl
mov
pop
arpl
push
aas
inc
dec
xor
outsl
adc
repz
stos
scas
stos
mov
or
xchg
incl
das
push
aas
inc
dec
xor
outsl
xor
repz
jecxz
sarl
mov
lock
leave
test
xor
mov
cmp
mov
mov
lods
lcall
data16
inc
adc
and
push
adc
mov
movsl
repnz
test
xchg
ret
jne
inc
adc
and
adc
mov
movsl
repnz
test
xchg
ret
push
and
aaa
inc
or
xchg
mov
std
shrl
or
lods
lods
pop
sub
push
xchg
pop
push
orb
or
cmp
sub
jno
sbb
clc
fnstsw
pop
xor
adc
ljmp
lock
xor
lret
iret
pusha
fstl
sar
and
mov
lret
in
shlb
push
pop
rolb
fcompl
cmp
movsb
in
stos
push
jne
xor
iret
mov
jo
inc
pop
sub
repz
idivl
push
inc
fs
jge
enter
jne
mov
cli
lods
adc
pop
push
sub
xchg
outsl
and
xor
mov
aas
add
movsw
ret
inc
es
mov
movsl
repnz
test
xchg
ret
jne
inc
adc
and
push
adc
mov
rcrb
xchg
adc
jp
inc
mov
push
add
xchg
xchg
lock
ret
adc
jae
insl
rclb
push
or
adc
cli
mov
loopne
mov
test
xchg
ret
jne
inc
adc
and
push
adc
mov
movsl
repnz
test
xchg
ret
jne
inc
adc
and
push
adc
jmp
and
pop
aad
or
shlb
or
add
cmp
mov
cmpl
jge
mov
cmp
pop
ficomps
ficompl
lret
xchg
fsubrs
jno
mov
and
dec
mov
pop
inc
loope
sbb
icebp
mov
or
sub
cmc
adc
loope
ljmp
fsubs
cmp
mov
xor
popf
xchg
jbe
adc
push
rcl
aam
or
mov
out
popa
inc
or
test
add
scas
jmp
cmp
shl
push
sbb
addr16
push
add
cli
cmp
fbld
ss
mov
mov
loope
pop
inc
repnz
aad
sbb
sbb
jbe
push
js
mov
scas
push
stos
mov
add
cs
lret
cmpsb
pop
dec
out
lret
iret
or
leave
ds
adc
or
ret
sub
add
stc
xchg
pop
dec
mov
rcr
sub
dec
jmp
add
push
pop
imul
roll
mov
mov
rcll
pop
push
inc
clc
negl
sub
das
fdivrl
cmp
cmc
mov
mov
ret
xchg
or
divb
push
and
sub
imul
inc
out
jb
push
sbb
sub
popf
fldl
mov
jno
inc
add
mov
mov
inc
inc
push
push
aas
into
loop
adc
sbb
push
loope
loop
xchg
ror
sbb
sar
stos
inc
and
bound
movsb
mov
fsubl
ret
pop
and
enter
jmp
fsts
arpl
inc
repz
mov
das
pop
push
pusha
dec
loope
out
xor
mov
fwait
mov
jbe
stos
out
and
dec
mov
pop
addr16
roll
idivb
test
std
loopne
jecxz
dec
sbb
cmpsb
pop
in
push
xchg
test
xchg
ss
push
in
mov
pop
push
mov
mov
mov
xor
xchg
nop
les
xchg
xor
mov
sarb
data16
pop
mov
xchg
push
test
and
adc
cmpsb
js
xchg
pop
pop
sbb
add
cs
orl
mov
and
jle
test
ljmp
dec
enter
sub
mov
repz
enter
xor
mov
cmp
mov
pop
cmp
pop
lea
cmp
lahf
int3
notl
int
clc
add
xor
repz
mov
mov
adc
lret
dec
lcall
add
insl
push
popa
cmp
add
xchg
or
sub
in
dec
adc
out
cwtl
jo
and
repnz
add
fs
mov
pop
movsb
mov
leave
jl
aam
jp
lods
sbbl
insb
icebp
pop
pop
push
pop
neg
jno
stc
fisttps
dec
scas
lds
jns
aam
out
aam
rorb
cli
xchg
sbb
xlat
test
mov
jp
cmp
jae
xor
lret
rcrb
sbb
int3
ficomps
cltd
adc
subl
jo
add
outsb
jl
cwtl
lods
jae
mov
add
in
sub
sbb
fdivrs
mov
push
push
mov
cs
mov
jl
sbb
mov
lods
xchg
lds
sbb
stos
jle
les
outsb
out
fnstenv
and
or
pop
mov
sahf
fimuls
cmp
addr16
js
cli
je
cmc
fdivl
mov
rorl
xchg
dec
mov
or
or
arpl
in
add
sarb
data16
xchg
mov
jns
add
jb
sbb
add
adc
scas
xchg
jno
xchg
mov
cwtl
jbe
mov
push
js
jae
adc
xor
stos
mov
push
push
arpl
enter
lret
int
pop
jmp
mov
sbb
mov
out
inc
cmp
pushf
sbbl
clc
ja
fsts
imul
push
pop
clc
jp
cwtl
mov
dec
sbb
sub
cmc
sbb
jo
insb
inc
ficoml
pop
test
imul
in
dec
jne
mov
fsts
jbe
xchg
notl
cmp
push
mov
xor
or
cmp
jg
pop
movsl
lcall
xor
pop
pop
sti
pop
fwait
test
pop
push
idivb
and
push
and
lret
je
shrl
pop
mov
gs
mov
fstps
mov
dec
ja
popl
cmc
out
jb
dec
lahf
sbb
enter
movsl
xchg
lods
fs
popf
mov
fwait
mov
fwait
lods
sbb
jns
dec
pop
dec
adc
leave
sbb
mov
popa
aam
stos
or
mov
adc
test
jecxz
jo
mov
enter
xchg
fstpt
cmc
jae
add
scas
cmc
inc
sti
or
in
cmp
test
adc
inc
dec
or
cli
stos
jb
pop
movsb
push
xchg
cmpsl
data16
nop
sbb
mov
pop
mov
lcall
mov
rcll
or
inc
xchg
or
lcall
push
sbb
mov
inc
and
mov
inc
inc
cmp
sbb
repnz
dec
aaa
repnz
xor
jbe
aaa
sub
inc
mov
jecxz
push
in
loop
xchg
fstps
sub
inc
int
ljmp
out
sub
xor
pop
mov
mov
mov
lret
mov
iret
imul
push
das
dec
in
mov
sarl
inc
repnz
in
sub
insb
xor
mov
sbb
mov
stos
sti
push
lock
cmpb
xlat
jo
scas
push
jne
repz
dec
popa
test
mov
aas
cmpb
mov
pop
fdivl
sbb
lds
rolb
jp
cwtl
xor
and
idivb
cmp
aad
dec
in
lahf
xchg
mov
mov
mov
dec
cwtl
xor
int3
xor
outsl
xchg
dec
push
xchg
fstpl
adc
jmp
pop
lock
cmpl
push
mov
in
xchg
push
mov
loopne
call
les
push
add
sbb
test
aaa
into
mov
into
and
cmpsb
add
xchg
jbe
fs
xor
fstl
push
add
imulb
push
and
fdivrs
sub
pushf
mov
push
imul
repnz
popa
or
scas
nop
ret
aam
pop
jl
adc
mov
aas
fcmovne
inc
stc
mov
pop
outsl
xor
push
fwait
mov
dec
and
and
cld
cmc
push
cmc
inc
je
push
js
lret
loope
add
enter
adc
jecxz
leave
lea
mov
or
mov
ljmp
mov
fsubl
in
and
pop
jno
sbb
inc
push
add
pushf
aas
movsl
clc
adcb
or
stos
pop
sub
dec
and
fsubrl
data16
mov
xor
sbb
std
pusha
push
sub
out
ret
pop
mov
sti
inc
icebp
cltd
pop
test
xchg
clc
insb
lods
and
adc
push
pop
cs
inc
dec
sbb
icebp
incl
shl
xor
and
lret
adc
add
xchg
andb
shrb
push
std
loop
adc
fsubr
mov
pop
mov
loop
arpl
xchg
movb
inc
repnz
xchg
rolb
cmp
xor
push
mov
and
test
scas
mov
and
les
jmp
cs
mov
push
out
dec
xchg
in
sub
or
jp
mov
insl
or
jecxz
adc
add
cmpsb
mov
int
mov
sub
in
dec
dec
xor
dec
sbb
nop
xor
cmpsl
lcall
mov
in
fildll
xchg
aas
cmc
cli
and
cmp
mov
aad
shrl
push
cmpsb
int3
or
jae
inc
movsl
sbb
inc
pop
push
push
add
add
jl
bound
dec
mov
pop
hlt
int
mov
push
lds
cmp
lahf
pop
in
loope
je
push
mov
outsb
mov
call
arpl
jno
xchg
dec
js
jp
or
cmc
xchg
call
in
leave
loopne
lock
cli
mov
scas
sbb
dec
mov
loopne
inc
fbstp
lahf
mov
negb
or
fistpl
nop
mov
dec
cwtl
inc
leave
sub
sub
xor
lock
adc
movsb
ret
pop
hlt
push
je
inc
sub
ret
adc
cmp
loop
and
pop
jbe
pop
push
test
pop
dec
movsb
mov
lret
mov
idivb
push
mov
iret
or
aad
adc
push
imul
clc
loope
adc
cmpsb
pop
xchg
stc
or
int3
and
mov
cmpsl
call
sbb
xor
xor
jb
push
int
xor
or
cltd
sub
xlat
ss
in
sti
cltd
sub
xchg
stc
sbb
jns
popa
push
nop
inc
ss
movsb
cltd
lretw
mov
pop
pop
fstpt
xor
shrb
leave
pop
or
enter
lds
xlat
inc
stc
pop
stos
fimuls
mov
lret
into
add
sbb
mov
sbb
std
rcl
lahf
cltd
pop
mov
cmpsl
and
idivl
arpl
repz
pop
lea
and
inc
mov
cmp
xor
add
aam
lret
in
sbb
hlt
inc
fadds
gs
mov
lret
lret
adc
and
fld
inc
sub
pusha
add
xor
outsl
inc
and
mov
mov
xchg
test
pop
cli
cli
out
mov
test
push
into
lret
sub
ss
ret
popf
mov
scas
fisubrs
les
sbb
xor
or
sub
fstps
loope
push
ret
cmp
lock
es
loop
xorl
sbb
xorl
cmpsb
out
rcll
and
ljmp
push
dec
cmp
pop
fwait
or
push
xor
jmp
cmc
sahf
dec
dec
jl
imul
jne
lods
inc
clc
push
cs
push
xchg
movsl
inc
adc
fsubr
out
movntps
mov
or
push
jne
pushf
push
out
cmp
popf
xor
insb
jle
cld
or
dec
jle
xchg
push
inc
dec
mov
lcall
es
data16
jmp
and
mov
les
mov
xchg
pop
sbb
es
cmp
and
aad
push
sub
xchg
addr16
mov
push
popa
mov
jne
adc
out
into
mov
pushf
add
push
jmp
and
aad
push
loop
in
loop
call
mov
stos
or
cmc
or
or
push
mov
mov
ret
lods
xchg
inc
xchg
fcoml
pushf
rol
push
xchg
movsl
add
or
out
cmp
push
leave
add
mov
mov
out
pop
fadd
and
jge
mov
mov
or
ljmp
mov
sub
mov
es
inc
pop
pop
cmp
arpl
or
inc
lcall
jg
icebp
mov
insl
adc
fs
mov
cs
dec
adc
push
xchg
std
push
and
jne
mov
ja
mov
ficomps
jle
lret
xchg
popf
mov
and
loope
hlt
ss
ret
xchg
gs
sbb
fistl
add
shlb
in
ret
bnd
rol
mov
pop
sti
dec
xchg
inc
inc
dec
inc
sbbl
hlt
movsl
sub
push
dec
mov
xor
imul
cmp
jmp
pusha
jnp
push
ss
adc
lcall
hlt
mov
push
cmc
out
push
loope
cmp
enter
jb
ss
into
outsl
mov
lock
imulb
stos
inc
mov
or
add
fadd
mov
dec
xchg
lahf
xchg
test
sub
jnp
pop
pop
inc
addr16
rclb
jmp
dec
push
pop
aaa
add
fcomps
jo
mov
arpl
jbe
jo
in
fmul
cmpsl
fiadds
cli
dec
gs
ljmp
lods
push
lcall
mov
clc
pop
rorb
and
mov
cmp
xlat
in
ret
in
push
cltd
sarb
adc
pop
leave
cmp
mov
int3
push
lock
xorb
insb
xchg
lock
test
repz
call
rcll
arpl
in
enter
pop
jne
scas
je
pop
fs
stos
cmc
adc
jno
fidivl
clc
adc
call
jnp
lea
pop
jp
xchg
std
adc
push
mov
cmc
add
xchg
ds
mov
mov
ret
inc
data16
mov
rolb
jg
stc
pushf
xor
jnp
ss
pop
in
fbld
xchg
stc
sub
push
cmp
in
lahf
sbb
jo
inc
sub
vfmsub231sd
sarb
jge
orl
mov
mov
cmpsb
daa
cwtl
sbb
push
cs
pop
loopne
shlb
mov
movsl
cmp
lods
test
adc
push
arpl
push
sbb
mov
dec
je
push
into
and
inc
inc
lds
jb
sub
cwtl
xor
xchg
push
adc
cmp
cmpsl
lahf
lea
std
popf
fdivr
mov
inc
ret
mov
cmpsb
and
orl
icebp
in
xchg
lahf
push
jg
cmpsb
lret
addb
xchg
out
lcall
stc
xchg
ss
push
jae
fcomps
or
fwait
mov
push
in
xchg
lcall
sbb
jo
clc
push
jbe
nop
xchg
pop
mov
scas
ret
pop
cli
cmpsl
je
ret
shrb
sti
lret
mov
fsubs
inc
or
add
jns
xchg
xor
push
filds
icebp
std
cmp
pop
test
inc
push
jge
jecxz
and
xchg
lret
add
and
and
bound
insl
inc
gs
test
inc
fdiv
mov
jns
out
outsl
rcrb
in
loop
aam
test
xchg
push
xor
add
or
sub
add
sti
push
int
push
mov
je
fsub
ds
sbb
add
cmpl
mov
jb
pop
loop
xor
inc
dec
mov
repnz
push
add
or
lock
mov
dec
sahf
xchg
pop
in
adc
xor
jns
and
add
cmp
das
sub
fs
xor
mov
inc
dec
push
in
sub
lret
sbb
pop
pop
sbbb
fsubs
add
arpl
loope
xlat
xchg
lret
ljmp
rcll
roll
ja
jmp
add
adc
xchg
call
loopne
dec
aas
inc
pop
movsl
dec
sub
test
leave
outsl
shr
sbb
pop
loope
dec
xchg
inc
sub
or
xchg
popa
pushf
cmpsl
mov
xor
jns
in
xor
in
out
lret
loop
rclb
les
aas
popa
lods
xchg
orb
cltd
dec
mov
xor
ja
shr
dec
das
or
mov
push
and
ja
sbb
jge
stos
out
xchg
clc
shlb
cmp
and
lods
push
fisubrs
jl
jne
imul
test
xlat
sbb
fsubrl
adc
and
cmp
shrl
test
sub
adc
mov
pop
mov
sti
mov
xor
or
dec
mov
mov
push
fwait
cwtl
into
sbb
ret
sbb
adc
mov
dec
mov
jmp
mov
or
sbb
and
cmpsl
loopne
ljmp
cmc
mov
push
or
rclb
push
inc
jnp
jg
int3
cmp
nop
or
addr16
sbb
adc
jo
mov
jae
mov
jp
mov
stos
cld
lahf
add
imul
stc
push
push
imul
adc
dec
jae
sub
mov
loope
cmp
faddl
xchg
dec
push
pop
mov
adc
push
insl
rclb
lret
push
adc
push
imul
cmp
mov
jbe
sbb
repnz
adc
cltd
pop
mov
inc
test
dec
and
je
dec
in
mov
aam
mov
sarb
xchg
hlt
mov
jecxz
stc
scas
fbstp
xchg
cli
or
sbb
sbb
cmpsl
scas
out
enter
push
or
cmp
jns
mov
aam
mov
lds
push
fcomps
es
mov
inc
and
daa
lea
jne
cmp
in
add
cmpsb
pushf
lcall
cli
add
lods
inc
cmp
inc
fcomps
clc
test
call
mov
adc
adc
out
push
mov
cmp
icebp
push
test
and
rcll
shlb
inc
arpl
cmpsl
sub
ja
mov
xchg
jo
scas
mov
sbb
fimull
push
mov
push
cmp
mov
or
pop
xchg
cmp
sub
cmc
pop
xchg
xchg
jp
fdivrl
sbb
in
int
adc
lock
movsl
jbe
in
pop
adc
inc
pop
les
sub
adc
mov
mov
loopne
scas
mov
aaa
pop
push
shll
mov
fnstenv
ret
aam
pop
hlt
ficomps
jmp
push
pop
or
std
ret
mov
add
and
jecxz
lock
sub
and
out
cs
arpl
pop
sbb
sub
out
jge
xchg
xchg
push
pop
jns
rorl
inc
ja
mov
lcall
fldl
mov
jno
lods
xor
mov
xchg
add
movsl
shrl
sbb
aam
leave
push
jbe
mov
loop
push
sbb
adc
shlb
xchg
xchg
xor
xchg
xlat
adc
shrb
pop
or
aaa
pop
push
dec
sbb
aas
jmp
and
mov
mov
push
movsb
ja
testl
pusha
mov
cmp
push
insl
pop
mov
jp
lret
pop
std
rcl
lds
mov
sbb
test
adc
push
jg
icebp
fldt
shl
cmp
mov
and
shrl
icebp
sub
imul
add
jo
rcr
sub
shll
sub
pop
adc
xor
jae
inc
mov
adc
cld
dec
fmul
or
cmp
sbb
aas
jno
jmp
nop
scas
pop
adc
mov
outsb
cmp
jge
add
pop
and
mov
in
dec
sbb
test
movsb
and
lret
dec
xchg
jns
pop
jnp
je
or
repnz
js
add
jle
and
mov
aaa
and
out
or
jle
fsubrs
out
push
inc
push
cmpsl
mov
or
mov
mov
xchg
testl
sahf
jp
sbb
mov
adc
jle
stc
or
add
push
inc
roll
sbb
les
insb
dec
rclb
scas
xchg
xchg
test
stos
mov
cs
ss
pop
in
mov
fidivl
dec
adc
sub
inc
insb
mov
cmp
jns
and
pop
sbb
int3
jb
repnz
fstpt
ja
jg
jb
loope
inc
pop
out
jg
cmpsl
lds
arpl
rcll
push
push
adc
gs
aam
das
push
push
call
add
xor
lea
dec
daa
inc
das
xchg
jg
js
pop
pop
xchg
or
arpl
pop
inc
mov
pop
sub
push
or
mov
and
leave
mov
mov
jle
dec
popa
sbb
inc
shll
xor
push
add
adc
mov
dec
lcall
stos
cmpsl
push
cwtl
adc
jl
xor
xchg
and
adc
ret
mov
or
insl
jo
jns
push
inc
xchg
fcompl
or
adc
xor
sub
cli
xchg
aad
movsl
repnz
test
xchg
ret
jne
inc
adc
and
push
adc
mov
movsl
repnz
test
xchg
ret
jne
inc
adc
and
push
adc
and
adc
andb
xchg
ret
jne
inc
adc
jb
bound
adc
mov
movsl
repnz
add
xor
jne
cli
mov
mov
in
push
cld
inc
mov
xchg
add
les
or
sbb
sub
sub
test
fsubl
push
cld
inc
mov
pushf
xor
pop
loope
sarl
ret
sbb
sub
cmp
je
js,pn
dec
and
xchg
sub
cmp
icebp
jg
add
sbb
jecxz
out
mov
xor
es
pushf
loopne
repnz
out
or
outsl
lods
xor
icebp
ret
sbb
sub
clc
and
jmp
pop
jns
mov
out
xor
mov
addl
jns
in
cltd
or
mov
pop
sbb
pop
loope
mov
pop
sbb
xchg
add
adc
mov
or
pushf
xor
mov
pop
call
lea
sub
hlt
rcrl
jo
adc
daa
sbb
imul
js
mov
mov
ret
xor
add
jae
jne
push
adc
mov
mov
sbbl
mov
dec
cld
inc
push
adc
sbb
enter
test
cmp
movsl
jno
adc
xor
inc
fdivrs
fs
sahf
psraw
aad
movsb
jle
jb
inc
pop
in
sbbl
popf
cs
stc
outsl
pop
gs
test
ret
jne
jae
inc
idivb
mov
xor
pushf
and
pop
loope
sarl
mov
mov
int3
jno
popa
in
push
cld
inc
mov
pushf
and
pop
loope
sarl
mov
mov
int3
jno
jb
cmp
inc
mov
push
push
and
leave
push
xchg
xchg
inc
clc
cmc
fcompl
ret
push
inc
sub
xor
mov
imul
sbb
ja
stc
pop
sub
sub
mov
pop
jns
pusha
jo
das
out
in
sahf
aad
incl
sub
dec
xor
daa
push
notl
cmpsl
push
mov
mov
out
mov
jo
xor
cwtl
and
dec
in
scas
dec
popf
lea
add
add
fistpl
jns
pmuludq
and
dec
mov
push
pushf
stos
movsl
push
or
bnd
sub
sahf
adc
mov
out
in
push
out
pop
lret
inc
movsl
cmpxchg
fimuls
mov
jb
pop
mov
jmp
je
mov
pop
mov
pop
mov
popf
push
mov
clc
xlat
pop
ljmp
test
ret
testb
and
lret
out
out
inc
data16
js
aad
dec
pop
je
movsl
mov
outsl
dec
dec
add
xchg
aaa
les
ret
pusha
xchg
mov
scas
or
movsl
faddp
lds
mov
sub
stc
or
ja
enter
cli
or
inc
xor
lahf
sub
mov
sbb
cli
xor
xchg
jno
pop
js
pop
sbb
out
push
xchg
les
sahf
nop
xchg
cmp
std
ret
rcrb
pop
mov
cld
sbb
adc
pusha
loope
push
push
popf
pop
mov
arpl
push
dec
out
sbb
int
ficompl
mov
lea
scas
arpl
adc
ror
dec
mov
dec
cmp
adc
xchg
mov
xor
int3
adc
jp
ja
imul
jge
sub
and
fwait
rcll
lea
lods
ja
int
xor
push
lds
in
push
dec
loope
adc
and
pusha
jno
ret
shlb
out
and
mov
jns
out
jp
xor
push
in
pop
jae
out
cmpsl
adc
or
ret
pop
cli
in
sbb
ss
repnz
test
mov
mov
add
adc
xchg
inc
lret
pop
jg
sbb
out
cmp
xchg
add
push
cmp
into
xchg
push
outsl
insl
jb
pop
scas
sub
lods
movl
adc
daa
jno
mov
and
jle
stos
mov
cld
xchg
sbb
dec
lock
add
ret
mov
add
mov
sub
arpl
push
xor
dec
mov
xor
out
loop
push
out
cmp
rclb
in
pop
mov
adcb
jl
cli
inc
xor
les
and
add
inc
lahf
and
js
call
call
dec
push
addr16
rorl
lds
xor
nopl
sbbl
and
imul
int
push
jmp
cmp
fistpll
push
iret
dec
jl
ljmp
pop
jg
push
sti
rcrb
lods
mov
sti
xor
imul
add
jnp
es
dec
subl
fld1
scas
adc
push
add
popf
test
sbb
into
mov
popf
adc
mov
jle
jg
aad
and
lret
shlb
punpckhwd
pop
dec
daa
xchg
pop
sbb
mov
jno
mov
testl
xor
es
mov
mov
lods
not
lahf
add
ss
shll
jo
mov
add
call
cmp
repnz
outsb
stc
or
lds
mov
xor
in
arpl
aas
ret
sahf
int
js
inc
shll
popa
cmp
mov
mov
or
out
stos
or
pop
out
fstps
xlat
sub
jnp
inc
mov
fdivr
clc
xor
mov
push
adc
sub
xor
pop
add
pop
pop
stos
out
dec
std
push
xor
sub
daa
jp
push
lret
call
or
std
pop
shlb
lret
cmp
std
adc
gs
cltd
stos
lods
push
xchg
into
xor
pop
test
cmp
aas
mov
pop
sbb
mov
ljmp
ret
and
insl
pushf
jae
inc
pop
mov
pop
sbb
and
sub
jmp
lcall
inc
push
inc
mov
mov
inc
sbb
cmp
mov
sbb
cli
push
cmpsb
fmul
pop
jecxz
or
and
xor
cmpsb
mov
sbb
pop
mov
in
int3
xor
adc
call
mov
xchg
fisttps
jno
cwtl
push
popf
push
xor
dec
dec
mov
add
pop
adc
test
aaa
push
adc
jnp
negb
rcl
paddb
je
xlat
xchg
fdivrs
push
je
jnp
jmp
adc
ret
mov
adc
enter
jb
daa
movsl
out
cmpsl
icebp
adc
scas
dec
cmp
insb
sbb
and
jae
ljmp
outsb
lahf
and
orb
xchg
out
je
mov
std
xor
sbb
fwait
hlt
sub
fsubl
lret
inc
push
in
shlb
jo
sbb
sbb
or
lock
jno
xchg
fwait
cltd
jp
testb
aam
mov
pop
scas
pop
jnp
dec
test
std
or
xor
addb
pusha
lret
sahf
add
jb
cmp
into
das
cmc
out
sub
jns
jbe
push
mov
sbb
test
add
addb
out
xor
mov
sar
push
mov
inc
xchg
ds
mov
imul
push
lods
push
add
aas
out
cmp
lods
xor
in
cltd
inc
hlt
sub
pop
out
or
daa
or
push
or
pop
cmp
adc
addl
in
mulb
pop
fwait
add
rolb
in
xchg
aaa
or
jns
fmuls
and
mov
mov
cltd
nopl
add
pop
mov
mov
roll
pop
test
sbb
xchg
fcomps
aas
mov
xchg
push
sbb
jp
pop
cmp
inc
ret
lods
push
cli
push
pop
test
pop
pop
daa
loop
jp
sub
or
insl
dec
les
xor
mov
pushf
int
scas
mov
adc
iret
inc
inc
jo
inc
call
out
add
jecxz
es
repnz
cmp
sbb
aas
imul
test
adc
xor
cmp
lahf
lahf
test
mov
cmpsb
ret
pop
jae
mov
movnti
cltd
inc
push
cmc
jnp
pop
pop
and
fdivr
sbb
add
hlt
dec
movsb
ds
or
add
or
or
inc
and
in
divl
inc
arpl
cmc
push
movsl
jp
push
mov
lds
rcr
mov
dec
cltd
push
jnp
and
rclb
out
mov
jne
xchg
mov
add
sub
cmpsl
cmp
jecxz
adc
pop
sub
mov
cltd
or
xchg
clc
les
adc
sahf
cwtl
cmp
inc
mov
sbb
ss
adc
mov
sub
fs
dec
mov
movsb
sti
gs
push
xchg
push
in
jne
pop
popa
pop
jnp
test
test
jae
inc
mov
or
cld
iret
int
dec
dec
loope
out
pop
fiaddl
lret
jae
out
jl
mov
in
mov
ds
cmp
fldenv
andnps
not
pop
push
popa
int
xor
outsl
hlt
icebp
or
cld
mov
xchg
mov
cmp
fdiv
lret
add
lds
aad
sahf
fadds
arpl
inc
push
pop
js
mov
sbb
fadds
xchg
data16
movsb
add
sti
xchg
mov
jmp
xchg
std
cmpsl
addr16
xor
mov
cltd
dec
fwait
mov
xor
dec
orl
repz
outsl
lahf
bswap
xchg
and
stos
dec
jbe
inc
call
scas
xchg
jecxz
arpl
fs
cmp
jae
pop
cs
mov
shrl
test
push
sti
ret
jae
mov
jbe
ja
xchg
mov
cwtl
inc
cmp
and
fcompl
cmpl
adc
and
dec
or
out
shll
je
inc
or
es
fisttpll
arpl
mov
lods
in
lret
push
mov
test
push
dec
sbb
push
scas
int3
mov
fsubl
pop
add
pushl
push
dec
ret
xchg
push
push
or
loope
add
xor
lods
clc
push
scas
sbb
imul
jmp
movsb
imul
cli
insl
pop
fisubl
push
aas
add
decl
inc
lea
add
test
addr16
sub
jecxz
mov
jge
bound
leave
scas
jp
pop
stos
pusha
lods
sub
and
xchg
in
push
xchg
push
adc
popl
or
int3
test
jne
pop
push
mov
loop
popf
add
pop
hlt
ret
loope
push
inc
add
cmp
or
jmp
or
mov
roll
cld
fnsave
mov
ljmp
addr16
lock
iret
aam
pop
xchg
xor
sbb
dec
loop
mov
std
scas
sub
mov
push
jp
inc
test
inc
das
cmpl
mov
fistps
mov
sbb
adc
mov
push
aam
sbb
add
loope
scas
lret
push
lcall
in
xor
inc
dec
lods
push
ret
inc
and
and
mov
negl
insl
je
adcl
pop
lret
lret
fisubl
or
int3
psadbw
rcrb
dec
adc
popf
aaa
push
orb
cld
dec
pop
sti
sbb
jb
ss
inc
inc
jmp
mov
inc
push
fnstcw
jge
or
das
cld
sbb
daa
mov
mov
rorb
sbb
add
mov
testl
in
fwait
inc
sbb
repz
push
dec
dec
stos
repz
gs
xor
mov
out
or
ret
scas
ja
mov
jmp
inc
dec
sahf
in
cwtl
pop
in
cmp
sbb
in
add
dec
scas
mov
xor
sahf
mov
cmp
mov
int
mov
pop
dec
pop
lret
and
std
das
mov
imul
pop
insl
lock
or
insl
data16
or
inc
xchg
xchg
rolb
mov
sbb
fisttps
mov
cld
inc
imul
ss
mov
data16
mov
rcl
imulb
inc
dec
out
je
cltd
and
cmpsl
push
push
mov
mov
sub
push
mov
mov
cmp
ficomps
out
cmp
ja
xchg
xchg
jg
decb
rclb
leave
pop
rorb
push
push
rolb
psubb
fwait
or
sbb
adc
mov
sbb
sti
sub
jbe
jnp
and
sub
js
jno
xor
das
adc
in
pop
out
loop
jo
push
xchg
sbb
andl
andl
or
inc
xchg
cmp
push
int3
out
js
shrb
mov
jecxz
sti
add
pop
mov
sti
loopne
mov
jne
xor
push
lds
out
jo
push
cmc
pushl
or
push
push
out
cs
or
insl
lret
jbe
imul
push
stc
ret
or
jb
insb
repnz
hlt
mov
stc
iret
mov
inc
xlat
xor
jl
mov
mov
cmp
xor
xchg
repz
cmp
stc
aas
sbb
ja
sahf
in
and
push
adc
popa
pop
jo
xor
or
add
repnz
jl
cmp
je
mov
push
pop
cmp
flds
insl
xorb
inc
shl
adc
cli
mov
or
cmp
cmp
adc
mov
xor
addr16
repnz
dec
cltd
push
subl
sbb
adc
jne
pop
cmp
out
sub
mov
sahf
sahf
inc
or
add
cmpsl
pop
jg
inc
out
jnp
fucomip
mov
mov
pop
cmp
push
fdivp
aad
and
into
mov
pop
jecxz
mov
scas
dec
lock
and
test
dec
jo
pop
bound
jmp
push
add
cmc
add
jnp
push
js
jns
outsl
cmp
mov
cmp
cmpb
add
pop
cmp
in
lcall
jg
mov
jne
push
out
xor
scas
bound
sbb
scas
xor
ret
into
xchg
jo
xchg
icebp
xor
icebp
sbb
lret
mov
sub
stc
cmp
imul
inc
int3
cmp
dec
sub
mov
roll
jle
je
sub
lahf
mov
dec
pop
push
jo
sub
lods
jb
sahf
rcll
ret
mov
loopne
xchg
sahf
das
mov
leave
xchg
inc
pop
fmul
or
cmp
fcmovnbe
adc
jmp
and
sti
pop
pushf
sbb
lret
enter
adc
aam
pusha
pop
pop
fstps
add
add
loope
sbb
adc
xchg
xchg
push
scas
mov
jecxz
int3
ret
xor
shlb
lahf
out
cmpsb
loop
push
les
jae
mov
cmpsl
imul
cld
fists
loope
mov
out
aad
fdivl
mov
mov
or
faddl
ja
sahf
mov
cmp
add
clc
pushf
push
xchg
es
inc
andl
add
pop
xor
lcall
mov
loopne
push
test
xchg
xor
sarl
pop
push
mov
imul
sub
sbb
test
jp
repnz
daa
xlat
mov
hlt
lcall
pushf
mov
dec
cmp
adc
mov
int3
cs
enter
dec
loope
mov
rorb
mov
hlt
daa
sub
daa
shlb
cld
sahf
loopne
out
adc
addb
scas
mov
cmp
xorb
lahf
jbe
jne
lods
jmp
adc
adcb
jl
mov
fwait
clc
andb
cmp
pop
cltd
outsl
mov
dec
cmp
js
addr16
arpl
out
lret
pop
sbb
stos
push
sub
adc
or
rcll
jecxz
push
jne
lahf
xchg
pop
aas
lds
mov
cli
pop
fstpt
or
jl
lds
push
pop
jmp
in
daa
mov
sub
sub
xchg
sahf
outsl
mov
xchg
ret
push
js
and
mov
mov
dec
enter
sub
sbb
hlt
frstor
dec
xor
add
jmp
add
shrl
aas
mov
cld
imul
iret
inc
and
or
xchg
mov
jb
daa
mov
cmpxchg
add
das
sub
stos
std
mov
sbb
inc
mov
es
push
pop
xor
sub
cltd
adc
inc
pushl
sbb
jno
das
arpl
inc
cmp
push
jg
push
test
je
mov
add
bound
rolb
lret
cmp
dec
les
pop
dec
mov
aad
xor
mov
jb
movsb
lea
scas
jmp
push
xor
out
or
sub
inc
enter
xor
or
pop
jge
out
push
jle
mov
mov
ds
ja
xchg
stc
jp
call
xlat
cmc
les
enter
rcll
adc
loopne
rcrl
mov
repz
andb
fisttps
and
push
xchg
mov
adc
cld
xchg
xor
pushf
dec
mov
out
jns
fisubs
mov
cwtl
add
pop
stos
mov
data16
cmp
shlb
or
stos
int3
aas
push
xchg
icebp
push
xlat
pushf
xchg
shl
xchg
sahf
pand
adc
fsubp
lahf
pop
pushf
inc
ljmp
xchg
jne
and
sti
mov
push
inc
es
mov
popl
push
sub
lock
push
jge
bnd
imul
pop
push
in
mov
pop
subb
cli
mull
test
call
nop
sarl
leave
sahf
xchg
pop
es
scas
repz
scas
lds
xor
iret
rorb
dec
mov
jp
shlb
sub
add
push
and
sbb
sub
les
push
lods
shll
mov
shlb
cmp
shll
mov
mov
inc
mov
push
add
js
test
fistl
xchg
stc
inc
fsincos
xor
pop
cmpsb
out
insb
scas
lods
jmp
mov
xor
mov
movsb
add
push
sahf
mov
mov
jo
push
sub
test
ljmp
push
test
push
nop
pop
sub
jecxz
mov
scas
xor
mov
bound
push
divps
imulb
cltd
aad
addl
pop
push
add
mov
push
lock
sbb
loopne
lods
rorl
xor
mov
rcll
mov
inc
sbb
xchg
std
ficoms
lret
roll
inc
jl
imulb
rolb
lcall
dec
les
lods
dec
mov
sbb
inc
dec
cmp
arpl
or
mov
lret
lea
gs
movsl
sbb
out
inc
inc
inc
mov
out
or
call
inc
xchg
mov
int
bound
cmp
sbb
mov
cmc
pushf
push
addl
mov
mov
shr
fs
movsb
lods
lods
add
andl
in
inc
movsl
movswl
dec
mov
pop
xchg
adc
xchg
cwtl
sub
shrl
jp
sub
push
mov
insl
sub
ret
daa
call
jmp
int3
dec
ja
dec
and
jns
fildll
adcb
ret
mov
dec
push
lret
pop
clc
fs
loope
sbb
lret
xor
push
cmp
sbb
pop
adc
clc
das
sub
jge
inc
icebp
lcall
sbb
lret
xor
xchg
xlat
dec
push
test
push
mov
sbb
push
inc
xchg
jl
jecxz
jo
inc
fs
aas
mov
or
fsubp
pusha
outsl
add
mov
or
mov
adc
pop
fwait
movsl
pop
ss
les
addb
push
jbe
popf
pop
jg
hlt
shlb
daa
pop
xor
insb
lret
in
jne
xchg
jbe
stos
jl
or
mov
aaa
lods
jmp
adc
fidivl
cmp
adc
cld
bound
mov
stos
aaa
mov
ja
sub
in
fwait
mov
test
scas
rol
pop
out
mov
out
clc
in
mov
mov
testb
lret
cld
out
mov
pop
sar
in
pop
pop
stc
icebp
into
jno
int
icebp
mov
dec
cli
pop
sub
into
movsl
out
loopne
cwtl
cmp
lods
cmpsl
test
xchg
lret
mov
jbe
inc
pminub
rcr
fsub
int3
mov
arpl
cmp
lret
and
dec
dec
adc
je
xchg
sub
loope
mov
mov
sahf
js
sub
add
mov
mov
cmc
loope
out
xchg
stc
jecxz
or
mov
sbb
inc
add
arpl
sbb
int3
in
bound
adc
pminub
das
xchg
fnstenv
push
xchg
mov
fcmovne
cltd
sub
xor
mov
and
inc
pop
sub
lret
rorb
push
adc
sbb
push
cltd
scas
aas
cmp
push
aas
rcl
dec
adc
push
add
stos
repz
push
cs
pop
sbb
test
adc
mov
lods
fnstcw
ret
inc
test
push
xchg
sub
dec
in
push
lcall
in
pop
jne
cmpsb
mov
pushf
je
shlb
fdivl
mov
adc
mov
out
push
fbld
leave
lea
and
cmpsb
jae
mov
ja
and
shll
cld
dec
mov
jb
and
pushf
fisubrl
scas
push
div
mov
mov
cmc
adc
add
jecxz
cmp
jns
mov
icebp
test
xor
inc
push
pop
mov
or
mov
js
push
xor
nop
mov
jmp
add
xchg
add
leave
ret
cwtl
xchg
nop
mov
ljmp
test
and
add
cmp
bound
int3
outsl
outsb
add
mov
sbb
pop
xor
mov
cld
fsubp
jecxz
out
push
push
sbb
and
enter
or
jno
dec
mov
sbb
jnp
imul
mov
or
inc
sub
and
in
jae
xchg
mov
pop
cltd
and
pop
adc
loop
add
and
inc
test
in
sub
pop
xchg
mov
clc
sahf
int3
pop
push
jmp
testl
xor
call
push
cld
inc
mov
pushf
and
pop
loope
sarl
mov
mov
int3
jno
popa
in
push
cld
inc
mov
pushf
and
pop
loope
sarl
mov
mov
int3
jno
popa
mov
inc
sbb
pushf
and
pop
loope
sarl
mov
mov
fdivs
gs
faddl
xor
dec
icebp
mov
mov
cmp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ljmp
int
pushf
or
js
outsb
cli
jge
popa
fisttpl
dec
mov
or
push
pop
fisttpll
cmp
or
mov
pop
stos
std
lcall
in
pop
lds
cmp
xchg
cli
sahf
ljmp
jl
inc
mov
std
push
push
test
or
cmp
jmp
sbb
loope
push
das
mov
or
cmp
and
add
orl
inc
mov
jb
incl
imul
sub
xchg
jmp
mov
enter
sub
mov
frstor
insl
cli
lds
jb
sub
and
mov
xchg
or
and
rcrb
or
sbb
dec
jmp
sbb
push
rcr
iret
push
fiaddl
int3
add
dec
inc
pop
into
outsb
stos
pop
fwait
loop
sbb
pop
int
xlat
cmp
or
inc
lret
and
mov
cwtl
cs
faddl
jns
dec
ret
pop
icebp
outsl
loopne
adc
adc
into
push
out
negl
sub
lods
add
pop
into
dec
lahf
sbb
jb
test
xchg
sub
inc
lret
push
cmp
lods
sbb
ljmp
cmp
mov
pop
fisttpll
cmp
or
ficompl
dec
mov
sbb
outsl
push
cld
sbb
dec
andb
push
jmp
push
pop
xlat
xchg
inc
mov
xor
pop
in
les
jnp
popa
xchg
xlat
mov
dec
aad
lods
mov
test
mov
lret
jns
inc
sub
popf
fwait
xchg
push
fldenv
nop
sbb
int3
pop
aam
iret
adc
mull
pusha
cltd
xchg
mov
cmc
push
mul
movsl
mov
ja
push
or
adc
je
mov
sbb
or
xor
lea
mov
push
jp
es
inc
cld
mov
push
aas
adc
data16
mov
xchg
dec
enter
and
ljmp
pop
int3
into
test
jp
ljmp
mov
xor
xchg
sbb
adc
ja
mov
lret
pop
in
and
not
cmp
lock
mov
out
pushf
mov
pop
mov
dec
or
mov
or
push
jecxz
arpl
dec
int
in
dec
pusha
dec
ss
fwait
xchg
sbbl
dec
add
leave
adc
jb
sub
push
xchg
xor
push
lahf
fisubs
add
fisttpl
cmpsl
movsl
daa
out
adc
mov
mov
cmp
sti
clc
xor
sbb
in
jbe
lea
cmpb
push
dec
cmpsl
iret
xchg
rcrl
fs
mov
cltd
push
mov
es
or
insl
cmp
xchg
jno
inc
mov
mov
mov
xchg
sub
adc
mov
xchg
cs
arpl
fsubrl
scas
push
std
or
outsb
lods
nop
test
test
pop
mov
popf
cmp
outsl
pop
jae
imul
nop
adc
lret
ljmp
xchg
mov
add
cmp
and
or
sti
movsl
cmp
mov
pop
pop
enter
stc
cli
inc
fwait
push
cmp
pop
decl
pop
xor
push
fistpl
and
insb
adc
mov
pop
popf
call
cli
aas
and
adc
sbb
mov
xlat
mov
or
movsb
int
hlt
daa
sub
divl
pop
add
jbe
push
in
mov
and
negb
das
fistps
std
and
sbb
stc
loop
mov
inc
xor
and
lea
xchg
stc
pop
shrl
fcoml
cmp
pop
inc
je
fnstcw
popf
inc
xor
jb
gs
or
inc
mov
cmpsl
pop
clc
xchg
sbb
into
mov
jle
je
movsb
repnz
test
cwtl
mov
push
loop
hlt
loope
jg
push
xchg
pop
sbb
dec
mov
popf
and
add
cmp
mov
out
dec
adc
cs
insl
pop
movsb
popa
jb
out
arpl
fiadds
xlat
lea
lret
or
pop
dec
inc
inc
xchg
jle
arpl
jnp
fidivs
jle
mov
lcall
pop
pop
xor
xchg
jmp
dec
cld
ss
xchg
sub
in
lock
mov
sbb
mov
shrl
sub
cmp
lret
les
test
pop
mov
pop
popf
mov
out
push
enter
xchg
dec
xor
je
stos
and
push
mov
hlt
mov
jbe
push
mov
fildll
jno
pop
jg
pop
out
out
into
xchg
test
ficoms
jb
adc
xchg
sub
adc
or
or
add
mov
pop
xor
gs
mov
cmp
test
les
inc
jb
mov
sub
das
dec
sahf
lret
xchg
or
fcompl
add
sub
cmp
mov
mov
or
aaa
subb
aad
push
or
pop
cmp
jno
stos
push
jbe
nop
out
sahf
mov
inc
std
pop
sub
push
inc
ja,pn
xchg
pop
lcall
fwait
das
mov
adc
je
inc
outsb
inc
jp
push
sahf
out
lcall
mov
ja
fdivrs
xchg
into
xor
jb
and
rorb
sub
inc
or
jg
push
testb
addr16
sbb
inc
loopne
outsl
xor
shrl
push
xchg
xor
mov
or
mov
jecxz
fidivrs
out
insb
push
xor
incl
mov
mov
loopne
mov
push
sbb
xor
mov
cltd
adc
xchg
frstor
test
sbb
mov
and
sbb
mov
push
aad
and
sub
jae
mov
and
push
mov
and
pop
rcll
inc
inc
mov
mov
mov
xor
sbb
testl
negl
cmp
das
mov
pushf
xchg
push
inc
cmp
inc
repnz
inc
aaa
shlb
mov
pop
cmpl
jge
mulb
and
fwait
popf
xchg
jecxz
ret
fdivr
mov
xor
es
sbb
push
loopne
scas
add
xor
int
ret
mov
mov
inc
ud1
outsb
andb
sub
in
jge
andl
jge
sbb
and
dec
jg
inc
cmpsb
daa
fstps
movsl
pop
lods
std
mov
cmp
xlat
mov
addr16
sub
adc
add
and
cmpsb
mov
fwait
incl
fbld
mov
test
fdivl
and
cwtl
jb
fnstsw
aas
dec
jmp
sbb
jl
pushf
mov
dec
shrl
movsl
mov
mov
movsl
aad
lods
adc
ss
jb
dec
push
dec
loope
add
sbb
sbb
sbb
popf
call
pop
push
dec
pushf
mov
xchg
or
loope
dec
adc
push
or
push
inc
lcall
add
into
sbb
adc
js
xchg
es
adc
dec
push
in
sub
push
roll
lea
lahf
subl
rclb
xor
into
iret
sbb
adc
arpl
imul
mov
scas
scas
xor
xchg
mov
ficoms
mov
or
sbb
sahf
mov
insb
sub
or
xor
xchg
push
xorb
pop
sti
cmc
cmpsl
jne
or
inc
cltd
xchg
std
pop
gs
dec
adc
dec
cwtl
aam
cld
cmp
enter
cmp
jbe
shl
jg
push
or
jo
roll
push
or
hlt
adc
adc
pop
and
dec
fstpt
mov
mov
xchg
lcall
or
scas
fistl
hlt
xor
mov
stc
rcl
cmp
jno
jb
repz
cs
inc
ss
mov
push
pop
movl
cmp
lock
add
mov
cmp
and
imul
lods
add
pop
psubw
pushf
lcall
pop
mov
or
pop
add
cwtl
mov
das
push
ss
or
mov
lods
or
dec
insb
lret
cmp
push
loope
inc
in
test
cmpsl
cmpsl
and
adc
mov
pop
push
mov
lahf
mov
pop
xchg
clc
dec
jno
or
inc
jg
pop
lret
dec
loopne
xor
push
push
fldl
cmpsb
and
dec
int
fcoml
shll
movsl
jge
shll
xchg
mov
dec
shl
mov
lock
in
push
lcall
dec
repnz
loop
mov
cmpl
cli
adc
rcpps
sti
pop
push
sbb
ret
or
lret
mov
lock
jbe
shrb
push
mov
lcall
sub
push
mov
sbb
xor
imul
popa
mulb
mov
mov
int3
pop
daa
das
orl
or
push
mov
xchg
cmpsb
push
nop
sub
test
repnz
jl
test
scas
push
repz
sbb
loopne
int3
pop
nop
stc
cmp
ja
pop
es
mov
push
mov
ficoml
jns
inc
mov
pop
cli
sub
stos
stc
jb
xor
clc
jl
cld
mov
lods
xchg
xor
hlt
jp
pop
inc
mov
mov
leave
sti
pop
ficomps
stos
loop
fimull
sbb
cmp
sub
mov
jno
mov
int3
andb
add
add
jno
inc
mov
fstps
and
repz
out
mov
fbstp
rol
or
xchg
sti
pop
pop
mul
pop
andl
push
test
insb
fnstsw
fcoms
xor
adc
xor
mov
mov
mov
fdivrs
xchg
push
mov
jo
and
loop
andl
movsb
in
xchg
gs
or
mov
dec
int
inc
pop
mov
add
pop
push
mov
into
sub
cmp
fwait
jns
les
ds
cltd
notl
nop
dec
cmp
sbb
popa
mov
imul
adcb
push
call
xor
inc
or
jle
subb
aam
cs
mov
cmp
movsb
dec
loope
enter
aaa
add
sbb
inc
lea
pusha
mov
sbb
mov
inc
insl
sbbl
mov
mov
mov
clc
jmp
or
sti
add
frstor
mov
mov
cwtl
jmp
sbb
aad
mov
inc
cli
pusha
pusha
lock
ret
xchg
push
dec
fldt
mov
dec
xchg
jl
pop
out
movsl
fwait
or
aad
fsub
push
push
xor
pop
xchg
nop
mov
ficoms
nop
in
leave
xor
arpl
pop
out
push
rcr
bound
aaa
mov
push
fwait
adc
xchg
pop
and
push
clc
nop
add
or
popf
push
nop
ljmp
dec
sub
mov
pop
xor
cmp
leave
mov
sbb
scas
pop
data16
out
rcll
xchg
push
xor
arpl
call
push
mov
shll
das
mov
mov
pusha
jmp
movsl
mov
mov
mov
addl
lods
aas
mov
andb
push
adc
add
outsl
aas
sub
jbe
xlat
push
test
inc
pop
dec
xchg
and
mov
mov
and
insl
cmp
aad
dec
push
das
mov
mov
push
mov
scas
push
mov
mov
lds
xor
sub
stos
adc
jecxz
mov
aaa
and
xchg
movsl
std
test
stos
sub
scas
xor
cmp
out
cmpsb
and
outsl
pop
nop
cltd
inc
mov
shrb
and
sarb
arpl
cli
dec
pop
jnp
mov
dec
lods
xor
push
stc
mov
adc
pop
add
inc
in
mov
mov
sub
cmpsl
das
test
inc
pop
pusha
fidivl
add
test
adc
stos
push
scas
insb
lock
fcoml
sbb
or
repnz
leave
ljmp
stos
mov
sbb
xchg
push
out
xor
dec
jne
cmpsl
xor
insl
aaa
rcr
aam
cltd
fcmovb
mov
xchg
and
jecxz
ds
cltd
movsl
pop
stos
shrb
cld
cmp
pop
pop
or
or
cmpsb
mov
mov
push
adcb
das
sub
subl
rolb
stc
es
or
jae
cmp
fisubrl
mov
and
jge
insb
inc
pop
mov
cmc
ss
jge
in
hlt
push
lods
push
sbb
inc
shl
lea
pop
je
cmp
sbb
fdivs
into
in
shrb
xchg
mov
imul
lret
fisttpl
shlb
mov
push
lret
jge
push
cwtl
or
sbb
sub
pop
push
cmp
pusha
add
push
movsb
inc
stos
cmp
mov
imul
pop
fcmovnbe
sahf
jne
adc
cmovb
and
cli
push
add
lock
jecxz
push
jno
adc
xor
cmpsl
mov
ja
iret
pop
inc
in
cmp
cltd
inc
xchg
lds
lods
std
lea
les
push
enter
stos
pop
add
shl
movb
pop
pop
mov
inc
adc
shlb
aam
jmp
dec
pop
pop
leave
andnps
push
popf
sub
popa
mov
xor
out
jmp
mov
mov
rclb
mov
dec
or
ja
aam
in
xchg
and
cltd
mov
jp
jnp
push
cmpsl
add
stc
clc
test
mov
icebp
mov
and
scas
mov
adc
jns
inc
mov
pushf
mov
push
mov
shlb
fwait
loope
mov
cli
pop
jb
sbb
sub
inc
or
mov
jle
negb
dec
movsl
sbb
out
fimuls
dec
or
xchg
insl
mov
cs
neg
pop
mov
jmp
movsl
pop
push
mov
es
rcrl
mov
int
ja
movb
mov
dec
decb
or
xchg
andb
sub
in
xchg
arpl
aad
sbb
test
or
fbld
insl
mov
testb
dec
push
dec
flds
dec
or
lock
sbb
jmp
mov
jnp
mov
dec
cld
mov
sub
adc
lcall
das
jae
dec
fldcw
sub
addb
dec
cmp
pop
push
sub
repz
jge
cmpsb
mov
inc
inc
mov
cmc
nop
mov
fsubs
inc
and
cli
ret
or
inc
and
hlt
xchg
sbb
adc
fsubl
fs
and
xchg
push
not
pop
ficomps
pop
pop
and
dec
inc
sahf
in
ljmp
dec
sub
xchg
adc
rcrl
out
push
pop
push
mov
sti
call
ss
jne
lods
inc
jno
in
fidivs
dec
dec
cmp
xlat
jo
int
cmp
lods
push
inc
hlt
mov
mov
adc
add
sub
mov
cmp
xchg
push
xor
cmp
and
dec
lea
mov
xor
scas
sahf
in
ret
xor
in
xchg
xchg
lods
das
out
arpl
sub
xchg
stos
mov
iret
add
cwtl
js
test
aaa
mov
pop
lret
add
mov
sbb
mov
inc
inc
cld
add
add
pop
mov
rolb
cmpsl
add
mov
mov
xor
cli
sub
ss
loop
cli
xor
xor
lock
pushf
xchg
adc
mov
les
test
fadd
add
sbb
xor
call
aad
mov
lea
push
mov
sub
push
mov
cwtl
rclb
in
jg
and
sbb
ficomps
daa
mov
in
cli
mov
pop
xlat
push
push
out
xchg
xor
imul
inc
movsb
jl
mov
push
xchg
iret
and
in
xchg
adc
xor
mov
lods
push
cld
shl
mov
cmp
push
xor
lret
clc
data16
dec
lods
jmp
gs
dec
xor
in
and
pop
inc
shl
dec
and
into
sub
xchg
adc
inc
cs
mov
mov
cmp
rcrb
bound
pop
call
sub
fistps
mov
inc
inc
mov
push
and
cmc
mov
sub
xorl
sub
ret
in
push
sti
mov
cmp
sbb
mov
shr
jl
or
and
ljmp
shrl
cmpsb
xchg
adc
inc
dec
dec
decb
stos
lock
dec
mov
sahf
xchg
cld
push
sbb
int3
into
aas
scas
cmp
test
cli
sub
enter
sbb
repz
test
ljmp
lcall
mov
push
out
mov
push
sbb
mov
shlb
addr16
push
push
sbb
pop
aad
rcr
pushf
mov
and
adc
xor
stos
push
or
into
cmp
adc
inc
inc
repnz
xlat
aas
push
cmp
outsl
inc
pusha
test
loopne
cltd
clc
mov
sbb
lods
dec
loopne
dec
cmpsl
and
dec
ss
mov
add
lcall
call
xor
push
adc
cmp
push
or
ret
pop
cmp
push
sub
mov
push
addr16
into
sub
rolb
jg
test
adc
aad
jne
fistpll
testl
mov
mov
inc
divl
sbb
dec
imul
out
lds
jmp
scas
mov
cmpsl
mov
repz
nop
test
and
repnz
outsl
sbb
mov
cmp
bound
in
sbb
std
scas
dec
adc
bound
out
ss
jge
lds
xchg
xchg
inc
xchg
ljmp
mov
out
and
sbb
mov
cmp
mov
popa
mov
xchg
dec
fwait
cmp
xchg
jns
adc
fwait
jle
mov
jb
fisubs
insl
movsb
imul
xor
rol
mov
and
insb
cwtl
xchg
ja
rcrb
sub
shll
fwait
and
shrl
jno
or
mov
daa
into
push
push
sbb
mov
pushf
sahf
subb
int3
jp
jle
leave
lods
add
test
mov
lahf
movsl
pop
ds
mov
lds
push
je
or
jae
sbb
stos
dec
mov
insl
dec
cmp
sbb
mov
sti
or
jecxz
sbb
adc
or
movsl
ss
inc
popf
jg
and
xor
popf
fs
mov
add
sub
mov
jle
iret
adc
imul
popf
scas
xor
pop
sub
push
jbe
sbbl
mov
mov
pop
adc
or
dec
push
add
mov
sub
push
xchg
es
push
arpl
pop
and
cmc
dec
pop
cltd
pop
scas
push
ja
add
xor
sti
stos
in
pop
data16
cmp
insl
xchg
inc
test
fbld
daa
xchg
lock
fisubrl
push
xchg
jb
lcall
mov
aad
mov
dec
sbb
scas
jno
cmpsl
push
jle
gs
orb
jg
mov
push
ja
or
inc
pushf
jp
lcall
lods
sub
xchg
adc
out
xchg
ja
cltd
jle
sahf
mov
adc
xor
pop
orl
jnp
ljmp
lods
xor
jmp
xchg
jb
cwtl
adc
lock
cwtl
sbb
je
xchg
fistpll
cwtl
pop
test
sbb
repz
inc
cmp
adc
xchg
adc
xchg
push
cmc
lods
call
add
jo
and
pop
jmp
enter
jns
lods
fstpl
sti
dec
push
cmpsl
movsl
or
and
fwait
inc
sub
lds
js
pop
shlb
and
or
and
addr16
mov
xor
jo
xor
and
mov
add
pop
divl
movsb
clc
mov
push
popa
jmp
sbb
out
fsts
cmp
mov
mov
aam
xchg
jns
inc
jno
jns
inc
cld
imul
addl
popa
jno
fcmovnu
pop
sbb
mov
dec
mov
mov
and
mov
movsl
scas
rorb
xchg
pop
test
and
addr16
pslld
jecxz
mov
mov
ja
sbb
in
add
xchg
cli
xchg
pusha
xchg
jae
jo
cs
movsb
popf
into
aam
fisttpl
add
cmp
dec
sbb
dec
rclb
jp
cmp
nop
adc
xor
cmpsl
call
pushf
inc
adcb
xchg
outsl
pop
imul
loop
imul
out
into
jb
scas
outsl
fiadds
iret
mov
push
inc
or
leave
jnp
cmp
xchg
jne
mov
rcrl
lods
jg
sub
stc
test
repz
adc
xor
jnp
or
mov
andl
pop
cmp
cmpsb
clc
sub
aad
and
dec
and
cmpb
test
xchg
into
out
mov
xchg
push
ds
fsubrl
pop
das
out
enter
aam
enter
fsub
xlat
mov
repz
push
les
cmp
rcrl
fstpt
in
mov
int
or
shl
mov
sahf
leave
lret
pop
insb
test
adc
jb
in
jne
lret
push
mov
pop
sub
adc
or
xor
stc
inc
test
scas
lock
push
dec
imul
test
incb
scas
bound
ljmp
cmc
cs
jp
in
lods
lret
mov
arpl
inc
and
mov
mov
dec
add
ss
push
test
adc
mov
and
stc
clc
testb
pop
pop
pop
ja
and
sub
xchg
pop
add
xchg
pop
push
push
jne
or
and
xchg
fucomip
xor
mov
cltd
mov
sbb
push
jo
lret
out
adc
inc
fistpl
mov
fs
cltd
cltd
movsb
sub
and
aad
sub
stos
xchg
in
mov
or
and
gs
sub
in
test
jno
xchg
popa
jp
xor
mov
mov
push
sub
imul
xor
cmp
or
ficompl
dec
mov
sbb
push
pop
fisttpll
cmp
or
ficompl
dec
mov
sbb
push
pop
fisttpll
cmp
or
ficompl
dec
mov
sbb
or
pop
fisttpll
cmp
or
jo
lret
mov
shlb
jne
rcrb
lcall
adc
outsb
dec
rcrb
mov
mov
sbb
push
jp
popf
push
lcall
pop
fimull
jle
push
add
clc
scas
dec
mov
into
push
jp
xchg
push
orl
mov
dec
bnd
outsb
or
dec
iret
mov
cltd
sbb
lcall
jle
dec
fprem1
add
icebp
jge
sti
jecxz
ds
cmpsb
fisubs
jne
mov
xchg
pop
and
fs
ljmp
neg
or
mov
jecxz
js
test
into
clc
loop
or
in
jp
lret
pop
into
sarb
pop
pop
mov
dec
push
xor
std
iret
dec
add
nop
ds
jb
sub
dec
iret
fimuls
xor
hlt
xchg
out
push
gs
rep
into
mov
cli
adc
dec
add
ret
cmp
out
adcb
fwait
lcall
pop
push
xchg
jbe
sub
in
aad
cmp
mov
jp
dec
push
lcall
pop
rorb
jecxz
adc
and
push
arpl
iret
fisubrs
scas
cmp
cmp
sbb
es
ds
ja
lcall
xor
or
sbb
outsl
in
dec
lret
das
mov
iret
sbb
test
iret
dec
mov
dec
ljmp
mov
mov
pop
into
push
jp
mov
lcall
pop
fimull
jle
outsb
or
cmp
push
jp
mov
pop
repz
in
in
mulb
and
imul
addr16
xlat
sbb
in
mov
out
push
mov
mov
repnz
in
in
cld
pop
xchg
sub
add
mov
loop
or
stos
gs
mov
cs
ss
dec
lret
sbb
dec
pop
ds
sub
jns
add
sbb
adc
push
cmp
and
add
and
xchg
decl
inc
inc
mov
sub
aam
inc
fldt
movsb
cs
add
dec
stc
into
or
repz
push
jmp
mov
dec
ljmp
mov
mov
mov
frstor
push
scas
ret
and
xor
push
mov
movsl
daa
or
int3
mov
js
add
mov
ret
pop
jne
pop
mov
cmp
loop
in
std
movsl
jae
pop
jnp
not
adc
jnp
movsb
sub
xchg
cmp
cmp
loope
add
out
mov
dec
std
jnp
fstps
dec
xchg
mov
mov
jno
andl
push
xchg
pop
sbbb
sub
xchg
mov
mov
inc
mov
mov
cmp
and
adc
push
test
outsl
mov
pop
jmp
cld
inc
fists
dec
enter
shl
cltd
mov
xchg
xlat
nop
mov
fnsave
stos
sti
adc
xchg
ds
jnp
enter
dec
pusha
jp
addr16
xor
fisttps
nopl
jmp
lcall
add
xchg
mov
mov
in
adc
incl
data16
das
mov
sbb
mov
mov
cmc
dec
fildl
pop
adc
orl
mov
pop
movsb
jl
push
push
dec
stc
mov
mov
test
popa
test
pop
dec
andl
faddl
xor
pop
push
mov
mov
mov
xor
or
in
test
repz
sub
shll
fldenv
mov
sbb
fdivp
and
sbb
mov
adc
xchg
aaa
add
out
shrl
mov
ja
int
and
in
sub
add
mov
scas
js
sbb
sub
push
adcb
push
mov
fcomi
or
rolb
lock
scas
jb
cmp
nop
arpl
scas
push
ret
push
in
push
ret
ss
cltd
push
mov
sub
fsubr
add
cmp
fwait
jb
pop
dec
jg
nop
les
push
popf
jle
xor
pop
mov
frstor
popa
lret
leave
sbb
adc
mov
imul
nop
test
stos
cmp
push
cltd
or
sbb
sub
nop
jno
pop
icebp
sti
or
sarl
rcrb
rol
and
dec
dec
adc
call
cmp
mov
rorb
mov
dec
mov
adc
cltd
jle
pop
xchg
imul
call
bound
daa
push
jmp
inc
mov
icebp
adc
jp
cmp
inc
and
rorb
rcrb
jnp
cld
ja
sbb
xor
enter
stc
cli
subb
xor
jp
aaa
dec
leave
push
outsl
mov
adc
xor
dec
xchg
xchg
outsl
xchg
xor
lret
mov
stos
daa
xor
loop
push
jmp
xchg
nop
xlat
cmp
push
dec
imul
test
jnp
test
sbb
jns
lahf
xlat
mov
mov
data16
jbe
lret
dec
cltd
push
pushf
outsb
ret
jp
loope
out
sub
shrl
pop
sbb
mov
adc
or
ljmp
arpl
cmpb
jmp
jns
push
mov
push
ds
cld
clc
pop
ficoml
and
scas
test
shrl
xchg
adc
out
rclb
outsl
fnsave
mov
xor
mov
cmc
or
push
pop
ja
in
xor
ljmp
fs
lahf
pop
outsl
mov
inc
lahf
or
pop
dec
xchg
orb
push
out
sar
aam
or
insl
adc
inc
pop
xchg
mov
and
lcall
dec
icebp
sti
push
adc
inc
cltd
nop
into
sbb
dec
icebp
insb
push
pushf
test
les
adc
bound
call
insb
jge
testb
or
jae
pop
mov
fistpll
xchg
mov
test
xchg
ret
lds
cmpl
sar
mov
in
leave
mov
push
andl
insb
inc
in
lock
mov
adc
xlat
ja
mov
cs
inc
scas
les
dec
sub
add
inc
cmp
mov
sub
sar
push
jp
outsl
cli
add
ds
mov
jl
or
lods
xchg
mov
gs
push
cmp
push
mov
pop
in
js
cmpsl
lret
in
pop
daa
adc
mov
mov
sub
movsl
cmpsl
rolb
sub
in
loopnew
inc
push
push
mov
jp
mov
in
jo
mov
push
out
mov
out
dec
or
and
mov
dec
int3
cmp
sbb
ret
pop
push
int3
pusha
jg
fsubl
xchg
out
icebp
je
fsub
push
shlb
lds
imul
mov
xor
ds
or
movsb
addr16
outsb
ja
dec
rcrb
sub
popf
and
bound
mov
lahf
lods
lods
movsl
pop
mov
dec
pop
pop
dec
push
lret
push
lods
cmpsl
mov
mov
out
inc
cmp
mov
mov
stos
negl
mov
ficoms
fucom
je
dec
sti
mov
movsb
pop
lret
or
hlt
xor
pop
das
filds
xchg
xchg
dec
mov
mov
jns
xlat
cmp
mov
adc
je
shr
insl
push
fidivrs
test
xorl
cwtl
shlb
adc
loopne
mov
add
adc
loopne
les
mov
mov
xchg
mov
and
inc
aam
mov
movsb
scas
and
inc
sub
lar
push
mov
mov
jg
iret
lahf
mov
mov
gs
and
int
pop
cld
push
add
add
mov
mov
lret
fmul
cmp
jo
mov
insl
idivl
jge
cmp
sub
pop
das
push
loope
inc
repnz
or
mov
div
ret
lods
or
dec
pusha
sbb
mov
test
push
sbb
enter
call
loope
or
sbb
add
push
std
cmp
sub
lods
sahf
popf
pop
sub
mov
insb
adc
pop
sahf
jbe
shll
dec
jae
mov
add
and
popa
std
pop
hlt
push
das
and
out
imul
rcll
in
fwait
cli
push
dec
mov
out
orb
pushf
xor
out
jp
iret
jl
cmp
in
cltd
inc
push
insl
sbb
shlb
cmp
mov
push
dec
enter
push
pop
sbb
mov
mov
les
imul
push
push
mov
pslld
mov
ja
push
mov
sti
inc
cmp
jae
daa
dec
sbb
and
into
xlat
insl
dec
mov
mov
jne
cmpsl
rcr
pusha
inc
cmpsl
mov
jle
sub
orl
js
ja
sub
repnz
jnp
jge
enter
dec
adc
xor
insl
mov
mov
ja
xchg
mov
push
ja
xchg
or
jns
push
dec
jecxz
lret
add
bswap
sbb
mov
dec
mov
leave
jecxz
xchg
aad
rorb
sbb
push
inc
mov
mov
cmpl
and
loopne
stos
shll
jno
in
mov
jmp
insb
in
push
lea
push
adc
or
sbb
push
cmpsb
add
cmp
cmp
out
aam
out
scas
inc
push
cld
sub
data16
inc
mov
aam
ret
divl
or
rep
imulb
inc
xor
repz
inc
das
and
xor
test
imul
mov
mov
lock
adc
fmul
xor
mov
dec
test
adc
cmp
mov
out
arpl
call
in
sub
inc
stos
out
mov
stos
pop
sarl
inc
dec
push
add
mov
bound
imull
in
into
dec
or
sub
or
mov
popf
cmp
repnz
aaa
popf
mov
sbb
les
test
mov
out
dec
push
fnstenv
gs
xor
test
and
loope
arpl
iret
flds
xchg
rolb
inc
xchg
shl
mov
adc
mov
cmp
jp
fdivr
dec
jge
inc
iret
and
fmulp
aas
mov
pop
add
mov
adc
mov
or
cmp
outsb
jmp
ficompl
lods
loope
outsl
push
inc
cwtl
jne
xor
test
idivb
mov
out
outsb
outsl
mov
es
lods
insb
jae
aam
fidivs
jae
ficoml
loope
loopne
xchg
add
cmp
xchg
sarl
mov
jg
sub
push
aam
fnstenv
stos
jle
aad
pop
and
adc
cmpsl
xchg
out
popa
loopne
test
mov
mov
inc
loope
das
sub
sbb
jl
int3
mov
and
ljmp
adc
cmp
or
sbb
cmpsl
adc
xor
mov
loopne
test
mov
int
das
jge
xchg
cmpsl
jns
fwait
add
pop
sub
cmp
inc
dec
mov
jns
mov
inc
mov
call
fisttps
push
jle
sahf
jge
adc
lahf
xchg
cmp
mov
pminsw
cwtl
push
icebp
jne
test
pop
cmp
xor
clc
adc
pushf
lods
xchg
mov
icebp
cld
push
xor
mov
mov
movsb
jnp
mov
jae
out
enter
mov
dec
scas
testl
pushf
push
inc
cld
enter
push
fldenv
fstpl
sbb
shlb
ret
or
decl
sar
lcall
xchg
jb
pushf
adc
mov
xor
pop
pop
push
loopne
adc
sbb
sbb
movsb
inc
mov
fdivrs
mov
out
leave
aam
xor
orb
ds
ret
andl
xor
imul
iret
pop
pop
sub
cli
pop
shl
repz
pop
gs
fists
xorl
scas
xchg
push
popf
mov
mov
cmp
sbb
arpl
xor
enter
push
dec
pushf
xor
mov
fsubl
mov
pop
mov
sub
insl
imulb
dec
ror
clc
inc
pop
push
mov
or
sub
xor
nop
inc
sahf
std
ds
xchg
inc
nop
and
daa
fsubl
sbbb
loope
int
push
flds
xchg
std
stos
add
test
sbb
test
js
pop
inc
or
add
inc
inc
andl
imul
int3
test
sub
flds
pop
rcrl
ja
adc
pop
sub
test
pop
cmp
push
jecxz
and
fmull
enter
or
dec
jbe
pop
add
inc
pop
in
sbb
loope
mov
into
sbb
dec
loope
scas
jle
enter
inc
leave
xor
popa
enter
arpl
cwtl
jg
sub
fidivrl
push
fsubrl
out
dec
adc
cmp
cld
adc
jecxz
sbb
xor
stos
inc
sar
push
inc
push
push
test
movsl
mov
mov
popa
sub
push
shrl
mov
les
in
cmc
stos
outsb
xchg
mov
lcall
xchg
addr16
cmp
lods
fmul
sbb
aam
push
lcall
mov
jb
gs
sbb
fsubl
loopne
test
xchg
and
and
add
divb
sahf
daa
insl
je
push
xorl
jmp
adc
xchg
sti
outsl
push
mov
movsb
xor
pop
addr16
leave
cs
aam
lea
or
mov
pop
mov
ret
repz
into
adc
sbb
ja
outsl
es
pusha
mov
mov
into
add
jae
cwtl
and
cmp
jne
outsl
lcall
xchg
dec
lcall
jae
test
mov
mov
addr16
das
jae
sbb
xor
pushf
mov
les
inc
push
xor
mov
imul
and
imul
inc
sbb
jl
mov
add
addr16
pop
xchg
cs
cmp
or
dec
cld
adc
mov
negb
cmpsl
out
notl
jg
repz
lcall
fimull
xchg
dec
pop
fdivr
xchg
cmp
dec
or
negb
or
gs
orb
add
and
ja
fwait
jecxz
cmc
orb
jge
add
je
mov
mov
cmp
enter
sti
out
popf
in
or
push
mov
scas
pop
es
je
out
stc
mov
inc
sub
sahf
dec
inc
shl
lds
or
cmp
out
and
sarl
lds
xchg
cmp
clc
les
cmpsl
rcr
enter
mov
ret
inc
jbe
xor
popf
lret
stc
dec
lds
sbb
push
sbb
or
and
adc
cmp
inc
ljmp
mov
cmp
out
push
testb
sbb
dec
cmp
push
std
sbb
push
shrb
jbe
xor
push
xchg
popl
rcrb
andl
cmp
roll
ret
js
inc
jno
inc
imul
std
and
aam
fldt
pop
jo
sbb
mov
ja
mov
jo
cmp
hlt
icebp
dec
lret
jp
icebp
test
sbb
add
sbb
lcall
mov
cmp
jnp
lcall
xor
in
int3
cmp
and
mov
pushf
push
scas
add
push
or
icebp
and
cli
dec
std
cmp
inc
add
data16
mov
das
cmp
push
jnp
dec
out
push
mov
cld
push
adc
mov
rcrb
mov
fnstsw
push
xchg
pop
imul
inc
rcll
push
push
mov
push
push
orl
ljmp
push
test
cwtl
mov
dec
aam
out
lret
sub
add
fnstenv
shlb
jle
ds
sub
bound
popa
xchg
xchg
inc
cli
mov
jno
stc
mov
inc
sbb
push
addb
mov
cltd
stos
icebp
xor
inc
jns
repz
adc
ljmp
out
push
adc
stos
dec
gs
pop
loop
mov
mov
xchg
out
dec
fistps
dec
js
mov
cwtl
sti
push
aam
and
sahf
adc
aaa
stos
xor
stc
adc
cmc
cmp
mov
or
jl
push
je
and
and
std
testb
sub
orb
sarb
sti
fsubr
cmp
cwtl
ds
ljmp
cmp
xchg
out
mov
iret
outsb
fwait
test
lea
icebp
test
inc
mov
sub
out
xor
mov
adc
int
insl
mov
push
mov
rcll
sub
push
es
pop
jg
fsub
sbb
xchg
push
cmp
cmp
adc
or
daa
add
pushf
push
pushf
popa
dec
pop
sub
push
jl
fwait
ds
adc
sub
lahf
lods
lret
mov
cli
mov
popa
repnz
gs
sbb
dec
xor
stc
inc
sti
xor
repz
std
mov
inc
inc
mov
jno
inc
sbb
pop
iret
or
dec
aad
addl
call
sub
adc
pop
and
orl
fwait
stc
lahf
aad
adc
dec
mov
xor
cmp
mov
xor
sbb
sahf
cmc
dec
shlb
test
inc
out
and
std
daa
rcrb
pop
mov
loop
xor
popf
cld
dec
mov
adc
lss
add
loope
jns
loop
pushf
and
cmp
movsl
mov
adc
sbb
xchg
mov
fisubl
loopne
jl
cmp
add
outsb
pop
mov
int3
push
lahf
lea
xchg
or
jnp
es
cmp
sbb
enter
call
ds
icebp
fmulp
into
out
in
lods
mov
outsl
clc
insb
xlat
sub
into
arpl
mov
fsubrs
dec
xor
test
mov
or
pop
jle
sbb
gs
es
jecxz
mov
cmc
daa
push
push
or
inc
ljmp
into
adc
out
inc
pushf
repz
hlt
mov
jmp
mov
aam
jp
fisttpl
mov
cmp
dec
mov
inc
inc
cmp
dec
pop
sbb
push
call
jae
hlt
lahf
inc
jne
out
stos
lock
js
data16
bound
stos
sbb
pop
mov
shll
rcrl
add
ljmp
pop
aam
push
jnp
movsb
cmp
pusha
scas
inc
hlt
sub
add
das
cmp
or
es
lods
out
pop
push
cmc
add
flds
push
and
cmp
shrl
mov
repnz
sub
fstpt
fnstcw
ret
sbb
es
add
cltd
sub
pop
enter
cmp
jmp
mov
mov
imul
sub
sub
mov
mov
ja
pop
scas
lea
sub
inc
mov
cmp
clc
insb
inc
rcr
fstpl
shlb
in
movsb
dec
clc
xchg
add
test
jbe
dec
mov
add
xchg
out
mov
jmp
loopne
mov
daa
arpl
enter
fisttpl
xchg
in
mov
mov
cmpl
decb
sbb
pop
add
cmpsl
dec
shld
or
pop
xor
xorb
adc
pop
outsb
pop
aaa
xchg
ss
add
jge
jne
inc
dec
mov
xor
sarb
inc
aas
rorl
sub
es
mov
lret
mov
xor
ds
mov
mov
xor
pop
outsb
lcall
xchg
xchg
ss
jmp
in
add
jecxz
push
cmp
mov
adc
pop
dec
fistpll
or
adc
cmpsb
int3
add
sub
jge
xchg
inc
sbb
ljmp
push
loopne
sub
push
jbe
adc
jle
test
movl
push
mov
bound
mov
outsl
sbb
movsl
lahf
sub
in
push
pushf
mov
push
outsb
ret
rclb
cmp
cmp
roll
pop
jcxz
lcall
lock
and
jo
mov
imul
and
andps
xlat
idivb
mov
sub
jne
sti
ds
or
bound
repnz
movsb
lods
fs
das
pop
incl
daa
and
negb
mov
jecxz
mov
out
mov
jne
in
es
pop
mov
stc
hlt
and
cmp
or
pop
insb
push
pop
pushf
sub
jo
scas
mov
cli
mov
and
in
popa
hlt
lods
jp
jns
mov
out
mov
fwait
in
lock
bound
into
fcom
movsb
notl
pop
mov
pop
std
jl
xchg
lods
dec
pop
ret
pop
push
dec
jl
adc
loopne
rol
and
std
adc
js
add
loopne
call
pop
ljmp
dec
sbb
call
pop
jle
mov
jle
popf
rclb
lea
sahf
xchg
fstl
push
das
pusha
pop
xor
out
mov
inc
sub
fwait
sub
adc
add
xor
pop
mov
mov
push
mov
xchg
cmpsb
xchg
movsb
adc
dec
xchg
mov
xchg
scas
xorl
rol
loopne
mov
jle
mov
xor
ss
fnsave
pushf
mov
std
dec
rolb
scas
pop
xor
fimull
data16
mov
jno
loop
xchg
and
inc
jo
ret
out
push
or
mov
dec
ljmp
mov
mov
pop
into
push
jp
mov
lcall
pop
fimull
jle
outsb
or
cmp
push
jp
mov
lcall
pop
fimull
jle
outsb
or
cmp
push
dec
out
mov
ds
dec
push
jp
cmc
sahf
in
cmpb
xor
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
js
enter
mov
lock
mov
push
add
add
push
add
add
add
mov
jmp
jmp
pop
add
pop
add
add
add
add
add
add
xchg
add
add
add
mov
or
or
add
add
add
add
add
add
popa
add
add
add
fadds
addb
add
imul
add
testb
add
inc
add
jns
imul
pop
add
pop
add
add
add
add
add
faddl
movsb
add
add
jns
or
add
add
mov
add
add
add
add
add
aas
add
add
mov
adc
push
add
movsb
push
imul
xor
dec
add
add
add
add
add
add
xchg
add
add
jle
testb
add
add
add
push
add
add
add
add
loop
or
add
sub
add
add
add
add
add
jne
insb
add
add
add
add
add
add
add
add
add
add
or
dec
add
inc
add
and
xchg
add
push
add
add
sub
lods
add
add
lret
add
add
add
add
add
add
add
add
add
add
movsb
push
and
add
roll
pop
add
add
call
add
jns
int3
add
add
add
test
test
add
aas
add
add
add
add
add
add
add
add
faddl
stc
add
add
pop
add
dec
add
add
lods
add
popa
add
add
add
add
add
jns
or
xchg
popl
jl
ja
sub
fadds
sub
rolb
add
add
add
add
xchg
add
add
mov
popa
add
add
add
add
add
add
add
or
xlat
add
movsl
add
pop
add
add
pop
add
add
push
add
and
push
add
add
add
add
push
add
imul
add
add
fadds
mov
add
add
add
add
add
add
add
add
pop
add
and
test
mov
bound
sub
mov
add
fiadds
mov
lcall
add
add
add
add
add
pop
add
dec
add
pop
add
mov
loop
dec
add
movsb
add
add
inc
add
add
dec
add
add
add
add
push
add
add
cmp
outsl
add
add
add
aaa
add
add
add
add
or
and
mov
add
cmp
lcall
add
add
add
add
jns
push
add
add
add
add
add
add
adc
ret
add
add
add
add
add
add
add
add
adc
dec
add
xor
add
add
cmp
add
popa
add
into
mov
std
add
jmp
jae
push
mov
or
scas
aad
sbb
mov
add
stos
sbb
insl
in
cwtl
fs
in
mov
frstor
mov
jbe
cmp
xor
mov
imul
xchg
cmp
jne
cs
in
mov
xchg
test
add
cmp
inc
lret
mov
scas
push
push
dec
fildl
out
and
bound
jmp
insl
pop
outsl
andb
and
xor
shrb
hlt
sub
inc
cmp
or
jns
outsl
repz
ret
lock
stos
shrl
mov
rcll
das
loopne
jae
and
pop
add
xor
sahf
pop
inc
mov
mov
jne
les
pop
icebp
ret
ret
test
mov
jo
adc
push
loope
push
insb
fisubs
jne
icebp
cmpsb
loope
mov
call
xlat
xchg
fnstcw
adc
xchg
pop
dec
sub
cmpb
mov
jae
xorl
test
cmp
xor
aad
ret
jnp
pushf
and
sub
push
mov
in
imulb
adc
icebp
pop
push
loopne
clc
mov
scas
hlt
mov
mov
int
inc
cld
lahf
or
popa
mov
fnstcw
fstpt
lea
test
jne
and
loopne
faddp
inc
lcall
cmp
mov
mov
loope
or
clc
test
scas
enter
mov
je
cmp
pop
add
pop
faddl
xchg
sbb
into
and
mov
inc
ss
rcrb
jmp
push
test
xchg
xchg
ja
sarl
sbb
mov
filds
aas
xchg
movsb
mov
add
mov
std
lahf
cmpsb
jle
cmpsb
loope
out
fsub
aaa
push
das
lds
in
fstl
lods
mov
pop
cld
mov
mov
fwait
into
mov
mov
cs
jo
jae
cmp
adc
cmpsl
push
jne
lahf
orb
sub
adc
sahf
xor
imul
and
dec
jno
sbb
push
cmp
cmp
in
adc
pop
addl
dec
shlb
movsb
pushf
mov
into
jo
enter
stos
shll
push
jns
rclb
bound
mov
pop
or
push
push
mov
fisubl
test
mov
cs
or
fucomp
mov
nop
das
lret
and
push
ds
stc
scas
inc
popa
stc
add
outsl
inc
push
and
aam
jo
les
mov
stc
pop
cmp
insl
adc
rol
andl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
