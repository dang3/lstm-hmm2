call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
lea
mov
cs
sbb
or
lcall
or
mov
lea
jg
bswap
pop
std
das
in
adc
iret
or
lcall
dec
lahf
jge
insl
mov
movsl
cmc
mov
les
aam
in
cli
or
push
mov
jb
add
push
fldl
in
or
sbb
add
out
lods
adc
out
cmc
and
lods
rcll
mov
jne
hlt
popf
dec
add
sbb
xchg
or
xor
and
adc
scas
loope
sbb
xchg
and
repnz
lea
hlt
outsl
xchg
jecxz
out
fcomip
fs
into
repnz
insl
out
rolb
mov
jnp
js
dec
popf
pop
pop
imul
clc
sbb
das
adc
dec
gs
cmp
lcall
jge
jb
in
flds
in
out
std
ret
adc
cvtps2pi
mul
dec
mov
cld
xchg
xor
lea
pusha
inc
inc
in
sbb
pushf
repnz
cmp
popf
inc
insl
aad
ret
lea
sbb
pop
std
das
hlt
lods
add
adc
ret
inc
mov
jno
mov
out
dec
call
adc
pop
cmpb
or
pushf
xor
sub
sbb
or
popf
or
adc
inc
test
pop
scas
or
iret
cmp
ds
or
cmp
mov
movsl
inc
int
std
das
in
aas
sbb
out
sub
lahf
jge
insl
mov
mov
bswap
pop
std
das
in
aas
sbb
out
sub
lahf
jge
insl
mov
in
lds
inc
xchg
movsl
ret
jle
imul
std
and
test
jp
data16
mov
movsb
adc
sbb
add
dec
fidivrs
pop
add
in
dec
pop
cltd
push
push
testb
mov
jne
in
push
clc
and
popa
mov
sbbb
ljmp
popf
mov
jp
push
scas
popf
cmpsl
sbb
out
push
push
fstl
fs
scas
mov
test
cmp
mov
orb
push
pop
out
test
lcall
fstps
xchg
push
sbb
xor
jae
xlat
mov
nop
xor
ficoml
popf
xorl
leave
rolb
mov
push
movl
js
int
push
leave
mov
cmpsb
or
outsl
push
enter
fistl
push
adc
psubw
arpl
mov
cs
mov
mov
int
fdivp
ret
mov
xor
mov
dec
cltd
dec
pop
int3
sahf
push
cli
jmp
into
push
cmp
mov
out
subb
jp
stc
sub
fdivp
jl
sbb
pop
loop
js
adc
je
test
xor
jp
in
inc
add
cmp
or
adc
pop
push
or
fidivrs
inc
scas
popa
addl
lods
xor
imul
lret
test
sbb
sub
ret
lcall
inc
loopne
sub
and
push
das
mov
dec
addr16
loope
mov
pop
insl
test
pop
and
int3
out
cwtl
bound
out
push
push
pop
fbld
add
std
shrl
sub
stos
rclb
push
std
mov
mov
cmp
bound
dec
punpckldq
je
mov
movsl
adc
push
push
imul
out
fldenv
pop
pop
mov
xchg
scas
inc
dec
push
dec
ljmp
in
mov
xchg
loopne
jae
test
cmpsl
cli
mov
pop
xlat
jmp
jne
jns
push
lret
mov
lock
jmp
sbb
pop
inc
stos
sub
cmpsl
push
iret
out
dec
jns
sbb
out
sub
mov
inc
sub
or
sub
ja
int
mov
sbb
mov
jl
cmpsl
mulb
jae
or
cld
repnz
cmp
jno
push
jnp
and
je
les
add
sub
insl
sbb
cltd
movsl
les
and
cltd
loopne
mov
data16
inc
test
fnstenv
addb
push
sub
pop
mov
mov
xchg
jo
test
jle
inc
in
or
test
add
cmp
cld
inc
jmp
enter
xchg
testl
xchg
push
sbb
pop
xchg
lret
push
cmp
or
jmp
push
dec
ljmp
adc
adc
xor
adc
sub
js
or
jae
mov
idivl
in
cmp
xchg
rorl
mov
dec
adc
cmpsl
push
push
push
pop
imul
sub
mov
jno
fcoml
xorl
mov
pop
inc
jg
cli
mov
mov
and
dec
add
iret
lret
je
sub
jo
or
xor
fnstsw
mov
popf
out
jg
mov
ljmp
clc
push
or
inc
lret
and
std
lea
pop
fistl
fbstp
cmpl
jle
cmpl
lret
mov
xchg
out
add
jae
call
cmp
pop
jg
push
or
loop
mov
mov
inc
adc
cmp
mov
cmp
mov
jno
imul
imul
add
lret
outsl
cmpsl
sbb
leave
jo
dec
pop
rcl
arpl
push
mov
sub
fimuls
dec
aad
into
adc
jl
js
push
xchg
sub
ficompl
mov
push
jb
loopne
inc
test
into
nop
fiaddl
roll
inc
arpl
dec
mov
sti
jnp
push
movsb
add
push
ds
or
jl
pop
movhps
and
mov
stos
mov
int3
stc
sbb
andnps
hlt
jo
out
jle
mov
jae
outsl
pop
fistps
and
sbb
ljmp
rol
mov
mov
xchg
aam
mov
rclb
cmp
or
inc
pop
daa
jp
adc
mov
jge
rorb
repz
xchg
outsl
cli
adc
sub
test
scas
jne
cli
stos
cltd
push
jmp
scas
xchg
cmp
sub
roll
mov
fstpt
jne
les
popf
jmp
adcl
adc
add
loop
lret
dec
out
imul
pop
pop
xor
pop
mov
mov
mov
or
cwtl
loop
test
lret
dec
pop
xchg
lods
cld
loop
std
cmp
push
mov
pop
xor
jbe
push
cmc
pop
xchg
out
rcrb
pusha
and
fsubr
xchg
icebp
inc
adc
xor
mov
pusha
add
mov
sub
pop
cli
pop
rcr
popa
in
jp
add
jns
cltd
sub
fcoms
hlt
ret
inc
fadd
pop
xor
mov
sarl
test
jne
outsl
adc
xchg
adc
dec
fcmovne
daa
subl
popa
gs
ds
loope
insl
sbbb
mov
cmp
loop
adc
pushf
mov
adc
cmp
dec
icebp
insb
push
sub
or
xor
adc
in
sub
adc
subb
inc
mov
and
add
mov
loope
xor
dec
jg
push
std
or
xchg
adc
cmp
jmp
fcoml
sbb
adc
movsb
mov
pop
and
lods
data16
push
hlt
push
jg
repnz
xor
xchg
adc
push
out
xchg
cmp
pop
jbe
ljmp
sbb
je
gs
decl
mov
cs
xor
loop
xchg
jne
and
sbb
add
sub
xchg
inc
xor
movsb
aad
xor
out
fcoms
sbb
call
stc
add
lret
leave
cld
jmp
faddl
iret
mov
pop
add
add
jle
shll
outsl
mov
jg
test
dec
adcb
dec
daa
inc
mov
mov
jmp
push
cld
mov
test
ret
dec
jl
lret
loopne
and
test
bound
lods
mov
mov
mov
sub
fisubl
adc
sbb
cmpl
mov
fdivs
mov
fwait
mov
inc
push
xchg
mov
push
lods
or
jl
jl
push
or
xor
adc
insb
cmp
stos
xchg
inc
fmuls
test
ss
in
mov
aad
inc
loope
add
jmp
mov
popf
lret
shrb
out
rcll
idivl
xchg
xchg
sub
bnd
in
outsl
clc
sub
in
sbb
in
fldenv
insb
push
aaa
enter
cmp
inc
jno
pusha
lahf
leave
jnp
xchg
stos
lds
enter
inc
movsl
mov
jbe
sahf
test
mov
nop
jbe
fsubp
xchg
xor
xor
mov
fs
imulb
sbb
dec
add
cmp
ffreep
pop
int
in
adc
out
push
sub
adc
xchg
and
cmp
adc
mov
scas
lret
pop
dec
lock
shlb
xor
stos
mov
cmp
ror
shlb
test
mov
cmp
cmp
xchg
std
inc
js
lret
pushf
insl
nop
cld
push
cs
jle
push
adc
and
fimuls
dec
popa
or
xor
and
dec
popf
xchg
popa
ss
jno
dec
push
not
adc
sub
fistpl
push
data16
stc
fcoms
orl
loope
mov
push
xor
mov
andl
mov
pop
xchg
dec
into
sub
repz
xchg
fwait
inc
test
das
xchg
repz
cmp
fldt
lods
bound
aas
jecxz
pop
gs
sti
mov
cmc
cmpl
push
or
inc
pop
mull
mov
dec
push
sti
stos
xchg
mov
mov
or
fisttpll
sub
outsb
pop
aam
lret
jb
cmpsb
hlt
pop
pop
jg
scas
mov
xchg
nop
jno
mov
and
inc
fcom
outsl
cmpsb
cmpl
pushf
int
or
sub
stc
lea
mov
mov
ret
jae
add
xor
insb
lods
imul
shrb
xchg
sbb
cwtl
ja
test
push
add
loope
jl
mov
popf
pop
fcmovb
xchg
out
add
sbb
fwait
xor
sbb
push
leave
cltd
or
int3
leave
lods
mov
dec
push
lret
lods
jnp
inc
mov
inc
aas
jb
cmp
insb
xchg
lret
inc
and
out
hlt
sahf
push
dec
mov
jmp
jmp
xchg
subb
xlat
adc
and
ffree
dec
lods
loop
mov
xchg
rclb
subb
ja
aam
adc
pop
push
and
or
mov
and
cmp
jae
popf
insb
pop
je
addr16
je
js
leave
cmpsl
cmp
jnp
lret
dec
incl
ret
test
jbe
adc
sub
dec
jnp
repz
decb
and
xlat
push
ret
popf
push
adc
data16
add
sbb
jbe
mov
enter
sbb
adc
lret
push
das
leave
sub
sub
stc
or
or
pop
or
jno
xor
addl
ud1
xor
ret
sbb
cmp
daa
les
cs
adc
pop
push
jae
shll
mov
sub
jns
jbe
dec
sub
sahf
adc
hlt
xchg
sbb
mov
mov
jbe
fadds
and
popf
sub
sarl
or
lods
cmp
divb
or
add
xor
and
mov
mov
insl
jge
sub
mov
arpl
sbb
out
loop
test
pushf
aaa
push
xchg
bound
aaa
or
add
in
andb
rol
or
mov
jns
lock
mov
in
mov
inc
add
loope
rorb
fs
pushf
aam
out
mov
cmp
je
mov
xor
cmpsl
sahf
push
stos
mov
xor
inc
aas
addr16
or
or
jl
and
and
sbb
lods
shrl
push
add
pop
cmp
out
test
jno
adc
mov
sub
sbb
cli
ja
add
imul
mov
test
daa
or
iret
or
ret
fsubl
lods
mov
out
ljmp
mov
sub
pop
negb
xor
repnz
push
mov
imul
mov
lods
sub
aad
arpl
jnp
mov
lret
fldpi
decb
xor
cli
add
cmpsl
in
pusha
call
dec
insl
es
adcl
dec
jge
test
sahf
daa
mov
sub
aam
push
or
pop
hlt
loop
add
cmp
and
loop
jg
xor
roll
aam
nop
rcrl
ss
xor
jmp
inc
push
jno
mov
fmul
out
aas
out
lcall
je
xlat
xchg
movsl
in
pop
mov
xlat
jg
inc
jns
fldcw
shl
cmpsl
imul
xchg
mov
mov
mov
xchg
xor
inc
xor
stc
push
test
daa
icebp
loop
adc
adc
push
lock
mulb
push
inc
in
add
add
inc
adc
xchg
fmul
jmp
test
jne
in
lods
inc
cwtl
clc
movsl
aad
xorb
xor
insb
push
sarl
or
fwait
or
sub
mov
in
inc
xchg
pop
pop
lret
shll
mov
movsl
mov
dec
sub
mov
in
test
cld
sbb
mov
sub
rcll
sbb
into
sub
add
jb
ljmp
adc
xor
test
adc
or
fisubrs
shr
lea
mov
sbb
inc
loop
adc
push
repnz
cmp
dec
jbe
std
dec
bound
notb
int
fistpll
mov
cmp
lock
jne
icebp
repnz
pop
xchg
dec
mov
inc
cmp
add
es
jmp
pop
shlb
mov
int3
cltd
adc
andl
mov
or
fcmovbe
mov
movsb
repz
iret
inc
ljmp
and
daa
lcall
pandn
xchg
or
push
iret
add
cwtl
dec
pop
push
ljmp
sub
and
js
movsb
adc
shlb
sub
jns
dec
aaa
sub
rolb
or
mov
and
pusha
icebp
sub
shrb
test
or
mov
sbb
and
fcmovnb
cmp
push
xchg
pushf
repz
movsl
mov
out
xor
cmpsb
loop
sbb
imulb
int3
in
push
jmp
lret
inc
jae
daa
enter
dec
stos
sbb
inc
ret
pop
aad
lcall
iret
cmp
mov
xor
adc
sbb
imul
shrl
shr
cli
movsl
rclb
push
xchg
push
or
mov
sbb
ja
or
jle
inc
push
jbe
dec
xlat
xor
and
in
adc
mov
xchg
pop
push
add
dec
test
fst
call
inc
sarl
pop
jg
add
addr16
xchg
push
stc
mov
insl
or
add
mov
or
aam
adc
mov
lret
or
or
cmp
xchg
lea
loop
dec
pop
cli
cwtl
dec
push
cltd
mov
lahf
mov
test
addb
dec
sahf
loope
ds
xchg
sbb
std
xor
shr
mov
fld
popa
imul
test
sti
sub
jmp
inc
push
test
cwtl
push
sub
xor
cmp
cmp
mov
mov
jl
lahf
imul
mov
or
cmc
lods
jb
pop
push
inc
inc
cld
mov
push
mov
jge
mov
adc
ret
inc
test
ss
or
sub
sbb
adc
iret
sub
mov
xor
mov
out
std
jl
out
inc
xor
xor
in
jne
dec
adc
ss
mov
sub
mov
push
fists
outsl
aad
adc
jns
cltd
jo
mov
cs
push
sub
lock
inc
pushf
xlat
test
pop
das
les
subb
cmp
adcb
sbb
sbb
push
jl
outsl
icebp
fimuls
addr16
dec
sahf
incb
xchg
out
test
fwait
push
mov
sub
inc
xchg
in
sbb
jns
iret
lods
xchg
dec
sbb
add
or
scas
and
xchg
jmp
enter
mov
add
pop
test
add
jp
jecxz
fidivrs
inc
mov
xchg
bound
jp
push
fldl
cmp
adc
sbb
fisubrl
daa
jecxz
jnp
xchg
negb
cmp
bound
repz
mov
into
lcall
add
mov
gs
iret
shr
push
dec
inc
pop
mov
and
jo
pop
xchg
push
fptan
repnz
or
cmp
jne
sbb
mov
adc
jae
fmull
fimull
mov
mov
or
mov
nop
out
mov
out
pop
movl
aad
adc
push
cltd
ds
add
aam
inc
jne
lret
mov
xor
shl
sub
xchg
aaa
sahf
scas
cmp
xchg
insb
sub
jo
ds
mov
sub
filds
xor
enter
cli
neg
hlt
mov
das
addl
repz
mov
add
jp
out
pop
pop
movsl
cmp
jns
int3
sbb
or
add
mov
insb
jno
sub
ret
pop
in
daa
int3
jg
andb
sub
pop
push
outsl
jns
repz
adcl
mov
imul
pop
sub
iret
pop
inc
repz
mov
sub
jge
mov
push
mov
dec
lret
push
mov
js
adc
cmp
xor
add
bound
pop
jp
adc
jmp
jg
mov
cmp
xor
inc
push
or
jl
dec
movsb
loop
xchg
daa
jne
aad
loope
xchg
addr16
mov
in
les
pop
dec
sub
cwtl
mov
push
inc
or
mov
or
adc
sbb
call
cmpl
cmpsl
rol
das
popf
stc
xchg
cmp
dec
mov
scas
jp
outsb
js
mov
in
scas
ss
cmp
sub
and
cmpsl
inc
gs
into
push
ret
inc
pop
mov
push
ss
mov
imul
and
sbb
lret
sub
xchg
fimull
cld
movsl
ds
fistl
jne
xchg
scas
ret
xor
mov
lds
fldt
inc
adcb
repnz
cmp
hlt
xlat
pop
bound
xor
jp
sub
add
outsl
ror
mov
sti
and
negl
lret
push
dec
mov
ss
arpl
sub
push
pop
push
loop
imul
and
push
inc
mov
xor
pop
adc
xchg
ds
push
and
cmp
popa
test
loop
cmp
stc
push
pop
adc
push
xchg
ljmp
pop
mov
jae
mov
popa
jp
loopne
scas
jecxz
cmp
jb
adc
add
roll
and
sbb
xchg
in
jmp
sbb
xor
pop
popf
lds
adcl
inc
scas
mov
cmpsl
dec
bound
dec
pushl
in
fstl
pushf
jae
mov
sub
in
inc
cmp
insl
sbb
addr16
push
iret
mov
mov
sbb
mov
jecxz
fcmovu
iret
jle
dec
jp
mulb
pushl
les
cs
stos
mov
js
stc
dec
sub
sbb
in
repnz
js
sti
xchg
mov
pop
xlat
mov
fisubrs
dec
ss
fisubl
addr16
sbbb
xchg
and
leave
xchg
aaa
arpl
jno
out
jp
test
sub
mov
test
aaa
jmp
daa
mov
rolb
shrb
subb
cmp
imul
mov
icebp
xchg
xor
jae
daa
pop
in
stos
xchg
ja
add
sbb
add
iret
dec
ret
adcb
call
notb
xchg
sub
mov
mov
cli
rorl
push
pop
movl
insb
insb
pop
dec
mov
adc
orl
das
data16
lcall
and
pop
inc
sbb
mov
fnstsw
test
and
dec
out
in
mov
es
dec
nop
clc
xchg
push
adc
int3
mov
imul
xorl
repnz
ss
ret
ror
fidivrs
pop
ja
jnp
jo,pt
jecxz
aad
cld
enter
addr16
in
and
negb
or
scas
fisttpll
andl
aas
insb
cmp
mov
inc
int3
dec
and
lcall
cld
mov
test
lds
outsl
mov
sbb
daa
ret
adc
faddp
jmp
jg
dec
push
fnstenv
or
insb
add
sub
adc
lahf
test
cmp
repz
aas
pop
xor
push
dec
push
sahf
pop
mov
xor
push
repnz
mov
movsb
pop
or
jae
cld
stc
les
das
xor
xchg
sbb
stos
xchg
ljmp
sbb
mov
xor
loop
pop
cmpsb
shll
lret
jmp
sub
fwait
cwtl
mov
cmp
gs
cmp
pop
xchg
inc
xchg
push
cs
jns
sahf
cmp
xchg
icebp
psadbw
mov
leave
ljmp
jl
or
mov
aad
enter
mov
push
mov
pop
jge
dec
test
cmp
iret
mov
ds
std
test
adc
ret
xchg
inc
mov
popf
xor
std
lcall
addl
js
incl
xor
cmp
push
xor
adc
xor
cli
pushf
gs
pop
jo
lods
add
popa
addr16
sub
leave
aas
std
rolb
repnz
push
fisubs
in
fsubr
mov
in
push
imul
lea
dec
push
inc
or
negl
subl
lods
jg
bswap
pop
std
das
in
aas
sbb
out
sub
lahf
jge
insl
mov
mov
bswap
pop
std
das
in
aas
sbb
out
sub
lahf
jge
insl
mov
mov
bswap
je
sub
aas
sbb
out
sub
lahf
jge
pop
pop
test
mov
pop
jge
insl
jmp
xor
jne
out
sub
out
xlat
xchg
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
ss
sbb
sub
mov
and
dec
jnp
mov
mov
jmp
sti
or
sbb
sub
cmp
data16
push
imul
mov
mov
stos
sti
das
cltd
aas
sbb
sbbl
outsl
ja
addr16
test
scas
push
test
leave
hlt
dec
negb
sti
pop
or
push
pop
jo
and
ja
mov
pop
imul
push
push
scas
mull
outsb
jno
xchg
cmpsl
shrl
sarl
xor
js
cmpsb
lret
ljmp
in
inc
adc
xchg
loope
pop
push
scas
or
imul
sbb
sub
jmp
lret
ss
cmp
orl
inc
test
sahf
jns
or
out
pop
add
test
push
stos
repz
js
mov
sbb
jnp
fsubs
xchg
insb
jbe
push
cwtl
out
sub
add
lret
cmpsb
push
cmp
add
sub
dec
mov
repz
mov
jmp
jg
or
jmp
scas
push
xor
jbe
push
mov
sti
scas
or
lahf
repz
out
and
jmp
xchg
pop
pop
inc
sbb
jb
add
add
mov
lret
shl
movsb
subl
dec
inc
pop
jns
jbe
sbb
push
cmc
out
ret
int
into
fdiv
fwait
lea
push
pop
dec
pop
jp
outsb
pop
ds
pop
push
imul
mov
mov
jmp
sti
or
sbb
sub
cmp
pop
push
imul
mov
mov
jmp
sti
or
int3
test
rolb
push
xor
out
jp
fwait
adc
jg
nop
inc
pop
out
sbbb
jmp
jmp
clc
cmpsb
mov
out
xor
cwtl
inc
sarb
mov
icebp
insl
jle
into
cmp
stos
stos
mov
fwait
xchg
cli
mov
daa
add
dec
aaa
in
mov
test
les
mov
cmp
mov
cltd
xor
sbbl
push
pushf
mov
sub
adc
leave
or
cs
xor
pop
orl
inc
fstps
inc
and
push
jnp
add
mov
out
xor
int
je
lods
leave
test
lcall
mov
stos
mov
inc
xchg
push
inc
xor
test
adc
ja
stos
pushf
xchg
test
loopne
test
xchg
dec
pop
hlt
lock
ja
inc
lods
sbb
sub
sbb
push
rcrb
jnp
sbb
popa
out
push
pop
adc
pushf
std
ss
fsubr
push
and
mov
hlt
mov
inc
mov
lds
xor
add
out
dec
je
sub
ja
es
xchg
arpl
adc
dec
daa
jns
ds
xor
fst
mov
pushf
cmp
fsubrl
xchg
int3
pop
lods
adc
pop
pushf
sarb
mov
inc
cmp
loopne
add
repz
push
inc
adc
inc
adc
adc
stos
pop
xchg
dec
jp
adc
lock
adc
or
mov
imul
push
mov
mov
inc
test
test
cmp
shll
std
push
dec
inc
imul
push
cs
xchg
jo
in
loopne
jns
sbb
loopne
sbb
xlat
mov
mov
mov
inc
mov
sbb
arpl
xor
cli
lret
xor
out
test
pop
out
pop
mov
lods
jb
sti
imul
sbb
xabort
or
mov
roll
outsb
aad
inc
scas
pop
lret
sbb
push
mov
hlt
aad
cmp
rolb
insb
jo
dec
rorb
sbb
and
idivl
pop
push
push
std
dec
leave
dec
gs
cmp
inc
stos
lret
mov
push
ljmp
dec
dec
jno
aas
mov
or
lods
mov
outsb
sub
inc
jns
enter
mov
jecxz
mov
lret
test
mov
cmp
jmp
jo
add
push
lods
out
inc
sbb
not
sub
pop
push
adc
mov
in
testb
ja
int
lods
aad
ffreep
sbb
mov
dec
sub
cwtl
add
int3
mov
sub
xchg
jmp
xor
dec
jg
pop
nop
fnstsw
dec
lock
fildll
jne
femms
inc
push
push
xor
lcall
sub
popf
sbb
mov
adc
mov
dec
std
jne
outsl
mov
inc
jno
xchg
mov
loope
sbb
xor
mov
jecxz
iret
jbe
shll
and
add
mov
fisttpl
xchg
pop
lret
sbb
arpl
mov
sub
jnp
adc
iret
repnz
cmc
rcll
test
push
and
stos
xchg
inc
leave
mov
cmp
mov
stc
stos
or
pop
ret
cltd
and
xchg
and
jno
je
sbb
inc
loopne
scas
leave
and
fnstcw
cmp
push
cltd
mov
pop
sub
jge
xor
sbb
and
loope
leave
xor
push
push
adc
inc
xchg
inc
push
jmp
xchg
add
pusha
dec
inc
adc
dec
mov
sub
aas
mov
fiaddl
jge
sahf
es
arpl
sbb
into
scas
gs
in
sbb
mov
jg
iret
and
sub
ss
cmpsl
mov
sbb
sub
xchg
add
nop
ds
jbe
jae
sub
fnstsw
out
xor
fadd
mov
mov
mov
scas
stc
xchg
mov
repnz
or
inc
push
cltd
imul
mov
jae
add
fadds
mov
xchg
faddl
mov
sbb
adc
and
mov
fidivs
out
push
in
xor
fildll
aad
mov
cwtl
iret
sbb
inc
mov
jns
enter
test
inc
sub
popa
mov
mov
sbb
popf
xchg
pop
sbb
pushf
xor
xor
mov
jl
mov
in
imul
sbb
push
pop
dec
pop
imul
sarb
cmpsl
es
jmp
lds
and
sub
push
outsb
cmpsl
sahf
sysexit
jnp
xor
sbbb
mov
mov
mov
adc
adc
imul
aas
mov
cmp
pop
pop
mov
mov
add
enter
sti
sbb
mov
ja
cmc
je
dec
inc
mov
movsl
mov
ret
scas
or
pop
pusha
pop
mov
or
jl
mov
call
test
xchg
cmp
mov
push
xchg
sbb
mulb
leave
insb
jge
ret
inc
std
aad
or
xor
mov
adc
cmp
fistps
push
jnp
add
es
push
bound
mov
sbb
mov
test
lahf
mov
mov
popa
or
popa
adc
fiaddl
pusha
adc
adc
cmp
inc
jmp
fs
lods
xchg
xor
mov
push
jle
add
cmpsb
jb
push
inc
push
inc
lcall
cli
and
mov
cli
lods
jg
out
loopne
xchg
inc
mov
dec
sbb
mov
xchg
subb
mov
stos
inc
inc
ds
or
jmp
movsb
push
ljmp
in
rorb
push
push
sarb
imul
cmp
scas
cmp
xchg
subb
mov
aad
sub
clc
inc
jge
xor
pop
test
mov
push
sub
mov
push
xlat
lret
or
jecxz
je
mov
mov
ret
hlt
das
cmp
dec
jmp
xchg
clc
aas
repnz
sarb
jne
mov
mov
fsubrs
mov
adc
and
je
push
cs
jb
fwait
popa
inc
lds
xchg
adc
sbb
leave
aam
ret
xchg
adc
ficompl
jl
dec
xchg
and
xor
mov
movsb
add
int
inc
ficomps
sbb
pop
jle
pop
jno
loope
or
aas
sbb
shl
in
xor
inc
cmp
cmp
xchg
out
insl
jbe
test
mov
sbb
pop
add
cli
jle
adc
lea
pop
jo
out
dec
mov
or
ja
inc
lock
bound
inc
test
and
stc
movsb
outsl
lcall
xchg
mov
cwtl
fwait
mull
push
sub
xchg
mov
inc
das
addr16
and
inc
adc
adc
mov
call
add
fwait
stos
xchg
xchg
fisttpll
rclb
ds
push
mov
sub
sub
daa
dec
icebp
xchg
stos
add
jbe
inc
clc
je
adc
push
mov
push
cmpsl
lods
cmp
call
daa
mov
add
insl
arpl
mov
adc
es
mov
rolb
aam
push
movsl
jae
push
je
xlat
addr16
gs
mov
popa
fwait
imul
mov
faddp
cmpsl
arpl
data16
adc
mov
jns
dec
leave
subb
pushf
dec
inc
lea
xor
ja
call
sub
lock
incl
jmp
pop
or
jl
sbb
repnz
or
mov
or
sbb
insb
movsb
add
stos
sarb
sub
lret
jae
fisttpll
cmp
stos
fimuls
add
outsb
pop
mov
cmp
ret
xchg
mov
test
hlt
hlt
cmp
sahf
hlt
xor
sub
add
dec
xor
xchg
lret
or
jne
test
in
rorl
je
pop
in
xchg
or
das
jmp
inc
mov
push
or
mov
mov
shl
cltd
out
out
and
xchg
dec
lds
arpl
mov
js
push
cmp
mov
shl
jmp
das
add
mov
inc
xchg
xor
mov
sub
jb
cmp
or
dec
in
cmp
lahf
ljmp
dec
add
and
mov
icebp
jmp
fcomps
das
fcmove
dec
push
add
es
pop
outsb
adc
dec
cmp
sbb
cltd
jb
popw
sahf
fnstenv
repz
xor
addr16
and
cmp
loop
dec
repnz
fcmovnbe
rclb
out
cmp
rcll
and
repz
dec
cmc
mov
pop
inc
movsl
inc
or
sti
leave
lds
add
or
push
inc
adc
xchg
adc
pushf
jo
xchg
gs
cmp
fs
cltd
mov
add
cmp
je
mov
lea
pop
out
mov
cwtl
ret
arpl
popa
sub
lret
lods
mov
push
icebp
daa
dec
sub
jmp
jne
push
stc
jmp
out
test
imull
adc
call
sub
or
jo
fcomp
jge
and
or
mov
pop
xchg
and
xchg
lds
in
ds
outsl
jg
adc
xor
lods
stos
dec
ficompl
and
sbb
shlb
xchg
jle
stc
notl
jl
inc
pop
and
push
push
and
push
push
cmp
stos
adc
xchg
xchg
cmc
sub
cld
popa
lcall
cmp
fldl
and
repz
cltd
addb
ljmp
and
and
or
ljmp
push
cmpsl
repz
pop
sub
pop
inc
xchg
out
cmp
sub
xlat
lea
insb
test
pop
aad
cmpsb
test
inc
xchg
negb
mov
push
std
add
aaa
xchg
jno
and
daa
rcrb
orb
ret
xor
push
mov
mov
repz
lods
xor
jnp
or
push
ds
push
out
movsb
icebp
xchg
sbb
mov
stos
mov
sbb
xchg
std
adc
push
lcall
pop
inc
mov
incl
mov
xor
adc
mov
gs
inc
mov
push
arpl
lret
aas
out
outsb
ds
jmp
mov
push
ss
sbb
cli
sub
jo
sub
add
lds
fdivrl
or
sbb
movsb
divl
inc
neg
pushfw
inc
sub
je
or
xor
mov
mov
mov
adc
add
pop
ja
lea
pushl
jle
outsl
test
jl
push
jp
push
insl
rcrl
ljmp
mov
outsb
add
into
jae
out
rclb
rcrb
addr16
sbb
iret
sbbl
xchg
fs
jg
mov
dec
or
in
mov
rcl
push
je
and
jne
sbb
out
mov
mov
lods
push
and
lds
mov
aaa
push
pop
sbb
cmp
mov
xor
stc
roll
or
push
shlb
test
mov
mov
xchg
pop
ds
in
pop
pop
and
fnsave
mov
cmpsl
and
inc
insl
or
adcl
gs
xchg
test
fnsave
add
mov
mov
push
nop
enter
into
lock
stc
jnp
dec
jns
push
jmp
pop
in
sub
jbe
loopne
fwait
out
jno
faddp
gs
dec
lahf
mov
inc
jae
jecxz
insl
mov
stos
dec
xor
repz
imul
push
std
add
jno
insb
adc
pop
mov
out
idivb
mov
xchg
test
pop
mov
cmp
push
pop
jne
xchg
jp
pop
or
lods
stos
data16
mov
dec
sti
clc
dec
push
xor
jp
scas
lret
cld
dec
loopne
out
lahf
fisubrl
mov
or
jecxz
jo
test
xchg
ja
int
fs
imul
fwait
adc
cmpsl
popa
pop
in
xchg
popa
scas
outsb
jb
imul
fimull
and
push
dec
cmp
fdivs
sti
or
and
stc
aam
adc
out
lret
imul
lret
fdivs
sub
outsb
push
pop
jle
sbb
popa
pushf
cltd
les
or
rorb
loopne
rorb
insl
mov
fwait
or
cmp
or
cwtl
add
or
mov
call
jno
repz
cmp
and
dec
mov
mov
sbb
jge
pop
xor
add
scas
mov
dec
mov
sbb
loopne,pt
test
iret
lcall
pushl
cmpsl
sarb
pop
js
ror
cmp
lds
xor
pushf
lret
lods
fdivl
jo
sub
fdivr
iret
movsl
stos
test
in
add
sbbl
push
mov
or
adcb
repz
lods
out
cmc
xlat
and
stos
pop
sarb
dec
adc
mov
addr16
sub
or
inc
jno
std
insl
push
fs
push
es
pop
sbb
stos
int3
xor
mov
pusha
and
lahf
cwtl
jnp
test
adc
pop
xor
xor
adc
push
jg
mov
mov
enter
mov
das
lds
mov
sub
es
xchg
lret
aad
inc
in
popf
je
imul
ret
stos
mov
mov
negb
mov
and
mov
clc
adcl
rcll
sbb
movsl
testb
pop
or
out
mov
adc
in
cltd
int
adc
cli
or
and
pop
lret
and
inc
mov
sub
sbb
bound
ss
mov
insl
test
mov
stos
test
ljmp
sbb
inc
out
push
xor
sbbb
mov
mov
pop
outsl
and
mov
adc
or
mov
and
andb
push
cmc
bound
enter
cli
in
ds
sub
add
popa
movsl
rcl
insb
shl
mov
in
notb
test
pop
ss
add
adc
sub
cmpsb
mov
pop
sahf
fstl
dec
and
sbb
and
shlb
and
hlt
xchg
xor
jle
fsubl
mov
mov
aas
nop
es
dec
mov
inc
xor
inc
jne
mov
xchg
sub
xchg
cmp
loope
scas
ficomps
jae
sbb
jle
loope
fnstenv
and
sbb
jo
push
fcomip
test
sbb
into
pop
sub
pop
repz
xchg
pop
mov
lret
shr
cmp
fisubrl
push
cmpl
arpl
push
imul
pop
add
cmp
jno
pop
xchg
subb
lock
xor
mov
jmp
call
mov
sub
repnz
xchg
pop
add
adc
jno
mov
inc
push
jg
inc
insb
test
imul
ror
mov
sbb
pusha
cltd
push
js
das
sarl
addb
test
mov
jp
lret
push
pop
mov
and
test
das
adc
imul
fidivrs
pop
je
mov
mov
int
pop
mov
js
clc
push
mov
aad
std
push
imul
mov
cmp
shl
xorb
lock
and
and
mov
cwtl
ret
out
sbb
lahf
dec
test
rcrl
mov
inc
sbb
cmpsl
push
lahf
xchg
add
clc
pop
mov
icebp
je
xor
aaa
dec
ret
int3
sbb
les
loop
icebp
add
iret
pop
mov
rcll
std
push
pop
pop
xor
movl
or
je
push
fldcw
mov
xor
mov
mov
loope
add
pop
fs
xchg
sbb
xchg
jnp
int
shlb
loopne
shll
and
cmp
sbb
fstpt
mov
mov
sub
js
jl
push
cltd
push
push
aam
shll
xchg
int
outsl
mov
stos
lret
push
mov
jge
int
add
mov
mov
je
xchg
lea
or
mov
add
dec
inc
into
pop
push
repz
jns
xlat
push
andl
not
jecxz
sub
dec
gs
xlat
iret
push
insb
push
mov
mov
sti
test
xchg
lret
cmc
and
xor
jbe
pop
inc
fldenv
int3
stos
addb
xor
lcall
jb
sarb
scas
add
mov
arpl
std
aam
adc
fs
xor
mov
in
test
jmp
push
push
clc
fcoml
sbb
in
shrb
jnp
mov
sub
dec
dec
jl,pn
cmp
push
mov
mov
ret
dec
pop
and
enter
xchg
in
xchg
or
imul
cld
cmpsb
xor
cwtl
adc
stos
into
ret
push
jp
push
jb
mov
in
popa
movsl
lds
mov
xchg
jo
test
cmp
xor
dec
xchg
fs
sub
js
clc
jge
repnz
imull
push
fisubrs
jmp
inc
pop
add
icebp
lret
add
aas
scas
stc
mov
std
jns
daa
push
rcr
hlt
jge
mov
dec
xorl
sahf
push
mov
xchg
mov
dec
adc
cmp
xor
pop
jne
fimuls
mov
xor
jo
dec
or
dec
in
dec
xor
xor
adc
xor
inc
mov
add
arpl
pop
mov
fwait
mov
cwtl
es
sbb
sbb
push
adc
cmp
insl
out
not
and
std
sub
inc
mov
loopne
dec
negb
pop
cmpsl
sbb
xor
aas
add
jge
mov
sbb
mov
orb
mov
adc
aad
mov
subb
fmull
js
mov
adc
testb
push
fcomps
mov
cmpsb
lahf
icebp
mov
pop
iret
xor
add
add
or
or
lret
lods
shr
ficomps
rsqrtps
cmp
cmpl
jns
mov
scas
dec
pop
and
push
and
test
leave
shl
push
cwtl
mov
int3
push
inc
andb
cmpsl
leave
imul
shlb
cmp
je
imul
out
cli
imul
popa
pop
inc
dec
jg
and
sbb
aas
mov
scas
arpl
and
xchg
xchg
sub
sbb
ja
andl
and
inc
mov
xor
clc
shrl
bound
push
bound
adc
call
rcl
xor
mov
sahf
filds
test
in
add
dec
decb
push
out
daa
ss
das
adc
pushf
cmp
insl
sbb
shll
dec
in
or
cmpb
pushf
xor
in
mov
bound
movl
xor
mov
add
and
jp
loope
inc
pop
jp
mull
xchg
fsubs
ljmp
push
mov
push
ret
repz
aad
scas
mov
lods
mov
in
sub
fisubrs
repz
xor
loope
test
addr16
leave
aas
xlat
loope
sub
ljmp
lahf
clc
adc
adc
aad
shr
or
mov
sarl
fcomp
fsubs
sub
sbb
je
fcmovnu
in
cmp
into
leave
cmp
jno
fisubl
xchg
mov
aam
add
out
jp
pop
and
outsb
sub
sub
lcall
inc
rcl
xchg
movsb
xchg
and
sbb
pushw
adc
fs
mov
dec
dec
jb
jl
scas
popf
cwtl
rcrl
push
test
xor
pop
in
sbb
mov
or
sub
mov
aas
mulb
lea
pusha
xchg
sub
cmp
inc
sub
imul
adc
mov
mov
push
into
jb
leave
pop
pop
in
jp
adc
mov
inc
lods
lcall
cwtl
xchg
sub
sub
sahf
push
pop
cmc
call
mov
xchg
mov
dec
cld
push
test
jns
jnp
mov
lret
in
adc
pop
in
test
mov
xchg
xchg
adc
sbb
jmp
cmp
sub
adc
jle
and
xlat
pop
fbstp
inc
pop
test
rolb
xchg
negl
sbb
push
cmp
pop
push
imul
mov
mov
jmp
sti
or
sbb
sub
cmp
pop
push
imul
mov
mov
jmp
sti
or
push
push
push
push
cmp
repz
imul
push
cmpsb
fwait
xchg
stos
xchg
lret
sti
or
pop
sub
cmp
pop
jmp
jnp
je
xor
xchg
addl
add
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
test
movsb
je
add
xorb
add
xor
test
fs
mov
inc
test
movsb
je
add
adc
and
push
adc
add
push
in
hlt
push
loope
xchg
je
fs
inc
test
movsb
je
add
adc
and
xor
les
push
addl
push
rorl
in
test
aaa
hlt
adc
in
xlat
xor
mov
shl
and
jo
inc
or
in
aad
lret
cltd
jle
xchg
mov
insl
sbb
iret
jl
pushf
in
push
test
dec
dec
fidivrl
xchg
notl
push
aad
loop
or
jnp
test
sub
js
leave
test
jno
and
add
in
add
ret
and
jno
xchg
pop
je
shrl
imul
sti
hlt
jne
xor
cmp
sbb
pop
xlat
sub
icebp
int3
fwait
push
insb
sbb
and
or
or
and
inc
xchg
test
les
gs
lret
inc
test
movsb
je
add
adc
and
xor
les
xor
and
push
test
movsb
fs
shrb
inc
mov
inc
jl
mov
pop
mov
test
lock
sbb
adc
lret
sub
cmp
sub
pop
mov
mov
sbb
imul
and
jnp
loop
stos
pop
xlat
add
hlt
and
xor
les
xor
and
push
test
movsb
fs
inc
test
movsb
je
add
adc
and
xor
les
xor
and
push
test
movsb
fs
inc
cmpl
iret
xchg
xchg
rolb
aam
lret
jns
push
out
ljmp
rclb
mov
mov
inc
cmp
loop
jae
lahf
lds
mov
mov
push
in
and
and
mov
mov
mov
jbe
daa
inc
xchg
hlt
in
insl
dec
dec
sbb
sbb
adc
scas
cli
outsl
cmp
scas
call
pop
outsl
mov
arpl
lret
mov
imull
mov
mov
or
lods
repz
jge
lahf
jae
inc
cmp
movsl
movsb
aas
cmc
dec
std
loopne
mov
fldcw
das
scas
cmp
dec
bound
add
ss
sub
mov
or
add
aad
sti
xor
adc
rcr
rcrb
fwait
mov
inc
add
das
stos
fimull
xorl
imul
inc
lret
sbb
add
adc
dec
mov
pop
sbb
in
push
lret
and
mov
xchg
sbb
adc
fbstp
mov
inc
ret
mov
mov
loope
sub
fdivl
mov
xchg
dec
and
out
insl
jecxz
and
inc
mov
cmpsb
or
mov
mov
insl
cmp
jg
xchg
inc
nop
daa
dec
das
divl
cmp
sbb
out
test
subl
pop
in
jp
jecxz
sti
and
out
pop
add
mov
fs
cmpsl
lcall
inc
aam
pop
mov
adcl
fistpll
andl
adc
outsl
pop
repnz
fbld
rcrl
sahf
xchg
dec
or
aaa
pop
mov
fwait
cmpsl
jo
dec
push
mov
fs
lret
add
push
aam
jle
fnstsw
dec
pop
inc
lods
test
addl
xchg
add
push
scas
sti
mov
push
dec
dec
test
movsl
aad
sar
ds
sbb
mov
sub
bound
sti
ljmp
mov
push
fwait
inc
clc
dec
cmpsl
push
mov
jmp
js
mov
clc
dec
in
cmp
inc
fisubl
pop
cmp
and
push
imul
cmp
fldcw
xor
mov
mov
and
aas
pop
data16
testb
int3
fisubl
cld
lods
mov
mov
filds
mov
or
mov
shrl
mov
cmp
push
or
jmp
pushf
mov
xchg
vpandn
mov
sbb
xor
shll
lock
test
xchg
lahf
mov
push
xor
adc
cmpsb
pop
xor
push
inc
stos
xchg
out
pop
mov
popa
push
mov
loope
mov
adc
aam
mov
imul
sub
ds
sub
imul
push
inc
dec
aam
jae
mov
lods
mov
jne
pop
mov
bound
jne
cwtl
loopne
push
mov
pop
aaa
adc
push
sahf
and
int
pop
sahf
or
pop
testb
adc
pop
sbb
mov
fsubrl
je
xor
lcall
inc
cmpsl
rclb
cmp
mov
out
push
push
pop
add
cmp
dec
sub
sub
mov
xor
add
xorb
push
fimuls
out
push
sbb
aas
xor
xor
mov
jp
dec
aas
std
in
sub
bound
out
js
xchg
sub
mov
inc
mov
ds
insl
mov
and
jns
mov
cmc
into
test
popa
push
popa
stos
cld
es
scas
sub
push
xchg
loop
xchg
icebp
shll
sub
rorb
or
stos
scas
je
lcall
es
iret
mov
pop
ret
shll
fstps
outsb
sbb
sti
cmpsb
push
cmp
mov
or
mov
test
mov
sub
jle
inc
and
fmuls
aam
xor
jle
cmpsb
in
adc
jnp
xchg
insl
je
mov
lods
mov
out
push
and
loope
jno
jge
jns
fidivl
rcl
ja
or
jno
push
mov
inc
aad
mov
sbbl
and
mov
xor
jne
lret
add
shrb
mov
xlat
xchg
addr16
add
leave
gs
mov
sub
loop
cltd
mov
mov
and
add
adc
packuswb
mov
movsb
push
sbb
adc
and
test
add
roll
pop
ja
adc
stos
test
pop
and
outsb
mov
gs
sti
or
pop
sub
push
mov
mov
push
outsl
aaa
out
int3
xchg
insb
xlat
sub
gs
dec
insb
int
mov
and
dec
mov
lock
jl
leave
or
int
xor
imull
icebp
repz
xchg
push
mov
push
movsb
sbb
xchg
add
ljmp
scas
pop
fdiv
addr16
xlat
daa
nop
imul
inc
out
pusha
fldt
pop
jl
rcrl
mov
sahf
cltd
ja
sti
lods
and
push
mov
jle
dec
push
pop
mov
shrb
pop
lock
pushf
mov
pop
mov
aam
cmp
lods
mov
jl
inc
test
stos
mov
mov
cld
call
outsl
mov
filds
pop
lea
sahf
mov
out
push
mov
push
dec
add
cmp
jge
repnz
xchg
gs
adc
pop
adc
push
in
inc
mov
pop
xchg
inc
jmp
push
and
mov
rol
mov
sbb
loopne
xchg
adc
cmp
inc
jbe
shll
fstpt
in
lea
loopne
popa
add
fsubrl
xchg
mov
dec
add
sbb
and
pusha
fistpll
xor
cmp
addr16
push
cmpsl
xchg
cmpsb
dec
jne
jl
xor
add
mov
and
cld
ss
fidivrl
fcomps
test
mov
xor
aam
int
cmp
loop
stc
test
push
nop
aad
pop
sub
lcall
and
xlat
sar
mov
or
incl
std
cmp
pushf
cltd
dec
or
mov
mov
into
sub
cmpsb
add
mov
push
mov
push
cmp
loopne
inc
fstps
dec
xor
xor
movsb
push
adc
and
rcrl
jmp
dec
orb
xchg
mov
adc
push
jle
call
push
jp
stc
cmp
adc
daa
sar
popa
mov
mov
sbb
sbbb
add
xchg
jno
stos
cld
cmc
imul
push
xor
ja
mov
les
xor
push
mov
inc
cmp
dec
cmp
popf
sbb
xchg
sub
push
jmp
jno
dec
jmp
adcb
dec
add
mov
inc
pop
jns
movsl
mov
push
cmp
mov
ret
pop
adc
mov
fadd
inc
loope
add
jns
cmp
pop
dec
or
jnp
adc
in
inc
sbb
inc
cli
ffreep
outsb
cmp
fwait
sbb
shll
in
cmc
adc
mov
addr16
daa
addr16
xor
sub
fs
jle
loope
jle
dec
dec
inc
cltd
sub
fs
inc
inc
xchg
out
movsb
sti
mov
enter
fstl
lock
ret
in
divl
push
stos
and
mov
add
sbb
pop
in
ljmp
inc
push
sbb
mov
jbe
into
pop
mov
push
jo
inc
repnz
lcall
pop
add
adc
and
loopne
push
mov
xchg
mov
ds
jne
in
ja
mov
inc
jp
stos
enter
and
aam
shl
sbb
push
pop
loop
cmp
in
sbb
addb
xchg
test
pop
cs
or
aam
adc
push
insl
testl
jae
pop
cltd
lea
lcall
nop
gs
mov
add
lea
js
xor
mov
pop
xchg
call
leave
rcll
ret
jge
and
movsb
insl
das
int
repz
push
pop
sbb
push
repz
jb
call
lea
mov
sahf
mov
dec
movsl
add
xchg
mov
and
xchg
sbb
and
add
cmp
and
aam
and
xor
sti
sub
shr
sub
cmp
push
mov
sbb
inc
inc
push
sbb
mov
mov
aad
add
pop
insl
adc
inc
mov
mov
inc
daa
jp
inc
mov
pop
dec
mov
push
shrl
jecxz
inc
bound
lea
cld
cld
lea
hlt
cmp
rorb
jo
mov
inc
mov
shll
loopne
fisubl
inc
shll
gs
mov
fistps
fs
push
inc
js
inc
stc
push
js
sub
dec
fsubs
jl
xchg
es
into
mov
pop
push
lods
sbb
and
lret
popa
inc
sbb
popf
insl
jmp
imul
mov
pop
or
mov
popl
mov
xor
jo
hlt
mov
scas
test
scas
cltd
cmp
push
and
jecxz
cli
push
mov
fsubr
or
or
sbb
xchg
mov
ljmp
or
jb
cmc
mov
jge
pop
lcall
outsl
mov
std
adc
lea
mov
cwtl
pop
xchg
sbb
fisttpl
dec
out
or
outsb
jo
lock
sbb
mov
leave
rolb
mov
fsubrl
rorl
fwait
js
das
int3
lods
int
dec
or
mov
leave
adc
mov
in
pop
push
outsl
repz
out
push
sub
repz
dec
scas
fsubrl
xor
adc
test
inc
fsubrs
ljmp
push
mov
pop
clc
rcrl
pop
dec
das
fldenv
bound
jns
repz
mov
push
mov
mov
inc
pop
mov
sbbl
sub
imul
or
push
push
into
call
in
xor
jecxz
inc
sub
lock
lock
sbb
insb
adc
and
out
js
pop
stc
dec
cmp
push
clc
jmp
cmp
mov
fsub
aas
xchg
inc
mov
std
ret
fdivr
lret
inc
ja
push
je
and
int3
cmp
mov
shlb
mov
roll
inc
jge
xor
push
mov
sub
imull
mov
sbb
dec
push
cmpsl
adc
xchg
cmpsl
lods
outsl
out
in
aad
icebp
sbb
cmp
mov
fwait
daa
pop
sbb
aad
out
cli
fidivrs
pop
jb
movsb
les
xchg
xor
pop
pop
and
int
push
or
call
xor
lods
mov
je
inc
dec
popa
fnstcw
xchg
push
sahf
std
pushf
mov
sahf
dec
mov
lcall
lahf
dec
sub
ja
stc
cld
mov
add
addr16
pop
push
cmc
dec
add
icebp
push
sti
xchg
fs
pop
fcmovbe
dec
sarb
inc
sbb
leave
addr16
lea
insl
mov
push
and
mov
das
xchg
flds
hlt
test
adc
mov
mov
push
js
sbb
jle
cmp
in
call
add
gs
shr
les
mov
adc
lcall
xchg
aam
lret
pop
out
inc
rcrl
push
push
mov
imul
test
add
adc
mov
lea
push
rcrb
pop
lea
test
lret
imul
cmp
shl
add
or
aas
nop
out
rcll
adc
lret
ret
mov
ja
pop
nop
add
inc
xor
xor
std
mov
loopne
cld
dec
xchg
arpl
sub
push
das
sarb
push
loopne
fwait
jge
inc
sbb
ret
rolb
mov
cli
push
xchg
jne
rcr
enter
int3
cmp
mov
dec
orl
pushf
jno
mov
into
stos
mov
cmp
ds
mov
mull
popf
out
and
inc
lock
int
jne
ss
mov
inc
xor
lahf
icebp
mov
mov
or
testb
inc
popa
mov
not
mov
and
out
jo
mov
xor
fldcw
jns
test
or
push
cwtl
push
popf
loope
cmp
iret
pop
sbb
shlb
testb
or
pushf
rclb
xchg
dec
out
cmp
jb
test
adc
sbb
adc
jo
sti
mov
test
push
jge
add
out
iret
jp
cli
push
sar
mov
lea
pushf
fisttps
test
ljmp
adc
mov
mov
push
push
xor
lds
jge
into
add
and
dec
push
stos
mov
inc
xor
push
pop
pop
lods
nop
mov
push
sub
daa
jne
pop
jbe
jo
je
and
int
lahf
popa
sub
cmpsl
lock
and
sub
mov
sub
lods
jge
jle
out
lods
or
dec
dec
mov
sbb
xor
add
les
push
stc
js
insb
dec
xchg
xchg
in
or
inc
rorl
pop
adc
lods
add
daa
in
addr16
data16
cmp
fimull
xchg
popl
jne
es
dec
pop
jb
adc
push
sub
mov
hlt
push
loop
in
out
je
lea
adc
das
jp
push
cmp
fwait
add
dec
add
add
lock
scas
fwait
scas
loope,pn
test
scas
sbb
dec
pop
sbb
movsl
ljmp
mov
push
loope
sbb
push
test
pop
inc
mov
test
je
lahf
aas
cmp
push
mov
cld
ret
dec
rcll
jecxz
popf
fnstcw
mull
fnstcw
and
aad
adc
pop
cmpsb
pop
cmp
in
ret
rorb
iret
mov
sub
jmp
jp
addl
insl
cli
sbb
xlat
xchg
inc
jmp
cmpsl
aas
notl
std
or
scas
dec
xcrypt-ofb
cmpsl
jmp
ret
adc
aas
push
and
nop
mov
inc
sbbb
add
bound
push
cmpsb
popf
xlat
cwtl
mov
and
stos
mov
pop
xor
push
add
lret
ror
jo
mov
mov
dec
inc
jnp
xor
hlt
scas
test
push
xchg
add
imul
clc
fstpt
ds
fs
jo
out
cmp
repz
nop
xor
lahf
mov
adc
inc
push
xlat
das
or
data16
ret
int3
shlb
xchg
xchg
and
in
loop
enter
mov
inc
mov
sub
fcmovu
ret
pop
les
push
and
sahf
dec
clc
fldt
fwait
aad
or
mov
mov
xor
xor
testb
mov
mov
jns
sub
insl
mov
hlt
xchg
les
inc
stc
popf
das
out
and
stc
and
repnz
outsl
inc
repnz
adc
test
mov
popa
les
mov
clc
jns
and
loope
jecxz
out
and
push
divb
mov
xor
sti
lcall
pop
xchg
and
les
loop
sbb
cli
adc
lods
test
xchg
aaa
sahf
icebp
movsb
mov
xchg
mov
add
repz
push
push
pop
lea
push
ljmp
fcom
inc
cmpsb
fmul
lods
push
pop
insl
cmp
icebp
cld
push
fcoml
aam
xor
insl
push
or
xchg
push
out
roll
loope
inc
push
mov
jbe
mov
fcmovnbe
mov
lds
pop
lahf
adc
lcall
shrl
cli
push
std
pop
xor
lret
adc
jae
and
fstp
ffreep
popf
cmp
jge
popf
inc
or
test
je
ret
rolb
lret
push
or
xor
cld
loop
es
jb
test
mov
lods
mov
cmp
mov
lret
repz
cmp
mov
adc
fldl
pavgb
mov
xor
stc
dec
xchg
sbb
mov
imul
jo
mov
lahf
les
push
stos
sbb
rolb
test
cltd
imul
push
fdivrs
and
repnz
and
movsl
lret
xlat
rcrb
mov
jp
push
jnp
fs
add
mov
fisubl
jne
loopne
jo
fs
jne
fwait
inc
sbb
add
cmpsb
inc
jge
sbb
orl
in
dec
add
inc
fs
lret
cmp
pop
push
xchg
mov
in
push
in
icebp
jae
pop
popa
and
adc
dec
imul
cli
insb
and
in
sbb
lock
lds
pop
push
jle
subb
mov
stos
mov
aam
fadd
fimull
adcl
pop
icebp
sahf
dec
ja
mov
faddl
in
mov
lahf
dec
adc
iret
jae
sahf
in
out
hlt
adc
dec
cmp
and
xchg
lcall
mov
cmp
fcomps
push
jp
pop
push
sti
xchg
repnz
xchg
jle
subl
mov
movsl
sbb
mov
jns
jge
sub
ljmp
ja
or
sub
out
in
icebp
fldl
or
shll
push
jp
xchg
scas
ret
or
mov
call
and
rcrl
loope
in
cmpsl
adc
call
orl
fldln2
outsl
mov
add
cmc
lea
jae
aas
dec
jg
cmp
stos
enter
iret
es
ficomps
sbb
in
pop
popf
sbb
mov
inc
xchg
iret
repz
test
enter
cwtl
enter
movsl
clc
mov
ret
sub
xchg
push
dec
sti
sar
dec
xor
inc
addr16
shlb
adc
cwtl
jge
mov
shlb
in
sub
or
pop
std
rclb
mov
loope
dec
push
arpl
inc
sbb
pop
add
sub
or
fldt
sbb
mov
or
sbb
dec
insb
jp
sub
jp
adc
sub
in
add
imul
inc
sub
pop
bound
xchg
je
das
and
push
cli
adc
mov
shll
aaa
bound
std
stos
xor
cmp
mov
dec
imul
push
cmp
scas
mov
sub
xchg
xor
xor
pop
pop
insl
mov
loopne
stos
cmc
fidivrs
mov
ljmp
daa
out
push
loope
andb
adc
aad
fsts
and
xchg
shl
add
in
mov
movsl
dec
fdivl
mov
xor
sbb
push
add
fnsave
int
adc
fldcw
notl
jnp
inc
aas
into
push
or
lret
in
or
push
and
ret
mov
cmpsl
sub
mov
mov
mov
movsl
inc
adc
xchg
aad
jae
push
repnz
mov
andl
pop
cli
fxch
sbb
rcl
and
add
popa
fildl
mov
mov
dec
adc
mov
dec
fwait
xor
mov
addl
sub
inc
div
dec
insb
xchg
into
inc
test
or
stc
out
fcomps
decb
jl
inc
int
adc
dec
push
ret
inc
adc
fwait
pop
imul
dec
pop
pop
inc
mov
cs
cmp
adc
fmull
dec
call
dec
jmp
nop
std
sub
dec
data16
sub
mov
out
jno
incb
jg
subb
aaa
dec
inc
lods
scas
shll
iret
subb
out
fdivr
data16
sub
rcr
cltd
fistpl
xchg
test
pop
add
mov
dec
sbb
or
xchg
das
sar
daa
bound
insb
ret
push
clc
fcmovnbe
cmp
and
sub
and
shlb
sti
pop
fbld
in
and
sahf
push
test
jg
loope
aam
jl
jnp
xor
xor
pop
xchg
mov
xchg
arpl
lds
mov
cmp
ss
xchg
inc
jl
inc
decb
ja
xchg
clc
mov
jo
and
or
jl
lret
ret
mov
sub
adc
faddl
mov
mov
sti
loope
xchg
and
sti
outsl
outsl
cmpl
push
icebp
or
movsb
je
add
adc
and
xor
les
xor
and
push
test
movsb
fs
inc
test
movsb
je
add
adc
and
xor
les
xor
and
push
test
movsb
fs
inc
test
movsb
je
add
adc
and
xor
les
xor
and
push
test
movsb
gs
inc
test
movsb
je
add
adc
and
hlt
adc
add
sahf
in
andl
int3
imul
popf
jecxz
sarl
int3
cwtl
mov
orl
pop
arpl
xor
insl
adc
repz
jecxz
sarl
mov
or
push
cmp
and
jge
repz
jecxz
sarl
mov
or
aaa
pop
inc
dec
jbe
dec
cs
adc
stc
repz
mov
ret
inc
push
dec
jbe
imul
cmp
shl
test
sbb
shll
arpl
inc
cmp
xor
pop
adc
nop
pushf
rcll
into
sbb
iret
cmp
push
jb
div
and
scas
cwtl
ds
daa
shll
pushf
cmp
xor
jecxz
in
jge
out
pusha
outsb
pop
mov
mov
std
test
bswap
lods
ret
pop
pop
fcoml
adc
sbb
push
inc
cmp
mov
mov
xchg
or
adc
sbbl
jge
mov
gs
mov
cmp
push
cs
out
arpl
pop
arpl
inc
push
inc
test
pop
jg
dec
repz
jecxz
sarl
mov
or
push
cmp
and
jge
call
mov
mov
sbb
sarl
js
pop
cmp
lret
push
sbb
or
or
loope
sar
mov
sti
xchg
test
mov
push
push
xor
dec
add
pop
push
ljmp
cmpsb
mov
std
orl
cmp
and
jge
repz
jecxz
sarl
mov
or
push
cmp
and
jge
repz
stos
xor
test
in
bound
xchg
into
cmp
shrb
int3
inc
cmc
ret
int3
iret
int
fwait
js
imul
dec
and
xlat
push
mov
lods
loopne
push
and
jae
and
inc
xchg
dec
mov
cmp
adc
adc
cli
dec
fmuls
xor
push
pusha
sti
xchg
cmpsb
cmp
xor
test
sbb
sbb
xchg
das
lods
add
cwtl
or
mov
sub
xchg
pusha
adc
pop
xchg
sub
adc
cmp
jb
ret
fdivs
fnstsw
dec
pushf
jl
aam
mov
dec
push
cld
notb
lret
jg
imul
push
xor
iret
roll
push
lods
mov
aam
lcall
clc
movsl
popf
jns
push
test
inc
aam
cmc
aam
pushf
adcl
ret
jle
dec
mov
inc
xchg
mov
lds
add
aas
lock
insl
out
aas
xor
cmp
jo
faddp
inc
in
mov
hlt
xor
mov
push
scas
sbb
rorl
mov
sbb
adc
jecxz
fwait
jge
in
data16
pop
dec
dec
jne
addr16
dec
lcall
lods
sub
push
testb
insl
out
jb
hlt
into
pop
lcall
stos
pop
mov
add
push
xchg
cmp
jb
enter
mov
das
loope
inc
fwait
and
and
mov
inc
pop
dec
pop
pop
cmp
push
mov
aaa
jns
sbb
movsl
mov
gs
pop
push
jns
movsl
and
std
mov
test
mov
xor
cmp
xor
pop
iret
aas
inc
cmp
jns
inc
test
lods
mov
arpl
pushf
pop
inc
hlt
sub
pusha
adc
dec
push
push
push
sbb
sbb
aam
cmpsl
xor
lods
pop
outsb
xchg
pop
mov
mov
ret
mov
xchg
and
aaa
sbb
xchg
in
mov
or
jmp
xor
cltd
hlt
mov
das
push
stos
fchs
scas
mov
sub
cltd
cs
inc
leave
inc
rorl
inc
es
xor
sarl
xlat
pop
pop
sub
adc
lods
fldt
movsb
in
cmp
sub
push
mov
aaa
xchg
repnz
sub
jge
inc
movsb
adc
loop
rolb
add
sub
roll
fcomps
push
cs
fdivr
lret
cmp
add
es
push
fisttpll
mov
xchg
sub
mov
inc
mov
pusha
and
addl
push
rolb
xchg
lret
pop
insb
jl
sbb
jae
dec
push
mov
in
rol
subl
jnp
in
jmp
adc
daa
fcmove
xchg
test
sarb
test
add
adc
ds
pop
and
lods
outsl
xchg
jnp
lock
scas
mov
mov
xor
xchg
rcrb
sub
mov
arpl
popa
les
dec
pop
mov
and
sahf
mov
sbb
jne
and
jo
pop
or
arpl
loopne
inc
mov
adc
jmp
ror
and
adc
ret
cltd
sarb
lret
push
fistpl
xchg
cs
mov
inc
add
mov
pop
outsb
fisttps
dec
adc
out
insb
roll
or
mov
cmp
ja
push
stos
popa
inc
or
mov
rorb
or
mov
lea
imul
inc
push
out
lods
push
xchg
inc
jns
inc
ds
add
ss
xchg
jns
enter
add
pop
out
mov
in
jecxz
mov
es
xor
clc
sbb
mov
xor
and
notb
xchg
popa
pop
mov
pop
xor
mov
mov
xchg
test
outsb
out
mov
sbb
bnd
push
out
add
lahf
dec
fildll
outsb
mov
sbb
sub
fcmovb
and
mov
jns
movsl
xor
jl
jae
push
dec
sar
out
jl
cltd
mov
sub
pop
dec
push
rcrb
xchg
pushl
outsb
into
mov
pop
or
mov
lcall
dec
mov
adc
stc
mov
test
in
cwtl
fnsave
insl
pop
loopne
dec
jecxz
push
add
push
xor
test
hlt
inc
decl
pop
push
or
idivb
jbe
ja
cwtl
adc
dec
mov
test
push
and
xchg
into
leave
inc
jecxz
inc
ljmp
lock
fcmovnb
mov
fucomp
je
mov
add
adc
sub
push
xchg
cmp
hlt
shlb
std
and
jae
mov
fisubs
addr16
int3
push
or
ror
bound
push
mov
int
mov
mov
aaa
mov
inc
xchg
stc
push
jg
repz
sub
lods
inc
jne
int3
ret
mov
or
and
push
movsb
outsl
cltd
lds
jnp
mov
arpl
inc
leave
add
fadd
jp
mov
and
add
mov
mov
lret
push
add
xchg
fs
lahf
rol
xor
shlb
int
jl
in
or
mov
pop
cmp
or
push
aam
das
cld
sbb
pop
subl
sub
and
push
xchg
in
and
jne
inc
xchg
outsl
sub
ljmp
daa
cmp
jmp
xchg
addr16
sub
dec
xchg
out
cli
cmp
add
loop
or
mov
cmp
mov
push
cltd
dec
push
lcall
pop
cmpsl
xor
adc
loope
std
mov
in
xor
or
sbb
ret
shl
adc
jnp
int3
in
aaa
inc
repnz
mov
ja
roll
sub
je
jnp
add
test
aas
mov
push
sub
sub
mov
nop
push
repz
sub
adc
xchg
fwait
mov
xchg
sti
pop
xchg
jb
mov
aam
fisttpll
lock
int3
ljmp
mov
mov
push
dec
jns
hlt
or
and
push
mov
notl
out
ret
test
rclb
and
test
loopne
das
sbb
mov
push
xor
pop
mov
mov
cld
arpl
jle
lods
idivb
lcall
lock
cwtl
cmp
cli
dec
sti
insl
add
sub
mov
je
push
pusha
sub
jne
das
cmc
mov
mov
stos
push
loopne
add
inc
push
adc
fisubrs
iret
jbe
or
add
mov
fisttpl
movsb
ja
rclb
movsl
cmc
fdivrs
mov
popf
and
fwait
and
in
rorb
popf
pop
add
jmp
enter
arpl
setne
int3
xchg
jo
inc
in
mov
leave
xor
add
addr16
xorb
test
mov
lcall
jno
stos
inc
arpl
leave
addr16
dec
cmpsl
mov
fwait
xchg
or
mov
or
pop
xchg
aaa
loopne
or
mov
sub
and
lock
xchg
aas
ds
cmp
fidivl
lods
ss
dec
mov
into
or
pop
adc
pop
mov
mov
jns
sbb
sti
in
jno
sbb
mov
lods
adc
lods
out
outsl
sbb
push
cmpsl
inc
jp
daa
pop
inc
or
es
xchg
popf
das
sub
roll
in
addb
mov
and
push
mov
adc
push
push
ficoms
sbb
push
and
nop
outsl
push
fsubrs
negb
mov
fstps
mov
mov
pop
cmp
pop
movb
fsubr
cmpsl
mov
ljmp
sbb
nop
aaa
adc
pop
add
mov
sub
add
cmpsb
call
ss
dec
lret
ds
hlt
xchg
pop
pop
roll
leave
add
mov
ss
ljmp
mov
test
ljmp
adc
pop
add
out
push
sarl
popa
cs
imul
sub
fldt
or
jne
dec
mov
mov
pop
and
pop
add
repnz
mov
mov
loop
or
mov
inc
test
inc
mov
xchg
cmp
cmc
addb
mov
mov
mov
cld
and
sub
mov
nop
lea
and
push
das
mov
lret
sti
lock
mov
pusha
and
aad
aas
or
mov
das
cltd
xchg
nop
imul
mov
jmp
xchg
daa
fcmovu
mov
daa
and
es
cmp
and
push
shrb
or
ret
test
pop
pushf
loope
std
add
sar
xor
test
fimull
je
neg
push
arpl
test
clc
fwait
roll
or
xchg
dec
icebp
and
aaa
repz
popa
and
add
mov
xchg
jno
jge
sbb
xor
xor
test
mov
mov
jns
xor
or
scas
cltd
rol
leave
rclb
adc
in
les
mov
mov
sub
adc
add
jnp
ret
dec
popa
out
jg
lret
outsb
push
clc
and
call
mov
out
jmp
mov
outsb
mov
jmp
xchg
jecxz
jae
out
sbb
ror
loopne
xor
repz
jnp
rorl
push
shll
jp
cmp
leave
rcrl
xor
int3
sbb
cmp
ljmp
jge
faddl
mov
jne
scas
xchg
aam
lods
fisubs
jae
push
clc
sbb
daa
adc
inc
nop
lcall
inc
rorl
push
jmp
out
loope
jg
inc
ljmp
adc
xor
sub
mov
cli
ss
sahf
and
gs
xor
sti
out
dec
std
clc
js
dec
xor
push
repz
sub
test
sbb
cs
cli
stos
or
or
mov
mov
mov
outsb
jge
mov
insb
fwait
in
mov
sbb
test
sahf
stc
out
cmc
or
int
adc
inc
mov
mov
sub
sahf
nop
das
jne
inc
aas
pusha
mov
scas
add
xor
clc
hlt
mov
inc
push
jbe
hlt
jns
lcall
add
push
and
int
inc
mov
aas
int3
cmp
call
push
in
orb
inc
pop
xchg
pusha
mov
pop
sbb
inc
addr16
pop
jle
mov
mov
mov
cmp
cmp
mov
mov
pop
pop
add
dec
and
or
lret
test
push
push
add
lock
mov
addr16
mov
adc
fucomp
outsb
or
pop
or
lret
xchg
std
adc
subl
push
and
inc
andb
inc
mov
dec
in
or
dec
gs
ss
data16
cs
dec
test
sti
and
mov
fsubr
mov
lret
fs
cli
add
and
test
or
fisttps
jns
aad
loopne
adc
push
test
xorb
xor
sub
push
or
xor
adc
cs
sbbb
aas
jae
dec
fs
jmp
push
pop
lahf
cmp
in
add
negl
lcall
mov
add
pop
aad
push
push
lods
mov
icebp
push
out
lcall
dec
pushf
clc
fs
mov
and
push
mov
lret
pop
mov
lret
pop
and
push
mov
loope,pt
outsb
pop
mov
cmp
roll
mulb
rcr
je
adc
into
add
loope
outsb
push
rolb
loop
rolb
mov
cli
jo
rcr
fnstsw
inc
pop
mov
out
lea
fs
jns
mov
lret
iret
cs
cmp
adc
cmpsb
pop
jp
out
pop
iret
test
mov
test
jge
ds
cli
dec
push
pusha
pop
push
cmp
rorb
bound
cmc
cmp
cmp
aam
test
mov
popa
int3
push
aad
xchg
ret
xchg
mov
mov
adc
mov
and
and
test
xchg
int3
pushf
sub
call
push
lret
jge
xorb
xchg
fldt
mov
mov
aas
sahf
dec
jns
imul
cli
or
pop
sub
sbb
out
adc
adc
mov
jno
sub
fsubl
add
int
pop
icebp
stos
add
jg
push
pop
cmpsb
cmp
in
mov
mov
aad
inc
or
cmpsb
pop
dec
je
pop
mov
push
out
ss
add
adc
out
les
mov
lret
push
xchg
test
dec
stos
inc
pop
push
test
xchg
cmpsb
jl
add
or
sub
cmp
in
push
mov
or
jae
cs
movsl
inc
push
lahf
mov
add
xor
mov
int3
sub
mov
cwtl
dec
sbb
or
out
pop
cmp
cmpsb
dec
jne
push
xor
xor
and
dec
pop
jbe
in
mov
adc
movsb
jge
dec
pop
and
sub
push
rorl
jo
cltd
xchg
push
pop
push
jecxz
aas
push
pop
inc
clc
inc
mov
mov
imul
and
fbstp
cmp
xchg
aam
das
inc
test
psubq
addr16
jb
es
jb
lock
lret
pop
jl
pusha
dec
or
jns
xorl
cmpsb
sub
scas
mov
dec
push
imul
cmpsb
mov
pop
call
stos
iret
push
sub
repz
dec
shll
adc
bound
lods
inc
sub
lea
repz
js
ds
cwtl
stc
mov
push
cmpsb
xchg
sbb
inc
jnp
aad
scas
or
or
push
mov
test
mov
fsubs
add
fnstcw
insb
xor
cmp
cwtl
mov
fmul
jge
addr16
pop
jbe
rorb
push
cmp
cmpsl
xchg
push
cld
mov
sbb
jmp
stc
xor
aam
adc
cmp
mov
push
sub
out
add
mov
aaa
mov
imul
xchg
xlat
mov
sub
cmp
or
push
popa
mov
adc
dec
add
aad
push
inc
jmp
inc
loope
fsubrl
fnstcw
xchg
sbb
fcoms
xchg
xbegin
inc
cltd
cmovne
ficoml
xchg
pop
add
add
cmpsb
inc
in
std
std
out
mov
mov
jecxz
push
hlt
mov
xor
in
inc
xor
jg
push
bound
shrl
sahf
shlb
lods
xchg
cli
bound
fcmovnb
clc
orb
lods
imul
mov
int
and
imul
les
jl
mov
cld
sub
mov
sbb
mov
mov
jecxz
dec
and
movsb
insl
pop
jns
ljmp
fsubrs
xchg
add
mov
in
popa
sti
dec
push
adc
inc
cmc
cmpsb
and
jmp
pop
and
dec
imul
push
sti
xor
jp
enter
std
movsb
sbb
and
jne
aad
pop
xor
mov
push
push
dec
sahf
push
in
pushf
shll
std
cli
push
mulb
jl
inc
or
mov
fiaddl
sbb
in
repz
sahf
test
xor
ja
jl
lahf
push
adc
xor
and
or
idivl
aas
add
pop
fstps
lea
cmpsb
jne
test
sahf
test
add
push
mov
sti
jg
fwait
or
mov
and
test
mov
xchg
and
stc
mov
mov
fdivr
inc
cmpsl
push
cmpsb
lahf
or
sbb
and
gs
stos
clc
mov
push
sbb
sub
xchg
adc
mov
add
mov
mov
lret
int3
xor
xchg
mov
jmp
test
repz
inc
xchg
loopne
adc
cmpsl
sbb
idivb
sub
lods
int
scas
stos
jl
mov
cmc
loope
mov
push
in
inc
faddl
test
pop
fldl
ds
jnp
fbld
leave
push
shrb
and
test
mov
loopne
call
mov
pusha
adc
xchg
jae
add
xchg
dec
mov
mov
cmpsl
add
fisubl
bound
pop
out
leave
mov
ds
xchg
push
test
scas
imul
xchg
dec
mov
repnz
aaa
inc
adc
or
sbbl
jge
fistpl
push
push
mov
aaa
push
mov
fwait
dec
push
fiaddl
hlt
aad
stc
adcb
xor
mov
in
les
rolb
ljmp
adcb
jns
mov
cmpsl
dec
cmp
jmp
xlat
movsb
mov
jmp
cli
std
push
sbb
push
push
sbb
scas
sub
out
adc
mov
fsubr
push
into
int
stos
test
aas
lods
loop
jg
push
dec
out
repz
push
pop
les
lods
xchg
push
sbb
sub
mov
push
nop
aaa
pusha
xchg
or
inc
int3
shlb
xchg
aam
and
pop
cmpsb
jp
or
mov
mov
pop
and
ret
int3
lock
mov
inc
mov
sbb
rcll
dec
push
lret
xor
jnp
mov
out
nop
pusha
es
rorb
add
mov
xorl
sbb
push
ljmp
lock
pusha
frstor
lcall
movsl
cmpsl
push
dec
lcall
cmp
fs
outsl
mov
add
ja
adc
js
pop
lret
loope
mov
fistps
dec
test
pop
sub
ljmp
mov
lahf
rcrb
push
inc
jns
int3
mov
cmp
pop
pop
out
insb
lcall
stos
and
decb
sarb
add
push
mov
or
jns
lret
jl
outsl
daa
loop
je
inc
out
mov
pusha
imul
and
jp
daa
adc
sub
mov
push
bound
xchg
mov
lret
cmp
nop
xor
add
loop
sbb
dec
cwtl
sahf
in
repnz
sbb
mov
lahf
dec
jo
pop
add
mov
pop
xor
push
push
fdivrl
out
mov
shlb
or
dec
push
stos
push
jecxz
adc
bound
pop
sub
pop
sbb
sbb
rcrl
ljmp
mov
scas
xchg
fisubrl
cmp
mov
out
adc
mov
stos
sub
xlat
test
lock
dec
roll
mov
lock
push
cmpsb
dec
cmp
mov
test
pop
popa
mov
adc
sbb
insl
fcomps
mov
dec
push
push
mov
sub
and
adc
popf
fwait
xlat
pusha
fbld
mov
mov
jecxz
xor
cmpsl
xchg
mov
add
mov
jnp
mov
test
int
mov
xchg
push
mov
outsb
mov
pushf
cmc
aaa
mov
pop
pop
mov
ret
stos
cmp
in
decb
in
dec
idivb
popf
cmpl
mov
or
xchg
inc
jns
lock
sbb
stos
gs
mov
into
fiadds
mov
movsb
jnp
cmp
inc
mov
mov
repnz
rolb
popf
scas
jmp
mov
xchg
int3
add
pop
dec
cwtl
ret
adc
and
mov
mov
mov
stc
fstpt
repnz
out
shll
call
ja
and
pushf
gs
fmull
jecxz
push
pushf
xchg
jmp
sub
dec
test
inc
sub
xor
mov
pop
or
add
stos
mov
loop
or
xor
inc
sbb
fisubrl
lahf
sbb
inc
sub
loope
xchg
adc
fisubrs
cmp
int
xchg
xchg
lock
push
das
out
pop
jg
push
inc
jle
into
aam
in
sub
inc
inc
mov
cmp
sbb
mov
push
add
push
daa
imul
cmp
mov
xor
roll
fldt
enter
inc
cmp
push
ljmp
sbb
imul
ds
add
lock
mov
test
xchg
sarl
mov
or
push
cmp
and
jge
repz
jecxz
sarl
mov
or
push
cmp
and
jge
repz
arpl
mov
and
xchg
std
orl
arpl
xor
insb
adc
repz
jecxz
sarl
mov
bnd
leave
xchg
xor
mov
test
push
rolb
lock
les
pop
jecxz
mov
hlt
jo
pusha
xchg
adc
push
rolb
lock
nop
add
xor
and
aam
les
jo
pusha
push
adc
push
rolb
lock
nop
add
xor
and
aam
out
cwtl
add
pusha
xchg
inc
jmp
rcll
or
and
push
popl
mov
inc
mov
or
rclb
rcr
mov
iret
subb
fwait
pop
jmp
add
lret
test
in
inc
and
jo
popa
imul
mov
xor
faddl
adc
mov
and
nop
nop
mov
les
stc
xor
iret
movsb
and
rcrl
fs
xor
and
pop
arpl
or
les
into
xchg
add
es
sbb
mov
popa
idivb
cltd
push
fdivrs
in
movsl
jo
push
mov
xchg
pop
testb
scas
xor
or
out
or
icebp
and
inc
shlb
adc
add
xor
and
aam
les
jo
pusha
xchg
adc
adc
mov
cmpsb
adc
jbe
push
aad
rcl
cmp
sub
push
pushf
push
xchg
jge
jns
mov
inc
xor
or
dec
fbstp
mov
xchg
sub
es
xchg
jg
outsl
fadds
dec
xor
or
mov
mov
hlt
jo
pusha
xchg
adc
push
rolb
lock
nop
add
xor
and
aam
les
jo
pusha
xchg
adc
push
shlb
jmp
push
push
xchg
rcr
mov
sub
adc
cmc
push
shrl
mov
xor
jae
jbe
or
sbb
and
cmpsb
mov
mov
fildl
mov
call
add
je
xor
ret
add
scas
mov
mov
pusha
push
fs
in
cltd
or
scas
sbb
and
loope
out
and
push
out
adc
sub
out
mov
ret
or
mov
idivl
notl
push
bound
push
movsl
jle
ds
add
cli
push
ds
mov
jns
and
inc
cmp
lds
cwtl
and
xchg
inc
inc
mov
sbbl
jae
sbb
and
mov
shll
mov
jmp
mov
outsl
mov
mov
stc
add
fucomp
xor
arpl
xchg
jb
mov
or
jno
inc
clc
sub
and
fmull
mov
fsts
xor
sti
es
and
mov
mov
dec
repnz
inc
jecxz
mov
shlb
lock
or
lret
repnz
jmp
stc
loop
icebp
push
and
out
test
es
sub
mov
lcall
lret
mov
aaa
add
mov
outsb
adc
push
aas
lea
sbb
dec
cli
repz
pop
pop
sbb
push
mov
xor
inc
or
lods
or
in
lcall
push
xchg
pop
cmp
cmp
xor
sarl
mov
push
adc
testb
push
xor
xchg
roll
addr16
daa
rorl
mov
mov
push
pop
mov
pop
or
lret
mov
mov
jle
in
dec
inc
cmp
imul
pop
mov
adc
into
add
stos
mov
out
inc
fsubrl
inc
xor
cmpsb
aam
push
jmp
inc
repz
mov
ds
dec
insb
rcrb
xor
xor
mov
aad
mov
pop
addr16
loope
and
push
pop
idivl
test
push
mulb
mov
and
dec
ficoms
lods
or
xor
imul
jmp
pop
pop
or
ret
call
cmp
inc
lock
inc
negb
lea
xor
adc
push
mov
lret
lret
dec
test
dec
packuswb
inc
test
call
dec
pop
nop
lea
dec
xor
stc
and
sub
xchg
ret
js
scas
inc
sahf
inc
ss
xchg
hlt
shr
mov
lods
insl
hlt
mov
std
push
jno
jb
xchg
jge
add
push
jnp
jo
mov
cmp
in
imul
addr16
test
xchg
test
icebp
test
dec
dec
and
iret
or
addr16
and
fldt
mov
shrl
cmpsb
jmp
jmp
push
lock
lods
sbb
push
jmp
ljmp
ret
jb
xchg
adc
jmp
rcrl
jmp
imul
lods
aad
ret
aas
cmp
cmp
or
loope
movb
inc
icebp
adc
add
sub
adc
outsb
adc
mov
adc
test
xchg
mov
mov
leave
loope
pusha
push
mov
add
mov
test
mov
sub
popf
xchg
fsubr
push
dec
popf
scas
jp
cltd
sbb
jnp
gs
das
lods
jg
pop
addl
push
jp
das
add
stos
out
xchg
or
xchg
jmp
fldenv
sbb
mov
adc
cmovne
mov
inc
fstps
movsl
repz
mov
fucom
jno
push
push
lea
cmp
push
mov
aad
jle
mov
pop
scas
ja
mov
test
ret
rolb
lock
leave
icebp
imul
ret
inc
add
jae
pop
cmc
inc
sbb
stos
mov
roll
mov
pop
shll
fcomps
std
lds
pop
js
pushf
add
shrl
popf
jb
sub
pop
cmova
push
and
les
arpl
or
popa
jmp
and
out
pop
pop
fsubr
dec
dec
sub
outsl
or
or
dec
lahf
popf
imul
adc
xchg
outsl
in
aaa
sub
xchg
imulb
jg
sub
je
std
fwait
jae
mov
push
daa
push
inc
sub
int3
jmp
insl
lods
or
dec
mov
popa
jge
sub
pop
leave
push
pop
dec
test
into
roll
add
push
insl
sbb
and
or
mov
ljmp
ds
ficoms
rolb
shll
andb
pusha
lret
cld
ret
add
test
inc
outsb
imul
cmpsl
mov
rcrb
add
add
jl
add
pop
popa
lea
rcll
lcall
inc
mov
push
leave
cs
inc
loopne
xchg
pusha
nop
mov
lret
in
cmp
cmc
int3
movsl
mov
add
add
mov
xor
outsb
lea
xorl
lcall
cmp
add
fnstsw
or
leave
push
cmp
repz
ljmp
test
in
das
fdivl
sbbl
and
xor
adc
cltd
pusha
or
xor
adc
outsl
negl
call
test
mov
nop
cmpsb
sbb
dec
cli
lret
fs
jns
adc
xchg
push
and
fimull
cmpsl
lahf
xchg
loopne
scas
je
in
in
dec
jmp
inc
pop
aad
imulb
cmp
fucomp
jo
mov
xchg
xor
test
mov
sbb
jnp
imul
sahf
pop
shlb
mov
out
stc
ret
push
xchg
popf
xchg
insb
call
adc
and
loope
push
scas
push
xlat
dec
push
push
popl
inc
lret
jb
shll
ret
mov
mov
insb
and
xlat
pusha
clc
pop
mov
jecxz
mov
mov
xchg
mov
sti
mov
mov
call
in
shl
scas
xchg
ret
sub
vmovdqa
push
gs
pop
dec
cs
xchg
fsubrl
movsb
stc
cmc
or
sub
aaa
mov
leave
mov
xchg
adc
pop
lret
rorl
test
fmuls
fdivl
std
mov
dec
lods
mov
mov
jecxz
inc
dec
xchg
sub
test
lods
xchg
sbb
add
aas
jl
imul
jle
lock
insb
jno
adcb
pop
sahf
and
lock
shr
adc
jo
jle
dec
loope
out
test
xorl
push
pushf
xchg
and
add
or
mov
mov
clc
push
fidivrl
cld
cmpl
mov
cli
imull
sti
sbb
dec
hlt
clc
or
add
test
jne
sbb
cltd
aaa
mov
arpl
lods
sub
mov
adc
leave
test
test
push
ret
iret
jge
cmp
lock
icebp
jg
and
ret
inc
add
or
sarb
dec
add
lcall
pop
xchg
xor
mov
xor
dec
dec
leave
lods
aaa
push
jbe
add
in
cmpsb
hlt
xor
and
and
xor
jne
mov
mov
negb
jle
xchg
xor
icebp
loope
lock
or
mov
fiaddl
or
rclb
cmp
lds
sbb
and
cmpsl
nop
mov
in
sub
pop
fwait
inc
cli
movsl
pop
aad
sbb
cld
test
mov
lods
fucomp
or
push
xchg
ret
or
out
push
and
das
jge
cmpsl
daa
jo,pn
mov
mov
cli
std
fwait
or
xor
cmp
imul
mov
sbb
ficoml
sbb
bnd
fstps
iret
mov
push
repz
xor
mov
cmc
insl
adc
xor
ficoms
stos
sahf
and
dec
lret
push
jae
inc
inc
ja
loop
mov
lea
std
cmp
aas
pop
insb
or
push
pop
xchg
faddl
scas
push
and
sbb
pop
sbb
sbb
mov
mov
sbb
movsb
push
mov
or
andb
cmc
popf
xlat
pop
xchg
adc
xchg
movsb
shrl
pop
xchg
scas
jo
adc
lds
je
pop
jae
add
mov
push
cmpsl
jo
xor
fstpl
jne
test
mov
cmp
sbb
sub
pop
mov
push
imul
sbb
push
lret
mov
inc
jl
fucomi
loope
or
incb
enter
xor
icebp
test
mov
push
lret
outsb
rolb
clc
scas
jg
sub
movsb
inc
cmp
in
lock
shll
pop
sti
call
dec
xchg
ss
sbbb
popa
stc
dec
jmp
shlb
rol
lahf
sarb
ljmp
test
hlt
inc
popa
xorl
inc
and
repz
je
push
mov
sbb
sub
xchg
imul
mov
cmp
int
decb
sbb
push
xorb
adc
jb
cmp
andb
xchg
xchg
nop
shll
push
push
pop
cs
push
incl
jne
mov
jo
xchg
xchg
xor
pop
stos
cmp
push
out
dec
scas
push
jb
mov
adc
xchg
hlt
mov
or
mov
test
sub
in
push
cmp
mov
dec
scas
insl
dec
out
pop
aam
data16
add
leave
mov
incb
fidivrs
add
mov
bound
cmp
push
iret
mov
aaa
inc
xchg
shll
and
xlat
xor
xchg
add
mov
nop
fsubs
fsubrl
sub
mov
or
xchg
outsl
cmpsb
adc
mov
stc
mov
xor
or
andl
dec
icebp
hlt
flds
js
leave
push
xor
dec
mov
arpl
pushf
inc
sahf
jmp
xchg
xor
jnp
adc
jno
sbb
pop
jno
adc
adc
sbb
filds
ja
mov
scas
mov
das
pop
out
mov
stos
dec
inc
push
xchg
and
in
fsts
mov
cmpsb
out
out
push
dec
mov
insb
mov
scas
sbbl
repz
sbb
fmul
jle
inc
cltd
cmp
and
ds
loopne
in
hlt
sbbb
hlt
ja
loope
fadds
xchg
xchg
xor
adc
popa
out
scas
in
pop
insl
repnz
xor
popa
push
pop
aad
and
lea
mov
xor
mov
sbb
es
mov
js
pop
js
scas
adc
bound
mov
lahf
daa
clc
bnd
push
mov
mov
mov
orl
cmpsl
and
dec
sbb
adc
and
sub
add
push
mov
pop
xchg
or
popa
sarb
sbb
scas
lock
lods
aam
aad
sub
pop
shrb
dec
pop
cmpsl
add
or
dec
mov
lahf
ret
insb
fldl
push
push
lcall
dec
pop
lcall
aas
lahf
xchg
jae
stos
mov
daa
notb
mov
jle
arpl
add
sub
sub
xchg
mov
mov
inc
test
inc
dec
xchg
jecxz
nop
mov
add
sub
mov
xor
jb
hlt
pop
js
daa
lret
mov
ja
jne
aas
std
mov
and
mov
popf
cmc
or
or
adc
orl
stos
or
daa
cmpsl
leave
jne
test
test
ds
mov
lahf
mov
xchg
sbb
mov
cmpsl
mov
popa
pop
dec
mov
push
ficomps
and
push
push
fndisi(8087
xchg
ds
jae
loope
ror
lret
mov
daa
loope
fstpt
sbb
cld
cli
ljmp
jmp
clc
aad
jmp
xlat
xor
ficompl
dec
mov
out
stos
mov
push
or
sbb
pop
pop
push
push
xchg
data16
sub
mov
loopne
pop
or
jl
jo
mov
stos
mov
push
psrlw
stos
cltd
push
add
xor
pop
jno
jns
sbb
lock
xchg
in
out
movsb
jl
in
sub
lock
dec
cmp
xchg
jle
int3
sbb
xchg
and
mov
or
movsb
data16
andb
or
ljmp
test
pop
mov
add
mov
xchg
cld
xchg
add
xor
xchg
ljmp
leave
jns
data16
or
sahf
inc
out
push
ljmp
mov
out
jns
cmpl
sbb
and
cmp
inc
stos
sbb
psrad
subb
lcall
dec
or
fstpt
pop
lea
jne
xor
sbb
dec
fs
fsts
adc
cmp
out
jmp
push
jne
stos
pop
je
leave
fidivl
push
sbb
mov
cs
aaa
pop
insb
int3
adc
push
fiaddl
mov
rol
mov
cmc
ljmp
rcrl
jae
mov
inc
test
ja
mov
add
cld
ljmp
rorl
jl
test
mov
rcl
cmpsl
add
aaa
adc
mov
shll
hlt
xor
sbb
cmpl
add
popa
ret
sbb
leave
call
aas
and
and
and
push
imul
jp
call
jo
ljmp
insl
aaa
sbb
add
rcll
loop
cmp
iret
pop
or
fisubl
int
loop
mov
and
lods
mov
inc
test
mov
or
mov
popf
pusha
pop
xchg
test
shlb
loopne
dec
and
mov
hlt
cmp
mov
inc
js
push
cmp
cmp
xor
mov
dec
loope
test
xchg
cld
mov
loope
push
jno
pop
imul
lock
xor
cmp
xchg
stos
jo
pop
popa
imul
mov
data16
popf
mov
addb
jae
xor
pushf
dec
push
mov
xor
ds
or
pushf
cmp
push
pop
sub
jecxz
cs
cmp
out
scas
xchg
idivb
push
and
pusha
xlat
mov
addb
push
and
out
push
add
cwtl
jl
push
inc
cwtl
mov
adc
test
not
or
mov
in
pop
xor
adc
push
push
gs
add
xor
mov
cwtl
add
or
les
push
je
incb
daa
pushf
js
mov
out
dec
sti
notb
sub
pop
scas
rolb
test
inc
fmull
mov
popa
mov
int3
mov
jno
xor
cmpsl
cmc
stos
loop
int
hlt
aas
pop
subl
cmp
sbb
repz
gs
outsb
mov
add
test
jno
enter
sub
ljmp
jo
lcall
test
push
call
iret
mov
pop
sahf
xchg
sub
pop
xor
xlat
repz
fcompl
pop
jle
daa
mov
out
mov
fstpl
imul
adc
dec
das
pop
sub
pop
js
cli
push
push
jne
je
mov
arpl
loope
sbb
xchg
push
clc
rclb
mov
shr
js
pop
orl
mov
pop
shll
ficoms
lahf
push
scas
xor
pop
cmpsl
shrb
stos
icebp
jmp
mov
sbb
mov
test
lret
imul
mov
mov
lods
add
orb
stos
test
add
mov
cld
in
mov
inc
lahf
mov
cmp
in
cmp
mov
adc
add
lcall
push
outsb
fsubs
out
mov
mov
shl
das
outsl
loop
jp
cli
mov
dec
rcrb
jecxz
add
clc
and
sti
test
mov
fstpt
lahf
out
cmp
aas
imul
jle
sbb
clc
stos
jns
fs
inc
inc
jne
mov
xor
cmpsb
add
pop
add
sub
gs
push
int
fdivs
leave
push
sbb
sqrtps
cmpsl
aas
and
repz
scas
in
imul
inc
test
into
xchg
data16
or
lahf
movsb
jbe
rorb
pop
or
xor
push
push
mov
jle
or
clc
fidivrs
fimuls
jl
test
rcrl
xchg
mov
mov
pusha
xchg
and
adc
fisttps
fstpl
mov
mov
es
jns
aaa
test
mov
pop
leave
or
sahf
xchg
dec
clc
jb
sbb
ficompl
stos
and
jae
ljmp
push
js
add
mov
xorl
or
aas
fstps
sub
je
rclb
mov
mov
xor
xlat
sbb
ret
ficoml
pop
nop
xchg
sti
mov
das
push
dec
insb
sub
fldt
jp
pusha
fsubs
add
and
icebp
cmp
push
xlat
xchg
push
add
in
std
fnstcw
xor
outsb
adc
xor
add
ficompl
jbe
insb
jl
xchg
mov
std
or
add
jns
shll
pop
xchg
loopne
mov
cmpsb
xchg
adc
adc
mov
sub
cli
movsb
ror
dec
stos
pop
inc
lret
pop
out
xchg
dec
fldl
mov
pushl
test
int3
test
inc
xchg
cwtl
insl
lods
lds
cmpsl
inc
popf
popl
fsubrp
sbb
sbb
adc
mov
test
stos
sbb
loope
repz
les
xchg
mov
cmp
lahf
lahf
movsb
pop
mov
std
fcompl
or
pop
lods
ret
addr16
mov
mov
sub
jb
cmp
inc
int
fsubp
bound
out
hlt
mov
cmpsb
mov
addr16
add
mov
jmp
dec
shr
jge
mov
out
mov
mov
jbe
int
ljmp
ljmp
xchg
insb
jecxz
add
cmp
inc
test
sub
jge
mov
cltd
mov
addr16
adc
out
arpl
aam
scas
outsb
add
sbb
jns
mov
dec
shrl
add
add
lret
out
stos
add
insb
out
push
mov
push
and
and
jmp
xorb
fnstsw
sbb
pop
mov
test
cli
cmp
sbb
inc
lea
hlt
ffree
out
or
testb
mov
andb
cmp
popf
add
sub
andb
or
sbb
sub
jg
and
xchg
lahf
mov
cmp
fsubrl
cmpsl
sbb
mov
lret
mov
sub
push
mov
dec
repz
dec
stos
pushf
cmp
int
mov
aaa
in
out
leave
xchg
inc
orb
in
dec
enter
push
scas
mov
push
xchg
stc
fstl
xchg
daa
loope
pop
arpl
nop
insb
pop
dec
notl
sub
mov
insb
out
mov
inc
or
mov
sub
ljmp
lods
mov
sarl
adcb
mov
hlt
fcmovne
lret
scas
mov
inc
add
xor
clc
mov
jns
jae
aad
insl
test
in
cltd
xor
mov
push
sbbb
dec
jns
xchg
into
test
jle
xor
push
jg
push
jb
cmp
and
adc
pop
testl
pop
pop
pop
mov
sub
dec
pop
cmp
lods
and
and
stos
inc
mov
fidivrs
scas
mov
test
jl
lock
addps
push
add
ljmp
stc
xchg
ds
loope
inc
daa
xchg
lret
insl
pop
dec
inc
aaa
push
mov
inc
ja
js
or
mov
arpl
push
inc
insl
and
push
push
lea
hlt
sub
mov
cld
movsb
movsb
mov
sarl
adc
sbb
adc
lahf
add
sub
arpl
and
inc
sbb
push
lea
shrd
mov
sub
fcomps
sub
or
mov
mov
fisttpll
sbb
jns
inc
bound
addr16
es
es
negb
cmp
lret
fcoml
adc
lahf
and
sub
xchg
js
and
movsl
xchg
add
sub
mov
cli
dec
cs
icebp
jb
movsl
cwtl
out
dec
test
cmp
push
daa
lock
and
int
test
pop
xchg
dec
movb
mov
dec
inc
jno
cmp
popf
in
ljmp
dec
mov
pop
or
aad
add
cmp
jg
ss
lcall
ret
shlb
loopne
nop
add
xor
and
aam
les
jo
pusha
xchg
adc
push
rolb
lock
nop
add
xor
and
aam
les
jo
pusha
xchg
adc
push
aam
shl
fs
nop
add
xor
movsb
mov
hlt
jo
pusha
xchg
adc
push
rolb
lock
nop
add
xor
and
aam
ljmp
hlt
inc
iret
aam
push
dec
inc
pop
jo
pusha
jp
inc
jo
push
or
rolb
cli
nop
mov
mov
jo
pusha
jp
or
sbb
sub
inc
ror
rcr
ljmp
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
sbbl
int
into
leave
sbb
inc
adc
add
jp
sub
pop
mov
sub
scas
cmp
mov
sbb
nop
mov
sbb
rolb
or
es
gs
outsl
mov
jmp
dec
lret
push
mov
add
lcall
stos
push
btr
lcall
inc
jle
inc
loope
adc
dec
shlb
sbb
call
mov
sbb
pop
imull
inc
and
shlb
sbb
stos
mov
scas
iret
js
aaa
jp
cmp
or
ror
and
mov
adc
leave
mov
enter
inc
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
lock
mov
mov
sbb
outsl
dec
jae
insb
popa
outsb
xchg
mov
fistl
leave
jmp
hlt
push
das
xor
and
add
push
xor
pop
mov
ret
mov
aam
ret
aad
push
and
sbb
popa
pop
adc
sbb
sub
cmp
lret
lock
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
lock
mov
mov
xor
xchg
jle
cmc
mov
mov
bound
xor
jno
cmp
hlt
pop
lea
loop
loop
fwait
add
xchg
test
mov
stos
mov
xchg
fists
insb
in
leave
add
lock
scas
das
or
pop
mov
hlt
out
xchg
rolb
xor
iret
dec
lods
movsb
adc
sahf
cmpsb
xchg
pop
dec
testb
mov
cmp
repz
mov
jno
push
test
hlt
xor
push
sub
in
pop
xlat
in
shl
mov
cmp
xchg
fwait
popa
push
lea
clc
adc
rclb
sub
sub
cmpsb
fs
and
mov
popf
scas
jo
mov
loope
mov
xchg
jg
pushf
mov
pusha
jnp
inc
xchg
sti
mov
sahf
ja
shll
jae
ss
aas
mov
jg
inc
xchg
push
push
cli
loope
cmp
repz
push
out
xchg
into
test
xchg
fstps
add
outsb
jne
adc
push
sbbb
shll
fisubrl
adc
xor
or
nopl
pop
sub
cmc
xor
sbb
jo
mov
add
jp
mov
jae
lret
aaa
lahf
xrelease
ljmp
in
stos
mov
out
ja
xchg
xor
aad
mull
cmp
or
mov
cmp
mov
test
in
cmp
pop
leave
jo
roll
xchg
sub
inc
decb
dec
mov
xchg
inc
imul
xchg
repz
push
pop
cmpsb
and
test
into
ror
lea
jp
cmpsl
outsl
push
call
div
cwtl
loop
mov
pop
push
and
lock
sub
int
popf
add
lahf
adc
jecxz
nop
call
call
and
push
mov
xchg
pop
je
movl
inc
ja
jecxz
test
rolb
mov
cmp
movsb
leave
add
fcmovu
jge
xchg
inc
gs
sahf
out
push
cmpsl
icebp
dec
cmp
fnstsw
mov
nop
fldt
jb
popa
dec
pop
gs
inc
adc
push
inc
xlat
lret
mov
ret
imul
mov
mov
xchg
jg
fimuls
ficoms
divb
lret
adc
aam
ret
aad
repz
and
mov
mov
cli
mov
jno
or
sbb
mov
xchg
push
push
or
mov
xlat
or
incb
rcr
or
loope
icebp
jbe
jbe
out
jge
jmp
fwait
xor
idiv
outsl
lds
fnsave
sub
icebp
and
dec
cs
inc
xchg
or
insl
and
xor
inc
mov
jo
fadd
movsb
cmpsb
lock
incb
pop
into
mov
in
clc
push
sub
adc
ret
or
dec
sub
push
out
cmp
cmp
jl
push
and
mov
scas
sarb
inc
sub
lret
cmp
xchg
scas
jmp
cmp
in
popf
movsl
mov
dec
insl
add
outsb
ja
fwait
mov
jecxz
sub
mov
and
pusha
push
out
jecxz
or
les
mov
aaa
imul
loope
or
push
movsl
mov
rclb
dec
mov
insb
popa
push
mov
mov
outsl
cmp
in
add
xor
outsl
leave
int
or
out
lea
push
into
leave
mov
cmpsl
and
test
outsb
pusha
and
lea
or
adc
movsl
insb
lds
or
mov
imul
sub
pop
jmp
add
and
and
sbb
pop
subb
add
dec
fnsave
fwait
lock
jne
aam
inc
jp
sub
xlat
incb
pusha
inc
fnstsw
mull
les
fcomps
test
add
jne
ret
xor
mov
arpl
dec
and
cmp
adc
push
into
pop
jecxz
jecxz
lods
sbb
jne
sub
ljmp
fidivrl
dec
inc
call
push
aam
mov
or
and
xor
out
jo
int
hlt
sbb
adc
repnz
add
push
mov
in
jne
lret
psubb
or
dec
out
hlt
shrl
push
mov
mov
or
dec
loope
push
gs
inc
or
arpl
shrl
clc
and
rorl
sbb
sbb
pop
push
loop
jb
and
jmp
mov
insl
repnz
stos
jge
pusha
or
ret
pushf
push
ds
xchg
hlt
push
or
add
lgs
or
lret
mov
push
or
pop
cmpsb
xor
xchg
loope
cwtl
jg
out
xchg
sub
in
dec
adc
jle
pop
sbb
ds
out
cmp
sbb
sahf
xchg
ret
sbb
cmpxchg
in
insl
mov
sti
inc
fmull
dec
or
lods
and
xchg
push
mov
cmpsb
pusha
bound
ficompl
xchg
dec
stos
fsubs
mov
scas
mov
sbb
pop
mov
jne
push
mov
aaa
cwtl
mov
repnz
cmpb
mov
lret
lods
lea
pop
fsubr
mov
test
lea
jle
mov
shll
or
shll
and
lea
xchg
outsl
jle
ret
push
mov
fisttpll
cmpsb
and
out
inc
mov
or
inc
cmpsl
pushf
cmpsl
jp
sub
sub
cmpsb
into
lods
xchg
or
sub
xchg
cmp
or
jl
testb
lahf
shll
fldenv
push
mov
jbe
repz
xchg
inc
repz
mov
lret
insl
add
xchg
inc
hlt
addb
js
sub
jle
movsb
outsb
add
or
mov
mov
popf
daa
add
sbb
test
mov
movsb
insb
sbb
lock
std
inc
push
test
inc
fistpl
fmul
dec
mov
adc
xlat
sub
sub
adc
mov
fldl
ret
clc
xor
in
ljmp
jg
shrl
adc
mov
lret
xchg
mov
loop
imul
jp
out
jnp
int
test
push
push
adcl
mov
lret
fisubrs
jge
sbb
hlt
je
xor
in
std
push
pop
xchg
mov
popf
bound
ret
sub
lods
xlat
ss
cmp
mov
call
dec
mov
iret
fiaddl
in
mov
aad
xchg
xor
mov
sub
mov
mov
lahf
test
cs
sub
sbb
inc
or
retw
in
fadds
pop
sub
mov
and
popf
movsb
mov
ss
or
dec
mov
movsb
lret
adc
bound
ljmp
or
stc
or
enter
movsl
pusha
cmp
repnz
jbe
jo
call
xor
jnp
sbb
mov
sub
cmpsb
loope
mov
mov
cmpsb
lret
repnz
sarb
repnz
jp
inc
or
mov
imul
lret
mov
mov
inc
pop
and
fcomps
lret
cltd
push
dec
ss
testl
push
mov
xchg
inc
and
cmpsb
pop
push
ljmp
xor
or
xor
mov
add
cmpsl
and
mov
adc
push
mov
xor
dec
sbb
mov
inc
add
lret
jecxz
xchg
sahf
sarl
cmc
add
das
ret
je
sbb
fiadds
jb,pt
testl
or
leave
and
fistl
and
cmp
xchg
out
lret
jae
dec
mov
rolb
fcmovnb
dec
mov
push
popa
int3
jno
in
addr16
loope
mov
hlt
mov
ss
leave
mov
negl
adc
nop
pop
push
add
adc
enter
sbb
dec
push
stc
dec
pop
cmp
aad
mov
cmpl
icebp
mov
shl
cmp
lds
ss
lcall
xor
movsb
inc
mov
cmp
dec
or
inc
adc
iret
mov
inc
pop
fwait
enter
stos
push
mov
push
jg
dec
ret
mov
push
mov
mov
push
pop
out
mov
out
mov
mov
pop
pop
dec
pop
jnp
sbb
adc
ficoml
pop
lret
mov
je
push
sub
mov
inc
hlt
pop
jae
adc
dec
and
ss
mov
jne
aad
xor
test
loopne
dec
ds
jbe
into
cli
repnz
cmc
int3
push
aas
js
mov
mov
incl
push
xor
sbb
cmpsl
push
mov
jle
in
and
lods
aaa
push
scas
fdivrl
and
cmpsb
adcl
xchg
push
call
pop
mov
rorl
cmp
fnstenv
inc
fadd
out
mov
inc
push
mul
loop
mov
push
stos
xchg
sub
xor
push
pop
mov
pop
stos
dec
mov
xor
loop
inc
cmp
ds
sti
icebp
add
push
lods
ja
icebp
push
mov
push
pusha
lods
push
push
xor
push
lea
scas
insl
ds
sbb
aad
cmp
hlt
in
jecxz
mov
dec
mov
jnp
or
ss
mov
add
inc
push
scas
int3
int
sbbl
ds
out
iret
pop
shlb
out
or
mov
mov
pusha
testl
mov
fidivrs
push
jae
fistl
sub
in
lret
enter
gs
iretw
testl
adc
and
mov
mov
aas
aad
xor
add
bswap
or
xor
popa
or
pop
fstps
inc
add
lds
bound
or
lock
jecxz
std
repz
sbb
in
mov
scas
pop
sub
cli
push
jg
jbe
or
push
jne
negb
hlt
in
sbb
jae
fucomip
mov
bound
les
mov
mov
sbb
push
and
push
shrl
imul
cld
out
in
and
fs
std
iret
pop
mov
mov
xor
stos
mov
cltd
mov
push
out
scas
push
jo
and
mov
xchg
mov
cmp
pusha
ret
test
cmpsl
stos
xchg
repnz
jge
dec
push
pop
jb
jnp
add
adc
aas
in
mov
and
mov
inc
mov
and
mov
fsubs
push
pop
mov
popfw
lds
mov
repz
pop
inc
lcall
and
mov
loop
loopne
lock
or
xor
sarl
dec
cmp
fs
mov
into
outsb
cmpl
clc
inc
cmpsb
mov
lcall
xchg
pop
mov
sti
fsubs
push
loop
scas
popf
es
mov
xor
icebp
sbb
mov
jb
add
sbb
pop
pusha
outsl
fisubl
pushf
lret
mov
xor
and
in
inc
aas
sub
test
cmpsl
jg
loopne
dec
dec
sbb
mov
xchg
lods
call
adc
lahf
inc
dec
pushf
jge
lcall
pop
test
int
clc
pop
mov
push
lret
lock
loopne
cmp
shl
or
movsl
add
clc
lret
lahf
sub
sub
mov
sbb
sahf
and
pushf
cmp
pop
adc
scas
jmp
sub
push
dec
jp
mov
test
mov
out
push
aam
ds
mov
es
outsl
sahf
mov
cmpb
cld
pusha
lock
jne
sub
push
mov
in
aad
push
imulb
divl
cmpsl
fcoms
sti
cmp
mov
outsl
stos
jp
push
adc
inc
pop
dec
dec
mov
push
jae
xor
xchg
xlat
in
arpl
fwait
jb
jle
jbe
daa
xchg
and
les
cmp
fimull
cs
xchg
jecxz
movsb
lret
inc
dec
add
lret
dec
addr16
js
pop
pop
iret
aam
in
pop
dec
loop
rcr
mov
mov
mov
sahf
push
sbb
mov
repnz
adc
xor
sti
push
mov
scas
push
add
cmpsl
add
sbb
dec
inc
aam
push
fucomip
mov
dec
bnd
mov
push
fidivl
std
adc
mov
inc
aaa
and
repnz
icebp
std
inc
not
imul
and
jecxz
jmp
aad
rcr
rcl
mov
jo
sub
xor
orl
and
pop
enter
int3
out
xlat
test
cmp
xchg
fs
xchg
jo
jmp
not
icebp
test
xchg
mov
lahf
push
sub
lods
fstl
sbb
insb
ja
push
into
imul
outsb
jne
cmp
push
dec
int3
inc
push
movsl
sahf
adc
mov
mov
mov
je
xchg
into
imul
lds
xor
push
cmp
push
jne
mov
stos
imul
xchg
sub
and
dec
jnp
mov
movsb
insl
cmpsb
jl
pop
dec
test
xor
sbb
pop
int
cwtl
dec
cmp
repz
faddl
push
cmp
adcb
xor
jb
push
rep
mov
push
ss
jp
adc
cmp
add
clc
outsb
movsb
lods
add
mov
cmpb
cmp
mov
cs
out
adc
push
push
push
sahf
or
xchg
cmpsl
xchg
push
fildll
les
mov
mov
aas
cmpsb
push
adc
mov
insl
jecxz
aaa
fistpl
or
sahf
mov
pop
pop
mov
int
sub
jl
xchg
mov
fldcw
push
ret
xor
ljmp
sub
dec
sub
ds
pop
fidivs
es
rorb
insl
mov
mov
shll
divl
stos
xchg
gs
jmp
xor
push
bound
sbb
and
fld
pop
sub
int3
in
das
aas
mov
test
mov
mov
enter
repz
cmp
rcrl
push
js
andl
jmp
cld
mov
mov
dec
lods
out
adc
shrl
shll
sahf
imul
mov
jae
push
fimuls
sbb
inc
mov
xchg
lods
and
dec
inc
xor
std
pop
push
js
call
cmpsl
dec
ret
fistps
or
or
fnsave
pop
and
mov
filds
test
jp
mov
cmp
arpl
stos
xchg
jbe
loope
sub
out
int3
add
mov
sub
daa
dec
and
test
fiadds
lahf
sbb
mov
ret
push
xor
pop
mov
xlat
test
in
inc
popf
test
mov
mov
push
push
out
fmulp
inc
push
jmp
mov
inc
rcrb
rcl
xor
mov
xchg
xor
mov
scas
subl
enter
dec
stos
popf
sub
repnz
cmp
imul
mov
add
scas
xchg
addb
adc
loop
xchg
psrlw
jp
notb
mov
adcb
push
fnstenv
jae
lahf
xchg
stos
xor
lock
jno
jge
aam
subl
shrl
adc
mov
adc
in
cs
aad
lods
lret
push
rcrb
les
js
inc
mov
add
lea
fimuls
in
fimuls
std
or
sub
hlt
movsl
cltd
nop
aas
sub
or
jbe
sbb
rcr
addb
adc
inc
sub
pop
leave
dec
and
insb
gs
ret
into
call
sti
ror
cmp
add
mov
push
scas
cli
xor
lret
add
int3
lea
pop
or
and
sub
inc
and
repnz
xchg
jmp
dec
std
hlt
sbb
mov
mov
push
sbb
cli
sub
or
inc
cli
bound
test
xor
adc
xchg
inc
mov
mov
cmp
cmp
les
aam
jmp
mov
cmp
xor
mov
nop
jl
cld
repz
add
jbe
xchg
into
cli
fsub
or
and
mov
in
jle
out
mov
stos
xor
xor
inc
fcom
test
imul
sub
repnz
mov
mov
inc
scas
or
cmp
dec
cmp
test
xchg
pop
adc
insl
nop
cmpsb
test
jmp
push
mov
inc
mov
pop
outsb
and
and
mov
mov
cmp
sbb
xor
lcall
add
outsb
jecxz
call
jl
imul
mov
lea
jno
cld
add
add
mov
add
insb
lcall
jmp
mov
mov
sti
orb
sub
mov
gs
in
xchg
icebp
int
test
adc
inc
aas
and
fmul
nop
mov
sbb
data16
pushl
mov
cmpsb
and
mov
jbe
add
sub
or
adc
mov
addl
sarl
lods
cltd
fimull
ret
outsl
fsubs
loopne
fs
mov
leave
scas
mov
and
out
jge
pop
sbb
call
dec
cmp
out
faddl
int
inc
out
flds
loopne
popa
dec
mov
rcl
sbb
pop
lea
rcrb
jmp
test
and
mov
repz
cmp
xor
or
mov
loop
sub
adc
xchg
stos
sbb
mov
mov
cltd
sarb
mov
add
adc
xor
int3
pop
xchg
std
and
mov
xor
pusha
jp
fcompl
mov
cmp
xchg
cli
cltd
jae
stc
repz
xor
aaa
add
sbb
xchg
sub
and
mov
sub
push
and
push
dec
xor
sbbl
popf
or
or
rcrb
xchg
push
cmp
mov
cmp
fsubl
mov
xchg
leave
nop
repnz
jl
xchg
lods
in
mov
rcl
lcall
mov
pop
outsl
pop
jle
jl
lcall
push
arpl
adc
push
pop
mov
xchg
jae
ljmp
out
inc
stc
mov
sub
jle
sub
push
pop
mov
in
dec
mov
gs
lcall
je
mov
xor
les
lds
ljmp
aaa
lea
das
dec
inc
dec
and
sarl
add
loopne
or
std
lcall
push
adc
into
adc
je
jbe
mov
pop
push
ja
decb
sti
popf
sbb
subl
pop
mov
mov
xchg
mov
xor
mov
or
cmp
pop
adc
mov
mov
push
cs
fwait
in
cmpsl
je
imul
cmc
xchg
jmp
and
and
test
bound
scas
or
ret
ljmp
int3
pop
out
stos
je
fcmovnu
mov
sub
mov
xor
push
jecxz
cmovbe
push
xor
xchg
mov
loop
stc
push
sti
cwtl
pop
in
movsb
add
pusha
xchg
jno
movsb
push
icebp
test
inc
or
cmp
sbb
inc
sbb
jmp
add
rclb
aad
movsl
aam
lock
dec
add
int
adc
in
xor
mov
sbb
xlat
hlt
roll
xchg
mov
push
mov
inc
sub
sti
jl
pop
ficomps
fs
in
cmp
push
test
arpl
in
scas
mov
aaa
mov
lcall
mov
dec
in
loop,pn
arpl
faddl
jge
pusha
mov
lret
cmp
test
xchg
hlt
aam
repz
mull
inc
sbb
out
imul
sub
lock
pop
mov
xchg
sub
pop
sub
sub
push
imull
enter
in
fildll
xor
call
jmp
sarl
cmpsl
cmp
mov
pop
jp
scas
neg
jge
scas
adc
icebp
lock
add
pop
shll
push
adc
call
loope
mov
pop
das
adc
jge
xor
pushl
dec
mov
icebp
jno
add
stc
popa
jge
mov
xchg
es
mov
push
jp
or
sbb
sub
cmp
lret
lock
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
lock
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
lock
mov
mov
pop
jo
pusha
jp
or
sbb
sub
cmp
lret
pop
ljmp
dec
push
pop
inc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
sub
lds
push
adc
arpl
dec
cli
inc
movsl
mov
dec
cli
gs
and
dec
lds
push
sbb
sub
aam
ljmp
xor
lret
in
lods
cld
or
mov
pushf
add
imul
fldenv
sbbl
fs
jno
xor
iret
cmp
leave
fwait
jle
mov
sbb
cmc
jnp
aas
scas
sub
add
nop
sbb
xor
pop
inc
jp
ljmp
rcll
lcall
loopne
add
cmc
and
pop
cmc
aas
aad
mov
inc
cmp
sub
add
adc
cli
scas
mov
mov
test
stos
add
jle
bound
xor
imul
fcmovu
fimull
test
iret
cs
scas
repnz
push
xor
pusha
ljmp
lret
imul
push
lcall
xchg
dec
test
lods
xchg
mov
and
cli
or
into
inc
sub
add
je
jg
sub
dec
enter
cmp
repz
push
into
xor
ret
test
mov
rcrl
loop
mov
add
push
pop
jmp
sub
nop
pop
stc
or
ficoml
inc
cli
jne
gs
and
jp
push
sbb
sub
cli
jne
gs
and
rcl
xor
loopne
or
cltd
ret
jnp
xor
sub
sbb
das
jbe
push
cmpsb
dec
jecxz
xchg
popf
sbb
cmpl
test
loope
sub
daa
mov
or
stos
mov
imul
nop
push
fwait
jno
enter
sbb
sbb
ja
cmpsl
in
cmp
pop
icebp
push
imul
test
jl
cmc
lahf
mov
and
push
adc
aaa
aas
jb
test
cltd
loop
cmp
ficoml
nop
sti
sbb
int
adc
mov
ja
adc
or
inc
or
fists
cmp
adc
add
mov
mov
xchg
pop
ret
xchg
mov
sub
into
dec
cmpsb
call
imul
adc
outsb
mov
adc
adc
cwtl
push
pushw
dec
mov
xchg
and
icebp
jb
sbb
sub
mov
int3
iret
outsl
test
lahf
pop
lret
add
iret
sub
lret
test
sbb
sub
jne
cmp
cmp
sbb
movsb
mov
test
in
cld
cmp
cmc
lods
aas
cltd
mov
pop
xor
dec
dec
mov
jl
push
cmp
inc
mov
lcall
xor
jg
jge
in
cltd
mov
jle
out
cmp
or
mov
in
push
in
outsb
arpl
out
sub
loope
xchg
daa
lods
addr16
test
add
mov
call
adc
cli
stc
cmc
jne
fisubs
xchg
repz
cmp
mov
stos
xchg
jl
or
and
adc
clc
sbb
dec
adcl
lods
dec
ss
xchg
fs
loop
fnstcw
enter
cmp
xor
mov
fldenv
incb
mov
jecxz
es
xor
loop
push
or
jmp
sti
cltd
dec
cmp
mov
and
push
jmp
jbe
test
out
add
or
leave
cwtl
mov
push
lock
pusha
add
fistpl
mov
cmp
std
xchg
sbb
cmpsl
inc
xor
mov
adc
xchg
insl
or
inc
cli
test
ret
mov
lods
in
jle
ficoml
mov
push
or
and
push
cmpsl
in
jmp
lret
lods
xor
pop
loope
das
jnp
jmp
adc
cmpsb
aam
xor
sub
cli
dec
or
cmpsb
sub
fwait
dec
rorl
nop
jmp
pop
mov
and
sahf
jl
leave
imul
or
ror
lahf
repnz
test
dec
into
lds
inc
xchg
fiaddl
adc
xchg
pusha
ret
inc
dec
mov
cli
inc
ret
and
fsubrl
mov
fisubrl
fs
xchg
mov
mov
popa
push
test
dec
in
sub
test
mov
sbb
pop
cmp
pop
stc
jle
std
shll
pusha
clc
lahf
or
data16
mov
mov
dec
or
lret
xchg
jge
jno
rcrb
repz
movsb
es
ret
lret
cwtl
sub
or
test
and
jp
dec
xor
xor
mov
lds
jnp
and
icebp
shl
mov
neg
loope
mov
dec
es
sub
mov
lret
or
mov
test
lds
inc
sbb
mov
imulb
jmp
push
xchg
cld
subl
lret
outsb
mov
dec
and
lret
add
add
push
mov
lcall
pop
outsb
lods
xor
lahf
push
adc
fidivrl
mov
sahf
pusha
ss
dec
sarb
mov
sbb
hlt
out
dec
xchg
ds
pop
push
mov
cmp
mov
mov
push
lahf
outsl
xchg
sbb
mov
into
dec
sbbb
lock
mov
push
lock
repz
or
jmp
cmp
xchg
xchg
inc
lcall
pop
dec
imul
jno
lods
in
inc
mov
ret
clc
cmc
mov
fdivs
in
adcb
lea
xlat
ss
es
roll
sub
lahf
push
call
dec
lret
jge
fstps
xor
fdivs
mov
xchg
lods
mov
cmpsl
xor
mov
xchg
inc
xchg
sub
xchg
xchg
xchg
sub
add
xchg
mov
test
add
cmp
lock
aaa
push
add
imul
cmp
cwtl
aad
xlat
ror
and
inc
adc
adc
xchg
dec
bound
mov
pop
cmp
movsl
and
sarb
dec
cmc
enter
push
enter
or
mov
cmp
push
stos
das
mov
and
jge
insl
icebp
imul
pop
hlt
arpl
xchg
mov
lret
aam
mov
int
cmp
xor
decb
mov
adc
stc
push
jb
dec
sti
inc
imul
and
xor
les
jle
pushf
aas
sahf
push
daa
add
lods
xor
pop
mov
lcall
jnp
cld
push
add
mov
adc
xchg
dec
cld
xorl
cmp
icebp
test
fcmovne
add
iret
sbb
xor
jno
xor
cmpsb
aam
push
jge
mov
jmp
or
sahf
fadds
and
movl
cs
test
cmpl
fdivs
shlb
popa
mov
xor
sbb
mov
cmpsb
cwtl
inc
lods
psubsw
sbb
pop
push
cmp
rcrb
loope
or
fdivp
sti
cmpsl
add
fadds
call
push
or
mov
add
test
popf
jge
jge
js
adc
out
stos
push
push
insl
push
xchg
jmp
rolb
mov
repz
inc
lcall
lock
fwait
sub
sahf
sbb
sti
in
lock
out
dec
data16
xchg
sub
mov
sbb
mov
addb
insl
sbb
nop
pop
iret
xor
jl
cmc
jl
ret
jne
sbb
push
mov
sahf
sbb
lea
gs
inc
jne
push
es
sub
fidivl
out
shlb
pushl
cmp
push
out
insb
les
jl
jge
daa
icebp
icebp
pushf
lods
mov
jmp
iret
sub
adc
sbb
daa
xchg
fistpll
bound
test
scas
shr
dec
ss
sbb
mov
ja
inc
fcmovnbe
cmovle
inc
popf
out
popf
fcomip
test
leave
stc
sbb
sub
dec
mov
lods
sarl
dec
ljmp
dec
outsb
sarl
ret
mov
iret
push
arpl
inc
dec
testl
fdivs
lds
je
mov
cmpb
mov
ljmp
fstpl
push
es
adc
push
and
mov
fs
xchg
mov
cmc
sbb
hlt
pop
sbb
inc
in
jl
int3
testb
outsl
lea
mov
and
movsl
adc
and
shlb
cwtl
sub
imul
sbb
arpl
inc
cmpsl
jb
insl
in
mov
push
or
mov
negb
push
dec
test
or
push
insb
xchg
pusha
pop
xchg
and
in
mov
ret
lock
push
int
and
sbb
insl
adc
fwait
mov
or
ret
pushf
popf
movsb
jbe
and
xchg
or
dec
or
pusha
fisttpll
mov
jo
jb
and
mov
cmp
jne
sub
shlb
and
mov
outsb
xchg
lods
mov
arpl
lock
mov
lahf
repz
loop
test
out
cs
in
aam
and
xor
push
cmp
ja
cld
ja
shl
or
or
in
imul
je
pop
lahf
sbb
add
cmp
mov
lret
das
pop
mov
push
insl
cmp
inc
data16
lods
leave
pop
adc
mov
outsl
pop
inc
xchg
cmp
addr16
push
adc
mov
cld
scas
mov
icebp
mov
xchg
test
test
mov
inc
testb
mov
push
mov
out
jge
std
lret
pop
nop
cmp
ret
or
cmp
aam
jp
jae
mov
xchg
lcall
out
jmp
lret
lds
sahf
pop
mov
imul
and
lret
subb
sahf
lcall
fs
out
lods
jno
stos
mov
out
nop
les
mov
andl
fdecstp
in
mov
mov
adc
insb
push
sar
jg
js
xor
cmp
jle
in
xchg
inc
lahf
jecxz
mov
shl
leave
shrl
xor
out
test
jnp
mov
adc
jmp
lcall
lds
adc
add
ljmp
xor
cmp
or
push
mov
lods
sbb
sub
add
in
pop
sub
pop
adc
je
inc
call
leave
xchg
stc
test
fists
out
fisubrs
xchg
aas
aas
subb
jecxz
xchg
ret
stos
dec
in
pushf
arpl
js
es
pop
mov
negl
xor
cmp
in
xchg
jb
mov
cmp
pop
push
daa
sbb
jl
stc
inc
and
or
and
bound
inc
cmp
or
pop
jg
push
shrb
lcall
repnz
ret
dec
jp
xor
test
xor
out
sbb
mov
jnp
ss
inc
lret
mov
ljmp
dec
or
stos
jl
clc
fsub
ds
or
imul
sbb
in
faddl
jg
mov
and
push
shll
lret
pop
and
and
sub
rdtsc
pusha
cmpsl
jne
loop
cltd
xchg
scas
ds
jb
test
addr16
adc
fisttps
cs
paddd
clc
lcall
sbb
mov
jmp
pop
xlat
pop
lds
add
rclb
cld
cmp
pop
inc
jns
test
je
mov
fdiv
add
push
lret
mov
stos
pop
jge
xchg
cld
dec
push
push
pop
xchg
xchg
lods
pop
fistps
insb
jp
jo
push
adc
dec
xchg
sbb
dec
aam
imul
mov
int
lcall
repz
frstor
in
lret
lret
cmp
fisttpll
cwtl
out
ret
cld
aam
pop
andl
xchg
mov
push
fnstsw
outsl
mov
push
add
or
xchg
imul
jg
push
and
rcrl
mov
loop
add
sub
aas
xchg
lret
stos
iret
push
add
test
cmp
repnz
sarb
mov
push
dec
xchg
mov
mov
jnp
push
push
sbb
outsl
es
lods
xor
shll
and
adc
jmp
jo
xchg
bound
mov
stos
jne
push
sti
ds
push
dec
addr16
dec
cld
rcrb
sarb
push
jo
sarl
push
mov
iret
jnp
pop
pop
insl
pop
xor
pop
push
daa
and
int3
dec
hlt
mov
gs
dec
pop
icebp
mov
fdivrl
lea
and
lods
mov
cltd
pushf
xor
jl
fdivr
pop
lret
dec
mov
xor
pop
fwait
daa
push
int3
pop
cwtl
movsb
in
hlt
fwait
psraw
aam
pop
xor
std
lods
cmpsl
cmpsb
dec
cltd
adc
inc
cmp
sub
shrl
mov
int3
xor
sub
push
xor
imull
cmpsb
loop
and
fs
es
xor
push
mov
or
imul
sub
roll
dec
hlt
mov
cltd
shl
xor
or
or
push
xor
push
je
jp
aas
inc
xchg
push
pop
jno
pop
jns
push
ja
jmp
mov
or
rcrb
sub
dec
into
int
jecxz
or
out
and
adc
popa
outsl
mov
fidivrs
mov
fiaddl
adc
xor
int
inc
push
jmp
stos
in
xchg
and
adc
aad
sarb
jmp
push
dec
and
xchg
sub
cmp
dec
outsl
mov
rclb
pop
sbb
insl
xchg
mov
push
hlt
adc
sub
test
and
push
icebp
arpl
lcall
mov
pop
dec
in
cli
xlat
data16
push
rcrb
js
loopne
sbb
sub
xchg
cltd
stos
and
leave
inc
mov
movsl
fidivs
and
test
push
xor
mov
jbe
jge
xchg
movsb
mov
fimuls
fisttpl
add
mov
movsl
jns
fdivrs
xchg
roll
lods
popa
cmp
in
cmp
xor
icebp
in
add
adc
out
sbb
imul
and
inc
scas
into
test
pop
mov
jne
sub
inc
test
js
roll
lret
gs
xchg
aaa
mov
add
cmpsb
jmp
fiadds
adc
dec
cs
inc
mov
sub
inc
or
dec
icebp
push
lcall
in
outsb
jmp
popa
sahf
sub
negl
jecxz
decb
pop
inc
stos
or
and
or
sub
enter
imul
and
inc
pop
push
jmp
xor
push
daa
cmpsb
out
clc
mov
inc
push
in
pushf
dec
pop
adc
add
pushf
add
aam
test
daa
mov
push
js
std
pop
and
jmp
gs
sti
xlat
stos
out
in
inc
mov
jmp
jl
adc
mov
lcall
sbb
pop
fwait
int3
lock
cmp
dec
push
pop
adc
je
lods
xchg
add
gs
push
ficomps
mov
pop
jo
sahf
pusha
push
notb
repnz
inc
lret
pop
xchg
push
pop
jnp
jmp
sbb
add
out
adc
mov
push
stc
mov
mov
pop
mov
cmp
jae
or
cmpsb
xchg
idivl
inc
adc
iret
inc
push
fwait
jge
fisubrl
xor
xor
insl
popf
mov
shr
lods
pop
or
in
or
sub
cld
or
out
or
jge
dec
leave
mov
dec
in
or
cmp
inc
test
icebp
xlat
and
sti
aas
popf
dec
outsb
in
arpl
cmp
jp
or
in
jnp
fistps
fmul
mov
adc
outsb
fiadds
mov
xor
cli
jl
mov
ds
mov
movsl
lods
pop
idivl
pop
loop
mov
sub
movsb
jmp
adc
dec
mov
movsb
push
cmp
mov
mov
sub
cmp
call
fimuls
cmpb
jae
test
mov
sub
ja
add
push
cmp
push
mov
imul
into
push
lret
xor
lods
sub
jge
and
push
pop
mov
push
pop
in
mov
push
outsl
stos
xor
jno
and
hlt
dec
clc
and
call
leave
hlt
fs
out
jb
leave
and
and
push
push
push
cwtl
cmc
sub
xchg
dec
orb
sahf
cmp
xchg
or
add
jae
scas
cmp
sub
imul
add
lahf
cs
xchg
add
aas
or
push
scas
pop
or
push
adc
pop
dec
dec
and
outsb
and
ds
std
ds
cmp
inc
mov
int3
inc
lock
mov
mov
nop
imul
scas
pop
enter
mov
adc
jecxz
std
out
lds
pop
sbb
xchg
pop
aam
xchg
lahf
sbb
push
fistps
xor
inc
shrl
dec
adc
insl
sub
pop
or
shl
enter
dec
push
ja
sbb
pop
jnp
fcmovnu
inc
push
sbb
sbbl
jmp
sbb
or
js
push
cmp
cwtl
sarl
mov
pop
orl
cld
sub
mov
add
lcall
nop
mov
push
add
inc
lret
sub
mov
xor
repnz
adc
jg
pushf
faddl
mov
push
xchg
ret
dec
ja
test
mov
fstpl
bound
push
push
and
or
mov
enter
push
pop
mov
nop
fmuls
add
jae
or
loope
pop
cmp
mov
sub
pop
int3
cmp
inc
add
std
cmc
mov
mov
and
push
mov
decl
pop
test
adc
lods
push
inc
negb
cmc
mov
scas
out
ljmp
sbb
mov
cmpsl
fistl
fwait
mov
push
cmp
cmp
clc
cmp
dec
xchg
mov
ret
adc
mov
adc
in
jp
fadd
lcall
and
ljmp
adc
stc
out
mov
in
mov
pusha
mov
xor
adc
jno
fmull
mov
pop
pusha
lahf
sub
dec
xchg
out
in
pushf
test
sub
icebp
mov
cwtl
dec
mov
mov
xchg
jle
rcll
out
push
jno
jno
in
sbb
mov
das
xor
add
aas
mov
sub
dec
loope
cmp
insb
cmp
adcl
nop
mov
lahf
ret
xchg
and
call
push
xchg
call
fnstenv
shlb
adc
int3
lret
das
mov
rol
fsubs
add
add
mov
ret
adc
mov
shlb
push
arpl
insl
repz
dec
push
pusha
shlb
aaa
movsl
cld
mov
mov
sub
dec
nop
inc
mov
gs
fsubl
int
clc
mov
and
mov
push
mov
xchg
into
add
fimull
out
dec
sub
inc
outsb
cwtl
pusha
sarb
cmp
stos
imul
and
ljmp
rcll
xchg
imul
adc
jno
les
fbstp
xor
push
adc
cmpsb
inc
cmp
xor
aaa
cmc
add
jbe
pop
lea
inc
lret
jmp
xchg
pop
xor
int3
sub
call
xor
xchg
or
shlb
xchg
mov
ljmp
aas
shlb
test
push
les
mov
cmp
and
outsl
fsubrs
inc
lds
xchg
lcall
pop
mov
lds
mov
es
adc
iret
jl
jne
jns
into
xchg
mov
stc
es
adc
add
jno
jne
gs
cmp
js
mov
aam
or
add
push
push
imul
add
outsb
add
sub
into
pop
or
cltd
push
xchg
jns
mov
mov
mov
jmp
jmp
cmove
push
push
push
or
pop
rorl
les
ss
xor
es
push
pop
xchg
fs
out
lcall
jg
xlat
dec
jge
cld
cmc
mov
mov
loope
out
gs
mov
inc
stc
adc
fdivrs
inc
sbb
xchg
sub
push
rcrl
repz
cmp
jns
jg
or
insb
jg
clc
mov
inc
and
mov
lret
add
add
xor
and
xchg
loopne
cmpl
lahf
jl
xor
ds
mov
mov
xchg
mov
jnp
sarb
in
mov
cltd
xchg
jae
push
jo,pt
fadd
insl
lds
stos
out
into
or
xor
xor
add
in
mov
aas
in
mov
dec
imul
ret
ljmp
loop
and
imull
push
pop
jge
fimuls
mov
arpl
adc
lret
mov
jae
xor
dec
outsl
inc
jbe
xor
jecxz
xorb
sub
dec
stc
or
movsl
sbb
push
cmp
xor
xor
bound
je
push
out
jne
dec
jmp
jmp
fistpl
mov
cmpl
and
lret
dec
int
clc
les
mov
mov
ss
or
pop
dec
mov
dec
mov
in
adc
rcl
lds
imul
xor
jmp
sbb
mov
mov
sub
cmp
cltd
xlat
clc
sub
jg
pop
mov
das
pusha
icebp
cmpsl
les
lret
inc
cmpsb
test
testl
mov
mov
push
jae
lds
xor
xchg
sbb
push
sbb
or
and
cmp
and
pop
pop
loop
gs
cmpsb
mov
jl
lods
test
cld
int
push
jp
sti
jne
pop
add
mov
xchg
pop
scas
sbb
inc
push
dec
xor
xor
adc
jmp
mov
push
add
fcompl
inc
loop
lds
sbb
sbb
sub
cli
jne
gs
and
jp
push
sbb
sub
cli
jne
gs
and
push
push
sbb
sub
repz
fs
and
repnz
inc
in
xchg
sbb
ficoml
out
push
jne
adc
popf
add
inc
lret
push
rorl
pop
cmp
cld
pop
enter
je
push
mov
add
sahf
std
and
xor
or
icebp
pop
orl
popf
dec
lea
popa
lods
jno
jae
adc
and
xor
stc
cmc
jmp
arpl
scas
jb
sbb
add
dec
mov
pop
jae
inc
mov
pop
dec
dec
push
cmpsl
inc
inc
pop
ficompl
and
stc
int
stc
fsubrp
dec
icebp
shl
mov
icebp
int
lock
loopne
imul
mov
popa
xchg
dec
std
rcll
leave
jecxz
dec
mov
xchg
or
jne
pop
in
lret
inc
lea
or
test
and
je
lahf
gs
shll
aad
xor
mov
push
cld
and
in
and
inc
add
sbb
inc
test
push
scas
mov
add
add
ds
movsl
cmp
sarl
or
scas
sub
mov
sahf
icebp
std
and
aaa
inc
pop
sarl
xor
test
inc
pop
dec
lret
js
push
iret
cmp
xor
mov
xor
insl
aam
ficoms
gs
mov
pop
push
test
mov
xor
sub
mov
cmp
mov
jno
adc
popa
rcrl
mov
mov
xchg
jge
insl
mov
inc
lea
popa
lods
jno
add
adc
and
xor
loope
icebp
pop
orl
popf
inc
lea
popa
lods
jno
add
adc
and
xor
in
repz
or
scas
hlt
fdivrs
fidivrs
es
lock
and
dec
and
mov
push
ljmp
pop
inc
lds
xchg
mov
scas
scas
xor
sub
fstps
dec
push
stos
sub
add
rclb
or
movsl
xchg
xor
sub
xchg
xchg
stos
or
ret
cmpsb
xchg
and
test
aam
je
mov
add
sub
jmp
mov
xchg
out
xor
push
dec
cmc
sbb
orb
xlat
pop
in
xor
xor
or
subb
push
in
cmp
ds
aaa
or
popf
scas
lea
sbb
cwtl
divl
jle
mov
fcom
sbb
loopne
push
pop
push
pop
stos
mov
sbb
aam
pop
repz
aad
cmpl
lods
mov
jg
sbb
out
pusha
daa
mov
mov
enter
ja
sarb
rcr
xchg
adc
sub
das
cs
sub
out
out
enter
fwait
or
aaa
rclb
and
mov
xor
aas
and
mov
mov
sbb
cmp
test
pop
fnstcw
mov
test
pop
pop
sbbb
push
test
movsb
lahf
xchg
movsl
cmpsl
mov
rol
daa
out
jmp
add
stos
mov
lcall
sub
cltd
mov
xchg
movsl
out
in
xor
sub
xor
mov
lret
lahf
cltd
stos
push
push
push
adc
mov
add
orb
xor
inc
push
push
repz
push
nop
pop
loope
lds
pop
cli
sbb
in
test
sub
pop
jp
xor
mulb
xchg
int3
or
mov
test
mov
in
cs
inc
shl
add
jg
sarb
cld
push
mov
push
fdivr
into
jecxz
out
xchg
mov
mov
aaa
mov
cmc
cli
sbb
jno
addb
sbb
shlb
inc
push
dec
push
dec
cs
adc
mov
mov
loopne
shlb
popf
das
scas
xchg
sub
out
lea
pop
push
ja
mov
addl
jg
lock
mov
jo
push
scas
repnz
out
test
jno
jmp
sub
sub
pop
in
xchg
mov
xor
das
adc
jns
dec
push
cwtl
loopne
test
xor
push
sbb
push
xor
push
out
scas
mov
lahf
cmpsb
add
int
bound
mov
xchg
cmpl
pushf
dec
je
ds
xlat
push
aaa
xor
shll
jo
lahf
in
xchg
jns
cmp
sahf
int
out
out
adc
xchg
popf
daa
pop
popa
xchg
push
test
mov
insb
sti
jle
push
xchg
inc
cmp
add
mov
inc
or
sub
xlat
jnp
add
je
pop
in
mov
outsl
jae
mov
jmp
inc
scas
inc
xor
movsb
imul
push
mov
cmpsb
stos
ret
or
scas
push
inc
pop
xchg
pop
jp
insl
xor
jno
aad
test
not
out
mov
add
mov
pusha
shr
cmp
repz
xor
icebp
mov
cmpsb
pushw
xchg
testb
jmp
dec
ficoml
cs
popa
stc
xchg
js
aaa
in
divb
js
in
fidivl
push
hlt
rcrb
loopne
arpl
inc
xchg
lcall
jno
dec
jno
xchg
lea
dec
icebp
mov
sahf
movsb
and
inc
adc
lods
push
jo
lret
sbb
mov
test
push
in
out
popa
xchg
jle
lock
mov
jl
xchg
jle
cmp
stos
imul
inc
sbb
pop
push
pop
loopne
jmp
insb
arpl
popa
icebp
jg
xorl
push
adc
jmp
mov
fbld
jle
push
test
jb
mov
push
lea
xchg
mov
or
insl
mov
test
mov
stos
push
jne
sahf
in
js
sbb
fimuls
pop
lods
mov
adc
imul
popf
dec
sub
push
aas
or
mov
mov
in
imul
push
dec
xor
sbb
das
jno
pusha
mov
in
sbb
out
rcrb
lea
rcrl
adc
jge
mov
xorb
aad
scas
sarl
mov
xchg
mov
lods
mov
ret
dec
cmp
dec
repz
inc
ja
cmc
dec
mov
mov
sbb
xchg
xor
call
inc
push
cld
jecxz
dec
dec
scas
xchg
inc
adc
cmp
test
mov
adc
testl
mov
dec
shrl
jecxz
nop
jno
mov
or
xchg
mov
push
test
lret
rcrl
pop
aam
insl
xor
cs
hlt
or
jl
sbb
mov
dec
aad
jge
mov
gs
sub
cs
inc
iret
ss
and
and
and
cltd
fcmovu
movsl
jns
sub
dec
xor
mov
ss
cmp
loop
jp
xchg
test
pop
es
xchg
ret
negl
jl
test
cmp
adc
mov
stos
jne
data16
leave
imul
cmpsb
mov
adc
push
dec
stc
test
addr16
sahf
scas
add
xchg
and
cmp
mov
out
push
lods
orb
dec
sub
and
mov
daa
xchg
sbb
xchg
cmp
push
adc
outsb
mov
push
mov
pop
dec
jb
cwtl
and
xor
in
push
push
inc
push
push
pop
loopne
subl
sub
push
int
sti
add
sbb
sbb
into
adc
in
imul
ljmp
push
jmp
nop
inc
addb
mulb
sub
sub
test
scas
mov
and
xchg
div
inc
and
push
dec
icebp
in
rcl
ret
popf
push
imull
cmp
or
sar
cs
test
xchg
lds
mov
jns
les
jne
negl
outsb
sub
insb
rol
sub
lret
insb
cmpsl
out
sahf
add
and
mov
push
mov
fidivrl
cmp
dec
loop
lods
push
test
mov
push
xchg
xchg
jg
push
adc
xchg
incl
pop
test
push
addr16
out
adc
sahf
mov
add
inc
out
jge
xchg
popa
xorl
or
push
cmpsb
je
icebp
outsl
stc
mov
arpl
push
and
movsb
pop
shr
mov
sbb
add
les
xchg
lds
imul
inc
pop
mov
jg
mov
mov
mov
dec
mov
lock
in
test
repnz
pop
stc
mov
test
leave
add
dec
fs
xchg
xor
add
repnz
mov
jle
jl
repnz
mov
fidivl
cli
push
outsl
dec
jmp
pusha
jmp
stos
iret
das
push
es
inc
dec
out
bswap
lock
and
int3
and
mov
test
cmp
push
imul
daa
push
lret
cmpsl
cmp
inc
lock
cmp
out
push
push
adc
jb
or
std
out
mov
stc
imul
jmp
ja
pop
push
cld
daa
jge,pt
jae
mov
ficompl
mov
sub
movsb
push
aam
aaa
lahf
mov
adc
pop
imul
mov
testl
cltd
dec
push
mov
sub
inc
mov
adcl
adc
insb
fs
lods
jp
mov
push
mov
dec
dec
sbbb
cmp
dec
div
push
pop
es
sub
test
stos
stos
fdivrl
mov
fsubs
xchg
lods
popa
lock
xchg
les
incl
mov
and
rcr
push
lret
test
aad
fidivrs
gs
cmp
cld
jg
int3
dec
and
sbb
sub
push
cwtl
lret
in
mov
fwait
stc
popf
sub
lock
mov
outsb
cwtl
jecxz
es
adc
xor
sub
push
stos
dec
pop
or
xor
std
repz
shl
dec
add
lock
xchg
mov
xchg
or
ss
or
in
push
pop
nop
daa
call
jg
xor
inc
lret
push
inc
mov
stc
mov
movb
add
push
dec
adcl
out
jl
out
cmc
das
test
shrb
push
pop
push
sub
push
jne
jg
inc
jno
sbbb
cmp
lret
xchg
std
adc
ds
jne
movsl
aas
in
jle
js
dec
xchg
lret
test
test
bound
mov
cltd
inc
or
xor
push
inc
mov
and
aas
xchg
es
push
mov
sbb
add
cmp
popf
cwtl
push
push
cmc
std
push
ljmp
xchg
les
out
pusha
inc
insb
std
mov
into
inc
mov
daa
and
mov
xchg
jns
arpl
insb
enter
fistps
and
sub
add
mov
lcall
mov
loopne
js
push
sbb
inc
cmp
clc
jmp
mov
scas
fwait
loopne
and
pop
jg
inc
mov
cs
das
mov
or
xor
push
jmp
nop
sti
adc
jns
xor
or
jl
aad
js
push
addr16
mov
inc
popa
ss
mov
pop
stos
je
outsb
sub
ret
and
testb
aaa
xchg
xchg
mov
sahf
ja
les
xchg
adc
jecxz
or
arpl
sahf
add
les
push
call
push
xor
push
mov
sbb
dec
gs
mov
pusha
or
fistpl
outsl
push
gs
dec
mov
jns
mov
xchg
inc
sbb
mov
lods
mov
pop
loopne
ret
jnp
and
fistl
and
pop
lret
sbb
loop
mov
test
xchg
scas
xor
sbb
mov
lods
xor
mov
and
pop
xchg
mov
push
fwait
clc
or
icebp
jge
enter
cltd
cmpsl
pop
push
mov
mov
imul
push
inc
mov
fbld
and
push
and
cwtl
and
loope
sub
pusha
push
xor
sub
in
add
inc
add
inc
mov
xchg
and
mov
aad
enter
cmp
inc
hlt
or
mov
icebp
mov
xchg
fwait
fwait
dec
cmp
fwait
mov
out
jne
ss
mov
adc
mov
loopne
in
push
dec
jne
subb
fs
pop
loop
mov
xor
mov
sbb
rcrl
test
sub
dec
adc
loopne
jno
sbb
pop
mov
repz
mov
mov
nop
pop
repnz
popa
jge
cmp
xchg
xchg
loopne
call
push
mov
push
sub
psllq
hlt
jle
sub
sbb
or
sub
pop
inc
mov
aad
call
in
cs
sub
cmp
xchg
lock
test
es
cmpsb
jge
cltd
imul
movsb
sbb
pop
add
inc
das
outsb
dec
lds
call
inc
mov
insb
das
fbstp
jp
lods
push
xchg
mov
add
js
pop
je
mov
mov
mov
hlt
dec
pop
sbb
outsb
call
dec
jge
jl
add
xchg
xchg
mov
mov
xor
and
xorl
popa
daa
mov
ret
pop
cmpsl
or
or
and
sahf
mov
or
cltd
adc
jb
push
pop
mov
push
dec
push
pop
int3
insb
inc
sbb
mov
inc
idivb
pop
sysexit
sbb
dec
lahf
inc
cmp
call
sti
sbb
into
mov
xor
mov
xor
mov
test
mov
in
shlb
cmc
inc
ret
jmp
dec
push
outsb
dec
fstpt
jecxz
out
fsubl
sahf
std
cld
add
movl
pop
pop
fwait
lahf
js
notb
cltd
movsb
mov
aaa
pop
pop
mov
or
pop
mov
adc
popa
ret
aam
adc
dec
xchg
lods
add
movsl
popf
xor
inc
movsb
dec
test
cs
ret
inc
ret
fildl
mov
add
enter
adc
aas
xchg
mov
in
pushf
pop
hlt
scas
xor
push
inc
mov
test
xchg
push
aas
jae
pop
ja
mov
xchg
out
subl
mov
pop
je
mov
or
xor
ss
adc
push
ds
pop
jae
fs
cmc
sbb
flds
out
fidivrl
hlt
xchg
fisubl
or
jp
je
jg
movsl
stos
and
inc
loope
and
xchg
test
test
cmpsb
in
les
pop
fsubp
xlat
jg
bnd
xor
fs
aaa
push
inc
jle
movsl
and
inc
mov
and
popa
pop
push
adc
nop
cwtl
dec
fs
jnp
loopne
push
dec
mov
addl
mov
es
and
sti
test
mov
int3
and
pop
sub
fisubs
mov
fst
ret
in
je
ficomps
ja
cmpsl
stos
sbb
adc
jp
loope
xor
cmc
add
outsl
loop
lods
js
or
jg
cmp
pop
xor
in
add
data16
shll
aaa
xchg
test
icebp
loope
push
xchg
dec
clc
jl
nop
xor
test
data16
clc
and
fcmovnb
mov
out
loop
cwtl
mov
mov
stc
jp
inc
mov
out
outsl
nop
or
or
call
roll
mov
sub
test
inc
push
test
sbb
leave
insl
inc
adcl
or
push
pop
jg
dec
xor
rcrl
sbb
repnz
cmp
push
leave
mov
and
adc
repz
or
cld
repz
scas
dec
push
dec
outsl
mov
push
jp
and
push
cmpsb
push
push
jl
in
test
outsb
pop
gs
or
scas
popf
mov
mov
mov
stc
je
add
mov
dec
mov
les
lcall
xchg
andb
mov
inc
mov
sbb
xor
cmpsb
pop
pop
test
int3
xlat
mov
into
xor
mov
rorb
fidivl
pop
pop
cltd
jb
cmpb
ja
es
addr16
pop
repz
loopne
vsubsd
lahf
xchg
or
pop
cmp
mov
jb
inc
jns
sahf
imul
push
scas
mov
inc
movsl
xchg
repz
mov
sbb
dec
pop
mov
or
cmp
cmp
movsb
sbb
push
addl
inc
cmp
jmp
hlt
mov
shlb
push
mov
mov
ret
loop
fldt
in
jo
sti
andl
lods
mov
fiaddl
aas
xchg
mov
enter
push
sub
jle
cmpsb
stos
cmp
or
add
cltd
pop
adc
or
xchg
int3
sti
xlat
jmp
data16
pop
add
lret
test
test
fcomps
xlat
jno
mov
mov
mov
scas
or
dec
imul
lods
sti
push
dec
mov
fnsave
test
ret
ds
fstl
out
loop
in
cmp
mov
or
pop
mov
mov
cli
dec
xchg
adc
or
mov
push
ret
test
pop
inc
xor
sti
cli
arpl
enter
lea
fistpl
and
mov
psllw
shll
xchg
xlat
loopne
sti
adc
nop
sub
inc
cmp
lock
jne
ljmp
ret
pop
pushf
xchg
adc
out
xorl
cs
dec
jo
or
xor
or
pop
out
and
mov
xchg
mov
mov
cmp
mov
mov
mov
lods
xchg
push
dec
dec
fsubrp
jg
dec
pop
std
push
jo
cmp
aam
orb
jnp
fmull
pop
sbb
cmpsl
popa
cmc
xor
scas
mov
fmulp
test
popf
and
and
adc
lds
lock
and
pop
lahf
in
das
imul
or
adc
das
fsubl
xchg
sahf
sahf
adc
popf
lock
les
stos
iret
and
jae
stos
dec
lret
add
into
stos
lock
push
aaa
inc
dec
dec
push
fsubrl
imul
add
bound
jb
cmpl
cld
pop
sbb
sub
fucomip
ja
mov
hlt
out
pushf
out
mull
fidivrl
enter
add
inc
pop
xor
xchg
popa
cs
push
xchg
mov
mov
in
and
xchg
and
mov
dec
jmp
fstpl
call
sbb
cmp
mov
push
jo
fldl
in
orl
cmp
loope
in
sbb
enter
aad
xchg
clc
cmc
fbld
cli
mov
and
sub
pop
jb
pop
cli
xor
or
sub
clc
mov
je
loope
lock
mov
cmp
mov
add
clc
add
arpl
cmp
inc
push
mov
or
xchg
inc
mov
and
lods
outsl
push
std
jmp
cmp
rol
pop
mov
push
push
arpl
and
mov
jo
mov
mov
fcoms
mov
push
fucomp
enter
out
mov
clc
jae
pop
pop
sbbl
hlt
imul
pushf
stos
pop
xchg
into
popf
or
lds
mov
xchg
cli
fisubl
test
mov
sbb
push
loope
xchg
inc
push
imul
je
fisttpl
aas
add
cwtl
cmp
stos
fcom
ja
ljmp
inc
bound
ror
jle
test
xor
xor
push
pop
adc
cmpsb
jecxz
mov
lahf
and
jno
and
mov
or
out
dec
push
out
jae
aam
inc
push
fnstsw
pop
sbb
or
enter
arpl
fs
inc
and
pop
out
or
mov
aam
pop
movsb
lock
lea
xchg
mov
mov
xor
ffree
out
mov
push
cmpsb
mov
xchg
pushl
xchg
insb
push
hlt
jl
cmp
ja
sbb
mov
test
sbbb
ljmp
in
das
stos
arpl
mov
daa
in
sbb
cmp
sbb
clc
enter
rcll
lret
pop
lret
fstpl
test
sub
daa
rclb
mov
in
pop
mov
inc
call
add
push
hlt
mov
adc
sub
hlt
adc
sub
nop
jle
arpl
cmc
mov
mov
xchg
pop
push
mov
adc
lods
jne
cmpsl
shlb
xchg
leave
and
jnp
push
cmp
shlb
loop
sti
insb
pop
cld
popa
shlb
xchg
test
pop
js
sbb
f2xm1
push
xchg
mov
push
cs
icebp
inc
fnstsw
popa
test
jns
mov
insb
lahf
jp
aas
jb
sub
dec
ret
dec
callw
cmp
les
cmp
dec
sub
xchg
sub
lods
mov
xor
xor
das
cmp
nop
outsb
popa
stos
inc
fidivrl
cmp
scas
andb
dec
loopne
fs
pop
mov
in
or
pop
sub
sbbl
and
shlb
add
push
repnz
xchg
arpl
mov
mov
in
aad
pop
in
rclb
adc
xor
and
mov
fistpll
stos
mov
jb
imul
call
mov
std
pop
jae
faddl
xchg
jns
pop
out
jmp
xor
insb
call
fisttps
mov
mov
push
lea
mov
push
test
outsb
pusha
shll
int
and
cltd
inc
out
xchg
adc
add
mov
pop
aas
addb
adc
adc
out
mulb
cmc
je
lods
not
xchg
aaa
push
fisubl
mov
adc
fildll
leave
add
pop
push
inc
lahf
repz
adc
jle
shll
mov
rcrb
stc
xor
cmp
dec
adc
addr16
insl
shr
cmpsb
mov
scas
or
loope
sbb
jecxz
mov
cmp
jle
dec
and
sbb
jno
sar
fdivrp
pop
loopne
negb
aas
sbb
ss
movsl
jg
mov
loop,pt
and
jp
sub
xchg
jge
insl
mov
inc
lea
popa
lods
jno
add
adc
and
xor
loope
icebp
pop
orl
popf
inc
lea
popa
lods
jno
add
adc
and
xor
loope
icebp
int
dec
xchg
jge
lods
mov
inc
lea
popa
lods
jne
add
adc
and
push
aad
in
icebp
pop
sbbl
popf
inc
jb
pop
popa
lods
push
stos
mov
add
dec
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
pushf
xchg
push
sbb
mov
enter
fcomp
cld
pop
add
push
or
add
add
add
add
add
add
add
add
or
adc
and
mov
xor
int
add
add
push
add
add
add
add
add
add
add
add
add
add
add
arpl
sub
sub
addb
add
add
add
add
add
push
add
pop
add
add
add
add
add
jo
ret
add
mov
add
add
add
add
add
add
popl
filds
lods
pop
xchg
add
add
add
add
sbb
push
add
xchg
add
add
jno
add
mov
movb
add
xchg
and
pop
add
pop
add
pop
add
add
in
mov
add
add
add
add
add
add
sbb
icebp
add
add
add
add
add
add
add
add
add
add
jl
test
addb
add
add
push
add
add
add
addb
add
add
add
add
add
and
jo
or
and
mov
add
jl
jo
inc
add
add
add
add
add
and
scas
add
add
add
add
iret
add
arpl
sub
add
pop
add
add
add
add
add
sub
aas
add
add
add
add
add
add
add
add
xchg
add
add
add
add
in
dec
add
add
add
add
add
add
add
push
leave
add
add
add
add
add
add
add
nop
add
add
add
test
add
jg
cmp
push
add
mov
add
add
add
add
add
add
add
add
add
pop
add
add
add
test
ljmp
add
push
leave
add
add
add
add
pop
add
add
xchg
add
add
add
addb
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
incl
pop
add
add
mov
pushf
add
add
dec
add
add
or
leave
add
dec
add
add
outsl
add
leave
add
add
stc
add
cmp
inc
add
pop
add
add
or
cmp
cmc
add
add
add
add
jmp
push
add
or
lret
add
mov
add
add
add
int
leave
add
add
add
adc
xchg
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
test
mov
add
movhps
icebp
push
push
adc
adc
ds
repz
fidivrl
jne
adc
dec
dec
dec
cwtl
repz
mov
push
mov
xchg
std
popf
cmp
jmp
pop
sub
sub
add
fs
pop
or
mov
clc
inc
sbb
aam
les
cmp
leave
sbb
out
rcrb
cmpsl
arpl
add
lods
outsl
xchg
dec
in
inc
jmp
std
ja
mov
outsl
mov
aad
mov
dec
pop
loopne
jno
mov
cli
mov
jb
push
fndisi(8087
aam
push
push
mov
out
mov
or
and
cmpsb
ljmp
push
cmpsl
xor
mov
pop
fwait
xor
xchg
repnz
or
xlat
mov
sbb
pusha
mov
cli
fstl
add
outsl
push
pop
ficoms
andl
test
js
fists
cmp
mov
mov
aad
arpl
icebp
call
stc
push
subb
test
cld
shrl
ret
add
out
pop
call
pop
push
std
ret
divl
pusha
dec
std
nop
orl
xchg
push
cltd
mov
xchg
fcompl
pop
mov
lcall
in
mov
lahf
mov
sbb
imull
pop
sub
mov
mov
adc
mov
cmp
mov
cmpsb
sbb
jae
add
bswap
jle
mov
es
in
xor
xchg
ds
jg
cld
cli
xor
xor
int3
or
xchg
bound
xchg
dec
mov
iret
inc
mov
xchg
lcall
icebp
jns
cld
pop
je
call
cmp
iretw
imull
loope
daa
jno
push
rcrl
ss
mov
sub
inc
mov
inc
fcoml
jl
pop
leave
stc
cmpsb
jbe
or
adcl
jmp
jmp
bound
and
mov
arpl
and
sbb
adc
rolb
adc
and
pop
push
push
andb
mov
cltd
jge
in
mov
scas
add
xchg
mov
js
mov
fcmovnb
cmp
mul
test
mov
popa
fsubs
jmp
into
or
pop
ja
lds
shlb
pop
pushf
mov
sub
xor
sahf
adc
mov
hlt
sub
lcall
pop
mov
push
adc
int3
xor
in
xchg
and
jecxz
jmp
lret
inc
jns
cmp
loope
pop
sti
sti
mov
sbb
leave
mov
jno
lds
or
shr
addl
cwtl
inc
push
jo
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
