call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
arpl
xchg
pusha
scas
pop
cmp
mov
jle
or
repz
fidivrs
es
fimuls
out
push
outsb
mov
dec
scas
pop
nop
decb
pop
mov
and
ds
push
fmuls
bound
jge
ud0
pop
mov
pop
outsl
mov
lahf
dec
mov
cmp
sub
mov
xchg
xor
shr
jne
int
sbb
ds
adcl
jno
jne
imul
inc
dec
movsl
push
jae
cmpsb
xchg
mov
push
out
packuswb
pop
in
dec
inc
dec
jno
pusha
adcb
jae
cmp
into
inc
fidivs
dec
outsl
lcall
mov
xchg
popa
jg
sbb
xchg
fcmovnbe
and
sbb
and
adc
add
outsl
push
inc
outsb
insl
out
or
popf
mov
jge
mov
xor
and
fwait
mov
insl
lret
fisubs
push
mov
pop
mov
into
push
sbb
lcall
dec
scas
out
pop
dec
sub
push
insb
addb
loopne
into
ss
mov
xorb
sub
repz
fstpt
stc
iret
or
lcall
mov
mov
xchg
pop
fcompl
int3
and
sub
sub
cmp
dec
popf
inc
fwait
push
mov
mov
pop
xchg
sub
jle
dec
scas
pop
mov
mov
jle
push
push
into
fidivrs
cs
fimuls
out
push
outsb
mov
dec
scas
pop
mov
mov
jle
push
push
into
fidivrs
cs
cli
mov
jmp
cmp
test
call
insl
cmpsb
or
push
scas
push
adc
cmc
mov
mov
clc
xchg
adc
aam
sbb
adc
test
pop
sbb
shlb
in
or
stos
inc
cwtl
sub
cwtl
and
gs
pop
int3
stos
mov
bound
jl
in
pop
out
and
mov
mov
mov
mov
cmc
mov
cld
cli
push
mov
mov
mov
dec
lret
xor
mov
or
insb
sbb
jns
sbb
jb
xchg
add
sub
dec
cld
subl
imul
mov
push
fwait
lret
mov
mull
cmpb
loop
xchg
mov
add
rcr
jmp
jge
std
sbb
jo
dec
mov
les
adc
lahf
xor
add
jo
jno
pop
arpl
pop
pop
pop
inc
cmpb
out
fninit
push
daa
or
jg
int
xlat
cmc
jg
lods
popf
loopne
jns
and
aam
mov
andl
mov
inc
adc
fidivs
xchg
rcrb
mov
loope
fildl
jne
pop
inc
fsubs
std
inc
xor
cmp
pavgb
xorb
and
fisubrs
enter
jb
fwait
data16
jne
aaa
or
fidivs
fsubp
movsl
subb
cmp
lods
lods
xchg
xchg
movsb
xchg
fistps
sub
sub
test
xchg
les
and
repz
push
pop
lods
jne
and
pop
hlt
sub
in
cmp
xchg
es
xchg
mov
sarb
ja
repz
xor
out
pop
pop
orb
out
add
lods
stos
mov
dec
subl
xchg
jge
jg
in
mov
aaa
cmp
shrb
adc
shlb
mov
out
aam
scas
and
popf
cmp
jg
bound
mov
and
mov
mov
popl
test
gs
pop
sbb
pop
stos
cmp
mov
in
movsl
pusha
cmc
push
inc
ret
dec
mov
shll
js
out
xor
mov
int
sub
jne
mov
sub
cmp
dec
and
loope
pusha
cmp
outsl
fldenv
icebp
jl
mov
push
mov
pop
jnp
imul
and
stc
ffreep
out
or
repnz
in
insl
xchg
lret
pop
das
enter
ss
push
inc
push
lods
out
dec
arpl
inc
mov
mov
pop
aam
push
into
pop
mov
subb
cmpsb
pop
ja
fsubrs
sub
fucomip
test
mov
pop
xor
int3
and
fisttpll
outsb
in
jmp
mov
popf
mulb
or
dec
lahf
loopne
push
mov
mov
int
loop
movsl
xchg
push
push
mov
cmpsl
dec
sbb
xor
daa
ljmp
fsubrs
and
add
into
jae
jne
test
inc
lcall
xor
jle
out
fs
pop
clc
fwait
xchg
cmp
pop
xchg
clc
xchg
cwtl
loopne
rclb
pop
roll
cmp
or
repz
out
aam
mov
inc
jnp
dec
fists
rolb
mov
pop
sahf
inc
cmp
and
aaa
mov
jecxz
adcl
jnp
xor
ja
fstpt
pop
mov
test
mov
ds
jle
mov
mov
mov
pop
enter
imul
xor
cmp
adc
pop
sub
aad
jmp
outsl
pop
add
sub
push
sub
cmp
pop
push
push
sbb
or
mov
repz
adc
ret
fdivl
xor
jbe
cmp
stc
cwtl
dec
sbb
loop
inc
xchg
rcrb
dec
jle
cltd
jb
jmp
push
push
add
aad
cmp
adc
inc
push
sbb
enter
jp
in
mov
xor
fwait
jno
inc
sbb
call
lods
daa
mov
in
or
cmp
lahf
mov
add
dec
sub
adc
mov
xor
shll
adc
shll
dec
adc
stos
pop
pop
xlat
in
ljmp
cmp
fbstp
add
aad
add
sti
pusha
cmpsb
ja
add
repnz
orb
mov
jecxz
out
inc
adc
aas
add
in
mov
cmpsb
ljmp
xchg
dec
sbbl
dec
call
icebp
adc
jp
shll
fucomp
jae
pop
movsb
push
xor
andl
adc
jnp
movsl
push
movsl
mov
push
gs
es
in
and
dec
aas
test
mov
lcall
adc
xchg
cmp
cmp
movntps
mov
ljmp
stos
shl
in
shr
mov
xor
and
sub
mulb
fadd
mov
insb
ficompl
cmp
lea
inc
push
movsl
outsb
andb
hlt
sub
into
popa
or
out
int
xchg
testb
mov
xchg
jecxz
lods
testl
jg
jns
mov
pusha
cwtl
repz
in
fsubrs
clc
loopne
xor
mov
ss
inc
icebp
fbld
or
xchg
fs
pushf
popf
mov
push
sbb
dec
or
mov
js
pop
xchg
sbb
mov
sub
sbb
fldl
test
xlat
dec
pop
cli
mov
aad
pop
test
xlat
mov
mov
mov
nop
jl
fistps
loope
fimuls
adc
mov
movsl
mov
xchg
dec
and
js
sub
cmp
dec
xor
mov
adc
in
into
push
stos
cld
iret
jle
int3
and
and
icebp
sar
xor
sti
loop
in
pop
inc
sbb
sahf
in
aaa
push
gs
scas
xchg
inc
icebp
pop
inc
xor
lods
cld
cwtl
and
jno
sbb
dec
xchg
adc
pop
sub
push
adc
pop
cltd
cmp
push
bound
insl
stos
jnp
sbb
sub
mov
and
aas
dec
xor
sub
cwtl
js
adc
out
add
bound
mov
sub
xchg
mov
pop
cmp
pop
fs
push
scas
sar
xchg
lret
std
add
push
loop
filds
sbb
movl
scas
je
xchg
dec
imul
sarb
test
mulb
inc
pop
call
mov
in
mov
nop
out
test
fsubrl
add
shlb
lods
gs
fcom
outsb
idiv
andl
lret
outsl
pusha
icebp
push
sbb
stos
dec
lret
mov
outsl
or
call
sbb
pop
sub
lea
push
aaa
cmp
jno
mov
xor
ds
inc
mov
or
sbb
jo
cmpsb
and
ret
aad
mov
or
mov
dec
xor
dec
jno
pop
fs
mov
cmp
dec
sub
divl
outsb
in
jae
jmp
and
mov
sub
mov
incl
mov
mov
xchg
shlb
adc
loop
movsl
jns
cmp
orps
into
dec
or
int
pop
mov
sbb
pop
leave
push
jg
pushf
mov
mov
outsb
sbb
push
xchg
jns
and
mov
pop
inc
push
rcl
rcll
jg
in
pop
mov
and
jle
int3
push
pop
rcl
push
push
jne
pop
lods
dec
dec
inc
sbb
bnd
loope
cmc
sub
push
add
repz
xabort
rorl
stc
adc
mov
and
fldenv
mov
popa
fsubrs
push
mov
jmp
cmp
mov
adc
andl
pop
adc
cmp
xchg
push
bound
cmpsb
lret
mov
rcll
test
loope
push
scas
mov
cmp
not
iret
daa
pop
sbb
mov
jne
pop
mov
push
ds
and
push
incl
push
cli
ljmp
test
xchg
in
mov
outsb
and
jle
repz
je
iret
pop
push
setp
dec
jge
and
es
mov
pop
pusha
pop
mov
pop
xchg
push
mov
dec
imull
and
mov
inc
and
and
lcall
adc
test
popa
fnstsw
into
mov
inc
lods
or
and
fldt
cmpsl
in
mov
jle
and
cmpsb
push
jns
leave
punpcklwd
or
fiadds
mov
mov
hlt
into
lea
ljmp
inc
addr16
ror
and
sbb
test
movsw
mov
push
xchg
mov
jp
adc
add
cltd
sbb
test
mov
std
fstpt
divl
or
rdtsc
insb
je
lcall
jb
bound
sub
call
push
and
xchg
lods
jno
test
ljmp
inc
adcl
shrl
lock
push
dec
add
add
aaa
cmc
inc
ljmp
push
sbb
xchg
sbb
in
cmp
repz
push
inc
dec
mov
testb
sahf
jmp
in
jo
test
dec
or
mov
bound
pop
lea
mov
push
repnz
inc
insb
into
xor
adc
cwtl
mov
bound
adc
scas
and
outsl
jns
leave
repz
popf
push
enter
mov
jbe
cmpb
fwait
xor
and
popl
inc
jmp
xchg
cmp
pusha
add
and
cwtl
push
fdivrs
test
mov
pop
inc
repnz
rolb
ja
ss
dec
loope
fidivs
pop
dec
rcr
test
pop
std
test
enter
pop
pop
lret
test
mov
in
inc
andb
arpl
out
loope
bound
aad
out
mov
push
xchg
adc
jmp
lret
sbb
cld
mov
jecxz
xor
jo
enter
es
lea
pop
aaa
test
fadds
ret
movsl
insb
in
pusha
cmp
sbb
cld
icebp
test
dec
sbb
in
std
jge
shrb
add
lds
enter
into
jle
sti
outsl
fisubs
out
and
ret
xchg
nop
inc
loope
test
mov
out
jb
out
lcall
pop
ljmp
cmpsb
push
pusha
xor
repz
cmp
repnz
fmull
push
inc
shl
xchg
ret
cwtl
movsw
xor
or
insb
pop
cmp
daa
enter
adc
push
mov
fldl
mov
lret
pop
mov
jbe
jmp
jo
movsb
testl
cmp
stos
mov
or
nop
mov
movsl
xorb
lea
jle
ja
stos
cmp
or
pop
lret
xor
ret
and
push
dec
dec
xchg
cmp
xor
add
jl
sub
ret
fdivrp
pop
ret
mov
cmp
stc
mov
jo
mov
xor
enter
outsb
sub
stc
xor
xchg
jecxz
aad
jo
sbb
push
mov
jns
xor
inc
loopne
mov
in
std
movsl
mov
sub
xchg
xor
sbbb
aas
xchg
ret
mov
or
adc
idivl
xchg
pop
outsl
scas
fwait
mov
test
stos
mov
hlt
cmp
mov
sti
fistl
aaa
jl
shl
mov
ds
adc
jo
mov
arpl
xchg
jne
push
jnp
adc
cmpl
stos
test
imul
mov
xchg
in
push
cmpsl
xchg
mov
aaa
fdivl
subb
add
in
cwtl
popf
push
negl
call
popf
in
jae
cwtl
inc
push
cmp
sbb
sbb
mov
aas
jge
mov
mov
cwtl
in
cmp
jg
jns
cmp
rclb
adc
xchg
jno
and
and
dec
push
push
in
sub
popf
testl
lea
sbb
sub
js
adc
das
mov
imul
pop
mov
aas
ja
push
pop
out
pop
enter
add
scas
mov
jl
les
imul
mov
ret
lcall
mov
adc
les
in
out
popa
scas
rcrb
xchg
adc
push
iret
and
popa
lea
push
adc
pop
and
stos
mov
jge
imul
movsb
cli
push
call
fldcw
es
mov
fs
cs
add
mov
fwait
sbb
js
out
inc
or
cmp
fiaddl
shr
cltd
cmpsl
nop
cmp
push
ret
test
adc
sub
ud2
inc
popf
pop
inc
scas
jg
fldt
jnp
jecxz
sti
test
fucom
cmp
shlb
ret
push
lock
loope
and
push
cli
sbb
push
loopne
mov
or
ljmp
add
pop
mov
aas
push
or
test
sub
xchg
push
sahf
cmc
mov
mov
dec
mov
jb
inc
dec
std
jmp
les
push
jecxz
fsubl
mov
int3
shr
and
out
xor
dec
pop
jecxz
jb
mull
mov
mov
mov
xor
adc
stos
jo
sub
jge
subb
lods
jmp
push
mov
mov
dec
xor
mov
xchg
xor
fsub
xor
cltd
aaa
fbstp
pop
incl
movhps
jns
subl
sahf
xor
adcb
fldenv
pusha
test
mov
cmc
add
push
xor
out
add
hlt
cmp
cmp
xchg
sub
jnp
ret
loopne
xor
test
daa
lret
push
ret
push
jb
pop
and
je
xchg
cli
or
xor
xchg
ficompl
rep
inc
inc
out
xor
inc
je
bound
gs
xchg
inc
imul
out
daa
iret
insb
dec
mov
xor
sahf
sahf
fiadds
lcall
rclb
lret
inc
xchg
out
inc
out
xchg
push
inc
test
jle,pt
xchg
shrl
cmpsl
addl
inc
pop
mov
sbb
push
xchg
or
sbb
adc
popf
roll
jno
jnp
add
jns
in
jle
lock
call
add
push
pop
xor
dec
xlat
mov
enter
inc
adc
mov
call
inc
push
jge
rclb
add
mov
ffree
and
pop
mov
push
rcr
dec
mov
pop
mov
lock
mov
push
arpl
pop
and
and
push
sub
inc
push
cs
aam
mov
adc
std
es
sbb
in
sahf
pop
sbb
ret
push
xor
js
pop
das
sub
lock
inc
test
xor
mov
mov
loope,pt
lret
push
aas
mov
sub
and
sub
inc
test
sbb
or
mov
and
inc
inc
push
repnz
js
mov
push
cmp
dec
ret
inc
add
enter
cmp
push
mov
sub
je
inc
push
cmp
inc
xor
add
icebp
sub
mov
enter
sub
incl
or
jp
ja
mov
sar
jo
aas
add
imul
out
or
adc
mov
mov
inc
mov
dec
std
mov
cwtl
fdiv
out
aas
shl
dec
push
inc
lret
jo
frstor
hlt
cwtl
inc
enter
mov
pop
xchg
pop
pop
cmovns
and
sbb
ja
andl
daa
icebp
stc
aas
and
lahf
iret
xchg
jecxz
sbb
mov
imul
push
dec
mov
pop
mov
lock
repz
dec
lock
sarl
push
cmpsb
int3
dec
xchg
add
xchg
lods
add
push
sbb
lahf
add
test
int
push
cmp
cmpsl
repnz
jb
mov
lock
xor
push
int
xchg
mov
mov
sub
nop
add
mov
jmp
push
xor
aad
sub
out
sahf
stc
outsl
neg
outsl
sub
mov
movsl
jmp
imul
sub
test
repnz
and
es
leave
push
xchg
imul
gs
neg
pop
dec
lods
add
outsb
jle
dec
sub
icebp
sub
xor
rcll
lods
jp
xor
in
sbb
mov
or
add
sar
jecxz
inc
lcall
mov
jb
aam
sub
inc
js
push
sub
bound
bound
movsl
fcoml
mov
xchg
mov
aas
fldcw
imul
add
sbb
aaa
push
out
popf
mov
push
sub
test
mov
dec
insl
in
cmp
and
cli
js
nop
and
fists
jno
push
push
jp
ret
sbb
stos
pop
pop
inc
cs
out
sub
outsb
repz
xor
lret
add
mov
inc
pop
cs
add
ja
aaa
jge
push
les
jg
sbb
mul
sbb
push
loope
pop
ds
sbb
fcoml
mov
push
int3
mov
movsl
loop
aad
mov
mov
pushf
pop
or
xchg
adc
mov
xlat
loope
mov
push
xor
sbb
mov
ljmp
xor
sbb
mov
mov
mov
pop
xchg
mov
insl
hlt
cmp
aad
popa
cmpsl
rolb
push
pop
lcall
jns
pop
ficoms
rorb
int3
sbbl
orb
out
pop
mov
ljmp
jb
ss
stos
fldt
pop
push
cmpsb
loop
add
out
push
adc
add
xchg
cmp
out
movsl
rcrb
fcomip
int
adc
inc
push
fnstenv
dec
xor
jnp
push
movl
xor
mov
dec
ja
mov
shlb
cmpsl
les
push
shrl
enter
sahf
and
dec
xchg
dec
mov
test
xlat
inc
mov
dec
testb
lahf
mov
icebp
push
fs
inc
mov
mov
push
sti
xlat
and
xchg
xchg
addr16
mov
and
dec
stc
lcall
mov
sbb
pusha
lea
or
mov
dec
mov
push
repz
add
and
push
cwtl
ja
je
pop
dec
ds
push
xchg
push
lret
fwait
dec
xchg
jmp
inc
js
fcmovnu
pop
jbe
jecxz
xchg
lret
shll
or
loope
dec
aas
dec
lcall
dec
pusha
outsl
mov
lret
cmp
mov
xchg
enter
or
mov
dec
movsl
jnp
push
je
xor
fisubl
lret
enter
and
mov
les
rorb
inc
xor
xchg
addr16
and
stc
inc
push
ror
push
push
dec
int3
int
fidivrs
add
insb
dec
or
movsl
inc
jns
mov
repz
scas
pop
pop
mov
sbb
and
sub
or
es
dec
pop
dec
push
sub
jg
and
aad
stos
cmpsb
mov
lds
xchg
punpckhbw
mov
lret
pop
mov
je
jae
mov
test
pop
rcrl
adc
push
cmp
and
xchg
aas
repz
repnz
inc
push
cld
sbb
daa
adc
xchg
mov
xchg
shl
xor
aas
cld
jnp
addr16
lret
aad
dec
lret
add
mov
ss
push
ficomps
lods
repnz
rcll
sub
ret
ret
testl
mov
xlat
xlat
hlt
xchg
or
lea
mov
cs
int
pop
dec
data16
or
pop
cmp
imul
add
xchg
ljmp
push
pusha
pushf
dec
mov
or
icebp
mov
push
jbe
xor
and
sti
xorl
add
dec
stos
sub
sbb
cmp
xor
xchg
cmc
gs
insl
adc
inc
adc
pop
shrl
cwtl
call
inc
shlb
or
enter
jg
setl
adc
add
movl
int
adc
push
cmpsl
cmp
pop
or
ljmp
fcmovb
push
addr16
dec
les
mov
xor
cmpsb
cmp
cmp
outsb
jge
jmp
jo
jge
pushf
adc
testl
cmp
jle
and
shll
fdivrl
shll
or
out
pop
outsb
dec
mov
jmp
fidivs
add
outsb
mov
dec
scas
pop
mov
mov
jle
push
push
into
fidivrs
cs
fimuls
out
push
outsb
mov
dec
scas
pop
mov
mov
jle
push
push
into
fidivrs
cs
push
negb
cli
outsl
mov
dec
stos
pop
mov
xchg
ja
or
push
lret
fidivl
sub
cmp
mov
dec
fidivrs
mov
hlt
and
sahf
or
push
and
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
adc
arpl
push
and
jecxz
rep
ret
dec
ret
dec
inc
mov
adc
inc
fists
mov
push
xchg
bt
rep
ret
pop
rorl
mov
lret
jge
adc
pop
fists
aas
nop
or
jp
popa
mov
xorl
dec
repz
add
jp
addr16
jae
cltd
fdivrl
in
adc
inc
push
inc
cmpsb
div
sbb
mov
iret
mov
dec
out
repz
into
push
fiadds
das
rolb
loopne
sbb
scas
xor
out
push
add
and
pusha
or
aas
mov
xchg
sbb
push
or
out
cmp
pop
mov
pushf
jae
mov
ret
mov
pop
fldcw
sbb
repz
sub
dec
fdivrl
push
and
sbbb
fmul
add
cmp
sub
jg
aaa
fildll
add
in
xchg
inc
nop
aas
mov
or
lock
outsb
mov
mov
mov
adc
inc
fcomip
iret
gs
sub
cmc
pop
mov
outsl
icebp
pop
rorl
dec
mov
imul
mov
push
mov
out
idivb
or
sub
push
ret
jno
jb
or
loope
pop
loope
cmpl
lcall
sbb
pop
cld
cli
inc
divl
int
out
inc
fists
mov
pop
xchg
pavgw
outsl
ret
pop
rorl
mov
adc
inc
fists
mov
pop
xchg
pavgw
outsl
ret
pop
rorl
mov
rorl
or
sub
das
inc
xor
insl
mov
add
in
jb
aas
in
push
rol
outsb
xchg
das
insb
fisttpl
cmp
negl
in
mov
stc
push
pop
mov
push
shlb
xlat
loop
push
addr16
fucom
movw
push
fcoms
cmovbe
sub
push
and
cld
inc
and
aam
xchg
mov
mov
adc
mov
ret
jns
pop
jnp
inc
xor
insb
mov
dec
dec
call
mov
jmp
push
add
jbe
xor
jae
xor
fsubrl
int3
push
dec
xor
sbb
mov
lods
mov
in
addr16
adc
enter
imul
es
fwait
std
scas
out
daa
aad
xchg
lock
xchg
push
les
lea
add
ljmp
ljmp
cmp
insb
dec
or
push
popw
icebp
cmpsb
ljmp
gs
mov
mov
push
cmc
xchg
sbb
mov
lods
movsl
int
aaa
lods
in
cmp
cli
jge
push
dec
jl
fs
mov
daa
add
sbb
pop
je
pop
call
pop
ret
mov
mov
cmpsb
pop
pop
jb
aam
push
sbb
sbb
scas
movsb
nop
pop
and
movsl
xchg
push
dec
sar
and
or
and
adc
fimull
adc
mov
sbb
or
pop
adc
outsl
cmp
inc
sbb
pcmpgtw
pop
add
jecxz
loopne
fsubrs
mov
adc
dec
xchg
pop
lret
into
mov
jb
daa
jge
cs
add
lcall
inc
mov
outsl
cmp
shl
rol
fidivrs
fs
sahf
cli
icebp
loope
shrl
xchg
loope
js
dec
mov
aas
inc
outsb
inc
or
cmpsb
dec
sbb
call
jo
cmc
inc
cmpsb
fcompl
sbb
mov
movsl
inc
push
ds
add
pop
push
mov
push
std
inc
xchg
pop
popf
jno
and
push
push
adc
inc
test
stc
sub
dec
mov
pop
int
scas
shrb
cs
test
fidivrl
lods
repz
pusha
test
adc
mov
mov
imul
dec
test
sbb
jo
les
inc
dec
cld
clc
sbb
xchg
xchg
aaa
or
xor
gs
and
in
push
andl
hlt
adc
cmp
mov
inc
jns
sub
lds
jo
mov
fwait
inc
cmp
fisttpll
or
jns
mov
orl
xor
out
or
or
lret
setno
pop
jns
adc
ficomps
jno
jle
mov
xchg
int
inc
incb
in
mov
push
imul
int3
sub
adc
sub
pushl
add
ret
movsl
fwait
mov
sub
inc
lret
xchg
and
dec
imul
in
rol
jo
push
jmp
cmpsb
inc
int3
icebp
push
mov
or
out
mov
sbb
jns
out
cmp
popf
sub
push
cmp
outsl
adc
dec
cmp
fs
mov
push
pop
inc
sahf
push
jmp
mov
mov
arpl
nop
fs
stc
lea
dec
shrl
int
dec
adc
add
push
jnp
pushf
mov
lock
push
inc
negb
xchg
mov
loopne
ret
xchg
jg
jae
adc
dec
imul
sbb
or
or
stos
ss
lods
loopne
in
jnp
repz
into
mov
cmp
bound
inc
hlt
mov
stos
mov
in
xor
test
and
in
xchg
lahf
fsubs
adc
xchg
leave
cmp
test
mov
repnz
punpckhbw
rcl
aaa
lcall
popf
int
mov
pop
shlb
push
mov
and
cmp
sub
xchg
mulb
test
adc
fisubs
std
ret
xchg
mov
mov
sub
and
lcall
adc
shrl
in
cmpsb
fnstenv
gs
pop
scas
rcrl
xchg
or
idivl
cmp
mov
mov
dec
and
dec
sub
cmp
add
cld
push
push
mov
aas
lea
dec
push
scas
jo
add
je
sbb
fildll
adc
fisubrl
xor
std
cld
mov
add
or
mov
and
xor
nop
gs
xchg
inc
dec
sti
jne
ret
imul
pop
pop
sub
outsl
sub
cmc
push
adc
sbb
and
popf
xchg
shr
mov
mov
ret
scas
popl
repz
mov
add
mov
mov
jbe
dec
movsl
movsl
scas
sahf
cmc
in
add
cmc
pop
lcall
fnstenv
decb
movsl
lret
ret
insb
sbb
lods
lahf
mov
cmpsb
loopne
push
inc
pop
mov
pop
nop
jb
mov
fldl
adc
lds
cmp
xlat
jnp
or
mov
push
jnp
out
cmpsl
dec
push
out
div
sub
mov
jnp
jg
inc
call
pop
pushf
int
mov
pop
adcb
and
shlb
adc
addr16
and
push
push
sar
or
loope
push
fldl
aaa
stc
daa
sbb
sub
lods
repnz
jo
icebp
cmp
mov
cmp
push
mov
xor
subb
cltd
add
enter
aam
into
add
mov
adc
and
ds
xor
dec
lret
pushf
neg
adc
adc
adc
xchg
lret
imul
test
outsl
mov
mov
insb
xchg
or
sbb
xchg
cmp
push
movsb
lock
daa
and
test
unpcklps
mov
xchg
outsb
in
aas
mov
xor
cmp
cs
lahf
lds
out
push
popf
inc
jo
add
inc
cmpsl
pop
push
fs
lcall
popf
je
sub
bound
es
push
adc
lret
and
xchg
incb
out
outsb
or
mov
or
pop
in
and
dec
sub
test
jp
push
adcl
les
pop
repz
and
mov
jb
mov
push
aad
xchg
add
fdivrl
or
xor
dec
hlt
pop
adc
ret
mov
xor
or
repz
mov
lahf
dec
pop
loope
leave
idivl
mov
pop
movsb
and
jno
cwtl
mov
stos
jecxz
les
cwtl
pop
scas
imul
scas
cmp
mov
xchg
les
inc
in
xchg
fldenv
xchg
int3
xor
inc
outsl
jg
int3
mov
cmp
mov
imull
js
ret
or
in
mov
dec
imul
ds
insb
fsubs
divb
neg
mov
in
sbb
test
pop
fsub
cmp
push
mov
cs
or
sti
mov
jae
jb
lock
dec
inc
sub
xchg
cmpsb
mov
pop
aad
enter
or
jge
out
es
adc
sysenter
mov
xchg
jmp
sti
popa
je
fwait
addr16
in
imul
sub
jnp
movsb
xchg
jbe
insb
lcall
cwtl
stc
call
xchg
imul
cmpsl
jle
fsubp
mov
adc
fs
loope
es
call
xchg
mov
prefetch
or
je
rorb
ja
sub
dec
adc
shll
loop
ss
mov
mov
das
cmp
testb
out
jno
adc
or
cwtl
int3
xchg
xchg
mov
push
xor
mov
and
movsb
and
lret
mov
jge
mov
repnz
sbb
lock
xlat
pusha
push
adc
push
xorl
imul
and
inc
add
loopne
and
sub
adc
test
inc
xor
into
jle
test
pushf
push
fwait
cmp
loopne
adc
fucomp
call
cmp
mov
into
ret
lds
leave
inc
sub
lcall
push
mov
scas
lret
push
stc
hlt
mov
jae
loop
inc
cli
out
jno
or
mov
jge
mov
lcall
out
sti
jns
mov
ljmp
mov
or
lods
xor
mov
xchg
or
out
xor
loope
in
inc
fscale
sbb
xchg
hlt
mov
icebp
ljmp
cmc
jo
sub
into
inc
pop
in
xchg
sub
inc
inc
push
mov
fnstsw
push
mov
push
mov
mov
insl
and
in
arpl
ret
scas
adc
add
add
mov
int
xchg
mov
vsqrtpd
sub
inc
add
sbb
push
lods
int3
jecxz
cli
aam
sar
sti
add
adc
xorb
stc
in
pop
dec
shl
xor
addb
ret
add
sub
popf
mov
pop
jo
mov
insl
popf
adc
mov
loope
xchg
insl
fldl
loop
in
nop
jecxz
shlb
mov
push
out
sub
stos
add
out
lock
out
inc
iret
int3
sti
add
dec
daa
bound
scas
pop
and
int3
cmp
icebp
jo
int
mov
lret
aas
aas
and
ljmp
jmp
lea
mov
sbb
cmp
js
flds
shlb
sbb
les
shrl
jg
cwtl
insb
mov
mov
jge
mov
nop
xchg
fs
dec
dec
shl
idiv
shl
inc
xchg
jbe
jae
mov
sarb
mov
push
fmulp
adc
dec
into
mov
mov
nop
clc
subb
scas
adc
jo
addr16
inc
js
ljmp
cmp
fidivs
lock
xor
fistpll
out
cmpb
mov
xchg
sub
daa
mov
mov
sub
lds
xor
orb
xor
push
jmp
loope
out
cmpsl
cmp
and
and
sbb
movsl
dec
jns
jo
fstp
daa
je
inc
sbb
aas
and
jo
jmp
lock
sub
xchg
test
pop
dec
test
ret
ss
aam
insb
jae
add
mov
es
lods
std
xchg
loopne
sar
outsl
sbb
sbb
push
push
fldt
data16
stc
aas
test
or
mov
sub
jmp
mov
aad
dec
fs
pop
add
ja
and
sub
pushl
mov
xor
pop
imull
dec
pop
adc
dec
push
or
ret
clc
es
mov
insl
out
pop
pop
ss
pusha
arpl
add
jbe
mov
cmp
sar
lahf
push
pop
sbb
shll
jle
add
push
push
and
fistps
jl
popa
xchg
dec
push
push
bound
out
popf
cmp
shr
lds
or
insl
lcall
and
push
int
fsubs
scas
divl
xor
insl
arpl
sub
mov
daa
xchg
cld
mov
into
les
daa
sub
push
push
and
movsl
das
jns
push
les
js
jge
movsl
sub
dec
sub
cmc
dec
inc
push
pop
push
mov
jbe
push
or
dec
repz
lods
sarb
insl
push
test
fistps
dec
jle
or
bswap
and
sub
insl
repz
xor
xor
cld
xlat
pop
push
xor
cld
ljmp
pop
test
add
mov
addr16
inc
je
sub
addr16
stc
cli
adc
mov
test
and
gs
popf
mov
insb
cmp
mov
arpl
aaa
mov
mov
je
ds
aaa
sbb
or
dec
movsl
sbb
pop
dec
out
dec
cmpsb
pop
bound
scas
pop
dec
test
mov
jae
jnp
sbb
jp
xor
repz
add
ficomps
xor
jge
or
iret
jp
jmp
dec
popf
jle
xor
adc
int
andl
pop
sysret
imul
test
adcl
imul
sbb
movsb
pusha
and
mov
cmc
jne
aas
sbb
push
mov
ficoml
lcall
jo
push
mov
xchg
mov
sbb
mov
mov
xchg
int
push
data16
or
push
mov
lcall
inc
mov
fstl
xchg
push
jb
pop
mov
pop
bound
lret
and
imul
jne
repnz
jecxz
push
int3
pop
mov
xor
bound
out
jo
jl
xchg
enter
inc
hlt
jmp
add
cmp
fdivr
out
and
mov
push
aas
lret
fs
mov
hlt
cld
xor
cmp
xchg
out
push
xchg
add
leave
push
add
fildl
rorl
jecxz
cmpsb
fisubl
sbb
fisubrl
mov
xchg
dec
jg
stos
jae
and
dec
mov
inc
pop
push
cmp
cli
xchg
push
test
and
inc
std
outsl
icebp
inc
test
enter
mov
shrl
out
push
aad
sub
pop
fwait
ret
inc
mov
pop
cmp
data16
xor
and
jae
cmp
xor
sahf
push
rolb
mov
dec
push
aam
imul
rcrl
mov
mov
or
mov
andl
dec
adc
jbe
sbb
xor
dec
inc
inc
lods
mov
cltd
dec
jge
add
hlt
les
mov
adc
cmpsb
xor
xor
add
pop
cmp
mov
add
ljmp
lock
sahf
jp
xchg
arpl
addr16
xchg
aad
sarl
pushf
jo
pop
fstps
sub
sub
or
lods
js
mov
cltd
sbb
sub
push
inc
idivb
sub
xlat
inc
mov
insl
idivl
pop
jl
outsb
cmp
adc
inc
outsb
dec
call
xor
fwait
lods
popa
jecxz
push
xor
rcrb
xor
xor
call
push
xchg
xchg
rclb
push
xchg
jl
mov
aas
add
fisttpl
lcall
nop
jg
jmp
imul
push
test
jecxz
xchg
arpl
fucomip
jle
xor
push
mov
xchg
inc
and
outsb
das
test
push
adc
movsl
mov
js
lds
xchg
in
into
inc
enter
out
sbb
test
or
ja
adc
inc
je
pop
fisttps
or
xor
stc
mov
jae
lock
jp
mov
popf
popf
mov
inc
stc
adc
call
aam
repnz
add
nop
lea
or
rol
inc
pop
mov
mov
inc
xor
adc
sub
or
pop
push
mov
xchg
sahf
sub
jg
push
lcall
xchg
pop
xchg
push
jb
movsl
cs
push
repz
adcl
add
aaa
mov
dec
movsl
or
mov
xor
pusha
aad
mov
je
push
pushf
adc
xor
pop
insb
loope
jg
out
add
movsl
ljmp
and
into
loope
xor
mov
fs
pop
pop
cli
sbb
adc
sbb
pop
xchg
stc
movsb
jae
and
pop
rcrb
and
mov
mov
push
orl
int3
xchg
bound
mov
cld
aad
movsl
adc
mov
in
dec
lods
andl
mulb
xor
in
stos
shrl
fbld
and
dec
pop
add
shlb
inc
xchg
out
jo
lret
or
pop
fs
mov
or
mov
notl
adc
in
lret
imul
cli
je
aaa
inc
movsb
adc
ljmp
adc
dec
sbb
push
lock
pop
and
mov
jne
imul
hlt
mul
and
out
sarb
xchg
mov
pop
es
mov
mov
inc
adc
push
cli
cli
add
jle
or
push
mov
inc
fs
outsb
mov
mov
xchg
adc
cmp
sub
cmp
hlt
jbe
fldl
cli
cmp
loopne
sub
mul
cmp
sahf
pop
aas
ret
sub
jp
inc
shrl
int3
jmp
inc
sbb
addr16
xor
out
aaa
push
inc
xlat
jmp
sub
rcr
xchg
aad
inc
inc
clc
cmp
fs
cmp
mov
or
mov
nop
or
lret
addr16
add
enter
movsb
lods
jg
out
nop
addb
test
shl
pop
subb
and
sub
push
lock
fs
fldcw
sarb
xchg
mov
push
mov
dec
addr16
cmp
fildl
adc
loopne
cmpsl
xor
xchg
test
pop
pusha
jae
clc
push
adcl
sub
nop
repnz
fists
adc
xor
or
adc
pcmpgtw
out
loop
adc
imul
mov
jne
dec
hlt
jg
and
leave
xchg
sti
cmpsb
int
stc
inc
movsb
test
sbb
bound
mov
imul
jge
fstpl
fs
jbe,pt
movl
cmpsl
shl
jecxz
ds
dec
icebp
and
shll
add
adc
ret
enter
push
jbe
ret
lods
push
pop
xor
out
popf
outsl
xchg
push
xlat
divb
push
and
sbb
pusha
mov
pop
and
push
lret
cli
fwait
cmc
cmpsb
xchg
jnp
pop
xor
push
enter
loop
nop
data16
push
mov
imul
mov
daa
dec
sub
fsubp
aad
lcall
movsb
and
mov
mov
inc
arpl
inc
push
scas
mov
xchg
add
enter
call
test
mov
sub
cld
fisttpl
jmp
in
pop
xchg
mov
xor
cmpsb
divl
xchg
jmp
int3
push
fs
sbb
idiv
mov
jle
lahf
and
xchg
dec
sbb
fnstcw
dec
pushl
mov
pop
cmp
inc
add
or
and
xchg
enter
bound
jle
outsl
icebp
cwtl
test
push
xchg
lods
cmp
or
shll
sub
add
or
push
push
sbb
push
dec
cwtl
ret
and
aaa
cmp
fldenv
test
inc
sub
pop
cltd
jg
cmp
fistpl
and
jg
sub
call
jne
notb
push
in
in
mov
repnz
pop
jnp
add
sub
pop
xor
cmp
mov
outsl
xchg
jmp
dec
jbe
cmp
dec
fidivrs
mov
fbstp
incl
xchg
sub
inc
mov
push
rcl
adc
cmp
icebp
dec
frstor
xchg
insl
div
sbb
jl
bnd
jl
and
aaa
inc
mov
xor
jno
mov
adc
xlat
xchg
or
and
inc
jb
addb
insb
jb
xchg
xor
adc
jp
mov
cmp
xchg
outsl
sti
enter
jb
sbb
xor
lcall
loopne
divb
int
push
cmp
jmp
outsl
sbb
pop
xor
les
fidivs
push
stos
outsb
xchg
dec
mov
insl
jecxz
movsb
jg
xor
cmp
lret
ficomps
aaa
dec
inc
loope
dec
add
mov
dec
sbb
xor
lods
push
jge
aas
push
loop
pushl
pop
ficoml
xor
dec
jecxz
add
inc
push
rcr
into
push
pop
and
push
mov
fdiv
xchg
or
or
jnp
or
cli
test
aad
stos
adc
sub
sbb
sub
inc
dec
push
xchg
out
mov
out
push
jp
pop
mov
iret
int
and
ja
pop
call
inc
xchg
pusha
xor
xchg
inc
add
push
lahf
movb
insl
mov
cmp
push
mov
aas
pop
sarl
in
cmp
std
xor
js
mov
inc
int3
push
mov
mov
ficoml
jbe
and
leave
out
notb
ret
push
mov
in
mov
sub
cmp
jmp
adc
pop
cld
mov
dec
xor
div
dec
cmc
or
rorl
repnz
adc
mov
shll
scas
inc
lahf
adc
inc
fists
mov
pop
xchg
pavgw
outsl
ret
pop
rorl
mov
adc
inc
fists
mov
pop
xchg
pavgw
outsl
ret
pop
rorl
mov
adc
inc
fists
das
jae
xchg
pavgw
outsl
ret
pop
cmp
mov
xor
inc
bt
dec
test
pop
xchg
js
idivl
cmp
sub
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
ljmp
cmp
arpl
jb
sub
pop
in
dec
out
cmp
or
fstpt
insl
mov
cmp
push
cmp
dec
in
cmp
sub
mov
ljmp
add
adc
jp
push
cmp
inc
jecxz
jmp
lods
mov
and
or
aam
mov
imul
jbe
mov
inc
xor
scas
cmc
mov
adc
xchg
and
sbb
fcoms
mov
jmp
aad
stos
or
dec
inc
jp
cmp
test
dec
lods
cmp
jge
pop
mov
gs
push
lods
xor
mov
jb
aaa
add
pop
gs
lea
mov
sub
push
pop
int
mov
inc
add
push
ljmp
daa
in
bound
dec
mov
das
call
sub
sbb
mov
fisubrl
ja
sbb
mov
lds
pop
in
hlt
cmp
or
mov
scas
dec
mov
test
iret
arpl
push
out
inc
adc
orb
fidivs
jle
movsl
and
subb
into
aas
lcall
lods
and
pop
loop
rcll
sub
jno
or
jp
push
pop
std
dec
in
cmp
or
fidivrl
insl
mov
cmp
push
pop
std
dec
in
cmp
or
push
pop
cwtl
jle
and
lds
xor
cmp
jge
add
scas
mov
dec
std
xchg
repnz
cmc
pop
mov
adc
pushf
pop
mov
aaa
ret
sub
push
lds
or
inc
enter
cwtl
lods
xor
adc
lcall
fmuls
mov
mov
stos
adc
loopne
and
sub
icebp
dec
xchg
xor
ret
iret
lods
adc
lock
stc
xchg
push
out
cmp
loop
cmp
cwtl
ss
insl
jmp
adc
stc
std
stos
outsl
sub
cmpsb
addb
mov
inc
es
pop
dec
xchg
xor
jnp
iret
int
cmpb
cwtl
sub
cwtl
dec
jmp
lds
mov
fnstcw
xchg
loopne
jbe
add
fimull
mulb
push
mov
mov
dec
sbb
xor
lds
xchg
sbb
pop
rolb
cltd
jno
popf
jbe
cmpsb
jne
iret
lcall
xchg
mov
push
pop
xlat
inc
cmpsb
pop
lock
pop
cmpsl
dec
loope
inc
fstps
loope
ret
testl
dec
sub
outsl
dec
imul
imul
andl
pop
fisubrs
push
xchg
cmp
dec
push
push
jmp
cwtl
or
or
xchg
jp
and
or
fldt
push
sub
push
dec
scas
push
xor
jecxz
mov
leave
or
fwait
jl
jge
mov
outsl
cld
divl
iret
lahf
into
aam
cmp
inc
scas
stos
clc
sbb
mov
cmc
add
dec
xchg
push
pushf
pusha
cli
cmp
pop
je
in
mov
ss
xor
fcoml
xchg
sbb
cli
pop
adc
orl
add
jge
idivb
or
cmp
syscall
je
les
ljmp
mov
test
add
lods
dec
dec
out
jne
and
dec
es
iret
inc
xor
js
pop
daa
jl
jp
int
icebp
adc
mov
xchg
leave
jno
pop
mov
mov
add
and
enter
and
and
pop
mov
or
jne
push
or
frstor
call
call
arpl
outsl
push
cltd
mov
fildl
mov
hlt
mov
inc
lcall
cwtl
mov
ffree
cmc
mov
add
ja
add
dec
pop
pop
and
mov
bound
roll
mov
cmp
xchg
mov
in
mov
aam
loope
xor
cmp
jae
mov
push
enter
pop
inc
adc
adc
or
inc
je
daa
mov
iret
cmp
rorl
or
or
pop
push
xchg
dec
movsb
mov
push
dec
jne
ficomps
mov
xor
add
jbe
fidivl
cmp
and
xor
sbb
mov
jge
mov
mov
sbbl
mov
pop
pop
pusha
rolb
dec
inc
push
mov
inc
and
lods
add
dec
inc
jo
nop
jge
cmp
dec
popf
dec
repz
jbe
pop
out
test
push
loopne
xchg
inc
rcll
add
push
dec
xlat
xchg
std
and
push
mov
rcrb
clc
mov
aas
divl
mov
lret
fisubrl
out
pop
mov
std
fdivs
mov
xor
fistps
xchg
dec
aad
mov
std
xorl
adc
das
mov
fsub
cmp
fwait
std
sub
mov
icebp
imul
in
jg
cmp
add
pop
and
push
or
jp
mov
or
push
and
pop
jge
jnp
int
xchg
push
jle
inc
popf
xchg
loope
cmp
push
or
daa
pop
pop
in
adc
jg
dec
or
insl
int
pop
xchg
pop
lcall
mov
gs
stos
adc
cmpsb
cwtl
pop
inc
insl
xchg
pop
add
mov
loope
icebp
lahf
or
xlat
fisubs
notb
test
rcr
mov
mov
inc
dec
jp
and
clc
mov
mov
loop
sbb
je
pop
xchg
mov
popf
imul
fisubs
jg
fs
lods
nop
push
cltd
pop
int3
and
enter
dec
fsubp
inc
fiadds
pop
sub
ljmp
jmp
and
push
cli
jb
aaa
fsubrs
xchg
scas
pop
mov
fwait
dec
arpl
push
sbb
push
adc
xor
sub
cmp
xor
repz
aaa
mov
aas
pop
xor
roll
fbstp
jp
mov
jmp
mov
jge
and
dec
xor
inc
dec
sti
sub
out
cmp
popa
mov
inc
call
insb
out
aad
dec
jp
mov
xor
mov
pop
mov
add
daa
pop
mov
push
out
pop
jne
add
push
sbb
es
hlt
or
fbld
xchg
cmc
xchg
sbb
in
xchg
mov
cmp
pusha
movsb
xchg
imul
jp
js
jno
packuswb
orl
push
sub
pop
and
stc
xchg
dec
cmp
inc
and
adc
push
aaa
mov
leave
lret
stos
sub
and
js
add
mov
and
mov
add
cwtl
aad
cli
or
xchg
push
popa
ja
das
push
mov
ret
adc
push
std
hlt
out
pop
mov
mov
or
mov
lret
lea
pop
pop
sbb
insb
in
jo
xchg
push
addr16
dec
movsb
clc
fistps
xor
jnp
mov
sub
push
imull
add
mov
sahf
push
insb
sti
je
xor
movsb
rcrb
and
add
mov
dec
mov
mov
into
sub
jne
pushf
adc
aam
loopne
push
stos
decl
testb
je
or
push
imul
out
arpl
sub
aam
dec
test
hlt
cmpsl
cmovg
dec
leave
das
or
lea
test
lea
cmpsb
add
mov
dec
nop
inc
cmpsb
mov
mov
test
push
jle
daa
pop
addr16
js
or
xor
fstps
push
test
push
xor
mov
xor
jb
flds
xchg
call
cli
outsl
xor
mov
rcr
iret
int3
int
dec
mov
jge
sub
add
xchg
inc
ficomps
pop
ss
jae
int3
lahf
dec
add
je,pn
add
sbb
lret
orl
jae
js
aas
addr16
cmpsb
mov
leave
mov
mov
cmc
clc
sub
mov
insb
inc
mov
xchg
ds
fsub
mov
clc
stos
repz
lcall
aaa
std
in
xorb
pop
or
jo
mov
push
mov
pop
shll
push
cmp
sub
ja
js
sbb
push
aas
jbe
insb
mov
pushf
pop
sbb
orl
stc
xor
js
mov
enter
push
loope
jae
or
xor
js
lods
inc
lahf
outsb
loop
outsl
cld
in
fistpll
cmp
xor
add
mov
or
add
xor
scas
adc
insb
notb
add
leave
xchg
imul
jecxz
pop
popa
cmpb
and
jmp
push
and
fistpll
sbb
mov
test
adc
fdivs
mov
ss
and
or
into
sbbb
fisttps
loop
jnp
lcall
shll
insb
and
insl
add
add
jmp
xor
lret
mov
sbb
out
lods
sbb
dec
popa
outsl
inc
mov
movb
fstpl
mov
out
fsubp
call
mov
sub
mov
dec
sub
xchg
int
xchg
mov
push
bound
sub
dec
dec
cmp
add
mov
inc
push
or
stos
enter
sti
mov
or
add
test
inc
call
mov
add
jg
jl
xor
cmc
loopne
lea
inc
int3
xchg
dec
pop
dec
adc
xor
xor
push
dec
push
lds
shrl
stos
xchg
mov
jbe
cmp
aas
loope
push
je
inc
fldl2e
fstpl
dec
movsb
or
test
add
push
push
sbb
or
adc
les
jmp
mov
cmp
cmc
inc
push
mov
cmp
push
jae
icebp
or
pop
sub
add
mov
fcmovbe
addb
inc
paddusw
inc
shlb
xor
sbbl
add
mov
xchg
or
jns
test
arpl
mov
push
cmpsb
mov
fcmovnbe
icebp
push
popa
scas
ret
sbb
ss
es
orb
out
les
dec
dec
jl
dec
mov
mov
xor
sbb
xor
cmp
sti
xchg
lret
test
shll
and
sub
lods
inc
idiv
sub
sbb
aas
cwtl
pop
pop
fiadds
nop
inc
pop
pop
push
sub
jbe
lcall
test
xchg
cmp
js
sub
jno
cmp
mov
push
les
mov
push
lods
scas
das
inc
sbb
lock
xchg
xor
mov
add
xorb
and
push
sub
roll
inc
lcall
int3
outsb
nop
add
stos
xchg
or
inc
jg
andb
dec
cmp
nop
mov
lret
cmp
fs
jnp
cmpsl
jecxz
inc
and
sbb
mov
jbe
test
neg
stos
in
jge
adc
lock
or
mov
pusha
out
stos
nop
leave
sbb
inc
roll
cli
sub
xor
pop
imul
mov
cmpsb
bound
xchg
push
rol
repnz
xchg
or
out
insb
inc
adc
push
sub
loope
outsb
inc
popa
inc
in
cld
cmpsl
mov
adc
fnstenv
lea
mov
sbb
popa
sub
xor
jbe
push
mov
mov
xorl
push
xchg
jbe
stos
sbb
push
test
cld
pushf
dec
dec
dec
mov
pop
repz
add
js
les
or
fidivs
loope
mov
lock
sahf
push
mov
mov
cmc
dec
xor
or
push
jle
and
insb
and
fwait
mov
cld
push
pop
add
sub
push
test
xor
stos
aam
enter
dec
jnp
rorl
idivl
mov
gs
mov
mov
jne
lcall
icebp
stc
or
sbb
xchg
icebp
in
lret
xchg
sub
inc
mov
cmovns
imul
ret
and
xlat
outsl
pop
inc
push
cmp
xchg
repz
insb
test
jo
pop
jnp
lret
push
jnp
test
sbb
dec
divl
push
data16
ret
daa
ficoms
sbb
lock
inc
push
fwait
sbb
les
sbb
movsl
idivb
data16
add
inc
inc
cmpb
fs
dec
or
push
xchg
mov
lahf
sub
mov
sub
imul
cwtl
pusha
mov
enter
cwtl
push
stc
jmp
sbb
pop
adcl
out
orb
arpl
jae
jle
xor
movb
xor
scas
jne
pop
and
lock
outsl
sub
loopne
addb
cmp
hlt
incl
fmuls
push
int
mov
dec
sub
loope
jecxz
mov
sub
fdivrp
divb
pop
inc
lcall
pusha
ljmp
push
ja
cmp
sbb
outsl
out
mov
imul
sbb
jne
adc
add
mov
out
lock
lret
xor
fs
movsb
dec
or
jge
outsl
push
cmpsb
jae
mov
mov
icebp
addl
push
paddq
push
outsl
push
sti
sbb
test
test
xor
mov
sub
in
sub
push
xchg
imul
pushf
mov
cmpsl
movsb
fisttpll
pusha
pop
and
dec
repnz
pop
in
repz
mov
mov
cmp
outsb
enter
mov
lods
add
xchg
cli
div
rclb
xor
pop
movsb
jno
mov
fisubrs
push
mov
jns
jns
xchg
aas
jns
out
add
push
outsl
mov
push
test
stc
inc
leave
sahf
pop
mov
arpl
inc
jg
stc
movsl
aad
fstl
loop
push
push
loop
aam
mov
insl
pop
xchg
clts
xor
mov
fstps
aaa
or
mov
int
xor
jae
cld
push
int3
mov
push
pushl
repnz
mov
pushf
mov
push
or
inc
mov
add
lea
shrl
lahf
icebp
loope
xor
lret
mov
pop
or
push
test
and
icebp
mov
mov
jne
mov
loopne
outsl
sbb
leave
xchg
sti
iret
dec
and
ds
cmp
pop
stos
test
and
or
icebp
xor
inc
and
jbe
xor
sbb
jmp
add
sbb
mov
add
insb
xchg
mov
pushf
mov
adc
add
inc
jo
sarl
test
imul
xor
sbb
clc
lods
push
and
jmp
mov
xchg
xlat
std
fcoms
stos
mov
dec
insl
sbb
cmpsl
rorl
xchg
cwtl
rorb
cmpsb
lods
xor
pop
enter
jne
add
xchg
cwtl
mov
loope
icebp
xchg
into
lea
mov
mov
adc
mov
bound
icebp
movhps
in
pop
mov
jns
xchg
aad
sbb
sub
dec
imul
add
push
dec
inc
xor
loopne
push
sbb
repz
jg
imul
adc
stos
xor
mov
jnp
outsl
mov
xchg
aam
insb
stc
loopne
xchg
nop
pop
mov
daa
shlb
xchg
mov
mov
mov
pop
lea
mov
mov
mov
mov
mov
movsb
xchg
insl
out
orl
xchg
addl
sub
cmpsl
push
dec
sbb
test
inc
test
iret
jge
imul
push
push
inc
pop
xor
mov
inc
outsb
push
das
jae
popa
shl
jo
mov
rclb
shlb
pop
pop
mov
push
movsl
xor
mov
mov
push
lcall
subl
pop
jb
hlt
jge
jg
popf
enter
out
inc
dec
adc
jnp
jp
jge
jbe
add
repnz
in
test
int
adc
lret
pop
sbb
fneni(8087
out
xchg
cltd
cmpsb
out
xor
mov
jno
xor
test
je
ds
cmp
out
pushf
mov
popf
inc
fstpt
test
lret
dec
or
jne
xchg
popa
mov
in
std
mov
xor
leave
lcall
shrl
push
push
push
or
lret
xchg
sti
cmc
ret
push
pop
mov
xor
outsl
pop
pop
jnp
sbb
jno
and
and
dec
rcrl
sub
push
inc
nop
daa
addr16
in
push
in
xchg
jns
gs
xchg
push
push
aad
out
mov
jg
jl
addb
outsl
mov
and
jns
pop
out
lea
lock
mov
dec
stc
sbb
inc
adc
inc
mov
mov
rcr
jl,pn
add
sub
and
push
xchg
rcll
les
xchg
stos
push
xor
jo
sahf
sbb
sbb
fld
enter
out
cmp
and
mov
xor
in
mov
xor
fiadds
cmp
dec
xchg
sub
cmp
pop
xor
pop
mov
xchg
lea
lcall
inc
outsb
clc
pop
imul
dec
in
xor
mov
sbb
mov
enter
addb
ja
or
mov
and
xor
scas
idivl
adc
dec
add
dec
fsubp
daa
flds
in
das
cwtl
daa
dec
jp
stc
into
jnp
icebp
mov
sub
dec
pop
xor
cmpsl
cmp
cmp
jns
and
mov
out
lret
xchg
lcall
adc
lcall
das
cmc
loopne
jnp
cs
in
leave
ds
cmp
loop
or
add
popf
add
sbb
dec
xchg
dec
cmp
sub
cwtl
cmp
cmpsl
cld
movsb
test
stos
inc
fdivl
xor
shll
arpl
xchg
add
sbb
push
repnz
and
cmc
movb
setae
filds
pop
icebp
mov
sahf
cmpsl
lret
xchg
out
lds
loope
inc
push
das
add
ds
js
mov
cmp
xchg
fildll
jle
push
mov
jae
in
and
dec
dec
fnsave
test
fldl2t
repnz
stos
mov
stos
add
jno
into
gs
iret
jge
jmp
in
repnz
mov
fisubrs
pop
adc
shrb
inc
mov
pop
sbb
sub
out
imul
sbb
mov
push
es
adc
mov
fcomps
lahf
mov
jo
xlat
sbb
or
imul
iret
push
push
xor
insb
inc
incb
int
jp
mov
cmc
xchg
jg
mov
movsl
sbb
sub
adc
adc
pop
inc
call
icebp
adc
cmpl
cmp
adc
cmp
mov
shrd
mov
int3
mov
fistl
mov
jbe
mov
jmp
sub
push
in
ret
flds
into
lcall
cmp
pop
insl
push
mov
mov
jle
pop
cmpsb
scas
cwtl
in
cli
adc
mov
mov
and
push
cmp
xor
add
xchg
movsl
popa
loop
icebp
lock
lock
dec
sub
or
pop
scas
mov
fnstenv
mov
sbb
push
mov
mov
cwtl
cmp
jle
rcpps
jne
ds
push
xchg
js
xchg
adc
or
adc
js
push
imul
jge
pop
xor
or
pop
mov
push
out
fstpl
mov
mov
sbb
cmp
inc
aad
mov
ret
mov
push
add
aaa
insb
xchg
cmc
ds
cmp
aam
jnp
loopne
shl
mov
xlat
adc
sbb
pushf
add
mov
jp
je
jg
out
lret
cmc
jl
and
cmp
loop
xor
jnp
insl
in
mov
sub
cs
sub
out
add
mov
scas
dec
in
loope
mov
pop
jl
push
jae
movsw
arpl
in
shrl
dec
sahf
mov
sahf
xchg
outsl
add
das
out
push
jmp
and
clc
xchg
movsl
pop
test
gs
xor
lret
pusha
pop
outsb
cs
cmp
mov
push
vmovhpd
bound
bound
cmc
push
or
shll
cmpb
out
xchg
push
mov
inc
mov
bound
xchg
addb
mov
mov
xchg
xor
insl
and
fbstp
in
mov
xlat
loop
jo
mov
sbb
pop
je
mov
sbb
adc
dec
add
xchg
xchg
xchg
call
pop
cmc
dec
aas
icebp
mov
out
fsts
sub
or
xchg
cmp
push
and
xchg
or
sarl
mov
in
inc
out
xchg
sub
or
pop
inc
xchg
sti
rcr
pop
lds
out
pop
ss
arpl
cmpsb
lahf
cmp
lahf
and
jno
sbb
sub
push
out
pop
pop
notl
add
mov
jle
or
stos
jecxz
jg
das
dec
fcoms
test
sahf
push
xor
cmp
mov
ja
sub
sub
cmp
dec
sbb
aas
in
shll
inc
push
mul
icebp
sub
divl
mov
jmp
std
ja
fnstcw
fsubl
xchg
sbb
jo
lods
add
movsl
test
fcoms
dec
pop
mov
xchg
in
test
push
xchg
out
sub
std
jo
mov
mov
in
push
jp
loopne
in
lret
sbb
sub
aas
adc
cmp
mov
jne
jecxz
inc
popa
jnp
sbb
lret
movsl
mov
mov
fstpt
cld
dec
lahf
dec
jmp
popf
out
mov
push
add
sti
iret
xor
sbb
inc
xchg
and
mov
ret
push
xchg
into
or
dec
outsl
xchg
lret
sbb
mov
pop
std
dec
in
cmp
or
fidivrl
insl
mov
cmp
push
pop
std
dec
in
cmp
or
fidivrl
insl
mov
cmp
push
pop
std
dec
in
cmp
or
fstpt
insl
mov
cmp
push
lock
dec
lcall
cmc
push
int3
lret
in
ljmp
leave
ret
fnstcw
insb
jle
push
or
int3
lret
in
ljmp
lods
stos
mov
pop
sbb
jp
js
sbb
cmp
int3
rcr
ret
in
repnz
loop
xchg
pushf
subb
jns
adc
fs
jg
bound
push
test
mov
daa
dec
inc
push
mov
das
jns
repnz
mov
lret
sbb
jno
cmpsb
cli
sbb
push
dec
inc
mov
cmp
test
push
inc
sub
push
push
mov
fnstenv
add
out
dec
ss
xchg
add
test
cld
jg
xchg
frstor
mov
aam
dec
stos
dec
movsb
loope
pop
div
ss
sub
sub
dec
test
xchg
xchg
out
lods
mov
mov
ret
orl
sub
stos
adc
je
pop
aas
push
stos
aaa
ljmp
cmp
sub
push
cmp
fstp
lret
cld
cli
mov
mov
inc
insb
jae
arpl
sbb
sub
cmp
mov
mov
mov
aad
leave
std
fisttps
outsb
adc
imul
push
iret
mov
cltd
xchg
lret
aam
fidivrs
sub
jp
sbb
cmp
movsl
lret
test
pushf
lcall
pop
pop
insb
push
jp
or
sub
cmp
int3
lret
in
ljmp
lods
stos
mov
pop
insb
push
jp
or
sub
cmp
int3
lret
push
insl
fdivr
push
add
add
mov
cmpsb
jb
sub
in
movsl
arpl
movsb
add
cmp
in
fisttpl
sti
jbe
sbb
fnstenv
jnp
icebp
pop
mov
mov
xor
xor
lret
or
xor
std
setns
mov
jne
jl
xor
shrl
inc
dec
les
mov
mov
repz
std
bound
inc
cmpsl
and
lods
sarl
pop
xlat
scas
push
cli
or
arpl
mov
cli
fistpll
xor
into
repz
dec
ret
andb
ja
insb
addl
fists
icebp
and
test
fisubrl
sub
mov
cmpsl
jmp
out
insb
out
call
cmp
adc
jnp
fadds
ds
push
pop
push
dec
lock
insb
repz
repz
pop
sbb
je
or
repnz
gs
jnp
in
inc
fdivr
push
jecxz
sahf
inc
cmp
mov
sbb
or
addr16
stos
cmpsb
stc
dec
cwtl
jb
pop
jmp
mov
imul
mov
or
dec
mov
sbb
jns
repnz
and
jbe
insl
inc
out
iret
daa
jns,pt
lret
mov
insb
pop
xchg
mulb
jle
pop
dec
and
dec
add
fisttps
lret
inc
ds
add
mov
fadds
movsb
cmp
rol
mov
mov
jl
cs
cmc
xchg
jge
je
test
jns
mov
loop
xchg
sbb
into
cmp
mov
mov
popa
or
das
outsl
mov
lcall
cmp
lcall
adcl
ret
loop
pusha
add
or
rol
push
shl
push
add
popa
mov
and
sbb
subb
jns
clc
adc
jae
inc
lods
mov
test
ljmp
fs
lock
or
out
test
xchg
and
in
add
xchg
sti
cs
in
jge
ja
inc
ds
cmpsl
lahf
push
push
xor
xor
xchg
xchg
push
nop
or
not
mov
xchg
mov
aad
sub
mov
ljmp
insb
adc
movsb
push
mov
nop
xor
pop
mov
fsubrl
jno
and
add
push
jns
or
xor
dec
sub
loope
movsb
jae
fnstcw
je
cmp
add
movsl
and
pushf
and
mov
or
xchg
adc
idivb
push
sbb
aad
loope
or
lret
icebp
jle
push
pushf
add
xchg
ss
sub
jo
cmp
aam
xchg
sbb
test
imul
adc
mov
lods
jns
push
ds
mov
mov
loopne
mov
std
not
fsubr
push
jecxz
and
sub
dec
dec
mov
mov
xchg
aas
loopne
push
aam
adc
stos
fnstcw
adc
jecxz
fwait
sub
pop
add
scas
push
aas
mov
and
cmp
push
daa
in
xor
fadds
mov
loope
push
xor
jle
jnp
aam
mov
pop
ret
cmpsl
bound
aad
fwait
loop
cmp
lcall
cmpsb
movhps
sarl
fs
cmp
dec
and
xorl
pop
cmp
xchg
lods
inc
mov
cmc
and
mov
sahf
inc
push
ss
shlb
cli
shl
jb
push
push
jbe
popf
sahf
mov
cmp
add
inc
decl
shll
pop
mov
cli
fiaddl
mov
stos
and
fadds
mov
dec
jmp
in
mov
and
frstor
addr16
cmc
or
mov
pushl
add
xor
and
xchg
mov
push
inc
cmc
xor
sbbb
pop
jbe
xchg
jo
cmpsb
mov
insl
pushl
cmc
aaa
push
lret
inc
mov
mull
cwtl
pop
rorb
pop
aad
cmpsb
int3
sub
jno
hlt
inc
xchg
jno
or
lods
nop
std
cmp
jbe
xchg
jg
cmpsl
mov
mov
sub
cmpb
xchg
pop
nop
sub
sub
loope
stos
xchg
cmpsb
pushf
xchg
or
jp
clc
jmp
es
or
cli
mov
cwtl
jecxz
mov
pop
pop
js
inc
xor
cmp
pop
aaa
sbb
dec
out
sub
lahf
adc
jg
mov
xor
aaa
push
lds
loop
push
mov
mov
ds
push
aas
push
enter
adc
mov
test
pop
adc
push
in
cmp
mov
es
dec
mov
jle
pop
add
test
sarl
int
pop
mov
mov
adc
mov
mov
inc
cs
sbb
lret
mov
int
mov
sarb
xor
add
adc
sarb
fbstp
dec
jno
sbb
and
dec
add
in
sti
xor
test
mov
sbb
sbb
adc
inc
pop
mov
push
adcb
movsb
test
jle
rolb
cld
shr
in
mov
push
pop
scas
cmp
mov
mov
ja
lret
jo
dec
in
dec
ficompl
dec
subl
sbb
mov
adc
out
cmp
push
aaa
cltd
andb
lcall
mov
xchg
push
sub
sbb
lock
push
mov
push
mov
popf
jns
sbb
clc
fisubrl
xor
inc
mov
adc
outsb
subb
insb
lcall
cmc
mov
inc
sub
iret
jmp
in
das
lcall
and
jo
mov
stos
loopne
pop
push
daa
daa
out
or
insl
inc
outsb
mov
movsl
xor
or
xor
stos
insb
fwait
sub
cmp
popf
push
xchg
arpl
mov
repnz
ret
lahf
pop
push
push
push
ss
nop
mov
cmpsl
out
mov
xor
and
data16
push
flds
ljmp
ds
inc
jmp
push
movsb
mov
pop
into
ljmp
mov
mov
popa
rorl
inc
cmp
sub
arpl
xchg
sub
subb
push
repz
call
repnz
and
jg
mov
nop
test
adc
sub
loop
sbb
pop
insb
pop
and
dec
jmp
mov
clc
pushf
cld
in
sbb
xor
pop
xor
xor
mov
xlat
xlat
insl
movsl
int
xchg
shlb
jb
mov
aam
push
fwait
dec
pop
and
jmp
jno
jae
adc
ljmp
xorl
pop
xchg
pop
adc
nop
scas
jg
adcl
add
mov
adc
mov
and
mov
gs
and
sbb
jo
jmp
add
push
movsl
test
aad
mov
lcall
mov
push
add
push
pop
lock
daa
popf
pushf
frstor
sarb
xchg
cmp
or
sub
std
fstpl
sub
adc
sarb
jbe
stos
int3
clc
dec
jno
mov
jecxz
call
shrl
addb
divl
inc
in
mov
push
nop
mov
lods
movsb
int3
int3
call
mov
sahf
and
push
jl
xchg
mov
add
adc
in
frstor
push
xor
cwtl
add
enter
jp
push
mov
lock
mov
sbbl
inc
mov
in
mov
jge
dec
xchg
or
mov
mov
xchg
lods
mov
movsl
and
loope
insl
cmpsb
pushf
mov
lret
sub
in
xor
hlt
mov
ret
and
stos
notl
jle
inc
das
jp
xlat
mov
jmp
cmp
scas
mov
jae
ffree
and
xchg
scas
push
pop
mov
in
imul
in
ds
dec
or
jge
pop
pop
dec
adc
push
mov
shlb
icebp
cmp
jecxz
mov
sub
and
movsb
js
shlb
jle
push
movsb
es
or
adc
and
decl
lcall
cmpsb
pop
js
jae
cmp
push
xor
or
movsl
std
xchg
mov
sub
mov
dec
cmpb
jnp
mov
and
xchg
movl
cwtl
in
inc
loopne
ret
mov
or
mov
out
xchg
loope
mov
je
add
sti
pop
push
cmp
cmp
into
cmpsl
dec
adc
add
aaa
pop
dec
cmp
aam
xchg
repnz
mov
iret
cmp
mov
dec
jp
add
sub
push
xchg
xchg
and
mov
push
scas
pop
xor
mov
pop
cmp
int
das
pop
leave
sub
insb
dec
adc
out
push
cmc
push
xchg
test
pop
imull
nop
pop
jg
aaa
fucomi
mov
sub
jge
add
lret
gs
inc
sub
repnz
sbb
push
push
stos
or
cmpsb
ds
stos
fiaddl
dec
and
xor
pushf
lds
jbe
shll
jbe
andl
pop
inc
mov
sbb
movsb
sbb
xchg
sub
ljmp
adc
int3
out
jp
popa
push
and
cltd
leave
jecxz
enter
shlb
rol
imul
iret
cmp
add
pop
mov
xor
or
mov
adc
rcr
cs
cmp
jne
push
jo
mov
dec
sub
xor
adc
out
add
movsb
jmp
bound
mov
sbb
outsb
stos
jne
popa
jl
inc
js
mov
inc
sub
pop
dec
xor
faddl
and
sarl
xchg
cltd
jmp
imul
inc
std
or
jb
or
sub
pusha
mov
pop
fs
xor
ret
test
jp
jp
cli
or
repz
fcoms
xchg
fwait
pop
std
sbb
sbb
loopne
ret
out
das
pop
test
xchg
xor
and
sbb
loopne
pop
outsl
xchg
pop
test
inc
or
lcall
lahf
push
loop
dec
rol
ret
test
scas
mov
shll
jl
popf
loopne
shll
push
mov
sub
int3
insl
fmuls
aad
lea
scas
enter
inc
push
popf
dec
xchg
rorl
mov
popa
popf
sbb
dec
cmp
sub
arpl
fmull
cmp
or
pushf
add
pop
call
mov
mov
popa
call
push
stc
cltd
xchg
aad
or
mov
inc
sub
jge
push
subb
in
fnclex
in
xor
lock
mov
mov
enter
outsl
and
adc
jl
mov
and
xchg
sbb
xorl
dec
sbb
mov
test
cmpsb
dec
xor
mov
movsb
mov
aaa
push
sbb
inc
subb
push
or
enter
pop
inc
pop
popf
adc
insb
mov
inc
jl
sbb
out
lods
arpl
push
repz
xchg
cmp
adc
mov
pop
push
mov
dec
sbb
sub
pop
or
inc
jp
pop
mov
lcall
pop
dec
test
push
addb
and
push
ss
pop
dec
inc
pop
test
mov
mov
xor
jl
jg
jle
jg
pop
cwtl
cmpsl
mov
fnstenv
cltd
lcall
push
std
sub
outsl
inc
mov
inc
lea
lahf
push
mov
fisubrl
addr16
jge
inc
jmp
add
test
sub
and
sub
sbb
sbb
cmp
adc
dec
mov
sub
jmp
cmp
mov
push
bnd
cld
inc
mov
xor
or
mov
jge
pop
adc
mov
cs
sahf
jg
or
cmp
aas
sub
out
xchg
adc
sub
dec
cmp
rcll
idivl
stc
inc
adc
add
jno
and
int3
dec
sub
adc
addb
stc
adc
adc
add
int
push
jp
pop
jae
xchg
mov
addr16
push
lock
pusha
rcrl
addr16
jmp
xor
es
int
imul
and
pop
in
adc
jbe
sub
adc
bound
clc
inc
jne
xor
and
add
mov
sbb
lock
outsl
jle
push
in
out
xor
test
pop
push
fbstp
lahf
or
fistl
jns
pushf
fstpt
adc
imul
stos
test
jl
xchg
out
rolb
aam
adc
mov
fdiv
mov
scas
cld
cmp
pop
sbb
loope
mov
sub
mov
femms
sahf
mov
mov
fists
mov
or
mov
push
repnz
cmp
inc
ret
dec
es
sbb
in
sbbl
pop
fldenv
jae
push
dec
xor
movb
addb
nop
fldt
iret
mov
jl
add
pushf
add
pop
int
into
jno
jecxz
inc
jp
sarb
or
imul
adcl
nop
lds
adc
test
sub
fstpl
mov
push
ss
jne
jge
arpl
ret
stos
stos
add
out
add
inc
out
call
dec
push
lds
or
les
fistpl
jecxz
pushf
dec
mov
push
mov
roll
mov
xchg
insl
out
stc
icebp
cltd
dec
aas
sbb
adc
xchg
cmpsb
and
push
push
mov
sbb
pusha
sub
sub
sbbb
xor
icebp
push
hlt
das
mov
or
mov
jnp
bswap
mov
xor
xchg
aas
lods
jne
aam
mov
andb
sbb
xchg
xor
inc
and
mov
jne
mov
je
popa
or
stc
cltd
push
ds
in
inc
fwait
test
push
inc
leave
mov
fnstcw
in
in
cmp
jns
sbb
inc
sahf
test
daa
rcrl
mov
sub
enter
xchg
into
das
scas
lea
and
outsb
or
sub
dec
or
sbb
dec
push
xor
imulb
or
mov
jl
mov
add
sahf
push
mov
jns
filds
cs
lret
shrb
jmp
in
fwait
lock
xor
ds
mov
fisttps
aad
push
pop
hlt
ljmp
push
loopne
jmp
cmp
and
loope
sahf
mov
or
aas
adc
adc
in
cmpsb
xchg
xor
test
pop
daa
sbb
xchg
popa
scas
push
mov
mov
cmp
push
sbb
icebp
jl
add
popf
jne
pusha
xor
test
rclb
xor
push
aaa
mov
jl
dec
xchg
std
xchg
push
in
sbbw
cmp
push
sbb
jne
fisubrs
or
pop
sub
jge
cmpsb
imul
inc
fs
sub
sub
xor
mov
fcomip
sbb
add
repz
inc
adc
std
xchg
inc
or
arpl
push
fsubp
mov
mov
jo
adc
fistpll
inc
daa
iret
cltd
test
lahf
dec
popa
popf
popf
xchg
das
aaa
cmp
xchg
es
sahf
cmp
int
repz
ret
rorb
or
add
fdivs
cmp
inc
fdivl
xchg
cmp
neg
dec
sbb
jmp
ror
jns
pop
bound
es
testl
sbb
add
fs
dec
mov
addl
add
push
out
pop
fstpt
data16
lret
mov
aam
cwtl
push
mov
cwtl
sbb
push
test
mov
iret
or
emms
xchg
or
push
fisubrl
pop
xor
xbegin
push
fidivs
lcall
scas
lret
sahf
mov
icebp
mov
inc
push
push
cwtl
call
pop
cmp
rolb
cltd
lret
inc
les
xchg
mov
sbb
lds
js
outsb
outsl
mov
mov
iret
ljmp
rcl
mov
or
lods
rcrb
xor
pushf
loop
es
daa
fstpt
push
push
sahf
mov
cmp
mov
pop
popa
movsb
testb
loop
xchg
mov
leave
subb
inc
sbb
call
cmpb
push
imul
les
ret
sahf
mov
loop
mov
push
inc
cmp
test
mov
mov
scas
mov
stc
add
out
sbb
sti
mov
sbb
lods
fimull
cs
sbb
jp
mov
stos
popa
jl
add
or
loop
aaa
sub
stos
andl
mov
out
xor
mov
adc
cmp
xchg
push
push
out
push
std
push
out
jle
shll
std
push
xor
scas
pop
and
nop
jp
dec
std
push
push
ljmp
ljmp
div
mov
mov
or
and
lahf
rcl
mov
imul
frstor
pop
pop
mov
hlt
xchg
out
inc
cli
ja
or
mov
push
xor
push
stos
popa
ret
adc
pop
insb
cmp
sbb
outsb
cltd
rol
pushf
ror
xor
inc
mov
insb
cmp
je
add
loope
outsl
xchg
aas
test
popa
aad
into
push
xchg
mov
lods
lahf
mov
pushf
in
aam
lahf
shlb
fdivl
pop
xchg
sbbb
scas
mov
fcmovu
sub
cs
cmp
sub
and
adc
lea
mov
mov
addr16
call
jmp
andb
out
dec
inc
xchg
imul
cmc
aam
and
mov
xor
test
je
mov
xchg
aaa
cwtl
lret
leave
mov
jae
fcmovbe
pop
dec
repz
in
test
cli
sbb
ljmp
mov
add
push
adc
xor
push
push
jno
or
push
out
inc
dec
enter
fiaddl
sbb
adc
dec
int
cmp
mov
rcrb
xchg
aas
inc
repnz
cmp
fwait
es
leave
shll
jmp
inc
mov
nop
sbb
mov
je
cli
xchg
mov
dec
fdivrs
clc
aaa
enter
nop
cmc
and
lcall
jo
push
ljmp
inc
sbb
loope
jl
test
inc
mov
ljmp
test
stos
imul
mov
bsr
or
jl
jl
enter
jo
aad
cmp
sbb
imul
mulb
ds
push
or
pop
mov
js
out
addr16
pop
sub
sahf
pushl
in
push
sbbb
jmp
xor
movsw
dec
ss
lods
jle
mov
out
mov
xchg
mov
loope
fistpl
mov
sbb
mov
cmc
push
outsb
push
or
dec
test
or
decl
push
sub
dec
roll
jnp
sub
push
cld
lret
jmp
call
push
jb
lds
inc
insb
and
sahf
cmpsl
sub
sbb
inc
std
daa
in
dec
jl
push
jne
stc
xchg
sbb
mulb
test
enter
subl
and
out
fnstcw
sub
orb
pop
fldl
js
idivb
mov
add
std
jge
dec
in
dec
dec
aad
das
inc
test
jne
fimull
cmp
js
stos
xor
sar
xchg
pop
pop
dec
scas
inc
loope
es
adc
lahf
sub
and
push
sbb
in
xor
out
xor
and
pop
pop
sbb
mov
adc
lea
in
mov
lock
pusha
lods
jae
idivb
xchg
dec
jp
and
sbb
icebp
add
mov
mov
xor
mov
xor
inc
push
clc
test
adc
or
inc
xchg
sti
jno
inc
pop
mov
mov
cli
jge
adc
in
add
rorl
or
jne
sahf
sarl
outsl
sbb
dec
cmp
je
clc
les
dec
add
cmpsl
or
pop
pop
xchg
int3
pop
test
inc
call
push
xlat
das
fstl
jb
stos
cmp
inc
stos
jne
and
push
sub
mov
hlt
pop
mov
push
inc
cs
clc
xor
add
mov
add
aam
clc
adc
movsb
nop
cmovp
shll
or
test
mov
std
or
jg
adc
adc
insl
out
pusha
add
int
test
orb
rcrl
xorb
sub
jbe
roll
out
fwait
sub
iret
int3
sbb
mov
xchg
lret
fwait
jo
push
push
or
sub
mov
stc
ljmp
sub
hlt
sub
es
out
clc
cwtl
push
sahf
pop
mov
movsl
add
xchg
sahf
dec
insb
jl
aaa
icebp
aaa
or
std
arpl
pop
enter
pop
push
jge
aad
dec
scas
pop
mov
frndint
inc
idivb
cld
cli
mov
mov
pop
insb
push
jp
or
sub
cmp
int3
lret
in
ljmp
lods
stos
mov
pop
insb
push
jp
or
sub
cmp
int3
lret
in
ljmp
lods
stos
mov
pop
insb
push
jle
or
sub
cmp
int3
into
in
out
cld
cli
mov
mov
lock
push
or
rcll
inc
pop
test
js
push
mov
fildl
call
adc
pop
test
js
push
aad
in
cmc
fadds
call
push
mov
test
js
push
aad
in
cmc
fdivrs
jmp
mov
xor
sti
add
jne
test
loope
roll
pop
add
shl
mov
inc
repnz
add
mov
mov
xchg
sub
jmp
inc
jne
and
mov
out
gs
mov
push
and
dec
xchg
ficompl
loop
je
vpor
and
cltd
inc
add
lcall
mov
test
sub
inc
add
fistl
lret
mov
or
int
std
jae
dec
out
sub
les
mov
adc
fldenv
enter
inc
fs
add
shlb
adc
cmp
cli
lea
and
mov
fwait
test
js
push
aad
in
cmc
fadds
call
push
mov
call
repz
addr16
push
subb
dec
lods
pop
push
sub
sub
out
adc
les
sbb
inc
sti
jge
insl
cmc
stos
inc
scas
jns
jae
pop
outsl
sub
cmp
adc
sbb
aad
loope
rorl
aad
in
cmc
fadds
call
push
mov
test
js
push
aad
in
cmc
fadds
call
push
mov
test
and
pop
fs
push
sbb
rol
jle
jae
imul
iret
xchg
daa
ret
xor
xchg
push
sub
mov
rorl
movsl
mov
jl
lods
jb
jmp
cmp
push
rolb
lea
outsl
lret
jge
jmp
mov
lcall
stos
lods
shlb
pop
xchg
push
cmp
sti
push
fcomp
insl
push
movsl
push
jo
cwtl
push
js
mov
add
outsl
and
dec
and
sbb
jo
jnp
add
mov
fiaddl
xchg
inc
and
fdivrs
hlt
call
sub
imul
cld
std
stc
or
inc
lods
jge
test
mov
xchg
xor
arpl
xchg
cmp
xlat
pop
popa
aam
cli
int3
and
cli
push
adc
dec
sub
cmp
inc
inc
push
pop
test
ret
lcall
adc
stos
fsubl
in
dec
rclb
push
and
hlt
mov
cmp
or
adc
cmp
sbb
pop
or
mov
adc
mov
sub
jecxz
push
add
push
out
into
pop
sub
mov
xor
xlat
test
xchg
lock
sub
jle
lds
inc
cmp
in
cmp
pop
pop
inc
repnz
sub
sub
inc
add
xchg
sub
bound
mov
addr16
sbb
test
repnz
xchg
push
rolb
imul
cmp
fdivs
mov
lock
outsb
movsl
pop
mov
fwait
mov
shlb
dec
jecxz
stos
cli
mov
mov
shlb
sarl
xchg
test
inc
jb
mov
cmp
mov
fbstp
test
outsl
pop
imul
inc
xchg
cmp
lret
inc
cmp
lcall
fs
inc
sbb
aam
leave
xor
or
lds
ret
or
xchg
adc
push
inc
pop
ficompl
sub
add
xchg
fidivrs
mov
push
cmp
push
in
mov
dec
out
mov
adc
into
ret
adcl
mov
fisttpl
pop
inc
movsl
mov
push
mov
inc
sub
mov
js
sbb
dec
int3
and
mov
ds
outsl
ret
shrb
sbb
enter
aad
or
mov
hlt
pop
adc
pusha
xor
cmpsl
mov
mov
loopne
in
adc
pusha
cmovs
ljmp
xlat
dec
cld
cmp
xchg
xor
loopne
pop
dec
lock
jecxz
mov
loope
jae
and
imul
pop
movsb
pop
and
ret
push
or
pop
rclb
fidivs
in
out
jg
pop
cltd
mov
fdivl
mov
mov
clc
insb
cmp
jge
mov
movsb
cmp
fsubrs
daa
mov
sbb
xor
jge
rorb
xchg
push
dec
das
mov
psubw
dec
cli
add
bound
cltd
loop
sub
pop
xor
cltd
add
paddq
sbb
dec
leave
dec
sbb
dec
mov
mov
loopne
mov
adc
out
jae
dec
dec
dec
or
test
inc
fsubl
out
outsl
je
lock
and
xor
insb
jne
int
mov
pop
in
sub
subb
lea
rorl
pop
push
jno
xlat
iret
pop
cli
lods
push
jns
dec
insl
push
int3
mov
push
pop
stos
in
add
subl
and
mov
aaa
jecxz
xchg
bswap
jp
pop
jo
dec
cmc
add
cmp
in
sbb
lret
mov
push
mov
clc
ss
and
and
test
test
addb
fmuls
jo
add
and
test
lods
adc
add
pop
std
sbb
inc
jl
or
push
push
xchg
lods
fadd
cs
fnsave
jnp
sub
dec
or
inc
int3
and
mov
fidivl
xchg
pop
xlat
or
adc
fildl
jmp
scas
sub
and
vmovntps
fsubrl
arpl
out
sahf
sti
roll
jo
lret
cmpsl
push
je,pn
fs
sbb
dec
hlt
push
idivl
dec
push
jmp
add
bswap
jmp
xchg
sub
adc
sub
stos
xchg
mov
xlat
mov
mov
insl
or
push
jge
xor
mov
das
test
sub
cmp
jae
push
adc
outsb
sub
sbb
es
out
add
jb
aad
sbb
call
push
aas
mov
jge
ret
pop
enter
cmp
xchg
bound
push
mov
leave
frstor
insl
test
icebp
jae
adc
pop
sub
mov
pop
rol
xchg
scas
pop
dec
aam
nop
sbb
pop
imul
dec
pop
in
lods
push
icebp
lea
jmp
dec
inc
add
pop
data16
out
loope
daa
mov
fimuls
and
and
sub
cmp
pop
test
xlat
mov
shlb
roll
mov
or
outsb
das
fisttpll
pop
fwait
mov
pop
push
int3
insl
lods
pop
scas
cmp
mov
sbb
iret
inc
and
cmp
cmpsl
mov
xchg
test
or
aas
or
or
mov
jns
mov
adc
push
mov
pop
fisttpll
fidivrs
fdivrs
insl
popf
adc
int3
push
mov
enter
xchg
jne
xor
js
repnz
pop
inc
lock
popa
xchg
pop
ds
loope
mov
xor
frstor
sub
es
les
pop
mov
push
mov
xchg
sbb
inc
xchg
mov
sub
xor
push
ds
xor
shlb
mov
cmpsl
dec
push
inc
std
in
test
mov
leave
jge
pop
xchg
dec
jl
push
dec
jae
fwait
and
lahf
aam
add
popa
cltd
and
cltd
cmp
sub
fs
filds
aad
sahf
rorl
lods
add
or
cmp
imul
sbb
outsb
das
jl
and
das
arpl
pop
lea
cs
mov
test
popf
in
movsb
jns
and
mov
test
insb
xchg
xor
js
je
adc
or
mov
mov
mov
mov
xor
dec
mov
inc
xor
lds
les
outsb
pop
dec
or
pop
xchg
pop
cltd
push
push
xor
jp
rcrl
sub
adc
sbb
fists
rorl
test
mov
cli
in
push
push
in
jp,pt
push
imul
and
out
jp
pop
lods
add
ljmp
dec
into
mov
xchg
in
mov
jbe
cwtl
sbb
push
icebp
ret
jmp
jb
add
and
add
out
jecxz
mov
fimull
or
lods
fs
mov
or
jo
inc
rcrb
inc
leave
bnd
movl
inc
cltd
jo
dec
push
mov
out
sub
mov
jns
jae
popf
in
pop
ret
out
jp
movsb
push
imul
imul
mov
pop
xchg
cmp
js
dec
jle
scas
mov
or
mov
pavgb
test
sbb
fsubp
leave
dec
filds
sahf
xchg
and
inc
dec
icebp
mov
xchg
fwait
sub
xorb
shll
push
inc
movsb
sub
pushf
mov
mov
ds
xchg
es
xchg
pop
jb
push
jmp
loopne
in
popf
int3
fidivrl
out
lods
xchg
or
int
daa
cld
mov
push
rol
loope
pop
push
jmp
add
scas
movsb
mul
mov
mov
sti
inc
push
mov
add
popa
jb
jmp
test
lcall
int3
jb
xor
out
mov
jle
mov
out
xchg
nop
sbb
loopne
enter
shlb
push
pop
into
or
hlt
mov
inc
adc
push
inc
je
cmpsb
les
xchg
fdivr
push
je
aam
fisttpl
push
jo
push
add
jo
mov
and
out
notl
sti
rol
std
add
stos
mov
xchg
shrl
mov
cmpsb
or
and
out
iret
loope
xor
cmp
cmpsb
inc
movsl
imul
inc
add
jne
xor
aas
addb
ret
shl
shrl
enter
inc
sub
nop
pop
fwait
add
popf
insl
popf
into
std
sbb
rolb
mov
jp
cwtl
ret
cmp
jo
fsubr
dec
dec
test
das
lods
mov
xlat
or
jbe
mov
xchg
sub
es
adc
push
inc
test
push
imulb
shll
pop
test
push
xchg
add
outsw
sub
test
and
dec
sbb
cli
sub
stc
sbb
mov
inc
int
and
push
outsb
mov
lods
pop
sarl
nop
push
cmpsb
outsb
movsl
outsb
xchg
lds
jmp
pop
dec
loope
jmp
or
mov
push
in
or
mov
add
xchg
hlt
ror
jp
popa
pop
test
cmp
push
dec
ja
push
adc
imul
popa
mov
sahf
inc
cmp
fstpt
push
inc
sub
loop
cmp
test
in
shrb
lret
leave
sub
mov
call
out
leave
jnp
rcrl
fwait
enter
lret
outsb
dec
insb
push
aaa
cmp
mov
jle
cmp
push
iret
cs
push
mov
popa
leave
aad
jo
in
push
push
adc
cmpl
inc
jmp
movsb
add
sbbb
stc
cmc
jle
and
andl
add
cwtl
movsb
jecxz
movsl
jp
rcrb
leave
mov
or
out
ret
or
lods
iret
mov
mov
xchg
fsub
or
mov
or
mov
pop
es
fsubrs
nop
out
sub
imul
sub
incl
dec
stos
aas
movsb
mov
test
mov
cmp
fcoml
jne
data16
aam
mov
aaa
ljmp
mov
sbb
mov
div
push
and
lret
cwtl
inc
pop
or
dec
daa
js
xor
iret
cld
mov
cmp
xor
mov
pop
add
sub
jle
inc
out
and
and
pop
dec
pop
repz
imul
xchg
mov
or
jp
ja
pop
stos
rol
sub
or
rcll
das
ret
inc
cmp
lea
mov
ljmp
mov
mov
addl
call
sti
nop
cmp
and
sbb
xchg
add
out
lods
hlt
ss
les
call
and
push
mov
cmc
mov
xor
and
and
lcall
push
pop
dec
lods
cmp
jle
div
insl
push
inc
xchg
push
mov
jge
mov
mov
xorl
ss
jle
rcrb
xor
into
iret
into
or
and
int
jnp
arpl
inc
int
andl
insb
sbb
push
fistpll
std
sbb
rorl
jecxz
cmpl
rol
ret
inc
movsl
push
movsb
mov
mov
sbb
popa
cs
push
sbb
adc
lahf
subl
mov
mov
fcompl
mov
jle
jecxz
aam
addr16
shll
xchg
jecxz
clc
aad
aam
sub
ja
arpl
xor
cmp
mov
gs
sub
pushf
rcr
mov
xchg
setns
stos
mov
xchg
aaa
out
outsl
leave
jne
insl
cmp
mov
xchg
movsb
into
mov
jbe
xchg
sub
movsb
cs
lock
test
arpl
mov
sbb
sbb
into
bound
je,pn
add
aad
fstps
ds
fdivl
jbe
into
rolb
cld
mov
test
jp
mov
pop
les
in
sbb
jne
and
add
loopne
clc
mov
cs
cwtl
int
sub
lret
daa
mov
test
in
mov
pushf
add
jecxz
fsubrl
pop
mov
test
call
cmp
cmpsl
push
orl
pop
lea
mov
push
scas
xchg
hlt
fidivs
xor
push
dec
pop
jns
cmpb
aad
sbb
jae
add
cmp
mov
cmpl
stos
push
inc
out
mov
adc
xor
add
subb
imul
push
mov
popa
jne
sbb
and
int
int
fucomip
mov
push
in
iret
xor
xchg
sti
sbb
in
xchg
or
notl
das
out
sub
cwtl
ss
repz
add
sarl
xchg
mov
lahf
add
mov
lret
xchg
orb
test
loopne
adcb
pop
dec
stc
mov
mov
inc
pusha
in
sbb
fs
cmp
repnz
shll
ljmp
mov
repz
ja
pop
dec
outsl
add
xor
jne
add
xchg
mov
mov
mov
cmc
jne
adc
mov
test
mov
xchg
aad
xorb
adc
push
or
push
jne
stos
sub
jne
cmp
cmp
leave
gs
imul
andb
scas
cld
push
adc
ret
loop
inc
xchg
mov
ljmp
dec
dec
icebp
clc
push
inc
dec
add
lahf
data16
arpl
xchg
add
or
inc
arpl
xchg
dec
shl
out
leave
sub
xor
sbbb
aam
cmp
dec
pop
mov
movsb
rcl
dec
dec
xchg
repz
out
adc
mov
loope
adcl
mov
sar
inc
jnp
mov
xchg
stc
aam
cmp
mov
pusha
mov
jne
jmp
cmp
mov
aad
int
mov
lret
xchg
dec
dec
rorb
mov
pushf
sti
push
icebp
mov
sbb
mov
cs
add
testb
xor
and
insb
hlt
jp
lcall
adc
or
lret
dec
test
fstpl
stc
jecxz
fdivl
xor
push
inc
adc
loopne
add
inc
push
inc
jbe
fdivrl
jb
inc
push
mov
mov
push
clc
xchg
lcall
xor
clc
data16
pusha
lods
xor
mov
hlt
aad
mov
int3
jp
int3
or
imul
jne
outsl
cwtl
das
outsl
lods
mov
dec
mov
add
scas
jno
mov
fistl
mov
or
dec
cltd
rol
push
outsb
insb
pop
pusha
xchg
aam
aaa
push
cli
xchg
es
push
in
xchg
push
popl
outsl
scas
jo
repnz
xchg
lock
sub
in
dec
enter
mov
shlb
cmp
jb
jle
pop
fs
xchg
pop
daa
shl
sti
fldlg2
dec
aad
sub
fisttpl
mov
and
test
in
call
int3
and
fcompl
or
dec
shl
and
jl
fsubs
xor
xchg
jo
xor
lds
cwtl
ljmp
push
loope
roll
clc
mov
leave
sub
cmp
inc
and
ds
lcall
and
or
fstps
cs
and
jp
je
out
jo
cmpsb
mov
or
jle
cmc
sarb
jmp
shrl
outsb
ret
jl,pn
lret
hlt
pop
pop
bound
loop
inc
fcomp
lock
sbb
loop
jl
je
sub
in
repz
xchg
lret
mov
cmc
cmp
lcall
arpl
jmp
ja
xor
fdivs
adc
js
cmp
iret
mov
dec
and
or
dec
xor
xchg
push
and
xchg
cmp
inc
mov
test
cmc
cmp
add
sub
clc
and
fmuls
mov
rcrb
scas
ret
add
lds
lcall
jns
dec
sbb
mov
test
push
push
aas
mov
nop
mov
pop
aam
ja
test
jl
xchg
fistpll
inc
xor
mov
xor
xchg
rcl
xor
iret
ljmp
mov
lods
cmp
stos
cmc
fcmovbe
mov
mov
xchg
push
dec
das
push
pop
pop
fnsave
xchg
pushf
sub
xor
fnstenv
sbb
rcrb
dec
pop
ret
hlt
adc
scas
or
and
mov
in
cmp
push
mov
sub
sub
pop
shll
cli
jo
bound
xchg
pop
sbb
stos
xor
arpl
xorl
sub
test
xchg
pusha
inc
imul
cmp
jg
add
ja
ret
jp
mov
dec
sub
das
pushf
pushf
stos
push
cmpsl
lods
pop
push
rolb
cmp
scas
fdivs
adc
pmaxsw
decl
sbb
mov
ss
jp
push
loopne
pusha
outsb
pop
cli
adc
jbe
jae
outsb
loop
cmpsl
fmuls
inc
dec
repnz
decl
hlt
out
insl
xchg
cld
clc
pop
jle
sbb
hlt
mov
xchg
jl
inc
fsubrs
push
mov
pushf
push
add
pushf
and
pop
rol
andl
fsub
dec
inc
sub
jae
aaa
dec
int3
int
sub
imul
add
xchg
xchg
lcall
xchg
mov
sbb
pop
xchg
jge
dec
insb
inc
jge
cmpsb
push
shl
fisubrl
das
and
mov
fisubrl
pop
pop
les
stc
and
sahf
add
xchg
inc
test
pop
pop
cmp
fiadds
fdivr
xchg
adc
jp
aad
fs
cmp
sbb
or
in
inc
stos
sub
jmp
and
mov
out
xchg
dec
out
into
xor
cmp
cmp
jg
xor
sarb
test
sahf
push
jne
jl
mov
inc
xchg
xchg
loop
lds
scas
cmp
jg
sahf
cltd
jnp
in
cmp
and
popf
test
int3
mov
xchg
sub
xchg
xor
add
adc
clc
pop
in
jecxz
out
mov
add
dec
adc
lea
sarb
mov
clc
xchg
les
cmp
scas
push
insb
and
and
clc
mov
adc
into
ror
xor
negb
push
sbb
sub
mov
gs
inc
fwait
cmp
inc
mov
push
outsb
out
ficoms
lods
jnp
xchg
gs
jns
ds
pop
adc
xchg
mov
push
hlt
jnp
adc
bound
call
mov
daa
xor
aad
mov
cs
negl
sub
in
jmp
ja
sub
into
push
pop
lahf
mov
loop
sub
in
jge
mov
mov
lcall
mov
fs
in
cmp
rolb
out
mov
inc
cmp
lods
sub
mov
jle
iret
setl
jle,pt
shrb
and
sub
and
mov
pop
inc
aam
fdivl
rolb
lods
ljmp
cmp
daa
jp
xor
in
dec
cmp
cmp
hlt
mov
std
inc
das
test
and
aaa
in
ljmp
push
or
pop
xor
or
pop
and
test
jae
test
test
adc
mov
pop
mov
jge
idivb
inc
cwtl
test
mov
or
mov
or
fcomps
or
pop
adc
jnp
dec
jecxz
jl
mov
mov
cmp
lods
push
jle
in
inc
sub
or
mov
lock
xor
dec
in
insl
inc
inc
xor
test
sub
or
inc
int
jle
dec
ret
cltd
push
dec
push
inc
or
adc
in
je
ret
aam
aaa
lcall
push
or
cmp
icebp
xchg
out
or
int
sub
outsl
leave
push
xchg
fldcw
mov
inc
out
mov
out
pusha
jp
dec
test
adc
fnop
cmp
push
dec
imul
jge
outsl
in
push
or
xchg
ja
jns
pusha
stc
xor
scas
movsb
arpl
adc
test
mov
insl
jne
cmpsb
mov
subb
iret
sbb
mov
imul
inc
aad
sub
repz
jmp
push
dec
cmp
sbb
mov
pop
jl
xlat
cmp
scas
cmp
mov
loopne
sbb
clc
scas
pop
cmpsb
adc
cmp
arpl
sub
jo
jg
in
loope
aad
pushf
insb
mov
dec
stos
pop
cli
push
pop
push
ljmp
cmc
cmp
xchg
mov
dec
dec
addl
ljmp
dec
jne
dec
test
loope
or
test
enter
movsb
push
aad
in
cmc
fadds
call
push
mov
test
js
push
aad
in
cmc
fadds
call
push
mov
orl
sbb
or
cmp
sub
flds
jmp
push
mov
test
js
push
push
mov
cli
aaa
mov
out
int
stos
inc
lcall
std
or
sbb
call
shrl
pop
pop
test
insb
cltd
sbb
leave
sub
cmp
or
sbb
dec
lods
pop
pop
test
insl
cltd
fucomp
or
sub
cmp
or
sbb
dec
lods
pop
pop
add
adc
insl
cltd
sbb
mov
test
dec
push
scas
push
lcall
xorb
cs
jb
shrl
xchg
jg
mov
ljmp
mov
mov
adc
lea
sub
cwtl
jne
in
test
or
mov
push
sbb
dec
lods
fs
call
sub
mov
mov
lods
cmpsb
shlb
aad
jbe
leave
loop
dec
push
mov
leave
sub
out
push
call
out
clc
jbe
pop
dec
stc
repnz
and
data16
sbb
hlt
xor
mov
dec
cld
cmpb
cmp
or
sbb
dec
lods
pop
pop
test
insl
cltd
sbb
leave
sub
cmp
jns
pop
scas
or
sub
jge
adc
mov
imul
or
sbb
cmp
sbb
jg
insl
negb
arpl
mov
popa
cmpl
lods
pop
pop
test
insl
cltd
sbb
leave
sub
cmp
or
sbb
dec
lods
pop
pop
test
insl
cltd
sbb
leave
sub
jo
mov
pop
push
aaa
pop
lahf
sub
out
adc
sbb
mov
adc
out
push
jb
add
inc
shrb
out
dec
sbb
fnstsw
inc
popf
in
out
mov
xchg
aas
test
mov
pusha
rcrl
in
mov
mov
xor
mov
lock
popf
test
adc
call
addr16
and
adc
sbb
mov
sbb
push
xchg
dec
pushf
test
push
inc
cwtl
or
add
subl
inc
jmp
out
xor
iret
orl
inc
outsb
test
push
sbb
hlt
stos
push
fcompl
add
bnd
push
sbb
mov
jns
inc
arpl
sbb
rsm
xchg
or
jno
hlt
ret
jb
push
fcmovne
test
aad
mov
xchg
data16
sbb
cli
sub
mov
int
insl
pusha
cld
mov
jecxz
mov
inc
lcall
push
push
lds
cmp
sub
loop
pushf
movsb
mov
into
mov
push
add
mov
cmpb
lea
ljmp
push
mov
push
inc
xor
lcall
lods
cmp
stos
jno
jns
stos
stc
and
popa
and
mov
and
test
lods
fstpt
pop
or
imul
lret
cmpsl
cmpsl
ret
ret
pop
sbb
das
dec
shlb
xorl
dec
sub
jno
and
mov
cld
in
mov
sub
repnz
mov
stc
sub
jb
cmp
in
jge
fidivl
adc
mov
idiv
xor
stc
test
iret
mov
mov
cmp
fmull
and
shlb
push
in
scas
nop
xchg
xchg
jp
add
inc
loopne
fcoms
or
leave
cwtl
jbe
mov
inc
test
push
mov
pop
adc
rol
sahf
xchg
out
sub
xor
xchg
sti
aaa
andl
test
movsl
in
cmp
cmpsb
dec
pop
mov
std
aad
rcll
cld
stos
in
jmp
int
mov
imul
lds
and
xor
adc
and
movsb
sahf
cltd
outsl
out
inc
in
dec
adc
aad
or
jmp
mov
push
pusha
cmp
inc
loope
cmc
cmp
rorl
lret
push
xor
pop
imul
xchg
mov
mov
mov
dec
pop
data16
xlat
cmp
adc
je
adc
push
and
fs
push
add
rcl
sbb
xlat
and
addr16
scas
repz
or
ret
in
xchg
cli
cli
cld
and
fdivl
adc
cmp
pop
inc
popf
and
dec
ja
sbb
jle
mov
xchg
movsb
pusha
daa
mov
lcall
movsl
fstpt
data16
lret
dec
jle
fildll
xor
lds
sub
rcrb
daa
shlb
lcall
movsl
xchg
mov
mov
and
xchg
mov
fstpl
aaa
loopne
test
mov
jo
pop
fistps
pusha
push
or
adc
mov
jecxz
cmp
addb
ss
arpl
scas
cmp
fdivrp
push
xor
fdivl
xchg
gs
loop
js
popf
jl
clc
iret
xbegin
lock
int3
dec
loop
fwait
sbb
and
sub
mov
mov
dec
push
icebp
xchg
xchg
ja
dec
mov
push
push
inc
add
shl
push
mov
stos
cmpsb
ss
or
jle
mov
jo
pusha
jl
adc
test
das
mov
mov
icebp
push
sbb
hlt
jb
mov
test
lods
pop
cmp
sbb
jae
dec
shrl
lock
mov
mov
jo
push
sub
xchg
dec
jge
insb
pop
inc
ficompl
test
inc
fisubs
pop
iret
nop
or
sahf
mov
ja
dec
dec
imul
xchg
adcl
int3
inc
fs
dec
push
xchg
les
jp
pushf
addr16
pop
movsb
insl
addl
push
and
jecxz
ret
pop
sbb
or
aas
pop
xchg
roll
inc
and
cmp
xchg
mov
push
add
leave
fistps
sub
loopne
push
ljmp
lea
add
enter
pop
cltd
clc
into
fxch
and
fiaddl
pop
and
push
mov
push
push
clc
testl
out
subl
xchg
jg
push
xchg
mov
pop
divb
test
xchg
loop
mov
mov
loop
push
pop
mov
lds
leavew
iret
mov
clc
push
dec
addb
cwtl
sbb
push
inc
xor
fistpll
mov
test
ja
mov
jl
dec
addb
pushf
mov
ret
scas
mov
cmp
lea
mov
mulb
push
out
addl
add
jge
xor
adc
iret
in
mov
scas
mov
inc
test
add
aaa
push
mov
popa
int3
cmp
jecxz
es
push
stos
cmp
inc
xlat
nop
ljmp
test
push
cmc
cmpsl
mov
andl
lret
icebp
gs
jbe
ljmp
pop
add
mov
fs
movsb
out
rep
ret
jmp
mov
sub
mulb
pop
out
jmp
push
jo
pop
inc
xchg
stos
add
fsubrs
add
pop
icebp
sub
popa
sti
dec
lods
xchg
test
dec
stc
sub
xchg
jmp
in
jo
or
lret
test
and
int
mov
and
int3
dec
clc
mov
sub
inc
scas
push
jnp
daa
push
xchg
in
push
or
mov
xor
shlb
and
sbb
inc
cmp
mov
push
fwait
lret
xor
fists
mov
idivb
clc
inc
sbb
mov
ffreep
inc
dec
lret
add
addr16
loope
insl
std
mov
pushf
mov
adc
jmp
out
aam
mov
nop
cltd
in
dec
xor
inc
pop
mov
sub
and
inc
scas
mov
pop
jae
js
push
mov
mov
xchg
push
testb
push
es
push
lcall
and
into
jecxz
lahf
sbb
hlt
cmp
sti
push
jle
lcall
nop
add
scas
and
daa
pushf
lods
test
cmpsb
push
mov
add
xchg
ja
shll
insb
cmp
icebp
test
lahf
mov
cmp
push
mov
scas
push
in
mov
pusha
mov
jp
pop
fs
out
jg
jecxz
lret
lock
jecxz
fs
push
or
addr16
push
gs
mov
pop
and
jmp
xor
xor
fs
jae
jo
ret
mov
andb
mov
xor
mov
lods
arpl
xor
mov
aad
jno
dec
dec
pop
mov
test
jg
outsb
mov
jge
testl
cmp
dec
rorl
cmc
rol
loop
repz
xor
pop
ljmp
jg
push
insb
stos
push
fadds
fwait
ret
sub
cmp
pop
in
sub
daa
mov
pop
cmpl
nop
adc
in
adc
popf
or
punpckldq
jp
std
mov
xor
push
push
dec
push
sub
arpl
cmp
lret
int
clc
inc
pusha
mov
sbb
dec
test
js
jbe
mov
js
mov
cs
pop
mov
xor
das
add
es
hlt
das
jl
in
jb
decl
sbb
outsl
in
and
outsl
test
jbe
adc
adc
movsl
cmpsb
jne
pop
sub
jae
pushl
leave
adc
repnz
pop
sbb
aad
mov
push
sar
mov
lods
out
cwtl
enter
daa
and
pop
in
push
sub
pop
xchg
fdivl
dec
pop
push
outsb
fisttpll
or
in
mov
xchg
gs
adc
inc
loope
mov
push
jno
xchg
testl
mov
dec
pop
sub
pop
dec
mov
dec
roll
jmp
xor
mov
push
push
cmp
xchg
xor
mov
faddl
fdivrs
inc
xorb
repz
fst
imul
adc
push
adc
test
ret
pop
xor
mov
bound
xchg
pop
mov
mov
mov
inc
and
outsl
clc
ret
out
sub
push
xchg
push
popf
mov
mov
cs
mov
xchg
je
js
inc
mov
in
popa
gs
mov
xor
sub
or
ljmp
jne
pop
imul
and
addr16
sub
test
xor
je
jo
in
push
iret
push
dec
push
inc
cmp
je
bound
pop
outsl
rorb
push
sub
mov
jmp
notl
or
pusha
mov
jge
daa
ss
fmuls
movsl
mov
sub
dec
xchg
xor
call
xor
pop
cmp
sti
outsl
or
daa
repnz
xchg
xchg
pop
mov
outsb
dec
and
mov
add
jae
pop
in
xchg
push
cwtl
cmp
mov
adc
pop
jbe
scas
hlt
out
icebp
ret
jg
xchg
jnp
cmp
mov
fidivrl
or
movsl
pop
cmp
fstpl
lea
popl
andb
sub
outsb
or
jge
je
int
lods
shr
cmpsl
mov
pusha
sbb
call
dec
fsubs
and
stos
add
shl
jno
fcomps
or
out
loopne
sub
and
mov
dec
fs
push
repnz
inc
adc
dec
lock
add
jl
mov
rclb
jns
cmp
scas
idivl
cmpps
pop
pop
shrb
pop
fcomip
outsl
jo
gs
lods
mov
mov
sbb
rclb
out
cmp
xor
xor
outsl
mov
cmpps
enter
scas
insb
mov
adc
dec
pop
and
jns
fnstenv
call
adc
jae
or
jecxz
push
xchg
fldenv
mov
stos
ret
test
pop
mov
push
jnp
add
mov
outsb
sbb
sbb
into
rcll
inc
adc
shlb
scas
mov
xchg
jnp
loopne
xchg
xchg
outsl
sti
shlb
sub
inc
leave
or
dec
popf
mov
mov
popf
aaa
jmp
cmp
mov
sub
ret
rol
adc
mov
daa
outsl
ss
cltd
mov
cmp
mov
jno
outsb
test
ljmp
pushf
out
push
sbb
inc
sub
sahf
adc
and
ds
mov
push
mov
sahf
addb
mov
imul
fsubs
daa
mov
pop
adc
dec
or
ss
xchg
mov
shl
decl
or
jmp
sbb
aas
sbb
leave
jb
pop
xor
jmp
xchg
inc
call
cs
in
mov
push
mov
add
cmc
adc
xchg
test
cmp
call
repnz
ljmp
jmp
push
pop
sbb
pop
movsl
mov
das
fistl
iret
cli
in
jmp
pop
repz
pushf
or
imul
das
jns
lods
test
rcrb
aaa
jmp
scas
adc
mov
sbb
jo
pop
sti
adc
pop
rol
inc
push
clc
push
ret
cmp
in
movl
sub
enter
fwait
mov
adc
imul
add
xor
fists
cmp
cmp
cmp
arpl
jns
inc
add
gs
jg
push
div
js
xchg
bound
mulb
lret
mov
xor
xchg
imul
and
xchg
pop
mov
jne
testl
aam
sbb
mov
lea
jle
cmp
fnstcw
mov
aaa
aas
and
sub
movsl
outsb
and
insb
dec
lret
rorb
xor
in
adc
and
iret
pusha
mov
mov
sbb
insb
jmp
jmp
dec
jb
adc
repnz
or
push
call
sahf
or
aaa
jl
lea
lcall
and
inc
mov
jbe
jb
or
inc
imul
negl
adc
loope
mov
pop
aad
out
dec
out
ret
inc
or
jae
jb
inc
cmp
jle
pop
xchg
lcall
bswap
std
dec
dec
test
mov
je
fisubrs
push
test
mov
add
ja
xchg
pop
xchg
insb
lret
lods
mov
mov
push
xchg
hlt
dec
sub
mov
popf
push
pop
addr16
sar
or
pop
testl
rol
popf
xor
sbb
es
scas
lret
in
xor
sbb
daa
cmc
in
jns
xor
imul
mov
mov
iret
lds
adc
xor
add
lds
push
cmp
xchg
lock
jnp
call
and
jne
mov
jp
shll
lret
ret
mov
sti
mov
xchg
pop
shlb
dec
sub
adc
mov
scas
mov
pop
daa
scas
adc
jecxz
lods
int
addr16
lcall
daa
hlt
xchg
push
rcll
mov
mov
out
rol
jmp
inc
inc
and
je
lea
mov
or
push
and
imul
mov
sbb
fimuls
rcl
int
mov
faddp
mov
rcrb
mov
cltd
push
fs
xchg
jb
cwtl
sbb
mov
jmp
popf
inc
mov
gs
orb
cs
jmp
add
clc
mov
xor
push
inc
jg
in
lods
mov
push
push
cmp
mov
ss
push
jae
inc
sarb
mov
or
xchg
sbb
adc
pop
pop
push
stos
mov
enter
stos
movsb
lret
enter
test
loope
add
add
push
cmc
imul
mov
mov
icebp
ds
xchg
daa
icebp
inc
clc
into
cmp
xchg
adc
outsl
pop
adc
pop
ds
jmp
sbb
xchg
popf
sbb
ljmp
idivl
dec
pusha
shr
push
xchg
fsts
add
and
dec
orl
bound
xor
pop
xchg
sahf
rol
out
mov
bound
dec
push
cmpsl
or
loopne
sbb
ds
or
out
adc
mov
fdivrs
push
cwtl
dec
pop
jbe
testl
mov
xor
pop
loope
pushf
push
mov
in
jl
inc
cltd
mul
movsl
cmp
jno
in
cli
inc
xor
outsb
nop
enter
pop
and
aad
loopne
push
xchg
sbb
lcall
xor
rcr
imul
pop
je
dec
mov
shlb
xorb
xchg
push
in
cmpsb
lcall
into
adc
ja
inc
cmp
pop
out
xchg
push
push
mov
or
xchg
pop
jae
mov
or
sbb
nop
loope
out
cld
xchg
ja
icebp
lock
dec
mov
test
sbb
inc
test
into
jecxz
jae
mov
add
gs
lret
dec
push
sbb
outsb
dec
aas
mov
or
in
mov
or
cmp
cmp
adc
dec
sbb
roll
inc
fsubs
cwtl
cmpsb
dec
push
xchg
pop
aas
xor
and
je
xchg
mov
loop
or
inc
sbb
push
inc
pop
inc
push
mov
ss
push
dec
addr16
lret
imul
outsb
jge
jbe
lahf
pop
lahf
fs
mov
pop
mull
in
jp
pop
mov
fistl
jns
mov
mov
fxch
addr16
mov
mov
xor
pop
push
sub
test
push
push
imul
pushf
subl
pop
pop
push
test
sahf
inc
and
gs
mov
arpl
xchg
jge
loop
xchg
lret
adc
push
rorb
sub
push
gs
and
pop
and
push
adc
push
and
mov
repz
sub
sub
or
xor
cmp
xchg
adc
cmpsl
jae
mov
daa
xchg
test
jbe
or
jnp
jnp
jne
mov
or
inc
xor
pop
mov
lret
add
mov
xlat
fsubl
out
addr16
insl
xor
je
sarl
mov
ret
adc
push
lds
cmp
xchg
fneni(8087
bound
pop
shl
sub
ja
adc
xchg
mov
ficomps
enter
ret
xor
fmull
in
mov
jge
pushf
scas
fmull
fwait
ret
pmaddwd
in
fidivs
mov
test
mov
sbb
int
outsl
bound
sub
leave
dec
mov
lods
scas
or
mov
imul
pop
inc
in
idiv
sub
loope
inc
cmpsl
arpl
push
sbbl
stos
mov
or
push
jno
dec
xchg
inc
loopne
movsb
dec
fadd
test
sub
mov
dec
ret
into
dec
inc
insb
pop
or
mov
mov
fisubrl
fldt
fs
pop
std
push
mov
mov
xlat
and
jecxz
cmp
or
imul
add
adc
xlat
ds
and
or
bnd
inc
adc
cmpsl
stos
and
dec
and
in
aad
fs
sti
or
jae
sub
xor
lret
scas
dec
dec
add
jnp
lods
enter
add
jmp
rcrb
call
int
cmpsl
cltd
cmc
ds
pop
js
fucom
scas
pop
popf
test
inc
loop
xor
mov
ret
out
add
xlat
int
xor
int
cmp
aad
cmp
aas
clc
push
loopne
popf
icebp
into
je
inc
inc
and
out
xchg
ja
inc
iret
in
fcomps
div
jl
call
gs
mov
call
push
test
test
push
pop
push
mov
dec
cmp
loopne
loope
adc
dec
and
mov
mov
enter
inc
ret
lock
or
add
stos
mov
fcomps
dec
rclb
xchg
insb
cltd
fldenv
cld
jae
sub
jp
xchg
out
mov
std
pusha
notl
mov
mov
dec
dec
and
popa
lock
or
or
lods
in
inc
inc
or
in
pop
rolb
call
clc
mov
mov
aas
loopne
popf
cmc
outsb
pop
dec
les
add
shl
addr16
pop
xchg
inc
and
loopne
loopne
std
inc
aam
add
outsb
sahf
sub
test
test
push
iret
jnp
lods
mov
insl
push
clc
into
push
lods
and
or
mov
push
addr16
and
pop
jg
lods
notb
jge
lods
aad
pushf
adc
mov
pop
pop
and
pop
inc
fsubrl
loopne
mov
pop
xchg
and
pop
in
stos
ss
in
adc
or
inc
mov
rclb
mov
pushf
jno
insb
test
push
pop
and
push
sbb
mov
in
push
enter
push
je
mov
dec
push
xlat
inc
in
xchg
aaa
dec
int
out
test
fsubrs
popa
test
mov
mov
fisubrs
pop
mov
nop
mov
mov
fldt
cltd
add
push
test
add
sbb
aad
lcall
adc
roll
jnp
cmp
ja
rcrb
imul
dec
sbb
lods
jne
lahf
mov
mov
lcall
push
dec
je
test
adc
add
int
push
inc
mov
add
xchg
js
stc
ss
adc
pusha
loop
or
aaa
jbe
popa
xchg
nop
jnp
aam
push
jg
popf
or
repnz
fldenv
xor
lods
jnp
mov
xchg
shl
jl
add
cmp
add
sbb
dec
mov
mov
and
out
lret
outsl
mov
push
or
arpl
int3
test
insb
xor
test
ja
mov
fdivrl
idiv
fs
lret
sti
scas
cltd
imul
inc
sub
test
cmpsl
adc
fmulp
or
mov
roll
xchg
enter
cli
idiv
test
test
mov
nop
push
fwait
addr16
mov
rcrl
mov
jns
testl
adc
lret
cmp
jo
stos
jnp
and
std
mov
push
jmp
jno
dec
cmp
or
aaa
iret
push
shlb
push
popa
xor
xchg
cmp
popf
jnp
cmp
jle
jp
add
jnp
js
dec
iret
imul
or
sbb
dec
lods
pop
pop
test
insl
cltd
sbb
leave
sub
cmp
or
sbb
dec
lods
pop
pop
test
insl
cltd
sbb
leave
sub
mov
sbb
dec
sub
mov
sbb
leave
sub
cmp
or
sbb
dec
lods
pop
pop
test
insl
out
insl
popa
jge
dec
ss
es
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
popf
push
lea
imul
or
sbb
dec
jp
dec
insl
pop
popf
test
mov
fucomp
int
std
enter
sub
sbb
jge
jge
insl
pop
test
xchg
mov
aam
in
in
rolb
pop
bound
imul
adc
cmp
pop
hlt
test
mov
jae
aam
add
lret
push
xchg
dec
cmc
movsl
or
jb
vmovss
and
jmp
js
cwtl
or
rorl
or
dec
xchg
aad
test
jmp
push
mov
sub
mov
pop
dec
mov
jge
insl
dec
pushf
push
mov
and
int3
nop
add
in
daa
xchg
xlat
or
or
dec
xchg
mov
add
fisttpl
and
aad
mov
sbb
sub
fstpl
movsl
cmp
sbbb
jne
insl
add
and
in
loop
adcb
jge
sbb
xchg
insl
fcoml
dec
mov
call
hlt
pop
add
adc
push
inc
inc
push
andb
ss
cli
call
mov
pushf
stos
xchg
mov
in
mov
dec
jl
jno
pop
sub
or
cmp
in
in
stc
shr
fnstsw
std
cmpsb
mov
outsb
cmp
cmp
xor
sub
xor
loope
rcr
mov
clc
std
enter
sub
sbb
dec
js
dec
insl
pop
popf
test
mov
fucomp
int
std
enter
sub
sbb
dec
js
dec
insl
pop
popf
test
outsl
add
fidivs
xchg
sub
shrl
mov
or
push
sbb
ljmp
clc
adc
push
orl
and
pop
inc
lahf
xor
xchg
pop
mov
push
stos
xchg
inc
faddp
cmp
mov
pushf
cwtl
js
xchg
stos
mov
sbbb
and
push
js
fmulp
adc
outsl
int3
outsb
add
adc
shr
popf
or
mov
add
ss
shr
pusha
or
test
cmp
into
test
stos
ret
pop
pop
sbb
test
jno
jmp
dec
jg
push
roll
das
push
mov
fdivrp
xor
cmp
pop
cmp
dec
popf
xchg
mov
add
mov
mov
jl
cmp
sub
fs
insl
incb
sarl
xor
repz
sbb
push
mov
inc
repz
enter
and
mov
xor
loop
jae
mov
movsl
mov
scas
inc
lea
out
pop
adc
push
xor
hlt
shll
jb
loopne
mov
lock
sub
sbb
add
add
popa
xor
lods
push
into
mov
jae
in
sub
pop
inc
lcall
mov
inc
fsub
or
add
jae
sub
daa
push
jp
lahf
sub
cmc
ljmp
mov
hlt
daa
fisttpl
jae
and
or
jb
or
addr16
mov
pop
push
ljmp
cmc
sub
mov
test
inc
mov
mov
shll
push
mov
xor
mov
fcompl
cmp
push
rorb
insl
cwtl
adc
int3
loopne
pushf
sti
adc
popf
add
pusha
and
pop
loopne
out
data16
mov
es
sub
xor
jno
cs
jp
call
pop
xor
jle
and
lds
sbb
stos
shl
test
daa
pop
and
add
or
push
les
aas
sub
ljmp
push
or
dec
lcall
addr16
inc
xchg
scas
mov
cmpsb
pop
jno
adc
rcl
fnstenv
gs
sahf
pop
cmpsl
mov
in
insl
outsb
out
mov
mov
cli
mov
repz
cmpsl
adcl
mov
icebp
cmp
adc
or
cmpb
push
mov
cld
push
insb
push
int
and
rcl
sub
and
dec
cmpsb
fbld
pop
adc
repz
fs
xor
xchg
cmp
adc
push
cmp
jno
cli
sbb
jmp
mov
dec
dec
pusha
mov
fs
sub
popl
popf
fldenv
sub
cmc
insl
cmp
popl
leave
xchg
das
xlat
mov
mov
dec
add
xchg
lret
mov
and
sub
pusha
xchg
test
xor
sub
outsl
loop
popa
insb
jle
clc
sbb
js
fwait
inc
movsl
pusha
mov
jne
inc
or
in
jne
in
fcoms
lock
jne
idivl
gs
push
jae
mov
adc
ljmp
or
adc
push
js
push
lods
outsl
adc
jb
notb
xchg
shll
mov
lret
fsts
xor
imul
mov
sub
jns
arpl
addb
mov
or
mov
mov
int3
testb
fcmovne
dec
sub
loop
mov
insb
and
mov
or
movl
data16
pmaxub
pop
test
stos
in
xchg
test
ds
inc
sub
xor
xchg
lods
pushf
mov
popa
in
lcall
sub
and
adc
in
lock
and
orl
jge
aad
jnp
push
lods
push
ljmp
cs
adc
movsb
sbb
cltd
jp
les
add
es
repz
jmp
add
outsl
test
adc
sub
jbe
stc
add
cmpsb
rolb
inc
adc
or
push
sub
or
cmp
cwtl
sbb
in
data16
add
roll
xchg
jbe
cli
lods
adc
in
data16
mov
popa
movsb
lahf
das
or
push
mov
push
sub
data16
push
xchg
dec
leave
pop
add
mov
rcrb
and
pop
jg
out
hlt
or
stc
punpckhdq
xchg
sub
sub
cmp
nop
or
or
fdivr
push
cs
scas
add
pop
dec
mov
push
mov
push
sub
sub
sbb
add
out
cmpsb
out
dec
insl
cwtl
pop
inc
lods
cmp
cs
dec
cmp
xor
std
insl
pop
out
mov
lock
std
add
pop
ja
lods
lea
test
stos
loope
pop
aaa
mov
dec
or
pop
sub
sahf
xor
inc
xor
loope
int3
fsubs
ret
jo
ja
iret
nop
xor
or
sti
idivb
or
pop
faddl
mov
imul
mov
or
sbb
mov
jmp
jp
inc
cmpsb
subl
pop
fisubrs
frstor
mov
int3
call
xor
leave
data16
jbe
pop
cmp
shrb
jle
nop
push
xchg
lock
jbe
fwait
dec
pop
push
inc
xchg
call
pop
xor
mov
cmp
dec
outsb
hlt
or
xchg
call
data16
mov
push
push
xor
inc
sub
sbb
xor
das
cmp
test
jle,pt
or
jnp
jno
inc
push
cmp
push
test
rorb
stos
in
adc
stc
cwtl
mov
aaa
pop
mov
mov
inc
jle
lahf
cmp
inc
pop
cmp
xor
rolb
aas
es
icebp
dec
cmp
fwait
popf
icebp
adcb
xchg
pop
clc
outsl
test
inc
mov
adc
push
inc
lods
rcll
xchg
or
test
and
fsubl
test
and
inc
and
lea
mov
jg
dec
xor
and
popl
out
rclb
call
je
test
les
push
aas
jne
addr16
lods
xor
pop
mov
and
and
push
ss
mov
outsl
push
inc
push
inc
xchg
std
xlat
jns
pop
add
imul
lahf
movsl
mov
arpl
insb
into
scas
das
sbb
mov
out
or
add
mov
cmpsl
pop
fistps
out
ret
mov
or
ret
lret
and
sub
aaa
sub
ja
or
push
gs
test
and
inc
or
subb
xlat
shll
add
inc
sti
test
mov
and
idivb
sbb
lods
clc
inc
xchg
sub
mov
loop
push
adc
fdivrl
out
dec
into
inc
es
jmp
adc
fwait
xchg
jle
rcrb
cmpsl
jecxz
push
mov
in
out
jg
or
xor
ds
adc
or
add
shrl
daa
mov
xor
aaa
mov
rcr
add
pop
jbe
inc
repz
jo
jg
adc
pop
insl
ja
repz
mov
dec
inc
dec
add
aas
push
jns
push
ret
jne
mov
mov
lahf
decl
mov
outsb
mov
mov
or
rclb
arpl
pop
or
inc
loope,pn
jnp
sub
sub
pop
movsl
test
fstpl
in
push
scas
sbbb
pop
mov
xlat
cmp
mov
add
stc
sahf
sbb
lea
push
push
in
xor
jp
jae
sbb
cmp
inc
sahf
mov
xchg
out
push
test
sbb
shlb
std
sub
push
sub
mov
pop
fsubrs
cltd
dec
es
mov
hlt
iret
xchg
add
sbb
jecxz
lods
xchg
mov
or
ret
pop
adc
mov
sbb
inc
inc
mov
das
insb
nop
clc
push
mov
xchg
push
or
fildll
mov
lds
cld
test
and
or
jns
dec
mov
jo
lds
push
cmp
jl
movsl
pushf
jno
andl
add
xchg
imul
and
inc
and
clc
imul
sub
sti
xchg
xlat
imul
sub
push
test
mov
cmc
loopne
in
ret
insl
cld
cmp
shrl
daa
mov
ja
divl
push
lods
shrb
and
in
je
in
dec
rolb
cmc
mov
lods
lds
fdivl
dec
jecxz
call
jae
nop
rorl
mov
xor
lds
push
inc
icebp
add
cmp
sbb
lds
adc
out
push
adc
sbb
dec
jo
das
push
adc
xchg
repnz
stos
cmpsb
sub
rcll
mov
fstp
lods
jmp
je
test
sub
and
and
les
test
lret
mov
test
pop
push
xchg
lret
faddl
lcall
gs
stos
or
xchg
inc
sub
insb
call
nop
cmp
xchg
fildl
adc
jne
mov
leave
adcb
cmp
mov
adc
addl
and
stos
cmp
mov
or
rolb
mov
adc
insl
mov
adc
sbb
push
mov
adc
push
sbb
mov
mov
xchg
fwait
or
mov
out
int3
lret
aaa
mov
mov
dec
arpl
test
inc
add
lahf
jns
cmc
jg
loopne
scas
dec
jmp
push
rcl
xchg
mov
fldcw
sbb
mov
pop
xor
mov
cli
xchg
mov
jno
fdivrp
pop
push
xchg
movb
pop
stc
fildll
outsl
mov
inc
clc
mov
xor
push
dec
adc
mov
pop
xlat
xchg
aad
mov
icebp
nop
lea
out
mov
pop
xor
out
add
pop
dec
pop
mov
push
xchg
outsb
fnsave
fidivrl
inc
sahf
cmp
lods
pop
jb
ficoml
inc
mov
fs
movsb
pop
mov
dec
jecxz
or
fbld
push
jnp
lahf
inc
push
pop
jbe
adcb
or
aaa
jmp
cltd
dec
scas
or
inc
orl
pop
std
xor
and
int3
pop
dec
insl
xchg
orb
xchg
sub
inc
xor
mov
repz
mov
push
mov
movsb
insl
mov
push
mov
jp
sbb
xor
mov
jg
mov
sub
lret
xor
call
xchg
push
dec
test
or
test
cvtps2pd
adc
or
gs
add
jge
sbb
jne
push
sub
and
test
add
push
xchg
rolb
je
xor
push
ljmp
outsb
push
adc
push
cmp
inc
enter
pop
push
lret
ljmp
and
imul
xchg
daa
jmp
xor
xor
mov
fbld
or
fistpl
inc
outsl
int3
or
jbe
cmpsb
pop
jo
cmpsb
jmp
repz
adc
leave
je
add
jecxz
lods
adc
jge
mov
into
clc
sub
jae
inc
daa
jecxz
cltd
xor
insb
xchg
jbe
aam
xor
add
jle
lahf
cmp
clc
sbb
or
jb
dec
iret
bound
mov
jo
cmp
jb
popa
xor
nop
jns
push
dec
pop
stc
jl
addr16
cltd
lret
into
mov
insb
jno
insl
push
or
insl
mov
mov
je
jb
inc
ss
pushf
shl
out
sub
outsb
imulb
xchg
xchg
and
adc
pop
cmp
cli
mov
dec
sub
sbb
cmp
fistl
popa
xchg
mov
fidivs
das
ret
xchg
fistps
shlb
mov
xlat
stc
jp
push
out
cli
jl
mov
out
inc
fistpl
fdivrl
inc
test
in
les
sbb
imul
jae
pushf
push
in
dec
sbb
test
xor
inc
cmpsb
test
mov
or
stc
adc
xchg
js
mov
mov
repnz
mov
sbb
out
shll
inc
cmp
pusha
imul
int
inc
ficompl
sub
or
sub
stos
ret
push
ss
mov
push
jp
enter
pop
sti
push
std
jne
mov
rcr
jmp
mov
xchg
mov
sbb
rolb
xchg
xchg
inc
es
cmp
add
dec
or
clc
mov
arpl
ds
mov
aas
test
aas
andl
ret
ss
adc
sbb
mov
out
jnp
jle
mov
cmp
pop
sub
push
jnp
mov
aas
iret
dec
dec
out
dec
xor
mov
jmp
out
inc
rcrl
mov
dec
out
nop
lea
or
push
test
ja
aad
sti
pop
inc
xchg
cmp
ja
mov
ds
popf
mov
or
or
andl
lret
cltd
outsl
cmp
push
gs
sub
pop
cmpb
sar
mov
mov
xlat
aam
add
sub
jne
jg
xlat
cli
dec
xchg
mov
xlat
inc
mov
adc
popa
jl
push
fnstsw
push
std
mov
test
push
mov
fildll
out
pop
xchg
mov
sub
out
jle
cmp
mov
ficompl
shll
clc
pop
push
push
lcall
popa
and
push
mov
xchg
shl
lcall
mov
stos
aam
andl
pop
xor
mov
add
leave
mov
addr16
je
add
jns
int3
imul
mov
out
lock
in
int
insb
jno
mov
ret
mov
mov
dec
mov
jg
dec
adc
mov
outsl
call
jno
mov
xor
jbe
dec
or
or
xor
notb
and
dec
ja
leave
add
and
imull
sbb
out
insb
aam
jmp
mulb
test
ss
adc
push
sbb
and
mov
mov
loop
dec
inc
dec
repz
repnz
jg
mov
aam
pusha
out
jo
pop
rep
sub
push
cmp
mov
mov
add
mov
mov
lods
in
pop
jle
int3
xor
ljmp
xchg
cld
jmp
cmpsb
dec
into
mov
inc
add
sbb
pop
mov
push
mov
lret
push
cmpsl
lret
mov
cmp
xor
xor
cmp
xor
je
mov
decb
mov
into
in
inc
jae
lret
xchg
movsb
les
fs
fxch
push
add
jae
frstor
xchg
inc
daa
test
mov
hlt
xchg
aam
pop
add
inc
aaa
jmp
or
sbb
mov
inc
in
sub
lcall
pop
mov
cmp
jle
fsub
inc
pop
cwtl
iret
in
repz
ss
sub
ja
pop
bound
or
dec
cmp
clc
adcl
cmpsb
ss
call
insb
cmp
aaa
mov
or
cmp
sub
idivl
fadds
loopne
fsubl
mov
lock
movsb
sbb
mov
mov
ljmp
xchg
xchg
arpl
push
out
addb
test
pop
loopne
mov
xchg
mov
fs
ror
lcall
insb
xor
xchg
adc
cld
sahf
sub
push
pusha
adc
test
ss
push
lock
data16
lea
ljmp
sbb
add
sub
push
repnz
add
mov
mov
jmp
cmpl
lret
lock
sbb
fst
lock
add
test
xchg
xchg
jns
xchg
jecxz
mov
adc
adc
repz
testb
iret
ss
les
mulb
iret
ds
out
scas
jg
icebp
addb
add
jle
or
lret
int3
jg
pop
cmp
inc
leave
imul
movb
pop
gs
pop
shrl
inc
test
mov
xor
push
nop
pop
jge
les
sub
dec
mov
xor
sub
int
jae
pushf
dec
cmp
inc
or
cli
lods
int3
dec
sub
cmpsb
clc
sbb
out
fidivs
lret
arpl
pop
jge
je
scas
push
leave
mov
fnstsw
pushf
cmpb
jbe
and
dec
aaa
xchg
fistpl
mov
cmpsb
enter
sarl
jp
stc
add
repnz
lcall
shll
inc
jae
scas
ficoms
mov
xor
in
pop
sti
cmp
add
cld
xchg
stc
pop
add
jg
adc
call
cmc
xor
rclb
inc
rorb
and
mov
mov
loop
xlat
inc
adc
cli
in
sti
subb
ret
jmp
inc
sbb
pushf
adc
jno
fnsave
mov
fildl
xor
ret
and
mov
push
out
inc
test
outsb
popa
jmp
pop
adc
nop
fs
dec
pop
and
xchg
xchg
pop
insl
mov
add
inc
pop
mov
dec
lea
jnp
adc
cs
adc
negb
add
dec
mov
mov
jae
and
popa
in
cmp
add
inc
cmp
mov
dec
cmc
and
or
sbb
cmpb
push
lods
and
inc
or
jle
xor
idivl
xchg
outsb
cltd
lret
mov
test
stos
jns
ds
xor
pop
mov
sub
xchg
lcall
or
and
movlps
cmp
sbb
fstpl
test
and
mov
aad
add
movsb
out
mov
data16
cmpsl
or
inc
and
inc
xor
test
or
out
mov
cld
pusha
xchg
or
mov
or
leave
ja
and
or
dec
xor
xchg
mov
xor
or
bound
inc
sahf
mov
pop
sbb
and
pop
xchg
mov
dec
scas
mov
lods
enter
pop
dec
jo
sbb
lret
dec
mov
mov
loope
xor
cmp
lods
jo
inc
and
xchg
in
cltd
pop
test
fistps
add
in
repz
xor
aad
lahf
jecxz
mov
ja
cmp
out
xor
cmp
sbb
adcb
push
xor
push
xchg
jb
stos
lret
iret
adc
cmc
bound
addr16
hlt
fs
sahf
or
subl
sbb
xchg
test
lock
ds
packuswb
mov
adc
push
pop
stc
pop
les
into
fldt
rcl
addr16
aas
cwtl
imul
aad
test
ret
add
cmpsb
into
adc
lahf
enter
dec
sbb
call
add
repz
and
xchg
loopne
push
pop
insl
or
sub
dec
push
lods
jb
fmull
scas
xor
mov
test
sahf
xor
outsb
add
jbe
movsb
adcl
stos
lock
fs
lods
dec
mov
push
stc
dec
jle
push
sub
add
push
clc
mov
and
jg
pop
jae
fnsave
lods
add
xlat
dec
sbb
mov
hlt
or
stc
rcll
pop
fwait
cmp
lods
add
jb
mov
repnz
cmp
rolb
adc
sbb
lret
fildl
fs
int
push
decl
enter
lock
cmpb
inc
stos
gs
adc
sub
cmp
std
mov
imul
mov
add
jecxz
ja
push
inc
in
scas
loope
xor
push
sar
jl
scas
int
inc
cmp
lock
dec
repnz
cmpsl
adc
les
scas
inc
aas
mov
mov
sti
movsl
fwait
inc
mov
jns
roll
lret
call
fwait
outsl
pop
fdivs
and
jecxz
cmp
sti
cmp
jbe
mov
pop
mov
pop
add
push
inc
sahf
mov
cld
mov
sbb
repnz
fwait
iret
imul
popa
sub
sar
sbb
iret
inc
je
push
jae
push
inc
out
push
enter
pop
mov
jge
and
and
lock
lcall
rcrb
movsb
jo
ret
jmp
fidivl
inc
sbb
mov
mov
scas
jmp
les
adc
lcall
xchg
lock
imul
mov
jno
and
sahf
cld
cmp
lods
ss
lea
hlt
std
bound
insl
sub
js
testb
jg
inc
rol
sbb
ljmp
or
mov
stc
add
pushf
sbb
addr16
mov
fucomp
int
std
enter
sub
sbb
dec
js
dec
insl
pop
popf
test
mov
fucomp
int
std
enter
sub
sbb
dec
js
dec
insl
pop
popf
test
lock
call
in
fcomps
or
js
push
mov
fucomip
int
jge
insl
fsub
xlat
repnz
xchg
or
xchg
lock
shl
rorb
int
pop
ds
pusha
jo
inc
inc
adc
inc
and
adc
add
lock
shl
rclb
mov
pusha
push
push
mov
and
adc
add
lock
ljmp
mov
push
jo
inc
push
and
and
jle
jae
add
mov
nop
jle
sbbl
mov
cmp
xor
fwait
sub
push
push
mov
and
fwait
add
lahf
lea
and
xor
ficoms
scas
push
pop
lock
mov
andl
arpl
in
and
popf
adc
and
in
add
imul
data16
aam
mov
jb
lret
add
test
dec
ret
sub
mov
inc
mov
adc
xor
insl
mov
mov
push
lods
popa
mov
push
shlb
adc
adc
adc
repnz
rolb
mov
pusha
push
jnp
or
sbb
xor
cmp
hlt
cmpsl
mov
not
out
leave
mov
iret
aam
or
add
inc
push
imul
xchg
mov
shl
in
in
fdivrp
out
push
cmp
aaa
add
and
inc
inc
and
mov
test
mov
andb
jo
pusha
jb
bound
xor
and
adc
add
lock
shl
rclb
mov
pusha
jb
bound
xor
and
adc
add
lock
mov
pop
cli
ret
xor
mov
push
and
aas
stos
pusha
or
lods
dec
out
shll
cwtl
sbb
jl
mov
xchg
pop
fwait
xor
inc
imul
xor
pop
xchg
mov
xor
xor
sarb
test
notb
ljmp
shr
jg
test
and
pop
jno
clc
je
mov
fistpl
lcall
mov
jmp
push
dec
mov
push
cmp
ds
fcmovnb
adc
cmp
ja
mov
dec
lea
scas
ja
les
dec
ljmp
stos
cmpsl
jle
sbb
out
xchg
aas
mov
add
mov
sub
les
nop
pop
adc
mov
inc
mov
sub
mov
movsl
and
dec
cs
out
jbe
pop
dec
clc
mov
mov
sub
mov
out
and
adc
mov
lret
fiaddl
xchg
arpl
push
jbe
jl
movsl
or
jbe
push
imul
stos
stc
mov
loope
fdivs
or
ds
sub
pop
test
cld
xchg
ljmp
jge
orb
int
mov
xchg
sbb
inc
and
out
std
push
in
sub
pop
sub
lahf
mov
jae
rcll
add
movsb
inc
pop
cmp
enter
mov
push
inc
xlat
ret
inc
pop
out
or
jbe
shlb
lods
int
inc
pop
xor
aam
into
sbb
daa
aaa
out
pop
pop
call
les
movsb
out
mov
je
ja
sbb
jns
push
mov
xchg
add
out
lods
dec
pusha
das
push
lret
pop
repz
shlb
pop
in
fwait
jp
call
aas
xchg
sbb
and
lods
mov
mov
or
call
insl
stos
or
push
js
lods
sub
pop
outsl
jb
ret
cmp
clc
repz
inc
outsl
or
mov
dec
cltd
movl
add
pop
pop
mov
jno
lcall
stos
addr16
lret
es
stc
repnz
stos
les
sti
mov
jns
xchg
dec
sub
xchg
fnstenv
inc
push
fadd
bound
in
movsl
shlb
test
sbb
inc
test
pop
stos
mov
pop
cmp
xchg
rcrb
ljmp
pop
sahf
mov
nop
mov
jp
test
lock
dec
mov
mov
leave
sbb
out
xor
pop
xchg
out
or
sti
test
add
sahf
dec
xchg
addb
stc
test
outsl
dec
test
les
or
sub
pop
loop
sbb
les
outsb
jo
push
rcrb
mov
mov
xchg
inc
dec
pop
jl
sbb
add
xor
cltd
sbb
loope
push
push
in
or
inc
push
inc
pop
sub
rorl
cmpb
fsts
pop
shrb
pop
sbb
adc
add
jne
pusha
xor
push
xchg
arpl
push
mov
push
jle
cmpsl
cmp
mov
ja
and
mov
pop
xor
adc
push
xor
mov
dec
mov
mov
es
cmp
subl
and
sbb
hlt
mov
mov
or
mov
std
stc
loope
jnp
adcb
jae
mov
test
std
inc
xchg
pushf
lahf
ret
adc
into
mov
sahf
stc
pop
mov
rcr
into
cli
push
adc
in
jmp
pop
jne
ja
adc
push
es
inc
addr16
sbb
mov
jb
dec
cwtl
out
jne
sbb
dec
popa
add
xor
push
lret
lock
pop
dec
les
lret
gs
pop
iret
cltd
mov
push
and
imul
sbb
or
mov
mov
sub
jl
invd
mov
mov
ljmp
dec
sar
fcomps
nop
or
push
ds
popf
push
pop
cmpsl
xchg
mov
pop
fisubrs
cmc
mov
sub
xchg
pop
sahf
mov
pop
dec
xor
fcos
sbb
dec
pop
sahf
mov
xchg
jge
inc
xchg
mov
mov
lds
pop
jbe
xorb
movsl
jmp
dec
and
xor
cmpsl
icebp
setns
mov
fnstcw
cmovp
mov
pop
jo
sub
scas
sub
sub
lret
imul
bound
sub
mov
cmp
lcall
lock
jg
nop
inc
shl
divw
push
rclb
jmp
pop
movsl
xchg
mov
pop
bound
lods
ljmp
add
ljmp
push
mov
das
sbb
mov
fwait
sbb
or
arpl
mov
aad
xchg
mov
fdivr
out
fisubrl
repz
jmp
mulb
arpl
cwtl
cs
push
loopne
popf
aaa
arpl
rorb
cmp
fnstsw
adc
pusha
mov
pop
mov
lea
pop
scas
cmpsb
add
lret
cmc
jl,pt
pop
ret
sbb
cmp
cmpl
and
jl
data16
test
test
ret
cmc
out
and
xor
cwtl
adc
sbb
push
xchg
push
sub
jl
sub
inc
scas
lret
scas
push
inc
loopw
int3
push
ds
cmp
hlt
xor
add
mull
daa
push
das
ds
push
dec
test
cmpsl
mov
cmp
ret
lret
sbb
lret
push
iret
inc
xor
xor
call
sub
push
cmp
push
dec
mov
je
mov
push
sar
popa
scas
pop
jno
js
test
sbb
fsubl
loope
mov
rorl
mov
jbe
jmp
xchg
rorl
jl
mov
mov
push
mov
jnp
dec
pop
movsb
push
xchg
sub
sub
cmpsb
mov
lea
call
cmpsl
adc
sti
xor
xchg
push
mov
iret
les
adc
sub
fsubrp
int3
mov
xchg
mov
cmp
xor
lods
pop
adc
add
jmp
cs
xchg
daa
xchg
clc
shlb
xor
test
pushf
fisubs
xor
push
imul
pop
orl
test
shll
fsubrs
xor
cmpsl
out
mov
mov
dec
cmpsb
push
sbb
decl
in
xor
inc
in
shll
sub
ss
fisttpll
and
inc
fsts
inc
lds
xor
stos
jge
xchg
mov
iret
sub
cltd
pop
int
hlt
fisttps
mov
and
fmul
xor
jl
jae
popf
mov
in
xchg
adc
popa
xor
and
inc
subb
inc
out
cmp
mov
sbb
jno
jp
rclb
movsl
mov
call
adc
adc
or
fisubs
cwtl
mov
sub
cmp
push
mov
lods
push
fwait
mov
and
or
mov
cmp
add
test
xchg
xor
sbb
push
push
movl
aas
pusha
xor
repz
ja
sub
and
pop
popa
pop
or
xor
pop
out
sbb
mov
and
hlt
cmpsb
adc
xchg
mov
ret
jo
adc
sbb
or
mov
dec
and
xchg
jle
cmp
jno
adc
scas
mov
cmp
sub
sar
adc
mul
xor
jmp
xchg
xor
dec
xchg
into
add
pop
jge
cmp
mov
xchg
dec
jmp
jle
pop
push
pusha
jge
rolb
mov
add
and
xor
ficoml
pushf
cli
nop
cmp
fcompl
repz
into
and
mov
ss
test
jae
test
cmpsb
and
adc
push
jmp
cmp
xchg
popf
sbb
int
xor
pop
jae
ds
xor
push
and
or
pop
gs
addr16
jmp
mov
repz
addr16
mov
jno
test
clc
push
mov
mov
mov
jge
les
dec
es
xchg
jb
jno
ss
pop
pop
shr
xchg
shlb
xchg
ss
mov
mov
inc
jge
mov
xchg
sub
movsb
mov
or
shlb
pop
xchg
stos
push
sbb
mov
sub
fdivs
mov
mov
jno
daa
dec
sahf
fdivrs
movsb
or
jae
xor
and
sub
test
xor
out
in
and
ret
outsb
add
stos
cmpsb
mov
inc
jb
imul
dec
inc
test
fsubrl
xorb
and
xchg
and
movsb
push
rolb
les
inc
ja
insb
mov
outsb
mov
test
cmp
lds
testl
cmp
inc
stc
mov
mov
mov
and
adc
sbb
sbb
pop
iret
push
adc
xlat
js
loopne
and
jmp
push
cmp
sub
ja
xor
pop
mov
jae
repz
fs
mov
movlhps
push
les
ret
sarl
dec
jo
xchg
xor
push
mov
xor
add
sarl
dec
sar
shl
mov
dec
adc
sub
cmpsl
mov
dec
ret
iret
cmp
jne
push
fs
jbe
test
mov
mov
and
movsl
lds
pushf
fidivrs
inc
addl
cmp
mov
mov
push
in
adc
mov
icebp
popf
and
dec
sbb
dec
xchg
or
inc
inc
mov
cli
xchg
xor
xor
jb
inc
pop
fimuls
cmp
ret
into
das
fdivrs
jae
mov
lcall
out
xor
in
mov
jno
jmp
push
aad
mov
xor
mov
mov
mov
dec
sets
mov
notl
xchg
sti
push
pop
add
cmp
add
xchg
jg
imul
or
push
add
xorb
sub
push
and
cld
pop
loopne
imul
popa
xchg
push
push
sub
ret
ret
test
xor
adc
aad
cmp
sub
shrb
pop
mov
pop
jno
xor
fwait
cmp
lds
lahf
movsl
aaa
insb
cmp
lea
into
adc
mov
sub
bound
lcall
rcrl
lret
mov
setno
and
add
test
call
je
popf
sub
test
sbb
adc
stos
loop
popa
das
fstl
jl
add
pop
cltd
xchg
jae
lahf
inc
xor
push
mov
out
lret
mov
repz
gs
dec
sbb
jb
mov
mov
std
cmpsl
fadds
xchg
xchg
dec
call
pop
adc
xchg
xor
add
mov
movsl
hlt
je
xchg
int
dec
pop
xorb
push
addr16
adc
fadds
xor
neg
push
cs
ret
xchg
in
mov
cmp
insl
or
and
add
xor
out
cmp
ljmp
cmp
sbb
into
and
scas
insb
xor
dec
stos
subl
imul
clc
fs
lds
arpl
pop
es
add
stos
mov
out
dec
js
cmc
xor
lahf
xchg
mov
inc
in
repz
sbb
das
rclb
stc
testl
mov
loop
test
sbb
test
xor
fmul
push
and
pop
sbb
mov
sbb
gs
icebp
mov
pop
dec
cmp
sub
jge
call
and
fadd
loopne
mov
in
cmpsl
rcrl
fstps
xor
pop
aad
fldl
daa
frstor
scas
les
jae
add
inc
adc
or
push
cmp
scas
push
les
push
and
fucom
jp
inc
sub
and
insb
popa
push
stos
shr
mov
xchg
mov
cmp
xor
mov
imul
fisttpl
inc
dec
add
mov
sahf
inc
scas
lret
ja
ret
push
push
lods
jae
mov
xor
mov
cmp
ljmp
sbb
sub
movl
in
cwtl
or
pop
lods
fcmovnu
inc
mov
sahf
cmc
xchg
jecxz
arpl
adc
push
xor
test
or
push
pop
addr16
arpl
sbb
hlt
daa
jmp
cmpl
repnz
leave
pop
mov
mov
mov
cmp
ffree
lock
outsl
xchg
sarb
jnp
aam
pop
pop
fisubrs
pmaxub
fldl
bound
ja
dec
cwtl
add
hlt
fcmovnb
scas
lods
fmull
and
in
mov
mul
push
int3
gs
xor
pop
push
pop
jb
dec
es
push
and
adc
dec
out
fldt
xchg
xchg
xlat
pop
aaa
jnp
lods
pop
imul
daa
sub
cmp
outsl
xchg
cmp
sub
fmull
xchg
and
popa
in
cmp
pop
jbe
xor
in
add
or
test
mov
into
add
pop
test
sbb
scas
jbe
mov
int
xadd
pop
lods
movsb
xchg
xchg
pop
int
mov
rclb
subl
aas
call
insb
pusha
in
into
cltd
jns
lea
movsl
or
inc
hlt
stos
ja
ljmp
leave
mov
jo
xchg
aad
movl
test
push
mov
mov
mov
popa
fildl
jae
int
and
leave
pushl
pop
clc
iret
mov
mov
lea
outsb
imul
aam
pop
sub
rcl
ds
fiadds
jbe
xor
push
sbb
vcvtdq2pd
test
jne
cld
gs
nop
xchg
or
mov
mov
in
cmp
mov
clc
add
inc
leave
and
fstp
or
xchg
insb
pop
stos
lods
fldl2t
push
or
mov
cs
and
inc
scas
xchg
pushf
push
add
xor
xchg
jge
pop
or
push
arpl
xchg
cwtl
js
mov
add
mov
pop
jmp
les
sub
or
inc
jno
sbb
push
add
lcall
sahf
es
adcb
or
or
shrb
sbb
lcall
pop
daa
xchg
imull
mov
cltd
shll
push
fwait
insl
push
inc
adc
pop
push
and
jae
arpl
les
sbb
add
lds
or
xchg
push
and
outsl
push
imul
xor
jnp
mov
and
fwait
shrb
push
sub
add
sahf
loopne
pushf
xchg
call
stos
xlat
ret
int3
add
outsb
jne
mov
scas
pop
adc
jge
add
sub
sbbl
dec
subl
sub
pusha
xchg
shr
into
inc
std
out
outsl
fists
gs
loop
xor
scas
jb
inc
lcall
ljmp
enter
inc
imul
or
cld
mov
movzwl
xchg
repz
out
mov
and
and
push
xor
push
scas
mov
sbb
ret
xor
aaa
sbb
pop
add
or
lcall
sbb
push
inc
fcoms
sti
leave
adc
insb
or
cmc
dec
mov
mov
and
shlb
cmpsb
rolb
inc
cli
in
push
and
subl
sub
pop
xchg
mov
fsubs
inc
gs
jne
iret
mov
dec
xor
das
iret
xor
insl
inc
mov
and
test
loopne
mov
sbb
mov
shlb
iret
bound
cmp
inc
pop
mov
add
je
adcb
in
cmp
jb
lret
xor
loopne
push
fidivrs
dec
mov
les
leave
icebp
xchg
js
mov
into
cmp
and
ds
xor
jl
mov
leave
inc
xchg
xlat
movsb
lcall
scas
loopne
jo
arpl
xorb
dec
mov
in
sarb
out
and
or
loop
ret
mov
loopne
aaa
leave
iret
aas
mov
and
inc
out
pop
jnp
jecxz
popa
push
jo
lea
dec
cmc
adc
xor
jbe
adc
cmp
mov
xor
dec
xchg
sti
sahf
sbb
mov
mov
fidivl
mov
or
jmp
jecxz
dec
ficoml
repnz
adc
sbb
mov
aaa
cltd
mov
sbb
ret
in
js
call
rolb
push
push
cmp
inc
mov
sub
cmc
daa
adc
inc
hlt
mov
hlt
jbe
orl
popa
mov
xor
dec
sti
rol
cmp
sbb
pop
call
les
sahf
and
jp
fucomip
lea
je
sub
paddd
je
dec
movsb
xchg
loope
in
xor
sbb
mov
sub
ret
shll
shll
aas
push
push
sub
lcall
inc
jb
sub
sub
lahf
hlt
add
int3
lea
pop
push
stos
stos
mov
add
jmp
pop
pushf
add
mov
add
dec
aam
cld
fwait
and
lahf
mov
mulb
mov
xchg
and
mov
mov
test
cmp
mov
out
xchg
jge
dec
dec
int
jbe
repz
cmpsb
add
test
stos
xchg
mov
test
push
scas
mov
jae
sbb
cmpsl
lds
dec
in
test
nop
stos
xchg
cmp
mov
push
mov
dec
cs
addb
imul
mov
aas
jno
adc
orb
cmp
dec
add
xchg
inc
sbb
pop
lret
jns
sahf
inc
mov
cli
in
cs
add
mov
or
lahf
mov
das
nop
hlt
nop
and
mov
ja
jp
sti
in
sbb
jo
xchg
mov
xchg
gs
lahf
xor
dec
mov
mov
inc
cmpsl
or
adc
fistpl
mov
cltd
add
pusha
mov
mov
hlt
mov
pop
movsb
push
sbb
push
mov
ret
mov
add
repz
je
arpl
int3
popf
fisttpl
mov
fidivrl
pop
cmp
loope
jmp
dec
jb
imul
mov
jecxz
outsb
rolb
leave
sbb
mov
shlb
push
jne
or
insl
notb
fs
xchg
cwtl
pop
add
scas
ss
cmp
xchg
pop
push
in
sub
das
adc
ljmp
lsl
sbb
movsl
xor
popf
and
push
xor
jecxz
xchg
fidivl
outsl
adcb
mov
xchg
dec
xlat
leave
or
test
mov
aad
pop
cmp
mov
lods
ficoms
daa
shrb
rclb
inc
xor
mov
int3
outsb
lcall
inc
in
xlat
mov
cmp
dec
rcll
inc
xor
adc
or
sbb
mov
inc
push
notb
repz
ja
lret
rol
pop
lahf
mov
pop
imul
arpl
dec
xchg
aad
jnp
ja
jae
gs
cmpsl
cmp
pop
lods
xchg
ret
loope
fcmovu
xchg
adc
into
clc
mov
imul
cmp
mov
pop
pop
dec
lcall
and
push
int3
das
rorl
scas
xchg
les
mov
test
je
mov
xor
sahf
xlat
in
mov
fisttpl
sti
movsl
mov
call
push
jae
mov
or
cmp
adc
cmp
repnz
dec
add
sbb
mov
push
and
aas
lahf
repnz
push
ret
fimull
jl
mov
int
cmc
arpl
cmp
xchg
cltd
dec
ret
add
test
nop
or
shl
lods
repz
lds
test
imul
pop
inc
std
xlat
ret
dec
cli
int3
outsl
dec
xor
cmp
mov
mov
stos
loop
cltd
mov
pop
xchg
fld
mov
rclb
ftst
js
xchg
dec
jmp
add
mov
adc
mov
and
mov
jl
xchg
push
pop
cmp
inc
push
loopne
cmp
cmp
rep
js
jecxz
jge
mov
aaa
mov
mov
fists
or
dec
mov
in
mov
mov
mov
sub
and
shl
rclb
mov
pusha
jb
bound
xor
and
adc
add
lock
shl
rclb
mov
pusha
jb
bound
xor
and
adc
add
lock
shl
rclb
mov
pusha
jbe
bound
xor
and
adc
add
lock
shl
rclb
and
fcoms
aaa
gs
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cs
iret
daa
cwtl
pop
fcmovb
ret
mov
movsb
push
mov
add
add
pop
add
or
add
add
add
add
add
add
add
add
sahf
add
add
cmp
filds
imul
add
lcall
add
add
add
add
add
out
add
lcall
add
add
add
xchg
add
add
or
push
add
add
add
add
das
add
add
add
xchg
add
add
add
add
verw
add
or
add
add
add
add
aaa
add
insb
add
add
add
cmp
add
add
add
add
add
add
pusha
add
add
add
scas
add
test
add
insb
add
add
add
arpl
xor
scas
add
add
add
dec
add
ret
add
add
push
add
daa
add
lret
add
add
add
iret
add
add
add
cmp
add
das
add
add
add
add
arpl
dec
add
hlt
add
add
add
sub
or
add
out
add
movsl
add
add
add
add
lahf
add
add
add
add
add
add
add
add
xchg
add
sub
lock
pop
add
add
add
add
adc
mov
add
add
add
add
jge
rolb
pop
add
push
add
add
dec
add
push
add
add
ret
add
add
add
aaa
add
add
daa
add
add
add
add
add
scas
add
add
add
add
add
add
add
arpl
outsl
add
add
add
popl
lea
or
cmp
add
mov
push
add
add
add
movsb
add
mov
add
add
add
mov
arpl
mov
add
and
mov
or
push
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
mov
push
test
test
mov
mov
dec
add
add
add
add
out
add
add
daa
add
out
add
pop
add
lods
add
add
add
sbb
add
xchg
and
iret
add
add
nop
add
add
outsl
add
imul
add
add
popl
jl
mov
add
pusha
add
bound
push
add
add
add
add
add
add
scas
add
add
sub
mov
movb
add
add
fiadds
rolb
pop
add
inc
add
popf
add
add
enter
add
mov
dec
add
push
add
add
add
test
push
add
add
add
dec
add
cwtl
add
add
add
add
and
mov
add
add
add
add
add
push
add
add
add
add
add
add
push
dec
iret
stc
rcrl
popf
pop
lds
cs
push
jmp
outsl
enter
ror
icebp
and
sub
mov
jae
pop
adc
popf
jne
pop
xchg
cmp
cmp
xchg
in
iret
sbb
pop
lret
lods
pushf
insb
cmpb
dec
pop
mov
sub
xor
call
scas
push
std
std
cli
push
aad
ret
xor
loop
arpl
sub
aam
xor
sub
and
fisubs
mov
fsub
fisubl
ret
mov
xor
sub
add
lcall
ja
loope
fnsave
pop
cmp
cmp
xchg
cmp
into
jmp
and
aas
sbb
inc
xchg
pop
testb
jecxz
mov
xchg
movl
das
or
mov
mov
jnp
insl
fimull
ds
mov
mov
add
lcall
xchg
xor
dec
aad
and
jle
ss
into
cwtl
pop
std
inc
sbb
stos
cmp
sub
add
in
or
test
jg
stos
push
pop
adc
xchg
xor
imul
inc
cld
lret
jne
pop
jle
sti
divb
pop
jge
xlat
out
stc
ds
inc
mov
cmp
stc
scas
push
int
ds
dec
mov
adc
push
jo
push
sbb
iret
out
mov
xor
int3
icebp
add
enter
shlb
ficomps
sbb
cmp
jae
lods
stos
popa
lods
out
jmp
pop
pop
inc
xchg
stos
popa
adc
push
outsl
jecxz
sbb
sti
xchg
clc
add
or
mov
add
icebp
inc
cmp
mov
stos
jecxz
add
mov
or
pop
and
aas
jp
or
xchg
jb
lds
les
fcomp
into
mov
rol
xor
fidivl
sbb
lods
jl
andb
cmp
fs
mov
rorb
popf
popf
addr16
jecxz
bnd
mov
outsb
jbe
xchg
pop
add
or
mov
pop
aad
mov
nop
lock
xchg
fs
xchg
cld
mov
mov
inc
std
cmp
aaa
cmp
iret
dec
mov
xor
pop
lods
cmove
aam
leave
cld
je
cwtl
or
dec
mov
pop
mov
movsb
es
xor
jle
sub
xchg
dec
mov
jle
pop
xor
push
out
mov
or
jge
inc
cltd
mov
cmp
pop
bound
push
push
ja
jo
aas
in
push
sbb
cmp
mov
jge
pop
pop
jp
jg
cld
add
shrl
rolb
cmp
stos
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
