loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
loope
mov
lds
or
mov
mov
stc
push
mov
cltd
fsubrs
in
cmc
add
movsl
sbb
leave
fnstenv
dec
stc
push
leave
or
adc
sti
pop
mov
std
aaa
cmp
andl
push
std
ja
jno
mov
adc
repz
adc
ljmp
std
cltd
cmp
out
ss
mov
movsb
jp
push
lcall
jbe
lds
mov
mov
sbb
sbb
outsl
and
and
into
lahf
fldenv
inc
stc
stos
cltd
fmul
popa
roll
cmc
mov
xchg
aad
mov
test
inc
cmp
enter
insl
mov
cltd
mov
mov
push
or
in
cmc
xchg
xchg
mov
inc
mov
jmp
movsl
mov
and
mov
mov
les
push
ljmp
cli
frstor
add
lret
jmp
pmullw
jns
in
movsl
popa
mov
test
fstpl
sbb
daa
and
sub
data16
pop
lock
leave
mov
sti
negl
jno
jl
mov
sbb
fsubr
insb
cmpsb
scas
add
add
pop
andl
pusha
clc
and
adc
pop
jmp
cmp
jmp
and
mov
cmc
imul
sbb
leave
fnstenv
inc
stc
push
mov
mov
mov
mov
mov
mov
aam
rcll
mov
pop
in
mov
mov
sbb
rclb
inc
jae
addr16
inc
add
xchg
jmp
mov
sahf
xchg
dec
sub
popa
insl
arpl
xchg
test
mov
lret
dec
test
xchg
imul
addr16
and
and
pop
sub
inc
movsl
add
xchg
jecxz
or
aas
movsl
jns,pt
test
inc
lahf
sub
jns
sub
dec
aas
push
out
dec
or
loope
outsl
mov
cmc
cli
xchg
pop
pusha
leave
inc
sbb
popf
shrb
subl
pop
test
lods
inc
jmp
in
loope
je
lret
repz
fs
std
pop
movsb
xchg
sub
xor
leave
inc
mov
cmp
jns
test
push
cmc
mov
sub
scas
pop
lea
call
mov
add
mov
fcompl
xchg
xor
into
arpl
addl
int
or
loope
jo
push
test
push
sarl
adc
mov
adc
inc
jns
add
jne
mov
mov
sbb
lods
cltd
or
mov
ret
into
mov
xchg
out
mov
cmpsb
icebp
repnz
adc
or
mov
call
sub
imul
cmp
mov
lods
das
lret
xorb
ds
rcrl
and
mov
idivl
push
fcoml
jns
pop
leave
bound
stos
add
fwait
inc
cmpsl
push
mov
xlat
adc
jl
arpl
outsb
pop
jecxz
insl
mov
aaa
xchg
pop
jmp
xchg
fstps
cmp
in
test
nop
scas
jae
and
pop
test
add
fisubs
idivl
sbb
jmp
xchg
movsb
addb
mov
xor
or
int
add
inc
xchg
cmpsl
jne
das
and
in
mov
icebp
dec
xchg
lret
add
sub
or
int
mov
lahf
iret
add
xchg
push
in
push
cmp
iret
pop
cli
rorb
inc
stos
xchg
pop
mov
or
mov
jp
shll
lcall
inc
push
and
mov
sahf
mov
mov
addr16
stc
fcmovbe
adcb
xor
fstpt
add
pop
fs
stc
jb
cmp
and
jmp
enter
scas
xchg
inc
mov
push
inc
inc
mov
pop
jmp
mov
cwtl
fsts
push
ljmp
ss
pushf
test
and
and
jl
jmp
aam
in
and
cmc
ds
jbe
pop
cmp
fwait
or
ss
push
adc
fildl
bnd
ret
dec
lods
cmp
or
filds
icebp
movsl
pop
mov
fcmovnbe
adc
sbb
jno
dec
ds
fwait
mov
cmp
inc
das
pop
cmp
cmpsl
lock
inc
rolb
sub
mov
mov
xchg
jnp
lods
inc
mov
aas
or
or
lea
jmp
movsl
fbstp
out
dec
mov
mov
xor
enter
add
test
mov
lock
sarl
inc
mov
shr
imul
and
cmp
xchg
pop
xchg
outsl
jne
xor
push
sbb
pushf
push
jge
inc
cmpsb
xor
cmpsl
movsl
inc
rolb
subl
add
dec
outsb
pop
fstpt
loopne
notb
sbb
push
pop
lcall
pushf
push
jle
mov
cmc
lods
sarl
imul
out
sub
jbe
notb
repz
add
mov
mov
test
rcrb
inc
bound
outsl
stc
pop
fidivs
mov
lods
mov
cmc
cs
push
ja
xlat
das
xor
jecxz
inc
in
xchg
cmp
and
mov
jne
daa
popa
or
and
pop
arpl
pop
adc
lret
xor
xor
add
or
enter
rorl
outsl
std
jns
ljmp
test
pop
nop
mov
fdivl
mov
pop
pop
rcr
push
scas
pop
aam
jo
xor
roll
fdivr
hlt
lcall
pushl
pushf
mov
jl
xor
aam
sti
jle
dec
jg
dec
dec
cmp
pop
jae
sbb
andl
xor
mov
inc
xor
jb
add
jg
sbbl
movsb
mov
fnstsw
jmp
imul
jmp
loope
stc
add
xchg
xor
adc
push
fucomip
mov
inc
lea
js
in
and
xor
std
sub
jmp
or
iret
jo
in
loopne
data16
and
or
dec
xor
jnp
jbe
sti
inc
add
and
cmp
js
add
xchg
adc
xchg
testb
aad
inc
mov
jge
daa
pushf
int
push
add
add
mov
mov
pop
sti
in
inc
loopne
push
inc
iret
jne
ret
inc
jbe
xchg
sub
add
lea
shll
mov
pop
jbe
inc
subl
inc
mov
cmc
imul
cmp
mov
push
jge
test
cmpsl
sahf
cmpsl
in
mov
or
pop
repz
jge
pop
mov
mov
fidivrl
stc
xor
inc
sub
push
in
jns
sar
pop
mov
lcall
fcoml
ds
popf
and
xor
mov
mov
aaa
or
nop
sbb
into
mov
pop
mull
mov
dec
outsl
mov
push
repz
adc
sbb
adc
cltd
gs
push
sub
cmp
inc
inc
dec
jp
orl
lock
jo
cmp
pop
ret
inc
pushf
mov
pop
cwtd
adc
lods
sbb
inc
jae
inc
or
adc
leave
sub
scas
xchg
mov
shl
outsl
incl
pop
sbb
mov
sub
orl
lahf
jl
divl
cltd
pop
jge
push
lret
sub
ss
sbb
mov
iret
jnp
rcrl
push
gs
add
test
push
xchg
cltd
fiaddl
fs
cs
mov
mov
push
sub
lahf
xor
jg
popa
sbb
lea
fistpll
xchg
sbb
mov
in
pop
sbb
cld
cmp
stc
or
pop
pop
call
adc
stc
rol
lret
movsb
stos
lret
mov
and
stos
sbb
imul
adc
out
mov
popf
mov
imul
ret
and
in
lods
dec
sub
push
mov
push
push
ss
addl
add
js
pop
adc
test
sbb
adc
push
rcrb
mov
lcall
xchg
push
inc
mov
jecxz
in
enter
and
and
jb
adc
in
dec
test
addb
xchg
idivb
pop
jb
jp
mov
clc
inc
add
shrl
add
fdivl
push
push
and
fs
jmp
aad
in
or
mov
or
add
setle
sub
mov
dec
daa
imul
cld
add
out
shll
repnz
mov
lea
mov
arpl
mov
and
jmp
push
dec
in
mov
fidivrs
mov
xchg
test
add
dec
lret
aam
or
loopne
push
dec
pop
popf
loope
mov
int
cmpsl
int3
divl
sarl
pop
mov
jle
push
lds
neg
mov
gs
idivl
pusha
or
inc
test
cmc
movsl
inc
or
scas
inc
sbb
in
pop
in
into
mov
js
insb
push
loope
movlps
or
es
in
lds
sbb
sub
xor
fs
lcall
out
jns
roll
mov
fcoms
pusha
les
popf
dec
cli
jne
pop
xchg
inc
je
sub
or
inc
das
and
stos
adc
xor
or
cmp
dec
pop
scas
sahf
pop
je
jnp
or
xchg
movsl
data16
nop
cmp
out
sbb
push
test
ret
cs
fsts
es
fistpll
scas
movsb
sbb
mov
dec
pop
jno
cmpl
icebp
mov
test
jmp
inc
or
sahf
fisttpll
mov
pop
adc
repnz
mov
mov
sbb
pop
lea
jo
loope
enter
cmp
aam
mov
push
sti
nop
ss
cmp
jne
das
inc
lret
mov
push
mov
fldcw
div
rclb
inc
sub
cmp
sbb
aaa
out
mov
cld
push
lea
push
mul
stos
pop
ret
jbe
divl
pusha
scas
js
push
or
lds
adc
sub
fisubs
call
add
and
fstpt
movsb
hlt
pop
mov
xor
pop
xchg
sbb
adc
mov
mov
shrb
jae
popa
dec
and
outsl
adc
sub
fucomi
int3
push
testl
push
fisttpll
popa
out
mov
std
stos
out
mov
pop
or
inc
cmpsl
pop
arpl
adc
jne
xlat
inc
add
fisubrs
sbbl
jge
je
push
cmp
es
inc
adc
out
push
jl
inc
fdivs
dec
pop
push
sbb
inc
and
or
das
cmpsb
lods
hlt
sbb
sbbb
loopne
xor
pop
cmp
outsl
mov
pop
leave
jmp
adc
dec
push
stc
std
mov
test
into
clc
sub
fsubp
sub
test
fnstsw
jns
inc
ret
mov
popa
jl
xchg
fadds
adc
lods
jmp
inc
pop
popa
dec
and
fsubs
add
mov
aaa
pop
jp
push
ror
jns
daa
dec
pop
mov
in
fcmovbe
addl
mov
ja
imul
jp
xchg
push
sub
and
ret
outsb
jl
out
pop
and
leave
and
enter
inc
popa
push
pop
xor
push
loop
aad
xchg
inc
add
push
inc
mov
dec
mov
sub
cmp
cmpsb
xchg
fimull
and
int3
lfs
fisttps
insl
xchg
or
sar
adc
sarb
cmp
loop
cli
xchg
inc
ljmp
mov
fs
sub
xor
cli
jns
loope
pop
scas
pop
dec
outsb
pop
push
cli
cmp
inc
lcall
ds
xchg
jge
data16
push
shlb
pusha
push
dec
ja
pop
inc
adc
leave
daa
xchg
jae
or
mov
sarb
push
jbe
mov
js
aad
mov
test
sti
mov
fisubl
test
dec
mov
popa
mov
popa
push
aam
les
or
jecxz
jb
rcrl
or
or
xlat
push
and
inc
sbb
loop
push
mov
cs
pushl
xchg
popf
adc
or
pop
lahf
fisttpl
sbb
sub
mov
in
adcb
jmp
stc
pop
loopne
cmp
mov
lret
filds
rcrb
cmpsb
xchg
mov
sbb
sbb
bswap
jb
inc
and
nop
ret
insl
sbbl
addr16
test
dec
movsb
mov
es
inc
mov
pushf
lock
inc
sub
scas
inc
xlat
xlat
jp
test
movl
pop
out
ret
sub
inc
in
shl
lret
pop
cmpsb
cmp
mov
shl
out
cmp
mov
repz
mov
data16
mov
mov
lock
popa
xchg
pop
bound
and
in
mov
and
mov
mov
into
push
push
and
push
test
mov
jnp
dec
push
and
popf
mov
repz
push
gs
orb
or
repz
jnp
xchg
enter
push
inc
push
data16
stos
out
lcall
imul
mov
in
rclb
mov
cld
lods
addr16
ljmp
dec
mov
push
jmp
mov
test
dec
lret
dec
outsl
mov
mov
pop
dec
call
and
mov
push
xor
fsubp
xchg
enter
sub
lahf
jno
pop
push
lahf
pop
pop
out
lock
int3
addl
push
inc
sub
out
bnd
cmpl
adc
xor
verr
mov
hlt
mov
add
insl
pushf
add
cmp
es
and
xor
int3
add
and
popf
mov
sub
addb
hlt
das
mov
or
jae
repz
dec
jp
mov
fwait
add
xchg
shlb
fstl
or
rclb
lcall
add
ret
insl
adc
ss
sbb
push
push
mov
clc
gs
aas
pop
push
sbb
cmp
xchg
aad
sub
jecxz
and
sbb
daa
mov
iret
mov
hlt
inc
mov
xor
adc
addr16
and
dec
sub
cmp
push
and
sub
jne
outsl
sub
mov
push
rcr
add
push
lds
aad
cli
mov
jnp
leave
dec
jl
push
ss
lods
mov
xchg
jmp
and
cmp
iret
mov
sahf
sbb
xchg
push
lret
lahf
hlt
jo
loop
rclb
out
js
push
mov
or
push
mov
call
push
insb
shll
jae
lahf
jecxz
adc
fcoms
pop
and
mov
imul
jp
sub
jno
stos
mov
or
shrl
loop
add
pop
add
rcll
jne
mov
jmp
sbb
inc
movsb
inc
stos
repnz
mov
push
cmp
leave
add
movsl
dec
pop
idivl
clc
out
sub
dec
in
cltd
add
inc
pop
scas
cs
mov
das
inc
aaa
in
jp
les
fdivrl
pop
sub
shrl
pop
sbb
mov
dec
jge,pn
popf
xchg
and
adc
mov
insl
add
fstpl
rorb
xchg
dec
fcmove
push
xor
repnz
dec
push
xor
mov
xchg
adc
mov
add
aad
xchg
sub
ljmp
fldcw
sbb
jae
fs
mov
push
shll
push
or
jo
loopne
dec
xlat
mov
jmp
lahf
js
inc
xchg
cmc
mov
cmp
mov
in
ss
inc
lea
sbb
mov
int
loopne
pushf
xchg
mov
jg
lods
push
mov
mov
inc
xor
and
loopne
inc
jp
imul
stos
xchg
insl
pxor
mov
mov
ret
mov
pop
mov
mov
xchg
dec
pop
movsl
and
js
loopne
fcomip
fsubl
mov
aad
xchg
jge
pusha
mov
gs
or
push
aad
popa
test
xchg
fwait
jne
jns
xlat
or
mov
clc
add
shrl
xor
or
mov
mov
add
jecxz
in
nop
pop
mov
dec
outsl
push
push
cmp
xchg
jmp
xor
xor
mov
dec
stc
dec
fs
lret
mov
or
int
test
push
and
and
orb
and
cmpb
stc
jne
ljmp
loope
lret
or
ret
adcb
aad
ret
push
jmp
std
out
int3
es
dec
cmpsl
mov
cmp
jge
xchg
outsb
mov
aam
jno
adc
mov
jl
sahf
mov
xor
mov
cli
fwait
sub
cmc
lods
mov
das
inc
lahf
sbb
fs
or
xchg
inc
sub
into
je
in
movsl
outsb
push
mov
test
pop
pop
les
pop
mov
lcall
pushf
sub
mov
push
sti
xchg
pop
pop
adc
call
add
ret
add
sarl
push
jge
pop
test
dec
push
shlb
cli
push
xchg
cmp
mov
xor
xor
sbb
jg
fcoms
jp
js
cmpsb
shlb
jecxz
xchg
or
pop
mov
loop
mov
jle
xlat
ror
jnp
lods
cmp
jle
add
popl
ss
out
xor
jecxz
sarb
sahf
cmp
pop
js
push
sbb
or
and
aaa
push
jmp
in
test
xchg
or
xchg
sbb
popf
adcl
decl
push
scas
adc
loope
sub
mov
jo
jno
lahf
or
jp
adcl
mov
arpl
nop
pop
sti
cmp
ds
push
repz
lods
jecxz
lahf
pop
scas
mov
push
sbbb
sbb
mov
out
adc
mov
aaa
adc
or
add
test
dec
mov
test
or
int3
sub
lahf
hlt
popa
loop
pop
fisttps
pop
xor
jmp
add
lods
sub
push
jno
test
cmp
inc
nop
xor
adc
rcrl
sub
jno
loop
int
mov
stos
jle
jg
ficomps
je
mov
popa
ret
or
and
xor
add
xchg
pop
ds
or
leave
pop
sqrtps
fwait
sub
enter
mov
int
es
and
push
addr16
mulb
mov
push
ret
sub
mov
mov
data16
adc
adc
sub
inc
jne
jecxz
inc
sub
fbld
cmp
popf
in
call
jo
mov
push
popa
cmp
xor
js
mov
cmpsl
push
and
xchg
cltd
scas
adc
cli
outsl
mov
ja
mov
out
cs
mov
test
inc
xchg
add
mov
in
and
shrb
sarl
dec
jecxz
hlt
shlb
hlt
out
fwait
js
insb
jnp
jmp
mov
jb
xchg
add
xchg
fldl2t
cmpsb
sbb
jne
add
dec
scas
push
cmp
sbb
std
clc
push
addb
jnp
xor
ja
mov
int3
sbb
mov
mov
sub
mov
sbb
mov
movsl
ficomps
jnp
add
rorb
jmp
je
add
push
jge
mov
repz
xchg
cmp
push
popl
cmp
push
mov
cmpsl
ljmp
and
mov
mov
mov
inc
in
add
mov
leave
setle
dec
andb
cmp
mov
sub
or
in
cli
cld
data16
mov
cmpb
jecxz
mov
xchg
call
sub
push
call
pop
dec
addb
or
xchg
mov
mov
jg
stc
outsl
jbe
das
push
bound
stos
xor
or
cld
inc
dec
aas
out
popa
out
sub
hlt
pop
sbb
insb
arpl
movsl
mov
mov
mov
cmp
das
hlt
shl
push
in
push
xchg
fisubs
lods
lahf
insb
addr16
pop
xor
cs
pop
xchg
mov
and
jge
dec
jnp
mov
pop
stos
jbe
mov
movsb
hlt
xchg
shrb
xor
lods
cltd
out
or
dec
push
jle
inc
arpl
xor
int
rcr
inc
js
ret
int
push
outsb
int
adc
mov
sarb
popf
cmp
pop
in
mov
jmp
insb
sahf
jl
push
xor
out
adc
outsb
dec
pusha
cmpsb
cld
inc
cmp
out
cmp
outsl
add
jns
loop
addl
push
es
pop
jmp
jnp
arpl
movsl
ja
xor
imul
shll
lods
scas
popa
insl
loop
int3
fildl
jno
or
sub
mov
pop
in
sbb
insb
fisttpl
in
enter
pop
add
push
jbe
mov
std
mov
add
dec
or
xchg
dec
pop
dec
jae
insb
mov
jno
fsubrl
out
inc
loopne
loopne
test
adc
fnstsw
dec
push
or
pop
sub
mov
test
or
setns
push
mov
mov
or
cmp
lea
adc
mov
aas
xchg
mov
imul
xor
jnp
xchg
mov
imul
outsb
sti
rcll
mov
or
ds
cwtl
mov
fwait
test
lret
das
mov
std
loop
cmc
sarb
movsl
sbb
leave
fnstenv
inc
stc
push
mov
mov
cmc
imul
sbb
leave
fnstenv
inc
stc
push
mov
mov
sti
or
jns
cltd
movsl
sbb
sub
fnstenv
inc
stc
pop
mov
mov
pop
add
xchg
or
mov
filds
stc
and
pop
adc
jge
insl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
pop
shll
dec
inc
sub
add
sar
shrl
cwtl
cmpl
pop
inc
sub
cmp
loop
clc
shrl
mov
jno
popa
popa
push
stc
inc
inc
xor
nop
repz
enter
sbbl
and
adc
push
les
adc
add
adc
fmull
sub
aam
fildll
cmc
jo
or
out
xor
push
roll
aam
mov
mov
out
bound
or
jo
add
outsl
bound
sbb
mov
mov
jl
fs
pop
daa
dec
push
xchg
std
mov
mov
inc
sar
or
ljmp
enter
sub
jns
rorb
add
js
clc
sbb
or
loopne
pop
icebp
fstl
fadd
add
mov
jle
mov
faddl
inc
aad
xchg
jbe
mov
pop
icebp
pop
mov
cs
push
xchg
cwtl
add
dec
aad
dec
cmp
and
or
add
rol
rorl
xchg
sub
sub
inc
push
dec
or
fs
mov
movsb
mov
aad
sar
loopne
xor
and
pop
push
adc
insl
ljmp
cmpsb
int
lret
in
clc
lock
ljmp
pop
and
cmp
or
sbb
call
rcr
shrl
cwtl
subl
pop
inc
sub
cmp
or
sbb
call
rcr
shrl
cwtl
subl
xor
test
add
xor
imul
mov
add
dec
xor
mov
sbb
aad
adc
or
xchg
mov
ja
in
mov
cmp
dec
stos
pushf
push
sti
mov
xor
add
pop
inc
pushl
popa
sti
jg
mov
fildll
adcb
dec
xchg
adc
inc
je
stos
dec
lods
mov
rorl
fldl
jle
sbb
icebp
rolb
sbb
es
pop
sbb
rorb
dec
push
dec
jecxz
pushf
adc
mov
mov
ljmp
mov
jmp
ljmp
lret
xor
jns
and
ret
aaa
dec
adc
jnp
mov
ret
mov
pop
jmp
testb
call
nop
mov
lret
lret
mov
ret
dec
pop
add
dec
mov
add
fdiv
jno
push
mov
sti
jae
xor
adc
ret
xchg
neg
mov
inc
adc
sbb
cmp
push
cmp
and
adc
into
dec
arpl
sbb
mov
jecxz
and
xor
add
mov
inc
out
push
xchg
in
pop
dec
stos
stc
adc
in
and
and
mov
rorb
cmp
push
pop
and
or
je
pop
add
add
lcall
stc
das
push
imul
fsubs
rolb
jecxz
js
adc
clc
lahf
lcall
rcl
rclb
jns
sub
inc
or
andb
jns
xor
push
pop
xor
push
test
loopne
cmp
arpl
lcall
movsb
insb
daa
inc
xchg
orb
fadds
jmp
sarl
pop
imul
pushf
les
pop
das
dec
fstl
sub
in
loopne
xlat
cmp
imul
leave
push
test
inc
jne
jo
pop
shrb
shrl
out
fmuls
mov
call
fsubl
jnp
cmp
ficomps
mov
and
popf
sbb
cld
popf
pop
cmpsb
loopne
adc
in
xor
sub
sbb
push
xchg
dec
mov
xchg
add
outsl
xchg
lods
incb
arpl
pop
lock
jp
std
xlat
in
es
mov
aaa
and
cld
imul
jo
fsubs
or
sub
rcrb
imul
into
repz
inc
lret
jmp
mov
mov
rclb
xchg
imul
mov
jns
dec
pop
stos
cmp
mov
dec
sbb
inc
sub
xor
popf
pusha
popf
ja
rorb
mov
cmp
int3
fstps
movsb
fimuls
add
scas
dec
stc
fnstenv
lcall
lods
rep
or
dec
lods
or
cwtl
jo
je
mov
pop
je
mov
mov
xchg
aam
push
sub
cmp
adc
pop
jg
xor
pop
fucom
or
fildl
cmp
das
shlw
jb
fadds
jecxz
lods
add
jne
sub
into
arpl
movsb
pop
mov
mov
cmp
push
pop
push
out
dec
stos
lea
in
xchg
adc
lcall
out
ja
adc
fadds
sub
mov
loope
lock
lock
call
dec
mov
jmp
mov
ret
xor
mov
xchg
lods
sbb
lcall
inc
mov
std
fs
jno
sub
push
aas
or
xchg
in
insl
xchg
in
sub
sbb
xchg
loop
cs
cmp
inc
sbb
scas
imul
dec
insl
sbb
xorb
aas
xor
xor
fs
sub
shl
aaa
pop
bound
mov
push
mov
js
pop
pusha
mov
inc
xor
cmpsl
scas
fstpl
push
jmp
xchg
mov
xor
pop
mov
cmp
fnstcw
dec
pop
roll
popf
out
cmp
sahf
push
xchg
insb
js
sbb
pop
stc
rcr
sbbb
mov
dec
pop
sbb
pop
divb
out
add
push
or
or
mov
fs
pop
jmp
inc
dec
xor
loope
stc
jne
mov
mov
and
xor
sarb
jle
adc
repnz
mov
mov
fs
pop
mov
sarb
mov
mov
dec
lock
lds
xchg
dec
test
aad
push
cwtl
fwait
cs
or
enter
cmp
jp
call
xchg
fs
mov
ss
inc
aas
mov
push
xor
and
pop
mov
popf
xchg
lock
les
mov
sbb
xchg
xlat
xchg
dec
cwtl
pop
mov
jo
test
pop
addr16
in
je
sub
push
mov
repnz
xor
rorl
or
dec
shll
push
sti
mov
inc
push
stos
in
inc
mov
testl
arpl
inc
call
into
jno
mov
fisttpll
push
xor
insb
fisttpll
clc
add
push
or
add
std
mov
repnz
and
push
push
lret
push
rorl
inc
sbb
cmpb
jl
lahf
add
jle
dec
std
jne
fsubrl
push
add
add
fstpt
loope
fdivr
cmpsl
outsb
aad
shll
inc
les
push
in
cltd
mov
sub
mov
sub
subb
mov
jg
and
ret
insb
in
shlb
xchg
mulb
shrb
inc
xchg
xchg
or
dec
mov
into
ja
ljmp
xor
adc
xor
push
or
adc
add
add
mov
push
dec
in
repnz
arpl
dec
inc
nop
pop
lds
jge
imull
fstpl
fisttps
aaa
mov
push
push
sbb
sbb
jge
push
std
mov
add
jecxz
and
lahf
cmp
push
cmp
dec
sbb
imul
pop
push
adc
js
aas
sub
mov
cmpxchg
inc
push
push
mov
and
xchg
push
out
je
adc
ss
idivb
pop
sub
fiadds
push
add
sti
scas
lods
or
xchg
ffreep
mov
movsb
out
clc
mov
int
cmp
inc
repnz
lods
mov
mov
int3
mov
jne
mov
and
test
mov
call
xor
sbb
cmp
mov
and
jge
mov
inc
sahf
push
pushf
ret
mov
jae
add
idiv
inc
push
outsl
lcall
cld
cmp
push
inc
mov
or
or
xor
mov
jno
xchg
mov
enter
pop
stos
les
push
add
nop
jle
mov
sbb
cmpl
xorl
add
adc
ret
shlb
mov
inc
mov
mov
shrb
rorl
xchg
inc
ret
int3
sbb
stos
loope
jno
and
lea
cmp
cld
push
dec
jno
add
imul
in
pushf
fdiv
jmp
mov
mov
cld
xchg
cwtl
fadds
leave
adc
mov
and
dec
punpckhwd
mov
push
adc
xor
in
sub
ljmp
xchg
outsb
mov
loop
hlt
jo
or
stc
gs
inc
int3
popf
jecxz
inc
ret
adc
pop
popa
lods
dec
loope
or
daa
outsl
xor
stos
das
push
cmp
xchg
ret
dec
sub
fnstsw
outsl
push
stos
mov
sbb
jb
xchg
and
stc
dec
or
mov
cmp
jp
je
cmp
js
sub
es
bound
aam
mov
lcall
or
fnstcw
push
addr16
ficoml
fstp
inc
test
and
mov
out
cmp
xor
enter
ret
jp
ss
fistl
cwtl
or
cmp
outsl
or
and
nop
pushf
rcrb
pop
adc
and
cmc
lret
rcll
addr16
sub
xchg
std
mov
into
lds
sub
or
ljmp
cs
cmp
and
sbb
cmp
std
call
pusha
add
stc
pop
je
push
lock
test
xchg
xchg
mov
ljmp
pop
pusha
xchg
out
mov
add
rcrb
les
push
pop
jg
and
sbb
mov
bound
lods
aas
jge
hlt
pop
addr16
aas
ljmp
cmp
pushl
imul
add
popa
dec
les
pop
push
stc
mov
sbb
mov
mov
mov
enter
jg
call
dec
inc
or
xchg
popa
cmp
cli
or
pop
xor
jbe
pop
push
add
lea
adcl
jmp
je
inc
cld
scas
cwtl
push
fisttpll
dec
mov
push
arpl
push
or
pop
cmp
jbe
lods
sbb
sub
sub
pop
into
mov
test
fadds
imul
jge
cli
test
aam
iret
ror
loope
ljmp
addl
pop
mov
aam
and
imul
inc
push
jns
inc
cmp
shll
xchg
rcll
pop
lretw
xchg
dec
dec
or
dec
bnd
push
jle
gs
mov
dec
xor
pop
mov
stos
sub
pop
les
shl
pop
add
std
or
add
xchg
ficoms
cmp
pusha
scas
inc
leave
stc
jle
fnstsw
xor
mov
cmc
js
call
sub
rclb
gs
sbb
popa
lcall
xor
int
scas
movb
push
sub
sbb
sbb
add
aam
stc
test
xor
das
push
pmullw
xor
mov
out
sub
dec
jle
dec
push
jmp
sbb
pop
cmp
out
pop
lahf
and
add
orb
gs
or
xor
cmp
lahf
jne
nop
cmpsl
orb
inc
pop
clc
mov
add
mov
xchg
std
loop
mov
mov
jne
aas
js
rcr
mov
mov
test
incb
inc
inc
jmp
adc
sbb
add
stos
inc
push
push
sub
mov
cwtl
mov
inc
js
and
adc
mov
mov
mov
leave
fwait
mov
ljmp
iret
mov
aaa
sub
pop
adc
jnp
pop
movd
lret
and
lds
jne
outsl
in
test
jo
mov
push
mov
jne
mov
repz
cld
hlt
cli
lcall
xchg
mov
adc
push
sub
pop
jl
pop
call
into
mov
testl
push
stos
pop
sub
jle
or
pop
sbb
pop
cmp
lret
test
jno
out
mull
inc
sbb
stc
dec
test
icebp
addw
stos
lret
sahf
inc
mov
popf
ss
ljmp
inc
mov
in
jnp
test
xor
aad
outsl
ss
sbb
xor
jo
imul
mov
shl
test
push
outsl
mov
jg
sbb
jg
add
mov
divl
inc
clc
sbb
and
mov
pushf
mov
clc
push
out
push
xchg
fwait
stc
mov
enter
pop
pushf
rolb
outsl
adc
stos
sar
mov
add
int
dec
cmp
and
testl
push
inc
movsb
xor
sub
jmp
repnz
mov
jl
orl
pop
adc
xchg
aam
pushf
inc
ret
pop
in
and
xor
bnd
pushw
sub
push
or
inc
fdivl
mov
ficompl
aad
add
sbb
inc
aaa
mov
fisttpll
cltd
lods
lea
stos
mov
mov
sub
notl
in
sub
pop
xor
xchg
dec
mov
insl
fwait
xchg
arpl
or
xlat
cmc
xor
push
dec
loop
jno
inc
mov
and
sarb
push
jmp
imul
inc
push
push
push
pushf
stos
push
mov
push
fld1
pop
push
xchg
cmp
loop
jmp
dec
dec
xor
fcmovnb
scas
clc
jmp
popa
mov
mov
jo
cmp
outsl
mov
jnp
xor
push
aaa
ret
cmc
mov
add
dec
dec
dec
sub
pop
subl
insb
push
cltd
aam
and
inc
sub
adc
pop
mov
dec
xchg
mov
cld
test
lret
sbb
jno
ja
push
lea
sub
or
or
mov
or
js
push
aam
jb
out
and
scas
jbe
xor
ja
mov
clc
aaa
dec
insb
icebp
sub
mov
sbb
mov
lods
movsl
mov
sbb
xlat
inc
daa
insb
fst
int
xor
js
popf
aam
mov
rcr
sbb
les
mov
cmp
fstpl
dec
stc
mov
sub
xor
mov
ljmp
mov
dec
flds
push
andl
jns
lock
movsb
push
je
int
or
xorb
aaa
daa
pop
dec
int
jmp
aaa
imul
inc
push
or
xchg
aaa
jae
cmpsb
push
push
stos
mov
mov
cmp
aad
shr
adc
dec
ja
in
sub
addr16
xor
fcompl
loope
sahf
imul
mov
mov
jae
out
jo
cltd
xor
mov
lods
mov
pop
add
lret
decb
testl
dec
mov
mov
dec
mov
arpl
cmp
pop
int
ret
lcall
mov
lahf
aad
mov
sub
ss
mov
fildl
lcall
or
mov
or
add
pop
shrb
jecxz
jmp
jge
ja
sub
jbe
cmp
test
loop
dec
or
mov
mov
push
or
sbb
jle
out
popa
shll
negl
xor
repz
inc
mov
xchg
pop
std
sti
out
pop
arpl
sub
shll
sub
add
call
arpl
pop
cld
mov
pop
adc
sbb
cmp
jo
stos
xlat
int3
jp
sahf
jle
push
xchg
pop
ljmp
sbb
pop
cltd
sbb
and
roll
inc
xchg
repz
cld
aas
push
lds
fdivrs
xchg
mov
icebp
lods
lret
das
dec
push
cmp
push
pop
loopne
test
std
xor
insl
shrb
push
sbb
arpl
jp
mov
jg
fldl
or
push
stos
push
or
cmc
xor
mov
lea
out
cmp
in
cmp
arpl
add
punpckhwd
jns
pop
fnstsw
cs
ljmp
push
xor
mov
add
jle
mov
jmp
iret
ret
clc
orb
push
dec
int
jno
bound
inc
in
mov
xor
inc
or
cmp
xchg
bnd
popf
xchg
mov
stos
mov
push
das
pop
cmpsl
rorl
dec
jo
push
adc
jl
jne
add
push
mov
mov
xor
jp
into
inc
subb
in
icebp
pop
in
xchg
ds
mov
stos
push
iret
leave
push
push
loopne
mov
mov
inc
mov
add
in
stos
faddl
daa
fcoms
daa
in
jmp
imul
adc
popa
mov
repz
cmp
sub
popa
and
mov
adc
dec
sahf
repz
mov
jp
stc
mov
lds
inc
out
or
enter
jmp
or
mov
push
or
stc
jb
ficomps
push
in
ret
inc
popa
test
icebp
int3
mov
ret
int
cmp
adc
dec
push
stos
loope
add
or
ret
dec
outsb
mov
in
lds
dec
movsl
jbe
pop
dec
ss
jnp
or
loopne
jae
lods
outsl
repz
cmpsl
sti
mov
movsb
pushf
add
xor
shlb
push
push
jne
mov
pop
test
jecxz
push
std
rcrl
pop
jno
scas
scas
jbe
shll
mov
loopne
jnp
dec
jle
sbb
stos
mov
jnp
mov
pop
dec
pop
sbb
mov
sbb
shrb
push
add
mov
xor
mov
push
mov
repz
divl
in
mov
mov
jl
push
mov
dec
xchg
dec
lahf
sbbb
add
out
filds
inc
shll
mov
dec
subb
lret
sub
iret
ja
bound
out
jge
fldenv
cld
call
pop
inc
fsubrs
jb,pn
jecxz
insb
mov
call
cmpsl
pop
inc
mov
aas
adc
mov
pop
mov
pop
sub
jecxz
xchg
pop
dec
flds
aad
push
dec
push
fwait
in
call
fsts
push
sbb
pop
inc
mov
addr16
ss
jae
add
mov
jnp
push
sbb
sbb
aaa
lret
fildll
pop
mov
push
divl
mov
out
rep
pop
dec
popf
adcb
subb
out
fcompl
das
jo
cmp
test
mov
fwait
and
outsl
daa
xlat
les
imul
in
and
jne
lock
test
into
mov
cmp
dec
jg
fwait
hlt
dec
aaa
jg
sbb
adc
mov
jmp
rcrl
bound
push
rcrl
sub
test
dec
add
adc
and
scas
inc
jnp
repnz
out
aad
icebp
or
lock
pop
fsub
aas
lods
sbb
nop
jl
ss
cltd
or
aas
cmp
mov
pop
add
and
jmp
test
jb
xor
xchg
repnz
sti
addb
and
jge
sub
addb
add
xchg
lahf
shr
and
dec
pop
hlt
dec
adc
push
sub
rorb
sub
inc
cmpsl
adc
xor
arpl
add
lods
and
lahf
mov
shll
and
cli
inc
inc
or
cli
outsl
stc
push
fldenv
sti
xchg
lret
imul
xchg
mov
jp
test
mov
iret
stos
xlat
xchg
daa
xchg
cmp
rol
pop
int
push
cli
ror
pop
std
inc
sub
sbb
aad
sub
pop
dec
xchg
mov
mov
fadd
push
lcall
outsl
sahf
ds
fs
sbb
cld
cmp
mov
sub
xchg
out
sbb
das
in
cmp
jbe
pop
push
and
sbbl
stos
stos
adc
ljmp
loopne
add
sbb
inc
shr
push
mov
dec
cmp
sub
into
lds
mov
inc
addl
add
sub
add
lds
mov
fists
mov
inc
push
cmp
adc
lahf
push
das
xchg
leave
ds
and
ficoms
mov
adc
nop
cmp
lds
inc
mov
ret
into
mov
aaa
cwtl
in
push
xor
insl
repnz
pop
lock
and
sbb
mov
adc
int3
jnp
sbb
mov
daa
shll
mov
je
mov
repnz
cmp
pop
enter
mov
movsl
test
mov
ret
pop
addb
ds
orl
fwait
or
mov
fmuls
sbb
sub
mov
mov
das
mov
add
ret
sbbl
pop
lret
popa
jl
mull
push
xchg
jg
out
xor
divl
out
outsl
mov
mov
fdivrl
adc
test
lcall
cltd
test
sbb
fstl
dec
popa
lock
jne
sbb
shlb
cli
lock
jg
add
pop
mov
and
jno
loope
sbb
ja
sti
adc
jne
mov
leave
pop
or
mov
pop
mov
and
lods
xor
in
dec
inc
xchg
scas
ds
inc
sub
xchg
xchg
and
sti
and
mov
dec
decl
dec
or
mov
jge
cmpsl
add
sar
xchg
ret
mov
adc
xor
jl
jmp
sbb
xchg
int
add
add
je
cmc
push
icebp
mov
cmpsb
add
push
pop
in
or
adc
loope
ret
in
mov
out
outsl
iret
add
dec
inc
sbb
fnsave
jno
movsb
and
mov
dec
push
test
jbe
rcr
punpcklwd
cmp
or
sbb
call
rcr
shrl
cwtl
subl
pop
inc
sub
cmp
or
sbb
call
rcr
shrl
cwtl
subl
pop
inc
sub
cmp
call
rcr
shrl
test
popa
jle
pop
inc
sub
cmp
mov
pop
dec
fdivs
ja
addr16
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aaa
pop
daa
dec
pop
jns
imul
and
mov
cmpsl
leave
xchg
stc
xchg
negl
test
pop
jns
imul
inc
sub
stc
xchg
negl
test
pop
jns
imul
inc
sub
mov
in
cltd
fsubrl
cmp
aaa
fbld
fdivrl
mov
pushf
pop
stc
aam
jl
notl
xor
or
push
jecxz
pop
xor
mov
or
add
mov
lods
lahf
fisttps
jbe
sub
test
aaa
push
cltd
outsb
mov
jb
es
popa
js
jge
sbb
test
ljmp
or
inc
lds
jge
aas
xchg
int3
sbb
movb
pushf
pop
enter
fidivrl
in
aaa
mov
pop
mov
js
sbb
shlb
lods
out
int
outsl
std
ret
data16
xlat
lods
scas
test
pop
jns
imul
inc
sub
stc
xchg
negl
out
jno
dec
lcall
cs
xor
divb
jmp
xchg
hlt
mov
xchg
cmp
add
bound
xor
push
push
inc
sub
pushf
movsl
movsl
scas
ret
divb
pop
or
jle
push
sbb
push
cmp
mov
cmpsl
leave
xchg
stc
xchg
negl
test
pop
jns
imul
inc
sub
stc
xchg
negl
test
lods
mov
mov
out
outsb
pop
push
faddp
rorb
jle
push
fistl
dec
pop
pop
cmpsl
jnp
pop
mov
movsb
iret
dec
mov
push
les
out
adc
scas
push
shll
icebp
test
out
xchg
mov
jp
add
push
popa
enter
clc
leave
mov
stc
clc
inc
movsl
mov
cmpsl
dec
or
sti
and
insb
aas
fidivl
lea
pop
jl
out
dec
xchg
shll
and
mov
scas
inc
stc
sbb
arpl
test
ja
or
cmp
add
push
aam
dec
mov
inc
or
int
pop
xor
fsubrp
aaa
shrl
push
sahf
push
dec
push
stos
test
sub
movsb
mov
js
shl
add
rolb
jns
pop
or
movsl
push
aam
pop
push
adc
mov
fistpl
je
push
adc
jl
pop
leave
test
sub
repz
xchg
xor
inc
sub
and
xchg
mov
mov
jecxz
mov
push
mov
jmp
insl
cmp
cmpsl
mov
fisubs
leave
add
ja
adc
mov
ss
cs
ljmp
repnz
lcall
repz
pop
js
jns
push
sti
adc
fildll
lret
insl
pop
xor
pushf
idivl
imul
in
mov
xor
test
andb
sbb
repz
rol
xchg
das
fstp
loop
loope
mov
insl
fnstenv
loopne
mov
jmp
ret
sar
lret
rolb
nop
push
xchg
mov
adc
or
pop
add
xchg
jmp
inc
push
sarl
xor
jp
push
sahf
mov
xor
mov
adc
rcrl
in
out
mov
xor
adc
jmp
lea
jg
jno
dec
dec
lcall
into
fs
fwait
add
mov
adc
bswap
and
mov
push
iret
das
fldt
push
xchg
int3
xchg
cld
fidivl
rcl
iret
ror
xor
loopne
fmulp
adc
add
lods
fbld
jp
adc
mov
in
lahf
cmp
movsl
imul
pop
jno
push
mov
stos
cmp
push
jecxz
jo
xor
or
xor
outsl
iret
decb
pop
jg
dec
mov
add
loope
or
cmpsb
mov
gs
dec
xchg
xchg
mov
cmp
jnp
jecxz
sbb
dec
sti
outsb
jbe
jle
das
dec
lret
push
dec
sti
fneni(8087
in
sub
in
mov
enter
test
js
push
and
xchg
push
lahf
test
cmp
fs
xchg
mov
and
icebp
insb
fcmove
call
lods
fadds
mov
js
les
ja
adc
repz
andb
cs
jo
mov
xchg
cmp
push
or
fs
testb
sbb
scas
push
add
mov
dec
jg
das
out
push
jb
lock
loopne
adc
jg
jns
stc
gs
imul
sub
pop
xor
mov
sbb
mov
testl
enter
outsb
out
xor
sbb
mov
pop
je
sbb
outsb
fldt
push
push
inc
aam
lds
rorl
pop
or
inc
push
leave
xchg
pop
add
push
push
and
push
je
sub
sub
sti
lea
in
leave
lds
xchg
dec
jle
inc
push
xchg
and
and
pop
push
inc
mov
xor
fdivrl
dec
lods
mov
jnp
mov
mov
xchg
cwtl
lret
xchg
and
jo
jge
pop
mov
adc
inc
faddl
dec
adc
lds
scas
int
idivb
inc
mov
mov
std
xchg
imul
test
stos
arpl
add
dec
jns
adc
mov
out
mov
aam
test
ret
adc
lea
pop
cmp
cmp
frstor
mov
cmc
dec
lods
clc
test
test
into
jmp
sub
adc
test
repnz
fxch
xchg
lcall
sub
xchg
dec
pop
jo
mov
test
ds
ds
loop
int
jne
xor
jmp
dec
add
pop
sbb
fsubs
fistps
jle
rcrl
stc
cmpsb
sahf
sub
sbb
mov
and
sub
adc
insb
bound
cmp
jne
stos
lahf
push
pop
jne
xchg
xchg
filds
adcl
int3
adc
iret
pushf
lds
fstpt
push
fbld
ret
out
jp
cmp
cmc
mov
mov
pop
std
imul
cmpsb
cmc
fstpt
xchg
cs
push
cmp
dec
cs
scas
lds
mov
jo
jne
in
mov
or
dec
test
inc
cmpl
mov
and
sbb
bound
fwait
out
sub
cwtl
dec
call
mov
dec
push
std
in
subb
jge
ljmp
xchg
cli
dec
fmull
sub
scas
jp
not
mov
test
sbb
adc
test
loope
test
test
mov
cmp
fdivs
popf
es
sbb
roll
mov
int
dec
pop
or
lret
dec
dec
popf
mov
mov
movb
inc
cmp
test
lock
push
in
sarb
jb
rcl
dec
bound
mov
and
xorl
out
shll
stc
jg
imull
push
data16
clc
jns,pn
xchg
and
sti
cmp
in
dec
xchg
pop
fimull
add
outsl
ja
stos
bnd
idivl
mov
pop
stos
push
lcall
leave
and
jnp
push
sbb
or
and
outsl
sbb
insl
in
mov
cmp
adc
iret
inc
jmp
adc
add
stc
test
sub
scas
jno
mov
mov
fs
jb
fdivrs
mov
and
ljmp
cmpsl
lock
int
arpl
inc
mov
or
push
testb
push
push
leave
xor
jecxz
mov
addl
ljmp
jno
sbb
hlt
sahf
or
pop
jecxz
sbb
fisubrs
inc
inc
mov
ljmp
cmp
jo
fisubrs
add
adc
mov
mov
push
out
ss
push
call
out
out
fiaddl
adc
leave
lret
or
jne
pop
sbb
out
sbb
ret
sbb
stos
push
icebp
and
mov
push
jae
mov
and
or
dec
sbb
scas
mov
in
pop
jge
or
aad
imul
icebp
roll
mov
orl
push
dec
repz
jns
xchg
sub
and
movsl
fldenv
jl
int
sub
pop
clc
xchg
jmp
sub
int3
stos
jecxz
xor
stc
push
mov
push
sbb
movsl
pop
dec
xchg
xchg
ja
push
fsubrs
repz
dec
test
add
nop
push
mov
jno
mov
sub
test
cmp
sub
cmp
dec
dec
jle
jo
in
repz
in
pop
daa
push
xor
or
mov
sbb
cmp
cli
aas
dec
cld
jno
sub
mov
scas
and
je
das
and
pop
xor
out
fwait
mov
scas
cmpsb
inc
xchg
test
push
test
xchg
aad
sbb
cwtl
mov
adc
pop
stos
idiv
rcrb
std
fs
out
rcrb
pop
mov
inc
xor
inc
push
inc
push
sub
mov
mov
rorl
ds
test
xor
rep
inc
push
leave
push
inc
inc
xchg
push
ret
xor
insl
sub
sub
insl
fistpl
push
nop
xor
imul
stc
push
in
pop
cmpsb
or
cmpsb
jmp
inc
es
and
sbb
dec
rcll
cmp
dec
mov
ds
push
jmp
fldt
dec
into
mov
jecxz
ljmp
das
test
jl
mov
xor
xor
or
mov
mov
fdivrl
pmuludq
pop
push
push
rcrl
in
xchg
sub
insb
mov
incl
mov
shll
insl
mov
loop
xor
fisubl
and
sbb
ret
movhps
add
int
xchg
xchg
mov
inc
mov
in
vmread
loop
sbb
lcall
xchg
cmpsb
or
jp
dec
test
dec
scas
mov
imul
addl
jmp
ror
jne
xchg
lret
push
xor
inc
sub
mov
sbbb
ljmp
and
inc
xor
add
lods
xchg
sub
and
add
imul
xchg
fwait
sbb
push
lret
pop
mov
aad
xchg
jecxz
out
loope
adc
sub
scas
inc
idivl
pop
pop
cmpsl
in
dec
mov
and
les
sbb
or
sbb
movsb
xor
lret
or
sar
lret
xor
lcall
inc
jmp
jb
addr16
pop
and
adc
int3
adc
mov
jb
mov
inc
add
adc
imul
test
lods
adc
daa
pop
mov
sbb
xchg
adc
rorb
push
notb
inc
mov
fidivl
insb
or
sbb
cmp
jmp
movsb
into
xchg
pop
cmp
jns,pn
and
addb
push
dec
mov
inc
jo
ds
sub
std
sub
dec
aam
cld
cli
sub
fdivs
ret
cmp
adc
cmpl
xchg
add
sbb
rcrl
add
call
arpl
rol
xor
cli
mov
and
imul
dec
loopne
pusha
dec
lea
aaa
push
cmp
pop
pop
push
ret
xor
lock
dec
inc
rorl
stos
sub
cmp
mov
xor
movsl
loop
push
xor
fsubl
loop
movsl
test
xchg
jne
pusha
out
outsl
jp
loope
push
pop
jmp
fisttpll
sub
cmpl
lock
pop
stc
dec
jp
and
imul
and
inc
decl
xchg
adc
add
mov
mov
xchg
and
push
sub
movsb
or
and
mov
mov
test
mov
dec
sub
ret
xchg
mov
mov
adc
aad
ljmp
rorb
adc
sbb
inc
jp
in
orb
movsl
imul
pop
movsb
mov
and
bound
cmp
adc
cmp
sbb
inc
xor
lret
pop
fisttpll
jne
xchg
mov
aas
and
fwait
and
ljmp
fisubl
in
cmc
inc
hlt
pop
sbb
jmp
fwait
inc
push
pop
jp
sbb
mov
inc
xor
pmaxsw
xor
imul
dec
lods
and
in
flds
xor
movsl
mov
dec
rcrl
add
bound
je
cli
les
movsl
fistl
lahf
out
out
ror
mov
popf
xchg
adc
inc
cmp
mov
lret
and
push
rol
mov
inc
into
lahf
jge
test
jl
call
pop
gs
xchg
push
pop
jecxz
or
and
gs
insl
xchg
adc
outsb
mov
or
xchg
les
or
notl
jae
cmp
lods
mov
and
jb
dec
inc
push
cmp
mov
jmp
fs
push
mov
into
std
pop
mov
cmp
push
cwtl
mov
lds
fadd
icebp
push
mov
shlb
push
jmp
fiadds
and
int
rcll
adc
std
shl
mov
adc
out
jbe
push
xor
outsb
out
mov
cwtl
mov
pop
lods
lds
fistpl
ja
jge
rcrl
test
jnp
push
sub
jbe
out
pusha
push
mov
leave
ret
cmp
je
mov
mov
mov
loope
mov
mov
rolb
add
sub
or
popa
sar
jecxz
mov
ja
stos
test
enter
sub
roll
cmp
xchg
xor
icebp
cmp
lock
call
int3
imulb
leave
lahf
dec
stos
cwtl
movsb
repz
mov
les
enter
mov
xchg
lahf
iret
jmp
mov
int
dec
pushf
outsl
idivl
jb
add
popf
sahf
addr16
push
and
faddl
in
sub
add
sbb
movsl
les
in
mov
hlt
inc
movsb
addb
mov
adc
daa
inc
sub
test
out
icebp
sbb
out
lock
imul
jecxz
andb
cmpsl
mov
jmp
in
pop
inc
xor
mov
sbb
mov
imul
add
add
aad
and
mov
stos
mov
enter
jno
xchg
or
dec
cmp
aaa
sar
inc
push
cld
pop
test
xchg
mov
outsl
cmp
outsl
stos
jnp
cmpl
lods
stos
cmp
aaa
lret
or
cld
lret
sbb
mov
cmp
mov
lret
push
push
shll
das
add
push
aam
xchg
js
add
xchg
mov
testl
shrb
adc
push
inc
dec
pop
sub
test
adc
out
pop
sahf
outsl
xor
scas
cmc
in
mov
cmpsl
sub
jge
sub
or
add
mulb
fcoms
xchg
xchg
cmp
into
test
xor
sub
push
mov
call
add
jmp
shl
leave
mov
inc
roll
or
jge
inc
je
add
mov
addl
loop
std
repz
jno
sub
jmp
add
enter
or
movsl
fsubs
addl
push
clc
add
cli
inc
out
mov
stc
cwtl
inc
xor
mov
lods
repz
sbb
push
and
inc
ss
jb
pushf
mov
ficomps
xor
xrelease
rolb
in
dec
mov
or
ror
arpl
or
repz
cli
aad
mov
inc
jnp
mov
imull
or
jle
pushf
mov
jle
dec
aad
rclb
mov
adc
xchg
clc
jo
lret
push
xor
std
xor
xor
lds
fistpl
dec
hlt
fiadds
xor
mov
sti
mov
outsl
bound
mov
in
add
push
loope
push
lahf
xor
and
mov
je
sahf
cmpsl
mov
out
jmp
cmpsb
inc
leave
sub
aam
hlt
test
sbb
leave
and
xchg
outsl
xor
movsb
into
mov
scas
mov
mov
dec
out
inc
or
andl
adc
pop
or
fidivrs
push
js
push
filds
test
push
notl
mov
xchg
push
push
pushf
add
repz
or
xor
fs
mov
jp
es
dec
test
add
cs
sbb
scas
pop
test
add
sbb
lds
mov
arpl
enter
jns
xchg
and
push
sbbl
or
stos
test
dec
stos
enter
stos
jbe
jno
icebp
mov
cli
nop
pusha
pop
dec
sub
jnp
scas
clc
stc
push
std
lods
out
push
push
push
clc
lods
fcomi
ss
insl
in
divl
rcll
add
rcrb
fimull
sbb
and
sub
jge
rcll
sbb
loopne
repz
lods
xchg
out
sbbb
imul
xchg
cs
inc
mov
jne
repnz
es
sbb
sbb
sub
mov
ficomps
test
mov
jne
leave
std
in
push
dec
mov
mov
iret
stc
jg
mov
mov
imul
out
insb
fs
cmpsb
add
adc
dec
mov
in
xor
dec
inc
sbb
pushf
das
xchg
lods
lret
push
lret
bound
sarl
and
das
cwtl
je
test
push
push
xchg
mov
lcall
imul
repz
and
test
sbb
rcll
inc
push
dec
lahf
outsb
jp
or
xchg
push
enter
adc
inc
pop
nop
in
xor
js
mov
jg
sbb
pop
push
fstps
test
lcall
push
mov
inc
xorl
adc
mov
xor
cmp
in
scas
cmp
and
cmp
add
stos
into
test
jae
hlt
jecxz
iret
xchg
dec
cld
imul
insl
scas
aas
shl
mov
cmp
cmc
jle
out
jne
jecxz
fdiv
lods
mov
shr
sahf
mov
dec
jns
outsb
dec
mov
inc
mov
movsb
test
popf
and
mov
and
mov
adc
cs
daa
mov
mov
stos
outsl
mov
hlt
cli
icebp
in
cmp
dec
push
adc
sub
jg
test
fdivr
es
enter
mov
inc
sti
xor
push
sbb
out
fbld
jae
or
jecxz
fwait
add
test
ljmp
lret
xchg
out
cli
arpl
mov
lcall
sbb
add
pop
fdivl
repnz
mov
push
dec
call
cmp
pushf
sub
test
or
sti
push
fisubs
adc
and
frstor
fldenv
sbbb
iret
subl
cmp
mov
ljmp
sarl
xchg
cmp
ds
pop
or
std
cmp
das
inc
pop
jnp
push
mov
fnstsw
adc
sub
nop
mov
mov
sbb
pop
ret
imul
scas
rcl
and
addl
inc
mov
lahf
mov
mov
ds
imul
adcb
movsl
xlat
dec
xor
iret
jb
cmp
data16
inc
jg
sbb
loopne
pop
xchg
nop
data16
mov
jno
sub
xor
gs
cld
pushf
fs
pusha
push
adc
cmp
in
sub
lods
lock
imul
ror
fisubs
aaa
in
mov
cwtl
lcall
test
adc
xor
bound
dec
stc
inc
int
inc
push
dec
mov
clc
stos
aad
in
jmp
dec
dec
push
or
ljmp
mov
jg
pop
jo
add
mov
push
sbb
xorb
outsb
inc
mov
jo
jge
movsl
xorl
xor
inc
push
dec
sbb
cltd
sub
scas
xor
bound
stc
into
pop
and
mov
fisttps
out
lods
enter
fwait
iret
or
std
jecxz
mov
lahf
sub
clc
in
jp
cltd
or
cld
jno
repz
xchg
mov
push
cmp
mov
out
icebp
clc
stos
pop
loop
repnz
pusha
jo
shlb
add
mov
push
out
mov
mov
jnp
out
and
lcall
jp
test
xor
and
adc
push
mov
push
int
ret
dec
dec
sub
pushf
lret
jg
call
fisttps
mov
sbb
cmpsb
mov
mov
movsb
das
aam
push
sub
or
xchg
add
addr16
xor
jb
jo
push
scas
sbb
or
aam
or
loopne
ret
sbb
addr16
sbb
je
dec
mov
xchg
popw
adc
inc
cwtl
push
fildll
mov
stos
out
inc
pushl
xchg
loopne
jbe
fbstp
xchg
loope
fmull
in
push
pop
das
nop
testb
adc
jmp
aaa
repz
out
movsb
test
arpl
xor
jne
fcmovnu
pop
xchg
mov
pop
lret
out
loop
out
mov
testl
fildl
es
and
pop
in
in
test
jo
mov
cmp
loop
in
icebp
dec
jecxz
das
dec
shlb
push
sarb
pop
lcall
sbb
das
data16
pop
pop
xor
or
mov
and
gs
and
addb
fisubrl
xlat
sbb
fimuls
rcrl
sbb
cmp
iret
das
dec
das
loopne
xchg
in
les
cmp
xor
lret
test
icebp
jno
jnp
mov
cmp
movsb
aad
repz
push
or
into
aas
cs
and
fcmovnbe
xor
dec
scas
std
pushf
pop
push
fstpl
xchg
mov
je
mov
leave
mov
mov
cmp
push
push
or
mov
xchg
inc
stos
pop
in
ja
push
popa
or
ja
and
xchg
pusha
gs
enter
loopne
scas
adc
push
sbb
sub
jp
lods
xor
js
imul
inc
sub
stc
xchg
negl
test
pop
jns
imul
inc
sub
stc
xchg
negl
test
pop
jns
push
push
cmp
mov
cmpsl
enter
jmp
xlat
mov
daa
dec
pop
jns
insl
ja
mov
inc
mov
cmpsl
arpl
adc
sub
push
dec
sbb
or
cmp
sub
pop
lods
imul
daa
dec
cmpl
sbb
or
sub
sbb
or
cmp
sub
jns
or
cltd
dec
mov
insl
test
cmp
sbb
or
cmp
sub
jns
imul
or
jle
fs
sbb
push
int
mov
mov
cmpsb
inc
jp
insb
fcompl
dec
jne
loop
loop
push
cltd
mov
mov
inc
sbb
dec
add
icebp
fsub
sub
loopne
loopne
repnz
xor
or
leave
bnd
out
cltd
adc
xchg
mov
sbb
push
mov
je
and
jg
pop
mov
mov
mov
jg
sub
leave
pop
sub
fnstenv
imulb
rolb
imul
mov
mov
inc
int
ja
push
ret
imul
cltd
fwait
lea
int3
loopne
imul
sub
sbbb
or
cmp
sub
jns
imul
insl
test
cmp
sbb
push
cli
sbb
sbb
adc
or
imul
mov
jno
dec
clc
sbb
or
cs
paddb
sti
add
mov
xor
sahf
pop
int
fsubrl
dec
mov
cltd
dec
mov
insl
test
cmp
sbb
or
cmp
sub
jns
imul
insl
test
cmp
sbb
and
mov
lret
pop
lea
adc
dec
xor
mov
mov
cmc
mov
sbb
call
inc
loopne
jbe
in
aad
mov
stos
fmull
push
pusha
xchg
fiaddl
jnp
aaa
mov
gs
cmp
mov
push
popa
hlt
and
push
js
cmpsb
pop
call
and
mov
stos
mov
insb
sub
sbb
adc
bound
pop
cmp
xlat
sbbb
xchg
cwtl
add
adc
cmpsb
pusha
test
jecxz
push
push
or
push
jb
adc
jbe
or
out
inc
fmuls
add
jns
mov
fucomip
js
jo
adc
adc
pmulhuw
push
pop
mov
ret
dec
push
xorb
mov
cmp
fdivs
and
loop
rolb
xchg
fwait
pusha
test
ret
scas
cmp
les
pushl
aaa
fildll
sbb
mov
or
xchg
je
inc
out
loopew
push
jns
and
rcll
xchg
test
testb
pop
fildll
xchg
lods
or
lret
mov
sub
imul
dec
pusha
pop
loope
mov
sbb
mov
cld
sti
ret
stc
inc
lret
and
into
mov
or
es
fimuls
cmp
gs
or
idiv
and
ret
xchg
imulb
pop
xchg
int
loope
mov
sbb
inc
hlt
inc
insb
jo
notb
movsl
nop
dec
cmp
xchg
adc
fistpll
mov
and
push
repnz
mov
data16
popa
cmp
icebp
pop
mov
ljmp
inc
cmp
addb
xchg
mov
xchg
mov
mov
scas
test
call
stc
xor
pop
mov
push
arpl
out
mull
imul
sbb
xorb
gs
mov
int
add
stos
es
cmp
cmp
add
lods
psubsw
in
mov
xor
rolb
iret
fs
lcall
jecxz
dec
push
xchg
out
xchg
insl
pop
fcomps
arpl
pop
pop
mov
lcall
ljmp
aad
sub
mov
lea
int3
dec
aad
mov
jmp
cmp
out
lock
sub
int
cmp
and
xchg
xchg
inc
push
xor
push
imul
popf
aaa
les
xchg
outsb
sub
fbstp
lcall
xchg
and
mov
xlat
enter
cmc
out
in
aam
xchg
inc
movsb
addb
mov
push
xchg
push
xor
dec
cli
or
xor
sti
mov
mov
mov
add
test
shll
cmpsb
push
add
dec
or
sbb
xchg
jnp
sbbb
jno
roll
fcmovb
sbb
gs
xchg
cmc
inc
std
mov
movsl
jp
cmc
outsb
dec
mov
es
xor
push
loopne
sub
jo
jb
or
pop
mov
fsub
inc
push
aaa
test
fs
inc
jne
aad
aaa
loop
fidivrl
clc
movsl
xor
xchg
pop
fisubl
xchg
sbb
add
std
jle
xlat
cmpb
sub
test
xor
mov
mov
sub
sub
stos
mov
sti
inc
test
stos
dec
and
and
pop
push
or
popa
xor
inc
inc
jmp
mov
mov
xor
sti
frstor
pavgw
sbb
add
inc
xor
addr16
pushl
add
fnstcw
mov
test
stc
mov
xchg
in
dec
mov
lcall
mov
je
cltd
mov
sbb
or
push
add
jp
fimuls
jmp
mov
cmpl
rcr
adc
xchg
inc
jns
lods
adc
aad
jp
jo
xor
lock
jo
hlt
sub
dec
dec
cli
mov
push
mov
jp
scas
addr16
adc
cli
pop
jb
sbb
scas
lods
scas
push
fldl
xchg
xor
mov
or
test
jbe
scas
pop
popf
imul
cmp
fisubrs
push
movsl
sarb
add
or
add
clc
mov
loope
mov
cmp
mov
call
fmull
inc
xchg
lds
add
ja
inc
mov
fcmovne
ret
sti
cmpsl
dec
cwtl
adc
fisubl
jns
clc
or
into
int3
data16
sbb
cmp
inc
adc
jb
les
push
arpl
pop
sub
pop
and
adc
outsb
mov
sub
fidivrl
outsl
cmp
in
cmpsb
xor
aam
mov
cltd
lret
lcall
pop
push
sti
cmp
enter
dec
and
stos
mov
or
sub
cmpl
mov
jge
mov
jmp
outsl
jmp
es
lods
jmp
and
push
sbb
add
sbb
in
lea
in
sbb
and
std
mov
sysret
mov
in
dec
les
pop
add
ror
out
aad
or
mov
pop
inc
xchg
insl
fwait
or
repnz
jnp
mov
sbb
pop
push
cld
xor
or
int
sub
xor
cmp
mov
xchg
or
mov
mov
testb
imul
rcl
jbe
mov
pop
popa
mov
cmc
loopne
insb
xchg
stc
xor
cmc
lock
fsubr
mov
ficompl
arpl
add
into
mov
movsb
test
add
shrb
or
push
add
inc
mov
xor
aaa
mov
cmpsb
hlt
in
loope
call
scas
mov
push
test
push
sahf
inc
enter
pop
mov
imull
fsts
lcall
loope
call
xor
aam
mov
in
in
mov
dec
and
push
push
cmp
mov
mov
dec
out
jb
jo
inc
ret
dec
out
cmpsl
dec
inc
cmovs
ss
outsb
push
pop
cwtl
xchg
lock
sbb
leave
xchg
addl
mov
in
aam
sti
fdecstp
insb
leave
into
out
inc
push
test
cli
test
mov
cltd
movsb
xchg
xor
in
int3
movsb
inc
mov
in
test
testl
push
cmp
mov
push
fld
cmc
in
arpl
sub
pop
out
push
jnp
dec
mov
push
sarb
daa
jno
push
push
inc
js
daa
test
scas
test
jp
sub
cbtw
mov
jne
xchg
mov
xor
or
cmc
jmp
sbb
hlt
aaa
in
inc
sbb
push
inc
push
inc
xor
push
sub
adc
xor
int3
jo
push
lret
push
hlt
lods
testb
aaa
in
mov
xchg
test
bound
sbb
repnz
mov
add
stos
imul
pop
ljmp
push
sub
xchg
push
sub
pop
sub
mov
insl
iret
mov
mov
test
sbbb
adc
xchg
test
pushf
push
jnp
jecxz
subb
gs
sbb
test
pop
add
jno
sbb
lahf
sub
into
scas
clc
add
fstl
mov
push
pop
js
out
arpl
scas
dec
sub
orl
jne
out
fistpll
jb
push
ret
mov
test
mov
cld
and
call
xchg
cli
sub
mov
out
pop
fnstsw
aad
adc
fsubrs
adc
dec
adc
adc
bound
xor
or
pop
push
pop
daa
mov
pop
dec
mov
shll
mov
pop
cld
jbe
push
jbe
repz
mov
popf
jb
shl
inc
es
xor
and
cmp
or
cmp
mov
js
push
cwtl
adc
fwait
jbe
cmp
stos
jge
adc
adc
jl
enter
lret
out
mov
xchg
mov
dec
mov
push
inc
nop
stos
jle
jle
std
stos
cld
pop
enter
popa
lret
negl
mov
out
pop
jnp
xor
mov
or
dec
adc
sub
or
and
push
movsl
inc
dec
xchg
int3
std
fwait
and
das
mov
push
xchg
push
xchg
mov
popf
push
iret
aaa
out
push
pushf
jno
inc
jmp
adc
xchg
mov
bound
les
dec
xchg
adc
or
mov
fwait
push
push
incl
fmull
out
mov
jl
test
ds
cs
test
mov
js
mov
push
test
mov
cmp
cmp
pusha
fsubp
fmull
sbb
and
fwait
add
pop
int
cmp
pop
and
adc
les
ja
inc
stc
ljmp
test
jb
sub
adc
jl
arpl
dec
cld
mov
xchg
jg
out
enter
dec
lds
inc
push
mov
std
lock
ss
cmpsl
aam
sbb
and
mov
pushf
fcmovnbe
xchg
scas
mov
adcl
jl
stos
fildll
in
aad
sub
mov
ss
stos
fcmovnbe
and
inc
ss
sbb
aam
outsl
or
mov
stos
arpl
aaa
dec
negl
jb
out
lcall
ds
loopne
adc
sub
xchg
int3
cmpsl
clc
xchg
mov
nop
jg
scas
clc
inc
xchg
in
cmp
bound
lcall
xchg
xor
pop
sbb
in
frstor
xchg
mov
mov
xchg
and
xchg
add
mov
sti
inc
jne
cmpsb
shll
mov
mov
xchg
xchg
and
dec
push
and
aad
aam
into
aam
add
jge
jae
ljmp
inc
hlt
cli
incl
fucomp
xchg
aad
sarl
das
lahf
sub
pop
push
je
insl
std
adc
add
mov
aad
aas
lcall
jno
arpl
imull
pop
pop
inc
mov
xchg
leave
shll
xor
xor
jbe
arpl
daa
out
or
ficompl
xchg
jge
aad
mov
mov
sbb
cs
mov
nop
leave
mov
int3
test
add
xchg
push
sub
inc
mov
cwtl
jnp
lods
imul
cli
jns
cltd
jmp
adc
push
movsb
mov
adc
aam
mov
cmc
out
adc
add
xorl
mov
and
jo
xchg
jge
ret
inc
push
je
mov
pop
pop
and
cmpsl
mov
push
jo
pop
fwait
add
jmp
std
lock
jl
sbb
addb
mov
pop
or
call
cmc
mov
popf
cmp
adc
mov
jbe
sahf
xchg
add
getsec
mov
mov
cmp
mov
test
mov
out
std
popf
jbe
mov
ja
adc
fimuls
jl
pusha
std
sbb
adc
loop
movsl
mov
fnstenv
mov
jno
movsl
into
mov
ljmp
cmc
push
sbb
repnz
fwait
pop
xchg
dec
lods
pop
sti
in
enter
and
cmp
sub
push
fadd
stc
cmp
jns
cmp
or
inc
xor
adc
call
shrb
adc
jns
sub
js
subb
pop
jo
and
sub
mov
sbb
push
jae
jns
cmp
js
push
and
adc
mov
push
sbb
mov
jge
dec
pop
cmpsb
cltd
xchg
in
xchg
lea
cld
or
sarl
hlt
dec
fimuls
ljmp
dec
je
shll
push
cwtl
icebp
mov
mov
arpl
jns
xchg
push
pop
popa
movsl
inc
jg
aam
mov
jne
sbb
jge
adc
loop
push
arpl
mov
fmuls
xchg
popf
popf
adc
and
push
cmp
mov
jg
pop
dec
push
mov
mov
sti
mov
je
jl
decl
stos
dec
sbb
or
loop
sahf
sub
es
cli
into
pop
pop
xor
addr16
aam
movsl
loope
shll
lret
mov
mov
roll
sti
ss
ljmp
add
data16
je
jp
cmp
xor
push
or
cltd
jb
jp
movsb
ss
rcrl
pop
aad
into
xlat
mov
lock
mov
push
cmpsl
aas
pushf
arpl
sub
adc
mov
cwtl
push
test
loop
cmp
push
inc
mov
xor
mull
repz
aad
add
jmp
sbbl
mov
sub
fldt
jle
lock
cmp
cli
dec
xlat
ret
mov
lahf
fs
and
xchg
mov
xchg
mov
jecxz
les
push
lret
lea
add
pop
scas
jle
aad
and
ljmp
add
sub
lock
sbbl
push
push
mov
push
fldenv
dec
and
fwait
mov
cmpsb
adc
mov
ficompl
daa
insb
insb
inc
ljmp
call
sbb
nop
pop
push
out
dec
inc
in
fwait
incl
ror
aad
fisubs
jno
mov
lcall
push
xchg
cltd
and
shlb
mov
out
ds
std
data16
es
mov
dec
jl
add
jmp
in
movsb
orl
ret
int3
popf
rolb
sbb
ds
out
dec
sub
cltd
jb
mov
mov
ljmp
divb
ja
cmp
jg
out
rorl
bound
sbb
lds
shll
dec
and
mov
cmpsl
xchg
adc
cwtl
test
fucomi
es
or
add
mov
sti
mov
pop
mov
or
hlt
xchg
mov
adc
xor
push
pop
and
push
pop
mov
jb
jns
xor
mov
divl
ja
scas
std
in
adc
mov
dec
pop
dec
std
movsb
ljmp
outsb
mov
xchg
sbb
pusha
sbb
sub
repz
in
out
movsb
mov
scas
inc
and
mov
popf
pop
mov
cmp
xchg
mov
stc
and
jp
fidivrl
out
imul
je
cmp
inc
jb
xchg
fdivr
sub
scas
xchg
add
xchg
lock
imul
mov
notl
mov
jno
push
jg
cmp
dec
xor
push
sub
test
push
pop
fistl
out
jno
xchg
ja
or
xor
adc
dec
into
pop
call
sub
sub
gs
pop
scas
or
add
or
or
dec
fdivs
push
inc
int
mov
inc
std
adc
loope
inc
lock
movsb
mov
push
xor
stos
lret
lock
icebp
xchg
repz
rol
mov
in
xchg
jns
repz
xchg
test
xor
shrl
loope
test
mov
inc
pop
mov
nop
test
ljmp
aad
stc
sub
xor
xor
inc
popa
into
mov
into
cmpsl
pop
jge
mov
and
adc
jecxz
test
mov
push
stos
lret
sbb
or
sarb
in
add
ljmp
mov
or
mov
xchg
insb
jl
js
cmp
test
jb
cmp
pop
repz
adc
jbe
sub
xchg
pop
ss
iret
sub
and
test
adc
push
std
test
inc
push
icebp
gs
pop
mov
add
out
xlat
adc
sub
dec
sbb
pop
pop
lahf
push
cld
fcomps
and
xor
fcmove
mov
repnz
sub
scas
orb
xor
movsl
jbe
and
add
adc
xchg
mov
cld
cvtpi2ps
adc
cli
jo
inc
movsb
fcmovnu
int3
cmc
lcall
mov
stos
cmp
outsb
inc
mov
push
insb
pop
pop
inc
xchg
fisttpll
dec
pop
int
mov
testb
lock
pop
int3
repz
and
dec
stos
lds
xchg
popa
xor
ss
popf
adc
push
sbb
in
jecxz
mov
sbb
loopne
sbb
or
fdivrp
aad
adc
ja
pushw
stos
es
cmc
and
stos
push
push
aas
mov
xlat
cmp
subb
lock
or
fs
adc
imul
cld
fcomps
mov
out
adcb
idivl
cmp
push
es
push
pop
bound
dec
mov
sbb
mov
in
lods
dec
in
jbe
mov
push
sbb
xor
iret
mov
mov
lock
push
mov
xor
push
sti
gs
lcall
out
jo
push
cld
mov
jge
lcall
xchg
xchg
sub
sarb
adc
mov
cmp
insb
xchg
out
jbe
stc
xchg
xlat
push
jmp
mov
pop
cli
xlat
push
outsl
cmp
adc
push
in
in
xor
push
movsb
jmp
mov
je
adc
sbbb
into
xlat
ret
cld
mov
cmpsb
mov
xchg
faddl
sti
std
jae
adc
popa
ja
pop
rorl
fmull
cmpsb
jmp
dec
mov
pop
or
cmpsb
xchg
rorl
out
repnz
cmp
test
jb
or
outsb
addr16
jmp
inc
add
sbb
cmp
mov
mov
int
rolb
xchg
sbb
les
roll
sub
push
inc
push
sub
arpl
movsl
sub
out
div
xchg
pop
xchg
sbb
xchg
lds
cld
out
mov
push
mov
lret
sub
push
sub
sbb
pop
movl
inc
fidivrl
repz
push
in
pop
mov
fsubl
pushl
mov
mov
inc
cld
push
and
test
inc
pop
icebp
xchg
icebp
aad
in
clc
sub
fldl
jne
into
xchg
inc
orl
push
scas
in
inc
repz
xlat
mov
out
repnz
or
add
fmul
and
mov
js
or
std
jmp
inc
imul
pop
mov
les
cmovg
xchg
hlt
cmp
jg
test
mov
sub
push
xor
imul
outsl
jb
push
pop
xor
pop
adc
push
add
roll
jne
dec
in
and
adc
xor
stos
stos
lret
in
or
cs
jb
ret
imul
push
pop
xor
xchg
shrb
push
add
mov
sub
lock
mov
inc
sbb
jl
in
sub
bound
xor
mov
faddl
and
pop
enter
jno
mov
lret
push
cld
es
cmpsl
and
inc
cltd
lock
lock
xchg
addr16
mov
outsb
lds
in
push
jecxz
sub
push
dec
sub
xchg
into
insb
jno
adc
out
mov
sub
in
outsb
pop
inc
test
jb
mull
out
mov
mov
outsl
cli
test
mov
pop
xor
pusha
mov
movsb
lods
call
add
sub
adc
sbb
data16
jne
mov
inc
mov
push
data16
xor
out
sbbb
mov
add
imul
dec
push
adc
and
aad
into
fsubp
jl
sub
sti
in
sbb
js
or
mov
pusha
pop
and
adc
fadds
mov
clc
lret
out
cmpsl
cmp
std
sti
int
jae
inc
insl
pop
pusha
push
pusha
cmpsb
and
jbe
and
push
aas
ljmp
into
imul
xchg
arpl
mov
js
cltd
mov
jo
repz
imul
faddp
movsb
mulb
pop
adc
xchg
mov
cwtl
cltd
fbld
nop
popf
loop
test
dec
popa
inc
out
pop
rorb
cmc
pop
mov
jg
pop
ljmp
mov
push
in
jge
xor
js
fwait
mov
mov
xchg
dec
and
jl
or
push
clc
popa
pop
mov
fimull
adc
clc
out
inc
dec
cmp
popa
dec
popa
adc
sbb
and
orl
rcrb
dec
cmp
test
sbb
dec
push
cmp
and
push
ljmp
paddb
fs
stos
mov
mov
test
adc
jmp
outsl
and
pop
pusha
aaa
push
sub
ror
dec
mov
loopnew,pn
leave
sbb
mov
xor
lret
xor
xchg
out
cmp
clc
xchg
or
adc
sub
sbb
xchg
xchg
dec
add
notl
cmp
adc
out
sub
test
jns
jae
sbb
push
and
jmp
frstor
iret
pop
xor
mov
inc
ror
dec
rorb
fwait
cmp
and
ss
mov
loope
movsb
test
jns
ret
xor
pop
mov
sub
jns
imul
insl
test
cmp
sbb
or
cmp
sub
jns
imul
insl
test
cmp
sbb
or
cmp
sub
jns
imul
insl
test
cmp
sbb
or
cmp
sub
jns
test
xlat
mov
test
ret
push
cli
pop
ljmp
push
lds
sbb
leave
pop
stc
dec
jmp
or
ljmp
sbb
push
push
push
pop
stc
inc
jmp
sbb
repz
ret
imul
add
int
fiadds
pop
ficoml
adc
pop
mov
mov
shll
adc
ret
idivb
adc
in
nop
sbb
and
lods
inc
cmpsb
in
mov
push
cmp
mov
push
inc
sub
mov
adc
mov
lret
sub
mov
mov
cmp
adc
sbb
insl
adc
ds
mov
mov
icebp
imul
jge
or
cltd
sub
mov
test
sub
sub
inc
xchg
mov
xlat
push
jp
jp
lods
test
mov
mov
mov
or
popf
imul
insb
test
out
daa
add
cld
jg
jns
sbb
repz
fidivrl
imul
fnstenv
inc
stc
push
jmp
add
mov
pusha
xlat
jg
jge
mov
cs
cmp
dec
in
push
cmp
sub
sbb
imul
push
xchg
cmpxchg
or
out
outsb
lahf
sbb
mov
or
fldcw
pop
stc
dec
jmp
sbb
ljmp
sbb
sub
push
pop
stc
dec
jmp
sbb
lds
gs
mov
out
mov
imul
push
mov
push
mov
inc
jle
push
add
push
fbstp
gs
pop
popf
mov
mov
sub
cmc
dec
cmpsb
pop
or
sbb
xor
fdivrl
fldlg2
jnp
adc
fisubrl
xchg
aaa
pop
cli
pop
sub
jg
pop
imul
cltd
mov
push
jnp
or
push
inc
push
pop
or
sbb
gs
out
cmpsl
call
lods
sarl
jl
xchg
sbb
into
mul
aaa
jne
xor
sbb
or
push
test
mov
ret
call
xchg
aaa
jo
dec
add
in
loope
fidivrl
xchg
out
lcall
outsl
aas
imul
ds
cmp
sbb
push
iret
pop
push
push
aaa
into
rorb
or
aam
clc
mov
pop
cli
ret
lahf
std
xchg
cmc
popf
lret
add
mov
sub
xor
outsl
cmp
pop
jb
jge
xor
sbb
mov
sbbb
add
fwait
xchg
dec
pusha
dec
adc
fs
mov
mov
int3
inc
cmp
xor
xorl
cmpl
pop
loopne
rcr
cmp
and
lret
std
fldenv
gs
mov
jp
aam
stos
in
mov
cvttps2pi
inc
jns
sahf
shld
lods
fdivs
imul
mov
popa
sub
dec
inc
inc
cmpb
popf
dec
mov
inc
add
add
fs
dec
and
and
xchg
shl
aad
mov
int
xchg
pushf
xchg
mov
call
mov
mov
mov
into
addl
cmp
xchg
inc
inc
lock
pushf
sti
mov
stos
leave
insb
and
daa
ss
jecxz
in
aam
xchg
jmp
mov
arpl
pop
or
xchg
xchg
leave
push
popa
push
out
pop
lcall
jnp
vmread
and
mov
adc
cmp
mov
dec
jns
sbb
adc
pop
out
test
inc
fistpl
sbb
jnp
cmc
jge
fbld
fsubrl
pop
pop
and
enter
lods
adc
push
fs
cmpsl
lcall
mov
mov
iret
or
inc
xchg
jg
jnp
push
cmpsl
outsb
inc
cmpsl
dec
or
dec
mov
mov
lret
movsl
mov
les
inc
adc
sub
jo
pop
push
mov
add
jg
roll
push
test
sub
lea
ret
dec
mov
mov
aam
fsubrl
stos
out
insl
arpl
test
fildl
mov
mov
loope
in
dec
iret
fisttpll
hlt
adc
jg
push
and
xor
mov
int3
cs
cmp
movsb
mov
sub
adc
lea
testl
push
es
mov
insl
test
sbb
pop
pop
imul
arpl
dec
sub
fsub
inc
mov
lock
daa
enter
push
cli
jle
decb
dec
pop
lods
sub
out
hlt
mov
jne
rorl
ja
mov
inc
je
out
xor
push
loopne
pop
add
add
mov
lret
sahf
jge
stos
push
push
in
loopne
inc
jmp
test
icebp
xchg
inc
add
or
xchg
movb
push
add
repz
add
and
push
xchg
iret
xor
adcb
je
bound
test
ljmp
xchg
pop
mov
lret
dec
cld
sbb
xchg
mov
aas
je
add
inc
pop
and
mov
nop
bound
push
fnstcw
pop
rcll
in
and
mov
sbb
sti
pop
test
bound
or
sbb
fidivrs
pop
inc
inc
sti
push
mov
inc
in
push
pop
sub
cmp
sbbb
adc
xorl
inc
sahf
scas
lret
dec
pop
sti
sbb
push
js
inc
dec
xor
xchg
fdivr
arpl
popa
push
and
bound
insl
test
cmp
out
jnp
dec
push
sub
js
repnz
xor
and
das
add
test
fcmovnb
pop
xor
xor
xor
nop
xor
add
das
cmpb
jno
shl
dec
sar
sub
and
stc
out
cwtl
inc
jb
sar
repnz
clc
cmp
add
xchg
mov
jl
mov
pop
dec
push
out
mov
rclb
or
dec
iret
nop
xlat
lock
pushw
stos
xor
dec
xor
int
cmp
dec
sub
scas
pop
outsb
adcb
aad
sub
mov
es
add
xor
in
out
andl
xor
push
cltd
xchg
jns
popa
add
adc
jg
je
mov
cmp
dec
iret
inc
stc
adcl
or
jo
mov
lock
lcall
pushf
iret
add
sbb
jae
cwtl
xor
repz
xchg
mov
shll
out
shr
or
cli
aaa
scas
shlb
dec
inc
or
xchg
imull
jne
shll
je
arpl
ss
mov
fisubl
adc
ret
cwtl
xchg
cltd
repz
fwait
xchg
lods
adcb
or
ds
mov
sbb
enter
xchg
jp
ja
leave
jge
or
add
mov
mov
sub
aam
fsts
pop
xchg
push
mov
inc
fwait
push
xor
xchg
leave
repnz
mov
and
and
bound
inc
loop
out
fidivrl
stos
icebp
into
dec
and
pop
test
pop
mov
ja
pushf
out
jo
xchg
out
fwait
push
stc
fnclex
int
in
dec
popa
sbb
and
sbb
repz
ret
xchg
inc
mov
cmp
sahf
pop
mov
mov
add
test
adc
lret
lret
je
mov
sbb
and
ja
inc
dec
adc
mov
mov
pop
loope
xchg
add
jae
out
xchg
push
call
push
decl
sbbl
lahf
mov
pop
fs
dec
outsb
adcb
mov
negb
adc
addr16
inc
push
ja
jle
int3
imul
pop
sub
jg
push
pop
or
scas
xor
xchg
les
sti
push
pop
sbb
in
test
dec
sub
ret
popf
pushf
inc
jne
jno
push
mov
hlt
mov
jl,pn
inc
cld
pop
cmp
jbe
xor
inc
and
rcrl
pop
sub
fnstenv
fistpl
roll
inc
outsl
lcall
int
popf
movhps
add
lods
sub
cmpsl
cmpsb
out
rcr
mov
xchg
xlat
aaa
out
cwtl
and
dec
frstor
push
leave
mov
xchg
adc
pop
lods
cmp
mov
jmp
mov
add
inc
dec
fiadds
mov
hlt
in
add
adc
mov
in
mov
shll
js
mov
test
inc
mov
xor
cltd
push
in
popl
jns
and
cmc
mov
lea
mov
repnz
notl
test
mov
pop
mov
push
push
into
inc
pop
not
xchg
sbb
adcb
shl
inc
xlat
xchg
mov
xor
inc
xor
imul
sbb
outsb
dec
push
mov
loopne
pop
ds
and
fldcw
xor
xor
inc
mov
or
pop
sysexit
not
scas
push
into
orb
rcr
ss
jnp
sbb
mov
push
xchg
das
lcall
mov
and
ret
mov
hlt
neg
addr16
mov
and
adc
out
sbb
sbb
or
enter
lock
push
mov
lret
pusha
mov
shll
testl
pusha
lods
ja
push
js
lock
push
sbb
test
add
sub
mov
lods
mov
int3
gs
cmp
or
mov
lret
sub
xor
jp
dec
rclb
data16
adc
scas
lds
pop
daa
test
inc
stc
pusha
popa
repz
in
dec
cmp
pop
or
int
std
roll
sbb
iret
test
inc
insl
test
dec
in
pop
push
dec
pushf
xor
fcoms
or
or
mov
adc
mov
pusha
mov
fisttpl
gs
inc
call
mov
mov
mov
dec
test
outsb
mov
loop
mov
aas
icebp
outsl
mov
xorl
sti
repz
or
aam
push
int3
mov
lds
mov
out
push
add
call
les
cltd
mulb
adc
adc
xchg
sub
outsb
sub
rcr
dec
leave
call
mov
cwtl
jbe
dec
fsub
out
mov
push
call
xchg
push
movsb
push
sub
pop
mov
sub
in
sti
mov
mov
sub
add
hlt
ret
fadds
les
fldl
pop
xchg
and
sbb
ljmp
clc
mov
pop
orl
push
xor
aaa
imul
icebp
push
pop
jmp
sbb
aas
iret
stc
mov
dec
aam
rol
outsl
dec
icebp
and
addr16
outsl
in
inc
dec
das
out
stos
repnz
cli
repz
mov
clc
lods
or
pop
lods
js
mov
lea
je
bound
push
sub
jg
fucomi
or
jge
arpl
sbb
cltd
pop
aad
mov
mov
mov
mov
pop
orb
xor
fs
mov
lcall
ss
mull
lods
sbb
cltd
mov
mov
mov
cld
cmpsl
cli
fsubr
into
mov
or
add
mov
cld
lret
add
push
fmuls
icebp
push
mov
lods
lea
ret
ficoml
mov
mov
xor
dec
mov
lahf
lret
xlat
jp
mov
aas
sbb
ret
add
cli
jns
push
add
dec
xor
jnp
ljmp
jbe
dec
adc
sarb
hlt
outsb
push
mov
test
icebp
loopne
add
or
sbb
subb
dec
mov
in
loope
sbb
lahf
jno
outsb
add
jo
push
rcrl
dec
add
xchg
dec
clc
fninit
shr
mov
popl
stos
stos
ror
out
cmpb
pop
jnp
imul
dec
icebp
ret
fwait
push
mov
int
fsubr
sbb
sub
es
sub
outsb
rcrb
into
clc
in
cld
js
pop
movsb
ret
popf
fxch
in
mov
sbb
push
out
out
sub
iret
jmp
jae
adc
pop
xor
shrb
mov
stc
jl
mov
mov
in
movsb
les
cmp
mov
push
xchg
repz
push
sub
je
ds
add
push
je
cmpsb
lcall
cltd
jecxz
aam
mov
jg
or
jmp
cmpsb
xlat
data16
outsl
fisubrs
pop
cmc
cmpsl
mov
fcom
in
xor
jg
push
mov
test
call
pushl
sbb
mov
adc
pushf
mov
daa
scas
or
pop
pop
jbe
out
popa
xchg
cld
sbb
insl
fidivs
and
xor
inc
lds
xchg
das
stos
inc
add
fdivp
dec
mov
and
mov
sub
inc
pushf
bnd
loope
mov
mov
jne
les
leave
aam
pop
mov
lret
mov
enter
mov
cltd
imul
lods
cmpb
sub
dec
push
add
lcall
scas
cmc
mov
flds
sub
daa
jbe
push
xchg
movsb
dec
popf
adc
xchg
xlat
or
jmp
and
shll
jmp
and
or
lods
xchg
out
sbb
ret
jl
clc
mov
sti
ljmp
add
jb
outsb
cld
rorb
dec
and
mov
cmp
mov
out
adc
xlat
imul
ja
inc
lock
test
lret
stos
subb
insl
pop
inc
mov
ficoms
dec
cmp
pop
adc
insl
fsubs
pop
and
movsl
and
stc
add
sahf
add
inc
int3
add
sbb
fcoml
mov
add
hlt
cltd
subb
test
push
outsb
sbb
cmc
int3
ror
ficoms
cmpsl
mov
add
xchg
mov
lret
lahf
push
add
rorb
xchg
fbstp
xchg
ds
or
leave
test
enter
dec
mov
jmp
bnd
add
adcl
sub
or
mov
jbe
mov
repz
pop
dec
iret
lods
fdivrs
inc
aas
fisubs
cmpsb
test
mov
dec
mov
lcall
or
sub
shrl
inc
ja
leave
mov
or
pop
xor
popa
dec
popa
pushf
xlat
loop
stc
inc
push
sbb
mov
bound
add
mov
insb
fldt
cltd
lret
cmp
adc
jns
es
jne
addb
cwtl
fisttpll
push
xor
xor
repnz
ds
shll
xor
mov
cmc
pusha
jno
xor
lret
ss
pushf
mov
outsb
out
test
mov
int3
cmpsl
iret
pop
nop
fists
sahf
mov
cmc
loop
mov
xchg
xchg
pushf
jb
sub
adc
outsb
and
lahf
mov
addl
cmp
sub
add
push
add
test
cmc
pop
jb
sub
xchg
mov
jns
cmpsb
ljmp
jg
push
sub
stc
ss
or
aad
and
sub
sub
jg
loope
pop
and
fnstsw
in
sub
or
mov
mov
test
pop
je
test
scas
in
push
xchg
lods
iret
leave
sbb
or
sub
or
les
mov
lock
jnp
rcll
jb
sbb
mov
js
sub
sbb
loope
pop
sub
arpl
dec
jl
imul
or
add
xlat
sub
mov
jae
jle
mov
cmp
sahf
xor
push
mov
fs
or
loopne
lahf
imul
fwait
pop
lret
sti
push
movsl
xlat
cmp
popw
mov
push
icebp
int3
push
cmpsl
push
push
pop
or
xchg
push
arpl
dec
test
xor
shrb
popa
sbb
cmpsb
mov
push
fistpll
std
add
or
mov
jno
inc
adc
push
mov
mov
mov
dec
fstps
aaa
orl
xlat
pusha
mov
mov
jmp
sub
push
pushf
cli
adc
and
out
icebp
mov
loopne
lret
ss
xchg
cld
loop
xchg
add
adc
push
mov
popf
int3
ss
mov
fs
cld
and
jnp
repz
std
mov
jns
int3
nop
stos
jns
xor
pusha
or
inc
push
sub
ret
or
test
push
pop
jp
or
or
mov
xor
mov
add
sbb
gs
dec
daa
cmc
imul
mov
notl
movsl
loop
cwtl
pop
cmpsb
add
mov
push
xor
mov
cwtl
push
xorl
ljmp
xor
sub
push
sti
fwait
divl
pushf
inc
out
fwait
inc
inc
andb
add
pop
jmp
cmp
shlb
xchg
js
or
pop
subl
inc
mov
mov
dec
daa
and
lea
cmp
sub
adc
ret
jnp
xchg
push
cld
mov
push
push
mov
inc
test
add
mov
pop
pop
push
mov
insb
pop
xchg
aam
xchg
scas
lock
les
cmp
cmp
jo
jns
mov
sub
rcll
mov
or
out
aaa
jns
adc
xor
bound
rolb
and
lock
sbb
cmp
cld
dec
xchg
clc
shll
mov
rcrb
nop
scas
add
insb
mov
ljmp
dec
xlat
xchg
movsb
lea
dec
xchg
add
aaa
repz
test
mov
adc
shr
mov
decb
addr16
jns
mov
dec
lahf
mov
inc
stc
loopne
or
outsb
fld
ret
scas
and
lods
jmp
cmp
push
lods
rorb
cmc
xor
loop
push
movb
or
pop
clc
rcrl
pushf
xor
call
cmp
lock
cmp
arpl
inc
push
jmp
sbb
cltd
cs
loopne
ret
mov
ja
push
test
mov
gs
sbb
and
dec
or
mov
inc
lahf
cmp
inc
addr16
sub
jae
xlat
mov
mov
jg
pop
fmuls
pop
lock
lea
pop
roll
lcall
testl
push
adc
xchg
idivb
mov
add
add
jge
outsl
icebp
movsb
outsb
push
mov
sub
xstore-rng
cmpsl
test
cs
add
cmp
insl
orl
cwtl
inc
dec
jecxz
push
mov
push
or
cmp
clc
addr16
dec
mov
and
or
aas
jb
push
or
leave
outsl
andb
push
push
pop
ret
mov
jne
sti
andl
into
mov
xchg
sub
adc
or
cmp
mov
addr16
lods
js
mov
xor
push
or
push
daa
lret
ret
cltd
xor
mov
das
aas
lret
jl
and
jge
les
loopne
sbb
mov
cmp
or
dec
mov
sbb
dec
push
adc
xchg
repnz
je
jp
mov
hlt
repz
cmpsl
lds
or
lods
es
out
and
pop
lods
xchg
clc
popa
pop
jg
popf
dec
jnp
seta
sahf
sti
out
aaa
call
adc
cltd
pushf
fs
mov
add
add
pop
fisubs
xor
and
dec
cmp
and
lock
mov
mov
pop
shrb
or
jo
repnz
mov
xor
xchg
mov
pop
mov
scas
mov
es
repz
dec
test
or
scas
xlat
fwait
or
and
ret
xchg
out
mov
loopne
pop
mov
rorl
inc
xor
lcall
mov
mov
push
shll
repz
cmp
xlat
pop
push
xchg
jno
add
fnstcw
adc
pop
push
jnp
xor
loopne
jns
lods
imul
in
loop
inc
jno
lds
mov
pusha
xchg
jbe
cmpsl
repnz
cmp
or
add
loope
xor
stos
fisttpll
cltd
adc
sub
dec
mov
mov
push
jns
dec
or
xchg
xchg
cmp
xor
stos
jae
sub
fdivr
sarb
add
or
sbb
mov
stos
call
lahf
add
adc
xor
mov
inc
dec
lret
lcall
idivb
mov
push
shll
inc
sahf
scas
fwait
neg
add
stos
jo
xor
shr
jmp
sub
mov
pop
jecxz
pop
das
mov
cld
lret
jp
jns
aam
xchg
cmpsb
sbb
in
cmp
dec
jb
add
or
adc
cmpsb
ss
xchg
or
pop
xchg
cwtl
flds
mov
cmp
jle
xlat
int3
dec
neg
dec
dec
ja
in
dec
sbb
push
mov
icebp
pushf
push
cwtl
cwtl
xchg
jo
jbe
scas
icebp
push
data16
mov
jb
insb
mov
popa
js
push
dec
xor
das
push
scas
loope
outsb
xchg
mov
sub
movsl
xor
cmp
inc
mov
roll
or
test
jae
out
sub
jns
es
sub
xchg
add
fwait
pop
jae
pusha
push
inc
fisubs
lahf
fldenv
mov
shl
dec
xchg
pop
adc
out
add
xchg
adc
loop
stc
sub
fbld
dec
add
adc
push
insl
bound
mov
data16
fs
sahf
xor
and
out
imul
stos
lret
fwait
and
popf
aas
ja
add
popa
repnz
fucom
loope
movsl
or
jae
stos
xor
fsubrs
adc
fisttpll
inc
punpcklwd
xchg
mov
and
or
jecxz
adcl
jl
jae
lret
into
nop
daa
push
imul
clc
jmp
and
adc
or
out
adc
mov
out
dec
daa
xchg
mov
sarb
imul
fldcw
pop
stc
dec
jmp
sbb
ljmp
sbb
sub
push
pop
stc
dec
jmp
sbb
ljmp
sbb
sub
push
pop
stc
dec
jmp
sbb
call
imul
fsts
sahf
dec
adc
push
sub
cmp
or
sbb
mov
xchg
lods
inc
mov
ja
pop
cld
xchg
int3
daa
fdivl
sub
cmp
or
sbb
insb
xchg
cmpsl
pop
mov
inc
mov
ja
pop
cld
pop
int3
fdivl
sub
cmp
or
sbb
insb
xchg
cmpsl
pop
mov
out
lahf
push
loopne
pushf
ja
inc
xchg
js
push
mov
jae
pop
mov
jo
movsl
inc
divl
movsb
mov
fnstenv
add
sarb
fs
mov
push
and
push
push
scas
cmp
adc
sti
fwait
ja
data16
xor
or
imul
lods
mov
pop
mov
fdivrl
sub
dec
xchg
leave
sub
pushf
cmp
jb
mulb
adc
call
shll
fsubrl
in
or
mov
xor
mov
loope
mov
fcomp
mov
iret
adcl
push
sti
xor
ja
jbe
adc
mov
pop
ss
cmp
or
sbb
insb
xchg
cmpsl
pop
mov
inc
mov
ja
pop
cld
pop
int3
daa
fcompl
test
xlat
mov
insb
jmp
xchg
sub
pop
out
and
and
cld
fs
and
pop
aad
out
test
repz
push
mov
aas
in
and
fs
jl
inc
test
test
jo
and
pop
mov
inc
mov
ja
pop
cld
pop
int3
daa
fdivl
sub
cmp
or
sbb
insb
xchg
cmpsl
pop
mov
inc
mov
ja
pop
cld
pop
int3
daa
fdivl
sub
sbb
xchg
dec
jle
cmpsl
fldcw
or
hlt
lea
sbb
xlat
jno
sub
cmp
lds
inc
mov
das
push
inc
cmc
pop
and
push
mov
mov
xor
xor
pop
out
aas
adc
jbe
jne
loop
sbb
aam
jae
jns
clc
mov
addr16
sahf
sahf
movsl
push
and
or
int
sti
xchg
xchg
and
mov
rol
stos
mov
out
jae
jbe
xor
xor
and
fdivrl
mov
ud1
push
movb
adcl
inc
adc
pusha
insb
lods
jge
decb
pop
sub
push
icebp
mov
xchg
cmpsb
or
enter
adc
add
or
sbb
inc
imul
cwtl
shlb
adc
push
sti
cs
sahf
cmc
test
xchg
movsl
fs
cmp
adc
aad
pop
ss
subb
add
mov
mov
or
lret
fs
sahf
das
pusha
pusha
cmp
xchg
push
fsubrl
mov
push
loope
pop
jle
imul
insl
push
fldcw
mov
jecxz
clc
push
cmpsl
mov
cwtl
sub
inc
lock
cmpsb
mov
inc
aaa
fistpl
or
sub
jno
jle
leave
shll
std
cwtl
mov
sbb
push
adc
pop
dec
pop
pop
xchg
jge
inc
insl
jg
arpl
mov
pop
in
fmulp
sbb
sbbl
enter
data16
sub
push
push
pushl
mov
pushf
mov
pop
adc
mov
and
int3
mov
fildll
aam
push
xchg
lods
ret
sbb
jge
in
repz
fstp
das
mov
pusha
shlb
sbb
in
rorl
das
add
pop
sbbl
inc
mov
jecxz
cmp
mov
mov
pop
dec
in
test
clts
test
into
scas
fisubrl
push
sub
pop
testb
je
pop
lret
fs
push
in
and
fimuls
stos
test
push
jmp
lods
jbe
sbb
pop
nop
rcrl
icebp
jne
test
icebp
negl
mov
shrl
mov
stos
xchg
dec
push
int3
movd
sbb
daa
adc
push
mov
xchg
mov
pushl
out
xchg
mov
lock
push
out
cli
outsl
int3
xchg
xor
scas
shr
xor
stos
jne
mov
ljmp
mov
outsl
mov
clc
fcmovu
mov
popf
int3
scas
ds
and
pop
or
fmuls
fbstp
jmp
leave
lds
mov
sub
mov
and
add
mov
cmp
insl
es
mov
es
jne
lock
dec
sbb
dec
jnp
pusha
movsb
stos
inc
cmp
loopne
xor
fnstenv
adc
andb
pop
stos
add
jae
addr16
mov
inc
adc
scas
pop
mov
dec
mov
sub
fisubs
mov
mov
rclb
insl
shr
das
xor
loopne
shlb
imul
das
xlat
cmpsb
inc
jle
rcll
hlt
cmpsl
fcmovnu
mov
and
xchg
jp
sbb
cmc
orl
or
imul
xchg
or
push
popf
mov
int
inc
add
lcall
hlt
mov
pop
add
push
insl
arpl
sbb
repz
fiaddl
pusha
sar
push
pop
jo
mov
lea
cmp
in
das
push
call
and
jge
repnz
or
xchg
mov
icebp
jne
mov
mov
sub
xor
dec
iret
pop
jmp
xor
pop
xchg
mov
daa
xorb
ret
xchg
movsl
sbb
je
xchg
int
xchg
cltd
nop
sub
das
xor
inc
push
pop
push
pop
jg
jne
inc
mov
testl
or
adc
cmp
adc
sarl
cmc
cmpsb
ja
xor
mov
fwait
imul
sbb
ljmp
mov
sub
mov
test
mov
xchg
mov
and
xchg
push
imul
in
stos
addr16
push
mov
aaa
jecxz
sub
fildl
push
sub
lock
xchg
in
mov
mov
xchg
add
pop
in
mov
push
or
cwtl
add
inc
push
pop
or
mov
inc
repnz
jecxz
and
nop
pop
xchg
push
inc
pause
push
mov
repnz
jb
mov
sbb
pop
lock
mov
mov
mov
mov
jo
mov
xor
idivb
or
outsb
mov
fxch
mov
sti
sarl
adc
leave
insl
jb
mov
lea
out
xchg
movsl
es
cwtl
out
cmp
mov
push
ror
cmp
sbb
jb
mov
cmc
jle
or
and
jae
in
sub
xchg
mov
js
push
mov
cmp
nop
jl
push
dec
jmp
fdiv
insl
repz
rcrb
fidivrs
rol
push
push
and
fs
sbb
je
mov
xor
and
jg
sub
or
ret
or
inc
popf
adc
fcoms
in
sub
incb
cs
jp
pop
das
jbe
inc
mov
outsl
jecxz
roll
sub
les
push
les
lret
mov
mov
icebp
add
cld
push
icebp
xor
sbb
pop
pop
iret
movsl
iret
out
pusha
sbb
xor
and
sbb
test
repz
ret
daa
sbb
call
mov
pop
out
repnz
or
sbb
addr16
addr16
sti
jge
out
sbb
jecxz
pop
cmp
int3
push
aaa
lods
aad
lret
cmp
lret
scas
and
or
fucomi
jge
sub
jnp
sbb
push
test
fcomps
adc
movsl
mov
mov
mov
data16
add
push
lret
pop
lret
mov
loop
mov
pop
inc
dec
mov
mov
daa
inc
sbb
notb
push
adc
add
and
mov
dec
cmp
push
jle
mov
lret
stc
test
arpl
cmp
inc
loopne
pop
std
and
push
lds
cmp
loopne
test
in
dec
cmc
pop
xor
mov
je
aam
shrl
popa
mov
cmp
movsb
leave
test
out
dec
sbb
test
mov
lock
and
push
iret
mov
in
shll
fists
xor
or
pop
popf
jbe
mov
adc
sub
adcl
pop
dec
std
lcall
xor
push
pop
leave
pop
repnz
ss
push
aas
mov
mov
mov
leave
popa
sub
daa
jnp
sbb
rolb
or
jp
mov
mov
mov
push
ret
xor
adc
cmp
xchg
fisubrs
ss
mov
in
or
insb
add
lods
xor
push
andb
stos
mov
mov
mov
les
int3
daa
xor
out
xchg
rolb
cmpb
sub
mov
push
ljmp
shrl
lods
push
or
dec
cmpsb
mov
es
adc
movsl
or
jle
stos
pop
call
in
jae
adc
imul
pop
inc
push
push
cmp
adc
pop
outsl
mov
push
xor
into
loope
mov
mov
inc
shlb
fcmovnbe
pop
or
mov
mov
aaa
in
ret
sub
or
imul
in
and
das
ja
mov
push
outsl
test
cmpsb
pushf
push
push
into
jne
and
rclb
jmp
jle
pushf
xor
jp
push
inc
repz
xchg
sub
add
push
leave
pop
pop
mov
ficomps
mov
push
repz
test
fmuls
sbb
nop
in
sbb
add
xor
jle
xlat
insl
xchg
jg
jne
xchg
in
mov
ljmp
incl
and
cmp
out
pop
push
ret
mov
and
shr
sbb
cmp
enter
sahf
adc
jl
pop
fdivl
xchg
addl
outsb
jge
out
roll
sbb
pop
xchg
and
cmc
sarb
stc
sbb
ret
imull
xor
pop
add
mov
and
jp
sarb
mov
data16
ss
push
jns
inc
loope
push
gs
or
orb
arpl
mov
mov
mov
shl
and
xor
cmp
jae
adc
stos
jbe
jbe
adc
subl
shrl
ret
or
jnp
sbb
jp
inc
mov
xorl
cmp
push
jnp
fnstcw
pop
int3
in
jnp
stos
daa
bound
lods
jl
btr
ja
mov
hlt
and
pop
and
out
in
inc
mov
cmp
xor
imul
push
outsl
sbb
cmpsl
cmpsl
jmp
xor
fisttps
aaa
inc
js
jno
sbb
pop
cs
jge
mov
loop
xchg
pop
mov
pop
inc
lods
pop
sahf
cmp
mov
jg
into
gs
mov
jge
arpl
testl
sbb
insb
xor
inc
xor
call
add
fnstsw
sub
jle
in
xchg
aad
cs
bound
lret
cltd
adcl
enter
ss
add
aam
push
jg
dec
popa
fstps
jp
subl
xchg
dec
cmp
cltd
cmc
sub
mov
jmp
push
push
mov
pop
add
sbb
inc
bound
push
mov
scas
inc
repz
ret
mov
and
hlt
or
in
cli
sub
leave
inc
cmpsb
lock
or
call
xor
add
adc
test
mov
or
or
out
jbe
sbb
nop
xchg
mov
jg
add
mov
cs
addb
idiv
jg
cmp
pop
lea
pop
cmp
arpl
mov
and
je
loopne
and
sub
mov
adc
pushf
addl
jno
sti
inc
mov
xor
push
js
std
fs
js
popa
push
inc
fimuls
dec
mov
les
js
aaa
ret
dec
jmp
sbb
andl
sub
mov
sahf
add
sbb
dec
loope
rorl
inc
je
cmp
icebp
push
movsb
inc
or
pop
jno
inc
fldz
add
mov
ds
mov
rcrl
xchg
popf
add
jecxz
addr16
ljmp
inc
adc
fldt
cmp
jne
jle
int
add
sbb
mov
pusha
cltd
dec
sbb
cmp
test
pop
subb
inc
js
mov
test
loope
cmpsb
inc
lahf
mov
imul
pusha
sti
push
mov
sub
fldcw
stc
mov
nop
pop
mov
ret
cwtl
rcll
xchg
repz
mov
xchg
cmp
rcl
jae
insb
cmpsl
pusha
jo
pop
or
in
mov
jle
int
ror
mov
or
add
hlt
pop
divb
sbb
sub
enter
xchg
sbb
adc
aaa
mov
out
and
xor
jnp
pop
out
stc
mov
into
lcall
adc
cltd
in
jae
push
push
insl
or
ja
push
mov
cmpps
and
adc
mov
stos
xor
mov
adc
mov
xor
cwtl
stc
jl
mov
cwtl
xorl
fwait
rcrl
dec
fiadds
jbe
pop
jp
mov
insl
lret
sbb
adc
pushf
mov
icebp
aam
pop
add
pop
or
cmp
mov
ss
xor
mov
push
rol
mov
push
push
pop
xlat
test
mov
push
mul
jo
cmp
test
nop
stos
xlat
sti
enter
leave
shl
xor
rorl
mov
nop
or
cmp
inc
xchg
mov
inc
rcrl
adc
mov
pop
das
into
mov
jmp
fisttps
mov
and
mov
pop
rcll
sub
insb
and
sbb
repnz
cmp
xor
outsb
push
sbb
dec
mov
pop
push
shld
loope
adc
cltd
inc
push
mov
jb
push
jge
inc
arpl
xor
ss
jmp
int3
jge
cltd
cmp
mov
je
xchg
cmpsb
cmpl
dec
mov
ds
iret
stc
imul
sub
and
mov
inc
int
idivb
orb
add
fcmovbe
and
cwtl
adc
push
pop
test
xor
or
cmpsl
dec
xor
inc
rorb
insb
in
test
sbb
xlat
mov
jl
in
mov
outsb
stos
inc
xor
sub
and
imul
or
jbe
cmp
xlat
xor
loopne
push
lea
push
adc
arpl
stos
pushf
dec
jge
stos
or
mov
fildll
stos
push
inc
inc
cmpsl
xor
jle
je
scas
sub
push
pop
enter
imul
sti
mov
out
dec
ss
fisttps
test
or
cmpsl
cmp
pushf
adc
xlat
xor
mov
and
mov
fisttpl
pop
sti
pop
loope
repnz
das
les
outsl
ljmp
xchg
push
aad
leave
inc
insb
sbb
pop
cmp
xchg
ds
test
int3
sti
out
pop
in
notb
addr16
stc
push
leave
sbb
or
mov
and
bound
fadd
addr16
xchg
or
in
dec
and
mov
mov
ja
mov
nop
aaa
xchg
aaa
fiaddl
mov
testl
addr16
mov
mov
pop
les
jmp
lret
push
int3
add
jge
jg
out
mov
cmpsl
out
lock
fstpt
repz
pop
clc
add
inc
pop
xchg
jnp
add
push
repnz
adc
adc
cmp
fmuls
subb
lret
js
ss
or
mov
mov
fldl
add
sub
es
mov
les
xchg
aaa
cmc
inc
inc
scas
ds
andb
push
inc
mov
push
andl
dec
idivl
cmp
addr16
lods
inc
cmp
adc
das
cmp
scas
mov
in
mov
outsb
or
scas
push
jmp
insl
cmp
lea
jno
xchg
mov
add
push
fdivrl
ficoml
int3
pop
cwtl
adc
and
push
cs
sbb
outsb
pop
lret
sbb
pushf
add
cmc
or
icebp
lea
stos
pcmpgtd
les
cwtl
mov
popf
cmp
or
mov
pop
push
insl
in
inc
loop
cmpsl
dec
xlat
xchg
test
push
jle
push
mov
push
clc
call
xchg
mov
ds
mov
pop
test
imul
mov
sbb
push
pop
add
cmp
outsb
loope
in
lock
mov
mov
push
pop
idivl
inc
subb
sub
inc
adc
insl
lret
lds
repz
pushl
icebp
testb
mov
ljmp
push
and
jbe
and
inc
lcall
ret
adc
lock
fucom
push
rclb
and
iret
adc
push
cltd
xor
repnz
pop
outsb
fstps
jl
inc
sti
sbb
fs
push
and
jmp
xchg
arpl
or
push
iret
push
lock
mov
in
pop
push
enter
dec
pop
cli
and
int3
aas
pop
inc
lea
jl
addl
arpl
mov
mov
mov
mov
mov
scas
fsub
mov
xlat
loop
adc
and
sarb
dec
inc
or
xchg
xchg
xchg
sub
sub
lds
pop
mov
hlt
movsb
sbb
mov
mov
pop
mov
cmp
insb
sahf
or
mov
lret
fwait
in
imul
arpl
cs
insb
int
out
pushf
lret
adc
fs
in
sbb
jne
stc
test
in
cli
jge
add
lcall
rolb
aam
stos
xchg
cmp
xchg
mov
faddl
iret
add
mov
sbb
js
mov
mov
mov
xchg
pop
cltd
sahf
es
xchg
in
push
setae
popa
and
cmp
cld
dec
push
xchg
loopne
lret
movsl
xchg
cmc
dec
push
or
imul
pop
jecxz
pop
lret
jg
pusha
test
xlat
repz
push
xchg
mov
add
dec
lds
xchg
sub
fcomps
insb
inc
sbbb
jge
cmpsl
aad
imul
out
imul
cmp
movsb
jmp
push
repz
fistpll
mov
test
xor
mov
jb
cltd
cmpl
call
idivb
or
adc
jb
fwait
jno
jnp
lds
push
mov
icebp
mov
dec
imul
in
adc
fnstsw
lret
mov
lret
jge
notrack
add
mov
aam
and
lods
cmc
call
xchg
mov
sub
jbe
adc
sti
pusha
scas
mov
mov
xor
pop
test
cltd
adc
in
mov
pinsrw
dec
vrcpss
fwait
ret
sbb
fisubrs
adc
ja
jo
dec
ror
or
into
mov
clc
popf
mov
push
aad
je
movsl
imul
je
add
stos
mov
fs
sbb
xchg
fcomps
pop
insb
and
lock
jb
dec
sub
repnz
push
bound
sbb
inc
pop
bound
cli
and
mulb
test
jge,pt
call
pop
jl
cltd
mov
jg
gs
mov
inc
xchg
seta
mov
call
in
clc
dec
mov
xchg
shll
cmpsb
lret
js
sub
enter
jmp
dec
xor
xor
push
sub
mov
jle
clc
fnsave
jp
sbb
mov
push
inc
jmp
mov
nop
jo
mov
or
pop
das
mov
xlat
popf
aaa
je
add
dec
int3
and
fdivrp
or
push
enter
fdivrs
cmp
push
dec
mov
xchg
jge
cmp
or
dec
test
lods
jp
adcl
add
out
and
test
xchg
and
push
jl
cs
mov
push
dec
imul
imul
push
push
mov
orb
addr16
jne
iret
add
cmp
mov
pop
daa
jg
cli
cli
jne
pop
ja
dec
dec
lret
and
or
ljmp
jb
sti
dec
cmp
xchg
sbb
and
pushf
lea
dec
sahf
push
bound
imul
addb
imul
mov
jne
xor
out
negb
loop
test
mov
iret
mov
pusha
lds
push
loope
insb
xchg
stc
fidivrl
nop
inc
fnstenv
adc
jecxz
mov
jmp
xor
sar
divl
mov
cs
mov
mov
cmpsl
mov
fisubrl
push
inc
cmp
mov
cmpsb
dec
lret
cmp
mov
sbbl
inc
push
mov
repnz
outsb
test
cmp
lret
inc
int
popf
insl
aad
xchg
xchg
mov
out
and
xchg
pop
out
and
or
sub
shlb
das
mov
cmp
jecxz
loop
jne
pop
fdivrp
mov
scas
xchg
popf
and
scas
insl
push
jg
jmp
xor
xlat
push
clc
popf
out
cmc
add
fucom
cwtl
jb
adc
test
scas
and
push
cli
xchg
push
incb
aad
dec
xor
jecxz
gs
outsb
repz
ss
mov
sbb
popa
dec
outsb
sbb
and
icebp
orb
dec
ficomps
fsubrs
adc
in
jp
fcomps
cmp
sub
jb
cmp
scas
enter
rcrb
fucom
push
icebp
dec
inc
fisttpl
push
in
dec
cmp
jge
mov
lcall
and
loopne
lock
pop
and
mov
stos
inc
aad
or
sti
sub
add
ljmp
or
and
mov
imull
xchg
dec
cmpsl
pop
mov
inc
mov
ja
pop
cld
pop
int3
daa
fdivl
sub
cmp
or
sbb
insb
xchg
cmpsl
pop
mov
inc
mov
ja
pop
cld
pop
int3
daa
fdivl
sub
mov
imul
xchg
cmpsl
fdivl
mov
ja
pop
cld
pop
int3
daa
fdivl
sub
cmp
or
sbb
insb
xchg
cmpsl
pop
mov
inc
mov
add
lods
enter
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
addb
fs
sbb
push
sub
xlat
inc
jecxz
iret
in
xchg
mov
movsb
push
jg
outsl
je
fs
adc
add
xor
and
aam
out
hlt
jmp
iret
xchg
faddl
push
inc
outsl
je
fs
adc
add
xor
and
aam
out
test
test
and
push
je
or
neg
subl
cltd
sbb
pop
arpl
aam
and
mov
mov
ror
xchg
int3
xchg
dec
pop
or
sbb
ret
cmp
stos
subb
push
add
das
imul
jp
das
in
popa
dec
xchg
scas
imul
popa
movsb
push
das
arpl
pop
arpl
pop
sti
out
insl
inc
and
and
dec
adc
in
test
adc
rorl
pop
and
enter
aad
int3
out
jns
outsl
iret
xlat
add
dec
lahf
movsb
jo
jo
dec
pop
fwait
test
add
xor
xchg
incb
fbstp
xlat
fidivl
cmpsb
lahf
xchg
jg
js
dec
fs
adc
add
xor
and
aam
div
in
xchg
cmpsl
test
xor
daa
outsl
xor
dec
jno
imul
mov
xchg
xchg
lahf
aam
and
xor
das
and
sbb
cmpsb
xchg
mov
loope
into
ljmp
add
push
push
add
xor
and
aam
out
hlt
iret
xchg
mov
movsb
push
jg
outsl
je
fs
adc
add
xor
and
aam
out
hlt
iret
xchg
mov
movsb
push
jg
call
les
testb
mov
test
push
mov
mov
mov
lea
sbb
pop
jbe
leave
popa
sahf
sbb
lods
and
flds
xlat
fwait
pop
into
ljmp
and
dec
aam
add
mov
add
nop
sub
jae
sub
mov
ja
sub
iret
cmp
mov
xor
fwait
pop
mov
stos
add
out
adc
add
jle
and
outsb
add
nop
test
jmp
clc
add
cmp
shll
and
clc
sub
mov
mov
adc
jge
movl
pop
cs
mov
mov
xor
imul
sbb
cmp
bound
cmc
sbb
add
add
mov
stos
jns
aam
ret
gs
sbb
outsl
ret
add
sbb
xchg
add
loope
daa
jno
outsb
push
sub
es
mov
fidivrs
cltd
insb
cmpsb
out
push
rclb
and
xlat
jne
push
faddl
in
pop
aam
xor
out
mov
loope
nop
outsb
stos
int3
or
fs
stc
push
fidivrl
and
hlt
fadd
orl
mov
fs
aas
cmp
call
shll
shll
icebp
paddsw
fists
push
pushf
in
cmp
jp
push
fst
sub
insb
test
xor
jne
push
inc
ret
cltd
repnz
push
cli
cmpsl
lahf
inc
xor
gs
pop
cmp
push
fdivrp
test
es
pop
leave
lret
xchg
push
sti
xchg
sarb
mov
mov
jno
sbb
pop
rcl
fsubl
pop
xchg
or
insl
cmp
and
test
xor
jg
add
cmp
je
fdivrp
add
lahf
push
rorl
loope
mov
pop
addb
inc
cmpsl
ret
jle
mov
or
dec
mov
cmpsb
flds
fadds
testb
test
jno
mov
push
popa
cli
cmpsb
dec
repz
or
and
js
push
mov
enter
adc
add
cmp
hlt
cli
int3
out
imul
stos
add
std
scas
sbb
pushl
aam
jno
pop
push
ret
xchg
add
add
stos
cs
push
push
lock
xchg
sub
mov
xchg
ret
xor
imul
sbb
jg
mov
jl
enter
hlt
sub
sbbb
lods
xchg
jmp
or
xchg
jae
xlat
mov
adc
test
xchg
jmp
adcl
ficoml
dec
lahf
andl
mov
xor
fsts
out
inc
mov
aas
mov
xor
sbb
xchg
cltd
sbb
enter
xchg
lds
idivl
push
mov
insb
iret
push
push
loope
pop
je
cmc
xchg
pop
inc
cld
cmp
pop
or
push
out
bound
dec
cwtl
arpl
stc
xor
arpl
dec
dec
mov
push
ret
cmp
out
roll
xor
or
leave
popf
cmc
clc
sti
in
pop
gs
mov
adc
xchg
dec
fdiv
mov
testl
call
jnp
sbb
scas
push
add
loope
cmp
sbbl
out
jg
or
cmpb
mov
pushf
xchg
dec
push
aaa
test
mov
cmp
lahf
or
pop
mov
ja
call
sbbb
imul
cmp
dec
popf
test
stos
jo
jae
fnstcw
int3
int
or
aas
adc
mulb
pop
adc
shlb
mov
and
mov
test
jg
in
cli
cmp
in
jge
in
loop
inc
push
pop
pop
or
or
inc
out
ds
xchg
add
loop
repz
sbb
mov
xor
lods
sub
inc
pushf
adc
push
mov
cmp
fs
rcrb
imul
rcrl
fs
jecxz
jo
xchg
repnz
or
sbb
inc
lcall
addl
jp
and
mov
pop
xchg
add
aaa
rcrb
pushf
ja
mov
loope
ret
xchg
xor
mov
arpl
jb
ficompl
cld
mov
inc
fs
pop
jle
xor
stc
int3
packsswb
mov
xchg
lods
loopne
pop
mov
push
ds
test
mov
fnsave
cmpsb
popa
in
leave
mov
popa
pop
xor
adcb
jl
jle
xor
cld
adc
je
pop
roll
jns
ficompl
std
loopne
sarl
orl
jle
inc
mov
jne
insb
das
nop
mov
mov
and
sbb
lods
rolb
sub
jmp
addr16
cmpsb
fcoms
in
jmp
or
imul
and
or
jbe
and
sbb
hlt
mov
jle
sbb
cs
dec
ja
mov
push
mov
jbe
cmc
dec
movsl
xor
xchg
les
incl
divb
dec
dec
inc
xor
mov
sub
das
pop
and
out
jb
cwtl
xchg
xchg
in
dec
or
mov
loope
icebp
dec
cmpsl
lea
xchg
xchg
addl
sub
movsl
jp
inc
lods
movsb
inc
xchg
adc
jge
loopne
aam
aad
cmpsl
sbb
jmp
inc
cmp
push
aad
xchg
mov
shll
in
mov
test
lods
or
aas
jnp
inc
movsl
and
add
cmc
es
xchg
lret
ja
inc
iret
mov
or
repnz
jg
jmp
or
movsb
push
inc
or
sahf
cltd
xor
mov
cwtl
inc
ret
or
or
sub
fistpl
roll
aaa
ficoms
xchg
lea
and
test
sbb
repnz
sbb
push
in
sub
int3
xchg
inc
mov
or
pop
or
pop
mov
test
in
mov
push
fbld
mov
jno
lock
scas
or
lock
shrb
pop
je
sub
and
xor
lahf
insb
sub
aad
inc
mov
mov
sub
nop
inc
loope
jae
in
out
mov
push
mov
cltd
add
into
and
orl
fildl
mov
mov
pop
jp
idivb
movsb
sbbb
cld
iret
mov
cltd
sub
sub
cmp
mov
xchg
enter
add
loope
lods
mov
test
inc
fisttpl
ret
into
xchg
add
jae
stos
jge
jno
rclb
scas
xchg
pop
ss
jbe
xor
jbe
sbb
xor
dec
insb
pop
cmp
iret
mov
out
mov
xchg
sahf
addl
mov
aad
xchg
xchg
aad
xadd
cmp
pop
popf
imul
pop
fcmovne
insl
fsubr
xor
je
cli
adcb
out
rclb
and
inc
es
mov
dec
lock
add
sahf
out
pop
inc
in
add
mov
call
mov
je
adc
dec
mov
aad
jg
or
jmp
cmp
xchg
je
stos
lcall
inc
notb
rorl
push
cmp
dec
sbb
pop
aad
rolb
jb
hlt
test
jg
mov
xlat
xchg
inc
fdiv
test
mov
cmpsb
lret
faddp
in
jmp
ss
andb
ljmp
dec
cmp
stos
push
std
jns
xchg
mov
pop
pop
cli
scas
cli
in
jbe
push
psubusb
jbe
ss
mov
rcll
fimuls
fnsave
or
push
push
insl
cmp
ljmp
jne
pop
or
add
int3
inc
xchg
jmp
mov
jbe
popa
or
pop
aaa
scas
cmpsl
in
jg
into
out
loopne
push
lahf
or
sub
fimull
stos
dec
js
inc
jecxz
or
scas
daa
idiv
xchg
sbb
mov
hlt
lahf
into
stos
ss
mov
mov
sub
jmp
call
sahf
daa
and
push
xlat
and
in
je
mov
inc
insl
mov
jmp
or
xlat
mov
adc
stos
inc
fldenv
mov
xchg
dec
into
jg
dec
dec
test
aaa
ja
in
into
cmp
push
cmpsb
fs
sti
and
aad
hlt
xor
adcl
fldl
std
outsl
les
leave
insl
dec
loope
inc
cmp
xchg
cld
insl
pop
outsl
mov
test
xor
loopne
out
jge
sti
cmp
addl
xor
arpl
jno
sbb
pop
adc
jne
sub
and
out
popa
shlb
inc
sar
in
mov
cwtl
sub
scas
std
fs
mov
fcmovnbe
sub
cmp
js
lods
out
lea
insb
mov
enter
seta
je
mov
xchg
jg
or
mov
mov
inc
and
push
enter
js
imul
loope
add
dec
shrl
filds
lcall
add
rsqrtps
mov
mov
scas
scas
jb
cmpsb
xlat
and
imul
mov
fdivl
mov
pop
push
scas
xor
adc
dec
push
or
popf
sbb
push
xor
repnz
adc
add
dec
sub
insb
xlat
xchg
addr16
mov
push
pusha
xchg
cmp
sbb
sub
or
addb
adc
mulb
scas
lret
lret
shll
ds
stos
mov
push
dec
rorb
dec
aas
xor
push
inc
adc
or
dec
mov
mov
ja
or
cmpsl
cs
into
xor
jg
das
fcoms
ret
mov
cmp
aam
sbb
or
mov
lahf
lea
gs
cmp
and
popa
jp
test
popa
or
sahf
out
es
shll
fmuls
add
sbb
dec
mov
imul
or
fildl
xchg
push
xor
xchg
insl
push
add
or
mov
or
sub
and
dec
dec
in
sub
push
insb
sti
cmp
jae
cli
push
outsb
xchg
mov
and
mov
fdivrl
push
testb
push
fwait
test
mov
test
cs
scas
sbb
mov
dec
int3
dec
add
adc
test
call
pop
stos
das
out
add
leave
inc
gs
or
scas
js
std
xlat
js
sub
pop
mov
pop
lock
adc
jno
inc
xchg
mov
aas
mov
mov
and
dec
cmp
cs
ds
lock
xchg
push
das
xor
xchg
sbb
int
ret
nop
dec
popf
lds
or
outsb
mov
in
das
inc
mov
xor
out
ret
scas
sub
pop
pop
add
sbb
push
push
push
sub
add
push
dec
cmpsl
cmp
cmp
push
test
aaa
add
lret
cmpsb
dec
sbb
popf
pop
mov
push
push
repnz
popa
rcl
cli
std
pop
in
pusha
xchg
enter
lock
pop
test
scas
jmp
mov
in
inc
test
push
and
ja
mov
jmp
fiadds
mov
std
xchg
xorl
and
add
cli
ret
adcb
stc
mov
imulb
cmp
inc
add
jb
mov
loopne
pusha
lock
pop
inc
sub
pusha
ret
xchg
xor
sub
int3
out
stos
sbb
xchg
jae
ret
pop
pop
mov
test
fs
jnp
jno
aaa
fistpl
adc
loope
test
xor
xchg
and
mov
or
jae
pop
xor
cli
sub
clc
movsb
out
pop
test
xchg
lret
push
subb
xchg
pushf
cmc
ret
clc
lock
dec
movsb
cwtl
in
andl
adc
rcl
in
mov
mov
ss
mov
shl
gs
add
sub
pop
pusha
pop
jecxz
push
sub
decl
sub
fldl
mov
iret
shlb
test
outsl
iret
or
ljmp
jle
iret
loope
outsl
jns
ror
adc
dec
loop
pop
sub
add
or
mov
pop
and
cmp
fwait
lcall
jnp
fsubs
xor
movsl
xchg
scas
dec
push
iret
dec
adc
cmc
leave
lahf
arpl
mov
xchg
std
pop
cmp
mov
push
pusha
mov
or
sub
movsb
xchg
imul
ret
inc
dec
add
lods
lods
fimuls
outsb
int
es
add
not
call
into
stos
mov
lret
push
and
add
cld
sub
or
cli
imul
xchg
test
aaa
in
rorb
add
lds
pop
stos
lock
push
and
stos
pop
cmp
mov
test
loop
cmp
gs
or
insb
jle
inc
movb
xor
jns
addb
scas
movsb
ret
add
stos
inc
or
popa
sahf
jecxz
stos
lea
mov
sub
dec
testb
daa
xchg
cwtl
jp
fcmovnu
jp
dec
cmpsl
sub
xlat
sti
xchg
jne
ficoml
inc
enter
inc
ja
xorl
rclb
int3
push
push
test
or
xor
stc
pop
sarb
pop
cld
mov
mov
xor
mov
push
lcall
insl
pop
fcoms
push
push
push
dec
push
out
adc
leave
jbe
in
shlb
test
icebp
out
fimuls
int3
sbb
push
cmp
dec
push
js
mov
ret
fdivrs
add
clc
cmc
add
xchg
or
inc
pop
mov
test
cmp
jno
enter
mov
pop
shll
jno
mov
pushf
push
sbb
loop
xorl
xor
filds
out
and
sub
jns
test
cli
rolb
pusha
enter
mov
icebp
and
sbb
inc
dec
sahf
jbe
cmp
cmpsb
dec
leave
push
pop
mov
clc
mov
pushf
insb
into
push
testb
push
pusha
sbb
dec
adc
pushf
outsl
jb
lahf
sahf
or
aaa
inc
adc
dec
ss
or
mov
push
ficompl
aas
fbld
adc
inc
aas
pushf
cmp
lcall
lods
sub
jb
xchg
sbb
test
mov
xor
mov
jae
out
sar
vmovups
push
or
jns
push
mov
xor
push
lahf
xchg
subl
jbe
packsswb
imul
push
negb
sbb
cmp
or
ds
aas
push
jmp
sub
repnz
push
cli
xor
insl
fs
cld
stc
mov
pop
xor
or
xor
push
test
scas
cmpsl
popa
lea
mov
das
out
adc
xchg
call
jle
or
push
fnstenv
ja
cmp
bound
sahf
push
or
inc
push
xchg
cmpsl
andl
scas
push
in
cmc
cmp
inc
add
rcrl
add
jne
add
sti
sbb
jmp
pop
pop
cmp
mov
cmp
les
xchg
lret
jg
adc
fwait
mov
push
insb
ret
jnp
or
imul
inc
shrb
cmpsl
jno
fistl
testb
mov
adc
dec
mov
mov
sbb
stos
sbb
jb
xor
rol
fbld
lcall
jns
lret
je
pop
jmp
in
ja
pop
shrb
js
jl
push
or
sbb
testb
cmpsl
cwtl
inc
dec
push
in
cwtl
fistpll
sbb
jae
sti
mov
sbb
sbb
or
cmp
addl
std
mov
jnp
jl
fistl
jge
incl
lds
or
inc
ds
fidivs
fcomps
and
ja
mov
test
shrd
and
xchg
js
mov
subb
loopne
loop
pop
fwait
cwtl
push
dec
push
ss
int
dec
pushf
clc
enter
lcall
test
lea
imul
and
in
fstpl
hlt
mov
test
inc
pop
ror
sbb
andl
stc
test
test
insl
sbb
inc
mov
mov
xor
xor
leave
les
jg
fwait
sbb
jg
cmc
dec
xor
invd
pusha
cmp
stc
insb
sbb
jb
insl
jo
dec
push
push
pop
sarl
push
js
inc
rcrb
xchg
aad
in
inc
dec
test
sub
shll
in
jns
mov
xchg
xor
in
stc
mov
jno
adc
gs
push
mov
jge
lret
mov
in
jns
adc
sbb
xlat
xchg
cli
jb
aas
mov
enter
stos
fimull
xor
icebp
icebp
addr16
mov
hlt
bound
insl
sahf
dec
mov
xchg
int3
and
les
mov
mull
adc
inc
xchg
mov
sub
or
inc
fidivl
pop
in
add
cmc
lret
sbb
jle
enter
mov
in
ret
call
test
mov
imul
shr
arpl
xor
mov
dec
push
lret
jo
jge
push
movsb
sbb
pop
push
mov
roll
sbb
je
btr
jbe
mov
inc
dec
sub
cmp
mov
scas
sbb
cmpsb
fistpll
mov
das
fbld
cs
clc
out
hlt
lret
aam
jo
dec
inc
mov
cmp
mov
cmp
out
adc
aad
js
mov
jecxz
cmpsl
fstps
out
mov
into
and
cmp
cwtl
loop
in
les
cmp
push
xchg
lock
xchg
lret
sbb
add
xchg
xor
cmp
adc
pop
jb
movsl
ror
ja
out
outsb
imul
add
jns
iret
pop
loopne
xor
add
out
add
sub
fmull
add
push
in
and
lret
add
data16
cwtl
jge
enter
dec
inc
hlt
inc
xor
add
add
dec
mov
test
xchg
xchg
push
mov
loope
jmp
icebp
cmp
addl
pusha
push
addr16
sub
stos
and
fdiv
int3
lret
add
hlt
ja
dec
sbb
xchg
push
jb
mov
mov
pop
jae
sahf
loop
popa
pop
cltd
pop
push
xchg
divl
sahf
sarb
fsubp
test
and
insb
sub
mov
ret
repnz
fcmove
lahf
sub
test
sbb
push
mov
add
and
dec
xchg
xchg
frstor
dec
and
mov
ficompl
jmp
cwtl
rorl
pop
or
loop
mov
aam
fnstenv
lret
adc
jbe
sub
call
push
mov
outsl
xor
dec
mov
or
push
inc
jg
stos
jmp
je
lods
lret
lret
rorb
and
jl
pop
out
mov
cmpsb
xor
ljmp
push
sub
jmp
jnp
outsl
aam
ret
push
sbb
ljmp
clc
xor
fcmovne
mov
sbb
cmp
jnp
inc
mov
cmpsb
cmp
jl
pop
mov
xor
popf
and
adc
cld
xchg
mov
jmp
mov
adc
push
imul
out
popa
push
addr16
sub
stc
leave
out
popf
pushf
das
push
inc
fs
ficoml
fs
fmull
mov
pop
xor
cmpsl
xchg
icebp
xchg
cmpsb
mov
cmp
or
dec
jmp
sarb
fwait
cmp
scas
sub
inc
xchg
sub
and
ret
lds
fidivl
lahf
push
xchg
incl
xchg
test
push
in
push
call
cli
divb
stos
push
xchg
pop
cmpsb
mov
daa
adc
xchg
sahf
repnz
stos
cmpsb
rol
sub
add
xlat
into
lock
loope
mov
mov
mov
push
test
lcall
int3
nop
push
lock
sub
stc
mov
dec
outsb
jmp
or
dec
xchg
adcb
in
xchg
outsl
test
xchg
dec
mov
xor
add
sub
xor
push
adc
fistps
cwtl
cs
in
ja
sub
push
dec
adc
push
test
cmp
movsl
xchg
sub
fcomps
mov
jmp
push
mov
sbb
test
lea
pop
rclb
cld
xchg
out
insb
dec
xchg
adc
sbb
cltd
or
decb
mov
sbb
pop
xlat
mov
lds
leave
scas
jno
insl
xchg
repnz
outsb
mov
fists
xchg
sub
in
data16
call
cmp
lods
ja
pop
je
aad
dec
mov
mov
sbb
mov
test
push
lods
int3
stc
jb
or
pop
mov
push
push
cmpsl
add
dec
dec
in
mov
outsl
dec
mov
dec
adc
add
xor
and
aam
out
hlt
iret
xchg
mov
movsb
push
jg
outsl
je
fs
adc
add
xor
and
aam
out
hlt
iret
xchg
mov
movsb
push
jg
outsl
je
fs
adc
add
pmullw
out
hlt
into
xchg
mov
movsb
push
jg
outsl
je
fs
adc
add
mov
movsb
cmp
mov
dec
pusha
pop
jo
cmp
rcrl
ret
or
xor
dec
and
cltd
ss
and
flds
leave
sti
cmp
sub
sbb
or
pop
cmpl
cltd
inc
mov
mov
adc
add
sub
arpl
push
add
jno
inc
jnp
jae
jp
adc
jo
mov
ret
pop
xchg
jl
outsb
cmp
andb
popf
enter
bound
xor
jmp
dec
pop
jecxz
pop
lcall
sahf
push
lods
leave
test
mov
mov
xchg
sub
inc
shrl
inc
push
cmp
rolb
push
adc
mov
mov
push
loopne
pop
mov
out
pop
mov
pop
jns
sub
xor
mov
lds
insb
push
es
fnstenv
push
sub
add
mov
lret
and
popa
inc
xor
sti
and
inc
mov
jbe
jecxz
sub
cmpw
pop
int3
push
pop
jp
mov
fwait
ret
push
inc
jbe
shll
or
adc
shrb
cmp
add
imul
sbbb
loope
icebp
adc
addr16
pop
xchg
jl
insb
fnstsw
or
and
pop
pushf
dec
jmp
mov
movsl
repz
imul
or
jns
daa
ljmp
and
ss
das
mov
inc
jmp
cmpl
orb
imul
cltd
inc
mov
stc
and
adc
add
repz
sub
sbb
or
pop
orl
arpl
xor
and
adc
add
repz
cmp
pushf
or
repnz
div
xchg
out
xor
rclb
sbbl
mov
cmpsb
fsubp
sbbb
sub
ja
mov
fisttpll
xchg
push
sub
jb
mov
cs
mov
loope
mov
jg
xchg
xor
jmp
jmp
adcb
movsb
jmp
cmp
fcmove
mov
or
push
jbe
pop
fwait
test
nop
mov
mov
test
dec
add
jmp
jge
sub
and
mov
daa
mov
xor
jnp
and
gs
xchg
ds
ror
arpl
add
jne
cmp
xchg
call
gs
jecxz
scas
lret
xchg
sar
test
enter
ljmp
clc
cmp
cmp
rcrb
or
call
or
jecxz
adc
add
nop
pop
and
push
push
pop
or
call
clc
mov
xor
fs
sti
mov
rcr
push
cmc
pop
pop
mov
inc
sub
jo
jmp
push
xchg
aam
inc
and
pop
mov
aaa
jo
and
mov
cld
mov
xor
movsb
or
orb
xchg
xor
enter
movsb
popa
dec
and
jne
pushf
pop
push
xchg
or
or
inc
stos
gs
popa
fcmovne
sub
rolb
arpl
inc
and
jp
pop
or
sub
in
pop
jb
xorb
dec
fiaddl
das
jo
xor
cmp
enter
jno
adc
xor
dec
jbe
loop
xlat
gs
sti
gs
loop
xor
dec
inc
mov
adc
cs
hlt
jle
je
je
push
mov
test
imul
push
std
adc
mov
ds
cld
dec
xor
popa
fwait
xor
cltd
addr16
lahf
in
bound
lods
sarl
es
stos
pop
mov
mov
adcl
xchg
sbb
push
aas
dec
mov
mov
leave
idivb
or
xor
add
dec
jecxz
dec
xor
jg
xorb
mov
and
iret
mov
fcmovb
lds
into
cmpsl
xor
daa
in
ficompl
mov
sub
loopne
push
or
adc
push
test
jne
pop
pop
in
xchg
addr16
add
xor
mov
push
stc
nop
imul
sbb
jecxz
test
mov
or
popf
clc
xchg
mov
rclb
push
mov
push
mov
mov
lahf
jne
mov
and
pop
xchg
xor
add
mov
dec
mov
dec
jge
dec
das
int
stos
gs
sbb
hlt
dec
cld
adc
pop
mov
xchg
cmc
lea
and
add
xor
pusha
add
repnz
cmpsl
dec
sbb
mov
inc
pushf
mov
xchg
es
mov
popa
bound
in
daa
cs
pop
sub
sbb
xorb
jnp
lods
imul
xchg
test
call
pop
sub
and
adc
out
rcl
movsb
imul
test
test
and
sub
mov
sub
repz
sub
cs
xor
push
adc
aas
into
loop
leave
sub
es
sub
pop
lret
add
jnp
roll
pop
cmpsb
rorl
pop
jae
ljmp
mov
negl
xchg
fdivrl
aas
cmc
and
sub
popa
mov
aam
mov
sbb
test
imul
sbb
fsubs
pop
push
mov
test
mov
xor
mov
popa
aaa
lock
jmp
sti
adc
enter
fstps
imul
xor
roll
push
xorb
fwait
repz
outsl
icebp
adc
stc
xchg
pop
dec
ljmp
sbb
sti
jns
mov
sbb
fs
rcrb
fmuls
mov
imul
out
fwait
lea
adc
out
cltd
push
add
scas
xor
mov
in
sti
pop
sbb
insl
icebp
imul
movsl
aaa
xchg
nop
jecxz
xchg
mov
mov
xor
add
mov
lcall
lahf
push
dec
push
xor
nop
jle
sub
mov
add
and
sbb
cmpsb
cmp
mov
cld
sub
loope
dec
insl
sbbl
lret
mov
out
out
and
adc
jge
mov
cmp
icebp
jecxz
cltd
les
mov
add
shll
jns
pop
jl
sti
xchg
mov
fnsave
aaa
xchg
stos
xchg
pop
pop
ja
lods
pop
outsb
sbb
lret
ljmp
aam
enter
movsl
xor
inc
pop
pop
imul
loop
mull
xchg
aam
xlat
popa
mov
jl
out
test
add
es
pop
dec
cs
or
sbb
xlat
cld
jmp
stc
push
shll
push
orb
out
cmp
push
pop
gs
scas
push
movsb
pop
loope
dec
es
mov
adc
ljmp
stc
inc
xlat
and
in
fbstp
test
sahf
in
into
aad
adc
xchg
xchg
in
fstl
fdivrs
jns
orl
jo
pop
movsb
shll
into
fwait
push
fmulp
enter
mov
gs
xchg
mov
pop
and
or
aaa
outsl
mov
inc
fmul
sbb
cli
lods
cmp
or
cli
pop
cli
dec
add
xchg
fldcw
repnz
outsl
popa
jno
mov
cmc
xchg
test
icebp
pop
js
scas
icebp
mov
cmpl
mov
jns
sbb
fistpll
xchg
sbb
adc
mov
or
mov
push
sub
pop
icebp
daa
cwtl
int
mov
sub
mov
sub
les
movb
outsb
sub
movl
mov
xor
cld
adc
mov
jno
sub
add
mov
xchg
xchg
jae
push
mov
xor
cmp
mov
cmpb
push
testb
or
test
test
dec
add
icebp
pop
add
ret
xor
jp
cmp
jne
mov
push
mov
inc
xlat
sbb
insl
dec
push
loop
pushf
mov
cmp
int3
or
cwtl
aam
inc
mov
mov
or
jecxz
pop
sbb
push
ss
dec
sbb
popf
cmc
mov
pop
bound
push
loopne
clc
sbb
cmp
mov
call
rorl
imul
and
sbb
mov
std
aaa
mov
and
outsb
sub
aas
jl
push
pop
negb
jmp
out
imul
adc
outsb
call
jecxz
cmp
jne
xor
jmp
cs
stc
popa
cld
sub
push
sub
inc
fdivrs
addb
jbe
sbb
call
xchg
int
test
inc
mov
fdivl
xor
ret
loope
stos
inc
inc
xchg
cmp
dec
xor
or
and
xchg
or
pop
xor
jbe
and
sub
jns
or
push
and
xchg
push
call
xor
or
add
xchg
test
loopne
xchg
jle
pop
movsb
push
lods
cltd
mov
inc
clc
idivb
add
pop
xchg
mov
inc
cmp
sbb
xchg
gs
mov
xor
push
push
popa
mov
jp
dec
add
sub
imulb
sub
sub
pop
subl
dec
aad
cmp
cltd
xchg
sub
push
xor
mov
sub
push
clc
jo
push
inc
ret
cmc
bound
into
stos
jae
cmp
or
ss
negl
xor
push
hlt
mov
mov
or
adc
cmpsb
fs
jo
imul
in
out
iret
xor
lods
imul
sbb
aad
ficomps
and
sub
push
aas
aad
xlat
cmp
idivl
dec
cmovae
cmpsb
push
xor
int
xchg
decl
mov
push
daa
cmp
mov
loope
std
adc
es
sub
rcl
mov
insl
in
call
outsl
or
cmp
mov
xor
cmp
pop
mov
frstor
dec
xchg
sahf
loop
in
mov
jnp
fscale
adc
cmp
gs
arpl
sbb
call
sub
adc
xor
aas
sbb
xor
xchg
jmp
test
rorl
xchg
addr16
daa
mov
cwtl
mov
jp
cli
in
js
sbb
sub
jne
insb
loop
inc
cs
leave
push
stos
out
aad
mov
jne
stc
add
fstps
xor
lods
add
lea
push
iret
fyl2x
pop
jae
lea
cltd
aad
xchg
std
jle
fisttpl
popa
aam
mov
rolb
divl
sub
stos
fstpl
aad
cmp
mov
shll
decb
test
jno
fs
fstl
sbb
in
popa
jge
pop
sub
popf
jle
jmp
repnz
out
push
adc
out
in
test
xor
cmc
cwtl
xor
xor
sub
push
dec
pop
mov
pop
push
lret
mov
mov
test
cli
in
dec
add
adc
stos
pop
jl
fdivl
in
stos
sbb
jmp
jns
loop
jge
or
mov
xchg
out
nop
inc
mov
cld
or
cmp
jb
jl
dec
pop
adc
out
mov
mov
pop
xor
shll
push
jae
jg
sub
arpl
scas
gs
pusha
nop
mov
out
stc
rorl
xchg
sbb
push
push
imul
decl
lret
int
outsl
cmp
scas
jb
xor
popf
mov
xor
dec
sub
fstp
ja
into
les
mov
mov
imul
out
cwtl
xchg
push
fstl
mov
std
mov
imul
fldcw
popf
adc
fiadds
mov
cmpsb
in
mov
cld
cs
adc
lret
jns
inc
test
sti
or
adc
sti
lods
and
sub
popa
pusha
inc
dec
cmp
out
xchg
filds
pusha
mov
xchg
sahf
or
xchg
jecxz
ret
repz
dec
frstor
mov
fwait
dec
mov
outsb
push
sbb
mov
popf
jbe
ret
int
pusha
adcl
jge
in
jle
std
pop
or
jg
push
xchg
fcom
sbb
add
rorl
or
jb
inc
add
fwait
leave
sbb
and
push
cmp
mov
cmpsb
testb
pop
push
scas
mull
inc
lds
mov
fdiv
push
pop
aad
jge
dec
push
je
int3
and
add
js
ret
sbb
mov
test
sub
addr16
xchg
xchg
inc
das
jb
insb
push
push
xor
insb
and
iret
mov
imul
in
mov
add
mov
push
icebp
int
addl
jp
loope
jne
notl
lret
xor
nop
mov
cmp
rclb
ss
push
jg
sub
mov
sbb
add
loope
or
mov
mov
idiv
and
or
or
pushf
cli
test
sub
jne
cmp
inc
lahf
push
mov
xchg
vandnps
ss
xchg
xorl
cmp
push
pop
scas
xlat
and
sarl
mov
fcoms
or
popa
test
dec
lea
add
outsb
out
adc
xchg
add
out
and
out
sub
jns
sti
jp
cld
push
cmpsl
std
sub
dec
in
in
pusha
pop
pop
shlb
stc
adc
repnz
or
or
or
fimull
fs
jb
aam
or
cwtl
fs
aam
xor
cmpsb
addl
or
or
and
movsb
sbb
inc
lock
sbb
sar
gs
jb
inc
mov
shlb
jle
fs
fisubs
pop
cmp
add
sahf
std
dec
outsl
nop
xchg
mov
test
and
push
push
mov
cmpb
daa
or
push
jg
dec
lea
cmp
fucom
cld
jmp
int3
movsl
jecxz
dec
imull
dec
or
xchg
repz
pop
int3
clc
ret
sub
insl
adc
xchg
jbe
cmp
xchg
rorl
ja
out
pop
int
or
js
lcall
mov
mov
jbe
lcall
xchg
cld
inc
lds
sbb
aaa
orb
cmpb
jmp
pop
loop
fwait
out
mov
imul
sbb
ljmp
outsb
or
ret
mov
dec
dec
sar
fs
xchg
inc
xor
lea
out
dec
inc
and
stc
push
inc
xlat
push
xchg
stos
mov
cmp
js
add
fidivrl
sbb
idivb
stos
push
addr16
hlt
cmpsb
add
mov
dec
jmp
dec
sbb
mov
adc
jnp
test
jno
aaa
loopne
mov
lds
stos
sub
mov
lods
jg
andl
aad
repz
test
lcall
out
pop
or
pop
cwtl
jmp
jo
jno
ret
hlt
fs
nop
jb
push
and
jge
mov
in
cmp
je
pop
sarb
xchg
or
das
cs
mov
dec
outsl
xlat
gs
je
sbb
nop
hlt
pop
popa
call
xchg
cltd
push
xchg
negl
xor
cmp
pop
sbb
jnp
sbb
jb
jle
and
test
xchg
addr16
addl
pushf
xlat
js
les
pop
rcrb
xor
inc
mov
jge
push
mov
jo
out
cmp
and
sbb
pop
insl
adc
fldcw
adc
ss
pop
sub
jg
outsb
pop
push
xchg
xor
or
loopne
mov
cli
fsts
mov
xorl
outsl
lahf
movsb
movl
icebp
pop
add
test
ljmp
jle
out
sbb
sub
add
add
mov
adc
in
or
sub
and
fldcw
rclb
popf
jbe
rolb
xchg
leave
cmp
movsl
loop
andl
enter
adc
inc
jbe
add
leave
push
inc
mov
and
in
jns
cmp
mov
and
imul
pop
xchg
popf
mov
jno
insl
negl
mov
rcr
inc
xor
adc
xor
mov
pop
aam
jb
aam
mov
sub
jae
arpl
lret
in
xchg
es
je
sbb
loopne
mov
iret
mov
add
xchg
jno
cwtl
xor
aaa
xor
rcll
adc
dec
testb
and
stos
cs
mov
enter
pop
icebp
and
shr
mov
pop
and
ficompl
mov
pushf
mov
int
lret
pop
adc
scas
sub
faddp
inc
pop
or
repnz
cmpl
mov
sbb
cmp
jl
mov
int
cmp
sub
cmp
jmp
xor
gs
mov
xchg
ss
roll
mov
cmp
sbb
gs
adc
aam
pop
dec
inc
lods
in
cs
int3
jae
stc
cltd
mov
loopne
cmp
fisubl
push
rol
cmp
inc
in
dec
cmp
sbb
and
addr16
movsb
aad
cmp
call
inc
or
loope
inc
push
mov
fwait
xor
lods
sub
out
mov
bound
cli
add
mov
jno
std
sbb
pop
push
xor
arpl
scas
adc
test
call
or
into
sub
cmpsb
xor
fiaddl
and
dec
xor
mov
negb
push
sbb
rclb
int3
push
fisubrl
rorb
outsb
subb
lods
fimull
push
jg
imul
lods
stc
mov
cmp
and
inc
insb
lret
dec
bound
xor
push
bound
push
ret
xchg
fucomip
mov
cmp
dec
lahf
sarl
cmpb
adcl
cmp
adc
sbb
jge
mov
inc
out
pusha
outsl
pop
mov
sahf
inc
pushf
imul
iret
jno
pop
inc
mov
inc
or
push
popa
aad
sub
mov
pop
idivb
mov
pop
jmp
mov
or
dec
scas
stc
jle
repz
sub
jno
stos
mov
sub
or
mov
das
adc
test
aaa
cmp
jae
xchg
imul
push
repnz
stc
pop
jns
out
lods
leave
push
dec
adc
push
gs
push
int3
jb
cmp
js
aam
shlb
pop
test
mov
sub
xchg
sub
jae
xchg
sbb
int
ret
out
ficoml
roll
push
cmpsl
cmp
shlb
inc
rolb
adc
jmp
mov
adc
jae
jae
mov
in
xor
cmp
or
movsl
fsubs
in
int3
add
test
les
push
jno
pop
and
es
mov
pushf
mov
mov
sbb
div
icebp
lds
cmpsl
and
inc
xor
jbe
pop
lcall
in
jo
sti
cmc
xor
into
add
cmp
sbb
sbb
sub
aas
push
addr16
or
xchg
leave
push
push
mov
xchg
mov
lcall
daa
xchg
lods
dec
sbb
loop
sti
mov
loop
shl
push
push
ret
fdivrs
pmulhuw
pop
mov
int3
lret
stc
icebp
xchg
dec
lahf
test
lock
dec
dec
enter
adc
loop
xor
adc
mov
push
sub
test
jbe
adcl
mov
mov
cmp
mov
or
or
and
add
or
or
sbb
jo
jbe
rcl
clc
xor
out
andb
mov
stc
call
repz
xor
scas
push
les
dec
push
filds
sar
mov
push
mov
sbb
inc
pop
in
inc
leave
les
loope
xchg
xadd
add
mov
push
sub
mov
jg
xchg
ja
inc
subl
adc
dec
aad
xor
fldl
cs
mov
std
jno
aas
testb
mov
clc
xchg
sub
mov
popa
or
xchg
pop
in
adc
dec
cmp
pop
sub
jne
or
hlt
or
int
in
enter
les
stos
in
in
sbbl
mov
sbb
cmp
cmp
pusha
mov
in
jns
aad
push
gs
fisttps
or
std
pop
or
shlb
xchg
call
lcall
xchg
cmp
dec
xor
jle
xor
pop
sti
lret
pusha
and
addb
sti
and
int
push
leave
repz
sub
push
in
nop
jg
sub
fsub
fmuls
int3
mov
js
cmpsl
ret
loopne
or
mov
dec
push
repz
das
lock
imul
out
dec
push
loope
outsb
stos
adc
jmp
dec
loop
sub
mov
in
adc
test
lea
jae
movsl
cmc
xchg
pop
sbb
or
iret
mov
outsb
inc
lea
cld
push
sbb
lods
ja
xlat
jp
jae
mov
lret
lock
xchg
jmp
aad
jl
mov
lods
and
and
and
das
sub
jae
sub
adc
test
in
lret
mov
out
xlat
lahf
sub
dec
daa
pop
sbb
ja
ja
cmc
addl
xorl
js
test
or
pop
and
push
daa
mov
sub
pop
arpl
out
jge
dec
into
daa
adc
or
jno
test
je
std
sub
imul
cmp
lahf
mov
test
loope
adc
int3
pop
test
mov
aam
sub
popf
ds
adc
lods
or
push
pop
insl
pop
add
cmp
lret
popf
aas
out
out
inc
rolb
shll
dec
pop
fldt
orl
lods
mov
cli
sbb
dec
and
lahf
popf
sbb
pop
sub
ss
mov
xchg
push
and
pop
xchg
mov
mov
in
lcall
jae
jl
sbb
lahf
cs
leave
ds
int
adc
adc
xor
nop
das
lods
call
das
jb
xchg
and
movsl
xor
push
in
popf
dec
mov
lock
and
push
es
enter
add
mov
cs
sbb
sub
mov
outsl
ficompl
push
xchg
add
pop
mov
in
lods
adc
sbb
push
popa
jmp
xchg
sub
fisttps
mov
mov
dec
jae
arpl
xor
and
adc
add
repz
sub
sbb
or
pop
orl
arpl
xor
and
adc
add
repz
sub
sbb
or
pop
orb
arpl
xor
cmp
pop
fnsave
int
cmp
jmp
mov
mov
xchg
pop
add
stc
cltd
inc
incb
xchg
in
cmpsb
cld
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
repz
sub
xor
push
jge
push
enter
add
add
add
add
add
pop
add
cmp
int
jne
sbb
xchg
add
add
add
push
add
pop
add
add
add
add
sbb
cmp
jne
mov
add
jne
add
clc
add
pop
add
xor
dec
add
add
sbb
clc
add
mov
add
add
add
popa
add
add
fadds
sub
sbb
les
fldl
aas
add
add
iret
add
jne
xchg
add
pop
add
fiaddl
lahf
add
add
dec
add
mov
sub
add
add
add
add
pop
add
add
add
add
add
mov
dec
add
xor
or
insl
add
add
add
xchg
add
add
add
sbb
add
dec
add
add
add
add
add
add
or
xchg
add
add
jl
jl
or
cmp
int
int
push
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
jl
jl
lea
pop
add
add
mov
push
add
add
add
push
add
movsb
add
add
int
mov
les
adc
push
dec
add
add
add
add
jno
enter
mov
add
add
fadds
loope
mov
mov
add
add
dec
add
add
add
add
add
sub
add
add
sub
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
test
mov
add
add
or
dec
add
add
xor
add
add
lods
add
daa
add
add
jb
sbb
fiaddl
test
add
mov
pop
add
add
add
add
mov
add
add
mov
jne
loopne
inc
add
add
add
popa
add
ja
clc
add
add
add
inc
add
add
add
or
ja
enter
js
cmp
test
add
sbb
popa
add
add
mov
inc
add
jns
loope
and
add
stos
add
add
add
add
and
leave
add
add
add
add
inc
add
add
inc
add
add
jge
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
push
add
add
leave
add
cld
add
add
add
add
add
add
add
add
add
add
jl
jl
les
adc
pop
add
adc
flds
mov
add
add
add
test
add
sbb
jl
faddl
test
int
add
inc
add
add
add
and
pop
add
add
add
add
add
add
add
add
mov
test
lcall
add
add
add
sbb
sbb
iret
add
add
add
add
add
add
add
js
enter
inc
add
add
add
add
add
add
sahf
fildll
push
rolb
repz
jb
insb
fbstp
inc
cmp
pop
ss
sub
xchg
xlat
jnp
fs
dec
pop
aad
xchg
mov
ret
dec
mov
lret
cmp
sbb
mov
xlat
dec
pop
out
test
jl
lock
into
jmp
popf
xor
in
cmc
test
aad
push
mov
add
leave
pop
or
or
jl
loopne
dec
jmp
mov
decl
jl
test
loopne
cmp
adc
add
mov
cmp
out
inc
sbb
sub
in
clc
xchg
int
insl
push
mov
call
shll
arpl
jne
pusha
lock
adc
jbe
dec
gs
scas
lods
cmp
gs
mov
and
lock
mov
pop
add
sub
and
push
and
inc
aaa
jbe
push
cmp
mov
sti
js
loope
sub
push
cmpsl
mov
push
or
sbb
jg
ds
arpl
rcrl
push
push
mov
jle
xchg
dec
inc
sarb
jne
shrb
push
test
icebp
popa
divb
xor
jmp
xor
cmp
or
ds
andb
shrb
lcall
in
call
push
xor
pop
push
out
loop
mov
mov
mov
das
mov
xchg
dec
adc
cmpsl
pop
push
jne
jbe
or
stos
add
cmpsl
jae
jne
mov
jo
inc
push
lea
pop
aad
mov
cld
gs
pop
fcompl
pop
sahf
enter
mov
sbb
mov
sbb
loope
mov
xchg
or
adc
lods
push
fs
xor
rclb
popa
movsl
fwait
mov
inc
sbb
cwtl
aas
and
aam
in
sbb
in
iret
mov
fisubrl
and
fistpll
inc
pushf
xlat
pop
je
lds
ret
pop
or
inc
daa
std
pop
or
mov
sbb
dec
jge
decb
imul
sub
mov
mov
ja
idiv
cmc
lock
movsb
or
push
jl
sub
pop
out
pop
cmp
call
mov
mov
mov
pop
sub
data16
jb
aad
mov
cli
and
add
leave
in
or
push
not
in
and
mov
andl
lock
lods
popf
ja
shrl
pop
clc
lods
dec
xchg
mov
mov
lock
int
mov
pop
loope
xor
jecxz
jne
jmp
repz
repnz
inc
jno
pop
mov
dec
fdivl
loop
fiaddl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
