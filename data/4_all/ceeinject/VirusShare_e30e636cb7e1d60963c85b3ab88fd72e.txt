call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
mov
dec
inc
push
mov
cmp
or
cli
and
adc
add
jae
popa
das
inc
lcall
xchg
pop
orl
jecxz
rcrl
ret
or
cli
and
jae
push
stos
push
fadds
stos
jp
push
pop
fwait
dec
ljmp
or
push
add
dec
mov
or
psubsb
fidivrl
xor
mov
rolb
fs
lcall
and
sub
ljmp
jecxz
push
sbb
dec
mov
or
and
jae
push
lret
dec
and
pusha
lods
lds
xor
add
fs
fcoml
jae
lahf
push
gs
add
xchg
cmpsl
dec
or
loop
sub
ret
and
xchg
and
arpl
gs
pop
jecxz
cs
push
fbld
or
sti
aas
sahf
rdpmc
mov
push
in
adc
arpl
gs
pop
pop
in
inc
xchg
aam
jl
or
loope
and
ljmp
push
lret
ss
xor
mov
jp
mov
dec
in
repz
sbb
or
cli
cmp
or
sbb
imul
jecxz
adc
mull
adcb
sahf
push
ret
pop
xor
mov
push
fldenv
cwtl
cs
fdivrl
push
lahf
jb
dec
shrl
or
inc
lahf
adc
or
and
xor
cmp
xor
das
mov
sbb
or
cli
and
adc
add
jae
arpl
mov
mov
dec
repz
sub
sbb
or
cli
and
adc
add
jae
arpl
mov
mov
sub
lock
shll
adc
arpl
dec
aaa
scas
sbb
sub
or
repnz
je
fadds
push
test
ret
push
call
xor
fstps
and
repnz
int3
loop
mov
in
aad
sbb
cmp
shll
sub
lea
mov
cmp
jae
sub
jnp
test
daa
xlat
push
sub
push
mov
cmpsb
movsl
or
daa
stc
or
in
icebp
inc
mov
jmp
test
mov
cmpsl
aas
dec
push
aas
jecxz
pop
test
std
xchg
mov
mov
ret
lahf
pop
dec
test
clc
adc
test
arpl
dec
mov
mov
cmc
fmulp
hlt
add
mov
std
xchg
pop
aad
jb
dec
inc
inc
insb
lods
mov
mov
lods
lods
inc
loopne
fwait
sbb
ret
lea
mov
or
rcl
int
dec
sub
mov
icebp
mov
aas
out
sbb
ja
and
je
and
sbb
std
adc
push
xlat
nop
jne
inc
andb
pop
js
cli
lret
rol
mov
adcl
fwait
mov
popw
mov
pop
in
js
xor
jmp
mov
popa
sbb
iret
or
fisttpll
outsl
pop
push
flds
sar
js
mov
and
pop
jbe
jne
push
std
repz
dec
sbb
stc
aad
sub
scas
dec
iret
test
pop
pop
outsl
rcrl
mov
shll
jne
sbb
rorl
mov
sahf
push
arpl
fimull
cmpsb
mov
in
inc
cmp
imul
cli
cld
cmpsb
and
dec
xor
jns
jno
mov
ss
dec
repz
stos
es
push
mov
cmp
lock
shlb
add
mov
fstpl
cmp
pop
out
sti
pop
pop
cli
jnp
xchg
cli
aaa
scas
cmpsl
in
fdivl
inc
inc
in
repnz
push
lret
adcl
gs
mov
inc
push
sub
jmp
in
hlt
sbb
jl
daa
iret
bound
jmp
mov
rcll
adc
aas
stos
loopne
loopne
lret
stos
add
mov
int3
xchg
push
sbb
jp
xchg
jmp
push
cld
sbb
mov
mov
mov
imul
popf
addb
cltd
rcll
add
jae
clc
jp
xchg
adc
std
mov
pop
lahf
lods
sub
mov
xor
cmp
icebp
push
inc
add
push
add
xchg
sbb
dec
sub
inc
popa
ficomps
lcall
dec
in
shlb
testl
out
pop
ja
icebp
inc
mov
pop
push
popf
push
pushf
fisttps
das
adc
inc
fiaddl
stc
lea
fsubrl
adc
arpl
decb
and
scas
mov
fisubrl
movsb
jne
fcmovu
mov
adc
and
scas
sbb
sub
inc
xlat
jp
mov
in
add
fiadds
push
mov
outsb
pushf
dec
mov
dec
cmpsb
repz
pcmpgtd
jns
add
fsubrl
hlt
jmp
clc
aas
cwtl
inc
cmp
push
movl
pop
and
push
sub
cli
ljmp
out
pop
imul
setbe
mov
sti
insl
mov
lret
test
inc
add
fsubl
pop
iret
ret
cltd
xor
aaa
jbe
sbb
ds
lret
shlb
pop
adc
mov
lods
js
shlb
jb
rcr
leave
xchg
cmp
xchg
push
outsb
aaa
pop
imull
adc
mov
jno
leave
aad
test
divb
mov
out
pop
xchg
lcall
repnz
outsb
sbb
mov
loope
push
pusha
jmp
adc
scas
mov
dec
into
push
loope
shll
cmp
add
nop
jns
mov
mov
repnz
jl
adcl
push
jbe
rcll
jge
adc
leave
pop
mov
mov
cltd
popa
fs
out
fsubr
push
out
fcmovu
cmpsb
jae
jge
outsb
cltd
out
cltd
outsl
push
shr
loope
and
cwtl
mov
inc
cmp
mov
jmp
stos
mov
dec
in
dec
pop
das
lret
push
mov
add
aam
inc
mov
ja
mov
stos
sti
push
or
jbe
cwtl
loop
loop
mov
add
scas
dec
push
repz
scas
sub
xor
push
das
xlat
or
adc
jns
mov
fdivrp
sbb
shll
out
jle
cmp
jns
imulb
test
sbb
cmpb
lods
fbstp
push
xor
stos
sub
add
mov
pop
and
repnz
adc
xchg
loope
in
lahf
loop
mov
lret
sub
bound
not
push
mov
jnp
mov
xorl
mov
or
lcall
or
adc
or
xchg
push
ret
and
and
push
push
lock
mov
jge
enter
or
lret
cmpsb
pop
shrb
dec
mov
ret
mov
faddl
call
pusha
jb
les
lock
mov
add
movsw
shr
out
mov
mov
scas
inc
push
pop
cmpsl
cmp
add
pop
ret
sbb
fisubrs
jg
mov
pop
add
sbb
push
add
xchg
push
pushf
lods
popa
aaa
mov
xchg
jo
fsts
xchg
xchg
add
ret
push
add
int3
mov
xor
push
jbe
mov
ds
dec
mov
scas
sub
out
sub
cld
xor
cmp
lds
leave
and
in
mov
mov
sbb
xchg
mov
mov
mov
int3
dec
rcrb
jo
imul
add
lahf
jno
aaa
test
mov
pop
pop
imul
xchg
fildll
mov
fidivl
and
outsb
cli
mov
push
out
loope
cmp
and
bound
sbb
dec
fwait
cmp
pop
nop
jne
mov
xor
adc
scas
pop
pop
mov
roll
insb
fistps
mov
aad
popa
mov
fisubl
inc
es
in
xor
out
xchg
packuswb
dec
sbb
dec
jg
in
inc
sbb
mov
mov
jl
mov
sbb
ret
in
adc
jle
cltd
xchg
in
fdivrp
loope
repz
mov
mov
pop
pop
add
fildll
cmpl
cmp
in
xor
clc
jno
je
cmp
popf
pushf
nop
sbbl
pusha
inc
cmpsb
add
and
adc
mov
test
andb
mov
push
dec
lcall
call
sbb
pop
repz
data16
mov
push
xorb
insl
jle
inc
pop
jg
icebp
and
pop
xor
adc
push
dec
push
shll
movsl
xor
sbb
dec
and
stos
sub
rorb
cmp
xor
jbe
pop
ja
daa
inc
pop
sbb
jmp
lret
pop
push
js
push
push
jbe
fwait
lret
mov
jne
sbb
out
push
shlb
push
inc
test
adc
sti
xor
fwait
je
inc
pop
nop
cmc
movsl
imul
scas
inc
jbe
jmp
ret
jb
adc
and
xor
jg
inc
aas
mov
mov
push
fs
mov
loope
cmp
lods
test
xchg
and
and
shlb
mov
adc
inc
inc
mov
add
pushf
inc
xor
lret
mov
and
arpl
xchg
xchg
ja
push
cmp
inc
test
sahf
push
arpl
and
das
add
push
or
fiaddl
jae
push
sub
adc
dec
mov
nop
addr16
cmp
xlat
das
insl
js
fistpll
in
pop
daa
data16
push
insb
lock
mov
lods
or
daa
sub
imul
sbb
imul
push
out
adc
cmp
fistl
loope
cs
call
jge
or
jne
or
sti
nop
cmp
divb
pop
and
mov
or
gs
mov
aaa
cmp
adc
addr16
lahf
cmp
dec
pop
out
push
aaa
aad
and
aam
andl
fnstsw
dec
push
xchg
es
mov
test
mov
push
mov
mov
mov
mov
push
scas
data16
and
mov
mov
jo
sub
cmpb
adc
lods
call
mov
mov
les
push
sbb
mov
xor
in
sbb
push
sub
ret
hlt
inc
inc
mov
addr16
dec
dec
bound
aaa
mov
mov
dec
shrb
xchg
adc
orb
mov
ljmp
inc
sti
or
xor
sub
mov
cs
pushl
popf
shll
loopne
or
repnz
xchg
lea
js
pop
inc
mov
popf
imulb
icebp
imulb
add
cmc
mov
xchg
adc
addr16
xchg
pop
add
aad
addr16
cs
xchg
add
push
cmc
push
cwtl
mov
mov
xchg
in
unpcklps
pushl
or
bound
gs
divb
lods
into
repnz
lcall
push
push
xor
jno
filds
call
pop
mov
idivl
nop
mov
jecxz
sbbb
adcb
lock
xchg
stc
or
mov
add
push
cwtl
mov
fdiv
pop
jne
loope
push
dec
pusha
push
stos
cmc
inc
pusha
cmc
shlb
xor
add
jae
stc
incb
aaa
scas
pop
sti
sub
out
pop
and
sbb
xchg
xchg
add
sarl
dec
xor
cmp
adcb
lds
test
pop
push
add
xchg
and
xchg
addb
mov
ja
lock
sbbb
out
push
movq
push
fdivl
mov
es
imul
push
pop
sarl
adc
jns
cwtl
div
dec
and
dec
sbb
jo
aaa
mov
jne
stc
in
fisubrs
or
sbb
loop
xorb
xchg
loop
xor
ljmp
jne
mov
shl
jle
mov
scas
xchg
dec
add
out
int
fcoml
call
lret
leave
sbb
ds
inc
imul
movsl
int3
sub
fdivl
scas
inc
jns
rcrl
xchg
jo
addr16
lcall
xlat
mov
insb
loope
mov
imul
cmp
sbb
and
or
adc
lods
int3
call
lock
mov
xchg
testb
in
cwtl
xchg
fsubrl
mov
pop
adc
mov
es
xor
push
mov
push
clc
pop
fildl
dec
mov
enter
cmpsl
sbb
push
mov
jno
mov
inc
shll
fldt
sbb
ss
inc
test
push
out
lahf
call
xorl
jle,pn
ret
pop
ret
mov
xor
nop
stos
inc
sbb
dec
lods
or
push
int3
xchg
ss
lods
adc
dec
scas
or
stos
xchg
fsub
aad
in
ss
xor
pop
mov
inc
xor
xchg
rolb
cli
cmp
jmp
sub
xchg
mov
mov
fdivs
jne
jg
mov
or
lea
andb
pop
pop
pop
and
fcomps
dec
movsb
out
cmp
mov
ds
pusha
pusha
mov
jns
pop
test
adc
cmpsb
jne
jns
jecxz
pop
add
mov
dec
pop
daa
dec
pop
bound
clc
js
pop
int3
into
or
jle
xor
loope
aad
push
fs
dec
test
ficoml
mov
jo
sbbl
out
hlt
or
mov
loop
mov
imul
in
stos
add
lods
inc
js
cltd
dec
pop
dec
add
ret
mov
fdivs
jl
jmp
ret
addb
adc
clc
fdivrl
sbb
push
jnp
int3
xchg
pop
mov
pop
push
call
push
or
or
test
inc
adc
mov
inc
jae
gs
cmp
sub
roll
inc
inc
sub
jmp
jb
mov
sahf
xchg
sub
ja
test
xchg
std
popa
jns
xor
nop
in
dec
hlt
lods
sbb
shll
jmp
xchg
cmc
mov
mov
out
xor
repnz
into
mov
pop
mov
pop
aam
mov
cmpsb
mov
mov
cld
call
push
sub
lods
rcl
pop
les
inc
and
cltd
mov
and
push
fs
fstps
xorl
arpl
jnp
ljmp
adc
or
jge
push
sbb
add
jnp
dec
push
mov
push
call
cmp
xor
cmp
jl
mov
pusha
xor
xor
push
and
inc
cwtl
lret
sar
dec
cmpb
jnp
int
aaa
inc
sarb
cmp
jl
in
or
jae
mov
call
inc
pop
pushf
sub
lcall
in
mov
jno
pop
hlt
imul
sar
xchg
mov
pop
add
cmp
mov
and
sbb
pop
aaa
inc
pop
ret
xchg
popa
mov
pop
pop
cld
xchg
pop
das
lcall
adc
int3
jnp
sub
ficoml
push
int3
and
dec
lods
adc
test
fwait
out
mov
inc
and
xchg
rcrl
pop
sub
cwtl
enter
xchg
push
mov
pushf
cmp
adc
jge
js
push
mov
xchg
pop
fnsave
xor
mov
into
pop
jo
addl
inc
es
xor
enter
shrb
int3
out
mov
je
aaa
stos
sbb
sbb
xor
inc
adc
push
push
out
movsb
mov
movsb
rcr
cmp
imul
or
xchg
jl
or
xor
push
cmpsl
insw
cltd
mov
into
sbb
pop
scas
pop
in
mov
enter
fdivrs
xor
minps
in
fwait
add
jecxz
mov
nop
add
das
push
and
adc
mov
lods
push
xor
inc
imul
inc
call
push
lret
cmp
lret
xchg
stc
jbe
lret
push
fs
lahf
or
pop
icebp
cld
div
mov
cmpb
arpl
dec
prefetcht1
xchg
xor
lods
subb
sub
xchg
cwtl
sub
iret
or
cmp
xchg
sub
nop
jge
repz
fisttpl
mov
cmpsl
shll
cmp
or
dec
fwait
aam
into
xchg
aad
shl
popf
lcall
test
ljmp
mov
jne
in
stos
fcomps
loope
cmc
cmp
imul
adc
sub
sar
loopne
or
and
xchg
movsl
pop
push
sbb
mov
shl
jg
out
xchg
mov
dec
push
mov
add
mov
mov
or
arpl
sub
std
mov
sub
cmp
mov
out
out
pop
and
mov
mov
popf
js
loop
das
out
xor
popa
pop
inc
lds
loopne
rcrb
cmc
and
or
jne
push
fists
cld
movsb
inc
dec
jmp
adc
cmpsb
inc
out
or
bound
fdivl
cmc
xchg
jp
hlt
dec
push
mov
rcr
mov
or
rcr
pop
push
shrl
call
arpl
mov
or
push
jae
pop
outsl
leave
or
add
cmp
data16
inc
or
jl
pop
mov
inc
inc
sbb
divb
mov
pop
ja
xchg
mov
sbb
shlb
arpl
aam
fsub
push
sub
pushf
mov
push
mov
push
lret
lods
outsb
loop
arpl
pop
loop
mov
sbb
pop
mov
or
in
ss
mov
xlat
loope
popa
inc
sbb
mov
dec
out
sahf
cmp
es
add
cmp
mov
xchg
push
add
mov
sub
jecxz
sti
or
fldenv
pop
int
xchg
cmc
enter
or
or
out
mov
stos
fs
cli
data16
pop
jg
jg
jmp
cmc
cmp
cli
sub
xchg
jb
cmpsb
adcb
test
lds
scas
push
negl
dec
aam
out
out
shrl
pop
cmpsb
lcall
sub
in
xor
adc
inc
lods
mov
arpl
cmc
not
sub
pop
mov
test
mov
push
adc
mov
es
pop
xchg
loop
push
sbb
shrb
mov
inc
sbb
aad
out
sahf
loop
es
mov
fsts
loopne
jns
xor
scas
ja
jb
lret
sub
shll
lret
or
test
inc
repz
push
push
stos
mov
out
and
cs
mov
dec
mov
cmp
xchg
and
imul
addr16
mov
setp
mov
mov
mov
and
xchg
std
push
inc
mov
shll
push
push
push
jecxz
push
inc
or
insb
xchg
cld
and
pop
xchg
inc
inc
adc
ret
dec
and
ficoms
inc
stos
movsb
iret
out
xchg
inc
test
daa
jp
insb
sahf
or
mov
add
pop
popa
xchg
sbbl
lods
pop
mov
jb
addl
adc
stos
xchg
je
or
lods
fsubp
lods
or
mov
hlt
int3
cmp
pop
sub
sbb
aad
shll
dec
loop
cmpsl
ror
adcb
repnz
popf
inc
in
nop
leave
xor
push
test
orl
dec
mov
cwtl
sbb
dec
sahf
xchg
andb
xchg
pop
pop
bound
inc
adc
es
fsubl
inc
inc
mov
inc
cltd
sbb
scas
dec
iret
movsb
scas
add
jl
sub
push
addl
stc
mov
lcall
mov
jl
jnp,pn
cld
fisubrl
jno
ja
in
das
jg
fistl
sub
pop
mov
in
and
dec
mov
jb
and
mov
pop
ds
jmp
cmp
jo
addb
jae
mov
lcall
std
repz
stos
cmc
mov
dec
mov
mov
in
adc
adc
add
xor
push
je,pn
cli
mov
clc
in
leave
mov
jl
cmove
sub
cmp
jns
jl
lcall
out
push
outsb
aad
xor
in
ret
subb
inc
jno
mov
mov
shl
stos
adc
pop
jno
and
stos
dec
mov
jne
push
les
lcall
dec
mov
lahf
int
adc
and
and
mov
dec
add
orl
cli
jmp
repz
je
jl
fwait
clc
and
mov
divb
mov
mov
dec
and
dec
out
fdivr
jl
mov
or
xor
push
test
ret
mov
sub
movsb
inc
ret
dec
or
push
fwait
xor
mov
jb
iret
rclb
jp
xor
pop
shrl
jne
ss
fisubs
call
lret
pop
or
icebp
mov
ret
push
adc
das
mov
push
cmpsb
imul
popf
inc
add
loop
shll
enter
pop
mov
sti
sub
test
mov
sbb
mov
xchg
mov
push
adc
push
shll
xor
fldl
shrb
cs
pop
hlt
jmp
pop
xor
mov
xor
or
int
xchg
ljmp
and
xor
stc
mov
inc
push
inc
sbb
loope
jle
arpl
dec
in
push
sbb
pop
ljmp
xchg
out
cmpsl
lahf
jns
in
jg
test
push
fnsave
popf
gs
or
loope
or
mov
pop
mov
jbe
mov
sub
aad
out
outsl
sub
bound
sbb
pusha
stos
xor
pusha
inc
lahf
sbb
js
and
mov
stos
add
std
dec
jle
loop
mov
test
test
enter
sbb
mov
push
xchg
dec
xchg
lret
add
lret
xchg
dec
dec
cs
inc
sarl
mov
jae
pop
cmp
jo
push
lahf
ret
push
popa
mov
movsb
cmc
pushf
sub
gs
xchg
testb
lea
cmp
inc
dec
jne
push
pop
orl
jecxz
rcrl
ret
or
cli
and
adc
add
jae
arpl
mov
mov
dec
repz
sub
sbb
or
cli
and
adc
add
jae
arpl
mov
mov
dec
repz
stos
rcrl
ret
or
jp
ljmp
bound
mov
mov
dec
icebp
cmp
sub
inc
or
cli
faddl
fiaddl
mov
lods
gs
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
dec
dec
pop
jnp
imul
jno
inc
es
stc
leave
clc
jmp
fwait
mov
mov
jnp
imul
or
sub
dec
fcmovnb
lret
fdivr
in
jmp
fwait
decb
mov
jnp
imul
add
xor
es
call
mov
faddp
shrl
add
sub
or
sbb
pop
fst
iret
mov
xchg
icebp
call
add
push
push
in
lds
gs
sub
jl
out
rol
ret
xor
add
in
mov
in
pop
cli
inc
movsb
shlb
aaa
adc
and
fnstenv
icebp
pop
je
gs
jmp
outsb
add
lods
stos
stc
pop
adc
xchg
insb
das
jae
hlt
or
pop
sub
sbb
adc
lret
mov
sbb
and
xchg
xchg
or
int3
sub
and
push
fidivl
ret
and
pusha
inc
lret
mov
mov
cmp
mov
inc
xchg
xchg
divb
xchg
insb
pushf
movsb
mov
jg
fdivrs
test
dec
jnp
imul
sbb
sub
and
sti
cmc
jmp
fwait
xchg
mov
dec
sub
cmp
push
fs
inc
scas
pop
stos
mov
scas
cltd
sbb
ret
fcmovnbe
sub
pop
sub
jle
inc
push
jle
outsb
push
test
mov
insb
cld
out
pushf
ror
ror
dec
dec
pop
cmp
aas
or
sub
cmp
int3
lret
fdivr
in
jmp
fwait
mov
mov
jnp
imul
sbb
sub
cmp
int3
lret
fdivr
in
jmp
fwait
mov
mov
out
adc
lret
xchg
subb
and
sbb
hlt
xchg
xchg
sbb
mov
mov
or
add
stos
addr16
nop
add
add
test
mov
out
cmp
push
push
push
adc
add
adc
icebp
aas
pop
pop
out
sbb
cli
jg
sti
jle
scas
push
sbb
mov
mov
das
sbb
pop
iret
sbbl
dec
imul
lcall
pop
lea
xor
xchg
sbb
imul
mov
insb
sarb
scas
stos
aad
gs
fwait
mov
clc
pop
and
out
mov
int3
movl
sbb
push
dec
pop
push
int3
addr16
repz
out
movsl
in
mov
shll
into
jmp
les
mov
mov
into
pop
inc
shll
mov
xchg
out
fbld
mov
inc
stos
xlat
movsb
mov
mov
add
or
cs
cmp
add
data16
lahf
xor
call
sbb
and
insl
xchg
jg
mov
bound
lock
jmp
adc
jns
shlb
sbb
cli
imul
jp
inc
xchg
pop
xor
pop
mov
into
outsb
xchg
pop
push
mov
lahf
aad
and
ja
inc
das
stc
in
pop
test
xlat
adc
stos
sarl
in
pop
insb
fs
icebp
cli
in
jnp
mov
xchg
iret
repz
sbb
in
adc
xchg
cmpsb
out
inc
jl
push
mov
cmpsl
cmp
sub
sub
add
aad
or
rcrb
dec
xorl
xor
test
add
push
add
adc
mov
pop
out
stos
ja
xlat
std
clc
out
xor
sub
test
inc
std
adc
mov
leave
fidivrs
cmc
push
or
cld
cli
mov
xchg
ficompl
sub
jge
out
or
jbe
sbb
push
pop
xchg
jg
xor
mov
daa
push
out
cli
pop
mov
test
adc
ret
fldenv
adcl
jecxz
mov
xor
bound
js
mov
test
jecxz
mov
jne
lds
and
cmp
repz
pop
sbb
lods
mov
inc
sahf
testl
and
xchg
negb
iret
and
and
paddsb
lcall
and
cmp
jb
out
dec
or
cmpb
loop
jb
lods
hlt
int
pushf
jno
mov
cmovl
pop
aam
scas
jmp
jg
sti
adc
cmp
les
mov
scas
mov
push
mov
or
stos
jmp
xchg
and
mov
mull
fwait
mov
cmp
and
jo
add
dec
clc
xor
fldcw
inc
lcall
aaa
jl
in
jo
je
stc
cmpsb
mov
test
cli
pop
imul
sbb
mov
dec
int
orl
divb
adc
adc
scas
dec
add
jecxz
cmc
xchg
mov
stos
cmpsb
pop
mov
icebp
into
add
jl
jp
xchg
mov
xchg
aaa
xlat
sub
pushl
pop
mov
shr
movsb
inc
testb
shlb
stos
add
cmp
lahf
inc
sbb
jge
xchg
cli
xor
or
jb
movsb
sarb
add
fdivr
mov
jecxz
sbb
cmp
sub
pop
stos
nop
xorl
inc
dec
sub
dec
aas
fadds
popa
sub
insb
test
xor
sbb
push
jns
das
mov
xchg
push
fimuls
sahf
xchg
pop
add
das
jmp
fcmovnu
outsl
fidivs
test
cmp
push
shll
mov
ss
adc
dec
mov
mov
pop
loop
push
jo
arpl
aad
or
data16
imul
test
mov
fnstcw
insl
cmpsl
fistpll
int3
push
dec
in
fistl
push
sahf
adc
sub
jge
pop
sbb
les
or
or
inc
popa
outsb
test
cmpb
arpl
stc
xlat
adc
pop
ror
mov
cs
test
sbb
xor
sbb
ljmp
popa
dec
jmp
pop
xor
clc
jbe
pop
test
or
mov
xlat
adc
es
adc
mov
movsb
jnp
or
js
jecxz
pop
cmp
pop
sbb
clc
or
stos
cli
jns
outsl
or
adc
ret
push
push
xchg
out
out
push
sti
pop
enter
mov
repz
inc
lahf
or
cwtl
or
inc
sti
cmp
sub
inc
push
movsb
test
movsb
mov
clc
xchg
rolb
rcll
leave
aas
lock
push
add
xor
mov
cmp
insl
xchg
pop
out
inc
mov
inc
inc
int3
out
scas
mov
scas
and
call
and
push
enter
jge
cli
add
mov
es
cmp
push
adc
adc
pop
clc
pop
call
add
iret
mov
adc
cld
jns
shrb
xor
cmp
xor
dec
add
mov
jne
jae
dec
xchg
jecxz
ja
testl
call
idiv
xlat
mov
ds
mov
mov
jmp
sub
jns
pop
ja
push
jne
sbb
mov
mov
int
sahf
cmp
stos
fcmovnb
out
xor
mov
xchg
mov
shrl
in
sbb
xchg
outsb
fwait
sbb
dec
push
mov
aaa
mov
ss
mov
add
stc
sbb
je
push
sbb
loopne
push
insb
mov
int
enter
ret
fsubrs
jl
subb
mov
mov
xor
andb
adc
movb
mov
cld
pop
loopne
add
negb
jmp
lea
nop
cli
add
jp
jns
mov
icebp
sbb
fnstcw
cs
cmp
popf
sarl
dec
imul
scas
mov
mov
jmp
push
enter
dec
push
inc
mov
jno
cld
lock
int
or
or
pop
dec
punpckhwd
pop
out
jp
mov
sub
popf
push
cmp
sub
or
cs
out
or
and
in
jno
shl
mov
jb
iret
xor
pop
xchg
cmp
pusha
push
inc
dec
mov
rcrl
jecxz
and
pop
pop
in
push
push
adc
lods
push
or
jb
icebp
and
sbb
xorl
sti
loopne
or
imul
in
test
repnz
nop
xchg
mov
jae
dec
ror
mov
repnz
out
es
cwtl
lea
sbb
push
inc
xlat
jb
mov
mov
mov
xorl
test
scas
add
mov
mov
andl
xchg
mov
inc
jp
lret
ds
cmp
mov
cmp
test
jg
xor
inc
test
sub
xchg
js
lods
lods
xor
shll
push
pop
or
mov
push
and
pop
cwtl
fadd
pop
outsb
sub
aam
jne
scas
and
js
or
mov
mov
test
aad
and
or
in
adcl
stos
fistps
push
arpl
push
andl
ss
mov
or
ljmp
stc
xor
jg
icebp
add
jns
xor
lahf
ljmp
imul
or
scas
int
push
repnz
add
cmp
cld
hlt
iret
xchg
xor
mov
enter
test
jo
imul
add
or
sub
mov
loop
shl
push
iret
popa
arpl
xchg
je
fdivl
rcrb
test
outsb
adcl
pop
loop
cmp
cmc
jbe
adc
xchg
jecxz
orl
add
xor
xchg
pop
mov
or
cmp
idivl
popa
fwait
mov
jecxz
fcom
in
or
fmull
jp
movsl
sub
push
inc
daa
push
movsb
add
cmp
das
jmp
popf
cmp
pop
lea
aad
repz
into
mov
adc
or
loop
ljmp
sub
imul
sbb
and
xor
pop
jnp
xchg
mov
cmc
jo
cmp
and
xor
hlt
mul
dec
mov
outsl
outsb
xchg
inc
mov
leave
dec
int3
jp
mov
xchg
test
insb
mov
jmp
mov
cmc
mov
dec
arpl
popa
repz
dec
dec
mov
sub
aad
sub
push
push
test
in
push
mov
push
fcomp
inc
pop
inc
shrl
sbbb
and
xchg
lret
mov
cmpsl
rcl
sub
dec
enter
mov
inc
adc
mov
pop
fidivrs
fnstsw
aad
xor
loop
clc
ljmp
mov
and
shrl
add
ljmp
aas
dec
push
in
add
xor
cmpsb
xchg
lods
and
xchg
test
ret
adc
push
jno
roll
std
pusha
push
outsb
sub
dec
push
add
loop
js
pop
xchg
push
mov
ficompl
cmp
in
add
incb
mov
and
shll
jle
lods
inc
out
lds
or
mov
xor
lock
mov
push
push
cmpsl
pop
int3
and
add
call
loope
dec
loope
push
sbb
pushf
or
inc
sbb
stos
inc
add
testb
push
out
jmp
sbb
push
sbb
sbb
ljmp
scas
pop
aad
mov
in
test
jne
mov
cmp
das
adc
pop
sbb
xchg
mov
test
dec
cmpsb
mov
jge
mov
dec
ja
rcll
pop
push
into
sbb
adc
adc
negb
es
dec
pop
cmp
cmp
lods
xchg
arpl
push
xchg
iretw
jns
jns
popa
gs
lea
push
mov
lods
testb
cmpsb
jnp
sub
xor
fwait
and
loope
adc
outsb
aam
xor
test
inc
stos
aas
fsincos
cwtl
push
lret
lods
bound
xor
fstpt
dec
mov
mov
loope
cmp
mov
aam
sub
arpl
loopne
xchg
and
xchg
mov
movsl
jp
insl
add
dec
jbe
or
sbb
loop
mov
flds
loopne
call
jbe
adc
cmpsl
mov
daa
sub
sbb
adc
scas
popa
dec
mov
mov
add
je
push
cmpsb
push
add
pop
repz
int
pop
in
inc
test
sbb
jecxz
daa
js
fbstp
push
mov
test
add
cld
lret
enter
xchg
mov
loopne
notb
adc
cltd
push
add
sbb
ret
pop
sar
int3
sbb
shrl
jne
mov
cmp
jmp
in
push
cmpsl
mov
arpl
lret
pop
mov
jmp
sti
pop
and
imul
or
sbb
sub
or
add
sbb
mov
pop
stos
fiaddl
ret
mov
sub
dec
dec
and
ja
lods
fstp
jne
test
iret
or
sar
loope
adc
cwtl
int
mov
nop
sub
push
xor
lcall
push
lret
or
fs
popa
scas
out
pop
sti
fildll
shrb
cmc
cmp
std
js
pop
cmp
test
cmp
dec
mov
dec
jne
xchg
aam
aas
mov
push
cltd
out
mov
mov
push
lea
sbb
cmp
daa
xor
lods
stc
xchg
les
es
inc
mov
push
notl
fbld
xchg
inc
sub
mov
cmpsb
sub
inc
add
test
aaa
roll
mov
ftst
xchg
and
dec
push
fwait
mov
inc
out
jne
or
es
popa
dec
add
aas
in
aam
adc
cmpsl
js
jae
inc
jo
stc
pop
pop
pop
fdivp
add
stos
insb
andb
push
test
cwtl
int
sti
gs
andl
and
and
sub
mov
mov
and
dec
ja
and
nop
and
mov
out
repnz
inc
xor
ret
and
push
xor
ror
pop
pop
stc
movsl
idivb
jne
enter
push
sbb
out
pusha
add
xor
dec
data16
lea
movsl
insb
fisubl
aad
push
nop
mov
jle
push
push
cmp
jb
addl
fisttpl
mov
add
add
mov
bound
cmp
mov
jp
dec
sub
mov
stc
stos
inc
dec
scas
pop
pop
inc
add
push
or
imul
inc
fwait
in
dec
jp
movb
cld
negb
add
pop
add
mov
xchg
into
mov
pop
lods
and
pushf
daa
lret
sub
jbe
cltd
jmp
xchg
add
stos
pop
sub
scas
repnz
adc
fisubl
int3
outsl
jns
cli
je
fdivl
int3
int3
mov
stc
cmpsl
mov
mov
cmp
xor
xor
subb
shrb
lcall
movsl
mov
mov
pop
dec
pop
sbb
sahf
repz
fnstenv
aad
mov
sbb
fnstsw
fsubs
insb
sbb
mov
xor
and
pop
and
xor
gs
icebp
hlt
xor
andb
pop
ret
popf
pop
fisubrl
sub
add
insb
clc
xchg
mov
add
fcoms
push
dec
ret
ds
stc
cli
sub
stos
push
std
adcb
sbb
cwtl
push
sub
les
push
aad
js
xchg
jb
push
cltd
lds
insl
or
cltd
fs
sub
scas
mov
outsl
inc
add
mov
lds
xchg
pushf
and
adc
je
loopne
jae
sbb
fstpl
push
xor
sub
push
push
ret
in
add
pop
lcall
ljmp
cmpsb
enter
loope
sub
inc
in
xchg
out
mov
test
add
test
loop
out
jno
inc
mov
pop
out
pop
outsl
int
clc
adc
int3
icebp
ret
jne
ljmp
iret
cmp
cmpsb
mov
leave
stos
bound
nop
jae
xorl
jl
sbb
mov
jp
int3
xchg
out
negb
mov
mov
inc
xchg
test
ret
ret
sub
jmp
pop
cmp
mov
mov
lock
inc
scas
loope
mov
roll
aaa
jmp
stc
mov
nop
mov
int3
dec
cmp
or
push
mov
pop
xorl
add
adc
add
push
out
stc
lahf
aad
test
mov
ja
hlt
cmp
shll
sub
aam
mov
daa
outsb
fldenv
and
mov
cvtps2pi
pop
cmp
ret
aam
aas
into
sbb
xor
imul
out
call
sub
pop
pop
idivb
sub
mov
pop
arpl
lcall
or
mov
rorl
adc
and
sar
inc
das
inc
std
inc
jns
sub
out
aas
mov
mov
out
loopne
addl
or
mov
jge
mov
shll
out
sub
jne
dec
inc
jo
mov
dec
es
call
push
xor
rclb
addr16
adc
fidivl
xor
mov
pop
ficoms
pop
dec
adc
or
add
inc
popf
insb
ljmp
dec
xchg
sbb
adc
sub
or
addr16
mov
mov
and
frstor
push
sub
push
out
cs
dec
lods
xchg
xor
leave
pop
insb
pop
xchg
mov
jg
sahf
hlt
fstpl
rcl
loope
shrl
in
sahf
das
or
pusha
add
je
jae
cmp
js
fisubl
sbb
fidivs
cmpsl
xor
popf
push
sbb
sbb
sbb
jecxz
aaa
adc
inc
imul
mov
sbb
pop
imul
mov
or
ret
mov
cld
cmpsl
insb
push
xchg
in
out
daa
pop
pop
insl
pop
popf
in
push
push
jmp
jae
xchg
jge
enter
into
arpl
lcall
nop
add
xor
movsl
sub
mov
or
or
add
pusha
and
inc
aad
push
dec
push
mov
hlt
ljmp
dec
push
popf
ficompl
xchg
cmp
or
outsb
scas
sahf
push
pop
lea
dec
pop
in
aas
sub
mov
lea
jb
nop
pushf
mov
rcrb
push
scas
dec
sarl
xchg
mov
arpl
hlt
mul
or
les
xchg
jmp
cs
cmp
int3
dec
dec
rclb
adcb
and
das
inc
mov
push
sahf
inc
imul
std
outsl
jns
fs
mov
pop
loopnew
cltd
cmpsb
aam
dec
inc
mov
into
gs
adc
inc
testb
popf
dec
add
popf
mov
test
insb
out
adc
std
test
sbb
or
xor
les
insb
sti
xchg
cmpsb
mov
mov
ja
cmpl
andl
out
shlb
add
adc
or
xchg
mov
js
loopne
jmp
mov
mov
fidivrs
rolb
push
sbb
mov
stc
inc
mov
out
fcoml
out
pusha
jbe
cmp
sub
mov
xchg
adc
mov
dec
pushl
test
xchg
rcrl
xor
xchg
add
jns
add
fwait
mov
push
xchg
testl
js
loopne
pop
sbb
jno
stos
pop
mov
popf
loopne
fisubrl
xor
in
mov
or
ret
jo
aas
stos
and
cs
cwtl
mov
jmp
xchg
cmpsl
mov
repnz
test
fnstcw
sahf
lret
popf
fsubl
out
fiadds
push
sub
ss
js
ja
scas
xchg
lahf
or
mov
stc
sahf
jmp
adc
dec
test
xor
fsubrs
pop
mov
mov
or
inc
ret
cmpsb
fs
cmc
jo
in
mov
bound
arpl
ret
cs
cld
jnp
rolb
push
sahf
and
mov
push
lock
clc
in
imul
insl
ss
mov
sti
and
xor
xchg
cmpl
sbb
out
insb
shlb
pop
push
mov
lock
jp
inc
ss
adcl
sbb
mov
xor
mov
fisttpll
mov
xchg
add
mov
imul
loopne
lret
mov
loop
call
fdivrp
push
jbe
sbb
jo
rol
sbb
and
lods
sbb
push
sub
jnp
iret
fdivs
loope
or
add
int
add
xchg
imul
xchg
adc
leave
push
in
sbb
inc
xor
mov
iret
lods
push
mov
xchg
insb
dec
cmp
inc
aam
bnd
sub
ljmp
or
jp
jge
leave
or
cmp
js
push
js
inc
fsubrs
xor
je
lcall
xchg
out
jg
pop
ret
repz
in
fwait
sub
ret
cmp
xchg
jb
mov
pop
jno
xchg
int
nop
dec
mov
and
in
sub
mov
push
and
jae
cmp
mov
cmpsl
fbld
cmp
mov
dec
out
xchg
addr16
loopne
outsl
jnp
jmp
push
sbb
lcall
or
aas
and
out
aaa
cmpsb
xor
add
sbb
test
int3
mov
mov
sbb
pop
mov
cmp
insb
cmp
aad
jne
clc
incl
xchg
add
shrb
enter
stc
adcb
das
addr16
mov
dec
hlt
inc
sub
flds
mov
jbe
lret
out
cwtl
sbb
push
call
and
outsb
inc
or
fists
or
xchg
out
lea
pop
cmp
out
jnp
jo
sbb
pusha
in
outsl
inc
aam
add
int
xchg
adc
ficoms
sahf
adc
xchg
in
mov
es
js
sbb
cmpsb
repnz
stc
test
jo
pop
dec
and
ret
cmp
loopne
loopne
xor
cld
jmp
push
iret
imul
rcl
push
inc
and
jno
iret
stos
push
enter
es
ficoml
pop
mov
iret
out
pop
fisttpl
in
xchg
mov
or
inc
insb
imul
sbb
sub
cmp
int3
lret
fdivr
in
jmp
fwait
mov
mov
jnp
imul
sbb
sub
cmp
int3
lret
fdivr
in
jmp
fwait
mov
mov
jnp
imul
sbb
sub
cmp
int3
lret
fdivr
in
ljmp
test
mov
jnp
imul
sbb
sub
cld
and
xor
push
in
jmp
in
add
jecxz
rcll
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jae
pusha
adc
and
xor
gs
cmp
sub
je
test
cwtl
shlb
aam
hlt
nop
hlt
adc
pusha
adc
and
xor
inc
and
add
loopne
mov
shlb
xor
sbb
cwtl
sub
push
jl
outsb
xchg
addr16
scas
mov
test
mov
push
add
jge
push
sub
lret
mov
psrlq
mov
mov
scas
pushf
pop
pushf
push
shrb
stos
popf
out
cld
push
add
jl
mov
mov
inc
cld
adcl
jnp
push
stc
adc
sbb
xor
lds
shlb
aam
aam
sbb
mov
lods
add
and
aam
imul
dec
xchg
mov
sahf
cmp
cmc
jo
fst
int3
fs
fwait
xor
jne
or
shl
test
in
or
and
dec
jle
mov
pop
xor
sbbb
movsb
cmp
sbb
add
inc
cs
pop
push
adc
insl
ss
jp
cmpsb
mov
stos
ret
mov
popa
adc
and
dec
cmp
sbb
in
mov
mov
movsl
fcmovnb
test
in
cmp
push
and
pop
aaa
inc
in
push
sbb
sarb
mov
sbb
or
xor
inc
arpl
and
add
loopne
shlb
aam
in
hlt
jo
pusha
adc
and
xor
inc
and
add
loopne
shlb
aam
in
hlt
jo
xchg
xchg
add
enter
mov
pushl
mov
es
push
mov
xor
cmc
outsl
sub
pop
cmp
test
fists
add
jo
pop
sub
inc
or
mov
mull
mov
adc
pop
jno
dec
out
lcall
push
cmp
pop
and
xor
fcoms
mov
gs
in
inc
pop
xor
mov
daa
ds
inc
add
adc
mov
dec
add
mov
loopne
in
xor
sbb
mov
testb
mov
sbb
mov
mov
loope
out
fwait
lock
mov
dec
hlt
rcrb
and
push
dec
jp
pop
out
push
int3
lea
lds
dec
hlt
movsl
mov
mov
icebp
ljmp
mov
cmp
out
in
mov
pop
sbb
mov
dec
fadds
and
sahf
xor
sub
movb
fldt
dec
sbb
sbb
stos
scas
adc
iret
cmp
movsl
add
xchg
sub
inc
jge
lahf
shlb
adc
push
arpl
xor
sti
les
mov
add
mov
mov
dec
pop
loope
test
imul
mov
sbb
inc
mov
aaa
jns
cld
mov
push
xchg
sbb
push
dec
push
add
cld
dec
inc
lea
test
pop
mov
mov
or
les
lods
mov
xor
loopne
inc
sbbb
into
dec
orb
popa
cmp
stc
jbe
in
sbb
jge
adc
stc
clc
mov
push
sub
out
ljmp
femms
and
adc
sbb
popf
and
lods
mov
push
sahf
daa
inc
inc
jg
jecxz
sbb
and
stos
loopne
jbe
cmp
cmp
fiadds
lcall
movsl
mov
jg
mov
cmp
lret
ret
dec
scas
rcrb
and
bound
leave
inc
cs
adc
jl
inc
mov
out
sub
dec
pop
lds
inc
ja
xor
push
xlat
xchg
js
sbb
nop
add
outsb
loop
js
jae
or
mov
clc
pop
jge
pop
enter
fucomip
mov
jns
inc
cmc
or
mov
dec
cmp
leave
mov
jns
jb
bound
and
cmp
ss
insb
sub
inc
clc
sahf
sub
sub
sbb
imul
jmp
xchg
mov
icebp
ret
sub
lock
xchg
adcb
out
xchg
movsb
outsb
sbb
push
lods
test
adcl
cli
test
add
movsb
sub
inc
repnz
mov
inc
push
pusha
jns
mov
dec
loop
and
mov
aas
mov
xor
jae
stc
sti
stc
xchg
call
es
cmp
lahf
pop
pop
cmp
add
adc
xchg
jae
in
inc
sbb
xchg
js
mov
fcmovu
sbb
fwait
jl
cmp
or
out
es
iret
push
mov
mov
fists
mov
addb
adc
xchg
xchg
fwait
test
scas
insb
inc
rcr
and
sub
dec
shl
movsb
or
stc
jo
inc
push
subl
xor
fldenv
inc
jp
roll
inc
sub
or
test
and
sahf
aad
push
loop
aad
cmp
sbb
arpl
fiadds
ss
and
jb
imul
adc
loop,pn
lret
push
add
and
cmp
xor
lods
ja
in
sbb
rol
fs
insl
clc
jns
push
mov
push
incl
mov
jnp,pn
dec
imul
loope
dec
gs
adc
std
xor
xchg
gs
xchg
lcall
pop
jbe
ljmp
and
mov
out
int
jbe
repnz
inc
insl
xchg
hlt
cli
fldcw
adc
call
gs
std
inc
stc
ret
sbb
xchg
add
sbb
push
or
push
dec
and
jno
scas
cmp
popf
push
jae
cmp
insb
icebp
mov
lds
pop
stc
cmp
adc
inc
ds
jmp
das
ljmp
mov
lret
popf
call
jp
add
adc
jle
ret
mov
adc
mov
pusha
fsubrl
xchg
xor
xor
dec
sarl
dec
imul
push
repz
add
or
add
pop
cmp
std
lret
and
popa
inc
pop
fwait
push
leave
fnstenv
je
je
and
cmpsl
in
cmp
lock
leave
or
inc
cli
pusha
adc
xor
push
cmpsl
loope
out
icebp
repnz
loopne
xchg
ljmp
sbb
sub
out
jmp
mov
cli
stc
call
ja
and
dec
inc
adc
rol
aas
xor
xor
movsb
data16
sub
push
push
jne
adc
xchg
jne
stc
pushf
pop
and
jecxz
inc
test
imul
add
and
fstpt
lretw
inc
filds
cmp
xor
xchg
jle
shll
dec
mov
jbe
push
outsb
add
push
xor
icebp
lcall
rol
jnp
add
xchg
jmp
pop
mov
pop
dec
js
push
push
add
mov
mov
cmp
data16
or
jmp
mov
dec
repz
adcb
movl
fs
jb
pop
add
mov
mov
cmpsl
fsubs
cmp
arpl
jno
lds
gs
out
hlt
popa
les
sbb
into
test
dec
lods
cwtl
cmp
lock
mov
pop
add
lods
mov
stos
in
xchg
enter
lock
iret
and
lods
stos
sub
adc
jge
jb
pop
xchg
xchg
out
rcrl
les
xchg
dec
iret
and
shll
pop
lods
adc
add
mov
das
push
scas
mov
lahf
mov
aam
cmpsl
xchg
xchg
inc
bound
hlt
xchg
out
xchg
mov
pop
mov
push
inc
rcll
cmpl
shll
cmp
cs
fisttpl
and
lcall
shlb
stos
mov
negb
cwtl
xchg
add
mov
mov
mov
pop
mov
pushf
fidivs
pop
test
dec
bound
inc
mov
jl
shrl
xchg
movsb
ss
outsb
popf
addb
notb
mov
pop
les
pop
or
test
pop
or
ret
ljmp
jmp
notl
xor
pop
not
fdivl
rol
daa
ret
jnp
movb
mov
hlt
sahf
add
call
xchg
jno
or
test
arpl
mov
out
rcrl
loopne
adc
inc
mov
pop
std
or
xchg
insb
cs
outsb
jle
in
xor
mov
dec
pop
inc
aad
jbe
and
inc
mov
mov
jg
pop
lods
or
dec
or
inc
imul
popa
mov
mov
scas
sub
out
aaa
in
ljmp
es
daa
mov
mov
sbb
cwtl
and
loopne
inc
add
jo
adc
out
cmp
add
cmp
scas
test
jb
dec
andl
pop
test
cmp
add
sbb
sub
mov
xor
sarl
nop
cmc
insl
ja
sub
inc
scas
fabs
sub
repz
jecxz
push
adc
push
push
addl
movsb
or
adc
aaa
push
adc
fistl
jmp
or
pop
mov
mov
pop
cli
cmc
mov
mov
mov
mov
fcomps
sub
mov
jmp
add
mov
pop
in
pop
lahf
ret
mov
adc
icebp
testb
andl
scas
test
sbb
shrb
inc
inc
test
lret
rcr
lea
sub
fwait
mov
pop
andl
loope
insl
xchg
inc
mov
into
movsb
imul
insl
push
sbb
mov
mov
sbb
inc
jno
into
xor
pop
xor
into
in
mov
inc
aaa
or
adc
nop
mov
push
lods
rorb
cmp
mov
xor
loope
mov
adc
ljmp
sbb
jmp
xchg
xchg
push
popl
inc
push
imul
add
stos
mov
shrb
cli
pop
push
push
adc
aam
sbbl
mov
sub
sub
std
rolb
mov
xchg
sub
inc
cmp
push
psubsw
enter
inc
test
xor
or
jmp
xlat
lods
sub
leave
mov
addr16
sbb
std
int3
pop
jecxz
mov
jmp
ja
dec
sub
mov
push
repnz
imul
and
jae
push
xor
mov
bound
fidivl
xor
xor
out
sub
lods
push
inc
lock
mov
mov
jno
add
mov
jbe
jge
int3
das
push
movsb
je
jmp
push
jl
push
test
cmc
rorb
sub
jg
cs
cmp
cmp
dec
out
popa
ret
inc
xlat
fisubs
ret
adc
add
aad
inc
mov
xchg
scas
lret
out
xor
mov
popf
mov
cli
sti
arpl
jns
in
stos
shl
fistpll
aam
stos
in
subl
imul
sub
inc
decb
loopew
inc
gs
in
jge
das
adc
xor
adc
dec
dec
mov
cmpsb
and
das
and
sarb
mov
test
popa
hlt
xchg
repnz
pop
aam
pop
cmp
or
sub
or
dec
inc
jle
int3
mov
push
mov
je
cmpsb
loop
out
lahf
loop
les
xchg
jnp
loopne
push
pop
fwait
popf
lret
int3
ret
xor
push
xchg
outsb
or
xchg
icebp
adc
sti
add
mov
pop
push
cmpb
das
add
int3
cltd
out
push
dec
xchg
fisttpl
pop
or
lods
shrl
cwtl
add
lds
mov
xor
adc
push
int
ficompl
cwtl
jecxz
cmp
mov
imul
sub
es
rol
push
lcall
push
mov
push
ret
lods
int3
push
daa
pushl
push
mov
lcall
mov
jnp
jle
out
daa
fistps
fldl
xchg
std
movsb
xlat
sub
xor
sahf
push
dec
repz
loopne
sbb
popf
ret
push
andl
int
ret
ror
cmp
int3
mov
and
sub
lods
jmp
pusha
jb
fs
cwtl
xchg
bound
or
and
fcmovnb
cmpsl
mov
push
sahf
stos
pop
sub
ds
mov
push
movsl
neg
lret
add
xlat
pop
push
sub
fisttpll
daa
push
icebp
je
mov
jo
push
pop
movb
cld
pop
push
adc
sbb
lock
add
inc
shrb
stc
outsb
cmpsl
push
ret
in
jecxz
ficoml
and
xchg
cmpsl
out
sub
popa
push
jg
or
fsub
fmuls
or
mov
jge
push
xchg
ljmp
xor
int
or
and
enter
cltd
into
std
dec
mov
mov
jg
xor
ficomps
aaa
mov
mov
ret
call
xor
dec
xor
jecxz
mov
mov
jbe
arpl
out
mov
adc
cld
push
inc
jb
sbb
not
push
xchg
je
inc
int
pop
rcll
xchg
add
imul
lods
loop
push
loop
jge
pushf
lcall
add
pop
mov
gs
xor
mov
insl
std
pop
mov
lea
in
hlt
int3
mov
mov
dec
addb
fsubl
add
insb
fwait
cmpsb
mov
sahf
fsub
push
dec
shrb
rcr
scas
xlat
test
in
hlt
adc
ret
in
push
sub
xor
push
mov
xchg
fs
movsl
jl
push
pusha
shll
push
insb
out
sbb
clc
lea
and
adc
jbe
sbb
xor
faddp
notb
inc
incb
xchg
cld
add
xchg
les
ss
loope
adc
cli
dec
mov
xor
insb
xor
xor
in
lds
pop
popa
std
rolb
sub
jp
and
or
aam
sub
mov
and
mov
sub
xchg
add
cmc
and
mov
cmp
cwtl
js
icebp
cld
sar
negb
ds
sbb
scas
adc
fwait
sbb
movsl
mov
adc
or
jge
mov
std
sbb
add
ljmp
shr
lret
pop
hlt
movsl
aad
nop
icebp
jmp
pop
stos
adc
mov
stos
inc
jg
push
push
icebp
push
lcall
cmp
test
ds
pop
add
shlb
cmp
call
ja
out
mov
jnp
andb
mov
pop
repz
push
dec
xchg
daa
and
xor
pop
call
cmp
les
fldenv
or
jb
sbb
mov
cmpsb
sub
jne
add
adc
fldcw
mov
and
adc
enter
jns
add
fisubrs
mov
cmp
jecxz
aad
or
xor
rcr
mov
outsl
loopne
icebp
mov
mov
insl
stc
insb
insb
sbb
jle
shll
push
adc
mov
cmp
sarb
popa
test
dec
xor
ja
mov
or
lds
jge
cltd
and
push
data16
mov
je
jecxz
movsl
and
fstps
mov
sbb
fimull
enter
out
jle
rcrb
into
sbbb
outsl
adcb
ljmp
mov
push
dec
xchg
dec
loope
lret
mov
addl
xchg
negb
xlat
push
cltd
ja
outsl
lock
rclb
loope
jl
jecxz
add
cmp
cmp
popa
stos
xor
mov
in
xchg
ret
popf
lds
jnp
or
popf
jg
jmp
les
cmp
fisttpl
or
xchg
inc
push
clc
mov
das
cwtl
adc
mov
fmuls
xor
clc
dec
add
mov
movsl
xchg
jo
mov
imul
cli
gs
mov
mov
pop
iret
xchg
sbb
pushf
and
lcall
icebp
cld
and
inc
xchg
push
insl
daa
jle
jne
fstps
lds
cmp
rcrb
mov
mov
pop
sbb
push
leave
jo
xchg
push
add
faddl
in
dec
fdivs
sbb
jns
add
aad
loopne
pop
outsb
out
mov
sub
ret
iret
cltd
sbb
pop
stc
add
fwait
rol
stos
dec
inc
insl
daa
xlat
cmpsl
pop
or
jl
cmp
push
lret
push
jns
mov
ja
ja
sbb
xchg
add
xlat
fwait
rolb
push
into
popf
jle
xchg
stos
aam
cmp
fsub
sub
xchg
or
mov
mov
xor
outsb
pop
sbb
es
push
pushl
mov
int
cmp
into
and
mull
adc
sbb
push
and
daa
repz
add
inc
in
adc
repz
loop
jae
inc
lock
xchg
cmp
in
cmp
sahf
lods
jmp
imul
pop
fstl
ds
add
pop
mov
sbb
aaa
sbb
dec
cs
xchg
sub
dec
cmpsb
fmull
out
and
ss
pop
es
xchg
adc
enter
sahf
or
rcr
cltd
jb
cwtl
subb
insl
and
call
out
hlt
xchg
xchg
lods
or
push
pop
pusha
jge
jge
psubb
dec
mov
add
jbe
and
in
and
negl
xchg
dec
cli
rorl
popa
push
mov
xchg
lcall
pop
fists
mov
lds
sbb
xor
xor
mov
insb
in
mov
adc
movsw
adc
stos
leave
mov
stos
ret
adc
jg
mov
mov
stos
lds
ljmp
mov
sbb
aam
dec
and
jno
inc
push
hlt
fiaddl
ficompl
adc
pop
jle
mov
addr16
push
outsb
push
push
mov
xchg
das
js
jp
xchg
add
sar
lret
fildl
aad
or
cmp
lea
mov
inc
sbb
jb
xor
inc
or
lock
in
sbb
push
sbb
jno
notb
mov
lret
jmp
xor
xor
mov
pop
mov
add
lods
daa
sub
lods
cmp
loope
push
mov
stc
and
mov
and
add
hlt
xor
fdivp
or
cmp
rorb
sub
jg
divb
add
enter
push
or
pop
test
ror
jge
roll
adc
out
mov
mov
ret
inc
pop
mov
or
leave
pop
fs
pop
cmp
enter
stos
test
pushf
push
dec
hlt
or
cmp
mov
repz
cmpsb
jg
xlat
test
xchg
xchg
push
mov
dec
mov
jle
adc
outsb
clc
xchg
dec
xchg
ja
fwait
call
daa
push
jae
cmc
pop
mov
js
mov
test
push
push
std
mov
dec
add
inc
ss
dec
xchg
jp
je
adc
js
push
dec
xchg
mov
mov
hlt
and
mov
fistl
dec
das
sub
mov
add
cmp
dec
jbe
sub
and
int
inc
stc
nop
cmp
cmpsl
xchg
xchg
mov
mov
sbb
ret
mov
xchg
adc
fistl
and
call
es
push
dec
mov
shll
test
inc
inc
outsl
add
pop
pusha
push
fstpl
inc
pop
xchg
pop
imul
lea
in
inc
dec
xor
daa
jmp
xchg
fcomi
mov
mov
minps
pop
arpl
xor
adc
sub
pop
mov
cmp
icebp
mov
and
adc
inc
cwtl
or
mov
mov
push
jmp
adc
jbe
xor
loope
push
pop
inc
push
pop
push
mov
cmc
test
sbb
push
xor
dec
jge
daa
mov
divl
rcl
sub
fists
loope
mov
push
jge
in
mov
pop
push
lock
add
dec
sbb
pop
pop
test
push
mov
mov
fwait
pop
sbb
sbb
add
jne
sub
jle
sbb
je
pushf
mov
test
mov
out
popl
sbb
and
pop
xchg
sti
jmp
cs
sub
xchg
imul
mov
or
cli
or
test
rcrb
push
pop
jl
sub
nop
or
jge
and
mov
mov
mov
loope
pop
test
je
xor
leave
xchg
insl
mov
cmp
in
jg
xor
sbb
stos
pusha
jb
and
dec
test
popa
ljmp
mov
xchg
add
mov
sahf
mov
jecxz
ret
add
dec
mov
fisubrl
sub
and
xor
add
adc
jle
xchg
test
push
mov
inc
pop
cli
cmpl
xchg
imul
les
jo
mov
inc
int
imul
mov
push
dec
xchg
sarb
out
mov
es
push
mov
cs
mov
ss
mov
cmpsl
gs
lds
cli
xor
fnstenv
add
dec
rorl
clc
add
hlt
ficoml
mov
jae
stc
pop
dec
ror
xchg
fcoml
out
sti
push
xor
lcall
and
adcb
out
out
jge
imul
sub
ss
icebp
sub
cli
sub
out
cs
out
cmp
loope
add
mov
jmp
push
cmpsb
ror
xchg
iret
xchg
sub
xchg
cmc
or
and
divb
repz
lods
test
jns
imul
mov
mov
push
pop
add
pop
mov
xchg
cmpsl
mov
in
clc
push
hlt
test
xchg
xor
cmp
test
je
ret
jl
push
sbb
imulb
and
repnz
pusha
sbb
xchg
sbb
jp
cmpsl
inc
add
lea
jno
nop
lret
hlt
add
fisubrl
iret
add
sub
mov
and
gs
adc
ret
out
inc
add
je
push
mov
fcmovb
mov
push
or
insl
pop
js
and
lret
inc
xor
inc
and
add
loopne
shlb
aam
in
hlt
jo
pusha
adc
and
xor
inc
and
add
loopne
shlb
aam
in
hlt
jo
push
adc
and
xor
inc
and
shlb
xchg
and
aam
in
hlt
fs
adc
and
xor
inc
xor
xorb
jp,pt
rol
dec
sub
outsl
sbb
cwtl
mov
mov
popf
mov
ffree
pop
jle
and
push
add
jo
pusha
and
inc
aad
shlb
xor
loopne
shlb
and
adc
pusha
and
inc
ljmp
shlb
add
bound
popa
sub
ds
xor
clc
pushf
orb
dec
dec
mov
fstps
jo
fstpt
sub
int3
loop
inc
lock
gs
fdivrs
mov
popf
add
inc
test
dec
mov
lods
stos
cli
xor
mov
stos
xchg
inc
lods
lods
xor
push
std
gs
pusha
mov
cmc
clc
adc
ret
mov
xchg
dec
mov
cmp
bound
sahf
bound
inc
and
sub
or
mov
mov
insb
ja
jb
test
adc
push
lret
xor
jg
aas
icebp
sbb
inc
fcomps
jae
call
add
ret
push
add
in
xchg
lock
mov
xor
jp
imul
jo
pusha
and
sub
nop
xchg
and
decl
ss
push
and
jne
je
xor
inc
sub
ret
lds
pushf
cld
lods
into
mov
push
pop
daa
inc
pop
gs
popa
popa
push
push
xor
stos
hlt
loopne
xchg
repnz
ficoms
rolb
and
jb
add
pusha
and
inc
ret
mov
xor
loopne
shlb
and
jb
add
pusha
and
inc
ret
enter
inc
lods
test
subb
pushf
push
inc
gs
ljmp
or
aam
aaa
sbb
addr16
sahf
dec
ret
aas
mov
sbb
in
sub
loop
ds
push
cs
jbe
aam
mulb
mov
mov
add
jmp
inc
sbb
mov
jle
subl
push
xor
lods
loop
sub
lret
in
dec
inc
cmp
and
dec
jbe
call
rcrb
sub
inc
xchg
cmp
sbb
and
fdivrs
aam
jle
idivb
inc
mov
iret
or
repnz
dec
lods
pop
and
mov
or
dec
add
dec
pop
and
out
leave
icebp
stos
mov
insb
jns
push
push
sahf
cli
sub
je
arpl
jo
int3
and
int3
xor
in
divl
add
ret
add
arpl
dec
or
lahf
dec
pop
jno
lea
add
xchg
xor
mov
movsb
insb
push
outsb
in
add
icebp
ficoml
sbb
and
cmpsb
xchg
cmp
jmp
mov
out
aad
rcll
and
arpl
aad
rorb
rcrl
lcall
jp
dec
lods
add
inc
stos
mov
xchg
and
add
loope
jbe
push
in
das
clc
rol
or
jb
mov
and
jg
sbb
aaa
mov
jmp
sub
cmpb
adc
sbb
mov
jmp
out
push
cmp
arpl
cmp
ds
sub
mov
pushf
and
mov
or
nop
mov
jbe
adc
mov
mov
mov
dec
cmc
into
out
loope
jo
sub
cli
mov
rclb
out
or
shlb
and
mov
xchg
cmpsb
cs
sti
testb
roll
je
cld
aam
aad
sbb
xor
or
sub
outsl
jns
pushf
cmp
cmp
sbb
ficoml
mov
addb
in
add
mov
mov
or
xlat
es
shrl
sarb
sbb
dec
xor
pop
mov
push
dec
decb
shll
outsb
xchg
add
sti
sbb
jns
ret
add
xor
outsb
jo
inc
fs
imul
ja
jbe
jecxz
sub
cltd
sub
lcall
mov
push
push
ficomps
out
sarb
hlt
mov
scas
pop
adc
xchg
leave
dec
nop
cmp
adc
jb
jl
mov
dec
vshufpd
push
push
popa
test
ficoms
movsl
ficompl
repnz
pop
push
daa
gs
das
movsb
into
test
movsb
cmp
divl
mov
outsl
sbb
sub
ljmp
fisttpl
mov
pop
sti
mov
arpl
out
test
jecxz
and
push
xchg
ss
xor
sub
out
cmpsl
dec
aam
push
mov
popa
setg
inc
inc
mov
pop
push
or
test
pop
xor
mov
cwtl
mov
dec
pop
mov
cmp
pop
pop
dec
push
mov
lcall
daa
mov
mov
push
fwait
cs
xchg
inc
mov
mov
add
jmp
and
xchg
rcll
cmc
dec
lret
ja
jb
orb
dec
jge
jp
shrb
adc
sub
inc
ret
jge
mov
clc
int
xchg
and
cmp
push
imul
call
push
xchg
fucomi
fdivrl
add
fmul
xor
add
loope
gs
aam
fstpt
pop
bound
fcomp
pop
mov
fwait
std
inc
mov
mov
rcll
stc
xchg
in
jp
jl
push
push
xor
aaa
lock
push
xor
mov
aaa
daa
or
nop
jmp
sub
sbb
imul
nop
pop
aad
js
test
cmc
aas
jg
cmp
lea
out
or
and
lods
cli
inc
inc
xchg
js
int3
inc
inc
xor
cmp
pop
insb
cmc
pop
adc
push
aas
fwait
push
and
pop
mov
mov
sub
mov
nop
adc
jnp
test
jae
pop
mov
js
pop
outsb
rcrb
or
push
insb
stc
pop
repnz
adc
mov
pop
movsl
mov
fcoms
nop
jge
sbb
xchg
dec
sub
and
sub
mov
loope
adc
dec
clc
sti
sub
jp
dec
repnz
push
pusha
les
sub
mov
lock
cmp
or
and
shr
ficoms
mov
adc
es
insb
mov
gs
mov
push
sub
push
or
ss
mov
or
pop
test
stos
jp
cltd
nop
in
or
cmc
sbb
icebp
sub
sbbb
lock
or
pop
cmc
cwtl
adc
push
fidivrs
jo
jmp
aam
cwtl
add
fstpl
daa
inc
fs
push
mov
stc
dec
or
sahf
sub
jbe
or
inc
sbb
mov
push
ljmp
jne
iret
lret
inc
call
mov
daa
lahf
xor
add
enter
sbb
sbb
and
sbb
pop
fnstcw
mov
shll
push
iret
xchg
cmp
ja
cs
and
leave
ret
xor
lods
sahf
xchg
mov
push
dec
push
insb
mov
js
cli
gs
mov
xor
xor
cmpsb
cmp
mov
clc
dec
jp
lods
xor
nop
add
mov
sub
pop
ss
dec
mov
or
clc
test
movsb
mov
aas
jb
mov
push
es
ficoml
xchg
and
in
movsl
les
push
nop
inc
or
mov
sbb
or
arpl
into
xchg
pop
jl
rorb
int
jl
daa
mov
xchg
or
add
lds
cmp
pop
jecxz
gs
or
sub
sub
in
pop
scas
js
or
mov
add
ss
mov
sbb
and
loope
mov
xor
mov
mov
adc
add
or
jp
adc
and
mov
das
leave
sub
sti
cli
lcall
inc
xchg
fs
ret
add
pushf
xchg
les
xchg
scas
mov
sub
pop
mov
movsb
inc
add
add
cmp
mov
lods
pushw
jecxz
dec
data16
or
lret
in
sub
pop
and
cmp
fs
sub
call
xchg
jbe
mov
jne
dec
pop
into
sbbb
sub
std
ds
sbb
mov
jne
xchg
in
ds
fisubl
dec
out
xchg
dec
dec
enter
or
xchg
loop
sbb
fnstcw
les
mov
test
xchg
and
in
adc
stos
and
sub
dec
aaa
stos
leave
sbb
inc
jb
dec
cmp
xor
or
push
mov
sbb
std
push
stos
into
adc
push
push
test
mov
cwtl
dec
mov
loope
lods
frstor
js
loope
pop
mov
add
and
jecxz
dec
pop
iret
sarl
xchg
testb
xor
je
dec
cs
lods
fwait
xchg
and
imul
js
sub
pop
cmp
push
add
das
dec
sbb
outsl
pop
xchg
lods
jge
mov
push
mov
add
xchg
fsubr
mov
int
cmp
push
das
addl
mov
mov
mov
mov
push
inc
sarl
or
push
mov
shrb
shl
int
xor
cli
and
mov
adc
icebp
push
lock
mov
das
sbb
das
sahf
movsl
outsl
jbe
jp
testl
ret
mov
pop
cmp
dec
in
and
imul
mov
repnz
adc
xchg
fcmovnbe
ret
cmp
js
sbb
lret
pop
pusha
sbb
mov
mov
shl
lods
pop
inc
or
pusha
int
lods
loopne
xor
ret
adc
mul
sar
out
jmp
xchg
in
outsb
xor
sub
ret
sbb
outsl
jo
dec
out
div
cmc
push
jp
or
sbb
xor
shlb
add
push
dec
mov
mov
sbbl
sbb
mov
cwtl
pop
sbb
leave
xor
lea
jb
adc
mov
jge
push
jle
movsb
cmp
jo
cmp
xor
popf
daa
jnp
jmp
out
pop
insl
or
inc
in
fadds
push
fimuls
lea
rclb
cmp
and
and
gs
push
fdivl
jae
sbb
lahf
mov
xchg
xlat
inc
jno
sar
mov
popa
xor
jb
pop
mov
fldcw
xchg
and
outsl
add
cmp
fs
push
push
nop
iret
les
push
jnp
ja
orl
out
jg
aad
mov
cltd
sbb
fwait
inc
xor
fimull
daa
cmc
ljmp
sub
fcmovu
inc
call
xor
mov
mov
xor
or
ficoms
pop
xchg
ljmp
pop
inc
out
repz
sub
xchg
pop
outsl
mov
lods
fdivrl
ret
or
and
push
subl
cwtl
sub
xor
xchg
das
dec
or
or
rorl
jmpw
cmp
ret
push
sbbb
or
push
inc
cmp
inc
lret
popa
sarl
sub
and
lahf
jns
xchg
stos
sbb
movntq
mov
mov
cli
mov
stos
push
sub
jl
lret
mov
mov
xchg
orl
cltd
push
dec
sub
insb
test
jmp
out
lret
push
jo
call
aaa
xor
pushf
jbe
imull
push
xchg
add
jg
mov
icebp
data16
lds
loop
mov
sbb
lcall
loop
jp
cmp
lahf
or
add
popf
or
mov
dec
xor
or
test
mov
mov
icebp
pop
sbb
xchg
sub
iret
mov
fcmovu
test
jmp
jne
stos
mov
andl
sub
cmpsl
popf
pushf
popa
fdivr
mov
push
mov
std
pop
insb
xlat
add
dec
sub
adc
insb
icebp
push
mov
or
mov
add
test
call
add
push
mov
scas
add
or
push
cmp
pushf
adc
leave
call
fidivl
jns
mov
sbb
xchg
sti
pop
xor
mov
xlat
jne
enter
repnz
or
shl
mov
mov
adc
imul
lret
out
stc
add
inc
adc
into
xchg
orl
mov
push
lahf
pop
hlt
xor
mov
mov
scas
test
xor
outsl
fsubr
sbb
adc
jg
xor
add
int3
adc
mov
mov
or
iret
xor
mov
mov
adc
pop
out
cld
popf
jne
in
cmp
lea
or
ljmp
les
cltd
repz
test
stos
and
cmpsl
repnz
fidivrl
cmp
pop
xchg
iret
adc
push
jb
pop
lahf
outsl
xchg
sbb
add
in
mov
loop
fdivs
call
sub
mov
cltd
pop
bound
cmp
xor
cmp
orl
pop
mov
inc
jnp
add
inc
out
xchg
push
inc
andl
repnz
mov
out
out
aad
lret
or
enter
adc
jge
inc
sub
jg
nop
pop
imul
and
jmp
pop
in
shl
pop
jmp
rcrb
scas
sbb
fiaddl
stos
stos
lods
mov
add
push
push
test
les
shl
or
sub
adc
std
cs
adc
mov
aaa
push
out
loopne
ja
les
inc
or
push
mov
test
add
cmpsb
xor
inc
jns
subb
lcall
cmp
stos
mov
or
jne
cmc
movsw
jmp
das
xor
std
not
jp
adc
ret
xchg
xchg
mov
push
push
shlb
scas
mov
jp
mov
cs
into
jbe
lods
cmc
inc
push
pop
iret
dec
add
js
sub
mov
dec
rcrl
in
dec
cmp
add
adc
lods
sub
jge
rol
lods
dec
sub
xchg
loop
dec
imul
out
xchg
lahf
call
cmp
dec
cmp
mov
insl
fs
jns
xor
jg
das
jp
jno
aaa
push
lret
ficompl
aad
mov
add
fisubrl
faddl
jp
mov
pop
push
aad
shl
dec
loop
xchg
inc
push
mov
out
xchg
imul
mov
lock
xor
rol
stc
aas
or
bound
jbe
cmpsb
mov
int
call
mov
sbb
test
jo
fdiv
or
push
mov
loopne
fwait
stos
scas
xchg
roll
scas
popf
enter
pusha
rclb
rorl
sbb
movsl
sbb
xchg
xchg
xchg
jl
xchg
pop
cmp
scas
xor
push
test
xor
inc
jo
mov
pushf
xor
lods
pusha
xor
cld
inc
sub
mov
mov
lret
les
sub
dec
mov
mov
loop
test
cmpsb
ret
call
imul
ds
jno
mov
mov
cmp
pop
shl
out
mov
jo
sahf
push
mov
and
mov
popa
mov
call
xor
push
enter
rolb
lahf
or
adc
popa
cs
shl
in
aam
pop
push
xchg
adc
dec
in
idivl
popf
test
jbe
icebp
mov
pop
daa
shlb
sahf
movsb
inc
fmull
test
and
iret
loopne
xor
xor
adc
in
pop
adc
cmp
pop
testl
es
es
mov
adc
sub
std
sbb
xchg
dec
ss
inc
je
daa
add
test
pusha
push
hlt
mov
cmpsl
inc
push
and
scas
jl
arpl
ds
mov
ja
int3
jae
jg
out
jae
xor
jb,pn
mov
xchg
inc
sbb
adc
xorb
rcrb
mov
bnd
in
and
test
or
sbb
out
push
inc
xchg
mov
pop
sarb
aam
call
and
jg
das
mov
add
lock
mov
xchg
aam
test
xchg
dec
test
add
dec
aas
seta
or
pop
pop
sub
dec
inc
cld
gs
fldt
stc
outsb
shll
imul
jl
js
dec
js
mov
aaa
rolb
sbb
nop
push
hlt
movsl
test
dec
add
cli
mov
fnstcw
lret
outsb
lods
push
jo
mov
cmp
ljmp
testb
jl
sub
pop
xchg
push
test
jle
xchg
mov
inc
dec
repnz
pop
dec
out
push
cmp
add
cmp
jb
pushf
jg
add
pop
hlt
daa
adc
enter
jl
test
xchg
clc
inc
insl
daa
cmc
sub
sbb
sub
lret
mov
jno
pusha
jl
pop
popf
enter
mov
shrb
in
cmp
add
jo
cmp
outsb
stos
add
mov
jl
dec
xchg
adc
scas
push
sub
or
fs
lods
dec
ret
lcall
push
push
mov
jg
cmpl
test
jmp
ret
inc
add
push
scas
rorb
push
jnp
lret
or
inc
fcoms
jle
pop
xor
insl
mov
shlb
adc
icebp
jae
mov
test
cmp
mov
cmpsl
aas
ss
and
add
jae
pushf
mov
lods
mov
or
call
cmp
gs
push
and
lds
sbb
sub
sub
jg
out
jns
and
inc
arpl
xchg
ror
test
xor
mov
xor
push
push
popa
clc
mov
loopne
xor
pop
movsl
iret
pop
pop
lods
movsl
mov
insl
xor
ret
jmp
mov
pop
adc
mov
adc
mov
sub
cs
sub
cmp
or
aam
pop
cmp
push
adc
dec
mov
mov
andb
shlb
push
gs
push
je
call
jo
adc
fistps
daa
daa
repnz
and
cmpsl
sbb
mov
jnp,pn
insl
call
lods
rol
das
or
aad
mov
test
dec
sbbl
arpl
xchg
inc
pop
or
ficoml
and
inc
and
sbb
push
xor
mov
ja
ljmp
negb
xchg
cmpsb
stc
lea
dec
inc
mov
repnz
add
rcrl
xchg
jae
vdivps
jb
dec
add
mov
jnp
cwtl
scas
rcr
rclb
pop
lret
in
decb
movsl
mov
sub
jge
pushf
xchg
clc
cltd
aaa
and
inc
lods
aad
cmp
fiadds
sub
popa
mov
fcmovbe
pop
jmp
sbbl
fs
mov
mov
fistpll
xchg
mov
sbb
jae
adc
mov
or
pop
xchg
hlt
sbb
out
dec
in
xor
lret
arpl
jp
lds
call
xchg
dec
test
dec
inc
movsb
mov
nop
pop
mov
dec
nop
aaa
lea
push
out
dec
pop
mov
sar
and
xlat
sbb
sub
push
int
movsl
jle
test
fxch
dec
push
xlat
cli
call
xor
call
mov
xchg
and
or
pop
push
bound
pop
add
out
jnp
xchg
jp
cs
sub
sub
pop
scas
mov
test
outsl
sahf
jo
inc
jl
jnp
cld
inc
mov
mov
pop
dec
pop
andl
pop
adc
pop
outsl
cmp
add
push
push
lods
mov
fcmove
call
sti
je
fcomip
jge
sub
out
mov
sar
mov
std
mov
add
iret
test
jmp
push
xor
jp
xchg
inc
sarb
outsb
mov
mov
cltd
and
xchg
adc
popa
jmp
jns
lock
data16
xchg
cmp
xor
lods
or
cld
mov
push
or
gs
lods
cmc
fildll
sbb
data16
test
mov
dec
dec
xchg
cwtl
bound
repz
shlb
mov
inc
pop
insb
cltd
and
pop
insb
loope
pusha
mov
cmp
inc
cli
mov
jle
and
fimuls
fdivs
mov
outsb
mov
push
test
dec
mov
jp
int3
jmp
aad
sbb
in
fcomps
in
push
lds
jae
pop
inc
sub
popf
loop
das
clc
fbstp
adc
xlat
pop
dec
pushf
lahf
jg
sti
aaa
aas
repz
repz
je
inc
imul
mov
sahf
xlat
dec
lahf
xor
sar
lcall
and
adc
inc
cmp
jo
mov
cmpsb
mov
sub
clc
scas
lods
es
cwtl
addr16
cmp
test
aam
test
leave
test
sub
in
sarl
outsb
daa
test
shll
mov
movsl
pop
dec
gs
add
mov
mov
sbb
adc
rcrl
cmpsl
stc
aad
in
and
mov
sbb
and
jo
push
les
sbb
adc
js
mov
mov
inc
fnstsw
push
ficoms
inc
mov
in
cmpsb
cmc
dec
sahf
push
push
stos
lret
sub
push
jle
xchg
cmp
add
xor
xor
pop
mov
cwtl
push
inc
les
nop
add
sbb
subb
movsb
lds
stos
cmp
cmp
dec
sub
leave
sbb
adc
inc
stos
xchg
sbb
pop
xchg
jbe
dec
imul
shrl
xor
inc
push
aam
notl
in
push
imul
dec
leave
rcll
or
ret
mov
lock
nop
pop
aaa
arpl
jmp
and
inc
xchg
push
sti
fidivl
jbe
mov
xor
loopne
shlb
and
jb
add
pusha
and
inc
ret
mov
xor
loopne
shlb
and
jb
add
pusha
and
inc
ret
mov
xor
loopne
shlb
and
jb
add
pusha
and
inc
divb
repnz
xor
mov
adc
jne
lcall
cwtl
test
cwtl
inc
mov
imul
cwtl
push
mov
out
negl
or
js
push
xchg
mov
inc
mov
daa
call
arpl
out
xlat
insb
or
js
push
xchg
mov
out
mov
sbb
or
jmp
sub
lock
push
repz
icebp
addr16
jmp
cli
add
sbb
iret
cli
in
dec
rolb
js
aad
or
xor
adc
insl
sbb
insb
lret
roll
push
into
ret
xchg
scas
movl
and
pop
add
je
shld
inc
jb
dec
bound
xchg
mov
inc
mov
out
push
or
clc
daa
clc
pop
es
mov
cmpsl
xchg
repnz
outsl
dec
les
fcompl
inc
add
jb
bswap
pop
sub
xlat
cmc
hlt
push
mov
cmpsl
nop
lret
push
mov
inc
inc
jmp
out
lahf
loopne
dec
iret
inc
cmpsb
imul
addr16
cwtl
ret
mov
daa
call
xchg
cmp
xor
xlat
or
pop
xchg
xor
in
jns
push
mov
jb
mov
fs
sbb
sbb
mov
es
jb
dec
test
imul
mov
sbb
out
cld
shll
int3
xor
pop
mov
inc
call
pop
cmp
sub
sbb
or
js
push
xchg
mov
inc
mov
daa
call
pop
cmp
sub
sbb
or
js
push
xchg
mov
in
jnp
mov
xlat
pop
push
daa
pop
lahf
mov
fldenv
jge
loopne
fwait
xchg
cltd
aaa
cmp
cltd
lret
mov
lea
in
pushl
mov
stos
imul
mov
mov
push
cltd
ja
hlt
mov
arpl
jmp
inc
cltd
shrb
fs
jmp
div
dec
sti
cmp
dec
mov
mov
push
rcrl
mov
inc
cmp
fidivl
mov
sbb
inc
imul
fwait
push
adc
popa
and
jg
jle
ds
cmp
int
test
ficompl
mov
pop
mov
lea
data16
and
xchg
mov
jae
add
mov
shrl
orb
fs
push
jb
inc
cmc
sbbl
movsl
mov
mov
movsl
lock
pop
pop
cmpsb
sbb
imul
popf
jle
dec
mov
xchg
mov
sub
stos
js
arpl
orl
xor
test
cwtl
sub
xor
and
aas
test
subl
pop
dec
jbe
mov
fwait
or
loop
cmp
fistpll
or
das
add
data16
lea
pop
xchg
insb
sub
or
push
xor
aaa
pop
rclb
mov
ror
lret
adc
add
dec
adc
in
fidivrl
fwait
cmpsb
inc
shlb
mov
cmpsl
fldl
push
outsl
xchg
lahf
in
or
lcall
pusha
or
pop
pop
jb
mov
rcll
or
arpl
push
mov
mov
adc
or
inc
inc
test
xor
imul
xor
lods
fstp
push
add
int
adc
lcall
cmpsl
sti
jg
jl
dec
pop
sbb
sbb
fstpl
enter
sbb
shlb
mov
in
test
cli
data16
mov
hlt
dec
jnp
add
add
test
jae
enter
or
sbb
ficoms
mov
ret
jae
in
ds
jb
test
jl
sarb
fstl
sarb
ret
cmp
ja
shrb
pop
cmp
in
clc
lea
fdivrl
adc
sbb
enter
adc
je
dec
pop
addr16
dec
add
enter
test
dec
fldz
int3
pop
js
adc
push
stos
inc
ds
scas
jl
ret
xor
or
jnp
scas
jmp
xor
add
lock
mov
imul
xor
sbb
gs
lret
cmp
mov
mov
popf
fidivrl
dec
pop
mov
push
cmp
popf
imul
mov
xchg
xchg
jmp
pop
sub
hlt
jg
divl
and
pop
sub
fdivr
sub
stos
lret
mov
popf
popa
cmp
dec
xchg
andb
add
lcall
shll
adc
mov
inc
repz
mov
xchg
jns
jbe
sbb
int3
adc
insb
mov
mov
out
pusha
jne
pop
cli
imul
and
test
push
lds
es
mov
pop
andl
push
mov
jmp
scas
sbb
dec
jle
out
push
adc
adc
dec
loope
out
cmp
sahf
cwtl
mov
pop
les
jbe
xor
xor
out
data16
lea
out
jmp
jo
sti
adc
lcall
cld
movsb
xchg
test
mov
mov
ss
cmp
or
sub
add
fwait
aaa
pop
repnz
test
mov
fdivrp
push
push
cmpsb
inc
sub
push
mov
jno
push
shlb
jecxz
dec
cltd
mov
scas
pop
fwait
push
lock
add
pop
cmc
js
push
mov
dec
mov
sub
xchg
sub
or
test
mov
xor
addl
jae
and
sbb
mov
nop
insb
mov
cmp
iret
sbb
cmp
andl
mov
jl
in
repnz
push
push
dec
enter
and
xchg
push
shl
sbb
daa
adc
scas
pop
fdivrl
or
push
cwtl
flds
add
shll
push
gs
insb
pop
sti
add
jmp
loop
push
sbb
pop
xor
cmp
push
pop
sar
and
sbb
sbb
in
into
shrb
xor
lahf
cmpsb
repnz
dec
ljmp
sbb
cmp
das
rep
xor
iret
mov
aas
fldenv
push
push
jl
dec
jmp
cs
xlat
mov
mov
add
push
mov
leave
roll
popa
sbb
jb
mov
pop
mov
or
loopne
or
cmp
out
cld
jp
cmp
mov
gs
sti
fildll
dec
cwtl
pop
mov
es
shll
pop
movsl
scas
jl
jmp
insl
push
cs
arpl
pop
fnstcw
xchg
pop
fidivl
push
repz
inc
sub
jo
sbb
and
adc
pop
add
and
xchg
pop
mov
add
mov
arpl
pop
enter
leave
in
dec
push
mov
imul
jns
xor
xor
addr16
int3
sbb
popf
jg
dec
lret
inc
outsb
shrl
int3
nop
shlb
andl
fimull
lods
xlat
push
in
mov
fcoms
push
xchg
mov
test
push
mov
pop
inc
and
pop
push
cli
into
adc
add
call
adc
insb
fldz
xchg
scas
fidivs
xchg
add
rorb
decl
mov
lcall
stc
cli
sti
loope
out
add
push
fsts
ffreep
xor
cmp
sbb
ss
cmc
stos
out
cmp
lods
in
iret
out
outsb
mov
repz
nop
loope
inc
shlb
les
push
mov
in
jb
cmp
sub
lock
stc
pop
in
jl
bnd
jo
es
sub
out
and
dec
lahf
addr16
add
movsb
fs
js,pn
xor
sti
pop
dec
mov
inc
mov
jge
lcall
and
cmpsb
mov
cmp
aaa
and
sub
dec
mov
push
test
ret
loope
sbb
jno
sti
mov
xorb
xchg
mov
scas
test
dec
mov
jle
adc
popa
in
lret
out
cmpsb
ret
cmp
sti
shlb
fwait
pop
push
pop
dec
into
int3
insl
dec
mov
mov
out
pusha
xchg
scas
aam
in
pop
mov
cmp
push
xchg
adc
in
mov
xchg
mov
lcall
and
mov
and
addr16
push
sub
mov
out
mov
movsl
insl
out
adc
adcb
jge
dec
push
cld
imul
cmp
cmp
or
out
sub
rol
fidivrs
and
mov
cwtl
negl
ret
cmpsl
adc
sbb
add
jbe
lds
mov
daa
fstpt
add
mov
gs
scas
insl
xor
adc
push
sub
sbb
aad
popf
add
push
dec
fistl
int
mov
jbe
jbe
inc
mov
int
or
dec
push
je
pop
pop
jl
and
insb
in
jo
iret
movsb
pop
jns
pop
mov
dec
imul
cmp
sbb
jp
cmp
inc
mov
inc
push
cmc
xor
push
inc
pop
xor
sti
push
inc
test
int3
mov
into
mov
in
hlt
add
dec
inc
pop
out
inc
push
hlt
popa
push
out
popf
jmp
ret
bound
jmp
inc
lock
call
sbb
cmp
jl
addr16
dec
mov
mov
lock
push
inc
ss
xor
adc
enter
pop
inc
mulb
lds
sub
loopne
push
sub
sub
cwtl
adc
xchg
mov
jo
mov
popa
mov
mov
or
rorl
loopne
mov
add
aaa
adc
sbb
sti
imul
add
mov
dec
xchg
icebp
and
jg
add
lahf
in
int3
loop
mov
inc
inc
js
jb
xchg
insl
and
je
pop
test
test
pop
insl
mov
ror
add
popf
aam
sub
mov
dec
loopne
jo
and
into
loope
lods
mov
loopne
pop
adcl
jno
imul
and
mov
mov
int
adc
jns
inc
and
pusha
xor
push
mov
xorl
pop
das
cmpb
clc
repz
or
cmp
xor
test
es
cwtl
pusha
adc
aaa
aad
sbbl
push
inc
mov
push
aas
pop
xchg
xchg
stos
hlt
pop
sbb
jecxz
repz
inc
enter
mov
mov
cli
jp,pn
mov
mov
iret
inc
test
mov
scas
xor
xor
imul
push
rcrl
or
mov
inc
xchg
mov
loop
add
andb
and
out
jle
adc
jbe
xchg
fiadds
or
mov
cwtl
sbb
xor
hlt
push
xlat
mov
pop
fcomps
sub
daa
shrb
insl
std
in
lock
and
jecxz
shlb
leave
push
ret
pop
sub
sub
shlb
out
xchg
cmpsb
loop
and
lock
sub
mov
cmp
sub
push
mov
xor
xchg
arpl
sbb
pop
or
push
ret
sarb
pop
cld
int
add
fldenv
sub
decl
pop
out
dec
mov
pop
mulb
xor
or
or
inc
std
js
scas
int
pop
gs
mov
inc
inc
xlat
inc
imull
push
sahf
pushf
aad
push
pushl
mov
mov
cltd
xchg
push
imul
or
sub
shl
cmp
push
add
and
mov
aas
cmpsl
cwtl
or
push
jmp
int
lock
sti
ret
xchg
repz
xlat
and
aas
xchg
xchg
repnz
sbb
jg
mov
lret
leave
sbb
add
pop
arpl
mov
inc
push
inc
dec
adcb
mov
pop
aas
sub
jo
mov
inc
cwtl
and
mov
fwait
mov
cwtl
lock
dec
test
std
adc
aam
mov
and
imulb
xor
mov
sarb
push
push
add
jne
cld
fisubl
sub
insl
dec
out
hlt
and
sub
popa
pop
repz
and
and
mov
in
sub
daa
mov
leave
mov
xchg
lods
jmp
xor
clc
fistl
je
ljmp
dec
adc
dec
xor
inc
cmp
ficoms
xor
ja
insb
adc
out
pop
clc
loope
inc
fabs
jnp
lock
mov
dec
pop
sub
xchg
push
push
iret
pop
cs
lret
rclb
scas
add
and
push
add
jbe
jnp
jl
xchg
bound
out
sbb
repz
mov
aas
shrb
test
mov
and
cltd
xlat
push
or
stc
stos
hlt
dec
loope
push
roll
sbb
mov
or
push
shlb
daa
mov
rcll
pavgw
jecxz
lods
dec
insl
jl,pt
cmp
jb
cmp
subb
cmp
test
xor
cwtl
stc
pop
add
aam
push
adc
lea
iret
rorb
cmp
inc
aas
sbb
ror
sub
mov
pop
cmpsb
dec
mov
mov
int3
ret
sub
in
mov
std
test
jnp
fwait
sbb
test
fsub
lret
shrl
pushf
rclb
cmp
std
out
jecxz
mov
test
mov
roll
test
ret
dec
rcll
les
mov
ret
mov
add
fldt
fisttps
scas
and
sti
inc
mov
xchg
sbb
xor
sub
decb
pop
or
mov
push
mov
mov
bound
or
xorb
mov
pop
sub
add
fisttpl
lods
push
xchg
fdivrs
dec
lds
incl
cmpsl
ds
incl
add
pop
data16
jl
cs
fwait
jbe
sbb
inc
icebp
imul
stos
pop
in
cli
repz
scas
jp
clc
or
jl
cld
out
fadd
mov
test
leave
sub
xor
mov
inc
fwait
push
popf
roll
mov
fs
xchg
lret
inc
call
insb
loope
fisubs
lcall
in
mov
inc
movsl
ret
adc
int
pushf
pop
fists
call
pusha
xchg
cmp
aaa
dec
lahf
xor
arpl
call
fstl
mov
xor
aam
int3
and
push
mov
ret
insb
xchg
adc
or
cmp
xchg
bnd
fcmovnu
adc
xchg
ret
xor
jae
in
jecxz
push
or
imul
ja
idivb
sbb
enter
dec
frstor
mov
mov
fsts
pop
nop
addl
jmp
dec
lods
fdivr
out
ss
push
push
add
dec
sub
xor
test
inc
push
jmp
lcall
in
jb,pt
pusha
cmp
mov
in
jecxz
add
jecxz
jnp
xor
pop
mov
aam
mov
aam
xlat
add
add
fwait
inc
into
shll
push
pusha
adc
jnp
adc
mov
cmp
jo
and
into
shlb
popf
addr16
inc
scas
xchg
push
insl
ljmp
mov
pop
in
pop
inc
mov
fstps
cs
fidivs
in
jns
sbbb
popf
push
sbb
imul
movsb
imul
lea
inc
shlb
inc
jp
adc
gs
shl
sub
pop
jecxz
je
ja
xchg
xor
ret
jne
push
arpl
aad
jno
mov
ficompl
rclb
adc
xor
lock
test
lea
aas
loope
jge
adc
repz
fcmovnu
xchg
sti
dec
cmp
cmpsl
mov
jno
movsb
aam
jbe
mov
mov
out
push
lea
dec
sub
ss
je
or
test
xchg
jle
cltd
jb
xchg
sti
xchg
sahf
test
inc
call
ja
sub
loopne
cmpsb
inc
cmpsl
ja
in
imul
std
testb
sbb
push
inc
fnsave
jle
cmpsb
jae
popf
xor
jl
sub
or
clc
roll
shl
push
mov
out
inc
pusha
loope
shll
and
and
jmp
inc
gs
and
xor
popl
or
int3
mov
and
jmp
sub
rolb
jns,pn
dec
in
mov
bound
mov
lock
pop
jmp
scas
pop
cmp
fmul
adc
test
sub
xchg
dec
inc
lds
stos
ljmp
sub
adc
push
push
ja
mov
ss
dec
pop
add
dec
mov
add
inc
jo
mov
xchg
and
enter
clc
mull
dec
out
outsb
push
dec
add
fs
cmp
add
sarl
dec
add
gs
js
mov
nop
jp
test
imul
addr16
pop
dec
sub
add
push
pop
inc
stc
mov
xchg
sbb
sarb
mov
in
jo
jp
xchg
xchg
add
dec
add
cld
pop
pop
mov
mov
xor
xor
mov
icebp
or
scas
pop
cmp
mov
jae
adc
sub
scas
xchg
mov
xchg
inc
jp
gs
loopne
sub
xchg
dec
cmp
adc
not
pop
orl
test
arpl
out
lods
jecxz
lcall
rolb
jo
cltd
dec
std
cmc
adc
xor
mov
popf
into
cmpsl
lods
andl
popf
mov
ds
push
sbb
sbb
add
mov
mov
mov
add
outsb
rolb
cmc
xchg
lea
sub
xchg
in
adc
pusha
lahf
loopne
loope
fidivs
xchg
adc
push
js
dec
aas
add
xor
sti
inc
and
jecxz
cli
xchg
scas
pop
test
mov
cmp
push
lea
ljmp
gs
sbb
add
inc
pop
jno
or
jae
lcall
push
cmpl
jne
mov
cmp
lret
sub
mov
pop
mov
cmp
mov
cmp
cmpsb
add
scas
sub
xor
mov
cmpsb
repz
in
inc
dec
mov
scas
fmull
in
fsubl
push
in
xchg
cmp
mov
sub
xchg
mov
sbb
dec
nop
xor
dec
daa
add
dec
xor
fnsave
xchg
mov
or
shrb
add
stos
xor
fisubs
or
cmp
scas
out
movsl
add
ffreep
xchg
mul
push
jmp
jg
jl
cli
adc
dec
insl
dec
in
out
arpl
jl
sahf
inc
pop
jno
aad
sahf
les
xchg
dec
add
or
in
add
les
sbb
arpl
aad
pop
push
outsb
push
add
jg
mov
js
jecxz
jb
jecxz
jno
adc
adc
cmp
sarl
scas
test
pop
sbb
pop
push
add
inc
push
push
mov
subb
mov
or
push
adc
ror
and
sbb
xchg
aam
mov
ret
fimuls
test
cmp
push
add
inc
mov
push
mov
sbb
jmp
jbe
decl
cwtl
stos
pop
push
xchg
mov
ret
ljmp
ficomps
mov
inc
movsb
push
inc
scas
mov
xor
adc
sub
push
rcrb
jno
mov
test
mov
jb
xchg
pop
sbbb
and
dec
cmc
outsl
push
or
pop
sti
jle
mov
in
push
jg
jecxz
addl
xchg
jns
out
push
cltd
and
aas
lret
out
inc
data16
int3
adc
mov
jb
lods
leave
push
xchg
xor
sahf
jae
mov
sbb
ror
ja
enter
add
mov
outsl
lods
movsb
bound
imul
mov
call
add
shl
test
popa
sub
push
xor
out
pop
lock
dec
or
popa
rcll
fsubr
cmp
lcall
loopne
jge
pop
cmp
cmp
jge
arpl
clc
lea
and
test
mov
imul
or
in
imul
fbstp
cld
sbb
pop
repnz
leave
repnz
fisubrl
mov
cs
mov
cld
pop
jle
fwait
dec
mov
push
neg
pushf
and
out
jbe
pop
sub
xor
stc
inc
out
and
pop
adc
pushf
jle
imul
rolb
jmp
rcll
pop
aaa
add
int
xchg
sbbb
and
lds
jo
roll
bound
imul
and
cmc
ja
sbb
xor
aas
mov
and
imul
push
ret
das
es
dec
inc
xchg
sub
aaa
loopne
or
fimull
sub
dec
insl
rcll
rolb
ja
inc
adc
push
inc
mov
xchg
inc
ficompl
popa
dec
ret
xchg
dec
gs
and
fidivl
or
xchg
push
xchg
pop
and
mov
mov
cmp
xchg
jecxz
bound
subb
adc
idiv
mov
into
and
inc
push
push
cwtl
mov
add
inc
outsl
xchg
jb
mov
and
fstpt
sbbb
mov
xlat
int
push
or
adc
mov
cltd
gs
push
push
insl
xchg
mov
addr16
loope
xor
mov
addl
dec
mov
sbb
xlat
or
into
test
gs
jmp
sub
sbb
js
sbb
fnstcw
imul
jge
cmp
pop
je
lods
mov
testl
xor
fcmovu
and
mov
push
mov
sahf
sbb
xchg
adc
int3
mov
dec
inc
stos
popf
lahf
insl
ret
in
push
popa
test
cmpsl
mov
out
push
mov
mov
fld
daa
pop
pop
daa
cmp
mov
adc
or
xor
mov
mov
enter
data16
adc
aas
pop
dec
pop
scas
jns
mull
clc
daa
call
pop
cmp
sub
sbb
or
js
push
xchg
mov
inc
mov
daa
call
pop
cmp
sub
sbb
or
js
push
xchg
mov
aas
mov
daa
call
pop
cmp
sub
sbb
or
js
push
xchg
mov
inc
mov
daa
call
pop
cmp
sub
or
cmpsl
js
push
or
sbb
cmpsl
sbb
xor
mov
mov
lret
sub
cmp
or
sbb
push
jp
dec
outsb
pop
jle
mov
mov
lret
sub
cmp
or
sbb
push
jp
dec
outsb
pop
jle
mov
ret
lcall
mov
or
shlb
insl
mov
lret
add
mov
aaa
bound
mov
push
aas
in
xchg
mov
mov
push
xor
jne
gs
popf
out
push
add
xor
or
sbb
aad
imul
mov
xchg
scas
adc
ljmp
icebp
cmp
pusha
das
sbb
dec
dec
outsl
dec
iret
xchg
daa
mov
lock
adc
adc
xchg
ljmp
mov
inc
lret
in
lahf
rsqrtps
lea
out
fldt
leave
das
xchg
dec
test
mov
movsl
pop
sti
std
jno
jne
mov
mov
sti
pop
out
cmp
or
sbb
push
jp
dec
outsb
pop
jle
mov
mov
lret
mov
arpl
js
and
pop
or
stos
loop
testl
insb
pushf
fwait
dec
dec
pop
push
outsl
jbe,pn
push
aas
jo
add
jle
lret
jmp
mov
lcall
fwait
scas
nop
dec
pop
cmp
pop
jbe
and
dec
outsb
pop
jle
mov
mov
lret
sub
cmp
or
sbb
push
jp
dec
outsb
pop
jle
mov
mov
lret
sub
pop
or
mov
mov
xchg
mov
cmc
mov
mov
pop
rcll
aaa
imul
pop
call
out
mov
mov
arpl
dec
orl
or
shrl
sbb
xor
dec
xlat
push
or
fcomps
loope
inc
add
leave
sbb
ror
sub
call
lods
ss
lahf
test
mov
call
inc
cmc
xchg
pop
test
test
imul
and
rcrb
sbbl
inc
push
ds
repnz
int
lahf
push
xor
pop
push
incb
shlb
cltd
mov
and
add
mov
ret
scas
arpl
repz
add
adcl
dec
shrb
orl
in
out
adc
mov
bound
inc
mov
mov
lea
sbb
mov
xor
jno
mov
lahf
xchg
cmp
jmp
sbb
jl
jle
fsubs
pusha
xchg
cmp
call
xchg
dec
jle
sbb
lret
insl
mov
mov
or
xor
xor
dec
in
jl
les
xor
mov
popf
or
aaa
pusha
sub
aad
cltd
cmp
lds
sub
or
repnz
pusha
dec
xchg
cmp
pop
arpl
out
sahf
stc
push
in
sbbb
repz
jmp
sbb
pop
nop
cmp
sti
ss
lods
and
adc
mov
sti
incb
shrb
xchg
cmp
in
pusha
lret
leave
out
cmp
push
leave
ds
movsb
inc
xor
jmp
pop
stos
jg
xchg
test
push
or
outsb
and
loop
adc
lods
int
arpl
mov
xor
fdivrp
xchg
and
in
push
sbb
jbe
push
cmp
ret
mov
imul
arpl
inc
fnstcw
push
enter
add
imul
repz
sbb
or
dec
push
cld
dec
inc
jae
or
xchg
data16
inc
sbb
bound
mov
mov
int3
mov
inc
stos
jb
sbb
add
cmp
rcll
mov
data16
pop
adc
dec
mov
mov
stos
push
jb
inc
mov
cli
mov
add
andb
cs
sbb
sarb
out
mov
das
jbe
mov
insl
fcmovnu
add
enter
pop
jns
jbe
or
mov
push
lcall
adc
stc
mov
adc
jns
pop
out
mov
xchg
sub
int
push
popf
pop
and
xlat
push
dec
xor
iret
mov
shll
ret
jge
inc
nop
dec
pushf
jp
in
out
mov
in
dec
testl
sbb
fwait
repz
push
popf
jo
js
in
dec
jb
inc
aad
pop
fsubr
dec
xchg
dec
xor
mov
mov
stc
lret
mov
push
ret
xchg
jge
outsl
push
out
mov
pop
sbb
cli
shll
ret
jge
ss
leave
push
movsl
imul
repnz
pop
sub
insb
sarb
nop
cmp
fistps
jns
subb
pop
xchg
ljmp
ret
or
xchg
clc
popa
ds
sbb
jne
push
mov
sahf
rclb
in
xchg
fmuls
add
adc
inc
pop
inc
in
cmp
outsb
ret
fldcw
adc
stos
jl
jecxz
neg
gs
dec
das
lds
mov
mov
jge
test
dec
mov
jmp
data16
pop
outsl
pop
popf
std
insl
add
aas
gs
popa
mov
or
test
int3
adc
adc
fdivrs
mov
mov
and
and
fldl
scas
outsb
mov
movsl
xor
fisubrs
push
dec
lock
mov
testb
int
pushf
mov
test
dec
jl
xor
cwtl
jp
jbe
sub
mov
lcall
jl
mov
add
mov
dec
pop
je
idivl
or
inc
js
xor
jmp
cld
dec
ret
add
iret
xchg
pop
cmp
mov
or
lock
sbb
popf
lods
insl
xor
mov
pop
mov
pop
sub
xchg
push
push
test
in
xchg
xchg
pop
das
dec
push
pusha
mov
xchg
push
cmc
shll
and
in
sahf
inc
xor
xor
and
jne
lret
pop
add
sbb
in
aaa
imull
dec
push
jb
scas
lea
test
fstps
inc
mov
es
inc
xor
jae
test
xchg
push
xchg
adc
shll
lods
sub
ds
sub
incl
mov
xchg
mov
in
mov
jmp
xchg
xor
repz
std
and
xchg
cmc
mov
cmp
sub
jp
xchg
imul
pop
and
in
stos
addl
jnp
add
in
pop
ret
jno
or
in
insb
ljmp
mov
cmp
pop
xchg
cmpsl
pop
andb
xchg
pop
pop
mov
ds
cwtl
jecxz
cwtl
xchg
cmp
into
mov
xor
pop
mov
int
lods
sub
gs
aam
movsl
inc
jbe
adc
inc
push
jnp
push
mov
pop
xchg
jb
xor
ficoms
daa
sbb
popa
pop
mov
cmpsb
out
mov
or
dec
ret
pop
lods
push
btr
fs
cmc
pop
test
mov
xchg
dec
pop
inc
jo
test
insb
gs
mov
jp
or
arpl
js
jb
int
jp
cmp
sbb
lret
into
sbb
lea
mov
movsb
cld
mov
cmpl
imul
xorb
push
stos
pop
cmp
sarb
sub
addl
out
lret
adc
and
jbe
mov
in
lcall
mov
movlps
in
push
sbb
add
hlt
sbb
sub
mov
shl
test
cmp
pop
ljmp
sbb
push
pusha
mov
popf
or
dec
gs
scas
push
aam
adc
sbb
xor
imul
test
test
cmc
cltd
lods
imul
xchg
or
sti
mov
je
adc
outsb
jae
dec
ja
cmp
ds
jge
jle
pop
lock
repnz
xchg
int3
repz
mov
cmpb
and
add
fisttpll
fwait
mov
and
mov
jnp
cmp
sahf
inc
xchg
ljmp
lcall
loopne
cmp
mov
xlat
popf
cmpsb
mov
jno
mov
xchg
stos
push
jns
cli
xchg
or
insl
xchg
jbe
sbb
inc
jge
mov
shrl
aas
out
xchg
mov
mov
add
xchg
es
popw
lcall
sub
out
push
divb
and
jmp
inc
mov
adc
sbb
or
xor
sbb
repnz
adcb
out
and
adc
or
outsb
pusha
rcl
mov
inc
stos
push
sarl
sub
jmp
dec
sbb
mov
pop
ja
or
cmpsb
mov
push
lret
xchg
jle
push
mov
je
inc
mov
mov
bound
mov
jno
loope
pop
sahf
sub
ret
stos
leave
mov
adc
pop
fwait
mov
outsb
and
xchg
adc
jnp
sbb
mov
xor
push
mov
ret
pop
jp
iret
clc
jg
inc
inc
jo
fldl
cmc
add
cli
mov
hlt
into
mov
xchg
or
inc
pushf
into
and
repz
inc
in
xor
mov
repz
loope
add
sub
inc
jnp
fbld
mov
cmp
inc
sbb
mov
mov
mov
not
mov
mov
xchg
pop
movsb
xlat
nop
jo
cmpl
and
sbb
sti
lret
mov
loopne
xchg
cmp
iret
cmp
mov
fidivs
stos
xchg
imul
nop
push
pop
rolb
fdivl
cmp
mov
lret
shl
ljmp
and
xchg
dec
dec
push
push
cs
fsubrl
pop
mov
push
jo
sbb
outsl
shlb
sub
jecxz
adc
inc
in
sbb
jo
lss
sub
sub
pop
enter
push
xchg
mov
stos
cmp
xorb
fnsave
jge
insb
xor
and
add
stos
fdivr
mov
inc
xor
stc
fs
push
enter
sahf
fldcw
bound
adc
fstl
frstor
adc
jo
dec
jne
test
int3
adc
mov
or
repnz
imul
and
lret
es
lock
cwtl
out
pushf
push
sbb
arpl
cmp
mov
cmp
xchg
pop
push
mov
fptan
aas
in
sarl
repz
insl
cmp
or
daa
aas
xchg
sbb
inc
cmp
or
inc
xchg
push
cmp
pop
fs
push
inc
dec
fldcw
clc
out
jbe
push
jne
aaa
or
xlat
sbb
test
pop
mov
xchg
dec
or
ljmp
push
and
push
mov
mov
jp
aaa
lret
sub
mov
cmp
push
pop
in
iret
loope
scas
push
mov
mov
add
jns
mov
push
pop
sub
int3
in
pushf
es
and
daa
xchg
int
fildl
aam
dec
daa
jmp
mov
and
jae
add
cwtl
cwtl
loop
add
sbb
adc
les
cmc
pop
scas
subb
cltd
xchg
lret
mov
or
xchg
inc
cwtl
adc
scas
cmp
adc
out
cltd
cmp
dec
push
pushf
push
xor
mov
mov
mov
inc
test
lahf
scas
test
xchg
idivl
rclb
cld
shl
mov
push
outsl
jmp
mov
xchg
add
mov
loopne
movsb
insb
popa
cmp
jae
lods
jg
sub
mov
lahf
clc
fdiv
out
push
das
mov
push
xchg
xchg
xor
mov
adc
lcall
xchg
push
xor
xor
scas
xor
xorb
mov
addr16
test
and
imulb
push
insb
push
xchg
inc
popa
pop
daa
inc
out
ljmp
mov
rcrl
push
xchg
addr16
and
iret
daa
out
dec
dec
aas
out
mov
imul
ljmp
mov
mov
popf
cld
mov
sarl
mov
shl
insl
adc
int3
sub
popa
test
or
cli
pop
jb
fists
test
and
xchg
std
and
fbstp
pop
jno
aaa
lcall
mov
dec
push
fcomi
jge
pop
jg
leave
or
into
sbb
inc
cs
fistpl
pop
lret
push
int3
bound
xchg
into
jnp
sbb
cmpsl
cs
out
dec
es
dec
mov
in
ja
dec
dec
adc
cmp
addb
ret
cmp
mov
cmp
mov
sub
sub
out
lcall
push
les
jmp
dec
xchg
fadds
mov
fnsave
ret
cmp
dec
pushf
mov
push
in
mov
insl
cmpsb
inc
inc
scas
daa
mov
cld
inc
mov
add
imul
movsl
push
cmp
std
push
inc
loop
rcll
xor
and
lret
adc
inc
out
int3
dec
sbbl
and
and
mov
push
mov
cs
stos
cmp
pushf
sti
mov
lds
fnstcw
cmp
jle
scas
in
jecxz
in
jmp
jne
xor
sbbl
dec
divb
mov
loop
or
sbb
mov
or
adc
xor
xchg
sti
and
xchg
push
and
mov
inc
punpcklbw
pop
xchg
ret
or
xchg
icebp
jp
movsb
jo
jnp
mov
push
and
bound
lds
movsb
insb
into
mov
adc
and
lds
mov
jmp
mov
push
mov
mov
cmp
mov
sub
sbb
outsl
xchg
pop
sbb
cli
lahf
push
insb
hlt
xchg
subb
loop
mov
aas
data16
das
mov
shl
and
scas
and
mov
sub
jae
pop
xchg
ret
pop
pusha
xor
repnz
adc
lcall
jg
push
jle
mov
fistpll
sbb
mov
cs
jp
cmc
pop
mov
dec
push
xlat
xchg
cld
sub
xor
in
pop
pop
clc
dec
jnp
sub
ja
xchg
ss
pop
mov
rcrb
aam
andl
sub
test
pop
mov
sbb
popa
nop
out
das
outsl
cli
mov
mov
sahf
aam
sbbb
fldenv
call
clc
sahf
mov
mov
or
add
mov
sub
shlb
mov
out
adc
fadd
ret
push
mov
pop
mov
mov
add
pop
push
pop
sub
popa
mov
aad
clc
cmp
inc
jbe
adc
scas
jmp
out
sub
stc
ret
dec
in
das
cs
std
and
and
loope
sub
dec
in
push
outsl
push
insb
lods
jg
adc
cli
das
scas
and
ljmp
int3
movsb
insl
adc
dec
lret
mov
icebp
xchg
fnstsw
cmp
push
not
mov
cs
xchg
fdivl
add
shlb
or
lret
out
ds
jg
dec
dec
adc
int
inc
lret
add
and
nop
inc
adc
jl
xchg
rcll
mov
xor
adc
sbb
outsb
pop
sahf
and
cli
jecxz
in
std
fst
pop
or
subl
mov
lods
cld
add
lret
cwtl
mov
xchg
adc
cld
pop
aaa
lret
sbb
or
adc
push
xchg
pop
cld
xchg
push
pop
mov
sub
stos
ljmp
rol
sbbb
cmp
in
pop
mov
outsl
mov
mov
enter
dec
and
xor
leave
icebp
dec
mov
scas
sbb
add
pop
clc
adc
fs
stos
mov
gs
xor
sub
inc
in
mov
jecxz
scas
mov
adc
scas
adc
pop
or
aas
add
dec
inc
repz
inc
mov
enter
in
test
cmp
out
das
scas
sub
push
sub
adc
lret
cs
dec
inc
popf
adc
cmp
dec
sub
mov
inc
mov
sub
push
repz
in
adc
ljmp
cld
lea
jns
sbb
sbb
add
jle
mov
push
dec
sbbl
or
daa
cli
adc
pop
mov
mov
int3
jno
daa
or
or
insb
and
es
or
and
cmpsl
push
loope
pop
jl
and
mov
rorl
push
cmp
mov
test
jge
jns
mov
push
mov
jecxz
popf
dec
cmpl
movsb
int3
jge
dec
popf
leave
fiaddl
adc
test
and
outsb
pusha
mov
aas
je
or
dec
xor
xor
cli
shll
push
pop
cwtl
lcall
nop
mov
lds
cli
mov
mov
mov
fucom
adc
cltd
add
out
test
es
jmp
std
push
aaa
mov
lret
loope
push
mov
cld
in
mov
jmp
repnz
iret
mov
push
xor
xchg
cmp
shlb
xchg
out
lcall
repz
call
scas
pop
in
sbb
js
lahf
sbb
mov
mov
cmp
movsl
push
adc
nop
xchg
shl
cmc
xor
fwait
jmp
push
shll
in
scas
xor
add
inc
fwait
es
and
daa
pop
push
sub
pop
data16
dec
fsubrl
adc
ja
xor
js
pop
inc
and
or
cmp
movsb
xor
add
pop
adc
loop
pop
lret
loope
cli
sub
dec
imul
dec
sbb
lcall
xchg
out
mov
or
add
push
and
mov
mov
pop
inc
cltd
clc
sub
dec
out
and
xor
das
rorb
inc
iret
inc
rclb
cmp
lds
jecxz
test
dec
daa
push
stc
mov
xchg
int3
arpl
loope
mov
mov
pop
dec
xchg
repnz
lahf
test
mov
mov
mov
and
sahf
mov
movsl
sarb
inc
fsubs
dec
in
mov
ret
lahf
out
out
fldenv
aad
int
push
jmp
out
pusha
or
pop
jmp
testl
mov
lock
jno
mov
ljmp
xor
dec
xor
repz
dec
icebp
xchg
into
inc
cwtl
pop
rorl
adc
pop
cmc
es
jmp
dec
adc
xor
addr16
outsb
xchg
cmp
mov
mov
imul
push
mov
mov
popf
push
into
es
sti
ficoml
jae
ret
mov
add
and
fmul
adc
mov
movsbl
pusha
imul
adc
cmp
shll
mov
dec
pop
lock
pop
imul
mov
fadds
xor
sub
in
xchg
fistl
pop
je
mov
aad
test
inc
aas
cmp
sbb
or
imul
out
rcrb
shll
scas
jl
daa
xchg
jge
test
xlat
mov
cmp
adc
xor
sub
and
lcall
pop
arpl
sub
push
mov
test
jo
lahf
lret
ss
push
arpl
das
fiaddl
addl
loope
jb
adc
xor
xor
lret
shrb
xor
sub
push
push
xchg
push
cs
lock
sbbl
int3
fisttpl
cmp
jno
es
fwait
andl
pop
jo
xchg
lcall
push
mov
sti
out
adc
mov
insl
insb
cmp
mov
mov
fidivrs
xchg
inc
or
mov
sbb
xchg
xor
dec
inc
push
jle
shr
add
jo
dec
xor
mov
into
xchg
daa
cmp
ds
aaa
inc
jle
xchg
add
int
fistpll
scas
or
sub
in
into
jge
sbb
and
dec
mov
mov
das
cmp
adcl
or
mov
stos
cmp
jno
jecxz
jge
test
mov
push
scas
test
xor
pop
int3
test
shrb
sub
sub
push
pop
ror
mov
mov
and
dec
cmp
call
pop
insb
xchg
add
sub
lahf
jge
mov
repnz
dec
jmp
sub
mov
test
adc
sub
inc
and
sti
ss
jae
addr16
adc
lods
push
sbb
xor
int3
out
push
movb
xor
add
stos
mov
xchg
out
fistpll
cwtl
dec
out
fs
cmc
stos
xor
adc
js
or
outsb
pushf
lahf
lock
and
xchg
adc
ja
adc
test
sub
imul
out
jmp
xchg
mov
iret
xchg
xchg
xchg
pop
pop
dec
fndisi(8087
push
add
lock
outsb
int
sarb
loopne
bsr
call
cmp
cltd
clc
test
insl
add
ds
sbbb
test
jg
push
mov
mov
add
pop
xchg
xor
insb
or
iret
enter
cltd
xchg
cmc
cmp
adc
int3
jb
jb
jae
nop
in
or
roll
cmp
mov
enter
mov
pushl
dec
popa
jnp
insl
xlat
mov
inc
icebp
mull
push
inc
pop
push
and
mov
xchg
xchg
add
sub
mov
dec
ja
pop
pop
xor
fcompp
in
push
int
call
popf
add
dec
pop
push
mov
mov
cmp
hlt
dec
pop
and
push
popf
out
inc
jns
lods
call
mov
arpl
adc
xor
mov
fwait
inc
pop
push
cwtl
xchg
inc
testl
mov
xchg
pop
iret
mov
repnz
int
or
dec
lea
sbb
xor
imul
jecxz
jne
in
repz
jl
push
jne
fisubrl
sti
sbb
sbb
rorb
add
pop
xor
or
sbb
push
jp
dec
outsb
pop
jle
mov
mov
lret
sub
cmp
or
sbb
push
jp
dec
outsb
pop
jle
mov
mov
lret
sub
mov
aas
ljmp
jle
mov
mov
lret
sub
cmp
or
sbb
push
jp
dec
out
pop
subl
inc
mov
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
xorb
movsb
out
mov
in
mov
rorb
adc
xor
inc
ud1
fs
je
test
xchg
jmp
aam
in
fimull
add
adc
sub
xor
push
push
aas
fs
je
and
jns
sub
hlt
pushf
xchg
out
push
pop
add
aaa
sbb
inc
aas
pop
push
xor
pop
adc
negl
sub
insb
dec
jmp
data16
les
aas
roll
dec
iret
shll
xchg
sbb
or
sti
mov
sbb
fs
cmp
std
outsl
inc
pop
sub
sub
pop
add
xchg
lret
subb
test
mov
shlb
mov
sbbl
xchg
push
or
or
xor
pop
das
dec
pusha
testl
add
in
cmovno
pop
stc
pop
jnp
imul
dec
adc
push
cmc
cmpsl
push
mov
jle
outsl
pop
lcall
push
in
or
mov
rolb
aam
in
lods
add
mov
jg
adc
lods
test
fdiv
popa
cli
mov
ds
push
fs
orl
cmp
push
sarb
xchg
out
xchg
fadd
addr16
popa
sbb
add
or
dec
add
lods
idiv
je
enter
mov
hlt
pop
add
adc
and
xor
inc
andps
fs
je
test
xchg
jmp
aam
in
hlt
pop
add
adc
and
xor
inc
andps
fs
je
test
ret
mov
shll
lret
lret
sbb
outsb
pop
mov
mov
push
cmp
cmp
cwtl
xchg
xchg
leave
fs
bound
lods
addr16
xchg
ds
enter
sbb
xchg
or
xor
mov
into
movsl
pushf
or
das
cmp
sbbl
sub
add
inc
lahf
jg
xorb
mov
add
test
push
sbb
icebp
daa
into
mov
sub
fdivl
push
dec
fistpll
sbb
mov
jle
push
pop
xchg
mov
jge
std
mov
decb
out
imul
xor
xchg
inc
push
enter
sub
and
fidivrs
scas
pop
push
ret
push
inc
push
out
mov
shr
sbb
cld
push
xor
mov
and
mov
mov
mov
push
xchg
push
mov
jo
xchg
bnd
pop
pop
push
jecxz
inc
add
push
sub
adc
gs
sub
arpl
js
fstpt
rol
adc
fstl
add
test
mov
movsl
into
loope
fs
popa
sbb
and
adc
cmpsb
pop
popf
pushl
jb
test
lods
mov
scas
mov
push
push
mov
sbb
pop
loopne
xchg
loop
popf
lds
out
lcall
in
aas
std
xchg
aas
fmuls
cmp
and
add
mov
lcall
imul
dec
sti
in
sbb
sbb
dec
sub
sub
adc
sbb
cs
mov
cmp
cmc
mov
mov
jne
fcmove
int3
out
daa
shrl
mov
pop
sbb
mov
and
sub
rcrl
xorl
jp
js
out
dec
mov
mov
cmp
addb
inc
stos
xchg
pop
dec
das
mov
enter
idiv
add
xchg
or
sub
fadd
fistps
mov
int3
pusha
add
pusha
or
adc
mov
jp
mov
jb
call
adc
lahf
stc
arpl
push
cmp
and
outsl
mov
xlat
add
insb
and
or
mov
sub
sahf
dec
mov
push
push
xchg
cli
xor
in
in
bound
or
jle
rcr
dec
cmp
ljmp
in
pop
jb
mov
and
and
js
rcr
and
sub
rorl
jae
and
loop
cmp
mov
push
mov
mov
negl
mov
and
mov
mov
in
iret
pop
jl
ja
push
lea
jp
dec
sarl
push
cmpsb
cmpl
stos
ja
adc
scas
jno
dec
fildll
add
jo
mov
mov
les
subb
mov
jp
pop
push
cli
xchg
arpl
and
cmp
push
leave
mov
push
jmp
or
sub
out
leave
pop
into
repz
jge
adc
mov
mov
mov
mov
dec
fldl2t
sub
cmp
popf
in
mov
mov
push
stos
sub
and
dec
ret
cmp
in
fs
leave
pop
adcl
fiadds
in
xchg
into
lods
mov
testb
gs
push
out
sbb
nop
inc
xor
sbb
xchg
and
daa
je
cmp
cli
xchg
stos
jae
dec
les
loopne
add
add
shrb
pop
xor
xchg
rcll
int3
mov
push
dec
cld
loope
outsb
jp
iret
rep
je
xchg
xchg
stos
xor
test
pop
ret
cmp
lock
fcmovnu
jl
inc
inc
lret
fcomp
push
arpl
push
or
pushf
lds
push
add
iret
pusha
xor
imul
mov
and
shll
sub
cmp
sub
push
mov
jnp
stos
and
push
in
xor
mov
gs
outsl
sbb
adc
sub
adc
adc
arpl
loop
xchg
fwait
mov
jl
popa
mov
pop
inc
pop
lds
lret
cs
xchg
adc
imul
xchg
in
or
data16
mov
mov
lcall
cld
push
xchg
daa
push
das
cld
ja
sbb
lods
rcrl
ror
addr16
and
cmc
dec
sub
shll
pusha
or
cmp
pusha
sbbl
scas
fildl
lret
jl
mov
mov
insl
ss
mov
das
inc
mov
xchg
repz
add
fwait
inc
cld
pop
fimuls
enter
push
push
int
cmp
mov
mov
sti
pop
icebp
in
xchg
fisttps
ret
jb
pop
enter
stos
push
fcomp
pop
into
cltd
push
sti
jae
jno
xchg
rorb
fistpl
sbb
or
pop
in
pop
pop
inc
outsl
sbb
loope
cmpsb
cmc
mov
push
jno
inc
es
in
cli
das
push
outsl
cmp
sahf
int
in
dec
cmp
mov
jp
mov
xchg
cmp
aaa
sahf
cmp
int3
cli
dec
add
lcall
bound
or
popa
lock
jmp
loope
sbbl
and
fdivr
orl
inc
movsl
mov
push
pop
inc
jmp
push
mov
and
test
xchg
int
or
enter
sub
mov
int3
aaa
push
imull
stc
fwait
jo
mov
pop
adc
das
out
jecxz
inc
dec
mov
pop
jb
dec
jae
jno
mov
fisttps
or
pop
mov
scas
shlb
cmp
push
push
in
imull
jno
or
mov
adc
fisubrl
loop
adcl
jmp
movsb
cmp
loopne
fstpt
cmp
test
jecxz
into
dec
xchg
pop
xchg
test
dec
icebp
adcl
pusha
nop
pop
clc
xchg
pop
insb
cli
xchg
int
in
cmp
jae,pt
jp
loopne
lahf
call
hlt
xlat
rcll
pavgb
sahf
cmpsl
lods
xchg
push
xor
inc
xchg
in
and
xchg
jecxz
pop
pop
dec
stos
inc
inc
dec
dec
divl
jmp
xor
test
test
cs
cmp
add
xchg
out
es
shrb
aam
sbb
and
mov
pop
aam
or
mov
ficomps
ret
pop
mov
jo
int3
xchg
loop
jle
jne
scas
pop
xor
add
push
pop
popa
xchg
daa
jp
loopne
jns
mov
mov
shll
sbb
jae
stos
xchg
sar
jno
mov
inc
lock
jns
shlb
in
mov
xlat
test
cmc
decl
inc
es
mov
dec
dec
aam
pushf
mov
gs
daa
imul
clc
cli
insl
ljmp
repz
mov
or
cltd
mov
sub
pmaddwd
ret
orb
dec
jle
dec
imul
cmp
mov
scas
stos
out
lahf
insb
mov
add
add
push
cmp
and
inc
inc
jg
fsubl
and
jne
shll
insb
cld
dec
jl
or
fstpt
std
fistpl
cmp
cmp
repnz
fisubl
or
push
sbb
pop
sub
cwtl
icebp
fsts
in
clc
add
stos
sub
or
pop
hlt
xchg
mov
pushf
push
cmp
or
mov
popf
in
xchg
xor
in
jb
cmp
ljmp
jmp
xchg
shll
es
andb
shll
or
loopne
sbb
cmpsb
xchg
stos
inc
jno
into
not
pop
into
jns
jbe
in
dec
jae
dec
or
roll
mov
pop
sbb
add
jns
sbb
lods
cmp
daa
add
imul
call
cs
push
xchg
mov
scas
movsb
addr16
sahf
mov
fidivs
mov
shr
fnstenv
test
aaa
add
pop
cmp
inc
std
popf
xor
mov
sbb
dec
je
mov
fsubrl
lock
cmp
mov
pop
cmp
int3
aaa
push
mov
cmp
pop
sub
scas
ja
pop
sbb
or
cmp
scas
addr16
into
xchg
test
and
pop
jbe
xchg
push
lcall
adc
outsb
jns
mov
imul
popl
mov
mov
cs
xorl
add
popl
pop
lock
sti
ja
adc
insl
adc
jg
fcoms
jns
int3
sub
cmpsl
jne
fsubl
stos
cltd
xchg
sub
jno
mov
cmp
cmpsb
pushf
lock
dec
add
daa
xchg
stc
sbb
push
mov
outsl
fmull
push
rorl
push
es
mov
scas
and
adc
xor
xor
jmp
out
cmp
gs
lea
shrl
inc
lods
fwait
cwtl
push
leave
pusha
hlt
bnd
cwtl
cli
or
add
jle
pop
cmpsl
sub
push
xchg
out
fbstp
sbb
int3
sarb
repnz
jmp
mov
push
xchg
xchg
out
insb
lds
mov
es
xchg
test
jne
adc
push
popl
mov
and
leave
dec
mov
push
cmpsl
add
push
xchg
shlb
int
clc
es
mov
sub
loop
dec
das
adcl
fwait
mov
gs
shrl
rolb
imul
scas
loope
dec
mov
cli
idivb
ret
hlt
mov
xchg
jle
sbb
inc
jnp
add
pop
loope
icebp
pushl
pop
movsl
cmp
cld
dec
aam
xor
xlat
lahf
and
xchg
jbe
adc
fiadds
fwait
xor
cmp
pop
sbb
iret
repnz
jno,pn
out
inc
ret
inc
xor
scas
push
dec
xlat
sub
pop
rcr
mov
adc
ret
add
adc
mov
int
stc
fsubrs
stos
lret
adc
daa
sbb
sub
daa
inc
call
adc
mov
pop
pop
cwtl
fmuls
movsb
push
std
aaa
gs
jbe
or
loopne
push
ljmp
inc
fwait
xchg
dec
aad
inc
out
jmp
pop
pop
push
inc
xchg
mov
in
or
pop
xor
shll
jo
jmp
jbe
mov
fidivrl
xchg
or
mov
shll
push
add
fildl
decl
sbb
pop
sub
cmp
mov
cmp
mov
push
inc
std
popa
and
push
mov
dec
mov
dec
mov
add
or
mov
add
or
push
lahf
mov
mov
cmpsb
aad
enter
test
fidivrl
shlb
iret
sub
and
xor
fmuls
int3
in
fstpl
jb
test
mov
pop
push
sub
cmp
out
aam
sbb
mov
mov
sub
inc
outsb
xor
movsb
pop
lea
dec
jle
sub
shrb
call
adc
mov
out
test
cmp
xchg
pop
int
clc
call
sahf
std
and
imul
push
jbe
outsb
popa
lret
sarl
mov
jmp
shlb
sti
sbbb
jbe
ror
int
pop
jl
cmp
lds
and
adc
inc
push
jp
sub
stos
xor
or
daa
inc
jo
inc
pop
aas
adc
or
test
dec
scas
enter
leave
push
sbb
fsubr
lahf
icebp
sbb
ffree
or
jnp
xchg
push
fwait
mov
call
jmp
push
js
add
xchg
shl
push
out
dec
jb
imul
roll
fdiv
lret
and
or
adc
push
add
mov
push
jns
pop
hlt
in
imul
pop
cmp
into
adc
xlat
jp
inc
lods
lret
mov
jne
gs
mov
icebp
xchg
cmc
stc
fcomps
mov
aaa
sub
pop
jle
mov
std
pop
jmp
inc
gs
insl
inc
xor
mov
imul
mov
adc
adc
xchg
sbbb
sbbb
std
xchg
mov
jbe
xchg
lock
lret
xchg
xor
push
popf
popa
leave
mov
pop
fcomps
lret
or
jg
scas
std
push
int
or
fildll
sar
pop
xchg
inc
dec
insb
push
sub
mov
rcrb
rorb
xchg
test
lds
test
mov
inc
xchg
les
xchg
sub
inc
jge
clc
jne
pop
sti
push
cmp
mov
fbstp
imul
das
jecxz
test
inc
arpl
fidivl
dec
insb
push
jnp
outsl
cltd
nop
jae
dec
adc
or
int
andb
mov
xchg
or
icebp
lahf
xchg
popa
outsl
pop
out
and
pop
out
aam
cs
mov
pop
adc
or
scas
cmp
mov
push
xchg
sbb
mov
jno
fadds
adc
sar
lock
jnp
cwtl
fsts
adc
pop
push
ds
push
es
sub
adc
cld
push
pop
lock
repz
popa
shll
enter
push
sbb
int3
xor
imul
xchg
dec
stos
cmp
andl
clc
fwait
pop
mov
xlat
fadds
and
adc
mov
sbb
mov
sub
xorb
popf
sub
test
dec
negl
lret
test
popa
loope
xchg
xchg
inc
jg
pop
ja
mov
stc
sbb
cmp
ljmp
test
adc
add
lds
stos
aas
fwait
mov
daa
xlat
cli
sub
shrl
mov
mov
or
sub
popf
mov
aad
jmp
pop
nop
mov
clc
fcompl
cmpsl
movsb
dec
mov
jbe
dec
push
push
lods
movsl
and
xchg
mov
add
cs
add
imulb
clc
mov
add
out
lds
mov
and
in
lods
and
int
loop
jl
out
adc
fwait
xor
xchg
fcomi
add
and
pop
xchg
int
sbb
fmulp
inc
iret
aam
pop
mov
mov
imul
mov
aas
xchg
xchg
outsl
ss
clc
mov
inc
movsl
cmp
lock
fsubrs
dec
int
fwait
and
cmp
addr16
cmp
mov
mov
es
dec
hlt
xchg
inc
data16
jae
stc
add
cmpb
arpl
fwait
xchg
outsb
mov
cli
repnz
push
jne
xor
out
sahf
or
cmp
insb
push
or
cli
ret
lcall
xchg
loopne
mov
jmp
loop
pop
xchg
repz
add
jb
arpl
add
lahf
xchg
lods
jp
push
lods
adc
loope
mov
xlat
ret
dec
test
fs
and
mov
adc
inc
add
lods
in
ficomps
or
pusha
subb
cmpsb
cmp
xchg
xlat
dec
out
popa
push
jg
pop
xor
sti
int3
outsl
fnstsw
pop
add
xorb
mov
xchg
pusha
xchg
loope
jnp
sbb
lcall
dec
add
sbb
mov
fadds
sbb
inc
shll
jno
cltd
fsubs
incl
inc
pop
mov
sbb
popa
incb
add
call
std
pop
rclb
pushf
addr16
mov
cmc
rorb
stos
aas
addr16
mov
mov
pop
adc
inc
mov
fstpl
leave
push
xor
addr16
push
mov
bound
xchg
push
sbb
int
xchg
adc
out
loop
pop
push
cmp
dec
xchg
mov
enter
pop
inc
mov
sbb
cwtl
pop
cwtl
aaa
cli
dec
cmpb
adc
add
and
xchg
sbb
ja
out
or
sbb
fstl
mov
sub
jns
idivb
sbb
pusha
push
adc
adc
xor
push
dec
daa
insl
cmp
inc
or
mov
mov
and
or
mov
sarb
mov
jge
mov
cltd
rol
adc
push
xlat
mov
icebp
repz
daa
mov
orl
subb
mov
mov
cmc
dec
neg
fcmovbe
mov
jae
popa
sbb
mov
popf
jo
xchg
jns
out
insl
jecxz
mov
mov
leave
mov
xchg
add
das
dec
xchg
cmp
dec
gs
outsl
in
push
pop
push
loope
xchg
mov
jno
int
push
dec
xor
sbb
rolb
cld
in
add
leave
sti
jnp
call
adc
repnz
lock
cmp
filds
cwtl
roll
xor
loopne
mov
mov
push
or
shlb
dec
call
xor
push
jae
loope
mov
sbb
pop
xchg
jmp
cmp
js
bnd
out
cmp
js
jge
pop
popf
loopne
out
mov
cltd
mov
cmp
mov
lret
mov
mov
mov
sbb
decl
ror
or
sahf
xchg
jmp
sub
mov
and
pop
jne
add
cmc
cmp
mov
enter
dec
pop
hlt
addr16
push
xor
cltd
pusha
data16
push
sub
xchg
mov
dec
cld
test
xor
push
mov
pop
out
mov
or
push
cmpb
jl
sti
das
cltd
mov
fucomi
aas
rcl
or
imul
mov
xor
popf
mov
xchg
sbb
xorl
call
repnz
cld
inc
pushf
pop
mov
fsubrs
mov
ds
adc
jp
shr
mov
dec
inc
xchg
push
ja
adc
movsb
mov
mov
cmp
dec
fsub
push
ret
cmp
cld
lahf
jecxz
rolb
mov
cmp
or
mov
jle
imul
sbb
pop
sub
xor
repnz
lahf
xchg
add
loop
out
inc
mov
push
sahf
sbb
aas
add
jo
xchg
arpl
xor
sub
xor
testb
cmp
arpl
mov
rorb
pop
jp
sahf
pop
icebp
cmpsl
fidivs
xchg
outsl
cmc
adc
push
push
lods
sarb
add
std
inc
inc
pushf
add
xor
fisubrs
push
xchg
imul
mov
add
aas
jb
jge,pn
mov
out
stc
jmp
jbe
push
and
add
jns
sahf
repnz
lahf
or
push
rcl
pop
lods
mov
inc
adc
xchg
lds
test
pusha
mov
in
inc
pop
leave
inc
dec
aam
inc
loopne
in
push
dec
subl
test
pop
out
repnz
lds
cmpsb
cli
pop
dec
mov
sahf
in
sarb
es
push
sub
xor
cmpsl
cld
test
cmp
ljmp
in
or
rclb
fsubl
shl
xchg
add
cmp
fmuls
mov
mov
ss
fsubrl
test
negl
mov
jge
jp
xor
lret
adc
nop
and
jecxz
pop
lea
repz
or
stc
dec
dec
lods
fsubl
mov
inc
or
shrl
ret
js
sub
gs
mov
or
in
xchg
jmp
aas
adc
push
int
inc
jle
jg
dec
sub
pushf
sbb
push
pop
inc
ret
in
pusha
sbb
mov
fwait
mov
daa
add
mov
sub
lret
dec
mov
mov
cmp
xor
test
sbb
lcall
jb
sarl
jns
test
imul
xor
inc
cmp
mov
fnstsw
js
lock
popf
pop
push
mov
cmc
fdivs
imul
cmp
mov
xchg
adc
cwtl
mov
js
xchg
out
mov
in
mov
lea
xor
fldt
jle
mov
xor
mov
mov
adc
fnsave
pop
dec
mov
xchg
rorb
pop
ds
push
xor
sub
scas
js
adc
xor
shl
mov
xchg
lds
mov
pop
pusha
push
and
cli
daa
fadd
shrl
jbe
aaa
jmp
insb
mov
push
mov
adc
and
mov
data16
int3
mov
mov
dec
or
cmpl
xchg
jmp
popa
out
mov
pusha
ficoms
out
push
lahf
push
xchg
add
sbb
rolb
jp
add
test
ret
les
adc
fcmovnbe
popa
test
sub
xchg
and
cld
mov
cmpsb
xor
and
push
pop
xchg
imul
aam
in
hlt
pop
add
adc
and
xor
inc
andps
fs
je
test
xchg
jmp
aam
in
hlt
pop
add
adc
and
xor
inc
andps
fs
je
or
out
mov
mov
pop
add
imul
insl
pop
nop
pusha
jecxz
ja
hlt
lahf
les
xor
sti
mov
aad
outsl
inc
push
sbb
or
add
adc
and
xor
inc
imul
fwait
cmp
cwtl
mov
ret
lret
bnd
sbb
or
cmp
sub
pop
inc
dec
push
jnp
imul
orb
jmp
sbb
or
cmp
sub
pop
inc
dec
push
jnp
imul
mov
mov
xchg
ja
jnp
sar
imul
add
stc
xlat
dec
pop
cmpsl
lods
sbb
xchg
dec
dec
push
pop
push
inc
fcomip
ljmp
loop
cmpsl
shlb
repz
adc
xor
dec
cmc
pop
xadd
sbb
in
movsb
push
dec
gs
scas
fmull
fs
inc
addr16
fwait
push
xchg
mov
insl
mov
rcrb
repnz
hlt
in
push
leave
inc
mov
repz
xchg
pop
stos
mov
xchg
mov
adc
pop
or
pushf
scas
cmp
call
pop
xchg
into
xlat
es
scas
ror
cmp
ljmp
and
xor
dec
push
jnp
imul
mov
fcmovnb
lret
sar
loop
mov
add
push
arpl
sbb
push
push
repz
scas
mov
xchg
xchg
nop
lahf
xchg
inc
outsb
dec
jle
push
push
add
pop
jnp
adc
out
ret
nop
cmpsl
mov
cmpsb
insl
inc
and
dec
sbb
push
jnp
imul
mov
fcmovnb
lret
sar
loop
repnz
or
cmp
sub
pop
inc
dec
push
jnp
imul
mov
fcmovnb
lret
sar
loop
repnz
push
cmp
mov
rorl
xor
rorb
mov
dec
sub
xchg
loope
adc
xchg
or
cmc
insl
mov
popa
sbb
jecxz
out
xor
out
stos
dec
div
push
jbe
sub
inc
nop
and
mov
sbb
or
mov
lcall
hlt
xorl
cmp
test
std
addr16
gs
add
sbb
ror
push
inc
mov
or
call
sub
and
xchg
sahf
push
loope
dec
fsts
cmp
or
mov
jl
jbe
mov
mov
cmovs
scas
or
ret
aam
stc
loope
push
js
insl
add
sbb
jae
fidivl
lds
lcall
call
fsubrl
and
imul
cmp
popa
mov
sbb
sub
and
stos
cwtl
lahf
mov
xchg
add
outsb
or
dec
lea
js
inc
sub
xor
add
jecxz
in
lret
aam
mov
xchg
dec
lods
aad
cmp
or
test
pop
mov
inc
pop
mov
xchg
cmp
jae
xor
fsts
and
sbb
test
cmp
ljmp
jno
repnz
cld
pop
fwait
pop
std
push
and
push
cmpsl
hlt
fildl
fcompl
add
scas
mov
jmp
xchg
pop
xchg
inc
loop
aad
sub
or
popl
cmp
sub
and
in
int
jns
in
or
scas
aaa
dec
or
dec
mov
fists
dec
das
xlat
in
or
cmpsl
pusha
in
pop
lods
cwtl
lods
dec
out
pusha
mov
adc
pop
leave
push
mov
xor
out
adc
or
iret
shl
scas
fldt
dec
pop
lret
inc
or
inc
adc
cltd
imul
aas
push
clc
mov
cmp
jae
jae
ficompl
pop
cltd
test
mov
mov
lods
mov
shrb
and
pop
out
cld
pop
sti
mov
mov
sbb
roll
add
mov
cs
aad
mov
push
cmpsl
gs
rcr
cmc
leave
xor
sub
pop
push
jno
rcrl
ss
mov
inc
adc
in
mov
mov
lcall
pop
xor
xchg
es
add
int3
xchg
and
test
test
jae
push
sbb
push
shl
je
bound
sub
cmp
add
push
pop
or
cmpsl
push
ret
mov
mov
push
sub
test
out
out
pop
lret
mov
stc
aaa
xchg
mov
jge
xor
ljmp
jmp
push
test
mull
fiadds
in
cmp
push
es
pop
pop
adc
mov
cmp
mov
or
or
out
add
fs
pushf
pop
leave
jle
repz
dec
aaa
fadd
sti
pop
xchg
aaa
andl
jns
mov
and
xchg
push
xchg
push
lcall
out
cmp
lods
out
data16
lock
pop
sbb
cld
mov
fstl
mov
pop
xchg
nop
das
push
out
xor
push
jb
es
xor
fwait
xchg
ret
fisubrs
cmp
negl
outsb
pop
jbe
adc
pop
mov
outsb
add
pop
mov
add
mov
int
jne
push
out
mov
add
pop
xor
sbb
mov
jnp
pushf
addr16
popa
cs
sbb
cmp
hlt
push
jle
pushf
mov
pusha
fucomip
sbb
subl
jns
push
xorl
jecxz
add
xchg
dec
pop
dec
mov
mov
add
push
repz
lea
out
push
mov
mov
push
loopne
mov
inc
jmp
sub
cmp
ret
jmp
jb
xchg
jno
repz
sbb
xchg
xor
adc
gs
enter
mov
lods
mov
add
sbb
mov
push
out
out
jae
dec
push
sub
leave
lds
gs
or
fdivrs
cmpsl
ljmp
outsb
out
inc
push
xor
out
or
fmull
or
mov
faddl
jl
ret
mov
out
testl
lds
sub
pop
pop
roll
pop
aad
ljmp
mov
push
fistpl
addr16
xchg
dec
aad
mov
mov
movsl
sbb
pop
sbb
mov
jl
mov
pop
movsl
imul
pusha
ret
pop
mov
adc
jl
add
loope
loop
insl
icebp
sub
add
andb
jge
nop
sub
mov
popa
mov
mov
cmp
inc
sti
dec
or
or
cli
xchg
push
dec
lods
hlt
cltd
enter
fldt
ss
fidivl
push
pushf
sub
lcall
sti
or
adc
leave
mov
in
sbb
pop
lds
inc
push
and
add
or
adc
jb
push
incb
cmc
shlb
mov
fwait
lea
pop
jmp
xor
lea
xchg
out
daa
std
call
mov
jo
movsb
add
cmp
mov
mov
stc
and
test
jecxz
movsb
push
inc
insb
lcall
arpl
xchg
or
sub
bound
movsl
ret
sbb
cmp
imul
aas
push
xchg
ss
stos
imul
dec
lcall
lahf
sub
pusha
push
add
ret
xor
fistl
enter
ret
inc
cmpsb
sub
jmp
cmp
push
test
int3
jmp
push
mov
test
ret
xchg
jb
mov
mov
inc
divb
call
mov
loope
das
aam
dec
negl
mov
sub
xchg
xor
sub
mov
dec
cs
or
pop
rcl
lock
push
clc
mov
sub
scas
loop
rol
jbe
mov
jne
mov
rol
sbbb
adc
jno
icebp
mov
ret
xchg
inc
lret
cmp
mov
and
cmpsl
pop
inc
sub
enter
pushf
insl
mov
mov
pop
popf
pop
sub
sti
xchg
mov
sbb
out
insl
xor
xchg
inc
addb
test
repnz
inc
aam
jecxz
mov
fdivrs
inc
lods
mov
adc
sbb
pop
push
xchg
jmp
mov
loope
cmpsl
or
scas
sub
push
daa
enter
dec
or
jb
scas
and
xor
xchg
add
inc
ja
or
mov
shrb
inc
ret
rorl
or
into
into
out
into
notl
push
das
into
add
mov
iret
dec
dec
outsl
xor
lods
mov
xchg
push
cld
dec
push
inc
and
daa
xchg
js
movsb
mov
shr
outsl
adc
and
push
mov
cld
leave
adc
or
stc
int3
sbb
add
mov
insl
bound
xchg
or
sbb
test
dec
repz
dec
subb
mov
insb
rorb
fiadds
ja
add
mov
lea
sub
sahf
cwtl
fst
subb
dec
jge
jl
push
sbb
adc
mov
ret
mov
jne
sahf
jecxz
stc
ds
in
pop
jbe
push
add
jmp
test
ja
mov
xchg
and
ds
mov
loopne
xor
jecxz
aaa
xchg
jcxz
sbb
lock
or
add
fs
je
and
jecxz
jbe
mov
dec
enter
es
add
jecxz
int3
dec
sbb
testb
mov
idivl
jmp
fwait
push
push
xor
mov
outsl
mov
test
imul
jo
sbb
lods
ja,pn
sbb
mov
add
and
shrl
out
test
arpl
pop
push
cmp
clc
inc
dec
test
pop
mov
rolb
scas
jo
add
inc
sub
out
shll
pushf
dec
clc
aas
test
subl
adc
or
addr16
movl
mov
ds
sub
das
dec
mov
mov
pop
jns
sbb
mov
daa
in
ret
mov
xchg
stos
or
lods
mov
loopne
dec
push
sbb
fcomp
ret
inc
ret
jmp
aam
jns
nop
nop
jmp
add
lret
data16
xlat
inc
dec
lret
sti
dec
stos
adc
xchg
fidivrs
add
push
cmp
rcll
mov
loopne
repnz
div
movsb
pop
test
pop
mov
loop
sub
mov
lret
call
sub
into
loopne
mov
xchg
ds
sub
fnstenv
out
out
add
daa
cmpsb
in
ljmp
icebp
ljmp
out
or
jnp
cltd
push
test
push
aad
outsb
add
fldt
int3
rep
ja
cmp
iret
clc
inc
jge
mov
loopne
jb
xor
mov
sub
clc
andb
test
rclb
cmpsl
cli
enter
mov
dec
movsl
xchg
and
push
cmp
jnp
cmpsb
push
sbb
out
fcoms
and
lcall
jo
rcr
scas
clc
push
loopne
icebp
mov
xor
bound
cmp
test
out
inc
outsl
jmp
fstl
push
les
mov
dec
dec
mov
dec
int3
loope
push
inc
lret
jge
ss
mull
xchg
pop
push
pop
xor
sbb
jbe
jnp
fyl2xp1
loope
in
sbb
sbb
fsubp
inc
movsl
sbb
je
and
lea
adc
popf
loop
ss
jp
cmc
cmp
out
jo
ret
mov
push
sbb
cli
mov
js
jnp
test
mov
inc
dec
jp
int
lahf
and
push
fadds
loop
adc
cmc
xchg
fsubl
stos
out
cltd
mov
or
inc
arpl
aam
and
sub
mov
inc
fimuls
jae
lods
sbb
pop
cmp
dec
pop
popf
std
mov
repz
inc
mov
push
pop
das
sbb
aas
push
clc
inc
mov
ss
lahf
mov
hlt
out
test
loopne
and
mov
dec
mov
or
mov
stos
ja
adc
add
sbb
movsb
insl
leave
std
iret
mov
xchg
add
leave
cmpsl
bound
dec
mov
cmp
in
daa
sarl
negb
ljmp
jo
les
mov
xchg
pop
mov
mov
mov
addr16
adc
xor
mov
bswap
jns
subb
das
xchg
scas
icebp
lods
xchg
pop
cmp
scas
loope
ficomps
gs
jno
dec
loope
pushf
fadd
pop
sbb
sti
icebp
xor
pop
push
pop
mov
dec
call
mov
mov
mov
nop
hlt
xchg
scas
in
cmp
pop
mov
lods
mov
ffree
addb
out
aas
cli
inc
or
sbb
mov
jnp
cmp
stc
sbb
es
pop
adc
or
cmp
or
xchg
mov
lret
lock
ja
mov
cmp
in
fs
xor
repz
insl
mov
loop
imul
pop
adcb
xchg
stos
loope
outsl
gs
inc
es
imul
push
push
addb
push
cli
in
scas
dec
pusha
fs
in
addr16
lahf
out
adc
and
ror
jl
int
and
int
ds
adc
or
bound
push
testl
stos
das
add
pop
pop
adc
inc
xor
mov
cli
rcrl
inc
loope
aam
push
xchg
scas
or
hlt
mov
lock
mov
aas
in
mov
mov
sub
lock
addl
popa
lret
cmp
xor
cmc
xor
repz
sub
test
push
sahf
sbb
movsb
adc
and
inc
mov
lcall
clc
rcll
sti
or
xchg
cltd
outsb
xchg
inc
adc
push
sbb
adc
fstps
into
push
mov
xchg
mov
xchg
sbb
push
jb
lret
jmp
sub
das
sahf
jb
adc
sbb
sbb
mov
cmp
xchg
shll
mov
icebp
mov
jno
cld
jae
jb
cli
out
and
lods
testb
inc
pop
sub
sub
xor
add
sub
aad
fidivrs
stos
ret
mov
hlt
in
sbb
mov
mov
mov
push
mov
xor
out
or
and
xor
cmp
push
jne
pop
push
mov
icebp
add
pop
mov
xchg
out
lods
mov
fcoml
ffree
xchg
xor
popf
lret
ljmp
push
push
mov
mov
js
xor
sub
fcomip
adc
xor
movb
test
fisubs
xor
jp
arpl
pop
inc
jp
mov
xchg
jg
andb
fwait
adc
xor
push
lret
lret
test
or
pushf
popf
popl
jbe
add
mov
mov
add
cld
push
lea
jl
pop
add
popf
sub
inc
mov
sbb
pushf
mov
addr16
in
int
sub
push
inc
adc
jg
sti
sbbb
adcl
out
ds
mov
in
and
sub
sub
aas
cmpsl
pop
movl
jg
lds
push
ffree
xor
scas
xchg
push
xorb
fistl
mov
jns
lock
or
cld
inc
repnz
arpl
fbstp
cmpl
cmp
adc
lods
jg
enter
test
pusha
aaa
lcall
test
jne
xor
pusha
cmp
rolb
and
xchg
lods
and
lret
out
pop
aam
ss
test
ret
jno
pusha
cltd
jno
insb
pop
les
testl
rol
popf
clc
je
mov
aaa
aam
push
lret
movsl
icebp
lahf
sub
xor
dec
xchg
jp
rcrl
jl
sub
push
dec
jmp
mov
rorl
or
cmp
cmp
pop
clc
in
fisttpl
xchg
stc
mov
inc
clc
pop
call
mov
sbb
or
cltd
lods
sti
pusha
dec
mov
in
inc
into
iret
icebp
fbstp
push
sbb
ja
mov
mov
das
fs
push
shll
jne
loope
mov
add
pop
iret
aaa
rclb
sub
loop
dec
loop
aas
cmpsl
negb
test
push
lret
pop
in
xchg
jo
ss
stos
jmp
outsl
out
mov
jo
mov
imul
mov
stos
cltd
iret
mov
mov
pop
xchg
xchg
sub
sarb
outsl
sbb
xchg
aaa
insl
nop
mov
inc
adc
mov
mov
adc
cli
xor
push
pop
popa
mov
call
cmp
cltd
aaa
pop
outsl
push
xor
stc
push
js
shll
and
nop
lods
push
pop
fstpt
ss
push
adc
and
lods
jp
jl
int3
push
jmp
inc
ret
mov
aas
jne
ss
and
xor
inc
push
cmp
enter
sahf
and
cs
movsb
adc
lds
out
mov
jae
mov
shlb
add
add
arpl
dec
add
shlb
mov
outsl
movsb
cld
addr16
mov
dec
lcall
mov
fnstcw
lods
subb
jnp
pusha
or
xchg
cmp
leave
or
jp
out
sahf
insl
push
xchg
stos
xchg
lds
clc
repz
in
fcmovb
push
test
imul
add
fidivrs
data16
incl
and
adc
mov
or
cmp
pop
es
mov
popf
push
cli
jp
shl
cmp
inc
es
xchg
in
xor
lahf
subb
xchg
ret
push
stos
leave
mov
jmp
sbb
pop
pop
sbb
cmp
pop
pop
dec
repnz
lret
jae,pt
cmp
and
mov
scas
leave
loope
jno
adcb
js
inc
cmpsl
mov
addr16
in
pushf
gs
popa
mov
mov
addl
dec
or
pop
ret
mov
mov
inc
dec
cmp
mov
lods
jb
inc
cs
sub
fisubl
dec
dec
push
sub
dec
in
in
mov
pop
cmp
enter
adc
and
bound
fldt
repz
fwait
movsb
outsb
nop
ror
jge
mov
lods
pop
jb
hlt
clc
gs
and
mov
pop
or
inc
pop
sbb
and
mov
cmp
cmp
cmp
sbb
lret
jnp
add
fistl
pop
icebp
mov
insb
lods
mov
add
sub
in
mov
mov
mov
stos
jo
jo
sub
sub
call
enter
or
in
push
mov
dec
ret
xor
add
jno
loope
cmp
mov
sbb
sti
xor
lods
dec
int
fcomps
jns
mov
out
fidivrl
lcall
push
les
test
push
cld
jge
fldt
or
insb
arpl
cs
fistl
jb
stos
push
in
jle
aaa
push
xchg
in
push
fwait
insb
out
sub
shlb
cmpsb
cs
and
nopl
jbe
in
pop
add
lock
popa
mov
add
jle
out
mov
lods
xchg
xchg
idivb
mov
mov
shlb
fwait
lcall
popa
insb
mov
jmp
add
push
mov
fildll
mov
insb
xor
test
rcl
xchg
mov
shll
call
mov
pop
fmull
mov
push
icebp
mov
push
xor
dec
jbe
mov
xor
repz
adc
mov
ljmp
mov
in
inc
pop
or
dec
inc
and
aam
sub
outsb
inc
stos
xor
sub
sbb
les
pop
cmp
pop
orb
and
fildl
sub
das
inc
push
xchg
cld
mov
jg
pop
js
xchg
jmp
jmp
add
out
cmpsl
xor
sbb
pop
jle
lret
repnz
cmpsl
inc
arpl
adc
mov
dec
inc
add
gs
test
dec
aad
add
and
fisttpl
enter
mov
arpl
jne
and
sub
ss
xchg
pop
stos
xchg
xor
orb
jge
push
scas
push
pop
stos
fisubl
or
jno
ja
mul
add
enter
divb
xlat
mov
xchg
stos
in
in
xor
adc
xchg
sbb
adc
in
sarb
lock
inc
pop
daa
and
dec
push
dec
xlat
adc
sbb
push
movsb
setnp
mov
xor
mov
cmp
xchg
lods
jb
xchg
call
mov
jl
fcompl
and
xchg
int3
fwait
cmpsl
aas
mov
outsb
inc
loopne
roll
test
jp
stos
inc
push
sub
lret
mov
test
lock
out
daa
pusha
fsubr
aaa
cmp
and
lods
adc
fmull
into
xchg
inc
sub
add
adc
dec
int3
cmp
arpl
sbbb
cmpsb
mov
sbb
stos
jle
push
add
aam
inc
fwait
mov
clc
out
add
xor
sbb
insb
xchg
and
dec
fdivl
adc
push
sbb
push
notb
inc
loopne
push
rclb
outsl
fs
inc
or
cld
adc
aam
dec
jne
adc
mov
xor
imul
pop
pusha
pop
xor
adc
dec
sub
dec
ret
jb
lret
sbb
or
xor
int3
jge
adc
popf
push
std
pushf
cmp
add
pop
mov
sub
or
adcb
lea
cmc
jae
and
dec
inc
jo
fsubl
pop
jle
aas
cs
in
pop
cmc
in
add
addr16
cwtl
mov
aad
jbe
or
mov
push
xor
xchg
inc
xchg
test
leave
popf
mov
xor
push
fwait
adc
mov
sbb
jge
dec
icebp
add
xor
arpl
pop
lahf
xchg
ret
gs
scas
sbb
xchg
mov
popl
cmp
jbe
inc
xor
aaa
rep
jnp
cmp
inc
or
das
pop
jno
imul
mov
je
sub
inc
aas
cmp
adc
scas
xor
int3
mov
pop
adc
es
xchg
jecxz
popf
jmp
mov
idivl
into
lea
jne
cmpl
pop
xchg
jae
mov
mov
jl
xor
dec
loopne
xor
inc
inc
jl
jo
loop
cld
hlt
sbb
cmpsl
aaa
mov
adc
and
xor
dec
push
jnp
imul
mov
fcmovnb
lret
sar
loop
repnz
or
cmp
sub
pop
inc
dec
push
jnp
imul
mov
fcmovnb
lret
sar
loop
repnz
or
cmp
sub
pop
inc
dec
push
jnp
imul
mov
fcmovnb
lret
sar
loop
repnz
or
cmp
sub
pop
inc
dec
push
jnp
imul
mov
inc
sub
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ffreep
sbb
mov
mov
pop
add
add
pop
add
add
add
add
add
add
add
add
add
dec
add
add
add
mov
add
pop
add
filds
dec
add
add
or
cmpsl
add
dec
add
add
add
add
add
add
add
add
add
add
add
and
mov
sub
jl
stos
add
add
out
add
add
or
mov
add
add
add
add
add
add
das
add
add
add
add
xchg
add
add
add
add
lods
add
add
add
out
push
add
add
sbb
pop
add
sti
add
add
jle
xor
or
pop
add
fildl
add
sub
out
add
add
add
add
add
add
add
inc
add
jecxz
dec
add
cmp
mov
addl
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
jecxz
stos
add
xor
dec
add
add
add
cld
add
add
add
add
add
das
add
add
add
add
add
add
add
add
fiadds
stos
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
out
mov
sbb
add
sub
dec
add
add
add
add
filds
fldl
add
add
add
add
fildl
add
add
add
add
adc
cmp
xor
add
add
add
pop
add
enter
add
jmp
add
add
add
add
add
imul
add
add
add
add
add
filds
cmp
test
add
add
sahf
add
add
fildl
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
data16
and
add
cmpsl
add
add
in
add
add
dec
add
add
add
add
add
add
add
add
add
sub
bound
sbb
add
add
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
pop
add
mov
add
add
xchg
add
add
add
xchg
add
add
add
add
add
add
cmp
add
add
add
pop
add
int
xchg
add
add
add
add
add
add
add
outsb
add
mov
movsb
add
inc
add
add
add
add
add
add
xlat
shrb
pop
push
cmp
dec
jp
test
and
cltd
inc
jp
xor
pop
inc
xchg
imul
into
outsl
xchg
dec
jecxz
out
loop
add
movsl
and
ja
lea
xchg
test
adc
xchg
es
popf
xchg
pop
mov
add
cmpb
sub
mov
jmp
lcall
add
xor
sub
sahf
cmp
xchg
out
or
xor
xor
jne
mov
std
add
popa
fcoms
inc
or
in
movsl
testl
sar
mov
gs
cmc
mov
popl
int3
xor
dec
dec
dec
inc
arpl
jo
inc
sub
xor
mov
lret
imul
pop
adc
outsl
ret
out
test
push
sbb
mov
xor
lcall
fdivs
mov
push
jns
or
adc
mov
js
jge
jp
lds
rcrl
and
jl
mov
fisubrs
das
js
out
lods
les
pop
in
add
test
in
icebp
jg
fimull
shlb
or
sub
or
sbb
mov
pop
imul
lods
std
rclb
sarl
shll
mov
fmull
adcb
xchg
stc
add
popf
mov
ret
in
jne
mov
jecxz
pusha
and
rclb
insl
jne
sbb
push
das
or
out
inc
test
jno
sub
das
clc
mov
fdivs
mov
inc
dec
push
lcall
jl
mov
mov
ja
xchg
shll
pop
fwait
mov
out
mov
loope
xchg
inc
or
out
js
call
jne
jp
iret
stc
clc
xor
pop
mov
mov
sub
pop
xchg
shlb
jecxz
inc
ds
fwait
cmp
sbb
das
pause
xchg
out
adc
movsb
outsl
fsts
js
pop
pop
insb
lea
mov
loopne
mov
aaa
std
sbb
mov
insl
inc
int3
aaa
rep
add
dec
sbb
and
fldenv
jg
push
jno
sarl
lret
inc
das
clc
outsb
icebp
mov
or
jbe
bsr
xor
data16
and
dec
inc
xor
roll
sbb
sbb
xchg
pop
arpl
outsb
xor
in
sub
fists
test
lods
and
jp
jbe
mulb
je
xlat
lret
imul
sub
lods
adc
stos
add
adc
lahf
push
sarb
enter
and
push
cld
scas
adc
nop
aas
in
mov
pop
push
cwtl
cmp
in
subb
xchg
stc
filds
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
