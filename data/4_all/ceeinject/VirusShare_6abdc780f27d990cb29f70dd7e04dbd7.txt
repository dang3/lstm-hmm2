call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
aad
cmp
or
sbb
add
xchg
mov
lcall
out
neg
pop
sub
cmp
or
sbb
push
jp
dec
ja
xchg
mov
pop
mov
sub
lret
pop
xor
cmp
adc
add
push
bound
ja
xchg
or
mov
stos
mov
ficompl
jae
daa
jle
xchg
mov
fwait
out
pop
xor
mov
addl
mov
repz
enter
push
test
sub
push
pop
lcall
mov
jp
push
aad
mov
int3
cmp
jp
sub
cmpsl
ss
xchg
cli
stos
cli
xorb
pop
jp
cmp
aaa
sub
inc
mov
or
adc
push
cmp
ret
adc
fcmovnb
cmc
enter
push
xchg
sbb
pop
outsl
daa
sarl
subb
mov
mulb
in
mov
fwait
ljmp
scas
pop
lahf
lahf
mov
xor
pop
sub
inc
push
jp
push
ja
xchg
mov
repnz
in
out
idivl
dec
or
inc
cmp
adc
es
xchg
bnd
iret
cmc
movb
mov
push
jb
inc
jp
pop
inc
sbb
dec
pop
cs
cwtl
mov
mov
dec
imul
push
push
jp
dec
ja
xchg
mov
ljmp
pop
sub
cmp
or
sbb
push
jp
dec
ja
xchg
mov
ljmp
pop
sub
mov
mov
testb
movsb
add
shll
out
dec
mov
pop
mov
mov
add
or
insl
and
fsubr
mov
jmp
or
push
xlat
fstpl
xlat
int
lcall
xchg
inc
mov
jmp
push
sti
rcrb
icebp
inc
std
inc
inc
sti
mov
int3
movl
mov
imul
fstpl
lock
sbb
or
loope
imul
cmp
dec
cmpl
loop
sub
arpl
and
stos
movsb
movsb
out
pop
loope
or
cli
xchg
adc
dec
inc
outsb
push
and
cs
push
or
rorb
xchg
cld
add
data16
mov
sbb
or
call
push
dec
sarb
sub
mov
and
cld
inc
outsl
xor
pop
es
out
jle
mov
sub
dec
cmpsl
jmp
fsubl
inc
add
or
mov
mov
add
je
inc
xchg
loop
xchg
mov
cmc
add
inc
pop
dec
xor
pop
push
add
ss
fcmovne
push
inc
int3
and
lock
pop
inc
flds
push
xchg
adc
data16
loop
jnp
push
lods
xchg
jo
daa
push
ljmp
popa
ds
das
pop
movsb
jbe
imul
lret
jns
fisubl
sahf
mov
movsl
mov
push
psrlq
cs
inc
xor
dec
xchg
sub
mov
jns
popfw
fsts
xchg
push
adc
int3
sbb
push
push
xchg
test
fistpl
sti
sbb
mov
stos
inc
ret
dec
cmp
addr16
and
cltd
push
sub
lods
xor
test
mov
lret
sub
dec
push
int3
aad
jns
addb
push
pop
pop
dec
inc
out
ljmp
xor
xchg
xorl
cmpsb
pop
jmp
pop
nop
jmp
ljmp
sbb
out
mov
in
and
cmpl
mov
jns
mov
adc
lods
xlat
xlat
sub
aad
repnz
jecxz
sahf
sub
xor
movsb
aaa
sbb
cwtl
cmp
dec
hlt
push
mov
mov
xchg
mov
mov
pop
inc
mov
inc
pop
dec
out
dec
ja
sbb
mov
leave
call
cltd
jae
leave
sahf
or
mov
xchg
fs
inc
xlat
shll
lds
cwtl
int3
fisubl
test
add
je
xor
sub
xchg
lock
test
xchg
adc
sbb
divl
inc
mov
sti
mov
mov
xor
pop
push
in
sub
out
xchg
jbe
test
mov
gs
out
or
inc
fwait
pusha
subl
mov
fistpl
mov
fbstp
pop
xor
pop
lds
pushf
lods
les
pop
subb
adc
jge
test
cli
testb
or
jbe
xor
arpl
les
pop
jne
push
add
lret
shll
scas
nop
mov
mov
add
das
adc
fs
pop
out
cmp
push
mov
andb
loope
out
cmp
xor
movsb
lret
or
rcrb
jnp
jbe
lock
enter
imul
mov
push
inc
sbb
std
cwtl
xchg
imul
sub
dec
and
lcall
mov
inc
mov
outsb
mov
test
pushw
and
jne
cmpsl
push
fdivrl
sar
out
mov
or
xor
mov
pop
and
push
int3
sub
cli
adcb
daa
aam
es
fstps
ja
mov
add
push
sbb
inc
mov
ret
fbstp
jg
cmpsl
mov
popf
adc
cmp
or
inc
jo
lret
xchg
xchg
movzbl
out
push
inc
or
push
push
push
mov
leave
mov
inc
jl
mov
je
and
loope
xchg
dec
loop
aam
cmp
mov
sub
in
pop
dec
push
lahf
pop
rcrl
pop
and
jmp
and
call
and
movb
fwait
mov
outsl
dec
xchg
and
dec
enter
loope
add
test
jl
adc
test
testb
jecxz
mov
push
enter
jns
push
divb
sar
imul
cmp
loop
in
sbb
movsl
sub
fdivrs
push
jne
cmp
mov
cmp
xorb
mov
push
dec
insb
sub
les
repnz
gs
sbb
push
out
or
inc
ss
lcall
icebp
push
and
jo
inc
lds
push
jmp
ds
stc
js
push
or
sbbl
cmc
sti
pop
sub
mov
push
inc
or
test
lcall
mov
cld
and
fiadds
sarl
and
pop
adc
jge
fldcw
into
outsl
das
pop
jnp
fwait
or
or
xchg
testb
add
sub
ror
jle
testb
add
push
dec
xor
jmp
bound
cmpsl
into
add
jp
xor
add
pop
in
rclb
mov
xchg
mov
in
pop
push
fiadds
and
mulb
push
and
and
or
push
sbb
xchg
mov
mov
push
pop
jecxz
add
xchg
addr16
call
push
gs
std
loopne
loopne
mov
sbb
cld
mov
out
imul
into
lock
or
lods
nop
faddl
shrd
jle
es
iret
call
iret
fdivl
sub
jne
mov
call
mov
scas
sbb
out
ljmp
and
mov
jge
jnp
fisttps
cmpsl
pop
add
xchg
push
cmp
icebp
dec
and
pop
jecxz
aas
sub
add
outsb
inc
das
hlt
inc
dec
clc
jne
inc
js
repnz
loop
sbb
mov
adc
sub
mov
adc
sti
lahf
mov
mov
push
sbbl
mov
pop
and
aaa
stos
testl
bnd
outsl
fucomip
push
iret
sti
popa
push
mov
push
jp
mov
outsl
clc
xchg
sar
mov
xor
inc
sarb
xor
or
inc
mov
or
movsb
inc
in
in
or
fsub
pop
push
ret
aam
cmp
enter
mov
mov
fwait
mov
je
and
jno
mov
mov
ret
pop
fidivrl
add
lea
mov
arpl
shr
cli
lods
mov
test
pop
fbstp
mov
pop
mov
jae
push
sahf
dec
fwait
stos
aaa
std
xlat
cmp
aas
sub
jl
pop
dec
insb
push
inc
int
push
stos
jo
lods
imul
add
shll
pop
sbb
pop
icebp
and
ret
xor
xchg
dec
movsb
or
cli
fsubl
sahf
xor
push
out
pop
daa
add
or
movb
mov
and
pop
cmp
adc
dec
loope
cmp
and
jg
dec
pop
jl
jb
add
lods
repz
hlt
add
je
or
mov
fildll
imul
jl
fstpt
imul
lods
insb
repnz
or
pop
subl
std
cmpsl
xchg
cli
dec
clc
mov
hlt
out
xchg
mov
mov
sub
or
jns
iret
jne
xchg
pushl
cmp
cmpsl
jecxz
dec
fisttpl
pmulhw
jge
inc
cld
jp
cmp
dec
jecxz
push
jecxz
sbb
sbb
xor
movsl
popa
into
mov
adc
or
cltd
mov
mov
mov
aam
mov
and
fldenv
mov
mull
mov
mov
and
aas
shll
xchg
push
inc
data16
sbb
inc
pop
dec
mov
je
adc
cli
je
ljmp
addr16
test
inc
push
daa
cmp
mov
dec
stc
or
cld
push
xlat
jnp
jg
dec
dec
aaa
mov
sahf
adc
cmp
hlt
enter
and
loope
je
lea
ret
aam
loop
mov
push
fldt
inc
iret
cmp
add
repz
sbb
lods
cwtl
mov
jbe
std
jo
xorb
dec
or
xor
xchg
test
ljmp
out
dec
ljmp
mov
and
add
dec
pop
clc
xchg
js
jns
mov
add
testb
dec
push
fwait
outsb
mov
dec
rorl
fsubrs
push
cmpsb
mov
and
inc
and
and
fisttps
pushf
lret
add
movsb
xor
aam
ret
inc
jecxz
pop
aad
dec
mov
scas
insb
xor
jne
dec
data16
out
mov
jg
in
or
sub
xchg
out
pop
mov
cmp
cmc
stos
in
lret
arpl
loopne
mov
push
mov
outsl
ljmp
xchg
xor
ja
aam
ja
push
inc
nop
xchg
repnz
xor
push
clc
add
enter
dec
inc
mov
cltd
fs
dec
loope
mov
stc
es
sbb
push
pop
jno
imul
movsb
or
ret
cs
xor
pop
mov
or
lods
xchg
movsb
sbb
aaa
in
fimuls
out
fcomi
fwait
dec
and
or
clc
jl
pop
test
mov
dec
dec
stc
jnp
jb
add
mov
call
push
pop
jne
test
mov
es
cltd
pushf
lds
out
popa
jne
cwtl
sub
test
adcl
test
xchg
and
std
cmp
xlat
push
rorb
jne
mov
lret
fstl
adc
cmp
adc
lahf
add
hlt
mov
fisubl
sbb
fcmovnb
pop
sub
add
out
in
movsb
sub
xchg
xchg
test
adcb
outsb
lret
pop
mov
fs
mov
or
xchg
push
inc
int
cmp
xchg
es
inc
cmovae
push
sbb
divb
jl
add
ja
sub
xchg
jle
scas
jle
in
in
push
jmp
adc
nop
mov
fiadds
je
repnz
jmp
sti
xchg
popa
out
bound
cmp
les
cli
dec
push
cmp
mov
lret
dec
fincstp
out
and
ja
dec
push
addr16
inc
je
or
jbe
jp
xchg
jne
filds
pop
or
fsubl
inc
and
push
test
test
rcll
push
push
aad
int
nop
ss
aaa
adc
and
mov
lret
jb
imul
jb
idivb
out
inc
cmp
or
ljmp
popa
xchg
sbb
and
dec
ja
clc
cmp
add
aas
mov
mov
lcall
addr16
or
pop
xchg
int
fcompl
cmpsl
in
sbb
subb
lahf
mov
imul
ljmp
pop
fsts
loop
loopne
and
and
sub
or
insl
mov
ljmp
xchg
rorl
push
xchg
cwtl
and
fisubs
pop
fcomps
imul
adc
into
mov
mov
push
cmc
add
pop
popf
or
push
sub
decl
xor
inc
sub
cmp
add
add
pop
ds
mov
cli
push
pop
pop
xchg
sbb
and
pushf
ret
jl
adc
adc
mov
movsb
cmc
loopne
cmc
or
or
pop
pop
es
pop
mov
popf
pop
leave
fcoml
xchg
in
inc
mov
test
cmpsl
lods
xor
jl
adc
cs
nop
sub
enter
mov
lret
bound
test
lds
ud0
xor
mov
jbe
jmp
repnz
or
xchg
fidivs
push
xor
sub
push
pushf
xchg
cmp
cmp
test
adc
jg
dec
mov
aam
xchg
mov
nop
cmp
add
dec
and
dec
dec
std
dec
xchg
push
repnz
outsl
mov
jmp
sub
pop
into
mov
mov
fimull
xchg
and
pop
in
testl
test
lret
addr16
mov
fdivs
inc
cld
in
inc
lods
out
popf
rcll
xchg
std
jno
cmp
adc
pop
xchg
cmp
xchg
fcompl
lods
sub
mov
inc
adc
or
adc
call
or
lret
xor
das
push
imul
lret
dec
mov
mov
mov
push
in
outsl
mov
ficoml
add
mov
imul
cmpsl
pop
mov
xlat
fdivrl
cmp
js
cmp
and
adcb
ljmp
ds
add
iret
in
xchg
fs
gs
outsb
mov
or
scas
aam
pop
fsubrp
enter
inc
stc
push
pop
xor
mov
dec
cmpsb
jns
pushf
dec
jmp
ret
cmp
aaa
ds
int
call
push
call
fsubs
push
jl
mov
testl
scas
push
push
mov
fwait
mov
push
cli
aad
sub
or
sub
mov
into
jbe
dec
push
shll
add
cmpsb
mov
arpl
subl
sub
notl
fidivrs
and
cmpl
mov
or
lret
mov
lods
repz
xlat
imul
push
pop
jl
jb
sti
adc
daa
xor
push
jmp
xor
ficoml
arpl
in
orl
fistl
pop
mov
push
lret
cmp
push
lcall
mov
sbb
faddl
out
jbe
inc
xlat
add
adc
add
push
mov
pop
sub
cld
dec
mov
sub
jg
mov
add
rorl
xchg
cmpsl
adc
xchg
adc
mov
xchg
inc
loop
arpl
mov
inc
aad
nop
push
xchg
mov
mov
scas
stc
pop
mov
int
sub
std
frstor
pop
pop
leave
push
pusha
pop
cmp
jmp
mov
or
or
push
cli
jbe
lret
test
loopne
rolb
js
ficompl
addr16
out
add
into
mov
dec
fwait
dec
cmp
mov
mov
jno
sahf
xor
jbe
pusha
dec
popa
shlb
jecxz
je
mov
icebp
shr
mov
shlb
pop
orl
xor
std
arpl
js
pushf
jle
in
callw
fistl
push
loopne
cmp
inc
cmp
jle
stc
cwtl
test
xor
cwtl
sahf
dec
sub
ds
iret
nop
mov
sub
mov
inc
add
inc
call
inc
lcall
cmp
sub
outsl
testb
jne
sbbb
or
xor
test
sti
inc
jle
rcr
movsl
dec
into
rcr
rcl
sbb
pop
mov
insl
and
jp
imul
roll
test
jp
jno
in
in
mov
in
push
adc
xorb
or
and
push
dec
mov
fcoms
hlt
inc
pop
add
lods
sbb
jb
inc
stc
jo
mov
shrl
pusha
mov
in
imul
lods
fstl
add
dec
xchg
xor
movsl
pusha
imul
or
clc
sarl
loopne
int3
sub
cmp
jmp
lret
ljmp
xchg
mov
fwait
push
pop
adc
jae
addr16
cwtl
movsl
push
in
mull
test
or
adc
call
loope
lret
outsl
push
adc
inc
fcmovnu
jmp
std
jne
cmp
outsl
lahf
mov
or
jns
repz
je
sar
cltd
mov
xor
push
cmp
aaa
push
neg
shrl
negw
jns
jae
test
and
adc
jns
jns
out
mov
test
push
lods
jp
cs
decb
mov
std
stos
adc
insb
je
cmp
fisttpl
cmpl
popa
dec
inc
jno
pop
adc
stc
xor
lret
shr
js
test
into
aaa
sbb
aaa
cmc
jns
or
negl
icebp
aad
out
repnz
lcall
mov
and
jmp
dec
pop
or
sbb
mov
and
ret
ljmp
lea
daa
pushf
xchg
inc
jle
xchg
adc
cmp
dec
dec
mov
xchg
js
xchg
cmpsl
scas
orb
cltd
sbb
ret
scas
stos
pop
aad
and
ja
inc
sbb
stc
mov
outsl
bound
sbb
mov
lret
mov
lods
out
pop
sbb
or
and
push
or
pop
ficompl
inc
daa
out
mov
mov
in
or
js
pop
insl
cmp
popa
fsts
jl
fidivl
jb
mov
mov
mov
pop
cwtl
loopne
imul
inc
rorb
aam
daa
ja
sub
adc
mov
pop
aad
ljmp
cld
ds
aad
or
imul
lods
cmc
pushf
xor
mov
jb
enter
leave
mov
jg
push
jne
push
adc
mov
fs
mov
in
ret
into
iret
and
loope
lcall
pusha
lods
jmp
xlat
loop
xor
popa
je
imul
sbb
add
mov
jl
add
inc
push
add
sbb
ficoml
stos
ss
xchg
rcl
movsl
sub
mov
scas
movsl
repz
inc
xor
in
mov
adc
leave
inc
test
adc
push
fmuls
negb
aas
leave
pop
icebp
dec
jp
xor
sarb
popa
mov
out
cld
push
inc
repz
call
push
sbb
aad
mov
push
xor
inc
or
xchg
or
jnp
shl
xor
xor
in
pop
stc
sbb
jno
add
push
push
pop
iret
xchg
add
scas
loop
sub
xchg
fnstcw
pop
dec
adc
xor
shl
jne
add
or
sub
xchg
sub
int
adc
mov
gs
sahf
push
adc
dec
or
pop
pop
pop
add
xchg
ds
adc
xor
andl
in
mov
lea
pop
or
and
lcall
testb
xchg
ret
add
sbb
hlt
adc
rcrl
cltd
arpl
lret
or
cmp
cltd
sbb
push
out
adc
push
insb
std
clc
imul
nop
dec
xlat
add
out
out
cs
jge
clc
mov
clc
pop
bound
dec
xchg
pop
push
cmp
mov
mov
test
ja
adc
and
pop
cmp
out
out
cmc
imul
lret
and
pushw
pop
sbb
cmc
fs
out
ficomps
ds
fidivrl
jnp
xchg
scas
pusha
not
or
loope
push
dec
sbb
std
push
movaps
mov
sbb
cmpsl
dec
push
scas
lea
mov
push
mov
das
sub
aaa
out
mov
adc
push
sub
imul
out
adc
dec
testl
pop
cmp
ret
pop
cmpsb
and
nop
push
sub
inc
aas
cld
inc
int
sub
iret
out
sub
aaa
dec
or
add
les
ds
inc
and
lea
xor
adc
addr16
mov
repnz
sti
movsl
hlt
out
xchg
mov
addl
movsb
dec
pop
stc
sbb
stos
mov
mov
xchg
sbb
aas
lods
push
xchg
inc
popa
iret
into
dec
lcall
subl
test
movsl
icebp
mov
push
pushf
in
inc
stc
idivl
push
add
fld
mov
and
sbb
xor
cmpsb
out
push
cmp
jb
pop
cmpsl
pusha
jge
mov
fsubl
mov
cltd
xor
into
rcrb
adc
fists
mov
sti
sbb
dec
and
and
mov
sub
ret
mov
mov
xchg
add
adc
jne
and
pop
xchg
jno
xchg
inc
repnz
push
adc
lret
popf
inc
sub
bswap
fidivrs
mov
mov
into
mulb
sarl
mov
std
xor
dec
repnz
xchg
xchg
xlat
rolb
cmp
pushf
pop
lahf
xor
push
repz
cmp
ds
popf
loop
enter
loopne
adc
lcall
shll
dec
js
test
clc
mov
jb
pop
sbb
into
std
arpl
mov
out
pop
scas
jp
or
xchg
add
and
adc
sbb
xchg
daa
or
fidivrl
es
sbb
push
jp
dec
ja
xchg
mov
ljmp
pop
sub
cmp
or
sbb
push
jp
dec
ja
xchg
mov
ljmp
pop
sub
sbb
push
jp
dec
negl
stos
xchg
mov
ljmp
pop
sub
cmp
or
sbb
push
jp
dec
ja
xchg
mov
mov
cmpsl
add
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
leave
push
fsts
jmp
inc
jbe
or
imul
cmp
leave
push
fsts
jmp
inc
cltd
push
test
xchg
imul
cmp
leave
push
fsts
jmp
inc
cltd
push
test
xchg
sbb
sbb
or
push
cmpl
cld
into
mov
addl
xchg
mov
and
dec
add
mov
fistl
push
cld
cmc
xchg
aam
xchg
pop
xchg
jg
push
xor
icebp
fmull
dec
cwtl
arpl
dec
xchg
jns
cld
dec
or
xchg
ljmp
incb
sub
pusha
loope
push
lock
mov
imul
xchg
mov
lcall
cmp
mov
jbe
jns
and
repnz
xchg
cltd
mov
push
cmc
pop
and
rcrl
adc
or
xchg
cltd
rcll
dec
in
xlat
dec
xchg
out
or
push
fsts
jmp
inc
cltd
push
test
xchg
imul
cmp
scas
addr16
and
add
sbb
cmp
mov
xchg
dec
xchg
dec
xchg
mov
outsb
mov
adc
xor
pop
cmp
ds
sarl
mov
push
mov
scas
inc
pushf
dec
int3
je
push
test
xchg
imul
cmp
leave
push
fsts
jmp
inc
cltd
push
test
xchg
imul
cmp
leave
push
mov
icebp
pop
mov
aad
xor
xchg
cli
xchg
mov
and
mov
fdivrs
cmc
cmp
dec
jns
fidivl
mov
adc
sbb
sahf
inc
dec
push
in
mov
inc
jns
jmp
sub
out
dec
inc
leave
xor
sbb
mov
dec
jmp
fldcw
pop
jb
push
div
add
or
xchg
mov
mov
fsin
daa
lea
stos
and
xchg
outsl
or
push
xchg
adc
dec
push
fwait
xchg
xchg
arpl
popl
lock
subl
popa
ljmp
mov
fwait
scas
das
push
xor
dec
clc
push
pop
jmp
loope
sbb
outsb
loopne
andl
arpl
dec
adc
cmp
sub
sub
cmp
pop
lea
inc
shl
xchg
push
lods
adc
xor
mov
repnz
hlt
stc
pop
testl
jbe
xchg
cmp
out
or
cli
lds
shll
xchg
aaa
popf
movsb
cmp
cmp
test
and
loope
idivb
repnz
cmc
dec
sbb
in
lock
cli
jbe
test
add
fs
clc
xor
fidivrs
xchg
ljmp
xchg
mov
inc
mov
jecxz
mov
add
mov
mov
jge
out
add
es
push
orl
dec
pusha
push
mov
inc
outsb
adc
inc
js
shl
leave
and
addr16
out
mov
push
mov
in
sbbb
test
pushf
stos
and
dec
movl
insb
dec
xchg
test
insl
in
lret
aaa
push
push
sub
stos
xor
inc
mull
mov
inc
and
sub
loopne
add
inc
andl
fsubrp
cmpsb
fs
and
rol
mov
fisttpl
dec
sti
xchg
rorl
fsubs
add
xorb
push
add
aam
aam
push
pop
adc
cmp
std
sbb
lods
mov
xchg
lret
jnp
mov
inc
xchg
adc
mov
incb
pusha
out
je
mov
aas
xchg
xchg
stos
sub
cmp
into
sub
shrl
push
mov
sub
xchg
aaa
bound
inc
xchg
and
int
jns
outsb
rcrl
push
mov
ret
jge
in
movsl
iret
cmp
pop
or
idivl
ret
cmp
xchg
inc
xchg
adc
arpl
and
or
fists
jg
lret
xchg
mov
mov
and
jl
xchg
mov
xchg
insl
cld
add
test
testb
cmp
int
mov
fmull
pop
fucomi
stos
lock
xor
repnz
jge
xlat
sbbl
cld
in
xchg
shrb
mov
inc
iret
sbb
jge
movsb
lea
xchg
jno
mov
js
fidivrl
test
sbb
jg
inc
shlb
hlt
mov
inc
dec
lods
lcall
sarb
adc
int
or
hlt
or
pusha
outsl
mov
test
mov
lcall
repnz
sbb
jl
inc
leave
notb
xchg
in
adc
adc
jg
or
pushf
bound
ja
jecxz
jns
xchg
cmp
xchg
sub
cmpsl
mov
jl
mov
adc
sub
and
les
cmp
adc
addr16
push
sub
movsl
lahf
or
out
lcall
sub
movsb
cld
imul
add
dec
movsl
xorb
das
push
xor
adc
test
jle
mov
sub
dec
push
rolb
mov
pop
stos
mov
int
je
cs
push
ror
cmp
xor
cmp
add
and
cmc
std
fmulp
outsl
sbb
sahf
mov
jge
xchg
ret
push
ret
jno
adc
sub
rorb
aam
push
lcall
cwtl
das
push
sub
add
push
outsb
mov
push
push
mov
ret
or
mov
cmp
mov
cltd
sub
rolb
jg
loope
adc
loopne
inc
inc
mov
mov
push
sub
xchg
loopne
ja
add
push
jp
adc
lret
xchg
mov
pop
lock
fucomp
cli
dec
fbld
jae
sub
fcomi
in
mov
cmp
mov
ret
cmpsl
add
mov
mov
inc
mov
adc
inc
lret
pushf
and
and
pop
dec
and
cs
lret
out
add
mov
cmp
and
leave
cwtl
andl
mov
xor
add
mov
les
push
adc
in
pop
aad
in
push
je
repz
xor
sbb
mov
cltd
xchg
cmp
andb
inc
jo
cwtl
jmp
and
arpl
inc
les
cli
inc
push
stos
add
adc
cmp
dec
sbb
xchg
push
filds
cmpsb
pop
call
jnp
pop
mov
or
in
cltd
icebp
sbb
adc
aam
lods
or
mov
cli
icebp
sbb
or
push
cmp
jbe
lea
jg
fcmovne
fwait
jns
dec
inc
cmp
imul
imul
add
jp
sub
out
xchg
enter
lahf
imul
mov
mov
out
leave
or
dec
pusha
lret
stos
andb
ljmp
lds
mov
fwait
dec
push
cmpxchg
ud1
sub
add
dec
mov
out
jb
int3
jl
push
ja
mov
cmp
add
and
inc
mov
incl
lods
in
lds
into
xor
xor
mov
je
mov
inc
sbb
call
jb
lods
and
loope
pop
sub
int3
addr16
addr16
stos
adc
push
mov
sub
pop
aaa
jo
imul
test
mov
js
xor
fwait
out
xor
lds
in
test
xor
stmxcsr
and
and
dec
pop
xchg
cmp
jmp
loope
clc
mov
faddp
or
bound
cwtl
call
mov
sub
pop
test
adc
cmp
add
mov
out
sub
adc
test
xor
pop
sbb
cld
aas
repz
push
pushf
fstps
mov
daa
inc
push
push
popf
pop
jmp
jl
push
repz
fwait
push
lds
mov
mov
cmpl
scas
sbbb
mov
jg
hlt
adc
int3
and
test
jne
jmp
shr
xchg
inc
loop
pusha
nop
in
cmp
mov
dec
cmpsl
cmp
sbb
icebp
ret
or
sbb
lock
adc
and
jle
dec
mov
das
mov
std
lahf
sti
ss
dec
movsb
jbe
sbb
std
fdivrl
daa
cltd
cltd
testb
in
cmp
das
in
icebp
hlt
aam
dec
stos
mov
mov
xchg
cmp
testb
inc
arpl
sub
faddl
inc
jae
jo
xchg
dec
adc
pop
push
shrl
jmp
pop
mov
repnz
dec
insb
mov
jg
xlat
sub
mov
into
int3
xchg
shr
mov
std
insl
test
daa
dec
xchg
dec
sarb
test
xorl
cmp
lock
imul
imul
into
and
fbld
push
cld
adc
fistps
adc
cwtl
push
in
repz
inc
sub
incb
cmp
mov
push
dec
in
jbe
mov
mov
or
jl
cmp
pop
cmp
loope
rcll
sub
sbb
jmp
mov
imul
in
popf
jnp
subb
lea
flds
aas
shr
outsb
clc
adcb
movsl
loop
int
ja
dec
inc
insl
aas
sarl
mov
ljmp
sarb
cli
mov
in
popf
lea
js
cld
data16
push
or
sub
popa
cwtl
test
pop
mov
and
mov
fisttpll
outsb
hlt
test
nop
incl
movsl
sbb
jl
stos
xchg
aad
stos
mov
daa
push
enter
dec
das
push
fdivl
fcomps
cmp
insb
xor
fwait
outsl
lea
daa
adc
lahf
mov
cmpsl
lea
rol
ljmp
int
mov
push
data16
sbb
les
outsl
xchg
jmp
mov
sub
mov
fstp
ljmp
cmpsb
shlb
mov
aaa
shll
in
mov
outsl
cmp
lret
scas
adcb
cmpl
pop
inc
ret
and
data16
mov
pop
rorl
push
ret
and
ret
aas
ss
stos
cmpsb
mov
xchg
sub
dec
test
in
sub
ja
pusha
push
inc
jo
mov
addr16
test
adc
cli
mov
movsb
xor
arpl
push
es
add
add
or
fiaddl
pop
les
jb
inc
scas
push
cltd
inc
ss
cmp
enter
push
mov
fidivrs
mov
jmp
clc
daa
mov
add
scas
push
out
jbe
push
push
xchg
xchg
aaa
pop
shlb
idivl
pop
int
call
mov
sbb
lea
sub
xchg
hlt
and
test
or
repz
nop
cwtl
dec
or
fwait
pop
repnz
add
sub
adc
dec
cmp
fimuls
sub
sub
outsb
jnp
xchg
cmp
repnz
xchg
jmp
sub
aam
icebp
jge
push
outsl
shrb
imul
out
pop
cld
leave
test
sub
ret
in
cmpsl
mov
mov
inc
adcl
orb
jb
leave
xchg
stos
inc
fmuls
neg
pop
iret
mov
ds
popa
sub
cwtl
push
bound
push
and
push
push
lds
sti
sub
clc
les
popl
int3
sbbl
decl
jmp
cmpsl
int
jnp
adc
cmp
mov
pop
arpl
ljmp
adc
push
jnp
ds
jns
movsl
mov
fildl
fs
push
aam
pop
xor
inc
movd
mov
xchg
jns
aam
xor
insl
orl
imul
adc
mov
xchg
int3
jge
js
out
and
fildl
dec
sar
lcall
fdivrs
js
fidivrs
xor
mov
lds
push
scas
lea
mov
xor
cmp
xor
ss
pop
ds
imull
xlat
inc
out
fistps
aas
iret
insl
loopne
decb
jmp
pop
enter
test
xor
mov
cmc
test
inc
xchg
add
xchg
push
ds
push
sti
xor
in
mov
and
cwtl
xchg
inc
inc
les
cmp
test
sbb
sub
or
sbb
testl
lea
jge
ficomps
aam
fs
into
sar
mov
jmp
jns
into
push
lock
dec
imul
sub
fsubrs
push
enter
insb
test
dec
cmp
stc
lock
movl
dec
icebp
in
dec
inc
in
sbb
jne
scas
lret
or
push
and
cwtl
jecxz
je
cmp
fdivl
jbe
je
sbb
pop
xor
int
mov
mov
rolb
xchg
xor
pop
popf
imul
mov
push
lea
push
shll
popf
repnz
pop
shl
add
inc
add
sub
dec
imul
xor
pop
mov
sbb
sbb
ja
cmc
xor
push
iret
sub
push
pop
dec
ss
pop
push
adc
mov
lds
adc
mov
xchg
push
xchg
jns
testb
push
mov
pop
jno
loope
pop
dec
shrl
mov
dec
mov
out
cmpsl
push
and
cmp
popa
inc
dec
movsl
nop
call
sub
xlat
mov
push
push
add
dec
lods
ljmp
les
and
pop
jnp
jle
adc
fisubl
sbb
jmp
sub
mov
imul
mov
stc
push
sub
clc
add
sbb
imul
cmc
pop
dec
lds
lret
jge
les
xchg
fcmovb
jmp
fs
repnz
sub
syscall
dec
jne
jae
add
push
mov
aam
movsb
jns
hlt
lds
add
shr
imul
ja
push
ret
lcall
and
sub
dec
bound
imul
xchg
into
or
pop
sub
lcall
movsb
xor
inc
mov
cmpsl
iret
aad
bound
jge
in
insl
xor
mov
clc
dec
rol
in
es
jge
dec
cli
les
adc
mov
aam
sub
addr16
ja
popa
pop
and
popf
mov
adc
cli
add
aas
pop
pop
and
dec
pop
adc
outsl
cs
fistl
stos
xchg
std
mov
sbb
mov
mov
xor
inc
add
push
push
mov
mov
xor
push
inc
xor
add
lods
int3
pop
outsl
in
in
js
push
jg
xchg
sbb
mov
shl
movsl
in
insb
mov
jns
test
mov
out
inc
pop
in
es
cli
mov
mov
xorl
and
lds
mov
push
iret
in
mov
vprotq
mov
adc
call
cmp
sbb
pop
mov
arpl
jl
pushf
adc
in
lds
roll
xchg
aaa
xor
push
rcr
inc
dec
push
jbe
mov
loopne
cmp
dec
shr
int3
es
repnz
jae
aaa
mov
cmp
mov
into
add
cmp
mov
push
sub
aas
xor
jl
ss
fucomip
testl
jnp
or
addr16
mov
xchg
add
imul
xlat
push
cs
aad
xor
mov
inc
xchg
arpl
sub
jge
daa
fs
arpl
out
test
xchg
push
jne
divl
xchg
lods
iret
loopne
mov
aam
fs
or
mov
pop
jl
pusha
lods
stos
stc
mov
sbb
inc
mov
cmpsb
mov
outsb
and
stos
and
adc
lea
ds
inc
jns
jg
pop
fdivrl
hlt
outsl
out
jno
jecxz
icebp
jbe
mov
mov
jecxz
jecxz
daa
mov
sahf
add
dec
cmp
std
sbb
push
dec
rorb
mov
mov
arpl
hlt
xor
pop
push
jne
ljmp
sub
cld
nop
sub
mov
push
addr16
jl
jecxz
mov
pop
jae
sub
shll
lods
push
xor
loopne
shlb
sbb
jae
jg
movsb
lods
outsl
or
adc
xor
cwtl
dec
xor
push
je
mov
imul
gs
test
adc
fisubrs
or
shl
frstor
int3
xchg
aas
mov
sbb
mov
sahf
sbb
add
mov
imul
mov
dec
addl
subb
cmp
add
lcall
sub
sarl
jne
andl
mov
leave
fimuls
jno
sar
cs
loope
mov
loopne
mov
hlt
cltd
daa
mov
lock
jnp
pop
orl
push
frstor
bound
mov
inc
ljmp
data16
inc
aad
lock
pop
stos
lret
adc
in
pop
push
lods
mov
outsb
xchg
cmc
mov
mov
test
jp
xchg
adc
pop
lea
je
stc
jg
test
pop
jno
mov
push
hlt
js
mov
pop
out
iret
cmp
rol
cmp
daa
cmp
pop
pop
mov
cmp
or
mov
add
or
scas
imul
and
out
dec
sbb
scas
inc
jecxz
test
ljmp
jp
int
and
rolb
xlat
sbb
push
sub
pop
xor
in
inc
in
loopne
sbb
fwait
xor
out
outsb
pop
sarl
nop
jmp
cmpsl
adc
cmc
sub
loope
adc
mov
jge
jo
dec
hlt
sti
push
cmpsl
sbb
cmp
mov
fdivl
sbb
in
dec
daa
sub
jp
in
mov
sti
es
sbb
cmp
xor
jmp
mov
cltd
ret
aas
fs
aaa
in
outsb
jecxz
pop
add
icebp
test
cmp
out
or
sahf
es
inc
xchg
and
jle
cmp
iret
mov
mov
xor
lret
push
ss
sti
cmp
adc
push
mov
adcb
push
jo
xor
cmc
adc
push
das
xor
and
xor
xchg
or
mov
stc
or
test
imul
jge
adc
and
imul
push
or
outsl
cli
test
jns
std
fistps
pop
shl
inc
rep
inc
addb
mov
or
sub
fadd
mov
ret
scas
sahf
cltd
lcall
bound
dec
mov
test
push
xlat
popa
ja
mov
out
es
loope
scas
push
and
fs
mov
mov
sub
dec
stc
jne
int
in
cmp
pop
xchg
lea
add
and
fisubl
mov
inc
mov
ror
js
insb
clc
int3
js
aaa
leave
inc
push
test
or
inc
ss
stc
add
ret
loop
lret
das
push
xadd
cs
les
mov
fsubrl
mov
mov
insb
sub
pushl
shlb
jecxz
orl
int3
data16
push
repnz
inc
popf
icebp
push
xchg
clc
test
or
push
pusha
sbb
sti
icebp
in
negb
call
movsl
jmp
push
mov
outsb
ja
pushf
mov
push
xor
cs
cltd
xchg
inc
mov
fcoms
fclex
jg
inc
xchg
mov
cli
mov
aam
adc
cld
aas
sbb
xchg
ret
pop
loop
xchg
jae
cwtl
fsubrs
lret
mov
lret
enter
fnsave
mov
adc
subl
push
hlt
dec
mov
stos
jp
mov
xchg
push
sbb
in
xchg
sbb
mov
and
stc
dec
mov
inc
xchg
pop
dec
or
sbb
cld
cwtl
cmp
adc
mov
inc
ret
adc
fs
addr16
pop
ds
mov
loopne
loope
or
mov
lahf
movsb
adc
mov
mov
xchg
out
fmuls
dec
sub
jb
stos
dec
sbb
sub
lcall
pop
sub
and
ror
enter
cmp
ret
enter
push
lods
movzbl
sub
or
inc
lret
mov
jb
and
xchg
mov
jecxz
xor
jge
jmp
roll
test
fisttpl
xchg
int
cli
xchg
das
xlat
jno
xor
out
mov
cltd
sub
or
lahf
sub
fdivl
loope
aam
loopne
mov
mov
jnp
xor
mov
jb
enter
faddl
rcll
jne
mov
and
cld
arpl
pop
or
icebp
loopne
movsb
cmp
pop
mov
sbb
mov
push
lods
out
pop
and
les
adc
ret
in
xchg
dec
xchg
add
movsl
jb
push
dec
inc
pusha
les
xchg
sti
ret
addr16
scas
fcom
fmull
cmp
or
std
pop
pop
add
jno
pop
sub
sub
lds
xor
ret
fstpt
clc
dec
repz
mov
push
mov
push
cmp
xor
pop
sub
ret
sub
sar
inc
test
push
jb
adc
es
call
in
scas
jp
out
test
mov
inc
repnz
sub
xchg
add
jge
scas
int3
rcrl
xchg
xor
es
iret
pop
sbb
mov
adc
xchg
mov
ljmp
cwtl
mov
sbb
dec
inc
rolb
into
in
push
pop
aam
clc
inc
lods
jae
mov
push
xchg
push
push
cmp
cmp
out
jnp
jg
js
leave
adc
int3
and
jne
push
loopne
pop
shlb
cli
lea
pushf
or
xchg
mov
mov
mov
es
mov
push
test
xchg
imul
cmp
leave
push
fsts
jmp
inc
cltd
push
test
xchg
imul
cmp
leave
push
fsts
jmp
inc
cwtl
push
test
xchg
imul
cmp
leave
push
fsts
jmp
inc
cltd
push
sub
mov
xchg
sarl
sub
sbb
or
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
scas
ja
inc
mov
sub
inc
fwait
ljmp
cmp
sbb
dec
xchg
pop
stos
ja
inc
mov
daa
ljmp
out
idivl
mov
xlat
sbb
dec
xchg
pop
addr16
jl
adc
daa
fidivl
mov
rclb
out
negl
mov
stc
push
leave
cmp
ds
ja
xor
and
add
sub
icebp
sub
cmpsl
jbe
mov
adc
test
fisubl
pushl
and
dec
cmc
push
dec
pop
jg
and
lahf
ret
rcr
push
push
add
stc
and
or
xchg
sahf
push
popf
and
lcall
jg
out
out
dec
cmc
icebp
sbb
fcomip
xchg
add
ja
gs
fnstcw
push
or
testl
pop
ljmp
adc
push
dec
inc
add
mov
fbld
pushf
fcoml
aas
xchg
ja
inc
push
lcall
pop
dec
out
notl
cmpsl
push
mov
xchg
push
and
xor
dec
dec
jle
bound
repz
movsb
scas
mov
adc
fs
add
mulb
pop
test
mov
cmc
dec
xchg
sub
and
xchg
sub
fsts
pop
cs
mulb
cmpsb
aaa
cli
pop
lret
out
idivl
or
sbb
dec
xchg
pop
stos
ja
inc
mov
daa
ljmp
out
idivl
or
sbb
dec
xchg
pop
stos
shr
cld
divl
std
lea
in
addb
test
inc
adc
sub
mov
mov
pop
mov
stc
or
push
mov
aaa
enter
sbbb
mov
adc
adcl
mov
mov
movsb
push
cmc
sub
mov
cmc
or
and
rcr
mov
xchg
pop
fildl
and
or
push
push
test
sbb
jmp
jae
cmp
call
jae
lea
xchg
cmp
adc
xor
insb
hlt
dec
out
andb
loop
cmp
cmp
in
push
test
lods
dec
cmp
sbb
push
loop
jno
push
stos
or
andl
sbb
js
sbb
push
sbb
bound
pop
or
mov
add
scas
add
bound
test
scas
jae
inc
push
cltd
test
jge
dec
rcl
iret
push
cmp
fisubrl
fstpt
ljmp
sahf
popa
or
aad
icebp
lret
sbb
jl
sbb
add
fidivrs
jns
imul
or
cmc
cs
fimuls
mov
adc
int
adc
cmp
dec
sbb
jno
jge
and
push
or
or
jae
orl
and
sub
popf
xor
leave
mov
in
lret
jo
sbb
dec
pop
loopne
xchg
lods
push
test
inc
loope
mov
out
negl
inc
cmp
fcoml
rclb
dec
lods
mov
shl
add
and
add
push
inc
lcall
icebp
sbb
loop
add
adc
test
and
inc
std
push
aaa
shr
int
hlt
sub
repz
std
pop
jno
scas
push
push
xchg
repnz
outsb
repnz
adc
fdivr
filds
loopne
pushf
jae
sub
dec
dec
dec
ficompl
loopne
xchg
mov
adc
iret
arpl
sub
sbb
xchg
dec
hlt
dec
lea
dec
xor
xchg
adc
pushf
fs
inc
fucom
inc
test
stos
mov
xchg
dec
push
adc
cmp
xor
pop
mov
jnp
cli
pop
dec
mov
fstl
and
rcr
mov
test
scas
and
and
jae
out
maskmovq
testl
cmc
and
and
inc
scas
mov
frstor
cmp
sub
clc
mov
sub
addb
fwait
cli
pop
ljmp
clc
push
lahf
mov
sub
or
stos
scas
push
mov
aam
mov
sub
mov
mov
mov
mov
js
inc
inc
loop
loopne
mov
adcb
lret
jnp
dec
push
mov
xor
push
push
lds
out
mov
add
jbe
lea
fwait
mov
pop
inc
outsl
int
push
push
jle
call
xor
dec
dec
mov
fs
lret
fsubs
mov
jb
cmpsb
xchg
cld
insb
test
and
cmp
insl
cmp
rorl
sbb
das
pop
loope
pop
lods
aaa
pop
fs
xchg
iret
xor
cld
sub
fistpl
bound
cmpsb
add
push
push
pushf
xchg
fbstp
pop
sbb
lcall
loopne
mov
mov
or
xor
add
push
and
mov
bnd
push
arpl
aas
inc
es
cltd
insl
sbb
pop
popf
imul
add
sub
ja
mov
xor
mov
and
gs
pop
xor
cmc
pop
arpl
mov
inc
mov
cmp
lahf
cltd
pop
test
inc
cmp
fildl
aas
jl
xor
sti
fsubr
cmpsb
push
mov
mov
out
fsubl
and
icebp
add
pop
sbb
imull
test
dec
or
jmp
pushf
xor
cmpsl
and
bound
mov
or
mov
mov
scas
or
sub
mov
aaa
aaa
sbb
inc
mov
lcall
mov
aas
inc
add
mov
fiaddl
fildll
cli
nop
mov
sbb
fildl
test
push
in
inc
xchg
popa
mov
mov
adc
adc
pop
popf
jns
adc
push
push
imul
pop
orl
loop
cmp
adcb
and
mov
subb
mov
stc
rcrb
pop
shrl
mov
adc
aaa
cmp
pop
adc
push
pop
fmull
sub
adc
test
out
or
xor
add
movsl
cmp
bound
test
or
enter
arpl
xchg
addr16
clc
mov
cmp
sub
cs
xchg
mov
inc
test
lret
lods
jge
and
pop
jbe
or
adc
scas
inc
es
stos
pop
or
sub
add
jb
xor
add
imul
scas
dec
cmp
pop
lods
test
jg
mov
pusha
orl
int3
dec
mov
xchg
test
les
ret
xor
in
pushf
mov
sbb
and
jnp
je
pop
ja
xchg
scas
insb
mov
jl
filds
push
dec
lret
and
loop
mov
sarb
loopne
mov
jmp
dec
cli
stc
cld
xrelease
cmc
mov
and
mov
cwtl
add
call
mov
nop
fsubs
push
mov
fsubrs
cmp
jbe
push
mov
mov
in
lea
mov
fucomip
jbe
or
and
dec
jae
mov
cld
mov
sub
dec
inc
addr16
mov
sub
inc
push
or
pushf
jmp
out
inc
imul
pop
test
fwait
dec
push
lret
add
jae
jnp
fsts
add
cltd
enter
scas
sahf
add
jmp
push
push
xchg
xchg
sub
call
mov
cltd
imul
nop
xchg
sbb
aas
mov
mov
testb
sbb
orl
xchg
fldenv
daa
out
rorb
xor
movsl
cmovnp
out
xchg
clc
sbb
scas
dec
xchg
in
sub
pop
pop
aas
jp
jnp
lret
clc
aam
pop
adc
into
lods
sbb
insl
clc
cmp
jl
push
lea
dec
ja
push
xchg
hlt
lea
je
shrb
add
and
xor
pop
sub
dec
lret
out
adc
sti
das
test
mov
mov
xchg
push
mov
leave
add
ret
xor
imul
in
std
bound
mov
int
push
mov
test
add
jmp
xor
outsb
imul
add
addr16
inc
gs
cmc
xchg
mov
push
and
sbb
in
sbb
push
add
mov
inc
xor
iret
adc
dec
pop
mov
add
adc
sub
add
cmp
xor
int
inc
sbbl
mov
mov
xor
scas
lods
insb
jge
or
pop
sbb
xchg
pop
and
xor
dec
js
iret
xchg
add
jbe
stc
mov
sbb
ficompl
test
in
or
mov
stc
popa
test
scas
imull
rorb
xchg
adc
push
and
and
test
sub
jecxz
sub
fmuls
aam
push
dec
fsubrp
xor
lret
dec
and
outsb
leave
and
popf
or
sahf
pop
mov
es
stos
pop
inc
or
nop
xlat
fmul
or
movsb
or
pop
push
in
pop
mov
pop
inc
les
stos
cmpsl
dec
mov
inc
mov
popa
aad
rol
sbb
adc
adc
add
jge
cltd
xor
lds
int
cltd
inc
xlat
je
jae
mov
test
fwait
cld
jg
and
in
xor
cmpb
inc
add
rcll
fcom
jle
adc
cwtl
insl
lret
pop
jl
xchg
inc
clc
jo,pt
fs
mov
fadd
popf
mov
push
clc
loopne
mov
or
sbb
loope
mov
stos
mov
mov
pop
pop
and
adc
sub
out
scas
fdivrl
lcall
mov
sub
inc
inc
inc
push
js
mov
or
cld
sbb
pushf
ljmp
daa
xor
jp
pmullw
clc
scas
mov
mov
sbb
imul
adc
inc
sbbl
cmp
xchg
inc
push
repz
setge
dec
xchg
ss
mov
testb
xchg
fdivrs
pop
sbbb
sub
test
pop
stos
bsr
jne
push
dec
jnp
xor
mulb
push
add
add
sahf
in
and
dec
stos
ljmp
push
dec
mov
mov
aaa
mov
add
addr16
repnz
push
sbb
sti
popf
ret
div
mov
pop
out
stos
xlat
cmp
mov
ljmp
jne
das
sti
push
jnp
aad
shlb
mov
pop
push
xor
sub
sub
jle
outsl
or
mov
test
jmp
lock
mov
sbb
or
lds
mov
outsb
lret
sbb
aad
pusha
test
mov
fs
lea
adc
push
mov
sti
push
pop
cmp
and
enter
push
ja
xchg
testb
mov
imul
mov
in
fldcw
fmuls
xchg
bound
loope
ljmp
lods
jge
les
dec
inc
orb
jne
pop
lret
test
mov
fisttpll
jae
dec
lea
pop
lods
cmp
inc
dec
aad
lret
rclb
dec
mov
rcr
insl
xchg
inc
mov
jb
fwait
int3
mov
and
mov
cmp
shl
push
scas
and
sub
in
push
roll
or
pop
test
mov
inc
xor
mov
mov
mov
pop
stos
insl
cltd
jmp
push
pop
arpl
test
and
dec
add
negl
adc
iret
lcall
mov
jb
pop
or
orb
inc
orb
adc
mov
push
jb
push
cmpb
jne
aas
cmpsb
lret
aad
bound
sti
jnp
sub
pop
icebp
scas
dec
mov
or
or
dec
in
jbe
into
fistps
lahf
push
out
xor
sub
pop
loope,pt
push
mov
pop
inc
jmp
mov
mov
aaa
sub
xor
mov
daa
jle
xor
or
cltd
xchg
pop
xor
sub
test
inc
imul
outsl
insl
aas
dec
movsl
mov
int3
xchg
pop
mov
shrl
sub
les
push
out
popf
fs
rolb
lds
lret
inc
cs
jmp
mov
addr16
jo
inc
popf
mov
push
lods
popf
add
nop
out
jecxz
or
dec
xor
cmp
sti
mov
pop
cmpsb
pusha
and
push
pop
add
jge
xchg
cld
or
or
insl
hlt
mov
hlt
idivl
push
mov
roll
scas
test
sub
jecxz
stos
dec
jb
mov
mov
or
push
sbb
sbb
imul
dec
or
fdiv
testb
sub
xchg
setle
sti
mov
cmp
mov
std
in
or
rorl
jg
cmp
or
test
mov
cwtl
inc
push
arpl
fldz
and
pop
shlb
mov
jb
fs
inc
or
mov
mov
and
pop
iret
adc
lret
into
jecxz
shl
dec
jecxz
xor
push
ret
adc
inc
dec
or
mov
mov
and
mov
ljmp
jp
dec
int
add
push
addr16
pop
hlt
and
xchg
insl
fisttpll
jg
cmc
jl
and
cwtl
hlt
daa
rcrb
add
shrb
add
mov
rcrb
mov
dec
sub
jnp
mov
iret
faddp
test
dec
nop
inc
jo
mov
pushl
add
xchg
js
xchg
mov
loopne
dec
push
push
int
push
clc
cmpsl
pop
out
push
inc
add
es
in
mov
lods
outsb
cs
insl
mov
jecxz
in
bsf
stos
call
mull
xchg
test
jg
pop
pusha
daa
dec
add
dec
fiaddl
es
std
cmp
mov
mov
mov
inc
xchg
out
jns
sbbl
mov
loope
jbe
lret
adc
mov
cmc
pmullw
pop
push
mov
lret
ficoms
outsl
jo
popf
shlb
mov
cld
hlt
jne
shrl
inc
fnstenv
lret
mov
and
pusha
cmp
jno
dec
pop
je
shrb
pusha
cmpsl
jbe
and
lea
addr16
fwait
test
or
fstpt
adc
jg
sysexit
and
mov
aaa
fidivrs
jmp
inc
movsb
rolb
adc
mov
sbb
mov
addr16
test
imulb
lahf
jns
daa
dec
mov
insb
dec
inc
jb
pop
jnp
mov
push
test
cwtl
xchg
loopne
pop
mov
ja
pushf
imul
mov
xchg
sub
sub
xor
lahf
cld
mov
pop
out
call
add
jle
lea
filds
iret
clc
inc
loopne
in
xchg
cmpsb
and
stos
in
cmp
shl
add
in
stc
or
cmpsb
xor
aam
inc
mov
add
push
sti
lods
loopne
cmc
jne
imul
arpl
xchg
insl
clts
test
push
xchg
movsb
inc
push
xor
or
sbb
mov
mov
sbb
push
dec
push
test
sbb
ljmp
inc
outsl
push
loop
sbb
outsb
lods
mov
ja
rorl
add
in
js
mov
sbb
adc
repz
adcl
mov
rcr
mov
sar
mov
inc
adc
push
inc
inc
xlat
xchg
dec
and
or
xor
sti
inc
out
jo
add
mov
iret
lock
mov
mov
push
dec
adc
push
dec
inc
cli
fdivr
or
in
shl
jge
cmp
hlt
rolb
dec
nop
outsl
xchg
xlat
cmp
push
jg
xchg
add
push
add
ret
adc
sub
out
xchg
insb
jne
movsb
sub
adc
sub
test
xor
lea
adc
fcmovbe
cmp
push
xor
into
rclb
and
fstpt
not
rcl
mov
and
addr16
mov
adc
js
add
or
stos
sub
and
mov
arpl
imul
xor
movsb
pop
jne
cli
cmp
push
adc
jo
jb
ja
or
lcall
pop
inc
flds
sahf
daa
xor
xchg
xor
movsb
mov
loopne
mov
adc
lods
add
cltd
iret
inc
in
sub
aad
dec
outsl
and
mov
test
aam
add
push
jno
sub
movsb
sbb
xor
inc
ret
pop
pop
xchg
dec
push
pop
pop
cmp
sti
cmp
add
mov
into
pushf
xchg
call
fimull
xchg
pop
repz
sub
mov
insl
in
int
and
aam
sbb
dec
ficoml
sub
outsb
mov
sbb
pop
mov
or
push
lds
cld
cltd
adc
pop
sbb
je
adc
or
fnstcw
lret
mov
sbb
fldenv
inc
xchg
sbb
pop
lock
jp
or
sbb
add
cmp
pop
xor
mov
sbb
fstpl
inc
ss
pop
shrb
and
xor
xlat
and
cmp
cmp
dec
loope
jmp
cli
mov
jg
xor
ret
pop
xor
out
xchg
daa
xor
adc
push
and
sbb
add
xor
dec
jg
push
or
inc
mov
enter
enter
xchg
pop
out
push
imul
rclb
and
and
dec
aas
in
notb
push
loopne
das
sub
mov
fwait
popf
mov
inc
imul
pusha
ret
in
add
std
mov
mov
out
inc
fmul
and
test
xlat
push
mov
sbb
dec
scas
jbe
dec
test
pop
popf
mov
arpl
add
out
lock
push
lcall
je
mov
inc
fstpt
out
ja
out
cmp
dec
jg
mov
sub
test
mov
jmp
jle
mov
mov
fisubrs
lahf
sub
dec
add
mov
dec
adc
in
jl
mov
insb
dec
imul
push
pop
mov
nop
xchg
sti
dec
dec
mov
add
jb
mov
test
std
mov
jo
and
mov
roll
cmp
pop
rcll
fisubs
popf
add
mov
sub
ds
repnz
cmp
xchg
inc
lcall
ja
mov
orl
mov
xorl
bound
mov
push
dec
mov
pop
mov
xlat
push
or
or
ljmp
fisttps
lahf
xor
sbb
mov
das
popf
inc
stc
pop
in
subl
ret
xchg
fs
pop
idivb
xchg
mov
mov
lea
add
dec
testb
loope
push
jnp
arpl
inc
add
call
lods
pop
push
cmp
sub
lock
test
rcll
pop
xor
out
adc
fcomp
std
jecxz
sarb
sti
scas
stc
fwait
les
imul
lock
lods
and
repz
std
out
adc
dec
pop
ret
or
loop
es
cmp
mov
push
mov
and
mov
jp
pop
inc
dec
sahf
gs
pop
mov
jp
pop
inc
loop
xor
stc
mov
sbbl
xchg
jg
fiaddl
andl
xor
push
in
arpl
add
fidivs
rcll
xchg
mov
hlt
mov
mov
ret
in
mov
cltd
jecxz
jo
inc
xchg
push
sarl
insb
xchg
pop
outsl
pop
les
push
sub
cs
xor
sbb
or
stc
cmpsl
mov
push
dec
xor
pop
dec
loopne
mov
out
rolb
xor
pop
xor
sub
aas
or
inc
pop
out
js
push
push
shll
push
dec
cmpb
and
call
sub
repnz
lahf
dec
mov
loope
sbb
outsb
pusha
ds
xchg
xor
mov
jb
push
enter
ret
inc
aad
and
jg
sub
leave
rclb
movsb
mov
ficoml
mov
lods
pop
sub
adc
pop
and
test
inc
jge
aam
js
negl
mov
fstps
push
dec
sub
xchg
sub
mov
or
push
jmp
cmpsl
mov
sbb
adc
inc
cmp
dec
shr
xorb
decb
or
dec
out
sbbb
leave
add
pop
sahf
mov
call
jle
mov
repz
mov
out
add
shrl
int3
mov
insl
dec
outsb
nop
hlt
mov
cmp
ds
pop
adc
push
jb
xchg
xor
pop
popa
rcrl
rep
shlb
movsl
xor
mov
adc
push
push
in
mov
jmp
repz
imul
ror
mov
sbb
roll
mov
repz
sbb
xchg
or
xchg
mov
push
mov
add
int3
divl
add
jne
mov
inc
xchg
push
and
mov
push
movb
xchg
push
fstps
sahf
sub
movsb
mov
leave
jmp
sub
enter
bound
pop
test
dec
int3
jle
int3
inc
into
popf
sbb
cmp
stc
jmp
test
mov
or
or
leave
lea
aaa
movswl
cmp
pusha
mov
pop
add
xlat
or
pop
xchg
fistps
inc
scas
jno
fbld
jne
sti
out
loopne,pn
push
fcompl
mov
push
shlb
pop
cmpsl
cmp
addr16
ljmp
inc
mov
mov
pop
mov
xchg
popa
fsubs
mov
in
or
pop
fsubrl
rcr
and
imul
mov
fsubs
or
mov
xchg
test
cwtl
push
mov
mov
sbb
test
jg
xor
mov
loope
ficoms
call
dec
add
jno
roll
inc
imulb
jnp
dec
leave
and
sbb
ds
lcall
pop
sub
cmp
or
sbb
dec
xchg
pop
stos
ja
inc
mov
daa
ljmp
out
idivl
or
sbb
dec
xchg
pop
scas
ja
inc
xchg
push
sahf
daa
ljmp
out
idivl
or
adc
inc
xchg
mov
inc
outsb
push
fisubl
ljmp
out
notl
rclb
aas
add
push
fistpll
push
add
jmp
mov
clc
outsl
lret
bswap
sbb
dec
iret
dec
fisttps
push
sbb
sub
rorb
jg
outsl
sub
pusha
mov
mov
pop
push
fbld
jb
add
cmp
cmp
xor
jbe
pop
ret
aas
sub
dec
mov
lcall
or
xor
xor
jbe
mov
movsl
popa
pop
inc
into
jp
jp
fisttpll
jecxz
adc
syscall
pop
out
es
fstp
push
cs
mov
into
dec
fidivl
cmc
test
push
fmull
cmpsl
sub
xor
ret
stos
loop
repnz
iret
pop
adc
insl
das
mov
pop
iret
lcall
not
push
sub
mov
psubd
sbbl
fchs
cli
movl
and
fisubrl
cmpsl
cmp
out
test
jg
pop
mov
aaa
ds
sarb
out
cmpsl
enter
out
add
dec
xor
addr16
push
lcall
iret
dec
das
jp
jge
or
xor
ret
leave
rcrb
andb
out
das
mov
sub
push
sarl
addr16
inc
fisubrl
sbb
fildll
pop
pop
mov
pop
mov
outsb
loopne
lods
push
shrl
sub
or
pop
stc
push
lret
push
xor
push
jmp
lahf
cmp
lret
outsl
ljmp
das
stos
aas
pop
iret
dec
fistpll
push
sbb
sub
cli
outsl
ljmp
das
stos
aas
pop
iret
mov
and
xor
icebp
jb
hlt
mov
aad
insl
cmp
mov
pop
mov
and
xchg
sbb
das
push
adc
lds
dec
sarl
out
or
xchg
js
xor
and
or
testb
pushf
push
sub
xchg
mov
push
dec
jno
pop
inc
mov
test
lock
out
xor
pop
cmp
or
inc
and
pop
mov
pop
in
lcall
xchg
shrb
rcr
insb
ljmp
mov
incl
pop
mov
gs
xor
xchg
mov
fidivl
mov
int
imul
lock
fistl
sub
lods
jp
rolb
mov
popf
lods
in
xchg
icebp
sub
lret
and
jg
dec
daa
loop
movsb
jae
lcall
ljmp
nop
out
mov
cltd
lods
pop
mov
mov
mov
cmp
cwtl
mov
inc
xorb
into
fs
jmp
or
jmp
push
mov
add
or
xchg
enter
mov
jge
loop
andl
cmp
cmp
xlat
pop
sbb
fdivr
ljmp
mov
jb
and
ficoms
mov
daa
cmp
adc
adc
and
xchg
sti
add
test
pop
popa
cmp
lods
popa
pop
jo
add
fcmovnu
jp
inc
aad
test
seta
mov
ret
adc
sarl
call
sbb
pop
ret
xchg
dec
shl
test
add
arpl
loope
push
inc
push
push
xor
push
mov
jl
sub
test
lods
lods
dec
push
cmp
mov
sub
adc
enter
pop
bndstx
inc
mov
ret
mov
cmpsl
sub
and
cmp
adc
stos
xchg
mov
stc
in
mov
insb
fstl
nop
push
mov
in
jle
mov
push
cld
and
pop
fmull
je
push
call
daa
pop
pop
or
ret
adc
sbb
mov
stc
dec
push
pop
xchg
mov
add
in
push
inc
push
jae
rcr
test
inc
cltd
movsb
cld
dec
pushl
imul
jle
fwait
xchg
pop
ds
popa
sub
jno
popa
into
jp
mov
imul
xorb
mov
jbe
xor
pushf
pop
xor
loopne
mov
loop
xchg
push
pop
inc
push
or
push
fisubrl
pusha
push
xstore-rng
cmpsl
stos
je
mov
push
out
and
call
mov
pop
or
sub
and
pop
push
jge
dec
mov
in
nop
nop
ror
test
xchg
mov
je
push
cs
push
negl
adc
or
xchg
mov
mov
mov
and
jmp
lods
mov
dec
inc
lods
fwait
jbe
data16
xchg
or
pop
stc
incb
cld
or
jne
mov
ss
divb
xchg
pop
push
jae
xor
add
dec
pop
bound
sub
icebp
inc
add
cmp
sub
xchg
jle
push
sub
imul
dec
and
jb
sarb
mov
pop
mov
cmpsl
jbe
inc
push
lcall
cmp
push
push
push
pop
cmpl
ret
in
cmp
sbb
fnstsw
fisubs
aad
iret
push
scas
sbb
test
fistpll
cmp
push
popa
in
notb
dec
mov
jns
loop
pop
inc
out
outsb
enter
mov
jmp
stc
shlb
adc
ret
testl
pop
not
or
mov
sbb
js
daa
mov
clc
fsubrs
imull
xchg
hlt
loope
jge
js
std
dec
test
jno
sti
jp
lret
xchg
in
or
lock
pop
xchg
flds
mov
clc
xor
add
xor
and
sbb
in
inc
pushf
hlt
and
add
fildl
bound
insb
scas
in
leave
sbb
das
cmp
inc
test
imul
inc
inc
scas
mov
je
clc
add
cmpsl
scas
inc
mov
xchg
frstor
out
xor
dec
lea
fists
pop
dec
int3
pop
and
xchg
test
mov
repz
pushf
or
inc
mov
filds
mov
jg
into
pop
sbb
outsl
dec
mov
imul
push
test
in
inc
push
es
xor
jle
jl
imul
or
aad
inc
loop
shlb
stc
bound
ret
and
mov
add
aad
sbb
mov
addr16
or
cwtl
sub
pop
sub
lock
sbb
dec
fdivrs
jmp
dec
lds
dec
inc
pop
sti
sub
lods
mov
test
das
mov
xor
push
sbb
sbb
jns
xchg
push
add
jae
test
imull
mov
icebp
sti
dec
rcr
rolb
psllq
sbb
sahf
and
sub
xchg
mov
cmp
fwait
dec
roll
clc
xchg
sbb
push
rolb
jo
sub
and
cmp
fld
add
addl
jne
pop
pop
add
fsub
cwtl
mov
je,pt
adc
or
push
out
rcrb
push
js
xchg
sbb
mov
pop
bndldx
in
pop
ror
cmpsb
pushf
inc
mov
test
mov
mov
jns
push
push
outsb
call
int3
mov
aad
mov
repnz
inc
aam
out
imul
nop
jge
mov
ja
mov
lret
ret
xchg
mov
sbb
pop
aam
in
push
push
std
sahf
mov
jno
imul
push
test
mov
dec
fdivl
cmovo
pop
and
push
scas
sbb
push
aad
pop
jb
mov
out
add
sub
xor
scas
movb
xchg
fldenv
in
and
push
cmc
dec
mov
sbb
jge
jecxz
aaa
push
stos
dec
cmp
sbb
fisubrl
sbb
in
inc
test
xchg
mov
pop
xor
xorl
fistps
dec
mov
movsb
xor
adc
or
in
sbb
xchg
inc
loope
mov
adcb
adc
cmp
imul
lods
sub
xor
xor
jne
xor
sbb
add
add
and
std
xchg
add
and
xchg
data16
mov
lods
out
aaa
lret
ficoml
mov
xlat
push
cmpsb
dec
int
into
sti
mov
ja
idivb
mov
jmp
mov
call
lods
push
mov
arpl
jl
xchg
add
dec
cmp
mov
jge
xchg
mov
mov
xchg
sbb
add
push
lods
rcl
mov
or
gs
pop
adc
mov
fnstcw
dec
lret
mov
push
das
jb
inc
push
test
das
dec
dec
mov
add
fcoms
jne
shrb
leave
bound
push
in
push
add
push
lds
cmpsb
enter
shlb
fildl
pop
cmp
fdivs
xchg
xor
mov
mov
xchg
int3
push
sub
add
mov
mov
xchg
loope
sub
int3
daa
xchg
out
popf
out
lret
add
sbb
sbb
fstl
aad
fsubs
or
xchg
push
sub
sbb
out
and
shl
sub
xchg
mov
outsl
insl
in
ficoml
push
test
xchg
ss
ficomps
sub
movsb
aad
outsl
and
test
movsb
inc
shrl
insb
jl
lods
inc
popa
int
lock
cmp
cld
push
std
sti
frndint
push
mov
inc
rcr
mov
lods
pop
mov
lret
mov
lods
pushf
cld
jae
orl
mov
xchg
lret
fidivrl
repz
jnp
mov
test
mov
outsb
jne
inc
xchg
dec
pop
pop
xchg
mov
adc
inc
mov
push
stc
xor
xchg
mov
test
pop
xchg
ljmp
pop
leave
addr16
es
lock
adc
in
inc
jae
insb
popf
fildll
outsl
sub
ss
mov
out
repz
aam
or
cwtl
push
mov
and
pop
in
movsb
stos
fsubl
bound
out
add
adc
andb
inc
dec
decl
sti
jns
ret
mov
data16
or
or
add
out
mov
mov
stos
and
mov
cli
jbe
fcomp
or
jle
add
dec
push
add
xor
sbb
xor
sub
pushf
dec
or
pop
cmp
test
aas
mov
enter
sub
test
push
in
mov
dec
xchg
sbb
test
and
test
mov
and
dec
shlb
push
movsl
dec
sub
jmp
sti
push
jl
insl
iret
roll
pop
pop
ret
in
cli
push
scas
inc
push
into
fistps
ror
arpl
mov
cmp
fs
adc
push
lret
sbbb
xlat
adc
xchg
push
pop
xchg
mov
loope
xchg
cmp
je
xor
cmp
lcall
dec
call
sub
jmp
dec
insb
out
push
mov
xor
sub
pop
jns
gs
es
dec
mov
aas
in
stos
sti
mov
fldt
or
data16
test
sbb
mov
dec
scas
bound
lahf
out
pusha
stos
cmp
fistpl
repnz
xor
or
test
jo
insb
imul
cmp
and
xor
ss
xlat
mov
popf
movsl
push
repz
mov
push
fistpl
push
xchg
fnstenv
dec
in
mov
sub
or
or
mov
fwait
rcrb
ret
pop
push
or
stos
adc
cltd
pop
lret
fxam
sti
jno
mov
jnp
sub
into
leave
cmpsl
push
adc
push
pop
pop
mov
test
push
xchg
push
push
fists
inc
inc
jmp
sbb
jae
mov
mov
sbb
fadds
fcmovnu
repz
aaa
or
in
pop
psrad
mov
repz
pop
cwtl
push
push
in
lea
dec
lea
mov
es
mov
sub
push
jp
imul
lods
aaa
adc
xchg
sbb
adc
or
outsb
movsl
pop
push
into
pop
mov
shll
arpl
fadds
enter
scas
sbb
mov
mov
dec
mov
lcall
mov
test
cmpsl
xchg
push
daa
repz
inc
dec
push
test
xchg
test
xchg
mov
jne
jb
in
pop
out
add
cmpsl
xchg
pop
xor
fs
cli
cwtl
ja
mov
into
adc
dec
pop
pop
out
jns
or
es
cmc
xor
scas
mov
jb
icebp
in
xchg
test
out
push
mov
cs
repnz
mov
jb
add
mov
xchg
inc
push
adc
cmpsb
push
lahf
mov
sbb
jae
and
xchg
sbbb
popf
or
mov
sbb
loop
pusha
pusha
imul
xor
add
sub
push
or
or
les
dec
sbb
jp
push
jns
xchg
push
sahf
push
lret
pop
push
jmp
adc
pop
mov
outsb
push
lock
mov
inc
outsb
push
mov
sti
movsb
inc
adc
mov
sub
xor
inc
add
je
xor
mov
pop
into
add
push
rcr
inc
dec
loope
lret
leave
or
mov
stos
xchg
shlb
pop
arpl
adc
adc
pop
adc
lret
xorl
mov
mov
push
and
hlt
mov
iret
cwtl
adc
adc
mov
fnstsw
shll
push
inc
mov
or
std
leave
sub
mov
adc
test
mov
ja
sbb
nop
inc
cmp
gs
lods
cmpsb
je
xchg
andb
sub
cmovle
in
orb
mov
or
push
adc
dec
iret
dec
xorl
out
xor
pop
cltd
pop
sub
xor
dec
repz
jle
orl
pop
jmp
inc
gs
xor
jo
hlt
mov
sub
xor
xchg
xchg
pusha
jae
mov
push
and
adc
outsl
push
jp
jb
out
dec
popa
movsl
orb
adc
fwait
test
das
in
in
cli
push
fistpl
ja
jle
cmp
xor
mov
mov
lds
pop
dec
inc
mov
cwtl
mov
bnd
jl
call
pop
jp
push
ficompl
mov
xor
push
xor
cmp
cmp
lret
inc
dec
dec
xchg
leave
dec
and
cmp
int3
insl
sbb
jnp
das
xchg
les
push
inc
out
test
fcomip
push
fs
outsl
push
jge
mov
insl
jmp
pop
lock
ret
sahf
xchg
ds
iret
gs
mov
leave
and
xchg
jbe
sub
inc
sub
add
jecxz
jecxz
insl
inc
jle
test
lods
mov
ret
lahf
movsl
mov
xchg
ficomps
testl
adc
mov
jno
lcall
xor
rcrl
jno
add
push
idivb
mov
shll
mov
push
mov
repnz
mov
lods
adc
sub
cmp
and
movsb
jbe
popa
popf
inc
js
cmc
xor
in
push
add
lret
ss
jg
fnstenv
notl
xchg
prefetcht1
inc
mov
outsb
subb
repz
add
inc
xor
test
jle
xor
lds
mov
loope
sti
cmpsb
mov
fmuls
jmp
cmpsb
les
adc
jmp
arpl
or
not
rolb
sub
cmpsl
jne
sbb
in
add
mov
dec
sub
cmp
sti
outsl
hlt
or
cmp
xor
sub
mov
dec
pop
push
add
idivb
push
xchg
mov
xlat
bndstx
sbb
fdivl
sbb
push
bound
mov
or
xor
jnp
pop
mov
les
xchg
sahf
push
jl
nop
fs
push
aas
dec
leave
adc
das
cmp
adcb
scas
xchg
inc
or
add
bound
or
daa
lcall
int
dec
stc
push
pop
inc
jge
mov
mov
xchg
jg
cmp
loop
add
xor
loopne
xchg
js
out
jo
pop
inc
ljmp
mov
cwtl
mov
dec
xlat
stos
dec
lea
iret
es
negl
sub
fwait
jp
ja
jbe
dec
int
cmp
jle
inc
aas
adc
mov
enter
leave
sbb
dec
decl
inc
aad
mov
dec
add
das
loope
mov
cmp
dec
ret
dec
cmp
mov
or
repz
dec
or
idivl
lods
imulb
stos
jecxz
and
push
adc
cmp
jge
mov
sahf
pop
mov
sub
mov
push
pop
shlb
cwtl
insl
cltd
jbe
das
mov
sub
adc
rolb
xchg
mov
sub
inc
xchg
add
int3
insl
adc
ficoms
dec
xchg
pop
sub
and
arpl
in
hlt
jle
data16
jmp
lds
shlb
iret
mov
xchg
fcompl
lahf
and
call
pushf
and
test
mov
sub
jg
mov
icebp
rolb
lcall
fbld
pop
les
sti
insl
mov
call
inc
and
lods
adc
cmp
jg
popa
addr16
or
mov
push
jb
cmp
adc
insb
mov
and
scas
xor
cmp
negl
sbb
mov
mov
inc
xchg
dec
xchg
stos
push
add
lods
add
mov
jnp
sti
xor
jmp
xchg
ja
push
inc
mov
jns
mov
call
rcrb
shlb
sbb
sub
fs
mov
dec
xor
loope
xor
pop
cli
cmpsw
cmp
xor
filds
sbb
clts
jnp
sbb
push
mov
stos
mov
mov
pop
inc
dec
outsl
inc
lds
fsubl
and
fadds
fnstsw
mov
sbb
mov
sub
inc
loope
inc
filds
add
pop
int3
aaa
inc
jp,pt
fdivrl
stc
and
mov
cmp
dec
adc
adc
popf
cmp
stos
and
lret
mov
ror
xchg
inc
frstor
fld
icebp
adc
dec
test
inc
cltd
jae
dec
aad
cli
jns
scas
push
or
add
sarl
cmp
cld
lahf
andl
or
daa
or
dec
out
sub
cmc
sbb
call
in
aam
pop
add
hlt
rcrl
pop
sub
repnz
adc
leave
jg
cmpsb
in
mov
in
inc
jl
data16
mov
stc
mov
stos
stos
sbb
imul
bound
mov
or
int
push
popf
push
pop
adc
xchg
fisttpll
mov
outsl
or
mov
cwtl
and
mov
das
xchg
pop
out
adc
sahf
mov
insb
mov
adc
push
scas
aam
dec
lea
cmp
push
out
cmp
aam
cmp
or
jae
test
push
iret
adc
nop
dec
je
jg
add
add
push
or
daa
scas
in
push
out
jmp
push
outsb
mov
fcoml
jne
cltd
mov
mov
stos
icebp
adc
xchg
jns
cli
and
jnp,pn
xor
adc
pop
pop
pop
lods
or
icebp
outsb
jo
mov
repz
dec
mov
test
inc
test
cmp
push
bound
stos
mov
ja
test
mov
notb
imul
test
rclb
bound
mov
jg
rol
cmc
xor
and
xor
ljmp
add
mov
dec
lret
or
push
or
pop
cmp
xor
out
jbe
lret
lods
daa
or
mov
test
cld
bound
xlat
mov
repnz
cmp
push
aad
xchg
add
fs
ds
mov
push
pop
loopne
cli
in
fwait
or
xor
pop
loop
out
es
pusha
inc
in
jg
mov
fsubl
aad
sub
add
cmp
xchg
mov
sub
in
cmc
lds
in
push
mov
icebp
jne
loope
test
mov
insl
inc
pop
arpl
mov
pop
aam
sahf
sub
xor
adc
stos
push
int3
jmp
pop
mov
cli
pop
jl
dec
adc
add
fnstsw
push
dec
cwtl
mov
stos
jo
and
ja
or
stos
pop
inc
sbbl
mov
iret
out
cltd
cmp
clc
push
xor
repnz
dec
lret
or
add
popa
jno
dec
scas
pushf
sti
xchg
inc
and
in
fwait
xor
mov
daa
call
jmp
sub
or
sbb
in
sbb
jl
xor
notb
stos
fldenv
imul
scas
xchg
dec
sbb
sbb
and
jle
or
or
popa
sub
jnp
addr16
cmc
lret
xor
add
mov
mov
insb
sahf
sbb
mov
cli
gs
jge
mov
mov
mov
mov
sub
inc
pop
xchg
jo
hlt
fcmove
push
and
daa
jno
sahf
fists
popa
fsubrs
mov
or
daa
ret
sti
jp
rcrl
fisubl
pop
cmpsl
mov
dec
jnp
imul
push
aas
cmpsl
add
nop
pop
push
pop
and
sbb
pop
jb
inc
fnstsw
cmp
cld
mov
mov
xchg
clc
add
sbb
sub
dec
sbb
or
add
daa
sahf
cli
jbe
addr16
es
push
adc
stc
dec
mov
stos
push
and
outsb
cld
jb
xor
fstpl
mov
cltd
adc
mov
xchg
loopne
add
ja,pn
mov
push
dec
xor
push
mov
mov
jmp
iret
sbb
mov
mov
xor
jg
mov
lret
add
lret
nop
mov
repnz
jecxz
out
mov
popl
mov
pop
push
cmpl
pop
out
data16
mov
aaa
cltd
repnz
adc
outsl
daa
mov
pop
pop
out
in
in
inc
fistpl
es
fbld
push
sbb
sub
cli
outsl
ljmp
das
stos
aas
pop
iret
dec
fistpll
push
sbb
sub
cli
outsl
ljmp
das
stos
aas
pop
iret
dec
xchg
jp
push
sbb
sub
outsl
ljmp
setnp
outsb
iret
jle
dec
out
push
sbb
stos
mov
push
outsl
ljmp
rclb
insl
std
jge
dec
fstpl
cltd
add
adc
int
fstpl
cmp
popf
or
dec
fstpl
sub
popf
sbb
insl
int
rorl
dec
lea
lea
fs
push
lds
xor
and
xchg
hlt
jge
dec
xchg
and
cmp
outsl
lret
mov
popf
dec
mov
cmp
bound
push
and
dec
movsl
lds
in
std
andb
loope
pop
int
pop
mov
jb
adc
xor
lods
jae
in
cmc
xchg
popa
addl
xchg
add
aaa
push
mov
cwtl
inc
xchg
lea
insl
adc
cmp
bnd
cld
xchg
clc
mov
mov
sbb
shlb
mov
inc
xchg
in
in
cmpl
hlt
push
aas
mov
mov
and
aas
or
pushf
adc
pop
mov
lea
lea
popf
or
pop
int
mov
add
hlt
jge
jne
inc
les
movsl
xor
add
sbb
pop
mov
sbb
insl
mov
pop
fsubrs
pushl
popa
add
mov
or
or
dec
lods
dec
sub
or
adc
and
cmp
in
jge
insl
int
fisttpll
cmp
popf
or
dec
fstpl
sub
popf
sbb
insl
int
fisttpll
cmp
popf
or
repnz
cs
inc
ss
xor
push
fcoms
and
sbb
jmp
fistpll
decl
jno
inc
mov
cltd
idivb
push
mov
pop
scas
sbb
push
lds
out
adc
aad
mov
inc
push
call
mov
pop
inc
ror
sub
das
lock
xchg
sti
scas
pop
movsl
xchg
call
inc
xchg
out
mov
lods
mov
das
subb
mov
sub
xchg
rorb
or
mov
addb
addl
jl
mulb
aam
sbb
mull
and
aaa
cmpsb
fwait
lock
aas
inc
icebp
xor
sbb
loope
stc
out
sbb
mov
repnz
fistps
push
inc
xor
and
inc
insb
js
int3
jno
mov
mov
sub
fidivrl
mov
mov
add
iret
dec
inc
data16
xchg
je
bound
jecxz
loop
clc
pushf
fcomps
in
popf
sub
repnz
adc
adc
lods
mov
jae
pop
in
fidivs
mov
dec
out
bound
jecxz
addb
dec
scas
out
insb
sbb
and
jae
dec
in
icebp
sub
cmpsl
test
fsubr
arpl
stos
pop
out
push
ljmp
lcall
sahf
add
dec
call
inc
dec
lds
hlt
sub
and
pushf
or
mov
add
mov
in
push
addr16
or
mov
mov
stos
mov
movsb
pop
outsl
mov
pop
inc
jp
into
rorb
loope
mov
push
and
out
cmpsb
cltd
movsl
sbb
or
cltd
jp
dec
mov
mov
stc
jae
addr16
ficompl
popa
ja
mov
outsb
fisttpll
inc
push
xchg
lods
ret
lods
sbb
dec
fsubrl
add
hlt
fcoms
nop
push
jmp
xchg
lock
cmp
inc
or
sub
sub
and
rol
out
xor
aaa
loop
negl
jno
sub
or
cmp
mov
subl
incl
lock
xor
mov
aas
fldcw
inc
stc
cmp
push
mov
mov
mov
stos
out
aad
xor
mov
add
add
pop
jl
xchg
arpl
insb
loope
mov
out
int
enter
das
ds
jecxz
push
xorb
jo
rorl
daa
fadds
cwtl
data16
adc
inc
shlb
cmp
sub
popf
rcl
and
or
sarb
jno
mov
mov
push
adc
jle
aam
rcrb
mov
std
mov
or
mov
das
cmp
negl
bound
fildl
jo
pop
fwait
cmpsb
aas
out
inc
cmp
enter
and
cmp
das
xor
pusha
mov
and
addr16
mov
loopne
mov
add
xchg
mov
pop
cmpsl
int3
jl
test
movsb
mov
data16
xchg
dec
mov
cmc
in
lea
cmpsb
adc
jno
pop
jmp
repz
daa
push
aad
imul
enter
pop
ret
ja
add
jbe
rclb
sub
dec
xchg
or
or
xorl
dec
xchg
shlb
xorb
das
add
int3
out
fwait
jno
cwtl
sub
push
push
xor
and
hlt
lret
and
lock
in
xor
add
aaa
or
jle
lods
inc
cs
repnz
inc
jae
cmpsl
fs
cmpsl
adc
shll
leave
in
xchg
gs
ret
mov
lods
outsl
cld
out
rcrb
lret
adc
popf
das
lcall
insl
icebp
cmp
inc
mov
int
jmp
mov
mov
dec
xchg
cld
es
pushf
dec
pop
push
sbb
insl
or
jle
shrl
and
iret
xlat
jbe
add
push
std
push
aas
pusha
jbe
inc
xor
stos
and
mov
popa
lcall
data16
push
call
jge
jns
sbb
shlb
lahf
sbb
push
int3
test
stc
jmp
je
and
pop
xchg
stos
sbb
out
mov
xchg
jge
fldenv
pop
movaps
xor
jno
pop
out
rcrb
and
mov
fdivrs
rolb
cmc
pop
mov
cmp
nopl
hlt
aas
jae
mov
push
jge
sahf
mov
roll
fst
cwtl
test
lahf
jg
jb
hlt
fldt
out
adc
mov
dec
pop
insl
mov
mov
sub
jg
mov
test
jle
in
or
imul
cmp
pop
jecxz
fistpll
jae
push
jno
movsb
sub
fwait
and
jbe
xor
rol
hlt
stos
dec
jae
add
dec
rclb
lods
push
mov
cltd
mov
inc
xor
inc
std
sbb
out
push
mov
das
or
jge
gs
rorb
push
sbb
mul
push
cmc
lret
xchg
rcrl
add
push
xchg
mov
cmpsl
jg
sub
fstpt
fcmovu
out
push
pop
push
jmp
sub
jnp
mul
xor
out
in
sub
outsl
or
sbb
outsl
imul
addr16
mov
hlt
je
cmp
fcmovne
scas
jle
dec
sbb
adc
jns
mov
in
push
xor
lcall
loopne
aas
dec
xor
or
in
mov
insb
int
imul
cs
push
pop
inc
xor
lret
push
jo
stos
fwait
jp
cld
mov
mov
mov
into
flds
xchg
mov
or
outsl
inc
pop
leave
xchg
lea
push
push
pop
rol
addl
repz
inc
lcall
xchg
iret
and
mov
inc
incl
mov
mulb
aam
jbe
in
mov
pushf
push
imul
aas
sti
into
inc
mov
sub
push
pop
mov
xlat
mov
js
inc
cmp
popf
in
imul
je
add
in
rorl
xor
cld
inc
test
sub
mov
fwait
jge
movsb
mov
aam
lahf
jle
push
pop
add
jno
fisubl
out
cmp
inc
sub
test
mov
popf
mov
fsubrs
rcrl
mov
xchg
xor
pop
arpl
jmp
xchg
mov
test
arpl
or
pop
mov
shl
pop
cmp
das
fnstenv
sub
add
fstps
jno
pop
test
fldt
aas
xor
cli
jmp
ss
xor
push
aaa
xor
mov
dec
sub
xorl
adc
inc
movsl
loope
xchg
pop
fwait
ja
jbe
fst
mov
imul
hlt
insl
pop
imul
fdiv
rolb
cmp
push
cmp
push
inc
mov
cmp
mov
sbb
push
mov
mov
sub
mov
mov
adc
sbb
imulb
xchg
ss
aaa
mov
xchg
sbbb
repnz
push
add
push
push
or
and
cs
xor
xor
fcom
jl
std
push
dec
push
sub
fwait
dec
dec
xchg
call
jo
insb
jb
test
fiadds
xchg
add
shrb
pushf
xchg
push
push
loope
cli
sbb
adc
clc
leave
and
gs
rorb
fildl
cmp
data16
lcall
scas
sub
loopne
dec
out
inc
imul
push
pop
rcll
hlt
push
sbbl
cmpsl
sbb
push
lret
jo
ss
xchg
adc
inc
mov
fcoms
loop
incl
xchg
jo
rorl
jge
cmpsl
pop
ret
fdiv
divb
dec
sbb
adc
test
sub
lods
push
jp
mov
mov
rcrb
mov
inc
pop
and
sub
shlb
cmc
ret
repz
scas
xchg
cs
pop
inc
pop
mov
out
mov
and
les
cs
push
dec
es
lahf
cmp
negb
lret
lods
jp
es
int
jmp
and
pop
lcall
add
fiadds
mov
into
xchg
insb
xchg
jge
sub
test
test
cld
jp
pop
test
mov
call
imul
in
adc
push
das
outsb
inc
cmp
cmp
push
and
shll
test
push
and
test
xchg
jecxz
fdivs
pop
push
movsb
adc
and
mov
leave
add
sub
cmp
lods
mov
mov
push
arpl
test
xlat
cld
and
lret
xor
sub
inc
roll
dec
loop
xchg
jbe
push
ret
push
mov
and
lods
stc
cltd
sbb
fsin
pop
cmp
add
push
sbb
rclb
stos
hlt
sub
test
sub
adc
aad
inc
addr16
jecxz
ret
pushw
xchg
fwait
dec
pop
adc
scas
dec
dec
pop
mov
mov
cld
stc
ret
jmp
and
xchg
gs
or
clc
cmp
test
ss
cs
insl
xchg
cmp
cs
sbb
ss
cmpsb
out
repz
in
pop
fnstenv
jg
sub
pop
mov
repnz
adc
jno
push
and
adc
xchg
or
pusha
les
insl
jg
sahf
ljmp
call
lret
mov
test
mov
loopne
sub
sbb
jbe
fmull
xor
movsl
movl
push
mov
sub
in
inc
insb
adc
cli
enter
dec
jnp
ret
test
test
fldl
loope
scas
cwtl
adc
xor
mov
adc
and
aam
inc
push
mov
movsb
insb
rclb
xchg
push
daa
aad
in
cmp
sbb
sbb
add
cs
rcrl
add
jns
daa
jne
test
lods
or
inc
inc
cmpsl
inc
cld
sbb
rorb
jle
shlb
std
mov
mov
mov
add
and
xchg
mov
mov
pop
add
je
scas
inc
sub
idivl
xchg
xchg
mov
int3
or
cs
sub
push
push
flds
loop
rclb
daa
ljmp
push
and
iret
inc
imul
lahf
lods
in
inc
insl
and
xchg
push
push
out
pop
imul
das
inc
pop
jo
jecxz
push
leave
lods
enter
addb
shrb
movsl
ss
jmp
arpl
outsb
mov
aaa
push
in
leave
push
push
xor
lahf
inc
push
adc
cli
xor
psllw
fsts
push
ror
daa
fs
imul
ret
mov
scas
cmp
out
jg
lea
sbb
push
mov
mov
pop
xchg
pop
sbbl
dec
lods
cmp
mov
pushl
inc
mov
or
aam
mov
scas
push
or
jge
add
dec
shrb
add
dec
adc
xchg
and
shrb
ret
fisubs
jl
loop
sbb
test
imul
in
jns
jae
xchg
push
idivl
cmp
lds
fistpll
lds
mov
bound
add
adc
mov
xchg
stos
imul
or
repz
clc
les
jns
xchg
lahf
insb
pop
jns,pt
pop
rorl
xchg
subl
cmp
sbb
or
mov
out
dec
leave
lock
push
push
cltd
xchg
movsb
cwtl
stc
lret
add
push
push
or
fmuls
jb
mov
sahf
add
jb
int3
cmp
imul
mov
sbb
mov
fxch
movsl
pop
inc
inc
fnstenv
incl
leave
xlat
js
inc
mov
inc
nop
cli
popa
dec
ret
fidivl
aaa
js
cld
jns
insl
jnp
inc
jecxz
sub
and
xchg
arpl
pop
pop
pop
adc
push
pop
aam
add
leave
lea
out
mov
push
cmp
cmp
out
jmp
gs
cmp
dec
adc
lds
jmp
adc
cmp
push
shrb
es
lods
shr
aad
mov
lds
popa
rcr
adc
out
add
sub
sahf
push
daa
sub
and
loopne
jns
imul
push
push
addr16
pop
ds
rcrl
clc
in
int3
cmp
inc
int3
add
repnz
fiadds
add
and
aam
dec
inc
and
movsb
xchg
enter
daa
movsb
lock
xchg
sub
pop
xchg
inc
pop
js
repz
repz
lods
clc
dec
sub
mov
mov
dec
cwtl
xchg
insb
pusha
jns,pn
scas
negl
arpl
xchg
les
loopne
jmp
es
ss
cs
addr16
jge
cld
fldenv
subl
mov
inc
adc
and
mov
lret
add
inc
mov
icebp
outsb
add
add
xchg
jns
loope
std
sar
adc
out
pop
push
lahf
mov
das
in
cmp
pop
int
in
mov
dec
loop
mov
movsb
das
mov
sub
jno
or
outsb
inc
js
pop
fstpl
pop
dec
mov
loop
inc
and
repz
mov
pop
loop
popf
fldenv
data16
or
mov
inc
push
lods
sbb
pop
pop
cmp
mov
rcll
scas
mov
out
js
je
cmovl
lret
cmpsb
fnstenv
loopne
jno
jp
clc
fldt
jns
and
rclb
xor
je
rcll
in
xchg
lods
inc
cmovg
cltd
int
xor
cmp
xor
fisubrl
nop
inc
cli
sub
pop
lods
nop
xchg
sub
jb
addl
mov
imul
mov
inc
pop
sahf
cmpl
sbbb
and
loopne
rcrl
das
cmp
out
cmp
and
out
mov
ds
mov
enter
xor
xchg
jg
sbb
inc
movsb
mov
in
imul
imul
cmp
and
ljmp
cmp
daa
fs
push
xchg
mov
pop
jmp
test
pop
pop
push
in
lret
rorb
sbb
out
push
or
inc
mov
inc
out
mov
sar
xlat
push
mov
fwait
dec
adc
sub
inc
and
fiadds
jle
xor
test
repnz
or
dec
sub
call
sbb
outsb
test
cmpb
loopne
imull
and
xor
mov
cmp
sbb
jp
bound
loop
xchg
insb
jo
ljmp
lods
nop
dec
inc
xlat
push
das
add
mov
mov
aas
leave
in
jmp
jnp
daa
shlb
clc
scas
or
pushl
movsl
xchg
in
leave
cli
insl
addr16
mov
mov
shl
lret
loopne
inc
and
jecxz
mov
inc
sbb
mov
jl
jp
push
inc
pop
xchg
lods
ror
pop
adc
fstp
arpl
jnp
adc
sub
mov
cld
dec
inc
lock
out
mov
bound
lock
mov
push
dec
pop
jnp
icebp
cmpb
adc
in
shlb
xchg
cs
fstp
jnp
outsl
jg
outsb
push
sahf
cld
lret
push
push
frstor
testb
mov
push
repnz
inc
sbb
sub
into
mov
mov
or
sub
adc
fwait
ljmp
in
lock
or
jno
out
sbb
jg
stos
fwait
notb
pop
pop
test
and
jle
lahf
inc
divl
sub
and
pop
insb
je
fwait
xchg
pop
cmc
test
xor
jg
xchg
jp
repnz
cmp
xor
cli
xchg
sahf
pop
gs
pop
cwtl
outsl
ljmp
insb
aaa
getsec
mov
outsl
sub
sub
jns
mov
out
es
add
icebp
or
movb
pop
mov
mov
call
loopne
imul
cmp
sbb
int
pop
repz
std
stc
xor
int3
aas
dec
jl
adcl
push
int
clc
imul
insl
xchg
cmp
xchg
test
mov
push
sub
pop
push
add
mov
ret
jb
aas
add
insl
daa
cltd
push
mov
rcr
dec
jecxz
aas
loop
dec
xchg
mov
int3
mov
cmp
cmp
sbb
pop
gs
insl
sub
fnstenv
xchg
cmp
ret
pop
test
lods
push
test
mov
jb
jbe
pusha
pop
js
insb
test
scas
fidivl
push
scas
and
out
out
sub
inc
mov
add
fnstcw
dec
arpl
pop
xchg
cs
cmp
cmc
out
sub
leave
dec
push
mov
lods
xor
cmp
fiadds
lahf
js
test
cwtl
pop
jl
shrl
inc
call
and
into
dec
cwtl
ds
jns
pop
xchg
sbb
adc
cmp
icebp
sbb
inc
stos
lds
xlat
fstp
lds
data16
call
mov
push
dec
jl
mov
sbb
sbb
mov
stos
jb
test
jae
cld
dec
call
mov
mov
jmp
repz
fbstp
pop
sti
lods
pop
idivl
dec
mov
cltd
fsubrl
frstor
insl
inc
hlt
sbb
jns
iret
lock
xchg
mov
mov
push
and
sbb
insl
dec
int
adc
pop
pop
adc
popf
je
in
cmp
orb
outsl
inc
adc
sbb
ljmp
push
adc
testb
enter
dec
dec
in
ds
test
outsl
add
xorl
adcb
test
fnsetpm(287
out
aad
stos
push
adcl
push
jmp
mov
loope
call
mov
push
fiadds
sub
fisubl
push
adc
inc
sub
jl
sbb
lahf
outsb
cmc
je
fiadds
cmp
mov
or
and
xchg
sarl
stos
outsb
subb
dec
xchg
sbb
test
xor
dec
imul
xchg
push
mov
jle
cmp
mov
cmpsb
stos
outsl
sahf
or
pop
jl
push
aaa
sahf
jne
cld
xor
jnp
fistl
gs
pop
jmp
or
sub
add
out
ret
cmp
test
in
and
cmpsl
std
and
sub
loope
and
movsl
jne
mov
jo
mov
mov
in
push
sti
fsubrs
cmpsb
stc
in
imul
xor
inc
xor
in
cmp
add
fistpll
dec
shlb
pop
in
out
mov
push
shrl
xchg
mov
xor
mov
data16
sub
in
scas
icebp
pop
int
out
dec
loopne
cmp
xchg
incl
mov
les
idivb
cmp
cltd
out
or
pop
mov
and
inc
stos
in
push
rcll
xlat
outsb
push
xor
xchg
cmpb
xlat
adc
std
outsl
lods
add
xchg
outsl
xlat
pop
cwtl
mov
lea
xor
dec
dec
testl
sbb
jmp
and
or
inc
hlt
std
or
std
cmp
aam
sbb
sub
mov
fldl
daa
cltd
xchg
mov
jle
push
mov
xchg
sarl
clc
sbb
xor
test
int
inc
mov
mov
sahf
dec
adc
fstpl
push
sub
loope
xor
neg
or
in
sbb
dec
push
sbb
dec
pop
pop
push
dec
sbb
idivb
mov
imul
test
mov
data16
and
push
pop
dec
insl
out
int
cld
or
fs
js
jbe
lret
sbb
mov
ficomps
bound
notl
xor
push
dec
test
mov
loope
xor
mov
aaa
mov
pop
cmp
sub
aam
jmp
inc
lods
sbb
or
mov
add
push
sbb
inc
popa
add
dec
out
nop
sar
adc
stos
or
jns
lret
dec
adcb
out
mov
ljmp
pop
jns
arpl
popf
sub
add
lret
loopne
test
popa
je
leave
pushf
and
cli
lds
mov
outsl
cli
fcomp
mov
jo
add
mov
push
frstor
fdivr
outsb
dec
mov
decb
js
xchg
js
lock
pusha
sub
or
es
add
loop
stc
pusha
xor
pusha
pop
lahf
imul
xor
mov
pusha
pusha
mulb
iret
movsl
neg
or
mov
jbe
xor
cld
out
dec
ret
bnd
mov
inc
mov
in
jge
test
scas
icebp
testl
orl
sbb
mov
push
push
fstps
mov
or
pop
ss
lea
lds
int3
stos
inc
add
mov
je
out
ret
fstpl
sub
popf
sbb
insl
int
fisttpll
cmp
popf
or
dec
fstpl
sub
popf
sbb
insl
int
fisttpll
cmp
popf
or
dec
fstpl
sub
popf
sbb
insl
int
fisttpll
cmp
lahf
or
jg
dec
fstps
das
mov
popf
dec
adc
addr16
fnstsw
fidivl
bound
mov
stos
jl
or
outsb
mov
mov
cmp
in
sub
cmp
lods
jnp
mov
stos
jl
or
sbb
sub
cmp
int3
or
sbb
dec
pushf
pop
lods
imul
stos
movsb
mov
xor
cmp
test
incl
pop
cltd
cmp
sbb
aas
clc
push
loopne
and
adc
sbb
call
out
dec
mov
jno
leave
dec
pushf
subl
mov
inc
and
pushf
and
out
repz
add
jae
rcl
imul
sahf
sbb
pop
push
lds
jp
lret
fsub
stc
cs
sti
pushf
dec
fldcw
xchg
cmpb
xor
mov
sbb
roll
cmp
int
fmull
push
sbb
mov
push
addr16
jge
inc
lock
xchg
and
adc
lods
in
dec
pop
sbb
xlat
mov
push
push
push
sub
stos
or
add
fcom
and
jle
hlt
fmuls
gs
or
add
jnp
mov
fwait
insb
stos
jl
call
jmp
sti
or
inc
sbb
dec
xchg
pop
sahf
imul
in
add
arpl
mov
addr16
jb
inc
cltd
push
es
jmp
cmp
push
stos
sbb
cmc
flds
ja
jge
push
cmc
and
xor
push
std
adc
or
cmpsl
sbb
sub
cmp
int3
or
sbb
sub
cmp
mov
fwait
insb
stos
jl
or
sbb
sub
cmp
int3
or
sbb
sub
cmp
mov
mov
push
hlt
int
mov
das
fisttps
gs
jne
sbb
ja
sub
shll
adc
push
ljmp
leave
subb
movsl
inc
outsb
sub
loope
xorb
insl
and
addl
icebp
xor
js
xchg
icebp
das
push
jae
push
gs
xlat
sbb
xchg
mov
inc
std
mov
push
aad
stos
mov
cs
cmp
daa
popa
cs
fidivrs
jge
in
inc
lret
or
rcrl
adc
je
jmp
imul
push
sbb
insb
into
out
nop
cwtl
ljmp
mov
ret
cmc
lods
insb
pop
jecxz
mov
mov
in
mov
inc
popa
mov
rcll
mov
dec
mov
xchg
jbe
push
pusha
outsb
cs
and
dec
push
adc
jle
das
push
cwtl
xchg
cltd
loopne
xlat
jp
jb
xor
mov
sbb
jmp
jmp
lds
outsb
jns
and
pop
loop
dec
mov
fldt
pop
stos
dec
jno
pop
pushf
fwait
inc
lods
adc
jecxz
dec
inc
push
outsb
daa
xchg
mov
cmpsl
mov
sub
pop
nop
pop
dec
adcb
pop
jne
in
jae
pusha
mov
aaa
mov
mov
jecxz
push
aas
xorl
mov
ljmp
jecxz
stos
enter
fistpl
jno
add
mov
daa
rorl
test
xor
sub
sbb
push
movsl
push
mov
jne
jbe
out
pop
rcl
jmp
shlb
mov
scas
sbb
xchg
mov
pop
leave
cwtl
push
leave
pop
lock
gs
mov
jp
les
cmc
loope
ljmp
ret
jns
jne
mov
js
xchg
jno
sub
push
stos
ds
repnz
lods
aaa
popa
add
lcall
pop
into
imul
sahf
cltd
pop
in
push
fsub
pop
adc
fwait
sahf
or
sti
push
stos
mov
jnp
or
test
orl
pushf
sbb
adc
or
add
jle
mov
jb
add
scas
jne
mov
or
pop
les
movsb
sub
dec
adc
ret
mov
lahf
or
sti
mov
xchg
xor
xorl
xor
data16
mov
daa
pop
fs
popf
xorl
cmp
dec
lcall
cwtl
jae
sub
sbb
cmp
scas
fstp
adc
montmul
cmpsb
xchg
cmpl
cmp
sbbb
testb
jle
lahf
adc
psllw
shrl
fildll
and
addr16
test
repz
add
mov
ret
pop
sub
dec
es
dec
cwtl
or
dec
xor
stos
js
in
add
dec
or
or
scas
cmp
ds
dec
jecxz
dec
mov
add
dec
or
lret
icebp
enter
sbb
mov
jl
bound
inc
and
jecxz
fcmovnb
push
movsb
xchg
in
xor
push
push
test
insl
bound
sbb
imul
xor
cmc
sbb
sub
jns,pt
popa
clc
aam
push
push
std
aaa
movsb
mov
cmpb
imul
lret
adc
lods
push
pop
sbb
jge
pop
and
xchg
xchg
xor
repz
lock
push
mov
xchg
and
xchg
jmp
inc
cmp
fildll
sbb
xchg
in
or
fidivl
xchg
sbb
call
xchg
outsl
jmp
cmp
mov
ds
int
sub
sbb
jecxz
add
mov
es
imul
shlb
mov
or
jns
imul
or
int
out
mov
fnstcw
lock
in
inc
inc
repnz
dec
addr16
rolb
pop
loope
cmp
fwait
jb
sub
int3
daa
outsb
cmpl
xor
jg
lds
rcrb
mov
mov
dec
push
push
lods
faddp
sarl
iret
loopne
mov
ja
sti
js
in
sub
into
or
lret
xor
and
jp
cmp
adc
inc
cs
or
pop
xchg
and
lret
sub
loope
sarb
fwait
test
icebp
sbb
sbb
fcoml
xor
add
adc
xlat
jae
idiv
in
lret
mov
insb
mov
popf
and
dec
andb
jnp
icebp
mov
sbb
xchg
dec
into
out
xor
das
push
inc
push
testl
jnp
jle
cmp
lahf
push
inc
shlb
adc
shll
cmp
mov
mov
out
inc
and
sarl
xchg
movsl
movsl
shlb
push
mov
mov
and
jne
inc
fadd
mov
stos
pop
fwait
push
xor
test
xchg
outsl
pop
or
pop
int3
sub
negb
push
test
sub
xor
mov
push
jecxz
js
loopew
sub
mov
shr
sbb
bound
ret
push
jp
stos
and
popa
adc
lods
add
lcall
dec
mov
mov
jno
fcmovnbe
mov
add
cmp
dec
jo
sarl
cmp
mov
rorb
mov
sbb
add
in
out
and
jle
cmp
clc
popa
jno
cmp
or
mov
xchg
add
push
mov
xchg
jae
shll
popa
push
cmp
add
in
ficoms
les
dec
inc
adc
scas
aam
andl
jbe
jg
sub
push
imul
inc
xor
notb
jno
aaa
notb
sub
fwait
ds
repnz
hlt
and
add
xor
and
mov
push
push
add
sbb
push
mov
push
push
mov
gs
cli
cmp
and
into
push
xchg
jns
jecxz
fscale
sbb
and
jp
xor
popa
mov
stos
jmp
mov
xchg
gs
xor
push
fists
in
jp
sarl
adc
xor
cld
pop
pop
popa
mov
xchg
repnz
clc
cwtl
fnstenv
sahf
nop
xchg
fstps
jmp
data16
ljmp
call
xor
push
push
inc
push
or
jge
lock
loop
test
xchg
imul
cmp
cld
ljmp
fisubrl
jmp
movsl
hlt
lds
sbb
int
dec
jmp
dec
push
adc
push
and
sub
inc
mov
mov
call
push
jmp
orb
cld
sti
jmp
and
pop
nop
lods
mov
movsl
adc
ficoml
mov
sti
mov
test
fs
dec
inc
lods
xlat
adc
sbb
pop
int
cmpsb
out
lods
add
mul
testl
mov
add
fcmovne
push
jae
repnz
inc
inc
inc
push
dec
mov
dec
shlb
adc
sbb
fwait
jmp
in
mov
fmull
mov
pop
shr
or
pop
jo
lods
cmpsl
mov
adc
xor
mov
subb
xchg
mov
lret
mov
fwait
std
pop
lret
fbstp
pop
mov
aad
clc
lods
mov
inc
xchg
jbe
mov
loope
pop
enter
into
mov
repnz
test
jne
sbb
ret
cs
js
lock
sbb
lods
and
das
cmp
mov
loopne
xor
lea
or
xchg
iret
mov
sti
shrl
imul
cmp
mov
cmp
jge
add
shlb
repz
jns
dec
es
jl
mov
ljmp
es
adc
mov
stc
jl
fiaddl
mov
xchg
ret
xchg
add
stos
cmpsl
cwtl
cmpsl
mov
testl
cmpsl
fistps
f2xm1
incl
mov
das
lods
loope
mov
aas
sbb
dec
pop
outsb
inc
ds
cmp
scas
mov
add
inc
mov
jb
add
and
pushf
dec
sub
int
stc
aad
pop
loope
push
test
out
dec
xor
imul
add
adc
inc
add
and
or
xchg
insl
insb
mov
mov
test
add
cmpl
push
add
push
add
push
xor
lea
xor
je
mov
pop
dec
je
mov
cmpl
popf
lret
icebp
popa
subb
mov
and
les
dec
cmp
das
jbe
xchg
adc
gs
xor
jbe
cmp
imul
push
fs
mov
lahf
loop
aam
mov
mov
sbb
stc
lret
roll
and
xor
adc
ret
mov
in
arpl
xlat
in
cld
dec
imul
cmp
mov
push
adc
subl
cmp
setb
repz
push
sub
jnp
inc
sub
mov
movsl
pop
push
icebp
imul
push
js
lds
adc
fdivl
lahf
int
iret
xchg
lret
mov
push
out
add
pop
sarb
push
repz
jnp
out
in
ret
adc
adc
sbb
lcall
loope
data16
mov
repnz
jnp
gs
push
fisubs
insb
add
in
push
jns
or
cmp
std
jo
aaa
adc
sbb
lea
sub
pop
pop
and
sub
push
in
push
xor
push
insl
mov
mov
or
lea
nop
adc
pop
xchg
adc
test
popf
jnp
loop
xchg
out
push
call
fs
in
add
push
sti
arpl
imul
mov
cli
mov
dec
sub
xor
lret
rol
sub
hlt
insl
movsl
xor
popf
stc
scas
insb
mov
sub
lea
clc
jle
xor
hlt
mov
adc
xor
xor
or
into
dec
sbb
and
pop
cwtl
icebp
lods
leave
push
lret
insl
pop
inc
xor
insl
mov
test
addl
or
xor
cs
mov
jle
call
fsubrl
insb
insl
jno
ret
dec
cld
dec
hlt
pop
cmc
dec
sub
int3
lds
push
mov
scas
push
dec
aam
lea
icebp
push
int
pop
and
movsl
mov
or
add
xor
lret
addr16
ljmp
bound
je
les
adc
ret
cmp
push
pop
xchg
or
and
dec
sub
decl
outsb
loop
insl
mov
lea
push
adc
mov
or
dec
in
clc
insb
mov
daa
push
inc
lods
xchg
es
mov
shll
lcall
dec
push
movl
pop
addl
xchg
out
andl
lret
jnp
inc
aad
mov
in
or
mov
out
and
pop
scas
out
xor
sahf
cmp
ja
push
cld
push
inc
xor
gs
jecxz
arpl
pusha
jns
btc
xchg
pusha
cwtl
in
mov
xor
adc
je
add
stos
lock
push
pop
les
sub
imul
pop
mov
mov
push
mov
or
inc
ljmp
aaa
imul
pop
cmc
jg
mov
cmp
aad
inc
xchg
mov
and
cmpb
dec
pop
ficompl
dec
fdivl
test
jnp
arpl
subb
or
or
inc
dec
ljmp
add
hlt
ss
lcall
loopne
push
mov
pop
popa
leave
insb
in
adc
imul
xlat
clc
hlt
push
xor
out
ficompl
xor
mov
ret
in
sbb
xchg
and
sbb
xchg
xor
enter
sub
jns
cmpsl
mov
or
lcall
xlat
cld
push
or
dec
mov
lock
aad
pop
repz
dec
shll
stc
loop
cmc
dec
fnstcw
xchg
inc
jecxz
loop
fldcw
xchg
cmp
pop
jecxz
sub
ficoms
fxch
test
push
xor
int
jmp
dec
ja
out
cltd
xchg
sbbb
jmp
jns
icebp
jbe
out
jg
lahf
jp,pn
sbb
adc
push
scas
loop
mov
push
pusha
inc
pop
jge
cmp
add
pushf
test
cmp
pop
bound
jle
xor
or
gs
jno
adc
ja
adc
shl
imul
mov
xchg
pop
sub
cmp
arpl
mov
jmp
mov
jle
inc
pop
dec
push
mov
cmc
mov
loop,pt
inc
push
pop
stc
gs
lahf
movsl
or
mov
push
cli
push
add
xchg
hlt
mov
inc
das
sarb
lcall
sub
xor
sarb
push
ss
dec
sub
mov
sub
and
pop
divl
in
jp
outsl
push
push
ja
jb
fdivl
pop
jle
dec
pop
pop
sub
cwtl
push
loope
pop
xlat
fscale
out
cmp
mov
je
lcall
pop
fcomip
loop
xor
mov
mov
arpl
lods
mov
sub
std
pushf
xchg
test
mov
pop
inc
outsl
jp
ror
or
pop
xchg
mov
ret
push
inc
subl
jp
popf
imul
fstpt
push
andb
dec
aaa
dec
pop
jb
pushf
adc
adc
fstps
cli
lret
push
out
inc
dec
pop
dec
xor
mov
inc
cmpsb
hlt
scas
ljmp
test
shrl
pop
pusha
jp
out
jno
xor
clc
mov
mov
push
sub
pop
mov
mov
movsl
xchg
or
mov
dec
push
jae
faddl
sub
cmp
pop
lret
inc
clc
jo
mov
pop
push
ret
ljmp
push
mov
addr16
ds
mov
jp
adc
test
xchg
pop
and
xlat
out
iret
sahf
cmc
lret
ret
outsb
out
out
lea
add
dec
or
xchg
and
mov
sub
push
add
xchg
sbb
sub
or
mov
ljmp
cwtl
push
sbb
int
imul
and
mov
pop
lcall
push
pop
dec
mov
jnp
ret
aam
jnp
jo
fcompl
aaa
jb
cmp
or
imul
out
stos
xchg
pop
cmp
test
pop
ret
and
clc
outsl
insl
or
xor
repnz
push
movsl
cmp
mov
iret
test
dec
mov
sbb
gs
jns
xor
sbb
mov
and
xchg
into
xchg
dec
fmuls
or
mov
or
inc
mov
in
adc
lret
in
outsl
loopne
and
loop
mov
sarb
sbb
in
loope
sti
cmpsb
not
pop
rcl
shrb
mov
mov
add
mov
stos
out
sbb
shl
nop
jb
mov
fsts
sbb
jge
sbb
pop
xchg
sub
mov
ja
das
scas
sbb
jmp
cwtl
daa
sbb
add
or
pop
jl
adc
fistps
fsubs
movsb
sub
mov
mov
cmp
add
cmp
pusha
popa
adc
icebp
icebp
dec
sbb
jle
or
stc
ret
lahf
cmp
or
repnz
out
in
add
sbb
and
fsubr
pop
popa
mov
dec
xchg
fbstp
adc
fnsave
fidivrl
mov
jmp
sub
push
ret
xchg
fstpt
push
sti
push
fstl
push
loop
mov
adc
dec
imul
cli
addr16
std
popa
icebp
dec
dec
inc
xchg
push
out
sbb
inc
jne
xor
and
mov
call
and
test
add
aaa
pop
in
adc
xchg
xchg
xchg
adc
inc
inc
cmc
jmp
repnz
lret
cmp
incb
lret
aam
ja
lret
daa
push
data16
lahf
inc
jmp
push
scas
aaa
scas
and
push
cwtl
insl
jns
sub
mov
xor
push
mull
loope
sub
mov
mov
adc
xchg
cmp
rorb
aad
mov
cmpb
lds
xorl
push
es
cli
sub
arpl
ret
jl
xorl
clc
jns
inc
lods
mov
loop
addb
cwtl
xor
jo
in
mov
test
cmpsl
lock
sub
imul
shlb
iret
add
enter
adc
pop
in
and
lret
xchg
sar
mov
jp
cld
xchg
pop
in
daa
pop
jle
mov
pop
xchg
pusha
cwtl
je
push
or
xchg
jnp
lcall
lret
xchg
xor
mov
mov
sbb
test
nop
cmpsb
pusha
mov
int3
sub
add
dec
add
jb
sub
lahf
in
mov
aam
sub
xor
mov
sbb
push
mov
aas
mov
insb
in
xchg
pop
sbb
out
and
fwait
jae
or
out
mov
mov
frndint
int
fucomip
loopne
dec
mov
icebp
push
inc
cld
sbb
sub
xor
push
loope
xor
adc
mov
jo
mov
jno
mov
out
mov
xor
mov
xchg
dec
add
push
xor
push
scas
jl
das
fldt
ret
inc
rcrb
jge
xchg
je
adc
int3
cmpsb
in
push
sbb
fldenv
mov
lahf
repnz
pop
push
in
imul
fmul
ret
es
in
sarb
push
mov
sbb
xchg
cmpsl
inc
cmp
jno
pop
rcll
and
aad
mov
mov
stc
adc
add
cli
inc
daa
jp
or
loopne
ljmp
xchg
push
xor
push
lret
sub
es
es
repz
jmp
fbstp
mov
inc
enter
push
cli
pop
int
stc
cmc
les
lcall
lods
and
jns
push
in
push
ficomps
movsl
dec
iret
xchg
neg
inc
mov
aam
push
out
js
outsb
pop
scas
push
jl
mov
push
in
cmpsb
shl
iret
and
dec
inc
mov
xchg
pop
popa
inc
lret
or
out
sbb
fs
ret
add
or
aas
lods
sahf
outsb
add
jge
scas
or
add
cs
call
and
and
cwtl
notb
es
aam
mov
mov
cmp
add
dec
cwtl
filds
push
jbe
adc
mov
or
mov
cmp
leave
mov
jl
sahf
fcmovne
lahf
jl
lahf
aad
add
cld
xlat
jbe
pusha
pop
jo
add
push
popa
xchg
xchg
push
push
push
repz
clc
jle
pop
ror
push
loope
in
mov
inc
mov
out
mov
pop
stos
loope
jle
inc
fidivrl
fstl
add
dec
addr16
push
push
fwait
mov
hlt
inc
ret
dec
xor
jns
scas
xchg
sbb
inc
mov
xchg
ret
push
js
gs
inc
jbe
push
jge
xor
in
cmp
popf
adc
push
sub
sub
inc
movsb
pop
out
nop
jl
and
pop
popf
int
sahf
jle
jmp
shrl
shll
ds
inc
or
push
inc
cs
cwtl
lock
aas
leave
aad
insl
xor
xchg
fucomip
lcall
jne
fistps
xor
imull
mov
push
pushf
cld
shlb
cmp
leave
mov
mov
lahf
mov
adc
jae
aas
in
sbb
popa
cmp
pop
lods
cmc
xor
or
push
xchg
lods
sbb
sub
pop
and
inc
je
push
sub
cmp
dec
mov
insb
and
enter
push
xchg
fnstcw
mov
aas
add
jne
iret
mov
psrad
pushf
cld
leave
xor
jecxz
push
sahf
or
cli
in
xchg
lahf
sbb
movsl
test
popf
sub
dec
bound
enter
loopne
iret
iret
daa
adc
test
outsb
sbbl
cltd
ss
xor
lret
dec
or
mov
sbb
std
ret
pop
mov
sbbl
mov
stos
aam
icebp
pop
pop
outsl
fsubrl
test
cmp
pop
cmp
xchg
xchg
sti
insl
push
pop
enter
pop
shll
xor
sub
sbb
bound
adc
loopne
popf
mov
sbb
cmc
rorl
mov
aas
sti
movl
fwait
sub
sbb
sub
cmp
int3
or
sbb
sub
cmp
mov
fwait
insb
stos
jl
or
sbb
sub
cmp
int3
or
sbb
sub
cmp
mov
fwait
or
jl
pushf
lret
sbb
sub
cld
sti
int3
or
sbb
cld
cmp
push
jnp
mov
fwait
ss
pop
mov
sub
mov
mov
sub
dec
sti
ret
adc
push
xchg
inc
test
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
das
fidivrl
ljmp
adc
outsl
ficomps
scas
pop
mov
or
sbb
iret
cmp
lret
aas
jmp
cli
pop
mov
jg
dec
mov
fisttps
jp
or
sbb
sub
fidivrl
ljmp
jg
dec
mov
mov
imul
fisubl
pusha
stos
dec
add
mov
xor
fisubrl
sbb
sub
sbb
lahf
imul
pop
aas
inc
movsl
inc
xor
in
and
fldt
mov
adc
dec
push
or
dec
test
out
fidivrl
test
cmp
mov
mov
jg
sarb
imul
ljmp
push
aaa
iret
and
loopne
outsb
xchg
push
pop
mov
call
pop
pushl
scas
xor
push
xor
jg
push
push
repnz
cmp
fimull
jle
sbb
sub
cmp
xchg
das
fidivrl
ljmp
jg
dec
mov
mov
or
sbb
sub
cmp
xchg
jbe
add
jg
add
mov
call
fnstcw
push
mov
dec
sahf
xchg
das
cltd
cmp
out
daa
sbb
xlat
aaa
lret
pop
lock
mov
jp
and
insb
mov
jp
outsl
lcall
scas
pop
mov
or
sbb
sub
cmp
lret
aas
ljmp
jg
dec
mov
mov
or
sbb
sub
cmp
lret
jbe
mov
xchg
ret
fdivs
dec
cltd
pop
dec
add
jmp
sbb
cli
xor
sahf
mov
add
add
mov
ljmp
mov
mov
out
mov
cmc
andb
sbb
in
hlt
loop
ljmp
mov
shrl
or
in
fildll
or
dec
push
addr16
les
aas
in
push
pop
and
or
or
iret
and
pop
out
push
in
add
cmp
lea
sub
loope
xchg
mov
subb
pop
shrb
mov
outsb
adc
xor
xorb
cmc
aas
dec
stos
xchg
hlt
cmp
icebp
cltd
clc
add
adc
xor
scas
js
in
repnz
scas
into
ljmp
jmp
in
push
fs
bound
push
imul
xlat
jg
ret
and
loope
ret
xchg
or
mov
push
mov
pusha
stos
sub
mov
jnp
add
aad
je,pn
xchg
add
rcr
and
in
loop
loop
sbb
ja
insb
pop
lcall
nop
jge
fsts
jp
mov
mov
xor
fs
cmpsl
xchg
mov
mov
add
adc
add
cmp
or
lods
cmp
rcl
loope
dec
sub
scas
add
in
aas
lea
and
dec
jns
into
sub
or
pop
dec
out
ja
fisubs
cli
jmp
mov
xchg
fnsave
stc
ret
cltd
icebp
adc
mov
pop
and
or
or
orl
jmp
jb
jp
stc
imul
sbbb
pop
pop
cmp
lods
sbb
das
iret
stos
sbb
inc
sti
stc
sbb
test
mov
les
jnp
filds
pop
shlb
sub
rolb
out
xorb
dec
cmc
daa
mov
sub
pop
popa
lcall
mov
pop
dec
aam
lcall
aad
popa
add
mov
mov
ss
xor
fs
in
xchg
sbb
jae
and
in
mov
stos
out
sub
out
gs
pop
adc
xchg
imulb
shl
mov
add
scas
cmp
jle
lahf
adc
jno
aad
mov
xchg
xor
dec
jb
mov
pop
repnz
push
mov
aad
adc
push
addl
scas
ss
mov
sbb
xor
out
add
out
mov
dec
lret
cmc
jmp
aad
xor
cmp
addl
mov
stos
repz
inc
xor
pushf
cmp
pop
add
dec
fdivrs
test
scas
or
lock
xchg
fstpt
sti
repz
cmpb
lods
repz
mov
int
cs
in
xchg
repz
adc
mov
fcomps
xchg
mov
leave
inc
jmp
jnp
cmpl
adc
xor
rclb
mov
xor
push
stos
pop
xor
jmp
inc
xor
andps
stos
xor
hlt
sub
mov
sub
mov
mov
push
imull
test
jecxz,pn
lods
xchg
repnz
jle
daa
cltd
add
mov
mov
mov
out
xchg
or
mov
mov
push
pop
dec
dec
movsl
sub
add
data16
dec
and
mov
adc
bnd
mov
mov
nop
imul
xor
jb
cwtl
pop
cmp
mov
mov
mov
fwait
push
hlt
les
mov
push
arpl
sbb
mov
outsb
pop
es
movsl
xchg
shl
adc
scas
sub
add
mov
addb
in
lahf
shl
inc
adcb
dec
lret
movsl
pusha
paddq
inc
outsl
out
lds
cltd
push
test
es
jbe
adcb
inc
fcomi
movsl
sub
aaa
stos
sbbb
pop
xlat
arpl
cmp
pusha
push
outsb
mov
dec
mov
mov
scas
inc
mov
jge
mov
mov
or
popa
fnop
mov
jo
mov
cmp
cmp
dec
out
les
pop
loope
xor
bound
sub
movd
loopne
lcall
push
pop
mov
aad
mov
lret
xchg
cs
out
hlt
push
cld
std
lret
pop
mov
sti
sub
dec
mov
cs
jno
jmp
pushf
leave
push
repz
sub
pop
call
addr16
mov
dec
mov
pop
adc
rol
dec
mov
mov
insl
imul
popa
xor
bound
xor
test
jmp
in
cld
test
popf
sbb
scas
movsb
inc
mov
stos
adc
inc
es
mov
xor
pushf
mov
mov
inc
sbb
fwait
jmp
int
repz
ljmp
mov
xlat
xor
jmp
inc
xchg
lret
fsubrs
imul
je
cmc
jae
js
out
pop
dec
fs
inc
adc
xor
lahf
pop
push
call
xchg
push
in
pop
leave
adc
mov
mov
lock
test
outsb
sbb
mov
pushl
sarb
add
xor
clc
cmp
inc
and
mov
dec
cli
mov
aad
push
cmp
cmp
cmp
jae
cmp
loop
addr16
fmuls
sub
push
cmp
xor
push
jl
or
add
sub
out
sbb
divl
mov
mov
jo
loop
mov
outsb
test
xchg
ss
xor
or
mov
int
sti
adc
sub
out
fadds
add
and
add
cmp
pop
adc
dec
jbe
ss
rorl
mov
pop
cmpsl
push
adc
adcb
dec
mov
cmp
mov
in
popf
enter
jne
pushf
pop
fdivr
movsl
fisubrl
loopne
mov
xchg
shr
xor
cmc
fadd
adc
xchg
ret
mov
jp
inc
popf
mov
adcb
dec
add
cmp
ja
imul
iret
fidivrl
mov
js
sbb
ss
lock
mov
cmp
rcll
mov
lcall
xchg
mov
or
out
jecxz
xor
push
jmp
fwait
loopne
cltd
pop
mov
insb
jne
mov
pusha
lret
pop
mov
scas
pop
inc
jb
lea
mov
push
xchg
jle
xor
xor
jbe
mov
js
xchg
outsl
push
adc
test
or
fsubs
test
movsl
fcmovbe
mov
xchg
outsl
adc
lret
cmp
lds
testl
outsb
outsb
nop
push
lret
loopne
adc
dec
inc
add
or
mov
xor
lds
pusha
mov
fdivrl
xor
in
into
sbb
insb
dec
hlt
ljmp
daa
push
xor
decb
imul
aaa
mov
push
orl
xor
arpl
and
fsubrs
aad
lds
iret
out
lea
std
push
mov
fdiv
adc
andl
and
push
or
push
push
xor
fcomps
push
mov
aaa
xchg
xchg
sbb
pop
sub
dec
jb
daa
mov
pop
pop
ds
add
call
rep
test
mov
xchg
jl
test
cmc
outsl
or
cmp
xor
std
std
push
mov
iret
sbb
dec
adc
js
in
insl
popl
xor
ss
mov
xor
xor
pusha
sbb
push
inc
mov
xor
adc
cmpb
frstor
cmp
and
incb
mov
popf
stc
xchg
inc
stos
inc
aas
enter
push
dec
sbb
les
inc
test
mov
ret
lods
jb
or
rol
mov
ret
mov
out
cli
or
pop
stc
repz
inc
sub
inc
or
lds
cmp
jnp
mov
push
mov
pop
mov
jbe
aas
inc
test
xlat
push
sub
enter
in
push
push
bound
xor
inc
test
lcall
jne
cmp
inc
in
inc
nop
bound
sbb
in
addr16
hlt
test
mul
cli
dec
cld
mov
cmp
jo
xchg
pop
rcrb
pop
inc
aas
adc
pop
insl
and
cmp
pop
xchg
mov
cmp
push
xor
pop
jge
mov
mov
jl
bound
xor
fistpll
push
pop
mov
mov
pop
cmp
js
fnsave
shll
insb
leave
xchg
nop
cwtl
cmp
sahf
outsb
es
cmpsl
push
js
out
push
mov
dec
clc
dec
bound
loop
and
ds
pop
pop
cli
shll
negl
pop
icebp
cld
mov
ret
in
inc
cmpsl
or
cmp
scas
lret
mov
fsubs
add
sub
xchg
adc
inc
mov
pop
push
aas
push
insl
clc
jge
adc
mov
pop
shlb
leave
test
push
rcll
push
xchg
data16
dec
xor
pop
das
sbb
dec
adc
loop
fwait
pop
jnp
loopne
pop
jl
inc
dec
xlat
pop
mov
jno
xor
mov
adc
rcll
int3
lret
pusha
loop
xchg
jb
fwait
or
cwtl
imul
fs
sbb
jb
or
pop
adc
sub
out
out
imul
fists
loope
pop
jecxz
add
push
insl
mov
rcll
ljmp
hlt
gs
mov
aam
inc
push
lret
sbb
nop
mov
pop
cs
mov
popa
iret
icebp
loopne
pop
fistpl
jecxz
adc
rcrl
sbb
loopne
cmp
rclb
mov
out
add
pop
jmp
getsec
add
or
clc
fwait
repz
roll
pop
pop
dec
lods
sub
shlb
lods
jns
mov
dec
repnz
outsl
fs
dec
sahf
add
sub
cli
es
scas
rcl
jmp
sbb
mov
or
pop
xor
roll
and
add
xchg
mov
inc
fistps
out
je
jb
fcoml
cmp
pop
clc
pop
inc
mov
lods
dec
dec
or
or
jno
sbb
fisttpl
call
or
xlat
inc
test
add
adc
jge
xor
mov
cmp
add
flds
xor
call
mov
cmp
mov
jp
lahf
cmp
mov
jle
inc
test
mov
in
gs
out
iret
xchg
and
inc
mov
mov
ficoml
xor
dec
scas
pushf
shll
pop
ret
insl
sbb
int
std
out
nop
mov
lods
scas
pop
aas
cmp
fmull
sbb
test
sbb
cli
xor
push
ret
fisttpl
jne
cwtl
test
mov
push
test
sti
push
leave
mov
add
in
mov
cmpsl
pop
je
and
xchg
fadds
shr
jb
ret
sbb
push
mov
adc
insb
mov
pop
push
jo
sarl
cmpl
add
cmp
outsl
xchg
pop
mov
xchg
je
faddl
outsb
and
mov
imul
fnstsw
xchg
std
mov
dec
jl
pop
and
push
sub
inc
shl
mov
sub
add
jne
or
xor
cld
or
mov
mov
push
jne
ljmp
stos
jmp
insl
sbb
pushw
imulb
mov
mov
ljmp
push
lret
ss
mov
inc
push
xor
cmc
outsl
je
rolb
cmp
push
inc
pop
mov
stos
popf
loope
sbb
jno
subb
pop
xor
add
adc
xchg
cmc
adc
jno
lods
dec
repnz
sub
dec
cmp
cmp
stc
inc
or
xchg
dec
push
sub
shlb
sub
xor
jbe
pushf
fdivl
lcall
popf
shrl
fdivl
lahf
rcrl
hlt
push
popf
inc
js
cli
pop
pop
xchg
data16
movsl
addr16
cwtl
inc
mov
mov
movsb
out
stos
cld
subb
orb
adc
gs
mov
dec
test
pop
lahf
push
push
cmp
cmp
and
xor
loop
insl
testb
notb
cmpsb
iret
fnsave
xlat
push
pop
cmp
adc
mov
out
mov
cmp
xor
popf
aas
jo
insb
push
fiadds
lods
add
fldln2
or
arpl
js
in
mov
jecxz
icebp
xchg
sbb
pop
loop
gs
dec
mov
cmpsl
ljmp
insb
mov
stc
leave
adc
mov
pop
jae
in
add
rolb
pop
mov
out
jo
in
dec
mov
pop
push
xor
out
mov
fisubrl
xor
sbb
sbb
dec
inc
sbb
shrl
inc
aaa
out
inc
or
or
jb
xchg
push
pop
and
add
sub
test
jmp
cmp
adc
les
into
or
pop
jnp
cli
test
xchg
iret
fdivrs
arpl
xchg
int3
or
add
fimuls
loop
sub
dec
push
or
mov
data16
outsl
mov
cmp
or
fsts
pusha
popa
loopne
std
ret
add
ss
adcb
inc
xor
add
outsb
loope
outsb
pop
push
cmpsb
insb
ja
fldcw
lea
pop
mov
ret
insb
cmp
mov
les
push
outsb
mov
out
adc
pusha
mov
pop
add
mov
cmp
cmp
and
and
jecxz
cmpsb
mov
mov
mov
ljmp
int
xor
push
xchg
push
mov
jnp
inc
imul
push
jb
lods
and
sbb
fwait
sub
mov
push
imul
fiaddl
xor
pop
in
and
xchg
fsts
push
pushf
addl
ss
out
xchg
mov
enter
jo
adc
movsl
mov
in
imull
mov
cltd
inc
fwait
out
in
ds
stos
shl
jne
mov
cmp
in
push
dec
dec
call
sub
add
mov
mov
mov
rcll
push
in
xor
push
push
lods
sbb
pop
pop
mov
loopne
imul
pop
jg
mov
sub
in
xor
and
in
jns
repnz
dec
push
aam
inc
shrl
rcl
pop
clc
and
rclb
and
das
xor
cmpsb
outsl
cwtl
or
mov
outsb
mov
test
fsts
dec
mov
mov
lcall
sub
jae
in
popa
cmp
imul
adc
aas
push
mov
push
pop
jp
imul
lcall
adc
repz
sbb
movsl
dec
mov
leave
cmp
int3
xchg
or
sarb
mov
cmp
dec
flds
addr16
test
mov
or
js
xor
ds
mov
sti
rcl
movsb
sub
das
mov
movsb
xchg
xchg
loope
rcrb
test
int
and
mov
mov
and
testl
and
hlt
lods
mov
mov
es
repz
ret
xchg
mov
dec
lret
xchg
imul
mov
aas
jecxz
pop
enter
xchg
testl
jno
out
xchg
int
fnsave
mov
data16
push
xadd
stc
push
pop
sbb
mov
lcall
aas
mov
lea
add
cwtl
sbb
push
and
out
xor
out
xchg
adc
out
mov
aas
imul
icebp
aam
push
sbb
lea
enter
call
dec
or
cwtl
repz
pushf
dec
push
add
stc
mov
sub
frstor
mov
jbe
aaa
push
lock
aad
dec
xor
aad
xchg
xor
or
mov
test
jmp
xor
jo
cld
xor
inc
out
jge
xor
cmpb
call
mov
xlat
ljmp
je
pop
jge
cli
test
les
dec
ret
or
or
out
hlt
jae
mov
xor
ret
imul
adc
xor
inc
pop
insb
jb
aad
sub
aaa
psubq
inc
lret
and
push
pusha
mov
inc
leave
in
lds
jnp
outsl
out
mov
daa
dec
rcll
mov
das
adc
jbe
movsl
push
enter
mov
adc
lods
fistps
jle
mov
jl
pusha
jg
repnz
cmp
sbb
xchg
pop
xor
flds
in
xor
dec
sbb
out
dec
repnz
and
std
mov
push
fcmovnb
out
test
sahf
int3
jp
jg
cs
push
ds
and
pop
mov
pushf
xor
jbe
pop
push
add
rcrb
xor
insl
dec
add
cmc
xchg
mov
sbb
sub
dec
sub
mov
pop
loop
adc
push
jp
sbb
dec
icebp
dec
fs
lods
test
into
repz
xor
test
jb
pop
jbe
xor
xchg
pusha
data16
out
and
mov
cld
stos
push
mov
jmp
pop
fsubrl
jg
xchg
inc
insl
test
push
mov
mov
std
cmp
mov
out
shll
xchg
jns
cs
add
fists
outsb
mov
stc
shlb
inc
xor
fwait
jnp
orl
mov
ja
and
stc
pop
xor
xorb
pop
pop
mov
lea
divb
sbb
dec
popf
inc
aam
xor
into
jae
aas
pop
xor
loopne
call
imul
fwait
xchg
imul
hlt
in
into
inc
push
jmp
pop
ror
jb
mulb
das
and
movsb
roll
mov
int3
lcall
punpcklbw
enter
or
sahf
xchg
in
pop
sbb
adc
adc
cmpsl
jb
in
sti
jne
stos
insl
enter
cld
fcomps
insl
aas
or
std
dec
jg
insl
dec
shlb
outsb
mov
xor
pop
dec
jb
in
push
push
dec
arpl
jns
xchg
int3
fbstp
mov
lods
inc
scas
mov
mov
je
jl
leave
into
dec
add
sbb
cli
or
aas
dec
ss
cli
lcall
sub
push
loop
inc
or
fwait
ds
sarb
out
and
stos
arpl
mov
out
dec
push
ljmp
aaa
out
loopne
jle
xor
mov
lret
stos
inc
cmc
sbb
mov
fimull
icebp
xor
add
loope
int3
add
stos
jecxz
and
les
inc
ja
lret
push
pop
test
icebp
pop
dec
push
xor
inc
aam
inc
adc
xchg
jo
aaa
pop
xor
xlat
mov
sub
in
cli
xor
data16
sub
xor
stos
es
pushf
push
loop
xchg
xor
mov
aaa
jnp
xor
cmpsl
stos
cmpsb
jns
shlb
sbb
in
sub
mov
sub
jl
xchg
sarb
call
into
repnz
imul
cmp
cmp
lock
xchg
xchg
jns
mov
aas
bound
pop
icebp
aam
imul
faddl
inc
and
loope
jo
push
xlat
rcrb
mov
out
shrb
inc
xchg
mov
sbb
repz
fidivrl
push
fucomip
cmc
pop
sbb
xor
push
iret
and
iret
lock
xchg
fldenv
and
xor
mov
outsl
push
popf
push
mov
and
loop
enter
lock
sbb
imul
cltd
mov
gs
push
pop
cld
inc
jo
jne
sub
sbb
insb
mov
out
loop
pavgw
cmpsb
and
xor
or
mov
fbstp
cld
shlb
push
inc
sbb
pop
mov
push
cld
in
dec
mov
or
ret
jne
outsl
or
aam
cli
adc
into
ficoml
dec
ljmp
xchg
dec
out
loop
aaa
popa
test
lock
or
pop
sbb
roll
mov
ficoms
icebp
dec
adc
inc
mov
xchg
push
cmp
mov
lea
es
stos
lods
shll
bound
out
cmpsb
loopne
aam
sub
arpl
cli
lahf
inc
pop
nop
fdivrs
jmp
mov
incb
fld
push
outsl
jl
rcrl
sbb
icebp
push
jb
aad
out
pop
movsb
push
rcrb
mov
nop
ds
mov
cmp
mov
repz
push
jmp
mov
push
aas
mov
cli
pop
mov
jg
dec
mov
mov
or
sbb
sub
cmp
lret
aas
ljmp
jg
dec
mov
mov
or
sbb
sub
cmp
lret
mov
mov
ljmp
das
pop
mov
or
sbb
sub
cmp
lret
das
fstpt
jmp
cli
pop
mov
jg
dec
mov
adc
jge
xchg
add
xor
and
lods
hlt
mov
adc
inc
fisttpll
in
sbb
mov
lods
dec
mov
sbb
or
cmp
sub
mov
in
sbb
mov
lods
int3
mov
or
inc
std
adc
aam
fsubrl
lea
shrb
lret
and
cs
in
popf
xchg
int
clc
cmp
push
out
into
iret
dec
repz
inc
sub
insl
stc
popf
add
sbb
dec
in
repz
lds
ret
pop
jns
insl
sbb
or
lods
pop
mov
out
fwait
xchg
in
jge
ds
pushf
jnp
mov
push
adc
js
jge
enter
call
cmp
sbb
cmpsl
cs
rcrb
std
adc
subl
mov
sbb
adc
gs
je
cmpsl
fs
sbb
pushf
jno
repnz
sbb
mov
dec
fldenv
sbbl
xor
and
xor
std
cmc
in
or
insl
mov
stc
dec
mov
mov
sbb
dec
std
cmp
xchg
sub
repnz
mov
test
add
das
mov
mov
push
loop
enter
pop
enter
call
insl
mov
movsb
pop
mov
cltd
pop
cmpb
jmp
xor
jmp
sub
std
cmp
sub
fsubrl
in
sbb
mov
lods
dec
mov
sbb
or
cmp
sub
fsubrl
in
sbb
mov
lods
mov
aam
xor
cltd
arpl
pop
inc
dec
lahf
lahf
les
fisttpl
js
mov
call
negl
mov
insb
cld
jno
jne
nop
ds
fsubl
cmp
mov
or
mov
cmp
out
out
and
push
inc
test
fdivrs
mov
add
test
movsl
gs
jo
repz
jg
and
mov
loop
mov
mov
mov
pop
cltd
push
movl
pop
popf
pop
mov
adc
jns
lock
ret
aas
pop
aad
ja
outsl
fildl
call
jge
cmc
adc
stos
out
jmp
pop
test
mov
push
pushf
enter
pop
dec
inc
cmp
and
daa
out
out
stos
dec
dec
inc
out
outsl
test
xor
outsb
mov
imull
jecxz
push
jle
sbb
mov
jge
fdivs
mov
cli
adc
ret
test
pushf
mov
cmp
dec
leave
cmp
sub
push
sub
stc
cld
shrl
xchg
mov
push
cmp
push
aas
imul
scas
in
fmull
in
sub
lret
dec
jle
cwtl
mov
ds
add
sar
or
mov
pop
cmpsb
cmp
out
or
cld
or
roll
xrelease
or
adc
hlt
shll
or
fldl
dec
adc
rorb
aaa
cwtl
xchg
xchg
je
mov
mov
inc
jle
jbe
ret
movsb
cmc
aas
or
cmp
insb
data16
ret
enter
add
xor
or
aas
inc
ljmp
insb
shll
cmp
scas
dec
rsqrtps
xchg
stos
lea
and
jle
xor
in
cmp
out
adc
adc
in
dec
icebp
movsl
stos
bound
mov
or
cld
lret
mov
adc
lock
imul
popf
or
test
ljmp
push
mov
adc
inc
sub
jbe
scas
xor
mov
jge
leave
pop
sub
popa
and
ds
lret
out
inc
lea
loop
or
negl
jecxz
shrb
or
mov
lds
fucom
jmp
push
jge
push
sub
fadds
cmpsl
fldt
lea
sbb
cmp
mov
rcrl
loope
add
push
stc
jp
lds
and
or
jae
outsb
scas
add
sbb
or
push
and
sahf
out
jle
sbb
fdivl
and
mov
mov
push
jp
mov
xor
push
push
push
call
ja
push
aas
xchg
push
jb
inc
cli
xchg
out
and
and
mov
pop
cmp
jns
add
call
inc
add
add
adcb
push
andb
inc
rorl
sub
and
jnp
xor
mov
and
in
lahf
sub
lods
cmp
pop
lods
ss
push
mov
mov
adc
lahf
add
test
les
or
sub
mov
mov
pop
cmc
pop
fdivrp
cmp
fs
popa
and
adc
or
mov
dec
mov
jle
enter
fadds
push
leave
in
lret
test
dec
lret
rclb
sbb
push
ret
sub
pop
sub
test
test
mov
inc
add
sub
xlat
hlt
sub
fistpl
je
ss
and
out
nop
lods
adc
cmp
dec
jmp
mov
outsl
std
and
xchg
ss
mov
imul
dec
outsl
lds
push
rol
cld
inc
cmp
fisttpl
jecxz
stos
pop
xchg
dec
shl
xor
pop
sub
fwait
aas
and
inc
mov
sti
fs
xor
xorl
stc
pandn
shlb
out
adc
out
mov
mov
aad
rcl
movsl
push
sub
div
movsb
lods
pop
jmp
rorl
fbstp
jg
pop
cmp
aad
cmp
ja
inc
fiaddl
cli
outsl
aam
das
imul
cmp
cmp
fsubrs
sub
mov
jns
jl
std
xchg
dec
sub
lret
cli
es
roll
aad
mulb
xchg
loope
jge
and
ljmp
inc
sbb
jo
sub
movsb
neg
sub
in
gs
cmp
inc
fsubr
clc
add
scas
ret
inc
divl
sbb
mov
adc
test
xchg
psllq
inc
add
or
fldl
scas
ss
mov
add
fsave
clc
into
push
and
arpl
pop
stc
enter
mov
or
adc
sahf
aaa
mov
mov
jle
cli
sub
mov
or
push
or
mov
test
sbb
rolb
btr
mov
pop
and
push
pop
daa
pop
pushf
cmp
outsl
xchg
or
adc
cmp
lods
pop
daa
mov
packsswb
add
aam
js
inc
jnp
jl,pt
subb
add
cmp
mov
or
mov
jge
dec
fidivrs
mov
out
rcrb
mov
dec
push
sub
dec
push
mov
cmp
mov
pop
push
subb
test
insb
sbb
xlat
loopne
cwtl
xlat
and
cmp
enter
adc
outsb
sub
out
icebp
dec
dec
movsl
scas
or
mov
orb
mov
shll
rcll
mov
jmp
jnp
jb
dec
pushl
out
dec
sub
clc
sub
sbb
xchg
fidivrs
daa
movsb
in
and
mov
adc
mov
xchg
fnstsw
ds
push
test
and
jl
inc
js
push
push
popa
cmp
outsl
out
ffreep
les
pop
pop
adc
push
cltd
bound
iret
lods
pop
push
out
out
pushf
jge
dec
mov
test
dec
or
leave
push
sbbl
push
xlat
lea
sub
mov
adc
inc
popl
jmp
cmp
jle
sbb
gs
push
sbb
dec
ljmp
sbbb
out
adc
adc
jp
jno
mov
and
aas
enter
sahf
mov
push
push
push
ljmp
mov
mov
jp
out
jl
adc
ss
hlt
imul
lock
jae
cli
mov
sbb
stos
xchg
aad
jge
sbbb
jb
inc
xchg
add
lahf
aaa
dec
jnp
hlt
jbe
xor
and
in
xor
fadds
rcl
jno
js
add
cmp
mov
fmuls
pop
das
test
sbb
pop
push
mov
or
add
push
jl
or
mov
xchg
mov
clc
daa
xchg
adc
repz
or
dec
mov
add
jo
dec
dec
push
xchg
mov
xchg
testb
mov
push
push
movb
popf
inc
or
inc
cmp
inc
xchg
mov
dec
rol
push
cmp
out
cmp
sahf
mov
cltd
mov
addl
push
scas
cmp
mov
adc
jns
std
and
popf
jmp
cmp
sbb
add
dec
push
jbe
hlt
psubsb
jle
xchg
mov
sub
icebp
push
lds
fimuls
loope
jmp
adc
adc
stos
jo
mov
cmc
pop
and
lahf
cwtl
and
sarb
stos
aam
inc
movsb
fcoms
imulb
pop
sub
dec
jg
inc
mov
or
mov
mov
sub
jmp
adc
aam
fwait
loop
movsl
sbb
add
cmp
lcall
jno
push
imul
pop
stc
shl
clc
sbb
inc
je
cmc
nop
das
mov
test
js
stc
jg
push
orb
int3
xchg
sbb
sub
xchg
and
sbb
add
fsin
int
sub
sarl
fistpll
sub
push
loop
jno
arpl
adc
sbb
mov
xor
sarb
sub
pop
and
sbb
sub
push
cmc
ret
push
iret
pusha
cmp
mov
xchg
xchg
jge
inc
xor
ljmp
clc
add
push
movups
sbb
andb
or
jge
adc
mov
lea
pop
aam
into
les
shll
aas
inc
mov
and
pop
mov
cs
test
push
sub
and
jl
pop
sub
xlat
ljmp
inc
add
addl
outsb
mov
jo
inc
pop
neg
in
mov
or
cmp
push
rcl
xchg
test
jp
shll
and
in
cwtl
les
lret
jbe
cmp
pop
clc
mov
std
adc
pushf
pop
fdivrs
inc
dec
ljmp
aad
mov
scas
pop
xor
lret
sub
lcall
fldcw
sysexit
ja
jns
xchg
ljmp
xchg
ret
push
dec
scas
cmp
rcr
sub
je
xlat
or
cmp
sub
arpl
fildl
in
cmp
sbb
add
lcall
out
sahf
mov
stos
addb
fildll
iret
mov
mov
nop
mul
push
flds
dec
fs
ljmp
adc
dec
inc
call
jo
popa
jne
push
pop
xchg
xlat
inc
inc
repnz
loope
jo
call
push
or
imul
es
jno
or
sub
mov
int3
push
dec
and
es
aad
fldl
xor
adc
outsl
ficompl
iret
cmc
shrl
jp
clc
scas
push
mov
ljmp
sub
mov
jo
mov
testl
cmp
push
mov
or
jbe
ss
xlat
mov
imul
stos
bound
or
pop
fisubrl
cmp
mov
test
int3
push
adc
jecxz
leave
cmpsl
loope
dec
xchg
xchg
ret
jns
xor
push
fists
hlt
sub
imul
fwait
mov
insb
int3
mov
push
icebp
dec
into
and
out
inc
mov
xor
or
xchg
or
push
jne
rcr
sub
ss
push
push
lahf
gs
sub
adc
imul
cmp
push
xor
push
and
adc
cmp
sbb
daa
push
sbb
cmp
xchg
push
fldt
mov
mov
dec
loope
incl
add
sbb
sub
mov
jo
jne
xchg
lds
cld
lcall
outsb
jnp
mov
scas
mov
dec
int
add
and
insb
mov
fxch
data16
inc
les
movsl
loope
jg
inc
push
push
xchg
push
sub
xchg
mov
or
xchg
or
pop
or
and
mov
inc
cmp
mov
cmp
roll
js
jmp
in
xor
xchg
sub
sbb
sarl
xor
lret
ret
cmp
imul
rclb
dec
inc
and
mov
imul
push
mov
cmp
jae
mov
jmp
repnz
les
loopne
aam
test
and
mov
add
mov
js
lods
mov
push
sbb
aas
lret
lret
add
xchg
mov
aaa
notl
daa
mov
test
movl
popf
sbb
jo
sub
jg
mov
loope
test
cwtl
iret
repz
push
mov
adc
and
push
adc
dec
mov
dec
and
mov
pop
lods
ja
pushf
sbb
mov
mov
xchg
mov
mov
rol
or
pusha
push
icebp
nop
jl
xor
aaa
vmovupd
xor
sub
mov
fwait
mov
adc
inc
push
lret
stos
pop
mov
ss
push
fs
roll
dec
pop
jb
xor
das
adc
inc
ficompl
adc
push
hlt
fcomps
out
mull
or
jmp
mov
add
jmp
test
enter
addr16
inc
movswl
sbb
sub
movsb
stos
dec
mov
loopne
gs
or
test
cltd
mov
xorl
mov
ret
test
movsb
mov
ret
mov
and
cmp
jnp
or
inc
jbe
mov
mov
cmp
mov
mov
mov
sub
lock
cmpsb
rorl
pop
pushf
xchg
not
inc
pop
or
stc
stc
cmp
jo
hlt
inc
and
flds
aad
pop
pop
xor
insb
ret
jg
loop
pushf
stos
test
add
in
mov
std
pop
leave
cwtl
int
adc
push
mov
and
dec
ds
or
jl
dec
cmpsb
sub
push
push
fists
sbb
loopne
fsts
negb
gs
pop
clc
adc
mov
ret
movsb
mov
mov
push
mov
xor
jne
add
pop
or
pop
repz
aas
dec
inc
stos
sub
xchg
in
sub
mov
pop
jo
out
fwait
mov
scas
popa
pop
test
push
mov
sahf
iret
cltd
cmp
in
mov
and
xorb
add
mov
addr16
adc
sub
inc
xchg
adc
ja
mov
fcomi
idivl
movsl
bound
dec
inc
jp
mov
call
mov
pop
dec
rorl
sbbl
ret
mov
push
repz
arpl
pop
imul
mov
das
lret
xchg
scas
lret
adc
push
enter
pop
adc
sbb
fistpll
adcl
cwtl
push
fs
mov
jno
mov
mov
xchg
sub
imul
adc
mov
fsubrl
adc
nop
add
inc
sbb
pop
sub
pop
or
mov
jle
movsb
xor
fs
std
add
repnz
in
loop
mov
mov
negb
push
xor
mov
call
xchg
sub
jmp
movsb
sarb
imul
mov
jae
les
aaa
adc
xchg
enter
pop
ds
mov
orl
scas
and
xchg
cs
fisubs
pop
pop
js
jno
adc
xorl
fcoms
ja
in
lret
imul
sbb
iret
fisttpll
sbb
outsl
out
dec
xchg
cmp
dec
cltd
test
fs
test
lods
int
ret
fstpt
cld
pop
fstps
int3
arpl
xor
imul
push
cmp
mov
xchg
xor
adc
in
mov
cmp
sti
in
ret
dec
add
leave
push
mov
popf
int
clc
xor
sbb
mul
fst
bound
sbb
jmp
sub
cs
jno
xchg
cmp
mov
insb
fst
fsub
adc
testl
pop
push
mov
or
mov
insb
mov
scas
pop
mov
jg
or
and
xor
sub
test
arpl
sbb
fdivl
fadd
sbb
fcomp
and
pusha
push
lds
jns
lods
ret
inc
cs
jmp
inc
fwait
arpl
jmp
sub
and
inc
ja
xchg
inc
push
sub
mov
jmp
jbe
xlat
sbb
cmp
dec
movsb
xchg
jecxz
pop
push
jno
cmpsl
leave
ljmp
pop
mov
push
or
xchg
loopne
pop
pop
ljmp
cmp
faddl
dec
pop
cld
iret
inc
mov
jmp
xchg
adc
mov
pop
insl
sbb
arpl
clc
xor
mov
add
mov
enter
pop
into
nop
adcl
mov
inc
js
clc
imul
mov
rolb
mov
test
xchg
dec
fistpll
arpl
fs
and
out
scas
in
xor
clc
das
icebp
push
in
inc
sbb
or
cltd
cli
mov
jo
mov
push
jg
xor
push
dec
jb
push
das
xor
jbe
cs
data16
scas
jecxz
push
in
ja
shrb
or
inc
or
fistps
inc
loope
fdivs
arpl
lret
arpl
movsl
mov
clc
stos
enter
rcl
xchg
cmpsl
push
jecxz
jnp
movsb
mov
mov
mov
insb
call
in
cmp
sti
out
mov
inc
das
icebp
lahf
jns,pt
mov
push
cmp
and
dec
arpl
push
jns
xchg
push
call
lret
sbb
cmc
jp
sub
loope
cs
jb
mov
loopne
add
testl
divl
sub
rolb
add
dec
mov
inc
int3
jne
mov
imul
les
fcomps
mov
inc
push
xor
adc
inc
adc
add
mov
mov
sub
in
enter
push
dec
mov
sub
and
ss
mov
das
adc
ja
xchg
mov
shrb
lods
xchg
xchg
jg
cmpsb
rol
test
mov
push
mov
cmpsb
adc
push
popa
mov
mov
sub
inc
div
cmpsl
xchg
push
lea
jmp
sbb
insb
and
adcb
iret
stos
lock
mov
test
fisttpll
sub
and
aad
cmp
call
mov
and
in
sbb
cmp
mov
cwtl
push
cmp
or
sbb
fisttps
adc
and
popa
jmp
adc
rolb
push
ja
mov
movsb
rcrl
dec
dec
xchg
inc
jge
jl
mov
adc
mov
jb
int
sub
and
jno
and
testl
repnz
inc
xor
repz
cmp
jbe
add
jge
in
addr16
dec
ds
xlat
jecxz
inc
and
test
in
ja
ljmp
mov
inc
lret
xor
psubusw
test
adc
test
jmp
cli
add
xor
mov
pop
fcmovnbe
push
dec
je,pn
dec
outsb
and
and
test
es
and
addr16
mov
rolb
sub
mov
inc
mov
notl
add
jb
ljmp
mov
inc
sub
ja
insl
outsl
mov
sub
popf
fisttps
cmc
es
in
leave
mov
lods
push
sahf
xor
jne
and
aam
mov
push
out
mov
cmc
ret
or
mov
lret
xchg
xor
out
or
push
aaa
iret
jb
sbb
pop
movsb
jb
inc
dec
mov
ficoml
inc
or
xchg
xchg
ss
push
push
gs
push
popa
fdivrs
mov
sub
xor
xor
jecxz
cmp
std
jecxz
or
int
sti
pop
sub
add
dec
rorl
mov
mov
sub
xchg
xor
or
ljmp
in
jl
rorl
cmc
and
ret
lods
cmp
lahf
bound
dec
cltd
xor
insl
mov
aam
push
jmp
aad
cmpsb
into
inc
adc
push
std
dec
sbb
in
clc
pop
test
xchg
inc
popf
jmp
iret
sbb
jl
outsb
daa
xchg
push
pusha
pop
ficoms
jge
pop
ss
imul
xchg
dec
sbb
sbb
mov
push
int3
pop
arpl
lret
push
or
shl
and
in
jae
rclb
push
add
es
fisttpl
pop
jb
shlb
pop
bound
push
mov
pop
mov
ljmp
adc
mov
in
cmp
inc
imul
xor
fcoml
fsubrp
testb
mov
xor
sub
lods
xchg
xchg
add
movsb
rol
sahf
dec
add
clc
pop
les
or
ds
sbb
fisubs
lahf
stos
andb
cld
mov
fiadds
lret
inc
adc
cltd
mov
push
nop
sti
inc
int
xlat
mov
mov
sbb
lcall
add
nop
inc
xor
insb
out
push
in
gs
call
cltd
jb
mov
es
adc
cs
push
add
add
push
cmpsb
andb
push
push
pop
jp
pop
xchg
jmp
sbb
add
xchg
jge
addr16
mov
popf
stos
in
out
mov
loopne
xor
lahf
daa
sti
xchg
nop
xor
sub
idivl
lods
cli
jbe
ss
call
adc
sti
xor
cmc
jne
sbbl
sahf
inc
push
outsl
sub
lcall
and
adc
jl
sub
sbb
pop
ja
or
mov
pop
int
push
mov
data16
mov
xchg
dec
data16
xlat
jae
stos
mov
sbb
or
cmp
sub
fsubrl
in
sbb
mov
lods
dec
mov
sbb
or
cmp
sub
fsubrl
in
sbb
mov
lods
dec
mov
sbb
int
fstp
sub
call
jge
dec
pushf
pop
inc
lods
pusha
mov
sbb
sbb
cmp
lods
fstp
sub
in
push
in
addb
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
pop
enter
iret
add
daa
test
or
add
add
add
add
push
pop
test
add
push
add
add
int3
add
sbb
sub
pop
add
add
add
add
add
add
add
test
sub
cltd
add
fiaddl
clc
add
add
add
add
add
add
add
pop
add
or
cmp
add
mov
flds
push
add
cmp
adc
add
add
add
sub
add
inc
add
pop
add
add
add
add
add
add
jmp
and
clc
add
add
add
add
sti
add
add
add
and
add
pop
add
add
add
add
add
rolb
add
add
add
add
sub
sbb
add
add
mov
sbb
test
add
gs
add
add
and
add
add
add
fwait
add
add
sub
test
xor
add
add
add
add
add
add
add
mov
push
add
add
add
push
add
add
mov
add
add
jbe
adc
inc
add
add
add
add
add
add
add
add
addl
nop
add
mov
lret
add
cmp
add
add
and
add
mov
add
add
add
add
ljmp
add
add
add
add
add
add
int3
add
add
add
add
inc
add
jge
or
addl
lret
add
sub
pop
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
lcall
add
inc
add
add
add
add
add
pushw
addb
add
add
pop
add
add
sbb
xchg
add
verr
add
add
add
add
add
lret
add
inc
add
add
loopne
mov
add
add
add
pop
add
add
add
sub
pop
add
add
add
add
inc
add
add
add
inc
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
cltd
add
add
add
add
dec
add
add
es
add
dec
add
add
cltd
add
add
add
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
lcall
add
add
add
add
add
jge
clc
add
add
add
add
add
add
add
add
add
add
add
addl
sbb
jo
add
or
es
or
cmpsb
scas
push
es
sub
das
pop
sbb
in
jg
call
lods
mov
addb
cwtl
lret
bound
insb
jp
fidivrs
lods
push
loope
adc
popf
out
dec
xor
in
dec
ljmp
or
push
or
test
and
add
aas
pop
cs
stc
push
jg
ret
daa
cltd
int
mov
mov
pop
or
mov
mov
mov
rclb
push
push
mov
push
mov
sub
pop
andb
mov
jno
cmp
jnp
lods
inc
rolb
push
pusha
insb
xchg
je
inc
dec
pop
mov
xchg
dec
mov
fcoms
shll
pshufw
test
xchg
fwait
jb
loop
mov
xor
mov
shlb
pop
loope
xchg
xchg
test
push
movsl
dec
or
or
xlat
adc
in
popa
leave
mov
add
fildll
cmp
xlat
mov
in
xor
and
adc
imull
out
push
sbb
push
gs
push
mov
outsl
cmpsl
movq
stc
inc
ret
inc
jnp
jb
mov
sbb
add
cmpsb
xchg
and
jb
mov
lret
pop
or
lret
pop
sbb
int3
cmpsl
jno
pop
je
dec
adc
xor
test
nop
pop
dec
cmp
cmp
xor
xor
cmpb
std
push
xor
add
xchg
dec
fs
dec
add
push
jns
inc
xchg
inc
mov
pop
std
pop
std
cmp
pop
inc
lods
nop
sub
lcall
dec
cmp
jge
fbld
push
pop
mov
jp
lcall
adc
lret
pop
xchg
ret
mov
mov
enter
insb
clc
adc
test
and
push
divl
mov
dec
fisubl
nop
pop
movsb
xchg
sti
push
cmp
xchg
mov
pop
dec
jle
and
rorl
pop
stos
xchg
push
push
call
faddp
inc
std
pushf
jno
cmp
adc
sub
inc
lcall
int3
ror
jmp
push
rorb
fimuls
out
adc
jb
xchg
dec
imul
cmpsl
sbb
jecxz
push
dec
and
xor
add
fldt
lds
pop
pusha
popa
fidivrs
icebp
cld
dec
test
mov
dec
jmp
and
inc
mov
push
repz
mov
lods
push
sub
inc
sub
out
pop
stos
daa
add
stos
and
sahf
adc
sbb
ss
xor
shll
aam
inc
das
mov
sbb
dec
aas
fldcw
stc
dec
lahf
lret
sar
int3
xchg
push
test
popf
clc
jnp
fcmove
jl
jp
mov
popf
into
fistpl
in
lea
ds
xchg
and
stos
fmulp
dec
in
fadds
cs
test
pop
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
