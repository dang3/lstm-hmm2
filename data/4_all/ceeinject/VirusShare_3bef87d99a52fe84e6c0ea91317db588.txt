fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
loop
repnz
shl
push
sub
in
lock
inc
inc
gs
jno
adc
mov
xor
and
shl
rol
shl
mov
mov
aad
pop
jb
inc
jno
popa
and
add
xor
and
enter
jmp
stos
cltd
lcall
bound
pop
pop
jne
inc
inc
dec
mov
movsb
xchg
pop
mov
inc
push
push
dec
in
mov
jne
bound
jmp
and
rorl
mov
loope
jb
dec
pop
pop
out
pop
mov
jb
and
shr
sbb
ret
popa
sbb
stos
or
lea
sbb
sahf
and
fs
loop
or
divb
jge
xchg
and
mov
mov
adc
mov
jg
dec
push
xor
iret
mov
mov
inc
mov
adc
bound
movsb
or
adc
pop
sbb
icebp
popf
cmp
sub
mov
sahf
cmp
add
adc
sub
jmp
ret
loope
xchg
mov
mov
pop
push
sub
sbb
adc
mov
xchg
mov
xchg
cmpsb
test
xchg
aam
iret
fstl
inc
xor
add
je
add
jg
lea
mov
iret
add
xchg
and
adc
popa
pop
add
push
xchg
sahf
shrl
mov
xorb
inc
inc
jno
popa
and
xor
add
adc
loop
repnz
shl
mov
mov
mov
inc
jno
popa
and
xor
add
adc
loop
fst
jge
mov
pop
cmpb
inc
enter
imul
dec
jl
hlt
pop
call
cmpsl
mov
movsl
add
call
sahf
pop
lahf
inc
or
sbb
mov
mov
adc
mov
pusha
sub
mov
mov
roll
mov
jp
ljmp
cli
gs
and
rorb
push
add
xchg
cli
or
cmpsl
cld
and
push
xor
push
fisubrl
adc
xchg
sub
scas
orb
jne
mov
in
mov
scas
jle
or
bnd
xor
inc
xor
adc
inc
push
test
mov
icebp
ljmp
jmp
add
xor
push
mov
jb
mov
jecxz
lock
clc
xchg
aas
mov
mov
stos
mov
imul
les
sub
je
enter
iret
inc
add
popf
shll
xchg
repz
andb
or
sub
adc
addr16
xchg
aas
xor
sub
adc
imul
cmp
mov
lock
mov
sub
adc
in
js
inc
lock
push
sbb
ss
mov
daa
bound
jnp
jp
insl
xorl
es
jno
in
mov
jmp
mov
add
mov
lock
es
push
repz
pop
test
insl
subb
push
movsl
or
cmc
neg
leave
fcoms
dec
xchg
fisttpll
and
jle
dec
jne
lods
pop
int3
xchg
das
push
iret
shl
sbbl
popf
pop
mov
mov
mov
aas
inc
out
inc
cmc
stc
jno
rcll
pop
scas
insl
jmp
mov
dec
jns
out
fisttps
into
fldcw
dec
cmpsb
aad
cmp
cs
lock
push
add
cmp
xchg
push
and
cmp
pushf
pop
into
and
dec
repz
bnd
test
xor
sbb
and
or
fisubl
and
sbbb
cmp
add
into
lods
in
push
pop
jmp
inc
push
roll
lret
add
idivb
push
out
push
rcrl
add
nop
pop
adc
or
adc
lods
jmp
repnz
pop
inc
ljmp
add
int3
inc
dec
mov
jne
mov
xor
sahf
jo
aam
enter
fisubl
addb
test
mov
cmp
andb
mov
xor
mov
shl
sti
data16
xchg
out
jp
adc
mov
aad
hlt
out
pushf
xor
out
out
lret
sub
sub
pop
ret
push
movsl
sub
jg
jne
inc
fs
push
push
xor
js
xchg
and
test
dec
add
mul
adc
sbb
and
dec
adc
push
pop
or
scas
arpl
pop
insb
adc
mov
movsl
cs
stos
jae
repz
sbb
aam
push
jo
notb
jp
lods
sub
jge
out
mov
loope
stos
add
ja
adc
xchg
mov
lahf
adc
out
int
adc
xor
test
jecxz
je
mov
and
jl
adc
stos
arpl
mov
testl
sbb
imul
dec
inc
cmp
xor
clc
adc
push
pop
cmp
call
sbb
inc
out
in
cltd
outsb
pushf
sub
mov
adc
or
test
adcl
cltd
popf
inc
dec
mov
jmp
test
aam
inc
repnz
mov
mov
lahf
sub
test
outsl
xchg
or
jg
rcrl
xor
imul
fsts
and
mov
xchg
movsb
lods
sub
pushf
pop
lret
lret
leave
lds
clc
dec
push
test
in
push
push
push
ss
in
jl
std
cmc
inc
imul
clc
push
test
sub
mov
sbb
sbb
pop
repz
ret
push
dec
push
cmc
pushf
jle
int
add
popa
mov
xchg
inc
call
xchg
jg
movsb
add
fnstenv
out
arpl
xchg
push
popf
test
or
sub
jns
es
and
lods
push
std
test
int3
jnp
mov
mov
push
cmpl
mov
add
xchg
fadd
push
or
iret
adc
out
pop
daa
stc
out
and
push
mov
cwtl
fmul
repnz
mov
pop
cmp
addr16
adc
jge
sub
adc
inc
xlat
xchg
pop
pushf
mov
inc
pop
mov
mov
or
xor
das
pop
stc
arpl
je
cwtl
add
jo
mov
or
dec
mov
insl
sbb
das
cmp
adc
cmp
xor
jne
and
mov
mov
fiadds
cltd
jb
popa
inc
int3
mov
iret
xor
adc
ja
pop
and
cmp
mov
xbegin
nop
fisttps
dec
or
lds
pop
push
test
inc
pop
loop
dec
cmp
inc
mov
dec
jecxz
shrl
fistps
or
add
xor
das
aaa
mov
mov
idivl
adc
insl
sbbl
mov
iret
mov
push
or
pop
mov
push
lret
pop
inc
fimull
cmpsb
or
xlat
mov
imul
out
andb
das
dec
push
dec
or
stos
adc
mov
scas
loope
and
shll
jne
push
idivl
stc
pcmpeqb
popf
inc
adc
scas
std
xor
push
xlat
inc
sub
jae
mov
jmp
out
or
mov
xchg
adc
xlat
adc
adc
dec
mov
mov
mov
sahf
aas
jle
cwtl
lea
test
xchg
cmp
stos
out
xchg
imul
and
xor
xchg
inc
lods
xchg
inc
jp
aas
xchg
xchg
ret
stos
lock
out
cwtl
and
lods
cltd
mov
cmp
and
aad
out
jecxz
mov
dec
adcl
pop
sbb
fnsave
adc
pop
out
rorb
xchg
aad
test
xor
call
popf
popf
test
cmp
cmc
push
pop
imul
cmpsb
push
fstpl
bound
jne
ja
pop
stos
push
push
out
es
mov
cmp
dec
gs
iret
sahf
movsl
mov
xor
cmp
scas
shll
in
fs
xlat
xchg
fcompl
jno
shrb
call
ds
mov
push
es
fistps
stos
push
xlat
and
mov
jno
cmp
adc
stos
dec
push
loop
fdivr
xor
and
out
stos
sbbl
addb
jne
aas
ds
jmp
ficompl
jno
rcr
js
pop
xchg
xor
lcall
inc
fdivl
jle
outsb
and
add
pop
and
mov
pusha
out
lds
and
loopne
lcall
bnd
scas
mov
pop
mov
mov
fisttpll
shl
js
ja
and
or
lahf
shr
sub
fistl
pusha
popa
inc
std
fcoms
cltd
cmpsl
out
fstpl
leave
push
addr16
jecxz
scas
clc
outsb
gs
imul
popf
pop
push
loopne
sahf
lahf
and
out
add
mov
xor
sub
testl
pop
test
dec
ret
int
mov
lock
mov
fwait
or
fmull
pop
test
and
aad
popa
lods
sahf
leave
xchg
lods
xchg
adc
inc
jnp
xor
sub
or
into
push
dec
data16
mov
mov
out
xor
cmp
push
xchg
mov
cmp
push
leave
es
sti
stos
adcl
mov
rolb
test
lahf
push
jl
hlt
or
in
mov
insl
clc
mov
inc
jl
mov
add
inc
pop
movsb
lcall
stc
rcll
dec
cmc
test
xchg
mov
in
push
repnz
mov
movsl
out
stos
js
daa
out
outsl
jbe
ror
imull
dec
push
movsl
inc
mov
or
out
sub
mov
shl
cltd
xchg
sbb
sbb
jge
stc
sbb
stos
int3
push
ss
pop
dec
aaa
xchg
test
neg
push
pop
lcall
in
xor
data16
xor
cmp
inc
pop
js
test
cli
cmp
xchg
hlt
data16
imul
fimull
push
mov
xchg
cmp
nop
mov
cmp
mov
aad
xchg
ret
xorb
add
addr16
jb
imul
ret
ljmp
lods
popa
dec
arpl
repnz
mov
push
push
fildl
sub
outsl
mov
hlt
aam
or
js
imul
fwait
lds
push
fnsave
fldt
arpl
mov
jb
insb
or
adc
jmp
stc
sbb
mov
and
shl
mov
or
and
lods
and
ss
lahf
and
insl
insb
push
out
in
sbb
mov
stos
inc
inc
iret
je
mov
or
dec
lds
lahf
cmp
aaa
and
cmp
mulb
iret
sbb
dec
xchg
dec
sbb
pop
mov
pop
ret
push
sub
and
scas
pop
bound
aas
aam
nop
in
aaa
lods
cs
mov
xor
in
sbb
subl
push
cld
inc
xchg
push
mov
out
repz
jae
mov
xchg
inc
in
nop
stos
aam
ret
stos
jge
push
lret
sub
lods
cwtl
pushf
stos
in
pop
nop
inc
sub
in
ljmp
faddl
lods
xchg
and
inc
out
out
stos
cmp
add
cli
outsb
in
out
imul
int
or
gs
mov
xor
inc
test
mov
cwtl
lea
stos
pushf
repz
and
push
leave
int3
out
ret
or
out
inc
js
mov
or
push
cld
inc
imul
imul
push
pop
aaa
jmp
xor
fs
cltd
dec
shlb
sbb
xlat
mov
movsl
mov
aad
les
jo
adc
sbb
mov
mov
sbb
push
popa
or
gs
fwait
dec
ret
fwait
and
inc
mov
test
jne
cmpsb
ror
dec
inc
subl
je
stos
lods
dec
cwtl
andl
mov
push
add
pusha
mov
pop
stos
sub
push
scas
mov
dec
push
aad
lahf
sub
fstpl
adc
xor
cmp
mov
xchg
xor
jae
sbb
roll
add
push
mov
sbb
enter
mov
fisttpl
or
inc
outsb
jge
jg
mov
jae
sub
cmc
outsl
mov
pushf
insb
inc
or
mov
push
into
sub
dec
or
dec
pop
push
int3
les
test
mov
aad
xchg
out
mov
inc
mov
add
sub
jmp
cmpsl
pop
cltd
push
or
pusha
xchg
bound
out
fnclex
and
mov
mov
clc
and
cmp
test
jle
sbb
push
lret
sub
mov
out
jmp
lds
cltd
xor
mov
int
test
lods
add
inc
ficoml
mov
adc
mov
sub
movsl
mov
pop
into
jb
dec
jge
out
int
pop
mov
pop
std
aad
xchg
jno
jns
pushf
insb
imul
hlt
adc
sub
mov
cmc
jge
inc
pop
sub
shll
jns
fisttpll
cmpsb
xchg
cwtl
or
les
adc
or
mov
std
jl
lock
pop
out
dec
and
jno
jo
pop
or
rclb
push
ja
insl
dec
sub
enter
adc
daa
flds
call
xchg
out
and
pop
cmc
das
adc
fiaddl
in
pop
loop
sub
vcvttss2si
imul
subb
adc
cltd
mov
or
sub
stos
loope
daa
sarl
push
and
js
dec
in
inc
xlat
mov
mov
fldl
outsb
adc
pop
pop
pop
push
sarl
outsb
mov
cmp
loopne
call
pop
and
daa
lret
sbb
lcall
test
mov
cmp
xchg
shr
gs
pop
cwtl
rcrl
cli
adc
fistpll
xchg
outsl
sarl
pop
sbb
cmp
clc
push
in
mov
mov
incl
in
inc
fwait
scas
es
addb
lock
xor
cld
ret
popa
jmp
rol
fimull
lds
mov
fwait
pop
flds
sbb
roll
mov
push
out
push
loop
pop
xchg
xchg
xor
mov
or
loope
pop
idivl
popa
orl
fidivrl
mov
sbb
inc
push
ja
pushf
mov
popa
incl
lsl
xor
cmp
bound
mov
sub
sbb
in
fisubl
icebp
or
dec
repnz
jns
push
xchg
aas
jge
cwtl
adc
int3
outsl
xchg
xchg
and
les
and
lea
test
jecxz
gs
push
xor
xchg
mulb
sti
push
stos
xchg
jo
and
cmp
popf
daa
aad
push
adc
popf
das
inc
sub
xchg
cwtl
jge
ss
fstps
sbb
in
jno
ds
inc
dec
mov
mov
jnp
loopne
int3
and
in
mov
fdiv
imul
cli
fnstsw
dec
mov
into
xchg
out
cmpsb
jbe
add
push
aas
or
push
and
imul
push
in
jbe
into
daa
cmp
and
mov
mov
push
jl
push
es
sub
dec
mov
into
movsb
dec
aas
adc
aam
enter
imul
movsl
xorb
mov
dec
push
add
and
lahf
mov
xor
or
addr16
aad
sbb
add
dec
cltd
cmp
rcrb
mov
rol
negb
pop
testb
das
outsl
cmp
dec
sub
mov
jge
xchg
add
inc
mov
mov
fistpl
sub
je
fidivrs
and
mov
jbe
pop
push
or
xchg
adc
sbb
push
mov
outsl
data16
cwtl
xor
movsb
stc
pop
test
mov
out
lcall
adc
cs
sti
dec
xchg
add
clc
sub
insb
jg
gs
sub
add
mov
mov
cmp
push
jae
mov
mov
push
mov
cmp
push
cli
std
into
dec
aam
jmp
lods
add
or
and
icebp
jo
mov
push
xchg
addr16
pusha
xor
test
and
test
in
in
daa
mov
sbb
in
or
in
jp
pop
inc
flds
and
mov
rol
fstpt
xchg
cld
mov
lods
jns
inc
add
leave
mov
mov
xor
push
mov
inc
loopne
imul
call
shrb
lods
cwtl
ljmp
cmp
cltd
mov
cmp
jo
cld
mov
repnz
xchg
call
xchg
mov
mov
scas
ja
sahf
sarl
movsb
lds
stos
mov
test
sbbl
call
push
push
lods
in
and
adc
mov
inc
push
dec
sub
outsb
and
pop
nop
clc
cmpsb
movsb
repnz
ss
mov
test
mov
popf
pop
ljmp
sahf
mov
dec
pop
mov
cmp
adc
or
out
mov
cwtl
rorb
mov
cmp
add
out
mov
test
and
js
mov
cmp
mov
cld
sbb
repz
jno
or
test
mov
add
and
fwait
xor
mov
dec
test
cwtl
iret
jo
pop
sub
in
pop
dec
insb
inc
pop
shr
and
mov
lret
lds
data16
mov
shr
test
jo
xchg
sti
out
xor
testb
push
test
stos
add
std
aaa
push
aas
push
sbb
mov
lret
int3
pop
cmc
cmc
xchg
bound
inc
push
and
jl
pop
sub
fmull
sbb
test
ljmp
gs
imull
in
int3
call
push
mov
adc
push
cs
lods
mov
adc
insb
jecxz
add
and
and
xor
add
dec
add
lods
movsb
lcall
lods
addr16
xchg
pop
ret
cmovno
add
inc
stos
cs
dec
pop
addr16
fwait
lea
and
push
pop
xchg
aas
stos
xor
in
xor
jns
bound
inc
mov
hlt
dec
push
fbld
inc
adc
mov
dec
les
mov
cmp
pop
lret
jmp
lock
pop
into
out
sbb
stos
pop
decb
lock
lock
push
mov
mov
adc
push
inc
shll
std
popf
into
inc
loopne
roll
mov
pop
sbb
and
sub
lret
sbb
mov
sar
stos
xchg
mov
add
cmpsb
hlt
push
lock
cmp
cs
gs
mov
sar
stos
pop
lret
cmp
jge,pt
movb
inc
fiaddl
sub
add
sub
push
lahf
in
jmp
xorb
bound
and
jns
stc
imul
add
xchg
cmp
bound
add
or
jl
iret
sbb
je
gs
pop
popf
mov
push
in
sahf
scas
insl
rcpps
std
inc
push
jo
mov
push
or
inc
cli
loopne
call
push
bound
test
cmovl
mov
pop
mov
fdiv
mov
cmp
movsb
pop
jns
aam
push
mov
leave
inc
mov
lcall
and
pop
dec
jg
ret
push
xor
mov
cmp
and
rcrb
dec
jne
and
mov
and
push
test
cmc
pop
std
lcall
push
push
leave
cwtl
cmp
or
dec
cs
insb
inc
pop
aas
inc
pop
push
stos
mov
xor
mov
fsts
fwait
xchg
sub
stc
adc
cmc
mov
sarl
xor
or
movsb
dec
rorb
nop
pop
stos
mov
pop
lret
pop
push
xor
or
xchg
cmc
pop
cmpsb
inc
mov
add
dec
stc
imul
iret
ljmp
movsb
xchg
pusha
push
cmpb
pop
ljmp
adc
xchg
push
push
test
stos
xchg
shll
lods
push
hlt
mov
pop
in
ljmp
adc
or
mov
xchg
outsl
adcb
add
subl
jg
sub
je
in
add
fiadds
and
inc
ja
dec
sti
cmpb
xor
loope
seto
fmuls
dec
aam
jns
call
mov
mov
push
or
pop
inc
cmp
cld
add
shll
clc
sahf
idivb
std
sub
fsubp
jne
cmp
xchg
pop
into
adc
dec
sub
stos
rclb
xchg
lds
fldcw
shrb
movsb
mov
xchg
hlt
mov
sarb
xchg
inc
sbb
adc
mov
dec
mov
fsubs
ja
scas
or
inc
in
leave
jle
mov
icebp
xchg
xor
add
xor
fsub
add
filds
fisubrl
add
iret
or
cs
test
mov
dec
or
into
sbbb
sub
rcrb
xchg
shll
jmp
aaa
insl
insb
mov
outsl
jp
loopne
out
xlat
int3
ffreep
sti
and
mov
cmpsb
sbb
push
cmp
insl
pop
outsb
jecxz
stos
dec
mov
sub
jl
jbe
aam
imul
jecxz
sbb
aam
cmp
imul
clc
into
add
or
sbb
dec
add
repnz
mov
add
into
in
xchg
int3
xchg
inc
cli
sbb
pop
mov
lds
pop
xor
outsl
lcall
sbb
pushf
dec
push
lea
ja
mov
out
rcr
push
sub
dec
pop
out
stos
mov
cmp
adc
pop
adc
es
push
cmpsb
mov
jecxz
sbb
cmp
xchg
lods
adc
sub
loop
iret
mov
cmpsl
and
dec
cwtl
lea
cmpsl
push
inc
inc
inc
or
aas
push
iret
add
push
inc
sahf
lahf
inc
shll
adc
pusha
jno
lea
popf
lahf
stc
ror
shl
mov
mov
mov
inc
jno
popa
and
xor
add
adc
loop
repnz
shl
mov
mov
mov
inc
jno
popa
and
xor
add
adc
loop
repnz
shl
mov
mov
mov
inc
jno
and
xor
add
lock
shl
mov
mov
popa
popf
push
jmp
jno
push
push
cltd
mov
pop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
and
xor
add
adc
sub
sbb
ljmp
popf
in
hlt
mov
and
xor
add
adc
fs
sub
movsb
int
pushf
test
xchg
fisttpll
lods
aam
and
xor
add
adc
fs
je
inc
sub
xchg
xchg
testb
jmp
push
add
insb
add
sbb
out
push
fistps
dec
pusha
in
fsubs
test
mov
xor
mov
mov
dec
js
adc
in
cmp
mov
outsb
jnp
aam
dec
hlt
xor
repnz
call
icebp
enter
xchg
insb
andl
inc
loop
or
stos
fcompl
dec
jns
adc
lea
mov
push
inc
fs
push
lock
loope
test
mov
cmpsb
je
pop
dec
clc
std
jnp
nop
fdivs
mov
mov
loop
in
ret
adc
mov
out
jl
adcl
les
xor
add
adc
fs
cmp
movsb
push
mov
test
xchg
aad
xchg
pop
lods
mov
or
sbb
fstp
sahf
mov
loope
loopne
cmpsl
jecxz
aam
enter
sub
popa
or
je
push
xor
xlat
xchg
icebp
in
loop
aam
in
mov
sbb
jno,pt
dec
or
push
frstor
xchg
popf
in
hlt
mov
and
xor
add
adc
fs
push
frstor
xchg
popf
in
hlt
mov
and
pop
mov
adc
fwait
push
lret
push
mov
ds
sahf
icebp
add
imul
adc
jo
lret
dec
xchg
negl
add
fnstsw
leave
dec
sbb
out
cmp
inc
test
jne
mov
lret
add
mov
xor
sti
add
out
addr16
mov
cmp
mov
jns
inc
jb
aam
sub
xor
test
sub
pop
pop
out
inc
and
pop
mov
add
shll
adcb
or
xchg
xchg
idivl
inc
adc
jmp
ret
in
pop
mov
jle
or
outsl
add
sbbl
aam
push
xchg
loopne
mov
ror
es
aas
inc
mov
mov
pop
mov
xchg
sarb
shll
and
or
cmp
test
or
xor
aad
mov
xchg
inc
adc
fadds
mov
sarb
lret
ja
clc
cli
inc
or
cmpsl
in
leave
aam
jae
jb
mov
cmp
sub
aam
mov
hlt
out
sbb
int3
cmp
scas
inc
call
and
adc
out
sti
scas
dec
pop
sbb
sub
push
or
and
dec
aam
aas
outsl
jae
mov
call
xchg
popa
mov
out
lods
stos
hlt
les
and
mov
rolb
xchg
fstpt
fiadds
xor
in
ret
adc
sbb
cmp
pop
jne
dec
inc
lret
lods
and
call
add
in
in
lret
push
movsb
mov
je
iret
or
push
insb
push
mov
sub
xchg
pop
inc
cmp
mov
icebp
outsb
loopne
mov
out
incb
jle
les
adc
pop
pop
test
mov
mov
cli
fistps
sar
icebp
cmp
cmp
adc
add
rcrl
shll
std
es
addr16
lcall
add
push
sub
xchg
stos
push
sbb
xchg
into
inc
in
mov
imul
inc
mov
xor
ror
out
int
jmp
mov
sub
mov
in
sti
mov
imul
inc
mov
stos
lret
jb
test
cmpsl
xchg
pop
push
adc
push
sbb
int
xor
fsubrp
pop
les
xchg
dec
jle
jecxz
push
pop
test
mov
test
fwait
sbbl
inc
xchg
adc
jae
addr16
adc
rorl
push
dec
ficoms
xchg
or
mov
data16
popa
sbb
rcll
xchg
mov
push
push
repz
pop
pop
pop
les
pop
jl
js
dec
ret
mov
mov
jmp
fiadds
lods
daa
mov
outsl
mov
iret
xchg
lret
inc
add
or
out
xchg
mov
sahf
pop
fs
scas
pop
sbb
les
and
mov
or
cmp
arpl
cltd
add
push
xchg
push
jbe
iret
movsl
cmpsl
fbstp
mull
adc
cli
inc
xchg
pushf
subl
push
cmp
mov
repz
xlat
push
sub
add
sub
xor
mov
sbb
inc
ljmp
lods
stc
sbb
rol
mov
stos
jmp
aam
sbb
aad
fimull
or
cmpsb
sbb
push
pop
mov
or
inc
adc
inc
dec
int3
sahf
addl
cmp
push
jp
or
mov
mov
dec
in
xchg
xchg
movsb
je
and
dec
dec
adc
aaa
aas
add
std
lea
inc
xor
scas
mov
les
xor
pop
fidivrl
add
inc
cmp
lcall
adc
sub
sub
jno
push
ret
adc
mov
fimull
inc
pop
pop
pop
dec
fldcw
iret
je
sbb
and
sti
dec
push
aam
xchg
xchg
minps
adc
sub
cmp
sbb
idivl
or
cmpl
dec
idivb
mov
mov
adc
adc
fildl
shlb
cmp
jge
jge,pt
adc
dec
call
push
jmp
pushl
cmpsl
cmpsb
add
lret
mov
enter
jecxz
adc
fdivs
dec
or
popa
dec
dec
xchg
xchg
loop
cwtl
cmc
loop
outsl
sti
adc
js
cs
shr
mov
cmpsb
stc
mov
dec
inc
xlat
popa
inc
in
int3
inc
jmp
adc
cmc
mov
test
rcrl
ss
inc
iret
sbb
cmp
jb
loop
mov
xchg
mov
pop
jns
mov
mov
adc
mov
movsb
repnz
in
ja
loop
stos
pop
mov
jmp
cmp
sbb
xchg
ja
aad
ret
push
mov
movsl
es
ja
arpl
dec
mov
cmc
push
and
rcrl
xchg
pop
inc
pop
sub
xchg
ds
and
cmp
inc
sbb
xor
sbb
mov
outsl
in
xadd
sub
sub
es
push
bound
test
sbb
inc
rcll
int
cmp
arpl
repnz
gs
add
fidivs
ret
lret
inc
ret
inc
out
js
pushf
cld
inc
mov
daa
movb
stc
movsl
lcall
lods
add
sbb
das
jl
xor
adc
sbb
jne
add
xor
sarl
and
xchg
push
les
rcr
cmc
fidivl
outsl
pusha
sti
pop
ds
jnp
mov
rorl
mov
cltd
aas
push
aaa
push
mov
mov
out
enter
int
insl
inc
mov
mov
dec
dec
shll
jge
cmpsl
push
inc
pop
dec
arpl
js
or
adc
loope
push
test
push
sahf
pop
loop
icebp
sub
sarb
mov
aas
adc
cld
pop
loopne
mov
xlat
adc
insl
dec
movsl
scas
jo
lock
data16
test
in
pop
mov
add
mov
adc
dec
les
xchg
rcr
and
cmp
lret
aaa
cwtl
mov
inc
push
xor
inc
sub
xchg
mov
std
ja
daa
mull
pop
ficoms
pop
push
xchg
adc
pushf
sub
nop
test
in
xor
lock
xor
pop
mov
sub
inc
push
xchg
pop
das
orb
sub
push
jg
adc
add
gs
gs
pop
push
lock
popa
shlb
icebp
das
shll
fwait
icebp
addr16
mov
pop
fwait
mov
inc
imul
mov
pop
add
pop
mov
subb
cmp
ud0
or
inc
and
ficompl
fcom
sahf
out
or
sub
les
sar
scas
cmp
dec
add
lret
mov
xchg
aaa
ficoml
inc
test
jge
pushf
in
cli
rep
clc
push
xchg
ret
push
fiadds
inc
mov
test
stos
loope
out
and
cmp
mov
roll
inc
push
mov
jmp
dec
daa
and
ss
cwtl
jne
pop
push
pop
jns
add
mov
pop
lret
insb
cld
jne
pop
push
jle
scas
push
push
lods
sub
xorl
lret
mov
repz
sub
jbe
push
xchg
lds
rorl
inc
negl
push
outsb
gs
ds
push
fidivrl
shrb
or
fsub
cmpsb
sub
inc
cli
in
aas
mov
fcmovnu
cltd
xor
loop
mov
xchg
sti
imull
push
jg
lcall
pushl
fsubr
dec
lds
pop
hlt
pop
cmpsb
mov
flds
xchg
sub
adc
out
mov
add
mov
adc
test
or
cmp
sub
ljmp
push
ja
add
fmull
xor
sub
add
pop
adc
test
ljmp
jno
in
les
sub
out
adc
sub
lret
sub
pop
sub
rcl
mov
mov
push
scas
test
fisttps
xor
sub
nop
jmp
shrb
sti
or
pop
jno
mov
insb
mov
cmp
gs
xchg
mov
jle
mov
insl
data16
aad
inc
lds
sub
ret
popa
scas
push
push
fildl
xchg
dec
aas
cmp
dec
lds
jle
xchg
test
push
mov
adc
mov
adc
dec
stc
nop
das
pushf
test
jp
rolb
or
push
cmp
inc
dec
cmp
testl
inc
sahf
inc
pop
dec
cmc
adc
lods
add
hlt
push
cs
xor
leave
je
push
inc
addl
mov
sbb
icebp
push
mov
xchg
std
cmp
inc
jp
mov
mov
sub
mov
cmpsl
jno
adc
add
jmp
pop
popf
leave
imul
cmpsb
pop
inc
ror
lret
daa
adc
out
stos
in
shr
loopne
mov
or
in
ret
in
sub
shr
iret
add
pop
iret
or
aam
mov
lahf
fnstsw
mov
and
cmpsb
test
xchg
mov
and
mov
jmp
popa
dec
dec
sub
jle
pop
sub
frstor
mov
repnz
mov
mov
lock
in
pop
mul
adc
adc
shll
add
cmpsl
leave
pop
aam
arpl
push
sub
adc
and
stc
sub
mov
push
out
ljmp
fsubr
xor
in
dec
scas
mov
stos
jmp
call
nop
cmpsb
pop
mov
push
xor
out
shll
adc
shlb
mov
popf
pop
popa
gs
data16
cmp
lods
and
cmp
sbb
fcmove
or
cmc
scas
lahf
stc
pop
xchg
je
pop
push
pop
outsb
scas
icebp
jnp
or
mov
jmp
popf
xlat
adc
mov
cltd
call
sub
mov
cld
mov
mov
xor
or
out
dec
cmpsl
pop
mov
pop
push
add
push
stc
mov
mov
ss
js
mov
cmpsl
adc
push
aaa
ss
cmp
pmulhw
sbb
mov
push
call
dec
insb
jmp
arpl
rcr
xchg
loopne
pop
bound
sbb
pop
aad
push
jp
cs
repnz
adc
adc
inc
dec
es
mov
stos
std
pop
mov
div
mov
push
pop
cmp
inc
jp
jle
jl
mov
adc
cmp
fs
push
inc
addb
push
aas
sub
and
rorb
ja
cmpsl
outsl
fwait
mov
loope
sti
adc
rorb
mov
aas
add
mov
and
movsl
pop
push
das
inc
mov
negl
jns
sbb
dec
js
sti
sbb
pop
xchg
roll
imul
fiadds
cmpsb
xor
push
cwtl
add
push
dec
ret
out
sbb
and
mov
xchg
scas
ret
dec
sbb
imul
pusha
dec
orl
andb
adc
xchg
cmp
aaa
jmp
lahf
sti
mov
jb
mov
and
or
test
in
out
shl
inc
jg
push
dec
xchg
idiv
cmp
mov
outsl
das
push
cmpsb
mov
movsl
push
xor
sub
mov
dec
mov
dec
movsl
imul
or
cmp
imul
test
cmp
mov
or
pop
mov
push
popa
or
add
jmp
and
stos
and
stos
in
xor
push
pusha
xchg
sbb
lock
sbb
out
cmp
push
ret
xchg
jecxz
stos
push
iret
push
mov
loopne
enter
sbb
inc
int
fldt
stos
pop
test
call
mov
mov
pop
mov
aam
idivl
mov
mov
lock
sub
stos
ret
jl
fdivl
rorl
out
cmp
lock
mov
iret
dec
push
mov
mov
mov
mov
and
jno
enter
mov
mov
jbe
in
jae
pop
inc
sti
fwait
loope
sbb
loope
pop
mov
movsl
pop
pop
push
sbb
sbb
add
icebp
out
addr16
test
jecxz
stos
fs
mov
les
jne
aas
cmc
xlat
cmpsb
jae
nop
inc
lea
or
or
ss
ffree
icebp
out
mov
js
les
scas
xor
sqrtps
sbb
insb
cmp
mov
xchg
mov
add
test
and
adcb
mov
mov
test
es
insb
fstpt
jg
mov
les
sub
testl
fld
dec
dec
lds
adc
xor
loopne
add
mov
fstl
push
aam
push
arpl
cmpsl
and
daa
lods
lret
dec
fistpl
out
mov
lock
sub
jecxz
insl
lds
inc
adc
jae
mov
test
mov
stc
jne
fisttpl
ret
shr
mov
or
stos
out
ja
xor
test
xchg
cwtl
enter
mov
dec
daa
arpl
ljmp
cmp
and
xor
xor
cmp
mov
sbb
outsb
sbbb
stos
sbb
fwait
sub
std
mov
push
jbe
xchg
pushf
sub
hlt
xor
sti
inc
lret
scas
arpl
or
je
out
adc
addr16
mov
and
xchg
dec
cmp
xchg
fisubrs
inc
je
and
sub
addl
movsb
dec
push
out
inc
pusha
mov
add
mov
push
add
mov
fldl
outsl
fs
mov
movsb
sbb
stos
push
movsb
fsubs
adc
xchg
or
movhps
insl
push
lcall
sahf
je
cmp
ljmp
cltd
cmp
out
add
test
cs
cwtl
cld
cmpsl
adc
lahf
dec
adc
imul
stos
ss
dec
jae
xchg
test
dec
ja
ret
mov
es
mov
ds
aam
pop
mov
inc
loop
mul
and
int
not
xchg
xchg
fsubrl
cmpsb
pop
jae
test
dec
jcxz
lods
cltd
data16
jns
jmp
dec
ret
iret
xchg
mov
lret
shlb
mov
mov
loope
subb
mov
js
fcomi
hlt
test
clc
loope
imul
cwtl
leave
repnz
je
jbe
lock
add
mov
xchg
push
cmp
lret
push
dec
mov
sahf
dec
pop
adc
icebp
mov
mov
lods
jo
call
cld
inc
flds
popf
out
lods
adc
jae
adc
cmp
jle
mov
or
mov
sti
test
adcb
pushl
xor
call
repz
stos
sub
mov
or
adc
sahf
movsl
xchg
lds
test
cmp
or
sar
mov
test
test
mov
and
lahf
lahf
sbb
xchg
rorl
lcall
xor
and
frstpm(287
leave
xor
mov
xchg
dec
mov
fwait
lods
leave
orb
mov
cli
in
stc
mov
mov
inc
imul
dec
pop
lea
es
sub
paddb
push
pop
mov
dec
js
push
mov
sub
insl
scas
jecxz
mov
dec
pop
cld
or
add
inc
or
pop
or
movsb
hlt
sbb
xchg
mov
jbe
fwait
call
jbe
add
dec
test
sbb
lock
fidivl
pushl
mov
es
inc
mov
arpl
mov
rolb
mov
add
leave
mov
rcrb
mov
out
dec
xchg
cmp
les
jge
adc
addr16
insl
dec
jbe
loopne
push
jne
leave
sub
mov
mov
inc
adc
adc
xchg
inc
add
fs
inc
popa
xor
ret
and
xor
jb
shl
loopne
out
add
xchg
sti
cs
shll
call
mov
js
movsb
pop
mov
cmp
out
add
cs
push
js
aam
lods
add
ret
add
fnsave
cmp
mov
and
loopne
pop
call
fdivr
mov
out
sbb
xor
int
arpl
loop
rolb
and
jno
rcrl
popf
addr16
cs
push
fiaddl
mov
pop
mov
sbb
movsl
inc
cwtl
xchg
call
add
imul
out
call
lea
insl
and
jno
hlt
push
mov
mov
es
test
clc
mov
or
jns
push
mov
insb
fs
adc
push
shrb
ljmp
xchg
jns
dec
mov
in
pop
cmp
adc
jp
mov
sahf
jbe
lret
stc
test
and
bound
outsb
mov
push
dec
hlt
push
mov
int
insb
jno
popf
out
popf
cmc
cmp
pop
mov
imul
inc
ret
xchg
add
sub
ss
push
enter
out
popf
adc
aam
adc
and
into
xchg
inc
jae
pushf
pop
mov
pop
push
out
and
lods
lods
pop
push
pushf
je
cld
in
pop
bnd
pop
and
repnz
mov
clc
jae
imul
fs
xor
dec
loope
testl
test
xchg
add
dec
outsb
hlt
xor
sub
fcmovb
cltd
pop
in
sahf
mov
ret
xorb
sub
sub
pop
gs
push
je
lcall
int
add
aad
repnz
subl
mov
lock
xchg
adc
mov
mov
aaa
mov
scas
aaa
sub
nop
xor
mov
cmc
mov
shlb
pusha
sbb
push
stos
cltd
data16
shlb
xchg
sahf
inc
aaa
pop
icebp
inc
and
movsl
loop
shrb
andb
or
jmp
inc
orb
test
mov
scas
sub
fsubl
sarb
cmp
cmp
insl
daa
enter
cltd
cmp
jo
lret
test
dec
add
in
aad
lods
imul
ret
aad
repz
les
jno
jno
les
adcl
jnp
aaa
data16
jl
push
jno
outsb
mull
sbbl
mov
or
xlat
sbbl
int3
popf
popl
pop
and
mov
and
inc
ret
stos
lea
push
in
pop
out
stos
jno
loope
test
outsb
pop
hlt
xlat
int
sbb
cs
in
fstl
icebp
stos
xchg
push
stc
xchg
dec
mov
sbb
iret
shll
out
pop
sbb
adc
pop
pop
or
dec
fsub
jle
xchg
add
in
xchg
gs
sub
add
fiaddl
fnsave
fwait
adc
pop
mov
or
sub
and
xchg
xchg
lods
repnz
arpl
jno
lret
test
rcll
jo
jb
pop
mov
pop
mov
adc
xor
cwtl
mov
mov
or
and
pop
push
or
xchg
cmp
mov
pop
mov
ja
sbb
loopne
push
push
xchg
xor
test
adc
lcall
mov
sub
repz
lods
int
fs
out
inc
daa
jns
pop
xor
scas
daa
fs
rorb
lds
pop
xor
ja
ja
mov
xchg
hlt
or
mov
xchg
jb
xor
sbb
mov
push
adc
jno
testl
in
xor
or
pop
mov
add
jns
int
sub
ret
lock
in
insl
inc
leave
arpl
jmp
adc
and
mov
add
push
mov
ja
adc
inc
pop
jecxz
lcall
mov
jns
pop
xchg
leave
pop
adc
jae
mov
cmp
sti
fnsave
lock
mov
dec
pushl
or
insl
loop
imul
cmp
shlb
mov
mov
jae
mov
repnz
sbb
xchg
and
sub
xchg
call
cmpsl
scas
fwait
cmp
adcb
push
lret
pop
xchg
sbb
and
push
loop
and
loop
and
sub
rcrb
neg
or
add
push
cmp
adc
mov
add
adc
fs
push
frstor
xchg
popf
in
hlt
mov
and
xor
add
adc
fs
push
frstor
xchg
popf
in
hlt
mov
and
xor
add
adc
fs
push
frstor
xchg
popf
in
hlt
mov
and
xor
add
adc
fs
push
frstor
jecxz
insb
add
sub
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
stos
and
sbb
or
jae
inc
cmp
or
dec
rorl
mov
adc
arpl
push
lret
mov
ret
jnp
or
pop
xchg
dec
ret
mov
adc
arpl
push
lret
sbb
mov
sbb
and
jl
jl
push
jno
lret
mov
inc
mov
pop
push
jbe
push
out
gs
mov
sti
lock
push
push
mov
pop
inc
xchg
xchg
xchg
mov
aas
imul
pusha
mov
adc
pop
dec
push
cmc
jle
repnz
and
sub
dec
jge
stos
mov
cli
jb
arpl
fmul
mov
sbb
lcall
dec
inc
rcll
leave
xchg
lahf
cld
adc
jbe
inc
lret
dec
pop
hlt
dec
insb
or
jecxz
pop
fildll
fcoml
jne
cli
sbb
and
and
or
mov
push
out
and
dec
ret
stos
and
jae
arpl
push
lret
mov
mov
jp
push
pop
rorl
into
pop
out
and
jp
push
pop
arpl
cwtl
xlat
jne
outsb
lds
xchg
es
aaa
sarl
and
jmp
jno
cmp
inc
push
repnz
in
xor
push
xchg
int3
jp
jo
jnp
mov
arpl
push
lret
mov
mov
jp
push
pop
rorl
mov
adc
arpl
push
lret
mov
mov
jp
push
pop
rorl
mov
mov
loope
test
test
or
jnp
cmp
pop
inc
or
iret
mov
shrb
sub
lahf
mov
fidivrl
cmp
pushf
sysret
cld
out
int
jmp
or
int
push
cmpb
imul
adc
add
or
cmpsl
mov
stc
rolb
jo
xor
pop
sbb
mov
xlat
push
add
pop
fdivr
xchg
or
inc
jp
ljmp
outsl
pop
pop
sub
int3
mov
mov
sti
xor
jp
sbb
ret
aad
cmpsb
das
push
jge
dec
dec
dec
int3
gs
xor
sub
push
popf
mov
mov
dec
pop
faddl
jmp
xchg
js
mov
lods
imul
sbb
aas
fs
and
fsubrl
das
dec
insl
adc
andl
enter
dec
cmp
mov
cmp
out
xchg
or
ljmp
adc
push
mov
jnp
mov
popl
int3
subl
push
cmc
cmp
fadd
or
out
call
sbb
sub
imull
mov
mov
pop
push
mov
lods
sbb
push
repz
js
mov
das
insb
stos
or
out
inc
les
xor
push
and
adc
outsb
nop/reserved
aam
sbb
mov
mov
push
sub
pop
or
push
fsubrs
mov
mov
sub
xchg
fisttps
xchg
pusha
pop
lret
out
mov
mov
sub
nop
xor
xor
jecxz
pop
pop
insb
xchg
xor
push
js
pop
dec
popf
in
mov
nop
cmp
fistpll
or
dec
xor
cld
rcrl
loopne
rcl
aaa
pushf
pusha
pop
out
ds
jle
adc
js
jbe
scas
mov
xlat
hlt
cmp
ss
or
icebp
shrl
mov
pop
dec
imul
mov
loopne
jae
gs
ss
pop
xor
ds
movsl
repnz
add
repnz
cvtpi2ps
aaa
pop
stos
lahf
fimull
or
push
enter
jo
sub
pop
mov
add
inc
xchg
push
sahf
sarl
or
fsubrl
faddl
cld
jg
sub
int3
popw
inc
mov
in
pop
ror
rorl
mov
shll
ret
pop
leave
mov
and
inc
pop
repnz
mov
cmp
xor
out
and
fnsave
or
imul
pop
inc
jns
loopne
insb
pushf
xchg
adc
cmp
out
adcb
add
mov
lods
push
push
sub
jne
pop
sub
mov
int
mov
mov
in
bound
mov
pushf
xchg
or
pop
dec
mov
dec
or
clc
jno
sahf
pop
in
mov
mov
push
xor
jge
out
sub
dec
mov
sbb
sub
sub
in
fimuls
imul
xlat
in
in
mov
ret
mov
inc
addr16
xor
push
mov
sarl
jnp
gs
jnp
mov
mov
lock
jbe
int3
adc
decb
inc
jb
xchg
lahf
hlt
dec
jns
cltd
lret
stos
mov
jnp
fsubl
out
fld
setb
mov
sar
mov
movsl
push
mov
mov
jp
pop
sbb
ret
sbb
sbb
add
aaa
lret
icebp
dec
loope
fcomi
outsl
popa
mov
xchg
xchg
sub
es
leave
sub
add
test
pop
loop
aaa
call
test
lahf
out
ret
mov
aad
outsb
xlat
or
test
mov
sub
hlt
sti
mov
and
pop
adcl
fwait
add
and
stos
dec
inc
adc
mov
push
movsb
lcall
flds
pop
dec
das
push
adc
cmp
xchg
int
push
fs
fiadds
pop
in
xchg
sub
fisubrs
fs
push
pop
inc
ficomps
fbstp
pushf
push
inc
xor
pop
sub
inc
dec
idivl
xor
sbb
mov
aas
repz
incb
nop
mov
sbb
xchg
push
xchg
daa
add
aam
gs
fst
das
mov
adcl
mov
xlat
imul
sbb
push
mov
xor
std
mov
xchg
mov
test
mov
mov
mov
enter
push
movsb
xor
icebp
push
ffreep
in
rcrb
mov
sbb
fidivrl
xchg
stc
adc
jb
mov
scas
aad
xlat
shl
xchg
ljmp
cmp
xchg
lods
push
inc
leave
mov
sub
mov
icebp
shll
pop
ss
sbbb
call
and
sub
add
icebp
in
add
scas
jge
cli
pop
inc
rcll
dec
pop
sbb
cmp
out
jecxz
cmp
xchg
push
sub
rcl
jb
push
std
mov
sbb
pop
roll
push
and
popa
mov
lea
enter
add
xchg
mov
xchg
nop
add
popa
mov
pushf
inc
mov
cld
cltd
inc
insl
rcr
mov
pushf
xchg
or
mov
jle
mov
dec
sbb
add
xchg
in
sti
xor
adc
mov
pop
or
enter
into
mov
inc
aaa
sub
jmp
sub
add
call
xchg
or
dec
xchg
mov
jbe
jge
sub
dec
in
jbe
clc
jne
imul
dec
sub
cmp
mov
sub
jl
les
ret
jne
shlb
push
dec
pop
imul
xlat
push
insb
loop
in
adc
jmp
ror
or
loopne
sub
movsb
push
sahf
and
shlb
add
and
repnz
xchg
xor
gs
setge
std
xor
jb
jle
dec
adc
cmp
inc
fmuls
rclb
jae
xor
fucomi
xchg
aad
sahf
fldl
xchg
xchg
jge
push
pop
cmp
xor
push
sbb
lock
cmpsl
testl
push
aad
adc
mov
fsub
sub
jge
fstl
jnp
inc
fildl
andl
xor
ret
call
mov
out
test
pop
test
push
lods
je
je
test
cmpsl
sti
dec
sbb
cmc
dec
mov
and
icebp
int
ret
lds
into
push
in
lock
dec
testb
mov
xchg
fimull
jae
inc
mov
out
jmp
bound
xchg
mov
and
test
adc
mov
jns
lea
aam
push
loopne
xchg
jns
xchg
pop
cld
into
xchg
in
push
xor
stc
cmc
je
jne
mov
or
ret
jae
mov
test
in
or
cld
mov
in
sahf
and
out
jne
xor
or
push
lret
xor
lods
jo
sbbb
fmul
test
push
out
sbb
xor
stos
cmp
jbe
inc
sahf
push
mov
scas
lods
imul
mov
or
shl
imul
daa
es
les
fisubl
and
mov
pop
mov
das
sti
call
lds
jns
mov
outsl
xorb
xchg
mov
mov
pushf
sti
imul
sbb
pop
sub
pushf
mov
movsb
xchg
jg
stos
enter
fildl
iret
pop
xor
cld
arpl
das
push
push
mov
loopne
add
str
repnz
add
iret
or
sbb
jae
cmc
lods
push
mov
jo
je
jns
loope
xchg
jmp
mov
dec
pusha
cmp
insl
add
lds
sbb
mov
pop
in
inc
rol
fnstsw
jp
fwait
push
enter
adc
loopne
and
mov
inc
mov
xlat
adc
jg
inc
push
scas
xor
pop
jecxz
pop
cmp
jnp
sub
cmp
mov
inc
out
stc
inc
adc
fs
fwait
mov
out
rcrl
ds
inc
repnz
pop
mov
lret
negb
sbb
loopne
xchg
add
mov
ret
sti
push
push
rcl
add
hlt
and
mov
pushf
stos
imul
pop
sbb
push
adc
mov
mov
lret
xorb
xchg
push
mov
and
jb
das
dec
fldl
stos
xor
fcoml
nop
pop
and
mov
mov
xor
xchg
push
push
cmc
pop
jns
mov
jno
ljmp
mov
aas
int3
sbb
loop
cmp
cwtl
inc
sbb
dec
sub
mov
pop
dec
push
jmp
cs
ds
das
ljmp
inc
xor
mov
out
pop
xor
jae
inc
jb
xchg
adc
out
xchg
push
lret
incl
adc
cmp
xor
add
sbb
jnp
sbb
push
xor
inc
xor
push
fnstsw
add
mov
mov
in
dec
dec
aam
xor
mov
adc
jge
push
pop
js
and
inc
mov
andl
pop
mov
mov
sbb
movsb
icebp
add
and
xchg
dec
aad
mov
mov
cld
cld
add
jno
jg,pn
adc
js
imul
fiaddl
test
push
jg
push
xchg
outsl
cli
sahf
sbb
imul
adc
and
loop
push
mov
adc
xchg
cmp
mov
das
popa
ss
dec
nop
jp
dec
mov
inc
pop
push
xor
xor
les
mov
xor
int
frstor
ja
or
popa
lret
pop
sbb
sbb
mov
cmp
jg
jns
movb
pop
adc
mov
repnz
out
add
lret
sub
iret
cmp
loopne
xchg
pop
je
jp
dec
inc
add
outsl
cmp
scas
and
decl
imul
fsubl
movsb
mov
addr16
call
addr16
adc
jp
cwtl
loopne
inc
bound
leave
popf
int
out
or
or
popf
mov
xor
cmpsl
adc
mov
mov
popf
pop
ljmp
fs
sub
stos
faddl
xor
repz
stos
stos
mov
adc
imul
dec
lods
movsb
data16
dec
ficompl
push
sbb
xor
dec
push
stc
ljmp
out
test
xchg
fwait
mov
dec
sub
pop
cmp
sbb
mov
xchg
ljmp
xchg
fimuls
mov
fistpll
add
loop
stos
lahf
mov
jecxz
pop
negb
xchg
insb
adc
fs
jl
sbb
inc
in
push
sub
movsl
mov
xor
out
cmp
push
sub
mov
inc
orb
fsubrp
es
sbb
push
sbb
pop
xchg
and
bound
outsb
jp
jmp
test
dec
push
jns
daa
push
test
nop
mov
cltd
cs
jecxz
call
adc
fwait
pop
lods
imul
fmuls
pusha
xchg
data16
push
out
mov
ret
cmp
das
jmp
or
push
stos
movsb
jp
mov
jecxz
fnstcw
push
in
scas
aas
mov
sub
es
push
jb
push
add
sub
xor
mov
and
rcll
and
sbb
iret
into
pop
and
aaa
sub
xchg
arpl
push
out
outsb
inc
cs
add
lea
push
sub
cmp
fisubs
outsl
push
arpl
xchg
out
mov
repnz
mov
lea
fdivr
and
lcall
shlb
adc
ret
out
dec
adcb
fisubs
fmulp
ror
mov
lods
mov
xor
cmpl
inc
ret
stc
pop
test
lret
dec
cltd
testl
pop
lahf
into
mov
ljmp
sbb
inc
cmp
insw
sub
inc
or
lret
dec
out
lock
gs
jno
mov
fstpt
push
ret
mov
push
mov
scas
sub
fmull
cld
dec
mov
cmp
fs
cld
xchg
je
push
mov
cmp
mov
xchg
push
sti
mov
out
rcrb
les
jle
add
int
jae
inc
push
jmp
adc
nop
ja
lods
lahf
mov
popa
es
lods
pop
xor
stc
and
lcall
dec
insl
popa
repnz
int3
imul
test
mov
xor
pushf
test
adc
sub
mov
cmp
mov
sarl
mov
cmp
pop
gs
jmp
pop
push
jae
testl
out
sbb
out
mov
les
and
in
sarl
push
push
sahf
dec
lcall
out
adc
or
xchg
sub
into
dec
xor
xor
sub
mov
mov
iret
cs
data16
mov
inc
add
mov
xchg
mov
push
dec
or
or
nop
daa
add
cmp
ficomps
pop
dec
pop
rol
jne
mov
inc
std
pop
xchg
cmp
call
inc
arpl
jbe
stos
jae
or
lds
mov
mov
mov
aad
mov
test
flds
cwtl
int3
push
push
in
mov
mov
mov
mov
mov
leave
push
mov
lret
and
lcall
rolb
and
data16
cmp
cmc
sub
jae
jnp
ret
out
push
adc
jp
dec
out
js
rcrl
lods
push
mov
inc
xor
push
imul
push
xchg
mov
or
or
push
jno
mov
mov
sti
or
mov
insl
mov
add
inc
xchg
daa
xchg
jno
out
lods
pop
mov
sti
adc
jnp
pop
outsb
sbb
outsb
mov
adc
stos
lea
push
clc
and
std
aam
or
cmp
das
and
mov
and
jo
ret
rcl
mov
pop
iret
xlat
mov
jbe
sbb
jl
add
icebp
aam
adc
jbe
or
and
pusha
loop
xlat
loop
inc
dec
pop
imul
aaa
mov
sarb
outsb
mov
jns
jne
dec
and
and
push
enter
push
xchg
pusha
out
adc
rorl
test
mov
leave
add
jne
dec
mov
mov
outsb
pop
push
dec
mov
dec
mov
jmp
sbb
push
xorb
dec
leave
rcrl
add
xor
sahf
sbbb
insb
fwait
pop
or
test
int3
cmp
mov
fsubrl
nop
fnstsw
es
fnsave
sub
insb
fisttps
inc
adc
adc
mov
pop
fidivrl
pop
adc
insb
in
push
lret
dec
mov
imul
and
aaa
push
lock
repz
in
ret
pop
dec
sbb
jecxz
mov
push
outsb
test
daa
cmp
fistpl
cmp
call
mov
add
mov
push
arpl
pushf
fwait
vmovq
data16
fxch
adc
je
jo
or
dec
sahf
pop
enter
lahf
pop
bound
sti
mov
stos
pop
sbbl
jne
xlat
or
subl
and
out
pop
je
adc
xchg
data16
jg
jle
dec
cmpsl
fs
adc
stos
cltd
fildl
test
dec
nop
jnp
sbb
cmp
popa
add
mov
xchg
pop
pop
ret
std
sub
les
lret
or
in
mov
push
insb
scas
inc
les
mov
es
nop
cmp
adc
in
fimull
xchg
mov
and
and
xor
adc
out
xchg
arpl
push
cmpsb
gs
cmp
sbb
and
mov
ja
cmpsb
inc
sbb
lret
cmpsl
shll
add
daa
xor
mov
fyl2x
test
cmp
add
mov
mov
pop
hlt
test
leave
jae
or
mov
lds
push
or
mov
jns
mov
das
repnz
and
ret
stos
insb
ss
cmc
mov
imul
push
adc
or
adc
cmp
movsb
shlb
imul
movsb
fisubrs
lahf
dec
pusha
push
pop
xchg
inc
mov
stc
push
cmp
inc
dec
or
mov
push
sbb
filds
xchg
and
inc
lahf
inc
loop
mov
xor
dec
jmp
mov
xor
rol
int
mov
mov
mov
jmp
mov
inc
cmp
pop
add
dec
sti
jno
int
xor
cli
inc
mov
mov
xchg
gs
movsl
add
repnz
cwtl
jae
int3
das
pop
mov
subl
add
je
stos
or
cmp
push
add
inc
lahf
fidivrs
decb
aas
xchg
stos
pop
push
rclb
sbb
inc
dec
inc
xchg
sti
ljmp
fsubrp
int
ror
sub
jl
add
push
pop
scas
je
shr
pop
fisttps
inc
shll
shrb
inc
cld
sub
jno
fdivp
jnp
cli
dec
mov
in
and
mov
lds
popf
sahf
and
test
sub
loopne
aaa
andl
jbe
mov
icebp
negl
push
sub
pop
xchg
test
insl
mov
dec
jecxz
cmp
jecxz
push
sub
clc
lret
or
in
fdivs
lss
lods
cwtl
cmpsl
mov
sub
sbb
inc
adc
enter
lcall
psubsb
scas
jecxz
adc
addr16
cmc
fdivrl
xchg
imul
sbb
pop
add
std
in
testb
sahf
jbe
test
stos
ja
add
test
lods
push
jbe
dec
fstpt
cmp
inc
add
and
and
js
adc
imul
pop
or
aaa
mov
jge
data16
aad
mov
jl
add
sub
es
push
inc
dec
pusha
mov
ret
lahf
iret
pop
rcl
dec
adc
jecxz
add
add
push
jbe
je
shlb
std
push
lcall
xor
rclb
xchg
fcoml
sarb
iret
ficomps
mov
xor
adc
mov
jg
data16
jmp
xor
test
push
mov
and
jl
stos
ret
fisttpl
mov
or
in
dec
xchg
js
loopne
xchg
mov
push
call
sub
adc
pop
mov
add
inc
xor
cwtl
or
and
jl
rorb
cmp
push
mov
sbb
pop
dec
sub
int
xor
jae
fidivrl
push
or
push
in
sub
push
or
and
xor
mov
sub
aas
and
jg
aam
loop
test
jns
cmp
xchg
fstp
mov
fildl
xchg
jle
pop
jmp
jp
mov
sub
pop
in
jl
fsubs
cmp
mov
out
int3
adc
pusha
mov
rol
sbb
push
adc
cli
jmp
xchg
aaa
mov
inc
cmp
cmpb
lods
add
rcrb
ljmp
xorl
dec
mov
fstpt
push
pop
movsb
lret
sbb
sbb
cmpsl
mov
cmp
in
xor
out
stos
inc
pop
inc
or
xlat
mov
out
repz
test
fnsave
inc
repnz
mov
pop
pop
ljmp
in
inc
int
push
adc
mov
fisttps
jge
xchg
cmp
inc
add
sbb
lods
lret
outsl
push
pop
insl
js
add
sti
fstps
sub
mov
enter
cmp
outsl
adc
in
mov
pop
mov
scas
bound
add
add
aam
in
js
aam
push
insl
frstor
aaa
xorl
mov
inc
scas
call
push
icebp
fmul
xchg
add
xor
dec
lods
xor
test
xor
repnz
stos
mov
xchg
add
dec
punpckldq
test
ret
cmpsb
icebp
mov
sbb
rorl
into
fstp
mov
jns
jge
jne
inc
xchg
mov
adcl
xchg
push
jl
ret
div
rcrb
and
cwtl
scas
lea
adc
cld
lock
test
mov
xchg
arpl
outsb
cwtl
mov
dec
jle
add
mov
add
mulb
fs
cwtl
mov
sbb
xor
outsl
decl
sbb
adc
insl
addb
popa
add
push
pop
call
push
leave
cmc
and
mov
mov
insl
std
push
inc
and
adc
arpl
push
lret
mov
mov
jp
push
pop
rorl
mov
adc
arpl
push
lret
mov
mov
jp
push
pop
rorl
mov
xchg
mov
cli
jae
jecxz
push
lret
xor
mov
jp
push
pop
rorl
mov
adc
arpl
push
lret
mov
or
jnp
sbb
sub
cmp
mov
push
stc
imul
push
add
hlt
fsub
ljmp
cmpsb
test
mov
fs
push
js
or
test
adc
jo
hlt
fadd
mov
cmp
mov
cltd
movsb
test
mov
fs
pusha
inc
adc
add
xor
das
sbb
sub
xchg
aad
fneni(8087
roll
and
adc
add
scas
sbb
rcr
mull
pop
and
adc
cld
dec
sub
call
jne
push
push
fcomp
push
icebp
inc
add
daa
mov
mov
iret
addr16
xchg
xor
popa
and
push
sbb
cmp
daa
popa
mov
xchg
frstor
mov
je
inc
repz
sub
out
cmp
cld
or
cmp
jl
xlat
test
cmpsl
mov
pop
or
pop
adc
popa
cmp
add
cmpsl
daa
hlt
std
adc
les
out
movsl
and
mov
fldenv
inc
cmc
jle
jae
cmpsl
enter
aaa
hlt
daa
mov
sub
fmull
mov
xchg
mov
xchg
push
xor
and
into
and
cwtl
sbbb
ljmp
sbb
insb
inc
jne
sub
popa
mov
mov
cld
ror
aad
in
xor
or
pop
jbe
inc
jp
push
lods
mov
mov
fdiv
mov
and
push
sbb
adc
add
hlt
fsub
call
mov
movsb
test
mov
fs
xor
and
adc
add
hlt
fsub
call
mov
movsb
test
mov
mov
notl
push
xchg
dec
pusha
dec
out
stos
mov
mov
outsb
xor
sub
das
xor
in
and
jbe
faddl
ja,pt
cwtl
mov
popl
pop
pop
adc
and
jp
bound
testb
and
fdivs
xorl
movl
movsl
fidivl
andl
cld
mov
mov
push
xchg
fmul
hlt
lcall
dec
cmp
outsl
and
pop
fwait
adc
and
mov
cmpsl
sahf
jno
cmp
add
in
cmpsb
test
xor
mov
mov
pop
xor
fsubrp
cltd
cwtl
fstps
cmp
mov
lcall
mov
xchg
pop
popl
cmpb
xchg
ret
xchg
jmp
int3
mov
push
mov
mov
ffreep
scas
adc
fdivrs
aas
cmp
insb
in
test
pop
inc
nop
mov
mov
into
pop
jl
fldcw
ljmp
push
cs
sub
mov
cmpsl
add
das
sub
mov
orl
arpl
lods
mov
add
insl
ret
or
mov
imul
int
pop
lods
pop
popf
dec
test
outsl
insl
cltd
jne
aaa
loope
and
movl
mov
jne
cmpsb
in
aaa
mov
jae
loop
mov
mov
cmpsl
jge
mov
adc
or
jp
jne
mov
xor
push
add
and
pop
sub
loope
in
imul
pop
mov
mov
cli
xchg
mov
pop
jmp
scas
fsts
and
pop
hlt
sbb
inc
call
sti
pop
mov
inc
sbb
and
or
mov
pop
shlb
xlat
mov
sti
xchg
repnz
or
add
cmp
pop
xchg
sbb
sbb
pusha
jne
mov
xchg
sbb
les
lcall
or
cld
cltd
repz
sahf
dec
jecxz
icebp
push
in
in
les
fadds
fisttpl
call
mov
push
sahf
out
fcmovbe
ds
inc
in
fsubrl
or
pop
gs
js
bound
jno
data16
dec
idivb
xorl
clc
pop
jns
ret
xchg
mov
jl
dec
push
hlt
sbb
inc
jl
cmp
mov
inc
sbb
sub
int3
dec
cmpsl
inc
lods
pop
cli
mov
out
lcall
push
mov
aam
mov
lea
mov
add
cmpl
and
ret
add
and
inc
cltd
jae
dec
call
sbb
enter
sbb
dec
aas
mov
jno
cmp
pop
push
mov
and
mov
dec
mov
or
cld
add
faddl
add
pop
dec
sbb
dec
fcmovnu
pop
std
lds
pop
and
jl
pop
and
add
jnp
xor
ja
cmp
enter
out
das
lcall
adc
jbe
addr16
imul
push
sub
sbb
jl
sarl
mov
dec
xor
or
call
push
jecxz
jbe
mov
push
lea
lods
add
mov
lahf
push
data16
xchg
jae
in
pop
pusha
push
push
gs
pop
and
sbb
mov
in
and
lds
push
fadd
fmul
into
cmpsb
sbb
cmpsb
and
pop
pop
int3
notl
cmp
outsl
fdivs
push
fs
dec
sub
xchg
inc
stc
bound
pop
stos
jbe
into
repz
jno
fstpl
xor
les
push
mov
push
inc
stos
cmp
inc
mov
pop
leave
mov
jmp
jle
cwtl
jo
push
mov
rorb
fmul
jp
repz
dec
rorb
cs
and
in
pushf
mov
pushf
test
pop
outsb
mov
mov
mov
mov
push
pop
mov
inc
mov
test
ljmp
jae
mov
outsl
fsubrs
lea
pop
daa
dec
dec
cmp
aam
mov
jno
jg
fisubs
jp
bnd
sub
xchg
sbb
and
pop
stos
es
cltd
test
aam
push
add
lret
push
fs
fcmovnu
xor
jb
sti
mov
add
daa
fsubl
cmp
xlat
shr
ljmp
notl
out
enter
mov
sbb
jbe
mov
jmp
pop
mov
aam
dec
mov
or
sub
xor
inc
sbb
repnz
stos
imul
mov
aam
imul
mov
sarl
mov
in
sbb
xorb
mov
inc
ja
psllq
pop
mov
jecxz
jbe
add
fldcw
pop
or
fcomi
cmp
scas
mov
inc
ja
gs
ja
add
test
mov
aas
leave
sti
inc
mov
jecxz
sub
lods
dec
and
in
lret
mov
pop
xor
mov
in
test
repz
pop
adc
out
mov
lods
mov
mov
dec
cld
cmc
pusha
icebp
jl
pop
lahf
movb
fisttpll
xchg
ficomps
rcl
inc
xchg
mov
add
and
xor
mov
in
test
dec
pop
mov
outsl
push
add
jg
push
aas
xorl
nop
lds
sbb
popa
adc
pop
bound
sbb
jno
aas
cmp
jb
cli
push
dec
mov
inc
das
xchg
mov
lret
adc
mov
push
jp
fwait
into
aas
jl
mov
or
imul
stos
ret
xor
pop
xchg
fcompl
pop
mov
shlb
cmp
mov
mov
pmulhuw
imul
mov
dec
and
out
push
movsl
adc
nop
test
es
ficoms
dec
insb
daa
inc
jmp
stos
cmc
sbb
xchg
call
insl
or
fildl
sbb
jb
sbb
in
sub
lret
adc
mov
cwtl
stos
cmpsl
testb
aas
jmp
scas
cmp
inc
xchg
or
lock
lds
mov
loop
or
lcall
jg
stos
xchg
mov
fdivs
scas
mov
xchg
add
sub
outsb
bound
push
lret
cmp
jg
push
jecxz
insl
mov
push
push
mov
push
cmp
shr
dec
or
inc
rcl
pop
dec
mov
push
dec
mov
int
stos
lret
mov
fadds
add
shrl
and
or
ljmp
inc
xchg
push
and
sbb
cmp
lret
xlat
shlb
out
ret
push
mov
xor
test
popa
mov
sbb
push
fistpl
xchg
ror
mov
loop
xchg
sbb
jge
mov
inc
lods
push
not
or
adc
daa
push
pop
scas
pop
xor
pop
inc
dec
xor
dec
pop
shll
repz
jp
xchg
dec
ficomps
jnp
lret
ret
add
popa
movsl
jge
repnz
out
xor
loope
mov
mov
js
iret
push
fisubl
xchg
lods
jl
dec
sub
dec
out
shll
orl
outsl
popa
pop
imul
lret
sub
mov
add
mov
fcomi
cmp
mov
movsb
fldcw
mov
fstpt
and
push
and
jg
je
fs
daa
cmp
mov
xor
int
cmpsb
rcrl
daa
add
and
xchg
xor
sub
fsubrl
lock
and
mov
push
cmp
push
dec
shrl
mov
inc
das
notl
pop
pop
xor
aas
dec
inc
fstpl
sub
hlt
test
inc
push
ret
xor
loop
daa
fdivr
inc
xor
shll
jecxz
pusha
pop
imul
adcl
insb
mov
test
mov
xor
mov
push
lret
sbb
sbb
mov
loop
lds
cmp
dec
mov
pop
movsl
sub
test
ja
aam
das
xchg
clc
adc
inc
inc
mov
je
test
cmp
and
pop
int3
jne
inc
iret
nop
inc
jmp
test
mov
jge
imul
rolb
popf
repnz
shlb
mov
adc
lock
inc
fs
lret
pop
icebp
mov
fs
fwait
lahf
int3
mov
hlt
leave
je
jle
mov
fcmovb
mov
ret
jp
cltd
sub
bound
lods
inc
ret
fidivl
sbb
add
insb
xor
dec
mov
mov
or
cmp
push
stos
idiv
out
xchg
cmp
sbb
in
clc
pop
out
push
pop
mov
jo
scas
out
xor
ret
push
loope
loope
mov
imul
dec
fiaddl
sti
mov
cmp
imul
jmp
je
xchg
or
push
dec
mov
lock
xchg
popf
push
adc
xchg
in
cmp
je
pop
sbb
cmpsl
xlat
push
jge
or
cmpsb
sub
movsl
aam
shlb
int
push
fwait
rolb
ficoml
in
out
add
es
push
loop
lods
xor
cmp
sub
mov
sbbl
and
inc
or
fsubrl
lea
cmp
lret
imul
data16
filds
fucomip
dec
jae,pt
cltd
add
leave
jmp
ss
xchg
add
insl
sahf
cmp
sahf
ja
lock
xchg
divb
lret
jl
sbb
push
add
push
lret
fsubrl
jp
sarb
lret
or
fdivrp
icebp
out
flds
adc
mov
out
push
jge
mov
movb
mov
xchg
xchg
aad
mov
or
push
dec
cmp
inc
sub
cli
outsb
lcall
test
jmp
inc
push
sub
push
mov
xchg
xor
jno
or
lods
jae
dec
dec
sbb
inc
das
stos
pop
jg
outsb
xchg
cmpsb
mov
lcall
mov
mov
sub
sbb
stos
imul
cs
cmp
jle
cltd
cmp
jge
sbb
test
xchg
inc
mov
cltd
into
xor
lea
xchg
fs
aam
aaa
sbb
daa
lahf
push
pop
sti
outsb
ljmp
gs
aam
xchg
push
out
mov
imul
sub
arpl
and
int3
aad
outsb
jo
jle
inc
xchg
or
push
add
pop
cmpl
ret
mov
nop
push
rcll
dec
fwait
loop
pop
fcmovnb
and
jns
jae
dec
cmp
loope
mov
enter
mov
mov
add
testl
test
js
lahf
sub
ret
fsubrs
adc
stc
jo
outsb
stos
xchg
sbb
or
icebp
insb
popf
call
inc
dec
or
out
pop
ret
jne
jp
push
inc
sub
adc
in
ret
popf
outsl
add
cmp
insb
fsubs
idivb
cmpsb
pop
fldl
out
ret
jmp
mov
frstor
dec
sti
mov
mov
pop
dec
mov
mov
and
push
test
mov
lods
movzwl
loopne
fnstenv
movsl
inc
js
out
outsb
inc
outsb
push
or
repz
and
mov
or
pop
push
imul
aad
push
andl
xor
aam
test
std
mov
push
dec
mov
aad
add
mov
add
int3
ds
sbb
cmp
xor
and
add
or
cltd
imul
cmp
fidivrs
test
bound
xorl
push
or
sti
xlat
cmp
pop
fiaddl
mov
sbb
lods
dec
or
xlat
or
roll
sti
and
pop
and
and
xchg
mov
jns
nop
xor
sarb
pop
push
xchg
sub
xchg
fimuls
and
pop
pop
mov
mov
test
mov
push
out
xor
mov
fwait
dec
xlat
aaa
jl
add
lahf
mov
inc
fwait
outsb
cmp
pop
repz
dec
fistps
lret
insb
push
inc
jmp
les
sbb
cmp
cmp
ret
pop
jl
jno
push
in
or
aas
dec
cwtl
add
mov
mov
scas
add
sti
lret
cltd
sbb
std
sahf
mov
sarb
ret
movsl
or
jo
push
test
iret
std
dec
faddl
dec
mov
dec
outsl
sub
or
pop
aad
push
mov
addb
mov
sub
mov
lcall
fcoml
and
loopne
push
gs
and
repz
sti
stos
imul
or
jnp
call
outsl
and
sub
jge
and
lods
xchg
out
cltd
in
in
fnsave
je
lods
sub
mov
movsl
or
bound
rolb
sbb
fildll
adc
outsl
and
sahf
xchg
mov
mov
inc
nop
test
jl
scas
jmp
icebp
popf
xchg
outsb
add
call
movsb
jl
dec
inc
mov
or
mov
dec
cmp
mov
dec
add
pop
in
pop
lods
fldcw
or
clc
cmpsl
jae
mov
test
add
in
xor
lds
inc
xorl
cmp
andb
insl
mov
mov
or
lea
push
jbe
xchg
dec
or
and
je
pusha
lret
in
lcall
data16
mov
lahf
xchg
xchg
sbb
out
or
mull
adc
xlat
popf
push
sbb
cmp
inc
cs
mov
movsl
iret
inc
mov
sbb
push
data16
ret
dec
fcomps
dec
es
subl
inc
cmp
jl
test
in
mov
and
addr16
cmpsb
dec
push
mov
mov
push
lcall
jae
add
inc
and
and
inc
jp
xor
out
fdivrs
or
cmpsl
adc
lret
fnstcw
xor
mov
stos
dec
shlb
mov
or
leave
mov
mov
outsl
dec
xchg
outsl
mov
add
mov
aaa
push
mov
xchg
jmp
mov
popf
das
push
lret
les
push
ja
lods
push
aad
mov
ret
sahf
jle
imul
sub
ror
es
jmp
push
xor
push
ret
in
aaa
or
hlt
fidivl
cmp
popf
mov
or
dec
aam
or
or
out
insl
mov
std
mov
lcall
xchg
fistpl
xchg
out
int3
sub
dec
or
out
mov
hlt
dec
adc
out
pushf
xchg
inc
scas
dec
dec
jmp
mov
je
jl
das
push
es
and
lods
std
add
and
cmp
mov
push
mov
cmp
sub
mov
bound
mov
adc
sbb
fstpt
pop
adc
cmp
xor
mov
movl
lock
add
mov
pop
mov
into
lock
call
mov
inc
icebp
xor
push
cmp
add
fsubp
out
cli
insl
cs
jb
pop
or
push
jo
dec
pop
and
enter
imul
mov
sbb
aas
imul
dec
and
pop
aaa
jne
add
mov
test
push
out
insl
in
popf
repz
push
and
adc
mov
push
inc
mov
and
xchg
data16
lds
pop
out
test
call
andl
cmp
in
cmp
xor
xor
ret
mov
jecxz
and
addl
sbb
in
leave
push
call
ret
in
mov
or
xor
lods
cmpsl
cli
xor
dec
fimuls
mov
jg
dec
sub
ret
popf
faddl
dec
sarl
mov
push
cmp
push
inc
push
fnstsw
cmpb
or
or
jb
les
mov
push
jb
or
jmp
inc
xchg
sbb
add
inc
pop
fwait
shl
shl
loope
iret
xchg
sbb
xchg
sub
jns
lahf
fbstp
shl
and
adc
rcr
push
out
aaa
ret
int3
adc
gs
test
js
sub
sbb
sbb
rcrl
push
cmp
popa
dec
jb
mov
push
testb
mov
jns
sub
jno
push
dec
out
cs
out
jl
jne
jne
push
scas
loop
lcall
mov
clc
mov
jl
jnp
in
enter
pop
fwait
push
leave
pop
sbb
lods
mov
insb
or
mov
lock
and
sbb
pop
push
mov
xchg
pop
dec
insl
sub
inc
mov
mov
xchg
test
fcmovnu
add
mov
std
in
jl
scas
pop
mov
icebp
insl
sarl
mov
jae
mov
test
imul
add
ret
insb
inc
inc
jecxz
and
xor
stc
inc
mov
xchg
cmpl
or
ret
cmp
cmp
lret
push
mov
xlat
push
ljmp
insb
push
test
sub
test
cmpsb
or
sub
dec
dec
jmp
dec
repnz
enter
repz
enter
adc
jne
shl
jns
jmp
nop
xchg
pop
lcall
inc
leave
iret
push
repnz
adc
dec
add
xchg
mov
jns
jg
jecxz
enter
ret
add
jb
add
shr
mov
into
or
inc
sub
pop
cmp
je
jno
fdivs
xchg
cltd
out
ficoml
scas
mov
stos
lock
icebp
mov
int3
push
add
jp
xchg
pop
test
in
lock
cmp
push
insb
adc
outsb
insl
mov
mov
sub
dec
jg
or
adc
nop
add
cwtl
pop
dec
icebp
jns
decl
outsb
push
xor
iret
shl
es
push
cltd
stos
and
nop
push
add
cltd
sub
movsl
insl
fisubrs
inc
mov
ja
scas
cmpsb
push
stos
or
mov
and
or
js,pn
andl
xchg
fwait
mov
shrl
subb
pop
imul
loope
pmulhuw
add
inc
lods
outsb
sub
pop
push
adc
into
subb
sub
mov
cmpl
mov
cmc
das
roll
fcoml
add
add
cmp
hlt
xor
sbb
loop
adc
fldenv
imul
sub
jnp
xchg
inc
pop
pop
add
xor
lock
xorl
adc
jbe
pop
xor
and
mov
xchg
fbstp
xchg
movsl
mov
xchg
jo
cmc
shlb
mov
add
fs
or
fdiv
pop
pop
push
popa
or
mov
cmpsl
inc
cmp
loope
mov
arpl
pop
stos
lcall
dec
data16
stc
lcall
jp
push
test
data16
jo
cmpsb
popa
xchg
icebp
pusha
push
pop
mov
mov
testb
pop
movb
push
jl
push
push
mov
mov
addl
xchg
jecxz
lods
xchg
mov
push
inc
lods
stos
or
stc
out
test
mov
ret
dec
ljmp
dec
and
add
insl
dec
leave
dec
xor
pop
call
sub
aaa
adc
or
cmp
iret
dec
call
imul
sub
inc
pop
mov
rcll
adc
stos
aam
rcrb
xchg
test
pop
xlat
xchg
push
outsl
or
out
push
out
xchg
shr
andb
mov
scas
scas
mov
push
mov
mov
cmp
ds
mov
xor
arpl
mov
push
jnp
inc
sbb
aas
mov
xor
mov
push
lahf
in
mov
in
aam
aas
test
mov
push
loop
int3
push
jbe
ja
into
and
push
cmpsl
lea
lods
mov
xchg
test
push
inc
jae
sahf
add
test
imul
ja
and
enter
fcom
imul
in
mov
cld
movsb
jbe
insb
imul
xchg
and
or
cmp
rcr
movsb
lods
loop
jne
inc
and
out
sarb
lods
lea
insl
iret
mov
mov
cmp
neg
fstps
aaa
cmp
jl
rcrl
stos
mov
shll
or
arpl
inc
in
and
push
ja
and
and
addb
pop
inc
int3
ficoml
mov
sub
jne
or
sbb
sbb
ja
sti
fsub
cwtl
push
lret
jmp
insb
imul
std
add
cmp
insl
push
in
rclb
pop
nop
jp
shlb
lods
addr16
adc
sarb
js
or
and
adc
add
hlt
fsub
call
mov
movsb
test
mov
fs
xor
and
adc
add
hlt
fsub
call
mov
movsb
test
mov
sub
sub
inc
or
mov
adc
add
sub
in
aam
les
mov
test
fs
push
js
or
and
xchg
mov
dec
inc
aam
mov
cmp
pop
push
imul
sbb
or
push
push
mov
enter
call
leave
mov
sbb
js
push
dec
cmp
or
mov
in
enter
call
cmp
dec
adc
shrb
cwtl
movsb
stos
sahf
fisttpll
xchg
iret
popf
fistpl
cmp
pop
dec
xchg
loop
cmpsl
cmp
sub
sbb
je
jecxz
jecxz
push
int
std
pop
cltd
sub
sbb
sbb
loope
dec
dec
test
pop
mov
mov
cmp
mov
js
call
xchg
stos
cwtl
cwtl
aaa
mov
mov
add
and
xchg
xor
sbb
dec
cmp
mov
fs
ja
jle
sub
lods
lea
fstp
mov
xchg
test
out
mov
sbb
popf
pop
inc
jmp
imul
or
inc
dec
push
xchg
lock
mov
cwtl
xor
leave
mov
imul
or
add
sbb
dec
cmp
push
and
xchg
enter
scas
sub
jno,pt
jns
imul
dec
sbb
call
mov
icebp
lods
out
int3
mov
lea
shlb
dec
jno
imul
popf
filds
int
jmp
pop
or
push
pop
push
dec
cmp
push
clc
mov
mov
mov
sbb
js
push
dec
cmp
push
clc
mov
mov
mov
sbb
push
lods
addr16
pop
das
dec
mov
lret
or
sbb
out
sti
adc
lods
popa
xor
mov
adc
mov
in
sub
mov
push
cmp
fsubrl
mov
xchg
out
pushf
imull
lods
dec
inc
lods
dec
sbb
mov
movl
jo
push
xor
pop
mov
lods
xor
cld
mov
push
into
loope
fs
andl
jns
dec
jle
mov
adc
rol
xchg
sub
movsb
aas
imul
push
popf
outsb
in
push
pop
dec
sahf
je
adc
data16
mov
lcall
in
cmpb
mov
add
adc
inc
cmpsl
xchg
inc
loope
repnz
je
mull
push
mov
in
mov
repz
test
push
pop
mov
int
xor
out
cmp
sub
test
out
xchg
hlt
push
cmp
andl
aam
mov
xchg
mov
jno
into
clc
popf
cmc
and
ljmp
add
and
leave
std
sbb
push
inc
pop
or
inc
sub
pop
xor
jge
jg
aaa
sub
jo
sbb
mov
mov
pop
dec
mov
jnp
push
cmc
or
out
push
mov
outsl
xchg
repnz
adc
jp
adc
roll
xchg
fidivrl
stos
push
ds
mov
adc
sbb
and
pusha
pop
aad
addb
aas
cli
or
jne
push
pop
movsb
inc
insb
jmp
int
fisubrs
repz
cmpsl
push
daa
inc
test
stos
xor
test
shll
xchg
mov
adc
jb
dec
and
inc
mov
data16
cmpsl
or
sbb
xchg
xor
xor
cmp
cs
je
fnstenv
aam
adc
cli
add
clc
das
mov
mov
int
cmovl
push
in
repnz
in
xchg
inc
jl
xlat
daa
fldt
clc
loopne
jno
fsts
jb
add
push
mov
ja
cmp
xor
bound
xor
and
adc
enter
sbb
adc
xchg
outsl
push
cmp
jp
int
jbe
pop
stos
jne
push
inc
loop
jnp
xchg
out
pop
sar
fistps
dec
movsl
ja
adc
or
js
and
and
adc
xchg
adc
mov
imul
jnp
imul
pop
aas
or
push
or
clc
sub
xchg
test
adc
out
ljmp
loope
jmp
add
sbb
cli
cmp
xor
xchg
shrl
ret
mov
fcoms
fcmove
push
mov
lcall
int3
movb
scas
movsb
jg
push
adc
pop
in
dec
cmp
cmp
icebp
mov
push
fmul
push
arpl
mov
adc
lret
fisttpl
mov
js
dec
and
stc
fadds
outsb
cli
inc
ja
sub
xchg
mov
fwait
jne
sub
imul
scas
mov
add
clc
ss
mov
jl
xor
or
lds
loope
fldenv
pusha
cmpsb
aas
adc
pop
pop
cmp
lret
lods
lds
sbb
mov
push
cmp
scas
or
adc
insb
add
xchg
in
jmp
cmpsb
jne
sbb
xor
rcrl
mov
pop
cmp
cld
imul
adc
pop
test
mov
push
stc
fistpll
and
jecxz
ficompl
mov
es
into
ret
dec
mov
push
movsl
sar
loope
jae
sahf
jp
or
fcoml
inc
lret
pop
and
leave
cmc
or
or
pop
rcrl
xchg
and
rorb
out
jmp
dec
enter
ljmp
dec
into
adc
cmpsl
out
inc
sub
sbb
push
testl
outsb
mov
shl
push
inc
push
bound
popa
jecxz
mov
inc
xor
jge
pop
adc
enter
inc
mov
pop
in
mov
push
lds
add
daa
out
into
mov
xor
cmp
add
sbb
xchg
push
adc
mov
lock
pop
movsl
cltd
and
repnz
incb
lea
adc
test
sub
or
xchg
xchg
cmpsl
les
add
pop
xchg
xor
sti
xchg
jle
iret
loopne
pushf
das
frstor
fstl
fdivs
xchg
mov
xor
dec
sub
xchg
xchg
out
fnstcw
mov
add
mov
cmp
cld
xlat
sti
dec
pop
ds
jmp
and
cmp
sub
addr16
dec
in
cltd
and
mov
pop
xchg
cwtl
scas
in
inc
mov
xchg
xchg
ss
fisubrl
xor
fsubp
mov
addr16
ret
sub
aad
cmp
mov
cmp
or
sbb
in
arpl
push
clc
stc
lds
push
sahf
or
sub
lret
cwtl
add
adcb
and
mov
pop
stos
lea
int3
pop
loope
stc
ret
sub
in
out
mov
ja
inc
ret
jo
fisubrs
add
andl
ljmp
lods
mov
push
sbb
mov
cld
xor
xor
lock
xchg
or
adc
icebp
in
cmpsb
ret
es
rorl
dec
sbb
ljmp
popf
push
ret
jb
xor
xchg
dec
mov
mov
lret
mov
imul
sahf
mov
xor
outsl
pop
mov
and
push
cli
out
add
lods
sub
mov
cli
xor
push
xor
inc
xor
rcrb
sbb
pop
fsubrp
mov
add
int3
fstpl
xchg
and
enter
jnp
clc
mov
add
push
testl
in
sbb
dec
outsb
sub
and
xchg
outsb
stc
push
out
lret
push
adc
dec
pop
insl
xor
leave
rcrb
cmc
pop
ret
popa
sub
mulb
je
push
sub
orb
notl
adc
dec
mov
adc
dec
sub
xchg
fimuls
lock
jl
stos
stc
push
stos
loope
sahf
cmp
jne
fidivrl
daa
lea
lea
fstpt
fwait
sbb
pop
pop
sbb
repnz
mov
std
jnp
jmp
push
out
adcl
sbb
stc
jae
dec
and
scas
les
js
cmp
dec
dec
arpl
adc
jg
mov
cmpsb
cmp
dec
dec
stos
rorl
jge
pop
andb
jns
sub
push
push
push
jg
loop
sahf
lret
aas
je
repnz
push
inc
sub
jne
inc
push
jae
mov
inc
or
daa
cmp
sbb
jbe
cmpsb
xor
fimuls
jo
and
lock
fsubrl
inc
mov
pushf
or
enter
mov
mov
pop
push
in
mov
std
mov
outsl
cmc
test
jecxz
mov
or
cmpsl
jg
sbb
mov
push
xchg
outsl
int
mov
cmpsb
loopne
das
or
mov
jle
mov
pop
jmp
pop
sbb
dec
dec
imul
inc
in
inc
push
sti
or
fst
inc
in
stos
xor
and
sbb
sbb
js
call
loope
leave
pop
int3
or
outsl
lds
or
cltd
jne
adc
sarb
addr16
push
adc
push
lret
sub
aaa
mov
push
outsl
mov
jb
and
scas
movsl
pop
push
adc
subw
ss
hlt
sub
add
xor
xor
cmp
mov
xchg
cmp
or
inc
mov
imul
pushf
jg
in
aaa
inc
mov
scas
rorb
mov
iret
dec
or
loopne
jae
cmp
xchg
dec
in
mov
jg
ja
movsl
mov
sub
data16
sahf
dec
add
cwtl
shl
mov
dec
hlt
add
lea
cs
cmp
adc
fldcw
push
adc
arpl
xchg
int
ja
das
sbb
mov
data16
pusha
dec
jne
mov
push
cmp
test
add
fisttps
lods
xchg
push
push
xlat
lods
mov
dec
add
fwait
inc
mov
aas
daa
push
je
and
or
mov
popf
and
aaa
mov
cmp
or
sbb
repnz
dec
cmp
test
sbb
pop
ljmp
int3
push
fldcw
dec
mov
int
dec
jae
lret
mov
xor
call
push
pop
rcll
mov
scas
cli
mov
and
mov
jg
mov
inc
movsb
mov
aaa
roll
jge
sahf
pushf
test
mov
jmp
loope
mov
inc
clc
xchg
xchg
addr16
call
in
jmp
sub
dec
pop
inc
in
arpl
in
imul
sub
pop
xor
sbb
pop
xor
es
pop
dec
jge
and
adc
dec
sbb
cmpsl
jae
fisttpl
popf
scas
xchg
sbb
adc
insb
mov
push
test
lcall
inc
sub
add
enter
stc
mov
adc
dec
inc
andb
xchg
gs
mov
popf
les
lret
ljmp
pop
push
movsl
iret
mov
hlt
sbb
cmp
repnz
hlt
jns
xchg
nop
xchg
repz
stos
and
push
push
cs
mov
addr16
push
jne
mov
xchg
mov
cmp
adc
in
jmp
or
xor
insl
rclb
outsb
push
xor
mov
pop
dec
scas
mov
push
xchg
pop
and
xor
mov
data16
mov
sbb
xor
push
jmp
adc
adc
mov
mov
sub
lret
xchg
bsr
mov
xchg
push
imul
data16
iret
leave
push
push
insb
outsl
aas
lods
adc
lea
mov
addr16
adc
in
rclb
dec
inc
push
lock
mov
pop
sub
icebp
popf
inc
push
mov
daa
lret
xor
ficomps
xorl
cld
lret
push
xlat
xchg
int3
mov
and
jb
dec
cmp
int
sti
pop
xor
add
and
lret
sub
push
test
jb
lock
adc
mov
cmp
daa
or
sub
mov
call
jle
sub
sbb
out
rcll
ja
imul
push
push
pushf
adc
gs
jmp
inc
xchg
dec
xor
mov
mov
jne
jle
sub
mov
or
in
sbb
into
and
mov
mov
jp
xchg
ss
mov
mov
mov
mov
cmc
push
ja
cwtl
bound
in
push
or
in
test
xor
push
cmp
bound
lahf
stos
sbb
xor
mov
ja
jae
adc
std
ljmp
fwait
sub
mov
nop
mov
cmp
test
push
pop
sbb
pop
outsl
dec
mov
pop
clc
jnp
sbb
xor
push
sbb
jecxz
push
inc
ljmp
xrelease
call
sbb
push
mov
enter
push
popf
jnp
xchg
jecxz
icebp
testl
xor
dec
mov
and
daa
ja
inc
ss
sbb
lock
push
jnp
int3
inc
popa
push
jle
popa
add
jg
aas
mov
cli
adc
add
inc
sub
sub
in
add
ret
jns
roll
js
lcall
sti
test
rcrl
xchg
or
ffreep
js
mov
push
stos
or
sbb
or
push
inc
mov
mov
pop
mov
dec
in
adc
pop
pop
cwtl
push
add
clc
xor
hlt
dec
cld
out
test
cmp
jmp
rcr
imul
sahf
in
mov
out
lahf
mov
shl
mov
push
mov
std
int3
jne
cld
adcb
out
dec
les
dec
jne
pop
or
loope
pushf
or
lret
inc
daa
mov
and
icebp
cmpsl
stos
dec
pop
loop
pop
sub
test
xchg
daa
orb
inc
mov
test
cwtl
mov
push
sbb
jg
fmul
or
or
das
xchg
mov
in
arpl
stos
cwtl
rorl
push
mov
pop
jmp
jmp
das
insb
or
loop
mov
pop
inc
jmp
sub
add
push
jmp
push
ret
out
mov
mov
jb
leave
aaa
orb
stc
cmp
inc
cltd
aad
sub
or
shrb
cmp
loope
inc
xchg
jne
add
call
loopne
mov
cmp
pop
shlb
arpl
cmp
lret
addr16
std
imull
mov
mov
xchg
inc
out
xchg
fwait
push
inc
add
xchg
push
mov
sbb
int3
nop
and
das
rcl
into
fs
inc
incb
xchg
mov
pop
lods
and
es
stos
scas
xor
popa
ss
sahf
and
add
in
cmp
cmpsb
ret
popf
ret
dec
les
adc
push
mov
mov
sub
out
adc
inc
pop
xchg
jb
pop
fsubrl
cwtl
jl
push
and
push
fwait
test
jbe
out
pop
add
test
mov
sbb
xchg
lds
mov
adc
test
dec
arpl
sbb
jnp
pop
mov
or
jecxz
and
sbb
scas
sbb
xorl
lods
mov
dec
mov
in
hlt
adc
movsl
inc
push
pop
loope
push
add
pop
sbb
add
push
mov
arpl
dec
std
mov
in
addr16
mov
test
and
push
mov
mov
int3
aas
sub
or
cmpsb
lahf
push
in
sbb
loop
aad
mov
rorb
divb
loopne
push
push
dec
jp
push
adc
jns
movsl
dec
shr
add
shl
mov
jne
push
mov
sub
scas
jnp
xor
dec
jno
jmp
mov
or
andl
add
jecxz
mov
push
aaa
or
sub
xchg
xchg
gs
out
adc
addl
rcll
and
mull
adc
dec
insb
dec
call
jp
push
xchg
xchg
sbb
cmp
cmp
leave
call
pop
mov
sub
inc
ret
add
xchg
pop
xchg
movb
xchg
and
xor
jbe
lods
mov
mov
lcall
sahf
fdivrs
mov
out
repz
testl
pop
stc
cld
scas
sub
push
or
jbe
pop
insl
and
jl
jbe
iret
fldcw
add
cmp
push
inc
sbb
pop
rclb
dec
popf
jge
or
cmp
add
xchg
jae
jnp
lds
push
aam
lret
push
imul
stos
int3
adc
fidivl
arpl
and
jmp
and
mov
hlt
ss
ret
xchg
mov
nop
loopne
sti
out
add
dec
pop
inc
mov
movsb
cmpsb
shll
fisttpl
cmpsl
loop
or
push
movsl
int3
neg
push
pop
xor
cwtl
pop
lds
test
es
mov
insb
ss
clc
fucomp
push
dec
aas
lds
xor
inc
decb
test
sub
adcl
xor
out
fs
xchg
inc
and
shll
bound
std
mov
or
cltd
dec
fcoml
xchg
in
into
sub
jb
ret
mov
jne
adc
sahf
mov
push
push
in
dec
add
test
add
cmp
push
mov
ss
pop
nop
ljmp
ret
xor
arpl
mov
rclb
faddl
inc
add
sar
lock
mov
insb
or
stc
pushf
imul
add
ret
sbb
nop
jnp
jecxz
into
adc
inc
in
or
mov
sbb
xor
out
pop
sarb
shr
rcrb
dec
push
and
cmpsb
jle
sbb
nop
ret
mov
pusha
cmpsb
scas
adc
les
subb
cmp
cmpsl
push
fwait
aad
dec
or
aaa
jp
jl
mov
adc
and
push
stos
lret
ss
sub
ret
xorb
mov
adc
jge
mov
outsl
mov
and
imul
out
inc
aas
aam
aaa
nop
add
pop
xchg
rcrl
sahf
adcb
dec
not
scas
xor
iret
insb
mov
ret
in
aad
sub
sub
sbb
and
add
clc
loope
mov
sbb
loopne
adc
or
pop
xor
popa
loop
nop
and
push
jbe
dec
mov
sub
cmp
nop
fmuls
leave
jecxz
and
mov
xor
mov
mov
sub
and
xchg
xchg
sub
test
inc
push
addr16
ljmp
xchg
mov
push
pusha
push
xchg
cmpsb
mov
push
lea
add
dec
dec
add
icebp
mov
xchg
jp
fs
push
fstpl
pop
mov
push
lahf
mov
repz
jg
aad
pop
mov
pop
insb
into
add
sbb
push
idivb
maskmovq
testl
jge
out
cmp
cltd
adc
test
jbe
mov
jnp
int3
sub
lods
push
negb
in
lcall
xchg
jbe
pop
nop
test
test
xchg
sbb
gs
cmp
mov
out
dec
pop
mov
stos
cltd
ficomps
push
shl
ret
jo
and
sbb
xor
jnp
adc
jp
push
and
add
inc
shrl
push
aam
xlat
cmpsb
jnp
data16
lret
add
mov
fdivrl
add
fiaddl
xor
jp
lret
mov
mov
inc
cmpsb
movaps
xorl
lret
lret
dec
xor
fsubrp
sub
repnz
scas
ret
rorb
fimuls
xor
lods
pop
jne
loopne
pop
daa
outsb
ja
sub
pusha
inc
loop
sub
outsb
dec
cmpsb
mov
jo
je
xchg
mov
push
add
packssdw
mov
jl
push
mov
in
pop
push
jns
sub
insl
pop
call
aad
test
pop
adc
sub
dec
aad
xchg
scas
es
insb
fxam
inc
sbb
mov
stos
mov
sub
cmp
je
sbb
dec
ficompl
push
mov
shrl
sbb
dec
mov
imul
push
ja
test
dec
ret
or
pushf
and
negl
dec
push
dec
notb
dec
loopne
inc
dec
ss
mov
push
xor
pop
bound
mov
add
push
cs
rcr
ja
jno,pt
addr16
mov
jno
scas
lds
es
cmc
cmp
ja
addr16
std
jno
cmp
push
and
repz
int
decl
dec
je
daa
fildll
cmp
inc
incl
sbb
dec
rorb
mov
daa
cmp
sahf
adc
push
jmp
cmc
sbb
push
xor
jno
pop
xchg
xor
insb
int
cvtps2pd
sub
and
push
dec
xchg
mov
cltd
push
in
or
xchg
inc
and
lds
imul
xor
decl
test
mov
add
xor
cmp
les
sbb
ja
pushf
rcrb
lahf
mov
aam
sbb
jns
bound
add
icebp
add
orb
mov
lret
dec
adc
pop
idivl
aam
jb
mov
ret
cmpsb
push
jp
jp
int
neg
stc
xchg
mov
add
push
inc
ds
divb
push
fildll
inc
addl
sub
xor
lahf
or
lods
mov
xor
rorl
hlt
js
bound
jbe
sahf
outsb
test
test
pop
mov
das
leave
ds
movsl
shll
repz
outsl
xchg
add
xchg
and
push
push
cmp
int
and
loope
inc
clc
or
lret
popa
lods
mov
rorl
mov
or
inc
fimull
add
jae
movsl
jnp
jbe
xchg
scas
sub
xchg
iret
xchg
int
cmp
add
das
inc
and
into
mov
movsl
jne
or
and
scas
xchg
mov
je
sbb
dec
cmp
push
clc
mov
mov
mov
sbb
js
push
dec
cmp
push
clc
mov
mov
mov
sbb
push
pop
or
cmp
push
icebp
mov
xchg
enter
call
lock
sbb
dec
cmp
test
cwtl
aaa
and
call
aaa
inc
pop
push
pop
sub
cmp
cmp
sub
jge
and
xor
test
mov
scas
jmp
sti
int3
lret
in
fucomi
sub
or
cmp
sub
pop
jnp
dec
jl
insb
stos
sahf
mov
lods
jmp
cli
sbb
cld
fucomi
sub
sbb
dec
fs
jbe
jg
mov
leave
lods
jmp
mov
pop
sbb
or
cmpsl
fs
xchg
mov
pop
nop
pop
cmpl
pushf
mov
inc
les
mov
shrb
jnp
mov
mov
pop
sbb
fs
lods
mov
cld
mov
popa
arpl
or
adcb
push
sub
int3
jo
dec
add
in
sub
enter
add
adc
xchg
pop
int3
ss
pop
fs
mov
jbe
xchg
mov
int3
xchg
jl
mov
sub
insl
stos
adc
lods
mov
cld
fistl
pop
adc
in
xor
out
lock
out
inc
dec
loope
popf
cwtl
jnp
icebp
mov
or
frndint
call
sub
imul
gs
jne
test
mov
sti
fcmovne
cld
fisttpl
dec
cmp
adc
and
filds
fcomi
fdivp
clc
jmp
mov
sbbl
pop
sub
das
xor
sbb
add
in
in
test
out
sbb
sahf
mov
dec
pop
cmp
pop
jle
xor
dec
jl
insb
stos
pushf
mov
lods
jmp
sti
int3
lret
cld
fucomi
sub
or
cmp
sub
pop
jnp
dec
jl
insb
stos
pushf
mov
lods
jmp
sti
int3
lret
cld
fucomi
sub
mov
popa
mov
sbb
les
mulb
not
push
jmp
jbe
push
into
sub
jge
shll
mov
pop
iret
inc
sbb
and
decb
and
ficoms
mov
lret
imul
daa
faddl
out
and
add
jne
and
jae
outsb
imul
int
cld
bound
aaa
sbb
imul
aam
fucomp
aad
mov
fwait
inc
ja
or
ret
fucom
loope
out
jnp
orb
test
cmp
push
in
jae
mov
inc
and
scas
lcall
sub
and
imul
sbb
in
and
mov
pop
scas
cmp
mov
cmp
xor
shlb
in
mov
aaa
jnp
adc
adc
insb
cmpsb
iret
cmovae
dec
push
mov
inc
stos
iret
int
shll
inc
ljmp
mov
enter
pushf
ror
lods
adc
push
xor
xchg
sub
sarl
cld
ss
or
mov
pop
in
outsl
mov
clc
add
lret
in
inc
add
adc
test
mov
inc
sbb
hlt
cmp
sub
push
pop
popa
and
sub
cmpsb
mov
inc
pop
ret
mov
js
mov
inc
mov
pop
pop
fwait
push
cmpsl
test
notb
push
xchg
in
fxch
iret
xchg
sbb
repz
in
inc
mov
out
dec
jne
jmp
popa
jne
cmp
push
fwait
inc
test
imul
outsb
push
pop
ret
sbb
mov
sbb
test
in
aad
mov
sub
push
dec
inc
mov
sbb
orps
lcall
sbb
dec
hlt
mov
jl
cmpsl
xchg
push
sbb
sub
cwtl
pop
test
test
shrb
xchg
xchg
fdivl
data16
rorb
popf
sub
dec
dec
xor
inc
stos
adc
insl
scas
sbb
repnz
jae
sti
insb
push
cmpsb
outsb
or
lcall
or
push
push
jecxz
sub
mov
adc
aaa
xchg
adc
pop
xchg
mov
icebp
jp
in
xchg
xchg
je
jle
pop
mov
imul
sub
mov
push
aas
xchg
xchg
sti
sbb
into
push
mov
fnstcw
in
lret
jp
xchg
lret
mov
out
in
xchg
pop
movsl
and
iret
jne,pt
cs
pop
and
xchg
sub
inc
pop
mov
mov
out
jbe
xor
es
mulb
push
ds
or
movb
dec
xchg
outsb
test
jbe
dec
ss
in
sub
push
aad
fdivrs
aam
jecxz
lods
sbb
sahf
push
jne
imul
sbb
cli
cltd
ds
mov
adc
mov
push
sti
dec
inc
pop
adc
cmp
popa
shrb
and
add
mov
in
ljmp
in
mov
lods
jnp
hlt
sub
ja
cmp
andl
jg
movsl
xchg
scas
iret
int3
xor
mov
gs
pushf
cltd
pop
inc
xchg
mov
inc
andl
aam
xor
jb
mov
or
in
hlt
jb
scas
sbb
shll
xchg
das
out
inc
loope
pop
ja
fnsave
jp
cs
or
fisubs
mov
xor
mov
negl
outsb
sub
add
jbe
jno
arpl
mov
cmpl
dec
push
cwtl
inc
add
imul
mov
xchg
test
jae
jge
xchg
push
out
inc
mov
dec
add
cmp
mov
andb
sbb
jb
xchg
andl
mov
mov
out
adc
or
and
xchg
push
pop
dec
stos
ljmp
pop
test
sbb
cmp
call
xchg
add
cltd
mov
xor
push
iret
jg
call
insl
add
inc
mov
mov
dec
pop
cli
roll
ret
mov
dec
xchg
mov
ret
jmp
or
sub
push
dec
sbbb
test
out
mov
mov
pop
push
test
insl
dec
pop
inc
outsb
inc
enter
dec
cmp
xor
pop
jge
bound
push
adc
das
adc
mov
pop
aaa
and
jmp
loope
sub
dec
scas
insl
ret
sbb
test
fdiv
xor
test
dec
repnz
lret
inc
addr16
ret
inc
push
mov
mov
lods
outsb
test
ficomps
ds
jmp
sub
sbb
push
out
and
fisttpl
data16
loopne
jns
adc
aad
sub
popa
popf
mov
idivb
cmc
stc
sbb
cmp
iret
xchg
movsb
pop
ja
push
out
scas
cwtl
sub
mov
pop
cli
push
cmc
inc
jbe
pushf
lods
ret
mov
mov
out
cltd
sub
stos
fwait
jmp
mov
outsb
push
pop
loop
es
int3
imul
xor
ret
dec
shlb
push
test
nop
adc
inc
sbb
jne
sbb
xchg
mov
mov
jle
push
fidivrl
jo
xchg
lods
dec
adc
push
pop
repnz
test
adc
sub
xor
push
push
popf
in
sub
jae
adcl
sbb
mov
ss
mov
into
xlat
in
js
ja
inc
out
rclb
test
fisubs
in
sarl
or
xchg
mov
mov
mov
mov
add
or
inc
loope
xchg
and
mov
aam
adc
inc
int
sarl
repz
clc
pop
jo
mov
dec
js
xchg
loope
xchg
dec
sahf
add
out
es
pushf
loopne
shrb
add
insl
bound
pop
jecxz
stc
dec
xchg
shr
sti
imul
inc
adc
out
sar
into
mov
ja
cmp
push
xor
test
sub
outsb
lret
int3
daa
lods
lret
jb
test
into
push
popa
popf
push
mov
lods
cmp
lock
in
data16
call
mov
mov
in
ljmp
sbb
jg
sahf
jle
andb
inc
fs
xchg
or
popa
hlt
fsubl
mov
data16
or
fisttps
into
pop
int
push
pop
aad
fcompl
scas
and
adc
add
xchg
insb
dec
inc
mov
and
add
add
sarb
mov
enter
test
popa
popf
out
lret
push
mov
and
outsb
jmp
xchg
sub
push
xchg
lret
push
ja
ljmp
leave
je
lods
fadds
pusha
test
add
int3
push
cmp
out
add
lods
inc
and
sbb
cltd
and
movsl
call
repnz
js
shll
mov
xchg
mov
aam
loopne
rcrb
repnz
adc
mov
push
mov
outsl
dec
in
stos
cmp
xor
mov
xchg
mov
into
in
scas
subl
mov
push
mov
imul
pop
dec
mov
mov
cmp
loopne
nop
push
add
mov
jp
xor
in
and
fwait
xchg
mov
pop
mov
xchg
and
xchg
fsubrp
mov
inc
dec
xor
movsl
in
jmp
enter
adc
hlt
and
inc
sbb
adc
std
pop
roll
adc
bound
daa
xor
xchg
or
testl
in
les
std
divl
mov
xchg
mov
push
jp
pop
inc
testl
loope
mov
inc
fwait
or
mov
mov
int
jno
jmp
and
or
fildll
scas
in
dec
pop
cltd
mov
ss
add
jbe
shr
aam
movsl
pushf
adc
push
inc
push
and
inc
popf
jecxz
xor
movsl
or
scas
loope
inc
rorb
adc
fwait
sahf
push
in
mov
adcl
mov
mov
hlt
gs
imul
aam
loopne
push
sub
int
jae
add
lds
ret
or
mov
xchg
ja
pop
mov
mov
adc
repz
inc
shll
fistpll
dec
data16
pusha
sub
push
cmp
in
mov
add
and
jmp
add
cmpl
ret
out
mov
sbb
cmp
cmp
pop
fcomps
arpl
push
xor
push
hlt
roll
mov
out
popf
leave
push
cmpsb
xchg
mov
in
sbb
or
pushw
mov
loope
fiadds
xchg
pop
mov
aam
push
mov
add
or
mov
sub
arpl
insl
ret
dec
xchg
ljmp
ds
mov
push
js
sub
mov
mov
sahf
xor
ljmp
out
xchg
mov
lret
lock
lds
insl
sti
fmul
jle
ljmp
pop
fildl
or
and
push
iret
cltd
aaa
or
xchg
jl
push
push
pop
cld
sbb
mov
sarb
cmpsb
dec
dec
cmp
lret
mov
push
xchg
and
mov
jbe
pop
je
or
loop
or
inc
push
stos
xchg
pop
add
das
mov
mov
dec
jge
mulb
hlt
stos
les
fildll
scas
loop
adc
int
hlt
in
std
pop
aas
mov
jge
cmpsb
pop
aam
sbbb
icebp
push
ja
and
gs
fisttps
mov
push
ret
jp
roll
fs
sbb
mov
sbb
pop
imul
xchg
mov
sbb
and
push
lcall
test
loopne
cmpsb
add
push
fs
ficomps
scas
jecxz
mov
ret
loope
mov
and
push
out
sbb
xchg
sub
sarl
add
popf
jge
sahf
mov
mov
pop
adc
cmp
inc
test
int3
pop
adc
mov
and
add
mov
aaa
data16
jl
loop
add
or
and
daa
mov
test
push
adc
popa
je
lods
dec
mov
in
fists
mov
add
notl
sahf
jo
nop
sub
imul
in
lods
inc
mov
unpckhps
xchg
mov
dec
ret
jae
lret
sbb
push
dec
leave
hlt
and
out
or
sub
inc
mov
loope
rorl
adc
gs
mov
dec
das
frstpm(287
lds
pop
fadd
fs
inc
fadd
add
mov
pop
inc
xchg
lahf
pop
psubusb
out
inc
push
fnstenv
lods
adc
pop
lret
pop
scas
pop
sbb
push
adc
inc
cli
cld
stos
pop
xchg
ja
dec
xorb
pop
out
bound
mov
iret
sti
add
xor
movsb
mov
or
nop
stos
jbe
sti
push
int
lds
add
pop
pusha
fstl
into
fnstcw
out
enter
adc
and
jae
rcrb
dec
bound
or
and
dec
mov
or
popf
aas
popa
push
imul
push
xchg
hlt
fcmovne
std
adc
adc
adc
and
je
pop
cld
xor
jp
daa
jmp
test
popa
push
mov
lods
jle
mov
js
inc
mov
mov
lea
and
push
mov
push
repz
bound
mov
nop
and
aas
and
sbb
xor
stos
jne
call
lea
inc
or
nop
mov
push
cmp
dec
lret
orb
push
mov
cs
pop
dec
iret
xor
lea
das
nop
xchg
mov
push
testl
sbb
xlat
mov
jg
inc
mov
add
push
mov
push
sbb
xchg
mov
inc
or
jp
inc
mov
test
iret
ss
jg
and
daa
enter
mov
pop
push
addr16
mov
push
stos
or
je
xchg
mov
lea
sub
stos
gs
mov
je
in
fbld
mov
fwait
cmp
sub
adc
fbld
lea
mov
dec
cmpsb
jl
sbb
jmp
mov
xchg
fcom
cmp
out
jb
jle
jno
scas
or
dec
loopne
mov
mov
add
push
mov
imulb
cmp
pop
jbe
xchg
int3
cmovge
dec
pop
ss
shl
pushf
js
jg
push
adc
inc
push
dec
popa
inc
lds
jne
jns
nop
test
movsl
add
push
jmp
mov
loop
xor
push
repz
xorb
scas
pushf
outsb
cwtl
daa
sbb
jp
mov
addr16
xchg
push
dec
mov
jp
mov
adc
push
add
movsb
xchg
outsl
ret
and
data16
xchg
pop
sub
stc
push
imul
fcoms
ficompl
mov
shll
movsl
stos
test
xchg
jg
cmpsl
inc
xchg
xchg
lret
lahf
push
mov
sub
lds
pushf
mov
xchg
insl
mul
adc
lods
xor
scas
mov
aas
mull
inc
ljmp
sar
push
insl
movsl
mov
lretw
nop
pop
aam
cmp
fmuls
gs
push
sbb
adc
jecxz
add
in
in
and
stos
aam
and
iret
jnp
mov
cmpsb
popa
adcb
or
push
fcomp
sub
testl
movsl
rcrb
enter
pop
mov
movsb
stc
cld
push
jbe
das
cmp
or
xchg
gs
adc
cmc
call
cmp
push
mov
dec
jnp
loopne
mov
fldcw
xchg
xchg
sub
mov
loope
das
pop
xor
shlb
ret
lods
movsb
loopne
or
sub
and
ret
mov
rorb
daa
iret
or
sahf
push
fs
shl
xor
xlat
dec
jnp
loopne
out
mov
push
daa
and
mov
sub
fsubp
cs
jecxz
jmp
int3
sub
pop
lret
dec
pop
pushf
imul
sub
test
cmp
dec
faddp
icebp
imul
roll
pusha
aas
es
inc
mov
adc
push
or
iret
inc
loop
in
loope
jmp
jecxz
push
mov
pushf
fwait
test
ds
out
aam
mov
mov
pop
out
inc
adcb
stos
in
dec
in
pop
fadd
aas
lahf
rclb
jae
mov
fstl
mov
sbb
sbb
inc
out
fcmovnbe
jae
out
testl
pop
push
jmp
loope
fmull
fcompl
mov
cmpl
sbb
sti
movsb
push
xlat
pop
inc
nop
push
insl
jecxz
lcall
lods
pop
ss
push
test
jg
mov
add
call
scas
insl
cli
jno
aaa
call
movl
xlat
adc
jae
dec
sub
mov
in
dec
sbb
cmpsb
mov
repnz
scas
mov
xchg
jecxz
xchg
mov
mov
lcall
mov
xor
js
adc
pop
jno
popa
and
fldenv
or
movsb
xchg
mov
sbb
sub
lret
sub
push
pusha
aad
fs
mov
cmp
icebp
cmp
test
push
adc
cmpsb
jno
xor
dec
cmp
fsubs
scas
sub
test
and
pop
sub
loopne
add
decl
retw
xchg
subl
divl
scas
pop
out
pop
sti
sub
arpl
int
insl
push
hlt
lahf
add
sub
mov
push
fmuls
dec
cmp
sbb
pusha
sbb
inc
fdivrs
dec
inc
or
xor
mov
ja
or
jns
fcoml
filds
and
and
inc
les
jp
sti
sub
inc
clc
sub
rclb
cltd
cwtl
movsb
loop
xchg
inc
mov
outsb
lret
divb
outsl
jmp
gs
dec
in
mov
mov
scas
or
pop
test
lea
rorb
testl
fst
test
aaa
mov
push
cmp
mov
adc
dec
pop
push
test
notl
push
sub
or
lods
hlt
sbb
xor
pop
loope
cmp
mov
ljmp
cld
push
inc
jp
and
fcomps
adc
pop
icebp
or
fists
xor
xchg
and
jbe
xor
outsb
mov
dec
pop
lahf
jmp
dec
xlat
leave
repnz
sub
mov
and
shrl
into
pop
lods
pop
jmp
ret
adc
mov
pop
imul
gs
or
xchg
xor
sub
decb
lcall
jbe
aad
fidivrs
loopne
orb
mov
in
mov
fmull
mov
jp
test
cli
aas
dec
mov
push
cmpsb
into
addr16
stos
inc
test
xor
jge
popa
and
or
inc
adc
fdivrl
inc
adc
sahf
jg
mov
daa
push
pop
pop
aad
mov
adc
or
xchg
outsb
nop
test
lods
clc
cmp
js
dec
int
xor
repnz
xor
pusha
or
pushf
pop
and
and
jecxz
dec
push
rcll
jmp
jmp
stos
stc
lock
mov
outsl
out
sarl
jl
roll
adc
pop
imul
adc
add
pop
and
xor
iret
or
sbb
stos
sbb
mov
cmp
int3
es
out
jmp
mov
lahf
xor
in
mov
push
pop
insb
inc
and
or
dec
mov
sbb
ljmp
add
sub
dec
fnstenv
bound
cmp
pop
loopne
inc
sub
outsb
out
dec
inc
jbe
aas
test
imul
mov
sbb
dec
or
fistpll
and
lods
jge
or
aad
arpl
inc
xor
mov
xor
outsb
inc
add
fwait
data16
popa
lret
mov
test
add
dec
add
pop
sbb
clc
out
scas
jle
cmc
add
sub
mov
ss
mov
dec
mov
mov
cs
ds
ficoms
lret
leave
lock
daa
pushf
lods
push
mov
ljmp
gs
push
pusha
call
movsb
idivb
dec
dec
aaa
inc
xor
ret
jbe
bound
pop
mov
popa
mov
call
xor
sub
sub
and
and
cmp
gs
xor
pop
dec
lods
mov
push
xchg
push
mov
or
or
dec
ret
xchg
mov
and
in
shl
aam
pop
cmp
xor
mov
cmp
add
bound
es
cwtl
jl
push
sti
mov
gs
test
lea
adc
inc
or
mov
mov
sbb
push
in
push
stos
xor
ret
sub
mov
jb
es
fadds
out
xchg
stos
sub
inc
into
aas
sbb
dec
iret
dec
xchg
fincstp
inc
imul
je
adc
sbb
mov
xchg
adc
jecxz
nop
add
mov
je
mov
js
lock
sbb
clc
jle
jnp
cmp
addb
aam
mov
sbbb
pop
mov
sub
cwtl
mov
addb
out
sub
pop
lret
pop
dec
mov
shll
out
test
adc
xor
aaa
pop
cmp
pop
arpl
pop
adc
mov
and
xchg
test
and
mov
hlt
inc
sbb
nop
jl
push
sub
jp
and
xchg
ret
outsl
cmp
lret
xchg
sub
cld
pop
push
sub
jno
push
les
mov
imul
cld
stos
call
dec
inc
fmuls
jmp
pop
call
xor
sub
cmpl
int
stos
and
fdivp
das
mov
imul
push
push
dec
push
and
add
outsb
test
stos
sbb
nop
mov
xchg
loop
test
into
sub
fnstenv
cmc
jb
push
pop
out
jb
stos
mov
loop
mov
xchg
clc
hlt
add
sub
imul
xor
jno
mov
mov
in
jecxz
outsl
cmpsl
and
lret
or
mov
cli
in
in
sub
aam
test
cmp
cmp
jo
or
lea
popf
int
xor
add
sbb
cmp
adc
dec
enter
push
xlat
call
call
push
adc
mov
hlt
lret
nop
adc
das
popa
les
dec
and
outsb
mov
mov
jge
bound
dec
gs
inc
sub
in
adcl
sub
pop
jnp
dec
jl
insb
stos
pushf
mov
lods
jmp
sti
int3
lret
cld
fucomi
sub
or
cmp
sub
pop
jnp
dec
jl
insb
stos
pushf
mov
lods
jmp
sti
int3
lret
cld
fucomi
sub
or
cmp
sub
pop
jp
dec
jl
insb
stos
pushf
mov
lods
jmp
sti
int3
lret
in
sub
or
cmp
sub
pop
jnp
lret
jl
insb
push
pushf
inc
and
xor
add
adc
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
std
in
xor
lahf
jecxz
out
lods
cmp
jge
insl
jge
insl
dec
pop
cmp
lods
int
std
in
std
popf
in
fnstsw
sub
insl
mov
cmp
lods
int
std
in
std
popf
in
fnstsw
push
adc
or
imul
mov
xor
dec
mov
loop
xchg
jge
cmp
sbb
aad
mov
in
aad
shr
adc
gs
jb
mov
movsl
shl
sub
sbb
xchg
cmp
movsl
sbb
lret
push
mov
jns
sbb
sbb
dec
sub
and
stc
ficompl
std
mov
test
jecxz
addr16
orb
faddp
js
inc
inc
dec
xor
jb
movsb
popf
in
jb
inc
mov
aad
jnp
cwtl
xorl
or
pop
push
xor
aas
push
pop
mov
int
push
fstpl
and
stc
sbb
int
jno
lods
int
std
in
std
popf
in
fnstsw
sub
insl
jge
insl
or
cld
mov
push
hlt
mov
lahf
int3
mov
xor
sbb
jo
je
mov
enter
loope
std
clc
test
movsl
rcrb
and
sub
bound
dec
cmp
lea
cltd
mov
in
fnstsw
sub
insl
jge
insl
or
mov
std
in
std
popf
in
fnstsw
sub
insl
jge
insl
or
mov
cpuid
cmp
pop
out
fwait
ss
push
es
stc
xor
int3
inc
mov
test
mov
or
ljmp
and
mov
xor
int
jg
jae
int
mov
in
mov
mov
cwtl
cmp
cmp
lods
in
sbb
cmp
pop
sbb
popa
lea
mov
xor
movsb
inc
sub
inc
inc
les
jo
or
subps
cmpsb
ret
jge
or
lds
cmp
into
push
pop
out
shll
lds
jno,pn
mov
sbbl
movsl
popa
mov
das
sbbb
inc
scas
mov
xchg
mov
shlb
lcall
loope
xchg
xor
add
insb
sub
fisubl
mov
inc
test
repz
push
test
out
in
adc
jae
loop
mov
lret
sahf
movsl
xchg
imul
stos
xchg
xchg
inc
scas
mov
mov
daa
mov
out
push
dec
lds
aam
xor
sbb
into
jl
mov
cli
js
andl
flds
orb
jbe
xor
sbb
jb
pushf
sub
and
xchg
mov
fstl
dec
aaa
and
sub
add
mov
ds
in
sbb
loopne
loop
bound
sub
cmc
mov
adc
pop
jl
ja
lret
xchg
mov
sarb
inc
inc
mov
ret
stos
inc
jecxz
popa
loopne
push
dec
sub
shrb
je
jle
pushf
push
xor
cmp
cmp
pop
jns
sahf
push
gs
test
aad
cmpsl
divl
or
fbstp
pop
or
aas
aas
cli
js
insl
dec
ret
add
pop
mov
out
icebp
shrl
sbb
test
mov
sub
jb
not
xor
inc
fs
sub
je
aas
sbb
inc
pop
dec
dec
sub
xchg
mov
loope
jne
fmuls
mov
pop
aad
mov
sbb
inc
or
lret
xor
pop
out
roll
pop
fstl
ja
mov
or
mov
mov
mov
aaa
mov
xor
jge
cmp
push
lcall
movsb
mov
add
icebp
push
sbb
in
push
cmpsl
push
xchg
aaa
lock
and
imul
out
call
and
lea
lcall
movsb
js
loop
mov
pushl
push
ljmp
and
stos
cmpsb
xor
dec
daa
sub
xchg
or
jno
dec
clc
aaa
mulb
and
xor
dec
and
and
shr
jmp
mov
cmc
cmpsl
roll
imull
xchg
insb
cmpsl
imulb
outsl
adc
fcoml
mov
jb
es
sub
push
dec
in
shll
dec
popa
mov
fiaddl
pop
push
mov
rcr
lea
dec
jb
std
dec
ret
xchg
int
inc
sarb
andb
es
out
cmp
or
add
ror
insb
sbbb
sub
cmpsl
ficoml
mov
dec
lret
add
jmp
pop
and
gs
incb
popl
dec
sub
dec
mov
sbb
sti
adc
adc
or
mov
mov
sbb
adc
jg
cmp
jp
mov
pop
adc
push
aam
mov
mov
push
neg
push
xchg
xlat
push
push
and
mov
ja
mov
gs
add
mov
insb
jl
sbb
addr16
out
cmpb
lret
test
dec
and
and
jo
pop
push
or
sbb
ds
xchg
push
ss
loope
fs
out
sbb
out
ljmp
enter
pop
or
xchg
mov
cmp
stos
test
add
pop
scas
das
jmp
add
fistpl
fcomps
outsb
pusha
mov
gs
dec
sbb
in
rolb
ja
inc
sbb
dec
or
lahf
ljmp
fidivrl
push
jno
pusha
int
repnz
hlt
cmp
ret
pop
cmp
popl
pop
or
push
dec
cmp
xchg
sbb
dec
xchg
stc
mov
aad
xchg
adc
mov
dec
icebp
rolb
push
adc
mov
push
mov
arpl
outsb
icebp
call
aas
sbb
ror
loope
cld
into
cmp
outsb
addr16
pushf
pushf
add
aaa
xor
sub
dec
and
mov
stos
mov
insb
imul
xchg
das
out
sahf
mov
mov
js
mov
push
fstpt
sbb
inc
jno
add
sbb
enter
xchg
sub
movsb
mov
and
mov
and
cwtl
ja
ja
pop
push
dec
sub
sarb
addl
in
mov
std
and
addr16
mov
sarb
cmp
lea
add
add
dec
pop
rorl
push
fcoms
sub
lcall
cmpsb
jl
lock
adc
test
popa
aaa
loopne
mov
stc
sub
and
or
and
pop
inc
ds
lret
mov
out
push
jmp
mov
jl
lock
sahf
imul
pop
std
pop
xchg
out
and
pop
mov
adc
data16
xchg
jmp
lret
mov
int3
inc
clc
sbb
mov
mov
or
dec
es
cmpb
fdivs
cmp
fists
sub
add
mov
in
pop
mov
aas
push
push
or
repnz
in
mov
cld
clc
fadds
mov
popa
adc
icebp
das
call
mov
cmp
adcb
shlb
test
fwait
sahf
pop
inc
mov
sub
sbb
adc
shlb
clc
push
idiv
or
gs
inc
jmp
inc
repz
jecxz
stc
mov
les
sub
imulb
mov
das
js
lcall
or
cmp
jae
mov
pop
add
push
sub
loopne
or
mov
cmpb
sbb
and
push
test
pop
pop
arpl
dec
fdivs
test
adc
add
inc
out
adc
enter
xchg
push
dec
adc
mov
push
inc
or
jmp
lret
cmp
pop
mov
jge
sub
popf
std
cli
dec
jo
jne
sub
insl
loop,pt
sbb
inc
cmpsb
mov
push
jne
jl
mov
movsb
pusha
inc
sbb
xlat
mov
repz
mov
add
in
repz
icebp
es
sbb
psllw
aad
fdivs
xchg
dec
mov
push
push
or
imull
xor
pop
pop
fstpt
inc
jno
les
add
loope
outsl
inc
xchg
pop
rorl
cmp
jbe
sbb
div
xchg
lods
sub
push
mov
dec
jne
scas
mov
das
mov
sub
inc
iret
dec
xor
pop
stos
add
ds
insl
pusha
and
int3
lret
dec
or
jg
adc
jle
xor
popf
ret
adc
js
cmpsb
mov
test
fucom
test
push
push
adc
mov
push
outsb
mov
rcrl
scas
mov
lods
into
rol
mov
cmpsb
sbb
xchg
stc
clc
mov
dec
xor
hlt
shll
or
push
out
js
pandn
lds
test
jno
xor
bound
adc
pop
out
or
jne
adc
in
xor
cmpl
xor
dec
pop
sub
jle
call
add
popf
push
fs
pop
mov
addr16
or
fsubs
dec
lahf
les
cmpsl
lock
jmp
mov
adc
pop
and
pop
cmpb
pop
gs
pop
mov
out
or
in
adc
mov
hlt
out
jo
stos
or
pop
fadds
push
sbb
test
jnp
xchg
xor
jl
lock
les
cmp
or
pop
inc
jg
mov
daa
lea
pop
jle
push
add
enter
dec
fidivrs
or
jg
clc
cmp
jo
fdivs
cmc
sbb
lret
movaps
leave
out
xchg
dec
insb
cli
add
int
cmpsl
jo
outsb
mov
or
lret
push
daa
incb
dec
in
jge
aas
cmp
adc
fsubl
stc
cmovno
dec
fnstsw
or
dec
shl
lret
sbb
cmpsl
cli
shll
sub
pop
dec
rolb
pop
fsub
lret
xor
ss
lahf
xchg
push
xchg
jle
fisubrs
mov
inc
push
aad
je
popa
ficompl
inc
adc
xor
mov
into
cmp
cmp
mov
cld
aam
jge
sbb
loop
mov
ret
mov
lods
adc
xchg
or
movsl
mov
fs
aam
adc
out
aam
orl
sub
imul
mov
xchg
repz
jns
adc
das
inc
mov
jle
leave
out
pop
push
push
enter
in
mov
adc
push
repz
xchg
cs
sub
popf
inc
jnp
hlt
pop
loope
js
lahf
mov
fldt
mov
cmpsb
cmp
push
inc
sub
cmc
pop
dec
xor
popa
or
inc
outsb
xor
outsl
je
adc
es
add
dec
sarb
sbb
adc
pop
hlt
dec
addr16
cmp
mov
mov
movsb
pusha
cld
or
js
movsl
aam
sub
andb
jne
or
js
mov
cwtl
and
clc
aam
lahf
lock
or
fbld
mov
loope
idivl
dec
stos
xor
cmpsb
call
mov
mov
xor
push
dec
jmp
ret
out
pop
jbe
xchg
lock
push
and
out
or
sbb
cli
xchg
fsts
ds
cwtl
stc
add
call
push
jp
jbe
mov
mov
push
popf
ret
xchg
pop
les
fs
pop
iret
aas
lret
int3
push
mov
popf
or
adc
add
fdivrs
or
sti
jnp
ja
adc
jg
in
repz
jmp
push
shrl
xor
sbb
cmp
dec
cmpsl
add
insl
jne
push
fidivl
mov
ds
fdiv
loopne
mov
pusha
or
sub
bound
loopne
cwtl
jecxz
je
or
cmc
cli
sub
fldl
repz
jecxz
sbb
out
xchg
cltd
cltd
mov
insl
mov
mov
jnp
mov
lods
cmc
add
test
test
dec
mov
enter
popf
xchg
jge
fcompl
mov
lcall
sbb
jae
xchg
ret
xchg
int3
pop
aaa
rcll
mov
popa
fdivrs
push
mov
xor
je
mov
loope
jle
decl
pushf
insb
pushl
in
adc
sub
push
lods
add
xchg
out
or
or
std
jecxz
cmp
cmp
inc
add
push
in
lods
jb
cmp
gs
xchg
sub
adc
sbb
jo
dec
mov
sub
lret
pop
imul
jecxz
pop
inc
or
xor
out
arpl
push
jl
decl
ds
lds
insl
add
inc
cmpsl
xchg
or
sub
js
dec
dec
not
fstpt
repnz
jbe
pop
fldt
mov
mull
adc
shl
std
pop
push
nop
lea
and
pushf
shr
mov
mov
xchg
out
or
mov
pusha
lods
dec
mov
add
ljmp
mov
sti
ja
push
into
lcall
into
cltd
push
cli
push
les
jecxz
pop
jnp
push
popa
mov
fidivrl
int
add
push
dec
mov
in
mov
or
je
sbb
add
out
cmpb
xchg
sbb
pop
jmp
adc
jmp
aad
out
xchg
ret
mov
mov
jae
dec
mov
pop
insb
mov
add
and
sti
sbb
or
sub
stos
cwtl
stc
iret
or
nop
icebp
xchg
scas
pop
inc
inc
stos
ret
push
sub
push
jae
aam
push
mov
mov
pop
in
test
jno
sbb
push
push
mov
test
out
fcomp
aad
and
and
dec
mov
fsubr
sub
call
cmp
das
adc
mov
pop
sbb
push
xchg
aaa
lods
testb
ja
mov
mov
xor
mov
fwait
lods
cmc
nop
cmpsl
inc
sbb
rcrl
pusha
adc
jae
sbbl
outsb
sahf
cmp
pop
imul
or
data16
and
es
dec
in
jle
rep
dec
mov
daa
xchg
mov
cmp
das
sbb
mov
out
pop
adc
loopne
pop
jo
fisubs
fisttpll
sbb
dec
push
or
jle
mov
push
loope
or
loop
jno
lds
insl
sub
in
add
cmp
push
dec
xchg
mov
fcoml
jmp
cs
cmp
fiaddl
xor
jae
cmp
push
shl
xchg
out
mov
js
push
arpl
and
mov
or
jmp
aam
loope
or
lock
ret
movsl
addr16
push
cmp
stc
mov
or
jno
insb
or
xor
xchg
pop
mov
xor
xlat
dec
lock
fisttps
and
in
xchg
test
fistpll
test
lret
cmp
insl
pop
cmp
js
mov
push
cltd
fisttpll
cmp
or
fsubrl
jle
mov
icebp
ret
pop
ret
mov
scas
mov
jp
xchg
in
movsb
fwait
xchg
cli
das
ja
inc
clc
ret
jg
jmp
inc
mov
jnp
xor
xlat
or
add
xchg
hlt
jb
sahf
inc
gs
int3
call
pop
xchg
jno,pt
adc
int3
pop
sub
push
mov
js
jmp
test
jg
dec
lcall
or
popf
mov
pop
xchg
scas
and
mov
xor
or
add
add
jge
es
int
add
mov
jle
jnp
movsl
rorb
test
inc
push
xchg
dec
gs
add
mov
xor
out
repz
lret
xor
sbb
out
pop
push
sub
cmp
aam
dec
mov
mov
push
divb
ja
pop
xchg
mov
ljmp
adc
lahf
xchg
xorl
cwtl
rcrl
dec
or
pop
mov
mov
into
or
fs
mov
xchg
fstl
inc
stos
mov
add
call
mov
test
add
fsubrl
pop
out
inc
mov
addr16
mov
sbb
add
cld
lock
dec
dec
cwtl
icebp
mov
pop
arpl
mov
lret
imull
mov
fisttpll
fisubrl
jp
movl
lahf
mov
fmull
pandn
jnp
push
mov
imul
ret
add
mov
sub
jmp
jmp
sti
sbb
fldl
dec
and
dec
shrl
add
outsl
daa
fisttpl
xchg
push
int3
push
test
mov
lahf
cld
xchg
test
lahf
push
clc
dec
xchg
mov
push
mov
sub
cltd
xor
jp
fmull
sbb
jae
xchg
push
mov
int
inc
adc
icebp
outsb
add
push
mov
or
mov
icebp
repnz
sub
loopne
mov
sbb
into
enter
shrl
jno
jns
push
mov
mov
test
cltd
std
outsl
dec
xchg
dec
jnp
pop
lods
cmp
in
fbld
test
sub
push
popa
cmpsl
inc
mov
out
stos
mov
mov
push
das
cmp
movsb
mov
fsubl
mov
sub
xchg
call
xlat
xchg
data16
hlt
cwtl
out
xor
jo
cmp
adc
xchg
or
xchg
inc
lret
aas
cmp
add
mov
and
ss
mov
les
pop
push
sarl
adc
jg
aaa
movsb
fsubr
ret
xor
rcrb
enter
jne
js
xor
jecxz
mov
rclb
leave
sbb
test
adc
in
and
and
rorb
lods
adc
jecxz
shrl
mov
xor
lods
call
push
cwtl
pop
fsubrs
aad
jb
sbb
cmpsb
dec
rcrl
pop
or
mov
std
jnp
sbb
and
push
pop
int3
pop
jns
mov
sbb
xorl
push
inc
pop
shl
or
pop
movsb
jno
adc
add
dec
cwtl
aas
out
mov
push
orb
lcall
loopne
dec
pop
push
aaa
or
cmpsl
inc
or
daa
sub
ja
push
mov
out
cmc
add
mov
mov
mov
loop
pop
stos
adc
push
fimull
mov
or
clc
bswap
xor
mov
lret
jp
ds
xlat
faddl
pop
add
shll
cli
mov
mov
cmp
sub
jg
outsl
cli
movsl
mov
pop
push
shll
jmp
inc
adc
xchg
mov
out
adc
cmpsl
je
mov
pop
test
add
jbe
insb
les
arpl
pop
cmp
fisttpll
int
or
xchg
pop
test
loope
pop
hlt
lods
mov
jbe
in
sub
mov
rclb
loope
xor
pop
movsl
mov
jmp
xchg
cmpb
and
or
mov
iret
sub
xlat
outsb
jo
or
add
dec
idivl
mov
jg
jbe
push
cltd
add
fdiv
inc
fadd
and
or
repnz
mov
cmp
test
cmp
and
in
lret
inc
clc
inc
push
ret
ret
mov
sbb
xor
in
add
cmpsl
sbb
jno
movb
je
dec
std
mov
fcompl
sbb
adc
iret
inc
orl
mov
cs
dec
cmp
cmp
stc
das
lods
les
sbb
cmp
lods
jg
gs
daa
mov
in
mov
sbb
addr16
mov
mov
in
test
jne
shrl
push
int
lds
bnd
das
jg
jg
push
sbb
mov
mov
insb
test
adc
outsb
cmpb
icebp
or
jp
pop
mov
xor
xor
cmp
push
jle
sti
sbb
sbb
movsb
ds
cli
sub
cmpsb
or
dec
jno
iret
in
rcrl
lock
sbb
and
add
call
mov
sbb
sub
aas
mov
movsl
push
les
mov
aas
movaps
cmpsl
iret
jae
inc
aam
jb
xor
sbb
lods
pusha
jbe
daa
loopne
inc
xchg
mov
loop
aas
aad
imul
shll
dec
sbb
fmulp
xchg
test
into
and
inc
or
gs
das
push
stc
cltd
dec
cmp
mov
rcll
adc
cwtl
or
mov
mov
adc
imul
adc
and
repz
adc
pusha
idivl
jmp
movsb
pop
into
loop
scas
sbb
cmp
add
ss
or
pop
xchg
pop
pop
iret
xchg
and
and
or
sbb
fst
dec
xor
insb
movsl
adc
cld
daa
sahf
movsb
jb
lea
pop
cmpsb
jb
icebp
or
jnp
aam
jmp
fwait
jmp
aas
jno
loop
dec
cmp
mov
xor
in
icebp
or
xor
jb
or
test
fwait
cwtl
push
movsl
fisttpll
dec
add
test
inc
out
imulb
movsl
or
add
rol
nop
outsb
jno
lds
mov
adc
or
data16
xchg
pusha
enter
mov
sar
xlat
dec
cs
in
shll
mov
shlb
imul
adc
mov
test
pop
pop
inc
cmpsl
or
in
in
cli
sub
jmp
sahf
cmp
add
xchg
popa
rol
mov
pushf
sarl
jge
push
addl
push
out
sub
sbb
aas
jno
mov
aad
sbb
xchg
aaa
mull
inc
loopne
push
push
ss
lret
jo
fidivrl
inc
xor
or
leave
push
out
sti
leave
psubusb
aaa
and
mov
es
push
push
stc
push
insl
inc
push
dec
jge
in
xchg
pop
ret
or
in
pop
ja
sub
insl
add
sbb
xcrypt-ofb
cmpsl
sub
aad
inc
idivb
mov
dec
ret
xchg
add
shr
jne
dec
sahf
sub
int
cld
in
std
popf
in
fnstsw
sub
insl
jge
insl
or
mov
std
in
std
popf
in
fnstsw
sub
insl
jge
insl
or
mov
std
in
jge
in
fnstsw
dec
sbb
sbb
or
mov
std
jmp
fnstsw
sub
sbb
ret
push
sub
pusha
sbb
dec
jo
push
imul
lock
adcb
mov
cmp
pusha
sbb
imul
ja
test
loopne
nop
movl
pushl
pusha
outsl
adc
xor
inc
and
test
into
jmp
mov
into
mov
add
jl
data16
adc
sbb
lret
mov
sbb
nop
cmc
cmp
sub
cli
test
out
jl
repnz
out
inc
jge
gs
outsl
cld
xchg
cmpsb
mov
pop
xchg
test
lret
pusha
mov
test
orb
add
test
test
xor
or
adc
or
adc
mov
shrb
pop
jge
cwtl
outsb
cld
call
movsl
scas
pushl
sbb
pop
out
pop
or
mov
movsl
rorb
imul
js
aaa
jl
leave
call
cmp
jmp
lods
addl
sbb
pusha
sbb
imul
lret
shrb
loopne
nop
aad
pop
mov
mov
push
adc
int3
dec
adc
cmp
push
xchg
ljmp
cmc
scas
jmp
mov
outsl
xor
jp
jne
cmp
and
push
enter
stc
ret
stos
cmp
fstps
gs
jne
and
and
test
loopne
nop
jmp
mov
cmp
pusha
sbb
imul
pop
shrb
loopne
nop
jmp
mov
outsl
lret
je
test
loopne
mov
ret
bound
mov
sbb
xor
xchg
cmp
mov
cmp
mov
sub
inc
jo
jae
push
xchg
and
aas
and
xorb
jno
push
sbb
scas
dec
popa
dec
test
nop
call
xorl
std
xchg
jns
cli
inc
mov
and
fcmovnu
mov
shlb
xchg
sahf
pop
test
add
ljmp
lahf
or
and
xchg
xor
add
mov
popa
cli
adcl
loope
pop
inc
jmp
jl
sub
adc
jae
add
jp
sahf
push
addl
rcl
mov
sub
sbb
leave
or
in
addr16
push
sub
imul
lods
dec
jg
dec
rcrb
pop
jne
and
lcall
cmp
xor
pop
movsb
aaa
shll
mov
and
rcl
xchg
mov
mov
fistpll
popaw
into
jnp
in
das
push
xchg
scas
inc
les
inc
mov
cltd
and
push
xor
dec
mov
test
int
fldenv
push
ss
inc
repz
jnp
je
jno
jmp
sub
inc
aas
push
and
xchg
dec
or
xchg
sub
pop
addb
cmpb
and
ja
sbb
popf
popf
movsb
inc
dec
push
pop
out
int3
popf
movsl
mov
mov
mov
mov
pop
mov
pusha
call
mov
mov
mov
idivl
add
lahf
adc
jg
pop
xor
andb
popa
ret
push
xor
xor
mov
popf
jb
xchg
popl
push
subb
rorl
jg
mov
adcl
adc
adc
outsl
movsb
cmp
or
andl
rolb
cmp
call
cmp
repnz
push
in
loopne
rcrb
cwtl
ljmp
push
ljmp
pop
adcb
pop
jecxz
daa
or
dec
outsl
push
int
xchg
dec
fwait
cmpb
filds
inc
into
and
push
xchg
add
pop
in
push
stos
sbb
or
sbb
std
inc
mov
shll
or
ljmp
fisttpl
mov
cmp
scas
push
cwtl
add
stos
mov
mov
mov
mov
outsl
test
xchg
or
mov
mov
inc
push
aad
push
aas
minps
jb
mov
jl,pn
adc
jp
bound
loope
jmp
repz
inc
cmp
imul
mov
lds
push
pop
iret
or
mov
std
or
testl
call
adc
sbb
xor
outsb
inc
test
xchg
mov
mov
stos
fs
jp
fwait
rcr
and
push
cltd
cmp
je
xor
cmp
ficompl
mov
and
into
arpl
dec
jbe
sar
add
mov
push
jo
sub
ret
dec
je
pushf
xor
sub
jp
fldl
adc
pop
push
dec
aas
xor
in
dec
dec
push
and
mov
xchg
push
cmpsl
shl
movd
pop
adc
inc
mov
sub
or
das
xchg
mov
inc
or
adc
cmpsl
insl
xor
push
int
xor
mov
imul
imulb
jecxz
mov
adc
aaa
in
cli
stos
sub
movsb
mov
imul
pop
imul
call
fnstsw
popa
push
repnz
push
mov
sbbb
ret
mov
xchg
std
loopne
enter
or
adc
dec
inc
mov
jno
adc
mov
inc
ficoms
lahf
mov
xchg
test
das
inc
pusha
jle
cmp
push
cli
mov
fnstenv
leave
idivl
sbb
mov
cmp
adc
loope
sarl
fisubl
or
xlat
dec
cltd
fdiv
sub
adc
ljmp
ljmp
movsb
cmpsb
mov
shll
sub
sbb
out
fstl
das
scas
mov
insl
mov
mov
aaa
cmp
pop
je
enter
call
std
movsb
dec
sbb
test
loop
ficomps
push
mov
lcall
jl
pop
cmp
adc
sub
test
dec
cmp
mov
dec
icebp
leave
mov
cmpsb
dec
inc
gs
cmp
inc
push
mov
and
ss
enter
pop
xor
pusha
gs
cmp
cmp
aas
mov
inc
jnp
in
shll
fdivr
lret
scas
mov
inc
or
nop
fstl
push
mov
add
loope
imul
sub
out
add
or
aaa
cwtl
cmp
pop
arpl
testb
mov
roll
sub
pop
movsb
jecxz
int3
pop
into
push
lock
xchg
jo
mov
imul
push
adc
lret
adc
add
les
push
xor
dec
mov
ret
sbb
mov
xchg
mov
mov
ss
adc
test
inc
cmp
insl
jecxz
sti
mov
js
aaa
mov
das
movsb
movsl
ror
arpl
mov
or
add
mov
in
cmp
test
pushf
add
mov
cmp
jo
or
movb
mov
orb
mov
mov
mov
inc
shll
aaa
adc
scas
mov
inc
pop
cwtl
lret
or
push
cmpsl
dec
and
lret
dec
std
jmp
popf
das
std
test
mov
or
push
adc
pop
push
sbb
aad
or
ror
adc
add
out
lret
sub
pop
out
mov
daa
fucomp
ss
lods
mov
lods
cmp
lock
mov
negb
inc
cld
aam
ds
xor
cmp
and
xor
mov
push
sub
add
xchg
push
cmpsl
aaa
pusha
jns
lahf
ret
or
shl
push
lods
rcrl
popa
fdivrl
push
pop
pop
jl
bound
pushf
jmp
xlat
cltd
cmp
xchg
xchg
leave
int
adcb
leave
mov
sub
sub
ret
stos
lock
cmc
scas
inc
leave
push
and
es
and
mov
inc
in
popa
mov
lcall
inc
mov
push
sti
pop
aam
push
xor
push
dec
psubusw
xchg
insl
fcoms
rcll
sahf
call
inc
push
jno
cs
lret
and
and
cmpsb
cltd
mov
bound
out
popf
xor
jns
adc
xchg
adc
lods
jge
ljmp
loope
xchg
cld
into
or
sbbb
nop
lods
pop
test
mov
pop
dec
stos
cld
sub
lock
cmp
or
or
repnz
enter
cmp
nop
fstpl
xor
or
and
xchg
sbb
test
test
repnz
and
into
xchg
fcomps
loop
fsubrl
loop
scas
ds
and
adc
inc
in
push
das
sub
movsb
mov
inc
mov
sub
fdivl
imul
fimuls
inc
lcall
cmp
xchg
add
pop
addr16
pop
ljmp
repz
dec
pop
add
mov
roll
pop
imul
sbb
pop
and
jno
bound
mov
ja
rcll
in
in
pop
lods
idivb
xchg
jne
loopne
mov
mov
xor
xchg
insb
dec
movsb
add
inc
push
push
pop
inc
inc
repz
push
adcl
fwait
test
ficomps
aam
repz
and
cwtl
mov
sub
and
fwait
mov
lahf
push
add
xor
adc
jns
je
xor
push
fiadds
insb
and
daa
mov
pop
sahf
xchg
mov
lea
lods
mov
pushf
scas
lret
push
stos
cmc
push
icebp
pop
jno
dec
jbe
pop
dec
push
mov
push
inc
sbb
in
outsl
into
andl
add
es
mov
jbe
int3
cmpsl
leave
mov
mov
and
sbb
cs
jo
sub
inc
lahf
or
sbb
mov
inc
dec
add
or
inc
sub
clc
repz
out
lahf
add
mov
outsl
movsl
dec
clc
aam
aaa
mov
jb
cmp
push
nop
outsl
insb
lahf
push
andb
push
out
cmpb
jecxz
cltd
inc
imul
fldl
cmc
mov
gs
nop
mov
mov
pop
aas
iret
xor
jbe
cmp
mov
xor
shrl
fbld
jle
lcall
cli
lods
test
mov
fwait
and
jae
xchg
and
ja
scas
pop
add
sbb
psrlw
push
mov
add
xor
mov
je
int3
repz
aas
inc
lea
and
ret
loop
lds
cltd
mov
data16
lods
dec
inc
pop
mov
pusha
add
and
aam
mov
jnp
jbe
jns
and
pushf
inc
xlat
add
cli
pushf
mov
imul
inc
test
in
mov
popf
rorl
xchg
pop
out
push
loope
sub
inc
mov
mov
ret
lea
inc
adc
bound
jnp
dec
pop
stos
sbb
pop
and
fwait
cmpb
dec
rorb
sbb
pop
jbe
xor
push
sub
iret
jne
jg
test
fcomps
push
sub
xor
movsl
sti
int3
mov
sbb
lea
sbb
fwait
mov
into
xchg
fcomps
sti
push
mov
out
and
sbb
mov
jno
cmp
sarb
xor
jns
aaa
ja
pop
inc
mov
adc
mov
mov
dec
loope
cmpsl
sbb
lea
ror
xor
jo
or
mov
ja
jmp
sbb
leave
sbb
inc
xchg
mov
jp
xor
xor
jge
and
outsl
mov
cmp
loop
push
pop
dec
push
adc
jbe
mov
loopne
cmp
test
lods
add
xor
sbb
subl
cmp
in
outsb
and
movsb
call
sahf
adc
in
dec
sbb
int
xchg
adc
sub
fwait
dec
add
insb
aas
or
jmp
ficomps
sub
sbb
push
pop
fucomp
cltd
cmp
mov
mov
nop
out
lahf
cmp
dec
jmp
mov
mov
or
pusha
fneni(8087
mov
aad
arpl
je
sub
and
xchg
jge
sti
ret
xchg
aas
rcr
jle
ds
fldcw
in
pop
cmp
mov
jbe
ja
test
dec
cmp
lret
cli
pop
imul
jle
cmp
es
sub
daa
cmp
lcall
jle
lret
dec
movsb
addr16
insb
and
cmp
arpl
or
mov
push
addr16
xchg
mov
jae
adc
mov
loop
add
gs
mov
in
stc
movsl
mov
lds
ror
lret
call
stos
fprem
aad
call
xor
xor
ret
adc
out
sahf
fsub
enter
ljmp
gs
cli
mov
sub
mov
insl
xor
test
lods
icebp
mov
push
lahf
daa
std
icebp
outsb
leave
lods
adc
add
fisubs
xchg
add
aam
fadds
out
and
fisubrs
dec
jg
mov
jle
pop
fidivrs
pushf
insb
bound
pop
cmp
cmp
fsubrp
insb
mov
xor
cmp
sbbb
sbb
fmull
mov
cmp
xor
loopne
mov
mov
insb
test
into
mov
lret
icebp
pop
aad
xchg
test
shl
add
clc
outsl
scas
adc
or
stos
cmpsl
stc
in
pop
js
cmpsb
rclb
ja
push
in
and
ret
jnp
test
cmp
xchg
pop
stos
lret
ljmp
xor
add
push
push
sub
clc
sub
out
pop
mov
sahf
xlat
dec
mov
out
sub
dec
pop
enter
cli
int
hlt
inc
cmpsl
sub
jns
jnp
test
daa
imul
lods
int3
scas
and
movsl
in
ret
adc
fsubl
dec
mov
add
sub
lahf
loopne
data16
les
nop
dec
sahf
sbb
arpl
sar
inc
roll
adc
push
xor
lret
add
and
ret
jl
stos
xor
jmp
mov
cs
cltd
add
shrb
jecxz
or
pop
out
mov
add
pusha
insb
sbb
push
and
mov
jecxz
sarb
out
inc
ss
fs
shll
aad
jns
push
dec
mov
sahf
aad
in
lahf
or
push
sbb
int
xor
sub
and
mov
xchg
adc
xor
push
lret
and
scas
int
push
xor
roll
sbb
lret
jp
pushf
mov
ret
mov
xor
mov
ljmp
and
hlt
jle
dec
sbb
adc
fimuls
jge
dec
mov
and
push
out
sbb
inc
push
rcl
out
shlb
cmp
adc
or
mov
sub
or
and
mov
call
adc
pop
and
inc
imul
in
rcl
sahf
mov
ret
pusha
aad
rcrb
icebp
aad
jge
pop
or
add
fdivrl
in
mov
xchg
aam
mov
jmp
psraw
pop
loope
push
call
stc
test
push
push
movsl
jmp
push
pop
fnstcw
outsb
cmp
fwait
mov
mov
push
clc
out
ret
scas
insb
mov
mov
call
daa
mov
popa
les
push
mov
sub
insb
push
push
pop
ret
xchg
mov
push
pop
pop
ja
or
js
ja
icebp
cmp
leave
or
inc
dec
push
cmpl
insb
push
xchg
xlat
add
cmp
inc
lret
clc
repnz
jp
ret
mov
mov
out
sbb
dec
insb
imull
push
fs
sub
and
sub
mov
fists
xchg
adc
call
dec
push
mov
xchg
adc
push
cltd
loop
adc
cmpl
call
es
jl
mov
sti
mov
es
push
inc
dec
roll
fdivr
popf
add
outsb
lret
or
lds
push
les
adc
inc
sub
sbbb
les
fldpi
enter
out
jg
jecxz
mov
js
add
jo
mov
cmc
pop
pop
out
out
mov
cmpsl
mov
push
mov
xchg
and
inc
enter
dec
call
mov
loop
mov
xchg
addr16
popf
sbb
pop
cmp
cmp
lret
dec
out
mov
and
in
or
and
es
ret
jmp
or
dec
ja
imul
cmp
inc
stos
bswap
hlt
pop
mov
outsl
fsts
nop
test
dec
loope
mov
in
cmpsb
add
jmp
outsl
repnz
adc
mov
movsl
movl
aad
jp
mov
jle
movsl
adc
addr16
push
dec
jo
push
mov
pop
and
adc
jecxz
dec
push
pop
dec
push
mov
mov
pop
imul
sbb
mov
jne
push
sbb
movsb
xchg
cmp
mov
mov
ret
xor
or
and
imull
pop
mov
sbb
add
es
sti
lea
adc
xor
xor
fprem1
xchg
rolb
dec
and
fwait
leave
xor
jg
jge
push
jg
loop
add
rcrl
test
pop
jo
dec
shrb
dec
scas
mov
and
dec
mov
mov
sbb
stc
in
stos
mov
scas
adc
stc
and
dec
or
jae
inc
pop
jne
adc
add
pop
inc
dec
ret
xor
movsb
clc
jmp
push
dec
fwait
xchg
cmpsl
bound
repz
pushf
xor
test
xchg
imul
bound
mov
scas
lea
jae
push
ret
xchg
mov
xlat
int3
aas
loopne
xor
sub
or
xor
jge
sbbb
aaa
ss
push
out
popa
aaa
scas
int3
pop
push
cmp
xchg
sbb
jae
cmp
mov
sbb
es
cli
shrl
sub
outsl
mov
cmp
ss
mov
push
lahf
cmp
loopw
jbe
out
js
es
std
test
pop
adc
fwait
mov
jle
lahf
push
sahf
push
push
mov
mov
cmp
sahf
mov
mov
sub
push
ret
pop
push
rcll
jne
sbb
adc
sti
idivl
or
int3
cltd
lret
mov
jae
and
dec
fcompl
pushf
cmpsb
cmp
cld
xor
out
fiadds
pusha
js
mov
cmp
jmp
fnstsw
and
jae
faddl
ret
xchg
pop
shrb
mov
xor
mov
inc
inc
call
insb
fmul
and
jmp
inc
mov
imul
inc
jecxz
aam
pushf
sub
insl
xor
les
mov
or
push
negl
mov
push
stos
lahf
out
loope
test
mov
stc
int3
adc
test
outsb
push
pop
xchg
inc
xor
out
sub
xchg
lds
mov
jne
inc
adc
movsb
adc
push
repz
je
jge
dec
dec
and
xchg
lods
mov
mov
add
pop
insb
cmp
sbb
and
push
pop
sub
cmp
pop
dec
aas
fisttps
test
ficomps
enter
popf
out
xchg
out
adc
aam
int3
or
jp
jae
xchg
dec
dec
push
jmp
sub
fistpl
sub
push
jmp
sti
ret
sbb
scas
nop
push
repz
bound
push
repz
clc
popf
pop
fwait
cmp
xchg
movsb
rorl
sub
iret
mov
loopne
in
mov
pop
mov
xorb
mov
mov
xor
push
inc
adc
aas
push
xchg
dec
pop
cmc
movsb
or
loop
daa
cmp
mov
ljmp
adcb
addr16
xor
std
je
pop
rolb
xor
popa
dec
loopne
repnz
adcl
cmp
cmp
nop
xor
xor
pop
mov
and
sbb
xlat
push
test
ds
or
cmp
repz
nop
push
aas
pusha
popf
bound
inc
mov
or
add
fadd
mov
and
xlat
xchg
xchg
ret
shl
into
sti
arpl
or
fbld
cmp
jmp
lods
lret
popa
insl
add
bound
mov
xchg
sub
mov
mov
loope
sub
mov
gs
pop
mov
push
push
cmp
arpl
fidivrs
cltd
xor
loope
dec
cmp
mov
xchg
sub
das
pop
cmp
test
xchg
adc
cmpsb
icebp
xor
sbb
sbb
xchg
cmp
add
stos
ljmp
push
jg
pop
mov
cmp
adc
jmp
cld
sub
sbb
aam
js
jae
cmp
sub
or
sbb
shll
sbb
and
jmp
outsb
pop
daa
lahf
or
in
cmp
cmp
stc
lds
jg
cs
les
aaa
xchg
call
xor
cmp
bound
mov
clc
jnp
lret
mov
fists
loopne
das
pop
dec
movsl
xchg
pop
push
outsb
add
push
out
inc
mov
mov
inc
ja
aas
dec
xorb
dec
dec
ja
ficoms
popa
repnz
lds
sbb
loop
add
push
sbb
pop
push
daa
inc
jo
sub
push
xchg
inc
push
sbbb
repnz
or
scas
push
pop
jmp
dec
cmp
mov
loopne
iret
jge
jl
pop
jns
push
push
mov
xchg
xor
jg
xchg
mov
test
arpl
lock
cld
test
call
enter
pop
xchg
clc
icebp
testb
xor
ret
xchg
inc
pop
icebp
cmp
mov
and
cmp
or
mov
mov
adc
and
push
fwait
cmp
fnstenv
hlt
and
dec
jp
inc
pop
ret
shrb
adc
leave
sbb
sbb
ss
sub
fwait
add
lods
sarl
in
xor
pushf
in
cmp
or
sbb
imul
pop
shrb
loopne
nop
jmp
mov
cmp
pusha
sbb
imul
pop
shrb
loopne
nop
jmp
mov
aaa
jo
pusha
sbb
xor
pop
shrb
loopne
nop
in
cmp
shlb
jo
pusha
pop
adc
jns
leave
and
pop
mov
out
out
or
pop
dec
mov
mov
js
sarl
add
pop
or
add
add
add
out
sbb
and
lods
add
add
add
xchg
aas
add
add
add
add
add
sbb
inc
add
add
add
mov
xor
aad
flds
data16
mov
add
add
mov
add
add
outsl
add
add
add
imul
xchg
add
add
add
or
mov
jnp
flds
mov
add
add
add
add
cmp
add
add
add
incl
test
loop
imul
push
add
add
add
add
imul
lcall
add
push
add
add
add
sbb
mov
xor
mov
add
add
add
cs
add
aad
pushf
add
add
add
inc
add
scas
add
add
mov
pushf
add
add
add
add
add
add
and
xor
push
add
add
add
add
add
xor
adc
add
or
push
add
sbb
add
add
mov
add
add
add
add
add
dec
add
add
add
data16
add
add
add
add
add
push
add
arpl
addr16
add
add
add
add
dec
add
or
inc
add
incl
add
add
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
bound
xor
adc
add
add
add
add
add
add
add
add
add
imul
es
push
mov
xchg
add
add
add
add
add
add
insl
add
add
add
and
xor
jg
cmp
add
or
cwtl
add
add
jbe
cmp
add
add
add
adc
add
add
mov
xchg
add
add
add
add
in
add
lods
add
add
push
add
into
add
add
add
and
add
add
add
add
add
add
add
add
add
mov
jg
daa
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
aad
das
add
je
iret
add
add
add
faddl
cmp
into
add
add
add
add
add
sbb
xor
add
mov
mov
flds
sbb
cwtl
add
push
stos
add
add
add
data16
add
test
cmp
add
add
push
add
add
or
popf
add
add
add
add
cmp
add
add
add
add
jns
add
data16
xor
das
add
add
add
add
add
add
push
add
mov
popf
add
add
add
add
lea
jg
add
or
xchg
scas
inc
sbb
xor
adc
lds
adcl
lret
aam
adcb
push
in
jno
cmp
jnp
inc
lock
sti
mov
in
sbb
xchg
sbb
push
test
lahf
adc
or
mov
mov
shll
popf
sbb
icebp
add
sub
inc
cmp
and
mov
fmuls
shlb
ficomps
lcall
cmp
cmova
sbb
or
hlt
xchg
sar
or
xor
push
jb
cmpsb
gs
mov
sbb
dec
mov
xor
mov
xchg
loope
or
or
icebp
mov
scas
test
dec
mov
pushf
int
push
sarl
ret
fnstsw
push
inc
es
fsts
pop
psrlq
xchg
cmp
sub
je
sbb
mull
xor
dec
and
mov
aas
lret
and
inc
xor
inc
xchg
pop
out
out
dec
cmp
pop
icebp
adc
in
jecxz
aam
sti
inc
insb
gs
xchg
in
sbb
jae
adc
out
push
xor
push
dec
cs
and
daa
pop
cmp
dec
push
push
mov
sbb
jg
fnstcw
inc
xor
shll
sub
xor
outsl
xchg
cwtl
push
mov
clc
movsl
adc
dec
jb
inc
mov
add
pop
test
pop
jnp
popf
xor
xorb
ret
and
cltd
inc
cwtl
into
sbb
xchg
dec
ljmp
dec
sbb
xchg
mov
lea
ja
loopne
or
hlt
movsb
inc
dec
jmp
cmpsl
fistpll
sub
popf
dec
clc
mov
pop
mov
pop
incl
sbb
fsubs
fcomps
ret
lcall
loop
mov
inc
jecxz
fildl
in
inc
into
mov
test
and
hlt
data16
daa
sti
ret
inc
or
imul
jmp
lcall
fs
push
out
sbb
in
push
sub
jo
xchg
mov
push
out
andl
xor
out
pop
cmc
cltd
cmp
mov
mov
aam
xchg
movsb
xor
sub
fsubs
aaa
dec
mov
rcrb
ja
push
mov
adc
cmp
add
int3
mov
mov
mov
in
pop
mov
es
sub
cli
popa
leave
adc
loopne
iret
sbb
call
jge
xchg
or
lret
inc
sahf
or
dec
cmpsl
xchg
rolb
leave
cld
add
idivl
cmp
lods
push
mov
mov
pop
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
