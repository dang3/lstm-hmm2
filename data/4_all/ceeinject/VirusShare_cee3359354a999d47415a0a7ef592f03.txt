sbb
add
aad
dec
mov
fldl
sub
dec
test
xchg
jne
push
sbb
inc
lock
ret
stc
aas
das
xor
push
and
in
pop
cmp
test
mov
cli
cmp
popf
sub
or
mov
xor
movsl
imul
sbb
mov
sbb
xchg
xchg
xchg
jle
adc
lods
in
pop
inc
fcoms
cmp
incl
iret
cmp
js
enter
test
xor
sub
or
mov
loop
ja
mov
pop
pusha
arpl
or
daa
mov
ror
cmpsb
sub
clc
pop
jns
jne
push
bound
jecxz
mov
and
pop
or
ror
pop
lret
mov
andl
mov
dec
ljmp
pop
and
cmp
dec
jo
xlat
push
sub
add
sbb
je
ficomps
jnp
jle
lret
xchg
mov
or
fwait
test
sub
add
pop
or
scas
push
sbbb
lcall
das
cli
adc
rcrb
mov
lea
jg
inc
out
lock
sub
pushf
shrb
jle
and
add
xchg
mov
cmc
adc
cmpsb
inc
mov
test
sbb
xor
jecxz
jl
pop
mov
pop
ljmp
dec
or
and
jecxz
sbb
lods
jns
in
cmpsb
mov
add
cmp
sub
cld
fbstp
mov
pop
loopw
adc
out
lock
inc
in
and
push
or
out
in
call
in
xchg
or
cmp
into
les
outsl
mov
fadds
mov
dec
pop
mov
xchg
sbb
and
lea
shl
dec
std
jno
push
mov
sti
lea
mov
xor
xor
sub
test
cmpl
stos
std
jp
insb
xor
mov
rol
sti
xchg
push
sti
adc
int3
mov
jb
pop
roll
cld
int
stos
std
sbb
adc
sti
testb
mov
dec
and
xlat
push
rclb
dec
popa
enter
dec
add
and
sub
leave
cmp
ja
dec
sub
lret
fwait
in
loope
sub
dec
jecxz
cltd
into
ret
jmp
push
stc
push
imul
cli
xor
ja
mov
adc
rolb
push
pusha
xchg
mov
mov
lods
pop
add
dec
loopne
out
push
imul
pop
cmp
xlat
clc
xor
mov
or
cmp
cmpsl
jge
pop
pop
aaa
adc
stos
mov
push
test
jne
sbb
push
test
jmp
mov
dec
cmp
push
and
out
mov
cs
dec
stc
ds
ja
xchg
les
daa
sub
nop
je
arpl
and
lock
mov
lcall
ja
imul
pop
mov
or
test
pushf
test
pop
ret
mov
mov
ds
adc
xor
xor
adc
gs
in
lahf
lahf
push
repz
and
pxor
push
lret
lret
test
mov
cmp
pop
mov
outsl
out
arpl
inc
push
sub
mov
test
pop
mov
sub
pop
mov
in
std
adc
test
out
adc
mov
shlb
mov
mov
mov
rcll
and
arpl
cmpl
nop
xlat
sub
inc
pop
ret
mov
dec
testl
add
mov
mov
fstl
daa
into
fists
test
xchg
mov
jbe
pop
jp
mov
stos
imul
push
cli
adc
aaa
mov
movsb
insl
outsb
test
lret
cmp
int
mov
add
pop
jmp
add
or
mov
push
fnstcw
mov
push
mov
fisttpl
jae
addr16
mov
into
adc
mov
mov
dec
add
adc
int3
lds
addb
push
adc
pusha
adc
mov
cwtl
mov
lret
cmpb
cwtl
inc
or
fs
cs
push
xchg
jge
mov
sub
mov
ss
out
xor
sbb
pop
inc
in
std
int
pop
inc
cwtl
scas
cmp
sbb
pop
ror
dec
mov
nop
sarb
adc
addl
clc
lock
adc
iret
xchg
data16
repz
mov
loope
int3
xchg
les
inc
xchg
test
mov
call
mov
into
daa
dec
sub
int3
xchg
cld
mov
sub
es
sar
and
add
pop
fistpl
mov
pop
pop
add
add
pop
mov
lahf
stc
and
out
in
inc
mov
ljmp
sub
inc
lods
and
daa
icebp
mov
pop
push
ret
add
std
inc
out
jmp
xor
lods
and
add
divb
push
out
in
add
inc
fcmovnb
pop
movsl
sete
scas
mov
in
jnp
aas
fwait
movsb
xorl
pusha
mov
call
inc
or
fdivl
cli
pop
ret
aam
lahf
divb
mov
lcall
ds
movsb
push
pop
hlt
sbb
push
fistl
daa
adc
and
mov
inc
sbb
jne
pop
xchg
pop
es
mov
mov
cmp
dec
jg
sub
imul
nop
pop
out
or
push
xor
jae
and
xchg
rorl
daa
daa
std
mov
jae
fsubl
cmpsl
adc
cmp
test
scas
pop
adc
fstps
rcrb
lock
cwtl
sbbl
das
mov
stos
lea
push
sbb
and
jno
sbbl
mov
cmp
dec
out
jl
and
sub
cwtl
fldenv
xor
inc
testb
rolb
decb
fsubl
js
fisubs
mov
in
loop
bswap
and
loop
mov
aaa
pusha
mov
mov
cli
sbb
push
jbe
pop
mov
les
dec
outsb
pop
lock
jmp
aaa
test
ret
inc
jle
out
out
in
jne
add
xor
xor
mov
adc
call
inc
jmp
xchg
clc
into
lret
sub
int
pop
int3
imul
inc
scas
pop
test
cld
inc
test
into
add
pop
dec
aas
cmpsl
jle
sti
xchg
test
add
mov
ja
sbb
lods
mov
sub
daa
xlat
shll
ds
out
jl
popf
aas
sbb
imul
fwait
xchg
sub
inc
aam
inc
aad
mov
loopne
mov
mov
int3
jbe
fwait
icebp
scas
lock
cltd
or
rorl
out
out
pop
es
jp
fisubl
scas
cmp
lcall
or
xchg
clc
xchg
ljmp
mov
daa
cld
cmp
sub
xor
push
xor
gs
add
mov
add
mov
icebp
shlb
fcompl
lret
mov
rcrl
add
enter
imul
inc
jno
arpl
syscall
cmp
movsl
cwtl
imul
mov
std
jecxz
mov
les
inc
in
pop
lods
outsb
push
arpl
pusha
jo
xchg
pop
xor
stos
inc
sti
repz
push
iret
adcl
jne
xchg
popa
push
mov
mov
das
cmpsb
jg
add
subl
push
jecxz
js
outsl
xchg
push
xor
push
xlat
out
and
mov
sbbl
cmpb
push
dec
in
fcmovne
daa
stos
mov
cmc
sti
pusha
adcb
int3
push
addr16
xor
adc
mov
loope
and
mov
mov
and
out
pop
pushf
sbb
aaa
dec
js
in
pop
lea
enter
ret
dec
in
outsl
cmpsl
outsb
adc
xchg
pop
inc
fisubl
and
imul
mov
testb
jl
xlat
cs
dec
iret
or
cmp
aam
jo
jo
xchg
stos
out
lea
out
in
mov
loopne
cmpl
mov
push
out
cs
cli
loope
and
pop
xchg
hlt
jo
cmc
lret
sub
push
pop
cmpsl
out
pop
shll
dec
hlt
imul
cmp
mov
fmul
push
pushf
out
testb
int
jmp
and
xchg
imul
dec
fildl
fnstenv
xor
pop
fwait
sub
loope
xchg
out
icebp
inc
dec
xchg
movsl
jnp
or
dec
lahf
cltd
mov
mov
pop
sub
adc
movsb
inc
call
out
addr16
mov
xchg
sbb
lods
scas
shr
and
push
popa
mov
adc
jo
xor
arpl
pop
mov
jge
leave
fdivrl
mov
or
dec
repz
cmc
sbb
jge
repz
mov
js
aas
mov
jbe
push
mov
or
imul
in
testb
js
lcall
ret
mov
mov
lahf
push
mov
test
shll
or
les
add
js
in
xchg
inc
xlat
jo
inc
lret
jl
adc
jg
adc
leave
clc
adc
in
bound
mov
jmp
add
add
jns
mov
mov
push
loope
mov
hlt
fnstsw
jmp
sbb
cmp
movsb
push
pop
je
add
out
jp
ret
and
push
xor
lret
neg
outsb
push
adc
push
imul
inc
movsl
jns
sbb
ds
adc
cmc
scas
movsl
dec
mov
mov
sahf
inc
cli
jecxz
insb
movl
clc
jle
pop
jns
dec
cmpsl
add
pop
dec
pop
or
cmpsb
and
ret
in
popf
pop
inc
fwait
insb
mov
adc
into
mov
mov
push
outsb
adc
mov
movsb
cmpsb
je
ljmp
sub
aas
les
add
js
or
and
aad
pop
outsl
lods
xchg
push
adc
cmpsl
inc
cmp
arpl
ss
xor
iret
mov
or
sub
and
divl
mov
sbb
and
push
punpcklwd
add
xor
inc
and
int
cwtl
inc
aaa
jmp
fnstcw
or
or
test
addb
push
popa
adc
xchg
sahf
and
push
out
mov
imul
popf
out
pop
cmp
hlt
mov
repz
jmp
into
mov
xor
push
leave
movsl
push
jo
mov
cmc
popa
sub
fstl
add
lret
sbb
daa
inc
xchg
stos
sub
mov
adc
scas
popf
mov
movsl
in
popf
add
xchg
mov
std
jae
xor
and
sub
test
sbb
in
test
icebp
icebp
dec
xchg
mov
sbb
rcr
fcompl
movsl
loopne
out
jl
fcoms
mov
mov
pop
jbe
sarl
jae
fnstenv
imul
push
xchg
sub
stc
dec
push
adc
fmulp
in
dec
shl
ret
arpl
repnz
rorb
mov
lock
fs
mov
cmc
js
in
das
retw
cmp
lea
imul
andl
out
test
push
push
adc
dec
stc
aad
aaa
mov
stos
jmp
xor
dec
mov
je
xlat
arpl
sub
pop
xchg
jno
outsl
pop
sti
jle
lret
test
mov
jne
or
leave
sbb
jae
xor
stc
shll
pushf
push
pop
xchg
jecxz
pop
xchg
jmp
dec
pop
dec
out
jnp
or
or
out
inc
pop
or
int
ljmp
insl
jne
mov
jo
jo
xchg
shlb
imul
in
test
outsl
rol
jno
inc
out
and
cmp
sub
push
addl
sub
cmp
ret
les
xchg
sub
pop
cmpsl
scas
lret
nop
scas
shl
add
arpl
inc
add
ljmp
mov
int3
inc
stc
mov
into
inc
adc
mov
ret
fnstsw
mov
orb
dec
mov
jecxz,pt
add
push
or
cwtl
xchg
aam
idivb
fistps
das
sti
mov
jg
pop
sbb
ss
jmp
jbe
sub
movsb
xchg
or
pop
sbb
sbbl
mov
mov
add
sarb
cmp
out
ret
int3
cmovno
shll
push
hlt
mov
inc
or
adcl
fwait
daa
push
pop
incb
push
sub
rcl
sahf
jl
aas
inc
ljmp
fcmovbe
icebp
mov
aam
int
rcl
imul
jnp
bnd
cmp
orl
out
push
lea
lock
shlb
cmpsl
inc
mov
cwtl
pop
cmp
ret
mov
cmp
or
clc
mov
enter
cmpsb
xchg
roll
adc
inc
mov
aas
inc
cmp
or
push
push
sub
add
push
jae
inc
mov
mov
shll
mov
test
sti
inc
sarb
out
lock
xchg
sbb
sub
push
or
lret
sub
pop
lret
add
sub
sbb
push
add
ret
scas
rcl
inc
lcall
loope
dec
ret
test
das
inc
mov
sbb
sarl
pop
push
sahf
arpl
push
jns
shlb
mov
lret
xor
pop
push
xor
xchg
mov
xchg
in
les
push
mov
inc
or
das
je
lods
lods
xchg
sbb
mov
sub
sub
adc
mov
cli
insl
mov
mov
and
and
lds
insl
stos
cmc
mov
call
cmp
adc
mov
shl
das
negb
insb
inc
pushl
sbb
lea
rcrb
inc
bound
pusha
push
fcmovbe
pop
mov
jecxz
add
test
jp
jmp
cmp
dec
push
lock
lea
out
inc
mov
jle
jmp
int3
outsb
jbe
mov
mov
into
xchg
inc
icebp
das
xchg
inc
jae
inc
out
push
jmp
mov
scas
outsl
shlb
test
stos
push
pop
leave
js
repz
mov
stos
xor
mov
movsl
test
lds
aam
adc
loop
or
mov
fadds
adc
adc
fs
or
mov
les
movsl
jnp
mov
xchg
sbb
clc
mov
xor
in
lcall
mov
sub
insb
mov
or
xchg
xchg
jno
pop
std
mov
mov
shlb
test
cld
mov
push
hlt
mov
lods
stos
repz
pop
pusha
jbe
andb
push
test
call
xchg
lock
sbb
adc
aaa
test
punpckhwd
and
lods
cmpsl
out
sub
aaa
mov
aas
lds
mov
ss
sub
lret
mov
test
and
jb
sub
pop
lods
or
pushl
cmc
mov
aas
jnp
mov
outsb
in
xchg
ss
add
push
xlat
push
ja
out
popa
mov
or
sub
pop
push
sub
lahf
pop
jo
out
jmp
popf
add
movsb
or
and
scas
daa
pop
xorb
pop
sbbl
push
mov
leave
clc
mov
dec
jmp
dec
xchg
ret
repz
push
push
push
and
popa
lret
movsl
sub
jnp
push
dec
rcl
pushf
adc
das
jl
repz
sti
ret
loop
sbb
lds
daa
jg
mov
sar
mov
test
daa
dec
mov
in
insl
push
mov
icebp
lds
push
daa
stc
push
dec
repnz
inc
leave
push
inc
rolb
mov
cmpb
js
add
push
je
jmp
push
sarl
shlb
cmp
repz
int3
push
in
fstpt
sub
push
cmp
adc
sbb
adc
add
xchg
hlt
test
inc
lock
pop
loopne
sbb
mov
outsb
push
and
fcoms
or
insl
ss
je
or
push
mov
orb
add
mov
cmp
aas
xchg
imul
or
ror
adc
mov
outsl
lods
inc
jae
sbb
xchg
je
testl
dec
call
jbe
pop
inc
pop
mov
cs
mov
cmp
cltd
sbb
jl
mov
mov
pusha
cli
sub
push
lods
scas
pop
aad
daa
sbb
out
mov
sbb
jp
jne
je
int
addr16
outsl
mov
jno
sbb
xor
or
push
and
iret
aam
out
push
nop
push
dec
xor
in
rcr
insb
outsb
mov
scas
ds
movsb
sub
movsl
mov
roll
push
int
push
into
xchg
jmp
lret
adcb
jl
or
pop
mov
je
push
clc
das
push
or
addl
jl
cmp
cmp
test
dec
mov
sub
xchg
sub
jle
idivl
xor
shll
inc
and
daa
dec
lret
jb
das
cmpl
scas
cmpsl
sahf
loope
push
bound
pop
insl
xchg
jbe
pop
mov
bnd
jecxz
decb
jae
mov
or
lea
xchg
out
test
xor
add
or
xor
cmpsb
or
fs
imul
je
inc
mov
sbb
inc
fdivrs
rorb
jno
push
out
sbb
stc
pop
push
outsb
lds
ljmp
and
mov
mov
stos
add
pop
lcall
mov
lcall
call
mov
cld
ret
jecxz
andl
sbb
mov
xlat
jg
stos
push
sub
repz
out
test
mov
and
inc
inc
push
push
loopne
ds
add
mov
pop
mov
fwait
loopne
mov
lea
sbb
push
cwtl
cmp
inc
inc
outsb
push
sbb
sub
inc
sbb
fxch
push
test
jo
aaa
sub
and
add
add
addr16
jb
fs
in
cmp
push
mov
sub
les
sti
or
outsl
insl
pop
inc
push
lods
sbb
add
jp
es
ret
push
insb
mov
push
scas
mov
push
mov
mov
dec
dec
xchg
pminsw
jp
in
dec
mov
push
stc
sub
sub
aas
in
mov
test
pop
cltd
mov
mov
cmpb
divl
stos
jno
pop
addr16
xor
popa
out
jns
lods
push
fs
out
or
test
mov
dec
insb
push
in
push
or
or
dec
mov
dec
dec
mov
mull
pusha
or
testl
addr16
out
pop
and
push
addr16
aad
and
mov
loop
push
ret
test
movsl
testl
sub
das
pushf
js
mov
cmp
sbbl
lret
or
loopne
les
idivb
es
lahf
mov
adc
cltd
or
adc
test
nop
pop
jge
es
xlat
and
add
mov
sahf
jecxz
mov
push
mov
push
ljmp
sbb
xorb
lret
push
jle
dec
xor
les
dec
jo
in
xchg
xorl
or
and
adc
out
mov
flds
sahf
aas
lods
test
inc
cmc
and
ljmp
cmp
imul
lcall
mulb
sbb
ret
pop
dec
pop
cmpsb
cmpsl
aas
mov
push
js
popf
sub
les
add
push
lock
dec
lock
mov
or
rorb
and
outsl
add
ljmp
popf
xor
out
fbstp
cmp
push
mov
and
fstl
mov
inc
faddp
dec
std
xlat
roll
repnz
mov
cmp
and
xor
mov
sti
push
ja
ds
xor
push
js
insb
cmpsl
stc
mov
xchg
jmp
xchg
leave
and
push
adc
sbb
std
stc
ret
scas
and
pushf
adc
icebp
mov
lahf
sti
pop
stos
ffree
sub
adc
lcall
push
lcall
movsl
lods
orb
std
inc
addb
sahf
repnz
and
dec
lcall
mov
sbb
les
hlt
jg
mov
cwtl
test
ljmp
pop
testl
iret
jmp
jmp
pusha
dec
sub
cmc
mov
pop
jle
imul
and
mov
fstl
push
dec
popa
iret
movsb
pop
pushl
andb
mov
pop
mov
iret
int
addr16
xchg
rorl
cmpsl
cli
insl
cs
and
ljmp
ficoml
sahf
cmc
cmc
xchg
pop
xchg
jns
and
dec
sbb
lcall
les
mov
daa
insl
and
or
ret
or
mov
mov
cmp
jnp
jbe
gs
cltd
sahf
inc
mov
adc
sbb
lahf
push
mov
dec
iret
sti
jnp
xchg
cld
dec
xchg
lea
jns
cld
sub
fwait
dec
or
dec
inc
test
popa
dec
jecxz
fldcw
fistpll
adc
insl
mov
sbb
aam
mov
das
fiaddl
rcll
and
mov
int3
pop
mov
inc
sub
mov
leave
lcall
fldcw
adc
inc
xlat
adc
fcmove
jne
ret
mov
mov
scas
in
pop
fimuls
or
jnp
arpl
mov
pushf
mov
sub
xchg
shlb
cli
shll
sbb
mov
jle
and
cmp
dec
jae
pop
and
sub
pushf
jg
jl
jmp
cwtl
test
jmp
jl
shrb
cmp
lret
ds
lret
ljmp
lods
xlat
pop
loopne
popa
addr16
xchg
jne
mov
sti
rcrl
and
push
in
pop
mov
addr16
mov
lcall
pop
or
in
loop
testb
add
in
jg
and
mov
jne
jae
adc
xor
xor
mov
in
mov
mov
mov
fwait
mov
fs
dec
lret
mov
into
mov
outsl
repnz
or
xor
adc
sbb
dec
lock
out
sub
push
fisubl
out
sbb
push
sub
aas
add
and
inc
rcr
push
inc
inc
mov
pop
out
loopne
scas
jb
adc
pop
dec
inc
in
or
aas
std
or
rorl
fldcw
sbb
imul
sbb
mov
notb
out
dec
xlat
filds
dec
int3
dec
cmp
and
lods
in
aaa
data16
ljmp
or
shl
mov
sbb
in
dec
insl
mov
in
cmp
cmpsb
sbb
xchg
cmpsb
add
push
pop
fiadds
fwait
mov
push
fs
repz
pop
out
jo
arpl
sbbb
sbb
mov
sahf
cmp
arpl
std
adc
fwait
cmp
lahf
into
add
fadds
loopne
imul
pushf
stc
lahf
test
ja
mov
mov
jmp
int
push
repnz
data16
js
mov
rol
mov
icebp
aad
fdivs
or
stc
sbb
dec
fcompl
mov
xchg
rorb
lods
adc
push
ljmp
inc
pop
clc
xchg
push
xorl
fisubrl
std
cltd
xchg
pop
int3
cmp
adc
mov
jne
fs
push
cmp
enter
test
sub
pop
divb
adc
add
out
mov
test
push
inc
push
aaa
leave
add
pop
movsl
insl
cmpsl
ror
xchg
lahf
add
mov
dec
adc
test
into
add
scas
dec
loope
in
dec
xor
xchg
int
mov
call
xchg
xor
aam
mov
adc
dec
scas
out
adc
lcall
ret
sbb
xor
int
movsl
or
mov
negl
decb
xchg
jbe
andl
jbe
cmp
daa
int
test
dec
xchg
mov
cmpb
into
mov
out
xor
xchg
sub
push
xchg
sub
setp
in
lock
andl
and
js
mov
cs
ret
sub
xor
mov
and
ds
dec
mov
fildll
xor
cmp
xor
or
pop
in
test
aaa
inc
insb
sarb
rorb
cli
mov
aas
cmp
sub
adcb
dec
cmc
inc
cmp
testl
jo
mov
into
arpl
xlat
outsb
pop
inc
popf
nop
jne
and
mov
inc
dec
outsb
push
cmc
cmp
daa
fsubr
mov
addr16
mov
aam
std
hlt
push
jb
stc
pushf
sub
and
test
and
filds
pop
dec
mov
mull
in
jle
jns
jmp
xlat
movsl
inc
push
loope
scas
movsb
xor
xchg
out
mov
adc
add
loop
int3
call
test
movb
fstl
jno
sbb
in
push
and
pop
and
test
jp
adc
xchg
cmpsl
mov
mov
mov
lds
icebp
call
test
cmpsl
lcall
pushf
sti
idiv
fisubrl
int3
sti
and
inc
mov
stos
lods
repz
inc
leave
es
scas
sbb
mov
mov
sub
gs
sbb
out
jb
cmp
xchg
dec
lahf
js
xchg
pop
iret
sub
or
mov
repnz
or
cmp
adc
and
mov
and
cs
mov
and
mov
shlb
or
outsl
add
cli
rcrb
shl
push
lds
outsl
daa
xchg
je
out
cmp
adc
sub
adc
jbe
push
inc
into
imul
mov
les
mov
lret
xor
adc
sub
lds
cltd
mov
loope
fs
imul
jb
jb
mov
jle
jae
adc
mov
pop
or
jb
mov
xchg
js
enter
mov
dec
lods
cmpsb
cmp
jecxz
jl
in
adcl
fdivrl
xchg
and
les
jecxz
push
lea
sub
adc
out
adc
push
jne
xchg
addb
jb
pop
sahf
ljmp
sahf
rclb
out
mov
loop
and
sbb
cmpsl
pushf
aas
jbe
cmc
xor
fsts
sbb
or
fwait
mov
mov
pop
add
into
test
leave
cltd
shlb
fstl
xor
cwtl
dec
add
ja
or
fdivs
jl
lahf
movsl
addr16
cmp
call
cmpsb
xchg
dec
addb
or
lea
movsl
mov
ss
jp
int
push
or
xor
cltd
jo
xor
sbb
mov
repnz
add
je
popw
mov
push
mov
out
and
sub
insl
stos
sub
and
stos
andl
mov
outsl
sbb
mov
iret
dec
jle
jbe
xor
jl
mov
call
push
add
mov
lea
jne
out
loop
jns
ret
dec
mov
dec
out
xor
repnz
jl
jmp
mov
mov
xlat
dec
lods
es
jle,pt
sbb
int3
in
hlt
and
arpl
cmpsb
xchg
fildll
movsb
or
mov
jg
int3
cltd
enter
js
mov
sbb
sbb
sub
dec
push
movsb
rcr
cmp
ja
addr16
loope
push
ljmp
mov
adc
cmpl
insb
and
jge
and
imul
std
sub
test
adc
out
arpl
push
lods
rep
pop
mov
jp
xor
mul
xor
mov
adc
in
repz
jle
aam
mov
mov
roll
in
cld
push
into
xchg
aad
sarl
jecxz
fldenv
idivb
negb
jecxz
sub
lret
fucom
sbb
mov
add
psubd
shl
repnz
stc
das
cmp
icebp
std
sarl
add
push
adc
push
mov
rcrb
loope
pop
adc
lret
add
push
mov
fcomps
mov
adc
cmp
cmp
nop
scas
xor
cmp
or
or
into
xchg
mov
add
rcrb
fcmove
clc
outsb
pop
xchg
add
push
adc
and
xor
adc
ret
add
test
mov
into
jo
lock
jne
dec
and
les
in
rclb
xchg
mov
jnp
jg
push
push
enter
out
sub
clc
repnz
xor
movsl
insb
arpl
setp
adc
cmp
push
lock
jne
add
je
and
cmc
stos
add
into
testb
mov
push
jmp
enter
dec
push
and
fsubp
cmpsb
popf
push
test
xchg
cmpsl
sbb
ret
cmpsb
xor
jnp
mov
ficomps
and
loopne
mov
int3
dec
xchg
movsl
popa
mov
rolb
mov
and
add
shll
sbb
sub
dec
mov
mov
negb
ljmp
and
jecxz
sbb
pop
or
cltd
xor
test
xor
mov
xchg
addb
inc
push
adc
add
mov
cltd
xchg
dec
fstpl
mov
mov
leave
addr16
mov
pop
aad
addl
out
scas
mov
mov
pushf
inc
xchg
mov
push
in
push
leave
xorl
inc
pop
jecxz
adc
gs
mov
insb
push
imul
cmp
sbb
or
mov
orl
mov
mov
dec
bnd
mov
inc
call
jge
outsl
mov
movsb
pop
push
and
inc
xor
push
xor
pop
sahf
jb
push
mov
mov
jmp
test
test
push
lds
dec
out
xor
pop
cmc
push
mov
fwait
outsl
pop
aaa
push
ret
dec
inc
xor
jmp
jno
cmp
xchg
xchg
or
movsb
jo
mov
cltd
ss
mov
pop
cmp
std
fcmovbe
mov
push
sub
dec
pusha
flds
cltd
in
mov
pop
adc
fs
cmp
inc
xchg
stos
mov
out
mov
push
pop
or
js
push
frstor
fcmove
cmp
out
pop
jmp
mov
xchg
js
mov
ss
loope
lret
mov
bound
repnz
sbb
fldcw
cld
mov
or
or
popf
xchg
and
int3
shr
and
std
jle
mov
push
test
fisttpll
inc
sbb
xor
push
subb
out
xor
or
add
push
ds
mov
test
enter
mov
ret
movsl
inc
rorl
jbe
inc
mov
ss
leave
loope
shl
dec
iret
inc
nop
out
mov
mov
xchg
push
mov
fwait
cmp
mov
nop
sub
arpl
shlb
sarl
and
sub
out
or
imull
movsl
cltd
mov
xchg
imul
mov
stos
das
jb
lret
insb
mov
xchg
lahf
cwtl
cmp
and
clc
mov
enter
nop
xchg
mov
xchg
movsb
xor
cwtl
adc
insl
add
mov
inc
mov
sub
lahf
lret
pop
sbb
loop
add
data16
mov
jbe
jmp
cmp
jge
test
in
dec
lea
gs
mov
cmp
or
stos
push
xor
ret
repz
out
inc
mov
inc
data16
rcrl
jbe
mov
aaa
dec
outsl
inc
cmp
enter
test
mov
add
jecxz
out
xlat
mov
mov
lods
push
in
add
js
nop
out
in
arpl
das
mov
add
movsl
jl
stos
fwait
imul
aas
idiv
insl
push
int
mov
scas
mov
inc
push
push
in
jg
xchg
rolb
aas
sub
jbe
dec
adc
mov
js
insl
lret
and
sub
fldcw
sbb
jg
and
or
pop
ret
jo
cmp
push
sub
jae
ds
xchg
pushf
insl
add
xor
outsb
mov
sbb
jge
dec
pop
cmpl
mov
fiaddl
or
stos
out
imull
push
or
pop
adc
gs
movsb
sub
xchg
jno
cltd
adc
jbe
add
push
mov
mov
jbe
cmp
popa
cltd
cmp
xor
shlb
inc
inc
leave
cmpsl
ret
cmp
rcll
cltd
loop
cmp
movsb
stos
ret
sbb
or
repz
mov
pop
popa
cmpb
ror
jnp
lgs
dec
push
mov
subl
cmp
jl
arpl
orb
add
adc
mov
xchg
faddl
pushf
out
scas
rcll
mov
dec
rorl
shlb
call
call
loopne
push
adc
pop
iret
fsubs
mov
cmp
jmp
push
aas
xchg
mov
lods
jecxz
mov
sub
dec
xchg
jle
cltd
add
push
andl
out
es
pop
pop
daa
mov
sbbl
andl
cld
sbb
ficoms
dec
aad
push
sbb
add
and
and
sahf
jae
fldt
mov
add
cmp
add
and
icebp
jnp
popa
jmp
or
mov
test
xor
mov
xor
out
pop
popa
cmp
push
inc
iret
mov
jmp
cld
sbb
mov
repz
inc
and
adc
call
sbb
je
in
mov
inc
pusha
fcoms
or
mov
addb
mov
popa
mov
mov
rcrb
in
adc
addr16
jecxz
jp
mov
mov
sbb
out
rol
mov
or
mov
test
lea
orl
add
cwtl
mov
stc
mov
rcr
mov
or
jae
jno
fcoml
mov
orl
aam
jb
cmpsb
jno
shlb
out
fistl
xor
push
jecxz
mov
adc
fadd
mov
pop
jl
repz
sahf
loop
stc
mov
test
aas
fimuls
gs
mov
push
xor
not
clc
and
cpuid
dec
xor
mov
add
pop
shufps
test
stos
push
lcall
mov
outsl
insl
push
add
push
xchg
mov
inc
xor
out
int3
sub
xchg
sbb
arpl
xor
jp
sbb
sbb
sub
hlt
add
inc
loopne
arpl
adc
jl
push
xchg
stc
test
fstl
and
lods
scas
mov
aas
lahf
sub
popf
into
sbb
fistpl
test
pop
pop
sarb
mov
mov
adc
das
js
sar
cmp
push
mov
pop
cmpsl
and
scas
ds
inc
icebp
lods
outsb
repz
push
movsb
aad
mov
adc
mov
adc
push
cltd
clc
xchg
stos
cmpb
adc
sbbb
xor
int3
jb
push
nop
sub
mov
push
fwait
repz
pop
aad
sub
or
lds
push
add
xchg
lcall
and
pop
and
mov
xchg
andb
xor
fs
push
mov
jb
mov
ja
sub
fld
cmp
cli
mov
jo
jg
jl
and
push
pop
mov
xor
pop
icebp
pop
jmp
push
lret
fnstsw
sub
mov
mov
cmp
sahf
pop
incb
xchg
dec
leave
fstps
add
dec
inc
insb
adc
inc
popf
and
sub
int3
rcl
lret
dec
add
and
out
push
pop
inc
sub
mov
insl
jecxz
sub
push
loop
xor
lea
add
ret
aaa
jne
outsl
fildl
and
inc
faddl
mov
cmpsl
dec
inc
dec
clc
cld
push
adc
jbe,pt
ljmp
cs
repnz
daa
movsl
mov
in
pop
and
hlt
stos
imul
repz
rcll
or
fists
and
jb
in
test
cld
push
mov
test
jo
movsb
lahf
out
cmp
dec
je
pop
xor
add
int
rorb
inc
pusha
loop
push
ds
stos
xchg
xor
sub
mov
cld
aaa
pop
addb
fcoml
cmp
aaa
mov
pusha
fnsave
pop
push
ss
popa
jb
pop
mov
or
repnz
or
sbb
sub
sbb
sti
leave
ret
push
lcall
mov
pushf
push
lock
sub
add
mov
out
pop
inc
dec
xor
mov
push
dec
sub
call
adc
data16
int
pop
sub
add
cmpl
daa
ror
sti
xor
out
xor
iret
pop
loop
fimuls
push
jge
mov
das
inc
aad
fcoml
fistpll
push
pop
dec
inc
xor
mov
xchg
mov
das
sahf
mov
sti
mov
repz
movsb
xor
sub
popf
ja
popa
pop
dec
out
rolb
or
push
inc
add
addr16
jge
or
jnp
dec
test
stc
cltd
cwtl
push
in
and
jl
push
pushf
xor
arpl
scas
mov
lret
icebp
aaa
jge
les
add
test
scas
cs
out
out
addr16
cmp
hlt
add
xchg
inc
cmovo
mov
sub
dec
adc
sti
add
add
sub
in
cmp
dec
inc
xor
scas
in
jge
fcmovnb
and
jb
mov
mov
mov
xchg
push
pop
sti
fwait
add
dec
loope
loop
and
mov
mov
or
pop
jnp
or
pop
aam
lahf
outsl
les
inc
push
xchg
lret
mov
sbb
les
das
pop
movsl
xchg
push
cmpl
jle
test
enter
add
cwtl
lcall
ss
inc
sbb
into
imul
xor
orl
clc
pop
mov
enter
out
outsb
add
push
jne
mov
pop
scas
jbe
push
and
popl
xchg
les
scas
dec
xchg
mov
sub
iret
mov
cli
push
mov
insl
gs
shrb
sbb
nop
xchg
dec
leave
ljmp
cmpsb
xchg
cmpl
jl
mov
push
xor
push
jb
mov
push
pusha
mov
mov
mov
iret
insb
mov
roll
xor
out
mov
daa
add
sbb
movsb
push
sbb
mov
pop
out
mov
push
lret
sbb
and
jmp
mov
out
scas
mov
fsubr
sbb
es
cmpsl
addr16
or
test
repnz
mov
dec
pop
scas
adcl
stos
dec
xlat
mov
xor
test
in
cmpsl
shlb
and
mov
mov
jecxz
imul
ret
mul
ret
sub
ret
cmp
repnz
out
jg
divb
push
nop
test
fmull
mov
lret
unpcklps
into
pushf
adc
clc
negb
inc
jg
enter
xor
rcll
mov
add
pop
sbb
ret
fs
jle
mov
out
dec
dec
lret
mov
ret
add
xlat
jp
shlb
xchg
mov
xchg
add
mov
call
and
int3
mov
test
stos
test
les
cwtl
lds
sbb
clc
popfw
mov
xor
mov
bound
out
mov
xor
dec
test
or
push
adc
adc
lahf
test
mov
cld
rorl
pop
aaa
add
mov
jmp
adc
cmp
push
sbb
out
xchg
mov
test
mov
test
nop
lcall
addr16
lret
movsl
or
dec
in
or
ficompl
pusha
sub
add
into
push
ud1
and
cld
xor
mov
cmp
lcall
rcll
xchg
sti
shrb
les
nop
push
jns
inc
mov
mov
jbe
cmp
mov
xor
andl
xchg
testb
fwait
cmp
dec
sbb
iret
icebp
arpl
jnp
sbb
push
add
dec
cmp
xlat
cmp
jge
xor
into
popa
push
mov
rcl
jnp
aas
push
jecxz
inc
jno
ffree
mov
std
add
sbb
int
xchg
ja
imul
or
popf
adc
xchg
xchg
mov
cmpsl
xchg
push
push
xchg
std
imul
xchg
xchg
in
sub
adcl
mov
int3
sbb
sbb
jb
scas
sti
sub
in
lods
adc
negl
jbe
std
inc
setle
mov
das
sub
jbe
loop
mov
cld
fisubl
shrl
cltd
xor
xlat
icebp
out
adc
push
xor
cmp
clc
dec
int
dec
lcall
movsl
nop
ret
pop
mov
sub
mov
mov
pop
lods
dec
aaa
mov
jmp
pop
dec
loop
jbe
ret
dec
add
out
cmc
and
pop
imul
sahf
lods
inc
shll
and
aad
andb
cmc
push
les
fistps
iret
dec
mov
out
pop
add
daa
push
push
push
mov
enter
push
sbb
daa
push
push
fnstcw
push
sbb
jecxz
sub
mov
adc
jle
push
leave
shlb
xor
sbb
cmp
xchg
inc
lahf
ljmp
scas
sarb
jb
sub
inc
test
fs
pop
leave
subl
pop
xlat
xchg
leave
jo
imul
fcomp
movsl
pop
cwtl
xchg
aam
add
push
dec
mov
scas
rorl
rcrb
sub
mov
seto
adcl
clc
fbld
and
cmp
xchg
xor
add
arpl
loopne
mov
sbb
scas
in
lcall
sete
push
cmp
pop
pop
push
xchg
pop
cmp
push
adc
scas
push
xor
jmp
pop
arpl
pop
cmpsb
fldcw
lahf
mulb
addr16
fcmovnb
stos
xor
adc
dec
fs
and
pop
pop
push
lds
inc
xor
frstor
ds
sub
sbb
jge
sub
fst
pop
loope
sub
xor
push
pop
xchg
xor
in
scas
sbb
sbb
ljmp
popl
or
jecxz
xchg
push
inc
iret
or
repnz
cmp
mov
add
rcll
dec
mov
mov
sbb
push
sub
jmp
xchg
call
cmp
out
mov
and
jb
jl
dec
sbb
loop
inc
into
sar
mov
add
stc
mov
inc
das
mov
je
fwait
stos
mov
or
and
and
lret
idivb
aas
or
test
jo
dec
xchg
pop
cs
in
sub
sub
std
mov
lahf
cmpsb
pop
adc
mov
mov
lods
sbb
dec
mov
mov
arpl
xlat
jno
into
jmp
mov
jl
add
je
dec
sbb
insb
mov
inc
ljmp
sub
cmp
addr16
js
jp
fwait
enter
pop
or
outsl
test
std
pop
rcll
cmp
mov
sbb
jne
sub
loopne
int3
ljmp
imul
pushf
push
pop
mov
andl
jbe
cli
mov
inc
stc
pusha
push
rclb
cmp
cmp
xor
es
and
lret
mov
pop
cmpsl
sub
push
dec
jo
add
mov
negb
stc
repz
lret
lds
inc
cld
out
pushf
dec
ja
mov
cmp
fnstenv
mov
push
test
xchg
cmp
shlb
mov
xchg
repnz
push
in
dec
sub
and
pop
sbb
pop
cmp
ret
gs
sbb
mov
cmp
loope
pop
pop
in
js
xchg
insl
sub
cmp
stc
xor
mov
shr
shl
jbe
ficoms
or
adc
lock
sbb
loope
adc
stos
imul
pop
and
sub
shrl
fcomps
vandnps
push
mov
push
cld
xchg
xchg
outsl
das
fimull
inc
rcrb
mov
test
jl
out
mov
lods
mov
push
adc
fimull
jmp
icebp
test
push
fisubrs
xchg
das
out
sahf
or
out
test
iret
and
mov
imul
push
out
push
lahf
mov
lret
movsl
inc
lods
movhps
pop
roll
imul
sbb
adc
adcl
imul
mov
sub
xor
push
pop
icebp
fisttps
int
popf
and
rcrl
lods
imul
and
sahf
movsb
jmp
fsubs
lods
stc
jns
inc
les
jne
mov
repnz
fisubrs
xchg
xchg
test
test
mov
inc
das
xchg
sarl
pop
dec
ljmp
fsub
notb
jb
arpl
jae
outsl
leave
aam
outsb
incl
ljmp
mov
sbb
pop
and
in
incl
jmp
stos
shrb
xor
mov
jge
insl
orb
idivl
call
stos
mov
insb
add
push
dec
push
popf
sub
std
and
mov
into
shll
push
gs
imul
scas
dec
cli
ret
out
mov
lea
jbe
rcr
shll
adc
or
push
push
cli
mov
aam
call
popf
shlb
jo
push
inc
mov
lock
push
mov
cltd
repz
insl
das
mov
pop
sub
mov
movsb
out
push
js
inc
jmp
pop
sahf
sbb
cwtl
pop
aas
fsub
xchg
jecxz
out
cmp
scas
aas
mov
push
mov
je
movsb
cmp
xor
and
shrl
jle
jge
mov
jb
sub
inc
arpl
cmp
or
xchg
sbb
mov
movsl
sbb
pushf
fs
and
ss
pop
sbb
subl
popa
les
fwait
aam
xchg
stos
fcomps
push
scas
jge
push
cmpl
adc
mov
xchg
imul
or
jge
dec
jecxz
popf
push
in
in
xor
js
inc
jle
mov
shr
jmp
ret
inc
pop
out
repnz
push
pop
jbe
mov
arpl
in
bound
mov
xor
in
push
sub
add
dec
xchg
xchg
and
fs
adc
cwtl
pop
cmp
or
pop
add
stos
xchg
push
call
fcmove
mov
and
and
cmp
pop
push
lods
inc
xor
adc
sbb
dec
add
ret
dec
add
in
mov
and
fld
mov
jne
imul
shrd
jo
add
mov
es
push
fwait
cmpsl
mov
std
add
xor
test
sub
sbb
into
mov
cmp
repnz
repnz
dec
fldl
test
loope
jg
add
cmp
mov
mov
inc
add
movl
mov
push
cltd
imul
js
sti
cmp
fwait
aas
or
fsubrl
and
mov
pop
js
insl
push
add
movsb
hlt
divl
ja
nop
ficomps
pop
sub
lahf
aad
jp
loopne
push
pop
mov
push
sub
aaa
push
adc
pusha
cmc
sub
add
mov
les
iret
dec
xchg
add
shll
dec
lods
mov
add
push
in
cmp
mov
je
push
popl
sahf
lods
insb
inc
scas
jl
add
cld
push
fldcw
inc
xchg
mov
pop
xlat
insl
mov
loope
aam
ljmp
pop
jae
xchg
mov
xchg
mov
fstp
and
or
fbld
dec
lods
mov
das
fistps
xchg
push
sbb
hlt
jp
mov
in
lock
bound
mov
xor
loop
mov
dec
adc
fildll
iret
scas
ds
aas
inc
sub
pop
push
dec
mov
add
xchg
insb
sahf
cltd
sbb
lret
or
mov
push
pushf
out
and
hlt
sbb
popa
das
imull
dec
cmp
or
stc
adcl
dec
test
cmp
ret
popl
sub
shlb
js
sbb
rorb
push
aas
jns
or
dec
mov
pop
inc
dec
adc
xchg
push
adc
jne
pop
fdiv
sahf
rcrb
lret
jbe
cwtl
int3
stos
mov
xlat
pop
rol
pop
pushf
repnz
stos
sbb
dec
lock
xlat
iret
mov
fstp
test
enter
inc
mov
sbb
out
in
arpl
div
div
xchg
bnd
mov
jecxz
out
daa
inc
call
push
inc
jecxz
cmp
sub
movb
mov
imul
mov
xor
push
add
push
adc
ret
xchg
cmp
addl
aam
enter
xor
pop
push
sbb
add
inc
outsl
or
push
sbb
sbb
test
sbb
mov
xor
inc
popf
cltd
call
add
fisubrl
xchg
inc
mov
scas
mov
ucomiss
in
es
add
xchg
repnz
pop
cltd
stos
call
mov
cmc
aaa
sbb
in
push
push
popa
fidivrs
out
push
inc
push
mov
sub
add
or
dec
mov
xchg
nop
add
fadd
inc
shlb
adc
add
add
pusha
or
add
add
adc
add
add
or
adcb
ret
mov
add
mov
mov
sub
inc
orb
adc
add
and
add
add
inc
add
inc
inc
adc
inc
and
push
add
adc
outsb
adc
add
inc
adc
inc
sub
and
add
add
arpl
xor
and
add
add
add
addb
int
adc
mov
mov
mov
dec
jo
xchg
add
add
push
stos
add
xor
and
cwtl
add
xchg
sbb
addb
addb
add
mov
adc
add
add
add
add
or
add
adc
test
mov
add
pusha
les
adc
orb
cwtl
adc
movsb
xchg
inc
mov
dec
xor
inc
inc
loopne
rol
add
sub
nop
or
add
add
add
xchg
inc
loopne
xchg
inc
mov
add
aam
or
adc
add
dec
add
inc
and
ja
xchg
adc
add
loopne
inc
mov
xor
push
rorb
nop
rolb
push
or
inc
rclb
jo
addb
inc
add
add
add
add
xchg
test
les
adc
addl
add
adc
sbb
add
loope
nop
cwtl
inc
arpl
mov
xchg
mov
push
nop
add
lock
inc
and
adc
add
xor
add
add
and
add
add
add
mov
andb
inc
mov
loope
adcb
push
shl
add
movsl
sub
andb
push
dec
inc
mov
bound
inc
mov
cmpsb
or
and
add
rolb
jo
push
movsb
fwait
add
mov
inc
loopne
inc
and
inc
add
inc
addb
add
add
add
adc
add
mov
xchg
inc
ret
and
add
add
and
add
lret
add
movsb
mov
xchg
mov
xor
add
add
adc
mov
push
addb
and
roll
inc
xorb
add
add
add
or
xor
push
xchg
addl
add
aam
or
add
mov
push
push
mov
add
loopne
dec
add
pop
add
adc
rcll
adc
and
xorb
rorb
addb
bound
or
add
add
add
addb
xchg
roll
jo
push
add
add
dec
add
add
or
andb
sbb
adc
xchg
or
add
add
sub
and
mov
adc
add
mov
addb
addb
push
add
add
popa
adcb
add
mov
gs
adc
add
pusha
nop
mov
adc
adc
mov
push
mov
lock
xorl
ret
and
inc
push
inc
adc
enter
inc
mov
add
add
add
inc
addb
imul
inc
clc
mov
inc
cmp
adc
push
nop
cltd
push
dec
test
addb
add
or
test
mov
subb
mov
dec
xor
and
les
add
add
add
addb
add
nop
int3
xchg
shlb
mov
add
add
clc
inc
stos
stos
cmpsl
bound
add
loopne
gs
sbbb
inc
or
loop
repnz
inc
je
inc
rolb
adc
mov
add
add
add
addb
roll
add
pusha
adc
xchg
sbbl
nop
nop
xchg
adc
rorb
adc
and
add
push
subb
test
xor
add
add
sbb
mov
test
adc
movsl
add
mov
cld
or
or
imul
orl
rclb
shr
and
mov
mov
in
lret
ret
shll
sbb
mov
push
icebp
push
shlb
add
or
add
add
addb
xor
jbe
mov
mov
insb
addl
xorl
orb
nop
push
dec
loopne
in
add
add
insb
pushf
adcb
arpl
inc
rcrb
add
add
and
fistps
stos
in
mov
xchg
adc
jl
mov
insb
pop
jo
shlb
xorb
loopne
xchg
mov
adc
ret
mov
call
xchg
inc
dec
push
add
loopne
xor
shlb
inc
inc
or
add
add
xchg
cmp
xchg
je
movsb
add
and
addl
andl
inc
cltd
es
sub
xchg
or
inc
or
or
lods
and
mov
orb
pop
add
rol
adc
add
and
fidivrl
lret
lods
sbb
rcrb
in
enter
mov
mov
xchg
push
and
divb
dec
mov
jecxz
xor
sub
add
rorb
enter
js
ret
loopne
imul
addb
nop
les
add
mov
adc
movsb
xor
pop
or
lods
and
imul
push
xchg
ljmp
test
mov
add
lret
dec
loop
jnp
add
mov
ljmp
rol
jmp
mov
enter
xchg
add
add
adc
add
in
or
sub
add
add
dec
dec
js
xor
add
in
pop
pop
push
push
xchg
mov
pop
pusha
jo
sbb
add
mov
in
pusha
enter
jo
call
add
adc
loopne
add
xchg
xor
adc
add
add
add
xor
adcb
nop
adc
add
add
and
mov
adc
add
xor
adcb
pop
add
xor
add
and
add
add
and
adc
jo
and
and
adc
inc
add
dec
xor
popa
adc
andb
inc
add
addl
push
add
dec
and
add
add
add
sub
inc
add
sub
adc
mov
add
add
add
dec
add
inc
add
add
adc
mov
add
add
adc
add
add
add
add
xor
js
or
add
add
add
and
mov
add
inc
add
dec
add
add
inc
add
add
test
add
inc
add
add
and
add
adc
sbb
add
and
add
sbb
add
add
arpl
push
sub
int3
and
or
add
add
or
inc
or
addb
bound
sbb
add
push
add
movsb
add
or
and
add
xorb
add
add
aaa
add
adc
add
add
xor
sbb
add
and
xchg
add
adc
add
adc
add
or
or
xor
mov
add
adc
adc
adc
adc
inc
adc
and
je
and
and
xor
and
and
and
xor
pusha
xor
dec
add
add
add
popf
out
mov
or
add
cli
xor
addb
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
rolb
add
add
and
add
pusha
add
add
add
add
add
add
add
add
inc
in
jmp
jns,pn
add
add
add
add
add
add
add
add
add
add
add
inc
addb
and
push
sbb
add
add
and
add
or
add
shlb
add
add
inc
jo
addl
dec
or
inc
pop
push
and
or
dec
xor
repz
ljmp
or
push
inc
dec
add
dec
inc
add
lock
sub
adc
and
add
add
xor
lock
inc
cs
rcrl
and
mul
xor
inc
cmp
xchg
adc
gs
sbbl
and
dec
mov
inc
sbb
cmp
add
mov
inc
dec
dec
add
popa
inc
cwtl
movsb
xor
add
adcl
add
lcall
add
cmp
sbb
inc
inc
xchg
adc
or
add
xchg
and
pop
xor
sbb
cwtl
mov
add
movsb
in
lret
and
inc
enter
js
subb
push
shlb
nop
add
add
loopne
or
cwtl
addl
mov
adc
adc
loopne
and
test
mov
mov
and
add
or
dec
mov
clc
and
mov
pushf
dec
nop
sbb
fs
loop
hlt
adcb
in
mov
add
jo
movsb
andb
mov
popa
sbb
loopne
mov
andb
xor
inc
dec
push
cmp
cmp
or
push
or
xor
and
xchg
mov
movsb
adc
add
xor
orb
add
mov
push
je
xor
lea
push
sub
add
lods
mov
push
add
inc
inc
nop
add
cmp
add
add
add
add
add
test
rorb
jl
add
test
nop
in
or
enter
jle
mov
mov
xor
loope
inc
aad
daa
mov
inc
andl
add
add
add
add
test
add
add
lock
mov
adcb
adc
add
jo
add
pop
xchg
add
cltd
push
shlb
addb
movsl
int3
add
lds
ss
and
test
lods
jo
out
hlt
add
add
testl
push
add
push
inc
sbb
popa
mov
adc
add
add
add
add
adc
and
adc
enter
pop
xor
add
and
add
mov
add
repz
add
xchg
add
add
add
add
add
or
dec
cmp
sbb
enter
pop
push
adc
test
test
adc
test
or
add
add
roll
push
add
jno
add
mov
add
add
add
add
push
and
test
add
adc
xor
and
adc
add
mov
mov
xor
mov
or
daa
add
add
xor
stc
and
add
add
mov
add
add
fadds
add
cmpsb
test
add
pop
add
hlt
adc
add
add
mov
add
push
add
xorb
add
rolb
inc
rolb
popl
dec
ret
adc
add
add
add
add
add
add
add
add
add
mov
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
xchg
add
or
add
xchg
xchg
add
adc
add
add
add
add
inc
inc
adc
and
sub
dec
add
dec
inc
popa
pusha
add
inc
and
adc
add
add
pusha
push
inc
and
add
and
add
push
or
adc
add
push
dec
xor
and
add
dec
push
adc
inc
or
inc
inc
and
add
add
jb
push
and
inc
inc
and
add
add
add
adc
adc
add
add
insb
or
add
add
add
or
sbb
movsb
mov
or
and
add
xor
shlb
sbbb
xor
and
or
inc
or
push
or
xchg
sub
les
and
or
int
add
rcrb
mov
rorb
adc
add
add
add
add
adc
or
add
or
es
add
inc
or
mov
add
addl
addb
add
or
xchg
adc
add
adcb
add
and
popf
add
add
addl
xor
cmpsb
adc
inc
and
push
add
push
adc
pop
or
inc
sub
icebp
sub
xchg
dec
or
add
fsubs
push
add
add
add
mov
adc
add
add
cmp
add
or
orb
adc
sub
add
inc
add
add
inc
add
push
or
add
lcall
xchg
xor
bound
leave
add
inc
adcl
add
and
adc
inc
add
pop
addb
mov
adc
mov
xchg
and
adc
sbb
add
or
add
and
or
adc
adc
popf
dec
mov
add
movsb
mov
add
adc
or
sbbl
push
add
add
mov
fs
or
sub
inc
movsb
add
shlb
add
or
addb
add
add
and
add
rolb
add
dec
and
inc
test
inc
or
or
push
add
adc
sbb
adc
add
addb
xchg
add
add
inc
dec
add
and
les
inc
add
add
addb
add
push
add
add
or
les
sub
add
and
adc
add
inc
add
add
test
adc
addb
adc
add
mov
mov
add
xor
ret
add
add
inc
and
andb
adc
adc
or
sub
inc
sbb
adc
into
dec
dec
sub
nop
and
inc
orb
pusha
add
add
xor
and
or
add
adc
inc
xor
and
xchg
sarl
push
aam
sbb
bound
les
pop
add
mov
adc
and
adc
pusha
insb
stos
add
pusha
ret
adc
xor
adc
add
inc
add
or
test
xor
sbb
es
dec
xor
or
xchg
addl
and
add
add
add
and
stos
test
adc
add
lret
addb
or
add
add
add
adc
mov
rorb
sub
and
add
dec
add
add
add
add
dec
movsb
add
add
add
xor
orl
xchg
adc
add
call
jae
adc
inc
push
push
and
and
orb
and
cwtl
add
add
push
sbb
sbb
cltd
add
add
adc
sub
add
lock
add
add
and
pop
les
add
add
xor
mov
add
adc
xchg
andb
push
and
add
or
addb
add
add
mov
cltd
add
add
add
addb
push
add
mov
or
add
push
add
stos
push
sbb
add
fmuls
mov
or
add
lret
or
and
in
add
addb
and
dec
les
add
int3
es
xchg
sub
jo
adc
add
push
rolb
cmp
bound
stos
inc
push
movsb
add
adc
addb
sbb
fisttpl
xchg
sbb
add
orb
and
inc
add
test
add
add
or
inc
or
or
xor
addb
orb
or
add
mov
popf
sub
rclb
mov
adc
add
pop
adc
add
dec
push
add
adc
add
and
shlb
addb
cmp
and
add
add
sub
mov
add
dec
add
adc
lret
bound
popf
rcrb
orb
mov
and
add
xor
ret
xchg
movsb
adc
inc
add
or
mov
add
test
cltd
addl
addb
add
xor
or
add
inc
mov
addb
add
adc
test
loopne
sbb
add
adcb
or
cmp
arpl
and
imul
push
push
dec
inc
orl
mov
rcrb
sti
add
or
adc
add
inc
and
test
and
and
mov
and
push
adc
add
inc
xor
add
imul
movb
or
add
add
and
lcall
and
add
les
pusha
xchg
and
add
or
add
add
xor
add
xor
xor
add
and
add
adc
add
adc
add
addb
push
jno
rorb
xchg
add
or
add
add
xor
add
adc
and
add
add
add
add
add
roll
sub
inc
or
addb
or
dec
dec
add
push
adc
or
add
mov
pushf
movsb
inc
inc
adc
or
adc
add
or
add
mov
add
add
pusha
or
adc
es
or
add
nop
sbb
and
add
or
sbb
cmp
adc
or
sub
push
cmp
sbb
add
xor
test
push
dec
adc
mov
add
adc
and
inc
pop
add
add
pusha
adc
mov
add
add
inc
or
or
inc
rorb
inc
add
add
dec
add
orb
subb
add
inc
or
or
sbb
add
add
addl
add
adc
pop
add
add
xchg
add
orb
or
and
or
add
push
push
and
sarb
and
add
mov
and
add
mov
addl
add
mov
and
add
and
or
sbb
or
shlb
inc
adc
add
add
test
add
and
add
or
jae
add
push
and
add
add
xchg
inc
and
and
dec
pop
insb
push
sbb
xor
popa
sub
dec
push
or
ret
orb
xor
add
push
mov
rclb
inc
and
inc
jo
add
inc
add
add
test
inc
sub
add
or
data16
add
and
inc
add
test
jge
dec
rclb
inc
fwait
dec
add
add
add
mov
movb
add
shl
addb
and
inc
add
add
test
inc
ret
add
or
xor
mov
or
add
inc
sbb
sub
inc
adcl
dec
inc
addb
cmp
addb
adc
sbb
dec
push
add
dec
addb
or
xor
add
mov
add
add
add
add
dec
adc
xchg
cmp
add
xor
or
xor
addl
sarb
or
rolb
jae
sbb
add
add
or
adc
and
and
add
xor
add
add
push
add
adc
dec
dec
sbb
rolb
add
rolb
add
add
dec
add
and
and
add
adc
add
push
xor
xor
add
or
push
loope
test
sub
inc
adc
push
and
inc
pop
mov
adc
add
adc
add
xor
or
add
inc
sub
add
lds
mov
and
loopne
inc
inc
or
inc
jo
push
adc
or
inc
and
inc
nop
sub
adc
inc
xor
adc
inc
or
push
add
or
add
and
orb
adc
aam
push
test
add
ss
adc
and
test
inc
lods
or
or
add
add
and
rorb
test
adc
add
and
sub
inc
movsb
add
addb
dec
or
add
sbb
add
pusha
inc
sub
inc
add
adc
and
xchg
lds
addb
push
adc
and
sub
mov
and
mov
sbb
adc
test
mov
test
dec
and
add
cmp
addl
arpl
add
stos
inc
xor
add
inc
insb
sbb
push
or
cmp
add
and
inc
xor
shlb
inc
movsb
aam
add
or
pusha
or
add
add
add
dec
or
mov
add
or
and
in
add
add
add
xchg
mov
adc
and
add
add
adc
add
rolb
add
mov
xchg
inc
adc
mov
xchg
add
subb
and
ret
push
mov
inc
or
adc
adc
mov
add
inc
or
add
inc
xorb
and
add
add
pushf
adc
addl
push
rorl
les
add
add
cs
and
arpl
add
dec
add
add
inc
add
add
adcl
test
adc
pushf
rcll
adcb
aam
or
orb
nop
je
addb
add
mov
inc
add
dec
xor
and
mov
popa
xchg
dec
add
xchg
inc
and
xor
mov
inc
add
adc
and
xor
adc
inc
add
adc
andl
adc
or
add
inc
loope
add
adc
inc
sbb
and
add
add
pusha
inc
add
jo
inc
rorl
xor
mov
mov
sub
adc
add
inc
add
xor
push
add
inc
test
hlt
andl
inc
add
push
inc
adcl
add
sub
add
jmp
addb
add
or
or
inc
and
add
dec
xor
and
add
rolb
and
mov
add
add
and
addb
inc
sbb
addl
in
lcall
or
xchg
and
or
add
push
dec
mov
adc
or
add
or
push
or
gs
inc
add
xchg
xchg
movsb
adc
add
addb
add
sbb
or
dec
add
rclb
or
add
adc
push
add
add
add
or
push
or
xchg
inc
adc
addl
xchg
add
adc
add
adc
and
inc
add
inc
addl
dec
and
adc
inc
add
addb
add
add
cmp
rolb
inc
add
sub
adc
add
inc
inc
add
lock
add
or
data16
add
inc
or
addb
ret
adc
or
add
add
mov
add
test
add
xchg
adc
pusha
push
test
add
and
inc
or
addl
inc
add
inc
add
test
sub
adc
test
xchg
ret
or
inc
aaa
xchg
or
xor
inc
or
xor
add
add
movsb
add
adc
add
add
arpl
sub
inc
ret
or
add
xor
or
cli
push
push
push
and
adc
add
add
add
inc
add
sub
sbb
add
add
dec
pushf
mov
xchg
or
subb
mov
add
pop
push
or
test
and
andb
add
push
sbb
orl
add
add
xor
add
mov
add
sbb
add
inc
inc
add
adc
push
and
add
addl
or
rolb
inc
xchg
add
or
dec
sbb
andb
add
and
add
add
movb
cmp
add
movsb
add
movsb
nop
add
add
add
and
sbb
in
xor
test
mov
add
inc
sub
mov
adc
addb
sbb
popl
inc
rorb
push
addb
inc
sbb
and
xchg
push
inc
or
adc
addb
xorb
popf
add
test
addb
popa
add
push
and
or
or
xor
add
cmp
cmp
pop
inc
add
adc
andl
push
add
lods
add
add
or
fs
loop
and
add
add
and
test
and
dec
or
es
add
push
add
add
test
rclb
addb
pusha
and
xchg
andl
cmp
push
push
orb
add
dec
and
add
mov
push
adc
add
and
dec
add
or
inc
dec
dec
push
add
add
orl
inc
pusha
or
adc
and
xchg
or
add
add
adc
add
and
inc
xchg
or
or
adcb
and
or
add
inc
or
xor
push
adc
adc
add
add
add
push
add
or
inc
shlb
add
sbbb
mov
or
adc
push
or
and
sbb
test
push
mov
cwtl
nop
pop
and
inc
add
inc
sub
pop
dec
add
push
andb
xchg
xchg
add
add
sub
add
add
sbbl
or
inc
rorb
or
add
dec
inc
inc
add
or
nop
mov
add
add
sub
ret
add
add
add
push
aam
or
inc
nop
and
adcl
test
add
sub
add
insb
or
adc
nop
inc
popa
addb
adc
add
sbb
add
push
adc
add
xor
add
inc
and
add
mov
adcb
add
sbb
add
dec
sub
add
inc
mov
add
push
mov
test
and
andb
sbb
out
or
add
rolb
cmp
inc
inc
and
and
inc
mov
add
andb
add
push
ret
test
or
add
add
or
push
adc
or
addb
add
add
cwtl
cmp
pusha
add
xorl
les
call
mov
add
mov
mov
adc
ret
xor
add
dec
and
push
xor
add
add
leave
ret
addl
add
add
add
or
add
add
add
cmpsl
movsl
add
mov
adc
add
addb
add
and
dec
and
or
addb
or
dec
or
xor
inc
add
and
sub
push
adc
or
js
xchg
add
or
add
sbb
shlb
adc
nop
add
inc
and
push
and
and
add
pop
mov
add
add
add
xor
inc
add
sbb
rolb
add
sub
xchg
nop
add
inc
and
out
bound
add
add
inc
popa
or
sbb
sub
cmp
adc
sbbl
adc
add
add
or
inc
sub
and
add
adcb
or
pop
or
add
les
and
pop
dec
xor
rclb
mov
leave
or
push
test
sub
rclb
push
add
jb
add
inc
inc
add
add
add
and
ret
or
dec
add
sub
es
push
inc
adc
orl
cwtl
cmp
adc
mov
xor
xchg
add
addb
addb
add
inc
adc
add
add
xor
xor
xchg
add
inc
push
inc
adcb
loopne
add
push
add
or
mov
mov
sub
adc
add
enter
ror
or
add
add
add
orb
inc
add
imul
add
push
xor
push
sbb
sbb
add
add
nop
adc
mov
add
dec
add
shll
mov
add
or
loopne
orb
inc
add
add
or
adc
xor
or
addb
add
add
mov
add
addb
add
pop
and
xchg
rolb
add
mov
loopne
adc
add
add
push
adc
push
sbb
or
add
add
or
inc
pop
or
cmp
add
test
or
cmp
add
inc
add
inc
rolb
ficoml
add
add
dec
shlb
add
nop
mov
inc
pop
add
adc
dec
dec
add
rolb
sbb
es
and
loopne
ret
adc
or
or
daa
lcall
rolb
add
inc
and
and
test
add
add
daa
and
adc
or
add
addb
pop
or
mov
les
or
es
push
adc
sbb
or
or
addb
and
add
cmp
es
mov
sbb
daa
or
xchg
add
add
or
sub
inc
enter
add
push
test
inc
jo
sub
add
inc
add
mov
adc
rolb
and
or
imul
mov
add
arpl
inc
add
rorl
mov
xor
mov
add
add
add
adc
or
mov
xorb
dec
or
add
inc
add
test
mov
mov
and
test
add
in
dec
dec
add
test
adc
inc
addb
add
addb
xchg
adc
add
add
and
mov
add
and
and
bound
pop
xor
dec
push
mov
invd
add
adc
inc
add
and
add
add
and
inc
roll
mov
xor
add
sbb
adc
add
add
push
add
add
add
push
sub
pop
mov
inc
push
adc
add
inc
add
add
add
add
add
add
add
add
push
add
add
pop
add
add
add
or
or
adc
add
or
adc
and
or
add
and
sub
xor
xor
or
adc
xor
adc
add
call
add
add
or
adc
add
and
adc
and
add
adc
xor
adc
adc
xor
add
and
add
adc
adc
and
add
adc
and
add
and
and
xor
adc
adc
xor
xor
add
or
adc
inc
add
add
add
add
adc
dec
les
adc
add
add
add
add
add
add
or
add
ljmp
add
add
add
add
add
add
add
add
add
and
inc
add
push
and
add
add
add
mov
addl
inc
jb
add
add
adc
sbb
and
sub
xor
adc
add
inc
add
dec
add
push
push
push
add
and
pusha
pusha
arpl
dec
push
adc
push
and
addl
add
adc
sbb
add
andb
and
add
dec
inc
adc
adc
add
dec
rcr
pusha
mov
andb
pusha
rcll
jge
add
add
add
add
add
add
add
add
add
or
or
mov
add
add
add
add
add
add
xor
add
add
add
and
add
add
add
adc
and
or
add
addl
add
push
and
and
adc
add
es
or
add
push
adc
cmp
add
or
inc
push
adc
push
add
add
fs
popaw
push
xor
xor
jo
add
addb
adcb
or
add
test
stos
xor
mov
add
rolb
ret
nop
push
rcl
push
pusha
inc
test
out
sub
add
and
add
add
add
add
inc
sbb
orl
adc
adc
addb
add
add
orl
add
mov
inc
inc
add
test
pusha
inc
add
add
sbb
add
sub
xor
add
push
add
xchg
dec
inc
xorl
add
adc
add
test
add
add
add
leave
add
rol
jno
add
inc
add
add
add
push
mov
add
inc
sub
or
lea
inc
add
test
and
test
xor
inc
add
dec
cmp
add
addb
add
inc
loope
adc
inc
add
dec
add
adc
push
cmp
addb
and
mov
inc
jo
xor
icebp
orb
add
dec
add
and
xor
add
dec
es
or
addb
sbb
dec
push
xor
pushf
sub
add
add
mov
add
adc
addb
inc
add
push
or
mov
sub
xor
or
xchg
add
inc
push
push
or
add
sub
add
bound
add
bound
fadds
adc
add
add
add
inc
add
rcrl
dec
and
add
inc
push
xor
or
adc
addl
and
and
add
inc
ret
and
adc
mov
xchg
mov
and
adc
xchg
sbb
and
repnz
add
or
add
push
inc
adcb
add
xchg
and
adc
xor
and
add
adc
bound
add
xor
mov
add
enter
add
add
and
addb
inc
sbb
addb
add
add
inc
add
and
sbb
add
and
add
cmp
add
inc
sbb
or
inc
imul
sbb
add
inc
add
les
rorb
invd
push
adc
imul
inc
add
sbb
inc
add
addr16
xchg
nop
push
add
enter
mov
inc
add
or
arpl
xor
shll
push
test
xchg
or
jo
and
or
addb
or
push
addb
add
add
dec
inc
addl
and
adc
inc
push
cwtl
inc
and
adc
inc
add
movb
inc
pusha
les
add
inc
sub
inc
loopne
test
and
add
inc
add
bound
bound
inc
add
add
add
pop
or
add
and
mov
xchg
xor
xor
inc
add
add
sbb
addb
add
add
loope
js
inc
inc
addl
adc
jne
rorb
add
orl
xor
inc
pusha
mov
inc
inc
and
and
add
add
mov
sub
and
inc
and
push
add
pop
je
addl
shlb
nop
addb
mov
add
add
loopne
arpl
inc
xchg
add
sbb
sub
sbb
fdivl
mov
xor
pusha
adc
mov
push
outsb
adc
mov
test
andb
and
sbb
adc
dec
and
add
in
rolb
inc
inc
adc
sbb
loopne
and
inc
and
add
add
mov
cmpsb
dec
push
add
sbb
inc
data16
test
addb
add
and
add
mov
inc
and
dec
add
add
js
inc
inc
adc
adc
adc
shrb
lock
xor
add
push
sbbl
add
inc
rclb
and
test
xchg
adcb
dec
enter
add
mov
or
inc
inc
xchg
fiadds
push
add
add
sbb
and
xor
xor
and
inc
xor
addb
push
push
addb
adc
nop
andl
add
and
inc
xchg
mov
addb
andb
add
mov
add
iret
stos
subb
add
mov
or
mov
nop
or
shlb
inc
inc
add
inc
add
add
add
pop
and
adc
adc
add
sub
add
add
xor
in
add
les
inc
and
adc
mov
ret
add
push
xor
add
add
mov
push
add
xchg
shrb
and
push
push
xchg
adc
add
or
xchg
add
add
lcall
add
dec
add
inc
dec
add
xchg
xor
cmpb
add
ret
push
inc
add
or
add
add
inc
ss
mov
lret
or
addl
rclb
pusha
add
add
and
inc
loopne
add
nop
add
pusha
adc
inc
adcb
inc
adc
adc
add
and
mov
add
add
add
ret
inc
add
add
addb
add
add
and
and
insb
inc
pusha
add
fadds
adc
add
mov
and
cmp
xchg
adc
xor
add
enter
inc
add
test
or
and
inc
cmp
mov
and
or
and
jno
and
cwtl
cwtl
sbb
inc
xor
popa
addb
add
sub
add
sbb
and
inc
inc
or
out
and
push
add
push
and
adcb
roll
adc
add
and
and
add
add
add
pusha
adc
or
and
inc
add
adc
adc
and
add
xchg
rolb
push
shlb
sub
adc
add
add
inc
dec
add
and
add
adc
rorl
sub
inc
add
xor
add
or
add
add
xor
or
sbb
adc
mov
add
or
inc
add
inc
push
andb
and
and
test
test
andb
and
add
es
adcl
addl
xor
cmp
add
adc
push
and
add
push
push
adc
dec
mov
add
addl
rolb
push
push
and
pop
add
add
or
inc
add
pusha
test
mov
or
adc
add
addl
inc
inc
add
add
push
adc
inc
or
adc
and
orl
inc
inc
inc
add
cmp
add
inc
les
push
push
add
add
ret
or
inc
add
add
and
adc
inc
inc
dec
inc
or
ret
sbbl
add
push
inc
addb
test
xor
add
addb
add
add
inc
add
add
add
add
or
adcb
adc
or
adc
sub
add
or
and
addl
add
or
inc
mov
and
adc
shlb
inc
pop
add
loopne
xchg
addl
inc
adc
add
add
add
rolb
and
rorb
and
addb
dec
add
or
sub
loopne
add
add
dec
add
inc
dec
pusha
or
addb
subb
inc
add
and
adc
add
subl
adcl
inc
adc
or
in
add
mov
and
add
inc
inc
or
es
add
inc
repnz
orb
and
add
add
push
sub
adcb
add
dec
inc
add
add
rcll
push
xorb
cmp
jo
and
mov
adc
mov
mov
pop
cmp
add
inc
and
add
hlt
cmpb
or
add
add
add
xchg
lret
adc
daa
mov
cwtl
adc
dec
mov
add
adc
orb
adc
lret
mov
rorb
add
add
sub
add
inc
shlb
cmp
add
mov
push
inc
addl
xor
adc
dec
or
sbb
adc
adc
adc
mov
xor
inc
pusha
and
push
pusha
or
bound
mov
and
pop
push
dec
add
dec
and
add
xchg
adc
xchg
and
or
add
mov
sbb
add
andl
inc
or
sbb
add
xchg
sub
or
enter
add
sbb
and
add
and
push
adc
xchg
addl
enter
add
sub
add
xchg
add
inc
xor
or
cmpsl
pop
adcb
add
lock
push
sub
add
xor
addl
adcb
push
add
push
push
adc
adc
add
and
or
lret
add
sub
add
rolb
add
inc
adc
cwtl
adc
add
xor
add
and
cmc
or
pop
mov
xor
and
add
add
cwtl
add
nop
adc
inc
add
adc
cmp
and
rol
add
add
dec
or
or
and
inc
or
mov
or
add
or
pusha
addb
and
xchg
sub
and
xor
adc
add
adc
or
mov
add
add
sub
enter
add
cmpsb
jp
adc
add
adcl
xor
and
test
inc
in
push
add
les
adc
push
inc
and
adcb
cmp
sbb
or
add
adcb
sub
add
xchg
inc
adc
sbb
and
sub
or
orl
add
or
pushf
add
add
sbbb
add
nop
pop
push
or
or
or
inc
adcb
nop
sbb
add
aad
dec
mov
fldl
sub
dec
test
xchg
jne
push
sbb
inc
lock
ret
stc
aas
das
xor
push
and
in
pop
cmp
test
mov
cli
cmp
popf
sub
or
mov
xor
movsl
imul
sbb
mov
sbb
xchg
xchg
xchg
jle
adc
lods
in
pop
inc
fcoms
cmp
incl
iret
cmp
js
enter
test
xor
sub
or
mov
loop
ja
mov
pop
pusha
arpl
or
daa
mov
ror
cmpsb
sub
clc
pop
jns
jne
push
bound
jecxz
mov
and
pop
or
ror
pop
lret
mov
andl
mov
dec
ljmp
pop
and
cmp
dec
jo
xlat
push
sub
add
sbb
je
ficomps
jnp
jle
lret
xchg
mov
or
fwait
test
sub
add
pop
or
scas
push
sbbb
lcall
das
cli
adc
rcrb
mov
lea
jg
inc
out
lock
sub
pushf
shrb
jle
and
add
xchg
mov
cmc
adc
cmpsb
inc
mov
test
sbb
xor
jecxz
jl
pop
mov
pop
ljmp
dec
or
and
jecxz
sbb
lods
jns
in
cmpsb
mov
add
cmp
sub
cld
fbstp
mov
pop
loopw
adc
out
lock
inc
in
and
push
or
out
in
call
in
xchg
or
cmp
into
les
outsl
mov
fadds
mov
dec
pop
mov
xchg
sbb
and
lea
shl
dec
std
jno
push
mov
sti
lea
mov
xor
xor
sub
test
cmpl
stos
std
jp
insb
xor
mov
rol
sti
xchg
push
sti
adc
int3
mov
jb
pop
roll
cld
int
stos
std
sbb
adc
sti
testb
mov
dec
and
xlat
push
rclb
dec
popa
enter
dec
add
and
sub
leave
cmp
ja
dec
sub
lret
fwait
in
loope
sub
dec
jecxz
cltd
into
ret
jmp
push
stc
push
imul
cli
xor
ja
mov
adc
rolb
push
pusha
xchg
mov
mov
lods
pop
add
dec
loopne
out
push
imul
pop
cmp
xlat
clc
xor
mov
or
cmp
cmpsl
jge
pop
pop
aaa
adc
stos
mov
push
test
jne
sbb
push
test
jmp
mov
dec
cmp
push
and
out
mov
cs
dec
stc
ds
ja
xchg
les
daa
sub
nop
je
arpl
and
lock
mov
lcall
ja
imul
pop
mov
or
test
pushf
test
pop
ret
mov
mov
ds
adc
xor
xor
adc
gs
in
lahf
lahf
push
repz
and
pxor
push
lret
lret
test
mov
cmp
pop
mov
outsl
out
arpl
inc
push
sub
mov
test
pop
mov
sub
pop
mov
in
std
adc
test
out
adc
mov
shlb
mov
mov
mov
rcll
and
arpl
cmpl
nop
xlat
sub
inc
pop
ret
mov
dec
testl
add
mov
mov
fstl
daa
into
fists
test
xchg
mov
jbe
pop
jp
mov
stos
imul
push
cli
adc
aaa
mov
movsb
insl
outsb
test
lret
cmp
int
mov
add
pop
jmp
add
or
mov
push
fnstcw
mov
push
mov
fisttpl
jae
addr16
mov
into
adc
mov
mov
dec
add
adc
int3
lds
addb
push
adc
pusha
adc
mov
cwtl
mov
lret
cmpb
cwtl
inc
or
fs
cs
push
xchg
jge
mov
sub
mov
ss
out
xor
sbb
pop
inc
in
std
int
pop
inc
cwtl
scas
cmp
sbb
pop
ror
dec
mov
nop
sarb
adc
addl
clc
lock
adc
iret
xchg
data16
repz
mov
loope
int3
xchg
les
inc
xchg
test
mov
call
mov
into
daa
dec
sub
int3
xchg
cld
mov
sub
es
sar
and
add
pop
fistpl
mov
pop
pop
add
add
pop
mov
lahf
stc
and
out
in
inc
mov
ljmp
sub
inc
lods
and
daa
icebp
mov
pop
push
ret
add
std
inc
out
jmp
xor
lods
and
add
divb
push
out
in
add
inc
fcmovnb
pop
movsl
sete
scas
mov
in
jnp
aas
fwait
movsb
xorl
pusha
mov
call
inc
or
fdivl
cli
pop
ret
aam
lahf
divb
mov
lcall
ds
movsb
push
pop
hlt
sbb
push
fistl
daa
adc
and
mov
inc
sbb
jne
pop
xchg
pop
es
mov
mov
cmp
dec
jg
sub
imul
nop
pop
out
or
push
xor
jae
and
xchg
rorl
daa
daa
std
mov
jae
fsubl
cmpsl
adc
cmp
test
scas
pop
adc
fstps
rcrb
lock
cwtl
sbbl
das
mov
stos
lea
push
sbb
and
jno
sbbl
mov
cmp
dec
out
jl
and
sub
cwtl
fldenv
xor
inc
testb
rolb
decb
fsubl
js
fisubs
mov
in
loop
bswap
and
loop
mov
aaa
pusha
mov
mov
cli
sbb
push
jbe
pop
mov
les
dec
outsb
pop
lock
jmp
aaa
test
ret
inc
jle
out
out
in
jne
add
xor
xor
mov
adc
call
inc
jmp
xchg
clc
into
lret
sub
int
pop
int3
imul
inc
scas
pop
test
cld
inc
test
into
add
pop
dec
aas
cmpsl
jle
sti
xchg
test
add
mov
ja
sbb
lods
mov
sub
daa
xlat
shll
ds
out
jl
popf
aas
sbb
imul
fwait
xchg
sub
inc
aam
inc
aad
mov
loopne
mov
mov
int3
jbe
fwait
icebp
scas
lock
cltd
or
rorl
out
out
pop
es
jp
fisubl
scas
cmp
lcall
or
xchg
clc
xchg
ljmp
mov
daa
cld
cmp
sub
xor
push
xor
gs
add
mov
add
mov
icebp
shlb
fcompl
lret
mov
rcrl
add
enter
imul
inc
jno
arpl
syscall
cmp
movsl
cwtl
imul
mov
std
jecxz
mov
les
inc
in
pop
lods
outsb
push
arpl
pusha
jo
xchg
pop
xor
stos
inc
sti
repz
push
iret
adcl
jne
xchg
popa
push
mov
mov
das
cmpsb
jg
add
subl
push
jecxz
js
outsl
xchg
push
xor
push
xlat
out
and
mov
sbbl
cmpb
push
dec
in
fcmovne
daa
stos
mov
cmc
sti
pusha
adcb
int3
push
addr16
xor
adc
mov
loope
and
mov
mov
and
out
pop
pushf
sbb
aaa
dec
js
in
pop
lea
enter
ret
dec
in
outsl
cmpsl
outsb
adc
xchg
pop
inc
fisubl
and
imul
mov
testb
jl
xlat
cs
dec
iret
or
cmp
aam
jo
jo
xchg
stos
out
lea
out
in
mov
loopne
cmpl
mov
push
out
cs
cli
loope
and
pop
xchg
hlt
jo
cmc
lret
sub
push
pop
cmpsl
out
pop
shll
dec
hlt
imul
cmp
mov
fmul
push
pushf
out
testb
int
jmp
and
xchg
imul
dec
fildl
fnstenv
xor
pop
fwait
sub
loope
xchg
out
icebp
inc
dec
xchg
movsl
jnp
or
dec
lahf
cltd
mov
mov
pop
sub
adc
movsb
inc
call
out
addr16
mov
xchg
sbb
lods
scas
shr
and
push
popa
mov
adc
jo
xor
arpl
pop
mov
jge
leave
fdivrl
mov
or
dec
repz
cmc
sbb
jge
repz
mov
js
aas
mov
jbe
push
mov
or
imul
in
testb
js
lcall
ret
mov
mov
lahf
push
mov
test
shll
or
les
add
js
in
xchg
inc
xlat
jo
inc
lret
jl
adc
jg
adc
leave
clc
adc
in
bound
mov
jmp
add
add
jns
mov
mov
push
loope
mov
hlt
fnstsw
jmp
sbb
cmp
movsb
push
pop
je
add
out
jp
ret
and
push
xor
lret
neg
outsb
push
adc
push
imul
inc
movsl
jns
sbb
ds
adc
cmc
scas
movsl
dec
mov
mov
sahf
inc
cli
jecxz
insb
movl
clc
jle
pop
jns
dec
cmpsl
add
pop
dec
pop
or
cmpsb
and
ret
in
popf
pop
inc
fwait
insb
mov
adc
into
mov
mov
push
outsb
adc
mov
movsb
cmpsb
je
ljmp
sub
aas
les
add
js
or
and
aad
pop
outsl
lods
xchg
push
adc
cmpsl
inc
cmp
arpl
ss
xor
iret
mov
or
sub
and
divl
mov
sbb
and
push
punpcklwd
add
xor
inc
and
int
cwtl
inc
aaa
jmp
fnstcw
or
or
test
addb
push
popa
adc
xchg
sahf
and
push
out
mov
imul
popf
out
pop
cmp
hlt
mov
repz
jmp
into
mov
xor
push
leave
movsl
push
jo
mov
cmc
popa
sub
fstl
add
lret
sbb
daa
inc
xchg
stos
sub
mov
adc
scas
popf
mov
movsl
in
popf
add
xchg
mov
std
jae
xor
and
sub
test
sbb
in
test
icebp
icebp
dec
xchg
mov
sbb
rcr
fcompl
movsl
loopne
out
jl
fcoms
mov
mov
pop
jbe
sarl
jae
fnstenv
imul
push
xchg
sub
stc
dec
push
adc
fmulp
in
dec
shl
ret
arpl
repnz
rorb
mov
lock
fs
mov
cmc
js
in
das
retw
cmp
lea
imul
andl
out
test
push
push
adc
dec
stc
aad
aaa
mov
stos
jmp
xor
dec
mov
je
xlat
arpl
sub
pop
xchg
jno
outsl
pop
sti
jle
lret
test
mov
jne
or
leave
sbb
jae
xor
stc
shll
pushf
push
pop
xchg
jecxz
pop
xchg
jmp
dec
pop
dec
out
jnp
or
or
out
inc
pop
or
int
ljmp
insl
jne
mov
jo
jo
xchg
shlb
imul
in
test
outsl
rol
jno
inc
out
and
cmp
sub
push
addl
sub
cmp
ret
les
xchg
sub
pop
cmpsl
scas
lret
nop
scas
shl
add
arpl
inc
add
ljmp
mov
int3
inc
stc
mov
into
inc
adc
mov
ret
fnstsw
mov
orb
dec
mov
jecxz,pt
add
push
or
cwtl
xchg
aam
idivb
fistps
das
sti
mov
jg
pop
sbb
ss
jmp
jbe
sub
movsb
xchg
or
pop
sbb
sbbl
mov
mov
add
sarb
cmp
out
ret
int3
cmovno
shll
push
hlt
mov
inc
or
adcl
fwait
daa
push
pop
incb
push
sub
rcl
sahf
jl
aas
inc
ljmp
fcmovbe
icebp
mov
aam
int
rcl
imul
jnp
bnd
cmp
orl
out
push
lea
lock
shlb
cmpsl
inc
mov
cwtl
pop
cmp
ret
mov
cmp
or
clc
mov
enter
cmpsb
xchg
roll
adc
inc
mov
aas
inc
cmp
or
push
push
sub
add
push
jae
inc
mov
mov
shll
mov
test
sti
inc
sarb
out
lock
xchg
sbb
sub
push
or
lret
sub
pop
lret
add
sub
sbb
push
add
ret
scas
rcl
inc
lcall
loope
dec
ret
test
das
inc
mov
sbb
sarl
pop
push
sahf
arpl
push
jns
shlb
mov
lret
xor
pop
push
xor
xchg
mov
xchg
in
les
push
mov
inc
or
das
je
lods
lods
xchg
sbb
mov
sub
sub
adc
mov
cli
insl
mov
mov
and
and
lds
insl
stos
cmc
mov
call
cmp
adc
mov
shl
das
negb
insb
inc
pushl
sbb
lea
rcrb
inc
bound
pusha
push
fcmovbe
pop
mov
jecxz
add
test
jp
jmp
cmp
dec
push
lock
lea
out
inc
mov
jle
jmp
int3
outsb
jbe
mov
mov
into
xchg
inc
icebp
das
xchg
inc
jae
inc
out
push
jmp
mov
scas
outsl
shlb
test
stos
push
pop
leave
js
repz
mov
stos
xor
mov
movsl
test
lds
aam
adc
loop
or
mov
fadds
adc
adc
fs
or
mov
les
movsl
jnp
mov
xchg
sbb
clc
mov
xor
in
lcall
mov
sub
insb
mov
or
xchg
xchg
jno
pop
std
mov
mov
shlb
test
cld
mov
push
hlt
mov
lods
stos
repz
pop
pusha
jbe
andb
push
test
call
xchg
lock
sbb
adc
aaa
test
punpckhwd
and
lods
cmpsl
out
sub
aaa
mov
aas
lds
mov
ss
sub
lret
mov
test
and
jb
sub
pop
lods
or
pushl
cmc
mov
aas
jnp
mov
outsb
in
xchg
ss
add
push
xlat
push
ja
out
popa
mov
or
sub
pop
push
sub
lahf
pop
jo
out
jmp
popf
add
movsb
or
and
scas
daa
pop
xorb
pop
sbbl
push
mov
leave
clc
mov
dec
jmp
dec
xchg
ret
repz
push
push
push
and
popa
lret
movsl
sub
jnp
push
dec
rcl
pushf
adc
das
jl
repz
sti
ret
loop
sbb
lds
daa
jg
mov
sar
mov
test
daa
dec
mov
in
insl
push
mov
icebp
lds
push
daa
stc
push
dec
repnz
inc
leave
push
inc
rolb
mov
cmpb
js
add
push
je
jmp
push
sarl
shlb
cmp
repz
int3
push
in
fstpt
sub
push
cmp
adc
sbb
adc
add
xchg
hlt
test
inc
lock
pop
loopne
sbb
mov
outsb
push
and
fcoms
or
insl
ss
je
or
push
mov
orb
add
mov
cmp
aas
xchg
imul
or
ror
adc
mov
outsl
lods
inc
jae
sbb
xchg
je
testl
dec
call
jbe
pop
inc
pop
mov
cs
mov
cmp
cltd
sbb
jl
mov
mov
pusha
cli
sub
push
lods
scas
pop
aad
daa
sbb
out
mov
sbb
jp
jne
je
int
addr16
outsl
mov
jno
sbb
xor
or
push
and
iret
aam
out
push
nop
push
dec
xor
in
rcr
insb
outsb
mov
scas
ds
movsb
sub
movsl
mov
roll
push
int
push
into
xchg
jmp
lret
adcb
jl
or
pop
mov
je
push
clc
das
push
or
addl
jl
cmp
cmp
test
dec
mov
sub
xchg
sub
jle
idivl
xor
shll
inc
and
daa
dec
lret
jb
das
cmpl
scas
cmpsl
sahf
loope
push
bound
pop
insl
xchg
jbe
pop
mov
bnd
jecxz
decb
jae
mov
or
lea
xchg
out
test
xor
add
or
xor
cmpsb
or
fs
imul
je
inc
mov
sbb
inc
fdivrs
rorb
jno
push
out
sbb
stc
pop
push
outsb
lds
ljmp
and
mov
mov
stos
add
pop
lcall
mov
lcall
call
mov
cld
ret
jecxz
andl
sbb
mov
xlat
jg
stos
push
sub
repz
out
test
mov
and
inc
inc
push
push
loopne
ds
add
mov
pop
mov
fwait
loopne
mov
lea
sbb
push
cwtl
cmp
inc
inc
outsb
push
sbb
sub
inc
sbb
fxch
push
test
jo
aaa
sub
and
add
add
addr16
jb
fs
in
cmp
push
mov
sub
les
sti
or
outsl
insl
pop
inc
push
lods
sbb
add
jp
es
ret
push
insb
mov
push
scas
mov
push
mov
mov
dec
dec
xchg
pminsw
jp
in
dec
mov
push
stc
sub
sub
aas
in
mov
test
pop
cltd
mov
mov
cmpb
divl
stos
jno
pop
addr16
xor
popa
out
jns
lods
push
fs
out
or
test
mov
dec
insb
push
in
push
or
or
dec
mov
dec
dec
mov
mull
pusha
or
testl
addr16
out
pop
and
push
addr16
aad
and
mov
loop
push
ret
test
movsl
testl
sub
das
pushf
js
mov
cmp
sbbl
lret
or
loopne
les
idivb
es
lahf
mov
adc
cltd
or
adc
test
nop
pop
jge
es
xlat
and
add
mov
sahf
jecxz
mov
push
mov
push
ljmp
sbb
xorb
lret
push
jle
dec
xor
les
dec
jo
in
xchg
xorl
or
and
adc
out
mov
flds
sahf
aas
lods
test
inc
cmc
and
ljmp
cmp
imul
lcall
mulb
sbb
ret
pop
dec
pop
cmpsb
cmpsl
aas
mov
push
js
popf
sub
les
add
push
lock
dec
lock
mov
or
rorb
and
outsl
add
ljmp
popf
xor
out
fbstp
cmp
push
mov
and
fstl
mov
inc
faddp
dec
std
xlat
roll
repnz
mov
cmp
and
xor
mov
sti
push
ja
ds
xor
push
js
insb
cmpsl
stc
mov
xchg
jmp
xchg
leave
and
push
adc
sbb
std
stc
ret
scas
and
pushf
adc
icebp
mov
lahf
sti
pop
stos
ffree
sub
adc
lcall
push
lcall
movsl
lods
orb
std
inc
addb
sahf
repnz
and
dec
lcall
mov
sbb
les
hlt
jg
mov
cwtl
test
ljmp
pop
testl
iret
jmp
jmp
pusha
dec
sub
cmc
mov
pop
jle
imul
and
mov
fstl
push
dec
popa
iret
movsb
pop
pushl
andb
mov
pop
mov
iret
int
addr16
xchg
rorl
cmpsl
cli
insl
cs
and
ljmp
ficoml
sahf
cmc
cmc
xchg
pop
xchg
jns
and
dec
sbb
lcall
les
mov
daa
insl
and
or
ret
or
mov
mov
cmp
jnp
jbe
gs
cltd
sahf
inc
mov
adc
sbb
lahf
push
mov
dec
iret
sti
jnp
xchg
cld
dec
xchg
lea
jns
cld
sub
fwait
dec
or
dec
inc
test
popa
dec
jecxz
fldcw
fistpll
adc
insl
mov
sbb
aam
mov
das
fiaddl
rcll
and
mov
int3
pop
mov
inc
sub
mov
leave
lcall
fldcw
adc
inc
xlat
adc
fcmove
jne
ret
mov
mov
scas
in
pop
fimuls
or
jnp
arpl
mov
pushf
mov
sub
xchg
shlb
cli
shll
sbb
mov
jle
and
cmp
dec
jae
pop
and
sub
pushf
jg
jl
jmp
cwtl
test
jmp
jl
shrb
cmp
lret
ds
lret
ljmp
lods
xlat
pop
loopne
popa
addr16
xchg
jne
mov
sti
rcrl
and
push
in
pop
mov
addr16
mov
lcall
pop
or
in
loop
testb
add
in
jg
and
mov
jne
jae
adc
xor
xor
mov
in
mov
mov
mov
fwait
mov
fs
dec
lret
mov
into
mov
outsl
repnz
or
xor
adc
sbb
dec
lock
out
sub
push
fisubl
out
sbb
push
sub
aas
add
and
inc
rcr
push
inc
inc
mov
pop
out
loopne
scas
jb
adc
pop
dec
inc
in
or
aas
std
or
rorl
fldcw
sbb
imul
sbb
mov
notb
out
dec
xlat
filds
dec
int3
dec
cmp
and
lods
in
aaa
data16
ljmp
or
shl
mov
sbb
in
dec
insl
mov
in
cmp
cmpsb
sbb
xchg
cmpsb
add
push
pop
fiadds
fwait
mov
push
fs
repz
pop
out
jo
arpl
sbbb
sbb
mov
sahf
cmp
arpl
std
adc
fwait
cmp
lahf
into
add
fadds
loopne
imul
pushf
stc
lahf
test
ja
mov
mov
jmp
int
push
repnz
data16
js
mov
rol
mov
icebp
aad
fdivs
or
stc
sbb
dec
fcompl
mov
xchg
rorb
lods
adc
push
ljmp
inc
pop
clc
xchg
push
xorl
fisubrl
std
cltd
xchg
pop
int3
cmp
adc
mov
jne
fs
push
cmp
enter
test
sub
pop
divb
adc
add
out
mov
test
push
inc
push
aaa
leave
add
pop
movsl
insl
cmpsl
ror
xchg
lahf
add
mov
dec
adc
test
into
add
scas
dec
loope
in
dec
xor
xchg
int
mov
call
xchg
xor
aam
mov
adc
dec
scas
out
adc
lcall
ret
sbb
xor
int
movsl
or
mov
negl
decb
xchg
jbe
andl
jbe
cmp
daa
int
test
dec
xchg
mov
cmpb
into
mov
out
xor
xchg
sub
push
xchg
sub
setp
in
lock
andl
and
js
mov
cs
ret
sub
xor
mov
and
ds
dec
mov
fildll
xor
cmp
xor
or
pop
in
test
aaa
inc
insb
sarb
rorb
cli
mov
aas
cmp
sub
adcb
dec
cmc
inc
cmp
testl
jo
mov
into
arpl
xlat
outsb
pop
inc
popf
nop
jne
and
mov
inc
dec
outsb
push
cmc
cmp
daa
fsubr
mov
addr16
mov
aam
std
hlt
push
jb
stc
pushf
sub
and
test
and
filds
pop
dec
mov
mull
in
jle
jns
jmp
xlat
movsl
inc
push
loope
scas
movsb
xor
xchg
out
mov
adc
add
loop
int3
call
test
movb
fstl
jno
sbb
in
push
and
pop
and
test
jp
adc
xchg
cmpsl
mov
mov
mov
lds
icebp
call
test
cmpsl
lcall
pushf
sti
idiv
fisubrl
int3
sti
and
inc
mov
stos
lods
repz
inc
leave
es
scas
sbb
mov
mov
sub
gs
sbb
out
jb
cmp
xchg
dec
lahf
js
xchg
pop
iret
sub
or
mov
repnz
or
cmp
adc
and
mov
and
cs
mov
and
mov
shlb
or
outsl
add
cli
rcrb
shl
push
lds
outsl
daa
xchg
je
out
cmp
adc
sub
adc
jbe
push
inc
into
imul
mov
les
mov
lret
xor
adc
sub
lds
cltd
mov
loope
fs
imul
jb
jb
mov
jle
jae
adc
mov
pop
or
jb
mov
xchg
js
enter
mov
dec
lods
cmpsb
cmp
jecxz
jl
in
adcl
fdivrl
xchg
and
les
jecxz
push
lea
sub
adc
out
adc
push
jne
xchg
addb
jb
pop
sahf
ljmp
sahf
rclb
out
mov
loop
and
sbb
cmpsl
pushf
aas
jbe
cmc
xor
fsts
sbb
or
fwait
mov
mov
pop
add
into
test
leave
cltd
shlb
fstl
xor
cwtl
dec
add
ja
or
fdivs
jl
lahf
movsl
addr16
cmp
call
cmpsb
xchg
dec
addb
or
lea
movsl
mov
ss
jp
int
push
or
xor
cltd
jo
xor
sbb
mov
repnz
add
je
popw
mov
push
mov
out
and
sub
insl
stos
sub
and
stos
andl
mov
outsl
sbb
mov
iret
dec
jle
jbe
xor
jl
mov
call
push
add
mov
lea
jne
out
loop
jns
ret
dec
mov
dec
out
xor
repnz
jl
jmp
mov
mov
xlat
dec
lods
es
jle,pt
sbb
int3
in
hlt
and
arpl
cmpsb
xchg
fildll
movsb
or
mov
jg
int3
cltd
enter
js
mov
sbb
sbb
sub
dec
push
movsb
rcr
cmp
ja
addr16
loope
push
ljmp
mov
adc
cmpl
insb
and
jge
and
imul
std
sub
test
adc
out
arpl
push
lods
rep
pop
mov
jp
xor
mul
xor
mov
adc
in
repz
jle
aam
mov
mov
roll
in
cld
push
into
xchg
aad
sarl
jecxz
fldenv
idivb
negb
jecxz
sub
lret
fucom
sbb
mov
add
psubd
shl
repnz
stc
das
cmp
icebp
std
sarl
add
push
adc
push
mov
rcrb
loope
pop
adc
lret
add
push
mov
fcomps
mov
adc
cmp
cmp
nop
scas
xor
cmp
or
or
into
xchg
mov
add
rcrb
fcmove
clc
outsb
pop
xchg
add
push
adc
and
xor
adc
ret
add
test
mov
into
jo
lock
jne
dec
and
les
in
rclb
xchg
mov
jnp
jg
push
push
enter
out
sub
clc
repnz
xor
movsl
insb
arpl
setp
adc
cmp
push
lock
jne
add
je
and
cmc
stos
add
into
testb
mov
push
jmp
enter
dec
push
and
fsubp
cmpsb
popf
push
test
xchg
cmpsl
sbb
ret
cmpsb
xor
jnp
mov
ficomps
and
loopne
mov
int3
dec
xchg
movsl
popa
mov
rolb
mov
and
add
shll
sbb
sub
dec
mov
mov
negb
ljmp
and
jecxz
sbb
pop
or
cltd
xor
test
xor
mov
xchg
addb
inc
push
adc
add
mov
cltd
xchg
dec
fstpl
mov
mov
leave
addr16
mov
pop
aad
addl
out
scas
mov
mov
pushf
inc
xchg
mov
push
in
push
leave
xorl
inc
pop
jecxz
adc
gs
mov
insb
push
imul
cmp
sbb
or
mov
orl
mov
mov
dec
bnd
mov
inc
call
jge
outsl
mov
movsb
pop
push
and
inc
xor
push
xor
pop
sahf
jb
push
mov
mov
jmp
test
test
push
lds
dec
out
xor
pop
cmc
push
mov
fwait
outsl
pop
aaa
push
ret
dec
inc
xor
jmp
jno
cmp
xchg
xchg
or
movsb
jo
mov
cltd
ss
mov
pop
cmp
std
fcmovbe
mov
push
sub
dec
pusha
flds
cltd
in
mov
pop
adc
fs
cmp
inc
xchg
stos
mov
out
mov
push
pop
or
js
push
frstor
fcmove
cmp
out
pop
jmp
mov
xchg
js
mov
ss
loope
lret
mov
bound
repnz
sbb
fldcw
cld
mov
or
or
popf
xchg
and
int3
shr
and
std
jle
mov
push
test
fisttpll
inc
sbb
xor
push
subb
out
xor
or
add
push
ds
mov
test
enter
mov
ret
movsl
inc
rorl
jbe
inc
mov
ss
leave
loope
shl
dec
iret
inc
nop
out
mov
mov
xchg
push
mov
fwait
cmp
mov
nop
sub
arpl
shlb
sarl
and
sub
out
or
imull
movsl
cltd
mov
xchg
imul
mov
stos
das
jb
lret
insb
mov
xchg
lahf
cwtl
cmp
and
clc
mov
enter
nop
xchg
mov
xchg
movsb
xor
cwtl
adc
insl
add
mov
inc
mov
sub
lahf
lret
pop
sbb
loop
add
data16
mov
jbe
jmp
cmp
jge
test
in
dec
lea
gs
mov
cmp
or
stos
push
xor
ret
repz
out
inc
mov
inc
data16
rcrl
jbe
mov
aaa
dec
outsl
inc
cmp
enter
test
mov
add
jecxz
out
xlat
mov
mov
lods
push
in
add
js
nop
out
in
arpl
das
mov
add
movsl
jl
stos
fwait
imul
aas
idiv
insl
push
int
mov
scas
mov
inc
push
push
in
jg
xchg
rolb
aas
sub
jbe
dec
adc
mov
js
insl
lret
and
sub
fldcw
sbb
jg
and
or
pop
ret
jo
cmp
push
sub
jae
ds
xchg
pushf
insl
add
xor
outsb
mov
sbb
jge
dec
pop
cmpl
mov
fiaddl
or
stos
out
imull
push
or
pop
adc
gs
movsb
sub
xchg
jno
cltd
adc
jbe
add
push
mov
mov
jbe
cmp
popa
cltd
cmp
xor
shlb
inc
inc
leave
cmpsl
ret
cmp
rcll
cltd
loop
cmp
movsb
stos
ret
sbb
or
repz
mov
pop
popa
cmpb
ror
jnp
lgs
dec
push
mov
subl
cmp
jl
arpl
orb
add
adc
mov
xchg
faddl
pushf
out
scas
rcll
mov
dec
rorl
shlb
call
call
loopne
push
adc
pop
iret
fsubs
mov
cmp
jmp
push
aas
xchg
mov
lods
jecxz
mov
sub
dec
xchg
jle
cltd
add
push
andl
out
es
pop
pop
daa
mov
sbbl
andl
cld
sbb
ficoms
dec
aad
push
sbb
add
and
and
sahf
jae
fldt
mov
add
cmp
add
and
icebp
jnp
popa
jmp
or
mov
test
xor
mov
xor
out
pop
popa
cmp
push
inc
iret
mov
jmp
cld
sbb
mov
repz
inc
and
adc
call
sbb
je
in
mov
inc
pusha
fcoms
or
mov
addb
mov
popa
mov
mov
rcrb
in
adc
addr16
jecxz
jp
mov
mov
sbb
out
rol
mov
or
mov
test
lea
orl
add
cwtl
mov
stc
mov
rcr
mov
or
jae
jno
fcoml
mov
orl
aam
jb
cmpsb
jno
shlb
out
fistl
xor
push
jecxz
mov
adc
fadd
mov
pop
jl
repz
sahf
loop
stc
mov
test
aas
fimuls
gs
mov
push
xor
not
clc
and
cpuid
dec
xor
mov
add
pop
shufps
test
stos
push
lcall
mov
outsl
insl
push
add
push
xchg
mov
inc
xor
out
int3
sub
xchg
sbb
arpl
xor
jp
sbb
sbb
sub
hlt
add
inc
loopne
arpl
adc
jl
push
xchg
stc
test
fstl
and
lods
scas
mov
aas
lahf
sub
popf
into
sbb
fistpl
test
pop
pop
sarb
mov
mov
adc
das
js
sar
cmp
push
mov
pop
cmpsl
and
scas
ds
inc
icebp
lods
outsb
repz
push
movsb
aad
mov
adc
mov
adc
push
cltd
clc
xchg
stos
cmpb
adc
sbbb
xor
int3
jb
push
nop
sub
mov
push
fwait
repz
pop
aad
sub
or
lds
push
add
xchg
lcall
and
pop
and
mov
xchg
andb
xor
fs
push
mov
jb
mov
ja
sub
fld
cmp
cli
mov
jo
jg
jl
and
push
pop
mov
xor
pop
icebp
pop
jmp
push
lret
fnstsw
sub
mov
mov
cmp
sahf
pop
incb
xchg
dec
leave
fstps
add
dec
inc
insb
adc
inc
popf
and
sub
int3
rcl
lret
dec
add
and
out
push
pop
inc
sub
mov
insl
jecxz
sub
push
loop
xor
lea
add
ret
aaa
jne
outsl
fildl
and
inc
faddl
mov
cmpsl
dec
inc
dec
clc
cld
push
adc
jbe,pt
ljmp
cs
repnz
daa
movsl
mov
in
pop
and
hlt
stos
imul
repz
rcll
or
fists
and
jb
in
test
cld
push
mov
test
jo
movsb
lahf
out
cmp
dec
je
pop
xor
add
int
rorb
inc
pusha
loop
push
ds
stos
xchg
xor
sub
mov
cld
aaa
pop
addb
fcoml
cmp
aaa
mov
pusha
fnsave
pop
push
ss
popa
jb
pop
mov
or
repnz
or
sbb
sub
sbb
sti
leave
ret
push
lcall
mov
pushf
push
lock
sub
add
mov
out
pop
inc
dec
xor
mov
push
dec
sub
call
adc
data16
int
pop
sub
add
cmpl
daa
ror
sti
xor
out
xor
iret
pop
loop
fimuls
push
jge
mov
das
inc
aad
fcoml
fistpll
push
pop
dec
inc
xor
mov
xchg
mov
das
sahf
mov
sti
mov
repz
movsb
xor
sub
popf
ja
popa
pop
dec
out
rolb
or
push
inc
add
addr16
jge
or
jnp
dec
test
stc
cltd
cwtl
push
in
and
jl
push
pushf
xor
arpl
scas
mov
lret
icebp
aaa
jge
les
add
test
scas
cs
out
out
addr16
cmp
hlt
add
xchg
inc
cmovo
mov
sub
dec
adc
sti
add
add
sub
in
cmp
dec
inc
xor
scas
in
jge
fcmovnb
and
jb
mov
mov
mov
xchg
push
pop
sti
fwait
add
dec
loope
loop
and
mov
mov
or
pop
jnp
or
pop
aam
lahf
outsl
les
inc
push
xchg
lret
mov
sbb
les
das
pop
movsl
xchg
push
cmpl
jle
test
enter
add
cwtl
lcall
ss
inc
sbb
into
imul
xor
orl
clc
pop
mov
enter
out
outsb
add
push
jne
mov
pop
scas
jbe
push
and
popl
xchg
les
scas
dec
xchg
mov
sub
iret
mov
cli
push
mov
insl
gs
shrb
sbb
nop
xchg
dec
leave
ljmp
cmpsb
xchg
cmpl
jl
mov
push
xor
push
jb
mov
push
pusha
mov
mov
mov
iret
insb
mov
roll
xor
out
mov
daa
add
sbb
movsb
push
sbb
mov
pop
out
mov
push
lret
sbb
and
jmp
mov
out
scas
mov
fsubr
sbb
es
cmpsl
addr16
or
test
repnz
mov
dec
pop
scas
adcl
stos
dec
xlat
mov
xor
test
in
cmpsl
shlb
and
mov
mov
jecxz
imul
ret
mul
ret
sub
ret
cmp
repnz
out
jg
divb
push
nop
test
fmull
mov
lret
unpcklps
into
pushf
adc
clc
negb
inc
jg
enter
xor
rcll
mov
add
pop
sbb
ret
fs
jle
mov
out
dec
dec
lret
mov
ret
add
xlat
jp
shlb
xchg
mov
xchg
add
mov
call
and
int3
mov
test
stos
test
les
cwtl
lds
sbb
clc
popfw
mov
xor
mov
bound
out
mov
xor
dec
test
or
push
adc
adc
lahf
test
mov
cld
rorl
pop
aaa
add
mov
jmp
adc
cmp
push
sbb
out
xchg
mov
test
mov
test
nop
lcall
addr16
lret
movsl
or
dec
in
or
ficompl
pusha
sub
add
into
push
ud1
and
cld
xor
mov
cmp
lcall
rcll
xchg
sti
shrb
les
nop
push
jns
inc
mov
mov
jbe
cmp
mov
xor
andl
xchg
testb
fwait
cmp
dec
sbb
iret
icebp
arpl
jnp
sbb
push
add
dec
cmp
xlat
cmp
jge
xor
into
popa
push
mov
rcl
jnp
aas
push
jecxz
inc
jno
ffree
mov
std
add
sbb
int
xchg
ja
imul
or
popf
adc
xchg
xchg
mov
cmpsl
xchg
push
push
xchg
std
imul
xchg
xchg
in
sub
adcl
mov
int3
sbb
sbb
jb
scas
sti
sub
in
lods
adc
negl
jbe
std
inc
setle
mov
das
sub
jbe
loop
mov
cld
fisubl
shrl
cltd
xor
xlat
icebp
out
adc
push
xor
cmp
clc
dec
int
dec
lcall
movsl
nop
ret
pop
mov
sub
mov
mov
pop
lods
dec
aaa
mov
jmp
pop
dec
loop
jbe
ret
dec
add
out
cmc
and
pop
imul
sahf
lods
inc
shll
and
aad
andb
cmc
push
les
fistps
iret
dec
mov
out
pop
add
daa
push
push
push
mov
enter
push
sbb
daa
push
push
fnstcw
push
sbb
jecxz
sub
mov
adc
jle
push
leave
shlb
xor
sbb
cmp
xchg
inc
lahf
ljmp
scas
sarb
jb
sub
inc
test
fs
pop
leave
subl
pop
xlat
xchg
leave
jo
imul
fcomp
movsl
pop
cwtl
xchg
aam
add
push
dec
mov
scas
rorl
rcrb
sub
mov
seto
adcl
clc
fbld
and
cmp
xchg
xor
add
arpl
loopne
mov
sbb
scas
in
lcall
sete
push
cmp
pop
pop
push
xchg
pop
cmp
push
adc
scas
push
xor
jmp
pop
arpl
pop
cmpsb
fldcw
lahf
mulb
addr16
fcmovnb
stos
xor
adc
dec
fs
and
pop
pop
push
lds
inc
xor
frstor
ds
sub
sbb
jge
sub
fst
pop
loope
sub
xor
push
pop
xchg
xor
in
scas
sbb
sbb
ljmp
popl
or
jecxz
xchg
push
inc
iret
or
repnz
cmp
mov
add
rcll
dec
mov
mov
sbb
push
sub
jmp
xchg
call
cmp
out
mov
and
jb
jl
dec
sbb
loop
inc
into
sar
mov
add
stc
mov
inc
das
mov
je
fwait
stos
mov
or
and
and
lret
idivb
aas
or
test
jo
dec
xchg
pop
cs
in
sub
sub
std
mov
lahf
cmpsb
pop
adc
mov
mov
lods
sbb
dec
mov
mov
arpl
xlat
jno
into
jmp
mov
jl
add
je
dec
sbb
insb
mov
inc
ljmp
sub
cmp
addr16
js
jp
fwait
enter
pop
or
outsl
test
std
pop
rcll
cmp
mov
sbb
jne
sub
loopne
int3
ljmp
imul
pushf
push
pop
mov
andl
jbe
cli
mov
inc
stc
pusha
push
rclb
cmp
cmp
xor
es
and
lret
mov
pop
cmpsl
sub
push
dec
jo
add
mov
negb
stc
repz
lret
lds
inc
cld
out
pushf
dec
ja
mov
cmp
fnstenv
mov
push
test
xchg
cmp
shlb
mov
xchg
repnz
push
in
dec
sub
and
pop
sbb
pop
cmp
ret
gs
sbb
mov
cmp
loope
pop
pop
in
js
xchg
insl
sub
cmp
stc
xor
mov
shr
shl
jbe
ficoms
or
adc
lock
sbb
loope
adc
stos
imul
pop
and
sub
shrl
fcomps
vandnps
push
mov
push
cld
xchg
xchg
outsl
das
fimull
inc
rcrb
mov
test
jl
out
mov
lods
mov
push
adc
fimull
jmp
icebp
test
push
fisubrs
xchg
das
out
sahf
or
out
test
iret
and
mov
imul
push
out
push
lahf
mov
lret
movsl
inc
lods
movhps
pop
roll
imul
sbb
adc
adcl
imul
mov
sub
xor
push
pop
icebp
fisttps
int
popf
and
rcrl
lods
imul
and
sahf
movsb
jmp
fsubs
lods
stc
jns
inc
les
jne
mov
repnz
fisubrs
xchg
xchg
test
test
mov
inc
das
xchg
sarl
pop
dec
ljmp
fsub
notb
jb
arpl
jae
outsl
leave
aam
outsb
incl
ljmp
mov
sbb
pop
and
in
incl
jmp
stos
shrb
xor
mov
jge
insl
orb
idivl
call
stos
mov
insb
add
push
dec
push
popf
sub
std
and
mov
into
shll
push
gs
imul
scas
dec
cli
ret
out
mov
lea
jbe
rcr
shll
adc
or
push
push
cli
mov
aam
call
popf
shlb
jo
push
inc
mov
lock
push
mov
cltd
repz
insl
das
mov
pop
sub
mov
movsb
out
push
js
inc
jmp
pop
sahf
sbb
cwtl
pop
aas
fsub
xchg
jecxz
out
cmp
scas
aas
mov
push
mov
je
movsb
cmp
xor
and
shrl
jle
jge
mov
jb
sub
inc
arpl
cmp
or
xchg
sbb
mov
movsl
sbb
pushf
fs
and
ss
pop
sbb
subl
popa
les
fwait
aam
xchg
stos
fcomps
push
scas
jge
push
cmpl
adc
mov
xchg
imul
or
jge
dec
jecxz
popf
push
in
in
xor
js
inc
jle
mov
shr
jmp
ret
inc
pop
out
repnz
push
pop
jbe
mov
arpl
in
bound
mov
xor
in
push
sub
add
dec
xchg
xchg
and
fs
adc
cwtl
pop
cmp
or
pop
add
stos
xchg
push
call
fcmove
mov
and
and
cmp
pop
push
lods
inc
xor
adc
sbb
dec
add
ret
dec
add
in
mov
and
fld
mov
jne
imul
shrd
jo
add
mov
es
push
fwait
cmpsl
mov
std
add
xor
test
sub
sbb
into
mov
cmp
repnz
repnz
dec
fldl
test
loope
jg
add
cmp
mov
mov
inc
add
movl
mov
push
cltd
imul
js
sti
cmp
fwait
aas
or
fsubrl
and
mov
pop
js
insl
push
add
movsb
hlt
divl
ja
nop
ficomps
pop
sub
lahf
aad
jp
loopne
push
pop
mov
push
sub
aaa
push
adc
pusha
cmc
sub
add
mov
les
iret
dec
xchg
add
shll
dec
lods
mov
add
push
in
cmp
mov
je
push
popl
sahf
lods
insb
inc
scas
jl
add
cld
push
fldcw
inc
xchg
mov
pop
xlat
insl
mov
loope
aam
ljmp
pop
jae
xchg
mov
xchg
mov
fstp
and
or
fbld
dec
lods
mov
das
fistps
xchg
push
sbb
hlt
jp
mov
in
lock
bound
mov
xor
loop
mov
dec
adc
fildll
iret
scas
ds
aas
inc
sub
pop
push
dec
mov
add
xchg
insb
sahf
cltd
sbb
lret
or
mov
push
pushf
out
and
hlt
sbb
popa
das
imull
dec
cmp
or
stc
adcl
dec
test
cmp
ret
popl
sub
shlb
js
sbb
rorb
push
aas
jns
or
dec
mov
pop
inc
dec
adc
xchg
push
adc
jne
pop
fdiv
sahf
rcrb
lret
jbe
cwtl
int3
stos
mov
xlat
pop
rol
pop
pushf
repnz
stos
sbb
dec
lock
xlat
iret
mov
fstp
test
enter
inc
mov
sbb
out
in
arpl
div
div
xchg
bnd
mov
jecxz
out
daa
inc
call
push
inc
jecxz
cmp
sub
movb
mov
imul
mov
xor
push
add
push
adc
ret
xchg
cmp
addl
aam
enter
xor
pop
push
sbb
add
inc
outsl
or
push
sbb
sbb
test
sbb
mov
xor
inc
popf
cltd
call
add
fisubrl
xchg
inc
mov
scas
mov
ucomiss
in
es
add
xchg
repnz
pop
cltd
stos
call
mov
cmc
aaa
sbb
in
push
push
popa
fidivrs
out
push
inc
push
mov
sub
add
or
dec
mov
xchg
nop
add
fadd
inc
shlb
adc
add
add
pusha
or
add
add
adc
add
add
or
adcb
ret
mov
add
mov
mov
sub
inc
orb
adc
add
and
add
add
inc
add
inc
inc
adc
inc
and
push
add
adc
outsb
adc
add
inc
adc
inc
sub
and
add
add
arpl
xor
and
add
add
add
addb
int
adc
mov
mov
mov
dec
jo
xchg
add
add
push
stos
add
xor
and
cwtl
add
xchg
sbb
addb
addb
add
mov
adc
add
add
add
add
or
add
adc
test
mov
add
pusha
les
adc
orb
cwtl
adc
movsb
xchg
inc
mov
dec
xor
inc
inc
loopne
rol
add
sub
nop
or
add
add
add
xchg
inc
loopne
xchg
inc
mov
add
aam
or
adc
add
dec
add
inc
and
ja
xchg
adc
add
loopne
inc
mov
xor
push
rorb
nop
rolb
push
or
inc
rclb
jo
addb
inc
add
add
add
add
xchg
test
les
adc
addl
add
adc
sbb
add
loope
nop
cwtl
inc
arpl
mov
xchg
mov
push
nop
add
lock
inc
and
adc
add
xor
add
add
and
add
add
add
mov
andb
inc
mov
loope
adcb
push
shl
add
movsl
sub
andb
push
dec
inc
mov
bound
inc
mov
cmpsb
or
and
add
rolb
jo
push
movsb
fwait
add
mov
inc
loopne
inc
and
inc
add
inc
addb
add
add
add
adc
add
mov
xchg
inc
ret
and
add
add
and
add
lret
add
movsb
mov
xchg
mov
xor
add
add
adc
mov
push
addb
and
roll
inc
xorb
add
add
add
or
xor
push
xchg
addl
add
aam
or
add
mov
push
push
mov
add
loopne
dec
add
pop
add
adc
rcll
adc
and
xorb
rorb
addb
bound
or
add
add
add
addb
xchg
roll
jo
push
add
add
dec
add
add
or
andb
sbb
adc
xchg
or
add
add
sub
and
mov
adc
add
mov
addb
addb
push
add
add
popa
adcb
add
mov
gs
adc
add
pusha
nop
mov
adc
adc
mov
push
mov
lock
xorl
ret
and
inc
push
inc
adc
enter
inc
mov
add
add
add
inc
addb
imul
inc
clc
mov
inc
cmp
adc
push
nop
cltd
push
dec
test
addb
add
or
test
mov
subb
mov
dec
xor
and
les
add
add
add
addb
add
nop
int3
xchg
shlb
mov
add
add
clc
inc
stos
stos
cmpsl
bound
add
loopne
gs
sbbb
inc
or
loop
repnz
inc
je
inc
rolb
adc
mov
add
add
add
addb
roll
add
pusha
adc
xchg
sbbl
nop
nop
xchg
adc
rorb
adc
and
add
push
subb
test
xor
add
add
sbb
mov
test
adc
movsl
add
mov
cld
or
or
imul
orl
rclb
shr
and
mov
mov
in
lret
ret
shll
sbb
mov
push
icebp
push
shlb
add
or
add
add
addb
xor
jbe
mov
mov
insb
addl
xorl
orb
nop
push
dec
loopne
in
add
add
insb
pushf
adcb
arpl
inc
rcrb
add
add
and
fistps
stos
in
mov
xchg
adc
jl
mov
insb
pop
jo
shlb
xorb
loopne
xchg
mov
adc
ret
mov
call
xchg
inc
dec
push
add
loopne
xor
shlb
inc
inc
or
add
add
xchg
cmp
xchg
je
movsb
add
and
addl
andl
inc
cltd
es
sub
xchg
or
inc
or
or
lods
and
mov
orb
pop
add
rol
adc
add
and
fidivrl
lret
lods
sbb
rcrb
in
enter
mov
mov
xchg
push
and
divb
dec
mov
jecxz
xor
sub
add
rorb
enter
js
ret
loopne
imul
addb
nop
les
add
mov
adc
movsb
xor
pop
or
lods
and
imul
push
xchg
ljmp
test
mov
add
lret
dec
loop
jnp
add
mov
ljmp
rol
jmp
mov
enter
xchg
add
add
adc
add
in
or
sub
add
add
dec
dec
js
xor
add
in
pop
pop
push
push
xchg
mov
pop
pusha
jo
sbb
add
mov
in
pusha
enter
jo
call
add
adc
loopne
add
xchg
xor
adc
add
add
add
xor
adcb
nop
adc
add
add
and
mov
adc
add
xor
adcb
pop
add
xor
add
and
add
add
and
adc
jo
and
and
adc
inc
add
dec
xor
popa
adc
andb
inc
add
addl
push
add
dec
and
add
add
add
sub
inc
add
sub
adc
mov
add
add
add
dec
add
inc
add
add
adc
mov
add
add
adc
add
add
add
add
xor
js
or
add
add
add
and
mov
add
inc
add
dec
add
add
inc
add
add
test
add
inc
add
add
and
add
adc
sbb
add
and
add
sbb
add
add
arpl
push
sub
int3
and
or
add
add
or
inc
or
addb
bound
sbb
add
push
add
movsb
add
or
and
add
xorb
add
add
aaa
add
adc
add
add
xor
sbb
add
and
xchg
add
adc
add
adc
add
or
or
xor
mov
add
adc
adc
adc
adc
inc
adc
and
je
and
and
xor
and
and
and
xor
pusha
xor
dec
add
add
add
popf
out
mov
or
add
cli
xor
addb
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
rolb
add
add
and
add
pusha
add
add
add
add
add
add
add
add
inc
in
jmp
jns,pn
add
add
add
add
add
add
add
add
add
add
add
inc
addb
and
push
sbb
add
add
and
add
or
add
shlb
add
add
inc
jo
addl
dec
or
inc
pop
push
and
or
dec
xor
repz
ljmp
or
push
inc
dec
add
dec
inc
add
lock
sub
adc
and
add
add
xor
lock
inc
cs
rcrl
and
mul
xor
inc
cmp
xchg
adc
gs
sbbl
and
dec
mov
inc
sbb
cmp
add
mov
inc
dec
dec
add
popa
inc
cwtl
movsb
xor
add
adcl
add
lcall
add
cmp
sbb
inc
inc
xchg
adc
or
add
xchg
and
pop
xor
sbb
cwtl
mov
add
movsb
in
lret
and
inc
enter
js
subb
push
shlb
nop
add
add
loopne
or
cwtl
addl
mov
adc
adc
loopne
and
test
mov
mov
and
add
or
dec
mov
clc
and
mov
pushf
dec
nop
sbb
fs
loop
hlt
adcb
in
mov
add
jo
movsb
andb
mov
popa
sbb
loopne
mov
andb
xor
inc
dec
push
cmp
cmp
or
push
or
xor
and
xchg
mov
movsb
adc
add
xor
orb
add
mov
push
je
xor
lea
push
sub
add
lods
mov
push
add
inc
inc
nop
add
cmp
add
add
add
add
add
test
rorb
jl
add
test
nop
in
or
enter
jle
mov
mov
xor
loope
inc
aad
daa
mov
inc
andl
add
add
add
add
test
add
add
lock
mov
adcb
adc
add
jo
add
pop
xchg
add
cltd
push
shlb
addb
movsl
int3
add
lds
ss
and
test
lods
jo
out
hlt
add
add
testl
push
add
push
inc
sbb
popa
mov
adc
add
add
add
add
adc
and
adc
enter
pop
xor
add
and
add
mov
add
repz
add
xchg
add
add
add
add
add
or
dec
cmp
sbb
enter
pop
push
adc
test
test
adc
test
or
add
add
roll
push
add
jno
add
mov
add
add
add
add
push
and
test
add
adc
xor
and
adc
add
mov
mov
xor
mov
or
daa
add
add
xor
stc
and
add
add
mov
add
add
fadds
add
cmpsb
test
add
pop
add
hlt
adc
add
add
mov
add
push
add
xorb
add
rolb
inc
rolb
popl
dec
ret
adc
add
add
add
add
add
add
add
add
add
mov
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
xchg
add
or
add
xchg
xchg
add
adc
add
add
add
add
inc
inc
adc
and
sub
dec
add
dec
inc
popa
pusha
add
inc
and
adc
add
add
pusha
push
inc
and
add
and
add
push
or
adc
add
push
dec
xor
and
add
dec
push
adc
inc
or
inc
inc
and
add
add
jb
push
and
inc
inc
and
add
add
add
adc
adc
add
add
insb
or
add
add
add
or
sbb
movsb
mov
or
and
add
xor
shlb
sbbb
xor
and
or
inc
or
push
or
xchg
sub
les
and
or
int
add
rcrb
mov
rorb
adc
add
add
add
add
adc
or
add
or
es
add
inc
or
mov
add
addl
addb
add
or
xchg
adc
add
adcb
add
and
popf
add
add
addl
xor
cmpsb
adc
inc
and
push
add
push
adc
pop
or
inc
sub
icebp
sub
xchg
dec
or
add
fsubs
push
add
add
add
mov
adc
add
add
cmp
add
or
orb
adc
sub
add
inc
add
add
inc
add
push
or
add
lcall
xchg
xor
bound
leave
add
inc
adcl
add
and
adc
inc
add
pop
addb
mov
adc
mov
xchg
and
adc
sbb
add
or
add
and
or
adc
adc
popf
dec
mov
add
movsb
mov
add
adc
or
sbbl
push
add
add
mov
fs
or
sub
inc
movsb
add
shlb
add
or
addb
add
add
and
add
rolb
add
dec
and
inc
test
inc
or
or
push
add
adc
sbb
adc
add
addb
xchg
add
add
inc
dec
add
and
les
inc
add
add
addb
add
push
add
add
or
les
sub
add
and
adc
add
inc
add
add
test
adc
addb
adc
add
mov
mov
add
xor
ret
add
add
inc
and
andb
adc
adc
or
sub
inc
sbb
adc
into
dec
dec
sub
nop
and
inc
orb
pusha
add
add
xor
and
or
add
adc
inc
xor
and
xchg
sarl
push
aam
sbb
bound
les
pop
add
mov
adc
and
adc
pusha
insb
stos
add
pusha
ret
adc
xor
adc
add
inc
add
or
test
xor
sbb
es
dec
xor
or
xchg
addl
and
add
add
add
and
stos
test
adc
add
lret
addb
or
add
add
add
adc
mov
rorb
sub
and
add
dec
add
add
add
add
dec
movsb
add
add
add
xor
orl
xchg
adc
add
call
jae
adc
inc
push
push
and
and
orb
and
cwtl
add
add
push
sbb
sbb
cltd
add
add
adc
sub
add
lock
add
add
and
pop
les
add
add
xor
mov
add
adc
xchg
andb
push
and
add
or
addb
add
add
mov
cltd
add
add
add
addb
push
add
mov
or
add
push
add
stos
push
sbb
add
fmuls
mov
or
add
lret
or
and
in
add
addb
and
dec
les
add
int3
es
xchg
sub
jo
adc
add
push
rolb
cmp
bound
stos
inc
push
movsb
add
adc
addb
sbb
fisttpl
xchg
sbb
add
orb
and
inc
add
test
add
add
or
inc
or
or
xor
addb
orb
or
add
mov
popf
sub
rclb
mov
adc
add
pop
adc
add
dec
push
add
adc
add
and
shlb
addb
cmp
and
add
add
sub
mov
add
dec
add
adc
lret
bound
popf
rcrb
orb
mov
and
add
xor
ret
xchg
movsb
adc
inc
add
or
mov
add
test
cltd
addl
addb
add
xor
or
add
inc
mov
addb
add
adc
test
loopne
sbb
add
adcb
or
cmp
arpl
and
imul
push
push
dec
inc
orl
mov
rcrb
sti
add
or
adc
add
inc
and
test
and
and
mov
and
push
adc
add
inc
xor
add
imul
movb
or
add
add
and
lcall
and
add
les
pusha
xchg
and
add
or
add
add
xor
add
xor
xor
add
and
add
adc
add
adc
add
addb
push
jno
rorb
xchg
add
or
add
add
xor
add
adc
and
add
add
add
add
add
roll
sub
inc
or
addb
or
dec
dec
add
push
adc
or
add
mov
pushf
movsb
inc
inc
adc
or
adc
add
or
add
mov
add
add
pusha
or
adc
es
or
add
nop
sbb
and
add
or
sbb
cmp
adc
or
sub
push
cmp
sbb
add
xor
test
push
dec
adc
mov
add
adc
and
inc
pop
add
add
pusha
adc
mov
add
add
inc
or
or
inc
rorb
inc
add
add
dec
add
orb
subb
add
inc
or
or
sbb
add
add
addl
add
adc
pop
add
add
xchg
add
orb
or
and
or
add
push
push
and
sarb
and
add
mov
and
add
mov
addl
add
mov
and
add
and
or
sbb
or
shlb
inc
adc
add
add
test
add
and
add
or
jae
add
push
and
add
add
xchg
inc
and
and
dec
pop
insb
push
sbb
xor
popa
sub
dec
push
or
ret
orb
xor
add
push
mov
rclb
inc
and
inc
jo
add
inc
add
add
test
inc
sub
add
or
data16
add
and
inc
add
test
jge
dec
rclb
inc
fwait
dec
add
add
add
mov
movb
add
shl
addb
and
inc
add
add
test
inc
ret
add
or
xor
mov
or
add
inc
sbb
sub
inc
adcl
dec
inc
addb
cmp
addb
adc
sbb
dec
push
add
dec
addb
or
xor
add
mov
add
add
add
add
dec
adc
xchg
cmp
add
xor
or
xor
addl
sarb
or
rolb
jae
sbb
add
add
or
adc
and
and
add
xor
add
add
push
add
adc
dec
dec
sbb
rolb
add
rolb
add
add
dec
add
and
and
add
adc
add
push
xor
xor
add
or
push
loope
test
sub
inc
adc
push
and
inc
pop
mov
adc
add
adc
add
xor
or
add
inc
sub
add
lds
mov
and
loopne
inc
inc
or
inc
jo
push
adc
or
inc
and
inc
nop
sub
adc
inc
xor
adc
inc
or
push
add
or
add
and
orb
adc
aam
push
test
add
ss
adc
and
test
inc
lods
or
or
add
add
and
rorb
test
adc
add
and
sub
inc
movsb
add
addb
dec
or
add
sbb
add
pusha
inc
sub
inc
add
adc
and
xchg
lds
addb
push
adc
and
sub
mov
and
mov
sbb
adc
test
mov
test
dec
and
add
cmp
addl
arpl
add
stos
inc
xor
add
inc
insb
sbb
push
or
cmp
add
and
inc
xor
shlb
inc
movsb
aam
add
or
pusha
or
add
add
add
dec
or
mov
add
or
and
in
add
add
add
xchg
mov
adc
and
add
add
adc
add
rolb
add
mov
xchg
inc
adc
mov
xchg
add
subb
and
ret
push
mov
inc
or
adc
adc
mov
add
inc
or
add
inc
xorb
and
add
add
pushf
adc
addl
push
rorl
les
add
add
cs
and
arpl
add
dec
add
add
inc
add
add
adcl
test
adc
pushf
rcll
adcb
aam
or
orb
nop
je
addb
add
mov
inc
add
dec
xor
and
mov
popa
xchg
dec
add
xchg
inc
and
xor
mov
inc
add
adc
and
xor
adc
inc
add
adc
andl
adc
or
add
inc
loope
add
adc
inc
sbb
and
add
add
pusha
inc
add
jo
inc
rorl
xor
mov
mov
sub
adc
add
inc
add
xor
push
add
inc
test
hlt
andl
inc
add
push
inc
adcl
add
sub
add
jmp
addb
add
or
or
inc
and
add
dec
xor
and
add
rolb
and
mov
add
add
and
addb
inc
sbb
addl
in
lcall
or
xchg
and
or
add
push
dec
mov
adc
or
add
or
push
or
gs
inc
add
xchg
xchg
movsb
adc
add
addb
add
sbb
or
dec
add
rclb
or
add
adc
push
add
add
add
or
push
or
xchg
inc
adc
addl
xchg
add
adc
add
adc
and
inc
add
inc
addl
dec
and
adc
inc
add
addb
add
add
cmp
rolb
inc
add
sub
adc
add
inc
inc
add
lock
add
or
data16
add
inc
or
addb
ret
adc
or
add
add
mov
add
test
add
xchg
adc
pusha
push
test
add
and
inc
or
addl
inc
add
inc
add
test
sub
adc
test
xchg
ret
or
inc
aaa
xchg
or
xor
inc
or
xor
add
add
movsb
add
adc
add
add
arpl
sub
inc
ret
or
add
xor
or
cli
push
push
push
and
adc
add
add
add
inc
add
sub
sbb
add
add
dec
pushf
mov
xchg
or
subb
mov
add
pop
push
or
test
and
andb
add
push
sbb
orl
add
add
xor
add
mov
add
sbb
add
inc
inc
add
adc
push
and
add
addl
or
rolb
inc
xchg
add
or
dec
sbb
andb
add
and
add
add
movb
cmp
add
movsb
add
movsb
nop
add
add
add
and
sbb
in
xor
test
mov
add
inc
sub
mov
adc
addb
sbb
popl
inc
rorb
push
addb
inc
sbb
and
xchg
push
inc
or
adc
addb
xorb
popf
add
test
addb
popa
add
push
and
or
or
xor
add
cmp
cmp
pop
inc
add
adc
andl
push
add
lods
add
add
or
fs
loop
and
add
add
and
test
and
dec
or
es
add
push
add
add
test
rclb
addb
pusha
and
xchg
andl
cmp
push
push
orb
add
dec
and
add
mov
push
adc
add
and
dec
add
or
inc
dec
dec
push
add
add
orl
inc
pusha
or
adc
and
xchg
or
add
add
adc
add
and
inc
xchg
or
or
adcb
and
or
add
inc
or
xor
push
adc
adc
add
add
add
push
add
or
inc
shlb
add
sbbb
mov
or
adc
push
or
and
sbb
test
push
mov
cwtl
nop
pop
and
inc
add
inc
sub
pop
dec
add
push
andb
xchg
xchg
add
add
sub
add
add
sbbl
or
inc
rorb
or
add
dec
inc
inc
add
or
nop
mov
add
add
sub
ret
add
add
add
push
aam
or
inc
nop
and
adcl
test
add
sub
add
insb
or
adc
nop
inc
popa
addb
adc
add
sbb
add
push
adc
add
xor
add
inc
and
add
mov
adcb
add
sbb
add
dec
sub
add
inc
mov
add
push
mov
test
and
andb
sbb
out
or
add
rolb
cmp
inc
inc
and
and
inc
mov
add
andb
add
push
ret
test
or
add
add
or
push
adc
or
addb
add
add
cwtl
cmp
pusha
add
xorl
les
call
mov
add
mov
mov
adc
ret
xor
add
dec
and
push
xor
add
add
leave
ret
addl
add
add
add
or
add
add
add
cmpsl
movsl
add
mov
adc
add
addb
add
and
dec
and
or
addb
or
dec
or
xor
inc
add
and
sub
push
adc
or
js
xchg
add
or
add
sbb
shlb
adc
nop
add
inc
and
push
and
and
add
pop
mov
add
add
add
xor
inc
add
sbb
rolb
add
sub
xchg
nop
add
inc
and
out
bound
add
add
inc
popa
or
sbb
sub
cmp
adc
sbbl
adc
add
add
or
inc
sub
and
add
adcb
or
pop
or
add
les
and
pop
dec
xor
rclb
mov
leave
or
push
test
sub
rclb
push
add
jb
add
inc
inc
add
add
add
and
ret
or
dec
add
sub
es
push
inc
adc
orl
cwtl
cmp
adc
mov
xor
xchg
add
addb
addb
add
inc
adc
add
add
xor
xor
xchg
add
inc
push
inc
adcb
loopne
add
push
add
or
mov
mov
sub
adc
add
enter
ror
or
add
add
add
orb
inc
add
imul
add
push
xor
push
sbb
sbb
add
add
nop
adc
mov
add
dec
add
shll
mov
add
or
loopne
orb
inc
add
add
or
adc
xor
or
addb
add
add
mov
add
addb
add
pop
and
xchg
rolb
add
mov
loopne
adc
add
add
push
adc
push
sbb
or
add
add
or
inc
pop
or
cmp
add
test
or
cmp
add
inc
add
inc
rolb
ficoml
add
add
dec
shlb
add
nop
mov
inc
pop
add
adc
dec
dec
add
rolb
sbb
es
and
loopne
ret
adc
or
or
daa
lcall
rolb
add
inc
and
and
test
add
add
daa
and
adc
or
add
addb
pop
or
mov
les
or
es
push
adc
sbb
or
or
addb
and
add
cmp
es
mov
sbb
daa
or
xchg
add
add
or
sub
inc
enter
add
push
test
inc
jo
sub
add
inc
add
mov
adc
rolb
and
or
imul
mov
add
arpl
inc
add
rorl
mov
xor
mov
add
add
add
adc
or
mov
xorb
dec
or
add
inc
add
test
mov
mov
and
test
add
in
dec
dec
add
test
adc
inc
addb
add
addb
xchg
adc
add
add
and
mov
add
and
and
bound
pop
xor
dec
push
mov
invd
add
adc
inc
add
and
add
add
and
inc
roll
mov
xor
add
sbb
adc
add
add
push
add
add
add
push
sub
pop
mov
inc
push
adc
add
inc
add
add
add
add
add
add
add
add
push
add
add
pop
add
add
add
or
or
adc
add
or
adc
and
or
add
and
sub
xor
xor
or
adc
xor
adc
add
call
add
add
or
adc
add
and
adc
and
add
adc
xor
adc
adc
xor
add
and
add
adc
adc
and
add
adc
and
add
and
and
xor
adc
adc
xor
xor
add
or
adc
inc
add
add
add
add
adc
dec
les
adc
add
add
add
add
add
add
or
add
ljmp
add
add
add
add
add
add
add
add
add
and
inc
add
push
and
add
add
add
mov
addl
inc
jb
add
add
adc
sbb
and
sub
xor
adc
add
inc
add
dec
add
push
push
push
add
and
pusha
pusha
arpl
dec
push
adc
push
and
addl
add
adc
sbb
add
andb
and
add
dec
inc
adc
adc
add
dec
rcr
pusha
mov
andb
pusha
rcll
jge
add
add
add
add
add
add
add
add
add
or
or
mov
add
add
add
add
add
add
xor
add
add
add
and
add
add
add
adc
and
or
add
addl
add
push
and
and
adc
add
es
or
add
push
adc
cmp
add
or
inc
push
adc
push
add
add
fs
popaw
push
xor
xor
jo
add
addb
adcb
or
add
test
stos
xor
mov
add
rolb
ret
nop
push
rcl
push
pusha
inc
test
out
sub
add
and
add
add
add
add
inc
sbb
orl
adc
adc
addb
add
add
orl
add
mov
inc
inc
add
test
pusha
inc
add
add
sbb
add
sub
xor
add
push
add
xchg
dec
inc
xorl
add
adc
add
test
add
add
add
leave
add
rol
jno
add
inc
add
add
add
push
mov
add
inc
sub
or
lea
inc
add
test
and
test
xor
inc
add
dec
cmp
add
addb
add
inc
loope
adc
inc
add
dec
add
adc
push
cmp
addb
and
mov
inc
jo
xor
icebp
orb
add
dec
add
and
xor
add
dec
es
or
addb
sbb
dec
push
xor
pushf
sub
add
add
mov
add
adc
addb
inc
add
push
or
mov
sub
xor
or
xchg
add
inc
push
push
or
add
sub
add
bound
add
bound
fadds
adc
add
add
add
inc
add
rcrl
dec
and
add
inc
push
xor
or
adc
addl
and
and
add
inc
ret
and
adc
mov
xchg
mov
and
adc
xchg
sbb
and
repnz
add
or
add
push
inc
adcb
add
xchg
and
adc
xor
and
add
adc
bound
add
xor
mov
add
enter
add
add
and
addb
inc
sbb
addb
add
add
inc
add
and
sbb
add
and
add
cmp
add
inc
sbb
or
inc
imul
sbb
add
inc
add
les
rorb
invd
push
adc
imul
inc
add
sbb
inc
add
addr16
xchg
nop
push
add
enter
mov
inc
add
or
arpl
xor
shll
push
test
xchg
or
jo
and
or
addb
or
push
addb
add
add
dec
inc
addl
and
adc
inc
push
cwtl
inc
and
adc
inc
add
movb
inc
pusha
les
add
inc
sub
inc
loopne
test
and
add
inc
add
bound
bound
inc
add
add
add
pop
or
add
and
mov
xchg
xor
xor
inc
add
add
sbb
addb
add
add
loope
js
inc
inc
addl
adc
jne
rorb
add
orl
xor
inc
pusha
mov
inc
inc
and
and
add
add
mov
sub
and
inc
and
push
add
pop
je
addl
shlb
nop
addb
mov
add
add
loopne
arpl
inc
xchg
add
sbb
sub
sbb
fdivl
mov
xor
pusha
adc
mov
push
outsb
adc
mov
test
andb
and
sbb
adc
dec
and
add
in
rolb
inc
inc
adc
sbb
loopne
and
inc
and
add
add
mov
cmpsb
dec
push
add
sbb
inc
data16
test
addb
add
and
add
mov
inc
and
dec
add
add
js
inc
inc
adc
adc
adc
shrb
lock
xor
add
push
sbbl
add
inc
rclb
and
test
xchg
adcb
dec
enter
add
mov
or
inc
inc
xchg
fiadds
push
add
add
sbb
and
xor
xor
and
inc
xor
addb
push
push
addb
adc
nop
andl
add
and
inc
xchg
mov
addb
andb
add
mov
add
iret
stos
subb
add
mov
or
mov
nop
or
shlb
inc
inc
add
inc
add
add
add
pop
and
adc
adc
add
sub
add
add
xor
in
add
les
inc
and
adc
mov
ret
add
push
xor
add
add
mov
push
add
xchg
shrb
and
push
push
xchg
adc
add
or
xchg
add
add
lcall
add
dec
add
inc
dec
add
xchg
xor
cmpb
add
ret
push
inc
add
or
add
add
inc
ss
mov
lret
or
addl
rclb
pusha
add
add
and
inc
loopne
add
nop
add
pusha
adc
inc
adcb
inc
adc
adc
add
and
mov
add
add
add
ret
inc
add
add
addb
add
add
and
and
insb
inc
pusha
add
fadds
adc
add
mov
and
cmp
xchg
adc
xor
add
enter
inc
add
test
or
and
inc
cmp
mov
and
or
and
jno
and
cwtl
cwtl
sbb
inc
xor
popa
addb
add
sub
add
sbb
and
inc
inc
or
out
and
push
add
push
and
adcb
roll
adc
add
and
and
add
add
add
pusha
adc
or
and
inc
add
adc
adc
and
add
xchg
rolb
push
shlb
sub
adc
add
add
inc
dec
add
and
add
adc
rorl
sub
inc
add
xor
add
or
add
add
xor
or
sbb
adc
mov
add
or
inc
add
inc
push
andb
and
and
test
test
andb
and
add
es
adcl
addl
xor
cmp
add
adc
push
and
add
push
push
adc
dec
mov
add
addl
rolb
push
push
and
pop
add
add
or
inc
add
pusha
test
mov
or
adc
add
addl
inc
inc
add
add
push
adc
inc
or
adc
and
orl
inc
inc
inc
add
cmp
add
inc
les
push
push
add
add
ret
or
inc
add
add
and
adc
inc
inc
dec
inc
or
ret
sbbl
add
push
inc
addb
test
xor
add
addb
add
add
inc
add
add
add
add
or
adcb
adc
or
adc
sub
add
or
and
addl
add
or
inc
mov
and
adc
shlb
inc
pop
add
loopne
xchg
addl
inc
adc
add
add
add
rolb
and
rorb
and
addb
dec
add
or
sub
loopne
add
add
dec
add
inc
dec
pusha
or
addb
subb
inc
add
and
adc
add
subl
adcl
inc
adc
or
in
add
mov
and
add
inc
inc
or
es
add
inc
repnz
orb
and
add
add
push
sub
adcb
add
dec
inc
add
add
rcll
push
xorb
cmp
jo
and
mov
adc
mov
mov
pop
cmp
add
inc
and
add
hlt
cmpb
or
add
add
add
xchg
lret
adc
daa
mov
cwtl
adc
dec
mov
add
adc
orb
adc
lret
mov
rorb
add
add
sub
add
inc
shlb
cmp
add
mov
push
inc
addl
xor
adc
dec
or
sbb
adc
adc
adc
mov
xor
inc
pusha
and
push
pusha
or
bound
mov
and
pop
push
dec
add
dec
and
add
xchg
adc
xchg
and
or
add
mov
sbb
add
andl
inc
or
sbb
add
xchg
sub
or
enter
add
sbb
and
add
and
push
adc
xchg
addl
enter
add
sub
add
xchg
add
inc
xor
or
cmpsl
pop
adcb
add
lock
push
sub
add
xor
addl
adcb
push
add
push
push
adc
adc
add
and
or
lret
add
sub
add
rolb
add
inc
adc
cwtl
adc
add
xor
add
and
cmc
or
pop
mov
xor
and
add
add
cwtl
add
nop
adc
inc
add
adc
cmp
and
rol
add
add
dec
or
or
and
inc
or
mov
or
add
or
pusha
addb
and
xchg
sub
and
xor
adc
add
adc
or
mov
add
add
sub
enter
add
cmpsb
jp
adc
add
adcl
xor
and
test
inc
in
push
add
les
adc
push
inc
and
adcb
cmp
sbb
or
add
adcb
sub
add
xchg
inc
adc
sbb
and
sub
or
orl
add
or
pushf
add
add
sbbb
add
nop
pop
push
or
or
or
inc
adcb
nop
adc
inc
adcb
inc
and
test
sub
inc
inc
pusha
sub
add
inc
or
xchg
add
or
add
adc
ljmp
or
sbb
or
adc
adcb
xor
add
push
nop
adc
mov
add
add
sbb
sub
or
inc
addb
adc
xor
lgdtl
dec
inc
push
and
push
push
rcll
or
les
and
ret
mov
addl
add
rclb
rorl
and
mov
and
movsl
add
push
adc
add
or
add
mov
add
add
or
enter
addb
push
add
add
add
das
inc
in
les
push
or
add
adc
sub
push
or
or
adc
mov
leave
adc
adc
mov
ret
inc
add
add
add
push
adc
inc
adc
bound
sub
lret
ret
add
sub
add
addl
add
loopne
add
xchg
pusha
mov
add
inc
adc
add
add
add
xor
test
push
adc
add
addb
add
add
or
adc
adc
jo
or
inc
add
adc
or
inc
add
push
add
add
pop
mov
and
popa
add
push
inc
add
mov
rolb
add
inc
add
bound
inc
adc
add
roll
addl
adc
and
add
sub
addb
add
lcall
or
adc
add
or
and
add
push
or
pop
and
adc
push
or
and
mov
sbb
and
inc
dec
mov
rorb
mov
mov
add
inc
add
inc
addl
iret
sbb
add
add
leave
and
add
loop
add
test
jno
leave
add
dec
xor
add
inc
adc
adcb
rclb
add
push
or
dec
and
adc
sub
xor
adc
and
xchg
addb
ror
adc
sub
adc
and
test
or
and
inc
adc
inc
inc
xor
out
cwtl
sbb
nop
and
sahf
add
adc
or
inc
cmp
adc
sbb
and
add
addb
or
add
pusha
inc
cltd
orb
popa
add
add
inc
inc
xor
jo
add
loopne
dec
dec
adc
and
andb
or
cwtl
mov
orb
sbb
add
dec
add
push
sbb
add
or
add
loope
adcb
adc
fwait
addl
rclb
adcb
add
rorb
dec
dec
and
jecxz
sub
add
add
and
or
bound
xor
cmp
add
inc
add
bound
and
or
stos
or
add
inc
or
test
jle
add
or
shlb
add
addb
ret
or
dec
and
or
andb
add
sbb
xor
or
test
push
or
fs
in
dec
inc
adcb
add
jo
ret
adc
add
popa
pusha
sbb
inc
xchg
or
add
and
push
and
nop
or
andb
inc
addb
add
or
add
ret
dec
add
and
and
add
adc
sub
icebp
mov
inc
popa
add
add
sbb
or
orb
push
xor
xorb
xchg
mov
add
xor
sub
inc
mov
add
and
bound
mov
push
add
add
mov
add
xchg
add
add
add
inc
mov
enter
and
pop
or
sbb
sub
inc
add
rclb
inc
add
dec
sub
dec
inc
push
and
pusha
add
add
inc
add
add
or
inc
dec
push
cmp
pop
adc
mov
add
adc
addb
inc
fs
addb
mov
adcl
add
add
enter
rcll
and
add
add
lret
inc
or
adc
add
pusha
add
sub
add
add
xor
add
add
xor
add
add
dec
dec
mov
add
inc
add
add
les
add
xchg
adc
cmpsb
adcb
or
loop
jo
add
inc
shlb
adc
das
inc
push
and
add
inc
test
or
xchg
inc
or
add
es
rolb
and
inc
or
addb
sub
dec
sub
add
jo
add
or
push
test
pop
lods
daa
add
adc
jmp
add
push
and
add
xor
add
xor
rorl
adc
xor
sub
adc
inc
inc
inc
sbb
je
push
or
enter
add
dec
and
xor
ret
adc
add
addl
mov
jmp
xor
and
test
adc
add
xor
cmp
addb
add
adc
inc
mov
add
rolb
add
adc
dec
add
sbb
adc
sbb
xor
add
or
add
add
add
add
or
addb
inc
add
sub
pop
loop
inc
add
or
inc
add
sbb
xchg
add
add
cmp
mov
or
fs
add
add
push
andb
cwtl
add
or
arpl
pop
inc
dec
cmp
dec
add
loopne
test
bound
add
addl
popa
inc
dec
add
shlb
test
add
loop
inc
xor
sbb
mov
sbb
and
or
add
inc
pusha
ret
insb
add
cwtl
adc
lret
dec
add
push
add
add
inc
or
inc
addb
or
orl
nop
dec
addb
adc
add
pop
add
inc
add
xor
or
and
xchg
add
nop
adcb
and
add
les
inc
add
mov
cwtl
add
or
or
inc
and
adc
jo
and
sbb
nop
and
adc
inc
add
inc
addl
dec
xor
xor
inc
adc
test
addl
add
xchg
add
jb
sbb
or
xor
int3
or
push
or
add
dec
insb
and
xor
or
shrb
mov
and
or
xor
test
shr
add
xor
push
adc
inc
dec
pop
and
add
jo
and
add
dec
or
dec
mov
adc
mov
pop
add
adc
add
add
and
add
mov
inc
sub
add
adc
xor
and
jb
inc
addb
dec
andl
xchg
or
or
call
mov
sub
add
and
add
push
add
rolb
add
push
and
andb
repnz
nop
push
dec
xchg
enter
add
jmp
inc
sub
movsb
push
adc
add
nop
or
add
add
shrb
adc
mov
or
add
addb
or
mov
and
or
mov
inc
and
or
push
add
addb
or
addb
or
adc
sub
clc
add
add
push
test
add
sbb
xor
add
bound
add
nop
add
add
enter
or
inc
mov
or
test
push
fsts
or
adc
sbb
mov
and
xor
adc
add
inc
andl
add
add
add
mov
push
add
add
push
and
faddl
and
adc
mov
sbb
add
add
test
add
and
xor
add
or
or
sahf
adc
sbb
add
add
xor
add
add
mov
and
and
add
push
or
add
add
bound
add
add
orl
test
xchg
inc
inc
inc
add
addb
sub
add
add
pop
and
inc
pusha
add
add
xchg
and
addb
subb
roll
rorb
or
inc
and
ret
add
adc
add
rolb
lahf
ret
xor
add
and
test
add
adc
sub
add
repnz
add
je
add
dec
pusha
jo
inc
add
inc
mov
or
add
enter
addb
pop
loope
and
lods
outsb
push
dec
pushf
fsts
insb
shlb
mov
test
dec
mov
inc
cmp
lret
bnd
je
test
jno
mov
cmp
push
mov
out
adc
mov
or
cmp
and
jbe
or
adc
adc
inc
cmpsb
jae
sbb
push
es
jl
ja
iret
mov
ljmp
incb
push
adc
bound
leave
mov
and
int3
ljmp
pop
jne
jbe
into
loopne
and
mov
jnp
fstpt
push
daa
cmp
lea
jns
ror
push
push
les
mov
out
jle
xchg
push
aad
sbb
insb
fldl
mov
inc
mov
std
mov
xchg
xchg
test
or
cld
xor
sbb
jle
lods
and
xchg
pop
pop
stc
jo
es
sti
sbb
sub
repz
or
pop
jbe
pop
mov
into
fiaddl
cmpsb
push
push
mov
stos
sbbb
test
sub
xchg
stc
ret
loope
out
leave
mov
scas
xlat
mov
sub
and
mov
jl
cld
mov
mov
lods
dec
movntps
sbb
ja
and
push
test
xor
mov
loope
repz
enter
xchg
popf
sti
cmc
sub
jmp
mov
fistps
mov
and
xlat
jo
adc
or
aas
and
sbb
aad
sub
jle
loopne
dec
test
in
das
in
jne
adc
aas
rcr
lret
push
pop
mov
cmp
cmp
loope
pop
ja
xchg
ja
out
mov
clc
stc
loope
mov
orw
repz
arpl
lsl
adc
scas
inc
dec
mov
pop
shll
sarb
push
add
fistps
jg
fcmovnbe
xor
cmp
adc
mov
or
fsubl
fmuls
iret
ss
xor
mov
cmp
add
or
xlat
enter
mulb
jmp
icebp
cwtl
in
stos
out
cmpsb
or
or
sub
das
orl
int
loop
jmp
dec
or
test
js
xchg
test
insl
pop
mov
pop
inc
ljmp
add
push
pop
negb
push
dec
inc
lock
lcall
dec
cld
adc
xchg
lods
sub
mov
sbb
mov
and
repz
mov
inc
insl
inc
ret
loopne
leave
mov
sbb
jns
mov
add
or
mov
daa
js
or
aad
dec
push
sub
lret
mov
in
loopne
lods
insb
inc
add
ss
jg
addr16
jae
repnz
mov
insl
leave
icebp
or
into
fs
pop
or
pop
cmp
adc
sahf
push
add
std
inc
stc
lock
pusha
hlt
jne
or
addr16
loope
pop
sub
hlt
inc
movsl
push
push
lods
sub
cmp
mov
or
cmc
xchg
pushl
enter
adcl
inc
fists
and
sbb
fimuls
push
dec
bnd
roll
inc
pushf
arpl
ljmp
lea
sbb
adcl
aaa
cmp
lret
push
setl
ret
paddusw
lcall
int
in
jns
test
mov
orb
inc
add
mov
push
gs
arpl
inc
xchg
sbb
sub
dec
movsb
test
pop
xchg
cs
aam
outsb
xor
or
and
lret
subb
pushf
push
je
dec
or
mov
inc
stos
rorl
insl
aaa
jb
cltd
inc
and
xchg
adc
sub
movsl
movb
les
adcb
mov
dec
pop
mov
mov
out
adc
fs
push
mov
adc
lahf
mov
out
shlb
mul
es
xchg
fnstsw
adc
scas
scas
pop
cltd
mov
cmpb
jl
add
mov
mov
dec
pop
pop
fsubr
cltd
dec
stos
push
push
pop
mov
inc
ljmp
xchg
test
outsl
push
rcl
or
cld
dec
push
dec
pop
inc
mov
xor
mov
testl
loop
xor
mov
aam
testl
xlat
imul
sahf
int
not
dec
xchg
popf
dec
fcmovnb
lret
rclb
cmp
stos
int
into
cmpsl
daa
call
sar
scas
outsl
add
cmp
xchg
pop
push
aad
mov
xor
dec
bound
dec
aaa
cmp
or
das
iret
inc
inc
cmp
lods
jl
or
pop
cmp
clc
sbb
mov
arpl
push
nop
shlb
or
sbb
sbb
fcomps
jp
xor
mov
cmc
mov
mov
int
jno
test
xor
adc
imul
adc
daa
enter
enter
aad
pop
lcall
mov
ja
mov
outsb
mov
mov
cmp
and
aas
repnz
pop
mov
fdivl
dec
ja
out
psadbw
inc
cmp
ja
imull
ret
cli
sbb
jne
push
pop
push
out
inc
mov
iret
adc
ds
and
cld
popa
bound
sub
pusha
fisubrs
pop
jg
pusha
sub
fstpl
sub
adc
daa
ret
in
ljmp
stc
adc
xchg
repnz
pop
or
add
mov
mov
cs
add
push
fwait
pop
call
or
lret
dec
xchg
loope
insl
testl
std
dec
sbb
test
push
sbb
shlb
push
push
les
jns
dec
adc
add
andb
inc
inc
popf
jae
ja
shrl
pop
pop
push
jp
or
or
xchg
xchg
push
fsubrp
jno
pop
pushf
int3
cmpsb
pop
jae,pt
lock
mull
xchg
ds
test
sbb
lock
leave
arpl
dec
inc
outsb
fwait
mov
lcall
mov
fistl
mov
ja
ja
dec
inc
pop
cmp
imull
in
or
outsb
pusha
inc
mov
loope
mov
jae
cltd
inc
in
mov
or
orl
xor
dec
pop
inc
fcoms
add
repz
fiadds
data16
jmp
or
mov
pop
ss
pusha
jne
jg
or
xchg
or
xchg
imul
in
lret
xchg
adc
mov
xor
inc
xor
pushw
cmc
inc
aad
addr16
movsb
xchg
push
inc
mov
or
xchg
xor
test
imul
enter
push
sub
aas
mov
sbb
pop
mov
fiaddl
dec
xchg
dec
pop
rclb
stos
cmp
sti
lea
inc
cmpsl
in
outsl
pop
mov
sub
fdivs
cmp
sbb
jmp
shlb
imulb
inc
and
shr
jne
ss
mov
sbb
dec
cmpsl
out
cmp
stos
outsb
das
iret
pop
dec
push
jmp
fisttpll
mov
mov
mov
cmc
out
test
add
push
inc
jne
outsb
push
adc
jmp
cmp
or
pushf
jnp
mov
in
mov
iret
cmp
dec
into
inc
lahf
mov
jbe
lds
out
rolb
scas
xor
repnz
cli
mov
insl
inc
push
scas
das
mov
jns
in
arpl
mov
fstps
xor
lods
add
push
movsb
pop
aas
lds
and
int
in
mov
xchg
subl
xchg
leave
adc
pop
pop
mov
sub
sbb
pop
sub
lret
xor
stc
ds
sti
dec
das
cmp
pcmpgtb
bnd
int3
add
mov
mov
xor
cld
mov
in
dec
inc
movsb
or
push
sti
lods
rcrb
or
inc
cmp
movsl
les
xlat
cs
lahf
sub
xorb
add
adc
pop
int3
fnsave
or
add
inc
adc
xor
inc
adc
dec
mov
jmp
sahf
mov
inc
push
out
pop
inc
repz
sub
shlb
les
jno
xchg
cld
clc
xor
and
or
or
rolb
jge
aad
test
xor
mov
inc
fs
int3
dec
out
sub
push
inc
dec
push
xchg
and
adc
idivb
pushf
fcmovbe
ss
xchg
adc
jp
js
fwait
pop
fwait
mov
ds
add
mov
or
mov
es
lcall
rcrl
int3
mov
jb
inc
xor
jne
lea
in
add
inc
je
pop
mov
adc
test
fs
xchg
aad
lock
or
mov
negl
and
xor
int
pushf
aam
pop
mov
shl
cmp
mov
mov
data16
scas
jp
andl
add
cmp
and
push
lcall
sbb
dec
cmc
add
sti
jg
das
call
dec
pop
iret
pop
xchg
rcrb
sub
inc
inc
fs
adc
addr16
pop
imul
ja
sub
ds
fcoms
iret
pop
mov
sbbb
jns
mov
jno
push
loop
es
int3
shll
cmp
add
xchg
jg
and
inc
mov
sbb
movsl
or
imul
xor
fsubrs
es
js
and
adc
bound
dec
adc
adc
xor
cmpsl
dec
push
enter
ds
cwtl
mov
out
iret
insb
adc
xchg
inc
int3
cmp
xchg
addr16
mov
jle
inc
push
and
lods
popf
andl
sub
loop
or
int
cli
data16
in
fidivrl
sbb
sub
testb
xchg
jbe
mov
icebp
pop
jecxz
mov
sbb
fmull
aad
xchg
xor
js
xchg
inc
mov
sbb
in
call
fnsave
cld
arpl
mov
cmc
inc
nop
or
push
les
push
addb
xchg
pop
sbb
loope
jb
pop
enter
pop
push
jnp
or
jecxz
nop
inc
lahf
xchg
dec
movsl
shll
test
cmp
xchg
add
orl
and
sub
sub
in
push
mov
pop
aam
dec
out
mov
mov
jmp
les
cmpsb
cmp
movsb
cmpsl
imul
aas
pop
outsl
add
mov
not
mov
mov
roll
sbb
push
push
dec
xor
insb
pop
loopne
dec
lds
shr
adc
in
popa
lret
xor
mov
jo
lds
dec
pushaw
push
insb
out
andl
loopne
bound
dec
int
sub
xchg
xor
repnz
jle
xor
jb
mov
inc
ds
nop
mov
lock
out
scas
popa
fcmovnbe
pop
xchg
in
ss
sub
or
pop
daa
cmp
mov
mov
inc
fidivs
out
dec
push
inc
testl
lock
out
push
icebp
cmp
fstps
inc
imul
jae
xchg
and
cmpsb
shrl
cmp
sbb
pop
test
cmp
clc
jnp
mov
enter
pop
in
sub
inc
rolb
mov
lds
pushf
les
fcoml
mov
mov
sti
or
call
stos
in
pop
mov
clc
cmpsb
pop
jle
ja
jge
pop
sbbb
jmp
ljmp
clc
addr16
into
push
mov
xchg
cmp
push
cmpsb
inc
cli
mov
xlat
mov
sbb
test
ja
fwait
data16
push
in
sub
cld
xor
xor
fldl
out
leave
xlat
and
pushf
loop
xchg
clc
stc
jb
pusha
xchg
sub
push
sub
pop
aaa
mov
fwait
mov
xor
add
scas
add
outsb
int3
mov
int3
arpl
xor
mov
sbbl
outsb
push
or
lea
scas
ret
pusha
scas
stc
and
dec
fdivrs
or
repz
and
dec
jle
sbb
mov
or
inc
push
add
ss
sub
js
pop
jnp
dec
addr16
ficomps
in
lds
mov
ret
loop
in
pop
fldt
pusha
jl
addl
icebp
sarb
xor
or
adc
pop
cmpsl
cmp
sbb
adcl
jmp
out
xchg
pop
add
leave
shl
adc
lahf
js
dec
dec
lahf
out
daa
out
xchg
cmp
out
inc
xchg
adc
bound
loop
ret
or
lahf
jbe
fcoms
into
push
data16
mov
aam
xor
jae
mov
jmp
pop
pop
addr16
xor
mov
push
xchg
nop
inc
xchg
stos
arpl
jl
dec
cmp
in
leave
xchg
int3
mov
das
lock
leave
dec
stos
cmp
icebp
pop
pop
push
fmull
icebp
pop
iret
test
iret
fs
aaa
decb
lea
push
pop
jecxz
test
push
ja
push
jle
pop
enter
into
mov
shrl
xchg
inc
sub
scas
cltd
or
and
ja
pop
mov
iret
jns
roll
xor
xor
sbb
mov
in
gs
sub
pushf
push
or
movsb
fdivp
add
mov
mov
mov
shrl
sub
inc
test
out
xchg
insb
xchg
adc
imul
aad
sub
push
inc
clc
out
mov
mov
push
scas
in
dec
xor
and
test
lahf
lock
je
and
push
sbb
jns
mov
mov
xchg
ret
mov
das
repnz
int
adc
and
jo
jo
ja
xor
mov
ret
outsb
mov
mov
lcall
pop
pusha
mov
outsb
cmp
cld
jmp
xchg
into
or
jns
push
xchg
cmc
sub
addr16
dec
inc
lods
mov
cmpsb
push
jg
or
in
cs
divb
ds
push
xor
lcall
add
icebp
xchg
outsl
mov
pop
movb
pop
movsb
and
fisubl
cmc
cmpsb
adc
movsb
pop
dec
lahf
xchg
xchg
push
sub
cmpsb
negb
repz
cmpsb
xchg
inc
mov
xchg
in
scas
adc
out
mov
popf
test
or
jae
mov
ljmp
lret
xor
xor
ret
xchg
aam
fs
repz
out
stos
fdivs
in
mov
xor
ja
and
lea
cs
inc
xor
ss
loope
and
repnz
mov
push
insb
call
inc
hlt
pop
and
sbb
or
jmp
test
stc
and
mov
lcall
mov
iret
movsb
frstor
push
jmp
push
jae
jns
mov
cli
fisubrl
xor
mov
popa
int3
arpl
and
inc
pop
fwait
pop
xchg
sarb
scas
and
orl
cwtl
out
popf
cld
stc
lea
cltd
jg
nop
shl
addr16
sbb
fcomi
cmp
pop
sub
ficompl
fcom
int3
cmpsb
ficomps
mov
xabort
fcoml
pop
and
jge
jne
test
divb
xchg
push
iret
push
test
push
sub
jne
jns
mov
dec
xorb
int3
fsubrp
adc
lret
pusha
test
adc
or
mov
cmp
pop
xlat
das
xor
loop
scas
rcrl
test
pop
sub
push
popf
les
stos
pop
and
add
lret
sbb
loopnew
adc
lods
jne
sbb
or
int3
mov
cmp
cmpl
test
sarl
xchg
popa
fs
push
movsl
pop
cs
push
push
sbb
call
fistl
xor
sub
add
gs
out
push
int
xchg
jno
jmp
mov
test
inc
adc
adc
aad
aaa
dec
dec
mov
aas
out
jge
in
sbb
and
jle
cs
adc
inc
jo
fisttpl
lock
aam
pop
adc
test
les
nop
push
inc
rorb
mov
jge
dec
or
mov
orb
cmpsb
test
daa
test
nop
jne
dec
repz
sub
call
movsb
test
popa
js
inc
xchg
push
jno
out
lods
subb
mulb
lret
ret
mov
sub
jno
jle
fildl
or
ret
pushf
rorl
jg
sub
popa
push
stos
jg
lea
test
push
mov
inc
inc
add
dec
fwait
in
jbe
cld
mov
push
loopne
jns
data16
cmc
and
cmp
movsb
or
lcall
js
xlat
in
xlat
xchg
push
test
cmpsb
lret
push
test
or
cmpsb
pop
and
dec
pop
inc
jle
sbb
dec
jecxz
fidivrs
xor
sub
mov
pop
cli
mov
in
mulb
inc
repnz
out
je
push
in
mov
or
inc
ljmp
lods
repz
push
clc
popf
ffreep
dec
inc
out
or
add
jmp
push
stos
inc
mov
xchg
jo
das
sti
add
pop
les
idivl
push
sub
rolb
add
ret
xchg
pop
mov
aaa
inc
pusha
sahf
in
xchg
test
imul
cld
cld
pusha
lods
fsts
mov
cmc
pushf
movsb
pop
leave
cmc
in
xchg
cmp
cld
xchg
fcomps
ficoml
jae
sub
push
fsubr
cld
andb
push
inc
divl
lahf
ret
jge
push
push
push
test
movsb
notl
dec
add
cmp
sub
popf
mov
adc
sbb
outsb
add
xchg
fcmove
lret
lahf
pusha
jo
lods
leavew
adc
inc
ds
mov
xor
push
ljmp
in
clc
dec
xchg
arpl
jo
mov
scas
fnstcw
fucomi
pop
dec
xor
out
pop
shrl
dec
mov
insl
push
jl
adc
mov
repnz
push
repz
pop
fistps
dec
sub
imul
xchg
mov
repnz
mov
mov
adc
scas
inc
push
or
insb
sahf
clc
mov
inc
jo
imul
and
cmp
push
push
stos
push
data16
cmc
fdivl
js
ret
loope
pop
cmp
or
repnz
scas
dec
loopne
sti
cmp
adc
mov
push
dec
lret
push
imull
in
dec
pop
mov
movsb
push
and
andl
and
sbb
xor
orl
in
mov
sbb
ret
add
sbb
or
in
addr16
sub
cmpsb
jns
mov
sbb
scas
and
adc
popf
jne
rcll
sti
jp
mov
cmp
fcmovnb
mov
je
ds
rcrl
js
mov
sub
dec
popa
mov
dec
sub
pop
mov
sub
mov
xor
pop
out
sbb
sbb
mov
dec
pop
out
pop
mov
dec
dec
mov
xchg
mov
lock
stos
je
call
cmp
xchg
addb
add
sahf
mov
in
pushf
mov
cmpsl
and
sbb
or
push
inc
imul
test
mov
inc
popa
pop
jne
add
push
insl
push
xor
mov
cltd
or
in
adc
push
pop
jnp
dec
dec
sbb
dec
pop
into
pxor
test
or
scas
leave
int3
dec
jo
xor
sti
ss
not
jbe
sbb
jns
jge
fldenv
out
jae
loop,pt
mov
pop
mov
das
mov
or
cmp
out
aaa
push
js
shlb
sbb
bound
mov
jbe
arpl
mov
into
repz
sub
loopne
cld
rorl
scas
in
jmp
repz
dec
icebp
adc
leave
and
mov
jbe
jecxz
pop
mov
and
lea
push
xchg
cmp
mov
sub
inc
xchg
push
addl
test
cmp
adc
dec
imull
test
adc
enter
clc
jl
sbb
in
out
mov
repz
add
pop
mov
cmp
add
jp
mov
mov
push
xor
repnz
aad
icebp
jp
cmp
push
jge
mov
fdivrp
call
inc
fnstcw
pop
lret
push
xor
mov
idivl
js
dec
scas
pop
lock
mov
mov
inc
lcall
xchg
jo
test
lcall
flds
lahf
pop
mov
push
movsb
push
addl
adc
cmp
dec
adc
add
cmp
pop
adc
jo
test
inc
aaa
jecxz
cmp
jle
imulb
fisubs
xlat
pop
into
add
xor
fwait
enter
lahf
push
call
push
and
sub
mov
movsl
mov
cmc
add
lret
pop
add
in
or
orl
adc
mov
mov
mov
popa
ret
xchg
sbb
push
adc
test
fwait
cltd
mov
jno
divb
mov
lds
push
pop
cmp
outsl
mov
push
shrl
ret
push
lret
dec
loop
lcall
sub
pop
mov
jae
out
test
sbb
jle
sub
mov
jle
das
mov
cli
loop
inc
push
xor
sbb
pop
dec
mov
insl
arpl
std
xor
les
jne
xchg
mov
lret
aaa
mov
push
lahf
iret
or
jo
xor
pop
pop
lret
mov
ss
dec
sub
std
leave
hlt
jle
xchg
sbb
cmp
les
push
in
movsl
jmp
add
add
leave
enter
mov
xchg
repz
jb
inc
jl
xor
out
and
mov
stos
sub
pop
xchg
cwtl
add
in
pop
cwtl
mov
xorb
pop
sub
mov
divb
je
jle
xlat
xchg
mov
es
pop
in
inc
gs
mov
test
jnp
or
pop
pop
or
js
mov
sbb
ret
fisttps
shrb
and
sar
es
ret
push
push
push
mov
or
rolb
jns
mov
dec
adc
jno
loop
and
pop
or
aaa
jae
adc
and
int
ds
fsts
movsb
add
repnz
out
mov
clc
push
cmpsl
shlb
push
push
add
adc
dec
lock
repz
adc
mov
inc
pop
imul
mov
push
mov
add
repz
push
cld
pop
fstpl
fdivrs
shrb
sbbl
sub
lahf
cli
lds
cmp
pop
and
mov
xchg
not
arpl
cmp
pop
ja
xchg
push
sbb
dec
addr16
xchg
enter
stc
mov
adc
cmp
sub
jmp
mov
and
dec
cli
cmp
hlt
gs
loop
sub
mov
sbb
shrb
imul
es
inc
sub
adc
fistps
test
js
pop
mov
stc
inc
dec
pop
ret
inc
cmp
movl
xchg
das
pop
add
mov
pop
pop
dec
dec
dec
and
sub
ss
leave
pop
insb
xor
jmp
pushf
adc
hlt
inc
xorb
jb
jg
xor
movsl
cmp
jb
je
mov
cld
dec
mov
push
je
xchg
jl
shrl
dec
std
xchg
push
stc
dec
xchg
addb
mov
dec
cld
test
das
mov
pop
mov
mov
mov
rorb
inc
data16
jg
ret
lock
xchg
pop
adc
or
cmpsb
mov
in
push
add
adc
out
sub
pop
cld
cmp
jle
sti
cmp
push
jnp
insb
hlt
lea
aas
xor
notb
mov
cmpsb
inc
cmp
mov
jle
dec
xor
dec
hlt
push
ret
sub
mov
push
dec
pop
push
mov
js
jno
dec
jns
cmp
xchg
cmpsb
call
cld
popf
mov
cmp
ficompl
jnp
xchg
pushf
sti
add
ljmp
inc
inc
sub
cmp
iret
cmp
popf
mov
pop
or
adc
mov
call
adc
pop
jmp
fsubrs
jne
sbb
adc
sub
loopne
and
inc
jne
fwait
sub
cmp
cmp
jl
popf
pop
pusha
and
push
and
mov
pop
or
popa
int
push
popa
les
pop
add
fcmovb
xor
cmp
test
push
fwait
jmp
arpl
fnstenv
cmpl
es
push
xchg
adc
inc
cmp
jo
icebp
inc
and
je
clc
mov
ds
out
adc
bswap
mov
or
xor
push
in
inc
imul
outsl
mov
cld
sub
sub
movsl
in
pop
loop
xchg
xor
add
cs
rol
dec
pop
pusha
dec
jne
sub
inc
lods
ret
push
lea
pusha
aaa
mov
jmp
adc
cmpsb
jno
sub
xchg
jmp
mov
jge
shlb
bswap
jg
dec
jns
shll
jmp
jge
jl
das
fdivs
push
sub
movsl
xor
xchg
mov
sub
lods
push
xor
xchg
inc
addr16
mov
pop
jmp
in
leave
shrb
out
notb
pop
mov
popl
bound
sbb
xor
dec
mov
in
imul
cli
lret
sbb
loopne
push
imul
jno
mov
clc
jbe
dec
int
std
and
sub
lea
add
mov
jno
fildl
xor
mov
cmp
cmc
dec
fldt
fwait
test
jae
cmp
mov
data16
outsb
dec
jecxz
test
xchg
loop
jmp
and
xlat
jmp
push
jge
push
push
pop
test
movsb
xchg
dec
push
mov
mov
inc
mov
push
ror
push
or
pop
jmp
inc
add
sbb
push
and
jns
xchg
movsl
movsl
push
jg
adc
mov
and
hlt
xchg
dec
in
cmp
imul
faddl
sub
rol
mov
aam
aaa
pushf
pop
in
nop
sbb
jge
pop
push
or
imul
lods
add
push
ficoms
stos
sbbb
push
mov
add
enter
cmp
add
adc
push
sbbb
test
adc
rclb
sub
jl
std
repz
outsb
sbb
adc
cwtl
mov
cmp
and
fsubl
mov
pop
mov
es
rcrb
pop
xchg
and
in
inc
imul
int
negl
push
and
sbb
push
pop
xor
out
push
dec
jl
popa
push
push
jge
inc
arpl
adc
cs
xchg
or
popa
shrb
aas
mov
inc
xorb
fidivrs
stc
push
dec
pusha
lcall
lock
lds
cmp
outsb
out
or
lea
push
aaa
push
mov
cs
repnz
cmpsl
mov
dec
andl
cmpsb
pop
inc
shr
dec
scas
scas
lret
inc
xchg
mov
ficoms
out
in
xor
pusha
lret
flds
pop
pop
out
inc
xchg
jnp
sbb
jp
in
add
xorb
push
push
xor
subl
push
mov
or
push
enter
lods
xchg
mov
js
inc
int3
sub
fwait
int3
sub
xor
jmp
movsb
xchg
retw
repnz
pop
and
mov
push
popa
nop
sbb
pop
ja
dec
lods
test
aad
jae
or
pop
xchg
int
cld
pusha
adc
pop
in
out
sti
jecxz
dec
inc
jb
outsb
call
and
push
lods
out
pop
dec
hlt
xchg
push
mov
shrb
adc
pusha
push
cmp
in
pusha
jl
sub
loopne
or
clc
add
fisubrs
outsl
iret
dec
dec
cmc
jae
and
sbb
jmp
cmp
mov
fnstcw
fdivs
add
sarl
jae
jecxz
cmp
daa
xchg
xor
and
pop
or
cs
aas
leave
cs
push
push
loop
insl
out
adc
inc
adc
xchg
or
mov
inc
stos
aam
mov
lods
cmp
jecxz
mov
jle
add
add
imul
mov
and
sub
mov
call
clc
dec
lods
add
adc
in
add
cld
xchg
loop
addr16
cs
inc
repz
sub
xchg
jo
repz
xchg
movsl
out
mov
sbb
adc
imul
push
xchg
add
or
movsl
es
and
arpl
icebp
sub
pop
std
mov
je
je
cmp
mov
and
cmp
ljmp
fmuls
in
adc
dec
dec
repz
int
xchg
adc
pop
lcall
and
pop
lahf
icebp
xor
outsl
fcompl
mov
mov
push
cmp
outsb
mov
sbb
mov
pop
jns
loope
loopne
jmp
jb
addl
inc
add
mov
rclb
pop
fstl
cmc
dec
xor
mov
popf
ret
pushl
sub
icebp
mov
jae
fnsave
insl
sub
ljmp
cmpsl
mov
outsb
pop
pushf
mov
push
mov
movmskps
adc
cmp
sti
lods
sbbl
or
dec
jl
movsb
xchg
adc
mov
out
sarl
dec
xchg
iret
push
mov
repnz
push
fildl
outsb
lret
flds
xacquire
adc
in
pusha
aad
in
mov
imul
out
int3
int3
aas
imul
jne
in
xchg
movsb
sbb
dec
imul
mov
clc
clc
and
das
mov
mov
jecxz
enter
push
push
jns
es
fmull
pusha
xorl
mov
dec
and
lea
pop
add
xchg
ljmp
data16
mov
stos
test
cmp
jnp
dec
push
mov
push
xchg
sub
repnz
out
popf
jmp
adc
cmp
dec
or
xchg
inc
xor
hlt
mov
lahf
out
and
mov
mov
int
mov
nop
iret
imul
aas
dec
push
adc
lods
inc
xor
pop
rcll
mov
ret
push
mov
or
jb
push
and
pop
jge
insb
ss
cmp
cs
testb
sbb
push
lock
push
in
jnp
mov
and
inc
push
call
and
dec
pop
cmp
loope
xor
cmpsl
aas
inc
scas
mov
and
mov
mov
xor
fwait
dec
jmp
and
xchg
jb
daa
pop
mov
mov
fisubl
mov
push
lock
jmp
cld
sbbl
jnp
icebp
pop
mov
imul
or
push
test
sbb
adc
sub
lret
push
push
shll
in
or
stos
push
popa
mov
and
jmp
sbb
lea
jp
adc
xor
push
sub
mov
imul
test
les
push
in
inc
or
mov
int3
sub
repnz
out
push
push
sub
sbb
cltd
lret
repz
cmpsl
lcall
cmp
pushf
adc
lods
mov
cli
rclb
cmc
push
xchg
sahf
scas
mov
add
pop
push
sbb
int3
xchg
ror
ret
pusha
mov
xor
xor
js
rcrb
and
jns
pop
data16
pop
dec
stos
xchg
shll
push
addr16
call
push
or
mov
outsl
mov
stc
jae
adc
inc
xor
daa
push
dec
stc
pop
mov
or
jo
push
mov
or
xor
les
jl
repnz
cmp
ret
ret
mov
addps
mov
add
popa
push
ret
xlat
or
scas
push
fcoms
stc
gs
inc
push
sub
out
loop
mov
movnti
sub
movsb
push
and
cltd
jb
mov
pop
call
push
adc
sbb
sub
mov
mov
lds
repz
lcall
or
pop
out
fstpt
stos
fadds
int3
ss
clc
jl
js
mov
add
mov
shr
inc
bound
and
xor
inc
mov
mov
mov
bound
out
sbb
sti
pop
lahf
lods
add
stos
jnp
mov
je,pt
push
int3
out
cwtl
dec
inc
adc
jae
rcr
or
mov
repnz
inc
shl
pop
movsb
jbe
xor
dec
sbb
clc
or
push
in
push
push
iret
outsl
push
testb
push
cmovbe
fidivl
xchg
ret
xchg
iret
add
or
int
jmp
mov
xor
pop
fdivrs
outsb
stos
dec
or
jns
repz
push
pushf
cmp
mov
icebp
mov
mov
mov
sar
icebp
nop
rcrb
repz
xchg
push
leave
inc
jbe
js
js
xorb
xlat
cs
push
clc
sbb
int
and
lea
pop
push
addr16
xor
shll
mov
aas
xor
orl
stos
ja
std
in
scas
ret
rclb
cmc
or
inc
mov
pop
pop
fldt
cmp
lret
pop
pop
sub
loope
adc
adc
jmp
dec
mov
xor
pop
adc
jl
mov
in
scas
test
mov
int3
sahf
or
lret
enter
adc
sub
sub
lret
test
aam
aas
rcrb
push
mov
mov
fmuls
and
popf
mov
cmpsl
cmp
mov
pop
or
xchg
fisubrl
mov
int
push
jo
dec
icebp
sbb
ficoml
popf
rorb
idivb
pop
andl
mov
pop
int
push
stos
cmp
loope
mov
inc
pop
xchg
ljmp
lret
push
or
cmp
push
sbb
cltd
xorb
enter
imul
outsl
loopne
fdivl
mov
jl
repz
mov
test
mov
pop
xlat
outsb
int3
scas
mov
negb
jg
jns
dec
add
xor
outsl
inc
cmpsb
int3
cltd
scas
cmp
and
xor
cwtl
dec
jp
popf
mov
fs
cmc
sub
cmp
hlt
pop
repz
icebp
into
jecxz
pop
xor
push
sbb
pushf
push
std
daa
pop
pop
inc
jp
adc
jnp
idiv
sbb
addl
into
aad
test
lods
adc
loope
inc
lds
fadds
leave
lret
sub
add
sbb
add
int3
mov
xor
fidivrl
in
mov
adc
int3
dec
cmpsb
ja
aam
enter
iret
lret
mov
hlt
or
roll
addr16
ds
lahf
cs
pop
sbb
shl
xchg
sub
xor
jl
jno
xchg
scas
dec
mov
lcall
inc
mov
mov
lret
shll
cmp
out
dec
mov
fmul
xor
mov
pop
and
push
out
insb
xchg
ljmp
pop
pop
movsl
jmp
fs
sbb
sbb
or
sub
stos
mov
sub
cmp
ljmp
aas
rorb
mov
jns
fmull
outsb
dec
mov
push
push
jnp
gs
shl
xor
xchg
pop
xchg
xor
out
loope
xor
mov
xchg
andb
xlat
xor
mov
jle
mov
fcmovnu
ret
and
mov
cld
push
loop
mov
mov
xchg
pop
fbstp
dec
pop
fsts
sub
push
into
out
les
push
cwtl
pop
mov
cmpsb
hlt
push
cs
mov
ret
mov
adc
mov
int
adc
lea
xchg
es
xchg
and
sbb
dec
cmp
sti
unpckhps
clc
rcrl
aaa
add
aad
sub
out
jecxz
jle
mov
jecxz
fistps
loope
mov
stos
mov
and
andb
fnstcw
mov
push
scas
aam
jp
dec
fidivrl
loop
jle
mov
repnz
cmp
mov
adc
and
xchg
dec
in
xchg
stos
fiaddl
xchg
adc
xlat
lods
pop
es
add
cs
call
fdivr
das
sbb
int3
je
sub
fimuls
movsl
lods
add
dec
sub
pop
scas
incl
ljmp
fidivl
jo
mov
movhps
arpl
adc
inc
test
inc
in
pop
jnp
cltd
outsb
adc
dec
bnd
adc
xchg
cmp
jmp
pop
call
push
fldcw
jae
call
xchg
aad
faddl
push
and
jns
pop
xchg
lret
and
loop
aad
lds
ljmp
es
xor
jp
pop
int3
nop
adc
data16
push
jl
fwait
xlat
sbb
lcall
test
scas
sub
rolb
lock
xchg
sarb
into
sbb
mov
movsb
ljmp
mov
mov
ret
or
jmp
xor
jne
and
pop
mov
cwtl
stos
lds
test
sbb
imul
int3
pop
push
add
fcoms
add
mul
mov
ret
mov
sub
jae
fwait
mov
cmpsl
push
hlt
inc
xor
popf
and
cmpsb
lret
cli
push
push
out
adc
ljmp
dec
cmpsl
les
inc
mov
mov
push
andl
jmp
inc
mov
cmp
xor
arpl
adc
mov
sti
mov
fldcw
sub
pop
and
hlt
mov
rclb
and
aad
sub
sysret
pop
es
inc
mov
mov
hlt
loopne
pusha
cmp
mov
mov
sbb
xchg
bnd
test
push
inc
outsl
fdivrp
cmp
add
add
mov
out
add
faddl
xor
fisttps
and
incl
mov
daa
int
or
jecxz
das
fs
mov
mov
enter
cmp
icebp
iret
inc
gs
inc
hlt
lds
cwtl
inc
mov
xor
stos
sbb
lret
and
aaa
cmp
into
nop
push
jecxz
addr16
mov
out
lea
pop
pop
push
pop
sub
rcrb
xchg
das
call
pop
push
imul
negb
scas
jae
sbb
cwtl
lods
loop
sub
lret
mov
mov
jo
jg
push
cld
je
stos
insb
scas
shll
dec
icebp
xor
mov
push
outsb
out
sti
cltd
mov
addr16
flds
pop
lods
mov
dec
cmp
loopne
push
xchg
sub
pop
mov
decb
rcll
test
aam
inc
and
lods
pandn
dec
cmp
adc
mov
rcr
lcall
xor
xor
addr16
aad
filds
arpl
mov
mov
lcall
push
fcomp
inc
jp
jbe
jmp
popa
insb
in
and
mov
in
dec
cmp
fsub
xorb
test
inc
push
xor
mov
aad
dec
cmp
mov
pushf
cwtl
arpl
je
inc
hlt
imul
in
push
add
jne
cmpsb
xchg
dec
push
int3
lods
fcom
push
test
cli
jge
lea
lcall
sub
out
test
pop
mov
pusha
sbb
rcll
sub
leave
pop
dec
insb
mov
mov
mov
hlt
popa
sbb
cmp
repz
mov
push
fstl
shr
adc
int
push
fildll
sub
xlat
in
mov
push
rcl
fists
mov
jge
adc
daa
outsb
leave
xchg
pop
lcall
adc
sahf
mov
cmc
call
imul
or
out
test
fsub
mov
jge
cmpl
jecxz
sub
loop
sti
lods
mov
inc
sub
lea
jle
jo
aad
jmp
inc
jp
js
aam
inc
icebp
inc
stos
fsub
outsl
mov
add
movsl
movsl
fistps
shrl
mov
mov
fsubrl
and
push
jmp
adc
scas
pusha
sbb
mov
adc
cld
sub
stc
xor
mov
cltd
test
xchg
pop
or
lcall
cmpsl
cltd
jle
cmp
and
aam
inc
aam
xchg
lcall
xchg
in
idiv
xor
adc
std
cmc
mov
hlt
add
sbb
push
or
repz
add
or
cmc
cmpsl
jb
xchg
adc
into
popf
das
scas
push
cmc
mov
dec
sub
loope
push
pop
dec
fs
fs
or
mov
push
outsb
int
int3
push
jmp
mov
dec
lea
add
fisubrs
mov
rcrb
push
dec
sti
or
shrb
int3
repz
repz
clc
js
jp
adc
sbb
rcrb
mov
add
dec
cmp
test
xchg
mov
nop
sub
mov
je
imul
insl
aas
lcall
sub
stos
jle
lea
in
or
fmulp
and
std
divl
xchg
add
sbb
sti
std
mov
jp
dec
not
js
or
arpl
addr16
inc
gs
pop
mov
lahf
lea
idivl
mov
faddp
sub
les
push
jbe
rcrb
xchg
nop
inc
xchg
xchg
jb
mov
fnstsw
movsl
pop
pop
movsb
stos
xor
dec
and
andb
outsl
jbe
and
es
push
ret
call
stc
fistpl
inc
mov
imul
push
pop
adcl
rcrb
dec
sti
int3
cmp
aam
out
out
clc
fmull
and
lcall
jo
nop
out
sub
out
push
ljmp
cmp
fsubrs
in
push
mov
add
loope
push
rcrb
or
loopne
ja
add
adc
pop
scas
lret
cmpsb
mov
jmp
dec
adc
ja
popa
xchg
add
idiv
scas
movsl
mov
add
or
adc
mov
mov
mov
movsl
cmc
in
sarl
fiaddl
mov
mov
mov
sub
test
xchg
and
mov
xor
adc
or
pop
xchg
in
sbb
push
arpl
xor
pop
push
push
cmp
mov
aas
mov
pop
or
sbb
fsubr
mov
cli
or
shll
xchg
xor
ja
in
jae
mov
or
push
dec
sub
jo
sub
mov
mov
mov
out
les
xor
push
aas
movl
ja
mov
mov
mov
test
and
mov
or
aam
cmp
pop
sbb
rorl
inc
test
insl
ret
xchg
icebp
lcall
add
pop
xchg
or
jle
adc
andl
sbb
ss
jle
add
mov
mov
or
mov
js
out
push
or
hlt
push
in
std
sub
ljmp
mov
inc
and
leave
adc
cmp
inc
roll
loope
je
xchg
pop
outsb
add
dec
xchg
insb
mov
int3
lods
pop
out
aam
cmp
mov
leave
and
pop
insl
or
pop
fcoml
repnz
inc
sub
fsubs
push
xor
dec
xchg
call
xchg
cmp
cmpsl
mov
mov
test
dec
add
cmpsl
mov
xchg
inc
sahf
mov
xor
sbb
cld
and
iret
add
clc
pusha
cmc
or
movsl
pusha
xchg
sbb
jb
adc
fstpt
push
and
test
and
dec
mov
pushl
out
jo
rcll
xor
test
dec
xor
leave
pop
sub
pop
es
setnp
clc
sahf
out
push
add
xchg
testb
xchg
imul
mov
subb
cmp
or
dec
mov
sub
aam
mov
ret
in
sbb
cli
jo
inc
jbe
clc
xor
movsb
push
lods
adc
cli
inc
call
leave
test
and
cwtl
inc
adc
sub
inc
arpl
out
adc
dec
outsb
lahf
xor
rcrb
outsl
push
bound
popf
lret
outsb
test
sbb
push
mov
push
push
sub
scas
jp
jns
in
mov
out
adc
push
xchg
xor
and
cmc
add
sbb
cltd
pop
movsb
xor
sbb
xchg
mov
pop
or
xchg
sbb
fnsave
xor
movsl
faddl
mov
push
std
dec
mov
pop
out
mov
dec
arpl
sarb
insb
insb
mov
push
cmp
dec
dec
push
add
test
xor
out
sub
or
addr16
cmp
addr16
or
and
movsl
xchg
popf
lods
dec
push
add
lea
xchg
out
fdivs
sub
or
ffreep
add
icebp
cld
icebp
and
dec
and
pop
fists
sub
ja
cmpsb
hlt
push
mov
nop
or
cwtl
into
int
mov
sbb
mov
dec
lock
xchg
pop
clc
aam
stc
cwtl
ficomps
jne
repz
xchg
je
std
stos
pop
in
imul
jno
les
mov
test
mov
scas
in
fisttpl
out
and
push
or
add
push
out
jge
xor
scas
mov
add
subl
jg
rclb
pop
dec
fdivrp
inc
imul
ss
fadd
jp
loop
mov
push
jl
lcall
das
cmp
sub
subb
lcall
cltd
inc
mov
cmp
xchg
lret
push
push
jge
sub
sub
and
in
mov
outsl
jecxz
add
xchg
addr16
shll
jno
inc
push
lock
movsl
pusha
dec
cmp
dec
jns
mul
flds
cmp
ss
jle
mov
aad
xchg
add
lret
dec
icebp
jge
sbb
pusha
lret
stos
subb
insb
sahf
mov
sub
add
hlt
call
aaa
mov
pop
push
pop
nop
or
enter
jnp
ror
fsubrl
add
mov
pushf
sub
test
ljmp
lret
sarb
pop
mov
fbstp
sub
dec
push
sbb
lds
arpl
scas
jle
loope
push
dec
push
repnz
sbb
push
clc
mov
fwait
jmp
xchg
mov
adc
ja
xor
jmp
in
xor
inc
xchg
push
cmp
fsin
cmp
mov
repz
sti
mov
divl
lods
movsb
xchg
cmp
mov
test
int3
aas
ljmp
repz
cmp
cmp
jb
outsb
xor
push
aaa
adc
mov
adc
js
into
lods
push
les
push
sarb
aas
es
lods
add
jo
in
mov
aad
inc
pop
cli
test
dec
xor
rcr
jb
cmpsl
jle
cltd
adc
popf
add
sub
jb
pop
sahf
mov
sub
divb
xchg
xchg
pop
pop
fnstenv
mov
and
shlb
jle
in
cs
or
fcompl
shl
push
or
inc
lcall
ss
ds
cld
or
sti
loope
adc
cmpsb
nop
or
push
mov
iret
data16
sub
stos
dec
mov
fsub
cmpsb
call
cmpsl
sub
test
fdivs
inc
jno
mov
shl
aad
mov
out
test
mov
cltd
lock
arpl
sub
xchg
jns
test
mov
mov
test
test
sbb
sub
aam
sub
lods
cmc
imul
pop
cmp
mov
or
pop
lret
dec
inc
ror
ret
test
daa
xor
ljmp
cmp
das
repz
in
mov
xor
mov
adc
mov
and
arpl
push
ret
adc
xchg
pop
bnd
mov
lods
in
push
outsl
mov
cmp
dec
xchg
testl
push
cli
test
rclb
iret
loop
in
pop
fdivrs
add
pop
jns
pop
addr16
mov
push
mov
lea
xchg
loopne
jge
mov
ds
xor
mov
cmp
push
sbb
xchg
jne
inc
nop
pop
jne
cli
lcall
adc
daa
pushf
cmp
xor
mov
jg
movsb
pop
scas
jl
or
aaa
inc
add
mov
xchg
or
adc
fcompl
faddl
in
rcll
mov
jb
mov
pop
jle
pop
int3
jb
mov
insl
imul
fwait
fs
xor
pop
jg
push
ret
xchg
lret
jmp
aad
in
daa
mov
lahf
insl
push
xor
sub
jmp
and
das
lds
sbb
popa
ljmp
mov
pop
test
stos
sarb
aad
fstpl
fiadds
or
add
sbb
add
sbb
jo
js
aad
sbb
mov
repnz
bound
or
add
imul
dec
jg
push
shll
push
jg
mov
adc
mov
mov
mov
push
xchg
loop
dec
dec
fwait
loop
leave
icebp
pop
sahf
mov
push
flds
stos
outsb
push
ja
gs
or
push
addr16
es
fildl
xor
pop
sbb
paddb
inc
je
adc
inc
mov
push
imul
sbb
bound
inc
cltd
push
test
popa
sti
insb
movsb
or
or
dec
cmp
and
jecxz
xor
cld
sbb
repz
mov
gs
cld
mov
or
inc
or
mov
mov
shl
loopne
lret
orb
push
out
pop
inc
in
aas
movsl
mov
sub
ds
ds
dec
lret
inc
inc
enter
xchg
test
lret
movsl
daa
jnp
fldcw
call
mov
cmp
dec
icebp
sub
add
mov
fstpt
int
push
mov
ret
pop
int
lret
pop
sub
ret
test
adc
stos
adc
in
mov
inc
or
sbb
push
xor
mov
addr16
out
mov
xor
push
add
aad
cld
inc
pop
dec
xor
fnsave
sub
in
out
insl
cmpsb
mov
mov
pop
sub
pop
push
data16
xchg
sbb
dec
inc
fbld
cmp
mov
xchg
push
push
jl
pop
mov
sbb
cwtl
outsb
push
cmp
loop
mov
ss
mov
outsb
flds
inc
xor
aam
repz
repnz
jp
xchg
push
test
mov
in
cmp
subl
pop
or
add
pop
roll
insl
dec
cmp
dec
fisttpll
xor
call
shl
add
push
mov
adc
in
xor
lret
aad
icebp
jmp
std
or
adc
bound
repz
or
adc
in
movsb
push
fcompl
sti
fcompl
pop
cmpsl
mov
notl
aam
aas
mov
dec
mov
les
xchg
mov
rcll
adc
inc
shrl
xor
cmc
and
cli
push
mov
ret
ss
sbb
push
clc
mov
cmp
xchg
lock
stos
mov
dec
jecxz
fs
fbstp
imul
int
xchg
in
lret
mov
pop
and
ljmp
adc
sti
xchg
adc
jbe
es
jb
popf
test
mov
fists
push
stc
ljmp
fnstenv
pop
in
test
xor
jnp
xchg
repnz
lea
dec
sub
aaa
adcw
std
lods
pop
cmp
or
fnstenv
sbb
add
mov
xor
jmp
and
pop
lret
sub
xor
pop
push
xor
ret
ljmp
movsl
jl
cmp
out
out
pop
aas
fcoms
daa
sbb
andl
bnd
sti
test
scas
les
dec
pusha
mov
pop
enter
jnp
adc
in
pop
cltd
test
out
inc
jge
add
daa
adc
repz
jmp
int
dec
push
mov
jecxz
lahf
lcall
pop
adc
fdivr
xorb
in
adc
sbb
inc
mov
out
fidivrl
mov
xor
sbb
gs
pop
sbbb
std
test
cmpsb
xchg
loopne
cmp
sub
mov
inc
pop
mov
xchg
jno
icebp
aam
sub
inc
and
int
scas
jne
cmp
scas
bnd
or
imul
xchg
mov
add
sbb
jg
and
inc
cs
and
in
sbb
jle
mov
xchg
int3
loop
lock
insb
xor
jno
lock
dec
and
test
fcmovnu
mov
test
repz
sbb
or
inc
mov
call
cmpsb
nop
push
jl
mov
inc
sub
jl
test
jecxz
stc
fisttpll
or
push
arpl
idivl
mov
shl
jbe
fs
cmp
and
sbb
xchg
cltd
jl
fsubs
pop
mov
inc
fdiv
pusha
inc
inc
jp
inc
adc
shlb
aaa
fstpt
jmp
xchg
xor
sub
sub
fcoml
cmpb
aad
or
cmp
insb
cmpsl
push
sub
insl
sbb
or
int
pop
mov
ret
sub
xor
lahf
push
loop
xchg
aaa
test
and
jp
mov
or
andb
push
int3
mov
xchg
pop
es
aad
std
add
test
sbb
ret
mov
inc
cmp
fistl
ss
jmp
orb
pop
xchg
repz
imul
pusha
push
and
sti
nop
pop
cmp
push
xor
jge
xorb
pop
fwait
push
pop
jno
cmpsb
mov
mov
jbe
lock
mov
lods
rcr
pop
nop
scas
inc
pop
stos
out
jp
adc
popf
test
iret
adc
fwait
pop
lcall
aas
std
or
cs
test
cmp
ret
pop
or
pop
sbb
in
adc
push
xchg
adc
int3
cld
fists
mov
lahf
cmp
fwait
lret
incb
lret
and
mov
dec
sub
out
fidivrl
clc
xchg
inc
pop
push
push
call
and
outsb
inc
pop
sbb
in
cmp
out
lods
jbe
inc
outsl
rcrb
aas
and
adc
cmp
incl
cmp
test
push
jno
cs
or
lods
test
pop
rcll
jmp
cmp
testb
cli
sbb
pop
mov
jecxz
fbld
mov
add
in
decb
dec
lcall
mov
je
fists
inc
jae
lock
out
lods
push
mov
leave
stc
into
insl
sbb
cwtl
loop
mov
inc
jns
xchg
sbbb
or
mov
test
xchg
push
add
adc
aad
imul
dec
cmc
pop
add
loope
cld
jbe
iret
jg
test
cltd
je
inc
gs
mov
and
sti
lret
sbb
jg
inc
dec
add
pop
jno
jg
cwtl
cltd
sahf
aam
xchg
stos
test
ret
mov
shll
xlat
pop
lahf
in
cmp
jno
adc
mov
or
cmpsb
xchg
nop
sbb
jl
push
cs
xor
xchg
push
scas
data16
out
pop
lahf
xchg
shl
mov
mov
adc
movsb
andb
mov
rcll
out
mov
imul
xor
jne
in
xchg
push
test
xor
out
cwtl
pop
push
adc
cmp
pushf
dec
test
fiadds
push
test
daa
cmc
or
repz
xor
inc
mov
loope
jg
xchg
in
jb
addr16
xchg
jne
movsl
scas
cmp
iret
xchg
into
push
cs
cmp
xor
repz
jmp
inc
mov
movsl
les
loop
jns
dec
mov
sub
jg
jns
jle
cmp
or
in
pop
dec
and
stc
sub
add
xchg
mov
push
cmp
clc
jmp
mov
in
cmp
jp
jl
add
lods
jle
mov
scas
fildll
das
inc
into
cmp
sbb
pop
sbb
or
adc
xor
cmp
adc
out
jbe
or
imul
sti
arpl
sub
lods
xchg
dec
out
xor
push
dec
adc
call
xchg
out
sbb
xor
daa
daa
daa
pop
cmp
xchg
adc
cmc
enter
lea
and
gs
movsb
xchg
cmp
in
int3
dec
mov
bound
roll
jno
out
mov
fistpl
add
push
sbb
in
push
cmpsb
or
bound
sbb
jne
stos
jne
inc
sub
pusha
std
stc
js
js
push
loopne
int3
into
mul
xlat
mov
add
push
push
fnstcw
sub
lods
and
test
outsb
test
cltd
mov
mov
aad
imul
iret
mov
push
add
addb
lods
jecxz
mov
pusha
aam
mov
mov
scas
nop
sbb
add
pop
rorb
movsl
push
je
mov
scas
sbb
sbb
fnstsw
dec
xchg
xorb
add
out
or
cltd
lcall
arpl
push
push
dec
inc
jno
pop
pop
mov
sbb
pop
comiss
mov
dec
pop
lret
subl
jnp
fs
test
add
pop
and
filds
inc
push
adc
cwtl
test
push
daa
lret
pop
xchg
or
mov
mov
gs
pushw
das
inc
pushf
xor
je
sub
nop
jae
push
out
mov
in
mov
sbb
clc
xor
ja
inc
add
fistpll
mov
adc
test
gs
mov
aam
xchg
inc
lcall
sub
stos
fst
or
dec
rorb
jbe
inc
jp
lds
cld
xchg
or
ret
cmp
das
stos
pop
leave
cmp
jmp
outsl
cmp
aaa
nop
or
push
roll
or
mov
or
cmp
int
inc
jecxz
divb
dec
cmp
pop
lock
imul
stos
xchg
adc
mov
leave
imul
jge
and
jg
imul
inc
loop
loope
das
push
les
xchg
dec
mov
rcrl
aam
ljmp
stos
pop
xor
into
jo
call
addl
dec
or
xchg
int3
xchg
cld
pop
pop
enter
adc
dec
sbb
pop
xchg
sbb
rorl
pop
sbb
push
scas
aad
rcr
or
add
lods
in
mov
imul
popa
lock
pushf
hlt
decb
and
jno
mov
xchg
mov
fidivl
leave
jecxz
mov
enter
bound
je
jl
sti
iret
mov
outsl
sarb
out
pop
andl
add
js
shll
mov
push
rol
movsl
out
jo
sub
fidivrl
test
test
or
and
daa
or
int3
rcll
push
arpl
out
or
inc
mov
dec
xchg
sbb
jecxz
out
adc
shrl
lods
sbb
jmp
xor
xchg
and
stos
test
pop
cli
mov
dec
mov
aas
add
ret
jmp
or
loope
and
fs
stc
jp
cltd
push
movb
inc
jnp
mov
cmc
push
sub
add
iret
fwait
add
adc
pop
scas
test
pop
mov
orb
mov
jno
imul
fwait
push
jmp
mov
push
push
adc
lods
cmpsl
out
adc
push
sub
lds
pop
faddl
inc
jg
push
jb
push
pop
in
push
out
popf
mov
cmpsl
mov
iret
xchg
sbb
cld
insb
lcall
jmp
fldenv
inc
ret
dec
push
pusha
jg
icebp
xchg
adc
nop
inc
enter
ret
fiaddl
pop
adcl
dec
jnp
fcoml
pushf
push
outsl
add
adc
gs
ret
push
loope
jbe
inc
movsl
inc
dec
fbld
cltd
ret
or
mov
xor
mov
cmp
and
dec
add
jp
xchg
sti
lahf
imul
imul
out
aas
jo
and
test
mov
sub
and
cli
pop
pop
mov
mov
jp
rclb
test
adc
push
iret
and
push
lds
fbstp
mov
add
xor
xchg
jecxz
pop
dec
shlb
loopne
and
pop
pop
push
enter
dec
pushf
imul
and
daa
inc
insl
bound
inc
xor
sbb
insb
mov
mov
pop
push
mov
fimull
pop
ret
jle
inc
add
sub
pop
jmp
sar
int3
xor
out
cmp
lahf
add
jbe
gs
pop
inc
sbb
adc
movsb
inc
jbe
sbb
mov
fnstcw
and
cmpsl
aad
arpl
sub
xlat
mov
push
sbb
std
mov
icebp
push
xchg
in
fcmove
push
push
or
lds
aas
and
gs
test
adc
je
or
jge
mov
cli
xchg
ljmp
xchg
daa
gs
out
pushf
push
or
fildll
test
sar
jo
mov
imull
push
sbb
cld
das
mov
enter
push
mov
rolb
mov
out
rolb
cmp
mov
mov
mov
dec
or
xchg
pop
sub
mov
pushw
add
ja
cltd
cmp
jno
sub
jno
scas
in
dec
jg
push
cld
daa
fnstenv
jns
stc
xchg
push
daa
mov
lea
enter
mov
out
stos
pop
push
iret
mov
subb
add
jge
dec
aam
enter
mov
jg
or
mov
xchg
sub
push
shlb
add
sbb
sub
xchg
out
ds
repnz
decl
push
sub
pushl
test
faddl
fdivrs
mov
loopne
nop
mov
inc
ror
in
lods
les
jge
iret
sarl
push
stos
cli
fstpl
sbb
dec
sbb
cmp
ret
cmp
inc
int3
out
lea
cmp
and
sbb
popf
cmpsb
stc
inc
int3
bswap
mov
xchg
sbb
pop
mov
stos
daa
cmp
cmpsl
idivb
ja
cli
sbb
popa
adc
js
push
test
cmc
popa
lock
das
test
movsb
and
push
adc
sti
ljmp
inc
cld
subb
adc
sbb
mov
push
adc
cmpsl
movsl
inc
test
mov
adc
test
ficoms
push
cmp
sub
cs
test
loopne
insb
loop
repz
addl
pop
xor
mov
stc
cmp
sub
aas
add
jl
rolb
popf
fildl
cli
into
jbe
lock
mov
pop
in
fisttpl
out
ds
mov
loope
mov
xor
cs
loopne
push
int3
xchg
dec
clc
movsb
add
xor
mov
inc
jbe
enter
cld
cwtl
loope
mov
mov
push
xorb
sub
sbb
neg
add
cwtl
push
and
sbb
mov
and
lods
in
scas
sub
sbb
movsb
jge
and
jae
movsb
jg
out
iret
popf
insl
sbb
daa
push
mov
or
pop
push
clc
movsl
fdivrl
idivl
jbe
repz
sub
repnz
aam
into
insb
xor
andl
dec
mov
clc
daa
mov
sarb
dec
insb
nop
and
sti
mov
xor
jae
mov
testb
int
cmp
mov
pop
pop
adcb
or
outsb
adc
add
push
fwait
jno
mov
adc
pop
xor
loop
jge
mov
lods
imul
push
mov
pop
jae
xor
xor
xchg
mov
cld
andl
std
mov
jmp
xor
cwtl
sarb
pop
ljmp
test
lea
cmc
mov
std
outsb
push
mov
dec
lods
rcrl
pop
dec
inc
std
jae
jbe
jl
mov
adc
sub
nop
test
fisubrl
es
xchg
sub
scas
orl
xor
insb
jno
pop
jae
xor
or
jge
fisubs
rorb
std
push
cwtl
cs
cmpb
popa
fwait
jns
std
xlat
dec
jb
shll
frndint
mov
push
push
ja
int3
mov
lods
add
fistpll
mov
jg
lods
inc
push
cmpsb
call
movsb
pop
jge
cmp
jmp
cwtl
adc
or
stos
dec
icebp
fcom
ljmp
pop
pop
add
lods
mov
sarb
cmp
sbb
jmp
push
cs
loope
push
lods
lods
shrb
jl
mov
jb
ret
lock
xchg
jecxz
shr
mov
cmp
xchg
and
dec
push
cmpsb
jmp
fistps
inc
int3
and
fbld
and
pop
outsb
in
mov
js
add
and
xor
sahf
jnp
and
jno
cld
add
icebp
scas
lret
fs
das
mov
sahf
in
aad
mov
inc
sbb
dec
loope
das
add
sub
shlb
ret
pop
xor
movsb
or
cmpsl
cmp
js
cmp
mov
xor
pop
sub
xor
dec
dec
hlt
outsb
sti
rcr
and
les
js
jns
pop
push
scas
pop
lret
mov
ds
pop
pop
lret
daa
dec
call
or
scas
push
int
clc
mov
xchg
mov
jae
mov
test
icebp
cmpsb
fidivrl
sub
repnz
xor
xlat
rorl
or
pop
lret
mov
push
arpl
daa
mov
std
decb
leave
daa
sub
ret
cltd
jp
dec
inc
jmp
clc
add
mov
lea
int3
cmp
push
xchg
ja
mov
cmc
jno
adc
test
mov
pop
fidivrs
pop
adc
lds
loopne
daa
inc
ret
mov
repz
movsl
ljmp
dec
iret
jbe
cmp
jp
divl
sub
cmp
xorl
testl
test
in
mov
and
mov
scas
xor
mov
jmp
pop
sbb
mov
jae
pop
ds
push
sub
bound
fisttpl
inc
xlat
int
inc
mov
imul
roll
pop
and
sub
dec
mov
sub
pop
sub
enter
sbb
xchg
subps
ss
pop
mov
or
pusha
jge
fildl
push
and
imul
rolb
filds
adc
sbb
jnp
push
enter
shrb
or
dec
testb
and
les
nop
sub
mov
outsb
test
fs
mov
rol
adc
shrb
imul
fildl
push
data16
lea
push
jge
call
cs
sbb
pop
sbb
test
std
out
push
int3
orb
or
lods
in
aad
xchg
packuswb
push
add
sti
test
push
aam
jbe
lret
inc
xchg
int3
in
cld
push
xor
std
cltd
fwait
pop
out
and
lret
orl
push
jle
enter
mov
cld
into
sbb
nop
scas
push
jbe
clc
lds
xchg
push
aaa
or
cmc
addr16
in
in
pusha
outsl
int
out
sti
fcompp
ds
icebp
movsb
ja
inc
out
mov
into
insb
and
pop
sbb
cltd
jg
or
pop
pop
ljmp
icebp
mov
lock
push
mov
mov
sbb
nop
mov
in
sbb
xorps
inc
stos
xchg
cltd
pusha
adc
adc
sarb
push
cmp
out
push
shrl
cmp
lahf
lret
xchg
leave
les
dec
jae
xchg
inc
rolb
jns
jmp
enter
add
cmp
out
cpuid
sub
pop
jg
push
pushf
xorl
sbb
jnp
mov
and
sahf
push
js
cmpsl
adc
aaa
xchg
cmpsl
cltd
ss
imul
jmp
push
out
sub
push
mov
ds
lds
fxch
out
jmp
sarl
int3
stos
or
adc
or
adcl
ret
cli
icebp
icebp
add
cwtl
repnz
push
jecxz
adc
jnp
push
mov
ret
pusha
mov
ss
pushf
icebp
lahf
iret
mov
lods
adc
ss
lock
addr16
pop
ret
dec
sub
add
jle
jle
inc
push
jb
test
mov
fidivs
mov
pushl
mov
lahf
pop
jbe
or
jmp
leave
lods
aam
std
push
cmpsb
xchg
ja
push
jae
mov
sbb
add
push
and
cli
mov
or
mov
in
and
out
lock
or
push
cmp
scas
pushf
cmpsb
cli
lock
ret
lods
pop
cmp
lds
fmull
mov
dec
jae
xchg
out
sbb
popa
mov
cmp
sub
test
mulb
outsb
pop
ret
pop
data16
mov
push
cmpsl
ret
ret
sti
lcall
mov
mov
icebp
popa
adc
bound
xor
pop
insl
jo
data16
int3
shr
shlb
cld
rorb
jo
and
mov
dec
ss
sub
lds
and
dec
xchg
add
and
and
push
add
ja
fdivr
mov
scas
dec
pop
ror
jnp
pand
cmc
or
imul
or
jl
ljmp
cltd
test
addr16
push
jne
out
mov
popl
in
mov
mov
fsubl
inc
loop
iret
dec
out
daa
fidivl
push
ss
xchg
cld
stc
sahf
push
adc
or
cli
ret
mov
rcrb
loopne
jmp
sub
arpl
cli
hlt
jae
or
cld
add
adc
push
cmp
xchg
setns
or
or
fmulp
lods
test
or
aas
mov
imul
xchg
mov
lahf
sub
clc
movsb
scas
xlat
lret
xor
or
pop
bound
pop
push
dec
repz
pop
repnz
aam
popf
mov
sbb
fcos
dec
mov
fisubl
call
and
adc
scas
dec
addr16
ja
inc
aam
dec
adcl
xchg
mulb
sub
popa
xchg
and
jo
bound
inc
cmp
loope
ret
xor
sar
jecxz
or
add
shll
push
andb
mov
adc
test
lcall
out
repnz
inc
pop
cmp
call
or
out
and
xor
inc
in
pop
sbb
sbb
dec
aas
jecxz
in
xor
pop
xor
push
dec
push
xchg
das
filds
cwtl
mov
aas
cmp
hlt
push
mov
push
push
cmp
xchg
push
pop
nopl
ret
loopne
mov
xchg
lea
stos
jl
aas
pop
insb
pop
xlat
fstpt
aaa
mov
sbb
out
imul
adc
mov
std
add
add
jg
sub
dec
movsb
popf
mov
cli
fistpll
cmp
dec
pop
push
in
jl
push
add
das
adc
mov
data16
xor
push
inc
xchg
pop
jbe
jbe
rep
js
or
mov
sub
ja
clc
xorl
jl
mov
popf
mov
pusha
pop
or
mov
and
cmp
ljmp
sbb
scas
adc
cmc
lret
xchg
repnz
movsl
sbbb
jmp
lret
ljmp
adc
add
pop
inc
xor
dec
cmp
xchg
or
cmp
loop
cwtl
inc
jnp
adc
nop
movsb
lds
pop
cmp
out
fcmovb
cltd
pop
call
sub
stos
sub
out
mov
sub
or
xor
sar
test
mov
xorl
xchg
out
dec
adc
out
popa
lahf
lret
sahf
out
mov
fwait
and
pop
xchg
xor
js
pop
lret
imul
idivb
pop
xchg
pop
dec
sbb
add
scas
add
adc
or
stos
ss
stos
add
push
insl
push
sbb
lcall
dec
add
stc
fldt
xlat
xchg
sarl
fmuls
cmc
iret
cmpl
sahf
fcom
mov
out
sbb
js
xor
les
pop
add
adc
nop
pop
sarl
pushl
lea
lods
lret
addr16
sub
fs
push
mov
xchg
enter
cmp
add
pop
mov
icebp
outsl
add
clc
jb
enter
mov
mov
cmp
in
loop
iret
adc
mov
enter
dec
dec
and
mov
pop
push
les
adc
sbb
stos
inc
cmpl
dec
inc
lods
inc
push
inc
cmpb
addr16
test
xchg
dec
arpl
insb
mov
pop
stos
or
std
orl
or
fmull
fs
into
inc
lods
in
mov
jo
adcb
in
fstl
dec
imul
and
dec
sbb
push
mov
ljmp
daa
or
lahf
std
jge
pop
inc
outsb
testb
cmpsl
mov
lods
out
dec
jmp
xchg
clc
xchg
add
mov
insb
call
daa
and
sub
jae
outsb
push
xlat
mov
or
in
pop
in
adc
scas
lcall
fistps
in
shrb
cmpsb
cmpsl
inc
stos
leave
mov
scas
lods
mov
pop
jne
and
testl
mov
bound
mov
call
dec
cmp
cs
out
mov
dec
lods
popa
push
imul
xchg
dec
aad
data16
cmp
jge
sti
xlat
cmp
in
ret
shrl
out
pop
sarb
sbb
popf
inc
pusha
push
aad
bound
xchg
lds
fstps
xchg
pop
cmpsb
inc
or
xchg
inc
ret
mov
addr16
mov
xorl
imul
movb
mov
adc
jnp
stos
adc
inc
mov
fiaddl
mov
push
cltd
ss
pop
xor
mov
add
mov
loopne
call
jl
cld
and
xchg
mov
add
push
cmpsl
cmp
sub
andb
ljmp
out
inc
xchg
loop
je
mov
lea
insl
mov
mov
jle
jb
pop
jnp
jae
fnstcw
adc
insb
das
inc
mov
add
add
adc
mov
repz
movsb
or
inc
sbbl
loopne
adc
mov
inc
lods
je,pn
pop
je
daa
loopne
popa
sahf
enter
sar
rorl
cld
int
or
ljmp
mov
movsl
add
fwait
and
add
dec
lea
call
sbb
push
es
sub
outsb
int3
inc
xchg
aad
push
fstpt
xchg
dec
jecxz
xchg
push
lahf
jmp
xor
movsl
in
outsb
mov
icebp
rcll
in
jecxz
jmp
push
xchg
xchg
idivl
pop
cmpb
in
dec
les
dec
push
mov
jl
push
mov
xor
stc
cmpsb
xchg
or
stc
call
aas
push
adc
rcrl
push
add
sbb
loope
and
test
sub
test
arpl
dec
xchg
insl
lods
mov
dec
push
insb
repz
jae
xchg
je
jp
call
jecxz
out
and
jo
jnp
ljmp
mov
inc
in
cmpsb
popf
or
jmp
xchg
and
das
jnp
cmc
call
aaa
xor
jecxz
jmp
fs
dec
js
jmp
pop
mov
sub
mov
inc
shr
loop
mov
in
andb
or
mov
das
rcrb
mov
add
mov
rolb
inc
or
leave
outsb
hlt
sub
ljmp
or
mov
cmp
ljmp
sub
std
pop
pop
ljmp
mov
fnstenv
nop
dec
sub
je
inc
and
mov
xor
jno
sbbl
and
xchg
fisubrl
mov
push
lret
push
cmp
mov
movsl
mov
and
jnp
dec
pusha
push
fcomi
cmpsl
cmp
mov
inc
xlat
jle
lahf
outsl
ds
fdivrl
xchg
and
loopne
cmp
sub
adc
push
addr16
not
rorb
aas
cmp
js
sub
in
jl
push
outsb
shr
fildl
jge
lock
jns
stos
cmp
lret
mov
mov
repz
insb
mov
push
hlt
rcrb
ret
or
push
dec
mov
sub
insb
lret
icebp
add
xchg
or
xor
mov
xchg
mov
pop
pusha
cmp
mov
xor
xchg
test
roll
jle
jae
test
dec
adc
or
mov
js
pop
cmp
sbb
push
dec
pop
shrl
movsb
xchg
scas
int3
in
popf
push
dec
push
add
dec
mov
popa
mov
pushf
pusha
push
fsub
pop
test
movsb
mulb
jmp
ds
mov
in
out
or
jbe
daa
and
cmp
jecxz
notb
out
popa
pavgw
gs
adc
or
test
or
jmp
xchg
sahf
mov
imul
sbb
int3
scas
cwtl
pushf
imul
pop
dec
xor
lcall
bnd
mov
cmpsb
ret
mov
xlat
or
push
movsl
jl
mov
mov
fcmovb
js
mov
push
pop
pop
add
aad
data16
js
mov
cmp
inc
mov
dec
sub
jne
mov
divb
loop
cmpsl
out
dec
xor
shrb
arpl
add
xchg
mov
mov
jae
test
mov
gs
mov
rcl
inc
push
cwtl
mov
dec
pop
insl
jnp
test
es
daa
das
dec
popa
pushf
popa
sarb
mov
or
scas
mov
ss
movsb
mov
rcr
andl
push
mov
test
mov
cmpsl
jge
adc
xchg
sub
daa
shld
nop
xor
adc
dec
lahf
sub
data16
add
xor
cli
jns
dec
jl
xchg
or
or
out
xchg
loope
repnz
sub
sti
sbb
jle
mov
add
test
std
ja
jns
xchg
mov
sbb
mov
mov
push
jl,pn
or
dec
nop
pop
in
or
cmpsl
push
sti
inc
ljmp
sub
pop
jb
jmp
xchg
iret
inc
push
sti
mov
sub
mov
popa
push
stos
sbb
out
inc
rorl
jp
fs
and
mov
movsb
add
int
fs
adc
push
xchg
add
movsb
push
rcll
mov
add
and
fnstcw
and
gs
mov
sbb
add
inc
addl
rcrb
or
sub
add
loop
lods
mov
jnp
mov
mov
in
jmp
jg
int
test
nop
cld
fwait
push
popa
mov
int
out
cmc
ds
daa
aas
cmp
loope
pop
subb
call
xchg
xchg
push
push
inc
pop
sti
push
mov
jns
dec
std
aaa
mov
inc
adc
sub
push
dec
inc
fcomip
and
mov
mov
add
lds
cwtl
push
in
sar
aam
lock
int
xchg
lock
sti
test
push
mov
nop
rcrb
leave
mov
xor
jo
xchg
out
aaa
push
lea
rol
sbb
hlt
sub
lcall
xchg
xchg
sbbb
mov
in
sti
jno
lret
faddl
xchg
scas
in
bound
xchg
jne
or
dec
mov
and
adc
jo
cld
push
or
scas
mov
je
ja
lahf
js
cltd
inc
cmpsl
je
or
in
negb
jg
std
test
ret
xor
in
jle
mov
push
int3
xor
cmpsb
imul
jl
nop
add
or
and
mov
daa
bound
add
and
andl
sub
cmp
add
out
or
insb
pop
mov
popa
int3
loope
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
mov
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
