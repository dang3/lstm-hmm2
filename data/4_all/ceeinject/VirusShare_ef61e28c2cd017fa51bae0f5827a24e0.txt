call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
inc
cmp
loopne
sub
repz
les
jno
pusha
jb
add
adc
and
xor
ret
icebp
loop
repnz
addb
push
inc
inc
jb
bound
adc
adc
bound
xor
push
rcl
dec
loopne
nop
mov
mov
xor
cmp
imul
ret
mov
mov
sbb
xchg
push
inc
inc
call
sbb
xchg
lahf
addr16
insb
test
ret
test
outsb
cmp
aad
and
or
in
add
sarl
and
mov
clc
sbb
cmp
xlat
es
lahf
ljmp
loop
and
add
ret
or
nop
subb
mov
mov
and
sub
xlat
aas
cmp
cmpsb
mov
mov
mov
inc
and
push
int
add
outsl
jp
gs
adc
dec
scas
inc
xchg
cmp
add
in
xor
and
lock
nop
addb
push
les
jo
pusha
cmp
cs
xor
and
test
pushf
mov
in
test
repnz
pop
push
add
fs
dec
pop
arpl
xchg
xlat
cmc
in
in
mov
fcomp
add
sub
adc
pusha
inc
aas
pop
cmpsb
xchg
out
xchg
xchg
mov
xchg
shl
adcb
inc
inc
push
jo
pusha
jb
add
adc
and
xor
ret
lock
repnz
addb
push
inc
inc
push
jo
pusha
jb
add
adc
and
xor
ret
jge
mov
jecxz
mov
inc
sbbb
repz
fcoms
pusha
push
add
mov
mov
mov
pop
and
movsl
imul
arpl
push
inc
mov
xchg
fildl
loop
jle
cmp
bound
cmpsl
sub
ljmp
pop
or
xchg
popf
loope
addr16
imul
movsb
movsl
adc
xor
fstpt
testl
std
or
mov
dec
lock
aaa
ret
bound
inc
xchg
dec
lock
push
rclb
int3
sub
mov
xchg
adc
or
sub
dec
push
mov
jae
mov
lahf
ds
cld
popa
jnp
xchg
jo
push
mov
and
cmp
stos
mov
outsb
int
leave
or
mov
jp
es
push
mov
les
outsl
jg
mov
xor
inc
rcrb
dec
es
adc
pushf
loope
xchg
hlt
scas
cs
lea
lret
mov
inc
xchg
mov
jae
xor
dec
pop
lds
and
ret
dec
cmp
sub
lods
int
rclb
adc
mov
pop
push
mov
cld
stos
fdivs
jae
adc
dec
push
inc
or
mov
lock
mov
pop
sbb
xchg
shrb
mov
jne
pushf
xlat
jl
xor
push
jmp
and
ret
xchg
adc
mov
pop
pop
fwait
xor
addb
sub
push
out
leave
out
icebp
pop
scas
mov
jg
daa
ss
cmp
pop
xchg
addr16
pop
fwait
movsb
lock
std
test
xor
pop
into
dec
in
pop
cwtl
es
fwait
push
mov
adc
xchg
pop
or
dec
in
jb
jmp
push
push
cld
mov
pop
fbld
in
in
js
shrl
notb
xchg
mov
push
jo
sbb
sbb
in
andl
cmp
loop,pn
add
cwtl
mov
sub
jae
mov
sub
sub
aam
cmc
lret
push
mov
adc
xor
fs
xchg
jb
repnz
push
ds
dec
xchg
and
pop
leave
pop
pop
in
and
cmp
pop
cs
stos
outsb
stos
xchg
mov
add
xchg
sub
mov
repz
sub
pop
lock
pop
dec
adc
jle
stos
xchg
ja,pn
sub
arpl
popf
and
pop
push
sbbb
sub
popa
insb
and
in
fildl
gs
incl
popa
xor
test
iret
cmp
pop
and
jp
inc
mov
cmc
dec
dec
test
xchg
and
mov
repnz
dec
dec
xor
je
sbb
mov
or
adcb
ja
inc
cltd
adc
sub
ss
cmc
mov
inc
loope
ja
dec
sbb
pop
icebp
pop
lret
repz
stos
mov
ss
push
rcrl
icebp
shrl
push
push
xor
sub
arpl
xor
sbb
mov
decb
mov
ljmp
pop
adc
cmp
jle
negb
gs
inc
cltd
push
sub
mov
push
jne
outsl
fs
lcall
pop
stos
mov
dec
scas
mov
icebp
dec
push
pop
roll
movl
adc
or
mov
sbb
cmpsl
jno
mov
mov
and
rcrl
push
movsl
adc
mov
sbb
add
or
insb
add
pop
jae
sub
mov
stos
lret
aaa
xchg
lret
mov
cmp
push
push
sbb
shr
add
pop
je
call
in
sbb
daa
nop
dec
mov
pop
xor
jb
aas
movsb
into
mov
mov
bound
fwait
enter
shlb
fsubl
test
lods
fisubrs
inc
test
test
faddp
daa
faddl
push
stos
sbb
add
movsl
adc
push
data16
push
ljmp
adc
xchg
mov
jmp
push
mov
jnp
mov
pop
shrl
jns
test
ss
push
adc
fs
inc
dec
pop
adc
mov
mov
seto
xchg
jns
cli
cld
cmpsb
add
jecxz
loope
cs
dec
stos
ljmp
setb
mov
arpl
jne
sub
inc
repz
repnz
out
lods
cmpsl
leave
bound
test
pop
aaa
pop
xor
sbb
insl
cli
aaa
push
mov
or
mov
pop
cmpsl
mov
add
lahf
dec
adc
dec
cmp
and
rcr
jl
outsb
pop
nop
sbb
lods
and
sub
fdivrl
loopne
pop
and
in
jg
sbb
ja
outsl
dec
sub
imul
out
cmp
iret
xchg
push
jmp
enter
adc
xor
idiv
cmp
pop
loope
dec
and
adc
cld
pop
xor
mov
xchg
pop
mov
bnd
das
in
into
push
cmp
inc
and
int
pusha
std
add
jmp
dec
stc
or
fs
fisttpll
fwait
sbb
xchg
jl
xor
dec
call
mulb
sbbl
outsl
cmp
pushw
mov
pushf
sub
psubsb
inc
aas
test
mov
adc
imul
loopne
int
stos
jmp
cli
loope
rcrb
daa
cmp
int3
add
xchg
or
clc
jmp
adc
lods
mov
fdivr
add
std
mov
xchg
into
lcall
es
and
pop
fidivrs
lea
cmpl
inc
lods
sarb
in
sbb
and
repz
inc
push
popl
bound
dec
xchg
sbb
vorpd
mov
fistl
je
test
std
sub
insl
pop
xchg
cmp
repnz
clc
push
xchg
loop
shlb
xchg
test
sbb
add
subb
nop
add
sub
pop
sahf
lret
je
dec
jae
testl
push
mov
test
lods
out
mov
mov
es
push
fadd
pop
inc
mov
call
and
icebp
sbb
xchg
cmp
jnp
add
inc
cs
mov
xor
mov
push
sbb
subl
push
imul
loopne
mov
les
out
lods
adc
pusha
add
xor
test
add
mov
inc
pop
dec
push
pushl
xor
mov
cmpl
xchg
mov
stc
jo
and
xchg
sahf
mov
bsr
and
pushf
pop
faddp
pop
lds
mov
lods
or
mov
roll
adcb
push
leave
sbb
mov
cld
xor
pop
outsb
mov
lret
getsec
dec
xor
push
pop
mov
ss
mov
jae
and
xchg
fs
es
outsl
add
mov
shrb
xchg
lret
mov
xchg
push
cmpsb
std
and
mov
ret
push
pop
inc
loop
mov
ret
loope
cli
push
mov
call
insb
int3
jle
or
fildll
xchg
lods
stos
pop
mov
inc
sbb
sbb
fadds
sub
dec
cld
and
xchg
adc
push
test
rcl
test
cs
push
jnp
stos
push
cmp
sub
scas
icebp
push
sbb
fsts
mull
jecxz
fwait
dec
jb
lock
sub
sub
xlat
lahf
xor
add
addr16
inc
nop
mov
pop
mov
cmp
stos
mov
xchg
sub
sbb
andl
cs
mov
inc
in
pop
aad
jle
mov
and
ret
test
bound
pop
fmuls
xchg
xor
inc
out
inc
push
shr
jmp
sbb
mov
scas
xlat
mov
addr16
add
jb
orb
jb
add
mov
shll
negb
sbb
les
mov
or
lock
xchg
pop
clc
les
sahf
pop
sbb
pop
ljmp
push
sub
add
maskmovq
cmp
rcrl
test
mov
xor
negb
cmp
and
push
ret
fistl
dec
add
fs
jg
or
out
dec
arpl
and
and
pop
lock
mov
mov
pusha
and
cmp
pushf
add
xchg
mov
push
sbb
ljmp
xor
adc
bound
and
sbb
ss
pusha
lahf
jbe
popa
ret
fcoms
or
push
and
pusha
mov
das
push
in
mov
push
jge
push
outsl
divl
dec
fidivrl
iret
pop
or
mov
scas
and
cwtl
lock
dec
outsb
repz
dec
shll
aas
xor
and
sub
inc
xchg
add
mov
sbb
pop
add
std
inc
ja
outsb
dec
sbb
imull
cmp
pop
mov
push
mov
push
pusha
insb
pop
mov
inc
mov
cld
jns
mov
fwait
and
lea
into
dec
jl
adc
sbb
inc
xlat
lret
xor
adc
jnp
or
mov
sub
pop
mov
push
out
iret
leave
pop
ss
cmc
sbb
pop
add
pmullw
inc
outsl
push
mov
jmp
xor
mov
mov
addb
add
push
xchg
xchg
cmp
inc
push
lahf
inc
sti
push
dec
push
push
rol
lds
movups
in
sbbb
mov
lods
mov
std
mov
or
add
jmp
sbb
sbb
sub
mov
shll
daa
inc
aad
sub
ficomps
sbb
hlt
in
push
inc
add
or
fcompl
popa
icebp
icebp
lock
jbe
add
xor
dec
pop
push
mov
mov
mov
xchg
jo
xor
mov
in
ffreep
in
lret
hlt
sbb
mov
cmpsl
mov
pop
int
and
xchg
adc
hlt
mov
fdivrs
mov
fcomps
hlt
xchg
andb
adc
movsl
lahf
decl
add
imul
mov
insb
stos
shll
xchg
test
mov
dec
ljmp
adc
inc
adc
add
pop
lcall
jmp
sub
lcall
out
fstl
pop
push
fs
test
cs
imul
pop
das
adc
scas
inc
scas
fidivrs
jle
pop
mov
pop
or
pop
sbb
aad
xchg
push
mov
popa
sti
aam
jae
scas
add
lods
shr
mov
repz
jmp
stos
mov
xchg
sarb
adc
cwtl
add
rorl
add
in
fs
cmp
pop
fwait
cmpsl
addr16
sarl
push
outsl
sbb
cmp
inc
or
push
adc
mov
inc
insb
andb
and
rcr
pop
xor
mov
test
mov
repz
mov
push
sbb
or
adc
fisttps
lret
movsl
mov
outsb
pop
aam
adc
jecxz
pop
pop
dec
xor
repz
cmp
inc
ja
imul
pop
into
fcomip
jne
imul
imul
jae
mov
xor
cli
and
movsl
aam
imul
popa
jno
popf
fwait
pop
push
inc
cmc
and
push
into
sub
dec
rcr
mov
fimuls
pop
ja
das
push
push
jecxz
jae
jl
ljmp
es
dec
vpshufhw
jl
ret
ficomps
jae
push
insb
int
iret
stc
test
push
popa
pop
or
movsb
subb
stos
push
mov
ret
push
mov
inc
lcall
movsb
push
pop
popf
test
adc
loop
push
roll
xcrypt-cfb
cmpsl
mov
push
int
fs
idivb
jb
mov
push
out
adc
roll
in
aas
cmp
mov
inc
mov
cmpsb
push
pop
or
mov
mov
or
in
push
pop
stc
sbb
push
pop
cltd
fwait
and
sbb
adc
pusha
imul
dec
lahf
or
lahf
fxam
out
pushf
addr16
jae
cmpsb
je
jno
movsb
pop
fdivl
mov
dec
xor
cld
rol
inc
xlat
dec
push
xchg
lods
sub
jb
sbb
xor
xor
lods
cmc
xor
dec
ret
and
and
adc
fdivl
cmpsb
or
lea
std
add
pop
mov
add
shll
mov
sub
sar
mov
outsb
mul
lcall
xchg
mov
jg
xchg
mov
pop
xchg
sub
cli
insb
jb
push
mov
xchg
outsl
push
jb
mov
ja
call
repz
xchg
mov
xor
sub
shl
jbe
jno
outsl
push
sub
xchg
cmp
mov
mov
push
add
push
scas
inc
xchg
mov
xor
jb
xchg
ja
xor
popf
js
mov
adc
mov
sbbl
test
sub
cmpsl
enter
pop
mov
inc
rcrl
out
inc
xchg
adc
inc
loope
xor
lea
nop
insl
sbb
jl
clc
push
loopne
xchg
inc
stos
fbld
dec
jno
jnp
xor
imul
pop
mov
xchg
loopne
imul
data16
loop
icebp
lds
jae
mov
stos
push
xor
mov
test
xlat
sbb
lds
pop
dec
lret
adc
mov
add
fnstenv
jmp
outsl
mov
mov
cmp
inc
hlt
roll
ds
cmp
xchg
movsl
cmp
push
inc
push
sbb
insb
push
adc
std
aam
or
mov
pop
lods
sub
lcall
pop
inc
lea
outsb
or
or
xor
and
sbb
or
popa
rolb
and
das
mov
jge
xor
jl
das
imul
cmp
mov
inc
pop
int3
push
inc
adc
adc
imul
stos
xor
repz
mov
sbb
mov
movsb
add
xchg
add
and
adc
mov
sub
xchg
inc
shlb
mov
jbe
mov
sub
lret
jb
in
sbb
popa
ljmp
push
inc
or
adc
inc
dec
mov
in
mov
or
roll
xchg
xchg
das
cli
notb
mov
cld
mov
push
insb
sub
fsubrl
dec
imul
dec
mov
cmpsb
cs
ret
cmp
bound
push
or
xrelease
xchg
mov
xchg
xchg
push
roll
lock
imul
xchg
outsl
mov
pop
arpl
xor
cmc
lcall
hlt
inc
aad
xor
adc
mov
je
sbb
inc
fsts
cmp
dec
and
test
jo
inc
popa
dec
std
insb
jno
jo
jb
movaps
je
xchg
sub
mov
insl
push
rcrb
outsl
mov
gs
dec
push
lret
jmp
push
stos
sar
lcall
inc
rcrb
jmp
enter
dec
shlb
push
mov
cs
sbb
adc
mov
jo
sub
popf
jmp
sub
in
add
in
jecxz
and
call
in
adc
int
cmpsl
mov
jge
or
pop
add
xor
pop
out
jbe
repz
mov
ljmp
inc
in
dec
sbb
rep
test
dec
xor
adc
mov
xchg
loopne
inc
test
inc
scas
or
ja
mov
add
cmpsb
xchg
or
insl
sub
push
pushf
imul
xchg
xchg
data16
jno
rcll
mov
sub
push
test
test
pop
in
scas
mov
sahf
or
cmp
xchg
aas
xor
addb
cmp
fwait
inc
xchg
outsl
jb
sub
pop
out
lock
pop
adc
rorl
mov
pop
mov
icebp
sarb
add
mov
xchg
stc
nop
sarl
push
gs
or
mov
pusha
out
stos
mov
out
inc
test
sub
into
enter
imul
add
ljmp
xchg
cmovno
xor
xlat
xchg
in
bsr
fimuls
fisubrs
jne
mov
cmpsl
xchg
insl
xchg
in
and
dec
adc
xchg
or
pop
sub
ret
add
ret
iret
hlt
dec
xchg
repz
lahf
scas
insb
lods
jns
mov
fldt
subl
cmp
testb
mov
fsubrs
xchg
fdivrp
sbb
and
sahf
cld
xchg
pop
lods
test
lods
add
mov
je
out
jecxz
cmp
cmp
js
push
scas
xchg
xchg
and
out
in
add
push
shll
sarl
sarb
nop
xchg
insl
dec
xor
or
fwait
push
lods
add
inc
cmc
mov
insl
icebp
arpl
outsl
cmp
jns
sti
xor
adc
pop
mov
push
mov
rep
fcmovnbe
fs
pop
insb
loop
loop
lock
bound
fwait
inc
pop
sti
ret
ja
repnz
xor
adc
push
cltd
push
push
in
dec
pop
cmp
cmp
pop
dec
cmp
cmp
clc
xor
adc
push
inc
dec
daa
leave
cmpsl
xor
cltd
lods
xor
sbb
dec
mov
fnstcw
scas
testl
jmp
ret
into
mov
xchg
and
inc
popf
mov
out
sub
sub
cmp
icebp
inc
js
xchg
inc
xor
jne
jl
fwait
mulb
mov
bound
lahf
jns
aas
mov
fmuls
cld
mov
jno
rol
int
scas
mov
pop
cmpsl
rcl
fs
insl
cmp
mov
adc
sub
pop
movsb
sbb
mov
push
test
loopne
cwtl
aaa
push
cmp
int
mov
divb
lret
xchg
mov
insl
cld
mov
ret
cmpsl
and
icebp
ds
cmpsb
inc
je
icebp
ljmp
mov
mov
cltd
jno
int
cs
mov
mov
sub
cld
fcomi
fidivrl
push
aaa
jbe
pop
xor
cwtl
popf
jbe
fidivs
mov
dec
jecxz
cmp
fdivl
div
aam
pop
jb
xor
dec
sti
cwtl
inc
mov
shrb
xor
cmp
sub
gs
test
scas
cld
adc
adc
add
or
push
mov
daa
jns
cmp
xor
sub
cmp
dec
cmp
call
push
sbb
push
orb
sbb
mov
pop
mov
int3
stos
out
fwait
call
mov
lea
mov
icebp
jo
into
push
xor
push
xorl
mov
sub
out
push
jno
iret
nop
cmc
mov
movsl
nop
sub
stos
jge
iret
int3
movsl
dec
mov
sbb
jg
sub
mov
push
jae
daa
mov
js
jbe
pop
xchg
push
dec
mov
mov
push
popf
das
test
lret
ret
push
jge
push
negb
pop
mov
jle
aas
or
jo
xchg
cmp
sti
inc
icebp
ljmp
mov
int
push
or
outsl
mov
pushf
push
push
aaa
les
push
push
or
or
ret
jmp
std
loop
call
subl
fcomps
shrb
push
repnz
loope
add
shrl
inc
sbb
and
xchg
jmp
pop
stc
pop
lods
pop
lods
mov
aam
jbe
push
out
out
aas
mov
fstpt
lds
movsl
shlb
mov
sub
call
or
xor
adc
adc
es
stos
xchg
mov
rcrl
mov
addl
jg
inc
je
js
out
lods
mov
pop
dec
mov
hlt
xor
outsl
test
push
pushf
cmp
clc
in
insl
pop
stc
sbb
push
xlat
or
orl
xchg
fldenv
jmp
dec
popa
mov
call
iret
xor
insb
stc
ljmp
sbb
xor
add
cmp
pop
jmp
sub
mov
imul
jmp
outsb
fwait
inc
ljmp
loopne
mov
mov
or
outsb
jl
getsec
sbb
add
pushf
push
je
jecxz
or
cmp
push
add
fcompl
iret
stc
mov
int
cli
repnz
pop
and
lock
inc
xchg
daa
incl
adc
int
jno
daa
mov
imul
sti
in
imul
sahf
in
fiaddl
stos
pop
jbe
push
lret
fnstcw
fstpl
test
pushf
jmp
outsb
mov
xor
int
mov
arpl
imul
sub
mov
xor
or
fcompl
ret
push
jmp
sahf
sbb
arpl
mov
stc
mov
mov
dec
sarl
or
dec
andl
adc
addb
push
inc
inc
push
jo
pusha
jb
add
adc
and
xor
ret
lock
repnz
addb
push
inc
inc
push
jo
pusha
jb
add
adc
and
xor
ret
lock
mov
mov
push
jo
pusha
jb
add
adc
add
xor
ret
icebp
loop
pause
addb
push
mov
pusha
add
iret
fstp
int
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
aas
shrl
aaa
enter
in
outsl
and
inc
scas
xor
and
incl
out
stc
pop
loope
sarl
shrl
pop
mov
outsl
and
inc
scas
xor
inc
iret
adc
popa
xorps
pop
das
mov
jg
outsl
jno
or
scas
adc
jb
mov
rcll
mov
cmp
subb
bound
ljmp
sub
jmp
fcompl
mov
ja
jo
mov
mov
nop
scas
mov
ror
inc
inc
cmp
rcrb
xor
jo
jg
push
into
fisubrs
mov
cltd
mov
pop
dec
nop
lock
inc
mov
xor
bound
lock
and
push
in
mov
xor
scas
inc
inc
outsl
ret
xor
je
je
loope
cs
fs
cmp
pop
ret
js
mov
cltd
push
scas
inc
scas
mov
and
push
jmp
out
ret
psrlw
lods
das
mov
in
xchg
jg
outsl
sbbl
scas
push
fistpll
iret
adc
xchg
push
scas
inc
fbstp
aam
xorb
aas
adc
and
add
and
pop
mov
inc
scas
icebp
pop
imul
std
or
outsl
dec
out
cli
xor
sub
movsb
fs
mov
pop
mov
outsl
jno
popa
push
mov
and
adc
add
icebp
pop
loope
sarl
shrl
pop
mov
outsl
jno
popa
push
mov
and
adc
add
icebp
pop
and
push
icebp
add
test
jbe
sahf
push
sub
lret
mov
cmp
ret
xor
mov
dec
add
shrl
stos
fidivrs
test
sbb
lock
sub
adc
pop
notb
bound
out
pop
pop
xlat
pusha
test
adc
repnz
jbe
imul
cmc
daa
sub
movsl
inc
subl
dec
add
mov
test
into
adc
rcl
sarl
aam
xchg
xchg
sub
push
inc
push
and
sub
and
adcl
sub
dec
jg
lahf
sub
add
test
and
or
loopne
cmp
sbb
push
ss
cmp
cmpsl
xchg
stc
add
or
int
pop
xlat
lcall
add
insb
je
add
jecxz
insl
or
leave
pop
jns
mov
push
cld
xor
adc
add
out
xchg
test
decl
scas
insl
hlt
mov
jp
dec
or
int
dec
test
lods
jmp
test
sbb
mov
fisubs
enter
cld
adc
xor
pushf
mov
rcr
aaa
mov
psubq
les
jbe
or
sub
push
sub
outsb
xchg
imul
mov
shlb
shlb
fnstcw
rol
xor
pop
or
cwtl
mov
or
hlt
add
xor
imul
inc
sbb
adc
lds
aaa
mov
adcl
add
mov
lret
jbe
fistpll
sahf
fdivl
nop
dec
iret
pop
mov
or
jp
pop
dec
xchg
in
outsb
or
cltd
shll
push
rcrl
hlt
call
lods
fld1
jb
pop
rcrl
imull
out
repnz
and
and
std
daa
mov
sbb
into
jecxz
dec
and
ja
jbe
jne
mov
hlt
push
sti
xor
test
xchg
int3
fbld
and
inc
jno
data16
shlb
arpl
stc
mov
pop
xchg
lret
dec
hlt
adcb
in
sbb
enter
mov
fucom
mov
dec
fisubrs
aaa
jb
push
mov
adc
add
sbb
data16
int
xor
push
push
outsb
aam
dec
cld
inc
pop
mov
imul
push
add
pusha
ds
jne
inc
out
inc
in
jns
divb
rcr
add
outsb
xor
in
lcall
push
mov
dec
jo
insl
pop
lcall
mov
or
pop
stos
dec
push
in
shl
enter
mov
push
mov
mov
pop
ss
dec
push
inc
aam
out
gs
jb
loopne
add
and
push
sarl
lea
shlb
cmp
addr16
dec
test
or
mov
add
sbbl
arpl
inc
and
cmp
gs
add
sub
mov
inc
and
pop
jmp
orb
or
or
js
or
dec
movsb
sahf
ds
popf
orb
lods
mov
mov
inc
andl
insl
xlat
add
in
out
mov
push
test
xor
xchg
scas
inc
jl
sbb
cmp
divb
mov
push
aaa
jp
testl
rorl
xchg
lods
sub
and
mov
icebp
and
mov
cmpsl
pop
les
mov
inc
sbb
ss
in
xlat
push
inc
jmp
sbb
clc
mov
cmpl
addr16
js
mov
inc
cmc
or
lock
jno
push
dec
mov
outsl
popf
insb
pop
xchg
je
aas
vpavgw
cs
fsub
insl
das
das
or
lods
sbb
dec
testb
adc
jae
mov
jmp
pop
shll
ds
xchg
outsb
mov
arpl
cmp
inc
jb
cmpsb
push
add
bound
sbb
imul
movsl
lds
std
mov
pop
xlat
push
shlb
mov
loope
out
leave
lcall
lods
pop
test
lods
mov
je
sti
lods
incl
mov
push
sahf
xchg
or
xor
insb
inc
dec
adc
xchg
pop
xchg
mov
negl
mov
adc
sbb
out
sti
inc
in
into
je
sti
in
mov
mov
jbe
xor
add
push
lahf
jmp
ror
clc
push
and
sub
mov
push
rcl
xor
mov
sub
test
mov
sbb
jg
or
jecxz
jae
pop
xchg
cltd
jmp
imul
mov
pop
jmp
jno
mov
add
jg
jbe,pt
fldl
shrl
push
jmp
out
ret
jecxz
jae
adc
jmp
xlat
nop
push
fbld
stos
push
push
ljmp
lcall
mov
icebp
and
dec
jne
xchg
repnz
iret
xchg
dec
out
mov
in
mov
in
aaa
orb
addr16
inc
scas
test
jbe
mov
xchg
out
enter
cmc
jg
loopne
sub
mov
faddl
ja
test
dec
pop
pop
mov
jge
inc
mov
cmp
out
sbb
int
cmpb
xor
in
jnp
jae
js
inc
push
pop
cmp
push
cld
sbb
cmp
xchg
and
add
insb
adc
sub
dec
sub
ja
pusha
into
lods
cmp
loopne
pusha
mov
cli
jp
in
loopne
jae
aas
cmp
mov
jecxz
sbb
pop
mov
imul
jb
clc
sub
dec
cli
mov
or
cmpl
xchg
adc
xor
cmp
arpl
or
dec
pop
int3
ret
mov
lock
daa
lcall
mov
and
push
fst
push
in
push
iret
imul
mov
add
mov
sub
dec
std
jne
cmc
fcompl
sub
push
cs
lds
fisubrl
and
mov
fdivrl
push
or
out
xchg
or
push
popa
jg
jp
out
or
cmp
outsb
add
pop
mov
loop
push
out
nop
imul
fsubp
scas
push
clc
loope
jp
dec
sbb
xchg
in
call
into
stc
adc
sub
popf
xchg
pop
add
shlb
cmc
or
adc
int3
xchg
fwait
mov
sti
mov
sbb
les
inc
out
adc
pop
mov
fmuls
pop
iret
divl
xor
xchg
xor
sbb
rep
cmp
add
xor
xor
mov
cmp
movsl
sahf
addr16
es
fbld
out
mov
ja
cs
mov
inc
push
ror
or
int3
jbe
fdivr
aaa
cmp
and
fcomp
je
das
cltd
lods
shrl
pop
loopne
add
iret
xor
sub
xor
sub
cmp
dec
dec
xchg
dec
int
dec
ss
loop
mov
cs
fcomip
cmp
sbb
imul
sub
ja
push
or
xchg
dec
lock
cmp
sbb
pop
loope
mov
clc
ret
stc
loop
dec
xor
sahf
xchg
adc
push
arpl
push
or
cmpsb
cmc
or
insb
icebp
mov
xchg
in
outsl
mov
sbbb
and
ss
inc
aas
fisubl
testl
and
mov
or
cmp
iret
pop
mov
mov
cmp
out
xor
call
jae
adc
les
mov
movsl
pop
bsf
push
adc
shl
dec
nop
in
lcall
ja
test
fs
xchg
rcrb
movsl
movsb
paddusw
cmp
aad
cmpsb
stc
xor
call
scas
pop
loop
pusha
mov
jl
cmpsl
es
test
nop
jo
sub
jno
fistps
lods
sub
jno
jbe
mov
dec
jmp
add
xchg
add
out
into
insl
sbb
jns
dec
sub
sub
cltd
xor
mov
std
mov
arpl
movsl
mov
lret
mov
das
jecxz
inc
dec
into
xchg
addl
inc
movsb
cmp
inc
cmpsb
lret
adc
adc
mov
push
push
imul
mov
add
psubq
shll
daa
adc
jno
inc
dec
mov
mov
sbb
rclb
dec
lds
scas
mov
and
orb
push
loopne
xchg
pusha
pop
aaa
adc
stc
das
xchg
outsl
push
sarb
inc
jo
cmp
jo
push
pop
xchg
jnp
add
clc
pop
sub
xchg
imul
and
adc
jmp
xor
cwtl
add
pop
xchg
fnsave
aas
shl
mov
jnp
test
mov
and
mov
lret
or
inc
pushf
mov
out
adc
xlat
cwtl
fcomp
or
dec
stos
inc
out
jae
sahf
cwtl
cs
enter
xchg
fisubs
xor
or
stos
movsl
mov
cmp
cmpsl
jo
or
add
lods
int3
shr
mov
stos
adc
std
lods
sub
xchg
xchg
add
push
in
push
push
in
out
jne
decl
lods
push
aad
lods
in
icebp
lea
push
xor
xor
mov
scas
test
jle
iret
stc
and
sub
ja
dec
dec
xchg
jno
mov
jge
mov
push
xlat
lahf
je
jp
iret
out
inc
dec
mov
xchg
int3
stc
mov
dec
sbb
pop
pop
loope
cmp
ds
cmp
pmulhuw
or
xchg
test
sub
mov
xchg
les
xchg
aad
inc
test
mov
enter
adc
andl
xchg
mov
and
shlb
xchg
jne
fildll
sub
fisttpl
clc
mov
cli
cltd
pop
inc
cwtl
fiadds
inc
mov
sub
dec
lock
or
iret
push
jb
mov
imul
xchg
sahf
add
or
or
cmpsl
add
in
mov
xor
lods
cwtl
cmpsl
push
cmpsb
pop
jnp
shll
xchg
xchg
xchg
pop
cmp
push
imul
cmp
mov
sahf
pop
inc
aaa
add
sub
mov
test
inc
jo
mov
stc
mov
push
inc
loop
dec
shll
sbbl
xor
in
repz
js
mov
stos
into
pop
jp
mov
ljmp
cmp
sub
arpl
ficoml
incl
lahf
cmp
adc
mov
xor
dec
loope
adc
jg
lahf
std
clc
adc
lcall
sti
lcall
xchg
push
jae
push
xorb
add
push
jo
dec
and
or
push
add
ror
xchg
adc
xchg
jecxz
das
fnstcw
push
cld
lcall
inc
cmpsb
xorb
xor
jae
xor
and
js,pn
jmp
sbb
add
stos
je
sbb
popf
stc
mov
je
sbb
stc
add
jo
movsl
and
and
imul
push
cwtl
ja
repnz
or
les
popf
lods
ss
sub
mov
pusha
adcl
push
repnz
jnp
push
inc
cmp
and
fcomi
lods
ds
jnp
aam
push
sbb
mov
out
es
enter
lcall
out
js
sbb
add
xchg
rorb
ret
push
inc
push
dec
leave
add
loope
mov
mov
and
dec
jg
jnp
test
testb
adc
mov
cmp
lods
and
out
jno
or
dec
cmc
dec
lahf
icebp
imul
repnz
inc
or
xor
push
xlat
mov
xchg
xchg
pop
hlt
push
les
xchg
cmp
add
mov
push
and
inc
mov
mov
int3
fucomp
xchg
sub
call
lahf
mov
sbb
xor
outsl
cwtl
clc
test
sub
stc
push
shrl
xchg
loopne
mov
loop
mov
pop
mov
pop
jo
out
push
mov
stos
xchg
outsl
xchg
test
mov
push
test
mov
xchg
mov
jno
icebp
and
gs
fidivs
xor
mov
movsb
pop
add
xchg
or
inc
push
js
mov
inc
jp
shl
outsl
sub
sahf
sti
push
sub
push
shlb
xchg
and
bound
lods
jp
dec
aas
std
fdivrs
pop
loope
add
sub
dec
push
int3
push
sahf
pop
mov
inc
enter
inc
xchg
fmull
fldenv
sbb
push
sbb
ja
clc
imul
xchg
xor
ret
insb
lds
fstpl
sti
sbb
sub
pusha
sbb
fstpl
aam
int3
sbb
fs
pushf
mov
ret
scas
xor
lods
inc
jmp
xor
jns
data16
stos
push
iret
mov
mov
int3
int3
gs
in
popa
adc
shrl
jg
hlt
push
mov
xchg
js
mov
push
insb
add
add
ss
outsl
scas
mov
xlat
mov
sbb
out
cmp
mov
fisttps
push
movsb
out
push
out
jp
mov
mov
push
mov
dec
inc
in
inc
mov
mov
mov
xchg
xchg
repz
lea
cmc
push
cmp
insb
rclb
fwait
push
lods
sbb
dec
shl
roll
in
fsubp
in
push
jge
xor
cmp
mov
out
stc
mov
sub
loopne
mull
sub
cs
int3
out
or
data16
mov
clc
adc
shrb
push
add
add
out
mov
insb
mov
ljmp
lret
cmp
xchg
pop
lret
mov
notl
pop
cli
push
jne
sbb
test
mov
mov
jnp
mov
cmp
push
call
jbe
dec
cltd
lock
mov
mov
add
xchg
out
iret
rcr
pop
leave
lcall
sbb
adc
pusha
and
loope
jns
insb
push
enter
shlb
or
inc
mov
adc
lea
sbb
scas
imul
cmp
sub
ret
dec
cli
jmp
cli
outsb
and
push
mov
popa
dec
test
or
sar
dec
lods
stos
std
insl
inc
mov
pusha
jbe
ss
nop
lret
sub
xchg
mov
fs
and
rcrl
dec
scas
js
jmp
jb
and
frndint
mov
or
call
aaa
fldenv
mov
xchg
jb
adc
sbbl
and
cmp
push
mov
int
xchg
push
sub
adc
lret
adc
iret
or
adc
js
loopne
lcall
ret
out
inc
arpl
mov
jnp
in
outsl
loopne
cld
mov
mov
mov
clc
ljmp
jbe
jp
ljmp
mov
dec
mov
shl
fwait
or
dec
fwait
pop
cmp
mov
push
adc
push
xor
inc
cmpb
push
adcb
stos
cmp
clc
ret
mov
or
inc
mov
jb
adc
sub
fbstp
push
test
jo
mov
adc
ds
outsb
xchg
sub
push
mov
test
push
fsubl
mov
add
stos
mov
ret
fists
xor
divl
mov
ret
aad
test
testb
push
test
adc
sub
mov
ljmp
in
inc
sbb
cltd
iret
or
mov
push
push
adc
and
sbb
in
xchg
sbb
rcl
push
iret
adc
daa
rorl
negb
and
sbb
mov
pop
andl
sbb
xchg
add
ja
jbe
xorl
fsubp
pusha
loopne
pop
cmpsb
mov
daa
inc
shl
fldcw
xchg
or
mov
stos
sbb
rcr
stc
scas
jae
mov
xchg
mov
call
imul
or
je
push
sbb
jno
mov
push
insb
decb
daa
push
push
aaa
rcrb
out
leave
xchg
ss
fs
dec
jle
lods
mov
and
scas
ds
into
push
test
pop
cltd
cld
mov
icebp
in
imul
ss
dec
loopne
mov
mov
fmul
and
int3
cld
out
clc
sub
lods
lret
int3
das
push
mov
enter
or
push
push
mov
pushf
repz
ljmp
out
pusha
mov
xchg
mov
outsb
pop
test
dec
repz
cli
gs
mov
push
inc
push
aaa
addl
sub
mov
and
int
fadd
imul
out
sbb
push
jnp
rep
call
iret
sub
adc
imul
add
adc
push
fisttpl
lds
rcrl
mov
sub
jp
push
xchg
and
aas
sbb
and
xchg
pop
push
adcb
adc
addr16
sub
lock
jbe
jo
sbb
cltd
cmp
nop
pop
sub
pop
mov
daa
or
in
mov
jbe
sbb
fnstsw
sar
adc
into
jp
inc
sbb
arpl
dec
adc
dec
inc
outsl
xor
inc
cmp
sub
mov
sub
loop
adc
imul
lret
cmp
adc
dec
scas
lcall
scas
push
gs
push
or
jecxz
lods
xor
mov
inc
inc
lret
dec
mov
or
and
cmp
or
dec
mov
and
sbb
or
es
jae
or
fwait
mov
fistpl
mov
dec
sbb
sub
icebp
cmp
dec
xchg
jnp
in
in
daa
xor
movsl
in
je
imul
ret
xchg
add
cmp
nop
loope
xchg
and
lcall
cmp
or
mov
mov
mov
cmp
popf
pop
mov
and
cmp
std
js
scas
adc
mov
int
lock
sub
imul
inc
add
add
jg
loopne
mov
jae
push
or
mov
jecxz
adc
int3
dec
fninit
push
and
dec
test
mov
ds
jmp
fmull
jp
call
gs
pop
xor
mov
dec
cmp
xor
enter
xchg
das
inc
mov
rclb
add
xor
sbb
xchg
mov
jno
pushf
sub
mov
dec
in
insl
inc
dec
cmpsb
add
xchg
add
js
out
cmpsl
rcr
imul
xor
inc
icebp
cmpsl
in
aas
add
negl
ljmp
xchg
push
xchg
int3
leave
pop
cwtl
mov
js
ret
push
or
jno
mov
xchg
into
mov
push
sub
xchg
hlt
cmp
arpl
leave
or
and
xor
stos
dec
mov
lock
out
in
jge
imul
aam
sbb
mull
inc
addr16
dec
or
cltd
pop
pop
jp
fcmovnb
or
dec
xchg
jge
push
jae
fstl
or
insb
arpl
xor
aas
aaa
jg
decb
js
jle
jb
push
push
mov
cmpsb
jmp
dec
cli
adc
jp
mov
mov
push
fwait
movsl
xor
scas
mov
jo
jne
sub
or
sub
and
cmp
or
xchg
cmp
out
ja
mov
mov
push
dec
pop
add
test
outsl
adc
shll
rorl
sahf
mov
in
sbb
out
movsl
add
cmc
pop
xor
xor
push
popf
sbb
inc
dec
in
mov
and
dec
ret
stos
fmull
sub
in
xchg
sub
jle
cmp
cwtl
cwtl
dec
jecxz,pn
mov
pop
sbbl
sbb
rcrb
mov
push
repnz
jno
insl
push
mov
cmp
ljmp
shrb
sub
sbb
movsl
mov
mov
in
data16
lret
pop
add
push
push
arpl
das
xchg
sub
stos
and
push
jp
pop
dec
push
mov
cld
mov
adc
repnz
popa
orb
nop
push
push
das
ficomps
stc
sbb
pop
clc
fisubl
ds
cmpsl
add
xor
xchg
ss
adc
or
out
adc
dec
test
out
and
out
inc
stc
push
cmpsb
adc
cmp
shlb
pop
lods
adc
es
stos
jbe
dec
mov
cmpsb
fsubs
insb
notl
aas
mov
mov
outsl
jno
popa
push
mov
and
adc
add
icebp
pop
loope
sarl
shrl
pop
mov
outsl
jno
popa
push
mov
and
adc
add
icebp
pop
loop
sarl
iret
xchg
jg
outsl
jne
popa
pop
mov
cmp
adc
pop
int
pop
aas
jmp
dec
xchg
jg
outsl
jno
sahf
and
inc
push
test
adc
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
aas
add
xor
and
dec
xor
push
ss
dec
aam
subl
icebp
iret
push
aas
add
add
and
push
jg
jg
pop
popa
cmp
lahf
arpl
icebp
iret
or
sbb
sub
cmp
dec
pop
ja
inc
jbe
xchg
mov
aad
mov
fwait
subb
pop
jge
dec
push
inc
mov
jns
js
dec
mov
and
mov
aas
mov
xchg
movsbl
inc
jle
dec
iret
lods
jo
lahf
xchg
mov
das
insb
aaa
pushf
mov
jecxz
pop
hlt
inc
inc
arpl
xchg
mov
pop
jo
pop
test
fbld
mov
popa
adc
shl
stos
pop
je
push
jg
sub
movsl
pop
jmp
add
push
and
fcomip
mov
push
jnp
mov
jno
cltd
inc
jle
movsb
addr16
std
sar
mov
dec
icebp
rolb
jle
lods
test
cmc
lret
pop
dec
pop
outsb
xlat
jle
dec
pusha
mov
movups
loope
shrl
add
xor
cmovno
outsl
jno
js
mov
mov
div
bound
fs
push
jp
push
jge
push
jae
or
in
subl
xchg
mov
mov
push
insb
and
jg
and
lret
or
mov
mov
cmpl
and
dec
inc
outsl
jno
popa
dec
xchg
mov
mov
out
icebp
iret
adc
add
xor
and
push
jg
outsl
jno
popa
dec
xchg
mov
mov
out
icebp
iret
adc
ret
cwtl
dec
or
into
xchg
cmp
es
dec
xchg
sub
xchg
dec
lods
popa
push
adc
addb
pop
push
jmp
fldt
data16
les
and
mov
pop
aaa
test
ret
cwtl
in
loope
fidivs
test
jo
test
subb
sub
fisttpll
rcrl
outsb
in
adc
push
in
lds
sub
in
mov
add
jns
jo
jp
sub
fwait
cli
div
mov
or
mov
mov
cmp
and
test
pushl
xchg
pop
dec
jnp
adc
aam
sub
mov
andl
inc
stos
xlat
movsb
test
fwait
push
loope
fisttps
inc
push
adc
mov
push
add
mov
xchg
push
xor
in
xchg
ds
cmp
in
push
adc
pop
or
popf
daa
push
xlat
cli
stc
sub
pop
pop
mov
or
and
push
mov
test
pop
xor
xchg
aas
in
cmc
mov
mov
aaa
imul
mov
out
mov
add
mov
mov
mov
cmp
scas
repz
sub
mov
sarb
push
push
mov
lahf
movsb
inc
adc
dec
outsb
adc
mov
jl
sbb
js
lods
pop
sahf
or
mov
aaa
ret
push
loopne
cmp
enter
jle
cli
out
jmp
push
fildll
stc
mov
cmp
cmp
dec
push
hlt
mov
push
mov
rorb
sbb
jmp
std
mov
mov
popa
sahf
cli
push
jb
fs
ret
out
gs
adc
into
sub
mov
and
scas
and
cltd
xchg
aaa
iret
xchg
xchg
inc
imul
iret
sbb
lock
outsl
lock
add
inc
jle
and
ljmp
jge
mov
dec
cmp
rcrb
popa
stos
movsl
ret
fs
dec
or
enter
cmp
out
pop
dec
cmc
dec
cmpl
ss
insb
jp
mov
pop
add
orl
dec
mov
inc
dec
mov
cmc
loopne
jle
cmc
sarb
and
fnsave
adc
das
ret
in
mov
pushf
clc
push
shlb
mulb
lret
inc
add
push
cmp
in
faddl
cmp
mov
insl
andb
mov
sbb
push
sub
adc
jns
mov
jl
stos
pop
mov
daa
xor
int3
test
adc
push
xchg
xor
add
pop
cmp
cmp
adc
addl
push
sub
jo
hlt
inc
mov
jmp
aad
push
sti
cmp
pop
stos
enter
push
iret
cmpsl
leave
test
lods
ds
jmp
jge
loop
sub
and
xor
xchg
negl
or
xor
mov
pop
cmpb
cltd
jno
mov
loopne
cmp
lret
lds
cltd
push
into
jb
inc
jbe
pop
mov
dec
outsb
inc
sbb
dec
or
mov
xchg
sti
push
out
arpl
arpl
popa
out
cmp
stos
add
jp
js
jp
and
test
or
cmp
ficompl
insl
cmpsl
add
arpl
cwtl
aad
jl
adc
inc
lahf
inc
push
into
jle
stos
pop
mov
int
jecxz
dec
adc
cld
add
cli
dec
scas
arpl
addl
popa
dec
outsb
loopne
dec
jmp
sub
dec
dec
cmp
or
xchg
xor
jle
in
std
lods
roll
lcall
sar
cmp
stos
cltd
xor
pop
ja
xchg
clc
imul
xchg
push
test
xor
das
lods
insb
xchg
rcrl
push
aam
or
clc
addr16
mov
ds
insb
jno
xchg
cmpsl
or
das
cmp
lcall
sbbb
bnd
lret
inc
ja
push
and
inc
xor
xchg
push
xor
cltd
xor
fisttps
ja
roll
clc
pusha
sub
pminub
adc
hlt
and
dec
jnp
add
into
inc
outsb
je
push
add
dec
sbb
lea
mov
enter
fs
in
cmpsl
inc
xlat
or
jecxz
insb
shll
or
jne
inc
insb
repnz
jo
orb
movsb
fwait
jb
rcl
jl
pop
bswap
leave
incb
inc
mov
cld
repnz
push
outsl
pop
lds
xor
lcall
ret
xor
rcr
sub
mov
xor
jbe
aas
int
pop
xor
out
mov
mov
sbb
xchg
out
imul
outsl
pop
sbb
les
add
testl
arpl
push
jp
in
sbb
mov
mov
sbb
inc
xor
mov
jo
or
xchg
add
addr16
dec
ret
mov
orb
jb
sub
fildll
jnp
mov
aas
dec
mov
sbbb
inc
lds
data16
cmp
mov
ret
insb
js
jg
jnp
jae
daa
mov
add
outsb
rolb
pop
jecxz
shrb
or
test
xor
hlt
cld
add
mov
inc
or
dec
shll
cmpsl
imul
sbb
add
jno
adc
and
add
cmp
fcoms
stc
jge
or
and
cmpsw
test
dec
int
out
and
push
fisttpll
sbb
loope
jno
cs
fsubs
sbb
dec
nop
mov
int3
insl
adc
dec
jb
gs
jmp
cmp
adc
das
cmpb
test
mov
pop
sbb
mov
sahf
cld
mov
mov
mov
fldcw
test
and
movl
mov
inc
add
fdivs
fbld
cmp
push
lods
pop
mov
shll
cmp
stc
sbb
adc
aad
repnz
repnz
mov
push
cmc
and
out
daa
push
fadds
sbb
insb
ja
or
fs
mov
icebp
xchg
jge
xchg
sbb
inc
mov
lret
lret
push
icebp
xor
shl
repz
push
insb
leave
cmp
push
lret
repnz
pop
xchg
scas
xchg
les
xor
int3
fsubrl
pusha
sub
testb
pushf
sub
push
iret
clc
popa
jo
and
arpl
sbb
js
popf
xchg
cmp
icebp
xor
mov
mov
rorl
pop
testl
jle
push
and
out
pandn
push
cli
sbb
xor
add
arpl
mov
mov
int
out
sub
addb
in
orl
mulb
xchg
sub
sub
scas
data16
dec
mov
faddl
cmpsb
mov
lea
xchg
lods
cmp
and
iret
sub
cmp
rol
xor
add
in
mov
gs
mov
push
insl
add
sub
inc
pop
fcoml
mov
imul
inc
loop
push
sbb
xchg
mov
das
push
xchg
in
dec
sahf
sti
adc
sub
dec
and
mov
cmc
orl
pop
cmpb
mov
sub
or
fwait
push
sbb
aam
jb
push
and
cwtl
cmp
pop
cmpsl
or
aas
popa
mov
or
lods
bswap
xchg
push
andl
loope
insb
out
std
xchg
cmpsl
mov
adc
mov
lea
fs
dec
cmp
dec
fldenv
or
push
pop
or
push
divb
rcl
insl
add
xor
es
jmp
js
mov
out
jo
daa
call
xor
pop
adc
mov
and
pop
jge
divb
ja
xchg
ja
and
imull
jmp
inc
addr16
ja
outsb
hlt
xor
fstpl
into
xchg
xchg
aam
fisttpl
jo
xlat
cmp
mov
outsb
repnz
fisubrs
xlat
pop
mov
aam
ret
js
dec
push
loope
repnz
mov
dec
aad
loopne
add
lods
fidivrs
data16
mov
sub
test
stos
filds
loop
cld
xchg
push
outsb
sub
xor
dec
sub
jge
das
or
dec
scas
xchg
or
pop
adc
jb
push
stc
jno
bound
aam
sub
or
cmp
push
addr16
push
jl
test
enter
in
jo
or
add
and
pop
adc
pop
mov
push
mov
in
jmp
adc
xchg
mov
and
in
fcmovnbe
adc
jno
daa
out
popf
mov
adc
out
mov
sub
cs
mov
jbe
faddl
or
dec
jbe
push
fcoml
lods
cmp
xorl
in
lods
sbb
cmp
xchg
mov
jo
cmp
push
rcr
scas
xor
mov
push
enter
adc
popa
int
xor
push
popa
mov
das
dec
and
pop
xchg
std
int3
cmp
cmpsl
fisttpll
test
adc
mov
stos
inc
inc
sahf
ljmp
mov
pusha
inc
call
and
arpl
and
inc
ret
push
pop
pushf
and
sbb
mov
push
enter
and
xor
pop
inc
in
cmp
sbb
and
mov
sahf
pop
mov
pop
push
fwait
push
enter
aam
adc
roll
push
out
sbb
cmp
fcoml
jecxz
pop
out
and
into
out
imul
aam
iret
fimull
cmp
dec
out
bound
cltd
sbb
xor
xor
int3
push
decb
gs
adc
jne
cmp
gs
mov
clc
sub
mov
or
cmp
push
adc
adc
jo
daa
pushf
popa
cmpsl
jmp
xor
inc
push
cmc
sahf
and
pop
xchg
pop
mov
pop
imul
mov
shlb
call
pop
fwait
fwait
pop
nop
sti
cmpsb
fsubs
jl
pop
pop
jae
push
and
call
movsb
lock
stc
or
testl
add
ret
inc
inc
mov
fnstcw
arpl
dec
ds
cmp
dec
adc
sub
mov
outsl
stos
mul
stos
jno
sbb
je
pop
cli
stc
orl
sbb
mov
xchg
imul
les
aad
imul
scas
enter
add
lds
mov
outsb
xchg
inc
pushf
lret
mov
jp
subl
inc
repnz
inc
sub
cli
cmp
cltd
jb
sub
jb
lock
lods
imul
jle
jo
nop
pop
scas
mov
test
jo
mov
inc
outsl
insb
mov
and
dec
les
dec
xor
or
sub
or
movsb
lods
add
pushf
cmp
mov
or
dec
jo
xor
dec
sbb
adc
call
inc
in
sbb
aaa
xchg
sub
pop
xor
inc
cmp
add
jns
cmp
repnz
jb
ss
or
in
pop
test
movsb
cmpl
cld
or
pushf
pop
adc
popf
xchg
loopne
inc
cli
pop
push
xchg
or
inc
push
pop
loop
mov
je
pushf
out
data16
sbb
clc
rcll
out
add
int3
jns
call
sar
popf
mov
cmp
and
push
jl
xor
push
lret
push
cmp
fisubs
hlt
dec
sub
push
mov
sbb
adc
insl
sahf
or
fnstenv
test
or
pusha
jbe
fsincos
xchg
icebp
lcall
xchg
mov
xchg
rorl
les
imul
push
fwait
or
xchg
in
inc
rcrl
arpl
pop
cmp
lret
cs
and
iret
and
mov
cs
mov
add
daa
ljmp
fildll
or
leave
aaa
sti
add
insl
push
daa
lret
lds
cmpb
xor
scas
fildll
out
imul
scas
sbb
push
and
mov
or
fs
jl
push
lock
dec
push
xchg
dec
ja
push
mov
gs
loope
lods
out
cld
shl
ja
ljmp
lcall
xchg
push
movsb
jle
and
mov
into
out
test
cmp
dec
lods
cmp
mov
imul
xor
lcall
movl
movsl
sub
es
mov
push
jp
xor
pusha
adc
sub
pop
roll
cld
test
xor
adc
gs
fs
inc
jg
jo
inc
dec
popf
push
aam
imul
lahf
add
dec
mov
loop
pop
lahf
je
sbb
sub
sbb
jge
cmp
imul
jo
out
cmp
jne
pop
popa
mov
icebp
push
scas
mov
mov
orb
inc
fisubs
add
imul
in
mov
cmovbe
push
mov
inc
jle
push
cmpsb
jmp
inc
inc
adc
mov
nop
cld
fstps
jne
xor
lret
sub
xor
sbb
lcall
addr16
fsts
imul
pop
popl
mov
leave
push
icebp
fstps
cltd
or
xchg
rcrb
ftst
xor
pop
cmp
pop
fs
or
add
stos
add
add
hlt
mov
xor
loop
xor
push
dec
cs
jo
enter
mov
jbe
ja
mov
push
xchg
lds
nop
sbb
mov
in
pop
notb
xor
push
idivl
jg
je
push
xchg
in
ss
push
add
fdivr
sbb
jno
pop
inc
sarl
xchg
add
push
out
jmp
xchg
lds
out
dec
out
sbbb
enter
jl
mov
pop
call
out
mov
pop
inc
sbb
sbb
into
imul
ret
imul
shl
clc
adc
cltd
add
or
sbb
xor
shrb
cltd
mov
aam
fstpt
outsl
mov
sbb
mov
inc
fimull
mov
nop
cmpsl
repz
sbb
mov
mov
mov
cmpsl
out
xchg
icebp
add
inc
lret
and
or
inc
push
xchg
and
push
clc
shrl
sbb
movsb
hlt
lret
xor
movb
fdivrs
loope
movsl
pop
mov
mov
fdivs
push
cld
cltd
push
cmp
lea
lret
or
lahf
outsb
dec
test
pop
scas
mov
pop
cwtl
in
mov
mov
jo
rcrb
jmp
adc
mov
scas
mov
in
jne
test
out
cmp
call
pop
repz
mov
testl
cmp
movswl
outsl
add
jne
push
mov
loope
nop
sbb
popa
hlt
imul
sbb
inc
mov
clc
jb
insb
sub
mov
out
mov
pop
jo
dec
in
xchg
and
adc
xor
mov
or
shrb
adcb
and
decl
pop
xchg
sbb
js
in
xchg
pop
xorb
js
and
icebp
js
outsb
idiv
mov
and
test
sahf
fmull
out
cmp
xor
mov
mov
pop
mov
mov
adc
nop
cld
leave
xor
imul
push
leave
mov
scas
mov
clc
cwtl
and
xchg
cmp
jmp
clc
push
dec
test
test
push
inc
les
rcr
cmp
adc
inc
adcl
insl
js
in
adc
das
verw
mov
lods
enter
mov
insb
sbb
fsts
sbb
push
jmp
add
xchg
dec
adc
aad
inc
cmp
add
das
xor
sub
decl
repz
rclb
jle
mov
or
ret
rorl
push
mov
lock
mov
je
pop
mov
lea
shlb
jge
xchg
movsl
jns
cmp
xchg
add
jnp
inc
dec
cld
lret
test
mov
sub
dec
pop
mov
xor
mov
addr16
dec
jb
mov
push
dec
push
adc
pop
rclb
dec
xor
jno
addr16
cmp
call
pop
inc
add
out
mov
into
xor
jecxz
fwait
inc
sahf
in
jne
mov
outsb
addl
lods
mov
loop
mov
and
scas
jb
mov
sub
jo
jae
push
rolb
adc
dec
scas
arpl
cmp
lock
cltd
cvtpi2ps
xor
cmp
andb
add
out
insb
scas
mov
sbb
inc
cmp
mov
adc
push
cmp
adc
iret
inc
adc
sbb
lahf
and
sbb
and
test
sti
out
vpavgb
sbb
xor
pop
pop
mov
pop
cli
lahf
xchg
add
push
and
ja
icebp
sub
adc
leave
rcrb
mov
push
xorl
mov
popa
fyl2x
mov
inc
mov
pop
and
xchg
fldl
inc
loope
mov
outsl
pop
mov
call
js
and
aaa
add
mov
cld
out
out
sbbb
test
rcl
pop
push
cld
or
js
jns
call
push
aaa
cmp
jge
loop
stc
dec
stos
xchg
mov
pop
xorl
or
sub
daa
mov
js
xor
mov
lods
mov
repnz
jle
movsb
inc
gs
lds
xchg
mov
insb
dec
es
jnp
es
jns
out
mov
mov
sub
dec
insl
mov
insl
mov
repnz
in
sub
push
stc
shrl
sbb
int
jge
push
jno
fmul
mov
dec
lea
outsl
mov
daa
ljmp
jecxz
iret
movl
fcompl
fnstsw
xchg
add
mov
setle
dec
and
ret
and
inc
inc
cmp
push
push
inc
xlat
mov
fisttpl
jmp
testl
icebp
cmp
icebp
mov
in
mov
daa
pop
cmpsl
mov
mov
popa
aaa
jno
mov
in
xchg
ljmp
pusha
pop
test
mov
ss
js
das
mov
mov
andb
data16
dec
or
inc
movsl
xchg
adc
or
in
pop
stc
mov
cwtl
push
les
shll
arpl
cli
jp
cli
into
out
nop
lret
mov
mov
and
mov
mov
das
pop
fnsave
pusha
jmp
xchg
push
push
test
into
and
add
pop
push
mov
loop
cmp
pop
call
insl
popa
mov
ja
std
and
out
ret
jo
arpl
fcmovnbe
fstl
jno
unpckhps
mov
mov
pop
jo
sbb
xchg
jnp
adc
sub
jge
inc
or
push
out
aaa
xchg
test
dec
js
push
aas
cmp
sbb
pop
or
push
inc
setl
test
repz
mov
and
ds
pop
cli
stos
call
mov
int
mov
push
sbb
xchg
and
cltd
xorl
mov
xor
incb
sbb
push
inc
cli
cwtl
repz
notl
pop
icebp
testl
push
pop
inc
inc
add
aad
fs
pop
cs
popa
sub
out
into
xlat
clc
cwtl
bound
ljmp
push
and
mov
inc
fisubs
loopne
dec
mov
in
cmp
mov
mov
push
rcl
lret
outsb
xchg
fstl
mov
arpl
cmc
rcll
movsl
mov
jmp
fadds
or
jecxz
insb
aas
xchg
and
and
enter
jnp
sti
xor
mov
inc
pushf
shrb
fnstcw
scas
movsb
insl
out
add
xor
add
in
mov
mov
mov
outsb
mov
sbb
hlt
sub
shrl
xor
mov
mov
pop
jnp
popa
cld
pop
movsb
adc
stc
dec
jbe
sahf
dec
mov
add
popf
adc
jecxz
cli
xchg
xor
stc
out
ljmp
push
out
ja
aas
xlat
pop
nop
lret
stc
stc
sub
xor
popf
insl
movsl
pop
ret
jo
punpckldq
push
ss
or
data16
jnp
dec
adc
arpl
push
and
in
js
pop
sub
dec
int
imulb
ret
cli
mov
jp
js
adc
jno
rol
bound
xchg
or
sbbl
or
mov
addr16
mov
test
dec
pop
mov
jbe
test
and
xchg
scas
dec
push
mov
aaa
les
lret
sub
adc
cld
mov
mov
lret
in
add
push
pop
in
xchg
cmp
loope
push
jg
outsl
jno
popa
dec
xchg
mov
mov
out
icebp
iret
adc
add
xor
and
push
jg
outsl
jno
popa
dec
xchg
mov
mov
out
icebp
iret
adc
add
xor
and
push
jg
outsl
jno
popa
dec
xchg
mov
mov
out
icebp
fcmovnbe
lret
and
sbb
sqrtps
outsl
icebp
pop
loope
outsb
mov
mov
nop
push
mov
adc
idiv
cmp
out
sbbl
add
pop
rorb
outsl
repnz
add
xor
pushl
xchg
sbb
mov
lahf
loop
repnz
sbb
sub
jp
jb
fwait
cld
mov
std
dec
lret
push
mov
outsl
imul
and
xor
mov
xchg
imul
add
add
into
pop
aaa
mov
push
push
xor
jne
addr16
lahf
mov
das
xchg
fcmovb
sbb
jg
and
pusha
out
or
loopne
lret
orl
insl
iret
lcall
dec
loop
repnz
add
add
mov
cmpsl
jae
or
lock
fisttps
cmp
cmc
repnz
scas
inc
rorb
decl
das
scas
sub
xchg
push
bt
das
cmp
rol
sbb
nop
repnz
gs
push
cs
lds
jge
pop
sbb
sub
aas
xchg
cmp
xor
lret
lahf
or
push
filds
out
negb
es
fiaddl
pop
clc
jg
or
ja
inc
mov
xor
das
xchg
jb
xorb
shrl
inc
ret
sbb
jg
add
jae
dec
iret
inc
stos
lods
push
std
bound
imull
dec
rep
ret
and
jle
dec
ficomps
or
jb
sbbb
cpuid
aas
mov
ret
dec
loop
repnz
add
xor
pushl
sbbb
cpuid
aas
mov
ret
dec
loop
repnz
add
inc
mov
pusha
inc
mov
mov
mov
and
and
pushf
mov
mov
push
xchg
mov
sbb
cmpsb
scas
mov
daa
and
inc
lods
push
add
cmpsb
dec
sbb
push
pop
imul
rorb
aad
jno
out
cli
cmp
pop
hlt
je
xchg
bound
in
or
movsb
in
lods
mov
or
sbb
repnz
lds
fiadds
call
jb
or
dec
stc
iret
loope
std
repnz
and
pop
idivl
xchg
jo
mov
fstl
mov
scas
and
lahf
push
es
jnp
push
cmp
jmp
sbb
cmp
in
or
cli
adc
or
adcl
add
jbe
xor
fistps
roll
lret
mov
cmp
fidivrs
mov
repz
jg
test
stc
in
mov
and
loopne
push
jp
call
xor
and
ss
rcrb
testb
and
push
mov
sti
add
xchg
and
nop
sbb
aaa
mov
lock
xchg
test
mov
hlt
xchg
xchg
add
and
insl
jecxz
int
jne
testb
inc
mov
repnz
push
adc
jnp
xor
aaa
jne
imul
mov
int3
xchg
mov
lock
xchg
mov
lret
xchg
pop
popf
cli
dec
cmpsb
mov
lock
inc
mov
mov
repz
je
iret
hlt
inc
sub
loope
data16
push
aad
xor
jge
inc
pop
push
cld
icebp
sbb
push
aaa
add
sarl
xor
leave
inc
mov
mov
movb
cli
jle
jns
pop
iret
outsb
leave
test
sbb
jbe
lods
fisttpll
rolb
xlat
jecxz
and
decl
enter
aad
cmpsl
mov
testl
xor
ljmp
int
push
sbb
scas
jae
in
jno
and
mov
daa
decl
xchg
jo
sub
lahf
inc
es
xor
fadd
ret
push
shlb
xchg
mov
shl
call
pop
test
mov
fimuls
pop
idiv
xchg
sarb
and
add
addl
push
mov
popa
xor
adc
or
push
jnp
adc
mov
inc
mov
gs
gs
cmp
mov
mov
and
arpl
xor
outsb
daa
mov
jecxz
in
lcall
ss
jmp
repnz
and
ds
mov
cwtl
dec
scas
aad
adc
pop
test
bnd
push
or
push
mov
adc
jecxz
push
and
cmp
in
xor
lea
mov
push
sbb
jl
je
scas
adc
rol
jge
cmp
jnp
mov
pop
repnz
mov
push
sbb
lahf
cmp
lods
mov
stos
lea
stc
xchg
lret
sbb
xchg
adc
mov
jns
sub
or
sbb
shl
and
adcb
stos
shl
fisubs
mov
daa
aam
mov
xchg
sbb
push
cmp
dec
lock
aad
add
push
jmp
and
call
mov
mov
push
mov
lret
inc
push
loop
scas
js
out
sbb
inc
jecxz
pop
test
mov
sbb
xchg
enter
es
outsl
or
js
lea
loope
push
js
mov
jns
mov
ror
fidivs
in
push
mov
dec
lcall
lahf
lea
loop
punpckhbw
jb
cli
pop
out
lods
inc
mov
adc
adc
lods
test
xor
loop
cld
xchg
lods
notb
dec
daa
leave
adc
cmp
fiaddl
jno
add
stos
pushf
xor
mov
adc
cmp
lods
icebp
xor
xchg
push
push
add
sub
mov
sbb
adc
bound
jae
jp
sbb
ret
xchg
xchg
js
mov
rorb
call
xor
dec
sub
and
les
mov
sbb
insl
sarb
cwtl
mov
mov
sub
cltd
sbb
shrb
jne
stos
jg
jno
rcll
lea
push
pushf
jo
fimuls
pop
popl
jl
xor
loopne
ret
mov
cld
mov
clc
xchg
push
jnp
mov
mov
inc
or
jno
imul
cli
fdiv
cltd
xchg
in
faddl
adc
in
aam
mov
mov
outsb
ffreep
iret
pop
jecxz
add
insb
scas
add
push
and
xchg
xor
out
sbb
sbb
pushf
mov
insl
sbb
xchg
movsb
push
push
jmp
push
fldl
mov
push
dec
push
push
repnz
push
sbb
ror
dec
icebp
stc
fdivr
lcall
mov
or
cs
push
xorl
sbbl
and
inc
in
inc
std
movsl
lea
sbb
sub
fstpl
add
aas
sti
ret
mov
fnstsw
aas
adc
sbb
ss
aad
data16
mov
push
cld
push
mov
xor
mov
leave
jbe
mov
lds
getsec
out
pop
xchg
jne
push
dec
xchg
clc
insl
les
shrb
add
pusha
mov
mov
shl
imul
jb
lret
mov
add
jae
push
push
xor
push
mov
jmp
aad
or
push
sub
rol
or
and
gs
test
xchg
pusha
cmp
popf
shll
mov
repz
aas
ja
mov
das
mov
pop
or
cli
jmp
push
fidivl
mov
mov
loope
xchg
mov
xor
mov
mov
xor
test
inc
and
fadds
leave
int
arpl
dec
out
aam
pushf
mov
push
mov
pusha
mov
test
in
data16
mov
xor
jo
call
pop
lods
jns
fs
repz
cmc
mov
out
sbb
pop
test
test
shl
aas
pusha
stc
push
test
out
lods
add
sub
sti
add
add
insb
push
cs
int3
pop
jge
pusha
xlat
xor
mov
imul
mov
std
aas
push
sbb
aad
push
mov
stos
es
inc
mov
xor
out
mov
outsb
inc
inc
cmp
sbb
int
lea
fstl
outsb
dec
nop
jb
stos
cmp
inc
lea
pushf
nop
in
jo
dec
movsl
idivl
pop
shlb
jl
mov
push
and
inc
scas
ds
push
fldenv
lock
fidivl
xchg
jnp
push
inc
sbb
cmp
lods
or
push
sub
sbb
or
lock
sbb
jae
push
mov
rcll
pushf
loopne
shrb
sbb
inc
orl
hlt
inc
mov
insl
jo
ret
imul
mov
mov
nop
jp
dec
cs
xor
les
ljmp
mov
cs
loop
inc
pop
push
inc
movsb
sbb
xchg
push
ret
push
pop
imul
mov
xor
pusha
fisttpl
or
cmpps
gs
mov
lret
rolb
jle
ds
adc
mov
enter
add
add
cmp
cmp
xchg
push
fwait
jne
and
sbb
repz
adc
fldln2
insb
or
mov
xor
fcmovnbe
enter
adcb
filds
loop
sub
repnz
mov
cmp
and
stos
shrl
aas
cmc
les
mov
test
je
loopne
lock
and
adc
cs
fidivrs
mov
or
imul
es
and
pop
push
push
loop
jb
inc
jb
adc
or
aad
push
bound
cmp
in
popa
stos
and
xlat
icebp
bound
add
push
xchg
les
insl
sbb
ucomiss
fisubrl
divl
cmp
aad
cmpl
or
add
clc
push
inc
pop
and
push
push
dec
xchg
add
push
std
into
int
xchg
dec
pop
cmp
xchg
int3
xchg
mov
aad
sub
sarb
icebp
and
push
loope
cmpsb
mov
or
inc
ds
leave
jecxz
push
setns
cmp
insb
sub
testb
cltd
and
je
sbb
out
lods
xorb
loopne
clc
mov
mov
cmp
lds
xor
sbb
lods
jl
or
adc
lret
aaa
sbb
ss
and
fbld
loope
xchg
pop
test
pop
in
inc
push
mov
lret
cwtl
scas
scas
add
fistpll
inc
insl
xchg
lock
leave
jmp
orl
mov
dec
shlb
dec
aaa
push
push
ret
ss
mov
mov
orb
mov
mov
test
sub
adc
and
movsb
dec
outsb
adc
or
inc
mov
movsl
pop
xchg
cld
xchg
inc
and
sub
and
sbb
enter
pop
lret
and
xlat
mov
sub
push
dec
xor
lods
sub
leave
stc
mov
xchg
mov
inc
pop
roll
mov
xchg
movsl
push
mov
pop
pop
jmp
pop
cmp
and
cmp
movsl
out
sub
orb
testl
inc
daa
jl
sbb
mov
xchg
fstpt
in
push
test
imul
bound
mov
xchg
xchg
int
mov
aam
pop
pop
mov
int
mov
pop
adc
jmp
fcompl
push
xor
inc
xchg
mov
inc
dec
test
clc
es
lods
mov
dec
or
lret
jmp
mov
aad
mov
add
xchg
xchg
xchg
mov
mov
faddl
jo
jge
adc
mov
jge
insl
adc
inc
push
fwait
pop
lods
add
adc
orb
pop
xchg
mov
xorb
mov
mov
rol
ljmp
ljmp
data16
subl
cmc
push
cli
fsubs
ljmp
push
mov
sub
icebp
imul
xchg
aam
xor
enter
insb
add
daa
jge
bound
icebp
cmp
sbb
mov
mov
jo
jnp
sub
aam
or
int3
and
mul
fidivrl
or
push
fisttpll
es
cli
in
add
adc
sahf
dec
sti
inc
and
or
xchg
sub
aad
pop
jecxz
jge
add
jge
or
xorb
in
mov
sub
insb
push
mov
mov
add
lcall
es
cmpsb
shll
fsubrp
das
adc
cmp
pushf
mov
adc
clc
add
andl
cmp
mov
mov
psrlw
pop
stos
mov
pop
sar
cmpl
bound
insb
cmpsl
push
xchg
les
int
dec
push
sbb
jle
icebp
loopne
dec
fisubrs
cmp
xchg
pop
pop
test
popf
pop
push
fsubs
sti
pop
add
mov
aam
mov
sbb
push
ret
xchg
pop
cltd
out
ja
mov
js
out
das
mov
sbb
jp
or
mov
mov
lahf
jg
adc
cmpl
scas
ljmp
mov
cmp
fisttpl
push
jne
jge
mov
addb
sbb
xor
mov
out
mov
pop
in
scas
icebp
or
push
adc
mov
dec
jae
push
in
mov
mov
sbb
lcall
cld
inc
xchg
sub
pop
sub
lret
bound
lods
std
adc
testb
test
outsl
sub
lahf
test
ret
pop
mov
fldt
adc
jg
pop
iret
pop
rclb
sbb
ss
loop
mov
mov
movsb
mov
pop
xchg
sbb
cwtl
push
inc
in
mov
sub
cmc
les
pop
jg
pop
jmp
jmp
xchg
xchg
int
add
mov
or
js
mov
ds
mov
movsb
pop
sub
mov
pop
inc
and
fdivrp
jbe
mov
jne
push
jmp
cmp
jne
mov
roll
sub
inc
mov
cmpsb
add
cmc
mov
inc
pop
das
pop
sbb
or
fnstcw
arpl
inc
int3
and
adc
inc
test
fucomp
dec
rep
rolb
aad
push
ljmp
outsb
push
sbb
in
mov
inc
mov
stos
test
mov
cltd
adc
mov
and
pop
fbld
test
fstps
imul
out
fwait
arpl
dec
out
xor
push
and
insl
call
jmp
rcrl
je
mov
mov
enter
fistps
mov
sbb
inc
lret
pushf
inc
fwait
dec
cmp
out
adc
dec
inc
pop
and
setg
ljmp
into
sub
jmp
mov
loop
push
pushf
clc
jg
push
jl
imul
inc
pop
dec
inc
mov
inc
in
repnz
loopne
int
imul
pop
xchg
mov
scas
inc
data16
adcl
imulb
shll
lahf
movsl
ret
sbbb
push
aas
shrl
lods
push
fimull
das
int3
divb
popf
clc
shll
loop
mov
mov
popf
into
push
inc
icebp
push
push
cmp
pusha
pop
mov
data16
iret
xlat
xor
xor
inc
lds
nop
sub
mov
mov
sbb
mov
int3
push
sub
ret
push
enter
and
sbb
adc
pop
xor
mov
insb
fs
adcb
js
addb
shll
push
or
and
cmpsl
repz
popl
cmp
pop
cwtl
xchg
xchg
xchg
push
jo
out
xchg
adc
add
mov
push
add
cmp
test
xchg
add
mov
xchg
jo
in
int3
js
or
inc
add
movl
inc
dec
inc
xchg
sbb
mov
test
leave
sti
xchg
inc
mov
orb
mov
repz
ds
dec
jb
leave
jle
inc
xchg
shl
jb
cmp
jne
mov
ljmp
and
xor
push
fcmovnb
pop
bound
add
adc
fxch
rorb
mov
arpl
push
jle
xchg
test
sub
and
push
cmp
push
insl
adc
nop
pop
imul
mov
adc
shrb
pop
adc
int
imul
gs
push
mov
sub
sub
dec
and
and
push
jmp
cmp
mov
ds
repnz
and
addb
cmp
leave
mov
mov
adc
xchg
nop
lahf
jl
shll
mov
lock
js
lret
outsl
sub
jmp
movsl
cmp
sarl
int3
xchg
inc
cmp
aad
pushf
div
pusha
xor
pop
dec
addl
ja
lcall
sub
ficoms
add
mov
pop
das
sbb
stc
test
mov
ss
aas
cmp
cmp
lret
mov
inc
push
xor
addb
jo
cmp
dec
imul
xor
lock
mov
mov
mov
mov
xchg
cmp
cltd
nop
add
jne
int3
jmp
dec
dec
cmc
cltd
cmp
and
sbb
sbb
adc
sub
popa
sarl
cmp
loopne,pt
mov
stos
std
jae
stos
mov
pop
mov
jnp
push
sbb
in
outsl
cmpsl
shlb
aas
pop
jl
addr16
lret
scas
cli
xchg
ljmp
mov
data16
sub
add
mov
or
push
in
mov
sbb
inc
mov
adc
int
jmp
push
orb
aaa
insb
mov
imul
fdivl
push
or
adc
lock
jmp
imul
arpl
pusha
enter
push
mov
adcb
mov
mov
pop
sub
xchg
loope
adc
cmp
mov
jmp
xor
push
mov
push
sub
sbb
in
fucomp
mov
adc
cmpsb
xchg
pop
cmp
xor
pop
repz
cmp
mov
arpl
test
mov
in
inc
fucom
mov
aad
mov
cli
pop
mov
mov
mov
pushf
pop
push
in
cmpsl
cmp
mov
push
sub
sbb
fldt
inc
push
add
mov
nop
xchg
sbb
sub
repnz
cli
mov
sahf
outsb
sbb
int3
movsl
sub
push
enter
adcb
push
es
imul
scas
sub
mov
insb
dec
cwtl
ret
xchg
and
mov
leave
pop
sub
js
push
mov
les
inc
mov
inc
data16
push
out
push
push
addr16
inc
mov
cmp
xorl
ss
xchg
sbb
xchg
and
test
inc
test
push
ds
gs
cltd
bnd
add
xor
adc
test
sub
push
sub
mov
push
popf
jae
shll
sub
mov
and
mov
test
rcr
mov
fs
test
mov
aad
xor
pop
jmp
push
je
in
cmp
add
int
and
pusha
addr16
mov
lock
sub
gs
cltd
jo
add
aad
sbb
les
pop
xchg
test
add
fiaddl
dec
enter
insb
sti
xchg
jmp
clc
in
dec
add
leave
idivl
fwait
sub
fimuls
stc
mov
push
stc
adc
imull
scas
dec
jge
xor
pop
push
sbb
jp
and
test
inc
xchg
mov
lea
cmp
mov
adc
push
cld
inc
sub
arpl
push
cwtl
jmp
jle
pop
and
mov
shr
lcall
dec
inc
sbb
movsb
mov
fdivp
dec
bound
jge
and
ret
stc
aas
ret
inc
xorl
lcall
sub
cmp
or
or
cmp
rcrb
jo
sub
out
pop
xchg
in
pop
cmp
and
dec
stos
cwtl
sub
and
lahf
fcoml
movsb
adc
lods
sbb
adc
movsl
data16
mov
pop
sub
sbb
xchg
lea
mov
cwtl
add
movsl
add
sub
xor
insb
or
or
addl
cmpb
dec
dec
addr16
test
clc
mov
add
mov
lea
add
xor
sarb
sub
pop
inc
sbb
inc
push
pop
and
jmp
ret
jl
ficoml
insl
subb
mov
sbb
dec
mov
mov
jno
mov
or
push
testl
mov
xchg
lret
cwtl
daa
sub
adc
sbb
mov
ss
sti
cli
shl
mov
mov
fcomps
sbb
loop
push
lods
shlb
mov
movsl
mov
ss
sarl
xchg
rol
ret
add
mov
sbb
fnstenv
aam
xlat
pop
ret
push
cmc
gs
hlt
push
imul
xlat
cmp
jae
jae,pt
call
imul
pop
lods
jno
repnz
jmp
lds
aaa
rcrb
stos
sub
fbld
lahf
push
fstps
add
imul
cmp
shl
adc
jp
add
jnp
push
lret
and
inc
jbe
int3
std
imul
or
jne
repnz
andb
mov
dec
xor
dec
sbb
movsb
ss
sub
into
add
pop
xchg
jne
mov
sbb
into
js
andb
ss
xor
adc
xor
or
aad
cmp
js
pop
sub
mov
xchg
jl
movsb
xchg
notb
sub
sar
jbe
xor
pop
cmp
adc
mov
inc
clc
xchg
fwait
imul
outsb
stos
lods
push
mov
xorb
pop
lret
sub
scas
inc
fists
pushl
sbbb
cpuid
aas
mov
ret
dec
loop
repnz
add
xor
pushl
sbbb
cpuid
aas
mov
ret
dec
loop
repnz
add
xor
pushl
sbbb
cpuid
aas
mov
ret
dec
loop
lock
add
xor
loop
repnz
jge
insl
movsl
or
mov
mov
pop
mov
orb
xchg
jmp
sti
clc
stos
xchg
movsb
mov
lahf
xor
add
push
popa
notb
inc
cmp
jmp
sti
icebp
mov
fwait
shrl
and
arpl
jnp
and
inc
cmp
jno
icebp
mov
rorl
or
pop
adc
pop
sub
pop
lcall
mov
cmp
dec
jp
rorb
sbb
push
nop
cld
shr
pop
mov
enter
lahf
jl
icebp
sahf
loope
sub
mov
cmpsl
out
xchg
sub
push
popa
inc
pop
mov
lret
cmp
enter
xor
pop
sahf
loopne
dec
xor
add
test
ljmp
lret
xchg
push
out
xchg
cltd
lahf
push
stos
mov
ss
mov
and
popa
xchg
test
sbb
jl
push
mov
dec
inc
xor
or
mov
push
scas
js
mov
xor
and
sahf
jle
fcmovb
push
jne
sarl
loope
imul
arpl
pop
xchg
movl
xchg
lahf
cmp
shrl
and
adc
inc
jno
popa
cmc
push
xor
aam
ret
xchg
xchg
xchg
cs
mov
or
into
inc
sbb
dec
and
xor
aad
repnz
rclb
ret
inc
sub
insb
cmp
dec
xchg
cmp
dec
mov
in
mov
loope
shrl
and
imul
jno
popa
sbb
inc
cmp
jmp
sti
icebp
mov
fwait
shrl
and
imul
jno
popa
sbb
inc
cmp
xchg
adc
addl
repnz
cli
insb
out
pop
in
push
mov
bound
cli
mov
cs
mov
movsl
push
data16
xor
insl
mov
xchg
xor
jae
test
gs
xchg
shl
xor
popa
xchg
ret
out
out
jns
jg
inc
mov
jnp
les
in
out
ret
sub
mov
lods
lret
xor
and
adc
jbe
jbe
add
and
or
adc
int3
loope
fdivs
pop
fsubl
icebp
roll
cmp
aaa
cmp
xchg
push
xchg
sub
xchg
jnp
inc
mov
sarl
mov
stos
adc
xor
fwait
and
jl
add
add
test
sub
inc
mov
inc
es
inc
nop
repz
sub
rcrb
es
push
int
jge
xchg
fucompp
ss
movsl
ja
pop
add
dec
out
in
push
insl
mov
push
push
jns
lcall
cmc
enter
lea
movsl
aaa
in
test
ss
fwait
or
fldenv
aaa
push
sbb
adcl
pop
mov
add
stc
sub
ss
in
xor
sub
dec
repz
inc
inc
lret
out
mov
fs
out
dec
and
mov
pop
into
outsb
add
seta
shl
cmpsl
sbbb
push
pop
xchg
push
xor
pop
push
fsts
aaa
gs
cmpsl
push
rcr
xchg
shlb
push
cmp
jae
push
int
in
dec
sbb
sub
insb
scas
xchg
pop
stc
sub
jp
sbb
pusha
in
cmc
shrl
aad
or
mov
sbb
fsubl
stc
stc
jb
push
loopne
pop
repz
cmp
cmp
jns
dec
dec
sbb
add
dec
enter
inc
cwtl
mov
pop
push
out
xchg
jb
pop
adc
xor
inc
rorl
push
addr16
into
not
and
out
jae
jmp
cli
pop
fcmovne
incb
mov
ljmp
dec
add
decb
add
int3
sbb
scas
addl
adc
mov
adc
aas
mov
movsl
mov
sub
sahf
dec
es
xor
cmpsb
mov
cmp
adc
dec
sub
mov
sub
mov
insl
adc
aaa
stos
mov
mov
mov
dec
sub
orb
lds
jns
jne
cld
jae
xchg
mov
lods
push
enter
xchg
push
sti
sbb
push
out
lret
mov
dec
sbb
inc
fldt
lds
sub
arpl
push
hlt
push
cmpsl
inc
cli
push
adc
popa
mov
mov
jnp
icebp
or
xchg
inc
in
out
xchg
and
loope
add
cmpsb
ret
xor
mov
imul
jge
add
clc
push
adc
jae
xchg
popa
xchg
mov
cmpsb
imul
out
imul
mov
sbb
mulb
ljmp
lds
push
mov
sbb
ja
je
imul
andb
sbb
fstps
pusha
push
cmpsl
fldl
adc
xor
xor
jo
xchg
fs
push
push
inc
outsl
test
test
jle
mov
ret
aaa
xlat
and
lret
repz
jne
pusha
xchg
xchg
repnz
add
add
or
dec
mov
sbb
mov
fs
mov
adc
outsl
cmp
adc
in
into
jb
add
add
push
mov
lret
push
fcmovnb
mov
dec
and
dec
nop
dec
mov
or
dec
xor
ds
push
mov
in
pop
cltd
shl
jb
or
push
stos
or
ljmp
add
int
flds
movsb
rorb
in
aad
add
addr16
jecxz
mov
popf
sbb
dec
addr16
sbb
sub
rcr
leave
adcl
inc
cmp
pop
pop
push
mov
arpl
cmp
aam
std
in
mov
and
scas
mov
xor
or
cmc
push
push
pop
cld
pop
cmp
ds
push
dec
and
push
inc
push
jmp
jno
inc
movb
roll
sub
addr16
inc
fdivrp
jp
pusha
push
dec
sub
andb
push
pop
xor
popa
and
xor
loop
arpl
xchg
and
lods
pop
or
in
ret
mov
sub
repz
mov
in
and
cmpsl
sbb
xchg
and
pop
gs
dec
aam
fidivrl
shlb
frstpm(287
imul
into
cmp
jo
add
adc
loope
jo
pop
push
push
mov
popf
push
xor
shlb
sub
test
inc
xor
addr16
or
pause
jg
andl
movsb
into
mov
outsb
clc
pop
imul
and
mov
or
adc
out
fcom
cmp
cmc
jecxz
cmp
lahf
lret
pop
and
pop
out
in
mov
mov
xchg
sub
pop
inc
jbe
enter
sbb
sub
adc
mov
into
pop
xorb
xor
and
jle
jle
dec
xchg
std
rcrl
mov
xchg
cmpsb
push
pop
loop
fidivrl
rcrl
movsb
fnstenv
lods
test
xchg
sarl
out
dec
mov
mov
outsb
dec
cli
imul
repz
rorl
xchg
test
push
ret
cmpsl
mov
out
call
pop
or
xchg
lidtl
orl
rcll
lret
addr16
cmp
imul
fldl
jno
inc
and
mov
in
cmc
out
or
sbb
aad
xchg
inc
in
inc
imul
loopne
cmp
in
insb
icebp
clc
and
sar
shlb
cltd
xor
jo
jg
push
ror
cwtl
or
push
xchg
xchg
add
mov
sbb
mov
enter
or
dec
dec
jo
test
jae
jns
fcmovu
mov
in
mov
mov
mov
fldenv
sbb
push
mov
repnz
push
inc
fmuls
cs
stc
mov
dec
in
cmp
icebp
fstp
xor
leave
adc
addr16
nop
adc
inc
call
mov
xchg
ds
js
divl
xchg
dec
and
push
fistpll
push
test
imul
jbe
and
insb
cwtl
jmp
or
ret
lahf
insl
mov
inc
cmc
call
inc
xchg
imul
jmp
xor
scas
ja
inc
jo
sub
xchg
outsl
xchg
or
push
xchg
aaa
mov
ljmp
imulb
pop
cmpsl
push
insb
movsb
cmc
lcall
fdivrl
xchg
rcr
lock
add
out
jbe
je
popa
lahf
ret
adc
test
test
insl
jecxz
and
push
adc
and
scas
insl
mov
xchg
xchg
cld
inc
fsubs
in
push
les
cmp
sbb
cld
loop
mov
ljmp
shlb
sub
aaa
sarb
adc
mov
pop
sti
rcrb
pusha
sub
test
ja
dec
imul
jp
rol
repz
pop
shrl
push
jge
xor
jb
aad
ja
dec
arpl
shlb
aas
inc
adc
xchg
jp,pn
cmp
fistpll
movsb
aam
pop
push
mov
sub
mov
jmp
mov
mov
jno
mov
cmp
pop
jg
add
cmp
sbb
add
xchg
xchg
mov
add
cmp
pop
dec
movsl
jnp
shll
lds
jecxz
stos
cmpsl
adc
jns
push
jl
push
loope
sub
out
cmp
jae
ror
sub
test
lret
xchg
in
pushf
dec
lods
cltd
xor
add
sarl
mov
inc
mov
js
fidivrl
imul
cli
lret
cmp
adc
inc
dec
cltd
mov
push
fmuls
lret
adcb
out
scas
divl
out
and
lret
xchg
dec
jge
in
xchg
std
cltd
cltd
les
sbbb
lods
jne
fsubrl
andb
or
mov
sar
aas
xchg
test
mov
out
arpl
ret
lret
inc
adc
pop
xchg
sti
pop
js
aaa
push
mov
push
mov
sbb
stos
cld
sbb
nop
pop
test
xchg
je
jp,pt
jns
push
lahf
sbb
adc
xchg
bound
jge
loop
cmp
sbb
out
popa
fisubl
clc
in
pop
cmp
jl
popa
mov
push
out
or
jne
cmp
pop
stos
xchg
cs
xor
xchg
and
fnstenv
gs
lock
jp
out
xchg
orl
outsl
mov
mov
addr16
in
lret
popa
pop
outsb
stos
add
xchg
and
test
mov
add
sub
fstpl
test
fs
xchg
pop
mov
adc
mov
scas
adc
mov
dec
inc
repz
mov
jmp
mov
leave
imul
and
sbb
in
xor
arpl
jle
inc
call
sub
or
pmovmskb
pop
rcl
and
cmp
dec
xorl
sub
push
cmpsl
pop
jne
iret
add
sub
pop
jo
or
daa
jbe
mov
sub
mov
mov
aaa
sbb
pop
adc
in
xor
cmp
or
sub
test
aas
xor
ffreep
lods
cmpb
mov
out
lret
nop
sbb
out
mov
repz
and
adc
xchg
call
xor
outsl
cmpsb
out
cmp
and
xor
sbb
add
xor
leave
insl
lret
data16
leave
mov
stos
add
adc
mov
sub
enter
add
ss
xchg
mov
loopne
inc
inc
dec
cmc
es
sbb
fnstenv
sbb
cld
filds
dec
pop
mov
jo
mov
adc
movsl
sub
mov
push
dec
rorb
push
adc
sub
adcl
sbb
sbb
stos
clc
fisubl
clc
xor
lcall
pop
or
subl
test
in
les
dec
aam
push
pop
push
arpl
in
dec
fs
jge
push
xor
xchg
sub
xchg
push
mov
loopne
sbb
int3
stos
pop
in
and
lds
inc
mov
pop
jae
les
sbb
stos
adc
cwtl
xchg
xor
jp
fidivs
xchg
sub
jecxz
push
dec
imul
or
and
fwait
push
jecxz
mov
mov
adc
adc
movsb
xor
fs
pop
push
inc
out
sti
mov
idivl
mov
sbb
mov
fldcw
into
jecxz
sti
ja
testb
lcall
movsl
sbb
mov
cwtl
mov
andl
lock
jns
imul
inc
add
inc
mov
rcl
clc
xor
mov
add
inc
inc
add
fs
das
cwtl
sub
dec
gs
test
aam
or
add
lret
stos
stos
push
xlat
fildll
shld
xchg
pop
insl
inc
lret
and
js
cmpsl
pop
cmp
cmp
sub
or
dec
jecxz
push
adc
enter
sbb
jmp
add
cmp
bound
inc
push
andl
cmp
mov
add
fldcw
xchg
mov
mov
pusha
fxtract
xor
std
jns
imul
and
push
pop
add
mov
sbb
dec
inc
mov
out
fisubs
mov
rorl
adc
inc
push
jl
stc
push
inc
mov
aaa
popf
test
in
aas
loop
sbb
imul
lcall
xor
mov
fwait
and
ret
ret
sub
cwtl
xchg
lods
push
mov
cmp
out
sbb
out
mov
and
lret
aaa
mov
loope
jb
je
cmp
fimull
xor
ja
fimull
mov
rcl
cwtl
sub
pop
cmpsb
adc
cli
clc
dec
dec
xchg
shll
xor
enter
mov
lret
out
add
test
iret
push
int
push
mov
jp
lock
inc
imul
in
xchg
sbb
push
fmul
adc
sbb
lods
cmc
gs
filds
mov
insb
pop
xchg
arpl
pop
mov
inc
push
push
sbb
or
sarl
call
addl
pop
lahf
into
mov
mov
dec
pop
stc
add
pop
ss
dec
out
pop
push
popa
push
addb
jge
movsl
mov
jmp
dec
insl
add
push
mov
cmp
mov
jae
fs
int3
inc
std
pop
push
in
rclb
ljmp
mov
dec
ret
je
in
leave
jp
cs
rorw
test
lds
stos
pop
sahf
outsl
and
insb
iret
xor
aad
lret
cmp
add
inc
in
push
jmp
ja
cwtl
sub
fs
sbb
push
sar
cs
adc
xor
pop
ljmp
je
movsb
mov
imul
xchg
pop
xorl
lods
xchg
pop
cmpsl
sub
movsl
dec
mov
xchg
ja
nop
mov
pop
adc
cwtl
cmp
das
cwtl
add
xor
or
dec
aad
loop
daa
lahf
mov
inc
push
xor
loopne
fistps
negl
pcmpeqd
push
sbb
mov
mov
out
fsub
xchg
lock
out
adc
mov
cmp
clc
sub
popf
jmp
arpl
std
ljmp
jns
and
pop
mov
add
gs
sti
imul
movb
add
scas
mov
cmp
sbb
bnd
js
add
jmp
ljmp
push
cltd
and
or
or
lods
cld
inc
xor
insb
int
mov
hlt
xchg
aam
lret
xchg
cltd
push
inc
xor
adc
int
frstor
xchg
dec
push
movsb
test
data16
aaa
xchg
jp
inc
mov
outsb
xchg
mov
sub
xor
sbb
inc
mov
inc
add
mov
pop
gs
sar
jg
adc
xchg
pop
lea
mov
sbb
xor
sub
je
dec
vmread
mov
pop
jno
inc
mov
mov
mov
mov
pop
test
inc
cmp
cmp
xor
add
push
iret
ficoms
ret
sbb
cli
sub
cmp
out
mov
loope
cli
mov
sub
pop
or
and
pop
adc
mov
sbb
movsl
cmp
jnp
pop
adc
adc
pop
dec
pop
add
scas
lcall
and
popa
pop
mov
cwtl
xor
pop
push
fwait
inc
test
mov
ret
lods
push
sub
pusha
stos
xor
mov
adc
fisttps
inc
aad
xchg
mov
and
idivb
mov
sti
sti
test
xor
test
mov
jo
and
add
imul
add
push
and
test
and
push
fdivr
clc
stos
lea
scas
or
je
gs
sti
sbbl
adc
repz
aad
ret
and
push
add
pop
adc
insl
inc
notl
pop
jb
pop
jl
rcr
sti
xor
xor
icebp
pop
cmc
aad
cs
xchg
xlat
scas
imul
movsb
inc
sbb
xchg
cmp
repnz
test
aam
push
fsubl
test
push
pop
cmp
push
gs
sub
clc
pusha
lods
and
mov
cmpsl
jnp
into
and
out
subl
or
and
scas
inc
sti
inc
mov
xchg
clc
dec
mov
xor
roll
jo
xor
test
or
jno
out
out
push
jae
out
dec
push
mov
inc
xor
adc
test
stos
sbb
shr
cs
xchg
sub
mov
xchg
add
and
rcl
inc
and
pushf
sbb
mov
clc
pusha
inc
dec
dec
mov
fucomp
je
adc
xchg
ja
push
jne
iret
mov
testl
xor
push
ret
push
shll
in
mov
movsb
in
lret
mov
xor
repnz
pop
iret
out
cltd
sarl
test
shll
scas
enter
or
mov
adc
jge
lods
mov
loop
push
nop
mov
pop
cmc
jne
leave
test
lret
inc
outsb
or
or
mov
lret
dec
movsb
push
mov
aad
mov
push
xchg
jns
and
push
xchg
test
flds
xchg
inc
inc
je
inc
in
or
sti
pop
mov
sub
iret
andl
test
jo
lcall
cmp
or
mov
push
das
xor
mov
clc
mov
arpl
aas
leave
mov
ja
sub
dec
dec
adc
lods
ja
cs
insb
nop
lahf
ss
xchg
push
lods
repz
pop
pop
lahf
sarl
and
sarb
pop
insb
cmp
cmpl
mov
and
les
pop
push
jae
fstpt
xor
rcr
aam
push
test
jge
jb
push
les
jo
push
arpl
mov
fnstcw
jl
test
sbb
mov
dec
adc
jo
xor
fwait
hlt
push
fs
cmp
movsl
clc
xchg
adc
daa
daa
dec
in
dec
stos
xor
pop
sub
dec
mov
movsl
cmp
ret
sbb
xchg
xorl
outsl
in
shrl
fwait
adc
jnp
inc
mov
into
and
sub
ret
push
mov
test
mov
test
sub
imul
or
jb
fldl
xor
ss
daa
cmpsl
push
mov
xchg
rcrl
aad
leave
dec
pop
mov
shrl
pop
movsb
or
jns
pop
mov
dec
rclb
hlt
into
rorl
cmp
xlat
je
sub
mov
aad
rorb
cmpsb
stos
and
ret
addr16
ss
inc
adc
inc
add
in
add
sti
pop
xor
aas
and
pop
out
mov
and
mov
cmpsl
clc
or
stos
fidivl
mov
rolb
ljmp
xor
pusha
mov
ja
imul
jo
jmp
es
jae
out
push
push
sub
sarb
pop
xor
push
enter
cltd
hlt
adc
out
cmp
je
lret
rol
inc
and
sbb
jo
ljmp
das
mov
mov
fs
add
mov
pop
ret
mov
xchg
test
xchg
sbb
xor
jl
mov
out
add
inc
sbb
hlt
fadd
shl
outsb
or
jmp
mov
loope
cmp
sub
sbb
cld
xchg
jmp
call
dec
or
sti
jb
daa
push
scas
xor
lahf
lret
ret
test
inc
gs
popf
adc
sahf
mov
push
inc
xlat
mov
scas
insl
mov
jg
push
addl
push
cmpsb
mov
dec
loop
jo
daa
xchg
cmp
cmp
outsl
lsl
jno
leave
fistpl
mov
imul
shll
push
xor
test
rol
ss
lea
mov
cmovae
jge
sub
pusha
jbe
pop
push
or
sub
aam
out
xor
lock
fstl
sti
call
push
filds
xchg
cli
xor
addl
repz
loope
lock
loopne
xchg
loopne
and
jb
xchg
fnstsw
cmp
ror
cmp
pop
xor
hlt
adc
sub
adc
mov
lock
or
pop
out
cmp
jecxz
in
add
fdivrl
adc
dec
jne
add
scas
push
fdivs
dec
pop
and
adc
push
add
push
inc
push
pop
fimull
add
loope
out
xor
jne
shll
xchg
push
lock
mov
shrb
cs
adc
das
mov
ror
aaa
out
xor
loope
movsb
xor
push
mov
arpl
mull
in
dec
sbb
loope
pop
fcompl
imul
push
jg
cltd
ret
fsubrs
xlat
mov
or
icebp
in
mov
orl
gs
orl
out
rcrl
mov
insl
jno
addr16
sub
xor
pop
adc
inc
mov
test
cmpsb
push
fyl2xp1
fadds
adc
cli
mov
loop
cmp
dec
or
jp
inc
scas
arpl
stos
push
xchg
cmp
xchg
inc
mov
jns
testb
cmpsb
adc
pop
xchg
or
lcall
dec
repnz
stc
jmp
jo
in
and
aad
jb
into
sub
sarl
cmp
out
cmp
shrl
and
imul
jno
popa
sbb
inc
cmp
jmp
sti
icebp
mov
fwait
shrl
and
imul
jno
popa
sbb
inc
cmp
repz
shrl
and
imul
jno
popa
sbb
inc
fbstp
jno
fwait
push
sub
into
mov
icebp
mov
jae
arpl
iret
loope
icebp
out
adc
lahf
scas
or
jg
outsl
add
adc
and
and
movsl
iret
push
out
sbbl
push
dec
add
outsl
inc
jae
mov
xor
jns
and
jae
sub
lahf
lahf
icebp
mov
pop
jb
or
arpl
push
insl
pop
scas
lods
popf
xchg
xchg
cwtl
out
test
lcall
mov
pop
inc
pop
adc
and
mov
push
lahf
adc
sub
cmp
mov
and
or
pop
dec
and
into
jle
fists
dec
xchg
rorb
test
or
je
jno
adc
push
psubsw
mov
mov
pop
aad
push
inc
mov
pop
adc
and
fcompl
jge
sbb
sub
cmp
popa
xorb
dec
adc
fnstcw
cmp
inc
loopne
imul
js
pop
mov
ljmp
test
pop
inc
pop
and
xor
lcall
out
gs
jmp
scas
xchg
dec
pop
jg
outsl
dec
pop
sbb
adc
xor
out
out
cli
jmp
aad
mov
inc
add
sbb
jae
jg
dec
inc
push
popa
mov
nop
out
call
in
es
ss
sub
or
jle
dec
imul
orb
mov
pop
push
dec
popa
jg
outsl
add
adc
and
xor
rcr
iret
loope
icebp
out
sbbl
push
dec
popa
jg
outsl
add
adc
and
xor
rcr
cmpsl
and
xor
iret
xor
in
sub
pop
or
xchg
sbb
mov
adc
cmpsb
gs
je
xchg
pop
mov
pop
ljmp
xchg
mov
lahf
inc
add
fimull
push
aaa
jno
insl
xor
inc
jl
xor
sarl
xchg
and
pop
gs
cwtl
or
popa
lahf
roll
fndisi(8087
pushl
dec
add
adc
push
dec
cwtl
ds
pop
dec
repnz
push
dec
out
push
push
test
jbe
das
mov
ja
inc
mov
insb
cltd
cwtl
mov
std
and
xchg
xchg
ret
dec
xchg
jo
sbb
xor
jle
shrl
mov
sub
in
jle
adc
add
and
mov
push
jmp
rcll
or
push
adc
adc
adc
jp
mov
lods
dec
xchg
and
xchg
cltd
push
push
adc
sarl
out
fdiv
rclb
insb
lcall
loop
mov
lods
jae
loope
jne
pop
shll
push
jge
cmp
xchg
lcall
lahf
cwtl
cli
cmp
push
xor
dec
hlt
inc
dec
cs
lods
sbb
addl
inc
je
xchg
in
sub
shl
add
shlb
add
jge
sub
lock
jae
xor
push
scas
stc
mov
xor
pop
enter
dec
sub
ret
lret
leave
push
inc
xchg
xchg
fxtract
ret
clc
sarl
jmp
imul
xor
sub
out
jge
test
clc
add
js
out
fsubs
lds
bswap
mov
and
test
xchg
ds
jmp
pop
leave
adc
xchg
jno
imulb
fprem
sub
jmp
outsl
dec
dec
mov
mov
mov
in
repz
aaa
cmp
cmpsl
xlat
sbb
fnstenv
test
mov
hlt
pop
jne
mov
outsb
push
pop
pop
insb
sub
sahf
xchg
jl
mov
lret
scas
lods
jl
je
sbb
xor
pop
icebp
pusha
sub
movsb
xor
xchg
aad
xlat
lea
jnp
int
orl
sbb
std
es
sub
not
outsb
lret
dec
fildll
push
fcmovnb
stos
ffreep
fcompl
loopne
push
popa
cmp
push
inc
push
out
and
out
popa
cli
pushf
subb
xor
add
leave
cmp
mov
mov
add
push
cli
jecxz
add
lret
imul
mov
xchg
add
fldt
es
inc
in
into
xor
or
fnsave
cmpsb
out
jnp
xor
decb
outsb
hlt
jno
add
inc
imul
movsl
inc
mov
std
je
test
stos
enter
cmpsl
adc
cmp
sub
cmpsb
pop
inc
in
xorb
nop
shlb
add
aas
jp
popw
sbb
cld
add
and
jg
adc
nop
mov
inc
mov
xchg
call
int3
jbe
adc
sub
or
cmp
pop
andb
sarb
fidivrs
fwait
jmp
push
rol
inc
fnstenv
ja
data16
add
jae
lcall
out
or
dec
out
cmpsb
test
sub
dec
pop
insb
fiaddl
push
call
xchg
inc
xor
out
daa
sub
push
mov
daa
ds
fstpl
sbb
inc
dec
stc
mov
jno
mov
rclb
mov
adc
adc
enter
mov
imul
in
jb
cmp
rcrl
cwtl
mov
scas
es
mov
dec
dec
cli
jl
mov
int3
ja
stc
fprem1
stos
jo
les
test
dec
loopne
inc
adc
outsl
mov
cmpsb
fsubrl
jl
mov
lret
cmp
sub
push
xor
std
in
rcr
cmp
pop
jle
dec
shlb
xchg
jle
lahf
mov
jl
mov
popf
cltd
cmp
pop
fwait
mov
mov
inc
movsl
aaa
movsl
adc
xchg
test
data16
cli
insl
mov
push
xchg
jg
scas
out
dec
mov
imul
xchg
xor
sub
inc
jge
cli
fs
mov
xor
fstpt
push
ds
testl
bound
jle
pop
cmp
push
and
jmp
adc
icebp
xchg
fwait
inc
cwtl
iret
add
leave
subl
cmpsb
cli
mov
adc
push
or
stos
cli
lret
dec
ja
xlat
mov
push
out
mov
cli
dec
lods
stc
sub
mulb
mov
fwait
mov
add
mov
xor
sbb
mov
push
jg
mov
jno
mov
bnd
addb
stos
cltd
xor
movsl
jp
xchg
dec
mov
mov
sub
mov
out
ret
jbe
push
and
outsl
fildll
jge
test
inc
xchg
leave
xchg
mov
xchg
test
ss
gs
movl
cmpsl
cmp
or
push
cmp
inc
incl
mov
jmp
push
mov
mov
jo
push
aad
pop
sbb
push
xchg
mov
stos
sbb
dec
data16
ja
mov
jg
xor
icebp
push
ret
movsb
mov
jne
dec
inc
insb
stos
add
addr16
aaa
jbe
adc
xor
mov
and
add
pop
mov
fimull
mov
into
pop
inc
push
push
les
data16
pop
std
jmp
dec
xchg
mull
jmp
test
stc
sti
pop
rclb
int3
aad
mov
mov
movl
sub
or
dec
sbb
push
jmp
cmp
jae
out
stc
cmp
cmp
jb
add
jg
mov
xchg
xchg
push
sub
mov
mov
adc
ljmp
jns
cs
lock
nop
jge
cmc
push
shr
lods
lock
inc
mov
mov
lock
or
dec
push
jle
ret
test
and
mov
popa
push
mov
stc
pop
cmp
pop
mov
pop
sub
jo
adc
sub
mull
sbb
push
sti
pushf
jae
push
xor
nop
fdivrl
jge
rol
flds
addl
add
push
push
out
inc
in
pop
mov
and
fdivp
pop
push
pop
adc
push
jmp
repz
aam
inc
or
xchg
push
inc
lahf
jecxz
movsl
dec
fnsave
push
push
push
push
or
pop
xor
cld
sub
out
push
or
sbb
mov
out
cmp
popf
and
loop
xor
loop
pop
inc
into
int
or
scas
mov
outsb
xor
pop
or
dec
pop
repnz
jb
add
mov
repnz
sbb
cmc
pop
outsb
jb
push
movsb
inc
push
jp
jnp
ret
inc
lods
test
outsl
in
pop
jp
mov
and
divb
sbb
jp
or
jno
test
sti
mov
or
loop
test
xchg
sbb
outsb
cmp
jg,pt
addr16
cs
push
inc
scas
fildl
or
daa
cmp
dec
addr16
xchg
cli
cmp
aam
fidivrl
mov
cmp
mov
js
cmp
dec
cltd
jae
bound
in
lcall
dec
sbb
inc
and
xchg
mulb
sbb
xchg
mov
push
lahf
ret
shlb
lods
popw
xor
aas
xchg
lret
pop
fmul
scas
dec
call
loop
push
inc
divb
mov
cld
fcmovnb
jl
movaps
outsb
jns
imul
dec
mov
push
xor
pop
jle
mov
xor
xchg
add
xor
es
nop
insb
mov
data16
aam
dec
repz
cmp
add
mov
jno
std
daa
pop
inc
hlt
ret
xor
xchg
inc
pop
in
dec
xchg
aad
loopne
ret
sub
scas
ret
stos
shr
mov
movsb
idivl
cmp
pop
jo
xor
inc
imul
mov
les
fldenv
sti
imul
cmpsb
imul
and
push
sbb
xchg
push
push
sub
mov
cltd
repnz
aam
cs
jp
sbb
sub
mov
push
pop
pop
aad
xor
and
lock
mov
pop
fbld
test
jecxz
add
inc
outsl
jp
mov
aad
call
fbld
adc
les
subb
adcb
sar
out
je
jb
xchg
lea
pop
test
xchg
push
icebp
dec
mov
add
addb
push
xchg
out
repnz
fstps
mov
fldl
or
and
xchg
mov
lods
outsb
aas
jbe
cmc
xchg
or
out
cwtl
aas
add
adc
in
add
nop
lahf
xor
inc
stos
jbe
les
test
in
cmp
sbb
cmp
sbb
push
and
mov
push
test
in
and
sub
scas
loop
inc
and
and
lret
dec
aam
lret
inc
cli
imul
movsl
jp
pop
adc
push
aaa
out
jns
pop
pop
lea
aas
and
sub
mov
cmp
jp
jno
pop
cmc
loope,pt
int
insb
nop
push
rol
push
mov
or
inc
dec
daa
icebp
pushf
lret
jmp
jmp
sbb
call
xchg
jl
xchg
pop
je
inc
test
repz
loop
jne
in
sub
push
dec
mov
mov
mov
adc
sub
sbb
xor
sub
rclb
pop
push
mov
iret
in
or
push
ss
lock
push
popf
mov
mov
fsubr
mov
sti
fnstcw
aaa
mov
jp
add
in
mov
mov
add
or
lret
cli
aaa
mov
ret
imul
or
dec
lock
icebp
jno
out
lcall
mov
lods
lret
push
dec
pop
das
cmp
ret
dec
sbbb
mov
mov
mov
ss
add
xlat
scas
mov
push
out
dec
addr16
inc
das
sbb
mov
in
and
icebp
and
std
stc
arpl
outsb
test
or
mov
push
jnp
test
adc
or
cli
ret
roll
inc
xchg
imul
cmp
dec
lods
imul
sbb
push
sub
pop
clc
mov
loope
jg
cltd
data16
inc
mov
pop
sbb
add
flds
clc
push
xchg
xlat
ficomps
es
pop
and
pop
or
cmp
add
mov
aaa
movsb
lret
repz
or
test
leave
pop
cmp
jp
les
push
movsb
pop
add
mov
pop
cltd
xor
sub
insl
fildl
push
ja
push
xor
orb
xchg
xor
and
js
test
movzbl
sub
xchg
sbb
xor
aam
in
push
push
jno
mov
jns
notl
inc
iret
inc
add
pop
out
cld
xchg
aaa
frstor
jno
dec
pop
rcl
or
inc
aam
test
outsb
jecxz
mov
push
fsubl
cld
mov
mov
cmp
ja
mov
push
cs
pop
jnp
int
push
test
loopne
repz
enter
test
addr16
mov
js
test
xor
test
sbb
mov
xchg
mov
rolb
leave
pop
insl
push
push
add
pop
and
xchg
movsb
fsubr
leave
mov
add
mov
loopne
push
xlat
in
adc
imul
mov
lds
mov
add
sarl
out
push
inc
mov
lahf
addr16
sahf
repnz
daa
jp
dec
jg
cmp
mov
dec
pop
out
jb
out
xor
pop
jmp
insl
and
lock
mov
iret
stos
push
orb
loopne
icebp
ja
jno
ss
insb
mov
jno
inc
das
mov
pop
jne
xor
fldl
mov
dec
xor
dec
jg
cmp
imul
mov
aam
arpl
push
pop
js
outsl
out
xchg
sbb
xor
fsubs
inc
loopne
mov
stc
mov
push
lock
sti
out
sub
test
aad
mov
dec
and
jnp
je
loop
cmpsb
outsl
push
addr16
daa
add
push
mov
fsts
arpl
pusha
dec
pop
mov
push
inc
fstps
test
xorb
mov
ret
pop
mov
insl
aad
and
adc
and
mov
xlat
loopne
scas
cs
mov
outsl
pop
xor
adc
lcall
dec
mov
cmp
inc
sti
inc
jg
test
fldcw
mov
push
or
lcall
arpl
adc
xlat
test
jo
ja
mov
lgdtl
push
mov
les
jle
and
cli
sbb
fadds
lahf
mov
or
mov
popf
call
push
je
int3
mov
inc
lcall
inc
fbstp
sbb
cmp
loopw
add
add
out
mov
int3
cmp
mov
lods
jae
sub
pop
xchg
sub
loop
add
xor
ror
cmp
inc
test
mov
push
pushf
xor
jle
jg
notl
cmpsb
jmp
cmp
lock
out
test
push
cmp
in
jo
add
xor
adc
out
int
jno
and
mov
mov
adc
cmp
dec
orl
xchg
inc
dec
call
inc
lods
fistpll
sbb
mov
jno
not
jmp
adc
and
dec
push
leave
sahf
adc
lods
or
fistps
mov
push
pop
mov
pop
test
mov
add
shr
jecxz
enter
sub
push
mov
test
push
xor
fwait
jecxz
dec
adc
pop
aaa
cli
outsl
and
jbe
pop
mov
push
push
dec
addr16
lahf
push
lahf
or
dec
pop
lret
cs
mov
repz
repnz
lcall
lret
fisubrs
insl
push
mov
lcall
sub
sbb
repnz
xor
push
inc
push
xor
jnp
cld
dec
loope
dec
cli
int3
xor
lret
call
or
ret
sbb
daa
add
jae
ljmp
scas
leave
dec
cmp
adc
xchg
and
repz
popa
popf
rorb
mov
inc
sub
nop
mov
fildl
icebp
fldt
pop
adcl
adc
and
jp
inc
inc
mov
mov
or
ljmp
lcall
jae
cmp
lret
pop
sbb
insb
leave
leave
test
pushf
mov
xchg
and
movsb
jb
dec
lret
loop
push
sbb
aas
ljmp
nop
rolb
out
out
add
repnz
pop
imul
lods
in
add
adc
cltd
mov
jmp
sub
fcompl
mov
pop
rep
pop
jae
in
sbb
sbb
adc
dec
mov
jnp
cmp
push
out
daa
insl
fisttpl
or
loop
xlat
xor
add
jge
ret
mov
ja
les
jno
sbb
sbb
stos
lock
jg
jle
jg
cltd
fstpl
mov
movsb
xchg
les
xchg
add
shrb
add
stc
fldenv
add
cmp
pop
adc
and
mov
sbb
aas
mov
xor
pushf
lret
sbb
faddl
test
gs
idivl
test
push
cmp
rclb
repnz
shlb
ljmp
jne
lock
out
sub
dec
out
shlb
sub
pop
dec
mov
outsb
int
vpavgw
xchg
fs
pop
in
fxch
cmp
gs
pop
push
mov
adc
or
je
in
sub
sti
sahf
pop
stos
adc
rolb
inc
dec
test
mov
shlb
loope
fstl
pushl
in
add
dec
int
das
pop
sub
jne
lret
xchg
mov
cltd
jbe
push
repz
outsb
xor
mov
xchg
aas
mov
insl
cmpl
mov
mov
mov
enter
faddl
pusha
test
mov
cmpsl
shll
mov
mov
pop
or
mov
add
rcrb
std
dec
cmp
sti
mov
movsl
sub
cmp
cmpsl
in
movsl
xchg
stc
roll
xchg
jecxz
call
lods
pop
jb
in
mov
in
jge
lock
inc
sbb
cmpsb
es
inc
push
iret
jb
sbb
mov
or
es
pop
lods
in
xor
out
ds
icebp
or
cld
and
pop
pop
insl
inc
pop
fidivrl
cmp
xor
cltd
fidivl
out
les
jbe
test
pop
dec
adc
jl
out
dec
xor
rol
aad
push
inc
test
jb
fs
mov
outsb
mov
cltd
leave
cwtl
mov
cwtl
pop
adc
and
cmp
rcll
and
push
repnz
mov
flds
loop
nop
bound
mov
pushf
pop
subl
popa
mov
xchg
pop
imul
shl
sbb
int3
divl
lock
ret
sub
fnstenv
push
inc
stos
js
push
adcl
in
jg
mov
jne
and
stos
xchg
xchg
frstor
out
or
je
adcb
cmp
fcompl
pop
cmp
pop
out
pop
shrd
fcmovu
sahf
mov
cmpsb
je
ja
enter
mov
lcall
xor
mov
sbb
test
lods
mov
push
dec
nop
adc
mov
or
push
lods
pop
lods
jb
sub
adc
mov
test
jmp
mov
imul
out
dec
mov
mov
lods
mov
and
out
jb
test
sahf
setb
add
cmpsl
push
int
sub
orb
pop
cmp
dec
arpl
adcb
test
xchg
icebp
push
call
nop
pop
and
les
mov
cmpsb
push
mov
imul
icebp
setb
jmp
scas
adc
loop
xor
lods
mov
cld
pop
and
in
jne
add
mov
fdivrl
xchg
jns
or
push
mov
dec
popa
mov
push
jbe
mov
sub
xchg
in
and
jge
popf
add
mov
shll
lret
adc
adc
les
cmp
cmpsl
xor
lahf
aam
imul
dec
add
scas
inc
call
arpl
repz
push
sub
loop
push
out
lahf
adc
iret
xchg
mov
jns
stos
jp
repnz
jo
jno
daa
int
pop
or
add
add
shll
lock
call
add
xchg
dec
mov
and
neg
fs
sub
inc
mov
mov
inc
jb
addr16
pusha
add
lret
mov
mov
shrl
scas
shrb
popa
xchg
sbb
loope
xorb
push
cmp
cmpsb
mov
fsubl
arpl
push
sbb
fabs
xor
mov
and
sub
jae
fs
jo,pt
push
push
iret
lea
enter
mov
into
xchg
cmp
outsb
aam
mov
sbb
push
iret
insb
inc
fimuls
adc
sub
jns
adc
mov
push
mov
cmp
adc
cmp
movsb
test
pop
ss
aam
inc
mov
test
fsub
loopne
mov
aad
aad
add
loope
pop
test
xchg
xlat
int
test
mov
bound
sub
gs
xchg
jb
cmpsb
pop
add
mov
push
out
adc
mov
or
hlt
mov
mov
jne
cmp
jo
dec
mov
mov
push
xor
mov
out
test
cmp
mov
in
xchg
pushf
cli
fwait
and
push
inc
ja
in
xlat
add
aam
sub
iret
adc
outsl
fmull
mov
xchg
lea
jge
mov
sbb
cli
pop
mov
or
aam
mov
pop
sarb
popf
addb
xor
clc
add
cmp
push
iret
rclb
sbb
pushf
in
sbb
adc
test
fwait
cs
mov
mov
push
jb
roll
dec
fidivl
pusha
xchg
mov
sub
adc
lret
push
push
adc
add
sar
js
rcrl
mov
jle
call
pop
stos
popf
push
jecxz
mov
inc
je
xchg
jg
rcll
mov
push
pop
adc
xchg
pop
dec
xchg
cmp
test
adc
sub
dec
dec
fldcw
mov
add
aam
testl
sbbl
push
dec
popa
jg
outsl
add
adc
and
xor
rcr
iret
loope
icebp
out
sbbl
push
dec
popa
jg
outsl
add
adc
and
xor
rcr
iret
cmp
xchg
mov
pop
push
dec
xchg
jg
outsl
add
add
and
fldcw
aad
iret
mov
lahf
orl
lret
jg
sbb
cltd
lock
into
rclb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
jbe
inc
ja
addr16
inc
imul
test
cmpsb
xchg
mov
xchg
jbe
inc
ja
addr16
ss
push
aaa
push
daa
out
test
not
out
xchg
mov
xchg
jbe
inc
ja
addr16
ss
push
aaa
push
daa
out
aad
stos
xchg
out
vpavgw
sar
cmpsl
cmp
xor
cmp
or
lret
cmp
loop
repz
xlat
cmp
outsb
cs
std
pop
sbb
cwtl
ss
clc
cmp
das
sbb
cmpsl
cmp
sub
pop
push
mov
shll
jle
inc
andb
lods
inc
inc
mov
pop
mov
daa
notb
xchg
cmpsb
data16
inc
sub
push
jae
push
and
sbb
ja
in
sarb
or
add
lret
cmpsb
mov
ss
test
push
jno
xchg
mov
aam
pop
dec
ret
xchg
negl
jbe
adc
fadd
add
cld
push
mov
cmp
out
push
push
cmpsl
stos
push
jbe
inc
ja
addr16
ss
push
aaa
push
daa
out
test
not
out
xchg
mov
xchg
add
js
inc
bound
push
out
xchg
scas
cltd
scas
mov
xor
adc
es
sub
inc
daa
adcl
mov
ret
add
jbe
sub
cmp
push
ss
push
aaa
push
daa
out
test
not
out
xchg
mov
xchg
jbe
inc
ja
addr16
ss
push
aaa
push
daa
out
test
not
out
xchg
mov
xchg
push
push
fildl
xor
in
pusha
loope
xchg
into
movl
and
popf
decb
jnp
call
divb
test
cmp
mov
sub
scas
sbb
mov
jne
mov
mov
mov
xorl
out
adc
inc
rorb
jg
lods
or
sub
in
and
and
sub
fildl
or
add
pushf
push
and
mov
inc
mov
sub
out
out
and
sub
ret
xor
mov
mov
paddusb
sbb
sahf
insb
push
loope
push
ss
adc
cmp
sub
adc
cmp
inc
cltd
push
popf
leave
adc
add
cld
enter
out
mov
inc
jl
out
xor
aam
in
in
xor
loopne
pop
jg
add
inc
call
push
mov
add
sub
dec
and
icebp
sahf
adc
repz
jmp
push
cmp
xchg
inc
iret
pop
daa
addl
pop
pop
gs
and
aad
xchg
jno
push
cmpl
jge
fwait
loope
mov
or
andb
mov
bnd
pop
fdivl
add
sub
pop
mov
std
ret
mov
out
les
mov
xchg
xor
popa
jnp
out
push
jmp
cmp
adc
sub
out
mov
mov
add
jmp
inc
lret
jge
inc
push
sub
or
imul
loopne
jo,pn
test
mov
or
test
jnp
mov
adc
stos
das
es
addr16
rorb
dec
bound
popa
jmp
mov
mulb
fldenv
bound
push
jle
fdivp
push
iret
adc
fadds
and
xor
cs
rcrl
in
mov
xchg
std
jns
fistpll
xchg
loop
push
outsb
push
pop
leave
adc
dec
cmpsl
lea
add
lahf
adc
mov
jno
test
pop
adc
add
mov
cli
or
adc
or
xchg
int
dec
shlb
stos
into
add
xchg
or
clc
nopl
inc
pop
jg
repnz
jns
cmp
xchg
daa
in
jbe
xchg
pop
scas
mov
jecxz
xchg
dec
cmp
xor
mov
lods
push
addb
adc
adc
xchg
imul
mov
push
xor
in
add
mov
inc
push
jno
daa
in
and
add
sbb
mov
pusha
mov
pushf
testl
sub
divb
xor
adcl
xchg
dec
push
jb
icebp
sbb
xchg
xchg
or
xchg
lret
popa
xchg
jg
rcrb
pop
and
in
bound
mov
rolb
or
sbb
aad
or
pop
add
into
pop
mov
cmp
loope
iret
out
pop
ret
loop
test
adc
push
push
es
das
xor
pop
hlt
add
cmp
int3
hlt
inc
lods
data16
sti
scas
fsubl
ds
imul
scas
nop
shl
int3
push
jne
jecxz
test
mov
test
add
xchg
les
and
adc
mov
jae
daa
mov
cld
lock
xchg
xor
addl
add
loopne
jne
mov
iret
test
int3
shlb
bound
jns
inc
lret
mov
testb
test
movsb
cmp
imul
cmpsl
adc
jg
fsubl
aas
lcall
and
mov
xchg
mov
jg
call
faddp
mov
decl
mov
or
addl
pop
xchg
mov
pop
pop
enter
mov
and
in
js
cltd
xchg
xor
and
add
and
or
sbb
imul
addr16
mov
sub
frstor
add
cwtl
repnz
pop
fsubr
mov
jne
leave
mov
xchg
pop
adc
cld
xor
rcrl
or
imul
in
andl
jl
push
mov
test
pop
daa
fdivrs
js
fcmovnbe
iret
push
sub
sub
cwtl
aas
xchg
push
clc
mov
jmp
mov
mov
add
push
and
and
mov
inc
and
dec
cli
pop
jb
pop
xchg
repz
ss
sahf
sub
imul
pop
popf
xor
fwait
mov
outsb
add
mov
int
pop
imul
nop
add
mov
sub
adc
movq
icebp
sub
adc
std
cmp
andl
cmp
in
mov
mov
out
sub
bound
clc
lods
andl
outsl
testl
movsl
pop
out
data16
inc
hlt
ret
scas
add
imul
push
inc
cmp
in
add
inc
adc
pop
cmp
push
pop
cmp
pop
push
cmc
sub
sub
mov
push
push
notb
mov
mov
cwtl
sbb
or
mov
incl
sarl
mov
sarl
cmp
inc
and
cmc
sbb
mov
or
and
pop
or
hlt
cmpsb
cmp
and
out
sub
push
hlt
dec
dec
xchg
mov
push
insb
jge
jae
mov
sub
mov
cmp
inc
out
lahf
and
mov
arpl
xchg
sbb
xchg
jne
subb
sub
fsubp
sti
jne
loop
test
mov
cmpsb
scas
daa
inc
in
dec
inc
or
xlat
mov
cwtl
push
cs
xor
add
fnsave
stos
loopne
dec
jae
and
mov
lock
sti
xor
pop
pop
and
std
test
adc
or
sub
cltd
outsl
clc
inc
pusha
cwtl
std
cmp
mov
cmpsl
mov
cltd
push
shll
sub
mov
jbe
test
push
test
cmp
mov
fwait
mov
cmp
imul
xor
gs
loope
adcb
cmpsl
sub
out
cmp
jae
outsl
add
rdpmc
add
push
push
fwait
mov
cmp
outsl
ret
bsf
jmp
stos
sub
mov
adc
xchg
mov
cmp
jne
fstps
pop
sahf
mov
popa
xlat
inc
xor
mov
sub
xor
dec
cli
lods
adc
in
jecxz
mov
xchg
inc
mov
rcll
jp
and
imul
pop
fadds
loopne
cmp
mov
mov
jbe
fdivs
jle
sbb
ret
push
rcrb
mov
push
jo
lods
sar
test
int
mov
aas
sbb
scas
ror
fldt
fmuls
aas
inc
or
mov
cmc
pop
loop
addr16
adc
test
loope
xor
mov
iret
xchg
jecxz
and
lods
popa
lret
sbb
iret
les
xor
mov
ljmp
sub
pusha
xchg
shrb
mov
jnp
decl
sbb
mov
scas
mov
stos
fistl
test
pop
leave
add
ds
iret
fs
push
xor
pushf
rsm
and
out
fldenv
lock
push
aaa
in
mov
add
pop
int3
mov
orl
jno
adc
mov
or
int
je
loopne
clc
xchg
pop
or
inc
push
dec
in
lods
daa
cmpsl
insb
cmp
sub
xlat
out
loope
jns
pusha
sub
nop
out
sbb
es
enter
mov
imul
jmp
add
lea
xor
fldcw
inc
arpl
pop
sbb
push
call
lahf
inc
outsb
push
sbb
pop
sub
sbb
lods
push
jmp
and
jg
lret
ret
out
jmp
mov
mov
test
fists
out
dec
or
mov
mov
jg
or
add
cmp
mov
sahf
xor
xchg
adc
shrl
notb
or
seto
mov
in
and
jns
sub
shl
into
pop
hlt
jns
cld
or
cmp
imul
js
mov
pop
ds
lds
repz
fwait
push
das
cmpsl
bnd
jbe
or
insl
jge
rcll
push
jne
push
pop
xor
int
fldenv
test
pop
pushf
sbb
mov
add
mov
cmp
mov
sub
adc
or
out
and
popf
outsb
xchg
aad
loopne
jno
cmc
icebp
sbb
int
lahf
mov
jbe
pop
jl
int
pop
jge
xor
pop
loopw
dec
out
or
sbb
mov
lock
dec
dec
and
scas
es
fxch
sbb
scas
cmp
movsb
xchg
sbb
lods
scas
inc
test
loopne
sbb
lahf
and
jmp
mov
icebp
cmpsl
sub
jo
inc
out
test
mov
loop
xchg
mov
jbe
hlt
daa
loop
dec
ret
and
aad
mov
out
xchg
fidivl
stc
icebp
mov
gs
jnp
xor
aas
inc
fwait
cld
pop
xchg
mov
movsl
scas
dec
mov
test
pop
sbb
aam
sarl
in
and
leave
or
mov
sbb
lahf
imul
pop
push
push
and
pop
sbb
mov
gs
sbb
dec
cmpsl
pushf
or
pop
xchg
pop
adc
cli
ljmp
cmp
inc
stos
loopne
call
enter
pop
jae
stos
xor
pop
mov
ret
mov
xor
push
and
fildl
aam
notb
xor
xor
push
inc
scas
jmp
lods
into
push
xor
mov
rorb
mov
lret
and
loop
icebp
lea
or
jge
mov
pop
repnz
std
push
mov
fldt
dec
scas
xchg
mov
fwait
jle
cmp
sub
mov
mov
mov
dec
adc
and
pop
neg
mov
dec
pop
lahf
in
mov
sbb
orb
aad
or
sub
mov
or
popf
sarl
inc
sub
jnp
jno
std
push
test
and
mov
xlat
jae
clc
jns
sub
int3
ret
or
mov
popf
fsubl
mov
inc
sbb
mov
or
dec
and
sub
mov
push
push
icebp
shlb
cmpsl
and
int3
mov
hlt
mov
or
cs
lea
movsl
lahf
mov
jne
repz
pop
lret
jo
test
push
in
xchg
mov
jge
pop
lret
adc
sub
bound
call
jecxz
test
lcall
daa
loopne
stos
push
sbb
loopne
push
lds
jle
test
dec
fstpt
sbb
test
hlt
push
jmp
xor
add
daa
repz
in
lods
push
stos
xchg
hlt
jne
add
cmpsl
dec
shrb
sub
bound
push
jae
into
add
cmc
xchg
ret
mov
dec
lea
push
std
idivb
cmp
inc
xor
enter
fldcw
insb
mov
sub
mov
xchg
lds
pop
push
xlat
out
lock
out
add
shrl
test
out
jne
jmp
or
in
adc
and
add
xor
mov
jmp
enter
out
divb
mov
icebp
rcrl
mov
mov
or
mov
sbb
lret
test
fisubrs
stos
adc
arpl
xchg
ljmp
hlt
xor
xor
mov
daa
xor
into
pop
insb
pop
inc
je
adcb
lret
sbb
leave
or
in
rcl
pop
cli
xor
inc
xor
scas
stos
daa
cmpsl
inc
xlat
and
and
xchg
inc
mov
jl
mov
xchg
xchg
dec
outsl
sbb
pop
cltd
inc
rolb
sbb
and
fstpt
pop
and
mov
mov
inc
jo
cli
aas
js
adc
and
add
into
mov
jecxz
xchg
or
and
mov
cmp
icebp
dec
movsb
adc
pop
cwtl
sub
fmull
mull
sbb
jg
add
dec
aam
out
add
adcb
lock
pop
push
jbe
sbb
mov
pop
adc
in
push
push
dec
mov
adc
pop
je
dec
dec
in
sbb
ficoms
iret
loope
push
push
orb
jmp
movsl
cmpsl
lock
hlt
lock
add
fiadds
adc
test
nop
push
mov
mov
cmp
xor
adc
out
leave
mov
xchg
mov
int
jo
cmp
pop
pop
and
ss
and
mov
rcll
or
add
popa
mov
sub
out
fwait
lds
std
mov
or
fidivs
fsubrs
sub
rcrl
fs
fucom
mov
repz
xor
fs
repz
xor
and
and
movsl
icebp
lahf
xchg
test
shll
fstpl
sub
ret
lret
sub
push
fisubrl
jmp
into
in
mov
adc
add
sub
mov
push
add
and
jmp
clc
ret
cmp
sub
inc
pop
mov
push
sub
fbstp
test
lcall
jno
pop
sub
dec
in
jmp
add
xchg
or
xchg
add
sub
sbb
jle
orb
jle
loope
mov
lret
movb
or
dec
adc
push
cmpsb
adc
std
xor
push
adcb
sub
push
cmp
mov
mov
xor
mov
sahf
mov
xchg
xchg
sbb
xor
test
aam
xor
addr16
mov
lahf
add
fsubrs
sbb
imul
mov
not
sbb
xchg
cli
pop
movsb
xchg
push
out
add
cli
inc
mov
pushf
dec
adc
xor
pop
xchg
repnz
sti
cmpsb
pop
loopw
sub
sbb
jno
in
lods
arpl
ljmp
and
out
rclb
or
ret
push
mov
mov
jmp
mov
xchg
sbb
push
sub
cmpsl
mov
std
aaa
mov
aaa
xchg
push
int3
add
lock
xchg
lret
jns
inc
cs
mov
sub
jae
xor
hlt
fists
push
or
inc
and
popf
pop
dec
mov
testl
cwtl
xor
dec
insb
xchg
sbb
mov
scas
sub
push
or
push
addl
jp
popf
divb
sub
int
xor
stc
clc
or
hlt
out
adc
ljmp
sub
adc
inc
lret
mov
pop
shlb
out
cmp
sub
out
mov
js
fcompl
mov
loope
inc
ss
inc
outsb
mov
shrb
in
fdiv
jo
xor
dec
out
leave
mov
inc
inc
push
dec
sbb
or
jmp
xchg
sti
test
push
fldenv
mov
mov
xor
popf
jb
xor
lahf
xor
sti
xchg
out
ja
nop
shl
out
shll
das
fwait
or
loope
jbe
shrl
xchg
in
adc
mov
cld
scas
pop
bound
add
adc
cmp
mov
mov
pop
out
cmpsl
inc
mov
inc
into
frstor
pop
xor
test
xor
pop
daa
test
and
pop
cli
jl
mov
sbb
jne
jecxz
shll
pop
cld
jo
orb
std
rcrb
cmp
shlb
icebp
ret
andb
pushf
addr16
xchg
orb
mov
sbb
mov
sub
mov
jnp
test
push
cmp
push
fs
flds
jne
dec
mov
cmp
cmp
jge
shrl
sbb
pusha
inc
fsubs
push
push
lods
push
enter
xchg
fisttps
bound
aas
ljmp
js
sbb
lret
sbb
mov
xchg
jecxz
add
xor
lahf
push
les
ret
mov
pusha
and
imull
dec
push
push
fiadds
mov
xchg
lds
mov
or
test
sarb
xchg
jecxz
movl
ss
movsb
stos
xchg
fildll
adc
je
movsl
jp
push
push
lret
dec
sbb
movsb
xchg
insl
mov
stos
cmp
add
jbe
sub
je
inc
lret
cs
and
xor
cmp
adc
fbld
xor
fwait
subl
imul
pop
sahf
sbb
sbb
adc
decb
rol
pop
jae
mov
inc
cmp
mov
push
mov
jmp
aam
lock
pusha
xor
lret
cmp
push
xchg
jae
cmpsb
aam
in
out
xchg
loop
mov
xlat
icebp
mov
adc
pop
addb
lret
pop
sub
jo
push
fbld
dec
pushf
cmp
xor
jge
mov
mov
jae
dec
cs
xchg
icebp
push
push
pop
inc
dec
sbb
mov
xchg
shlb
mov
cmp
sub
loop
xchg
jl
in
es
and
jns
pushf
mov
icebp
cmc
push
pop
andb
mov
stos
cmp
adc
xchg
les
scas
inc
cltd
xlat
add
jge
mov
xchg
lret
fists
or
xchg
fldcw
je
sub
cltd
hlt
ror
and
aaa
push
pop
xchg
jmp
xor
pop
inc
movsl
mov
shlb
out
jo,pt
mov
roll
js
and
mov
mov
lret
lea
popa
test
fsubr
data16
scas
cmp
out
lock
in
lahf
ljmp
in
sub
out
mov
xchg
fs
sub
into
stos
loope
movsl
or
cmp
mov
pop
aad
pop
addl
fwait
std
add
and
int3
push
popa
cmpsl
fisubrs
stos
sbb
push
lcall
lcall
push
sub
sub
fimull
jae
mov
sub
movsl
pop
dec
jmp
in
jb
sub
mov
pop
mov
repnz
jmp
loopne
hlt
inc
inc
jne
sub
mov
lret
pop
pushf
xor
inc
das
jmp
ss
inc
and
enter
aaa
push
pop
mov
jp
aaa
in
fidivl
adc
jbe
pop
gs
out
and
ficoml
lret
mov
cmp
scas
fists
or
dec
fdivrl
jmp
dec
pop
xor
cltd
push
dec
int3
xor
leave
int
xchg
and
jno
inc
sti
xor
hlt
adc
push
ss
mov
jbe
push
xchg
sbb
iret
sbb
sub
mov
andl
jae
pop
sub
mov
and
push
mov
jb
fisttpll
adc
mov
or
add
rdtsc
dec
sbb
xchg
push
in
pop
stos
mov
mov
cmc
lret
cmc
push
clc
orb
push
inc
xchg
jb
sub
push
sti
pushf
xchg
cwtl
pop
data16
cmp
cwtl
lods
jmp
jle
xor
jns
fsubs
inc
cmpsb
cmpsl
es
pop
pop
and
popa
ret
push
pushf
cltd
xor
clc
dec
ljmp
mov
loop
jg
push
xor
and
xchg
or
mov
cmpsb
mov
push
mov
or
add
dec
push
leave
orb
mov
pop
jb
inc
xlat
jle
outsb
fs
mov
cmp
sub
mov
sbb
add
rcr
mov
pusha
addr16
sbb
cmp
sub
mov
dec
jecxz
ja
push
fwait
xchg
jns
pop
mov
outsb
je
mov
cmpsl
lods
adc
int
mov
jb
mov
psubsw
cs
or
icebp
push
lret
and
icebp
loopne
lret
dec
adc
dec
jns
and
adc
and
xchg
sub
and
sti
test
sbb
out
mov
mov
mov
loope
arpl
iret
lds
pop
push
push
dec
ficomps
dec
fcmovnu
jnp
jg
pop
xor
add
sub
icebp
mov
mov
rol
ja
testl
jge
out
jbe
sbb
ret
sub
inc
mov
jp
sti
dec
xor
mov
xchg
fsubl
jbe
mov
jl
mov
test
mov
mov
int3
in
int
movsl
mov
cmpsl
and
inc
jnp
mov
insl
adc
int
push
mov
jg
inc
hlt
jno
cli
pop
sub
pusha
push
into
mov
into
xchg
stos
ret
cltd
fistpll
push
adc
adc
xchg
mov
inc
inc
jbe
addr16
ss
push
aaa
push
daa
out
test
not
out
xchg
mov
xchg
jbe
inc
ja
addr16
ss
push
aaa
push
daa
out
test
not
out
xchg
mov
xchg
testb
push
data16
pop
ss
push
ss
daa
out
test
not
out
xchg
mov
xchg
jbe
inc
ja
arpl
pop
xchg
mov
fsub
sub
insl
insb
not
nop
pop
js
dec
out
add
pusha
and
inc
dec
xor
add
adc
orl
rol
shll
add
pusha
and
inc
inc
xor
popa
adc
xor
mov
rcl
mov
add
pusha
and
inc
inc
xor
popa
adc
xor
lahf
scas
test
cmc
lahf
testl
inc
and
ljmp
sbb
mov
mov
rcl
outsl
mov
mov
jo
cmp
push
xchg
sub
xor
mov
psrlw
pusha
lcall
jge
out
sbb
lahf
ret
xor
fstpt
popa
dec
pop
pushf
test
adc
inc
mov
inc
xor
lahf
sbb
loopne
or
pop
sub
xchg
inc
aas
mov
repz
gs
dec
scas
or
mov
jo
xchg
cmc
mov
cmp
dec
jecxz
mov
clc
in
sub
jbe
out
rorl
jg
stos
sahf
lcall
pop
movsl
hlt
aas
std
mov
cltd
jg
jo
pusha
and
inc
inc
xor
popa
adc
xor
mov
shll
movb
sbb
add
jne
je
adcb
movsb
les
in
sbb
or
sbb
jae
gs
inc
jno
in
xchg
xchg
loopne
hlt
xchg
movsb
aad
ss
cmc
icebp
aam
xor
dec
xor
push
and
jno
xor
mov
shll
addb
adc
push
xor
xor
popa
adc
xor
mov
shll
addb
mov
lcall
mov
call
mov
pusha
lret
and
push
movsl
not
test
push
insb
xchg
or
lret
sbb
sub
cmpsl
jnp
dec
insl
out
out
test
and
fistpl
mov
iret
sub
push
xchg
adc
xchg
or
es
fmuls
sub
bound
pop
sbb
dec
sarb
jp
push
mov
ja
aad
out
pushf
iret
test
imul
add
jnp
das
dec
cltd
mov
mov
enter
mov
push
mov
mov
jno
cmp
popf
fwait
ljmp
lea
inc
jl
push
sbb
pop
bnd
shl
inc
push
inc
jb
popa
das
sbb
es
adc
cld
mov
hlt
or
ret
repnz
leave
loopnew
xchg
ss
add
jno
aad
push
sub
popf
adc
cmpsb
xor
or
sahf
sti
pop
mov
mov
inc
mov
js
fs
lret
cmp
test
sti
xor
ja
or
stos
ja
xlat
dec
adc
sti
out
push
xchg
jo
push
enter
mov
jb
stc
fldt
xchg
stos
adc
dec
arpl
sub
push
xchg
or
sbb
cmpl
mov
xchg
cmp
cmpsb
mov
fistpl
lods
fbld
push
test
mov
fisubrs
mov
mov
test
mul
dec
leave
rcl
ficomps
mov
mov
adc
addr16
pop
jae
cltd
sub
sub
orb
mov
xor
inc
insb
fnstcw
pop
xor
mov
pop
enter
out
iret
test
stc
bound
pop
fisubrs
nop
add
pop
xor
xchg
fs
jmp
scas
xchg
jmp
inc
or
jne
stos
push
std
dec
rcrb
ficoml
cs
adc
je
mov
push
js
lcall
scas
xor
sbb
mov
xor
test
sbb
loope
xor
stos
in
adc
inc
jg
jo
aas
inc
dec
outsb
je
push
or
sbb
adc
push
sbb
dec
sub
test
lea
nop
int3
jg
sbb
fdiv
jb
inc
fs
repnz
xchg
sub
iret
pop
stc
decl
ljmp
pop
insl
sub
or
lahf
sub
xchg
in
adc
stc
jmp
xchg
out
cmp
sub
and
push
ja
ret
xor
into
cmp
add
mov
xchg
and
push
ja
call
stos
cwtl
pop
cmp
xchg
lds
sbb
xlat
pop
xchg
mov
int3
outsb
fs
test
test
arpl
in
aam
and
cmp
add
mov
pop
inc
adc
arpl
jg
neg
cmc
jle
inc
inc
mov
clc
dec
shll
fimuls
lahf
insb
inc
pop
ja
rclb
add
adc
call
or
pop
sti
cmp
xchg
in
iret
sbb
shl
xchg
mov
cmp
jp
or
loope
aas
mov
scas
mov
orl
cmp
add
xor
pop
push
inc
xor
push
mov
fcmovnu
xlat
ficomps
jno
cmc
imul
subl
push
divl
jb
in
sub
xchg
outsb
xor
xor
mov
mov
and
mov
cmp
mov
scas
imul
pop
adc
es
and
lret
mov
push
sarl
ret
cmp
xchg
sbb
inc
push
das
inc
out
adc
iret
adc
outsb
xlat
movsb
outsl
stos
scas
stos
hlt
cltd
dec
pop
enter
int
scas
xchg
jno
mov
xor
outsl
mov
cmp
stos
out
lret
clc
mov
psrlw
mov
insl
cltd
pop
dec
jnp
cmp
adc
jae
xchg
jge
xor
cltd
shll
jno
je
fdivrl
shrb
les
data16
popf
push
push
inc
pop
mov
ret
or
repz
sahf
lea
dec
xchg
fisubrl
ljmp
jns
and
dec
lock
mov
xorb
xchg
push
sub
push
adc
mov
das
lds
mull
int3
clc
movsl
addr16
dec
test
outsl
shll
lea
mov
cmp
and
int3
loope
scas
xor
cmp
pop
aad
stos
pop
mov
into
push
sahf
lret
add
or
popf
enter
adc
push
imul
or
pop
mov
jmp
scas
adc
and
pop
andb
pop
sub
stc
out
test
inc
mov
add
lods
and
mov
les
add
inc
dec
mov
sbb
test
pop
push
clc
and
jo
sbb
add
pop
xor
ja
inc
pop
or
repnz
jp
out
jg
xchg
fisubrl
xchg
mov
rolb
lret
or
fadd
and
addr16
lds
loopne
push
cld
hlt
fstp
inc
pushf
jns
mov
and
notl
loope
loopne
sbb
push
lret
pushf
nop
iret
rcrl
xor
pushf
sub
and
xor
add
push
xorl
mov
aas
movsl
cmp
inc
jbe
cltd
mov
jg
pop
mov
jae
jge
mov
jae
pop
push
inc
cmpsl
loop
cmp
aam
push
sbb
je
in
push
push
adc
push
outsl
push
cmp
packsswb
and
add
xor
aaa
xchg
pushf
icebp
push
mov
in
pop
out
movsb
cmpsb
add
pop
xchg
ret
mov
loope
adc
std
push
cwtl
cmc
sbb
mov
loopne
push
jne
lcall
aas
roll
sub
pop
xchg
test
cltd
xchg
mov
shlb
ja
fidivs
movsb
sahf
adc
and
mov
cmpsl
inc
push
test
xor
in
push
daa
xor
mov
jp
add
or
popl
data16
sub
push
pop
or
ja
movsb
xlat
add
mov
jne
js
and
je
pop
int3
addr16
mov
fstps
lret
aaa
mov
push
dec
and
mov
mov
lret
lods
push
sbb
fwait
dec
add
lret
inc
sti
shll
js
fdiv
pop
push
jle
aam
jo
out
mov
leave
inc
repz
jne
cmp
add
test
mov
xchg
sahf
in
out
sbb
out
incb
or
mov
adcl
xor
inc
ror
pusha
into
cmp
mov
stc
mov
mov
cmpsl
rcrb
inc
movsl
or
cmpsb
into
in
shll
and
scas
std
ljmp
sub
cs
jb
lea
and
loopne
iret
xor
adc
out
or
or
bswap
push
jnp
pop
lock
in
nop
or
outsb
mov
add
psubsb
fisttpll
lds
push
sub
fsubrs
sub
loope
add
or
fsubrp
xchg
scas
jo
adc
and
mov
jmp
pop
stos
mov
pop
dec
sub
and
cmp
sbb
push
paddw
mov
call
sbb
repz
or
cmp
pop
in
push
and
xchg
mov
dec
pusha
iret
pop
sbb
addr16
pop
dec
arpl
mov
inc
and
mov
call
xchg
mov
adc
insl
sbb
aam
jecxz
lretw
ret
lds
mov
and
je
add
pop
xor
mov
dec
into
ret
xor
ds
inc
sar
lret
rol
pusha
xchg
push
int
int3
xlat
notb
pop
push
cmp
in
aaa
mov
ss
push
mov
in
jge
je
sarl
xchg
fwait
pop
inc
mov
dec
push
pop
cwtl
stc
je
rorb
push
xorl
mov
add
shl
jge
aam
jl
repnz
pop
fisubrl
push
adc
mov
and
jecxz
jl
sub
push
popf
sbb
dec
aad
lcall
pop
jne
sbb
sub
xchg
cwtl
xor
jle
int
push
pushl
bound
add
mov
add
es
fucomi
imul
jbe
pop
out
or
push
mov
and
adc
xchg
loopne
cld
mov
mov
mov
adc
test
sub
and
int3
and
mov
insl
les
push
iret
stos
and
rclb
inc
dec
inc
shll
mov
stos
outsb
xchg
push
sbb
stos
data16
nop
xchg
jno
jle
rcrb
ds
mov
dec
add
in
pusha
loopne
das
aam
jge
test
sarb
loope
mov
and
mov
inc
xor
push
imul
sti
push
or
and
sub
adc
sub
fsub
leave
ja
and
enter
pop
mov
int
popa
cmpsb
loopne
shl
jnp
pushf
fldz
lcall
push
cld
and
mov
pmaxsw
lret
mov
je
mov
es
bound
js
mov
pop
xchg
and
sbb
cli
adc
pop
jno
adc
xchg
sbb
aad
orl
mov
inc
mov
mov
mov
jg
xchg
into
cmp
push
xchg
sbb
xchg
sbb
xor
push
negb
push
sbb
lahf
jge
bound
sbb
repnz
faddp
mov
and
mov
and
xchg
push
or
lock
cmp
fnstsw
js
cmp
mov
mov
test
mov
fistpll
out
mov
outsl
adc
mov
add
cwtl
push
sub
mov
int3
mov
push
inc
xchg
mov
dec
xor
add
clc
sar
fs
hlt
scas
mov
cmpsl
inc
dec
xchg
dec
mov
dec
dec
loop
cld
xchg
daa
xchg
shlb
adc
mov
les
sub
sbb
aas
jno
and
dec
test
repz
xchg
imul
pop
test
jae
sub
sub
inc
subl
roll
pop
push
fs
insb
mov
xchg
ds
bound
add
clc
add
aam
lods
jae
cmpsl
and
adcl
jg
xor
dec
push
pop
fwait
cmp
fs
imul
cmp
mov
mov
inc
lock
cltd
xchg
xchg
add
lret
int3
icebp
sbbb
aad
sbb
mov
jns
xchg
sbb
int3
sub
mov
pop
add
dec
cmp
jns
push
orb
cltd
mov
xor
mov
and
push
lret
sbb
loop
fcompl
and
inc
cld
call
mov
jmp
cltd
inc
nop
push
scas
test
sub
push
in
js
jg
mov
ds
js
pop
pop
xchg
aas
cmp
jae
in
aaa
push
push
xchg
paddsw
xchg
inc
ret
cmp
popf
and
jmp
lret
test
push
pop
mov
adc
xor
push
es
xor
sbb
pushf
sbb
fsubrl
call
adc
dec
xlat
lods
pop
inc
fs
cmp
aam
pop
jbe
or
sbb
jg
mov
pop
sbbb
out
out
fiadds
adc
jae
or
int
hlt
fisttpll
jno
call
lock
sahf
and
mov
add
out
jbe
sbb
xor
enter
jae
int
sarb
cmp
jae
ljmp
sbb
xor
daa
xor
push
xor
sbb
lds
push
aad
add
es
mov
mov
and
ret
cmpsb
dec
in
mov
add
xchg
enter
xor
cmpl
add
inc
jne
insb
sbb
cmc
scas
outsl
cmp
imul
out
std
inc
pop
cmpl
lods
lods
cld
daa
xchg
cwtl
inc
and
outsl
xchg
cmp
dec
fidivrs
push
add
sahf
dec
cmp
jmp
jecxz
bound
sbbb
pop
fildl
lock
push
test
dec
addr16
icebp
jo
sub
sbb
xchg
shr
pop
outsl
cmp
mov
pop
mov
rolb
outsb
ret
push
imul
xor
or
add
divl
std
cmpsb
add
iret
mov
test
push
fs
mov
push
or
sarl
pop
mov
xlat
loope
mov
mov
sbb
andl
cmp
mov
cmpsb
cmp
adc
jb
jmp
out
out
ret
mov
push
in
test
pop
andl
inc
jp
popf
fcomps
mov
les
hlt
ss
sub
sbb
push
popf
mov
imul
adc
fisttps
mov
aam
add
xor
sahf
mov
adc
lock
imul
sub
mov
add
cli
add
adc
clc
push
call
out
mov
das
push
push
mov
or
ret
in
jbe
inc
push
test
push
sub
cli
add
push
cmp
cmp
mov
dec
mov
xor
mov
jmp
movsl
andb
sahf
fsubs
int3
in
dec
mov
iret
cmp
inc
rcrb
and
je
pop
jno
mov
pop
rcrb
es
add
das
loope
add
ret
inc
mov
cmp
add
xchg
pop
aad
in
jnp
lods
les
lcall
insb
cmp
fbstp
scas
insl
jmp
add
iret
xchg
dec
in
fnstsw
mov
dec
and
insl
fmull
mov
divl
mov
stos
or
adc
xchg
adc
aas
cld
inc
mov
sbb
xchg
xor
ljmp
xor
ljmp
jns
pop
addr16
lret
cli
repz
sbb
dec
xchg
fidivs
push
sbb
cmpb
cltd
int3
sbb
jae
jmp
sahf
add
leave
loopne
shrl
and
filds
jge
data16
push
mov
subl
stos
fldl
xor
or
out
or
push
jg
sub
test
repnz
cmpsb
pop
dec
shrb
push
notl
nop
mov
out
and
mov
push
mov
jmp
pop
outsl
xchg
mov
dec
and
loopne
jmp
in
aam
pop
mov
out
leave
adc
mov
loope
es
mov
ret
adc
cli
sub
stos
popa
xchg
movsl
mov
jb
clc
xchg
test
lock
or
mov
in
sub
ret
js
dec
rcr
push
sbb
mov
lret
fcom
jb
xchg
push
scas
lcall
iret
add
loop
fs
pop
push
icebp
hlt
repnz
cmp
scas
cmp
jmp
addb
scas
xchg
dec
or
icebp
mov
aad
xor
mov
andl
jb
xor
mov
xchg
fwait
mov
nop
or
xorl
or
pushf
js
sub
dec
data16
mov
add
data16
xor
xor
mov
bound
mov
jmp
sbb
cmc
nop
clc
and
imulb
adc
sbb
push
pop
in
pop
ljmp
mov
jge
test
mov
mov
test
xor
minps
sti
and
outsl
fs
lock
add
sbb
icebp
out
or
mov
arpl
cmpsl
sti
out
jl
and
xorl
sbb
inc
lods
mov
inc
or
xchg
addr16
mov
js
pop
mov
cs
popf
mov
adc
dec
mov
sar
clc
or
ja
mov
lret
test
ret
rcrl
mov
and
ds
ss
inc
pop
aas
sbb
cmp
adcb
mov
ss
lret
test
inc
jl
in
repnz
xchg
in
cmp
call
ret
push
dec
mov
cmp
xor
insl
add
sub
xor
lahf
fildll
or
add
cld
jmp
iret
cwtl
mov
fs
repnz
sbb
icebp
es
mov
cmp
ret
lock
bound
out
push
cmp
orl
xlat
xor
inc
cmpsb
orl
or
fisttpll
jbe
push
int3
inc
xchg
mov
dec
mov
das
insl
scas
inc
movsb
shlb
inc
idivb
push
push
jbe
je
inc
in
clc
aad
pop
mov
cmpsb
mov
ret
sub
jb
lret
or
lcall
pop
inc
in
dec
xchg
xor
inc
ja
shlb
mov
pop
popf
fsubrl
stos
insl
loope
mov
mov
cmp
sbb
or
xorb
sub
pop
jne
cwtl
jl
push
xlat
cwtl
mov
lcall
sbb
jl
arpl
dec
inc
cmp
and
clc
popl
push
sub
push
lea
cmpsb
in
push
daa
jns
notl
inc
jnp
je
fs
in
jo
fdiv
rcrl
loope
jno
add
cmp
es
outsl
aad
sub
sbb
xor
jno
mov
dec
addr16
std
mov
pop
arpl
mov
outsb
repnz
adc
dec
or
mov
inc
sbb
repnz
sbb
jb
and
jo
mov
pop
inc
push
out
push
mov
repz
or
sbb
test
loope
pusha
sub
pop
or
aad
lock
and
xor
push
ret
fwait
jae
mov
ljmp
or
dec
cli
daa
and
sub
rclb
ret
mov
pop
das
mov
sbb
fwait
scas
jmp
daa
dec
lds
push
or
cmp
pop
sub
ja
adc
outsl
mov
lea
pop
dec
ss
lods
push
push
jae
inc
pop
imul
jb
insl
into
pop
dec
xchg
dec
jmp
cli
xchg
pop
rorl
cltd
mov
clc
push
pop
push
cmp
aas
jle
mov
mov
ret
pop
xchg
mulb
imul
cmp
scas
aam
clc
pop
es
loopne
ja
std
pop
bound
push
or
sbb
and
mov
sub
fstl
test
jge
jl
out
sahf
add
jg
mov
mov
ret
lds
andb
push
cmp
lea
cmpsl
mov
data16
mov
mov
xor
xor
jp
jae
in
sbb
sbb
loope
inc
test
cwtl
aad
lret
and
xor
cmp
rol
loope
dec
scas
out
cmp
fs
sbb
add
add
pop
mov
pop
add
mov
stos
repnz
in
ret
shr
in
xchg
ret
xchg
out
dec
sub
mov
jb
pop
stos
cltd
in
imul
add
enter
icebp
xor
xchg
xchg
dec
push
into
cwtl
sbb
ret
mull
adc
insb
in
imull
mov
mov
pusha
sub
ret
aaa
jns
push
and
xchg
dec
inc
cmp
das
pop
add
inc
dec
std
jns
loop
xchg
cld
sbb
movsb
or
sbb
pusha
dec
mov
addb
mov
int
aaa
arpl
int
into
je
pop
cmp
sarb
sub
xchg
mov
idivb
insl
sub
outsb
hlt
adc
xchg
das
pop
push
js
cmp
loopne
rclb
pusha
xlat
mov
cli
or
rolb
aad
xchg
imul
add
add
cmc
and
ficoml
adc
xlat
jg
leave
das
sbb
pop
sbb
push
dec
repz
xor
sahf
arpl
das
cmp
mov
in
test
adc
jns
leave
dec
cs
daa
sub
test
jb
iret
adc
mov
jae
lahf
sti
inc
int
inc
fcomp
push
jnp
mov
mov
fs
pop
ss
fs
add
add
inc
movsl
stos
mov
dec
adc
adc
mov
jns
fstp
out
cmp
jge
pushf
jmp
jae
fnstcw
jecxz
imul
addb
lds
sbb
jecxz
sub
xor
mov
dec
fldl
leave
cmp
jne
hlt
aas
stos
inc
sbb
iret
jge
std
lret
add
inc
and
daa
nop
adc
loop
loope
and
cld
mov
cli
mov
ja
je
filds
lahf
notl
mov
sti
sub
xor
popf
nop
jns
xor
sbbb
leave
cld
cmp
cmp
shr
xor
push
xor
xor
popa
adc
xor
mov
shll
addb
adc
push
xor
xor
popa
adc
xor
mov
shll
addb
adc
push
xor
xor
popa
adc
xor
mov
shll
addb
adc
push
xor
xor
popa
adc
xor
mov
mov
pop
pop
push
outsl
push
jg
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
icebp
adc
add
pop
mov
ret
ss
into
xchg
pop
adc
add
or
add
pop
add
add
add
data16
add
dec
add
add
add
dec
add
add
adc
add
fadds
and
or
add
add
add
add
mov
sbb
movsb
add
add
add
add
add
add
add
add
icebp
add
sub
add
movsb
add
add
pop
add
add
add
add
add
add
sbb
push
add
loop
icebp
add
outsl
add
add
add
add
add
add
add
lea
add
sbb
dec
add
add
add
add
add
dec
add
icebp
add
add
add
add
lea
js
mov
cmp
into
add
add
add
lods
add
add
add
add
movsl
add
add
mov
add
loop
ret
add
push
add
add
mov
add
add
test
or
add
add
sub
mov
push
add
add
add
add
dec
add
add
push
add
add
add
add
add
add
add
add
inc
add
cmp
add
add
cmp
add
add
adc
popf
add
add
add
add
add
pop
add
add
add
jmp
add
add
add
dec
add
add
add
out
insb
add
add
add
and
add
add
add
add
jae
or
add
add
add
add
add
add
add
add
add
add
gs
add
mov
or
or
test
icebp
add
cmp
add
add
add
js
sbb
in
fiadds
add
pop
add
add
add
add
popf
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
aaa
add
pusha
add
add
add
int3
add
in
mov
testb
add
add
add
add
add
add
add
add
daa
add
add
add
inc
add
add
add
add
add
add
dec
add
pop
add
add
add
push
add
mov
dec
add
add
add
inc
add
add
add
add
add
add
add
inc
add
add
mov
push
xor
fwait
add
add
daa
add
add
push
add
add
daa
add
add
jb
xor
add
mov
add
and
add
add
jae
pop
add
add
dec
add
add
add
or
adc
add
dec
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
loopne
cmp
add
add
add
inc
add
mov
add
add
jo
sub
stos
add
adc
or
mov
add
movsb
lcall
insb
es
negl
jg
in
xchg
push
push
pusha
filds
out
loope
and
add
mov
mov
xchg
push
out
loop
out
push
scas
inc
sub
icebp
ss
jne
jge
jg
mov
nop
push
sbb
add
jae
mov
push
sbb
jecxz
repnz
cli
pop
add
jmp
enter
roll
cli
inc
fs
sbb
cmp
ret
inc
jns
mov
or
sbb
ss
cs
arpl
scas
cmovl
inc
cmp
int3
and
repnz
jbe
stc
cmpsb
cmp
jae,pt
out
adc
fucom
loop
repnz
stc
stos
das
pop
add
sub
cmp
pop
and
addr16
add
or
add
out
stos
scas
pop
mov
and
out
je
adc
add
leave
cwtl
les
aad
jp
in
andb
pop
inc
out
pop
xchg
push
dec
jmp
push
cmp
xchg
or
pop
fs
fidivl
xor
xchg
and
popa
fidivrl
ret
mov
xor
and
adc
mov
sbb
leave
mov
xchg
sarl
xchg
lods
mov
adc
sub
xchg
cld
into
jbe
jle
imul
fwait
loop
cld
out
xchg
jnp
gs
mov
fbld
fists
add
xor
sbb
lcall
xchg
and
addb
pop
repnz
cmp
jae
cmp
mov
out
jb
dec
popa
add
stos
enter
mov
adcl
out
aad
add
adc
daa
shll
xchg
std
cmp
mov
lcall
inc
scas
push
out
test
sbb
lret
lcall
mov
or
push
jo
repnz
add
out
mov
pop
push
push
test
xor
inc
dec
stos
pop
mov
stos
jl
mov
lock
mov
jg
add
enter
and
mov
pop
pop
lret
xchg
nopl
sahf
inc
pop
lret
lahf
enter
xchg
push
xor
xchg
mov
in
pop
je
jmp
aas
stos
das
insl
and
mov
cmp
pop
rcrl
mov
int3
test
imul
or
push
adc
sti
in
pop
shrl
lods
jbe
testl
mov
pop
dec
xchg
scas
addr16
sbb
jl
or
lods
push
mov
mov
sbb
out
lods
arpl
push
jecxz
loop
inc
rcrl
xor
repnz
push
or
pushf
icebp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
