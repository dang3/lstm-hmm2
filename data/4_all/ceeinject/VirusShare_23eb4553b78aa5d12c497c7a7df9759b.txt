fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
je
ds
or
mov
jp
push
pop
mov
scas
into
sbb
or
cli
ds
jle
dec
lcall
ljmp
sub
pop
fimuls
aaa
cli
daa
ljmp
stos
push
lcall
loop
ljmp
push
ds
mov
fwait
data16
dec
jge
cmpsl
mov
inc
bound
jb
lcall
enter
push
mov
adcl
xchg
inc
xchg
jno
xchg
push
dec
test
pop
mov
sub
jg
pop
fiaddl
lods
xchg
ficomps
mov
cmp
cs
mov
pop
jne
mov
ret
push
lods
aad
in
xchg
sbb
adc
ds
dec
or
movsl
sahf
mov
inc
in
xchg
insb
ds
ror
cmc
daa
scas
out
jne
push
cmovno
dec
lahf
dec
cs
out
in
cs
fimuls
out
cli
ds
fs
dec
lcall
xchg
pop
xchg
cmp
sub
sbb
arpl
pop
ljmp
adc
ficompl
mov
or
pop
lcall
cli
ds
sbb
adc
and
sbb
lret
cmp
and
mov
mov
mov
push
mov
pop
mov
pop
sahf
dec
out
cmp
sub
sbb
or
cli
ds
jle
dec
lcall
mov
dec
out
cmp
sub
sbb
or
cli
std
mov
inc
jbe
push
icebp
in
dec
sbbb
push
leave
dec
das
ret
insb
jae
cld
pop
pop
scas
into
jp
cmp
lea
xor
sti
pop
fmul
inc
fisttpl
test
nop
pop
or
add
and
cmp
pop
hlt
cmpsb
lret
outsb
cmpsl
in
cs
fstpt
xchg
pop
push
push
mov
in
mov
add
je
lret
dec
rorb
rclb
cwtl
mov
jbe
jo
mov
cltd
push
lds
xchg
jl
repnz
cmpsl
mov
or
jg
cmp
mov
fdivrs
sarb
and
mov
dec
xchg
mov
or
xchg
dec
inc
mov
out
mov
xchg
inc
jne
sahf
or
fstl
data16
imul
fld
dec
ss
inc
sub
sub
stos
test
inc
mov
jl
out
test
std
mov
out
and
bnd
xor
adc
inc
xchg
cli
xor
test
stos
out
mov
push
ja
decb
cli
cmpsl
cli
out
clc
lahf
add
xor
cmp
pop
les
mov
jns
mov
mov
push
adc
into
clc
push
fs
aad
xor
lods
push
sbb
inc
sub
test
jecxz
and
sbb
and
add
rcrb
subl
inc
and
mov
enter
cs
or
xchg
notl
insb
sub
mov
mov
cmp
mov
scas
subl
add
xlat
inc
gs
lods
ds
or
aad
fwait
jnp
out
dec
pusha
nop
jmp
mov
jb
js
js
fidivrl
into
push
sub
insb
add
out
cmp
mov
aam
data16
loop
push
inc
push
jb
sub
test
inc
dec
jae
or
test
adcl
xchg
push
cmpb
push
js
fisttps
lds
xor
rclb
add
enter
add
add
jns
cmp
mov
out
dec
push
out
loope
sbb
test
xchg
into
xchg
mov
push
outsb
xor
dec
lods
fmul
xchg
xchg
orl
mov
mov
xchg
push
fmull
and
rclb
mov
arpl
and
push
jno
add
sbb
pop
mov
jbe
xchg
aas
mov
jl
push
add
xor
out
leave
push
roll
xchg
adc
shll
rol
je
pop
or
and
sbb
lods
movsl
inc
mov
bound
push
or
mov
pop
roll
push
sbb
aas
data16
mov
mov
popf
inc
mov
adc
arpl
mov
pop
les
lahf
xor
mov
dec
pop
rcr
jno
outsl
mov
cmpsb
xchg
mov
add
loope
test
sbbl
in
mov
dec
das
out
shlb
pusha
ja
or
push
xchg
cmc
push
push
push
adc
push
cmp
and
adc
or
out
out
cmc
repnz
sar
dec
ficoms
and
and
inc
les
gs
fs
fsubrs
xor
fdivr
cwtl
repz
xlat
imul
dec
jbe
jno
mov
xchg
pop
loope
adc
cmp
push
je
js
add
push
shl
add
cli
add
inc
scas
sbb
loopne
or
jge
rorb
outsb
in
mov
sub
sbb
in
rorb
shrl
push
add
sub
push
sbb
adc
xchg
repz
jge
xor
xor
std
lret
gs
pop
in
aaa
sbb
lods
xor
loop
push
add
cmc
inc
lea
test
ret
loopne
xchg
popa
push
aad
leave
mov
into
dec
adc
aam
sbb
or
sbb
cmpsl
dec
inc
mov
data16
mov
shlb
iret
jl
mov
mov
lret
sbb
add
bound
aad
fstps
mov
xlat
in
lods
push
outsb
inc
pushl
mov
ret
mov
add
fsubrs
dec
std
dec
xchg
dec
xorb
mov
icebp
rclb
adc
cld
mov
icebp
outsb
mov
adc
mov
or
pop
ljmp
xchg
int3
fwait
in
out
dec
or
shrl
cwtl
daa
mov
mov
jns
pop
shl
push
clc
dec
xor
std
lds
xchg
add
sbb
cmp
addr16
int3
cli
and
sbb
xor
fidivs
mov
cmp
jp
jp
repz
adc
loope
cmp
iret
ror
daa
cs
loopne
andnps
jl
inc
ss
adc
enter
loop
fidivrs
mov
ret
cmp
scas
clc
pushf
jl
push
shrl
cmpsb
aad
lock
jno
inc
subb
add
xchg
dec
pop
push
push
dec
lea
sbb
add
fwait
inc
mov
mov
cmp
sbb
add
adc
and
rorl
sub
dec
fiaddl
imul
mov
out
pop
shl
aaa
mov
pop
push
out
push
adc
xchg
adc
mov
adc
jns
out
ja
popf
adc
pop
fidivl
fsubs
popa
pop
rorb
xor
lea
cmp
aas
jg
add
inc
insl
lret
roll
xchg
inc
mov
lock
ss
add
mov
fldt
cmpsl
mov
or
push
fs
dec
mov
imul
inc
mov
xchg
mov
lret
scas
fadds
orb
pop
or
mov
xchg
mov
and
and
lea
jnp
movaps
cmc
ja
clc
dec
popf
dec
lods
ret
data16
sub
pop
inc
mov
mov
jb
fbld
sub
idivb
icebp
mov
addr16
testl
idivb
std
pop
pop
aad
sub
aas
mov
adc
cmp
aaa
cmp
popf
lds
and
and
xor
addr16
popf
hlt
insb
push
dec
outsb
out
or
jbe
lahf
test
adc
aad
out
fadds
inc
inc
orb
pcmpeqd
push
lret
pop
test
in
fs
js
icebp
fdivrs
bound
addr16
sbb
aad
shlb
imul
shlb
inc
fistpll
push
rorl
sbb
or
in
jmp
xor
orl
fdivrl
stc
fisttps
out
pushf
jnp
xor
push
fistps
out
dec
add
sbb
les
mov
mov
sarb
jl
xchg
mov
sarb
cmpsl
sbb
jp
inc
sbb
pop
add
imul
enter
inc
stos
mov
xor
push
test
imul
ja
push
add
les
loop
cs
jmp
pop
push
sahf
ss
push
jbe
or
push
fwait
fs
xchg
fs
sbb
fbstp
arpl
sbb
push
in
fs
lea
pop
loopne
add
cmpsl
int3
adc
jnp
mov
or
filds
dec
int3
pop
xor
mov
xlat
into
add
inc
movsl
lret
aaa
push
test
std
or
jnp
pop
mov
ror
mov
lea
jbe
jecxz
mov
ret
push
andl
cmp
sti
push
ss
mov
xor
add
cwtl
jb
int
or
sub
jbe
sbb
jne
in
jnp
jno
sahf
mov
movsb
arpl
add
mov
mov
push
loopne
flds
xor
and
repnz
sti
pop
mov
jecxz
dec
call
inc
mov
add
or
or
stos
mov
test
mov
fwait
aas
jmp
test
adc
push
dec
cld
mov
pop
lret
fmuls
xlat
movsb
cmpb
mov
lock
fnstcw
in
arpl
cmpsb
sbb
mov
push
pop
dec
and
xor
ss
mov
inc
xor
mov
pop
test
mov
cmpl
cmp
shl
mov
lds
or
inc
dec
sbb
ret
sub
pop
pop
push
fistpl
mov
aaa
mov
out
fimull
push
iret
jno
in
jle
cmp
mov
sub
lss
xlat
in
jo
xor
inc
xchg
das
fdivrp
push
push
cmpsb
push
pop
xchg
shlb
adc
stos
out
pop
pusha
stc
add
aaa
push
test
pop
jo
dec
and
decb
mov
push
sbb
fwait
inc
add
divb
mov
pop
lods
add
sub
xor
cmp
pushl
hlt
inc
push
sub
adc
add
adc
mov
fcmove
pop
push
mov
inc
in
gs
insb
std
test
mov
ds
das
nop
loope
or
fistps
outsl
push
and
xor
call
mov
daa
fucomip
mov
fwait
cmp
lret
pop
xchg
in
xchg
jle
jle
cmp
mov
add
out
mov
test
inc
sub
jno
les
call
cmp
addb
pop
fstpl
std
idivb
push
mov
das
fnstcw
inc
lock
cmpsb
cmp
inc
imul
mov
push
mov
xorb
jbe
fidivs
test
cmc
mov
xchg
test
iret
pop
incl
leave
lds
jo
dec
bswap
imul
les
shlb
test
sub
inc
dec
and
jae
pop
fs
pusha
lahf
insl
es
imul
add
mov
int3
mov
jne
push
xchg
push
test
movsb
xor
fld
movsb
roll
lods
cmp
lahf
divl
xor
adc
dec
xchg
and
pop
push
pop
jbe
arpl
cmp
mov
pop
fwait
and
js
fsubr
mov
and
cltd
or
xor
cs
cld
xor
mov
pop
outsl
jbe
mov
pop
mov
inc
cmp
add
push
aam
or
inc
hlt
sbb
mov
aad
outsb
push
xchg
or
mov
dec
adc
sbb
cmp
xchg
ficoms
daa
xor
mov
cli
je
pop
xchg
or
mov
cmpsb
rorl
imul
ja
sub
idivb
call
and
repz
pop
lods
inc
mov
add
adc
push
add
nop
adc
cmp
test
cltd
mov
add
mov
test
repnz
into
repnz
ja
mov
mov
adc
jg
outsl
mov
inc
add
jbe
jno
fwait
adc
push
inc
adc
jp
xor
mov
push
test
mov
inc
pop
push
and
movsb
rcll
popa
adc
rcr
inc
pusha
shrb
fidivs
ret
and
jb
pop
hlt
rcrb
stos
ror
fldt
jle
lods
mov
xor
and
xchg
pop
fidivrl
pusha
sti
pop
push
fwait
je
mov
sbb
jnp
out
lcall
fcom
icebp
pop
cli
insl
fst
pusha
push
sbb
loop
cld
int
sbb
sub
out
in
fidivrs
loopne
mov
insl
mov
mov
out
andl
ljmp
mov
dec
inc
add
icebp
ja
adc
push
repz
or
xor
adc
cwtl
push
xchg
cmpsl
stos
sbb
add
insl
je
inc
mov
pop
push
xor
add
mov
lahf
inc
lods
adc
cmp
cwtl
out
inc
push
mov
outsb
sbb
mov
lea
mov
xor
insb
and
add
testb
jge
jnp
xorb
dec
jne
insl
outsl
cwtl
add
cmp
mov
and
notl
dec
adc
std
add
jle
sub
cmp
fnstcw
insb
fidivrl
push
cmc
jmp
sbb
cs
jmp
hlt
xor
cmp
lahf
push
rcrb
fstpl
xchg
loop
rcrl
mov
fisttpll
inc
xchg
insl
pop
jo
fisubrl
push
jbe
adc
push
add
shlb
pop
inc
sub
int3
addr16
mov
imulb
rcrl
pop
pop
mov
pop
in
xor
push
fnstsw
ss
xchg
add
scas
add
xor
js
sub
imul
push
mov
cli
adc
and
popf
cmpsl
or
leave
outsl
inc
add
in
add
arpl
movb
in
mov
jp
lds
pop
call
sbb
enter
arpl
sbb
cli
push
push
xor
sbb
fwait
loop
sub
ja
adc
add
hlt
lret
or
mov
mov
and
out
dec
adc
pop
incl
lods
pop
into
mov
mov
mov
test
xor
sbb
jp
in
add
inc
pop
jo
ds
das
xor
sbb
inc
ja
fdivrp
xchg
mov
int
lret
mov
dec
stc
cmc
pop
and
orb
cmp
lods
pop
mov
pop
scas
test
lods
js
dec
push
cwtl
xor
lds
mov
inc
pusha
imul
ret
sarl
test
lods
fbstp
sbb
enter
jne
shr
inc
aas
dec
dec
popa
stos
pusha
pop
fbld
lock
insl
pop
orb
add
stos
inc
fsubl
add
xor
loop
dec
push
inc
std
pushf
add
push
into
push
ffree
xchg
jbe
xor
pusha
inc
fidivs
lock
lds
jb
dec
cmc
out
mov
jae
out
sub
dec
cli
sbb
pop
add
call
sbb
sub
cmpsl
xchg
movsb
jecxz
xor
fcmovb
sub
stos
int3
xor
bnd
gs
js
inc
mov
lcall
add
mov
add
pop
dec
std
in
test
into
repnz
imul
fidivl
int
int3
mov
ficoml
negl
push
adc
repz
cmp
mov
sahf
adc
movsl
dec
subl
out
xchg
leave
mov
jne
jecxz
or
test
push
push
sbb
xor
and
cmc
inc
subb
inc
sbb
stos
xchg
mov
or
cmpsb
test
lock
xchg
or
pop
push
cmpsb
ficoml
in
fsubrl
cmp
jge
adc
popf
das
jne
mov
adc
inc
sbb
clc
cmc
and
mov
mov
adc
mov
fildl
in
cmp
xor
adc
loop
jnp
lahf
movsl
xchg
xchg
push
xor
dec
jb
mov
in
sarl
scas
cmp
adc
bound
lea
ficoml
fbld
add
fiaddl
aad
cmp
cs
inc
adc
mov
insb
out
sub
jns
push
push
sbb
mov
push
cmp
cmc
ficoms
es
loopne
jb
imul
inc
jae
mov
pop
test
psubsb
ds
test
rcll
inc
jge
xchg
inc
adc
cmc
dec
in
xor
cmpsb
jae
in
sub
dec
loop
inc
ret
xchg
cmp
jecxz
jmp
inc
mov
mov
inc
cs
sub
xchg
cmp
enter
outsl
cmp
pop
mov
out
loopne
jnp
push
and
scas
push
imul
sbb
inc
push
add
cmp
lea
dec
in
cld
cmp
lahf
out
mov
push
and
and
cmp
lahf
and
push
xchg
xor
inc
mov
mov
jg
lods
mov
sbb
mov
sub
cmpsb
push
push
insl
mov
xchg
jecxz
call
cmp
shlb
adc
push
dec
adc
cld
sbb
scas
and
dec
insl
inc
test
out
mov
insb
push
bound
stc
lods
pop
and
xor
call
les
bound
in
jae
scas
sub
push
cmp
bound
push
inc
cwtl
outsb
mov
cli
jae
sbb
repnz
push
sbb
out
sub
mov
mov
iret
jmp
subl
pop
and
sbb
movsl
cmp
sbb
dec
imulb
jp
pop
out
or
aad
mov
cmp
pushf
cmc
push
insb
rolb
ret
mov
subl
add
sub
movb
mov
pop
mov
data16
movsl
xchg
ret
stos
push
xchg
jb
xor
inc
push
mov
adc
inc
sub
dec
rcrb
mov
jle
js
jns
frstor
pop
mov
add
fdivrs
int
orb
pop
jae
push
insl
or
mov
shrb
je
insb
sbb
imul
xchg
xchg
imul
sub
jbe
mov
adc
les
in
imul
std
call
loop
pop
and
push
ljmp
roll
cmp
ss
dec
imul
adc
mov
psubw
jmp
mov
jecxz
popf
negb
out
test
lcall
inc
cmpsl
shlb
xor
fcoml
es
movsl
dec
gs
popa
fdivrl
lret
sub
or
push
pop
add
sub
adc
xor
hlt
fldl2e
lcall
mov
cltd
ror
cltd
jg
in
push
pop
out
es
pop
cmp
jecxz
enter
cwtl
mov
insb
loope
dec
ret
fimuls
scas
dec
stos
adc
rorb
adc
outsl
mov
cli
aam
ret
push
pop
ret
mov
aad
xchg
mov
push
test
jns
push
xor
mov
and
mov
sbb
add
mov
jns
xchg
ss
xchg
in
mov
jl
xor
push
push
lahf
or
mov
test
into
stc
adc
jbe
jecxz
shll
ret
js
jl
fs
lods
adc
pop
mov
mov
cmp
and
fsubl
pop
and
iret
xchg
xor
test
sbb
mov
rolb
in
inc
cmp
test
out
push
ss
or
xchg
es
fstp
inc
test
cmp
cmp
mov
pop
lea
sbb
aaa
push
xchg
mov
arpl
cmpsl
xchg
mov
push
jae
test
fsts
sbb
mov
call
jmp
ss
ss
mov
push
inc
ficompl
sahf
test
bound
mov
xor
fcomps
inc
lcall
mov
pop
cmpsb
cmp
push
pop
adc
ljmp
adc
push
jle
js
pop
adc
stos
inc
imul
call
dec
enter
mov
cmp
jbe
pushf
bound
lcall
scas
mov
enter
fistps
dec
sarl
fbld
roll
inc
cmp
mov
jle
push
pop
adc
enter
xchg
pop
xor
mov
loopne
or
mov
xor
sbb
stc
fcoml
jmp
outsb
mov
daa
rcrb
cwtl
jns
xchg
pop
xchg
pop
dec
and
push
cmp
jae
das
aam
xor
mov
frstor
scas
or
loopne
in
insb
mov
pop
sub
mov
pop
xchg
cmp
pop
xor
bound
lret
inc
adc
or
outsb
icebp
inc
inc
dec
out
lret
cmp
lods
int
or
jmp
push
sbb
push
pop
mov
sub
cmp
and
mov
adc
xchg
mov
cld
movsl
leave
and
loope
repz
repz
sub
pop
xor
cmpsb
and
shlb
scas
aas
paddq
insl
fcoml
dec
mov
and
cmp
dec
fsubs
imul
cwtl
mov
mov
inc
dec
lods
cltd
xlat
sbb
push
adc
and
push
mov
and
push
add
lret
mov
leave
xchg
dec
pop
mov
mov
xchg
jmp
cs
xchg
jl
cmpsl
cmp
ds
sbb
test
pop
iret
sahf
in
ds
enter
pushf
std
mov
lea
mov
rcrb
aam
mov
jo
hlt
push
hlt
and
xchg
js
ljmp
add
test
pop
xchg
pusha
popa
push
es
in
mov
aas
inc
push
ss
and
pushf
ljmp
xor
sub
stos
in
jbe
xor
mov
xor
dec
lea
push
loope
js
xchg
movsb
dec
jecxz
cmpsl
or
in
jl
setb
subl
in
adc
inc
gs
sbb
pop
hlt
int
aad
je
jb
jno
push
aas
shl
xlat
ficompl
lret
jle
dec
lcall
mov
dec
out
cmp
sub
sbb
or
cli
ds
jle
dec
lcall
mov
dec
out
cmp
sub
sbb
or
cli
ds
pop
push
lret
jle
dec
lcall
mov
dec
out
cmp
sub
sbb
or
cli
or
cmp
push
lret
jle
into
lcall
and
sahf
cmp
xor
and
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
cmp
add
adc
inc
or
or
test
mov
xchg
call
aam
aam
and
xor
add
adc
fs
dec
inc
pop
push
test
mov
xchg
sub
fcom
sub
sbb
dec
pop
pop
dec
test
fwait
mov
icebp
cwtl
xchg
call
xchg
mov
ja
pop
pop
or
lahf
mov
fisubl
aas
add
mov
pusha
jns
jne
mov
call
mov
movsl
fcoml
cmp
xchg
pop
popa
stc
mov
js
xor
jecxz
or
mov
mov
pop
adc
cmp
aam
je
xor
add
and
inc
insl
mov
sbb
stos
and
repnz
mov
mov
call
inc
js
lret
adc
push
inc
sub
mov
shl
mov
fldcw
aad
aam
add
fildll
jle
fcos
movsl
dec
mov
mov
cmp
in
cmp
or
push
push
pop
pop
dec
test
mov
call
fdivs
popa
add
or
sub
pop
cmp
shl
sti
jmp
les
xor
je
adc
cmp
cmp
fucomp
aad
lock
xlat
jmp
test
mov
cmp
gs
and
js
dec
inc
pop
push
test
mov
xchg
call
fcom
sub
xor
add
adc
fs
dec
inc
pop
push
test
mov
xchg
call
fcom
sub
pop
xchg
pop
jp
mov
xor
cwtl
insb
sahf
mov
sbb
sarl
repz
lahf
add
data16
xchg
cmp
pop
dec
repnz
arpl
ret
jae
incb
call
cmpb
pop
inc
xchg
mov
out
popa
shrl
sahf
mov
cmp
mov
push
mov
push
cltd
call
xor
pop
push
adc
rcrl
mulb
inc
sub
or
pop
xchg
cli
loop
les
xchg
pop
scas
shrl
imul
je
orl
dec
popa
lock
mov
xchg
inc
cs
add
pop
or
addb
pop
mul
pop
jecxz
xor
push
pop
and
xchg
sar
sub
sub
sub
jno
cmp
add
call
leave
dec
push
repz
les
mov
jo
test
mov
inc
jno
sub
cmp
or
push
shlb
mov
jge
loopne
movsb
stos
div
fstpt
aam
cmp
lcall
mov
dec
fucomi
sbb
rclb
sub
loopne
adc
mov
cmpsl
divb
fadds
jb
icebp
mov
rolb
push
sbb
mov
xchg
je
add
out
icebp
sbb
in
cli
cmp
aaa
pop
adcb
and
xchg
jbe
nop
jnp
in
mov
add
mov
pop
sarl
cmp
ja
inc
hlt
insl
pop
cmpsl
sti
sub
stos
nop
mov
dec
pop
push
cmc
sbb
push
jge
xchg
pop
adc
jecxz
lahf
xlat
scas
stos
mov
dec
lret
push
pop
mov
adc
negl
call
dec
in
rcrl
adc
xor
enter
bt
sub
dec
cmp
jmp
iret
in
xchg
ficompl
mov
jp
add
cld
mov
aas
sti
push
cld
mov
inc
out
mov
mov
fdivrl
push
addl
xchg
dec
ljmp
xchg
popf
fimull
push
pop
movsb
lcall
cmp
mov
loop
lods
out
xchg
outsb
push
mov
pop
call
in
test
shrl
and
push
cmpsb
mov
inc
dec
push
scas
cmp
arpl
lock
push
pop
mov
pushf
ss
inc
movsb
es
shll
mov
push
xchg
adc
pusha
adc
push
push
ffree
jnp
flds
adcb
daa
push
sbb
mov
test
cwtl
mov
data16
sar
push
rclb
or
sbb
xor
in
pop
pop
enter
mov
lret
and
xchg
pop
pop
addr16
popa
add
sub
jp
dec
sbb
arpl
cmp
mov
or
mov
inc
adc
fnstsw
iret
aaa
mov
add
cwtl
inc
or
jbe
mov
mov
mov
jns
adc
sarb
leave
pop
test
cmp
inc
sub
sbb
jmp
and
in
ljmp
lods
pop
fistl
add
inc
enter
push
lcall
mov
add
ljmp
cltd
mov
pop
push
mov
inc
add
jl
mov
imul
or
in
inc
jmp
lret
sbbl
push
mov
adc
fcmovu
dec
adc
in
gs
adc
push
mov
mov
xor
cmp
sarl
and
ficompl
adc
and
imul
dec
lods
push
dec
jmp
jmp
mov
lds
and
mov
clc
sahf
jmp
push
push
jo
ficoml
push
dec
int3
mov
adc
daa
nop
mov
mov
xchg
cmp
clc
call
lea
scas
inc
xchg
inc
mov
cwtl
or
scas
mov
push
jbe
add
xorl
pop
mov
lods
inc
mov
out
mov
nop
pop
mov
gs
or
cmp
cmp
popf
xchg
pop
add
jnp
add
and
xorb
adc
imul
loope
or
js,pt
loop
shrb
dec
or
lcall
dec
and
cld
mov
add
mov
sbb
push
lock
call
pop
mov
jmp
popf
and
sub
mov
popa
sbb
fwait
jb
pop
inc
add
inc
in
pop
jp
lcall
movsl
pushf
adcl
loope
pop
pop
loope
incl
leave
inc
dec
cli
scas
pop
shll
fwait
in
pop
mov
lcall
sub
faddl
mov
stos
jl
sbb
cmpsl
aas
sahf
lods
dec
xor
inc
and
or
dec
repnz
inc
pop
or
inc
aas
lahf
push
test
inc
jnp
adc
cmp
ret
aaa
test
loopne
fwait
adc
mov
jno
insl
push
and
out
mov
lock
leave
xor
movsb
ja
iret
movsb
loope
xchg
mov
adc
mov
fidivs
and
lock
push
pop
insb
in
xor
movsb
outsb
adc
sbb
push
jp
sub
push
or
sbb
sub
jbe
or
in
jecxz
test
mov
mov
imulb
adc
sbb
pop
iret
outsl
adc
idivb
shl
add
jno
lea
mov
subl
pop
outsb
ret
std
xor
repnz
mov
in
add
lock
lods
outsl
jnp
arpl
sbb
jle
ficompl
fs
jo
pop
repnz
dec
adc
mov
pusha
push
clc
sub
dec
popf
inc
sub
inc
add
mov
pop
pop
dec
mov
sbb
mulb
repz
fwait
test
mov
xchg
cmp
xor
and
aam
testl
iret
sbb
inc
dec
xchg
adc
mov
testl
lods
outsl
call
mov
rcrb
arpl
orl
adc
jae
lods
jo
lods
ja
repz
outsl
movsb
dec
fists
out
jns
and
sbb
je
out
loop
int
lds
xchg
pop
xchg
cwtl
data16
mov
jl
int
das
push
clc
cmp
cwtl
or
mulb
push
inc
sbbl
ss
and
lods
pop
insl
cmp
sub
cli
inc
sbb
xor
jg
in
pop
inc
push
push
fwait
das
sti
es
push
cmp
cmp
push
or
imul
pop
xchg
xor
mov
pop
cs
ljmp
je
sti
loope
jo
scas
sbb
lcall
dec
int3
outsb
jge
push
repnz
dec
ds
in
hlt
xlat
cmp
rcll
jne
imul
bound
xchg
mov
in
scas
and
dec
inc
inc
fadds
push
jo
pop
pop
popa
jne
jge
dec
mov
xorb
cs
mulb
jnp
fdiv
clc
xor
enter
push
fcomip
add
inc
push
adc
ss
mov
push
stos
stos
push
add
or
in
jno
add
xchg
test
adc
mov
mov
and
pop
sub
scas
int
cwtl
cmp
jnp
xor
xchg
mov
lret
scas
cmpsl
xchg
mov
mov
aaa
loopne
rorl
xchg
pushf
jp
ja
jmp
aas
dec
mov
inc
jne
lock
int3
int3
jmp
push
push
jg
sub
mov
mov
arpl
cmp
cs
pop
push
sbb
shr
pop
pop
int3
pushl
cltd
fsubp
push
fs
cmp
out
mov
cld
xchg
jle
fldl
and
cmp
mov
mov
sub
rcrb
xor
xor
sub
scas
repz
movsl
lods
mov
mov
fbstp
sbb
je
jmp
xchg
mov
loop
in
sbb
mov
test
in
mov
fistpll
xor
jmp
cmp
sbb
testl
jno
call
xor
cmp
push
loop
and
adc
pop
mov
xchg
and
sbb
xchg
test
popf
adc
mov
test
sbb
hlt
fdiv
jmp
adc
adc
xchg
adc
add
test
jge
mov
shrb
adcl
sub
jb
out
fwait
mov
mov
pop
jb
jne
scas
dec
adc
mov
cmpsl
and
xor
push
inc
xlat
push
ds
movsb
insb
sub
pop
dec
clc
sub
loope
not
enter
addr16
and
sub
mov
in
enter
cmp
mov
pop
inc
jo
ljmp
ret
push
scas
add
mov
data16
mov
lock
add
jno
inc
jmp
pop
cmp
hlt
aad
lods
add
leave
dec
lret
jge
imul
push
ljmp
movsl
dec
xor
sahf
xchg
sub
pop
cmc
scas
hlt
push
push
inc
xchg
rcrb
cmp
test
push
pushf
push
xor
push
mov
cmp
mov
stos
cmc
mov
lea
hlt
test
push
mov
or
inc
loope
xor
aam
lods
mov
cmp
dec
mov
jbe
out
push
gs
push
and
mov
cmp
adc
cmp
jmp
je
shll
aad
loop
jns
xor
cli
ljmp
push
pusha
sub
xchg
mov
mov
mov
ljmp
repnz
adc
sahf
cltd
dec
ss
mov
popf
add
and
aaa
or
stos
int3
mov
rorb
in
and
and
in
sbb
jae
ret
imul
adc
pop
or
xchg
pushf
pop
and
lret
jecxz
addr16
inc
dec
or
mov
scas
jno
lea
or
movsb
xchg
mov
jno
inc
cmpsb
scas
repz
xor
rcrb
inc
mov
push
xor
gs
jle
jb
mov
mov
clc
mov
fcompl
in
leave
xchg
lret
insb
pop
and
lods
jae
das
stos
adc
ljmp
daa
jb
into
pusha
pop
xchg
adc
orl
dec
sub
xchg
cwtl
or
pop
xchg
xchg
pop
in
mov
imul
ja
stos
movsb
out
push
mov
ficoms
or
sub
out
pop
scas
inc
jl
or
and
push
adc
mov
push
push
outsb
f2xm1
das
nop
nop
mov
shrl
ret
mov
fwait
add
sahf
xorl
cmp
xor
repnz
xchg
inc
jbe
decb
test
or
sbb
mov
mov
stos
pop
cmp
inc
lret
mov
inc
stc
dec
xchg
out
adc
pop
inc
scas
pop
or
clc
int3
push
inc
sbb
imul
and
cld
sbb
and
or
push
or
mov
es
xchg
mov
hlt
dec
mov
xorb
inc
mov
mov
je
push
jns
sbb
mov
mov
outsl
je
adc
and
add
in
xlat
mov
cld
mov
jo
ret
or
dec
jno
cld
es
aam
xchg
mov
cmpsl
lret
sub
lahf
dec
fsubr
test
lods
dec
xchg
xor
mov
cmpsb
ror
mov
je
xchg
cmp
je
adc
arpl
stos
movsb
adc
cmp
lods
jb
mov
dec
cmp
push
push
rorb
mov
jp
push
adc
daa
xchg
je
dec
mov
sub
lods
aas
fimull
inc
call
mov
mov
fwait
adc
add
mov
orb
cmp
cmp
fisubl
test
mov
dec
lahf
inc
je
or
outsb
jmp
lods
jbe
jmp
pusha
mov
pop
lds
jle
cltd
mov
add
pop
cmp
aas
inc
test
gs
cwtl
idivb
dec
push
cmpsl
add
xor
sbb
adc
xchg
mov
in
repz
cmp
out
icebp
xor
call
jns
sub
cld
cmp
fldcw
lea
xchg
lock
out
jo
mov
add
xchg
pushf
mov
mov
cmp
or
fists
fnstsw
ret
mov
pop
add
repnz
or
roll
cli
add
mov
push
int3
add
mov
mov
pusha
pop
sarb
mov
mov
mov
clc
push
lcall
out
mov
mov
dec
loope
out
inc
outsb
mov
outsl
mov
jbe
iret
adc
xor
and
lret
out
seta
push
pop
sub
add
fxch
mov
addr16
lods
mov
lds
dec
movsb
stos
mov
push
mov
push
lods
fisttpll
and
mov
rcl
inc
and
dec
jno
adc
jl
add
pop
gs
push
fists
outsb
lea
loopne
and
ffreep
push
imull
dec
jnp
cmpsb
out
pop
mov
nop
mov
stos
mov
jno
inc
xor
outsl
cmc
mov
push
xchg
xor
sbb
rol
imul
lods
mov
cmp
out
mov
xorl
scas
loop
lods
int3
mov
ds
xchg
adc
or
sub
xchg
lret
outsl
cwtl
dec
fldl
pushf
shlb
pop
lahf
pop
rcll
jmp
das
ficoms
arpl
mov
cmp
pop
or
sub
jns
xor
fnstcw
xor
daa
cs
ror
sbb
ret
fldt
orb
xchg
shrb
jno
cwtl
jecxz
into
sub
push
fstpl
lret
aad
pusha
cmp
scas
jno
pushf
pop
and
bound
mov
das
xchg
out
jb
lcall
jb
dec
jnp
mov
mov
lods
sbb
add
and
sub
loop
add
lret
jo
aam
pop
popw
test
add
xchg
sub
test
mov
pop
popa
cmp
mov
outsl
jle
insb
cmpsb
je
jmp
in
incl
in
and
mov
std
fstpt
and
gs
bound
leave
inc
cwtl
test
loope
add
das
sbb
scas
test
inc
loopne
mov
lret
fistps
stos
jecxz
sbb
pop
add
mov
push
fsub
add
into
fistl
push
pusha
jmp
mov
repz
cli
mov
loope
ljmp
stos
clc
int3
jo
mov
inc
ja
jle
stc
xchg
xchg
les
enter
dec
xor
dec
in
fs
cs
jnp
jg
fwait
inc
xor
mov
int
pop
js
xor
in
dec
imul
pop
inc
imul
xchg
lahf
fldl
mov
sti
cmp
add
pop
xchg
rorb
lods
jg
test
cmp
in
adcb
dec
test
fwait
data16
pop
add
pusha
sub
push
sbb
sbb
movsl
adc
test
ja
bound
in
and
push
loope
dec
test
xlat
imul
es
out
insb
leave
and
ret
jge
and
inc
adc
inc
jb
int
lea
insl
data16
loope
icebp
dec
call
inc
rcrb
fiadds
add
fidivrl
jo
cwtl
fmul
cwtl
lds
or
or
or
lods
mov
pop
arpl
push
xchg
testl
push
ds
mov
outsl
add
int3
add
test
pop
sbb
shr
data16
loop
fldt
data16
pop
icebp
lret
xchg
pop
ret
or
xchg
dec
sbb
sbb
movsl
aas
test
cld
push
push
icebp
xor
pop
sbb
jmp
mov
sbb
mov
jae
adc
fsubrs
sahf
mov
inc
pushf
leave
mov
out
fcmovbe
mov
iret
into
movsl
dec
push
xor
sub
and
xchg
mov
xchg
xor
and
sub
pop
push
rol
xor
and
jo
hlt
fmul
insl
js
dec
sbb
add
test
mov
sbb
xchg
add
pop
test
mov
push
or
push
sar
jo
js
pop
movd
inc
mov
pop
sarl
inc
shlb
mov
loope
push
mov
daa
mov
xchg
mov
roll
push
fstps
ret
push
push
aad
jb
outsb
or
add
ficompl
insb
mov
test
adc
es
stos
dec
stos
aam
xchg
sub
jbe
sub
das
pop
inc
addb
add
test
ljmp
push
mov
out
or
test
das
cmp
fsubrp
rclb
movsb
int3
insl
pop
adc
dec
vpaddsw
sub
sub
dec
mov
push
out
push
mov
test
outsl
push
sub
inc
lea
inc
das
out
test
std
sbb
push
int3
adc
jecxz
inc
dec
and
loopne
shrb
stc
in
jecxz
sub
in
out
xor
or
andps
jo
loope
mov
add
and
idivl
lcall
inc
push
push
and
notb
sub
adc
cld
pop
push
xor
je
push
mov
sbb
pop
rclb
push
daa
mov
cmpsb
cli
js
dec
pop
mov
inc
nop
aam
cmc
jle
aad
xchg
lahf
inc
sti
fwait
and
sub
aas
ljmp
push
or
push
outsl
lds
ret
les
sub
jmp
or
inc
jmp
pop
scas
inc
fsubs
aaa
int3
enter
roll
mov
je
mov
rolb
loope
sub
mov
bound
and
out
jge
and
push
pushf
loopne
stos
sub
push
jg
lahf
cmp
push
bound
adc
in
xor
cltd
dec
cltd
je
pop
bound
jno
inc
mov
pusha
jp
xor
lods
lret
bound
mov
fwait
adc
outsl
and
sahf
add
out
loop
dec
rorl
mov
push
loope
out
pop
sub
jmp
fisubrs
sbb
mov
bound
loop
aam
mov
and
into
popa
dec
jne
mov
push
or
mov
lahf
stos
dec
call
push
mov
pop
mov
add
or
aam
jne
into
fwait
pushf
std
int
in
mov
addl
sbbb
cmp
rcll
jp
sahf
insb
bound
ss
movsl
imul
adc
inc
mov
rorb
icebp
popa
arpl
jns
shlb
adc
inc
sahf
push
scas
stc
mov
pop
ljmp
or
call
repnz
fiaddl
lods
cmc
test
les
jecxz
js
push
sbb
jecxz
sbb
int
outsb
cld
cmc
sub
xchg
adc
push
insb
jecxz
xchg
lds
dec
fwait
ret
cwtl
insl
into
jbe
xchg
jb
leave
call
add
sub
lods
mov
jecxz
sbb
mov
fisttpl
jne
pop
dec
outsb
xchg
and
fisttps
mov
rolb
ljmp
dec
cmc
lds
test
enter
jmp
aad
sub
and
ds
jae
push
incb
sbb
pop
jne
mov
imul
sbb
push
cmp
decb
addr16
mov
push
push
incb
pop
sbb
loopne
jne
sub
pop
push
cmpl
stos
jge
pop
mov
cwtl
fs
adc
xorl
ljmp
push
loope
movsl
daa
xor
je
jae
cmp
jae
sbb
hlt
out
mov
inc
dec
or
scas
cmpsb
sub
xchg
jne
push
nop
ret
out
insl
mov
add
bnd
inc
fisubrl
das
aas
pop
popf
and
je
sbb
sbbb
rorb
icebp
std
popf
cmpsl
lds
in
mov
lret
cmp
cwtl
jae
imul
push
mov
filds
push
decl
mov
imul
fbld
xor
stos
icebp
or
out
call
loop
and
ds
xor
push
pop
std
push
push
sub
or
adcl
dec
stos
dec
pop
jge
roll
xor
jmp
adc
fs
dec
inc
pop
push
test
mov
xchg
call
fcom
sub
xor
add
adc
fs
dec
inc
pop
push
test
mov
xchg
call
fcom
sub
xor
add
adc
fs
dec
inc
fcoms
mov
xchg
call
sub
xor
add
adc
fs
dec
inc
pop
push
test
mov
jecxz
insb
mov
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
in
hlt
les
aam
lods
and
or
add
jbe
inc
xchg
push
xchg
xor
add
adc
in
hlt
les
aam
movsb
jbe
data16
inc
fs
cmpsb
inc
xchg
push
xchg
xor
in
hlt
les
aam
movsb
jbe
data16
inc
mov
xor
xor
inc
mov
nop
ss
push
les
ljmp
pop
movsl
lods
stos
pop
repz
xchg
push
shrl
pop
push
invd
or
pop
sub
movsb
mov
fmuls
stc
mov
ss
push
inc
cmp
and
push
and
dec
push
lret
fidivl
pop
push
xchg
roll
idivb
in
shll
pop
pop
rcll
int3
ja
jbe
mov
stc
mov
push
xor
cld
sub
fiaddl
sub
pop
jbe
cltd
js
pop
adc
jl
leave
push
mov
ds
sti
xlat
adc
fdivs
sub
mov
test
and
mov
xchg
ds
or
ret
ret
push
daa
ss
les
aam
movsb
jbe
data16
inc
fs
cmpsb
inc
xchg
push
xchg
xor
add
adc
sbbl
inc
rcrl
daa
jmp
adc
adc
adc
aaa
clc
adc
mov
push
mov
cmpsl
push
xchg
push
rcll
dec
sarl
inc
push
repz
cmp
push
ljmp
jle
andl
andb
loope
mov
test
inc
fs
cmpsb
inc
xchg
push
xchg
xor
add
adc
in
hlt
les
aam
movsb
jbe
data16
inc
fs
cmpsb
inc
xchg
push
xchg
xor
add
adc
in
xchg
xor
stos
xlat
je
inc
jo
add
cmp
scas
cmpsl
bound
cmp
or
daa
movsl
imul
fucomp
and
adcb
out
sbb
outsb
mov
pop
push
ds
xor
jle
push
sub
ficoml
aas
and
dec
xchg
gs
xchg
pop
mov
adc
sbb
dec
lea
xor
repz
push
xchg
sbb
or
nop
sbb
pop
mov
aad
push
ja
add
inc
int3
and
sbb
add
pop
dec
aad
pop
push
gs
mov
jae
lea
jne
out
sub
nop
adc
jp
inc
mov
clc
arpl
push
stos
out
test
movsl
sbbl
shlb
ficoml
movsl
in
fs
add
push
dec
sahf
out
pop
aas
adc
mov
mov
lea
movsb
and
mov
int3
sub
inc
jge
out
pop
sbb
stos
adcb
push
push
mov
mov
mov
sub
push
cmc
mov
lret
gs
mov
inc
mov
cmp
dec
mov
ja
sub
sub
jl
xor
movsl
inc
inc
add
or
das
xchg
ljmp
mov
xchg
dec
js
jp
pop
cmp
das
hlt
push
dec
fs
jge
push
loope
andl
or
and
mov
or
lahf
adc
adc
fmuls
cmovo
cwtl
adc
and
mov
js
das
sarl
push
repz
scas
pop
pop
cmp
cltd
movsl
sarl
adc
sbb
and
cwtl
xchg
push
and
xor
adc
mul
call
adc
cmp
dec
jns
fldl
mov
xor
dec
popl
dec
push
sbbb
lret
rcrb
es
ret
or
repnz
es
dec
and
ret
mov
aaa
jne
pop
loope
lea
mov
add
adc
lods
loop
lahf
cmpsl
xchg
cmpsl
inc
movsl
sbb
mov
inc
and
jp
dec
xchg
pop
loope
push
inc
jne
fsubl
fwait
or
je
cli
jecxz
mov
mov
mov
ss
adc
imul
or
fucompp
in
inc
dec
lea
ja
stos
fisubrl
addr16
sbb
arpl
mull
clc
and
enter
cmp
cmp
xchg
sbb
xor
in
das
adc
and
call
push
fcompl
pop
rolb
cmp
jg
sub
push
jl
lahf
sbb
ret
sub
int3
stos
addr16
cmp
sbb
ds
inc
insl
loopne
xchg
fstl
mov
mov
pop
sbb
jbe
fidivrs
mov
and
pop
mov
outsb
cmp
rorl
push
jge
push
cmp
lcall
or
xchg
inc
and
adc
sbb
pop
sbb
pusha
fistpll
outsb
gs
adc
int
and
stos
mov
mov
aas
fistps
fdivr
or
cltd
mov
in
inc
fadds
subb
cmp
std
ficompl
out
test
xchg
loope
std
aas
fmuls
sbb
fisubrs
lds
mov
pushf
add
into
xchg
mov
add
sbbb
outsb
fwait
loop
pop
sbb
push
pop
add
popf
insb
movsl
scas
sbb
lods
jmp
dec
lock
and
xchg
inc
mov
incl
iret
stc
lods
push
roll
insb
imull
scas
ret
pop
int3
loope
jg
es
shufps
xchg
enter
fstpt
lock
packssdw
push
and
sbb
mov
xor
dec
aad
scas
nop
push
out
mull
xor
in
jmp
test
aaa
xlat
jmp
mov
mov
add
push
movsl
mov
mov
jno
int3
aam
cmpsl
lahf
xor
mov
push
out
ss
imul
sub
aad
icebp
outsl
pop
xlat
jmp
adc
add
cs
mov
fwait
pop
ficoms
adc
jmp
subl
iret
bound
imul
xchg
stos
pop
stc
rol
ljmp
jp
jne
sti
addb
sbb
in
sub
std
into
add
xorps
mov
js,pt
sbb
sbbb
or
stos
pop
rcrl
out
daa
int3
cmp
push
enter
fcmovnbe
out
lret
mov
ret
dec
sbb
push
jns
rcl
pop
into
xchg
test
sbb
fwait
gs
test
mov
adc
push
adc
mov
inc
clc
xchg
sub
adc
test
mov
push
jl
test
push
scas
lcall
insb
pushl
and
xchg
push
adc
xchg
dec
inc
cltd
lea
daa
adc
outsl
sub
mov
int3
and
adc
pop
pop
bound
dec
ljmp
or
dec
cmp
pop
sbb
jns
sub
and
lods
lock
jbe
xchg
sahf
mov
jnp
or
jno
push
cmp
xor
rcrl
lret
jp
sub
les
jo
ret
mov
pop
fldcw
inc
test
in
shll
pop
test
std
adc
daa
push
ja
sub
and
mov
pop
jnp
ss
jne
mov
adc
and
cmp
outsl
fnsave
imulb
lods
fprem1
and
jmp
fldl
lea
daa
and
sub
fwait
dec
lock
adc
pop
mov
leave
xor
dec
fwait
inc
pop
bound
mov
mov
adc
dec
hlt
push
imull
sbb
jb
ror
repnz
cli
ljmp
mov
out
dec
add
cmpsl
mov
aas
stc
and
stos
xlat
mov
mov
inc
xor
adc
jp
shl
mov
ljmp
pop
stc
icebp
fstpl
fwait
add
mov
adc
ret
add
adc
es
and
dec
addr16
sarl
xchg
mov
lret
movsb
and
gs
cwtl
aam
jnp
jae
jne
push
fmull
push
enter
adc
les
mov
in
std
or
jge
jnp
or
mov
mov
lret
pop
dec
or
aad
mov
pop
adc
std
xlat
sub
fucom
jbe
pop
fwait
and
jae
sbb
mov
push
xchg
cli
adc
add
icebp
pop
ja
lcall
mov
jmp
shrl
mov
push
push
dec
push
jae
shrb
test
adcl
gs
push
inc
ss
jbe
ret
scas
loop
xchg
jp,pt
and
push
dec
jmp
test
clc
test
jp
lds
dec
and
mov
dec
mov
cwtl
jne
add
sub
icebp
adc
sbb
mov
mov
into
shll
xchg
pop
add
cmp
mov
add
or
test
lods
andb
shl
xchg
sub
lcall
push
fwait
jbe
inc
push
out
aas
sub
sub
out
sub
push
insl
jno
pop
je
sti
mov
jmp
mov
dec
mov
xchg
std
into
sub
loope
dec
stc
in
outsl
lea
mov
ja
test
testl
push
sub
in
rorl
add
pop
xor
icebp
inc
cmc
mov
mov
mov
lcall
arpl
ja
popa
shll
orl
push
out
push
repz
in
sub
pop
inc
dec
arpl
movsbl
insl
gs
mov
sbb
mov
sti
mov
xor
mull
jge
pop
xor
int3
push
sbb
aam
or
inc
push
lods
fsubrl
fcompl
xchg
xor
fimull
out
mov
cld
into
mov
rcrb
fnstsw
fs
test
ret
addr16
push
repz
adc
mov
sbb
icebp
mov
or
movsb
mov
sbb
lock
clc
out
inc
sti
cmpsb
xchg
or
mov
mov
cwtl
repz
adcb
and
lret
jb
sbb
dec
mov
in
pop
mov
and
sub
inc
pop
cmp
xchg
xor
mov
xchg
fisttps
inc
push
int
insl
jmp
clc
xchg
cmpsl
stos
xor
cmp
jg
icebp
xchg
jb
arpl
idivb
jns
arpl
inc
xchg
jl
out
mov
ja
or
sbb
clc
adc
mov
rcrb
jmp
mov
xchg
sahf
pushf
out
pop
addb
stos
rcrl
push
cmc
aad
sub
xchg
xchg
xchg
or
dec
ss
into
fadds
idivb
in
test
add
adc
arpl
sbb
imul
aad
adc
jl
dec
mov
adc
sbb
addl
dec
rclb
or
xchg
pop
mov
adc
dec
pop
jecxz
mov
sahf
lds
mov
inc
or
mov
push
leave
test
pop
and
or
mov
imull
addr16
sub
loop
xchg
jae
scas
ret
pop
dec
sbb
repz
sbb
gs
sub
imul
adc
aas
stc
enter
addb
mov
outsb
repnz
or
out
aam
stc
roll
hlt
mov
mov
ret
ds
jp
inc
mov
jge
xchg
lea
pop
outsl
addl
add
scas
pop
inc
adc
dec
test
pop
lcall
adc
mov
fcompl
mov
add
std
and
ret
aas
cmp
in
jmp
mov
shlb
pop
pop
dec
fisubrs
sub
out
pop
lret
int
nop
cltd
and
leave
adc
test
or
lea
std
xchg
xor
stos
mov
push
add
xor
fiaddl
xchg
sub
inc
imul
stos
push
sbb
inc
xchg
push
ficompl
ret
cmp
scas
add
lret
clc
mov
pop
int3
pop
scas
outsb
or
cli
and
movsb
pop
mov
shrb
push
push
sti
mov
flds
dec
xlat
je
dec
cmp
adc
les
xchg
xchg
xchg
mov
add
cltd
xorl
dec
hlt
in
mov
fs
ss
jl
jmp
and
gs
xchg
or
xor
or
mov
into
mov
out
cltd
leave
arpl
fdiv
xor
xor
push
mov
add
imulb
mov
enter
inc
or
mov
test
inc
lods
sti
jecxz
or
gs
jmp
int3
sbbb
jo
rcrl
jmp
and
cwtl
sahf
cld
subl
ret
or
test
lahf
xor
mov
shlb
fsubrp
jo
cmc
jo
sub
jbe,pn
sub
lea
jl
into
ret
xor
and
js
inc
fs
arpl
inc
mov
xlat
add
aam
imul
cmpsb
sarl
icebp
fdivrl
lahf
int
test
xchg
scas
call
mov
das
add
cmp
xchg
mov
cld
xchg
out
hlt
lahf
mov
push
aas
loop
push
repnz
sub
repnz
adc
cmp
xchg
stos
outsb
jne
inc
mov
aaa
popf
outsb
dec
loop
add
popf
outsb
in
fwait
push
dec
dec
mov
jo
xor
mov
mov
push
fildll
popf
xchg
mov
jne
lret
lret
insb
scas
subb
movsb
out
xorl
inc
add
std
inc
mov
ljmp
xlat
mov
orl
mov
cs
repnz
sarl
pop
aam
inc
loopne
std
push
aaa
leave
mov
popf
int3
sbb
inc
dec
arpl
cmp
leave
sahf
clc
iretw
rclb
add
cmp
and
in
loope
ss
and
in
inc
pop
popf
adc
push
inc
loopne
nop
adc
or
inc
testl
in
pushf
data16
jge
popa
mov
ffreep
mov
or
test
add
pop
adc
roll
dec
sbb
sbb
pop
sub
mov
ret
std
cltd
or
lea
cmp
sub
and
bnd
test
lcall
inc
mov
jnp
test
xor
test
mov
stos
dec
jmp
sbb
fisubs
test
int
push
fdivl
inc
cmp
ljmp
xor
outsb
loope
cwtl
cmpsb
lods
jbe
jb
mov
fwait
cmp
pmuludq
and
cmpsb
out
sub
notb
adcl
push
orl
fucomip
cltd
fsubl
fidivs
inc
sub
cmpsl
shlb
add
outsl
test
fisubl
fs
adc
add
xor
loope
push
ret
xchg
addl
jmp
pop
dec
xchg
not
iret
fiadds
mov
jbe
stos
clc
loopne
sub
mov
stc
ja
test
pop
sbb
in
jmp
mov
loopne
data16
ss
push
lds
inc
test
jp
loope
jb
cmpsb
sbb
into
sbbl
mov
and
enter
pop
push
xor
pop
mov
dec
adc
cmpsl
leave
scas
loope
scas
mov
mov
sub
pop
pop
sbb
inc
scas
jbe
out
fmull
das
cmovg
nop
pop
dec
sbb
pop
mov
adc
aas
mov
stos
rolb
cmp
ljmp
and
mov
aaa
add
push
pop
int3
sub
mov
fildl
cwtl
mov
cmp
xor
arpl
or
aaa
ja
xor
xor
test
lods
rclb
adc
adc
clc
push
fsts
test
xor
adc
cli
stos
jg
push
test
pop
lret
aam
jmp
cld
pop
fistpll
mov
push
and
dec
enter
pushf
imul
or
adc
dec
notb
inc
add
stc
mov
mov
dec
and
into
inc
dec
repz
xlat
xchg
cmp
iretw
into
mov
negl
mov
stc
lahf
lret
into
loopne
loope
imul
jle
outsl
stc
inc
xor
xchg
push
out
mov
hlt
fincstp
or
push
popf
mov
mov
fwait
popa
pop
jae
sub
bound
mov
cmp
test
lret
icebp
pop
dec
push
test
out
add
xlat
lahf
stos
push
lea
out
dec
loop
xor
js
pop
pop
add
mov
lods
add
xor
cmpsl
mov
fwait
jbe
mov
stos
push
push
roll
inc
mov
push
mov
repz
fsubl
add
int
mov
pop
js
testb
into
movsb
sbb
or
xor
pop
adcl
mov
xchg
cmpsl
test
ss
mov
xor
movsb
sub
push
das
lret
in
fbstp
and
fimull
push
jmp
dec
cs
lcall
ja
pop
or
andl
mov
ds
loopne
sbb
jl
test
dec
and
int
cld
jl
sub
inc
lods
sub
shll
fwait
and
lods
cmp
movsl
cmp
ljmp
sarl
or
aaa
cmc
imul
cli
outsb
in
cmp
cltd
andb
pusha
jo
aam
cli
call
mov
or
orl
adcl
push
outsb
js
dec
mov
inc
mov
mov
sbb
rcr
xchg
sub
jl
rcrb
and
lret
daa
xchg
repz
lds
pop
inc
adc
mov
lods
xor
dec
outsb
push
insb
xor
int
cld
inc
pusha
inc
leave
mov
push
xlat
bound
dec
clc
lret
gs
inc
xor
push
add
push
lea
sbb
or
clc
cmp
ficomps
add
adc
push
inc
add
mov
scas
push
xor
pop
mov
jo
je
xchg
pop
mov
pop
adc
mov
lds
mov
ret
fisttpll
add
out
nop
ret
cmc
ss
shlb
inc
ficomps
xchg
add
mov
in
bound
sti
jmp
inc
cmpsl
ret
sti
sbb
push
push
cmp
or
clc
inc
xor
add
cld
xlat
inc
insb
jge
rcrl
mov
aas
imul
dec
push
cmp
daa
mov
sbb
mov
adc
add
fs
sbb
cmp
xor
cmp
push
inc
cs
repz
stos
das
dec
mov
leave
inc
xor
clc
push
fsubp
add
dec
sbb
jae,pn
lods
cs
push
dec
ret
jb
mov
rol
sahf
sub
push
or
jnp
jecxz
jo
mov
sbb
cmpb
scas
fwait
push
out
push
mov
jo
mov
rcl
in
hlt
fxch
sbb
xchg
clc
inc
push
or
adc
dec
push
cmp
fdiv
lea
and
xchg
sbb
add
imul
dec
xchg
mov
or
sbb
icebp
int
adc
xchg
inc
movsb
and
sbb
add
xchg
xchg
pop
adc
popa
and
sbb
cld
mov
repz
dec
test
sbb
jno
push
call
push
testl
lock
dec
jbe
push
mov
jmp
mov
outsl
and
or
cmp
lahf
cmp
icebp
adc
inc
popf
xor
cmp
sub
or
insb
scas
cmc
dec
pushf
leave
sub
icebp
dec
addl
fwait
cmc
testb
dec
dec
push
int
loop
xor
cmc
mov
cmp
mov
pop
add
inc
mov
stos
inc
sti
dec
outsb
arpl
je
rcrb
dec
daa
cmpsb
pop
mov
inc
mov
mov
hlt
push
in
fnsave
clc
jno
add
imul
imul
ds
fmulp
adc
jbe
gs
bound
xlat
rcrb
push
adc
xlat
cltd
pusha
test
stc
bound
mov
or
les
movb
pop
push
inc
dec
imul
ss
or
imul
mov
dec
popfw
ja
inc
daa
xchg
js
jecxz
jg
into
mov
pop
movsl
fdivrl
pushf
les
lcall
inc
or
and
or
lret
ret
sub
adc
sqrtps
xlat
pop
push
out
xchg
pop
in
out
and
jb
mov
jle
inc
das
and
jmp
mov
pop
or
mov
out
pop
inc
inc
fidivrs
mov
js
test
fdivrs
jbe
fimuls
ret
mov
stos
dec
divb
hlt
mov
push
aas
int
adc
fildl
popa
loop
repnz
pop
bnd
mov
jp
push
mov
popa
lret
daa
xor
loop
sub
jecxz
lods
movsl
and
xor
dec
mov
and
movsb
or
fwait
add
psraw
jnp
jno
repz
mov
add
mov
movsb
jno
jne
fisttpll
inc
ds
jb
cmp
jb
pop
dec
dec
push
pop
les
mov
add
rol
fwait
scas
fsubrl
mov
data16
nop
scas
sub
lahf
cmp
dec
jns
cmpsl
je
outsl
jnp
or
outsb
fldcw
push
ds
not
std
sub
enter
pop
add
shrb
jnp
int3
fs
mov
and
sub
inc
and
cmp
inc
mov
mov
popf
ja
out
fbstp
push
pop
push
lea
sub
xlat
cmp
repz
xor
or
mov
and
cld
into
xchg
sub
push
and
popf
mov
int
dec
enter
in
pop
daa
sbb
jne
outsl
dec
adc
ja
mov
pop
xor
pop
dec
cmc
dec
test
and
aaa
pop
dec
xlat
movsb
jg
inc
jl
sub
xor
add
into
pusha
aas
push
iret
std
or
push
into
fiaddl
out
lds
cwtl
mov
mov
sbb
pop
cmp
pop
in
mov
cmpsl
jnp
mov
cmpsl
cmp
enter
mov
add
add
add
das
push
xchg
push
add
add
call
cltd
push
lcall
sbb
jb
jae
loop
mov
iret
cmc
sub
rclb
mov
mov
fstps
cmp
and
inc
xor
push
ss
lods
mov
mov
cmpb
mov
pop
mov
and
add
imul
iret
push
push
pop
xchg
bnd
fisubrs
jbe
sbb
pushf
push
cli
fists
xor
shlb
sti
pop
aam
movsb
jbe
data16
inc
fs
cmpsb
inc
xchg
push
xchg
xor
add
adc
in
hlt
les
aam
movsb
jbe
data16
inc
fs
cmpsb
inc
xchg
push
xchg
xor
add
adc
in
hlt
les
aam
movsb
jbe
data16
inc
gs
cmpsl
inc
xchg
push
xchg
xor
add
ss
les
aam
movsb
jbe
out
adc
fwait
dec
mov
xchg
push
icebp
push
jle
sbb
sub
cmp
push
cmp
and
lahf
sub
cmp
test
push
cltd
push
jmp
dec
fstps
scas
cmp
imul
pop
stos
test
push
cltd
push
jmp
push
fstps
cmp
mov
imul
pop
test
push
mov
cmpl
mov
pusha
scas
cmp
jp
imul
fnstcw
ret
push
imul
pop
bound
cltd
add
aam
and
std
add
scas
pushf
pop
or
push
push
outsl
in
mov
shrl
xchg
mov
mov
mov
test
xor
dec
dec
jo
lods
mov
dec
insb
outsb
cmp
imul
xor
test
cmp
or
mov
and
ror
jb
dec
pop
fidivrs
leave
adc
fs
int3
mov
dec
lahf
stc
movsb
xchg
test
shlb
stc
rcll
icebp
faddl
aad
clc
or
scas
cmp
or
xchg
imul
pop
pop
test
push
cltd
push
jmp
dec
fnstenv
outsl
cld
push
mov
add
cmpsl
sbb
ljmp
or
jmp
lcall
jl
das
adcl
push
mov
lods
xor
clc
pop
stc
pusha
ficomps
std
imul
mov
push
jmp
dec
fstps
scas
cmp
imul
pop
fisubrs
push
cltd
push
jmp
dec
fstps
scas
pushf
imul
nop
inc
xchg
shr
push
sbb
mov
or
outsb
or
inc
leave
cmc
cwtl
cld
movsl
sti
sgdtl
imul
push
test
inc
push
fidivrl
cld
jbe
jge
inc
fsubr
sub
push
and
cmovae
imul
test
mov
ljmp
fisttpl
adc
je
or
push
test
ja
add
arpl
xor
inc
pop
mov
or
insb
xor
and
dec
pop
jecxz
stc
push
push
clc
or
loopne
adc
ret
push
arpl
dec
mov
inc
incl
das
dec
push
rolb
mov
sbb
cwtl
or
icebp
mov
fsub
sbb
lret
hlt
mov
mov
jg
hlt
adc
mov
push
mov
lods
cmpl
jb
sbb
cmp
test
cmp
call
xchg
jnp
push
lods
sub
push
sbb
add
push
pop
xacquire
stos
pop
daa
cmp
inc
inc
mov
hlt
test
pop
das
pop
mov
pop
inc
xchg
movsl
push
or
and
dec
and
in
and
lods
xchg
movsl
dec
in
andl
or
cs
or
loopne
repz
lret
add
lcall
je
loope
ror
mov
jno
enter
insb
cltd
pop
sub
iret
dec
xor
add
ds
pop
call
in
into
pop
dec
lret
loop
push
rclb
test
jnp
push
notb
inc
hlt
sarb
add
test
mov
dec
push
les
fldl
cmpsl
push
aam
mov
mov
cli
or
pop
or
popf
lock
loop
add
cli
sbb
push
test
iret
enter
jmp
xlat
ds
out
and
add
add
or
cwtl
enter
pushf
mov
xchg
mov
addr16
pop
loope
cltd
lret
repz
jge
xchg
mov
mov
xchg
push
cmpsb
pop
stos
lahf
xor
cmpsb
add
mov
outsl
iret
inc
push
or
xor
psubsw
aas
adc
fcmove
loopne
dec
leave
jo
pop
mov
inc
fwait
and
sbb
pop
gs
mov
jo
jge
aaa
in
mov
mov
int
pop
repz
scas
sub
aaa
loope
ds
pop
sub
lock
nop
insb
sbb
mov
mov
mov
jmp
jp
sub
test
or
xchg
mov
xchg
lea
adc
jae
cmpsl
mov
outsl
cmp
popa
lds
mov
pop
imul
in
popa
shr
add
mov
pop
inc
xchg
cld
sbb
jnp
stos
filds
lahf
mov
pusha
dec
pop
inc
lea
mov
mov
mov
cmp
xor
cmp
and
insl
mov
pop
mov
xor
push
push
sbb
and
loop
xchg
pop
pop
shlb
add
out
loope
daa
pusha
sub
cs
cmp
out
icebp
push
cmp
jge
rcl
cmpsl
jecxz
movsb
adc
jge
outsb
loop
call
xor
popf
mov
scas
sub
lock
cwtl
cmp
add
insl
cli
dec
roll
clc
mov
loop
test
hlt
stc
sbb
imul
orl
mov
mov
sbb
and
push
mov
xchg
mov
call
movsb
rcl
movsl
dec
dec
loop
push
mov
pop
mov
mov
cli
cmc
mov
aas
mov
test
fcoms
imul
repnz
inc
inc
push
movsl
xchg
bound
out
lcall
sub
inc
lret
lret
jmp
addr16
outsb
ljmp
inc
cmp
fildl
mov
pop
lods
mov
loop
fldcw
ret
adc
shl
push
sbb
add
int
add
scas
jle
mov
test
je
mov
add
test
xchg
out
mov
jge
sar
xor
inc
push
scas
pushf
lret
add
inc
jecxz
shlb
jp
sahf
dec
lea
enter
test
add
in
mov
sbb
sahf
xor
push
push
sub
jo
cld
jg
or
sahf
mov
pop
add
lret
mov
lcall
mov
jg
mov
inc
fcmovbe
int
out
out
adc
std
aas
ret
pop
mov
xor
fwait
dec
adc
std
and
add
push
xlat
xlat
imul
test
pop
pop
mov
mov
jmp
mov
xchg
mov
jge
mov
mov
icebp
mov
cmp
test
xchg
and
nop
cs
jo
xor
jp
inc
dec
decb
xchg
fs
stos
ret
mov
loop
pushf
push
and
movsb
roll
cmpsb
mov
xchg
enter
xchg
pop
sub
lahf
divb
nop
xchg
fildl
lret
js
aam
dec
cmp
lods
sti
sub
ret
lock
pop
aam
aas
jp
mov
cmpsb
lret
and
or
sub
es
pop
xrelease
pop
jbe
mov
dec
sbb
dec
bound
mov
mov
nop
jb
adc
inc
cmp
out
cmpb
iret
jne
dec
call
pop
mov
lret
shlb
mov
pop
or
popf
mov
dec
pop
xchg
out
jae
inc
fcoms
sbb
sbb
ret
mull
cmp
jecxz
add
insl
pop
outsl
push
das
and
lods
dec
nop
dec
jbe
inc
lea
hlt
jo
int
mov
sbb
mov
adc
cltd
ret
mov
sub
push
jecxz
jbe
mov
xchg
lret
mov
stos
sbb
inc
outsb
mov
cmp
inc
pop
jns
jle,pn
add
popf
addb
clc
jne
shlb
clc
loope
mov
jbe
lret
testb
mov
orl
cmpsl
xor
add
xchg
mov
lds
pop
sbb
negb
pop
pop
flds
cmpsb
push
into
jo
push
aam
push
dec
pushf
jmp
shll
aaa
std
test
fsubr
adc
dec
push
daa
das
cmp
sbb
rolb
lods
sahf
add
in
repnz
xor
mov
xchg
xchg
sbb
repnz
xchg
push
mov
lea
lods
or
fisubs
shll
mov
sub
es
mov
aaa
xchg
shlb
jne
in
mov
ret
pop
push
jmp
mov
out
jecxz
ljmp
inc
pop
mov
nop
sbb
rcrl
fmulp
sub
lahf
push
cli
in
nop
lods
stc
sub
adcb
shrb
in
imul
stc
jge
iret
dec
je
jmp
xchg
scas
push
add
mov
sahf
xor
rorb
mov
stos
mov
xor
xor
jno
lret
or
cmp
mov
add
out
sti
push
push
enter
push
fcmovb
in
and
lret
ret
sub
sub
add
hlt
stos
lds
in
cmpsl
pop
cmc
push
jno
mov
loopne
jns
outsl
in
data16
mov
push
xlat
aam
xchg
push
outsb
jnp
xchg
loopne
lock
xchg
pop
arpl
inc
cmc
int3
push
sbb
imul
fwait
das
lret
mov
mov
fisubrs
pusha
cltd
cmp
mov
xor
and
push
sbb
sarl
inc
xor
dec
ss
dec
sti
loopne
mov
daa
testb
movsb
in
les
ss
push
xlat
out
jns
and
jmp
rolb
add
push
xchg
lcall
iret
adc
jmp
jl
arpl
fidivs
pop
push
push
mov
movsb
cmp
pop
scas
push
int
adc
add
lods
dec
jecxz
loop
add
das
mov
shll
in
xchg
rolb
ret
aas
sti
or
clc
sbb
adc
pop
jge
lods
pop
dec
mov
sqrtps
mov
push
sbb
movsl
jmp
inc
sarb
movsb
lods
ret
push
int
pusha
daa
pop
stos
or
jg
jecxz
xchg
mov
pop
mov
lret
sldt
loope
loop
xor
cmp
in
repz
stos
lret
pop
test
mov
into
add
jbe
and
daa
and
and
sahf
dec
push
aas
pop
into
cmp
pop
dec
shll
rcrl
or
ret
dec
movsb
inc
mov
in
mov
mov
rol
push
inc
cmp
dec
hlt
icebp
fnstenv
aaa
xchg
ret
rcl
cmp
xor
out
cmp
cld
xchg
das
xchg
cmp
cmp
push
nop
lods
fidivrl
jbe
add
adc
cmp
xchg
push
sbb
das
enter
idivb
ret
outsb
sub
and
push
mov
jno
call
mov
dec
xchg
cmp
fisubrs
inc
xchg
mov
fs
sbb
xor
aam
pop
pushf
int
loope
inc
xorl
cmp
pushf
xor
ja
xchg
jecxz
sahf
in
out
cmc
cmp
cld
adc
sbb
out
pop
mov
nop
push
add
or
mov
dec
leave
inc
rcrb
cmc
push
xchg
nop
mov
fldl2e
mov
mov
mov
mov
dec
fisttpl
jne
adc
pop
or
xor
testb
jno
or
mov
xor
arpl
fldl
enter
cmp
mov
jns
lahf
rcll
mov
pop
add
mov
fsubrp
outsl
inc
xchg
in
cmpsl
test
jp
jp
std
leave
imul
mov
sbb
shlb
arpl
adc
enter
and
roll
jne
icebp
cs
sbb
test
or
mov
shlb
or
xchg
roll
push
xchg
outsb
mov
clc
daa
xor
cltd
popf
stos
in
inc
sub
flds
aam
add
push
push
shlb
bound
negb
insb
mov
test
imul
fisubrs
sar
out
xlat
fmulp
arpl
sbb
rclb
pop
push
out
int
cmp
pop
adc
pop
pop
in
fwait
xor
aaa
repz
into
rclb
inc
testb
nop
insb
add
sbb
mov
mov
lret
dec
test
fnstcw
leave
mov
dec
xorb
jno
xor
stos
sub
xchg
movl
mov
outsb
push
xchg
xchg
xor
fnstsw
lret
pop
movsl
inc
shl
sbb
xchg
pushf
add
jbe
rcr
fldcw
jl
inc
pop
dec
push
ss
inc
jmp
hlt
mov
or
daa
sbb
ja
mov
iret
insb
fwait
imul
cwtl
xchg
add
inc
aaa
clc
jmp
shl
push
adc
test
std
sub
adc
or
icebp
jl
cli
gs
xchg
xor
scas
jge
stc
mov
lock
cwtl
lret
or
pushf
xor
cmp
add
sahf
test
adc
or
jb
das
pop
loop
cmpsl
xor
in
js
rorl
fwait
push
inc
cmp
adc
call
mov
mov
inc
and
je
xchg
sub
xchg
sub
mov
push
scas
fimull
mov
popa
xchg
pop
mov
adc
mov
inc
pop
mov
call
hlt
mov
scas
inc
xchg
or
cmp
or
rcl
dec
in
dec
ds
in
sub
aaa
jb
inc
mov
arpl
dec
dec
fisubrs
popf
dec
out
lds
call
add
je
xor
in
in
call
sub
ds
mov
enter
add
in
cwtl
in
jmp
andb
mov
stos
es
ret
paddsb
sahf
inc
cmp
mov
clc
adc
mov
lock
gs
popa
ljmp
lahf
sub
push
sarl
xor
fsubr
sub
cmpsb
jg
or
imul
sbb
mov
xchg
adc
or
idivb
cmpsb
mov
jbe
sbb
std
sahf
mov
xchg
pop
mov
out
mov
dec
in
sub
cmp
mov
adc
jb
xchg
popa
fwait
mov
or
dec
insl
cmp
pop
sub
jge
mov
mov
bound
mov
mov
add
mov
filds
pop
cwtl
repz
out
jb
out
adc
xor
sub
or
mov
and
fistl
fs
lods
xchg
fdivp
ds
repnz
pop
pop
and
push
and
dec
dec
sbb
stos
pop
js
loope
fnsave
aam
out
xor
int
cmp
in
dec
lahf
aad
out
mov
fsubs
mov
or
cwtl
push
rolb
inc
sub
cmp
setno
gs
stos
outsl
cmp
cmp
pop
aas
aaa
daa
cld
mov
pop
adc
jp
ret
or
rclb
ljmp
in
les
test
inc
andl
add
out
pop
fbstp
in
lea
inc
ljmp
aas
xchg
cmp
jno
out
dec
fiadds
data16
mov
dec
addb
das
adc
and
xchg
adc
popf
lcall
mov
test
int3
iret
in
pop
in
inc
pop
and
pop
xor
cmp
xor
xchg
in
cmp
pop
lret
sarb
dec
inc
in
decl
pop
repz
icebp
dec
scas
dec
adc
fildl
sbb
pop
inc
stc
popa
int3
and
inc
insb
xchg
push
lock
cmpl
orb
dec
sbb
push
subl
ss
inc
int3
sahf
pushf
out
lret
nop
adc
and
repz
mov
mov
test
sub
or
popa
adc
and
lret
testb
jnp
cmc
pop
movsl
mov
out
add
and
inc
pop
sub
pop
andb
outsl
std
cmp
fs
xor
mov
sub
pop
xchg
and
xchg
clc
test
pop
ss
push
dec
ret
xor
sarl
pop
jb
gs
add
xor
lcall
or
fwait
out
dec
mov
das
cmc
dec
repz
pop
adc
inc
mov
push
add
sar
jecxz
scas
fwait
iret
stc
sbb
jge
in
divl
jae
sbb
stos
cmpsl
lock
jg
push
out
cmc
clc
xchg
push
int3
or
jge
jle
dec
test
adc
in
mov
dec
jb
mov
pop
mov
dec
stc
clc
pop
in
sahf
cmp
jo
js
fs
mov
push
sub
andl
sbbb
add
xchg
mov
in
and
je
jge
repz
dec
clc
mov
iret
inc
mov
jo
pop
inc
pop
je
jo
push
fnstcw
pop
xchg
pusha
fiaddl
pop
adcl
scas
fsubs
test
in
nop
leave
sahf
test
inc
jne
mov
add
std
cmp
push
rcrl
fiaddl
inc
inc
shrb
mov
and
push
scas
pop
lods
imul
or
cmp
fnstenv
mov
jecxz
push
fstp
sub
lret
and
jns
mov
iret
sahf
in
fs
in
or
xor
jb
outsl
pop
jb
sub
aaa
test
pop
mov
or
inc
cmc
lods
xchg
in
and
xchg
pop
pusha
xchg
fsubrs
add
and
es
gs
xor
mov
insl
mov
out
fs
clc
and
jne
fmuls
pusha
adc
add
subl
push
fbstp
push
xor
sbb
and
xor
xchg
arpl
popa
pop
movsl
out
inc
mov
lock
and
movsb
jle
sub
ret
and
enter
rclb
pop
test
call
push
shrb
stc
fbld
in
sub
dec
iret
mov
loopne
cmpsl
and
cmp
sub
xor
or
scas
push
push
icebp
filds
inc
jo
mov
add
sbb
call
jnp
pop
mov
pop
push
cmp
xchg
push
cmp
sbb
cmp
xchg
or
xchg
rcrl
mov
pushl
and
pop
stos
ja
lret
cmpsb
mov
xchg
cmp
sub
out
jp
adc
pop
inc
cmp
xor
jl
pusha
out
cmc
xor
mov
popf
icebp
dec
rcll
out
xchg
mov
ja
xor
int3
sub
mov
cmc
push
push
jo,pn
int
adc
sub
sub
pushl
jle
adc
adc
mov
pop
pop
in
movsl
adc
sub
push
cmpsl
lods
outsl
mov
pop
dec
loope
xchg
mov
out
call
fildll
leave
fbstp
inc
add
mov
test
loopne
dec
mov
mov
sbb
loop
call
or
in
fistpll
pop
jge
and
pop
repnz
pop
cmpsb
aaa
sub
dec
lret
cli
pusha
pop
lods
xchg
push
enter
imul
btr
add
imul
mov
dec
add
stos
jo
and
test
push
dec
adc
mov
dec
sub
mov
subl
lods
mov
outsb
leave
test
xor
or
sbb
ret
mov
jmp
fistpl
inc
cmpsb
daa
inc
mov
jecxz
in
fildl
push
xor
fs
jge
fsubr
mov
inc
in
add
sub
inc
mov
outsl
mov
xchg
cmp
lea
aad
add
pop
ret
sub
stc
cmp
lods
cmpsb
xor
fildl
push
xor
sbb
cmp
jle
mov
pop
inc
pop
jecxz
movsb
insl
xchg
jmp
add
ret
mov
cmp
mov
xor
add
lret
aam
sbb
in
inc
imul
xchg
jne
rcll
aas
xchg
xor
sarb
pusha
fnstenv
lods
loopne
cmpsb
add
inc
mov
inc
je
fstpt
sbb
inc
inc
sbb
xchg
stos
in
scas
lcall
jo
sbb
adc
outsl
shlb
mov
cmpsl
sbb
push
call
push
addr16
adc
sti
pop
mov
stos
push
gs
sbb
push
push
cmc
cmpsb
lods
test
div
xchg
dec
push
sbb
mov
les
int3
enter
lret
jno
xchg
xor
out
subl
aaa
stos
pop
mov
pop
jbe
cltd
add
push
shrb
push
mov
fidivl
fcmovu
fistl
push
lods
outsb
or
lea
insb
arpl
popf
js
cmp
lret
inc
testb
lock
cmp
mov
sahf
int3
and
test
out
xchg
mov
lahf
pop
pop
and
inc
jo
push
mov
bound
dec
dec
or
in
pusha
cmc
scas
cli
xchg
shlb
fisttps
add
in
sub
xchg
sarb
addl
aas
jp
cmp
xchg
pop
cmp
mov
sahf
mov
or
dec
sub
add
scas
sub
je
test
add
and
dec
std
negb
pop
inc
mov
and
sub
test
rcrb
mov
outsl
adc
xor
lret
xchg
scas
xor
mov
or
imul
and
jge
mov
mov
dec
push
in
or
mov
movsl
jbe
ss
dec
inc
dec
stos
mov
ja
xor
loope
in
sti
add
in
pop
test
pop
and
rclb
jecxz
lods
loop
adc
test
cltd
dec
mov
jbe
into
loope
mov
test
cmpsb
and
cltd
jecxz
dec
leave
out
not
pop
xchg
mov
ja
push
fs
xor
mov
pop
mov
scas
xchg
sar
and
adc
fbstp
fnstenv
jne
dec
cmpsl
cmp
xor
loope
pop
rclb
xchg
or
inc
cmp
lods
nop
add
sti
cwtl
xchg
cmpsl
cltd
add
outsb
mov
xlat
es
push
inc
jae
out
mov
inc
outsb
ret
mov
push
lods
stos
jb
mov
push
les
cmp
pushf
xchg
out
jbe
mov
imul
push
mul
mov
rcll
cwtl
bound
mov
aam
arpl
ds
out
mov
js
and
mov
imul
pop
fisubrs
push
cltd
push
jmp
dec
fstps
scas
cmp
imul
pop
fisubrs
push
cltd
push
jmp
dec
fstps
scas
cmp
or
sbb
dec
into
pop
fisubrs
push
cltd
push
jmp
outsb
fstps
scas
cmp
imul
pop
fisubrs
push
cltd
imul
and
add
fstps
cmp
and
xchg
or
fcoml
lods
jle
rcrl
add
popa
sub
sbb
or
cld
lods
in
mov
or
repz
rorl
sbb
add
dec
cwtl
mov
test
test
mov
mov
pop
fs
mov
mov
addl
jp
mov
fmull
leave
inc
adc
lods
adcb
cwtl
dec
pop
shll
outsb
inc
xor
sub
xor
cmc
ljmp
stos
mov
int3
outsb
lods
inc
jmp
xchg
mov
mov
popa
jecxz
or
std
inc
in
dec
pop
jle
sbb
andl
shlb
cmp
pop
outsl
dec
fdivrl
sub
jecxz
loope
xchg
adcb
inc
pop
stc
mov
ret
jmp
aam
inc
cmp
iret
leave
call
outsb
xor
call
pushf
ret
xlat
daa
cmp
pop
sbb
popa
push
jno
inc
stos
dec
cmp
cld
mov
stc
cmpsb
jmp
adc
fs
push
arpl
push
into
mov
hlt
into
test
repz
scas
jmp
pop
jb,pn
jle
popa
dec
aas
jmp
aad
aam
in
xchg
lds
int
adc
add
cmp
push
sub
sbb
or
cld
mov
int3
xchg
mov
rorl
add
popa
sub
sbb
or
cld
mov
int3
xchg
mov
rorl
xchg
jb
scas
dec
xchg
cmp
dec
mov
adc
inc
mov
icebp
sub
add
and
push
movsb
push
call
addr16
push
sub
push
xchg
mov
jns
fldl2t
mov
xor
dec
aad
insb
lahf
mov
dec
mov
mov
jnp
cltd
stc
testb
xlat
xchg
loope
pusha
jecxz
push
loop
sahf
insl
sub
testl
or
imul
add
pusha
mov
or
mov
xor
xchg
sub
add
test
lret
cmp
js
jp
add
lock
scas
xchg
or
loopne
jns
jmp
or
push
test
pop
sahf
lods
int3
adc
fsub
lahf
and
movsl
xor
pop
xor
jmp
sub
in
mov
mov
ror
sbbb
xor
in
mov
lea
sahf
rol
push
sub
cltd
or
insl
in
pop
jns
xchg
arpl
and
push
imul
sub
xchg
dec
ret
mov
fs
fldcw
mov
sbb
pop
cmp
adc
leave
rcrb
lods
aad
outsb
jns
shl
pop
pusha
xor
push
jnp
xor
xchg
or
decl
cmp
cmpsb
xor
fcompl
inc
imulb
sbb
pop
dec
adc
daa
jge
pop
mov
jbe
iret
fs
xchg
hlt
jnp
push
mov
scas
adc
xor
sbb
pop
rcll
mov
test
bound
imul
mov
cli
cmpsl
call
and
enter
and
add
jp
stos
adc
dec
rclb
sub
cli
dec
test
push
lea
mov
push
in
mov
mov
push
imul
adc
cltd
or
mov
mov
jecxz
inc
stc
daa
jge
fnstsw
int
test
mov
mov
call
popa
pop
pop
or
and
pop
pop
stc
sub
call
push
test
jns
cld
pop
push
sub
cmp
cmp
sbb
mov
push
in
push
cmp
jmp
xchg
xor
bnd
lods
shlb
xor
ja
mov
enter
in
or
lret
jg
adc
je
mov
pop
add
sbb
push
push
jp
stc
int
cmp
mov
xchg
ljmp
xor
sbb
cmp
fs
sarl
in
icebp
lds
decb
rcll
pusha
mov
xchg
xchg
fldcw
aas
aaa
pop
js
sbb
stos
pusha
pop
leave
xor
adc
xchg
loopne
jg
push
adc
shll
stos
jl
mov
js
aad
mov
mov
subl
sub
push
xchg
das
mov
cld
xlat
mov
mov
scas
in
call
xchg
and
and
popf
pop
popl
sub
mov
cmpl
mov
or
es
sub
adc
xchg
push
sbb
ja
adc
jp
jno
je
push
shrl
and
cmp
sub
cmp
imul
push
add
inc
mov
mov
wrmsr
cmc
cli
daa
mov
lahf
movsb
xchg
stos
shl
add
xor
and
popa
dec
mov
dec
pop
xor
sbb
out
icebp
shlb
aad
xor
mov
repz
push
mov
inc
sbb
jle
shrb
sbb
out
push
push
shr
and
es
cltd
xchg
mov
inc
dec
outsb
call
push
int
xor
mov
cltd
pop
pop
mov
clc
stc
arpl
push
popf
cmc
xchg
mov
mov
jne
clc
push
xchg
fs
mov
idivb
sub
sahf
sub
insl
je
push
rorb
mov
ja
xor
inc
std
in
mov
in
xlat
inc
push
movl
ret
cmp
fmuls
mov
aam
inc
jo
lods
cmp
mov
cmp
stos
movsl
test
dec
xor
aas
fcoml
mov
pop
nop
nop
push
add
dec
lret
cmp
xor
pop
icebp
lods
pop
and
outsl
loope
xor
jmp
push
sar
mov
dec
cs
add
test
pop
or
inc
out
lea
punpckhbw
dec
mov
int3
xchg
lock
rorl
ret
je
shr
and
enter
loopne
jmp
ret
jecxz
cs
push
or
test
lods
or
fbld
pusha
push
add
mov
pop
dec
push
jmp
cmp
pop
hlt
cmc
into
dec
mov
jnp
cmp
push
cmp
cli
and
ss
pop
or
into
fldenv
std
repnz
cmp
mov
push
outsb
xor
mov
lea
mov
mov
aad
arpl
addr16
push
outsb
xor
mov
enter
repnz
pop
cmpsl
xchg
sub
mov
aas
rcr
out
ja
push
arpl
rcl
sbb
stos
pop
push
fucomip
nop
cwtl
xchg
sbb
mov
jp
insl
adc
stos
fldl
movsb
or
mov
decb
mov
sbb
sbb
dec
sub
popa
pusha
ljmp
lcall
inc
jo
scas
int
lcall
pop
cmpsl
cmp
stc
je
popa
fsubp
std
or
and
add
outsb
loopne
pop
add
mov
push
movsl
sbb
arpl
cld
lret
xor
push
push
rclb
pop
cmp
rcll
ret
insb
cmpsl
mov
or
es
cmpsl
pop
fisubrs
xchg
iret
jae
shll
into
insb
lret
mov
cmpsl
xchg
fwait
das
jb
mov
push
lea
aas
mov
loop
dec
sub
imul
push
cmp
push
mov
arpl
pop
cltd
push
divl
sub
inc
or
or
cs
dec
mov
inc
repnz
xor
xchg
pop
dec
test
lock
outsl
lret
push
gs
xor
push
lock
push
sbb
pushf
ds
inc
decb
adc
xor
and
jb
sbbb
push
sbbl
mov
mov
xor
cmp
push
lea
pusha
push
sbb
gs
jle
sbb
cmp
call
je
out
int3
vandnpd
stos
sub
lods
xchg
lret
fcomps
sub
dec
lock
jp
inc
or
cwtl
sub
mov
xor
mov
sbb
into
sub
mov
dec
and
jo
xchg
xchg
inc
push
push
xor
dec
mov
out
scas
cmc
cli
jge
cmp
test
adc
test
add
movsl
les
aam
jne
mov
adc
sbb
adcl
aam
jae
and
pop
and
in
jmp
cwtl
cs
arpl
std
jns
int3
int3
mov
lret
jp
imul
dec
xchg
rorl
test
outsb
cmp
mov
mov
fildll
xchg
xchg
xchg
lods
or
call
fisttpll
shrl
mov
or
ja
xor
int3
inc
xorb
ficomps
lea
rorl
jo
test
lds
or
mov
ja
mov
vmwrite
jge
jno
shl
je
adc
leave
loope
sbb
adc
daa
incb
and
rorl
adc
lock
cmp
push
fstps
std
ss
imul
xchg
arpl
mov
test
hlt
push
mov
sar
mov
stos
sub
dec
cmc
gs
mov
movl
pop
into
fidivl
dec
jle
mov
iret
loop
mov
fadds
test
pusha
test
lahf
and
call
jl
add
inc
add
shll
aam
mov
movsl
cmp
sarl
and
scas
pop
bnd
adc
movsb
dec
faddl
and
dec
jns
mov
insb
into
sub
outsl
push
lea
sub
pop
pusha
jae
ss
lds
lock
jns
arpl
adc
xchg
test
or
mov
mov
xchg
or
mov
lock
loope
cmp
std
shl
jbe
mov
dec
out
mov
add
or
orl
mov
mov
or
jmp
ljmp
xor
stos
jns
repnz
push
fisubl
dec
imul
jb
shld
sub
dec
mov
inc
stos
loop
and
stc
nop
jb
mov
shlb
sbb
icebp
popa
sahf
xor
jno
push
mov
les
push
andb
sub
dec
cmp
inc
jne
push
dec
inc
outsl
jno
aam
jl
out
xchg
push
repz
pop
jecxz
mov
xchg
rcl
jp
enter
ljmp
mov
arpl
fcmovnb
lods
inc
sub
imulb
popa
xchg
cltd
xchg
sub
ja
inc
flds
fisttpl
sti
sysret
inc
cmp
dec
inc
lret
pop
push
fstl
push
iret
and
mov
std
pop
int3
mov
sarb
ja
fstl
xor
pushf
sub
add
jae
push
pop
xchg
outsl
mov
sub
fwait
pop
outsl
or
xor
call
pusha
call
and
or
sbb
lods
stos
sbb
sbb
dec
jecxz
and
pushf
out
xchg
stos
lods
icebp
jnp
cmpsl
addr16
imul
inc
sbb
lret
pop
mov
je
and
out
outsb
xor
scas
fwait
int
push
rcrb
xchg
and
out
enter
into
nop
jge
insl
outsl
cmp
ret
loop
inc
jb
sbb
mov
mov
lods
arpl
in
pop
js
scas
pop
pop
cmp
repnz
ljmp
loope
mov
loopne
push
cmpsl
mov
and
in
cwtl
rcll
sbb
sbb
jns
js
cmpsl
sub
pop
sub
lods
aas
seto
jg
test
sbbb
jo
sbb
fcmovnbe
mov
repz
ret
and
sub
popf
pop
lret
ja,pn
jp
out
push
mov
stc
sub
fistpl
aam
or
sarb
cmpl
mov
cmp
inc
sbb
sbb
adc
sahf
dec
inc
sbbb
stos
mov
xchg
push
sbb
xchg
or
jl
gs
mov
add
outsl
leave
push
or
or
dec
insl
push
dec
movb
fildll
dec
jg
inc
xchg
fsts
mov
shrb
lahf
fwait
cwtl
inc
emms
ss
fdivr
push
hlt
fwait
lds
mov
xor
xchg
out
jecxz
out
fidivl
arpl
cmp
out
cwtl
sub
mov
and
test
mov
adc
mov
sub
mov
jbe
imul
jb
sbb
pop
cld
iret
adc
xchg
xchg
fists
dec
pop
loopne
mov
hlt
adc
jmp
in
insb
inc
call
fdivrs
out
pop
jp
dec
push
sti
out
push
cwtl
jecxz
dec
cmpsl
jb
mov
jo
mov
mov
aam
mov
ret
dec
shrb
sub
sub
sub
or
imul
mov
ret
lea
add
add
fisttpl
jle
push
mov
cmc
pop
dec
cmpsb
lahf
in
push
add
loopne
ss
push
cs
mov
imul
test
aam
sbb
lahf
push
and
loop
dec
jge
bndstx
lock
shr
push
outsb
xor
xchg
adc
sti
mov
mov
cli
ds
andl
rorl
pusha
stos
jb
pop
clc
mov
in
faddp
scas
bound
rsm
mov
fstpl
jo
lahf
popf
add
scas
mov
jg
les
adc
leave
inc
push
loopne
leave
into
push
insb
jmp
add
mov
data16
addr16
lea
stos
dec
dec
mov
aam
xor
jb
add
add
cmpsb
js
and
ss
ljmp
mov
jl
dec
sub
pop
callw
pop
inc
mov
push
mov
push
out
aad
inc
mov
xor
mov
inc
test
sbb
pusha
nop
cs
mov
cmp
cld
pop
sbb
inc
loop
inc
out
jne
mov
pop
iret
decb
inc
add
insb
dec
icebp
mov
jecxz
mov
add
lahf
jecxz
sti
and
cmpsl
jne
mov
pop
sub
push
shlb
pop
mov
aas
sbb
dec
enter
inc
in
inc
insl
jnp
mov
dec
mov
push
cld
test
fadds
xchg
inc
jae
add
loope
mov
das
fs
cmp
jp
xchg
sub
cmpl
add
mov
add
mov
jecxz
lea
iret
stc
leave
inc
pop
fists
sbb
inc
xchg
mov
cld
xchg
cmpb
sbb
into
adc
inc
aam
jp
sub
loope
arpl
push
cmp
stos
in
jl
push
outsb
or
mov
xchg
jb
cld
add
out
dec
lret
mov
sbb
mov
inc
call
fldl
aad
jecxz
add
mov
jmp
sbb
mov
jecxz
lods
or
loop
sbb
iret
arpl
and
jmp
add
push
repz
ret
in
or
ret
inc
adc
incb
imul
fsubrp
jbe
pop
addl
in
and
jl
std
sbb
cli
test
push
dec
fwait
cmp
pushl
adc
outsb
pop
mov
repnz
or
sbb
mov
insb
mov
inc
inc
xchg
push
shrl
jo
cmp
ret
cmp
sahf
xchg
std
orl
adc
test
jp
call
cmpsl
mov
enter
mov
xlat
test
insl
fsubrs
sub
xor
and
pop
mov
mov
shlb
movsb
sbb
enter
push
cmp
mov
pop
cmp
mov
arpl
mov
push
xlat
pop
jae
mov
aaa
adc
cltd
outsl
push
test
fs
mov
loopne
loope
mov
leave
pop
jp
add
mov
and
xor
lret
mov
mov
push
mov
xchg
push
fisttpll
test
pop
push
mov
jmp
inc
test
jmp
jge
jbe
test
or
mov
aam
cmp
jg
adc
add
test
lock
arpl
test
movsl
ds
lret
inc
adcl
aas
stc
dec
icebp
xchg
dec
xor
add
jg
icebp
jo
sbb
fistpll
addr16
inc
fnsave
mov
ljmp
insb
cmpsb
jo
add
jg
mov
out
das
mov
jge
sub
sub
adc
notw
test
dec
push
icebp
hlt
nop
cmp
addr16
fs
test
repnz
inc
movsl
dec
clc
mov
add
dec
mov
mov
jb
mov
sbb
ja
test
or
test
add
inc
xlat
adc
ljmp
test
mov
insl
add
fldt
or
je
xor
addr16
in
daa
or
cld
icebp
int
ja
rcll
dec
ss
cmc
cmp
xchg
adc
jle
int
cli
mov
pop
xor
mov
out
mov
lret
icebp
das
imul
jge
out
pop
mov
mov
inc
in
insl
adc
in
inc
xchg
xchg
or
push
decb
sub
push
scas
arpl
adc
into
mov
and
dec
ja
insl
jmp
scas
loopne
shrb
je,pt
jecxz
push
mov
lahf
jg
ret
jle
sub
loop
push
cmpsb
jg,pt
lret
idiv
in
jmp
mov
mov
pop
popa
stc
add
sbb
add
pop
fnstenv
add
pop
sahf
mov
mov
xor
or
cmp
pop
ss
scas
aad
xchg
jg
and
push
jle
inc
or
xor
mov
cld
push
mov
jb
mov
scas
xchg
aas
mov
fmull
aad
push
in
test
sbb
xor
data16
dec
cmpb
out
sbbb
es
icebp
ljmp
pop
loope
sub
cltd
pushf
xchg
push
mov
shlb
xchg
jbe
adc
sbb
add
shrb
sbb
xor
xor
repnz
inc
test
arpl
loop
incb
fisttpl
aad
mov
pop
faddp
mov
push
add
cmp
pusha
push
fs
jl
ja
cld
jb
push
stos
insl
addr16
pusha
aam
outsb
mov
fadds
inc
ficoml
test
push
nop
xchg
out
ja
sti
push
cmpsb
pop
or
loope
jb
shrl
mov
dec
fistps
xchg
dec
mov
pop
imul
mov
sbb
xor
jo
cmc
rclb
test
out
dec
sbb
pop
test
jecxz
and
cmp
gs
jno
not
out
roll
push
sarl
mov
scas
sbb
mov
repnz
pop
shll
jecxz
cmp
mov
mov
push
fstpt
out
inc
xchg
inc
xchg
dec
mov
daa
loop
mov
ror
xchg
xchg
jnp
xchg
mov
mov
cmp
mov
pop
enter
cmpsl
adc
pop
mov
loopne
test
push
arpl
pop
adc
sti
mov
sub
cmpl
sub
fsubrl
and
mov
ret
xor
jg
and
inc
fldenv
cmpsl
push
pop
call
and
ret
jecxz
lcall
inc
sub
pop
out
pop
test
in
mov
jbe
sub
inc
les
iret
movsl
or
pop
out
lret
fwait
daa
pop
lock
scas
xor
shll
mov
sbb
pop
cmpl
arpl
or
adc
aad
inc
imul
pop
push
aas
addr16
add
stos
rcr
pushf
mov
adc
push
pop
add
insl
fimull
mov
pusha
mov
xor
dec
lock
test
and
xor
mov
mov
mov
mov
clc
in
sbb
mov
mov
and
and
lcall
mov
imul
cmpsb
aas
sbb
addl
outsb
enter
bnd
jle
inc
into
lods
mov
jae
cmp
je
jb
add
and
or
bound
dec
jecxz
ffreep
inc
outsl
ds
mov
mov
pop
xor
mov
jb
mov
jb
jne
adc
cmp
pop
mov
xor
out
stc
jo
sub
je
add
sub
cwtl
addl
mov
hlt
das
aaa
fcomps
gs
add
dec
rcr
inc
push
lcall
xlat
mov
jbe
mov
stos
cld
and
jb
inc
xchg
std
lcall
mov
push
sub
lahf
fidivrs
sbb
bndstx
mov
mov
imul
xchg
je
or
adc
out
test
jns
add
jl
outsb
mov
lret
mov
fiadds
add
into
xchg
stos
xor
in
fnstsw
sub
inc
push
cmp
cmp
incb
adc
push
pushf
xchg
hlt
jecxz
insl
or
test
lret
mov
jb
nop
les
pop
sub
test
sub
xor
xchg
mov
sbb
js
jo
arpl
fisubrs
mov
shlb
pushf
mov
dec
pop
jo
popa
push
psubw
and
jbe
sahf
mov
xchg
dec
xor
mov
xchg
mov
mov
sarl
jbe
xchg
in
jg
insb
mov
mov
fsubrs
or
pop
imul
stos
leave
cli
or
pop
lods
and
mov
roll
jne
inc
andl
jg
out
adc
addl
je
jae
or
mov
lret
pushl
adc
shrb
insb
lds
mov
pop
test
test
lock
jecxz
jbe
adc
jae
mov
mov
jbe
and
std
xor
pop
sbb
mov
lea
dec
adc
sub
sbb
or
cld
mov
int3
xchg
mov
rorl
add
popa
sub
sbb
or
cld
mov
int3
xchg
mov
rorl
add
popa
sub
sbb
int3
push
cld
mov
int3
xchg
mov
lds
and
insb
adc
cmp
sbb
mov
jbe
int3
out
imul
fidivl
pop
arpl
jp
mov
cmp
dec
jae
addr16
test
mov
fwait
push
mov
xor
imul
add
jae
arpl
push
cmp
mov
mov
mov
lcall
xchg
pop
in
mov
or
sub
pop
cmp
mov
orb
repz
ja
bound
inc
sub
jl
lcall
fstps
stos
push
std
sub
mov
xor
loopne
addr16
or
call
mov
insb
ja
ja
gs
iret
pop
pop
jp
dec
sbb
push
lahf
nop
lcall
mov
xor
pop
pop
sub
incl
pop
xchg
add
addr16
lret
into
fidivl
sbb
jmp
adc
mov
in
fidivrs
out
outsl
cld
loop
adc
xchg
cmp
mov
cltd
repnz
addb
int3
pop
fsub
callw
ljmp
inc
xor
inc
ja
fwait
lcall
mov
jp
or
arpl
push
cmp
lret
or
xchg
cli
mov
stos
lret
mov
dec
push
jg
outsl
dec
jg
insl
es
add
lock
loopne
mov
mov
cmpsl
into
stos
adc
pusha
xor
and
sub
inc
jo
shlb
mov
mov
movsl
mov
inc
je
or
outsl
dec
aas
sbb
push
cmp
mov
mov
mov
lcall
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
lcall
xor
out
sub
jns
adc
cli
into
jl
cld
sbb
add
pop
mov
push
lcall
pop
adc
sub
test
inc
in
repnz
rolb
pop
out
xor
or
jnp
jl
inc
in
dec
pop
jb
or
fcomps
cmp
xchg
ret
or
testb
push
push
sahf
push
push
cmp
dec
aam
sub
clc
dec
fsub
sub
lret
jno
push
jecxz
sub
sbb
in
sbb
ret
and
jne
lcall
push
mov
movsl
pop
add
popf
insl
sbb
jmp
lcall
repnz
test
mov
adc
orb
test
add
bnd
jbe
jle
lds
mov
mov
lock
gs
mov
in
ja
or
push
and
cmp
cmp
lock
jo
lds
push
jle
call
fisttpl
sub
fistpll
movsl
adc
adc
xor
rcrb
jl
sub
leave
cmp
or
add
or
std
mov
sub
mov
test
or
mov
mov
cs
lods
jno
mov
dec
sar
sub
imul
mov
sbb
dec
mov
mov
xchg
jecxz
enter
ret
clc
test
push
pop
shlb
cs
inc
mov
int
pop
xor
clc
invd
sub
outsb
inc
push
inc
cmp
pop
in
xchg
xor
stc
push
jg
inc
jmp
ds
lret
repz
in
lret
sbb
push
iret
rorl
or
mov
mov
pop
mov
jne
add
outsb
test
mov
mov
cmpsl
scas
inc
xchg
mov
dec
push
xchg
inc
ret
sbb
mov
pop
cmp
pop
ss
add
ret
sbb
cmp
sbb
mov
cmpl
fisubrs
mov
mov
dec
xchg
pop
jo
mov
ljmp
ss
mov
sbb
and
dec
lahf
push
dec
or
sub
out
jbe
jecxz
mov
stos
ss
inc
in
mov
shlb
sbb
bound
mov
je
jle
out
fsubrs
test
inc
inc
inc
loope
push
lods
dec
aaa
je
mov
sub
adc
adc
popa
jbe
std
inc
push
cltd
aam
xchg
pusha
cmpsb
dec
push
adc
or
xor
mov
mov
rcl
mov
xor
shr
outsb
or
mov
cmpsb
cmp
and
inc
mov
sub
aaa
xor
mov
nop
adc
cmp
les
inc
mov
daa
cmp
mov
data16
cmp
pop
cs
and
xchg
and
rcrb
or
xchg
lahf
jmp
mov
mov
and
decb
jmp
mov
cmp
icebp
add
es
adc
jnp
ret
jp
mov
dec
adc
xchg
mov
mov
imul
aaa
in
idivb
cmc
push
mov
push
mov
mov
sbb
and
mov
imul
mov
insb
mov
rcl
mov
pop
mov
js
mov
jnp
push
lock
in
out
xorl
rep
sbb
dec
dec
cwtl
icebp
out
mov
fsubl
jae
outsb
fmuls
mov
outsb
fsts
pop
push
jle
inc
stos
mov
movsb
adc
in
push
pop
add
mov
rcll
testl
enter
in
xor
enter
and
sub
xchg
jnp
fldcw
sbbb
push
hlt
cmp
mov
push
jge
push
icebp
xor
insl
push
mov
cld
scas
cmpsl
or
add
mov
ficoml
pop
fstpt
sbb
xchg
cmpsb
sub
push
lret
pop
dec
mov
mov
xor
or
jae
fistl
icebp
xchg
xchg
or
aas
mov
cmc
fimuls
aaa
outsb
int3
popf
jb
jge
push
cltd
push
dec
push
mov
fsub
test
popf
lock
xchg
cmp
sahf
dec
arpl
ljmp
inc
rol
mov
push
jg
mov
shlb
push
imul
stos
push
fstl
bound
push
bound
incb
inc
pop
cmp
dec
push
and
call
jne
test
push
shll
adc
mov
cmp
or
das
int3
out
nop
shrl
cld
pop
push
xor
ror
push
pop
sub
and
vpsadbw
les
cmp
push
lahf
dec
sbb
adc
jo
das
pop
movsl
xchg
in
push
test
add
invd
adc
pop
fstpl
lea
cli
xchg
mov
jmp
jns
mov
and
jecxz
movsb
dec
ret
or
out
dec
cltd
dec
out
dec
xor
aad
test
outsl
jnp
jne
xchg
push
test
or
inc
adc
insb
cwtl
out
bswap
es
xchg
ret
pusha
movsb
bound
xchg
jbe
aad
xor
or
cmp
and
pusha
insb
dec
addr16
stos
lea
push
dec
mov
fldcw
sti
pop
lods
dec
into
mov
or
lret
loopne
or
or
xchg
dec
pop
xor
fsts
sbb
cwtl
fistl
pushf
jg
cmp
test
sub
sti
out
xchg
mov
jg,pn
ret
icebp
add
ss
incb
imul
mov
add
lret
fld
or
push
enter
sub
jecxz
cmp
lea
je
push
cld
inc
jmp
iret
inc
adc
inc
testl
mov
jmp
and
xchg
xchg
cmpsl
or
inc
ror
jae
sbb
cmpsb
mov
mov
sbb
adc
xor
push
sbb
pushl
push
xchg
in
loope
stos
or
sbbb
xchg
inc
shlb
jae
jmp
clc
shlb
outsb
sti
mov
mov
sarl
sbb
in
stc
leave
outsb
ds
shrb
push
and
js
mov
xchg
inc
pushf
mov
sub
xchg
flds
push
stc
cmp
or
xor
js
push
mov
sub
push
push
fists
insl
dec
push
aaa
push
mov
imul
lods
xor
add
pop
cmp
arpl
mov
aas
jo
push
dec
cmp
cmc
sub
dec
dec
pop
cmp
movsl
negl
arpl
lahf
pop
incb
scas
add
cmpb
or
mov
and
inc
xor
movsb
ficoms
adc
cmp
lret
movsb
das
sub
outsl
in
lds
cmpsl
sub
sub
or
push
scas
cs
push
push
dec
pushw
sub
cs
sbb
in
ljmp
pop
cld
xor
push
xchg
mov
gs
or
mov
add
cmp
fsubrl
inc
icebp
arpl
dec
mov
lods
push
call
dec
push
jmp
popf
fidivrs
dec
and
movsb
pushf
jle
adc
cmp
xchg
lea
cwtl
out
push
jg
orb
and
stos
sbb
inc
ljmp
test
js
imul
dec
in
jne
test
jb
cmc
mov
jg
dec
pop
jno
add
mov
stos
add
arpl
cmpsl
pop
stos
arpl
push
add
push
sar
cli
js
stos
adc
je
or
inc
jp
inc
pop
and
xchg
loopne
pop
lock
pop
xchg
jb
sbb
jge
hlt
scas
xchg
outsb
or
jmp
jo
mov
cmpsl
out
mov
push
enter
adc
cmp
aam
mov
and
xchg
es
movsb
stos
movsl
inc
clc
jo
jge
dec
out
je
popa
inc
pop
ret
in
cli
cmp
mov
push
push
mov
and
mov
arpl
dec
sbb
aaa
insl
mov
popf
out
mov
mov
xchg
les
fldt
pop
push
in
hlt
psadbw
dec
and
mov
call
adc
cmp
cmp
shlb
mov
mov
mov
fnstenv
lret
int3
movsl
aaa
inc
inc
movl
adc
adc
xchg
pusha
rcll
mov
add
pusha
data16
inc
pop
sbb
xor
pop
in
popa
mov
outsl
xchg
out
jno
outsl
outsl
adc
xor
mov
xor
loope
sti
jg
out
into
repz
pop
push
pop
les
int
inc
lds
mov
adc
call
ljmp
or
mov
push
lret
push
cmp
bound
mov
sub
mov
fwait
push
ret
pop
inc
jp
aad
sbb
xor
arpl
mov
hlt
repnz
in
pop
mov
pushl
xchg
ljmp
in
or
insb
jmp
pop
pushf
sub
int3
dec
ficoms
cmp
add
scas
cltd
aad
lret
iret
sti
sahf
sub
push
cmp
jg
jne
mov
repz
daa
xchg
sbb
insb
pop
mov
cltd
ret
push
sahf
xor
pop
dec
shlb
xchg
cli
xchg
xlat
lea
add
rorl
data16
fdiv
xchg
or
aad
js
stos
push
pop
sub
mov
fisttpll
jle
xor
inc
xchg
cli
sbb
jp
aaa
xchg
add
or
rclb
sbb
cmp
and
lcall
clc
or
orb
push
adc
push
sbb
mov
add
sub
dec
pop
pop
data16
xor
dec
push
fcmovbe
fs
inc
push
addb
xchg
inc
dec
insb
loope
xchg
aad
mov
adc
cmpsb
mov
push
fwait
inc
jecxz
movsl
jae
icebp
cmp
fwait
out
adc
inc
arpl
sbb
mov
loope
ss
dec
lea
add
xchg
mov
js
data16
inc
or
dec
addl
imull
pop
pop
push
or
lret
outsl
xlat
imul
mov
xor
rorb
js
es
outsb
clc
mov
clc
add
ror
cmpsb
sub
pop
shll
out
nop
and
xchg
jg
pop
push
hlt
mov
add
andb
jl
mov
inc
adc
enter
push
push
stos
xchg
out
daa
xor
cwtl
dec
push
icebp
lods
mov
and
sub
mov
and
hlt
aaa
fisttpll
sub
inc
ss
push
jne
fistpll
ds
scas
data16
jp
xchg
xchg
fwait
xchg
sub
repz
push
xor
jle
jnp
jmp
into
mov
lret
push
push
xchg
insb
dec
xor
aad
adc
ret
dec
cmp
sti
inc
inc
int3
xchg
lods
xor
call
jge
out
sbb
mov
test
aas
jge
pop
into
dec
push
mov
fnstsw
rorb
imul
arpl
sbbb
add
fcomp
out
ficoml
mov
push
jecxz
leave
mov
ret
inc
scas
jno
fsubrs
fsts
jne
test
pop
test
mov
mov
jb
fcom
in
mov
ds
das
cmpsb
bound
icebp
or
sbb
sub
mov
cmp
shlb
mov
add
pop
mov
xchg
cmp
or
xor
enter
mov
sbb
add
xor
lds
shlb
lea
adc
xchg
sbb
jb
iret
testb
rcrb
leave
add
lret
aaa
cmp
mov
add
ja
sbb
int
test
dec
les
imul
sub
pop
pop
inc
adc
pop
push
pop
pop
xchg
outsl
xchg
push
out
cmp
aad
les
mov
jno
nop
repnz
lock
xor
mov
mov
xor
dec
pop
iret
dec
loope
sbb
mov
insl
dec
cmp
jno
out
jecxz,pt
push
and
iret
xchg
out
jns
push
adc
mov
fcmovbe
aad
pop
push
mov
mov
insb
or
ja
mov
cmp
jns
adc
push
ret
into
out
pop
or
outsl
sbb
cs
inc
lcall
jno
jmp
dec
or
cld
mov
jne
fistpll
icebp
adc
stc
cmpsl
mov
idivb
movsb
in
out
dec
push
adc
mov
or
shl
sub
push
je
sub
sahf
jne
mov
mov
cwtl
and
js
out
std
pop
push
stos
aad
les
pushf
dec
mov
iret
cmc
push
les
ja
mov
dec
mov
xor
push
mov
imul
fistl
push
xor
mov
cltd
insl
es
push
xor
jb
int3
insl
push
xor
neg
call
and
xor
inc
rclb
iret
jo
fwait
pushf
jo
push
insb
mov
jb
mov
add
lock
loope
js
ss
sarl
fwait
jge
ret
gs
mov
sub
cmp
sbb
xor
mov
aam
inc
or
pop
mov
and
push
test
mov
das
add
jmp
lock
lcall
rolb
out
dec
push
testl
pop
shrb
add
add
dec
dec
clc
ret
cmp
bound
enter
mov
les
stc
jge
aaa
inc
notb
sbb
ret
push
xlat
xor
inc
mov
lods
repz
cmp
mov
add
xor
in
mov
in
fnsave
and
push
fists
je
adc
push
mov
dec
xlat
leave
rolb
filds
cmpsb
pop
out
push
out
in
cmpsb
out
pop
call
cmp
loopne
jge
jno
dec
dec
cmp
xor
xchg
mov
sahf
lahf
scas
push
dec
inc
fsubl
xchg
inc
fldt
mov
or
lcall
mov
adc
sub
outsl
repz
out
repz
xchg
ljmp
loopne
dec
xchg
in
jne
in
outsb
stos
lahf
mov
pop
push
sub
add
insb
fsts
add
jns
popf
scas
sub
jae
push
add
jo
adc
mov
mov
sar
cli
inc
fiadds
je
addl
jbe
lret
cmp
outsl
imul
popf
stos
aad
dec
jecxz
xor
jns
sahf
ds
testl
xlat
lcall
rclb
jb
ss
icebp
test
adc
mov
add
pop
in
repnz
xlat
sbb
jb
xor
push
add
in
inc
test
mov
fsts
roll
fwait
push
pop
and
inc
inc
iret
pop
lret
scas
popf
add
call
lods
stos
xor
mov
and
xchg
test
and
rcr
add
cmp
pop
in
aaa
cmp
cmp
mov
jp
cltd
fcomps
push
mov
cmp
mov
sub
jmp
sub
out
lods
ret
ds
mov
push
movsb
pop
loopne
pop
test
xor
ja
mov
mov
das
mov
mov
xchg
jmp
lock
xor
rorb
pushf
jbe
and
push
mov
push
mov
xchg
cs
or
shll
and
aam
ficompl
push
daa
sub
xchg
cmpsb
int3
js
rcrl
xor
mov
jmp
sti
cmc
ds
lods
sub
mov
js
xor
pop
adcl
dec
pop
insl
ja
lret
out
in
insl
sbb
mov
cmp
fcmove
dec
or
mov
push
out
loopne
mov
lock
in
dec
aaa
adc
shrl
sbb
imul
jp
orb
lea
fsubs
mov
jp
mov
ja
push
or
add
jno
xlat
sbb
sbb
daa
test
es
inc
ret
pop
sub
das
mov
fwait
roll
push
add
adc
dec
pusha
cmpsl
pushl
ja
adc
jecxz
out
int3
adc
sub
mov
lea
gs
and
dec
pop
mov
cli
cmc
cmp
push
mov
and
fcmovnu
lahf
add
fstp
xor
sub
mov
adc
inc
mov
out
orb
add
jp
aad
sahf
out
dec
mov
mov
js
pop
call
mov
ret
bound
dec
push
into
fwait
inc
rolb
cwtl
shll
data16
and
mov
lahf
out
pop
mov
in
div
cltd
jp
mov
rcrl
in
xlat
stc
fiadds
fsubrs
mov
fwait
in
sbb
and
cld
rolb
or
nop
sub
xchg
cmc
pop
cli
xor
ds
inc
mov
or
xor
jmp
sub
call
pusha
lcall
pop
push
dec
cmp
out
dec
jg
or
clc
push
out
cs
std
lcall
mov
fcompl
sub
jno
int
ret
mov
popf
inc
push
pop
scas
sahf
mov
pop
mov
sbb
or
mov
mov
pushf
cmp
lds
dec
std
sub
sub
aas
test
int
xchg
out
addl
dec
xchg
rcrb
movsl
xor
push
std
adc
cmp
imul
in
xchg
enter
push
addr16
cwtl
lahf
mov
sbb
jns
sbb
jne
xor
insl
sub
xchg
divb
push
fwait
lcall
lret
cmp
jmp
sub
or
les
test
mov
lods
push
and
mov
in
movsb
push
xchg
jge
xor
dec
lock
ds
sbb
loope
cmc
push
cmc
mov
imul
lret
dec
jnp
popa
aaa
sub
int3
cmp
ja
jae
jne
or
js
pushf
pop
popa
imul
push
push
jp
sahf
pop
cmpsl
push
insb
inc
pop
repnz
pusha
push
jmp
js
jbe
jle
fldt
add
mov
arpl
xchg
mov
xor
adc
ljmp
testb
dec
jne
jns
fcoml
call
mov
pop
fwait
cli
ffreep
or
mov
iret
or
jbe
mov
mov
lods
adc
pop
stos
sub
or
push
mov
mov
dec
aaa
pop
in
and
sub
shr
xor
out
fistl
data16
das
cmp
popl
pop
mov
jbe
aam
test
shrl
stos
sbb
cmp
push
push
and
mov
sub
out
cmc
mov
or
xchg
fldt
pop
inc
xor
xchg
imul
mov
insb
push
add
out
gs
outsl
sbb
xchg
std
pop
das
jecxz
call
lahf
lahf
xchg
mov
loop
scas
xlat
ja
inc
mov
arpl
sbb
fisttps
les
and
negl
mov
jno
fstps
mov
dec
test
cmpsb
loop
xor
aad
fstpt
jns
adc
sub
sub
jb
push
add
pop
adc
pop
push
push
adc
add
xor
daa
pusha
loop
xor
xchg
je
push
mov
aad
xchg
cmpxchg
or
divl
lock
clc
clc
jns
orl
push
jb
adc
jbe
and
or
movsb
adc
mov
xor
sbb
mov
sub
mov
lods
jo
xchg
ficompl
xchg
jle
leave
int
imul
dec
loopne
leave
pop
mov
ret
pop
repnz
push
mov
shll
fisubs
push
call
or
and
mov
and
push
jp
out
xchg
mov
mov
in
lods
or
shlb
adc
sbb
xchg
fdivl
imul
pop
push
mov
test
and
mov
sbb
pop
xchg
icebp
mov
sub
xchg
sub
jle
or
xchg
faddp
mov
enter
mov
inc
fisubs
pop
cmpsl
rorb
dec
pop
cmp
sbb
in
fcoml
push
adc
imull
xchg
loop
lret
imul
cmp
addr16
sti
mov
stc
or
jl
rcrl
inc
dec
add
insl
sbb
idivl
adc
mov
fcoml
dec
cwtl
add
jne
xlat
bswap
icebp
cli
push
and
pusha
jecxz
jmp
fcmovb
dec
bound
imul
loope
sti
cwtl
jne
pop
sub
fsubs
imul
loop
mul
sub
arpl
push
ss
mov
fcmovbe
imul
or
jae
arpl
push
cmp
mov
mov
mov
lcall
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
lcall
aaa
pop
sub
or
or
push
cmp
mov
cmpsl
ljmp
jecxz
fidivrl
imul
inc
or
arpl
sarl
or
fimull
inc
xchg
cli
hlt
std
mov
fwait
push
stos
inc
mov
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fstps
jmp
test
pop
push
dec
or
imul
sub
push
lcall
cltd
fimull
xchg
dec
sbb
jns
sub
cmp
jp
push
lcall
sbb
lret
test
sub
dec
adc
push
sbb
jle
mov
cmpsb
ret
stc
rcrb
iret
js
outsb
popa
mov
lock
pop
or
icebp
sbb
and
mov
repnz
fsubrl
cmc
test
xchg
dec
dec
pop
sbb
es
pop
rorb
mov
inc
arpl
jp
dec
cmc
dec
cmp
sub
fcomp
fldcw
data16
lret
inc
nop
test
shl
dec
cmc
dec
mov
or
out
inc
fidivl
daa
push
xchg
inc
hlt
nop
pop
lret
popl
lds
dec
jp
xchg
xor
sub
mov
fisttpl
scas
cmpsb
or
pop
add
cmp
pop
pop
pop
sbb
jp
jg
lcall
mov
cltd
lret
mov
inc
sbb
popa
cmp
add
dec
and
add
mov
out
mov
pop
arpl
pop
sbb
insb
das
dec
add
ljmp
stos
cmc
mov
xchg
push
sub
jns
sub
xor
dec
dec
sub
add
xchg
enter
hlt
mov
mov
sbb
jns
imul
cmp
push
lcall
cltd
fimull
ljmp
imul
cmp
push
lcall
cmc
scas
jmp
mov
repz
loop
pop
enter
xor
mov
mov
dec
or
inc
loopne
shl
add
mov
in
pop
fstpt
inc
jbe
es
aas
les
and
mov
mov
call
mov
mov
xor
gs
cmp
sbb
fidivl
dec
and
mov
adc
mov
hlt
daa
lea
cmpsl
nop
leave
add
into
push
inc
jb
pop
mov
push
and
sahf
adc
xlat
fnstsw
sbb
movsl
jg
mov
dec
imul
cmp
push
push
push
lret
dec
mov
negl
jmp
subb
sub
pop
je
ljmp
ret
dec
push
mov
jbe
jmp
inc
xchg
imul
push
push
jl
sbb
cmp
lock
cmp
movsb
sti
je
aad
xor
cmp
inc
cmp
fimull
mov
jge
push
dec
movsb
xchg
mov
pop
xchg
enter
cmp
mov
dec
pop
pop
pop
cld
sub
ja
std
jo
sbb
rorl
rcrb
popl
sub
aas
lods
out
dec
es
dec
adcb
push
rolb
sbb
mov
loopne
add
jmp
mov
mov
cmpl
jnp
repz
lds
addb
negl
popf
lods
inc
lock
imul
add
sub
gs
mov
or
fisttps
mov
mov
cmp
sub
outsl
inc
inc
sub
jns
and
inc
sbb
add
mov
xor
jnp
sub
clc
xlat
jecxz
in
loop
lahf
or
int3
mov
sbb
mov
inc
adc
test
addr16
cmp
iret
mov
add
dec
rolb
js
mov
test
push
test
push
repnz
jmp
jb
adc
xchg
sbb
jbe
sbb
xchg
xor
cltd
lea
mov
stc
int3
sbb
inc
popa
and
das
rclb
add
insb
xchg
in
jne
mov
or
sub
xchg
xchg
ret
add
adc
popf
outsl
adcb
jmp
xchg
fs
push
fstpl
fcmove
push
sub
jnp
sbb
pusha
jl
mov
test
cmpsl
inc
rorl
test
insl
sub
jp
jae
mov
jns
sub
cltd
push
or
pusha
sbb
in
sbb
dec
jle
cmpb
cmp
mov
mov
mov
mov
fildl
repz
sub
ds
mov
test
in
pop
int
mov
mov
ss
lock
cwtl
adc
jg
enter
mov
sub
mov
loope
call
outsb
popa
cmpsb
test
mov
push
mov
push
dec
test
dec
jnp
movsb
sub
xor
sub
xor
adc
outsl
adc
mov
dec
lret
roll
bnd
and
push
inc
imulb
les
jo
xlat
push
orl
aad
add
push
imul
shrd
adc
loopne
mov
mov
movsl
fcmovb
mov
std
inc
pop
jbe
cmp
jae
cltd
jb
icebp
mov
adc
dec
aad
jns
popf
cmc
rorl
aam
cmp
push
dec
nop
lock
mov
pop
ljmp
and
mov
std
mov
arpl
jl
fwait
test
imul
xor
push
fs
leave
mull
xchg
pmaxsw
pusha
inc
test
fists
lods
ja
inc
aad
inc
negl
push
fstpl
sub
add
push
pop
outsl
mov
stos
cmp
ret
mov
pop
ljmp
mov
das
lcall
hlt
pop
scas
sarb
std
ffree
push
fs
rcll
shll
inc
cmovae
sub
mov
outsb
adc
pop
int
xchg
js
inc
leave
add
cmp
ja
or
jmp
fs
sahf
orb
idiv
xchg
mov
push
push
repnz
loopne
xchg
push
or
or
out
sbb
js
iret
dec
clc
test
cmp
repz
imul
push
popa
popl
sbb
mov
movsl
push
push
syscall
jecxz
aad
add
inc
push
jle
sub
pusha
jae
jle
pop
pop
scas
mov
push
lahf
mov
xor
jl
pop
popf
mov
push
orl
adc
mov
ret
inc
cmp
adc
cld
xor
decl
add
xor
xchg
jne
ja
lods
es
sub
xor
clc
hlt
loop
lock
icebp
sub
sahf
pop
pop
and
movsl
and
or
aam
ja
sbbl
mov
aaa
push
ret
shlb
out
inc
and
mov
daa
push
mov
push
cld
cmp
add
inc
or
jo
jmp
mov
ljmp
ret
filds
jge
mov
push
in
cs
int
roll
cmp
jns
leave
iret
lods
sub
mov
pushf
mov
test
push
pusha
xchg
dec
lods
outsl
xor
movsb
int3
mov
sbb
adc
push
adc
gs
pop
cli
sbb
push
inc
sahf
xor
adc
sub
jp
or
in
out
push
or
jae
push
adc
imul
jns
je
add
sub
pop
dec
repnz
int3
dec
mov
lods
ds
add
lods
pop
add
cmp
xchg
inc
xchg
mov
dec
xchg
sbb
and
pushf
jl
imul
js
or
fisttpll
test
xchg
cmp
push
jg
nop
addr16
daa
mov
std
gs
sbb
sbb
pop
loope
js
adc
hlt
test
lret
pop
cmp
cmp
and
aad
xchg
jge
jl
dec
sti
pop
and
lods
jb
scas
je
mov
mov
clc
mov
in
cwtl
lods
pop
aam
xor
fwait
dec
lahf
in
mov
cmpsb
std
in
xor
idiv
push
call
sbb
icebp
sub
repnz
push
fsts
inc
daa
in
out
mov
sub
mov
test
push
inc
lret
dec
les
les
repnz
pop
inc
clc
mov
sbb
mov
pop
pop
repz
cmp
gs
mov
inc
rcl
and
inc
cmp
inc
outsb
cmc
mov
adc
cmpl
popa
pop
ret
sahf
arpl
stc
and
lret
sbb
mov
cmpsl
test
cmpsb
mov
mov
pop
loope
shll
pop
xor
scas
or
push
loope
sbb
cmp
adc
jmp
jmp
das
pusha
or
addr16
sub
shll
or
cltd
sbb
std
aad
jge
sub
inc
es
insl
pop
insb
in
je
rorb
inc
cltd
push
cmp
push
or
inc
repnz
in
push
inc
mov
dec
jmp
xlat
cmp
bound
adc
mov
mov
sub
push
xchg
sub
xor
jecxz
or
shrb
out
dec
cld
pop
insl
out
scas
pop
push
xchg
sti
sbb
sti
repnz
outsb
call
repnz
mov
or
sub
shl
push
or
xchg
and
cmp
push
mov
jp
xchg
sub
mov
push
pop
xor
xchg
mov
xchg
cltd
lods
xchg
add
pop
add
jecxz
mov
cltd
gs
and
add
int
testl
incl
fstl
push
pop
lods
dec
push
dec
add
mov
pop
and
leave
test
mov
pcmpeqb
outsb
dec
es
notl
fisttps
aam
push
ror
xor
pusha
cmp
cmp
cld
jle
jnp
push
inc
sbb
mov
in
pop
imul
pop
dec
mov
cmpl
lea
insb
aam
xchg
and
add
xchg
cwtl
jbe
add
std
test
outsl
push
xchg
inc
icebp
movsl
aad
ret
dec
scas
sbb
add
dec
les
out
je
int
xchg
jmp
inc
pop
test
aas
fadd
out
cwtl
hlt
jecxz
dec
cmp
sub
push
xchg
into
pop
dec
mov
in
hlt
enter
pop
pusha
ror
xor
add
mov
lods
ljmp
data16
ja
hlt
or
mov
hlt
insl
pop
inc
push
out
out
testl
and
cwtl
cmpsb
sahf
add
pop
xor
adc
mov
or
popf
add
bound
adc
mov
test
jnp
pushf
sbb
mov
dec
cmp
ror
jle
insl
addr16
mov
push
outsl
popf
or
push
mov
mov
inc
xlat
mov
push
or
or
out
repnz
or
xchg
stos
jg
jbe
xor
jb
dec
repz
jge
daa
or
or
push
or
or
hlt
xlat
jl
nop
cs
data16
in
test
lds
add
inc
sahf
ljmp
xchg
or
scas
xchg
gs
pop
xchg
aam
and
divl
std
jne
outsl
lods
push
sbb
jb
cli
xchg
jle
shlb
dec
jo
inc
jp
inc
arpl
dec
mov
lea
lods
aam
rep
xchg
imul
in
cmp
enter
jmp
dec
adc
mov
mov
aam
mov
mov
xor
mov
in
jg
xchg
fwait
loope
scas
fs
push
icebp
add
jg
push
mov
lods
jle
xor
test
jno
dec
jae
movsb
loope
bound
dec
or
jle
shl
repnz
rcrb
xchg
xchg
jae
add
rorb
dec
into
sbb
xor
cs
xchg
ffreep
mov
std
sub
aam
ret
or
mov
push
call
sbb
push
jnp
or
out
mov
invd
fsubl
mov
sbb
in
dec
cmp
cli
stc
xchg
imul
mov
pop
cs
xor
lods
popf
or
popa
mov
popf
cwtl
push
sub
xor
and
je
push
addr16
call
xor
fbstp
pop
or
dec
dec
and
mov
xchg
movsl
cmp
scas
push
lods
jecxz
pop
das
hlt
fwait
jl
xor
fistpll
pop
xor
dec
int
cltd
inc
rol
in
push
xchg
push
add
shr
adc
popa
push
mov
mov
mov
stos
and
and
je
mov
scas
mov
sbb
xchg
add
xchg
mov
psrld
mov
out
test
adc
aaa
cmp
xchg
jmp
fisubl
fst
pop
insl
insl
repz
cmpsl
mov
sbb
stos
xchg
or
sub
sbb
push
cmp
adc
lahf
adc
stos
sub
pop
and
xor
enter
sub
call
jmp
push
leave
cli
push
in
or
cmc
mov
sbb
pop
loop
in
popa
xor
stos
dec
inc
add
mov
adc
fnsave
pop
scas
aad
inc
sbb
fsub
test
inc
xor
icebp
fbld
fcoms
jmp
dec
shrb
sub
pop
mov
ljmp
std
push
push
aaa
adc
fisubrl
xchg
xchg
adc
and
xor
push
cmpsl
aas
xor
mov
jae
push
enter
xchg
mov
mov
repz
pusha
pushf
jecxz
mov
push
inc
ret
sub
hlt
xchg
int
dec
shll
fistl
mov
test
mov
jb
into
lea
data16
js
shrl
lahf
mov
lahf
aas
inc
mov
inc
loope
out
push
fdivs
xchg
adc
sub
xchg
je
mov
push
sbb
lahf
mov
push
add
push
or
das
jae
push
nop
cli
xchg
ja
jl
in
stc
jbe
pop
pop
lods
push
xor
add
lods
sub
test
inc
dec
xlat
in
ret
leave
lcall
sbb
fiadds
test
mov
roll
mov
jl
mov
or
aas
push
pop
push
mov
out
adc
aaa
ret
ja,pt
jecxz
mov
push
and
push
cmp
jg
mov
mov
xchg
pop
stos
xchg
add
into
xchg
into
cs
dec
sub
arpl
xacquire
adc
lcall
loopne
in
int3
loopne
cmp
push
ret
mov
jb
and
fisttpll
fcomip
mov
mov
out
inc
sub
jbe
sbb
fs
insl
or
test
mov
je
inc
es
xlat
xor
xorl
xchg
mov
stos
nop
jb
adc
and
pop
je
xor
pushf
rcr
into
js
fistpl
ljmp
xor
dec
outsb
push
dec
out
or
gs
mov
mov
cmp
cmpsb
sub
fnstcw
repnz
xchg
push
adc
test
jl
mov
sbb
add
js
orb
testl
add
and
std
loop
je
mov
xchg
insb
outsl
xchg
out
arpl
roll
inc
das
pushf
jno
addr16
jae
adc
inc
sub
adc
xchg
fadds
mov
mov
in
lret
sub
cmpsb
das
cli
or
lods
insl
subb
pop
mov
int
out
inc
sub
sbbl
insb
push
test
push
les
and
rcrb
sub
jecxz
adc
rol
sbb
in
and
push
push
into
pop
mov
or
mov
push
jmp
mov
nop
push
mov
pop
ss
or
dec
inc
icebp
add
and
mov
loop
inc
popa
test
pop
push
into
cltd
cli
jae
mov
and
push
call
in
and
stc
loope
fst
sub
out
test
sub
sti
mov
xor
mov
push
sti
mov
sbb
mov
imul
push
ficoml
lcall
jg
inc
adc
in
pop
dec
mov
jge
pushf
mov
xchg
shll
push
insb
pop
aaa
add
jg
sub
daa
outsl
lret
fiaddl
sub
aam
push
hlt
cmp
cmp
es
pushf
fisubrl
mov
je
sub
jmp
int3
inc
pop
lods
push
int
jne
gs
inc
test
inc
mov
cmpsb
or
loop
fiaddl
pop
test
push
mov
push
push
xchg
dec
push
push
adc
stos
xchg
and
aam
in
mov
adc
push
mov
push
test
add
cltd
lret
xchg
sbb
sub
out
cs
insl
mov
pushf
in
aas
jecxz
lods
in
fcompl
sub
mov
das
inc
sbb
xchg
dec
and
jmp
test
nop
pop
push
jnp
xchg
cs
aam
dec
dec
int3
xchg
addl
xor
push
pop
jge
mov
pop
cmc
mov
pop
neg
or
pop
insl
shl
cmpsb
jno
into
adc
in
pop
lcall
xlat
xor
roll
add
lret
jmp
mov
rolb
dec
push
shll
jno
and
xor
cmp
lahf
sbbb
vmwrite
loop
inc
or
cmpsb
icebp
inc
push
adc
enter
daa
sti
cmp
movsl
int
mov
add
test
dec
orl
mov
mov
dec
mov
ds
in
call
dec
in
jae
testl
cmpb
push
inc
inc
mov
rorl
ljmp
cmp
adc
mov
je
icebp
sahf
xchg
mov
test
adc
lahf
shr
into
push
mov
mov
xchg
push
inc
stos
sub
or
pop
xor
loop
clc
sbb
dec
xchg
pop
ljmp
ljmp
enter
and
pop
mov
push
inc
add
xor
stos
js
ret
js
push
imul
imul
dec
call
mov
or
imul
cmp
cmp
add
testb
inc
xor
lret
cmpsb
lcall
roll
xor
push
and
sub
lds
das
push
mov
fcmovnbe
mov
xchg
stos
xor
lea
fnstenv
clc
in
sub
mov
hlt
es
stc
jne
adcb
push
sub
dec
adcb
std
rol
rorb
push
push
mov
push
pop
enter
test
jns
test
movsb
push
pop
lods
sbb
push
mov
lret
mov
scas
jl
xchg
lcall
movl
cwtl
inc
andl
sbb
lea
mov
daa
mov
push
xlat
xchg
pusha
arpl
sub
mov
fidivrl
inc
inc
xchg
repnz
repnz
pop
dec
mov
jmp
mov
mov
xor
adc
cmp
mov
fisubrs
inc
stos
aas
lods
push
fbstp
sbb
sbb
filds
mov
stc
cld
pop
inc
jecxz
dec
jae
adc
cmpsb
inc
mov
xor
test
or
sti
jecxz
jns
add
dec
insl
xchg
out
inc
xchg
sub
lret
dec
jns
es
mov
xor
sbb
imul
iret
sbb
or
pop
popa
sbb
neg
imul
lock
xchg
mov
mov
jbe
scas
sub
xor
cmp
xchg
pusha
pop
stos
sahf
mov
roll
ja
adc
lahf
cmpsl
mov
and
scas
popa
sahf
or
sub
int
sub
mov
jle
jno
push
ret
rcr
inc
xor
cmp
aaa
xchg
cmp
cmp
pop
cmp
out
lea
movsb
dec
adc
mov
sar
fs
std
js
cmp
lahf
push
cwtl
nop
mov
int3
jmp
pop
outsl
xlat
gs
mov
lods
and
and
xor
inc
jecxz
jl
xor
sbb
lret
cmc
push
xchg
adc
cli
gs
mov
out
cmpsl
or
xchg
mov
lods
je
jbe
sub
push
bound
xlat
and
int3
lea
test
cltd
les
push
mov
aam
add
mov
scas
xchg
adc
ret
adc
lock
dec
mov
inc
or
add
inc
mov
push
out
and
cmp
inc
xor
pushf
sub
mov
dec
mov
cmp
mov
add
mov
sub
and
mov
sbb
xor
dec
mov
out
mov
push
icebp
add
out
push
movsl
jl
fnstsw
dec
mov
cmovae
or
xor
test
int3
je
or
mov
pop
xor
xchg
aam
and
mov
jns
iret
shl
orb
es
mov
xchg
test
jg
xchg
mov
insl
cmp
cltd
out
mov
jne
ret
xor
daa
and
mov
vpdpwssd
push
inc
shll
addl
adc
and
dec
lret
jmp
cmp
mov
fdivs
outsl
jle
outsl
jle
cmp
sarl
jno
jo
or
cmpsl
popf
shrb
ja
fcoml
pushl
ret
stos
iret
and
xor
rcl
dec
icebp
data16
lods
sbb
and
pusha
hlt
aaa
sub
cmp
jae
jbe
dec
les
inc
cwtl
fstpt
cmp
push
hlt
out
leave
imul
cmp
dec
cwtl
fsubrl
and
addr16
push
mov
jb
fstpl
dec
add
pop
jp
sub
rolb
loopew
ljmp
ficomps
xor
inc
ret
aaa
jmp
add
xchg
frstor
mov
scas
imulb
jp
inc
add
jb
fisttps
int
inc
hlt
push
ljmp
fcmovb
sbb
pop
aaa
mov
fcmovu
xor
and
or
push
xchg
rclb
shl
inc
inc
jg
fisubrs
daa
xchg
mov
lret
stos
in
and
cmpsb
adc
leave
test
push
pushf
les
scas
jns
push
sbbb
in
jb
out
sahf
mov
fdivrs
loop
jle
movsb
iret
sahf
jl
mov
insb
call
mov
int3
test
jno
loope
popa
pop
or
ds
cmp
jmp
mov
fsubrl
xor
xor
fimull
jg
icebp
xchg
inc
fisubl
inc
daa
sti
mov
ss
push
arpl
or
in
adc
mov
pop
loope
shlb
sar
outsb
scas
or
sbb
mov
jns
or
jecxz
or
ret
pop
test
mov
aas
sub
movb
jp
xchg
or
cltd
xchg
xor
xchg
mov
sub
push
outsb
and
ret
cmp
cltd
adc
mov
xor
mov
push
mov
mov
mov
mov
sbb
jns
imul
cmp
push
lcall
cltd
fimull
ljmp
imul
cmp
push
lcall
cltd
fimull
ljmp
imul
cmp
push
lcall
fimull
ljmp
imul
test
xchg
inc
jns
imul
cmp
or
adc
jecxz
fnstcw
test
mov
mov
jns
imul
cmp
push
stc
cwtl
jmp
enter
call
jns
imul
sbb
lret
fldenv
lahf
cld
mov
dec
xor
dec
sub
sbbl
mov
xorb
adc
popf
fsubrl
jns
jns
xor
movsb
inc
xchg
cld
orl
push
push
es
fmull
dec
repnz
or
shlb
ret
enter
push
filds
aaa
inc
push
xchg
sbb
inc
dec
hlt
pusha
jl
dec
insl
pop
dec
cmp
jmp
mov
test
pop
mov
cmpsb
clc
inc
mov
fcmovnb
sub
xor
dec
push
enter
mov
mov
lea
sbb
out
inc
lds
mov
jo
pusha
in
test
test
stc
lods
cltd
call
imul
cmp
push
stc
or
jo
cmpsb
leave
test
test
jp
outsb
adc
or
jle
pop
jnp
sbb
mov
lock
mov
mov
pushf
jmp
in
or
repz
jp
insb
add
or
mov
fstps
mov
cld
mov
cmp
jns
or
sbb
mov
cwtl
jmp
enter
call
jns
imul
cmp
push
stc
cwtl
jmp
enter
call
jns
inc
xorb
mov
aaa
stos
or
in
lret
jmp
addr16
pop
fimull
xchg
dec
cmc
or
mov
mov
push
shrl
adc
push
adc
mov
cli
aaa
pop
sbb
and
aas
in
inc
sbbl
gs
ret
or
adc
and
sbb
or
fisttps
pcmpeqb
push
test
sbb
daa
stos
bound
loope
mov
je
repnz
push
push
sub
sbb
sbb
ret
lcall
xchg
rcll
fstp
cmc
jo
pop
cmp
and
inc
mov
push
lret
mov
in
sub
cmp
add
leave
mov
in
xchg
push
scas
hlt
inc
mov
imul
xlat
fs
and
les
jle
sti
sti
idivb
lahf
inc
xchg
push
icebp
in
or
out
mov
je
pop
cmp
lds
pop
inc
add
mov
faddl
xchg
aad
sub
aad
stos
add
pop
mov
adc
ja
cmc
fcomps
mov
pushf
sub
xlat
rclb
pop
push
pop
fs
lahf
dec
filds
iret
mov
out
mov
push
push
dec
push
test
dec
aaa
shr
sti
pushf
push
xor
mov
mov
ja
mov
pushf
leave
add
mov
int3
ret
ss
nop
pop
mov
insb
sub
push
inc
cmp
jle
and
add
lods
sub
gs
shlb
je
in
or
and
in
or
sub
dec
mov
pop
out
mov
test
mov
xor
inc
or
or
stc
or
mov
cmp
imul
sbb
jecxz
sub
lods
sbb
dec
sbb
sub
dec
mov
in
cmp
sbb
cmp
es
mov
cmovne
and
stos
xorb
fcomi
shlb
fldcw
cmpsl
daa
xor
mov
mov
int
pop
fadd
inc
enter
push
sbb
adc
shll
xor
dec
int
jno
adc
in
add
xlat
and
sarb
xchg
test
xchg
addl
mov
loopne
lock
mov
push
cmp
mov
inc
lods
inc
jge
xor
out
xchg
push
movsl
jmp
push
rcll
push
mov
rcll
loopne
adc
fidivrs
andl
stos
loop
sub
lret
jbe
and
sub
add
test
ret
mov
dec
out
push
repz
ficomps
push
fidivs
dec
ficoms
lock
pushf
xchg
dec
push
cmpsb
data16
cli
je
cmp
adc
inc
xchg
testl
adcb
and
xchg
pop
push
dec
adc
lock
mov
push
movsb
push
nop
and
sahf
add
insl
bound
imul
xchg
mov
call
loop
lods
ret
mov
sub
and
xchg
stc
lds
loopne
xchg
in
aam
scas
sbb
jne
xor
lahf
pushf
fxch
and
dec
mov
enter
addb
jle
fwait
jle
sub
repz
sti
bound
inc
jmp
cltd
hlt
jb
pop
fcomp
add
popf
loope
jl
and
mov
mov
push
test
repnz
sbb
add
cmp
mov
test
adc
mov
lock
xor
ss
jns
insb
sbb
push
jnp
inc
pusha
xchg
inc
pushf
leave
daa
dec
mov
mov
mov
lds
and
outsb
ret
bound
mov
mov
loopne
and
xchg
jecxz
add
dec
jae
movsb
rcll
mov
xchg
pusha
test
test
call
inc
mov
mov
jp
adc
cmc
add
cmc
jae
add
stos
xchg
push
fstpt
out
mov
pop
add
enter
notb
xchg
out
push
scas
lock
int3
sbb
adc
icebp
lock
sbb
adc
dec
mov
jge
mov
xchg
pusha
daa
aas
jecxz
adc
lcall
fdivrp
jle
sbb
loopne
sub
scas
pop
pop
push
and
push
imul
sub
or
pop
mov
inc
cmp
lret
pop
dec
mov
aad
int3
test
in
cmp
sub
xchg
mov
lret
jne
insl
mov
lcall
push
ffreep
pop
push
lods
ja
push
sbb
sub
nop
xchg
jecxz
sbb
xchg
xchg
xorb
sub
cmc
rclb
in
mov
mov
insl
adc
mov
add
dec
mov
andl
sbb
roll
leave
fbld
ret
mov
mov
pop
pop
cmp
lea
cmp
sub
loopne
stos
and
movsl
insl
mov
lock
xor
lahf
daa
mov
mov
cli
fstl
fdivrp
dec
jp
pop
aam
sub
jne
mov
test
arpl
cmp
test
int3
mov
fidivs
in
aaa
repz
repz
mov
pop
aam
push
jmp
push
mov
ja
xorb
mov
lock
daa
lods
adc
adc
stos
cs
xor
xor
repnz
jae
dec
xchg
fldenv
sbb
les
pop
in
add
mov
inc
call
int
mov
ja
pop
push
xchg
xor
and
lods
pop
xor
jb
mov
loope
and
js
sbb
or
sbb
insb
pop
rcll
div
pop
es
insl
std
nop
scas
sbb
aas
jecxz
mov
cmp
push
add
inc
add
outsb
mov
dec
fwait
xchg
cmp
pushf
fmuls
dec
add
loopne
xlat
xchg
pushl
aas
adc
inc
lahf
add
pop
imul
daa
and
decl
ret
push
xchg
cld
adc
sbb
jl
aaa
jb
rolb
gs
xor
pop
push
add
mov
push
xchg
add
jg
push
popf
insl
mov
ficoml
or
dec
cmp
xor
pop
in
dec
incl
lret
adc
stos
in
and
mov
mov
pop
test
mov
lcall
test
xchg
adc
jge
fwait
insb
sub
adc
iret
jns
pop
mov
adc
xor
neg
in
push
mov
js
jl
adc
ja
sub
lods
mov
inc
lret
aas
sub
cmp
sub
cmp
daa
dec
fs
jns
sbb
movsl
ds
sbb
stos
in
mov
mov
add
and
bound
frstor
fs
out
popf
mov
dec
aad
lret
sbb
movsl
in
icebp
push
push
out
outsl
fcoms
ss
bound
test
shl
mov
mov
push
push
mov
dec
outsl
sub
faddl
pop
cmp
pop
or
rcrb
int
or
pop
les
gs
adc
pop
xor
mov
inc
jmp
mov
fistps
mov
in
imul
add
push
xchg
mov
jno
stc
stos
lahf
in
daa
pushf
daa
xor
push
ds
and
ds
sarb
fsub
mov
shr
ret
push
std
inc
std
in
lods
mov
sbb
ljmp
mov
jecxz
xchg
arpl
cs
pop
jns
push
es
ficompl
push
mov
les
lret
pusha
xor
shrl
cmp
mov
sub
push
icebp
xchg
cmp
sahf
lret
push
sar
mov
cmp
nop
out
arpl
ficoml
pusha
ret
sbb
jmp
mov
adc
sbb
clc
pop
pop
ss
sbb
mov
aam
test
fstpl
cmp
adc
dec
inc
jge
add
cltd
add
dec
scas
cmp
cmovp
xor
dec
and
xchg
pop
cmp
jp
xor
xor
loop
sbb
or
pop
int3
pushf
test
mov
mov
push
mov
sbb
popf
hlt
jle
mov
movsl
lahf
add
xor
insl
and
movzbl
pusha
in
sbb
loop
or
ret
inc
lds
stos
out
sub
sahf
shl
clc
add
repz
add
and
jge
or
movl
adc
test
jge
mov
imul
ljmp
jnp
aas
inc
dec
int
sarb
int
movsl
bswap
inc
pop
in
int
fidivrl
imul
lods
sbb
lods
push
loope
lock
dec
fidivl
ret
mov
in
mov
inc
imul
cwtl
cmpsl
xchg
daa
je
sbb
xchg
fwait
das
sbb
ret
mov
cmpsl
inc
es
fmuls
pop
pop
cmpsb
xchg
test
cmp
jb
aad
pop
dec
sub
inc
test
cmp
mov
popa
test
mov
shll
mov
xor
mov
mov
mov
pop
or
call
or
leave
das
in
add
mov
in
mov
xchg
daa
test
clc
cwtl
jne
pop
js
mov
dec
gs
test
mov
lea
lret
stos
jbe
jl
cwtl
xchg
sub
int
mov
mov
jnp
pusha
dec
add
mov
cwtl
addl
mov
mov
sub
bound
aam
call
std
xlat
xchg
fs
adc
sbb
into
lret
pop
mov
mov
pushf
fldcw
idivl
and
dec
rol
bound
mov
cmp
xchg
push
jb
adc
xchg
push
mov
fistl
mov
iret
lret
adc
xor
xor
dec
push
js
sbb
lock
enter
adc
xchg
sub
js
in
sbb
dec
sub
mov
loope
sub
pop
pop
xor
repnz
cmc
inc
out
adc
pop
mov
xchg
xor
repnz
cld
loop
nop
and
xchg
mov
cltd
scas
sahf
dec
sahf
xor
inc
fucomp
xor
and
addl
sti
les
popa
sbb
cmpl
mov
rorl
add
pop
lret
add
popf
sbb
or
scas
idivb
dec
lea
mov
jnp
adc
push
lods
sbb
ret
mov
adc
adc
cmpsb
cmp
sub
or
xor
jb
imul
dec
mov
push
mov
bound
xchg
fdivs
xchg
xor
push
jo
xchg
pop
jb
lret
sub
xchg
test
and
repz
sbb
cmpsb
cs
insb
xchg
mov
mov
icebp
jmp
insl
loop
mov
imul
popa
imul
in
ja
movsl
xchg
cs
and
cld
mov
andl
lea
fwait
xlat
xor
aad
data16
out
jmp
lcall
out
fnstcw
testb
or
sub
mov
cmp
push
rorb
xchg
or
and
cmpl
fimull
push
enter
imul
lret
lcall
sti
adc
cmp
test
push
movsl
cmpsl
pushf
sub
add
and
mov
pop
pushf
fdivrp
jbe
dec
in
out
sub
enter
mov
ljmp
or
cli
sub
adc
shll
test
lahf
add
into
push
into
into
mov
cmc
stos
pop
add
adc
dec
add
mov
inc
sbb
push
inc
shll
jge
jmp
aaa
pop
pop
push
inc
mov
test
aaa
mov
cld
xchg
mov
push
nopl
or
nop
jnp
ljmp
psllq
mov
cmp
aam
arpl
sbbb
lds
fs
mov
adc
mov
mov
mov
or
mov
cmp
dec
pop
dec
xor
sub
jp
inc
cli
pusha
add
test
fisubrl
cmp
push
pop
arpl
loop
ds
dec
rorl
cmp
test
shl
pop
xor
jne
xchg
fisttpl
pushl
cwtl
mov
rcrl
pop
clc
lea
or
sub
in
cmpsb
dec
pop
add
mov
pusha
pop
push
imul
xor
dec
xor
stos
rcl
js
out
enter
fcoms
add
pop
arpl
fucomi
mov
int
adc
dec
inc
push
jmp
mov
bound
jno
int
in
and
dec
or
jge
sbbl
xlat
push
cs
loopne
sti
jae
mov
aad
xor
dec
bt
in
pop
lds
icebp
jno
xchg
ret
movsl
flds
mov
jmp
xchg
cmpsl
dec
mov
and
rcl
ret
cwtl
xchg
dec
loope
sbb
addr16
mov
pop
sub
cmpsb
and
shll
fcoms
adc
cmpb
or
js
dec
and
jle
loop
jno
rorl
mov
test
je
test
stc
scas
scas
dec
push
out
sahf
je
in
in
pop
pop
mov
dec
inc
pop
leave
cmp
pop
into
cmp
push
push
or
xchg
cmp
mov
and
out
xor
sbb
out
and
fimuls
xchg
ret
aas
cmp
dec
std
arpl
popa
lock
mov
push
cmp
adc
int
jl
add
mov
dec
jbe
adc
jmp
ja
andb
test
pop
stc
inc
mov
dec
in
aam
or
decl
lods
and
jae
decl
fisubs
gs
cmp
imul
cmc
pop
push
push
sub
and
add
fadds
pop
andl
xchg
les
push
xchg
push
mov
sub
jne
or
jmp
pop
insl
push
inc
xchg
mov
call
inc
mov
sbb
xchg
cmpsl
ss
fdivr
out
push
clc
sbb
sbb
sub
jg
dec
icebp
ss
mov
stc
sub
fsubrl
mov
and
aam
std
jg
es
jae
and
repnz
shll
mov
out
mov
mov
or
incl
es
pop
mov
adc
dec
mov
add
push
add
add
sbb
push
pop
add
sub
popa
cld
mov
jecxz
push
cld
and
test
mov
je
sbb
xor
jmp
push
andb
daa
out
mov
xchg
imul
cmp
scas
mov
push
lcall
movsb
pusha
es
or
jg
fsubrl
lock
lock
cmp
mov
push
and
clc
fwait
loop
and
push
push
stos
push
cld
sbb
outsl
pop
jb
inc
push
mov
xchg
pushf
mov
scas
mov
cmp
mov
test
inc
aad
stc
pop
pop
mov
mov
cmp
sub
inc
jmp
push
popa
into
hlt
repz
clc
pop
repz
sub
push
or
push
sbb
xchg
and
repz
push
or
push
jge
sysexit
and
insb
jecxz
pop
popf
and
push
jp
xchg
lods
scas
and
clc
xlat
mov
bound
fistpll
popa
push
xchg
or
push
mov
mov
add
jge
out
sub
add
cmc
repnz
mov
std
insl
cld
lds
mov
jl,pn
push
movl
repz
imulb
aas
call
or
sahf
mov
iret
jp
in
push
xchg
ja
mov
cmc
sub
mov
std
mov
lret
std
sahf
add
pop
or
popa
in
jo
or
sub
mov
or
mov
data16
or
push
lret
insl
call
xor
dec
ja
fnsave
pop
inc
push
nop
jb
jmp
test
adcb
repnz
and
scas
dec
std
pop
xor
popf
fisubrs
sbb
bnd
popa
and
leave
fiadds
int
loopne
jge
sub
int
adc
inc
pop
fwait
negb
inc
int3
cmp
cmp
fst
fdivr
imul
test
les
fcomps
jns
std
xchg
stc
inc
and
push
shl
aad
data16
push
sub
dec
and
mov
out
mov
js
pop
aas
jecxz
push
subl
stos
lahf
shl
xchg
test
outsl
jb
int
or
add
les
sahf
adcl
mov
lret
lods
xchg
and
and
sbb
lock
subl
arpl
ficoml
stos
and
jb
ss
popf
mov
je
ss
imul
pop
jns
shlb
stos
clc
mov
outsb
jo
cmp
sub
popf
add
out
pop
adc
shlb
cmp
inc
outsb
mov
je
sar
js
cmp
rcrb
mov
popa
clc
push
and
xlat
xchg
sbb
in
enter
leave
inc
stos
mov
ret
dec
cld
xor
lock
in
sbb
in
dec
jle
leave
jnp
push
jbe
sub
mov
add
xor
mov
lods
imul
sub
xor
std
and
xchg
popa
mov
jnp
daa
xchg
inc
adc
inc
lea
or
popf
fdiv
cmpsb
xor
and
adc
mov
xchg
sbb
cmc
xchg
test
or
or
push
rolb
orl
or
movsb
pop
xor
es
repz
lahf
aaa
loope
out
into
in
push
out
mov
dec
shl
cld
in
mov
ja
dec
js
and
xor
xor
dec
dec
mov
inc
aas
and
or
in
push
fcmovnb
das
adc
mov
add
and
adc
bound
popa
popa
sahf
cmp
sub
mov
jno
out
and
jb
loope
ljmp
inc
cmp
subl
pop
iret
outsl
xchg
or
test
int
mov
sti
or
stc
dec
adc
inc
fcmovu
mov
imul
xchg
jne
popa
lret
pop
xchg
bound
scas
cmpsb
mov
sub
outsl
sub
subb
mov
dec
mov
fldt
push
mov
pop
cmp
mov
in
mov
add
adc
mov
test
loopne
xor
pop
xor
mov
push
lcall
cltd
pop
ss
and
mov
std
ret
lret
arpl
adc
xchg
pop
push
int3
fwait
pop
and
xchg
sub
out
ss
fs
cmpsl
add
adc
jecxz
adc
xchg
jns
stos
call
push
or
testb
xlat
repnz
mov
xchg
fildl
call
clc
jb
cmp
movsl
jb
mov
in
pushf
mov
sbb
jmp
mov
add
push
ljmp
sar
repnz
notl
xchg
movsb
not
out
push
pushf
dec
jp
rcr
xchg
inc
out
hlt
fs
arpl
push
call
enter
rolb
sbb
fistpl
add
mov
ljmp
push
push
pop
movsb
mov
and
xchg
mov
movsb
in
push
mov
fs
dec
fsubrp
dec
sub
lock
test
mov
dec
inc
cmp
fmul
cld
xchg
insl
sbb
popf
xor
roll
mov
lock
mov
insl
movsb
jge
jnp
jg
cmp
cmp
cmp
and
add
xor
sbb
adc
pop
lea
in
outsl
repz
dec
xchg
lea
or
lods
jp
dec
int3
es
cli
mov
xchg
mov
dec
adc
sub
inc
sub
movsb
shll
into
pusha
cmp
push
shr
lods
push
int
sbb
mov
test
or
mov
pushf
scas
cmpsb
pop
jb
and
pop
mov
repz
mov
inc
inc
mov
xor
imul
leave
fisubrl
push
ret
insl
and
and
popf
sbb
push
xor
mov
push
xor
stos
pop
jle
fidivrl
loopne
jne
xor
ret
lcall
mov
lods
sub
sub
dec
std
movsl
les
dec
pop
pop
inc
push
adc
cmpsl
mov
jns
push
jl
cwtl
hlt
add
das
pop
out
je
cmp
imul
pop
sub
js
mov
cwtl
jmp
enter
call
jns
imul
cmp
push
stc
cwtl
jmp
enter
call
jns
imul
cmp
sbb
mov
cwtl
jmp
enter
in
cltd
enter
xor
mov
cmp
push
stc
addr16
add
mov
push
pop
popw
jbe
das
dec
sub
loop
cmp
jae
mov
add
add
pop
add
push
add
add
or
faddl
jl
roll
xor
aam
enter
faddl
or
add
add
pop
add
add
add
add
add
mov
add
add
add
sub
adc
fadds
out
add
add
jbe
aam
adc
add
movsl
add
add
ret
add
add
add
arpl
ltr
add
add
test
sub
mov
xchg
add
add
add
add
add
add
add
adc
clc
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
es
add
roll
movl
les
roll
mov
add
fadds
add
add
add
mov
add
add
sub
sbb
add
add
add
add
add
add
cmp
add
mov
add
adc
add
add
add
add
add
add
dec
add
add
add
xor
sub
mov
xchg
add
add
add
add
add
pop
add
add
add
add
cmpsl
add
fiadds
jnp
xlat
add
add
pop
add
add
add
add
movb
add
add
aaa
add
add
add
add
add
add
add
add
add
push
movsb
add
add
add
fildl
adc
add
sub
sub
sub
or
add
add
mov
add
add
add
add
add
movsb
add
mov
add
mov
add
add
add
cmp
cs
add
add
add
add
sub
add
flds
insl
add
add
insl
add
add
jne
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
addb
add
add
add
add
cmp
sub
cmp
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
popa
add
add
add
add
leave
add
add
jmp
add
rolb
xchg
add
out
add
add
add
add
fildl
add
add
push
add
add
add
add
fildl
push
add
aaa
add
add
pop
add
add
ds
add
add
sahf
add
xor
movb
add
add
add
add
cli
add
add
push
add
push
add
add
add
add
add
imul
add
add
add
mov
add
add
sub
sub
es
add
add
add
add
add
add
add
add
add
pop
add
mov
push
gs
push
adc
sub
sbb
sub
inc
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
cmpsb
stos
nop
mov
das
adc
imul
push
xchg
and
jmp
fadds
leave
dec
stc
aam
lcall
enter
nop
or
sub
imul
stos
mov
mov
mov
adc
or
movsl
int3
push
xchg
xor
sbb
out
or
adc
jbe
pop
push
pop
cmp
xchg
or
push
idivb
loop
xchg
and
in
or
ficompl
lods
xchg
outsl
xor
test
mov
outsl
ret
daa
mov
iret
dec
sbb
lods
mov
or
xlat
add
in
filds
addr16
insl
mov
sbb
pop
fiaddl
popa
cmpsb
sbb
or
add
je
add
inc
or
insl
addr16
inc
mov
cli
xchg
sub
fmull
cmp
jne
add
mov
andl
sbb
in
outsb
fnstcw
sub
sub
shl
ffreep
test
cmp
dec
addr16
jp
mov
xchg
in
sbb
xor
aam
pop
pushf
add
adc
andl
stos
in
mov
or
mov
dec
adc
loope
call
inc
scas
xchg
addr16
lods
inc
sbb
inc
xchg
cmpsl
cmp
adc
dec
add
scas
push
xor
test
loopne
sub
mov
pop
and
mov
insb
dec
je
mov
cmp
xchg
clc
in
jbe
sub
ja
insl
push
jl
xadd
mov
dec
mov
mov
sub
mov
out
lcall
jne
fdivrp
in
mov
dec
test
pop
stc
test
jle
mov
add
adc
or
out
outsl
lds
mov
aam
xchg
add
out
sarl
mov
fldenv
dec
jns
sahf
pop
mov
out
mov
cmp
testb
cmp
scas
and
xlat
and
les
adc
mov
fdivrl
lea
sete
lcall
das
outsl
mulb
mov
inc
imul
jge
bnd
test
add
enter
add
ja
jg
in
imul
adc
fcoms
mov
mov
cmp
lods
loope
jle
jbe
in
lret
dec
and
push
mov
jecxz
andb
xchg
push
fcmove
xchg
jnp
xchg
jmp
sbb
hlt
shl
cmpsb
pop
jnp
repnz
sahf
xchg
popf
leave
js
test
outsb
mov
dec
lods
mov
xchg
ljmp
sub
mov
fdivs
cmpsl
xchg
jmp
sub
mov
insb
mov
cmp
jns
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
