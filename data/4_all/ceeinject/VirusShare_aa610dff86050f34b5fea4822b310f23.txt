call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
nop
sbb
mov
sub
pop
int
pop
pop
jecxz
xor
inc
and
stc
jae
negl
orl
cmp
dec
repz
inc
adc
and
jae
arpl
sub
jnp
int
mov
pop
ja
and
cmp
aas
std
pop
iret
dec
mov
lret
push
ret
mov
cli
enter
xor
sti
scas
inc
push
add
ja
addr16
jg
xor
std
dec
inc
ret
outsb
xchg
in
ja
mov
lods
int3
pop
xchg
jae
pushf
movsb
insl
jno
push
pusha
mov
sbb
shlb
inc
cwtl
add
inc
sub
xor
dec
sbb
or
dec
sub
jecxz
adc
imul
push
arpl
xchg
les
das
push
dec
js
push
fidivs
pop
pop
push
mov
fmull
out
divb
push
sub
and
pop
fnstcw
mov
mov
pusha
or
aad
mov
mov
dec
repz
sti
aad
cltd
and
adc
inc
loope
sbb
data16
push
fildl
cld
lods
and
or
cs
push
stc
push
sbb
lret
sub
sbb
out
rorl
mov
adc
cld
xor
pop
cltd
sub
and
rclb
inc
adcb
imul
mov
inc
leave
jae
arpl
xchg
sbb
sub
pop
ret
dec
repz
imul
mov
inc
leave
jae
arpl
xchg
sbb
sbb
sub
rolb
jp
lock
sub
cmp
stos
mov
inc
int3
fcomps
jl
inc
mov
aad
sub
stos
pop
repnz
mov
mov
or
movsb
sbb
xor
aaa
and
jbe
and
iret
faddl
inc
testb
pop
push
fldenv
jnp
or
cmp
add
jbe
imul
nop
daa
movsl
jbe
and
mov
mov
jae
or
add
scas
repnz
iret
xchg
fwait
pop
mov
mov
and
adc
jg
adc
popa
xor
jo
fidivs
jns
adc
adc
push
sbb
outsb
pop
xchg
fidivs
lret
stc
adc
ret
call
pop
and
sbb
sub
out
jo
inc
rorb
test
cwtl
in
loopne
inc
push
fwait
sbb
outsb
add
test
xlat
and
scas
mov
fisttps
dec
fmul
mov
jge
imul
or
ret
cmp
fbstp
sti
dec
pop
movsl
mov
hlt
jp
out
dec
push
dec
orl
lahf
stos
jbe
pop
ret
addb
fiaddl
mov
jns
ds
jl
push
push
scas
or
mov
xor
dec
or
test
aad
cmpsb
insb
push
push
inc
loope
mov
inc
fldl
je
std
cmpsb
xchg
daa
or
insb
insl
pushf
movsl
arpl
inc
cmp
xchg
cmp
fsubl
sub
mov
insb
aas
adc
cmp
adc
out
or
or
or
or
mov
icebp
inc
icebp
and
and
mov
jo
jecxz
icebp
pop
push
rclb
popf
scas
inc
sbb
jbe
jae
mov
cmpsb
add
mov
int
mov
out
mov
hlt
repz
stc
xor
sbb
xor
ds
cld
faddl
lock
push
out
push
inc
or
dec
cwtl
adc
xor
cs
inc
cmp
cmpl
sbb
repnz
sub
and
insl
cmp
gs
xor
cmp
push
fcmove
ret
cmp
outsl
and
pop
mov
sub
pop
pop
jge
and
aas
push
shlb
mov
lds
xor
icebp
dec
lock
pushf
jle
jae
cli
stc
mov
or
push
add
push
mov
or
outsb
fs
into
sahf
daa
imul
mov
test
xchg
insb
adc
sbb
inc
dec
adc
push
cmp
in
and
dec
or
inc
data16
jg
push
mov
xchg
outsl
mov
push
fs
test
inc
xchg
adc
pop
xchg
andl
dec
jnp
sarb
inc
jae
sub
jmp
sbb
adc
fsubr
mov
pop
sbb
ret
leave
cmp
mov
push
addr16
xchg
cmp
and
ds
movsl
and
xchg
in
mov
movsb
incb
xor
mov
inc
js
imul
ret
jle
outsl
sbb
sub
cmp
push
cmc
pop
call
jnp
cs
lea
inc
inc
mov
and
into
imul
stc
iret
cwtl
ret
push
popa
insb
cmp
jge
lcall
pop
adcl
and
movsl
data16
cmpsl
movb
lods
inc
addb
push
mov
dec
js
or
mov
call
xor
insb
mov
cli
mov
ds
pop
push
jo
test
pop
inc
and
ds
cmc
add
sbbl
mov
ret
mov
repz
push
popf
lcall
cmp
out
mov
mov
sbb
sbb
xchg
sti
pushf
out
aaa
xchg
jge
or
je
into
jge
pushf
jmp
inc
lods
aam
jge
loope
dec
sub
add
dec
push
mov
mov
sti
adcl
and
add
or
xchg
adc
mov
mov
iret
inc
pushf
cmp
shr
hlt
sub
rclb
rcl
test
jnp
test
cld
popa
dec
out
push
imul
dec
aaa
call
pop
fistpl
jb
stos
gs
sub
and
push
inc
scas
pop
lods
pop
iret
cltd
mov
push
lahf
jg
daa
clc
adc
mov
js
mov
pusha
sbb
outsb
xchg
and
div
adc
shll
dec
ss
jl
in
stc
xchg
dec
adcb
xchg
cmp
mov
out
aaa
dec
int3
mov
pop
fucomip
and
adc
add
and
fisubl
add
mov
shrl
add
sub
sbb
pushf
in
mov
mov
push
scas
ror
jb
addr16
loopne
push
out
inc
or
scas
jnp
xchg
in
xor
add
or
pop
divps
cmp
cltd
or
daa
xor
pop
bound
mov
lret
fisubl
lea
lret
mov
jae
mov
test
out
ljmp
orb
shll
sbb
lods
jle
test
pop
push
inc
pop
xor
inc
ret
outsl
jge
jns
out
ja
loop
dec
les
or
incl
push
add
test
pop
or
mov
push
dec
popf
cmp
lods
data16
sub
enter
pop
dec
gs
js
popf
mov
in
rorl
jmp
add
fimull
adc
adc
mov
cmp
out
mov
movsl
lods
jb
lods
nop
push
sub
icebp
adc
sub
dec
add
jae
in
cmc
inc
mov
add
jns
ljmp
ret
js
and
bound
mov
and
mov
int3
fs
mov
sbb
mov
mov
cmc
push
mov
cmp
cld
scas
orb
and
pop
ss
push
sbb
clc
fcoml
fstl
pop
dec
into
aaa
outsl
inc
shr
jbe
cltd
pop
sti
lahf
inc
mov
adc
ftst
inc
into
or
sahf
aam
jge,pt
ret
cmpsl
mov
pushf
jnp
adc
pmaddwd
xchg
add
adc
call
adc
enter
cmpsb
sarl
inc
lds
inc
cltd
sub
dec
inc
rcrl
dec
or
iret
insb
add
mov
adc
pop
test
imul
add
mov
add
inc
pusha
sub
addr16
ret
fdivl
and
and
pop
pop
fcomi
fstsw
bound
lcall
test
mov
mov
sbb
inc
repnz
sub
ljmp
inc
mov
loope
bound
dec
dec
lahf
icebp
pop
adc
lods
or
mov
shrl
bound
int
push
std
xchg
jmp
cmp
cmp
dec
jnp
cmp
dec
mov
cvtps2pd
rcrl
jp
xor
dec
dec
mov
mov
fldenv
mov
mov
std
xchg
inc
test
scas
fstpt
sar
inc
jle
loopne
outsl
jl
fsub
jae
cltd
mov
push
lea
mov
xchg
pushf
pop
xlat
mov
push
pushf
int
fs
and
ret
and
scas
push
pushf
pushf
das
mov
dec
stos
pop
xor
xchg
sbb
stos
inc
rorl
jl
and
push
popf
ljmp
mov
dec
sbb
jne
inc
push
inc
imul
je
lock
repz
push
xor
out
push
mov
loopne
mov
xchg
adc
adc
pop
mov
fiadds
dec
rcr
mov
pop
fpatan
movsl
dec
fstpt
sbb
mov
push
sbb
push
pop
hlt
mov
inc
adc
inc
ror
movsb
inc
ja
js
adc
ja
sub
pop
add
fs
jp
addr16
xchg
pusha
and
sub
popf
jl
movsb
fdiv
jb
insb
sti
cmpsl
outsl
jno
or
pop
xlat
int3
jmp
xchg
test
dec
jns
outsb
inc
addr16
and
mov
mov
mov
cmp
xchg
js
cwtl
mov
inc
shll
pop
dec
lods
js
mov
sub
adc
in
sub
and
mov
push
fistl
enter
dec
cli
cmpsb
sub
add
cmpb
jns
xchg
xor
adc
push
push
sub
inc
dec
leave
dec
adcl
lods
sbb
mov
inc
adc
xor
ret
loopne
jmp
mov
pop
mov
inc
sbb
sti
and
fimull
daa
xor
cli
idiv
jmp
out
cmp
enter
dec
xchg
popa
rorb
lods
jns
mov
jg
ret
faddl
jge
mov
mov
out
subl
sbb
rcll
in
sbb
jecxz
mov
shlb
mov
jge
push
ds
xchg
jmp
pop
mov
bnd
andb
loopne
dec
adcb
aam
pop
sbb
je
js
push
mov
xor
lret
jno
in
das
mov
dec
jns
jle
mov
cmpsb
popa
jbe
cmp
rorb
xor
add
cmp
mov
scas
xchg
adc
aam
stc
test
leave
xchg
xor
mov
pop
mov
in
xchg
pusha
inc
or
push
lret
aam
cli
or
movsl
pop
shrb
call
ret
lret
add
jno
mov
sbb
out
cmp
std
xor
adc
sahf
mov
int
xlat
fwait
outsl
sub
xor
idiv
data16
cmp
leave
pop
sbb
loopne
jmp
push
or
scas
jmp
dec
nop
les
fldenv
cld
xor
xchg
and
mov
and
sub
test
xor
lret
jns
fidivs
add
mov
aam
push
sbb
push
pop
mov
mov
cmpsb
gs
shlb
adc
xchg
xor
nop
sbb
fnstsw
fldt
and
sub
mov
adcl
jge
repnz
stc
add
mov
aad
testl
mov
in
and
std
xor
xchg
jmp
or
sub
fisubl
sub
mov
inc
inc
cmp
mov
test
cmp
in
xor
stos
jge
dec
jno
cmpsl
jne
xlat
mov
cli
cmp
mov
xor
xchg
dec
dec
incl
roll
rorb
pop
pusha
data16
sbb
mov
es
mov
in
test
sbb
arpl
jmp
jno
adc
cmp
pop
test
jbe
stos
mov
fninit
sbb
scas
pop
ficomps
push
call
and
mov
sbb
aas
cmc
inc
divb
add
sub
sbb
mov
sbb
push
out
shrl
int
xor
push
in
shll
xlat
mov
mov
test
mov
add
lods
xor
fnsave
or
test
lock
call
in
mov
xchg
adc
mov
push
sbb
daa
mov
xchg
aaa
xor
and
das
cmp
push
pop
and
mul
sub
cli
xchg
pop
iret
aas
push
fcompp
jle
movsl
xorb
out
sbb
sub
loopne
divb
rclb
push
jb
adc
les
es
rcrl
repnz
inc
sti
fisubs
dec
xchg
mov
mov
stc
icebp
add
push
jge
add
lods
in
xor
arpl
cmp
xor
in
test
enter
ljmp
div
je
hlt
imul
popf
addr16
xor
ja
jb
jns
and
xchg
cltd
in
mov
or
xchg
jae
scas
xor
int3
sahf
js
sub
out
or
pop
mov
stos
icebp
xor
mov
in
mov
cmc
jnp
jp
push
sbb
orl
mov
mov
subb
lds
scas
or
push
push
xchg
dec
mov
test
test
mov
dec
mov
xor
push
xchg
cmc
in
pop
imul
mov
in
and
mov
and
das
pushl
popa
fildll
popa
mov
jns
aas
push
and
movsb
xor
cmp
mov
fs
push
out
test
clc
and
nop
sub
inc
dec
xchg
mov
pop
fsubl
cwtl
in
iret
xchg
xchg
push
add
sub
dec
icebp
lds
les
fldcw
aam
add
sbb
imul
ds
pop
ds
and
xor
rcr
mov
ret
jge
push
pusha
xchg
and
pop
push
shlb
mov
fldt
popf
xor
xchg
cltd
es
fildl
outsb
cmpsb
cmp
pop
mov
mov
inc
aaa
clc
int
stos
mul
pusha
mov
xchg
cmpsb
test
mov
dec
pushf
fldenv
sub
xabort
jae
aas
inc
icebp
shl
cwtl
loope,pt
scas
push
int3
lea
pop
mov
and
or
aam
sub
insb
xchg
sbb
shr
jbe
cs
sti
neg
mov
mov
aaa
sbb
popa
mov
xor
jbe
insl
mov
dec
sahf
cmpsl
hlt
out
pushf
sub
sub
insl
cs
fcmovnu
stos
lds
gs
in
cmp
jns
out
jge
mov
jg
test
dec
ljmp
push
jno
daa
dec
push
data16
or
popa
dec
add
mov
push
or
mov
inc
aad
inc
jno
gs
pop
sbb
daa
aad
cmp
icebp
mov
jle
dec
andl
stos
jmp
or
push
rolb
cmp
into
sub
ret
and
ret
jp
push
outsl
out
js
das
stc
mov
adc
inc
sub
imul
jmp
rcll
sbb
push
add
dec
dec
repnz
push
pop
in
jg
addr16
jno
sbbb
jae
repz
fcom
fmuls
mov
iret
js
mov
jnp
mov
add
mov
pushfw
test
loop
cmp
ja
repnz
add
aaa
jp
sbb
jp
push
jmp
xor
xchg
test
sub
test
out
mov
ds
and
push
insb
sbb
iret
mov
inc
cli
leave
out
testl
add
jp
and
daa
or
push
test
and
xchg
fldl
test
adc
imul
mov
add
aaa
mov
std
lds
jmp
xorb
mov
sub
ss
in
cmpsb
das
popf
pop
add
push
push
in
sbb
adc
data16
add
shr
mov
mov
push
jge
push
jp
fbld
inc
cmove
loope
fadds
clc
pop
flds
repnz
inc
sub
cmp
dec
or
xchg
test
test
or
sub
mov
lahf
pop
xor
cmp
fisttps
les
retw
mov
lahf
inc
into
cmp
daa
xchg
mov
lcall
xor
mov
pop
xor
mov
push
push
cmp
mov
push
pop
jno
push
inc
add
lods
and
rcrl
jl
add
int
movsl
fimuls
xchg
mov
jmp
and
adc
int
in
int3
jmp
pusha
fstps
sbb
insl
sbb
adc
cltd
jecxz
fwait
or
dec
mov
inc
lods
mov
jno
fnstenv
stos
jo
outsb
sbb
arpl
push
sub
daa
test
or
stc
inc
xor
mov
fs
push
push
ljmp
or
mov
xor
sub
pop
nop
outsl
jno
and
das
or
inc
jp
ljmp
pop
cltd
xor
jae
shl
roll
fs
adc
add
sub
aas
xlat
cli
sub
xchg
test
xchg
leave
std
cmp
inc
sbb
mov
mov
iret
int
inc
loopne
mov
add
xchg
into
pushf
or
movsl
jae
inc
fmull
jnp
cmpl
mov
ficoml
adc
inc
pop
mov
jne
lea
push
or
ss
lds
adc
cld
sub
cltd
dec
jl
insb
xchg
push
lea
test
add
dec
or
push
out
test
gs
sbb
jge
jl
lds
dec
imul
andb
mov
mov
add
je
ret
fwait
cltd
mov
push
cltd
inc
or
enter
ret
arpl
cli
xor
cli
push
mov
into
xor
pop
push
jmp
add
inc
out
ja
pop
push
pop
and
notb
inc
clc
xor
in
ds
cmp
mov
in
push
or
iret
mov
dec
jbe
daa
js
mov
mov
test
shlb
aam
test
clc
mov
cmp
mov
push
aad
mov
jl
mov
iret
mov
dec
jno
or
mov
test
test
test
xchg
fbld
dec
mov
pop
aaa
loope
dec
mov
icebp
push
jmp
adc
jge
and
es
add
pop
aas
lahf
call
xor
fcompl
add
std
lret
je
xorl
arpl
pop
jnp
nop
cmp
sbb
and
push
adc
nop
js
fistpll
cmp
sbb
inc
xchg
jle
lds
nop
push
std
xor
adc
xchg
adc
mov
add
popf
mov
pop
stos
cmp
hlt
inc
jno
mov
and
imul
std
dec
addb
nop
testb
sub
fsubrl
fmul
lds
cmpsb
mov
test
push
ret
sub
stc
nop
push
push
xor
xchg
xchg
je
cmpsb
push
roll
xor
and
xlat
es
aas
jle,pt
aam
mov
jb
pop
lds
dec
pop
arpl
xrelease
mov
or
push
sub
mov
mov
iret
add
and
xchg
and
cmp
fldt
stos
jl
mov
push
pop
hlt
mov
add
sub
or
scas
or
push
imul
movsl
mov
xlat
mov
mov
jae
jnp
in
mov
outsl
les
fcoms
xchg
fldenv
out
jns
or
stos
and
inc
push
stos
in
fwait
mov
pxor
fcoml
pushf
outsl
adc
aad
rcr
dec
repz
es
roll
mov
jnp
jmp
lock
jge
lods
mov
ds
lea
mov
dec
das
xchg
or
sti
mov
ret
pop
dec
dec
xchg
or
or
mov
addr16
xor
out
and
jp
push
lret
mov
dec
call
jmp
ret
mov
cmp
stos
sbb
cmp
mov
cmp
lock
jb
stos
in
sub
adc
int
subb
and
xor
stos
out
add
dec
ret
addb
dec
pop
sub
jns
push
mov
outsl
push
popa
loop
rcll
imul
in
stos
inc
add
aad
sbb
dec
rcrl
add
mov
pop
inc
cmp
movsl
jge
repnz
into
jae
jb
xchg
icebp
or
and
sbb
mov
addr16
dec
or
add
inc
add
mov
add
bound
push
xchg
xor
addb
jnp
ss
test
ret
adc
sbb
dec
add
mov
pusha
lock
sbb
imul
xlat
xchg
mov
testl
ret
cld
ret
mov
jnp
jl
mov
repnz
insb
adc
outsl
dec
mov
lea
jmp
inc
pop
fcmovne
cmp
bound
xor
jp
loopne
stos
ret
daa
sbb
jecxz
pop
cmp
jbe
and
nop
test
pop
cmpsb
mov
xor
stos
in
xchg
add
push
cmpsl
stc
loopne
xchg
data16
into
into
mov
xor
stos
push
or
dec
pop
cmp
cmpsb
mov
insl
inc
jmp
or
jne
adc
cmpsb
add
sbb
pushw
jae
fsubs
sub
mov
testb
mov
mov
fistpl
popf
mov
sbb
lods
push
xchg
xchg
je
dec
push
jecxz
enter
mov
jnp
dec
repz
pusha
xchg
xchg
cmp
mov
sbb
dec
adc
push
add
lods
rol
xor
xchg
mov
push
incl
jg
pop
inc
adc
rcrl
rcl
enter
icebp
cmc
addr16
aas
jl
xor
jmp
scas
or
sub
hlt
cmp
sub
pop
ret
dec
repz
imul
mov
inc
leave
jae
arpl
xchg
sbb
sub
pop
ret
dec
repz
imul
mov
inc
leave
jae
arpl
xchg
sbb
mov
and
jge
imul
mov
push
leave
jae
mov
jmp
pop
rorl
stc
arpl
cltd
mov
lret
mov
sbbl
or
add
push
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
test
xchg
push
movsb
ss
or
cmpsb
sub
mov
xor
dec
divb
push
xchg
push
movsb
ss
les
push
in
hlt
adc
adc
and
xor
test
out
sete
movsb
cs
les
pop
in
hlt
jl
xchg
aaa
movsl
dec
iret
xor
inc
cltd
cmp
fistpl
jbe
push
fadds
sahf
pop
xchg
xchg
or
gs
fcmovne
lods
mov
movsl
add
adc
or
int3
push
pop
mov
aas
dec
jbe
es
sbb
xchg
js
out
pop
mov
push
stc
push
aam
pushf
insl
mov
frstor
cmp
inc
xchg
hlt
pop
adc
sub
divb
dec
xchg
stc
into
leave
mov
jecxz
rcll
hlt
jecxz
jbe
js
dec
pop
sub
or
jnp
je
inc
leave
dec
push
popf
xchg
aam
addr16
push
in
push
jns
dec
dec
pop
pop
aam
xor
jne
jns
imul
aas
lods
push
fsubl
jecxz
ja
ss
in
fisttpl
pop
adc
fldenv
and
hlt
loopne
add
les
inc
in
hlt
jg
xchg
adc
and
xor
inc
into
push
fisubs
out
push
loopne
int
fldl
push
cmpsb
daa
sbbb
add
jno
and
dec
ret
inc
mov
les
cltd
xor
roll
les
or
inc
jecxz
shll
inc
cmpsb
cmp
or
xchg
push
lret
push
fsubs
gs
in
hlt
data16
adc
and
xor
inc
push
divb
push
xchg
push
movsb
ss
les
inc
in
hlt
data16
adc
and
xor
inc
push
divb
push
mov
cmp
fmuls
mov
and
icebp
shlb
add
jnp
in
daa
rcrl
jl
push
or
test
jmp
and
fisubl
pushf
dec
mov
sub
cli
mov
inc
add
aas
cmp
xlat
add
das
inc
add
stos
loope
mov
adc
cmpb
xchg
mov
push
cmp
xor
imul
repz
sub
push
cld
repz
dec
inc
push
loopne
jno
adc
pop
pop
dec
jno
insb
xchg
xchg
outsb
fadd
scas
pop
xchg
cmpl
insl
push
xor
pop
mov
and
shll
xchg
lret
mov
xchg
and
lahf
ja
cwtl
jne
or
sti
ret
jl
dec
adc
rcrl
fucomp
popf
sbb
pop
out
adc
stos
test
pop
adc
push
ss
push
in
pop
stc
shrl
loop
ficomps
pop
stc
lahf
cmpsl
xor
add
add
mov
bound
out
es
add
add
lods
clc
lock
dec
icebp
addr16
movsb
pop
and
fs
call
aam
mov
sub
pop
add
aad
mov
outsb
push
pop
repz
ret
pop
jmp
mov
repnz
subb
ljmp
pushf
jns
xchg
mov
or
ret
adc
cld
rcrl
aas
push
mov
daa
jbe
out
add
mov
in
es
lahf
lock
flds
lods
movsl
mov
add
lret
add
lret
or
mov
pop
aad
xor
push
lods
clc
mov
notl
loope
jb
xlat
push
out
mov
push
jl
or
xor
sahf
cmp
inc
xchg
jnp
mov
cmp
pop
xlat
jbe
xchg
lods
sbb
adc
aam
ljmp
int3
subl
popa
aam
cld
mov
xchg
std
ret
jle
pushf
stos
in
outsb
subb
sub
sbb
cs
lea
imul
in
mov
mov
push
dec
idivl
in
daa
scas
clc
gs
and
ss
in
out
mov
xchg
hlt
xchg
mov
xor
mov
lea
jae
mov
cmc
fwait
push
mov
mov
adc
sbb
mov
xor
roll
sub
dec
xchg
xor
fstpl
add
dec
in
test
and
pop
push
push
aad
mov
les
cmpsb
mov
xor
push
dec
mov
push
ja
dec
adcl
push
cmp
jnp
and
sbb
out
pop
lea
popf
xchg
popf
lods
roll
in
pop
inc
lods
xchg
movsb
xor
iret
in
clc
test
lahf
mov
or
xchg
in
pop
data16
pop
mov
pshufw
hlt
leave
mov
pop
pop
mov
ds
idivb
lar
imul
push
xchg
push
inc
cli
scas
sub
dec
mov
cmp
xchg
cmc
mov
fisubs
mov
pop
push
lds
leave
addl
repz
loope
sub
add
lret
daa
loope
iret
sub
aam
mov
ret
push
pop
in
shrb
repnz
inc
insb
popl
xchg
sub
vorpd
cmp
mov
les
jle
inc
repz
xchg
test
fists
sbb
das
xchg
and
pop
enter
inc
aaa
mov
ja
enter
aas
jno
sbb
cmp
jnp
bound
jne
imull
leave
add
add
mov
inc
mov
xchg
cmc
xchg
cmpsb
jl
scas
mov
mov
add
mov
arpl
and
mov
mov
mov
mov
aaa
xor
lahf
movb
shll
inc
dec
lods
in
sbb
mov
inc
sub
dec
mov
test
sti
addps
pusha
cld
fstpl
push
icebp
adc
push
out
push
aad
mov
aad
xor
and
lret
ds
imul
insb
mov
iret
dec
lods
push
inc
xchg
mov
pop
xor
leave
ror
mov
pusha
incb
popa
lds
mov
dec
cld
pop
pop
aas
jns
add
mov
in
adc
add
inc
mov
fstl
fmull
jo
xchg
shrb
aam
push
div
cmp
mov
fisubs
ljmp
mulb
js
add
adc
inc
rcll
mov
pop
enter
test
jl
or
fidivrl
in
scas
push
pop
pop
xor
sub
dec
dec
leave
mov
sub
inc
mov
and
testl
stc
ja
and
xchg
lock
ljmp
jo
aam
sbb
fs
inc
sub
xor
insl
adc
push
outsb
shlb
jmp
and
fbld
jae
lods
sahf
jae
imul
ds
sahf
jb
push
mov
cmp
cmp
shl
mov
fimull
int3
or
sub
or
push
cmp
and
pushf
sbb
fisubrs
mov
into
andb
xor
popl
ret
xchg
test
ja
mov
in
leave
xlat
sbb
jmp
nop
ret
xor
push
xchg
sub
mov
jecxz
add
movsl
adc
cli
jp
push
sub
adc
sub
cmp
and
out
leave
cmp
scas
repz
cmpsb
cmp
movsl
jno
xlat
inc
add
scas
hlt
or
sbb
into
and
je
cld
mov
movsl
mov
adc
mov
cmpsb
std
int
xchg
cmp
std
push
xchg
fisubrl
or
ret
sbb
in
mov
or
sbb
lahf
jl
decb
cmpb
push
pop
pushf
inc
shll
inc
add
dec
push
sbb
dec
sahf
nop
pop
cmp
mov
sub
jge
test
jg
pop
rclb
ja
imul
mov
xchg
cmp
mov
std
pop
sub
bsr
sbbb
jne
mov
pop
lret
and
mov
mov
sub
loopne
ljmp
xchg
jg
pop
push
xor
pop
orl
aam
js
jno
xchg
pop
sbb
sahf
cmp
sbb
sbb
push
leave
add
push
dec
and
pop
lods
jns
mov
sbb
call
jns
sub
sub
icebp
into
pusha
and
sbb
call
push
xchg
xor
push
lods
nop
xor
push
sub
dec
push
xchg
rolb
pop
sbb
stos
cs
push
xlat
pop
lret
adc
shrb
jb
andb
jne
outsl
xor
call
aad
in
inc
dec
mov
inc
int3
mov
test
inc
mov
jb
test
cmp
in
hlt
mul
lds
and
sub
in
jnp
cli
sub
insl
sub
xchg
fisubrs
jle
inc
xor
sub
jo
pop
mov
cmpb
dec
clc
dec
mov
dec
pop
cmpsl
fisttpl
ds
xchg
push
pop
das
push
scas
icebp
cmp
jae
dec
mov
les
mov
or
movsb
xor
cmp
jmp
mov
cli
mov
fnstcw
sbb
int
or
sbb
fmuls
lret
cmp
pusha
les
daa
mov
subb
or
fimuls
adc
jl
xor
or
dec
mov
mov
dec
jae
sahf
push
cmp
dec
adc
sub
stos
fnsave
push
shlb
fisubl
inc
cmp
sbb
movsb
jl
jbe
lret
ret
mov
incl
leave
mov
sub
repnz
xchg
stc
psubusb
dec
notb
push
gs
clc
sti
push
fiadds
pop
xchg
pop
ret
shlb
or
push
js
je
fdivrl
dec
sbb
daa
mov
sbb
test
pop
andl
push
std
ss
imul
insl
xor
push
cmp
int3
daa
movsl
test
sbb
stos
mov
xor
sub
push
test
and
adc
jo
fucom
cli
and
cmp
imul
add
mov
sub
daa
jl
rclb
add
fsqrt
jae
into
pop
cs
push
fwait
push
cmp
sbb
cmp
andb
das
loop
sub
dec
cmp
scas
test
orl
ficompl
cmpsl
sbb
test
loop
xor
sub
lret
dec
sub
cmp
in
cltd
popf
gs
movsb
enter
add
adc
es
sti
int
popf
sbb
cwtl
mov
repz
mov
ss
je
adc
shrl
jae
mov
mov
lds
std
sub
mov
js
rcrb
jp
dec
dec
dec
aas
aaa
push
add
dec
cmp
mov
nop
push
jo
fsubrs
sub
aaa
ret
lds
fcoml
jl
xchg
adc
dec
orb
aaa
push
pop
jne
push
cmp
or
adc
out
out
push
lock
fdivl
in
test
xchg
sub
repnz
mov
outsb
xchg
dec
pusha
popf
push
dec
mov
outsl
pusha
sbb
test
push
xrstors
out
cli
fadds
or
push
sbb
adc
mov
and
jmp
dec
enter
sub
cmp
ss
sub
jns
ds
add
xchg
sbb
gs
jno
test
mov
dec
adc
mov
insb
mov
inc
dec
out
ret
push
or
adc
pop
xor
out
inc
and
repz
lcall
test
adc
rcll
outsb
xor
xchg
scas
pop
jle
jge
stos
pop
fwait
jle
sub
out
sbb
icebp
sbb
sub
ret
jle
sub
adc
adc
into
jle
cmpsb
mov
pop
sub
sbb
loop
imul
sub
pop
test
bound
pop
cmp
sub
movl
sbb
jae
call
leave
aaa
imul
loope
ds
call
test
xor
fwait
mov
adc
pmullw
andb
push
push
js
mov
cmp
or
ret
mov
jb
lods
dec
out
test
xchg
jbe
fldl
or
int3
ds
sahf
xchg
in
adc
cmpsb
popf
test
add
and
inc
stos
mov
sbb
xchg
lea
inc
or
data16
movb
and
les
jmp
in
lock
cmpsb
addl
jo
std
mov
pop
daa
imul
and
inc
arpl
std
aaa
cmp
std
dec
lahf
in
xor
loopne
sub
mov
cli
insl
adc
pop
xchg
xchg
adcl
lahf
xchg
nop
lcall
push
jge
mov
fists
push
and
add
mov
dec
push
adc
loopne
scas
dec
and
fisubrs
icebp
pop
pop
and
xchg
xchg
rolb
dec
xor
dec
sahf
ficoml
sbb
sub
call
xor
jnp
fld
dec
adcb
insl
pop
pop
jl
pop
mov
adc
add
push
push
outsl
dec
arpl
ja
mov
pop
hlt
subb
mov
clc
push
aad
in
scas
jl
stos
add
sbb
mov
sahf
mov
cli
arpl
push
cs
push
ss
stos
gs
loop
in
mov
inc
in
adc
xchg
or
mov
sahf
jg
filds
xchg
xor
imul
loopne
mov
xchg
lods
setbe
repz
pop
scas
pop
or
repz
test
movsb
shlb
orl
pop
or
adc
jl
pop
xchg
push
mov
insb
xchg
inc
test
add
imul
pop
push
imul
into
iret
test
push
je
dec
stos
out
aaa
pop
mov
xor
scas
nop
push
sbb
mov
stos
fsubl
dec
mov
xchg
mov
loop
jle
cmpsl
xchg
movsb
frstor
fcom
jae
jmp
jg
andl
sbb
bound
imul
and
loop
cmp
jle
cmpsb
rcl
push
sub
mov
jge
sqrtps
sbb
cmp
pop
cltd
mov
clc
fdivrs
jl
push
repnz
dec
or
mov
cmpsb
repz
mov
mov
out
dec
sbb
dec
int
gs
xchg
les
pop
in
bnd
xlat
and
and
pop
not
hlt
call
mov
lods
ss
xor
lahf
pop
inc
jge
or
ljmp
dec
imull
xchg
xchg
jns
js
mov
sbb
js
shrl
add
test
ljmp
sbb
ret
adc
filds
pop
ljmp
xchg
pminub
cmpsb
dec
mov
xor
pop
or
push
scas
and
push
jg
mov
movsb
jns,pn
jbe
mov
sbb
cmp
dec
or
es
sbb
mov
xor
mov
adc
ror
ss
lcall
lahf
cmp
pop
inc
lock
call
inc
add
in
mov
clc
pushf
jne
loopne
lods
loop
push
aas
leave
and
xchg
push
jns
pop
xlat
xchg
mov
movsl
iret
and
inc
in
leave
addr16
ds
xor
pop
call
mov
negl
dec
cmp
lcall
push
popa
sub
fdivs
pushf
testl
in
test
inc
cmp
dec
inc
sub
sbb
push
pop
pushf
cld
sub
add
sti
stos
scas
fstps
mov
mov
push
fs
push
fbstp
les
push
je
into
push
pop
bound
out
sub
mov
rep
jns
cmc
test
sti
out
in
lods
cmc
cli
shll
leave
add
jbe
insl
rcrb
cmp
xchg
je
lods
xor
cmp
sub
aad
cmpsb
sbb
add
push
or
sub
push
or
paddd
fcmove
dec
mov
mov
push
pop
sbb
mov
pop
fadds
daa
mov
and
int3
repz
ja
dec
sub
cmpsl
jle
pop
mov
sbb
or
or
or
pusha
lahf
or
dec
cltd
imul
push
mov
xor
lock
loopne
hlt
in
or
sbb
cmp
fldt
daa
or
rol
jge
dec
aam
xchg
hlt
dec
cmc
xor
jmp
stos
inc
lods
mov
pop
xchg
pop
mov
bound
out
and
fimull
xlat
gs
jo
dec
inc
mov
push
inc
lods
lods
mov
loop
and
pusha
mov
push
and
jae
loope
or
xor
fildl
push
adc
jle
movsb
ret
mov
and
fbstp
or
jns
sbb
outsl
sbb
xchg
daa
or
les
inc
mov
adc
mov
mov
lcall
dec
or
rcrl
test
insb
mov
insl
adc
inc
lret
adc
push
rcl
and
aad
jo
jle
movsl
es
clc
add
stc
xchg
xor
addl
jb
mov
pop
cmp
mov
shll
out
pop
mov
mov
not
outsl
xchg
cmpsb
sbb
and
sbb
dec
mov
pushf
clc
mov
das
pop
xchg
add
popa
ds
jno
and
popf
jle
ret
and
sub
add
inc
sbb
orb
jecxz
dec
xchg
mov
inc
cmpl
or
cltd
xor
lahf
lods
aaa
or
lcall
mov
fidivrs
add
call
pop
push
mov
shl
lods
pusha
inc
xor
pop
jp
loop
in
lods
mov
pop
lea
outsb
shll
in
enter
xor
out
or
push
jecxz
pop
ljmp
jae
mov
push
scas
daa
sti
xchg
je
dec
adc
mov
int
data16
dec
xchg
aaa
stos
push
push
or
cmp
dec
add
aaa
mov
inc
enter
dec
and
jmp
xlat
lods
js
or
and
jo
pop
jo
cmp
lcall
les
mov
and
ja
bound
push
xor
push
and
mov
cmp
fmuls
xlat
arpl
pusha
xor
out
add
or
stos
pop
and
out
bnd
add
push
loop
xor
fdivr
repnz
jnp
aas
mov
sbb
cli
xorl
ret
cld
pop
cwtl
pop
fidivrl
xor
decl
sub
fnstcw
cmp
mov
adc
xchg
adc
lods
xchg
push
cmp
js
cli
xlat
jne
sub
sub
sbb
out
jno
pop
cmp
clc
shlb
cwtl
jo
stc
outsb
cmpsb
stos
jecxz
sbb
xchg
mov
repz
imul
fidivl
ljmp
out
jge
push
push
sbb
mov
hlt
xchg
push
or
leave
test
jno
and
fldl
sbbl
inc
mov
fimuls
dec
icebp
call
sti
or
adc
pop
and
repz
jb
das
imul
dec
popa
les
shl
sbb
dec
xchg
jb
addl
cmpsb
sarl
pop
mov
test
in
xor
loopne
mov
and
fdivs
cmp
and
arpl
and
xlat
das
mov
mov
adc
jb
mov
orl
js
insb
cltd
sbb
xcrypt-cbc
cmpsl
adc
inc
stos
test
sub
adc
js
sbb
push
mov
mov
cli
inc
push
dec
loopne
sbb
insl
xchg
sarb
add
push
into
sbb
jbe
inc
dec
push
ljmp
rol
or
leave
cmpsl
xorl
cmp
cmpb
icebp
leave
es
and
enter
add
leave
mov
adc
inc
lahf
jb
mov
inc
adc
xchg
popa
adc
sarl
sbb
adc
rolb
pop
shlb
mov
loope
sbb
sbb
push
mov
cmp
push
pop
dec
cld
inc
int3
ja
pop
in
insb
and
stc
lret
dec
rcrb
dec
cwtl
addr16
and
sub
mov
mov
add
cmp
stos
dec
push
add
movsb
test
subb
mov
mov
pop
int
mov
jecxz
sub
pop
bound
in
aam
push
shrb
mov
pop
sbb
dec
and
fldenv
mov
xchg
lret
aam
adc
push
sbb
and
scas
inc
je
int
orb
jge
xchg
pop
lea
push
mov
inc
jl
and
incl
sarl
iret
hlt
sub
adc
jbe
aaa
sahf
sbb
inc
push
in
les
pop
mov
repz
xor
pop
xchg
inc
jne
shrl
add
pop
lcall
fbstp
daa
pop
push
or
inc
out
ss
test
sbb
in
dec
dec
ds
cld
lea
dec
jle
lcall
jbe
icebp
cwtl
jge
add
rolb
sub
or
adcl
fs
dec
inc
fimuls
mov
lcall
or
or
outsl
cli
or
push
sbb
or
in
fisubrs
jg
sub
jg
inc
sbb
pop
mov
roll
enter
repz
jo
das
nop
je
xchg
xchg
ret
push
cmc
scas
movl
push
push
dec
pop
or
into
adc
lock
out
push
xor
adc
popa
arpl
aam
out
call
or
jge
imul
cmp
mov
cli
push
jp
rcr
inc
repnz
mov
and
scas
sub
sub
pop
or
inc
add
sarl
or
push
notb
mov
or
mov
cs
jp
popa
je
popf
inc
mov
sub
rorl
adc
lret
rorl
sub
int
xchg
and
xor
pop
andl
xchg
stos
push
fstp
sbb
popa
xorb
or
mov
jmp
inc
mov
mov
sbb
daa
fisubl
clc
mov
nop
jb
or
std
mov
gs
push
stos
scas
stos
leave
stos
xchg
push
fisubs
aaa
lahf
lret
js
loopne
jno
or
xor
sbb
cwtl
or
mov
shlb
mov
and
pop
andl
mov
push
movsl
ss
les
inc
in
hlt
data16
adc
and
xor
inc
push
divb
push
xchg
push
movsb
ss
les
inc
in
hlt
data16
adc
and
xor
inc
push
divb
push
adc
and
mov
inc
push
aam
in
je
add
adc
and
xor
inc
push
fs
test
xchg
add
aam
in
hlt
cmpsb
add
adc
mov
and
adc
add
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lret
mov
andl
lcall
pop
cmp
jp
or
jns
dec
cmp
stos
fidivrl
mov
lcall
sub
push
jp
or
jnp
or
pop
lret
mov
mov
lcall
hlt
jns
sbb
or
adc
push
pop
mov
xchg
into
test
int
inc
xlat
xor
subb
andl
xchg
test
jge
and
daa
mov
lcall
push
xlat
imul
mov
xor
xchg
mov
fistpll
in
hlt
cmpsb
dec
mov
or
jnp
mov
dec
lret
stos
sub
gs
repz
imul
sbb
mov
pop
push
jne
mov
fisttpl
push
sub
int3
icebp
sbb
lcall
imul
rcrb
adc
mov
push
lcall
test
dec
cmp
or
cli
xchg
mov
lcall
lods
pop
std
push
jp
or
subl
cmp
lods
enter
lahf
cmc
xchg
lds
aas
jle
jg
jb
add
cmovg
dec
cmp
mov
enter
mov
dec
cmp
jl
cmp
inc
sub
lods
std
lods
fistpl
sti
stos
lret
mov
cmp
jp
or
jnp
dec
cmp
stos
fidivrl
mov
lcall
sub
push
jp
or
jnp
dec
cmp
stos
mov
mov
jb
fdivr
xchg
and
push
push
insl
pop
mov
or
imul
mov
sbb
jmp
cltd
mov
stc
rolb
call
pop
hlt
sbb
jg
addb
ret
push
shr
xor
or
cltd
dec
lcall
lcall
and
jge
xchg
imul
xor
arpl
sbb
pop
mov
jle
mov
mov
popa
iret
fistps
out
movsl
lret
pop
mov
mov
lods
int
movsb
sti
mov
or
ds
lods
sub
flds
mov
inc
in
ds
cwtl
test
jno
iret
pop
dec
or
mov
sbb
cmc
jge
rcr
and
and
add
hlt
inc
xchg
pop
addb
mov
aas
cmpsl
xchg
and
movsl
shrb
ljmp
adc
out
mov
fmul
arpl
mov
test
in
and
xor
shl
jbe
shrl
pushl
insl
stos
sbb
push
ret
xchg
leave
cmc
stos
sub
sbb
loop
adc
hlt
negb
mov
cmp
out
mov
pusha
sbb
dec
push
dec
cwtl
lock
pop
andl
test
mov
and
sbb
push
or
addr16
cmp
cmp
sub
xchg
in
jae
popa
and
sti
out
pop
les
cmpsl
subl
and
mov
mov
jmp
push
cli
test
leave
scas
out
xor
lods
sarl
fadd
scas
jg
ret
subb
xor
and
sbb
mov
jl
push
lret
add
lods
repnz
lods
xor
gs
mov
outsw
push
pop
mov
sub
repnz
in
cltd
pop
dec
jae
dec
iret
popf
shll
jbe
mov
scas
add
imul
sbb
and
insb
in
imul
data16
push
xor
movsl
out
sub
clc
cmp
scas
loope
popf
push
push
jb
mov
cmp
aaa
les
cmp
jb
lahf
adc
fnstenv
je
sub
or
enter
add
xchg
xchg
sub
add
push
mov
nop
call
stos
sub
jb
mov
jge
mov
lcall
jae
dec
pop
enter
sbb
and
xchg
push
insb
adc
es
xchg
dec
and
xchg
out
fwait
dec
mov
mov
pop
push
aam
jle
dec
mov
sahf
or
pop
daa
jo
and
aad
xor
hlt
mov
cltd
jge
popf
addr16
in
push
enter
pop
imul
out
fcmovu
or
pop
mov
lds
inc
in
arpl
daa
xor
jnp
or
xchg
xchg
pop
lods
test
enter
lock
xchg
clc
call
sbbl
and
popa
mov
push
in
into
mov
adc
inc
scas
and
xchg
push
xchg
or
jae
sbb
ja
dec
add
fwait
xor
idivb
pop
xchg
daa
pop
sub
dec
lret
rorl
adc
lcall
shlb
outsb
out
add
lock
fisubrl
stos
sbb
imul
sahf
jne
jb
outsb
test
push
cmpsb
scas
lock
movsb
jne
movsb
pop
xchg
jns
jecxz
adc
jp
ja
fldt
sahf
movsb
inc
xchg
jo
popa
outsl
xor
in
std
xorb
cltd
mov
orl
sbb
jmp
sahf
aaa
mov
xchg
insl
pop
gs
sbb
fadd
cld
popa
rcrb
fnstcw
inc
js
ret
jnp
and
idiv
cltd
mov
jl
fiadds
cmp
pushf
xor
jg
add
das
mov
xlat
addr16
mov
iret
mov
pop
popa
hlt
hlt
ljmp
jecxz
jge
pushw
push
cmpsb
insl
test
pop
cld
pop
loop
daa
xchg
mov
scas
je
mov
adc
mov
ds
lret
jge
movsb
pop
out
inc
inc
sbb
or
ljmp
add
test
out
test
mov
rorb
mov
insl
lahf
adc
adc
mov
fistl
xor
pusha
stc
or
lret
xchg
xchg
push
movsb
cltd
jmp
aaa
jge
pusha
outsb
pop
pusha
ja
fmull
cmpl
shlb
je
xchg
mov
jb
push
dec
xor
lods
movsl
push
daa
ds
rclb
xchg
insl
int
mov
ja
test
andl
mov
test
sub
cmp
xlat
pop
xor
aaa
scas
and
or
testb
sbb
cltd
mov
mov
inc
fs
push
xor
add
pop
out
jb
mul
mov
mov
stos
add
xchg
sub
aam
adc
ljmp
push
and
sub
cmp
inc
fcmovnb
dec
xchg
in
into
popf
dec
xor
mov
adc
or
ret
mov
xchg
stc
sar
imul
cmp
adc
adc
jmp
dec
sbb
or
pop
js
std
adc
jns
repnz
int3
and
stos
dec
mov
sti
lcall
xlat
enter
and
cltd
lret
mov
sbb
sbb
lock
jle
repnz
fucomi
out
mov
cld
test
movsl
mov
dec
cmp
adc
fimull
sub
xchg
pop
call
jnp
ss
mov
push
jae
push
xchg
cmpsl
xchg
pop
xor
in
or
aam
insb
inc
leave
sti
dec
sahf
jae
inc
push
and
xchg
dec
aas
push
mov
sub
lret
cli
movsb
lret
add
inc
dec
xor
sbbb
xchg
sbb
imul
adc
ret
sbb
pop
mov
push
mov
mov
ret
outsl
xor
into
and
mov
arpl
insl
loop
enter
rcrb
cli
ss
or
ret
jl
mov
mov
pop
cmp
sarb
call
fnstcw
fwait
adc
pop
orl
shl
ljmp
popf
cmpb
int
xchg
or
loope
shrl
das
inc
addb
call
lock
vpmacswd
out
lret
enter
push
and
push
aad
inc
scas
sbb
push
mov
sbb
les
pop
cmp
dec
xchg
addr16
mov
push
sbb
lahf
push
out
shl
test
loope
adc
lea
cwtl
rcrb
mov
lahf
dec
dec
daa
loopne
je
mov
pop
out
popf
loope
sbb
jle
es
subl
inc
test
xchg
insb
mov
mov
mov
loope
out
cwtl
push
fdivrl
sarl
push
push
pop
cmp
push
adc
fcmovne
int
shll
lret
pushf
push
addl
adc
scas
sbb
pop
sbb
sbb
lahf
xchg
out
out
fwait
stc
or
adcb
add
push
xchg
sub
mov
outsb
mov
lds
pushf
imulb
push
loopne
add
mov
out
cmp
xor
dec
xchg
data16
inc
jne
aaa
mov
in
insl
jne
adc
push
xor
jae
das
mov
iret
inc
xor
popf
push
push
ds
push
sbb
adc
cmp
rolb
sahf
cltd
cld
in
adc
inc
cltd
icebp
and
push
push
inc
jns
mov
ret
push
popl
addr16
and
mov
mov
ljmp
hlt
cmp
xchg
outsb
js
push
lea
adc
inc
jne
nop
and
inc
ret
inc
push
xor
pop
fstpl
scas
dec
sbb
std
and
daa
sub
fs
cmp
and
or
negb
outsl
push
in
ret
and
stos
jno
testl
scas
insl
out
les
aas
pop
repz
jmp
cmp
ficomps
xor
sub
mov
or
nop
or
out
repnz
mov
loop
ss
daa
fwait
in
arpl
mov
inc
jo
jge
pop
mov
arpl
loope
lods
flds
mov
adc
imul
mov
or
add
icebp
dec
fs
mov
js
out
ljmp
out
adc
int3
mov
cmpsl
inc
add
cltd
icebp
hlt
loop
in
fldl
nopl
aam
adc
adc
ficoml
dec
jo
outsl
test
repnz
dec
adc
dec
xchg
sub
pop
pop
repnz
testl
and
push
stos
jo
je
icebp
jg
xchg
mov
insl
ret
shll
cmc
lock
jg
and
pop
int
stos
or
cmp
outsl
sbb
imul
pop
mov
pop
les
mov
cmp
jge
cmc
into
jmp
sbb
nop
or
lcall
dec
dec
les
xchg
cli
xchg
incb
or
mov
mov
rolb
mov
cli
mov
cltd
and
inc
adc
dec
outsb
icebp
pop
inc
mov
loop
rol
add
mov
push
add
dec
mov
mov
mov
stos
pop
pusha
mov
adc
je
lods
cmp
xchg
or
dec
cld
outsl
aam
pop
aam
in
rcrb
inc
jmp
or
ret
and
fldenv
cwtl
pop
push
popf
cmc
mov
aas
push
mov
cs
fisubrs
cmp
adc
gs
mov
dec
sbb
addr16
jg
cmp
shlb
loopne
mov
xor
mov
sbb
cmpb
pop
testb
xchg
add
sub
ds
in
dec
roll
add
andl
test
popa
nop
inc
arpl
vmwrite
mov
mov
sub
push
shrb
lock
iret
fstpt
adc
cmp
or
push
test
sbb
inc
sbb
bound
mov
jno
cmpsl
add
xorl
cld
loop
cmc
mov
icebp
insl
push
lods
sahf
cmpsb
dec
js
sbb
dec
pusha
inc
sbb
mov
fldcw
in
test
movsb
push
gs
stos
ja
mov
fnstsw
jle
lcall
mov
and
cltd
jecxz
test
jmp
sub
push
out
cmp
ja
pop
cmpsl
mov
daa
rcrb
stc
dec
fsubl
push
and
mov
bound
aaa
cmpsl
mov
fcompl
notl
cwtl
cmp
leave
push
fcmovnu
dec
sbb
mov
addr16
mov
cmp
pop
test
add
in
mov
xor
pop
or
movq
and
pop
mov
add
push
test
sub
or
iret
test
bound
divl
icebp
add
push
in
mov
imul
call
rclb
dec
clc
lods
pop
imul
inc
mov
pushf
stc
dec
lds
popa
rcll
add
cmp
inc
xchg
pop
je
push
mov
lock
fdivp
roll
mov
icebp
jbe
adc
xchg
scas
in
xchg
aas
xor
popa
icebp
fdiv
sti
pop
stos
dec
in
outsb
jecxz
push
xlat
mov
sbb
dec
push
lds
cmpsl
cmp
sbb
daa
jg
and
pop
push
aad
or
pop
dec
lds
dec
lods
sub
fsts
stos
or
ds
out
xor
iret
jle
mov
fwait
jl
inc
test
pop
ret
nop
enter
ret
adc
ja
pop
mov
xor
push
mov
fldcw
xchg
jb
ljmp
dec
add
aad
in
lret
outsb
xchg
shrl
mov
out
test
mov
dec
out
and
iret
iret
leave
out
sbbl
sbb
adc
dec
add
icebp
add
js
js
idivl
shrb
xor
dec
cmp
incb
sbb
lcall
shlb
jne
in
inc
sbb
push
mov
lods
ja
push
mov
jnp
inc
dec
hlt
inc
jle
mov
pop
adcb
dec
jg
mov
xor
adc
sar
ror
pop
lret
ret
mov
pop
cmp
mov
or
mov
insl
inc
fbld
rol
xor
movsb
scas
int3
mov
out
fisttpl
jge
pop
test
jns
inc
les
jp
in
jg
fwait
pop
xchg
test
xor
fwait
pop
push
jne
inc
xor
or
enter
jno
out
sub
mov
pop
iret
push
int3
lock
nop
pop
pop
sbb
fcmovb
stc
daa
mov
dec
rorl
pusha
scas
into
mov
cs
ss
popa
je
xor
xor
dec
jno
das
inc
adc
adc
enter
rorl
push
sub
adc
mov
stos
imul
jge
mov
mov
lcall
in
or
ret
cmpsb
fbld
xor
inc
je
mov
xchg
add
or
jecxz
inc
lcall
pop
aaa
aam
andps
movsl
imull
rcll
xchg
inc
and
data16
sub
leave
xor
imul
cli
test
cmpsb
incb
cmpsb
add
mov
stos
fists
xor
lcall
jl
lds
lcall
add
xchg
fstpt
and
test
icebp
push
fwait
mov
pop
xchg
shlb
pop
xchg
popa
jnp
xchg
push
sbb
dec
sbb
loopne
and
int3
jl
test
je
and
imul
push
test
and
lea
fidivs
inc
and
jmp
inc
stos
inc
out
lcall
mov
jo
mov
cmp
inc
or
mov
stos
movsl
in
sbb
mov
inc
mov
jae
mov
adc
scas
push
mov
insb
fs
cli
cmp
dec
shlb
int
sub
cwtl
test
fisubrs
add
jbe
pushf
cs
add
add
movsb
push
insl
aam
inc
mov
cld
out
in
inc
jne
or
cli
xchg
iret
pushf
jbe
nop
rorb
pop
lods
push
add
mov
shr
mov
adc
icebp
paddsw
and
outsb
sbb
ret
fld
pop
jnp
mov
mov
addl
cwtl
insl
mov
roll
out
push
mov
cmp
sub
sahf
loop,pn
adc
adc
mov
filds
mov
icebp
mov
dec
fs
mov
pop
enter
ss
sub
adc
lcall
testb
inc
dec
ss
mov
mov
dec
mov
mov
mov
popf
int
outsl
sub
inc
lret
aaa
jge
push
ret
lcall
inc
nop
push
mov
sbb
cwtl
and
adc
fmull
stc
mov
cltd
sub
mov
imul
stos
mov
in
inc
fdivrl
add
int3
adc
lret
xchg
xor
jns
and
mov
sub
add
xor
mov
push
xchg
pop
cmp
shlb
inc
fndisi(8087
fists
insl
mov
or
insl
adc
mov
push
jnp
in
daa
out
aad
shll
pushf
dec
movsb
push
sbb
pop
ljmp
sbb
xchg
rcrb
imul
push
out
dec
ja
xchg
push
sbb
neg
pop
or
test
dec
addr16
ret
push
insl
inc
pop
sub
icebp
test
adc
lds
insl
jnp
ret
or
fistpll
mov
mov
jns
arpl
gs
scas
mov
jb
mov
fstl
popa
inc
mov
cmp
mov
sub
shl
pop
xor
adc
sub
daa
push
arpl
mov
jno
mov
mov
adc
js
fcoms
imul
jge
leave
sti
xchg
push
out
les
or
rorl
insb
inc
jg
or
test
gs
mov
push
cltd
push
dec
mov
sbb
loopne
push
movsb
clc
and
outsb
and
repz
js
sub
in
dec
pop
movsl
in
fcoml
mov
cmp
adc
mov
leave
std
call
inc
in
fsubp
lds
inc
jbe
dec
int3
sub
repz
pop
sbb
push
repnz
xor
je
mov
fnstsw
in
dec
and
adc
jnp
and
pop
dec
push
rorb
fidivl
xor
cmp
movsl
dec
out
sar
es
cmc
pop
pop
mov
lock
lcall
movsl
and
push
xlat
xor
dec
jecxz
jp
nop
push
pusha
push
cltd
xchg
pop
out
adc
mov
push
jb
in
aas
std
adc
test
pop
push
cmpsb
cmc
idiv
mov
mov
fs
out
sahf
imul
lret
gs
and
add
js
insl
push
lock
loopne
jns
sub
ljmp
nop
mov
pop
or
inc
ret
cmpl
int3
lock
mov
movsb
push
lret
int
icebp
jae
insl
pusha
bound
pop
or
popa
xchg
aam
cld
inc
add
cmp
imul
loopne
cmpsb
add
data16
ror
dec
pusha
push
pop
and
push
add
stos
fstps
sub
imul
xchg
mov
sbb
jmp
jo
iret
mov
inc
loopnew
mov
xchg
push
clc
mov
push
test
shr
loopne
cmp
ret
into
jmp
and
xor
ret
jp
in
outsl
js
add
xchg
push
cmp
es
pop
mov
es
rorb
dec
orl
fdivl
xchg
and
mov
fdivr
and
rol
push
aaa
insb
imul
rclb
cmpsb
loopne
adcl
jge
popf
addr16
aas
mov
in
jne
scas
xchg
cmp
orb
loope
ja
mov
mov
add
or
jno
mov
pop
pop
lods
in
and
push
xchg
icebp
push
or
ucomiss
mov
mov
and
sti
pop
std
imul
sbb
rcrb
or
ja
and
cmp
fucomi
xchg
enter
or
xchg
or
call
shll
sar
insb
push
scas
lret
mov
out
ds
ja
and
or
push
clc
push
push
push
bound
inc
jecxz
and
push
lret
cltd
and
ret
fsubrs
or
lcall
cwtl
or
cmp
inc
pop
out
imul
faddp
push
sub
xchg
xor
testl
pop
mov
sbb
and
addr16
push
mov
xchg
call
xorl
push
test
out
out
ds
js
add
ret
insl
daa
loopne
jecxz
mov
cltd
mov
dec
pop
ljmp
fcom
shll
adc
fdivp
push
push
lret
cmc
bound
or
xor
xor
aas
jle
mov
jp
mov
sbb
cmc
cld
sahf
loopne
and
mov
cmpsl
sahf
sub
or
xor
jg
jle
or
jns
fadd
in
inc
push
dec
cmp
mov
inc
gs
nop
pop
jp
clc
fs
inc
ffree
ljmp
sahf
lods
add
popa
int
dec
pop
repz
mov
sbb
ja
push
fsubr
aad
sbb
bound
lret
add
jae
das
in
nop
adc
cltd
addb
lret
fstl
sub
jle
dec
xor
xchg
mov
divl
fistpl
pusha
sbb
cmp
les
jne
sbb
mov
mov
inc
and
add
aam
dec
sbb
sub
pop
es
sti
cmpsl
xor
mov
repnz
shlb
dec
mov
sbb
jbe
cltd
push
cmpl
dec
sbb
iret
out
rolb
nop
testl
inc
jae
scas
call
inc
call
sub
insb
and
hlt
out
pusha
in
cmp
push
and
jno
mov
jg
cmp
xchg
xchg
test
pop
lods
cmpb
mov
and
push
lret
sbb
and
jno
and
cli
movsl
dec
lods
pop
or
dec
xchg
lods
clc
add
fs
dec
inc
jns
mov
add
cs
dec
mov
jbe
pop
inc
mov
ja
out
and
lret
sub
push
enter
mov
sbb
outsb
xor
xchg
sarb
and
mov
add
fsubrs
pusha
sub
fsubs
cmc
aas
xor
out
cmpsb
into
rcrl
xor
xchg
rclb
repz
lods
xchg
call
cli
fwait
mov
lcall
sub
push
jp
or
jnp
dec
cmp
stos
fidivrl
mov
lcall
sub
push
jp
or
jnp
dec
cmp
stos
ljmp
push
stos
lret
mov
cmp
jnp
or
jnp
imul
lret
mov
mov
lcall
aam
xchg
rorb
insb
jge
xchg
test
mov
movsb
rcrl
or
cmp
sub
sub
imul
jno
add
adc
rcrl
or
cmp
sub
jns
imul
jno
add
adc
and
xor
rcrl
or
cmp
sub
jns
imul
pop
test
outsl
pushf
pop
jmp
xchg
pop
add
lahf
xchg
mov
jp
mov
mov
add
lods
jb
and
insl
dec
adc
jl
stos
mov
inc
popa
mov
jg
in
mov
add
and
iret
adc
sub
jns
fisttps
add
jle
call
sahf
mov
cwtl
cli
inc
push
icebp
call
xchg
cmp
sbbl
cmp
inc
pushf
in
inc
push
push
decl
xor
test
aam
pop
lcall
fsubrl
lcall
and
ds
jmp
pop
jns
push
dec
pop
mov
in
adc
cwtl
cltd
mov
adc
lahf
sbb
or
cmp
sub
jns
imul
jno
add
adc
and
xor
test
outsl
in
fmuls
les
sbb
cmc
push
loopne
xlat
sbb
mov
jnp
mov
pop
mov
jle
cmp
addr16
imul
xor
fs
cmpsb
push
mov
xchg
dec
lock
xorl
push
mov
jno
add
adc
and
xor
rcrl
or
cmp
sub
jns
imul
jno
add
adc
and
xor
rcrl
sbb
lret
aad
pop
pushf
cmp
pop
sub
and
mov
mov
jle
jbe
not
subl
xorb
dec
mov
cld
jecxz
xchg
jne
add
insl
scas
insl
clc
cmc
fs
jo
mov
fisubl
mov
mov
jae
fcmove
add
lret
mov
push
mull
and
icebp
adc
xchg
out
adcb
and
add
ret
inc
push
mov
out
insl
inc
sbb
mov
push
xchg
push
and
jnp
cmp
pop
mov
fldcw
sahf
xor
jb
mov
mov
cmpsl
push
std
mov
push
inc
out
pop
aas
subl
lods
jl
je
push
popa
int
mov
dec
mov
add
lea
inc
sbb
les
insl
or
lea
and
xor
or
adc
push
and
mov
mov
xchg
xor
int3
xor
ficompl
mov
ret
inc
mov
jo
inc
mov
cmpsl
pop
fiadds
fdivrs
or
arpl
lods
int
lods
pop
inc
arpl
pop
xor
arpl
jmp
and
sub
fdivrs
test
into
push
or
jmp
test
loop
mov
out
push
pop
ljmp
mov
shll
sbb
cmp
les
cmp
pop
pop
adc
sub
imul
adc
fcoms
adc
popa
jne
ds
push
test
mov
inc
fidivrl
lods
or
sub
dec
arpl
and
dec
jnp
pop
and
je
ret
mov
push
jae
fdivs
xchg
fildl
jp
mov
pushf
shlb
xabort
mov
xor
inc
xchg
loope
dec
addl
pop
push
and
sub
sbb
int
or
or
xchg
lea
or
pop
popa
lcall
mov
shlb
and
jns
dec
jge
sub
add
scas
push
shrb
xor
scas
pusha
sub
mov
and
pop
loope
repz
not
inc
mov
pop
mov
enter
movsb
rorl
and
lahf
imul
push
lret
call
leave
jl
jp
xchg
xchg
pusha
pop
lods
adc
push
cmp
and
lret
rolb
mov
dec
inc
cmp
mov
inc
lea
adc
xchg
cmp
loopne
into
scas
cmc
mov
add
push
movsl
insb
or
sub
out
mov
cmp
decb
rolb
mov
mov
fistpl
popa
insb
lea
dec
int
or
xor
ss
or
sub
adc
stos
dec
gs
sub
inc
and
mov
mov
mov
xor
add
xchg
mov
out
dec
mov
pop
inc
inc
movsb
fsubrl
mov
adc
push
sub
xchg
cld
cmp
cmp
dec
add
sub
repz
adc
outsl
das
mov
insl
xchg
dec
cltd
push
xor
sbb
adc
aas
xchg
add
sbb
fyl2x
or
stos
inc
push
pushf
lahf
mov
inc
adc
dec
add
inc
enter
and
cmp
neg
testb
sbb
shl
dec
clc
pop
mov
pop
cmpsl
int3
xchg
adc
out
movsb
rcrb
hlt
adc
sub
sbb
fistps
or
pop
push
ds
fimuls
ss
xchg
shrb
sbb
mov
sub
frstor
mov
xchg
or
sub
bound
pop
into
ret
int3
push
mov
sbb
imull
repnz
hlt
push
mov
popa
aaa
cmpsl
inc
mov
arpl
mov
jmp
fsub
testb
dec
lea
ret
lods
sbb
jl
cmp
shrb
push
xor
call
int
cmp
cmpsl
les
and
add
in
jmp
adc
push
xor
fists
sub
pop
dec
iret
int3
movsb
jo
mov
loop
jmp
pop
ret
mov
bound
pop
push
lea
xor
std
adc
nop
and
or
repz
scas
mov
mov
jg
mov
cs
push
xchg
jmp
push
outsb
sub
cs
test
adc
jo
popf
movsb
mov
sbb
mov
mov
add
js
cmpsb
xor
leave
sbb
push
push
push
push
push
popa
cmp
movsb
in
jmp
mov
in
sbb
cs
lahf
jmp
jl
ds
imul
test
mov
cld
arpl
sub
mov
inc
cmp
lods
rorl
lock
in
lea
lahf
int
xor
cmc
std
sub
sahf
jae
jnp
inc
icebp
dec
dec
insl
pop
sub
aam
mov
cmpsl
mov
push
cmp
push
es
mov
not
mov
pop
rcrl
sub
mov
push
stos
mov
adc
out
pop
mov
lret
out
mov
pop
sti
aaa
pop
mov
js
inc
addl
imul
adc
je
and
in
mov
in
jo
jbe
or
icebp
loope
mov
insl
sbb
in
cs
mov
call
adc
data16
loopne
dec
jo
insl
xchg
dec
cld
mov
fucomip
loopne
xchg
ss
pop
xchg
add
clc
push
out
xor
sub
xor
and
ja
ret
andb
push
jo
daa
mov
jo
daa
xchg
mov
stos
inc
gs
mov
inc
aas
sub
mov
xchg
stos
in
adc
outsb
fstp
push
xchg
ret
mov
pop
xchg
out
hlt
add
repz
shr
iret
xor
aas
inc
es
inc
inc
outsb
push
loop
fs
pop
fsubp
rolb
cmp
out
ss
cmp
test
push
into
or
xchg
aas
rcll
fldenv
xlat
js
test
fisttpl
sbb
inc
cmp
adc
fs
mov
shl
call
je
fstl
mov
aad
pushf
lea
lods
mov
ret
mov
test
xchg
repnz
stos
imul
add
into
stos
ljmp
fldcw
xchg
and
insl
in
jns
xchg
ja
nop
jno
jge
dec
fldcw
pop
shlb
imul
stos
sub
xor
jne
dec
sub
jb
dec
cli
sub
inc
daa
xlat
loop
or
xchg
mov
pop
dec
sahf
cld
loop
or
test
sar
jns
mov
mov
cwtd
mov
rclb
lahf
test
add
inc
negl
sbb
sub
and
enter
std
fmul
ljmp
cmp
popa
sbb
int3
cld
bound
pop
lea
sbb
sub
cli
rcll
xchg
mov
stc
push
ficomps
pop
push
jg
gs
inc
hlt
addr16
mov
mov
fisubrl
stos
jg
shrl
shlb
and
mov
insl
xchg
popf
repz
stos
les
in
push
cs
lock
add
fsubrl
xchg
cli
jp
pusha
inc
fsubrl
enter
aad
pop
sub
add
fildl
inc
add
data16
xchg
int
push
test
aad
xorl
sub
jnp
cmpsb
cmp
pop
push
out
cmpsl
rcrl
sti
hlt
push
scas
ret
sbb
ljmp
mull
out
push
test
mov
pop
sub
mov
call
shrb
leave
mov
sbb
loopne
jnp
mov
jo
movb
js
insb
sahf
mov
fidivs
dec
outsl
sub
frstor
mov
jns
std
dec
lret
xchg
imul
ffree
lock
lods
dec
dec
xchg
inc
mov
xchg
clc
jo
dec
in
nop/reserved
cmp
stos
jnp
nop
and
aam
test
les
cmp
popa
add
imul
ds
shrb
roll
call
cmc
xlat
jecxz
push
dec
or
popf
scas
add
scas
icebp
out
insl
push
hlt
push
gs
mov
test
out
and
je
aaa
pusha
jbe
xor
xchg
ljmp
dec
xchg
lcall
enter
adc
sahf
add
xchg
stos
pop
aas
inc
rorb
push
and
call
jae
ret
mov
sbb
xor
adc
and
sbb
mov
mov
dec
cwtl
into
fs
and
push
mov
xchg
pusha
pushf
xchg
push
push
xchg
dec
into
adc
in
pusha
imul
cmp
or
jnp
cld
pop
sub
fiadds
loop
push
clc
ret
or
xor
cmp
aaa
in
movsl
addr16
mov
jl
lods
je
cmc
add
adc
inc
pop
push
leave
insb
sar
fisubrl
pop
pop
push
mov
out
mov
pop
xor
mov
int3
or
mov
push
cmp
outsl
scas
push
adc
cmp
leave
cmp
inc
inc
cmp
adc
pop
or
push
imul
and
mov
fiadds
lret
pushf
push
cmp
jbe
mov
stos
movsb
add
add
push
xchg
pushf
pop
add
nop
sbb
rclw
or
pop
test
lods
dec
dec
xchg
add
push
mov
in
aad
pop
sarb
sbb
pop
and
repnz
xor
xchg
into
lret
and
dec
push
sub
repnz
dec
lds
mov
vminpd
xchg
enter
jae
mov
rcr
clc
insl
push
inc
cs
push
data16
addr16
insl
jne
sub
jo
lcall
and
call
scas
adc
xlat
xlat
call
je
mov
vmovntps
mov
sub
push
or
xor
cld
jmp
add
add
stos
mov
sbbl
jl
add
shlb
mov
sar
or
stos
or
add
push
lods
add
jbe
data16
imul
jno
sahf
pop
xchg
ret
mov
pop
sub
push
jno
sub
lock
add
insb
lcall
pop
dec
popf
sub
aad
stos
push
sub
ss
jno
pop
outsb
jbe
add
push
dec
mov
test
push
daa
mov
xchg
xchg
pop
jbe
add
fcmovnu
lcall
jl
pop
sbb
push
jne
aas
leave
mov
stos
les
mov
mov
decb
mov
pop
pop
jo
das
pslld
in
xor
out
mov
mov
pop
pop
movswl
or
cmp
push
jno
and
and
sbb
fadds
jbe
mov
mov
ljmp
pop
jo
movsl
cld
inc
sbb
xor
hlt
mov
sbb
or
jnp
mov
fstpl
pop
scas
subb
in
xchg
mov
mov
mov
js
push
fldl
insb
repnz
fwait
inc
or
dec
mov
and
sar
dec
mov
and
cmp
jge
lds
leave
ret
call
jl
dec
scas
pushf
push
cmp
insb
adc
fs
and
fsubrs
fistps
cmpsl
lcall
mov
lcall
adc
xchg
xchg
pop
daa
std
gs
pop
imul
xor
push
pop
or
in
scas
fwait
in
sub
aas
adc
jg
lret
iret
mov
xchg
cs
pop
les
or
push
mov
lcall
sbb
in
cwtl
or
adc
fidivrs
push
mov
cmc
adc
sahf
jbe
shl
pushw
pop
sbb
je
pusha
mov
leave
lods
dec
mov
ss
add
xor
sbb
or
or
ret
adc
cmp
push
leave
inc
fdivrp
loope
test
mov
cld
out
jle
dec
or
leave
add
mov
push
push
mov
ja
xchg
or
shl
call
inc
cmc
out
imul
or
data16
movsl
xchg
ds
mov
sub
popf
out
dec
stc
out
jb
sti
push
adc
sbb
js
inc
or
xor
mov
addr16
pop
clc
dec
pop
popf
lods
dec
cltd
pop
lret
hlt
xor
adc
jb
mov
adc
arpl
arpl
add
mov
push
hlt
out
out
ljmp
out
mov
mov
in
jp
lcall
or
mov
mov
cmpsl
xchg
into
orl
fistl
add
dec
sti
xchg
shlb
mov
mov
in
iret
arpl
dec
lods
mov
lock
cmpsb
popf
xor
mov
pop
lods
outsb
mov
or
bound
idivl
rorl
movsb
lods
aaa
pop
pop
inc
xchg
and
jb
mov
and
and
gs
in
xchg
rcll
sahf
mov
push
adc
cltd
cmp
idivl
stos
push
lea
and
xor
adc
pop
pop
sbb
dec
pop
mov
mov
cmpl
out
ja
dec
push
pushf
dec
sahf
xor
jnp
lods
mov
sub
or
xchg
ds
mov
and
sub
mov
sti
test
nop
xchg
or
out
mov
inc
adc
aam
mov
ja
push
je
shll
outsb
int3
sub
pop
mov
mov
sub
pop
call
xchg
mov
xor
mov
xchg
pop
adc
add
inc
xchg
js
into
loope
mov
int3
insb
jae
cmp
cmp
out
mov
cli
adc
jecxz
ficomps
or
lret
rcrb
icebp
js
inc
movsb
movsb
or
cmc
dec
xchg
or
lds
sub
ds
push
pop
int3
idivl
ret
mov
push
arpl
push
aam
pop
jnp
in
call
mov
shlb
cltd
into
cli
lods
jae
mov
pop
push
aas
fistps
sbbl
mov
pop
and
fwait
test
mov
push
icebp
insl
rcl
outsl
pop
test
lret
test
addr16
mov
test
jo
repz
sahf
int3
pop
or
cmp
sbb
aaa
dec
lods
ret
lahf
sbb
add
pop
jl
add
pop
test
scas
mov
adc
jns
xor
adc
sbb
jo
jo
in
mov
sub
lahf
adc
jo
cltd
jle
mov
adc
mov
loopne
jns
pushf
fcompl
pop
inc
cmc
fmuls
stos
stc
cmp
int
add
leave
ret
scas
cmp
out
xor
shll
inc
pop
add
mov
or
cmp
orb
aas
mov
das
push
lock
pop
pop
popf
push
ffreep
add
pushl
adc
sbb
aad
cwtl
out
outsl
in
jne
stos
imul
cmp
jbe,pt
adc
icebp
sub
std
andl
stc
loop
lcall
push
iret
dec
sub
ret
aas
adc
cli
mov
jo
xlat
movsl
mov
mov
lret
movsb
and
jl
adc
outsb
pop
or
sbb
push
pop
adc
jg
in
daa
cmp
sbb
in
in
sub
test
push
fcmovne
and
cltd
xchg
pop
ss
sbb
xchg
mov
lds
aas
cltd
mov
adc
cmp
das
imul
fs
insl
xor
or
jnp
cwtl
fimull
xchg
fistpl
mov
cmp
gs
pop
imul
xor
xor
mov
ret
idivl
lock
dec
imul
in
out
sbb
pusha
jnp
ja
push
jmp
call
pop
xor
mov
pop
jg
sarb
popf
push
xchg
fidivs
jo
aaa
movsb
inc
pop
stos
cmp
aad
cmp
add
inc
daa
mov
out
adc
cld
and
jnp
mov
or
xchg
testb
out
and
pushf
loope
insl
sbb
cmp
add
out
inc
mov
push
pop
xchg
movsl
xchg
fbstp
ret
inc
fwait
mov
lret
pop
sbb
dec
cmp
push
push
xchg
mov
inc
cmpsl
imul
jne,pn
inc
mov
nop
sbb
jno
out
mov
loope
and
frstor
insb
mov
xor
mov
je
sub
add
jge
pushf
or
sbb
sub
stos
scas
jne
lods
andl
xor
cltd
in
int3
inc
popf
adc
lods
mul
cmp
jecxz
imul
xchg
mov
cmp
mov
cltd
out
je
repz
jne
push
idivb
adc
int3
push
xchg
cli
pop
loopne
mov
xchg
jbe
shl
pusha
jae
dec
jns
outsb
push
pop
loop
imulb
arpl
testb
sbb
cmp
sbb
dec
mov
sub
cltd
sbb
sarb
xor
or
or
add
pusha
dec
stos
cmp
test
sbb
mov
in
repz
mov
cmpsb
sbb
push
ljmp
nop
nop
out
push
decl
add
mov
pop
pop
popf
mulb
jne
push
adc
jno
sbb
int3
nop
mov
fiaddl
int3
mov
insl
xchg
fdivs
cmc
push
push
mov
fdivrs
jb
xchg
rcrl
sub
sub
and
xlat
or
cs
out
dec
sbb
jle
shlb
mov
jmp
pop
pop
cmp
jnp
pop
mov
push
sbb
adc
aad
jae
jno
adc
je
ss
mov
xchg
shlb
sti
test
sahf
roll
push
jbe
pop
xchg
jg
mov
in
sti
lahf
cmp
push
jp
or
push
add
cmp
or
notl
sub
outsb
loopne
outsl
adc
cmc
xchg
adc
aam
sbbb
jle
call
test
fwait
sub
mov
cs
or
in
test
jecxz,pn
test
shll
popf
cmp
hlt
ds
push
cmc
xor
lods
jmp
in
or
or
dec
mov
jp
dec
push
out
outsl
xchg
mov
push
or
testb
ret
rcrb
fimull
mov
in
mov
rorl
jmp
rcrb
xchg
outsb
outsb
pop
and
add
fldl
test
push
aaa
mov
and
and
call
push
xchg
inc
mov
mov
sahf
daa
jp
sbb
fsts
jmp
lds
mov
mov
in
push
popa
das
jbe
inc
aam
enter
sbb
or
and
out
mov
xchg
sub
cld
ds
mull
add
mov
add
sahf
sub
cmc
jl
icebp
dec
dec
mov
xor
cld
add
stc
in
and
xchg
jl
xor
xchg
call
and
pop
lret
jp
fwait
cltd
cmpsb
jge
pop
inc
lahf
icebp
push
stc
mov
stos
mov
pop
icebp
mov
stc
mov
xor
xlat
xor
xor
scas
jecxz
fdivl
mov
es
fs
cld
push
neg
aaa
cmp
push
sbb
enter
dec
mov
mov
lods
and
movsl
pop
xlat
xor
insl
mov
shlb
jno
adc
jmp
scas
hlt
adc
decb
push
movsl
sub
lret
cltd
pop
les
mov
push
enter
aad
xor
addl
cmpl
add
ja
push
add
or
sub
pop
sbb
je
imul
or
sbb
ja
repz
mov
lcall
add
mov
sbb
mov
fs
enter
rcrb
ja
in
hlt
es
pop
cwtl
in
scas
iret
imul
sub
out
imul
jno
mov
js
dec
add
sub
lret
roll
jne
fwait
in
pop
movsl
pop
push
push
mov
ret
ret
lds
mov
dec
mov
int
pop
mov
imul
cmp
fs
adc
jge
pop
push
jmp
dec
shrl
imul
mov
mov
rclb
push
xor
xor
push
sub
jb
imul
sub
push
rorb
mov
icebp
sub
jns
imul
jno
add
adc
and
xor
rcrl
or
cmp
sub
jns
imul
jno
add
adc
and
xor
rcrl
sub
js
imul
jno
add
adc
and
xor
rcrl
or
cmp
sub
mov
push
and
mov
cltd
fiadds
into
push
mov
xchg
lret
andb
ret
imul
adc
cmp
arpl
inc
or
mov
mov
mov
rorb
and
adc
bound
push
or
mov
mov
mov
rcrb
aaa
ja
insb
adc
ds
xor
xchg
shll
test
jb
xorb
dec
dec
sti
xlat
pop
adc
data16
clc
fisttpl
jl
push
outsl
imul
mov
xchg
frstor
jl
imul
xchg
jbe
jmp
xchg
inc
or
mov
xchg
add
xchg
and
adc
std
les
int3
mov
aas
sti
mov
xchg
sahf
repz
and
add
pop
aam
xchg
daa
loop
sbb
pop
subb
jmp
imul
int
aaa
dec
in
dec
add
cmp
mov
xchg
sub
mov
mov
mov
movsb
addr16
std
sti
arpl
xor
push
or
fistl
mov
fwait
rclb
and
push
add
jb
bound
push
adc
mov
fstpt
mov
xchg
cltd
mov
mov
inc
imul
inc
and
and
sti
fsubrp
into
mov
mov
cmpsl
testl
ds
pop
pop
pop
hlt
imul
push
xchg
repz
mov
shrb
jnp
imul
adc
cmp
bound
push
or
mov
mov
mov
rorb
and
dec
add
jb
bound
push
or
mov
mov
pop
xchg
test
es
and
cmp
pusha
jl
xchg
fwait
or
jmp
bnd
sti
mov
lcall
add
sub
dec
ljmp
int3
imul
leave
mov
jle
in
mov
mov
out
mov
cwtl
or
mov
dec
shll
in
push
pushf
xchg
mov
andb
add
jp
popf
outsl
inc
call
fwait
mov
cwtl
sub
aad
test
divl
cli
mov
orb
in
insb
xchg
inc
dec
adc
dec
inc
mov
imul
sbb
in
iret
sbb
xlat
cltd
push
lea
enter
js
clc
fstl
stos
xlat
ss
mov
jg
or
int3
stc
or
stc
add
adc
adc
push
mov
outsb
xor
pusha
push
mov
dec
lock
inc
stos
mov
daa
add
and
pop
adc
jle
arpl
repz
pushf
call
jmp
cmc
sti
adc
push
js
cwtl
push
lods
int3
jl
scas
inc
pop
xor
sub
mov
movsl
inc
adc
lret
out
dec
out
fidivl
adc
in
out
mov
shr
or
cmp
inc
icebp
movsl
pop
leave
inc
rolb
add
or
popl
xor
dec
cmp
fs
push
outsb
xor
mov
out
mov
sbb
int3
pop
lods
fcomps
cltd
inc
cltd
mov
fistpll
dec
pop
pop
fidivrs
fidivl
add
shll
in
jnp
push
mov
out
mov
scas
enter
xor
fld
xor
mov
xchg
or
mov
stos
mov
ds
test
arpl
push
cs
push
pop
mov
dec
jg
and
ljmp
adc
ds
adc
dec
mov
icebp
fbld
or
xor
daa
cld
orl
scas
scas
xchg
fstl
lods
xchg
nop
push
sub
mov
stc
sbb
or
movsl
stc
shrl
mov
adc
fnstcw
jnp
shlb
or
sbb
das
out
lea
cld
imul
xor
push
and
mov
xchg
imull
sahf
dec
int
mov
jmp
xor
shrw
orl
dec
mov
push
mov
icebp
aas
xchg
mov
and
and
add
xchg
cmp
clc
cmp
pusha
adc
inc
lods
enter
sbb
mov
xor
xor
scas
ss
icebp
inc
iret
pop
enter
mov
pop
fcmove
sbb
adc
sbb
sbb
mov
dec
jl
push
mov
pop
push
cltd
push
movsw
stos
inc
iret
fmuls
push
xchg
inc
lahf
push
in
xchg
movsl
mov
pop
jle
insl
mov
xlat
shrb
in
in
xchg
jp
sub
addl
inc
mov
sub
and
test
inc
sbb
jmp
aad
stos
lds
mov
jmp
aad
pop
push
or
and
leave
aad
das
or
in
lods
sub
mov
cmp
out
push
push
pop
out
lock
gs
incb
filds
jb
mov
jmp
or
sbb
pop
ret
sbb
mov
push
flds
jns
scas
inc
mov
lcall
mov
insb
shr
sub
push
pop
dec
cmp
or
jo
ljmp
sub
pop
outsb
addr16
push
lret
inc
or
push
negb
xchg
xlat
ds
and
test
push
imul
and
in
add
stc
inc
mov
inc
push
mov
bound
int3
mov
inc
pop
lods
stc
cmp
lock
lret
aaa
insl
mov
into
cmp
insl
clc
push
mov
or
les
jecxz
les
pop
push
in
pushf
xchg
xor
lret
inc
dec
xchg
jge
sti
cwtl
out
inc
xor
adc
fisttpll
sbb
xchg
cmp
pop
test
sub
and
int3
test
imul
mov
or
push
fstp
sbb
mov
mov
addr16
fwait
dec
dec
insb
imul
jae
lcall
and
imul
stc
adc
les
lods
inc
pop
push
in
push
mov
sub
jb
dec
jns
pop
adc
pop
std
sbb
push
cmpsb
inc
mov
jae
mov
lret
push
lahf
test
aaa
cmpsl
and
cmp
fildll
mov
movsl
pop
aas
add
pop
addr16
xchg
inc
sahf
in
ljmp
dec
insb
test
movsb
and
xchg
add
mov
mov
div
cmp
in
mov
in
cmc
in
push
push
or
dec
fwait
or
call
pop
lods
dec
mov
jge
mov
add
mov
lods
cltd
repnz
aas
pop
xchg
sub
jl
inc
inc
rclb
dec
popa
xchg
push
fcoms
push
fsubr
add
imul
xchg
pop
ret
sub
or
adc
xchg
push
inc
push
out
insb
loop
pop
mov
sbb
in
bswap
pop
sti
push
xchg
adc
and
inc
lcall
sbb
mov
enter
in
decb
dec
test
das
in
xor
ljmp
jp
sbb
jg
push
xchg
mov
imul
or
sub
or
xchg
out
inc
xchg
test
shr
popf
stos
jne
cmp
and
cmp
es
push
pop
mov
imul
cli
xchg
inc
or
negb
lcall
lods
out
lods
cmp
adc
imul
fdivl
in
adc
lret
jb
sbb
push
out
jecxz
pushl
xchg
adc
mov
jae
pop
adc
cmp
inc
jb
push
mov
sbb
xchg
out
repz
push
gs
mov
mov
sub
mov
ss
dec
inc
or
sub
loopne
jmp
cmc
icebp
lahf
push
call
push
inc
jmp
pop
pop
insb
std
and
mov
cmp
xchg
sub
sti
movsb
mov
shrb
shll
lahf
test
iret
cmp
pop
aam
ss
test
inc
es
push
gs
ret
cmp
sub
arpl
add
sti
sub
jb
gs
jae
xor
hlt
sbb
jl
xchg
pop
out
rolb
jl
mov
and
cmp
inc
sbb
aad
mov
mov
add
cmpsl
fisubrl
xchg
mov
adc
decb
mov
out
add
fisttpl
adc
pop
icebp
jl
leave
adc
adc
imul
and
sub
sub
ret
adc
je
sti
mov
xchg
jge
test
movsb
popa
push
das
loop
xchg
dec
mov
adc
fdivrs
mov
and
mov
lds
icebp
mov
enter
and
fdivrl
gs
popa
jge
sbb
stos
fldenv
stc
aad
mov
imul
ficoml
ret
inc
data16
je
rcrl
data16
mov
enter
sub
mov
aas
sbb
addb
pop
test
jae
repnz
xlat
stc
mov
mov
repnz
sbb
jmp
jno
cmp
cmp
push
or
mov
push
aaa
mov
or
fadds
mov
loope
cwtd
and
lods
les
pop
test
repnz
aaa
fistpl
inc
sub
push
fimull
xchg
scas
ljmp
je
cwtl
sbb
fwait
outsb
adc
push
adc
xor
mov
lods
mov
jae
pop
rolb
fucomp
pop
bound
xchg
xchg
add
pop
mov
xor
mov
push
cmp
cmp
jae
push
inc
ud2
lcall
and
inc
stos
aaa
out
aam
cmp
into
decb
gs
or
jnp
add
gs
mov
xchg
mov
add
and
xchg
cmp
jge
mov
sub
std
mov
lds
add
shlb
loope
xor
mov
out
adc
cmc
pop
sbb
xchg
push
inc
in
test
es
jecxz
xchg
flds
imul
enter
xchg
shrl
xor
add
mov
dec
lret
add
enter
mov
popf
sub
scas
arpl
les
adc
out
popa
add
aam
addr16
stc
mov
mull
mov
xchg
clc
or
add
push
xchg
dec
shlb
inc
daa
lods
xchg
inc
cmpsl
cmc
mov
add
xchg
pop
in
loope
shlb
lea
xor
mov
push
insb
sub
inc
jbe
sbbb
push
xchg
in
mov
lret
push
icebp
cmp
xchg
mov
out
stos
das
dec
push
jno
xor
jnp
add
jle
xchg
push
cli
idivb
fabs
mov
pop
popf
jl
addr16
pop
popa
scas
xchg
aam
in
nop
add
mov
push
stc
lahf
flds
sub
dec
pop
out
out
adc
dec
xorb
mov
xlat
push
pop
testb
les
fistpll
test
shrb
fldenv
add
call
adc
or
lods
aam
xor
popa
inc
fcomp
adc
ret
out
loopne
sbb
pushf
stos
add
xchg
push
sbb
sbb
adc
push
testb
out
push
sub
lock
insb
arpl
or
dec
mov
scas
jmp
stos
jecxz
or
cmpb
bound
add
jmp
repnz
inc
test
movsl
test
or
mov
mov
adc
lret
fsts
int
mov
or
and
rolb
inc
jb
pop
or
xor
data16
es
adc
adc
notb
icebp
cpuid
lcall
loopne
cs
sub
scas
jmp
out
push
out
sti
pop
pop
sti
cmp
sbb
into
cmpsl
push
mov
mov
outsl
mov
push
jbe
ss
push
out
cli
mov
outsb
cmp
mov
inc
inc
adc
data16
push
lds
out
fiaddl
or
stos
xor
daa
clc
test
scas
clc
push
sub
push
xor
out
mov
mov
dec
in
dec
repnz
jbe
cmp
loope
data16
xchg
sub
repnz
push
iret
nop
inc
jmp
xchg
clc
mov
mov
adc
mov
test
xchg
jae
mov
sub
fadds
fidivrs
fcmovb
cli
and
push
aam
add
pop
lods
aas
mov
mov
lods
xchg
icebp
push
sti
xchg
imul
and
or
popa
out
les
add
into
fidivrl
iret
pop
xchg
add
addr16
cmp
lea
clc
orl
pop
inc
sbbl
scas
inc
rcrl
orl
jb
shlb
movsl
popf
sbb
or
pop
sbb
cmp
loope
push
and
cli
cmp
xlat
or
test
fildl
int
sti
pop
mov
pushf
xchg
ds
inc
dec
xchg
xchg
sbb
add
notb
clc
adcl
es
mov
mov
loope
xchg
push
xchg
popa
imull
pop
pop
mov
mov
mov
xor
enter
jecxz
push
push
adc
shrl
pop
pop
jnp
fidivl
xchg
push
xor
leave
cld
mov
inc
adc
xchg
adc
mov
stos
xor
ret
jmp
mov
sets
pop
mov
inc
mov
loope
into
ss
ja
mov
clc
loop
int
jo
aaa
jbe
call
dec
jg
mov
adc
andb
add
imul
sub
pusha
add
or
xor
data16
lretw
mov
jo
lock
jmp
xor
lret
push
sub
fs
jle
stos
adc
sub
fs
loopne
mov
loopne
dec
lret
out
pop
clc
mull
adc
sbb
cmp
loope
fwait
hlt
xor
decb
mov
repz
jb
inc
popf
rorl
fsubs
pop
adc
dec
outsb
xchg
fwait
add
sbb
xor
push
jae
out
cld
push
adc
and
sub
aas
xor
cltd
inc
ds
addl
jle
inc
pop
dec
or
mov
mov
divl
mov
jno
iret
and
mov
push
lods
out
enter
jmp
aam
mov
sbb
lcall
hlt
cmpsl
mov
stos
test
pop
loopne
movsb
enter
movsb
inc
mov
pop
fistpll
aas
fists
fadds
mov
push
fnstenv
adc
ficompl
in
mov
mov
cmc
dec
mov
mov
mov
jo
cmp
insl
jg
inc
cmpsb
icebp
push
fs
fistpll
fisttps
fs
inc
nop
data16
add
adc
pop
jns
sbbl
pushf
repnz
je
inc
add
push
in
aas
sti
movsb
push
sub
sub
sti
xor
clc
mov
push
popf
sub
ret
push
or
call
xchg
aas
cwtl
xor
pop
inc
xor
mov
lods
out
lcall
inc
add
into
outsl
movsb
out
arpl
pushf
divl
mov
mov
fldcw
xor
scas
push
pop
inc
ds
sarl
lahf
pop
push
pop
test
rorl
jae
mov
or
inc
lahf
aam
mov
dec
and
and
push
shr
daa
repnz
dec
pop
rcrb
pop
js
cli
mov
frstor
push
add
mov
in
imul
and
fsts
jne
jae
mov
mov
cwtl
loop
xor
lods
jo
push
incl
mov
sub
xlat
xchg
out
mov
leave
cli
movsb
mov
ljmp
sub
ret
int3
arpl
out
std
adc
cwtl
xchg
or
fcmovnu
fcompl
jo
xrelease
int
push
jmp
ds
xchg
cmp
add
insl
call
or
int
cmpsl
xchg
dec
push
pop
stos
xor
leave
in
inc
dec
bound
mov
loop
addr16
stc
push
xchg
mov
adc
sbb
repnz
jb
inc
insl
mov
cmp
xor
cmp
or
sub
mov
repnz
rcrb
stc
and
std
out
mov
mov
idivl
ffree
shrb
mov
add
call
xor
popa
xchg
push
cld
mov
ret
mov
pop
imul
push
outsl
jno
inc
loop
pop
inc
xchg
fstpl
ss
test
adc
lock
xchg
call
int3
daa
mov
lock
xchg
mov
int
xchg
add
mov
aad
in
and
xor
lcall
push
xchg
dec
aad
ss
dec
pushf
out
cli
insl
or
iret
pop
shrl
cli
iret
push
int
int3
xchg
cmp
insl
cmp
gs
sbb
mov
mov
inc
outsl
pop
les
mov
js
cld
arpl
or
das
lock
dec
sub
sti
cmp
adc
pop
repnz
xchg
lcall
mov
arpl
and
test
dec
add
dec
sarb
inc
sub
fisubrs
out
std
mov
jae
push
sub
adc
and
test
pop
jbe
lods
adc
xor
and
or
movsl
mov
jne
mov
scas
test
cmpsb
fsincos
jnp
jns
hlt
test
out
adc
in
leave
ja
add
pop
sbb
out
shll
rorl
push
mov
test
cmp
inc
shl
icebp
pushf
in
je
jecxz
mov
push
sub
push
mov
js
add
xchg
in
addl
or
lret
jb
arpl
sub
inc
sbb
lahf
xor
les
inc
xlat
push
or
jmp
cmp
adc
push
dec
arpl
outsb
mov
popl
adc
loopne
adc
jns
xchg
imul
lock
xchg
mov
or
cmc
xorl
inc
inc
mov
in
sbb
inc
inc
mov
jne
in
push
shlb
fisttpl
jmp
mov
gs
cmc
scas
sbbb
xor
xor
xor
mov
sub
mov
xlat
pusha
bound
pop
xchg
lcall
xchg
jp
and
insb
mov
inc
sbb
fs
jmp
inc
popf
mov
out
insl
mov
movsl
nop
and
add
iret
sbb
jle
mov
mov
jg
sti
mov
mov
cmp
mov
adc
cmp
test
lret
mov
mov
jns
lods
out
popf
push
scas
dec
cmpsb
sub
in
adc
xchg
fldpi
mov
incb
jne
ret
dec
push
lods
daa
add
mov
insl
mov
dec
faddl
sub
call
add
popf
adc
adc
mov
lods
mov
sbb
sbb
add
jns
pop
mov
rorl
cld
and
mov
js
and
xor
clc
andl
js
cltd
pop
stos
lds
xorb
iret
mov
out
push
cs
shrl
xor
fwait
push
stos
sub
mov
xor
add
cmp
popa
mov
pop
test
xchg
aas
fadd
icebp
rcl
mov
mov
mov
mov
jecxz
mov
sub
les
sbb
sub
ss
dec
into
jne
cld
aas
jne
test
add
mov
push
data16
imul
lods
cs
push
inc
xor
fs
int3
xchg
and
into
sub
movb
stc
pop
aam
insb
cmp
mov
cs
jg
pop
pop
iret
jge
pop
dec
adc
mov
cwtl
jmp
ss
push
mov
adcl
jmp
xlat
push
data16
rcll
dec
dec
imul
lds
pusha
scas
jmp
and
push
xor
jno
pop
jle
int3
fisttpl
adc
lea
inc
stc
cmp
jge
fwait
and
ja
sub
lret
mov
push
mov
sub
or
add
cs
push
adc
or
and
mov
push
nop
and
in
mov
movsb
mov
shl
ljmp
cli
push
aas
std
jns
mov
and
xchg
add
pop
xor
push
jg
jmp
js
pop
inc
dec
cmp
shll
adc
or
xor
jno
xchg
mov
lods
inc
mov
arpl
fisttpl
xchg
aaa
icebp
mov
or
sahf
pushf
sub
pop
inc
lods
in
in
push
add
and
and
or
cmp
call
test
int
test
inc
ret
push
ljmp
icebp
nop
dec
and
out
int3
aad
test
push
inc
ja
inc
fs
and
repnz
xor
mov
test
fcom
xor
sub
pop
stc
pushf
mov
pop
enter
jmp
imul
sti
pop
lds
adc
jle
jp
je
arpl
add
mov
mov
push
adc
xor
dec
dec
adc
ret
sub
fstpl
pushf
mov
pop
cltd
aaa
or
cwtl
lods
adc
mov
fsubrp
add
dec
pusha
into
push
out
ds
xchg
movsb
test
mov
adc
mov
cmp
dec
sub
dec
testb
sub
es
fs
rcll
call
mov
out
push
imul
cmc
mov
pop
push
or
je
mov
push
pop
mov
mov
mov
ljmp
rcrl
pop
aaa
pop
pusha
jge
mov
popf
inc
mov
dec
mov
fs
iret
loopne
or
pop
sub
dec
pop
fmull
mov
dec
dec
sti
int3
add
arpl
sub
pop
bound
fldl
adc
rcr
inc
add
mov
cmp
adcb
add
sbb
add
clc
faddl
sbb
jmp
faddl
iret
or
push
lock
in
testl
or
repnz
arpl
cltd
fcomps
inc
idivb
xchg
pop
sbb
cmp
jmp
out
sarl
nop
pop
movsb
sub
imul
test
xor
outsl
jns
mov
es
out
cltd
push
popl
call
adc
test
sub
dec
cltd
outsb
pop
jns
movsl
int3
cmpsb
rclb
sub
nop
std
mov
mov
mov
rorb
and
dec
add
jb
bound
push
or
mov
mov
mov
rorb
and
dec
add
jb
bound
push
or
mov
mov
mov
rorb
and
dec
add
jb
bound
push
cmp
mov
mov
mov
rorb
add
dec
jne
cli
mov
mov
add
pop
push
push
and
sbb
fcoms
mov
and
js
dec
adc
sub
inc
or
mov
call
repz
and
js
push
adc
xor
inc
adc
mov
mov
lcall
push
inc
shr
push
loope
xchg
pusha
fldenv
arpl
mov
inc
test
ret
jbe
mov
movsb
bound
es
push
push
fcomps
sub
sub
cmpsb
xchg
xor
or
jb
addr16
cmp
jl
hlt
mov
je
pop
pop
mov
xchg
cwtl
in
xor
dec
ljmp
or
mov
mov
jnp
add
mov
repnz
cltd
push
mov
mov
inc
pop
push
sbb
gs
lea
xor
cwtl
mov
xchg
adcl
fnstcw
jmp
push
enter
int
ja
mov
outsl
add
inc
arpl
jae
inc
adc
mov
rcll
scas
ret
mov
cld
push
or
pop
pop
and
push
add
ss
addl
mov
lds
cmc
jl
jo
ja
pop
pop
push
pop
pop
or
sub
ficomps
test
adc
in
std
push
sub
sub
inc
or
mov
enter
test
mov
and
js
dec
adc
sub
inc
or
mov
enter
test
mov
and
decl
adc
cmpsl
lock
ljmp
shlb
pop
cld
psllq
aad
js
scas
nop
or
mov
and
and
mov
mov
dec
pop
stos
push
fldcw
rcl
daa
jge
fcompl
mov
xchg
sti
mov
sub
and
and
sub
or
add
xor
pushf
out
mov
jge
or
inc
sub
mov
dec
mov
ljmp
xchg
movsb
adc
fdiv
inc
adc
fucomp
push
mov
xchg
out
pop
mov
repz
idivb
xor
mov
sub
sub
adc
lret
popa
add
sbb
aam
sbb
repz
subl
shl
insb
je
nop
xlat
cmp
mov
mov
mov
cmc
ret
pop
sub
sbb
in
bound
stos
add
outsl
add
mov
push
pop
cmp
or
mov
scas
test
mov
inc
out
jne
out
jmp
not
int
loop
ret
dec
cmp
fldenv
cmp
dec
adcb
cmc
jbe
test
push
call
push
mov
mov
bound
dec
push
add
les
add
dec
fstl
outsl
dec
in
mov
daa
inc
lahf
xchg
cmp
mov
sbb
sbb
xor
add
dec
mov
iret
pop
push
push
stos
push
xorb
popa
mov
push
orb
shl
nop
adc
pushf
test
lahf
push
cmp
or
mov
pushf
push
mov
inc
int3
pop
es
cs
push
xor
inc
std
mov
out
dec
shll
fistl
test
call
je
in
add
fcmovnbe
xor
mov
ljmp
add
and
loopne
adc
xor
pop
sub
lods
imul
sbb
stc
cmpsl
test
xchg
adc
push
scas
fcoms
jl
cmp
sbbb
cltd
dec
pop
xchg
sahf
xlat
stos
aam
call
std
push
push
add
lret
pop
jb
clc
jp
repz
bound
or
out
jge
add
pop
push
lret
pusha
rcl
cmp
xor
sub
jae
mov
ret
loopne
aad
xor
outsl
xchg
dec
sub
enter
aas
or
add
cmp
dec
cmp
scas
dec
dec
sbb
mov
cmpsb
inc
xchg
fstp
outsl
inc
dec
and
adc
cmp
sbb
mov
pusha
dec
clc
mov
mov
inc
pushf
inc
mov
push
mov
or
dec
stc
dec
fstpt
xlat
outsl
cmpsl
push
fmulp
add
xchg
fs
js
ja
dec
int3
jmp
sti
loopne
cs
fcoms
xchg
xchg
or
fldt
in
jns
jl
rcrb
xor
sbb
imul
in
test
xlat
sbb
xchg
xchg
shr
enter
les
sti
cld
nop
test
adc
rorb
or
mov
aas
mov
std
test
add
pop
std
fisubrs
mov
and
jne
jecxz
rcr
ss
std
and
mov
loopne
mov
lds
js
adc
fmul
mov
inc
in
mov
pop
or
clc
mov
sbbl
xlat
scas
adc
cmp
jae
or
test
jecxz
out
daa
sbb
mov
jb
rep
rsqrtps
cmp
lret
shr
jp
jns
cmp
fsubs
lret
imul
std
pop
mov
mov
xor
or
sahf
insb
sbb
roll
or
pop
adc
mov
push
mov
or
jmp
mov
fdivl
cli
clc
xor
mov
repnz
mov
cmc
popl
into
inc
pop
hlt
div
cmpb
inc
sbb
mov
mov
push
test
cmp
dec
loopne
inc
je
jbe
inc
sub
out
cmpb
or
imul
sbb
add
arpl
mov
aad
bound
inc
cmp
mov
lahf
mov
mov
shl
mov
aas
inc
popf
xchg
leave
ljmp
xchg
lahf
cmpb
sahf
cmp
push
xchg
into
push
outsb
push
mov
xor
sub
and
cli
cmp
out
popf
gs
push
xchg
sbb
xchg
int3
shrb
mov
mov
mov
or
pop
mov
pop
mov
insl
jmp
fs
dec
or
xchg
sub
lds
fs
and
lahf
adc
scas
xchg
out
stos
in
stc
cld
or
push
jbe
or
inc
das
mov
jle
mov
in
lret
jle
pop
testl
push
sbb
xchg
adc
sbb
cmp
in
dec
clc
rcrb
jge
push
adc
jge
mov
adc
insl
xchg
incb
add
mov
leave
mov
and
jns
in
nop
lret
mov
fmuls
or
hlt
jge
cmp
sub
jl
dec
aaa
adc
cmp
and
popf
xchg
inc
inc
fstpt
outsl
fwait
jne
add
push
push
cmp
lahf
fidivrl
pop
pushf
xor
fst
fdivl
xlat
xchg
mov
push
nop
sbb
repnz
je
push
push
inc
aam
inc
out
and
fimull
test
dec
jno
mov
fs
jmp
inc
out
fnstsw
mov
mov
pusha
mov
mov
cmpsb
aam
stc
and
sbb
test
mov
mov
aaa
push
test
repnz
lock
cmp
xor
and
sbb
xchg
mov
mov
js
cmp
lds
sbb
mov
add
stos
lcall
inc
sbb
test
or
mov
bound
test
mov
jbe
int
xchg
aas
inc
inc
out
in
xchg
push
add
lcall
push
push
incb
fmuls
push
mov
sbb
in
lds
mul
into
enter
xchg
out
int
mov
and
xor
stos
ljmp
lds
sub
xchg
jnp
push
subb
aaa
push
rcrl
scas
inc
xchg
xor
test
dec
aas
cmp
push
aas
mov
lods
dec
mov
sbb
outsb
sbb
mov
push
inc
jle
pushl
fs
aas
adc
jle
loop
jae
dec
jno
mov
popa
scas
std
mov
lret
data16
jb
sarb
mov
popf
es
xchg
inc
rcll
mov
or
test
jb
lret
lret
mov
cmpsl
xor
pop
cmc
test
mov
shlb
aaa
xor
out
mov
mov
inc
mov
pop
out
inc
xchg
leave
cwtl
shll
out
aam
nop
rol
test
ret
pusha
and
sub
lea
cmp
lock
sbb
sub
and
mov
fwait
push
std
shrl
mov
bound
lds
mov
mov
jle
sbb
jmp
mov
in
sub
xchg
adc
movsl
in
cld
mov
test
jno
test
clc
cmc
ficoms
and
stos
add
mov
cwtl
dec
and
test
fs
into
aam
out
aaa
sub
mov
push
push
and
cmp
out
sub
cmp
scas
sub
aas
cmpsb
mov
pop
sub
les
das
lahf
inc
insb
ljmp
stos
out
jne
sbb
test
mov
mov
jns
jge
sub
push
pop
fisttpl
jl
add
add
lcall
loopne
jge
inc
enter
mov
jb
xor
dec
or
cmp
fdivrs
pusha
mov
push
int
adc
out
mov
loopne
jmp
daa
mov
add
push
push
add
fldenv
mov
out
data16
aam
pop
call
add
cli
in
pushf
shrb
std
or
pop
add
aas
daa
add
mov
xchg
cmp
dec
sub
pop
jns
out
adc
scas
scas
out
xchg
movsb
mov
call
outsl
pop
sub
cmp
adc
je
cmp
daa
int
or
push
jne
imul
and
xor
daa
pop
inc
jg
test
xchg
jp
ret
sar
cmp
dec
pusha
mov
cmpb
xchg
jb
mov
aas
add
mov
into
call
inc
cwtl
mov
pop
mov
pop
push
outsb
jmp
sbb
pop
cs
xor
pop
push
jae
cmp
jecxz
leave
mov
ds
push
stos
lea
xor
push
sbb
shll
inc
jnp
outsl
roll
mov
outsb
inc
pop
xchg
cmpl
pop
in
or
enter
in
cmp
es
push
xor
dec
sbb
pop
mov
insb
out
adcb
sti
mov
sub
push
pop
inc
stos
mov
mov
xchg
pop
and
sub
rcl
and
mov
fisttpl
outsb
push
fs
mov
pop
loop
je
sbb
sub
out
xchg
lods
iret
fbld
push
mov
xchg
inc
pop
fimull
dec
cmp
mov
mov
lcall
imul
arpl
out
js
inc
mov
mov
push
jbe
inc
xchg
idivl
daa
loope
add
adc
and
sbb
lahf
add
cmp
ret
push
fists
xor
sub
cwtl
mov
in
mov
or
jns
cmp
addb
and
push
mov
push
sahf
xchg
aad
push
xor
add
xor
cli
out
dec
int
sbb
sbb
hlt
sbb
and
cs
je
popf
cmp
mov
dec
aaa
enter
cmp
push
out
stos
xchg
cmp
add
ja
and
popa
orb
or
into
push
out
sbb
aas
pop
shl
cltd
cmp
loope
xor
popa
jge
iret
ret
add
cld
dec
jg
cli
lods
inc
sbbl
aas
mov
imul
jp
push
mov
jnp
cmp
cltd
inc
inc
push
xor
or
jae
scas
pop
test
mov
xor
sbb
push
cmpsl
sbb
add
or
lock
int3
dec
add
mov
sarl
scas
js
aad
mov
pop
fstps
push
mov
cmp
jne
mov
fiadds
xor
rorl
dec
add
pop
mov
add
or
mov
mov
rorl
popa
push
nop
repz
popa
hlt
jb
xchg
and
cmp
shr
divl
mov
pop
pushf
cli
incb
out
dec
in
jae
into
pop
jp
push
cmc
fadds
lahf
xor
and
repz
ja
cmpsb
adc
daa
lock
sar
mov
jbe
cmc
in
hlt
cmc
ds
and
and
lcall
or
inc
loopne
cmpsl
lret
fwait
dec
mov
in
inc
lret
inc
sbb
cmp
xor
call
pop
gs
or
mov
mov
sub
cmp
jo
icebp
pop
jecxz
lret
int
mov
fldenv
aas
mov
imul
mov
fisubrl
or
andl
js
sti
daa
pop
pop
sbbl
jo
push
pop
icebp
adc
push
adc
xor
popa
dec
mov
daa
inc
or
adc
jo
cmp
jg
inc
xchg
add
mov
inc
mov
mov
xchg
inc
jne
stos
in
loopne
bound
cmc
rcl
mov
insb
test
mov
negl
xchg
test
cmp
sub
xchg
dec
mov
daa
les
add
and
daa
and
push
sub
pop
jns
fdivs
mov
pop
hlt
cmpsb
loope
push
adc
lahf
int
sbb
xor
in
sahf
aad
and
out
mov
or
xorl
cli
mov
mov
pop
or
push
or
add
sbb
int3
cld
sbb
shlb
shll
addr16
add
out
leave
es
dec
stos
mov
xchg
push
add
mov
movsb
cmc
pop
jmp
mov
mov
mov
jl
sbb
out
bt
dec
jb
sbb
hlt
pop
mov
pop
add
and
int3
clc
jg
and
into
push
mov
pop
popa
push
cmp
mov
scas
add
test
mul
sarl
insb
push
or
cltd
mov
cld
mov
or
rorl
adc
ds
notb
out
sub
xchg
es
movb
int
inc
jnp
dec
int
jp
loop
xor
cmpl
lret
dec
fucom
sbb
mov
sarl
adc
push
mov
sbb
fstpt
loop
aaa
sbb
lds
sub
xchg
cwtl
in
pushf
in
push
pop
imul
adc
fs
cmpsb
xchg
inc
in
hlt
or
inc
inc
cmp
push
sbb
push
int
into
lret
sub
xor
ss
arpl
inc
out
shll
imul
jno
incb
pusha
push
xchg
sub
jae
sub
stc
pop
jbe
xchg
add
ljmp
mov
sub
mov
fidivrs
jl
inc
cmp
jb
mov
test
xchg
and
lret
call
add
mov
add
pop
mov
mov
repnz
jp
rcll
mov
fldenv
lods
test
jnp
xchg
push
sub
mov
js
xor
test
adc
inc
sahf
dec
sahf
jmp
pop
cld
into
push
mov
mov
movsl
pop
jecxz
pop
lahf
dec
rorb
ret
std
call
scas
xchg
jge
cs
lret
cmp
push
adc
xchg
dec
xor
fnsave
rorl
lds
ror
mov
dec
sbb
jmp
xor
push
or
les
out
enter
ljmp
bound
dec
push
out
jnp
sub
and
lahf
jmp
es
cmp
fst
xchg
dec
orb
mov
fsubrs
pushf
or
sub
cmp
std
mov
adc
bound
popf
sbb
leave
and
adc
dec
jl
xor
xor
aam
push
cli
jno
sub
daa
add
aam
mov
mov
fisttpll
sbb
hlt
push
fwait
leave
into
jle
je
sub
jge
hlt
mov
addl
jbe
mov
inc
sub
sarl
jge
and
fdivrl
clc
xor
gs
push
dec
fisubl
sub
into
jbe
jge
mov
push
daa
push
lcall
clc
subl
leave
dec
xchg
pushf
and
mov
pop
loop
xor
divl
fldcw
les
in
pusha
mov
sbb
out
mov
mov
mov
sbb
push
mov
insl
ss
sbb
je
in
fsubs
sbb
rorb
jno
add
insb
outsb
add
in
cs
lds
cvtps2pi
cwtl
xchg
mov
out
ljmp
pusha
fnsave
push
or
out
adc
cmp
iret
xchg
fsubrp
test
ret
arpl
mov
fwait
adcl
mov
cmp
sub
outsb
popf
cld
add
lcall
orb
push
push
fwait
sbb
adc
xor
orb
add
notb
mov
ret
ficoms
mov
sub
ja
jns
push
insb
mov
scas
out
int
inc
cmp
rcrl
mov
push
outsb
jp
fisubrs
data16
rcrl
iret
dec
mov
inc
jmp
xor
or
sbb
pop
xor
stos
sub
sbb
inc
scas
out
sub
lds
stos
mov
cmpxchg
mov
cmp
mov
and
mov
sbb
sti
push
adc
cmc
aad
pop
into
mov
ret
notl
fwait
rcr
cli
jecxz
test
or
mov
sub
mov
mov
in
outsb
stc
mov
mov
sarl
fsubl
mov
lock
repz
and
mov
adc
clc
in
add
mov
cmp
das
inc
pop
adc
dec
xor
leave
movsl
ret
shll
mov
imul
push
movsl
xor
jle
xlat
add
mov
jmp
jecxz
xchg
sub
dec
cmpb
addr16
jmp
clc
sub
add
mov
pushf
jbe
dec
pop
outsl
push
mov
mov
or
lock
push
rcll
inc
lods
add
pop
inc
fwait
lods
out
insl
add
mov
mov
mov
adc
dec
es
popf
cmp
xchg
enter
out
fsubrs
dec
imulb
rorl
xor
add
ret
cmpsb
scas
mov
cmp
test
je
mov
cmp
mov
pop
add
lds
arpl
repz
clc
add
inc
outsb
in
subb
out
xlat
add
mov
ret
fistps
push
nop
out
clc
lcall
gs
fs
xchg
test
fwait
and
xchg
mov
iret
sub
nop
inc
outsb
imul
aaa
cmc
cli
pop
fcompl
dec
or
dec
mov
jae
negb
xlat
scas
xor
insl
lahf
push
pop
arpl
inc
xor
popf
lea
das
icebp
mov
leave
pop
sbb
mov
mov
sub
xorb
fdivrs
ljmp
test
cmp
rcll
test
ficoms
int
jno
cmp
jecxz
roll
pop
ja
or
or
pop
popa
out
jle
out
ret
inc
ret
lret
jo
lahf
orl
or
ret
pop
mov
testb
in
xchg
push
scas
mov
inc
pop
pop
sub
adc
mov
nop
dec
cli
lret
cmp
loopne
movsb
jno
jns
popa
and
test
imul
and
mov
aam
loopne
loope
ret
xchg
outsb
add
hlt
les
andb
and
pop
jp
sub
in
js
inc
pop
xlat
lds
iret
push
pop
cmp
in
in
pushf
in
xor
daa
cmpsb
repz
clc
push
cld
imul
js
jp
scas
add
mov
ret
stos
cmpsl
ss
mov
movsb
cmpb
dec
mov
adcb
xchg
pop
call
sahf
lret
sub
xchg
add
jno
pop
loopne
in
mov
in
push
jg
xor
fidivrl
fdivrs
sub
ret
arpl
or
sti
xchg
cs
sub
mov
add
mov
je
fs
mov
adc
test
repz
in
cld
in
sarl
sahf
cld
pop
loop
test
pop
fildll
inc
xchg
cmp
lds
push
pushf
movsb
jl
pop
add
stos
push
test
adc
mov
cwtl
repz
cmc
cmp
xchg
lcall
push
xor
lds
xchg
aam
lock
mov
sahf
inc
lods
testb
xlat
xor
data16
xchg
fwait
pushf
mov
out
mov
push
xchg
out
popa
lahf
adc
clc
stos
push
push
mov
pop
flds
jns
adc
emms
addr16
mov
jecxz
dec
and
bound
adc
fucomp
or
lcall
data16
rorb
lds
je
cs
adc
mov
loopne
mov
test
or
or
popa
into
das
rcrb
pop
lcall
mov
cmovle
dec
insl
pop
jnp
aam
sub
pop
inc
cs
add
or
inc
xchg
lcall
test
xor
in
mov
cld
dec
xchg
ss
filds
mov
sbb
mov
mov
push
push
lret
push
loop
push
dec
lahf
in
xchg
jnp
call
pop
adc
js
pop
jle
inc
cmc
xor
xchg
mov
bound
adc
mov
daa
mov
sub
in
push
push
jmp
xchg
xor
shrb
fstps
push
idivb
fsubs
pop
insb
fmull
or
dec
pop
jnp
sub
xor
test
in
es
repz
mov
cmpsl
adc
sub
inc
or
mov
enter
test
mov
and
js
dec
adc
sub
inc
or
mov
enter
test
mov
and
js
dec
adc
sub
inc
or
mov
enter
test
mov
and
js
dec
adc
sub
inc
or
mov
enter
and
cmp
sub
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
add
xor
and
loopne
sub
xchg
lcall
aam
dec
in
in
adc
add
xor
and
push
pop
inc
dec
je
fs
lcall
aam
hlt
lret
in
or
cmp
dec
pop
pop
dec
insb
jp
push
xor
stos
aam
stos
movsl
test
mov
jge
imul
push
jnp
popf
inc
test
adc
cmpb
lds
repnz
xchg
dec
sti
mov
aad
flds
jl
sub
jb
jne
mov
aam
hlt
stos
sbb
int
inc
xchg
xlat
rcrb
addr16
mov
push
aam
cmp
hlt
add
adc
std
testb
stos
pop
inc
dec
mov
gs
pop
inc
test
addl
xor
inc
cli
mov
mov
pop
pop
pop
cmp
jmp
mov
push
push
lret
or
in
jae
fcmovnbe
stos
das
inc
movl
stos
hlt
stos
xchg
iret
xchg
or
fstpl
sbb
sub
push
dec
je
jge
lea
mov
lret
in
js
popa
or
push
inc
daa
and
xor
cmp
shr
mov
mov
pop
cmp
adc
or
loope
mov
in
aam
scas
mov
jno
push
dec
sbb
inc
dec
je
fs
lcall
aam
lret
in
adc
add
xor
and
push
pop
inc
dec
je
fs
lcall
aam
lret
in
adc
sub
mov
cmp
mov
aam
and
iret
mov
pop
fisttpl
sub
pop
mov
loope
inc
dec
ds
rcrb
xchg
mov
pop
dec
out
gs
popf
push
fistl
jbe
stos
jecxz
dec
popf
inc
das
sbb
mov
push
repnz
shll
push
push
inc
xor
cmp
pop
lret
outsl
jb
hlt
dec
les
xchg
imul
inc
pop
out
push
xchg
rclb
xor
jle
cmp
and
lods
push
fadds
cmc
jno
stos
mov
stc
mov
jmp
mov
push
ret
add
cmp
jno
jg
nop
or
std
fdivl
inc
mov
push
add
or
mov
push
mov
jl
out
test
js
inc
inc
je
stc
xor
jno
xor
out
add
out
rclb
fidivl
cmp
and
xchg
sarb
jp
stos
push
pop
icebp
aam
scas
add
lea
pusha
push
lea
hlt
imul
insl
and
leave
int3
movsl
mov
mov
jge
jmp
lret
adc
jo
add
test
cmp
insl
inc
mov
cmp
jns
sbb
imul
mov
gs
mov
sub
sbb
pop
dec
pop
jb
lods
pop
dec
and
jae
pop
sbb
maxps
aad
push
mov
enter
dec
adc
jbe
test
test
nop
ret
mov
fs
and
push
aaa
lods
outsb
sbb
addr16
add
push
mov
adc
jmp
sub
pushf
push
je
sbb
rcr
lcall
mov
mov
dec
js
sbb
clc
ret
pop
push
popf
das
jnp
int3
addb
mov
and
sub
pusha
mov
and
repz
and
push
cwtl
push
and
jns
sbb
jno
push
leave
push
adc
hlt
das
les
mov
push
aam
push
jb
push
push
arpl
mov
out
insb
mov
sbb
fadds
xor
xchg
mov
fwait
int
test
ss
jmp
dec
adc
fisubrl
mov
cwtl
adc
xchg
inc
lcall
jb
sbbl
loope
jne
call
adc
pop
sbb
dec
pushf
dec
cmp
icebp
cltd
out
movsb
aam
bound
pop
mov
sub
repz
or
cld
mov
fisubrl
mov
test
or
loope
xchg
lret
cmc
dec
xchg
dec
lea
popf
mov
xchg
cmp
ret
orb
fdivr
call
cmp
leave
cltd
pop
jns
sub
dec
stos
xchg
ret
cmp
inc
mov
add
or
jl
push
sbb
sbb
jge
dec
data16
movsl
sahf
inc
ret
jno
adc
jne
pop
or
sti
ss
sbb
dec
lea
sbb
rcrl
push
fwait
enter
lods
lea
jg
arpl
mov
mov
mov
popa
adc
xor
cmp
insl
adc
stos
jmp
dec
sub
sbb
sbb
jno
cmp
je
les
aad
xchg
fld
inc
or
ja
sahf
jg
test
out
addl
pop
stos
and
push
xchg
insl
inc
sbb
rcrl
cmpsb
fstpl
and
cmc
and
out
xor
xchg
movsb
pop
mov
cmpl
cmp
jge
scas
ja
xchg
adc
outsb
inc
sub
in
hlt
roll
add
mov
push
lret
icebp
mov
inc
test
scas
inc
mov
out
jmp
outsb
mov
decl
stos
xchg
cmp
gs
sub
dec
or
das
negb
adcb
clc
fsubrl
xchg
stos
aas
cmp
mov
cmp
outsb
jbe
xor
cmp
cmp
lds
jno
mov
call
adc
out
ljmp
mov
adc
inc
sarb
repz
mov
dec
int3
sti
mov
inc
iret
test
dec
insl
dec
push
xchg
mov
mov
xchg
test
inc
sarl
dec
mov
mov
dec
pop
dec
test
and
pop
rolb
or
adc
cmp
pop
add
out
repnz
jbe
push
mov
fmuls
jns
faddl
mov
lock
jne
add
sub
pop
enter
loopne
shlb
fldt
pop
sbb
subb
fisttps
pop
pop
inc
out
lret
mov
enter
mov
jl
test
push
out
stos
imul
jae
add
sub
xchg
mov
dec
cmp
adc
mov
movsb
cmp
rcl
fcomip
pushf
cmp
push
in
jle
xchg
adc
scas
cs
dec
movsb
push
repnz
and
mov
sti
xor
or
insb
push
adcb
sub
nop
sub
rcrl
repz
jge
jg
fldl
test
out
push
mov
ljmp
shrb
sub
or
or
mov
fs
in
sbbb
inc
mov
xchg
sbb
imul
mov
fwait
sti
mov
cmp
and
int
xor
cmpsl
xor
testb
mov
nop
int
lods
decl
negl
fcomip
cli
inc
push
cmp
mov
cmpsb
push
adc
cmp
push
mov
ss
and
fcmovnbe
sahf
movsl
cmp
orl
aam
sub
mov
leave
adc
jl
jae
inc
pop
rcrb
pop
inc
push
xchg
rcll
repnz
adc
in
and
xor
loope,pn
xor
pop
aad
push
fbld
sahf
adc
dec
adcb
call
loope
das
add
mov
xlat
repz
shrb
sub
fnsave
aad
cmp
sahf
push
rorl
fs
bound
fidivs
and
popa
jae
lret
in
mov
loop
inc
pusha
gs
xchg
aam
push
loopne
mov
add
mov
sarb
or
jbe
ds
mov
cli
sbb
sbb
jmp
push
imul
loopne
or
jmp
mov
cmpsb
jl
lahf
sub
push
mov
add
std
cli
cmp
and
jecxz
hlt
adc
enter
dec
testb
or
and
dec
fcomi
mov
dec
test
fsubrl
mov
jb
dec
sbb
popa
push
xlat
imul
bound
inc
xchg
imul
push
pusha
out
add
insl
and
clc
insb
imul
insb
std
mov
cmc
xor
mov
sub
jmp
jl
mov
ret
mov
or
add
jae
jmp
sub
rol
push
cmp
jle
pop
jmp
repz
in
test
xor
lds
adc
repz
sub
mov
jae
leave
test
cld
pop
cmp
insb
mov
push
or
push
or
stc
jge
daa
cli
es
test
add
mov
or
in
inc
adc
ret
mov
movsb
inc
dec
sahf
xor
xchg
lret
dec
jle
cmpsl
sub
and
movsl
mov
into
and
mov
lock
ljmp
mov
sub
outsb
push
xchg
je
sub
roll
outsl
dec
mov
outsl
mov
and
pop
or
push
cmpsb
aaa
bnd
cmpsl
pusha
push
and
sbb
mov
test
mov
ja
repnz
sub
fistpll
les
sub
into
and
lock
mov
movl
stc
mov
movsb
les
loop
xor
add
cmp
clc
test
mov
adc
xchg
push
clc
cli
sub
bound
lahf
mov
mov
cld
mov
pusha
aaa
in
or
mov
cmovno
data16
dec
std
or
cmpl
cli
ss
xchg
clc
pop
shll
insl
ss
cmp
pop
test
mov
push
sahf
mov
call
shlb
cmp
pop
aad
or
out
in
adc
adc
rcll
ja
scas
xchg
iret
iret
cmp
scas
aaa
jbe
jae
jo
out
and
inc
sar
xor
rcr
xor
push
mov
xchg
mov
rolb
and
out
test
xchg
xchg
test
inc
mov
jl
shll
popf
cmpsl
repnz
pop
or
push
dec
cmpsl
push
xor
inc
xor
mov
sbb
sub
xor
jl
arpl
faddl
outsb
sub
ds
fs
sub
jmp
leave
sbb
cmpsb
cld
dec
sub
mov
pushf
js
mov
aam
in
cmp
outsl
xlat
push
cwtl
xorl
movsl
ljmp
mov
sahf
repnz
popa
in
dec
pop
or
mov
int3
test
push
imul
pop
sub
sbb
cmp
mov
das
sysexit
pop
push
popa
loope
enter
push
mov
pop
jp
xchg
sti
xchg
test
mov
pop
cltd
mov
insb
fmul
sbbb
jb
add
or
sbb
inc
test
and
jns
inc
dec
rcr
iret
xchg
push
jge
mov
inc
frstor
cwtl
orl
and
jns
rcr
repnz
loop
pushf
xor
daa
mov
in
xor
mov
jo
jl
das
and
dec
xchg
call
outsl
ljmp
or
pop
ret
cmpsl
or
loope
scas
int
mov
in
scas
das
xor
mov
cmpsb
pop
stos
cli
pop
cwtl
sbb
loopne
aad
pop
ss
sub
ss
stos
int
pop
xor
rcl
insb
test
adc
subl
cmpsb
lret
mov
dec
mov
sahf
inc
dec
push
push
or
insl
inc
arpl
mov
or
ljmp
fwait
sbb
lea
inc
fiaddl
sahf
into
outsl
scas
and
add
leave
dec
out
popf
idivl
mov
pop
cmp
pop
ret
and
push
iret
pop
jle
pop
sbb
xor
es
adc
xchg
inc
movsl
sbb
jle
push
mov
sub
xor
andl
jnp
movsb
rcl
xchg
add
pop
add
aam
inc
add
pop
and
lret
arpl
outsb
imul
rorl
mov
rcr
dec
cltd
dec
pop
jae
push
arpl
stc
daa
add
mov
adc
mov
jmp
or
les
xor
inc
push
ret
jnp
mov
inc
fidivs
mov
pop
add
cs
lcall
dec
adc
mov
cli
add
icebp
xor
out
mov
xchg
mov
push
aam
ljmp
jo
repz
cld
xor
call
cmc
cmpl
pop
imul
mov
int3
clc
pushf
aam
js
pop
cmp
sub
sar
leave
sub
jno
mov
sub
and
mov
add
mov
repz
xor
dec
lods
fprem1
test
addr16
lds
jo
jl
dec
lret
lahf
or
sub
mov
scas
inc
loope
xchg
pop
ret
sti
fldl
cmp
test
movsl
mov
fildl
test
lcall
push
mov
int
and
stc
jl
repz
pop
cmc
pop
jp
add
xchg
pop
mov
fisubrs
pop
or
movb
or
mov
pop
adc
in
daa
clc
jnp
addb
cld
cltd
push
sbb
mov
jge
inc
cltd
sub
sub
out
jne
mov
jnp
add
mov
cmp
cli
and
sbb
xchg
mov
aaa
icebp
aaa
mov
mov
mov
pop
js
mov
adc
mov
sbb
xor
dec
jp
lret
fdivl
xlat
in
movsl
testb
inc
or
repnz
mov
outsl
jnp
cmc
dec
sub
cmpb
sbb
fdivs
lret
rorb
xor
fisttpll
test
or
or
xor
push
outsb
xor
fcoml
jg
mov
adc
dec
mov
inc
movsl
je
cmpsl
dec
mov
mov
enter
es
fnstcw
imul
cmp
fwait
dec
pop
jnp
test
adc
cmc
loopne
sub
mov
inc
xchg
sub
jp
jle
or
jns
insl
negl
xchg
cli
xchg
int
lock
rcll
ficoms
pop
aaa
cltd
aaa
arpl
or
sbb
int
xchg
imulb
fcoml
outsb
xchg
cmp
dec
cwtl
push
inc
push
inc
int
mov
shlb
mov
cltd
ljmp
cmp
xchg
sbb
fs
cld
or
sub
and
and
pop
inc
pop
cmp
xorl
fiaddl
iret
das
cmp
lret
sbb
inc
jns
sti
in
test
lahf
push
sbbb
movsl
mov
xor
adc
gs
adc
mov
imul
mov
aas
push
cmp
out
ljmp
enter
cmpsb
dec
mov
inc
inc
pushf
scas
lret
insl
jecxz
cmpsl
fldt
jl
or
mov
xor
xchg
push
orl
fwait
je
imul
icebp
filds
and
je
aad
mov
rcll
stos
movsl
pop
inc
repz
pop
lock
cmpsl
and
int
mov
inc
mov
ja
mov
pop
jp
mov
repz
xorb
cmp
jbe
aaa
mov
or
sbb
and
and
addr16
xchg
xor
cmp
sarl
add
ret
hlt
mov
cmp
cli
add
sub
and
push
xchg
mov
scas
pop
sub
aaa
outsl
xchg
stos
sub
jno
cmp
stos
xlat
pushf
lahf
push
cltd
and
push
and
cli
sti
scas
sub
inc
pop
sbb
popa
inc
movsl
mov
jecxz
mov
testb
push
add
cmpsl
mov
cmp
iret
pop
add
repz
mov
ds
mov
sub
fucom
mov
or
fmull
lods
stc
out
cmp
mov
jg
inc
cli
inc
mov
mov
ret
xor
nop
clc
fmul
jne
test
fucomip
jbe
icebp
xchg
sbb
popf
insb
jns
aaa
push
pop
pop
stc
xor
push
cmpsb
addr16
add
les
adc
gs
ret
int3
adc
sahf
inc
xor
ret
bound
fldt
sub
xor
lods
mov
push
popf
icebp
add
pop
sub
mov
mov
and
cmp
not
bnd
lods
mov
push
xor
or
pop
cmp
jl
cli
in
bound
pop
insb
lret
movl
jl
add
ljmp
pop
data16
loopne
xlat
imul
pusha
sbb
fwait
loope
mulb
ljmp
ret
xchg
outsl
dec
sbb
aam
xchg
pushf
repnz
xchg
fistpll
dec
push
into
lea
push
shll
test
xchg
fbld
out
mov
outsb
fs
inc
out
push
test
scas
out
daa
dec
jecxz
arpl
aaa
push
nop
jle
fdivl
incb
jno
add
and
push
push
jns
stos
adc
jns
scas
jno
loopne
pop
sbb
shlb
pop
or
push
lcall
scas
push
rcl
cli
xor
jecxz
xchg
aaa
cmp
xchg
mov
cmp
ficompl
ja
leave
sub
aad
dec
aas
repz
movsb
sbb
inc
cmpsb
inc
xor
shll
push
dec
xor
mov
cmp
sbb
pop
mov
mov
leave
jle
push
loop
cmpl
cltd
sbb
test
out
arpl
xor
add
aam
inc
xorb
xchg
cmpl
test
ljmp
jnp
jmp
cmpsb
add
xlat
pusha
xchg
jbe
jl
fbld
dec
in
sbb
mov
jo
repz
jb
lock
shrb
pop
daa
push
std
dec
or
lret
mov
dec
dec
imul
lahf
loopne
jne
pop
and
xchg
mov
ret
push
jns
shrb
stos
mov
flds
inc
stos
push
pushf
faddl
out
rcl
dec
lods
pushf
addr16
push
andb
mov
pop
pop
cmpsl
sbb
xchg
cmp
mov
ljmp
fdivrs
fcompl
push
aaa
or
inc
popa
sub
fidivl
test
aas
inc
fcompl
or
in
mov
push
ret
and
or
bound
inc
sarl
fstl
xchg
out
dec
dec
mov
lea
add
and
aam
mov
cltd
mov
jg
jb
mov
stos
sub
or
push
adc
push
xchg
pushf
xor
sub
lahf
pop
or
jmp
sub
cwtl
mov
iret
fimuls
cltd
push
cmp
popf
test
cmc
mov
jge
iret
cmp
mov
inc
and
and
cmc
and
mov
aam
and
test
pop
mov
mov
cmpsb
rclb
add
pop
call
cmp
mov
mov
test
and
add
pop
je
out
mov
sub
in
adc
mov
nop
daa
cmp
test
pushf
movsl
inc
adc
xor
rclb
push
lahf
dec
jae
mov
in
push
aas
mov
ljmp
pop
pushf
push
push
inc
mov
pop
shl
out
pop
sub
inc
decl
leave
xchg
dec
test
popf
iret
xchg
sub
or
lea
and
aaa
test
sub
jnp
cmp
leave
push
mov
hlt
imul
iret
mov
cmp
loop,pt
push
std
dec
pusha
pushw
push
push
cmp
mov
in
push
xor
ret
xchg
stos
pop
cmp
push
xor
push
mov
add
out
sub
popf
jae
sbb
jle
lods
out
daa
mov
shr
pop
add
lahf
sbb
outsl
in
or
fisttps
aam
mov
push
pop
out
sbb
or
lock
mov
ds
jne
mov
outsb
lret
fldl
sar
and
xchg
push
pop
mov
sub
xchg
addr16
jb
ret
outsl
pop
add
out
out
out
xchg
sub
hlt
notl
lock
xchg
jp
xorl
pop
out
sarl
mov
cmpsl
xchg
adc
cmpsb
inc
cmpsl
mov
filds
repnz
int
pop
jo
xchg
jae
pop
pop
or
outsb
jo
mov
add
pop
add
loop
test
outsl
shlb
and
or
fimull
adc
js
iret
and
ret
mov
inc
xchg
out
aam
add
scas
in
sbb
and
mov
jg
lea
pop
cmpsb
rcll
fwait
scas
test
dec
push
xchg
imul
fists
cld
xor
and
or
ficoms
jns
mov
and
adc
xchg
inc
push
cmp
cmp
jnp
in
jecxz,pn
jp
inc
sbb
sbb
sbb
pop
push
jecxz
xor
sarb
pop
jle
xor
cltd
lock
mov
push
fdivl
push
in
in
aas
xchg
lret
andb
and
dec
inc
add
push
cmp
lcall
xchg
rcll
mov
cmpl
push
mov
xchg
sbb
clc
out
inc
pop
jecxz
leave
mov
push
add
arpl
xor
push
and
enter
lcall
shrl
pop
leave
cltd
lds
lret
lcall
dec
out
movups
sbb
pop
test
test
pop
sub
xchg
xchg
rol
call
int
cld
mov
push
divl
xchg
divb
jno
rol
mov
in
add
cwtl
xchg
fdivl
mov
add
mov
out
cmc
pop
and
dec
pop
push
shlb
xchg
test
add
das
push
cmpsb
xor
inc
cwtl
sbb
mov
jbe
xor
adcl
mov
lods
or
adc
mov
push
imul
ja
sub
in
bound
xchg
mov
rorl
pop
inc
mov
cmp
loope
or
test
mov
add
mov
push
insl
xor
icebp
fisubrs
adc
pop
in
imul
nop
mov
pop
or
cmp
push
pop
inc
dec
je
fs
lcall
aam
lret
in
adc
add
xor
and
push
pop
inc
dec
je
fs
lcall
aam
lret
in
adc
add
xor
and
push
pop
inc
lret
fs
sbb
aam
cli
out
adc
push
or
pop
inc
dec
hlt
jp
push
lcall
mov
add
out
outsb
mov
ja
pop
fsts
sahf
push
fimuls
out
cmp
sub
jns
imul
jle
push
fstps
leave
cs
ds
sahf
sbb
or
cmp
sub
jns
imul
push
leave
add
jmp
mov
dec
scas
or
int
pminsw
sub
or
sub
std
cli
fnstsw
jne
push
sbb
pop
jmp
ss
lret
push
in
sub
fabs
dec
add
insl
and
adc
subb
xor
push
cltd
dec
test
scas
xchg
outsl
dec
pop
or
mov
adc
jns
dec
adc
cld
loope
or
lods
adc
loope
das
xchg
cmp
idiv
mov
pushf
mov
jae
push
xchg
jmp
popf
inc
push
jbe
push
out
inc
adc
std
sub
jns
xchg
lret
sbb
add
test
out
stos
icebp
lods
or
pop
out
sar
or
sbb
jns
jl
cltd
pop
mov
adc
cs
xchg
cmp
dec
or
cmp
sub
pop
orb
fiaddl
cmp
sub
sub
imul
pusha
lahf
or
sbb
sub
add
daa
dec
cld
in
sub
mov
addr16
test
dec
notb
jo
push
dec
std
aaa
sti
dec
fldt
incl
cmp
insl
rcrl
aas
int3
dec
negl
leave
cs
ds
out
cmp
sub
jns
imul
jle
push
fstps
leave
cs
ds
out
cmp
sub
jns
imul
and
lods
jno
dec
jbe
stos
lock
xchg
leave
jns
dec
sbb
or
xor
std
cltd
jg
rorb
and
shrl
repz
jne
scas
test
jo
adc
lock
ret
dec
cmp
js
jl
pushf
or
in
cmp
and
mov
xorl
mov
or
and
orb
ficompl
cld
adc
and
faddp
inc
dec
loop
inc
int3
ret
push
cmc
fsubrp
mov
sbb
negl
add
ds
sbb
mov
xchg
sub
rcl
or
lret
test
daa
xchg
or
decb
mov
push
or
sub
jl
dec
pop
push
adc
mov
or
mov
idiv
mov
push
add
rorb
stos
xor
test
jl
jp
rorl
loop
in
or
popa
icebp
and
dec
xor
pop
xlat
pop
enter
jl
push
mov
bound
popa
xlat
sti
and
pop
jbe
or
sbb
mov
push
push
aaa
pop
cmpsb
ret
out
inc
adc
aaa
andl
mov
push
sub
ficomps
dec
inc
stc
mov
rcrb
jmp
data16
imul
out
jo
lea
add
mov
sar
push
loop
mov
and
jl
test
xor
sbb
sub
mov
jnp
mov
push
repz
push
test
ss
mov
inc
and
cmpsb
mov
push
scas
cltd
stc
xchg
icebp
stos
mov
in
popa
xor
or
icebp
in
cmp
movsb
mov
call
dec
mov
fsubrl
fiaddl
fimull
test
inc
enter
cltd
jmp
cld
jg
leave
iret
inc
mov
xchg
rcrb
mov
fwait
xchg
and
pop
dec
lods
and
or
out
mov
pop
mov
int3
sub
mov
rorb
inc
sarl
jo
xor
pop
sub
and
inc
or
inc
cbtw
in
lahf
xor
push
sbb
icebp
xor
int
stc
enter
into
jl
jo
push
pop
imul
in
push
or
and
lahf
imul
out
jno
and
pop
xlat
lea
and
jle
movsb
call
fcomps
kmovb
icebp
add
outsl
loop
jne
fcmove
push
imul
pop
jno
push
in
mov
or
mov
xchg
xchg
push
aas
xor
push
dec
daa
js
ljmp
mov
sbb
cmc
adc
cwtl
call
inc
sbb
cli
push
jae
dec
and
adc
and
pushf
mov
adc
hlt
sbb
xchg
sarb
jge
mov
push
add
int
mov
test
addr16
scas
movsb
cmc
pop
xchg
repnz
jecxz
mov
in
sub
iret
mov
or
and
std
js
mov
jnp
std
add
push
inc
icebp
jg,pn
inc
jo
dec
mov
xchg
lods
push
and
scas
pop
movsb
mov
jg
pop
push
adc
pop
scas
push
arpl
addb
push
push
jae
push
mov
das
cwtl
mov
push
out
stos
jnp
imul
pop
xor
jge
jmp
push
lret
and
fistpll
xchg
mov
xchg
inc
jb
sub
xchg
mov
in
pop
std
das
jae
aam
aas
jae
int3
sbb
lcall
dec
sub
mov
rcrb
orl
jle
ret
adc
sahf
jnp
sbb
push
jne
dec
sub
imul
mov
loop
mov
imul
add
mov
and
or
dec
dec
cmpsl
push
outsb
cmp
mov
lcall
orl
inc
sbb
mov
sarb
sub
das
pop
mov
push
pop
pcmpeqw
stos
xorb
aam
cmp
lahf
outsl
hlt
inc
cmc
lret
aad
nop
lahf
test
lcall
jecxz
jle
inc
jae
mov
pop
mov
xchg
rcll
das
lea
in
daa
icebp
loopne
outsl
xchg
pop
stos
sub
xor
mov
sub
and
mov
mov
push
mul
sbb
out
enter
cmp
pop
cwtl
jge
or
aad
mov
and
sti
sbb
xlat
movsb
xor
push
popl
ja
and
cld
out
incb
push
lock
mov
in
nop
test
pop
loope
loope
fisttps
mov
je
jo
popf
pop
pop
pop
mov
popa
mov
cltd
clc
xlat
lret
mov
and
inc
addl
jne
cltd
les
fcmovnb
and
xchg
lret
shlb
cmp
cld
cld
inc
xchg
pop
in
stos
mov
bound
aam
imul
jg
repnz
mov
xor
pop
inc
addl
mov
das
leave
inc
popa
fwait
cmpl
mov
pop
jbe
aam
push
and
test
lds
inc
jbe
ljmp
cs
jne
ret
sbb
push
stos
and
or
repnz
dec
dec
jle
add
imul
and
push
dec
stc
mov
out
jge
xchg
aad
or
aam
out
dec
sysenter
pop
fiadds
jne
repnz
xchg
xchg
sub
sbb
cmpsl
movsb
xor
mov
scas
add
aaa
aam
test
cmp
aaa
add
movsb
dec
jmp
cmp
mov
insb
lods
hlt
cmp
sub
ret
inc
rorb
mov
in
mov
fdivs
nop
movsl
push
dec
and
mov
shll
adc
add
sbb
mov
mov
clc
mov
lret
sub
jecxz
rcll
jl
andb
rcrb
into
and
testl
loopne
insl
repz
fildll
mov
bnd
or
rcrl
rorb
push
shll
mov
decl
mov
mov
mov
in
lock
jb
loope
imul
and
sar
inc
cli
mov
mov
out
enter
jbe
daa
mov
cmp
dec
insb
adc
add
test
test
outsb
rcrl
pop
and
xchg
in
or
mov
mov
mov
xchg
lods
ss
sbb
xchg
das
dec
sbb
xor
inc
xchg
repnz
inc
aam
adc
mov
xchg
negb
sbb
pop
fs
je,pn
sbb
xchg
andl
repz
sub
out
sbb
hlt
jmp
aad
sbb
aaa
dec
mov
xchg
les
inc
mov
jbe
pop
mov
xor
dec
jb
data16
pushf
aas
push
jg
je
pusha
inc
stc
dec
shrb
fimull
add
jns
movsl
sub
mov
mov
test
push
dec
mov
pushf
dec
push
into
adc
mov
in
mov
mov
pop
out
sbb
pop
add
das
sbb
es
arpl
mov
or
imul
icebp
dec
cmp
cmp
aaa
push
fwait
sub
and
inc
pop
lret
mov
push
pop
adc
mov
cltd
stos
cmp
popf
stos
stos
jo
and
daa
in
inc
cmp
inc
cmp
mov
mov
cmpsl
arpl
dec
cmp
ljmp
sub
pop
mov
add
jae
imul
push
push
nop
mov
cld
popf
sahf
sbb
out
fnstcw
pop
xor
testb
into
xchg
xchg
sahf
and
pop
cld
mov
sti
mov
or
jl
test
and
subb
scas
stos
pop
push
ss
xchg
out
mov
rolb
mov
pop
xorl
cmp
add
cmp
push
sbb
lret
loop
push
xor
push
roll
xor
sti
xchg
mov
mov
loopne
ss
add
and
mov
jbe
mov
push
mov
int
jo
fs
push
add
mov
aam
adc
push
in
push
pop
fmuls
add
xchg
mov
fdivr
pushf
mov
faddl
xor
sbb
movsl
aaa
push
and
outsb
aaa
inc
jmp
mov
imul
jb
sbb
push
in
add
cmp
loope
fisubrs
or
stc
stos
xchg
mov
ja
inc
fdivl
test
or
xor
cmpsb
shl
cmpsl
adc
mov
xor
add
xchg
mov
inc
into
and
jg
scas
mov
out
cmp
cmp
outsb
inc
cs
mov
aas
mov
push
pop
and
cli
inc
or
mov
fsubrl
sbb
pop
jnp
adc
orl
adc
jb
and
pop
ret
jno
mov
call
jl
rcrl
orl
and
popa
mov
xchg
mov
dec
jne
lock
mov
xor
jbe
xchg
not
bound
andb
pop
orb
insb
push
mov
fstl
stc
fsub
lcall
int
std
aam
pop
xchg
push
push
jp
dec
xchg
pusha
cmp
mov
lcall
adc
dec
dec
scas
adc
leave
fstpl
int
jae
jo
cmpsb
mov
sbb
shl
xor
test
loope
sbb
lods
mov
cmp
mov
fcoml
std
hlt
out
pushf
mov
loope
js
xchg
aaa
sbb
in
or
push
mov
outsl
adc
setb
jle
jbe
scas
inc
xlat
xchg
push
jge
lods
dec
jb
stc
lods
pop
cld
gs
pop
adc
loopne
clc
cmp
cld
in
pop
sbb
xorl
and
enter
or
outsb
out
out
arpl
mov
sbb
out
lods
loop
mov
mov
mov
popa
and
jnp
movsl
scas
mov
lahf
pop
mov
std
dec
sub
pop
mov
lret
cli
sbb
repnz
jg
jae
adc
sub
ret
xlat
lcall
pushf
pop
add
in
in
sbb
jnp
jb
fcmovnu
push
xchg
push
cmp
adc
push
inc
jecxz
jno
negl
stos
mov
pop
or
pop
leave
cmpsl
in
call
cwtl
cmp
xchg
loope
mov
test
push
pop
sbb
mov
jnp
pop
mov
adc
pop
out
hlt
mov
in
out
rorl
leave
andb
push
pop
ja
enter
imul
inc
cmp
lcall
sbbl
push
sbb
sbb
mov
out
pop
xor
jo
js
push
sub
dec
into
es
cmp
dec
addb
test
sub
test
outsb
cltd
mov
cmpsl
mov
fs
xor
scas
insl
lock
jae
add
leave
jecxz
imul
inc
mov
add
adc
adc
sub
inc
aam
pop
push
in
cs
cli
icebp
xchg
mov
and
sub
dec
js
push
icebp
sbb
cld
nop
mov
lds
and
pusha
test
out
push
add
sub
jbe
sahf
dec
push
sahf
scas
xchg
shrl
xchg
xchg
loop
ja
inc
sbb
push
stos
add
mov
push
xor
hlt
dec
fildll
jo
arpl
adc
in
std
shlb
repz
jmp
cmp
shrb
movsb
push
outsb
in
xchg
xchg
ret
jae
push
pop
and
lods
loope
js
aam
sub
rcll
xor
or
mov
stos
fisubrl
mov
sub
jno
outsb
xor
inc
stc
sbb
mov
jle
in
mov
sarb
enter
mov
dec
enter
out
xor
inc
idivb
xchg
in
push
mov
pop
adc
mov
fsub
and
fidivrl
cs
out
fisttps
mov
mov
sub
shll
cmp
xor
inc
jno
fdivl
sbb
pusha
cmp
lcall
lahf
inc
mov
mov
test
cmp
clc
and
mov
jp
mov
out
jl
lds
decl
pop
jne
popa
fmul
sbb
les
ljmp
sub
pop
push
sti
adc
jbe
cmc
call
scas
mov
lret
sbb
out
std
stos
data16
repnz
clc
and
in
pop
or
mov
jp
add
fnstenv
ja
sbb
jg
data16
add
rclb
pop
psubsw
inc
add
ljmp
imul
std
ss
dec
dec
mov
jno
pop
cmc
mov
shlb
add
rcrl
mov
aaa
mov
jae
adc
xor
or
pop
xor
inc
shr
divl
sbb
lock
dec
xchg
push
fdivl
loopne
pop
sbb
mov
mov
lahf
sub
or
test
hlt
jbe
mov
and
or
into
scas
jne
insl
cmpsb
nop
lcall
pop
jecxz
sahf
jns
mov
or
dec
test
dec
insl
pushf
pop
push
imul
cmpsb
std
incl
insl
sbb
ljmp
std
lret
stc
push
jp
xor
cmpl
mov
mov
push
and
pop
movsl
and
jne
mov
and
push
fbld
pop
mov
loop
pop
leave
push
aam
add
lahf
int3
test
cmp
out
cwtl
sub
cltd
and
ds
movhps
outsl
icebp
xchg
cmpsb
ja
cmp
add
arpl
xchg
sub
sub
lea
add
ret
jo
xchg
test
xorb
push
mov
push
sbb
lret
lcall
or
mov
imulb
gs
or
xorl
js
in
ret
cwtl
sti
shlb
cmp
and
jge
fldl
jbe
popl
or
fldcw
cs
sbb
jecxz
add
mov
fsubrs
or
insb
rcrl
fwait
outsl
sub
std
inc
div
out
push
outsb
adc
test
cmc
dec
call
mov
or
mov
mov
idivl
add
les
sub
sbbb
fisubs
xchg
pusha
lret
lea
fs
push
jbe
and
xchg
addr16
jae
inc
jb
sbb
push
cmp
fnstenv
or
xor
repz
fwait
jge
loop
pop
mov
fistpl
jno
fisubl
fs
mov
mov
xchg
in
adc
aas
dec
pop
repz
add
pop
push
jmp
or
popa
xlat
xor
fsts
jne
dec
sbb
xor
adc
add
jp
sub
enter
pop
pop
cli
cmp
cli
add
adcb
lahf
jnp
out
and
lret
inc
shl
leave
pop
pmulhuw
dec
mov
dec
adc
adc
jns
sti
imul
cwtl
out
cmp
sub
aas
int3
sbb
dec
icebp
addl
in
pop
mov
adc
cmp
xchg
fsubrl
hlt
dec
sarl
or
bnd
inc
cmp
insw
shll
and
or
dec
jbe
out
sub
iret
outsl
aaa
add
jno
pop
jae
inc
mov
daa
dec
mov
ds
inc
xor
in
push
mov
repz
push
xor
test
cmpsl
xchg
or
inc
repz
call
mov
cmp
xor
pop
mov
or
add
inc
xchg
add
push
and
xor
dec
mov
imul
loope
or
mov
in
jno
div
mov
stc
jne
and
js
mov
mov
popf
call
dec
mov
sbb
dec
cmc
sbb
iret
jbe
ror
xchg
outsl
or
or
sbb
int3
pop
jg
xchg
sub
mov
cmp
sub
out
jmp
dec
jmp
in
dec
mov
jae
dec
or
xchg
sti
adc
pushf
push
or
mov
or
mov
pop
cld
jno
mov
sub
push
mull
fidivrs
les
out
aas
ss
dec
inc
dec
xchg
clc
inc
ds
js
mov
iret
rorb
cmc
adc
enter
and
out
cmc
gs
lock
repz
insb
hlt
inc
test
notl
cmpsl
pop
repnz
mov
jno
jp
cmp
out
xor
int3
jmp
fs
sub
add
sti
cltd
in
mulb
push
aad
or
lea
push
mov
sbb
jmp
fnstcw
push
push
scas
call
lea
push
xor
jns
popa
out
adc
inc
adc
sti
mov
adc
add
pop
add
push
add
sub
jns
movsl
push
mov
inc
fildl
in
ljmp
push
xchg
mov
jle
rcrb
inc
lea
mov
dec
mov
call
cmpsb
inc
xor
jbe
daa
mov
mov
nopl
js
insl
cmp
std
jl
fdivrs
cli
cmpsl
in
lret
std
inc
loop
aad
mov
fwait
mov
pop
fldenv
push
outsl
sub
inc
ljmp
push
xor
fcmovu
in
xchg
mov
cmp
sub
cli
enter
dec
dec
sar
fimull
cwtl
jg
or
mov
sub
adc
jge
inc
lret
push
xchg
pop
xchg
push
add
stos
sbb
adc
xchg
sbb
orl
call
daa
inc
jb
mov
outsl
sti
fidivl
sbb
xor
jmp
mov
sti
jmp
hlt
or
icebp
push
scas
jnp
cld
testb
mov
xor
gs
xor
jns
adc
sbb
pop
sub
cmpb
adc
push
movsl
cmc
jmp
pcmpeqd
push
push
adcl
xchg
repz
shll
or
sbb
int3
push
lock
das
push
push
subl
jmp
leave
lcall
arpl
int3
and
in
addl
leave
adc
xchg
imul
sbb
cmp
fsubl
mov
sub
lcall
aaa
xchg
pop
and
xchg
push
adc
adc
xchg
arpl
adc
and
jno
cmp
adc
dec
mov
push
fbstp
pop
lahf
imull
repnz
pop
sti
or
cmp
dec
shrl
fisttpl
hlt
mov
pusha
call
xlat
test
jl
int
lea
stos
jb
out
outsb
popa
jmp
test
adc
pop
push
test
adc
cmp
negb
pop
pop
sahf
jmp
inc
rolb
cmp
rorb
cmp
push
xchg
jmp
lock
es
pop
dec
add
jecxz
es
cmp
cmpsb
mov
mov
aad
jge
adc
inc
sub
in
nop
mov
jmp
aad
sub
mov
in
mov
sub
dec
xor
data16
mov
xchg
fidivrs
dec
push
xchg
lods
jb
cmp
cmp
fucomp
mov
jns
inc
std
enter
arpl
jbe
push
xor
sahf
rclb
push
cmp
imulb
mov
stc
mov
inc
call
sbb
mov
flds
bound
push
cltd
popf
xor
testb
pushf
xor
sbb
fchs
jg
lods
pop
sbbb
lcall
sbb
sbb
sbb
xchg
nop
mov
xor
lds
xchg
ds
adc
jmp
pop
mov
rclb
dec
or
xchg
mov
ret
clc
add
sub
test
rclb
inc
and
stc
pop
hlt
cmp
pop
jmp
cmp
js
jp
pop
xchg
and
mov
mov
arpl
pop
xchg
add
mov
cmp
repnz
pop
dec
mov
xchg
scas
xchg
push
gs
xchg
das
in
add
test
je
daa
or
add
incb
fcom
dec
jnp
push
cltd
pop
scas
sbbb
sub
loop
push
popf
mov
lret
cmp
adc
pop
loopne
out
lahf
add
lahf
and
out
into
xchg
addl
in
pop
or
inc
pop
scas
mov
fstps
leave
cs
ds
out
cmp
sub
jns
imul
jle
push
fstps
leave
cs
ds
out
cmp
sub
jns
imul
jle
psubusw
leave
cs
aas
jmp
out
cli
sub
jns
imul
push
test
cs
mov
mov
stc
rcll
mov
xchg
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
cli
and
xchg
adc
adcl
mov
adc
add
add
add
add
pop
sbb
daa
add
add
cld
add
add
add
sub
xchg
add
add
add
add
test
xchg
add
add
add
add
adc
mov
add
add
add
add
add
fiaddl
push
add
in
add
in
add
sbb
add
add
add
add
add
add
add
add
mov
roll
cmp
add
cmp
movl
in
add
aad
pusha
add
add
mov
lret
add
addl
mov
add
add
add
add
add
add
js
push
add
add
dec
add
add
add
add
add
add
add
add
add
pop
add
mov
sbb
add
add
add
add
add
add
add
add
or
xchg
add
add
add
call
add
jnp
in
add
faddl
data16
mov
add
add
add
add
ret
add
add
add
xchg
sbb
aaa
add
jnp
fldl
or
or
add
add
add
add
and
pusha
add
cmp
pop
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
int
lret
add
add
add
add
add
add
add
add
das
add
add
sbb
or
pop
add
add
add
add
add
add
sbb
add
add
inc
add
ret
add
mov
inc
add
add
add
add
add
add
add
add
add
push
add
in
add
add
add
adc
xor
or
in
add
add
add
mov
aad
addl
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
pop
add
ret
add
add
sbb
sub
add
dec
add
add
add
add
addr16
add
add
add
addl
cld
add
xchg
add
add
add
add
add
add
sub
add
push
add
cltd
add
sub
aam
add
add
add
jnp
dec
add
push
add
add
add
add
add
add
add
add
push
add
add
add
or
add
or
push
add
enter
sbb
popf
add
xor
in
add
mov
add
add
add
ret
add
add
add
add
add
add
in
add
add
add
repz
sbb
add
add
add
xchg
add
pop
add
add
addl
pop
add
add
leave
add
jno
mov
aad
inc
add
ret
add
add
add
ljmp
add
add
add
add
add
add
filds
addl
mov
and
xor
add
sbb
add
add
addl
add
jo
inc
jg
inc
rcll
pop
sbb
mov
mov
out
cld
mov
cmc
push
sbb
xor
repz
jle
pop
and
sub
inc
js
aam
bound
nop
test
out
mov
xor
fbstp
scas
or
arpl
dec
add
lahf
lret
scas
xor
mov
daa
shlb
sub
push
cmp
add
mov
movsb
jae
int3
outsb
sub
pop
inc
adc
stc
cmpsb
add
andb
cli
rcl
popf
cmp
cs
mov
cmc
aaa
inc
roll
in
pop
inc
mov
pop
or
xor
add
loopne
and
pushf
ja
nop
pop
rorl
push
mov
xlat
cs
mov
pusha
mov
or
ljmp
mov
push
mov
fwait
lds
lret
out
mov
sub
dec
sbb
cld
mov
outsl
adcl
jbe
je
sbb
mov
cmpsl
mov
mov
xor
jb
and
ret
iret
xor
push
mov
test
and
mov
inc
pop
push
stos
and
ret
mov
ljmp
xchg
lds
jb,pn
movsb
aas
or
movsl
jmp
cmp
push
inc
xchg
gs
movsl
ret
dec
xchg
int
daa
rcl
xchg
lods
fcomp
push
addl
shll
jbe
xor
sahf
inc
in
fucomi
pop
cltd
jg
inc
out
ljmp
jns
sub
std
and
imul
xor
pop
push
imul
movsb
cwtl
sub
fnstenv
arpl
xor
add
aas
and
rol
jno
not
loope
in
mov
call
mov
leavew
sti
adc
test
jl
data16
xchg
dec
repnz
pop
jne
add
nop
mov
mov
je
dec
bound
ljmp
dec
dec
cmp
mov
icebp
xlat
inc
jno
and
pop
ljmp
pop
add
fcoml
dec
pop
frstor
sub
rcrb
pop
or
imul
je
fs
or
xor
push
inc
or
or
pop
popa
push
in
shrl
test
xchg
sahf
xor
pop
popf
add
test
add
dec
mov
in
xchg
loop
cmp
rcrl
pop
stc
aam
pop
jle
es
add
imul
test
pop
xchg
jge
mov
xor
mov
test
jp
pop
xor
insl
add
leave
popf
sahf
int3
outsb
mov
sbb
cmp
lcall
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
