call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lret
in
aad
lds
stc
cmc
fdivs
pop
gs
jp
or
cmp
ljmp
movsl
stos
xchg
mov
gs
je
or
and
shl
ret
in
aad
lds
xchg
mov
inc
xor
popa
jne
jbe
insl
jbe
xchg
lcall
xchg
mov
cmp
repnz
or
cmpsb
and
inc
mov
popf
das
iret
add
xchg
inc
test
pop
xor
lds
es
dec
mov
jp
sbb
or
adc
sub
lret
std
ficoms
push
mov
lcall
sbb
mov
adcl
jne
subb
dec
movsl
dec
mov
repnz
and
push
jne
cwtl
insl
pop
popf
mov
mov
xlat
ss
lods
sub
xor
cmp
add
ret
in
aad
lds
xchg
mov
gs
arpl
xor
cmp
mov
vaddsubpd
int3
out
mov
sbb
push
xor
jbe
inc
pop
insb
push
dec
movsl
nop
mov
lcall
ds
sbb
push
cmp
or
and
inc
pop
push
mov
lods
xchg
lcall
jne
gs
jp
or
cmp
ljmp
movsl
stos
xchg
mov
gs
jp
or
cmp
push
cmp
dec
test
jg
imul
icebp
jmp
cmpsl
bound
je
test
sbb
mov
orl
lods
hlt
and
jmp
imul
mov
rorl
cs
xchg
sbb
das
les
xchg
mov
mov
lock
mov
add
mov
sarb
xor
imul
dec
xchg
cltd
pop
pop
sti
mov
or
xchg
and
or
and
jne
add
and
xchg
sbb
mov
cs
xor
in
mov
cmp
pop
mov
xor
stc
and
mov
inc
xchg
shll
mov
jle
mov
pop
cltd
icebp
add
sub
sub
jne
inc
xchg
aaa
int
pop
ret
and
xchg
loop
popf
lea
cmp
inc
int3
sarl
sti
sub
jo
and
mov
or
or
sub
shlb
imul
dec
rolb
push
pop
pusha
xchg
ret
into
subb
es
rcrb
aad
cmpsl
cld
ja
mov
mov
mov
in
sub
pop
test
rclb
in
adc
sbb
imul
jns
and
movsl
push
mov
aas
in
jle
popa
push
mov
add
or
loopne
xorl
sti
sahf
insb
mov
dec
loop
cmp
and
pop
xor
rcr
jns
out
and
xchg
outsl
ret
push
dec
aas
testb
push
xchg
test
inc
sub
subl
mov
push
call
dec
mov
mov
test
cmp
fsubrl
orl
adcl
test
push
xchg
pop
lods
inc
sti
sarb
sbbb
cs
adc
gs
sbbb
icebp
rorl
fwait
adc
push
enter
sub
lahf
pop
or
mov
pop
icebp
repnz
inc
addb
jb
insl
pop
cmp
jl
repz
sub
popf
adcb
sub
lcall
sbb
sti
push
push
inc
add
and
sti
mov
inc
out
mov
mov
sbb
pusha
in
iret
mov
out
push
push
test
mov
jnp
adc
xor
fnstcw
sti
fmul
or
fiadds
and
mov
jb
add
subb
popa
loopne
mov
mov
jge
std
not
jg
sub
mov
insl
mov
test
adc
jmp
pop
inc
call
lds
inc
scas
mov
mov
out
cltd
xchg
addl
sahf
jmp
pop
mov
cmp
dec
adc
pop
cltd
loop
sub
mov
adc
mov
fwait
and
aam
xchg
inc
and
lret
ss
cwtl
loope
pop
or
jge
push
xor
inc
lea
mov
xchg
jmp
popf
inc
es
sbb
and
outsl
stos
add
mov
cmpl
sbb
pop
mov
test
lods
sub
mov
push
adc
jl
push
out
mov
mov
aaa
dec
stos
or
rolb
adc
das
aas
cmp
lret
jne
in
add
outsb
outsl
incb
fdivr
sbb
xchg
gs
sti
xchg
cmp
sub
push
ds
scas
pusha
mov
lret
mov
mov
xlat
movsb
aam
daa
sbb
mov
mov
mov
lods
adc
sub
js
xlat
test
inc
rclb
add
divb
lock
rcr
xchg
mov
fldcw
jno
xchg
outsb
mov
aaa
sbb
xor
sub
xorb
cmp
cmp
gs
or
mov
and
jb
cmp
sub
lret
negb
aam
pop
ja
add
jbe
jge
imulb
jmp
dec
or
jmp
inc
mov
xchg
sub
or
mov
loopne
lds
sbb
jecxz
test
pop
scas
insl
dec
in
mov
in
inc
sti
dec
repz
add
ret
xchg
sbb
data16
pusha
in
inc
push
jae
lea
scas
sub
or
int
ret
sahf
loop
repnz
outsl
xchg
loop
or
movsl
bound
and
push
repz
dec
sub
pop
inc
clc
sub
xor
add
sub
adc
movsl
sarl
adcb
cwtl
jle
xorb
iret
push
xchg
fst
and
pop
jl
in
out
aas
mov
in
addr16
add
dec
subl
xchg
movsb
xchg
mov
int
push
jle
popa
xchg
add
xchg
data16
mov
pop
roll
leave
cmp
fsts
aaa
mov
aas
mov
call
xchg
adc
pop
testb
dec
or
lds
mov
and
icebp
movsb
sub
repnz
pusha
outsl
scas
dec
push
pop
cld
mov
jge
sahf
das
out
lret
ret
insl
and
mov
mov
cmp
push
dec
arpl
test
sbb
xlat
ja
cmc
fwait
or
das
in
xor
xor
jmp
fs
jge
fst
into
fucomp
lock
fwait
cmp
xor
xchg
jle
xor
push
ficomps
in
push
imul
aaa
xor
xlat
dec
sarl
xchg
mov
inc
inc
ljmp
daa
mov
lcall
xchg
insl
xchg
lea
dec
pop
jbe
mov
jmp
push
sbb
xor
xor
pop
invd
jp
push
push
jne
leave
cltd
add
mov
xor
pop
in
adc
je
pushf
loopne
sbbl
data16
in
clc
orl
or
add
mov
sbb
mov
cmp
shl
xchg
mov
push
ds
sahf
testb
in
lcall
movsl
sahf
cli
push
pop
cmp
push
push
jbe
shrl
into
sbb
mov
pop
mov
out
cmpsb
mov
les
xorb
cmpsb
imul
xor
aad
cmp
xchg
aaa
adc
stc
test
add
ret
lea
test
fwait
jecxz
jp
push
test
fildll
xor
jb
fldcw
inc
lahf
mov
in
mov
test
test
and
mov
or
repnz
jb
and
push
das
in
sub
push
nop
jle
test
mov
mov
mov
push
sbb
clc
loop
adc
cmp
pop
pop
arpl
cltd
jecxz
sub
insl
inc
or
sub
push
xchg
mov
aam
out
mov
dec
jle
mov
adc
dec
pop
jge
jbe
in
pushf
or
add
xor
pop
mov
xor
sbb
test
stos
xchg
out
jb
aam
out
fiaddl
mov
gs
iret
stos
je
and
iret
mov
mov
fs
imul
cmc
pop
and
mov
or
cmp
or
fmul
adc
cmc
popa
shr
lcall
lahf
add
jecxz
ror
lret
jg
fdivrs
sub
mov
mov
lret
stos
mov
hlt
shlb
sub
xchg
mov
shr
leave
inc
push
jb
insb
shrb
jle
cmp
or
cwtl
sub
jle
mov
iret
mov
mov
lods
pop
and
xor
jb
inc
sbb
mov
dec
xchg
lea
arpl
push
and
neg
xor
dec
sar
pop
outsb
xchg
adcb
mov
lds
push
inc
cwtl
out
or
sbb
push
push
test
cmp
in
pushf
dec
dec
outsl
dec
adc
loop
xrelease
dec
dec
pop
xor
js
cmp
ret
and
jbe
sbb
dec
inc
ljmp
push
fiaddl
cmp
adc
jae
inc
lds
fwait
mov
outsb
inc
adc
test
adc
or
or
cmpsl
dec
xchg
sbb
dec
sbb
stos
fidivrs
jecxz
cli
cmp
xchg
xchg
mov
repnz
adc
repnz
cmp
out
xor
shrb
dec
adc
pusha
mov
mov
rorl
sbbl
addr16
or
jecxz
mov
add
fnstcw
call
xchg
sti
decb
ret
fadd
in
sub
scas
and
cmp
jmp
inc
push
test
add
les
nop
push
adc
lds
std
les
test
mov
jnp
pop
or
xchg
jnp
push
pop
dec
mov
cwtl
mov
repz
test
mov
imul
ljmp
fwait
xor
ja
lahf
mov
mov
cmc
lea
int3
hlt
push
add
cmpl
mov
int3
les
sbb
loopne
add
ljmp
loop
pop
mov
add
mov
sub
hlt
in
scas
jmp
imul
loopne
adc
cmpsb
and
cli
jge
xchg
push
leave
in
stc
cli
jne
outsb
clc
pop
sub
pusha
cli
jae
add
mov
lcall
jp
mov
push
testl
sahf
jle
inc
into
cmpsl
inc
arpl
rolb
xchg
nop
in
and
jle
xchg
rolb
push
lcall
mov
jl
push
cmp
insl
push
stos
pop
stc
or
xchg
in
mov
push
push
pop
js
lods
cmpb
js
sub
jb
loop
pop
jbe
pop
jne
inc
in
pop
add
stos
mov
mov
xor
int3
stos
mov
and
stos
adcl
fxch
dec
stos
out
jne
jg
dec
hlt
mov
xor
push
mov
jbe
clc
js
pop
mov
mov
dec
ficompl
push
pop
jl
inc
mov
sbb
pop
sub
es
xchg
iret
push
scas
movsb
xor
cmc
push
test
mov
scas
adc
pop
fidivrs
cmpb
and
les
shrb
mov
mov
cmp
pop
xor
xor
loop
or
add
adc
xchg
mov
or
dec
sar
adc
and
jns
out
sbb
lret
or
push
shlb
cli
mov
out
xchg
sbb
or
mov
out
js
add
xor
push
je
mov
insl
call
outsb
cmp
fadd
repz
dec
mov
fwait
and
aas
test
cmc
inc
and
dec
pop
scas
mov
jno
mov
aam
jb
lahf
or
aaa
push
shr
mov
xlat
int3
push
fwait
shrb
push
push
xchg
daa
ret
dec
js
push
or
pop
pop
fldcw
fsub
xchg
testl
push
rol
addr16
ja
out
cmc
and
sbb
in
xchg
jl
aam
push
mov
lcall
cwtl
cmp
ret
test
mov
outsb
push
fdivl
mov
inc
jbe
pop
push
popa
lahf
mov
outsb
cmp
push
inc
push
add
ret
ret
andb
lcall
lea
push
jp
imulb
xchg
cmp
push
pop
add
call
shll
xchg
popf
lds
cmc
sbb
dec
inc
fnsave
jmp
es
pop
xchg
imul
lret
loopne
xchg
sbb
out
and
mov
sahf
insl
xlat
vpor
mov
test
jae
cmp
and
jo
dec
sti
jge
pop
mov
jae
clc
mov
into
add
inc
sbb
ljmp
decl
xchg
fidivs
add
ss
mov
repz
in
movsb
popf
jnp
adc
loopne
rcll
scas
inc
test
mov
mov
ja
inc
movsl
mov
out
sbb
cltd
out
out
xchg
pop
mov
inc
popf
fs
mov
add
and
ret
adc
lods
scas
in
movsb
mov
daa
addr16
cmc
lock
cli
cmp
jnp
insl
jge
outsb
sahf
dec
movsb
out
cmpb
jnp
repnz
mov
ljmp
cmpsb
ret
sti
mov
leave
and
jmp
in
mov
add
fwait
ja
in
popl
arpl
add
adc
in
pop
je
icebp
mov
in
push
mov
push
mov
aaa
push
cltd
xchg
in
gs
daa
rorb
or
test
fldl
push
push
fstl
iret
add
lds
cmp
testl
sub
jp
cld
xor
jg
repz
push
inc
pop
sahf
test
rcrb
insl
lods
iret
or
cli
cmp
bound
lret
movsb
cmp
mov
addr16
loop
movsb
sti
and
adc
jns
mov
lods
jbe
gs
inc
shlb
cwtl
sti
cmpsl
jle
xor
inc
pop
cld
inc
mov
jb
cli
ja
push
or
pop
xor
movsl
jns
mov
sbb
and
insb
pop
out
popf
pusha
cmp
xchg
cmpsl
stos
aad
in
lcall
dec
cld
orl
cmp
or
push
push
into
outsl
add
xchg
pop
ficomps
or
xchg
cmp
xor
std
fcmovnbe
cmpsl
test
lret
test
or
rcrb
or
add
mov
mov
mov
mov
cs
rclb
fcoml
stos
jae
add
mov
out
mov
and
dec
ret
xor
in
dec
xchg
repnz
mov
imul
repnz
mov
loope
or
push
data16
imul
inc
stc
mov
aas
aaa
fldcw
jb
lods
dec
and
cmpsb
outsb
mov
push
in
jge
insl
out
mov
xchg
ret
imul
cmc
jb
xchg
lcall
sahf
leave
mov
and
mov
mov
iret
dec
jnp
ret
mov
mov
cmc
cli
call
imul
add
dec
mov
push
lods
and
and
jae
push
xchg
dec
pop
mov
and
mov
jne
pop
jge
les
nop
sbb
xchg
jnp
jbe
jecxz
lea
les
and
sub
jbe
xor
and
negl
cmp
cmpsl
sbbb
cmpb
xchg
addr16
addr16
adc
xor
adc
mov
out
adc
sbb
in
push
adc
xor
call
js
js
stos
enter
and
sub
fdecstp
mov
call
int3
fsubrp
nop
scas
push
add
fmuls
roll
cmpsl
scas
cmp
aas
sub
rcrb
mov
cld
int3
adc
push
and
adc
cs
cmp
outsb
lahf
mull
jp
jne
stos
pop
inc
lret
movsl
scas
scas
sub
xor
sbb
jae
xchg
xor
or
sub
hlt
jns,pn
scas
imul
fsubl
or
mov
mov
inc
stos
inc
ds
aam
mov
pop
dec
rorb
push
push
popf
mov
push
lods
push
bnd
arpl
outsb
ds
sbb
mov
sbb
inc
and
in
inc
pop
jecxz
or
mov
push
xchg
mov
mov
xchg
push
mov
mov
enter
fs
lds
mov
out
clc
pop
dec
fcoml
les
mov
pop
pop
ss
mov
pop
stc
and
jbe
aad
loopne
push
push
xchg
scas
cmp
inc
aas
adcl
add
xor
dec
jne
xor
adc
cmp
shrl
mov
subb
add
xor
sti
push
pop
test
dec
movsl
es
lcall
pop
xor
mov
cmp
div
test
jmp
cmp
ss
das
es
or
popf
test
or
mov
xor
loop
xor
test
dec
ret
popa
ficomps
bound
sub
cmpsl
pop
ret
lods
add
mov
mov
scas
mov
jns
imul
ret
pop
lods
movsb
fmulp
mov
adc
orl
mov
lods
mov
out
imul
popa
dec
jecxz
dec
inc
sub
decb
or
cmp
lahf
mov
pop
into
and
lahf
xchg
or
sub
gs
insb
popf
sahf
add
mov
lret
lock
push
rdtsc
outsl
in
pop
arpl
icebp
adc
adc
lahf
es
mov
js
mov
add
xor
xchg
shrb
lock
je
and
pop
int
and
cwtl
iret
dec
cmp
xor
push
add
or
or
movsb
les
mov
fwait
and
ficoml
adc
iret
add
popa
jge
leave
test
mov
xchg
ret
nop
leave
push
loop
je
push
ds
cmp
adc
icebp
rcr
jmp
int
xor
lahf
mov
ret
sbb
jle
mov
push
negb
cmpsl
sahf
sub
pop
jb
and
xor
sbb
movsl
push
mov
xchg
jecxz
push
sti
mov
lret
cmp
lods
dec
and
lret
xchg
fwait
sbb
in
lcall
mov
lahf
ucomiss
or
out
outsl
mov
pop
adc
insl
mov
add
sahf
add
aad
enter
xchg
mov
lds
sbb
add
pop
xchg
rcl
adc
inc
sub
inc
pop
cs
ror
jne
push
cmp
jb
mov
sub
xor
or
mov
mov
sbb
es
xchg
mov
xlat
and
lods
nop
cmp
mov
sub
cmpsb
xor
pusha
mov
mov
mov
aaa
mov
xlat
icebp
out
fildl
and
mov
mov
arpl
cmc
mov
sub
pop
mov
or
cmp
sbb
mov
data16
into
jp
ret
scas
out
xchg
lahf
pop
pop
out
movsb
dec
sbb
xlat
outsb
pushf
adc
pop
fisubl
ret
mov
xchg
aas
mov
inc
push
and
fsubrs
push
cmp
mov
and
pop
xchg
xor
push
ss
or
and
adc
pop
rolb
dec
adc
jl
push
xchg
mov
outsl
in
xor
mov
shlb
jnp
jbe
adc
out
nop
push
pop
dec
aad
lock
pop
decb
shrb
cwtl
jg
in
in
repnz
sbb
sub
inc
lret
mov
dec
sub
jnp
mov
mov
pop
mov
push
ja
test
iret
cmp
inc
dec
stos
notl
mov
insb
add
loopne
fwait
pop
mov
cmp
cmp
and
xor
aaa
outsb
mov
in
mov
inc
push
mov
push
or
aam
or
jmp
hlt
cwtl
mov
push
cltd
push
cs
inc
inc
inc
loopne
stos
add
cmp
scas
mov
sbbl
rcll
push
pushl
jmp
imull
inc
loope
mov
sub
mov
xchg
ljmp
pop
je
subb
push
pop
imul
fdivr
test
dec
gs
std
bound
test
adc
jb
int
sub
repz
rorl
add
or
mov
jno
iret
sub
and
cmpb
and
lock
pop
pop
pop
and
into
push
xchg
inc
pop
xchg
nop
xor
xchg
int
dec
rcrl
stos
mov
pop
pop
push
lods
sub
dec
jg
pusha
fisubs
mov
out
insl
cmp
test
mov
je
jno
das
dec
sti
in
and
cwtl
jmp
lret
aaa
pop
shrb
iret
lcall
in
ss
add
push
in
je
adc
adc
in
add
int
repnz
outsb
push
xchg
cmpsb
jne
pop
cmp
inc
stc
stos
push
mov
stos
cmpb
sub
jns
in
daa
std
imul
sahf
stos
add
cmp
push
cmp
call
dec
lahf
push
stos
and
and
push
scas
aad
cmc
xchg
int3
shrl
popf
dec
xchg
mov
sbb
int3
into
cwtl
es
scas
push
fistps
out
subl
pop
insl
pop
or
aas
jecxz
jge,pt
jg
lods
mov
or
shlb
add
jbe
leave
jecxz
lahf
dec
add
movsl
mov
jl
add
cmp
sub
xchg
test
xchg
xor
jge
xchg
clc
and
loop
and
push
leave
and
testl
mov
cmp
cmp
jmp
ret
inc
mov
jmp
sbb
xchg
mov
test
es
push
cmp
pusha
mov
sub
incb
xchg
mov
jecxz
test
lcall
pop
cwtl
call
sbb
loopne
cli
lds
xchg
mov
gs
jp
or
cmp
ljmp
movsl
stos
xchg
mov
gs
jp
or
cmp
ljmp
movsl
stos
xchg
mov
gs
jp
or
cmp
jmp
cli
lds
xchg
cmp
rclb
jge
xchg
fcmovbe
ljmp
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmpsb
fdivl
in
in
xchg
in
sti
lods
imul
jl
sbb
addl
sub
fdivl
in
in
cmc
pushf
lds
dec
fs
insb
and
cmp
sub
lds
pop
in
hlt
sti
test
mov
pop
push
outsl
insl
add
pop
js
dec
or
nop
stc
mov
loope
cmc
dec
pop
pop
incb
xchg
add
cwtl
outsl
and
jne
inc
ret
push
push
dec
fmull
add
in
jne
dec
inc
pop
push
shll
jmp
push
inc
int3
stos
aam
inc
lock
lock
xorl
out
jae
xor
xchg
jne
xor
jns
fnsave
pusha
add
sbb
sub
xor
loope
and
inc
ret
push
cmp
pop
mov
cwtl
sbb
dec
mov
les
test
and
jne
mov
and
mov
sbb
sbb
cmp
xor
mov
es
inc
ds
sub
lret
jecxz
test
xchg
in
add
mov
pop
scas
push
jae
and
adc
es
sub
icebp
cltd
in
mov
rcl
leave
and
js
or
jns
push
sub
xor
mov
movsl
testl
sbbb
sbb
sbb
sbb
pop
adc
leave
int3
in
test
lds
dec
add
sbb
or
cmp
sub
fdivl
in
in
cmc
mov
mov
xor
insb
gs
or
cmp
sub
fcoml
filds
push
out
sub
sbb
mov
fs
in
xchg
iret
pushf
jno
xor
dec
add
sbb
lods
push
movl
ficoms
cmp
and
jb
adc
push
mov
enter
insb
pop
cltd
fwait
incl
sti
jne
xchg
push
sbb
xor
fs
sti
pop
lea
xchg
fildll
jae
test
iret
daa
cmp
sub
mov
and
dec
or
mov
mov
outsl
sub
mov
int
cmp
inc
lods
les
loop
lret
pop
pop
ret
push
push
inc
xor
jnp
shrb
adc
pop
shlb
mov
push
pop
cmpsb
jp
pop
jmp
dec
xchg
push
insb
mov
push
jns
fcoml
push
add
xchg
push
fadds
lahf
addl
loope
and
fucomi
ret
sbb
inc
imul
sbb
push
out
mov
pop
dec
enter
cltd
adc
stos
fadds
mov
rcr
daa
dec
cmp
out
dec
roll
xchg
or
gs
clc
mov
push
mov
sarl
arpl
in
cmp
repnz
inc
loop
lds
mov
and
mov
mov
ja
or
mov
mov
mov
mov
cmc
jns
mov
xchg
pop
popa
mov
pop
add
jp
icebp
add
pop
xor
pop
ret
cmp
sub
test
sub
jl
jae
into
cmp
addr16
or
push
jae
xor
lahf
or
ljmp
pop
jo
sbb
repz
or
shlb
idiv
clc
jmp
out
pop
inc
scas
addr16
cmc
mov
enter
or
fs
push
imul
push
jno
imul
out
dec
and
push
scas
dec
sub
dec
jg
in
cltd
jno
daa
std
xchg
aam
mov
xor
loope
ss
repz
xchg
pop
test
cli
mov
add
idivl
add
lods
mov
mov
or
mov
mov
js
add
insl
shlb
aas
js
or
adc
hlt
pop
ret
push
mov
sub
adc
addr16
push
jge
mov
ficoms
pop
movsb
fidivrs
ljmp
test
push
sub
or
dec
pop
pop
jns
not
addl
stos
imul
pushf
mov
cmp
cmp
cmp
sub
push
aad
adc
ret
iret
cmpsl
mov
pop
add
adc
and
addr16
int3
cmovns
imul
push
jmp
xchg
fptan
int
jl
and
cld
push
outsb
sub
sarb
add
rcll
ljmp
icebp
jl
inc
scas
adc
sub
cli
ja
sbb
ss
cmp
fcmovnu
cmp
cmp
rcll
mov
stos
dec
mov
leave
scas
in
addr16
adc
mov
jns
pusha
adc
mov
lcall
jmp
jge
or
rorb
je
pop
inc
lret
in
mov
inc
sub
mov
xchg
sub
aas
adc
sub
mov
pop
fsubrs
xor
or
pop
sahf
cld
pop
mov
lods
mov
mov
dec
loop
ret
inc
add
fdivl
pop
pop
psrad
xchg
loopne,pn
dec
lret
jmp
idivb
xlat
jnp
xchg
or
fisubrl
push
dec
pop
jbe
popa
pop
dec
insb
or
or
dec
cmp
mov
push
loope
jmp
sub
jg
inc
jbe
and
js
or
xchg
fnsave
addr16
cmc
jg
outsb
cmp
fs
test
out
dec
inc
sub
push
sbb
pop
xchg
push
filds
push
inc
sbb
pop
or
mov
mov
mov
enter
xor
cmp
aaa
xchg
push
dec
lcall
jno
outsl
movsl
inc
cmp
inc
jg
pop
cltd
xor
jp
jne
inc
in
inc
out
push
mov
cwtl
les
es
add
xchg
sarl
addr16
rolb
loop
xchg
mov
mov
push
test
stos
out
push
xchg
mov
cmp
xor
jno
loop
or
out
out
fldcw
test
sbb
in
andl
cmp
imul
adc
enter
in
jp
hlt
ja
mov
dec
cmp
cmp
out
test
fwait
jb
jecxz
divl
subl
dec
scas
test
mov
fisubl
pop
mov
stc
cmp
ret
hlt
inc
jge
lock
pusha
arpl
xor
inc
push
inc
xor
pop
mov
data16
push
inc
dec
outsl
push
icebp
dec
test
xchg
add
sahf
dec
and
fld
mov
push
push
jmp
cmp
das
das
xor
scas
xchg
mov
fmuls
sbb
sti
pop
push
aad
mov
addr16
shlb
adc
rcr
les
std
jbe
mov
mov
pop
out
call
push
xchg
ds
xchg
sbb
xchg
popa
and
sar
push
dec
mov
jae
dec
mov
push
sbb
mov
addr16
call
jbe
inc
mov
fwait
sbb
repz
int3
popf
and
imul
in
loopne
dec
lods
xorl
sub
inc
dec
lds
movsl
nop
bound
sbb
mov
rcrb
push
jae
cmp
divb
mov
mov
jmp
xchg
mov
or
pushf
push
dec
sbb
shrl
out
mov
pop
int3
inc
into
push
dec
or
push
pop
mov
fwait
rolb
pusha
das
cli
jmp
push
push
xor
add
fistpl
pop
pusha
adcb
outsb
mov
hlt
cli
jb
and
out
fisttpl
sub
clc
xchg
add
shll
lahf
je
jno
cmp
aaa
add
adc
sbb
mov
lahf
xchg
sbb
stos
outsl
or
test
sbb
fldenv
rcl
rcr
xchg
xchg
xchg
nop
push
stos
jbe
cli
ret
dec
xchg
push
cld
std
add
sbb
es
call
loope
aaa
test
mov
pop
mov
push
inc
sahf
cwtl
lods
fstp
fcom
jo
pop
mov
fs
mov
fbld
mov
ljmp
repnz
cld
cmp
mov
ja
and
or
mov
mov
mov
mov
mov
sarl
shll
mov
lahf
outsb
dec
sti
lret
fs
in
repz
jnp
subb
or
test
cmp
jne
and
movb
xchg
xchg
out
jo
adc
xchg
xor
loopne
cmpsb
add
sub
mov
pop
jl
jmp
push
jge
add
push
out
pop
mov
inc
and
cmp
inc
xor
lahf
lods
loope
xchg
xor
repnz
and
imul
in
divl
or
inc
jg
in
push
mov
mov
ret
xor
xchg
xor
add
iret
lods
jecxz
in
add
outsl
lods
xor
fisttps
dec
inc
xor
xchg
sti
jle
xor
adc
jns
xchg
push
lahf
cmp
add
jno
out
movsb
mov
clc
jae
and
loop
hlt
lret
cmp
inc
sub
and
fadd
int
fldcw
mov
cmp
push
ds
lods
sbb
xor
mov
mov
jg
stos
pmaxsw
ror
and
aam
stos
push
and
pop
pop
int
test
es
das
repz
add
mov
mov
and
test
aaa
or
xchg
loopne
adc
lret
jmp
mov
jns
jae
push
test
rcrb
test
jae
ds
adc
cwtl
xchg
sahf
out
std
pop
enter
mov
jns
mov
push
cmp
ss
in
mov
shlb
out
dec
aad
mov
loope
jg
xor
xor
movups
xchg
sbb
mov
imul
inc
jecxz
jnp
aas
mov
mov
xchg
sbbb
jecxz
add
xchg
push
add
popa
jbe
xchg
shll
push
test
bound
inc
lret
enter
lret
mov
mov
or
fistl
jge
xchg
push
pop
aas
cmp
push
pushf
pop
loop
dec
cmp
addr16
fstl
mov
daa
sub
les
fnstsw
in
xorl
fsts
jp
xchg
xor
popa
ret
jo
call
xor
push
inc
cld
clc
mov
xlat
lcall
mov
in
xchg
data16
sbb
cmp
fidivs
lods
sbb
mov
and
pop
cmp
xchg
jle
cld
add
mov
xor
movsl
pop
push
pop
pop
pop
jne
xor
fs
enter
icebp
icebp
pop
jno
dec
dec
lds
sub
orl
jg
adc
cli
ret
push
lock
push
pop
jae
cli
xor
addl
dec
and
mov
pushf
jp
jne
cmc
daa
mov
sbb
fidivl
xchg
mov
rcrb
push
ficompl
xlat
rcl
test
cli
ret
jne
pushf
int
adc
cmpsb
mov
shrb
dec
mov
mov
sbb
inc
cs
push
cmp
jne
sub
fwait
addr16
aad
leave
pop
scas
cmp
dec
in
popa
jns
and
mov
dec
mov
add
scas
or
mov
pusha
ds
bswap
das
mov
push
imul
dec
pop
popa
test
scas
aas
test
and
repz
lds
sbb
xchg
mov
inc
rcl
stos
xchg
jg
repnz
xchg
scas
adc
das
adc
outsl
mov
les
lock
jp
data16
sub
inc
lds
push
cmp
daa
or
cmp
mov
js
xchg
sbbb
js
or
cld
cmpb
shlb
bnd
nop
mov
add
jne
mov
sbb
adc
dec
sbb
xor
mov
push
dec
inc
mov
jmp
jns
dec
loope
add
mov
call
mov
dec
in
xchg
inc
jns
cmc
movsb
ss
inc
inc
mov
sub
sub
mov
rcr
test
push
je
sahf
hlt
jge
das
push
into
jns
cmp
andb
jns
ja
mov
xchg
add
adc
xchg
sbb
jl
dec
outsl
loopne
lahf
into
nop
arpl
dec
sti
adc
bound
adc
popa
out
bound
lods
in
inc
and
push
mov
shlb
test
imul
lret
and
movsl
shl
aad
fwait
rcrb
flds
mov
pop
dec
insb
adc
stos
push
jp
jnp
daa
ja
test
mov
xlat
mov
inc
add
push
nop
adc
cli
mov
or
jecxz
mov
fidivrl
sti
jae
arpl
sti
addl
sub
add
sbb
adc
mov
fidivrl
xor
push
fcmovnu
lods
mov
add
test
aam
movsb
pop
push
cmp
xchg
out
jg,pt
jecxz
push
adc
cmpsl
fldenv
or
shr
pushf
loope
or
cmp
dec
out
test
jne
pop
rorb
mov
xor
aaa
mulb
add
addl
push
in
imul
push
in
jg
xchg
fwait
aaa
cltd
mov
inc
lock
lcall
push
mov
xchg
neg
cs
rol
or
inc
push
push
fwait
mov
push
push
mov
and
mov
push
xor
cmpsl
ja
xor
imul
or
sub
push
dec
sbb
inc
add
out
jp
movsl
jg
jne
inc
fimuls
mov
xchg
stos
pop
dec
push
mov
js
mov
cmp
shrl
sbb
push
pushf
inc
or
jg
mov
adc
jb
sub
jb
jl
pop
xchg
incb
push
inc
es
loope
dec
and
sti
loope
jmp
add
jo
push
xchg
lret
jecxz
add
cld
cmpl
xor
pop
dec
adc
lcall
push
xchg
dec
sub
lods
dec
pop
add
lock
adc
std
jg
fnstsw
stc
out
jl
in
cmpsl
sub
std
rcrb
adc
pop
inc
sbb
fmul
aam
cmp
orb
jecxz
mov
mov
mov
fmull
fwait
inc
inc
je
push
ja
test
jg
dec
dec
pop
leave
imul
das
call
jnp
dec
or
scas
pusha
and
in
sub
ja
and
mov
data16
in
in
stc
push
push
push
xchg
test
cmc
or
lahf
xchg
movsb
cmp
push
insb
sub
cmp
adc
popf
cli
stos
xor
mov
sbb
imul
xor
clc
dec
lahf
adc
stc
jp
jnp
mov
xchg
sbb
dec
sti
xor
cmp
sub
mov
push
dec
add
mov
in
icebp
mov
ucomiss
sbb
lret
xorl
invd
and
mov
mov
add
out
testb
mov
cltd
stos
mov
jno
mov
leave
jp
mov
adc
cmpl
repnz
jecxz
push
dec
popa
mov
mov
ja
xor
loope
dec
jl
cwtl
imul
loope
jecxz
popa
pop
or
or
push
inc
sbbl
dec
lds
stos
push
ds
cmpb
lea
scas
fiaddl
bound
in
mov
xchg
movsb
dec
je
imul
push
dec
shl
movsl
popa
mov
fnstsw
cmpsb
mov
and
push
sub
loop
cmpsl
frstor
test
mov
aas
popf
cli
xchg
shll
sub
fcmovne
popa
push
orb
cltd
pop
in
sar
mov
sub
mov
mov
dec
ljmp
rcrb
pop
xor
cltd
or
aaa
mov
popa
xor
jno
xor
shll
xor
fmul
dec
inc
dec
into
lods
cli
inc
fdivrs
andl
lcall
rolb
pop
add
cmp
pop
dec
or
pop
adc
adc
mov
insl
cmp
mov
pop
fdivrp
cmp
repz
loopne
pop
cmpb
xchg
pushf
int
test
jo
xor
mov
cmpsl
sub
push
mov
and
in
pop
insb
dec
shll
scas
fnstenv
ret
xor
and
lds
test
mov
mov
divl
push
xchg
pop
sbb
adc
push
into
in
cmp
cli
push
loopne
xchg
cld
ret
andb
or
lret
cld
dec
sbb
data16
imull
pop
pop
and
popf
xchg
push
pushf
push
les
mov
sahf
mov
jno
mov
lods
or
jp
fdiv
rclb
in
subl
jmp
lods
sahf
fildl
xchg
mov
and
mov
repz
or
stos
inc
fldenv
xchg
xchg
addr16
jp
shlb
das
or
lds
sbb
test
sahf
mulb
xor
ret
fidivs
lds
and
mov
jne
jmp
sub
nop
lret
movsl
mov
adc
das
mov
aas
outsl
loopne
jb
mov
fstl
mov
push
sub
sbb
jne
arpl
xor
push
dec
nop
test
test
in
jmp
adc
daa
xlat
fists
adc
mov
mov
fsts
rolb
pusha
cwtl
out
int
mov
mov
xchg
fwait
mov
loopne
xchg
aam
fwait
adc
jl
pop
ret
jmp
in
inc
rcrb
jne
push
xor
out
mov
pop
add
leave
lods
ss
pop
xor
xchg
add
push
pop
mov
push
popa
call
mov
xchg
mov
jg
and
xlat
or
sub
ret
mov
mov
insb
ror
push
and
lahf
sub
arpl
jp
mov
push
nop
out
imul
insb
test
cmp
loop
xchg
pop
mov
fst
cmpsl
mov
stc
jbe
rcrb
decb
hlt
pop
xor
xchg
adc
nop
mov
arpl
ret
or
test
sbb
addr16
jmp
pop
scas
ret
cld
out
xor
rcrb
imul
test
out
test
xor
pop
insb
stos
iret
sarb
loope
inc
popa
dec
push
jmp
pop
add
xor
inc
inc
cmp
cmc
les
out
dec
in
xor
cld
jle
and
and
or
push
test
inc
cmp
ss
mov
or
cltd
add
push
pop
aas
in
in
and
movsb
sahf
and
mov
or
sbb
xlat
ud0
fisubrl
mov
or
jb
subl
gs
pop
ja
or
mov
std
dec
in
sub
or
fnstcw
mov
cmovl
push
movsb
daa
lods
adc
or
cmpsb
ja
sbbb
imull
pop
jns
mov
push
push
cmp
test
mov
movsb
aad
aas
jmp
sub
pop
push
outsl
mov
and
dec
mov
das
movsl
clc
cwtl
and
mov
mov
jbe
movsl
int
ret
leave
out
xor
xor
scas
pop
popf
ret
pop
mov
dec
xchg
stos
fwait
andb
aas
test
push
xor
clc
out
aas
lds
lea
hlt
mov
mov
test
xlat
test
sarb
sub
je
lock
rclb
cmp
or
ret
inc
xchg
vpavgb
sub
push
sarb
pop
push
clc
repnz
sbb
mov
popl
xchg
je
cld
sbb
and
fsubp
cmp
sbb
xchg
mov
addr16
cmpsl
insb
mov
push
ret
pop
jmp
push
into
rclb
xor
jns
imul
aaa
xor
mov
fcoml
pop
ror
xchg
popf
or
and
cmp
push
mov
subl
addb
testb
jmp
repnz
imul
test
popf
popf
jns
loopne
test
jmp
cmp
sub
push
fs
sub
adc
inc
arpl
or
or
mov
push
popa
inc
fsubrl
pop
subl
inc
xchg
push
fstpt
das
or
cmp
sti
out
adc
icebp
imul
and
outsb
sub
inc
in
std
cmp
mov
in
es
aas
ror
ret
xlat
inc
mov
sub
mov
leave
fwait
xchg
adcb
adc
cmp
js
jno
lea
sbb
jmp
imul
shrl
les
xor
push
cmc
push
cmc
mov
adc
fsubrl
enter
cmp
xor
xor
push
mov
sarb
dec
xor
adc
ret
add
jae
outsl
and
out
imulb
inc
sub
inc
ret
add
call
sbb
mov
sbb
lock
mov
or
shl
les
mov
fstp
lret
bound
mov
ljmp
aas
test
dec
and
mov
shrl
nop
dec
test
fistpl
enter
ja
xchg
xor
stc
iret
jb
lock
add
cwtl
sti
and
test
fsubs
push
les
aaa
mov
xor
xchg
mov
cmpsb
les
inc
stos
jne
jp
mov
rclb
push
movsl
sub
lret
fidivl
loope
pushf
aaa
xor
js
adc
or
popa
aam
jo
xchg
push
add
pop
inc
jp
es
lds
pop
xchg
aas
mov
mov
dec
testl
or
loopne
mov
add
add
je
movsb
dec
xor
mov
jl
mov
mov
fidivl
adc
lea
cs
mov
pop
inc
adc
fcoml
mov
lods
mov
add
or
push
mov
mov
clc
cmp
rorb
ds
xchg
xchg
into
out
xor
add
jo
lods
xor
je
pop
mov
push
xor
cmp
insl
sti
insl
pop
lret
fimuls
stc
cmp
inc
mov
pop
out
in
test
pushf
shll
jae
push
mov
mov
dec
mov
stos
stos
xlat
addb
iret
sbb
test
sub
xchg
mov
sbb
lret
ss
add
adc
mov
std
jnp
daa
movsb
fsts
mov
adc
iret
adc
ret
in
in
cmc
mov
mov
xor
insb
gs
or
cmp
sub
fdivl
in
in
cmc
mov
mov
xor
insb
gs
or
cmp
sub
faddl
in
jne
cmc
mov
mov
xor
push
inc
cmp
enter
in
in
in
lds
out
jl
sbb
xchg
std
jae
inc
stos
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
or
push
cmp
push
sbb
jo
mov
lahf
mov
int
in
std
or
push
cmp
jbe
inc
jge
lea
mov
imul
std
or
push
cmp
jbe
inc
jge
lea
fdivr
int
scas
stos
scas
mov
jl
sub
fmull
cltd
xchg
push
inc
and
mov
addl
loop
shrb
dec
jbe
sti
xchg
into
xchg
fdivl
mov
dec
push
jns
sbbl
lods
xchg
ss
inc
aam
rcrl
sub
xchg
xor
cmp
sbb
outsb
dec
std
sbb
adc
inc
and
dec
jge
jge
adc
inc
inc
adc
mov
pop
out
leave
test
rcrb
in
jge
xchg
pop
notb
pop
xchg
mov
popf
mov
out
scas
std
xor
and
mov
std
leave
int3
insl
cmpsb
fdivs
sub
mov
into
es
push
dec
pop
jbe
inc
jge
lea
mov
imul
std
nop
push
inc
jnp
sub
xor
add
stc
and
clc
scas
clc
out
xchg
pushf
mov
mov
mov
dec
imul
and
cmp
ret
cli
shl
mov
pusha
test
sbb
outsb
or
insl
inc
jge
lea
mov
imul
std
or
push
cmp
jbe
inc
jge
lea
mov
imul
std
or
imul
cmp
mov
test
hlt
rolb
test
popf
sarl
sbb
loopne
sub
jb
inc
adc
lahf
push
or
fcompl
lods
in
inc
jmp
je
icebp
or
iret
push
sub
jle
addr16
jle
adc
std
mov
sahf
dec
add
test
and
loopne
daa
xor
sbb
dec
hlt
pop
push
xchg
pop
sbb
in
xor
mov
dec
loopne
jno
cmp
dec
mov
mov
fstpt
or
in
pop
das
xchg
out
lods
mov
dec
clc
hlt
jg
mov
adc
dec
imul
cmp
mov
jmp
xor
sbb
jecxz
loopne
aam
pop
push
shll
dec
decl
cwtl
lcall
push
shrb
es
add
adc
sbb
jmp
sbb
push
sub
cltd
ss
cmc
loope
insl
cmpsb
cmp
xor
and
mov
in
jmp
mov
mov
pop
add
lea
fadd
xchg
das
add
roll
xchg
xor
jbe
es
mov
icebp
push
clc
xor
inc
jb
imul
stc
mov
dec
dec
dec
insb
jne
aaa
mov
push
mov
xchg
jecxz
ret
stos
add
adcb
and
xlat
push
sahf
leave
and
xchg
sub
push
jnp
jmp
push
data16
gs
jp
shrb
mov
cmp
ljmp
dec
fbstp
inc
add
icebp
xor
lahf
mov
xlat
push
xchg
or
jnp
push
or
out
xor
pop
sub
scas
aaa
shlb
aam
adc
movsb
int
mov
or
adc
int3
adc
cltd
fcom
scas
rolb
push
les
inc
clc
loope
pushf
scas
negb
out
fs
mov
cmp
dec
popf
cmpsb
inc
je
scas
iret
cwtl
push
fcmovnu
rdpmc
jns
frndint
aaa
mov
pop
incb
or
in
cmpsl
out
pop
fnsave
loope
add
mov
jbe
mov
xor
in
mov
cltd
test
loop
in
mov
subl
inc
cmpsl
or
and
xor
pop
stc
fs
in
outsl
jmp
adc
iret
call
or
scas
xchg
or
or
and
jns
and
mov
xchg
scas
mov
aaa
xlat
or
in
lret
bndstx
xchg
bound
push
push
movsb
mov
fucom
outsl
lcall
cmpsl
ss
mov
xchg
sbb
dec
subb
xor
dec
pop
xor
out
pop
lret
fwait
xchg
jecxz
dec
repnz
jl
sub
pop
pop
pop
filds
dec
popa
ss
push
mov
stos
xchg
mov
loopne
insl
addr16
push
mov
add
cmp
ret
or
cmpsb
data16
and
nop
scas
xor
or
push
mov
inc
sarl
sub
push
stc
add
add
pop
mov
sbb
push
mov
stos
inc
inc
lahf
sbb
jnp
push
repnz
sbb
addl
lea
out
cmpsb
call
je
and
push
sub
and
test
icebp
ss
mov
jge
rcll
inc
imul
mov
xor
push
aam
mov
push
mov
sbb
lds
or
mov
pop
rolb
mov
inc
pop
xor
jmp
sbb
pop
adc
je
push
imul
cmp
cltd
outsl
insl
bound
jg
mov
rclb
movsl
cmp
pop
int3
cltd
lods
mov
push
add
lods
aam
ljmp
push
pop
and
jnp
push
pop
aaa
xchg
push
mov
lock
mov
add
cmp
cmpsl
and
aas
stos
ret
xor
cmp
jnp
roll
outsb
sub
inc
sub
adc
sub
ss
mov
xorl
sbb
or
in
mov
push
mov
lret
pop
inc
dec
lea
xchg
cltd
cltd
inc
lods
xor
dec
lds
jbe
mov
aas
movb
mov
in
jl
mov
xor
repz
sub
out
aam
cmc
inc
mov
mov
imul
lahf
mulb
dec
push
and
mov
fnsave
pop
add
jp
xchg
mov
mov
mov
lret
xchg
icebp
clc
gs
and
xor
in
lahf
movb
iret
inc
sahf
mov
hlt
fstp
repnz
in
adc
stos
push
add
push
sub
repnz
cli
push
shll
enter
ja
lds
out
jl
enter
cmc
xor
xor
test
push
and
jo
lret
lret
cwtl
jb
pushl
js
sarl
lock
push
fcompl
lock
and
adc
pop
outsb
dec
shl
dec
aas
pusha
popf
push
int3
sbb
iretw
incb
sbb
sub
loop
xchg
enter
or
adcb
fcomps
push
add
sub
rorl
inc
test
pop
repz
into
or
jmp
orl
sbb
in
out
xor
cmp
add
cmp
push
loopne
adc
fimull
std
lret
jecxz
inc
movsl
mov
rcrb
mov
loopne
mov
or
popa
sbb
int3
add
stc
inc
mov
mov
jmp
fidivrs
fisubrl
mov
cwtl
inc
cmp
icebp
or
ficoml
mov
dec
xchg
mov
inc
out
push
push
mov
cltd
sahf
sub
imul
dec
lods
push
inc
cmp
sub
pop
outsb
in
sub
push
enter
call
mov
mov
jecxz
add
xchg
test
subb
lahf
dec
push
mov
push
sub
mov
rclb
fmuls
stc
pusha
dec
fmull
and
jp
mov
dec
mov
loopne
jb
fucomp
pusha
mov
fistpl
cmovg
js
js
es
adc
pop
push
add
jecxz
lds
and
icebp
and
pop
das
adc
adc
add
push
or
lea
push
call
xchg
push
xchg
ss
fcmovu
aam
mov
xor
push
mov
xor
xchg
pop
adc
xor
lods
inc
cltd
pop
aas
sbb
inc
mov
mov
push
data16
mov
popa
popa
jmp
je
out
mov
cmp
jg
test
or
jnp
test
imul
int3
movsl
jmp
sahf
icebp
test
aam
rcll
aaa
adc
xor
inc
pop
jle
push
sub
pop
sahf
inc
jge
pop
xor
idivl
cwtl
daa
popa
push
pop
lock
inc
mov
shll
orb
mov
jmp
aaa
mov
xchg
push
jnp
jl
jns
inc
jns
repnz
jecxz
or
mov
imul
jmp
adc
jbe
and
in
out
pop
adcb
jno
jae
adc
cmp
cmp
daa
mov
push
jmp
lea
fnstcw
inc
lcall
xor
jne
pop
add
pop
dec
int
mov
xor
fptan
in
idivb
jl
inc
les
roll
into
repz
push
rorb
jle
subl
add
popa
jmp
pushf
sub
cltd
js
fidivl
ret
addr16
sub
aaa
ss
sub
mov
jg
adc
popf
icebp
xchg
xchg
or
inc
popf
es
ficompl
and
scas
pop
es
sahf
stos
adc
pushf
in
mov
cld
or
loop
sahf
pop
push
or
push
icebp
mov
add
lcall
inc
push
out
stos
mov
and
cmpsl
cltd
idiv
ss
sub
sahf
cmp
jp
repnz
mov
xor
stos
fucom
mov
dec
mov
ret
icebp
lods
sarl
in
dec
repz
or
cmpsl
popf
cmp
arpl
loop
adc
add
xor
rorb
mov
dec
and
scas
mov
sti
scas
mov
aas
decb
sbb
lcall
loope
movsb
andl
dec
pop
hlt
sub
mov
mov
nop
jb
cmp
push
mov
addr16
scas
sub
in
loop
jmp
int
mov
in
pop
push
fsubs
sbb
addr16
rol
clc
jnp
test
cmp
das
je
pop
imul
inc
or
adc
fs
cs
ret
push
aas
int3
lahf
cmpsb
pop
sub
int
in
repz
mov
repz
lcall
jne
xor
roll
dec
out
fdivrs
pop
stc
popa
hlt
inc
dec
jle
push
xchg
xchg
push
mov
xchg
xchg
aas
pop
sub
mov
adc
cmp
stos
movsl
mov
sbb
mov
and
scas
lret
stos
insb
jo
sub
xchg
mov
pop
jns
xor
jg
sbb
or
jb
mov
inc
mov
cltd
cld
xor
lea
xchg
xchg
cmp
xchg
inc
ljmp
pop
enter
movsl
push
cmpsl
pop
ljmp
sub
push
fisubrs
push
das
sub
pop
jnp
mov
vhsubps
gs
ja
jb
cmp
or
out
mov
and
xlat
add
js
jg
orb
and
aaa
rolb
enter
inc
sbb
jp
bound
sbb
cmp
ffree
inc
rol
mov
adc
jb
dec
xchg
mov
repnz
pop
arpl
int3
out
fistps
xchg
sub
dec
fs
jo
sub
rcl
push
imul
add
dec
inc
sub
nop
test
shl
mov
test
mov
lods
mov
les
cltd
test
arpl
cwtl
push
and
shrl
dec
mov
clc
subl
loop
mov
dec
mov
or
push
and
mov
mov
push
inc
divb
loopne
sbb
pop
add
sar
pop
aad
pop
mov
or
cmpsb
and
dec
out
mov
out
scas
cmp
and
add
push
xchg
cwtl
mov
stos
sub
sbb
sub
sbbl
cmp
push
cmp
mov
test
adc
repnz
outsl
out
mov
leave
aam
ret
inc
sbb
push
push
ret
sti
mov
sbbl
shlb
xchg
push
sbb
fiadds
rcll
fsubr
test
ja
cli
xlat
mov
and
mov
lcall
sbb
aas
mov
bound
adc
js
clc
insb
aam
cmp
or
fisubs
inc
adc
sbb
push
mov
push
cmpsb
adc
stos
mov
mov
xchg
sub
ret
or
and
cmpb
daa
dec
in
mov
sbbl
xchg
and
inc
out
hlt
sbb
insl
jmp
and
clc
stos
mov
out
in
jmp
lahf
mov
fisttpll
lods
out
xchg
pop
and
movsb
inc
pop
test
and
xchg
pop
les
pop
dec
les
dec
add
dec
fwait
mov
in
push
mov
mov
sti
out
and
dec
test
bound
jo
bnd
push
push
jmp
or
filds
jb
mov
insb
fwait
pop
add
inc
incb
les
mull
push
scas
cli
popf
cmp
lds
pop
mov
icebp
outsl
enter
aas
fwait
cld
fstpl
ret
pop
mov
repz
loope
in
push
negb
xchg
push
in
out
sar
pushf
mov
fsts
test
in
and
and
inc
mov
push
pop
shll
aam
lret
sti
sbb
and
mov
pop
inc
sahf
inc
sbb
or
lahf
in
scas
clc
push
cmp
adc
adc
testb
jge
sub
mov
sar
pop
cmpsl
sbb
arpl
cmp
xor
repz
aam
sbb
or
and
test
push
cmp
imul
xor
lahf
xor
xor
leave
test
jb
xchg
inc
sbb
jmp
or
test
jns
mov
mov
es
ljmp
stos
repz
sub
dec
std
imul
popa
and
mov
into
and
cltd
lea
int3
mov
outsb
mov
dec
pop
mov
shrb
xor
or
ss
addr16
add
mov
ja
in
fucomi
cmp
iret
stos
or
jl
gs
jae
add
mov
jg
arpl
lods
add
pop
xchg
mov
adc
popf
mov
sub
xchg
dec
dec
mov
lea
and
sbb
jmp
and
in
inc
outsl
lea
nop
dec
popa
call
popf
add
imul
jecxz
jle
cwtl
cmp
dec
push
notb
jbe
sub
pop
mov
add
int
enter
xor
sbbb
sub
aas
idivb
and
inc
dec
cmc
out
xchg
mov
dec
mov
or
push
sub
xlat
jb
push
cs
or
adc
pop
subl
cmpsl
add
sub
xchg
gs
cmp
adc
xchg
inc
dec
dec
jl
addb
je
fsts
pop
subl
sar
adc
ret
ret
cwtl
dec
cmp
and
stos
lea
cmp
sarb
popa
cmp
testb
dec
fidivl
dec
ret
test
adc
add
cmpsb
lret
aaa
add
sub
jg
lret
dec
cmp
les
mov
cmp
lea
pop
cmp
movsl
and
sub
stos
fdivl
xor
mov
cmp
mov
cmp
or
lods
xchg
xchg
sbbl
sbb
cwtl
shrb
mov
push
sub
call
stos
xchg
xchg
stos
mov
sub
imul
stos
or
fisubl
sub
pop
fyl2x
jg
xchg
mov
add
dec
lods
repnz
sub
rcr
loopne
lret
hlt
cmpsb
loopne
loopne
jp
mov
mov
pop
mov
aas
mov
sbb
jg
fwait
sbb
add
mov
aam
rorl
lahf
test
adc
hlt
xchg
xor
xchg
jbe
dec
mov
pop
pop
lret
mov
and
xchg
aas
je
inc
test
out
insb
lock
xor
and
sub
fnstsw
fs
add
lcall
cmpsl
push
aad
bound
lret
shrl
subl
sbb
add
icebp
xor
ljmp
xchg
dec
jmp
mov
outsl
fnstenv
das
inc
sbb
add
repnz
jl
push
add
mov
mov
enter
jno
int3
mov
rorb
and
jb
jae
xchg
jns
inc
rol
push
sbb
sbb
push
das
push
outsl
jae
aad
dec
xchg
sub
push
ja
outsb
in
in
je
loopne
inc
fs
sub
inc
inc
movsl
sbb
or
mov
dec
mov
and
pop
mov
rolb
cmp
out
pop
dec
pop
stc
sbb
fsubp
int3
sarl
inc
mov
test
or
or
or
repnz
cmp
mov
or
jbe
ja
sahf
stos
pushf
adc
push
pop
or
push
clc
xchg
and
sub
xchg
dec
mov
test
out
movsb
xchg
test
dec
pusha
fmull
aad
out
repnz
mov
sub
inc
cmp
cmp
scas
lret
hlt
mov
cmpsb
sbb
xor
and
lahf
imul
push
sub
xor
pop
cwtl
shrb
fdiv
movsb
xor
cmp
and
add
mov
aad
cmc
xchg
or
mov
adc
decb
gs
pop
xchg
lods
aam
xor
into
sub
aas
jmp
adc
pop
push
sub
fldl2e
stos
jge
pop
lea
xlat
pop
pushw
fildll
insl
sub
cs
nop
movsl
jno
and
sub
xchg
inc
and
pop
push
fdiv
xor
xchg
and
lahf
xorl
shlb
rcl
stos
test
mov
pop
push
jle
icebp
movsl
mov
data16
sahf
ret
xchg
negl
mov
xchg
push
jns
dec
mov
pushf
es
mov
push
push
jp
sub
cmp
cmp
popf
rep
je
pusha
inc
insb
pop
in
cmp
adcl
in
cltd
jg
mov
sbb
dec
dec
out
push
in
ds
jb
xchg
je
imul
mov
lds
loope
lods
mov
repnz
inc
inc
xchg
or
rclb
mov
js
mov
stc
pop
ss
push
mov
or
mov
dec
inc
outsb
mov
mov
xor
pop
sub
call
sbbb
push
aad
xorl
shlb
or
in
rep
out
sbbb
mov
mov
dec
iret
jnp
jo
sbb
stc
jle
sbb
cmc
xlat
aas
xchg
mov
test
inc
les
test
push
adc
sahf
pop
seto
fdivl
mov
out
push
dec
adc
xor
or
jo
stc
mov
jle
stc
fisubs
pop
and
jle
dec
and
pop
js
jmp
fsubr
int
jp
aaa
mov
or
and
dec
adc
pop
fucom
mov
fidivs
pop
xchg
adc
arpl
ret
push
push
xor
test
dec
add
xor
daa
push
pusha
dec
jmp
cmc
loopne
and
sbb
xchg
pop
sbb
mov
mov
js
xor
clc
xor
subb
sahf
insl
cmp
leave
fstps
mov
cwtl
sarl
sub
inc
scas
cmc
mov
sub
jno
jns
push
mov
loopne
push
movsb
inc
lock
pushf
add
daa
mov
xlat
lock
jmp
outsb
push
xchg
jne
notb
or
adc
pop
xchg
aam
icebp
push
jg
clc
push
call
fstpl
add
inc
or
jp
cmpsb
nop
add
aaa
sub
mov
pop
mov
push
xchg
adc
xor
jb
pop
ja
adcb
xchg
mov
test
jo
xor
mov
cltd
or
pop
adc
repz
sbb
rdtsc
mov
sub
adc
sub
push
and
je
stc
ficompl
cmp
adc
pop
fcoms
push
xchg
stc
xchg
mov
out
or
shll
adc
daa
adc
dec
pop
xor
mov
in
pop
or
ja
fistpll
push
sbb
cmp
imul
xchg
movsl
int
jns
stos
rcrb
insl
xchg
lea
dec
and
icebp
fisttpl
bound
fisubrl
mov
xor
pushf
sbb
cld
mov
fstpl
shlb
xchg
data16
push
cli
mov
nop
pcmpgtd
cwtl
les
outsl
movsb
cld
hlt
std
cmp
inc
imul
sub
stos
mov
add
pop
inc
addb
in
or
pop
outsb
jns
cmpsl
mov
or
xchg
cmp
pusha
fstps
cmp
shrb
sbb
or
je
mov
out
inc
das
loop
gs
inc
out
push
fmuls
stc
push
pop
out
outsb
sbb
addb
mov
push
xchg
shll
pop
push
and
or
mov
fcomps
and
imul
fistl
mov
push
xorb
call
mov
or
stos
ja
push
out
outsl
cmp
movl
fiadds
xchg
test
inc
aaa
mov
icebp
rolb
fisubl
mov
mov
data16
mov
push
js
insl
adc
aaa
adc
add
gs
enter
push
lret
ljmp
out
dec
or
arpl
jne
repz
lods
or
pop
lock
pop
mov
in
int
fcomp
test
ljmp
test
cs
sbb
push
fmull
stc
jl
mov
xor
dec
jae
insl
push
movsl
push
enter
dec
jl
cli
sarb
add
sub
int
fdivp
add
inc
stos
dec
sahf
sbb
adc
jle
push
leave
lds
outsb
pop
ss
outsl
xlat
mov
push
xor
lea
test
push
cmc
je
dec
ja
dec
subb
lds
xchg
dec
lret
adc
cmp
jbe
inc
jge
lea
mov
imul
std
or
push
cmp
jbe
inc
jge
lea
mov
imul
std
or
push
cmp
jbe
inc
jge
mov
mov
imul
std
or
push
cmp
jbe
inc
std
xchg
jb
bound
xchg
or
mov
ret
dec
cmp
push
sbb
shl
xchg
jecxz
shll
mov
or
arpl
push
xor
xor
popa
adc
shl
xchg
ret
shll
mov
fndisi(8087
xchg
arpl
nopl
dec
std
mov
subl
lret
addb
es
push
lret
test
adc
sbbl
xchg
movsb
rcr
clc
inc
jb
or
fisttps
cmc
inc
add
mov
inc
pusha
pusha
xchg
jl
push
jb
and
insl
leave
pusha
and
adc
jle
pop
pop
dec
dec
ds
pop
mov
inc
mov
jae
inc
fs
inc
xor
cld
xchg
or
mov
out
aas
dec
mov
pop
hlt
jnp
rolb
icebp
mov
sbb
add
shl
adc
ret
xor
shll
test
xchg
jns
je
mov
jns
imul
movsb
xchg
loope
xor
xchg
and
pop
dec
inc
xor
xorl
and
mov
xchg
xchg
in
jae
arpl
pop
insl
das
inc
and
jb
adc
mov
cmpsb
icebp
cmpsl
shrb
xchg
shlb
and
cli
data16
or
xchg
shlb
mov
mov
xchg
repnz
jae
and
add
add
push
and
jno
xor
mov
shll
addl
adc
push
xor
xor
popa
adc
xor
mov
shll
addl
aad
mov
outsb
outsl
or
dec
adc
mov
roll
mov
inc
arpl
mov
aaa
sub
xchg
mov
xchg
pop
jge
repnz
xor
pop
addr16
cmpb
insl
call
mov
pop
repnz
stos
xor
cmp
enter
push
and
xchg
fnsave
popf
jbe
cli
cmpsl
fs
mov
sbb
sti
popa
cmpsl
push
or
jb
add
pop
push
and
jmp
cli
fwait
xor
cmp
lock
push
js
call
cmpsl
sub
call
orb
sbb
hlt
lods
dec
fisubrl
xchg
jle
leave
or
lret
adc
cmpb
hlt
and
adc
and
aam
cwtl
lods
inc
xchg
mov
push
push
pop
decb
xchg
mov
stos
push
pop
inc
leave
or
sbb
stos
stc
jne
loopne
fwait
adc
jnp
test
xor
stos
aaa
add
mov
ret
xchg
or
inc
stc
cmp
jle
movsb
sbb
dec
cwtl
mov
cmp
ret
jmp
movl
out
mov
or
pop
loop
idiv
mov
fisttps
orl
xchg
ljmp
inc
das
ljmp
xchg
mov
xor
push
or
push
aaa
mov
fwait
out
jns
mov
in
mov
sbb
cmp
inc
pushf
jns
pop
fidivs
shrb
xor
jl
enter
sbb
mov
bound
imul
mov
xchg
mov
add
sub
pop
out
mov
push
out
mov
out
ds
repz
ja
fucomp
arpl
and
scas
jbe
add
push
inc
in
rclb
sub
popa
lahf
push
mov
push
stc
pop
jl
test
jb
sbb
and
imul
push
add
push
lds
xchg
pop
and
scas
pop
mov
cmp
sbb
sbb
cli
and
push
sub
mov
mov
or
cmp
cmp
es
pusha
and
cwtl
cmp
lret
es
stos
xchg
xorl
mov
pop
scas
out
pusha
ja
pop
pop
cmp
lcall
sbb
xchg
jne
movsl
sarl
sahf
outsb
hlt
sti
sbb
scas
sbb
mov
mov
test
aad
scas
or
jns
push
xchg
mov
mov
xor
jecxz
dec
dec
adc
dec
insb
mov
inc
iret
sahf
into
xchg
dec
push
lds
jo
pop
loop
xchg
outsl
aaa
sbb
jp
mov
and
pop
sbb
lret
das
ret
das
xchg
fisubl
sbb
jmp
inc
cli
dec
stos
inc
inc
inc
pop
xor
mov
div
lret
sub
aam
sahf
lahf
cmp
movsl
fsubrl
inc
repz
jns
xchg
jb
adc
in
inc
imul
pop
xchg
jnp
mov
mov
xorl
and
xor
lods
negb
push
xor
ja
push
and
cmp
movsb
xor
sub
cltd
mov
lret
sbb
shll
or
lock
xchg
bound
ds
cmpsl
xchg
rep
pop
mov
cmpb
xor
inc
inc
mov
js
cmp
xlat
pop
push
inc
sub
sbb
dec
pop
in
movsb
lret
jns
pop
mov
pop
stc
push
mov
add
subl
sub
push
fwait
addr16
push
lock
pop
les
xor
test
icebp
subb
jp
cmp
jae
xor
xor
orl
cmpsb
xchg
mov
aas
xchg
pop
lods
loop
js
inc
pop
ffree
arpl
hlt
outsl
es
mov
outsl
jmp
or
roll
test
scas
push
xlat
xor
inc
cmp
add
incl
mov
cmp
push
adc
xor
out
notb
jl
jb
mov
lret
out
and
fwait
sub
clc
mov
roll
test
pop
ret
xchg
ret
xchg
imull
pop
shrl
inc
fsubr
shl
test
xor
pop
ficoml
xchg
xchg
adc
mov
popf
jge
mov
or
ja
cli
mov
mov
icebp
outsb
sub
cli
loopne,pt
outsb
push
sub
daa
jns
fbld
loop
mov
fwait
scas
mov
dec
inc
hlt
jecxz
daa
ret
push
push
lods
xchg
decb
mov
call
push
popf
les
je
cwtl
lods
ret
and
aad
cwtl
mov
dec
pop
and
mov
sub
inc
arpl
arpl
mov
lea
fisttpll
out
jle
movsb
mov
pop
sti
jo
cmc
test
adc
enter
les
jg
mov
test
mov
adc
clc
mov
das
mov
sbb
std
or
or
out
es
xlat
lods
mov
pop
aam
mov
out
leave
or
jecxz
mov
adc
pop
aas
pop
and
xchg
jle
ja
aaa
mov
push
and
ret
or
in
sti
out
sbb
pop
jb
push
incl
out
and
imul
gs
ret
mov
inc
scas
ds
mov
sbbl
ja
dec
ja
push
cmpsb
dec
xor
dec
imulb
adc
xor
leave
cmp
fsubrl
sbb
shrb
and
mov
lea
add
add
mov
out
outsl
jle
pop
add
addl
je
in
das
leave
mov
sbb
pop
adc
inc
cmp
int3
ret
lods
out
out
hlt
inc
cmpsl
mov
dec
mov
fisubrs
popa
jns
xchg
out
add
adc
xor
ja
push
cmp
or
sahf
adc
daa
lahf
arpl
scas
or
sbb
or
fsubrl
add
sub
test
jl
fistpl
inc
sahf
icebp
cs
andl
jmp
mov
js
popf
jo
xchg
out
cmp
stc
mov
xchg
push
adc
add
sti
enter
cld
and
nop
jp
xchg
adc
dec
lods
add
pop
stos
ss
outsb
repnz
xchg
clc
mov
scas
pop
iret
popa
insb
sbb
test
jo
pop
mov
or
ret
cmc
cmp
shlb
andb
outsb
dec
cli
loopne
cld
outsb
aas
pop
sbb
fists
push
or
fnstcw
pop
cmpsl
sub
mov
cmpsb
cmp
sbb
out
push
sub
sahf
adc
mov
mov
pop
test
aad
sbbb
insb
xor
mov
cmp
dec
out
aam
inc
pop
jl
mov
cmp
stc
inc
xlat
sbb
dec
xor
jl
movsl
das
mov
dec
imul
dec
adc
mov
inc
pop
dec
aas
fs
cmp
mov
mov
scas
pop
int3
jg
mov
fs
dec
test
movsb
clc
adc
xor
in
and
jnp
push
scas
fbstp
nop
inc
cmpsb
push
loopne
xchg
mov
pop
mov
jno
cwtl
xchg
mov
jecxz
mov
mov
sti
daa
in
pop
sub
jmp
mov
adc
out
shlb
lods
out
ret
mov
lcall
inc
push
pop
xor
gs
repnz
subl
adc
jle
sahf
into
cmp
je
das
pushf
xchg
xor
out
xchg
out
mov
imul
jl
stos
adc
scas
adc
mov
or
inc
xor
sbb
xor
xor
adc
imul
imul
lods
nop
pushl
dec
add
pop
mov
add
mov
pop
les
add
outsb
and
add
mov
scas
push
jle
dec
push
stc
cmpsb
fisttpl
sbb
adc
xor
add
sub
push
inc
lods
outsl
inc
ficoms
imul
add
out
inc
dec
push
mov
cli
hlt
loop
push
stos
rcrb
add
rclb
enter
push
fcmovnb
xchg
jl
dec
xchg
jl
mov
jg
adc
lret
sti
sub
or
inc
cmp
xor
xchg
dec
fiadds
aam
frstor
jmp
bound
and
cmp
jecxz
sbb
sarl
mov
jmp
mov
aas
mov
jg
xor
mov
cmpsb
ja
addr16
fs
andl
test
js
inc
push
mov
dec
jl
adc
inc
cld
inc
aaa
inc
arpl
push
je
in
xchg
cs
pop
cmp
or
mov
mov
pusha
and
mov
call
push
inc
mov
test
mov
dec
divb
and
rol
ret
jns
mov
negl
mov
stc
inc
xchg
movl
xchg
mov
aad
dec
jge
std
int3
lods
mov
sbbb
mov
xor
or
insb
es
pop
ljmp
nop
push
dec
icebp
inc
fisubrl
nop
jb
pop
cwtl
push
iret
int
pop
push
dec
mov
inc
xlat
aam
push
inc
xlat
push
push
push
push
mov
pop
lock
xchg
dec
iret
pop
shlb
in
pop
pop
push
ljmp
pushf
inc
add
or
mov
sarl
in
xor
into
inc
ret
dec
lcall
js
mov
mov
add
nop
adc
jne
lock
aad
ss
jo
inc
push
pusha
push
jb
adc
sub
sub
aaa
jae
mov
mov
outsl
mov
jno
iret
push
aas
loop
lods
mov
mov
insb
mov
or
emms
pop
push
mov
aad
mov
in
popa
stc
or
xor
cmp
jg
ret
add
jae
cltd
xchg
inc
icebp
push
bound
inc
cli
cmp
add
mov
dec
lret
jmp
aad
pop
int3
shll
or
fs
inc
and
or
fcmovnbe
outsl
adc
push
sub
ret
lods
push
or
outsl
mov
inc
ja
pop
push
mov
sub
shl
hlt
scas
aam
push
cmpl
jge
cmp
movsl
enter
lcall
sub
dec
fistpl
pop
aaa
and
adc
or
jnp
sbb
loopne
fistpl
hlt
mov
xor
ds
ret
jmp
mov
lods
ret
out
adc
int
inc
dec
outsb
mov
out
outsl
out
icebp
into
jbe
push
adc
leave
push
push
lea
xchg
int3
in
jne
rol
mov
int3
lret
insl
push
mov
movsb
or
rcr
popa
cmpsl
in
jnp
insb
icebp
cmc
xlat
jns
dec
es
cltd
push
xor
nop
pop
mov
xchg
in
arpl
cs
fisttpll
xor
lock
andb
cmp
sti
movlps
jne
push
mov
dec
pop
mov
sbb
imul
pop
dec
enter
push
dec
mov
mov
push
cmp
push
mov
xchg
fmuls
ja
cwtl
movsb
xor
imul
scas
bound
sti
xor
daa
lock
xchg
xor
sub
outsb
fstl
dec
pop
mov
loop
repnz
test
addr16
in
inc
and
lcall
sbb
mov
pop
dec
sbb
mov
int
test
rcr
xchg
and
push
lock
lret
or
inc
lret
lahf
outsl
loop
sub
aad
sub
dec
pop
xlat
push
push
and
add
cmp
test
clc
call
xchg
cmp
xor
clc
pusha
arpl
dec
jne
fwait
pop
in
adc
ljmp
mov
mov
outsl
out
in
dec
jo
push
lcall
push
mov
xchg
mov
fadds
xor
iret
xor
push
sub
das
mov
push
sub
adc
mov
and
cli
add
mov
fstps
and
and
lret
dec
in
mov
and
mov
and
dec
pop
ljmp
xchg
cmp
mov
data16
gs
mov
loopne
das
jo
aaa
lods
mov
ret
or
sti
xlat
jp
lods
mov
insb
daa
enter
or
adcl
cmp
test
popa
scas
xorb
insl
jb
insl
out
adc
pop
mov
jbe
push
cmpsl
jge
cwtl
das
fs
je
hlt
insl
sbb
adc
scas
loopne
dec
lret
cmp
jg
dec
xor
cmc
sbb
fisttps
fwait
jp
mov
jne
cmpsl
cs
mov
std
iret
fidivl
addps
in
jmp
xchg
adc
push
aaa
sub
jl
in
inc
iret
add
and
jb
mulb
jle
cmpsb
dec
push
fimull
inc
aam
and
lret
and
xchg
orl
sbb
add
mov
frstor
push
pop
fs
jge
insl
stos
out
jecxz
mov
test
stos
push
lret
jbe
lods
out
out
mov
in
jae
jecxz
sbb
stos
ljmp
adc
loopne
loope
jp
imul
in
dec
js
push
int3
mov
inc
insb
dec
jne
shlb
mov
or
push
pop
jnp
xchg
out
sub
movsb
mov
fisubrs
inc
xchg
mov
mov
and
push
lods
xor
retw
fnstcw
mov
out
and
xor
insl
or
cmpb
mov
popa
lea
iret
sahf
and
and
adc
push
or
push
out
fists
mov
sub
dec
cmpsb
xor
or
cmp
jg
mull
sahf
dec
xchg
aam
std
js
nop
xor
add
aaa
or
inc
mov
scas
jbe
das
outsl
shll
loopne
xor
and
popa
sbb
cmp
out
sbb
pop
mov
dec
mov
stos
mov
sbb
push
sub
cmp
scas
scas
xchg
stc
inc
xchg
xchg
mov
movsl
cmp
cmp
mov
ss
out
testb
push
lods
ljmp
or
sub
incb
cld
mov
mov
lds
icebp
int3
jle
test
outsb
xor
xor
pusha
push
aad
mov
xor
xchg
lret
shl
ficoml
std
inc
cli
imull
cs
cltd
jp
mov
rolb
push
mov
mov
sub
sbb
mov
push
sahf
into
push
sbbl
adc
or
ja
xor
fcomps
cli
sub
loope
mov
js
outsb
jo
cli
dec
orl
loopne
cmp
adc
push
xchg
out
jecxz
mov
pusha
sbb
shlb
or
lds
mov
inc
sub
mov
xor
popa
jae
out
mov
adc
mov
sbb
lods
dec
jecxz
bound
pop
test
cmpl
sbb
mov
inc
inc
mov
push
mov
or
insb
or
or
pop
lods
adc
sub
enter
lds
adc
cmpsl
pop
lcall
movsb
mov
shlb
arpl
cli
int
in
in
std
mov
notb
push
leave
rol
xchg
xor
out
iret
jno
mov
inc
pushf
rcl
lcall
rcrl
rcll
xor
sub
push
aaa
or
std
stos
and
repnz
ds
add
inc
pop
lret
pop
add
pop
sahf
pop
icebp
cs
insl
cmp
insl
or
xor
or
pop
lret
fists
ret
cmp
mov
insl
in
mov
add
cli
out
cmp
out
clc
push
sub
cltd
lock
jno
and
clc
pop
jnp
mov
mov
lret
imul
dec
inc
mov
in
pushf
mov
jo
jo
outsb
mov
mov
test
inc
mov
dec
sarl
or
loopne
mov
mov
xchg
lret
or
mov
and
popf
sbb
lret
sbb
fmuls
sub
in
cltd
xchg
xor
std
xor
mov
outsl
dec
addl
ret
mov
sub
or
test
aas
lcall
gs
push
jbe
sub
lret
popf
out
sbb
adc
insl
fistpl
imul
sub
sahf
insb
clc
mov
stc
inc
fnstcw
cmpb
inc
jl
and
insl
sub
cmp
xchg
xorl
pop
icebp
cmpsl
enter
push
aaa
adc
mov
out
xchg
cmc
nop
pop
push
sub
pop
cmp
int3
enter
jmp
jne
fnstcw
leave
std
fs
sbb
and
jb
loope
lea
enter
xchg
psubsw
xor
dec
movb
dec
adc
inc
add
cmp
out
scas
pop
fld
push
mov
js
xchg
push
adc
mov
loopne
loop
xor
adc
in
adc
cli
std
xchg
jl
xchg
push
xor
out
int3
hlt
add
pop
fsubl
adc
mov
out
test
jp
bound
adc
inc
icebp
and
jle
loope
push
cmp
mov
pusha
decl
mov
dec
jl
jns
jbe
sti
lods
sub
rcrl
lods
fwait
cmpsl
mov
inc
push
inc
cmp
push
push
push
pop
dec
repz
jne
data16
mov
mov
inc
fldl
int
pop
push
mov
fadd
push
mov
mov
bound
pop
out
jl
mov
sbb
in
push
xchg
jl
sahf
sti
pusha
xor
jo
sbb
sti
push
jb
xor
test
mov
mov
iret
out
loope
out
xorb
dec
add
and
call
cwtl
jae
adc
in
rcl
xchg
dec
and
and
lret
cli
addr16
sbb
popf
in
adc
xchg
xchg
cs
sahf
cld
cmp
and
mov
cltd
xor
test
lea
push
movsb
aam
vpsadbw
leave
push
sbb
fadds
lcall
popf
inc
mov
fwait
insl
out
adc
xor
adc
fiaddl
out
xor
in
pop
jmp
out
mov
mov
sub
mov
aas
xlat
dec
jae
pop
sub
mulb
push
sub
push
shll
add
out
sahf
sti
xor
cmp
in
sub
subl
jecxz
sub
mov
sub
xor
mov
jno
or
cmp
mov
xor
jg
divb
dec
pop
push
xchg
adc
fsubl
mov
pushf
inc
pop
add
pop
bound
jecxz
adc
shlb
aaa
mov
pop
adc
mulb
in
dec
jge
cmp
jge
mov
test
push
cmp
fdiv
sha1rnds4
mov
xor
bound
fs
leave
sti
pop
rcrb
xchg
imul
aaa
inc
lods
xlat
test
sbb
lret
adc
mov
inc
mov
mov
sbb
cmp
fchs
mov
pop
dec
mov
les
sbb
outsb
ret
aaa
xchg
jl
repnz
or
mov
mov
imul
lahf
rcl
in
arpl
int3
push
or
sub
and
pop
sub
std
sub
push
nop
mov
dec
adc
or
movb
sbb
popa
jmp
lcall
sbb
in
jnp
pop
or
fimuls
jge
sbb
sti
and
mov
jg
orl
out
pop
fcoms
in
lahf
mov
and
push
jbe
dec
je
jae
mov
rorl
mov
nop
cld
sub
add
mov
adc
mov
push
lcall
and
lods
sti
mov
mov
sbb
sti
add
mov
cmpsl
ret
xor
fnstsw
jae
movsb
insl
mov
and
lahf
inc
dec
mov
repnz
aad
insl
ja
insb
ljmp
push
mov
stc
xor
add
xchg
int3
inc
sbb
fidivl
jge
pop
lock
pop
out
mov
mov
jle
dec
adc
sub
ja
jle
and
push
cmp
loopne
repz
push
leave
repnz
outsb
mov
mov
xchg
lahf
xchg
xchg
faddl
xor
pop
in
adcl
sub
adc
cld
xor
ss
dec
jmp
adc
sub
inc
stos
xchg
adc
outsl
and
enter
mov
loopne
mov
shll
out
mov
adc
add
aas
cld
pop
sbb
ret
add
scas
fsub
int
shlb
arpl
aas
sub
and
jno
xor
mov
shll
addl
adc
push
xor
xor
popa
adc
xor
mov
shll
addl
adc
xor
xor
xor
popa
adc
test
xchg
jecxz
shll
mov
sbb
arpl
xor
popa
xchg
icebp
add
shll
pop
push
insb
push
jl
in
hlt
and
xor
clc
int3
jb
add
je
inc
mov
ret
and
mov
add
adc
in
hlt
and
xor
inc
movsb
push
mov
test
andb
inc
mov
ret
xor
inc
repnz
in
hlt
and
xor
inc
movsb
push
mov
test
or
je
and
push
mov
jbe
adc
in
stos
outsb
stos
bound
cltd
pop
inc
nop
add
xchg
jl
adc
ror
jecxz
mov
push
mov
je
mov
pop
dec
call
mov
sti
inc
aas
fnstcw
push
sub
inc
xchg
mov
jmp
cltd
ret
test
jl
adc
popa
sti
mov
vmovlpd
or
aam
movsl
jle
orb
imul
pop
add
dec
or
incl
sub
xchg
jb
ljmp
xchg
xchg
xor
enter
cltd
cli
jb
or
rcrl
je
adc
push
aas
push
mov
shl
jecxz
repz
and
xor
inc
movsb
push
mov
test
andb
inc
mov
ret
xor
add
jge
mov
dec
lods
jl
add
aaa
mov
lret
ljmp
adc
push
xchg
in
notb
jp
daa
in
shlb
or
and
mov
inc
je
cmp
inc
lods
adc
bound
je
inc
mov
ret
xor
add
adc
in
hlt
and
xor
inc
movsb
push
mov
test
andb
inc
mov
ret
xor
add
adc
in
mov
xor
or
cli
xchg
xchg
sub
fucomp
xchg
ret
xlat
test
cld
jb
pushf
shrl
pop
test
das
sti
pop
lret
mov
insb
lret
mov
pop
outsl
je
pop
aam
fcomi
cmp
pop
dec
imull
or
lret
cmp
cmp
cltd
mov
inc
push
sarl
cmpsl
xchg
gs
scas
fdivs
xlat
sahf
lcall
rcrb
nop
or
arpl
pushf
jge
mov
inc
mov
sbb
mov
pop
adc
pop
inc
cs
enter
movl
outsl
cmp
xchg
mov
das
fstps
push
insl
nop
sbb
dec
jge
cmp
add
mov
cmp
xor
push
lcall
xor
popa
dec
jo
sub
and
or
lret
jecxz
movsl
shl
in
and
sti
outsl
mov
sbb
aaa
and
push
jle
in
add
cmp
dec
jle
mov
sbb
in
sbb
pop
and
in
or
gs
add
shll
inc
sub
cmc
pop
push
enter
push
into
jg
xorl
push
and
mov
push
loope
push
fcoms
in
cmp
xor
xchg
dec
xor
inc
or
sahf
popa
in
int3
rcll
adc
int
fsubrp
dec
pop
mov
fxch
lods
inc
add
adc
xchg
cmc
mov
jp
inc
pop
fisttpll
outsl
xchg
push
js
hlt
or
cmp
jo
fadd
jae
data16
sbb
dec
mov
add
out
or
cld
mov
fidivrl
pushf
and
mov
std
add
dec
push
fldenv
fcom
cmp
xor
mov
call
fsubr
dec
push
fsubl
nop
push
mov
mov
mov
insb
jne
push
lods
in
mov
xlat
hlt
lds
jnp
movsl
dec
push
ds
or
cmpsl
rolb
insb
mov
xchg
cld
and
cmp
fistps
int3
ljmp
mov
mov
pusha
daa
dec
mov
lcall
dec
out
pusha
mov
jae
ds
das
into
or
jns
or
aaa
dec
xchg
int
insb
add
fbstp
push
lock
adc
xchg
xchg
xchg
roll
cmp
mov
inc
mov
mov
lea
push
mov
ljmp
in
dec
pop
je
int
push
jmp
xchg
fidivl
xchg
adc
jg
cwtl
cmpb
and
mov
les
nop
mov
dec
ret
jb
pop
jo
inc
test
imul
scas
addr16
jl
mov
lcall
lods
cli
push
cltd
jmp
pop
sbb
or
in
fnsave
cwtl
mov
mov
push
ret
sub
rclb
imul
or
cmpsb
imul
in
loop
sub
notb
xchg
outsl
pop
mov
and
pushf
mov
insl
les
cmc
inc
push
insl
lock
std
mov
shlb
sub
mov
lds
mov
cmp
mov
inc
sbb
aam
mov
enter
mov
mov
cmpsb
cmp
aad
sbb
enter
fistps
mov
xchg
inc
mov
nop
push
mov
pop
pop
push
das
cmp
dec
dec
out
ror
xor
fists
pop
mov
jg
pop
int3
sti
xor
xchg
cmp
fmulp
push
subl
in
mov
inc
int
notl
lahf
cwtl
imul
mov
cld
jno
sarb
sub
mov
cmp
pop
mov
fs
push
jb
inc
and
rorb
push
fidivrs
stos
xchg
ret
and
pop
pop
xchg
add
scas
out
add
mov
lock
cmc
lods
outsl
loopne
inc
notb
loop
xchg
pop
das
pop
push
xchg
push
mov
cmpsb
dec
push
rclb
fnsave
or
flds
int
jl
inc
jecxz
mov
bound
mov
sub
cltd
add
das
push
or
nop
jo
pop
inc
mov
out
push
xchg
jae
push
sub
or
pop
and
loopne
popa
stc
xor
je
lcall
iret
and
cmp
push
movsb
out
out
int3
adc
jb
cld
xchg
fisubrl
rclb
and
pop
daa
push
addb
ret
movb
sbb
outsb
aas
push
jb
popa
push
addr16
mov
jo
movsl
aas
xchg
sub
outsl
inc
jno
cmp
xorl
push
mov
outsb
sti
jl
nop
mov
ss
dec
shlb
mov
fimull
mov
mov
pushf
mov
dec
jo
push
xchg
test
iret
int3
mov
inc
dec
adc
mov
jae
jae
aad
in
and
addr16
xchg
scas
lea
xchg
cmc
pop
int3
out
lods
sbb
nop
ss
jge
pushf
xchg
jns
adc
cmpsl
aaa
cmp
inc
loope
sub
dec
mov
xor
and
adc
aaa
test
into
dec
repnz
icebp
and
push
dec
clc
push
fisttpl
sub
push
mov
or
pop
or
push
inc
jno
hlt
inc
sbb
cmp
or
xchg
jb
dec
arpl
inc
into
sbb
adc
jp
inc
shrl
xchg
aaa
cmp
adc
or
mov
stos
jnp
ret
dec
sahf
or
ret
pop
pop
jecxz
sbb
inc
xchg
xchg
cmc
in
mov
sub
fmul
dec
movsb
pop
aaa
in
mov
das
adc
notl
test
jge
arpl
adc
dec
xchg
sbb
push
mov
jbe
shrb
or
inc
out
in
cmpsw
imul
clc
mov
xor
push
arpl
xor
xor
add
in
inc
clc
dec
movsb
fs
testl
inc
std
add
negb
data16
je
jge
inc
mov
or
mov
pop
in
fisubs
nop
int
lcall
push
mov
add
add
js
es
fwait
icebp
pop
pop
js
shrl
sub
and
loopne
push
mov
into
inc
out
popf
fwait
sub
dec
add
or
test
sbb
xchg
les
jbe
lock
popf
lods
stos
jo
xor
push
clc
enter
js
fwait
movsb
cmp
push
sub
imul
pop
outsl
cmp
cmpsl
fdivr
inc
stos
inc
adc
fs
in
bnd
and
sbb
mov
into
outsb
mov
sti
mov
loop
decb
or
stos
das
lds
aam
add
push
cmp
lcall
push
xor
js
xor
outsl
mov
adc
jb
pop
test
insl
push
mov
sbb
sbb
sarl
and
mov
fadds
push
loope
rcll
jne
lods
in
mov
in
int
dec
cmc
mov
adc
dec
mov
dec
mov
addr16
xchg
imul
or
out
insb
mov
add
mov
cmc
fiadds
cmp
fcoms
jae
pop
daa
stos
outsl
insl
pop
inc
pop
cmc
js
and
and
subb
inc
push
in
loop
push
sbb
nop
insb
xchg
push
cmpsl
pop
std
aam
fsubl
stc
das
push
iret
mov
mov
inc
fisttpll
in
roll
mov
adcb
test
push
adc
adcb
test
dec
sbb
mov
fwait
arpl
jle
xchg
out
std
xchg
sbb
mov
fs
xor
xor
xchg
jae
and
mov
pop
repnz
daa
jo
sbb
pop
gs
inc
jnp
cmp
dec
sub
addr16
aad
inc
shlb
into
sahf
stos
scas
pop
psubusb
push
sub
adc
ja
mov
sbb
es
aam
push
in
int
fstps
cld
mov
sbb
xchg
mov
sub
and
xorb
lock
jp
jns
popf
push
and
pushw
adc
lock
pop
ret
dec
and
mov
sub
mov
jge
dec
cmp
ljmp
push
and
pop
cltd
lea
add
test
mov
inc
xchg
into
xchg
cmp
mov
lock
and
jmp
adc
into
negb
popa
add
mov
xchg
cli
jecxz
mov
call
lods
loopne
into
in
inc
and
cmpsb
inc
andl
push
pop
and
cmpsb
sub
sbb
dec
inc
fistl
fcmovnb
mov
repz
sub
xchg
or
fadd
mov
jne
lret
add
out
fdivs
mov
shl
jmp
cmp
jl
lcall
cmp
stos
cmp
insb
fisubs
mov
adc
rorl
xchg
outsb
xor
jne
cmpsb
mov
cmp
ss
insl
arpl
fisttpl
adc
rolb
mov
iret
inc
loopne
add
pop
jmp
xchg
sbb
pusha
outsb
dec
sahf
inc
adc
inc
xchg
mov
xchg
push
jae
out
xor
jno
shll
cmp
cmp
or
js
mov
pop
lret
cs
add
pop
add
outsb
xchg
xchg
cmpsl
pop
dec
dec
loop
imulb
fs
dec
in
int
push
adcb
cmpsl
inc
rdtsc
out
loop
pop
insb
scas
addl
dec
pop
xlat
test
aas
push
in
mov
lods
xor
pop
js
test
push
insb
and
mov
push
aam
mov
stos
pop
push
push
shrl
scas
jmp
push
scas
adc
cmp
adc
icebp
ss
inc
push
scas
sbb
push
imul
lock
lock
insl
jo
jbe
gs
push
ds
jne
stc
add
push
mov
mov
outsl
push
sahf
mov
adc
xor
sarl
xor
scas
cld
push
or
scas
xor
or
add
dec
test
add
push
mov
cld
or
jg
jp
xlat
in
xchg
test
and
and
shll
inc
pop
sub
popa
shl
sub
mov
shlb
ljmp
sbb
movsl
sub
pop
xchg
push
sub
in
outsb
mov
push
fiadds
push
cmp
xor
push
test
pop
dec
push
lods
mov
inc
dec
test
bound
cmp
ljmp
in
cmp
lcall
push
xorb
pop
cmpsl
inc
xorl
push
repz
pop
sub
mov
test
popl
and
sub
decl
and
test
mov
sbb
or
sbb
sbb
push
xchg
leave
shlb
jmp
aaa
mov
mov
sub
inc
sub
jns
mov
bound
adc
movups
popf
mov
add
test
pusha
je
add
fiaddl
xchg
lods
or
mov
inc
push
push
cwtl
dec
cmp
insl
and
cld
bound
dec
pop
inc
cwtl
fucomp
cli
ja
pop
mov
pop
and
pop
jo
and
jge
pushl
aas
cmovnp
mov
add
mov
into
ss
out
and
stc
mov
pop
inc
movsl
pop
and
or
int3
movsl
add
fldt
mov
xchg
ljmp
jmp
push
or
fbld
adc
clc
int
icebp
fdivrl
aaa
stos
arpl
dec
xor
ss
fs
cmpsl
les
jle
std
push
xchg
in
xlat
cmpsb
lret
and
or
push
cmp
mov
shlb
mov
lret
push
cmp
mov
lds
and
hlt
fistps
jmp
sub
adc
push
vpshaq
data16
mov
add
mov
adc
fistpll
xchg
and
sub
out
sub
mov
jmp
shlb
push
dec
xlat
jg
cmp
sti
sbb
lods
lea
cmpsl
ret
shl
and
pop
mov
nop
mov
mov
inc
cmp
inc
imul
rcrb
int
scas
push
xchg
ds
xchg
sub
aas
test
adc
sub
int
adc
shlb
xor
xor
ljmp
int
jne
scas
inc
in
mov
loop
or
and
mov
unpckhps
mov
xchg
imulb
sub
lcall
and
mov
fidivrl
jne
lods
xor
jo
ss
xor
push
and
and
and
outsl
add
loope
pop
loop
fst
mov
jb
pop
inc
mov
mov
clc
mov
stos
pop
pop
inc
add
lea
cmp
aaa
mov
jecxz
mov
imul
push
xor
xchg
cmc
xchg
jo
inc
inc
jmp
aad
mov
add
jge
das
xchg
ljmp
daa
aaa
push
dec
sbb
popf
dec
ja
sbb
cmpsb
mov
cmpsb
loopne
push
sbbl
or
mov
push
mov
mov
jnp
ja
xlat
nop
pop
push
sahf
js
sbb
or
jmp
xchg
mov
adc
inc
cmpsb
gs
sub
std
test
or
imul
enter
pop
adcl
inc
xlat
jne
or
xchg
shll
scas
xor
fidivrs
adc
test
cld
scas
fcompl
xchg
jge
imul
cli
mov
repnz
push
movsb
leave
fs
add
fildl
push
mov
mov
adc
and
xlat
adc
inc
mov
adc
add
jo
out
add
sbb
xchg
mov
sbb
loope
fcomps
pop
sbb
lret
shll
enter
rcr
clc
cli
aam
push
push
xor
cmp
jbe
mov
mov
pop
push
insl
mov
or
and
std
cld
jg
inc
sti
push
mov
jp
fdivp
xor
jno
and
push
ljmp
insb
mov
testl
js
xchg
mov
xchg
fcmovnbe
notb
movsb
adc
xchg
or
xor
xchg
or
incb
stos
fcompl
sub
int3
add
mov
imul
aam
je
aad
xchg
xor
push
repnz
pop
pop
mov
lret
xlat
sti
dec
orb
enter
fistpl
rcr
cmp
data16
std
jmp
mov
icebp
inc
pop
xchg
xor
dec
sbbb
lcall
sbb
mov
push
lcall
and
mov
adc
mov
rclb
inc
xor
cmc
mov
adc
xchg
lods
scas
shl
arpl
jg
shl
sbb
lods
push
push
jmp
push
mov
add
mov
adc
fimull
pop
jge
mov
pop
xchg
jge
fbld
xor
xchg
mov
mov
cld
jne
imulb
fstpl
fistps
add
jb
jb
xchg
sub
mov
icebp
out
adc
fdivr
ljmp
push
out
hlt
nop
or
test
dec
lcall
adc
push
dec
in
dec
xor
ret
mov
push
adc
dec
pop
jnp
lahf
out
divb
pop
inc
mov
cmpsb
je
sarb
add
outsb
push
mov
aam
cmp
push
aad
mov
mov
out
scas
cld
mov
pushf
xchg
jge
pop
lods
rolb
dec
inc
jae
fs
mov
pop
stos
rclb
icebp
test
js
push
push
push
cmp
into
jg
test
add
test
test
gs
or
push
cli
jnp
xchg
test
lahf
or
ret
or
aas
jecxz
cmpsb
out
dec
mov
fwait
sub
int
aad
scas
bnd
aas
push
popf
das
movsl
pop
mov
sbb
xchg
inc
out
je
outsb
push
leave
jae
add
or
loop
mov
sbb
out
pop
enter
addl
cmp
push
and
lahf
adc
adc
lds
mov
fisubrl
les
inc
sbb
inc
cwtl
mov
pop
addr16
dec
les
dec
sbb
push
stos
pop
into
sarl
xor
or
dec
mulb
dec
mov
cwtl
push
loop
jae
lcall
jb
jne
push
xchg
fdivrs
pop
loopne
es
leave
jle
movsl
mov
int
and
cmp
cmp
pop
loop
in
jl
insl
insb
jecxz
sbb
mov
fisttpl
ror
cmpsl
sbb
mov
jo
lods
ja
les
ljmp
ds
mov
dec
scas
mov
in
repnz
cmp
cli
and
ss
mov
test
jb
mov
pusha
in
push
adc
push
sbb
pop
ss
into
fistl
in
push
dec
cmpsb
repnz
cmp
sub
sahf
lahf
popa
add
inc
inc
xchg
lock
cs
mov
pop
mov
cltd
jmp
push
in
into
stos
lret
xor
cmp
adc
pushf
mov
out
mov
xchg
pop
das
cmpsl
jge
out
mov
je
ljmp
or
hlt
or
add
sbb
jo
sub
xchg
push
or
dec
test
ljmp
loope
push
xchg
ret
cmpsl
call
and
mov
pop
sbb
test
xor
mov
or
repnz
lahf
push
xchg
scas
mov
dec
mov
das
push
mov
loop
adc
cmpsl
fsubrs
ljmp
data16
mov
fcmovu
adc
ret
fnstenv
inc
nop
cltd
xchg
mov
mov
dec
jbe
repz
std
or
mov
adc
fs
push
adc
add
lea
roll
jle
pop
lods
negl
or
sub
push
sub
lods
icebp
xchg
and
cs
popf
jbe
cmc
inc
stc
popa
push
lret
adc
push
and
cld
in
add
dec
lods
mov
pop
sbbl
lret
push
adc
fnstcw
out
cmp
sahf
jecxz
dec
mov
dec
jno
sbb
aas
jnp
pushf
stos
and
es
push
rol
mov
xchg
incl
pop
int
xchg
shr
andps
push
adc
cmp
pop
cmc
jbe
mov
dec
es
xchg
or
insb
sbb
scas
stc
and
sub
ret
pop
popf
xchg
sbb
popf
xor
popf
push
les
ds
js
pop
nop
stc
jmp
in
cli
xchg
ljmp
pop
das
sub
sub
lea
and
out
in
aad
pop
shl
push
mov
mov
sbb
xchg
cmp
mov
cld
xor
popa
jmp
mov
scas
iret
enter
sbb
mov
fstl
push
mov
mov
test
inc
scas
or
je
out
jns
aam
xchg
ljmp
test
lods
adc
push
fildl
jl
fdiv
popa
add
movsl
mov
movsl
clc
cmp
aas
rcr
adc
scas
push
cli
mov
int3
insl
leave
aam
jae
jo
hlt
jmp
mull
inc
iret
in
mov
arpl
push
and
insl
stos
xchg
jmp
js
data16
orl
int3
cwtl
sti
stos
les
inc
mov
or
ja
in
cltd
cltd
call
iret
fldcw
mov
jg
push
into
pop
ja
and
sahf
in
adc
sub
popa
test
add
sbb
adc
aad
push
inc
xchg
jnp
cmpsb
xor
mov
push
loop
xor
negl
rol
jl
fcomp
cmc
fstpt
mov
lret
mov
sub
mov
mov
test
xchg
mov
ficoml
sahf
int
cmp
repz
insl
mov
xchg
mov
pop
stc
add
in
mov
popa
xor
mov
push
cwtl
and
mov
push
push
mov
addr16
pop
inc
mov
xchg
std
push
sbb
stos
jge
adc
not
jl
add
jo
cmp
scas
jg
sub
or
fs
cs
stos
fldcw
decb
mov
add
jno
repz
scas
cld
fwait
scas
and
fwait
xor
stos
xchg
sbb
lret
mov
adc
ficoml
or
rorb
push
or
adc
lret
sub
subl
cltd
lahf
push
or
jns
xchg
in
or
mov
mulb
bound
jl
cmpsl
mov
jp
mov
dec
nop
and
xor
push
add
call
aam
mov
ljmp
cwtl
addb
jg
enter
lods
adc
loop
pop
jns
sbb
mov
xchg
cmpsb
popa
sub
cmp
mov
out
add
xor
hlt
cmp
xor
inc
movsb
push
mov
test
andb
inc
mov
ret
xor
add
adc
in
hlt
and
xor
inc
movsb
push
mov
test
andb
inc
mov
ret
xor
add
adc
in
je
inc
xor
inc
movsb
push
xor
test
and
je
inc
mov
ret
xor
add
adc
in
hlt
and
xor
inc
movsb
push
mov
test
andb
inc
mov
mov
pop
lret
sbb
xlat
mov
sbb
dec
xchg
push
repnz
lods
pop
ja
and
call
inc
fsubs
or
js
dec
ret
stos
and
jb
arpl
push
enter
xor
add
jno
pusha
lret
inc
xor
cmpb
cwtl
pop
test
sub
ret
push
fidivrs
cli
xchg
mov
leave
and
xor
mov
into
push
add
xorl
xchg
in
jecxz
xchg
ret
sti
sub
push
in
cwtl
sets
insl
xor
xchg
aas
xlat
mov
jl
jecxz,pt
sarb
xor
std
sbb
clc
ss
bound
cmp
or
xlat
dec
idivl
push
clc
dec
inc
adc
idivl
adc
mov
adc
lret
div
clc
mov
sbb
pop
cmp
add
mov
fcomp
or
rorl
imul
in
popf
add
mov
inc
enter
das
xchg
sbb
js
push
fildl
mov
mov
push
jp
push
enter
dec
cmp
or
sbb
and
xor
pusha
test
stos
aaa
enter
push
mov
sbb
mov
shll
fsts
ja
pop
lcall
fldt
pop
imull
insl
mov
js
dec
ret
test
mov
jb
clc
push
enter
sub
sbb
push
ret
test
mov
jb
clc
push
enter
sub
lret
sub
or
push
into
sbb
sbb
push
shr
add
rcrl
out
mov
jmp
or
sbb
xchg
cli
mov
fwait
adc
pushf
inc
cmp
xchg
mov
push
mov
hlt
jnp
iret
pop
iret
xlat
pop
out
into
mov
or
push
hlt
or
enter
mov
jmp
es
mov
jo
add
imul
das
dec
dec
cmp
inc
cmpsb
cs
in
and
jo
cs
nop
cmc
sbb
ja
pop
scas
sbb
arpl
daa
inc
inc
mov
call
lret
lret
int
adc
sarl
jae
loop
aam
inc
pusha
xor
push
jno
dec
pop
xchg
in
orb
and
xchg
pop
bound
push
or
or
sti
data16
cwtl
and
cmpsb
mov
mov
mov
int
push
outsl
cld
xchg
xor
fstps
add
ja
out
aad
std
mov
or
inc
cmc
pop
or
aam
inc
push
test
jb
xchg
das
push
nop
ret
xchg
dec
testb
push
jecxz
mov
jno
mov
push
adc
mov
in
test
sti
ljmp
push
mov
xchg
std
xchg
lcall
jns
cltd
aad
sbb
add
stos
lods
aas
or
xchg
mulb
stos
jbe
mov
jg
pusha
arpl
dec
jmp
inc
test
push
rol
dec
nop
xorl
mov
stos
jb
dec
jge
arpl
xchg
inc
daa
mov
jae
pop
outsb
jle
dec
dec
aam
cmc
roll
inc
inc
loop
mov
loopne
xor
fsubrs
out
shll
ror
in
movsl
sahf
out
mov
mov
push
nop
mov
mov
das
lods
pop
and
mov
xchg
cld
ret
mov
jns
adc
push
out
and
cltd
shrl
pop
dec
pop
outsb
fists
out
faddp
jge
addr16
mov
sahf
and
mov
iret
mov
iret
lock
lret
add
dec
and
inc
stc
test
loopne
fwait
jns
and
dec
xor
mov
test
sub
cmpsl
cs
mov
adc
dec
gs
push
xor
push
div
jnp
bound
rcrb
fmul
push
loopne
lds
mov
in
mov
aaa
inc
popf
mov
xchg
sar
outsl
lcall
add
cli
aam
mov
insb
repnz
nop
mov
or
jne,pt
les
mov
adc
stos
faddl
pmaxub
rcr
mov
add
mov
pushf
cli
mov
sar
loope
lahf
sahf
inc
mov
addr16
adc
gs
test
lock
pop
out
cmpsl
xchg
jo
pushf
pop
jg
lret
enter
incb
mov
jmp
adc
sbb
add
aad
icebp
sub
loopne
xor
adc
mov
ja
mov
xchg
rolb
leave
add
lods
aad
sbb
push
movsb
add
xchg
arpl
aam
mov
rorl
cmp
popf
sub
lahf
xor
ret
outsb
sub
ljmp
mov
hlt
loopne
and
and
xor
dec
outsl
cmp
fbld
fwait
mov
jle
pop
stos
xchg
enter
adc
push
repz
mov
mov
cmp
jl
cwtl
push
fisubrs
popf
dec
xor
fdiv
shl
mov
jmp
sub
aam
xchg
lcall
mov
jnp
lahf
mov
mov
repz
fstpl
fisubrl
fnsave
roll
mov
pop
xchg
shll
pushf
call
loop
xor
mov
push
shl
ja
pop
mov
jmp
adc
rcrb
mov
mov
aas
and
push
push
repnz
ja
and
call
stc
or
or
mov
jle
inc
push
mov
aaa
test
aaa
cmp
in
mov
pop
xchg
xor
xor
fiaddl
mov
jmp
call
clc
pop
push
and
outsl
repnz
xchg
out
cmp
mov
les
gs
movsb
push
lods
push
mov
popa
pop
das
push
lea
add
xor
jb
icebp
mov
pop
mov
sub
insb
jbe
sbb
cmp
es
cltd
fstp
pop
repnz
jns
out
iret
das
repnz
add
ja
push
adc
xchg
pop
push
lret
jle
imul
mov
in
cltd
ljmp
mov
test
mov
out
out
lock
mov
xchg
stos
cwtl
push
insl
arpl
negb
enter
xchg
mov
mov
xor
sti
out
push
mov
jno
fcompl
test
pop
vcvtps2dq
xor
add
lds
sub
fs
into
stos
notl
fnsave
cmc
ss
sub
push
out
rolb
xchg
and
dec
incb
mov
sbb
lcall
xor
xor
dec
inc
rol
pusha
enter
mov
ljmp
dec
insb
rolb
dec
xchg
stc
inc
push
xor
andb
leave
pop
jmp
sbb
push
into
in
mov
in
or
pop
std
mov
push
inc
xor
fcmovb
mov
insl
cmp
sbb
mov
jle
notl
fsub
pop
out
je
pop
ret
dec
xor
fwait
hlt
mov
outsb
leave
mov
pop
scas
hlt
movsb
push
xor
std
push
fldenv
js
cmp
mov
sahf
pop
mov
cmp
gs
pop
or
ljmp
ret
sub
stos
mov
dec
sti
adc
cltd
cmc
cmp
sbb
les
arpl
sub
dec
fdivrs
sbb
xlat
cmpsl
fs
cmp
dec
testl
fisubl
mov
aam
ficompl
subl
fwait
lahf
xchg
cli
add
xor
mov
add
cltd
cmp
inc
mov
sbb
outsb
lcall
clc
decl
cmp
pop
std
cltd
std
out
fiadds
mov
sti
push
mov
fcmovnb
lods
loope
repnz
xlat
es
pop
jo
shl
mov
movsl
mov
xchg
xchg
test
in
addr16
mov
aaa
mov
leave
cli
inc
loop
dec
movsl
dec
and
adc
ljmp
push
inc
out
dec
mov
mov
mov
fnsave
movsl
add
sub
insl
mov
mov
stos
cld
es
pop
jo
ret
inc
mov
jl
das
jmp
pop
pop
divl
test
pop
gs
cwtl
mov
push
cmp
lcall
lcall
scas
inc
inc
es
and
push
dec
mov
pop
and
or
fisubrl
push
pop
ss
xchg
push
dec
mov
call
xchg
add
outsb
push
fistps
pushf
dec
jbe
cmpsb
imul
xor
adc
dec
scas
mov
insb
jo
ljmp
sbb
stc
call
imul
out
cmp
in
dec
cmp
mov
cmpsb
mov
mov
pop
dec
ja
cmp
cmp
aas
and
xchg
add
mov
push
jno
xor
inc
xchg
adc
sbb
push
push
add
lds
stos
inc
pcmpgtw
push
int
xlat
adc
inc
jno
push
fstl
dec
adc
jmp
out
mov
popf
cmp
insb
enter
call
shl
aam
mov
mov
or
mov
mov
pop
inc
popf
xchg
and
inc
xchg
xor
dec
pop
decl
jo
lret
test
push
sbb
xchg
outsb
jnp
xor
xor
adc
push
loopne
sbb
in
mov
ljmp
push
test
ret
ss
enter
mov
or
out
dec
mov
in
ret
jl
lods
fists
cli
rcll
ja
sub
lds
mov
dec
es
insl
fwait
dec
mov
push
and
adc
sbb
aam
test
mov
dec
pop
fdivrs
fnstcw
shlb
mov
cli
test
add
lret
xchg
cld
mov
mov
loope
jg
into
xchg
mov
negb
mul
lods
cmp
lret
sbb
dec
push
loopne
dec
in
xchg
or
pushl
orl
push
int
enter
sub
sub
sti
mov
and
xchg
jbe
js
dec
lret
xchg
cmc
shlb
ret
std
or
repnz
movsl
sub
lret
loope
mov
jecxz
popa
les
ret
cmp
jecxz
sbb
pop
int
lret
mov
ljmp
mov
cmp
jecxz
shlb
in
sub
mov
push
and
cmpl
lret
cmp
pop
mov
mov
fcmovnu
mov
push
stos
lcall
xchg
fisubl
in
lahf
dec
pop
out
push
shl
cmp
cmc
sahf
movsb
xchg
jb
sbb
shr
add
jp
add
int3
es
mov
jo
data16
outsl
shlb
xchg
lods
lret
mov
test
js
into
and
aaa
gs
mov
sbb
ret
xor
aaa
imul
rolb
add
out
daa
push
mov
inc
cmp
push
movsb
aam
cli
dec
mov
mov
push
or
rol
fldt
xor
jge
clc
jmp
ret
ret
cmp
out
aas
lods
outsl
rcrb
jo
and
test
les
push
ss
inc
nop
scas
out
mov
out
or
sbb
jmp
and
cmp
popf
jbe
add
jmp
enter
pop
mov
and
or
cld
jge
nop
xor
outsl
fdiv
nop
incl
mov
loopne
scas
loopne
aaa
dec
ret
fists
cmpb
xor
fdivl
orb
out
mov
jl
pop
and
mov
jmp
cld
test
push
pop
inc
das
ja
jb
out
shr
sbb
data16
xlat
outsl
shrb
lcall
sbb
sbb
loopne
pop
stos
add
mov
sahf
xlat
jno
das
pusha
push
fcmovnbe
sbb
popa
or
inc
in
rcr
sub
adc
fcmovbe
jl
cltd
mov
sbb
sub
stos
sbb
mov
fcoml
add
daa
call
pop
or
add
not
das
lods
out
stos
flds
mov
mov
and
push
orl
out
stc
add
lea
fcmove
lods
std
popa
test
cmp
addr16
and
fistpl
pop
stc
mov
sbb
sbb
xchg
and
push
pop
cmpsl
push
pop
jp
out
out
xor
pushf
or
cmp
dec
in
push
divl
dec
adc
mov
cmp
jb
mul
jo
mov
insl
ret
mov
mov
ljmp
dec
les
or
adc
mov
and
sbb
mov
aaa
and
mov
or
push
or
add
hlt
mov
add
stos
xchg
iret
ja
in
mov
jb
xlat
push
mov
rcr
or
scas
push
pop
mov
cmpl
ja
inc
sarb
aaa
jnp
icebp
pop
xor
cmc
orb
mov
fs
js
mov
into
pop
stc
mov
xor
or
mov
sbb
inc
mov
scas
jle
xchg
rcll
into
insb
sub
or
les
pop
int3
mov
test
jl
idivl
aad
mov
add
notb
dec
test
ss
mov
inc
and
stos
cmpsb
xor
add
dec
push
jmp
outsl
sub
sub
stos
dec
movsb
cmpsb
adc
add
idivb
fsts
jmp
xchg
cmp
and
dec
ja
aas
xor
jp
in
mov
adc
hlt
dec
fdivr
jmp
loope
jmp
push
push
xchg
jmp
xchg
mov
adc
aam
mov
jle
lea
pop
push
pop
push
mov
sbbb
adc
shl
push
loope
test
add
jns
add
std
sbb
push
add
sub
or
dec
mov
faddl
xor
cmp
pop
cs
adc
test
push
add
stos
mov
stos
jge
rcrl
movsl
mov
xchg
sbb
pushf
xchg
adc
rcrl
imul
dec
cmp
inc
out
out
lea
cltd
sub
lea
lods
stos
fwait
mov
jmp
mov
repnz
lcall
push
ljmp
fdivrs
cli
jmp
xor
dec
fmuls
loop
jbe
addr16
or
jecxz
sbb
jg
ret
aad
mov
jns
jo
cmp
mov
mov
addr16
aaa
dec
fisttpll
ret
push
push
clc
pop
mov
cwtl
dec
mov
fdivr
movsl
mov
loopne
clc
sub
xor
fdivl
or
gs
fsubrl
cmp
hlt
mov
push
inc
shll
movsb
sub
es
mov
jmp
mov
mov
js
ror
xchg
dec
cmp
mov
data16
cmp
mov
loopne
and
mov
ret
ds
insl
push
push
add
fistpl
xchg
addr16
jp
jp
in
mov
jnp
xor
fwait
xchg
out
sbb
in
cmp
mov
std
xchg
jae
ror
shrb
les
fistl
xor
add
push
jo
push
std
lret
xchg
push
push
mov
mov
cmc
jl
out
xlat
mov
stos
rolb
mov
jge
movsl
xor
jmp
cmp
add
lahf
sbb
rcll
mov
cmp
enter
sub
mov
ffree
dec
push
mov
cmpsb
cmpsb
stos
mov
xchg
mov
xor
adc
sahf
pop
pop
mov
adc
jne
sub
inc
ja
lods
sbbl
push
cwtl
jno
int3
mov
lret
mov
cmpsl
xchg
scas
mov
jl
shlb
stos
mov
cmp
mov
std
int3
add
or
sbb
dec
mov
test
xchg
sub
cwtl
cmp
arpl
push
sbb
imul
pop
xlat
pop
xor
nop
mov
int3
mov
jnp
test
mov
sub
into
ficomps
jb
add
mov
mov
cmp
mov
in
cs
mov
ljmp
mov
add
or
adc
insb
xchg
nop
add
nop
bound
pop
mov
push
rol
orl
icebp
ficompl
leave
inc
addr16
std
aaa
jle
out
inc
mov
lea
sub
mov
and
in
or
ss
pusha
xor
sbb
pusha
jns
pop
jo
mov
loopne
scas
jge
lock
fnstsw
add
cwtl
iret
shl
jb
rcrb
jl
sub
insl
in
lods
pusha
or
ret
repnz
dec
jle
dec
sahf
imul
movsb
imul
or
inc
imul
adc
into
jp
scas
or
inc
inc
xchg
or
inc
fwait
and
sbb
stos
sub
and
cmp
add
mov
pop
popl
sub
and
mov
push
test
mov
mov
popa
in
in
adc
call
xchg
push
stos
xor
je
loop
stc
pop
pop
and
inc
sbb
ret
repnz
xor
push
push
js
outsl
xchg
mov
les
sti
and
pop
pusha
jo
in
inc
or
insl
loope
mov
pop
jnp
mov
mov
mov
xchg
cmp
rcr
cmc
loope
shl
test
shll
sub
xor
pop
cmc
add
lret
mov
cmp
mov
jecxz,pn
fadds
jmp
jne
mov
dec
rolb
xchg
js
je
cmp
xor
add
jp
push
push
shlb
mov
int3
scas
addr16
loope
xchg
lods
xchg
rorl
filds
push
jp
dec
push
lds
push
in
in
cmpsb
ret
loope
push
adc
mov
bound
mov
mov
aaa
shlb
mov
fsubrs
xor
mov
fisubrl
mov
sarl
pop
add
data16
xchg
or
xor
inc
movsb
adc
pusha
mov
out
lock
enter
jne
sbb
pop
jne
xor
mov
sbb
jmp
pop
rcr
lock
js
inc
fdivp
xorl
xor
sbb
dec
cltd
add
and
or
xchg
test
test
or
or
pushf
pushf
fidivs
cmp
add
jb
mov
bound
jbe
imul
add
mov
cmpb
xchg
push
mov
add
xchg
jecxz
pop
lahf
mov
into
xchg
jb
mov
mov
fwait
jecxz
fidivl
pop
cli
xchg
jmp
aam
xor
aas
sub
lds
and
cmc
ud1
add
icebp
xlat
out
jle
cltd
dec
aas
imul
ss
out
movsl
push
iret
and
dec
cli
enter
out
adc
lahf
ret
sahf
arpl
test
and
add
fisubrl
pop
pusha
shll
mov
lea
xchg
es
sti
sub
inc
mov
cmp
movsl
xor
cmp
xchg
push
insb
mov
loope
cwtl
sub
push
mov
pop
and
cmc
sub
cmpsl
out
cwtl
pusha
sub
xchg
mov
ja
xchg
jo
or
out
add
add
lret
cwtl
jl
arpl
mov
add
xor
push
cmp
stc
mov
repz
es
xchg
xchg
lds
dec
dec
xchg
mov
decb
mov
fidivs
mov
jecxz
jmp
mov
sub
icebp
cmp
and
gs
mov
aas
xor
and
pop
mov
mov
rcrl
movsl
cmp
pop
test
mov
xlat
xor
cmp
pushf
sub
call
hlt
adc
or
cs
dec
in
fsubrp
fmuls
subb
int
out
xchg
arpl
and
sub
fwait
xor
pop
out
jns
mov
xor
fbstp
push
mov
cmp
ljmp
sbb
add
push
enter
push
je
dec
mov
stos
orb
sub
in
and
inc
mov
negl
insl
mov
cltd
jmp
inc
inc
push
mov
ljmp
xchg
movsl
lcall
xor
mov
inc
mov
mov
or
jmp
fists
ljmp
push
jbe
and
mov
cld
and
pop
and
xchg
mov
loop
cs
aas
mov
popf
mov
cmp
sub
inc
xor
pop
fadds
xchg
jnp
ret
es
test
bound
rorb
faddp
sbb
and
leave
int3
or
or
inc
cli
mov
and
jno
or
int3
lock
mov
sti
cmp
sub
dec
outsl
iret
movsb
adc
cli
int
sbb
pop
sbb
sub
lock
jne
cs
addr16
mov
jbe
adc
xchg
dec
out
mov
cmp
add
sbb
push
sub
xor
stos
inc
add
imul
iret
shll
mov
or
adc
cwtl
dec
dec
jmp
inc
xchg
ret
xchg
xor
pop
sti
push
test
fwait
gs
mov
lea
cs
ja
idivl
sub
sub
iret
push
scas
xchg
out
les
pop
rol
shrb
mov
mov
xor
mov
jge
iret
pop
dec
xorb
add
mov
push
dec
xor
adc
ljmp
mov
mov
push
mov
mov
push
jb
lods
lods
sub
stc
movsb
cmp
test
addl
ss
adc
lret
fscale
dec
dec
jecxz
arpl
mov
lds
int
xchg
dec
mov
data16
arpl
mov
xchg
inc
fwait
popf
incb
fdivp
xchg
rorb
dec
dec
sub
mov
std
mov
sub
cmpsl
pop
xchg
mov
mov
sbb
sub
cmp
cmpsb
xchg
and
scas
insl
and
and
pusha
jmp
daa
sbb
out
xor
pushf
jbe
lcall
fsubs
movsl
aas
cmp
out
sbb
push
ret
test
mov
jb
clc
push
enter
sub
sbb
push
ret
test
mov
jb
clc
push
enter
sub
sbb
push
ret
test
mov
jb
data16
push
leave
jae
xchg
xchg
cmp
loop
push
dec
inc
pop
int
fstl
mov
pusha
ljmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
loopne
lock
rcrb
test
mov
lret
jo
inc
sbb
and
sub
pop
adc
mov
rorb
sbb
lret
jo
xor
push
or
jp
push
pop
adc
mov
rorb
sbb
lret
jo
xor
or
push
push
dec
aas
jle
test
mov
sub
fldcw
mov
sbb
pop
stos
jge
mov
rcll
imul
jne
add
xchg
xchg
int
aad
fistpll
out
mov
scas
jnp
or
out
lods
mov
dec
pusha
cli
sbb
mov
jp
pop
movsl
rorb
inc
icebp
stos
mov
push
sahf
mov
xor
lcall
jbe
fisubrs
pop
cmp
movsb
adc
daa
test
dec
call
adc
jo
mov
push
out
cmp
pop
add
push
xchg
jno
jg
sbb
lds
cmp
test
sahf
add
dec
mov
lcall
sbb
lret
jo
inc
sbb
and
push
pop
adc
xlat
cltd
jns
fdivl
stos
in
sarl
and
inc
pop
pop
adc
das
jecxz
and
lcall
xorb
inc
add
inc
adc
adc
ljmp
mov
ficoml
sub
push
or
jp
push
pop
adc
mov
rorb
sbb
lret
jo
inc
sbb
and
push
pop
adc
mov
hlt
pop
jp
sbb
cmp
pop
out
rolb
dec
test
stos
mov
sti
shlb
push
sbb
cmc
nop
inc
cmp
dec
ljmp
jae
repz
loop
add
frstor
loope
lcall
mov
fbld
fst
shr
cmc
xor
sbb
add
loopne
jae
fmull
bnd
and
jecxz
and
idivb
push
aam
xlat
pop
fmul
cld
or
scas
addl
lods
les
int3
test
lahf
seto
out
inc
push
sbb
loope
and
dec
jns
loope
and
lahf
xor
xchg
add
jmp
jbe
pop
cli
or
mov
mov
addr16
adc
mov
cltd
imul
in
push
call
push
inc
xor
rcrl
fsubl
cmp
push
push
pop
addr16
fistpll
sub
xchg
das
jge
jmp
xchg
out
shrb
lret
bswap
mov
inc
adc
pop
jo
jae
mov
pop
leave
outsl
sub
mov
jns
jne
cmpsb
repz
adc
sub
dec
xor
add
je
ror
mov
xchg
dec
pop
xchg
cmp
cmp
not
ds
ret
mov
sbb
fs
jmp
dec
cmp
push
or
cmc
js
add
gs
sub
cmpsb
outsb
sub
xor
xchg
sbb
pop
imul
fwait
and
lds
mov
cmp
int3
ss
popf
cmp
rcl
sub
jbe
cmp
ljmp
or
cmc
fucomip
out
scas
cmp
mov
inc
lcall
ret
pushf
jle
xlat
dec
test
fnclex
mov
mov
pop
push
sub
scas
fadd
bnd
pop
xlat
xlat
pop
or
adc
jo
mov
adc
mov
or
xorl
jge
xchg
cmp
inc
gs
jmp
mov
test
push
int
push
sub
push
movsl
xchg
test
movsl
adc
jne
mov
mov
inc
sbb
push
mov
jno
push
imul
gs
sbb
in
icebp
out
sub
inc
das
inc
mov
cmc
xor
xchg
pop
or
adc
lods
addr16
push
daa
push
add
pop
jbe
leave
mov
lret
sub
sbb
cmpsl
inc
loope
test
mov
mov
xchg
pop
add
mov
mov
push
mov
xchg
scas
or
sbb
jb
and
notb
mov
cmc
mov
test
mov
sti
sti
jge
sub
lahf
addl
arpl
fwait
mov
lock
push
xlat
mov
mov
add
loopne
dec
lods
sub
scas
movsl
dec
loopne
test
mov
mov
icebp
jo
adc
decl
ficomps
sahf
int3
pop
in
shll
sahf
cld
jbe
push
imul
add
and
rcll
jne
daa
xor
daa
imul
stos
pop
xchg
inc
pop
scas
jb
cli
xor
fmull
pusha
dec
sub
add
movsl
pop
gs
cmp
fldcw
in
xchg
test
inc
jg
xor
orb
scas
jae
test
outsb
xchg
lock
mov
adc
in
add
push
mov
addl
mov
dec
dec
xchg
cwtl
outsl
cmp
xchg
pop
mov
adc
lock
jp
popa
cmpl
xor
push
mov
fistpll
and
lds
mov
mov
add
insb
ljmp
jle
sub
fsts
cmpsb
enter
dec
mov
aad
notb
add
push
jo
dec
push
pop
pop
sub
and
cmpsl
lods
lods
xchg
ret
in
test
cltd
mov
int
inc
aas
mov
xchg
lret
shll
push
mov
jge
add
adc
ret
dec
and
mov
cmpsb
dec
mov
testl
sti
shrw
xchg
jl
xor
jle
jo
stos
movsb
push
sub
repnz
jbe
mov
leave
gs
push
mov
mov
push
icebp
loope
cmc
xchg
movsb
lahf
and
pusha
xor
aam
mov
mov
imul
inc
sahf
mov
or
shrb
out
mov
mov
pushf
ss
fldl
in
push
shll
cmp
test
repz
add
rcrl
or
stc
add
mulb
add
lods
enter
dec
sbb
push
mov
and
xchg
lret
loop
push
jg
fucomp
adc
xchg
mov
pop
add
aad
in
repz
inc
mov
andl
rcr
clc
out
inc
mov
shll
sarl
dec
repz
iret
push
and
pop
std
mov
push
inc
add
xor
js
test
xchg
dec
aaa
neg
cmp
mov
lock
xchg
inc
ds
cmp
js
jge
add
rcrb
fisttpl
mov
adc
and
fsubl
jge
mov
sti
push
cld
pop
movsb
movsl
or
add
jae
and
lds
push
aas
push
push
in
jbe
mov
inc
push
sbb
xchg
and
out
ficompl
pop
fsubrl
mov
lcall
icebp
ret
dec
in
inc
jmp
fwait
aad
push
es
or
aas
pslld
bound
pusha
mov
and
mov
stos
and
icebp
sbb
out
and
push
add
or
maxps
imul
stc
enter
add
sysret
push
test
lock
testl
data16
jno
outsl
add
cmp
hlt
sbb
add
int3
sbb
loop
add
ret
jno
inc
xor
fisubl
fdivl
mov
jmp
pop
xchg
mov
arpl
js
gs
xor
aam
adc
sub
imul
push
in
fnstcw
xor
jp
mov
stc
idivb
out
jl
leave
fs
scas
mov
aad
shrl
hlt
aaa
ja
sti
int
and
pop
or
ja
es
and
jle
lahf
push
sahf
outsb
lods
lret
cmp
pop
test
adc
sti
dec
leave
dec
in
fsts
fucomip
mov
sub
lcall
sahf
orb
push
js
inc
jmp
xor
or
loopne
jmp
push
ficomps
mov
add
fmul
add
xor
js
jge
or
adc
in
xchg
test
int3
fcmovbe
push
ljmp
jle
out
sub
or
fstpt
push
jp,pt
popa
mov
push
mov
insl
andb
push
adc
insb
aam
push
jbe
pushf
inc
inc
pop
imul
inc
xchg
test
sbb
lock
loopne
and
pop
jno
cli
decb
dec
xor
add
mov
int3
andb
mov
jne
and
loope
int
es
xchg
test
sbb
inc
dec
add
das
lds
rcrl
out
jge
add
popa
pmuludq
fstps
and
xor
mov
out
les
dec
cmp
mov
lea
adc
mov
add
cs
jecxz
add
frstor
xchg
jl
adc
sub
adc
les
xor
bound
mov
xchg
repnz
test
jb
outsb
pop
push
lcall
mov
push
je
add
cld
loopne
loopne
adc
adc
and
out
call
xchg
jae
cwtl
pop
enter
mov
push
jge
dec
shr
cmpsl
add
mov
aas
sub
sub
in
and
pop
inc
loop
mov
popf
ss
jnp
cmp
popf
gs
inc
sub
mov
das
scas
xchg
ljmp
out
add
leave
or
mov
cli
pop
adc
pop
stos
or
in
mov
jmp
ds
loopne
cmp
jb
int3
jl
adc
push
dec
jno
cmc
out
push
fdivrs
fadds
popf
dec
in
adc
loopne
int
mulb
or
lods
enter
mov
leave
adc
pop
sub
shrl
lods
faddl
jecxz
decl
dec
popf
jb
pop
and
inc
or
mov
jmp
mov
ds
cmp
loope
xchg
adcl
xor
loopne
pop
loope
popa
mov
mov
adc
mov
clc
aad
mov
sub
mov
adc
daa
insb
xor
mov
add
add
jmp
xor
imul
in
es
sarl
cmpsl
or
loop
stos
jbe
popa
rol
test
xor
sbb
dec
xchg
add
add
stos
xor
es
sub
dec
mov
inc
repz
jle
sub
mov
lds
and
sub
lahf
xchg
sbb
xchg
aam
daa
out
adc
mov
aam
enter
add
sbb
jmp
sbb
pop
sub
aad
mov
leave
or
iret
pop
movsb
mov
mov
and
cmp
jb
jnp
and
or
cmp
dec
cmp
inc
pop
mov
popa
rorb
add
mov
xor
cmp
adcl
or
mov
inc
add
inc
fisttpl
mov
and
inc
jnp
adc
xor
cmp
add
int3
inc
mov
jnp
in
sub
or
ror
loopne
ret
arpl
jno
sub
nop
adc
das
bound
jae
sbbb
mov
lods
insl
sbb
outsl
xor
push
mov
rcrb
sbb
dec
dec
mov
in
outsb
or
leave
adc
mov
jp
movsl
je
dec
fwait
pop
jle
add
xor
adc
pop
fldcw
mov
sub
insb
mov
rorb
inc
mov
xchg
cld
xor
pop
scas
jmp
out
test
jns
or
xorl
popa
dec
loopne
sbb
and
xor
cmp
jge
nop
gs
dec
repnz
stc
lret
mov
dec
jne
add
insb
sbb
inc
jo
roll
xlat
xor
push
fisubl
jg
push
xchg
test
pusha
mov
mov
mov
aas
lock
repnz
leave
mov
xchg
push
bnd
lret
imul
xchg
jns
out
adc
clc
je
lock
and
das
and
les
mov
lods
mov
lahf
pop
test
in
push
andb
mov
push
data16
insb
in
cli
sub
pop
leave
dec
dec
cmpsb
jnp
clc
aaa
js
fs
pop
cmpsb
inc
aaa
inc
or
xchg
add
aam
lea
hlt
jo
int3
cmp
sahf
push
leave
add
pop
std
out
cmp
dec
sbb
pop
mov
pop
rcr
aas
rcrb
sub
hlt
sbb
push
pusha
jecxz
cmp
pushf
mov
mov
push
pop
mov
pop
xor
cmp
movsl
fimuls
movsl
mov
mov
ljmp
popa
lcall
fsub
pop
loopne
mov
xor
inc
inc
lods
mulb
jge
xchg
je
xchg
cmp
loope
pop
add
mov
jl
mov
add
shrl
ret
push
jle,pt
dec
fisubrs
sub
sbb
clc
arpl
repnz
pop
mov
mov
xchg
sbb
mov
mov
sbb
xchg
push
jl
pop
int3
inc
sub
jmp
orl
dec
jne
mov
xor
leave
pop
in
inc
pop
sbb
test
call
sub
xchg
and
jo
in
dec
sbb
sub
push
in
nop
aam
in
xchg
loop
mov
pop
mov
data16
fucom
cmpsl
or
pop
dec
dec
mov
test
push
or
and
jecxz
daa
mov
or
mov
push
pop
xor
mov
inc
mov
add
sbb
mov
xor
into
scas
mov
xchg
aas
push
mov
xor
sbb
add
push
xchg
movsb
inc
addr16
lcall
ja
subb
mov
je
pusha
pop
xlat
pop
mov
outsb
push
fs
aas
dec
aam
adc
popa
lea
sbb
xor
fdivrl
dec
test
pop
cmp
stc
mov
xchg
inc
xchg
mov
movsb
lret
dec
out
in
mov
addl
add
mov
inc
inc
mov
cmpsl
xor
leave
repnz
cmpsb
pop
xchg
cmc
xchg
cmp
mov
lret
sub
pop
dec
pushf
sbb
and
std
dec
lea
mov
outsl
pop
sbb
xchg
sub
scas
ficoml
adc
pop
cmp
push
lods
xchg
add
lods
aas
pop
ret
mov
scas
icebp
sbb
and
imul
push
and
cs
mov
jmp
out
lock
pop
addr16
outsl
sbb
jb
stos
cmp
mov
mov
mov
cmpsl
shr
sub
xchg
inc
xchg
call
sbb
sahf
pop
dec
test
cmp
daa
lods
sarl
cs
aaa
sbb
lods
aas
aaa
mov
aam
fwait
mov
xchg
xor
out
arpl
mov
or
xchg
addl
mov
lods
test
jmp
mov
sub
jb
loopne
mov
inc
inc
xchg
and
out
inc
ror
imul
jnp
mov
in
lret
fimull
fwait
push
push
sti
hlt
sbb
or
push
popl
sbb
int
stos
pop
pop
adc
test
xchg
jmp
fistpl
cmp
push
mov
xchg
sbb
mov
lahf
mov
nop
xchg
cld
cmpsl
nop
ss
movsb
fistpl
lret
mov
data16
rcl
and
xchg
fidivs
xchg
pop
inc
jp
jo
sub
inc
mov
lahf
pop
lret
das
sub
mov
and
rorl
out
pop
fcomi
jno
gs
stc
mov
je
int
popf
inc
jecxz
xor
dec
pop
push
fistl
xchg
xor
jne
imul
mov
pop
out
repnz
in
push
loop
or
cmp
xchg
sub
fsubl
dec
icebp
pop
xchg
je
sub
cld
dec
dec
shll
sbb
sub
rclb
jmp
mov
and
cmp
jp
and
aaa
mov
jb
ret
mov
dec
mov
dec
call
push
adc
ds
or
test
sub
arpl
push
test
or
push
jmp
bound
jbe
xchg
sarb
popf
pop
xchg
xchg
mov
inc
out
add
int
cs
loope
aaa
sbb
mov
push
sbb
xchg
aas
push
test
sbb
movsl
xchg
stos
mov
test
xchg
cmc
adc
cmp
mov
inc
jae
jno
inc
outsl
mov
scas
cmp
cmp
jle
mov
xor
fwait
cmp
testb
jne
xlat
rcr
add
mov
rcrb
mov
imul
or
pop
sbb
mov
aam
aas
or
test
mov
inc
pop
jnp
jmp
ss
sub
movb
fdiv
push
mov
or
ja
aam
push
mov
push
jbe
push
fisubrs
jae
adc
popa
mov
jae
mov
cmp
cmc
test
xlat
js
stos
jno
push
adc
pop
daa
jmp
xchg
lods
sahf
cmc
in
bound
xlat
loop
bound
stos
shrl
pop
cmp
xchg
popa
fisubrs
jl
push
cmp
cmp
into
dec
movsb
sub
aad
imul
aas
ljmp
je
mov
dec
and
fimuls
push
repnz
mov
push
icebp
cmpsb
inc
dec
das
push
out
ret
add
lcall
pop
pop
mov
es
dec
or
add
clc
iret
inc
cmp
jle
lds
jmp
xchg
or
add
in
cmp
shlb
add
inc
pusha
notb
adc
sbb
mov
pushf
push
inc
idivb
mov
or
inc
push
mov
inc
push
xchg
scas
inc
mov
sahf
outsl
ljmp
dec
or
mov
xor
in
shrb
fadds
dec
dec
and
fisubrl
repnz
xor
push
fwait
mov
lcall
es
mov
fstpl
jno
adc
sub
pop
jl
cwtl
pop
je
sbb
std
mov
push
and
ja
mov
fiadds
shl
rolb
dec
sbb
test
push
and
enter
sbb
cmp
jp
inc
mov
sub
out
pop
mov
xrelease
roll
pushf
inc
xor
sbb
inc
fcmovnbe
icebp
push
int3
fidivl
aad
adcl
and
push
loop
jmp
xor
ficompl
ficoml
mov
aaa
test
push
cmp
loop
jecxz
inc
dec
adc
mov
insb
dec
js
test
mov
cmp
test
enter
cmpsl
mov
sub
mov
daa
push
outsl
std
inc
and
mov
push
sub
sbb
add
jo,pt
cld
lods
adcb
in
mov
mov
nop
rclb
ret
inc
ffreep
fsub
lods
cltd
subl
mov
roll
in
or
jecxz
mov
push
cmpsl
dec
clc
aad
in
cmpsb
popa
push
xor
push
or
stos
xor
cmp
or
lods
xchg
mov
dec
clc
adc
inc
out
and
cmp
mov
sti
xor
sbb
cmc
push
repnz
shrb
adc
xchg
mov
mov
cltd
xchg
popa
jno
frstor
pop
icebp
out
mov
and
dec
pop
lods
fs
out
sub
std
jae
and
daa
cld
cwtl
jne
and
clc
mov
aam
lcall
sbb
adc
movsb
scas
outsl
jbe
nop
into
add
and
fcomps
jmp
sbb
add
jmp
jns
pop
xchg
lcall
xor
inc
mov
lret
xor
sbb
xor
and
addr16
andb
cmp
filds
js
clc
rcr
sbb
lods
pop
lahf
sub
dec
add
rol
icebp
cmp
mov
inc
test
inc
jmp
and
sbb
rolb
jnp
pop
jns
push
movsl
xchg
xchg
in
ja
lcall
xor
cmp
mov
and
mov
adc
in
outsb
aam
sbb
pop
mov
xchg
xchg
mov
lahf
dec
sub
dec
int
xchg
mov
fidivrs
mov
cmpsl
mov
inc
fcoms
das
inc
lods
aaa
cld
mov
adc
ds
loopne
push
lret
or
adc
dec
into
mov
aas
mov
and
rep
clc
jb
dec
mov
inc
dec
jo
add
jle
jg
jmp
andb
ja
cmpsl
and
sub
xor
adc
test
cwtl
cmpsb
adc
pushf
jmp
mov
xorl
loop
out
insl
adc
mov
movsl
je
mov
rorl
fisubrs
pop
mov
icebp
in
push
ss
ja
fcmovb
leave
sbb
mov
stc
mov
insl
mov
dec
jbe
addr16
outsl
lahf
pop
or
mov
std
xchg
push
sub
icebp
sahf
fnstcw
push
inc
movsb
das
mov
les
andl
xchg
add
dec
scas
xchg
inc
test
out
rolb
inc
fistpll
dec
pop
lods
mov
pop
mov
out
or
mov
jg
dec
cld
popa
or
adc
insb
adc
fstpl
sbb
pop
push
repz
dec
sbb
incl
sbb
adc
push
sbb
fs
pop
xor
dec
nop
call
sub
pop
lods
inc
sub
sbb
scas
mov
adc
imulb
jecxz
fidivrl
mov
rcl
jbe
imul
pop
scas
push
scas
data16
push
daa
mov
push
mov
fst
movsl
jnp
in
aam
lock
nop
loop
loop
dec
and
mov
ljmp
and
dec
sub
call
lea
inc
inc
lods
lea
std
pushf
sub
mov
pop
insl
out
loopne
std
fisttpl
pop
in
push
mov
fnclex
sub
jns
imul
sbb
lret
jo
inc
sbb
and
push
pop
adc
mov
rorb
sbb
lret
jo
inc
sbb
and
push
pop
adc
mov
rorb
sbb
lret
jo
inc
sbb
and
push
pop
adc
mov
rorb
sbbb
pusha
lds
ljmp
xchg
jmp
and
sub
cmp
dec
dec
pop
mov
mov
mov
shr
ret
clc
xor
and
adc
add
jae
arpl
push
mov
mov
shr
ret
clc
xor
add
js
adc
inc
dec
mov
cmpb
fwait
mov
insb
dec
inc
pop
adc
pop
mov
jmp
mov
sbb
inc
push
mov
cmpsb
aam
pop
mov
or
mov
shrl
ja
fs
push
jl
or
loop
test
mov
pusha
sub
jno
enter
mov
mov
testl
mov
ret
aas
xor
and
jns
add
push
pop
jbe
test
cmc
ds
jmp
push
push
pop
testb
cld
sub
pop
shrb
cmc
iret
push
dec
decb
mov
ret
neg
out
pop
mov
mov
xchg
stos
ficomps
inc
jns
fistl
insb
jle
shlb
add
xchg
incl
cmp
arpl
push
mov
test
hlt
jecxz
shl
ret
lret
push
ja
inc
push
jae
adc
mov
call
repnz
jecxz
mov
test
jbe
outsl
push
jae
or
add
dec
jmp
orl
lea
clc
jl
outsl
push
aas
add
pop
push
push
mov
mov
shr
ret
clc
xor
and
adc
add
jae
arpl
push
mov
mov
shr
ret
clc
xor
push
dec
mov
lea
popa
push
mov
xchg
loop
cmp
arpl
mov
fistpl
scas
push
es
push
scas
cmp
cmpsl
js
fwait
push
jmp
sbb
push
fdivrs
sbb
mov
clc
sbb
push
add
leave
xchg
xchg
dec
push
sarl
loopne
insl
test
push
or
push
jnp
mov
pusha
data16
pusha
scas
popa
jno
sbb
ret
mov
lods
add
into
push
outsl
adc
cmpsl
add
lds
cmp
testl
xchg
jl
jp
ja
push
movb
push
sahf
dec
xor
aas
mov
push
test
pushf
ja
cmp
push
push
lods
xchg
mov
add
imul
in
inc
adc
jbe
rcll
pop
leave
cs
or
lret
push
outsl
lret
inc
inc
ret
pop
cmpsb
out
lea
mov
mov
repnz
in
cmpsl
negb
notb
add
shll
shll
cmpsb
jnp
pop
hlt
daa
rcrb
sti
inc
fwait
int3
and
shrb
cmp
ret
mov
adc
stos
pop
dec
jmp
push
pop
xchg
or
sbb
stc
and
add
xchg
adc
adc
cltd
jge
or
in
nop
in
lea
pop
in
outsl
insl
and
mov
jbe
ja
pop
lcall
sbb
xchg
in
or
mov
or
addb
mov
out
lcall
sub
mov
sub
adc
rcll
sbb
movl
icebp
js
rolb
push
dec
in
or
imulb
call
sbb
shrb
mov
sbb
int
pop
xchg
xor
sub
cs
in
mov
push
lods
jne
insl
arpl
push
clc
mov
sarb
pop
xor
dec
arpl
jne
fiaddl
jmp
es
xchg
mov
mov
shr
ds
dec
jecxz
je
out
fnstenv
jl
mov
iret
insb
fisttpll
pusha
mov
xorl
inc
adc
adc
insb
cmc
adc
fsubl
sbb
popf
mov
add
inc
jae
xor
xchg
sub
jg
shl
cmp
mov
jecxz
aam
sbb
sbb
test
inc
sbb
lods
pop
mov
xchg
stos
clc
jl
imul
js
inc
testb
sbb
das
scas
and
in
pop
cmp
in
sub
fwait
lret
push
fstps
pop
pop
push
xchg
adc
out
mov
ja
imul
and
or
and
push
jo
pop
and
sahf
loope
lret
fwait
bnd
pusha
in
pusha
leave
mov
sub
mov
cltd
xor
xor
push
push
or
add
jl
daa
xlat
mov
sbb
xchg
push
pop
loopne
xchg
mov
lahf
loopne
cmpsb
dec
add
inc
pop
rclb
imul
leave
sbb
xchg
mov
push
popa
rolb
push
xchg
jo
dec
add
jg
or
std
xchg
cmp
into
sahf
sub
shr
mov
sbb
sub
popa
mov
addl
cmpsb
mov
add
pop
mov
imul
cmp
jp
jo
outsl
adc
adc
insl
pop
dec
clc
andb
loop
xchg
gs
gs
aas
scas
sub
inc
sbb
adc
test
hlt
cs
into
outsb
call
add
neg
movsb
mov
jne
xorl
pop
cmp
mov
pop
xchg
test
lret
rclb
xchg
mov
push
dec
fs
sbb
fstpl
icebp
and
xchg
dec
pop
cmp
mov
push
outsl
cmc
outsl
inc
pop
or
sbb
xchg
add
mov
inc
aas
inc
ret
push
dec
aad
je
nop
push
or
inc
cmp
pushf
aad
xor
pushf
addl
add
add
dec
stc
out
scas
fdivr
into
subb
icebp
jle
pop
testb
and
hlt
je
pusha
xlat
dec
rorb
adc
jl
fwait
xorb
lahf
jno
and
lcall
repz
mov
insl
dec
xchg
sub
lock
dec
xor
pop
ja
in
push
push
jo
movsl
lds
lret
sbb
inc
sbb
dec
mov
and
adc
xlat
les
cmp
ss
add
test
adc
lds
scas
mov
inc
inc
or
mov
lret
int
int3
mov
pushf
lds
fcomip
fwait
cmp
dec
repz
and
addr16
push
mov
decl
loope
out
adc
xchg
pop
movsl
stos
cmpsb
out
int
scas
sahf
insb
rcl
gs
data16
push
push
jne
gs
or
decl
cltd
jecxz
mov
roll
jl
xor
aam
ljmp
clc
push
pop
movsb
loopne
mov
inc
shr
cmp
fcmovnu
addb
dec
cmp
or
pushf
jmp
cmp
rclb
push
repz
sub
cmp
pop
jb
dec
repnz
fiadds
insl
mov
daa
pop
and
xchg
sub
pusha
dec
fnstsw
or
mov
xlat
dec
jecxz
arpl
out
scas
or
ja
push
popf
xor
ret
insb
icebp
rcl
iret
adc
insl
ficoml
jb
dec
dec
mov
mov
pop
ret
pop
gs
adc
inc
fistl
mov
lret
repnz
cmpsl
sbb
xor
loop
mov
mov
mov
sbb
sub
ror
push
jne
push
cmp
out
mov
insb
std
inc
jno
push
insb
movsb
inc
jns
mov
int
mov
mov
pop
xor
ds
push
loopne
jnp
ficompl
shll
fisttps
mov
pop
and
sub
mov
cli
mov
sbb
sbb
adc
nop
pop
inc
movsl
mov
fstpt
mov
jecxz
fcoms
outsb
ret
pop
adc
and
or
test
dec
int
xchg
mov
cmp
push
mov
dec
push
test
mov
mov
je
std
add
fdivrs
fisttpl
std
paddusb
loopne
icebp
stos
les
mov
cmp
hlt
pop
push
outsb
and
inc
fcompl
stc
rorl
into
mov
mov
aaa
shl
or
int
sbb
xor
repnz
inc
cwtl
cwtl
test
mov
mov
pop
push
or
loop
xchg
repz
es
lds
cltd
pop
out
sbb
adcl
mov
std
loopne
xor
and
test
test
mov
xor
gs
les
out
test
push
je
call
insb
inc
repnz
std
or
lds
iret
cltd
es
sub
mov
loopne
or
in
sti
xchg
xlat
sbb
daa
mov
xchg
pop
push
jbe
gs
add
cwtl
mov
mov
pop
or
ss
jle
inc
xchg
pop
mov
adc
ds
lods
sbb
sub
bound
jo
inc
push
mov
outsl
lcall
sbb
and
sub
hlt
dec
lods
mov
pushf
push
fwait
and
cmc
pop
adcl
add
xchg
add
fsubrp
mov
popa
cwtl
mov
imul
pop
sbb
pop
push
adc
testb
fwait
and
clc
sbb
jecxz
and
dec
icebp
insl
fidivrs
inc
jmp
imull
adcl
cs
mov
fsts
cmc
xchg
adc
mov
nop
or
push
xor
inc
push
cs
ror
jge
push
lods
pushf
shl
pop
cmp
inc
and
cmp
inc
fdiv
sub
mov
and
xor
imul
jns
or
adc
xchg
jbe
mov
in
movsl
insl
mov
ja
out
shll
cmp
pop
sub
stos
xchg
and
cmp
or
lods
xchg
sub
fists
enter
in
mov
jle
aad
jecxz
int3
push
fs
add
outsb
xchg
ficoml
aad
adc
cmpsb
addr16
sub
jp
stos
lcall
mov
cli
jae
mulb
vunpcklps
mov
xor
sub
ret
arpl
roll
cmp
loopne
push
sub
adcl
jae
imul
or
lahf
xlat
mov
sbb
pop
sahf
push
hlt
cwtl
fmull
daa
lods
jno
cli
mov
or
je
mov
xor
adc
in
pushf
out
aas
ljmp
mov
aam
add
js
xchg
xor
inc
mov
imul
dec
inc
push
fdivl
sub
addr16
adc
cld
jmp
inc
mov
pop
mov
pusha
sahf
mov
inc
xor
or
dec
hlt
mov
iret
aad
sub
push
inc
cmpsb
sbb
push
sub
jge
ret
jecxz
inc
jmp
cli
pusha
addr16
and
xchg
xchg
dec
jne
out
add
cli
push
mov
gs
lods
lcall
and
scas
adc
inc
movsb
loop
inc
aas
sbb
cmpsb
movsb
or
mov
mov
pop
xchg
das
or
jge
jecxz
and
dec
es
push
jl
dec
jecxz
cmp
inc
out
xor
sti
scas
rcl
xor
js
ds
and
jge
or
ss
fs
cmp
loopne
aas
and
orl
rorb
push
or
arpl
jge
sbb
jp
push
pop
iret
hlt
lods
fisubl
xchg
xchg
jecxz
outsb
jecxz
ds
imul
xchg
testb
push
daa
outsl
sar
lods
jge
add
jg
cmp
fimull
push
or
into
dec
imul
dec
addl
test
negb
jno
inc
xchg
mov
xchg
out
jne
out
sahf
and
lock
int
je
mov
or
lret
mov
pop
fwait
repnz
gs
jae
inc
sti
sahf
outsb
jl
push
cmpsl
insl
mov
cmpsl
pop
loop
jnp
jmp
sub
sbb
js
cmpsl
imul
dec
and
sbb
push
mov
adc
lcall
iret
pop
cld
call
xchg
fimuls
sahf
es
sub
mov
dec
sub
add
cmp
mov
mov
or
stos
cmp
xor
pop
cli
leave
rol
popa
cmp
std
sbb
cmc
call
in
mov
out
mov
mov
add
jo
adc
push
call
inc
lahf
jecxz
insl
xchg
arpl
testb
stc
dec
mov
lds
xor
xor
add
xor
add
aaa
loop
rclb
fcmovnb
adc
pop
xchg
xor
pop
mov
jb
inc
lret
popa
dec
fadds
push
insl
sbb
push
arpl
mov
jae
ljmp
inc
xor
or
out
jbe
push
ss
fmul
daa
add
in
in
pop
iret
push
lea
shll
in
stos
popf
pop
mov
sbb
subl
scas
pushf
inc
pop
imul
enter
imul
stos
mov
or
outsl
pushf
gs
adc
xor
mov
rep
leave
iret
mov
gs
or
fs
add
pop
push
or
out
push
xchg
test
lock
inc
psrld
iret
loopne
or
mov
push
negl
pop
popa
jbe
mov
dec
pop
mov
jmp
push
fs
icebp
pop
sub
enter
lret
leave
mov
inc
add
add
ds
out
pushf
mov
lods
and
int
fadd
mov
stc
mov
imul
sbbl
pop
lock
jle
push
pop
test
dec
dec
icebp
inc
nop
add
cmp
sub
sub
adc
ss
xorb
push
sub
sub
ret
sbb
gs
cltd
outsw
pop
dec
lret
inc
sbb
mov
sar
inc
leave
subb
and
adc
popf
cmp
cltd
test
pop
xchg
imul
leave
cmc
push
into
pop
jecxz
in
jecxz
pushl
and
cmpsb
fistpll
push
jb
fiadds
and
shrb
jb
pop
xchg
call
enter
lods
cmpsl
fsubrp
adc
lret
sbb
loop
cwtl
xchg
sbb
in
fdivs
out
stos
lret
pusha
xor
mov
bound
adc
pop
loope
push
in
xchg
iret
mov
pop
fistpll
jbe
jmp
push
test
aam
aad
rorl
jne
insl
lret
jae
iret
loopne
out
mov
mov
cmp
adc
inc
add
xchg
std
adc
enter
xor
lret
gs
mov
xlat
dec
inc
mov
mov
push
sub
notl
mov
repnz
or
dec
mov
mov
cmc
and
dec
push
jl
or
mov
sub
add
cmc
in
mov
ret
jne
fimull
fs
addr16
cld
mov
xchg
pop
mov
imulb
lds
push
xor
lret
fnstenv
cmc
in
sbb
clc
xchg
test
xchg
cmp
loopne
rcrb
pop
inc
out
fidivl
loop
int
push
and
cmpsb
dec
and
mov
rcll
pop
cld
roll
test
data16
in
testl
loope
push
imul
out
pop
or
outsl
jle
movsb
xchg
inc
repz
aad
insb
jmp
ret
mov
arpl
mov
lret
xor
je
inc
xor
pop
jb
xchg
mov
add
xchg
mov
push
lea
in
rcr
leave
clc
in
sahf
insl
movsb
cmp
mov
mov
cmp
scas
jbe
in
bnd
out
int3
mov
lret
sub
pop
in
mov
jb
les
xor
mov
dec
cmp
mov
cmpsl
inc
xchg
sbb
mov
jne
fwait
push
xchg
adc
ds
xor
js
mov
loopne
jg
fbld
pop
or
ficoms
popf
mov
gs
mov
insb
ret
dec
adc
movsb
mov
jb
jno
sub
pop
insl
jle,pt
ds
jnp
inc
notl
loop
and
or
addl
pop
jp
sbb
cld
scas
loopne
fs
ret
jmp
mov
cmp
fs
leave
daa
lods
mov
int3
push
xchg
inc
push
xor
sub
out
jno
shl
cmp
shll
into
push
mov
lea
mov
test
aam
test
popa
bound
aas
pop
inc
mov
nop
fisttps
dec
push
push
sbb
icebp
pop
dec
cli
push
rol
stc
xchg
xchg
in
lds
dec
sti
js
aas
fdivr
pop
ficompl
xor
ds
sbbb
sub
xlat
dec
cmovge
xchg
push
jb
pop
inc
and
jae
gs
repnz
inc
testb
push
lds
ds
and
or
xor
sub
sub
ficomps
push
sbb
sub
bound
mov
fadd
mov
jnp
fsubl
mov
mov
xchg
add
rcll
shrl
adc
push
xor
pop
xrelease
mov
movl
mov
dec
mov
dec
iret
mov
xchg
inc
xchg
dec
cmp
jb
shl
cmpsl
sbb
mov
bound
sbb
mov
leave
and
push
sti
lock
and
fildll
mov
push
ja
jmp
mov
movsl
sahf
sbb
ljmp
fimull
popf
sbb
xlat
inc
dec
dec
dec
scas
and
sbb
adcb
cld
push
and
inc
and
leave
mov
lcall
imul
sti
mov
cli
jnp
and
sti
jo
sbb
out
xor
push
sbb
pop
pop
dec
mov
popf
or
xchg
jecxz
mov
int
daa
pop
ret
or
cmp
or
push
xchg
sbb
mov
push
arpl
mov
stos
xchg
adc
and
inc
test
pop
aad
outsb
cmpsl
sbb
out
xchg
stos
fiaddl
pop
pop
xchg
dec
push
xchg
push
push
push
mov
xor
cmp
shll
xorl
xor
add
test
push
iret
pop
and
stos
mov
in
adc
popa
xchg
idivb
inc
fdivrl
cmpsl
fistl
push
jge
pop
adc
in
jmp
nop
dec
cmpsl
or
mov
std
call
pop
sub
fdivrs
paddusb
dec
or
push
shlb
das
cmpps
outsb
dec
mov
xchg
mov
lods
pop
sub
sbb
xor
jg
rcr
mov
ljmp
jecxz
cld
out
fimuls
aaa
mov
inc
lcall
sub
dec
pop
jb
ret
push
into
stos
pop
cmpsb
pop
leave
cmpsl
dec
xor
fimull
or
pop
pusha
cmpsl
xor
testb
lret
adc
int
jge
pushf
sbb
jmp
jne
jne
sub
sbb
ficoml
mov
imul
pop
ret
sub
sbb
sarb
outsl
mov
daa
js
xor
enter
mov
inc
add
or
cmp
adc
push
add
inc
sti
jp
leave
mov
outsb
pop
push
lea
adc
fisubs
mov
cmpsl
pop
aam
adc
fnsave
jo
or
sub
mov
sub
sahf
and
hlt
fistps
xchg
xchg
aaa
outsl
dec
mov
int3
subb
pop
add
add
push
or
inc
inc
adc
dec
xchg
cmc
nop
das
cmc
and
jne
add
jg
mov
xor
mov
test
loopne
mov
or
xchg
frstor
mov
sub
test
adc
into
bound
sbb
push
test
in
xchg
jmp
je
cltd
or
jnp
out
in
sbb
mov
push
xor
mov
pop
and
and
cmp
out
or
or
adc
lds
push
pop
jo
adc
imul
mov
dec
xor
push
int
and
xor
mov
or
jge
aas
mov
mov
int3
push
jo
push
cmp
movsl
push
inc
push
insl
sti
faddp
pop
push
rclb
icebp
add
imulb
cmp
mov
enter
ret
inc
shll
lods
out
and
test
sub
pusha
inc
int3
lret
repnz
fstpt
clc
lea
and
in
xchg
aam
cmpl
out
es
cmpsb
xor
jb
push
scas
aad
mov
cmp
sub
inc
out
pop
repz
xchg
xchg
add
inc
or
add
cmpsb
add
idivl
mov
testl
sarb
mov
add
sti
cmp
push
add
jg
or
push
xchg
call
xlat
mov
xchg
xchg
scas
repz
push
cwtl
xor
sahf
pop
shll
loope
mov
rolb
mov
or
addl
add
cmpsl
pop
fidivs
mov
xor
xor
dec
sbb
int
adc
inc
jp
mov
xchg
mov
out
mov
sbb
cmpsb
dec
inc
decl
mov
arpl
out
xor
jo
fs
inc
outsl
pop
popa
mov
xchg
cmpsb
mov
add
nop
xchg
pop
std
nop
and
rolb
bnd
punpckhdq
in
sub
scas
mov
mov
mov
lods
aam
es
inc
ficomps
daa
inc
aaa
js
inc
push
test
pop
cmp
sub
jge
cmp
std
pop
xor
sbb
mov
loop
cmp
mov
jno
pop
jno
aad
push
jl,pn
sbb
movsb
mov
dec
inc
pop
xor
mov
movsb
loopne
movb
lock
fs
mov
inc
out
out
lret
xchg
stos
xchg
mov
jp
inc
push
add
dec
xchg
stc
add
daa
cmp
int3
ss
cmp
sub
xlat
mov
mov
gs
lea
ja
push
xchg
mov
hlt
xchg
incl
stos
or
or
sbb
cmpsl
adc
daa
sub
cld
xor
push
sub
mov
xchg
pop
arpl
mov
int3
test
push
xor
and
xchg
push
inc
push
fldenv
stos
call
shl
cli
ja
and
mov
lock
mov
rorl
mov
cmp
mov
in
xchg
pop
mov
out
lock
adc
jbe
js
insl
jp
lds
in
jge
ret
iret
jb
cmp
fincstp
popf
out
pop
xor
sub
arpl
push
mov
mov
shr
ret
clc
xor
and
adc
add
jae
arpl
push
mov
mov
shr
ret
clc
xor
push
xchg
xor
cmp
dec
arpl
push
insb
ret
js
mov
mov
int3
jecxz
shl
ret
sbb
in
and
adc
add
dec
arpl
call
mov
iret
xorl
adcb
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
add
or
aad
jg
mov
add
add
or
add
add
pop
add
and
dec
add
add
adc
int
addl
add
sbb
and
dec
add
add
add
add
add
add
add
add
add
add
jbe
xor
sub
stos
add
jmp
add
add
add
add
add
add
adc
xchg
add
add
push
add
add
add
or
add
xchg
add
enter
mov
add
add
xchg
add
xor
inc
add
or
or
pop
add
add
add
add
add
pop
add
add
mov
add
add
add
add
or
add
add
add
or
adc
cmpsl
add
add
add
add
add
add
add
cmp
add
bound
cmpsl
add
add
add
add
add
add
add
add
add
and
test
jno
jmp
pop
add
add
add
adc
add
sbb
xchg
add
add
add
add
add
xor
insb
add
add
add
add
add
adc
add
leave
add
add
add
mov
add
sub
cmpsl
add
add
add
inc
add
add
add
add
add
add
add
add
sub
add
xchg
add
add
add
jae
sub
js
enter
cmp
add
push
add
add
add
push
add
add
add
add
add
incl
addl
add
mov
add
testb
add
mov
mov
add
add
add
add
dec
add
mov
mov
add
add
add
add
add
add
add
xor
flds
lock
add
add
lret
add
inc
add
add
lret
add
add
out
add
add
adc
or
mov
add
xor
js
pop
add
add
roll
mov
add
stos
add
add
add
add
add
add
aam
movsb
add
add
ds
add
or
sub
inc
add
add
add
push
daa
add
add
add
add
add
xchg
add
add
add
incl
bound
in
add
lods
add
flds
and
push
add
push
add
add
push
add
add
add
jae
jae
push
add
add
add
dec
add
add
add
add
add
add
add
add
push
add
add
add
cmp
add
add
add
add
jno
xor
icebp
add
add
add
mov
add
sahf
add
test
jns
arpl
pusha
add
inc
add
add
add
add
add
add
and
pop
add
pusha
add
add
add
add
add
js
test
push
add
cmp
dec
add
inc
add
cmp
add
dec
add
add
test
cmpsl
add
add
sub
pop
add
add
add
arpl
xchg
jo
inc
sub
in
cmc
lods
lds
fidivs
cmc
xor
repnz
inc
dec
add
mov
push
xor
ret
xor
add
add
and
mov
inc
out
fistpll
pop
stos
cmp
xor
xchg
stc
pop
adc
in
iret
shr
mov
push
in
jge
adc
pushf
jmp
fucomi
pop
idivb
mov
xchg
in
in
fsubp
pop
mov
popa
mov
dec
xor
cmp
fsubl
fsubrs
push
leave
or
outsb
test
ror
repnz
adc
lcall
add
movsl
xchg
cwtl
sarl
rolb
jns
fdiv
bswap
loopw
mov
dec
movsl
adc
inc
shr
call
sub
and
fmuls
or
cmp
addr16
or
sub
fcoms
xor
loop
xchg
ja
jmp
xor
push
jmp
cmp
pop
into
cmpsb
adc
repnz
in
in
add
sub
cli
xchg
push
loop
or
and
lea
in
les
int
out
or
gs
test
sti
inc
dec
or
inc
mov
test
pusha
inc
mov
dec
je
xor
xchg
ja
jecxz
cli
jo
pop
popf
leave
cwtl
sbb
xor
xor
loop
jae
insb
std
nop
or
adc
lret
cltd
andb
inc
cmp
inc
dec
ficomps
xchg
and
andl
bound
data16
and
push
addr16
xor
ficoms
insl
cmc
mov
sbb
icebp
rcr
ja
stc
insb
pop
or
cmp
int
lea
or
out
or
adc
adc
sbb
xor
mov
loopne
dec
cmp
adc
std
push
insb
or
ret
and
loope
mov
xor
mov
sbb
mov
add
int
adc
xchg
imul
loopne
repz
stos
insl
rcrl
arpl
dec
fisubrl
dec
aaa
fs
cmpb
ret
int
push
mov
gs
in
ss
jp
sbb
jae
cmp
std
in
sub
push
adc
mov
inc
lea
popa
paddusb
call
sti
jle
xchg
sbb
mov
jo
push
mov
adc
pop
mov
xor
xchg
inc
cltd
inc
mov
push
xchg
xor
mov
insb
mov
lock
pusha
andl
arpl
test
loopne
cmp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
