call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
aad
lahf
inc
scas
ja
sarb
push
dec
xlat
pop
sub
xchg
pop
add
jg
cwtl
push
lahf
inc
lahf
ja
addr16
pop
filds
out
aaa
jmp
add
idiv
out
xchg
pop
xchg
jg
xchg
push
xchg
ja
addr16
pop
movb
aaa
call
movl
adc
sbb
push
cmpsl
call
sbb
sbb
ss
shlb
in
in
push
and
dec
out
out
shll
push
mov
popl
adc
scas
adc
clc
pop
xor
addr16
aas
loopne
shl
xor
loop
imul
lahf
push
out
jge
sbbl
loopne
jg
rcrb
xchg
sbb
dec
mov
les
xor
ljmp
fdivrs
or
stos
das
or
lret
js
dec
xchg
sub
pusha
mov
lahf
push
pop
adc
and
movsb
pop
sub
nop
cmp
aas
daa
in
pop
jnp
dec
xchg
outsl
rcrl
jb
push
mov
inc
aam
lock
ds
orb
mov
lahf
inc
scas
ja
fists
lds
out
aaa
out
push
xlat
pop
aaa
mull
out
xchg
inc
xchg
data16
cld
cmp
inc
lret
push
stos
jnp
pop
in
jns
ja
mov
mov
lahf
push
mov
or
lahf
inc
lret
adc
addl
or
xchg
dec
mov
hlt
sub
pop
sarb
out
lods
adc
pop
mov
pop
out
aaa
jmp
pop
das
idivl
out
xchg
pop
xchg
jg
push
lahf
inc
scas
ja
addr16
pop
filds
out
aaa
jmp
pop
das
idivl
out
xchg
pop
xchg
jg
push
pop
push
test
and
fcomi
mov
and
or
repz
andb
data16
jmp
jp
fmull
insb
sbb
inc
aad
shlb
pop
sbb
lea
push
out
sahf
push
or
stos
int3
outsb
mov
or
and
outsl
xor
xorb
nop
loopne
out
sti
jg
sub
imul
popf
add
inc
mov
in
in
outsb
sbb
ret
push
in
inc
and
shlb
bound
sub
pop
jmp
je
pop
push
ljmp
inc
inc
jo
loope
inc
push
pop
jno
mov
outsl
cmp
lahf
mov
sbb
pop
mov
mov
pop
inc
xchg
jno
movsl
jp
clc
adc
lds
mov
push
adcl
mov
rol
mov
repnz
push
rcl
xor
dec
repnz
xor
mov
or
add
mov
fwait
or
pushf
push
pop
rolb
sarl
lock
call
nop
in
adc
dec
scas
pop
popa
lock
pop
mov
jbe
adc
adc
pop
loope,pn
sub
fdivrl
lcall
mov
das
cmpsl
popa
fs
dec
jl
push
sbb
mov
xchg
cltd
dec
sbb
lds
sbb
pop
jno
push
push
or
or
jne
jnp
xor
pop
add
nop
shr
lds
scas
mov
stos
movsb
test
ret
ror
xor
pop
shrl
pop
lds
cmpb
sub
mov
movsl
xchg
enter
repz
xchg
sarb
or
jo
sbb
jg
je
icebp
aad
push
fisttpl
lods
orl
mov
call
push
xor
cmp
and
adc
or
or
dec
lret
pushf
mov
jo
sub
xchg
mov
or
xchg
inc
mov
jl
movsl
dec
add
aad
scas
push
into
xor
lret
mov
out
fdivrs
fists
mov
add
fs
add
pushf
xchg
xor
xchg
mov
jge
movsb
insl
mov
push
movsl
mov
popa
fndisi(8087
ret
xchg
mov
mov
stc
dec
es
pop
push
and
mov
or
jge
cmpsl
je
testb
dec
in
inc
mov
aad
mov
pmullw
mov
inc
push
loopne
push
jbe
popa
fmull
sbb
fisubrs
cmp
or
xchg
imulb
add
xlat
stos
dec
pop
sti
mov
mov
lock
xchg
adc
sub
sub
add
fmuls
xchg
jno
bound
jne
cwtl
mov
mov
jae
test
xor
xchg
push
mov
push
jnp
gs
push
mov
shlb
in
cmp
or
call
out
adc
sub
jae
mov
pop
mov
fsubs
cmc
imul
and
imul
aaa
cltd
jge
test
enter
repz
pop
xor
cmp
aas
in
sbb
mov
or
gs
scas
jb
lods
scas
imul
cmp
mov
js
lret
test
fwait
lcall
clc
mov
jnp
pop
mov
ret
loop
jb
inc
in
xor
aam
jo
mov
push
and
jne
adc
dec
arpl
fsubs
mov
mov
sti
inc
popa
mov
jg
fstpt
and
mov
das
mov
adc
std
and
xchg
cmpb
xor
jnp
mov
cmp
mov
xchg
sbb
sbb
jg
stc
sbb
cmpsb
mov
pushf
add
sub
into
inc
call
push
mov
popa
cmp
inc
aas
add
mov
cmpsb
dec
adc
mov
dec
lock
sub
out
mov
ss
sub
mov
les
and
dec
adc
out
sub
loope
ja
cli
mov
pop
insl
mov
bound
push
inc
testl
mov
dec
xlat
icebp
sbb
cmp
jl
jne
cmp
cmp
mov
dec
ja
add
dec
sbb
pop
add
jg
mov
shlb
outsl
jbe
sbb
mov
dec
sbb
xor
cmp
hlt
fisttpll
sahf
loop
pop
in
stc
jp
iret
insl
iret
rcll
pop
fs
loope
in
hlt
cmp
jge
pop
hlt
pop
sbb
adc
inc
mov
out
movsb
icebp
test
adc
or
popf
jbe
in
adc
add
jbe
and
mov
aas
das
into
fisubrl
sbb
pop
xchg
out
inc
push
add
inc
pop
cmp
loop
jmp
pop
adc
dec
sbb
outsb
movsl
sbb
inc
lds
and
push
into
stos
push
inc
call
cmp
imul
movsl
push
ficompl
enter
aas
lret
or
rorl
les
sbb
stos
xchg
or
das
mov
fildll
xchg
xor
in
push
dec
add
orb
lods
inc
jne
mov
ljmp
push
push
push
mov
in
out
ds
inc
test
loope
test
icebp
das
test
add
shl
jg
jbe
dec
xorl
jge
dec
mov
mov
mov
push
jg
jmp
rorb
lds
sahf
push
jl
xlat
jl
in
lret
fs
push
mov
mov
lea
dec
mov
mov
cld
fdivs
and
ljmp
add
cmp
in
cmp
cmpb
aam
mov
xor
jle
cs
lret
xchg
repz
or
jae
add
jmp
std
leave
cmpl
aad
sbb
xchg
adc
pop
clc
mov
or
jg,pt
push
or
adc
out
gs
clc
and
or
and
jae
dec
lcall
subb
dec
xchg
arpl
es
nop
pop
pop
push
and
inc
iret
clc
movsb
mov
sbb
xchg
movsb
and
adc
cmp
pusha
aam
mov
test
lock
js
flds
and
mov
insb
lret
nop
cmpsb
pop
mov
cmp
mov
leave
mov
insl
mulb
repnz
pop
cmpsl
rolb
scas
and
jnp
adc
fwait
xchg
pop
pop
jbe
daa
mov
pop
aas
test
imul
xchg
sarb
pop
and
sub
insb
mov
popa
sub
rolb
add
popf
stc
ljmp
dec
insb
fmuls
pop
cmp
stos
lods
in
into
pop
in
lret
cmp
daa
out
xchg
clc
lahf
nop
cli
decb
mov
int
pop
fsubrl
add
scas
mov
cld
mov
jb
mov
stos
adc
adc
std
add
dec
fsts
outsb
dec
inc
les
popa
arpl
popf
cmp
pop
lea
out
inc
jmp
leave
inc
mov
lea
inc
xchg
xchg
std
les
cs
fcoms
sbbl
sbb
push
sarb
into
repnz
ret
jns
sbb
stos
ret
js
jns
mov
xchg
insb
jnp
xlat
dec
call
xchg
aad
scas
daa
popf
aaa
ja
loopne
xorl
imul
xchg
or
mov
pop
sub
sub
push
lods
pop
ret
sti
adcb
push
sub
inc
cli
aam
mov
mov
aad
in
repz
rcl
adc
xor
repnz
mov
popf
sub
ss
fldcw
lcall
rclb
scas
lret
and
xchg
outsb
mov
pop
scas
mov
scas
out
rolb
and
ljmp
xor
hlt
sar
subl
out
rol
sti
cmpsl
negl
loope
inc
mov
rcrb
mov
mov
lcall
inc
inc
pop
movsl
inc
or
jg
xor
stc
and
mov
mov
xor
cli
test
sub
ss
lds
xchg
and
loop
and
jmp
iret
aad
and
push
mov
fimuls
sub
cmp
push
xor
adc
push
mov
enter
int3
jmp
cmp
mov
jmp
jle
fstps
mov
mov
add
iret
cmp
sub
fsubl
and
or
stc
std
add
mov
sbb
out
add
pop
mov
movsb
ret
in
mov
pop
ds
clc
adc
push
add
lea
sbb
sub
mov
std
repnz
or
icebp
ljmp
mov
push
sbb
jg
cmc
in
test
xchg
sarb
pushl
adc
cmc
mov
mov
xor
cs
lahf
cwtd
jmp
xchg
inc
cmpsb
repz
cmc
lcall
or
mov
ds
enter
jmp
cmp
mov
sti
cmp
ror
dec
and
pop
arpl
add
jae
xchg
cmp
adc
andb
addr16
push
in
es
popf
inc
out
xor
xor
repz
push
and
movsb
in
mov
jecxz
lods
stos
add
inc
mov
pusha
imul
int3
mov
dec
pop
adc
pop
sub
adc
cmp
adc
imul
cmp
jbe
jns
mov
aaa
xor
div
sub
popf
rcr
js
or
fwait
sub
testb
pop
push
cmp
into
mov
xlat
dec
in
adc
mov
dec
adc
scas
xor
and
cmpsb
test
or
pop
lds
data16
lret
xor
lcall
loopne
adc
cmp
les
shrb
inc
cmpsl
mov
add
xor
jne
sub
ret
insb
xor
and
mov
sbb
loope
jl
add
test
push
mov
push
mov
pop
xor
add
xchg
aam
or
inc
xchg
adc
outsb
mov
scas
enter
loopne
test
xor
in
mov
cltd
dec
push
pop
mov
fcomi
and
sub
nop
mov
outsl
loope
popf
fstl
inc
cmp
iret
testl
cmpsb
out
test
into
adc
jmp
push
push
push
lcall
or
jle
iret
ss
adc
mov
adc
adc
orl
shl
push
fwait
lods
jne
testb
or
xchg
out
imulb
add
test
mov
and
fcmovnbe
movsl
repnz
testb
gs
rcll
addl
movsb
jae
lods
mov
fstpl
aam
fidivs
jbe
push
enter
mov
lcall
push
out
dec
ret
in
in
add
outsb
jne
adc
dec
add
imul
mov
jae
out
call
cmpsb
notb
adc
arpl
lds
push
bnd
adc
pop
and
popa
shll
test
cmpsl
lahf
adc
cmp
pop
cmp
sub
push
fnstcw
fwait
scas
ficoml
mov
jle
jl
imulb
or
sub
mov
inc
inc
xor
iret
or
pop
or
adc
add
add
pop
dec
add
dec
inc
insl
push
inc
xlat
repz
or
ja
pop
mov
scas
outsb
push
decb
sub
in
push
xor
xor
xchg
in
jb
jbe
mov
add
xchg
outsb
out
lock
push
arpl
inc
jge
or
int3
pop
pusha
adc
inc
add
clc
inc
int
mov
jge
xchg
inc
cmp
and
mov
pop
rclb
mov
call
mov
push
or
subb
adcb
add
leave
setb
dec
pusha
jbe
incb
mov
push
sbb
mov
imul
rcrb
ja
mov
adc
cmp
cs
cmp
out
stos
or
lods
sbb
inc
pop
sbb
sbb
pop
cmpsb
mov
int3
jae
js
rolb
push
dec
jbe
sbb
insl
nop
add
and
dec
ss
int
pushf
push
cwtl
ds
pop
mov
icebp
pusha
sbb
jae
mov
lods
nop
add
shrl
add
mov
fwait
clc
lret
sub
fstl
or
mov
iret
push
add
enter
sbb
mov
push
out
adc
adc
mov
addr16
mov
mov
lret
pop
or
in
mov
sub
leave
int
mov
fnstcw
dec
jg
out
cmp
inc
push
dec
mov
mov
insb
scas
add
aaa
sbb
or
pop
inc
fcompl
aad
lds
adc
and
jbe
stos
add
and
push
mov
inc
inc
movsb
dec
loopne
das
dec
adc
js
shlb
rorb
cmp
jns,pt
cmc
push
xor
out
and
int
mov
lock
jg
jae
movsl
jmp
xor
shlb
add
lret
jp
mov
sub
add
and
lods
sbb
dec
addr16
mov
shl
add
add
int
or
push
movsb
in
xchg
lods
pop
pop
mov
jns
xor
out
lock
mov
cmp
jl
shlb
data16
push
dec
insb
pop
aaa
jne
dec
adc
xor
xor
scas
lds
mov
xchg
sarb
jecxz
nop
lcall
jg
mov
push
jl
lods
add
ljmp
mov
mov
in
popa
negl
mov
mov
jb
adc
mov
xor
push
pop
mov
and
aas
dec
mov
ret
sbbb
ret
add
jp
mov
jns
or
adc
loopne
fcomip
orb
inc
std
shlb
mov
mov
xchg
lcall
jno
jns
cmp
push
sbb
sub
adc
icebp
js
mov
bound
mov
out
ja
ds
scas
sub
xor
aam
sub
scas
call
and
pop
cmc
cli
mov
loop
mov
xchg
fwait
out
jbe
xchg
lods
fcomps
pusha
cwtl
add
xor
push
jp
in
jle
xor
push
testb
loopne
cmpsl
mov
daa
xchg
loopne
daa
pop
push
xor
in
dec
add
or
jmp
lcall
out
cld
or
push
fistl
jns
cld
push
mov
rclb
cld
xor
push
jecxz
ret
jno
ja
bound
sbb
xor
and
xchg
sub
cmpsl
push
mov
shrl
mov
andb
mov
sub
pushl
dec
lcall
ss
mov
xor
ds
mov
jnp
inc
out
insl
ret
fidivl
pop
lods
dec
xchg
push
sbbl
ljmp
mov
dec
lds
mov
xchg
mov
mov
fbstp
divl
ret
inc
sbb
xchg
cmp
insl
xlat
or
stos
stc
sub
outsl
jge
and
sub
test
mov
inc
adc
gs
lock
mov
cmp
pop
insb
and
ror
ret
cmp
mov
dec
jmp
and
pop
insb
mov
push
xchg
jo
sbb
rol
xchg
xchg
fnsave
scas
mov
sub
icebp
cmp
mov
jl
pop
inc
cld
cmpsb
xchg
mov
adc
pop
push
push
test
cmp
test
sub
js
mov
aaa
or
push
xor
leave
push
in
inc
inc
cmp
dec
loop
inc
imul
jns
ret
and
movsb
cld
xchg
inc
arpl
in
test
jnp
int3
jp
dec
push
mov
leave
xchg
repnz
leave
test
xchg
xchg
lahf
push
and
pop
xchg
cltd
mov
adc
adc
jge
dec
decl
sub
push
insb
dec
push
and
out
js
jb
mov
int3
clc
jnp
push
jae
mov
pop
push
stc
and
jmp
xchg
sub
xor
popa
fisttpl
fnstcw
loopne
imul
add
and
inc
or
sbb
mov
add
cmp
insb
cmp
jns
cmp
jl
mov
outsb
jo
mov
adc
lock
shlb
sti
lret
call
or
add
jge
in
sub
jb
out
push
pop
loop
xchg
or
fs
sbb
cmp
in
sub
mov
lods
data16
xor
into
xchg
add
xchg
and
xor
mov
add
fisubl
loop
je
push
add
mov
cmp
lcall
xor
aad
mov
popa
shr
sub
lods
pop
xor
mov
pop
mov
push
jns
add
mov
sbb
dec
inc
shlb
sbb
jne
sbb
bound
push
sub
jle
xchg
jno
clts
lret
mov
pushw
scas
cmp
cmp
rcrl
popf
jbe
jo
xlat
shrb
popf
pop
dec
daa
xchg
insb
inc
push
jge
sub
cmp
sbb
add
cmc
stos
stos
sahf
bound
ffreep
shrl
es
out
fsubr
int
mov
sti
pop
lcall
mov
adcl
cmpsl
fnstenv
push
fldl2t
inc
cmp
insb
scas
cmp
out
insl
push
or
sub
xor
cli
lcall
push
into
cs
cmp
inc
push
add
imul
movsb
out
mov
and
xchg
add
inc
mov
rcrb
inc
test
or
rorb
sbb
stos
push
sub
lret
js
and
loop
test
pop
addr16
sbb
cmpsl
fcom
arpl
lea
push
popf
loopne
nop
int3
out
stos
data16
jge
cmpsb
test
mov
ja
and
lcall
push
mov
and
lahf
add
pop
inc
fbstp
and
das
add
pop
push
jns
mov
aas
out
hlt
inc
cmp
cmp
out
mov
dec
jbe
push
out
idiv
in
out
rclb
imul
cmpsb
pop
mov
out
mov
push
pop
das
xor
cltd
rcll
inc
jbe
ja
mov
jae
mov
sub
inc
movsb
es
fsubs
ficompl
fnstsw
xor
lods
bound
arpl
into
clc
leave
xor
pop
jp
popa
daa
push
shll
push
mov
test
sbb
in
sbb
inc
and
jmp
jnp
cmp
dec
mov
insl
ret
sti
xchg
cmc
in
fwait
add
jmp
dec
xor
xor
xor
sub
ficoms
mov
mov
call
or
mov
or
cltd
xor
xchg
stos
xor
pop
xchg
pop
push
jg
mov
sub
hlt
mov
stos
and
push
dec
cmp
dec
daa
es
iret
inc
ficoml
outsb
idiv
pop
sub
mov
arpl
imul
insl
jmp
xor
int
mov
inc
add
jl
jmp
dec
imul
dec
cwtl
mov
cld
dec
cli
dec
loope
push
insb
push
adc
push
mov
outsb
int3
mov
dec
xor
xchg
or
dec
repz
xchg
ret
icebp
add
mov
bound
sbbl
xor
and
ljmp
push
jle
push
sub
inc
loope
adcb
and
pop
test
hlt
out
seto
pushf
xchg
lahf
aad
jbe
scas
push
imul
hlt
pusha
stos
mov
fdivs
cmpsl
ja
aam
pop
scas
jmp
pushf
jp
adc
fcmove
sub
sub
pop
lds
idivb
dec
addb
mov
adc
jae
mov
fistl
mov
mov
repnz
pusha
test
cmp
inc
ljmp
hlt
jle
pop
das
jne
and
mov
mov
les
icebp
xchg
fwait
dec
cltd
mov
movsb
mov
aas
cmc
icebp
dec
mov
push
pusha
push
xchg
repz
mov
inc
push
mov
lahf
add
sbb
jecxz
lret
dec
mov
ret
pusha
rcl
cmpsl
lahf
xor
push
push
cmp
rcl
xor
loop
jns
dec
jmp
cltd
aad
sub
pop
pop
push
xchg
add
hlt
ds
aad
xor
fdivrs
sub
mov
mov
jmp
cmp
pandn
push
out
in
rcrl
jne
int
mov
inc
and
mov
mov
push
push
xchg
sbb
mov
hlt
negb
addr16
pop
filds
out
aaa
jmp
pop
das
idivl
out
xchg
pop
xchg
jg
push
lahf
inc
scas
ja
addr16
pop
filds
out
aaa
jmp
pop
das
idivl
out
xchg
pop
xchg
jg
push
lahf
scas
idivl
xchg
aaa
jmp
xorps
sub
aas
out
xchg
pop
xchg
dec
cmpsl
mov
ja
addr16
pop
filds
outsl
aaa
jg
lock
loopne
test
aas
nop
cmp
xlat
js
dec
sbbb
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
iret
loope
icebp
jg
outsl
shll
call
iret
jo
push
out
inc
sahf
and
adc
dec
icebp
jle
outsl
rcrl
mov
das
in
insl
iret
jno
inc
out
push
lahf
push
xor
clc
dec
call
pop
mov
das
mov
popa
iret
push
sahf
cmp
inc
lahf
jae
jle
lods
dec
xorl
imul
jle
mov
mov
mov
or
ret
enter
roll
inc
mov
pop
outsb
stos
sahf
xor
bound
outsl
mov
push
jmp
jo
push
mov
sub
int3
fbld
jno
sub
scas
and
push
cwtl
mov
addl
cmc
das
adc
orl
fdivrl
fdivl
fs
sub
jp
mull
les
mov
stc
mov
mov
call
cmp
xchg
cmpsl
push
dec
test
cmp
pop
ljmp
adc
sub
and
sbb
mov
sarl
testb
fsubrs
pop
mov
das
mov
popa
iret
imul
cmp
adc
loope
adcl
and
in
dec
hlt
mov
jge
nop
inc
mov
inc
ret
xor
outsb
fstpt
mov
or
imul
cmc
push
mov
xchg
push
aam
cld
xor
data16
sub
popa
icebp
sbb
dec
xchg
pop
xchg
cmpxchg
subl
jno
inc
out
push
lahf
and
adc
dec
icebp
jg
outsl
rcrl
mov
das
xchg
fbld
jno
inc
out
push
lahf
and
adc
dec
loop
inc
cmp
das
dec
dec
fisttpl
jl
mov
sahf
rcr
repnz
cmp
pop
imul
add
sub
scas
aas
dec
loop
mov
sub
andl
test
nop
cmp
sub
mov
ljmp
sbb
movsb
or
daa
lret
mulb
jle
jne
jp
xor
and
and
cmp
inc
mov
or
push
negb
adc
xchg
jb
jmp
imul
cmp
ds
mov
mov
ss
and
xchg
jbe
adc
jmp
pop
lret
repnz
aaa
iret
lock
jp
push
adc
popf
jno
pop
jle
fimull
addr16
mov
popf
or
pop
shlb
ret
test
and
subb
jbe
bound
mov
dec
repz
enter
mov
add
jl
mov
add
mov
cmp
inc
or
inc
dec
dec
inc
mov
pop
fstps
xchg
or
imul
scas
cwtl
cmp
pusha
or
and
pop
in
xchg
int
into
push
pop
pop
add
adc
xchg
mov
dec
sahf
mov
or
sbb
sub
lcall
pop
cmp
loope
xor
xor
pusha
jns
mov
pop
dec
and
and
roll
lods
sbb
orb
sbb
push
jecxz
xchg
pop
cmp
stos
out
test
add
push
out
fsts
push
xor
jmp
push
arpl
sbb
sub
mov
fmulp
pop
ret
or
ret
sbb
mov
hlt
pop
leave
jnp
jae
xor
jo
shrb
pop
movsb
dec
fwait
and
mov
sbb
iret
ja
nop
pop
daa
fsubr
xor
lock
xor
pop
aas
add
psubw
fisttpll
iret
dec
push
mov
add
inc
adc
jae
call
addr16
and
je
lret
cmp
pop
in
gs
mov
adc
cmp
sbb
push
xor
fcmovu
xchg
xchg
popa
push
add
pop
dec
jl
rolb
cmc
jbe
mov
mov
mov
dec
ja
xchg
daa
pop
jp
xor
mov
cld
xchg
lds
sub
inc
jl
loop
ljmp
mov
rorl
rorb
pop
jns
in
xor
sbb
jno
jne
test
imul
icebp
adcb
dec
outsl
mov
and
and
call
or
pushf
ficomps
out
push
lahf
sbb
mulb
js
movsl
mov
fimull
int
cwtl
jne
or
sub
test
push
aad
stos
rorb
in
mov
adc
or
pop
xor
fldcw
xchg
dec
lret
mov
popf
xor
gs
je
cltd
cmpsb
mov
cmc
mull
mov
shll
test
sbb
rcll
out
mov
mov
push
andb
mov
fs
fidivs
adc
clc
cmp
push
inc
mov
xchg
pop
mov
or
flds
stc
add
sbb
mov
icebp
dec
aam
enter
mov
xor
mov
loop
sarb
pusha
inc
js
push
repnz
cmp
push
mov
jns
in
dec
icebp
out
jl
cmp
pop
or
pushl
sub
movsl
cmp
add
cmp
mov
cli
lahf
or
jae
jle
or
lcall
push
jns
mov
das
sub
mov
stc
and
adc
adc
cld
cli
cmp
sti
lock
cmpsl
repnz
mov
mulb
sub
js
test
add
xor
add
ret
xor
xchg
add
data16
mov
jg
sahf
adc
jae
insl
mov
divl
jg
sbb
xor
mov
sub
outsb
int3
test
jne
ds
hlt
in
dec
out
pop
mov
ficomps
cltd
cld
cmp
scas
iret
fwait
pop
ljmp
xchg
cmp
adc
aas
mov
mov
dec
out
aad
dec
sti
sub
and
cld
sbb
mov
std
adc
test
push
adc
jne
inc
mov
movsb
adc
rorb
and
pop
lahf
mov
bound
div
clc
in
jp
cmp
insl
pop
sub
pop
ja
adc
cld
xor
je
int3
das
push
call
and
xchg
xor
sbb
out
fimull
mov
movb
push
inc
and
js
inc
cmp
fadd
mov
xor
push
dec
xchg
fcoms
dec
fcmovu
insb
imulb
mov
sbb
push
mov
jle
jae
sarb
push
lret
mov
xor
stc
test
cld
fistps
mov
lahf
jo
xor
or
fdivl
inc
dec
sbb
aas
shll
jl
mov
mov
and
lock
gs
mov
inc
xchg
pop
stos
dec
dec
adc
inc
fisttpll
mov
enter
xchg
sbbb
add
ret
add
ret
push
add
jo
xor
mov
repz
pop
pusha
jge
xor
or
adc
jne
push
xor
push
mov
mov
cmpsl
sub
xchg
push
lock
mov
push
or
and
inc
out
mov
int3
xchg
mov
adc
ret
cwtl
arpl
mov
lret
fs
int3
jmp
pop
or
std
jbe
xchg
fstps
push
shrl
imul
adc
aas
push
leave
lret
cmpsl
mov
cmpl
jmp
or
and
jns
lcall
cmc
xor
ret
lahf
jl
fwait
adc
mov
fcmovb
shrl
jmp
je
and
stos
cmp
cltd
je
pop
xchg
or
jmp
stos
les
shll
inc
push
cli
mov
test
scas
aam
pop
cmpsl
mov
testl
aaa
shrl
pop
pop
mov
push
fimull
inc
fldl
or
lret
fists
loopne
fildll
stc
sub
dec
mov
repz
xchg
rorb
int3
xchg
jo
mov
dec
mov
mov
lret
sub
pop
xchg
stos
xlat
mov
mov
mov
loop
lock
out
div
cli
add
pop
adc
das
jae
je
jmp
addr16
rcl
popf
jbe
xchg
lret
and
dec
xchg
sarl
arpl
movsb
adc
lret
cmc
psraw
test
mov
rcrb
push
arpl
inc
fistps
icebp
mov
ficoms
movsl
push
inc
lds
stos
nop
dec
fwait
gs
push
mov
mov
sbb
pop
sbb
pop
jbe
or
ljmp
pop
mov
or
mov
push
xor
aad
mov
cmp
test
xchg
and
js,pt
sbb
test
sub
push
mov
enter
test
sub
jp
xor
dec
sbb
enter
dec
hlt
xchg
adc
test
push
add
dec
arpl
rcrb
mov
mov
cmp
scas
jecxz
or
xor
ret
inc
add
das
add
dec
inc
leave
mov
bound
or
icebp
jle
fwait
push
imul
es
les
cmpsb
bnd
add
pushf
test
out
cmp
mov
sub
cmp
sbb
mov
xchg
cmp
inc
add
mov
les
adc
in
sub
inc
stc
pusha
xchg
inc
xchg
cmp
mov
inc
jbe
ficoml
sbbb
out
jb
outsb
jmp
jge
push
mov
jl
push
ljmp
test
dec
xchg
adc
pop
fisubrl
xor
add
lods
and
jae
xor
mov
mov
mov
fdiv
call
pusha
jmp
out
ret
mov
pushf
jmp
in
dec
mov
int3
dec
mov
xchg
divl
add
imul
fsubs
aaa
mov
int
push
jmp
and
lret
into
push
adc
dec
repz
sub
adc
pop
sub
cmp
int
inc
rcr
mov
mov
pusha
aad
movsb
xor
jno
das
sbb
arpl
xlat
jno
hlt
sub
sbb
xchg
or
mov
pop
lds
xchg
xor
movsl
xor
lahf
xchg
pop
lahf
test
lds
or
sarl
sbb
lahf
cmpsl
testl
sub
mov
cwtl
lods
pushf
cld
cmpsb
or
cmpsl
mov
inc
add
xchg
xor
inc
fdivrl
int
gs
out
dec
ss
jo
movl
inc
lds
or
enter
push
js
jbe
rcr
xchg
cs
dec
pusha
cltd
xlat
dec
frstor
ret
shll
nop
inc
fs
scas
add
mov
testb
inc
mov
rorl
cmc
jp
call
xchg
outsl
adc
insl
or
xchg
aad
test
addr16
cmp
out
xchg
mov
leave
aam
mov
scas
jb
aam
sbb
loop
shl
mov
pop
testl
sbb
int3
adc
dec
adc
stc
pop
jae
push
ja
and
push
jnp
mov
and
or
mov
lcall
fcmovbe
nop
cld
test
pop
int
pusha
enter
loop
dec
pushf
sahf
cld
sbb
mov
mov
xchg
outsb
mov
adcl
into
lea
cld
and
cmpsl
imul
or
stos
fidivrs
cmpsl
inc
js
xor
dec
repnz
leave
out
sub
jo
ss
outsb
sbb
loope
xor
xor
push
pop
or
adc
xchg
mulb
push
clts
jl
inc
sub
add
push
or
jbe
or
sbb
xor
fimull
cmpsl
ljmp
and
or
sbb
popf
fcomps
scas
xor
xor
scas
push
std
push
ss
scas
out
in
sub
jecxz
adc
and
adc
dec
adc
mov
mov
lds
loop
movsb
data16
jle
push
cmpsl
mov
xlat
gs
leave
sub
dec
pop
add
shr
dec
stc
in
sbb
add
imull
mov
rcl
int3
adc
xchg
outsl
inc
in
scas
cmp
imul
dec
mov
or
aam
xchg
sbb
mov
scas
mov
mov
jl
or
dec
out
sub
dec
jne
scas
pop
fs
daa
push
aad
pop
insb
dec
enter
bound
push
mov
fucomp
out
sbb
lea
cwtl
adc
mov
or
push
xchg
push
std
mul
movsl
adc
mov
hlt
xor
sbb
jns
jmp
dec
js
push
int3
stc
icebp
outsl
and
cwtl
test
mov
lods
pop
add
pop
bnd
inc
pop
fisubl
shlb
or
mov
xor
adc
lcall
mov
lret
cmp
aad
aaa
xor
rcrl
dec
or
sbb
sub
xor
stos
add
and
in
rolb
mov
xor
jl
dec
jae
andl
movsb
aaa
iret
pop
imul
ja
mov
movsb
stos
mov
and
repz
roll
xor
sbb
mov
pushf
lret
call
mov
leave
push
repz
xchg
and
mov
mov
lods
pop
fs
dec
insl
scas
fnsave
and
push
or
mov
sub
loope
jle
in
test
ljmp
jecxz
inc
xor
mov
xchg
ds
shr
sub
int3
lcall
lock
icebp
into
push
xor
mov
mov
lea
cmpb
and
data16
stc
rcll
xlat
mov
xor
lock
mov
add
js
pop
cmp
pop
out
jae
pop
inc
pop
push
cmp
mov
xor
or
sub
add
fsubrp
or
cmc
loop
xor
sarl
je
sub
rcrb
mov
or
dec
js
dec
clc
xor
cmp
dec
mov
loop
xchg
push
sub
mov
xchg
cld
out
loope
xchg
orps
push
inc
fidivl
sahf
sub
xchg
add
xchg
in
dec
dec
fistps
subb
bound
mov
repz
mov
pop
cld
loop
adc
xchg
mov
ror
scas
out
popa
addr16
hlt
xchg
xor
xchg
cmp
pusha
cmp
mov
jge
jae
cmpsl
mov
add
mov
ficoms
aaa
movl
aad
sbb
jp
rcrl
dec
and
movsb
jl
pop
in
aad
xorl
aam
add
pop
pop
mov
pop
dec
jbe
cld
std
fisttpl
mov
leave
add
test
sub
and
cmpsb
fadd
xchg
sbb
pop
repnz
mov
addl
jne
cmp
xor
cld
push
dec
cmp
jae
push
cmp
mov
xchg
jno
adc
mov
sub
adc
out
out
repz
dec
mov
mov
pop
into
pop
lcall
dec
test
or
cmp
push
xchg
mov
add
test
jmp
sub
test
loopne
fcompl
js
jno
dec
and
adc
jmp
mov
xor
add
jl
dec
lock
scas
sub
push
xor
sarl
mov
hlt
or
movsb
and
xchg
mov
and
mov
sub
lret
mov
out
push
or
loopne
inc
mov
mov
scas
test
cld
push
shlb
adc
insl
inc
pop
fwait
call
sbb
jae
adc
adc
inc
insl
push
and
loop
cmp
enter
sub
subb
push
test
xchg
or
or
repz
push
lods
push
rcr
aad
repnz
or
xchg
xlat
cmp
push
pop
mov
add
outsb
inc
jbe
adc
pop
out
or
dec
mov
ss
mov
jbe
ret
icebp
xchg
fxch
push
mov
fnstcw
xlat
jg
jne
bound
outsl
xchg
jno
loopne
xchg
fdivs
push
sti
ljmp
mov
push
or
jle
push
outsl
xlat
pop
or
jae
loope
lret
push
cmc
leave
std
jmp
xor
in
cmpsb
xor
sub
cmovle
ds
lock
xchg
ss
push
jb
xor
mov
out
cmp
or
fbstp
jle
sarb
mov
xchg
jno
sbb
fs
jp
jne
imul
mov
stc
ss
adcb
scas
cli
inc
ja
pop
outsb
mov
popf
sar
mov
outsl
jecxz
pusha
daa
mov
sbb
dec
out
aam
or
sarl
jae
repnz
and
jns
lods
jb
stc
cmpsb
or
test
push
xor
or
rcrl
shll
and
jne
inc
inc
adcb
and
xor
sahf
gs
aad
emms
lret
lds
or
push
sub
and
in
lods
enter
fwait
je
insb
sbb
mov
or
dec
xchg
dec
or
adc
push
and
mov
mov
movsb
into
int
jg
pop
inc
js
pop
lret
flds
stc
adc
iret
and
mov
scas
repz
sbb
push
outsb
jb
mov
ficompl
or
gs
or
pushf
movsl
sub
dec
fiaddl
xchg
jg
sbb
sti
pop
pusha
jg
imul
sbb
push
sub
cltd
popa
xorl
mov
sbbl
rorb
jae
lods
pop
arpl
adc
aas
leave
push
and
rcrl
scas
and
inc
or
cmp
jae
repz
inc
adc
popf
scas
mov
jg
and
das
xor
arpl
xor
push
mov
sub
pop
xchg
mov
xor
stc
fsub
or
loop
jp
inc
mov
push
repz
lock
adc
adc
push
fmulp
jns
loop
or
jbe
xchg
lahf
pop
xchg
les
mov
stc
jnp
fisubrl
mov
or
cwtl
jno
stos
xor
xchg
loopne
and
sbb
mov
adc
xchg
mov
mov
pop
jmp
loope
pop
push
jecxz
pop
xchg
movsb
mov
lock
out
loop
add
insl
xor
bound
push
mov
dec
pop
add
adc
pop
adc
nop
fdivrl
lret
dec
mov
in
jns
mov
mov
xor
mov
push
mov
subb
sar
mov
mov
sbb
mov
xor
mov
inc
mov
xor
push
pop
testl
popa
jp
aad
mov
rcr
outsb
jno
lahf
push
leave
and
mov
test
push
sahf
testl
stos
sbb
test
cmc
inc
xor
decl
xchg
push
jns
jnp
test
sbb
movsb
pop
leave
or
pusha
iret
das
xor
inc
lmsw
xlat
add
sbb
sub
pushf
stos
stos
cltd
jecxz
cwtl
push
adc
push
lret
inc
mov
sbb
xlat
mov
jl
dec
jmp
divl
leave
mov
fstl
xor
mov
jg
pop
sub
jnp
pop
mov
sti
adc
fstl
cmp
push
imul
sti
push
rorb
adc
mov
negb
push
sti
push
fldt
in
jp
fbstp
pop
arpl
out
push
and
test
push
pop
insb
mov
shll
pop
pop
test
mov
and
mov
xchg
adc
frstor
jbe
adcb
cmpsb
shrl
mov
mov
sub
cwtl
cmovp
and
pop
enter
push
fldt
movsb
into
lods
in
add
inc
jb
iret
cwtl
pop
sub
sub
or
mov
cltd
pop
sub
or
popa
lods
sbb
sbb
jbe
lret
cmove
dec
or
inc
xor
add
push
call
xor
mov
out
in
sub
in
pop
inc
mov
jbe
pop
cmp
xchg
adc
and
fbld
inc
push
mov
xchg
jbe
mov
outsl
dec
mov
jl
xchg
lret
daa
and
jge
jle
jg
mov
lea
pushf
clc
lea
int3
jno
fistpl
scas
or
cli
pop
ret
cli
cld
roll
adc
adc
cli
rolb
mov
jp
ss
pushf
shll
sbb
cmpsl
icebp
ror
insl
pop
push
xor
cmp
icebp
jae
ss
loope
std
icebp
push
int3
call
fcmovb
fists
pop
push
sub
inc
fcmovb
scas
cld
pop
adc
cmpsl
lods
xchg
sarb
xchg
aaa
adc
mov
rcll
or
jp
jl
mov
adc
test
lods
or
into
inc
aad
mov
add
test
pushf
and
push
clc
mov
movsb
xor
push
cmc
shll
cmp
mov
mov
mov
mov
in
jecxz
xchg
jmp
in
mov
mov
and
movb
fldenv
mov
mov
mov
lds
mov
inc
ret
mov
addr16
sub
pop
loop
rorl
jmp
pushf
xchg
add
fmuls
add
mov
add
inc
clc
fs
mov
mov
pop
cs
jg
cmpsl
xor
cmp
mov
addr16
hlt
xor
sub
push
dec
adc
xor
fwait
push
inc
test
mov
push
out
fsubrs
pop
mov
loope
or
mov
mov
test
outsl
lods
mov
cmp
imul
clc
xchg
sub
lcall
add
inc
adc
out
bound
fidivl
sbb
les
call
jne
ljmp
sar
jno
pusha
jl
outsl
cmpsb
ret
cvtps2pd
add
movsl
jns
pop
dec
dec
cld
inc
imul
or
pop
and
jno
aam
cmp
jo
adc
lret
jmp
hlt
pushf
in
dec
sbb
inc
mov
les
lret
xlat
or
insb
cltd
mov
and
stc
push
mov
jp
and
imul
mov
movsl
cld
cmpsb
xchg
icebp
lret
rcrl
mov
das
xchg
fbld
jno
inc
out
push
lahf
and
adc
dec
icebp
jg
outsl
rcrl
mov
das
xchg
fbld
jno
inc
out
push
lahf
and
adc
dec
icebp
jg
outsl
rcrl
mov
das
xchg
fbld
jno
inc
out
push
lahf
and
adc
jle
outsl
rcrl
mov
das
push
fbld
fistl
out
es
jle
outsb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
int
fucomp
in
iret
cmpl
dec
rcrl
pop
jge
or
bswap
fucomp
in
iret
lea
mov
outsl
sbb
dec
or
pop
cmp
out
in
iret
lea
mov
dec
push
cmp
gs
jae
jp
js
mov
lahf
sahf
mov
inc
es
inc
mov
add
add
mov
pop
mov
jmp
sbb
sbb
cmpsb
pop
dec
add
loopne
clc
pop
repnz
or
ret
pop
xor
or
mov
inc
push
dec
dec
jg
outsb
xchg
pop
pop
mov
rclb
jb
cli
fwait
lret
lea
aad
dec
orl
cltd
pop
lret
jne
sub
aas
test
ret
xchg
inc
lods
into
mov
jp
mov
pop
aas
int
sub
xor
sbb
and
adc
aaa
imul
sbb
sub
fucomp
in
iret
lea
mov
outsl
insl
pop
jge
or
pop
cmp
xchg
mov
aam
enter
or
pop
jbe
or
aas
push
insl
imul
xchg
cwtl
lods
lret
cld
icebp
ljmp
pop
sbb
push
jp
pop
movsb
mov
cld
mov
lea
dec
jg
outsl
insl
pop
jge
or
pop
cmp
out
in
iret
lea
mov
outsl
insl
pop
jge
or
pop
cmp
push
mov
or
xor
enter
outsl
sub
sub
lods
inc
in
movsb
movsb
cmp
iret
mov
test
push
jecxz
push
lahf
aaa
iret
or
int
aam
xchg
jmp
push
or
and
cmpsl
mov
cmp
fimuls
push
and
mov
and
xchg
clc
push
adc
jno
iret
ret
je
loopne
js
or
add
test
test
adc
jne
sbb
inc
dec
in
mov
insl
mov
mov
mov
sti
xchg
fistps
call
cmp
cmpb
imul
fists
jmp
enter
fldl
scas
imul
mov
push
xchg
fistpl
adc
jns
pop
nop
lret
jne
test
sti
stos
mov
cwtl
hlt
push
xchg
aaa
mov
fdivr
cmpl
adc
fiadds
add
repz
fs
dec
scas
xor
outsb
push
das
cmp
jo
and
xchg
shlb
fstpt
xor
lret
loopne
and
xor
xchg
jae
inc
stos
jge
lea
test
icebp
mov
pushf
rcrb
or
lret
jb
or
mov
sti
fs
push
xchg
mov
mov
cmp
push
cmpsl
in
mov
pop
cwtl
push
outsl
mov
out
or
aad
push
loope
push
in
adc
mov
pop
out
dec
sub
adc
or
jecxz
lock
push
inc
fidivl
call
and
aam
test
int
mov
shrb
jnp
sub
pop
pop
repnz
popa
fcoml
jo
aam
push
fdivrp
jg
loopne
cmp
loop
decl
mov
mov
pushl
stos
or
int
lds
imull
and
pop
xchg
or
decl
mov
out
loop
inc
adc
imul
jle
cmp
lahf
pop
cld
sti
or
les
xlat
mov
sbb
mov
mov
and
pop
addl
fincstp
jg
popa
cwtl
je
aam
xor
shrb
loopne
cmpsl
adc
add
mov
xor
xchg
fadds
incl
push
dec
movl
or
call
lods
push
mov
push
adc
int
les
int
push
leave
pop
add
testl
rcrb
ret
in
ret
xchg
mov
les
shlb
fadd
shr
in
leave
dec
out
cmp
jmp
sbb
mov
push
inc
pop
lret
lcall
xchg
pop
dec
rcll
mov
pop
cmp
pop
cwtl
add
repz
pop
jns
fstps
fdivr
ljmp
fwait
mov
test
pop
cltd
outsl
fmul
into
mov
jmp
into
das
mov
cmc
lods
xlat
or
sbb
adc
es
clc
rorb
and
fisubrl
sub
dec
nop
ret
sbb
in
lods
cmpb
stos
into
cmpsb
shl
je
pusha
mov
cmp
in
jae
lret
sub
lret
pop
dec
orb
enter
loop
ret
push
das
sti
sbb
sahf
ret
movsl
dec
xchg
cld
js
mov
test
lock
push
inc
jmp
testl
in
nop
push
adc
mov
and
cmp
jl
stos
mov
and
mov
inc
xlat
mov
dec
add
jne
jne
adc
int3
fimull
pop
mov
push
bound
sub
arpl
jp
jbe
jle
push
test
mov
mov
out
cld
cmc
stos
ret
cmc
subb
enter
or
adc
or
fidivl
aam
push
lock
push
rcll
and
push
adc
adc
xchg
add
sub
cwtl
xchg
out
adc
push
push
cmp
mov
decb
addr16
icebp
add
jmp
mov
pop
or
dec
push
dec
in
leave
fprem
or
fisttpll
cmp
inc
ja
call
in
shlb
inc
js
sub
roll
push
jg
rcrl
sbb
push
or
sub
rorb
lods
jbe
push
jecxz
dec
add
sub
enter
xchg
dec
mov
push
and
pushf
test
push
scas
cwtl
mov
mov
sbb
mov
jns
dec
xor
mov
test
or
pop
int
call
sub
dec
cmp
sub
std
out
push
push
in
insl
lret
js
call
movsl
add
int3
loop,pt
xchg
or
repnz
test
mov
push
scas
ljmp
mov
movsl
in
aam
enter
mov
jnp
enter
movl
mov
aaa
mov
cmp
js
mov
mov
ljmp
lret
adc
or
fstpt
pusha
sub
cltd
int
aas
bound
loopne
sub
or
or
ljmp
inc
add
pop
jecxz
dec
cmpsb
cwtl
and
add
cmpsb
mov
mov
sarb
jo
fldenv
mov
js
in
pop
pop
in
outsb
ja
pop
jmp
and
pop
pop
das
jge
bnd
gs
mov
xchg
aaa
ret
popl
jecxz
jmp
jp
mov
out
push
cltd
pop
xchg
das
xor
pop
mov
sub
ss
pop
jnp
fldt
dec
fstl
xor
mov
cmpsb
faddl
out
fdivl
andb
rcrl
jns
stos
cmp
insb
popa
mov
insl
lods
jge
adc
popa
and
popa
jmp
pop
lock
ja
mov
pop
mull
or
sub
lcall
sbbl
cmp
and
cltd
cmpsb
pop
cld
push
adc
mov
ja
jns
xlat
adcb
popf
fistl
or
icebp
aaa
popl
jo
mov
fsubrl
mov
inc
notb
xchg
jb
or
jb
push
sub
push
fdivrs
dec
xchg
xlat
sbb
not
jns
dec
test
aam
es
xlat
ret
cmp
scas
ljmp
dec
gs
or
mov
jne
mov
stos
sbb
and
ds
xor
push
xor
insl
inc
add
xchg
mov
push
into
iret
and
or
enter
jp
mov
mov
mov
repnz
or
je
pop
rcrb
inc
sbb
push
cmpsb
std
mov
jp
fistpl
ljmp
arpl
idivb
scas
dec
pop
mov
inc
leave
mov
jnp
jno
imul
cmpl
imul
xor
mov
lcall
rcr
fidivrs
pop
lea
enter
xor
and
add
cmp
push
and
dec
adc
cwtl
and
mov
and
enter
push
ret
inc
mov
lds
xorl
iret
icebp
ret
pusha
mov
cs
subb
cmp
inc
pop
or
lret
je
lret
sbb
jbe
cld
mov
iret
xchg
sti
xchg
out
enter
insb
hlt
push
lods
test
insb
lcall
and
mov
repz
or
jno
lods
ret
ror
mov
xchg
fidivrs
adc
cmpsl
pop
lcall
mov
insl
insl
mov
lcall
cmpsb
lods
mov
sbb
cltd
dec
xlat
mov
jle
ja
or
bound
xor
aad
iret
dec
fisubrs
jb
pusha
sub
xlat
fsubs
leave
sbb
sbb
rcrl
sub
push
inc
call
pop
lcall
jne
jno
fsubp
ljmp
adc
rclb
enter
notb
mov
jnp
jno
mov
cmp
mov
maxps
xchg
pop
iret
out
ss
nop
shr
push
mov
movsb
mov
xchg
push
pop
cmp
lea
sub
aaa
movl
push
sbb
ret
movsb
ss
mov
jbe
xor
add
sarb
jnp
leave
mov
pop
push
addr16
mov
push
jp
inc
pop
jnp
xor
dec
and
and
xor
cmp
movsb
push
dec
loopne
jb
jge
lock
mov
cli
es
jmp
mov
loopne
mov
scas
fs
lea
addl
dec
jp
jp
sub
mov
cmp
aam
fwait
jmp
jmp
imul
dec
pop
pop
idivb
push
cmp
popa
mov
lods
push
xchg
in
loop
sub
dec
subb
push
fildl
add
adc
inc
cli
fstpl
js
add
mov
das
stc
aas
xor
add
pushf
cmp
ljmp
add
push
sub
sbb
sub
rorl
int
pop
lods
fstps
repnz
enter
lcall
mov
lahf
loope
in
push
rcr
jp
and
and
cmp
mov
movsb
push
dec
aas
cs
jecxz
sbb
jg
xor
xor
scas
mov
addl
mov
sbb
les
jbe
stos
outsb
dec
addl
insl
cwtl
xor
sbb
mov
mov
scas
ficompl
in
adc
fbld
jle
scas
and
lret
mov
lret
jb
int
loop
inc
stos
pop
xchg
out
push
rcrb
hlt
push
adc
mov
mov
cmp
jg
scas
or
jmp
stos
jne
inc
test
cmp
fsubr
mov
push
adc
mov
sti
mov
adcb
cs
dec
divl
and
loop
pop
shr
test
dec
scas
mov
pop
jl
imul
arpl
ljmp
push
jae
mov
dec
fnstenv
gs
fidivrl
mov
push
repz
push
push
mov
ds
out
jecxz
out
jbe
cmp
femms
xor
jmp
mov
aad
sbbl
xchg
jbe
pop
and
jb
pop
adc
sub
or
jecxz
jg,pt
xchg
aas
les
aam
and
lods
mov
out
mov
test
push
xor
cmp
lods
andb
ja
mulb
push
mov
mov
xchg
ja
push
jecxz
mov
cmp
scas
rcr
lods
fimull
cmp
nop
inc
jb
vmovupd
das
sub
sbb
loopne
jb
inc
fwait
push
outsl
adc
mov
lods
movsb
cmc
pop
addl
xchg
mov
repz
mov
inc
lahf
cltd
and
mov
add
sbb
sub
test
mov
push
fsubrl
mov
ret
shll
insb
cmp
xor
mov
insb
notl
mov
adc
sbb
ja
inc
add
nop
push
pop
enter
adc
sbbb
push
mov
leave
cmp
test
mov
les
dec
leave
int3
jge
pop
mov
ljmp
rclb
lock
xor
xor
xchg
inc
int
pop
mov
add
push
data16
sub
mov
int3
push
mov
fistpl
fcmovu
gs
ror
data16
xor
test
lds
pop
push
mov
cmpsb
xchg
mov
mov
std
mov
jnp
fwait
dec
loope
and
xchg
loop
jo
test
sub
pop
adc
loop
out
mov
fisubl
mov
xor
add
mov
in
ss
pop
jg
lret
pop
mov
repnz
pop
test
insb
lcall
sbb
int
hlt
push
ja
push
out
xchg
mov
lea
pop
fimull
lea
add
into
and
mov
mov
xchg
cwtl
int3
iret
xlat
cwtl
pop
sbbb
xchg
loop
pop
pop
loopne
ds
ret
mov
mov
jl
mov
out
jb
nop
js
inc
cmp
stc
jbe
rcl
outsl
rep
mov
inc
and
incb
dec
addr16
adc
pushf
cmpsl
test
cmp
scas
fs
in
stos
aam
fstl
cmp
lahf
adc
mov
cwtl
call
ja
sbb
icebp
or
push
and
mov
fcoml
jge
mov
mov
and
xor
and
ljmp
int3
orb
add
repz
push
leave
ds
aaa
stos
lret
jno
aad
cmpsb
mov
enter
cmp
rcr
out
sbb
pop
movsl
xchg
push
fidivrl
sahf
aad
sub
in
mov
add
imul
aam
or
pop
fwait
cmpsl
arpl
push
mov
xchg
test
out
sub
and
popf
das
inc
loope
jno
or
out
pop
jae
inc
xchg
add
xor
loope
pop
add
xor
jbe
test
push
jp
fs
add
call
push
push
out
dec
out
xor
cmp
dec
je
xorl
mov
xchg
sbbb
fucomip
jo
xchg
sbb
out
or
pop
xchg
imul
sub
and
mov
sub
icebp
test
push
jl
dec
pop
repz
xchg
dec
cltd
xor
inc
lods
inc
rcrl
add
jbe
mov
std
xchg
fisttpl
cli
std
fisttpll
dec
mov
cli
xchg
insb
xlat
jle
sbb
test
mov
pop
and
dec
daa
ljmp
rcl
cwtl
roll
out
lahf
or
add
mov
pushf
push
inc
ret
sub
repnz
sbb
xor
xor
cmp
or
jl
scas
push
or
mov
push
clc
cmp
scas
lcall
aad
in
fsubrs
daa
dec
outsl
dec
inc
jo
aam
pop
jo
cltd
clc
xor
fbld
lock
push
test
xchg
int3
aam
imul
jecxz
lods
inc
imul
sub
popa
xor
pop
jp
lods
pop
and
jo
cmpsl
fstps
addr16
lock
repnz
push
lret
test
cmp
insb
push
jmp
jmp
popa
or
mov
adc
test
pop
fwait
mov
pop
into
and
std
mov
clc
add
lret
xor
fldt
fists
in
jns
ret
pop
mov
cmpsb
inc
dec
std
mov
int
popa
jle
or
inc
mov
jl
push
mov
adc
push
jle
ljmp
xor
aas
xor
clc
test
in
lock
push
cmp
or
mov
imul
data16
sub
fadds
xchg
xchg
fadd
xchg
lods
or
and
or
adc
scas
dec
or
dec
repnz
pop
cmp
imul
inc
flds
fs
jle
dec
dec
out
and
scas
popa
inc
pop
es
add
mov
jp
mov
push
or
out
fiadds
cltd
xor
dec
out
fldenv
loopne,pt
int3
push
or
mov
lret
jns
jno
test
jp
add
inc
scas
mov
jge
sbb
pushl
fwait
movsb
dec
xchg
mov
pop
inc
idivb
aas
dec
push
aad
test
inc
push
fcoml
mov
and
in
scas
leave
stos
pop
test
jle
scas
call
shl
xchg
jl
nop
add
int
imul
pop
scas
fdivl
xchg
mov
es
scas
lcall
in
mov
push
cltd
loop
hlt
ret
mov
sub
call
cltd
rcrl
imul
mov
iretw
dec
ljmp
movsb
and
leave
jg
mov
ret
outsb
imul
sub
sub
movsl
mov
in
mov
or
jno
mov
ret
roll
jecxz
adc
lcall
pop
rcll
sbb
daa
loopne
xchg
cmp
jno
test
xchg
mov
into
dec
mov
mov
sti
mov
je
pop
jge
hlt
mov
je
push
rolb
sub
fnstenv
dec
and
hlt
lea
xor
int
out
push
jmp
inc
mov
lods
or
push
mov
sub
fs
sbb
and
mov
loopne
fildl
cwtl
xchg
jb
lods
arpl
testb
or
mov
and
jae
aam
pusha
xchg
pop
sbbl
nop
pop
popa
sbb
cwtl
jle
bound
cli
pop
xor
mov
cwtl
lret
add
jbe
adc
xor
test
lods
cwtl
popa
sbb
sub
nop
xchg
sbb
cs
out
jns
arpl
inc
loop
pop
fmul
inc
or
fsub
xor
mov
lods
cmp
aam
and
mov
jnp
fbld
xchg
icebp
cltd
jns
push
push
fisubs
mov
or
lods
aas
shlb
jecxz
imul
nop
ds
jg
das
inc
jle
cmp
fidivrs
daa
pushf
repz
std
sub
xorb
jge
cmp
cmp
fisubl
hlt
std
popf
inc
js
pop
xor
jno
mov
pop
outsb
jmp
mov
adc
repnz
imul
rcl
adc
test
mov
loopne
mov
int
out
or
std
pop
and
mov
or
mov
ficomps
insl
aam
or
repz
std
lods
jae
mov
pusha
lea
mov
outsl
dec
neg
stc
inc
cmc
xlat
or
rcl
or
lock
pop
insb
dec
pop
or
mov
xlat
std
mov
adc
lock
stos
dec
sub
pop
dec
sti
jno
scas
popf
int3
movups
pushf
pop
pop
mov
sarl
sbb
inc
outsl
icebp
sbb
in
ret
pusha
sbb
jl
addr16
dec
lds
fists
ficoml
fcomps
clc
or
rolb
das
jmp
xor
leave
pop
in
scas
jp
jecxz
adc
xchg
adcl
call
sbb
f2xm1
sbb
es
sub
jbe
imul
rcrb
into
push
faddp
push
mov
cld
adc
cmp
jnp
push
push
stc
call
jne
push
cmp
push
or
inc
ljmp
imull
pushf
dec
mov
movsl
xor
adc
test
or
rclb
xor
mov
push
or
jp
mov
jge
xor
rol
lahf
aaa
iret
cmp
fbld
test
es
cmp
scas
cmpsl
cmpsl
and
jp
fiadds
dec
orl
cltd
inc
hlt
jge
jb
and
jl
inc
add
rorl
cwtl
cmp
movsb
pop
stc
scas
je
enter
aaa
mov
fdivrl
push
ss
jl
ror
sti
pop
out
stos
pop
mov
out
iret
push
inc
and
jbe
fsts
adc
push
xchg
jo
xor
aad
mov
std
cmpsb
xchg
cltd
push
jmp
fs
xor
mov
iret
push
insb
inc
ja
and
mov
mov
fcompl
xor
xchg
sahf
adc
fbld
jo
mov
notb
pop
add
lods
dec
movsb
cmp
jle
stos
fistps
clc
fistpll
pop
arpl
jge
xchg
aaa
xchg
repnz
lea
pop
inc
out
cmpb
add
jmp
mov
int
mov
sbb
and
xlat
or
dec
test
dec
xor
mov
jae
mov
cwtl
shll
inc
xor
mov
fstpl
and
scas
mov
xlat
les
jne
and
mov
lods
mov
insl
int3
mov
mov
mov
incl
push
pop
test
dec
std
xor
push
add
loopne
cmp
ss
mov
addb
or
push
out
xchg
or
aaa
sub
jl
stc
dec
jne
sbb
pop
lods
sbb
mov
pop
sub
pop
std
sbb
sbb
adc
imul
das
stos
test
fwait
lods
xchg
fsubrs
adc
lock
int
pop
cltd
mov
mov
jo
pop
div
dec
fcmovnb
inc
dec
mov
mov
and
mov
xor
push
jp
sub
or
mov
cmpsb
jo
mov
cmpsl
sub
xchg
dec
fsubrp
fsub
inc
out
and
cmp
jbe
sti
movsb
push
arpl
pop
dec
pop
pop
xchg
out
fcompl
lds
arpl
cmp
adc
inc
pop
ja
outsb
mov
mov
and
lods
mov
shrl
in
and
ljmp
cmp
cli
push
fistpll
push
push
mov
xchg
xchg
push
pusha
xchg
notl
push
lcall
mov
aas
push
xchg
cmp
push
dec
fs
in
shll
and
inc
cmpsl
adc
clc
xor
stos
mov
cltd
sbb
shr
out
adc
std
iret
lea
mov
outsl
insl
pop
jge
or
pop
cmp
out
in
iret
lea
mov
outsl
insl
pop
jge
or
pop
cmp
out
in
iret
lea
mov
outsl
insl
pop
jge
or
pop
cmp
out
in
iret
lea
mov
vmaxsd
jp
xchg
rcl
loopne
lock
outsl
mov
dec
scas
repnz
jno
add
add
cs
sub
pop
scas
dec
lahf
outsb
outsb
jg
outsl
mov
dec
scas
aas
fisubrs
into
pop
decb
out
lcall
push
fistps
iret
jg,pn
scas
sahf
lahf
jle
outsb
jg
outsl
mov
dec
mov
das
pop
out
hlt
std
int3
xor
dec
iret
cs
sub
outsb
and
and
adc
imull
sahf
xchg
and
sti
mov
jb
orb
add
mov
rclb
loope
repnz
xor
inc
fldt
and
popa
or
cmp
mov
pop
into
xchg
mov
lcall
bts
dec
rorb
orb
xor
cmp
lcall
icebp
and
movsl
roll
out
mov
hlt
mov
outsl
mov
das
xor
mov
cs
ss
ret
iret
jle
xchg
adcb
gs
in
das
xchg
les
arpl
sub
ds
or
movd
scas
dec
mov
fisubrs
into
pop
out
idiv
push
out
push
fbld
iret
aaa
mov
jle
or
sti
sbb
aas
mov
jnp
or
jbe
imul
cld
jle
add
out
mov
into
and
addr16
fisttpll
insl
mov
adc
or
fildll
xor
and
jae
das
into
pop
decb
out
lcall
out
push
fistpll
iret
cs
jle
outsb
jg
outsl
mov
dec
scas
aas
fisubrs
into
pop
decb
out
lcall
out
push
fistpll
iret
cs
jle
outsb
jg
dec
or
lahf
pusha
mov
hlt
inc
clc
push
mov
mulb
cmp
addr16
push
test
inc
cmp
cmp
pop
repnz
add
cmp
add
and
outsb
mov
xchg
out
push
xchg
jp
shlb
lods
insb
es
mov
cmp
test
loope
lret
xchg
fcoml
mov
mov
mov
dec
or
aad
mov
pop
sub
dec
xchg
push
aaa
push
les
lcall
ljmp
inc
jno
je
push
dec
sub
cltd
push
shlb
aam
jl
mov
mov
movb
test
stos
xchg
mov
bound
fs
inc
or
adc
and
jne
ja
add
jne
add
or
divb
lcall
fmull
je
imul
mov
arpl
cmp
cmp
negl
adc
pop
inc
pusha
mov
or
rolb
push
rcrl
cli
sub
xchg
push
in
xor
ljmp
test
inc
outsl
incl
adc
in
stos
fcmovnbe
push
jecxz
sub
add
mov
icebp
enter
dec
xor
xchg
push
cmp
cmp
push
outsb
stc
in
mov
int3
sub
push
out
ss
or
andl
out
pop
ja
jg
sub
mov
mov
dec
mov
or
mov
push
pop
gs
push
cld
jmp
fisttpl
mov
mov
sub
jl,pt
hlt
mov
mov
cmpb
or
mov
pop
arpl
cs
push
adc
xchg
ret
in
or
lcall
xor
andnps
and
in
push
adcb
push
dec
pop
test
roll
mov
adc
xor
mov
mov
sub
repz
xor
das
cmp
or
out
cmc
fidivl
fs
cli
pop
sbb
mov
pop
mov
incl
test
xor
cmp
test
adcb
push
mov
add
and
mov
mov
clc
popf
jns
cli
xor
ret
ret
ds
jne
stos
fsub
cwtl
jmp
sbb
cwtl
mov
cltd
imull
call
push
cmp
es
scas
aad
lds
mov
mov
cli
jmp
pop
out
cmovl
sub
addb
dec
dec
insl
push
out
mov
and
xchg
in
mov
mov
cmc
fcoms
add
std
push
adc
lret
nop
sub
sbb
pop
inc
out
mov
cli
or
mov
ret
ds
push
pop
lea
ss
js
fdivp
call
nop
iret
sub
cmpsl
adc
icebp
movsl
loope
adc
xor
push
outsl
sub
roll
shll
lret
ljmp
push
sub
mov
faddl
push
clc
jge
sbb
pop
mov
or
xor
inc
push
cmp
scas
mov
push
rcll
inc
mov
incl
pop
sarl
cmp
mov
fildl
in
push
fsub
out
pop
ss
rol
ss
and
sub
mov
add
mov
pop
mov
data16
push
or
movl
inc
pop
or
scas
jmp
out
int
mov
fsub
jmp
mov
lahf
aam
push
jb
fs
outsb
push
in
jp
pop
mov
popa
xor
jl
sub
aaa
cmp
insb
mov
cmp
and
inc
mov
mov
push
xchg
adc
test
inc
ficoms
out
loope
inc
ret
stc
jnp
in
jmp
int3
xchg
test
fsubrl
xchg
mov
sub
push
dec
pop
lock
ret
pop
cltd
dec
jbe
mov
int3
mov
pop
inc
ficomps
jle
push
xchg
jns
fwait
and
fcom
mov
mov
fwait
cs
push
outsb
je
mov
mov
pop
jnp
xchg
mov
loope
imul
rcl
out
scas
fwait
aam
xchg
cmp
xorb
stos
push
repz
ja
out
mov
test
push
push
popf
add
rorl
popa
shll
sub
enter
cmp
nop
lods
dec
pop
out
cmpsb
cmp
fdivl
fldcw
add
jecxz
xor
add
outsl
cmpsb
dec
push
outsb
mov
inc
inc
das
divl
shl
mov
rorb
mov
xchg
dec
and
lea
out
adc
aad
dec
in
fs
push
cmp
xchg
mov
loopne
es
stos
pop
mov
push
inc
sub
cmp
fdivrs
js
je
mov
xor
ret
sarl
jecxz
xor
push
mov
arpl
mov
cmp
in
cmpsb
mov
pop
sub
lock
rcr
push
mov
scas
bound
xchg
ret
sbb
int
leave
add
aas
stc
xor
gs
and
xor
sbb
mov
xchg
stc
xchg
and
rcll
mov
cmp
sbb
idivb
sbb
clc
sub
js
sbb
or
pop
shll
and
xchg
xor
push
mov
insl
mov
js
out
fdivr
cli
or
notl
imull
jne
inc
add
leave
push
sbb
dec
or
lock
sahf
iret
mov
xor
push
rcll
shll
jge
arpl
fwait
xor
rcrl
in
je
mov
int3
cmp
insl
jmp
jne
dec
insl
aad
pop
inc
or
es
mov
std
xchg
icebp
push
sub
xor
shrb
data16
negb
mov
inc
repnz
mov
mov
sar
xor
int
cmp
mov
push
in
imul
faddp
mov
pop
mov
insl
pop
sbb
repz
mov
pop
push
into
mov
arpl
or
or
clc
or
inc
pop
dec
mov
in
cmp
or
sbb
dec
enter
mov
mov
popf
bnd
mov
pop
lds
insl
gs
imul
pop
xor
dec
pushf
xchg
pop
sub
ss
repz
imulb
test
jp
pop
mov
add
jmp
or
clc
test
je
stc
mov
xorb
inc
test
stc
xlat
mov
mov
xchg
jmp
sysenter
imul
pop
std
xor
adc
fnstenv
std
scas
jg
mov
nop
sub
dec
insb
mov
mov
stc
out
and
nop
xchg
dec
xchg
dec
mov
mov
cld
fwait
arpl
jno
sub
out
xchg
and
push
cmp
aas
push
pop
imul
mov
fisttpll
pminub
lock
fcmovbe
shrl
sti
xchg
xor
stos
xchg
in
adc
mov
in
pop
ljmp
push
shll
xchg
shrl
enter
pop
sahf
mov
pop
inc
std
mov
mov
js
outsl
adc
aad
loop
data16
xchg
lock
adc
mov
adc
push
data16
inc
les
mov
repnz
push
subb
or
mov
mov
push
push
movsb
out
outsb
mov
nop
push
xchg
cltd
sub
xchg
ret
pushf
cmp
sarl
inc
mov
pushf
cmpsb
clc
bswap
shl
mov
cmp
mov
inc
test
ljmp
sub
loope
jne
mov
xorb
scas
popf
test
add
test
xor
mov
pop
inc
lahf
aad
cli
and
test
add
mov
dec
jge
adc
jmp
push
mov
mov
movl
or
fldlg2
mov
push
lahf
sub
pusha
outsb
into
cs
into
jl
adc
mov
aas
test
or
not
daa
inc
xchg
ss
mov
aaa
leave
fstpt
in
mov
xor
sti
mov
scas
movsb
cs
orb
cmc
dec
arpl
jge
sbbb
into
cmpsl
cmp
push
push
cmp
leave
mov
sbb
in
jnp
xchg
lret
mov
push
call
fs
frndint
outsb
xchg
aaa
push
sarb
and
dec
xchg
lods
lods
test
insl
push
inc
sti
add
jae
mov
jno
into
pop
jne
pop
sbb
fadds
adc
jg
stos
mov
push
shrb
cmpsb
scas
js
lods
jns
xor
push
pop
pop
dec
imul
bound
mov
aaa
inc
out
shlb
xor
shlb
jae
mov
mov
jno
fwait
cmp
mov
xor
std
leave
rclb
and
mov
xlat
ret
jo
in
pop
ljmp
repnz
xchg
push
out
sub
sahf
das
add
movsl
scas
xchg
test
insl
icebp
add
imul
sbb
jecxz
cmp
mov
movsb
mov
pop
mov
popa
int
xor
out
adcb
rolb
or
add
rorb
out
aaa
xchg
adc
aad
shll
mov
js
mov
jp
jbe
idiv
pop
clc
int
mov
mov
xchg
cmc
fs
mov
jl
pushf
mov
push
pop
push
jb
leave
out
inc
adc
mov
or
imul
stos
into
bound
lods
cwtl
jge
leave
dec
jmp
ja
pop
add
sub
dec
js
lretw
xor
adc
notl
add
dec
pop
inc
das
pop
fisubrs
cltd
rorb
dec
xor
xchg
loopne
pop
ds
pop
push
jns
repz
cs
inc
and
pop
sub
stos
mov
pop
bound
mov
fwait
add
mov
lcall
dec
loope
repnz
cmp
nop
nop
pop
js
mov
shlb
mov
lret
sbb
mov
into
ljmp
cmp
and
cmpsl
lds
adc
mov
jge
add
mov
je
insb
fs
pop
ljmp
pop
aaa
leave
pusha
xchg
cmp
mov
push
mov
das
shrl
in
outsb
pop
icebp
inc
inc
roll
push
xchg
aam
sbb
pusha
and
xchg
int
xor
inc
outsl
dec
mov
xchg
icebp
dec
lock
xor
push
jmp
les
xor
cmp
mov
jecxz
arpl
fdivl
icebp
pop
outsl
test
fdivrs
out
lods
imul
ds
mov
and
inc
in
out
popa
pop
cwtl
cmp
and
mov
and
in
cmc
aaa
pop
leave
ja
and
lret
repnz
dec
adc
mov
jle
mov
into
mov
ss
or
or
dec
call
mov
lcall
dec
mov
adc
mov
ret
adc
repnz
push
sub
add
jp
cltd
jno
adc
sahf
push
push
mov
cmp
dec
add
jle
xorb
stos
adc
enterw
push
test
push
xchg
jecxz
sbb
push
jp
sbb
rcrl
fdivrs
rep
arpl
pusha
inc
mov
lock
ss
dec
jl
xor
jge
xchg
fs
jp
fwait
or
jp
out
cmp
fdivp
lahf
out
rolb
cmp
call
in
call
mov
rol
jnp
jecxz
xchg
loope
pop
and
ljmp
push
or
mov
decb
sti
in
jle
add
push
jo
in
ret
xchg
push
pop
nop
mov
add
sub
dec
subl
cmpsl
xchg
pop
jnp
lods
adc
adc
sbb
fistl
xchg
add
push
cmp
or
pushf
adc
fwait
and
out
inc
fs
fincstp
sahf
cltd
mov
add
mov
and
ja
sub
inc
insl
lods
pop
mov
out
mov
push
ret
xor
cmp
mov
iret
mov
fimuls
loopne
cmpsb
stos
jp
mov
mov
imul
jo
mov
xchg
out
ret
lods
sub
mov
sbb
sub
mov
and
push
int3
imul
inc
vunpcklps
cmc
add
xor
js
jns
addr16
scas
add
add
pop
call
aad
pop
cmc
sbb
pusha
ret
jmp
or
test
scas
xchg
in
rolb
sub
movsb
std
pop
stos
adc
or
and
adc
lret
gs
sbb
imul
pop
leave
ret
insl
mov
adc
shrd
or
mov
and
push
jne
cmp
imul
sbb
rorl
push
mov
sbb
aaa
and
jg
loop
mov
or
xlat
jmp
arpl
js
sarl
mov
xor
push
ss
mov
js
adc
cli
shrb
push
push
fisttpll
neg
fsubl
cmp
aam
add
push
jl
popf
icebp
mov
xchg
out
mov
insb
inc
jp
sub
int3
test
stos
mov
aad
out
mov
hlt
icebp
pop
push
out
dec
jge
and
aas
sbb
xchg
adc
cli
mov
nop
cs
push
mov
push
hlt
shrb
push
scas
adc
lea
in
jge
mov
pop
daa
ja
shl
or
jnp
jmp
mov
mov
jg
jg
sarb
xchg
testb
int
icebp
inc
push
push
lock
das
data16
sti
mov
imul
push
mov
and
pusha
jbe
pop
loopne
mov
mov
cmp
out
inc
lods
dec
mov
mov
add
add
xchg
mov
jmp
test
dec
mov
cmpsb
adc
push
mov
mov
or
bnd
sbb
jl
scas
xchg
or
xor
stc
jb
aad
sub
xor
sub
js
xor
pop
inc
lods
and
dec
sbb
rcl
sbb
je
loopne
push
mov
cmp
mov
and
sbb
adc
dec
addl
lcall
ds
negl
std
cltd
lret
jbe
xchg
or
push
push
and
xchg
leave
adc
inc
push
inc
cs
stos
add
push
push
jb
mov
and
mov
sub
xor
add
and
les
push
adc
das
or
sahf
adc
outsl
push
data16
mov
jbe
add
or
loopne
aaa
inc
mov
pop
test
inc
imul
sbb
mov
aaa
outsl
testl
sbb
pop
imul
lret
push
and
push
xor
adcb
ret
cli
add
and
mov
aam
loopne
inc
xchg
mov
lock
mov
mov
aas
dec
scas
jp
into
mov
cmp
data16
lret
frstor
or
add
and
cmpsl
pop
enter
xor
mov
push
push
push
leave
pop
addl
sbb
rorl
mov
in
lret
mov
pop
inc
xor
negl
xor
and
int
insl
xor
icebp
popf
dec
xor
xchg
test
arpl
hlt
xchg
loop
mov
std
fdivrl
dec
loop
sbb
cmpsb
sbb
add
adc
ret
pop
xor
jne
in
ficoms
in
push
daa
addr16
jge
add
inc
or
sub
test
jg
fisttpll
adc
xchg
clc
push
dec
push
lods
lahf
mov
cwtl
dec
mov
push
gs
adc
call
inc
lods
movsb
push
lock
or
addr16
pop
in
shrb
mov
sub
test
ds
sbb
push
inc
mov
loopne
imul
mov
sahf
mov
push
insb
call
icebp
and
pop
cmp
ljmp
es
stos
mov
xor
das
mov
mov
push
xor
push
add
push
int
in
xor
aam
push
or
dec
lock
cs
ds
ret
rorb
xor
jns
imul
lahf
sbbb
mov
mov
imul
mov
mull
lea
sbb
cmp
mov
jp
call
idiv
adc
mov
jecxz
pop
cmpsl
cli
push
mov
movsb
fstpt
aam
and
in
mov
repnz
ja
xchg
lds
mov
in
shl
sti
repnz
or
jecxz
inc
das
fcoms
sbb
cmp
push
xor
push
cwtl
mov
fistpl
or
fs
mov
inc
cmpsb
add
push
data16
fdivs
mov
mov
insb
jno
push
xor
adc
clc
xor
cli
out
adc
out
jmp
sbb
out
or
jle
loop
sbb
xor
ficoml
fsub
pop
aas
popf
mov
je
push
xor
xchg
or
test
dec
xchg
sbbl
xchg
loop
jg
xchg
lret
xchg
sub
mov
je
scas
xor
insl
cmc
cmp
pushf
sbb
mov
xchg
aam
lcall
push
xor
les
xchg
lds
ret
cmc
inc
adc
ret
lcall
lea
je
sub
sbb
jl
jne
nop
test
xchg
adc
movsb
sahf
test
mov
xor
mov
adc
jns
mov
mov
mov
inc
or
ljmp
pop
rclb
pop
cmp
pop
and
sub
jge
nop
push
in
mov
insl
push
shl
stos
mov
clc
shll
dec
fstl
outsb
outsl
idiv
repnz
adc
push
add
xor
and
imul
push
lret
ret
lods
into
xor
clc
cmp
stc
shl
lods
dec
sbb
ret
jge
dec
xor
pop
sahf
cmpsl
cmp
fdivr
jle
mov
aas
mov
cmp
adc
stos
inc
hlt
inc
aas
repz
push
imul
ret
adcl
or
aad
push
imul
sbb
popa
sub
rcll
jne
cmp
and
loopne
dec
lock
and
test
push
mov
mov
sbb
sub
mov
xorl
xor
fcmovnb
add
mov
dec
mov
insl
xchg
sub
repnz
sub
push
push
fidivrs
or
and
adc
fstpt
mov
pop
rcl
add
iret
jb
cmp
xchg
mov
andl
add
push
sub
inc
out
sarl
lret
mov
sub
cmc
dec
cmp
aas
pop
addr16
mov
rcll
jae
sub
loop
aas
roll
push
aas
push
lea
push
cmp
push
add
dec
sub
xchg
pop
aam
lock
cmp
or
fdiv
push
insb
sub
ret
loop
icebp
bound
subl
lahf
xor
xor
sbb
cmp
mov
pop
stc
dec
jg
sbb
pushf
rcll
mov
sub
adc
loopne
add
push
push
add
roll
aam
ljmp
inc
and
fistpl
icebp
dec
je
int3
shlb
lods
filds
stos
inc
push
xor
loop
sbb
and
cli
lret
mov
cwtl
pop
in
dec
xchg
push
sub
decl
popa
xor
xchg
lea
orl
das
cmp
aad
and
mov
test
cmp
xchg
jno
cmp
push
out
push
negb
cmpl
adc
dec
mov
loop
sti
movb
scas
in
popf
sar
jmp
mov
loop
adc
adc
cmp
push
pop
mov
pushf
push
sub
dec
adc
imul
push
test
xchg
imul
fbld
xchg
push
inc
icebp
sub
push
rcrl
mov
sti
jno
loop
addl
mov
lcall
jne
test
out
std
idiv
fdivp
and
xchg
sub
idivl
and
imul
daa
mov
cmp
fsts
sbb
or
push
pop
adc
out
adc
mov
pop
mov
and
jmp
adc
jl
je
dec
loop
mov
cmp
popf
es
and
je
inc
sub
shll
pop
pushfw
insb
sbb
in
cmp
stc
cli
aad
jl
clc
js
push
xchg
push
push
aad
cmp
mov
lods
push
pop
sbb
mov
shr
xchg
jmp
add
sub
pop
hlt
lods
add
popa
adcb
loop
push
push
pop
add
inc
mov
stc
xchg
dec
push
mov
loope
mov
lods
cmp
dec
scas
aas
fisubrs
into
pop
decb
out
lcall
out
push
fistpll
iret
cs
jle
outsb
jg
outsl
mov
dec
scas
aas
fisubrs
into
pop
decb
out
lcall
out
push
fistpll
iret
cs
jle
outsb
jg
out
mov
mov
das
into
pop
decb
push
fistpll
iret
das
mov
jg
outsb
jg
outsl
mov
dec
scas
aas
fisubrs
into
pop
decb
out
lcall
out
movsb
jne
iret
pop
iret
fbstp
ja
test
inc
movsl
addl
in
adc
and
xchg
gs
test
inc
movsl
aaa
aad
lds
cmc
pop
in
adc
leave
and
xchg
jne
outsb
xchg
jle
dec
mov
movsl
cs
lds
cmc
pop
in
sub
pop
mov
and
lret
adc
gs
xchg
or
push
shll
dec
adc
add
test
jno
sbb
pop
xor
cmpsb
popf
dec
mov
negb
sti
pop
sbb
stc
xchg
in
jb
into
sub
mov
xchg
jne
cltd
mov
add
hlt
andb
mov
xor
mov
pop
jbe
mov
test
aam
aad
sbb
mov
es
loop
cmp
dec
push
cmpsl
adc
daa
or
jns
arpl
cmp
divl
leave
aaa
push
dec
popf
cmpsl
add
xchg
xor
adc
in
punpcklbw
ljmp
repnz
hlt
mov
pusha
xchg
xchg
jle
push
mov
movsl
and
aaa
lds
cmc
push
in
adc
fisubs
lea
and
clc
add
repz
inc
mov
pop
xchg
idivl
insb
movsb
pop
mov
cmp
imul
add
aam
iret
cmp
daa
jmp
lcall
xlat
arpl
sub
add
or
lds
icebp
cmp
das
sarl
daa
lds
cmc
pop
in
adc
and
xchg
jne
gs
test
inc
movsl
aaa
aad
lds
cmc
pop
in
adc
and
xchg
jne
gs
dec
nop
call
adc
adc
or
sarl
fisubl
jnp
pop
filds
negb
out
lds
or
jg
out
sbb
mov
pusha
call
mov
sbb
cli
lock
push
jne
je
ljmp
cmp
andl
pop
jnp
mov
pop
sub
jnp
xlat
cmp
inc
cmpsl
push
xor
leave
adc
pop
or
xor
sub
mov
stos
ret
xchg
pop
pop
inc
adc
dec
or
xor
mov
fcoms
cmpsl
in
gs
sub
and
push
nop
cmp
jge
in
mov
ljmp
or
das
cmp
int3
mov
test
dec
xchg
stos
insl
ljmp
mov
lods
jge
xchg
and
arpl
inc
dec
popl
adc
dec
mov
push
cmp
lcall
xchg
dec
cmp
adc
test
rorb
add
fsubs
dec
jecxz
fwait
xchg
rcrl
test
xchg
lods
fimuls
xor
lahf
sbb
push
ja
rol
outsl
mov
mov
adc
or
cmp
fwait
imul
sub
mov
mov
je
mov
insb
dec
cld
shl
or
sbb
ja
test
cmpsl
movsl
sub
sub
and
jo
pusha
xlat
nop
pop
out
aaa
fcoml
cmp
jnp
packsswb
or
std
loopne
push
pop
cs
int3
jo
imul
sub
mov
addr16
loope
mov
insb
stc
pop
pop
gs
sbb
mov
outsb
rolb
push
rorb
adc
ljmp
mov
dec
movsl
push
insl
jmp
xchg
push
insb
mov
pop
in
popa
sbb
sub
lods
ret
into
and
lcall
iret
pop
arpl
int3
mov
outsl
stc
ret
pop
inc
cltd
and
outsl
aam
inc
xchg
xchg
cmp
popa
out
lods
rcll
adc
adc
mov
add
icebp
dec
inc
test
cmp
in
outsl
add
jae
xor
sbb
inc
dec
and
push
cmp
ljmp
push
insl
push
pusha
jne
into
cmpsl
push
sub
adc
dec
pop
mov
cmp
out
mov
out
sbb
or
lea
out
in
cmp
imul
cmp
adc
xchg
mov
fwait
pop
mov
sbb
sbb
fimuls
adc
sbb
mov
mov
inc
jle
pushw
mov
and
fldcw
lcall
stos
mov
jmp
push
or
clc
in
mov
lea
loopne
test
ja
ror
int3
push
pushf
add
push
push
xor
call
lds
cmp
xor
popa
sub
dec
aaa
insb
inc
jbe
rorb
sahf
inc
xchg
inc
inc
in
xor
jmp
and
clc
pop
les
leave
out
orl
sbb
push
inc
mov
sub
xor
jmp
mov
mov
cltd
popf
and
nop
sbb
sub
mov
sub
adc
jl
mov
movsl
and
cltd
add
loope
xchg
iret
jo
repnz
pusha
jae
adc
dec
or
xor
xor
xor
sar
cli
xor
sub
push
mov
pop
mov
or
xchg
fidivl
sub
and
out
sub
sbb
mov
sub
scas
push
inc
push
scas
inc
popf
leave
nop
push
push
sbb
mov
arpl
xchg
lret
inc
out
decl
mov
int3
mov
cmp
fisttpl
in
push
inc
sbb
mov
mov
in
leave
cmp
push
push
mov
testb
dec
cmp
add
loope
decb
gs
lods
imul
xor
xor
inc
gs
int3
dec
mov
and
mov
sub
cs
arpl
or
das
push
xchg
mov
add
lea
jp
sub
push
sub
lret
xchg
sti
jp
outsb
inc
jg
mov
mov
loope
loopne
aam
or
mov
mov
fidivs
into
ret
jne
pop
mov
mov
inc
cltd
sti
fbld
sub
xchg
adc
xor
xchg
rorl
jl
xchg
data16
rclb
aam
mov
test
lahf
nop
imul
movsl
rorb
test
mov
mov
punpckhwd
push
iret
push
out
xor
push
stos
jno
and
pop
or
mov
cltd
sbb
push
jmp
lods
push
xlat
lods
rcr
mov
pop
pop
dec
movsl
clc
mov
push
mov
outsb
std
xchg
xchg
call
cmpsl
aas
mov
repnz
add
xor
jge
pop
ljmp
push
jmp
push
enter
repz
mov
or
ljmp
movsb
mov
movsb
fwait
pushf
fstpl
fdivl
mov
mov
cs
mov
lods
daa
xchg
stos
clc
xchg
adc
pop
shl
je
adc
inc
inc
xlat
mov
pusha
push
pop
arpl
dec
xor
inc
and
adc
mov
cli
xor
cmp
icebp
adc
ret
decb
adc
xchg
outsl
int3
adc
test
pop
mov
mov
fmull
inc
and
dec
pusha
cs
mov
add
icebp
pop
orl
cmp
out
loop
in
mov
inc
mov
je
sti
std
mov
imul
inc
push
shl
jmp
addr16
aad
adc
xchg
add
or
jl
xchg
cmc
add
je
rorb
inc
imul
add
frstor
dec
cmp
aad
push
ss
in
int3
xchg
scas
pop
xorb
sarb
fdivr
loop
and
aad
sbb
xchg
pop
lods
sbb
xchg
clc
outsl
imul
imul
jne
daa
int3
dec
sahf
in
sub
pushf
push
and
pop
loopne
scas
pop
daa
in
stos
pop
adc
xlat
in
cmp
jmp
aam
sbb
es
xlat
icebp
shl
inc
imul
fwait
leave
shrl
pop
mov
out
jno
ret
xor
inc
jae
aas
insb
push
stc
icebp
pop
jno
not
mov
sub
mov
mov
sub
xchg
add
mov
inc
add
inc
into
stos
sbb
jmp
jno
jnp
mov
dec
inc
jo
mov
cwtl
test
mov
dec
mov
and
xchg
gs
sbb
cmp
mov
sbb
es
iret
or
imul
xchg
inc
loop
mov
adc
push
out
adc
stos
push
popa
stos
sub
jno
stc
pop
pop
gs
mov
divb
jmp
xor
mov
call
jle
sub
in
mov
jae
ljmp
dec
leave
inc
jge
push
jle
out
js
sub
and
pusha
gs
mov
cmp
mov
pop
ficomps
rcrl
or
xlat
into
dec
mov
mov
mov
push
leave
mov
mov
stos
pop
inc
adc
mov
mov
jmp
jge
fiadds
mov
push
popa
inc
or
fwait
dec
lds
dec
clc
lock
aam
push
and
mov
or
mov
mov
aaa
scas
sbb
pop
xor
xor
mov
mov
insl
lret
in
outsb
addr16
pop
and
jb
add
repz
data16
xchg
xchg
lret
sti
dec
imul
inc
movsl
stc
push
insl
xchg
sbb
push
dec
mov
lret
mov
faddl
adc
pop
sub
repnz
sbb
pop
push
faddl
andl
push
clc
fwait
push
lcall
fs
xchg
les
insb
jle
shr
cmp
loope
dec
xchg
pop
jnp
dec
movl
mov
std
cmp
ficompl
mov
in
iret
fsub
popf
sbb
xor
jle
data16
mov
pop
mov
sbb
mov
inc
ret
mov
sarb
cmp
push
movl
imul
adc
fimull
stos
or
inc
popf
push
adc
sahf
inc
lods
unpcklps
lock
jae
pop
movsb
or
stos
test
mov
arpl
out
lcall
pusha
pop
mov
sbb
stos
add
int
sti
ret
jle
int3
les
cli
or
fnstenv
imul
mov
sbb
mov
or
push
jle
repnz
push
inc
imul
enter
push
dec
lret
shrb
std
cmp
dec
inc
jle
iret
push
decb
pop
jnp
add
imul
mov
fcomps
or
pop
mov
iret
lcall
loop
pop
lock
in
popf
mov
loope
jg
mov
repnz
test
call
jge
mov
shlb
jmp
pop
add
scas
jge
lret
jecxz
roll
cmp
and
push
mov
mov
sbb
mov
mov
sub
mov
xlat
add
push
add
push
stos
cmp
xor
jb
or
lods
dec
jg
sti
mov
and
dec
xchg
lret
sub
clc
sub
loopne
outsb
xor
int3
popa
sub
js
jb
out
inc
in
lcall
cmp
sub
jbe
xlat
xchg
into
dec
cmpsb
jnp
fcmovnbe
dec
dec
arpl
add
push
lods
pop
mulb
dec
mov
dec
scas
or
xor
mov
dec
push
mov
jle
movsb
dec
psraw
scas
imul
fimull
sub
and
jecxz
mov
xchg
ret
ljmp
and
xlat
push
mov
push
sti
pop
push
subl
outsb
rclb
jg
dec
dec
and
add
outsb
aas
cs
dec
jmp
subb
xor
inc
insb
mov
lret
fstpl
lcall
pop
pop
push
repnz
out
imul
bound
repz
ja
cli
and
orb
mov
je
sti
sub
sub
mov
or
idivl
add
scas
push
dec
fdivrp
push
mov
test
test
iret
xchg
mov
hlt
mov
in
jne
push
or
add
ss
or
in
aas
mov
cs
jb
dec
lods
push
lds
lock
cmp
xlat
fwait
mov
xor
out
cmp
dec
adc
xlat
fidivs
jo
hlt
adc
dec
mov
loope
shl
fmul
inc
int3
mov
fbld
xchg
lahf
dec
fwait
or
loop
outsb
daa
ss
ror
jmp
inc
jo
test
xchg
nop
scas
shrl
ret
mov
outsl
scas
cli
aas
dec
xchg
shll
or
cli
aad
sbb
incb
insl
cmp
fucom
pop
xchg
inc
pop
push
in
push
call
jp
cmp
out
add
aaa
cmpsl
arpl
into
add
outsb
or
test
daa
adc
cmp
push
push
push
in
clc
dec
aaa
push
sbb
adc
adc
sub
dec
or
sub
icebp
inc
pop
ficompl
jl
sub
lahf
aad
out
outsb
lret
jg
cld
jnp
lahf
jp
mov
fsubl
cmp
movb
sub
push
rcrl
shlb
pop
mov
mov
popa
xor
jbe
popf
insb
add
xor
add
mov
push
cmc
enter
add
test
aaa
mov
inc
shl
fs
mov
hlt
lea
scas
dec
out
pop
jle
jns
out
xchg
dec
push
add
mov
mov
add
dec
mov
mov
mov
sub
jne
repnz
mov
push
lds
cmp
mov
sbb
push
xor
shlb
aaa
inc
sbb
data16
cmc
fildll
loop
xchg
mov
bound
icebp
inc
popa
pop
xor
arpl
mov
dec
inc
jbe
push
sbb
iret
pop
mov
mov
sbb
mov
dec
or
pop
jp
movsb
sbb
xchg
mov
daa
mov
pusha
jae,pt
mov
mov
in
sbb
lret
cwtl
jo
mov
inc
jecxz
mov
ret
fsubl
or
adc
cmp
cs
int
mov
mov
loop
lret
mov
loopne
xchg
xchg
pop
inc
outsb
daa
mov
add
fbstp
mov
push
mov
lods
inc
testb
ljmp
pop
mov
xor
mov
outsb
out
or
fsubrp
out
cmpsb
xlat
push
sbb
loopne
sbb
int3
fcomip
ficomps
mul
cltd
sbb
cmp
daa
or
popa
ja
jge
mov
or
imull
orl
clc
fnstcw
xor
lahf
xchg
and
arpl
mov
mov
sbbl
ds
sub
xor
xor
pushf
mov
dec
sub
sbb
jle
imul
cmc
mov
jge
jns
jne
mov
icebp
cmp
mov
imul
push
push
mov
mov
js
lock
shrl
shll
out
adc
jecxz
pop
push
xor
es
lret
out
out
ret
out
xor
sti
bound
out
dec
mov
inc
or
in
nop
jmp
test
inc
out
mov
mov
and
pop
mov
das
mov
ror
jl
sub
push
sub
lea
cmpsb
mov
fisubl
bswap
loope
mov
pop
pop
and
cmpsb
push
inc
fnsave
sub
jl
lock
lcall
ljmp
lcall
bound
fnstsw
hlt
xchg
movsl
loopne
scas
adc
pop
jo
xor
push
cli
mov
in
idiv
ja
popa
jae
inc
add
mov
dec
cmc
mov
mov
inc
mov
cmp
insl
dec
cmpsb
jmp
adc
dec
sub
dec
int3
cmpb
jle
add
ljmp
xor
adc
test
mov
mov
stos
enter
insl
mov
pop
cmp
cmp
fistl
loopne
jno
cmp
stos
xor
push
or
xchg
and
loopne
cmp
and
call
lods
push
xor
push
aad
sahf
lret
dec
inc
sub
and
adc
push
into
mov
inc
mov
mov
xchg
add
hlt
data16
fwait
add
lods
mov
or
enter
int
jmp
sbb
pushf
add
repz
or
movsb
ret
fdivrl
add
inc
mov
dec
movsl
ret
xor
push
sbb
ret
aas
mov
cmc
scas
pop
and
cmpb
xchg
adc
inc
mov
push
lret
jae
and
mov
mov
andl
xchg
xchg
ficoms
insb
sti
mov
xorl
inc
xor
popf
push
cwtl
or
adc
inc
cmc
shl
sbb
in
push
sbbb
sub
push
cmp
cmpsb
dec
adc
mov
adc
mov
imul
iret
int
sub
xchg
psrld
mov
cmp
dec
sbb
lock
push
sahf
lock
inc
mov
subb
mov
mov
sub
mov
pop
push
lods
lahf
xchg
xchg
pop
daa
lea
mov
in
ss
cltd
sub
jns
fcmovbe
mov
es
inc
add
jl
aaa
and
arpl
je
test
mov
jl
push
pusha
enter
pop
jnp
jmp
jl
inc
jo
mov
aam
lods
stc
pusha
in
mov
cmp
decb
add
insb
pop
jbe
mov
cwtl
cmpl
ds
in
cmpsl
xchg
cmp
sbb
movsl
add
repz
popa
jbe
inc
fisubrl
inc
pop
or
lret
xchg
pop
fistpl
in
aad
xlat
fidivrs
mov
cmp
cmp
ret
loope
imul
out
mov
lods
mov
icebp
sar
aas
jge
mov
jne
xor
jmp
push
xchg
je
loop
es
fsubrs
stc
jg
iret
lret
aaa
lahf
out
mov
nop
into
mov
cmp
cmp
pop
sbb
adc
mov
mov
ret
add
shll
jae
fdivr
addr16
pushw
in
movsb
dec
std
imul
arpl
inc
aad
xor
insl
ljmp
or
cmp
mov
dec
mov
pushf
es
arpl
leave
xchg
mov
sub
sbb
addb
pcmpgtw
push
ret
aam
sbbb
sbbb
pop
sub
pusha
aaa
dec
movsb
pop
shll
and
adc
mov
sti
pop
mov
bound
das
pop
mov
dec
fs
pop
mov
inc
popf
or
das
stos
out
add
rcrl
and
mov
xor
out
mov
stos
movsl
fiadds
mov
repz
and
or
test
lret
jae
sub
mov
dec
dec
adc
mov
sarl
add
mov
popa
sub
mov
sbb
xchg
insl
cs
fs
sbb
pop
jp
cmp
xor
out
mov
mov
xor
add
sub
jns
fs
jb
pop
mov
test
out
jno
or
and
cli
jb
ds
mov
iret
push
fsubrs
pushf
push
pop
mov
std
ja
dec
test
loop
jns
popa
sbb
sub
stos
push
xchg
adc
loope
sub
pop
or
push
sbb
das
mov
jmp
pop
push
dec
imul
roll
push
cltd
mov
decb
sub
hlt
jmp
push
sub
push
mov
jns
movsb
pop
arpl
pop
sbb
stos
mov
or
adc
lret
inc
or
push
mov
loop
dec
mov
or
xor
and
add
movsb
jb
cmpb
ja
jmp
imul
lret
mov
out
mov
testb
add
adc
ja
or
jnp
outsl
push
test
int3
les
pop
mov
js
out
mov
xor
or
out
adc
mov
cmp
cmp
xchg
or
cmp
std
dec
and
addr16
adc
adc
sbb
mov
push
negb
pop
adc
mov
testb
xor
xchg
inc
cmpsb
sbb
pop
dec
fisubrl
lds
xor
push
arpl
subl
dec
dec
push
pop
cltd
fcompl
aas
sbb
ljmp
xor
adc
addr16
sbb
hlt
hlt
negl
mov
jl
out
icebp
mov
enter
aaa
in
xchg
les
outsl
movsl
sbb
jmp
cli
bound
or
or
loope
xchg
inc
sbb
cwtl
and
xchg
cmpsb
jbe
lcall
into
mov
aas
les
repz
test
jnp
push
xchg
sbb
mov
push
movsl
daa
or
or
sahf
dec
lret
rclb
popf
sbb
in
cmc
loop
add
mov
mov
sub
adc
mov
fsubp
mov
shrb
outsl
and
adc
insb
push
clc
mov
hlt
pop
loop
sub
push
cmc
aaa
das
inc
mov
fs
mov
cmp
push
mov
hlt
xor
or
mov
fwait
mov
xor
inc
loop
das
jbe
in
fsts
push
mov
cmp
push
dec
pop
cwtl
push
mov
and
push
cmpsb
int
out
out
filds
fiadds
add
fcomi
repnz
push
lods
jb
jns
shl
stc
mov
mov
inc
mov
cld
test
lahf
test
push
push
push
lret
imul
dec
mov
xchg
fldt
sub
add
xchg
call
out
lret
imul
pop
aam
scas
xchg
fisubs
std
dec
adc
adc
jno
lret
xchg
inc
cmpsl
and
test
in
jmp
cmp
repnz
ret
cmp
xchg
stc
pop
sahf
or
jnp
pop
enter
mov
outsb
shlb
xlat
mov
mov
mov
or
int3
push
in
mov
or
aaa
push
test
imulb
movsl
cmpsb
loopne
bswap
mov
and
sub
sbb
or
dec
nop
roll
jns
push
bound
xor
push
outsl
dec
ret
mov
lds
daa
pop
outsl
jecxz
subb
adc
mov
push
cwtl
int3
pop
aaa
or
mov
mov
sub
sbb
das
outsl
mov
dec
mov
xor
imul
dec
push
jmp
inc
mov
cmp
adc
hlt
xor
pop
mov
adc
mov
andl
paddq
push
mov
jne
and
mov
dec
sahf
and
test
inc
movsl
aaa
aad
lds
cmc
pop
in
adc
and
xchg
jne
gs
test
inc
movsl
aaa
aad
lds
cmc
pop
in
adc
and
xchg
jne
gs
test
inc
movsb
aaa
aad
lds
hlt
pop
in
adc
and
xchg
jne
gs
test
inc
mov
xchg
jne
sbb
ljmp
rcr
mov
mov
sahf
add
push
mov
bound
mov
mov
outsb
bnd
mov
sahf
add
push
fiadds
jb
sbb
xchg
push
subb
mov
outsb
bnd
mov
sahf
add
push
fiadds
jb
bound
xchg
cmp
ret
dec
xchg
xchg
cli
popa
decl
pop
xlat
and
jb
inc
add
jno
mull
cmp
ret
xchg
aad
xchg
mov
push
outsb
inc
cmpsl
into
push
faddp
adc
push
shlb
pop
or
repnz
mov
adc
pinsrw
fwait
pop
or
and
mov
jmp
repnz
aad
in
ja
pop
mov
es
sbb
inc
mov
pushf
insl
xchg
jge
roll
pop
cmp
clc
cmc
jecxz
sbb
bound
xor
dec
adc
jne
push
into
mov
sbb
sbb
xchg
data16
xchg
and
in
push
mov
out
daa
dec
sbbl
dec
push
mov
rorb
testl
mov
inc
out
jb
bound
xchg
push
subb
mov
outsb
bnd
jmp
std
inc
call
aaa
mov
xorl
sbbl
enter
or
ljmp
ds
push
stos
sbb
sti
push
loope
mov
movsb
adc
jmp
inc
fildl
jl
inc
out
jb
bound
xchg
push
subb
mov
outsb
bnd
mov
sahf
add
push
fiadds
jb
bound
xchg
push
subb
mov
outsb
bnd
mov
ljmp
ffreep
loopne
es
mov
jnp
sbb
repnz
addr16
inc
push
dec
iret
mov
xchg
mov
nop
jnp
or
out
int3
dec
lea
cmp
xchg
push
xchg
cmp
cmpsb
xor
js
cmp
sbb
roll
scas
aam
xor
cmc
jecxz
fwait
adc
roll
sbb
aam
mov
mov
mov
xchg
and
mov
xor
subl
dec
call
pop
mov
xor
and
xchg
fmul
hlt
jbe
inc
pushf
xchg
jne
ficomps
testl
leave
sbb
repnz
hlt
jle
xchg
pusha
divl
orl
je
enter
jno
aaa
repz
sahf
push
sbb
lret
jmp
xorb
lahf
scas
mov
mov
outsb
pop
cltd
pop
iret
gs
xchg
in
test
mov
pusha
push
scas
sti
subl
jbe
dec
fisubl
jo
scas
loope
roll
rclb
daa
inc
push
mov
and
fdivrs
mov
fdivrs
in
data16
cmp
nop
fmuls
push
mov
cmp
aas
adc
adc
pushf
cmp
jnp
jge
mov
stos
mov
insl
push
iret
lods
xchg
dec
mov
cmp
test
and
lcall
xchg
sbbb
jnp
sbb
fistpll
in
and
lahf
jne
jnp
cmp
imul
adc
cmpsl
lds
fld
pop
outsb
dec
sbb
push
cld
jmp
stc
and
mov
adc
adc
xchg
push
lea
in
je
inc
iret
pusha
adc
inc
lcall
sar
clc
or
push
cmc
arpl
and
js
fcomi
jp
ficompl
add
rcrl
or
out
mov
jns
jo
mov
cmpsb
cmp
push
jns
out
lds
insl
leave
lods
mov
push
cmpsb
inc
jo
jle
mov
loope
iret
lock
loopne
adc
add
mov
fucomi
jl
mov
inc
mov
dec
xchg
jne
popl
or
mov
sbb
ss
or
fwait
pop
pop
popa
movsb
sahf
push
stos
xchg
shlb
sbb
in
mov
insl
lret
mov
pop
or
xchg
aad
popa
push
aas
lahf
fildll
mov
out
imul
lcall
lods
or
dec
andb
adc
jg
jmp
pop
jp
sti
fwait
cmc
mov
jg
pop
pop
push
pop
scas
mov
stos
push
insb
lods
sub
fistpl
fnstenv
mov
pop
hlt
out
dec
jg
or
push
mov
xchg
jecxz
sbb
sbb
add
mov
mov
in
or
adc
mov
flds
mov
xor
sbb
mov
and
out
mov
lahf
add
ret
pop
aas
into
dec
scas
mov
pop
push
push
fistl
xchg
aas
mov
mov
movswl
fildl
push
and
and
fsts
cli
cli
dec
add
out
fs
ds
setno
nop
arpl
inc
inc
lret
ja
decl
scas
mov
test
mov
mov
sbbl
mov
popf
add
mov
int3
bound
xchg
mov
inc
andb
lods
pop
paddw
test
js
xor
or
inc
push
test
push
xor
mov
repnz
ss
ficoml
lods
cs
sti
push
jge
lock
inc
pop
cmp
out
mov
push
fcmovnb
sbb
mov
xor
xchg
xchg
push
sub
sub
cli
popf
jle
mov
aaa
movsl
sub
sub
aaa
ljmp
ror
insl
add
xchg
xor
addr16
out
xchg
sub
lahf
lods
pop
fsubrl
dec
adcb
push
push
jbe
jne
cmp
mov
cli
push
pop
sub
popf
xor
js
clc
add
adc
xorb
adc
jb
fadd
js
outsb
rcrl
pushf
lret
pop
test
loopne
xor
sbb
xchg
xlat
sbb
cmp
mov
js
jae
int3
popf
mov
cld
pop
mov
dec
xor
cmc
mov
rcll
dec
or
scas
xor
pop
adc
and
test
jp
xchg
out
pop
pop
mov
lret
push
fisubs
test
imul
push
insb
or
push
out
fdivr
inc
dec
cmpsb
cmpb
sarb
in
xchg
mov
pop
movsl
rclb
arpl
jmp
xchg
cmpsl
mov
pop
mov
add
or
mov
insb
out
sub
sbb
hlt
xor
or
rcl
clc
jle
pop
cmp
or
dec
dec
imul
push
gs
push
out
or
add
mov
repz
push
cltd
or
push
pusha
aas
shll
andl
test
negl
jnp
pop
ljmp
adc
mov
sub
int
daa
sbb
js
xchg
shl
jno
pop
mov
jmp
arpl
testb
mov
dec
sbb
jecxz
xchg
pop
xor
jg
mov
jmp
leave
mov
repz
mov
leave
pop
dec
push
repz
push
stc
lea
and
jo
test
dec
loope
daa
rorb
stos
dec
in
shlb
push
scas
jbe
rcrb
and
clc
jg
mov
test
repz
mov
mov
add
inc
sbb
gs
rcl
scas
jb
sbb
lods
cmp
adc
testl
push
pusha
pop
fstpl
sbb
adc
jle
adc
aam
inc
cmpsb
or
lods
push
gs
pop
enter
push
repz
and
mov
fidivl
popf
sbb
cmp
lret
or
add
mov
imul
cmp
dec
inc
xlat
mov
cmp
sbbl
mov
fwait
scas
xchg
aad
sub
int3
dec
pop
xor
push
jne
push
inc
aam
stos
mov
pop
push
pushf
mov
cld
pop
loope
sub
adc
jbe
mov
push
and
xchg
leave
cli
lret
pop
xchg
arpl
arpl
out
add
or
sti
cmpsb
push
mov
adc
sub
insb
gs
mov
sub
packsswb
das
pop
orb
pop
sub
ja
or
push
test
movups
jle
iret
xor
mov
pop
decb
sbb
push
pushf
lods
sbb
jae
or
insb
inc
les
paddw
lds
adc
dec
pop
stos
cmp
ds
lea
repz
cmp
mov
mov
or
jo
mov
xor
push
out
pop
lahf
fisubrl
cmp
push
add
mov
sar
xchg
jae
sub
fucomip
cmpsl
inc
shrb
inc
push
sbb
loopne
xchg
popl
loopne
mov
les
psubusb
insb
xor
jg
das
push
inc
mov
dec
stos
lahf
lea
fisubrs
int
cwtl
dec
sub
add
add
sub
enter
daa
sub
cmp
lock
fsubr
stc
xor
inc
mov
loope
mov
mov
test
jo
outsb
lret
jl
ret
xor
into
mull
cwtl
shlb
jns
dec
test
and
cli
and
lcall
movl
and
in
mov
pusha
push
sub
lods
das
cmp
imul
mov
or
sub
jbe
clc
jl
push
outsb
adc
dec
sbb
adc
and
mov
test
jge
mov
lds
clc
lock
push
cmp
xchg
out
cmp
jbe
cmp
and
fincstp
insb
repz
mov
push
add
shl
adc
cwtl
inc
inc
dec
or
stc
inc
push
fidivl
popf
pop
cli
adcl
cmpsb
cld
sbb
jg
adc
retw
cmpsl
push
imul
iret
fbld
mov
push
movsb
incl
push
or
cmp
sub
sbb
xor
push
rolb
jb
push
jmp
and
push
xchg
sub
lods
or
rcrl
out
outsl
dec
div
pop
jns,pt
not
mov
cmp
gs
lock
je
aas
loopne
sbb
cli
cmp
in
loope
in
arpl
push
xchg
inc
sub
push
mov
jge
aaa
inc
andl
ss
js
mov
fadd
cmpsb
lret
adc
sbb
divl
pop
xchg
call
dec
mov
inc
nop
inc
stos
cld
cmp
sbb
jns
pop
or
xchg
dec
mov
or
test
pop
out
paddsw
mulb
adc
cmp
mov
stc
les
dec
ret
jnp
and
jnp
stos
and
sbb
push
popa
sbb
push
xchg
adc
mov
dec
cmpsl
and
or
fistpll
mov
sbb
pop
les
sub
cmp
jmp
adcl
adc
pop
mov
repnz
adc
sbb
leave
xchg
pop
xchg
xchg
pop
xchg
sbbl
out
into
std
xchg
insb
inc
icebp
mov
mov
inc
sub
into
js
mov
test
jp
or
lock
push
or
mov
popf
add
cmp
fiadds
andl
loopne
pop
cmpsb
lods
mov
daa
mov
stos
adc
mov
ss
fstpt
lea
cmpsb
repnz
xor
es
mov
clc
or
nopl
add
inc
push
or
add
or
xchg
fs
jle
lret
sub
stc
pop
inc
pop
stos
push
cmp
scas
sub
push
dec
or
xor
daa
cli
mov
push
mov
out
repnz
lret
lret
xchg
iret
mov
pop
popa
pop
xchg
scas
xor
mov
pop
xchg
xchg
mov
rep
or
stc
inc
cmp
popa
cmp
aas
sub
or
subl
repnz
pusha
dec
add
xchg
ss
cli
icebp
lea
repz
dec
cmc
or
xor
lret
addr16
sub
test
aas
repnz
dec
mov
out
ss
fistl
push
das
cmc
dec
loop
movsl
xor
jmp
add
add
fstpt
lahf
popa
repnz
xchg
xchg
leave
push
push
or
in
sub
mov
mul
cltd
aaa
ds
inc
mov
xchg
or
arpl
pusha
pop
fistpl
movl
popa
test
pop
jmp
test
addr16
icebp
movsl
mov
ljmp
ret
daa
repnz
push
push
jns
xor
or
xchg
stos
pop
inc
sbb
xchg
push
push
jae
mov
pop
pop
xchg
push
sbb
ljmp
cmpsb
flds
out
arpl
sbb
xchg
gs
int3
cmpl
add
std
repnz
addr16
and
fnstcw
pop
aam
xor
mov
dec
or
inc
bswap
xchg
fs
ds
cli
mov
sarl
xlat
ss
int3
push
cmp
and
bound
or
xor
push
or
xchg
into
repnz
lods
popf
cs
xchg
xor
dec
lcall
push
into
lock
jb
mov
mov
enter
mov
sar
xlat
xchg
dec
divb
jne
or
xor
ret
fsubp
inc
xor
xor
mov
cmp
or
or
xchg
jg
je
incb
jge
xlat
pop
xchg
mov
mov
pushf
or
jbe
pop
ret
bound
outsb
sbbl
arpl
clc
mulb
mull
pop
push
dec
push
test
add
ds
mov
je
aaa
jmp
cmp
sbb
xchg
xchg
sti
insl
adc
and
fwait
addb
cmc
outsl
jmp
shlb
or
mov
xchg
mov
fidivrs
test
jg
mov
cmc
sbb
mov
push
cmp
stos
mov
push
dec
or
ret
addr16
push
mov
fwait
dec
sub
std
adcl
dec
cmpsb
sub
movsb
lock
sbb
and
fwait
mov
xchg
ret
lcall
fs
out
sub
xchg
repz
sbb
jns
aam
lret
jno
shrb
test
lock
cmp
sub
mov
xchg
shrl
pop
cmp
lcall
ds
lcall
and
cmp
dec
xor
mov
ljmp
notb
mov
xorb
pop
mov
pop
mov
adc
sbb
push
negb
fildll
cmpl
out
out
imul
loope
outsl
add
aam
or
xchg
cwtl
aaa
mov
mov
gs
mov
add
subb
pop
cmp
outsb
mov
add
orl
push
push
daa
sub
repz
mov
pusha
push
fs
dec
cmp
inc
jecxz
xchg
mov
sahf
or
pushf
int
xor
mov
mov
jo
or
shr
out
inc
mov
lret
sub
test
xor
pushf
mov
jb
or
inc
ljmp
or
sub
int
or
push
fbstp
xchg
gs
and
pop
pop
or
lods
sbb
mov
push
int3
hlt
jle
push
ret
int
jmp
inc
daa
xchg
aad
push
mov
xchg
mov
out
dec
es
imul
fmull
mov
push
sahf
inc
imul
aam
popl
ds
clc
les
lret
std
jae
ret
stos
fmul
pop
pop
dec
faddl
mov
mov
fisubrs
and
or
mov
cmp
mov
jecxz
stc
inc
testb
fsubs
mov
not
in
xor
cmpsb
mov
pop
loope
rol
sbb
aam
test
loop
movsb
xchg
add
or
and
mov
cmp
inc
subl
aam
lret
rcll
sbb
jge
jno
test
or
mov
xchg
xor
cs
sarl
push
sub
addr16
xchg
popa
and
stos
cmp
call
in
push
cmp
adc
shlb
cld
adc
lahf
pop
cmpl
mov
das
pop
xor
adc
dec
jnp
dec
mov
sbb
jb
jp
mov
xlat
pop
add
outsl
mov
or
sarb
fwait
xor
out
jnp
popf
popf
nop
das
fs
mov
mov
scas
and
mov
add
aas
lds
decl
js
jl
jmp
shl
sahf
arpl
mov
bound
push
push
lods
je
decl
add
cmc
leave
push
ljmp
sub
lds
das
and
cmp
mov
jecxz
mov
adc
cmp
js
pushf
loop
lock
mov
sub
and
pop
orl
mov
pop
out
or
lods
bound
rolb
sbb
popf
sbb
mov
dec
std
xlat
loopne
adc
or
testb
jge
test
jecxz
mov
and
push
loop
mov
addr16
sbb
jmp
mov
mov
dec
dec
mov
fdivr
add
daa
or
fidivs
mov
and
shrb
mov
inc
iret
jp
push
add
sub
lods
js
xchg
pop
insb
out
les
mov
lcall
push
shlb
add
pop
lock
fsubs
ret
sbb
adcb
filds
sbbb
mov
les
mov
imul
xor
fbld
mov
ljmp
jno
enter
inc
adc
repz
dec
repz
cmc
adc
test
aas
xchg
push
aam
sbb
jl
inc
cmp
adc
test
arpl
daa
imul
sub
aas
sub
mov
inc
popa
out
cmp
lea
push
mov
dec
cmc
ljmp
rorb
test
mov
push
cli
sub
dec
cmpsb
daa
sbb
in
movsb
movsb
sbb
cld
sub
cmp
cmc
push
inc
into
xchg
lcall
push
cmp
nop
out
mov
pushf
sbb
into
xchg
jge
jg
push
cmc
iret
cld
xor
mov
cmp
std
push
mov
or
pop
pop
cld
outsb
jmp
and
push
add
in
sahf
movsb
push
push
lock
nop
cli
add
mov
sbb
add
add
sub
adc
es
bound
insb
fdivr
cmp
popf
shll
and
rclb
out
mov
lods
iret
pop
fidivs
push
push
cmp
mov
jl
cmc
pcmpeqd
and
jne
and
xchg
ja
int3
into
push
jns
test
and
iret
pop
adc
cmp
lret
test
out
stos
xchg
xor
das
mov
mov
xlat
push
cmp
push
xor
jecxz
push
pop
xchg
mov
lret
jb
add
shlb
inc
lds
xlat
push
sub
add
fdivs
or
and
fs
cltd
mov
pushf
lcall
cmc
cld
or
pop
roll
inc
mov
js
fwait
xor
pop
xor
mov
daa
mov
sbb
mov
sbb
dec
pop
call
pop
lods
pop
cld
xor
fs
lods
jmp
add
cmp
xor
stos
call
adc
and
popf
out
in
iret
sbb
fidivrs
pop
adc
lcall
add
xlat
jg
push
sub
ja
out
mov
inc
stc
mov
hlt
in
push
ja
add
add
incb
push
and
and
fwait
xor
repz
cmc
pop
int
push
jnp
mov
lods
add
cmp
inc
jmp
xchg
fwait
or
or
in
rorl
popf
sbb
movsl
jo
mov
lods
lods
mov
mov
mov
arpl
sahf
xor
adc
cmp
add
add
mov
fistpl
dec
inc
aas
xorl
daa
repz
daa
cld
lea
push
fimuls
mov
xchg
nop
sub
outsb
adc
sti
aad
push
out
ret
cmp
xchg
les
dec
out
mov
pop
mov
pop
push
xor
je
popf
lret
xchg
ficoms
mov
mov
xor
pusha
xor
mov
jle
adc
arpl
cmp
jne
adc
jge
xchg
sub
add
mul
out
mull
outsl
jecxz
lock
push
popa
sub
sub
jmp
lods
push
fstps
sbb
movb
imul
pop
mov
out
cmp
mov
cmpl
pop
push
adc
add
dec
jns
iret
fisubl
in
repz
mov
sahf
pop
mov
sub
mov
and
imul
cltd
mov
insb
inc
sub
xchg
iret
fld
sbb
sub
inc
push
sub
popa
shr
fs
cmp
iret
stc
push
lret
mov
lahf
aad
dec
dec
xor
int
xchg
incb
lahf
and
add
jne
sbb
testl
inc
stos
pop
stos
cld
fistl
out
std
sub
dec
fs
cmp
xor
xor
imul
sbb
cmpsb
pusha
xor
clc
sub
adc
stos
or
jg
push
aam
xor
lret
fwait
loopne
repnz
dec
xchg
outsb
pop
jns
leave
popa
xchg
cwtl
jg
inc
jnp
in
or
xorl
inc
xorl
add
add
fdivs
loopne
pop
lea
std
into
add
add
in
call
in
std
and
push
jbe
or
les
into
gs
xchg
push
jns
xor
pop
push
jp
jmp
jecxz
scas
rcr
adc
inc
popf
dec
lods
imulb
in
add
lahf
inc
nop
pop
shlb
pop
jb
repnz
aam
and
shrl
hlt
pop
stos
xsha1
cmpsb
mov
ret
sub
cli
cld
adc
lret
test
pop
pop
dec
sti
cmc
jl
or
mov
pushf
loop
mov
loop,pt
jnp
shlb
mov
adc
in
mov
cld
xor
testl
inc
push
ficompl
ljmp
adc
icebp
mov
mov
pop
mov
fwait
jno
shrl
push
mov
call
pop
subb
shl
push
pusha
popa
pop
mov
fisttpll
jmp
cmpsl
gs
jne
cmp
jge
pop
push
nop
dec
jmp
ds
dec
sahf
sbb
jle
lret
adc
aam
test
dec
repz
je
ror
add
loopne
push
sbb
add
push
fiadds
jb
bound
xchg
push
subb
mov
outsb
bnd
mov
sahf
add
push
fiadds
jb
bound
xchg
push
subb
mov
outsb
bnd
mov
sahf
add
push
filds
jb
bound
xchg
push
subb
aas
mov
outsl
bnd
mov
sahf
add
push
fiadds
jb
xchg
loope
test
cmp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cs
add
xor
movsb
sub
xor
mov
repz
mov
movsb
cmpsb
aam
movb
jae
inc
xor
and
push
xor
add
mov
rep
in
mov
movsb
mov
mov
in
xchg
add
pushf
xchg
xor
js
lcall
movsl
jmp
xlat
addl
in
adc
push
inc
and
test
jbe
pop
push
lock
jbe
in
sub
dec
mov
mov
jnp
ficompl
sub
es
aam
fdivrl
mov
aad
pop
add
push
imul
rorl
stos
pop
inc
jl
shrb
out
mov
cmp
les
int3
hlt
es
adc
and
pushf
and
add
mov
pop
cs
cmp
add
mov
inc
jl
fs
mov
movsb
push
xchg
sbb
aam
mov
scas
adc
movl
dec
sarl
hlt
andl
jae
inc
mov
and
add
popa
inc
sbb
cmp
hlt
testl
dec
and
adc
mov
xchg
shlb
divl
sti
inc
add
cwtl
add
push
ja
sbb
fcomi
mov
cmpsb
sarl
mov
xchg
rorb
xor
data16
inc
add
jecxz
repz
mov
movsb
mov
hlt
xchg
in
adc
add
xor
and
push
xor
adc
repz
mov
movsb
mov
hlt
xchg
in
adc
shr
xchg
or
outsl
int
arpl
ja
mov
rorb
aaa
mov
aam
pusha
and
jb
and
jmp
les
sub
rclb
imulb
rcll
rcrb
ljmp
nop
shll
xchg
aad
es
rcll
mov
cli
push
shlb
jmp
insl
fbstp
fstl
fwait
xor
mov
imul
lret
shll
imul
cmp
sahf
cmp
mov
cmovo
jge
mov
ret
cmp
xchg
mov
fdivp
cmpsb
stc
sub
sarl
xchg
inc
xchg
clc
mov
xor
mov
aaa
pusha
xor
mov
xor
inc
sub
cmc
mov
shl
pop
add
std
mov
out
aam
je
mov
inc
xor
insb
cli
ljmp
lea
es
mov
pop
pop
inc
jp
iret
cld
sub
fnstenv
or
inc
shlb
mov
sbb
mov
xchg
dec
or
add
pushf
test
or
and
push
or
roll
stc
rcll
test
clc
data16
fisttpl
xlat
inc
push
add
pop
add
mov
jg
mov
repz
cmpsb
daa
cmp
adc
shr
loop
push
aaa
out
gs
fsubrl
outsl
daa
jb
and
lods
sub
adc
mov
test
add
jb
push
jmp
mov
push
pop
sahf
sub
out
loop
jae
je
addr16
dec
mov
or
data16
aas
xchg
and
sub
cmc
and
leavew
dec
pop
clc
mov
xchg
test
mov
int
jg
jb
add
pop
insl
dec
cmc
sbb
sbb
mov
fsubrp
cmpsb
rcrb
sbb
dec
pop
mov
sub
cmp
pop
xor
mov
subl
shll
sub
xchg
pusha
adc
fsubs
outsl
inc
and
push
jns
cmp
nop
cmp
mov
pop
mov
outsl
push
push
mov
outsl
add
or
lock
push
mov
pop
into
imul
cwtl
mov
sahf
int3
fbld
ret
outsl
push
push
mov
cld
jno
adc
push
popa
pop
dec
popa
in
sub
ljmp
xor
lods
ss
adc
or
call
sbb
out
inc
imul
icebp
cltd
push
push
cmp
cltd
sahf
iret
pop
out
repz
out
or
jg
jecxz
xor
mov
imul
cmp
notb
bound
or
fsubl
inc
cltd
mov
cld
gs
dec
jle
ljmp
subl
subb
addr16
mov
mov
adc
jnp
lahf
push
mov
std
push
pop
push
or
test
dec
lret
in
sub
enter
arpl
push
cltd
fstpl
inc
aam
mov
nop
push
jae
and
push
ds
ror
push
or
adc
sbb
js
cmp
movsl
dec
sti
mov
into
popa
pop
jge
sbb
and
loopne
aad
mov
and
mov
out
aas
push
xor
shl
pop
xchg
xor
cmpsb
cltd
les
fdivs
stos
xchg
aaa
sub
push
in
xchg
sbb
and
inc
mov
test
sub
pusha
and
fwait
cmp
add
sub
fiaddl
jns
mov
cmp
ss
pop
sbb
ja
mov
lcall
das
stos
pop
jo
ja
and
add
sbb
add
sub
cmp
pop
inc
cmpsb
loopne
rcrb
jbe
xor
in
cltd
es
leave
cld
mov
stos
sti
fcmovu
pusha
pop
sbb
adc
cmp
sbb
clc
rol
mov
mov
xchg
dec
cmpl
popa
clc
divl
hlt
loope
push
test
stos
lods
je
cli
dec
ds
dec
int
mov
rorb
popa
jo
add
and
outsb
sar
and
outsl
ja
or
inc
cmp
subl
add
pop
push
mov
fstps
je
pop
aaa
paddusb
pop
aam
or
movsb
rorl
cmc
stos
fdivrs
mov
repnz
inc
inc
inc
gs
add
xor
sbb
jg
rorl
push
cmc
pop
sbb
pushf
push
call
jnp
cltd
roll
pop
cli
pusha
out
outsb
jl
inc
loope
xor
mov
inc
adc
out
into
push
mov
sbb
xorb
call
inc
pop
repnz
outsl
push
cwtl
inc
jae
in
stos
jno
add
lods
out
and
mov
sub
or
shrb
mov
fcmovnb
xchg
xchg
xchg
sub
sti
faddl
aad
dec
pop
out
pop
xchg
mov
out
sub
popf
enter
dec
mov
ljmp
mov
sub
mov
gs
mov
sub
subl
push
ds
mov
inc
jae
push
packssdw
inc
int
jg
mov
inc
push
cwtl
sub
cmp
mov
pushf
cmpsb
jle
rorl
int3
incb
mov
mov
cwtl
inc
jns
push
xchg
pop
cmp
mov
mov
jle
add
jbe
sub
arpl
popf
push
popf
mov
sub
push
repnz
jle
xchg
push
scas
pop
movsb
into
mov
inc
xor
jmp
add
jnp
stos
mov
stos
lods
ret
call
test
mov
cltd
adcb
andl
inc
mov
jl
mov
cmpsb
shlb
pusha
adc
xor
jns
inc
dec
ret
js
dec
sar
jns
scas
jnp
xor
loopne
pushf
stc
scas
arpl
movsl
es
int3
or
stc
push
cmc
ja
dec
rorb
push
lea
daa
es
je
stc
cmp
mov
jne
pop
xchg
arpl
dec
mov
sub
xor
and
icebp
lcall
jo
mov
sar
push
push
jae
and
pusha
setbe
jecxz
rcrl
push
jp
je
aas
nop
inc
and
ret
loop
mov
bound
mov
cmpsb
mov
je
adc
rorl
sub
adc
cmpsb
pop
insb
jo
jns
cmc
mov
jmp
sahf
or
out
inc
mov
dec
or
and
mov
fimuls
sbb
jmp
sbb
nop
inc
mov
addl
dec
push
cmp
push
filds
shl
dec
movsl
pop
pop
arpl
pop
fistps
jmp
inc
pop
mov
cmpl
push
pop
loope
mov
mov
or
outsb
cmpl
dec
gs
rcr
mov
adc
cltd
mov
pop
mov
ret
dec
mov
popf
mov
inc
lahf
dec
das
pop
out
pop
clc
dec
jecxz
mov
mov
out
adc
cmpl
js
or
test
lods
fdivl
pop
lret
dec
xchg
iret
lcall
lods
imulb
pop
imull
test
push
cmp
mov
jecxz
rclb
std
hlt
pop
mov
cld
pop
das
adc
push
dec
and
std
adc
pop
out
idiv
lahf
dec
jp
daa
aaa
lea
popf
shl
pop
imul
ret
xor
inc
pusha
subb
je
inc
vmovups
ret
lods
fstl
push
jmp
enter
cmp
xchg
push
xor
and
imul
mov
lods
stos
xchg
add
mov
subl
add
leave
cmc
rcll
adc
or
aam
in
dec
int
subl
jp
lods
pop
movnti
nop
or
loope
outsl
mov
sub
and
or
movsl
jecxz
in
aad
outsb
mov
inc
mov
nop
adc
mov
jbe
movsb
mov
rolb
les
add
xchg
mov
mov
push
cmp
sub
je
pop
pop
xor
lahf
or
lcall
icebp
int3
and
loop
sbb
dec
mov
sbb
imul
pushf
test
mov
std
cmp
bound
cmc
xor
out
xlat
cmp
xchg
cli
aam
mov
loop
jb
pusha
shrl
mov
pop
insl
jmp
shrl
push
lcall
adc
jae
hlt
into
gs
sub
jle
push
jecxz,pn
fnstsw
jge
fstpt
test
aas
mov
jp
sbb
mov
pop
lret
and
ds
mov
negl
popa
cld
add
fisubrl
repnz
sbb
bound
and
ret
inc
sub
cld
mov
gs
fs
mov
insb
into
and
cmp
cltd
push
sbb
hlt
leave
subb
and
inc
and
iret
jnp
pop
rcrl
pop
xor
xchg
mov
and
movsb
mov
out
cmpsl
cltd
and
pop
nop
test
shl
xchg
adc
dec
and
inc
pushf
out
pusha
iret
pop
aaa
loopne
jbe
add
test
add
xchg
or
adc
scas
aad
lret
das
data16
cmp
ljmp
jb
in
jg
adc
and
push
lcall
jg
addl
lahf
mov
inc
loop
sbb
add
ss
insl
jnp
lock
adc
mov
mov
push
sbb
cmp
mov
cs
lods
lds
in
nop
ret
mov
pop
inc
mov
xchg
ret
lock
sbb
cmpsl
jmp
outsl
mov
jbe
mov
psubq
ja
insb
mov
cwtl
les
xlat
lea
lret
dec
xor
ljmp
push
cmp
testl
inc
cmp
pop
out
gs
inc
mov
in
mov
aam
push
push
idiv
in
inc
cmp
das
mov
xchg
shr
in
dec
aam
jns
inc
sub
mov
shll
add
jl
add
mov
lods
inc
sbb
sbb
xchg
repz
orb
subl
out
in
or
mov
popa
stos
cmp
dec
cmp
aaa
sbb
jge
and
cmp
add
fbld
mov
push
mov
stc
fsubrl
adc
or
jge
jo
fstps
mov
dec
mov
mov
hlt
repz
mov
dec
add
sub
push
aas
xlat
mov
push
insb
sbb
dec
sti
sbb
jns
mov
cmp
jecxz
shrl
popa
pop
jns
repnz
sbb
xchg
cmp
out
into
ja
pop
stos
insl
sti
add
mov
xor
push
cmp
pop
addb
add
outsb
in
movsl
pop
xor
stos
imul
cmpsl
rorb
test
rcll
push
test
add
and
rorl
test
scas
mov
mov
xchg
dec
push
cmpsb
push
movsb
jmp
jo
dec
pop
pushf
mov
pop
pop
sub
sbb
and
pushf
das
sahf
jp
mov
and
ljmp
in
hlt
faddl
fdivp
xchg
sub
test
movsl
add
addr16
jecxz
adc
in
pop
lcall
scas
inc
ljmp
fdivs
outsl
into
mov
inc
add
mov
xchg
or
rorb
fistpll
xor
sub
pop
dec
add
jp
test
or
fs
into
lods
xchg
shlb
int3
int
dec
pop
hlt
int
adc
and
aad
mov
cmpl
out
and
sbb
outsb
cmpsb
mov
insl
sbb
sarl
cmpsb
adc
and
inc
inc
cs
push
fidivs
pop
cmp
push
jb
ret
sub
sbb
mov
mov
nop
fwait
popa
sbb
lahf
add
pop
into
nop
js
ret
cmpsl
mov
lret
and
test
ja
ds
ljmp
adc
cld
xor
jb
sbb
jno
test
add
lods
scas
cwtl
int3
rol
ret
scas
dec
mov
leave
lods
shll
mov
push
ja
jle
mov
in
repz
mov
lahf
jbe
and
add
hlt
cli
jl
loop
sbb
push
mov
js
je
mov
aaa
or
sbbl
dec
nop
cmp
jp
popa
fadd
jbe
sub
sub
inc
xor
sub
int
mov
fs
scas
pop
pop
mov
sub
fldenv
in
lcall
cwtl
push
jmp
pop
mov
xchg
mov
adcl
add
push
std
adc
sbb
mov
addb
cmp
int3
movsb
xor
iret
stos
add
cld
inc
jmp
and
mov
mov
jo
and
mov
stos
sub
lcall
mov
test
mov
movsl
push
out
mov
dec
push
movsl
hlt
push
sahf
sti
jecxz
fwait
in
mov
mov
jle
or
pop
or
adc
and
jae
lea
gs
and
adc
outsl
lret
pop
loop
movsb
addr16
xchg
or
inc
adc
in
add
test
pop
inc
dec
mov
xchg
dec
mov
pop
inc
add
wbinvd
sub
mov
push
int
rol
or
cmp
sub
lret
sbb
daa
jp
inc
add
jb
push
sub
test
xchg
jle
cmp
ja
jl
pop
lahf
sub
flds
mov
dec
aas
imul
xor
xchg
mov
pop
bound
mov
and
mov
fldenv
jbe
jp
xor
adc
mov
mov
lahf
scas
les
mov
out
dec
outsb
ret
or
xor
lea
dec
push
clc
into
fnstsw
pop
adc
scas
cmp
xor
xor
push
dec
iret
xchg
nop
and
and
jl
cmpsb
les
hlt
gs
sti
insb
fstpt
gs
inc
adc
xor
sbb
dec
add
jg
jno
jae
ja
cmc
sub
stc
jp
sub
cmp
xchg
dec
out
scas
aas
mov
and
imul
gs
rolb
and
push
jo
push
stos
sub
or
sbb
pop
insb
xor
iret
test
cmpsb
mov
addl
xchg
jns
jg
cltd
xor
fwait
ja
cmp
in
pop
jmp
mov
add
cmp
xor
gs
sub
shll
adc
ss
pop
repnz
cmp
push
mov
dec
adc
int
mov
in
fists
into
mov
call
pop
jmp
outsb
nop
mov
adc
je
mov
jne
xchg
and
sbb
and
stc
sti
ss
repz
inc
push
adc
and
inc
dec
movsl
pop
pop
xor
fidivs
aad
sbb
mov
subl
sub
jno
jmp
pop
clc
xor
imul
test
dec
mov
pushf
hlt
pop
dec
mov
test
ja
jae
imul
scas
ss
sarl
xchg
jo
xorb
enter
pop
scas
aaa
movsb
lods
es
jo
or
sub
incl
loop
lret
popf
xor
repnz
xrelease
sub
and
jnp
adc
out
shr
jns
lock
orl
fs
pop
cs
mov
popa
jp
fwait
jae
dec
in
or
jo
in
jle
dec
dec
enter
stos
jg
out
mov
lods
sbbl
imul
lahf
aaa
cmp
leave
push
dec
outsb
mov
sbb
arpl
paddq
push
pop
cwtl
outsl
adc
dec
int3
jbe
adc
mov
into
insl
mov
je
out
xchg
lahf
mov
xlat
pusha
nop
nop
push
xchg
int3
cmp
xchg
enter
mov
lock
mov
into
jl
mov
loop
aad
pop
mov
out
inc
pop
push
cmp
daa
in
cmc
fnsave
xor
sti
cmpsl
push
push
scas
popf
push
mov
shr
cmp
ss
or
rcr
pop
add
sarl
fdiv
mov
dec
lcall
mov
into
inc
adc
pop
add
je
sbbl
add
in
cmp
mov
shll
ficomps
jl
scas
jp
rcll
in
cmp
shr
inc
int3
inc
or
fisttpl
add
addb
fldenv
sti
xchg
push
inc
mov
cltd
mov
cmpxchg
loope
mov
repnz
lds
cmc
imul
lock
and
pop
cwtl
or
arpl
arpl
mov
lahf
push
jl
and
mov
adc
jne
addr16
call
and
outsl
mov
sarb
jo
push
mov
cwtl
cmp
fs
or
aaa
enter
pop
xor
in
fcomps
inc
pop
and
hlt
lods
jne
fistpll
mov
sub
jmp
iret
daa
jnp
sub
into
icebp
lods
add
xchg
mov
mov
in
scas
int
push
sbb
dec
jmp
adc
cli
push
mov
mov
inc
fildl
mov
es
lods
xchg
jb
inc
add
xorl
or
dec
mov
jne
outsb
mov
sub
mov
fdivs
leave
xor
and
dec
ljmp
mov
inc
inc
fcompl
daa
data16
dec
cmc
aam
hlt
cmp
sbb
mov
jg
pop
call
mov
mov
ficomps
imul
pusha
mov
lret
icebp
dec
lds
das
icebp
push
cmp
cmc
cld
inc
insb
je
hlt
adc
movsb
xchg
pushf
or
call
repnz
pop
jb
repnz
shl
nop
cld
stos
fildl
fwait
adc
dec
addr16
loopne
mov
jmp
not
dec
sub
add
cmp
lcall
dec
das
pop
jbe
push
add
mov
jo
imul
sub
aas
sbb
movsb
or
and
cli
adcl
out
mov
xlat
pop
jmp
cmp
sbb
imul
dec
js
loop
mov
inc
fnstenv
mov
std
push
xchg
fiaddl
mov
push
mov
mov
stos
pusha
cmp
jne
call
call
push
and
scas
and
inc
ror
inc
sti
in
or
lea
jl
outsb
sahf
dec
shrl
push
loope
lds
das
sub
push
sub
outsb
shlb
iret
loope
mov
and
jb
adc
add
pop
pop
into
lahf
inc
arpl
aad
dec
dec
cmp
add
mov
mov
insl
add
fcoms
pushf
mov
pop
hlt
xor
pop
adcb
cld
loope
xor
jns
repz
les
rsm
fistps
js
loope
stc
std
js
rclb
dec
sarb
mov
mov
jne
ljmp
pop
adc
dec
adc
sbb
je
pop
jae
mov
cli
xor
xor
jp
sahf
or
test
je
dec
adc
push
mov
mov
repnz
xor
and
dec
fimull
mov
stos
mov
repz
mov
int
and
add
and
stos
and
icebp
sub
jmp
pop
sbbl
loopne
jge
daa
cmp
mov
xor
lcall
pop
sbbb
push
xor
pop
pop
mov
push
cmc
mov
outsb
fdivr
mov
dec
hlt
rolb
pop
jmp
movsl
push
mov
dec
pop
test
arpl
sbb
push
and
or
cmp
or
sub
and
clc
icebp
iret
in
lods
sbb
mov
and
mov
sub
inc
loop
dec
test
fisttps
pop
test
loop
cmpsb
rcll
js
lcall
mov
jns
shlb
clc
push
mov
leave
ret
jns
or
jo
sti
lods
inc
js
add
lret
mov
mov
and
xor
mov
ds
int3
int3
fnsave
mov
push
mov
push
lea
add
ja
nop
out
jno
push
cmp
add
shlb
outsl
fildll
cmp
and
movsb
add
aaa
das
into
mov
fs
or
popa
xor
aaa
cmp
dec
mov
test
movsl
shrl
jo
aaa
xchg
xchg
jle
xchg
mov
cld
fisubrs
hlt
lret
fucomi
addb
mov
iret
or
arpl
insl
leave
scas
popa
push
cmpsb
repnz
jno
hlt
inc
je
adc
adc
shrb
in
repz
lahf
lock
add
xchg
clc
jo
popa
sub
inc
inc
dec
jl
inc
dec
sbb
rolb
mov
fdivp
repnz
add
call
out
push
loop
shl
cwtl
mov
sbb
insl
test
push
dec
dec
cmpsl
mov
fisttpl
inc
pop
dec
and
push
xor
adc
repz
mov
movsb
mov
hlt
xchg
in
adc
add
xor
and
push
xor
adc
repz
mov
movsb
mov
hlt
xchg
in
adc
dec
push
dec
push
and
push
aaa
in
add
out
repz
mov
movsb
mov
aam
in
adc
add
xor
and
add
xchg
fs
or
imul
sbb
mov
and
push
cli
dec
out
popa
and
jg
xchg
pop
icebp
dec
jne
add
push
cli
inc
ljmp
subl
xchg
push
shrl
loope
test
add
cld
dec
lret
outsl
shlb
cmc
cmp
js
sub
jg,pn
dec
jmp
leave
dec
out
push
cmc
inc
adc
mov
aad
pop
sub
xchg
mov
in
std
mov
movsb
jne
out
shll
in
xor
xor
pop
pop
outsl
popf
xor
out
rolb
ret
aaa
jp
push
add
jns
push
xchg
cmp
hlt
rorl
int
imul
mov
popa
inc
nop
mov
pop
or
outsl
shl
movsl
loope
out
insb
or
adc
jne
leave
leave
jmp
sbb
ss
add
cli
in
xchg
adc
jg
or
out
inc
pushf
push
xor
fistps
mov
sbb
imul
das
icebp
mov
and
push
mov
out
and
jno
pop
push
cmp
add
xchg
ss
inc
lret
test
inc
loope
js
jae
inc
negb
ds
das
xchg
jns
pop
aam
les
cmp
test
pop
cld
fs
inc
jmp
and
test
rcrl
dec
fnstcw
test
scas
push
aas
mov
dec
push
divb
add
popa
lret
subl
sarl
push
pop
loope
adc
and
jno
popa
lret
subl
sarl
push
pop
loope
adc
loope
sahf
popf
test
cmc
clc
jne
push
rorb
and
ljmp
frstor
xor
outsb
cmp
jo
cmp
sub
add
outsb
mov
inc
xchg
pop
hlt
xor
mull
stos
pop
aas
inc
iret
pop
jbe
sub
cmp
outsl
push
or
pop
jecxz
cmp
push
jp
cmp
pop
or
fildl
cmpsl
cmp
pop
pushf
xchg
mov
inc
and
mov
lea
test
adc
and
jo
addr16
testl
inc
cmpsb
jecxz
lods
pop
add
inc
mov
cmp
dec
jmp
and
pop
xchg
js
imul
push
and
push
js
mov
mov
inc
movsl
out
mov
stc
sbb
cltd
jg
mov
jl
jnp
cmc
mov
scas
arpl
dec
int
pop
mov
cmp
pop
je
arpl
or
push
mov
sbb
movsb
andl
lcall
mov
sbb
daa
cmp
out
push
or
popa
dec
loope
dec
gs
mov
adc
xchg
jbe
adc
mov
push
sbb
ret
jae
sbb
cwtl
repz
nop
orl
ret
inc
pushf
scas
cmc
cld
out
mov
push
add
dec
cld
ds
stc
xor
jbe
inc
cli
inc
mulb
cs
clc
lret
cwtl
fnsave
sub
mov
mov
push
or
in
push
test
sub
cmc
dec
cmc
push
xchg
mov
push
aaa
sar
and
into
int
jle
sbb
jns
loope
jmp
xchg
cmp
mov
push
outsl
xor
pop
mov
lcall
cmpsb
int3
cs
inc
jmp
jecxz
inc
sarb
adcb
sbbb
push
into
sti
sbb
iret
dec
mov
dec
addr16
stc
pop
cmovne
mov
cmp
mov
mov
cmp
scas
insl
cld
xor
sbb
mov
repz
hlt
or
lock
jbe
fldcw
lods
in
mov
mov
xor
and
out
xchg
stos
fstps
out
xchg
pusha
mov
stos
subb
test
adcl
pop
dec
push
sub
aaa
sti
fwait
stos
iret
mov
cmp
fstl
push
out
sbb
mov
mov
in
rol
mov
nop
lods
cmp
lods
cwtl
js
mov
je
sub
xchg
cmp
dec
inc
imul
and
shrl
lret
push
aam
dec
stc
std
push
jae
dec
into
sub
push
add
sbb
cmp
xchg
test
lds
pusha
sub
int3
movsl
insl
test
push
mov
out
xor
push
adc
push
das
cmpsb
fwait
push
mov
or
push
mov
adc
push
add
lods
xchg
iret
sbb
cld
lahf
fs
divb
dec
jge
js
inc
jle
jmp
cmp
and
pop
pop
sarl
das
pop
mov
mov
inc
jg
shrb
xor
pop
mov
pop
data16
mov
sub
push
fldenv
lds
add
dec
insb
outsb
mov
rcl
test
enter
mov
inc
xor
mov
lea
sarl
dec
ja
xchg
scas
cmp
inc
jge
mov
fcompl
repz
roll
or
loop
mov
mov
imul
shr
fidivrl
inc
ja
xlat
pop
and
and
ret
inc
pusha
add
lcall
or
nop
mov
xchg
and
mov
scas
js
fadds
mov
arpl
aad
inc
mov
sbb
pusha
shlb
pop
jo
fs
mov
push
fstps
clc
mov
dec
xchg
or
cmp
in
pop
daa
or
scas
mov
cld
push
das
push
cld
sbb
hlt
adc
adc
xor
fdivr
jns
das
test
dec
outsl
in
shlb
lahf
pusha
xor
repnz
lret
leave
out
sarl
jnp
adc
std
ja
movsl
addr16
int3
sahf
xchg
dec
fistps
inc
jnp
rcll
inc
inc
xlat
sub
lds
jo
pop
mov
addr16
sbb
pop
dec
xchg
mov
lock
mov
es
jmp
mov
lock
out
fldcw
lods
insb
mov
mov
les
mov
movsb
negl
push
add
dec
push
add
xchg
cs
test
jmp
inc
addr16
pop
and
mov
adc
jns
jge
hlt
or
xor
dec
je
outsl
into
jle
mov
lods
add
cld
inc
xchg
mov
lods
or
out
pusha
xor
jae
test
push
pop
and
pop
adc
jae
inc
dec
sbb
pop
inc
pop
scas
lds
xchg
sbb
xor
sbb
xor
push
xor
and
cli
mov
xor
aas
jns
mov
cmp
inc
fmulp
xor
cltd
mov
call
jl
xchg
sbb
lods
bound
repz
add
cmp
cmp
xor
out
add
adc
mov
addr16
jg
xor
cmpsl
pushf
and
stc
dec
jl
js
mov
inc
mov
cmp
jmp
or
es
in
sahf
push
in
xchg
aaa
cli
xchg
dec
cmp
mov
jp
push
inc
ret
cmpsb
ds
mov
insl
outsl
mov
iret
test
out
fimuls
outsb
xchg
mul
or
xchg
push
xchg
mov
cmp
ds
insl
push
cmp
cli
and
inc
add
fdivr
lea
fdivl
add
dec
insb
push
loopne
jno
adc
dec
pop
movsl
stc
xchg
orl
mov
mov
pop
mov
sbb
dec
cmp
cli
xchg
in
jp
xchg
add
subl
sbb
mov
call
xchg
sbb
add
sbb
xor
mov
or
cmpsb
jno
movsb
popf
stc
or
dec
cs
mov
jmp
xchg
adcb
pop
scas
enter
ja
jmp
stc
mov
xchg
and
fadds
movl
sub
xlat
rol
fwait
add
cmp
push
cli
cs
repnz
pushf
lds
lods
pop
enter
sub
fcoms
xlat
gs
inc
push
add
push
out
fdiv
das
movswl
jle
pop
xor
add
sbb
iret
sbb
xor
cltd
sbb
cmpsl
sub
bound
loope
fists
in
sub
aad
aad
js
fwait
call
das
or
repz
popa
movsl
xchg
in
out
cmpsb
and
enter
jle
push
xchg
ret
inc
rcr
sti
movsl
mov
pop
jno
out
cvtdq2ps
adc
lock
jmp
xchg
icebp
mov
sub
sub
mov
jo
xchg
lret
arpl
push
jl
push
std
adc
cmpsb
outsb
jae
nop
aam
sbb
cmp
clc
in
xor
push
pop
xor
add
and
outsb
lret
fsts
add
or
push
cmp
loopne
ljmp
lcall
adc
in
inc
cmp
jmp
std
stos
xchg
lods
add
mov
add
adc
adc
enter
xchg
mull
or
aas
add
xchg
push
sub
inc
mov
imul
mov
mov
dec
sub
pop
mov
pop
jmp
push
fldt
int
imul
push
mov
dec
pop
jae
lods
dec
push
gs
xor
push
nop
daa
pop
mov
jae
ret
push
and
addr16
dec
cmp
shll
mov
jno
pop
je
and
loopne
adc
popa
ficoml
adcl
adc
das
daa
fnstsw
lds
lret
cmc
mov
std
jge
mov
stc
push
stos
dec
sub
mov
pop
xor
and
arpl
jb
ss
push
inc
and
sahf
add
clc
push
js
clc
mov
mov
pop
push
xor
test
adc
adc
xor
xorl
mov
rorl
inc
fidivrl
sahf
je
mov
out
pop
aad
jge
cmpsl
sub
into
push
aaa
xlat
sbb
data16
cmpsb
jne
hlt
icebp
insl
lret
dec
fs
test
xor
jecxz
in
jg
dec
je
outsb
sub
push
xchg
jnp
fldl
leave
call
sahf
dec
ret
lods
xor
mov
inc
sub
idivb
ja
fnstenv
mov
lcall
sub
jmp
pop
inc
cmp
jg
dec
stos
jno
add
xchg
push
lods
in
mov
mov
jae
sub
lret
test
push
cmp
xlat
pop
call
push
jb
cmp
fnsave
sbb
mov
xchg
jb
sub
push
addr16
adc
jbe
lret
dec
cmp
jbe
push
loopne
jae
sbb
sahf
add
xor
sub
fisubs
xchg
xchg
movsl
lock
lret
ja
pop
push
in
clc
fidivrl
lret
fstps
in
cmp
pop
imul
shl
jae
test
mov
in
lahf
repz
mov
inc
orb
add
xlat
idivb
leave
shlb
icebp
pop
mov
push
arpl
pusha
add
or
sub
movsl
cmc
das
push
imul
insb
lcall
ss
jp
fidivrs
adc
arpl
cmp
ret
repnz
push
mov
mov
mov
repz
dec
ss
out
push
sub
rclb
fimull
add
popf
push
cld
jae
dec
jb
aad
fs
enter
lock
outsb
pop
mov
enter
in
dec
test
xchg
sbb
push
insl
inc
cld
insb
fmuls
addr16
loop
adc
out
mov
sbb
scas
lea
xor
mov
push
mov
pop
ret
and
ljmp
mov
ret
mov
sub
dec
rcl
sub
pop
jo
fisubrl
subb
dec
sbb
push
mov
data16
lods
sbb
out
jns
push
jle
jecxz
ret
mov
sbb
ss
pop
ret
and
outsb
and
stos
cltd
rclb
xor
mov
jne
and
xor
in
inc
das
cmp
jmp
add
mulb
insl
push
jae
test
shrl
push
add
aam
pop
fstpl
cmp
test
sbb
jl
pop
sbb
mov
jmp
sbb
enter
mov
clc
mov
frstor
lea
leave
inc
dec
jne
jl
xchg
and
pushf
cltd
sti
jl
sbb
cmp
iret
push
mov
mul
movsl
hlt
push
lods
jnp
movsb
insb
mov
andb
sahf
mov
adc
insb
adc
pop
rsm
xor
fidivl
pop
push
insb
and
cmp
dec
adc
mov
xchg
ret
xor
cwtl
add
cwtl
jo
pop
outsb
inc
lods
je
sbb
mov
shlb
leave
xchg
insb
mov
or
xor
jg
mov
sbb
aaa
call
popa
imul
add
xor
lea
out
push
adc
push
xlat
rolb
outsb
dec
push
cmp
lds
push
pop
hlt
inc
cmc
outsl
jge
mov
push
sbb
xor
cld
loope
xchg
mov
fbld
xor
scas
jmp
add
sbb
pop
dec
fprem
pop
dec
into
fpatan
ss
mov
cmp
stc
mov
mov
pop
aam
push
fsubrs
rolb
mov
cmc
sub
loop
out
push
pop
test
fs
rcrb
insl
enter
aam
mov
outsl
dec
scas
imul
rcr
call
in
aas
pop
cmpsl
or
das
popa
pop
scas
pop
xor
sub
cld
adc
xchg
and
mov
iret
mov
jl
and
and
in
sbb
daa
mov
mov
or
mov
pushf
mov
mov
sti
repz
sbb
stc
sub
stos
xchg
es
jns
mov
xchg
push
pop
ds
dec
fistpll
fst
xchg
jg
push
into
jge
decl
sbb
es
and
fnsave
mov
sbb
pop
mov
scas
jl
and
add
sbb
shlb
popf
or
push
notl
cmpsl
sbb
fcmovbe
insb
into
mov
mov
daa
insb
sbb
loope
scas
xor
add
cmpsb
jge
fsub
adc
addr16
mov
push
xor
lcall
cmp
lcall
push
pushl
decl
outsl
jmp
bound
xchg
lahf
shrb
and
sahf
mov
lcall
pop
mov
outsb
ljmp
inc
aam
and
xor
pop
push
xor
and
outsl
imul
arpl
out
pop
xchg
dec
mov
loopne
lods
jo
mov
stc
int
bnd
subl
fstps
ret
jle
jo
mov
mov
sub
rcll
ret
sub
mov
xchg
xchg
mov
daa
sub
inc
data16
out
scas
cmp
xchg
int
push
dec
sbb
mov
and
push
movsb
outsl
fcom
inc
push
insl
pop
inc
pop
aaa
aad
and
jecxz
scas
mov
bnd
mov
int3
mov
jp
out
cmpsb
dec
js
jo
push
cmp
xchg
fldcw
scas
push
pop
cmc
pop
and
hlt
mov
push
outsl
xor
xlat
test
add
inc
pushfw
xchg
mov
and
imul
and
adc
jecxz
inc
mov
jg
push
push
sub
pop
adc
repz
into
pop
mov
nop
or
cmpsl
mov
ret
pop
lcall
iret
ret
sub
pop
pop
sbb
mov
ljmp
sarl
or
and
push
push
mov
and
aad
inc
adc
prefetch
or
jne
out
xor
add
and
iret
das
sub
int
bound
lret
sub
lock
movl
inc
fnstcw
add
mov
add
and
sbb
pop
xor
mov
das
jl
mov
shrl
push
cltd
fdivl
stc
rorl
cmpsb
or
ja
cmpl
ds
sarl
movsl
and
jmp
push
hlt
add
and
dec
popa
loope
aas
loop
push
push
out
lds
fstl
sub
negb
loopne
lods
fildl
adc
imul
nop
mov
add
js
xchg
ljmp
push
icebp
sarl
cli
dec
mov
leave
inc
sbb
push
notb
cmpsl
inc
rcrl
fsubrp
test
cmpl
xlat
pop
aam
flds
push
adc
fwait
lret
sahf
add
lret
mov
dec
mov
lahf
stos
add
insl
dec
testb
outsb
push
adc
lcall
xor
add
dec
mov
arpl
adcl
mov
test
ret
lea
out
xchg
dec
add
out
fisttpll
cwtl
mov
shl
jp
inc
dec
mov
sahf
lea
subl
aas
popa
xor
dec
arpl
sbb
pop
sbb
repnz
imul
repnz
loop
mov
cmp
cmp
or
sbb
mov
shrl
aad
xchg
mov
or
fists
fs
loopne
outsb
sbb
pusha
and
mov
jmp
ret
dec
imul
and
lret
jo
ljmp
pushf
mov
repz
sahf
jg
xchg
testb
pop
cwtl
mov
cmp
outsb
out
pop
mov
mov
call
sub
add
hlt
or
cmpsb
rolb
arpl
arpl
add
into
pop
dec
nop
or
ds
in
push
pop
push
jp
ja
jecxz
or
sub
sub
inc
aaa
fstl
std
scas
pusha
popl
jno
dec
and
int
xchg
push
cmp
test
cmc
shl
fimuls
inc
dec
mov
pop
push
popa
pusha
iret
cmpsb
sbb
in
mov
test
ds
adc
mov
sub
movsb
cmp
sahf
cltd
pop
adc
push
out
movsb
inc
cmp
nop
pop
jns
adc
adc
sbb
sub
sbb
xchg
shll
imul
cwtl
push
lock
mov
mov
imul
dec
mov
lahf
mov
lcall
int
mov
push
bound
ret
rcr
fistpll
rcr
push
mov
int
popa
pop
lret
xor
xorb
jg
pop
shr
or
loop
pop
rcl
imul
sub
sub
scas
lcall
dec
lods
cwtd
push
fnsave
adc
push
pop
or
bound
cli
sbb
movsl
sbb
imul
aam
les
lahf
lcall
testl
inc
sbb
test
les
cmc
mov
ret
les
shrb
lret
xor
cmc
popa
loopne
addb
clc
mov
dec
outsb
pop
jb
cld
adc
pop
and
push
push
push
lcall
and
addb
pop
mov
nop
ss
cmc
mov
mov
mov
xchg
add
hlt
add
test
pop
popa
pop
ljmp
cmp
rorb
popa
popf
mov
inc
mov
outsb
jmp
add
and
cltd
cmp
sbb
inc
fmull
insb
push
stos
movsl
jne
xorb
fisttps
or
pop
mov
cpuid
mov
lock
mov
loopne
add
in
adc
jb
sub
movsl
mov
insl
xor
and
mov
out
sub
cld
gs
orl
lret
ljmp
lret
add
js
popf
inc
pop
std
cmp
arpl
cmp
div
jo
out
bound
adc
adc
xchg
sub
cmp
add
jo
push
xlat
call
loop
cmpsl
cld
push
mov
pusha
loop
enter
shll
loope
xchg
xchg
bound
or
add
imul
clc
daa
or
adc
dec
pop
popa
xchg
sbb
xlat
sub
test
repnz
xor
or
or
jo
test
fimuls
ficoms
push
insl
pushf
or
adc
dec
xchg
xchg
lds
aas
adc
sub
inc
cwtl
mov
and
jmp
xchg
popa
popa
fidivrl
outsl
mov
data16
jl
add
adc
mov
mov
dec
fcmovnu
test
push
test
outsl
aas
fs
std
push
test
xchg
into
test
xor
cwtl
lods
adc
js
cmpsb
inc
frstor
out
aas
fdiv
mov
jnp
xor
dec
cmc
arpl
cmpsb
in
adc
jnp
add
aas
cmp
pop
mov
mov
or
mov
lds
daa
es
mov
aad
test
jae
dec
jle
repz
jae
mov
enter
shrl
mov
in
stc
push
movsl
fcmovb
mov
subb
and
add
push
push
adc
sub
sbb
adc
ret
cmpsl
or
loopne
movsb
add
insl
ja
and
loopne
inc
mov
push
fstl
hlt
sbb
and
jge
out
push
data16
mov
das
mov
movsl
mov
cmp
adc
fdivrs
sub
adc
out
or
test
inc
adc
dec
imul
cmp
mov
xor
mov
mov
aas
xchg
repz
mov
addr16
jecxz
jbe
push
xor
add
jle
cmp
and
scas
pop
inc
sbb
sbb
in
cltd
and
and
sbb
repnz
cwtl
sub
pop
xor
or
fdivs
cwtl
clc
aas
push
push
push
and
cs
inc
insb
xor
lock
inc
jecxz
arpl
clc
lods
mov
jae
mov
ljmp
xor
and
leave
lea
pop
fstps
ret
vmwrite
call
jp
enter
mov
xchg
sbbb
adc
lds
xor
les
and
sbb
jle
push
sub
movsb
xor
sub
mov
add
adc
into
fldl
loopne
scas
push
push
and
xor
mov
int3
int3
loopne
pop
out
pop
into
dec
repnz
pop
xchg
adc
mov
lcall
aaa
sbb
jo
push
add
jp
and
into
dec
outsl
lret
rcrl
and
jl
imul
inc
or
movsb
ret
outsl
test
inc
pop
xchg
jbe
ja
push
add
lods
and
out
pop
inc
shr
push
loope
pop
jne
inc
lret
stos
xchg
sbbl
ljmp
subl
sarl
push
pop
loope
adc
and
jno
popa
lret
subl
sarl
push
pop
loope
adc
and
jno
mov
cs
sbb
push
push
or
imul
push
cli
push
ljmp
jle
sbb
mov
adc
and
xor
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
arpl
mov
call
fwait
pop
pop
add
add
add
add
pop
add
add
add
stos
add
add
adc
pushf
add
add
roll
add
add
stos
add
rolb
inc
add
add
xor
cmp
nop
add
add
add
add
inc
add
mov
mov
inc
add
add
add
add
add
add
add
cmp
jb
jl
movsl
add
add
add
cwtl
add
add
add
add
add
lcall
add
add
add
data16
movsl
add
add
add
add
add
sub
adc
inc
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
or
imul
mov
cmp
push
add
add
add
mov
adc
adc
fadds
daa
add
or
test
add
add
add
add
add
add
jb
fildl
push
add
add
add
add
add
add
add
add
add
adc
or
popl
pop
add
add
add
add
dec
add
add
add
add
push
add
add
add
jnp
cmp
xchg
add
jl
lcall
add
add
dec
add
add
stos
add
add
push
add
ljmp
add
inc
add
add
push
add
outsl
add
mov
mov
add
insl
add
add
add
add
roll
pop
add
fwait
add
add
or
roll
add
add
add
jae
and
xor
or
push
add
add
dec
add
adc
jl
out
add
inc
add
ds
add
add
add
cmpsl
add
mov
movsl
add
add
add
add
add
add
add
add
sbb
ljmp
add
scas
add
add
add
scas
add
jnp
push
add
inc
add
cmp
sbb
adc
nop
add
add
cmp
movsl
add
add
sub
mov
int
push
add
add
add
inc
add
add
cmpsl
add
jle
add
jl
js
mov
add
call
add
sub
sbb
int
call
add
add
add
jo
add
movb
add
add
cmp
add
xor
push
add
add
add
sub
push
add
add
xchg
jnp
xchg
jno
dec
add
or
roll
icebp
add
add
add
inc
add
jae
ljmp
add
pop
add
add
add
add
add
add
sbb
push
add
jae
dec
add
add
or
jnp
adc
push
add
sbb
movsl
add
add
lock
add
mov
add
add
mov
int3
add
sub
rolb
add
add
add
add
mov
push
add
add
add
insl
add
add
add
add
rolb
add
add
cmp
mov
adc
adc
sahf
add
cmp
pop
add
add
in
add
add
adc
mov
adc
insl
add
or
cmp
and
pushf
add
add
add
add
add
add
add
dec
std
adc
cltd
and
lock
sbb
out
adc
fstl
jns
sub
adc
gs
scas
cmp
inc
cltd
loop
frstor
xor
sub
lret
xor
in
and
cli
mov
or
lret
cmp
cmp
loop
int
sbb
insb
insb
and
mov
push
aaa
mov
mov
mov
mov
gs
das
mov
xchg
in
dec
std
pop
or
lret
jecxz
jo
lcall
js
mov
mov
lret
or
stc
cmp
roll
xor
or
xchg
adc
dec
ds
pop
adc
nop
cmc
scas
aam
bound
into
lret
stos
and
popa
lods
paddw
cmpsl
out
pushf
ret
testb
xchg
pop
imul
arpl
jnp
hlt
out
cld
ficoml
mov
and
and
fdivr
inc
orb
or
cli
sub
mov
mov
jle
inc
mov
mov
and
xchg
rcrb
mov
push
mov
daa
xor
pop
testl
cmpsl
lret
inc
std
or
or
mov
xchg
lea
and
pop
in
test
mov
mov
sub
into
aam
or
adc
daa
pop
fildl
out
test
and
cmp
xchg
dec
lods
aam
loopne
arpl
aad
cmp
mov
cmc
pop
fisubs
add
cmp
jmp
dec
loop
and
cmp
ret
add
xchg
imul
les
hlt
orl
out
push
aad
add
lds
push
jg
mov
in
and
sarb
and
std
inc
cmpb
xlat
scas
pop
lcall
jno
sarb
and
push
jl
data16
fcompl
inc
cmp
lret
cltd
lds
push
push
lea
cmpsb
scas
mov
lds
jno
out
lahf
scas
mov
fcompl
push
mov
add
xor
stos
in
and
outsb
mov
mov
rcrl
xlat
inc
add
fsincos
shl
les
je
mov
mov
outsb
adc
pmullw
and
rorl
cmc
es
jns
and
push
dec
push
mov
or
xchg
cmp
push
inc
mov
icebp
push
int
mov
sub
cs
insl
popf
xchg
aas
adc
loope
fmull
ret
ds
jge
xchg
push
aam
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
