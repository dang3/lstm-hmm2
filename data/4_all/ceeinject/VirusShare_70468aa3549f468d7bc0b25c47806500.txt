cld
mov
jae
imul
aad
push
jae
dec
inc
jae
bound
jecxz
inc
jae
bound
lcall
jae
inc
inc
jae
fadds
mov
jae
jecxz
jae
mov
jae
addr16
jae
dec
inc
jae
push
jae
arpl
jg
push
jae
mov
jae
bound
into
arpl
add
jae
pop
push
jae
fiadds
ss
jae
and
mov
sqrtps
push
inc
jae
add
add
sub
add
add
out
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
cmp
add
add
add
jns
xchg
push
test
pop
fdivs
decb
add
add
push
jb
add
int3
xor
add
cmp
xchg
ja
dec
es
out
das
cmp
test
jl
or
add
cmp
xor
or
stos
add
xchg
mov
add
add
add
insl
xor
or
outsl
jb
xor
sbb
add
and
jmp
insl
xor
xor
ret
add
add
adc
add
incl
je
add
add
dec
dec
inc
xor
add
dec
add
add
adc
add
arpl
add
xor
inc
cmp
arpl
outsb
je
and
and
je
imul
popa
jp
pop
inc
gs
je
jo
jae
js
gs
gs
add
add
lock
daa
orb
int3
add
cmpxchg
sub
add
add
iret
adc
mov
add
add
add
add
decl
add
add
add
add
add
adc
add
add
add
add
add
incl
add
add
add
add
add
std
decl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
std
decl
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pusha
add
add
add
bound
add
arpl
add
add
add
add
data16
add
add
push
add
add
add
imul
add
add
add
outsb
add
add
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
jg
add
addb
add
outsl
add
je
and
inc
add
je
jb
jns
push
add
incl
add
add
add
add
add
rolb
add
add
inc
pusha
test
mov
sub
add
add
add
add
add
add
insb
add
or
add
incl
add
add
add
add
add
add
inc
add
insl
add
dec
add
push
adc
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
dec
add
add
jb
add
xor
xor
xor
add
sbb
add
incl
add
incl
add
add
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
incl
add
add
fcomps
add
add
incl
or
add
decl
add
add
add
rolb
add
add
inc
or
add
push
popa
arpl
add
add
add
arpl
add
add
add
arpl
addr16
cmp
add
incl
add
add
add
add
add
incl
add
add
add
add
add
inc
add
add
add
or
add
cmp
add
add
and
add
add
add
add
add
add
add
add
sbb
add
sti
add
incl
add
add
add
add
add
add
outsl
insl
popa
add
jecxz
or
fcomps
repz
and
ja
push
push
add
add
sub
add
add
add
add
add
add
incl
movsl
add
add
movb
add
add
add
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
incl
add
add
jmp
push
add
inc
or
data16
add
add
add
add
add
add
add
sub
add
and
add
and
add
add
sbb
add
add
add
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
rolb
addb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
addb
add
sarb
mov
add
add
add
add
add
add
add
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
rol
rolb
add
rol
rol
add
rol
rol
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
rol
rolb
add
rol
rol
add
rol
rol
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rolb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
add
add
add
add
add
add
add
add
add
add
js
gs
gs
and
and
sbb
add
sti
add
add
add
add
add
add
add
push
jns
je
insl
add
xchg
push
push
add
or
add
add
decl
add
sub
add
add
dec
dec
add
dec
add
add
add
add
xor
add
dec
inc
push
inc
jle
add
xor
add
add
out
mov
xor
add
add
jb
outsl
add
jb
popa
add
and
inc
add
insb
add
jae
add
sbb
cmp
xor
add
add
xor
add
push
outsl
data16
add
add
out
mov
xor
add
add
add
add
data16
add
insb
add
xor
xor
dec
add
je
imul
sbb
add
incl
add
add
icebp
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
add
lcall
add
js
gs
gs
add
pop
inc
dec
inc
push
dec
inc
jle
pop
addr16
inc
gs
je
jo
jae
js
gs
gs
add
add
add
cmp
inc
push
dec
inc
jle
pop
addr16
inc
gs
je
jo
jae
js
gs
gs
add
icebp
add
dec
pop
nop
add
add
add
add
incl
add
add
add
add
loopne
add
push
pop
mov
int
mov
push
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
and
and
fs
add
add
add
aas
jg
pop
jnp
ja
jnp
ja
jnp
ja
mov
push
add
jns
ja
pop
fmuls
or
ja
push
imul
arpl
add
push
inc
add
dec
add
outsl
dec
loopne
loopne
add
or
or
add
add
add
add
mov
adc
add
inc
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
int3
inc
add
add
add
pusha
add
push
cmpsb
add
adc
add
add
nop
inc
add
inc
inc
add
clc
add
add
add
add
add
add
adc
add
xor
add
add
add
add
pusha
jb,pn
popa
je
add
and
add
add
add
or
add
xor
add
add
add
add
add
add
add
add
add
add
add
inc
add
shrb
add
add
add
push
cmpsb
add
add
add
test
add
inc
add
inc
add
inc
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
ret
int3
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
ret
int3
push
push
xor
jmp
lea
lea
movzbl
mov
mov
mov
movzbl
mov
mov
mov
add
cmp
jl
cmp
jge
lea
push
movzbl
mov
mov
mov
movzbl
mov
mov
and
jns
dec
or
inc
jne
movzbl
mov
call
mov
movzbl
call
mov
movzbl
call
mov
movzbl
call
mov
mov
cltd
and
add
sar
xor
mov
movzbl
xor
mov
movzbl
xor
mov
mov
xor
add
mov
movzbl
xor
add
cmp
mov
jl
pop
pop
pop
ret
movzbl
movzbl
mov
mov
movzbl
mov
movzbl
mov
mov
mov
movzbl
mov
movzbl
mov
mov
mov
mov
mov
movzbl
mov
movzbl
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
xor
lea
movzbl
mov
mov
mov
add
mov
mov
movzbl
mov
mov
mov
lea
movzbl
mov
mov
shr
mov
imul
mov
add
mov
mov
mov
movzbl
shr
mov
shr
mov
imul
mov
imul
mov
lea
mov
mov
mov
sar
mov
sar
xor
mov
xor
mov
sar
imul
and
imul
sar
sar
xor
add
mov
add
imul
sar
xor
and
mov
imul
mov
mov
xor
sar
sar
and
imul
sar
xor
mov
add
add
sar
shr
xor
and
mov
imul
and
mov
mov
imul
xor
mov
xor
sar
and
imul
mov
sar
imul
sar
xor
mov
add
add
sar
xor
and
mov
imul
xor
mov
xor
mov
sar
imul
and
imul
movzbl
sar
sar
xor
lea
sar
xor
and
mov
imul
xor
mov
mov
mov
imul
xor
sar
mov
sar
xor
and
mov
imul
mov
mov
mov
sar
sar
xor
and
mov
mov
imul
mov
mov
mov
sar
sar
xor
and
mov
mov
imul
mov
movzbl
mov
imul
mov
mov
mov
imul
xor
xor
mov
xor
mov
xor
mov
xor
mov
mov
shr
mov
xor
xor
xor
add
mov
xor
mov
imul
mov
mov
shr
mov
imul
mov
mov
shr
mov
imul
mov
mov
shr
mov
imul
mov
movzbl
mov
imul
mov
movzbl
imul
mov
movzbl
xor
mov
imul
mov
movzbl
imul
mov
add
mov
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
movzbl
imul
mov
movzbl
imul
mov
mov
xor
xor
xor
xor
xor
xor
mov
movzbl
mov
imul
mov
movzbl
imul
mov
movzbl
add
mov
imul
mov
mov
xor
add
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
movzbl
imul
mov
xor
xor
xor
add
xor
xor
mov
mov
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
cmp
mov
jl
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
xor
jmp
lea
jmp
lea
movzbl
movzbl
mov
movzbl
mov
movzbl
mov
mov
add
cmp
jl
xor
mov
jmp
lea
movzbl
xor
movzbl
xor
movzbl
xor
movzbl
xor
add
add
cmp
jl
push
mov
jmp
lea
call
mov
lea
xor
movzbl
call
mov
add
cmp
jl
add
cmp
jl
xor
mov
jmp
lea
mov
movzbl
xor
movzbl
xor
movzbl
xor
movzbl
xor
add
add
cmp
jl
call
sub
cmp
jg
call
mov
pop
xor
movzbl
call
mov
add
cmp
jl
add
cmp
jl
xor
jmp
lea
lea
movzbl
movzbl
xor
xor
movzbl
movzbl
xor
xor
add
cmp
jl
xor
movzbl
movzbl
mov
movzbl
mov
movzbl
mov
mov
add
cmp
jl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
mov
push
call
mov
xor
push
push
mov
mov
mov
mov
mov
mov
call
push
call
mov
xor
push
push
mov
mov
mov
mov
mov
call
push
call
mov
xor
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
call
mov
xor
push
push
mov
mov
mov
mov
mov
call
push
call
mov
xor
push
push
mov
mov
mov
mov
mov
mov
call
push
call
mov
xor
mov
mov
mov
mov
push
push
mov
call
push
call
mov
xor
push
push
mov
mov
mov
mov
mov
call
push
call
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
sub
push
push
mov
push
push
mov
xor
test
jbe
lea
mov
and
mov
xor
add
cmp
jb
xor
xor
jmp
lea
nop
mov
add
cmp
jl
xor
mov
mov
and
movzbl
add
add
mov
and
jns
dec
or
inc
mov
mov
mov
movzbl
mov
lea
and
movzbl
add
add
and
jns
dec
or
inc
mov
mov
mov
movzbl
mov
mov
and
movzbl
add
add
and
jns
dec
or
inc
mov
mov
mov
movzbl
mov
lea
and
movzbl
add
add
mov
and
jns
dec
or
inc
mov
mov
mov
movzbl
add
add
cmp
mov
jl
mov
xor
test
jbe
add
and
jns
dec
or
inc
mov
add
and
jns
dec
or
inc
mov
mov
mov
movzbl
mov
mov
add
and
jns
dec
or
inc
movzbl
xor
add
cmp
jb
pop
pop
mov
pop
pop
add
ret
sub
mov
xor
mov
push
push
push
push
lea
push
push
mov
call
add
cmpw
movl
movl
jne
mov
add
cmpl
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
mov
push
push
call
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
xor
cmp
jbe
xor
mov
mov
add
mov
lea
mov
mov
add
push
push
mov
add
push
push
push
call
movzwl
add
add
cmp
jl
mov
lea
push
push
call
mov
add
mov
lea
push
push
mov
call
mov
push
call
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
push
mov
xor
mov
mov
test
push
mov
jbe
push
push
lea
shr
movl
movl
add
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
jne
pop
pop
mov
pop
xor
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
push
push
push
call
test
je
mov
lea
push
call
mov
lea
push
call
push
call
mov
cmp
jne
mov
cmp
je
push
push
push
call
mov
push
push
call
push
push
mov
call
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
push
push
lea
mov
call
mov
mov
mov
mov
movzwl
push
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
push
push
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
push
push
lea
call
mov
mov
mov
mov
mov
mov
movzwl
mov
movzbl
push
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzwl
mov
movzbl
push
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
push
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
push
push
lea
call
mov
mov
mov
mov
mov
mov
movzbl
add
push
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
push
push
lea
mov
call
add
add
call
push
lea
push
push
call
add
push
lea
mov
call
add
mov
lea
call
push
push
push
call
test
je
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
lea
and
push
lea
push
mov
push
lea
push
push
call
add
push
push
push
push
push
push
lea
push
call
mov
cmp
je
push
lea
push
lea
push
call
push
lea
push
push
call
test
push
jne
call
jmp
call
push
push
push
lea
push
push
push
call
push
push
push
call
mov
test
je
push
push
call
push
push
mov
call
push
call
mov
push
lea
mov
call
movzbl
add
push
lea
push
add
push
push
call
push
push
push
call
mov
test
je
push
push
call
push
push
mov
call
push
call
mov
push
lea
mov
call
add
mov
lea
call
push
push
push
call
mov
test
je
push
push
call
push
push
mov
call
push
call
mov
push
lea
mov
call
add
mov
lea
call
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
cmp
jne
repz
jmp
push
call
mov
movl
pushl
mov
push
push
push
call
add
test
mov
jge
push
call
pop
ret
push
push
call
xor
mov
mov
lea
push
call
movl
movl
mov
mov
mov
push
push
push
call
test
je
cmp
jne
xor
inc
mov
jmp
push
call
jmp
xor
inc
mov
cmp
jne
push
call
pop
jmp
mov
test
jne
mov
push
push
call
pop
pop
test
je
jmp
mov
mov
cmp
jne
push
push
call
pop
pop
movl
test
jne
push
push
call
cmpl
je
push
call
pop
test
je
push
push
push
call
mov
mov
mov
mov
cmp
ja
test
je
cmpl
jne
mov
test
je
cmp
ja
inc
mov
jmp
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmpl
jne
push
call
cmp
jne
xor
cmp
sete
mov
movzbl
push
call
pop
test
je
inc
mov
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
cmpl
jne
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
cmpw
je
xor
jmp
mov
cmpl
jne
movzwl
cmp
je
cmp
jne
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
mov
call
push
call
pop
pop
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmpl
jne
push
call
pop
call
cmpl
jne
push
call
pop
xor
ret
call
jmp
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
add
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
jmp
push
push
call
pushl
mov
call
pop
mov
cmp
jne
pushl
call
pop
jmp
push
call
pop
andl
pushl
call
mov
pushl
call
mov
lea
push
lea
push
pushl
call
mov
pushl
mov
call
mov
pushl
call
add
mov
movl
call
mov
call
ret
push
call
pop
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
int3
jmp
int3
int3
mov
cmpw
je
xor
ret
mov
add
cmpl
jne
xor
cmpw
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzwl
push
push
movzwl
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
push
push
call
andl
mov
push
call
pop
test
je
mov
sub
push
push
call
pop
pop
test
je
mov
shr
not
and
movl
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
call
ret
jmp
jmp
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
pushl
pushl
pushl
pushl
push
push
call
add
ret
push
push
push
xor
push
call
add
test
je
push
push
push
push
push
call
add
pop
ret
xor
ret
push
mov
sub
mov
andl
andl
push
push
mov
cmp
mov
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
nop
inc
nop
mov
mov
div
sub
nop
jmp
ret
lock
sahf
add
mov
add
add
bound
add
add
xor
add
push
add
cli
data16
out
add
shlb
add
data16
mov
data16
jl
add
outsb
data16
jp
add
data16
xor
add
and
add
data16
add
add
cld
add
loopne
add
aam
add
les
add
add
add
add
jp
add
sub
push
add
jbe
add
push
add
sbb
add
or
add
add
mov
add
xchg
jl
add
je
add
data16
js
add
push
add
data16
ss
sbb
add
add
add
add
add
add
in
add
add
add
push
cmp
cmp
inc
add
loopne
add
add
add
add
ja
add
fdivrs
add
fsubrs
inc
add
bound
fs
and
jno
and
data16
imul
and
outsl
je
and
popa
or
and
jno
and
add
add
jne
xor
je
xor
push
xor
popa
je
outsl
jo
outsb
dec
push
inc
add
inc
add
add
add
inc
push
in
in
leave
sti
das
rclb
pop
push
inc
sbbl
arpl
pop
push
jae
jb
pop
inc
jns
gs
outsl
outsl
fs
inc
outsl
arpl
outsb
je
pop
push
imul
je
imul
pop
push
jb
push
arpl
arpl
imul
imul
bound
insb
gs
jae
pop
jae
jne
jo,pn
bound
add
add
incl
add
add
add
add
lcall
cmp
and
inc
add
call
cmp
out
inc
add
incl
add
add
incl
add
add
incl
add
add
cmp
add
add
add
incl
add
add
incl
add
add
call
cmp
add
xor
add
add
xor
add
inc
add
sbb
lock
add
call
inc
add
or
add
loopne
add
lock
add
sahf
inc
add
mov
add
add
bound
add
add
xor
add
push
inc
add
cli
inc
add
out
add
rolb
add
inc
add
mov
inc
add
jl
add
outsb
inc
add
pop
inc
add
inc
inc
add
xor
add
and
add
inc
add
add
add
cld
inc
add
loopne
add
aam
add
les
add
add
add
inc
add
jp
add
sub
push
inc
add
push
inc
add
dec
inc
add
ds
add
sbb
add
or
add
inc
add
ljmp
add
inc
add
mov
add
mov
inc
add
xchg
jl
add
je
add
inc
add
pop
inc
add
push
inc
add
inc
inc
add
ss
add
sbb
add
add
add
inc
add
add
add
in
add
inc
add
movb
add
add
sbb
pop
popa
insl
jae
pop
gs
je
add
gs
popa
imul
das
add
gs
je
add
pop
gs
je
add
arpl
inc
imul
pop
imul
popa
add
add
js
je
add
add
arpl
insb
outsb
add
add
outsb
imul
add
outsb
imul
add
add
outsl
outsb
imul
gs
fs
outsl
arpl
gs
add
jae
je
jae
jb
popa
je
gs
add
adc
pop
popa
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
rolb
pop
pop
jo
pop
insw
outsl
fs
insl
add
outsb
arpl
gs
jo
imul
add
jae
je
popa
jo
pop
je
jo
add
dec
add
jb
pop
fs
addr16
push
add
push
inc
push
cmp
cs
insb
add
add
outsb
insb
outsl
arpl
xchg
add
fs
insb
outsl
outsb
gs
je
jl
pop
insb
outsl
arpl
and
pop
outsl
outsb
gs
je
arpl
pop
fs
gs
jo
imul
add
js
gs
pop
push
gs
pop
arpl
insl
outsl
outsb
add
add
outsb
jbe
imul
popa
je
outsl
outsb
add
inc
add
outsl
outsb
je
outsl
insb
data16
jae
add
inc
jb
popa
je
inc
imul
imul
jne
arpl
add
add
jb
outsb
inc
add
push
add
fs
gs
jne
arpl
add
gs
imul
gs
push
add
jp
outsl
push
gs
jne
arpl
add
jb
popa
je
add
mov
push
jb
arpl
fs
jae
add
add
imul
outsl
jne
arpl
add
inc
gs
outsl
fs
gs
imul
add
jg
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
gs
jo
popa
je
inc
add
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
mov
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
imul
outsl
arpl
jae
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
outsb
add
push
gs
js
gs
imul
gs
add
push
gs
outsb
push
gs
js
gs
imul
gs
cmp
dec
jae
bound
addr16
jb
jae
outsb
je
mov
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
filds
inc
gs
imul
je
add
inc
gs
jne
jb
outsb
je
push
dec
add
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
dec
inc
dec
xor
cs
insb
add
or
inc
gs
jne
jae
jb
outsl
jae
add
add
jae
popa
addr16
outsl
js
add
add
jo
imul
push
inc
push
xor
cs
insb
add
pop
add
gs
insb
inc
js
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
add
gs
add
add
inc
mov
incl
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
aam
add
mov
add
jge
add
cli
add
add
add
add
add
add
add
add
add
in
add
roll
add
mov
add
add
add
add
add
add
add
xchg
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
aam
add
mov
add
jge
add
cli
add
add
add
add
add
add
add
add
add
in
add
roll
add
mov
add
add
add
add
add
add
add
xchg
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
aam
add
mov
add
jge
add
cli
add
add
add
add
add
add
add
add
add
in
add
roll
add
mov
add
add
add
add
add
add
add
xchg
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
aam
add
mov
add
jge
add
cli
add
add
add
add
add
add
add
add
add
in
add
roll
add
mov
add
add
add
add
add
add
add
xchg
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
aam
add
mov
add
jge
add
cli
add
add
add
add
add
add
add
add
add
in
add
roll
add
mov
add
add
add
add
add
add
add
xchg
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
inc
add
addb
add
add
add
add
add
add
add
add
add
pop
add
orb
add
jo
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
or
add
add
add
pusha
add
sub
add
in
add
add
add
cld
loopne
add
and
add
add
add
add
add
add
add
add
in
add
add
add
mov
and
test
cmp
outsb
into
jmp
dec
xor
adc
add
dec
and
cmp
sbb
clc
xor
jecxz
add
inc
sti
push
hlt
test
sahf
pop
outsl
and
sbb
gs
push
out
les
jle
ja
hlt
and
push
adc
clc
pop
xchg
out
pop
jbe
out
and
or
loop
out
mov
mov
xor
add
inc
sbb
cltd
mov
xor
add
inc
sbb
cltd
mov
xor
and
out
lock
mov
sbb
pop
icebp
jne
fwait
xchg
jbe
and
jne
adc
test
bound
jg
repnz
inc
je
adc
adc
mov
jmp
dec
inc
ja
out
cmp
pop
in
aam
mov
or
into
leave
sub
add
push
bound
sbb
jge
sub
lret
in
rclb
mov
call
inc
jge
ret
xor
xchg
mov
ja
mov
mov
adc
bound
in
adc
iret
sti
addr16
pop
ss
aad
push
lcall
add
or
cltd
sarl
sub
lahf
or
mov
lds
mov
dec
arpl
mov
or
outsl
xchg
and
push
cli
std
mov
lea
mov
out
jo
pop
test
js
jnp
stos
jp
inc
mov
pop
ds
push
pop
scas
sub
pop
mov
lock
mov
lock
je
xchg
jp
xchg
incb
loopne
jb
dec
call
iret
mov
sbb
mov
loope
das
out
sarl
inc
test
push
imul
push
cmpsl
ror
int3
cli
call
imul
dec
add
movsl
push
fsubs
sub
sbb
inc
pop
or
xchg
imull
jge
ret
pop
pop
mov
scas
pop
ret
subb
mov
dec
inc
ja
out
cmp
pop
in
aam
mov
inc
ja
out
cmp
pop
in
aam
mov
inc
ja
out
cmp
pop
in
aam
mov
inc
ja
out
cmp
pop
in
aam
mov
and
sbb
cmp
rcll
gs
and
ja
out
cmp
pop
in
aam
mov
insb
add
loope
jo
cmp
jle
push
mov
adc
xor
out
aas
mov
dec
ret
loope
inc
js
in
xchg
push
mov
or
leave
push
pop
insl
popf
xchg
sub
mov
in
fiadds
test
add
xor
addr16
lods
lret
clc
sar
fs
xchg
cld
outsb
repz
sbb
in
xor
fadds
stos
pop
jns
dec
pop
inc
fsubrl
aad
ret
loop
xchg
repz
or
sub
mov
repnz
rcrl
pop
mov
ja
lods
insl
or
add
jle
movsl
fisubrl
movb
add
jle
movsl
fisubrl
movb
cltd
or
js
sub
je
cmpsl
neg
xchg
outsb
setns
outsl
sbb
jo
es
or
icebp
add
jle
movsl
fisubrl
movb
sbb
cmpsb
push
scas
mov
inc
out
out
fiaddl
mov
xchg
lahf
and
movsl
rcrl
icebp
xor
iret
or
mov
and
fwait
mov
mov
mov
sbb
insl
dec
into
enter
movsb
cld
xor
lcall
repnz
fdivp
push
leave
pop
sahf
jle
or
test
or
fwait
mov
cli
and
filds
lret
xor
testb
icebp
add
jle
movsl
fisubrl
movb
in
rcll
inc
cmp
mov
fsubrp
in
insb
scas
mov
xchg
outsb
mov
out
and
ret
ret
aas
sbb
addr16
insl
adcb
add
or
lods
xlat
push
inc
inc
out
jmp
mov
jge
cli
and
jbe
push
lcall
shlb
cli
cmp
daa
push
pop
in
add
jae
pop
dec
out
popa
sarb
mov
dec
shrl
mov
icebp
add
jle
movsl
fisubrl
movb
sahf
rcl
jmp
inc
pop
dec
daa
jnp
bound
dec
imul
in
out
addr16
ja
mov
sbb
repnz
std
mov
mov
or
or
mov
sub
stc
push
sub
mov
inc
push
jnp
in
jo
cmp
xchg
test
cmp
scas
arpl
insb
pop
mov
ds
push
or
mov
add
dec
xchg
mov
xor
test
push
in
sub
and
mov
add
add
dec
arpl
aaa
dec
and
jmp
mov
mov
ror
mov
inc
or
sub
cwtl
sub
and
sub
adc
and
sub
aad
mov
mov
pusha
les
push
mov
ja
xchg
add
or
xchg
mov
movsb
xor
add
cmp
popf
enter
and
sbb
cmp
mov
clc
inc
jp
inc
add
mov
frstor
dec
mov
cwtl
sub
std
sbb
add
pop
fistps
cli
mov
sahf
imul
mov
add
mov
mov
test
sub
mov
cwtl
push
cmp
addl
cmp
cmpb
addr16
outsl
nop
xchg
in
dec
call
sbb
add
movl
pop
adc
out
add
fildll
xchg
mov
cmpsb
lahf
mov
sub
cwtl
rorb
leave
aas
cmp
pop
mov
icebp
inc
inc
xlat
dec
mov
stos
testl
stc
add
or
xchg
call
pop
xchg
xor
mov
lret
add
mov
rclb
cltd
pop
add
cmp
inc
outsl
out
xchg
pusha
sahf
out
mov
inc
ficomps
es
mov
sub
dec
pop
cmp
cli
mov
xchg
mov
mov
inc
push
in
imul
popa
in
push
mov
adcl
int3
cmp
test
into
lahf
shr
xchg
ror
mov
jns
jmp
dec
jbe
out
sbb
dec
sub
sti
adc
dec
and
inc
ljmp
add
mov
cmpsl
mov
mov
mov
aaa
mov
pop
test
and
pop
out
cmp
xchg
inc
fstpt
clc
cli
mov
cmp
ss
and
or
stos
leave
inc
xchg
sbb
in
add
lret
push
or
inc
mov
mov
xchg
sbb
inc
andl
roll
jecxz
and
pop
in
mov
xor
dec
out
test
es
mov
mov
and
stos
mov
push
hlt
xchg
push
sbb
lret
xchg
dec
sub
jle
pop
xchg
nop
rorl
aad
dec
xor
push
inc
idivl
loop
jb
mov
sbb
add
test
adc
mov
push
lds
xchg
lods
out
int3
mov
push
test
orl
sbb
push
mov
in
mov
and
sub
nop
sbb
xchg
test
or
dec
push
sbb
jmp
enter
shlb
dec
pop
xchg
aad
sti
inc
ret
sahf
fnstsw
mov
addl
scas
xchg
inc
in
pop
lea
adc
lea
lret
call
xor
jnp
mov
push
inc
pusha
xchg
mov
movsb
push
popf
inc
push
cmpsb
lods
out
stos
addr16
aaa
data16
das
xor
fnstcw
inc
aas
ja
lahf
or
adc
loope
sahf
cwtl
cwtl
fdivr
aas
icebp
adc
setne
mov
xor
and
and
popa
push
xchg
test
dec
daa
jns
cmp
mov
test
iret
scas
dec
jno
call
std
cmc
and
rclb
es
lods
lcall
dec
fistpll
ret
jp
aas
lds
or
mov
arpl
rorl
test
xor
sub
mov
pop
dec
clc
push
pop
dec
test
lahf
test
mov
lret
sahf
in
pop
daa
and
mov
xorl
jae
push
mov
lret
and
xchg
push
pop
push
xchg
pop
inc
aad
lea
cltd
cmp
push
out
sbb
in
or
mov
push
ds
xor
mov
push
movsl
and
jl
sarl
mov
fcmovnb
cmc
cli
lods
mov
ret
ljmp
pop
push
inc
frstor
mov
je
cs
mov
scas
loope
in
lds
cltd
dec
cwtl
loopne
dec
and
push
xlat
repnz
imul
jp
inc
mov
nop
fdiv
adc
push
lret
mov
jmp
aas
inc
xor
cwtl
leave
jns
sarl
cmp
ss
cltd
sahf
xlat
pop
cmpsl
js
popa
out
cmpl
ja
lcall
enter
test
pop
jo
sbb
pushf
adc
roll
mov
fistpll
insb
jp
out
and
pop
frstor
mov
pushf
cmp
cwtl
insl
lahf
call
lret
sub
ss
lea
cmp
xlat
movsb
mov
data16
aas
mov
or
inc
je
data16
push
ror
pop
and
roll
lods
mov
inc
dec
mov
fmull
dec
xchg
adc
mov
pushf
orl
rcrl
sbb
divb
iret
orl
iret
les
ljmp
imul
mov
push
mov
sub
sub
popa
lss
cwtl
push
adc
dec
mov
push
jmp
jecxz
test
dec
push
das
hlt
dec
push
mov
movsl
xchg
call
cmpsb
int3
sbb
stos
lock
push
lret
xlat
movsb
fwait
incb
push
xor
in
xor
fcmovb
aam
sbb
mov
fs
mov
inc
outsb
rorb
in
inc
add
adcl
mov
xorb
inc
xchg
and
dec
dec
mov
and
or
lret
pop
add
inc
filds
xorl
std
mov
adc
pop
jnp
in
xchg
int
xor
mov
repz
lret
loope
jge
xlat
xchg
stos
mov
sub
lods
nop
or
mov
out
cltd
outsb
or
test
pop
cmpsl
lret
out
into
pop
pop
jo
lcall
je
mov
fldt
xor
insl
inc
cmpsb
lcall
out
or
jno
mov
stos
cltd
outsb
nop
out
ss
xchg
xor
test
pop
cmp
inc
mov
repz
add
inc
jecxz
mov
inc
shl
push
out
mov
lret
ss
jmp
add
shl
cwtl
mov
sbb
push
and
in
add
fbstp
out
xchg
lea
jg
cmp
aas
lock
mov
push
in
mov
pushf
xor
cmpsl
notl
or
lea
test
inc
in
push
xchg
leave
mov
in
xchg
xchg
cwtl
add
mov
cmp
mov
fisttpl
movsl
std
imul
lods
add
push
into
adc
and
repz
or
xchg
int3
mov
mov
rolb
shll
decl
ret
pop
in
dec
data16
sbb
jbe
xchg
lcall
es
and
or
subb
fnstenv
test
and
push
clc
mov
loope
add
or
imul
fs
and
xchg
fidivl
mov
cmp
mov
mov
or
in
jg
xor
jg
mov
das
fidivl
push
cvtps2pd
mov
inc
jo
sbb
and
lock
adc
cmp
xor
sbb
inc
fisttpll
xchg
jo
addr16
in
push
lock
mov
dec
out
mov
out
push
add
adc
pop
jg
cmc
cmpsb
adc
sbb
sub
flds
fdivs
cli
in
adc
es
aad
jp
sbbb
push
dec
dec
lcall
jl
cmp
mov
push
or
into
pop
lcall
jnp
ds
or
jns
fidivrs
imul
inc
xchg
fstl
call
push
repz
sbb
frstor
or
lcall
xchg
in
clc
ret
inc
clc
xchg
push
mov
leave
mov
mov
sbb
lret
lds
les
test
sub
dec
out
lret
sbb
js
pop
cs
shrb
push
mov
aas
lds
or
pop
push
enter
lods
pop
ja
pop
les
rcll
enter
push
sbb
pop
clc
sbb
push
aas
jo
mov
stos
fistpl
or
cmpsl
js
icebp
mov
lods
cmpsl
sbb
xchg
inc
loope
push
xchg
imul
aas
cmpsb
xchg
lods
sbb
jbe
sub
and
fstpt
mov
hlt
push
pop
or
xor
jmp
push
dec
mov
es
es
xchg
xchg
imul
sti
push
ficompl
loop
mov
mov
mov
fcomp
xchg
fildll
adc
and
cs
cmp
xor
inc
push
mov
fld
xchg
cwtl
icebp
orl
scas
pop
fildl
out
dec
and
outsl
test
adc
out
scas
scas
add
mov
cwtl
lahf
jno
pusha
int3
jp
aaa
xchg
sbb
jge
mov
subl
cld
jmp
rorl
xchg
jmp
test
lds
mov
sbb
jae
inc
jg
jbe
ds
xor
push
mov
xchg
pop
sub
movsl
mov
push
push
test
mov
cmp
inc
jne
mov
fadds
dec
rorl
mov
cmpsb
mov
repnz
sbb
lahf
ja
sbb
add
or
push
lods
fnstsw
testb
and
inc
aad
dec
jnp
jne
push
ficompl
inc
mov
adc
js
fucomi
xor
fmull
mov
shlb
in
inc
cwtl
cmpsl
ret
sbb
jg
inc
leave
pop
sbb
xor
mov
add
push
pop
dec
fidivl
in
jmp
mov
mov
test
add
stos
adc
xor
hlt
clc
ds
aaa
sub
adc
xchg
jb
xchg
aad
out
add
sti
sub
lret
lea
sahf
lahf
and
fcmove
hlt
lahf
hlt
mov
fisubl
js
xchg
lea
dec
in
jge
pop
ja
pop
ss
pop
jl
lret
out
xlat
xor
inc
sub
push
rcrb
pop
shr
lret
mov
jo
scas
out
mov
icebp
pop
and
push
sarb
mov
mov
push
inc
out
push
test
in
arpl
dec
adc
bsf
in
and
fidivs
mov
dec
testb
pushf
cmc
jl
cmp
jge
subb
push
pop
lcall
adc
xchg
aad
outsl
sub
inc
inc
push
dec
mov
sti
filds
jns
mov
out
push
xchg
and
call
and
cltd
cmp
xchg
pop
cmpb
xor
cwtl
rol
mov
sar
jecxz
mov
outsb
xchg
addl
jecxz
and
add
jl
or
adc
xchg
fs
pop
and
cmp
pop
cmp
out
into
pop
xchg
push
imul
iret
fs
jp
or
cld
sub
std
cli
cmp
lods
cld
repz
mov
mov
xor
or
aam
out
loop
xchg
sbb
popl
xchg
xor
outsl
mov
and
dec
sti
sar
pop
mov
inc
stos
sub
pusha
mov
xorl
mov
push
es
dec
popa
push
sub
xchg
stos
sbb
test
test
mov
shrb
fsubl
sub
js
xchg
push
cwtl
xor
js
jmp
sub
cmp
mov
push
sub
xlat
xchg
sub
imulb
mov
jbe
add
jmp
or
adc
xchg
and
dec
and
dec
notb
push
or
xchg
sub
movsl
sub
pop
cwtl
arpl
or
jne
iret
xchg
jge
loopne
decl
jo
pop
mov
push
xor
push
shl
insl
pushf
mov
lea
shl
cmp
loop
cmp
stos
int
int3
add
scas
jne
mov
jno
add
pop
lock
jge
push
adc
insb
xchg
inc
sti
gs
nop
pop
sbb
in
stc
ret
jb
pop
push
add
dec
mov
scas
daa
ficoml
test
into
fmul
push
xor
std
pop
test
ljmp
jne
push
subl
repz
mov
xor
ret
mov
std
sub
sbb
shlb
sbb
jo
fisubl
fldenv
out
adc
enter
inc
gs
xor
xchg
jnp
mov
clc
rcrb
xor
fistpll
rcrl
je
insb
ss
out
hlt
jnp
mov
sbb
add
add
sub
ja
push
cmp
dec
push
aam
imul
cltd
push
cmp
aad
mov
out
jbe
addr16
cmp
xor
or
mov
hlt
sub
mov
push
add
cmp
leave
mov
lods
scas
xor
xchg
pcmpgtw
jbe
fldt
ljmp
sub
cmpsb
add
negl
sub
mov
or
dec
cmp
cmp
xor
dec
or
dec
inc
fldenv
and
int
lods
dec
popf
mov
add
mov
xor
dec
inc
jns
mov
cmp
pushf
or
ret
xchg
mov
cmp
push
test
mov
adc
add
repz
xor
loope
out
inc
adc
and
nop
cmpsb
in
cmp
inc
or
daa
inc
mov
push
lret
and
repz
imul
jg
cld
rcll
push
sub
xchg
xor
sub
push
addr16
std
cs
jb
jle
mov
mov
add
or
insl
push
xor
inc
aad
test
test
lret
push
cmp
push
xlat
or
push
ret
aam
mov
dec
add
fidivl
stos
clc
cmp
inc
mov
dec
jmp
mov
nop
sahf
mov
scas
dec
add
out
dec
jo
sbb
lods
mov
in
add
pop
mov
out
inc
sbb
push
das
push
mov
mov
test
pop
imul
lret
psllq
push
xchg
mov
adc
mov
mov
pop
add
mov
mov
popl
movaps
ror
addr16
sub
shlb
add
push
mov
jbe
sbb
push
jl
cli
pop
xchg
cld
mov
icebp
frstor
push
test
out
dec
frstor
xor
mov
cmc
push
mov
jae
jae
fsubrs
push
scas
sub
inc
rorl
sti
int3
pushf
popf
shll
punpcklwd
loope
test
repnz
mov
scas
repz
inc
dec
mov
arpl
in
enter
repz
mov
xor
outsb
scas
movsb
stos
dec
in
jge
mov
mov
in
popa
out
test
sbb
push
outsb
int3
nop
push
push
pop
xchg
dec
xor
cmpsb
lret
inc
xchg
mov
out
sbb
xchg
and
loopne
nop
mov
ljmp
adc
push
add
mov
mov
cli
nop
popf
adc
and
test
rorl
into
lods
pop
das
pop
and
pushf
leave
inc
cmp
outsl
mov
add
xchg
push
nop
test
jne
dec
cmp
push
and
push
mov
test
into
mov
aaa
dec
push
and
lret
cwtl
sub
fisttps
insl
xchg
cs
jge
jnp
lcall
push
enter
fildl
adc
aaa
out
xor
dec
arpl
adc
sbb
in
lods
movb
pop
cmp
ja
inc
fcoms
hlt
sbb
loopne
lods
popf
fwait
or
repnz
jns
call
test
mov
dec
mov
adc
add
jmp
or
push
mov
cmpsl
movsl
sti
movsl
or
ljmp
mov
xchg
lods
cmc
adc
mov
jp
stos
jge
out
loope
pop
dec
and
incb
or
mov
inc
or
and
pop
cli
jnp
jno
jmp
cld
inc
inc
ljmp
int3
loope
pop
cmp
push
stc
stos
lahf
cmp
sbb
sub
pop
mov
ss
sbb
arpl
mov
out
adc
or
outsl
xor
cld
ret
loopne
pop
js
mov
repz
pop
mov
mov
push
test
push
or
xchg
dec
inc
mov
repnz
dec
stc
push
push
pop
je
xor
shll
sbb
cmp
stos
push
or
out
push
adcb
daa
call
cmpsb
in
mov
pop
das
inc
ret
adc
pushf
xor
pop
pop
cmp
loope
jo
push
lock
aad
jno
daa
int
adc
push
lret
cmp
hlt
ret
xor
fsubrp
cmp
aaa
insl
pop
repnz
sahf
cmp
ficoms
jne
mov
jb
add
adc
push
call
jo
mov
push
lock
push
sub
icebp
dec
lcall
inc
loope
dec
push
pop
mov
lea
rol
loopne
mov
cmp
dec
inc
pop
xchg
fistps
add
dec
sbb
and
sub
mov
mov
cmpsb
loope
inc
cmpsb
out
cwtl
and
stos
adc
add
cmp
adc
or
sub
shlb
stos
into
bound
and
push
sti
mov
sbb
movsl
rorl
dec
pop
ds
fwait
in
nop
cmp
testl
fadds
push
jnp
xlat
jnp
cs
pusha
fisubs
movsl
stc
jno
mov
shrb
or
push
cmpsb
leave
fimuls
pop
inc
test
jecxz
push
mov
or
faddp
call
rclb
or
in
cvtps2pd
pop
aam
cmp
add
stos
push
in
push
mov
push
add
xchg
push
sub
jno
adc
mov
mov
xchg
nop
test
pop
jns
jne
hlt
shlb
data16
ljmp
loopne
js
inc
cmpb
sbb
cwtl
mov
sub
xor
xchg
sub
xchg
sbb
stos
fdivs
push
jae
int
dec
test
mov
sub
add
ja
mov
add
mov
xchg
into
movsb
scas
pop
cmp
lret
push
or
stc
jae
out
xchg
xor
shll
in
loope
jno
stos
push
pop
popa
sub
cmp
mov
icebp
sub
movsb
loopne
dec
sub
pop
sahf
xchg
cmpsl
cmc
jns
jbe
xchg
xchg
mov
lock
je
stc
xchg
mov
and
pop
and
out
push
fsub
repz
and
lret
loope
cmp
lds
pop
fucomi
push
jmp
in
scas
jge
jns
std
js
mov
divb
arpl
pop
je
icebp
add
fbstp
gs
fstps
inc
in
mov
outsl
mov
mov
frstor
jmpw
ds
je
adc
push
loop
or
pop
push
dec
dec
dec
int3
repz
nop
lock
push
iret
repnz
lods
add
aas
xchg
outsb
xorb
aaa
test
xchg
mov
icebp
popf
xor
cwtl
xchg
into
rcll
fildll
repz
mov
aas
mov
add
aam
pop
fmull
hlt
sahf
outsb
mov
and
push
scas
into
pusha
movsb
sti
mov
sbb
pop
rcll
ds
js
fsubrl
add
xchg
cmp
or
int3
and
out
pop
jl
push
inc
jecxz
fsub
aaa
sub
in
dec
ss
in
sub
iret
negb
cli
fistpll
lret
xchg
xor
push
out
jb
sarl
xor
test
inc
lock
stc
adc
cmp
xor
mov
push
and
mov
inc
aam
lds
popf
pop
jno
xchg
dec
popa
jle
dec
int
add
jle
xchg
lock
xor
xor
adc
dec
cmp
and
pop
mov
jo
test
notl
hlt
in
inc
arpl
push
pusha
cmp
stos
add
rorb
jge
cmp
fisttpll
cwtl
test
outsl
sub
xchg
jge
lds
xor
push
mov
cmovo
inc
mov
sub
les
or
iret
popa
mov
cs
add
fisubl
xor
pusha
add
and
cltd
inc
cmpsb
jb
add
fsincos
ret
jno
rcll
xor
nop
push
addr16
push
push
or
xchg
adc
in
push
rolb
cmp
sub
icebp
xor
loopne
ljmp
cmp
sbb
jge
xor
lahf
mov
cmp
push
loopne
es
and
sbb
enter
jbe
adc
mov
lret
and
lahf
paddusb
mov
lods
repz
psrld
mov
jbe
jmp
fs
jo
adc
aad
pop
dec
in
push
push
sbb
or
xchg
sub
aam
movsl
mov
out
test
popa
addb
insl
jae
and
add
scas
out
mov
cld
clc
lods
jo
fisubl
mov
or
es
add
push
fcoml
outsl
xchg
or
sbb
call
jp
rorb
dec
inc
das
pop
fcoms
invd
repnz
bound
pop
mov
jno
jl
lret
enter
jae
bndstx
xchg
jp
push
inc
cmp
aaa
pop
or
adc
fucomip
fiadds
or
out
inc
cmp
shll
fsubrl
hlt
sbbb
and
bound
mov
lds
add
fldpi
mov
pop
lret
lds
ficomps
and
pop
aam
cmp
xchg
cmp
ficomps
cltd
jo
jecxz
fisubrs
inc
repnz
mov
movsl
iret
dec
rcrl
mov
call
ljmp
js
js
popf
sbb
mov
rclb
xor
addb
or
cmc
je
jle
mov
fcomi
add
iret
das
loope
jg
and
ret
add
push
xor
aaa
sbb
les
pusha
cmp
cli
addr16
mov
pop
sub
mov
call
imul
push
adc
pushf
push
pusha
sub
cmp
mov
imul
mov
jae
dec
imul
movq
and
adc
ret
mov
xchg
rcrb
push
cli
lods
sti
and
push
mov
mov
mov
jns
push
out
insl
jp
gs
cmp
cwtl
and
fcmovbe
mov
push
ret
mov
cmpsb
insl
push
lret
ss
jb
push
sub
in
dec
lcall
in
in
xchg
and
dec
or
movl
inc
andb
push
arpl
push
sbb
ret
stc
rorb
mov
pop
lea
cmp
push
ja
out
mov
add
push
test
jp
or
cmpb
cmp
rclb
dec
pop
add
mov
mov
and
sub
sarb
in
mov
adc
filds
push
jmp
jmp
push
in
xlat
call
popf
mov
push
movsl
dec
mov
cs
xor
roll
popf
and
pushf
dec
mov
es
in
push
ljmp
mov
stos
or
rorb
mov
xchg
stos
sbb
aaa
mov
mov
jno
sub
shl
dec
or
sar
movsb
ja
add
sbb
mov
int3
pop
addl
ss
cwtl
sub
mov
insb
stos
cmpsl
xor
imul
jae
push
or
cmp
fdivr
inc
inc
ror
std
sbb
int
les
fstl
dec
icebp
enter
cmpsb
outsb
cs
hlt
les
inc
xchg
fnsave
mov
jne
cli
in
cmpl
clc
out
mov
movl
iret
or
dec
push
mov
xor
das
subl
cltd
sub
xor
pop
into
dec
insb
jmp
dec
fucomp
repnz
ljmp
orb
xchg
cmp
sahf
mov
dec
rorb
mov
mull
movsl
dec
mov
jge
insl
xor
lods
push
shlb
pop
dec
daa
cmp
mov
lods
push
and
mov
rolb
fnstcw
push
cmc
iret
pop
adcl
popf
xlat
mov
lret
pop
bound
das
mov
xor
pop
imul
fwait
and
fwait
daa
arpl
std
inc
sub
jo
xor
push
roll
and
aaa
jmp
addl
icebp
in
add
push
jnp
fimuls
lcall
std
adc
cmp
enter
cld
dec
cmp
xchg
ljmp
subl
sbb
mov
cld
mov
shrb
push
dec
mov
nop
push
inc
pop
les
or
sbb
mov
mov
movsb
pop
push
fidivs
xor
cli
push
insb
std
jle
push
add
fsubs
jecxz
cmp
cmp
imul
xchg
addr16
fildll
dec
xchg
ja
aas
int
and
cmp
ret
out
pusha
jmp
adc
adc
cs
testb
ret
pop
test
push
les
jle
push
shrl
add
or
push
ss
loopne
out
push
mov
mov
stos
enter
push
push
inc
out
mov
scas
notb
mov
mov
xchg
and
xchg
mov
push
icebp
sbb
cmp
icebp
ret
push
mov
pop
icebp
sbb
push
out
scas
push
cmp
dec
and
js
subl
xchg
dec
sbb
ret
lret
repz
or
loopne
pop
jmp
mov
mov
stos
cmp
iret
jae
sbb
ljmp
mov
pop
in
cld
mov
mov
shlb
or
pop
jnp
loope
out
jb
pop
cs
adc
ret
xlat
rclb
pop
shl
ja
jg
shrb
adc
push
stos
out
das
cmp
test
cmpsb
jbe
inc
jno
push
jmp
in
sub
addr16
xor
loope
mov
cmpsb
popf
dec
pandn
outsl
dec
test
mov
push
pushf
outsl
ret
jns
fdivr
insb
sbb
adc
movsb
in
mul
pop
sub
add
movsb
push
mov
adc
dec
test
ror
out
loopne
jl
mov
jmp
or
jg
sbb
xor
loope
cs
add
clc
xor
push
mov
mov
cmp
mov
xor
pop
cmp
std
decb
test
cmc
movsl
or
xchg
xor
push
dec
mov
jno
call
mov
fwait
adc
adc
sahf
push
gs
movsl
sub
mov
jmp
inc
nop
xchg
out
pusha
ds
sub
push
or
imul
mov
mov
pop
xchg
push
mov
imull
or
mov
sub
or
jns
pop
sbb
je
fildl
nop
add
xor
cmp
pop
jecxz
cltd
xchg
mov
bnd
repz
inc
sub
xchg
and
mov
push
les
mov
lret
push
push
fcmovbe
jno
pop
fwait
mov
mov
popf
mov
push
cld
cmp
les
jnp
xchg
mov
adc
mov
mov
sub
sahf
fiaddl
push
xor
fisubl
int3
dec
in
dec
leave
mov
out
or
popl
push
insb
enter
pop
testl
xor
shll
popa
mov
mov
pusha
pop
sbb
cwtl
mov
out
ret
movsb
inc
jge
mov
and
mov
sbb
imul
subb
cmc
jl
into
arpl
les
push
nop
push
les
shrb
pop
cmpsl
sub
push
cmp
data16
cmp
and
mov
movsl
xchg
scas
add
push
push
notb
push
cmpsl
int
out
pop
adc
sbb
mov
ljmp
pop
dec
or
imul
hlt
cltd
push
pop
inc
out
add
mov
fstps
fadd
xor
jecxz
sub
gs
aam
or
lea
xor
jl
cmp
test
stc
mov
add
jmp
mov
add
cs
push
pop
jno
xor
mov
popa
inc
scas
pop
jno
xchg
sub
rol
insl
jmp
push
sub
cmp
xchg
mov
cltd
sbb
sbb
jns
pop
jg
sbb
inc
add
inc
lcall
lcall
enter
je
dec
adc
xor
dec
repnz
outsb
adc
and
dec
pop
in
js
jp
dec
sbb
in
jg
or
stos
pop
aaa
fldcw
ficoms
jp
pop
or
lcall
inc
insl
push
iret
into
aaa
popf
or
xor
jmp
dec
pop
or
and
in
cmc
test
or
int3
faddp
xor
xor
sarb
lea
inc
push
xchg
imul
sub
addr16
or
imull
mov
fldt
call
sti
icebp
ss
sbb
mov
jne
jecxz
xchg
dec
ja
jg
test
jl
pop
jb
add
pusha
js,pn
ficomps
out
dec
and
cmc
ds
xchg
sti
aad
adc
stos
jp
scas
sbb
dec
mov
rcrl
daa
add
mov
insl
jo
adc
jo
dec
leave
pop
mov
xchg
aas
mov
fisttps
add
pop
negb
pop
lods
sbbl
and
push
cmpsb
jne
mov
cwtl
mov
or
mov
mov
push
push
lock
hlt
xchg
adc
cwtl
movsb
aaa
fsubrs
pop
gs
add
cs
pop
stc
jg
jecxz
scas
imul
dec
sub
daa
dec
jmp
lock
cltd
add
push
lods
imul
push
loop
nop
pop
push
mov
mov
ljmp
outsb
sbb
push
pop
mov
in
lock
mov
jnp
jp
push
mov
xchg
pop
push
inc
lret
out
shrl
jnp
ljmp
lret
push
mov
sbb
daa
mov
lahf
sbb
add
push
mov
addr16
add
pop
js
and
dec
enter
adc
sbb
bound
and
rorb
cmp
mov
xlat
pushf
ficomps
sub
sbb
in
ficoml
xor
push
iret
adcb
inc
outsb
cmp
andl
sahf
lahf
lcall
cmp
adc
cli
hlt
aas
std
clc
jae
xchg
shlb
js
inc
sub
out
sahf
out
cmpsb
adc
gs
andb
cli
insl
push
xchg
fs
outsb
cmc
outsb
pop
std
or
fisttpll
test
sub
jp
roll
out
jno
cmp
out
sub
pushf
push
cli
pop
aas
sub
mov
jnp
jg
and
fldl
sti
aaa
out
xchg
add
fisubrl
cmp
mov
loop
lods
outsl
sbb
daa
repnz
or
jno
cmp
sahf
aaa
rclb
jmp
dec
mov
cld
mov
mov
in
adc
push
jge
mov
sub
inc
inc
aas
inc
outsb
popl
add
inc
push
js
lret
fistpl
sub
call
jns
sub
mov
mov
mov
jns
or
iret
cmpsl
pop
fidivrl
lods
adc
mov
leave
cmp
lret
push
aaa
aam
xchg
cwtl
push
add
icebp
in
add
pushf
aad
xchg
pop
mov
test
lahf
mov
inc
stos
xchg
adc
cmc
fstps
imul
and
ljmp
push
jno
cli
push
jg
jb
shll
pop
subl
sbb
das
rclb
push
cltd
mull
jno
cwtl
push
cmpl
add
push
jg
scas
mov
pushf
mov
jmp
imul
mov
fwait
cmp
lods
mov
lahf
hlt
push
jmp
mov
pop
iret
pop
movsb
shrl
mov
inc
mov
add
icebp
xlat
adc
out
mov
orl
push
sub
imul
pop
leave
loop
faddl
jnp
mulb
xor
cli
xchg
push
mov
fisubrl
call
inc
arpl
sbb
data16
adc
cmp
popl
mov
xor
lret
insb
jne
ret
xor
int3
jne
xchg
cld
and
dec
push
mulb
int
mov
andb
adc
int3
insl
add
adc
mov
enter
sbb
sub
fnstcw
pop
sbb
dec
xchg
xchg
dec
dec
mov
and
es
adc
adc
imul
leave
mov
jecxz,pt
jae
out
std
dec
jno
sbb
punpcklwd
fidivrs
loop
repnz
out
loope
xor
dec
sbb
ror
jle
sarl
pushl
std
cmp
sbb
adc
cmp
sbb
stos
sub
add
addl
pushf
push
and
push
inc
pop
addr16
add
and
and
adc
xchg
in
pop
in
clc
gs
jno
imul
pop
xchg
rcll
outsl
rcrb
mov
lds
add
dec
mov
dec
or
les
inc
mov
hlt
fcompl
lods
push
shlb
push
shrl
xor
shl
xchg
data16
pop
ja
mov
scas
nop
enter
sbb
loopne
xchg
lret
arpl
ja
inc
cmp
rcl
add
iret
ja
inc
ljmp
int3
mov
add
enter
inc
loop
cmp
or
mov
add
sub
and
or
xor
mov
das
fnstsw
movsl
push
sahf
lods
aad
ss
jns
push
mov
jns
xchg
cli
pop
mov
into
push
mov
xor
stos
out
jmp
pop
cmp
xchg
add
out
lahf
shld
aam
loopne
repnz
push
cwtl
mov
loopne
leave
scas
add
lret
aam
stos
lods
in
jge
loopne
lahf
pushf
jae
push
push
and
fldcw
jecxz
clc
std
cmp
mov
loope
out
adc
add
movsb
or
xor
inc
or
fmul
fwait
mov
push
pop
shrl
leave
dec
mov
add
sub
or
push
leave
add
ljmp
fidivrl
out
cmp
pop
adc
inc
xlat
daa
cmp
xchg
into
repnz
dec
rcll
or
outsl
mov
leave
push
mov
sbb
std
mov
mov
fidivl
mov
out
adc
mov
lcall
hlt
in
loope
fs
and
imul
fidivrs
fisubrl
mov
loopne
fnstenv
pushf
sbb
mov
pop
in
pop
push
or
inc
mov
xlat
xchg
jne
xchg
jbe
mov
or
jo
and
pop
fmul
mov
mov
xor
rolb
adc
lahf
orl
fs
pop
mov
pop
push
js
pop
mov
fisubs
in
and
lea
mov
adc
fldcw
and
test
and
pop
ret
dec
daa
js
cld
dec
std
repz
pusha
das
inc
xchg
dec
dec
outsb
lret
jp
pop
jge
sub
dec
pop
nop
dec
pop
daa
and
mov
lods
sub
xor
or
sbb
outsb
rcr
lret
loopne
lahf
mov
gs
and
out
cli
adc
jns
mov
sub
push
jl
js
xchg
negb
enter
xor
mov
outsl
ja
push
pop
fcmovb
popa
fidivl
xorl
fistpll
lcall
jmp
insl
ficompl
shll
jne
add
mov
add
sbb
pushf
sub
rol
and
add
ja
jae
push
or
loop
mov
lcall
sub
dec
push
daa
loopne
cs
push
scas
mov
xchg
jge
cltd
ds
pop
jae
mov
out
xchg
xchg
xchg
add
push
rcrb
cmp
jns
mov
out
jno
inc
arpl
incl
mov
push
imul
rorb
pop
sbb
jo
sbb
xchg
xor
push
mov
loope
jmp
lea
and
push
in
incb
xor
sbb
insb
lcall
adc
fwait
push
mov
dec
xchg
mov
inc
mulb
mov
and
bound
neg
out
xchg
xchg
cwtl
mov
movsl
fdivrl
ds
inc
popf
cli
pop
xchg
xor
hlt
mov
add
jl
xchg
ret
clc
jmp
movsl
in
fs
jns
sbb
sbb
jo
out
outsl
lock
fs
cs
jle
or
xchg
insb
mov
mov
or
fbld
lret
test
movsb
loopne
out
and
jecxz
pavgb
cmp
fadds
roll
fnstenv
int
dec
sub
pop
lcall
push
outsb
rclb
jne
pop
stos
mov
mov
shufps
adc
mov
leave
mov
stc
pushf
call
jbe
scas
data16
hlt
adcl
outsb
mov
scas
jns
into
es
int
inc
shrl
enter
cltd
mov
xchg
mov
or
pop
pop
test
es
pop
js
and
inc
dec
fstps
ffreep
stos
dec
jns
popa
lods
pop
jbe
int
inc
xchg
xchg
xchg
jae
mov
jo
movsb
mov
jnp
stos
pop
orl
jnp
pop
and
cmc
mov
jbe
add
mov
inc
push
adcb
aas
outsb
jl
lret
ljmp
and
cmp
pop
out
jbe
pop
dec
pop
dec
adc
sahf
mov
jp
jmp
ret
testb
sahf
dec
cmpsl
mov
mov
shll
cs
jae
sti
pop
xor
iret
add
push
pushf
fadds
cltd
xchg
adc
into
cli
clc
cmp
rorb
pop
das
mov
or
pop
lods
sub
divl
jo
dec
in
jp
outsb
roll
les
gs
enterw
lods
cmp
test
jp
adc
mov
inc
adc
aaa
hlt
jnp
mov
add
sahf
test
loopne
imulb
aaa
jl
mov
mov
adc
adc
mov
stos
in
cld
dec
push
into
inc
cmp
xchg
icebp
cmp
or
inc
or
pop
mull
das
leave
push
mov
mov
and
push
les
jne
sbb
cmp
fscale
mov
call
cmpsb
jge
out
mov
sbb
inc
xchg
pop
jmp
pop
insl
leave
mov
lock
mov
sbb
insb
xor
dec
imul
fs
dec
jmp
jmp
rcrl
dec
out
repnz
std
pop
adc
cs
clc
shlb
mov
push
jg
loope
xor
xchg
jns
imul
jns
rcrl
push
push
cmpsb
aas
lock
pop
adc
cmp
mov
jle
stc
lea
sbb
or
jmp
xor
jbe
or
fwait
pop
js
sub
clc
iret
sub
jb
pushf
add
push
adc
adc
loopne
mov
add
add
test
pusha
cmpsl
insl
cwtl
inc
xor
adc
sub
xchg
jl
ror
adc
jne
push
jbe
dec
in
cs
add
push
adc
lret
fldenv
xchg
xchg
mov
cmp
mov
aaa
dec
in
out
mov
cli
dec
xchg
push
xchg
pop
jmp
xor
adc
les
adc
stos
inc
pop
xor
rorl
mov
jb
movsb
lret
mov
ss
lods
jbe
in
mov
xorl
add
xor
das
push
jb
rol
ss
and
aam
or
push
adc
push
dec
lcall
clc
loop
ret
rorb
inc
lods
mov
add
fadd
lock
dec
insl
imul
mov
jbe
jmp
imul
xlat
push
adc
loope
icebp
imul
into
loopne
out
mov
xor
cmp
inc
or
mov
pushf
mov
dec
aas
jae
push
into
pop
out
shlb
or
jne
cmp
xchg
dec
dec
add
shll
scas
xor
xor
test
and
loope
or
cmc
and
and
jae
bnd
mov
fucom
mov
cmpsl
adc
xor
int
stos
and
stos
and
sti
pop
sbb
movsb
jnp
lds
adc
and
push
mov
sar
add
mov
xchg
mov
test
mov
jle
imull
andl
sti
dec
cmp
or
dec
rcll
pop
inc
push
sahf
cmp
push
int3
push
push
scas
lods
sbb
jmp
scas
xchg
pop
or
xchg
sub
or
out
cmp
pop
xchg
pusha
cmp
les
add
adc
or
push
pop
fists
mov
in
jl
out
stos
cmp
adc
jno
mov
scas
mov
cmp
nop
int
sbb
insb
insb
and
hlt
or
out
ja
mov
pand
xchg
in
mov
lcall
dec
lods
or
mov
lahf
lcall
adc
sub
push
call
dec
popa
hlt
cmpsb
dec
mov
add
in
mov
outsl
sbb
dec
lret
insl
jnp
jnp
js
sub
negb
movsb
dec
cli
push
and
sbb
inc
fiadds
jae
in
scas
cmpsl
out
pminub
pop
imul
ds
jge
jge
sbb
ret
int3
xchg
and
jmp
shlb
cld
jbe
inc
loop
setne
stc
jns
test
insb
cmpsl
or
pushf
mov
pop
lock
pop
fwait
jmp
push
xor
js
pop
fldl
inc
mov
inc
in
mov
ds
testb
add
pop
mov
call
ret
or
push
cltd
out
cmc
bound
out
sahf
dec
mov
inc
add
inc
call
mov
mov
push
pop
shl
xor
push
hlt
or
or
push
or
insl
xor
pop
xchg
jbe
mov
dec
inc
sub
sub
cli
jmp
imul
mov
mov
mov
popa
push
hlt
lcall
movb
ss
jae
cmp
jge
jnp
popf
adc
sbb
lock
xchg
xchg
jge
dec
dec
cmp
fnstsw
pop
dec
adc
jge
out
jno
call
dec
inc
xchg
xorb
pushf
mov
inc
out
push
xor
movsl
cld
js
popa
pop
es
pop
cmp
int
fmuls
stos
std
cmpsb
mov
in
aaa
scas
add
jo
outsl
stos
daa
shll
push
sbb
cmpsb
jo
adc
lahf
rcrb
shll
mov
testb
and
cli
mov
pop
xchg
dec
out
push
dec
push
enter
or
scas
inc
cmpsb
mov
cld
push
xchg
rcll
call
scas
stos
sbb
lret
lods
xchg
cwtl
fldcw
nop
jmp
es
inc
call
jbe
xor
sbb
inc
jmp
xor
push
mov
shll
in
repnz
pop
rol
cmc
sub
jg
mov
jecxz
stc
jg
inc
and
inc
imul
scas
mov
enter
in
xchg
sbbb
loop
ss
in
shl
sub
push
push
outsl
sub
jae
bound
int3
bound
add
imul
inc
jnp
inc
jo
dec
lahf
dec
imul
mov
fstpt
call
adc
pop
sahf
cmp
pusha
push
or
out
xor
xor
mov
cmp
subb
mov
ss
push
stos
leave
mov
shlb
shrl
mov
popa
pop
in
jne
out
dec
fcmovu
dec
je
aas
or
and
xchg
sub
inc
or
movb
mov
dec
sbb
cmp
test
push
sub
in
outsl
data16
rcrl
out
fs
jp
mov
cbtw
adc
mov
out
xlat
and
inc
loope
enter
sbb
mov
pop
mov
push
sub
or
ficompl
popa
sub
sti
cmp
fadds
or
xor
ja
std
and
pshufw
xor
jae
cmpsb
mov
pushf
pop
lods
xor
les
dec
popf
bound
push
popl
xchg
lret
xchg
popf
xor
scas
lret
pop
xor
fstpt
cmc
std
rorb
insb
cmc
loopne
push
repnz
jmp
mov
jg
enter
andb
push
push
outsb
aas
xchg
pop
push
cmpsb
movsl
xor
jo
insb
ljmp
aam
or
sti
in
rorl
lods
cli
or
enter
xchg
cli
jl
jae
pop
subl
push
or
xchg
lds
dec
lret
mov
mov
sub
lods
push
mov
pop
fdivp
lock
xchg
imul
sbb
lods
dec
repnz
fimuls
adc
imul
cmp
push
dec
rcrb
scas
mov
lock
sbb
ljmp
add
pop
out
dec
imul
sub
idivb
sbb
mov
cmpsl
pop
mov
lahf
pop
sti
aas
mov
add
push
and
aam
cmp
jge
repz
jle
jb
cld
sbb
dec
das
or
push
fdiv
push
stc
pop
inc
pushf
repz
pop
dec
or
lods
push
ja
iret
ds
jg
paddb
cmc
mov
mov
xchg
cmp
push
shrl
cli
or
pop
or
data16
xlat
jecxz
pop
push
xchg
and
xchg
movsl
sub
mov
inc
or
fnstsw
add
push
or
mov
xchg
lock
popa
flds
xchg
jp
mov
into
adc
into
test
cmpsl
mov
inc
push
test
dec
xchg
stc
xchg
mov
sbb
or
dec
add
pop
inc
xchg
dec
mov
pop
pop
js
aaa
repnz
sub
mov
mov
and
std
jg
int
jae
dec
xlat
pause
shrl
sbb
push
gs
mov
mov
pop
repnz
mov
lds
inc
out
popf
cmp
out
xor
sub
imul
inc
dec
cmp
inc
jecxz
in
mov
ret
outsl
mov
std
sti
repnz
push
pop
push
jp
jl
inc
jne
test
pop
inc
cmp
icebp
stos
icebp
push
push
xchg
fisttpl
and
and
pop
dec
pop
and
add
and
mov
pop
clc
in
rorb
call
xchg
jne
lahf
sbb
push
jecxz
ljmp
cmpsb
mov
es
fwait
add
xor
cmp
nop
das
cmp
cmpsl
add
mov
gs
icebp
movsl
inc
shlb
rolb
pop
or
loopne
mov
sahf
insb
sbb
and
or
sahf
pop
dec
das
lret
adc
pop
push
fistpl
or
xor
xchg
inc
jbe
shll
sbb
sub
jge
inc
push
shl
sub
sub
jge,pn
mov
jo
or
adc
and
hlt
lods
mov
out
jae
add
addr16
or
cmp
add
mov
mov
arpl
dec
ret
xor
in
cmpsl
cmp
lock
enter
das
out
xchg
sbb
or
insb
lahf
xchg
icebp
jae
mov
cs
push
test
jl
inc
ss
shll
push
inc
xchg
scas
adc
mov
fs
dec
add
mov
xchg
jmp
jp
xchg
mov
ret
push
and
cmp
push
movsl
push
adc
int
pushf
ds
movsl
fildll
mov
test
imul
jge
dec
or
xchg
nop
xchg
xchg
decb
mov
xchg
add
inc
xor
out
pop
sarb
lds
fldt
ds
jno
mov
outsb
jnp
mov
fldl2e
lcall
pop
mov
jbe
daa
in
ret
or
in
push
jmp
testb
mov
adc
sub
sarl
aad
lods
orb
lcall
lcall
dec
cltd
cli
mov
hlt
test
mov
ret
filds
movsb
lds
arpl
add
sub
in
rcll
orb
cmpsl
mov
iret
ds
fdivrp
fs
xchg
mov
xchg
xchg
fnstsw
jl
mov
pop
js
loopne
jg
jae
dec
nop
jbe
scas
jmp
test
in
mov
sahf
loop
cmp
jne
sbb
jecxz
and
les
in
sub
cmp
pop
xor
out
inc
das
pop
push
mov
movsb
push
cwtl
int
imul
lret
dec
clts
inc
jnp
pop
inc
and
xchg
mov
imul
addr16
idivb
push
iret
mov
xor
fnstsw
cmpsb
push
movsb
dec
inc
and
xchg
jecxz
jmp
lods
sbb
lret
mov
shl
push
pop
and
andl
sbb
pop
pop
push
data16
mov
and
xchg
inc
inc
pop
ss
mov
push
clc
or
pop
pop
inc
divps
mov
jp
ljmp
cmp
sub
add
adc
lcall
mov
sbb
rorb
xchg
pusha
adc
inc
and
xchg
jne
xchg
adc
mov
cmp
ja
rcrb
xor
jg
adc
ljmp
scas
out
popf
cmp
pop
fstl
push
xor
imul
dec
arpl
cmp
jae
ror
test
mov
inc
loop
inc
mov
or
mov
lea
scas
iret
popf
push
and
dec
and
out
lds
scas
adc
xchg
in
fidivs
sbb
shlb
leave
enter
add
dec
loope
aaa
pop
jb
adc
xlat
adc
xchg
push
pop
dec
loopne
inc
inc
push
aas
mov
lret
rorl
into
aad
dec
leave
mov
jne
jne
lret
sub
fwait
scas
andb
mov
jl
jo
and
imul
outsl
xor
shlb
ja
sub
adc
pop
int3
xor
dec
mov
xchg
pop
lahf
pop
push
mov
xchg
or
bound
in
rcrb
sub
pusha
ret
loop
rcrl
cmp
mov
and
mov
inc
push
int3
mov
cs
sub
rolb
ljmp
adc
std
xor
jae
sbb
cmp
push
mull
sbb
xchg
iret
adc
arpl
sbb
mov
lcall
scas
jnp
or
pop
or
add
das
inc
jge
pop
inc
vpmacswd
jmp
push
fisubl
inc
adc
or
dec
pop
movsb
shll
fstl
call
inc
cmp
adc
push
xchg
mov
loope
std
clc
lock
jmp
xchg
in
mov
cltd
ja
leave
or
push
movsl
arpl
sub
test
mov
ljmp
in
insl
cmp
outsl
sbb
outsl
mov
test
mov
rcll
popf
movsb
test
addr16
mov
add
or
popa
ret
jle
jo
roll
repz
out
bound
xor
rol
push
xor
out
mov
cwtl
xchg
inc
iret
mov
xchg
cmp
popa
inc
xor
fdivrp
mov
mov
loop
stos
repnz
movsb
pop
adc
pusha
ret
ds
pop
popf
pop
fwait
sbb
mov
adc
into
loope
in
imul
in
push
rdpmc
rcll
xor
test
clc
mov
sbb
pop
jbe
cmp
lret
push
mov
push
mov
lret
cmc
scas
cmp
fs
fcomip
ficompl
push
mov
imul
add
setp
jo
xchg
jbe
dec
dec
arpl
push
mov
pop
push
dec
and
pop
test
cmp
aaa
push
addr16
mov
aas
or
mov
int
out
adc
push
in
adc
push
lds
les
inc
fsts
loope
sub
add
jp
push
cmc
aas
sahf
std
mov
mov
gs
clc
xchg
pushf
repnz
mov
sbb
int
push
adc
and
movsl
fsubrl
icebp
or
or
scas
popf
add
inc
mov
xchg
add
std
mov
xchg
adc
fcomps
sub
mov
add
subl
xchg
push
add
xchg
cmc
hlt
sub
mov
and
mov
pop
jne
mov
inc
or
mov
jne
dec
push
popa
jge
and
add
in
sub
cwtl
arpl
mov
lret
test
push
xlat
push
mov
inc
xchg
daa
adc
mov
cmc
mov
push
pop
out
push
jp
inc
push
in
sub
aam
shl
push
nop
mov
sbb
adc
adcb
mov
aas
mov
inc
ret
leave
mov
data16
mov
xchg
sarl
mov
shll
xor
fdivr
inc
and
push
push
ljmp
loopne
jns
iret
mov
push
pop
scas
data16
add
sbb
scas
inc
pop
pop
dec
sub
in
cmovae
popa
jo
sub
cmp
xchg
sahf
pop
sbb
jle
add
aas
adc
push
add
jnp
mov
or
scas
ret
adc
iret
cmpsl
pop
lret
test
cmp
mov
and
mov
xor
ficoms
movsl
call
sahf
ficomps
cmpsl
shr
xor
sub
lds
xchg
sbb
outsb
jecxz
push
test
jge
jno
xlat
das
xor
or
push
add
dec
gs
adc
mov
push
xchg
sub
fsubrs
jo
xor
mov
pusha
xor
shll
mov
push
adc
inc
jecxz
fdivrp
push
or
ds
pop
sub
dec
add
lea
repnz
ret
and
outsl
sbb
add
aam
cmc
xor
mulb
ret
mov
mov
add
jbe
aas
xchg
add
jbe
pop
push
xchg
jno
mov
push
add
lret
sbb
cli
mov
test
pop
mov
pop
jns
or
or
andb
mov
leave
jecxz
gs
or
scas
mov
push
fwait
cli
adc
dec
ret
sub
jo
pop
jno
mov
fstl
mov
lcall
fstl
cmp
mov
xchg
outsb
fldcw
sub
adc
sbb
aad
stc
mov
sbb
adc
push
mov
fisubl
imul
xchg
leave
inc
inc
adc
addr16
rorb
das
pop
imul
daa
push
dec
testb
cmp
push
mov
stos
hlt
push
addb
cmpsb
pop
xor
arpl
loop
and
or
xor
imul
xchg
sub
or
mov
out
pop
inc
mov
sbb
cmp
imulb
pop
adc
stos
ficoms
out
push
lea
cmp
inc
mov
pop
bound
fsts
push
inc
les
add
stc
xchg
or
mov
in
lock
lock
push
cmp
loop
pop
inc
dec
cmp
idivl
dec
lcall
xchg
jmp
inc
pushf
or
es
nop
and
lods
fidivl
pop
push
je
scas
add
cli
fmulp
mov
movsl
jmp
adc
adc
pushf
xor
shlb
sub
mov
clc
mov
pop
jo
cmp
ja
leave
lret
or
push
lea
jp
ss
cli
insl
lcall
fucom
loopne
cld
sub
clc
sarl
cmpb
jbe
das
sub
es
jb
jnp
dec
mov
scas
mov
lods
jecxz
mov
hlt
mov
cmp
pop
jb
ffree
mov
jno
jo
movb
sbb
fsub
ja
sbb
cmp
popl
inc
jle
sbb
pop
push
out
jb
repz
shlb
push
mov
fstl
dec
or
imull
xor
adc
or
shrl
stc
stos
je
insb
or
xchg
cmp
or
iret
push
in
and
cmpsb
adc
js
jge
in
bound
add
cwtl
add
mov
cmp
rep
jp
out
sub
xor
sti
test
test
sub
loopne
pop
out
sbb
ljmp
rclb
daa
cltd
mov
gs
imul
sbb
sti
pusha
push
sbb
mov
faddp
lock
xor
xor
bound
mov
jnp
sbb
sbb
pop
pop
jge
jg
outsl
jno
sbb
dec
mov
int3
out
decl
clc
lret
and
sub
cmp
jns
sbb
out
and
ss
inc
xchg
and
cmp
sbb
mov
stos
jp
aad
test
mov
or
stc
loop
outsb
dec
loopne
stos
mov
xor
xchg
popa
jmp
in
ljmp
dec
gs
pop
xchg
bound
fidivs
mov
gs
mov
lea
mov
faddp
and
idivl
mov
jae
in
mov
std
mov
aas
ss
cmp
lret
xorb
xchg
fucomip
mov
push
pop
arpl
pop
jmp
in
xor
dec
adc
and
leave
pop
nop
pusha
jb
cmpsl
lahf
movsb
in
push
cltd
out
fdivrl
mov
mov
jl
mov
cmp
imul
addr16
dec
arpl
lahf
push
adc
sbb
fwait
test
xor
in
js
std
out
cli
push
xor
in
cmpsl
mov
fs
jge
xor
orb
xor
jbe
xor
jl
addb
mov
into
lods
mov
sbb
jecxz
sbb
dec
ret
mov
jecxz
jne
lods
pop
xor
mov
adc
add
push
test
lcall
out
mov
pop
xor
mov
aad
mov
inc
lret
dec
ret
sub
lds
mov
push
jnp
sub
adcl
xchg
adc
out
add
imul
addr16
fdivl
movsb
mov
xorl
in
stos
fldcw
repnz
sbb
addb
aaa
add
mov
or
je
arpl
daa
int
or
test
push
loop
mov
test
pop
pop
rcrl
push
lods
xor
sub
xchg
and
inc
mov
es
dec
add
cmp
adc
or
jecxz
hlt
mov
add
aaa
push
cmpsl
and
fs
cld
jb
in
test
jns
loopne
xor
rorb
mov
sbb
icebp
fsub
sub
inc
inc
push
xor
mov
lret
fldcw
inc
pop
xchg
mov
jno
les
fildl
mov
xchg
mov
into
ja
aam
lret
adc
jp
sub
xchg
cmc
pusha
rorl
add
cmp
mov
fisttpll
mov
outsl
mov
dec
mov
xor
mov
pop
jecxz
stos
push
pop
fdivl
inc
insb
lods
and
push
out
idiv
push
test
andl
pop
mul
pop
xlat
xor
jmp
xor
testl
xchg
lahf
cmp
clc
push
pusha
cmpsl
jg
addb
mov
stos
in
outsb
xchg
lock
mov
movsl
mov
mov
pop
cmp
scas
push
jns
arpl
mov
test
arpl
jae
lock
ficoms
mov
dec
jp
add
mov
push
mov
mov
push
or
repnz
push
cmpsl
ds
xorl
mov
out
jb
jno
aad
mov
push
cld
ret
negb
push
or
je
mov
jl
ds
scas
fcmove
fdivrl
xor
arpl
jg
movsl
push
jp
jno
cmpsl
push
xor
fisttpll
leave
pop
xchg
lea
pop
test
aaa
sti
in
and
inc
cmpsb
jnp
mov
ret
lods
push
inc
fwait
mull
fists
pop
out
sbb
ret
sub
lods
adc
loope
mov
mov
pop
add
mov
ds
pop
hlt
outsb
jp
hlt
ss
mov
xor
in
insb
sub
repz
sarl
mov
push
lcall
jge
sbb
addr16
sti
push
mov
aad
xchg
call
cli
jge
push
mov
aam
mov
pop
mov
sub
adc
fnstcw
rcll
jbe
in
dec
ds
nop
int3
jmp
in
test
push
add
lahf
adc
or
sti
push
rcl
xlat
adc
dec
adc
xchg
or
loop
std
xor
mov
sar
dec
mov
fcomp
dec
repnz
cmp
shrb
xlat
sbb
subb
mov
aad
clc
push
rcrb
fiaddl
ja
xchg
jecxz
mov
xchg
inc
cmpsb
rcl
stc
xchg
in
movsb
aam
pop
or
push
or
repz
iret
int3
divl
aaa
pusha
pusha
add
addr16
sub
aam
or
das
dec
inc
arpl
insl
mov
test
mov
stos
loope
xchg
mov
je
push
xorl
sbb
xchg
mov
incb
or
sbb
imull
shlb
aad
jmp
cld
test
cmp
and
stc
sti
xlat
jae
pop
mov
inc
mov
cmc
adc
aas
jle
cltd
into
in
push
idivb
add
pop
sbb
lret
aaa
hlt
lret
inc
lcall
xchg
stc
leave
mov
mov
andb
out
scas
adc
ret
mov
xor
pop
push
jnp
loope
aam
idivb
imul
cmp
gs
stos
push
pop
stos
lock
sbb
into
mov
push
daa
xor
rorb
out
mov
jb
mov
stos
lea
pushl
dec
xor
xchg
dec
xchg
pushf
fwait
lahf
and
push
dec
add
mov
int3
adc
mov
fs
dec
mov
dec
mov
add
lahf
xchg
push
out
sub
pop
scas
les
sbb
pop
and
add
cmp
imul
pusha
jl
insl
inc
movsl
cld
and
aad
dec
lcall
ljmp
xor
decl
aas
clc
pop
sahf
xor
insl
add
icebp
adc
pop
mov
imul
xchg
mov
fstp
clc
icebp
iret
js
and
shll
pop
xchg
jge
int3
movsb
sbb
inc
or
dec
icebp
insb
xor
cltd
lret
xchg
push
repnz
arpl
mov
and
outsl
je
test
mov
add
add
repnz
cld
mov
cmpsb
mov
inc
mov
rolb
es
scas
repz
sub
pop
loop
xchg
sbb
mov
cmpsb
aad
scas
in
cmc
push
iret
jl
daa
inc
nop
cli
mov
lret
mov
lfs
jp
ret
aaa
roll
movsl
push
daa
ja
mov
pusha
sub
sbb
nop
ss
mov
xchg
addr16
outsb
pop
scas
mov
xchg
cmp
rolb
scas
fdivrs
cmp
iret
gs
fildll
jmp
fisttps
adc
jmp
loopne
push
push
jne
push
in
mov
cmp
pop
jmp
pop
fidivrl
sub
test
fdivrl
jge
jne
bound
arpl
cmp
shrb
mov
push
add
jo
push
mov
sub
push
jne
dec
mov
and
imul
and
xor
xor
push
enter
or
jae
call
in
jecxz
xorl
or
faddl
push
inc
gs
arpl
mov
int3
rcr
mov
dec
test
dec
stos
cmpsb
test
movsb
jg
icebp
cmp
loope
pushf
sub
push
loopne
jmp
inc
xchg
xor
lods
in
aam
pop
cmp
xor
or
jbe
mov
imul
pop
incb
jns
in
adc
jno
fs
frstor
lcall
ficomps
add
mov
dec
sarl
add
mov
in
mov
cmpsl
jnp
mov
test
or
xchg
inc
mov
call
xor
mov
lret
outsl
outsb
out
adc
jecxz
jb
test
push
lock
inc
add
idiv
push
roll
xchg
pop
xor
mov
lods
ja
ret
adc
push
sub
mov
push
in
dec
aaa
insl
lock
jno
cld
sahf
mov
aas
adcb
sbb
push
and
push
push
fsubrp
dec
xor
loop
mov
inc
shlb
dec
lret
add
push
mov
into
adc
jg
mov
sbb
mov
test
mov
and
fsubr
daa
sub
lods
std
cwtl
test
lcall
cmp
fbstp
pushl
sub
push
cmp
ds
inc
daa
fimull
push
leave
shll
imul
adc
and
psubusb
mov
out
adc
aad
pop
aad
mov
xchg
lods
adc
fildl
mov
or
icebp
sbb
push
bound
pop
and
fiadds
call
push
lods
in
in
je
and
stc
adc
jecxz
ja
loop
sub
aas
push
aam
popf
add
inc
into
repnz
ss
dec
shrl
jno
popf
mov
pop
xchg
add
add
or
test
xchg
or
dec
pop
mov
cs
divl
push
js
or
dec
lods
sbb
imul
pop
mov
clc
lods
mov
cs
test
mov
and
lds
imul
cmp
lock
leave
cltd
inc
dec
sbb
dec
push
sub
rcll
adc
push
sbb
js
push
push
push
cmp
movsb
iret
es
dec
adc
movb
lret
mov
cmp
mov
or
nop
loop
pop
xchg
aam
add
scas
mov
mov
rorl
and
repnz
movsl
arpl
push
push
add
lcall
cmp
test
xchg
add
enter
fisubl
jge
mov
mov
and
pop
adc
dec
xchg
or
fsubrs
pop
loope
sub
enter
dec
pop
jae
neg
xchg
xchg
into
push
mov
clc
shll
xchg
mov
idivb
cmp
xchg
cmp
fsts
xchg
lahf
push
std
mov
mov
pop
movsb
movsb
out
pop
fidivrl
and
mov
mov
xor
mov
adc
mov
cmpsb
ds
and
xor
cltd
cmp
inc
in
das
fisttps
lcall
test
jge
dec
cmc
cmp
cmpsl
lcall
je
xchg
xor
cs
mov
imul
adc
or
lcall
loop
lahf
jle
sbb
xchg
jmp
nop
adc
xlat
fcomip
and
mov
js
jae
fists
add
jnp
lds
xchg
stc
das
inc
push
push
fnstenv
dec
or
inc
int3
mov
push
test
movsl
adc
sub
mov
in
mov
pop
cmp
shrl
in
cmp
cltd
fstpt
fidivs
dec
mov
loopne
mov
mull
es
or
clc
neg
lret
in
xor
sbb
and
insl
bound
aaa
mov
push
xor
leave
mov
mov
bound
ret
jbe
repz
ret
inc
aas
xor
mov
push
negl
sbb
mov
jno
popf
pop
loop
loopne
and
lcall
test
add
jno
dec
push
sbb
xchg
mulb
sbbb
rcrb
jns
jmp
cwtl
mov
adc
mov
sti
lcall
inc
sbb
fidivs
jbe
xchg
nop
movsl
out
popf
hlt
or
hlt
loopne
or
and
lcall
ds
cmp
fildll
fcompl
cld
mov
shrb
out
sbb
scas
sub
mov
insl
aad
jne
cmpsb
test
pop
ret
mov
shrb
mov
sbbb
mov
sbb
dec
outsb
mov
mov
sub
push
out
push
testb
bound
or
loopew
aam
imul
and
das
sbb
js
xchg
xor
leave
mov
cs
jmp
adc
int3
repz
lds
scas
stos
sbb
sbb
sub
mov
fldt
stos
stos
cmp
fwait
fs
sahf
xor
push
fidivrs
push
adcl
hlt
jb
cmpsb
mov
adc
mov
js
xchg
divl
jle
lds
icebp
cmpsl
cmc
lahf
mov
mov
mov
push
xchg
xor
xlat
cmp
pop
ss
xchg
and
movsb
xchg
out
cmp
dec
sbb
inc
test
sbb
das
jmp
addr16
repnz
negb
push
pushf
push
in
sbb
xchg
adc
push
jne
imull
daa
nop
mov
xchg
sarb
sbb
iret
cmp
inc
adc
xor
or
in
fcoml
jo
leave
movsl
sbb
icebp
shrl
pop
jne
sar
nop
les
cli
mov
add
movsl
lret
adc
bound
dec
cld
imul
orl
addr16
adc
fscale
dec
es
jle
pop
sub
gs
push
dec
jl
jp
mov
pushf
jbe
ret
jmp
hlt
mov
pop
and
mov
cli
or
shll
fcomps
repz
gs
lret
and
testl
adc
adc
push
jp
push
arpl
scas
popf
call
push
mov
fstpt
sbb
int
out
out
mov
sahf
rclb
pusha
xor
shll
mov
mov
nop
jne
jecxz
cmc
mov
mov
sbb
mov
test
mov
mov
arpl
aas
test
add
mov
popf
ljmp
dec
and
rcll
icebp
rcrb
cmp
mov
cltd
xchg
sbb
nop
and
or
push
cmp
mov
loopne
leave
mov
popa
inc
iret
or
jmp
repnz
lahf
pop
inc
mov
sahf
dec
loop
sbb
cltd
loop
xchg
leave
insl
cmp
mov
arpl
sbb
jge
inc
push
jns
aas
aas
push
push
or
push
inc
outsl
call
or
and
mov
or
shrl
xor
adc
addb
or
mov
sbb
add
adc
fnstsw
bound
ficomps
pop
xchg
outsl
lods
insl
adc
inc
lock
fistps
cltd
xchg
cltd
sbb
mov
and
inc
outsb
sub
test
std
dec
dec
gs
xchg
add
sbb
adc
xchg
mov
fstpl
loop
in
adc
cltd
ret
fsubr
push
push
repz
aad
add
jge
jecxz
stc
fbstp
out
test
push
xchg
pop
aad
cltd
les
jmp
out
scas
inc
mov
adc
cmp
adc
jne
arpl
and
jnp
add
mov
xchg
test
xor
add
pop
sub
jle
cmp
sahf
addl
test
inc
add
jnp
repz
jno
jl
lret
xorl
cmc
push
fistpll
or
shrl
mov
xchg
push
jnp
test
movl
jns
sti
adcl
mov
std
pop
arpl
xor
data16
add
mov
rcll
or
xchg
das
stos
shl
scas
and
lret
sahf
test
pop
push
arpl
je
sbb
rcll
xchg
fcomps
add
popa
pop
mov
pop
or
scas
xchg
xor
pusha
je
inc
icebp
jbe
ja
pop
sbb
adc
cwtl
faddl
inc
mov
js
inc
repz
xchg
add
fs
call
fwait
jno
test
divb
out
mov
test
outsb
call
in
in
mov
mov
scas
or
es
mov
test
pop
sarl
insb
adc
stc
shll
sub
popa
push
xor
test
adc
cwtl
subb
cmp
add
jp
pop
sarl
pop
movsb
bnd
pop
jp
adc
dec
out
xor
xchg
cs
jle
push
pop
xchg
test
xor
in
push
jmp
fcomps
xchg
mov
out
mov
jnp
stos
or
sub
adc
fs
mulb
adc
xchg
mov
push
lcall
js
cmp
jnp
adc
jle
mov
jecxz
decb
cli
push
jae
jg
imul
aam
inc
sahf
adcb
les
int
pop
adc
jnp
mov
enter
mov
aas
jnp
test
sub
pop
and
enter
inc
cmp
arpl
mov
dec
test
jne
js
push
add
push
aad
mov
mov
xor
inc
shll
mov
stc
ret
andl
ja
sub
mov
xchg
sbb
or
jmp
bswap
inc
pop
aam
adc
cld
ljmp
pop
mov
ror
cmpsb
ret
jb
rcrl
xchg
xor
insl
cmp
and
mov
xchg
cmp
push
cli
iret
nop
mov
stos
lods
stc
inc
mov
jnp
addr16
imul
andb
in
inc
in
mov
ds
aad
flds
mov
push
ss
sahf
mov
lods
push
jo
repz
add
scas
fbld
mov
repz
jbe
divb
push
dec
lea
and
std
dec
adc
mov
fucomp
shrb
dec
pusha
out
add
in
or
mov
mov
mov
pushf
mov
clc
bound
mov
sub
mov
push
push
mov
fadds
xor
jle
fstpl
lret
mov
enter
je
shrb
outsl
or
fsubrs
in
ja
das
xchg
push
adc
push
mov
xchg
pop
or
mov
mov
adc
lea
imulb
add
stos
jmp
inc
jl
int
or
rep
movsb
dec
adc
lahf
ds
fsts
test
push
enter
dec
push
shll
inc
iret
mov
test
cmpsb
sar
xchg
jb
mov
xchg
insb
mov
das
stos
out
cmp
lock
xchg
or
xlat
fidivs
loope
xorl
inc
sbb
lret
mov
dec
int
push
lods
mov
les
and
push
mov
cli
ja
imul
push
pop
leave
rcrb
adc
jmp
sar
aas
frstor
clc
das
add
jp
or
cmp
nop
pop
mov
and
repnz
sub
shlb
ljmp
push
and
clc
arpl
add
adc
xor
leave
int
test
or
add
sbbl
inc
nop
pop
nop
loope
ret
or
xchg
outsb
add
jo
dec
dec
not
out
or
adc
sub
jae
cmpsb
ret
arpl
ljmp
fwait
hlt
test
mov
jecxz
adc
testb
mov
and
fistps
int
into
xor
dec
imul
mov
mov
scas
leave
cmc
adc
fldl
cmp
int
cmc
dec
aaa
stc
pop
sbb
lahf
inc
in
xor
sahf
out
ss
movsl
pop
jecxz
dec
int
push
out
popa
push
and
movsb
mov
mov
ds
mov
or
pop
pop
movsl
shrb
cmc
cli
and
adc
ret
fs
adc
movsb
sbb
or
cmc
shrb
je
mulb
lds
push
fcmovu
jns
ret
sub
dec
xchg
mov
xchg
pushf
mov
cmpsl
mov
mov
adc
fucomip
lods
sbb
xor
jmp
cmp
push
fistps
lret
inc
or
repz
xchg
insb
and
push
sub
fwait
mov
inc
imul
out
aaa
mov
mov
push
andb
push
push
pushf
jmp
xchg
xor
cld
fsub
fcoml
ficomps
xchg
cmc
shll
mov
mov
cld
dec
sub
pop
or
dec
lahf
sahf
adc
cmp
leave
cmp
nopl
fimuls
fidivl
mov
dec
jecxz
mov
dec
idivb
pop
nop
loop
icebp
enter
shll
stos
adc
test
jno
xchg
jno
ds
loop
mov
test
push
cmp
and
sbb
adc
popf
push
call
lock
mov
sti
sbb
test
and
out
add
bound
loop
and
add
pop
lock
mov
test
notb
inc
inc
rorb
call
outsl
fisubrl
push
pop
out
dec
dec
sahf
aaa
repnz
std
xor
inc
xor
test
lahf
push
dec
cmp
add
inc
pop
mov
fmuls
cmp
mov
pop
aaa
sbb
dec
or
outsl
sbb
pop
sbb
mov
mov
dec
leave
stc
cld
mov
movl
adc
jae
and
jp
das
into
dec
sbb
hlt
add
push
ficoml
jbe
inc
in
mov
mov
mov
jne
xor
sbb
and
ds
mov
sub
push
sub
imul
imul
dec
outsl
inc
das
sbb
sbb
mov
mov
adc
jb
insl
imul
jecxz
mov
sti
cmp
hlt
mov
push
cltd
or
adc
xchg
pop
sbbb
pop
filds
inc
jno
mov
insl
and
mov
xacquire
or
lcall
adc
add
ds
and
aas
insl
int
inc
inc
xchg
cmp
scas
add
add
test
mov
stos
sub
pop
xorb
and
jns
dec
xlat
push
scas
fs
inc
sbb
cmc
lea
lds
mov
das
mov
mov
and
movsl
aas
ja
push
subl
into
sbb
shl
subb
cli
or
lock
push
arpl
cmpsl
sar
fiaddl
xor
push
adc
pop
mov
std
mov
push
and
push
inc
sub
push
push
or
lcall
stos
sbb
cli
aaa
lods
pop
test
dec
insb
jl
cwtl
movsb
fiaddl
push
insl
sub
mov
or
loopne
sbb
ja
test
lods
inc
mov
inc
inc
les
cltd
ss
mov
scas
sar
rorb
popf
push
push
incl
pop
cmp
pushf
mov
adc
movsb
mov
imul
mov
cmp
jge
imul
sbb
ret
insl
out
mov
clc
push
and
popa
mov
add
dec
lcall
adc
aas
insl
mov
jbe
mov
inc
xchg
imul
hlt
push
dec
repnz
and
add
filds
call
jecxz
and
scas
dec
cli
mov
pop
sbb
xchg
movsl
stos
inc
inc
push
test
and
outsl
mov
xchg
lds
xor
pop
clc
mov
sti
cli
jl
push
pop
fimuls
dec
pop
iret
mov
dec
movsl
dec
subb
sbb
test
shrb
adc
pop
mov
sub
xchg
ds
inc
pop
aaa
lods
dec
aad
jae
push
mov
cmp
mov
jns
fcomps
mov
jle
mov
pop
mov
addb
add
xor
and
ds
in
jae
in
and
sbb
ss
test
mov
loope
mov
and
in
cmp
push
mov
mov
pop
inc
and
inc
out
adc
ret
dec
roll
cs
rcl
lahf
ss
jmp
movsb
fidivrs
mov
es
mov
int
shll
fbstp
cmc
aas
out
mov
js
negb
test
sbb
hlt
push
add
jmp
out
sbb
outsl
dec
mov
adc
fmull
mov
jmp
xchg
jmp
addr16
bnd
jle
shll
aam
outsl
aaa
sbb
or
inc
fidivl
mov
es
popa
je
dec
cmc
dec
xchg
dec
inc
loope
fnstsw
test
push
roll
dec
dec
cmc
loop
add
xchg
sub
or
mov
and
jb
movsl
icebp
or
pop
jne
adc
cmp
sbb
fstpl
and
leave
jmp
lret
sbb
jnp
ljmp
cmpsb
xchg
mov
mov
jecxz
push
in
sub
xchg
jg
mov
and
jne
mov
xchg
out
jp
xchg
xchg
stc
sbb
outsl
cmpsb
mov
mov
idivb
xchg
movsb
sub
pop
adc
fstps
enter
fstl
sub
pop
or
clc
aad
push
sub
cmpb
imul
fxch
bound
jne
test
xchg
repnz
mov
push
mov
xor
lds
adc
dec
mov
shrb
dec
mov
imul
outsb
cmp
sbb
addl
call
sub
movsb
leave
loope
push
push
sbb
daa
inc
je
scas
fisttps
fwait
pusha
push
cs
loopne
pop
add
xabort
ds
jbe
adc
cli
les
jl
movsb
and
les
dec
jae
xchg
xor
push
cmpsb
negb
pop
loope
in
dec
mov
mov
sbb
rclb
int3
fistps
scas
sub
std
or
scas
jecxz
inc
icebp
add
jle
movsl
fisubrl
movb
add
jle
movsl
fisubrl
movb
lods
sbb
stos
mov
jle
mov
push
cli
fldt
add
or
sub
or
les
scas
xchg
add
add
es
gs
nop
jecxz
xchg
stos
mov
ljmp
mov
dec
lretw
sub
test
into
lods
mov
fcomps
lahf
mov
jb
into
nop
push
jmp
dec
adc
mov
dec
loopne
jp
jecxz
cwtl
fdivrs
leave
push
cmp
sbb
lods
lods
fistpll
xlat
fstps
sbb
pop
test
dec
inc
das
cmp
adc
cltd
addl
lret
insb
push
aad
and
or
popa
stos
dec
pushf
mov
pushf
jne
jl
mov
mov
cmp
jmp
cmp
xor
jb
lds
cmp
testl
fs
leave
adc
and
pop
add
sti
daa
roll
jae
pop
popa
and
push
push
rcrb
cmc
and
popf
push
or
test
popa
inc
iret
out
ljmp
sbb
xchg
fdivl
cwtl
sbb
mov
rorl
and
inc
fldenv
adc
nop
mov
sbb
jno
xchg
in
or
sarb
add
pop
inc
push
cmp
arpl
dec
xor
ffreep
dec
dec
sbb
xchg
add
jno
ds
pop
cmp
testb
in
push
rorl
or
xchg
inc
lcall
adc
mov
push
test
or
dec
pop
xor
jmp
iret
and
xor
xor
test
and
or
add
and
cmp
dec
rcrl
push
xchg
pop
mov
flds
fs
fs
std
shll
xlat
jg
sbb
sub
imul
sub
pop
xchg
or
cwtl
cs
gs
fistl
inc
fs
sbb
mov
push
push
fadds
and
push
dec
lods
xchg
aas
dec
jmp
pop
pop
xchg
adc
pop
outsb
leave
in
mov
xlat
divl
and
push
dec
aas
adc
arpl
xchg
pop
cmpsb
and
ret
cltd
mov
nop
loop
mov
aam
sbb
testl
push
rcrb
fisttpll
scas
repnz
rorb
imul
mov
jp
mov
es
cld
cmp
fs
aaa
and
ret
bnd
mov
adcl
pop
sub
test
sbb
test
insl
push
sbb
xchg
jne
jg
jb
arpl
push
cmpsl
shlb
and
aas
dec
xchg
xchg
jbe
out
pop
inc
jno
cli
sub
call
push
mov
mov
jp
pushf
dec
jne
and
sbbb
jl
xlat
pop
mov
in
pop
xchg
ret
xchg
dec
popl
gs
addb
lds
mov
pop
cmp
pop
or
enter
mov
stos
jmp
xchg
or
xchg
es
int3
je
inc
mov
mov
inc
cmc
cmp
mov
xor
cmpsl
ja
pop
shrl
rol
mov
adc
push
iret
sub
and
jge
cwtl
dec
add
iret
add
mov
cmp
mov
sub
lret
mov
add
adc
scas
xor
shlb
rcl
outsb
push
and
push
dec
cwtl
jnp
dec
adc
add
and
in
mov
mov
mov
push
int3
add
jns
rclb
jp
pop
jp
lcall
mov
cmpsl
push
ds
jbe
inc
mov
mov
push
int
jb
divb
adc
das
push
dec
repnz
ret
add
not
mov
das
push
adc
push
fs
insl
pop
xchg
in
add
lahf
outsb
rcrl
dec
test
jno
ret
out
cmp
mov
jmp
jbe
stc
in
jl
lds
pop
inc
sbb
sti
cmc
insl
inc
pop
icebp
in
dec
push
aad
outsl
mov
add
and
pop
lock
bound
push
add
and
push
aam
leave
stos
out
adc
or
mov
lahf
arpl
adc
or
lods
dec
push
nop
fmuls
xor
cmc
jne
sbb
out
xchg
movsl
push
shll
test
jno
xor
call
pop
mov
xor
sub
imul
adc
cmp
cmp
rorb
and
fdivs
movsl
cmp
js
xchg
jno
or
sti
adc
sahf
or
adc
jns
add
jns
jmp
xchg
jb
sbbb
pop
pop
sub
adc
rclb
std
cmp
lea
xor
push
mov
negb
jno
in
mov
sti
dec
xor
push
adc
mov
mov
jne
rcll
stos
hlt
cmpsl
cltd
stos
lods
push
mov
fsts
pushl
sti
gs
test
cmp
in
push
test
jecxz
push
repnz
scas
dec
xchg
lods
push
icebp
andb
and
popa
xchg
inc
cld
push
test
scas
mov
jne
lret
pusha
cmp
mov
xchg
enter
jno
clc
stc
lret
shll
jmp
or
or
and
dec
cwtl
lret
rolb
jne
add
cmp
aam
dec
xor
scas
xchg
fstl
fmuls
mov
fiadds
sub
sbb
iret
jge
lcall
pop
mul
call
in
lahf
or
stos
fstl
push
mov
shlb
jg
pop
xchg
mov
in
notl
fdivr
icebp
cld
pop
jns
sbb
lock
in
jmp
scas
jnp
pop
test
les
sub
test
push
pop
and
hlt
jb
jae
push
pop
cs
xchg
arpl
jmp
sbb
jle
enter
stos
mov
shlb
dec
in
sahf
jbe
ljmp
loop
pop
add
sbb
push
push
and
scas
pop
cmp
mov
push
or
xchg
data16
or
add
xor
testb
lret
and
stos
int3
push
flds
fdivrl
and
inc
pusha
loope
mov
mov
mov
or
or
bswap
sbb
push
jnp
mov
and
adc
aad
pop
push
aad
lcall
decl
adc
sahf
cld
cmc
sbbb
or
repz
sub
sti
out
push
inc
xchg
cmpsb
sbb
call
data16
sahf
rsqrtps
pusha
add
mov
rorb
xor
aas
inc
mov
mov
mov
call
movsl
jg
xchg
cmp
push
jl
xchg
gs
ret
inc
pop
xor
in
inc
cmpb
ds
or
push
das
jecxz
adc
jmp
inc
bnd
or
outsl
test
add
jbe
mov
sub
push
out
sub
or
ja
push
adc
add
popf
dec
and
or
frstor
push
pop
pop
mov
push
in
cmc
mov
fldenv
push
popa
bound
dec
cld
mov
push
mov
mov
xchg
mov
mov
testl
sub
dec
rolb
adc
sub
jecxz
push
adc
sbb
xor
cmp
adcb
dec
xor
cmpsl
push
dec
cmpsl
out
xchg
cmc
push
jnp
adc
jne
or
sbb
dec
xchg
in
mov
shrb
lods
mov
fsubl
bnd
and
and
lea
and
subl
arpl
adcl
jbe
sahf
xchg
jno
roll
mov
push
mov
push
clc
shl
movsl
jmp
push
lock
mov
cmpsl
mov
push
mov
sub
push
fdivs
neg
push
aad
popa
nop
jnp
sub
add
les
pop
push
mov
inc
xlat
out
lahf
push
mov
cs
pop
sbb
pop
lods
mov
add
xchg
cmpxchg
xor
mov
xchg
test
xlat
std
cli
fs
in
movsb
pop
popf
enter
pop
mov
idivl
or
les
loop
xor
pop
mov
jecxz
lret
inc
mov
sbb
xchg
sub
mov
xor
xor
rcrl
out
xchg
cmp
inc
jg
mov
cld
xchg
aas
pop
fidivrl
js
test
or
das
daa
or
xchg
clc
out
jg
xchg
push
pop
dec
mov
pop
push
repz
push
sti
stc
rcr
imul
call
adc
fwait
pop
dec
cmp
das
aaa
loope
imul
push
inc
jmp
rolb
lahf
rcl
mov
cmp
pop
and
shl
lds
and
pushf
cmp
jp
mov
xor
jno
mov
sub
loope
aaa
mov
cmp
test
jge
add
cwtl
mov
outsb
push
test
loopne
andb
inc
movl
jae
fs
cwtl
sub
nop
xor
hlt
cmp
mov
mov
hlt
shlb
loopne
loope
scas
iret
push
or
mov
ja
sahf
push
movsb
outsb
pandn
mov
inc
jb
cmp
and
push
clc
fisubrs
push
dec
inc
rcrb
stc
mov
cmp
sbb
int
fsts
cli
psubb
mov
and
leave
inc
sbb
fsub
xor
bsr
sbb
xor
pop
lret
dec
xorl
imul
psubb
mov
and
daa
jb
das
mov
sti
bound
dec
out
test
imul
inc
xor
dec
pop
enter
gs
repnz
xchg
leave
fbstp
xlat
dec
cmp
fistpll
dec
mov
fdivs
rcl
adc
leave
mov
faddl
push
cld
orb
inc
mov
push
and
jmp
dec
mov
andl
jae
imul
jbe
xlat
push
cmp
jecxz
inc
push
dec
cmp
add
push
scas
fmull
jno
daa
pop
pop
sbb
mov
xchg
clc
scas
pop
mov
scas
das
dec
push
jno
insb
cld
adc
aas
or
add
in
arpl
push
add
add
pop
mov
dec
adcl
lahf
xor
inc
xor
popf
sbb
mov
arpl
icebp
aam
cwtl
jmp
mov
mov
sub
jmp
mov
xchg
gs
sbb
fmul
not
data16
jo
sti
lock
imul
mov
xchg
mov
lahf
lods
xchg
inc
mov
jecxz
inc
jns
aam
into
xor
jo
push
fistpll
jbe
sub
push
test
and
jl
push
sbb
jae
ret
out
pop
cmp
jp
jo
lahf
mov
mov
xchg
dec
jle
cmpsl
sbb
cmp
or
imul
mov
xor
mov
inc
lahf
shr
mov
mov
dec
test
les
out
jecxz
addr16
add
andl
sarl
fmuls
leave
sub
pushf
xlat
stos
icebp
loope
mov
sub
clc
pop
icebp
xchg
push
testb
sub
mov
and
test
sbb
in
lods
repz
je
leave
add
push
cwtl
add
stos
push
in
adc
rep
mov
jge
in
nop
mov
mov
mov
push
pop
push
loopne
pushf
mov
es
pop
inc
inc
scas
ss
jae
fistpll
cmpsl
andb
fcmovbe
xchg
aaa
or
mov
stc
mov
test
shlb
mov
mov
jmp
cmp
cmp
ficomps
jl
sub
rcrb
repnz
push
sbb
pop
andb
push
add
dec
insb
and
cmpsb
xchg
jo
jg
jmp
push
sbb
jge
js
int
ljmp
stos
fldl
repz
aam
in
out
mov
hlt
xor
es
in
adcb
or
lret
lock
jbe
or
mov
sub
insb
and
mov
jb
cmp
adc
jl
jg
or
pop
std
dec
jns
pushf
fadds
and
ljmp
cltd
mov
ljmp
sti
outsb
mov
jno
fmulp
imul
and
fsubrp
lret
fildll
push
xchg
jg
pop
mov
test
xchg
and
or
ds
sarl
cmpsl
sub
sbb
mov
add
jp
cli
mov
push
sarl
cmp
imul
dec
adc
add
lret
add
repnz
push
push
pop
clc
adc
or
dec
dec
das
rep
int
add
xchg
andb
dec
or
jge
insl
cld
lds
adc
adc
jge
hlt
mov
mov
out
mov
aas
fwait
mov
inc
incb
mov
mov
imul
adcl
push
inc
pop
shl
or
adcl
push
inc
pop
shl
or
inc
bound
mov
jg
lahf
jne
bnd
stos
pusha
sbb
in
sub
fcmovnu
adc
sub
gs
mov
push
out
sbb
ss
insb
shrl
lret
jno
insl
push
rcrb
push
iret
push
outsb
inc
pop
dec
pop
repnz
loop
cltd
repz
jnp
or
fisttps
jge
adc
add
sbb
out
out
mov
mov
or
mov
or
gs
inc
repz
mov
sbb
insb
sbb
push
xchg
icebp
movsl
lods
fwait
int3
jnp
push
lock
xchg
adc
dec
cmp
setne
push
loopne
lret
inc
loop
pop
pop
and
aad
stc
xor
xor
adc
lods
cmp
pop
in
iret
insb
fisubs
mov
jne
jb
inc
xor
aaa
jne
sub
jo
mov
shlw
dec
and
lds
je
pop
push
stc
sub
dec
cmp
imul
popf
testl
add
adc
add
out
outsl
pop
bound
or
mov
and
fistl
adc
jae
icebp
test
or
inc
lcall
repz
mov
adc
xchg
pop
jmp
add
les
push
frstor
mov
loope
xchg
mov
and
sub
mov
scas
movntq
out
in
xor
push
movl
pop
popf
dec
mov
aas
jp
jns
in
sbb
and
dec
sub
mov
rcrb
and
test
bound
jg
repnz
inc
je
adc
adc
mov
jmp
dec
inc
ja
out
cmp
pop
in
aam
mov
ret
fs
sub
and
rcll
in
mov
out
inc
aaa
lret
in
rclb
mov
call
inc
jge
ret
xor
xchg
mov
ja
mov
mov
adc
bound
in
adc
iret
sti
addr16
pop
ss
sbb
dec
clc
repz
push
jb
lret
jp
popf
shll
adc
adc
xchg
sbb
mov
or
mov
fnstcw
jge
mov
test
popf
pushf
popa
inc
dec
lcall
lahf
mov
cmp
xor
je
mov
out
mov
js
jb
jb
imul
dec
je
dec
mov
push
or
roll
add
repnz
adc
lret
pop
sub
subb
pop
inc
fprem
lods
xor
fists
mov
ds
push
sub
pusha
cwtl
into
mov
xlat
xchg
inc
fimull
dec
inc
ja
out
cmp
pop
in
aam
mov
mov
sub
cmp
push
enter
mov
inc
ja
out
cmp
pop
in
aam
mov
mov
mov
sub
cmpsl
push
call
cmp
xchg
imul
flds
stos
repnz
push
iret
jecxz
cmp
push
cwtl
mov
pop
mov
stc
cwtl
or
sti
mov
iret
icebp
dec
and
or
xor
je
dec
ret
add
gs
lods
lods
stos
jle
sbb
jne
out
adc
andl
pop
mov
aad
jns
mov
lcall
gs
popf
pop
imul
arpl
pop
cmp
pop
in
aam
mov
and
lods
add
push
and
inc
xchg
cmpsb
lock
mov
dec
mov
inc
jge
push
bound
fucom
mov
mov
and
ja
out
cmp
pop
in
aam
mov
test
shrb
jnp
xor
jge
jmp
ds
and
sahf
sub
xchg
mov
pushf
push
xlat
or
pop
jmp
mulb
rcrb
in
pop
dec
insb
aaa
inc
insl
or
mov
ret
mov
scas
aaa
cmc
inc
mov
les
jp
lea
inc
cmp
add
imul
aaa
jmp
test
cmp
xchg
jle
jge
jae
shr
and
mov
mov
inc
dec
nop
js
jbe
gs
mov
push
mov
out
fisubs
mov
add
fcomip
mov
xchg
ds
fiadds
xlat
xlat
xchg
imul
dec
cmp
repnz
cmp
movsb
icebp
pop
test
mov
pop
stos
mov
inc
cld
pmulhw
push
cmp
jo
sbb
jo
adc
mov
jmp
xor
xor
mov
mov
ja
mulb
fildl
or
xor
adc
or
shl
sbb
push
pop
mov
sbb
mov
int
sub
enter
xchg
fwait
enter
jg
mov
into
xchg
movsl
and
pop
pop
pop
int3
cmp
add
xor
cwtl
mov
dec
icebp
paddd
xchg
push
pop
out
mov
out
push
xchg
mov
push
arpl
xor
cmp
adc
xchg
ret
and
jmp
out
inc
stos
adc
xchg
std
les
jnp
int
jmp
jne
push
inc
stos
sbb
lcall
fiadds
xchg
add
xchg
lahf
inc
add
ljmp
dec
push
addb
movsl
sysenter
out
dec
insl
pop
loop
rolb
or
jmp
leave
xor
rorb
or
mov
xchg
inc
push
push
les
pop
xchg
and
inc
sub
mov
movd
mov
bound
inc
push
fwait
dec
push
push
cmpsb
rolb
or
inc
dec
lea
xor
lods
jo
cmp
xchg
pop
pop
mov
dec
pop
push
cmp
fmuls
and
sbb
mov
ljmp
dec
test
fwait
xor
and
iret
xor
or
jno
movsl
or
and
imul
mov
or
dec
aam
fcoml
jg
imul
and
fdivrs
sbb
xor
jbe
movsl
stc
in
loop
imul
lea
sub
adc
aaa
mov
das
sbbl
je
sub
add
or
aas
inc
and
xchg
rcrl
push
adc
aad
cld
loopne
mov
jge
arpl
fdiv
pushf
rorb
js
jno
jbe
repnz
mov
push
in
fdivrp
fmull
dec
sahf
jle
pop
lds
pop
xor
sub
filds
mov
inc
push
icebp
dec
sub
mov
inc
sub
in
andb
nop
clc
jb
nop
fsubrl
shlb
loope
mov
scas
outsb
xchg
jge
jne
inc
test
sbb
sahf
sub
cmp
repz
jno
push
ljmp
and
outsb
mov
add
cli
xchg
ret
pop
jmp
rolb
call
orl
stos
pop
jp
push
mov
stc
dec
sub
cmpsl
movsl
adc
bound
mov
sub
call
ret
inc
sar
popl
add
push
and
mov
insl
mov
stos
faddl
popa
fucomip
loop
sub
iret
aaa
mov
mov
sarb
inc
mov
js
inc
rcl
cwtl
cmp
fs
xchg
js
adc
out
cmp
xchg
fstcw
cmp
lret
sub
pop
imul
inc
stos
push
xor
push
in
sar
dec
dec
push
mov
push
or
or
dec
orl
mov
cmpsb
push
stos
decl
add
pop
and
push
sub
aam
stos
fs
in
mov
adcl
jno
loope
movsl
in
shr
andb
imull
jp
insl
les
mov
je
jl
adc
and
sbb
dec
push
jnp
aad
jle
cltd
xchg
rcll
add
enter
movsl
inc
cmp
mov
out
mov
and
push
mov
push
push
cmpsb
outsl
jmp
cmpsb
insb
leave
xchg
inc
cmp
push
jno
pop
ljmp
fiaddl
sub
int3
rcll
stc
or
test
mov
ss
push
push
push
mov
lcall
and
imul
inc
dec
mov
ret
lret
aas
mov
push
loop
sbb
xchg
ret
xchg
js
cwtl
push
loop
or
push
xchg
sbb
sbb
mov
cmp
repz
sbb
and
jns
mov
aaa
dec
or
jl
cli
jmp
fbstp
rcrl
adc
stos
or
pop
mov
pop
test
sbb
pop
sub
push
sahf
xlat
subl
mov
out
daa
in
loopne
inc
pushf
mov
xor
fiaddl
and
lds
xor
pop
add
jns
jge
mov
insl
xor
mov
shl
sarb
dec
testl
insl
sbb
or
test
enter
in
push
cmpl
dec
popf
pop
xchg
fdivrl
outsl
sub
mov
jnp
or
inc
mov
rcrl
rcrl
jg
or
stos
cmp
and
test
lss
push
or
push
js
in
jae
mov
fs
lea
sahf
ja
fs
adc
arpl
push
sbb
xchg
push
ret
or
inc
adc
xorl
inc
and
pop
ss
mov
cmp
out
mov
clc
add
fbstp
stos
cld
jl
inc
mov
cmpsl
loop
mov
sbb
cmp
inc
push
popa
pusha
xor
popa
sub
adcl
push
inc
lods
and
dec
mov
bound
in
inc
sub
adc
stos
mov
mov
mov
ds
sub
ss
add
repz
rcrl
and
sarb
pop
loop
jl
sbb
loope
out
push
incb
cltd
push
mov
add
xchg
out
xchg
mov
mov
inc
shll
push
push
mov
pop
push
je
or
jmp
frstor
rcr
xchg
lods
sub
cltd
hlt
dec
fists
rcrb
push
or
cli
or
mov
inc
ret
in
cmp
and
push
pop
arpl
push
into
repz
xchg
jnp
sti
push
jbe
jne
mov
or
test
cmp
lods
xchg
push
push
in
data16
arpl
cmpsb
insl
and
stos
out
lock
test
lcall
dec
lahf
shll
outsb
xchg
xor
add
out
inc
xor
lahf
je
scas
jl
je
dec
mov
xchg
mov
scas
jmp
ljmp
mov
pushf
inc
jp
add
dec
iret
xchg
out
cwtl
test
inc
ds
fs
pop
push
aas
xchg
std
pop
cmp
push
repz
jae
mov
daa
jae
icebp
daa
lods
mov
movsl
mov
aaa
repnz
into
jno
outsb
xchg
test
int3
inc
mov
loop
mov
push
jae
adc
loop
leave
mov
jnp
es
adc
jo
mov
clc
jne,pn
or
add
jp
jmp
or
mov
dec
imull
mov
hlt
mov
mov
cmp
xor
dec
xchg
js
inc
or
dec
icebp
xlat
or
ret
sbb
test
mov
xchg
in
outsl
iret
dec
mov
sub
mov
push
sub
and
add
jle
ds
dec
sub
inc
jge
lahf
sbbl
fistpll
lcall
je
leave
cmp
push
mov
fnstcw
shrb
in
sbb
js
and
popa
ret
cmp
fcomp
dec
or
xchg
adc
in
xchg
sub
cli
insl
sub
cs
mov
inc
cmpsl
pop
rcl
fistl
mov
push
movsl
repz
and
filds
in
add
lock
icebp
ja
mov
jbe
sbb
pop
jl
xchg
dec
mov
mov
test
outsl
movsb
jle
mov
xchg
lea
roll
mov
cltd
and
mov
lcall
sub
stos
fidivrl
fdivrs
mov
push
jbe
movsl
fs
mov
ja
push
call
ljmp
aad
xor
adcb
out
add
cwtl
int
mov
out
js
mov
cmp
mov
pusha
cmpsb
or
adc
lods
push
mov
mov
cmp
scas
into
arpl
xlat
icebp
dec
and
mov
sbb
and
or
test
inc
bound
push
pop
jns
and
push
cmpsl
cmpsl
xor
bound
aaa
mov
mov
jmp
push
xchg
push
inc
fsubp
xchg
movsb
or
lret
jge
bnd
and
add
into
lds
cwtl
arpl
sahf
sbb
pop
insl
shlb
adc
in
xchg
adc
iret
sub
gs
xor
jno
push
les
jg
pop
imul
mov
push
mov
loope
mov
stos
and
lahf
add
push
dec
daa
iret
data16
push
xchg
add
mov
xor
gs
xor
bound
dec
pop
mov
adc
or
jle
mov
mov
or
sub
test
fldln2
and
shrb
xchg
cld
inc
xchg
scas
jmp
dec
pop
cmp
lock
add
sub
xor
xchg
stos
aas
pop
sub
push
or
popa
mov
mov
jns
mov
mov
lds
mov
mov
icebp
ljmp
je
and
popa
leave
push
rcrl
sub
pop
mov
add
inc
push
jge
dec
les
and
jbe
mov
pop
fimull
dec
and
jmp
gs
mov
bound
xor
push
repnz
pop
aaa
lahf
inc
push
imul
cs
sarl
mov
xor
jp
adc
repnz
inc
out
cmc
imulb
lret
add
mov
scas
adc
fisubs
jmp
add
xchg
ret
leave
jo
pop
sahf
sbb
inc
shlb
fisttpll
andl
fwait
xor
pop
pop
iret
push
arpl
les
lcall
xlat
cld
xor
dec
sbb
cmpb
out
xor
xchg
aam
cmp
je
out
push
xchg
mov
fcomps
inc
lcall
jl
scas
dec
jmp
mov
mov
lea
mov
out
xor
add
mov
scas
push
push
add
clc
cltd
inc
or
sbb
cmc
mov
cmp
mov
push
repz
shrl
fnstenv
add
fisubrs
daa
mov
add
divl
pop
push
movsb
rolb
test
inc
pop
dec
xchg
cmp
imul
in
push
fildl
pop
arpl
jno
into
jns
push
add
into
cmpsl
adc
pop
sbb
jge
mov
shlb
stos
notl
and
sub
ror
push
inc
fs
icebp
sub
stc
inc
sub
sarb
in
int
dec
aam
jno
push
sbbl
roll
icebp
sbb
jno
lods
ds
mov
outsb
loopne
jecxz
xchg
add
push
or
ljmp
rcrl
adc
shrl
movd
sbb
sarb
mov
inc
mov
lods
outsl
adc
enter
sub
bound
add
ret
pop
ficomps
popa
movsb
inc
inc
jae
push
or
fmuls
aad
int
lahf
in
inc
fnsave
mov
push
mov
scas
and
jecxz
cmp
clc
call
loopne
sub
in
negb
js
lods
movsl
cmc
fs
gs
adc
cbtw
cmpsl
ss
add
sub
test
jne
andl
jae
inc
mov
lret
fisubs
ss
leave
jbe
aad
cmp
jne
dec
or
lret
data16
fsubrl
or
insb
pop
mov
insl
nop
in
sub
dec
jae
mov
cmp
or
sti
mov
xor
and
mov
into
hlt
xchg
sub
xchg
xchg
push
mov
loope
or
sub
lods
insb
jl
sti
pop
data16
ljmp
sbb
jecxz
mov
mov
es
scas
std
stos
pop
mov
push
or
sub
aas
ljmp
imulb
push
dec
loopne
out
jae
push
adc
fisubl
xchg
xchg
scas
push
call
dec
add
adc
push
inc
lock
sbb
int
pop
xchg
lods
sub
sbb
push
cli
push
sbb
adc
mov
add
stos
lock
ss
aam
push
stc
lods
iret
mov
clc
mov
mov
imul
jne
std
and
mov
jecxz
int
and
dec
pushf
pop
std
and
subb
add
into
call
jbe
shll
inc
addr16
dec
jo
and
mov
fsqrt
dec
xchg
icebp
inc
sub
cltd
sub
shr
sub
leave
iret
aaa
ss
int3
inc
mov
sbb
mov
or
inc
xchg
aam
sti
and
sbb
loopne
push
mov
fistpl
xchg
adc
pop
ja
inc
xchg
mov
addr16
movl
dec
mov
mov
lahf
lahf
repz
inc
sbb
sub
loop
gs
sbb
xor
push
stos
dec
int3
sbb
pop
adc
dec
mov
idiv
int
fsubrs
aad
xlat
push
jg
xchg
mov
add
es
adc
dec
cmp
and
int3
es
dec
dec
dec
fsubl
sub
fists
inc
cmc
dec
mull
adc
add
xor
cmp
xchg
lock
inc
in
dec
pop
mov
mov
pop
adc
add
aam
add
dec
jle
fldenv
add
adc
sbb
ret
push
dec
aam
cmp
xor
sbb
les
in
pop
push
cld
sbb
xor
les
out
mov
mov
sub
mov
sbb
pop
decb
pop
clc
sub
js
test
adc
jns
daa
cld
jb
rcll
daa
jle
jne
push
repnz
repz
sbb
popa
je
xor
or
pop
repz
and
cmp
xchg
mov
dec
sub
mov
add
push
inc
lret
jg
mov
xor
dec
pop
in
out
xchg
cmc
ficomps
std
mov
or
imulb
das
mov
xor
imul
out
lahf
fnstenv
popl
mov
cmpsb
xor
roll
aas
rcll
and
mov
mov
shlb
sub
mov
out
jb
adc
push
lods
xor
jp
out
add
movsb
js
xlat
fdivrl
adc
pop
cmp
add
sub
lods
add
lods
adc
sar
mov
mov
stos
mov
les
into
jmp
add
push
pop
aam
xor
dec
lds
mov
or
shrl
or
gs
push
enter
cld
fs
mov
push
ja
adcl
sbb
mov
aam
mov
cld
sub
lret
or
scas
cmp
jns
stc
divb
and
push
dec
jns
push
pop
roll
nop
push
roll
adc
pop
mov
adcl
cltd
jecxz
cmp
cwtl
mov
sub
jno
icebp
mov
add
fs
fisubrl
cmp
cmpsl
or
sahf
adc
cmp
add
or
mov
pop
sbb
iret
inc
jnp
xor
pusha
pop
popa
adc
cltd
and
flds
inc
mov
sub
rol
pop
add
and
and
pop
push
sbb
mov
iret
sahf
fs
inc
dec
push
movsl
icebp
xchg
push
cli
fwait
mov
jp
adc
jnp
sarl
jbe
arpl
sub
into
rcr
in
mov
testl
jbe
pop
mov
arpl
fnsave
ffreep
cs
and
xlat
mov
mov
loope
xor
insb
les
mov
jnp
mov
iret
lcall
outsl
jg
jecxz
inc
sub
in
and
cmc
repz
ljmp
xorl
pop
dec
adc
call
call
mov
imull
jo
roll
mov
pop
divb
xchg
dec
push
sahf
frstor
inc
inc
add
clc
ret
mov
mov
adc
ret
cwtl
add
adc
rcl
popf
sti
rcr
lea
gs
repz
clc
ljmp
leave
mov
jno
or
add
inc
lock
mov
mov
cmpsl
cwtl
stos
xor
mov
fstp
push
xor
mov
jge
lock
jae
cs
and
pop
ds
sti
push
adc
mov
mov
out
dec
nop
mov
mov
pop
pop
imull
pop
push
test
lea
mov
cmpsl
inc
fsub
dec
popa
mov
ret
cs
sub
les
and
push
cmp
xor
ja
movsl
xor
cmc
lea
xor
pop
mov
lods
in
add
cmp
fs
ds
mov
mov
and
cmp
das
jo
je
dec
jmp
ret
mulb
movsl
xor
push
stos
jge
inc
and
mov
cmp
cmp
out
jge
xchg
add
daa
sti
fsub
lods
and
pop
cs
push
lret
scas
orb
scas
fisubl
or
outsb
lea
flds
mov
mov
jg
into
sub
enter
lds
mov
push
shrl
xchg
sbb
cltd
aam
jo
and
lock
push
lret
test
sub
adc
adc
rolb
leave
mov
call
xor
testl
jns
popf
rcll
xchg
aad
xchg
jo
repnz
jbe
insl
scas
and
push
mov
dec
add
mov
inc
mov
mov
push
repz
enter
cmp
stc
cmpsl
clc
loopne
aad
enter
test
bound
fs
mov
dec
mov
cld
mov
fnsave
fldl
icebp
pusha
fwait
push
push
jg
mov
jae
jae
push
hlt
mov
xchg
or
push
rclb
xchg
inc
xor
enter
cli
stc
lock
pop
xor
mov
aaa
lods
mov
pop
out
jo
mov
mov
add
movsl
mov
mov
mov
lds
and
jno
sub
outsb
cli
mov
push
and
in
push
std
call
pop
aad
aaa
inc
leave
add
inc
jns
test
jbe
lock
lea
out
bnd
mov
lock
loope
rclb
cltd
out
jbe
fldpi
notb
sbb
in
or
xchg
xchg
inc
mov
inc
subl
mov
mov
ljmp
pop
jnp
sub
js
scas
out
out
mov
aas
aam
popf
mov
loop
push
sbb
ret
aaa
out
jns
cli
adc
mov
adc
push
push
adc
cmpl
xor
sub
adc
xor
inc
add
push
pop
sbb
or
ret
xor
sahf
mov
jp
incl
iret
test
iret
out
pop
out
xor
add
inc
push
es
sbb
ret
dec
fdivl
scas
push
ret
dec
mov
rorl
in
xchg
push
adc
pop
and
jp
sub
movsl
pop
jb
ss
pop
jno
add
imul
lret
inc
repz
out
xchg
aam
mov
xor
jo
pushf
addl
js
fstp
cld
je
or
adc
cmpsl
rorb
pop
lahf
stos
in
xchg
lds
sti
jb
test
xor
push
sbb
pop
pop
dec
enter
std
nop
shrb
dec
call
inc
shrd
add
daa
dec
pop
and
lcall
or
sahf
loopne
call
lods
mov
jne
inc
inc
cld
cmp
and
test
mov
daa
mov
sub
enter
test
mov
xor
orl
add
and
pop
sub
lds
lcall
jecxz
pop
insb
xor
dec
xchg
and
xchg
mov
pop
gs
sbb
je
or
xchg
add
bound
or
test
push
je
fadd
cmp
test
mov
push
pusha
call
mov
test
ret
dec
push
out
inc
sti
mulb
daa
sbb
stos
pop
adc
iret
and
mov
push
jne
sub
jmp
adc
adc
mov
in
fistpl
mov
push
jmp
shlb
test
lret
int3
lods
data16
mov
icebp
push
cmp
cmpsb
in
pusha
xchg
repz
xor
add
cmp
mov
pop
cmp
mov
xor
jecxz
jle
fs
frstor
cmc
pushf
lods
xchg
adc
sar
mov
adcl
dec
jg
inc
scas
sub
nop
dec
aam
out
xchg
inc
rclb
push
imul
jle
movsl
scas
fnstenv
sbb
rcll
loopne
mov
lods
xor
les
pop
cmc
aaa
fwait
mov
ret
push
repz
iret
inc
scas
mov
dec
push
into
rclb
cld
cmp
mov
popa
push
jbe
sub
cmp
pushf
cld
xorl
pushf
add
push
push
lret
lock
cltd
sbb
push
sbb
sbb
cmp
std
xchg
fwait
dec
divb
xchg
iret
xchg
loopne
sbb
mov
popf
subb
sub
mov
ljmp
les
dec
shl
mov
mov
sahf
xchg
mov
pop
cwtl
add
xchg
aam
rorb
add
sbb
inc
sahf
cltd
xchg
cmp
xor
repnz
ficoms
fisubrs
add
loope
jmp
xor
mov
sbb
jl
loope
dec
mov
and
pop
ret
cwtl
popf
in
push
push
push
cwtl
fcomps
fdiv
in
and
xchg
xlat
push
cmpsl
push
dec
and
enter
push
fmull
fldl
cld
cwtl
or
imul
push
mov
mov
pop
cmp
pop
dec
cld
fisttps
mov
add
mov
hlt
out
mov
and
lret
or
cli
popf
pop
ljmp
xlat
aam
pop
jb
pushl
enter
sbb
sub
xchg
aas
mov
or
sbb
and
mov
jg
loop
in
inc
cld
xchg
lods
mov
lret
and
out
jae
add
cmpsl
jae
dec
xchg
adc
aaa
pop
xor
popf
mov
sub
in
sbb
xor
insb
cmpsl
mov
xor
sub
xchg
fxch
mov
rcl
icebp
sub
sbb
rorl
fdivl
loope
cmp
inc
push
add
stos
dec
insl
call
stos
lahf
outsl
sbb
sub
pop
mov
hlt
mov
cld
test
sub
mov
mov
sbbb
add
test
out
adc
mov
ss
jnp
dec
loop
xchg
sahf
dec
mov
add
add
or
mov
cs
cltd
pop
jl
cwtl
push
rcrl
sahf
mov
jne
add
xchg
dec
lods
xor
push
lods
push
incb
add
adc
inc
sbb
push
adc
testb
push
in
or
enter
inc
imul
adc
sbb
rcr
ljmp
outsl
testb
fnstcw
repnz
cmc
out
inc
stc
xchg
pop
mov
imul
add
jmp
hlt
xchg
mov
jl
nop
sbb
sbb
cld
jb
lcall
enter
dec
loop
cld
adc
daa
cmp
sbb
mov
enter
jl
sub
adc
or
and
or
mov
push
xchg
jns
pop
shl
into
iret
push
shlb
sbb
add
daa
cs
daa
cmpsl
lea
dec
stc
xchg
int
aas
adc
dec
inc
dec
and
ss
and
push
loop
cs
in
jmp
stos
aaa
inc
add
popl
fstps
std
lahf
les
fnstsw
and
inc
lds
cwtl
cmp
pop
jns
sub
dec
movsb
xor
mov
pop
daa
ja
repz
jnp
add
jno
and
mov
xor
xlat
aaa
mov
in
jge
push
sub
into
xor
mov
xor
fsubr
ret
bound
fiadds
cmpb
inc
loop
jl
or
cmpsl
adc
inc
xor
ret
xchg
jb
sbb
xchg
les
dec
push
pop
cmp
ret
sbb
sbb
lcall
lds
loop
add
xor
mov
ret
mov
nop
into
std
sbb
loop
fwait
dec
test
jae
loope
cmp
cmp
pop
cmp
mov
jbe
xchg
outsl
xchg
mov
ljmp
nop
dec
cmpl
sti
push
inc
add
pop
adc
add
mov
push
push
and
imul
fucomp
popf
mov
inc
leave
outsl
dec
lret
nop
aaa
xchg
shr
xchg
cli
xchg
or
or
pop
push
lods
dec
cmp
js
fdivrs
test
aas
aad
push
inc
pop
cmp
std
or
xchg
shrl
xchg
out
jp
in
loop
mov
das
or
out
xor
rcrl
sub
jo
movsl
out
pop
into
les
mov
mull
and
cltd
push
outsb
pop
pop
or
aam
cmp
sahf
or
mov
add
insb
mov
sbb
add
stos
sti
outsl
test
mulb
pop
imul
ds
or
xchg
push
or
push
push
inc
test
lahf
mov
pop
adc
sbb
loope
dec
ret
add
sbb
xchg
sub
cmpsl
add
sti
dec
mov
xchg
push
es
cs
stc
jae
xchg
add
jle
jle
xor
pushf
pop
mov
jle
jl
das
xor
jecxz
add
xchg
fisttpll
mov
inc
std
ljmp
xor
sti
mov
jp
call
xchg
jbe
mov
mov
inc
jo
je
lds
add
xchg
mov
xor
mov
nop
shrb
push
sahf
adc
dec
mov
ja
cmpsl
xor
inc
add
push
jne
mov
jbe
jns
jne
add
out
ds
je
bound
fwait
jecxz
jmp
fwait
pusha
call
dec
cmp
inc
xor
add
jbe
adc
rcrl
loop
pop
test
js
outsl
in
stc
jle
inc
push
ret
sub
dec
das
add
adc
shrl
mov
cmpsl
and
shlb
mov
lock
imul
add
push
jns
stc
in
inc
enter
pop
out
pop
inc
cmpsl
sbb
pop
mov
data16
or
lods
fdivs
out
cmp
pop
in
aam
mov
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
inc
cmp
cs
push
push
and
jbe
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
data16
bound
bound
popa
xor
cmp
bound
ds
popa
jae
gs
bound
fs
je
je
ds
and
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
jae
gs
bound
add
add
ja
lods
dec
ljmp
out
pop
and
mov
leave
pop
movsl
xchg
or
xchg
sub
cmpsl
sbb
xor
int
incl
in
sbb
fdivrl
adc
roll
out
jne
adc
inc
hlt
ficompl
pop
inc
shlb
hlt
pop
push
gs
cmp
jg
dec
loopne
sub
and
xchg
inc
pushf
cs
shlb
xchg
push
stc
stc
inc
or
dec
dec
shrb
xorb
mov
lret
dec
loopne
add
push
mov
sti
sub
mov
scas
push
and
jne
rorl
imul
sti
je
dec
sti
mov
outsl
andb
pop
es
in
aam
mov
mov
test
sarl
or
loop
movsb
in
lret
shld
icebp
sub
mov
mov
sbb
call
movsl
mov
int3
icebp
xor
inc
stos
cld
lahf
pop
xor
clc
in
rcl
loopne
inc
ds
push
xchg
shll
mov
sahf
insb
push
inc
jo
outsl
pop
pop
mov
push
dec
fbstp
pop
int3
enter
imul
or
outsb
inc
and
mov
push
cmpsb
in
mov
mov
jns
push
mov
pusha
push
mov
jl
sub
fdecstp
cmp
xchg
inc
or
mov
test
nop
nop
out
jb
pop
cmp
orl
push
int3
test
cmp
mov
adc
pop
je
add
add
dec
pop
adc
xlat
sbb
add
add
incl
add
add
add
sahf
lods
shr
cmp
xchg
ja
dec
es
out
das
nop
add
add
sgdtl
add
add
xchg
adc
dec
add
add
xor
add
or
or
add
xor
inc
decl
add
add
add
add
add
add
add
add
and
pop
adc
js
add
jl
add
addb
add
add
add
ja
push
jb
add
push
jb
add
add
add
add
push
and
add
add
mov
incl
add
add
inc
add
add
add
sbb
clc
and
add
add
add
inc
add
add
add
and
add
add
add
inc
add
add
add
and
add
add
add
inc
add
add
add
inc
add
xor
add
add
cmp
inc
add
inc
add
pop
add
add
xor
inc
add
incl
add
add
add
add
add
and
add
add
incl
adc
cmp
add
shlb
add
add
call
and
add
and
add
add
add
inc
add
add
add
and
andb
add
adc
cmp
inc
add
adc
inc
and
sub
inc
add
adc
cmp
inc
add
adc
subl
jmp
add
add
add
add
inc
add
inc
add
incl
add
add
inc
add
mov
inc
lods
jae
mov
dec
sub
or
add
add
add
movsb
and
lock
or
add
add
add
add
add
add
add
fsubs
add
and
add
add
aam
inc
add
incl
add
add
add
outsl
push
arpl
add
add
jb
xor
add
push
jb
add
push
bound
add
cld
or
add
xchg
jno
es
out
dec
stos
pop
jl
std
pop
sub
xor
push
inc
xchg
ja
dec
es
out
das
test
push
mov
neg
cmc
push
jnp
cmp
xor
or
stos
add
xchg
inc
outsl
jb
add
add
cs
push
add
xor
inc
cmp
outsl
addr16
insl
and
insb
gs
dec
imul
je
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
add
dec
and
add
add
add
add
add
add
add
add
inc
add
push
lods
xor
or
stos
add
xchg
dec
dec
inc
xor
add
add
inc
add
push
lods
xor
or
stos
add
xchg
push
inc
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
jb
jae
insb
je
push
bound
add
add
jbe
popa
dec
bound
gs
hlt
add
add
inc
add
add
add
sub
adc
inc
add
or
add
xor
xchg
adc
add
inc
add
add
add
jb
outsl
add
add
add
add
add
add
add
inc
add
incl
add
add
inc
add
incl
add
add
and
add
xor
cwtl
and
add
and
add
xor
add
add
andb
add
incl
add
add
add
add
add
inc
add
inc
add
inc
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
mov
push
movl
call
push
lea
push
call
sub
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
push
call
test
fnclex
jge
push
push
push
push
call
movl
push
jmp
lea
call
ret
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
sahf
sahf
sahf
sahf
cmp
add
mov
adc
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
add
xchg
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
pop
sub
add
subb
add
add
jl
add
xchg
add
nop
sub
add
add
add
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
inc
dec
arpl
add
add
pop
popa
fs
data16
popa
outsb
add
add
pop
popa
fs
imul
xor
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
dec
jb
jae
insb
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
dec
bound
gs
add
pop
popa
fs
imul
imul
popa
fs
imul
xor
imul
dec
jae
outsb
add
add
pop
pop
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
fs
data16
je
outsb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outsb
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outsb
fs
gs
add
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
inc
dec
insb
outsl
add
add
pop
popa
fs
imul
xor
add
add
fs
imul
xor
imul
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
inc
dec
popa
je
outsb
add
add
insb
insb
insl
jne
add
add
dec
je
outsb
add
add
pop
inc
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
