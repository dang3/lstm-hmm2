call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
roll
jecxz
popf
or
ss
inc
jne
lret
inc
xchg
jae
arpl
xor
and
roll
jecxz
xchg
inc
adcl
mov
xchg
pop
movsl
arpl
xor
and
roll
jecxz
xchg
inc
adcl
mov
mov
xlat
dec
aam
xchg
pusha
cmpb
xchg
dec
xchg
xor
cmp
pop
xchg
cwtd
loopne
insb
xor
cwtl
adcb
mov
push
jg
push
jns
mov
inc
pop
sarb
icebp
insl
push
mov
shr
lds
sbb
in
movsb
sub
imul
dec
xchg
aad
xchg
dec
and
sub
mov
or
mov
mov
push
pusha
jecxz
xchg
inc
ret
or
xchg
push
dec
bswap
mov
push
push
and
in
lds
xor
and
sub
mov
cltd
jne
mov
mov
mov
fldenv
ljmp
in
or
sti
cwtl
mov
add
inc
inc
popf
dec
insl
sub
add
mov
xor
dec
loopne
add
jecxz
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
and
lret
and
and
cld
inc
xchg
adc
xadd
push
ja
ja
shlb
jo
inc
xchg
mov
mov
in
xor
shlb
push
aam
mov
lcall
loop
xchg
imul
push
test
jae
arpl
xor
and
roll
jecxz
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
roll
testl
mov
push
loope
xor
lcall
xchg
jp
xor
data16
mov
ss
sub
sbb
in
inc
adcl
mov
cmc
daa
push
pop
xchg
std
mov
pop
and
jecxz
and
popf
sbb
bound
inc
sub
es
nop
pop
sub
push
sbb
mov
push
push
sbb
xchg
sub
xchg
xor
out
cmpsl
dec
or
pushf
cmp
add
jmp
pop
jecxz
cld
fistpl
into
push
out
pop
repz
jge
cmp
sbbb
cmpsb
push
sbb
pop
xor
mov
imul
pop
div
popa
mulb
loop
dec
loop
xchg
adc
jne
in
jmp
mov
imul
jmp
int3
repz
xchg
pusha
incl
inc
mov
shrd
stos
xor
mov
repnz
movsb
xor
arpl
into
sahf
lods
pop
call
mov
cmpsb
jg
aam
repnz
leave
nop
clc
nop
rcr
xor
adc
lcall
sysexit
push
and
imull
jmp
inc
mov
dec
sub
repz
dec
hlt
push
pop
inc
popf
push
mov
iret
scas
xor
mov
in
stc
or
int
dec
inc
and
dec
jg
ljmp
inc
lret
insl
rcll
mov
popa
jo
sub
movhps
rcll
and
jnp
pop
or
test
push
scas
mov
or
ljmp
outsb
fs
idivb
shl
mov
pop
pop
in
movsl
add
stos
ret
test
cmp
push
in
out
je
mov
lock
jb
push
or
aaa
lds
jecxz
lds
or
jle
movsl
test
mov
mov
sbb
xor
les
repz
movzbl
add
iret
add
pusha
mov
push
jo
xchg
repz
or
fisubl
ret
mov
mov
pop
push
pop
movsb
xchg
sub
inc
mov
mov
xor
mov
jbe
dec
iret
ds
es
addr16
out
movsb
xor
inc
lods
and
leave
mov
js
neg
repz
mov
jmp
andb
push
dec
dec
jne
roll
add
mov
mov
sbb
mov
add
mov
mov
xchg
adc
jne
imul
add
xor
clc
cltd
in
adc
mov
cmc
pop
loope
lods
aaa
push
add
out
sbb
mov
imul
and
pop
ss
sbb
das
and
push
rcrb
xchg
fldl
cli
xchg
dec
push
pop
jp
xchg
movsb
add
or
push
hlt
ret
les
stos
xchg
data16
and
push
sub
xor
mov
sbb
xchg
or
push
mov
jg
inc
scas
stos
mov
push
mov
aaa
sti
out
repz
mov
mov
fs
cmpsl
dec
sub
lds
in
cmp
push
imul
mov
sahf
lret
cmp
jmp
out
mov
popa
push
add
aas
fcoml
lret
lds
adc
xchg
cmp
fwait
imul
lea
inc
lds
sbb
test
dec
mov
or
cld
push
imul
xor
sbbb
mov
orb
cli
in
add
cmpl
movsb
mov
pop
incl
lock
int3
push
pop
xchg
lock
pop
inc
and
pop
xor
lcall
cld
fmuls
or
int
inc
add
movsb
mov
pop
jmp
xor
sbb
push
adc
pop
sbb
stc
popf
imul
jno
test
xchg
cli
inc
add
scas
jp
out
popf
mov
or
mov
iret
fwait
and
sbb
in
gs
and
test
cmp
sbb
pop
dec
arpl
mov
call
hlt
movsl
cmpsb
fadds
xorb
call
out
mov
call
push
xor
pusha
inc
lahf
std
mov
leave
test
and
push
les
ret
nop
push
insl
test
scas
cmp
mov
mov
mov
xlat
es
sub
jl
shlb
sbb
cmp
adc
mov
nop
jb
repnz
shll
rolb
call
sti
aaa
or
inc
sub
movsb
xor
sbb
lcall
scas
call
push
mov
sub
inc
sahf
dec
ret
out
leave
xorl
test
enter
scas
rcll
lock
lret
cmp
js
loop
cli
mov
adc
xor
enter
fsubl
stc
iret
fldenv
lcall
into
and
sbb
popa
cmc
push
not
jo
pushf
clc
cmp
mov
pop
inc
movsb
inc
aam
mov
lea
leave
mov
sub
test
ret
jmp
sahf
arpl
sbb
xor
stos
movsl
push
cwtl
adc
out
mov
test
ret
psrlw
inc
xor
icebp
loopne
mov
push
add
cmp
jo
cmp
mov
shl
cs
pop
and
push
mov
xor
test
lea
and
cld
cmp
jns
inc
nop
dec
clc
rorl
mov
popf
js
pop
rclb
and
clc
fnsave
push
push
mov
adc
ffree
orb
mov
jmp
xor
add
xorb
xor
or
sub
test
jle
movsb
jp
cmp
mov
ret
popf
mov
daa
sbb
aaa
sbbb
sub
push
xchg
ror
cmc
es
fwait
jmp
xchg
mov
cmp
mulb
lret
mov
mov
mov
add
adc
out
push
jbe
cmpl
xchg
push
mov
jne
stos
pop
or
pop
pop
jecxz
push
mov
jo
add
int3
pop
das
inc
repnz
ds
in
push
jl
xchg
enter
jbe
filds
mov
pop
mov
push
movsl
and
subl
aaa
outsl
repz
out
mov
out
enter
ret
jo
jae
cld
cltd
shll
leave
cmp
jle
ljmp
es
mov
mull
ret
popf
in
push
adc
inc
jnp
insb
xchg
ret
repnz
jb
pusha
xor
stos
lea
push
pop
stos
ret
adc
sarb
sub
xchg
mov
mov
lds
fisttpll
or
jge
shl
jle
sti
jnp
adc
loope
popf
cld
lcall
je
dec
mov
add
repz
push
sub
js
push
push
popa
lret
xchg
pop
leave
dec
outsl
movsl
push
push
adc
pop
out
repnz
outsl
stos
pop
data16
cmp
xor
inc
aaa
dec
xchg
loope
sbb
int3
inc
mov
roll
inc
dec
and
in
mov
pop
ds
lods
int3
repz
xchg
jmp
jae
xchg
cld
repz
mov
faddp
int
xchg
mul
sbb
mov
jo
sbb
jge
pop
mov
mov
jb
inc
jg
fcoms
mov
cld
sub
cmp
mov
cmp
xlat
mov
inc
push
data16
xlat
cmp
dec
xchg
mov
cs
and
and
adc
cmpsb
fsubs
outsb
jae
sti
fisttpll
sbb
mov
std
jb
dec
mov
mov
mov
jno,pn
fstps
dec
jle
xchg
mov
ud1
fcmovnb
mov
imul
ss
das
dec
lock
push
pop
pop
jb
inc
fcmovbe
fsubl
xor
push
rcr
sbb
sbb
jp
mov
outsl
rclb
lret
repz
stos
ds
mov
cmp
lea
push
rcl
pop
fnstenv
inc
pushf
fld
pop
mov
imul
jecxz
or
mov
hlt
xor
clc
repz
lret
add
nop
push
push
cmpsb
movsb
lahf
imul
movsb
lock
jno
xlat
loope
lahf
pop
pop
lods
sbb
loopne
xor
adc
arpl
testl
xchg
repnz
movsl
xor
cmpsl
xchg
sarb
shlb
fiaddl
fwait
jp
jle
outsb
dec
arpl
jo
popa
shlb
mov
push
pop
cwtl
in
lret
cltd
add
push
cwtl
dec
dec
cmp
cmc
dec
pop
add
inc
mov
outsl
push
test
jge
call
inc
les
dec
ja
push
rcll
dec
ffree
test
adc
ljmp
lods
xchg
and
xchg
mov
loope
stos
cmp
push
fbstp
dec
pop
inc
mov
pop
xchg
or
orl
hlt
mov
mov
cmp
push
mov
ret
adc
inc
scas
xchg
or
adc
sub
pop
jbe
inc
add
std
test
fildl
test
mov
ret
or
cmp
sbb
adc
jb
lock
dec
mov
xchg
or
pop
mov
fsubs
push
divb
daa
pop
mov
cmpsl
lea
dec
rcr
add
dec
mov
ljmp
and
lahf
mov
lods
out
jnp
xchg
and
mov
imul
sub
fisubrl
es
mov
cmpsb
daa
gs
out
dec
je
in
lea
sub
sub
jg
sub
repz
mov
jae
or
fsts
popa
fimuls
or
mov
mov
pusha
test
cs
mov
or
push
lods
cmp
or
cli
sbbb
rol
lds
faddl
mov
push
into
mov
inc
lret
push
seto
arpl
jns
inc
mov
xchg
and
imul
ret
mov
je
sub
dec
mov
or
push
push
xchg
hlt
outsl
sub
inc
inc
mov
sub
sub
inc
or
mov
repz
fisttps
add
inc
and
mov
add
pop
add
flds
lret
fstl
dec
mov
sub
push
mov
js
jno
cmp
add
andl
lret
mov
out
push
jp
dec
dec
mov
xchg
and
adc
push
scas
adc
cmp
add
loopne
cmp
or
lods
xor
dec
fsubrl
hlt
cmpsb
pop
push
xchg
loope
mov
mov
jp
pop
xchg
stc
sti
lods
xlat
push
pop
dec
add
addps
pushf
jo
jns
pcmpgtw
ss
mov
test
xor
pop
jge
mov
int3
andb
and
ror
inc
add
cltd
arpl
jl
addr16
clc
push
in
push
sti
scas
dec
dec
ljmp
mov
test
or
cmpsl
lret
cmp
cmpb
pop
xor
inc
cmpb
jmp
jo
jp
mov
mov
inc
loope
lea
out
shr
jle
mov
sub
mov
jb
int3
xor
mov
cmp
aam
xchg
mov
xchg
xchg
push
pop
ss
fldt
loopne
sahf
pop
jg
add
push
sbbl
cli
loop
push
xchg
mov
jno
pop
fucom
rolb
pop
or
cmp
mov
xchg
lret
imul
out
mov
jne
dec
add
bnd
sub
iret
adc
fdivr
jbe
xchg
lret
fiaddl
jecxz
xchg
or
aad
cmc
jne
push
call
call
pop
add
movsb
jno
mov
sub
mov
cmc
ret
push
ss
js
scas
push
push
pop
js
jnp
stos
sti
adc
in
or
mov
test
xlat
cld
push
loope
mov
xor
pop
push
sub
sub
cmp
imul
or
shr
cmp
sbb
test
orb
adc
pop
xchg
fnstcw
adc
cmp
or
xor
stos
cmc
jge
adc
lods
fists
std
out
cmpl
push
mov
cmp
adc
hlt
xchg
sti
outsl
repz
and
sub
cmp
push
fcmove
mov
jae
loope
jnp
mov
sbb
xlat
jge
mov
pop
xor
xor
lea
jns
stos
pop
cmc
adc
rcr
pop
pop
fs
popf
jg
or
lea
into
in
das
adc
sahf
mov
mov
lcall
sub
lea
dec
cltd
ficompl
imul
mov
sti
xchg
jle
cmpsl
inc
mov
rolb
aam
mov
xchg
mov
push
bndldx
or
int3
fs
push
shll
dec
xchg
xchg
lea
dec
paddq
mov
xlat
dec
movb
stos
mov
sti
test
mov
xchg
inc
mov
mov
fisubrl
outsb
pushf
jae
mov
incb
mov
pop
lret
pop
inc
jns
add
dec
imul
sti
orl
pop
scas
add
mov
pushl
mov
sbb
mov
xchg
or
pushf
psrad
pop
loopne
shl
push
stos
outsl
or
out
mov
sbb
mov
pop
or
xor
repnz
popa
mov
adc
fidivs
aam
mov
add
inc
sbb
sub
or
ljmp
jmp
inc
mov
fadds
and
cmc
clc
into
shl
adcb
jns
dec
cltd
out
sub
cmp
clc
cmp
xchg
dec
popf
leave
jmp
xor
icebp
push
inc
stos
mov
xchg
add
inc
xchg
and
into
dec
das
lret
ds
ds
shrb
movsl
sbbb
mov
jo
inc
cmpsl
movsl
jg
or
xor
pop
aaa
lods
mov
orl
das
jne
loope
jo
or
outsb
inc
jge
xchg
cmpsl
or
xchg
mov
jo
fistl
pop
out
jnp
dec
dec
mov
mov
inc
dec
mov
les
mov
addr16
les
ljmp
dec
fwait
jle
mov
adc
lret
les
outsb
aaa
fisubl
xchg
fcmovbe
adc
add
jmp
push
mov
bound
xchg
xor
cmp
popa
sub
lret
sar
test
cmpsb
mov
fistpl
push
cmp
xor
das
jnp
xor
stos
mov
jne
inc
mov
sbb
mov
mov
jae
and
idivb
daa
scas
cltd
dec
xchg
inc
jecxz
test
pop
pop
stos
sub
jp
repnz
dec
jno
dec
lcall
inc
and
mov
jno
mov
inc
data16
imul
fnstcw
sub
cs
push
sub
dec
sub
mov
push
imul
iret
inc
shll
or
push
or
sbbl
inc
jecxz
cmp
and
add
orb
and
push
js
mov
sbb
decl
daa
test
filds
xchg
pusha
sbb
jmp
xor
xchg
bound
mov
lahf
jg
aam
dec
jbe
int
nop
leave
repz
data16
cltd
popf
popa
ret
add
leave
push
lret
xor
das
rcl
paddq
cs
add
sub
sbb
fwait
cltd
jg
test
pop
sbb
mov
cmc
jae
rcll
adc
lahf
or
lea
rolb
mov
and
and
test
jnp
add
fdivrp
repnz
push
pusha
inc
or
push
push
inc
xor
inc
arpl
enter
pop
cmpsl
and
push
in
shlb
cli
jecxz
icebp
dec
aam
loope
and
inc
or
mov
addb
js
xchg
sub
pop
pop
popf
sarb
jge
jl
jmp
inc
leave
xchg
repz
outsb
mov
add
sbb
fcoms
add
jmp
fwait
test
dec
inc
jo
push
loope
push
add
and
adc
mov
lods
add
js
fidivrl
inc
mov
fs
mov
prefetch
rclb
fnstcw
or
jge
jg
cmp
ja
rcl
xor
mov
mov
arpl
sub
lods
xchg
pop
rorl
dec
and
fisttpl
adc
pusha
addl
fidivl
outsb
ret
add
sbb
jbe
xchg
and
fisubrs
das
mov
popf
movsl
add
es
mov
dec
stos
in
pop
inc
add
add
fistps
pop
shrd
sbb
or
and
into
inc
jbe
lds
adc
cmp
dec
loopne
insb
push
scas
aaa
leave
xchg
add
pop
pop
lcall
in
dec
xchg
lods
mov
xchg
pop
sbb
out
pop
mov
mov
into
repnz
in
mov
imul
push
ja
pmulhuw
fnstenv
scas
sbb
mov
and
iret
aaa
mov
pop
cwtl
mov
mov
out
xchg
mov
aaa
mov
fldt
icebp
ret
into
lcall
cmpsb
or
xor
xor
fisubl
xor
imul
popf
inc
sub
dec
mov
xchg
cmpsl
mov
mov
test
xchg
xchg
sbb
fistpll
mov
ss
lahf
cmpsl
jg
and
or
push
pop
test
out
push
xchg
fs
or
cmpsl
sub
jne
dec
sub
add
sarl
in
ret
xchg
inc
sub
test
or
xchg
jecxz
js
or
cmp
inc
scas
mov
or
mov
loopne
in
mov
mov
cli
fdivs
pop
call
icebp
imul
pop
cmpsb
roll
sub
icebp
sbb
lods
xchg
arpl
in
adc
jae
sbb
fiaddl
int3
jne
fs
test
imull
pop
int3
mov
mov
add
rorb
inc
in
or
lcall
scas
enter
inc
pop
js
mov
adc
xor
mov
jb
mov
sbb
clc
stc
in
xor
sub
aam
cmpsb
sub
mov
sbbl
sbb
jne
jb
cmp
dec
pop
jno
idiv
xchg
xchg
sub
in
fistpl
add
sbb
outsb
jmp
inc
ljmp
gs
inc
pop
outsb
pop
pusha
sysret
aad
lods
sub
mov
mov
test
cmp
addr16
popf
lcall
cmp
xchg
pop
xor
cli
clc
insb
sbb
pop
addr16
xchg
sahf
add
xchg
in
mov
sbb
lock
pop
cmp
stc
ja
inc
test
dec
push
lcall
cmpsl
hlt
mov
insb
out
xchg
rolb
fwait
inc
jg
mov
gs
inc
inc
xchg
loope
shll
xor
test
cli
dec
jge
jne
cwtl
push
xchg
inc
or
fs
and
push
adc
lods
jg
xchg
insb
cmp
test
adc
push
je
and
adc
popf
add
stos
scas
out
sbb
cmp
sub
bound
out
sub
push
inc
sub
stc
pop
out
hlt
repz
xchg
xchg
out
test
jb
pop
lds
fldt
push
xor
dec
xor
std
xor
sbb
mov
stos
into
imul
jl
sub
or
ret
inc
mov
inc
push
dec
out
adc
call
out
push
sbb
lea
pushf
dec
xchg
ss
mov
stos
mov
lods
xchg
mov
cli
inc
add
sbb
or
pusha
push
add
loopne
cmpsl
ja
xor
aad
sbb
jp
scas
mov
cwtl
mov
movsb
test
push
adc
pop
inc
jecxz
cmpsb
loopne
xchg
lock
xchg
lcall
jb
push
loopne
jnp
mov
insb
fwait
out
inc
js
sub
daa
mov
loop
xor
and
jg
adc
add
shrb
dec
cmp
mov
imul
lods
mov
int
rcrb
mov
push
pop
fistl
mov
mov
lret
sbbl
push
dec
mov
xchg
cmp
loope
push
xor
push
dec
sbb
jb
faddl
mov
dec
cmpsl
popa
sub
xor
loopne
rcrl
lret
into
or
adc
fbstp
hlt
leave
mov
pop
ljmp
xchg
xor
mov
dec
and
sbb
leave
cmp
jp
push
ret
imul
js
popa
jmp
adc
setl
inc
lea
mov
dec
out
std
jecxz
jle
xor
mov
aaa
cmp
xchg
adc
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
roll
jecxz
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
roll
jecxz
xchg
inc
adcl
mov
xchg
jae
arpl
xor
and
roll
jecxz
xchg
inc
adcl
mov
aas
fldenv
mov
int3
sbb
or
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jo
pusha
jecxz
roll
test
dec
int3
bound
loopne
rclb
inc
mov
mov
add
pusha
jecxz
roll
xor
add
rclb
inc
mov
nop
and
repz
dec
rcrl
sub
add
aaa
mov
dec
int3
popa
xlat
add
tzcnt
ss
arpl
rorl
xchg
sbb
push
cwtl
mov
sbb
arpl
mov
cmp
xor
pop
xchg
xchg
xchg
ret
jne
leave
pushf
sub
ds
loopne
mov
nop
inc
jg
stos
pushf
icebp
mov
movsb
jb
rol
outsl
cmpsl
mov
pushf
call
xor
in
orb
pop
fs
iret
mov
mov
jnp
loope
in
aas
adc
mov
mov
adc
sbb
push
mov
mov
xchg
add
es
lods
xor
outsl
in
nop
mov
mov
cmp
and
jecxz
or
push
insl
arpl
es
pop
addb
repz
push
roll
daa
mov
mov
jmp
push
flds
xor
push
pushf
add
stos
inc
filds
pop
fldl
shl
push
mov
mov
push
lds
adc
inc
pop
repz
aas
shll
mov
sti
and
adc
push
xorl
subl
jbe
push
adc
mov
and
lock
arpl
push
rolb
mov
add
pusha
jecxz
roll
xor
add
rclb
inc
mov
mov
add
dec
stos
out
popa
xor
in
lds
xchg
mov
xchg
hlt
fsubs
push
ss
or
sbb
and
lcall
push
dec
xor
sbb
dec
testb
mov
call
cli
mov
gs
or
clc
add
leave
popa
std
out
mov
push
xlat
scas
dec
repnz
inc
cmp
add
fcmovnu
ret
lods
dec
int3
popl
inc
rcll
aas
fwait
cmp
sahf
or
xor
xlat
ss
out
xchg
sbb
sbb
arpl
insl
pop
pop
hlt
insb
outsl
jnp
inc
sub
addb
shr
leave
xor
jp
xor
or
or
mov
stos
out
xor
mov
or
jge
push
sub
mov
aas
or
je
pop
and
cmp
jmp
popa
shll
push
cld
enter
or
cmp
jo
leave
push
or
xchg
in
cmp
adc
stc
std
xor
dec
int3
fadd
imul
xchg
cwtl
loop
xchg
ret
aas
cmp
hlt
aad
xchg
lea
mov
popa
loop
ficompl
jmp
mov
test
cltd
in
adc
xlat
push
mov
leave
or
in
ror
push
pushf
aam
sub
push
jns
adc
fsts
pop
jmp
call
push
sbb
inc
mov
cmpsl
cmp
add
loope
test
mov
push
add
enter
pop
push
gs
call
mov
inc
cmp
in
scas
test
test
testb
dec
jo
mov
fdivr
or
es
pusha
jne
or
sub
add
js
pop
fs
mov
outsb
jle
mov
sbb
cmp
and
xchg
add
in
jp
dec
insb
movsb
adc
push
ret
xchg
mov
sarl
inc
in
cmpsb
out
push
xchg
mov
rsqrtps
fs
lahf
leave
rcrl
pop
outsb
int
rorb
jnp
pop
popf
xbegin
aas
stos
xchg
mov
mov
dec
in
cmp
addb
in
sbb
or
xchg
icebp
xor
scas
xor
or
pop
lods
cmpsl
in
pop
push
testl
add
push
out
cmp
mov
shll
adc
lahf
adc
push
mov
jb
in
cs
aas
push
jbe
mov
push
cmpsl
push
jbe
movq
mov
scas
adc
xchg
pop
adc
shlb
cwtl
std
movsl
pop
mov
inc
sub
xor
mov
cmp
sub
out
into
inc
ja
icebp
into
jle
jg
push
call
dec
mov
lcall
adc
iret
adc
push
or
ret
inc
imul
jl
push
xchg
nop
test
push
push
cmp
push
stc
mov
bound
mov
call
je
cmp
pop
negb
hlt
fldcw
pop
pusha
out
jle
pop
mov
insl
ds
lods
lea
test
das
mov
cmpsl
or
xor
sarb
pop
ja
sahf
sbb
pop
mov
shll
ficoml
imul
push
push
inc
fidivrs
jb
lods
je
sub
or
in
pop
shlb
js
gs
sub
xchg
push
outsb
mov
cmpsb
add
cwtl
xchg
mov
adc
mov
je
jecxz
test
in
outsb
adc
mov
test
mov
jnp
push
cld
adc
jecxz
add
add
xor
repz
leave
mov
jae
insb
inc
mov
jnp
jmp
jb
xchg
mov
test
lret
dec
inc
lahf
je
clc
test
cmp
insl
push
inc
jb
mov
ret
inc
hlt
insl
add
fimuls
jecxz
jno
or
imul
mov
or
scas
push
imul
clc
int3
sub
in
test
mov
das
movsl
cmpsb
push
cmc
int3
add
push
fdivr
pop
or
in
cmpsb
fwait
test
jecxz
dec
cmp
test
shll
data16
jl
in
sub
lret
push
and
ret
mov
dec
inc
loop
sub
mov
cltd
pop
push
mov
stc
mov
inc
and
adc
je
jp
shlb
addb
rsm
ja
jmp
add
adc
mov
xchg
mov
mov
bound
js
dec
adc
xor
inc
inc
jecxz
dec
sarb
xchg
jl
lock
inc
loope
pop
push
push
paddb
mov
inc
jmp
cmp
push
call
lods
in
out
xor
jo
iret
out
fs
jne
movsb
sub
lods
xchg
stos
aad
and
stos
cli
adc
jb
cltd
sbb
imul
xchg
pop
mov
inc
pop
add
push
pop
or
lahf
enter
mov
insl
mov
dec
inc
push
lcall
mov
or
xchg
mov
add
push
stos
ret
adc
int
push
in
pop
and
mov
insl
pop
sub
in
repnz
xchg
stc
add
push
lcall
sarb
imul
dec
inc
test
lret
mov
or
lahf
outsl
add
mov
lods
outsb
mov
das
mov
cs
sub
cmp
out
fiaddl
xchg
xor
cs
mov
fmuls
jae
mov
fwait
mov
aas
add
push
or
icebp
xchg
and
aaa
enter
sbb
pop
sub
mov
sbb
xor
jo
push
xchg
loop
push
xorb
dec
loope
ror
jp
nop
cli
mov
movsb
add
jne
lods
jecxz
std
pop
or
sbb
popl
xchg
sub
dec
sub
repnz
pop
scas
sti
lods
mov
jge
mov
pusha
dec
add
jne
dec
les
aaa
sub
in
push
dec
mov
mov
loope
insl
aas
sub
xor
add
push
cmp
cmp
dec
cmc
jae
adc
idivb
push
pop
pop
adc
cld
add
mov
fimull
add
lods
xchg
mov
cmpsl
out
mov
jae
ret
pop
mov
adc
mov
xor
in
mov
insb
cmpsl
cwtl
inc
adc
outsl
jmp
je
mov
adc
stc
mov
or
jno
cmp
lods
jmp
aad
insb
add
jecxz
dec
fidivl
xchg
and
pushf
rcr
sbb
and
mov
jg
addr16
lret
shrl
icebp
outsl
lret
mov
scas
bound
es
or
mov
jl
xchg
out
fldenv
push
data16
hlt
setae
out
in
enter
popa
inc
ss
sbb
push
push
add
jg
xchg
dec
cmc
or
adcb
fstpt
xchg
sub
dec
psubb
leave
into
add
jg
out
pop
pop
mov
insb
repz
push
sbb
push
xchg
movsl
adc
xor
rcrl
daa
xor
in
out
jp
cmpsb
mov
mov
aad
lret
fiadds
shlb
pop
jl
iret
and
fdiv
imul
dec
stc
cmpsb
xchg
pushf
cld
inc
loope
pop
dec
inc
aam
or
fnstenv
pop
jge
hlt
fsts
cmpb
repz
mov
dec
mov
das
xchg
xchg
mov
in
sub
mov
xor
pop
sub
pop
pop
mov
and
stc
sti
xchg
into
or
mov
cmp
mov
ljmp
xchg
xchg
and
movsb
les
pop
xor
mov
pop
mov
popa
mov
jae
pushf
mov
loope
jl
pushf
test
push
fldenv
push
dec
lods
jecxz
aad
xor
out
xor
or
sbb
or
int3
ret
mov
dec
cld
adc
mov
push
or
pop
cmp
push
and
je
mov
mov
cmpl
loope
out
int3
jmp
add
je
jl
int3
pop
jp
pop
in
mov
add
jecxz
gs
push
add
xor
adc
inc
adc
insb
mov
sub
adc
mov
mov
mov
adcb
out
push
or
data16
rcl
mov
sub
sub
mov
rcr
enter
sub
pop
pop
ret
cs
jge
aaa
and
pop
push
outsl
loopne
int3
int3
out
ja
mov
or
and
filds
xlat
jle
rorb
mov
xchg
iret
ds
les
xor
nop
int3
sub
cmp
adc
pop
mov
jae
inc
clc
jecxz
or
cmp
stc
ljmp
and
mov
paddsw
test
aad
inc
insl
fsubs
or
or
cmp
mov
pusha
inc
mov
fstpt
add
rorb
push
in
push
andl
mov
imul
adc
cmp
sbb
test
fwait
in
movsb
pop
jbe
testl
or
jp
mov
lret
popf
fld1
add
or
xor
inc
sub
and
jecxz
ljmp
mov
add
mov
xor
pop
dec
repnz
mov
push
arpl
add
aam
sbb
mov
pop
mov
xchg
mov
fsts
add
fdivrp
rcrl
jecxz
jg
push
insb
sub
hlt
jl
adc
cmp
sub
dec
jg
push
repz
dec
fwait
addr16
int3
jp
stos
sbb
arpl
mov
mov
loopne
data16
mov
xchg
dec
inc
and
ret
shrb
iret
movsl
and
or
fwait
cmpsb
jno
and
js
lahf
jae
xchg
fwait
scas
add
mov
iret
repnz
inc
gs
cs
dec
or
ss
push
dec
sbb
add
push
and
lods
sub
mov
aas
pop
in
add
add
sbb
mov
push
adc
cmpsb
mov
mov
test
mov
std
push
mov
sub
out
adc
or
mov
sbb
mov
or
mov
lods
add
movsb
cmp
aad
push
mov
sbb
popf
in
fdiv
sbb
xor
inc
pop
shrb
ficompl
mov
out
nop
sahf
xchg
ret
push
jge
cmp
addr16
cmpsb
mov
jne
and
inc
out
jge
xchg
addl
loopne
js
lock
into
adc
ficomps
lods
iret
push
pop
mov
cmp
xchg
cmp
loope
es
lret
mov
mov
leave
mov
dec
and
popf
loopne
movsl
insb
clc
sahf
data16
imul
out
repnz
cmp
mov
xchg
repnz
mov
scas
sub
inc
addr16
sub
out
sbbl
push
int
push
ds
stos
dec
mov
hlt
dec
cwtl
cmpsl
and
mov
sarb
lcall
pop
adc
aad
xchg
jbe
push
or
xor
out
add
dec
dec
dec
les
jecxz
fsubrs
xor
mov
xchg
decb
repnz
imul
loopne
movsl
shlb
push
dec
sahf
xor
mov
nop
push
and
mov
jl
push
mov
add
mov
push
mov
mov
mov
or
enter
mov
xchg
xchg
aas
mov
push
pop
mov
mov
xchg
add
xchg
adc
pop
mov
add
fstpt
inc
cmp
or
sti
push
pop
or
imul
jb
ret
ret
cwtl
xchg
pop
loope
mov
popf
loopne
mov
cmpsl
subb
or
push
popf
pusha
ds
popa
inc
gs
scas
insl
pop
jno
mov
aas
jnp
cmp
sti
adc
jbe
inc
xchg
test
dec
xchg
mov
repnz
jnp
push
adc
cmp
into
or
fisubrs
mov
fs
rolb
sub
into
push
shrl
jns
dec
or
js
sub
add
cli
mov
sbb
adc
ret
jg
out
mov
mov
fsubs
aam
adc
xor
loop
setl
into
inc
pop
mov
mov
mov
mov
sub
jmp
xor
scas
in
aam
int3
std
or
rcrl
add
hlt
mov
fcoms
pop
orl
dec
inc
inc
pop
icebp
fs
clc
mov
stc
mov
cmp
jp
aas
loop
jne
inc
sbb
push
dec
ret
or
pop
xor
mov
jl
push
andb
gs
and
jae
dec
lods
pop
decb
arpl
or
packsswb
xor
xor
cmp
fs
notb
pop
cmp
data16
or
inc
popf
or
fs
insb
mov
mov
jne
sbbl
and
mov
mov
mov
out
inc
movsb
pusha
cmp
repnz
mov
std
lods
xor
push
cmpsl
call
jae
jmp
std
pop
ret
in
stos
jp
mov
fstl
loope
xor
adc
pop
sbb
xchg
repz
ret
out
rclb
push
aas
mov
push
push
mov
push
or
xorl
les
loopne
in
pop
push
sahf
xor
addr16
mov
and
lcall
ret
je
ljmp
sub
cmpsl
mov
add
enter
jo
sub
mov
inc
sbb
mov
and
jmp
pop
pop
loope
lods
cmp
sbb
je
push
sarl
dec
add
scas
popa
sub
bound
aad
or
pop
outsb
pusha
xor
inc
repnz
xchg
inc
inc
pusha
ret
jno
add
cmp
loopne
pop
mov
int
sbb
ret
or
std
imulb
lahf
cmp
subl
jae
movsl
cmp
inc
mov
sbb
sbb
pop
popf
mov
mov
enter
adc
dec
add
dec
sub
cmc
insb
xchg
jnp
pop
mov
into
or
mov
xchg
lret
icebp
fldcw
out
dec
and
loopne
jl
mov
pop
pop
xchg
jp
cmp
cwtl
mov
cmc
pop
pop
test
test
and
into
addb
and
pop
push
and
and
faddl
mov
inc
into
xchg
cmp
inc
ss
sub
fcomps
xchg
outsl
pop
cmpsl
mov
push
daa
mov
scas
icebp
and
cwtl
fsubl
aaa
rclb
xchg
mov
jae
mov
jnp
dec
je
cmp
sbb
fadd
inc
sbb
icebp
roll
push
pusha
push
push
test
mov
imul
push
jg
sub
aam
dec
jae
daa
cmpsl
add
xchg
imul
gs
add
add
xchg
sub
xor
cmpsb
aam
mov
bound
in
push
movl
cltd
push
in
das
lods
mov
mov
jge
pop
jg
lret
mov
xchg
in
pop
in
test
test
out
idivb
cmpb
rolb
lds
xchg
cmp
inc
and
fistl
push
and
setns
push
inc
ja
aaa
sahf
push
fnsave
jo
inc
add
insb
adc
pop
js
push
cwtl
jg
push
adc
call
push
xor
stc
xchg
loop
and
mov
dec
pop
pushf
lds
sub
cmc
lret
sub
jo
loop
xchg
or
in
std
sbbb
cmpsb
or
lock
cmp
js
aaa
icebp
jo
add
push
loope
xor
xchg
mov
mov
sarl
xchg
jbe
fistpll
ficoml
outsl
movsl
or
jl
jae
out
cmp
add
mov
inc
fucomi
lret
push
out
inc
jnp
push
push
mov
das
or
mov
sub
or
xor
scas
inc
mov
and
inc
sbb
xchg
sbb
add
mov
push
imul
scas
out
pushw
sub
repz
cmp
ret
xchg
ljmp
mov
clc
cmp
push
cmp
imul
lea
xorl
lcall
sbb
sbb
sbb
cwtl
loopne
jbe
aad
std
loopne
push
aad
les
dec
ss
pop
dec
neg
repz
pop
xchg
mov
or
aaa
pop
shrb
and
int3
fnsave
mov
push
jb
movsb
fmuls
fisubl
dec
popl
shlb
cld
pop
negl
mov
lahf
adc
jl
jns
fcmovnu
inc
pop
rol
roll
outsl
roll
add
add
iret
or
jno
cs
sub
push
pushf
or
or
pushf
sahf
adc
xor
mov
sbb
inc
outsb
push
cltd
adc
data16
inc
cmp
jbe
xor
sti
sub
cli
lods
mov
lea
xor
jo
addl
scas
sbb
xchg
pop
jb
icebp
stc
rolb
inc
sub
adc
pop
sqrtps
cmp
in
shll
cmpsb
daa
dec
pop
ja
jg
mov
lock
test
adc
add
scas
mov
mov
push
icebp
sub
push
test
sub
dec
fdivrl
lock
sbb
cmp
repnz
xchg
nop
cld
xchg
pop
mov
jmp
aad
jae
xchg
cwtl
cmp
ja
enter
loop
lahf
rol
pop
addr16
jae
xor
outsl
inc
xchg
xor
push
or
mov
adcl
out
push
pop
push
insb
inc
stos
repnz
push
pop
cmp
sbb
in
repnz
inc
jecxz
in
lods
shll
add
xor
fneni(8087
in
mov
les
mov
sbb
add
les
add
push
movsl
add
inc
into
shll
imul
push
fbld
jecxz
mov
dec
jnp
push
xor
and
pop
lcall
std
pop
jle
adc
decl
push
sub
push
push
in
mov
mov
mov
push
pop
sub
dec
ret
pushf
and
popf
mov
push
test
jns
xorps
movsb
cmp
pop
loope
rorl
call
scas
mov
ret
cmpsb
in
pop
sub
mov
notb
std
loopne
or
call
pop
and
cmpsl
pop
mov
ljmp
mov
int
data16
xchg
push
cmp
mov
or
stos
stos
jae
ljmp
rorb
loop
jmp
push
lods
add
xchg
int3
mov
loop
aas
jnp
call
cwtl
shll
pop
cmpsl
lret
xchg
ret
inc
pop
mov
jp
ret
xor
adc
xchg
sub
mov
notb
imul
lock
mov
pop
rol
push
jbe
and
push
arpl
pmulhuw
push
clc
rcr
add
pop
push
add
jno
icebp
xchg
loope
jnp
push
rolb
mov
cli
bound
push
inc
repz
sbbl
lret
inc
mov
push
data16
nop
mov
jl
mov
and
jle
sbb
cmpsl
in
pop
mov
add
stc
icebp
add
inc
dec
push
pop
mov
jle
test
inc
or
les
sub
iret
movsl
cs
lock
cs
xchg
xor
addr16
inc
mov
movsl
xchg
cld
mov
shr
aad
idivl
fistl
lock
and
inc
push
js
imul
lods
cmp
pop
jp
jecxz
add
sbb
cmp
jle
fadds
leave
dec
jecxz
fcoms
enter
and
movsl
stc
xor
and
push
cmp
add
mov
or
aaa
jle
mov
xchg
pop
cmpsb
sub
mov
pop
aas
sarl
pop
movb
idiv
arpl
jbe
or
mov
loop
ret
cli
push
and
imul
push
lods
repz
xchg
xlat
mov
cltd
dec
int3
sub
iretw
andb
push
and
mov
arpl
push
sub
adc
movsl
pop
inc
pop
push
dec
fs
aam
inc
dec
adc
cmc
xor
mov
lcall
scas
lea
cmp
orb
inc
xchg
lret
xlat
push
aas
testb
mov
push
xor
adc
pop
cld
dec
lds
ret
jne
sbb
repz
mov
shll
js
xchg
mov
out
int3
cmp
push
rep
ss
repz
jecxz
adc
inc
jnp
add
add
inc
in
sbb
dec
fistps
add
push
aad
adc
outsb
pop
pop
dec
or
dec
cs
adc
mov
jmp
popa
cmp
ja
add
pop
jno
xchg
dec
add
xorl
ret
xor
add
rclb
inc
mov
mov
add
pusha
jecxz
roll
xor
add
rclb
inc
mov
mov
add
pusha
arpl
inc
ret
xor
add
rclb
inc
mov
mov
add
push
roll
xor
addb
push
shlb
sub
outsl
in
jg
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jp
push
pop
dec
dec
pop
xor
pop
sbb
fcmovu
lret
lods
stos
xor
insl
push
pop
dec
dec
pop
cmp
or
loope
std
fcmove
lret
fildll
popf
jp
push
pop
push
dec
inc
cmp
and
cli
in
leave
fisubrs
loop
leave
fcos
jecxz
push
and
or
xor
out
xor
ror
int
aaa
push
and
jb
int
xchg
insl
xchg
mull
pop
sub
out
loop
inc
adc
and
xor
jecxz
jge
gs
add
xor
add
clc
push
sarb
push
inc
inc
in
std
lret
and
lea
sbbb
aad
inc
jns
cwtl
or
xor
cmp
add
fbstp
or
add
loop
push
xor
sub
inc
xchg
xchg
or
mov
adc
sbb
test
and
stc
pop
pop
jp
insl
pop
push
dec
pop
cmp
or
in
ljmp
mov
movsl
lcall
nopl
or
pop
das
inc
pop
jne
mov
orb
cmp
jmp
jmp
cli
icebp
or
push
adc
or
pop
sub
dec
das
mov
lret
mov
sbb
sub
sbb
sub
cli
in
ljmp
lods
stos
mov
jp
push
pop
dec
dec
pop
cmp
or
fcmove
lret
lods
stos
mov
jp
or
lret
ljmp
add
cmp
in
cmpsl
mov
sarb
fistl
fstps
dec
xchg
jmp
call
aas
xchg
mov
out
cs
rcrl
sbb
gs
mov
int3
fs
sub
jno
mov
ret
pop
jns
loop
sbb
popl
sbb
fs
test
push
mov
cltd
lock
push
into
das
xlat
dec
inc
int
push
pop
pop
dec
push
sahf
aad
repz
mov
mov
jg
sub
mov
lret
mov
in
ja
andl
dec
mov
mov
addr16
cli
and
sbbb
lret
mov
sbb
into
pop
loop
mov
mov
sub
std
push
mov
cmp
insl
sbb
xor
inc
xor
sbb
mov
lds
scas
les
push
cmc
adc
mov
in
lret
hlt
cwtl
push
and
xchg
xchg
fwait
mov
adc
scas
xor
mov
pop
enter
pop
leave
jmp
and
xor
dec
push
cmp
in
inc
enter
inc
lods
mov
xor
xchg
in
bound
test
leave
out
scas
cmp
mov
mov
inc
sub
addr16
fimuls
lret
xor
and
imul
xchg
mov
xor
fidivs
inc
mov
lahf
jp
xchg
and
cltd
dec
xchg
cmp
outsl
push
pop
lahf
jmp
inc
xchg
adc
xor
mov
iret
pop
fiaddl
je
and
pop
data16
push
sub
mov
add
sbb
shlb
sub
xchg
repz
negl
push
and
xchg
fiaddl
adc
inc
push
dec
in
and
ret
sarb
fildll
pop
subb
sbb
mov
outsb
ret
scas
jmp
cmp
or
xchg
je
rcrl
fs
rolb
jns
test
out
mov
cmp
sbb
mov
add
jl
inc
mov
jge
cmp
rorb
out
jecxz
ja
xor
cmpsl
adc
dec
xchg
sbb
xor
call
imul
inc
pop
jmp
mov
aam
sub
sbb
cmc
pop
in
xor
popf
iret
sub
imul
push
leave
js
stos
mov
flds
add
pop
loope
insb
repz
int3
std
pop
idivb
jo
popa
cmp
pop
push
ja
xchg
and
mov
scas
sahf
aam
js
cwtl
dec
and
adc
loopne
cmp
xchg
push
mov
jne
jnp
push
push
lds
test
fiaddl
fwait
gs
and
mov
stos
cmp
repz
pop
xor
mov
mov
cmp
pop
push
jge
add
push
sbb
pop
push
inc
clc
lret
das
fnstsw
inc
test
mov
popl
dec
inc
xchg
daa
jge
out
out
add
jl
ret
push
xor
xchg
dec
mov
ss
out
cli
mov
sub
in
jmp
gs
mov
or
cmpsb
mov
arpl
add
mov
dec
pop
dec
hlt
lods
stos
mov
mov
iret
shlb
stc
dec
arpl
or
mov
cmp
lods
inc
sub
jbe
icebp
pop
std
xchg
shr
daa
lcall
mov
jne
pop
call
mov
add
sar
mov
jne
in
enter
iret
sub
mov
lods
sbb
pop
lock
jmp
pusha
movsl
sub
mov
sbb
mov
into
jno
testb
aam
push
push
in
adc
inc
pop
mov
call
xchg
cwtl
xlat
sub
pop
lahf
xor
inc
push
or
popf
inc
sub
jne
add
hlt
rcl
inc
test
sti
lds
push
ret
je
adc
stc
adc
add
jb
fimull
dec
jbe
cli
negl
lea
aas
cmp
sbb
out
jle
mov
in
ret
ret
into
testb
in
inc
dec
sub
loopne
xchg
cmp
fstl
xchg
ret
leave
inc
mov
push
addr16
sub
lods
mov
mov
push
scas
adc
subl
or
cmpsb
or
jl
lret
inc
mov
fisubl
lods
ja
or
shlb
lret
bound
xor
cmc
dec
repnz
popf
jb
push
neg
addr16
ret
inc
iret
fdivrs
stos
xchg
js
dec
adc
jp
cmp
lock
lret
cmpsb
addr16
ds
cmp
cmp
mov
push
insl
scas
gs
orb
sub
xor
test
pop
subl
hlt
mov
mov
push
xchg
les
loope
sub
mov
mov
sub
out
sbb
imul
jmp
ja
cmpsl
add
mov
addb
xchg
aaa
gs
or
push
mov
vpextrw
lds
cmp
push
stc
jnp
sti
sti
or
and
jmp
out
and
inc
out
pop
sbb
les
sub
in
lret
mov
into
dec
mov
mov
xlat
std
je
jmp
or
or
adc
in
dec
sub
xlat
sub
cmp
popl
pop
cltd
dec
jmp
or
xchg
stos
lods
divl
xor
popf
scas
je
popf
aad
loopne
iret
xchg
mov
into
clc
jmp
scas
arpl
imul
xor
and
movzwl
in
shlb
subb
jno
data16
xor
sti
testb
jb
mov
in
pop
mov
cmpsb
fdivrp
subb
nop
xchg
sahf
mov
jge
cld
xor
pop
inc
sub
push
push
sbb
popf
repnz
mov
and
sbb
imul
push
stos
inc
pop
ffreep
xchg
fcoml
sbb
test
rcll
aam
lods
lods
popf
test
dec
test
and
push
add
or
in
imul
xorb
cmp
stos
faddp
addr16
xlat
mov
cmp
jp
insb
fwait
jmp
test
movsl
clc
es
test
ret
sub
outsl
sub
dec
jne
fdivrp
lods
data16
scas
ljmp
xor
inc
pop
xor
aam
xchg
lcall
or
xchg
mov
xchg
or
nop
xor
xor
jno
pusha
add
test
inc
divb
push
pop
xchg
repnz
je
mov
mov
cmp
test
add
ret
in
inc
push
ss
sti
cmpsb
das
xchg
in
pop
jecxz
lds
pop
stos
sub
jl
jle
pop
xor
repnz
inc
pop
add
mov
test
stc
xor
fs
mov
inc
pop
pop
xor
arpl
aaa
cmp
or
or
and
xor
das
loop
add
dec
pop
mov
aas
hlt
add
js
or
mov
aad
out
sub
mov
mov
lahf
out
ds
in
xor
rorl
xchg
pop
fisttpll
rcr
push
sub
jo
jmp
lods
repnz
outsl
pusha
xorb
je
xchg
inc
mov
shll
jge
aas
dec
xlat
sti
sub
lock
lods
mov
jecxz
add
or
rcll
dec
or
lods
js
push
cs
mov
dec
push
cmpsb
xchg
push
xchg
fisttpl
xchg
js
popa
jo
mov
and
jle
movsb
mov
aas
call
add
inc
push
orb
push
mov
or
loopne
mov
lea
loope
stc
mov
js
inc
pop
fsubl
xor
rcll
out
cmpl
ljmp
mov
in
dec
jle
nop
push
test
mov
enter
roll
push
scas
pop
mov
ret
mov
imul
adc
jae
nop
fmuls
adc
xchg
outsl
add
mov
pop
xor
in
or
imulb
hlt
int3
adc
pop
inc
neg
sub
out
or
mov
xchg
repnz
cwtl
push
adc
jge
adc
lock
in
mov
fwait
loop
and
xor
cmpb
jno
daa
mov
pop
ja
aaa
mov
nop
xorb
cmp
pop
mov
fadds
fnstsw
repnz
sbb
or
scas
push
cmp
jmp
xchg
pop
adc
mov
xchg
shrl
test
cmpsl
xchg
jno
jg
and
dec
femms
pushf
js
jg
mov
jg
push
shll
xchg
packuswb
andl
xchg
ret
sub
xchg
movsl
xor
mov
mov
jmp
jl
dec
leave
push
jl
lcall
xchg
pop
mov
push
pop
outsl
xchg
pushf
jno
nop
push
ret
adcb
imull
xor
xchg
shrl
loopne
xor
movsl
mov
mov
push
sbb
push
test
sub
cmp
sub
fs
mov
jg
pushf
imul
inc
sub
mov
inc
int3
lret
mov
sbb
sub
add
sbbb
sti
lcall
imul
int3
mov
loopne
sub
push
cwtl
call
imul
imul
mov
mov
jnp
gs
dec
cmp
add
es
push
es
in
cmpsl
xor
inc
es
fsubrl
ret
or
cmpsl
cmp
pop
cmp
nopl
repz
test
test
aad
lods
sbb
arpl
stc
sbb
icebp
push
sbb
add
push
aad
cmp
mov
loope
xchg
scas
adc
jo
dec
mov
sbb
push
aam
or
fldl
xor
cmpsl
push
inc
mov
ret
add
push
and
push
enter
aad
cld
addr16
mov
xor
mov
aas
dec
hlt
pop
idivb
loop
sub
add
lea
and
enter
xor
call
jmp
fwait
jbe
mov
aad
data16
imul
mov
cmpl
jo
fiadds
add
xchg
mov
imul
arpl
and
push
push
movsl
xlat
addr16
jno
mov
das
mov
push
push
lret
add
and
inc
test
ss
push
cli
mov
sbb
sub
or
and
pop
add
ret
and
pusha
jne
adc
sbb
pop
add
lcall
test
cli
int
pusha
sbb
call
cltd
movb
mov
jmp
mov
pop
pop
and
das
pop
sub
add
lods
test
pop
sub
pop
aas
or
lea
data16
push
out
fs
pop
xchg
mov
dec
mov
movl
pop
mov
inc
cmp
nopl
loopne
aam
and
cld
jbe
inc
xchg
sub
in
rolb
sbb
or
mulps
call
scas
inc
inc
stc
orb
pop
into
in
or
enter
stos
pushf
ja
lds
dec
stos
mov
into
out
cmpsb
ret
inc
xchg
dec
dec
cld
mov
xchg
adc
cmp
lock
push
mov
pop
rorb
sub
mov
cltd
add
mov
push
jp
adc
xor
in
dec
fsts
cmc
loop
jbe
add
pop
inc
je
adcb
pop
mov
mov
push
paddsw
xor
enter
push
inc
push
cmp
and
fdivl
pop
add
sbb
and
idivl
pushf
lcall
push
lods
inc
or
and
loop
mov
mov
decl
add
rorb
loope
mov
out
xchg
pop
push
sbb
mov
adc
inc
and
sbb
fldcw
xchg
clc
adc
arpl
gs
repnz
add
ret
leave
psubw
adc
scas
mov
sbb
in
mov
shlb
pusha
int
push
enter
in
lcall
jnp
rcrb
lcall
imul
cmp
mov
popa
cmp
int3
data16
fwait
cmp
inc
or
sbbl
pushf
jl
cli
loope
mov
jns
lret
inc
cmp
inc
cltd
outsl
idivl
mov
enter
imul
lds
jle
adc
les
inc
out
inc
or
sbb
movsl
jbe
mov
inc
lds
dec
and
test
mov
stos
sub
mov
mov
fisubrs
inc
mov
ret
jne
mov
cmp
cmp
mov
popf
popf
stc
cmp
inc
add
es
cmpsb
dec
cmp
adc
mov
mov
mov
xor
sub
mov
stos
insb
xchg
jl
mov
popf
sahf
add
lds
mov
loop
fidivrl
filds
xor
mov
push
jecxz
inc
fsubrs
sub
arpl
mov
daa
das
outsb
std
lods
jbe
mov
add
fwait
cwtl
sahf
push
mov
leave
mov
adc
xor
cmc
xchg
int3
scas
stc
cmp
or
rcll
xchg
mov
xchg
cmp
pop
addr16
loopne
adc
jg
cwtl
xor
in
mov
pop
adc
jmp
cmp
out
or
popf
pop
sahf
mov
imul
scas
mov
scas
ret
in
or
xchg
inc
inc
mov
push
push
dec
fs
pop
or
jnp
add
and
test
sbb
push
inc
xor
mov
in
subl
in
mov
or
jae
into
xchg
sub
rolb
jae
out
xchg
pushw
popf
ljmp
sub
adc
aas
push
sbb
insb
sbb
add
jecxz
sbb
cmpps
inc
cmc
adc
mov
negb
out
push
lods
adc
out
scas
fwait
push
add
hlt
push
imul
xchg
sarb
out
fs
cmpsb
push
fildll
jne
shll
rcr
and
repz
or
adc
cmp
sbb
dec
cmp
or
push
pop
inc
int
popa
fcomps
push
mov
sbb
out
push
ficompl
negl
les
cwtl
pop
jg
popa
ss
inc
push
push
fsqrt
mov
push
and
clc
adc
in
lock
jmp
inc
sbb
nop
sub
hlt
push
test
pushf
mov
movsl
cld
sahf
and
stos
push
rcll
icebp
lea
jae
je
and
cld
pushl
fs
xchg
ffree
cwtl
mov
lds
push
sbb
aad
ljmp
std
rorl
add
dec
ljmp
roll
or
cmp
popl
jge
and
or
std
add
pop
cmpsb
xor
addr16
in
test
cli
dec
push
lcall
jo
ja
movsl
jnp
jne
jecxz
cltd
lea
out
inc
add
jle
lahf
or
sub
das
push
xchg
cmp
jae
sub
cmp
loop
push
pop
xchg
sti
mov
push
mov
push
sbb
test
cmp
push
push
mov
loop
xor
jl
inc
test
push
push
imull
xor
push
into
int
clc
sbb
lcall
lahf
rcrb
cmp
and
xchg
push
xchg
pop
mov
stos
out
movsb
cs
ror
ss
xchg
push
loope
mov
int3
cmp
fdivrl
fisubrs
mov
sbb
mov
mov
leave
add
jmp
pop
lret
pusha
push
repz
mov
in
sbb
push
pop
ds
cmp
loope
cmp
jbe
push
mov
xchg
imul
mov
cli
ds
sbb
bound
fsubrl
jno
xchg
je
pusha
sub
stc
jle
fsubrl
pop
rolb
inc
mov
shlb
popl
mov
rep
shll
and
mov
aad
add
lcall
jno
fsts
pop
imul
ret
lea
adc
mov
xchg
insb
arpl
addr16
movsl
inc
popf
adcl
push
xchg
addr16
lcall
lods
inc
imul
adc
add
push
mov
cmp
mov
adc
fldl
mov
lret
add
push
xchg
and
fwait
mov
out
and
xchg
fwait
js
mov
sub
test
pop
xchg
mov
mov
ret
mov
mov
sti
lret
xor
inc
pop
mov
hlt
ds
mov
pop
mov
loop
adc
xchg
xor
fucomp
xchg
xor
jns
inc
ucomiss
mov
lock
pop
adc
adc
mov
pop
push
cltd
scas
icebp
push
in
adc
inc
lock
dec
xor
ret
inc
aam
jecxz
cmp
rclb
sub
push
pop
and
and
jl
xchg
loop
imul
sbb
call
divb
lock
sbb
in
mov
jnp
mov
adc
sub
js
lea
cmp
imull
clc
rcll
out
cli
adc
arpl
cmpsl
lds
and
xchg
mov
sbb
shll
mov
mov
movsb
and
notl
stos
push
into
or
jae
push
and
ret
pop
sbb
adc
lods
test
int
test
lds
pop
adc
pop
pop
pop
fsubs
jle
sbbl
mov
and
lods
jbe
popa
sub
into
lsl
mov
stc
out
mov
xchg
orb
in
add
icebp
jo
sbb
inc
lock
cmc
fprem1
bound
mov
into
mov
popa
fwait
push
lds
adc
sti
dec
jbe
dec
jmp
jo
jnp
add
jnp
mov
xchg
cmc
cmpsl
loop
push
aad
cmp
movsl
test
arpl
sub
pushf
test
nop
or
scas
call
mov
je
gs
add
inc
mov
inc
loopne
cmp
pop
pop
inc
dec
push
insl
sbb
add
xor
dec
int3
inc
hlt
mov
fsubrp
mov
mov
jno
popl
stos
aas
ds
mov
out
push
mov
repnz
lods
xor
mov
xchg
xchg
sbbb
pushf
and
lret
shlb
dec
cld
sbb
mov
cmp
out
imul
stos
mov
pop
sub
sub
icebp
jb
rcrl
add
je
cli
jmp
or
movsb
lock
push
mov
leave
stos
adc
pop
xor
cld
enter
xor
jle
movsb
imull
sub
cmp
outsb
and
or
pop
cmpb
insb
jl
pop
mov
mov
rcll
gs
sub
daa
out
sub
push
repnz
cmpsl
pop
mov
mov
test
push
insl
mov
xor
rclb
xor
jae
push
roll
aaa
or
and
sub
cld
test
mov
push
dec
xor
dec
icebp
das
das
sub
lock
ja
mov
pop
dec
lea
fstps
fcmovnu
sbb
xchg
fnstsw
pop
pop
in
jmp
pusha
jnp
cmpsl
cmpsb
cli
mov
sti
pop
inc
push
cmp
divl
push
fcmovb
cmp
cs
mov
adc
mov
insb
pop
jnp
std
xlat
dec
pop
test
sub
frstor
or
inc
mov
jo
ret
mov
jp
dec
lods
jg
ficomps
inc
sbb
std
leave
or
cld
faddl
inc
dec
and
dec
enter
jne
mov
cld
out
nop
add
xchg
cs
cltd
fcomi
mov
ret
lds
pop
shll
ss
hlt
inc
mov
xor
test
sub
mov
hlt
jns
lret
test
lods
je
add
mov
loope
mov
pop
mov
push
sarb
aad
pop
or
mov
and
push
dec
adc
push
and
push
jecxz
xor
js
add
shl
sub
jecxz
xchg
lds
jp
mov
stos
mov
inc
jmp
ret
scas
xchg
dec
stos
push
dec
xor
mov
push
insb
lret
or
jb
movb
hlt
lahf
hlt
aas
mov
or
xchg
cwtl
int
out
inc
out
and
pusha
jp
push
xor
push
pop
lods
movsl
rorl
cmp
out
sub
je
add
and
and
sbb
mov
mov
outsl
call
fwait
addr16
enter
call
inc
pop
mov
mov
adc
push
out
rcr
cmc
cmp
cmc
ss
adc
into
mov
and
adc
mov
repz
add
xor
iret
popa
xchg
js
sbb
sub
adc
mov
fnstcw
cwtl
xor
sbb
mov
inc
mov
insb
stc
cld
fcoms
out
sub
test
insl
iret
lods
test
sub
les
sub
jnp
fmuls
gs
dec
pop
cmp
or
fcmove
lret
lods
stos
mov
jp
push
pop
dec
dec
pop
cmp
or
fcmove
lret
lods
stos
mov
jp
push
pop
dec
dec
pop
cmp
or
fcmove
lret
fnstcw
mov
jns
dec
dec
pop
cmp
mov
add
int
stos
int
and
jb
mov
dec
pop
ljmp
popf
sbb
loopew
jae
iret
repz
leave
psubusw
outsl
mov
fldt
jns
dec
pop
ljmp
out
cmp
or
jl
jmp
psubusw
int3
outsl
mov
pop
imul
loope
cmp
or
sbb
or
ja
push
adc
sbb
out
shll
out
sti
xchg
out
add
push
add
cmp
outsl
int3
pop
jbe
pop
push
imul
sarl
outsl
mov
addl
lcall
loop
xor
mov
ss
not
sar
fisubrl
das
clc
or
outsl
push
sub
arpl
insb
jp
arpl
add
out
cmp
add
stc
ds
icebp
pop
cmpb
cltd
inc
test
adc
addr16
push
pop
inc
sbb
push
lods
in
pop
ss
fnstcw
cli
outsl
test
inc
xor
outsl
sahf
divl
add
mov
cmp
or
sub
xchg
mov
cmp
pop
mov
imul
pop
sbb
xchg
cmp
or
stc
jmp
aas
fnstenv
test
dec
imul
sbb
insb
iret
insl
aas
cltd
jl
jp
push
or
sti
sub
repnz
out
cmp
pop
lcall
scas
ja
push
int3
add
ss
push
int
sub
sub
sub
and
iret
sbb
jmp
psubusw
outsl
mov
mov
dec
pop
ljmp
out
cmp
or
sbb
jmp
psubusw
outsl
mov
mov
es
sahf
xor
pop
mov
push
stc
fsub
jl
and
loop
mov
xchg
jmp
pusha
je
mov
cld
and
leave
mov
pushf
mov
or
stc
jbe
mov
test
mov
mov
dec
mov
sbb
movsl
popf
nop
xchg
push
aas
les
popf
jo
cld
fbstp
cmp
repz
adc
push
push
lcall
aaa
in
adc
push
or
sub
lea
test
inc
cltd
inc
xor
mov
xor
jmp
repnz
push
stos
push
aaa
push
jae
dec
out
out
aas
aas
dec
adc
adc
push
xchg
mov
sbb
mov
dec
xor
push
movsbl
pop
dec
je
xchg
js
mov
mov
push
adc
lods
into
adc
and
jno
add
or
xorb
test
sarb
iret
add
out
adc
add
fisubl
ret
outsb
sbbl
jecxz
jl
jns
and
inc
test
pop
outsl
add
lcall
and
into
addb
jbe
pop
and
aam
jl
mov
dec
sub
pop
rcll
and
pop
inc
xor
xchg
mov
decl
addr16
in
cmc
fdivrl
scas
das
pop
cmp
fisubl
and
push
push
jno
icebp
mov
fistps
inc
dec
loop
or
and
jno
daa
dec
clc
push
scas
int3
es
sahf
mov
je
jne
loop
pop
push
out
push
call
cmpsl
xor
inc
sbb
adc
mov
sbb
add
gs
pop
mov
mov
pop
and
outsb
xchg
js
jge
lods
fidivrl
push
add
inc
addb
sbb
push
mov
testl
fiadds
mov
int3
jns
inc
mov
adc
repz
lret
cmp
lcall
mov
sbb
inc
js
inc
lods
inc
cmp
push
jmp
mov
rclb
lock
and
sub
pushf
mov
clc
movsb
sbb
and
xor
into
repnz
out
mov
jnp
pop
in
mov
inc
and
xor
xor
scas
jge
jo
les
inc
adc
adc
inc
aam
insl
jne,pn
gs
dec
je
sbb
mov
in
inc
mov
mov
adc
xor
jnp
jo
cmp
mov
notl
jbe
pushf
dec
fbld
xchg
scas
jmp
insl
jb
in
mov
pop
cltd
lahf
fwait
shrl
stos
scas
jnp
dec
inc
div
sub
mov
xor
hlt
out
and
push
add
scas
and
int3
lods
pushf
dec
popf
sub
dec
jmp
or
lods
pop
adcl
inc
cmp
pop
pop
icebp
inc
inc
int3
adc
fbstp
inc
and
out
insb
jg
stc
sub
jmp
and
and
stc
add
or
jns
fwait
ret
mov
xchg
mov
aas
out
push
add
cli
inc
jmp
mov
adc
sbb
mov
in
sub
js
jl
mov
or
mov
dec
cld
cmp
int3
sarb
jne
add
inc
add
ficomps
sbb
adc
adc
adc
xchg
push
icebp
in
lret
jmp
nop
mov
rorl
lods
adc
and
mov
dec
sahf
leave
pop
cmp
sbb
inc
sti
out
dec
push
int
pop
mov
lea
mov
pop
xorb
lahf
pop
loope
xchg
xchg
jnp
and
dec
xor
popf
cmp
jno
dec
gs
loopne
push
ftst
and
pop
jge
or
shl
sbb
pop
lds
adc
popa
or
add
add
aaa
inc
push
jae
pop
cmp
adc
cmp
punpckhdq
scas
xlat
xchg
xor
sub
and
shrl
or
adc
fsubrs
shl
sti
hlt
cmc
xchg
pusha
repnz
jp
push
cmp
ds
and
push
ljmp
sbb
mov
insl
inc
lea
xor
cli
test
jae
mov
xchg
sbb
cmpsl
jne
mov
sub
nop
add
out
leave
mov
dec
xchg
test
inc
jo
inc
adc
data16
imul
cmp
xchg
pop
pop
cmp
xchg
in
mov
sahf
mov
aam
sbb
pop
mov
in
test
int
rcrl
mov
cltd
sbbb
jge
jmp
in
pop
and
lods
and
jecxz
sub
mov
sbb
jnp
push
and
filds
xor
loopne
mov
xchg
popf
mov
int
sbb
jg
or
jge
xor
cmp
in
xchg
mov
js
inc
mov
jle
in
cmp
dec
mov
lds
and
outsl
es
cli
sub
push
jae
shlb
mov
inc
push
xlat
outsb
stc
fbstp
cli
sbb
or
movsl
call
push
orb
xchg
jge
ss
aam
and
inc
out
jl
pop
call
dec
lds
pop
mov
push
inc
dec
sbb
push
sbb
inc
adc
and
sub
out
mov
push
sbb
mov
cmp
ss
adc
movb
fldt
xchg
rclb
mov
dec
or
enter
je
lods
mov
adc
cmp
mov
mov
adc
mov
dec
pushf
stos
xor
xchg
insl
pop
pusha
xchg
xor
inc
or
fwait
rsm
out
fisubl
loope
shlb
dec
pop
mov
xchg
adc
out
stos
loopne
addr16
imul
stos
mov
ret
sbb
inc
fwait
out
insb
fsubs
ret
sbb
movsb
sbb
inc
ljmp
fwait
mov
out
or
pop
cmp
pop
mov
cwtl
movsb
or
clc
mov
mov
ds
ret
fiadds
imul
fs
fcmovnu
icebp
aad
xlat
ret
xchg
mov
es
pusha
adc
push
xchg
loope
inc
fldcw
fisttps
movsb
pop
testb
inc
push
insb
aaa
test
fcompl
inc
bnd
dec
and
and
xchg
lcall
dec
into
inc
jne
aas
bound
stos
dec
pushf
push
xlat
cmc
loop
scas
addr16
xlat
mov
push
pop
jge
hlt
test
cwtl
shl
mov
std
hlt
movsl
jns
cmp
or
sbb
add
push
and
lret
fnstcw
pop
mov
sub
test
or
inc
jae
cmp
jno
push
or
push
enter
aas
inc
fucomip
mov
mov
outsl
sti
sub
aaa
xchg
xchg
outsb
neg
gs
push
jnp
push
push
push
inc
out
mov
jmp
jg
sbb
das
outsb
pop
aam
stos
ljmp
sub
not
and
stos
arpl
add
daa
xor
fbld
subb
orb
or
mov
sub
jno
adc
xchg
lock
pcmpeqd
mov
inc
leave
mov
fisttpl
orps
loop
mov
adc
je
inc
adc
sar
mov
adc
cmc
xlat
aas
addr16
sbb
mov
fs
mov
ds
ret
push
pop
fbstp
aaa
push
lods
shlb
xor
adc
xchg
dec
mov
sbb
nop
xchg
xchg
icebp
mov
push
pop
in
lods
test
xchg
ret
xchg
ljmp
adc
adc
jnp
push
cmp
stc
leave
bound
je
lea
inc
rcrl
loop
push
inc
fcompl
jno
cwtl
lahf
adc
mov
loopne
and
ret
cltd
jnp
ljmp
adc
jnp
loopne,pt
adc
scas
lret
bound
imul
cs
inc
mov
dec
jecxz
lahf
out
notb
push
pop
inc
nop
sbb
ja
fwait
iret
push
push
xor
or
gs
popf
scas
or
mov
pop
popf
ret
or
in
hlt
mov
fildl
or
js
shr
jno
rolb
inc
fdivr
mov
repnz
push
push
cmp
addr16
or
hlt
push
popa
or
faddl
cwtl
xchg
jnp
mov
sti
inc
shrl
mov
sub
ret
xor
and
or
mov
dec
push
xchg
dec
push
movsl
cmp
dec
mov
and
orb
cmp
aad
in
or
loope
mov
pop
out
pop
test
dec
jb
dec
and
shlb
or
into
xchg
push
jb
mov
cmp
addr16
lret
sub
push
push
xchg
and
out
pop
inc
clc
cltd
sub
aad
mov
xchg
pop
push
popa
push
aaa
and
push
lods
adc
lds
in
mov
inc
sub
mov
xor
aas
jl
inc
in
imul
pop
sti
push
int
cwtl
cs
inc
cmpsl
add
imul
fdivl
aas
jmp
ss
or
imulb
std
lret
or
jg
fsubrp
loopne
fwait
sti
cmpsb
push
jno
mov
sub
pop
adc
jge
mov
xor
out
add
add
das
cli
dec
push
loop
mov
jae
loope
inc
outsb
int
mov
push
ss
pusha
enter
cli
pop
decb
fnstcw
cmp
es
in
ret
lock
sbb
in
rcrl
and
jno
out
fdivs
nop
jle
das
jecxz
xor
sahf
jae
orl
leave
outsb
push
mov
loope
mov
in
std
mov
daa
cltd
mov
xchg
hlt
adc
add
mov
xchg
cmp
add
in
jmp
dec
cmp
pop
push
add
adcl
jl,pn
icebp
push
add
xchg
or
mov
add
je
or
jnp
push
shl
pop
xor
loope
inc
or
loope
jp
cmp
mov
imul
sbb
lret
pop
sub
pusha
lods
and
test
mov
fildll
pop
pop
test
pop
popf
push
adc
sub
mov
sbb
testl
lods
and
jg
inc
pop
cwtl
pusha
adc
sbb
add
lds
mov
int
les
pop
clc
pop
lret
jns
or
xchg
sbb
adc
or
repnz
hlt
ljmp
movsl
test
ret
iret
cmp
scas
das
add
xor
je
xor
push
out
or
loope
push
mov
pop
stos
js
lods
shrb
ja
push
lahf
out
out
ljmp
mov
imul
movsb
mov
mov
leave
clc
cmp
mov
repz
pop
jge
adc
fistps
mov
scas
cmp
into
pop
mov
popa
push
or
out
mov
iret
sub
lds
and
push
add
jo
insb
lock
push
js
inc
mov
test
cmp
loop
jo
insb
push
icebp
arpl
adc
xchg
in
std
popa
mov
inc
jns
lret
in
scas
in
xor
sub
popa
sub
pop
sbb
cmp
jb
shrb
pop
adc
lea
addr16
repz
adc
jno
mov
rcl
sub
pop
jae
cmp
aaa
subb
and
out
cmp
push
inc
sbb
pop
adcw
sub
pop
shll
aam
fiadds
push
test
mov
out
lcall
out
fstpt
lahf
push
inc
notb
mov
lcall
push
mov
jp
in
pop
es
insb
cmpsl
mov
pop
inc
fmull
dec
mov
cmp
jns
sub
mov
movsb
mov
dec
sar
cmp
mov
outsb
or
mov
inc
add
jnp
cs
shlb
ret
mov
pusha
dec
test
inc
jp
and
xor
cmp
cwtl
dec
lahf
dec
and
mov
lretw
mov
inc
fiadds
leave
test
inc
les
flds
pusha
mov
lret
fs
loope
cmp
inc
adc
sub
xor
mov
dec
jge
adc
aas
jecxz
mov
pop
sub
scas
mov
pushf
pop
gs
out
jo
popl
clc
orb
mov
hlt
addl
rcrb
xor
mov
inc
stos
mov
cltd
push
ret
fadds
addb
push
outsb
cmp
pop
xor
cmp
repnz
adc
xor
jecxz
push
cli
repz
sub
jo
adc
inc
sub
sbb
fst
out
aas
sub
popf
mov
rolb
cmp
xchg
inc
push
xchg
cmpsb
adc
xchg
fcmove
xor
cld
outsb
jne
jl
mov
gs
jmp
bound
out
cwtl
inc
les
mov
mov
icebp
dec
fnstenv
fldl
or
cld
mov
or
sti
and
dec
mov
add
test
mov
inc
push
repz
inc
pop
pop
and
stos
mov
mov
add
adc
into
loope
bound
iret
aaa
mov
dec
cmpsl
jg
out
xlat
mov
mov
xor
nop
dec
in
push
mov
mov
sti
out
sbb
psubd
pop
mov
inc
ret
in
mov
cmp
xor
repnz
push
fistpl
lahf
aad
cltd
lret
sbb
cmc
jecxz
or
cs
addr16
dec
cmp
dec
adcb
jo
test
fwait
loopne
add
fsub
ds
daa
dec
pushf
sub
cmpsl
int
mov
cmc
aad
bound
push
lret
fwait
in
pop
jl
stos
add
addb
pop
shlb
out
lds
sub
fistpll
clc
aam
dec
divb
out
fsubrl
xor
in
ljmp
sahf
dec
xor
fldl
xor
lcall
xchg
dec
push
push
sub
addb
lods
fsts
mov
push
out
outsl
mov
mov
dec
cmp
into
test
mov
out
fimuls
test
cli
dec
pop
cltd
cmp
fnstcw
fldt
dec
jae
loopne
pushf
push
and
jecxz
adc
add
sbb
call
fcoml
sbb
lahf
js
outsl
mov
xor
imulw
and
iret
or
jp
xor
mov
inc
adc
inc
sub
add
pusha
aad
mov
adc
jle
loopne
push
cmp
pop
in
adcb
push
jecxz
idiv
or
pop
push
shl
jns
sub
into
arpl
stos
in
pop
ror
shll
sub
adc
add
xchg
and
mov
mov
jo
push
sbb
loope
insb
jmp
xchg
cmp
cmp
lods
stos
and
adc
sub
sbb
push
inc
in
ja
imul
repz
pop
inc
test
mov
xor
inc
xchg
jbe
or
mov
and
and
out
sub
outsb
fwait
or
pop
sbb
mov
sahf
jno
in
ret
xor
ss
bswap
pop
mov
test
or
sbb
dec
hlt
pusha
ret
mov
inc
popa
jp
inc
daa
mov
adc
cltd
xlat
stc
xor
adc
sbb
es
in
pop
and
mov
push
jno
jno
shrl
cwtl
dec
movsl
mov
popf
xor
js
insl
cmpsb
push
notl
xchg
push
and
orb
shrl
dec
push
test
add
jbe
xor
scas
push
js
dec
sbb
or
add
mov
gs
jle
out
arpl
scas
scas
sar
push
cmp
jle
fcmove
pusha
arpl
add
mov
dec
sbb
scas
icebp
sbb
arpl
lods
xor
jno
xchg
sub
cmp
push
test
divb
imul
negb
mov
test
adc
lds
xchg
or
add
pusha
jle
shrl
mov
mov
pop
push
xchg
sub
add
popf
sbb
inc
dec
leave
loop
movsl
or
dec
aaa
lret
lock
and
mov
cld
shlb
fcmove
aad
pushl
push
xchg
jg
inc
jns
mov
das
push
mov
rcrb
lods
jl
out
loopne
push
mov
push
or
push
jo
scas
mov
decb
out
push
in
sbb
inc
cmpsb
xchg
leave
jbe
inc
addr16
ljmp
inc
or
push
mov
jns
xorb
mov
cld
in
in
adc
lods
ljmp
xor
mov
outsb
push
mov
gs
xchg
cmpsl
psrld
mov
sub
lahf
fsqrt
cmp
inc
dec
into
sbb
jl
fistpl
cwtl
xor
adc
mov
xor
fisubl
pop
in
test
scas
cmp
push
or
sub
xchg
xchg
add
push
jg
jle
mov
pop
sahf
ss
repz
sbb
xchg
push
pop
jns
ds
js
inc
int
mov
push
and
lods
retw
stos
cmc
dec
sbb
xor
pop
ret
in
rorb
inc
psllq
push
adc
enter
lahf
and
dec
dec
adc
fsubrl
and
and
adc
dec
lcall
sub
hlt
ljmp
push
add
je
ds
lods
inc
jns
subb
xchg
out
jns
pop
cmc
cmp
outsb
sbb
and
mov
mov
fisubs
punpckhwd
mov
loope
mov
movsl
adc
xchg
insb
jnp
dec
and
arpl
test
xchg
popa
shrl
je
lcall
pop
push
movsb
or
arpl
sahf
inc
cmp
jl
in
push
xor
insl
and
lahf
xchg
cmp
push
or
cmp
aas
dec
inc
testb
or
adc
rcr
nop
mov
dec
daa
mov
pop
jo
ficoms
or
sub
imul
xchg
mov
imul
pop
adc
mov
jbe
cmp
andb
mov
pop
outsl
mov
fsubrs
mov
mov
mov
adc
je
leave
jno
fwait
or
orl
sbb
mov
fucom
lretw
cmp
daa
test
pop
and
stos
insl
push
xor
and
cmp
imul
xor
dec
lds
das
fsubrl
xchg
repnz
sub
test
idivl
mov
cld
or
xor
pop
mov
and
cmp
les
jecxz
sbb
out
jo
mov
or
sbb
cmpsb
inc
icebp
jne
stos
addl
sar
mov
mov
cwtl
aaa
aaa
mov
outsl
push
scas
inc
repnz
adc
aad
dec
or
jae
xor
mov
jle
int3
sbb
mov
loop
sub
rorl
xchg
mov
outsl
loop
pop
jmp
imul
pop
sbb
sahf
adc
pop
int3
popa
aam
cmp
into
push
cs
adc
cmpsb
jo
pusha
dec
imul
mov
sub
cld
xor
dec
cld
jb
lahf
sbb
xor
ds
push
inc
stos
aam
push
jg
sbb
or
addb
scas
stos
repnz
add
inc
lahf
adcl
mov
std
aaa
testl
mov
repnz
fdivrs
sbb
out
pavgw
and
in
ljmp
iret
pop
out
cmc
sar
sbb
inc
add
shll
filds
outsb
xor
lods
push
jae
inc
sub
mov
arpl
jmp
hlt
scas
xor
push
ds
fcomps
jb
dec
aas
push
jae
mov
and
or
repz
daa
aam
pop
sub
and
xchg
cli
push
and
mov
mov
lahf
test
outsb
ja
cmp
push
cwtl
jb
push
push
mov
jbe
fisttps
lahf
loope
int
ds
xor
in
push
mov
in
mov
wbinvd
lea
cmp
or
je
mov
push
lock
mov
mov
pop
mov
fadd
mov
jnp
sti
repz
ss
fwait
pop
movsl
xchg
or
dec
cmp
ficoms
lea
pop
out
cmpsl
mov
push
scas
lahf
in
daa
dec
aad
test
mov
mov
xchg
inc
adcl
and
xchg
xor
mov
iret
push
test
icebp
jns
adc
pop
test
mov
jbe
mov
shlb
je
mov
mov
test
inc
jge
cmp
int3
lcall
stos
lods
jl
xchg
adc
outsb
arpl
adc
pop
jns
xlat
push
sbb
test
jns
cmp
sub
push
cmpsb
dec
mov
jbe
jns
dec
pop
ljmp
out
cmp
or
sbb
jmp
psubusw
outsl
mov
mov
dec
pop
ljmp
out
cmp
or
sbb
jmp
psubusw
outsl
mov
mov
dec
pop
outsl
sub
cmp
or
sbb
jmp
psubusw
jg
pop
mov
jns
dec
scas
pop
ljmp
cmp
or
aas
jmp
fxrstor
and
inc
mov
pusha
pushf
lods
mov
scas
scas
cmpb
cvttps2pi
cmp
dec
insb
jg
outsl
mov
mov
inc
in
cld
fwait
or
sbb
sub
cmp
mov
pop
dec
insb
aas
jl
mov
mov
repz
adc
testl
cmp
dec
or
sbb
adc
lahf
clc
loope
lret
add
jecxz
aaa
insl
sbb
mov
std
std
outsl
or
js
les
sahf
lock
adc
xor
mov
cltd
pop
rcll
aas
mov
pop
mov
jle
loop
sahf
xchg
mov
mov
fs
dec
mov
cld
mov
or
pushf
lahf
scas
mov
cmpsl
imul
pop
rorb
push
shll
xchg
dec
cmp
mov
in
inc
sub
idivl
pop
test
or
dec
cmp
jge
jno
arpl
outsl
scas
aaa
xchg
push
cwtl
cs
popa
mov
in
addr16
adc
sbb
shll
inc
lahf
pushf
jg
cmp
in
and
sbb
sub
cmp
dec
jae
mov
jg
add
int
pop
cld
aad
int3
stos
scas
mov
or
jns
sub
inc
inc
dec
xor
cmp
jmp
mov
mov
cld
xchg
xchg
scas
subl
pop
cs
cmp
dec
rdmsr
add
push
or
leave
pushf
enter
int3
cmpb
out
or
sbb
sub
cmp
dec
pop
pop
dec
insb
jg
outsl
mov
mov
iret
in
cld
out
or
sbb
sub
cmp
dec
pop
pop
dec
insb
jg
outsl
mov
xchg
xorl
fsubrp
pop
mov
sub
test
cmp
ja
adc
lahf
pop
es
stos
into
inc
pop
arpl
jne
lea
jbe
gs
mov
push
into
shll
fmull
fs
xor
aam
ds
pop
inc
lods
or
pop
jl
mov
lds
or
sbb
clc
ss
cmp
sub
mov
sub
sahf
lret
mov
mov
icebp
sub
sbb
inc
and
bound
xor
cld
in
cmc
pop
push
pop
stos
adc
sbb
stos
dec
std
lock
out
fwait
pop
mov
iret
jg
adc
inc
sub
mov
xchg
or
cmp
mov
out
jns
jg
hlt
rcll
xor
push
pop
pop
xchg
pop
sub
repnz
aam
imul
cmp
arpl
scas
sbbb
int
push
and
loope
mov
rorb
or
or
std
push
jbe
loop
lea
adc
repz
mov
adc
pop
gs
xchg
test
and
mov
fdivrl
cs
xor
lahf
ret
push
cmp
negl
or
xor
sbb
adc
sub
lods
adc
mov
push
dec
dec
push
inc
arpl
cltd
in
pop
cmp
sub
negl
push
roll
and
aaa
xchg
jmp
ficoms
sbb
push
ds
jecxz
pop
mov
dec
ret
and
int
leave
shlb
push
xor
sbb
adc
xchg
rorl
xchg
push
xor
jmp
add
jg
test
fidivrl
inc
dec
out
push
inc
cli
inc
sbb
pop
fdivs
sbb
loopne
js
aaa
filds
jmp
jno
cmpsb
fnstsw
sbb
xchg
bound
push
sbbb
gs
or
sbb
push
and
mov
mov
jo
adc
sbb
hlt
fldt
mov
loopne
sub
push
test
std
sub
sub
inc
mov
int3
sub
push
mov
xor
push
sbb
sub
mov
cmp
dec
mov
push
aas
inc
pop
clc
lea
push
cld
push
inc
mov
mov
mov
insl
repz
test
lret
ds
and
loope
xor
mov
lds
fst
arpl
adc
xlat
xor
mov
sbb
ucomiss
rolb
in
ret
test
ret
dec
sub
ret
push
adcl
adc
or
push
mov
fs
out
sub
cmp
add
pop
fcmovne
and
and
fcoml
sub
cmpsb
inc
orb
leave
jbe
pop
push
movsb
mov
pop
ficoml
sub
jnp
xor
jb
inc
xchg
adc
xchg
in
dec
and
xor
inc
popf
cmp
cmp
sbb
fbstp
and
sbb
fbstp
cmp
nop
xlat
xchg
dec
rcrb
mov
sub
mov
gs
fdivs
in
xlat
leave
test
pop
xchg
outsl
cmpsb
jae
mov
loopew
xor
hlt
xchg
cmpsb
popa
sbb
jbe
stos
jne
push
xor
jo,pn
jle
lret
mov
jne
add
mov
push
pop
jl
movsl
jb
mov
ficoml
add
aad
and
or
int3
push
in
or
in
pop
cmp
jb
loopne
add
sbb
imul
or
out
add
inc
jnp
fadd
xchg
sub
add
pop
mov
es
loopne
xchg
in
jp
es
adc
outsl
fldcw
jmp
sub
dec
rcll
pop
fxam
sbb
dec
ret
aaa
sarb
ds
sbb
mov
rcr
iret
or
retw
mov
adc
clc
fs
pop
mov
lret
or
in
aaa
cld
pop
test
mov
or
sti
dec
push
andb
lcall
ljmp
inc
aaa
add
clc
enter
cs
inc
mov
in
xchg
rorl
pop
xchg
std
jo
and
and
lahf
out
dec
cmp
shrl
xor
inc
mov
xchg
sub
jg
mov
lcall
test
std
cmp
pop
fwait
das
je
or
aam
test
dec
push
pusha
stos
in
dec
out
xor
pop
mov
lahf
push
add
loopne
xlat
jno
dec
jmp
fistpl
lds
cmp
xchg
mov
ret
sti
pushf
cwtl
pushf
mov
xor
fwait
scas
aas
jnp
push
mov
dec
insb
dec
xchg
cmpsl
xlat
arpl
mov
adc
pop
or
xchg
xchg
add
ljmp
subb
add
data16
lods
icebp
adc
adc
cmp
and
out
sti
lock
sbb
jnp
outsl
movsb
out
out
push
mov
stc
xor
je
dec
fcompl
mov
cltd
or
lea
mov
cmp
cmp
or
jl
loop
xchg
inc
lock
mov
fnstenv
or
sahf
sti
cmpw
adc
in
and
and
insl
cmp
fpatan
mov
push
stos
inc
and
mov
ja
inc
cmp
mov
cmp
es
pusha
imul
mov
add
mov
or
rclb
jmp
mov
rcrl
mov
in
stos
ja
fnsave
xchg
push
outsb
leave
pop
test
movsl
ja
jno
adc
jne
mov
sub
push
cld
push
in
mov
je
leave
jo
movsl
ret
push
mov
adc
pop
sbb
and
sub
leave
pop
aaa
ret
scas
mov
loope
loopne
arpl
xchg
lods
jbe
add
jp
mov
in
cwtl
xchg
repz
adc
sbb
mov
push
sbb
jle
or
insb
lds
jne
jmp
mov
mov
push
fwait
dec
popf
popf
jecxz
popa
stos
jg
addl
mov
add
mov
dec
mov
stc
xor
sti
sbb
mov
insl
int
mov
sbb
cmpsl
add
repnz
movsb
into
push
cmp
test
push
xchg
loop
pusha
rcrl
scas
and
and
cmc
into
mov
rcrl
ds
mov
int
xlat
cmp
mov
push
inc
adc
cmpsl
sahf
jbe
dec
cmp
adc
pop
aas
adc
sbb
mov
jle
lret
mov
push
sbb
mov
jg
mov
jge
cmpsl
pop
lret
lahf
and
ja
cmp
lods
rolb
cli
jmp
add
mov
pop
jp
fnsave
fsubr
cmp
test
gs
push
pop
xor
dec
adc
js
sbb
in
add
push
jmp
fst
and
or
mov
jnp
push
repnz
xchg
ss
or
or
xor
mov
cmp
sbb
or
push
xchg
ret
mov
jae
divl
inc
lret
js
inc
ret
mov
lods
ds
sub
inc
mov
fmuls
vpsubq
adc
push
adc
pop
mov
testb
into
ret
sbb
or
pop
int3
int
push
dec
add
xor
push
clc
cmp
push
cmp
mov
leave
fwait
mov
inc
mov
push
shll
fbld
sub
clc
mov
call
xchg
pop
mov
sub
mov
cld
out
mov
sbbl
sarl
cmp
and
sub
lret
clc
push
xchg
movsl
lea
in
mov
mov
sbb
dec
jle
sub
xor
xchg
outsb
outsb
jo
sti
lea
idivb
or
jg
cli
lock
inc
xchg
imul
int
ficoml
jb
push
push
add
add
push
pop
leave
pop
jnp
movsl
ja
mov
aam
roll
pop
adc
lret
iret
movsl
scas
ja
push
lock
test
icebp
mov
std
dec
outsl
mov
pushf
je
adc
or
xchg
stos
jo
mov
pop
mov
mov
test
in
jp
lret
lods
sub
popa
fnstenv
out
stos
int
ss
call
pop
xor
sbb
aaa
pop
mov
nop
pop
or
mov
fisubl
sub
or
jb
cwtl
inc
aam
xchg
fiadds
pop
sarl
xchg
sarb
test
mov
movsb
maxps
dec
mov
leave
cmp
xchg
stos
ret
cld
aaa
pop
jbe
jns
mulb
lds
and
sbb
mov
push
adc
ficompl
adc
pcmpgtw
or
jno
or
in
pushf
icebp
dec
xorb
fnsave
add
pop
movsl
cmc
pop
mov
and
popf
xchg
mov
add
jp
ja
jo
cmp
or
sub
gs
ss
aad
orl
or
xchg
test
dec
lahf
testl
cmc
mov
addb
pop
sti
jecxz
popf
mov
stos
cmp
scas
icebp
fists
push
dec
ljmp
enter
popa
mov
jle
push
lcall
fisttpl
sarb
adc
stc
fimuls
xchg
loope
mov
xor
loopne
out
adc
sbb
in
ja
jns
imulb
sub
pop
adc
push
mov
lds
hlt
or
std
jge
rcrb
pop
mov
inc
jno
stos
pop
sbb
inc
sub
jns
leave
cmp
sub
test
fisubl
rcl
mov
out
pop
pop
pop
dec
jmp
aaa
pop
and
adc
sub
jo
movsl
mov
add
outsb
pushf
gs
insb
push
pop
cld
push
rorl
cmc
pop
push
mov
push
lret
hlt
xchg
movsl
aas
fldcw
in
js
fmuls
and
or
adc
xchg
aas
pusha
imul
push
lods
test
xor
fcoms
sarl
add
push
arpl
imull
xor
dec
out
std
push
shrl
aad
cli
nop
jecxz
rcl
jecxz
popf
jns
pop
pusha
ds
and
imul
loope
adc
ret
add
leave
jle
nop
mov
adc
mov
cmovs
imul
mov
insl
fdivs
cmpsl
and
push
aaa
or
pop
movsb
rcl
hlt
or
in
pop
dec
push
mov
adc
xchg
arpl
packsswb
mov
jmp
xchg
jbe
cld
test
sti
imul
xchg
fwait
sub
adc
jp
test
mov
sub
mov
push
loop
imul
cmp
dec
xchg
push
jnp
test
aaa
xor
cmpsb
std
sahf
pop
xor
xor
fimuls
xchg
mov
cmp
xchg
xchg
mov
push
sub
add
jns
shrl
jbe,pn
cmp
movsb
hlt
das
jno
add
mov
jne
xchg
cmp
sti
fs
pop
inc
in
sahf
and
ret
lods
mov
push
int3
lods
out
pushf
out
call
mov
ds
xchg
cmpsl
xchg
aaa
xor
in
out
gs
and
inc
movsl
mov
in
mov
adc
mov
mov
out
stc
sbb
ja
mov
je
pop
in
popf
data16
sahf
jo
notb
adc
adc
call
mov
jecxz
push
push
inc
rolb
fists
cmp
orl
pop
pop
add
pusha
ja
mov
test
lods
das
mull
out
js
mov
lds
jbe
mov
mov
jbe
jg
pushf
sarl
stc
fistps
clc
std
mov
clc
inc
aaa
jb
pop
adc
cmp
xor
jno
dec
addr16
sti
pop
and
jmp
gs
push
fcmovnb
into
iret
dec
push
clc
sbb
cmp
nop
pusha
imul
jl
mov
je
icebp
or
lcall
sub
push
add
int
mov
inc
mov
repz
pop
push
idivb
mov
std
in
inc
inc
or
pop
inc
inc
dec
mov
daa
xchg
fbstp
xchg
or
mov
js
mov
inc
mov
js
push
sbb
icebp
lret
push
rclb
test
sub
sti
cmp
push
inc
jns
insb
add
sbb
mov
mov
mov
stos
mov
mov
and
xchg
xchg
cli
sti
fs
xor
inc
and
and
mov
mov
inc
fsubr
leave
in
cltd
sbb
mov
xor
pop
mov
mov
mov
push
or
enter
nop
jnp
lret
mov
mov
mov
xchg
les
in
or
inc
cmp
lahf
outsl
lock
aam
add
sub
fwait
imul
aam
sub
repz
outsl
jecxz
inc
fldcw
mov
jb
js
pop
pop
xchg
or
and
and
or
xchg
or
scas
lods
xchg
int
mov
mov
add
adc
mov
cmp
xor
std
pop
jns
add
and
addl
lods
cmpsl
das
jmp
into
add
insl
cmp
sbb
cmp
jo
add
push
es
and
mov
sub
test
pop
xor
daa
sbb
add
add
aam
into
insb
add
jl
ljmp
mov
push
dec
adc
xor
sub
jmp
xor
jg
aam
cmpsb
ret
aam
and
mov
repnz
jge
insl
ds
mov
cmp
bound
sub
icebp
mov
out
nop
and
jmp
xchg
lock
and
cmp
ffreep
mov
add
xchg
push
mov
xchg
sub
inc
sub
ja
stc
cmpsl
push
leave
sarb
inc
push
xor
mov
or
sub
or
jge
iret
xor
push
inc
cmpsb
andl
jge
add
lds
rorb
movsb
out
addb
hlt
cmp
fstps
sub
mov
dec
fisubl
xchg
push
jecxz
mov
xchg
es
mov
data16
out
hlt
js
ljmp
push
or
ds
jmp
pop
fdivp
pop
dec
adc
testl
mulb
sbb
in
jo
or
mov
xchg
push
pop
stc
scas
fnstenv
sub
sahf
pop
push
adc
sub
or
cli
lods
pusha
xchg
sbb
dec
and
adc
push
lea
mov
inc
xchg
lea
das
faddl
jb
inc
imul
fldl
push
push
call
idiv
push
and
fsubrs
pop
mov
aas
das
or
daa
push
insl
rcrl
cmp
pop
dec
mov
mov
ja
or
out
les
addr16
mov
or
or
mov
cmp
xlat
push
leave
cld
movsl
xor
and
popa
jbe
cmpsb
mov
in
jle
dec
sti
out
in
lcall
cmp
movsb
movsl
dec
pop
pop
pop
push
mov
sbb
mov
mov
orb
jo
sti
movsb
jb
insl
repz
popf
shl
pop
mov
scas
xchg
inc
cmp
mov
dec
mov
aaa
fidivrs
call
stos
mov
sbb
lea
popf
sub
sti
sti
outsl
insl
loopne
rclb
movsl
insl
sub
and
insb
ds
cmp
movsb
sbb
pop
clc
inc
mov
push
imul
ss
cmpsb
jmp
leave
mov
jg
lock
cmp
lods
out
pop
pushf
xchg
sahf
movl
add
jg
test
pop
mov
fiaddl
sub
lahf
and
xchg
sbb
das
sbb
adc
mov
aam
pusha
and
loop,pt
repnz
xchg
jne
mov
je
addl
mov
xchg
out
pop
pop
or
xchg
push
lods
cmp
imul
add
out
jno
jl
clc
sbb
add
inc
dec
xchg
pop
mov
pop
mov
jb
add
mov
fs
xchg
pop
or
push
test
loopne
jg
pop
and
scas
shlb
xchg
pusha
in
dec
push
shrl
bound
test
xor
and
cmpsl
test
popa
and
mov
and
add
push
movsb
cmc
inc
jl
notl
ja
aas
sbb
cmp
cltd
imul
aad
mov
mov
push
fs
cli
and
pop
fsubs
loop
push
clc
movsl
rolb
fcomip
mov
pop
fildl
jne
inc
and
hlt
test
data16
xor
jns
and
cmpsl
fisubrs
sub
hlt
call
roll
adcb
jne
outsb
sbb
out
mov
andb
mov
dec
in
into
jl
lahf
adc
sahf
mov
popa
sbb
or
dec
test
sub
sub
sarb
shrl
add
adc
lret
pusha
ret
jp
ljmp
and
xor
imul
jne
imul
adc
push
jb
inc
dec
push
loopne
sub
xchg
outsl
mov
add
mov
test
divb
mov
arpl
call
cmp
mov
add
lcall
in
cltd
xlat
pop
out
xor
popa
movb
imul
jg
mov
mov
imul
adc
cltd
push
mov
fwait
adc
ja
fdiv
pop
lods
jl
fxch
cmp
xchg
xor
dec
wrmsr
push
bound
call
sbb
pop
pop
jp
or
adc
lahf
or
xor
push
push
mov
inc
pop
and
sub
loope
mov
push
adc
xchg
fstl
and
add
adc
sbb
pop
fwait
dec
cs
push
lret
sub
cmp
nop
inc
fsubl
jp
aaa
pop
fisubrs
aad
insl
jns
pop
in
sub
push
stc
test
xor
pop
lahf
fbstp
xchg
repnz
sbb
pop
dec
inc
push
pop
insb
fisubl
in
push
outsl
repz
and
pop
lods
pop
mov
orb
add
iret
jbe
fisttpll
movsl
into
out
int
roll
dec
xsaves
push
pop
add
mov
jl
push
in
repnz
xchg
inc
lods
das
sarl
cmp
pop
cli
fsubl
pop
push
cmpsb
and
repnz
andl
xor
pop
cmpsb
pop
ret
add
jecxz
aam
and
jge
pop
cmpl
nop
mov
jge
cmp
mov
cmp
sbb
jge
pop
leave
inc
in
repnz
xorb
dec
lock
les
clc
jae
dec
jnp
shr
loopne
and
imul
or
cwtl
jo
or
xchg
cld
cmp
jno
loop
xchg
mov
shrl
pop
inc
nop
adc
add
mov
sbb
mov
sbb
fimuls
test
push
inc
adc
xchg
mov
stos
in
or
aad
subb
sbbb
dec
jno
test
pop
pop
jb
or
into
test
mov
in
dec
adc
jns
out
mov
fwait
test
scas
xchg
xchg
xor
subb
or
movsb
loop
inc
mov
jmp
mov
sub
fbstp
add
mov
sub
mov
mov
ds
sbb
mov
popa
das
mov
push
pop
ret
in
mov
insb
pop
inc
hlt
cmc
mov
insl
aaa
mov
mov
aas
int
mov
rcrb
jne
test
inc
lods
mov
xor
sbb
sbb
sbb
mov
add
out
aad
cmpsb
mov
fwait
cmp
dec
pop
fcompl
or
xchg
lahf
test
jno
push
arpl
xor
push
hlt
arpl
and
mov
call
pusha
adc
xchg
jns
xchg
sub
mov
add
repz
hlt
add
scas
mov
movsl
inc
int3
int
cmp
bound
and
jg
pop
mov
scas
dec
in
mov
xorb
aam
sbb
or
frstpm(287
push
xor
xchg
xchg
les
cmpsl
cmp
int
push
jnp
add
sub
fdivs
clc
mov
mov
out
jecxz
insb
outsl
add
push
and
sar
inc
xor
stos
in
iret
adc
ss
push
in
int3
fwait
xor
or
xchg
sbb
pusha
rcrl
iret
sub
in
pop
int3
jp
imul
sarl
pop
xor
push
and
imul
jecxz
xor
xchg
cwtl
mov
pop
ret
ret
outsl
cli
jg
mov
pop
das
sub
or
add
jb
jnp
push
movsl
sti
or
mov
jae
pop
lods
sarl
in
cld
out
or
sbb
sub
cmp
dec
pop
pop
dec
insb
jg
outsl
mov
mov
iret
in
cld
out
or
sbb
sub
cmp
dec
pop
pop
dec
insb
jg
outsl
mov
mov
addr16
jl
or
sbb
sub
cmp
dec
pop
pop
dec
insb
pop
jl
mov
mov
iret
in
jg
out
or
sbb
xchg
cmp
cmp
sub
sbb
or
fcompl
cmp
mov
mov
fiaddl
add
push
and
and
xor
adc
adc
in
hlt
mov
mov
mov
test
xchg
inc
add
and
and
adc
std
add
aaa
fsubl
sarl
mov
xchg
push
xor
jno
sbb
adc
in
popf
cmc
mov
pop
pop
dec
test
sbb
push
and
add
ds
stos
add
clc
push
dec
popf
mov
sub
subl
gs
in
pushf
into
push
lret
mov
in
pop
rcrl
jae
fwait
and
test
fnstcw
loope
mov
clc
scas
xor
xor
cli
ds
mov
hlt
int3
hlt
in
test
je
fsub
imul
mov
movsb
fisubrs
mov
adc
test
mov
test
je
add
push
mov
add
jmp
jmp
adc
les
pop
sahf
cmp
mov
stc
pusha
xor
inc
aam
inc
inc
xor
jno
mov
aam
into
shll
jecxz
xchg
insb
jmp
cmp
and
add
hlt
cmc
mov
call
inc
or
adc
cmp
addr16
pushf
or
divb
xchg
sbb
dec
pop
and
pop
add
and
movsl
mov
shll
mov
test
xchg
adc
xor
push
and
xor
add
adc
in
hlt
mov
mov
mov
test
xchg
adc
xor
push
and
xor
add
adc
in
jae
in
popf
cltd
scas
rcll
repnz
push
into
pop
lds
sbb
lds
pop
sbb
pop
icebp
inc
mov
mov
loope,pt
movsb
iret
pop
cmp
sbb
int
inc
mov
sbb
mov
les
fcoml
dec
add
mov
scas
aas
jno
mov
jp
in
je
divb
jo
adc
pop
popf
flds
sbb
iret
arpl
cmp
push
jecxz
imul
repz
pop
arpl
cmpl
lahf
jmp
mov
in
xlat
ffreep
xor
xor
push
mov
push
adc
add
add
or
das
pop
gs
mov
out
xchg
stos
mov
jl
call
cmp
movb
cld
stc
nop
hlt
xchg
cmc
addr16
and
push
ds
es
or
hlt
popf
dec
sbb
in
pop
fwait
pop
mov
insl
xchg
mov
fsubp
sbb
xchg
stos
in
mov
push
mov
dec
push
data16
dec
sbbl
push
mov
sub
out
and
pop
and
or
cli
cmp
adc
out
cmpl
pop
xor
mov
push
mov
stc
sub
fidivrl
rcl
xor
mov
xchg
xchg
aaa
xchg
fs
shl
sbbb
fdivs
nop
bound
lods
ret
ret
add
cs
out
lods
test
sub
sub
jns
jg
movsl
sbbb
add
mov
sbb
fdivrl
adc
dec
mov
sbb
loope
sub
dec
int3
das
inc
lods
das
popf
add
adc
inc
cmpxchg
mov
push
sbb
add
pushf
or
mov
sbb
dec
lds
dec
dec
cmc
cmp
push
and
add
and
nop
imul
imul
arpl
adc
lret
mov
push
sub
cmpsb
cli
iret
fldenv
lret
leave
sbbl
stc
into
outsl
pusha
or
popa
mov
push
es
lcall
add
shrl
lret
test
std
push
loopne
movb
mov
push
call
aad
icebp
fidivs
cwtl
lret
outsb
mov
xchg
sbb
clc
push
cmp
add
dec
push
fwait
mov
cli
shr
mov
std
scas
xchg
fs
mov
std
out
xor
mov
pop
xchg
xchg
mov
lea
mov
mov
inc
ffreep
jecxz
bound
enter
xchg
divb
scas
add
mov
shlb
xchg
inc
pop
lock
push
enter
test
out
add
jb
cmpsb
mov
stos
ret
sub
mov
leave
or
jmp
sbb
inc
jle
mov
pop
inc
and
lahf
fsubr
ds
mov
iret
pop
leave
je
push
ret
fisttpll
push
mov
jno
cwtl
mov
test
fucomip
sub
cmpsl
scas
pusha
imul
cmp
mov
wrmsr
mov
sbb
jns
std
test
cmc
xchg
andb
pushf
pushf
imul
out
jne
mov
ss
or
adc
fcomip
call
dec
sub
xor
es
mov
jmp
xchg
inc
xor
mov
mov
ja
out
xor
fistpl
cmpsb
or
js
inc
outsb
hlt
movsl
ss
ror
ss
xchg
xor
add
rcr
adc
stos
xchg
stos
imul
xchg
roll
cmpsb
xor
push
jbe
dec
testl
lea
cmp
jge
lods
or
int3
fidivl
rcll
int
ljmp
cld
jmp
fldt
outsl
js
sub
mov
cmpsb
test
and
or
inc
and
shlb
pop
and
aas
mov
idivl
mov
test
idivl
push
mov
and
add
testb
pop
nop
or
enter
cli
lcall
or
test
inc
lcall
punpckldq
je
inc
addr16
inc
jne
fs
add
outsb
push
jge
add
sub
push
sub
or
inc
lcall
fs
add
out
xchg
scas
mov
push
mov
imul
fmul
cmpsb
pop
das
mov
mov
mov
aas
jg
mov
mov
jmp
mov
shlb
cmpsb
cmp
mov
cltd
and
pop
idiv
repnz
insl
rorb
pushf
mov
xorl
mov
cmp
cmp
mov
xor
mov
push
insl
sub
jne
inc
aad
adc
cmp
leavew
fwait
ret
dec
aad
out
js
pop
pop
or
frstor
xchg
shlb
ljmp
mov
lret
adc
jle
jecxz
ljmp
shlb
popa
test
xlat
mov
cld
lahf
fwait
dec
pop
mov
mov
int3
cld
out
sub
cmp
out
sub
and
psllq
bound
ljmp
scas
jb
mov
fld
push
aad
xchg
je
std
fistpl
xchg
mov
lods
imul
scas
inc
jne
push
or
test
jo
sahf
ljmp
or
cli
pushf
inc
in
ljmp
mov
shll
in
sbb
xchg
rclb
cmp
cmp
das
divl
or
popa
mov
rcrb
sar
mov
and
adc
xchg
push
repnz
mov
mov
mov
jne
xor
das
lea
adc
add
test
stos
aaa
adc
addl
mov
fwait
fwait
cmpl
fstpl
fiaddl
sub
dec
xchg
ds
outsb
lea
cld
mov
unpckhps
call
cmpsl
dec
mov
loopne
dec
lcall
jg
and
push
mov
mov
adc
mov
pushf
lock
sbb
jne
and
push
movsl
popf
push
fwait
imul
ja
adc
push
call
cld
cmp
mov
push
or
addl
jmp
sahf
push
xchg
mov
jae
outsl
mov
fistpl
ss
out
popa
mov
fcmovne
lret
add
mov
sub
sbb
pop
sbb
enter
jl
shlb
dec
sub
into
adc
ret
ss
sub
xchg
insl
mov
and
sub
ds
out
mov
cwtl
mov
xor
inc
add
fwait
icebp
mov
sub
or
bound
or
in
add
leave
rol
pop
mov
out
mov
and
xchg
adc
orb
lret
addr16
xchg
pop
cld
jae
test
in
xor
call
fnstcw
in
aam
dec
mov
pushf
rorl
mov
mov
das
repnz
pop
push
jle
int
bound
idivl
cltd
lcall
mov
insl
out
addl
ret
push
push
out
pushf
mov
insb
das
fwait
inc
cmpsl
jge
icebp
dec
xchg
repnz
mov
es
xlat
or
out
leave
mov
mov
insb
out
lret
js
xor
shlb
cld
call
sbb
cwtl
dec
scas
cmp
jecxz
inc
scas
stos
call
mov
jmp
aaa
daa
xor
mov
jae
pop
push
iret
add
fs
mov
outsl
cmpl
data16
hlt
data16
push
mov
xor
pop
xor
or
dec
stc
mov
aam
lea
pop
scas
mov
mov
pop
lret
and
jg
sarb
repnz
data16
es
out
and
mov
popf
ds
sti
daa
repnz
fmuls
pop
and
cltd
pop
cmpsb
enter
sbb
popa
call
sbb
pushf
gs
pop
arpl
inc
sub
add
test
repnz
hlt
test
lds
pop
xchg
and
mov
pop
pop
sub
addr16
pop
stos
push
adc
in
or
add
add
enterw
jns
daa
lahf
adc
add
mov
sbb
ret
imul
in
frstor
xlat
mov
mov
aaa
sbb
lret
and
enter
add
popf
mov
and
in
sahf
dec
ljmp
xor
test
pushl
lods
popf
cmp
loope
dec
movsl
cmp
and
hlt
adc
dec
adc
add
addr16
daa
mov
shlb
cmp
push
pop
mov
dec
pushf
and
call
pop
dec
sub
jns
test
mov
cmp
dec
ja
mov
popa
jne
mov
mov
ss
fmul
cmp
and
add
push
mov
cmc
ret
pop
scas
jg
filds
adc
inc
add
int3
xchg
adc
insb
movsb
mov
jmp
or
faddp
cmpsb
bound
adc
sub
xor
jne
sbb
mov
mov
push
js
and
stc
pop
mov
push
sub
lcall
stos
lock
popf
ret
ror
insb
jbe
popf
gs
sub
add
or
aas
fwait
jle
sub
cmp
mov
xchg
sahf
out
insl
push
add
jns
sarb
int3
repz
std
sbb
sahf
js
mov
jns
int3
fsubrl
jb
add
in
mov
mov
rcrb
cmp
aad
and
sub
std
call
shrb
sub
pop
dec
or
adc
in
jns
mov
mov
mov
ret
xchg
or
fxch
scas
pushw
fwait
and
add
jns
sbb
mov
sbb
cs
addl
in
fstps
pop
inc
aad
sbb
or
inc
rcrb
int
mov
repnz
in
inc
std
aaa
xchg
int
pop
ficompl
push
gs
fs
bound
outsb
xchg
pop
inc
sbb
adc
fidivrs
arpl
mov
pushf
cs
xor
and
sbb
mov
xor
cmp
test
aaa
jge
pop
pop
ds
cmpsb
scas
imul
mov
xchg
ja
cs
xor
mov
jo
iret
sbb
push
scas
mov
mov
scas
sbb
mull
xor
fimull
in
aaa
test
xor
mov
loope
shlb
test
out
and
mov
sbb
je
call
fiadds
dec
fsubrs
add
adc
jp
mov
in
jecxz
or
xchg
add
enter
push
xchg
cmp
sbbl
movsl
cld
cmp
push
add
icebp
xlat
mov
lods
or
scas
mov
or
stos
in
leave
ret
inc
jge
push
xor
inc
movsl
push
mov
pop
idivb
xor
call
mov
shlb
jns
addl
fisttpll
jno
stos
mov
lahf
inc
sub
adc
xchg
in
jle
scas
outsb
frstor
sbbb
adc
cmp
mov
mov
adc
jecxz
push
mov
pop
in
push
inc
or
xchg
rorb
lods
insl
xor
mov
aad
int3
and
addr16
adc
aas
and
ds
pop
cltd
xor
popa
xor
test
xchg
enter
xchg
wbinvd
enter
xchg
lods
xor
lea
lret
pusha
das
repz
cmp
aaa
and
insb
or
push
ljmp
call
push
loope
lret
lds
push
cmp
push
push
fcoms
pushf
iret
mov
jns
outsl
fs
lds
mov
fldenv
add
xor
insb
jae
sbb
pop
mov
test
stc
int
repz
cmp
sub
mov
sbb
xchg
adc
cli
jae,pt
cmp
pop
sbb
lcall
jno
stc
sub
xor
out
inc
mov
mov
imul
push
jo
add
xchg
mov
fdivrs
adc
cmp
mov
xchg
fisubrl
xchg
fistps
xchg
mov
adc
ret
lea
cltd
pop
loop
cld
mov
lock
xchg
adc
cmp
adc
jmp
sbb
std
pop
rorb
test
push
push
lret
mov
inc
in
mov
hlt
inc
mov
sbb
or
adcl
inc
arpl
pop
jbe
in
insl
push
pmaxsw
mov
pop
arpl
xor
add
stos
in
cltd
dec
or
fwait
jnp
outsl
das
mov
cmp
out
xchg
sti
lret
fcmovnbe
aam
sahf
insl
mov
mov
cwtl
pop
mov
or
sahf
enter
or
lcall
dec
andl
rolb
dec
and
sbb
xchg
dec
xor
cmpsb
aam
push
mov
inc
bound
jnp
loop
lahf
das
or
cli
push
pop
jo
sbb
fwait
push
cmp
dec
sbb
add
mov
rcl
mov
vcvttss2si
out
testl
and
sbb
hlt
movsb
lret
sbb
fisttps
and
sub
dec
je
ret
fldenv
or
popf
sarb
shr
fstp
pop
cli
and
ja
clc
jmp
cmc
outsl
mov
lods
iret
js
xchg
cld
popa
movsb
add
testl
aam
mov
sbb
test
loope
mov
pop
jnp
mov
add
insb
jbe
jne
or
pushf
or
mov
das
mov
cmp
stos
cwtl
into
testb
mov
rcll
ficomps
fidivs
jge
or
lea
mov
xchg
adc
jo
xor
xor
jno
jo
flds
testl
mov
test
push
les
or
pop
fdivrs
push
gs
pusha
xchg
into
push
js
push
sahf
faddp
dec
cli
stos
jl
pop
jge
mov
jge
sub
push
mov
xchg
loop
jo
xchg
int
mov
lret
je
inc
adc
xchg
out
insb
xor
push
mov
and
cltd
test
cmpsb
daa
mov
and
mov
das
in
xchg
push
adc
dec
ret
inc
fistpll
pop
test
int3
int
mov
mov
add
in
mov
outsl
adc
mov
xchg
sub
push
mov
mov
lods
cs
jno
stc
iret
addr16
xorb
xchg
lock
and
repnz
mov
sahf
cmp
add
pusha
cmpsb
jae
jae
mov
pop
mov
mov
add
cmp
dec
and
in
xlat
outsl
shlb
rol
cmc
sub
leave
stos
mov
rclb
movsl
push
xor
and
test
dec
test
shll
adc
in
sbb
cmp
pop
das
sbb
movsb
test
mov
fldl
scas
cmpsl
pop
adc
mov
in
aas
push
dec
adc
lods
cwtl
cwtl
dec
push
push
and
push
in
pop
mov
pop
rcl
aam
aam
add
das
add
out
popa
xor
addr16
aas
add
cmpsb
xchg
into
xchg
sbb
jb
sarb
fcomp
jnp
addb
icebp
rcl
xor
test
push
dec
add
or
fisubs
xchg
scas
dec
jno
push
imul
rcr
jbe
jle
int
mov
cld
inc
mov
xchg
lret
lret
mov
xchg
or
enter
jno
lods
bound
outsb
inc
add
jge
icebp
sbb
push
xchg
jo
sarl
aas
push
ja
bound
inc
adc
loopne
xchg
cmc
push
cmp
or
sarb
or
repnz
in
lahf
je
xchg
cwtl
push
inc
cmp
test
adc
sub
mov
dec
jmp
xchg
lret
push
mov
mov
es
and
push
aad
imul
or
xchg
adc
stos
je
out
iret
mov
push
pop
icebp
sub
pop
pop
pop
or
mov
nop
sub
or
cmp
sahf
mov
cmc
xor
hlt
addl
clc
rorb
call
out
ret
xlat
adcb
shlb
dec
pop
imul
fcomi
xor
popl
loop
aas
push
pop
fisubrs
gs
js
lahf
outsl
adc
adc
pusha
jo
push
ds
add
push
repnz
shl
or
idivb
aam
push
popa
or
pop
sub
nop
outsl
and
in
rclb
test
jecxz
das
lea
and
movsb
pushf
call
faddl
cmp
sub
pop
mov
shl
jo
aam
dec
adc
repz
cmp
rclb
clc
mov
add
mov
jge
jo
sub
lea
xchg
and
insb
or
bound
add
rcll
mov
sbb
inc
test
cltd
hlt
xchg
inc
test
repz
push
xorb
call
and
sahf
out
mov
inc
add
adc
mov
xor
outsb
pop
adc
pop
repz
pop
mov
inc
jg
into
cwtl
or
movsl
and
sub
stc
ret
mov
inc
sub
je
insb
add
rorb
adc
hlt
daa
mov
xor
imul
je
sub
jmp
mov
push
xchg
rcll
cmp
fistpll
cmp
loopne
fstpl
pop
cld
xchg
or
aas
xor
lods
je
xor
xchg
sbb
aam
mov
fnstenv
xor
mov
ret
push
es
add
outsl
adc
movsl
in
sbb
or
fmull
pushf
adc
or
jge
jbe
push
push
roll
sub
iret
push
fwait
mull
xchg
mov
adc
ret
mov
add
jne
in
fsubrs
ds
imul
orl
fiaddl
cmpsb
aam
rol
add
push
sub
in
movsb
sub
ds
test
inc
mov
inc
outsl
shll
fsubs
and
push
mov
sub
mov
and
pop
test
mov
sbb
stos
xor
pop
dec
pop
cmp
inc
xor
adc
dec
icebp
sbb
sar
push
ret
sahf
jne
push
inc
ret
adc
xrelease
mov
int
lods
adc
int3
push
loopne
dec
test
mov
bound
or
mov
xor
mov
addr16
mov
jbe
mov
test
inc
pop
pop
push
cmp
into
sti
dec
subl
dec
dec
adc
cmp
adc
and
jp
sar
sbb
pop
and
mov
jbe
ds
mov
lahf
sub
push
pop
in
cmp
call
lods
xchg
lret
push
dec
pop
repnz
xchg
xchg
es
mov
ljmp
mov
pusha
xor
sbb
mov
das
xchg
dec
push
lds
push
xchg
ficompl
aaa
inc
mov
inc
mov
add
and
push
mov
pop
cmp
mov
sub
popf
jl
outsl
jle
sahf
dec
insb
jecxz
ret
shrl
outsl
mov
add
mov
jae
loopne
dec
inc
repnz
es
inc
out
sub
cs
repz
xchg
sub
mov
fildll
or
pop
pop
fs
sbb
cld
mov
inc
xchg
cmp
pushf
cmc
pop
xor
pop
nop
ficoml
stos
ss
lds
push
or
sub
mov
xchg
hlt
mov
and
jbe
out
ljmp
cmp
mov
push
cs
insl
movsb
jo
shlb
int3
sbb
inc
inc
test
sbb
movsb
mov
jle
pop
push
stos
and
jecxz
dec
dec
mov
sti
idivl
and
into
fmulp
dec
rcl
jl
insl
cmp
cmp
sti
sub
pushf
mov
scas
mov
mov
sahf
jl
loope
das
jecxz
cmpsb
test
inc
fs
pushf
push
mov
lcall
mov
and
das
mov
jle
sbb
xchg
mov
outsl
jb
aad
xchg
cli
test
sbb
push
sub
fnsetpm(287
and
cwtl
std
cmp
imul
das
xor
imul
push
mov
xchg
pop
push
imul
testb
rclb
xorl
inc
imul
mov
out
rol
leave
or
bound
push
mov
inc
mov
aaa
andb
call
add
out
xchg
jns
int3
scas
cltd
mov
xchg
pop
dec
adc
negb
in
pop
cs
lea
leave
jo
je
mov
mov
test
xchg
adc
xor
push
and
xor
add
adc
in
hlt
mov
mov
mov
test
xchg
adc
xor
push
and
xor
add
adc
in
hlt
mov
movsb
lds
add
and
xor
add
lods
hlt
cmp
mov
shll
xchg
adc
fwait
inc
and
lods
leave
lret
mov
sahf
jmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
rcl
mov
aad
xchg
and
inc
jo
and
jo
add
adc
mul
lock
rcl
mov
xchg
jbe
inc
xchg
push
and
xor
add
adc
stc
out
neg
enter
test
xchg
pusha
pop
jnp
sub
and
pcmpeqb
jae
jns
nop
out
orb
ja
test
fwait
jp
and
and
out
or
jge
rcl
sub
dec
dec
jo
pop
sahf
test
inc
pop
push
pushf
out
mov
insl
xrelease
icebp
mov
xchg
orl
xchg
fbld
jne
stos
stc
xlat
pop
xor
loopne
and
pop
ret
movsl
cmpsb
push
push
sbb
mov
arpl
clc
stc
aaa
add
or
cmpsb
jo
nop
jns
shrb
ja
mov
xor
pop
call
push
pop
pop
mov
pusha
dec
mov
addr16
fldenv
ret
adc
and
lock
mov
stos
mov
xchg
jbe
inc
dec
push
cmp
sub
add
or
mov
nop
leave
and
out
or
xor
cmp
dec
test
loopne
lock
aam
ficomps
bound
jo
add
dec
inc
pop
jo
adc
mov
andb
mov
addb
jbe
inc
push
push
and
xor
add
adc
loopne
lock
rcl
mov
xchg
jbe
inc
push
push
and
xor
add
adc
loopne
xor
cltd
xor
pop
arpl
dec
jg
mov
sbb
andb
mov
or
mov
fnsave
rcl
das
and
cwtl
int3
add
or
mov
or
jg
jb
lret
ss
mov
lods
mov
pop
in
pop
sub
leave
stos
inc
aad
nop
push
sbbb
and
in
cmovae
lcall
mov
clc
xor
or
jno
xchg
paddb
imul
clc
ret
fnstsw
subl
lret
push
xlat
sub
mov
xor
insb
adc
and
filds
inc
lock
pop
push
test
adc
daa
scas
push
insl
rclb
dec
mov
outsl
imul
popa
fsubl
sbb
dec
mov
aad
into
insl
adc
push
stc
sahf
aaa
inc
lods
push
xchg
xchg
test
mov
fcmove
addl
xchg
test
sahf
stos
jg
mov
das
sub
mov
xchg
mov
dec
jb
mov
aad
mov
mov
dec
sbb
jno
into
leave
mov
push
fwait
addr16
push
mov
inc
xchg
xchg
insb
subl
cmpl
imul
int3
sbb
dec
nop
ss
xlat
xchg
pslld
lret
stos
fsubrl
mov
ror
cmpsl
sub
arpl
fst
frndint
loope
ficoms
push
inc
mov
bt
lock
jecxz
test
xchg
cmp
sti
sub
popf
sbbl
push
xor
fs
mov
inc
aam
ficomps
cmp
inc
loopne
lahf
test
push
xchg
add
push
lahf
add
or
scas
mov
fdivs
xor
cmp
jecxz
std
mov
xchg
jno,pt
inc
cmp
js
popf
mov
imul
push
mov
insl
jbe
movsl
stc
dec
jb
xor
mov
pusha
je
hlt
jb
imul
xor
xor
mov
fwait
pop
pop
into
adc
out
xchg
lcall
inc
inc
cmp
dec
or
mov
mov
cmc
mov
scas
xchg
push
enter
sub
stos
lahf
cli
ret
pop
adc
pop
mov
xor
add
sub
mov
int
shlb
mov
out
pop
lret
fisubl
loope
iret
in
ljmp
insb
adc
cld
pop
adc
cmp
fwait
int
imul
mull
mov
call
mov
xor
movsl
pop
push
pushf
jmp
xchg
pop
sub
aam
bound
inc
dec
cmp
sbb
dec
movsl
aam
or
mov
jle
int
mov
addr16
enter
add
add
adc
es
cli
lods
iret
lock
sbb
or
xchg
movsl
mov
jae
push
test
addl
das
and
inc
insl
sub
jno
popa
xchg
es
xchg
or
dec
inc
cmp
in
clc
cmpsl
jae
push
aad
sahf
and
and
lds
and
iret
outsl
cltd
xchg
sbb
scas
mov
aaa
test
dec
outsb
jae
mov
sti
pusha
movsl
adc
out
int
sbb
sub
xor
push
mov
and
push
xor
popa
or
push
cmp
addb
pop
cs
xor
cmp
cltd
out
loope
xchg
dec
jg
cmp
or
mov
push
or
fwait
adcb
xor
shrb
out
stc
sbb
jno
jmp
sub
lahf
icebp
in
rcrl
insl
pop
pushf
adcb
in
pushf
dec
lds
xchg
dec
add
fnstsw
add
fdivrl
popf
inc
mov
jnp
xchg
cmpsb
aam
sbb
repnz
out
lods
jno
ja
jne
cmp
out
mov
arpl
mov
scas
push
jno
push
push
inc
cmp
pushf
mov
movsb
sub
pop
insb
scas
xor
xchg
or
jns
es
mov
aas
push
cmpsl
in
push
js
push
jle
stos
jnp
pop
jb
rorl
lock
inc
xchg
and
les
aas
loop
xor
fst
cmpsb
and
mov
mov
test
or
pop
jne
daa
str
cld
and
fsubp
repz
frstor
push
ja
mov
lahf
outsl
jge
insl
lods
dec
xor
and
popa
sbb
mov
xor
mov
mov
mov
add
mov
imul
repz
xor
sti
mov
jle
xchg
repnz
mov
mov
test
jl
or
dec
ljmp
lods
or
pusha
and
jg
jmp
mov
push
xchg
dec
jg
filds
loope
call
roll
lock
fbstp
add
xchg
orb
outsl
stos
mov
aad
jne
jmp
jnp
scas
rcr
insb
imul
push
push
mov
xchg
inc
push
or
rcrb
popf
inc
push
push
jbe
jns
fucomip
sbb
in
mov
adc
jle
paddusb
in
adc
loope
out
movsb
push
int3
xor
adc
insb
gs
pop
cld
inc
pop
add
or
stos
iret
jmp
int
mov
outsb
sarb
add
fsubl
or
xchg
bound
loopne
shlb
dec
dec
cmp
out
and
sub
push
push
pusha
dec
or
mov
add
aad
mov
stos
imul
push
or
or
mov
lea
and
mov
jno
xor
xchg
mov
inc
xchg
inc
jg
clc
sub
hlt
sub
out
divl
xchg
cmpb
rolb
add
xchg
rcll
dec
inc
inc
dec
mov
xchg
js
pop
xor
fmull
ja
stos
lea
jbe
inc
mov
inc
bound
pop
lret
je
test
cmp
or
xor
int
out
in
jge
and
loop
sub
and
cmp
add
incl
mov
pop
pushf
insl
scas
out
jl
leave
push
xor
push
adc
dec
fmull
rol
pop
cmpsb
imul
outsb
daa
aad
jmp
sbb
cmc
push
aaa
jns
and
imul
movsb
rcr
icebp
lret
clc
jle
jp
mov
push
data16
inc
push
fcmovbe
push
cmp
or
pop
jecxz
push
jmp
icebp
movsb
mov
inc
dec
or
cmp
cmp
mov
jecxz
pop
pop
mov
mov
add
push
or
or
inc
rcrl
cs
out
jg
das
cmp
out
rorl
jnp
into
dec
mov
fidivrs
cmp
xor
dec
test
xchg
xor
inc
jno
data16
add
and
adc
pop
aas
cmp
roll
or
mov
mov
data16
sbbl
push
add
xor
nop
mov
loopne
lahf
test
loop
xor
mov
sub
xchg
ret
nop
in
test
jne
jl
and
xor
cld
jne
lods
sbb
lahf
lahf
jno
mov
pop
cmp
rcrl
out
sub
and
inc
xchg
pop
jcxz
cmp
cmpb
xchg
sahf
add
divb
xchg
and
in
subb
xchg
fildl
and
decb
faddl
adc
dec
stc
nop
lcall
sub
xchg
aad
xchg
loop
pop
ret
jno
insb
incb
adc
ja
inc
mov
out
lds
dec
popa
rorb
mov
mov
scas
in
add
sub
jo
sub
or
adcl
fcmovnbe
leave
std
inc
adc
into
jnp
ret
xchg
cmc
pop
cmp
dec
adc
adc
sub
ficoml
inc
pop
mul
inc
out
push
xchg
mov
insb
pop
adc
pop
fists
cmp
popa
push
iret
sar
and
cs
push
icebp
cmc
mov
arpl
sbb
loope
sbb
movsl
lock
pushf
or
ds
repnz
mov
mov
gs
mov
push
test
xor
ss
or
mov
lds
or
enter
mov
pop
pop
pop
dec
das
or
add
hlt
xlat
fisubrs
movsl
xchg
mov
xchg
sub
sbb
iret
cmp
cld
stos
adc
ret
sub
stc
push
add
into
mov
push
pop
arpl
jbe
pop
lret
sbb
dec
outsb
mov
into
sbb
dec
add
dec
fcmove
sbb
xor
ret
stos
sbb
sbb
xchg
mov
push
pop
pop
push
push
inc
mov
or
xchg
sub
ss
loop
mov
sbb
fildll
sub
jg
andl
jb
movl
mov
mov
xchg
and
mov
adc
dec
pop
pushf
push
cmp
inc
mov
fstpt
mov
popl
movsb
ret
adc
jae
push
jp
cmp
cmp
and
pop
iret
jmp
xor
cwtl
jb
aas
je
add
outsl
mov
cmp
repz
or
das
pop
loopne
aam
xchg
stc
jnp
mov
adc
sub
repnz
loopne
out
cmp
xor
ljmp
popf
mov
fdivl
inc
jo
mov
les
pop
subb
xor
sbb
enter
adc
push
loopne
pop
sub
xchg
and
cmp
adc
notl
sahf
sahf
cs
pop
cmova
scas
xchg
in
mov
jg
xlat
inc
mov
mov
and
sbb
out
fcomps
inc
test
sti
push
push
inc
sbb
shrb
testl
dec
in
jo
repz
sbb
int
xchg
push
mov
mov
in
cmpsl
push
xchg
call
mov
push
xlat
loop
mov
jnp
dec
xor
dec
adc
jns
sub
aaa
mov
int
jmp
scas
jo
mov
mov
mov
sbbl
xchg
inc
xor
cmp
inc
push
jae
dec
fmulp
mov
hlt
pop
or
orb
dec
popa
dec
push
fsubp
cmp
push
push
nop
or
mov
xor
stos
nop
ss
fcoms
dec
cmc
pop
cs
mov
mov
subl
pop
pushf
lea
sub
daa
loop
mov
fldcw
lea
je
mov
mov
pop
jp
in
or
test
and
push
inc
cmpsl
lcall
in
inc
xor
inc
pop
lds
pop
icebp
inc
jmp
and
aam
push
sbb
mov
jg
aam
mov
out
sahf
or
xchg
jbe
mov
jae
mov
or
lcall
jbe
data16
lret
and
xchg
or
and
xor
out
sbb
roll
test
mov
decl
and
cmpsl
mov
cmc
arpl
fs
mov
popl
pushf
subb
icebp
fadds
or
mov
and
inc
outsb
xchg
cmp
fsubs
inc
js
leave
ss
orl
fisttps
testb
mov
mov
in
xchg
enter
cmp
arpl
xchg
int3
arpl
cmp
js
shll
fistpl
push
rep
jae
jge
cli
pushf
sbb
dec
lret
call
jecxz
scas
out
jle
pop
test
jo
jle
das
add
out
out
cmp
loope
iret
mov
insl
loopne
fiaddl
mov
push
out
xchg
fs
fucom
inc
ds
icebp
and
xor
fsubl
xchg
test
adc
or
lahf
jecxz
shr
inc
push
xchg
push
adc
dec
xor
or
popf
dec
cmp
lret
pop
out
mov
xor
push
push
out
fimull
popa
dec
xor
shlb
mov
mov
mov
sbb
mov
push
cmp
add
mov
sub
pop
cmpsl
mov
add
ljmp
shrl
jl
jne
call
enter
mov
mov
dec
jnp
pop
pop
int
ret
out
lds
sbb
and
cwtl
or
mov
add
stos
sbb
mov
jl
or
mov
push
fs
addl
mov
shll
mov
pop
repz
subl
lds
lret
icebp
nop
xor
dec
add
jmp
xchg
in
mov
orb
mov
adc
cmpb
ds
mov
imul
push
int3
inc
mov
xchg
sub
pop
xlat
mov
xchg
fidivrl
pop
dec
pop
outsl
push
enter
cs
cwtl
je
sbb
sbb
adc
mov
imul
insb
jns
adc
in
xchg
adc
loop
cmpsb
or
mov
dec
and
mov
lcall
adc
es
jge
xor
ja
jmp
sbb
push
adc
mov
sbb
inc
sahf
cmpsl
jp
sbb
lds
sub
aas
pop
adc
fistpl
and
nop
push
adc
mov
push
dec
insl
sub
hlt
test
ljmp
push
inc
loop
in
dec
or
mov
adc
or
mov
cli
cmpsl
incl
cltd
xchg
sahf
iret
mov
xlat
cmp
adc
fwait
jo
cs
pop
and
sub
sbb
jecxz
cmp
mov
lods
xor
enter
mov
mov
mov
aas
inc
add
ds
push
xchg
sub
mov
vpmaxsw
lock
sbbl
ror
scas
pop
shrb
mov
test
sbb
push
xchg
popa
in
dec
push
js
imul
inc
fmulp
iret
mov
popf
stos
or
push
pop
fidivrs
sahf
std
push
mov
lret
ror
mov
pop
test
push
jno
enter
pop
cs
jmp
fwait
out
push
addr16
mov
negl
xor
inc
pop
out
cmpsb
xor
sub
insb
mov
sbb
lahf
dec
lods
dec
fidivs
and
aad
jbe
dec
sub
mov
shrb
lds
and
sub
cmp
cmp
and
mov
imul
cli
in
sbb
jg
pop
jmp
or
mov
les
loopne
lea
fdivrs
push
xor
mov
xchg
cmp
sub
jne
add
mov
cmp
lret
aam
sub
cltd
in
mov
leave
inc
jo
repz
pop
sbb
je
cmp
jno
inc
mov
fwait
jecxz
mov
cmp
ret
clc
mov
clc
jp
push
icebp
nop
scas
mov
sbb
pop
jns
xchg
pop
add
mov
adc
clc
jecxz
pop
and
xchg
mov
mov
inc
mov
inc
dec
cs
and
dec
imul
mov
jb
push
and
push
and
jne
jbe
or
jne
push
mov
lret
fs
insl
aas
std
fstps
inc
out
outsb
loope
in
pop
fwait
cmp
aad
or
ja
mov
es
xchg
mov
pop
cmp
and
sub
jl
mov
test
push
sbb
imul
dec
je
sub
fstps
je
pop
ds
fcom
icebp
dec
cmc
rcll
ffreep
mov
pushf
mov
sahf
sbb
ret
mov
or
call
xchg
mov
ja
cwtl
cmp
stc
or
xchg
andb
sti
icebp
aas
ja
cwtl
inc
mov
fsubs
xor
std
ds
pop
outsl
or
sbb
mov
mov
popf
xchg
sub
xor
idivb
cmpsl
push
imulb
mov
in
mov
cmp
inc
fadd
outsb
bound
cmp
fsubrs
test
cld
inc
aad
test
out
cmp
cmp
pop
shll
fisubrs
cmc
icebp
push
inc
fisubrl
dec
les
aam
jno
sbb
sbb
xor
xor
jo
or
test
pop
icebp
lods
aad
and
sbbl
pop
adcb
dec
jae
ret
mov
mov
push
pushl
cmpsb
pop
stc
push
aam
lahf
loope
push
xchg
mov
lea
jnp
dec
sub
es
mov
aad
xor
add
sub
leave
pop
cmpsb
cmpsl
pusha
or
pop
jb
pop
je
insl
out
mov
data16
out
insb
addb
dec
out
sbb
pop
lods
xor
fnsave
in
in
mov
sub
sbb
push
rcrl
and
inc
pop
pop
pop
or
outsb
stos
hlt
fsts
lahf
mov
push
fisubrs
xor
sarb
cld
lahf
jmp
outsl
shrb
in
sub
and
outsb
sbb
loop
imul
sbb
loop
inc
cltd
movsb
jle
sbb
push
lea
inc
sarl
sbb
mov
fwait
and
in
and
pop
push
std
sbb
addb
jecxz
dec
pop
mov
stos
mov
adcl
out
push
sbb
mov
pop
sbb
sub
xchg
mov
jno
pusha
sub
cmp
fs
fsubrs
ss
clc
adc
out
lahf
mov
repnz
loopne
jno
fstpl
pop
cmp
inc
push
es
add
xor
mov
test
jecxz
cmc
adc
adc
pusha
aam
inc
loope
push
inc
pop
iret
add
or
test
mov
xchg
out
ljmp
lods
cmp
mov
fnstenv
aad
in
jl
mov
lods
push
cmpsb
pusha
mov
pusha
mov
adc
sbb
dec
push
jle
addr16
clc
rorl
dec
xorl
adc
into
aas
or
ficomps
in
adc
iret
sub
pop
lock
jp
fisttpl
xor
scas
fisubrs
sub
jecxz
xchg
enter
into
xchg
jae
and
jmpw
loopne
sub
adc
mov
pop
mov
cmpsb
mov
pop
gs
push
jne
pop
and
or
popa
aas
ret
scas
test
or
cs
push
pop
into
out
inc
jbe
ror
xchg
sub
ljmp
xor
in
fs
and
fsincos
and
or
fimuls
fisubs
decl
pushf
sbb
clc
cmp
pop
xchg
outsl
mov
xchg
sbb
das
fcom
xchg
cmp
and
mov
push
pop
jmp
push
lock
inc
cwtl
xchg
fldt
pushf
or
test
scas
xlat
sbb
imul
push
test
clc
fstpl
pusha
mov
stos
cwtl
nop
xchg
pop
lret
ja
repnz
add
jno
ror
lahf
or
out
adc
or
jb
mov
mov
push
and
dec
fs
popf
aad
ret
andb
ret
cmpsb
mov
scas
pop
cmpsl
arpl
mov
out
jae
inc
test
inc
pop
dec
mov
or
pop
nop
xlat
mov
xor
add
outsl
add
js
push
cmp
mov
adc
adc
xchg
push
cmp
mov
lret
in
popf
rolb
pop
cmp
outsl
cs
rcrl
pop
mov
sti
inc
jmp
out
pop
cmpb
movb
cmp
and
dec
sahf
ror
sub
mov
shrl
sub
sahf
in
clc
push
pop
stos
in
stos
repz
movsl
scas
mov
aaa
pop
jbe
shlb
test
add
add
and
or
cmp
in
xor
in
xchg
push
gs
negl
sbb
arpl
dec
inc
vmovaps
adc
jae
xor
mov
mov
fwait
jmp
jg
push
and
xor
sub
push
shl
sub
inc
or
ret
popf
jbe
dec
in
scas
and
push
imul
jle
jmp
out
aad
cmp
enter
repnz
das
addr16
add
pop
xchg
rclb
aam
outsl
inc
ss
xchg
mov
sbb
stos
push
out
inc
sub
rcrb
mov
or
stc
pop
shrb
jno
rcr
fisubrl
ret
and
test
mov
sub
xchg
fstl
gs
shll
mov
fldcw
mov
dec
cmpsb
xchg
scas
loope
mov
mov
sbb
push
xchg
in
mov
lods
pop
incl
cmp
sahf
es
mov
rorl
aad
imul
stos
push
push
cmp
jb
and
les
roll
dec
push
xor
iret
and
xchg
mov
or
out
incb
push
shl
out
push
or
jp
push
jae
sbb
push
les
fstpt
negb
rcl
mov
xchg
jbe
inc
push
push
and
xor
add
adc
loopne
lock
rcl
mov
xchg
jbe
inc
push
push
and
xor
add
adc
loopne
lock
rcl
mov
xchg
ja
inc
push
push
and
xor
add
and
aam
div
rcl
mov
push
adc
cltd
fsubr
inc
push
and
mov
jmp
cmp
sub
loope
imul
dec
minps
cltd
stos
mov
jmp
jmp
sbb
or
cmp
sub
pop
dec
dec
pop
jnp
imul
mov
lret
fsincos
jmp
or
cmp
dec
adc
imul
mov
mov
fwait
test
ja
jnp
rolb
mov
sbb
mov
jmp
push
xlat
adc
lods
push
pusha
mov
or
pop
pop
inc
shl
xchg
push
xchg
jbe
gs
es
repz
mov
popa
or
jo
leave
pop
movsl
shll
mov
mov
test
inc
cmp
and
fmull
or
sbb
imul
jns
push
inc
mov
jmp
loope
out
hlt
in
aam
mov
inc
pop
jnp
imul
dec
stos
dec
mov
adc
jecxz
or
mov
scas
jmp
sbbl
js
ficompl
into
jg
shrl
add
or
cmp
cmp
dec
pop
jnp
imul
mov
test
cmc
lret
aaa
sti
icebp
jmp
outsl
or
push
inc
gs
sbb
cs
sbb
ds
aam
iret
fisubrl
popf
lahf
nop
inc
dec
dec
pop
dec
pop
arpl
sbb
or
adc
call
into
mov
mov
mov
and
push
sbb
imul
mov
fcmovne
lret
fsincos
jmp
or
cmp
sub
pop
dec
dec
pop
jnp
imul
mov
fcmovne
lret
fsincos
jmp
push
dec
mov
jns
sub
inc
push
or
lahf
inc
mov
shl
cmp
imulb
in
dec
fs
mov
sbb
das
addr16
inc
test
in
push
push
cmpb
nop
lret
sbb
add
ficompl
push
data16
jbe
rorl
out
mov
push
mov
mov
cmove
in
lds
lea
adc
xchg
mov
xchg
xchg
sub
and
mov
ret
leave
cmpsb
out
jne
adc
push
adc
mov
pushf
xor
inc
push
lock
out
outsl
pusha
dec
jge
pop
sbb
inc
fisubrl
pushw
clc
pop
and
ja
sbb
fwait
call
sbb
mov
int
out
jbe
push
outsb
xchg
mov
push
in
fistpl
lods
pop
sbb
mov
sti
shll
mov
and
jno
push
mov
and
mov
jecxz
scas
xchg
mov
jecxz
cmpsb
sar
in
pop
and
mov
fistpll
stos
jmp
fwait
and
dec
cmp
loop
dec
adc
jmp
imul
cmp
lahf
jecxz
jnp
jnp
pop
outsl
andb
pop
pop
adc
xchg
imul
aad
or
icebp
mov
mov
into
into
inc
test
mov
jg
and
xor
nop
aaa
es
sub
pop
add
mov
fld
negl
xchg
inc
je
jg
sahf
cld
in
push
xor
rcrl
and
cmp
out
arpl
add
jo
mov
dec
imul
lds
jmp
and
or
fprem1
enter
scas
mov
mov
in
in
cmp
add
clc
xor
leave
jg
in
pop
pop
mov
xchg
or
mov
addr16
imul
mov
mov
adc
add
xchg
inc
inc
out
jl
cli
sbb
andl
lea
add
or
mov
pop
stos
and
mov
push
jp
lods
cmp
sub
push
shll
cmp
fwait
jp
stc
call
sub
je
xchg
ja
inc
aad
mov
pop
ja
mov
jl
or
jle
pop
add
jae
jb
xor
xchg
int3
or
test
neg
mov
and
sub
xchg
ret
loopne
pop
shll
and
jno
jecxz
rclb
std
sbb
fwait
adc
arpl
or
jge
lods
push
gs
dec
jne
cmp
out
leave
loope
sbb
imul
push
jae
outsb
mov
daa
lahf
shrb
dec
xor
decl
lea
cmp
sub
mov
sahf
movsb
out
in
sti
shll
push
cmp
sub
jmp
into
sarb
mov
iret
xchg
cmpsb
int3
std
mov
test
or
loop
cmp
xchg
shr
int3
sbb
inc
mov
sub
inc
lds
push
mov
xor
subb
pop
ret
popf
sub
jns
push
ficompl
jl
mov
mov
dec
jge
pop
fwait
test
data16
rcrb
call
in
sbb
cmp
repz
mov
aad
mov
jnp
and
into
jo
inc
mov
xchg
incl
sub
add
or
dec
ds
mov
aad
xchg
mov
push
xor
dec
cmpsl
xor
push
xchg
mov
scas
cmp
or
in
sub
adc
or
push
imul
xchg
mov
cld
push
outsl
or
jg
dec
ljmp
jno
mov
xor
sbb
xchg
in
pop
js
jnp
inc
pop
or
adc
in
outsl
jns
pop
xchg
xchg
mov
xchg
jae
pop
cmc
fstl
leave
sbb
jb
push
sbb
push
jbe
adc
adc
mov
repz
push
imul
xchg
jecxz
outsb
pop
jl
push
or
out
loop
push
mov
mov
mulb
or
bnd
fsub
repz
cmp
addr16
xchg
rolb
fisttpl
cmc
sbb
sub
fadds
mov
inc
sbb
lcall
mov
and
and
inc
clc
dec
xchg
sub
or
pop
call
js
addr16
push
into
xchg
jae
jp
pop
xchg
and
test
and
mov
mov
jle
lcall
lret
adc
pushl
stc
xor
sub
insl
cmp
xchg
aad
imul
xchg
and
xchg
cmpsb
cld
sbb
mov
cmpsb
out
push
xchg
xchg
daa
inc
data16
cld
add
loopne
fidivrs
or
mov
jecxz
xor
or
fnsave
jne
xor
mov
inc
repnz
sbb
rcl
or
ss
xchg
cmpsl
test
sti
jno
xchg
mov
icebp
xor
dec
xchg
incb
sbb
out
vpmullw
pop
std
scas
pop
jl
push
imul
xchg
jmp
test
js
nop
pop
pop
loop
cmpsb
add
sub
divl
es
cmc
cmpsl
lret
cs
lret
jmp
sti
jmp
mov
sbb
or
cmp
daa
rolb
test
sub
and
rcll
loopne
or
aas
mov
out
xor
push
and
or
fs
sbb
and
and
sbb
mov
push
jp
pop
insl
imul
xor
test
push
adc
mov
ds
data16
and
inc
mov
add
push
inc
mov
lcall
pop
sub
and
pop
inc
cmp
push
push
jmp
pop
push
subw
or
jb
mov
hlt
mov
movsl
lea
mov
pushf
cmp
sbb
adc
cmp
aad
sbb
hlt
cli
lods
fs
int
push
pop
xor
sahf
lret
dec
lret
dec
mov
dec
adc
mov
push
scas
dec
sub
dec
ret
or
das
pop
dec
push
clc
into
pop
cmp
cmc
stos
mov
mov
xchg
jmp
cs
mov
sub
fsubl
cmp
sbb
jg
outsl
push
fs
aad
test
mov
and
outsb
aas
pop
rorl
mov
cmpsb
fdivrp
or
and
push
jnp
int
jg
fwait
inc
mov
std
addb
rcrl
mov
rcrl
mov
repz
int3
xorb
and
popf
aad
hlt
sbb
pop
les
fmull
xchg
sti
mov
call
lret
fsubr
xorl
mov
int
ss
sarb
stc
lods
jmp
daa
mov
test
mov
divl
dec
aaa
cs
sub
cmpsl
fwait
or
xchg
cmp
cmp
and
sub
lret
mov
add
jp
push
inc
cwtl
ret
jae
lods
cmp
mov
jae
lods
movsb
ror
pop
dec
pop
out
mov
int
clc
or
scas
jge
push
xorl
enter
ljmp
inc
mov
neg
and
mov
sahf
shrl
mov
not
fst
dec
loopne
sub
xchg
cmp
repnz
mov
sub
daa
fcomi
in
or
mov
fists
je
int3
pop
or
out
insl
cmp
pop
xchg
cmp
xchg
mov
icebp
push
jecxz
call
adc
imul
cmp
pop
pusha
push
add
fsubl
iret
xor
dec
dec
das
scas
test
outsl
shll
scas
push
mov
aas
xor
pop
andb
add
subb
shrb
xchg
cs
pop
add
jl
push
outsl
popa
xchg
aam
std
mov
ss
xor
and
test
rcrl
inc
push
cmp
or
dec
push
push
mov
lock
jae
hlt
gs
cld
pop
fwait
jb
and
pop
push
jb
jns
out
fwait
aad
jmp
pop
shrb
idivl
or
cmpsb
push
push
cwtl
mov
stos
xchg
addb
dec
lcall
jnp
imull
cmc
cmp
push
push
bound
pop
or
fmuls
ret
inc
mov
jge
fstps
lods
jle
push
push
add
adc
adc
mov
inc
push
xchg
ljmp
out
jne
in
dec
dec
ja
test
stos
sbb
sub
cmp
adc
lock
mov
dec
or
mov
mov
sub
sub
mov
jno
int3
lock
sub
mov
cmp
xorb
test
mov
imul
cmp
cwtl
add
andl
insl
call
out
cmp
fists
xor
cmp
test
arpl
cmp
lds
test
add
test
lahf
negl
aaa
sub
adc
js
paddw
push
sbb
into
xor
jo
ss
xchg
and
mov
xor
out
adc
xor
scas
mov
fst
jae
out
dec
out
push
inc
xor
fildl
dec
out
fidivrs
xchg
lahf
jae
mov
mov
mov
sbb
cmpb
adc
mov
clc
popf
and
loope
mov
jb
add
mov
xchg
cmp
mov
jg
scas
xor
jns
outsl
test
jae
jae
inc
adc
mov
push
mov
in
push
pop
imul
loop
or
mov
push
aam
outsb
adc
cmp
mov
push
orl
popa
jno
and
adc
inc
xchg
sti
sub
push
cli
rcll
add
arpl
sub
pop
clc
pop
mov
push
divl
call
pshufw
xor
fistpl
push
mov
cld
cmp
lods
in
jp
pop
push
and
add
lock
movsb
mov
imul
jge
pop
gs
out
lret
test
fistpl
jp
shll
cwtl
enter
push
adc
jo
push
mov
push
dec
mov
movsb
adc
sub
les
sub
push
cld
notl
jmp
inc
inc
test
mov
mov
call
shrd
enter
das
insl
imul
or
loop
jg
idiv
sbb
mov
mov
mov
inc
sub
mov
je
inc
jl
test
mov
dec
dec
add
ret
rclb
scas
movsb
sub
orb
or
pop
bnd
jg
sar
pushf
les
xchg
add
test
fildl
pop
sahf
lock
incb
adcl
sbb
stos
dec
es
and
add
xchg
fdivrl
add
pop
jmp
mov
pop
in
insl
sub
mov
pop
mov
pop
jecxz
adc
push
int3
pop
pop
mov
addr16
cmp
mov
push
cld
lret
ds
mov
out
fsubl
mov
mov
mov
mov
es
push
inc
and
sar
fwait
sti
cs
pop
pop
xor
outsl
jnp
out
dec
and
fsubs
adc
ret
nopl
lea
popf
sub
mov
outsl
mov
jns
mov
or
loope
pop
sbb
jl
adc
stc
mov
mov
call
push
repnz
test
sub
pop
xor
inc
out
xchg
add
dec
incb
mov
inc
fimull
rcrl
movsl
ja
cmp
out
test
and
incb
cmc
les
idiv
mov
mov
mov
dec
imul
rorl
dec
orl
jns
dec
cmpl
out
arpl
fwait
enter
pusha
inc
jmp
jg
cmp
xchg
lds
arpl
mov
xchg
sbb
xor
push
push
arpl
stos
dec
jecxz
cwtd
lret
xor
dec
movsb
test
pop
bound
roll
adc
inc
push
xchg
pusha
cmp
and
arpl
ja
fstps
not
push
sbb
lahf
rcll
std
je
jp
sarb
jns
xchg
cmpsb
lea
pop
dec
push
lret
adc
mov
repnz
pop
add
ljmp
sbb
popf
xchg
outsb
mov
loope
push
mov
xchg
dec
popa
jecxz
jno
lods
pushf
push
xor
push
push
sarl
pop
imul
fs
inc
push
lock
and
cmp
idivl
fisttps
and
fabs
test
xchg
or
inc
mov
stos
leave
incl
sub
es
fbld
lods
loope
sub
nop
adc
dec
sbb
nop
cs
xchg
loope
xor
push
push
dec
ljmp
push
scas
push
in
pop
out
fwait
jb
xchg
mov
insb
mov
xchg
cmpsb
repz
sub
dec
push
stos
rcrb
xlat
loop
sbb
sarb
cmpb
cmp
stos
add
test
sub
inc
and
in
cmp
movsb
mov
fstps
push
daa
movsl
xchg
iret
iret
popa
shl
cmp
cltd
mov
cld
mov
dec
mov
sarl
jo
mov
sbb
adc
pop
iret
push
push
js
jae
dec
push
mov
sbbb
xor
push
iret
in
loope
ja
mov
jbe
insb
cmp
inc
mov
sar
cmp
mov
sbb
lods
xor
sbb
lods
push
xor
or
dec
push
cs
mov
test
sbb
into
lods
out
sbb
add
shl
mov
int
sub
and
mov
loopne
gs
xchg
inc
or
cmp
scas
loope
movsb
or
rorb
push
leave
jno
popa
or
sub
add
rol
dec
push
stos
and
icebp
xchg
sbb
xor
test
pop
ds
dec
cmp
fsubrp
test
and
fdivs
sbb
popf
xchg
inc
in
lock
test
cmpsb
out
ror
rcrb
or
into
aaa
repnz
adc
push
pop
xor
mov
imul
sbb
jne
xor
das
sub
pop
mov
daa
lods
cmp
test
xchg
sbb
mov
mov
dec
rorl
jne
sbb
int3
inc
jnp
sbb
inc
mov
pop
lock
xchg
mov
dec
stos
inc
push
xchg
ja
push
into
cli
mov
arpl
mov
lea
sbb
pop
inc
mov
imul
sub
lret
cmp
jno
jns
push
jns
rolw
lods
xchg
les
mov
icebp
fwait
repz
les
adc
mov
fldenv
daa
jne
mov
push
test
mov
mov
xor
mov
daa
pop
adc
mov
rorb
jmp
popf
and
mov
fistpl
repnz
sbb
dec
or
push
mov
adc
and
daa
or
jne
clc
mov
fidivl
mov
add
negl
or
loopne
stos
mov
subl
xchg
nop
and
cs
out
fidivl
clc
cmp
loope
fadd
in
lods
xchg
enter
xor
insl
pop
sahf
lock
inc
adc
dec
in
addr16
cmp
es
or
pandn
cmpb
mov
es
jmp
stos
adcb
aas
enter
sbbb
les
test
ret
lcall
sarb
jp
mov
je
dec
cmp
mov
and
inc
xorl
dec
or
test
xchg
psubusw
mov
je
pop
push
rolb
add
xor
xchg
dec
fsub
sbb
cmpsl
mov
and
or
push
out
adc
push
xchg
je
fildl
stos
lods
jge
cltd
cmp
loope
sub
ret
into
mov
aaa
in
adc
fsubl
pop
ja
daa
push
test
filds
in
push
cltd
push
and
sbb
mov
mov
mov
pop
xchg
lods
cmp
int
mov
inc
jo
stos
lods
hlt
push
int
push
stc
jmp
js
loop
sti
or
enter
ficoms
sbb
dec
inc
or
loop
dec
xchg
dec
push
or
fs
popf
jecxz
je
out
gs
mov
dec
dec
out
das
out
rclb
dec
lds
test
mov
jb
adc
dec
adc
mov
dec
ret
not
adc
cli
xor
push
ljmp
mov
lret
sahf
jae
out
insl
mov
jmp
mov
xor
movsb
out
fmuls
push
jg
push
push
test
adc
popf
popa
and
mov
sub
stos
aad
in
xor
inc
scas
addr16
es
out
push
aad
clc
push
inc
rorb
jmp
shl
xor
hlt
fisubs
adcl
push
fidivrl
lfs
gs
and
dec
add
adc
cmp
into
push
sub
in
pop
rcrb
lahf
imul
mov
aas
xchg
cmp
inc
and
outsl
enter
jmp
sahf
mov
jl
std
mov
leave
in
dec
sub
xor
pop
jne,pt
jo
mov
sbb
adc
sti
out
cmpsl
inc
loop
push
dec
or
mov
xchg
mov
or
cmp
ret
lock
outsb
hlt
dec
out
mov
mov
or
loop
ror
stc
jo
sbb
fs
dec
inc
mov
out
push
and
pop
dec
sub
jp
lods
in
jecxz
ja
sub
xchg
cld
stc
mov
mov
cmp
or
es
loop
leave
xchg
adc
xchg
in
cmpsl
cmp
add
gs
inc
inc
jle
outsb
jl
clc
rclb
in
jae
mov
bound
out
test
add
test
or
cmp
cmp
dec
sbbb
sub
iret
and
xchg
adc
daa
dec
imul
dec
rol
ret
lock
loopne
stos
jp
imul
pop
mov
cmp
cmp
sahf
mov
shrb
aaa
xor
pop
sub
std
xor
and
in
mov
mov
jnp
sbb
jbe
mov
xor
shl
lcall
jo
cmpsl
loope
js
shll
ja
mov
addr16
stos
pop
mov
dec
fistpl
hlt
push
out
shll
sub
sub
pop
pop
jg
cltd
sahf
cld
dec
jg
outsl
ret
lret
jg
mov
pop
lea
call
mov
sub
inc
sub
push
mov
adc
xor
arpl
pushf
fwait
mov
sub
lcall
push
mov
subl
or
hlt
sarb
rcl
sub
and
xchg
fisubs
in
and
inc
jecxz
fisttpll
inc
ljmp
push
icebp
mov
call
adc
cmpsb
cmpsb
jg
adcb
lock
mov
mov
pushf
es
into
mul
stc
mov
test
and
adc
movsb
pop
pop
les
test
dec
daa
ja
lods
sub
push
roll
iret
mov
fimuls
mov
cmp
push
divb
and
cmp
push
mov
cli
pop
xor
dec
push
or
repz
mov
nop
pop
les
nop
pop
sub
adc
ret
xor
pop
and
leave
mov
cld
adc
mov
test
lret
cld
sub
and
loope
mov
mov
mov
or
jo
sub
icebp
mov
sbb
mov
xor
mov
and
push
imul
sbb
daa
lret
or
stos
and
lea
xor
add
inc
sub
jmp
call
loopne
icebp
jns
jmp
inc
push
insb
daa
cmp
jle
inc
add
or
call
pop
outsb
jne
dec
in
in
call
push
cmp
pop
sbb
mov
push
push
adc
mov
jecxz
in
aam
outsb
or
inc
sbb
cmp
jl
jl
loopne
notl
loop
xchg
nopl
mov
pop
xorb
lods
sub
cmp
dec
pop
jnp
imul
mov
fcmovne
lret
fsincos
jmp
or
cmp
sub
pop
dec
dec
pop
jnp
imul
mov
fcmovne
lret
fsincos
jmp
or
cmp
sub
jnp
imul
mov
fcmovne
lret
fsincos
loopne
sbb
cmp
sub
dec
dec
pop
jnp
imul
test
inc
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
loope
sarb
arpl
xchg
jmp
or
add
add
add
add
and
jnp
jnp
pop
add
add
inc
add
add
add
add
add
cmp
cltd
add
add
add
add
add
add
mov
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
sub
jno
addb
add
add
xchg
add
add
add
add
add
add
add
mov
add
add
add
jns
xchg
dec
add
mov
sbb
jl
sub
cltd
add
add
add
movsb
add
add
add
add
add
out
stos
add
add
add
add
add
inc
add
int3
add
inc
add
xchg
sub
cltd
add
add
add
add
add
add
add
faddl
bound
inc
add
add
add
xor
add
stos
add
add
inc
add
add
add
add
add
add
call
add
add
pop
add
add
add
add
add
add
int
testl
rolb
add
add
add
add
add
xchg
add
inc
add
add
xchg
add
xchg
leave
add
add
add
sub
dec
add
add
add
out
add
add
inc
add
dec
add
add
add
add
add
add
mov
mov
in
add
cltd
add
add
add
pop
add
add
add
add
or
icebp
add
jbe
add
add
add
add
add
add
add
jnp
xchg
adc
flds
jg
test
jb
xchg
add
xor
pop
add
add
add
add
add
add
call
add
mov
insl
add
add
add
add
xchg
add
add
inc
add
cmp
testl
inc
add
inc
add
add
inc
add
add
add
cli
add
add
add
or
dec
add
add
jl
dec
add
add
add
add
add
pop
add
add
xchg
popf
add
add
add
add
add
add
add
popf
add
add
push
add
add
add
pop
add
add
add
incb
sub
cwtl
add
jno
pop
add
add
add
jb
roll
lods
add
add
add
add
cmp
mov
scas
add
add
add
add
mov
scas
add
add
add
popa
add
addb
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
dec
add
add
pop
add
add
add
repz
add
add
inc
add
add
add
add
jns
in
add
or
push
add
add
add
int
mov
add
add
add
add
add
imul
push
adc
leave
add
in
repz
cmpsl
mov
lcall
add
dec
push
push
xor
or
shll
mov
push
test
mov
pop
sti
sbb
cmp
push
movsb
insb
movsl
and
inc
shll
into
and
icebp
push
jl
sub
mov
lods
cmp
and
jnp
jg
xchg
add
adc
jecxz
jnp
ret
dec
or
jmp
mov
outsb
lods
popf
push
or
stc
jp
repz
cs
data16
es
mov
ficomps
aam
ret
cld
and
xor
mov
pushf
push
fcomip
aam
fidivl
lret
pop
test
push
shll
mov
cmp
fstl
das
cmp
fcomp
jl
add
fsubs
xor
fs
sbb
jp
push
xchg
push
sbb
mov
mul
cmpb
xchg
inc
addr16
imul
cmp
push
faddp
cmp
cmp
lret
and
icebp
inc
dec
lret
adc
and
ret
rcr
idivl
sbb
add
sbb
out
fistpll
shlb
fmul
xchg
decb
sbb
or
sbb
mov
mov
inc
xor
or
xchg
mov
leave
outsb
mov
clc
decb
adc
jg
ret
jecxz
scas
loopne
jbe
lods
push
shl
xor
imul
adc
adc
leave
cmp
shll
pop
jo
cmp
cs
leave
pop
inc
movsl
dec
inc
xor
shll
mov
sub
movd
sub
push
hlt
dec
push
cwtl
ss
call
jo
fstl
stc
jne
adc
imul
jo
mov
pop
imul
mov
lds
push
ljmp
xchg
rcrb
sub
cmpsb
add
aad
scas
cmp
sti
and
sti
xor
xlat
adc
sbb
in
pop
inc
push
jecxz
mov
cmp
in
jge
push
sbb
mov
ret
aas
mov
xor
push
sbb
adc
insb
sbb
test
push
es
cmc
add
rcrb
pop
shlb
sbbl
sub
shll
ja
ljmp
or
xor
loop
ret
mov
push
jmp
aaa
and
dec
test
or
pop
jb
inc
xor
ror
cmp
icebp
mov
js
inc
add
dec
push
nop
fisttpll
popf
mov
cwtl
push
dec
vunpckhps
jno
jo
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
