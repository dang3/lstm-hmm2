call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
stos
or
sbb
sub
cmp
add
aas
repz
cli
jl
ret
inc
lods
push
mov
pop
in
pop
cld
out
or
sbb
sub
cmp
dec
mov
xchg
aaa
mov
imul
cld
cmp
sub
cmp
dec
lcall
outsl
jl
mov
mov
pop
cwtl
imul
jg
push
addl
insb
repnz
and
notl
jmp
cld
mov
inc
addr16
mov
mov
lods
adc
clc
mov
mov
cmpsb
adc
mov
out
movl
fdiv
lahf
scas
sub
fimull
in
fcomp
mov
inc
mov
add
imul
xchg
xorb
arpl
test
stos
int3
xor
std
bound
dec
cmp
pop
les
cmpsl
jae
sarb
lahf
aaa
fcoml
bound
bound
jb
sub
xchg
add
lahf
popf
iret
inc
push
push
test
inc
in
pop
jmp
sub
cmp
dec
repz
xchg
xchg
mov
pushf
lahf
lods
dec
mov
pop
in
jae
xchg
or
cmp
sub
xor
push
cmc
ss
pop
leave
ss
mov
out
jg
orb
into
and
adc
add
ss
cmp
push
mov
push
xchg
xchg
dec
les
xchg
pop
loop
mov
xchg
mov
inc
lods
push
mov
pop
in
pop
cld
out
negl
sub
cmp
dec
mov
xchg
mov
inc
lods
push
mov
pop
in
pop
cld
out
xor
mov
jmp
fdivs
and
movb
in
mov
mov
movsb
pop
push
push
test
and
arpl
repnz
inc
js
xchg
ja
movb
xchg
les
cmovae
xlat
xor
adc
iret
ds
push
in
xor
fwait
add
stos
fwait
cmpsl
out
cmp
sbb
push
cmpsb
leave
ret
out
cmp
stos
cmp
es
repz
rcrb
sbb
cld
int
or
dec
xchg
xchg
mov
pop
inc
outsl
andb
rcrb
fisubs
sahf
sub
outsb
fwait
or
sti
mov
fucomip
pop
movsl
aad
xor
stc
sub
movsb
sub
cwtl
movsl
jg
movsl
in
arpl
popa
roll
ljmp
dec
fistpll
cmp
adc
xchg
push
xchg
pop
fcmovnu
cmp
leave
and
mov
data16
xor
adc
pop
add
add
orb
scas
xchg
xchg
call
nop
sti
clc
sbb
jl
js
sub
add
xchg
inc
scas
fwait
dec
cli
or
xor
lea
xchg
repnz
dec
dec
clc
shrl
sbb
fcompl
jge
mov
mov
faddl
outsl
les
dec
fldenv
dec
insb
xor
fldl
jae
and
pop
aas
in
pop
das
ja
out
dec
mov
fstpl
dec
pop
lret
mov
into
add
and
outsl
pop
fdiv
pop
jl
cmp
ja
sti
shl
inc
fs
fcomps
pop
jo
pop
mov
cmp
test
mov
mov
movsb
imul
icebp
lds
pop
ljmp
out
pop
push
mov
mov
dec
jg
lea
lahf
loopne
int
in
xchg
insl
test
sbb
fildll
mov
or
adc
cwtl
test
pop
mov
push
mov
repz
aas
andb
ljmp
mov
aad
insl
decl
sti
pop
in
fisubl
pop
mov
xor
fwait
mov
shlb
and
fnstcw
inc
clc
push
divb
dec
ss
push
push
cmp
ss
inc
dec
jge
mov
movsl
mov
xlat
or
mov
jmp
aad
lds
in
mov
push
scas
xchg
notl
mov
pop
dec
int3
cltd
mov
imul
scas
hlt
mov
add
ret
add
jo
loop
sub
mov
jo
pop
jl
or
mov
add
inc
pop
jp
repz
icebp
inc
jle
es
jg
pushf
dec
dec
pop
es
jne
push
pop
pop
sbb
cwtl
xchg
fadds
loope
cmp
out
or
shll
sti
outsb
pop
shr
inc
or
lods
mov
loopne
jae
es
enter
adcl
and
mov
adc
scas
lret
jge
sbb
lea
xor
jg
bound
add
and
cltd
shll
fs
mov
lahf
lods
fnstsw
xor
inc
nop
xor
jo
lahf
add
aas
test
add
mov
sub
cmc
test
dec
mov
xchg
fdivl
stos
sbb
mov
clc
test
lret
add
cmpsb
sbb
mov
xchg
sub
mov
pop
jge
push
push
xor
sub
sub
inc
jae
inc
inc
sub
rol
and
mov
sub
cs
push
xchg
fcomip
daa
pop
cmp
jo
rcll
mov
cmpsl
fs
mov
or
out
mov
dec
in
lret
inc
fcoms
mov
aad
mov
dec
cmp
xchg
pop
jmp
cmp
push
cmc
add
mov
mov
sbb
out
dec
and
dec
pop
xor
mov
data16
cmc
pop
cli
cmpsl
xchg
push
xchg
jmp
out
lods
pop
pop
std
aad
test
add
xchg
nop
dec
mov
mov
pop
jl
enter
icebp
add
inc
lret
int
out
mov
clc
jo
push
xchg
out
lahf
inc
out
mov
jge
mov
sub
jae
fbld
lock
sbb
xor
out
mov
sbb
cld
test
dec
push
mov
stos
mov
sub
std
subb
insb
repz
lds
jbe
mov
pop
ret
mov
outsl
push
data16
arpl
xor
shlb
and
aaa
pop
adc
add
fistpll
ret
int3
dec
mov
movsb
adc
jecxz
push
fdivrl
repz
call
or
inc
repz
adc
push
outsl
popf
xlat
leave
pop
cmp
adc
daa
enter
mov
cld
jo
dec
imul
and
xchg
jmp
or
gs
or
pop
mov
inc
repnz
sub
adc
fadd
or
jp
xchg
mov
xlat
mov
fmuls
dec
jl
lret
adc
mov
lret
lahf
jnp
jnp
in
cltd
pop
mov
les
lea
leave
ss
and
cmp
shrl
les
jg
and
leave
jnp
mov
jmp
fidivrs
adc
lock
or
mov
sbb
daa
fs
repnz
fnsave
inc
lods
and
xlat
fdiv
ret
aaa
adcb
push
jb
cmp
inc
lds
addb
mov
sbb
jo
gs
xchg
and
lea
arpl
imul
int3
and
and
add
xchg
loop
mov
orb
shl
xchg
jecxz
push
and
mov
lret
pop
or
sahf
and
sbb
lds
ja
rol
mov
xchg
pop
clc
xor
int
jmp
mov
ljmp
hlt
jl
pop
insl
imul
rclb
dec
inc
sub
mov
aam
sub
test
jp
icebp
dec
cmp
cli
popa
insl
ds
stc
fwait
inc
mov
insl
push
shr
repnz
sbb
cmp
sbb
inc
sbb
mov
shl
and
push
xchg
cli
mov
xchg
movsl
mov
cmc
shrb
pushf
adc
adc
shlb
movsl
std
rolb
push
sub
jle
jns
in
lret
and
pop
add
push
mull
jp
lcall
push
jg
mov
xchg
les
adc
insb
jmp
cs
mov
jnp
xor
mov
mov
jno
inc
cmp
xlat
xchg
push
push
ret
inc
enter
ds
sbb
aaa
jno
push
inc
sub
inc
aaa
mov
fstpt
popa
inc
popf
push
push
xor
jnp
mov
std
pop
mov
cmp
filds
aas
ret
jg
jo
lahf
xor
jmp
in
sarl
sarb
in
and
dec
hlt
cli
or
insl
sbb
iret
bound
arpl
mov
xchg
out
cmp
mov
mov
lret
pop
gs
mov
add
xor
adc
filds
out
dec
cmpsl
clc
inc
shll
dec
xlat
add
add
imul
push
ret
fistps
hlt
cwtl
shr
xchg
arpl
lods
push
pop
out
xchg
fisubs
inc
dec
xchg
sub
sti
lahf
movsl
movsl
dec
mov
pop
adc
out
ret
and
jne
adc
jnp
dec
mov
xchg
lret
mov
xchg
pop
popf
xchg
lds
mov
xchg
fisubrs
repz
jbe
pop
lock
xchg
jne
sub
pop
imul
into
cwtl
dec
mov
ret
daa
mov
shl
mov
popf
add
aaa
pushf
sub
xchg
sbbl
mov
cld
inc
loope
mov
dec
mov
cmpsl
xor
pop
jae
sti
inc
dec
movsl
aam
nop
out
mov
jne
aad
xor
mov
xchg
in
push
sub
sub
stos
fstpl
xchg
cwtl
std
daa
and
or
xor
or
inc
into
mov
push
xchg
bound
dec
jno
and
or
les
shlb
pop
cli
mov
incl
std
roll
or
sub
add
sti
addr16
pop
add
sub
pop
xor
lcall
shll
clc
idivb
frstor
mov
mulb
flds
scas
mov
es
push
popf
lock
test
inc
mov
mov
lock
add
push
inc
test
jge
xchg
sub
outsl
mov
or
cli
in
pop
push
cmc
rcll
inc
gs
ret
sahf
lcall
loopne
and
faddl
xchg
in
adc
fdivrs
or
pop
inc
cmpb
jg
add
repz
sbb
or
sahf
adc
call
loop
sbb
mov
jnp
xchg
jp
scas
jb
adc
push
movsb
cld
and
adc
and
mov
stc
and
adc
cmpl
lret
ss
lahf
aam
ds
and
jnp
cwtl
xchg
inc
jo
dec
mov
mov
fs
roll
mov
fidivs
mov
adc
cmp
les
push
daa
movsb
dec
fwait
les
lahf
pop
ljmp
insl
cwtl
cmc
inc
and
mov
xchg
scas
sub
imul
ds
out
ja
mov
pop
insb
fildl
xchg
push
sub
mov
ljmp
jmp
xor
mov
test
inc
inc
mov
or
or
nop
fldenv
jb
adcb
andl
mov
aaa
jl
or
in
pop
push
lods
sub
adc
mov
and
in
xlat
iret
push
rol
scas
aas
int3
test
jo
jl
dec
adc
rcrb
mov
dec
mov
mov
lea
mov
movsb
jl
push
inc
pop
mov
push
pop
lea
jo
mov
outsl
lea
mov
mov
sbb
xor
adc
inc
cmp
and
testl
and
cmpsl
adcb
sub
inc
and
pop
and
popf
xlat
or
push
shlb
test
cltd
dec
cmc
fcomps
sbb
or
jge
add
inc
mov
jnp
lock
inc
mov
mov
mov
inc
pop
push
test
push
inc
inc
insl
dec
loop
push
xchg
inc
mov
pop
sub
leave
and
mov
push
adc
decl
sub
push
popa
sub
or
push
stos
fucomi
or
push
adc
jbe
or
sub
adc
add
push
and
mov
lds
insb
and
fs
pop
dec
and
outsb
jnp
dec
jno
mov
stos
xor
sbb
and
addl
jmp
cmc
xor
pop
adc
xor
or
cmp
bound
and
scas
xor
faddl
fcoml
cmc
ja
jecxz
add
push
addr16
orl
sub
orb
jmp
mov
cmp
push
imul
xchg
mov
sbb
xor
imul
push
xchg
movsl
dec
dec
mov
pop
das
or
dec
jno
call
das
fwait
cli
dec
pop
ficompl
cmp
inc
lret
xchg
das
lret
cmp
mov
inc
ret
jnp
in
shrl
repnz
mov
aam
ror
pushf
pop
push
stos
lret
lahf
xchg
ret
xchg
outsl
cmp
mov
mov
and
aas
push
xchg
jl
cld
adc
shl
or
mov
inc
jb
jnp
es
test
or
in
lahf
mov
or
loopne
xchg
ret
xor
rcll
mov
and
jle
in
mov
pop
dec
or
dec
cmp
dec
mov
pop
add
push
hlt
jns
mov
jno
xchg
adc
cmp
movsb
dec
xchg
fbld
xchg
sub
mov
in
and
daa
rcr
ret
xorb
je
or
jecxz
mov
pop
dec
sbb
jbe
ds
cli
adcl
pop
into
rorb
jp
data16
xor
xchg
sub
cmpsl
scas
xchg
call
xchg
aad
icebp
mov
dec
jne
sti
inc
sbb
lahf
push
fists
adc
push
inc
out
push
pop
mov
icebp
fs
jge
sbb
push
ljmp
push
das
sub
popf
jns
clc
xlat
mov
popa
out
inc
fstpt
shl
cs
jae
cmovae
jns
xor
push
fnstsw
dec
push
rolb
out
aad
test
xor
test
xchg
outsl
clc
popa
or
cmp
pop
inc
icebp
movsl
mov
outsb
fildl
cli
jb
ss
loop
mov
pushf
aad
hlt
mov
sti
sub
adc
dec
sbb
int
xchg
adc
fcmovu
mov
inc
sub
add
xor
ss
push
test
sub
mov
cmc
xor
mov
sub
add
cmp
arpl
in
pop
xor
and
sbbb
jnp
in
pop
and
cmp
loopne
daa
dec
inc
std
cmp
enter
sub
aaa
cmp
and
jmp
adc
mov
xor
popa
push
sub
mov
loop
push
pop
push
das
lret
or
arpl
insb
mov
call
vpunpcklqdq
xchg
insb
xchg
sbb
xor
je
add
dec
cld
insb
test
inc
push
cmp
pop
or
lea
stc
out
lods
sub
ret
in
xchg
sahf
movsb
cmp
imul
fwait
popa
push
xchg
repz
int3
ret
ss
jae
fmul
loop
out
icebp
adc
lea
sarb
js
loopne
mov
fsubrp
pop
mov
andb
enter
ja
adc
sub
iret
ficompl
and
js
enter
jno
push
in
cmp
pop
cld
sbb
arpl
mov
pop
arpl
ret
add
mov
sbb
cmp
pushf
push
in
je
or
inc
xor
inc
out
sub
sub
mov
aad
jne
cmpl
push
jge
cmovo
dec
rcll
and
mov
pushf
xor
cld
push
std
lods
sub
pop
cltd
mov
andl
aam
and
xchg
mov
pushl
insl
clc
mov
aas
call
loope
sub
out
inc
xor
pop
xchg
shrb
xor
pop
stc
sbb
fstp
jg
adcb
in
or
and
cli
pop
lahf
or
xchg
out
mov
loope
fs
sbb
negl
cmp
cmc
mov
pop
lcall
pop
fisubrs
inc
outsb
push
mov
stos
les
push
shll
nop
movsb
mov
xchg
cmpsl
insl
rcrb
sub
ja
ret
pushf
inc
jg
movsb
inc
shll
push
sarl
inc
xchg
js
mov
adc
push
push
out
jae
mov
cmpsl
fsubr
mull
movsl
mov
imul
jae
mov
lret
in
pop
jg
xor
and
push
pop
data16
mov
popf
dec
inc
fdivl
and
cmp
add
xchg
jno
int3
mov
jg
pop
cmp
jae
test
push
pop
xor
lods
popf
inc
imul
add
repnz
pop
xor
cmp
rolb
je
xchg
adc
cmp
sahf
aam
or
inc
fldcw
dec
enter
sbb
pop
loopne
or
pop
add
out
nop
push
sbb
lods
xor
mov
sub
jge,pn
popf
cld
arpl
sub
jp
loopne
pop
mov
lret
inc
test
ss
inc
fsubrl
inc
bound
lds
xchg
outsl
or
ret
sbb
lret
stos
icebp
add
mov
rolb
movsb
imul
xchg
gs
inc
mov
jle
mov
jle
mov
lahf
hlt
std
lret
dec
cmc
fdivrl
shlb
jg
mov
push
dec
jge
pop
jl
cmpl
shr
incb
sahf
out
push
popf
movsb
add
in
data16
jl
mov
dec
fsubs
fsubrl
xor
jmp
lret
ljmp
scas
outsb
daa
scas
dec
or
mov
mov
popa
mov
divl
lods
mov
push
andl
aad
add
mov
or
adc
jne
sarb
popa
xchg
pop
add
ljmp
loop
stos
xor
mov
pop
ja
mov
xchg
mov
popf
sub
xchg
aas
or
out
cmpsl
xchg
pop
jmp
in
outsl
adc
arpl
jle
cltd
cli
adc
cld
stos
test
dec
aad
std
shl
out
sbb
push
pop
or
push
push
fbstp
mov
cmp
imul
or
jbe
ret
mov
or
pop
pop
mov
cld
mov
mov
dec
sahf
push
and
or
xor
cmp
mov
push
int3
sub
aaa
mov
scas
lcall
js
call
popf
sbb
call
adc
and
jg
push
mov
scas
mov
stos
jmp
xor
sbb
add
je
mov
imul
adc
mov
mov
jo
mov
pop
sbb
push
test
loope
jbe
adc
pop
outsl
inc
mov
mov
add
outsb
out
in
xchg
insl
shl
sar
fucomi
nop
ss
mov
sbb
out
fs
data16
test
outsb
or
scas
out
in
and
adc
xor
add
inc
inc
fcoms
jecxz
push
icebp
inc
jnp
jns
pop
roll
aam
pusha
xor
push
into
pop
jge
push
fs
inc
xor
dec
mov
mov
jmp
lock
cltd
adc
sbb
inc
dec
dec
adc
es
scas
or
inc
jbe
enter
add
scas
add
enter
push
cld
loop
adc
mov
add
xor
pop
insl
sbb
push
push
js
or
nop
cmp
sbb
nop
jae
pop
test
add
and
mov
daa
cmp
decl
popf
and
in
incb
adc
pushf
mov
sub
and
mov
aam
dec
push
lds
pop
xchg
rclb
lds
das
test
imul
adc
cmp
jl
mov
xor
xchg
out
xor
inc
cmp
push
dec
shrl
adc
xchg
and
and
mulb
mov
jne
mov
daa
cld
movb
mov
xor
iret
jge
test
js
pushf
sbb
xor
and
and
es
pop
pop
dec
adcb
xchg
in
bound
jne
iret
inc
je
push
inc
stos
popf
filds
out
mov
std
xor
repz
mov
mov
dec
stos
and
gs
inc
add
or
pop
mov
popa
gs
cmp
xorb
push
ret
out
test
sti
mov
adc
jmp
and
jge
xchg
decb
out
push
fs
and
jne
add
mov
insl
inc
xor
cltd
inc
add
mov
and
aam
ficoml
pop
mov
xchg
jns
lcall
and
lahf
ja
sub
iret
test
lods
ret
jmp
ficoms
inc
daa
xor
add
inc
rcrb
and
push
ja
lret
mov
fs
dec
push
pop
or
mov
mov
cli
shrb
adc
and
jne
adc
fsubs
jno
cwtl
mov
je
mov
push
pop
movsl
push
cmp
inc
cltd
mov
sub
push
inc
mov
test
out
ret
sbb
lcall
je
sbb
xlat
adc
das
aad
add
mov
jno
adc
jp
and
imul
into
out
jp
mov
out
xor
dec
andb
inc
adc
inc
pop
adc
jmp
pop
add
lret
shlb
xor
test
imulb
jmp
cmp
mov
in
pop
pop
repnz
lods
shll
cmp
jnp
sar
in
gs
sub
mov
stos
lds
add
push
cmp
into
ja
aaa
fldenv
in
sti
cmp
jno
clc
nop
mov
or
pop
pushf
daa
adc
xlat
outsb
sbb
in
mov
mov
xchg
mov
add
test
xor
pushf
jne
das
ja
jns
mov
cwtl
mov
in
jno
ja
dec
xchg
cli
lods
mov
xor
sub
pop
xor
add
cltd
adcl
push
je
out
push
adc
sub
cmp
dec
mov
xchg
mov
inc
lods
push
mov
pop
in
pop
cld
out
negl
sub
cmp
dec
mov
xchg
mov
inc
lods
push
mov
pop
in
pop
cld
out
hlt
sbb
sub
cmp
dec
mov
xchg
arpl
mov
add
daa
cld
decl
sbb
sub
cmp
dec
cmpsl
pop
xchg
mov
lods
push
lret
push
inc
mov
add
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
test
inc
pop
clc
pop
sub
cmp
dec
push
pop
pop
push
xchg
cwtl
xchg
mov
cmpsl
enter
call
pop
sbb
dec
aaa
cmp
or
inc
push
xchg
push
cmp
mov
out
sub
pop
inc
inc
pop
daa
and
and
out
aam
test
rorl
adc
push
xor
roll
or
push
ja
mov
or
cld
jl
fs
fs
sub
pop
cmp
jne
stos
insb
lods
aaa
les
mov
add
push
sbb
fldl
lret
add
lret
pop
xlat
sbb
cmp
push
sbb
push
push
push
mov
fcom
pop
push
clc
mov
and
adc
pop
pop
imul
and
cmp
jae
sub
push
sub
jge
or
jbe
aaa
ja
add
shlb
sbb
les
cmp
bound
call
int3
daa
lds
jnp
rcll
mov
call
pop
addb
aaa
or
add
inc
pop
ja
and
cli
ljmp
mov
clc
xchg
or
outsb
dec
pop
pop
dec
cmp
ss
sbb
int
mov
lock
cwtl
lods
out
push
dec
imul
inc
dec
xor
aaa
sub
add
or
hlt
repz
ret
jmp
fwait
mov
clc
out
pop
sbb
sub
cmp
dec
push
pop
inc
push
xchg
cwtl
xchg
xlat
fadd
call
pop
sbb
sub
cmp
dec
push
pop
inc
push
xchg
ds
push
js
pop
adc
roll
push
jmp
dec
insb
adc
jns
adc
pop
ficoms
jecxz
cmc
push
cmpsb
push
adcl
aam
pop
xchg
sub
sbb
and
push
jae
bound
test
add
js
fbstp
inc
je
mov
sti
dec
sti
repnz
outsl
lods
jbe
add
pop
and
pop
bound
dec
sub
shrb
movsb
addb
ret
mov
popf
fidivl
das
jl
andb
push
cmpl
xlat
scas
imul
cmpsb
out
add
ss
imul
sti
enter
pop
add
mov
mov
push
inc
push
push
lahf
push
xchg
popf
in
fadds
ds
lcall
fst
sbb
enter
push
lret
ss
ret
rcrl
or
fnsave
mov
push
mov
lds
dec
mov
jae
movsb
xchg
xlat
mov
jne
jne
in
pop
push
int3
stos
addb
movsb
jge
fimuls
inc
inc
mov
mov
insb
rol
ror
scas
nop
imul
mov
mov
sarb
or
mov
stc
jo
aad
lods
xor
jle
sbb
push
dec
pop
add
adc
in
testb
repz
mov
mov
sets
sub
push
jne
push
lcall
xchg
in
lret
mov
incl
dec
std
and
push
or
xor
xchg
xchg
and
icebp
cmp
and
cmc
test
jae
xchg
dec
call
pop
mov
rcrb
or
rolb
cmc
jne
dec
or
je
and
dec
fstpl
ret
insb
push
cwtl
out
adc
xadd
movsl
jl
push
out
and
xchg
xor
jns
mov
js
scas
fdivrl
in
dec
mov
jno
xor
mov
and
xor
xor
js
jmp
pop
jl
sbb
and
pop
adcb
adc
jno
xlat
dec
or
das
subb
dec
or
or
sbb
test
and
mov
adc
push
adc
into
and
mov
mov
xchg
and
pop
xor
aam
popf
gs
add
cltd
dec
pop
outsl
aad
cmp
push
add
fiadds
into
repz
ficomps
jno
cwtl
daa
test
lds
xchg
adc
add
add
repnz
mov
xor
pop
cmpsl
fnsave
mov
in
loopne
mov
jecxz
mov
cmp
jnp
xchg
jne
lods
movsb
sahf
out
cwtl
bound
xchg
insl
jle
xor
gs
pop
scas
in
mov
addr16
stc
push
or
push
push
ljmp
mov
hlt
mov
mov
out
dec
pop
shrl
pop
and
pop
repz
and
sub
nop
xlat
inc
mov
mov
add
sub
leave
es
aas
lods
inc
scas
mov
jno
jns
mov
in
fs
ret
in
sub
cltd
jno
and
pushf
inc
ja
inc
repz
push
mov
push
or
push
mov
out
pop
out
mulb
aam
test
jns
dec
inc
mov
or
dec
push
mov
imul
outsb
or
mov
or
jno
sti
outsl
push
mov
and
adc
jae
cmpsb
inc
lods
ret
aas
mov
cwtl
mov
std
sbb
insb
pop
mov
call
or
pop
cmpsb
das
movsl
les
rclb
adcl
daa
out
daa
cli
push
js
test
push
out
mov
add
imul
add
or
repnz
push
mov
pop
repz
fmulp
pop
jmp
push
add
or
push
jp
sbb
push
xor
andl
xchg
out
mov
gs
and
icebp
add
cmpsb
adc
loopne
cmc
ljmp
mov
lret
bound
inc
fimuls
fucomi
sbb
push
out
xor
cwtl
xchg
clc
stos
jns
imul
test
sub
rcr
cmpsb
add
cmpsb
out
addb
jmp
into
imul
xchg
or
jno
mov
popa
cmpps
adc
adc
cs
data16
mov
mov
dec
mov
cmpsl
jge
loopne
push
xchg
test
lea
and
xor
adc
std
cmpsb
pop
adc
pop
daa
xor
add
out
leave
push
push
sbb
movsb
add
sub
push
mov
ret
aad
inc
jmp
xor
mov
xchg
lcall
aas
dec
adc
cld
pop
xor
add
cmp
add
aas
cs
lea
std
aad
and
cltd
loop
push
pop
mov
stos
sbb
outsw
ret
pushf
xor
mov
sarb
lock
pop
mov
int3
ljmp
adc
jge
frstor
out
out
dec
adc
test
push
or
in
in
ja
push
xor
mov
shrb
sahf
cmp
mov
ret
mov
loope
fwait
scas
lcall
push
push
rorl
shrb
jg
mov
call
cli
push
jp
jno
lea
xor
dec
push
jnp
clc
loopne
das
icebp
adcb
mov
mov
pop
daa
jb
fimull
push
ljmp
mov
mov
movsb
lcall
push
subb
lcall
xlat
and
xchg
add
rol
es
add
pop
clc
push
push
jmp
in
dec
jo
orl
cmpsl
push
arpl
nop
mov
in
aas
dec
out
mov
ja
andb
add
mov
mov
cli
or
sahf
mov
and
scas
dec
lock
addb
sbb
scas
stos
mov
mov
add
cmp
cmp
xor
push
adc
bound
mov
ds
sbb
dec
lret
xchg
mov
call
shrl
mov
insl
xor
xchg
jne
inc
ret
ret
jbe
sbb
ror
dec
icebp
xlat
dec
iret
inc
or
pusha
xchg
sbb
sub
into
in
and
sahf
popf
cmp
movswl
fdivrs
push
sbb
aaa
jo
mov
sub
outsb
mov
mov
dec
mov
pop
rolb
xor
cld
inc
int3
sub
lret
xchg
fistpll
mov
pop
negl
mov
xlat
push
mov
mov
mov
sub
jle
hlt
push
js
sbb
outsl
mov
aam
cli
aam
xlat
and
andb
pop
adc
xchg
lea
nop
mov
mov
mov
rcrl
loopne
out
out
push
mov
movsl
mov
lahf
xchg
push
cmp
aaa
lcall
jge
iret
cmpsb
ljmp
xchg
mov
xchg
call
mov
fistpl
push
add
movsl
test
xor
xor
dec
call
xchg
lret
push
mov
loopne
in
mov
push
imul
clc
mov
push
adc
mov
inc
push
xchg
push
mov
xchg
mov
push
mov
jp
out
mov
js,pt
sbb
in
into
arpl
daa
out
mov
push
sar
pop
mov
mov
fidivrl
incl
mov
sbb
pop
pop
cmp
rolb
pop
adc
popf
mov
push
jl
xchg
pop
dec
mov
xorb
jge
adc
xchg
js
addr16
int3
outsl
adc
lods
sbbb
outsl
jg
shufps
icebp
sub
cwtl
pop
xchg
jbe
add
arpl
imul
ffree
pop
xchg
in
mov
mov
adc
and
setl
add
imul
hlt
addr16
mov
fsts
iret
and
and
sub
or
mov
and
movsl
sub
xor
mov
jl
cmp
sbb
shll
lret
dec
test
add
push
jno
xorb
fiaddl
cmp
and
imul
hlt
cmp
dec
incb
fidivrl
addr16
fsubp
lds
lock
or
fcompl
pop
insb
loope
and
ret
outsl
and
cltd
out
mov
fsub
jo
dec
mov
enter
sarl
sbb
xchg
lods
arpl
enter
pop
std
ss
lods
ret
sub
into
inc
cmp
dec
mov
repz
xor
jb
lret
call
mov
and
cmovl
push
fs
xor
sub
icebp
jecxz
lock
lahf
dec
pop
cltd
test
dec
sbb
xorl
clc
js
neg
addl
loope
mov
mov
das
push
inc
out
addr16
dec
fwait
pusha
pop
and
int3
pop
pop
outsb
shr
test
lock
repnz
sub
pop
cmp
add
test
mov
roll
and
push
fnstenv
add
push
dec
inc
in
iret
cmp
in
add
shlb
jge
sbb
or
imul
pop
jbe
pushf
out
lods
jl
addl
jb
sbb
cmp
in
mov
insb
jae
and
ret
jae
or
xor
mov
xchg
popa
ds
sbb
scas
mov
xchg
push
shrl
test
push
lret
sbb
push
icebp
lret
out
enter
and
sbb
pop
int
sbb
rolb
ret
sbb
int3
mov
std
dec
rolb
movsb
mov
and
sub
jg
data16
xchg
lret
add
lret
in
xlat
xlat
mov
jb
stos
or
aaa
and
mov
std
sbb
pop
call
inc
xchg
jg
inc
add
imull
sbb
int3
mov
jg
jbe
lds
out
insl
add
jbe
fldt
push
cmp
notb
out
pop
sarb
dec
pusha
mov
mov
cmc
out
cmp
mov
loopne
pusha
push
ja
jnp
pop
ret
jl
sarw
and
pop
cs
mov
pushf
push
jmp
mov
or
das
out
jnp
aam
adc
xor
gs
ret
nop
xchg
push
jp
or
aas
jnp
cmpsb
aam
inc
sbb
inc
aam
pop
cmp
inc
sub
cmp
add
out
jnp
xchg
or
jo
enter
push
inc
xor
fistpl
fildll
jbe
and
or
fisttps
das
pop
push
insl
imul
mov
loope
mov
mov
stos
sub
stos
std
sub
ret
sbb
push
out
insb
push
lahf
sub
xor
mov
mov
xor
mov
xor
cmp
or
cmpsb
pop
out
loopne
mov
adc
dec
push
pop
fdivrs
jg
icebp
push
sub
mov
sub
xor
xchg
mov
xchg
jg
xor
inc
inc
aaa
cmp
xchg
push
or
scas
cmp
mov
adc
sub
ljmp
flds
aam
xor
jns
jecxz
cmp
pop
lret
lea
sahf
mov
pop
and
sub
xor
aas
mov
inc
add
pop
dec
out
mov
orb
nop
out
mov
cmp
clc
fisubrl
xor
subb
int
vmwrite
mov
xend
int3
push
push
popf
cmp
lds
nop
cld
repnz
leave
cltd
das
out
sbb
and
stos
xchg
lods
jmp
test
scas
aad
stos
jbe
popa
in
inc
xor
jp
xchg
cmp
pushf
pushf
xchg
and
addr16
sub
sub
negb
daa
js
jo
mov
jno
or
sub
ljmp
insl
pop
jg
loope
or
pop
fldt
dec
xchg
jp
pop
or
out
adc
jo
add
cli
loope
dec
jecxz
addr16
in
cmpsl
pop
push
pop
movsl
pop
mov
mov
ss
sbb
das
aad
pushf
rcrl
inc
cs
sub
push
add
loope
loope
push
jge
mov
adc
fistpl
adc
loope
push
xor
cwtl
inc
mov
aad
add
imul
ljmp
dec
xor
xor
push
les
int
es
mul
das
jg
sti
sbb
jno
add
outsb
xchg
push
dec
sarb
pop
xchg
lcall
nop
push
mov
inc
outsb
rcrl
enter
cmpl
mov
cltd
mov
xor
repnz
lret
adc
pop
mov
push
push
dec
rclb
jl
and
addr16
es
sub
in
ja
and
hlt
fdivrs
mov
call
mov
fbld
push
jmp
and
outsb
pop
push
jns
xchg
jmp
rcrb
push
stos
jne
jb
faddl
aad
xchg
mov
adc
inc
nop
inc
and
adc
test
ds
jmp
aam
lods
outsl
fdiv
lret
push
and
jl
outsl
jge
lods
loope
arpl
cmp
leave
lods
lcall
outsl
jle
fisubrs
test
or
dec
stc
push
mov
daa
mov
stos
repz
inc
ss
outsb
and
test
sub
push
add
mov
pusha
and
inc
cltd
popf
dec
push
imul
lcall
xorl
mov
dec
xorl
cwtl
rcr
cmp
cmp
into
mov
push
scas
insb
push
push
lods
mov
jg
vpandn
pushf
mov
loop
lock
mov
out
stos
dec
adc
mov
jae
cli
in
jbe
out
in
xchg
sarl
int
dec
sbbl
lahf
cmp
jecxz
loope
test
add
out
orb
stos
pop
cli
fstpl
cmpb
lea
and
sub
cwtl
ja
cmp
andb
push
clc
mov
sti
xchg
test
in
or
ret
jge
or
xor
int
sbb
mov
fldl
or
cmc
dec
outsl
in
push
sbb
or
push
xchg
scas
hlt
sbb
push
movsb
daa
cmp
mov
xchg
push
leave
xor
cli
push
mov
hlt
into
fldl
aas
cmp
adc
mov
lcall
mov
adc
xchg
mov
push
mov
and
popf
in
popa
jne
das
pop
shll
sub
aam
lret
out
or
xor
sbb
loope
pop
adc
sti
inc
adc
xor
sub
gs
filds
adc
out
in
inc
jo
push
lret
out
push
jg
cwtl
jecxz
ds
sbb
mov
inc
pop
mov
dec
in
mov
xchg
loop
xor
xchg
fisubs
daa
icebp
ret
lea
pop
pushf
jnp
sub
jmp
test
repnz
adc
mov
in
xor
dec
into
icebp
fildll
mov
into
push
and
sti
scas
mov
jl
andb
push
push
lahf
insl
push
xchg
mov
mov
test
push
dec
cmpsb
lods
cmpsb
inc
shlb
pop
xchg
fcomp
out
adc
adc
testl
sub
insb
or
mov
inc
push
movsb
inc
dec
xchg
test
add
loope
outsb
mov
nop
add
mov
xlat
fcoms
mov
lahf
hlt
push
mov
mov
ret
shll
in
insl
decl
push
sbb
dec
push
fsubp
negb
adc
enter
pop
jns
testl
call
add
pusha
rcl
mov
test
mov
push
mov
push
popf
xchg
add
hlt
int
inc
addr16
push
movsl
lcall
jle
xor
jl
js
pop
xchg
movb
jmp
int3
inc
mov
jle
xchg
add
data16
sarb
dec
call
push
addl
jl
loope
inc
rolb
jp
mov
or
sub
jno
add
jbe
in
dec
aaa
mov
dec
shrb
lret
scas
cmp
in
jecxz
lock
ficomps
pop
out
arpl
inc
pushf
shr
bound
inc
lds
jne
mov
lods
sarb
push
jae
cli
sbb
mov
sbb
fcomp
push
lret
data16
sub
out
sbb
mov
jecxz
addr16
cld
ret
sti
fidivrl
cli
imul
sbb
test
test
fsub
sub
out
or
push
mov
xor
out
and
aad
or
jmp
stos
xor
push
sub
sub
or
pushf
into
mov
lahf
filds
les
testl
out
fiaddl
loope
sbb
mov
cmp
mov
inc
push
dec
or
cmp
xor
les
rcr
pusha
inc
movsl
jne
pushf
push
mov
sahf
rcrl
jecxz
jo
sti
dec
mov
enter
cmp
popf
movsb
xchg
push
cmpb
lahf
outsb
dec
cmp
inc
mov
push
jae
and
popf
xchg
pop
jg
or
enter
clc
int3
xchg
lods
adc
inc
lret
pop
dec
gs
dec
aas
sbb
mov
fcoms
or
xchg
cwtl
adc
inc
xchg
lahf
loopne
in
jle
push
aam
sbb
std
test
mov
lret
lret
push
pop
add
into
pop
xor
push
movsb
cmpsb
scas
mov
je
mov
push
pop
jl
dec
mov
iret
mov
test
sbb
test
adcb
fistpl
push
fucomi
mov
or
into
jecxz
imul
jge
jmp
pop
fldt
scas
outsb
xchg
adc
int
je
repz
and
inc
adc
ljmp
or
stc
cmp
mov
in
leave
lret
xor
mov
in
xchg
sub
stos
xchg
jmp
lret
push
imul
ljmp
adc
fucomip
in
icebp
cs
stc
mov
rcr
or
test
cld
pop
or
je
or
ret
ja
mov
xchg
hlt
push
sub
xor
mov
push
add
out
jp
stos
mov
rcl
aas
jbe
js
lcall
nop
mov
scas
inc
mov
push
mov
sbb
push
or
dec
iret
inc
outsl
repz
lods
xlat
repnz
push
mov
adc
sub
cwtl
push
xor
sub
inc
stc
inc
call
stos
mov
subb
int
mov
mov
fs
std
fistps
xchg
shlb
and
jno
lea
ljmp
les
and
loopne
and
std
movl
xor
mov
shll
xor
xor
test
mov
dec
and
inc
pop
loopne
pop
cmp
insb
test
or
fidivl
jge
mov
inc
shrl
sti
sarb
jbe
mov
rcrl
push
inc
in
xchg
cmpsl
pop
fnstcw
mov
mov
mov
mov
dec
push
mov
test
inc
adc
push
in
int
into
mov
mov
xchg
inc
mov
mov
popa
cmp
push
pushl
push
jno
repz
add
dec
pop
test
mov
xor
sub
xor
mov
or
popl
adc
fstpl
jnp
inc
cwtl
inc
addr16
std
jns
inc
adc
add
test
inc
mov
into
sbb
insl
sbb
dec
sti
mov
push
xor
inc
mov
repnz
pop
bound
push
mov
out
lret
jp
xchg
insb
daa
cmp
cmp
mov
sub
clc
dec
pop
mov
add
jns
jmp
jae
insl
or
cld
push
push
std
rclb
notl
imul
xor
mov
in
and
sub
xchg
test
xchg
or
sbb
xchg
dec
or
loop
mov
xchg
movsl
pop
sub
add
and
jne
mov
adc
insb
out
dec
popa
inc
mov
pop
mov
cmp
add
lcall
iret
lods
imul
jae
je
sub
pop
rcll
imul
dec
insb
sub
fdiv
jp
mov
mov
je
adcb
cld
ror
lods
mov
push
mov
pop
test
mov
int
into
in
pusha
repz
push
xor
stc
or
ss
cmp
int
scas
dec
xchg
jbe
inc
imul
jns
dec
stos
push
fucomp
inc
stos
ret
mov
xlat
dec
jp
cld
adc
xchg
dec
sub
mov
test
dec
cmp
cmpsl
enter
call
pop
sbb
sub
cmp
dec
push
pop
inc
push
xchg
cwtl
xchg
xlat
fadd
call
pop
sbb
sub
cmp
dec
push
pop
inc
push
xchg
test
enter
pop
xlat
fadd
call
pop
sbb
fdivs
cmp
dec
push
dec
inc
push
xchg
les
enter
call
call
cmp
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
rcrb
pushf
fcoms
jp
adc
pusha
enter
test
mov
add
js
dec
rcrb
sub
sbb
enter
test
mov
mov
add
popa
loopne
rolb
xor
sbb
xchg
xor
inc
test
xlat
dec
aam
iret
add
lock
mov
jnp
cmp
dec
filds
add
mov
ret
xchg
mov
aas
add
cmp
xchg
shrb
lahf
xor
es
inc
test
mov
push
xchg
test
repnz
cmp
fsubrs
pop
lahf
lock
push
mov
mov
cwtl
mov
push
rcl
cmp
arpl
daa
adc
mov
lea
adc
pop
lds
aas
xlat
mov
mov
test
add
mov
aaa
leave
scas
sub
ja
mov
movzbl
sub
pop
add
mov
and
cwtl
add
rcrb
aas
mov
mov
icebp
jo
pusha
rclb
inc
mov
mov
imul
sub
pop
fcompl
inc
ficomps
shr
adc
mov
push
cli
adc
inc
pop
lock
daa
shrb
mov
clc
cmp
or
dec
subb
cltd
das
test
rorl
jne
push
or
mov
cmp
call
push
fadds
xor
add
js
dec
rcrb
sub
sbb
enter
test
mov
add
push
test
inc
jl
sbb
out
fldl
xchg
mov
test
in
and
xchg
adc
js
add
xor
mov
lods
inc
cmc
mov
icebp
push
jb
and
add
and
pushf
cmc
mov
xlat
out
xchg
push
fsubp
add
jae
jne
test
pop
mov
sbb
dec
cltd
dec
outsb
inc
mov
sbb
mov
outsl
movsl
push
dec
lock
dec
mov
cmp
int
add
mov
sahf
imul
ror
mov
inc
mov
xchg
arpl
jno
addr16
xchg
movsb
jne
pop
imul
sbb
insb
mov
les
jle
xchg
iret
cmp
mov
loop
call
mov
inc
jns
adc
dec
xchg
mov
xchg
dec
addr16
fwait
sbb
daa
cwtl
mov
or
das
fs
das
dec
mov
or
sbbb
xor
sbb
popf
cltd
add
sbb
imul
orb
mov
psrlq
dec
xchg
arpl
add
lods
xor
xchg
inc
push
inc
sbb
mov
or
popa
cmc
outsb
stc
fcmovu
cmp
iret
mov
movsl
fbld
mov
xlat
push
xor
icebp
fisubrs
cmp
call
rolb
dec
jne
push
fs
cs
jo
les
cmp
movsl
ficomps
xor
in
mov
mov
fstpt
pop
sbbb
mov
and
or
mov
pop
test
mov
add
shlb
or
clc
jno
std
mov
ja
dec
repz
push
jne
stos
pushf
jecxz
push
jl
dec
push
add
jp
loop
cmp
rcr
loop
into
adc
and
adc
movsb
scas
fisttpl
pusha
jb
lret
scas
icebp
jge
mov
mov
or
stc
mov
subl
ds
call
arpl
push
in
push
in
aaa
and
jmp
rcrl
mov
int3
es
in
adc
inc
push
sbb
adc
jg
lret
sub
lret
mov
loopne
cli
mov
lea
subl
mov
lods
test
aad
dec
shll
pop
push
and
push
dec
xchg
in
mov
fiaddl
mov
pop
sub
fistps
add
jp
stos
cmpsb
cwtl
cwtl
mov
popf
popf
sub
adc
dec
xor
xchg
adc
int
sarl
mov
cmp
clc
adc
xchg
in
adc
mov
call
out
and
lods
lahf
leave
cmp
mov
xchg
xchg
ja
mov
and
testl
jo
mov
xchg
sbb
push
jmp
adc
cmp
or
nop
mov
adc
call
imul
stc
test
mov
test
daa
pop
in
add
test
enter
imul
sti
mov
inc
in
push
inc
fmuls
jl
dec
cmp
mov
in
pop
pusha
dec
repz
mov
jge
mov
aaa
outsl
lcall
or
cli
or
lea
pop
icebp
mov
scas
add
test
sub
scas
nop
cwtl
pop
jecxz
jmp
popa
mov
ljmp
jecxz
mov
cli
cmpsl
sbb
jmp
sbb
push
clc
sbb
ror
cmp
fisttps
jae
lahf
nop
pop
or
pop
adc
mov
outsl
inc
push
ja
inc
push
mov
sbb
jns
add
ds
test
out
stos
push
xor
and
sti
les
pop
ds
pop
mov
push
add
lcall
icebp
out
pop
pop
pop
loop
pop
mov
add
sahf
rcrb
dec
dec
jbe
aas
repnz
les
mov
addr16
xor
or
mov
fmul
cli
or
sbb
inc
lahf
adc
cmpsb
pop
sbb
pop
out
mov
pop
sbb
lahf
xor
mov
mov
ss
loopne
dec
int3
xchg
shl
test
dec
add
adc
mov
cmp
mov
sub
icebp
cmp
mov
mov
outsl
jae
arpl
mov
enter
mov
xlat
cli
pop
gs
aaa
shll
add
das
jl
mov
out
adc
ljmp
cld
data16
xor
loope
out
js
mov
scas
movsb
xlat
aas
sbb
or
mov
daa
aad
cmp
pop
out
lcall
faddl
sbb
sub
gs
ljmp
into
jle
dec
or
jns
push
sbb
pop
clc
adc
test
or
mov
adc
pop
pop
shl
mov
adc
bound
outsl
or
int3
pop
int3
lea
in
xchg
push
mov
xchg
jge
xchg
aas
add
inc
lods
push
jno
ret
or
out
dec
sbb
dec
xor
mov
test
int
fistps
adc
sbb
pop
jnp
push
ss
mov
or
push
nop
movsb
stos
mov
add
adc
dec
stos
add
push
push
jg
mov
pop
test
test
hlt
xor
mov
mov
adc
inc
sahf
fcompl
add
mov
xchg
mov
cmc
jmp
push
mov
fisttpl
pop
test
sar
fwait
cmc
push
cmp
jl
or
mov
cmpsl
dec
outsl
stos
ret
mov
out
ss
pop
inc
stos
mov
movsb
sub
stos
popf
adcb
mov
icebp
gs
and
nop
repnz
pop
mov
test
jne,pn
cmpsl
mov
cmp
lods
fstpt
cli
inc
hlt
jp
leave
outsl
dec
inc
mov
shl
popf
mov
leave
shll
iret
jb
jg
lret
in
mov
dec
adc
div
or
xchg
cs
lahf
sub
repnz
push
push
jno
sar
divb
pushf
addr16
mov
push
negl
shll
push
loopne
shlb
jmp
ret
cmp
sub
lods
outsb
in
mov
addl
jne
mov
cld
mov
and
lahf
adc
sub
cmp
adc
rol
dec
into
mov
mov
call
test
fmulp
xchg
and
pop
ljmp
fwait
add
mov
xchg
in
into
add
jp
mov
dec
pop
push
hlt
mov
mov
jnp
cmp
pop
and
cmp
xchg
in
int
ret
es
stos
jecxz
test
call
mov
daa
bound
mov
xchg
pop
fidivrl
mov
pop
jmp
cs
sub
pop
ficoml
outsl
push
in
mov
movsb
outsl
pop
pop
inc
add
xlat
lret
movsl
nop
lock
fists
mov
or
fmul
pop
add
jmp
icebp
ljmpw
or
xchg
pop
leave
gs
jge
stos
xchg
mov
dec
cli
or
ret
jne
lret
mov
push
inc
sub
xchg
sub
xchg
push
jecxz
dec
hlt
andb
ror
jecxz
sti
aaa
nop
aas
mov
pop
in
adc
cmpsl
divl
or
leave
dec
push
aad
out
ret
mov
daa
push
mov
push
push
cli
mov
loopne
sbb
jne
cmp
jb
cmp
jno
push
insb
sub
mov
cmp
xor
xor
sbb
push
dec
xchg
sbb
push
cmp
in
inc
dec
push
or
dec
xchg
cli
or
xor
jne
lds
or
xor
movsb
test
add
pop
cmpsl
mov
in
push
outsl
sbb
in
divb
aaa
xlat
dec
lock
fistl
push
lods
jno
aaa
cmpb
icebp
cs
push
int
aaa
cli
pop
xchg
pop
test
outsl
jnp
jno
pop
popf
and
cmpb
jno
mov
mov
jns
inc
pop
es
add
jg
mov
xor
rorb
jle
push
xchg
enter
mov
sbb
sbb
ds
push
sahf
stc
xor
sbb
cs
dec
and
cs
loopne
lret
ljmp
mov
hlt
ja
xchg
ret
into
sub
popa
push
dec
push
cmp
cld
adc
and
push
jnp
push
mov
or
or
adc
fwait
mov
pusha
adc
inc
test
xchg
add
int3
int3
hlt
mov
clc
mov
scas
test
rcrl
pop
fidivs
lcall
or
pandn
dec
imul
add
mov
movsb
loopne
int3
es
mov
pop
jo
jbe
loop
inc
mov
mov
in
sub
or
movsb
ja
test
call
ret
je
negb
ja
cmp
sub
xchg
je
cmpb
mov
inc
dec
sbb
orl
fisubrs
rcl
dec
arpl
insb
mov
mov
lods
nop
mov
push
cmpsl
inc
clc
mov
popf
cs
aas
cli
xchg
daa
mov
pop
out
and
pop
leave
loope
subl
cmp
pop
test
mov
mov
jne
pop
push
pop
xor
ja
fcmovnu
jae,pn
sub
call
nop
pop
adc
jecxz
add
dec
test
stos
insl
add
dec
add
shl
test
inc
adc
pop
nop
dec
jg
sbbb
in
jo,pt
pop
repnz
int
mov
rorl
bound
jmp
jb
out
aaa
xor
jns
add
or
jg
push
pop
rcll
aad
mov
mov
adc
mov
rorb
mov
test
cmc
loope
hlt
fcmovnu
pop
mov
sbbb
push
pop
mov
jns
repnz
stos
jecxz
pop
stos
jle
icebp
rorl
fdiv
dec
dec
lret
adc
addr16
ljmp
mov
sbb
push
inc
clc
push
jb
mov
lret
adc
gs
mov
xlat
mov
int
xor
inc
xorb
ds
addr16
popf
jnp
jne
jmp
out
test
frstor
add
dec
mov
movsb
xchg
mov
hlt
or
xchg
sbb
cwtl
dec
add
add
je
insb
pushf
push
sbb
cwtl
mov
ljmp
push
push
jo
loopne
out
into
out
shlb
adc
xchg
outsb
mov
enter
fmuls
cltd
fidivs
rclb
pusha
jl
pushf
sub
das
cmp
cmp
sub
or
mov
cmp
push
gs
dec
pop
data16
je
icebp
or
mov
pop
adc
jg
rolb
and
test
aam
mov
sub
push
ds
icebp
xor
popf
dec
cmp
xchg
xor
xorl
mov
add
push
out
shll
sub
cmp
dec
repz
inc
lds
sbb
dec
pop
loope
xchg
xlat
xchg
js
dec
sub
mov
lock
or
test
jmp
and
pop
movsl
or
repz
std
mov
mov
lods
push
das
cmp
add
out
dec
popf
push
fcoml
mov
dec
ja
and
dec
inc
or
pop
xchg
lock
es
pusha
popf
insl
mov
or
imul
mov
mov
loop
roll
roll
mov
jnp
sub
aaa
inc
mov
sti
fs
subb
and
out
xor
inc
xchg
cmpsb
inc
test
dec
cmc
subb
adc
ret
mov
cmc
dec
mov
dec
and
sbb
cmp
pusha
fwait
inc
dec
insl
mov
xor
lcall
cwtl
add
popa
ja
loopne
pop
mov
aam
sbb
pop
xlat
jno
sub
scas
jge
mov
fidivrs
movsb
aas
in
pop
xor
inc
adc
xchg
call
mov
call
lods
sbb
popa
or
outsl
mov
push
stos
ds
jns
stc
inc
cs
fmulp
loope
add
fidivrl
jnp
das
mov
mov
fsubr
sahf
mov
inc
inc
xchg
xchg
aaa
cmp
push
pop
test
or
ja,pt
push
mov
pop
in
lock
jg
icebp
xor
mov
mov
fimuls
mov
jp
push
inc
fbstp
dec
cwtl
js
dec
sub
fistpll
and
xor
lds
cmc
das
and
fdivrs
push
jns
clc
fisttpll
and
icebp
add
inc
in
mov
or
call
xor
jmp
rcrb
xor
rcr
daa
repz
add
dec
push
gs
fdivrs
xchg
jnp
cmp
popa
jg
jmp
std
cld
dec
insb
das
test
or
mov
loopne
daa
pop
dec
loop
mov
cld
or
jmp
fidivrl
cmp
sbb
lea
and
sbb
cmp
cwtl
xor
xchg
xlat
inc
movsb
outsb
sub
cmp
aaa
add
test
cmpsl
rorl
mov
int3
and
test
je
in
popa
dec
adc
lods
jno
add
add
fwait
out
shll
dec
dec
movsl
jae
or
adc
orb
add
mov
outsb
inc
xchg
jmp
sbb
leave
jne
stos
fmuls
jl
movsl
mov
int
je
mov
jbe
mov
xchg
jno
push
inc
sbb
leave
push
xor
iret
out
dec
daa
push
mov
loopne
jg
ja
mov
outsb
cwtl
test
inc
into
stos
stos
hlt
or
pop
repz
rep
dec
insb
jae
jbe
inc
pop
loop
inc
bound
movsb
inc
jns
adc
es
mov
in
cmp
orb
loope
mov
pop
pop
jecxz
jecxz
das
testb
rcrb
repnz
inc
mov
cmp
shrb
repnz
stc
adc
scas
shrl
clc
stos
lea
fsts
ds
ja
xor
int3
add
dec
mov
sbb
push
cmp
mov
xor
lahf
mov
ja
xor
icebp
shlb
mov
xchg
mov
cmp
pop
jb
mov
jns
movsb
bound
mov
xchg
sbb
adc
addr16
shr
arpl
jnp
leave
push
xchg
cmovae
insl
mov
sbb
jne
sarl
mov
rorl
jp
mov
lret
cmp
test
fadds
xor
loopne
out
repnz
adc
push
dec
shr
movsl
insl
call
pop
bound
jb
lea
lds
mov
mov
rolb
aas
lahf
sub
cmpsl
dec
mov
out
test
into
das
cmp
std
mov
imul
add
fildl
or
aam
test
fstl
xchg
dec
outsl
jg
inc
inc
bound
inc
sti
pop
mov
mov
mov
sti
movsb
cmp
mov
xlat
call
sbb
test
jg
cmp
popf
fwait
or
arpl
sbb
or
in
fcmovbe
pop
lods
popa
mov
mov
sub
fcoms
mov
add
sub
mov
lahf
mov
cmpsb
in
mov
mov
lods
sbb
jmp
cmp
stc
rorl
cli
stos
mov
push
dec
mov
mov
ror
shlb
lcall
pop
fistpll
aad
inc
inc
hlt
inc
ret
inc
lcall
push
pop
aad
out
movl
iret
aaa
int
mov
push
and
lock
fidivl
pop
in
ret
andb
mov
jno
cmp
push
stos
dec
pusha
das
pop
inc
movb
sub
pop
loopne
cli
fucomip
fsubrs
push
cmpl
aad
push
sbb
mov
or
fcmovne
faddp
inc
xor
sub
fiaddl
and
mov
rcrl
push
enter
and
lcall
push
gs
cltd
repnz
mov
dec
addr16
mov
fists
imul
hlt
sub
addb
pop
test
scas
mov
push
addl
fwait
rcrl
sbb
and
enter
subl
sarl
jno
fildl
subb
xor
les
and
loopne
aad
loope
pop
adc
ja
cmpsb
outsb
or
divb
push
push
mov
dec
xor
mov
scas
mov
fwait
dec
sbb
mov
pop
popa
test
lods
xor
add
push
dec
iret
lock
dec
orl
or
jecxz
ljmp
mov
pop
shlb
stos
lds
or
pop
imul
mov
pop
inc
fsubs
push
add
dec
adc
and
jmp
js
insb
icebp
inc
xchg
lahf
fs
jle
xor
mov
and
bnd
jbe
jns
jo
cmp
test
inc
dec
stos
decb
int3
cltd
xor
jnp
sbb
inc
lock
dec
sbb
and
das
xchg
shlb
aad
cld
mov
mov
loopne
mov
jno
jne
sbb
adc
push
add
test
sbb
stos
xor
jecxz
dec
pop
enter
add
aas
jnp
and
int3
imul
in
popa
jb
push
js
stc
dec
add
adc
sbb
xchg
stos
push
fsubr
loope
dec
jle
cs
xor
mov
mov
in
movsb
pop
fsubr
jmp
xor
rol
push
pusha
pop
js
repnz
inc
sub
jbe
mov
push
jnp
nop
out
xchg
mov
popa
pop
pushf
daa
fnstenv
loopne
adc
out
out
xchg
mov
fidivrl
inc
in
jo
adc
and
dec
es
fwait
mov
cli
jg
into
data16
jl
mov
inc
call
arpl
push
mov
rcr
std
pop
fsts
cld
push
push
sbb
lret
mov
je
pop
xor
add
inc
test
test
and
aas
sub
enter
xchg
add
mov
or
mov
cmp
aad
jg
add
scas
out
mov
add
sbb
movsb
arpl
mov
mov
push
fsts
lods
mov
daa
jo
or
jae
dec
pop
cld
and
jecxz
jns
fld
jb
and
sbb
cmp
insl
mov
leave
incl
mov
inc
inc
aaa
cmc
rclb
arpl
cmp
stos
add
ja
push
sbb
loope
inc
inc
outsl
dec
push
mov
aam
mov
mov
fwait
adc
xchg
jecxz
push
pop
dec
push
xor
xchg
fnsave
call
mov
xchg
add
int3
aas
inc
aam
lods
mov
inc
push
xchg
std
outsl
or
into
hlt
add
pop
ss
xchg
mov
test
mov
mov
xchg
iret
add
mov
shll
test
xchg
xchg
loope
jb
xlat
sbb
test
ja
lea
push
pop
jl
lcall
push
xchg
mov
jo
test
mov
fdivrs
dec
repz
xchg
and
insl
les
rorb
ljmp
in
outsb
push
dec
sub
icebp
sti
lahf
and
repz
pop
cli
and
pop
xor
fs
out
mov
test
push
cltd
popa
dec
sbb
arpl
and
lahf
push
cmp
or
dec
xchg
repnz
xchg
pop
pop
jae
imul
mov
push
mov
lds
sti
jecxz
ja
and
pushf
mov
loopne
sar
adc
cld
shlb
leave
and
iret
or
cltd
xchg
add
and
jno
xchg
test
insb
cltd
inc
xchg
sbb
mov
loope
or
jp
dec
cmp
sub
jmp
or
and
xchg
xchg
cmp
mov
int3
pop
cs
inc
jbe
inc
sahf
xchg
xor
dec
add
in
mov
mov
xchg
mov
adc
lods
sbb
subb
mov
rcl
push
insl
loop
push
mov
xlat
shlb
aad
sbb
jl
push
and
inc
fstps
xchg
sahf
mov
sbb
cmp
xor
jg
mov
or
decb
mov
aad
mov
int3
cltd
xlat
ret
xlat
nop
pop
xchg
int3
jns
or
and
mov
or
int3
dec
fidivrs
imul
repnz
rolb
cmp
adc
enter
test
mov
mov
dec
inc
dec
loop
push
and
popf
test
jb
ds
ljmp
js
and
js
jb
popa
hlt
in
imul
outsb
sub
rcr
out
in
fsubrl
test
mov
jl
mov
mov
loopne
rcrb
sub
sbb
enter
test
mov
add
js
dec
rcrb
sub
sbb
enter
test
mov
add
js
dec
push
pop
shrb
cmp
or
clc
pusha
enter
test
mov
add
jp
dec
rcrb
sub
cwtl
adcb
pop
lret
fdivs
fistpll
jmp
in
aad
sub
mov
push
gs
jno
adc
add
shl
rcl
xchg
movsl
xchg
xchg
mov
aad
pop
gs
xor
inc
popa
xor
xor
fcom
jmp
movsl
cltd
xchg
test
bound
and
pop
dec
jne
inc
push
test
xchg
xchg
pop
test
push
mov
hlt
mov
pop
jne
bound
jmp
mov
shrl
mov
loope
jb
dec
lock
add
enter
ficompl
sar
jo
in
fcmovb
movsb
mov
push
xor
jne
xor
sahf
mov
xor
sub
jne
test
mov
test
push
sbb
xchg
rclb
xchg
mov
adc
adc
nop
cli
movsb
or
or
push
sbb
insl
mov
icebp
mov
mov
and
and
daa
stos
in
aad
xchg
movsl
adcl
push
and
and
xchg
mov
fucom
les
jne
add
je
add
jno
stos
mov
lea
xchg
daa
and
and
popa
push
add
sbb
ror
shll
movsl
adcl
jno
popa
xor
xor
rcl
xchg
movsl
adcl
jno
popa
xor
xor
rcrb
xchg
jecxz
sbb
mov
imul
ret
mov
add
pushf
cmpsb
cmp
icebp
mov
mov
out
nop
int
push
mov
jbe
lods
cwtl
jmp
cmp
arpl
jne
sbbb
sbb
inc
cmp
xchg
sub
push
in
ret
pop
rol
das
mov
add
push
pop
mov
ss
pop
leave
cwtl
and
pusha
lret
mov
add
jmp
stc
hlt
inc
int3
pop
mov
cmp
ret
jg
out
add
cmp
adc
mov
lods
pushf
js
xor
or
lcall
sub
add
mov
sbbb
out
push
add
cmp
lea
test
mov
or
cmpl
stos
jmp
mov
sti
sahf
inc
pop
jb
shlb
sbb
jae
rol
pop
push
push
sub
mov
cvtps2pi
sbb
lds
in
ret
stc
inc
or
push
and
fstps
fdivrl
insb
aad
adc
xchg
or
inc
loopne
int
into
sbb
arpl
jbe
js
aad
into
pop
stos
imul
dec
pop
imulb
and
fists
stos
sarb
dec
outsb
mov
mov
xchg
fistpl
cmp
stos
arpl
push
imul
jne
xor
mov
lds
push
int3
stos
fs
and
push
and
out
dec
insl
xchg
inc
xor
pushf
pop
ljmp
xor
aam
movsb
pop
loope
cmpsb
cli
mov
sub
stos
jmp
cmpsb
push
jnp
addr16
mov
loopne
mov
std
push
sbb
mov
pushf
and
movsl
pusha
jne
lret
stc
cmp
fnstsw
xor
pop
mov
inc
and
add
scas
divl
dec
mov
popa
popl
movsl
lcall
mov
je
sub
jecxz
call
cmp
lds
lods
pop
pop
ret
sbbb
cltd
inc
orl
add
clc
cmpsb
mov
lret
call
add
leave
adc
mov
bound
jmp
lcall
stos
movsl
mov
insl
mov
les
add
pop
sbb
mov
jl
sbb
sbbl
mov
es
mov
repnz
cwtl
movsb
and
pop
repz
out
inc
adc
add
pushf
mov
in
movsl
and
xchg
push
and
push
jp
mov
add
push
mov
cmp
faddl
cmp
mov
adc
int3
cs
push
mov
clc
sbb
mov
cmp
imul
ret
out
roll
shr
popa
adc
in
xchg
dec
icebp
push
lea
std
bound
push
add
jge
cmpsl
repz
cmp
sbb
pusha
call
pop
insl
lea
shrl
cmp
outsl
loopne
and
jmp
in
stos
popa
loope
adc
addl
adcb
bnd
push
lds
jno
dec
movsb
out
jbe
int
idivb
ret
mov
in
push
stos
loopne
mov
jl
dec
jecxz
stos
sarb
dec
xor
mov
jge
scas
cwtl
cmpsb
shl
inc
sub
les
lods
xchg
dec
je
mov
adc
pop
fldt
push
inc
daa
push
pop
es
xor
xor
mov
push
iret
outsb
loop
pop
and
inc
pushf
out
add
movsl
push
cld
jbe
lret
cmpsl
or
out
and
sbb
in
lods
notb
xchg
fsubrl
sahf
pop
aam
lods
loope
dec
jle
dec
mov
xor
int3
aaa
iret
cmp
insb
mov
and
and
lret
push
xlat
lods
inc
jp
sbbl
std
cmp
or
xchg
outsl
jle
aas
icebp
mov
sub
mov
push
mov
dec
bound
push
mov
clc
mov
mov
mov
icebp
cmp
push
sbb
and
int
add
sub
xor
jbe
sub
and
ss
sub
mov
das
push
and
add
popf
cmp
xchg
into
rcll
call
push
cli
add
add
jge
setnp
cmp
mov
sbbb
ss
mov
hlt
ss
adcl
mov
iret
int
xor
cmp
ljmp
adc
push
data16
cmc
cltd
lds
out
xchg
lods
add
mov
mov
jns
test
cmp
inc
add
mov
cmp
xor
addl
in
lods
jb
jp
jp
ret
out
clc
out
add
adc
daa
mov
lret
fstpt
lea
jbe
jb
imul
sub
push
stc
and
bound
movsl
repnz
lret
pushf
mov
lea
aad
push
lds
jno
fwait
xchg
sbb
dec
mov
jo
pop
or
cltd
insl
loope
cmpsl
int
jp
dec
out
jecxz
dec
adc
lock
jle
fisubl
sub
sub
jecxz
repnz
dec
push
sub
xchg
xlat
scas
add
xchg
sbb
das
into
jge
or
lret
jl
in
sub
sub
insb
lods
sti
mov
cmpsb
cmp
jmp
lock
adc
push
fiaddl
sbb
es
adc
aad
and
arpl
sbb
pop
ret
mov
jbe
cmp
out
jg
mov
sbb
push
addr16
cwtl
pop
lds
decl
sbb
movsb
test
push
xchg
pop
or
in
gs
xor
add
sub
pushf
push
xchg
xorb
or
pop
sub
int
bound
in
jl
cmp
out
jle
adc
outsl
mov
or
or
mov
hlt
fistpll
jo
fxch
cmp
iret
jbe
jp
mov
adc
clc
mov
shrb
jns
push
popf
fidivrs
pusha
dec
push
xor
lods
cmpsb
jno
out
cmc
iret
test
shl
push
aam
pop
pop
inc
incl
ss
popa
sub
movsb
mov
xor
enter
fcompl
std
shll
mov
sbb
popf
ss
out
add
sbb
jbe
notl
or
jne
jmp
dec
fdivrl
imul
arpl
enter
sub
cmp
sbb
lahf
and
pop
test
or
inc
shl
xor
mov
cld
ss
and
or
jl
dec
shl
decb
aad
adc
jnp
push
mov
adc
ffreep
jmp
push
jnp
and
dec
scas
and
out
fsubl
cmc
pop
enter
and
sbb
or
loop
jnp
testb
in
and
mov
mov
lds
push
lahf
and
adc
into
sbb
jmp
outsb
pop
mov
inc
je
xor
scas
rol
outsb
xor
add
fwait
mov
cltd
or
or
jae
inc
and
sub
out
hlt
push
adc
pop
jne
cli
daa
out
stos
jne
ja
mov
dec
aad
mov
shll
pop
jnp
movsl
xor
in
sahf
cltd
ss
mov
addl
jmp
shlb
mov
adc
or
mov
sub
jbe
lea
cmp
lds
mov
or
inc
inc
push
loope
mov
push
ret
inc
stc
xchg
jae
fbld
mov
les
mov
ret
subl
cmpsb
add
pop
xchg
add
pop
jno
fs
aad
popa
jns
loope
xor
outsb
pop
sbb
or
out
lret
mov
adc
mov
xchg
nop
lods
cltd
les
inc
imul
mov
adc
int3
pop
jle
xor
in
pop
lea
dec
ret
or
sbb
gs
stos
push
adc
push
out
pop
xlat
fmull
shr
scas
sbb
sub
outsb
cli
lcall
gs
sarl
nop
mov
enter
adc
inc
mov
adc
cmpb
pop
jns
xor
add
dec
aas
add
adc
pop
sbb
xchg
pop
sahf
jbe
inc
push
push
fcoms
lahf
popa
xor
int3
lods
fidivrl
mov
cltd
test
push
movsl
dec
shrl
mov
cs
push
push
add
daa
mov
fwait
jg
or
add
scas
scas
pop
mov
shrl
test
insb
gs
sbb
or
ret
mov
lret
mov
add
divb
and
sub
mov
and
out
xchg
ja
js
and
push
xor
std
mov
cmpsl
out
sub
stos
fmuls
xlat
shrb
rcrb
loop
icebp
mov
ret
add
shlb
shll
out
push
je
sbb
loop
add
jae
mov
xor
in
sbb
mov
mov
pop
dec
orl
add
jno
inc
sarl
loopw
insb
cmpsb
jnp
xchg
cmc
push
sub
mov
movsl
ficoms
xchg
fucom
scas
sub
pop
push
loope
sbb
push
ds
std
push
push
adc
jne
cld
shr
into
dec
aam
add
bound
test
sub
jnp
stc
sbb
and
dec
push
xchg
inc
mov
mov
jmp
and
sbb
xchg
das
nop
fidivs
and
push
cmp
add
dec
fldenv
divb
cmp
fisttpll
pop
jp
cmp
mov
test
decl
sub
loope
add
add
rclb
mov
lods
mov
sub
arpl
ret
lock
popa
sbb
xor
stc
rolb
dec
xor
push
pop
out
sub
dec
dec
fs
dec
jo
imul
out
cmpsl
test
pushf
cmp
iret
cltd
cld
jge
cltd
xor
mov
in
mov
cmpsl
into
inc
loop
out
fcompl
mull
cmp
enter
mov
mov
xor
cmpl
pop
adc
pop
andl
lret
push
jae
and
addl
outsb
sub
das
shll
or
test
pop
popf
addb
call
pop
addb
test
pop
push
divb
mov
js
push
sbb
mov
outsl
mov
or
add
hlt
push
pop
cmp
mov
repnz
ret
dec
mov
ss
push
cmpsl
into
pop
aad
sub
sbb
adc
mov
inc
add
scas
mov
in
arpl
ret
adc
push
xlat
cwtl
mov
int3
jl
stos
xchg
adc
in
push
cmp
je
pop
rcr
lods
sbb
mov
inc
mov
jae
sub
test
or
jle
mov
leave
clc
xor
dec
in
mov
sub
adc
aas
sbb
loop
xchg
subl
sbb
cmp
mov
sbb
cmpsl
sub
push
roll
call
jno
cmp
rcrl
or
jns
and
jp
shll
inc
shll
mov
insb
icebp
mov
pop
cltd
and
hlt
pop
inc
dec
pushf
push
fbstp
adc
push
push
scas
rorb
inc
imul
jg
xchg
dec
xchg
lret
dec
inc
pop
cmpsl
mov
cmp
mov
pop
jmp
ss
add
ljmp
popf
add
add
mov
dec
pop
mov
insb
aad
cwtl
adc
lret
xorl
add
sub
les
sub
sarl
ljmp
push
lret
pop
addr16
and
jmp
jmp
repz
xchg
sub
jmp
mov
lods
add
jo
pop
fiadds
push
cmp
jns
insl
cmp
loope
scas
cmc
stos
dec
xchg
pusha
insl
imul
mov
movsl
ret
in
lret
xorl
test
lods
enter
sub
mov
in
inc
mov
add
lods
cmpsl
push
xor
out
repz
out
shll
fnstenv
out
fcompl
faddp
dec
loop
cmp
jle
cmp
loopne
mov
dec
xor
call
xor
xor
pop
repnz
repz
jae
dec
in
daa
cmc
popf
xchg
jnp
in
push
add
stos
dec
repz
mov
loope
and
cs
rol
out
ret
rolb
jns
cld
aad
or
adc
adcl
mov
js
daa
repnz
jp
xor
decl
cld
xor
jo
inc
lret
xchg
push
push
inc
outsl
adc
iret
ss
or
add
pop
push
xchg
mov
into
and
sub
insl
adc
mov
iret
push
and
mov
fsubrs
ja
popf
push
test
fadds
nop
sub
lret
mov
inc
pop
push
xor
push
aam
inc
adc
aam
outsl
cli
mov
insl
loopne
mov
cmp
xor
pushf
mov
outsl
rol
push
jno
mov
aam
jns
push
push
or
inc
mov
rcrl
mov
jge
popf
adc
shll
xchg
cmpsb
add
cmpsb
push
lret
loope
fsts
pop
in
fnstcw
and
mov
or
mov
jmp
pushf
jns
jo
xor
xor
xlat
cmp
pusha
movsb
dec
xchg
jmp
lea
jp
jecxz
ficoml
int3
mov
add
and
rcrl
imul
xchg
cli
xor
push
jecxz
jp
xchg
pop
repz
loope
mov
int3
mov
enter
mov
push
mov
push
and
add
add
add
xchg
pop
adc
out
mov
lds
pop
rolb
mov
sarb
cmp
imul
jp
ljmp
or
outsl
add
mov
ljmp
add
jge
ja
rol
pop
jl
hlt
xchg
inc
mov
ret
mov
ja
clc
cs
push
lret
sbbb
inc
lods
cltd
rcrl
adc
test
leave
movl
sahf
adc
out
das
mov
pop
hlt
adcb
out
jg
das
push
inc
loope
fldt
sub
xchg
insb
nop
mov
scas
push
jae
sub
and
pop
popa
cmp
jno
je
int
xor
imul
push
mov
cmp
mov
rcr
push
mov
mov
je
andl
test
mov
add
movsb
xchg
mov
xchg
fists
and
test
icebp
lahf
je
adc
bound
fisttps
mov
add
sub
mov
cmc
sbb
adc
loopne
jbe
test
popa
adc
in
fstps
outsb
xchg
inc
adc
or
in
jmp
mov
pop
inc
dec
or
das
jl
cwtl
loope,pt
loope
mov
loope
imul
shlb
or
aas
fmul
int3
dec
adc
mov
xor
xchg
sub
dec
push
adc
es
inc
cs
xor
jns
subl
loopne
sbb
rcr
movsl
pop
mov
cmp
scas
jae
std
nop
jne
cmp
enter
sbb
mov
mov
xchg
jp
mov
iret
popf
int3
lock
pop
lock
xor
stos
imul
repnz
mov
pop
jb
fwait
jns
lcall
mov
fcoms
push
mov
repz
lods
nop
pusha
jbe
cmp
sub
fstpt
xor
lods
int3
notb
out
push
rorb
xchg
stos
push
xor
adc
enter
sub
call
insb
push
jns
xor
sti
shlb
jmp
fistl
sub
pop
insb
in
or
dec
cld
adc
xchg
hlt
xchg
dec
popa
dec
xchg
cmp
scas
jp
stos
imul
fsubrl
mov
pop
pop
pushf
fldcw
jns
xchg
dec
xor
dec
mov
and
adc
or
xor
cmp
mov
xchg
andb
sbb
and
push
ret
xchg
loope
add
mov
addr16
mov
nop
into
adc
repz
sarl
pop
shlb
cmc
aas
xchg
inc
repz
adcl
std
fistps
mov
xchg
lea
mov
push
mov
jecxz
mov
pop
cmc
shlb
addr16
push
jg
push
pop
stc
mov
cmp
mov
cmp
ja
subl
test
pop
cli
and
jmp
jmp
pop
pop
int
call
lret
adcb
andb
decl
in
addr16
es
lods
out
inc
push
popf
inc
loop
cmpsb
xchg
sbb
mov
add
popa
lock
test
mov
fidivrs
mov
and
repz
xchg
movsl
aaa
dec
or
sarb
or
imul
adcb
jp
lcall
dec
jl
and
mov
cltd
stos
in
mov
or
in
aam
roll
sbb
lcall
push
pop
xchg
js
jns
call
popa
inc
sbb
dec
push
push
pop
and
mov
fs
add
pop
or
sub
mov
and
jne
xchg
sbb
push
scas
dec
shlb
out
xor
cltd
mov
mov
add
aam
dec
rclb
aaa
and
imul
or
push
inc
repz
pop
sub
lret
mov
cmc
imul
sbb
push
out
mov
jecxz
fbstp
xor
data16
das
xchg
push
push
dec
mov
xchg
loopne
push
aad
les
cwtl
cli
rorb
jo
adc
sbb
movsl
repz
and
jl
outsb
out
xor
mov
mov
mov
je
fwait
jbe
dec
push
dec
mov
flds
fldt
jecxz
mov
fstps
cmp
mov
jp
arpl
insl
enter
dec
insl
lret
xchg
push
incl
adc
ljmp
xchg
push
cwtl
nop
jns
sbb
outsb
rorb
addr16
int3
lcall
aad
mov
pop
fsubl
mov
adcl
dec
push
adc
in
inc
lds
inc
pop
or
popf
pop
lods
sub
or
adc
repz
jae
mov
nop
adc
bound
mov
pop
inc
loope
xchg
xchg
outsb
mov
shll
pop
hlt
out
stc
mov
daa
and
js
cld
or
pop
leave
loope
jbe
cli
push
adc
hlt
mov
jae
push
rol
out
push
mov
pop
push
mov
dec
out
pop
and
negb
out
inc
fs
sub
inc
int
xchg
adc
mov
lcall
pop
movsl
pushf
inc
jmp
clc
popf
sbbl
and
stos
mov
sub
mov
pop
cmp
jo
in
mov
dec
and
shlb
push
pop
pop
test
xchg
popf
jge
pushf
fsqrt
cs
subb
dec
pmulhw
test
pop
xchg
xor
xor
jp
bound
cwtl
xor
xor
jge
push
adc
loopne
pop
xchg
sahf
add
mov
mov
cmc
mov
mov
pop
mov
mov
pushf
mov
mov
and
xchg
test
jne
hlt
dec
shrb
lea
test
aas
push
xor
jp
mov
cltd
xor
insl
add
push
jmp
sbb
out
and
loopne
ljmp
push
and
nop
enter
std
jecxz
inc
into
jge
sbb
sbbb
xor
pop
dec
arpl
add
pop
or
jne
sbb
lods
pop
loope
aas
sub
inc
ret
push
leave
sub
cmc
stc
adc
inc
test
mov
ja
adc
adc
lock
jno
add
mov
ss
sub
fs
shrb
shl
and
dec
sbb
insl
test
mov
cmp
in
mov
arpl
mov
scas
mov
push
cmp
fisttpl
and
inc
cltd
add
rolb
insb
fsubrl
insl
and
clc
ss
aad
in
inc
pop
xor
ljmp
stc
mov
xchg
movsl
adcl
jno
popa
xor
xor
rcl
xchg
movsl
adcl
jno
popa
xor
xor
rcl
xchg
movsl
adcl
jno
gs
xor
in
aam
xchg
movsl
adcl
jno
push
inc
cltd
lods
jle
dec
cli
pop
call
fcoms
push
in
ret
std
xchg
push
inc
pop
push
sub
cmp
call
fcom
test
mov
jecxz
addr16
cmp
pop
push
sub
aaa
or
pop
call
outsl
fcom
test
mov
adc
sbb
inc
jo
pop
inc
jae
pop
mov
mov
sub
mov
dec
stos
mov
pop
mov
inc
pop
dec
arpl
cmp
cmpsb
cmp
add
aad
inc
push
daa
lds
fldl
es
lcall
push
stc
div
test
sbb
ljmp
mov
mov
insl
fadds
lods
daa
stc
out
xlat
pop
outsl
test
test
jbe
lock
lds
stos
es
enter
inc
pop
repnz
mov
xorl
js
test
adc
movsl
je
ss
daa
rorb
cmp
push
loopne
xor
adc
adc
mov
sbb
enter
xchg
mov
clc
pop
enter
test
mov
pop
push
push
pop
pop
sub
cmp
or
sbb
mov
imull
shl
fsubr
out
fptan
sub
jl
sub
xor
dec
dec
push
inc
dec
inc
dec
jbe
mov
mov
test
add
or
sbb
jnp
data16
pushf
mov
xchg
fnstenv
xchg
ja
inc
pop
push
sub
cmp
or
sbb
call
fcom
test
mov
xchg
push
inc
pop
push
sub
cmp
or
sbb
call
fs
sti
jb
adc
xor
xchg
add
or
mov
xchg
addl
dec
or
dec
add
push
pop
mov
cld
sti
push
dec
cmpsb
xlat
mov
push
cmp
pop
cld
and
out
mov
add
mov
mov
push
sub
mov
mov
stos
lcall
lahf
fsubl
inc
stos
cmp
js
fsubs
aaa
and
cmp
push
push
push
jae
push
aaa
je
xor
dec
sbb
pop
add
add
inc
xor
push
fsts
cwtl
cmp
sbb
xchg
mov
add
xchg
sub
pop
jmp
int3
test
push
sub
push
xchg
ljmp
jnp
das
dec
or
push
lret
and
mov
mov
xchg
aaa
xchg
inc
jb
xor
pop
sub
inc
stc
adc
cmpsb
mov
lods
jmp
xchg
mov
push
mov
dec
mov
test
push
outsb
clc
add
and
cmpsl
cmpsb
nop
ds
rolb
test
mov
test
cwtl
loopne
sti
push
test
adcl
xlat
push
decb
dec
stc
pop
rolb
xor
mov
aaa
and
cmpsl
loop
sub
aam
fwait
icebp
cmc
adc
ljmp
mov
mov
adc
loopne
movsl
pop
and
mov
mov
cmp
inc
pop
imull
jmp
lock
mov
sahf
cmpsl
nop
jns
pop
push
loopne
cmp
ljmp
out
sti
or
test
mov
lods
insb
aam
sti
adc
push
ja
cmpl
or
and
inc
ja
jb
add
cs
jnp
sahf
sahf
dec
cmp
add
jne
inc
cltd
daa
dec
cwtl
repz
xor
pusha
jle
pop
mov
sti
dec
inc
imul
cmp
leave
fists
xchg
jnp
ljmp
gs
push
stos
loop
dec
push
xchg
jge
mov
repnz
push
dec
cld
sbb
pop
lds
xor
xchg
popa
xor
sub
in
gs
mov
cmp
int
push
cmp
cmp
sbbb
mov
dec
mov
ds
and
mov
jmp
scas
mov
in
cmp
push
add
or
je
scas
xor
mov
mov
push
jl
insl
mov
sahf
out
aad
sbbl
sti
xchg
hlt
inc
inc
hlt
pushf
and
cmp
jge
sub
sahf
repz
int
clc
or
pop
aas
pop
jmp
and
dec
repnz
shl
mov
dec
mov
dec
out
out
out
rcll
fdiv
add
push
fistpll
dec
cltd
arpl
cmp
leave
loope
cmpsl
shlb
xor
stc
dec
repnz
lods
aam
inc
ja
mov
mov
jg
xchg
pusha
xor
add
push
sbb
sti
test
arpl
in
rcll
pop
and
cltd
fstpt
pop
sbb
push
loop
mov
mov
jne
lods
sub
sti
mov
loop
sbb
daa
mov
cwtl
aad
dec
ss
inc
dec
pop
jnp
mov
and
in
dec
add
sub
pop
lds
scas
ds
cltd
jg
or
pop
testl
fimuls
and
jg
pop
inc
or
or
cmp
leave
js
nop
mov
jge
xor
dec
std
add
cmc
jno
push
push
mov
and
call
push
ss
subl
std
ret
cld
pop
int
xor
pop
js
cmc
loope
sbb
jno
pop
clc
loop
pusha
pop
push
jl
jne
dec
cmp
cld
insb
outsb
cmp
out
mov
enter
rclb
aam
lret
push
cmp
jns
jne
test
push
pop
mul
pop
out
xchg
leave
push
in
into
imul
adc
cmp
cmp
int3
add
lods
mov
or
loope
fdivs
xor
add
in
and
xchg
mov
jae
add
and
mov
push
sub
cmp
xchg
shlb
repz
stc
jg
dec
ja
sbb
icebp
lcall
ret
test
mov
stc
aad
push
pop
test
test
adc
sbb
lcall
push
adc
mov
outsl
iret
insb
cmpsl
mov
mov
je
inc
pop
mov
mov
mov
xchg
mov
loope
stos
ret
or
mov
dec
or
loop
mov
xchg
xchg
cmp
test
and
inc
mov
jp
sbb
nop
enter
dec
push
dec
outsb
pop
pop
and
sub
jmp
mov
add
mov
pop
fmull
dec
jmp
mov
insb
enter
jae
test
ja
popa
daa
shlb
rcrl
xor
dec
jecxz
divl
and
push
inc
cmp
gs
jg
outsl
cmpsl
mov
sub
js
pop
icebp
adc
int3
xchg
ljmp
xchg
cmp
test
sar
mov
cmpb
daa
jg
and
xchg
sub
dec
jo
dec
lret
push
aaa
adc
push
cld
push
sahf
pop
mov
and
iret
mov
test
dec
int3
or
mov
jno
orl
dec
movsl
mov
imul
bnd
inc
cwtl
jbe
out
fwait
add
adc
pop
mov
xor
adc
add
pop
xor
xlat
jge
imul
iret
sbb
hlt
cmp
dec
mov
sbb
iret
xchg
pop
fiaddl
loop
lahf
add
ja
ja
ret
add
push
int
dec
sbb
cltd
sbb
sbb
add
pop
es
stos
pop
inc
jb
xchg
in
mov
add
xchg
mov
and
or
mov
rcr
mov
and
lea
inc
cmpsl
and
mov
pop
cmp
fwait
cli
adc
and
mov
and
loope
mov
aam
pop
call
movsb
pushf
push
in
inc
orl
add
mov
clc
dec
sbb
push
cmpsl
mov
cmc
xor
out
jl
sub
rcl
test
out
repnz
mov
pusha
sub
stos
inc
adc
mov
push
div
out
add
loopne
std
xor
sbb
mov
cmc
pop
mov
sub
scas
lea
repnz
push
ret
imul
xor
mov
stc
mov
push
out
movsb
cmp
lcall
retw
sub
addl
out
adc
popf
sbb
stos
jno
ss
add
sti
or
pushf
test
aam
inc
dec
pop
fcomps
outsb
xor
xchg
or
sub
push
nop
sub
mov
and
loop
in
ficomps
xchg
in
cmp
fdivr
inc
push
mov
hlt
sub
out
std
xchg
add
push
add
sub
andl
cmp
cwtl
adc
outsb
push
rolb
and
je
xchg
cltd
pop
push
mov
dec
dec
int3
push
mov
pop
and
stc
sub
jns
lret
mov
lds
mov
jns
rclb
dec
sbb
loope
xlat
dec
insl
cmp
ss
lds
incl
add
dec
push
lods
ret
mov
cmpsb
and
sub
std
push
ss
add
ja
inc
andb
lods
jo
add
andl
inc
cmpsl
sbb
idivb
xchg
and
shl
dec
test
fiaddl
xchg
xchg
sbb
js
pop
adc
mov
loope
or
fs
sbb
xor
ds
xchg
cltd
cli
lods
aas
aam
cmpsb
mov
out
repnz
xor
lret
fwait
xchg
stos
xor
push
loop
pop
sbb
lea
cwtl
inc
pop
gs
icebp
or
or
in
fnstenv
repnz
cmp
jbe
stc
pop
out
cli
bound
insl
in
dec
sub
adcl
mov
cmpsb
int3
xor
ljmp
pop
or
sbb
lods
mov
bound
outsb
mov
fwait
movsl
ljmp
inc
mov
test
mov
push
icebp
mov
cwtl
adc
cmp
and
jb
shlb
inc
mov
mov
jp
xor
mov
sbb
cmp
dec
cmpsl
cltd
sub
inc
add
inc
loopne
rcrb
test
out
sti
sub
cmp
push
mov
mov
sbb
nop
leave
or
lcall
scas
les
mov
dec
into
jno
les
js
push
and
mov
xlat
shlb
jp
insl
jno
push
in
mov
fsubrl
pop
fs
pop
inc
and
xor
out
jmp
or
and
fstpt
cmp
add
lcall
hlt
repnz
inc
mov
shl
mov
mov
pop
push
int
jo
incl
lods
adc
mov
sbb
xor
imul
jg
enter
cmp
test
inc
push
jns
fs
mov
or
stc
test
out
nop
xchg
inc
fidivs
test
sbb
mov
add
ja
jg
lods
ja
in
mov
xor
dec
aas
divb
js
inc
push
xchg
out
push
cmp
lds
call
out
arpl
dec
add
aam
mov
cmp
mov
adc
sbb
pop
xchg
pop
cmp
enter
gs
jl
xor
adc
mov
mov
mov
add
adc
or
cmpb
rclb
jecxz
icebp
cld
fldenv
mov
push
call
ss
sarb
outsl
cwtl
xor
dec
popl
cmp
lock
aad
scas
xchg
add
popa
adc
into
adc
push
mov
test
iret
sub
dec
jo
or
out
test
fwait
and
or
inc
dec
fwait
xchg
in
cmc
das
pusha
xchg
dec
adc
add
aam
add
aad
testl
stos
aas
pop
sbb
int
or
push
je
pop
outsl
sbb
push
out
daa
xor
dec
adc
loop
mov
lret
movsb
cmp
insl
mov
int
or
and
cmp
jmp
dec
decl
or
xor
lahf
vmwrite
cmpsl
xor
mov
shrb
sub
xchg
ret
call
jl
lcall
xchg
mov
aaa
shr
inc
insb
nop
sbb
push
sbb
hlt
pop
and
pop
rorb
jae
cltd
and
jbe
mov
popf
fiadds
or
and
and
icebp
xlat
sub
and
cld
and
test
sbbb
xchg
or
addr16
sbb
dec
fs
iret
jnp
test
push
add
inc
inc
adc
jmp
adc
jecxz
xor
aas
pop
fcoms
pop
call
loopne
xor
pop
adc
scas
popa
popf
imul
mov
mul
mov
data16
ret
les
cmpsl
test
jns
pop
test
or
push
adc
insl
jmp
hlt
scas
jb
into
cmp
xor
dec
repnz
fwait
mov
mov
cmp
out
cltd
sub
icebp
mov
jle
ss
out
sub
xor
pop
xchg
iret
inc
or
jge
and
ds
push
std
add
xor
iret
fnsave
push
add
or
pop
lret
mov
into
pusha
mov
mov
xchg
dec
cmp
nop
test
lret
mov
xor
xchg
inc
lock
dec
test
insb
in
mov
out
adc
add
or
sub
shlb
xchg
ljmp
movsl
roll
or
jp
xlat
mov
jg
mov
in
pop
sbb
popa
jp
push
jno
repnz
aaa
les
dec
xor
mov
addr16
cwtl
in
mov
jge
shlb
loop
outsb
jl
push
mov
adcl
loopne
aad
inc
iret
cmc
pop
pop
outsb
faddl
lret
test
adc
mul
fldenv
lahf
cmp
mov
pop
lods
sub
dec
xor
mov
cmpsl
push
fsubrl
cmpsb
out
pop
inc
mov
mov
sti
outsl
or
and
aaa
aas
add
js
sbb
xor
pop
pop
aad
int
notl
fstl
push
xor
xor
xor
add
aas
test
adc
dec
sbb
push
out
mov
dec
sbb
dec
mov
jo
popa
or
add
ljmp
ret
rclb
pushf
ja
push
pushf
fcomps
lret
repz
rcrl
incb
stc
daa
sbbb
pop
scas
push
outsb
fldcw
sbb
and
imul
dec
mov
fs
jmp
pop
test
daa
bnd
pop
cmp
and
fildll
add
insb
es
mov
xor
jbe
sub
dec
jle
pop
ds
add
xor
fnstcw
dec
inc
and
and
mov
mov
testl
cmpsl
mov
cwtl
arpl
mov
pop
push
hlt
andl
jns
adc
stc
inc
in
or
aad
arpl
mov
movsb
imul
xchg
sbb
push
dec
mov
imul
push
movsb
xchg
lret
scas
loopne
sbb
xor
ja
and
dec
fimull
mov
xor
mov
push
mov
in
jnp
or
or
bound
aad
lea
dec
cs
pusha
push
mov
addl
xchg
adc
inc
mov
dec
mov
icebp
cmp
push
or
mov
jp
lcall
sub
jb
sub
je
scas
jbe
pop
imul
in
pop
and
dec
dec
into
push
lahf
enter
mov
sub
push
lods
jne
and
iret
jns
dec
pop
adc
push
dec
stos
add
int3
push
jo
push
not
dec
out
loop
std
in
cs
andl
xchg
xchg
pushf
aam
push
jae
int
test
pminsw
sbb
push
jnp
es
sbb
call
inc
or
mov
jg
inc
dec
jg
lcall
sti
push
fs
mov
out
pop
push
in
xchg
mov
shlb
sub
mov
sub
lods
aad
std
push
sbb
mov
jle
mov
in
subb
xchg
pop
mov
mov
imull
movsb
push
and
xchg
mov
push
dec
xchg
in
or
mov
stc
lock
mov
dec
sub
pusha
pop
bound
jbe
pop
mov
xor
incl
jg
cli
je
pop
sub
and
fsts
pushf
ret
shlb
cmp
add
jo
cmpsl
inc
hlt
into
lahf
scas
push
call
arpl
imul
adc
lahf
or
inc
dec
mov
push
stos
rorl
prefetch
sub
inc
sahf
ja
repnz
jnp
add
notb
lock
cmp
pop
ret
or
pop
and
into
sahf
test
addb
push
lahf
push
lods
xor
hlt
outsl
mov
dec
cmp
cs
jp
sahf
stc
std
pop
cmp
clc
jb
nop
in
push
adc
popa
pop
rcr
or
or
int
pop
das
inc
les
xor
fdivp
test
sbbb
cld
push
mov
repz
imul
and
mov
sub
dec
push
gs
sbb
mov
arpl
cmp
cwtl
and
lea
lahf
test
les
or
push
pop
and
jg
inc
inc
push
push
rcrb
and
pop
ljmp
mov
mov
scas
cmp
lcall
mov
sbb
lahf
and
shl
jecxz
sbb
xor
or
adcl
push
sarb
push
dec
mov
stos
mov
and
xchg
push
push
aaa
cmpb
inc
mov
rorl
fadds
loop
mov
dec
movsl
insl
inc
jb
les
dec
add
mov
jb
mov
mov
icebp
mov
out
pop
push
andb
out
je
cmp
fcompl
sbb
fldl
bound
jecxz
sbb
shlb
mov
sub
test
std
sub
sbb
inc
ret
push
add
pop
push
dec
inc
std
xchg
jb
ret
add
mov
and
push
mov
gs
andb
add
jnp
ja
mov
pusha
xor
filds
jmp
fistps
icebp
mov
dec
xor
nop
mov
inc
cwtl
ret
call
add
push
push
gs
lds
mov
scas
push
in
sbb
in
add
inc
daa
mov
and
add
jbe
bound
aam
data16
insl
int3
test
pop
or
sbb
out
sbb
mov
popl
mov
aas
mov
mov
leave
and
mov
sti
test
sbb
add
cmpsl
pop
cmpsl
jbe
adc
mov
int3
nop
push
inc
adc
mov
mov
jp
das
cld
mov
push
adc
jae
fmuls
fsubr
cmp
xor
adc
cmpsb
or
sbb
add
jno
mov
fldt
mov
cmpsb
push
xor
insl
outsb
push
loop
addr16
push
pop
jo
test
rcr
mov
sbb
mov
in
aad
loopne
aad
cmp
idivl
test
mov
xchg
pushf
adc
jmp
and
call
add
ljmp
xor
aam
leave
outsl
mov
clc
fdivp
pop
loop
leave
or
adc
std
rolb
jecxz
mov
jl
adc
or
aam
test
das
push
xor
popf
addr16
cwtl
or
jecxz
inc
in
adc
fstpt
fidivs
nop
and
xchg
lods
out
cmc
popf
mov
test
divl
pop
test
std
cmp
mov
rorl
test
popa
xchg
sbb
add
pop
lock
xchg
push
iret
fbstp
shll
je
and
dec
and
xchg
js
mov
adc
pop
sub
loope
pop
jmp
inc
icebp
repz
inc
xor
mov
cmp
and
fcomp
cmc
mov
push
mov
repz
repz
mov
inc
pop
or
imul
testl
test
mov
and
push
rorl
in
test
inc
mov
imul
jmp
sub
mov
and
push
dec
je
mov
pop
mov
popf
xchg
daa
out
je
pop
test
leave
clc
shr
mov
cmp
ljmp
sbb
repnz
je
or
adc
add
mov
lods
sahf
daa
daa
in
addr16
mov
out
cmp
iret
lcall
xchg
out
imul
push
arpl
aam
xor
popf
sarl
cmpsl
dec
jae
pop
nop
loope
pop
xor
enterw
cwtl
shlb
aaa
add
addr16
sub
pop
xchg
repz
and
lret
outsl
jbe
imul
jb
stc
fnstenv
cs
cmp
mov
fs
jle
xchg
repz
mov
sbb
and
mov
mov
push
jo
mov
fildll
testl
jae
js
testb
outsb
mov
cmpsl
les
push
sarl
lcall
int
push
mov
ds
cmp
je
daa
out
adc
add
aaa
adc
xchg
jp
pop
ret
repz
adc
jo
int
inc
shl
mov
or
add
dec
ficompl
cwtl
pop
cmp
pop
data16
xor
sahf
and
stos
pop
bnd
add
or
insb
xor
add
mov
cmpsl
loopne
mov
xchg
cmp
inc
or
sbb
xor
dec
pop
mov
xor
jnp
dec
mov
xchg
ficompl
es
xlat
dec
fidivrl
cmp
pop
mov
sti
stos
cmp
push
or
xchg
inc
popf
enter
clc
pop
test
inc
fadd
rcrl
pop
push
adc
mov
int
arpl
jno
mov
push
std
fwait
push
pop
jbe
xor
xlat
cmp
hlt
sbb
ss
xor
jg
mov
aaa
jl
sub
and
jne
fistpl
scas
enter
xor
stc
mov
ljmp
loop
or
shrb
mov
inc
lods
jbe
into
cld
cli
inc
jno
push
inc
mov
fiaddl
xor
dec
push
pop
dec
std
jno
scas
dec
sub
mov
sbb
push
nop
lret
into
imull
cmp
xor
les
mov
cmp
test
cmpsb
add
cs
in
jg
push
fistpl
test
cmpsl
mov
xchg
push
inc
pop
push
sub
cmp
or
sbb
call
fcom
test
mov
xchg
push
inc
pop
push
sub
cmp
or
sbb
call
mov
mov
xchg
push
inc
pop
push
sub
cmp
or
sbb
call
fcom
test
mov
xchg
push
inc
pop
and
mov
idiv
out
pop
sbb
or
cmp
sub
and
adc
test
xlat
fcmovb
lret
out
pop
sbb
or
cmp
sub
inc
dec
ja
addr16
xchg
fwait
xchg
xlat
mov
out
pop
sbb
or
cmp
sub
inc
dec
ja
imul
faddp
mov
mov
mov
push
adc
sbb
pop
push
dec
mov
sti
sbb
sbb
push
fisubl
mov
loope
mov
je
inc
pop
mov
mov
or
pop
jmp
xchg
test
fwait
xchg
mov
and
divl
daa
pop
xchg
and
hlt
and
pop
mov
mov
or
pop
cs
sub
mov
fildl
es
movsb
mov
in
imul
sub
xchg
out
sub
sbb
jl
int3
rcl
ja
rcrb
int
xor
xchg
fwait
xor
in
aam
pop
or
cmp
sub
inc
dec
ja
imul
mov
cmpsl
stos
xlat
fcmovnb
lret
idiv
out
jb
fs
jp
push
sbb
aas
sbb
jecxz
out
loop
call
xchg
ja
addr16
jae
dec
xor
or
xor
inc
in
loopne
lret
stc
and
lea
jno
inc
push
adc
dec
ja
imul
mov
cmpsl
stos
xlat
fcmovnb
lret
idiv
out
pop
sbb
or
cmp
sub
inc
dec
ja
imul
mov
cmpsl
stos
xlat
fcmovnb
lret
idiv
out
pop
sbb
stos
push
pop
in
xchg
clc
and
push
xchg
mov
lret
mov
push
test
dec
mov
stos
ret
sbb
push
imul
lea
movsb
popf
or
jno
inc
test
xchg
mov
mov
adc
mov
fadds
pop
mov
movsb
cwtl
arpl
neg
test
sub
adc
xchg
lds
sub
pop
sbb
jnp
sbb
inc
lock
mov
adc
jmp
stc
mov
loope
dec
push
dec
frstor
das
push
cmp
les
ljmp
pop
out
sub
fdivs
mov
pop
lahf
in
outsb
or
push
pop
rolb
push
sbb
mov
push
sub
sbb
insb
cmp
std
lds
mov
mov
test
adc
inc
mov
dec
testl
mov
dec
pop
mov
clc
stos
xchg
imul
mov
push
out
in
or
push
sahf
scas
imul
enter
fsts
dec
jg
add
test
fwait
adc
and
add
out
cmp
xor
push
movb
loop
inc
sbb
js
lahf
lret
mov
push
pop
jecxz
daa
push
adc
test
popa
ss
mov
push
repnz
fdivp
xor
mov
pop
cmp
pop
orb
pop
es
push
cmp
je
in
ret
mov
adc
mov
gs
xor
sub
inc
popf
mov
call
movsb
and
jecxz
push
pop
ret
cwtl
das
js
dec
push
and
cmpsb
or
insl
test
arpl
ret
inc
cmpl
inc
mov
clc
adcl
pop
scas
nop
shrb
loop
in
inc
ss
outsb
sub
call
je
in
movsl
test
mov
bound
sbb
mov
jno
xlat
lret
sbb
pop
push
leave
out
adc
xchg
dec
lds
xchg
mov
push
sub
cmp
daa
aaa
mov
in
movsb
stos
mov
imul
jb
fwait
rcrl
mov
push
push
ret
fs
jae
loopne
dec
popa
xchg
pop
insb
cmp
xchg
mov
bound
test
mov
fcmovbe
mov
and
or
sbb
sub
dec
dec
fadd
push
cli
mov
movsl
jg
rcll
sbb
push
pushf
cs
jmp
xlat
inc
or
pusha
repz
addr16
test
inc
xchg
and
add
push
lea
popa
ret
pop
mov
sbb
xchg
leave
mov
jecxz
and
addb
lods
in
cmp
xchg
orb
into
sbb
test
cmc
inc
and
popf
push
mov
repz
sub
ds
mov
sub
aaa
leave
pop
enter
cs
inc
mov
out
out
add
leave
out
inc
out
and
out
inc
jle
sub
xchg
pop
idivb
out
js
sub
dec
cmp
mov
pop
cmp
mov
jg
lret
roll
mov
stos
mov
and
test
fstpl
jbe
cmpl
jle
sub
or
iret
pop
mov
dec
popa
enter
out
arpl
sub
sub
xor
and
sub
in
fists
std
pop
inc
sub
jg
sub
jbe
xor
sub
inc
sub
sub
jb
fcmovbe
push
cmp
push
xchg
dec
jmp
and
cmp
xchg
out
jnp
fbld
or
insb
movsb
cmp
pop
movsl
adc
aad
xchg
dec
adcl
mov
dec
cmp
leave
xchg
shlb
cmp
or
repz
inc
sbb
jmp
adc
es
sbb
or
adc
xor
and
leave
mov
bnd
xchg
test
xchg
ja
into
mov
cmc
inc
xor
lock
sub
clc
xor
repz
and
mov
bound
insb
inc
sbb
xchg
jno
shr
in
pusha
sub
mov
lret
gs
imul
and
jbe
jp
imul
lret
or
sbb
roll
inc
ret
je
neg
jle
repz
sub
movsb
shlb
push
pop
pop
repnz
add
push
add
cmp
mov
mov
jmp
movsl
mov
insb
mov
mov
scas
arpl
scas
rcll
daa
jbe
outsb
xor
mov
sbbb
sub
jno
js
cwtl
pop
mov
or
mov
xor
and
pop
adc
imul
mov
mov
adc
movsl
rcr
mov
int
fucomi
fisttps
je,pt
je
popf
ret
movsl
xchg
popf
aaa
xor
dec
les
push
mov
les
in
bound
cmp
cmp
aaa
sbbb
push
dec
in
fdivrs
jno
jns
pop
fistpl
and
mov
pop
xchg
icebp
icebp
stos
in
out
in
daa
pop
adc
cld
jmp
or
cld
lea
mov
push
lahf
cwtl
mov
and
xor
push
cmp
int
push
out
rorl
push
shl
add
mov
jne
dec
inc
dec
pop
repnz
push
shrl
stc
xchg
popf
pop
sahf
outsl
test
sti
shll
mov
xor
js
bound
or
sahf
mov
mov
lods
scas
inc
cs
cmpsb
push
and
in
push
cmp
ret
pop
xor
pop
push
xlat
scas
data16
popf
jle
sub
cs
dec
stos
sbb
xlat
test
lods
add
mov
adc
cmp
fs
inc
cld
push
lahf
fwait
popl
rcrb
stc
sub
outsl
jecxz
pushf
aad
sbb
jl
dec
jmp
cmpsl
pop
xor
xlat
imull
xchg
fiadds
dec
mov
xchg
jnp
pop
jge
leavew
scas
rorb
xlat
cmp
xchg
sub
jg
repnz
insl
popa
iret
cltd
mov
ja
or
orl
mov
xor
scas
mov
into
xchg
mov
test
xor
sbb
lret
out
jg
fstpl
je
test
mov
mov
addl
xor
and
icebp
in
pop
shl
in
and
pop
pop
pop
xchg
add
loopne
push
shlb
inc
jp
lret
sbb
jmp
es
mov
pop
jge
jne
ret
int
mov
es
jns
xchg
cltd
add
adc
stos
mov
aaa
jge
das
pop
xchg
notb
mov
jbe
push
int3
dec
fcomi
loopne
iret
aaa
fiadds
dec
mov
dec
rorb
shll
push
stos
inc
cs
addr16
insb
scas
adc
or
cmp
lahf
mov
leavew
mov
pop
lds
mov
je
cli
push
cmp
loopne
jns
movl
mov
fcmovne
mov
mul
js
int3
dec
xor
and
push
or
mov
push
popa
bound
cld
and
lea
in
scas
mov
or
mov
push
insl
pop
jecxz
push
cmp
cltd
add
mov
push
lods
inc
cwtl
notb
outsb
sar
ret
xchg
pop
rcr
push
pushf
shrb
inc
mov
mov
in
and
mov
popa
xchg
outsb
dec
jmp
stos
fwait
ja
lods
mov
dec
xchg
cltd
inc
jge
mov
pop
mov
or
fwait
cmpxchg
mov
stos
xlat
xchg
aad
imul
mov
cmp
call
leave
dec
lods
adc
repz
jle
mov
sub
pop
sahf
jmp
je
mov
sub
mov
push
lcall
data16
push
cmp
inc
push
fiadds
inc
repz
adc
push
sub
push
iret
sbb
sub
inc
fdivl
aaa
or
cmp
fnstenv
add
push
jbe
ja
mov
push
aaa
cld
mov
sbb
into
mov
fidivl
mov
loopne
pop
push
in
in
movsl
addr16
nop
mov
out
push
pusha
pop
inc
mov
bound
xor
sub
cmc
xor
gs
fstpl
enter
jno
into
adc
dec
fiaddl
mov
jns
outsb
adc
jl
inc
or
sti
dec
mov
adc
mov
cmp
test
outsl
dec
or
and
push
ret
lret
out
pop
loope
push
xor
jne
jne
out
sar
ja
xor
scas
adc
push
fsubrp
jb
or
and
cmp
add
mov
inc
sti
jle
popf
nop
push
inc
nop
inc
bound
mov
lcall
fdivs
xor
xchg
and
cmc
xchg
jns
mov
repz
decb
and
cmp
or
jne
and
sbb
mov
out
push
xor
xchg
out
sahf
incl
push
aam
ret
ja
ds
jp
roll
pop
push
ret
and
jmp
fucomip
push
cmp
mov
xlat
lret
cmpsl
inc
lods
cs
dec
pmullw
lret
adc
daa
sub
and
jle
cmp
scas
hlt
insl
cmc
pop
lcall
cmc
push
inc
loopne
push
pop
repz
test
out
in
lcall
push
xlat
mov
loope
jne
scas
fidivrl
sub
sub
xchg
dec
and
into
sti
aam
cmpl
push
adc
jp
adc
ds
and
mov
ja
adc
mov
outsl
dec
rcrl
js
pop
repz
and
lds
mov
mov
mov
xchg
scas
mov
arpl
or
fs
push
movsl
pop
dec
pop
imul
andl
in
je
sarl
lock
inc
pop
jecxz
fs
sbb
push
sti
mov
or
xchg
into
xchg
jmp
out
lods
cmp
sbb
ja
pushf
xor
scas
inc
xchg
xchg
pop
test
test
and
and
add
inc
cmpsw
sbb
sub
movsl
cmp
push
xorb
clc
cmp
addr16
push
adc
adc
jmp
int
jnp
iret
add
insl
dec
add
dec
jns
mov
push
mov
or
sti
incl
jnp
sub
jmp
push
pop
int
sub
push
aam
fs
cmpsb
add
mov
movb
xlat
ds
sbb
outsb
xchg
popf
into
add
dec
addr16
dec
test
loop
lcall
sub
insl
xchg
or
mov
add
xor
mov
mov
sahf
sub
lds
test
dec
pushf
mov
jl,pt
push
or
dec
les
lea
jo
sbb
popf
fsubrl
insl
loop
mov
lock
movsl
lahf
fs
cld
cmc
lock
jmp
pop
jmp
jmp
pushf
loop
addl
les
roll
test
mov
leave
loopne
aam
into
pop
xchg
pop
shrb
mov
mov
testb
stc
xchg
ja
dec
not
push
bound
mov
outsl
xchg
adcb
arpl
dec
pop
stos
ret
cmc
mov
xlat
jo
cmp
sbb
or
xchg
lcall
and
xlat
les
into
loopne
jbe
adc
or
pushf
pop
cmp
jmp
dec
cmp
jmp
fsubrl
mulb
in
sbb
sub
push
aad
jmp
jb
cmp
out
fists
dec
cltd
lods
mov
imul
out
xchg
les
sbb
mov
es
xchg
mov
xorb
aad
cs
test
pop
mov
pop
ret
sarl
jl
jle
xchg
pop
out
addr16
fcom
cltd
ss
mov
dec
ja
divb
out
test
mov
insb
mov
icebp
fcomip
imul
cltd
sub
loopne
inc
into
sub
roll
fcoms
mov
mov
sti
jg
movl
cltd
inc
enter
jae
nop
xor
fiaddl
mov
nop
mov
pop
mov
nop
jle
in
or
lods
decb
lock
into
add
rcl
sub
or
pop
jle,pn
sbbb
push
ret
mov
popf
xlat
sbb
xlat
fcompl
pop
push
outsl
pop
loop
xor
gs
xchg
dec
pop
call
adc
leave
mov
and
push
filds
loope
dec
ljmp
ljmp
das
and
mov
cli
push
jb
pop
icebp
lret
mov
adc
outsl
shrb
in
pop
nop
std
addb
outsl
je
mov
out
xchg
nop
cmp
lahf
mov
xor
lahf
pushf
scas
out
mov
jmp
rcll
das
ret
aaa
pop
add
repnz
dec
negb
xor
frstor
nop
sbb
insl
cmp
cmp
cltd
xchg
popa
clc
es
out
cmp
push
les
push
stos
roll
lcall
xchg
inc
sbb
pop
sub
or
xchg
jbe
push
icebp
adc
leave
xlat
xor
rclb
es
loope
sbb
imul
xchg
fstpl
fdivrp
xchg
cli
mov
movzwl
mov
pushf
loop
ds
or
lds
jp
inc
jns
mov
inc
aam
loop
in
in
xchg
dec
cli
shl
inc
add
adc
add
xlat
ret
mov
mov
imul
daa
inc
mov
call
into
push
pusha
xor
fadds
in
adc
lock
lock
push
xchg
lret
inc
sbb
sbb
stos
push
xor
dec
jl
orb
fidivs
jb
push
cs
xor
stos
xchg
push
inc
outsl
add
imul
out
ret
push
cltd
dec
or
adc
push
repnz
adc
jp
daa
decl
sbb
enter
cmp
add
movsl
mov
lcall
xchg
daa
cmp
add
lret
iret
outsb
sahf
jo
mov
iret
stos
dec
sbb
push
xchg
push
aam
jecxz
loope
add
sbb
lret
push
sbb
push
lea
fcmovu
push
in
ffreep
push
or
inc
fistps
icebp
int3
in
xchg
stos
arpl
add
jmp
sbbb
xchg
movsb
das
jns
lock
out
mov
aad
xchg
testl
je
int3
adc
and
mov
sub
and
adcb
lock
jno
shlb
sbb
std
cld
jecxz
jl
and
into
int3
xchg
cmpsb
lea
setno
stos
leave
xchg
xor
pop
jno
loop
lds
andb
add
dec
mov
outsl
lret
push
xchg
adc
adc
ds
mov
mov
fsubl
xor
sbb
xchg
test
enter
xchg
or
sub
jns
dec
adc
sbb
popf
xchg
mov
or
aas
aaa
cmc
outsb
scas
xchg
dec
mov
or
hlt
dec
add
xchg
mov
aaa
pushl
pop
inc
xchg
mov
ss
mov
cmp
arpl
or
fwait
popa
mov
jbe
aam
and
mov
scas
adc
out
aaa
jbe
dec
popf
push
pop
or
das
sub
shlw
dec
pop
ds
dec
xchg
iret
out
lock
push
add
xlat
lret
lcall
lahf
scas
adc
pop
test
das
inc
movsb
daa
pop
es
push
mov
loope
sti
inc
imul
xor
mov
rcrl
arpl
and
jmp
jmp
std
inc
in
sub
sbb
in
mov
sbb
ret
pslld
popf
jmp
mov
imul
add
ret
and
push
add
mov
cwtl
xchg
pop
mov
stc
lds
mov
xchg
out
mov
lea
pop
loop
aad
aas
in
xchg
add
test
mov
sub
pop
jno
jle
ds
insb
das
xorl
or
sub
and
mov
data16
jmp
ficomps
push
xchg
dec
or
std
cmp
dec
ds
xchg
test
les
shlb
aam
movl
sub
or
or
push
fdivrs
xor
mov
cmc
fistps
shlb
cmp
iret
cwtl
sub
jae
cmpsl
mov
sbb
jle
cltd
pushf
push
mov
lds
popa
mov
int
ljmp
cmp
imul
dec
sub
jp
push
test
lea
out
xchg
dec
xor
ja
xchg
mov
fnstcw
out
mov
movsb
sbb
mov
xchg
xchg
inc
add
int3
xor
or
dec
addr16
jle
xor
cwtl
sub
dec
int
pop
fiadds
mov
pushf
xchg
jne
inc
sub
daa
std
mov
lcall
and
pop
ljmp
push
inc
jnp
dec
sbb
lret
dec
adc
jnp
je
jbe
pop
mov
shl
dec
mov
cmp
inc
mov
xor
popf
enter
enter
mov
dec
cltd
ret
cmpb
loope
push
rorl
cmp
pushf
sub
lods
lret
push
inc
mov
sub
sarb
sti
jmp
test
cmp
not
mov
sahf
mov
sub
ja
mov
pusha
arpl
sub
lcall
jmp
fs
jno
fldenv
in
jbe
sub
dec
mov
scas
shll
jmp
imul
xchg
mov
test
adc
test
sbb
andl
out
out
xchg
mov
mov
mull
ss
les
bound
fnstsw
cltd
dec
stc
add
lcall
xlat
cmpsl
jno
pop
inc
mov
repnz
iret
cmp
push
dec
push
mov
xchg
push
stos
mov
xor
sub
mov
mov
lahf
push
int
imul
push
and
push
mov
xchg
lods
fbld
ja
push
movsl
jbe
mov
fstl
jecxz
loopne
cmpsb
or
pop
push
lret
pop
int3
popa
xor
test
ja
mov
loop
dec
imul
push
cpuid
adc
mov
sub
mov
outsl
ss
cmp
fbstp
xchg
push
mov
fisttpl
sbb
fwait
push
in
inc
and
popa
mov
shll
rcr
daa
jle
fadds
fdivrp
jle,pn
lret
pop
cli
mov
jb
movsl
and
pop
mov
push
and
mov
clc
test
test
dec
sahf
out
sub
xlat
mov
jno
rcr
pop
jns
push
mov
dec
repnz
sti
dec
mov
shl
sub
enter
push
mov
lret
stos
push
imul
lock
stc
jns
pop
nop
pop
pop
ja
clc
mov
inc
dec
push
push
cmp
dec
mov
dec
lret
fildl
dec
inc
mov
jge
lods
add
addr16
das
inc
mov
sbb
insb
inc
loopne
aad
pop
push
jp
push
xchg
adc
adc
iret
daa
mov
je
fs
sbb
inc
or
stos
jge
mov
mov
cmp
mov
fwait
mov
jge
js
pop
lds
fcomp
loopne
ljmp
bound
mov
stos
negl
mov
insb
inc
pop
jbe
call
pop
test
addr16
inc
fmul
subb
out
insb
push
orl
push
aaa
jo
pusha
stos
pop
mov
pushf
pop
mov
lret
pop
movb
cmp
add
roll
outsb
cld
iret
jmp
pop
lahf
outsl
aas
inc
sbb
popa
int3
xor
aad
incl
or
sbb
stos
sub
add
das
dec
cmp
lret
xor
jns
mov
imul
bnd
ret
shlb
and
push
loope
add
jmp
adc
mov
fidivl
fimuls
orb
adc
lahf
cld
sbb
shlb
cmp
scas
fsubrl
insl
mov
mov
dec
jp
ffreep
cmp
and
xchg
jnp
es
mulb
cltd
fcomi
inc
addr16
xchg
lock
adc
out
les
out
push
jecxz
lds
les
ss
cld
lcall
inc
cmpsb
sbb
lods
push
xchg
sub
push
ljmp
inc
lcall
mov
loope
add
in
ja
dec
pop
hlt
push
sbb
pop
jp
or
mov
rorl
scas
mov
jo
push
roll
out
dec
mov
fsubrl
add
scas
mov
ljmp
inc
mov
push
mov
sub
mov
mov
or
cmp
sub
inc
dec
ja
imul
mov
cmpsl
stos
xlat
fcmovnb
lret
idiv
out
pop
sbb
or
cmp
sub
inc
dec
ja
imul
mov
cmpsl
stos
xlat
fcmovnb
lret
idiv
out
pop
sbb
or
cmp
sub
inc
dec
ja
imul
mov
cmpsb
stos
xlat
fcmovnb
lret
idiv
out
pop
sbb
or
cmp
sub
inc
dec
idivl
stos
push
mov
dec
xor
add
adc
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
int3
sbb
in
pop
cld
dec
inc
sbb
mov
dec
cld
pop
loopne
int3
jge
or
sbb
sub
cmp
int3
jl
insb
in
pop
cld
dec
mov
sub
sbb
or
pop
in
insb
cld
jl
int3
fistps
sub
cmp
int3
fsubrl
cld
push
mov
mov
add
jae
pop
lret
xchg
jl
add
inc
rcll
cmc
cmpsl
addb
xchg
addr16
mov
nop
jge
cmp
test
push
sub
jae
pushf
rclb
inc
test
int3
or
cmp
rcrl
sub
push
sub
push
or
pusha
mov
lods
dec
bound
int3
sub
insb
xchg
stos
sbb
in
sub
shrl
repz
pop
push
scas
push
or
xor
or
add
dec
stc
or
jmp
aam
and
jae
jae
mov
pop
ja
dec
push
outsb
int
es
clc
xchg
leave
push
fcompl
fldcw
mov
jnp
dec
cld
push
mov
sub
add
pop
hlt
insb
lds
movsb
sbb
sub
cmp
lea
test
test
dec
mov
inc
enter
dec
xchg
cmp
rcrl
dec
pushf
jp
test
sub
dec
mov
push
aam
out
pusha
sub
jl
or
lock
jmp
cmpl
sub
sbb
or
cld
pop
in
insb
fdivrl
mov
cmp
int3
jl
insb
in
pop
cld
dec
mov
sub
sbb
or
cld
pop
in
insb
fdivrl
mov
cmp
int3
jl
jmp
jge
pop
jb
sahf
dec
inc
mov
insl
xchg
inc
rorb
aaa
mov
sub
jno
lret
xchg
fsubl
cmc
std
adc
dec
aad
cmp
jecxz
sub
into
es
mov
add
out
imul
pop
mov
outsb
mov
jae
repnz
dec
andb
mov
nop
and
xchg
aaa
sti
fnstenv
pop
mov
mov
xchg
or
sub
inc
dec
sbb
adcl
push
icebp
and
cmp
in
add
mov
push
pusha
cltd
hlt
sbb
leave
imull
xor
dec
sbb
fiaddl
jbe
pop
hlt
and
push
dec
enter
jmp
push
iret
pushf
add
pop
sar
jnp
scas
jno
or
cli
hlt
fmull
gs
cld
add
sub
test
mov
loopne
ja
or
mov
insl
popw
xchg
scas
dec
xor
cmp
jmp
sbb
mov
gs
and
add
jle
xchg
jge
sub
mov
mov
movsb
push
and
pop
mov
and
sub
jmp
fidivs
sbb
add
orl
lret
lods
jmp
iret
xor
rcrb
cmpsl
adc
movl
jo
cmpsl
ret
xchg
push
dec
jg
xchg
pop
xchg
inc
aas
aad
push
add
outsb
div
pusha
fildll
mov
lods
popf
or
je
xchg
shll
xchg
outsb
or
lds
icebp
popf
jge
push
stos
push
addb
mov
fwait
fwait
sub
jmp
cwtl
push
dec
adc
dec
mov
sbbb
pop
lods
dec
pop
fildll
pop
gs
rorl
xchg
and
push
lret
into
push
scas
nop
imul
sbb
dec
jnp
shlb
mov
mov
aam
fisubl
mov
inc
xor
and
push
sub
loop
lahf
dec
add
inc
ret
cmp
inc
pushf
xchg
insb
jmp
inc
sub
pop
ds
in
stc
clc
cld
call
rorl
lahf
iret
or
jmp
jbe
jb
sti
or
jge
clc
int
into
mov
aas
out
stos
leave
js
inc
rcrb
jne
in
pop
cltd
dec
jae
in
out
bound
daa
in
stos
pop
push
dec
outsb
popf
and
leave
mov
add
and
int
xor
not
or
pop
fnstenv
out
dec
adc
pop
dec
fnstsw
ret
test
sbb
cli
lahf
scas
loope
insb
xchg
mov
xchg
xchg
int3
xchg
outsl
repnz
pop
cwtl
dec
aas
loop
enter
pop
insl
pop
push
push
xchg
pop
cmpl
cltd
inc
test
js
aam
xchg
xor
aas
cmp
test
add
sub
inc
cmpsb
or
ret
xor
testl
jg
jle
hlt
or
popa
incb
jl
or
clc
fsubl
mov
test
imul
add
call
adc
mov
into
pop
cmc
rclb
xorb
scas
lds
push
push
mov
cmp
neg
dec
xor
fldcw
mov
movsl
pop
mov
mov
stc
and
xchg
mov
mov
and
push
cld
inc
ss
dec
jp,pt
adc
jg
pop
mov
push
mov
mov
adc
test
lock
call
cld
stos
xchg
scas
lret
sbb
arpl
out
mov
mov
xchg
add
pop
or
pop
xor
pop
aam
or
cmp
idivl
sub
push
fwait
nop
in
nop
sub
insl
loop
mov
pushf
hlt
add
xchg
mov
stc
stc
and
arpl
cld
push
mov
movsb
and
mov
out
and
fiaddl
dec
lahf
pop
xchg
stos
push
roll
dec
dec
jp
or
dec
dec
bound
mov
push
lret
adc
push
leave
adc
pop
jb
mov
inc
popa
rcrl
xchg
mov
out
dec
adc
or
loopne
pop
gs
jecxz
orl
sub
cltd
pop
jae
xchg
mov
repnz
rorb
pop
inc
in
lret
aaa
fstpl
or
mov
push
inc
data16
dec
mov
sub
lahf
hlt
scas
cmp
insl
mov
arpl
xor
adc
push
out
push
mov
xor
cwtl
pop
insl
xorl
loope
in
iret
dec
sbb
sub
or
fsubs
aam
mov
add
xor
aad
or
xchg
mul
fisttpll
inc
loopne
xchg
add
rcll
and
xor
push
int3
subl
xchg
in
insb
sti
push
scas
aaa
inc
lret
rorl
mov
je
in
adc
add
data16
xchg
xor
cmp
in
lock
enter
and
iret
xor
push
int3
enter
rcl
mov
pushf
cmp
ret
mov
mov
push
push
repz
out
dec
mov
dec
call
sub
xor
fs
push
stos
pop
and
arpl
pop
jp
sub
sarb
stos
sub
out
xchg
cli
jae
enter
loop
hlt
mov
mov
mov
mul
pop
inc
mov
sbbl
xchg
sbbl
pusha
jne
movups
dec
xor
mov
sbb
stos
pop
call
pushl
loop
ret
insl
lcall
jns
push
mov
incb
mov
mov
into
in
xlat
hlt
mov
mov
flds
push
jecxz
xchg
mov
fdivs
sbb
fwait
aas
in
das
stos
cltd
sub
test
hlt
inc
cmp
xchg
int
shll
fcomp
push
jno
pushf
addr16
dec
xlat
stos
sbbb
sbb
roll
das
inc
sti
test
push
xchg
add
adc
adc
iret
mov
or
shrl
cmpsb
inc
push
jno
jle
jne
xor
call
rol
xor
outsl
push
jmp
add
js
mov
pushf
sbb
daa
xlat
stos
jae
ficoml
roll
jno
lcall
xchg
outsb
sbb
fisubrs
aas
jae
gs
inc
mov
lret
jb
fwait
sub
stos
push
inc
cmpb
fmul
sub
lock
cltd
sbb
test
push
gs
idivb
push
fsubs
lds
xchg
daa
add
in
in
cmp
cmp
pop
sub
pop
pop
xor
fdivrs
pop
adc
fs
daa
xchg
inc
test
or
cmp
xchg
adc
mov
outsl
pop
nop
push
adc
push
xchg
sub
push
cmpsb
and
or
btc
mov
sub
jns
js
dec
add
fdivl
mov
mov
sbb
cmp
adc
and
test
test
sti
pop
lahf
pushf
jle
inc
in
xchg
nop
push
cltd
cmpsl
mov
dec
inc
loopne
and
lock
mov
adc
add
rcll
mov
inc
jo
cmp
ds
loop
in
sub
scas
mov
sub
cmp
clc
in
rolb
dec
add
bound
adc
adc
test
xchg
sbb
sahf
fwait
adc
sbb
out
inc
pop
mov
xor
pop
xchg
pop
scas
xlat
icebp
xchg
dec
push
push
rcrl
rorb
mov
fsubrp
ja
js
jae
mov
mov
testb
jnp
orl
inc
into
outsb
clc
cmp
imul
cmp
and
popa
fwait
pop
adc
lcall
gs
roll
call
pop
xor
out
ret
leave
mov
pop
pop
jle
std
cs
mov
sub
lahf
jp
mov
dec
in
clc
test
jb
mov
mov
jmp
out
pop
push
and
dec
sbb
fdiv
jae
int
cmp
xchg
call
sbb
pop
adc
les
mov
or
fs
nop
aas
mov
divb
pusha
frstor
inc
jae
xlat
or
add
inc
mov
jp
idiv
xlat
xchg
int3
sbbb
movl
cmp
xchg
push
sbb
or
int
std
and
mov
cld
aad
jnp
in
pop
cltd
push
pop
mov
ret
sbb
add
mov
std
repz
test
ja
mov
sti
cwtl
shlb
mov
push
jns
cmp
xchg
xchg
loope
mov
push
adc
xchg
sbb
mov
xchg
insb
fcompl
mov
cli
push
and
cmpsb
ljmp
pop
push
mov
sbb
mov
sarb
xchg
jbe
scas
inc
add
and
inc
fmuls
inc
push
mov
mov
dec
outsl
call
jb
movsl
xchg
cwtl
pop
lcall
pop
jg
sub
dec
sub
imul
ret
fidivs
cmp
repnz
sbb
movsb
xor
adc
pusha
bound
dec
in
rcrb
aad
sbb
out
and
mov
cmp
cs
pop
xchg
jnp
lods
xor
decl
stos
andb
sbb
orl
mov
fwait
mov
mov
xchg
jae
cmp
ret
test
jg
sub
lds
out
sbbl
cli
lea
push
pop
jp
lds
or
cmc
dec
adc
loopne,pn
xor
mov
fdivr
sub
push
fistpll
jne
adc
adc
rcrl
les
pop
cs
jnp
and
int3
inc
icebp
mov
sub
in
in
pop
push
cmp
outsl
jle
test
imul
imul
mov
movsl
and
orl
xchg
call
repz
lcall
jno
cmpsb
jmp
loopnew
xor
push
inc
fcoms
pop
sub
aam
inc
pop
xchg
fsubr
sarb
sarl
lahf
lods
xor
pop
and
mov
ja
and
pop
fldcw
inc
jne
or
aaa
loope
pop
cmp
lahf
push
mov
jmp
adc
jb
add
push
or
xchg
add
out
mov
cmp
add
iret
testb
sbb
rcll
jb
jnp
sub
dec
lea
cli
xor
movsl
icebp
xor
xchg
subb
inc
into
jge
movsl
in
cmp
fwait
adc
cs
adc
or
mov
andb
shll
je
push
aaa
xor
mov
adc
lret
cmpsl
dec
popf
dec
je
xchg
imul
dec
scas
ss
mov
and
rcl
push
das
push
sbb
mov
add
sti
imul
mov
xor
stc
mov
fsubr
inc
jb
lds
mov
or
scas
adc
mov
adc
push
xchg
mov
adc
sarb
push
cmp
loop
icebp
mov
push
lods
adc
cltd
daa
jbe
addr16
fistps
mov
mov
inc
mov
jmp
lock
aaa
cltd
jno
mov
xchg
gs
ret
mov
lahf
in
push
dec
int
mov
inc
movsl
adc
add
out
mov
popf
lods
xor
push
mov
xchg
cmp
mov
fucomip
inc
mov
or
shl
insb
dec
in
dec
dec
les
js
cltd
leave
or
cli
inc
repz
imul
mov
f2xm1
jg
jnp
sub
sarb
cmp
push
test
addr16
fwait
jg
in
addl
sub
js
in
stc
mov
mov
jne
pop
movb
arpl
adc
popf
iret
testb
or
mull
daa
in
pop
std
inc
or
scas
xor
xlat
mov
or
clc
popf
scas
sbb
push
dec
rcll
lcall
inc
sbb
lock
mov
icebp
sbb
aaa
mov
pop
stc
push
mov
cwtl
push
inc
mov
push
rcll
xchg
lret
cmp
shlb
add
lret
push
mov
xchg
pop
cmp
sub
fbstp
or
pop
mov
aad
icebp
and
es
jne,pt
pop
add
shl
test
aad
mov
push
adc
push
add
movsb
icebp
aas
dec
loopne
cmp
jo
and
mov
inc
jbe
xchg
push
outsl
mov
lods
popa
push
mov
daa
mov
testb
js
mov
push
ret
scas
mov
stos
mov
clc
mov
lret
lcall
jnp
push
fmulp
fidivl
push
push
leave
jo
ja
ficomps
and
mov
repnz
mov
add
repz
xor
scas
jno
or
cmp
adc
push
std
cmp
arpl
adc
mov
or
mov
repnz
xor
sahf
cmp
and
jecxz
add
push
mov
xor
fnstsw
xor
shll
cmc
cmc
lcallw
push
mov
push
out
mov
stc
push
pop
out
pop
adc
and
dec
pop
std
xor
lcall
out
icebp
scas
out
jmp
push
add
jne
loopne
jle
cs
pop
inc
inc
je
mov
lea
loopne
ret
cmp
in
inc
pop
mov
add
enter
xor
push
jb
mov
dec
mulb
roll
pop
inc
jmp
jmp
inc
push
test
cmp
add
je
sbb
pop
mov
fmul
pop
jae
jmp
jnp
sahf
repz
lcall
incl
cmc
mov
jns
scas
ds
lock
in
mov
or
clc
push
pop
rcrb
cwtl
lds
out
adc
and
outsl
pop
jb
out
decb
cmpsl
xchg
cmp
out
and
ret
xor
xor
adc
test
sbb
push
or
outsl
lret
jb
cltd
jl
push
clc
iret
shrb
jl
ja
cmp
or
stos
inc
adc
jl
pop
mov
cmpsl
scas
push
imull
push
mov
lods
adc
loopne
ficoms
in
test
pop
pop
push
mov
jmp
xor
aaa
xor
repnz
loop
mov
shl
xchg
es
into
sub
cmpsb
ficoms
push
add
push
cmp
xlat
icebp
mov
andl
aas
inc
jae
sbbl
addr16
das
in
pushl
fcoml
rcll
cld
adc
xchg
sub
fdivrl
iret
cltd
xlat
xor
dec
inc
inc
js
mov
clc
mov
pusha
pop
addl
stos
cmp
mov
imul
clc
imul
jno
jno
imul
mov
loope
pop
jge
adc
das
into
or
sahf
add
push
lcall
cmp
enter
pop
add
imul
mov
mov
pop
jne
rcl
jnp
sahf
jp
popa
or
mov
adc
mov
fmuls
cmp
xchg
and
cmc
xchg
pop
xor
jbe
pop
sbb
cmp
push
and
push
push
xchg
leave
push
inc
fildl
int
sti
js
outsb
testl
stos
dec
ret
cmp
loopne
shlb
mov
or
fnstenv
xor
out
push
pop
rcrb
mov
xor
mov
repnz
mov
rcll
xchg
flds
sbb
jb
jle
jne
in
ljmp
jne
sti
ja
and
push
daa
pusha
xorl
xchg
pop
jne
outsb
inc
xor
mov
sahf
mov
and
pushf
pop
sbb
cmc
lds
ud0
test
sbb
mov
mov
fsubr
shrb
testl
jns
cmp
mov
imul
enter
jnp
test
outsb
push
movsb
shr
pop
sub
cmp
arpl
add
loope
cmc
mov
pop
add
jl
jge
dec
fidivrs
adc
jo
rcrl
cmp
cwtl
cmc
push
pop
popf
adc
call
xor
mov
adc
imul
jmp
int
incl
or
and
je
dec
lahf
add
or
add
out
out
outsb
jge
daa
fs
mov
imul
pusha
pop
and
jae
clc
mov
jno
test
add
mov
or
xor
xchg
mov
out
cs
xchg
lret
sub
mov
mov
nop
xor
mov
inc
loopne
add
mov
jecxz
imul
push
fcoms
xchg
mov
mov
or
movsl
or
fs
mov
mov
push
jp
mov
jbe
sahf
mov
cmpb
scas
aam
cmp
loop
cmp
or
pop
ljmp
lods
cmpsb
mov
outsl
sbb
or
ljmp
ret
xchg
test
jg
mov
ret
xchg
fisttpl
mov
adc
fwait
sub
mov
test
xchg
addl
cmp
stos
arpl
mov
lods
xchg
inc
sub
stos
mulb
and
int
pop
scas
test
rcr
jnp
bound
hlt
fisttps
push
in
enter
addl
mov
inc
push
jb
addr16
mov
push
jns
and
aaa
shl
pop
inc
loopne
ror
cmp
in
push
xor
jge
mov
sub
lods
xor
lcall
mov
cs
mov
insb
outsb
fildll
fidivrl
fists
mov
outsl
dec
mov
les
lcall
scas
popa
inc
imul
sti
insb
aaa
gs
xchg
lcall
into
cmp
das
or
mov
pusha
mov
mov
mov
push
xchg
gs
push
mov
rolb
fldl
xchg
stos
stos
sbb
sarb
push
jne
jmp
int3
addl
lret
push
push
ret
pop
insb
leave
imul
sub
int3
into
push
lcall
nop
data16
xchg
dec
or
aaa
loopne
sub
xchg
adcb
or
mov
and
add
xchg
push
jmp
inc
lods
pop
out
movsb
xchg
imul
fnstsw
cmc
pop
jbe
mov
push
repz
scas
xor
cli
pop
popf
movsl
xchg
xor
out
mov
into
insl
iret
pop
xor
mov
push
mov
imul
out
push
repz
xor
leave
mov
stc
inc
sub
mov
xchg
adc
bound
sbb
jo
data16
lods
push
pop
xchg
ljmp
test
outsl
jo
mov
daa
loope
jbe
stos
inc
insl
sub
shl
fisttpl
inc
add
mov
icebp
mov
jg
in
dec
lods
xchg
repz
jns
cld
mov
adcl
loope
jo
test
fs
cmp
orb
pop
mulb
or
insb
and
mov
fcompl
mov
outsl
popa
mov
pushf
inc
sub
ja
mov
out
or
inc
in
ret
popf
xlat
scas
inc
fsubrs
ljmp
dec
pop
jne
push
mov
inc
fwait
das
cmp
xor
arpl
dec
xchg
jo
test
adc
in
xchg
mov
mov
cld
stc
and
jbe
cmp
mov
lock
icebp
sub
iret
xchg
dec
test
outsb
xchg
pop
push
cltd
push
insl
fstl
mov
hlt
or
adc
repnz
dec
inc
sub
loope
lret
ret
mov
enter
jecxz
jbe
sahf
movsl
maskmovq
imull
sbb
testl
or
aad
cmpsb
call
or
dec
mov
imull
nop
cmp
loopnew
inc
je
mov
dec
add
leave
mov
pop
or
xor
cmp
leave
lods
mov
shlb
sub
lret
jmp
cmc
lods
test
xor
lcall
xchg
or
aad
orb
push
add
sub
jb
popf
ja
ret
test
sub
mov
mov
repz
fcmovnb
stc
insb
rclb
xor
sub
pop
sub
add
lret
cmp
sub
xor
out
cmpsb
inc
fstps
xor
loope
fsubl
aam
and
xchg
add
adc
test
push
cmp
and
sub
lcall
fs
pop
xor
mov
leave
test
lods
pop
daa
loop
sub
inc
add
lea
inc
xchg
mov
out
mov
daa
fs
and
cmp
mov
into
mov
in
pop
lods
sub
cld
dec
mov
sub
sbb
or
cld
pop
in
insb
fdivrl
mov
cmp
int3
jl
insb
in
pop
cld
dec
mov
sub
sbb
or
cld
pop
in
insb
fdivrl
mov
cmp
int3
jl
insb
insb
pop
cld
dec
or
pushf
sub
sbb
or
cld
pop
in
insb
fdivrl
mov
cmp
int3
jl
insb
in
pop
cld
dec
mov
sub
sbb
or
cld
pop
inc
fdivrl
xor
push
pop
arpl
enter
in
cli
cld
xchg
lods
jmp
cwtl
js
pop
jl
or
sub
cmp
int3
fcmovu
cli
cld
mov
xchg
inc
dec
pop
pop
push
fs
sbb
sub
cmp
push
sbb
jbe
mov
cmpsb
lods
mov
push
jg
or
push
jp
pop
push
pop
mov
mov
gs
das
inc
jge
mov
xchg
jle
out
and
xor
pop
ljmp
pop
pop
push
jae
xorl
sub
sbb
cmpsl
mov
inc
movsb
fiaddl
les
gs
dec
movsl
dec
cmp
xor
pop
loopne
clc
std
sti
sbb
lret
call
lods
inc
insb
mov
mov
sbb
push
roll
sbb
add
mov
stos
inc
inc
outsl
movsl
or
jp
mov
jg
mov
xor
and
ret
adc
fcoml
or
mov
or
sarb
or
cld
ljmp
pushf
stos
lods
mov
hlt
jb
arpl
xor
repnz
push
mov
sbbb
test
xlat
sti
cvtps2pd
leave
adc
dec
jle
dec
pop
pop
push
lret
lcall
hlt
into
mov
sub
cmovl
imul
mov
cli
nop
repnz
dec
dec
pop
pop
push
jp
or
sbb
sub
cmp
int3
fcmovu
ljmp
pushf
stos
lods
mov
pop
push
jp
or
sbb
sub
cmp
int3
sbb
movsl
jmp
xchg
adc
add
es
std
dec
call
daa
je
mov
xchg
and
or
hlt
inc
cmp
arpl
test
sbb
lea
cmp
leave
cmpsb
inc
test
jp
push
lock
lock
dec
enter
pop
mov
fists
addr16
dec
rcrb
jle
adc
adc
sbb
and
jmp
jg
pop
mov
insl
or
dec
in
mov
mov
push
aad
adc
fimull
push
pusha
mov
push
pop
mov
pop
xor
insl
cld
iret
pop
adc
ficoms
pop
mov
dec
testb
or
xchg
mov
imul
mov
jp
and
mov
rcr
push
in
sbb
outsl
sbb
pop
xchg
sub
mov
xor
xchg
jmp
sub
mov
cmp
lods
mov
jnp
leave
inc
adc
mov
and
enter
ret
xchg
jne
xchg
test
fisubrl
adc
xor
js
mov
lods
outsb
push
sbb
popa
and
out
out
dec
lock
mov
mov
push
or
xchg
popa
dec
dec
leave
mov
jnp
xchg
aaa
loope
sbb
xchg
divl
cwtl
popa
cmp
adc
mov
cwtl
cmp
dec
mov
cmpsb
push
ret
pop
push
stos
daa
js
daa
add
adc
dec
and
aas
mov
adc
jae
adc
out
mov
sub
mov
cld
adc
and
mov
into
pop
push
adc
mov
dec
xchg
dec
stos
cmp
xchg
lret
pusha
xchg
inc
fnstenv
cwtl
push
ss
xor
ss
or
sbb
push
jl
inc
xor
lods
loope
cld
sti
outsb
shrb
gs
ret
sub
xchg
mov
dec
push
or
pop
inc
adc
xchg
pushf
cmp
jnp
mov
sbb
imul
pop
inc
dec
push
jo
adc
gs
mov
cmp
gs
xor
jnp
push
aam
ret
mov
stos
stos
push
lret
inc
iret
add
xlat
std
sbb
mov
sub
int3
bound
fs
push
lahf
lock
lahf
mov
mov
adc
es
jmp
pop
stos
dec
push
lods
popa
sbb
add
int
pop
outsb
fistps
clc
inc
push
cmc
xor
out
mov
aam
sub
or
in
add
inc
jmp
add
inc
push
scas
insl
je
clc
rcrl
sbb
dec
inc
fimuls
sbb
cmp
jo
dec
add
mov
movsl
mov
sub
sbb
lock
xor
or
sub
cmc
out
out
inc
push
fucom
push
mov
add
mov
mov
push
lods
adc
and
xchg
test
jmp
add
xchg
pop
push
and
inc
lods
and
pusha
pop
inc
lock
inc
push
out
sub
jl
inc
pop
mov
add
inc
jns
cltd
pop
push
xor
data16
jnp
xchg
add
test
mov
and
xchg
stos
pop
cmp
movsl
jns
inc
sbb
cmc
std
insl
sbb
stos
daa
xchg
aas
popf
loope
dec
inc
sbbb
add
push
sbb
mov
std
fmull
mov
test
sub
dec
es
sarl
aaa
cmp
xchg
sub
or
repnz
cmp
aad
jg
cmpsb
ljmp
loopne
xor
insb
sub
movsb
repnz
adc
sub
inc
xor
loopne
xor
add
mov
loopne
pop
adc
ss
daa
ljmp
pop
repz
imul
and
jmp
cmpsl
jo
sub
pop
data16
clc
cmp
repz
sub
xchg
inc
mov
push
jbe
add
stos
xchg
outsb
stos
xor
jp
jae
pop
mov
xchg
xchg
jnp
sub
fcomip
iret
lcall
movsb
jns
cmp
xor
mov
adc
popa
xchg
lcall
test
clc
push
arpl
cmpsb
out
dec
adc
shlb
xchg
lods
arpl
shlb
mov
ss
loop
dec
inc
sahf
inc
mov
rorl
insl
mov
aad
popf
rorl
push
push
popa
sbb
je
dec
popa
das
and
xchg
scas
or
test
pop
xor
std
ror
aaa
sub
add
bound
mov
pop
scas
ja
and
test
add
pop
jne
and
dec
arpl
leave
rolb
fmuls
cmpsb
ja
inc
pop
es
sub
scas
aas
and
sbb
dec
jb
hlt
mov
mov
scas
inc
leave
cmp
arpl
adc
or
imulb
sub
cmc
into
hlt
aam
inc
sbb
jmp
xor
lret
mov
inc
shlb
jo
dec
sub
jb
jo
rclb
scas
jmp
shr
jno
jecxz
add
add
in
hlt
mov
jo
sub
adc
arpl
xor
sub
cmp
lods
je
sbb
fucom
idivb
imul
mov
xchg
sbb
lea
sbb
xor
loopne
xchg
dec
mov
fimull
stc
adcb
inc
es
or
fwait
sahf
push
roll
xchg
fld
adc
mov
xchg
and
mov
xchg
es
jp
mov
mov
xchg
addr16
repz
xor
dec
or
loopne
enter
popa
test
add
inc
adc
mov
cmpsb
mov
adc
inc
xchg
scas
push
shlb
inc
cltd
add
fadd
cmp
stc
sbb
fnstcw
flds
mov
fildll
push
push
cmp
jae
int
sbb
mov
fldenv
pop
ret
xchg
stos
pusha
jmp
out
xor
sub
imul
dec
loopne
fistpll
cmp
xchg
and
cmc
roll
mov
pop
jp
movsl
adc
push
xor
clc
aas
scas
xchg
es
add
push
je
mov
lods
jp
imul
ret
into
xor
jmp
jle
inc
and
xchg
mov
imul
dec
icebp
rorb
js
in
pop
lea
les
stc
test
xlat
das
xchg
jl
cltd
sbb
xchg
out
and
or
adc
add
or
jnp
jle
leave
mov
xor
inc
and
xor
rcrl
mov
sarb
and
stos
sahf
or
xlat
icebp
shrb
repnz
mov
jno
test
push
xchg
pop
push
mov
mov
cmpsb
lods
inc
lea
mov
aaa
or
pop
lret
leave
mov
push
add
idivl
icebp
aad
push
arpl
xlat
mov
outsb
shll
test
pushf
fidivs
jo
loop
and
repz
clc
adc
lret
jmp
sahf
jne
hlt
pop
jp
pop
popf
add
add
iret
mov
mov
fsubr
jl
js
fbld
ss
xchg
fs
push
rcrb
fnsave
and
enter
xchg
insl
mov
fiadds
or
popa
xor
fs
cmc
jne
push
rcll
push
sub
sbb
inc
add
fs
mov
mov
aaa
xor
enter
cmc
pusha
or
jmp
out
fisttps
mov
xchg
test
jl
and
dec
jl
nop
sub
mov
sub
or
out
mov
shll
jo
repz
filds
mov
adc
imull
fs
scas
fisubrl
mov
sbb
mov
adc
pop
adc
mov
xchg
ja
sbbl
outsb
scas
pop
pop
jne
cmp
jg
mov
fsubl
sbb
pop
fisubrs
out
lods
ret
push
jb
int
mov
jge
add
push
dec
add
into
cli
popl
mov
outsl
jnp
push
cmpsl
and
addr16
sbb
mov
rcrl
lret
sub
les
xlat
ret
je
fldl
push
js
xchg
ds
popf
shlb
or
mov
jecxz
xchg
and
stc
cmp
cmpsb
cli
aaa
jmp
ss
inc
ffree
imul
inc
aad
inc
into
aas
add
fdivl
ljmp
xchg
popa
or
fmulp
rcl
xchg
sbb
sbb
cmpl
or
mov
lods
imull
mov
or
popa
lods
leave
xor
jge
dec
cmp
inc
and
add
push
push
mov
xlat
dec
dec
fucomp
push
std
push
stos
imul
cmpsb
and
cmc
fiadds
push
sarb
out
jns
stc
div
arpl
adc
or
out
mov
imulb
adc
call
mov
cmp
mov
out
sub
jge
fcmovnbe
fdivs
pop
test
xor
mov
mov
sub
jbe
das
in
add
addr16
test
sbb
pop
fmull
pushf
cld
cmpsl
pop
loope
pop
and
lods
scas
cmc
dec
shr
dec
mov
jo
repz
jg
add
dec
icebp
xchg
flds
les
xor
loop
jl
sub
mov
push
inc
xchg
dec
scas
jge
les
mov
dec
outsl
nop
or
dec
mov
adc
fcoml
cmp
pop
push
jno
adc
testb
push
mov
add
xchg
push
in
dec
jns
mov
mov
subl
pop
fiadds
pop
xchg
lret
push
sbb
clc
mov
sbb
or
adc
adc
mov
push
or
icebp
hlt
notl
insw
mov
sub
jge
into
sbb
dec
sbb
js
adc
and
cltd
scas
in
into
ffree
sub
xor
int
loop
cs
jne
in
nop
or
iret
ret
jecxz
ret
sub
mov
cmp
iret
jbe
je
gs
fstpt
sbb
push
inc
out
outsb
sarb
inc
sub
call
mov
loop
inc
xor
lock
pushf
ret
or
push
lods
out
sbb
dec
add
xchg
xor
rcrb
mov
icebp
jg
aaa
pusha
inc
mov
jg
gs
fsubrs
icebp
lods
mov
mov
stos
xchg
std
orl
fisttpl
adc
push
inc
pusha
hlt
push
cmpsb
adc
mov
inc
or
xor
mov
out
inc
adc
jae
cmp
xor
jns
pop
pop
inc
shlb
push
and
sbb
rorb
xchg
and
int3
sbb
movsb
mov
je
stos
cmc
fadds
push
sub
cwtl
enter
gs
or
mov
std
mov
xchg
push
mov
mov
add
arpl
sbb
out
cmpsl
push
xor
enterw
imul
or
in
jb
cmp
test
loope
lock
rcll
mov
sarl
inc
lods
js
cltd
push
adc
xchg
ljmp
pop
aas
mov
das
dec
xorb
push
add
pop
cmpsb
push
add
cld
xor
fsub
sbb
repnz
gs
pushf
test
test
mov
stc
or
out
in
inc
popa
in
shl
aaa
add
mov
lock
add
out
xchg
mov
pop
aaa
stos
cld
icebp
shr
inc
mov
mov
shl
scas
loopne
cmp
sub
faddp
mov
add
mov
js
sub
cli
fimuls
decl
fimuls
sub
mov
roll
xorb
outsl
leave
inc
mov
add
cltd
add
cmp
push
mov
xchg
adc
sbb
mov
decl
sub
pop
mov
test
mov
sbb
mov
cmp
sbb
les
lea
push
lcall
fisubs
test
imulb
sub
jns
imul
inc
or
mov
std
cwtl
inc
add
jp
mov
sub
imull
mov
push
and
fidivl
xchg
call
jbe
dec
subl
mov
sbb
lcall
jle
addb
jle
aas
test
sub
leave
enter
xor
popf
cmp
mov
push
xchg
dec
mov
adc
jns
mov
cmp
or
movsb
sbb
lret
mov
test
mov
mov
or
and
fwait
cmp
add
sbbb
popf
pop
add
leave
or
ss
add
xchg
mov
gs
pop
mov
movsl
or
shrl
rcrb
pop
push
les
outsl
in
adc
xlat
dec
or
adc
pop
icebp
fcmovnu
icebp
cmp
hlt
push
stos
dec
mov
dec
lods
imul
pop
imul
cmc
fistpll
fcmovne
stos
and
loop
sbb
mov
mov
lcall
xlat
ret
xor
cmp
out
add
leave
stos
push
mov
pusha
xchg
mov
fsubr
adc
mov
aaa
mov
xchg
jge
andb
shll
xchg
and
push
adc
fsubrs
jle
out
js
call
js
shll
inc
mov
add
arpl
pop
sub
mov
jmp
incl
je
xor
xor
adc
int
or
pop
cmp
cmc
cmp
and
repz
jmp
mov
xchg
aas
jg
lea
push
aam
cld
dec
ficompl
out
inc
mov
and
jbe
and
pop
push
in
out
inc
adc
push
outsl
fbstp
negl
cmovle
rorb
invd
mov
or
mov
xorl
or
aad
and
xlat
xchg
dec
call
cmp
sbb
jnp
push
test
adcb
push
mov
lds
mov
xchg
loop
xchg
stos
push
mov
pop
out
or
popf
jmp
lahf
inc
aaa
cmpsl
gs
jbe
push
movsl
mov
in
lods
cmp
in
and
jb
rclb
js
push
mov
mov
sub
mov
test
rep
fstpt
loopne
mov
jno
shll
dec
test
test
mov
sti
aas
mov
ret
xchg
mov
pusha
adc
ss
out
jecxz
in
xor
movsb
push
mov
fimull
inc
mov
pop
inc
adc
dec
inc
pop
in
mov
pop
pop
mov
std
jb
dec
or
loop
lds
or
push
enter
nop
ror
call
xchg
cmp
stc
movsl
lahf
push
add
out
sbb
dec
add
loope
jg
ja
jge
adc
xchg
adc
push
rcrl
sbb
mov
inc
loop
adc
sub
pop
lahf
sahf
jb
xchg
push
in
sarb
adc
in
push
rcrb
gs
fisubrs
movsb
rorl
es
xor
mov
and
in
das
scas
movsl
push
lods
fcos
dec
dec
decb
stos
cltd
mov
in
inc
mov
jno
cwtl
sbb
mov
push
push
test
push
rcrl
jbe
std
das
subl
sbb
std
or
dec
xchg
pop
pushf
stc
cwtl
popa
into
test
adc
clc
and
mov
adc
pop
mov
sub
cmp
hlt
clc
xsha1
cmpsb
push
testb
sub
jnp
cmc
sarb
fdivrs
mov
sarb
fstps
sbb
or
jecxz
cs
testb
hlt
faddl
jae
sti
adc
lret
fmull
lods
rep
adc
cmp
pop
fldl
lods
movsl
dec
mov
dec
or
xchg
out
or
std
scas
ret
inc
jmp
jge
in
xchg
jb
push
sub
scas
lods
js
cli
arpl
xchg
xchg
inc
mov
adc
sub
mov
push
or
imul
xchg
or
adc
scas
repz
mov
xchg
lods
pop
pop
data16
testb
pop
in
sub
push
pop
aaa
aad
negb
lock
lea
in
or
cmpsl
jmp
push
aad
add
dec
out
in
nop
hlt
mov
pop
mov
aas
jno
in
test
sti
sub
stos
dec
xchg
sub
or
hlt
mov
std
js
or
mov
xor
fadds
cmp
cmpsl
push
push
loop
add
in
mov
lcall
xorl
dec
aas
and
fstps
push
les
adc
push
xor
cmpsl
sbb
leave
sti
roll
jo
or
ror
cli
lea
ljmp
pop
je
loopne
insb
add
fiadds
add
cmp
adc
fimull
xor
data16
pop
push
sub
out
jno
dec
inc
into
xchg
dec
lea
rorb
in
outsb
mov
daa
mov
iret
ret
jno
add
enter
jmp
pusha
into
pop
mov
adc
add
xchg
ds
enter
push
jle
addl
sbb
xchg
mov
dec
pop
loopne
xchg
mov
sub
gs
orb
sbb
stc
rcl
mov
dec
xchg
lea
jmp
push
jbe
in
xchg
inc
adc
sub
mov
ret
cmp
sysret
imul
scas
fwait
mov
xchg
inc
cltd
and
cmp
push
cs
jbe
add
idivl
pop
fstp
sub
dec
fwait
sub
xor
sahf
cmc
or
add
mov
mov
adc
cmp
mov
jo
add
call
loop
mov
loopne
roll
push
ficomps
fisubs
cmpsb
sub
testl
out
dec
lods
aas
lahf
in
inc
pop
jmp
dec
push
lods
sub
aas
jae
adc
lds
test
jns
inc
pop
out
jge
int3
mov
in
les
cmp
mov
testb
mov
ja
xchg
mov
fcoms
subl
push
pop
xchg
adc
std
std
insb
push
jnp
dec
lret
icebp
fimuls
adc
mov
push
rcll
push
repnz
and
insl
push
iret
movsb
shlb
mov
ror
int
mov
sub
cmpsl
cltd
cmp
ja
aas
daa
xchg
cmp
push
fstpt
sbbl
add
xchg
das
sbb
orl
jmp
dec
push
or
fldcw
rorb
lcall
mov
outsl
loopne
sbb
and
shl
jns
xchg
mov
cmp
icebp
fbstp
push
ficoml
lret
arpl
jns
adc
scas
pop
int3
lea
cmp
xchg
xchg
xor
and
punpckhbw
pop
arpl
jp
cmp
sar
dec
add
xchg
inc
pop
shl
aad
testb
inc
pop
or
xor
cmpsl
out
in
jo
pop
addl
or
std
push
notl
cmc
and
mov
pop
shll
imul
xchg
sbb
mov
adc
outsl
or
enter
rol
or
sbb
xor
cmp
sub
movb
fninit
out
aam
xor
jl
mov
mov
es
jns
fistpl
hlt
mov
test
sbb
xor
cwtl
mov
insb
xlat
lods
repz
fldenv
sub
sbbb
lret
and
idivl
shr
and
push
xchg
ftst
xor
and
xor
in
sbb
push
adc
sub
pop
cmp
mov
adc
clc
cmp
lods
xor
sarl
inc
fmuls
aam
jae
push
div
add
ljmp
sub
dec
imul
add
push
mov
bswap
dec
xlat
stc
rclb
sub
loope
aam
sbb
lahf
imul
xchg
mov
adc
mov
out
dec
xor
out
mov
inc
sub
xchg
movsl
test
das
daa
inc
repz
cltd
outsl
sarb
dec
xchg
shlb
xchg
and
inc
sub
fmulp
fwait
jl
popf
xchg
adc
sub
xchg
pushf
cmp
pop
hlt
mov
inc
addl
jl
pop
mov
ljmp
cmc
xor
and
mov
add
inc
loope
stc
push
lock
adc
pop
add
jb
fsubrl
sbb
jo
leave
inc
pushf
add
sbb
filds
xchg
pop
outsb
xorl
sbb
clc
sbb
push
dec
into
sbb
lock
aad
mov
js
jp
iret
aas
xchg
jo
ret
sub
scas
and
or
fiadds
fs
sbb
dec
fcoml
inc
pop
dec
jo
insl
or
inc
mov
andl
in
lret
iret
add
inc
jae
mov
or
xor
mov
popf
pop
in
adcb
push
fmull
mov
mov
push
jp
or
sbb
sub
cmp
int3
fcmovu
ljmp
pushf
stos
lods
mov
pop
push
jp
or
sbb
sub
cmp
enter
hlt
cli
clc
mov
mov
outsb
insb
jp
or
push
sbb
and
out
cmp
or
mov
sub
jl
mov
test
jp
jge
xchg
fs
lds
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
out
imul
mov
lret
fcoms
pop
jmp
cltd
incl
or
or
add
add
aas
add
add
add
add
inc
add
lahf
add
arpl
adc
aas
add
add
add
lahf
add
pop
add
verw
add
data16
stc
add
add
add
mov
das
add
add
add
insl
add
leave
add
add
pop
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
mov
test
out
add
add
enter
arpl
add
push
add
add
add
add
add
add
add
add
pop
add
add
add
xor
leave
add
add
add
add
add
inc
add
add
enter
add
add
add
ljmp
add
add
add
add
iret
add
xor
add
cmp
mov
inc
add
push
add
add
int
popa
add
cmp
stos
add
add
add
add
add
add
xor
add
mov
add
stos
add
add
push
add
fwait
add
add
aad
adc
lret
add
pop
add
add
push
add
add
add
add
cmp
add
push
add
add
movsb
add
aas
add
add
add
pop
add
mov
cmp
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
mov
das
add
add
mov
add
push
add
add
pop
add
lret
add
add
add
add
add
add
add
add
add
ret
add
add
pop
add
add
add
add
add
add
mov
inc
add
sbb
faddl
add
ljmp
add
add
add
fiaddl
popa
add
fiaddl
verw
ret
add
add
add
add
inc
add
jnp
adc
pop
add
add
add
add
add
mov
add
add
add
add
push
int
add
inc
add
mov
loop
lcall
add
add
add
cmp
stc
add
push
add
popa
add
insl
add
add
add
add
jmp
add
add
add
push
add
add
add
add
jge
movsb
add
add
add
enter
inc
add
add
flds
mov
add
add
add
adc
popa
add
add
sbb
add
add
add
pop
add
add
add
add
add
add
adc
add
add
add
jmp
add
cltd
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
les
rolb
push
add
add
cltd
add
popa
add
mov
add
dec
add
daa
add
mov
add
add
add
add
add
add
das
add
add
int
inc
add
add
or
mov
orb
jl
lock
pop
int
dec
xor
loope
lock
mov
adc
ret
xchg
push
std
test
sub
test
arpl
cmp
fistpl
push
lods
pop
ljmp
push
jge
arpl
push
mov
or
fstpt
loope
sub
mov
cwtl
enter
mov
xchg
mov
push
fs
xchg
enter
adc
test
sub
stc
mov
mov
daa
jle
and
and
push
jnp
jmp
push
push
mov
lahf
cmpl
in
xor
hlt
cmp
sbb
in
lods
clc
lods
icebp
stos
jb
loopne
mov
mov
adc
xchg
inc
mov
insl
pop
mov
clc
push
jns
leave
es
pop
mov
bound
ss
dec
outsl
xor
fs
lds
adc
imul
pop
inc
xchg
sub
les
lock
sub
push
aad
jecxz
pusha
psadbw
mov
jp
adc
rcl
or
mov
repnz
shll
pop
or
outsl
mov
lcall
pop
int3
inc
aad
pop
push
cltd
mov
ja
sti
mov
xor
sbb
pop
pop
mov
dec
loopne
sbb
pop
rolb
jmp
loopne
iret
mov
leave
imul
jl
jmp
xchg
pop
adc
popa
inc
pushf
pop
add
xchg
cmp
popa
add
mov
mov
fmull
je
cwtl
xchg
sbb
shlb
aam
xor
push
ja
std
pop
xchg
mov
and
nop
rcrl
in
test
sarl
inc
movb
repz
insl
xor
mov
jb
inc
mov
loopne
xchg
int3
int3
mov
ret
insl
mov
fcomps
and
mov
mov
inc
push
enter
repnz
test
fmul
cmp
mov
dec
fs
pop
fists
lea
fmull
sub
mov
adc
test
gs
sbb
fidivrs
sub
mov
idivl
xor
insb
adc
cwtl
inc
inc
sub
test
dec
out
xorb
add
mov
pop
mov
mov
out
and
mov
add
pop
out
jmp
and
addr16
xchg
mov
jo
subb
sub
dec
lods
adc
enter
inc
jno
inc
pop
cmp
jge
scas
daa
ljmp
push
lret
sbb
movsb
mov
jne
addr16
mov
andl
gs
jbe
js
lahf
push
dec
jno
xchg
je
adc
out
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
