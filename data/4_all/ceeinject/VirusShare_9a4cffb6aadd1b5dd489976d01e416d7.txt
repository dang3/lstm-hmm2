call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cli
jmp
into
mov
lock
mov
pop
dec
dec
cmp
sub
sbb
sbb
popf
jmp
into
mov
sahf
mov
jns
imul
pop
sub
sbb
or
inc
sbb
dec
ficoms
into
cmpsl
mov
mov
xor
sub
push
js
jb
jnp
jns
mov
sahf
test
mov
std
pop
xchg
push
add
sub
loope
lret
adc
inc
xchg
scas
sub
adc
add
outsb
sbb
pop
jne,pn
sbb
lods
lods
or
or
call
dec
das
jle
outsl
dec
pop
dec
mov
shrl
xor
sti
cmp
and
scas
xchg
mov
subb
cwtl
mov
cs
sbb
push
push
ds
stc
and
xor
add
pop
mov
sub
loope
add
clc
fsubs
movb
and
dec
jle
push
sub
jle
push
or
mov
fmulp
into
pop
mov
das
mov
pop
jns
jno
and
sub
or
fwait
xchg
lods
lahf
mov
stc
sti
mov
jns
cmp
or
inc
imul
mov
sar
int3
jmp
leave
fsubl
pop
cmp
sbb
pop
inc
mov
xchg
mov
lcall
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
stc
jmp
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
stc
decb
sbb
inc
sub
adc
jo
sub
cltd
movsb
pop
int
shlb
out
sub
push
adc
in
mov
lock
adc
stc
inc
in
in
aaa
push
out
inc
sub
sbb
mov
add
enter
xchg
jge
cwtl
call
push
call
sti
jl
xchg
idivl
xchg
inc
into
xor
call
leave
fstpt
ss
inc
ljmp
insl
ja
adc
pop
das
hlt
jo
sbb
negb
pusha
inc
pusha
cmp
cmc
fstl
mov
shl
frstor
test
hlt
mov
add
inc
sub
jnp
add
mov
int
sbb
sub
fcomps
xchg
lahf
cmp
push
ror
movsb
jae
pop
mov
mov
xchg
cld
mov
inc
push
imul
sub
push
popa
fidivl
insb
imul
cltd
aas
out
jno
mov
mov
sub
xor
flds
outsb
inc
push
mov
aam
test
sbb
mov
dec
in
adc
mov
mov
sub
out
loop
ljmp
push
lods
in
and
mov
xor
ss
stc
inc
inc
dec
jb
lcall
pop
ds
in
mov
rcr
popa
lret
adc
cwtl
lds
fstpl
xchg
cmp
jmp
jo
pusha
lock
mov
leave
push
cli
orb
cmp
mov
xor
mov
gs
push
lea
fs
xchg
ret
mov
xor
push
jle
cmp
sub
pop
push
fisttpl
loope
add
ds
notb
mov
aas
or
inc
fsubrs
pop
and
push
mov
push
les
loop
jns
inc
sbb
nop
push
inc
sbb
cmpsl
in
sbb
mov
mov
add
outsl
jne
int3
xchg
sbb
shrb
push
loop
jns
in
inc
out
in
and
and
or
je
push
imul
jae
pop
dec
subb
mov
fnstsw
loop
ficompl
iret
cmp
lret
jge
push
sbb
sub
jecxz
xchg
pop
lds
fnsave
add
and
movsb
xchg
dec
xchg
imul
push
or
addb
aaa
jne
xor
sbb
loop
mov
lods
aad
aam
into
fwait
jecxz
ret
dec
test
jae
insl
cmpsl
fs
or
mov
jno
cmpsl
stc
sub
fdivp
mov
mov
mov
mov
mov
pop
sbb
fs
lsl
or
push
xchg
int3
psubusb
inc
mov
mov
cmp
mov
frstor
mov
ja
mov
ja
cmpsl
repz
and
loope
push
mov
les
gs
loop
mov
cltd
orb
mov
cmp
add
imul
mov
insl
dec
movsb
mov
dec
add
xchg
mov
push
xor
scas
lea
push
jne
xchg
push
mov
and
fimuls
sub
fisttpll
dec
ljmp
ret
xorl
icebp
das
push
jnp
cmpsb
iret
jge
stc
in
insl
mov
and
cmp
pop
xchg
dec
aad
outsl
cmp
xchg
and
lret
jo
out
es
mov
leave
or
pop
sub
in
sub
add
ret
sahf
and
popa
sbb
in
sub
pop
adc
popf
lret
fdiv
xchg
mov
inc
jb
jmp
and
lahf
out
loope
sbb
invd
add
push
lea
les
mov
sbb
mov
push
or
mov
aam
cs
and
rclb
mov
mov
mov
jecxz
frstor
jno
pop
pop
ss
clc
xchg
dec
mov
out
push
cvtdq2ps
lock
loope
fcmovu
sub
ficomps
test
adc
sub
sub
fisubrl
stc
lret
test
mov
je
push
fwait
es
adc
in
mov
xchg
test
push
mov
push
ficomps
sbb
aad
scas
cmp
dec
mov
xor
adc
aam
adc
in
popa
or
mov
out
and
imul
mov
aaa
nop
and
push
mov
dec
jbe
pop
xor
cmpsb
dec
mov
les
mov
clc
dec
xor
xlat
rcrb
orb
rcrb
pop
lea
adc
arpl
mov
andb
shlb
hlt
dec
insl
jnp
rcr
loop
dec
and
jp
je
jo
pusha
mov
mov
loop
push
int
cmc
jo
lea
in
add
add
xor
mov
enter
mov
or
mov
jno
inc
jo
xchg
jbe
adc
push
cmc
or
xchg
cmp
mov
jl
cld
jo
dec
push
lret
fs
inc
xor
push
ds
push
insl
lods
mov
or
in
lds
add
mov
inc
jle
inc
addr16
inc
pusha
mov
add
add
daa
sub
xor
sub
out
xor
outsb
xchg
aaa
scas
call
ljmp
cwtl
jo
movsl
outsb
lods
into
jecxz
push
aam
ficompl
mov
stc
gs
arpl
cmp
icebp
arpl
xchg
mov
pop
movsl
add
bswap
cmp
lcall
xchg
in
or
clc
xor
or
cmpsl
fadd
mov
fisttpl
xchg
sbb
das
push
dec
sub
mov
mulb
fcomps
imull
cmp
push
cmp
sub
dec
popa
jb
mov
pop
ret
movsl
cld
xor
pop
xchg
lock
jne
or
push
pop
jno
popa
aas
out
cli
aas
pop
cmp
mov
adc
jmp
adc
inc
add
pusha
rcr
mov
push
sti
add
cmp
push
mov
dec
sarb
pop
lods
cmp
movl
and
out
or
out
stos
cmpsb
and
test
jge
pop
push
mov
add
jmp
fnstcw
cwtl
clc
lods
aam
mov
call
pop
movl
enter
cmp
jb
mov
fistl
clc
subl
sbbb
push
xchg
inc
dec
add
popa
sbb
cmpsb
mov
sub
fiadds
fldl
cmp
daa
mov
repnz
ds
and
mov
dec
push
xor
push
sub
adc
cli
jne
insl
cmpsb
loop
dec
lahf
sub
cld
movsb
ljmp
lock
pop
imul
sbb
mulb
in
and
sahf
mov
sbb
mov
inc
rcl
cs
scas
sbb
lahf
jno
inc
enter
movsl
jns
add
scas
js
bound
addb
mov
in
repnz
xchg
inc
mov
mov
pop
outsb
jbe
in
in
xor
js
cmp
sbbl
rcrl
fisubl
fs
aaa
or
lahf
jae
inc
inc
popa
add
insb
sbb
int
dec
test
inc
test
fs
gs
out
push
mov
fbstp
dec
push
dec
lds
icebp
fiaddl
inc
push
fimull
movsb
outsl
push
gs
xchg
nop
adc
xchg
push
test
pop
lcall
mov
fistpll
add
cld
fcmovb
fstps
adc
psrlw
xchg
test
or
dec
mov
dec
lock
ret
and
mov
popa
jns
push
mov
push
jno
jmp
jg
out
xchg
ljmp
push
jne
add
outsb
inc
push
mov
mov
insl
lods
pop
lea
fld
jae
loopne
rorb
push
push
fldl
inc
inc
cmp
and
es
loope
mov
scas
sbb
js
xchg
dec
sbb
movsb
jle
repnz
ret
push
push
dec
mov
outsl
lock
in
cmpsb
scas
lret
ljmp
xchg
xchg
fsubrs
or
mov
aas
mov
pusha
rcr
sbbl
out
adc
dec
mov
stos
out
nop
js
lret
loop
jmp
jg
movsb
inc
lret
aas
and
loope
sub
repnz
hlt
adc
mov
fildl
cli
std
lldt
imul
movsb
out
inc
push
arpl
fldenv
aas
push
pusha
leave
mov
test
cmpb
lret
pop
jns
pushf
push
daa
in
in
push
mov
mov
xor
mov
xor
ss
push
in
movsb
mov
jge
mov
das
jnp
test
xor
jmp
and
dec
push
dec
jle
int
adc
test
sahf
test
repnz
add
mov
leave
push
arpl
test
and
mov
or
iret
xchg
shll
jp
xor
or
shll
or
jp
aad
rclb
adc
stos
mov
sbb
mov
xchg
sub
xor
jne
mov
dec
and
popf
int
sahf
lds
xchg
stos
lock
push
adc
mov
pop
sar
cli
jmp
jle
cli
push
cwtl
bound
out
je
fwait
dec
out
das
pop
push
xchg
test
cmpsl
jle
out
sub
ret
imul
mov
pusha
cmp
imul
ja
outsb
push
imul
sbb
mov
pop
cltd
jge
xlat
jecxz
arpl
pop
int3
iret
xor
add
dec
loopne
mov
fcoms
pop
or
leave
mov
adc
popf
jnp
loopne
push
add
xor
aad
jmp
pop
ljmp
xchg
xchg
ds
ret
stos
jnp
and
pop
addr16
push
xchg
sbb
pop
pop
mov
mov
pusha
shrl
hlt
jne
add
add
divb
xor
inc
aad
sub
test
cmp
add
insl
repnz
push
aas
hlt
aaa
mov
push
popf
leave
jg
sub
sub
xor
mov
fisubl
sub
mov
addr16
xchg
sbb
fildll
xor
lods
dec
imull
add
xchg
push
jmp
in
adc
pop
push
aam
cmp
adc
sub
sbb
mov
rol
mov
scas
adc
add
out
push
js
addb
js
mov
pop
ficoml
cmp
xchg
clc
dec
dec
adc
hlt
add
lea
ret
sub
daa
int
test
jo
repz
fstp
outsl
loope
xchg
movsb
and
pushf
adc
pop
divl
movsb
or
outsl
adc
jae
mov
stos
push
push
xor
push
xchg
js
out
rolb
int
data16
sub
les
cs
gs
imul
mov
pop
ss
movsb
mov
into
lret
cmpsb
ja
loopne
sub
enter
mov
push
jmp
xchg
push
hlt
or
cs
sbb
inc
lahf
sbbb
mov
mov
lahf
cmpsb
sti
cltd
mov
mov
lds
sti
cld
pop
bound
testb
lds
test
rcl
add
loopne
les
lahf
sbb
pop
repz
mov
bound
xor
andb
jl
jp
lods
xchg
push
jle
addr16
adc
sub
push
lret
fucompp
ss
loop
dec
mov
inc
push
inc
sub
shl
arpl
ss
pop
js
xchg
imul
push
ret
mov
iret
mov
mov
and
mov
std
dec
cmc
fstps
cmp
into
inc
fstps
pop
call
sti
dec
pop
pop
push
scas
addr16
inc
shlb
dec
push
cli
xchg
inc
scas
jno
out
pop
xchg
repz
iret
cmp
pop
fsub
gs
dec
mov
push
cli
mov
adcl
pop
daa
rcrb
inc
inc
sbb
push
lds
or
add
dec
mov
jmp
rorb
fdivp
sbb
cmpsb
and
mov
add
insb
xchg
mov
or
movsb
dec
cltd
pop
xor
fbld
pop
push
add
ret
cmc
out
push
imul
shrl
icebp
push
imul
dec
outsb
ficompl
daa
insb
mov
xor
mov
or
adc
icebp
mov
push
xchg
xor
out
mov
pop
sarl
lea
sub
or
arpl
scas
mov
xchg
leave
jge
sbbl
mov
sbb
sub
sbb
lahf
inc
mov
sub
rolb
sub
call
sbb
mov
push
mov
or
pop
mov
push
and
adc
add
ret
or
dec
popa
insb
pop
enter
jmp
loopne
jmp
pop
xchg
loop
cmp
sbb
cmpsl
cmp
fsubrs
fisttpl
test
popa
dec
mov
sbb
fwait
dec
sbb
xor
push
fldl
in
les
sbb
jbe
js
dec
dec
or
test
fs
xchg
adc
mov
cmpsb
mov
loopne
inc
push
inc
pop
sahf
cmp
cmp
add
xchg
ss
movsb
mov
nop
mov
dec
outsb
inc
mov
jge
inc
or
adc
flds
arpl
xor
jns
outsl
out
xor
xchg
sbb
pusha
xchg
xchg
mov
out
and
pop
inc
push
jb
and
mov
ret
sahf
mov
xchg
pusha
std
mov
push
xchg
les
std
lret
sti
xor
test
xchg
add
rcl
jb
pop
mov
pop
popf
fiaddl
ja
fxch
fs
fldl2e
sahf
out
inc
pop
sbb
stos
push
inc
jp
jmp
cmp
xchg
or
lods
mov
clc
push
pop
cmpsb
push
pop
addb
aas
test
mov
dec
and
cltd
nop
pop
pop
mov
or
out
aas
push
out
push
inc
push
cmpsb
fmuls
mov
movsl
pop
scas
push
lea
fmulp
shlb
fcmovnbe
pop
loopne
fs
pop
mov
fbstp
jl
dec
pop
pop
cmp
adc
mov
xlat
xor
stc
jb
xchg
icebp
xchg
cmp
repnz
mov
out
pop
sub
push
sbb
xchg
xlat
push
lds
sub
xor
imul
insl
sbb
jbe,pt
std
pop
repz
push
mov
xchg
dec
or
sub
shlb
cmpsl
mov
cmp
jge
or
pop
push
sti
pop
xchg
push
xchg
stc
add
lock
and
jle
dec
lods
and
xor
mov
sbb
rorl
das
and
xor
mov
fcompl
mov
bound
sub
mov
imul
insl
cmp
movsb
je
mov
popf
and
xchg
push
rorl
into
test
jg
sbbl
test
gs
loop
mov
out
sti
cmp
mov
xchg
mov
insl
cmp
lret
xchg
repnz
nop
pop
xor
loop
clc
dec
in
xchg
pop
mov
and
jbe
fs
sbb
stos
int3
movb
popf
pop
ja
ss
push
pop
ss
push
jne
loope
sbb
xchg
cmpsl
das
adc
bound
dec
sbb
adc
xor
test
lods
lahf
movsb
jnp
ss
or
aam
add
push
mov
int
mov
push
lcall
inc
aam
dec
xchg
push
pop
xor
sbb
push
jbe
sti
dec
and
cli
and
sub
iret
lcall
jl
sti
xchg
adc
pop
jbe
xor
lcall
mov
lods
test
data16
lcall
fldt
iret
and
push
pop
jno
insb
sbb
add
fdivr
movsl
add
dec
sarb
cwtl
mov
sarl
rcr
jp
cmp
xchg
sub
cmpsl
sti
ret
aas
jp
repz
test
lea
push
sbb
jo,pt
mov
pop
sub
or
cmp
pop
dec
mov
decb
enter
sub
cmp
mov
cmp
inc
mov
adc
mull
movsl
cli
sbb
jp
mov
shl
shll
dec
sub
xor
lock
sbb
outsl
aam
mov
mov
and
mov
xchg
push
sti
pop
lcall
addr16
xor
mov
cli
adc
or
fninit
cmp
fmull
stos
movsl
in
adc
sarb
call
jle
push
cmp
mov
int3
mov
std
jl
outsl
cmp
je
sub
jmp
xchg
xchg
sti
xor
push
cmpsl
and
jnp
idiv
mov
mov
mov
jae
es
out
sub
jg
sti
outsl
jl
jae
dec
imul
iret
mov
repz
xor
test
and
divl
xor
xor
inc
and
jo
and
add
shrl
or
add
rolb
mov
cmpl
xchg
mov
xchg
fcoms
sahf
pusha
xchg
cmpsl
mov
mov
insb
sbb
ret
sub
into
push
iret
das
loopne
lods
dec
adc
clc
hlt
xor
add
and
addr16
cmpl
imul
sarl
cs
mov
mov
loop
lret
adc
add
xor
adc
mov
out
repz
xor
lret
out
ss
sub
subb
nop
sbb
loop
add
in
lock
pop
mov
push
push
dec
push
mov
mov
pop
shll
jecxz
dec
cs
lahf
dec
or
mov
cmc
imulb
cmpl
xchg
mov
clc
imul
orl
or
mov
push
adc
dec
out
mov
aam
insb
jecxz
or
nop
clc
daa
into
daa
inc
xor
mov
fwait
pushf
cli
push
jge
mov
repz
std
mov
xchg
sbbb
xor
cmp
lock
ds
fdivrs
xchg
les
aas
popa
inc
sbb
pop
cmc
push
into
xchg
jb
out
cmpsl
addb
shll
sub
lea
xchg
dec
cmp
mov
cmpsl
xchg
cmpsl
mov
pushf
pop
js
mov
subl
mov
sub
int
or
insb
xchg
popa
rorb
pop
inc
lods
pusha
sbb
imul
inc
sub
mov
cmp
or
or
lods
outsb
pop
add
and
or
repnz
loopne
ljmp
push
mov
stos
sbb
sbb
xor
out
mov
mov
jge
outsb
jnp
pushf
mov
mov
jecxz
idivb
adc
xchg
push
fstl
pop
in
push
push
jnp
call
sub
xor
push
out
daa
inc
rcrl
sub
and
pop
mov
jns
pushw
iret
orb
xor
lcall
fwait
out
daa
inc
sbb
xor
pusha
inc
jb
pop
ret
idivb
dec
stc
add
mov
pop
cmp
rol
in
jbe
pop
sti
lds
jns
pop
pop
scas
out
mov
inc
shr
negb
and
in
lret
shlb
daa
fistpl
lret
test
das
nop
dec
jno
nop
xchg
dec
xor
out
jns
lds
fsubr
out
and
iret
sub
mov
cli
cmp
ficoml
aam
push
xor
push
xchg
shll
jbe
pushf
xchg
inc
sub
ljmp
xchg
mov
pop
aas
lock
fisttpll
dec
push
leave
cmp
pop
movsb
sahf
inc
jns
mov
cmc
sub
daa
ljmp
adc
mov
icebp
pop
cmp
dec
fisttps
mov
iret
lea
sub
push
xor
jp
push
test
xchg
fs
je
fucomp
scas
push
cltd
mov
bound
rcl
call
scas
jg
sbbl
out
sub
sub
and
xor
inc
xchg
arpl
pop
das
push
xor
clc
dec
sub
out
xchg
orb
xchg
adc
adc
xchg
mov
into
fisubrs
mov
or
and
inc
xchg
sbb
jle
cmpsb
dec
imul
mov
jg
xor
push
ja
xchg
xor
loopne
add
ljmp
cs
pop
pop
cmp
add
sbb
inc
cwtl
out
pinsrw
push
mov
in
leave
sbb
stos
xor
push
in
imul
imul
je
mov
call
mov
and
adc
data16
xchg
cltd
dec
or
pop
addr16
pushf
cltd
inc
mov
stc
and
hlt
jne
push
aam
lds
sub
cmpsb
xor
out
sahf
fmulp
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
stc
jmp
into
mov
sahf
mov
pop
pop
dec
dec
cmp
sub
sbb
or
stc
fldz
mov
mov
dec
mov
imul
cmp
sbb
loope
in
mov
sbb
into
mov
sahf
or
jle
repz
dec
cmp
mov
icebp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
aas
test
lahf
popf
push
int3
fistps
jmp
pop
sbb
pop
dec
pop
pop
scas
lods
mov
popf
out
in
std
iret
int
repz
sub
pop
sbb
dec
dec
pop
pop
scas
or
jmp
mov
fucomip
das
sub
jp
or
push
sbb
xor
fucomip
mov
clc
fs
add
dec
in
sbb
cmpsb
cmp
add
mulb
jmp
sbb
xor
stc
fisubs
clc
lock
xor
rcll
dec
xchg
js
and
cmpsl
adc
lds
insl
jmp
jne
inc
cmp
outsl
sub
rcrl
sbb
scas
mov
out
stc
ror
das
or
stc
fisttpll
repnz
js
lock
mov
and
inc
inc
fdivl
bound
fdivp
cld
iret
or
and
dec
push
in
pop
in
cmp
pop
push
push
push
mov
dec
cpuid
aaa
push
aaa
mov
jmp
ja
add
pop
aaa
lock
popf
out
in
std
iret
int
dec
das
sub
pop
and
jg
dec
push
pop
outsl
fldt
shl
lods
dec
lcall
outsb
lea
test
jle
sub
adc
cmp
xor
jmp
sti
sti
xlat
icebp
mov
cmpsl
out
jge
push
dec
ja
jp
and
or
pop
sub
xchg
pop
in
loope
icebp
scas
mov
das
sub
pop
sbb
dec
dec
pop
pop
scas
lods
mov
popf
out
in
std
iret
int
sub
pop
sbb
dec
dec
pop
pop
scas
lods
mov
jae
mov
hlt
mov
bound
mov
push
adc
lea
lods
test
xchg
push
mov
add
addr16
sbb
sarl
clc
xor
sbb
xchg
mov
loope
push
scas
fdivr
sub
xor
mov
xor
fidivrl
repz
sub
and
mov
bound
sbb
xor
fs
lret
cli
ja
mov
aas
lea
dec
ljmp
inc
out
lahf
adc
xlat
mov
iret
sbb
lea
ret
nop
test
jmp
xor
mov
out
and
xor
jb
outsl
imul
in
in
dec
jmp
mov
in
xor
loope
shl
mov
sub
mov
push
faddp
repnz
or
or
aad
data16
std
pop
mov
mov
sub
not
cwtl
insl
jmp
mov
add
jnp
call
loope
xor
movups
fbld
or
rorb
push
cmpsl
inc
xchg
and
cmp
dec
aam
faddl
add
pushl
add
mov
push
jge
sbb
mov
dec
sbb
call
sti
out
adc
mov
cmp
out
and
jno
addr16
mov
add
popa
popf
cmp
bound
xor
mov
and
push
shll
movsl
sub
shrl
rorb
test
fisubrs
mov
jle
sub
scas
dec
das
push
mov
fmull
repz
lahf
insl
jno
inc
pop
cwtl
add
mov
dec
inc
test
out
hlt
fnstcw
cmp
mov
orb
push
es
xchg
out
xor
rsm
jecxz
ldmxcsr
and
sar
mov
sub
lock
pop
in
mov
clc
mov
adc
ljmp
daa
and
xor
addr16
push
popl
dec
or
int3
push
repnz
lret
insb
pop
call
fwait
inc
xor
push
aaa
xchg
mov
sub
xor
jno
adc
gs
aas
mov
rcl
loopne
rorb
xchg
daa
lods
stos
push
push
ficoms
outsb
test
sahf
pop
inc
sbb
sbb
cs
mov
cmp
pushf
pop
xor
inc
aam
dec
popa
cmp
ret
sar
inc
and
shl
push
cltd
pop
cmp
xor
cmpsb
pop
fs
mov
enter
repz
mov
dec
mov
clc
mov
pop
shrl
div
pop
mov
sbbb
xchg
lds
mov
test
shll
xor
mov
fldln2
jbe
cmpb
sub
xchg
mov
int
mov
cmp
mov
jns
mov
jne
xchg
push
sbb
sti
mov
pop
dec
cmc
mov
cld
ss
and
ds
xchg
test
xchg
ljmp
popf
or
fucomp
jmp
push
cmc
sbb
rcll
add
rcll
xor
push
xor
ja
out
cmc
daa
push
add
std
push
mov
pop
cwtl
pushf
rcll
int
mov
push
push
out
pop
push
das
cltd
gs
movsb
xlat
fidivs
or
js
scas
dec
cmp
cmp
push
pusha
imul
pop
incl
in
mov
emms
pop
dec
fiaddl
test
ss
stc
mov
push
xchg
int
add
sub
pop
stc
cmp
fldl
pop
pop
adc
xchg
xchg
xchg
dec
mov
fsubrl
sub
imulb
inc
jmp
cmc
leave
repz
das
jae
cmp
adc
and
cmpsb
popa
cmc
mov
xchg
dec
pop
push
in
jbe
or
and
aad
jno
in
push
shll
inc
fcmove
pusha
jle
ljmp
push
mov
mov
aad
push
or
mov
xor
loope
inc
fisubl
sub
push
out
cmp
inc
insl
das
cmpsb
sarb
cmc
aad
pop
iret
jl
adc
js
int
mov
iret
adc
outsb
mov
es
push
add
call
pushf
andl
gs
decl
push
sbb
pop
stos
nop
pop
and
push
xor
out
popa
cld
inc
or
js
adc
inc
and
es
pushf
iret
mov
aam
inc
sub
outsb
push
or
inc
jmp
cmp
jb
imulb
fs
push
jb
xor
aaa
mov
dec
push
push
or
jmp
dec
adc
mov
sbb
ss
cmc
jge
pop
xchg
or
scas
sarl
add
or
movsl
bound
and
jnp
cld
arpl
cmp
ljmp
test
xchg
jno
das
cmp
push
aaa
push
bound
inc
ja
jmp
pop
sbb
xor
mov
jecxz
mov
mov
cmp
stos
push
popf
pop
cli
decb
pushf
inc
in
lods
decb
andb
pop
sub
or
pop
fmul
mov
adc
and
adc
xchg
mov
mov
xchg
insl
daa
stos
add
test
add
mov
cld
dec
sbbl
adcl
repz
je
cmp
pop
xchg
popf
sbb
dec
movsb
mov
out
jecxz
sbb
push
fs
into
inc
outsb
adc
mov
jb
gs
js
xor
pushf
iret
cmc
std
cs
rorb
inc
push
stos
popf
fwait
pop
cmp
dec
mov
inc
and
push
push
inc
cmp
into
xlat
fldenv
dec
into
dec
push
mov
fsts
cmp
push
mov
push
jmp
xor
sbb
shr
aaa
jg
les
dec
mov
sub
push
pop
fnstsw
mov
mov
es
add
je
mov
nop
das
ficompl
mov
outsl
xor
mov
mov
xchg
not
in
mov
or
clc
xchg
add
pop
sub
aas
xor
mov
adc
dec
adc
ja
dec
cmp
stos
mov
lret
xchg
sti
shrd
mov
push
xor
xchg
lret
dec
mov
pop
or
pop
jle
imul
xor
aas
mov
clc
popf
cmpsb
mov
dec
iret
rcll
lahf
push
adc
sub
lods
pop
mov
jle
xchg
mov
jb
sbb
and
sbb
xchg
insl
push
cld
pop
fistpll
xorb
imul
call
sub
push
les
sahf
jo
mov
ss
mov
push
enter
cmp
or
mov
cmp
js
mov
jb
mov
rol
popl
lock
ja
in
pop
stos
cmp
jb
icebp
sbb
and
pushf
into
js
pushf
mulps
xchg
aas
faddl
cmp
mull
bound
mov
mov
pusha
mov
daa
fs
dec
hlt
jmp
in
sbb
gs
and
sbb
push
pop
fcmovne
xchg
push
nop
ficoml
dec
test
mov
sbb
out
cmc
mov
aam
in
xchg
xchg
cwtl
in
push
and
lea
adc
xchg
cs
call
mov
and
cwtl
push
or
call
jmp
js
fsubs
bound
and
or
mov
adc
xchg
jae
inc
adc
repnz
lret
or
cmc
data16
xor
fcomps
movsl
popa
in
in
lahf
sahf
mov
cltd
subb
mov
cmp
or
jl
push
xchg
inc
jl
inc
cmpsb
xchg
jns
cltd
not
adc
push
repz
aas
pop
cmc
mov
or
repnz
mov
adc
and
adc
xchg
jg
push
add
mov
xchg
push
push
test
jns
cmp
push
fmuls
cwtl
xchg
shrb
adc
dec
dec
cwtl
scas
jl
cmp
add
jb
movsb
cmp
add
jns
add
pop
pop
jecxz
loope
inc
pop
sbb
lds
shrl
hlt
lds
or
iret
loop
jnp
cli
mov
inc
lock
mov
dec
jmp
fnstsw
mov
loop
dec
mov
jg
adc
cmp
dec
arpl
sbb
outsl
pop
pop
adc
ud0
fsubrl
push
cli
inc
int3
xchg
adc
stos
leave
xchg
cli
rol
xchg
jle
fwait
jl
loope
ss
mov
mov
pop
add
lret
dec
adc
clc
not
xchg
nop
out
test
int
les
icebp
fdivrs
pop
stos
shlb
mov
adc
stc
cmp
bnd
ljmp
and
shlb
enter
add
sahf
scas
push
insb
push
adc
jnp
pop
or
mov
loop
mov
jp
dec
popa
mov
stos
sbb
sti
or
mov
and
stc
div
add
cmp
cwtl
push
ja
push
add
and
shll
mov
ss
adc
xchg
xchg
inc
jne
imul
lahf
imul
iret
cmp
out
lds
xchg
insb
ds
or
pop
push
test
mov
or
test
mov
je
mov
das
cmpsl
jb
cld
mov
ret
iret
cmp
ret
sbb
push
dec
cmp
dec
jnp
mov
inc
pop
ret
lock
cwtl
sbb
mov
je
lcall
xor
pop
sub
push
mov
sbb
pop
sub
int
ret
pop
or
lret
pop
xor
mov
pop
mov
jns
xlat
xchg
stos
enter
iret
mov
xor
ficoml
adc
test
adc
sbbl
mov
bound
icebp
es
inc
lods
dec
pop
roll
lea
cmpl
or
and
pop
out
loope
jmp
mov
and
enter
rolb
pop
add
adc
lock
xor
out
add
add
mov
xor
std
test
aam
cli
dec
jmp
or
stos
adc
and
xorb
das
and
lock
inc
cmpb
mov
sub
negb
mov
add
test
dec
in
push
or
and
mov
sbb
inc
mov
fistl
cs
imulb
pop
dec
cmpsl
loop
pop
push
inc
fnstenv
inc
aaa
out
lods
stos
daa
es
stc
dec
jbe
andb
dec
pop
divb
push
push
inc
xorl
test
inc
add
jo
jb
arpl
dec
adc
sub
outsb
int
jo
jnp
xchg
add
inc
fbstp
adc
fadd
cltd
cs
lcall
adc
inc
shll
jbe
gs
xor
and
mov
xor
and
lahf
pop
test
adc
jle
push
cmpb
mov
in
sbb
jmp
mov
mov
fimuls
imul
dec
and
mov
xor
pop
leave
jns
clc
mov
inc
or
shrl
adc
clc
fisttps
jbe
ficoms
std
shlb
pop
insb
imul
cmp
adc
cmp
pushf
scas
xor
cmp
or
outsb
cmp
inc
adc
mov
or
mov
test
xchg
int3
sbb
aaa
push
lods
leave
js,pt
rcrl
test
dec
fsubrl
fldl
and
js
or
je
loope
jno
stc
adc
and
stos
gs
adc
lcall
mov
aam
sub
popf
push
inc
push
mov
test
inc
pop
inc
jmp
sti
ficompl
popa
popf
inc
in
adc
jb
jecxz
test
in
push
hlt
cli
cld
loop
insl
mov
cmpsb
stc
popf
push
arpl
sbb
mov
sbb
dec
into
cmp
fisttps
out
dec
jl
mov
decb
adc
xor
mov
inc
xor
nop
jo
aad
dec
subb
out
cli
inc
test
dec
jmp
cmp
int
shlb
push
andnps
dec
loop
push
pop
std
or
xchg
fstpl
lods
jp
cltd
loop
nop
fisubrs
xor
out
pop
push
push
fcompl
dec
imul
lea
cmpsl
mov
ret
add
jno
jae
ss
divl
imul
mov
mov
fadds
shll
cmp
shll
cmp
xchg
mov
and
sbb
dec
outsl
add
lods
mov
imul
mov
cmp
jmp
xchg
xchg
call
incl
sbbb
insb
jbe
push
mov
ljmp
xchg
add
pusha
jmp
aam
pop
mov
cmp
loopne
cmp
out
jecxz
bound
in
sub
jge
jle
in
mov
dec
insl
sbb
sub
mov
dec
jle
jnp
ret
jecxz
loop
repnz
fcoms
popf
test
aam
in
addr16
cmc
jl
jl
add
mov
into
xchg
cmp
mov
xchg
loopne,pt
bound
sahf
push
push
mov
out
or
gs
test
movsb
sbb
les
cltd
xchg
fimull
insl
inc
fdivrl
mov
mov
neg
xor
xchg
xor
jne
inc
add
sub
orl
test
popa
push
arpl
call
xor
mov
sub
jo
push
cmpsb
mov
push
add
nop
jae
scas
out
mov
mov
inc
xorl
jp
les
mov
mov
xchg
and
cltd
stos
push
stos
pop
or
inc
pop
movsb
sub
inc
and
jnp
mov
push
sub
int3
adc
mov
sub
inc
adc
fildll
xchg
outsl
stos
outsb
fdivs
lcall
mov
int3
xor
movsl
fsubrl
pop
mov
xchg
ljmp
add
aad
and
stc
aad
dec
mov
push
pop
pop
push
jge
lock
in
lahf
out
stc
test
pop
pop
mov
dec
pop
add
arpl
jne
rclb
popf
pcmpgtw
inc
repnz
sbb
js
or
jb
gs
adc
mov
loopne
sbb
mov
leave
jb
or
pop
sbb
xchg
insl
jecxz
int3
roll
push
iret
push
and
adcl
jnp
or
sbb
insl
push
stos
or
adc
xchg
mov
pop
cli
lret
jb
sbb
inc
pop
insl
sbb
outsb
daa
rolb
mov
pop
xchg
xlat
enter
or
test
cmpsb
cmp
dec
dec
dec
adc
test
adc
ss
mov
lods
inc
pop
imul
inc
aad
aam
divl
push
mov
mov
fbstp
jmp
mov
adc
data16
add
pop
or
mov
mov
stos
xor
shr
mov
aam
insb
fcoms
sub
movsb
repz
xlat
push
vcvtdq2ps
adc
xchg
jle
andl
push
shll
fstpl
jns
dec
dec
push
test
xor
mov
mov
cmp
dec
xor
std
add
pushf
jnp
xchg
or
mov
add
jb
sub
imul
mov
mov
mov
div
dec
in
add
daa
dec
and
in
xchg
fstl
hlt
xchg
outsl
jb
mov
mov
fisubl
call
mov
pop
popf
adc
test
xchg
mov
shrl
push
sbb
in
mov
push
xchg
hlt
cmp
sub
imul
and
loope
adc
mov
fs
push
lods
cmp
ret
clc
mov
push
adc
mov
pop
sbb
lea
inc
add
fisttpl
push
xchg
mov
and
adc
daa
cmp
xor
xchg
pop
cmp
add
aam
sub
push
jo
pop
mov
dec
mov
leave
out
dec
or
fld1
xor
fsts
into
add
jno
lahf
xchg
std
jmp
dec
std
enter
cmp
std
lds
and
cmp
dec
fldt
movsb
cltd
push
pop
loope
roll
outsl
loopne
and
inc
bound
sbb
stc
lods
sub
ss
cmp
pop
outsb
incb
mov
ljmp
scas
shll
scas
outsb
and
out
gs
ret
dec
orb
pusha
jecxz
pushf
fcomip
outsl
pop
xor
cltd
mov
pusha
aad
mov
cmpsb
aas
movsb
dec
lods
push
sbb
mov
lcall
repz
rcrl
cli
fstpt
lahf
into
shlb
push
mov
hlt
dec
dec
mov
cmc
ljmp
inc
pusha
sub
jmp
cmp
imul
add
in
pop
dec
adc
pop
pushf
dec
mov
arpl
mov
scas
add
mov
xchg
les
mov
dec
sbb
cmpsb
or
pop
cmp
fdivrl
and
mov
dec
imull
mov
sub
sub
pusha
push
incb
pop
inc
sbb
mov
dec
xor
pop
mov
push
lahf
xchg
clc
in
mov
out
cmpsb
leave
outsl
aas
inc
mov
sub
hlt
icebp
outsb
sahf
jno
hlt
cmc
mov
sbb
fdivrp
xchg
jnp
pop
lcall
imul
and
dec
out
cwtl
leave
ja
out
push
popa
xlat
lret
mov
mov
sbb
mov
adc
imul
sahf
add
sub
jb
add
adc
cmp
adc
fs
or
push
or
fnstenv
loop
xchg
aad
into
dec
test
jmp
push
sbb
sbbl
adc
es
xor
xor
add
inc
fildll
cmp
popa
stos
xchg
dec
jmp
sahf
mov
sbbb
ret
and
ficoml
xchg
out
jmp
jl
fcmovb
sbb
movsl
jns
lds
divl
jle
cmpsl
mov
sbb
jno
cwtl
lea
pop
sub
popa
inc
add
insl
xor
mov
fnstenv
ds
subl
insl
mov
mov
ss
scas
fwait
sbb
bound
loopne
inc
ret
addr16
js
les
inc
inc
sub
test
xchg
xchg
jb
clc
jne
mull
test
dec
movsl
mov
cmp
cmpsl
or
or
inc
mov
loop
outsl
mov
out
xchg
inc
scas
rcrl
pop
test
lcall
sahf
or
movsl
add
cli
lcall
jg
dec
les
inc
mov
mov
repnz
addr16
dec
add
cmp
add
pushf
add
sbb
jno
sti
cmp
inc
jo
add
lods
and
and
mov
push
mov
cwtl
jmp
mov
xor
mov
into
jle
inc
rol
jo
jge
pop
add
jae
mov
add
jecxz
loop
sbb
sbb
dec
nop
outsl
outsb
insl
clc
pop
inc
adc
jae
call
sbb
dec
mov
jl
das
popa
cli
mov
fldenv
jmp
lcall
fildl
lret
dec
movsb
ret
jge
cli
add
test
lahf
pushf
add
push
cli
std
xor
or
gs
stos
inc
test
repz
push
clc
inc
rol
jnp
pop
pop
mov
push
sub
in
lods
icebp
cmovb
sbb
mov
adc
jo
ret
in
test
mov
in
and
xchg
xor
popa
cli
cs
jns
mov
mov
pop
stos
or
mov
mov
jne
repnz
jnp
loopne
cmp
jne
xorl
xchg
add
fs
jmp
icebp
pop
sti
sub
cmp
push
pop
mov
aas
stos
repz
or
subb
das
sub
in
loop
inc
mov
dec
hlt
mov
out
and
mov
dec
mov
scas
add
call
fldt
jp
popa
push
loope
xorl
lds
xor
arpl
imul
adcb
mov
sub
mov
adc
cs
mov
aas
dec
andl
mov
adc
es
in
sbb
ss
adc
dec
or
lahf
pop
lods
adc
hlt
sub
es
arpl
jns
je
jb
nop
int3
ljmp
testb
mov
pop
or
sbb
and
mov
pop
fcomip
cmp
jecxz
loopne
push
mov
loope
push
call
lahf
popf
out
in
std
iret
int
sub
pop
sbb
dec
dec
pop
pop
scas
lods
mov
popf
out
in
std
iret
int
sub
pop
sbb
dec
dec
pop
pop
scas
test
lahf
cltd
out
in
call
das
sub
cmp
or
jg
dec
inc
pop
mov
mov
fucomp
in
std
iret
dec
fistps
movsl
or
testl
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
fldl
in
fldenv
subb
imul
xorb
sub
mov
cmpsl
in
xlat
popf
popf
idivl
pop
dec
inc
jge
insl
push
outsl
inc
emms
cmp
xchg
mov
cmpsl
cmc
xlat
test
xchg
mull
pop
outsb
inc
add
sbb
push
and
cmp
inc
ficoms
aad
xchg
push
dec
jl
sbb
aad
fldl
jns
outsb
fsub
push
xchg
ret
sbb
cmp
hlt
sub
cld
inc
adc
mov
mov
push
jbe
cltd
aad
inc
or
jg
das
mov
push
cmpsb
mov
insl
dec
enter
idivl
cmpsl
push
roll
mov
or
pop
mov
addb
test
ret
push
add
clc
divb
sti
mov
test
sbb
push
add
push
sub
mov
insl
daa
iret
andb
xor
leave
lret
mov
cmpsl
in
xlat
popf
idivl
pop
push
aaa
fs
je
add
addr16
fucomp
mov
mov
shll
dec
push
jns
or
js
rdpmc
push
xor
mov
movsb
out
ret
popf
stos
ret
test
add
outsl
xor
or
fucom
int
cltd
cmpsb
test
scas
idivl
pop
dec
aaa
jge
insl
push
sbb
addr16
mov
cmpsl
in
xlat
popf
idivl
pop
dec
aaa
jge
insl
push
sbb
addr16
or
sub
push
imul
jae
mov
les
movsl
gs
fsubrp
test
jo
jmp
or
outsb
jno
fcmovu
inc
dec
rorl
aam
mov
cmp
loopne
sysexit
mov
ds
or
jno
or
jmp
lahf
popa
test
push
aad
lahf
imul
mov
add
xchg
mov
jmp
sub
xor
jmp
pop
xchg
mov
push
xchg
cmp
lcall
mov
or
das
add
pop
gs
and
scas
sarb
arpl
stos
dec
das
adc
or
ljmp
mov
test
jne,pn
add
sbb
out
jbe
inc
xor
push
cmp
sbb
movsb
mov
mov
push
les
lret
loope
stos
xor
stc
pop
into
xor
pop
xchg
add
mov
dec
pop
or
xor
enter
int
jnp
ljmp
jne
jl
pop
outsb
cmp
mov
out
mov
xchg
cwtl
inc
adc
push
jne
mov
jp
in
and
std
scas
jbe
inc
enter
scas
xchg
outsl
loopne
mov
fistps
fnstenv
jae
sub
dec
mov
mov
jne
rorb
push
hlt
daa
xchg
xlat
push
add
push
xorl
dec
jb
sbb
pop
pusha
adc
pop
mov
aad
loop
cltd
test
in
ret
sub
sahf
mov
inc
inc
shrb
pop
jae
sub
xchg
dec
ror
ret
xchg
inc
out
lods
jmp
jl
lock
xor
mov
mov
inc
into
mov
test
sbb
mov
mov
aaa
or
jns
dec
outsl
cwtl
bound
iret
clc
and
stc
xor
cli
out
jp
dec
pop
jo
lret
sub
fistpll
sahf
pop
gs
stos
scas
mov
ret
enter
inc
leave
inc
cli
loopne
repz
mov
cmp
fdivs
inc
dec
inc
mov
push
fistpl
fldl
sbb
aam
inc
jecxz
iret
js
out
lahf
add
stc
aam
xor
shlb
mov
or
cmovnp
jae
xchg
int
mov
push
mov
dec
hlt
iret
mov
cli
sarl
adc
insb
sbb
out
sti
cmp
outsb
xchg
mov
xchg
sub
movsl
mov
shr
mov
xchg
push
pusha
int3
test
rcll
dec
sub
or
cltd
popf
mov
cwtl
xchg
dec
cmp
ds
jge
andl
je
lret
dec
lds
repz
xchg
aam
jmp
scas
ror
sub
loop
fisubs
test
push
mov
dec
cltd
out
xor
push
lods
jecxz
out
xchg
sbb
mov
fdivl
push
sahf
lcall
pushf
jno
outsl
or
push
dec
leave
out
or
push
mov
out
pushf
outsl
les
call
loope
cmp
cmp
mov
add
and
and
cld
xor
inc
xor
mov
push
fs
push
fwait
cmpl
inc
test
xor
lahf
fstp
xor
adc
jl
push
sahf
lahf
mov
xor
xchg
pop
faddp
xor
gs
mov
lods
ret
or
mov
int3
outsl
mov
push
or
cmp
xor
and
jge
ljmp
leave
sarl
mov
negl
fmuls
stc
or
and
xor
aam
mov
mov
cmp
push
cmp
rcrl
xchg
sarb
xchg
test
aad
push
pop
outsl
andl
mov
pusha
push
inc
sub
push
xchg
cmp
push
js
jns
pop
push
ret
scas
repnz
push
cmp
lea
movsl
mov
ffree
aad
dec
pop
dec
fwait
inc
aas
test
daa
nop
fwait
pop
pop
add
add
cli
mov
xchg
add
divb
test
je
stos
scas
sbb
or
out
cmc
ss
mov
pop
inc
adc
push
gs
jae
add
sub
mov
fldt
and
cmp
loope
push
pop
int
sub
mov
ror
jmp
stos
clc
add
sub
mov
xor
or
xchg
fs
or
mov
out
or
loopne
cld
pusha
test
lock
aas
mov
inc
int3
jg
je
insb
dec
movsl
mov
pop
jb
js
stc
push
mov
mov
jno
mov
sub
mov
cld
aad
stc
and
cmc
pop
mov
subb
adc
push
decl
icebp
clc
je
push
loopne
xchg
xchg
nop
jnp
cmpsl
cmp
jb
stc
mov
ficoml
stc
pop
cmp
arpl
out
pop
jg
aad
mov
pop
mov
sbb
xchg
xchg
fdivrs
fnstenv
mov
or
sahf
aad
data16
jg
dec
jecxz
or
lods
outsb
jecxz
pop
inc
xchg
loope
lock
jnp
pushf
sub
movsb
inc
and
pop
mov
dec
hlt
mov
jg
repnz
mov
lret
mov
rcll
adc
fisttpll
imul
aam
ret
std
daa
pop
mov
cld
ja
icebp
fidivs
sub
push
jl
out
test
or
xchg
cwtl
pop
mov
mov
inc
push
xor
sbbb
push
clc
sbbb
sti
inc
sarl
sbbl
inc
aas
pusha
or
js
sahf
jbe
xchg
int
out
pop
sahf
std
pop
push
jb
mov
push
fisttpl
sahf
mov
push
cli
fistl
sahf
iret
orb
lcall
pop
lds
out
jge
xchg
xor
push
or
adc
lret
xor
pop
or
test
data16
out
nop
dec
xor
push
stos
iret
stos
sahf
push
push
push
shlb
inc
xchg
dec
add
ss
lds
adc
sbb
jb
inc
add
and
shll
es
idivl
outsl
cwtl
mov
dec
push
outsl
jecxz
shll
icebp
outsl
fwait
dec
pop
stc
mov
popf
jnp
or
ret
cli
xor
das
xor
push
dec
rorl
cmp
inc
mov
scas
or
test
cld
sti
imul
cmp
fnstcw
jp
sbb
call
into
adc
sbb
insl
int3
repnz
mov
je
push
sbbb
ja
and
pop
test
or
dec
movsl
ljmp
test
push
pop
in
adc
mov
loopne
dec
or
cmpsl
les
push
xchg
out
lds
lret
dec
iret
ret
testl
negw
fistps
xchg
xor
mov
out
mov
sahf
xor
stos
int
inc
mov
in
jno
or
lds
bound
jbe
jno
addr16
jns
mov
cmp
movsl
adc
insl
mov
icebp
cmc
popf
ror
cmp
jns
icebp
arpl
popa
fcmovnu
pop
inc
xchg
xchg
ret
into
daa
inc
stos
orl
rorb
jl
rcl
aas
pop
arpl
shrb
divl
pushf
addr16
in
mov
jns
popl
dec
xlat
rcrb
jno
mov
shr
sbb
mov
cld
ds
mov
inc
mov
jo
inc
fistpll
mov
cmp
pop
lcall
jle
dec
cli
push
outsl
xchg
dec
mov
enter
xchg
adc
add
dec
mov
ret
shll
xlat
ja
daa
or
mov
movsl
test
sub
movsb
sbb
int3
lock
cmp
cmpsb
scas
hlt
sub
cmp
jbe
sti
js
push
and
lods
mov
in
ss
test
sub
test
adc
cmc
enter
inc
sbb
movsl
or
loope
pop
bound
sub
pop
inc
lods
insl
mov
cmp
xchg
cmpsl
push
fptan
out
sub
insb
daa
gs
sbb
lds
mov
jns
dec
insb
fs
imul
pop
pop
jbe
and
bound
sbb
adc
xchg
xor
push
xor
jl
adc
in
cmpsl
add
je
sub
jb
sti
ss
inc
add
fptan
or
cmp
mov
sub
mov
lret
into
mov
ror
lahf
andl
imul
pop
test
icebp
mov
faddp
je
xchg
dec
out
call
mov
inc
sub
aas
lret
cmp
jno
arpl
fisubrl
outsl
jge
in
adc
test
pop
push
xlat
inc
mov
pop
xor
in
jns
cmp
fcompl
repz
mov
sub
push
scas
scas
scas
pop
ficoml
out
jno
je
xchg
jae
das
cli
and
lods
sbb
leave
cmp
js
inc
xchg
aam
inc
jns
pop
sub
jae
pop
int3
cmpsb
push
cld
mov
aas
iret
addr16
xchg
dec
mov
pop
inc
outsl
filds
out
jne
mull
xchg
js
fimull
punpcklwd
ss
adcb
enter
mov
sbb
bswap
int3
mov
loope
mov
sub
imul
out
lds
mov
scas
fidivrl
lock
aad
ljmp
mov
cmpsb
mov
jge
mov
or
arpl
pop
lds
jmp
pop
xchg
and
mov
push
out
xchg
mov
daa
decb
xchg
mov
dec
rcl
pop
mov
inc
jae
dec
loop
inc
inc
ds
outsb
mov
mov
xchg
clc
loope
stc
pop
sbb
dec
xchg
imul
sub
addb
out
dec
xchg
mov
xor
insl
cmpsb
pop
dec
lret
push
hlt
sub
mov
mov
pop
xchg
and
pop
fistpl
sbb
cmp
fidivl
int
pop
mulb
jns
inc
push
push
pop
scas
mov
mov
xlat
pop
xlat
pop
jge
or
sub
jmp
xor
adc
pop
repnz
push
arpl
push
stos
lret
mov
xor
push
icebp
and
adc
mov
jp
adc
mov
fwait
sti
mov
fnstenv
xor
jne
mov
lahf
shrb
pop
imul
mov
scas
stos
jne
pop
cmp
adc
jo
xchg
jg
ret
and
outsl
mov
inc
adc
jecxz
jns
je
xor
imul
pop
scas
mov
mov
jnp
sti
test
nop
pop
xor
lock
pop
adc
push
xor
push
pop
lock
pop
inc
mov
lea
lcall
jle
jns
icebp
mov
sub
das
out
scas
sti
hlt
repz
dec
cwtl
and
jp
std
sbb
btr
jecxz
int
lcall
cmp
mov
mov
stos
scas
aas
mov
in
push
dec
into
lcall
hlt
or
jg
aad
jno
into
mov
lea
popa
dec
sahf
xor
and
cmc
xlat
fiadds
mov
sbb
je
movsl
pushl
pop
xchg
shrb
sti
jnp
jge
xchg
add
mov
sti
dec
sub
clc
in
add
loope
pusha
inc
std
pushf
xor
jnp
lret
rorb
mov
aad
xlat
es
clc
cld
xor
jge
jnp
lret
call
mov
loope
push
pushf
in
imul
sbb
ss
pop
add
fwait
jb
push
cltd
and
cmpsl
mov
sub
pushf
cltd
in
lds
lds
ss
sahf
jmp
scas
iret
in
ljmp
gs
mov
data16
mov
insb
lret
jmp
inc
mov
dec
fidivrl
mov
and
js
not
dec
enter
sbb
xorb
jnp
pop
pop
cmp
popf
push
mov
mov
in
dec
mov
push
out
push
loope
cltd
in
jg
and
xorb
adc
shll
pop
imul
sbb
jp
jae
push
push
test
pop
push
test
popf
loope
scas
les
lock
movb
sub
mov
cmpsb
or
and
mov
mov
pop
testb
test
icebp
cmp
sbb
cmp
fnstenv
mov
adc
cmp
movsl
pop
aam
lcall
jnp
add
xor
or
xchg
in
push
inc
movsl
or
fldt
inc
lods
jle
scas
and
cmp
mov
push
mov
into
cld
lret
xchg
in
push
cltd
lock
clc
pop
das
aam
lret
inc
xor
imul
sub
test
jnp
xlat
bound
call
adcb
jp
cvtpi2ps
mov
into
xor
push
push
dec
push
insb
mov
nop
push
dec
jge
test
mov
jp
cmp
jp
jle
sbb
outsb
clc
and
dec
xchg
aas
out
dec
out
stos
loopnew
mov
pop
popf
into
jns
jo
mov
or
mov
mov
js
cli
ffree
push
sub
mov
jmp
cld
andb
js
cmc
push
mov
xor
mov
sbb
xor
push
pop
inc
pushf
pop
sub
and
sti
or
rcl
sbb
mov
sarb
aas
xchg
out
pop
push
out
push
mov
repz
xor
fisttpl
jecxz
mov
xlat
insb
or
das
jno
xor
orb
jl
dec
popf
and
push
cmp
or
outsl
pop
jmp
aaa
js
inc
in
imull
sub
jp
jno
scas
add
pusha
dec
xor
ljmp
mov
and
les
test
sbb
out
icebp
sub
movsb
push
iret
xlat
pop
push
mov
fdivrl
xor
dec
jmp
rcrb
in
std
add
repz
sub
cmp
mov
aas
popf
push
dec
xchg
mov
aas
fildl
push
es
mov
xchg
fcmovnbe
fildll
lcall
xor
adc
loopne
out
rolb
fs
arpl
inc
sbb
inc
in
inc
iret
les
dec
movsl
aaa
jp
add
ror
sti
cwtl
dec
mov
imul
sbb
aas
int3
stos
mov
pop
jmp
jmp
dec
test
mov
and
aam
jmp
jp
insb
out
cmp
cltd
mov
rcll
cli
jne
add
das
inc
adc
push
and
daa
movsb
in
mov
push
rorb
pop
jmp
sbb
dec
sahf
push
mov
jmp
cmpsb
pusha
mov
xchg
dec
xchg
mov
push
xchg
out
jno
dec
inc
push
das
js
xchg
mov
rol
mov
icebp
jl
jmp
pop
xchg
mov
push
mov
sbb
int
popa
and
mov
into
cmc
and
loope
lcall
insb
xor
inc
cmpsb
cld
cmpsb
enter
not
push
add
sub
lret
jmp
mov
sbb
mov
adc
and
js
sub
sti
pop
add
pop
call
pop
pop
subl
mov
insb
addb
jmp
add
cld
xchg
stos
js
pushf
imul
push
fs
xchg
inc
jge
loope
in
cmp
push
mov
mov
xor
mov
std
add
out
and
ljmp
movsb
adc
and
mov
mov
adc
or
xchg
ret
dec
jno
iret
pop
andb
mov
add
sahf
popf
inc
std
sahf
adcl
xchg
rclb
and
jne
cmp
ja
push
cmp
push
sbb
mov
bnd
insb
pop
xchg
repz
jge
adc
dec
adcl
pop
in
xor
or
sub
jmp
pop
inc
data16
out
mov
add
pop
in
lods
into
inc
movsl
inc
inc
gs
in
cmp
jl
cmp
and
mov
in
xlat
repnz
sub
pop
test
fs
dec
test
cmp
lret
insl
divb
loop
lods
aam
shlb
fildll
mov
sahf
xchg
add
sub
and
fsubrs
imul
and
aam
adcb
int
insb
pop
push
inc
insl
cmp
daa
out
cmpsb
push
int
xor
testb
pop
inc
sub
pop
adc
dec
mov
inc
pop
push
dec
lahf
dec
arpl
jo
sahf
fistpl
enter
out
sbb
fdivrl
push
sbb
sub
cmp
adc
sti
mov
cmp
cmp
xor
push
mov
pop
iret
stos
or
cltd
aam
test
push
stos
jl
mov
rcrb
nop
or
inc
sbb
ds
pop
inc
cld
cmp
stc
inc
out
mov
dec
inc
mov
cmp
dec
mov
in
sbb
cmpsb
mov
in
loope
shl
scas
or
fwait
out
lds
xor
repnz
sub
add
and
hlt
movsl
shrl
clc
cmp
xchg
dec
push
inc
int
dec
fsubs
adc
push
pop
sti
out
xor
repz
cmp
repz
mov
cmp
pusha
or
sbb
add
jmp
jmp
ss
mov
in
hlt
cld
sub
movsl
adc
xchg
ljmp
add
sub
pop
or
and
scas
pop
and
push
mov
sub
dec
inc
ret
pop
xlat
xor
in
cmp
mov
dec
push
or
mov
mov
int3
jno
xor
xor
inc
mov
dec
pop
mov
iret
cmpsb
cmp
adc
pop
push
or
push
mov
aaa
fbstp
sub
fs
mov
and
sbb
shll
gs
jb
lret
pusha
imul
mov
sbb
sbb
clc
fsts
movsb
dec
ret
mov
ja
in
jecxz
adc
xchg
js
or
outsb
pusha
add
add
or
outsb
jnp
popa
or
push
xchg
loopne
pusha
mov
jo
inc
xor
mov
mov
aas
andl
iret
or
inc
int
int
cli
mov
jmp
mov
into
dec
cmc
pop
cld
adc
iret
outsl
jno
sub
mov
mov
fimuls
xor
mov
jns
jno
jno
aad
pushf
xor
fcoms
adc
int
and
jbe
rorl
mov
mov
or
sub
hlt
fists
add
popa
adc
ret
cmp
imul
sbb
inc
out
ss
mov
xor
push
mov
push
mov
pusha
pop
fisubrs
inc
push
mov
shll
test
or
ljmp
add
xchg
fldl
fbstp
ror
dec
push
jg
rcrb
jmp
and
pop
rorl
jp
mov
out
mov
insb
dec
mov
cmc
scas
fildll
loopne
dec
enter
mov
popf
push
fstpt
or
sahf
in
pop
aam
push
into
ret
pop
fcmovb
cld
push
mov
lods
and
insb
repnz
lods
mov
rolb
adc
add
mov
add
fcoml
cmp
loopne
outsl
mov
xchg
xor
mov
lock
push
cwtl
in
aam
xor
xlat
jle
and
in
ficoml
sub
loopne
xor
pop
fstpt
out
into
push
cld
hlt
dec
xchg
mov
aaa
or
stos
in
jp
mov
pop
addr16
push
mov
mov
adc
and
mov
lods
out
mov
shl
int3
ss
xor
sbb
mov
add
aad
cmpsl
inc
stos
nop
cmp
push
in
out
cmpsl
in
cmp
mov
dec
xor
xchg
sahf
cmp
xor
cld
cmp
insl
rcrb
bound
jne
mov
lods
test
push
ror
or
rclb
dec
and
jl
push
adcl
and
cmpsl
sti
inc
rol
adc
adc
push
pop
mov
imul
data16
dec
dec
pop
push
lret
mov
jne
inc
dec
xchg
push
jl
dec
ljmp
loope
addb
cvtpi2ps
aas
adc
sub
push
andb
push
fwait
dec
les
xor
sbb
xchg
xor
fstl
or
nop
xor
jl
xlat
out
cltd
scas
xor
inc
cltd
call
subl
dec
pop
sti
loop
cmpsl
loope
or
dec
xorb
or
je
inc
pop
fistps
shrl
shl
scas
pop
stc
addr16
je
or
and
cmpsb
popa
iret
cwtl
inc
jl
xchg
push
cmpb
fs
cmp
iret
cmpb
loope
shlb
loopne
push
lahf
lods
stos
sti
pusha
xchg
ret
inc
stos
mov
movsl
jp
add
and
nop
or
or
mov
scas
dec
mov
and
jns
call
int
loopne
lret
add
in
xlat
add
scas
shl
fnstcw
or
repz
bnd
in
and
fstpt
push
xor
pop
mov
lret
sub
adc
mov
cmp
popf
idivl
pop
dec
aaa
jge
insl
push
sbb
addr16
mov
cmpsl
in
xlat
popf
idivl
pop
dec
aaa
jge
insl
push
sbb
addr16
mov
cmpsl
in
xlat
popf
idivl
pop
dec
aaa
jge
imul
sub
leave
mov
cmpsl
in
xlat
popf
idivl
pop
out
jge
sbb
xchg
iret
jb
inc
cwtl
push
stos
mov
inc
daa
pop
mov
pop
rolb
sub
cmp
or
sbb
push
jp
dec
xchg
stos
jbe
data16
inc
ljmp
push
sub
cmp
or
sbb
stos
aad
jbe
xchg
pop
xchg
dec
lcall
push
ficompl
adc
sbb
push
adc
xchg
jbe
jp
fnstenv
rorl
insl
adc
nop
cs
aas
lcall
xor
fisubs
adc
pushf
daa
mov
jbe
push
cmc
in
xchg
xor
sbb
mov
and
es
bound
or
inc
cmp
pop
xchg
push
lcall
dec
cmpsl
cmpsb
mov
cmp
sbb
in
push
dec
pop
xchg
cmpsb
mov
cli
fimull
lahf
pop
ret
out
xchg
addr16
cmp
test
sbb
inc
xchg
adc
inc
sub
mov
lret
ret
xor
cmp
not
punpckhwd
xchg
data16
jno
inc
lcall
pminub
sub
cmp
or
sbb
push
jp
dec
xchg
pop
loop
adc
data16
repz
ljmp
imul
pop
sahf
or
jp
sub
fbld
testb
mov
push
imul
les
es
das
jecxz
aaa
mov
xor
push
fiaddl
sub
cmp
or
sbb
push
jp
dec
xchg
pop
xchg
push
lcall
push
fiaddl
sub
cmp
or
sbb
push
jp
dec
xchg
pop
xchg
ja
push
adc
clc
inc
and
or
out
int3
or
dec
arpl
push
sbb
push
adc
sarl
jno
adcb
das
js
jmp
adc
inc
xchg
jl
mov
je
les
out
rolb
pop
adc
test
push
mov
in
dec
ffree
mov
adc
inc
std
sub
insb
fisubs
lods
popa
mov
inc
cmp
je
testl
addr16
and
int3
loope
insl
pop
inc
test
mov
rclb
das
xchg
jg
or
cwtl
fcompl
in
inc
pop
inc
xchg
mov
iret
andb
add
cmp
pop
mov
jmp
sbbl
add
mov
cs
repz
test
clc
pop
imul
and
mov
adc
jae
sbb
or
sbb
pop
cmp
sarl
imul
call
cwtl
imul
push
js
mov
mov
sub
mov
jg
out
std
mov
cmp
dec
or
inc
roll
push
xchg
fcoml
inc
mov
cli
mov
add
mov
movsb
and
mov
lcall
pop
cmp
sub
xor
int3
aad
push
mov
into
mov
jne
jecxz
push
push
or
mov
and
mov
aas
lock
hlt
repnz
in
adc
cli
push
stos
dec
mov
cld
jno
jo
sbb
dec
sub
cwtl
in
mov
and
pop
xor
adcb
push
cmovle
and
dec
push
cmp
xchg
mov
cli
mov
fiaddl
fs
pop
leave
popf
lock
mov
push
sub
mov
scas
mov
out
or
in
mov
stos
jae
pop
jg
xchg
sbb
std
inc
xchg
enter
jg
pop
repz
lock
repz
lret
shlb
loop
add
movsl
push
mov
xchg
mov
adc
or
sub
cmpsb
lods
cmovnp
pop
fsubrl
and
incl
adc
mov
mov
push
pop
dec
sbb
sbb
daa
or
and
sbb
fnstcw
mov
movsb
jl
jae
jg
inc
popa
fucom
mov
pushf
inc
jae
add
mov
pop
insb
out
sarl
adcl
adc
fildll
push
cltd
adc
iret
dec
pop
int3
mov
or
pop
rcrb
mov
dec
sbb
jp
cmc
pop
pop
jmp
mov
test
stc
push
test
adc
add
fcoml
push
add
sub
cld
insl
movsb
jbe
insb
xor
negb
mov
mov
loop
cmpsl
inc
ret
dec
mov
sub
movsb
mov
pop
jno
xchg
test
test
sbb
popf
cmc
lahf
into
cwtl
cld
adcl
pop
jnp
pminub
sub
inc
sbb
dec
mov
loop
sub
cs
in
adc
cmp
icebp
mov
andl
jg
push
or
sub
sub
inc
xor
fbld
push
xchg
sub
mov
pop
pop
mov
sub
jae
icebp
push
dec
test
fwait
dec
adc
lret
fidivrs
ret
into
ds
scas
and
inc
and
ret
dec
aam
mov
inc
enter
mov
ret
jmp
push
mov
mov
icebp
xor
mov
inc
sbb
cs
push
xchg
jle
mov
je
push
aas
pop
or
sbb
jo
push
add
and
push
push
std
push
mov
or
push
push
pop
pusha
imul
mov
jnp
jno
test
lret
cmp
sub
popf
jmp
popa
dec
xchg
dec
mov
jmp
imul
add
push
push
test
mov
xchg
rol
stc
mov
xchg
inc
or
les
push
aas
mov
int
sub
dec
xchg
adcl
mov
fmull
pop
adcb
inc
ds
imul
fcmovne
outsl
adc
enter
lds
sti
negl
dec
sbb
inc
cmpsl
andb
sub
arpl
cmp
inc
test
mov
dec
add
sub
cld
push
dec
dec
outsb
movsl
mov
ljmp
subb
mov
lods
arpl
lret
cli
inc
jb
push
add
std
rcrb
addl
inc
sub
out
inc
les
je
cld
pushf
mov
int3
cmp
ss
adc
insb
les
add
mov
inc
lods
imulb
xchg
mov
movsb
and
das
cmpsl
sub
adc
mov
out
mov
rorl
mov
outsl
pop
outsb
je
or
adc
ds
out
dec
sbb
movsb
xchg
add
jge
outsl
stos
int
ljmp
mov
mov
xchg
inc
adc
test
xor
mov
push
adc
and
mov
int
xchg
mov
in
frstor
das
shlb
ds
inc
push
mov
ljmp
in
mov
xchg
nop
das
notl
xlat
ret
jnp
jecxz
js
add
mov
cmp
icebp
test
int3
dec
hlt
rorl
repnz
push
or
xchg
icebp
mov
mov
sub
and
jg
shll
or
loop
or
in
fldenv
mov
lahf
dec
jecxz
jl
sub
repz
icebp
adc
push
je
sub
and
dec
imul
frstor
pop
cmp
stos
sub
sub
sti
xchg
es
std
mov
and
jecxz
std
aaa
inc
and
repnz
in
jg
jge
jl
jb
nop
pop
or
sahf
dec
mov
fidivs
in
mov
mov
mov
mov
mov
aas
inc
mov
inc
mov
xor
shrl
fmuls
or
sbb
xor
jmp
adc
and
jmp
xchg
bound
cmp
out
xlat
jl
mov
push
and
sbb
inc
sub
fwait
push
scas
imul
lods
int
mov
std
push
mov
or
dec
int
add
popa
or
int3
mov
ret
xchg
xchg
sbb
sarl
lods
cmp
in
sub
call
int
cmp
fcmovnbe
fs
and
mov
cmp
fsubrs
clc
lea
mov
fwait
inc
and
je
xchg
leave
cmp
jns
loope
iret
add
nop
in
or
mov
push
adc
and
mov
test
pop
push
addr16
icebp
push
mov
cltd
loopne
ret
les
ficoml
insb
cli
int
aaa
in
insb
push
xchg
xor
leave
rcpps
inc
xor
cmpb
dec
jp
lcall
jecxz
dec
jl
ja
test
les
fxch
add
movsl
and
xor
subb
or
push
leave
outsl
xor
int
clc
addr16
mov
repnz
mov
lods
mov
insl
inc
jne
xor
loopne
lods
jbe
insl
cli
ja
std
lret
movsb
mov
add
mov
fcomip
movsl
push
repnz
decl
cmpl
das
mov
xor
stos
xlat
add
mov
fisubl
mov
dec
es
dec
lods
inc
in
sahf
xchg
lahf
repz
sbb
mov
push
lret
aas
cmc
subl
adc
push
lods
vpaddq
cmpsb
cmpsl
shll
lds
mov
jmp
pop
mov
sti
mov
sub
pusha
js
mov
and
test
push
imul
gs
xchg
scas
xchg
jae
pusha
jmp
sbb
push
inc
pop
loop
mov
ds
push
inc
dec
xchg
push
jae
stc
popf
adc
dec
pop
test
mov
loopne
cwtl
push
ret
jmp
aad
xchg
imulb
scas
fwait
sahf
test
mov
shrl
pop
pop
add
adc
xchg
stc
mov
fsubr
cs
mov
int
out
pop
pop
insb
jbe
mov
adc
loop
repnz
or
insb
sub
ds
cmc
jno
jne
imul
push
cmpsl
mov
fs
pop
mov
jmp
dec
leave
sub
add
lock
aas
sbb
xchg
popf
mov
in
cmp
int3
jg
and
or
in
sarb
mov
hlt
shll
xor
popa
sub
cmp
in
xor
dec
mov
adc
ret
or
dec
jle
stos
or
lret
fcoml
xchg
and
or
dec
jmp
mov
push
mov
xchg
aaa
enter
xor
sub
fnstcw
jge
sub
filds
js
push
mov
xchg
pop
lods
dec
and
jmp
mov
sub
pop
jnp
in
mov
inc
movsb
ret
leave
jbe
xlat
incl
shll
pop
sbb
in
mov
fs
ficoms
ja
fimuls
cli
out
fidivrs
xor
nop
jg
int3
add
dec
shlb
mov
stos
xchg
lock
shrb
or
inc
pop
stc
inc
pop
or
ret
clc
les
pusha
dec
sahf
sarb
xchg
es
push
lea
jecxz
push
pop
jg
add
iret
out
push
jbe
nop
movsb
mov
sub
scas
lock
lods
repz
pop
mov
lods
out
sub
arpl
sbb
and
out
lcall
aad
dec
inc
mov
inc
iret
push
dec
cli
mov
or
ror
mov
xchg
imul
sub
and
std
inc
adc
xchg
enter
add
fsubr
dec
jp
xor
inc
dec
stc
stc
movsl
xchg
pop
mov
sub
mov
inc
insb
cwtl
in
mov
push
cmp
mov
cwtl
dec
and
cld
cmp
iret
mov
cmpsl
inc
sub
fldt
mov
add
shll
inc
sub
cmpb
xor
push
lret
dec
enter
repnz
mov
sbb
dec
jl
pop
jae
out
mov
adc
movsb
push
lahf
push
adc
dec
fiadds
xor
dec
shll
outsb
cmp
xor
fisubs
pushf
dec
pop
jp
test
neg
push
xchg
mov
call
add
insl
in
jbe
dec
sub
cld
movsb
jno
cmpsb
xor
push
call
ljmp
sub
mov
dec
popa
cmpb
in
sub
pop
lcall
push
jae
add
mov
and
sub
out
out
mov
xchg
lea
int
mov
imull
pop
inc
push
adc
inc
adc
pop
jae
ret
test
inc
rcrl
or
pop
mov
push
pop
repz
jns
movsl
pusha
hlt
imul
lcall
ret
or
lahf
pushl
inc
popl
stos
sbb
mov
addb
sahf
adc
pop
pop
out
pushf
pop
dec
aas
push
mov
jnp
push
fiaddl
jae
sub
movl
mov
sub
hlt
and
xchg
addb
pop
mov
addr16
ljmp
and
push
or
xor
aaa
sub
adc
sbb
sbb
add
pop
cmpsb
push
pop
test
aam
mov
or
lahf
ffree
ja
jno
push
ja
sbbl
ja
call
xor
negl
in
inc
push
ss
leave
pop
test
popf
inc
icebp
mov
shrl
icebp
and
cmp
inc
adc
stos
js
ret
fcomps
add
fwait
shll
push
mov
adc
in
fnstsw
dec
cltd
pop
xor
ret
mov
int
cli
pushf
inc
aas
cmp
js
imul
bound
sub
jnp
popf
add
or
movsb
fwait
push
adc
sub
lcall
xchg
jns
pop
xor
push
test
negl
and
jae
ret
fwait
mov
mov
scas
in
enter
mov
into
and
mov
fsts
sbb
in
fcoml
mov
cmp
jge
loope
sub
add
mov
movsb
and
out
pusha
jo
repnz
xchg
jne
popf
xchg
mov
jnp
xor
jne
push
inc
shll
pop
xchg
and
or
ja
out
fbstp
loope
inc
aam
adc
jnp
in
jecxz
pop
and
roll
dec
les
cmp
mov
popa
sbb
mov
adc
das
cmp
sub
mov
add
lret
cmp
inc
idivl
js
push
repnz
cs
inc
add
sub
lock
xchg
inc
sub
cmp
dec
lret
pop
xchg
fidivrs
cmp
inc
cmc
cmp
sbb
jp
push
fwait
lock
mov
lock
and
or
mov
sbb
scas
pop
inc
dec
xor
inc
cmp
add
cmc
cmp
in
push
popl
in
mov
lret
adc
mov
orb
xor
ds
xchg
icebp
and
mov
gs
mov
aaa
or
leave
mov
icebp
jge
xlat
cmp
xchg
mov
fcmovne
push
scas
es
push
lcall
adc
mov
call
xor
enter
adc
iret
xchg
jbe
dec
loope
add
lret
xor
fsubs
sub
add
adc
aam
in
loopne
inc
fdivl
dec
mov
repnz
jae
into
out
arpl
orl
xor
cmpl
lahf
and
gs
or
jmp
pop
mov
pop
or
stos
les
inc
adc
cli
sub
fidivl
gs
mov
dec
movsb
dec
jg
xchg
fcoml
mov
mov
jmp
stos
add
sti
sbb
lds
dec
out
insl
fcoms
test
cltd
call
fcompl
in
pop
or
mov
mov
daa
lock
cvtdq2ps
push
adc
ret
fcmovnu
pop
jae
cmpsl
rorl
loope
xchg
push
rorl
scas
test
mov
insl
andl
sbb
mov
insb
cmp
add
mov
ret
icebp
xchg
repz
xchg
cmpsl
and
sub
push
pop
jg
jb
add
es
push
jmp
mov
fistps
xchg
idiv
xchg
mov
test
add
int3
aas
xchg
sahf
dec
push
mov
sbb
arpl
push
add
incb
ret
loop
cs
jp
dec
add
jo,pn
fstps
movsl
mov
xchg
fdivrs
scas
int
cmp
std
lret
push
inc
fsubl
sti
loop
dec
jns
xchg
or
xor
jp
hlt
popl
xor
test
inc
scas
fisttps
mov
stos
inc
js
addb
add
pop
sub
add
lahf
push
pop
mov
jecxz
xor
push
in
pop
push
xor
test
pop
mov
popa
sub
in
aas
mov
cmp
dec
push
sahf
push
or
inc
jp
test
adc
shlb
jmp
push
jb
cli
cli
jp
stos
push
push
mov
ficompl
adc
cmp
rorb
movsb
pop
mov
fisubs
loop
les
outsb
mov
cmp
sub
insl
iret
fsubrs
push
xchg
xor
push
jge
add
notb
lea
add
mov
cmpb
mov
gs
imul
xor
push
lds
xor
adc
push
sti
ret
sub
cmc
mov
popa
mov
inc
cmpsb
adc
loop
mov
shlb
insl
jo
mov
roll
or
outsl
lods
push
incl
ja
add
jae
shll
fstl
sti
int
pop
mov
in
int
jp
pop
mov
int3
stos
mov
pop
mov
cld
and
pop
in
add
and
dec
pop
and
inc
xchg
jge
cmp
dec
and
jae
and
push
or
cmp
sub
cmp
jp
push
jae
ljmp
hlt
add
mov
stos
add
pop
mov
loope
add
add
fstpl
sbbb
add
aad
sbb
jne
dec
ficoml
mov
xchg
push
pop
jnp
shll
mov
mov
imul
aas
hlt
in
cmpl
pop
pop
rorl
lret
jns
fwait
xor
sub
and
enter
sub
in
jb
shrl
or
jg
mov
mov
xor
lret
enter
xchg
cli
mov
pop
addr16
wbinvd
rcll
dec
mov
sbb
sub
das
jno
shll
iret
das
add
pop
ficoml
outsl
sbb
sahf
icebp
sbb
sub
subb
incb
fidivl
mov
pop
int
sbb
cltd
mull
or
and
fwait
add
xchg
add
sti
jne
imul
out
add
jg
jecxz
push
add
or
imul
jo
pop
jecxz
mov
test
dec
cmp
mov
cmp
ds
sbb
ss
push
jnp
push
test
jno
and
lods
or
jl
fldenv
jmp
hlt
xchg
nop
cld
pop
mov
arpl
sbb
fdivl
rorl
repz
jno
idivb
push
pop
mov
loopne
enter
cli
pop
mov
or
inc
iret
jnp
cmp
stc
bound
sub
popf
movsl
arpl
inc
stos
dec
xor
mov
xor
rolb
cwtl
aaa
cmpsb
popa
loope
leave
xchg
sahf
outsl
fnstcw
sbb
push
insl
mov
pop
in
mov
out
js
pop
mov
inc
xor
icebp
daa
push
jge
xchg
add
test
orb
sti
iret
adc
insl
cld
sub
jg
mov
jg
in
pop
shll
mov
mov
subb
push
hlt
fs
jae
mov
and
inc
mov
and
notb
xor
adc
mov
stc
jecxz
lods
jmp
mov
adc
sub
cmp
daa
imul
mov
and
js
popa
cs
outsb
addr16
daa
scas
dec
lret
fwait
and
cmp
jns
cli
scas
pusha
and
push
inc
scas
mov
into
inc
push
lcall
pop
mov
mov
jp
sahf
cmpsb
leave
xchg
je
jne
mov
push
in
stc
cmc
imul
nop
mov
cmc
xchg
xor
cmc
push
xlat
mov
loope
scas
popf
inc
push
and
clc
lea
adc
loopne
filds
sbbb
icebp
es
push
decb
aad
mov
rorb
and
ret
insb
cltd
xor
push
fcomi
mov
pushf
addr16
roll
into
push
and
sbbl
iret
inc
and
jns
rcrl
and
aaa
int3
sub
mov
imul
arpl
mov
lods
int3
fwait
mov
or
push
dec
cli
mov
adc
add
mov
push
movntq
in
das
xor
and
pop
ljmp
daa
xor
xchg
mov
les
cmpb
cmpl
dec
loope
ficompl
adc
lds
sbb
xor
xchg
fdivr
mov
lea
xor
xchg
xor
xchg
out
mov
mov
clc
cmc
addb
std
cmpsb
dec
cmp
divb
fld
int
mov
adc
dec
push
push
das
push
jmp
sbb
inc
sbb
sub
dec
iret
xchg
hlt
cmp
add
or
xchg
enter
adc
dec
jg
addl
stc
mov
jl
push
xor
clc
enter
push
xor
inc
push
out
clc
xor
gs
test
pop
push
mov
lahf
or
loopne
test
ds
push
cs
hlt
jle
inc
stos
cli
xor
int
inc
sub
jae
loopne
test
jp
lcall
mov
xchg
loop
mov
fs
mov
test
dec
jbe
xor
mov
adc
inc
mov
xchg
adc
xchg
mov
pop
jmp
jmp
xchg
in
jns
sub
jecxz
mov
sbbl
stos
cwtl
adc
dec
aas
fdivr
xchg
cld
cmp
enter
mov
cli
es
push
sub
cmp
or
sbb
push
jp
dec
xchg
pop
xchg
push
lcall
push
fiaddl
sub
cmp
or
sbb
push
jp
dec
xchg
pop
xchg
push
lcall
push
pop
push
sub
cmp
or
sbb
push
jp
dec
xchg
pop
xchg
push
lcall
push
fiaddl
sub
cmp
sbb
cmp
jns
int3
outsl
fcompl
dec
cld
mov
inc
rep
mov
mov
fildll
mov
sub
cmp
int3
outsl
fcompl
dec
cld
aas
mov
pushf
pop
lods
bsf
dec
out
cmp
insb
sarl
sbb
outsb
cmp
int3
jbe
inc
in
push
cld
mov
pushf
pop
lods
bsf
in
pop
orb
jl
dec
shlb
fdivrs
int3
add
insb
dec
das
jg
jbe
mov
push
cmp
xchg
inc
and
lcall
adc
stos
lcall
insl
xor
out
jns
lock
jl
insl
adcb
cld
add
push
test
adc
mov
rorl
pop
xchg
and
rorb
inc
je
out
xor
xchg
xor
scas
jecxz
rorl
and
imul
aas
pushl
aas
mov
pusha
rcrl
and
mov
adc
flds
pop
add
bound
lahf
jge
sbb
fistpl
int3
jbe
pop
in
dec
cld
sub
mov
insb
jl
or
sbb
sub
push
adc
cmp
push
loop
in
ljmp
subl
add
cmp
loop,pn
adc
push
fidivs
in
aas
mov
das
clc
pop
fistpl
xor
sub
or
les
dec
jmp
sbb
daa
cltd
ja
das
pushf
pop
lods
bsf
dec
out
pop
fildll
mov
sub
cmp
int3
outsl
fcompl
dec
cld
aas
mov
pushf
pop
lods
bsf
dec
out
pop
fildll
mov
sub
cmp
int3
inc
xchg
loopne
cmp
push
inc
dec
and
scas
scas
add
cmc
sarb
xlat
pop
loope
shrb
dec
mov
adc
scas
hlt
pop
mov
push
push
cmp
push
cmpsb
pop
outsb
jo
imul
scas
int
cmp
mov
lret
or
mov
cmc
cwtl
dec
fisubrs
imul
push
mov
hlt
popf
pop
pop
or
sahf
cmp
cmpsl
dec
push
push
mov
ret
stc
mov
push
lods
mov
testl
cwtl
add
rcr
pop
sbb
xor
imulb
jae
nop
dec
loop
popa
xchg
dec
in
stc
gs
adc
std
jns
ds
xor
sbbl
rcll
or
xor
shrl
lcall
aad
test
loop
xchg
adc
mov
or
pop
stos
and
sub
fstps
push
loop
add
and
sti
jmp
jns
push
or
or
fwait
add
fcmovne
iret
in
mov
leave
jle
test
inc
iret
icebp
jo
jbe
mov
mov
enter
sbb
mov
dec
cmp
pop
and
cwtl
xchg
aad
mov
xchg
cmpsb
pop
mov
data16
lock
cmp
mov
rcrb
xor
push
gs
add
sub
sub
cmc
jns
cli
push
icebp
jae
mov
pushf
data16
push
xor
cmp
fistps
aam
fldt
lock
rep
xor
dec
lret
pop
jo
sub
fs
push
and
in
cltd
cmp
lret
inc
ja
loop
jb
push
sbb
fcmove
adc
dec
jne
add
push
fisttpll
pop
xor
inc
cmc
loope
mov
cli
inc
cmpsl
outsl
ljmp
cwtl
adc
adc
pop
lods
sub
mov
mov
iret
jae
and
stos
aam
cwtl
daa
sbb
adc
jle
dec
or
test
pushf
jmp
cmp
mov
in
movsl
xor
dec
lds
sub
mov
mov
jnp
and
jp
mov
push
pop
out
jl
xchg
shll
mov
xor
ret
inc
cmovnp
aam
pop
cmp
iret
jl
sbb
in
mov
add
push
pmaxsw
adc
pop
test
and
lret
jge
mov
sbb
adc
cmp
cmp
and
cwtl
insl
or
imul
das
ss
cmpsb
inc
cmp
fwait
mov
outsb
test
dec
add
jns
push
cmp
push
lea
cmpl
shrb
lods
inc
std
push
addr16
ret
nop
ret
dec
or
mov
loope
aas
jo
fucomp
and
lea
insl
jmp
adc
ljmp
out
xor
lock
repnz
out
mov
std
jns
and
lods
inc
dec
lret
jecxz
jb
push
sub
jl
rcl
mov
fnstsw
icebp
movsl
imul
cld
sub
or
jp
dec
popa
arpl
pop
nop
or
xchg
lods
jecxz
pusha
push
fildll
ret
pop
frstor
pop
movsb
pop
movsb
orb
outsb
jae
repnz
repnz
xchg
repz
insl
test
push
jg
push
inc
add
cmc
enter
jnp
test
or
jns
movsl
xor
sub
pop
inc
enter
bswap
popf
shrl
repz
xor
bound
mov
leave
xchg
mov
inc
inc
inc
dec
push
jmp
pushf
jle
repz
or
cmp
lock
fmul
fsubrl
mov
lret
cmp
popa
add
mov
add
sbb
in
shll
jle
in
js
scas
in
sub
notb
push
popf
xchg
imul
icebp
xlat
mov
xchg
jnp
fldt
in
jbe
cs
pusha
das
cwtl
lret
mov
sub
sbb
push
fildl
pop
dec
xchg
imul
ds
dec
rcll
popf
aad
icebp
lods
push
xor
pop
lcall
xor
das
xor
xchg
stc
mov
lret
xchg
sbb
mov
and
in
repnz
popf
fistpl
shrl
fdivp
adc
jp,pt
scas
sub
xchg
inc
scas
lds
jae
std
adcb
icebp
fnstcw
jecxz
pop
movsb
sar
ret
mov
js
aam
scas
sub
loop
pop
mov
in
rcr
aas
push
std
push
mov
push
stc
xchg
ret
mov
ret
mov
inc
pop
dec
sahf
and
xchg
out
cltd
in
push
and
ret
adc
dec
pop
mov
js
lret
jp
stos
mulb
mov
mov
push
cmpsb
pop
jmp
andb
outsb
loopne
subl
xchg
or
fiaddl
repz
fdivp
xchg
push
and
cmp
adc
mov
daa
divl
pop
jecxz
ja
shrl
movsl
call
xchg
or
sbb
jo
adc
xor
mov
fsubl
push
enter
sbbb
dec
ss
movsb
inc
and
push
cmp
popf
leave
mov
movb
popf
iret
cmp
jno
enter
adc
frndint
jne
jg
mov
int3
jnp
loop
xchg
int3
cwtl
mov
xorl
dec
jp
xor
xchg
push
mov
xchg
pusha
imull
inc
shlb
movsl
inc
fists
pop
inc
or
fsubrs
cmpsb
ds
jno
insl
iret
jb
pop
into
mov
add
inc
push
scas
mov
sarl
lret
std
sbb
cmpsb
std
jg
mov
push
adc
cmpb
ret
shlb
incb
jae
in
sbb
cmpsl
test
dec
jmp
push
aas
mov
xor
mov
cmc
jo
arpl
pop
cmc
or
dec
jp
dec
jne
dec
insl
ret
jg
cmpsl
adc
inc
jnp
int3
ror
repnz
test
lock
aad
xchg
aaa
and
mov
mov
hlt
sbb
pop
push
je
outsb
inc
into
sti
mov
je
mov
mov
lock
js
jle
out
cmp
hlt
jp
mov
push
aas
cmpl
in
inc
ja
test
enter
je
cmp
out
sbb
imul
pushf
jns
out
mov
rcrb
mov
imul
loope
aas
negb
sti
jg
loopne
fmull
mov
aam
push
xor
ffreep
mov
sbbb
jnp
test
enter
mov
jge
and
test
xor
mov
mov
pop
lret
stc
in
das
sahf
xor
adc
inc
xor
mov
movsl
pop
cmpsb
and
insb
cli
leave
lret
sub
mov
sbb
inc
lcall
lret
inc
push
enter
leave
add
lret
lock
inc
sub
jne
lds
cmp
lds
xchg
jae
and
dec
and
adc
cmp
sub
sahf
push
xchg
sbb
push
lds
cmpsb
and
out
xor
and
pop
pop
sbb
sub
insl
int
push
je
je
push
stc
and
mov
push
sahf
pop
xchg
adc
fcomip
test
jl
arpl
fldenv
pop
ss
mov
in
cmc
adc
test
mov
jg
in
lea
mov
fs
loopne
push
int
mov
or
sub
mov
shlb
lahf
xor
add
andl
and
lds
mov
dec
push
dec
data16
mov
cwtl
test
cwtl
dec
out
pushf
sti
ljmp
sbb
insb
test
lods
cmpl
or
fs
sub
notb
call
icebp
popa
jbe
into
jns
push
sub
pusha
das
stc
pop
loopne
dec
sub
ret
inc
jl
fildll
dec
jp
push
cmpsb
adc
cwtl
jge
jp
loop
idivl
je
clc
cli
mov
mov
or
adcl
into
lea
jmp
sahf
int
in
cmp
sbb
clc
cmp
jbe,pt
andb
ret
and
shll
mov
xor
jne
aas
movsl
mov
sbb
nop
cmpsb
sbb
pop
jnp
pop
sbb
fisttpll
mov
jo
and
ss
mov
daa
out
ljmp
jg
ret
lret
adc
shl
jge
push
inc
xor
jnp
ds
push
xor
fs
adc
shll
icebp
dec
sbbb
fldl
sbb
jecxz
sarb
gs
mov
sbb
sub
ljmp
sbb
xchg
mov
add
xchg
pop
lods
addr16
clc
jge
bnd
push
push
iret
loop
dec
clc
add
pop
mov
inc
jge
andl
mov
daa
mov
sub
stc
call
leave
dec
and
jecxz
insl
leave
xor
inc
cwtl
xchg
ss
or
aas
test
mul
push
bound
mov
repnz
jno
inc
loopne
adc
adc
cli
xor
aaa
push
into
ljmp
xchg
shl
aaa
push
lret
std
mov
loop
ja
mov
pop
pop
movhps
pop
negb
inc
fs
aas
out
stos
sti
outsl
pop
jp
inc
pushf
mov
xchg
je
std
xor
inc
sub
push
adc
fcoml
cmc
mov
xchg
pop
push
and
loope
sbb
jmp
push
movsl
imul
movsl
lret
sbb
fisttps
xor
loop
popf
cltd
cmp
shlb
fwait
push
lret
xor
or
popa
hlt
stos
movsl
pushf
xchg
insb
lea
push
cmpsl
xor
and
mov
xorl
mov
push
adc
sahf
lds
sbb
inc
jne
xchg
or
pop
pop
mov
pushl
out
rcl
es
mov
ret
popa
sub
xchg
out
push
pop
pop
cmp
les
push
xchg
dec
and
lock
jno
xchg
sub
add
divb
dec
rorb
push
leave
inc
pushf
sbb
icebp
xchg
dec
popf
sub
mov
mov
push
push
xor
in
push
mov
pop
comiss
pop
jge
mov
jno
aas
inc
inc
xor
lock
mov
mov
popa
xchg
cmp
daa
aad
repnz
or
mov
xor
and
popf
push
pushf
lahf
dec
xchg
or
jae
mov
xor
dec
lea
push
int3
jg
in
es
lret
ret
dec
repz
mov
or
les
mov
adc
loop
xchg
cli
mov
or
std
rclb
jecxz
aad
push
fistl
ficoml
stos
lea
cmp
or
jle
mov
jo
pop
bound
pop
and
sbb
out
sahf
arpl
jmp
popa
imul
xchg
xor
sbb
push
dec
mov
iret
sbb
mov
rorl
dec
repz
gs
aaa
mov
fcomp
stos
leave
xchg
test
dec
loopne
inc
jle
lret
cmp
pop
scas
cs
mov
and
pop
stc
lret
jecxz
push
cmp
ret
sub
mov
test
mov
dec
stc
adc
mov
cwtl
mov
sbb
jno
or
jmp
jnp
movsl
ja
das
rorl
xchg
mov
sbb
mov
in
ret
cmp
outsb
xor
dec
cmpsb
lret
mov
in
sbb
pop
sub
add
or
pop
pop
stc
jge
int
mov
stos
imul
repz
inc
movsb
outsb
adc
int
mov
xchg
push
sub
mov
pop
pop
jne
xlat
push
mov
int
jo
lret
adc
mov
mov
stc
add
cmpsb
das
add
jmp
pop
imull
dec
gs
jl
pop
test
push
bnd
add
jl
and
les
xor
mov
daa
insl
jnp
push
subb
cmp
out
pop
xchg
push
enter
out
cmp
mov
scas
add
mov
adc
js
mov
or
mov
add
mov
ljmp
out
lcall
cmc
jl
imul
jne
pop
or
movsb
loope
push
pop
lahf
gs
adc
mov
xchg
adc
or
lahf
sbb
push
fistl
jg
loop,pn
pusha
mov
dec
xchg
mov
ficomps
sbb
mov
test
imul
cmp
xchg
dec
inc
add
mov
imul
cli
aad
jg
jge
and
adc
push
pushf
je
into
stos
enter
jp
push
push
insl
je
mov
push
add
das
test
fcmovnb
cmp
roll
sub
scas
xchg
mov
lods
adc
out
mov
cmp
inc
aam
mov
jecxz
inc
mov
sub
push
push
mov
cmpsl
dec
imul
jae
enter
fsts
push
and
pop
idivl
pop
pushf
test
or
aaa
inc
sbb
rclb
cltd
mov
sarl
imul
in
call
push
cs
add
inc
pop
in
fdivrl
fidivl
out
loopne
and
cmpsl
rcll
jno
push
in
pushf
mov
and
movsl
push
stc
pop
test
pop
xchg
push
neg
sub
loop
sti
fcoml
fists
fcoms
lods
dec
jg
cmpsb
and
rcrl
stos
xor
push
shll
cmp
pop
lds
mov
mov
insb
sbb
testl
movl
sbb
lret
not
sbb
cmp
xchg
iret
sub
repnz
jne
loop
xor
repz
loopne
mov
pushf
xor
or
sbb
adc
or
mov
pop
and
scas
fs
and
ja
dec
movsb
cmp
lods
xor
sbb
std
xchg
pop
inc
pushf
jle
test
sbb
sti
arpl
push
jno
insb
ljmp
inc
popf
jne
mov
adc
jmp
jle
mov
push
ss
shl
loop
dec
in
xchg
test
mov
rorb
mov
pop
xor
xor
push
inc
mov
or
bound
test
sub
jo
sub
fmulp
pop
or
mov
cmp
fs
push
mov
loop
insl
adc
add
adc
insb
mov
test
inc
insl
adc
mov
cmp
mov
sub
push
icebp
es
nop
sarb
jnp
rcrb
mov
mov
fsubrp
mov
test
pop
inc
neg
inc
and
xchg
ja
iret
pop
imul
cmpsl
push
sub
xchg
pop
fwait
js
dec
pop
lock
pop
out
inc
and
jne
xor
and
jecxz
out
and
push
aaa
adc
pop
jg
pop
jmp
adc
push
pop
inc
cmpsl
jle
addr16
inc
jge
insl
das
es
test
jb
cwtl
adcb
jb
add
ljmp
pop
or
mov
pop
jnp
data16
and
lahf
pop
dec
inc
sub
sbb
cmpsl
cwtl
mov
sub
dec
and
hlt
lods
jbe
add
jne
dec
jle
cmpsl
dec
out
and
loopne
inc
jmp
push
push
or
xor
mov
or
push
pop
lret
outsl
jmp
int
cmpsl
je
popf
incl
fdiv
pop
dec
fimull
es
push
fwait
lcall
push
jmp
adc
mov
sbb
cld
jmp
das
leave
dec
int
sbb
jle
rolb
jno
gs
andb
leave
sbb
xlat
pop
dec
mov
test
andl
insl
cmp
xchg
sub
push
lcall
test
inc
test
jb
jo
or
xor
sub
jge
lcall
stos
mov
pop
ss
in
add
sub
or
mov
mov
popf
mov
out
or
inc
mov
ja
jecxz
pop
add
lcall
push
or
repz
lret
sti
in
lock
cwtl
sbb
push
out
leave
push
pop
sub
sbb
pop
add
adcl
jno
cltd
test
pop
inc
daa
mov
pop
pusha
push
add
loop
aam
imul
or
or
cwtl
adc
pop
arpl
pop
movsb
insl
in
test
adc
xchg
mov
jle
inc
sbb
lock
mov
je
out
jecxz
xchg
shlb
js
jle
mov
inc
inc
mov
mov
lret
pop
mov
test
jno
iret
repz
sti
aam
pop
inc
test
sti
movlps
pop
push
sahf
xlat
xchg
loope
and
xchg
js
cmp
mov
in
and
and
ss
pop
ret
inc
pushf
imul
pop
cmpsb
dec
js
push
xchg
push
mov
mov
scas
insb
push
fs
xchg
ror
lds
sbb
clc
adc
into
aam
sub
popa
adc
rcl
data16
addr16
push
lret
mov
inc
xchg
mov
lock
test
xchg
cli
and
inc
std
out
test
mov
inc
aaa
lods
push
dec
xchg
lock
lds
sbb
xchg
in
repz
popf
out
iret
insb
fucomip
imul
mov
mov
or
out
mov
sbb
sbb
dec
cmp
xor
aam
enter
dec
lds
mov
sahf
fstpl
adc
adc
add
scas
subb
outsl
subb
insb
or
pop
fnsave
inc
inc
sahf
in
lret
shll
call
mov
mov
dec
pop
test
adc
lahf
fbstp
cltd
mov
test
mov
cmc
mov
out
ret
cwtl
add
movsl
xchg
push
mov
xor
icebp
scas
sti
lcall
jno
lds
bswap
jle
hlt
sub
pushf
xchg
fildll
jno
sub
mov
aas
sub
dec
rcrb
dec
cmpsb
add
xor
mov
pop
mov
mov
jle
outsl
arpl
xchg
scas
cmpl
mov
xor
insl
dec
lds
xchg
mov
icebp
cwtl
incl
ja
push
loop
aam
mov
stos
dec
xor
cmpsb
aas
push
dec
repnz
xchg
add
jnp
mov
jmp
jns
mov
xchg
imul
dec
xlat
call
add
imul
mov
cmc
lods
xor
insl
mov
shll
lcall
ds
cltd
in
enter
xor
jl
div
adcb
dec
cwtl
flds
ja
popf
xchg
aam
subl
dec
fimuls
jmp
xchg
sub
movsb
jns
mov
add
in
loopne
call
xor
pop
aas
pop
sahf
push
mov
jp
mov
mov
dec
lret
and
mov
sub
repz
scas
push
xchg
arpl
cltd
daa
jb
lahf
dec
cmp
adc
loop
mov
pop
cs
sub
push
add
test
into
sub
out
mov
out
stc
in
loop
cwtl
dec
ja
adc
pop
mov
in
pop
and
repnz
fistps
outsb
stc
pop
mov
sub
mov
or
jne
nop
mov
cmpl
arpl
dec
rol
cmp
outsl
xchg
jb
sbb
cmpsb
test
dec
je
pop
lahf
add
les
xchg
out
mov
mov
andb
inc
lret
scas
dec
mov
loop
jo
dec
or
or
mov
pop
inc
mov
rorl
pusha
out
push
les
xor
aaa
sbb
cs
dec
mov
mov
in
dec
enter
into
push
stos
aam
jmp
int
inc
mov
xchg
out
dec
xchg
ret
inc
js
insb
cmpsb
jl
pop
fcmovbe
jecxz
sub
jno
out
stc
fmul
mov
mov
or
mov
daa
inc
dec
adc
dec
js
pusha
popf
fcmovnbe
ss
sub
mov
lcall
xorb
dec
sti
xchg
incb
xor
lock
push
or
fiaddl
inc
or
mov
mov
ror
dec
cwtl
repz
mov
pop
or
jo
adc
and
lret
xchg
testl
sub
orb
cmp
div
push
stos
test
inc
mov
push
sub
cmpsb
sub
xor
imul
or
into
adc
add
and
and
inc
mov
jp
dec
add
xchg
mov
fldenv
xor
iret
rcll
dec
push
push
xchg
mov
sbbl
push
ds
dec
bound
mov
inc
dec
pop
scas
stc
push
mov
aaa
mov
push
xor
mov
xchg
or
cli
push
and
mov
ret
pop
sar
mov
ficompl
mov
icebp
jnp
pop
mov
pop
into
inc
and
es
push
mov
cld
aas
mov
pushf
pop
lods
bsf
dec
out
pop
fildll
mov
sub
cmp
int3
outsl
fcompl
dec
cld
aas
mov
pushf
pop
lods
bsf
dec
out
pop
fildll
mov
sub
cmp
int3
outsl
pop
pop
insb
dec
cld
aas
mov
sbb
lods
bsf
int3
out
pop
fildll
mov
sub
cmp
int3
insl
fcompl
dec
cld
cmp
lods
mov
jne
iret
or
test
jecxz
shll
mov
clc
push
enter
mov
lret
jge
jo
xor
jecxz
repz
sbb
clc
arpl
jae
add
xor
js
sub
lcall
mov
loope
shlb
jae
add
xor
jae
and
sub
pop
shll
jnp
jno
cwtl
inc
clc
daa
test
mov
mov
and
xchg
filds
movsb
pop
test
dec
add
pop
jp
dec
jne
enter
outsl
sti
inc
in
js
push
cmp
jecxz
repnz
inc
outsl
sbb
mov
clc
test
push
mov
mov
add
xor
cmpl
pop
fbstp
sub
lea
lods
add
cwtl
arpl
dec
sbb
imul
pop
icebp
xchg
or
pop
scas
xchg
mov
mov
add
cwtl
fmull
rcrb
pop
rolb
loopne
or
clc
stos
xchg
push
adc
call
xchg
mov
pop
repz
mov
mov
inc
clc
push
enter
mov
and
rcll
inc
repz
add
fwait
cs
subb
aad
mov
inc
sbb
js
cmp
pop
ljmp
clc
sbb
data16
cmp
push
js
or
in
dec
cld
js
sbb
adcl
fadds
shrb
adc
ret
js
dec
jecxz
repz
sbb
enter
test
mov
xor
js
dec
jecxz
repz
sbb
xchg
xchg
mov
xchg
xchg
add
inc
fimull
pop
mov
outsl
mov
lods
mov
add
loopne
dec
les
xor
je
orl
into
mov
xchg
add
push
mov
dec
cmp
pop
push
push
inc
ret
nop
dec
in
pusha
xor
out
and
push
sahf
fisubrl
enter
adc
fnstcw
xlat
lcall
sbb
gs
jecxz
pop
mov
fs
stos
or
in
xlat
shll
out
jmp
cmp
adc
and
outsb
mov
rorb
les
xchg
pop
imul
sub
mov
nop
call
dec
stos
movsl
xchg
pop
xchg
mov
sbb
adc
xchg
mov
ret
jge
stos
popf
incl
cwtl
push
cld
ja
xchg
add
ret
out
call
cmpsb
daa
jae
mov
adc
fcom
push
mov
inc
push
int3
arpl
mov
cmp
inc
xor
jp
out
pop
xor
adc
or
dec
shrb
stos
les
pushf
mov
push
insl
or
cltd
mov
mov
pop
loopne
pusha
sbb
xchg
mov
sti
xor
jns
adc
fldcw
shrl
je
jmp
adc
xchg
sub
ret
repz
cli
loopne
rclb
and
push
sahf
outsl
add
push
gs
mov
shrl
cmp
push
outsb
inc
lods
scas
xor
jb
adc
mov
and
inc
lcall
aaa
popa
test
loop
inc
sub
enter
shll
push
or
pop
push
adc
das
ljmp
jno
inc
inc
xchg
in
in
cmc
cmp
mov
sarb
int3
hlt
mov
and
outsl
mov
repnz
jns
idivl
loopne
jo
push
xor
and
xchg
sub
hlt
xchg
xchg
sub
loop
movsl
dec
cwtl
push
popf
loop
in
pop
and
push
inc
in
mov
sub
mov
cmp
adcl
shll
or
pop
sbb
sbb
inc
jne
daa
push
xor
mov
std
push
pop
loopne
dec
pop
fistpl
stos
mov
call
cs
dec
jns
or
adc
fmull
ljmp
jmp
in
xor
push
mov
cwtl
js
fnstenv
ret
xorb
jp
rcrb
inc
aam
xor
fistps
sub
lahf
cld
jno
adc
sub
and
dec
loope
fists
mov
int
ljmp
lret
xor
and
dec
mov
jo
add
mov
pop
add
lea
sub
and
mov
pop
adc
cmc
adc
arpl
ljmp
mov
mov
iret
pop
inc
or
push
imul
pop
xor
push
inc
inc
call
insb
mov
and
cli
xor
xchg
mov
or
into
jae
adc
idivb
push
sbb
dec
adcb
je
lds
mov
sub
or
out
push
aaa
pop
mov
mov
jno
pop
test
add
add
xchg
xor
out
sub
sti
enter
jge
fisubl
dec
sahf
inc
test
sbb
paddw
dec
fstp
pusha
jbe
cltd
sub
jge
adc
subb
pop
add
cmp
mov
into
jmp
and
xchg
jb
pop
loop
push
cmp
xchg
xchg
lcall
push
xor
xor
xchg
movsb
stos
lcall
and
mov
sbb
mov
sbb
prefetcht2
hlt
push
lock
mov
and
sbb
clc
cs
lcall
and
push
loopne
sub
xchg
imul
ret
xor
int
and
mov
clc
or
sbb
fistpll
lcall
or
pop
pop
mov
aam
pop
movsb
test
push
test
adc
loope
pop
imul
mov
adc
cmp
mov
or
leave
cs
mov
sub
mov
jge
push
lds
cli
adc
fisubrs
je
sub
aaa
inc
movsl
push
push
fsubl
shlb
mov
sbb
xor
jmp
mov
leave
sub
xchg
addr16
mov
push
or
jb
outsb
fistps
jmp
mov
daa
outsb
xor
aaa
sub
mov
sti
repz
lods
cmp
das
jecxz
fldenv
mov
mov
fidivrl
in
push
mov
sbb
sti
add
inc
mov
lcall
pushf
adc
mul
scas
dec
mov
popf
add
mov
cmp
jge
push
insb
and
xor
rclb
cld
dec
cmp
xchg
enter
pop
dec
sub
mov
push
xor
adc
test
xor
xchg
in
lea
sbb
inc
or
out
cmpsb
cld
mov
imul
add
adc
aaa
cmc
test
stos
pop
mov
inc
rorb
push
sti
dec
adc
add
xchg
push
jne
popa
jmp
test
and
xchg
pop
sub
mull
or
push
mov
clc
incl
and
enter
sub
or
cwtl
inc
pushf
push
sbb
add
rcrl
mov
xor
lods
mov
fsubrs
dec
lds
loop
or
push
div
dec
mov
mov
aas
cs
xlat
insb
sahf
ret
repz
fists
aad
mov
mov
lock
insl
call
cmp
stos
mov
mov
add
mov
js
and
fisttpl
stc
inc
mov
ret
cmp
fisttps
orl
and
pop
cltd
testb
adc
and
into
cmp
xchg
inc
mov
fadd
push
lds
sbb
insb
cmp
lods
iret
xor
dec
mov
test
je
mov
insb
jo
jl
das
movsb
add
xchg
nop
xor
or
mov
and
sbb
jge
mov
add
add
adc
dec
lret
int
imul
imul
push
push
xchg
leave
stos
xor
int3
mov
jno
fnsave
sub
pop
and
xchg
adc
mov
scas
out
lcall
pause
and
andl
add
xchg
lea
xlat
mov
sbb
loope
xchg
cmp
test
sub
rcrl
pop
mov
pop
rol
push
pop
movsb
rcr
lahf
call
lock
cmp
pop
pop
pusha
or
pop
push
insl
stos
xchg
es
mov
fwait
xor
addr16
or
inc
ds
add
pop
xlat
and
loopne
popa
decl
mov
int
dec
xchg
jecxz
imul
cmp
and
outsl
mov
insb
pop
push
subl
test
cli
out
lds
add
out
sbb
int
aas
inc
mov
stos
in
lret
inc
mov
les
cs
mov
rclb
inc
daa
add
dec
movsl
xchg
cs
xor
shl
stos
xor
jle
insl
jae
out
and
mov
lods
xchg
loopnew
out
pop
mov
adc
fs
jae
jbe
call
mov
call
mov
inc
adc
scas
into
cltd
pop
mov
pop
dec
inc
mov
imul
pop
rep
dec
push
fs
outsb
lret
jnp
add
inc
and
mov
fdivrs
cmc
fs
cltd
dec
inc
scas
mov
add
inc
movsb
mov
lret
call
jecxz
dec
push
pop
sahf
inc
push
pusha
sahf
std
pop
rorl
cltd
fisttpl
mov
xchg
and
mov
outsl
adc
shl
xchg
sti
adc
sub
imul
lods
lret
pop
sti
add
or
sub
xchg
jnp
stos
mov
inc
xchg
outsb
dec
insl
inc
sub
les
paddq
or
xchg
adc
fwait
sub
push
repnz
mov
sub
dec
gs
xor
jno
cltd
notb
inc
imul
loopne
pusha
dec
sahf
loopw
arpl
or
fcomps
adc
addb
jp
push
fs
psrlw
inc
es
ljmp
test
or
lea
mov
push
pop
sbbb
ficoms
cmp
add
lods
pop
imul
fists
inc
int3
xchg
push
adc
mov
xchg
nop
xchg
in
jle
mov
gs
add
ret
dec
pop
xor
jp
and
sub
or
fcoms
sub
test
clc
fsubs
sbb
and
cwtl
mov
jbe
lods
hlt
out
das
push
sub
rcrl
iret
or
popf
aad
pop
add
add
jo
rolb
cmp
adc
int
imul
es
in
xchg
inc
xchg
jle
sbb
ja
adc
call
popa
jb
nop
push
push
call
sti
loop
mov
in
jnp
dec
aas
daa
outsl
jl
ret
cwtl
lret
mov
pushf
add
aaa
lea
push
xchg
pop
push
jmp
inc
push
pop
imull
xlat
loope
mov
adcb
je
mov
je
test
verr
dec
loop
mov
rorl
mov
and
jl
mov
jp
dec
add
lea
and
push
pop
inc
insb
add
loopne
lret
sbb
pushf
les
cmovp
push
and
loop
pop
imul
pop
mov
into
push
jge
insl
insl
pusha
ror
fadd
xchg
loop
fcoml
sbb
gs
push
mov
jo
cmp
cmp
sbb
sahf
and
into
das
outsl
sbb
mov
sar
lock
inc
iret
push
in
negl
sub
and
rol
jns
add
inc
ljmpw
xor
push
xor
or
xchg
sahf
add
mov
or
cmp
rsqrtps
inc
cmc
pop
sub
popf
icebp
xor
into
push
cmpsl
add
or
int3
sarl
rclb
and
rolb
fdivrp
jbe
push
sub
add
adc
mov
fstl
test
std
test
xor
popf
xor
mov
loopne
mov
out
xor
jno
push
mov
pusha
dec
cmpsl
lret
test
mulb
jecxz
dec
popa
jecxz
ret
xor
xchg
data16
movsl
cmp
pop
es
jmp
nop
mov
rorl
orb
outsb
rol
aam
sbb
stos
adc
add
insl
mov
mov
jo
inc
loop
mov
testb
lmsw
sahf
add
mov
inc
fsubrl
shll
daa
fidivs
add
movsl
mov
mov
sahf
sbb
in
sbb
loope
mov
int3
add
jl
inc
and
cmpsb
xor
jb
stc
push
cltd
addr16
mov
inc
mov
or
push
push
cld
icebp
mov
fsincos
cmp
mov
incb
sbb
repz
repz
in
sub
inc
pop
push
xchg
add
das
loopne
cld
clc
insb
cmp
rolb
iret
in
add
mov
in
movsb
mov
dec
into
dec
push
fdiv
lcall
mov
lock
push
adc
icebp
inc
add
das
add
outsl
loope
jbe
cmpsb
mov
and
sub
mov
mov
imul
popf
icebp
adc
mov
or
sbb
data16
test
out
push
adc
outsb
adc
into
lcall
xor
or
pop
push
lret
mov
sub
jbe
mov
push
sti
mov
sbb
xor
out
push
cmp
xchg
mov
repnz
outsb
xor
mov
clc
xchg
and
xor
cwtl
mov
lods
and
xlat
pop
pop
or
pop
push
mov
mov
inc
pop
pop
mov
mov
nop
int
adc
xor
xor
push
push
mov
popf
mov
call
dec
push
in
push
aaa
mov
xlat
cmp
add
pop
sub
xchg
sub
imul
fdivr
mov
jle
leave
add
cmp
into
mov
mov
repnz
jmp
sub
rcll
and
fidivrl
mov
std
insl
int
jge
dec
dec
cmp
enter
push
inc
or
cmc
jae
add
adc
xor
adc
lret
mov
inc
mov
test
sti
outsb
bound
mov
std
xchg
mov
mov
imul
adc
dec
sahf
rcl
mov
lods
ds
xor
mov
jbe,pn
xchg
negb
and
xchg
xchg
sub
repnz
jge
jbe
ja
dec
xchg
mov
lds
sbb
loopne
add
lock
fstpt
sbb
ds
in
cmc
pop
and
imul
jg
loope
fs
xor
sti
in
lcall
fsubr
call
and
push
cmp
cmp
sub
pop
dec
push
xchg
decb
ret
repz
call
add
inc
das
fmuls
add
mov
mov
add
rcl
pop
rcrb
stos
int
in
and
cmp
negb
or
cli
jecxz
clc
test
ret
insb
add
mov
jnp
test
out
repnz
sahf
cld
rorb
or
sub
pusha
or
test
sahf
add
sarl
inc
test
out
pop
mov
mov
jg
jmp
or
push
sub
xchg
rcrl
push
inc
cmp
and
push
lret
mov
mov
pand
jmp
mov
ds
push
insl
jge
test
push
aas
mov
jbe
sbb
inc
sub
cmp
test
pushf
push
das
out
mov
or
add
fsubr
pop
lret
cmp
sub
cwtl
dec
cmpsl
sub
xchg
into
push
inc
aam
mov
fidivs
ret
in
mov
ja
and
cld
and
cmp
xchg
aad
pop
les
pop
xchg
call
pop
mov
or
aas
xchg
xchg
in
jne
sub
jp
icebp
cmp
outsl
pop
jae
jnp
negb
popa
push
int
shrb
sub
pop
xor
pop
push
mov
lock
movsl
mov
repnz
in
push
leave
add
fsubp
comiss
jmp
lods
sub
lret
fildll
aam
xor
lahf
fimull
jle
mov
fs
addr16
cmp
lods
xor
cmpsb
std
fstpt
xor
pusha
call
int3
sbb
imul
cltd
lret
jns
call
pop
adc
bound
lods
mov
rcrb
int3
outsl
jne
loope
sub
lahf
add
cmpsl
loop
inc
xor
cmc
dec
pop
adc
wbinvd
cmpsb
sub
fsubl
jge
test
fbstp
test
aaa
ljmp
mov
xchg
icebp
inc
mov
lods
out
adc
hlt
mov
push
test
je
xor
aam
mov
xor
xchg
xchg
daa
mov
enter
push
jmp
push
xor
pop
jg
push
fwait
cmpsl
mov
rcrl
stc
xchg
js
je
or
push
cmpsl
movb
mov
jbe
scas
xor
int3
xchg
mov
inc
jae
adcb
sub
and
loop
inc
fisubl
cmp
aam
pop
cmp
int3
in
int
inc
jae
xlat
and
pop
pop
or
dec
and
inc
aam
shrb
push
mov
int
add
push
inc
scas
jge
xchg
stos
sub
xchg
int
repnz
jg
sbb
int3
cs
adc
push
pop
or
daa
addr16
leave
imul
icebp
ja
pop
sub
pop
je
pop
cmp
movsl
or
icebp
aad
in
jecxz
or
and
mov
hlt
dec
inc
or
mov
stc
xor
insl
aad
and
or
add
mov
out
push
mov
les
mov
mov
add
pop
jno
gs
mov
and
sbb
xor
lret
push
pop
ljmp
cli
xchg
ljmp
pop
ds
dec
test
int
fcomi
push
push
lcall
test
push
andb
movsl
add
fdivr
xchg
adc
cmp
dec
xchg
and
and
push
xor
fcmovu
cmp
pop
cmpsb
jmp
push
cld
stc
aad
push
pop
jae
xchg
push
mov
call
xchg
arpl
pop
sbb
dec
imul
cli
addl
test
jmp
cmpsl
jmp
add
push
pop
lret
pop
pop
add
jnp
cmp
cs
int
ss
mov
lret
call
pop
pop
xor
push
jne
mov
test
outsb
mov
cmp
mov
adc
dec
or
rcrl
imul
ret
add
int
call
jb
push
and
pop
and
rolb
test
adc
mov
jmp
sub
xchg
nop
add
fbld
inc
mov
push
and
inc
testb
out
mov
mov
cwtl
imul
test
xchg
insl
fstl
andb
nop
dec
mov
in
push
cli
mov
inc
push
out
mov
lock
lds
out
push
shrb
push
les
or
or
sbb
cs
mov
jo
and
cmp
pusha
mov
subl
roll
je
clc
sbb
sbb
push
jae
sti
data16
pop
mov
cmpsl
xchg
cmp
pushf
lahf
subl
xor
xchg
xchg
out
inc
cmpsb
sub
or
aaa
ljmp
push
shlb
iret
test
pop
mov
daa
pop
dec
lahf
mov
add
lcall
test
xor
push
pop
scas
pop
out
lret
leave
out
mov
enter
in
adc
stos
adc
es
je
outsb
jecxz
mov
push
loopne
xor
leave
mov
loop
cmp
push
dec
mov
loopne
push
daa
jecxz
shll
push
cld
or
mov
jo
push
inc
jno
adc
jl
icebp
mov
xchg
dec
imul
jmp
jae
cmpsb
cmp
loop
and
ret
test
dec
add
aas
rcll
jo
pop
int3
pop
popf
insl
pop
lcall
xor
inc
je
shlb
test
shl
xchg
sbb
adc
mov
in
push
adc
pop
dec
lcall
inc
mov
pop
faddl
inc
add
stos
jb
xchg
lods
cs
sarb
mov
nop
mov
pop
jmp
je
add
ret
mov
sbb
fcmovbe
sbb
xchg
rcll
jecxz
mov
pop
or
movsl
cli
inc
mov
lds
int3
add
pop
jae
push
sbb
cmp
mov
fs
nop
ja
lock
decb
in
xor
mov
push
dec
addr16
jne
mov
fsubrp
push
xor
ljmp
or
inc
mov
jne
or
cmp
jbe
dec
add
push
imul
pop
sub
push
stc
xor
lods
add
add
xor
je
inc
mov
shll
aad
fldcw
popa
stos
jg
fsts
mov
sbb
std
sub
lock
test
jge
jb
and
dec
cli
dec
jmp
jge
inc
sub
inc
rolb
pop
sub
xor
add
iret
mov
inc
cli
cld
pop
leave
adcb
fistl
aaa
pop
cmp
pusha
or
cli
daa
arpl
dec
icebp
das
xor
aam
cmpsb
add
stos
lock
hlt
iret
mov
xchg
xor
jmp
nop
scas
sbb
lcall
xchg
xchg
cmp
push
adc
jmp
ds
xchg
in
cmp
inc
pop
inc
leave
mov
shrb
enter
ror
dec
arpl
shl
lcall
mov
popa
sub
push
add
mov
pop
lret
xchg
in
lds
push
fchs
mov
xor
popa
int3
fstl
aas
aad
ljmp
and
leave
cwtl
cmp
mov
cmp
cmc
std
fdivrl
xchg
lock
xor
fistpll
rclb
inc
xor
mov
inc
sbb
pop
std
inc
adc
sub
xorb
push
pop
cwtl
jecxz
xchg
mov
xchg
repnz
adc
push
movsb
lret
out
jge
xchg
pop
dec
dec
sar
dec
push
lret
inc
inc
aam
loope
dec
imul
push
shll
test
mov
xor
js
dec
jecxz
repz
sbb
enter
test
mov
xor
js
dec
jecxz
repz
sbb
enter
test
mov
xor
js
dec
jecxz
repz
sub
arpl
ja
add
int3
xchg
cmp
jns
jecxz
test
mov
negl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pushw
inc
and
das
lea
jae
sbb
xor
mov
mov
xchg
xchg
lock
inc
and
es
faddl
pusha
push
add
xor
mov
mov
xchg
jbe
inc
mov
es
insb
push
mov
push
mov
mov
cmpsb
xchg
lds
adc
pop
jle
push
aas
sub
fucomi
jl
test
sbb
int3
lock
scas
mov
stos
mov
inc
lods
cli
and
xor
jnp
cmp
sub
shl
jge
add
jae
in
int3
dec
sti
pop
or
push
cmp
add
rclb
xor
dec
inc
leave
cmp
push
push
jg
shlb
sub
mov
jle
sbb
clc
ret
jae
mov
fs
adc
out
incb
notb
xchg
cvtps2pd
mov
or
and
mov
pop
mov
das
inc
loopne
je
add
inc
movsb
push
cmp
inc
ss
push
mov
notb
mov
clc
cmpsb
in
mov
xchg
xchg
sahf
add
adc
arpl
push
inc
xor
aas
imul
xchg
aad
aam
fldenv
scas
mull
inc
add
inc
pop
adc
inc
push
push
sbb
in
mov
nop
rcrl
push
jbe
add
push
arpl
push
push
pusha
push
jo
xor
mov
mov
xchg
xchg
lock
inc
and
es
ss
push
pusha
push
jo
xor
mov
mov
xchg
xchg
lock
fildl
les
mov
push
inc
and
sbb
je
sub
dec
aas
lretw
pop
cmpsb
jecxz
fwait
inc
mov
test
xchg
jno
lods
pop
add
cli
jmp
enter
in
test
leave
inc
std
daa
jmp
jb
sbb
imul
or
out
jo
jb
inc
jno
dec
rol
icebp
xor
cs
jecxz
das
pop
in
mov
pop
xor
cmp
clc
lahf
scas
cmp
imul
insl
sub
cltd
jb
inc
inc
cs
push
or
iret
and
in
or
add
sbb
and
jle
ror
add
cli
jae
into
aam
xchg
daa
in
pop
in
push
lods
jb
adc
movsb
xchg
xchg
push
mov
mov
cmpb
jnp
addl
clc
mov
xor
adc
pop
rcll
sbb
call
jo
inc
popf
xchg
shr
fcomps
mov
loopne
in
xor
ja
push
outsb
outsb
or
mov
ret
iret
push
add
dec
inc
fisttpll
mov
add
jns
adc
or
fimull
and
cmp
push
xor
jnp
dec
xor
jmp
repz
inc
sbb
test
cli
xchg
orb
out
cld
rcl
mov
shr
inc
iret
scas
int
lock
loop
jae
fwait
or
rolb
jno
in
cmp
jmp
les
movsb
adc
jb
jo
aad
mov
iret
sub
int3
xor
movsl
mov
jnp
nop
add
test
and
or
stc
arpl
icebp
fsubr
bound
cmp
push
fdivl
pop
sub
xchg
mov
ret
mov
test
shl
dec
movsl
add
mov
push
fldenv
sahf
jmp
add
mov
pusha
jmp
push
lret
loop
push
shrl
inc
icebp
test
mov
mov
sarl
push
mov
cwtl
sbb
fwait
sub
sbb
test
add
addb
xchg
mov
clc
mov
sbbb
push
inc
cli
jbe
fcmovu
mov
and
jg
lock
cmc
jg
data16
arpl
lcall
bnd
into
aad
shrl
pop
mov
mov
pusha
pop
mov
push
push
or
and
loop
cmpsb
outsb
subw
je
out
cli
lret
pop
jle
cld
jecxz
js
gs
pop
dec
xlat
cmp
divl
gs
pusha
movsb
inc
xor
enter
icebp
ds
xor
xchg
hlt
fidivl
pop
fwait
movsl
bound
cmp
jo
sub
jp
sub
sarb
add
jmp
mov
adc
jg
aaa
lahf
mov
cmp
inc
ja
jl
pop
jo
push
push
inc
or
and
jle
fs
cmp
lods
mov
pushf
test
aaa
jl
mov
notl
mov
cli
mov
fisttpl
bound
xor
push
xchg
sub
mov
data16
enter
or
orl
loop
or
xchg
loop
mov
pop
es
adc
cld
jns
out
shll
testl
push
mov
dec
push
add
outsb
or
in
sbb
sbb
sub
popa
dec
sub
mov
push
mov
in
cli
sbb
inc
cld
stc
jns
sub
ffree
mov
adc
xor
pop
clc
or
cmc
adc
jl
int3
mov
mov
lods
movsl
inc
mov
ja
xchg
mov
and
jne
xor
pusha
xchg
mov
sarl
push
aaa
mov
in
out
add
std
push
push
cmp
inc
rclb
or
pop
pop
subl
push
cmovle
test
push
divb
cmpsb
pop
scas
pop
cs
decb
mov
fisttps
fildll
dec
ret
add
mov
lret
movsl
jae
and
insl
je
pop
mov
mov
iret
ficomps
inc
rcl
push
jecxz
outsb
sub
jle
fisubrs
mov
shlb
pop
cltd
rcrb
sbb
pop
pop
ljmp
and
mov
or
jl
or
sub
adc
aad
cmpsl
and
aas
test
and
adc
fwait
xchg
mov
ljmp
negb
test
xor
inc
mov
mov
fcmovne
stc
jns
test
adc
mov
mov
in
mov
inc
sub
bound
push
nop
test
xchg
pop
aas
icebp
add
std
jmp
stos
out
jns
mov
sbb
insb
adc
pop
mov
ja
push
mov
faddl
pop
mov
movsl
mov
pusha
cli
fnstcw
outsb
gs
and
pusha
loopne
jmp
and
stos
insb
push
fimuls
dec
xlat
and
add
cmp
fwait
rcrl
inc
aaa
clc
add
dec
aam
cmp
aas
gs
mov
pop
jp
pushf
sbbl
hlt
add
sbb
pop
cmpsb
and
enter
cmp
or
les
push
sbb
in
clc
push
movsb
jo
jns
jne
add
xor
cmpsl
mov
ret
mov
out
loopne
shrb
xchg
pcmpgtw
fists
adc
inc
aad
lret
jne
outsl
and
mov
sub
or
jg
push
fwait
push
sub
xor
inc
xchg
cmp
adc
clc
or
inc
pop
lods
or
or
ljmp
cmpsl
jns
stos
fwait
sub
js
or
sub
mov
mov
insl
dec
ljmp
jae
and
or
mov
jg
ja
jge
fildl
mov
jp
xchg
pop
das
cmpsl
jp
movsb
push
out
outsl
adc
inc
pop
stos
leave
or
std
mov
inc
ss
jg
bound
mov
adc
mov
jb
lcall
cmp
push
sbb
push
pushf
push
sub
into
fsubrl
cmpsb
inc
and
sub
rorl
cltd
adc
loopne
imul
int3
bound
and
mov
fcmovbe
hlt
xor
mov
mov
cmpsb
adc
cmc
scas
mov
cmp
mov
and
arpl
sub
xor
adc
filds
imulb
mov
pop
push
and
std
jns
xchg
xor
les
jb
les
ficomps
xchg
xchg
adcl
pop
pop
sbb
adc
inc
inc
xor
rorl
into
sbb
in
repnz
cmc
mov
dec
push
pop
in
inc
popa
push
hlt
mov
pop
mov
mov
iret
lahf
mov
call
and
mov
inc
fmull
jge
jae
mov
add
call
divb
mov
xchg
mov
test
jg
ret
push
pop
scas
andl
mov
shlb
inc
je
cld
pop
pop
jge
xchg
ret
push
ja
xchg
inc
pop
imulb
mov
mov
in
inc
jmp
or
test
or
arpl
and
jno
push
jae
cmpsl
fistpll
vmovhps
cld
scas
loope
push
inc
dec
ret
shrb
sarb
pushf
jns
and
popf
int
stos
push
adc
je
push
decl
cld
mov
cwtl
sub
ljmp
int
fadd
inc
pop
pop
or
das
fdivl
sub
mov
xchg
cmp
out
imul
pop
int
sbb
test
inc
pop
pusha
enter
cmp
jg
mov
js
and
dec
adc
pop
lahf
push
and
stos
mov
inc
adc
adc
jb
cmp
out
les
push
xor
mov
cmp
jg
scas
insl
in
inc
mov
lcall
scas
daa
xor
iret
lds
ret
lret
cmp
mov
outsb
pop
add
cmc
loop
jecxz
push
dec
ja
test
xor
nop
sub
popf
movsl
loop
mov
data16
and
daa
stc
lcall
pop
out
ret
mov
shlb
xor
push
add
mov
inc
repz
jg
imul
xchg
test
or
clc
adc
icebp
lock
out
in
adc
xchg
cmpsb
push
and
xchg
nop
cmp
fcmovnb
stc
lcall
push
and
adc
adc
cld
dec
adc
xchg
mov
mov
adc
jo
pop
les
repz
movsl
dec
and
cmc
jae,pn
imul
and
dec
jb
or
add
addr16
and
dec
xor
jno
mov
mull
outsb
ljmp
add
test
repz
cmp
adc
pop
or
inc
cmp
shll
sub
pop
push
pop
mov
nop
push
xor
pop
xchg
mov
imul
scas
aas
add
add
sbb
jnp
fisttpl
add
and
repnz
and
pushl
daa
pop
cmp
rcll
mov
xchg
jo
cmp
lock
push
pusha
jp
outsb
stos
mov
jbe
mov
mov
push
mov
jl
or
in
mov
or
mov
xchg
and
cmpl
out
or
in
and
and
scas
mov
jmp
mov
shll
fadds
add
xlat
or
and
stos
test
outsl
inc
mov
ljmp
cmp
jns
push
mov
xchg
xchg
and
mov
mov
mov
sub
rcl
dec
pusha
outsl
inc
mov
lcall
pop
jmp
repnz
push
push
xor
ret
cli
cli
xchg
fwait
imul
int3
and
pop
dec
ficoms
jmp
cli
add
inc
out
or
push
xchg
data16
jp
xor
testl
mov
ds
test
dec
lahf
mov
mov
cld
das
cmovs
push
mov
mov
adc
cli
jecxz
cld
mov
mov
scas
cli
or
subb
sub
inc
in
lea
jmp
fstps
cmpsb
nop
push
sbb
insl
out
dec
je
les
sbb
outsl
sbb
sbb
xchg
mov
dec
add
or
pop
and
mov
lret
xor
int3
in
xlat
bsr
scas
adc
xor
dec
nop
lcall
insb
fucomi
add
je
xchg
mov
cltd
fwait
sub
cmpsb
outsl
sub
insb
mov
or
outsl
xchg
arpl
in
xchg
push
and
scas
imul
push
inc
mov
lock
xor
jo
cmp
sti
xchg
push
cwtl
sub
jp
mov
rolb
mov
jl
push
gs
sti
mov
stos
pop
dec
pop
adc
ljmp
pop
repnz
sbb
into
out
cmp
or
mov
test
clc
mov
mov
outsl
cmp
shl
ds
aam
addl
inc
loopne
cld
cmpb
rclb
and
lret
mov
and
cmp
loopne
negb
push
fwait
shr
sbb
jns
or
mov
push
fidivl
push
dec
hlt
push
cmpsb
or
pop
int3
pop
mov
ss
sti
mov
xchg
push
xchg
std
adcl
and
push
add
lods
stos
shlb
les
xchg
jbe
inc
and
nop
xchg
push
adc
mov
pop
rol
enter
scas
jbe
jge
and
movsb
cmp
cli
push
das
pop
pop
out
and
push
or
insl
mov
popa
insl
push
cld
pop
cmp
mov
decl
mov
repnz
ret
xchg
sbb
adc
lea
movsb
push
ret
sub
sbb
push
jbe
addb
xchg
ss
and
je
push
push
mov
iret
in
sub
dec
add
loop
push
scas
int
fcoml
adc
ja
mov
inc
mov
cwtl
lods
xchg
lock
push
xor
ror
xchg
xchg
imul
jge
hlt
cmpsb
dec
in
dec
lds
pop
mov
sahf
push
test
stos
jl
add
mov
mov
lret
mov
xchg
insb
mov
add
aad
push
inc
mov
adc
imul
outsb
call
or
ret
dec
sbb
pslld
and
int3
mov
std
mov
pop
mov
adc
shrb
ds
in
pop
imul
inc
pusha
movsb
movsl
dec
or
lret
aas
into
rolb
add
stos
push
out
cmp
mov
pop
cmp
test
inc
into
mov
dec
pop
and
mov
and
hlt
jb
test
loope
mov
imul
imul
inc
xchg
iret
shlb
sti
mov
add
pop
dec
jecxz
out
hlt
sub
inc
cmp
adc
mov
rclb
xchg
ljmp
sub
jb
cmp
lcall
repz
fistl
mov
jg
out
std
and
je
push
mov
lods
jo
sbb
stos
dec
and
jnp
in
movsl
push
and
fldl
dec
pusha
call
ficomps
int
mov
lcall
jne
xchg
out
arpl
lret
xor
mov
insl
cmpsl
hlt
cmpsb
pop
mov
and
cmp
sbb
inc
mov
lods
scas
roll
push
mov
js
or
push
sub
xchg
out
cmpsl
in
orl
jmp
and
xor
fildl
add
roll
insl
mov
leave
or
pop
mov
sub
mov
ret
mov
inc
int
ss
daa
out
leave
add
add
hlt
fisttpll
test
rcll
shlb
flds
lods
lods
fs
push
clc
ret
rorb
int3
cmp
nop
in
and
and
xlat
push
xchg
inc
mov
daa
sbb
mov
mov
cmp
out
push
xchg
out
rcr
orb
loop
cmp
nop
mov
mov
or
ds
movsl
dec
testl
fcmovnb
imul
push
cmp
and
popf
dec
lods
sub
fwait
adc
jg
sub
inc
adc
jmp
xor
leave
test
ljmp
dec
cltd
push
mov
notb
mov
dec
movsb
dec
stos
fadds
push
jle
cmpsb
movsb
je
mov
pushf
out
mov
stos
jae
ror
jo
mov
or
test
mov
fcompl
call
xchg
mov
je
push
jmp
xrelease
xchg
sub
popa
out
sbb
xchg
sti
addr16
mov
stos
add
push
cwtl
sub
mov
pushl
in
out
add
cltd
inc
push
aas
fiadds
jo
jbe
xor
shlb
xchg
jmp
hlt
dec
insl
xchg
add
lea
jg
scas
push
aad
jle
jmp
test
dec
pop
in
push
jg
push
in
test
addr16
push
push
add
cltd
mov
xor
inc
cltd
fcomps
add
scas
adc
sbb
ret
xchg
in
mov
les
or
mov
pop
lretw
cld
push
sbb
pop
pop
and
mov
jmp
pop
push
ret
mov
scas
dec
lret
and
lret
sbb
clc
lcall
xor
jmp
add
shrl
fs
jp
sbb
std
bnd
push
movsb
loopne
push
hlt
or
rcrl
push
inc
inc
inc
mov
push
and
inc
or
dec
adc
adc
les
and
ja
and
inc
dec
adc
mov
test
sbb
insb
push
fwait
sarl
pop
push
push
jg
jno
pop
pop
frstor
bound
cs
ror
push
dec
xor
adc
mov
inc
mov
sub
enter
mov
inc
mov
lock
sbb
test
inc
inc
movb
movsb
push
test
idivb
adc
jle
out
clc
test
out
add
imul
adc
in
mov
sub
inc
icebp
mov
ljmp
mov
push
mov
imul
sbb
ljmp
lods
mov
push
jl
pushf
cmc
into
out
xchg
loopne
insl
leave
sti
mov
jg
js
mov
jle
aaa
in
pusha
xor
push
dec
xor
inc
fdivrl
pop
xchg
pop
fistl
arpl
pop
fistl
loop
pusha
push
inc
and
mov
and
movaps
mov
int
lock
and
outsl
ljmp
jmp
lahf
dec
data16
cmp
movsl
add
pushf
mov
ret
and
xor
enter
xor
imul
add
dec
fdivl
out
clc
mov
jmp
rcl
push
sbb
lock
add
sub
pop
out
inc
xchg
pop
mov
cmpsl
and
mov
sub
rcrb
inc
ljmp
mov
jp
lock
dec
repnz
adc
fstpt
add
int
cs
pop
cld
out
sbb
lcall
inc
mov
xor
outsb
mov
push
in
pop
stos
jb
pop
jae
jbe
push
mov
outsb
pop
outsb
xchg
idivl
or
dec
sbb
add
mov
add
add
adcb
test
xchg
add
mov
ljmp
sub
inc
aaa
lds
mov
outsl
mov
aam
cmp
dec
adc
popf
jbe
pop
sub
xchg
addb
ret
jmp
add
add
mov
test
inc
insb
jb
sbb
scas
shlb
mov
adc
pop
xchg
popf
push
out
adc
push
out
xlat
fcmovnbe
nop
xchg
sbb
cmp
pop
lods
inc
in
and
mov
push
mov
inc
jae
fwait
mov
xor
in
add
mov
ljmp
push
mov
mov
jl
das
mov
sbb
test
add
out
jle
mov
push
iret
sub
clc
mov
cmp
mov
test
cmc
cli
pusha
cmc
sbb
mov
mov
jecxz
cwtl
fdivrs
les
gs
aam
addr16
leave
adc
mov
shll
mov
jns
fwait
arpl
jo
je
addr16
lds
pop
pop
add
mov
cmp
sbb
adc
notl
aam
pop
cli
aas
jne
jb
pushf
dec
hlt
jnp
push
or
mov
dec
ljmp
popa
popa
jae
ds
hlt
popa
lods
xchg
in
cmpsl
cmp
sub
xchg
vpmulhw
and
cltd
scas
je
jo
fimull
push
divps
mov
fiadds
movsb
aas
dec
outsl
jl
mov
lds
sub
adc
movsl
or
int3
mov
adc
in
ja
add
inc
lret
cmc
andl
adcl
outsb
lea
ds
lock
cs
jbe
mov
adc
out
pop
fidivs
into
jno
in
loope
pop
out
in
inc
cmp
sbbb
or
inc
int3
lret
mov
push
lea
imul
stos
pop
mov
lret
mulb
sbb
jmp
mov
fldl
adc
sbb
xchg
repz
and
hlt
insb
leave
loope
dec
hlt
adc
out
cmpsl
leave
sbb
push
xchg
lods
adc
dec
mov
inc
pop
inc
pop
aaa
aas
add
cmp
test
dec
hlt
xchg
mov
xor
fisubl
xchg
icebp
push
cltd
cli
add
cwtl
dec
dec
mulb
orl
fwait
out
xchg
aad
rcl
or
xchg
aas
pop
xchg
rclb
ret
pop
push
leave
hlt
push
fistl
shlb
pop
pop
mov
dec
std
xchg
jns
test
mov
sub
popa
call
xchg
outsl
sbb
out
xchg
mov
adc
lcall
inc
mov
mov
mov
popf
shrb
pop
sbb
sub
std
xor
leave
call
mulb
and
or
sbb
mov
mov
rcr
cmp
loopne
pushf
negl
mov
pop
out
mov
jp
imul
cs
imul
pop
je
xchg
jge
mov
les
cmp
sti
popf
inc
repnz
in
add
test
leave
jmp
cli
inc
xchg
jle
addb
sar
movsl
cmc
add
bound
push
frstor
into
fisubl
push
je
out
out
xchg
cmp
jno
add
or
push
mov
push
aad
shl
mov
rclb
cmp
pop
sub
mov
push
insl
dec
int3
in
pop
nop
add
sbb
add
cmpsb
xchg
mov
pop
xor
mov
lds
jns
push
xor
inc
ss
push
pusha
push
jo
xor
mov
mov
xchg
xchg
lock
inc
and
es
ss
push
pusha
push
jo
xor
mov
mov
xchg
xchg
lock
inc
pop
push
xor
inc
aaa
clc
push
pusha
push
jo
pop
notb
cmpsb
shlb
data16
inc
and
es
ss
xchg
xchg
jo
jg
cmp
rorl
das
jle
outsb
pmulhw
add
mov
cwtl
lock
xchg
repz
push
cmp
pusha
sbb
add
dec
and
mov
loopne
lock
mov
cmp
pusha
sbb
insb
sbb
dec
and
jb
cmp
push
loopne
lock
xorb
sub
jae
adc
dec
push
and
aas
dec
sub
mov
cltd
int3
mov
lock
fstpt
sbb
xchg
or
stos
imul
mov
pop
adc
lods
xor
scas
divl
adc
add
fxch
and
popa
clc
shrb
pusha
mov
in
push
cmp
and
movsl
pop
mov
test
hlt
cmc
enter
and
xchg
leave
lret
cmp
in
nop
in
jp
pop
sub
xorb
jge
or
mov
nop
nop
call
lahf
sbb
js
sbb
sub
pop
ja
cmp
pop
dec
test
cmc
rclb
add
cwtl
sbb
add
or
sarb
call
mov
stos
push
shlb
jo
add
dec
and
fcmovb
into
xchg
int3
loopne
lock
stc
mov
push
pop
add
push
jne
pop
pop
jle
movsl
xor
sub
stos
aam
or
insl
xor
outsb
sbb
pop
fiaddl
xchg
lods
scas
clc
nop
enter
sub
push
or
jo
add
dec
and
test
mov
lock
mov
cmp
pusha
sbb
add
dec
and
test
jl
and
xchg
jg
das
mov
lret
das
and
adc
daa
lcall
sti
scas
stos
cmp
xor
repz
insl
stc
sbb
aas
or
test
jg
popa
inc
cmp
xchg
mov
sti
sti
sbb
mov
push
sti
and
and
cmpsl
stos
mov
xor
int
rcrb
xchg
jno
pop
or
test
cmpsb
mov
fbld
mov
xor
in
test
std
out
mov
mov
mov
into
push
test
enter
mov
out
xchg
lret
mov
mov
push
cltd
add
xchg
dec
adc
adc
mov
mov
jmp
les
es
sub
ds
and
pop
lods
jmp
outsb
xorl
adc
push
jmp
or
fldt
mov
scas
ljmp
push
xor
ds
inc
sti
mov
mov
in
cs
jns
notb
lcall
test
lock
test
mov
sbb
in
push
imul
jo
or
jecxz
cmpsb
add
pop
add
ret
cmp
cmp
inc
pop
outsb
xchg
xchg
adc
adc
pop
stos
cmp
jns
fcmovb
imul
mov
lock
insl
nop
sbbb
cltd
xchg
and
sbb
cmp
lea
divl
pop
xchg
push
out
dec
repz
iret
cmp
jle
or
mov
mov
push
sbb
iret
int3
sub
mov
inc
insl
pop
mov
or
mov
mov
push
sub
inc
pop
gs
and
sbb
outsl
test
and
in
sub
xlat
out
sbb
jle
sub
jge
aam
push
mov
xchg
and
adc
lret
pop
cmp
ficompl
cs
sbb
pop
jns
and
idivl
je
xchg
xor
pop
mov
jmp
mov
sub
pop
iret
idivb
fisubrl
cs
push
rcrl
mov
das
jle
mov
movsl
lds
mov
out
shlb
lret
jl
lods
ja
xchg
ljmp
insl
xlat
xchg
mov
push
jae
popa
push
inc
mov
and
test
sub
nop
cmc
or
jecxz
inc
dec
mov
push
fwait
sarl
shl
call
xor
faddl
or
mov
sub
scas
mov
sub
cmp
pop
test
or
jecxz
aad
push
dec
cmpsb
pop
sbb
out
fsts
sbb
mov
adc
fdivrl
add
xor
sub
add
scas
loope
mov
sbb
cmp
xchg
cld
push
daa
dec
inc
dec
mov
loope
mov
push
xchg
inc
pop
gs
push
jle
fs
pop
clc
xor
or
cmp
fisubl
repnz
xchg
mov
cmp
xor
je
cltd
jg
and
das
push
jge
mov
fisubs
inc
push
or
mov
fwait
idiv
shr
or
push
add
pop
aas
xor
lods
sub
adc
sti
lret
stos
hlt
xchg
pop
movsl
mov
xchg
out
xchg
xor
fiaddl
adc
or
dec
js
mov
pushf
push
mov
jmp
sbb
fs
outsl
inc
cli
fstl
stc
ljmp
das
adc
push
add
cmp
mov
or
je
mov
mov
mov
rolb
lods
pop
xchg
adc
cld
push
mov
and
adc
int
sub
cli
pop
pushf
xor
ret
nop
loope
arpl
jmp
and
inc
jno
push
xchg
inc
add
jle
adc
pop
movsb
pusha
sbb
or
and
sub
or
push
js
rorb
or
add
lock
fst
pop
js
xchg
push
or
scas
cmc
rcrl
popa
cmp
sbb
mov
dec
push
push
test
jae
mov
adc
adc
push
mov
sahf
cmp
sbb
and
cmpsl
mov
mov
inc
sbb
idivb
push
adc
imul
or
sahf
mov
xchg
mov
sbb
popa
cmp
test
push
inc
mov
shll
xor
out
mov
lds
hlt
jg,pt
rcrl
mov
and
pushf
jg
mov
pop
pushf
ret
push
test
icebp
nop
sub
scas
shlb
fldl
lea
je
in
jbe
add
jge
clc
aaa
test
enter
sub
ret
add
cmpsb
incl
xor
sahf
dec
bound
jp
adc
roll
xchg
into
out
cmp
int3
fldenv
in
enter
xor
rcll
in
fisubs
jbe
xchg
mov
push
shll
lahf
outsl
adc
icebp
dec
popa
lahf
sbb
cmc
test
mov
cmp
xchg
mov
out
dec
imul
rcrl
pop
outsb
fld
jne
mov
hlt
or
jecxz
in
jl
jae
dec
mov
dec
test
leave
pop
xchg
xchg
scas
pusha
cmp
sarb
cmp
mov
jo
loope
nop
cmp
sbb
xorl
sti
iret
pop
add
cmp
testb
jne
pop
mov
popa
ret
xlat
push
cmp
mov
cmpl
add
data16
xchg
inc
jge
or
cltd
cmpsb
lods
xchg
loope
mov
push
lods
in
pop
and
les
cs
pusha
pop
lahf
inc
pop
add
cmp
mov
sub
sbb
jmp
or
test
inc
xchg
sti
jno
sbb
pop
in
sbb
push
ret
das
ret
jo
or
movsl
jge
cltd
cmp
xor
lret
aas
iret
sti
lret
cmpsl
ds
insb
jne
push
xchg
int3
mov
add
xor
out
adc
xchg
lods
xor
push
mov
sub
push
cmc
cmp
in
loop
dec
scas
sar
jbe
mov
js
or
movsl
push
iret
in
xchg
pop
push
clc
jecxz
outsl
add
cmpsl
ss
addr16
lret
loopne
push
out
lahf
jns
cs
call
inc
icebp
xchg
adc
arpl
out
xchg
sti
fcompl
sbb
push
movsb
xchg
or
test
cmpsb
mov
imul
mov
or
bswap
jns
repnz
lea
and
and
sbb
or
sbb
fbstp
and
sarl
pop
mov
lcall
ret
jae
clc
dec
out
ret
and
add
mov
xchg
xor
jmp
or
dec
add
push
pop
mov
ja
cltd
cmp
sar
iret
sub
in
mov
ret
cltd
out
mov
rclb
or
subb
nop
xorb
fs
xchg
or
fwait
divb
mov
arpl
in
icebp
and
les
sbbb
push
or
imul
cmp
or
mov
cli
and
lahf
nop
fwait
dec
negl
xor
cmp
cltd
cltd
dec
shll
mov
jbe
add
popf
push
inc
mov
cmp
push
or
clc
fisubrl
and
popf
adc
sub
and
or
test
sub
mov
xor
mov
mulb
dec
add
push
shrb
mov
mov
push
jecxz
ret
xor
dec
sbb
adc
inc
cld
mov
out
pop
fs
pusha
test
cmp
andl
sbbb
aaa
test
sub
std
xchg
push
or
sbb
inc
aaa
popa
push
aad
xchg
fsubl
xor
dec
out
dec
lock
dec
sbb
jbe
inc
add
jp
ja
mov
test
mov
xchg
dec
or
dec
jb
mov
cmp
mov
in
sahf
inc
pushf
jle
movsl
fildll
xchg
dec
in
sbb
pop
mov
add
mov
pop
push
push
insb
imul
dec
mov
sbb
ss
push
hlt
outsb
jp
xchg
xchg
sbb
xor
xchg
and
inc
adc
lock
ret
cmpsl
into
add
pushf
mov
xchg
test
mov
push
loope
stc
cmp
xor
es
out
mov
pcmpgtd
push
xorl
xchg
push
xlat
shrb
xchg
sub
dec
pop
scas
ja
lahf
insl
xchg
cmp
jle
fcomip
add
push
aam
xor
jl
or
faddl
adc
js
mov
inc
das
mov
adc
add
jbe
mov
xchg
xlat
lds
mov
enter
mov
sbb
xchg
enter
xorb
push
jg
adc
mov
div
push
or
sub
ror
push
jne
sbb
out
pusha
fsts
dec
mov
test
ljmp
lock
mov
testb
push
jae
and
cli
dec
xchg
jge
xchg
cmpsl
xchg
aaa
mov
xor
push
pop
shll
aam
add
lock
mov
and
push
aaa
daa
adc
subl
stos
addl
adc
fidivs
fcompl
fs
and
hlt
mov
jmp
xchg
jp
jo
sub
mov
out
push
jp
pop
jg
fldt
inc
leave
push
jle
mov
out
sbb
pushf
int3
aas
lret
shll
std
jmp
xchg
push
addr16
std
lods
movsl
or
addr16
push
loop,pn
cmp
add
jns
mov
lcall
and
cmpl
das
loop
insl
jno
sub
movsl
dec
inc
push
ljmp
and
add
cld
dec
repz
or
out
inc
or
ds
jbe
outsb
jae
jne
cmpsb
xchg
pop
andb
inc
and
pop
jne
push
repnz
mov
scas
cli
mov
pop
outsl
or
inc
and
xchg
das
addr16
xor
xorl
mov
inc
mov
pusha
dec
cmp
sub
cli
mov
dec
push
arpl
in
outsl
mov
ret
mov
sub
fildll
bound
or
int3
cmpsl
pushf
je
fcmovnbe
popf
cmp
jo
das
outsl
lods
sub
lock
dec
fidivrs
cmp
and
cli
cmpsl
lret
and
shr
cmpsl
test
in
xchg
mov
inc
lods
je
aad
lods
les
stos
sbb
andl
test
xor
test
cmpsl
mov
pop
mov
sbb
jle
push
enter
sarl
and
movsl
stos
cmp
or
xor
imul
popf
aas
lods
inc
sub
adcb
cmp
add
jbe
and
dec
push
xor
jbe
je
faddl
xchg
pushf
cmp
inc
imul
test
add
xor
pop
jb
sbb
mov
pushf
in
mov
daa
shlw
pop
xchg
cli
aad
xchg
repz
ja
sbb
cmp
xor
dec
adc
imul
addr16
insb
jnp
call
mov
or
and
hlt
mov
rorl
js
fildll
pop
pop
les
push
xor
cmpsl
inc
push
pop
mov
and
dec
pop
jmp
aaa
js
lret
dec
sti
xchg
subb
mov
mov
cli
mov
push
jne
or
xor
inc
xor
and
pop
cmpsl
cmpl
pushf
inc
testb
scas
pop
xchg
mov
stc
out
out
inc
dec
mov
fcoms
setae
aad
inc
mov
jno
call
imul
ss
xor
or
aam
fisubrs
add
cwtl
stos
and
mov
or
cld
inc
lods
push
daa
jmp
xchg
popa
dec
in
test
add
repnz
push
mov
xor
iret
popl
mov
pop
test
pop
cmp
addb
loop
lock
fdivl
scas
xchg
inc
mov
pop
gs
pusha
lcall
mull
idivl
and
gs
mov
rcll
lret
jnp
movsl
popf
out
into
jp
aaa
out
push
cld
mov
lds
imul
xchg
cmovg
mov
xchg
xchg
nop
aam
mov
in
shrl
fisttpll
lods
cmpsb
aaa
fcmovnu
xchg
out
pushf
or
cmp
jb
lret
ss
insb
inc
push
mov
xchg
mov
sbbl
mov
mov
xor
xchg
cmpsl
loop
xchg
fsts
xor
lcall
je
iret
cmpsl
lock
ficompl
jne
popf
fnstsw
push
sbb
loopne
mov
dec
push
sub
sti
cmp
inc
add
hlt
xor
mov
sub
jb
sbb
cmp
cmpsb
data16
cmp
imul
repnz
std
jae
jp
icebp
lods
ficoms
mov
push
dec
cmp
xchg
mov
dec
arpl
scas
enter
sbb
enter
insl
cmp
loop
inc
mov
cmpsb
enter
and
stos
stc
jbe
sub
xchg
in
push
scas
arpl
pop
xor
pop
cmp
shrl
push
popa
dec
dec
sub
mov
arpl
inc
jns
out
sahf
xor
mov
and
insl
das
adc
adc
jnp
jl
and
push
sbb
jle
fwait
test
shrb
mov
cmpsl
mov
adc
push
aas
stos
xchg
adc
mov
fldcw
jne
xor
dec
adc
inc
inc
jae
pop
call
ror
sbb
jecxz
sub
pop
aas
xchg
sub
cmp
mov
jge
mov
cltd
addr16
sbb
pop
add
mov
jp
cmpsb
sub
sub
mov
jl
cmp
pop
add
dec
add
mov
outsb
cmp
mov
std
aas
test
and
shrl
je
push
mov
icebp
inc
mov
js
ja
adc
jne
lahf
ljmp
push
cmpxchg
adc
outsb
push
mov
sti
mov
insl
jne
out
mov
mov
in
sub
sbb
cwtl
and
cmpsl
outsb
fs
mov
roll
jno
loop
push
cmp
xchg
xor
pop
daa
push
and
push
lods
mov
pop
dec
mov
ljmp
mov
fsubl
dec
addb
inc
dec
mov
test
or
test
mov
push
jb
repnz
scas
cmc
std
xchg
test
sub
mov
mov
jns
psubusb
mov
mov
xchg
pop
fs
pop
lret
call
test
cltd
sub
rol
es
mov
ret
jge
lcall
sar
cmp
sbb
push
pop
mov
add
jb
test
ret
sbb
cmp
cmpsl
cmp
nop
adc
fs
inc
dec
shlb
aas
mov
or
shlb
mov
movb
aaa
popf
inc
add
dec
jo
mov
jle
pop
movsl
inc
aam
stc
mov
sbb
lret
outsb
fmul
push
or
mov
mov
and
test
jp
out
aam
sbb
je
fnsave
add
loope
fcmovnbe
rcrb
xchg
inc
movsb
dec
or
jae
mov
mov
mov
sbb
aaa
add
and
or
pop
xor
inc
inc
adc
popa
xchg
loope
testl
sbb
push
lock
inc
mov
sbb
out
mov
leave
sub
in
adc
sti
inc
mov
jge
push
out
in
pop
outsl
lods
xorl
fistpll
fnsave
mov
inc
xchg
inc
dec
ja
jo
int
shlb
in
dec
scas
pop
mov
push
sbb
jle
insl
fdiv
je
fstps
jne
mov
mov
sub
les
xor
and
lahf
insb
mov
jne
adc
test
sarl
data16
aad
mov
lea
jae
out
pop
fwait
lea
fnstsw
xchg
in
subl
dec
push
test
jg
jne
aad
je
rolb
pop
sti
xor
insb
pushl
pop
cmpsb
mov
in
add
inc
sbb
lods
sahf
negl
std
and
rorl
aad
cwtl
mov
sub
adcl
faddl
mov
orl
leave
es
sbbb
ss
sub
sbb
and
lods
out
gs
adc
cwtl
mov
xor
push
icebp
nop
addr16
mov
add
jnp
ss
sub
dec
adc
sub
bound
inc
mov
aad
push
adc
mov
mov
daa
add
in
loop
push
sbb
inc
cld
sbbl
insl
xor
cld
stos
cmp
push
int3
test
and
cmpsl
push
scas
push
js
adc
mov
hlt
shr
scas
shrb
push
ret
fs
in
ficoml
inc
mov
inc
push
data16
mov
adc
sbbl
testl
push
and
filds
and
shll
push
fsubl
jbe
ja
scas
ret
dec
sub
in
mov
xor
daa
out
adc
dec
jns
inc
lods
sbbl
cmpl
and
xchg
pop
bnd
test
iret
mov
lcall
frstor
xchg
pop
mov
ret
arpl
jecxz
std
and
pop
movsl
lret
rcrl
dec
stos
out
insb
jo
into
mov
je
inc
sahf
inc
aas
or
int3
push
loope
js
and
xor
nop
xchg
lret
pop
es
mov
movsl
push
and
xor
inc
xchg
and
movsb
sarb
mov
icebp
xchg
movsl
mov
pop
add
jb
dec
mov
out
cmc
fdivr
idivb
iret
add
fildll
jb
dec
sbb
insl
shl
std
sahf
lret
loop
lret
and
push
enter
jno
push
push
lock
out
js
fwait
mov
jno
and
xor
inc
or
cmp
stos
pop
hlt
cmc
movsl
mov
movsb
adc
push
and
movsl
adc
jmp
movsl
jne
or
divb
subl
push
mov
lock
sahf
shlb
and
xchg
xor
inc
add
icebp
push
clc
xor
shl
push
pop
jp
inc
cltd
sbb
add
add
cmp
fldenv
push
jg
lret
jecxz
push
hlt
xchg
push
icebp
and
fprem1
xor
and
stos
outsb
fwait
test
xor
mov
int
xchg
sbb
pop
push
in
leave
cmp
cwtl
fs
cmp
rorb
add
cmp
cmc
add
sub
mov
jno
or
pop
push
mov
pop
mov
mov
add
test
not
mov
dec
dec
shrb
add
out
push
test
pop
push
inc
stos
je
mov
clc
xor
mov
mov
pop
scas
pop
daa
and
push
inc
mov
lahf
movsb
leave
int
mov
pop
dec
jo
and
stc
iret
lods
mov
outsl
xor
jno
jb
jmp
jmp
ljmp
pushl
std
xor
push
push
adc
or
pop
mov
xchg
lds
adc
ret
inc
jp
stc
push
xorl
ror
pop
test
mov
xor
loopne
test
or
ds
jnp
ds
cs
aad
mov
cltd
test
cwtl
pusha
xchg
jnp
sub
pop
lods
push
push
inc
nop
cltd
and
fdivs
xchg
cmp
clc
add
dec
inc
mov
jg
cmp
xchg
pusha
jns
push
pop
jp
jg
mov
mov
push
mov
pushf
inc
sbb
cs
push
je
sar
pop
cmpsl
clc
bound
xchg
not
movsb
out
pop
cmp
ffreep
dec
lret
xor
arpl
mov
icebp
mov
out
push
and
loope
add
push
push
pop
aaa
or
das
jle
inc
jg
out
xchg
jle
shrl
lock
push
movsl
imul
jo
aam
fsts
les
cmp
repz
nop
adc
frndint
fstl
add
lods
fcmovnu
add
adcl
sub
sub
jnp
iret
shrb
cmpsl
sbb
loope
faddl
xchg
cmp
cmp
jl
sub
popf
leave
int3
imul
sarl
or
inc
lret
add
cli
pop
inc
data16
add
ret
outsb
cmpsl
xchg
daa
cmpsl
jmp
jns
or
add
lret
adc
stos
fdivrs
fistpll
add
out
loopne
lock
mov
cmp
pusha
sbb
add
dec
and
test
mov
lock
mov
cmp
pusha
sbb
add
dec
and
test
mov
lock
mov
cmp
pusha
sbb
push
and
mov
xchg
rolb
loopne
lock
mov
cli
mov
mov
out
mov
cmpsl
iret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
test
lods
xchg
std
jp
lods
movsl
aam
lret
or
dec
ret
or
add
add
add
pop
add
add
or
or
or
xor
test
xor
add
stos
add
add
add
jbe
sub
stos
add
sbb
daa
add
add
add
jne
daa
add
add
pop
add
sbb
aas
add
js
incl
daa
add
add
add
add
sbb
and
dec
add
js
hlt
add
add
add
add
add
add
add
aam
pushf
add
add
nop
add
add
add
add
cmp
pushf
add
add
scas
add
sbb
sbb
jne
mov
add
add
add
cmp
and
xchg
add
add
add
add
xor
or
add
add
add
add
inc
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
jb
hlt
add
add
add
add
add
sbb
or
inc
add
lock
and
cmp
jb
mov
faddl
adc
adc
adc
add
or
inc
add
or
add
add
add
inc
add
add
add
add
add
sbb
sub
mov
lods
add
add
mov
jle
pop
add
and
inc
add
bound
push
add
add
testl
addl
pushf
add
inc
add
test
sbb
sbb
jle
pop
add
add
add
add
cmp
cmp
xchg
add
add
add
add
add
or
add
leave
push
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
into
add
add
and
jne
push
add
test
cmpsb
add
dec
add
add
test
sbb
adc
jle
test
add
add
add
push
add
add
testl
addb
add
add
add
add
add
add
inc
add
sub
push
sbb
sub
add
add
sbb
add
roll
test
roll
add
add
add
xchg
add
add
and
test
mov
add
add
js
mov
add
daa
add
add
add
add
add
add
add
add
add
dec
add
add
pushf
add
or
xor
jne
dec
add
add
add
add
add
add
add
add
add
xlat
add
add
add
sbb
or
add
add
add
add
add
mov
add
add
xchg
add
add
add
jb
mov
add
add
or
push
add
add
sbb
inc
add
add
add
add
add
add
test
cmpsb
add
add
lea
sbb
sbb
fwait
add
push
add
daa
add
add
add
mov
add
test
add
inc
add
add
add
add
xor
or
sbb
and
add
add
std
arpl
adc
mov
int3
test
add
or
out
rolb
int3
ja
out
lret
pop
push
fldl
xor
idivb
scas
cwtl
enter
mov
fdiv
and
cli
mov
pop
sub
sti
pusha
mov
mov
rolb
fldenv
int
or
sahf
in
pop
in
jmp
mov
mov
lods
jno
orb
lcall
testl
ljmp
xor
sbb
pop
lret
push
imul
in
sbb
scas
loope
rorb
popa
rcr
in
xchg
or
cmp
mov
jecxz
loope
xor
sti
jg
sti
ret
sbb
test
movsl
mov
pop
js
rorb
ljmp
insb
cwtl
cmp
push
mov
jp
lock
and
and
pop
int3
into
out
xor
bound
das
push
push
lret
xor
push
adc
bound
fsubl
sub
and
dec
push
in
les
insb
mov
test
lcall
mov
inc
pop
add
shlb
jbe
cmpsb
sbb
fisubl
cwtl
pop
push
inc
lcall
es
adcb
dec
sub
jae
pop
lret
mov
sub
jne
add
dec
lret
push
pop
jmp
sbb
xchg
mov
das
xchg
cmc
pop
xchg
aad
hlt
pop
mov
sub
aad
popf
dec
inc
jo
andb
jmp
sahf
pop
or
rolb
jb
cmp
or
das
adc
das
adc
pop
lret
mov
mov
hlt
push
cmpsl
pmulhuw
xchg
pop
insl
xchg
mov
ljmp
mov
aas
xor
stc
subl
das
push
push
cltd
test
inc
mov
push
push
ljmp
fstp
xchg
push
mov
pop
std
divps
aaa
lods
in
push
jno
cmp
mov
jae
andl
pop
cltd
pop
push
dec
mov
push
and
adc
and
std
inc
cmp
xchg
mov
dec
shll
xor
fsub
push
mov
inc
test
and
pusha
testb
movsl
fisttpl
jbe
cmp
pop
and
inc
sbb
sub
jno
arpl
loopne
jle
dec
push
sub
rcrl
jge
inc
jno
ljmp
pop
lahf
shrl
insl
insb
dec
adc
dec
sub
adc
lret
sub
pop
xchg
jecxz
dec
test
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
