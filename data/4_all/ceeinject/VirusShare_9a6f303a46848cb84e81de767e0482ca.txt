call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
addl
pop
out
mov
call
sbb
pop
and
push
inc
inc
mov
xchg
xchg
mov
mov
fsts
pop
add
xor
and
xchg
imul
xchg
and
rcl
ret
in
loop
adc
and
inc
and
adc
xor
adc
out
mov
into
rcrb
enter
sbb
jae
int
mov
lahf
pop
pop
and
or
pop
dec
sub
sbb
or
clc
xchg
int
frstor
push
inc
or
out
mov
mov
xlat
inc
pop
sub
lods
adc
push
pop
xor
loop
add
mov
xchg
mov
rcl
out
daa
loop
lahf
addb
lods
push
add
icebp
cwtl
push
or
bound
pop
pop
dec
mov
ret
cmpsl
or
and
inc
mov
pop
movl
xor
cli
outsl
js
push
adc
loop
inc
push
repnz
int
or
das
iret
adc
mov
sbb
mov
mov
xlat
repnz
adc
add
push
jnp
mov
roll
lret
fcmovnbe
bound
mov
inc
addr16
push
add
adc
and
test
into
fcmovnbe
xchg
xchg
ja
push
bound
jne
pop
push
or
push
add
add
hlt
xorb
into
fistpl
out
notl
pop
add
xor
and
push
inc
inc
push
jb
bound
xchg
mov
mov
notl
pop
add
xor
and
push
inc
inc
push
jb
bound
xchg
pop
sub
rcr
dec
adc
insl
xor
xor
mov
jbe
sahf
jae
xchg
inc
jne
dec
rcrl
lods
addb
xchg
or
push
les
out
mov
cltd
rcll
popf
and
cmp
pushf
sbb
cmp
cli
outsb
lock
pop
mov
xor
or
rcll
cmp
repz
lock
xor
xor
repz
repz
push
push
test
sbb
aaa
inc
imulb
cmp
lea
jb
and
les
in
cmp
push
outsb
aaa
sbbl
add
sahf
test
test
push
xor
jns
je
das
shrb
push
and
lds
call
dec
and
push
xchg
in
rcll
ja
stos
data16
sub
adc
orl
fsts
xor
aas
pop
test
cli
stos
pop
xchg
cmp
sub
push
push
or
data16
jmp
cld
push
xlat
jns
mov
adc
cmp
cmp
cmp
popa
push
inc
adc
pop
loope
mov
sub
out
push
mov
movsb
xor
dec
add
xorl
mov
cmp
mov
sub
jecxz
jno
jne
mov
xlat
push
jb
cmp
jb
push
xchg
filds
roll
popa
and
sahf
pushf
dec
iret
mov
mov
mov
loope
out
push
sbb
cmp
nop
popf
xor
xchg
mov
sbb
icebp
aaa
jb
jl
lret
sbb
cmpb
lret
aaa
loop
jmp
or
pop
and
test
lret
mov
mov
and
js
xlat
in
xor
or
rolb
mov
test
gs
jb
adcl
add
and
pop
dec
stc
inc
sbb
out
fnstcw
cltd
cmpsl
add
jl
jl
loop
leave
out
xorb
retw
jmp
push
mov
adc
mov
pop
das
das
out
popf
mov
jae
ds
add
push
jno
in
jp
mov
movsb
adc
mov
sub
jnp
mov
hlt
enter
dec
stos
inc
cbtw
icebp
in
rcrl
ds
xor
jne
out
dec
fcomps
lods
lahf
and
jo
sahf
jle
jae
testb
cld
sub
jmp
cmp
adc
mov
int3
loope
out
jnp
push
mov
loop
sub
arpl
xor
data16
aam
add
mov
lret
add
push
jg
int
jg
out
inc
push
cmp
jmp
xchg
jg
cwtl
ficomps
addr16
adc
outsl
pop
and
cli
adc
leave
cmpsl
sub
xchg
das
xchg
and
movsl
nop
mov
jne
cmp
adc
jo
pop
xor
push
mov
lods
stos
mov
in
mov
dec
xor
dec
add
xchg
jmp
mov
mov
sahf
pushf
sbb
push
ret
lods
rclb
cmp
in
inc
or
out
jecxz
mov
je
ja
repnz
lcall
add
pop
test
aaa
push
mov
xchg
fisubs
movsb
out
dec
sbb
mov
lretw
sbb
nop
push
cmpb
jmp
in
xor
loope
subl
inc
xchg
push
inc
adc
jmp
dec
inc
pop
dec
stos
addr16
gs
adc
testb
pop
sub
pop
push
loope
lcall
mov
mov
gs
outsl
mov
push
rcrl
mov
int
push
ret
and
adc
or
imul
push
scas
mov
add
outsb
je
mov
cwtl
stc
lea
into
popa
mov
outsl
sbb
ret
add
pop
push
jge
add
mov
xchg
push
lock
xchg
cmc
fstpt
sub
test
cld
leavew
aad
sti
mov
mov
jne
shrd
cmp
cli
aaa
dec
ljmp
pop
xor
inc
jl
pop
sarb
subl
mov
jb
pop
mov
jo
pop
or
mov
sub
xchg
test
xchg
dec
sahf
dec
shl
lret
inc
mov
jnp
inc
test
call
sbb
adc
into
xlat
adc
dec
xor
inc
inc
in
fscale
scas
pop
rolb
jmp
mov
or
xor
pop
rorl
es
enter
ror
dec
lods
pop
mov
out
js
int
xchg
das
mov
rcr
testb
push
fcompl
int3
ljmp
mov
push
push
inc
jecxz
adc
cs
aad
test
inc
mov
loop
jp
lret
clc
in
adc
xchg
loope
and
negl
rolb
andb
fisttpll
fiadds
and
roll
call
inc
fisubrs
push
mov
imul
repz
fdivs
insb
mov
ss
out
adc
cli
add
mov
imul
push
daa
popa
lahf
push
out
scas
jae
mov
jle
in
inc
ljmp
push
lds
js
sbb
aaa
jmp
pop
scas
sub
xor
pop
adc
sbb
pop
popa
int
fstpl
mov
mov
xor
add
leave
lahf
cwtl
movsl
mov
push
lcall
loope
pop
pop
xlat
cld
sub
cwtl
dec
push
adc
jno
and
addr16
add
push
inc
loopne
xchg
out
subl
mov
push
mov
cs
subb
scas
scas
lahf
mov
outsl
xlat
cmp
insl
jnp
cltd
sbb
or
loopne
xor
movsl
mov
idivl
fsts
dec
jno
scas
jmp
mov
popa
xlat
push
cmp
lea
jmp
mov
mov
sarb
jle
pop
cmp
lds
mov
loopne
jl
ret
popf
out
sahf
mov
movsl
sub
dec
aaa
xchg
xchg
pop
outsl
or
int
cmp
cmp
popa
stc
inc
push
rcl
mov
movsl
inc
scas
ret
push
mull
add
sbb
roll
pop
jb
xor
jmp
mov
cmp
in
pop
push
repz
adc
cmp
nop
clc
ficompl
mov
jns
adc
inc
pop
cmp
int3
inc
mov
inc
pop
inc
push
dec
sbb
insl
lcall
out
int3
xor
in
jno
inc
sbb
cmp
and
xchg
loop
inc
arpl
lods
leave
cmpb
jno,pn
ret
cltd
mov
lahf
mov
jg
sbb
adc
mov
popf
cli
and
test
test
or
push
adc
adc
cmc
cmpsl
repnz
mov
jg
push
daa
lea
sahf
addr16
mov
inc
sti
add
sub
add
xor
lea
jbe
mov
pushf
mov
mov
mov
mov
sbb
psllw
inc
mov
loopne
fldenv
pop
into
cmp
fisubs
lea
xchg
jno,pn
sub
cld
mull
or
pop
cmpl
cld
jg
mov
pop
inc
mov
imul
enter
loope
sbb
xchg
call
enter
fwait
cs
sbb
push
fwait
pop
push
push
imul
jns
and
sbb
pop
lods
fdivs
pop
cli
lret
cld
inc
leave
xchg
mov
adc
pop
das
sti
mov
std
es
mov
cmp
xchg
jae
jge
fcoms
dec
pop
sub
push
add
push
aas
sub
xchg
enter
call
orl
shlb
mov
std
push
xor
mov
loop
inc
inc
lret
sbb
imul
adc
mov
adc
repz
and
push
sbb
scas
aaa
sbb
insb
aad
mov
mov
sub
inc
cmp
lods
int
xor
pop
dec
jnp,pt
repz
outsl
inc
fcomi
js
cmp
lret
repz
lock
ja
rorl
jb
cmp
dec
leave
mov
cmp
outsl
fistpl
jbe
pop
orl
test
inc
sub
fs
fistpll
mov
clc
fs
fcmove
aaa
mov
iret
stc
jp
mov
in
stos
clc
jecxz
int3
jle
cmp
in
inc
add
sahf
sub
mov
lea
mov
stos
dec
js
stos
stos
icebp
jns
jmp
pop
lcall
push
mov
popf
add
jns
aam
lds
jl
mov
jns
mov
mov
movntq
jmp
xor
pop
jmp
jmp
mov
test
pop
std
cmc
xlat
push
ds
mov
rclb
inc
std
movsl
inc
push
je
fsts
push
hlt
and
ds
lcall
jl
mov
ds
cld
push
cmp
jge
and
push
jns
loopne
cmp
xchg
jne
fisttpll
pop
outsb
push
imul
cmp
dec
daa
cmpsl
inc
and
push
faddl
in
mov
lds
jne
mov
cmp
or
lods
das
test
lock
ds
aas
and
xor
mov
test
jae
xor
cmp
mov
leave
mov
xor
mov
mov
cmp
loop
adc
das
sub
push
aad
mov
pop
xor
aad
dec
add
jg
in
cmp
mov
ss
cs
clc
sub
cltd
cmpsl
hlt
mov
std
push
dec
sub
sub
rcrb
testl
roll
mov
mov
in
loop
lahf
jne
push
cld
mov
call
jae
adc
xor
sbb
mov
pop
mov
out
sbb
dec
push
aad
push
adc
or
mov
mov
xchg
push
push
cmp
mov
jbe
push
nop
pop
dec
int3
xchg
sub
lock
cltd
push
jbe
ljmp
fldl
mov
bound
lds
js
out
icebp
pusha
pusha
iret
mov
sub
inc
repz
hlt
adc
sti
push
adc
roll
shrb
stos
and
mov
in
mov
xchg
shll
ljmp
sub
mov
push
mov
mov
xchg
cli
addr16
lds
jp
inc
jne
loop
jle
mov
orb
dec
icebp
sbb
das
movsb
sub
xchg
dec
ret
ret
add
jg
pop
fdivrp
ja
dec
xchg
jae
jg
pop
push
mov
aad
jno
icebp
cmp
cmp
mov
mov
enter
mov
pop
repnz
and
lods
test
and
dec
dec
pop
clc
xchg
fistpl
insb
pop
ds
imul
lcall
pusha
mov
cmpsb
sbb
add
leave
pop
incb
or
cwtl
xchg
sub
or
dec
jg
mov
shlb
out
test
mov
cmpb
inc
xchg
insb
xor
adc
xor
pop
dec
xchg
mov
cmp
xchg
cmpsl
into
in
es
out
addr16
outsb
test
add
repz
repnz
loope
cmp
js
push
inc
stos
xor
mov
xor
je
lock
repnz
jecxz
fdivrp
jae
cmp
pop
mov
outsl
sub
out
negl
ljmp
stos
sub
push
pop
gs
pop
out
push
scas
ret
bound
lds
movsl
adc
gs
bnd
out
dec
dec
and
cmovns
rcrl
cs
lods
icebp
test
insl
sub
hlt
lods
in
xchg
iret
arpl
sti
push
ja
out
dec
incl
inc
lds
icebp
notl
imul
sbb
or
push
inc
and
stos
cs
dec
xchg
cmpsl
call
mov
dec
inc
cmp
and
adc
lahf
aam
test
loop
fwait
test
sub
add
gs
data16
dec
cmp
jle
cmpl
xorl
push
jl
cmpsb
mov
xchg
lods
in
outsb
sub
stc
mov
add
call
popf
popf
adc
fists
sub
scas
pop
sub
add
lahf
bound
imul
sti
mov
xlat
lret
add
inc
mov
fucomp
enter
xorl
loope
pop
out
fidivrl
out
pop
and
dec
and
orps
jp
xchg
into
push
bound
repnz
push
int3
in
lods
jo
cld
sarl
mov
dec
jb
nop
xor
pop
jmp
cmc
sarb
or
lret
mov
or
fmull
pop
test
mov
sbb
inc
xchg
sbb
leave
bound
mov
gs
mov
sbb
rcl
push
cmp
stc
repz
pop
fmull
loop
out
xchg
insb
pop
or
lock
data16
inc
imul
add
adc
fstpl
cmp
push
mov
pop
jg
mov
sbb
jcxz
cld
inc
rcrb
das
int
stos
daa
mov
add
or
repz
cmp
decb
adc
iret
adc
add
cmpsb
mov
aam
mov
mov
loopne
sarl
mov
pop
insb
outsb
fsubs
sbb
xor
cmp
or
loop
fcompl
lock
sub
push
inc
pop
outsl
popf
xchg
sti
ja
cmp
pop
mov
add
jb
jae
push
add
js
mulps
or
ss
dec
mov
push
inc
test
and
subb
xor
and
fnstsw
mov
add
int
adc
xchg
jnp
roll
pop
pop
out
scas
jg
iret
mov
aad
in
scas
stc
sub
out
xor
mov
cmp
mov
scas
sub
dec
mov
ret
rcrl
adc
outsl
insl
sbbl
fcomps
bswap
jae
jmp
sub
inc
je
mov
mov
and
leave
pushl
aam
daa
in
popa
add
sbb
jb
xchg
les
movsb
mov
jle
jle
and
insb
stc
jle
test
mov
jp
push
xchg
xchg
xchg
xchg
xchg
ret
pop
lods
js
sti
into
adc
inc
fnstsw
mov
sbb
icebp
fcmovnb
xchg
nop
sub
push
dec
push
rcrl
dec
stos
mov
mov
mov
test
lods
adc
mov
les
sahf
icebp
arpl
pushl
jg
neg
int3
or
mov
scas
cwtl
xor
das
xchg
repnz
pusha
lahf
fnstcw
or
and
cmp
cmpsb
mov
mov
xchg
fidivl
dec
inc
mov
je
test
xlat
pushf
push
repz
sbb
jns
lea
popa
sbb
movsl
pusha
in
sbb
add
arpl
or
testl
int
pusha
mov
push
xchg
jg
arpl
jbe
sti
das
adc
ret
lock
mov
jmp
or
clc
fisubrs
pusha
lods
ja
sti
pop
mov
sub
mov
hlt
shlb
and
es
cmpsl
cltd
push
cmp
inc
jae
movsl
int3
sbb
xlat
ss
jle
or
cli
pop
mov
mov
pusha
sub
loope
pop
push
das
add
sti
add
add
inc
xchg
imul
lret
xorb
sub
mov
repnz
aad
dec
repz
in
push
repz
cmp
insb
add
push
push
lcall
xchg
arpl
rorb
mov
mov
pop
inc
xchg
lahf
insl
outsb
aas
loop
nop
movsl
test
es
rorb
cwtl
inc
push
xchg
out
mov
mov
sbb
push
cmpsb
mov
popa
imul
or
add
push
dec
cmpsb
insb
jge
sbb
pop
movsl
in
fidivs
imul
and
mov
add
stc
divb
mov
cmc
jbe
pop
mov
dec
and
mov
insb
rcll
in
inc
mov
push
filds
out
pop
cs
xchg
std
dec
sbb
add
aam
xor
push
mov
sbb
fwait
cmp
movsl
push
dec
push
xchg
xchg
fimuls
lret
xchg
nop
leave
aam
push
push
mov
dec
xor
and
and
pop
mov
add
add
pop
lret
lret
and
icebp
mov
les
pop
pop
cmp
movsl
jmp
cwtl
stos
xor
dec
je
dec
cmp
xor
add
stc
xchg
in
mov
pop
cmc
lahf
fcomps
paddusw
dec
jmp
into
sbb
hlt
das
ss
pusha
mov
icebp
push
xor
das
mov
ds
repz
lea
add
scas
addl
add
jmp
ja
lods
cmp
dec
xchg
mov
xchg
movsb
xchg
lret
and
testl
cs
pushf
jb
data16
das
idivb
pop
cmp
leave
inc
and
stos
mov
push
movsl
fwait
inc
sbb
insb
or
int
jb
popf
adc
xchg
addr16
jecxz
imul
jbe
jmp
mov
enter
fbld
mov
arpl
pushw
push
mov
imul
dec
gs
int
pop
data16
mov
xlat
add
jnp
fdivrp
sub
pop
or
mov
pusha
adc
gs
inc
cs
pushf
adc
sbb
xchg
mov
sub
xor
fcoms
xchg
cmp
mov
js
mulb
data16
lahf
mov
mov
test
sub
mov
stos
adc
push
xor
or
mov
hlt
insl
nop
jmp
mov
rcll
and
pop
cmp
jb
add
push
rcrb
cmp
stos
imul
mov
sbb
dec
roll
and
pop
icebp
dec
mov
push
cwtl
mov
xor
cmpsb
adc
into
mov
sahf
movsb
ret
loopne
mov
ret
es
mov
adc
mov
cli
int3
int
sbb
and
rcrl
ret
push
mov
aam
dec
rclb
out
jnp
xor
sub
mov
add
mov
rolb
push
enter
and
cmp
fs
xchg
xchg
ss
jne
nop
hlt
mov
in
jecxz
dec
or
add
jb
add
test
sbb
dec
inc
outsb
ret
xchg
fsubl
inc
in
fwait
fs
xor
enter
xor
xor
mov
fdivs
jb
xchg
insl
pop
or
dec
std
fwait
addr16
clc
sub
pop
sbb
xlat
rolb
cs
imull
adcb
adc
test
mov
mov
mov
js
or
mov
test
repz
xor
ja
nop
jge
out
jmp
pop
adc
push
cmpsb
mov
and
jmp
out
sbb
hlt
adc
pop
add
dec
les
scas
pop
xlat
dec
pop
out
jno
addr16
lahf
cmp
shlb
movsb
loopne
lock
push
sub
mov
sub
ss
sub
aas
addr16
idivl
sbb
adc
repz
fisubl
add
loope
and
add
push
xor
adc
movsl
cltd
pop
mov
out
push
pop
dec
pop
xor
test
arpl
stos
adc
mov
xor
enter
mov
lods
dec
inc
movsb
inc
addb
cwtl
sbb
sti
lock
mov
xchg
mov
loop
scas
add
adc
inc
or
lds
cmp
int3
sbb
sub
xor
pushf
dec
mov
inc
cmc
xor
iret
stc
push
xor
aas
cltd
dec
xchg
test
mulb
xchg
or
and
lock
pop
jbe
inc
pushf
insl
std
outsl
ret
sbb
sbb
sarl
mov
dec
in
dec
das
xchg
insl
xor
popf
add
out
xchg
push
pop
mov
and
pop
jnp,pn
mov
jae
add
push
or
jp
test
out
mov
dec
test
sbb
out
lcall
dec
loopne
inc
cmp
negl
in
das
pop
dec
mov
shll
push
icebp
mov
xor
rcrl
xchg
int3
aad
adc
push
pop
dec
mov
adc
je
decb
add
sub
int
xorb
inc
pop
fdivl
dec
add
mov
fwait
dec
jnp
pop
pop
mov
lea
arpl
fisttpll
ret
mov
mov
repnz
and
jp
das
add
sub
push
ljmp
adc
or
mov
dec
rol
xchg
mov
mov
xlat
repnz
notl
pop
add
xor
and
push
inc
inc
push
jb
bound
xchg
mov
mov
notl
pop
add
xor
and
push
inc
inc
push
jb
bound
addl
xor
ret
jecxz
notl
push
add
xor
and
push
inc
inc
push
jb
bound
mov
mov
xlat
repnz
adc
add
and
xor
add
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
fstpl
stc
mov
jge
dec
or
cmp
pop
in
std
mov
lods
in
mov
mov
arpl
jge
dec
sbb
mov
mov
int
adc
sub
jae
sub
jp
outsb
sub
stos
clc
es
clc
adc
scas
jle
inc
push
push
mul
js
dec
mov
cltd
loope
stos
lods
cmc
out
adc
std
inc
jo
inc
sbb
cmp
mov
test
lods
es
nop
or
mov
pop
pop
and
push
movsl
push
sub
or
inc
inc
inc
xchg
test
test
lods
in
inc
std
mov
lahf
cmp
pop
lret
mov
popf
sbb
loop
push
jb
nop
push
data16
pushf
aad
lods
shrb
sbb
pop
and
std
stos
xor
js
and
fs
xchg
sub
pop
loop
jl
sub
fisubrs
mov
lods
in
stc
std
int
fstpl
or
and
dec
jns
lahf
lods
mov
mov
mov
ret
stos
enter
cld
test
sbb
sbb
jns
pop
cmp
shll
lds
inc
scas
fdivrl
push
dec
cmp
sub
dec
pop
or
js
pop
or
call
mov
jge
dec
or
cmp
pop
in
lods
std
mov
lods
in
mov
jge
dec
or
cmp
pop
in
lods
cmp
loope
sarb
lcall
push
or
push
scas
push
imulb
outsb
xchg
xchg
and
adc
sbb
sbb
push
movsb
imul
push
jbe
fsubs
sbb
ljmp
jp
xchg
jp
cs
lock
fxch
clc
sbb
out
mov
jb
jle
push
mov
sub
cli
push
sahf
icebp
sub
push
fnsave
sbb
movaps
mov
movsb
fidivrs
jl
cmp
fs
daa
notb
cli
je
pop
add
sub
aas
ficoms
cmp
stc
mov
stos
ja
push
dec
int
mov
imulb
adc
out
movsl
dec
inc
pusha
cmp
jnp
mov
popa
mov
inc
inc
fmul
clc
int
xchg
lods
dec
dec
pop
xor
rclb
inc
roll
mov
push
nop
sbb
call
cwtl
add
fnstenv
cmc
dec
xor
mov
ja
out
jne
enter
dec
pusha
mov
pop
lods
repnz
stos
dec
add
leave
and
scas
pusha
pop
arpl
inc
sub
enter
cmp
int
cvtps2pd
movsb
xchg
paddb
and
insb
pop
fstl
push
jmp
jl
js
mov
xor
adc
lret
repnz
mov
mov
in
dec
rol
fdiv
jno
mov
imul
lds
mov
xchg
cmovno
xchg
ret
push
sti
and
jge
jbe
xor
xchg
out
jno
xchg
dec
ret
test
push
push
fstpl
mov
icebp
ret
jmp
push
hlt
in
test
pop
movsl
cmp
ss
jnp
adcl
test
push
mov
xor
test
out
lock
stc
push
testl
ds
sbb
inc
subb
pop
mov
test
or
mov
ljmp
psrlw
sar
mov
mov
cmp
and
inc
sbb
jno
repnz
not
popa
sub
ljmp
or
jmp
xchg
jbe
jge
xchg
push
or
and
add
aaa
enter
jne
or
jge
aas
pop
shr
push
mov
js
stos
sahf
mov
out
fcomps
mov
xchg
pop
mov
xchg
xchg
xchg
adcl
sbb
jnp
mov
rorl
inc
ja
and
call
bound
sub
inc
inc
inc
lret
loopne
ret
push
aas
mov
dec
xor
stc
int
lods
pop
sub
jmp
push
aas
cmp
sbb
jb
mov
push
loopne
xchg
rcll
lods
mov
ficompl
movsl
mov
test
sub
sub
insl
cmp
mov
nop
jp
fnop
push
cmp
pop
pop
out
test
mov
cmp
push
or
iret
xchg
xchg
mov
add
pop
testl
jl
pop
sbb
pop
fisubrl
xor
ljmp
roll
ret
inc
mov
jl
sbb
xchg
pop
or
fstl
jp
jecxz
scas
mull
push
mov
xchg
mov
pop
out
orb
mov
js
sarl
mov
xchg
pushf
sub
cwtl
push
mov
in
mov
push
jl
sub
sbbl
xor
jg
xor
popa
das
sbb
shl
in
jbe,pn
inc
pushf
jns
mov
pop
fcmove
xchg
and
dec
insl
bswap
push
nop
addr16
scas
out
cld
jl
cmp
test
loope
loope
and
xor
inc
and
push
fdivr
shrb
fstps
jge
cmp
repnz
sub
xchg
popl
jbe
jns
in
aas
mov
inc
mov
or
mov
mov
insb
shlb
mov
mov
call
sub
popl
loope
imul
pop
add
jge
scas
xor
dec
add
sbb
movsl
dec
imul
add
jg
pop
aas
jo
in
cmc
ret
sbbb
sahf
test
bound
call
xchg
pop
xchg
push
push
pusha
testl
push
lods
push
mov
dec
cmp
loope
mov
cmp
or
sbb
xchg
mov
sarb
negb
rcl
out
pop
xor
push
enter
mov
mov
loope
shrw
in
inc
pop
popf
jns
scas
cli
outsb
sub
lret
cmc
mov
es
jb
ret
fstpl
xchg
lret
and
push
mov
cmp
cmp
mov
iret
add
add
jb
jno
fistpll
adcl
adc
and
loop
sbb
mov
push
shlb
jmp
inc
sbb
ret
fcomps
inc
or
mov
adc
cli
ret
mov
inc
aam
sahf
repz
sub
out
adc
hlt
xchg
xchg
pusha
adc
jle
inc
movsb
pushf
or
jbe
xchg
faddp
jmp
int
out
in
idivb
lcall
lcall
and
inc
mov
xchg
jecxz
push
or
mov
mov
push
add
xchg
jae
insl
fdivrs
pop
push
mov
cld
mov
mov
cmpl
sub
cmp
into
fimull
roll
sub
or
cmp
rorl
push
or
cmp
mov
imul
mov
daa
sahf
push
jmp
ss
mov
inc
repnz
addb
loope
sub
js
icebp
push
ds
jle
mov
imul
rclb
sbb
push
dec
insb
jmp
xlat
inc
mov
pop
cmpsb
sub
inc
out
lods
jns
imul
out
pop
mov
and
adc
sub
dec
mov
fcomps
shll
mov
dec
sub
or
push
mov
dec
call
ret
pop
gs
xchg
bound
sub
sbb
mov
ret
imul
ja
cmpsl
stos
test
aas
iret
pop
fs
popf
jle
ret
cmp
jmp
addr16
jno
dec
in
in
push
mov
cli
mov
shrl
push
in
jbe
testb
push
xor
das
roll
inc
dec
std
rorl
jns
or
adc
ljmp
xchg
push
es
negl
dec
dec
and
cmp
mov
cld
shrb
adc
roll
jae
jecxz
rcrb
cltd
pop
cmp
cwtl
addr16
loopne
xor
push
lods
mov
outsb
pop
adc
mov
mov
mov
test
ljmp
icebp
lret
movsl
imul
xchg
ror
scas
push
incb
xor
enter
sub
push
std
loope
lret
fstps
mov
cli
stos
ljmp
out
push
shl
repz
test
or
mov
or
mov
lcall
out
jns
lcall
repnz
lret
jne
ret
cs
mov
lods
loop
mov
mov
push
xor
jge
pop
test
xor
mov
dec
sub
das
jne
imul
inc
outsb
sbb
test
jle
das
stos
sbb
shrb
clc
mov
pop
or
inc
xchg
cmp
femms
ret
cld
push
pushf
cltd
pop
pop
icebp
sub
jne
cli
push
adc
js
notb
int
mov
ljmp
je
adc
int3
cmp
mov
push
push
xchg
data16
sbb
sub
scas
stos
arpl
add
inc
jb
inc
lds
or
cld
lock
mov
fstpl
cmp
sbb
push
jb
mov
popf
out
xor
add
xchg
pushf
xchg
jae
cli
jae
jb
lods
mov
rcrb
adc
pop
in
out
fnsave
inc
into
pop
inc
adc
xchg
clc
add
or
out
push
sbb
jge
pop
rcrl
roll
ljmp
push
mov
out
adc
xchg
xchg
lods
nop
lret
jb
imul
ret
push
inc
out
sbb
mov
popa
pop
inc
sti
cld
leave
adc
push
insl
mov
cmp
dec
dec
enter
stos
inc
test
pushf
push
lahf
inc
xchg
cmp
and
mov
pop
fimuls
mov
and
in
lret
push
jp
out
push
push
pusha
int3
ret
push
mov
sub
popa
cmc
sub
mov
lret
pop
dec
test
pop
popf
xchg
sub
cld
lea
mov
stc
sub
outsl
dec
movsl
cmp
popa
jp
mov
pop
xchg
push
adc
or
ret
add
les
jns
orl
iret
adc
or
in
hlt
mov
xor
or
sbb
adc
ror
pop
sub
jmp
jg
fdivrl
adc
add
stos
push
fisubrs
push
sub
mov
popa
scas
and
xchg
mov
arpl
mov
sub
fwait
xchg
mov
add
mov
or
out
cmp
fcmovb
cli
stc
mov
pop
jle
xchg
setae
dec
stos
inc
ljmp
push
mov
inc
inc
bound
mov
negl
and
scas
adc
in
inc
push
adc
cmc
idiv
sub
fbstp
xchg
cmc
xchg
into
cmp
xchg
jmp
outsb
scas
push
push
xor
xor
cmp
iret
dec
mov
adc
out
and
mov
js
push
aaa
clc
ss
add
arpl
pop
xchg
loopne
clc
in
and
ljmp
je
outsb
or
fsub
sbb
or
xor
imull
jno
or
addr16
push
pop
mul
sbb
pop
jno
adc
lods
pushf
dec
call
out
cmp
insb
mov
iret
cmp
ret
push
push
dec
mov
div
cli
pop
push
push
inc
clc
inc
dec
jmp
inc
sbb
adcl
jg
and
sbb
sbb
out
add
add
xchg
out
jmp
xlat
xorb
inc
jo
jno
push
sahf
jae
out
add
sub
push
xor
sub
sti
stc
loopne
mov
enter
fistl
sahf
xchg
adcl
dec
in
cmp
clc
lcall
xor
into
dec
add
jnp
stos
rol
fmuls
loop
and
push
fwait
jns
ret
fs
sub
cmpsb
out
fnsave
mov
icebp
test
sbb
push
popf
sub
inc
xor
cmp
jl
mov
mov
adc
pop
sarl
mov
xchg
cmp
jo
pop
xor
popf
mov
and
pop
imul
push
sahf
hlt
shrb
lahf
or
lds
aaa
aam
ret
ret
or
mov
cld
test
dec
cmpsl
aaa
and
pop
xor
popa
test
pop
fstpl
sahf
jo
fprem1
pop
jmp
fistl
inc
pop
cmp
and
xlat
shll
out
and
mov
sahf
inc
lods
mov
insl
ficoms
mov
pusha
ja
jmp
and
cmpsb
sbb
testl
jp
cmp
cld
mov
std
in
dec
test
dec
shll
mov
pop
or
stos
push
jae,pn
sti
dec
inc
into
mov
push
dec
aad
xor
in
mov
mov
lahf
lea
int3
inc
dec
and
test
cmp
xchg
xor
inc
push
arpl
pop
sub
jp
fdivrs
cmp
push
mov
xchg
xchg
xor
repnz
mov
jne
and
out
cmp
mov
rolb
and
int3
popf
jb
stos
mov
incb
lods
add
jb
imul
mov
into
xlat
cmp
hlt
cltd
outsb
cmp
fisttpl
std
arpl
ljmp
and
sub
jp
jl
call
fnsave
movl
adc
jg
or
jmp
adc
sbb
cmpsl
ret
icebp
fnsave
stos
cltd
cmp
fiadds
add
jmp
cmp
add
in
in
or
cld
and
dec
jb
in
int
test
iret
idivb
sub
or
aam
nop
icebp
mov
pop
outsl
push
aam
roll
lods
jae
sbbb
adc
test
fisttpl
mov
cmpsl
and
inc
sahf
test
add
jmp
call
fwait
xor
mov
in
sub
mov
xlat
mov
jl
test
xchg
mov
cs
rorb
clc
mov
pop
xor
mov
sub
ja
popa
dec
cmp
xchg
das
sub
iret
aas
ret
les
or
mov
inc
je
xor
fstpt
loope
into
pop
out
xchg
jns
adc
mov
fstl
lods
sub
sub
mov
mov
jo
xchg
mov
fimull
and
inc
data16
inc
dec
popf
pop
pop
mov
or
mov
mov
hlt
or
lcall
adc
cmp
jmp
push
mov
jae
inc
jae
pop
push
insl
mov
and
test
cld
pop
mov
mov
sub
in
push
dec
call
mov
or
or
cltd
push
out
sub
dec
mov
repz
scas
mov
inc
sti
loope
mov
xor
ds
xchg
jbe
sub
adc
in
jge
push
sbb
mov
hlt
or
iret
rorl
add
fs
lcall
inc
add
inc
out
fnstenv
cltd
shrl
loop
frstor
dec
sub
adc
mov
test
mov
dec
dec
pop
fcom
xchg
mov
ds
mov
imul
xor
and
loope
addr16
pop
das
push
add
pop
into
and
xchg
sub
adc
jg
cltd
insl
adc
cmpsl
sub
test
push
pop
push
mov
mov
adc
jg
jno
dec
sti
and
sar
push
jns
mov
xor
xlat
lods
imul
pop
out
jp
xchg
jns
andb
lods
hlt
sub
sub
insl
jg
mov
fistps
jne
outsl
dec
pop
iret
clc
lods
push
movsl
xchg
repnz
pusha
push
aaa
arpl
aad
or
pop
xlat
or
sbb
and
cmp
push
xchg
icebp
push
cmp
mov
sbb
popf
pop
adc
sarl
pop
dec
mov
and
hlt
inc
gs
scas
in
outsl
xor
jb
cmp
test
or
xchg
inc
mov
push
push
lret
pop
std
into
test
inc
xchg
pushl
std
enter
sahf
ret
xchg
adc
outsl
rep
mov
fsubs
je
dec
es
xchg
xchg
jno
xchg
outsl
mov
jmp
lock
xor
mov
pop
push
jbe
jae
mov
xchg
lahf
sbb
mov
push
xor
add
ss
inc
dec
sbb
pop
jbe
cltd
pop
jmp
or
add
gs
push
cmpsb
cwtl
in
jnp
xchg
clc
inc
cli
lret
mov
sbb
mov
inc
and
or
mov
repnz
jl
jne
dec
int
andb
push
out
or
stos
xor
push
rorb
outsl
push
mov
dec
sbb
mov
bound
dec
or
stc
iret
not
gs
in
mov
outsb
rorb
rcrl
jge
aad
and
or
cmp
jne
and
in
dec
lea
or
mov
dec
and
lock
sahf
add
push
push
lret
adc
jle
call
xor
divb
test
adc
sbb
cli
pop
lea
and
pop
mov
loop
fistpll
xor
fbld
dec
or
xor
in
push
mov
in
cmp
xchg
inc
inc
mov
mov
icebp
pushf
pop
xchg
or
test
sub
test
ret
enter
negb
adc
inc
psrlw
out
mov
xchg
lret
movsb
lahf
aas
stc
cmpsb
push
repnz
jae
sbb
pop
mov
xor
rclb
aad
push
enter
adc
add
fstl
addl
inc
inc
inc
add
scas
and
insl
mov
jp
es
mov
adc
cmp
jl
sbb
adc
out
xlat
jg
sub
mov
shlb
fwait
mov
scas
cmp
push
shrl
or
sbb
mov
cmp
xchg
cmp
out
and
adc
in
mov
inc
pop
fnsave
int
lahf
das
in
jmp
test
imul
lea
stos
imul
mov
out
sub
inc
int3
gs
sub
pop
mov
out
mov
push
stc
inc
imul
test
mov
insl
ret
mov
mov
ret
outsl
xchg
lea
and
pop
enter
mov
imul
add
mov
int3
cmpsb
sbb
xlat
sahf
aas
mov
sub
ret
outsb
clc
into
mov
jbe
sub
es
and
in
sbb
pop
sub
mov
xchg
data16
ljmp
cld
mov
or
hlt
pop
mov
test
pop
pop
and
push
sub
stos
add
adc
popa
adc
jmp
jnp
das
xor
adc
jg
cld
mov
jp
stc
andnps
popa
adc
push
aad
inc
rcrb
cmp
ret
mov
subps
mov
mov
or
add
fcmovnbe
leave
fistl
and
dec
clc
imul
addr16
test
cmc
and
pop
out
adc
cmpsl
add
push
in
xlat
and
sbbl
jne
imul
repz
xor
push
movsl
inc
xor
dec
ljmp
push
xor
repz
sub
das
inc
xor
push
mov
xor
or
cmp
xchg
outsl
or
xor
dec
pop
cmc
ret
sub
xlat
mov
pop
sarl
outsl
cwtl
push
xlat
int
jo
into
pop
lret
mov
mov
push
test
imul
and
sbb
andb
ljmp
push
add
inc
and
add
int
imul
fsubrs
mov
xor
shl
sub
iret
jno,pt
mov
das
mov
xor
fnstsw
outsb
es
mov
scas
sbb
cli
stos
jb
addr16
shlb
addr16
sub
scas
dec
cld
pop
push
sbb
scas
jg
cmpsl
sbb
add
inc
jl
xor
or
test
sbbb
cltd
ljmp
lods
push
inc
outsb
add
or
lahf
mov
sbb
push
push
xlat
jmp
movb
mov
subl
and
lea
jle
xlat
les
mov
or
cmp
pop
jmp
mov
xchg
rorb
jae
dec
call
nop
aaa
arpl
popf
mov
cmp
jae
sbb
mov
inc
loop
in
mov
out
inc
bound
fsubrl
loopne
repnz
test
pop
mov
or
testl
mov
fstps
cmc
xor
mov
fisubrl
clc
dec
aad
repnz
je
jns
inc
cmpsl
jae
mov
inc
jbe
outsl
xchg
xchg
adc
fs
dec
addr16
out
adcl
jl
xchg
add
adc
fsubl
and
push
mov
push
push
sub
pop
loop
dec
push
add
jg
xchg
push
sub
insb
aaa
aad
dec
and
clc
cmp
and
sbb
stos
es
sbb
bound
aaa
outsl
jnp
das
or
xor
mov
mov
jmp
mov
js
mov
push
push
mov
add
sub
adc
repnz
fisubs
clc
sbb
fwait
sbb
movsb
jns
call
pop
cmp
cmp
xorb
and
shlb
adc
movsb
gs
insb
data16
xor
xlat
or
mov
add
sbb
icebp
ljmp
add
jle
xchg
sub
sbb
push
and
ret
andl
sub
jb
mov
nop
leave
lret
mov
mov
popa
call
xor
pushf
andb
mov
mov
inc
insb
push
cmpl
xor
cwtl
or
pop
dec
dec
inc
sub
dec
movsb
mov
addr16
dec
mov
sbb
shl
sti
lret
std
sarb
add
jb
xor
fcmovu
leave
or
aam
xchg
push
jmp
pop
sbbl
lds
and
mov
frstor
fcoml
pop
lods
sbb
jp
fsubl
aam
mov
push
mov
adc
push
in
in
imul
jge
mov
inc
das
mov
push
inc
adc
shll
imul
popf
lods
in
mov
jge
dec
or
cmp
pop
in
lods
std
mov
lods
in
mov
jge
dec
or
cmp
pop
in
lods
mov
lods
in
mov
jge
inc
or
and
or
pop
cmc
lods
sarl
lods
in
lods
std
int
sbb
out
pop
push
in
xor
loop
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
icebp
inc
loope
shll
adc
jae
adc
jno
icebp
push
loope
xchg
xor
add
shll
adc
and
nop
push
loope
shll
andl
jmp
sarl
mov
mov
loop
cltd
and
in
std
add
icebp
or
sub
jmp
or
insl
repnz
push
insb
push
aam
cmp
mov
shl
aas
dec
sbbl
int3
mov
je
sbb
stos
mov
pop
std
scas
in
aaa
add
ja
fsub
inc
sub
xchg
adc
xchg
loope
xorl
popf
add
rorb
mov
js
rcl
inc
shll
mov
mov
mov
sbb
in
mov
pop
mov
xor
pusha
icebp
lods
movsb
jb
stc
andl
fcompl
jo
lahf
mov
jp
mov
loop
lds
push
adc
aad
add
add
icebp
pop
loope
shll
cmc
mov
mov
pop
jno
popa
xchg
inc
fnstenv
mov
adcl
inc
cmp
xchg
outsl
loopne
hlt
and
rcrl
test
jecxz
out
pop
fcoms
and
add
add
je
mov
xchg
or
call
fs
cmp
movsl
xor
xor
shll
loope
xchg
xor
add
inc
loope
shll
adc
and
icebp
push
loope
xchg
xor
add
out
mov
mov
mov
movb
xchg
or
pop
or
gs
loopne
cli
jmp
arpl
mov
cmp
mov
mov
sbb
mov
jge
push
call
or
dec
cmpsb
outsl
push
sub
loope
fisubs
pop
std
pop
subb
lret
or
pop
push
pop
mov
dec
repz
movsb
iret
cmpl
rol
in
mov
mov
sub
cmp
push
mov
or
out
sahf
inc
adc
or
add
mov
add
adc
ret
mov
or
ret
sub
ljmp
mov
test
sahf
jno
cmp
or
xor
push
cmp
in
popf
loopne
pop
cmp
rorb
pop
xor
inc
or
lods
mov
std
sbb
xor
sbb
inc
push
cmc
mov
loopne
aaa
out
mov
mov
xor
jns
jne
xlat
test
test
imull
push
cmp
ja
sbb
hlt
incl
add
jno
stos
pusha
enter
dec
scas
mov
out
ret
jo
pop
sarb
movsb
fisubs
xor
stos
ret
add
sbb
mov
shrl
out
aam
iret
outsl
dec
pushf
stos
pop
cmp
sub
sahf
sub
xchg
lods
testb
jns
pop
cwtl
cmpsl
imul
lea
mov
loope
and
jbe
daa
push
adc
jge
cltd
lret
pushf
xchg
add
loop
mov
mov
xor
sbb
dec
add
fwait
xor
nop
cmpsb
cmp
xor
dec
mov
insl
test
cmpsb
xor
inc
fcoms
lcall
out
std
sar
icebp
jmp
daa
aas
subl
cwtl
pop
enter
dec
shll
push
movsl
jbe
inc
mov
dec
cmpsb
or
data16
fmull
sbb
incb
dec
ret
and
mov
push
push
pop
mov
xor
adc
jecxz
and
mov
xor
clc
or
outsl
ds
dec
or
pop
leave
jle
xchg
std
pop
insl
xchg
xor
mov
loopne
push
xchg
inc
dec
popa
ljmp
imulb
out
in
add
jmp
xchg
out
jl
sbb
mov
or
imul
jmp
inc
xchg
xchg
call
mov
cmp
add
in
imul
daa
sub
lret
mov
mov
sbb
jns
lock
xchg
adc
inc
mov
in
sub
aaa
imull
lods
int
sbb
mov
sbb
dec
cmpb
mov
scas
mov
push
jnp
mov
jno
addl
pop
ja
xor
cmp
jmp
and
pcmpeqd
xchg
inc
sub
mov
adc
mov
pop
aad
addr16
cmp
inc
inc
pop
inc
jns
push
inc
pop
scas
hlt
and
add
and
push
fadds
inc
dec
xchg
or
fdivl
dec
pop
mov
repnz
cmp
and
jbe
cmpsl
sbb
lock
mov
inc
add
jnp
xor
mov
fstl
insl
jnp
xor
and
fmull
jo
xchg
test
xchg
mov
mov
daa
push
lea
dec
call
ret
imul
jnp
mov
adc
or
pop
or
andl
into
into
push
mov
xlat
stc
cmp
adc
push
aam
andb
imul
jg
sahf
dec
movlps
dec
mov
push
shrl
sbb
inc
ljmp
sahf
push
mov
mov
push
and
sub
cmpsb
ss
hlt
xchg
sbb
xchg
lahf
in
xor
hlt
rol
sub
or
das
mov
adc
lods
adc
mov
or
je
lock
ret
and
cmp
cmp
xchg
push
jmp
ja
or
mov
and
mov
jo
js
int3
dec
adc
adc
or
call
jno
repnz
in
mov
xlat
ljmp
and
lret
add
loopne
sbbl
xchg
xor
stc
cmp
stos
stos
fldt
mov
lods
xchg
sub
into
insl
movsb
sub
push
je
cmp
and
sub
push
jp
sbb
xchg
leave
push
cmp
xchg
in
cmp
hlt
mov
sbbl
and
out
sahf
pop
rclb
mov
call
push
mov
jbe
je
xor
orl
sub
lods
mov
push
push
pop
push
cmpl
or
push
push
std
or
xlat
xor
shll
cmp
dec
and
fistpll
out
mov
hlt
cmp
push
xor
or
push
jmp
add
mov
pop
mov
cltd
cld
pop
outsl
pop
mov
lods
push
jnp
aaa
aas
or
pop
popf
xchg
pop
cmc
adc
out
xlat
sbb
xor
imul
idivb
shl
iret
ret
fmull
mov
and
jl
cmpl
or
inc
and
lods
ret
out
jne
inc
in
add
lea
adc
mov
adc
test
jns
or
or
cvtdq2ps
sbb
or
fidivl
imul
jnp
push
in
adc
call
mov
cli
and
subl
loopne
dec
leave
jo
xor
push
movsb
leave
mov
shrl
dec
xor
in
add
push
xchg
lods
loop
inc
or
aam
popf
cmpb
xor
ret
add
iret
or
nop
fistl
lods
push
out
inc
stos
jp
call
sub
cs
ljmp
aas
cmp
aad
mov
ljmp
xchg
sarb
popf
clc
add
mov
lret
cltd
test
push
loope
jbe
pusha
and
test
out
xchg
pop
xchg
pop
jp
xor
jmp
fs
xchg
out
rcrl
sbb
dec
sub
repz
jo
jns
aas
in
fwait
test
or
fildll
ror
pop
outsl
andb
in
mov
or
cmp
lds
lret
cli
cwtl
cmpsb
mov
and
pop
pop
adc
pop
fcoml
sub
inc
sbb
xchg
cmpsb
in
and
ss
pushf
jmp
inc
pop
scas
outsb
jge
push
push
adc
fs
sbb
lea
xchg
or
mov
jnp
icebp
aam
sbb
insb
xchg
daa
sbb
xchg
mov
xchg
push
push
add
sbb
hlt
jmp
popf
dec
inc
add
fsubr
pop
jle
adc
xchg
pop
or
xor
lods
je
mov
ror
mov
std
movsbl
and
or
ljmp
or
jp
inc
lock
and
stos
scas
shl
xchg
or
or
lret
cmpsb
mov
inc
push
add
aam
and
jne
imul
pop
mov
jbe
mov
popa
jne
in
call
or
ds
rcrb
sti
mov
push
dec
insl
or
sbb
sub
jns
push
mov
sti
cwtl
in
stos
fistps
mov
inc
mov
pop
push
mov
in
iret
pop
sbb
mov
xor
insl
pop
sbb
out
push
pop
popf
test
sarb
flds
sar
repz
jno
jmp
mov
add
mov
sub
push
jae
stos
mov
add
aad
popa
in
jbe
ja
shl
dec
mov
add
add
ficompl
scas
pop
fcmove
mov
pop
and
jle
jge
xchg
popa
popf
stos
repz
inc
xchg
pop
bound
jbe
out
mov
adc
lahf
das
andb
dec
pop
fdivrs
fcoms
ljmp
adc
pop
inc
outsl
cli
movsl
sahf
pushf
aas
cmp
ds
cwtl
outsl
xchg
in
int
pop
and
xchg
cmp
sahf
push
ret
sar
call
test
insl
stos
ret
mov
loopne
pop
loope
mov
insb
andl
in
and
cwtl
inc
cmp
pop
mov
dec
jb
mov
jg
lea
notb
push
addr16
movsl
cmp
jecxz
cmp
or
aam
icebp
inc
out
mov
and
push
int3
mov
cltd
jecxz
ret
fs
jnp
mov
inc
pop
cmp
jb
aam
lcall
out
push
inc
inc
pop
add
roll
clc
andl
les
lods
rorb
lock
add
ss
cld
sub
push
stos
in
inc
xor
push
or
jb
outsb
jp
test
outsb
fsubl
inc
pop
xchg
sti
cmc
xchg
cmpsb
or
or
imul
pop
jmp
test
arpl
sub
push
pop
push
pop
nop
lcall
push
xor
adc
jl
or
xchg
cmc
jle
pop
jge
seto
cs
rcrl
sub
and
es
es
repnz
or
loopne
ljmp
lcall
enter
call
inc
adc
cmp
adc
add
xchg
push
insl
fdiv
movsb
and
insb
cmpsl
jno
repnz
adc
pusha
mov
mov
ja
mov
jae
or
cmpsb
jb
jb
fcmovb
xchg
jmp
cmp
sub
inc
xchg
adc
mov
je
in
inc
pop
xchg
cmp
pop
js
fcomip
sub
dec
daa
and
push
sub
jmp
sub
adc
xor
push
sub
sub
jmp
and
scas
dec
push
mov
xchg
and
outsl
fidivs
adc
scas
and
ret
dec
xor
js
mov
jne
cld
jb
arpl
jecxz
mov
jle
push
dec
stc
dec
cmpsl
adc
adc
daa
mov
or
adc
in
cwtl
mov
repz
jl
repz
fwait
jge
add
dec
inc
add
push
add
or
mov
shll
ror
nop
lcall
xchg
jns
sbb
and
popa
scas
push
hlt
jg
test
sbb
jg
sar
mov
mov
stc
dec
adc
mov
mov
mov
in
movsb
incl
lds
std
sub
addb
pop
ss
mov
or
sti
push
mov
cmpl
cmp
sarl
popf
push
pusha
icebp
cli
cmc
and
push
imul
mov
sti
mov
push
jl
scas
xchg
jecxz
push
subb
in
pushf
jge
ret
inc
sub
jo
mov
aad
sbb
add
pop
shrb
or
movsb
mov
shll
and
xor
adc
cmp
push
xor
and
loop
mov
and
imul
pop
int3
cltd
es
rcrb
shll
pop
lret
xor
mov
lret
xor
push
lret
scas
cs
adc
int3
verr
cmpsl
add
mov
mov
pusha
test
mov
inc
aas
subl
xchg
cltd
pop
aam
xor
jno
add
ljmp
pop
dec
int3
jns
inc
enter
and
or
notb
xor
imul
imul
add
jne
cmp
out
outsl
and
xor
int3
sub
xor
dec
test
lods
popa
mov
icebp
mov
cwtl
mov
adc
fnstenv
add
sub
ljmp
fwait
and
xchg
lcall
adc
and
cmpl
push
repz
xchg
xchg
hlt
xchg
int3
jg
xor
mov
sbb
movsl
and
ret
mov
in
stos
push
movsl
mov
out
sbb
xchg
mov
inc
jp
leave
dec
jne
paddw
mov
mov
adc
fisubs
int3
fnsave
jge
add
aaa
cmp
mov
out
pop
out
or
mov
cmc
pop
inc
pop
movsb
sahf
in
lahf
cmp
xchg
frstor
or
and
jne
pop
xchg
xor
test
mov
adc
dec
into
pop
int
jno
adc
aam
push
push
ljmp
adc
fadds
sahf
in
dec
push
and
imulb
xchg
dec
mov
lea
lods
ficoml
and
jae
outsl
out
bswap
dec
mov
jae
mov
dec
shrb
push
arpl
lcall
adc
gs
shl
mov
rorl
popa
scas
hlt
mov
in
xchg
xchg
pop
xchg
test
ret
mov
adc
int3
lret
mov
jle
or
clc
int3
addr16
cmp
nop
fidivl
cli
mov
or
push
in
es
or
push
ret
pusha
dec
rorb
fcoms
in
dec
inc
sbbb
pop
aas
insb
call
jle
icebp
inc
xlat
xchg
jo
outsl
movsl
sbb
adc
push
lcall
jle
cld
daa
push
fstl
mov
sbb
jmp
mov
repz
sub
mov
iret
inc
in
jb
in
iret
mov
shrl
ret
cmpsb
rcrl
cmp
stos
xor
adcl
in
aam
sub
data16
imul
data16
inc
es
jne
pop
mov
cmp
pop
inc
sub
insl
cmp
dec
adc
inc
imul
pop
dec
popa
mov
mov
cs
in
adc
mull
fcmovnbe
dec
ret
jl
cmp
and
inc
or
or
push
pop
leave
mov
cwtl
lods
loopne
and
fisubrs
std
stc
loop
jle
mov
or
imul
stc
imul
inc
sbb
sub
adc
jmp
dec
loopne
and
pop
add
mov
jno
sbb
lds
iret
test
push
sbb
sbb
push
dec
cmp
sub
pop
ret
lahf
jp
iret
push
iret
mov
movl
cmp
mov
dec
or
sub
adc
xchg
sub
sahf
lea
sahf
mov
icebp
push
xchg
dec
aad
and
js
aad
aas
idiv
dec
sub
in
mov
pop
jnp
mov
sub
hlt
dec
bound
lea
or
movsb
jae
inc
popf
jne
loop
imul
jmp
mov
jnp
sub
js
add
lea
and
ret
inc
sbb
xchg
cwtl
imul
xor
jne
sbb
pop
cmpsb
pop
pop
jp
maxps
fs
sbb
sbb
js
out
fdivs
sub
aaa
pop
add
xchg
outsl
clc
inc
mov
or
push
sbb
sbb
xchg
mov
and
movsb
pop
jmp
mul
pop
xor
xchg
dec
test
popf
shll
cld
dec
mov
cli
aam
lret
lret
out
jmp
fldl
push
outsb
lods
mov
negl
rolb
add
fimull
aam
mov
or
push
sub
das
lods
jae
push
mov
xchg
clc
adc
and
jae
add
test
in
lret
repnz
lahf
mov
adc
or
es
pop
jbe
into
or
movsl
insb
dec
cmp
mov
jle
and
mov
outsb
ja
adc
jmp
lds
sarb
clc
jge
pop
jae
xchg
sub
or
cli
and
sub
jns
dec
fisttps
mov
data16
add
inc
call
pop
jae
dec
adc
xor
notb
ja
jbe
popa
inc
jmp
sarb
fbld
push
out
inc
sarb
dec
jle
iret
xchg
sub
les
push
sub
push
decb
test
inc
inc
fistps
push
fisubs
aad
test
stc
inc
stos
outsl
push
and
add
sub
arpl
or
movsb
shl
repz
outsb
cmp
movsl
cmp
imul
jns
lret
insb
push
dec
xor
inc
mov
adc
jb
scas
inc
lock
xchg
cld
mov
xorl
mov
mov
pushaw
sbb
xor
mov
sub
adc
mov
pop
stos
jmp
mov
lods
mov
inc
push
in
mov
int3
cld
lret
and
out
inc
jmp
mov
mov
into
mov
lcall
out
xchg
dec
nop
jo
sbb
mulb
imul
mov
subl
in
test
nop
cld
mov
sar
inc
insl
lds
dec
adc
shlb
aad
or
xchg
jp
and
adc
fcmovnb
stc
imulb
add
mov
out
xchg
push
mov
xchg
sahf
insb
fimull
jns
sbbl
xchg
daa
std
test
fsubr
push
mov
pop
fcoml
pop
scas
sub
stos
mov
iret
fsubs
je,pt
stos
mov
push
xor
jae
jle
loope
push
bound
hlt
cmp
push
sbb
movb
pop
dec
aaa
adc
in
imul
cmp
sub
xchg
xlat
repz
enter
aad
imul
divl
push
jbe
stos
inc
out
test
lret
rcr
pop
or
sarl
lods
pop
imul
mov
sbb
nopl
nop
or
xchg
cs
and
inc
repnz
call
imulb
test
adc
sar
mov
movsb
mov
ja
dec
add
arpl
mov
in
out
aad
dec
mov
cmp
mov
mov
in
gs
mov
sahf
push
inc
jg
in
aad
pop
adc
xor
push
inc
test
mov
pop
sbb
cmp
push
arpl
mov
inc
mov
cld
add
xchg
pop
xor
and
mov
fcoms
or
xchg
scas
xchg
xchg
xlat
cmpsb
ss
lahf
cmpsl
lods
xchg
das
pop
sti
aam
add
mov
and
sub
inc
jge
sbb
aad
xlat
cmp
push
adc
or
cmc
and
sbbl
ficomps
in
xor
push
bound
xchg
icebp
out
and
cli
mov
adc
lods
mov
popa
repnz
sbb
and
mov
fiadds
dec
gs
mov
aaa
pop
lahf
sbb
dec
mov
add
adc
xchg
adcb
ret
js
push
push
test
nop
push
jae
mov
xor
mov
repz
xchg
jb
add
push
xor
lret
aaa
xlat
cmp
mov
sbb
shl
sub
jb
jmp
jnp
mov
and
fdivrl
sub
sub
pop
pop
fcmovne
pop
cmp
push
stc
dec
std
mov
movsl
inc
xchg
fsincos
imul
jb
mov
push
push
es
inc
dec
shr
mov
inc
subl
pop
push
lds
movsl
or
xchg
xchg
jbe
xchg
repz
stos
cld
or
sub
push
ja
jmp
cs
repnz
jmp
xchg
lds
dec
mov
mov
pop
stos
jae
test
dec
sub
lret
lret
iret
cmp
divb
adc
movsb
mov
sub
jae
std
in
ja
jmp
and
sbb
jge
jp
jo
adc
fdivrs
rcl
jns
mov
les
hlt
or
mov
adc
mov
sbb
pop
pusha
cli
push
inc
scas
or
mov
repz
fdiv
ds
cmp
jle
xchg
inc
mov
dec
adc
cmp
jl
inc
cmpsb
cmc
jno
popa
fistpll
dec
or
call
pushf
std
jmp
xchg
aas
out
mov
sbb
js
clc
mov
sub
inc
adc
push
enter
mov
cltd
out
inc
sub
icebp
rcll
adc
sub
in
insb
fidivs
mov
adc
adc
sub
out
xlat
or
lds
xlat
or
inc
pop
or
int
popa
aas
shl
sbb
ljmp
inc
mov
pop
hlt
inc
cld
fsubrp
pop
repnz
enter
aad
push
push
adc
fucomi
enter
mov
ret
fs
dec
hlt
mov
xchg
icebp
insb
cwtl
repz
aad
clc
les
out
lcall
cmp
les
insl
aas
fwait
cmp
cltd
fst
mov
inc
les
push
jb
in
jns
loope
jg
int
pusha
sbb
and
pop
cwtl
in
push
inc
outsb
scas
jge
jns
movsl
sarl
sub
cmp
daa
jne
ss
outsb
or
ror
rorl
in
or
test
adc
notl
and
and
test
cmp
fnstsw
mov
sbb
jmp
popa
rcll
add
shll
popa
icebp
push
loope
xchg
xor
add
inc
loope
shll
adc
and
icebp
push
loope
xchg
xor
add
jno
adc
popa
rolb
loope
shll
pusha
add
inc
xchg
xor
add
sbb
lds
mov
and
adc
lret
pop
push
loope
out
or
dec
out
pop
imul
push
dec
push
pop
pusha
inc
push
push
sub
cmp
scas
jmp
sti
mov
sahf
fucomi
stos
ds
mov
fwait
imul
push
dec
push
pop
outsb
sub
dec
or
scas
jmp
fwait
cli
lret
sahf
fucomi
stos
mov
imul
push
dec
push
pop
outsb
sub
dec
or
scas
inc
mov
fildl
stc
mov
imul
insb
or
in
jle
pop
insb
jne
repz
sahf
int
gs
out
xor
sahf
pop
movsl
cmp
xchg
movsb
inc
test
les
test
pop
add
push
adc
jmp
iret
lret
mov
mov
outsl
ljmp
aam
jno
hlt
es
stos
ja
stos
je
adc
aas
clc
js
lahf
pop
outsb
sub
mov
ss
xor
mov
rcll
rorl
movsb
aad
jne
dec
push
pop
cwtl
mov
xor
sbb
cld
inc
je,pn
push
sar
push
test
mov
mov
aad
sahf
aam
jbe
fcmovnu
sarb
mov
jo
jnp,pt
dec
push
pop
outsb
sub
dec
or
scas
jmp
sti
mov
sahf
fucomi
stos
mov
push
and
add
cmp
inc
pop
dec
out
mov
popf
mov
xchg
enter
fisubrl
dec
jnp
sub
pop
dec
jl
sbb
xchg
mov
mov
enter
out
fmulp
inc
and
and
outsb
sub
dec
or
scas
jmp
sti
mov
sahf
fucomi
stos
mov
imul
push
dec
push
pop
outsb
sub
dec
or
scas
jmp
sti
mov
sahf
fucomi
stos
mov
imul
mov
rolb
or
movsl
sbb
int3
push
addr16
dec
mov
pop
aaa
scas
adc
das
jbe
mov
add
cmp
lods
jg
dec
xlat
xor
rcl
jecxz
mov
pushf
mov
jns
jae
or
inc
loopne
dec
notb
enter
mov
cmp
mov
scas
inc
test
insl
add
int
push
dec
orb
inc
fsub
pop
aaa
sub
jecxz
mov
mov
push
sbb
ret
sbb
stos
cld
xlat
in
sub
and
xchg
cld
in
cmpsl
or
sahf
sub
les
nop
jl
inc
fwait
loope
ret
outsl
imul
mov
jne
scas
movsl
cwtl
ljmp
mov
test
pop
xor
aad
add
cmp
ja
sub
mov
lret
jge
mov
fisubl
je
icebp
fdivs
pop
in
mov
mov
dec
jb
pop
jge
mov
and
adcb
ffreep
push
outsl
lret
cmp
dec
jne
les
hlt
pusha
es
scas
sbb
and
and
jmp
sti
mov
lret
pop
push
mov
xchg
inc
popf
mov
int
inc
fistps
push
paddsb
adc
lea
loop
fdivl
push
scas
mov
scas
lar
adc
and
gs
subl
cli
ret
push
sbb
pushf
ljmp
and
mov
loope
push
inc
cmp
jbe
sbb
int3
inc
mov
cmpb
add
cmpb
in
pop
mov
nop
xchg
popa
out
mov
cmpsb
test
jo
int
mov
in
pushf
scas
arpl
lahf
inc
cld
test
adc
stos
cwtl
lods
mov
xor
sbb
or
rcrb
ret
out
mov
in
incl
cmc
popa
in
pop
sbb
cmpsl
sbb
add
clc
cmp
add
in
gs
adc
bound
jo
or
mov
imul
divl
lahf
ss
add
and
sbb
imul
adc
lret
loope
inc
jb
xchg
decl
mov
std
stos
stc
and
addr16
adc
jno
mov
ud2
cmp
mov
fcomps
inc
cld
lret
lods
clc
sub
loopne
or
gs
add
add
test
inc
aad
nop
dec
ror
shrb
push
pop
rcrb
scas
mov
pop
xor
mov
mov
lret
push
pop
jbe
aam
push
push
sub
in
inc
pop
call
cmpsl
rclb
mov
cwtl
rcrb
dec
movsl
enter
in
inc
xor
cmp
insl
xchg
lcall
fsubl
outsl
xor
divb
aad
lahf
jno
adc
xchg
or
cmpsb
ret
int3
pop
fcoms
add
ficompl
and
dec
mov
sbb
xor
jo
sub
jle
pushf
jle
mov
shlb
out
xor
xor
jp
mov
and
and
scas
imul
pop
gs
mov
and
and
pop
push
mov
push
push
cmp
testb
daa
xchg
sahf
ljmp
dec
jl
je
scas
or
jecxz
jmp
sub
sbb
or
inc
rol
or
ja
shl
shlb
fadd
xchg
mov
xchg
jne
sti
lods
mov
xchg
xchg
loopne
mov
sbbl
outsb
test
ss
aas
cmp
rcrl
hlt
mov
xor
push
sarl
pop
mov
jae
test
jg
mov
mov
test
inc
fdiv
call
test
adc
loop
sub
dec
mov
mov
stos
jp
fs
mov
lods
enter
or
dec
pop
jbe
inc
ljmp
ss
sbb
xchg
ficompl
bound
das
push
call
sub
xchg
cmp
xchg
cltd
mov
push
rcll
mov
iret
push
arpl
inc
sub
mov
sbb
js
sbb
push
xchg
and
pusha
pop
pushf
lret
jle
loop
mov
dec
daa
pop
dec
and
xor
addr16
repnz
fcmovne
movsl
int3
or
cmp
mov
push
jecxz
popa
mov
jne
repz
test
add
rorl
stos
and
aaa
inc
cmp
rolb
fwait
shrb
mov
lahf
pop
movsb
jge
rcr
insb
lods
insl
ljmp
negl
xor
xchg
div
pop
mov
sbb
loope
pop
mov
pushf
mov
test
orl
and
inc
sbb
adc
movsb
je
mov
and
xor
sti
movsb
imul
adc
jae
das
fstpt
hlt
sbb
pop
cmpsb
jge
add
dec
popa
ja
and
shll
pop
enter
nop
pop
sub
iret
mov
adc
loope
xchg
and
xchg
imul
fsubrs
mov
push
mov
push
mov
jle
cmpsb
packuswb
pop
shrl
dec
or
imul
adc
repnz
aaa
xchg
loop
sub
js
call
outsl
js
das
pop
xchg
lcall
fimull
mov
jne
mov
mov
push
popf
es
add
out
dec
add
push
mov
test
in
lea
fcom
test
lret
test
pop
scas
mov
mov
push
adc
push
mov
jle
iret
adc
xchg
roll
shll
aad
pop
aad
push
mov
test
adc
imul
xor
int3
adc
mov
les
push
pop
aas
jae
ret
mov
pop
sbb
xchg
xor
xor
xchg
adc
or
mov
mov
fisubrl
push
jmp
push
movsl
pop
push
push
pop
pop
cmp
or
xchg
cmp
je
sti
sbb
mov
xchg
addb
arpl
lret
loope
test
xchg
jg
addr16
loop
adc
mov
mov
push
mov
cmpxchg
dec
insb
pop
mov
or
mov
stc
hlt
xchg
cmp
or
mov
lcall
cmpsl
sub
xor
cld
repnz
mov
mov
daa
adc
mov
xchg
movups
mov
es
adc
out
adc
xchg
lcall
jnp
add
mov
add
ja
mov
mov
lods
and
jmp
into
mov
lea
jb
dec
std
stc
and
gs
test
cmp
adc
push
dec
mov
imul
test
into
dec
push
jo
push
jp
and
inc
adc
jbe
mov
add
xor
les
shl
and
push
sbb
cmpb
in
jl
xchg
mov
and
and
or
xchg
jnp
stos
loope
and
sub
rclb
fistpll
inc
decb
es
cmpsb
cmp
std
loop
cmp
mov
inc
jecxz
lds
xchg
jp
jae
lods
mov
jecxz
dec
mov
jl
push
jo
js
jb
jbe
mov
addr16
cmpsl
xchg
xchg
not
or
insl
bound
dec
mov
push
adcl
inc
insl
mov
inc
inc
inc
push
sub
mov
int
data16
out
stc
aaa
cwtl
xor
and
decl
sub
insb
pop
pop
lock
xchg
push
pop
jne
lock
dec
loopne
mov
fdivs
lods
jne
lcall
je
cmp
and
in
icebp
cmp
mov
rcr
cld
add
and
aam
dec
and
stos
pop
bound
test
mov
mov
mov
iret
jmp
push
je
mov
sub
scas
std
add
ret
inc
jns
dec
in
add
call
pop
aas
pop
dec
inc
in
pop
aas
xchg
jecxz
or
mov
xor
cmp
add
out
adc
fs
and
dec
lock
push
dec
test
loop
xchg
popa
mov
dec
in
mov
test
jp
mov
jmp
in
inc
mov
xchg
adc
sbb
adc
test
mov
std
and
jl
outsb
rcrl
and
aam
cmp
fadds
ror
out
push
scas
inc
movb
xchg
shr
or
mov
movsb
push
or
pushf
stc
jbe
imul
fs
dec
lds
ljmpw
adc
data16
icebp
sub
cmp
test
mov
je
cwtl
push
push
aas
xchg
les
cmp
and
inc
fdivs
mov
in
aaa
sub
fiadds
cli
dec
sbb
sub
jae
lret
xor
outsl
jb
or
xchg
add
div
nopl
adcl
cs
fisttpll
enter
sub
pop
shrb
shr
xchg
xchg
inc
dec
ds
xor
fstpt
sub
sub
mov
fcompl
xchg
lret
or
aam
popf
sbb
cmp
xchg
mov
adc
mov
inc
push
rclb
adc
shrl
inc
outsl
fwait
insb
sbb
adc
inc
mov
inc
lods
push
mov
add
push
pop
je
xchg
mov
pop
xchg
mov
cli
inc
or
in
mov
push
int
ret
pop
cmp
or
dec
in
fucomp
mov
jno
sbb
shlb
ja
add
pop
mov
mov
mov
enter
sbb
test
add
and
mov
and
mov
mov
mov
pusha
enter
addr16
repz
jecxz
jb
je
test
mov
sub
jecxz
jno
and
sub
jno
jmp
stos
mov
or
divl
mov
xchg
fsts
cwtl
push
outsb
fstps
lahf
xchg
inc
mov
sbb
negl
jo
popa
dec
mov
out
add
adcl
push
rolb
dec
sbb
xchg
push
and
xor
sti
xlat
std
loopne
xchg
aaa
adc
fwait
mov
mov
bound
cmp
popf
popa
sahf
mov
insl
and
pusha
and
out
out
mov
test
xchg
fdiv
cmp
inc
aad
call
and
cmp
add
outsl
sub
or
sarl
call
push
mov
add
xchg
mov
shrl
add
scas
xchg
cld
jp
outsl
jmp
sbb
test
jmp
clc
cmpsb
xor
mov
inc
ror
sti
push
inc
push
out
push
push
inc
jmp
mov
das
pop
jg
iret
push
xchg
pop
adcb
aam
and
inc
jge
jbe
push
cmpsl
sti
push
mov
add
xor
jle
push
divl
icebp
clc
sub
ret
adc
icebp
mov
push
push
push
fidivl
ret
cs
pushf
and
cmpsb
mov
pop
cmc
push
int
hlt
lea
adc
test
adc
shrb
jns
cli
outsb
push
cmp
push
jns
nop
lcall
dec
movsl
outsb
mov
push
mov
shl
mull
mov
xchg
inc
imul
xor
addb
pop
mov
sbb
add
sub
add
pop
xlat
mov
addb
dec
rolb
jl
repnz
dec
fcmovnu
xchg
stos
je
ret
add
jb
adc
cmp
jle
cltd
sub
pusha
mov
es
stc
cmp
cs
adc
ret
push
adc
ret
and
jp
icebp
push
faddl
pop
cmp
jnp
pop
xchg
pop
jmp
out
mov
inc
sbb
sub
sahf
or
in
sbb
ljmp
data16
jecxz
sbb
mov
and
jbe
stos
jno
stos
inc
int3
dec
push
mov
adc
repnz
inc
sbb
out
push
sbb
cmp
push
ror
jl
or
int
dec
sahf
scas
or
mov
jbe
xchg
call
xchg
xor
aas
add
data16
leave
mov
push
sbb
stos
test
pop
add
rcrl
imull
rol
aad
push
mov
push
hlt
inc
out
imul
jns
insb
add
insl
shrb
in
lods
enter
cld
js
je
push
mov
mov
adc
pop
out
loopne
mov
push
mov
sub
or
and
ds
ret
add
repz
mov
mov
into
cmpsb
stos
aam
ret
adc
dec
inc
stc
fdivl
xchg
sub
sbb
in
sub
lds
cmc
mov
inc
mov
xchg
push
xchg
sub
out
jne
jmp
call
aas
jge
push
cs
cmp
jge
je
xchg
pop
loope
outsl
fmull
gs
push
adc
xlat
sahf
cmpsl
sub
mov
inc
inc
lock
add
ds
cmp
pop
fwait
or
xor
pop
fdivr
cmpsl
lahf
xchg
inc
mov
dec
cmp
hlt
stos
lock
imul
ja
mov
xor
xor
ret
fimull
push
fwait
mov
add
mov
sti
push
addl
das
loope
mov
das
into
fldenv
inc
jb
mov
notb
ds
mov
aam
pop
int3
pusha
stos
sbb
cmc
pop
test
lock
sbb
sbb
shll
pusha
out
and
sbb
jne
jbe
mov
nop
mov
jecxz
mov
pusha
xor
sbb
icebp
test
or
sbb
aad
lahf
or
insl
outsb
movsb
mov
adc
imulb
call
sub
iret
loopne
sti
xchg
sahf
pop
mov
mov
in
andl
jae
mov
outsl
es
test
mov
out
lock
add
mov
insb
mov
jle
leave
jo
sub
push
xchg
stos
xchg
xchg
jmp
pop
mov
test
scas
push
jl
loopne
or
fsubrl
mov
jo
pushf
loopne,pn
mov
xor
lods
add
jecxz
mov
negb
fildl
jg
mov
dec
int3
popf
ds
dec
outsl
cld
pop
adc
or
in
mov
xchg
sub
in
notl
repz
bnd
das
arpl
push
cld
testl
test
jne
add
movsl
push
inc
jae
mov
imul
in
add
and
dec
inc
lahf
xchg
fs
jb
call
pop
lds
lea
insl
inc
in
and
or
shlb
testl
sbb
push
mov
lods
sub
cmp
xchg
out
stc
or
dec
daa
aad
aaa
fwait
std
imul
insb
jns
or
je
mov
bound
mov
xchg
cmp
bound
inc
jmp
jp
push
jno
out
shll
add
sbb
cmp
pop
mov
pop
sti
scas
aad
hlt
mov
in
xchg
add
movsl
repnz
lock
lret
xlat
jbe
out
stos
xchg
les
in
popf
cli
in
push
sub
jmp
sub
out
mov
cwtl
divb
gs
data16
aaa
aam
lea
mov
in
fimull
aad
dec
cmp
pop
ret
aas
pushf
les
call
call
cmp
decl
xchg
dec
cltd
js
pop
std
in
movsl
je
leave
push
cwtl
out
lds
pop
and
dec
cltd
stos
dec
call
xor
outsl
rcrl
test
xor
dec
repnz
and
repz
lret
add
push
push
aas
outsb
pop
popa
mov
das
push
leave
mov
sbb
jmp
and
and
je
jnp
outsl
xor
inc
stos
mov
add
mov
and
sbb
ja
rcrb
icebp
cwtl
iret
out
into
repnz
mov
negb
cld
lods
imul
sbb
mov
lea
dec
test
sub
cwtl
cmp
es
jg
dec
int
andl
fcmovb
cld
or
mov
inc
mov
into
mov
sbb
aaa
in
push
ficompl
pop
nop
pop
mov
or
sbb
enter
int3
mov
pop
sbb
push
pushf
xchg
rolb
pop
mov
pop
test
add
sub
dec
mov
fisttpll
popf
inc
ja
aas
mov
into
sub
test
sarb
mov
ret
aam
mov
out
mov
cwtl
push
push
shl
mov
aad
repnz
adc
js
sbb
jbe
push
or
out
xchg
sub
testl
adc
pop
lahf
dec
aas
cmp
fsubr
ja
popa
dec
js
cmpsb
push
mov
out
mov
pusha
push
imulb
mov
stc
popa
mov
inc
xor
int
lea
sub
adc
and
repz
out
hlt
xor
jo
inc
pcmpeqw
jmp
fnstcw
lcall
je
jp
xor
aam
xor
hlt
jno
and
or
adc
mov
pop
mov
lcall
loopne
repz
lock
sbb
adc
cmp
xchg
jp
xchg
push
or
in
out
inc
add
pop
pop
sbb
lea
test
je
loopne
loope
rorb
push
cwtl
adcl
push
xorl
and
mov
dec
sub
fwait
jmp
gs
fadds
js
subb
outsl
stc
cmp
aam
sahf
mov
sti
add
cli
push
fldl2e
jge
or
sub
rolb
cmc
aam
js
dec
icebp
popf
or
add
mov
jg
sub
push
out
repz
sbb
rcr
div
cmp
and
push
outsl
daa
addb
mov
cmpl
sub
lahf
cs
mov
pushf
cli
mov
imul
adc
sbb
sbb
mov
sbb
in
int3
flds
pop
or
cmc
mov
sub
adc
loope
fstps
mov
sub
push
movsl
sbbb
in
push
cld
cmp
out
gs
adc
inc
sub
push
pop
push
push
push
add
mov
sub
lea
data16
insb
sbb
inc
inc
sbb
mov
and
fs
outsl
pop
mov
daa
push
ret
jns
pop
iret
adc
fimull
ss
sub
mov
or
mov
mov
push
push
xor
dec
subl
mov
jbe
sub
mov
mov
jae
outsb
push
add
pop
lcall
mov
sub
movsb
dec
sbb
or
mov
mov
aam
sbb
scas
mov
cli
fcom
cmp
cli
pop
pop
int3
scas
dec
cmp
popf
jmp
pop
sbb
adc
mov
sub
jle
in
and
adc
xor
ja
aas
cmp
loope
cmp
and
dec
dec
mov
push
pushf
xor
mov
mov
jo
aam
xor
jno
or
leave
ret
sbb
aaa
inc
adc
popf
cmp
inc
jns
fnstcw
jp
js
pop
mov
or
xchg
ljmp
aad
imul
inc
loopne
pop
add
lock
mov
jb
lds
push
call
xchg
mov
add
add
mov
mov
pop
aaa
add
dec
adc
and
mov
aad
cmc
sahf
test
push
push
push
pop
sub
mov
aas
adc
rolb
insl
cmp
subb
sub
xor
shrb
pop
adc
push
dec
je
mov
mov
jnp
pop
inc
jecxz
rcrb
fwait
pop
call
je
cmpsl
fidivrs
shl
mov
aaa
ja
jl
movsb
idivl
lods
sub
loope
or
adc
jmp
push
inc
test
mov
rcrb
add
cmp
xchg
out
aaa
xchg
mov
lret
clc
es
adc
out
add
push
leave
push
movsb
jle
insb
mov
cmp
and
test
in
jnp
and
xchg
movsl
mov
daa
cwtl
mov
sarb
or
clc
lea
cld
push
sbb
sbb
or
xorl
enter
movsb
shll
xor
sbb
lods
pop
sbb
scas
out
imul
lds
out
push
sub
sti
out
in
leave
xchg
and
js
incb
sbb
sub
or
gs
mov
imul
jbe
xchg
add
pop
shrl
cmpsb
mov
dec
push
pop
outsb
sub
dec
or
scas
jmp
sti
mov
sahf
fucomi
stos
mov
imul
push
dec
push
pop
outsb
sub
dec
or
scas
jmp
sti
mov
sahf
fucomi
stos
mov
imul
push
lret
push
pop
outsb
sub
dec
or
scas
imul
out
stos
mov
imul
push
dec
push
pop
outsb
sub
dec
or
scas
jmp
push
and
sahf
lods
cltd
and
xor
jecxz
repz
mov
fsubl
bound
jae
inc
sub
and
dec
adc
imul
mov
mov
cmp
jmp
inc
sbb
and
add
cli
sub
stos
rcrl
cli
push
xor
sub
and
pop
daa
pop
das
inc
imul
ss
inc
addr16
sub
xchg
mov
sub
and
les
mov
push
mov
push
jae
popa
out
pop
loope
sub
sbb
jns
and
data16
xor
xchg
int
aaa
leave
or
mov
jnp
fisubrs
xchg
imul
mov
mov
jl
xchg
push
call
fldcw
mov
adc
mov
jle
dec
inc
xor
stc
stos
xor
arpl
sub
xor
cld
jns
xchg
or
sub
pop
jecxz
sub
fwait
fs
sbb
sbb
data16
add
ljmp
fldenv
lock
imul
and
cmp
pop
sbb
or
cmpsb
mov
aad
into
xchg
xchg
test
pop
jno
insb
aaa
inc
and
sbb
jle
mov
xchg
mov
mov
sbbl
push
and
pop
es
ja
xchg
lahf
in
scas
fdivrs
leave
cmp
jmp
inc
cmp
and
dec
add
imul
mov
mov
cmp
jmp
inc
cmp
and
dec
add
imul
cwtl
mov
lods
addl
bound
and
dec
push
jge
aam
mov
push
lds
icebp
aam
add
dec
mov
xor
mov
inc
mov
cmp
movsl
imulb
in
sbb
xor
adc
les
out
cmp
sahf
or
dec
icebp
sub
and
stos
or
and
add
sub
cmpsl
icebp
sahf
mov
inc
rclb
lods
aad
push
rcrl
add
add
bound
jno
inc
mov
xchg
ljmp
mov
stc
jg
mov
out
addr16
ret
jg
xor
jle
cmp
test
jae
and
push
xor
popf
mov
mov
push
xchg
dec
rcrb
outsb
in
lods
cmp
push
inc
cwtl
dec
pop
inc
scas
xor
mov
mov
int3
sti
iret
or
notb
js
xor
std
or
imul
or
stos
mov
imul
sti
js,pn
jae
jp
test
mov
subl
push
dec
test
xor
ret
stos
and
mov
shr
sahf
pop
clc
sahf
fnstsw
push
dec
sub
pop
stos
out
adc
jp
xchg
pusha
insb
stos
les
into
in
push
pop
xchg
mov
sbb
jecxz
mov
pop
imul
out
ret
dec
std
jg
mov
xor
loope
xor
mov
iret
xor
lds
aad
pop
fcmovnb
movsl
sub
ret
cltd
inc
pop
jbe
push
and
div
jb
dec
daa
frstor
sub
fisubs
loopne
insl
testl
add
push
insb
jmp
mov
cmpb
sarl
or
pusha
andl
add
lcall
adc
cmpsl
mov
data16
or
lret
push
or
cwtl
sub
or
incl
das
jns
push
popf
jns
cmp
jg
aas
dec
incl
xor
mov
jle
and
xchg
out
sar
loop
or
cmpsb
arpl
inc
jbe
inc
dec
ljmp
pop
aad
ja
pop
daa
push
cli
add
addb
repnz
nop
into
xor
push
xor
mov
mov
xchg
pop
loopne
ss
or
jmp
push
mov
testb
ror
stos
ljmp
jnp
sub
test
imul
imul
imull
mov
fs
outsl
je
xor
into
in
mov
ss
in
jnp
iret
cli
repnz
aaa
pop
leave
lds
lret
xor
jne
es
sub
push
mov
inc
and
imul
test
sbb
movsl
and
cmp
iret
dec
jno
jae
mov
mov
xor
xor
call
jbe
mov
cmpsb
mov
movsl
vpsrlq
loope
inc
jle
movsb
cltd
push
xchg
adc
fidivs
sbbl
sub
inc
cmp
xchg
leave
xor
or
sub
mov
sub
or
cltd
lds
xlat
inc
fadds
sub
insb
jnp
jp
sub
and
jecxz
lock
sub
outsl
xor
ret
js
aad
add
xchg
dec
mov
mov
cmp
aam
and
push
repnz
out
ret
add
pop
jle
or
data16
outsb
dec
pop
dec
dec
sub
movb
and
sub
insl
sub
lds
and
cltd
pop
inc
jmp
in
dec
mov
in
pop
xor
pop
sahf
dec
inc
hlt
add
testl
xchg
push
rcl
sub
adc
push
inc
scas
or
test
push
stc
dec
pushf
cld
pusha
sbb
lock
ret
int3
rcrl
xor
shr
cld
sti
cmp
test
dec
fisttps
gs
or
or
call
cmp
fucomi
sub
test
in
imulb
fbld
inc
mov
xor
xchg
xchg
jge
jmp
mov
mov
aad
jbe
in
cmp
orl
mov
push
pop
xor
push
inc
mov
push
mov
fdivrl
imul
xchg
or
pop
es
lahf
insb
push
jl
loope
hlt
lret
sub
push
movsl
enter
in
jb
popf
mov
js
mov
pause
sub
jmp
ss
mov
loope
shrl
jne
push
sbb
adc
loopne
push
cli
jmp
rorl
and
pop
jb
jecxz
sub
shlb
test
test
xchg
sahf
outsl
ljmp
push
lret
bound
jecxz
cmp
xchg
mov
out
mov
mov
jge
cmp
pushf
xor
fldcw
xchg
mov
inc
test
daa
stc
pop
push
popf
xchg
jbe
scas
mov
pushf
arpl
stos
int3
push
aad
push
push
test
clc
sub
or
jmp
fsts
cltd
adc
mov
jb
push
add
je
aam
es
and
imul
aam
push
adc
add
sti
cs
jg
or
or
imul
and
rcrb
out
pop
test
stc
loopne
jne
fcoml
push
mov
aam
xorb
and
clc
insl
jl
dec
xchg
addr16
nop
mov
xchg
lock
fstl
push
pop
push
push
fsubrs
repnz
stc
adc
sub
mov
push
dec
sbb
push
pop
addr16
das
arpl
dec
cmp
outsl
scas
adc
push
push
mov
cs
xchg
jecxz
cltd
stos
cmp
push
js
jg
add
mov
lds
or
add
in
shlb
sbb
shlb
imul
dec
lret
imul
out
inc
sbbb
xor
and
mulb
jle
test
das
push
jmp
popa
aad
fnstenv
xor
jl
rorb
out
mov
fcomps
fidivs
movsl
push
test
add
sarl
sbbb
push
and
sub
pop
ja
push
aad
popa
sub
inc
insl
and
das
jnp
jecxz
adc
sub
xor
or
xchg
push
jae
fldenv
inc
add
icebp
and
mov
adc
subl
test
insb
ret
adc
orb
sbb
mov
push
mov
sbb
mov
jp
push
int
push
pop
call
scas
xchg
dec
and
and
push
jno
bound
fwait
lahf
inc
in
xor
push
fs
addr16
out
jns
sti
mov
movsl
lods
mov
and
push
rcrb
jmp
mov
sbbb
xor
aaa
mull
push
bound
sub
cmp
mov
loope
jbe
lods
ljmp
ss
lahf
cmovne
jbe
xchg
jnp
sub
cld
fcom
xor
nop
xor
push
filds
into
sbb
das
jg
stos
cs
fs
loope
jp
ljmp
mov
push
xchg
jp
inc
add
aas
lcall
or
inc
fstpt
imul
or
mov
xchg
mov
pop
sbb
das
mov
mov
jg
in
push
insb
dec
add
aam
and
ja
adc
mov
xor
aas
push
push
in
mov
jmp
sub
or
cmc
fs
cmpsl
mov
inc
pop
mov
mov
out
mov
inc
adc
push
sbb
iret
add
cmpsb
lret
cmc
mov
cmp
mov
lcall
fldenv
test
mov
mov
mov
sub
pop
dec
mov
adc
or
and
flds
imul
int3
inc
ja
stos
addl
mov
push
sub
pavgb
xchg
sbb
imul
sbb
mov
lods
dec
jle
mov
fildll
cmpsb
inc
pop
cltd
cs
mov
cmp
mov
popf
push
pop
addr16
push
xor
pop
cmp
fmulp
dec
test
jmp
lods
pop
mov
out
ljmp
push
mov
cmp
dec
xor
in
and
ss
pop
mov
jecxz
outsl
jno
xchg
fidivl
gs
cli
cltd
xchg
dec
movsl
std
or
mov
jne
or
insl
aam
std
jno
and
mov
sbb
mov
lahf
gs
cwtl
imul
je
mov
data16
lcall
adc
subl
push
sub
sub
mov
sub
lock
dec
cmp
cmp
dec
add
in
mov
into
mov
xchg
push
cli
mov
icebp
daa
mov
pop
test
ds
out
push
inc
mov
out
mov
fwait
dec
pusha
lcall
mov
jae
jb
jmp
lods
xchg
mov
int
sbb
mov
xor
jp
xor
js
dec
cmp
sub
pop
xlat
push
mov
jmp
jp
ljmp
sub
flds
pop
ja
mov
gs
cmp
add
je
int3
mov
mov
ss
mov
fwait
xor
cli
jp
ficompl
sbb
mov
sub
xor
xor
enter
sbb
int
push
fisubs
cmp
into
sar
dec
or
loopne
lahf
mov
xchg
icebp
test
lods
push
test
mov
pop
mov
add
inc
mov
dec
inc
cmp
dec
lret
push
adc
popf
out
sub
fisubs
add
out
repnz
sbb
jecxz
bound
arpl
into
xor
je
adcb
pusha
je
imul
or
int3
mov
je
icebp
inc
sbb
mov
in
fdivrl
les
mov
xchg
xchg
and
pop
dec
pop
stc
sub
fcmovbe
push
sub
add
sti
lods
push
inc
or
cld
pushf
scas
xchg
std
xor
mov
inc
inc
imul
pushf
adc
pusha
mov
push
cmpsb
enter
jb
in
inc
loope
jecxz
cs
out
xor
ret
xchg
mov
insl
aad
sbb
jge
std
adc
cltd
adc
mov
pop
cmp
or
xchg
push
stos
xor
push
addl
jo
mov
mov
out
mov
mov
inc
mov
movsb
mov
negb
sbb
fs
jecxz
lods
or
mov
nop
inc
ja
cmc
and
cmp
jne
rorb
dec
mov
adc
imul
lds
dec
xchg
fucompp
pushf
sbb
lcall
popl
jae
mov
pop
cmp
mov
das
inc
jge
leave
jge
std
mov
dec
test
sbb
jg
mov
jle
adc
cmp
push
add
xlat
call
jl
sbb
inc
ljmp
stc
dec
xor
xchg
in
lds
out
cmp
js
jbe
mov
ja
mov
pop
add
sbb
mov
dec
sbb
in
xchg
mov
mov
jge
xlat
je
jae
xchg
lahf
adcb
xchg
loope
pop
mov
cmpsl
sti
inc
cmp
mov
cmp
jne
inc
xor
adc
sub
inc
mov
mov
fdiv
or
idivb
push
cmp
cwtl
aaa
pop
ja
jl
int
sbb
mov
enter
in
cmp
sbb
mov
sti
shrb
sub
mov
mov
add
jb
xchg
gs
push
jl
inc
sub
mov
pop
sahf
sbb
mov
jecxz
pop
call
cli
jne
push
xlat
inc
lods
outsb
int
repnz
hlt
enter
sbb
lahf
in
jle
pop
dec
jo
inc
lret
pop
test
cltd
es
push
leave
pop
jno
sahf
arpl
scas
push
into
xor
fidivs
inc
in
lcall
adc
adc
push
xchg
icebp
aam
add
call
in
lea
xor
mov
stos
xchg
sahf
in
adc
testl
out
adc
mov
pop
roll
jne
repnz
imul
sub
push
sbb
nop
jnp
mov
leave
hlt
negl
stos
sub
mov
sar
jp
iret
loopne
insl
xchg
or
or
xchg
dec
add
push
and
xor
nop
add
xchg
mov
push
push
faddl
push
insb
inc
mov
pop
inc
out
fcompp
lea
sbb
pop
in
pop
aaa
jmp
insb
andl
cmpsb
jmp
push
jp
mov
and
mov
popa
movsb
in
sbb
push
loopne
add
decb
ja
popf
ret
and
jo
rcll
jp
dec
aaa
fs
push
inc
nop
out
jbe
xor
aas
aam
es
or
es
dec
sti
imul
sbb
push
fsts
out
insb
push
pop
outsl
push
xchg
jge
into
add
ds
outsl
jns
sbb
std
jge
out
cmp
cmp
cmpsb
xlat
mov
mov
xchg
frstor
repz
jns
mov
icebp
and
add
out
inc
in
jb
lea
fnstsw
sub
push
mov
adcl
mov
jb
fidivs
int
jp
xchg
jecxz
jns
cli
jl
sbb
loop
push
push
dec
sub
fbld
cmp
pop
or
filds
scas
and
loopne
cs
jne
leave
insb
pop
frstor
mov
add
test
loopne
pop
popa
jbe
xor
xor
sbb
mov
cmp
in
ret
mov
inc
cmp
fistpl
scas
test
pop
shlb
ret
stos
push
xchg
or
xor
outsl
xchg
sub
cmpsl
popf
xor
or
mov
fdiv
out
xchg
testb
cmp
mov
cwtl
pop
dec
enter
xchg
jmp
or
addr16
aas
dec
mov
rolb
xchg
push
sti
xchg
lret
xlat
in
cmp
jno
cli
fsubr
and
stos
mov
loop
dec
mov
xchg
pop
push
xorl
lock
repnz
mov
imul
popa
cmp
ds
pop
xchg
push
and
mov
les
int3
mov
in
jmp
adc
mov
pop
or
int3
xchg
rcll
mov
push
sub
aam
leave
push
mov
jno
push
push
int3
xor
mov
xor
testb
flds
add
in
mov
out
fildll
mov
mov
jbe
out
pop
mov
imul
test
gs
mov
mov
outsl
or
movsb
xchg
sub
mov
and
push
call
call
lret
push
dec
xor
sub
xor
or
xor
or
into
mov
test
mov
andb
mov
inc
mov
lds
or
xor
ret
popf
push
daa
test
ret
je
ficompl
xchg
xor
and
mov
inc
jae
add
ret
add
imul
in
aam
std
xchg
shl
inc
mov
addr16
clc
dec
outsb
fcmovnbe
stos
loope
push
adc
pop
mov
cmpsb
pop
jne
adc
push
jle
inc
jp
rorb
mov
sbb
and
mov
jne
mov
fbld
jbe
jle
push
and
rol
mov
mov
sahf
sbb
xor
and
mov
daa
sbbb
push
adc
das
xor
mov
pop
adc
inc
ja
sub
in
jmp
lea
ret
loopne
jo
adc
dec
enter
rol
xchg
pop
icebp
in
movsl
mulb
mov
mov
mov
insb
mov
fidivl
test
lea
imull
out
pop
jl
xchg
xchg
push
push
or
aas
mov
xor
mov
flds
pop
lret
mov
pop
lret
dec
dec
sub
jecxz
xor
ja
loope
jcxz
lcall
jge
and
movsl
sbb
xor
in
push
xor
xor
xchg
pusha
iret
sti
lds
sbb
notb
add
pop
xor
xchg
or
ficomps
lahf
mov
cmp
into
jbe
xchg
cltd
xchg
pop
lea
enter
das
push
dec
mov
fs
mov
addr16
or
imul
fsts
cwtl
test
test
clc
scas
xchg
pop
ljmp
frstor
cltd
jnp
mov
or
fdivs
mov
adc
mov
pusha
fcomi
and
sub
ficoml
insb
cs
mov
inc
mov
push
imul
jecxz
or
testl
push
xchg
lods
daa
pop
gs
pop
mov
pop
es
aad
sbb
popa
enter
push
xor
lcall
loope
rcll
mov
pop
adc
push
negl
pushl
mov
dec
outsl
out
dec
adc
in
ret
andl
sub
dec
lret
sbb
mov
and
mov
xchg
cmp
mov
sti
xor
out
jp
inc
inc
add
push
inc
mov
sbb
lods
and
pushf
subl
hlt
out
fcompl
rcrb
mov
fnstenv
sbb
mov
popf
xchg
leave
roll
fbstp
ds
dec
pusha
into
xor
aad
sarl
jo
sub
out
ljmp
inc
mov
loop
mov
loopne
xchg
xlat
enter
mov
and
inc
out
popf
fiadds
inc
and
mov
jns
cli
jno
inc
jbe
mov
je
and
enter
andb
lret
mov
adc
test
fdivs
jp
xor
popf
or
cmp
xchg
rol
lods
cs
jnp
mov
jnp
inc
loopne
xor
sub
jge
mov
xor
lahf
lods
lds
enter
fcmovnb
mov
sbb
mov
cwtl
in
or
repnz
pushf
pop
out
fs
popa
inc
imul
ret
pop
cmp
xchg
push
inc
out
or
mov
jo
xchg
sub
mov
mov
in
out
adcb
dec
inc
adc
into
outsb
inc
bound
outsb
xchg
bound
lret
sbb
es
xchg
iret
jno
pop
mov
cld
jb
lea
adc
push
lds
aas
clc
mov
in
add
mov
pop
xchg
add
les
rcrb
inc
jecxz
ret
and
out
mov
out
pushf
xlat
movsb
mov
lret
xchg
mov
leave
xchg
in
sub
pop
mov
pop
test
fdivrl
into
pop
mov
out
push
lahf
lret
cmp
mov
fcoms
mov
sub
fsubrs
subl
mov
xchg
xchg
and
fwait
add
jmp
cmp
sbb
cmp
call
outsl
mov
into
inc
mov
sub
mov
mov
insl
rol
xor
and
scas
push
in
dec
jg
sub
lds
iret
add
xorl
and
aas
pop
adc
xchg
cmp
mov
daa
aad
loop
jmp
mov
and
and
iret
push
shll
loope
jecxz
sub
sti
mov
pop
pop
or
pop
loop
ljmp
mov
gs
mov
push
fninit
mov
imul
repnz
mov
add
repz
mov
ljmp
jae
pop
dec
push
cld
repz
loop
into
xchg
xor
add
fisubrl
cmpsb
int3
cmp
int3
imul
push
mov
push
mov
adc
test
and
rorb
testb
inc
jbe
push
popa
div
repz
ds
pusha
mov
push
jl
add
mov
jo
cmpsb
out
or
sub
filds
mov
pop
jbe
pop
into
jl
jo
stos
aas
mov
mov
arpl
xchg
pop
cwtl
cmp
arpl
int3
mov
pop
fdiv
dec
nop
mov
lret
adc
xor
mov
lret
fsts
xchg
jp
std
adc
dec
mov
mov
shld
or
jns
xchg
jbe
jecxz
xchg
gs
and
push
stos
mov
fistl
movsb
lcall
push
repz
rol
jle
sub
cld
xchg
outsl
insl
jno
fucomi
icebp
dec
add
pop
lods
stc
aam
sarb
push
mov
loope
addr16
push
xchg
push
add
lcall
inc
addr16
xor
and
or
stc
cmp
fldcw
or
sar
dec
dec
jo
xor
inc
xchg
xchg
sysenter
ss
rorb
leave
push
shrl
cmp
jmp
inc
cmp
and
dec
add
imul
mov
mov
cmp
jmp
inc
cmp
and
dec
add
imul
mov
mov
cmp
jmp
inc
cmp
and
dec
add
imul
mov
mov
add
adc
pushf
sbb
push
sarl
xchg
inc
stc
or
cmp
sub
inc
cmc
cmp
pop
mov
mov
pop
mov
cmp
or
stc
or
or
sub
pop
mov
push
imul
push
leave
sub
sbb
or
stc
adc
and
xor
inc
mov
jg
cwtl
jns
dec
aam
fsubrl
imull
jle
ja
jp
mov
mov
push
cltd
mov
dec
adc
sbb
nop
inc
xor
out
sbb
cmp
mov
mov
ja
inc
dec
movsl
sub
adc
gs
xchg
stc
or
jno
ljmp
push
fcompl
add
daa
sub
sub
das
mov
mov
mov
test
repz
xchg
mov
cmp
or
idivl
or
mov
push
xchg
lods
cmpsb
test
jb
leave
sub
adc
clc
jl
fs
movsl
mov
mov
inc
int3
addr16
test
jp
sbb
sbb
stc
or
cmp
aas
leave
dec
mov
jno
cmpl
dec
sarb
sub
sbb
pusha
imul
test
fsubl
fucomp
add
cmp
popf
pusha
lea
pushf
or
aad
in
lock
adc
or
sub
push
mov
data16
cmp
and
push
imul
sbb
or
stc
or
cmp
sub
pop
mov
push
imul
sbb
or
stc
lret
andl
fs
push
xor
mov
sti
repnz
sbb
stos
cmc
mov
or
dec
mov
hlt
adc
jp
pop
aas
push
jge
sub
pop
inc
mov
push
aad
sbb
das
nop
sbb
sub
pushf
sub
push
rcrb
mov
inc
push
jl
inc
ret
aas
arpl
out
repz
add
data16
fwait
in
jp
push
popa
jge
adc
cli
push
add
cmc
fs
sbb
in
shr
aam
faddl
mov
xchg
jge
punpcklwd
mov
imul
xchg
mov
inc
jnp
std
xchg
sub
xor
dec
mov
cmc
xchg
cmp
das
push
stos
cmp
ja
jge
ds
cmp
lds
out
mov
xchg
test
mov
fmuls
lea
jbe
lret
pop
cltd
jno
mov
andb
clc
jbe
dec
fisubs
int3
xchg
pop
mov
enter
and
iret
nop
and
jbe
mov
iret
ds
push
add
test
lods
mov
add
or
aam
ret
sbb
sbb
je
inc
cli
mov
outsb
aad
dec
mov
cmpsl
insl
xor
in
lock
or
scas
test
push
movsl
jl
cli
inc
nop
rorb
sbb
call
add
cmp
push
lahf
ds
loope
push
scas
mov
stos
popa
inc
sbb
repz
movsl
mov
add
mov
push
loop
mov
adc
mov
lods
or
mov
loopne
cli
leave
outsl
outsl
dec
xor
movsl
lods
mov
mov
sub
in
lds
lods
leave
sub
fmuls
and
jnp
jp
lret
shl
jp
ja
das
iret
jl
cmp
cmp
hlt
xchg
inc
xchg
rol
iret
call
jle
sub
outsl
sbb
inc
cwtl
add
and
rclb
cld
fdivp
jp
les
aad
sub
loop
adc
fstpt
cs
fldl
cli
sti
rcll
mov
jbe
pusha
out
fistl
mov
imul
fnsave
jne
xchg
inc
mov
sub
xchg
nop
int3
dec
dec
test
bound
mov
sbb
mov
loopne
sbb
push
jge
or
fmull
enter
and
popf
sahf
xchg
dec
cmp
int3
cmp
or
xor
in
arpl
movsl
jnp
hlt
jmp
out
add
data16
inc
lcall
pop
mulb
inc
jae
test
dec
lods
jbe
rorl
mov
cmp
jp
jbe
into
fsubrl
adc
adc
pop
scas
cmp
sub
repz
adcl
mov
inc
add
add
shll
jb
fucomp
inc
sbb
jb
cwtl
loopne
jl
xchg
insl
mov
loope
adc
cmp
sbb
sub
jo
mov
inc
jle
jmp
add
xchg
mov
cmp
xchg
xchg
and
sarl
and
pop
inc
aam
add
sub
jle
lock
mov
fwait
jp
jg
push
inc
pusha
stos
test
cs
jbe
call
xchg
push
sub
push
enter
xchg
in
mov
insl
stc
pop
sbb
mov
aad
pop
aas
and
sbb
icebp
inc
mov
mov
xchg
mov
je
cs
jge
test
inc
inc
inc
sbb
mov
fstpt
flds
sbb
in
mov
jmp
jnp
je
lds
cmpsb
leave
pop
loop
pop
sbb
inc
xor
xchg
add
repz
rorl
add
imul
sbb
xchg
dec
mov
or
leave
xchg
jnp
testl
inc
ds
dec
ret
jl
jbe
xor
leave
mov
lret
iret
xlat
lcall
lds
mov
inc
fcoml
mov
inc
out
adc
dec
out
or
js
xor
loopne
out
andl
insb
dec
or
xchg
xchg
ret
dec
rclb
cmpsb
out
pop
xlat
sub
ja
scas
andl
lock
mov
or
pop
inc
push
pop
jnp
dec
aas
cmp
adc
pushf
pop
pushf
cmp
test
push
outsb
jns
adc
fwait
nop
nop
dec
push
add
xor
call
insl
xchg
test
dec
in
cmp
lcall
adc
lret
cli
lret
cltd
sub
mov
push
ds
in
pop
xchg
inc
xchg
call
in
xchg
push
or
outsb
nop
nop
sub
stos
inc
xor
pop
mov
rcr
sbb
pop
xor
repnz
mov
adc
jl
cli
dec
cltd
jnp
push
bound
sti
jo
mov
cli
lods
xchg
popf
cmc
dec
mov
aaa
cmp
cltd
dec
ret
shlb
add
mov
in
arpl
pop
js
shrl
sub
mov
dec
sbb
aad
mov
cmp
sub
jecxz
std
insb
pop
pop
push
loope
jne
sub
pop
inc
xchg
stos
in
fld
rclb
in
add
jo
jge
add
cmp
or
cwtl
imul
test
mov
test
filds
adc
test
fs
cmp
and
jae
inc
icebp
test
or
imul
xchg
rcl
xchg
lock
movsb
cs
cld
push
in
adc
sahf
dec
cli
test
stc
andb
xchg
lcall
adc
fdivl
add
mov
mov
sti
in
cs
dec
push
dec
cltd
stos
xchg
jmp
pusha
cmp
repnz
dec
lods
fisubrs
aad
adc
lret
pmulhuw
xchg
cmpsb
scas
inc
nop
out
sbb
in
sub
or
scas
push
xchg
mov
dec
enter
arpl
sub
jno
scas
bound
pushf
and
cli
pop
sub
int3
les
or
rcll
mov
and
or
aas
scas
inc
and
push
inc
test
jne
sub
test
shll
repz
fcoms
sub
test
jb
add
xchg
lea
add
movsl
inc
cmp
inc
lahf
dec
jp
push
mov
pop
pop
sub
inc
push
out
daa
add
stos
inc
lcall
xchg
dec
outsb
mov
mov
lahf
data16
add
mov
ret
push
jne
adc
je
dec
shlb
fiadds
cwtl
adc
xchg
ret
inc
add
mov
notl
ja
push
xchg
or
pop
aad
stc
shl
shlb
fmull
stos
js
fbstp
repnz
push
das
scas
push
pop
push
sbb
imul
mov
and
push
out
cmp
and
jo
popa
jns
rclb
adc
xchg
sbb
sbb
cmp
jle
ljmp
sti
lock
bound
xchg
xchg
jno
add
test
push
in
addr16
es
in
inc
dec
imul
div
jae
shlb
loope
jb
dec
adc
push
aam
dec
ja
incl
inc
lods
insl
call
and
rcll
lcall
movsl
imul
addr16
cmpsb
jg
add
or
mov
sub
inc
pusha
jnp
sub
jle
mov
dec
push
add
sbb
and
aad
adcl
xor
test
ret
add
add
push
cmp
adc
push
test
mov
xchg
mov
and
dec
pop
xchg
shlb
test
mov
mov
or
push
lods
stos
cs
inc
es
cmpl
nop
movsl
mov
cs
sbb
lcall
outsl
je
lret
fcomip
mov
subb
cmp
dec
test
sub
dec
scas
incb
lock
inc
mov
pop
cmp
movsl
cmpsb
imul
sbb
lahf
mov
xchg
adc
adc
push
out
lcall
icebp
dec
ret
cmp
mov
push
fadds
add
pop
dec
pop
cltd
out
jl
aas
das
jne
dec
or
adc
jns
ret
loop
dec
push
xchg
lahf
gs
int
out
jbe
leave
out
subb
push
xor
mov
faddl
ret
pop
jno
pop
movb
pop
fdivl
push
out
pop
and
inc
cmp
iret
mov
cmpsl
sub
test
les
mov
add
daa
imul
xchg
inc
mov
aam
cmp
jecxz
xor
push
fwait
in
pop
lret
push
push
cld
inc
ja
insb
push
mov
mov
mov
aas
int3
int
jg
test
fst
dec
adc
add
mov
mov
outsl
rcl
out
jb
iret
sub
sbb
jmp
pop
in
subb
test
iret
mov
loope
push
xchg
testl
jnp
int3
push
jecxz
ljmp
in
cmpsb
lahf
stc
addb
lret
push
stc
inc
mov
into
mov
addr16
xor
shl
popf
jg
and
and
and
int
scas
xor
mov
mov
mov
shr
jp
inc
push
ja
adc
jg
pop
lret
outsb
mov
insl
test
sbb
cmp
and
repz
jnp
cmpsb
mov
xrelease
cs
loope
mov
pop
xchg
sbb
bound
jl
fnsave
stos
push
test
scas
mov
ss
out
or
aaa
dec
lret
jmp
out
jno
aas
ja
fnsave
outsb
xorb
in
jg
test
sbb
mov
adc
leave
ss
roll
inc
jecxz
push
dec
stos
mov
ss
push
bound
cli
pop
pop
ss
mov
cmp
mov
jnp
adcb
cli
mov
cli
dec
scas
add
lea
push
aam
xchg
fwait
jb
ja
cmc
mov
in
xor
addr16
sub
dec
push
jge
mov
inc
stos
sbb
xor
daa
ss
push
fwait
rcrl
jns
and
adc
outsb
add
test
loop
cmpb
int
xchg
mov
pop
pop
dec
addr16
int3
ljmp
add
fildll
mov
in
test
bound
xor
out
dec
mov
xor
jmp
dec
lock
int3
xchg
sub
stos
and
cmpsb
and
cmp
push
pop
inc
push
cwtl
inc
add
mov
test
unpckhps
push
fs
ret
cmc
movsl
xchg
mov
jae
inc
xchg
push
and
mov
es
ds
lahf
push
flds
cmp
sbb
dec
xor
or
clc
imull
cltd
push
mov
data16
mov
cmp
popf
jno
ret
push
xchg
xor
push
and
icebp
push
dec
pop
jae
ss
xor
sbb
fwait
lods
and
insl
and
push
mov
xlat
pusha
dec
or
dec
jb
test
out
inc
inc
pop
stos
arpl
mov
pop
jg
ret
jbe
imul
test
adc
mov
addr16
mov
shrl
cmc
es
stos
jge
cmp
rcr
inc
mov
sahf
sub
pop
inc
jg
popl
lock
das
cli
xor
in
insl
sbb
nop
jge
sub
cmp
xor
test
or
adc
pop
add
dec
jae
fdiv
add
push
movsb
pop
int
ret
or
pushf
das
loope
hlt
pop
pop
push
xor
shr
mov
push
aas
mov
sub
push
pop
push
arpl
xor
out
xchg
jb
test
out
mov
inc
or
stos
outsl
pop
lret
mov
mov
xor
in
outsl
pop
hlt
not
int3
leave
dec
xchg
aas
mov
int
xchg
and
push
jle
xchg
scas
nop
sarl
and
mov
iret
jg
jl
pop
das
push
and
jecxz
or
xchg
and
loopne
hlt
pusha
mov
insl
push
mov
loopne
and
testb
decl
mov
int
outsb
sub
div
jns
test
js
lret
jo
cli
mov
nop
jge
repz
repnz
lods
imul
pop
cmpsb
dec
mov
ss
sbb
mov
add
lods
leave
mov
test
mov
cld
movsb
inc
arpl
cmp
das
and
xchg
es
int3
loope
xor
aad
xchg
stc
lods
cmp
mov
pop
jmp
pushf
sarl
pusha
mov
pop
shrb
je
bsf
jle
pop
enter
cmp
adc
xor
lahf
mov
out
out
insl
push
lea
mov
lret
mov
filds
aam
sbbb
mov
xor
jle
ljmp
ret
add
insb
psubq
push
dec
ss
mov
push
xor
dec
subb
xchg
rcrb
push
imul
outsb
add
jbe
cmc
pop
jecxz
rolb
cmc
add
sub
add
push
aam
fadd
push
and
rcrl
fs
scas
push
adc
and
cmp
cwtl
out
shll
sub
jecxz
je
add
inc
or
test
scas
xor
repnz
push
push
push
lods
leave
xchg
in
inc
cmp
add
lahf
pop
fisttpll
cmp
jo
push
xchg
aaa
mov
test
mov
inc
cmp
mov
lea
rcrb
sub
roll
xorl
mov
push
mov
push
sub
divl
das
mov
hlt
mov
testb
mov
leave
es
or
test
popa
inc
shr
dec
adc
push
push
stos
push
sbb
adc
ds
cmpsl
and
rorl
aad
pop
insl
fimull
in
lcall
xchg
fdivs
cmp
test
cli
dec
add
jne
jmp
cmpl
daa
jecxz
xor
fists
andl
stc
mov
sti
inc
test
out
lds
xchg
call
xlat
dec
sbb
dec
or
mov
sub
ficompl
stc
mov
outsb
xor
add
lcall
popl
hlt
pop
xor
mov
loope
xchg
push
hlt
lahf
dec
and
pop
out
lods
push
jnp
pop
push
ret
lahf
mov
mov
adc
leave
cmp
dec
cmp
dec
jo
pop
mov
xchg
int
jg
insb
mov
xor
lds
sub
dec
aam
or
and
adc
outsl
fmuls
popf
ret
hlt
add
or
push
pop
callw
stos
mov
sub
cmp
and
mov
or
add
inc
ret
imul
add
sub
in
adc
out
xor
nop
frstor
shrb
dec
cmc
stc
movsb
and
adc
nop
mov
sti
jp
ja
out
cmpl
out
in
int
jns
jnp
mov
and
adc
test
aas
inc
pop
test
in
loope
pop
jnp
pop
cmp
dec
iret
inc
or
pop
movsl
dec
dec
out
inc
mov
fsubrs
mov
lcall
paddd
rorb
cltd
pusha
inc
sbbb
mov
dec
mov
mov
mov
mov
popa
inc
iret
mov
add
cli
sbb
xlat
gs
sbb
sbb
sbb
inc
dec
jl
fwait
pop
stos
mov
jp
or
and
push
daa
ss
push
mov
les
std
xchg
pop
in
mov
cltd
pop
xlat
icebp
imul
dec
cli
ss
fs
jle
jne
fbld
mov
popa
int
mov
push
cmp
out
fwait
mov
sub
int3
and
inc
icebp
rcll
xor
insl
mov
push
pop
or
adc
nop
cmp
pop
mov
aad
emms
fistpl
sbb
leave
pop
je
or
pop
add
xor
cmpl
mov
adc
mov
push
and
jp
inc
sbb
mov
mov
loop
adc
pop
loop
mov
outsb
or
push
das
std
icebp
cmpsl
cli
push
cltd
popf
ret
shrb
jbe
mov
jne
xor
mov
mov
leave
pop
test
cld
idivb
fisubrs
cmp
das
rcll
loop
lods
sub
fdivr
enter
les
outsb
xlat
fcomps
shlb
in
add
sahf
mov
ljmp
mov
imul
xor
cmc
mov
icebp
jns
cwtl
jmp
or
push
nop
aam
mov
sbb
insb
call
pop
daa
jge
in
out
outsl
movsb
lock
bound
pusha
jmp
or
imul
adc
pop
pop
out
fwait
xchg
test
xor
adc
sub
and
sbb
gs
mov
ds
jle
pop
sbb
insb
xchg
add
jmp
ljmp
into
push
shlb
dec
fidivrl
fnstenv
xchg
fistl
xchg
push
fs
addr16
jp
int
jmp
sti
jecxz
dec
sbb
int3
mov
cmpsl
mov
call
mov
xlat
je
jmp
imul
mov
push
fsub
push
sub
lds
jge
ljmp
or
cmc
pop
and
cmp
mov
ds
daa
xchg
aam
mov
xchg
dec
xor
int3
std
fadds
fxch
outsl
lahf
mov
or
in
jmp
xchg
test
sbb
push
push
jmp
dec
test
std
inc
rcrb
mov
sbb
or
ljmp
dec
cld
notl
sarl
mov
pop
clc
mov
sbb
mov
sbb
pop
mov
imul
aaa
ficompl
nop
jbe
and
inc
pop
inc
jbe
sahf
fdivp
fstps
outsb
pushf
adc
add
scas
test
cmpsl
es
cmp
mov
shl
cmpsb
mov
shrb
into
add
sub
pop
sbb
cwtl
imul
and
cmp
movb
in
imul
mov
dec
dec
xor
sbb
outsl
cmp
add
stos
iret
cltd
icebp
fsubl
mov
pusha
jns
sub
sub
pop
inc
and
jo
jne
pop
repz
xor
outsb
adc
mov
push
jnp
add
add
inc
in
push
adc
lds
stos
fwait
and
js
in
popa
and
add
add
cwtl
sub
xchg
js
movsl
xchg
mov
sbb
push
popf
or
cmpsl
pushf
inc
fmuls
test
sahf
push
pushl
repz
pushf
mov
pop
mov
andl
xor
popf
push
roll
mov
xlat
into
sub
ret
and
mov
das
cmpsb
imull
hlt
add
int3
pop
xor
push
movsl
imul
imul
adc
mov
pop
mov
pushf
repz
jge
repz
dec
pop
and
lret
or
xchg
decl
add
shrl
in
or
movsl
mov
lret
sub
cmp
xchg
mov
mov
add
push
adc
jg
bound
pop
xchg
sub
sti
dec
in
xchg
push
mov
cmp
popf
mul
push
mov
out
push
pop
loop
cmp
mov
test
test
dec
push
pop
cmp
std
push
xor
lahf
sub
je
xor
decb
push
sub
jns
jnp
and
ljmp
loopne
push
mov
sub
incb
sub
xor
cs
add
jno
mov
popf
pop
fs
pop
dec
scas
cmp
aaa
jne
mov
std
mov
inc
xor
ret
adc
dec
cs
roll
mov
cld
out
pop
ljmp
cmpl
jnp
xchg
push
loop
pop
pop
mov
cltd
pop
mov
mov
xchg
mov
cmp
mov
xchg
adc
fwait
mov
add
jle
movsl
outsb
enter
call
fisttpl
sbb
gs
addl
mov
inc
push
loop
ret
jne
lret
add
dec
pop
pop
cmpsl
mov
int
pop
push
lods
pop
roll
dec
daa
addr16
enter
cmpsb
cltd
scas
mov
pop
leave
gs
inc
popa
enter
mov
sub
push
sarb
sub
fucom
fsubrs
loope
mov
or
mov
aad
dec
or
xor
or
in
push
ss
xchg
xor
into
ret
mov
push
mov
hlt
dec
fsubrl
push
cmc
adc
bnd
mov
mov
in
icebp
iret
push
enter
mov
add
fs
and
pushf
cs
push
mov
xchg
inc
jmp
insl
jge
inc
mov
mov
push
rolb
sahf
jmp
pop
mov
push
imul
sbb
or
stc
or
cmp
sub
pop
mov
push
imul
sbb
or
stc
or
cmp
sub
pop
mov
push
imul
sub
cmp
push
fldcw
leave
pop
mov
call
ret
adc
ds
mov
pop
out
notb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
xor
adc
jl
addb
adc
jo
out
loope
icebp
inc
add
xor
popa
shlb
cmpl
add
add
push
icebp
inc
add
xor
popa
enter
xor
jne
aas
mov
das
jne
jo
and
pop
out
cmp
and
ljmp
dec
mov
or
out
sub
cltd
int3
rolb
push
adc
iret
sbb
pop
inc
dec
call
mov
jnp
dec
mov
or
jecxz
popf
aas
xor
rcl
fldenv
icebp
add
loop
shrl
lock
lock
fiadds
dec
lea
scas
jp
push
xor
int3
hlt
mov
fdivr
test
int3
cltd
fildll
cmp
push
add
lds
push
fiaddl
shll
pop
aam
push
out
and
push
repz
ret
mov
mov
addb
loopne
shlb
xorl
mov
shrl
loope
icebp
inc
fs
shlb
ja
and
orl
pop
hlt
and
adc
gs
adc
subl
jecxz
out
and
sbb
repz
testb
mov
add
data16
mov
add
push
loopne
shlb
xorl
mov
shll
loope
icebp
inc
add
xor
popa
shlb
xorl
mov
shll
loope
icebp
inc
add
dec
adcb
out
fbstp
test
fcoml
and
xlat
adc
out
push
lods
pop
mov
ds
add
adc
mov
pop
mov
test
scas
imul
dec
pop
or
adc
push
cmc
push
mov
shll
gs
jo
scas
xor
mov
or
xchg
jnp
fwait
xor
push
cmp
loopne
push
enter
lret
sub
pop
and
hlt
cmpsb
jbe
loop
xchg
ss
andl
xlat
sti
inc
push
cld
cmpsl
mov
cmp
and
enter
or
sub
ja
mov
pop
adc
stos
call
icebp
fadd
push
adc
in
mov
aad
xlat
sti
push
push
incb
pop
arpl
and
xchg
dec
not
lcall
outsl
mov
cld
mov
push
fdivrp
lcall
xlat
flds
and
push
xchg
inc
push
jmp
mov
daa
lret
cmp
movsb
fcomps
xchg
in
cmc
pop
out
xor
jmp
fdivrl
js
les
aad
ljmp
or
mov
aas
call
aaa
orb
out
into
repz
push
mov
fdivrs
daa
shrb
popf
fdivrl
outsb
faddl
jl
sub
push
pop
mov
scas
cmpsb
inc
repnz
xchg
inc
push
inc
xchg
pop
insl
fldt
mov
gs
xchg
stos
les
dec
ret
jle
clc
outsl
repnz
mov
test
and
inc
xchg
jbe
cmpsl
sub
or
or
shll
fbld
xchg
xchg
xor
jo
loope
jecxz
popa
pop
cli
add
dec
mov
das
pop
imulb
sbb
lds
pop
andl
push
fildll
pop
jg
mov
movsb
xor
mov
fmul
jns
xchg
inc
sarb
pop
push
mov
and
pop
add
fdivrs
add
push
loopne
cmp
test
mov
out
daa
mov
sarl
add
pop
mov
cmc
and
jp
icebp
push
imulb
stc
test
push
iret
adc
adc
cmp
adc
ret
sub
xchg
sar
test
mov
hlt
cmp
in
jno
jnp
ja
les
xchg
push
cmpsl
idivl
lods
out
repz
sbb
and
ss
push
cs
sti
hlt
xchg
jle
add
sarl
je
cmp
pop
mov
jecxz
in
out
inc
sti
mov
cmp
mov
add
or
jb
lret
mov
popf
push
dec
sbb
jmp
sahf
popl
xchg
imul
in
pop
xchg
mov
dec
daa
jecxz
nop
rcr
dec
std
jns
cmc
aam
test
shll
pop
out
shlb
pop
or
out
rolb
pop
mov
jnp
push
push
pop
push
inc
sub
mov
sub
test
lret
jp
rcll
insb
call
push
fdecstp
xchg
jmp
mov
xchg
rorb
add
movsl
mov
cmp
pop
mov
lds
mov
jl
jmp
pop
push
jmp
inc
nop
jnp
int
jmp
push
add
inc
scas
incb
and
push
or
shll
xchg
sbb
cmp
xlat
aam
mov
mov
daa
movsl
mov
push
push
dec
jne
lods
mov
call
push
mov
sbb
in
in
dec
dec
sub
mov
ret
lea
jle
xchg
fiadds
add
jno
xor
xor
xor
inc
sub
and
push
loopne
sub
push
jae
sbb
mov
mov
std
mov
xor
pop
test
mov
mov
pop
movsb
aas
inc
add
mov
xchg
mov
icebp
pop
insb
cmp
lea
xchg
lods
mov
stc
enter
adc
lret
dec
mov
mov
mov
fwait
xchg
pushf
lret
adc
aad
je
je
cmp
in
arpl
hlt
fistps
cmp
dec
xchg
sub
push
mov
cmp
push
fildl
inc
rcrb
add
push
lcall
sub
or
mov
xor
lea
sarl
cs
ljmp
sub
jns
push
dec
ss
cmp
pop
mov
popf
ficoml
mov
sbb
ficoml
fisubrs
lods
xor
fsubr
mov
jnp
repnz
xor
push
popf
not
mov
lea
jmp
cli
test
sbb
adc
bound
jle
icebp
shll
stos
enter
fwait
icebp
mov
jle
xor
rcr
dec
bound
inc
inc
cmp
mov
push
and
pusha
xchg
dec
push
lods
jno
mov
pusha
pop
jae
cmp
loop
popa
and
mov
scas
movsl
out
addr16
mov
mov
jb
imul
outsb
add
sbb
std
mov
xlat
jae
cmpsb
sbb
add
sbb
pushf
or
pushf
or
sub
jecxz
icebp
mov
lods
int
xchg
outsb
mov
mov
ja
scas
rolb
jns
adc
icebp
inc
lcall
faddp
mov
xor
popf
popa
es
in
mov
push
aam
sarl
stc
pop
mov
shrl
pop
xor
lea
sub
or
jp
inc
cld
arpl
scas
fs
adcb
cmp
insb
cmp
loope
mov
inc
cmp
xchg
mov
pavgb
lock
push
pop
mov
test
scas
jnp
or
xlat
mov
cmp
or
roll
or
fsubl
xbegin
shrl
cmp
ss
aaa
cmp
push
push
insl
mov
sub
mov
mov
sbb
fidivs
pop
dec
in
adc
stc
and
jp
inc
std
insl
or
adc
pusha
push
cmp
and
iret
loop
jg
mov
xchg
jbe
pop
and
inc
sarl
sbb
pop
insl
mov
or
xor
scas
push
insb
xchg
push
mov
push
mov
jne
adc
mov
mov
sti
lods
xor
pop
adc
mov
insl
jp
xlat
sbb
popa
xorb
cmc
roll
dec
dec
push
test
push
int
outsb
sub
inc
lock
mov
out
fsubl
mov
aad
decl
sbb
adc
adcb
aad
mov
mov
lret
popa
ljmp
pop
subl
fsubrs
int
xchg
push
dec
xor
cltd
jbe
in
and
adc
sbb
pushf
pushf
arpl
adc
push
inc
xchg
mov
add
mov
xor
jnp
sub
add
lahf
inc
sub
in
pop
aaa
aad
mov
push
cs
adc
jbe
mov
mov
pop
mov
clc
jle
clc
mov
mov
es
movsl
shlb
sbb
sbb
mov
jo
fs
arpl
aaa
and
and
nop
dec
imul
jl
cmp
push
pusha
test
inc
or
sti
push
aas
cmpsl
std
stos
addb
xchg
pushf
xchg
add
add
insb
dec
jge
popa
cmpsb
call
xchg
sbb
cmp
dec
mov
repnz
lods
pusha
mov
or
dec
or
sub
fstl
mov
scas
sbb
mov
iret
cld
sub
rcrl
and
mov
roll
test
push
in
lea
leave
popa
xor
jb
call
cli
inc
jne
xchg
push
ljmp
loope
movsl
ror
mov
and
scas
mov
fistpl
addr16
and
sub
push
pop
jae
ljmp
arpl
cmp
jmp
jle
xlat
or
push
cmpsb
iret
rcrl
out
or
mov
mov
xor
aad
sub
xor
scas
js
pusha
mov
pop
test
pop
xor
das
lahf
jne
sub
rcll
mov
jns
sbbb
outsl
lret
dec
jo
push
in
inc
mov
add
or
xchg
push
mov
jl
loopne
inc
xor
sbb
les
or
fidivs
rorl
lahf
dec
int
popf
int
sub
mov
clc
mov
cmp
cmpl
arpl
aas
cmp
xlat
xorb
ss
cld
imul
lea
mov
xor
cmp
stos
cmpsl
lret
sbb
sbb
rorb
xchg
sbb
jbe
test
xchg
mov
sub
inc
dec
or
loop
xor
aaa
jbe
dec
scas
aaa
dec
lods
mov
jae
in
dec
push
mov
int
mov
jo
loopne
jnp
fbstp
aaa
xchg
pop
push
cmp
jbe
andb
xor
pop
int3
out
repz
in
push
lods
leave
dec
shl
cmc
loop
loope
test
dec
inc
sub
and
inc
in
inc
lret
insb
stos
decl
pop
push
inc
insb
popa
ret
lods
jns
adcb
je
dec
shrb
inc
add
xor
arpl
xor
xlat
ljmp
pushf
and
je
popf
and
sbb
out
stc
jo
sbb
jmp
mov
addr16
sub
imul
sbb
fdivrs
test
mov
imul
pop
jae
dec
pusha
jp
jmp
dec
leave
dec
fldt
or
fimull
jg
stos
in
and
fs
sbb
or
cmp
testb
pop
xchg
outsb
pop
lods
or
sbb
sahf
lea
mov
dec
push
xor
push
push
repz
inc
aad
out
stos
rcrb
and
test
adc
into
xor
loopne
inc
lret
test
repz
int3
jge
pop
ficoms
aad
andl
or
pusha
mov
lcall
loope
dec
shlb
arpl
push
pushf
out
xchg
dec
and
pop
mov
cld
stos
out
sbb
dec
sbb
sti
pop
outsb
in
lcall
or
cmp
cmp
xor
add
jbe
sbb
inc
xchg
out
jg
lret
mov
xlat
adc
lcall
mov
ljmp
lcall
jo
mov
push
cmp
aad
lods
popl
adcl
icebp
sub
pop
and
push
and
xor
push
aam
dec
pop
mov
repz
fidivrl
add
and
cmp
cmpb
ror
orb
rcl
out
dec
xor
push
pop
inc
push
cwtl
lock
mov
adc
pop
mov
notl
es
popf
shlb
push
fisttps
mov
push
inc
test
xchg
aaa
repnz
icebp
pop
mov
push
fxch
aas
add
add
mov
int
out
pop
stos
stc
cwtl
gs
or
cmpsb
jecxz
mov
xchg
ljmp
jp
inc
rcrl
cmpsl
or
jo
add
sub
mov
stos
icebp
pop
cwtl
test
push
stc
pushf
cmp
or
push
lret
jmp
ret
cmpsl
jno
pop
cltd
mov
xchg
dec
sbb
shlb
mov
mov
xor
fisubs
mov
nop
shr
sti
mov
popf
clc
ret
arpl
jg
xchg
sbb
xchg
in
mov
jbe
test
js
push
push
cmp
sar
test
push
loopne
bound
cmp
xor
dec
mov
adc
fmuls
cltd
ret
jmp
imul
cmpsl
or
repnz
sub
mov
test
movsl
sahf
int
sbb
sub
jl
inc
or
lret
int
popf
cs
into
sbb
push
test
lods
adc
in
fnsave
mov
gs
push
adc
inc
pop
fs
xchg
push
jle
dec
pusha
mov
inc
sbb
test
lret
mov
andb
test
sahf
repz
sti
ds
rclb
ret
iret
cmp
dec
ret
mov
or
inc
insl
jae
inc
aaa
mov
daa
test
cli
jl
std
sbb
jecxz
dec
inc
xchg
mov
xor
jae
test
pushf
add
push
aam
sub
mov
cmp
pop
aaa
push
mov
jb
mov
xor
adc
sbb
arpl
out
adc
andb
xlat
lret
sarb
cmpsl
es
push
jge
dec
jl
pop
lea
cmpsl
or
jl
idivb
push
fmuls
fwait
or
int
push
pop
jb
std
pop
in
add
aad
adc
repnz
sbb
mov
adc
or
stos
add
shl
mov
std
in
push
enter
dec
aas
sbb
xchg
sbb
push
je
mov
dec
mov
inc
std
mov
push
ja
fld
shlb
popf
insb
ds
xchg
ret
in
add
popa
loop
enter
inc
and
in
mov
movsb
loope
jnp
shl
push
lods
mov
pushf
aas
or
jmp
std
pushf
repnz
mov
lahf
shrl
dec
mov
psubusw
jecxz
jecxz
outsb
mov
mov
fcoms
rclb
lods
push
mov
ret
jp
ljmp
rcrb
call
daa
xchg
add
sub
push
or
cmc
insb
sbb
sub
dec
in
xchg
lods
imul
inc
jmp
leave
adc
les
add
ss
mov
dec
loopne
adc
adc
jge
das
mov
mov
and
popl
hlt
ja
or
adc
out
ljmp
lret
ret
outsl
rolb
mov
addr16
sub
jb
cmp
pop
and
fwait
pop
pop
and
ret
fcoml
jnp
leave
rolb
popa
call
addr16
fwait
xchg
dec
mov
and
adc
mov
jl
dec
filds
inc
es
adc
ljmp
jp
mov
ja
jecxz
mov
sub
dec
pop
push
dec
jo
inc
ja
jg
test
dec
xlat
inc
lcall
clc
out
jno
xorb
jg
pop
rolb
mov
scas
adc
cmp
pusha
test
xchg
pop
jge
jmp
out
mov
pop
and
ds
jbe
les
inc
aas
mov
sbb
pop
pusha
cmpsb
xor
xor
mov
inc
inc
and
ja
inc
ss
pop
insl
mov
out
pop
add
arpl
lret
push
iret
and
movsb
popa
mov
or
xorb
not
aam
addr16
sbb
cld
dec
cmp
ds
movsb
mov
inc
cld
dec
popa
mov
sub
push
bswap
hlt
xchg
mov
pop
inc
inc
or
xor
repnz
xor
addr16
mov
push
enter
push
movswl
mov
or
out
outsl
mov
lret
lret
sbb
cld
dec
and
pop
push
and
aad
push
call
mov
popw
mov
dec
jl
or
gs
add
and
pop
out
orb
test
arpl
inc
cmc
sbb
sbb
mov
test
in
lods
imul
fsubp
mov
push
out
imul
sbb
daa
into
pop
in
sbb
pop
add
in
pop
out
pop
out
mov
gs
push
push
shr
int
scas
push
popf
es
sub
aas
add
cltd
xchg
call
sub
ret
sbb
mov
mov
out
fdivs
fcomps
mov
mov
shr
sbb
jecxz
std
pop
mov
mov
push
sti
ret
hlt
aam
mov
jns
jnp
int
jmp
in
insb
fwait
xor
jge
inc
mov
test
sbb
in
imul
mov
decb
fdivs
xchg
cmp
inc
stos
ret
out
adc
popa
push
notl
sahf
and
xchg
pop
pusha
adc
in
cltd
push
sbb
xchg
cmpsl
hlt
sbb
and
mov
hlt
or
push
subb
pop
cmpsb
outsl
ljmp
pop
cwtl
jmp
lret
out
mov
aam
push
in
mov
inc
loopne
sbbb
negb
adc
test
mov
in
mov
out
ds
inc
idiv
das
hlt
jb
insl
movsl
into
add
jle
adc
mov
test
push
sub
into
arpl
adc
sahf
pop
test
cmpl
lods
dec
pushf
mov
xchg
or
sub
nop
add
addr16
enter
jns
dec
sub
test
mov
xchg
mov
scas
cmp
dec
pushf
xlat
jmp
add
inc
out
cmp
fldt
xor
mov
cs
adc
mov
cmp
cmc
jl
fs
cmp
xchg
xchg
sbb
in
xchg
pop
and
jne
cwtl
or
and
popa
adc
adc
mov
leave
jle
mul
xchg
hlt
mov
mov
ret
into
mov
dec
sbbb
and
dec
mov
mov
arpl
xor
pop
add
out
inc
mov
sbb
xchg
pop
push
ficoml
popa
xor
add
movsl
push
in
insb
fcoml
loop
xor
push
rcr
jle
fwait
adc
mov
cmpsb
inc
lret
inc
mov
bound
addr16
sub
or
pusha
ret
cwtl
sbb
or
je
mov
adc
jbe
aaa
cltd
mov
sub
sub
int3
lahf
sub
aam
inc
lret
shll
add
fnstcw
xor
pop
mov
movsl
push
clc
inc
fbstp
gs
test
std
lods
in
mov
cld
test
lods
repnz
sub
ds
notl
aaa
pop
ret
push
lods
popf
icebp
sbb
and
jno
adc
cwtl
test
cmc
xor
add
sahf
movsl
fdivp
xchg
jno
outsl
adc
xchg
mov
inc
lds
jae
adc
ret
pop
stc
mov
es
iret
subl
xor
aas
lcall
imul
hlt
cltd
cwtl
mov
pop
push
call
cmp
cld
and
nop
std
ret
pop
xor
mov
or
mov
cltd
push
andb
scas
mov
add
clc
movsb
ss
sbb
mov
mov
sub
data16
leave
mov
mov
dec
add
add
subb
dec
popf
or
add
push
insb
dec
inc
fbstp
inc
mov
dec
push
pop
jmp
movsl
cmp
add
in
adc
pushf
jge
jns
cmp
inc
sti
jg
je
and
enter
sbb
loop
out
aas
ror
test
and
jb
jb
jo
mov
jbe
push
sar
orl
shrl
insb
xor
push
sub
ja
pop
inc
jmp
push
mov
cmp
stos
dec
xchg
clc
pop
xchg
popf
jle
xchg
pop
clc
cmp
cmp
nop
jnp
out
clc
pop
sub
add
pop
popf
cmp
jnp
jl
pop
andb
rcl
aas
lds
jmp
lock
sbb
test
fcoml
push
sub
js
lret
cmp
aaa
lret
aaa
repz
fnstsw
xor
pop
fwait
add
out
rclb
dec
nop
loope
aad
and
dec
dec
ljmp
cmpsb
pop
jecxz
push
adc
mov
push
sub
jl
repnz
inc
hlt
pop
pushf
xor
xlat
cld
sbb
arpl
and
sar
pop
out
subl
xchg
pop
ret
push
sub
out
jle
cli
push
sub
addb
dec
fcom
cmp
dec
mov
je
jmp
cs
nop
and
inc
xchg
clc
icebp
xor
ret
sahf
rclb
int
shrl
push
and
pop
insb
mov
mov
push
push
clc
or
cmp
xor
inc
cld
andl
pushf
mov
xor
lret
out
pop
inc
sub
repnz
pop
mov
pop
pop
adc
jo
and
dec
out
xchg
mov
mov
movsb
test
lret
lods
or
or
std
ficoml
sub
decl
popf
stos
loopne
cwtl
insl
dec
leave
movsl
adc
mov
push
sub
adc
and
les
or
out
and
lret
scas
or
inc
mov
push
test
dec
xor
mov
fcomip
or
icebp
xor
cmp
lcall
sbb
sarl
sbb
out
mov
cli
sbb
sahf
sbb
jb
xlat
pop
sbb
sbb
push
mov
inc
jl
mov
xchg
or
mov
imul
push
sbb
xorl
outsb
mov
adc
and
pop
xor
cwtl
push
push
xchg
inc
shll
lds
test
adc
stc
aam
push
movb
and
cmpsb
cmc
je
jge
sbb
jae
dec
aad
xor
gs
jecxz
mov
stos
js
push
jecxz
xor
js
inc
out
in
pop
jns
cltd
mov
or
xor
mov
inc
lock
loopne
shlb
xorl
mov
shll
loope
icebp
inc
add
xor
popa
shlb
xorl
mov
shll
loope
icebp
inc
add
xor
popa
shlb
xorb
and
jo
pusha
loopne
icebp
inc
add
addb
loopne
shl
add
outsb
mov
adc
pop
sbb
or
add
adc
in
jne
dec
jecxz
xchg
loope
mov
inc
add
and
add
arpl
mov
mov
sbb
movsl
jecxz
adc
jne
and
push
adc
xchg
push
adc
dec
mov
test
adc
inc
push
xor
jl
push
or
jecxz
cmpl
mov
push
or
add
cmp
jb
pop
stc
xlat
cwtl
and
call
mov
int3
imul
cld
add
scas
add
jnp
fwait
mov
mov
dec
lods
js
xchg
ds
push
shlb
fdivr
in
and
es
xchg
cmc
dec
dec
roll
jecxz
add
lret
mov
int
data16
sarb
mov
jo
mov
jecxz
jnp
jbe
arpl
sub
xor
lret
subl
es
xor
or
or
and
cmp
daa
add
ljmp
andl
test
xchg
repz
xor
xor
cmp
jae
arpl
xchg
aad
cmpsb
in
fistl
int3
xchg
jnp
mov
pop
adc
daa
push
popa
push
fs
push
int3
add
movl
flds
outsb
add
inc
adc
push
xor
inc
jl
in
lods
xchg
shlb
ret
xchg
rep
jecxz
adc
push
xor
jne
add
arpl
mov
mov
xchg
rep
jecxz
adc
push
xor
jne
add
arpl
ds
icebp
fldenv
sti
pop
incb
jle
push
addr16
insl
mov
sbb
push
dec
iret
sub
stos
xor
pop
fs
bound
and
cmp
js
push
filds
loopne
mov
mov
aas
out
push
arpl
cmp
cltd
and
add
je
add
push
aam
scas
jns
cmp
movsb
pop
cmp
rcll
lret
and
push
pop
dec
push
pop
xchg
pop
mov
dec
sub
mov
cli
dec
lret
fsts
shrl
xchg
loope
lock
in
dec
inc
lret
aaa
lret
mov
mov
xchg
jl
std
bound
clc
das
std
and
jno
cltd
mov
adc
iret
faddl
jne
sub
adc
xor
xor
push
out
ret
inc
adc
jle
jmp
loopne
fildl
push
adc
pushf
xor
jnp
jbe
mov
add
dec
jne
mov
inc
pop
fistpll
je
jp
test
push
xor
sub
addr16
xchg
cwtl
and
xor
or
jbe
jns
mov
insb
pop
jp
adc
fs
vrcpps
mov
push
cmp
into
ja
jae
inc
xor
dec
iret
inc
out
cmpsl
push
es
or
xchg
cld
sbb
or
or
loopne
sbb
fbld
nop
mov
jmp
lds
push
mov
aas
mov
push
jae
sbb
daa
sbb
jo
mov
popa
pusha
pop
cltd
inc
enter
cld
hlt
xchg
add
push
pop
cli
xchg
fldln2
scas
dec
mov
push
ret
invd
enter
sub
daa
insb
sbbl
pusha
or
and
fwait
aas
sti
out
cld
std
movsl
outsl
dec
leave
in
jle
push
sub
push
bound
sub
pop
out
adc
push
sbb
sbb
adc
loopne
ljmp
adc
out
mov
mov
xchg
bound
pop
outsb
cmp
mov
cmp
mov
lock
add
bound
lods
xor
pop
stos
jp
dec
mov
aam
testl
insl
icebp
or
sub
in
mov
lahf
insb
dec
leave
push
repz
stc
movl
dec
shlb
xor
fcomp
dec
jne
in
outsl
xor
rorb
in
and
fsubs
into
das
cmp
add
stos
fxch
nopl
cmp
dec
jbe
fiadds
dec
sti
mov
pop
lods
push
cmpsb
jecxz
mov
lea
pop
push
xor
push
cmp
and
jle
test
out
mov
je
jle
das
mov
pop
popa
lcall
xchg
stos
pop
pusha
sbb
jge
sbb
dec
push
das
test
test
push
jns
icebp
repnz
sub
mov
xchg
roll
sarl
fidivrs
call
loope
rcll
lea
imul
stos
ja
and
xchg
les
stos
mov
mov
jo
mov
or
mov
sbb
jg
je
xchg
sub
cmc
insb
dec
fcoml
mov
or
xchg
or
int3
mov
xchg
jae
cwtl
das
or
xor
push
mov
mov
cmc
pop
adc
xor
imul
shll
out
xor
call
mov
sub
adc
xchg
pop
scas
xor
fcompl
add
push
jp
mov
icebp
aad
imul
addr16
push
mov
jl
out
mov
pop
lods
dec
pusha
jmp
rcrl
cmp
xlat
out
fsubs
jb
push
loop
add
push
cmp
and
es
lahf
sub
mov
notb
xchg
lahf
rclb
sbb
push
fistl
or
int
fsubl
out
lods
and
cmpsb
ja
mov
stc
enter
ret
lods
cmp
mov
xor
mov
frstor
xor
ljmp
lahf
dec
fistl
inc
jl
push
out
xlat
mov
or
out
std
pop
stos
fistpll
jo
fsubl
dec
out
fistpll
adc
lea
sbbb
inc
ret
popf
into
jge
pop
fimuls
rclb
push
stos
jmp
jp
add
vorpd
sbb
cmc
or
mov
jl
mov
and
inc
dec
jmp
pop
fwait
mov
cs
in
adc
pop
cmp
orb
scas
sbbb
xchg
insb
dec
fisttpll
jle
bound
sbb
cmp
sub
and
jno
and
outsb
fs
jle
outsb
ds
sub
sbb
and
add
frstor
xchg
xchg
cld
add
out
popa
inc
jne
add
cmpsb
inc
mov
sbb
lock
xchg
mov
test
adcb
test
push
jae
push
dec
adc
jo
insb
cmp
sbb
inc
lret
negl
leave
cmp
addl
jb
jl
lds
dec
repz
inc
stos
inc
jge
dec
jne
scas
insl
shlb
fsubs
and
mov
inc
testb
mov
iret
pop
sahf
mov
dec
cld
inc
jle
fimuls
ret
add
das
sbb
or
bt
dec
jge
mov
adc
das
sbb
mov
lret
sbb
mov
pop
sbb
lahf
push
mov
adc
insb
push
fs
sbb
sbb
mov
inc
push
mov
cld
push
dec
inc
add
push
shll
test
push
sub
push
xor
aaa
aaa
shrb
fbstp
mov
ret
into
jnp
push
sti
je
push
test
and
pop
mov
repz
lahf
push
xor
mov
mov
push
adc
push
mov
out
jno
pushf
dec
test
cmp
loop
adc
inc
repnz
out
ljmp
into
or
loope
lds
scas
and
pusha
cmp
pop
rclb
mov
fiaddl
sbbl
xor
push
fcoml
cwtl
std
mov
add
aad
rcr
les
in
inc
inc
mov
jl
rcrl
repz
cmp
stos
pushf
or
add
lea
mov
sub
dec
leave
imul
test
sbb
repnz
mov
out
mov
mov
gs
mov
repnz
rclb
scas
hlt
push
xlat
inc
outsb
icebp
pop
and
push
inc
mov
sub
xor
imul
daa
cmp
lds
ljmp
xor
das
movsb
xchg
cmp
mov
xchg
dec
imul
scas
mov
xor
mov
popa
daa
mov
push
inc
jp
push
xor
loopne
lret
cmc
xchg
jno
test
lds
pop
aas
xor
mov
pop
pushf
mov
aaa
mov
es
sbb
or
sbb
jbe
mov
loope
mov
pop
out
shlb
cmpsb
sbb
insb
popa
adc
xchg
negb
sbb
scas
stos
insl
mov
in
lods
repnz
repnz
cmovnp
inc
frstor
orb
out
test
xchg
aaa
dec
push
nop
andl
call
fsubrl
sti
jnp
fs
push
pop
jne
jnp
mov
in
ret
loop
ljmp
int3
lock
fmuls
xchg
ds
sub
neg
adc
xor
addr16
and
mov
mov
mov
enter
sbb
sti
jbe
insb
imul
ret
loopne
enter
mov
dec
sub
add
nop
js
out
dec
jle
aad
mov
push
adc
js
push
push
fnstcw
cmpl
popf
pop
dec
out
rclb
adc
xor
rorl
dec
xor
mov
ja
dec
push
int3
shr
mov
btr
into
xchg
test
jne
jmp
outsb
mov
gs
in
test
adc
push
mov
mov
lret
add
adc
sbb
sbb
dec
out
jno
test
jbe
jg
adc
in
addb
mov
xor
jns
aad
push
or
pusha
lock
enter
int
and
sahf
jne
fistpl
mov
adc
adc
push
or
lock
add
test
mov
aam
and
mov
ss
and
xor
add
jecxz
sub
mov
inc
dec
outsl
xchg
cltd
xchg
mov
mov
mov
loopne
inc
add
mov
pushf
lea
das
test
movb
xchg
std
mov
dec
adc
sti
add
pop
xor
cmp
imul
xor
and
mov
repz
test
cmp
repz
stos
or
jmp
fs
inc
sbb
push
pushf
stc
push
or
out
subb
xlat
inc
popa
sbb
fstpt
test
adc
fadds
out
imul
ficompl
das
xor
idivl
loopne
dec
xchg
xchg
pusha
scas
jae
lcall
pop
shll
incl
mov
lock
mov
sbb
adcl
nop
fprem
mov
cli
sbb
sahf
ljmp
jns
inc
std
cmp
std
xchg
cmpsl
std
je
sub
fildll
xlat
sahf
stc
pop
jo
jg
in
jg
pop
int3
nop
push
aad
ret
cltd
push
xlat
mov
out
xor
xchg
push
jle
mov
pop
xor
mov
mov
test
and
es
leave
cld
test
mov
and
mov
push
stos
sub
xchg
ljmp
and
mov
mov
in
cmp
inc
lcall
out
in
cld
mov
dec
pop
lret
lea
jmp
fwait
xlat
dec
mov
inc
test
fidivs
jns
ret
punpckhwd
add
fdivs
stc
cs
mov
inc
test
shlb
or
or
adc
dec
mov
out
sti
aas
push
push
loopne
xchg
mov
mov
xchg
outsb
adc
xchg
and
cmpsb
repz
xchg
push
cli
std
push
jg
ja
mov
loop
adc
stos
imul
ret
sub
std
std
jae
xchg
sbb
cmpl
dec
imul
pop
xrelease
mov
fcmovnbe
push
call
pop
je
sbb
sbb
js
out
xchg
jne
mov
mov
rorl
jmp
xchg
outsb
xorl
sub
adc
les
xchg
dec
ljmp
push
xor
dec
cmp
push
add
mov
xor
popf
fdivs
pop
js
loop
in
mov
sarb
mov
dec
inc
or
and
fisttpl
cmp
dec
jmp
mov
orb
ds
mov
ja
dec
aaa
ss
std
or
mov
or
in
push
and
pop
les
movsb
dec
ret
and
pop
jmp
ja
and
int3
pop
clc
rorb
mov
js
push
adcl
or
add
jp
pop
jmp
fs
and
fistl
push
mov
push
fsubrs
repnz
or
fidivs
icebp
and
and
mov
adc
push
aaa
pusha
sarb
ret
test
pop
pop
outsb
push
dec
push
mov
mov
jge
push
inc
in
and
addr16
in
cs
add
scas
or
addl
cmc
xchg
mov
cltd
mov
or
enter
cmp
dec
sub
sub
push
sahf
or
pop
mov
inc
jbe
dec
outsb
push
lea
mov
lock
dec
mov
sti
mov
jns
adc
insl
scas
xorb
loop
dec
cli
into
stc
lcall
sahf
add
sub
out
push
in
sar
pop
mov
sbb
in
in
mov
roll
ss
jle
ret
nop
sub
in
repnz
or
push
or
mov
sbb
dec
test
or
mov
xor
pop
loopne
push
xor
frstor
push
inc
loope
mov
shlb
jne
add
mov
mov
cmp
jmp
dec
pop
sub
add
dec
xchg
stc
repnz
push
cmpsb
sub
dec
aam
xor
mov
jo
into
inc
hlt
mov
or
xchg
scas
jmp
in
out
xchg
xor
in
aam
jbe
mov
xchg
cmpsb
adc
cmp
outsl
addr16
adc
adc
xchg
and
je
stos
aaa
fidivl
test
dec
jne
push
rorl
cmp
out
outsl
pop
adc
inc
mov
aam
fisubl
movsl
dec
scas
xchg
and
imul
add
daa
in
adc
sbb
dec
lret
pop
gs
or
cmpsl
sti
jecxz
imul
shr
cwtl
dec
rol
mov
sahf
dec
push
out
jno
xor
scas
pushf
loope
mov
loope
pop
mov
fcmove
lods
xchg
sti
lret
mov
outsl
imull
loopne
push
rorl
cwtl
das
mov
aas
push
mov
hlt
push
lock
jecxz
out
mov
mov
mov
add
pop
pushf
ljmp
dec
sub
inc
push
or
xchg
js
jg
and
int3
jecxz
jl
lea
outsb
rcll
xor
mov
outsb
mov
std
lahf
and
test
in
xor
cmpsb
movsb
pushf
push
mov
push
xchg
inc
adc
cmp
add
ret
pop
gs
dec
dec
in
les
aaa
jl
fs
mov
jno
sbb
push
push
and
or
fcomip
sub
adc
mov
out
out
aas
fprem1
test
pop
roll
into
ret
orl
xor
sub
inc
xlat
loop,pn
mov
mov
add
sbb
dec
sbb
mov
movsl
xor
adc
xchg
arpl
pop
dec
pushf
bound
sub
mov
loope
insb
test
repz
enter
mov
stos
cmovno
adc
dec
jb
popf
insl
pop
sbb
dec
xor
sti
fstpl
add
adc
inc
and
fadds
pop
into
lea
pop
sub
sub
sub
bound
sub
cmp
insl
aad
daa
js
jecxz
cmpsb
mov
mov
and
in
add
xchg
arpl
loopne
mov
leave
into
stos
scas
mov
and
das
ja
repnz
jp
inc
jno
ret
in
aas
mov
push
mov
pop
sub
and
add
sub
jne
adc
jb
xchg
mov
jmp
pop
fdivs
aad
dec
push
lcall
dec
fucom
loop
arpl
pop
and
dec
xchg
fldl2e
test
mov
sub
cmp
inc
cltd
sahf
sub
dec
pop
pop
cmc
pop
pop
xchg
arpl
or
sub
pop
shll
cld
cmp
ret
mov
scas
push
pop
pop
fmul
out
pushf
scas
xor
loop
xor
outsb
or
xor
cmpsl
dec
mov
cmp
xchg
scas
xor
sub
filds
loopne
int3
xchg
mov
enter
sub
push
sbb
shlb
outsl
xchg
jl
or
inc
aad
es
xchg
xor
test
into
decb
in
in
inc
and
subb
test
stc
icebp
int3
xor
push
je
and
mov
pop
xchg
ss
imul
xchg
sbb
jo
pop
in
xchg
push
adc
mov
out
outsb
jbe
dec
push
rclb
jle
out
ret
movsb
dec
mov
ja
icebp
cmp
jmp
lret
sub
adc
mov
jle
inc
icebp
sarl
jne
push
mov
sub
or
cld
fmul
repnz
jbe
jne
test
popl
push
stos
int
int
fisttps
lret
fucomi
out
dec
jg
ret
out
xorl
iret
mov
cmp
fucomp
fs
arpl
ljmp
fsts
cmpsb
fstpt
inc
sti
rolb
repnz
or
insb
cld
ficoms
mov
jae
mov
hlt
je
addr16
mov
popf
sahf
mov
or
arpl
add
cmpsl
leave
rclb
dec
xchg
sbb
mov
nop
in
daa
jbe
scas
cmp
xor
stos
std
jne
fwait
mov
or
int3
push
addr16
lods
cld
sbb
xchg
and
cmp
jns
sbb
imull
add
jge
jae
and
fidivs
jne
fidivs
xchg
out
lret
push
or
addr16
es
divb
mov
xorb
jl
mov
repz
jne
bound
mov
inc
mov
sti
jle
jge
sub
sbb
imul
dec
add
mov
adc
scas
cs
test
jne
cmp
ficoms
add
xor
jmp
or
ffree
hlt
push
sub
jle
ds
jbe
outsb
daa
loope
out
mov
adc
lea
xor
andl
jo
fdivrl
jle
movsb
xor
jp
cwtl
int3
cmc
cmp
add
in
push
fwait
repnz
push
pop
movsl
sti
arpl
ss
push
add
or
fimuls
cli
clc
push
adc
clc
sbb
cwtl
ljmp
movsb
lret
aaa
bound
push
push
add
hlt
sbb
arpl
outsl
lahf
inc
bound
loopne
xchg
into
in
and
mov
repz
movsb
jno
pushf
add
jae
lahf
sub
clc
imul
subb
xlat
insb
stos
imul
dec
in
mov
dec
call
stos
add
test
ror
std
dec
dec
fnsave
imul
jl
cmc
sbb
mov
filds
in
adc
fcmove
fcmovne
in
mov
sbb
lret
lahf
aaa
in
dec
aam
inc
dec
mov
shl
sbb
lds
push
cli
cmp
or
lea
sub
hlt
ja
cli
andl
arpl
fstpt
stos
mov
daa
insl
scas
mov
dec
pop
sbbl
out
test
loope
fdivrp
bound
pop
ficoml
pop
rclb
cmp
or
mov
jbe
out
icebp
xor
jo
sub
cmp
or
repnz
fdivs
jne
and
cmc
outsl
fdivs
insl
xchg
or
aaa
mov
out
lds
imul
sahf
pop
dec
dec
mov
dec
mov
mov
cmpsl
dec
mov
sbb
push
push
jne
inc
dec
xlat
adc
jge
push
inc
mov
pop
loope
icebp
or
lods
jb
xor
sbb
adc
sarb
add
jp
out
add
aas
cwtl
test
ret
push
lds
cmp
cmc
push
out
adc
pop
sbb
les
rcrb
aam
ret
divb
gs
cs
push
push
add
leave
gs
fnstenv
mov
push
jge
mov
inc
cmp
dec
loope
mov
jecxz
xchg
jno
cmp
inc
sbb
ret
movb
fidivrs
stos
xor
jecxz
mov
add
loopne
popf
add
aad
ljmp
imul
mov
loope
jmp
out
or
mov
test
push
fstp
pop
popf
jmp
icebp
shlb
push
loopne
ret
aaa
adc
or
mov
sbbb
pop
mov
fs
add
mov
cmc
imul
movl
cmp
mov
pop
rcr
movsb
adc
adc
xchg
mov
ficoms
push
fnstcw
test
xchg
xor
popa
or
xlat
daa
pop
lods
adc
outsl
call
test
cmp
or
clc
pop
lds
or
sbb
inc
sbb
sbb
bound
fcoms
xor
xchg
gs
adc
pop
lods
cwtl
xchg
loope
xor
testb
shlb
pushf
icebp
mov
xorl
push
xor
fiaddl
sarl
nop
out
jmp
add
jecxz
pusha
mov
cltd
rorl
ret
pop
mov
loopne
and
push
insb
lcall
out
shrl
xor
adc
jmp
add
or
stos
divl
push
mov
mov
and
ljmp
mov
dec
xchg
dec
push
iret
mov
push
jo
inc
daa
popf
out
sub
mov
dec
xchg
int3
stc
lods
mov
fwait
sarl
mov
xchg
rep
jecxz
adc
push
xor
jne
add
arpl
mov
mov
xchg
rep
jecxz
adc
push
xor
jne
add
arpl
mov
mov
cmp
adc
and
add
bound
mov
mov
xchg
repz
add
cltd
and
and
lret
ljmp
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
in
sbb
xchg
mov
jmp
or
add
add
or
aas
add
add
add
add
add
add
add
faddl
dec
add
jns
or
jg
sub
inc
add
add
lock
add
add
add
add
or
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
dec
add
adc
arpl
push
add
add
add
add
add
add
sti
add
sbb
add
or
push
add
add
in
test
and
and
mov
add
xor
faddl
popa
add
add
jbe
or
and
cmp
add
add
pop
add
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
inc
add
add
sub
sbb
and
sub
add
add
inc
add
add
add
ss
add
lods
add
and
imul
add
jns
cld
add
add
add
je
xchg
add
scas
add
add
add
inc
add
add
add
cld
add
add
add
add
stos
add
add
pop
add
iret
add
inc
add
add
add
add
adc
and
sbb
add
add
add
fldl
push
add
add
add
add
add
mov
loop
cmp
add
add
add
cmp
stos
add
mov
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
mov
cwtl
add
add
add
add
test
jbe
dec
add
add
sub
jne
push
add
add
add
add
push
add
add
xor
adc
push
add
add
jns
sbb
add
adc
and
out
add
add
add
adc
out
add
data16
add
add
add
add
add
add
add
add
add
add
add
mov
out
add
arpl
pop
add
add
add
add
add
test
leave
add
add
add
add
add
adc
or
outsb
add
add
filds
data16
add
add
add
bound
cmp
add
outsl
add
loop
adc
push
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
cmp
mov
xchg
jb
cltd
mov
in
pop
cmp
je
and
es
stc
addb
xor
fcmovne
arpl
xor
cs
es
sbb
fnstsw
hlt
xchg
and
into
je
pop
dec
push
inc
cmpsl
add
ret
test
jp
scas
dec
shrl
mov
mov
add
push
sbb
jge
add
mov
mov
addb
out
insb
mov
xchg
jno
popf
shlb
inc
hlt
adc
nop
dec
and
movsb
cmp
and
xchg
inc
push
insl
adc
mov
mov
xor
cmc
lods
cmp
jns
fnstenv
fsubrs
mov
jb
pop
rolb
jmp
sbb
adc
jmp
mov
pop
dec
pop
call
stos
negb
dec
out
inc
xor
fwait
push
sarl
add
jae
push
scas
lods
xor
add
fimull
xor
movsl
imul
cmp
mov
push
nop
test
inc
insl
mov
rorb
in
dec
lds
out
or
leave
pop
lods
pop
pop
and
sub
push
xchg
roll
dec
xchg
adc
dec
add
pop
lods
cmc
and
jne
xor
inc
les
inc
orl
sub
jns
fcmovbe
adc
xchg
rcrb
cmp
and
imul
jo
cmp
test
sbb
adc
int
cld
xchg
xor
or
inc
mov
mov
adc
push
jnp
adc
inc
sbb
and
aas
mov
cmp
xor
iret
jmp
shlb
testb
sub
mov
cltd
cmp
xor
add
pusha
push
sub
jnp
jbe
aad
das
push
push
jmp
cmp
adcl
repnz
sbb
nop
test
rorl
iret
inc
and
fidivrl
mov
adc
add
add
push
or
lret
xor
sub
pushf
outsb
add
test
in
cltd
inc
mov
out
andl
fucomip
pop
stc
xchg
loopne
jecxz
stos
enter
or
jno
lods
mov
cmp
ss
add
out
jge
pop
jge
xchg
inc
mov
cmp
push
push
cld
mov
das
jge
mov
lret
std
mov
pop
test
or
sahf
decb
xchg
rorb
jb
cmp
jnp
and
sub
pop
add
mov
mov
push
sub
dec
jno
dec
fnstcw
add
adc
aas
jbe
cmp
outsl
lea
lods
mov
adc
push
or
call
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
