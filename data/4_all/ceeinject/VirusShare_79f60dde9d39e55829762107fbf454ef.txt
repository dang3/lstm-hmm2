call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
std
gs
fldl
into
dec
lods
jl
add
dec
sarl
mov
sub
jne
gs
push
fldl
xor
popf
jno
stc
jge
sub
lahf
lds
xchg
sbb
jl
dec
lds
sub
cmp
insl
cmc
jbe
and
sarl
je
popf
cmp
adc
movsl
std
inc
in
mulb
das
test
pop
dec
shrl
push
cld
in
jne
out
int
int
push
inc
jge
push
cli
movsb
or
cmp
gs
jge
jmp
pop
sbb
mov
test
cmc
and
mov
js
cmpsl
xchg
fcmovb
cmp
stos
push
push
mov
popf
sbbb
sbb
add
mov
dec
push
xchg
or
stos
test
push
popf
sbb
sbbb
sub
cmp
add
add
lods
push
iret
adc
mov
xchg
popf
orb
popf
sub
subl
lret
xor
test
cmc
gs
push
int3
inc
fdivl
popl
sahf
jne
pop
test
mov
inc
jns
pusha
sbb
xor
push
sbb
or
fildll
fnstenv
fdivs
outsl
cmpl
dec
lds
jge
sbb
gs
fldl
aad
mov
add
dec
aad
lds
xchg
sbb
gs
fldl
xor
popf
add
dec
aad
lds
xchg
sbb
jbe
shlb
mov
inc
insb
push
sbb
inc
lea
fdivs
stc
dec
inc
jo
mov
imulb
mov
subl
lods
lods
int
adc
or
jg
xlat
ss
loopne
lock
push
pop
sub
sub
into
or
mov
xchg
fisubrl
push
ficoml
xor
inc
daa
pop
add
cmp
imul
std
and
dec
xchg
fucompp
into
mov
jb
mov
push
test
rolb
or
push
test
mov
add
sub
pushf
cmp
psraw
adc
ret
mov
push
xchg
push
or
icebp
fldl2t
in
add
dec
cmp
jle
imul
fimull
lods
or
jmp
out
repnz
push
cld
cs
lods
int
ret
mov
imul
in
out
inc
aad
pop
sbb
mov
push
roll
sbb
mov
int3
hlt
test
andl
jns
dec
bound
mov
into
enter
mov
dec
cmpsl
in
lret
mov
sbb
test
dec
push
inc
loopne
orl
test
fdivrs
rol
xchg
popf
dec
mov
mov
push
rcrb
ds
aam
test
dec
or
xor
fisubrs
add
pop
mov
xor
fdivp
jo
push
outsb
mov
or
mov
xchg
out
sti
outsb
jle
sub
add
push
movsl
and
jge
add
ja
lds
aas
loop
inc
cmpsl
add
inc
jo
or
stos
hlt
cmp
push
bound
jp
xchg
jecxz
and
mov
mov
jge
mov
in
dec
repnz
jno
icebp
orb
jmp
and
lret
gs
add
xchg
loop
dec
iret
xor
clc
nop
int
mov
and
sub
adc
sbb
sarl
cmp
adc
add
or
scas
xchg
and
mov
addb
inc
inc
in
in
push
add
push
pop
stos
cmp
test
shlb
mov
dec
add
hlt
rcll
out
inc
add
and
add
mov
and
xchg
and
adc
dec
shl
push
cld
cmp
lret
xchg
cmp
xchg
test
adc
and
cmc
das
pop
pop
shll
outsl
insb
add
xor
js
nop
ret
jecxz
pushf
xchg
cs
xchg
xor
inc
arpl
pop
in
mov
movsb
in
sahf
fsubrl
xchg
sbb
mov
or
xchg
insl
cmp
push
adc
in
lods
repnz
testb
cmc
sbb
inc
jo
lcall
dec
icebp
je
adc
push
cmpl
add
cmp
es
out
xchg
jb
stos
push
repnz
popf
mov
sub
shll
cmp
sub
pop
icebp
sub
mov
pop
xlat
push
mov
out
loopne
fistps
dec
movl
push
stc
inc
jns
or
js
sub
sets
sub
or
lahf
and
enter
dec
mov
out
out
ret
repz
pop
mov
pushf
dec
mov
int3
shlb
pop
jb
inc
stc
jle
or
lret
jno
aaa
pop
imul
mov
lods
sbb
pop
repz
stos
daa
inc
ljmp
xchg
cltd
add
fsubrp
shlb
in
xor
or
scas
outsl
push
adc
jl
jae
pop
hlt
cmpsl
xor
sub
sbb
sbb
mov
sbb
int3
idiv
out
adc
adc
mov
xchg
clc
pop
nop
repz
je
or
ret
jmp
outsl
popf
adc
fwait
insl
test
les
xchg
loop
pop
push
inc
mov
stc
mov
outsb
add
jg
idivb
mov
aas
mov
mov
jb
rclb
pop
mov
cmp
pop
shlb
imul
insb
into
outsl
pusha
movl
lret
mov
dec
sbbl
shl
dec
incb
lds
sbb
pop
cmp
inc
lock
stos
mov
push
dec
mov
das
pop
pop
cwtl
sub
cmp
push
inc
in
popf
popf
icebp
out
popa
mov
cmp
shr
or
out
lret
sub
roll
insb
jp
das
add
xchg
cmp
cvtdq2ps
in
in
jmp
add
push
out
jnp
test
call
xor
xchg
das
push
mov
jl
aam
push
test
mov
das
test
popf
pop
mov
mov
fistl
push
ds
adc
adcl
aas
add
cwtl
and
andl
or
lret
jo
ret
jne
inc
clc
pop
xor
cld
ret
adc
jne
dec
ret
in
sub
push
aas
pop
jnp
jnp
jns
add
ljmp
imul
lret
je
push
or
inc
pop
test
pop
push
mov
inc
dec
lret
push
adc
xchg
push
sbb
jecxz
inc
or
and
lahf
stos
cmp
xchg
xlat
out
jecxz
ret
pop
pop
pop
and
sbb
xor
jne
dec
inc
test
pop
into
inc
jl
dec
adc
pop
push
mov
mov
sbb
movsb
sarb
xor
push
inc
fldcw
push
ret
jb
jae
xchg
cmp
decb
bswap
dec
push
cltd
xchg
adc
js
jecxz
sbb
negl
push
push
jg
sahf
xchg
sub
xchg
or
xchg
popf
fcmovnu
call
jl
scas
and
adc
and
add
add
dec
push
mov
fistpll
mov
in
lock
mov
jmp
je
adc
mov
mov
jg
out
ljmp
and
loopne
cmc
push
pop
jne
leave
addr16
fwait
cmp
add
adc
loop
cmpb
push
cmp
outsl
jo
xor
sub
aas
out
sbbb
mov
jp
jmp
xor
push
aas
mov
in
lcall
inc
pop
and
sahf
pop
cmpsl
add
fadds
push
jo
or
mov
mov
xchg
jecxz
push
pop
das
add
push
mov
dec
lret
mov
inc
or
push
mov
sbb
jae
add
movsb
jg
xchg
xlat
shrb
popf
xor
push
xor
repnz
dec
push
jne
jbe
and
xchg
cmp
and
lds
fmuls
cmp
mov
pcmpgtb
sub
aaa
roll
bound
vpmultishiftqb
fisttpll
add
nop
inc
filds
lahf
lea
sbb
jg
jnp
lds
shll
sub
aaa
mov
dec
lahf
add
mov
inc
xor
fwait
mov
sub
js
xor
adc
sbbb
fiadds
int3
aam
mov
sbb
xchg
ret
clc
or
sbb
dec
and
add
push
ss
xor
or
outsb
adc
jno
subl
clc
cli
add
adc
out
fisttpll
mov
imul
push
aad
mov
cltd
gs
rcrb
jmp
sub
adcl
jbe
adc
cmp
pop
cmp
filds
fadds
ja
push
mov
sbb
pop
hlt
jecxz
and
idivl
mov
insl
movsl
and
roll
arpl
mov
jmp
cmp
or
in
fsubr
cld
jb
or
dec
add
lods
mov
movsl
xchg
inc
mov
rcrl
jb
gs
popf
xchg
jge
xor
mov
xchg
jg
cs
mov
or
jecxz
mov
and
sbb
xor
dec
and
mov
inc
insb
mov
mov
pinsrw
cmp
mov
movsl
mov
push
xor
addr16
movsb
mov
mov
int3
out
mov
shrb
dec
add
popf
mov
push
insb
pop
sbb
adc
mov
xor
xchg
mov
ss
jg
cmp
and
pop
mov
test
ret
loope
pop
test
loop
xchg
mov
jmp
enter
inc
cmp
into
mov
sbb
data16
adc
or
clc
repnz
es
jbe
add
sub
mov
aam
cmpsb
sub
pop
xor
ret
ret
xchg
add
xchg
mov
sti
addr16
inc
dec
xchg
out
mov
mov
das
loop
dec
pop
add
jae
repnz
xlat
cmp
cmpsb
aad
mov
or
xchg
xor
xlat
outsl
or
adc
or
xor
les
adc
ror
jb
push
popa
ret
std
xor
int3
cmp
pop
inc
cmpsl
mov
sub
mov
inc
push
sahf
fstl
inc
xor
stos
stos
test
jecxz
xchg
dec
cld
or
push
adc
mov
rolb
push
xchg
stos
scas
mov
fs
pushf
xchg
dec
fiadds
fwait
data16
jb
or
jg
sbb
outsl
je
scas
adc
adc
mov
cwtl
loop
xor
pop
fwait
inc
xchg
inc
clc
and
cmc
cmp
xchg
mov
and
insb
call
daa
jne
icebp
sbb
test
xchg
xchg
and
fisttps
fnstenv
sbb
les
jne
es
mov
cmp
iret
sub
in
or
jmp
mov
out
notl
mov
data16
xchg
xchg
sbb
rcrb
xorb
cmpsl
or
push
and
cltd
pop
jb
ljmp
cwtl
xchg
test
mov
push
mov
xchg
cmp
cmp
jbe
inc
jg
popa
mov
and
orb
jmp
add
and
inc
stos
and
mov
aaa
fiadds
fwait
lea
dec
or
rclb
inc
cmpsl
test
clc
sub
sahf
pop
fstps
jnp
jmp
jmp
int3
jecxz
in
int
loope
pushf
cmp
mov
ds
fcom
fmull
scas
sub
push
stos
and
jmp
aaa
sbbl
rcrl
sbb
mov
adc
mov
std
inc
mov
and
and
or
aaa
stos
mov
sub
popa
jae
lods
pusha
xlat
add
pop
xchg
fidivrl
scas
mov
jne
sbb
popa
dec
mov
mov
adc
shll
stos
push
jns
dec
in
lea
imul
add
loopne
daa
mov
push
sbb
lea
mov
mov
in
test
gs
dec
popf
std
sti
sub
fsub
stos
mov
add
sbb
movsl
inc
and
loopne
dec
bound
hlt
pop
out
jo
call
pop
or
sub
lods
rcrl
xor
lcall
cld
out
mov
mov
dec
mov
mov
push
imul
add
in
hlt
cmp
pop
and
sub
sarb
fldz
add
adc
data16
fcmovnu
das
xchg
mov
push
aas
cmp
call
mov
out
punpcklwd
adc
hlt
ret
mov
adc
notl
je
jge
out
or
mov
and
repz
movsb
xchg
jl
hlt
inc
movsb
adc
cmp
jg
adc
cwtl
dec
add
cmp
lret
pop
and
fiaddl
pop
ret
mov
adc
fimull
outsb
push
cmpsl
cmp
xor
fsubrl
dec
movsl
sbb
movsb
cmpsl
fbstp
mov
testb
or
sbb
mov
jne
orb
adc
pop
pminub
ret
jp
push
jbe
scas
loopne
pop
lods
stos
adc
cmpsb
dec
push
mov
movsb
fmull
imul
and
iret
imul
cmpb
pop
push
lock
push
insl
popf
cmp
add
adc
dec
insl
add
and
fdivrl
xchg
ja
cmp
add
jns
int
roll
xchg
sbb
movl
push
scas
sub
mov
xchg
adc
repz
clc
insl
leave
mov
cmp
or
je
adcb
ja
sbb
ret
and
jae
pop
push
add
popf
popf
aam
jnp
push
dec
add
movsl
cmpsb
ret
notl
sub
adc
es
inc
pusha
ljmp
and
sbb
imul
jns
icebp
push
fdivrs
xchg
icebp
xchg
xlat
jge
imul
nop
nop
pop
fisubl
jns
mov
ja
xor
addb
out
inc
lods
xorl
mov
lcall
cmc
mov
pushf
ljmp
icebp
mov
add
xor
xor
in
or
xchg
pop
inc
rorb
out
add
mov
into
pusha
ss
jb
pop
xor
sub
add
inc
mov
adc
lods
aad
fisttps
cmp
inc
mov
cwtl
js
fidivrl
lds
into
mov
rsqrtps
xchg
jns
insl
dec
out
mov
mov
scas
add
out
leave
xchg
loop
enter
mov
popa
arpl
xor
jbe
mov
pop
je
stos
push
orl
or
lods
pushf
sbb
lahf
inc
cwtl
scas
adc
ss
xor
adc
cmp
sub
add
subb
mov
mov
mov
aaa
sub
js
add
cld
fsubrs
xchg
jo
arpl
adc
rolb
into
sbb
push
jns
add
mov
mov
test
nop
cmpsb
ret
je
repz
sbb
adc
adc
mov
dec
push
test
lahf
into
aad
adc
or
sub
sbbl
and
bswap
movsl
idivb
and
mov
mov
push
jne
bound
incb
push
es
xor
fs
sbb
and
nop
pusha
xlat
test
aad
jge
in
in
mov
mov
ja
ljmp
push
pop
sarb
push
xorl
idiv
adc
ds
inc
nop
enter
jle
subl
inc
xor
mov
ret
dec
mov
pop
cltd
popa
jl
add
xor
fidivrl
jne
outsb
jo
mov
inc
lcall
subl
sahf
cltd
jnp
fimuls
dec
and
aam
arpl
aam
push
int
clc
int3
mov
push
je
jne
adc
decl
mov
jb
daa
idiv
inc
ds
outsl
arpl
push
pushf
dec
sub
sbb
cwtl
and
ja
adc
push
dec
ret
mov
mov
jecxz
lods
data16
push
mov
mov
adc
pushf
mov
dec
add
mov
pop
ljmp
cmp
adc
jne
xchg
cmpl
jnp
add
bound
lcall
or
mov
outsb
rorb
ficoms
push
jns
nop
mov
fdivrs
mov
sbb
push
pushf
mov
popf
and
notl
cmp
xor
in
adc
pop
cmpl
push
or
cs
js
mov
movsb
out
hlt
xchg
fsubl
mov
cltd
rcrl
inc
inc
inc
cmp
dec
and
in
sub
jb
and
pop
fs
mov
lock
lds
rcrb
imul
aad
xchg
sbb
test
sub
in
xor
fdivrs
dec
pushf
pusha
mov
push
aas
jge
nop
shll
push
cld
aam
fcomps
xor
js
mov
lods
scas
xor
imul
mov
mov
fldenv
sbb
mov
inc
shl
fcoms
inc
or
aam
nop
cmp
mov
lcall
mov
int
int3
mov
mov
ret
and
fsubrs
movsl
int3
sarb
jne
xor
in
cmpb
push
hlt
jno
mov
fimull
rclb
push
pusha
add
adc
pop
inc
and
test
fldenv
cmp
mov
jbe
in
pushl
negl
ds
icebp
stc
bound
xchg
inc
lds
sub
push
mov
stos
les
or
bnd
aas
adc
push
fcoml
pop
pop
movsl
out
cmpsl
out
jnp
movb
mov
test
cmp
test
jo
mov
cld
test
lods
inc
subl
test
xchg
inc
inc
lock
mulb
add
jae
arpl
and
int3
inc
sbb
fwait
sahf
sbb
mov
pop
pop
pop
xchg
mov
hlt
add
repnz
dec
stos
inc
fbstp
into
mov
xlat
cmpb
dec
sub
add
push
std
xor
mov
xchg
pop
push
push
mov
inc
jno
cmp
adc
aad
add
sub
jne
leave
js
adc
lahf
fimuls
pop
or
cmpsl
rcrl
mov
xchg
jg
sub
inc
cmp
lahf
xchg
shlb
movsl
mov
mov
sarb
xchg
sbb
daa
push
cld
pop
in
cmpsb
dec
jne
xchg
sbb
pop
push
aaa
xor
mov
cmp
lret
cmp
sbb
cli
cmp
imul
in
and
cmpsl
mov
mov
nop
jae
shl
pop
add
mov
paddb
mov
in
sbb
pop
repz
movb
fs
or
shl
cmpsb
aad
mov
mov
jae
lcall
stos
fxch
inc
pop
or
pop
or
inc
pop
scas
insl
out
nop
cli
test
jmp
jne
and
jns
ret
dec
sbb
inc
rcrl
cmp
mov
add
int3
shrb
xchg
mov
push
jo
mov
push
aam
popf
insl
or
pop
fidivrl
push
icebp
cmp
sub
pop
dec
mov
cmp
push
dec
sub
mov
std
pop
test
js
in
in
fstpt
mov
rcrl
cmpsl
xchg
dec
xor
test
and
ret
outsb
or
daa
sub
add
mov
push
sarb
dec
ljmp
mov
mov
pop
jbe
into
xor
subl
dec
test
xchg
cltd
stos
xchg
push
subb
sbb
pop
pop
popf
xor
mov
xchg
std
pop
sti
out
les
ss
fcoml
sub
fstpl
xor
fisttps
loope
test
movsb
push
xchg
jle
cli
pop
mov
daa
lods
hlt
sub
cwtl
xchg
sub
cmp
cmp
and
mov
arpl
push
iret
outsb
mov
popa
mov
adc
rcr
inc
pusha
lods
sbb
mov
inc
mov
pop
in
xchg
imulb
shrb
adc
lahf
bound
int
cmp
sbb
in
mov
jb
incb
loope
ja
xchg
out
in
or
dec
cmp
jbe
inc
adc
ret
sub
clc
daa
std
je
mov
stos
xchg
rolb
push
pushl
mov
sbb
fnsave
nop
push
outsl
xor
or
sub
inc
data16
push
mov
mov
pop
push
push
push
push
xor
push
fidivrl
loopne
in
mov
out
add
stos
pushf
xchg
ret
mov
lea
inc
lock
scas
lods
les
mul
sub
jg
dec
jns
pushf
jge
push
jg
dec
push
inc
mov
xchg
sub
xchg
jge
cmp
dec
jge
mov
call
xchg
jno
or
test
jecxz
in
sahf
or
jno
loope
mov
jmp
hlt
xor
xchg
dec
je
in
mov
loopne
cmpl
lea
movl
mov
loopne
movsb
loopne
and
cli
outsl
mov
test
arpl
bound
xchg
ret
dec
jbe
push
adcb
orb
loopne
fwait
data16
xchg
cld
xchg
call
pop
inc
into
adc
xchg
sti
repz
mov
jmp
cmp
fstl
call
fsts
xor
fwait
mov
or
lds
fsubrs
ljmp
cmp
cmp
int3
sarl
loopne
int3
fcompl
push
adc
pop
imul
jle
mov
sbb
out
shrl
xchg
add
popf
cmp
jge
and
xlat
imul
push
jb
outsl
adcl
cld
sti
adc
push
loopne
stos
push
lods
push
imul
jecxz
jecxz
xchg
inc
call
notb
fisubrs
orl
push
movsl
shlb
jo
lret
pop
xor
fwait
or
lcall
sti
cmc
dec
push
xchg
dec
add
push
mov
adc
sub
outsb
dec
dec
push
jns
lahf
shlb
push
fldl
xor
popf
add
dec
aad
lds
xchg
sbb
gs
fldl
xor
popf
add
dec
aad
lds
xchg
sbb
gs
fldl
xor
popf
add
dec
aad
shrl
sub
fnstenv
popa
sti
push
fldl
xor
sbb
dec
out
pop
mov
cmp
loop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
aam
pop
aaa
dec
daa
xor
es
push
in
mov
xchg
cmpsl
mov
testl
cmp
sub
sbb
or
lods
xchg
in
xchg
mov
enter
mov
cmpsb
mov
rcr
mov
addr16
jge
push
cld
xchg
andb
lock
cmp
cmp
pop
imul
shl
inc
dec
addr16
mov
les
fsubrs
int3
aaa
mov
jnp
dec
daa
idivl
ret
sbb
jg
pop
pop
outsb
int3
xlat
mov
pop
mov
mov
mov
pop
inc
and
cmp
shll
cmp
adc
and
sbb
cmp
mov
ljmp
xor
mov
jae
stc
rcll
ret
fs
inc
pop
mov
fwait
cmp
mov
push
dec
mov
stc
push
call
jmp
mov
pop
cmc
data16
adc
frstor
int
mov
pushf
lea
insb
daa
pop
inc
and
cmp
push
cmc
push
xchg
jle
add
rcrb
pushf
out
call
push
push
repnz
sub
add
popf
aam
testl
lret
mov
inc
sbb
push
add
jg
imulb
xchg
iret
cwtl
leave
jmp
fs
out
pop
or
inc
sbb
or
cld
xchg
in
xchg
mov
cmpsl
mov
testl
cmp
sub
sbb
or
cld
xchg
in
xchg
mov
cmpsl
mov
testl
jo
inc
dec
jl
push
std
sti
adc
sub
aas
jl
scas
aas
leave
mov
mov
add
addl
cmc
jle
aam
xor
imul
mov
adc
pop
jl
scas
jnp
xor
push
jo
es
jg
testl
scas
pushf
jne
fwait
jnp
subb
fisubrs
jo
cli
and
enter
aam
mov
sbb
and
repnz
mov
mov
dec
pop
int3
cmp
adc
cmp
shlb
pop
mov
or
cltd
sbb
mov
cwtl
ljmp
repz
int3
mov
stc
jne
loopne
aam
imul
mov
test
cmp
je
push
jo
pop
mov
jg
mov
outsl
xor
pop
loop
push
ja
sbb
inc
and
cltd
jmp
scas
xor
fisttpl
add
sbb
jmp
push
sbbl
dec
push
stc
fidivl
mov
pop
sub
xchg
push
cmpsb
out
popf
sbb
mov
jae
int
shll
jbe
jmp
jb
mov
xchg
out
cltd
adc
cli
cmp
mov
fisubl
push
cmp
imull
lcall
addr16
push
jl
insl
fisttpll
ret
dec
rclb
mov
mov
scas
fsts
shll
ret
in
push
shll
ret
sub
xor
subb
jno
insb
cltd
push
xchg
mov
js
mov
jns
std
repz
outsb
sub
add
mov
divb
mov
test
ja
mov
sbb
lods
xor
xchg
dec
xchg
xlat
jecxz
cltd
add
xchg
add
jle
mov
xchg
push
ret
jae
shlb
mov
mov
test
imul
ret
jp
jl
cli
hlt
sub
pop
add
mov
int
cmpsb
movsb
jae
adc
mov
inc
aad
xchg
clc
cmc
xchg
mov
and
cs
mov
add
popf
sbb
rcrl
lahf
loopne
lcall
mov
aam
jb
imul
inc
push
and
xchg
das
fadds
sub
inc
xor
adc
call
aam
lock
sbb
mov
cmc
sbb
or
jae
inc
cmp
adc
test
leave
sbb
or
xchg
adc
cmpl
das
popf
xchg
in
add
xor
fwait
add
pop
sub
into
xor
add
lret
in
cli
xchg
dec
jecxz
xor
les
jb
xchg
fs
into
mov
xchg
fisttpll
pop
jnp
xchg
repnz
mov
loopne,pt
push
dec
adcb
mov
xor
inc
pop
js
jno
adc
mov
mov
and
xchg
mov
sbb
in
aam
inc
mov
adc
push
outsb
lods
sbb
ss
mov
and
inc
xor
xchg
repnz
sbb
and
imul
dec
xchg
fstpl
mov
mov
fcmovnu
xor
cltd
push
pop
pop
jle
ja
mov
fisttpll
adc
add
enter
xchg
lock
cli
push
mov
cld
dec
jb
xchg
inc
mov
cmp
outsl
sub
ret
xor
lcall
orl
movsb
seta
pop
and
sbb
mov
lret
jmp
push
xchg
ficoml
push
jb
aas
push
fs
ds
fistps
stos
jmp
pop
jb
int3
adc
cwtl
repnz
xchg
nop
lret
mov
loopne
mov
cli
outsl
add
ret
bound
cmp
enter
xchg
mov
sub
xor
xor
cmp
lahf
sbb
fsts
lahf
fwait
mov
push
ja
dec
xchg
pop
mov
and
dec
or
sti
inc
mov
dec
dec
jb
mov
scas
mov
pop
insl
xchg
orl
adcb
xor
xor
push
insb
in
jle
xor
scas
mov
xor
jle
mov
enter
sti
mov
jp
int
sub
and
and
aam
sbb
jmp
jnp
outsl
mov
out
scas
jg
out
inc
bnd
lahf
mov
dec
rcrb
inc
pop
stc
loop
popa
out
push
adc
xor
aam
mov
pop
sub
mov
push
inc
cmc
std
popf
inc
push
xchg
movsb
cltd
xor
inc
adc
jmp
push
and
stos
dec
fdiv
mov
fadd
int3
lds
leave
jns
inc
mov
js
pop
and
hlt
aas
icebp
iret
push
xlat
fstl
and
cmp
ja
pop
in
dec
adc
and
xchg
test
fisubl
cs
mov
mov
int
pop
jg
lds
test
lret
mov
and
inc
fdiv
lock
jno
mov
dec
lods
js
ds
insb
in
cmp
xchg
fsubs
push
sub
mov
fldt
pushf
sub
les
int
sub
in
cwtl
inc
or
xchg
mov
scas
fbstp
jnp
mov
mov
mov
mov
mov
cli
cmp
aas
xor
imul
add
js
movsl
sub
sub
jge
je
in
mov
js
add
jecxz
repz
pop
popf
out
mov
mov
xchg
inc
pop
clc
push
push
ljmp
xchg
rolb
pop
inc
in
pop
in
jmp
inc
mov
adc
ja
cmc
push
in
imul
push
adc
push
add
cld
sbb
out
mov
and
dec
inc
int
dec
mov
push
pop
and
repz
aam
and
xchg
lret
ret
dec
lret
adc
mov
sbb
adc
xchg
daa
pop
lahf
cmp
dec
dec
loopne
outsl
je
jbe
outsl
ds
sub
scas
cli
out
arpl
xlat
add
add
xor
push
mov
or
mov
or
mov
mov
pop
add
xchg
shrl
cmc
mov
popf
out
mov
sbb
inc
les
repz
out
mov
test
mov
shl
daa
ss
cli
repnz
mov
ja
inc
dec
cmp
ljmp
fiadds
data16
or
insb
lock
cltd
mov
xor
mov
pop
rclb
mov
icebp
gs
and
mov
stos
push
in
inc
adc
cltd
inc
pop
dec
popa
push
mov
out
mov
sub
ljmp
es
and
aam
inc
cs
pop
addb
popa
sbbl
cmp
mov
dec
dec
ficompl
hlt
sub
mov
subl
insl
in
jecxz
add
fildll
jns
popa
pop
push
andb
lods
ss
mov
jno
or
push
adc
xor
cmp
jns
dec
mov
into
jmp
jne
cmp
inc
ds
jmp
out
mov
enter
mov
adc
xchg
jnp
push
push
leave
dec
jp
pop
jae
mov
pop
mov
je
pop
fucomip
arpl
in
dec
adc
pop
sbb
ret
lahf
xchg
cmp
in
enter
insl
stc
jne
call
cmc
in
out
cmpsl
insl
cltd
scas
xchg
inc
adc
incb
pop
mov
add
je
or
mov
cmp
mov
cltd
call
sub
lret
dec
fisubrl
push
jecxz
adc
mov
dec
add
push
mov
push
and
out
xor
mov
rcll
jg
scas
jo
loope
dec
fisttps
int3
mov
int3
xchg
jae
mov
sbb
push
cmpsl
push
stc
xor
mov
pushf
jb
lock
pop
cmp
leave
inc
jmp
in
dec
inc
mov
stos
data16
outsb
sub
shlb
mov
dec
loop
or
add
push
or
ljmp
jmp
pop
and
pushf
jo
cwtl
sbbl
add
outsl
dec
fdivl
mov
and
js
orb
leave
icebp
aam
pop
cmp
jp
add
mov
mov
in
nop
jp
adc
popf
push
dec
push
daa
scas
jae
push
pop
add
lret
push
lock
mov
sbb
lcall
adc
and
dec
lds
into
or
and
fidivrs
or
ss
ret
adc
lock
fisttps
aad
pop
or
in
ss
ficoms
insb
popf
fildll
mov
shlb
ds
inc
nop
jno
cmp
dec
or
jb
xchg
aam
push
loopne
sbb
and
push
addr16
xorl
in
loop
xchg
fdivl
or
xchg
jnp
pop
xor
cmp
in
cmp
fwait
sbb
test
sbb
loopne
leave
lods
xor
xchg
pop
mov
inc
sbb
cld
es
pop
xor
imul
sbb
movsb
inc
mov
mov
dec
xor
fs
dec
mov
jge
loope
clc
leave
stc
out
stos
jns
cmpsb
xchg
pop
ficomps
mov
mov
mov
insb
jnp
pushf
or
mov
imul
cmpl
stos
pop
push
jno
cmp
xchg
gs
push
rol
adc
mov
dec
push
push
leave
and
les
rorb
mov
mov
and
je
mov
xchg
mov
jno
sahf
push
jle
sbb
ret
lods
add
and
pop
hlt
xlat
cmpsl
inc
or
in
es
xlat
jno
jmp
out
loopne
xchg
jecxz
sahf
es
push
cmp
dec
sbb
in
roll
loope
rcll
jmp
xor
pop
popa
in
cmpsl
mov
test
xor
pop
and
andb
jne
push
test
call
xchg
outsl
outsb
mov
mov
push
add
fdivs
lret
adc
push
in
jne
outsl
shrb
adc
subb
jne
mov
ret
popl
pop
pushf
pop
test
das
repnz
incl
sub
rcrl
cli
push
cmp
mov
fiaddl
adc
and
jecxz
push
dec
xchg
je
faddl
pushf
in
mov
dec
pop
jae
and
inc
call
int
xor
xor
fildl
sarb
mov
aaa
push
out
fdivl
jecxz
mov
pop
mov
lret
push
sbb
scas
jmp
ret
dec
mov
lahf
pop
icebp
fcoms
inc
push
jae
pop
dec
add
fiadds
enter
pop
outsl
or
cmp
jmp
ds
out
xchg
jg
xorb
fadd
pop
hlt
test
cmp
mov
mov
mov
addb
mov
sbb
dec
in
push
mov
jae
sbb
cmp
aaa
jno
mov
xchg
add
movsb
cmp
and
ja
loope
jmp
aam
out
hlt
pop
push
pop
cmp
xor
rorl
adc
push
sub
repnz
enter
lret
pop
adc
jecxz
mov
add
sbbl
xchg
push
jl
mov
iret
addr16
lret
mov
mov
fs
dec
jno
lea
popa
push
movsb
ja
in
push
xlat
mov
push
inc
push
or
lods
sbb
adc
rcrb
fisubl
jno
cmp
lock
lock
fmuls
add
fcompl
or
xchg
mov
outsl
xchg
aad
mov
out
je
dec
in
pop
mov
push
mov
dec
dec
mov
xor
and
outsl
es
in
adcl
fcomi
and
or
outsl
xchg
push
repnz
loop
loope
insb
push
aad
sti
mov
leave
icebp
pop
pop
cwtl
movsb
xchg
in
leave
xlat
inc
cmpsl
movsl
mov
mov
xor
inc
jl
and
xchg
mov
notrack
out
and
jo
push
push
jle
sbb
lods
xor
repz
sbb
mov
pop
adc
mov
sbb
test
test
or
sub
and
mov
mov
pop
or
mov
fadd
cmc
jge,pn
push
lea
int3
jbe
imul
mov
xchg
lahf
sti
push
nop
jg
out
lods
daa
mov
into
pop
stos
xchg
roll
nop
xchg
mov
imull
imul
in
cmc
jns
cld
mov
aas
sahf
cmp
pop
gs
xchg
xchg
dec
lret
fisttps
rcrl
repnz
loope
fwait
adc
pushf
mov
pop
pop
mov
cs
lods
cli
add
pop
adc
ret
aas
fwait
mov
ljmp
in
popa
lods
push
scas
sbb
push
int
gs
shrb
push
mov
aaa
jmp
pop
divb
mov
je
sbb
lods
mov
int3
stc
push
jmp
xorb
loop
imul
pushf
pop
sub
or
bswap
sub
sub
loop
dec
xchg
pop
push
dec
xor
cmpsb
lahf
jecxz
inc
sbb
fidivrl
mov
dec
ret
jecxz
adc
mov
mov
mov
push
std
mov
sub
adc
xor
mov
addr16
jo
in
adc
scas
test
dec
or
pop
mov
inc
insb
mov
pushf
and
cmp
jbe
pop
jbe
fists
cwtl
leave
mov
inc
scas
fidivl
xor
cmp
shll
push
inc
pop
and
cs
ja
pop
mul
sahf
data16
imul
mov
jmp
repnz
enter
xchg
insl
in
test
iret
in
jae
outsl
enter
data16
cmpsb
pop
mov
adc
in
dec
inc
pop
je
sbb
loope
lcall
dec
and
push
push
xchg
dec
xchg
repnz
mov
clc
hlt
mov
dec
mov
negb
lock
mov
pop
mov
push
addr16
sbb
inc
sbb
sub
sbb
mov
adc
cmp
or
adc
cmp
sub
jge
ljmp
mov
pop
es
sub
inc
sub
mov
test
iret
sbb
adc
sub
loop
xchg
push
add
sbb
add
xchg
xchg
arpl
cmpsb
xor
lret
mov
insl
and
cli
adcl
push
sub
sub
xchg
and
adc
insl
sbb
cmp
mov
movsl
ret
xchg
xor
pop
xchg
jns
stc
push
js
mov
jns
test
stc
pop
shl
xor
adc
ja
adc
pop
aad
loopne
daa
scas
mov
in
rolb
cmp
sbb
or
pop
cwtl
sub
inc
in
push
mov
inc
daa
mov
fwait
insb
addl
push
cmp
bound
out
movsb
jl
ds
mov
jge
movsl
mov
push
aas
xchg
and
pop
add
mov
jne
icebp
daa
mov
das
and
cmp
fistpl
dec
push
mov
push
call
add
xchg
lret
and
pop
pop
fildl
dec
jae
or
out
repz
sbb
jns
or
fstpt
push
or
sub
sbb
push
dec
lock
xchg
sbb
xor
xor
push
daa
push
cmp
push
adc
loope
scas
mov
jl
mov
aam
ficomps
sub
pop
es
repnz
mov
outsb
jb
jae
mov
imul
mov
mov
sub
mov
outsl
push
or
lods
pop
inc
adc
jecxz
mov
mov
cs
mov
mov
dec
push
sub
data16
push
popf
imul
or
or
add
xchg
and
jo
mov
testb
loope
mov
xlat
loop
cmpsl
icebp
cs
addr16
repz
aam
push
insb
enter
add
xchg
ja
jg
cmpsb
loopne
lret
sbb
mov
data16
fidivs
cld
xchg
pop
pop
adc
mov
and
je
mov
mov
pop
mov
popf
mov
add
int3
pop
pop
nop
fstpt
xor
jg
test
das
icebp
jno
gs
inc
xor
andl
fnstsw
es
xor
cmp
cmc
sub
inc
mov
xchg
jno
loope
out
adcb
jp
outsb
and
mov
push
std
insl
out
scas
and
cmpl
fcompl
push
rclb
cli
mov
mov
sbb
sti
out
call
add
xor
scas
pop
xchg
and
lods
add
pop
andl
and
les
loopne
pusha
cmc
hlt
dec
dec
push
test
pusha
xor
stos
stos
inc
loop
test
call
sub
mov
jbe
ljmp
add
out
cmp
xchg
mov
cs
sub
arpl
mov
test
or
arpl
or
xchg
pop
ret
rcll
pop
aad
repnz
adc
ret
jp,pt
aaa
and
call
cltd
jge
cltd
mov
filds
rcrl
xchg
int
ror
mov
xchg
mov
mov
js
mov
dec
mov
mov
lods
dec
stc
xlat
inc
jb
nop
pusha
pop
test
lret
addb
clc
pop
in
jecxz
jb
aaa
cmp
xchg
outsb
pop
ja
test
or
sbb
call
arpl
push
cmpsb
adc
cmpsb
mov
add
hlt
scas
or
sbb
fwait
cmc
je
cli
sbb
and
mov
mov
jle
iret
mov
ret
add
sti
jb
mov
pop
jg
gs
dec
mov
mov
cmp
lods
aas
pop
or
jmp
in
or
inc
scas
jo
lock
cmp
push
imul
add
fstps
sub
pop
lret
mov
pushf
cltd
add
pop
add
pusha
xor
popf
stc
hlt
pop
pop
stos
mov
xor
out
ret
bound
and
cli
xchg
cmp
loop
push
ds
outsb
ret
loope
movsb
mov
dec
imul
xchg
cs
imul
imul
outsb
mov
les
mov
add
call
repnz
shrb
mov
bound
adc
fdiv
xor
dec
aad
mov
sub
out
jns
push
and
pop
jo
xchg
iret
out
lret
xchg
lea
xchg
xchg
fbld
add
inc
mov
or
mov
inc
inc
jge
movsb
pop
push
cmc
scas
popf
pop
adc
mov
js
mov
push
fisubl
push
pop
xor
mov
pop
dec
xchg
addr16
loope
inc
sub
mov
ss
pop
mov
and
xchg
push
nop
js
fildll
jp
push
in
mov
pushl
cmp
xor
outsb
test
xor
inc
shlb
cmp
lea
xor
dec
enter
in
mov
push
fcmovu
rcr
mov
cltd
pushf
sub
add
outsb
add
jno
test
pop
cli
dec
push
xor
mov
adc
xchg
mov
adc
repz
jl
out
insl
push
xchg
test
mov
repnz
mov
ljmp
es
pop
xor
dec
fistpll
int
stos
or
daa
test
push
inc
mov
dec
pop
fmul
dec
mov
dec
pop
mov
mov
dec
mov
lcall
push
dec
test
add
sbb
inc
xchg
and
jae
mov
popa
xchg
adc
cltd
imull
push
mov
jecxz
imul
add
sbbl
enter
mov
arpl
lock
sub
cmpsb
es
test
out
mov
and
jbe
cli
push
and
push
pop
jle
fisubrs
cld
in
xlat
aad
jnp
pop
pop
push
xor
insl
fidivrs
ds
jns
das
arpl
mov
xor
mov
add
ret
xchg
loopne
clc
mov
inc
test
ret
insl
movsb
sbb
or
push
dec
mov
pushl
test
rclb
push
pop
or
mov
movb
push
into
jb
aaa
out
jmp
and
adc
std
cmpsl
pusha
mov
leave
pavgb
or
dec
jge
lods
ljmp
sub
sarb
jb
pushf
cmp
out
fucomp
jns
lret
and
pop
jl
lods
bound
and
jae
pop
enter
ret
les
lds
push
sahf
popfw
xchg
loopne
and
inc
pmuludq
push
add
loopne
fcmovnbe
sbb
fbld
mov
ja
adcb
add
js
or
out
mov
jmp
or
ljmp
xor
cmp
sub
sbb
or
cld
xchg
in
xchg
mov
cmpsl
mov
testl
cmp
sub
sbb
or
cld
xchg
in
xchg
mov
cmpsl
mov
testl
cmp
jae
addr16
xchg
in
adc
enter
mov
cwtl
mov
jecxz
shll
push
cmp
sbb
mov
jbe
int3
ror
scas
and
arpl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
pop
mov
insb
cltd
inc
mov
clc
sub
sbb
or
jns
imul
mov
pop
mov
cmp
sub
sbb
or
clc
sub
insl
fmuls
enter
test
cwtl
dec
mov
pop
mov
cmp
sub
sbb
or
sub
ljmp
lock
sbb
cmp
movsb
mov
sbb
jmp
in
mov
repnz
or
jo
sub
mov
shrb
adc
add
inc
pop
mov
jl
pop
cwtl
mov
inc
insl
and
cmpsl
outsl
clc
mov
cmp
inc
push
out
arpl
fnstcw
mov
out
pop
or
stc
cmp
icebp
mov
std
xchg
es
aaa
xchg
add
pop
dec
test
repz
xlat
fsub
enter
aad
or
sti
hlt
jo
in
mov
std
xchg
nop
ficomps
cmp
roll
imul
dec
enter
pop
pop
lea
mov
js
push
stc
cmp
sub
sbb
or
clc
sub
sbb
or
jns
imul
cld
push
in
push
xchg
push
mov
js
xchg
sub
cmpsb
sbb
add
sbb
cmp
and
pop
in
pop
mov
ja
or
test
dec
movsb
sbb
cmp
out
sub
sbb
sub
cmp
push
jmp
or
clc
sub
sbb
or
jns
imul
cltd
pop
mov
cmp
sub
sbb
or
clc
sub
sbb
or
jns
imul
and
inc
ds
dec
jbe
loope
sub
sbbl
xchg
fdivr
cwtl
imul
test
sbbb
sub
lods
lret
ret
sub
or
push
or
mov
outsb
stos
mov
into
cmp
jae
out
jnp
pop
aas
loopne
pop
sub
out
lock
jmp
cmp
jg
adc
mov
inc
int
mov
mov
inc
sbb
cltd
sub
fldt
dec
push
xor
not
lcall
pop
cmpsl
arpl
sbb
dec
xor
rorb
pop
loope
and
negb
adc
into
mov
jbe
cmp
push
inc
cmpsl
push
aam
dec
and
testb
sti
fsubrl
adc
in
xchg
ds
jnp
mov
sbb
rcll
jae
push
icebp
dec
repz
adc
jno
cmpsl
jg
dec
cwtl
cmpsb
sub
cld
jb
jb
stos
pop
ret
or
mull
ret
movb
inc
sbb
jno
mov
jle,pt
mov
hlt
jmp
mov
rcl
cs
sbb
in
loopne
push
lcall
add
pushf
leave
adc
test
xor
push
xor
or
xlat
out
push
jg
sahf
mov
daa
adc
mov
xor
xor
sarb
mov
mov
xchg
xchg
sbb
sub
xor
dec
or
shlb
imul
add
pop
inc
jns
rolb
inc
movsb
call
scas
cwtl
push
jle
inc
sub
stos
xor
ss
push
mov
xchg
dec
xchg
mov
sbb
mov
fistps
sub
iret
cmp
in
in
out
add
rorb
scas
imul
and
js
fbstp
sbb
imul
mov
sbb
adc
movsl
in
aad
inc
loop
or
pop
cmp
xor
sarl
xor
lock
scas
dec
stos
jge
mov
sbb
mov
or
mov
add
push
fiaddl
das
lods
pop
xor
int
adc
divl
les
je
mov
popf
push
jge
cmp
or
add
dec
push
test
fwait
aam
jnp
pop
and
popf
xchg
in
pop
outsb
sarb
out
push
ret
mov
orl
adc
add
mov
movsb
xchg
pop
push
das
jmp
cmp
cmp
popf
shrl
sbbb
and
test
fcomps
xchg
sub
mov
jp
add
xchg
adc
sbb
fldcw
gs
or
test
addb
mov
jle
push
test
rorl
push
lods
jnp
add
ror
jmp
add
cmpsb
pop
outsb
cli
test
jnp
ret
add
push
mov
sbb
and
or
and
aad
insl
inc
in
lock
mov
adc
fs
cltd
je
push
xchg
jp
add
ret
jp
mov
hlt
jns
add
stc
test
pusha
push
bound
mov
cs
and
adc
sbb
push
loopne
ret
add
mov
add
jbe
aas
push
mov
addr16
jbe
xchg
lahf
mov
dec
pusha
inc
mov
sub
nop
insl
pop
dec
push
push
shlb
ret
popf
pushf
add
xchg
mov
push
mov
ljmp
mov
sub
xchg
dec
and
mov
push
jnp
mov
and
adc
mov
pop
and
sbb
rorl
push
test
mov
hlt
popf
cmpsb
das
fwait
or
loop
data16
ss
jno
lahf
repz
fdivrp
lret
push
lahf
adc
xchg
jp
fcomps
and
test
mov
sub
ja
mov
into
xchg
in
cmp
add
mov
nop
jb
sbb
xchg
les
push
sub
in
mov
and
mov
jp
dec
sarl
imul
std
mov
sbb
scas
xchg
inc
call
adc
mov
push
or
dec
fsubs
add
loope
mov
insl
pop
sub
add
mov
add
sbb
dec
jnp
sbb
lret
adc
or
xchg
mov
push
inc
loope
mov
rcrl
dec
sti
or
mov
sbb
mov
xchg
sbb
push
or
int3
aad
pop
add
aad
inc
push
hlt
xor
je
in
aas
inc
aas
std
ret
ljmp
movsl
jb
cld
xor
ret
test
out
fistl
cli
xchg
imul
mov
scas
push
sbb
adc
aam
repz
add
clc
insl
scas
and
or
sub
aaa
xor
sbb
pusha
das
pop
aaa
xor
cmp
data16
js
sub
cmp
cmp
xor
incb
push
cmp
mov
out
test
inc
in
popa
fucomip
pop
sub
inc
push
scas
dec
jp
inc
fisttps
sub
cld
repz
add
inc
sub
inc
out
push
cmp
jle
popf
cmp
xchg
jg
enter
movsb
insl
dec
push
or
dec
leave
rep
test
data16
loope
je
adcl
xchg
sbb
pusha
dec
pop
scas
jmp
cmp
xchg
loopne
das
movsb
mov
mov
loope
shll
out
int
cmpsl
mov
xchg
outsb
mov
push
xchg
std
mov
std
ficoml
mov
jmp
push
fdivrl
adc
lds
popf
stc
fldl
push
lods
jb
cli
hlt
mov
enter
add
jl
fisubl
and
dec
mov
lock
rcrl
lret
cmp
adc
cmp
push
and
xor
out
in
dec
dec
push
cmp
icebp
flds
inc
dec
mov
repnz
mov
movl
add
mov
fldcw
inc
les
sub
jnp
imulb
inc
jecxz
xchg
or
mov
and
les
daa
mov
dec
xor
insl
or
or
out
pop
xchg
sub
jle
mov
test
aaa
inc
sahf
orl
test
push
fs
sub
jb,pn
mov
out
sub
out
cmc
adc
negl
decb
cli
jbe
pop
in
clc
jmp
cmp
stos
es
iret
or
cmpsl
loope
adc
scas
cli
lret
dec
or
ss
dec
das
push
fsub
xor
into
in
leave
push
cmp
pushf
lock
jecxz
scas
das
addr16
push
xlat
icebp
int3
mov
mov
pop
imul
xlat
inc
cltd
lods
fidivrl
mov
jmp
xchg
xchg
cmp
lret
cwtl
call
imul
mov
jbe,pn
cmp
inc
jmp
sub
or
xchg
add
shll
out
adc
je
int
test
jae
test
cmp
outsb
subb
cmpsl
stos
fisttpll
add
fidivs
dec
push
stos
loope
icebp
adc
lcall
aaa
aaa
mov
lock
dec
cmpsl
out
dec
rolb
push
xor
or
jmp
test
sub
xchg
inc
and
sub
mov
sub
jl
jl
jge
nop
jns
ret
jge
gs
ret
xor
sub
and
pushf
add
lret
and
jle
arpl
add
xchg
cmp
xor
pop
repz
mov
inc
and
mov
imul
xchg
and
insb
adc
xlat
xor
js
ret
adc
xchg
add
sub
sbb
les
pop
adc
cld
test
imul
icebp
stos
rolb
dec
cmpsl
shrl
clc
adc
lret
pop
test
mov
mov
push
push
outsb
xchg
into
adc
pop
pop
in
mov
xchg
mov
fldt
jne
icebp
sub
hlt
and
mov
bound
lret
inc
cmpsl
fwait
and
in
outsl
mov
sub
orb
fadds
lahf
adc
or
ret
xchg
xchg
lods
pop
lret
lret
int3
xlat
push
in
cmc
fbld
sub
push
stos
enter
jge
pusha
int
mov
mov
fs
pop
popf
outsl
imull
jns
mov
push
jae
adc
xchg
mov
inc
sti
xchg
lock
adc
in
jo
aas
sbb
subb
inc
idiv
mov
pop
xorl
mov
cltd
stos
fwait
sti
mov
mov
in
add
and
daa
adc
into
ja
sahf
in
leave
push
dec
add
ja
cmp
jl
mov
push
fucomi
xchg
adcb
mov
fcompl
adc
mov
rorl
jbe
and
sahf
xorw
push
and
ret
xor
std
in
dec
fisttpll
and
mov
std
sub
or
xchg
inc
adc
imul
daa
movsl
adc
sbb
sbb
subl
inc
fisttps
dec
xor
push
adc
pop
jne
ret
mov
dec
mov
push
sub
rcrb
adc
dec
xor
inc
mov
mov
jne
out
fs
das
jb
xor
call
inc
outsb
les
outsl
leave
push
dec
stos
xlat
xlat
data16
test
jno
pop
hlt
jmp
lds
adc
mov
push
lcall
es
outsb
cmpsl
or
shl
test
xchg
js
sub
ret
jle
aam
sti
loop
test
insl
xor
mov
lds
jbe
test
and
or
mov
sub
jb
sbb
in
adc
imul
xlat
out
adc
cmc
nop
pop
mov
mov
data16
sbb
out
lcall
xor
push
mov
test
test
cwtl
iret
adc
pop
sarl
lret
pop
jle
xor
sbb
push
ljmp
repz
lcall
mov
loopne
or
push
test
pushf
lahf
divl
sbb
mov
adc
dec
mov
xchg
push
mov
xchg
int3
roll
mov
ljmp
cmp
push
iret
push
add
mov
dec
shlb
clc
repnz
pop
mov
test
cwtl
add
lret
andb
push
push
js
addr16
gs
jmp
stos
add
outsl
xchg
fcoml
xchg
jne
imul
jo
dec
in
leave
mov
add
mov
cmp
xchg
subl
mov
push
outsl
ss
sub
jp
cmp
push
or
or
adcb
fcmovnu
mov
aad
mov
or
mov
outsb
sbb
cmp
adcl
fcmovne
xlat
insb
les
pop
fwait
xchg
push
mov
addl
jmp
inc
cli
stos
jge
sub
outsl
xor
adc
sbb
sub
sub
inc
hlt
mov
dec
int
ret
data16
pusha
cmpsb
icebp
call
add
fs
sar
stos
and
pushf
jbe
test
lods
ja
dec
or
mov
cmp
cli
pop
adc
jb
mov
call
lahf
mov
cmc
mov
xchg
sarl
mov
mov
adc
or
push
jnp,pt
pop
nop
aas
inc
test
and
movsb
jno
and
add
lds
outsb
push
mov
sub
stc
rol
std
push
jb
lds
shrb
or
dec
sahf
scas
outsb
xor
mov
movsl
in
std
jno
fcmovbe
dec
dec
jns
aad
shrb
rcll
pop
test
pushf
or
jl
arpl
adcb
cmp
jg
sti
xchg
data16
aas
or
mov
bnd
jmp
xchg
ficomps
loopne
es
adc
repnz
jmp
es
nop
insb
cmpsl
or
cmpsl
or
jmp
enter
inc
out
cmp
mov
jmp
mov
mov
jo
jb
add
jnp
jns
cmp
mov
rorb
out
repnz
xor
in
int
stos
cmp
clc
lret
mov
cmp
leave
test
loop
sub
xor
ret
push
pop
test
xlat
mov
in
mov
sahf
push
push
scas
pop
mov
movsb
mov
inc
ds
incl
or
dec
lret
pop
in
nop
sbb
adc
xlat
and
xchg
inc
fwait
sbb
push
pop
cli
mov
mov
stos
mov
jne
movsb
loope
scas
mov
push
sub
lahf
mov
xlat
push
inc
pop
dec
out
test
jno
fnstenv
push
cmp
sbb
jmp
inc
arpl
push
ret
aaa
add
rcrl
adc
ds
xchg
es
aaa
inc
dec
mov
mov
shrl
mov
daa
into
and
adc
xchg
cli
mov
sbb
xor
imul
xchg
iret
cli
outsl
jle
cs
lock
xor
jnp
xchg
rcr
loop
mov
lds
push
adc
insb
or
jge
adc
fsubrs
jp
jecxz
and
aaa
fisttpl
push
inc
repnz
adc
aad
jmp
sti
imulb
pop
xor
bnd
push
cmpsb
lcall
xor
jge
and
xor
mov
jmp
add
pop
ret
mov
and
jmp
sbb
fisttps
inc
popa
cwtl
pop
hlt
iret
int
ret
pop
leave
shl
and
cltd
dec
call
cmp
movsb
pusha
insb
pop
insb
ret
or
inc
jmp
add
dec
shlb
stos
aaa
or
add
addr16
ja
push
mov
sbb
lds
mov
scas
ljmp
test
cmp
pop
sbb
xchg
xor
xor
jp
sub
jle
add
jbe
adc
mov
aad
xor
xchg
cmc
js
xchg
inc
jmp
push
pop
jle
loopne
inc
das
or
jle
adc
data16
stos
cmp
mov
movsb
testb
inc
aad
pop
test
or
cld
mov
clc
cli
and
mov
sbb
xchg
xor
push
icebp
xchg
ljmp
mov
xor
into
inc
test
sahf
rcll
lds
lret
pop
cmp
pop
adc
adc
std
dec
mov
or
lock
fs
inc
movsb
cmp
outsl
push
notb
loope
ss
loope
jp
mov
orb
mov
pop
adc
rorl
fisttpl
mov
sbb
leave
sbb
jle
push
aad
sbb
and
out
addl
mov
xchg
cmpsl
adc
mov
les
les
lahf
enter
out
or
push
mov
fwait
xchg
cwtl
sbb
fistpl
popa
aaa
xchg
mov
loope
insl
xchg
jne
in
mov
cmp
push
icebp
aam
pop
add
rorl
xor
aam
inc
roll
cltd
out
adc
add
verr
fcoml
mov
xor
adc
push
and
ljmp
stc
mov
sarb
popa
mov
ja
dec
push
mov
popf
loop
loopne
xchg
or
lcall
xchg
push
das
add
dec
cld
sub
sti
jne
inc
cld
push
inc
mov
jnp
push
ja
fists
es
lods
aad
jmp
inc
jno
out
ljmp
clc
push
out
fnstenv
push
orl
cmp
jae
ret
adc
mov
orl
sub
adcb
fstpl
es
iret
je
xorb
loope
mull
loopne
pop
push
aam
cld
ret
add
lahf
int
dec
mov
mov
cmc
call
push
int
jne
inc
sbb
pushf
pop
sti
xchg
in
cmpsl
xor
jle
int3
push
ss
cwtl
inc
xchg
mov
in
cmp
pop
mov
sarb
out
je
mov
mov
insb
es
ljmp
ja
and
mov
lea
je
inc
cmc
mov
or
stos
and
aas
dec
jecxz
cmpsl
push
jp
data16
mov
scas
shrl
dec
pop
je
pop
in
pusha
add
xor
jo
lret
mov
scas
mov
ss
adc
insb
dec
lea
pop
pushf
aam
testl
inc
maxps
fiadds
jo
test
sub
sub
cmp
popf
mov
xchg
movsb
sub
scas
pop
lods
cli
icebp
cmp
mov
xor
inc
mov
int
inc
push
std
jg
cmpsl
test
mov
jle
mov
std
stos
mov
fdivs
in
mov
insb
fdivrl
addr16
nop
mov
std
jo
or
rcrl
mov
or
subps
xor
insb
dec
sbb
bound
inc
cltd
push
aam
ljmp
cmp
xchg
push
shrl
addl
rcll
mov
xor
xchg
mov
push
pop
mov
jns
es
mov
sub
mov
cmp
test
aad
or
ja
hlt
leave
mov
cwtl
aam
xchg
or
xchg
sahf
out
hlt
push
xor
cmp
push
insl
xlat
ret
arpl
pop
call
xor
jmp
jmp
int
add
mov
repnz
ja
insl
cmp
xchg
push
push
loope
sti
xchg
in
int
pop
xchg
js
rorl
clc
sub
inc
data16
imul
sub
mov
ds
and
pusha
mov
pop
cmp
jle
cmc
movsb
mov
lods
push
cmp
bound
add
sub
les
push
movsb
mov
lcall
push
stos
add
xchg
pusha
and
rolb
stos
mov
jne
inc
or
sahf
movsb
test
js
aaa
pop
cmp
cmp
push
inc
mov
inc
cmp
pop
shl
scas
in
push
leave
add
loop
pop
jl
mov
xor
cmpl
xor
out
jle
mov
sub
jnp
in
and
hlt
std
loope
fdivrs
test
xchg
fstp
jne
jns,pn
mov
mov
jns
push
fmuls
lahf
cmpsb
push
aas
inc
mov
mov
add
xor
repz
and
and
mov
or
fcomps
or
mov
das
xchg
fcompl
fnstcw
jnp
dec
leave
lahf
jge
in
daa
cmpsl
lcall
add
insl
filds
and
and
xor
adc
sub
add
xor
mov
sbb
inc
in
mov
lea
lret
mov
std
insb
xchg
out
mov
movsl
fdivrl
clc
ljmp
sahf
lods
xlat
mov
das
je
inc
sarb
mov
lds
pushf
inc
stos
pop
mov
jns
js
subb
push
fisubs
jl
xor
mov
cld
sub
je
jne
in
inc
aam
adc
fldenv
setge
or
test
xchg
pop
mov
pop
mov
inc
push
xchg
jb
ret
sbb
flds
cmp
leave
jno
mov
clc
push
push
mov
sub
lret
fcoms
psrlq
andl
in
xchg
leave
cs
mov
fisubl
xchg
rclb
xchg
test
and
rolb
cwtl
imul
repz
fcoms
push
les
push
cmp
shll
das
mov
test
fistpll
ss
jns
mov
scas
adc
orl
pop
daa
repnz
hlt
enter
in
xlat
es
jge
leave
fsts
lret
cmp
lea
sahf
jg
mov
es
pop
inc
ret
fsubp
inc
push
sbbl
adc
xor
outsb
int3
dec
lea
xchg
out
and
mov
xor
fmul
movsb
out
insb
out
sub
mov
mov
call
bound
jno
mov
jne
sahf
pushf
in
rol
pop
push
add
js
repz
adc
insl
mov
xor
and
mov
xchg
fwait
sti
sub
adc
inc
js
sub
lahf
sbb
push
mov
clc
stos
lock
push
gs
out
sbb
repz
xor
jg
or
jl
out
cmpb
in
lret
cltd
hlt
rcl
dec
adc
fwait
push
mov
in
dec
jne
mov
push
scas
rcrb
inc
and
pop
mov
pop
dec
incb
fcomps
into
cld
loop
mov
fwait
bound
lcall
ljmp
pop
jl
popa
xchg
or
cmp
test
jg
addr16
out
cmpsb
add
push
rcrb
xor
negl
roll
fistpll
imul
lret
jmp
shlb
dec
stc
cmp
sub
sbb
or
clc
sub
sbb
or
jns
imul
cltd
pop
mov
cmp
sub
sbb
or
clc
sub
sbb
or
jns
imul
cltd
pop
mov
cmp
sub
sbb
or
clc
sub
sbb
or
jns
imul
cltd
pop
mov
jmp
idivl
pop
sub
fmuls
mov
cmpsb
addr16
stos
loop
repnz
fwait
shl
out
pushf
sarl
sub
jb
inc
sbb
and
dec
add
stos
loop
repnz
fwait
shr
mov
fucomi
sub
jb
inc
sbb
dec
jp
dec
add
stos
loop
repnz
fwait
shr
mov
fistl
jnp
jle
imul
or
fists
repnz
subb
adcl
sub
lock
dec
inc
mov
jp
sahf
push
jmp
sti
aaa
aaa
mov
cwtl
xchg
push
mov
cmc
push
in
cmp
jnp
sbb
loop
jmp
test
aam
stos
sub
add
xchg
xor
lcall
sbb
xor
xchg
stos
cmpsl
pushf
dec
ljmp
xchg
call
mov
ljmp
int3
mov
rclb
clc
xchg
mov
adc
fstpt
aaa
call
xor
xchg
sti
xor
inc
jg
shlb
mov
lret
xlat
insb
jae
and
mov
sub
add
push
ret
jmp
sti
mov
sbb
sub
jb
inc
sbb
and
dec
add
into
out
mov
ret
mov
xchg
pop
jae
daa
pop
es
popa
cmp
jnp
pop
fldl
fcmovbe
mov
mov
mov
sahf
negb
pop
or
sbb
pushf
dec
push
xor
push
xor
cmpsb
mov
mov
mov
mov
sbb
sub
jb
inc
sbb
and
dec
add
stos
loop
repnz
fwait
shr
mov
fistl
or
push
imul
xor
pop
adc
das
in
cmp
or
or
call
aaa
inc
cld
dec
mov
mov
test
nop
stos
sub
loopne
push
lea
out
or
sub
test
ljmp
dec
mov
jge
cmp
push
mov
sub
lock
and
icebp
jb
in
dec
ds
int
adc
push
dec
frstor
das
dec
lods
cltd
pop
into
loopne
iret
imul
inc
enter
nop
inc
cmp
rcl
sarb
mov
xor
or
ret
xchg
bnd
stos
add
jae
outsl
ds
adc
lock
jecxz
fsts
stc
or
popf
lods
je
jl
sahf
rol
add
loop
dec
popf
cmpsl
ret
into
pop
cld
dec
cmc
cld
dec
int3
push
rcll
dec
pusha
insl
lret
je
rcl
mov
cmpsl
fdivrs
pop
sbb
daa
jno
cmpsl
or
add
add
xor
cmpl
xor
inc
jg
lds
add
lods
push
mov
popl
cmpl
mov
fmul
push
lods
add
in
subb
pop
adc
pop
mov
push
jge
gs
sub
fwait
adc
jle
push
or
xor
out
push
out
add
or
sub
sbbl
hlt
ljmp
xor
mov
jg
or
inc
mov
cs
jne
pop
pop
pop
jg
mov
add
dec
cld
jb
arpl
repnz
stos
or
fwait
notl
sub
movsb
inc
mov
adc
sub
les
mov
mov
sti
mov
dec
jl
ret
xchg
arpl
lea
or
pop
xor
mov
mov
pop
jg
test
push
cld
xor
repz
andl
lret
test
mov
or
enter
dec
subl
mov
cs
arpl
into
push
stos
or
push
xchg
mov
jmp
pusha
push
mov
aad
push
in
xor
fdivr
cmp
cld
iret
xchg
push
out
cwtl
lds
adc
lods
stc
pop
cld
adc
rclb
push
pop
inc
sub
xrelease
cmp
xor
je
mov
cltd
mov
cmpsl
rcll
push
or
lds
sub
mov
ds
gs
push
push
lods
xor
mov
inc
dec
in
daa
xchg
cmpb
push
insb
push
call
pop
push
push
dec
sub
cmp
mov
stos
roll
xchg
cmp
pop
rcl
iret
or
out
sbb
mov
aad
jae
cld
rol
cmp
add
outsl
in
ja
xor
adc
add
or
mov
or
les
insb
push
andb
xor
divb
in
inc
hlt
inc
xchg
das
hlt
mov
sub
xchg
sbb
mov
adc
pop
imul
sti
dec
dec
lahf
sub
mov
outsb
mov
mov
jnp
mov
pop
adc
inc
fcmovnb
mov
fwait
inc
call
xchg
int3
testl
mov
fstl
fdivs
sbb
jge
mov
jo
addb
add
arpl
cwtl
or
sbb
rolb
fcomps
inc
mov
ljmp
sti
cmc
mov
inc
xorl
add
andl
xor
int
mov
push
pop
mov
scas
dec
aam
cltd
add
scas
push
cmc
mov
and
lret
mov
jo
and
xlat
int
popa
stos
bound
mov
jecxz
das
jl
sub
mov
or
inc
push
repnz
mov
mov
jmp
sub
in
xor
xchg
mov
je
inc
jbe
imull
cmp
xorl
add
push
nop
mov
add
push
and
fsts
js
out
jbe
fadds
push
pop
ljmp
fidivl
pop
add
or
push
adc
das
iret
mov
jl
inc
inc
mov
cmp
sti
cmpsl
or
in
push
les
jmp
aam
loop
ljmp
jae
popa
jmp
pop
cmp
in
push
jg
stos
add
sar
push
stc
dec
push
loopne
jns
inc
jl
inc
and
rorl
es
es
push
sub
mov
cmc
push
and
aaa
pop
adc
js
pushf
in
lcall
xchg
fsub
inc
xchg
dec
int3
imul
add
xor
dec
dec
dec
roll
test
ss
pop
lock
xchg
loop
cmp
jg
insb
cld
loope
lea
rcrb
adc
xchg
stc
jecxz
adc
gs
and
ljmp
mov
btr
fidivs
arpl
sub
sbb
movsb
mov
mov
sub
pop
loopne
js
add
pop
mov
loop
stos
loopne
mov
jo,pt
mov
pop
pop
and
sbb
sarb
inc
mov
and
add
mov
imul
dec
in
enter
dec
cli
add
adc
mov
lea
aaa
arpl
ja
hlt
lret
push
rcrl
mov
dec
js
aad
stc
jne
jecxz
add
jno
cmpl
cmp
push
pop
and
gs
mov
mov
cli
cld
stc
cmp
out
in
leave
adc
mov
ja
mov
pop
push
dec
aas
sbb
mov
mov
cltd
mov
aas
movlps
push
add
inc
mov
loopne
mov
pop
mov
push
mov
clc
insb
aam
dec
fwait
scas
cwtl
cmp
dec
xor
clc
add
hlt
inc
outsl
push
mov
push
data16
int
out
aaa
and
and
push
mov
scas
out
jle
jae
lods
stos
ljmp
push
or
sbb
imul
outsb
pop
stc
push
stos
popl
cmp
fiadds
fistpll
jb
xlat
push
inc
icebp
ljmp
mov
int3
fidivs
bound
loope
bnd
mov
mov
ffreep
nop
dec
ret
xchg
inc
enter
or
mov
outsb
mov
xchg
mov
sbb
scas
jne
popa
ja
enter
aam
outsb
cmp
fwait
add
lock
out
push
push
dec
jnp
dec
stos
push
scas
nop
xlat
push
lcall
ret
mov
push
pop
and
das
push
lret
xchg
shll
xchg
push
pop
add
lods
lea
add
inc
push
loope
mov
fdivs
mov
fwait
mov
outsl
mov
ss
xor
jns
pop
xchg
repz
xchg
push
gs
xor
stos
insl
add
call
jns
sub
xchg
scas
sub
imull
movsb
mov
es
mov
movsl
push
or
loop
sbb
rorb
and
std
sbb
cmpsl
ljmp
jle
loope
scas
mov
stos
push
jne
daa
mov
cs
cmpsl
fldenv
xchg
xor
sub
lahf
ljmp
fdivrl
mov
xchg
push
mov
xor
mov
sti
and
std
shl
sub
push
push
push
jge
cmpb
je
and
jns
loope
mov
mov
shl
xchg
mov
js
push
pop
fldl
popf
int3
jae
out
popf
js
push
in
jnp
sbb
jnp
adc
adc
mov
gs
insb
mov
call
sub
out
and
ljmp
loop
movsb
xor
fstl
dec
repnz
mov
adc
sbbb
mov
aad
mov
jnp
sbb
and
pop
cmp
jae
mov
std
fnsave
inc
pop
cltd
sarb
pop
rorl
es
push
push
fwait
ja
out
lcall
xor
mov
loope
jbe
push
fisubs
sub
push
cmp
and
sbb
sarl
loop
xor
lea
inc
and
pop
dec
cld
addr16
fsubrl
jmp
icebp
out
call
inc
sarl
js
lods
daa
jmp
adcb
loopne
testl
iret
int
daa
xchg
hlt
mov
mov
and
out
aam
push
negb
loopne
or
nop
or
lods
push
sbb
loop
cmp
mov
insl
sbb
mov
cmp
or
jle
roll
mov
mov
cltd
inc
pop
movsl
idiv
sar
popa
pop
popa
mov
mov
sub
and
push
push
int
ds
adc
adc
cmp
xor
mov
out
into
fbstp
cli
stos
std
dec
push
inc
icebp
loop
push
sub
ds
insb
in
xchg
cmp
addb
ret
mov
pop
sbb
mov
fidivrs
insb
cmp
cmpsl
aaa
and
mov
push
jns
sarl
hlt
sbb
mov
int
loope
lahf
mov
pop
sbb
scas
dec
inc
sub
or
jl
ja
or
sbb
mov
hlt
cmc
dec
subl
push
push
cmp
mov
aas
sti
mov
push
pop
movsl
mov
xorl
push
fimull
inc
popf
inc
jno
sbb
xchg
sbb
pop
sub
fdivrs
pop
clc
push
ret
add
and
xlat
stc
rcrl
dec
mov
test
fnstenv
aam
or
les
movsl
insl
std
test
mov
push
push
sarb
pop
fdivl
mov
les
adc
cmp
fld
xor
shll
shll
mov
pop
xchg
jl
pop
fidivl
popf
cmp
mov
je
lods
mov
orb
fs
push
push
jns
lret
xchg
xchg
fidivrs
fisubl
lret
stos
or
fcoml
dec
pushf
aaa
enter
decb
xchg
sub
or
xor
and
and
dec
jp
jl
imul
pop
fidivl
bound
cmp
outsl
hlt
gs
fisubl
scas
mov
cld
je
iret
sbbl
insb
shlb
arpl
iret
out
xchg
sub
into
add
pop
sub
xchg
rorb
mov
or
xor
xor
sub
gs
loopne
inc
aas
lret
xchg
fidivrs
mov
popf
jnp
push
testl
xor
xor
xchg
xor
enter
popa
or
enter
sub
gs
inc
dec
fcomps
lock
mov
popf
outsb
sub
xor
ficomps
mov
test
xchg
fisttpl
cs
fs
into
inc
inc
repz
sub
mov
ret
push
push
mov
cmp
gs
imull
and
xchg
sbb
nop
push
mov
int
add
mov
jb
aam
in
stc
pushf
lcall
test
jns
inc
rcrl
pop
in
xchg
adc
jno
pop
test
in
in
sbb
dec
and
or
fcomip
int
mov
and
dec
ret
sbb
aam
sbb
jecxz
sbb
ficompl
dec
sbb
fwait
add
sub
jle
mov
xchg
pop
fcoml
push
repz
mov
xlat
lahf
arpl
fisttpll
sti
movsb
std
ljmp
ja
les
sbb
jge
jbe
and
loope
mov
fwait
inc
filds
repnz
xchg
roll
or
cwtl
mov
std
inc
push
cltd
cmp
xchg
or
cld
addr16
mov
lret
cmp
or
xchg
repz
mov
jne
push
lods
inc
fwait
xchg
jns
pop
fwait
in
sub
test
pop
inc
scas
out
push
adc
dec
pop
test
test
push
call
fmull
fnstenv
movsl
gs
pop
or
jns
jne
fs
or
into
sub
imul
test
push
rolb
adc
loopne
insb
enter
sub
push
inc
rcr
add
roll
or
hlt
mov
dec
adc
ljmp
fildl
mov
cmp
loopne
cmp
cs
fdivr
outsl
int
add
shll
sti
int3
xchg
xor
jl
cmp
and
mov
jnp
xchg
inc
cmp
lock
int3
or
test
stc
xchg
cmpsl
sahf
mov
pop
pop
stos
or
and
sbb
insb
imul
pop
pop
ss
xchg
pop
add
cmp
popa
nop
mov
xor
adc
mov
mov
and
rorb
sbb
insb
jne
sub
cwtl
cmp
sub
xor
into
mov
popa
mov
mov
fnstcw
pop
push
movhps
sub
mov
add
jmp
mov
lock
sub
inc
or
dec
faddl
and
ss
fdivrs
iret
stos
xor
mov
addl
out
dec
jp
mov
xchg
sbb
adc
es
arpl
fdivrs
daa
jns
mov
mov
jmp
mov
loop
pop
divb
dec
les
xor
ja
jae
pop
mov
cwtl
mov
imull
bound
mov
jno
mov
sbbl
pop
std
pop
or
pop
sti
inc
stos
fcmovb
int3
mov
pop
and
movsl
bound
mov
jge
cltd
sbb
sahf
xchg
ret
inc
lods
inc
ret
mov
jbe
cmp
stos
mov
decb
sbb
jne
inc
lea
or
loop
mov
pop
add
pop
inc
orb
adc
jo
inc
into
jnp
cmp
or
lock
pop
int
pushf
das
jno
mov
sub
adc
push
and
fnstcw
jo
stc
mov
inc
jns
test
mov
jo
and
add
in
and
mov
mov
and
dec
fcoms
and
cld
into
sub
sub
es
aad
pushf
dec
outsb
insb
jg
xor
cmp
out
and
sbb
jg
outsb
mov
les
scas
insb
std
push
aaa
fmuls
sub
aaa
mov
add
pop
push
xor
shlb
ficoms
xorl
xchg
or
push
rcr
add
mov
xchg
int
mov
les
cltd
xchg
push
push
stc
dec
xor
inc
xchg
and
movsl
or
inc
or
shl
xor
push
pop
ja
and
icebp
push
testb
or
adc
mov
xchg
bound
test
jae
leave
jle
ret
data16
sbb
or
imul
es
cli
xor
sub
lret
popf
gs
mov
mov
imul
sbb
push
dec
mov
adc
pop
ja
push
lods
xor
dec
mov
inc
mov
add
and
scas
xor
or
mov
repnz
xor
ja
cld
imull
sahf
cmp
mov
test
sti
cmpsb
jge
mov
xchg
pop
add
mov
enter
or
jbe
jge
shrl
adcb
lret
add
mov
cmpsb
dec
cmp
lret
or
scas
inc
cli
ds
les
or
jecxz
adc
lds
add
adc
repnz
jno
mov
mov
push
imul
rcll
adc
mov
push
mov
fisubl
fistl
pop
in
dec
jno
lea
rorb
int3
scas
fistpl
sbb
dec
xor
adc
jle
lfs
xor
mov
adc
lods
fs
sahf
sub
push
adc
in
xlat
cmpsb
das
stc
out
aad
adc
jecxz
jmp
scas
cwtl
lret
repnz
movsb
xor
rorb
jl
out
arpl
or
fwait
xor
out
dec
cmp
scas
int
jns
loope
subl
push
push
icebp
stos
dec
les
sbb
push
in
push
adc
enter
aam
in
jne
mov
xor
shll
in
xchg
or
mov
jl
pushf
fdivr
dec
shll
push
loopne
jecxz
xchg
ja
out
mov
mov
sbb
ficomps
pop
arpl
xorb
shl
movsl
jmp
les
test
inc
insb
movsb
add
mov
dec
jno
mov
call
pusha
jle
mov
out
bound
jmp
or
sbb
mov
or
pop
sti
xchg
bound
fiadds
icebp
adc
das
loop
scas
lods
fwait
pop
mov
dec
int
into
adc
push
leave
cmp
clc
shll
fs
xor
mov
sub
xchg
mov
adcl
add
std
and
add
fcomip
and
scas
insb
adc
adc
sti
imul
shl
add
leave
xor
cmp
xchg
mov
popf
in
pop
sub
out
lds
les
mov
int
cmpsl
xor
ja
shlb
mov
cmp
sub
ret
stos
rcll
mov
loopne
jnp
or
pop
aas
dec
repz
push
rcll
pushf
jae
mov
add
dec
test
xchg
push
and
dec
rcrb
fildl
dec
pop
fs
test
dec
cmp
mov
xor
imul
mov
inc
mov
sbb
jns
int
lret
subb
or
movsl
iret
jmp
ret
data16
xor
maxps
xchg
lret
test
aas
or
sti
push
cmp
mov
in
leave
es
movsb
inc
xchg
inc
in
leave
mov
lods
xchg
cmpsb
hlt
cmp
mov
cs
pop
jb
inc
addr16
sub
jns
jno
ljmp
mov
push
es
sbb
and
daa
lcall
lret
hlt
repz
icebp
xchg
or
daa
mov
data16
sbb
in
and
fsubr
hlt
push
push
pushf
lock
fwait
push
mov
out
jae
test
xlat
leave
and
daa
cli
xchg
xchg
xchg
popa
js
cmp
sbb
xor
pop
inc
aas
sbb
call
fdivl
jecxz
inc
imul
and
lock
xchg
push
adc
mov
fmull
mov
pop
lahf
int
pop
cmpsb
cmpsl
out
sarl
mov
stc
push
das
test
lods
xor
adc
mov
daa
stos
in
xchg
fcmovne
xchg
sbb
jmp
sbb
and
pop
lahf
mov
dec
adc
sbb
mov
mov
cli
arpl
lds
xor
sbb
xor
mov
fsubrp
lea
mov
lcall
les
mov
mov
fcoms
lods
in
pop
or
mov
or
inc
cltd
test
scas
into
enter
je
in
out
iret
cli
jge
jg
popa
push
jne
jbe
adc
call
push
int
test
js
and
xor
inc
and
movsl
sub
dec
leave
mov
dec
inc
and
nop
xor
lea
rcll
testl
jge
test
sub
out
daa
adc
push
mov
add
jmp
lock
cmpsl
pop
je
or
jns
mov
jle
push
cmp
mov
xchg
mov
push
sbb
xor
mov
xchg
fiaddl
es
sbb
mov
call
daa
lret
movsb
push
mov
decl
mov
jo
inc
mov
insl
sahf
lds
sbb
cmpsb
push
insl
mov
lods
push
negb
jb
sbb
push
mov
push
cmp
lcall
imul
leave
call
lret
xor
xor
xchg
inc
mov
es
roll
aad
lret
movsb
jbe
mov
nop
sub
jge
jae
mov
pop
rcrb
xchg
fstpt
fwait
sub
in
imull
ss
out
and
iret
dec
xor
cwtl
pushf
sbb
imul
jnp
jbe
mov
jl
filds
out
jl
enter
js
jle
stc
inc
ret
idivb
add
jp
scas
test
int3
pop
adcb
mov
sub
lods
cltd
scas
mov
ds
xchg
or
cwtl
mov
rclb
cmp
cltd
jnp
dec
and
or
int3
jno
imul
and
push
dec
fld1
inc
cwtl
outsb
ficompl
test
in
inc
mov
mov
or
clc
mov
and
push
dec
ss
or
jg
push
dec
in
jbe
mov
movsb
xchg
gs
mov
rolb
pop
mov
shlb
stos
sub
add
inc
imul
xchg
jae
std
scas
push
scas
addl
pop
fcomps
or
cmp
jg
sub
sub
push
outsl
jo
pop
cmpb
loopne
les
push
mov
fwait
shr
mov
fistl
or
push
imul
xor
pop
adc
ret
jmp
sti
mov
sbb
sub
jb
inc
sbb
and
dec
add
stos
loop
repnz
fwait
shr
mov
fistl
or
push
imul
xor
pop
adc
ret
jmp
sti
mov
sbbb
fsubs
stos
repz
std
mov
jle
dec
pop
xor
popf
push
mov
lds
aas
out
cs
fimuls
fdivrl
outsl
mov
mov
dec
pop
ljmp
out
fisttps
iret
push
aas
in
das
pop
out
pmaxub
mov
mov
push
popl
aaa
out
fists
iret
add
or
pmaxub
add
sub
and
lahf
cmp
aad
shll
aaa
fistps
loopne
xchg
lret
cmp
orb
dec
and
ret
jo
add
xor
loopne
lock
mov
shr
xchg
cmpsl
stc
cwtl
adc
cmp
ds
jp
repnz
imul
jb
pop
das
mov
dec
sahf
mov
dec
outsb
fmuls
cli
pop
push
iret
loope
mov
and
add
hlt
inc
push
dec
lahf
jg
jo
cmpsb
push
out
ret
mov
xlat
arpl
lcall
xor
mov
inc
popa
push
sahf
pop
dec
add
cmp
xor
xchg
push
into
das
std
loop
sbb
mov
scas
imul
pop
iret
pop
aas
imulb
out
xlat
vmptrst
outsl
test
decb
fstpt
dec
out
js
push
mov
xchg
pop
fwait
ja
jle
outsl
in
cmp
or
ficoml
lret
jecxz,pt
lcall
or
push
jb
xchg
jle
sbb
faddl
shll
loop
sti
fisubrl
scas
sbb
das
jecxz
mov
out
fisttps
iret
push
aas
out
das
pop
into
pmaxub
outsl
mov
mov
dec
pop
ljmp
out
fisttps
iret
push
aas
out
das
pop
into
pmaxub
outsl
mov
mov
outsl
mov
pop
xor
cmp
dec
js
xchg
sbb
ss
aam
xchg
mov
pusha
imul
mov
shl
stc
cltd
lahf
jmp
sub
adc
clc
xchg
int
shll
jb
sbb
out
movb
sub
mov
mov
cld
insb
pop
or
or
test
xor
push
rcrl
test
push
enter
xchg
mov
push
fs
mov
clc
shl
pop
dec
dec
mov
les
mov
add
cmp
cmc
lock
ds
mov
pop
scas
mov
xorb
dec
test
stc
cmp
aaa
fldt
sahf
or
sub
push
or
or
mov
xor
xchg
cwtl
insl
xor
jb
sbb
jge
mov
push
push
repz
xchg
and
push
adc
or
push
jg
mov
clc
movsl
pop
inc
dec
adc
lcall
sti
sub
dec
fsubrl
testb
mov
hlt
pop
pushf
dec
xor
add
lcall
ret
bound
pop
in
and
loopne
mov
ret
int
fistpll
cmp
fcmovnbe
jmp
cltd
jmp
push
data16
lret
fdivrl
jl
decb
xchg
adc
pusha
xor
and
pop
ret
xchg
sbb
sub
insl
or
mov
pop
adc
negl
scas
loopne
or
push
sbb
mov
pusha
sbb
sub
sbb
mov
stos
test
lds
mov
enter
jno
iret
stos
mov
or
fidivl
adc
leave
imul
add
jmp
fdivrl
pop
jmp
mov
ret
lock
insb
mov
jb
adc
das
jmp
and
imul
push
imul
jg
sub
or
test
jb
xor
outsb
in
push
dec
jge
movsb
nop
pop
cs
lret
int
clc
push
les
repnz
cmp
int3
cwtl
pop
push
push
jle
xchg
into
adc
int
add
loope
and
ret
sbb
push
and
rcrl
jecxz
test
xor
jne
sar
scas
fcmovu
push
mov
fsubrl
lock
ja
mov
call
fs
test
test
jae
jbe
mov
cmpsb
insb
fbld
sti
dec
sub
mov
inc
inc
inc
xchg
inc
scas
lret
push
mov
mov
not
test
call
nop
and
add
fldt
jecxz
push
icebp
mov
xor
mov
mov
packssdw
adc
sub
ss
loopne
fldenv
mov
sbb
jge
mov
mov
mov
xlat
fwait
jp
inc
pop
mov
mov
jne
in
outsb
pop
and
xchg
cmp
push
pop
sub
mov
js
ja
push
xchg
mov
cld
pop
testl
shrl
test
out
inc
mov
pop
outsb
hlt
test
inc
jecxz
xchg
shll
and
fwait
sbb
aaa
cmpsl
imul
lds
mov
movsl
push
rcrb
out
inc
and
popa
cmpsl
dec
push
mov
pusha
mov
fwait
pusha
fdivrp
rol
pop
cltd
add
fmul
fnsave
adc
push
adc
jl
xor
lea
lea
and
mov
cmpsl
pop
jb
xor
push
pop
pop
inc
rcrl
pop
pop
adcb
loop
stos
call
xchg
inc
std
jl
test
xchg
sbb
add
mov
xchg
inc
jns,pn
scas
xchg
dec
sbb
mov
push
inc
adc
mov
insl
or
cmpsl
std
fwait
loop
arpl
hlt
sbb
dec
stc
cmp
jo
ds
repnz
mov
stc
fsubl
xchg
test
leave
sub
add
inc
icebp
jle
mov
jg
xor
mov
and
ret
outsl
dec
pushf
sbb
xchg
popa
push
test
movsb
pop
or
mov
cmp
stos
push
shlb
das
out
mov
jl
fs
aaa
add
mov
and
inc
add
adc
fs
cwtl
hlt
jl
mov
in
aas
ljmp
loop
iret
out
push
shll
test
inc
insl
xchg
notl
mov
add
pop
xor
bound
test
sbb
jo
ds
push
and
rcrb
push
and
scas
mov
cwtl
dec
cmp
lret
push
jg
or
or
push
push
mov
and
ja
pop
mov
out
int3
arpl
pop
ss
ds
xchg
pop
test
mov
inc
and
mov
cmp
iret
fstpl
lcall
pop
pop
test
loop
in
inc
jmp
adc
pop
jle
cmpsl
les
mov
je
pop
jnp
inc
mov
addr16
push
out
jmp
sbb
popf
fwait
sub
xchg
in
push
xor
cmp
stos
dec
inc
xor
push
lock
add
fimuls
data16
push
push
jb
inc
mov
adc
xlat
ret
jae
mov
sbb
push
test
arpl
sub
stc
in
movzwl
push
leave
mov
lret
mov
xlat
cmp
sahf
out
sub
add
inc
xchg
sar
fistps
sbb
dec
call
sub
adc
sbb
popa
push
repnz
ljmp
mov
aaa
xchg
or
jge
mov
jg
lock
pop
out
xor
cmpsb
scas
sub
dec
jb
jle
inc
mov
xchg
mov
cmc
jae
xor
sbb
add
scas
jae
cmp
insl
push
or
scas
adc
das
inc
cs
rcr
push
cmp
push
movsb
rclb
es
movsb
mov
sbb
adcb
mov
push
sar
xor
inc
imul
dec
mov
scas
loopne
inc
test
jb
in
inc
repnz
cmp
fs
mov
js
sub
enter
in
popf
xchg
das
xor
pop
inc
jo
loope
add
jmp
push
or
mov
add
test
xor
dec
jbe
pop
jecxz
in
pop
sbb
inc
stc
inc
cwtl
cmp
mov
pop
scas
jnp
sti
lahf
shll
pop
ja
lods
xchg
push
fwait
dec
ficoml
mov
xor
stos
lock
push
out
mov
add
lods
dec
pop
in
mov
pop
cmp
arpl
mov
clc
xchg
xor
lret
or
jmp
aam
inc
dec
cmp
rolb
iret
repnz
aad
gs
cmp
cld
cmp
js
cmpl
rcll
sbb
pop
gs
pop
ret
testl
ja
sbb
jo
push
jmp
std
scas
fisubrl
lods
and
mov
inc
imul
mov
or
cld
dec
call
es
dec
sbb
nop
xchg
jecxz
cld
lods
cmc
xor
xchg
daa
xchg
add
xchg
pop
inc
out
fadds
dec
pop
and
lods
mov
xlat
pop
arpl
int
subl
xchg
jne
movsl
roll
lahf
lahf
xor
pop
sub
cmpsl
fbstp
push
cwtl
sti
sub
inc
push
js
fcoms
roll
aas
out
fwait
lahf
hlt
adc
test
mov
fwait
aam
push
iret
push
sub
int3
sarl
mov
addr16
outsb
inc
inc
push
in
loopne
vpshufd
add
sti
cmp
pop
stos
arpl
fwait
loop
lods
sbb
and
and
fisubrs
and
and
outsl
xor
adc
mov
cmp
dec
xchg
push
push
into
mov
insl
pop
roll
or
or
jge
ret
fsubrp
adc
stos
mov
sti
out
std
sub
mov
xchg
and
in
mov
sbb
mov
pushf
mov
lock
daa
in
pop
in
pop
inc
loop
jp
std
push
loope
sub
popf
popl
cmp
sub
repz
pop
inc
pop
loopne
jne
mov
cmc
popa
jg
and
xor
and
popa
ds
scas
pop
pop
test
leave
adc
das
mov
movsb
pop
add
dec
fisttpll
mov
scas
mov
lcall
dec
imul
jmp
or
cmpb
xor
not
jnp
sbb
shrl
or
out
pop
aaa
mov
scas
and
lock
xchg
dec
lock
mul
pop
inc
repz
add
mov
test
hlt
xchg
mov
testl
mov
sbb
jl
jl
inc
push
push
sti
lcall
cs
cmpsb
rorl
call
xchg
jle
lods
insl
imul
mov
lret
movsl
lock
pop
push
mov
lret
testb
and
mov
add
pushf
movsb
in
cmp
popf
xlat
push
push
and
xchg
mov
mov
movsb
subb
sbb
add
insb
xchg
insb
mov
shrl
dec
clc
aad
or
popf
sub
stos
sub
dec
cmpsl
out
cmp
test
mov
ficompl
push
mov
pop
add
cwtl
or
xchg
sub
test
inc
mov
shl
sub
add
inc
popf
aam
rcl
bound
push
fistpll
out
inc
int
lret
outsl
jmp
mov
mov
inc
ds
push
test
xor
and
lods
dec
sbb
test
imul
sar
ret
out
jmp
mov
push
fildl
jnp
lea
cs
jl
rol
and
scas
adcb
cmp
cmp
aas
shl
inc
call
in
out
rorl
jl
xor
insl
data16
xchg
outsl
sbb
pop
cmpsl
jnp
sub
ror
jb
mov
stc
lods
fucompp
pop
cmp
arpl
std
and
adc
jge
outsl
push
lods
xor
mov
arpl
dec
sub
or
or
and
cltd
ljmp
adc
xchg
test
aad
add
sar
jmp
mov
or
clc
repz
or
mov
pop
push
cmpsl
mov
lea
movsb
jne
and
push
fnstcw
or
out
or
mov
stos
xchg
inc
cmpsl
dec
mov
xor
aas
mov
loope
mov
jg
pop
and
sub
fwait
xor
shlb
jbe
repnz
popf
mov
in
or
movsb
scas
mov
cld
push
sbb
xchg
testl
mov
lock
in
sbb
fcompl
das
roll
xchg
push
outsl
lret
jecxz
imul
mov
add
movsl
mov
add
xlat
sbb
mov
out
xchg
cli
shll
inc
mov
sbb
dec
sub
fiaddl
push
dec
dec
daa
stos
icebp
fs
xchg
xor
dec
push
pusha
mov
xchg
and
sbb
ret
fldl
mov
sub
cmp
push
fidivl
cmp
test
push
cmp
inc
in
adc
xor
sbb
lock
mov
and
daa
icebp
xor
adc
jne
sub
js
mov
daa
fdivrp
jbe
and
dec
xchg
lret
lock
xlat
and
into
pop
je
xchg
fcmovbe
cmp
cmp
imul
movsl
cmpb
xchg
pop
cmc
dec
adc
mov
sbb
or
inc
sbb
rcll
int
arpl
pushf
das
das
or
sub
lcall
or
adc
int3
stos
fwait
cs
add
push
inc
aas
popl
or
and
inc
aam
aad
stos
dec
lods
inc
dec
divb
cmp
or
xchg
xor
negl
xchg
int3
jo
xchg
aaa
inc
int
add
popf
mov
lret
clc
cli
mov
sub
rep
das
in
push
testl
pop
ja
dec
mov
les
mov
ffreep
mov
mov
pop
push
std
cmp
mov
mov
push
add
mov
mov
stc
ficomps
test
dec
adc
xor
sar
lcall
push
fwait
aas
push
jmp
popf
inc
mov
aas
dec
cmpsl
rcrl
mov
mov
aas
pop
mov
sahf
fimuls
or
scas
jnp
pop
aaa
incl
push
notb
mov
mov
stc
pusha
mov
clc
push
dec
and
and
push
sub
lcall
cmc
hlt
fcmovbe
dec
shrl
and
lahf
mov
mov
sub
add
pop
mov
xchg
loop
mov
sub
jb
adc
push
stos
mov
nop
cli
inc
fmul
loopne
pop
xchg
jae
negl
rclb
addl
pusha
push
test
mov
adc
popf
pop
or
jg
dec
test
dec
ja
aas
push
jnp
mulb
adcl
fsubrs
cli
fs
xor
push
call
pushf
jmp
mov
pop
adc
maskmovq
mull
mov
push
stos
cld
xchg
dec
inc
or
push
pop
adc
or
mov
aas
push
aas
in
mov
lret
jle
setp
lcall
aas
push
ret
mull
push
jbe
adc
aam
outsb
adc
mov
add
jmp
dec
cmpsb
idivb
ret
aaa
mov
out
mov
rorl
pusha
lods
lret
ret
xor
jmp
xor
outsl
sahf
mov
pop
pop
sbb
fistps
mov
fdivrs
push
mov
imul
mov
popf
cmp
cwtl
arpl
out
daa
lock
xchg
cld
pop
xlat
jge
pop
loop
xlat
popf
sbb
or
dec
out
mov
cmp
xchg
xchg
jbe
rcll
push
dec
int
jb
lahf
loope
dec
xchg
dec
push
mov
js
add
ret
mov
push
aas
cmp
icebp
fstpl
outsl
fistps
gs
ss
pop
ja
test
inc
ljmp
das
and
cwtl
fistps
adc
mov
add
cmp
mov
je
ds
mov
or
rcrl
popa
and
push
or
sbb
into
or
or
cmp
jno
adc
sbb
push
or
sub
push
mov
adc
mov
test
add
dec
popa
scas
leave
sbb
cli
inc
fwait
pop
and
mov
dec
sub
sbb
inc
add
dec
ret
mov
fnstenv
inc
pop
and
sub
movsl
inc
lcall
pop
pop
push
cwtl
add
lcall
jle
mov
je
fisttpl
ficoms
lret
sbb
test
jo
in
add
hlt
lret
dec
sub
clc
lds
inc
test
cmp
cld
fs
das
sbb
lcall
pusha
inc
gs
jge
or
pop
nop
test
adc
dec
mov
mov
lods
adc
cmc
jmp
xchg
or
movsb
push
adc
dec
lods
mov
pop
outsl
push
icebp
mov
jo
mov
stc
mov
ss
push
sbb
test
push
sub
add
jnp
xchg
cmpsl
jg
lods
mov
push
test
adc
xlat
scas
and
inc
inc
dec
xchg
popf
fdivrs
xlat
add
or
scas
xchg
cmp
hlt
sbb
fcmovu
lock
jmp
ficoms
mov
cmpsb
data16
and
rcr
add
push
jnp
sub
pop
xchg
mov
jae
cmp
pop
fdivp
jmp
cmc
pop
in
and
int3
decl
push
mov
cli
les
shll
mov
test
lcall
inc
das
xlat
sbb
pop
mov
shlb
and
jbe
push
add
rcrb
inc
add
jno
into
sbb
inc
jnp
pop
push
js
inc
and
je
inc
mov
or
loope
scas
and
jae
aas
mov
lds
push
mov
in
mov
mov
push
mov
fdivs
jns
pop
popf
les
mov
leave
jno
xchg
pop
mov
xor
mov
jle
iret
out
int3
inc
imul
ret
ss
dec
hlt
stos
jns
je
hlt
les
mov
lods
mov
jecxz
mov
es
and
stos
call
push
mov
in
popa
xlat
dec
test
dec
add
std
pop
pusha
push
mov
mov
sub
push
mov
mov
inc
sbb
dec
loope
ds
sbb
stos
fcoml
scas
mov
inc
popf
adc
mov
aas
out
cwtl
nop
shrb
out
int3
rol
subb
sub
jb
lcall
adc
xchg
sbb
sub
sarb
andl
push
je
lds
inc
mov
jp
xor
jge
es
xor
mov
lods
mov
cmp
or
call
or
das
sub
js
xchg
testl
movsl
xchg
push
jns
lret
daa
enter
mov
addr16
fstps
add
out
arpl
and
sbb
add
lahf
lret
adcl
inc
fnstsw
je
inc
xor
in
inc
cmp
jb
js
mov
mov
mov
hlt
inc
jmp
shll
sahf
push
sti
std
jmp
mov
cmp
push
arpl
outsb
push
inc
push
or
cmp
sbb
aaa
adc
orb
fimuls
push
xor
mov
adc
or
mov
lock
test
cmp
mov
dec
xorb
add
aaa
adc
jmp
xchg
jecxz
or
inc
pop
push
lret
ljmp
and
push
aam
xor
int3
lock
pop
int3
incl
jge
scas
orl
jne
and
mov
push
testl
sti
xchg
test
push
mov
xchg
shll
sarb
incl
test
mov
and
cmc
push
cmp
ret
lods
or
jne
sub
xchg
jle
mov
ficompl
out
sub
mov
fistpl
add
mov
mov
neg
mov
clc
mov
ficompl
or
pop
int
adc
insl
negl
cmp
sub
inc
add
ret
xor
in
idivb
jle
aas
xchg
dec
cmp
add
aas
scas
hlt
stos
jno
cld
jo
loope
shll
fimull
pop
mov
imul
xchg
dec
out
popa
pop
xchg
adc
lea
mov
inc
mov
andl
orb
xor
mov
lods
push
cltd
push
pop
movsb
test
sub
cltd
lret
mov
aaa
inc
push
xchg
jo
sbb
scas
push
gs
scas
cmp
xor
int3
fwait
push
lds
xor
ljmp
xor
jno
ret
idivl
push
mov
subb
inc
ljmp
jae
fwait
jo
arpl
nop
rcr
repnz
aad
xor
jecxz
mov
mov
scas
sbb
pop
jbe
add
jnp
mov
adc
subl
mov
fcmovnbe
aad
inc
mov
ret
jg
push
push
nop
jl
fs
mov
inc
stc
out
add
or
push
bound
add
mov
cmp
sbb
stos
ret
inc
xlat
ret
fisttpll
xor
inc
test
sub
jg
pushf
daa
sbb
and
fstl
stos
lds
cmp
add
insb
pop
mov
test
inc
test
jns
adc
inc
fidivrs
stc
adc
xchg
lcall
mov
xor
xchg
adc
xchg
popf
movsl
sub
mov
xor
bound
xor
or
sub
enter
push
sti
lock
xlat
repz
sub
push
insl
daa
daa
xlat
cmp
pushf
call
enter
lods
inc
pop
std
sbb
sub
mov
sub
jecxz
push
inc
cmp
pop
rcrl
je
leave
mov
psubusw
inc
pop
lds
aaa
fsub
push
xorl
fmull
dec
xchg
mov
mov
or
and
cs
sbb
inc
and
stc
xor
sbb
mov
jp
ds
inc
xor
push
adc
ljmp
repz
xchg
and
push
outsb
sub
or
or
pop
ja
arpl
imul
xor
cltd
adc
ljmp
fldl
jbe
insl
aad
pop
fmul
sti
clc
repz
icebp
hlt
ja
jmp
cmp
jae
pop
pop
mov
sbb
push
bnd
mov
out
push
sbb
mov
subb
insl
mov
in
pop
xchg
movsb
pop
xor
outsl
pop
cmpsl
sbb
or
inc
sbb
sub
ljmp
jb
or
imul
cld
dec
fistps
sub
frstor
jno
outsb
dec
jp
fucomp
adc
push
push
cmpsb
hlt
lahf
pop
cli
std
push
call
icebp
jecxz
mov
pop
jp
cltd
dec
fadd
sub
jle
mov
out
fisttps
iret
push
aas
out
das
pop
into
pmaxub
outsl
mov
mov
dec
pop
ljmp
out
fisttps
iret
push
aas
out
das
pop
into
pmaxub
outsl
mov
mov
dec
pop
jg
out
fisttps
dec
push
aas
out
das
pop
into
pandn
outsl
mov
mov
dec
pop
ljmp
out
fisttps
iret
push
aas
out
das
push
mov
pop
pop
inc
das
jno
popa
sub
sbb
fst
push
insb
cmp
sub
mov
cltd
in
jmp
mov
cmp
jge
insl
imul
mov
in
jmp
std
fldcw
adc
add
and
push
rcrl
mov
lcall
lret
xchg
leave
mov
or
outsl
cmp
sub
mov
sahf
cmc
das
fiadds
add
shrl
clc
call
pop
jno
movsl
roll
jns
int3
jge
outsl
sub
nop
popf
jne
addr16
mov
mov
lds
addr16
inc
stos
dec
std
xor
push
inc
dec
mov
adc
jmp
jge
mov
shrb
xchg
sbb
pop
shlb
and
adc
pushf
stc
jb
push
fsin
jns
mov
test
stc
call
add
test
fisttpll
into
stc
mov
lods
leave
push
rcrl
push
xchg
pop
jnp
mov
fnsave
lods
pushf
stos
jb
mov
and
jle
imul
xchg
in
andb
mov
pop
dec
insb
ds
inc
sbb
bound
pop
dec
test
mov
test
repnz
stc
mov
sbb
data16
dec
add
push
or
mov
fmuls
mov
or
gs
jns
dec
cmp
mov
in
jmp
mov
cmp
jge
insl
imul
mov
in
jmp
mov
push
lcall
sbb
dec
arpl
gs
test
ljmp
cmp
stos
loope
dec
jle
push
pop
in
scas
xor
hlt
lret
popa
xor
orl
xor
lods
aad
cmc
imul
pusha
or
js
lock
sahf
adc
sbb
loope
sub
add
inc
stos
mov
cli
jmp
add
add
cmp
loope
sbb
push
jae
pop
loop
jmp
push
or
sbb
mov
and
lods
jl
shlb
jmp
inc
stos
adc
shrl
mov
sahf
adc
pop
icebp
lock
adc
jecxz
sarb
js
dec
inc
ljmp
xor
std
mov
inc
hlt
mov
out
xchg
ret
and
mov
ficomps
nop
mov
icebp
lea
jmp
and
mov
sbb
leave
mov
xchg
test
flds
nop
or
lret
or
add
adc
xchg
mov
add
divl
sbb
aad
lock
xor
jne
jecxz
test
in
mov
sub
mov
push
fs
dec
mov
arpl
xor
int
add
push
dec
xlat
popa
sub
jbe
stos
or
dec
nop
in
pop
rclb
ljmp
clc
in
push
push
mov
imul
mov
outsb
cmc
ljmp
sub
fcoms
jp
mov
fnstcw
xchg
lock
mov
sahf
xor
dec
xlat
or
push
arpl
xor
shlb
adc
loop
jmp
fadd
outsb
sbb
inc
mov
cs
negl
jb
adc
jae
ja
add
fnstcw
jg
dec
xor
mov
mov
es
ss
push
pop
mov
pmulhw
mov
lcall
xlat
lret
push
jg
mov
inc
lcall
fdivrl
fwait
dec
mov
pop
xchg
add
adc
pop
and
jp
test
pop
pop
imul
and
pop
leave
jp
push
add
xchg
in
jl
inc
int3
outsb
dec
pop
xchg
cmc
sbb
scas
sub
cmpsb
and
les
cs
jl
cltd
insl
cmpsl
dec
push
mov
fs
gs
loope
rolb
dec
mov
pop
call
fldcw
pop
add
sti
scas
pushf
loopne
push
xor
mov
xorl
int
jmp
mov
push
cmp
sbb
xor
push
popf
ds
rcr
lret
pop
push
inc
push
fnsave
push
and
inc
jle
sub
pop
inc
loop
jno
ja
popa
add
pop
xchg
xchg
mov
xor
mov
std
out
cwtl
and
cltd
rorb
jae
and
in
mov
adc
and
ret
or
add
stos
lods
add
les
jne
loope
inc
push
outsb
mov
dec
dec
nop
pushf
cwtl
fstps
push
hlt
stc
aaa
in
xor
shll
sub
lahf
pushf
loope
lret
adc
mov
std
sbb
push
loop
and
fiadds
jo
sbb
rcrl
cli
add
cmp
mov
jns
jbe
inc
sub
xchg
and
pop
or
sbb
sub
inc
push
inc
cmp
cltd
icebp
pop
pop
iret
lcall
inc
or
mov
or
hlt
je
pop
fldenv
and
jle
loop
cmp
xchg
sbb
cld
sub
jl
inc
scas
scas
out
test
je,pt
xchg
xor
popa
fwait
int3
mov
sbb
pop
mov
adc
add
push
xor
xchg
test
jae
in
clc
cmp
pusha
stos
mov
xor
jmp
pop
pusha
cltd
pop
into
rolb
loopne
push
punpckhwd
insl
dec
fbstp
mov
faddl
pushl
sbb
pop
jnp
aas
enter
xor
xchg
leave
cltd
xor
jbe
std
nop
mov
adc
cmp
lahf
dec
dec
push
inc
jp
ja
sarl
dec
stos
lret
lods
call
jbe
adc
xchg
cmp
adc
ljmp
mull
cmpsl
adc
addl
aam
mov
test
sbb
call
or
jb
ss
mov
insl
push
mov
rolb
mov
sbb
les
jp
or
cmp
push
pop
push
push
inc
lods
adc
inc
imul
pop
inc
push
dec
repnz
dec
ficomps
mov
pop
popf
sbb
rclb
repz
dec
daa
stos
mov
loop
or
stc
inc
xchg
sbb
push
imul
inc
mov
adc
ds
and
push
movsb
inc
xchg
cmp
mov
dec
mov
int3
pop
push
leave
ret
cmp
shr
mov
in
scas
mov
fiaddl
call
mov
adcb
mov
fsubrl
fimull
xchg
arpl
fwait
aaa
push
push
stos
cltd
mov
sub
iret
iret
mov
jae
dec
and
push
inc
gs
cmp
addr16
or
lea
lcall
jbe
adc
ret
scas
imul
add
pushf
push
das
xchg
int3
mov
mov
sbbl
push
xchg
std
push
bound
inc
daa
xor
push
or
push
jae
pusha
pop
inc
mov
xor
fistpll
push
testl
ss
mov
sub
xlat
test
cmp
rcrl
lahf
jmp
push
test
xor
mov
cli
pop
in
mov
iret
adc
xchg
scas
hlt
cmpsb
loope
jnp
andl
sahf
xlat
xor
loopne
les
iret
aas
pop
ljmp
adc
sub
gs
testl
aad
fisttpll
mov
xchg
lret
leave
iret
iret
dec
dec
mov
push
cmp
mov
push
inc
xchg
call
mov
test
inc
push
test
lea
jp
pop
or
fldt
or
lret
pop
inc
jae
aad
gs
scas
add
add
jge
dec
push
dec
mov
xchg
cmpsb
iret
jbe
lds
jb
sbbb
and
sbb
jo
data16
xchg
pusha
jp
fwait
bound
pop
xchg
roll
pop
push
push
cltd
and
out
daa
ret
jae
push
jb
sysexit
popf
add
iret
mov
inc
test
xor
ja
jge
jae
ret
inc
mov
mov
fsubrs
sub
pop
mov
rcll
adc
lcall
ljmp
jo
nop
pop
xchg
clc
push
enter
jae
cmp
pop
and
insl
int
inc
js
test
leave
cmp
add
out
xor
fstl
mov
cmc
xchg
xor
aad
xor
imul
jnp
mov
mov
inc
cmpps
insl
cmp
js
and
pusha
sbb
mov
pusha
out
mov
test
lods
mov
and
lahf
xor
and
call
adc
cld
or
ljmp
add
imul
dec
mov
mov
out
xchg
inc
nop
scas
xchg
orl
cmp
and
int
fs
xlat
movsb
and
sub
dec
pop
and
pusha
lret
mov
stos
jo
sub
xor
mov
rolb
pop
roll
loop
mov
add
sbb
nop
cli
dec
ret
cmp
xor
ja
stos
inc
jecxz
jb
sbb
adc
mov
gs
aaa
jno
cmc
insl
cmp
sbb
shlb
lcall
jns
or
ljmp
ret
jb
nop
inc
out
out
mov
arpl
shll
cmp
pop
data16
pop
sbb
dec
aam
loopne
loope
push
add
js
lock
push
in
cld
xchg
leave
dec
jno
arpl
sarl
lcall
pop
add
push
out
jl
jnp
leave
loope
jae
outsb
mov
icebp
push
xchg
shrl
pop
or
push
pop
jno
movsl
jnp
stos
mov
mov
xlat
pop
shrb
cwtl
sbb
or
dec
inc
xchg
push
jbe
push
popf
jb
shrb
cli
xchg
add
push
cli
push
hlt
adc
ret
mov
test
xchg
lret
mov
adc
inc
jl
stc
clc
scas
add
xchg
jnp
xor
pop
mov
andb
lods
lret
jecxz
push
pusha
xchg
and
adc
pushf
inc
dec
inc
nop
adc
iret
leave
daa
xor
mov
ret
mov
adc
jle
pop
ss
mov
es
rcrl
push
pop
mov
jge
test
lock
xchg
out
cmc
mov
and
mov
inc
jle
aas
and
mov
faddl
call
inc
push
mov
mov
arpl
jle
lcall
jmp
sbb
mov
jmp
leave
or
mov
jg
adc
fldl
xchg
lcall
fs
pop
cmp
lock
enter
pop
pop
cld
push
or
popa
loop
push
xchg
xor
cs
sub
ret
sbb
sub
clc
mov
push
mov
jno
mov
bound
add
xor
mov
insl
xchg
push
scas
lods
scas
pop
test
inc
cmp
in
not
dec
sub
ja
fldenv
pop
push
das
clc
or
test
mov
divb
insl
rcl
iret
stos
mov
addr16
xor
js
dec
xchg
shrl
movsl
mov
jp
pop
pushf
inc
ljmp
mov
repz
sub
xchg
imulb
cmpsb
mov
in
loopne
out
flds
mov
fs
scas
stc
in
enter
imul
mov
add
pushf
cmp
push
or
push
inc
push
decb
bound
popa
push
test
push
sub
mov
in
mov
sbb
stos
dec
push
mov
das
movsl
add
push
ds
imul
jns
sub
movsb
fmulp
or
xchg
mov
call
arpl
jb
sarb
and
jb
sub
sub
arpl
pop
xchg
sbb
pushf
jnp
cld
in
lret
or
cmp
sub
xor
lock
cmc
fdivs
inc
test
sbb
adc
push
out
xchg
std
fs
test
xchg
mov
dec
mov
fmul
jno
sub
lret
les
xchg
sarl
cmp
test
jbe
in
or
ja
mov
sbb
icebp
repz
pop
inc
shl
mov
dec
repz
fucomip
xor
mov
rcrl
jnp
shrl
movsb
out
std
mov
cmp
cmp
andb
sarb
fistl
in
gs
arpl
mov
xor
push
lret
repnz
and
fiaddl
test
gs
push
sub
iret
mov
sub
fldenv
sbb
mov
lret
dec
fistps
dec
hlt
in
ss
je
cltd
imul
xchg
ret
out
sar
cmp
jno
cld
lret
out
push
xchg
sar
outsb
sahf
dec
sbb
icebp
pop
popa
and
mov
fwait
adc
pushf
cmpl
jno
fstps
mov
fwait
sbb
push
in
adc
mov
inc
cmpsb
push
xchg
push
jmp
pop
pop
iret
push
arpl
jbe
out
add
sti
fsubrs
loopne
sub
sub
nop
or
mov
mov
push
dec
adc
dec
xlat
xlat
sbb
popf
dec
addl
repz
cmp
cld
cmp
sub
neg
mov
test
sbb
in
push
adc
jmp
jge
jbe
push
jb
sbb
mov
cmp
clc
ror
or
aad
mov
push
xor
push
cmp
sarl
out
mov
test
mov
int
cmp
jmp
dec
or
adc
jne
ss
scas
xorl
push
xor
sti
fimuls
adc
pusha
cld
xor
pop
adc
fildl
adc
jo
insl
mov
push
sahf
adc
cltd
jno
add
push
push
xor
mov
lock
clc
dec
adc
into
mov
lods
mov
inc
or
dec
dec
stos
loopne
mov
xchg
mov
add
cli
ljmp
xor
xor
jecxz
repnz
add
mov
les
pop
mov
in
jecxz
std
data16
lods
mov
push
fwait
xchg
inc
add
and
xor
sub
mov
fbld
cmovne
out
stc
pop
cltd
jb
dec
pop
jge
dec
cmc
es
cs
cmp
enter
icebp
sbb
cmp
adc
cld
idivb
ds
imul
jbe
mov
cmp
xchg
xor
inc
or
cmp
pop
cwtl
pop
cld
repz
jp
gs
push
inc
mov
sbb
or
and
clc
out
mov
mov
rcll
xchg
mov
fisttpll
ret
test
fldenv
xchg
roll
pusha
inc
add
sub
xchg
cmpsl
fbstp
and
mov
add
mov
test
shl
addr16
lods
jecxz
push
pop
xor
push
and
dec
and
push
lods
cmpsl
jp
fbstp
jo
push
faddl
and
mov
es
mov
adc
es
xchg
dec
pop
mov
add
dec
cmpsb
test
push
push
inc
add
inc
mov
push
or
iret
inc
ljmp
pop
gs
data16
xchg
cmp
push
test
mov
fnsave
rcll
mov
aas
ficoml
push
sub
das
imul
scas
xor
and
int3
out
lea
jmp
loop
stos
jge
aas
jp
mov
daa
leave
mov
xchg
roll
pop
out
sbb
mov
jbe
pop
lahf
aas
pop
jns
sbb
jb
ja
jl
jg
repz
andb
and
lcall
push
je
addr16
add
notb
cmp
jp
das
and
adc
mov
lret
sarl
inc
cwtl
fcoml
outsb
xchg
pop
dec
jg
mov
xlat
js
inc
int
imull
mov
cld
cld
sti
mov
jne
lahf
iret
shrl
shlb
lods
or
mov
or
xchg
je
shlb
mov
subl
out
adc
dec
fisubrs
std
std
or
inc
push
cltd
orb
push
aaa
dec
jl
out
pop
or
loope
inc
in
orb
ja
jg
lods
adc
sti
adc
pop
xchg
adc
aas
add
repnz
dec
int3
sbb
push
or
xchg
sarl
mov
fdivr
xchg
outsl
jne
call
int
popa
inc
jmp
mov
sub
cmp
xchg
sbb
sub
sub
cmp
cmp
push
pop
rolb
jl
jge
pusha
xchg
insl
push
in
loop
mov
xchg
mov
iret
xchg
pop
ss
add
lcall
pop
fs
iret
and
xlat
sbb
cltd
xor
or
test
inc
movsl
or
test
ja
test
addr16
pop
lods
jg
mov
or
dec
lea
lods
mov
jo
mov
jnp
or
inc
lock
push
adc
in
popa
divl
mov
outsb
dec
pop
jae
or
jae
sub
ret
and
fsubs
push
loop
jae
scas
mov
push
mov
pusha
add
std
aas
xorb
into
xlat
cmp
out
mov
outsb
sar
sbb
jl
pop
push
orl
repnz
inc
adc
jmp
push
or
int3
fiaddl
ljmp
sbb
repnz
in
lret
pop
inc
mov
iret
loope
insl
aaa
out
mov
xor
fsubl
jge
leave
adc
sbb
push
pop
pop
fistl
cmp
aad
inc
mov
pop
jb
adc
xchg
out
loopne
adc
and
js
cmp
mov
fcoms
mov
mov
push
dec
int
sub
and
fcmovnbe
adc
lods
sti
shrb
movsl
inc
lahf
xor
enter
cld
cli
mov
push
dec
mov
jmpw
sbb
dec
mov
xchg
and
mov
xor
mov
js
dec
or
imul
jge
push
loopne
pop
mov
adc
push
sub
xlat
ja
dec
mov
inc
mov
scas
sub
push
hlt
sbb
pop
popf
inc
push
stos
mov
dec
sbb
jge
fwait
ss
mov
clc
sub
push
mov
mov
daa
fwait
cmp
xchg
sbbb
cmp
sub
gs
ficoms
iret
add
pop
push
sar
je
jl
aaa
push
cmp
sub
fucomip
pop
push
sub
jge
popf
xchg
mov
inc
out
in
loop
xor
pop
mov
xor
out
fistpll
push
aad
aad
and
addr16
cmpsb
add
fadds
dec
jno
bound
out
sti
mov
ja
sbb
iret
adc
test
lods
and
pop
outsb
push
jge
popa
jbe
leave
cmp
ficoms
adc
movsl
sbb
shld
movsl
mov
mov
or
push
pop
add
xchg
sbb
lret
das
push
fidivrs
jne
nop
mov
cs
jno
sub
adc
xchg
mov
mov
pop
jbe
aaa
pop
adc
pusha
rcll
mov
insl
mov
add
aam
xchg
jmp
dec
sti
cmpsl
xor
pop
lds
inc
sub
das
or
cwtl
xchg
mulb
test
int3
icebp
js
mov
in
shll
loopne
dec
in
dec
scas
mov
or
jae
nop
sub
lahf
or
adc
push
and
adc
repnz
imul
imul
xlat
bound
sti
add
xor
pavgb
pop
movl
data16
sbb
push
shlb
out
cmp
jmp
fdivrs
ret
xor
xchg
sbb
in
push
in
std
and
cli
push
arpl
cmc
fstl
mov
cmc
jl
cli
xor
scas
xor
fwait
loop
dec
add
mov
pop
and
enter
nop
ficoms
push
cmpsb
mov
out
jbe
xchg
inc
shlb
jl
dec
mov
jmp
pop
cmc
dec
sub
outsb
pop
cld
or
insl
jnp
or
fdivl
push
cmp
fisttpl
lcall
xchg
push
inc
sub
push
sahf
xor
dec
cmp
lods
inc
dec
pop
jmp
mov
xor
jp
mov
xchg
test
inc
dec
aaa
stos
pop
and
int3
sub
mov
in
xchg
cs
cmp
sbb
lcall
cltd
push
leave
cli
add
dec
jle
sub
jns
cwtl
fcmovnbe
data16
pushf
add
movsl
leave
jns
fnsave
push
pop
mov
sbb
fldlg2
pusha
loopne
dec
adc
mov
or
xchg
out
es
dec
je
pop
fs
mov
insb
xchg
in
lock
mov
punpckhbw
add
fiaddl
mov
mov
pop
xchg
cmpsl
push
into
in
sbb
inc
fisubrl
sub
sub
xor
adc
mov
fldenv
or
movsb
add
sub
fmuls
stc
out
lock
jae
shlb
aaa
jnp
ja
stc
cmpsl
pop
lret
xchg
or
sbb
sub
mov
pushf
fdivrl
add
pop
lods
or
out
sub
push
pop
lcall
sbb
xchg
adc
mov
sbb
pusha
xchg
xor
xor
outsb
cmp
imul
inc
fmuls
aas
add
and
in
push
mov
push
mov
xchg
daa
cmp
or
dec
xchg
dec
icebp
pop
mov
stc
and
sbb
or
pop
sub
pop
xor
mov
or
lods
leave
mov
jg
shr
xor
cmp
addb
xchg
push
cmpsb
psllw
and
notl
pushf
or
daa
popa
or
in
fnstcw
jecxz
lahf
ret
pop
sub
mov
adc
bound
bound
cltd
loopne
iret
mov
lds
je
sbb
or
mov
or
xchg
inc
xchg
push
jb
stos
cmp
pusha
popf
scas
jge
call
cmpsl
scas
fisubs
int3
in
out
xor
and
adc
aam
ret
mov
test
cmp
xchg
and
adc
mov
mov
sub
movsb
stos
and
mov
outsl
subl
cmp
cmp
push
mov
pushl
and
ret
inc
stos
mov
mov
pop
stos
loope
mov
ss
repnz
xchg
js
sub
jl
pop
scas
scas
shl
out
adc
push
scas
and
jns
sub
add
xchg
adcb
movsl
out
inc
inc
adc
das
ficomps
push
rolb
add
in
cmp
stos
aad
test
lcall
insl
imul
mov
in
jmp
mov
cmp
jge
insl
imul
mov
in
jmp
mov
cmp
imul
mov
in
jmp
popf
fldt
or
insb
imul
sub
and
cltd
lcall
es
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
iret
test
mov
movsb
call
out
lock
lret
dec
in
xor
and
push
cmove
lock
test
fsubr
movsb
call
pop
lahf
hlt
scas
in
adc
add
push
outsl
and
adc
inc
pop
je
fs
sub
jbe
es
jl
lret
lahf
ljmp
pop
pop
or
aas
dec
ss
pop
cmp
cli
iret
enter
int
rorb
jl
jne
mov
imul
cli
adc
inc
xchg
jo
pusha
std
js
js
xor
and
cli
or
pusha
jns
imul
mov
fdiv
stos
jp
repz
fwait
outsb
push
ror
sbb
dec
cld
out
xlat
push
inc
mov
mov
inc
push
add
mov
pop
push
and
sub
in
adc
nop
fisubrl
stos
gs
loopne
shlb
das
mov
xchg
push
add
mov
mov
xchg
xor
popa
mov
mov
push
and
cli
sub
pop
daa
cmp
pop
mov
sbb
fdivs
ds
iret
rcr
mov
movsb
pushl
mov
mov
inc
outsl
adc
sbb
dec
pop
inc
das
fs
std
mov
fcoml
and
out
adc
push
sub
inc
cmp
outsb
sub
add
iret
loope
out
lds
add
mov
jae
push
sub
pop
adc
dec
and
mov
xchg
lcall
in
adc
add
xor
and
push
cmove
je
fs
xchg
iret
test
mov
movsb
call
pop
lahf
hlt
scas
in
adc
add
xor
and
push
cmove
je
fs
xchg
iret
and
sbb
and
lods
testl
leave
cld
mov
cmp
movsb
push
jb
push
xor
pop
out
mov
dec
cltd
add
sub
lods
lods
jbe
jge
jnp
dec
or
lcall
adc
adc
cmpsb
mov
xor
xchg
out
movsb
std
cmp
dec
pop
cmp
ljmp
rolb
aam
dec
ja
mov
mov
loopne
pop
xor
mov
bound
mov
mov
xor
addl
test
fldl
es
data16
insb
sub
mov
xchg
jne
inc
xor
int
cmpsl
add
popf
mov
sub
lods
cli
loop
repz
adc
xchg
or
in
mov
push
xchg
movswl
imul
fidivrs
mov
test
mov
aas
and
jp
sti
or
jge
fsubl
outsl
test
imul
nop
jno
fldt
out
ret
dec
mov
fisubl
cmpsb
mov
pop
mov
ss
and
bound
adcl
sti
scas
scas
inc
ja
pop
cmpsb
lahf
xlat
dec
mov
nop
lock
mov
dec
popa
sub
jns
or
dec
adc
sbb
stos
out
jb
lcall
mov
cwtl
out
mov
inc
jmp
rcll
adc
xor
jl
pop
sbb
dec
jns
pop
inc
adc
cs
pop
aaa
lea
mov
fstpt
stos
sub
pop
jae
shlb
xchg
js
aas
gs
stc
cld
ss
jo
fidivl
js
aas
mov
xchg
lea
inc
int3
xor
sbb
jg
jecxz
scas
xlat
push
jnp
sbb
mov
xor
jne
test
loopne
mov
js
jae
aaa
int
xchg
loope
pavgw
aas
mov
mov
xchg
cmp
notb
ret
mov
dec
lods
mov
xor
add
inc
mov
int
add
lea
aaa
loopne
push
pop
xor
in
movsl
mov
mov
into
or
clc
or
or
test
push
repz
out
or
rep
cmp
jne
xor
outsl
xchg
xchg
imul
push
inc
sub
lds
sub
out
add
jp
or
xor
jecxz
mov
psrld
fisubrl
sbb
cmpsl
outsb
sahf
test
adc
inc
aam
pop
mov
in
ss
adc
pop
sbb
inc
jg
and
lcall
jmp
sub
dec
popl
sti
cmove
jmp
sub
stos
pop
push
mov
push
ljmp
aam
fsubp
test
call
xchg
leave
sub
or
shll
xor
scas
sub
lods
pop
mov
mov
jns
decl
push
aad
insl
sbb
dec
add
and
aaa
xchg
inc
ja
in
jnp
dec
inc
xchg
int
xor
mov
stos
lods
add
dec
push
call
jo
xchg
adc
mov
xchg
andb
insb
xchg
push
push
flds
ret
addl
lods
sqrtps
pushf
inc
jns
sti
div
mov
adc
fcompl
xchg
fidivs
sub
mov
cmpb
inc
dec
mov
mov
and
add
notl
xchg
ljmp
addr16
ljmp
les
sub
and
cli
scas
pop
movb
inc
in
sub
pop
divl
adc
ficomps
cli
push
xchg
int
fisttpll
gs
arpl
add
inc
int
jg
mov
adc
or
jns
xchg
into
popa
into
jge
hlt
movsb
xchg
dec
add
mov
jecxz
dec
xchg
pop
adcl
aaa
inc
pop
sbb
cmp
sbb
sub
cmp
jle
ss
and
jg
adc
pop
adc
mov
ss
rorl
sahf
xor
mov
loop
idiv
in
lcall
push
shrl
mov
lods
xchg
mov
mov
rcll
xchg
add
dec
add
jb
sub
mov
xor
cmp
lods
inc
add
call
sahf
xchg
xor
fsubrs
pop
sub
addr16
inc
lcall
mov
shl
aaa
out
aas
xchg
jecxz
mov
jle
arpl
fwait
out
mov
pop
leave
std
int
push
push
push
mov
mov
mov
cmpl
and
and
int3
icebp
mov
fstpl
jo
jecxz
fildll
mov
mov
hlt
adc
push
std
popa
pushf
insb
sub
divps
popa
in
cmp
cmc
hlt
fists
fstpt
insb
xchg
adc
int3
icebp
clc
dec
mov
pushf
or
cmp
pusha
andb
in
ds
and
icebp
jb
xor
lret
push
jns
push
xor
xchg
pop
in
pop
jbe
lcall
stc
push
pop
ss
shll
or
dec
addb
icebp
mov
inc
fcomi
orl
sbb
flds
data16
in
pushf
test
cmp
pop
mov
inc
and
jecxz
mov
mov
loopne
xor
add
lret
scas
fs
outsl
out
int
add
fnstcw
xor
arpl
fwait
jmp
xchg
rcr
scas
loope
ja
fwait
std
orb
adc
scas
inc
cmpsb
in
add
push
aam
fwait
gs
dec
mov
inc
lcall
cs
xor
ja,pt
daa
out
mov
outsl
adc
or
mov
xchg
inc
mov
mov
and
lret
imul
sub
pushf
jae
cmpsl
mov
ja
lock
jns
sbb
push
pop
jl
scas
test
dec
pusha
inc
and
add
xor
inc
inc
out
and
dec
popf
popa
std
cld
xor
dec
xchg
pop
loopne
test
daa
mov
or
push
adc
in
jno
fisubrl
sbb
jne
sub
add
jp
aam
in
aaa
push
mov
mov
xchg
shll
filds
cmpsb
hlt
addr16
ror
and
gs
sub
inc
loop
xchg
pop
rcrl
xchg
pop
and
cmpsb
inc
inc
adc
mov
into
shl
xchg
sahf
stos
sbb
xchg
xchg
push
sub
aad
mov
out
idivl
jb
icebp
imul
daa
push
dec
scas
xor
into
ror
pop
adc
stos
arpl
sub
call
call
ds
xor
movsb
clc
adc
lea
in
pop
xchg
xchg
imul
sub
pop
arpl
inc
fcmovu
push
inc
mov
ret
add
and
sbbl
jge
and
push
in
popa
pop
pop
xor
jg
bound
adc
test
iret
insb
mov
cmp
aad
jmp
rcl
add
cs
aaa
pop
mov
stos
rep
sub
in
in
cld
xor
adc
popf
push
popf
adc
loope
addr16
lods
test
cmp
inc
inc
push
adc
roll
dec
jle
int3
mov
pushf
pusha
out
imul
lea
dec
xchg
in
mov
cmp
mov
fidivrl
shlb
clc
arpl
jge
or
insb
ja
movsl
jns
mov
mov
dec
jnp
adc
call
gs
mov
shr
lock
cmp
pop
arpl
scas
loopne
addl
aas
fwait
jge
mov
adc
or
or
fcompl
arpl
pushf
push
popa
cmc
mov
ja
outsb
in
sbb
jo
das
push
cli
adc
loop
jp
sub
sub
cmc
xchg
sbb
arpl
inc
or
cmpl
inc
repz
push
mov
sub
add
xor
aas
shlb
sub
push
add
pop
push
jg
test
mov
jns
inc
xor
or
lock
inc
push
fsts
fdivrs
xchg
js
mov
push
pop
out
lret
aad
jns
jbe
pop
sub
mov
ljmp
dec
push
sub
push
and
ss
popa
xchg
rolb
jnp
mov
pop
jns
lahf
js
aas
mov
movb
dec
lahf
sub
mov
cmp
adc
sbb
out
dec
mov
mov
xor
dec
shrl
dec
ss
ljmp
push
pop
sbb
insl
les
call
mov
pop
in
xor
mov
push
mov
fwait
iret
mov
icebp
int
inc
cwtl
pop
jg
jno
bound
mov
test
jns
lock
movsl
sbb
test
insb
mov
aam
mov
pop
aad
sub
stos
out
cmp
xchg
popl
push
loopne
push
xchg
or
mov
jecxz
mov
loop
cmp
xchg
enter
mov
daa
fsub
pushf
mov
jle
hlt
lret
imul
fs
std
cmp
imul
jnp
loope
fnstsw
ds
test
dec
pop
jne
jle
cli
dec
in
jns
and
and
jno
clc
cmp
cmp
cmp
xchg
mov
push
mov
movsb
cmc
xchg
testl
sub
ror
mov
add
xchg
fistps
pop
nop
dec
push
pop
or
movsl
arpl
inc
push
xor
shrl
jbe
je
inc
pop
jg
xor
test
imul
sbb
into
fmuls
pushl
sub
pop
adc
push
pop
add
inc
das
mov
pop
dec
mov
aam
add
icebp
clc
xlat
mov
mov
sbbl
fsubp
int3
dec
or
add
decl
scas
mov
push
adc
insb
pop
push
pop
icebp
jge
int3
insl
ret
test
add
fisubs
imul
int
jae
cwtl
loopne
fsubr
repnz
sbb
pop
js
mov
dec
arpl
and
ds
pop
mov
mov
int3
imul
adc
pop
dec
aas
xchg
xchg
push
pop
jecxz
test
xchg
aam
sub
rorl
mov
pop
cmp
addl
test
std
test
jmp
in
loope
repnz
xlat
inc
cli
xor
add
gs
in
xor
cmp
dec
add
movsb
jb
push
sbb
pop
mov
popf
fs
adc
sub
or
jns
roll
aad
shl
push
pop
ja
sbb
test
rolb
cmp
in
fistpll
dec
pop
inc
push
pop
fiadds
push
das
xor
les
jne
das
cmc
ret
sbb
sbb
mov
push
cs
lea
cmp
int3
fidivrs
xchg
and
inc
scas
int3
cmp
scas
mov
xchg
ret
pop
imul
pushf
mov
iret
mov
adc
jle
sub
int3
jmp
scas
std
adc
ljmp
pop
clc
cmp
mov
sub
out
and
jo
lret
cld
sti
jp
orb
ds
mov
test
mov
ret
shl
cmp
and
int
xor
adc
pop
and
xor
cli
sub
lcall
cwtl
mov
mov
out
stos
adc
into
ret
sub
test
sbb
mov
jl
shl
sub
pusha
push
and
mov
into
clc
add
int
ret
lods
jns
ljmp
pop
mov
xor
push
cmpsl
jp
scas
orb
cmpps
or
pop
mov
ret
and
inc
push
sub
and
xor
jne
ljmp
cmp
in
mov
shrl
pop
lds
mov
and
cmp
pusha
leave
inc
sbb
mov
mov
ljmp
sarl
sub
push
scas
ljmp
mov
xchg
xchg
fbld
xor
cmc
mov
pop
stos
cmp
lock
fimuls
stos
cs
outsl
imul
andl
outsb
mov
push
xor
ja
cmc
jae
js
dec
dec
and
test
ljmp
xor
cld
aaa
lods
cmp
outsb
mov
cmp
mov
push
and
dec
loope
mov
loopne
adc
ret
mov
imul
xor
and
or
xor
ja
sub
push
imul
insl
repz
add
loop
xor
out
pop
adc
pop
push
xorb
adc
push
and
and
jb
pop
cmp
cmc
or
movsb
testl
test
xor
loop
xchg
add
inc
jbe
icebp
or
jnp
adc
in
sbb
or
xor
jns
pop
imul
add
flds
daa
arpl
add
sub
fwait
sbb
pop
pop
pop
push
lds
out
push
jbe
iret
scas
mov
xchg
sub
push
xlat
or
push
jo
mov
jo
mov
xor
xor
lret
int3
lret
jl
add
cwtl
mov
out
and
ror
push
mov
mov
xor
hlt
leave
push
data16
iret
icebp
lods
or
repnz
and
mov
shlb
mov
xchg
xchg
or
push
sbb
mov
pop
mov
sub
fsubrl
lock
inc
or
dec
cs
xlat
addr16
je
and
clc
pop
adc
call
addr16
inc
pop
adc
cmpsb
xchg
lret
inc
loop
mov
negb
loopne
mov
dec
lds
loop
movsl
imul
sbb
aad
add
or
movsb
call
and
insb
test
pop
sub
shrb
repnz
push
repz
jo
lods
fimuls
int3
mov
sub
insb
sub
xor
lahf
mov
in
in
or
scas
loope
or
push
rorb
mov
test
testb
pop
incb
inc
xchg
sti
and
dec
stos
push
out
fwait
cmc
xlat
movzbl
addr16
and
xchg
stos
sub
mov
imul
inc
mov
mov
and
std
mov
cmp
test
push
paddsw
add
cmpsb
clc
xor
jo
jae
mov
sbb
stc
adc
dec
je
mov
adcb
rolb
mov
insl
xchg
pop
mov
fwait
shrl
sub
fnstenv
mov
push
stos
rol
mov
call
sub
xor
in
je
adc
int
jg
cmp
outsl
fisttpl
es
pusha
mov
push
lea
jmp
andb
pop
loope
in
enter
into
sbb
aas
cmp
or
or
jecxz
mov
jecxz
fs
scas
dec
inc
jmp
gs
push
jne
dec
xchg
ds
bound
mov
mov
into
je
stc
les
cmp
jmp
cmp
pop
xor
data16
fdivl
jmp
cmp
out
mov
scas
icebp
adc
push
push
pop
mov
jnp
jg
mov
ss
mov
inc
aam
adc
xchg
movsb
mov
add
sub
fbstp
aam
pop
xlat
push
jnp
mov
daa
clc
pop
leave
sub
dec
call
or
ljmp
in
mov
dec
mov
xorl
xor
jl
adc
fistpl
fbstp
cmp
in
xor
push
arpl
aam
mov
sti
nop
sub
xchg
test
jecxz
pop
jge
mov
test
fcomps
pushf
dec
rorb
sub
jl
add
js
stc
xor
jmp
dec
pop
ret
sub
fadds
rorb
dec
adc
mov
pop
inc
pop
inc
aad
aas
sub
mov
jnp
icebp
js
scas
or
push
pushf
push
cmp
mov
xchg
into
pop
cmp
in
es
push
sahf
cmp
mov
je
ljmp
hlt
shll
push
insl
int
sub
or
pusha
cmc
dec
mov
repnz
out
mov
data16
add
idivl
fwait
call
xlat
subl
pusha
pushf
cmp
mov
lock
mov
movsb
popf
push
ffreep
mov
add
in
pop
inc
lds
aaa
mov
add
lods
mov
xor
dec
scas
push
and
ffree
adc
mov
xorb
jmp
adc
sub
ret
imul
inc
frstor
mov
out
xchg
and
cwtl
mov
std
das
or
pop
pop
ror
cmp
fsubrl
dec
mov
rclb
cli
insb
mov
out
pop
adc
push
jmp
xchg
imul
mov
mov
stc
mov
or
xchg
sbb
mov
xchg
pop
cmp
jns
dec
jne
in
sub
pop
lret
adc
mov
pushf
jb
mov
outsl
add
push
xlat
jno
sub
dec
sub
mov
sbb
roll
sti
outsl
dec
add
xor
in
adc
jmp
fs
adc
sbb
sub
mov
iret
pop
loopne
mov
mov
sbb
pop
out
shr
sbb
push
in
mov
shll
out
jmp
test
sarb
xchg
in
and
add
rcrl
into
mov
push
dec
cld
xlat
cmp
loopne
pop
mov
fwait
out
scas
jo
mov
push
fcomps
ret
push
inc
xchg
lods
mov
mov
jo
push
arpl
push
out
lret
or
pop
and
addl
or
call
daa
and
call
repz
cmp
push
aas
sbb
inc
aam
roll
mov
xchg
mov
sub
mov
mov
inc
mov
pop
xchg
nop
and
bound
inc
or
and
jmp
cmp
stc
rcll
dec
xor
mov
mov
lock
add
divl
xlat
cmp
sbb
mov
cmp
inc
add
es
stc
negb
test
mov
or
sbb
mov
xchg
bnd
mov
sub
pandn
aad
sbb
shrb
imul
fiaddl
add
cli
lcall
xchg
popl
imul
inc
stc
push
adc
mov
into
add
mov
lret
cwtl
hlt
jb
pop
inc
cmc
mov
sbb
vmovhpd
xchg
pusha
jl
or
je
pop
lcall
icebp
sbb
adc
mov
daa
rorb
pusha
jge
lret
inc
jmp
pop
mov
jp
cmc
rcrb
repz
push
rclb
xchg
lahf
jae
mov
clc
mov
sub
xor
mov
rcll
mov
orl
sub
push
movsb
sbb
and
mov
mov
hlt
and
push
scas
repz
sub
jecxz
rolb
stos
lods
pusha
sbb
xchg
pop
sub
adc
mov
lahf
lcall
jae
jbe
lock
push
xchg
jno
add
fucom
movsb
inc
insl
hlt
dec
sahf
outsl
xor
test
pushw
pop
outsl
pop
xchg
mov
std
push
je
mov
daa
aad
sub
fstps
xchg
popa
adc
xorb
shll
sub
mov
sbb
out
popf
and
adc
xor
cld
jae
add
mov
mov
test
sbb
dec
loope
je
pop
add
repz
push
xchg
sub
out
cld
cwtl
cmp
adc
je
mov
movsb
fsubs
pop
cmp
bound
xor
push
fcompl
int3
sub
test
leave
test
add
push
and
push
jne
enter
jns
repz
insb
adc
loopne
lods
sahf
bound
aaa
pop
xchg
sarl
dec
lcall
ss
mov
sahf
add
lds
sbb
inc
and
adc
stos
out
mov
jg
jnp
cmp
clc
push
dec
out
push
rcl
fdivl
xchg
jnp
xor
add
lods
loop
jno
add
int
int3
rorl
jmp
test
add
xor
jne
lahf
pusha
push
dec
loop
xor
add
lds
inc
xor
js
jae
shlb
subb
add
and
push
add
sub
or
inc
fsts
mov
mov
and
push
mov
cwtl
pop
iret
cmp
push
data16
jno
daa
pop
ficoml
fcomip
out
movsb
call
pop
lahf
hlt
scas
in
adc
add
xor
and
push
cmove
je
fs
xchg
iret
test
mov
movsb
call
pop
lahf
hlt
scas
in
adc
add
xor
and
push
cmove
je
fs
xchg
iret
mov
aam
movsb
incl
pop
hlt
scas
and
adc
add
les
jg
andps
je
mov
or
fucomip
out
test
aam
aam
hlt
scas
fs
sahf
outsl
and
and
fwait
shlb
mov
or
sbb
jno
popa
xor
xor
jle
pop
add
scas
loope
rorb
mov
mov
xor
inc
pop
xor
and
dec
add
scas
loope
rorl
mov
fbstp
popa
sbb
push
jno
sub
xor
outsb
sub
fcoml
adc
mov
lock
push
cmp
mov
fwait
movsb
scas
insb
scas
movsb
in
adc
inc
hlt
push
add
sahf
rorb
int3
or
jg
and
idiv
push
je
loopne
ficomps
pop
mov
sub
sbb
sbb
das
xor
pop
or
inc
xchg
ret
ss
stos
icebp
lcall
jno
cmpl
push
leave
test
lahf
add
or
outsl
push
inc
xorb
pop
fs
fistps
rclb
add
inc
pop
bound
outsl
xchg
daa
mov
pop
xor
mov
inc
push
mov
mov
and
int3
loopne
jle
das
adc
mov
rorl
mov
fbstp
popa
aas
push
cmovno
xor
jg
dec
add
test
fdivp
test
mov
stos
in
sbb
es
and
cmp
cmp
mov
aam
lds
and
dec
sub
dec
jp
push
jmp
xchg
iret
in
mov
loope
lock
fbstp
popa
aas
push
cmovno
xor
jg
dec
add
scas
loope
rorl
mov
fbstp
popa
aas
push
cmovno
xor
jg
dec
add
scas
in
pop
loopne
pop
ret
jl
cwtl
jne
data16
cmp
sarb
enter
adc
hlt
movsl
mov
lea
push
mov
repz
std
fisttpl
mov
stos
and
pop
stos
mulb
int3
mov
jmp
out
push
push
sbb
test
push
and
enter
sub
int
fnstenv
iret
mov
and
outsl
rclb
aad
dec
je
nop
sti
mov
fs
jnp
in
pushl
arpl
ror
sub
nop
test
in
mov
lods
loop
adc
or
xlat
out
xchg
mov
fstl
lods
mov
mov
jl
jb
scas
xchg
loope
lret
mov
pop
shll
outsb
stc
inc
shr
mov
mov
push
sarl
fcmovnu
nop
dec
jae
push
pop
gs
lock
pop
xchg
xor
adc
mov
jno
xchg
nop
std
shlb
fdivs
js
js
fcompl
cmp
push
fsubp
fildll
cmp
push
ret
push
js
dec
push
mov
in
mov
scas
inc
or
dec
sbb
outsb
jb
div
sub
jo
dec
pop
int
adc
mov
fs
lahf
push
and
xchg
insb
js
mov
or
jns
adc
sbb
adc
sahf
cmc
pop
movsb
add
scas
jp
sub
nop
xchg
out
pop
jl
and
into
fmull
mov
xchg
cmp
push
in
push
sub
cmpl
dec
enter
xchg
push
pop
jl
push
push
dec
cwtl
push
adc
sbb
stos
cmpb
push
mov
lret
outsb
xchg
mov
or
js
and
mov
ja
and
adc
mov
aad
or
into
xor
push
xchg
testl
push
mov
fiaddl
ret
pop
addr16
in
fsubl
mov
push
das
jnp
add
lock
cmc
movsl
xchg
pop
shl
pop
hlt
int
bound
insb
mov
outsb
in
sub
out
cmp
add
mov
out
sbb
jnp
or
out
mov
inc
adcb
push
mov
in
lock
xchg
xchg
adc
cs
and
lods
loop
lahf
dec
ss
out
sub
and
in
pop
loop
fimuls
ss
xor
cmp
stc
gs
adc
mov
les
lea
fidivs
mov
jb
add
push
mov
int3
hlt
mov
out
push
fdivs
inc
ja
mov
xchg
xor
outsl
xor
cmpsl
lock
js
xchg
mov
movsl
add
in
xor
call
pop
stc
mov
adc
jl
sbb
jb
je
in
jb
inc
fwait
and
rorb
stos
push
mov
xor
dec
xor
dec
icebp
adc
psubsb
mov
add
mov
hlt
dec
fwait
push
std
mov
int3
aas
loope
dec
xor
fsts
pop
jb
cmp
sub
out
in
fisubrl
cmp
ljmp
cmp
xor
js
push
jl
jl
repnz
outsl
inc
xor
popl
push
or
ljmp
movsb
gs
mov
add
adc
mov
jae
mov
jns
mov
sub
unpckhps
test
in
andl
roll
lret
sub
nop
arpl
insb
jns
add
clc
pop
mov
mov
adc
stc
iret
js
jno
in
in
bound
aad
xor
aad
jne
sti
icebp
jns
lret
call
fnstcw
dec
in
dec
es
cwtl
adc
pop
ljmp
stc
scas
repz
frstor
cmpsl
adc
repnz
xchg
dec
lea
mov
sub
mov
test
add
add
daa
cmp
push
and
jae
push
cmpsl
add
lods
les
test
xchg
in
leave
mov
test
sub
shll
xchg
mov
clc
lret
push
iret
push
and
aaa
add
repz
sub
insl
cmpsb
imul
ds
xorl
leave
rol
insb
iret
jb
mov
jno
push
aam
insb
and
sbb
pop
pop
add
int
fcoml
ret
dec
clc
adc
mov
jo
adc
bound
ja
mov
test
push
jecxz
mov
out
cmp
sub
aas
fnstenv
sbbl
mov
dec
daa
aas
in
fcompl
and
shr
xor
jmp
jmp
aas
stos
push
scas
sbb
and
or
cwtl
icebp
adc
dec
xor
sarb
pop
je
cld
test
pop
rcrl
fsubl
jae
adc
out
mov
sbb
lret
and
sub
sbb
push
xor
cmc
pop
repz
rolb
push
sbb
add
push
test
xchg
repz
add
loope
fists
mov
cmp
adc
jae
xor
pop
mov
lahf
dec
cltd
fstpl
push
or
inc
mov
jne
adc
dec
jnp
cwtl
stos
or
inc
mov
push
push
jp
jae
jno
inc
pushf
pushf
and
loop
push
pop
or
loope
pop
or
jmp
aas
xor
xor
and
aaa
cld
sbb
inc
jmp
or
testb
out
out
sbb
cmp
loop
loope
clc
xor
mov
std
pop
pushf
mov
hlt
or
lea
movsl
clc
shr
fsubs
dec
jb
cs
mov
lret
mov
enter
adc
dec
mov
testb
pop
call
gs
mov
in
insl
and
xor
sub
int
stos
mov
clc
insl
inc
imul
push
mov
mov
cmpsl
adc
sub
inc
cltd
lods
push
imul
inc
or
mov
jg
jmp
inc
add
xchg
jmp
cmp
cld
lods
fwait
leave
mov
popf
mov
dec
lret
lods
arpl
or
dec
in
fbstp
sub
lods
stc
insl
dec
cmp
fmuls
pop
pushf
scas
stos
loope
dec
and
popa
inc
xlat
inc
insb
cmp
xchg
xchg
xchg
xchg
mov
les
jne
dec
pop
bound
add
and
bound
sub
or
popa
iret
jg
cld
mov
mov
into
das
imul
fisubrs
add
jmp
pop
mov
int
xchg
push
push
sahf
insb
xor
jo
mov
cmp
inc
xchg
sbb
jp
gs
jge
push
sub
or
xor
movsb
cmp
int3
inc
call
inc
adc
ret
dec
xor
mov
test
mov
jg
dec
pop
inc
xorb
mov
push
test
dec
stos
arpl
movsb
pop
push
fstpt
mov
cmpsb
mov
cmp
out
inc
mov
or
inc
in
je
flds
in
fldcw
scas
sbb
pushf
jp
or
adc
adc
movzbl
mov
enter
lahf
shrl
xchg
sbb
ja
pop
dec
rol
adc
scas
test
lret
sub
jecxz
cmc
xlat
movsl
mov
xchg
mov
and
fidivrs
jge
and
adc
and
sub
shlb
xorl
ficoml
push
pop
sbb
lahf
pop
sub
sub
aas
shl
iret
lahf
and
ss
dec
stos
repnz
sbb
dec
jo
mov
shlb
add
aam
jo
loope
jmp
add
xor
jecxz
dec
mov
ja
iret
in
push
push
and
dec
sahf
aad
xchg
pop
mov
sub
adc
les
push
fmul
imul
pop
lret
add
fsubrl
sub
mov
sbb
jbe
lret
xchg
push
mov
xchg
imul
call
das
cltd
dec
jne
xchg
fcmovu
hlt
iret
or
loopne
or
xlat
or
add
cli
xor
mov
insl
fldenv
adcb
push
loop
jb
in
in
adc
loop
rcrl
dec
ret
into
pop
inc
sub
mov
mov
aam
test
xorl
loop
cmc
loop
pop
adc
fdivs
cmp
and
leave
filds
mov
mov
mov
clc
add
rolb
test
dec
or
sti
pusha
inc
or
fwait
mov
movsl
call
mov
mov
xchg
cli
fcmovnb
rol
jae
testl
repnz
movsl
sbb
ds
stc
inc
push
jb
xor
jmp
divb
mov
push
jno
push
cs
test
loopne
xor
fbstp
pop
dec
je
add
loope
sub
xchg
fld
les
push
cltd
xchg
scas
iret
push
in
sti
adc
cmp
testb
andb
faddl
bound
and
lret
imul
cmp
sbbb
push
arpl
xchg
push
mov
cli
mov
adc
xchg
fmuls
popf
sbb
dec
dec
fadd
mov
jg
push
jp
jp
pop
mov
call
in
test
imul
icebp
dec
mov
sub
outsb
in
cmc
mov
and
neg
fisubrs
ds
call
enter
cmp
and
sahf
sbb
xor
add
scas
inc
aad
and
insl
mov
sti
mov
lods
cli
lea
mov
mov
fdiv
outsl
loope
addl
mov
shl
sbb
icebp
add
mov
repnz
pusha
fldenv
repnz
sti
test
lret
hlt
adc
notl
xchg
das
jb
movsl
stos
dec
dec
jl
out
fwait
push
outsb
push
mov
mov
insl
lock
adc
icebp
loopne
sub
ja
jno
xlat
pop
push
into
push
push
lret
add
ficoms
or
pop
and
sti
xchg
push
jl
test
add
cld
cmp
fisubrs
shlb
push
adc
orb
aad
jle
fnstcw
loope
mov
xor
ss
jnp
mov
nop
dec
aaa
rcr
lret
sub
inc
test
or
jae
out
inc
fiadds
xchg
bound
leave
fnstenv
mov
out
inc
pop
adc
loopne
insl
sbbb
cwtl
fcoms
inc
cmp
push
mov
push
bound
inc
mov
andl
pop
and
ret
lret
xchg
popa
pop
xchg
enter
fwait
pop
imul
test
paddd
data16
xlat
hlt
rclb
nop
pushf
mov
cltd
or
mov
pop
les
addb
enter
addr16
aad
icebp
dec
or
xor
ret
and
mov
and
mov
cmc
push
sahf
inc
jp
jmp
jecxz
icebp
je
mov
test
gs
das
pop
or
jae
adc
xchg
sbb
fsubl
int
test
jl
mov
mov
test
pop
ljmp
xorb
dec
ficoml
push
shlb
or
mov
mov
orl
repnz
xor
sub
mov
and
mov
inc
test
sub
aad
jno
or
add
call
or
icebp
ret
jns
pop
int3
cld
jecxz
je
adc
mov
push
mov
ja
aam
xor
js
fstps
jge
fistl
ljmp
neg
cmp
gs
lret
div
repz
xchg
and
or
cmpsl
cli
lahf
jp
jno
xor
jmp
das
sub
or
or
aam
jmp
sub
push
cmp
and
lea
add
ljmp
cwtl
push
shl
fmul
mov
or
movb
sub
add
in
jb
lcall
rcr
lds
movsb
js
stos
inc
not
and
ffreep
and
jp
xchg
scas
lock
fisttpl
movsl
ficompl
xchg
pop
fdivl
clc
in
into
jg
jno
popf
pop
inc
mov
mov
aam
test
mov
cmpsl
jge
in
loopne
in
cli
int
mov
out
xchg
jno
and
div
sub
push
mov
in
out
bound
test
fdivl
mov
fnstcw
or
pop
fs
xchg
mov
sbb
loopne
inc
addl
xor
jns
lcall
mov
and
jmp
add
sub
xchg
xor
pop
mov
add
pop
arpl
fs
out
mov
sbb
xor
pop
xor
in
push
stc
jno
sub
jl
inc
and
pusha
push
and
adc
clc
mov
rcl
mov
mov
mov
xchg
push
ja
mov
lcall
aaa
or
cmp
leave
negb
sarl
ds
jns
pushf
shll
call
nop
addr16
adc
das
xlat
bnd
sti
mov
cltd
mov
mov
inc
jmp
push
lahf
adc
lds
add
stos
sti
push
or
outsb
call
add
inc
outsl
jmp
pop
inc
sbb
lods
out
cltd
aas
shl
jmp
sti
popa
mov
outsb
and
sub
into
jns
jno
jecxz
push
fisttpl
bound
shrl
cld
popf
setp
xor
rcll
push
inc
cmp
loope
pop
mov
dec
jns
pop
mov
jmp
fistps
adc
loop
in
leave
sbb
out
xor
adc
mov
cs
fwait
mov
hlt
xchg
mov
fcmovnb
cwtl
call
cld
ds
sbb
push
out
ficoms
loopne
jne
push
inc
jo
or
mov
outsb
sahf
fdiv
dec
inc
ja
mov
and
testl
fwait
outsl
ret
cmpsl
aam
inc
xchg
imul
call
dec
jg
xor
in
mov
je
arpl
pop
fnstcw
dec
add
movsl
xorl
test
jns
xlat
mov
cld
push
addr16
rcrb
mov
pop
inc
popf
jmp
out
xchg
fidivrl
je
inc
lods
aas
call
jne
stos
xor
jge
adc
pop
mov
inc
dec
pop
hlt
mov
xchg
sbb
cltd
jle
jmp
sub
movl
xchg
outsl
ljmp
loop
xor
pop
sub
or
fs
int
int3
dec
in
xchg
shlb
add
cli
loop
fldenv
repz
cmp
jmp
pop
int3
sbb
mov
cmp
cmp
aas
jo
xor
popf
push
xchg
cld
je
jns
test
ret
push
or
xchg
pop
sbb
out
push
mov
scas
sub
mov
mov
add
fdivs
fsubr
rep
out
dec
push
sub
xchg
lock
pusha
stos
scas
add
pop
test
ficoms
test
stc
or
rclb
jo
int3
in
mov
test
fstpl
cmp
mov
ljmp
incb
sbb
dec
sub
inc
mov
cmp
rclb
aaa
ret
fs
mov
mov
lea
ret
xchg
xor
jo
push
sub
or
jge
and
sub
xchg
dec
daa
lea
ret
sti
mov
mov
lahf
mov
dec
dec
jnp
adc
hlt
repnz
stos
shl
insl
loope
adc
xchg
mov
inc
pop
test
mov
into
sti
and
pop
sbb
sub
pusha
addb
mov
cmp
lret
les
pop
pushf
mov
jmp
pop
cld
sub
in
bound
sbb
cltd
xor
inc
xchg
bound
lret
test
pop
lods
dec
imul
adc
filds
test
mov
xor
sub
cmp
imul
mov
lock
or
pop
xorb
je
ljmp
fstps
ficomps
pop
mov
mov
les
fisttpll
into
or
rorl
xor
leave
daa
mov
in
dec
mov
ret
sub
gs
hlt
stc
insl
sbb
cmp
or
out
xor
repz
jmp
push
xor
jbe
nop
dec
xchg
inc
aaa
mov
int3
scas
inc
cvttps2pi
cmp
adc
and
jle
inc
in
fwait
dec
imul
pop
inc
mov
lock
xchg
jno
mov
sbb
add
cmp
xchg
pop
cmp
cmp
pop
xlat
mov
adcb
pop
aad
jle
call
xchg
push
xchg
mov
stos
scas
das
sub
inc
xor
aad
andb
mov
sub
idivb
cmc
je
incb
loope
repz
dec
imul
cltd
sbb
ret
std
adc
leave
mov
call
shrb
repz
int3
mov
pushf
mov
mov
aaa
fldt
lcall
repnz
dec
sbb
sub
add
adc
dec
lods
outsb
mov
jmp
std
mov
pop
pop
dec
sbb
jae
hlt
std
pop
sub
mov
pop
xchg
mov
jns
jg
and
mov
lret
mov
xor
out
and
and
inc
jp
xlat
adc
clc
dec
out
and
lcall
sti
dec
pushf
cmp
subb
mov
xor
jo
adc
sub
mov
test
fwait
pop
jnp
test
or
das
inc
call
stos
lret
nop
dec
mov
push
mov
push
and
mov
mov
les
shll
or
into
pop
aas
mov
ss
push
mov
out
iret
popf
stc
enter
iretw
std
pop
mov
loop
mov
xchg
xchg
dec
push
adc
cmc
aam
jecxz
dec
cmp
push
pop
cmc
aaa
clc
fildl
xlat
sbb
or
int
dec
mov
adc
mov
stc
fnsave
punpcklbw
or
aas
jge
stos
sub
dec
xchg
aad
dec
imul
cmp
test
cmp
mov
out
lret
push
pop
and
push
leave
cs
push
out
push
push
pop
jo
mov
movsb
xor
movsl
iret
std
add
lcall
in
push
shlb
xchg
cltd
xor
loop
pop
clc
pop
cmp
sti
sbb
push
test
and
mov
sub
push
icebp
jg
imul
push
aas
in
and
shrb
stos
xchg
jge
scas
lods
cmp
and
scas
mov
sahf
jb
jl
pop
jno
ret
jl
mov
mov
scas
addr16
ds
cmp
jae
iret
xchg
sub
sbb
fnstsw
scas
mulb
popf
enter
jnp
bound
adc
rolb
stos
pop
mov
cld
push
inc
cmp
dec
jno
mull
sub
sub
scas
xor
cmp
add
adc
scas
xor
xor
scas
add
je
ljmp
mov
test
fmul
ffree
dec
cwtl
jp
xchg
fmull
shl
xchg
fnclex
mov
mov
and
call
enter
mov
or
mov
rcl
ret
jle
mov
or
test
jns
movsb
fsubr
xor
pop
xchg
xchg
repnz
fnsave
aas
adc
dec
lea
mulb
je
mov
mov
sub
and
mov
gs
dec
incl
ja
lret
lret
jne
mov
fistpll
lcall
cmp
repz
fldcw
mov
xor
cmp
xor
inc
imul
jno
mov
clc
stos
jg
das
mov
nop
insl
sbb
cmpsb
mov
sub
call
je
fs
or
es
push
jns
xorb
mov
scas
in
push
sbb
mov
outsb
adc
iret
fstpl
loop
bound
imul
sub
pop
sbb
lds
add
pop
lret
push
test
repz
push
je
pop
repnz
lahf
gs
push
adc
add
movsb
mov
fiaddl
out
scas
mov
jecxz
or
addb
sub
mov
into
dec
push
hlt
sbbl
jnp
jle
mov
xor
xor
mov
cwtl
out
popl
push
ret
out
ljmp
mov
dec
mov
pop
xchg
cmc
pop
sbb
scas
push
repnz
in
roll
jp
icebp
fnstsw
sbb
pusha
movsl
aad
inc
mov
int3
adc
jp
repnz
lret
leave
push
mov
mov
sub
insb
add
push
enter
cs
stos
push
rclb
inc
dec
xchg
cmp
test
in
std
pop
imul
push
mov
mov
mov
fbstp
popa
aas
push
cmovno
xor
jg
dec
add
scas
loope
rorl
mov
fbstp
popa
aas
push
cmovno
xor
jg
dec
add
scas
loope
rorl
mov
fbstp
popa
aas
push
cmovno
xor
jg
dec
add
scas
loopne
rorb
mov
pop
jno
popa
xchg
sti
cmovno
out
sub
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jl
repz
pop
jl
jmp
add
or
pop
push
add
add
or
add
xor
mov
popf
add
add
add
add
add
cmp
jb
mov
inc
add
add
add
add
add
mov
leave
add
add
add
add
add
sub
dec
add
add
xor
mov
outsb
add
add
pop
add
add
and
add
add
add
add
or
add
add
add
add
add
dec
add
add
add
add
cmp
insl
add
add
pop
add
add
add
add
add
add
jbe
imul
add
add
add
adc
sub
add
loop
xor
imul
add
add
add
add
add
add
addb
add
add
add
sub
add
add
add
add
repz
add
ret
add
add
mov
add
adc
sub
lds
outsb
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
loop
aas
add
add
add
add
add
add
add
add
cmp
lds
into
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
popa
add
add
add
add
add
or
add
add
add
add
jo
xor
icebp
add
dec
add
cmp
push
add
cwtl
add
sbb
scas
add
adc
aas
add
add
add
add
cmp
loop
pop
add
add
add
jae
repz
add
add
add
add
add
add
inc
add
clc
add
add
incb
dec
add
push
add
add
add
jae
lcall
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
dec
add
lds
or
jns
addl
add
add
add
add
add
add
push
add
add
xor
pop
add
add
add
sub
add
add
add
add
add
add
test
xlat
add
add
add
add
add
xor
add
add
repz
insl
add
xor
add
adc
mov
add
add
add
add
out
add
add
je
add
add
add
add
jnp
incb
sub
add
insl
add
sub
add
add
add
add
add
add
inc
add
add
add
sub
mov
movsb
add
stc
add
out
push
add
add
add
loop
pop
add
add
add
add
add
icebp
add
add
add
add
addb
add
jae
aas
add
add
add
add
add
sub
cmp
and
sbb
stc
imul
pop
pushf
mov
mov
mov
mov
iret
mov
or
cmp
dec
int
add
jmp
sarb
sarl
jnp
out
add
jp
mov
pop
adc
jnp
into
xchg
push
ret
sbb
mov
cltd
jmp
pushf
or
xchg
jge
xchg
sub
or
xchg
adcl
aas
repnz
pop
xor
arpl
enter
cmp
pop
adc
inc
inc
xchg
loop
xlat
push
dec
lods
lea
lock
pop
fcmovnu
in
or
stos
shlb
push
push
jecxz
dec
das
and
jo
icebp
arpl
sub
and
xchg
insl
mov
or
xor
sbb
mov
repz
stos
xor
lea
sbb
push
bswap
nop
push
lea
or
xlat
cwtl
fstp
pop
fucomip
fcomp
cld
sub
cmpsl
or
pop
fwait
stc
jle
rorb
loopne
cmp
cmp
inc
fcmovne
sbb
mov
les
idivl
or
loope
adc
lret
push
and
inc
or
or
in
sbb
rclb
lock
and
push
mov
shlb
rcl
mov
sahf
into
or
test
shlb
jae
mov
inc
fstps
loop
test
inc
mov
call
int3
daa
loope
push
cbtw
pushf
hlt
ljmp
or
popf
enter
cmp
out
jns
jle
lea
in
pop
pop
add
jb
cmp
ss
nop
movsb
fndisi(8087
add
out
xlat
push
mov
dec
xchg
data16
cld
sub
mov
insl
xchg
sub
scas
pop
jl
stos
test
push
lcall
mov
inc
dec
sub
mov
jge
enter
cmpsb
xor
clc
push
jo
popa
pusha
clc
shl
lcall
ss
stc
and
data16
je
add
mov
pop
add
ljmp
push
les
cwtl
mov
mov
jmp
iret
mov
jbe
pop
stos
hlt
dec
pop
mov
je
cmp
cmp
xor
std
sub
cltd
inc
ficompl
sub
mov
or
jnp
in
jp
divl
mov
or
mov
clc
sarl
dec
inc
add
jmp
sarl
arpl
xor
lds
dec
js
cmp
es
aad
jge
sti
sti
dec
jl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
