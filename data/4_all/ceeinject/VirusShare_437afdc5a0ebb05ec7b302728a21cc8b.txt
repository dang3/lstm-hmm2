call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
or
stos
cmp
cwtl
add
jge
mov
sub
push
push
lcall
cmp
cli
insl
ljmp
lods
sub
jp
push
lcall
and
cli
jne
sbb
pop
aam
enter
test
ljmp
pop
push
test
pushf
add
or
xor
xor
loope
iret
or
jmp
fstpt
lahf
subb
arpl
cmpsl
inc
cmpsl
lods
mov
jb
xchg
add
mov
lret
faddp
inc
jbe
pop
lahf
and
lea
insb
aad
in
mov
das
mov
lcall
dec
sbb
ljmp
push
ret
icebp
sbb
adc
mov
jmp
ret
gs
push
sub
iret
and
mov
mov
aad
mov
movl
sub
dec
push
cmpsl
inc
cs
cmp
lds
mov
fimull
pop
cli
insl
ljmp
mov
movsb
pop
aad
lds
push
out
or
in
cltd
dec
scas
cmp
add
popf
push
test
push
fists
sbbb
lds
into
pop
loop
mov
sbb
clc
inc
enter
mov
jne
in
or
mov
jle
pop
cli
insl
ljmp
lods
sub
jp
push
lcall
cmp
cli
insl
ljmp
lods
sub
jp
push
lcall
aas
test
mov
push
popa
mov
cmp
push
mov
in
cld
lods
das
mov
pop
or
add
js
push
hlt
pop
mov
jns
jle
dec
adc
rorl
shrl
push
test
mov
in
popf
mov
pop
shrl
jne
movsb
xchg
xchg
xchg
or
fsts
lcall
cmp
fs
xchg
pop
add
or
sbb
adc
push
cltd
adc
inc
cmpsb
push
mov
push
les
xchg
jnp
lock
adc
cwtl
dec
lret
test
pop
es
mov
ret
mov
shrb
adc
jmp
popa
adc
mov
movsl
xchg
sbbl
in
add
cmp
fistps
cld
inc
dec
mov
fneni(8087
mov
xor
cmp
and
dec
mov
mov
outsb
lcall
sub
loopne
clc
dec
call
outsb
mov
adc
sti
ja
cmp
pop
cli
pop
pop
jns
jg
iret
dec
decb
inc
cltd
lahf
xchg
push
fisubrs
sub
fmuls
fs
test
fadd
mov
mov
data16
ret
mov
call
inc
jbe
int3
pop
fidivrs
ret
xchg
jo
aad
dec
ds
std
sub
inc
pop
sub
jae
cmp
out
and
inc
add
xchg
es
dec
mov
mov
lea
xor
aad
subb
sub
cmp
sub
inc
push
add
in
mov
mov
jmp
imul
push
lret
in
push
jae
dec
movsb
xor
jmp
andl
fwait
inc
andl
push
and
pop
mov
cld
sbb
or
sub
es
call
jmp
mov
sub
jmp
mov
and
mov
cmc
xchg
jecxz
clc
mov
or
inc
into
pop
xchg
xchg
mull
mov
in
ficoml
jb
movl
mov
sub
fs
sub
add
pop
xlat
sbb
ljmp
movsl
imul
push
enter
dec
bsr
lock
sbb
fisubrs
loope
jbe
into
pop
loopne
es
dec
mov
cwtl
fistpl
cmp
sub
int3
push
jae
pop
mov
rolb
lods
fdivrl
jnp
mov
fsts
std
insb
fs
sub
xor
cmc
clc
loop
mov
xchg
ss
xchg
sar
fistps
popa
xchg
repnz
in
shll
dec
pop
jb
mov
ret
iret
outsl
pop
push
inc
cmc
pop
or
cmp
movsb
mov
shl
lods
mov
push
push
fxch
int
push
shrb
pop
sub
and
lcall
aas
movsl
call
cli
cmpsl
push
sbb
xor
dec
loope
mov
adc
insb
in
ja
push
push
cmp
fstpl
push
loop
push
push
adc
pop
jge
xchg
push
pop
leave
mov
mov
shl
xchg
fsub
in
inc
ja
loop
cmp
push
cld
mov
sub
inc
inc
mov
inc
loop
data16
outsl
rcrl
fwait
cmc
lret
test
xchg
or
out
push
test
adc
dec
cmp
xchg
sub
aas
push
inc
lret
xchg
mov
test
pop
dec
add
ret
lcall
or
les
jp
xor
dec
pop
adc
push
xor
adc
push
fisubl
inc
lret
aad
arpl
sub
je
sbb
dec
mov
cmp
mov
jns
addr16
xor
or
or
int
xor
dec
jo
dec
mov
imul
cltd
pushf
mov
mov
cld
shrb
sbb
orl
pop
xorb
mov
sti
stos
adc
cmpsl
add
cmp
dec
adc
cli
sub
scas
pop
jnp,pt
repnz
int3
fsubl
data16
add
ljmp
dec
out
adc
push
push
int
ds
outsl
fsubrs
adc
scas
inc
mov
xchg
mov
dec
or
pop
xor
xchg
sub
fstps
add
and
clc
dec
pop
fnstcw
pop
push
mov
test
pop
sbb
push
in
out
call
repnz
lods
lock
test
test
pop
out
and
mov
sbb
nop
and
xchg
xlat
je
mov
mov
scas
popa
cmp
lods
lret
jae
adc
mov
and
mov
and
sbb
jg
ficoms
fidivrs
scas
popa
jecxz
notl
addb
cmpsl
imul
xor
sbb
xchg
jb
cs
sti
sub
add
inc
cmp
cltd
lds
jg
popa
xchg
pop
test
insb
xchg
fs
sbb
push
ret
cmp
aad
cmp
mov
inc
in
enter
fmul
insb
ja
push
or
mov
pop
sbb
out
cmp
loop
js
mov
fldt
dec
cmpsb
popa
sbb
mov
adc
cli
movsl
inc
cmp
js
lret
nop
hlt
cmpsb
das
mov
dec
and
sarb
int3
xor
call
rcrb
insl
dec
mov
adc
std
sbbl
popa
mov
add
xchg
mov
in
jae
or
inc
lcall
jnp
mov
cmp
cmp
inc
int3
jp
push
cmp
ret
mov
jae
fs
sub
fstl
push
lahf
adc
testl
mov
mov
imulb
push
adc
sahf
mov
cmp
mov
sub
add
jno
add
std
ret
mov
push
cmp
mov
dec
xor
push
sti
add
jae
rclb
pop
adc
mov
in
mov
inc
stos
icebp
or
jg
add
push
nopl
out
jno
lea
leave
lock
lock
movsb
mov
dec
add
movsl
or
push
cmp
pop
ja
lcall
jle
loop
mov
je
fdivs
cmpsl
push
ljmp
aad
adc
lea
cs
adc
daa
xchg
dec
push
xchg
add
mov
mov
jo
lods
pop
dec
fimuls
repnz
push
ret
or
jg
fidivs
rcrl
mov
mov
int
rorl
cwtl
xor
mov
cmp
in
mov
or
ret
dec
push
inc
jns
jecxz
xchg
shll
fst
leave
sub
arpl
cmp
dec
imul
cmp
sti
es
enter
insb
jl
inc
aas
imul
rclb
test
push
lods
test
std
cmp
std
std
xchg
iret
adc
mov
testl
xor
leave
adcb
aam
stos
sti
loope
pop
les
xchg
jnp,pn
sub
enter
mov
inc
repz
push
xor
push
test
sub
test
dec
xchg
mov
fucomp
imul
adc
and
or
mov
xor
fs
adc
in
sbb
std
jl
jnp
push
lock
jl
ret
mov
sbb
aas
in
sarl
out
aaa
jb
popf
lcall
xchg
xchg
movsb
sub
lcall
cmp
cmp
rorb
jnp
mov
lcall
xchg
sbb
insl
into
jg
push
into
nop
jl
cmp
movsl
dec
cltd
xor
repnz
es
xor
cmpsl
rol
je
pop
loope
enter
push
pop
test
test
or
hlt
test
jmp
nop
or
inc
shrl
xor
mov
mov
leave
and
enter
inc
mov
movsb
push
shrb
xchg
cwtl
lods
popa
push
xchg
xor
add
push
test
xlat
ret
add
lea
int
jl
and
xchg
or
xchg
repnz
arpl
es
lods
mov
xchg
adc
cmp
mov
pop
mov
and
addr16
movsl
sti
loopne
inc
mov
cli
dec
fisubrl
fnstcw
sahf
fcomps
xchg
mov
pop
jp
push
rcl
lds
sbb
push
inc
mov
or
imul
jno
jae
xchg
pop
inc
sub
cmp
and
sub
sbb
int3
loopne
loopne
daa
in
pop
mov
pop
mov
adc
mov
arpl
fistps
ds
jecxz
add
lcall
cli
mov
pop
dec
ror
ds
in
sarl
xchg
out
mov
bnd
adc
in
jne
push
lock
inc
fnstcw
int3
fnstenv
clc
test
shrb
lods
mov
push
mov
cmpsb
lahf
adc
lods
pop
inc
push
or
mov
pop
enter
test
pop
jle
mov
loope
popa
arpl
test
push
ja
adc
cmp
clc
dec
out
mov
pop
pop
sub
push
je
mov
decl
xchg
lock
daa
fcmovbe
mov
mov
jmp
jns
arpl
lods
pop
inc
xchg
rol
cld
dec
mov
push
imul
clc
jnp
scas
cmp
mov
cmc
test
fwait
xchg
add
imul
scas
or
in
dec
repz
xchg
or
inc
cmp
and
cmp
call
or
test
pushf
loopne
pop
lods
push
iret
pop
mov
rcrl
lret
int3
or
and
adc
arpl
sbb
add
xlat
addb
cltd
xchg
xor
mov
movsb
daa
xor
out
pop
pushf
push
call
leave
int3
cli
fnsave
sbb
dec
stos
nop
add
push
lea
push
notl
ljmp
popa
dec
std
jle
jp
sbb
and
roll
and
xor
jge
inc
adc
jns
test
jg
addr16
push
out
repnz
add
frstor
hlt
loopne
xor
xchg
xorb
push
inc
push
dec
stos
inc
data16
fstp
faddl
sbb
sbb
repnz
lock
sbb
rcrl
add
inc
inc
fiadds
xchg
mov
inc
xchg
inc
fmuls
mov
and
push
outsb
mov
mov
fwait
insb
ror
xchg
shr
in
in
jge
rcrb
fistpl
fwait
sub
cmp
lods
or
ljmp
cmp
mov
push
pop
loopne
xor
repnz
or
in
add
clc
mov
ja
jne
xchg
mov
arpl
cmpsb
sbb
iret
push
push
sbb
cmp
sub
cmp
fldenv
dec
and
scas
xchg
in
sbb
mov
mov
enter
movsl
test
mov
inc
push
test
shlb
cltd
xchg
or
cld
xchg
cs
popf
push
sub
mov
dec
jbe
in
jle
nop
push
mov
push
cmp
loope
std
movsl
push
dec
repnz
fdivp
pop
add
jb
add
xor
sub
into
inc
lods
lret
sub
inc
xchg
or
shll
int
mov
mov
imul
leave
movl
inc
sub
scas
stos
cmp
xor
ror
add
add
mov
sub
or
arpl
mov
sbb
neg
icebp
jle
sub
pop
cmp
and
adc
and
pop
popa
scas
cli
mov
loopne
cmp
cld
rorl
stos
adc
jge
jl
stos
jp
pop
mov
ja
and
hlt
pop
in
jne
xor
jp
mov
out
or
adc
mov
sbb
mov
je
sbb
xor
pop
or
nopl
dec
iret
shlb
cmpsl
gs
icebp
fwait
and
inc
rcl
mov
mov
rcll
into
leave
mov
inc
sti
mov
bound
pop
fs
and
cmc
iret
inc
aaa
jmp
xchg
jae
lcall
mov
sbb
mov
pop
dec
pop
shrb
aaa
dec
and
test
cmpl
cmc
mov
stos
mov
xor
outsb
imul
xchg
xchg
cmp
pop
cli
xor
push
xchg
movsb
cmp
aas
pop
cmp
push
lods
push
and
fldcw
pop
ja
inc
xchg
mov
xchg
jb
cmp
jecxz
lock
or
and
shr
outsb
lret
divb
cmpsb
jb
std
mov
add
movsb
inc
pop
xor
pop
push
insl
pop
sahf
sbb
pop
shll
aam
and
cmp
idivb
jbe
call
mov
repz
sahf
imul
mov
das
sarb
xchg
fcoml
pusha
dec
sahf
cmp
cmp
in
test
movsl
xchg
push
inc
movsb
aaa
lods
aas
mov
and
inc
bound
popaw
push
fcmovbe
adc
jne
ds
push
mov
fwait
mov
mov
sub
jb
addl
and
mov
decb
cmp
sub
orl
insl
pushl
jae
insl
arpl
loope
jo
jo
pusha
sarb
insl
js
inc
test
fwait
xchg
xchg
mov
pusha
out
sub
pop
mov
in
xchg
clc
lahf
repnz
xor
push
loop
push
adc
dec
flds
and
jns
lahf
mov
ljmp
or
ljmp
inc
data16
ja
cmp
ja
sahf
ljmp
repnz
gs
push
mov
xchg
inc
lcall
mov
mov
push
stc
pop
enter
xchg
xchg
mov
pop
adc
cmp
jmp
cmp
jne
cmp
or
pop
js
loop
mov
pop
popf
cmp
cmp
adc
fs
sbb
xor
ret
mov
jle
mov
cmpsb
and
inc
mov
jecxz
shrl
sub
lods
jecxz
push
sub
pop
mov
jg
fs
xchg
push
push
ja
rorl
sbb
cmpsl
add
xchg
lahf
cmp
inc
shl
ljmp
mov
pop
nop
add
mov
lds
push
jmp
in
or
addr16
fistl
movsl
outsb
pusha
dec
imul
add
inc
and
movsb
sbb
push
push
popf
add
clc
rcrb
aad
mov
movsb
in
sahf
lods
push
or
inc
cmp
mov
loope
subps
adc
lahf
jb
cmp
into
pop
adc
fldl
inc
xchg
negl
arpl
loope
jl
inc
and
adc
adc
enter
push
xor
ja
jmp
mov
cmp
and
jne
xchg
loop
or
jbe
stos
adc
rolb
inc
test
clc
pop
mulb
or
pop
std
fwait
addb
ds
shrb
daa
es
push
test
fdivl
pop
xor
sbb
dec
or
adc
lock
imul
jnp
movsb
add
pop
rorb
xchg
aas
xlat
mov
arpl
cld
movsl
mov
mov
push
pop
shlb
or
out
xchg
mov
lret
mov
lods
not
or
imul
add
adcb
fsubrl
mov
pop
hlt
xor
cs
cld
div
out
dec
out
jmp
mov
pushf
fldcw
sbb
ss
in
movl
jns
stc
loop
ja
arpl
movsb
cmp
mov
mov
sub
bound
xlat
sbb
mov
int3
mov
xor
cmpl
xlat
lods
stos
dec
push
jns
notb
dec
lret
push
jnp
pop
repz
xchg
subl
pop
mov
out
je
faddl
xorl
sbb
push
in
pop
mov
mov
mov
lahf
add
xchg
jp
cmp
neg
jmp
xlat
mov
xchg
pop
or
cmc
iret
test
and
xlat
adc
jbe
mov
mov
mov
or
add
test
rcrb
loope
ja
pusha
shll
sub
pop
cmc
push
scas
out
rcl
sbb
pop
fs
fwait
lcall
mov
orb
xchg
loopne
std
push
dec
jne
add
aas
mov
or
sbb
movsl
dec
popa
lahf
aaa
pop
sub
cmp
lods
pushl
and
movsb
pop
insb
fwait
push
das
dec
fsub
lcall
jne
arpl
int
cmp
in
movsb
loopne
push
dec
mov
jecxz
or
fistpl
gs
mov
push
nop
fdivrs
lcall
adc
aaa
dec
adc
sub
xchg
and
sbb
popa
outsl
inc
pop
pop
sub
inc
fwait
and
movsb
pop
xor
in
lea
int3
je
scas
push
loop
or
mov
in
jne
xchg
and
divl
mov
js
div
loopne
movsb
add
call
shlb
xchg
repnz
les
mov
sar
loopne
subb
in
xchg
dec
push
fnsave
jb
shlb
mov
cmp
pop
pusha
std
jb
repz
xor
stos
repz
xchg
cltd
insl
jno
in
ret
or
add
mov
les
xor
sbb
popf
xchg
add
arpl
inc
dec
pop
adc
mov
int3
stc
icebp
push
leave
aaa
dec
daa
or
nop
fstl
xchg
cli
imul
inc
mov
in
sbb
imul
xor
rolb
xlat
in
leave
mov
test
dec
outsb
inc
lds
fcmovu
pop
movl
bound
mov
mov
jb
xchg
push
loopne
popf
rcrb
movsl
stos
scas
jo
mov
lds
and
cmp
push
push
xchg
push
cmp
pop
aas
mov
mov
adc
insb
sub
nop
lds
mov
jnp
lcall
aam
push
mov
push
fidivrl
sbb
sub
loopne
sbbb
data16
jo
test
mov
stos
inc
insl
pushf
mov
cmpsl
cs
mov
je
lahf
outsl
and
ds
pop
adc
add
cmp
movnti
jp
add
jbe
lret
icebp
popf
scas
and
add
inc
stos
sub
enter
imul
mov
and
mov
cmp
sub
push
adc
lret
cmp
insb
dec
sbb
cmp
sub
sub
jg
in
mov
btc
nop
cld
adc
dec
aaa
sub
test
ds
xchg
add
and
push
pop
lods
out
xor
test
mov
adcl
jne
lahf
sbb
pop
push
add
es
sbb
lcall
jnp
and
lret
pusha
xchg
addr16
mov
push
xchg
pop
or
in
xchg
jmp
pop
lea
mov
mov
jae
mov
sahf
aad
enter
jge
stc
sub
pop
cmp
pop
pop
cmp
test
inc
int3
nop
mov
push
ds
or
pop
inc
data16
in
aaa
dec
push
pop
inc
mov
sti
mov
jg
jo
mov
jns
cmp
scas
ja
add
mov
in
xor
inc
inc
in
popa
xor
xor
push
push
and
push
outsl
lds
mov
dec
addl
sahf
sbbb
and
adc
cmp
mov
add
jg
sub
subl
cwtl
pusha
in
dec
in
std
stos
rcrl
stc
pop
fiadds
stc
pushf
pop
jg
pop
mov
loop
sub
push
test
sti
arpl
mov
and
jbe
add
add
js
pop
jne
pop
push
mov
and
loop
jmp
movsb
sub
or
imull
xchg
mov
daa
cmpsl
xor
adcl
ret
jmp
pop
sahf
ds
jne
stc
out
mov
mov
nop
mov
cmp
hlt
addr16
cld
fldcw
add
xor
cmp
xchg
in
xchg
sbbl
cwtl
icebp
stos
add
jns
dec
xchg
push
push
subl
fstpl
jp
xor
bound
adc
xlat
rcrb
mov
pusha
cwtl
bound
mov
into
lcall
scas
cld
mov
ficoml
sub
jecxz
fcoms
leave
insb
push
cmc
jns
data16
daa
jne
stos
jns
jae
jle
outsb
addr16
or
jns
jnp
or
cmpsb
mov
lds
push
fsubrl
lret
incl
sub
leave
insb
xchg
push
movsl
sbb
fimull
pop
cli
insl
ljmp
lods
sub
jp
push
lcall
cmp
cli
insl
ljmp
lods
sub
jp
push
lcall
cmp
cli
insl
ljmp
lods
sub
jp
imul
or
cmp
cli
insl
ljmp
lods
sub
sub
xchg
xchg
adcb
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
shlb
xchg
ret
stos
mov
cltd
out
pop
push
cmp
jbe
inc
jge
test
mov
imul
std
scas
pop
es
push
dec
or
jbe
inc
jge
push
cmpsb
sbb
xchg
fucom
xchg
test
add
adc
insl
xor
and
sub
and
jmp
cwtl
repz
lds
inc
and
mov
xchg
and
data16
dec
or
fidivl
popf
out
jae
into
jns
mov
leave
rclb
jb
data16
mov
frstor
cmp
jbe
xor
loop
rcrb
inc
mov
shlb
ret
and
enter
shrb
and
in
lods
ljmp
sbb
dec
leave
cmp
pop
mov
adcb
pusha
out
jge
xor
jg
lods
mov
int
dec
jp
stc
adc
inc
or
push
xchg
sbb
inc
out
ds
aaa
in
sub
cmp
and
mov
xchg
xchg
int
cltd
imul
movb
es
ss
push
and
sub
inc
sbb
jmp
rcll
incb
pop
aaa
jge
pop
bound
cmp
ret
adc
xchg
movsb
mov
xor
push
push
jae
or
ja
adc
jmp
scas
cld
repz
in
std
or
push
cmp
jbe
inc
jge
lea
mov
imul
std
or
push
cmp
jbe
inc
jge
lea
loop
adcl
lods
lods
or
jae
mov
into
insl
mov
push
js,pn
inc
adc
inc
pop
enter
gs
shll
or
pushf
lock
cs
out
das
jae
push
stos
sarl
adc
push
dec
cld
pushf
shrb
mov
cmp
dec
sbb
jns
stos
sub
and
mov
fimuls
aas
inc
mov
and
lahf
dec
mov
and
push
xchg
add
and
std
sbb
sub
xor
inc
xor
mov
lahf
xchg
negb
ss
pop
int
mov
shll
popf
ret
test
out
jmp
and
stc
xchg
inc
dec
cmp
and
fistps
xor
lock
mul
ret
repz
sbb
cmp
loop
xchg
xchg
daa
stos
push
adc
std
lock
cmp
ds
aas
cmp
jnp
cmc
imull
cltd
sub
fcmovbe
out
jnp
inc
and
and
cli
sub
sbb
push
fcomi
and
cs
mov
enter
lret
dec
rorb
mov
pop
int
fs
jbe
add
xor
xorb
scas
push
movsl
add
fimuls
leave
sbb
xchg
push
or
dec
mov
in
jno
jns
and
leave
fxch
ret
or
add
inc
cwtl
mov
repz
jp
sub
lock
add
fsubr
jmp
fs
mov
shl
ffreep
popa
add
subb
adcl
add
and
in
xor
jo
rorb
shl
aam
das
arpl
pusha
pushf
jmp
dec
int
inc
pshufw
imull
mov
jl
popa
jg
mov
cmpsb
insb
fcompl
inc
test
lods
mov
mov
loope
push
mov
fwait
nop
adc
or
xchg
dec
je
mov
jae
xchg
sub
mov
rorb
push
push
fsubr
arpl
mul
lcall
int3
xlat
pop
bswap
mov
cmp
mov
scas
lock
ret
add
out
pop
std
sbb
movsb
jl
push
fcoml
sub
cld
cmp
loope
fdivp
inc
jg
cmp
lret
lcall
adc
mov
and
xchg
adcb
sub
push
jae
loop
fisubrs
or
mov
sarl
xchg
inc
insl
pop
sbb
das
cmp
add
lds
fstl
or
stc
xchg
dec
pop
pop
outsb
les
stos
inc
inc
jns
daa
stc
fisttpll
push
mov
adc
inc
sahf
test
shl
dec
xor
mov
aas
enter
leave
daa
push
in
fyl2x
cmpb
mov
push
leave
xchg
outsb
pop
and
or
pusha
cmp
loop
sub
cmp
out
mov
out
mov
lea
rorb
sub
movsb
out
out
jne
push
jle
dec
and
xchg
mov
dec
shrl
and
int3
inc
mov
test
mov
stc
dec
jbe
inc
mov
not
add
sbb
outsl
sbb
sbb
test
negl
inc
pop
mov
shrb
insb
sub
fsubl
jb
dec
ret
mov
xor
mov
mov
push
xchg
xor
jecxz
call
xchg
mov
cmp
and
mov
aam
adc
inc
push
xchg
mov
mov
in
cmpsl
jp
mov
std
add
test
out
iret
adc
xor
cmpsl
cmp
add
or
in
jae
mov
insb
xor
cmpsl
sbb
mov
adc
adc
lods
dec
lret
popa
xor
mov
ja
push
dec
jne
aaa
pop
xchg
aad
ret
xor
mov
bound
adc
jge
rcll
xchg
xor
leave
xchg
xor
mov
mov
lahf
xor
push
cs
sbb
jg
andl
gs
negb
cltd
xor
sub
and
rolb
jo
sbb
call
loop
rcrl
mov
std
movsb
mov
add
add
shlb
xchg
pop
orl
cmp
mov
add
pop
les
call
cmpsb
imul
pop
ret
inc
je
xlat
push
icebp
stos
lock
roll
sub
mov
xor
pop
jl
or
jo
rcl
jle
dec
insb
stos
callw
and
or
fbld
cs
dec
arpl
bound
stos
mov
mov
push
std
mov
push
out
pusha
push
cltd
fwait
or
and
loopne
mov
inc
push
test
icebp
mov
mov
outsb
je
insl
xlat
inc
nop
stos
jbe
and
pop
sub
ss
rcll
cwtl
jbe
fisttpll
fstpt
xchg
cmc
movsl
push
push
ds
sbb
fcmovnu
and
adc
pop
lods
push
inc
nop
orl
sub
cmpb
outsb
mov
push
pop
bound
out
add
mov
dec
popa
lds
pop
sub
or
imul
sub
orb
mov
ret
xor
or
xlat
fwait
mov
daa
mov
inc
fstp
dec
mov
jle
imul
fstpt
popf
cmpsb
les
adcl
xor
xchg
cmc
mov
add
add
out
iret
rcll
cld
adc
movsb
adc
xchg
xor
pop
nop
mov
mov
pop
mov
mov
enter
lcall
fsubl
pop
xor
addr16
popa
rdmsr
rorl
flds
cmp
stc
xor
and
push
sarl
adc
mov
sti
rcrb
and
jne
out
frstor
push
stos
push
hlt
inc
pusha
cmp
dec
inc
dec
pop
mov
cmp
cs
mov
bound
pop
mov
call
fidivrs
xlat
lret
inc
xor
push
sub
aad
pop
ljmp
pop
push
inc
dec
mov
les
daa
loop
inc
iret
ret
hlt
mov
jo
pop
pop
data16
movsb
mov
mov
fistps
push
mov
sub
adc
cmp
jge
lcall
and
jle
stc
rol
add
xchg
mov
imulb
lods
mov
sub
push
xor
mov
xchg
sbb
adc
faddl
dec
and
mov
ljmp
inc
adc
pusha
mov
and
dec
mov
mov
or
fdivrp
push
jl
cmc
inc
adc
push
mov
lea
jecxz
dec
mov
add
inc
adc
shl
ss
repz
pop
andl
or
notl
sbb
inc
dec
xor
inc
stc
push
int
adc
cmc
mov
push
cmpsb
and
fiadds
sub
push
or
mov
repz
xor
inc
fmul
cmpsl
mov
sub
dec
sbb
nop
mov
sub
dec
xor
mov
cli
cltd
loope
ds
mov
pop
cmp
mov
xchg
pop
mov
arpl
jnp
push
inc
or
mov
inc
lea
cmp
adc
or
mov
loopne
xchg
jne
mov
or
dec
out
adc
icebp
orb
in
rcrb
stos
sbb
enter
enter
jecxz
mov
ss
enter
stos
mov
das
daa
clc
mov
rcll
daa
stos
movsb
scas
pushf
lcall
mov
xchg
pop
out
fstps
es
dec
push
adc
out
rclb
cs
stos
sub
pop
jbe
inc
push
push
xor
outsb
sbb
mov
lret
outsl
jnp
dec
pop
add
add
movl
mov
shr
or
mov
add
pop
xchg
es
push
stos
mov
inc
inc
std
xchg
or
push
lret
stos
popf
jge
int
rcr
cld
add
mov
jns
mov
push
movsb
xor
shlb
stc
imul
fs
and
insl
pop
in
sub
fbstp
xor
clc
lock
cld
mov
pusha
xor
pop
loopne
mov
cmp
mov
mov
leave
sbb
into
loope
xor
dec
inc
or
mov
pusha
jbe
jo
aas
repz
div
rcr
mov
sbb
mov
push
xchg
lahf
loopne
jle
ds
jns
mov
test
lret
adc
fcmovb
pop
fcoms
sub
mov
test
ja
cmpl
ljmp
or
popa
mov
push
and
sarl
jecxz
push
mov
mov
and
push
cli
fmuls
mov
loopne
cs
ss
aam
inc
scas
int
mov
xchg
lods
and
xchg
inc
and
mov
outsb
rcll
popf
out
bound
sbb
insl
shrl
int
in
cmp
fabs
ljmp
inc
and
pop
and
fimuls
loop
aaa
add
ret
dec
push
data16
icebp
repz
adc
popf
pusha
movsb
inc
add
jmp
orl
lcall
mov
xor
mov
leave
cmp
inc
mov
jg
mov
outsl
sarl
jg
sti
mov
lret
jb
int3
push
pop
xor
or
cli
sbb
ljmp
or
mov
cli
ss
insb
cmp
lcall
push
fsubrs
dec
pusha
movsb
sbb
test
out
fwait
adc
dec
divl
jge
xchg
push
sbb
dec
lret
adc
mov
jne
and
decl
ja
mov
fnstsw
outsl
mov
mov
pop
mov
and
stos
pop
pusha
pop
push
push
mov
jbe
loope
inc
popf
aad
xchg
mov
mov
aam
or
mov
orl
mov
pop
add
scas
loop
lret
cmp
int
dec
and
push
jae
jmp
nop
cmpb
jl
jbe
test
pusha
lret
jnp
sbb
pop
ja
ficompl
outsb
test
sbb
pop
incl
in
or
fmuls
scas
push
hlt
ds
out
pop
jp
inc
sub
rcrb
adc
iret
sti
scas
xlat
inc
add
sub
fcompl
ja
sbb
daa
das
push
inc
shrb
jnp
mov
push
sub
int3
fidivrs
addr16
push
faddl
int3
mov
fwait
and
es
and
scas
les
jno
sbb
dec
iret
leave
pop
inc
inc
sub
push
pop
pop
cmpsb
addl
ljmp
fsubr
dec
xchg
pop
jecxz
or
and
dec
add
or
add
pop
ds
pop
xchg
jg
flds
std
mov
or
lds
xchg
mov
cmp
mov
jno
mov
je
push
sub
xchg
xor
ret
sub
loop
xor
rorl
lret
jecxz
lock
lret
subb
mov
inc
sbb
adc
jbe
sub
lods
scas
test
jne
test
andb
sub
lods
inc
dec
stc
mov
push
adc
mov
push
pop
std
mov
pop
or
lock
cltd
dec
stc
ja
rolb
adc
pop
out
sbb
ret
sub
cmp
rcrb
add
mov
dec
jg
sar
adc
or
mov
add
or
adc
jbe
cmp
cmpsl
push
or
lahf
lret
jns
xchg
cli
stos
scas
ret
das
hlt
and
movsb
outsb
xchg
pushf
or
sub
sub
xchg
jg
repnz
insl
sub
and
jne
add
into
pusha
push
xchg
insb
in
fstps
jbe
xchg
popf
mov
push
dec
imul
ss
xorl
push
in
sub
into
sub
dec
imul
jmp
and
addr16
and
icebp
xchg
cmp
ret
fwait
add
jo
mov
outsb
inc
cmp
js
jb
and
pop
out
xor
lods
adc
repnz
adc
sub
xchg
scas
scas
bound
insl
fbstp
fwait
inc
inc
das
int
sbb
mov
sub
lcall
pop
in
fmulp
test
or
imul
jge
sub
mov
iret
mov
addl
dec
daa
into
jbe
dec
sar
mov
xor
shrb
orb
push
lret
fiaddl
jnp
mov
inc
out
jmp
stc
gs
add
test
add
mov
add
insb
jp
xchg
pop
mov
cwtl
sub
js
or
jb
lods
inc
aad
mov
push
scas
cli
adcl
arpl
or
mov
and
negb
adc
in
std
cmp
addr16
mov
cmpsl
xchg
out
add
pushf
repz
fisubl
lock
add
and
pop
insl
sub
mov
ss
cld
pop
pop
dec
lcall
mov
adcb
push
testb
std
add
rcl
and
sbb
cmp
pop
lods
ds
add
adc
lahf
addl
mov
mov
mulb
jno
in
and
pop
sub
inc
pop
das
jo
mov
mov
xchg
dec
and
xchg
mov
sub
jmp
cltd
sub
out
addr16
shlb
cmpsb
fstpl
cmpxchg
imulb
stos
fisubrl
or
jge
adc
adc
ja
inc
adcl
cltd
repz
cmpsb
push
xor
add
push
adc
cmpsb
int
ljmp
mov
add
ss
sbb
mov
outsb
pop
es
push
fistpl
pop
lods
pushf
imul
call
jae
inc
loope
dec
hlt
jmp
fsubl
rorb
pusha
mov
xchg
adc
adc
adc
test
popf
cmpsl
fisubrs
sbb
adcl
push
test
aaa
movsl
sub
loop
add
xchg
stos
jle
roll
daa
int
pop
jmp
insb
xchg
mulb
out
inc
sbb
mov
pop
inc
mov
mov
cmpsb
sub
cmp
push
sub
inc
ret
cmp
adc
lea
lds
xlat
xchg
loop
pushf
lret
dec
push
and
icebp
xor
pop
ret
adc
insl
imul
inc
jge
cmpsb
insl
mov
dec
aas
loope
ret
cli
mov
mov
cmp
je
xchg
fdiv
in
aas
icebp
jae
inc
aad
mov
mov
outsb
fcompl
and
shlb
cmp
repz
and
or
adc
pop
jecxz
mov
gs
jl
dec
fcomps
mov
subl
and
call
iret
pop
iret
insl
fstpl
out
cltd
fs
stos
inc
sti
push
adc
lods
mov
data16
inc
loop
dec
and
int
jmp
mov
sub
fwait
in
mov
push
jb
jecxz
lods
call
sbb
xchg
ds
adc
test
adc
ret
lods
in
shll
fsin
jge
push
cmp
mov
lret
mov
sub
push
sub
sub
shlb
pop
jnp
jnp
in
sub
mov
cmp
ja
shl
sub
mov
fidivrs
mov
push
in
dec
mov
ret
test
in
std
scas
push
mov
inc
mov
ret
ffreep
daa
ds
cmp
stos
lahf
mov
push
in
loopne
adc
pop
pop
loopne
add
shlb
sub
sbb
pop
testb
adcb
push
fiadds
push
pop
lahf
sbb
dec
out
fstps
mov
sbb
ljmp
loop
popa
into
xor
xchg
push
sub
push
not
xchg
xchg
pop
mov
sbb
jb
sarl
or
push
out
xlat
jno
xor
and
aas
inc
mov
add
repnz
cmovle
add
adc
mov
aas
push
insb
inc
mov
aam
popf
push
push
cld
xor
push
push
leave
jne
cmc
bound
jp
mov
push
sar
pushf
jg
fdivr
cmp
jl
lds
leave
jbe
mov
sub
adc
adc
loopne
mov
in
ja
cmpsl
js
cmp
outsl
mov
mov
inc
inc
sbb
xchg
xchg
jb
inc
dec
and
dec
push
call
xor
jge
or
rorb
mov
arpl
cli
add
les
cmp
ds
ds
je
cmpsb
pop
mov
sub
xor
or
pop
dec
and
pop
adc
gs
lock
lock
out
and
leave
es
fcmovnu
mov
mov
loop
js
add
pop
js
subl
xchg
fucomi
aaa
iret
xchg
cmp
inc
push
push
pop
inc
cmp
int
jl
mov
xchg
push
cmp
cld
mov
imul
mov
inc
std
cwtl
aad
adc
sub
and
jecxz
ret
add
mov
sub
mov
pop
es
pop
pusha
jmp
sbb
mov
sbb
sub
add
sbb
sbb
xor
cmpb
shrb
enter
push
and
mov
decb
aad
xchg
daa
xchg
inc
daa
and
mov
adcl
scas
or
xchg
sar
test
movb
sbb
sbb
js
in
jmp
cmp
or
dec
jb
mov
xchg
fs
or
push
pop
iret
std
sub
xchg
fisttps
dec
mov
cmc
shrl
inc
ret
push
xchg
mov
shr
push
mov
fnstcw
pop
add
lret
mov
int
cs
push
inc
jle
ret
xchg
dec
mov
sub
push
push
rcll
adcl
cmovg
cmp
outsl
or
lahf
add
test
pop
cli
cld
in
ret
sahf
sub
push
mov
outsl
shll
jecxz
lcall
sahf
js
mov
pop
dec
aam
repnz
add
fwait
and
cld
xor
xchg
cmpsb
in
or
iret
loopne
repz
fmull
mov
paddb
push
test
push
mov
cs
pop
ret
ja
fistl
jo
jae
sub
ds
dec
lea
mov
adc
lahf
into
mov
pusha
in
gs
in
xchg
xor
add
jl
xor
test
loop
jne
jno
call
fmull
mov
pop
jecxz
pop
sarb
into
mov
push
mov
shr
das
sbb
mov
or
hlt
std
repnz
les
mov
out
sub
push
mov
leave
cli
or
fistpl
loop
aas
mov
mov
mov
adc
mov
in
xchg
push
pop
cmp
xchg
loopnew
das
stos
outsb
aas
mov
lock
add
into
dec
scas
xchg
dec
inc
je
xor
aam
hlt
sbbl
add
leave
or
dec
fwait
ror
adc
push
cmpsb
cld
lds
pop
les
pop
cmp
jns
lds
jg
sub
cmpsb
or
add
xchg
cmpsl
aad
xor
pushf
mov
and
dec
xchg
sbb
inc
movsl
sbb
jno
adc
cmp
add
cli
push
xor
xlat
lret
mov
aaa
in
adc
or
pop
jnp
or
in
fmuls
pop
loopne
sub
dec
push
int3
daa
xchg
lds
pop
ret
fistpl
fistpl
push
inc
mov
fdivl
dec
pop
cs
jg
in
and
gs
jno
sarl
push
gs
mov
and
inc
lea
xchg
sbb
je
nop
inc
or
adc
add
stos
scas
outsb
cmp
push
aam
cmp
jnp
xchg
dec
nop
jo
sub
call
sub
jnp
fldt
aas
push
jb
xchg
and
or
pop
xor
mov
lcall
jmp
mov
aas
rcrl
popa
filds
lods
and
add
idivb
dec
jecxz
cli
cmp
bswap
ss
xchg
fisubrs
xor
ret
mov
sub
inc
cmp
stos
cmp
adc
jmp
subl
iret
jmp
ret
loop
std
mov
and
mov
dec
mov
mov
sar
testl
mov
mov
push
cwtl
cwtl
cmp
aam
push
jb
popa
push
ja
pop
cmpsl
in
stos
inc
push
in
inc
test
push
and
sbb
inc
xor
push
jnp
dec
adc
ja
mov
idivl
aaa
mov
mov
adc
testb
lret
xchg
imul
std
or
push
cmp
jbe
inc
jge
lea
mov
imul
std
or
push
cmp
jbe
inc
jge
lea
mov
imul
cld
or
sbb
push
dec
inc
jbe
inc
dec
push
xchg
cmpsb
mov
and
out
imul
jge
or
push
cmp
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
inc
adc
mov
es
dec
es
mov
out
xchg
loop
shlb
and
jbe
data16
bound
push
ss
inc
mov
mov
out
repz
shlb
and
jbe
data16
bound
push
ss
es
and
repnz
shrl
inc
adc
jmp
and
push
insl
cmp
lods
inc
lods
mov
cmpsl
repz
jp
test
jmp
push
bound
dec
daa
cmp
jge
or
push
dec
mull
sub
stc
pop
pop
enter
in
test
lock
sbb
cmp
push
push
js
add
push
pop
ja
xlat
ds
aas
sub
cmp
arpl
ret
mull
repnz
imul
jmp
pop
sub
rcll
or
out
lds
inc
iret
paddusw
enter
pop
nop
fistpll
ret
stos
sbb
mov
pop
push
and
jbe
data16
bound
push
ss
es
mov
out
xchg
loop
shlb
push
aas
jnp
imul
push
adc
push
inc
push
mov
fists
loop
shll
inc
sub
outsb
add
sub
or
mov
mov
xchg
xorb
mov
push
pop
and
ds
push
push
ss
es
mov
out
xchg
loop
shlb
and
jbe
data16
bound
push
ss
es
mov
out
xchg
loop
shlb
pop
outsb
sbb
test
xchg
fcoms
cmc
xchg
in
add
add
xchg
mov
sub
divl
mov
fcomps
or
shr
aam
sbb
xor
add
pop
jl
sub
rcll
fwait
cmove
sub
fildll
das
scas
inc
xor
lods
inc
call
or
push
js
push
fcoml
leave
or
sub
fisubl
sbb
arpl
dec
mov
leave
adc
xor
jecxz
xorl
add
ds
xor
fs
stc
out
jp
sbb
gs
imul
jecxz
mov
sbb
cmpsl
ljmp
mov
pop
pop
cld
pop
fadd
mov
addl
sahf
sub
push
popf
lods
fiaddl
arpl
test
iret
sbb
cld
cli
lea
pusha
sbb
push
aam
cmp
mov
sub
cmc
scas
out
lds
inc
push
idiv
sub
xlat
xor
imul
jo
xor
sub
sub
add
jle
cwtl
loope
and
rclb
stos
mov
ds
and
dec
cmpsb
mov
sub
mov
add
push
adcb
lcall
xchg
pop
lods
aaa
jmp
sti
mov
ljmp
cli
dec
sub
leave
outsl
fwait
cs
lods
fidivs
adc
xchg
std
roll
inc
mov
push
fidivs
dec
pop
sub
int3
daa
inc
popa
jae
bound
nop
in
xor
stos
ljmp
push
aas
sub
lret
push
and
inc
and
cmpsl
mov
pop
stos
aas
mov
stos
push
cs
jge
xor
sbb
mov
std
xchg
loop
enter
fwait
push
nop
stos
negb
jecxz
push
sbb
push
shr
aas
jnp
sbb
lcall
inc
daa
sbb
inc
add
sbb
enter
out
push
cmpsb
jle
pop
lcall
bound
xor
hlt
push
or
mov
inc
add
test
cli
jb
inc
lcall
sbb
adc
mov
xchg
in
push
push
push
lret
push
lock
iret
dec
or
sbb
jae
rorb
push
loop
xchg
jb
mov
enter
aad
push
lds
pop
sub
cmp
cmp
test
mov
xor
inc
jbe
dec
sbb
cltd
insb
cli
in
jg
sbb
dec
scas
jmp
clc
push
xor
add
push
cmpsl
in
in
int
sti
dec
sbb
and
adc
xor
into
out
shrl
popf
mov
int
outsb
movsl
int3
cmp
dec
mov
jl
testb
sub
cmp
inc
cmp
outsb
lds
inc
sub
fisttpl
mov
repz
mov
rcrl
call
lock
mov
lock
and
pop
cmp
mov
popa
sub
test
add
xchg
push
adc
popf
mov
mov
xchg
jle
aaa
jns
sub
je
push
jno
add
mov
push
mov
mov
jecxz
mov
pop
sbb
inc
push
mov
mov
xor
jb
shlb
test
or
stos
repz
in
std
pop
jae
mov
adcl
pop
into
ljmp
test
mov
sahf
mov
scas
fldt
mov
add
jb
ret
ret
lcall
rclb
cmp
ficomps
js
lcall
sti
je
loopne
add
sbb
ss
mov
push
push
jb
xchg
xor
adc
rclb
pop
jb
mov
bnd
and
mov
dec
lds
push
ljmp
je
push
sti
imul
sbb
int3
int
sbb
lret
in
outsb
mov
mov
adc
fwait
stos
xlat
fidivrl
dec
adc
or
movsb
daa
mov
inc
push
out
shll
jge
andb
cltd
bound
fcmovu
pop
xor
adc
push
mov
decl
inc
test
pop
lods
xor
mov
or
adc
out
insb
mov
fadd
sti
andl
xorl
icebp
js
out
jge
sub
clc
jmp
clc
je,pt
xchg
cmp
cs
push
notb
sarb
xor
mov
insb
sub
sub
mov
je
jmp
in
test
xor
fadds
adc
push
fsts
int
leave
mov
mov
xor
loope
mov
and
xor
xor
fdivs
sbb
add
xor
cli
jbe
jg
xor
and
push
popa
adc
int
xchg
fidivrl
arpl
outsl
cmpsl
xchg
sbb
stc
and
inc
out
sbb
lahf
dec
pop
repz
push
sub
dec
cmp
lds
clc
aad
pop
popf
and
pop
xchg
cmp
mov
or
cltd
add
std
mov
sbb
and
iret
push
pop
jbe
mov
arpl
and
sbb
cmpb
int
jno
mov
sahf
pop
inc
jmp
adc
fsubp
add
inc
leave
clc
mov
mov
or
divb
fs
sti
iret
push
xchg
loop
jmp
rorb
sbb
sub
loopne
mov
scas
pop
and
or
test
push
sbb
push
sbb
jns
sti
addr16
or
or
pop
outsb
adc
lods
or
sti
pshufw
aam
stos
psrld
enter
adc
ljmp
xor
fs
xchg
dec
sbb
xor
push
and
out
mov
sbb
cmpsb
cmp
jmp
shrb
scas
jmp
ja
cmp
mov
adc
stc
leave
mov
and
nop
out
outsb
xchg
jb
jg
push
hlt
call
push
insl
mov
mov
das
and
xchg
or
enter
outsl
fs
out
cmp
dec
xor
push
mov
and
pop
xchg
pop
mov
popa
dec
icebp
mov
cmp
mov
sahf
sub
jmp
aad
or
push
lods
ss
mov
shrl
call
push
sub
in
dec
hlt
pop
bound
and
adc
xchg
sti
popf
mov
xor
or
sub
lods
fsub
pop
or
out
add
cmp
jnp
jecxz
pop
dec
mov
jmp
scas
fcoml
add
inc
inc
xlat
adcl
push
lock
fucom
mov
xor
cli
sub
mov
dec
iret
sbb
repnz
int
push
mov
xorl
xor
imull
mov
popa
sub
int3
mov
jecxz
sub
lods
rcr
xor
hlt
mov
lahf
loope
lcall
mov
and
repz
pop
movsl
das
push
aaa
pop
mov
xchg
in
cmp
sbb
inc
cmc
js
lea
mov
jecxz
test
das
mov
inc
cs
xor
push
jp
lods
aad
in
test
mov
xchg
adc
jmp
cltd
ja
shlb
and
scas
dec
push
ficoms
out
rcrl
decb
mov
scas
inc
cltd
inc
punpckhwd
pop
pop
stc
testb
or
mov
cmp
imul
scas
int
cmp
fcomps
test
in
jmp
add
sar
lahf
dec
mov
orl
sbb
adc
pop
testb
ret
test
mov
pop
and
repz
icebp
add
jmp
pop
test
pop
xor
popf
cmp
push
sub
popf
sub
in
cmp
cmc
add
mov
dec
shll
xor
fs
imul
lahf
ret
adc
je
mov
icebp
dec
jmp
mov
scas
sbb
std
cmpsb
push
xchg
ficompl
push
sub
aaa
aad
push
xchg
scas
std
dec
mov
mov
sub
push
aas
in
test
movsl
fdivrs
add
fldenv
inc
jecxz
mov
pusha
in
aas
push
dec
mov
or
jbe
vandnps
cmpsl
nop
xor
sbb
mov
jle
movb
mov
xchg
cmp
jmp
sbb
decl
mov
cwtl
test
repz
lahf
cmc
sbb
data16
and
mov
jb
xor
sub
sub
stos
xchg
imul
add
mov
mov
ficoml
jle
icebp
jno
cmp
pop
cmp
mov
scas
cmc
leave
lds
add
push
jmp
std
and
mov
sub
add
lods
xchg
ret
cs
jl
mov
lret
xor
dec
inc
pop
addl
add
xorl
push
and
lds
jl
mov
imul
xlat
dec
xchg
dec
lods
loopne
mov
jae
pop
cli
bound
imul
fmuls
ds
mov
mov
repnz
or
mov
xchg
jnp
repz
xlat
cmp
gs
ljmp
lret
mov
xchg
scas
push
movsl
fistps
cmpsl
loope
mov
inc
pop
sbb
jno
inc
icebp
and
adc
out
xor
fcomi
rolb
add
jns
lock
data16
push
loopne
into
cli
mov
cltd
push
js
fs
lahf
aaa
call
dec
in
jno
subb
or
dec
mov
js
adc
sti
dec
xor
push
in
movb
or
into
xchg
xor
inc
in
adc
dec
in
sbb
adc
cmp
mov
sbb
test
add
insl
jbe
pop
sub
out
movl
push
fiaddl
push
or
arpl
mov
mov
xor
jmp
or
fs
test
or
ret
pusha
scas
fldcw
repz
or
movsl
loope
enter
addr16
divb
test
push
in
adcb
push
in
nop
add
cltd
inc
add
pop
mov
ret
lds
lock
fimull
mov
xchg
enter
mov
pop
arpl
dec
sbb
lock
dec
or
adc
cltd
mov
popa
movsb
ljmp
mov
out
dec
leave
aam
push
and
in
rorb
cpuid
xchg
insl
psllq
hlt
and
adc
clc
repnz
rcl
outsl
out
and
or
arpl
xor
int
and
faddl
push
rcrb
sbb
dec
sub
or
add
ret
mov
js
jmp
movsb
push
jge
xor
addl
and
sbb
pop
nop
ja
add
es
push
push
mov
icebp
movsl
insb
jle
insb
dec
bound
out
sbb
sbb
and
movb
sbb
mov
add
loope
shrl
clc
test
mov
mov
and
stos
rcrl
ss
or
andb
testb
ret
add
daa
aam
and
mov
sbb
mov
sbb
je
inc
mov
roll
sbb
stos
std
outsl
jo
xor
jge
call
adcb
dec
xchg
idivb
xor
nop
mov
xor
cmp
int
push
pop
jl
aaa
adc
push
lret
aad
call
or
pop
push
pop
xchg
lds
or
ret
das
in
add
fwait
pop
push
pop
lahf
stc
loop
mov
adc
cmpsb
adc
pop
lahf
hlt
ficomps
xor
test
mov
lcall
push
push
and
and
ret
jne
inc
and
repz
mov
pop
xlat
mov
adc
nop
push
push
int3
xchg
data16
loopne
dec
aad
outsb
test
ret
in
mov
push
dec
adc
out
popf
sahf
cmp
sub
adc
cmpsb
frstor
aam
adc
mov
xor
push
xchg
mov
push
sub
jo
sbb
lcall
mov
bound
adc
pusha
mov
sbbb
sbb
mov
dec
fisttps
mov
call
sub
pop
cmp
add
cltd
scas
dec
sbb
or
and
push
jmp
sar
inc
pusha
cltd
and
in
dec
or
repz
enter
out
stos
pop
insl
nop
cwtl
jbe
or
dec
in
dec
pop
adc
stos
out
pop
mov
loop
mov
sub
fadd
adc
aad
cmp
mov
sbb
rcr
aad
xchg
jl
rcl
sub
xchg
dec
adc
push
sahf
std
out
test
sarl
ds
bound
jo
int3
cmpsl
cld
inc
lcall
stos
sub
clc
shlb
add
push
jle
mov
lret
sbb
mov
ljmp
repz
mov
mov
adc
or
les
idivb
cmp
sbb
or
mov
ret
cmpsb
lcall
lods
cmc
pop
cmpsl
mov
mov
cltd
das
mov
lahf
jno
out
push
insl
jns
lcall
stos
cmp
mov
xchg
fcmovnb
cwtl
push
jae
or
or
dec
pop
aas
clc
push
cmp
movsl
xor
inc
clc
ret
sbb
lret
dec
std
ret
push
jb
fdivrs
adc
mov
js
outsb
cmp
fwait
lods
mov
daa
sbb
mov
jb
rclb
push
jecxz
dec
les
pop
jo
sbb
popa
std
jo
aaa
mov
pop
xlat
xchg
mov
ja
popa
add
jns
aaa
hlt
xor
dec
dec
add
pop
sub
test
in
mov
xchg
pop
pop
jnp
jne
sar
dec
push
arpl
notl
fcmovnu
mov
mov
xorl
cld
pop
jnp
into
push
add
inc
lds
mov
jecxz
pop
xor
lret
mov
jge
dec
adc
lock
out
inc
rcrl
mov
es
imul
cmp
mov
arpl
push
xchg
fnstsw
pop
and
test
fsts
popf
jbe
adcb
cmp
or
mov
xchg
adc
std
fbld
add
jecxz
sbb
xchg
rcll
ret
fwait
outsl
in
pop
xchg
in
out
repnz
or
mov
dec
imul
add
xor
push
jecxz
mov
inc
xchg
pop
mov
sub
adc
dec
push
rcrl
idivb
outsb
popa
inc
dec
dec
test
andb
lock
repnz
mov
pop
push
mov
cmp
ljmp
mov
lcall
andl
in
jecxz
dec
cmp
ret
xchg
mov
cmpsl
ret
or
enter
mov
adc
cmp
mov
xlat
dec
dec
dec
mov
loope
add
jne
imul
gs
shrb
fcmovbe
in
and
xchg
adc
shll
mov
push
into
and
xlat
pop
push
lock
mov
and
iret
std
outsl
pop
movsb
icebp
pop
into
mov
inc
sub
xchg
jns
cwtl
cli
dec
leave
sbb
stos
jno
jle
addl
repz
jle
fsts
out
out
push
jno
outsb
out
pop
add
dec
fistps
imulb
es
out
pop
push
ja
jnp
ss
sbb
mov
adc
jle
mov
ret
cmp
ret
dec
mov
aad
outsb
push
dec
idivb
dec
inc
addr16
cli
lock
push
js
outsb
aaa
icebp
xor
push
pop
or
sub
test
or
pop
mov
or
scas
test
jns
cld
iret
sbb
xchg
xchg
insl
and
pop
lods
or
lret
push
dec
ds
shlb
cwtl
mov
push
jae
inc
je
in
mov
stos
add
and
mov
popf
dec
push
inc
pop
mov
xchg
call
jle
movsb
xchg
and
xchg
stos
or
jmp
jb
rorb
fisubs
mov
pop
mov
pop
pop
sar
jmp
pop
adc
jo
or
out
les
js,pn
mov
out
pop
lret
shrl
xchg
sbb
ffreep
das
enter
test
cmc
popf
pop
sub
shrl
mov
jae
mov
sub
js
mov
dec
xor
call
jno
adc
dec
push
ret
adc
imul
movsl
sti
mov
ja
jae
cmp
cmp
fisubrl
xchg
sub
outsb
dec
mov
fidivs
xor
inc
add
push
or
dec
mov
xchg
add
push
or
jecxz
in
mov
das
jecxz
jae
dec
inc
cli
push
cld
fadd
aam
mov
mov
mov
cltd
jns
or
outsb
push
xor
data16
pop
mov
scas
enter
fsubr
daa
out
xor
into
adc
or
cmp
push
push
mov
addr16
sti
or
pushf
jo
push
dec
mov
jns
jbe
into
push
jg
leave
jno
jg
sahf
inc
mov
imul
ret
xor
neg
sub
xchg
call
lock
mov
adcb
test
xchg
xchg
jne
leave
ljmp
aaa
data16
addb
iret
sub
push
lret
pusha
sbb
push
mov
mov
mov
rcrl
and
clc
fstps
clc
sarl
dec
sbb
test
adc
mov
test
sub
pop
ret
cmp
das
mov
ja
and
push
addr16
dec
push
mov
leave
dec
bound
dec
cmp
movsl
add
lods
adc
jle
lock
out
shll
aaa
mov
xchg
adc
mov
mov
mov
cmp
inc
fistl
and
pop
inc
pop
movsb
mov
push
mov
popa
sub
imul
push
mov
ret
dec
pop
test
jbe
loope
xor
mov
iret
je
leave
test
mov
fwait
sbb
popa
addr16
fucomp
call
pop
jp
mov
lock
mov
lods
inc
sub
lret
dec
dec
xchg
daa
xchg
and
ja
mov
add
xor
mov
mov
xchg
sub
mov
push
push
movsl
out
ret
lcall
fs
xor
mov
mov
and
sbb
rorl
aam
mov
mov
jne
nop
mov
mov
addl
inc
adc
push
loop
fcomi
dec
add
out
les
xor
adc
enter
fisubrs
inc
push
sbb
mov
jne
call
cld
mov
cwtl
cli
inc
std
mov
pop
adc
lcall
dec
call
popf
testb
push
mov
inc
and
jae
loope
in
xor
adc
leave
loope
jmp
in
lret
fsubs
popf
pop
mov
pop
mov
fs
or
jnp
mov
dec
leave
sbb
push
cmpsb
ret
enter
cmp
gs
cmc
pushf
cli
jmp
popf
cmp
xchg
pushf
hlt
dec
aam
push
mov
mov
fistpll
dec
xorb
arpl
cmp
xchg
sbb
or
xchg
mov
sbb
cmp
ficoms
xchg
xchg
lds
fsubs
dec
inc
add
jge
icebp
mov
outsl
mov
rorb
stc
ljmp
mov
jecxz
xor
aam
mov
dec
mov
jg
fs
jle
lret
rcrl
mov
and
mov
imul
addr16
fsubrl
fwait
and
push
mov
daa
and
jae
jmp
fists
std
cmp
scas
fstp
pop
cmp
test
enter
fwait
or
jae
add
insb
dec
scas
imul
xchg
adc
stos
ds
test
pop
inc
xlat
inc
ficomps
lret
repz
in
mov
add
jmp
mov
xlat
xchg
imul
jno
cmpsb
mov
ret
lea
cmp
scas
pusha
pop
inc
mov
mov
cmc
lcall
mov
push
imul
add
vpsrad
dec
shlb
and
jns
pushf
stc
loop
push
mov
aad
mov
inc
pop
mov
dec
loopne
imul
jl
jne
dec
adc
in
pop
or
mov
fimuls
loop
mov
push
in
loopne
sbb
or
aas
out
sub
jno
out
clc
push
inc
adc
data16
bound
push
ss
es
mov
out
xchg
loop
shlb
and
jbe
data16
bound
push
ss
es
mov
out
xchg
loop
shlb
mov
repnz
bound
push
ss
mov
out
xchg
loop
shlb
and
jbe
data16
bound
push
ss
out
mov
xchg
sbbb
jns
dec
mov
mov
xchg
mov
stc
and
jne
leave
and
adc
add
imul
fnsave
mov
leave
sarl
sub
js
or
cmp
popa
pop
push
dec
inc
add
push
and
ror
rcrl
jge
popa
insb
add
and
add
xlat
mov
aad
cmc
loopne
std
aaa
jmp
and
sbb
test
jbe
mov
push
mov
or
xlat
or
push
fldl
mov
pushf
adc
add
push
mov
inc
movsb
in
ja
data16
in
xor
cli
inc
outsl
icebp
sub
or
or
imul
inc
gs
shll
lock
xchg
cmp
sub
and
pop
scas
dec
pusha
inc
sub
pop
mov
icebp
popa
push
push
cs
xchg
sbb
sbb
dec
xor
imul
xor
pop
cwtl
nop
ja
push
cmp
loop
sbb
inc
or
sub
add
mov
xchg
pop
inc
dec
inc
loop
jmp
sbb
shrl
pushl
mov
outsl
adc
add
jno
popa
imul
rcr
xlat
icebp
xchg
sahf
xchg
cmp
dec
jl
insb
outsl
or
sbb
shrl
hlt
lock
jmp
xchg
call
iret
sub
pushf
rcrl
dec
sbb
insl
add
push
push
xor
das
aad
vpsubb
stos
popf
jmp
sarl
sub
sbb
or
jns
imul
mov
mov
stc
icebp
jmp
sarl
sub
sbb
or
jns
imul
mov
mov
arpl
ss
divl
sub
in
dec
and
pop
lea
andb
push
cmpsl
push
xchg
popf
mov
and
int3
jbe
sbb
inc
jbe
dec
filds
pop
andb
mov
sbb
xor
add
push
cmc
inc
scas
sbb
pop
gs
adcl
jmp
jo
stc
inc
ds
jmp
xor
sub
popw
pop
je
and
xchg
aam
loop
ss
mov
jno
pop
dec
ljmp
jle
push
dec
call
lret
orb
inc
add
js
cmp
jle
mov
bndldx
daa
mov
dec
aad
pop
cmp
or
imul
int
cli
enter
xlat
cltd
pop
vunpcklpd
divb
push
mov
pop
std
fs
hlt
sbb
cmp
imul
loop
testl
push
cwtl
lock
cmp
loop
fwait
push
cmp
jl
sub
popf
cmp
and
int3
push
mov
dec
push
sub
jg
stc
rcrb
fstpl
jmp
inc
cltd
aas
pop
push
inc
gs
push
jmp
mov
push
mov
dec
pusha
cmp
sub
jns
out
jae
mov
dec
mov
cwtl
sub
mov
pop
push
mov
in
nop
rclb
pop
aam
test
inc
push
mov
inc
aad
mov
dec
adc
mov
jmp
loopne
movsb
adc
test
popf
imul
in
jbe
inc
sbb
rclb
popf
stc
add
jns
sub
vpsubq
int3
dec
jns
inc
jbe
iret
jo
jl
es
nop
mov
es
filds
jnp
push
lock
std
mov
inc
add
jp
mov
dec
nop
jecxz
stos
jmp
dec
sbb
jnp
loopne
inc
inc
lcall
call
mov
dec
test
mov
sbb
mov
push
mov
add
ljmp
pop
sti
jecxz
jmp
imul
in
bound
adc
mov
inc
int
mov
xchg
stos
std
pop
adc
cmp
popa
mov
insb
or
nop
pop
into
pop
mov
sti
icebp
jnp
jge
js
inc
or
pop
lock
notl
stc
xchg
push
notl
or
pop
in
aam
addr16
jno
lcall
outsl
xorb
mov
rcrb
lfs
or
loope
jg
or
js
sbb
mov
adc
dec
mov
adc
lcall
lcall
push
and
sahf
shlb
adc
xchg
inc
and
xchg
push
in
fwait
dec
mov
in
xchg
mov
or
out
jmp
or
add
or
adc
pop
mov
inc
sbb
in
into
mov
sub
jge
inc
xchg
out
inc
push
lret
mov
jecxz
icebp
mov
mov
ja
sub
std
adc
sbb
jge
and
jl
ret
int
mov
shrl
mov
pushl
sar
cmp
fisubrl
inc
sub
jecxz
into
inc
sbb
mov
cmp
sbb
lret
fcoml
out
das
jg
jge
and
or
mov
mov
or
xchg
xchg
scas
push
incl
icebp
pop
push
push
inc
cwtl
sub
insb
lods
mov
aaa
dec
stos
dec
pop
mov
fidivs
vdivsd
inc
inc
in
sbb
inc
fsubrl
cli
mov
outsl
lock
dec
jl
adc
push
mov
fidivs
sti
pop
push
jecxz
sub
inc
sti
mov
das
cmp
mov
mov
adc
xor
frstor
mov
jno
popf
pop
flds
push
cs
lcall
push
enter
test
add
jo
js
lock
lock
jge
lret
jno
pop
pop
test
dec
outsl
dec
push
lds
push
jnp
cmp
mov
dec
cltd
jns
xchg
push
pop
dec
sbb
repz
adc
mov
jp
jns
push
insb
mov
inc
movsl
jl
xor
and
mov
sti
and
call
sub
add
pop
test
sub
pop
xchg
add
aam
rol
les
fcoml
sub
sbb
cmp
push
cmp
mov
mov
jno
cltd
cmp
or
imul
pushf
pop
mov
mov
inc
pop
mov
movsb
arpl
inc
add
adc
pop
mov
test
xchg
cwtl
and
popf
stos
cmp
pusha
nop
push
out
lret
mov
lea
sbb
cmp
or
in
adc
and
push
sub
push
jl
pushf
bound
rcll
xor
cmpsl
dec
pop
aam
sub
push
cmpsb
dec
push
dec
nop
jecxz
sub
aas
popa
movsb
pop
lea
sbb
es
mov
adc
fcomps
cmpsb
stc
sub
push
dec
xchg
fcoms
sbb
aam
push
pop
pop
dec
testb
jae
lret
and
xorl
add
mov
mov
daa
fldl
ror
outsb
mov
jge
sub
jecxz
add
pushf
gs
dec
push
pushf
push
push
dec
add
fwait
mull
mov
dec
mov
ficoms
adc
js
cmp
jo
mov
inc
cmp
pop
scas
mov
les
mov
pushf
mov
fisubs
dec
or
sbb
sti
testl
xor
xor
call
and
xor
jbe
sub
fsubs
cld
xlat
jns
pop
repnz
mov
imul
push
xchg
cmpsl
popf
mov
lahf
pop
push
xchg
push
ret
fs
pop
jg
sub
pop
mov
xor
mov
xchg
push
mov
jmp
in
mov
dec
jp
aam
cmp
push
popf
pop
pop
xchg
adc
das
jnp
out
outsl
pusha
xor
mov
call
jb
loopne
pop
loop
mov
or
in
das
add
cmp
es
mov
out
pop
mov
xchg
pop
pop
adc
mov
in
fwait
jno
and
jl
and
push
dec
fnstsw
sbb
mov
pop
lcall
mov
mov
loope
jg
test
lret
imul
push
pushf
mov
in
es
fsubrp
push
int3
dec
insb
mov
add
xchg
out
jle
jle
ljmp
orb
push
push
insb
adc
iret
mov
ret
fdiv
xlat
fstpl
jg
arpl
mov
loopne
push
and
stc
jnp
inc
push
arpl
sbb
push
push
xchg
lcall
orl
jge
add
push
das
cmp
mov
popf
pop
test
inc
ja
movhps
jbe
repz
aaa
pop
lea
stos
adc
jle
push
adc
xchg
xor
cltd
mov
jnp
aas
bound
jo
inc
xchg
sbb
dec
fwait
scas
lret
sub
clc
fstps
mov
cmp
dec
imul
lret
pop
mov
in
popf
jno
mov
mov
cld
jge,pt
cltd
ja
dec
add
cmpsl
je
imul
jbe
dec
jge
adc
inc
sbb
stos
loopne
xchg
int3
icebp
addl
xorl
movsl
mov
pop
xchg
fwait
inc
into
inc
stos
mov
xor
cmp
ds
fs
sbbl
xor
push
sbb
sarl
sub
popa
mov
xorb
test
sbb
pop
notb
cmpsb
jl
mov
push
inc
leave
add
xor
mov
add
push
xor
jle
add
das
int
dec
mov
dec
fbld
test
aad
ret
cmpsl
stos
fldl
jbe
popf
mov
mov
jmp
fistps
stos
jne
ds
mov
jne
lahf
push
xchg
sti
sub
aam
mov
cmp
test
cwtl
push
movsb
lea
js
mov
jp
jbe
addr16
je
add
sub
nop
xchg
cmp
pop
mov
add
dec
or
fwait
or
cmp
mov
test
jmp
loope
jnp
imul
pop
adc
mov
sbb
je
pusha
push
cwtl
cmp
mov
jbe
adcb
out
cmc
dec
loope
push
std
enter
push
lods
pushf
jae
rcl
cmp
out
xchg
adc
push
sbbb
add
or
fcompl
aas
fisttps
in
pop
cmp
cli
mov
out
cmp
sbb
cmp
lock
je
xchg
mov
inc
and
arpl
scas
jge
nop
dec
arpl
xchg
pop
stos
loope
insb
xchg
fmulp
loope
je
push
jp
lcall
into
repnz
in
insl
outsb
cmp
int3
push
sub
push
and
dec
repz
test
cld
ret
jb
and
aam
cltd
or
pushf
je,pn
enter
xor
div
cmc
andl
jne
add
aas
or
mov
xchg
add
ljmp
addl
popf
pop
inc
jo
dec
fiadds
mov
pop
mov
jno
pop
cmc
sbb
xacquire
xchg
into
push
out
js
mov
xor
enter
jnp
out
sub
or
jns
dec
xor
mov
pop
lret
imul
xchg
sbb
xor
jp
sbb
xor
jbe
jbe
mov
and
movsb
ja
aad
dec
xchg
incl
jno
dec
iret
mov
inc
leave
repz
ljmp
shl
fdiv
add
cmp
inc
xchg
nop
inc
inc
lds
aad
xorb
jb
jp
pushl
enter
sbb
and
push
leave
sub
cmp
inc
mov
cmp
ret
lock
and
mov
popa
cmp
mov
adc
loopne
and
cmpsb
mov
mov
test
dec
push
cmp
stos
jns
std
cld
and
jnp
js
aas
enter
das
jp
sti
out
cmp
enter
or
mov
imul
push
repz
dec
mov
outsl
data16
mov
pop
call
and
xor
cmp
inc
mov
bound
fisubs
mov
or
xchg
jecxz
xchg
ret
outsl
fisubl
dec
lahf
andl
push
les
mov
jae
lahf
shr
out
imul
adc
ljmp
ds
dec
jge
and
aaa
cmc
data16
pop
arpl
jle
sbb
ljmp
xchg
repnz
leave
roll
inc
pop
push
call
mov
cmp
cltd
mov
sub
mov
dec
jbe
dec
dec
xchg
xor
jle
hlt
cli
inc
int3
jns
mov
ror
cmpsb
lea
jl
hlt
and
or
cmpsl
push
sub
lahf
gs
ja
xchg
idivb
addr16
mov
inc
imull
push
jmp
inc
mov
cmp
jle
popf
daa
testl
loope
xor
fdivrl
add
push
and
dec
or
test
mov
add
cwtl
cmc
lods
pop
out
jecxz
leave
test
outsl
jg
push
pop
add
push
dec
clc
sub
sbb
cwtl
push
test
aaa
jl
lret
testl
inc
mov
jb
fnsave
test
inc
adc
into
adcb
push
sbb
cmp
jns
push
addr16
repz
jecxz
stos
pop
xor
pop
subl
fdivrl
adc
jmp
xor
lds
jg
aaa
adc
les
cmp
fisttpl
fs
ljmp
ficompl
jne
adc
mov
stc
cld
adcb
push
ret
sub
mov
add
inc
fildll
adc
cmp
in
mov
cmp
not
out
lods
test
andl
cmp
sbbl
cmpsl
rclb
sti
insb
insl
jb
sub
xor
jnp
sub
pop
mov
push
call
iret
stc
sub
loop
in
arpl
pcmpgtw
daa
cmp
fcmovne
inc
jle
fsubrs
add
inc
rcrb
jbe
in
es
das
jo
pusha
insb
push
setnp
mov
out
mov
xchg
and
jg
pop
xor
call
lcall
push
push
push
lret
mov
cli
mov
adc
test
filds
dec
sbb
ja
shl
sub
mov
dec
push
out
sub
jmp
push
inc
dec
sub
sub
push
xchg
loopne
loope
cmp
ret
pop
pop
sarb
lret
imul
call
movsb
push
ss
xchg
test
push
mov
jbe
adc
fs
xor
pop
pop
push
inc
insl
push
es
mov
mov
and
jnp
aas
mov
mov
data16
mov
out
dec
subb
stos
popf
ror
xor
add
test
int3
fst
xchg
adc
sub
cmp
and
mov
mov
daa
inc
stos
fiadds
fistpl
sub
pop
ja
dec
add
xor
popf
scas
pushf
data16
test
pop
rclb
stos
leave
pop
sar
pop
pop
xorb
xor
xor
mov
ret
test
adc
cld
mov
mov
rclb
lea
mov
std
incl
xchg
les
sbb
int
and
sahf
pop
cwtl
inc
mov
scas
inc
sub
int
pop
int3
call
shll
sub
lret
cmp
mov
fisttpl
cmp
shl
addr16
pop
push
pop
mov
out
call
add
arpl
sbb
jle
xchg
xor
and
das
push
imul
inc
xchg
sbb
or
imulb
enter
xor
pop
cmpb
in
repz
bound
cltd
pop
push
xor
lock
lods
mov
je
push
or
rclb
movsl
pushf
and
incb
push
jns
out
add
cmpsl
out
cmp
mov
push
adc
ja
nop
xchg
jecxz
ret
jle
ficompl
jo
arpl
push
mov
mov
cmp
scas
push
int3
adc
or
in
imul
addb
cmpsb
les
pop
dec
fcom
inc
cli
dec
jmp
mov
shll
int
stc
pop
ret
movsb
std
pusha
in
lret
mov
insl
add
pop
imulb
add
cmpsl
addr16
scas
je
sub
xor
jecxz
adc
lea
push
cmpsb
call
imul
lret
jno
xchg
pop
stos
gs
mov
xor
or
sbb
jns
inc
xchg
popa
pop
ret
maxps
jnp
mov
push
mov
insb
mov
pop
dec
mov
iret
decb
or
xor
out
jns
insb
and
mov
ret
mov
xchg
pop
pop
sbb
aas
xchg
dec
outsl
mov
dec
xchg
sti
inc
mov
arpl
test
pop
cs
jp
cmp
add
push
and
scas
in
jle
scas
or
sbb
push
inc
js
roll
aad
push
cltd
inc
cmp
push
pushl
sub
xor
add
shlb
cmp
jns
dec
test
dec
add
jbe
and
inc
and
lcall
and
in
movsb
push
insb
jno
clc
xlat
stc
xchg
dec
shll
jg
dec
xchg
loop
mov
xchg
jns
adc
cmp
mov
pop
sysexit
push
xchg
mov
add
jmp
rorb
rcl
ds
rcll
sahf
add
mov
in
mov
adc
stc
hlt
gs
sub
nop
push
fsubl
mov
xchg
dec
lds
add
jno
jecxz
add
adc
xor
xor
cmpsl
lahf
mov
and
mov
pop
sahf
xor
mov
jg
outsb
rcll
es
bound
out
gs
sbb
test
cmpb
sbb
dec
in
push
xchg
sbbl
lret
lret
aam
lahf
pop
fisttpll
xchg
sub
addl
pcmpgtb
popa
rorb
inc
stc
and
dec
cmp
fwait
sahf
js
repnz
cli
xchg
orl
repz
adc
add
pop
xor
in
xchg
jbe
gs
pop
cmpsb
lods
sub
sub
out
push
add
pop
mov
aad
jmp
sub
xor
ljmp
sub
push
div
roll
icebp
movsb
lods
sub
mov
xchg
fwait
je
fdivl
fisubrs
popa
loope
rcrb
insb
mov
ds
gs
rcl
sub
orb
pop
fcmovnbe
stos
mov
mov
jg
sub
xor
xchg
decl
ficompl
sub
lret
mov
or
xchg
adc
sub
mov
addr16
scas
xor
mov
xor
call
push
jl
and
int3
subb
call
ja
xchg
push
xchg
je
lahf
sbb
dec
mov
and
mov
pop
adc
pop
push
mov
fwait
jae
inc
ds
mov
out
call
inc
rolb
clc
popa
mov
jno
fadds
rol
sub
inc
xor
call
xor
pop
fcoml
popa
or
popa
jg
cmp
sub
imul
test
movb
push
std
cmp
cmp
mov
out
je
jns
xor
pop
loop
add
mov
or
mov
push
adc
sub
and
fs
pop
xchg
test
mov
mov
xor
jnp
xlat
push
pop
mov
inc
cltd
mov
jp
mov
xor
mov
dec
insb
inc
out
push
cmp
jno
xor
adc
and
ja
mov
das
js
fscale
pop
mov
jae
mov
push
fs
push
cwtl
lret
inc
bound
test
filds
in
pop
jo
cmp
jo
push
and
lret
stc
or
das
fsubl
push
jne
sbbl
ljmp
mov
fsubrs
sahf
sbb
adc
fwait
dec
lds
jp
or
in
sahf
mov
jle
mov
mov
jle
xchg
outsb
inc
es
push
jo
int
mov
fisttpl
stos
push
sub
xlat
xchg
lcall
aad
push
mov
dec
cmp
shl
rorb
adc
push
das
jg
mov
jp
stc
sahf
push
adc
xor
sahf
xor
jbe
loop
pop
jle
mov
sahf
add
adc
mov
pop
cmp
cli
out
add
dec
imul
pop
nop
sbbl
addr16
pop
fistpll
pop
int
jo
data16
mov
test
xchg
push
popa
aaa
loopne
mov
mov
mov
xor
arpl
out
jle
lock
imul
pop
hlt
out
jp
xor
adcb
jmp
sarb
repnz
mov
pop
mov
in
sbb
or
jnp
mov
lock
testb
lods
mov
push
aaa
rorl
mov
xor
aas
push
insl
inc
iret
jns
popa
arpl
xchg
dec
pusha
cmc
cmp
call
pop
lods
loope
push
add
lcall
pop
ret
xor
pop
stos
jbe
mov
push
push
mov
fimuls
cmpsb
hlt
outsb
scas
and
adc
scas
xor
adcl
cld
daa
adcl
sbb
cmpl
hlt
cmp
adc
jge
xchg
xchg
push
pop
fbld
jp
icebp
loopne
xchg
outsl
mov
inc
add
insb
hlt
pop
repz
test
fisubrl
xor
jne
es
push
call
ds
sub
jbe
add
in
dec
mov
inc
inc
pushf
das
jb
dec
and
ret
xlat
cmp
mov
push
pop
inc
lea
mov
adc
aaa
dec
mov
jle
jl
ja
mov
and
and
cld
mov
mov
sbbl
insb
push
jl
add
jmp
or
out
mov
dec
dec
cmp
stos
sbb
fisubs
cli
ss
xchg
mov
pop
xor
jbe
xlat
push
in
add
jp
test
dec
xor
int3
xlat
cmp
xchg
adc
icebp
nop
inc
pop
or
sbb
movsl
jb
sub
mov
fidivrl
cld
push
test
out
addr16
pop
and
popa
add
mov
lcall
jbe
mov
aaa
out
cli
or
fs
sub
push
jne
push
in
cmpsb
mov
fcompl
jae
mov
stc
icebp
jmp
sarl
sub
sbb
or
jns
imul
mov
mov
stc
icebp
jmp
sarl
sub
sbb
or
jns
imul
mov
mov
imul
or
cmp
sub
jmp
jo
popa
pop
push
mov
mov
stc
icebp
stc
popa
fsts
ds
mov
stc
loope
cmpsb
scas
mov
aas
subb
pop
mov
pop
mov
mov
and
xlat
fbld
jb
subb
pop
mov
outsl
rcrb
dec
repnz
and
push
fbld
iret
jb
subb
pop
mov
outsl
rcrb
dec
repnz
inc
mov
cmp
jbe
das
int
int
jecxz
add
mov
jge
jne
push
ja
mov
test
fsts
mov
aam
adc
les
sub
dec
ljmp
add
cli
mov
fisubl
and
add
mov
vpunpcklbw
in
pop
inc
xchg
mov
xchg
adc
mov
mov
fnstcw
bound
sub
inc
bound
jne
aaa
dec
pop
testl
fldl
bnd
in
scas
aas
popf
rclb
pop
out
dec
xchg
les
out
ja
adc
lret
push
out
xchg
fbstp
jae
subb
pop
mov
outsl
rcrb
dec
repnz
and
push
fbld
sbb
inc
xchg
jp
push
adc
push
mov
cld
dec
jecxz
lcall
xor
pop
nop
dec
mov
add
fidivrl
fiadds
pop
lcall
and
dec
shll
xlat
jg
outsl
rcrb
dec
repnz
and
push
fbld
jb
subb
pop
mov
outsl
rcrb
dec
repnz
and
push
fbld
jb
orb
movsl
push
ret
outsb
out
push
xor
loopne
dec
or
mov
push
push
adc
push
mov
jno
pop
or
cmp
lret
add
sbb
add
enter
adc
adc
in
je
pop
jle
adc
je
xchg
cli
pop
sub
push
imul
sbb
jnp
push
pop
mov
pop
sub
out
stc
mov
jae
gs
ja
cmp
fwait
mov
pop
mov
sbbl
inc
xchg
setge
push
popf
out
mov
cmc
stc
sub
cmp
cld
mov
and
in
mov
gs
xorl
testb
outsb
loope
mov
rcl
hlt
mov
pop
adcl
fsubl
out
mov
cli
mov
xchg
clc
fiadds
outsl
xchg
sub
push
xchg
stc
test
mov
push
inc
cmp
mulb
les
inc
insl
push
movq
les
iret
xor
xchg
lea
subb
xor
or
dec
sar
xchg
in
and
inc
dec
pop
sub
das
or
movsl
pushf
cld
ss
cmp
dec
clc
or
mov
rol
push
sub
mov
push
fcomps
sub
mov
outsb
mov
imul
aaa
pop
cs
outsl
nop
pop
movsb
cld
inc
sub
imul
shrl
sub
ret
hlt
sub
fistpl
jae
rcrb
movsl
dec
inc
out
xchg
mov
sbb
out
mull
pushf
xchg
dec
mov
sub
ljmp
dec
xor
imul
and
xchg
pop
out
mov
adc
clc
lret
cmc
cmp
dec
les
cmpsl
pop
jbe
push
push
add
adc
mov
aad
lock
xor
push
fwait
inc
pop
js
cwtl
mov
cmp
imul
enter
jns
or
test
push
cmpb
sub
adc
fmull
shlb
xchg
or
pop
test
push
mov
mov
inc
add
pop
in
push
lret
lcall
mov
es
movsb
shll
or
cmp
xor
mov
out
and
lahf
fucomi
xchg
push
mov
insb
sahf
cld
lret
fdivr
or
ss
sub
mov
sub
stos
es
xchg
ror
mov
lock
jmp
stos
xchg
fdivl
mov
mov
mov
mov
sub
out
sub
or
loope
adc
mov
mov
dec
cmp
shlw
clc
push
jmp
iret
adc
mov
adc
lahf
popf
lcall
lock
inc
mull
jge
fdivrp
vandnpd
cmp
nop
into
cmc
sbb
push
popf
lods
push
or
popa
test
mov
das
sub
or
cmc
pusha
aam
dec
mov
sub
mov
imul
and
inc
mov
sub
imul
add
dec
mov
out
lods
or
popa
cmpsl
and
push
and
mov
ljmp
shll
add
xor
clc
dec
mov
je
dec
std
and
jl
and
int
mov
cmp
sub
jp
lcall
outsl
movsb
stc
jae
ret
adcl
xlat
popa
testb
sub
push
ja
xchg
mov
jmp
xor
insl
addb
pop
lahf
mov
hlt
sub
dec
std
pop
or
cmp
add
cmp
aas
and
lret
adc
pusha
gs
popf
sahf
outsl
jl
jnp
xchg
pop
mov
and
jnp
shl
gs
and
xchg
int3
adc
sbb
std
adc
fcomp
jbe
in
sub
out
sbb
out
mov
pop
imul
sahf
lea
incl
sbb
xor
and
xchg
movsl
mov
inc
mov
outsl
movsl
mov
adc
ds
test
pushf
jp
call
jo
mov
xchg
inc
add
jns
lods
or
mov
clc
jl
int3
rcll
mov
lret
ds
lods
pop
daa
call
adc
lods
pop
mov
sub
ret
fwait
xchg
pop
movzwl
inc
mov
mov
mov
mov
js
add
imul
fsubl
dec
cltd
andb
mov
jp
jo
dec
dec
popf
fcoms
or
jne
jbe
pop
xor
lcall
lods
pop
aaa
inc
in
daa
mov
rcrl
nop
sub
add
lods
pop
mov
shll
scas
scas
push
jp
sbb
mov
insl
movsb
cltd
pop
stos
shrl
mov
inc
outsl
out
mov
pop
movsl
pop
dec
mov
clc
aam
ss
out
mov
inc
ljmp
and
fmull
mov
nop
xor
mov
inc
cmc
mov
mov
pusha
xchg
jbe
jb
jbe
int3
pusha
pop
aas
fisubs
mov
pop
lcall
clc
cmp
notb
out
pop
shlb
adc
add
dec
mov
dec
jl
or
push
cs
adc
xor
push
dec
sub
push
pop
int3
jae
xchg
fcmovnbe
add
das
cmp
lcall
jmp
aas
sub
adc
clc
pop
jl
pusha
mov
ret
mov
test
cmpsb
lcall
int3
testl
mov
jbe
jle
sub
inc
ljmp
pop
dec
xor
pop
add
loopne
faddp
adc
push
mov
inc
lcall
ljmp
andb
dec
fsubrs
scas
mov
jle
fldt
push
inc
jmp
jbe
mov
jmp
add
jmp
gs
cld
loope
lcall
inc
mov
repz
lods
add
sbb
sub
push
test
loop
int
add
jl
cmp
sbb
mov
shrb
add
aaa
add
and
mov
movsl
rcr
insl
test
and
or
roll
push
push
leave
xlat
xchg
ja
divb
pop
push
and
mov
loopne
test
test
sub
pop
test
sub
xchg
pop
ss
cwtl
int3
and
push
insl
ret
jne
dec
sub
jg
mov
in
lods
add
inc
repnz
int3
jb
cltd
dec
decb
adc
dec
xor
roll
cld
cmp
fimuls
iret
mov
sub
add
sbb
push
jg
cmp
pushf
test
mov
out
scas
aaa
cwtl
jmp
jno
cmp
leave
int3
adc
and
push
sub
sub
inc
sub
sbb
repz
loopne
lods
xchg
jecxz
pop
subl
and
lea
cmp
cmp
mov
cld
or
xchg
sbb
push
or
xor
fucomip
or
xchg
fnsave
aas
adc
xchg
or
cmpsl
push
ret
scas
mov
fwait
into
and
cmp
and
es
fs
sub
in
or
and
mov
pushf
arpl
lahf
fcmovbe
ror
push
sti
or
jge
aas
xchg
xchg
push
iretw
in
ss
dec
mov
sub
cli
sbb
andb
mov
ret
inc
in
or
test
jp
pop
or
cmpb
xor
push
subl
mov
loop
push
imul
imul
and
aam
lods
inc
push
sbb
mov
in
outsl
cmp
mov
sub
inc
xchg
int3
into
dec
and
push
cmp
cmp
test
scas
xchg
pushf
rcr
sahf
xorb
clc
xor
mov
push
into
mov
arpl
sbb
xchg
jp
pop
jo
loopne
cltd
test
pop
lods
and
int
gs
ljmp
std
sbb
jo
cmp
xorl
push
jmp
jae
inc
nop
sarb
jne
xor
je
sub
xlat
and
mov
xchg
dec
xchg
or
int3
xchg
xchg
cmc
movsb
imul
jg
dec
push
in
imul
aas
and
mov
or
jl
loopne
inc
adc
ret
jbe
fidivrl
sub
js
js
xchg
cmc
icebp
in
jge
mov
fisttps
aam
daa
insl
inc
negl
cli
imul
sbb
cwtl
push
cmc
push
and
pop
fcmovu
mov
scas
mov
push
push
mov
in
out
inc
or
inc
es
jb
sbb
add
cmp
movsl
mov
test
mov
xor
je
icebp
aaa
es
xchg
push
rorb
dec
xchg
mov
push
popf
jl
xor
fcmovnbe
stc
mov
pushf
push
or
lock
add
dec
mov
jb
es
pop
and
and
cmp
mov
adc
inc
sti
push
nop
shlb
in
scas
jg
push
cwtl
fistl
pop
push
mov
ljmp
sbb
cltd
jnp
js
push
sub
push
movsb
pop
jge
mov
jno
mov
mov
pop
addb
xchg
add
inc
fwait
hlt
sbb
mov
sub
out
jb
sbb
xchg
sub
vunpckhpd
cld
pushf
jno
std
or
mov
test
pop
movsl
push
push
jge
xor
repnz
rol
mov
jg
bound
add
movsl
negl
cltd
clc
xchg
lods
aas
mov
movsl
fcomps
ret
mov
shll
fidivrl
test
sub
sub
push
scas
jne
sbb
mov
sti
push
imul
jns
push
test
jp
xor
lcall
push
jnp
fisubrl
cs
pop
inc
sbb
adcb
add
push
sbbl
test
aad
sub
aas
std
out
pop
pushf
jp
jb
es
dec
pop
lahf
jge
mulb
or
mov
sahf
mov
add
test
mov
jne
inc
test
xchg
mov
pop
xor
in
scas
test
cmp
push
pop
lret
imul
pop
dec
in
push
jne
lea
mov
int3
mov
mov
in
nop
and
inc
dec
mov
or
arpl
jno
fdivrs
es
lds
inc
push
sub
jp
pop
dec
adc
fisttps
test
ja
push
lret
cmp
lret
stos
sub
test
mov
js
jecxz
mov
addr16
adc
adc
or
aaa
clc
xchg
pop
push
xchg
int3
in
xor
les
aas
aas
mov
pop
and
cmpsb
mov
pusha
push
or
ja
cmp
add
aaa
es
addr16
in
xchg
loop
sbb
push
shrb
inc
inc
fxch
test
test
push
adcl
outsl
inc
jns
fstpt
out
lcall
xor
fsubl
lock
pop
push
inc
xor
iret
fwait
mov
sub
call
es
mov
stc
int3
imul
imul
push
mov
out
ja
enter
iret
dec
out
dec
sarb
inc
pop
cld
in
add
adc
push
jbe
loop
xchg
mov
cmpsb
cmp
repz
ret
into
int3
xor
mov
xor
sti
mov
imul
jle
mov
dec
data16
jge
mov
pop
lds
cmc
hlt
push
adc
in
ret
dec
cmpl
xchg
scas
dec
in
and
push
push
scas
dec
jp
pop
test
cli
push
cmp
sahf
js
and
mov
pop
jmp
repz
inc
nop
test
push
lret
add
or
mov
repnz
jge
lods
iret
cmp
pop
cwtl
jle
jbe
mov
scas
jns
les
xchg
scas
jb
mov
jp
dec
into
rorl
jne
adc
jl
xchg
fdivp
dec
jecxz
shr
xor
push
and
inc
sbb
cmp
bound
mov
mov
mov
loopne
push
xchg
xor
and
aaa
jne
pusha
sbb
mov
stos
xor
ret
lods
mov
les
lcall
push
js
test
test
cld
sub
mov
sbb
fsubl
rcrl
roll
cmp
dec
jmp
sub
sbb
cmp
push
adcl
lock
aas
sub
jmp
mov
dec
dec
andps
dec
repnz
ljmp
out
cltd
jbe
xor
push
cmp
cmp
lods
jl
test
insl
in
pop
pop
jmp
inc
cmp
aad
xor
adc
aas
jmp
sbb
cwtl
mov
adc
ret
inc
adc
test
imul
cmp
pop
cli
dec
ror
out
int3
ds
push
js
stos
adcl
mov
addr16
xchg
fsubr
lahf
movsl
enter
std
push
shl
lea
arpl
cmpsb
push
lock
fwait
lea
xchg
and
cmp
sbb
dec
clc
hlt
xor
or
rcr
mov
xor
aad
push
or
mov
or
cmpsl
add
in
loope
sbb
shll
push
sbb
das
mov
add
enter
dec
in
ret
push
mov
or
xchg
and
cli
arpl
lret
pop
ret
cmp
add
mov
imul
pop
jne
sbb
mov
xor
ljmp
push
xchg
jns
mov
mov
adc
iret
and
data16
mov
push
in
mov
je
dec
sbb
das
xchg
or
xchg
add
xchg
shrb
jmp
aad
icebp
and
addr16
sub
jl
push
rorl
pop
mov
arpl
inc
test
lret
adc
cld
pusha
mov
out
sti
in
add
mov
add
cmp
xchg
jae
jae
mov
aas
mov
push
and
mov
std
in
movsb
dec
cwtl
cmc
imul
lcall
sahf
or
add
mov
dec
xor
jle
xlat
sub
loopne
int3
pop
rcr
call
lcall
or
add
sbb
arpl
push
jo
mov
lahf
je
ret
in
add
jmp
fldenv
mov
pop
mov
xchg
lds
jnp
aam
sbb
into
xor
xchg
push
loopne
xchg
cltd
sbb
jbe
scas
pop
sub
ret
test
lret
ret
repz
xchg
leave
icebp
sar
dec
sbb
jb
mov
clc
ror
dec
pop
cmpsb
js
dec
mov
xchg
add
mov
adc
jbe
enter
pushf
xchg
jnp
stos
pop
or
mov
push
bound
lock
addr16
hlt
in
fmuls
xorb
add
shll
popf
inc
ret
xor
cmpsb
sub
adc
orl
in
mov
mov
test
mov
adc
jnp
cld
cmp
jle
in
mov
inc
pusha
mov
insl
fisubrs
stos
fxch
push
imul
sub
or
or
dec
fidivl
mov
stos
inc
mov
jmp
shl
lcall
push
sbbl
pop
adc
xor
loope
fldlg2
push
sub
out
cld
gs
hlt
xchg
outsl
call
ja
pop
mov
aaa
dec
loope
sbb
fs
or
adc
cltd
int
lods
fwait
push
js
jae
xor
sub
add
test
aaa
testb
sahf
ja
outsl
push
and
mov
push
add
subb
loop
jbe
mov
in
mulb
or
cld
push
dec
in
enter
adc
pop
mov
dec
fistpll
and
jnp
mov
push
popf
adc
and
cmp
aaa
repz
cmp
or
scas
stos
mov
xchg
add
pop
push
mov
mov
push
jl
pop
insb
sub
sti
add
mov
dec
mov
jbe
out
fidivrl
mov
jno
movsl
gs
scas
ret
push
inc
mov
pop
adc
daa
push
mov
push
daa
push
push
bound
sub
ss
aad
loope
or
jg
and
fs
lock
rcll
das
pop
aas
sbb
mov
jns
jo
pop
cmp
and
mov
data16
rcrb
imul
mov
insb
and
lret
mov
mov
insb
int3
ficompl
sbb
xor
add
pop
mov
jnp
loopne
sbb
and
or
das
push
push
imul
jp
pop
shrl
cwtl
pusha
xor
mov
ljmp
add
mov
insb
dec
push
cmp
or
cmpsl
adc
sub
bound
add
dec
sahf
sbb
call
inc
filds
iret
push
ret
and
xchg
sbb
setne
mov
xchg
ds
cmpsl
and
inc
in
xlat
jae
imul
xor
imul
lret
popa
stos
mov
jne
push
xor
cmc
dec
ret
jecxz
sti
push
mov
sbb
inc
aad
fidivrs
push
mov
ret
add
std
cs
sti
cli
sbb
and
push
cltd
daa
idiv
dec
inc
push
std
daa
out
adc
mov
insb
test
inc
mov
imul
jl
jmp
xchg
sbb
movsb
xchg
and
shll
fiaddl
xchg
mov
shll
sub
mov
imulb
mov
fidivrs
ss
pop
or
xlat
jnp
jmp
mov
mov
pop
dec
rolb
xchg
ja
gs
cs
mov
nop
jmp
jmp
ss
rol
rclb
lea
ficoms
jl
fsubr
jno
outsl
sbb
mov
xchg
ffree
test
dec
inc
sar
push
scas
je
push
test
shrb
inc
adcl
mov
dec
sbb
mov
pop
jle
sub
shll
aas
pop
jae
push
sbb
xchg
pop
push
repnz
aas
dec
scas
and
xchg
cwtl
cli
hlt
jno
jl
pop
rcrb
xchg
dec
pop
xor
adc
adc
xchg
ficomps
shrb
fldenv
lock
pop
fwait
mov
fmull
inc
daa
test
push
movsb
and
push
negl
jl
xchg
repz
cmp
nop
cmpb
add
jno
add
jmp
pop
stos
leave
mov
add
pop
aad
lock
ljmp
xchg
cmpsb
sub
or
push
jns
push
push
cmc
rolb
mov
fstpl
push
mov
fldt
push
push
rcr
pop
gs
movsl
cmpsl
add
mov
jns
fmul
aad
dec
lahf
lds
jae
inc
scas
mov
addl
imul
aad
mov
scas
pop
notl
push
xchg
fsts
jo
aaa
dec
in
leave
cmp
mov
push
rclb
out
adc
pop
loop
xchg
loop
add
pop
test
push
popf
gs
xchg
pushf
jb
cmp
test
imul
popa
push
pushf
and
popa
jl
sti
and
mov
and
sbb
inc
mov
cmc
xlat
test
dec
data16
aas
dec
mov
push
jne
cmpsl
mov
outsl
mov
clc
ficoms
push
icebp
push
mov
xor
mov
mov
or
jb,pn
lea
xchg
cmp
mov
dec
loop
es
adc
cwtl
pop
dec
sbb
or
pop
mov
add
xlat
rcrl
add
cli
dec
push
arpl
push
cmp
loope
push
cmp
ret
in
cmp
xor
nop
into
sub
outsb
push
fcoms
movsl
xchg
jge
les
jbe
stos
inc
int
jmp
pop
data16
int
push
mov
add
pop
stos
push
and
hlt
mov
push
daa
sahf
add
and
cmp
testl
and
jmp
mov
andl
int
and
push
mov
jbe
fstps
ret
inc
adc
out
or
lea
lret
adc
xchg
lret
out
xor
call
int3
xor
adc
xchg
pop
adc
mov
cmp
loope
iret
mov
paddw
pop
xchg
aam
or
xor
sti
push
sbb
xchg
sub
pop
pusha
mul
shrl
lods
adc
push
dec
cmp
sbb
and
movsb
sub
xchg
jo
lret
sub
ss
mov
and
sbb
push
cli
stos
enter
inc
adc
sub
das
push
in
inc
gs
xchg
xchg
cmp
sbbl
pop
push
adc
jecxz
xor
sbb
push
fchs
mov
pushf
aas
les
sub
ret
and
daa
iret
aam
fldcw
xchg
cmpsb
mov
outsl
rcrb
dec
repnz
and
push
fbld
jb
subb
pop
mov
outsl
rcrb
dec
repnz
and
push
fbld
jb
subb
pop
and
mov
ret
pop
loop
repnz
and
push
fbld
jb
subb
pop
mov
outsl
rcrb
dec
repnz
and
lods
and
inc
aad
in
jne
dec
imul
loope
mov
inc
les
gs
xchg
add
movsb
xor
je
fs
adc
add
xor
and
les
jne
gs
movsb
xor
insb
dec
jl
or
dec
and
int
out
stos
cmp
call
lds
mov
inc
mov
push
cmc
mov
aas
out
jge
mov
cwtl
insb
pusha
xchg
imul
mov
dec
test
mov
mov
push
pusha
in
add
les
mov
pop
mov
xchg
and
xlat
subb
enter
call
js
mov
movsb
and
mov
test
dec
pop
mov
sbb
aas
int
data16
leave
cmp
jmp
sbb
jns
aam
aam
add
mov
test
xor
lret
movsb
push
jmp
push
push
in
dec
sub
cmp
roll
ljmp
pop
and
add
cmp
xchg
in
jne
cmp
scas
and
and
adc
cli
jns
and
aam
test
xchg
sbbb
loope
fs
push
cmp
adc
js
add
xor
ja
xchg
and
adc
rcrb
sub
pop
loope
xchg
xor
and
aam
les
gs
xchg
add
movsb
xor
je
fs
adc
add
xor
and
aam
les
gs
xchg
add
movsb
xor
lret
inc
pop
fnstcw
data16
sti
loope
cmc
test
outsl
rolb
cld
mov
lret
xchg
dec
rcl
pop
xor
sbb
aaa
cltd
pop
data16
adc
xor
icebp
ja
fisttpll
leave
inc
mov
xor
push
pop
add
movsb
sub
jge
test
dec
add
cmp
hlt
mov
cmc
fstpt
mov
mov
sub
or
outsl
mov
mov
or
out
mov
fstl
cmp
stos
jmp
enter
or
iret
scas
mov
lods
pop
ficompl
xchg
and
xchg
inc
push
jmp
mov
cli
cmp
jl
pop
xchg
pop
mov
ficoml
inc
cltd
xchg
add
test
int3
pop
or
sbb
int
xor
mov
call
push
or
rcr
jno
add
mov
ljmp
jb
xchg
loop
pop
push
test
jns
outsl
lahf
sub
test
sahf
ss
ljmp
leave
cmp
stos
cmp
test
jge
adc
cmp
or
push
mov
out
jmp
out
xchg
imul
loope
mov
xor
lahf
lret
xor
js
mov
inc
xchg
je
sub
std
jmp
jmp
push
push
movb
mov
pop
shlb
dec
dec
rcl
ror
jb
shr
mov
das
je
aad
and
out
hlt
outsl
inc
pop
insl
sub
gs
mov
data16
add
out
cmpsl
dec
movsb
inc
gs
mov
roll
das
mov
cmp
out
cmc
xchg
jp
push
repz
pusha
scas
mov
fstl
pop
orb
dec
pop
pop
rorl
add
enter
clc
mov
out
scas
sub
std
lea
cmpsl
imul
test
jne
add
sbb
pop
mov
pop
push
adc
scas
mov
insl
jne
fs
insl
xchg
std
jnp
fs
xchg
jno
das
xchg
loopne
jecxz
pop
icebp
outsb
mov
xor
les
pop
mov
sbb
push
inc
or
ss
cmpb
repz
loopne
fldenv
fnstcw
roll
gs
dec
loope
add
mov
mov
test
pop
fsincos
pop
aam
popf
xchg
jle
sbb
add
pop
into
outsb
xor
inc
outsl
arpl
xchg
fiaddl
sub
aam
fstpl
shrb
outsl
or
mov
js
add
mov
jno
aad
loopne
inc
and
fcomi
enter
cmpsb
jge
cmpb
pop
dec
std
push
cld
incb
fsubrs
cwtl
xor
inc
jmp
lods
out
stc
popf
cmpb
xchg
cmp
sbb
mov
dec
jmp
xchg
and
scas
adc
and
rorl
pop
je
scas
push
jmp
jle
shll
out
push
mov
push
in
dec
fidivl
jecxz
orl
mov
movl
outsb
insl
mov
enter
loope
jb
jmp
fimull
adc
test
subl
repz
in
gs
divb
popa
aam
or
and
iret
jl
stos
jp
shrl
push
cmp
inc
int3
imull
xchg
cmpsl
cli
clc
mov
adc
mov
ret
and
test
arpl
xor
jno
push
std
adc
call
xchg
xchg
sub
ret
popf
add
icebp
cmpsb
je,pn
mov
clc
or
pusha
rorl
jg
xor
call
add
cmpl
int3
adcb
hlt
loop
in
inc
add
dec
push
jne
xor
sbb
out
daa
icebp
outsb
sub
test
lds
inc
ds
pop
adc
imul
xor
xchg
mov
aad
and
call
jae
xchg
jae
out
rcll
movsl
test
or
mov
push
push
push
or
or
cld
rclb
aaa
jmp
xchg
aam
mov
test
dec
pushf
fsubl
xor
sbb
int3
sbb
mov
ljmp
dec
and
call
dec
pushf
push
or
ds
shlb
icebp
push
addl
mov
ret
mov
mov
fimull
pop
cmp
jne
insl
cli
stc
out
and
mov
test
jnp
add
pop
pop
inc
sbb
jnp
cld
and
pop
sub
test
enter
aam
js
mulb
cltd
push
cmp
adc
push
or
std
xchg
add
inc
or
and
mov
pusha
push
pusha
orb
and
orb
dec
data16
rorl
pop
sti
jbe
loope
push
sub
pusha
mov
xchg
push
mov
loopne
lcall
addl
hlt
cmpsb
cmc
mov
jp
xchg
jns
jo
mov
jge
cs
mov
je
push
leave
cltd
int
jl
mov
sub
mov
pop
rcr
fwait
js
into
cli
out
cmpsl
mov
dec
cld
ficompl
jecxz
pop
lcall
or
adc
out
test
xchg
int3
xchg
scas
sub
jnp
push
and
add
ja
lods
or
rcr
testb
xchg
xchg
mov
pusha
add
cmc
dec
jnp
hlt
insb
sbb
pop
cmp
outsb
push
dec
int
pop
mov
test
orl
adc
ds
aad
rcl
bound
push
fstpl
in
cmp
mov
call
pop
test
movsb
push
sahf
or
and
mov
dec
jge
dec
mov
jmp
sbb
stos
mov
mov
mov
xor
icebp
rcll
sahf
mov
dec
mov
inc
adc
leave
loopne
ficomps
inc
xchg
fdiv
fstl
iret
xchg
sahf
pop
xchg
inc
pop
sub
and
popf
cltd
rcll
movsb
xor
cmpsb
in
popf
mov
mov
ret
mov
loope
pop
insb
xor
cwtl
in
call
mov
icebp
shlb
es
ss
ja
push
cwtl
pusha
loop
je
rcr
xlat
cmpsl
xor
jbe
ja
mov
sub
push
mov
sub
into
loopne
push
cld
jge
shrb
or
mov
in
sbb
nop
mov
jge
inc
icebp
iret
jb
in
sub
mov
mov
scas
cli
push
inc
xor
xor
push
add
or
ds
add
adc
fisubrl
adc
int
leave
push
mov
pop
push
mov
in
mov
jns
lret
cmp
cli
push
scas
xchg
inc
mov
sahf
pusha
lret
jns
sub
in
lea
scas
mov
cmpsl
fstp
sbb
xchg
mov
dec
int
xchg
jg
jbe
mov
and
shrb
pop
xor
incl
les
notb
and
dec
jns
sbb
pop
sbb
xchg
sbb
aas
sahf
adc
cmc
xchg
data16
push
mov
sbbb
pop
call
dec
shlb
mov
scas
in
inc
scas
add
dec
or
loope
lods
cmp
outsl
mov
pop
jbe
sub
repnz
ret
inc
xchg
lret
xchg
dec
rorb
fld
cwtl
mov
push
sub
jmp
dec
mov
inc
outsb
jbe
stos
pop
jae
add
inc
nop
mov
push
sub
sbb
aad
inc
mov
inc
pusha
mov
fstps
sub
mov
imul
sbb
dec
cmc
mov
andnps
fcoms
lahf
xchg
push
mov
mov
out
mov
or
dec
mov
in
movsl
into
mov
xchg
pop
mov
or
mov
hlt
pop
ret
leave
das
push
dec
ret
mov
ficoms
xor
cmp
mov
jg
in
aas
loop
mov
xchg
leave
mov
lea
or
sub
into
xchg
hlt
mov
pop
lcall
aas
cmc
cld
fistpll
and
lea
dec
cmpsb
add
mov
nop
das
adcl
mov
sti
xor
rclb
pop
cltd
jp
inc
cs
pop
in
mov
pop
adc
or
mov
xor
jmp
cmp
mov
xchg
xor
sahf
icebp
xchg
lods
jne
shr
or
inc
inc
stos
push
scas
scas
test
or
jp
push
sbb
xor
inc
add
or
stos
hlt
int3
jl
or
jecxz
ljmp
inc
inc
push
repnz
imul
xor
shr
into
cmpsl
bound
dec
push
mov
dec
arpl
xchg
out
jo
jnp
test
mov
cmpsb
andb
subl
sbb
lahf
das
jge
ljmp
dec
xchg
cmp
add
bound
xor
push
sbb
sub
fdiv
and
dec
push
out
sbb
cmc
adc
push
lret
dec
popf
pop
movsl
mov
mov
adc
mov
lahf
data16
stc
lods
imul
sti
subl
cmc
test
in
fisubs
inc
mov
lahf
pop
aad
sti
test
ja
sahf
xchg
imul
push
outsl
shrb
dec
add
mov
cs
int3
add
jno,pn
jmp
mov
dec
int3
xchg
and
jecxz
dec
cmpsb
out
mov
loope
and
in
mov
dec
pop
dec
cmpsl
push
call
insl
inc
loopne
push
xor
or
push
mov
cmp
jae
in
jp
lret
sbb
dec
cmc
jl
mov
inc
cmp
int
mov
leave
jbe
adc
stc
lods
jnp
fidivrs
jne
jge
sub
xlat
loope
out
ja
push
out
add
add
cmp
std
pop
pop
orb
pop
add
inc
xchg
inc
in
scas
rcrb
jg
mov
ret
inc
movsb
addr16
mov
fstps
and
loope
and
fwait
pop
ljmp
ja
popa
popa
scas
jb
jmp
cmovg
cwtl
stc
push
push
test
mov
sbb
es
and
test
pop
sbb
cmp
push
dec
dec
and
lea
ret
cltd
clc
bound
sub
call
sbb
jg
imulb
addr16
in
mov
or
fs
lock
pop
add
mov
lods
adc
into
js
add
sub
lock
popa
movl
shrl
loop
test
in
in
mov
cltd
push
and
sbb
jmp
fs
addr16
jge
or
dec
popa
pop
cmp
or
in
cli
add
in
aad
xor
lea
in
push
mov
or
inc
push
scas
insb
mov
lret
mov
lds
fists
mov
iret
std
jno
adc
inc
pop
test
imul
aaa
sarl
pop
aam
xor
sub
dec
mov
xchg
mov
mov
test
ret
outsl
sbb
in
test
das
mov
jmp
test
xchg
xchg
sub
jg
es
in
das
imul
mov
xor
insb
fs
fiaddl
into
push
push
jle
sub
xor
and
add
add
pop
les
jbe
sbb
test
les
xchg
pop
fs
inc
and
inc
sbb
jne
xlat
adc
stos
addr16
inc
and
icebp
add
test
rorl
pop
addr16
aam
cli
test
nop
sub
jbe
add
sub
ret
outsl
mov
repnz
mov
clc
jecxz
cli
xor
loop
shlb
cwtl
and
scas
aam
adc
insl
jo
stc
popf
adc
jb
imul
jbe
pop
inc
jo
push
sub
jecxz
xchg
cs
sbb
mov
jecxz
in
and
cmp
nop
xor
cmp
push
lcall
lods
enter
cltd
subl
mov
and
hlt
xchg
out
xor
ds
aas
pop
lods
add
adc
adc
sbb
outsb
jg
mov
inc
jl
jb
xor
dec
jg
lods
fsts
pop
call
cld
mov
icebp
jae
mov
test
mov
test
int3
xchg
inc
stos
loopne
and
out
js
push
int3
and
push
mov
add
packuswb
divl
test
mov
push
and
mov
and
sub
mov
sub
sbb
dec
sbb
dec
popa
jns
mov
add
mov
adc
inc
stos
xorb
aaa
movsl
pop
dec
xor
adc
sbb
jbe
in
cmc
aas
jae
push
dec
daa
lret
leave
in
inc
repz
icebp
mov
and
dec
ret
pop
sub
pushl
adc
pop
ret
stos
cmc
inc
notb
xchg
cs
dec
pop
mov
lds
mov
divl
push
movsb
and
or
pop
and
xor
pop
bound
mov
mov
sbb
xchg
push
lret
dec
insl
stos
jb
mov
cltd
mov
lods
std
aas
test
addl
aad
hlt
cmp
jnp
mov
popf
dec
sub
call
enter
sub
jnp
lock
lret
jo
jecxz
jb
fdivrs
dec
pop
dec
ret
fisubl
insb
rorb
lds
adc
dec
xchg
in
leave
out
add
das
xlat
dec
or
ficompl
jns
mov
stos
mov
adc
push
ds
shlb
and
inc
data16
stos
clc
icebp
and
mov
mov
push
and
stc
add
mov
xchg
sbb
lcall
inc
fldcw
stos
add
cmp
in
inc
xor
push
dec
sbb
inc
fstpl
loopne
sbbb
pop
loopne
cmp
jge
xchg
cmc
xor
mov
das
aad
scas
push
mov
jno
loope
loop
fldl
fldcw
pop
jle
and
aaa
ja
sub
lcall
or
enter
pop
lahf
sahf
mov
movsb
pop
mov
inc
mov
shl
out
xor
and
sbb
and
jg
inc
jae
ret
std
outsl
imul
test
adc
add
lret
movsb
and
or
xchg
pop
cltd
push
jl
lret
add
shll
cmp
in
loope
pop
enter
test
inc
std
jge
or
int3
out
std
add
fdivp
cmpsb
sub
mov
xchg
fdivp
sbbb
lcall
rorb
call
lock
out
mov
div
mov
jg
call
aad
mov
jbe
out
jns
test
adc
leave
popa
cli
loope
pop
fdivrl
jne
xchg
and
adc
lret
aaa
sub
sbb
push
lret
inc
and
xchg
dec
mov
mov
rcl
insb
pop
sahf
in
sbb
cmp
hlt
pop
sub
xor
or
scas
inc
dec
leave
outsb
mov
mov
mov
xor
cmpsl
pop
outsb
cmc
jns
das
cmp
push
dec
popf
dec
loopne
mov
add
arpl
jb
jne
cmp
inc
jecxz
ret
fisttps
push
sbb
dec
and
mov
shl
push
cli
out
inc
lahf
xor
push
and
aas
pop
test
fnstsw
or
movsb
fistl
or
push
xchg
rorb
push
add
adc
push
rcr
add
sti
arpl
shr
loopew
sbb
loopne
lahf
pop
add
or
sbbb
leave
mov
xchg
ljmp
call
xchg
inc
jno
lea
xor
test
jb
mov
inc
cmp
cmpsl
sarl
pop
into
stos
test
dec
enter
daa
sbb
mov
mov
hlt
cmp
in
mov
mov
xchg
mov
and
pop
mov
int
mov
aaa
push
cwtl
mov
jnp
and
fdivrp
ja
ds
gs
adc
je
add
pop
cmpsl
lods
lcall
movaps
sub
mov
fnstcw
mov
xchg
mov
gs
jo
pop
idivb
imul
lcall
xchg
lock
mov
xor
dec
pop
jle
xchg
mov
fsubp
mov
lret
std
rcr
popa
push
inc
nop
aad
es
test
popa
dec
dec
aas
sbb
or
xor
rol
mov
jg
jle
imulb
ss
addr16
test
in
xlat
outsl
dec
out
sti
mov
out
call
pop
cltd
std
xchg
pushf
cmpsb
dec
jns
mov
xchg
addl
movzwl
mov
mov
mov
call
sti
mov
xchg
push
cmc
cmp
sub
jge
xor
decl
aaa
pop
pop
jb
pop
ds
outsb
push
push
arpl
add
shr
shl
xchg
in
cmc
jb
pop
add
inc
xchg
mov
inc
frstor
inc
popa
int3
add
aad
aaa
adc
pusha
dec
ret
das
push
xchg
jecxz
pop
out
sub
clc
lahf
stos
jl
dec
jecxz
mov
cmp
add
int3
xchg
aad
dec
js
test
lods
jns
xchg
adc
stos
xor
sub
test
ret
out
nop
mov
lods
jge
pop
push
jnp
fmulp
clc
jg
mov
ret
mov
xchg
sbb
nop
pop
add
pop
aam
xor
inc
in
ficomps
mov
xchg
adcb
jae
jb
insl
addl
inc
addr16
andl
sub
aas
fwait
das
mov
decl
cs
pop
cltd
dec
mov
mov
xor
and
dec
or
xchg
sti
je
mov
pop
es
jle
cli
or
ret
mov
pop
jg
aad
push
push
rolb
pop
int
int3
outsl
cwtl
sbb
push
sub
mov
sub
adc
fisubs
cmp
enter
sub
mov
xchg
dec
gs
enter
lea
mov
repz
jne
push
mov
pop
pop
dec
lret
mov
cmc
enter
mov
push
cmc
in
inc
in
mov
and
pushf
jmp
shl
nop
xor
lcall
inc
adc
adc
push
mov
inc
stc
in
xchg
sbbl
sbb
mov
jecxz
cwtl
adc
or
jle
testl
les
mov
jge
jbe
sbb
xchg
insb
pop
repz
or
sub
mov
icebp
popa
jbe
negl
inc
xorb
inc
lea
lret
add
cltd
cmp
and
movsb
adc
adc
jge
push
inc
push
lods
sub
pop
fidivl
orb
cli
pop
lahf
addr16
jmp
sarb
cmp
subb
pop
add
and
mov
mov
mov
lcall
ja
ret
cli
cmp
mov
or
xor
loop
inc
adc
or
enter
std
mov
cwtl
mov
clc
imul
sti
sub
xchg
aam
pop
les
icebp
mov
xchg
sbb
pop
mov
and
ds
mov
and
pop
pop
imul
mov
gs
xchg
sahf
sbb
imul
pop
xchg
dec
pop
sub
loopne
addr16
xchg
adc
xchg
pop
loope
push
roll
repz
inc
shl
jge
jne
inc
sub
aaa
addb
add
jne
jge
adc
and
add
xor
sub
xchg
cmp
lock
stc
pop
mov
inc
mov
pusha
pop
repz
shrd
mov
sti
testb
clc
mov
push
xlat
popf
fmull
lock
push
pop
inc
iret
ret
ss
pop
sbb
insl
inc
andb
testb
push
dec
pop
sbb
mov
jle
dec
mov
mov
jnp
mov
ret
loope
outsb
leave
cmc
add
iret
inc
push
ja
xchg
or
outsb
cltd
adc
ret
inc
jmp
cmp
jle
push
jne
pop
mov
loop
jle
sub
pop
xorb
movsb
cmpb
mov
mov
push
rolb
sbb
fbld
adc
scas
dec
lcall
xchg
dec
and
inc
mov
test
lret
push
jmp
repnz
jns
les
sub
jmp
ljmp
sub
xor
aam
std
jns
jne
ds
mov
rclb
outsl
rcrl
popa
inc
fdivrl
cmc
pavgw
pop
xchg
mov
mov
outsb
data16
or
stc
xchg
enter
test
jne
cli
and
dec
pop
mov
loopne
sub
or
inc
sub
adc
xor
cmpsb
xor
cmpsb
mov
arpl
or
aad
mov
test
aam
les
gs
xchg
add
movsb
xor
je
fs
adc
add
xor
and
aam
les
gs
xchg
add
movsb
xor
je
fs
adc
add
xor
and
aam
les
gs
xchg
add
cmpsb
xor
jne
fs
push
test
sub
in
jecxz
or
dec
ficompl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
sub
sbb
or
pop
roll
adc
mov
ss
es
push
int3
push
int3
idivb
sub
sbb
or
jl
insb
xchg
pop
xchg
data16
push
mov
daa
cmp
faddl
int3
mulb
adc
xchg
inc
xchg
pop
inc
xchg
es
push
adcb
int3
cmpb
push
icebp
mov
ret
mov
cwtl
inc
fidivrl
and
sbb
insl
sub
xchg
push
outsb
lret
inc
test
mov
mov
or
mov
jecxz
je
pop
sub
mov
inc
and
or
in
lods
in
xchg
and
int3
imulb
adc
pop
pop
lods
iret
add
mov
in
jmp
mov
mov
adc
push
lea
push
jecxz
in
dec
pop
xchg
ja
outsb
lods
fcmovnu
int
xchg
cmpsb
popa
jmp
xor
int3
in
sbb
popf
inc
sub
shll
and
shrb
add
xor
or
push
mov
cmpsb
insb
xchg
inc
xchg
movsb
data16
test
ss
sti
push
faddl
test
pop
test
sbb
leave
add
xor
and
aad
aam
leave
add
mov
addr16
addb
insb
xchg
rorl
in
pop
sarl
ret
and
inc
iret
rorl
test
nop
jge
jns
adc
dec
jbe
data16
push
pushf
inc
mov
cld
es
push
faddl
int3
idivb
sub
sbb
or
jl
insb
xchg
pop
xchg
data16
push
pushf
inc
mov
cld
es
push
faddl
int3
idivb
stos
dec
cmp
push
or
loopne
movsb
lds
mov
imul
pop
lds
icebp
mov
inc
cmp
jecxz
movsl
pushf
lahf
cmp
imul
dec
pusha
pop
dec
popf
mov
add
shrl
out
imul
adc
xor
or
cmpsl
inc
in
ret
xchg
and
shrb
inc
cmpsl
fs
xchg
sarb
sub
int3
inc
bound
unpckhps
sti
jne
das
movsb
test
dec
sbb
outsb
mov
dec
inc
adc
imul
aas
in
lods
mov
cmp
pop
lock
adcb
mov
sub
adc
decl
cmp
subl
adc
mov
addb
jns
mov
mov
mov
dec
iret
out
push
stos
aam
mov
push
sbb
out
loopne
aas
out
leave
out
lret
push
jne
movsl
repz
lret
sbb
iret
mov
xor
scas
mov
cmp
lcall
scas
imul
mov
mov
test
jecxz
adc
xor
inc
or
xor
es
in
hlt
pause
adc
repz
and
loope
scas
in
adc
andb
pop
jne
pop
sahf
mov
pop
addb
repnz
ja
sub
int3
test
mov
ljmp
pop
push
add
add
cmpsb
lods
pop
pop
dec
imul
sarl
cld
mov
in
psrad
adc
loope
cmp
sub
repnz
inc
sbb
sub
lahf
adc
sbbl
add
push
sub
pop
push
repnz
ja
test
out
jae
jnp
xchg
lret
pop
inc
mov
push
fst
pushf
call
daa
notl
in
cmp
mov
fidivl
push
out
out
ss
cmp
pusha
jl
es
sub
repz
leave
cmpsl
mov
xchg
xor
sub
sbb
or
popf
pop
lods
push
jnp
add
mov
pop
mov
data16
xor
outsb
arpl
xchg
data16
shl
xor
or
int3
cs
mov
xchg
lock
jne
mov
dec
dec
int
out
sub
pop
jmp
sbb
mov
push
inc
adc
das
in
or
jp
xor
ljmp
rcll
ja
mov
jecxz
sbb
sub
inc
mov
out
mov
or
xchg
inc
dec
mov
cs
adcl
sbb
push
xchg
aam
cmp
ds
stos
jne
and
lcall
and
mov
cmpsl
loop
mov
cmpl
cli
jb
leave
xor
or
dec
and
or
push
loope
ja
mov
lds
mov
in
pop
in
push
cmp
int3
imull
xor
push
ja
mov
out
sub
sahf
lcall
pop
pushf
std
push
ret
mov
std
and
je
imul
cmpsb
push
cs
xlat
push
push
cmc
addl
cmp
inc
pop
aaa
idivb
popf
lret
jle
std
push
mov
mov
stos
xchg
jnp
pop
lods
mov
and
pavgw
xlat
mov
sub
pusha
jae
das
idivl
imul
inc
pop
add
popf
fisubs
mov
lcall
mov
sahf
xor
sti
or
mov
jno
xchg
push
cmp
push
dec
add
enter
leave
aad
aam
leave
dec
jle
std
xchg
addb
icebp
push
add
push
shr
mov
push
cmpsb
cli
mov
xor
fldpi
inc
or
out
xchg
adc
fstps
inc
fstpt
or
loopne
xchg
insb
call
or
outsb
or
lcall
cmp
pop
dec
jl
or
test
sub
jbe
pushl
adc
or
cltd
into
xor
nop
cmp
loop
xor
sbb
cmp
jne
inc
push
bound
imul
jmp
pushf
je
divw
mov
push
dec
jecxz
popa
sbbb
fldl
mov
add
movsl
push
test
cmc
in
mov
cmp
inc
pop
xor
das
repz
or
mov
mov
lods
or
jno
gs
popa
xchg
pop
leave
pop
xor
mov
cmpsb
push
jecxz
cmp
or
loop
cmp
pop
jp
or
ficompl
addb
cmpsl
xchg
pop
inc
sub
push
insb
call
nop
push
pop
push
inc
stos
sahf
aad
push
push
in
icebp
mov
das
adc
je
and
jecxz
mov
pop
daa
sarb
xchg
xor
clc
stos
jb
in
incl
insb
rcrb
cmp
lock
mov
dec
xor
cmp
mov
inc
into
andb
divl
and
mov
or
or
add
inc
loopne
subb
xchg
popa
mov
ror
fwait
addr16
xchg
clc
imulb
lret
jp
insb
outsb
mov
movsl
mov
std
jecxz
leave
icebp
cs
cld
outsb
call
push
jmp
jo
mov
jmp
stos
es
inc
shrl
mov
dec
inc
mov
std
das
push
pushw
and
aad
dec
cmpsl
stc
xchg
jmp
mov
int
dec
hlt
pop
sbb
xor
pop
das
outsl
cwtl
mov
shlb
fstp
mov
les
push
jae
mov
mov
lcall
inc
ror
adc
seto
pop
sub
add
xor
and
sbb
stc
mov
inc
mov
xor
push
iret
cli
mov
imul
push
nop
mov
cmpsb
and
xchg
mov
inc
rcll
fimull
dec
inc
loope
cs
rol
imul
andb
pop
adc
mov
or
ds
sti
lahf
outsb
aad
push
aaa
lret
repz
mov
xor
or
sub
leave
daa
add
xor
mov
scas
add
mov
cmp
and
mov
repnz
sbb
pop
jno
mov
scas
movsl
fimull
rorb
mov
xor
xor
push
pop
mov
push
adc
cmp
in
adc
jbe
enter
ret
movsl
adc
add
cmp
insb
jnp
mov
loope
or
scas
pop
cmpsb
aaa
dec
in
dec
movsl
rorb
rcrb
std
notl
aas
sahf
xchg
jmp
sub
vmovshdup
lcall
icebp
pusha
xchg
addr16
scas
fwait
dec
push
sbb
cmp
pusha
xor
test
mov
jge
jge
push
dec
add
xor
stos
je
fstp
les
pop
loop
xchg
pop
add
jg
push
jge
scas
inc
push
push
es
cwtl
add
xchg
sub
js
out
js
sbb
or
popf
inc
leave
cld
dec
cmp
pop
dec
out
adc
je
mov
mov
jb
jne
insb
mov
push
jb
pop
inc
aas
lock
push
test
sub
mov
in
rcl
push
add
push
ret
add
and
push
pmullw
sbb
and
sub
and
mov
sbb
sub
or
xchg
add
xchg
cmpsl
dec
mov
push
pop
movsb
ljmp
pop
sub
outsl
and
lret
loop
jecxz
cwtl
and
test
jecxz
ret
adc
pushf
push
add
xchg
pusha
shl
roll
fmuls
push
mov
jae
sub
test
lret
xor
ss
jmp
jnp
xchg
imul
adc
stos
dec
and
mov
out
daa
add
push
push
icebp
das
int
push
lahf
xorb
inc
adc
pusha
imul
sub
adc
xchg
mov
xor
mov
sbb
xchg
mov
cwtl
cmpsl
jecxz
and
test
neg
dec
shlb
ret
cmp
fmul
xorl
shlb
sahf
sahf
mov
sbb
lea
mov
call
insb
ss
aas
lret
xchg
push
jl
push
dec
xor
and
daa
pop
push
int3
test
fstp
dec
pop
sub
xchg
and
outsl
adc
sbb
mov
shlb
je
sarb
leave
adc
mov
incl
lahf
rorl
pop
psrld
sub
into
cld
arpl
sub
xchg
ja
nop
loope
mov
imul
xchg
je
movntq
out
or
jae
sub
sbb
xchg
and
mov
xor
add
les
xor
sarl
lds
jnp
cmpb
push
dec
jb
add
int
lahf
jb
jg
add
lds
test
xchg
cltd
cmpps
repnz
and
lret
inc
pop
lods
cmp
pop
int
les
mov
adc
lret
jnp
jl
xor
aad
push
pushf
lret
lods
stos
cmp
mov
addl
aas
and
mov
jne
mov
mov
cld
and
stos
les
add
mov
dec
sahf
packuswb
movl
jge
xchg
xchg
mov
push
scas
ja
add
ficomps
imul
add
jne
mov
xlat
push
cltd
add
loope
cmp
add
xchg
in
pusha
movsl
xchg
pop
loop
mov
lahf
jecxz
stc
pop
in
in
test
sub
jecxz
loop
push
cld
xor
shll
stc
addb
das
sti
dec
cwtl
cmc
push
sub
adc
inc
das
mov
fcmove
fistl
pop
jp
subl
jns
sbb
mov
push
movsl
mov
add
dec
push
and
fistps
xchg
fildll
rcr
adc
test
mov
repz
sub
loopne
inc
insb
cmp
imul
mov
mov
sub
mov
stos
pop
jo
int
mov
push
or
je
mov
cli
movsb
sub
xchg
pushf
int
mul
aas
push
push
jmp
add
xor
stos
jp
out
ds
dec
popa
test
jmp
sub
inc
stc
imul
jge
enter
insl
jo
nop
sbb
je
gs
push
out
xchg
cmpsb
lcall
call
lret
mov
dec
mov
lock
jno
pop
push
sbb
xchg
push
mov
aam
add
mov
jmp
cld
pop
jle
and
int
fidivrl
aam
int3
mov
out
aaa
pushf
gs
dec
xor
pop
fnstenv
insl
or
adc
add
popf
in
adc
or
jnp
dec
lods
mov
jle
push
jl
js
adc
jb
or
repnz
mov
mov
push
ja
orl
add
dec
lret
add
mov
scas
mov
rol
cmp
and
push
insb
cmpsb
cs
xchg
sub
outsl
cmp
cld
push
or
inc
je
mov
lcall
xchg
add
sub
pop
mov
dec
and
pop
jmp
std
xor
push
mov
mov
insl
lds
or
lock
or
jbe
or
bswap
iret
test
scas
push
sub
sub
imul
adc
cmpsl
das
or
dec
jbe
xchg
aad
insl
sar
push
movl
and
cs
mov
sbb
mov
scas
rolb
mov
fwait
push
roll
jp
stos
inc
push
cs
and
xor
int
and
in
cwtl
pusha
aam
mov
hlt
subl
cmp
sbb
or
and
inc
leave
jp
cwtl
mov
les
jno
pop
mov
popf
repz
shlb
jb
mov
mov
xchg
push
mov
je
jo
mov
jl
inc
cwtl
mov
call
sbb
fwait
xchg
push
sarl
push
nop
sahf
and
cli
dec
enter
int
mov
sbb
sbb
dec
lods
lods
mov
adcl
shr
lods
iret
bound
aaa
push
and
pop
cmp
in
mov
jb
pop
sbb
shlb
mov
cmc
imul
shr
mov
sub
out
mov
sub
ret
jae
adc
jmp
fistpll
loop
jns
gs
mov
jmp
loopne
xchg
fstpl
clc
out
jle
jne
lods
jmp
lahf
mov
mov
aas
sti
mov
das
xchg
insb
mov
mov
and
adc
jl
jne
or
shlb
pop
dec
daa
cmp
mov
xchg
cli
in
popl
cmp
xchg
push
mov
xchg
or
sbb
mov
fwait
dec
adc
jo
daa
mov
popf
daa
pop
sbb
ret
negb
xchg
pop
mov
orl
xor
dec
pushf
dec
or
or
scas
xchg
outsl
mov
xor
stos
andb
in
xor
add
mov
pop
lret
adc
daa
adc
leave
in
movsl
add
es
jge
mov
lock
dec
push
add
lock
data16
ss
xchg
adc
mov
movups
js
cli
sub
inc
pop
inc
dec
loopne
push
bound
sbb
notb
ds
notl
push
push
pop
and
inc
test
scas
or
gs
repnz
int
fbld
mov
movl
sub
or
sbb
cmp
jo
jo
and
sbb
fwait
hlt
fidivs
add
cwtl
imul
loopne
jno
jne
or
xor
mov
cmpsb
imul
sti
shrb
mov
lea
xchg
sbb
pop
mov
cmpsl
sbb
add
bound
mov
cld
jbe
pop
and
testb
test
push
mov
lods
pop
cmp
imul
imul
popl
mov
jle
jae
xor
adc
push
push
mov
pop
icebp
iret
pop
gs
movsl
fimuls
lods
icebp
movsb
xchg
call
xor
fnstenv
pop
mov
jns
mov
imul
pop
mov
pop
jg
ret
or
shl
pop
stc
repnz
test
push
push
inc
xchg
mov
xchg
jp
pop
stos
or
adc
sub
jno
jb
jp
or
fnsave
jo
mov
sbbl
xor
jg
nop
jg
imull
mov
cltd
pushf
xchg
leave
adc
call
out
and
subb
call
push
outsb
lock
jno
inc
or
in
inc
xorl
lcall
shl
inc
je
lret
add
jmp
incl
addb
mov
jmp
jg
jbe
add
sti
addr16
sbb
testl
lock
dec
xor
inc
addb
inc
idivb
outsl
arpl
aad
sub
and
xchg
jb
sar
cltd
out
push
push
cmpsb
rorl
js
aas
mov
orl
or
pop
jae
subl
add
sbb
data16
pop
sbb
jbe
fs
xchg
push
test
push
enter
mov
scas
mov
fmulp
icebp
js
test
test
aam
mov
mov
int
movsb
pop
or
outsl
ds
inc
inc
stos
inc
add
pop
aaa
xlat
jne
cmp
add
out
pop
jg
mov
stos
xchg
jb
roll
fisubrl
cmpsl
mov
pop
inc
jmp
mull
jb
push
dec
pop
imul
popa
inc
mov
fisttpl
and
xchg
imul
push
and
xor
xchg
push
pop
scas
lcall
scas
or
popf
pop
loop
push
mov
loope
or
cmp
jg
sti
fwait
movsb
in
or
mov
in
xor
xchg
stos
arpl
test
cmpsb
js
icebp
xor
imulb
mov
test
pop
mov
repz
sar
popf
mov
sub
pushf
inc
ds
ss
xchg
xchg
adc
sarb
popa
loop,pt
repz
jb
sbb
fs
inc
push
addr16
out
inc
imul
adc
pushf
xor
sbb
popf
jb
or
jne
shll
push
adc
cmpsb
cmpsb
xor
int
insl
ret
sbb
push
jne
in
inc
mov
jb
test
dec
jno
adc
lea
push
add
cmpsb
push
or
dec
into
cmp
cmpsl
or
push
repnz
rcrl
cltd
lcall
popf
or
enter
push
cld
movsb
mov
cld
fwait
and
shll
subl
xor
lock
repz
adc
jns
xlat
lea
mov
lea
add
pop
dec
fcmovne
out
pop
inc
rcrb
rorb
mov
sbb
xchg
xchg
pushf
cmp
mov
int
mov
inc
cmpsb
push
jmp
aad
mov
push
and
push
jge
add
mov
mov
jns
mov
rolb
ljmp
and
xor
push
fcmove
or
xchg
sub
and
fsubrs
lret
and
adc
xchg
push
mov
fbld
mov
or
cld
push
sti
cltd
cmp
lret
rcll
mov
shlb
adc
test
jae
and
popa
incb
into
add
icebp
xlat
mov
push
ss
leave
fidivs
sub
mov
push
adc
mov
dec
divl
shll
inc
xchg
lcall
push
sbb
mov
mov
mov
int
lods
pop
negb
inc
test
adc
xchg
fmuls
mov
out
loop
popa
and
scas
movsl
aas
pop
jbe
mov
mov
popa
mov
js
dec
cmp
cltd
lds
mov
xchg
scas
fisttpl
push
jecxz
adc
enter
add
sbb
das
adcb
cli
adc
leave
popa
and
pop
sbb
in
mov
and
cmp
inc
ficoml
adc
std
js
adc
test
xchg
repz
inc
lret
scas
jle
push
push
jge
int3
pop
pop
cmpsb
mov
mov
shrb
jns
int3
and
pop
xchg
fmulp
pusha
jge
cltd
fsubs
lock
mov
cltd
and
pop
hlt
jae
pop
and
sahf
xor
pop
jmp
inc
jbe
les
sbb
or
or
push
xchg
jle
int3
ret
or
test
in
add
mov
sbb
cmp
mov
pop
das
sbb
sbbb
xor
inc
cmc
sti
aad
push
pop
mov
mov
cmc
out
jns
jp
mov
dec
jnp
or
repnz
fnstsw
sub
add
cs
pop
test
mov
inc
cld
pop
adc
adc
sub
cmpsl
out
jns
jne
pop
add
xchg
jge
popa
pop
jle
lret
sub
push
icebp
xchg
fwait
ljmp
xchg
out
loop
mov
mov
movswl
pop
mov
and
xchg
jle
lret
jns
scas
mov
enter
mov
aaa
mov
add
insl
lret
mov
out
jo
dec
inc
dec
add
aam
je
loope
mov
mov
addr16
cmp
jns
shlb
stc
push
sbb
mov
outsb
or
test
lods
decl
lds
jecxz
add
and
lretw
dec
imul
sub
dec
cmp
jo
shll
cli
insl
dec
testl
and
lea
jae
pop
fwait
or
or
pop
dec
cmp
mov
xchg
into
leave
insb
lret
push
inc
push
push
pop
iret
setp
sub
int
icebp
stc
or
insb
or
aaa
mov
cmp
cmpsb
aaa
push
lds
inc
add
xchg
aad
sub
xor
rorb
popa
pop
fnstenv
stos
mov
loop
mov
mov
in
pop
xchg
or
push
std
bound
pop
xchg
bound
movsb
sub
pop
test
pop
mov
arpl
cs
sub
or
dec
adc
das
pusha
sahf
add
jle
imul
dec
daa
or
fidivs
xlat
dec
arpl
aad
and
clc
aaa
cs
divl
lcall
dec
dec
inc
cmp
xchg
ret
mov
addr16
in
pop
mov
xor
add
out
cmp
mov
xlat
mov
into
insb
mov
lret
jb
or
ret
push
sbb
or
rorl
dec
cmpsl
or
int3
mov
dec
xchg
in
dec
cmp
and
rolb
pop
mov
cmp
fwait
test
add
cmc
test
xor
mov
cmpsb
insb
xchg
pop
xchg
data16
push
pushf
inc
mov
cld
es
push
faddl
int3
idivb
sub
sbb
or
jl
insb
xchg
pop
xchg
data16
push
pushf
inc
mov
cld
es
push
faddl
int3
idivb
sub
sbb
or
jl
insb
xchg
pop
xchg
data16
push
pushf
inc
lea
cld
es
pop
fldl
int3
idivb
sub
sbb
or
jl
insb
push
pop
push
dec
mov
sti
inc
je
adc
and
xor
jne
gs
xor
adcl
into
popa
lds
add
xor
shll
adcl
or
push
lds
std
mov
add
xor
sti
out
jmp
lcall
pop
inc
aad
out
xchg
pop
xchg
sub
pop
jecxz
pop
shll
popf
add
mov
in
pop
stos
cmp
dec
out
mov
dec
cmp
ret
push
pop
xchg
add
lcall
jp
mov
lods
cmp
inc
fcmove
ds
sbb
sub
xchg
int
xchg
cld
mov
stos
jle
aam
aad
hlt
mov
cld
push
jns
popa
hlt
bound
push
ret
inc
add
cmpsb
add
test
push
cmp
xchg
fcmovu
and
xchg
mov
mov
xchg
jbe
jae
test
out
sub
stos
sarl
ds
sbb
inc
inc
cwtl
and
xchg
ret
std
add
ret
pop
xor
add
shll
add
gs
adc
stos
mov
aad
insl
jnp
push
sbb
sub
xchg
xchg
or
mov
push
aaa
xchg
push
mov
push
sbb
ljmp
roll
xchg
icebp
or
inc
std
push
iret
pop
notb
inc
mov
mov
cmpsl
push
aad
fisubl
push
shlb
stos
es
xchg
repz
pop
xchg
add
inc
aad
lds
jae
add
xor
jecxz
repz
and
arpl
jae
add
xor
mov
jb
or
pushf
jmp
insl
lcall
mov
in
sahf
dec
int
cwtl
sub
decl
dec
daa
loop
aaa
shlb
xchg
inc
cmp
jo
cmp
bound
andnps
add
fwait
pop
test
jno
sbb
ret
insl
outsl
pop
sti
push
jbe
push
adc
dec
pop
aad
imul
sub
rclb
mov
mov
fsubrs
sub
loope
hlt
test
sbb
and
push
push
aam
popa
pop
pop
adc
movsl
fmul
cmp
scas
fwait
and
cmp
inc
push
in
xor
mov
and
insl
xor
sbb
ljmp
mov
jg
loope
inc
popf
sbb
push
fstps
roll
push
test
or
cld
call
add
aaa
sub
gs
pop
sub
push
jp
outsb
cmp
jb
push
lods
pop
mov
push
mov
daa
push
mov
inc
pushf
call
jno
sarb
lcall
dec
enter
gs
mov
addr16
mov
or
xchg
bswap
pusha
cmp
push
fists
iret
das
lods
cmp
xlat
mov
xor
push
sbb
pushf
push
lods
mov
sbb
insb
testb
mov
push
mov
dec
jbe
mov
mov
xchg
imul
sti
cmp
in
sahf
movsl
lret
repz
mov
movsl
adc
imulb
and
add
push
cwtl
xor
pop
add
mov
xor
xchg
mov
gs
jle
outsb
mov
xchg
daa
xchg
or
inc
lret
sub
loopne
imul
roll
mov
imul
dec
push
lret
lds
lret
dec
sub
das
ljmp
or
push
mov
cmp
inc
fdivs
incb
stc
nop
pop
aas
out
push
push
test
push
cltd
push
mov
fildll
fistl
lods
mov
and
cs
pop
sahf
mov
jnp
clc
out
ficompl
xor
fwait
sub
mov
adc
pop
scas
xorb
ss
inc
shrl
sbb
das
mov
fs
inc
adc
mov
jns
inc
dec
or
call
push
mov
push
inc
mov
cmp
add
aad
jbe
dec
mov
loope
fwait
rcrl
jnp
ds
stos
add
inc
add
stc
pop
cmp
sub
jl
addl
xor
dec
jmp
or
jnp
mov
lahf
ljmp
shrb
rcr
mov
or
jecxz
ret
in
std
insb
jle
pop
xor
mov
add
dec
lcall
sub
movsl
out
pop
test
dec
lcall
mov
xchg
xchg
ss
fsubs
push
out
js
mov
pop
rorb
jmp
pop
mov
add
in
mov
ljmp
fisubrs
adc
mov
sar
cmpsb
lock
out
sbb
jecxz
les
or
xchg
pop
inc
outsb
mov
jmp
std
popf
popf
jle
data16
fdiv
cmpsb
sub
jns
inc
jmp
pop
std
dec
fdivrl
mov
test
cli
lcall
fdivrs
aas
adc
inc
cs
add
stos
arpl
fcomps
xor
stos
jge
dec
jne
inc
mov
insl
jno
imul
sbb
test
or
sahf
cwtl
and
mov
mov
push
and
jp
jge
adc
push
or
jbe
jae
gs
mov
mov
jecxz
ror
mov
cld
stos
pop
cmp
jo
out
cmp
scas
ret
lock
fcoms
outsb
aaa
xchg
push
stos
mov
pop
xor
ficompl
push
out
lods
and
lret
mov
test
mov
push
xchg
lock
std
lea
negb
xor
sub
das
sub
loope
and
jmp
pop
stc
test
neg
cmp
push
inc
pop
fsubrl
jbe
addr16
pusha
out
ficoms
mov
sub
adc
xlat
roll
sahf
mov
repz
and
inc
in
jp
add
mov
xchg
inc
sarl
push
jno
js
or
jbe
cmp
or
jge
add
jb
icebp
push
add
imul
ljmp
cmp
sbb
pusha
or
arpl
in
push
popf
inc
xchg
aas
cltd
mov
rcrl
jne
divps
add
in
push
cmp
lods
cmpsb
pop
lret
and
and
xchg
dec
xchg
nop
frstor
inc
test
pusha
jge
in
sbb
inc
jl
push
adc
hlt
jae
pop
fdivrs
mov
repz
je
pop
sbb
push
fsubl
sbb
or
scas
push
cli
sbb
pop
or
jae
adc
outsb
mov
jl
sub
inc
loopne
pop
xchg
push
xchg
pop
push
jmp
outsb
shll
fildl
test
mov
mov
out
ret
dec
lods
cltd
cmp
icebp
andb
fsubrl
les
cvtps2pi
sbb
iret
add
cmp
cmp
out
push
lds
and
mov
mov
inc
enterw
lds
xor
jl
jg
xor
aad
push
cmp
into
mov
and
mov
bound
pop
das
rcll
aad
sbb
enter
jmp
mov
divl
pop
pusha
mov
cmp
jp
aad
std
fdivrs
dec
loopne
cmp
fs
mov
jae
shlb
sbb
sbb
sbb
mov
mov
jg
jne
mov
decl
fwait
sti
xchg
cmp
ror
push
cwtl
jp
pop
inc
push
icebp
insl
pusha
js
loop
ds
lods
js
addr16
mov
and
icebp
lret
sbb
adc
dec
xchg
aad
loope
jbe
jmp
pop
mov
loopne
push
push
mov
insb
sub
and
in
shll
leave
jecxz
roll
movsl
aam
out
mov
aas
push
call
popa
inc
loop
pop
sbb
jb
movsl
dec
add
mov
xor
inc
mov
and
sbb
sbb
push
cmp
jmp
adc
push
push
loopne
popa
mov
shrb
add
jns
xchg
adc
cmp
out
movsb
jmp
repz
sti
dec
addl
pop
into
add
mov
insl
sub
or
mov
jo
inc
mov
jns
fcoms
in
jl
repnz
mov
jecxz
lret
lods
int3
mov
nop
dec
out
nop
mov
das
negl
repnz
adc
dec
pop
xor
adc
stos
mov
aam
je
xchg
xchg
aam
push
jne
inc
out
mov
mov
fsubl
xchg
sub
ljmp
jnp
outsl
scas
push
dec
cltd
mov
xor
push
sub
mov
or
jmp
leave
sbb
lods
add
adc
xchg
test
xorl
push
inc
ret
pop
mov
test
sub
ja
fadds
xchg
jo
outsl
fwait
jno
sbb
jecxz
test
mov
adc
mov
sbb
loop
add
fptan
dec
inc
fwait
outsb
imul
mov
jecxz
popa
push
test
pop
xor
addr16
jne
cld
mov
sbb
jno
add
movd
ljmp
adc
jmp
push
movsb
pop
dec
mov
mov
xor
mov
sti
xchg
arpl
fbstp
sub
jns
mov
out
jbe
inc
orl
mov
outsl
jge
xchg
test
xor
jg
pop
lahf
shlb
adc
bound
adc
jns
mov
sbb
pop
in
push
push
and
pop
rcr
jle
popa
cmp
sbb
ss
jle
cmp
or
mov
movsl
jp
or
fs
pop
sbb
cmp
and
inc
subb
cmp
fsub
push
mov
js
popa
pop
aaa
mov
xor
jbe
jne
ja
mov
addl
pop
inc
dec
in
call
xchg
repnz
jbe
fldcw
cltd
cmp
ss
dec
xchg
jmp
mov
outsb
js
data16
aam
rcl
xchg
mov
and
and
sub
cmp
mov
xlat
je
je
cmp
in
fdivrs
xchg
lock
xor
and
push
test
lret
mov
xlat
jp
ljmp
imul
pop
fbld
mov
xchg
and
sarb
mov
sub
scas
push
lds
lock
cmp
arpl
mov
rcrl
dec
aad
out
xchg
int3
js
push
sub
xchg
das
push
in
push
mov
cmp
out
dec
jb
into
xchg
lea
lds
push
pop
adc
pop
mov
rcr
sbb
and
push
popf
mov
pop
inc
sbb
aad
leave
sbb
jnp
daa
jp
in
pop
fwait
pop
or
test
xchg
test
jge
pop
inc
or
dec
push
aad
hlt
sub
into
push
cwtl
fcmovnbe
enter
inc
daa
pusha
jnp
and
fidivrl
js
cltd
xor
push
xchg
xorl
stc
add
mov
inc
lahf
xchg
imull
leave
mov
in
sub
pop
push
flds
mov
mov
pop
xchg
andb
les
dec
lods
jle
dec
add
sub
add
jo
jbe
sbb
in
frstor
mov
ret
hlt
jo
arpl
adc
cltd
ljmp
aas
jb
cmp
adc
jl
add
and
or
movl
fdivr
mov
add
jb
push
sahf
cli
jne
pop
sbb
mov
mov
ret
iret
mov
jg
sbb
ret
add
sarb
mov
das
sti
jno
and
and
aaa
jb
lret
push
inc
repz
test
movsb
push
xor
dec
pop
pop
das
pusha
add
repz
cmp
fistpl
shrl
sbb
data16
jg
add
sbb
mov
repz
mov
pop
xchg
je
dec
push
sub
andb
out
pop
dec
xor
dec
jb
pop
mov
cmpsl
pop
xchg
sub
into
xchg
xor
lods
iret
loop
idivb
scas
cmp
insl
out
dec
sbb
mov
nop
sub
subl
inc
loop
stos
sbb
outsb
cld
movsb
push
inc
mov
mov
cmp
dec
stos
push
mov
mov
pop
inc
leave
inc
test
jecxz
sbb
pop
sti
adc
aam
andl
mov
lret
push
cmpsb
nop
sub
pop
sbb
cld
sub
pop
sbb
call
xchg
test
aas
data16
xlat
mov
lcall
into
cmp
ret
xchg
movsl
pusha
mov
aam
ret
pop
cmp
cmc
fsts
mov
fneni(8087
fcomp
call
aad
and
pop
jbe
xchg
add
push
inc
jnp
es
in
leave
xor
xchg
mov
sarl
data16
out
push
mov
in
add
jg
repnz
int
cmp
adc
mov
int
pop
xor
fdivs
popa
jae
lea
inc
mov
xor
leave
sbb
aad
adc
movsb
popf
into
fcoms
in
imul
push
test
outsl
mov
inc
ret
xchg
call
lcall
movsb
cmc
pop
je
inc
adc
jnp
test
loop
ljmp
aas
ficompl
add
lcall
mov
paddq
dec
mov
or
mov
aas
mov
insl
sbb
xor
rorb
jle
inc
jp
cmovo
jae
sub
adc
mov
out
enter
cmp
icebp
sub
rorl
jb
dec
pop
and
outsl
add
imul
mov
mov
adc
xchg
int3
dec
or
movsb
mov
dec
fwait
pop
add
xchg
and
pop
pop
mov
jo
cltd
pop
and
mov
movsl
enter
out
testb
decb
ja
mov
test
cld
ficomps
imul
aas
push
lock
mov
out
dec
fwait
int3
scas
sbb
jge
shr
sub
mov
andl
iret
or
mov
gs
roll
cmp
ja
ret
idivl
sbb
cmc
dec
add
arpl
pusha
mov
or
or
xchg
pop
mov
mov
add
popa
xor
mov
es
lods
into
mov
fcmove
shl
daa
push
ja
aaa
pop
mov
pop
pop
push
xchg
cltd
in
stc
and
add
fs
push
popf
adc
lods
mov
std
rolb
jl
out
lret
jmp
or
leave
out
xchg
xchg
jmp
pusha
orl
test
scas
sbb
and
shrb
push
imul
mov
stos
movsl
cmp
sub
clc
cmc
jo
adc
cltd
ja
fbld
push
pop
xchg
dec
repnz
js
std
iret
clc
xchg
orb
and
loopne
fimuls
inc
cltd
sarb
sbb
sti
push
mov
inc
cmp
ss
adc
xchg
fistl
xor
mov
test
rorl
pextrw
inc
mov
or
ljmp
not
mov
jecxz
popf
sbb
pop
push
orb
test
sti
out
into
movl
add
scas
mov
imul
fwait
mov
mov
sbb
dec
jno
jnp
aaa
out
addr16
ficomps
movsl
insb
xchg
pop
sub
and
cwtl
and
adc
gs
pop
popf
jno
or
xor
je
xchg
rcpps
xchg
dec
jge
inc
mov
inc
cwtl
push
lahf
inc
sbb
and
push
add
xor
addr16
pusha
pop
sbb
iret
push
mov
lock
pop
pop
sub
or
hlt
sahf
mov
mov
add
lods
lods
lds
jle
je
adc
aad
in
adc
test
or
adc
add
pop
pop
or
lret
outsl
sub
or
aas
inc
sahf
pop
xor
jno
cli
mov
dec
ret
fcmovnb
test
cmp
jae
jb
shlb
mov
adc
lods
stc
aaa
and
push
les
mov
pop
hlt
or
xorb
in
lods
sbb
loopne
pop
push
mov
push
sti
mov
lods
mov
or
call
insb
mov
xor
xor
jp
mov
lods
inc
lahf
pushf
add
negl
xor
jnp
xlat
dec
push
mov
inc
and
or
imul
cmp
es
mov
int3
mov
pusha
add
jecxz
ret
dec
repnz
rol
je
xor
push
rorb
mov
repnz
pop
cli
stos
mov
ficoml
nop
fcomps
jl
fbld
jae
into
jo
repnz
jnp
lock
lods
and
push
inc
cmp
lret
adc
and
jmp
inc
loope
cmp
mov
or
je
jb
notb
clc
or
jo
insl
jbe
cld
mov
in
jnp
and
cld
enter
icebp
cs
into
mov
add
test
out
jb
jo
arpl
mov
ljmp
pop
xor
cmp
cmp
push
ss
out
mov
clc
sarl
leave
in
js
movl
dec
stos
leave
outsb
dec
or
ljmp
mov
scas
stos
mov
dec
dec
lret
xchg
sbb
pop
jno
mov
imul
cld
push
into
scas
addr16
and
push
call
in
cmpl
pop
mov
rcr
lds
cld
pop
push
outsb
jmp
fadd
push
daa
push
inc
insb
jp
int
jle,pt
test
adc
mov
arpl
add
ret
test
pop
push
shl
adc
xchg
cmp
cmp
inc
hlt
sti
or
adc
fidivrs
out
insb
out
inc
je
imul
inc
fs
pop
pop
out
adc
sbb
nop
sub
and
and
xor
mov
in
aam
shlb
add
cltd
sub
out
fwait
mov
dec
aas
test
cmp
lcall
out
pop
outsb
rcl
aad
adc
or
cmpb
jno
add
push
or
cmp
jp
sti
repz
xchg
push
repnz
sub
mov
add
xor
insl
push
jne
xchg
cmp
fldenv
incb
lcall
mov
push
cmp
mov
and
lahf
push
outsb
daa
pop
pop
fidivrs
or
leave
int
lret
mov
jne
and
in
mov
mov
insl
stos
xchg
sub
pop
jb
jb
fwait
inc
jbe
sub
jb
shr
test
in
mov
dec
out
insb
insl
stos
cmpsl
xchg
mov
sub
sbb
inc
call
sti
sbb
sub
sbb
pushf
lods
stos
out
out
jbe
hlt
out
jne
ret
in
call
add
jle
fwait
nop
xchg
xor
movsb
inc
mov
jg
imul
xor
jae
imulb
inc
les
xchg
repnz
lds
or
pop
test
mov
cmpsl
mov
push
ret
lret
xchg
push
push
setge
push
fcmove
push
mov
shrl
and
and
cwtl
mov
push
add
pusha
in
adc
add
push
or
mov
push
mov
movsl
insl
adc
adc
je
push
ja
lds
mov
push
push
ss
pop
imul
loopne
movsb
es
jbe
frstor
popf
fsubr
xorb
push
stc
rolb
xchg
test
pop
mov
addr16
adc
sahf
imul
xor
vcvtss2si
cmp
xchg
pop
scas
add
mov
mov
push
fcoms
cmp
mov
pop
fsubr
scas
daa
xor
movsb
xchg
jg
push
inc
in
sub
jb
or
push
test
loope
shl
push
jmp
pushf
push
in
loopne
cmp
jo
jae
or
push
loop
and
jecxz
ficomps
jae
lahf
jl
adc
dec
divl
cmp
stc
das
and
in
and
sbb
fs
jno
lock
xchg
nop
in
aad
loopne
sub
cmp
cs
inc
ret
mov
mov
pop
popa
sbb
lcall
mov
mov
dec
imul
jp
cmp
jne
add
mov
inc
push
sbb
sub
lods
lea
jno
ret
inc
js
ja
cld
jo
imul
push
stos
cwtl
push
xor
inc
js
xchg
inc
or
dec
and
icebp
loope
mov
clc
les
inc
cld
pop
or
or
push
iret
push
scas
xchg
push
sahf
or
sub
xlat
pop
lds
loope
dec
push
fisttpl
jo
dec
nop
js
sub
mov
push
inc
xchg
insl
mov
xor
push
inc
outsl
mov
xchg
call
mov
lcall
adc
cld
inc
pop
dec
inc
sbb
push
mov
push
pop
mov
dec
insl
xor
jns
dec
ror
je
lods
sbb
jmp
adc
outsb
jle
insl
nop
lock
test
sbb
sbb
dec
out
mov
and
data16
icebp
xchg
jmp
add
ljmp
gs
sub
sbb
cmp
and
mov
jne
adc
xor
aad
xor
jecxz
xchg
repz
aas
add
xor
orl
or
insb
mov
into
cmp
les
sbb
ja
popa
fldt
cmp
stc
adc
or
sub
dec
jmp
xor
lahf
outsb
pop
cmp
decb
jle
jnp
scas
xor
int
movsl
push
adc
sub
xchg
add
jmp
xchg
pop
mov
popf
mov
daa
lock
ret
jge
pushf
adc
ds
pushf
or
jbe
jnp
mov
mov
ljmp
rorl
fadd
mov
clc
cmp
dec
clc
jnp
lds
jge
aam
addl
mov
test
test
push
push
lods
xor
pop
setle
mov
mov
add
mov
adc
pop
jbe
and
sub
cmp
or
mov
pop
mov
sbb
jo
adcl
and
arpl
jae
add
xor
jecxz
repz
and
arpl
jae
add
xor
jecxz
repz
adcl
and
addr16
jae
add
add
mov
mov
adcl
in
sub
je
fwait
std
fmul
int3
fstl
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
ret
mov
add
lods
leave
xor
add
or
add
push
pop
add
addl
cmpsl
add
add
mov
jl
jbe
inc
add
jmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
adc
xchg
add
add
add
add
mov
add
add
add
add
xchg
add
roll
sub
mov
jne
jo
push
add
add
add
add
pop
add
add
lods
add
loope
pop
add
add
add
add
push
sbb
inc
add
verw
add
roll
dec
add
add
add
jl
filds
mov
xor
sldt
or
lods
add
ret
add
add
int
xor
adc
and
test
or
js
js
fiaddl
arpl
out
add
add
bound
addl
pop
add
push
sub
flds
dec
add
add
outsl
add
add
xor
jecxz
adc
aaa
add
add
or
inc
add
adc
add
ret
add
add
push
addl
mov
add
out
push
add
add
add
add
add
add
add
add
add
add
cmp
or
xchg
add
add
add
add
add
add
mov
add
xor
mov
add
add
add
add
add
add
add
add
add
add
js
icebp
add
or
test
cmp
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
add
add
add
add
cmpsl
add
add
add
add
add
dec
add
add
add
cld
add
add
add
add
add
add
add
add
push
add
add
add
add
dec
add
mov
add
add
add
add
mov
add
add
mov
loopne
js
or
xor
sub
adc
lea
sub
loopne
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
insl
add
add
add
add
add
adc
leave
add
add
add
cmp
loopne
movsb
add
add
lock
add
movsb
add
add
add
add
movsb
add
add
xor
add
add
or
repz
bound
pop
add
add
sbb
push
add
add
add
push
add
xor
sbb
push
add
add
bound
js
incb
movsl
add
add
mov
and
and
inc
add
add
add
inc
add
add
mov
add
push
add
add
add
movsl
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
insb
add
mov
mov
xchg
add
add
add
add
jecxz
incb
add
fmuls
mov
pop
pop
add
lea
dec
hlt
cmovbe
push
xor
movb
lcall
jecxz
xchg
xchg
cmp
or
pop
or
and
push
mov
inc
les
jp
cltd
aaa
iret
xchg
fidivrl
pusha
inc
inc
popf
rcl
dec
or
cmp
or
addr16
adc
mov
push
xchg
mov
dec
stc
and
adc
flds
addr16
inc
xor
pop
out
pop
arpl
scas
jl
stos
mov
inc
push
test
call
pop
cwtl
mov
adc
cmp
jle
mov
mov
inc
sahf
xor
jnp
xor
push
mov
dec
bound
lods
out
lea
jns
hlt
ljmp
stc
sbb
loopne
test
xor
jp
mov
pop
mov
xor
fcompl
mov
inc
inc
in
jmp
add
and
jno
nop
and
test
mov
pop
mov
cmpsb
add
mov
mull
je
mov
or
mov
icebp
lahf
mov
mov
xchg
fwait
add
mov
push
jg
pop
sub
loop
jl
fdivs
fldenv
mov
push
shll
push
nop
lods
adc
mov
fdivl
adc
jl
outsl
loopne
scas
test
int
arpl
or
outsl
movsb
add
inc
xor
inc
jb
mov
inc
inc
gs
out
push
dec
push
mov
test
dec
repz
lcall
in
mov
jbe
gs
out
call
das
sahf
and
push
scas
xchg
pop
jmp
ret
into
movsb
mov
inc
add
fbstp
rcll
push
addr16
pop
cmc
ret
in
xchg
fs
sub
add
es
fisubrl
nop
and
xchg
daa
hlt
adc
lea
mov
inc
imul
cmp
mov
lea
push
cmp
rcrl
xchg
jg
pop
pop
jmp
push
lea
sub
xor
rolb
adc
pop
pop
rorl
repnz
mov
cmp
leave
lock
mov
xchg
cmp
push
adc
push
negb
mov
jo
scas
loop
push
or
fidivrl
ret
and
daa
out
mov
mov
out
jne
sbb
mov
stc
add
sub
subl
inc
xchg
mov
or
sarl
push
orps
mov
shrl
xor
lea
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
