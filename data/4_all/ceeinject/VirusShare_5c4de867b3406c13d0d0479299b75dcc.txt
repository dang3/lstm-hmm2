call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
xor
add
adc
push
add
and
push
movsb
ret
mov
test
xchg
in
hlt
sub
xchg
aam
and
xor
add
adc
fs
inc
push
push
jb
cli
mov
lock
xchg
in
hlt
movsb
les
xor
add
adc
fs
je
inc
push
push
sbb
divb
mov
xchg
rorb
cmp
ja
and
je
iret
cmc
scas
jmp
dec
rol
lds
in
dec
imul
dec
inc
lock
jmp
lcall
loope
lds
jle
ljmp
cmp
mov
out
mov
jge
mov
sub
adc
mov
push
movsb
sbb
sub
and
imul
cltd
outsb
test
jg
inc
push
push
outsb
mov
dec
sbb
divb
fisttpl
hlt
int3
pushf
mov
fists
sahf
fimuls
sahf
cmc
inc
les
jbe
dec
adc
fs
inc
push
push
pop
movsb
divb
in
hlt
mov
bound
adc
xor
or
arpl
cltd
mov
out
clc
mov
cmp
ljmp
jno
and
sbb
bound
xorb
add
aam
dec
jbe
insw
xor
es
push
push
push
movsb
divb
in
hlt
cmpsb
les
xor
add
adc
fs
inc
push
push
push
movsb
divb
in
hlt
cmpsb
les
xchg
jne
shll
inc
mov
fmuls
int
ret
sbb
into
xchg
insl
inc
inc
gs
daa
jge
mov
and
outsb
add
sub
xor
insb
push
or
int
xor
push
pop
xlat
jge
test
add
repz
lret
jmp
dec
shl
lock
cld
data16
loope
cmp
inc
int
add
mov
ficompl
adc
pop
dec
mov
push
loop
adc
mov
cmpsb
push
addr16
ret
sahf
push
loopne
adc
lds
mov
int3
out
cwtl
and
mov
cld
call
mov
nop
popf
mov
add
out
xchg
inc
loope
test
or
in
push
sub
jl
popf
icebp
xchg
jnp
sub
sub
pop
dec
shll
jae
or
push
xchg
or
lret
push
out
cmp
inc
dec
or
or
mov
js
sbb
xor
stos
and
nop
shlb
inc
test
cli
mov
es
repnz
add
and
sahf
es
push
xchg
aad
add
cmpsb
sbb
int3
loope
push
pop
jmp
dec
dec
mov
inc
addb
out
daa
ficoms
out
std
insb
sbb
arpl
movzwl
mov
inc
or
pop
mov
in
mov
xor
sbb
xor
mov
dec
mov
enter
lahf
insb
dec
inc
cmpsl
or
orb
out
sbb
and
stos
mov
and
idivb
push
lock
cwtl
cmpsb
cmpsl
inc
ficoml
or
xchg
mov
cli
fldl
jno
cmp
xchg
cmpsl
push
mov
pop
sbb
sub
shlb
sub
mov
pop
cs
das
fwait
xor
cmp
jno
lods
vcvtdq2ps
cmp
xchg
call
std
mov
fnstenv
or
addr16
mov
or
xchg
in
pop
popfw
dec
daa
or
call
sub
push
and
add
push
xchg
daa
jbe
call
xor
call
in
addb
push
jae
scas
adc
pop
and
gs
int
jae
subl
in
movsb
repnz
hlt
xor
ja
xor
test
movsb
rcrb
dec
hlt
nop
push
xchg
lods
pop
adc
ljmp
dec
jns
jle
cltd
daa
jb
sub
mov
in
das
lods
rcr
push
mov
enter
dec
inc
push
cld
jl
dec
outsb
dec
outsb
add
mov
into
rorb
xchg
xorb
mov
les
add
lock
sbb
call
aad
test
test
paddsw
dec
mov
adc
push
pop
movsb
mov
cmp
push
mov
jae
adc
shl
xor
xchg
repnz
push
mov
xor
loope
out
cmp
outsb
and
xor
adc
or
sbb
sbb
ret
stos
fnstenv
mov
loopne
fdivl
sar
jae
bound
pop
fists
add
xchg
das
das
popa
inc
js
or
and
jne
sbbb
insl
pushf
jno
das
test
cld
repnz
mov
xlat
mov
push
adc
or
xchg
push
add
roll
pop
dec
ja
and
mov
icebp
mov
pop
add
push
mov
cli
stos
es
inc
adc
inc
lcall
fsts
outsl
aaa
dec
sbb
dec
mov
pop
add
and
pop
xchg
and
into
std
push
mov
push
cmp
jb
push
mov
je
jae
rorb
pop
test
lret
testb
stos
or
std
sarl
loop
adc
inc
bound
push
jns
test
fimull
test
sub
ret
pop
mov
movsb
fnstcw
imul
pop
mov
xor
mov
adc
mov
dec
vorps
push
and
stos
pop
in
stc
mov
jb
mov
ret
mov
inc
cmp
ret
dec
rcrl
add
gs
cs
dec
jbe
aas
ret
pop
sbb
and
xor
adc
sbb
cmpsl
outsb
xchg
xor
push
int3
fs
out
lds
inc
testl
rorl
adc
lcall
mov
cmpsl
popa
mov
sti
mov
insb
pushf
adc
fst
mov
aam
adc
in
lds
mov
fsubl
push
fimuls
mov
push
mov
mull
cmpsl
cli
dec
decb
call
loopne
mov
aas
test
test
in
sbb
test
cli
out
jl
stos
cli
loop
jbe
and
mov
rclb
push
push
sub
gs
repz
cmpsl
cmpsl
jle
mov
aas
pop
cmp
cmc
cli
lock
ljmp
sbb
jae
push
xor
outsb
cmpb
pop
cwtl
pop
mov
jno
call
test
adcb
sub
pop
loop
mov
fwait
and
lret
mov
adcb
sbb
imul
movb
je
lea
outsb
sbb
dec
das
push
inc
mov
repz
mov
aas
leave
xchg
rclb
test
test
in
dec
inc
test
movsl
into
push
lods
lcall
xor
cmp
cmp
dec
cli
mov
sbb
ja
mov
add
jae
mov
jecxz
inc
jle
push
mov
sbbb
pop
and
xchg
andl
pop
rclb
sub
jns
js
es
pop
mov
and
cmpsl
imul
pushf
dec
jecxz
pop
jl
lea
aad
inc
aaa
insl
dec
int
xchg
jg
fmul
jecxz
jle
push
cmp
mull
pop
add
pop
dec
xor
insb
lock
or
into
or
xchg
xor
push
xor
inc
xchg
std
into
xchg
xor
mov
lods
testl
loop
inc
fwait
mov
mov
lock
test
sbb
mul
test
aaa
ret
add
aad
stos
das
outsl
xor
inc
clc
xor
testb
dec
push
inc
mov
inc
ret
loope
rol
mov
sti
fs
aam
lahf
pop
mov
jae
fists
mul
dec
bound
dec
test
add
lods
cli
mov
mov
int
cmc
inc
scas
sub
and
xor
mov
add
jno
sbb
inc
push
mov
dec
sarb
std
popa
mov
jle
mov
or
popf
or
mov
ds
dec
cltd
and
xor
xchg
adc
pop
xchg
and
push
mov
push
mov
xor
andl
ret
arpl
and
push
stc
lret
or
int
adc
stos
mov
mov
int3
test
ja
rcr
stos
popa
pop
pop
iret
test
ljmp
jle
scas
test
bound
inc
nop
jne
adc
pop
push
mov
lods
mov
fbld
jp
jo
scas
fisubrl
push
adc
test
ljmp
adc
pop
das
or
es
mov
adc
scas
adc
pushf
sub
outsl
daa
sub
or
and
sub
pop
sbbl
movsb
test
popa
and
out
xchg
xchg
adc
and
mov
inc
xlat
imul
test
push
pop
incl
xor
dec
mov
add
cmp
or
outsb
mov
push
ja
fimuls
iret
test
dec
imul
mov
jb
cli
push
iret
idivb
sbb
incb
add
movsb
sub
jnp
xchg
or
xchg
test
rcr
adc
ljmp
loop
xor
scas
inc
mov
hlt
movsb
pop
sbb
popa
pusha
push
shr
xchg
mov
mov
push
add
stos
xchg
insb
les
aaa
data16
adc
adc
leave
cmp
add
inc
cmp
adc
add
inc
fcoms
pop
test
inc
or
push
cmpb
pusha
mov
xchg
pushf
xchg
and
add
test
dec
sbbl
into
lock
loop
mov
cltd
mov
pushl
xchg
mov
add
sbb
push
push
inc
lret
mov
stos
mov
addb
mov
cmp
xchg
pushf
or
xchg
and
pop
roll
sti
mov
mov
or
jne
lods
ja
and
jbe
ret
push
movsl
scas
insl
pop
hlt
sub
dec
or
icebp
jp
rcll
add
les
adcb
cmpsl
mov
push
ret
int
aaa
sbb
inc
cmp
dec
sysret
mov
repnz
sbb
cmp
outsl
fsubp
lea
sub
leave
loopne
out
push
int
push
mov
inc
inc
ret
sub
dec
and
test
mov
cwtl
leave
xorl
mov
daa
aam
ja
add
mov
dec
pusha
pushf
push
rclb
xchg
mov
and
add
mov
pop
xor
pop
pop
fs
repnz
mov
and
lock
outsb
sbb
pop
lahf
sbb
cmp
pop
xchg
mov
sbb
jge
push
popa
popa
sub
test
decb
movsb
pop
and
lcall
jno
hlt
repz
lahf
jb
xchg
les
pop
ljmp
out
push
cmp
jo
roll
mov
int
mov
mov
fidivl
xor
rcll
repnz
into
outsl
dec
cmp
cmp
in
pop
enter
in
pop
jnp
dec
and
xchg
pop
add
mov
pusha
or
sbb
xor
call
mov
mov
call
in
aam
jne
mov
xlat
xchg
push
pop
int
or
lods
js
aaa
add
insl
or
xchg
stos
fistps
cmp
repz
cmp
and
dec
and
icebp
cmp
mov
jb
mov
xor
cltd
push
test
push
xchg
lods
jns
pop
repnz
int3
sar
pop
bound
pop
xchg
inc
shl
mov
push
lret
pop
push
mov
lock
xor
or
or
std
mov
mov
jl
jbe
add
jg
es
fiadds
cmp
jge
add
and
jp
rcll
pop
mov
sarb
push
fs
sbb
add
fucomi
jl
and
loopne
xor
imul
data16
mov
pop
daa
cmp
sbb
loop
adc
ds
jle
negl
inc
sahf
pushf
fwait
xchg
fldcw
je
xor
in
lahf
arpl
in
mov
rorb
xlat
pop
jge
test
mov
fimuls
cs
push
add
subb
lret
add
or
rclb
lock
loopne
sarb
xorb
mov
mov
mov
xor
loop
mov
lahf
lret
cmp
mov
lret
outsl
cli
or
xchg
pop
mov
inc
cli
cmp
mov
cmp
pop
fistps
mov
cli
sub
mov
pop
std
lea
xchg
cmp
mov
mov
mov
arpl
sub
rcrb
pmuludq
insb
out
fbld
insl
jnp
outsl
outsl
fwait
sub
sbb
call
sub
icebp
pusha
popf
arpl
add
outsl
notb
int3
lahf
pushf
xor
add
sub
mov
lcall
fildl
stos
or
test
or
push
bound
out
pop
outsl
adc
in
jecxz
and
or
pop
ficoml
enter
btl
jle
outsl
mov
xchg
ljmp
mov
xor
jmp
scas
mov
add
pop
lcall
jbe
xchg
mov
rclb
mov
lret
sub
cmpsl
jbe
sub
ds
mov
mov
cmp
imul
test
loope
push
std
dec
inc
sub
add
or
imul
imul
lods
pop
jne
iret
leave
test
mov
loopne
inc
mov
xchg
mov
xor
mov
roll
loope
cmp
call
sbb
outsl
test
xor
mov
aas
lods
xchg
push
lods
nop
insb
mov
and
shlb
or
cwtl
movsb
and
ss
pushf
repz
jne
mov
pop
psubd
hlt
imul
mov
roll
lret
jbe
mov
adc
push
lds
repnz
test
loop
sub
cmp
inc
xlat
fbld
add
cmp
int3
mov
mov
add
jae
xchg
sub
pop
dec
mov
xchg
cmp
lods
xchg
ret
testl
enter
add
rolb
sbbb
jmp
push
fldcw
pop
lcall
add
cmpsl
mov
out
or
lods
mov
pop
out
add
pop
sub
repnz
cmp
sub
mov
imul
test
xor
cltd
sbb
das
fwait
dec
cmp
jne
sbb
cmp
add
aam
nop
lcall
aam
rcrl
jp
sti
outsb
xchg
fidivrl
cmp
sbb
daa
outsl
add
jmp
ljmp
adc
xchg
mov
movsb
xchg
mov
mov
sti
int3
loopne
and
int3
mov
mov
xchg
aaa
div
jb
mov
xchg
arpl
or
xor
cwtl
pusha
je
pop
in
popf
cmc
out
or
jl
sub
les
jecxz
xor
xchg
cwtl
mov
xor
rcl
sub
int3
dec
and
aad
and
mov
mov
cmp
and
pop
dec
cmp
jb
daa
push
out
sub
jnp
int3
xchg
cwtl
fs
xor
push
dec
adc
ds
dec
and
sub
inc
xor
testl
fstps
int
into
stc
in
cmp
bound
pop
insl
jae
add
in
inc
addr16
mov
shll
push
sub
stos
ds
xorl
loopne
add
sahf
rolb
scas
js
repz
inc
ja
in
cli
mov
or
mov
jnp
out
rorl
pop
push
aaa
dec
xchg
es
xor
loope
js
add
popa
mov
in
and
cmpsb
pop
mov
clc
mov
inc
jl
adcb
jl
xchg
inc
bnd
jle
in
call
nop
inc
aam
aad
add
mov
in
mov
push
int
cld
ja
mov
ret
add
scas
jp
mov
sbb
mov
std
and
lds
nop
pop
jae
imul
jo
or
ret
add
inc
add
test
push
and
fdivs
jo
mov
push
pop
add
sub
mov
cmp
aaa
test
aad
in
pusha
cmp
mov
cmp
and
ret
movsl
enter
jae
out
xchg
lret
push
dec
jecxz
scas
xchg
cmpsb
xchg
adc
loope
popf
shrb
xchg
aas
pushf
jo
sbb
cmpsb
lcall
stos
rcl
loope
mov
pushf
xchg
sbb
mov
outsl
push
push
imul
scas
cmc
inc
and
fwait
sbb
pop
hlt
inc
cmpsb
cli
xor
mov
inc
lret
fimull
sbb
mov
sub
dec
pop
lret
push
dec
cs
popf
in
lods
negl
sub
outsl
dec
sbb
sub
or
scas
loop
add
pop
jmp
js
lds
cltd
outsl
es
fsubl
jne
in
mov
pop
shll
mov
out
pop
jecxz
sbb
push
and
sub
lods
adcb
mov
dec
pop
or
jmp
dec
inc
loop
leave
inc
cmp
ja
pop
clc
jnp
mov
xor
cwtl
mov
test
mov
jae
int
cld
sbb
adc
sub
idivl
ds
or
jmp
cmp
arpl
dec
test
push
enter
arpl
sbb
jno
nop
imul
ret
loop
aam
test
adc
pop
and
push
ficoms
sub
xlat
push
adc
test
add
inc
scas
outsb
cltd
xor
mov
aad
loop
jle
fwait
cs
data16
mov
nop
dec
js
lret
xchg
inc
test
sbb
sub
les
sub
nop
test
pushf
adc
nop
mov
int
out
xor
lods
sbb
enter
imul
ret
fsub
xchg
in
jb
pop
push
xchg
fisttps
mov
xchg
mov
mov
xchg
and
int3
aam
sub
mov
push
enter
in
sub
sbb
inc
test
repnz
out
stos
mov
popa
or
js
pop
dec
pop
cmp
std
mov
fwait
gs
push
pop
out
jo
loopne
scas
mov
enter
mov
jne
jnp
pop
in
fstps
mov
dec
and
int
bound
mov
rcrb
stos
cmp
outsb
int
jno
mov
xchg
adc
adc
std
push
mov
sarl
push
fbld
fildl
adc
jp
mov
add
lahf
pop
fmul
xchg
cmpsb
push
xchg
and
ljmp
push
test
es
mov
mov
mov
addr16
aaa
je
aad
mov
popa
mov
dec
cwtl
icebp
cmc
leave
xsha256
cmpsb
adc
mov
xchg
pop
dec
mov
xor
sti
mov
dec
mov
fildl
inc
bound
jns
or
shll
inc
call
ret
sbb
push
inc
mov
add
lea
dec
xchg
fwait
stos
lcall
andb
mov
shrl
push
sub
sti
add
lea
adc
mulb
jno
repz
mov
fsubs
scas
cli
repz
outsb
mov
popf
jmp
xor
xor
ljmp
inc
aad
lgs
cmp
mov
outsb
scas
push
lret
dec
cwtl
push
and
cmp
dec
fimuls
sub
ds
xor
nop
aas
jns
cmp
pushf
stc
push
rclb
enter
hlt
add
push
les
pop
push
call
xor
push
sbb
nop
sbb
andl
sub
stc
push
and
push
xor
push
test
cmp
sbb
aam
jp
cs
std
frstor
fadds
and
mov
adc
out
cmpsb
cmc
nop
mov
cwtl
ljmp
add
lcall
testl
into
gs
pop
scas
jne
cwtl
or
mov
and
or
jno
adc
test
insl
sub
mov
dec
in
in
push
ret
rorb
jmp
stc
lds
inc
in
inc
fwait
out
stc
cwtl
xor
hlt
push
jno
test
sbb
lret
aaa
in
jb
mov
rcrl
int
mov
adc
js
inc
push
test
sub
xor
adc
mov
jne
push
cmc
push
dec
xor
enter
fstpl
cmp
jp
mov
gs
adc
rcrl
push
cld
dec
mov
aaa
mov
in
and
dec
lret
lea
sub
faddp
mov
mov
hlt
shrl
pop
jle
in
sarb
std
and
clc
xchg
xchg
ret
and
and
mov
sub
cmp
cld
repnz
movsb
mov
mov
fwait
testb
cs
mov
xchg
stos
dec
outsl
outsl
xchg
xchg
add
xor
xchg
cld
lret
xchg
cmc
in
xor
lods
fildll
inc
fwait
sbb
lret
je
and
lds
loop
cli
mov
push
jns
and
loopne
ds
ret
xchg
pop
inc
in
mov
mov
push
add
ljmp
inc
sub
xchg
imul
nop
in
mov
pop
mov
jmp
gs
pop
lret
lock
shlb
or
add
sbb
push
and
shrb
leave
test
in
xor
lret
xchg
push
dec
das
jle
jp
fldenv
xchg
sbb
dec
jge
clc
mov
pop
xor
add
jbe
push
dec
daa
in
pop
pop
xor
inc
dec
cmp
insb
sbb
sbb
inc
testb
sub
mov
sub
inc
movsl
add
add
pop
pop
pop
push
jl
sahf
xchg
outsl
jae
mov
aad
inc
jnp
pop
sub
push
adc
lods
mov
lock
inc
fs
inc
push
push
push
movsb
divb
in
hlt
cmpsb
les
xor
add
adc
fs
inc
push
push
push
movsb
divb
in
hlt
cmpsb
les
xor
add
adc
fs
inc
push
push
push
movsb
divb
in
hlt
cmpsb
les
xor
add
adc
fs
inc
push
push
movsb
divb
xchg
jl,pt
cmp
sub
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
inc
into
stos
lcall
fcoml
dec
es
outsb
or
jp
push
dec
cs
fidivrs
out
mov
fisubrl
sub
cmp
push
sbb
mov
fisubs
out
xchg
sahf
jecxz
repnz
pop
outsl
or
jge
addr16
or
dec
scas
mov
mov
xor
popf
or
mov
mov
adc
movsl
adc
adc
adc
push
fildl
mov
jecxz
jecxz
icebp
aas
ss
pop
pop
inc
iret
sub
lcall
es
mov
xchg
mov
movsb
imul
into
stos
ficomps
mov
xor
jg
xchg
sub
shlb
and
sti
push
fiaddl
lret
ss
sub
pop
outsb
or
out
pop
shll
je
imul
inc
or
push
or
jecxz
push
push
pop
aas
movsl
das
pop
cmpl
mov
mov
and
jle
outsb
adc
bound
jge
pop
cs
fisttps
mov
lods
jmp
stc
mov
cmpsl
ss
cld
push
adc
gs
inc
cmp
pop
daa
add
cmpsb
sti
mov
fdivrs
inc
and
outsb
or
or
outsb
xor
test
loopne
popf
sti
into
fists
scas
lret
dec
sub
outsb
or
jp
push
pop
cs
fidivrs
out
mov
fisubrl
sub
outsb
or
jp
push
pop
cs
fidivrs
mov
int3
pop
and
pop
inc
std
nop
xor
pop
add
and
std
rolb
jle
add
cld
jnp
jg
mov
push
mov
add
cmpsb
xor
inc
push
jl
outsb
jle
pop
push
stos
cmp
mov
mov
ljmp
test
xchg
jbe
adc
inc
stc
je
xchg
xchg
sbbl
inc
in
fcmovbe
cmpsl
aam
xchg
mov
sub
push
fcoms
pop
and
sub
and
jg
and
stc
jl
mov
cs
pop
push
pop
sbb
pop
jnp
and
pop
push
lds
push
iret
pop
outsl
div
sbb
dec
cli
mov
arpl
inc
ficoml
push
pop
lea
xor
movsl
cmp
adc
fsubl
repz
jg
pushf
xchg
loop
and
push
inc
nop
leave
dec
adc
mov
movsb
push
mov
xor
push
iret
add
pushf
xchg
fwait
sti
jb
jge
xor
or
xchg
fnsave
fbstp
rorl
sub
pop
pop
push
mov
dec
adc
pop
push
loopne
xor
mov
add
das
inc
outsl
pushf
je
sub
daa
test
stos
data16
out
add
and
test
add
mov
stos
fstps
ffree
mov
jmp
or
bound
in
jae
fnsave
push
test
lods
cs
rcl
mov
cwtl
std
stc
ss
mov
dec
push
xor
jmp
jno
pop
jl
mov
jecxz
mov
cmp
aas
dec
sbb
jnp
add
mov
push
daa
mov
out
sar
sarb
and
scas
cli
int3
pop
mov
or
inc
push
cs
repnz
shrl
jg
orb
cmp
repz
push
push
dec
fdivrs
cmp
repnz
mov
mov
xchg
and
mov
inc
mov
cmc
in
mov
sbb
lds
pop
fs
cmpsl
push
sarb
es
inc
mov
out
loopne
push
call
or
dec
out
adc
jg
jp
push
xchg
add
jns
imul
aas
lahf
adc
mov
mov
jmp
sahf
out
clc
push
sbb
push
repz
in
ja
mov
dec
add
pusha
mov
popf
or
cmp
sub
and
and
in
pop
xor
push
push
ficompl
jne
mov
jmp
sub
inc
xorb
fstps
push
push
cs
test
jns
ret
aas
jle
sbb
outsl
int
cmp
jno
push
add
cltd
xor
not
dec
cld
fnsave
rcr
pop
lret
data16
mov
repz
xchg
jbe
push
pusha
out
rorb
pop
xchg
sub
andb
add
daa
pop
addl
xor
mov
jecxz
xlat
lcall
test
frndint
adc
repnz
adc
nop
add
fbstp
popf
je,pt
sbb
jo
les
and
cs
lahf
hlt
mov
xchg
or
mov
test
pusha
mov
aad
adc
ljmp
cld
mov
cltd
aad
and
fimull
jno
stos
call
mov
add
icebp
fcmovnu
pop
xor
insl
ret
pop
xchg
cmp
add
fucomi
in
xor
es
pop
fistpl
push
xchg
add
out
jo
adc
mov
mov
xchg
hlt
push
sarb
movsb
fistpl
inc
mov
adcb
fwait
xchg
and
jmp
mov
adc
push
imul
lods
pop
adc
sti
push
or
shr
inc
insl
xchg
in
stos
mov
in
cmp
adc
out
add
popf
sbbb
pop
movl
sub
aad
ret
cmpsb
fbstp
push
fdivp
fs
push
in
pop
popf
dec
inc
cmp
xor
jge
rol
mov
mov
xchg
lcall
pop
outsl
sub
std
pushf
jbe
jmp
insl
xchg
mov
mov
jecxz
icebp
ficomps
xchg
push
in
mov
inc
outsb
out
dec
fdivp
sti
pop
add
push
out
xor
inc
orb
hlt
add
jecxz
pop
add
push
js
enter
std
lods
mov
icebp
push
jl
push
ret
loope
out
sub
add
leave
push
in
stc
and
movsb
add
cmp
imul
shll
pop
xor
decl
jne
imul
data16
imull
test
and
aam
mov
or
push
mov
out
and
movsb
leave
adc
push
dec
hlt
xchg
test
jg
jecxz
jge
xor
xor
cmpsl
aaa
ret
sub
dec
sbb
std
pop
or
mov
enter
loope
iret
mov
es
loop
mov
lods
repz
pop
imulb
lds
in
dec
mov
mulb
movb
ja
push
mov
packuswb
subl
jle
jno
jg
jle
outsl
pop
test
mov
xchg
leave
cmpsb
push
and
add
and
push
and
popf
sub
inc
or
jae
mov
cmpsb
scas
enter
push
xchg
sti
mov
lock
outsb
popa
mov
faddl
test
add
xchg
fdivs
mov
mov
ds
mov
xchg
imulb
jg
xchg
push
mov
sti
sti
push
xchg
mov
shll
fiaddl
out
fimull
outsb
cwtl
mov
hlt
into
lcall
insl
push
int
dec
sub
dec
leave
loope
les
pop
adc
sub
inc
mov
sahf
dec
addr16
fwait
mov
inc
push
cmp
pop
jnp
xor
jp
push
inc
mov
cmp
icebp
add
or
cmp
or
outsl
sub
add
cli
aad
test
and
mov
sub
aaa
pop
lcall
mov
das
jnp
ja
mov
inc
pop
jmp
hlt
inc
add
push
and
mov
subl
addr16
push
in
inc
clc
xor
xor
icebp
outsb
xchg
dec
sbb
leave
js
xor
dec
daa
pop
jg
push
int3
imul
cmc
aas
je
push
iret
sbb
cwtl
js
jno
inc
fisubl
cltd
push
js
xchg
dec
sbb
mov
sub
ret
xor
sub
cmp
mov
sahf
dec
jl
jl
xchg
pop
mov
inc
push
mov
xchg
bswap
pop
lcall
lock
data16
out
jnp
add
ror
xor
cmpsl
push
fs
cmp
xor
lds
ja
jae
into
int3
mov
mov
fsubs
test
fwait
push
or
xor
int
xor
sbb
push
int
mov
fbld
xlat
repz
rcr
lock
outsl
or
stc
loope
jbe
dec
in
les
aaa
aas
mov
adc
lods
loopne
xor
lcall
adc
push
aam
pop
repz
imul
jae
add
out
loop
ret
mov
mov
ds
mov
data16
adc
add
jl
stos
sarl
mov
lret
or
or
dec
add
mov
mulb
dec
jl
sahf
mov
cli
cmp
or
ljmp
jae
mov
hlt
mov
out
adc
sub
loop
mov
mov
mov
jne
cltd
pop
push
mov
mov
adc
mov
add
mov
js
repnz
and
rcrl
daa
loope
xor
inc
xchg
mov
or
mov
je
aas
mov
add
jmp
dec
cmpl
push
jo
push
fcomps
xchg
pop
add
notb
cmc
bound
in
fmull
mov
mov
out
cmp
sub
mov
cmc
lds
mov
jle
jnp,pt
mov
int
mov
mov
and
cs
jl
pop
sti
adc
stos
cmp
adc
lret
outsb
pop
ficomps
xchg
dec
xchg
lret
push
xor
xchg
test
pop
xor
loopne
repz
pop
mov
add
mov
or
mov
nop
rep
or
mov
jmp
lods
push
lahf
or
sub
mov
out
sub
js
jl
lock
leave
adc
pop
lret
inc
cmp
inc
rcrb
das
push
sbbb
cmp
xor
out
std
mov
mov
stos
pop
or
insb
gs
mov
out
mov
and
mov
push
insl
xchg
pop
push
shll
push
movsl
xor
mov
and
xchg
sbb
shlb
dec
notl
out
clc
adc
mov
and
sbb
sarl
popf
lds
pop
pop
push
sbb
mov
xlat
leave
stos
sub
roll
xor
loope
sub
adc
loop
movsl
notb
lcall
xchg
cmpsb
js
das
cmp
lea
pop
repnz
dec
push
jae
lret
int3
mov
adc
inc
out
stos
xchg
js
jnp
addr16
push
mov
aam
push
inc
cmp
dec
out
and
push
out
or
xchg
dec
adc
out
cmpsl
mov
inc
mov
push
sbb
movsb
dec
cmpl
popa
mov
outsl
in
dec
pop
addl
sbb
jo
adc
add
xchg
out
sbb
aaa
cmpsl
inc
adc
pop
lock
pop
cmp
mov
cmpb
add
stos
js
mov
sub
or
repz
jecxz
mov
sub
jge
ret
out
idivl
sub
inc
les
inc
notb
outsl
ds
rcll
popf
insl
dec
jmp
push
xchg
loopne
push
enter
and
enter
lret
sub
mov
pop
pop
pop
imul
and
mov
rcll
dec
lock
shll
sbb
jg
pop
dec
int
xchg
mov
cmc
cltd
rorb
jle
addr16
mov
dec
icebp
pop
in
push
add
sbb
mov
loopne
imul
outsb
aam
mov
mov
fldenv
loope
fwait
cmp
enter
fsubl
dec
jb
adc
dec
push
or
popa
lds
insb
xor
mov
sahf
push
rcrb
mov
pop
dec
add
mov
dec
mov
hlt
mov
lret
or
inc
mov
int3
out
inc
imul
stos
cmp
push
fcoml
push
push
roll
ljmp
dec
mov
loopne
add
xor
aas
adc
jg
arpl
sbb
mov
je
cmpl
dec
rol
loopne
in
and
fidivrs
jnp
cmp
in
fbstp
xor
and
mov
and
imul
sbb
xor
in
pop
pop
repnz
cmpsl
sub
mov
add
sbb
fisttpl
and
fisubl
popa
icebp
shlb
jns
mov
aas
ret
testl
mov
xchg
push
mov
out
sbb
xchg
cmp
mov
xor
imul
sbb
bound
jmp
out
xchg
popa
cwtl
das
sbb
pop
pop
dec
test
sarb
aaa
ljmp
cs
mov
cld
les
and
xchg
in
or
data16
lods
push
stc
push
jl
mov
repz
stos
mov
jecxz
sahf
fwait
es
nop
imul
push
rolb
pop
add
jge
xor
stc
jmp
shlb
mov
loop
mov
addr16
sub
in
jb
pop
andl
mov
pusha
push
lea
arpl
mov
xlat
leave
mov
rcr
ret
scas
add
out
std
and
pop
inc
rolb
jae
lods
or
xchg
jmp
sbb
push
aam
push
and
sbb
shlb
cltd
xor
repnz
fucom
sbb
mov
jns
bound
xlat
add
push
shll
gs
push
jl
mov
leave
or
xor
les
fcoms
mov
aad
pop
mov
ficompl
mov
cmp
or
xor
rcrb
aam
add
cmpsl
test
adc
xchg
mov
cmpsb
mov
jo
mov
aam
mov
jae
fsubl
jg
shrb
out
sbb
negl
or
adc
or
sub
xor
pop
icebp
cltd
insb
in
popf
rcll
mov
jno
fstl
add
test
sbb
leave
xchg
mov
pop
jnp
repz
and
sbb
mull
xorl
ja
push
or
cltd
outsl
lret
into
dec
lds
shrb
pop
adc
mov
ljmp
or
ljmp
mov
loop
leave
mov
push
pop
mov
jo
or
add
mov
mov
ds
or
lret
cmp
subb
xor
adc
aas
sti
mov
mov
mov
push
imul
push
shll
test
pusha
sub
sub
cmp
loopne
rclb
test
scas
mov
push
cwtl
dec
sub
loop
lret
mov
xlat
fidivrs
dec
out
mov
outsb
shll
xlat
add
in
sahf
add
cld
nop
fnstsw
frstor
adc
jno
out
push
lcall
stos
les
xchg
out
add
adc
pop
cs
inc
mov
ret
or
repnz
xchg
ljmp
pop
xchg
pop
dec
es
popa
negl
in
xor
jno
dec
shrl
jno
loopne
scas
fwait
xlat
xchg
adc
push
push
cmp
add
fwait
add
and
add
loopne
aaa
sbb
ljmp
ja
push
lret
add
push
mov
jns
loopne
sbb
int
stc
rcll
sahf
test
jbe
js
jmp
inc
add
cs
mov
cmc
shll
out
in
mov
jae
jae
repz
push
mov
pop
insb
icebp
mov
add
fmul
daa
ficompl
scas
lods
lds
sbb
or
adc
fstpl
or
call
pop
push
js
roll
mov
fs
movsl
das
mov
mov
popf
xchg
in
shl
inc
mov
addr16
cmp
or
dec
mov
sub
ret
pusha
sub
fisubrl
popa
pop
xor
xor
aad
add
cmp
and
subb
scas
into
int3
rcll
push
mov
fcmovnu
mov
stos
cmp
mov
push
cmp
movsb
jp
add
xchg
nop
pop
and
hlt
adc
mov
add
popf
into
clc
or
pop
inc
and
out
cmpsl
push
cwtl
loope
push
ljmp
out
es
adcl
lret
xchg
push
cmpsl
shrl
lret
scas
js
mov
add
xchg
fimuls
cmpsb
push
mov
dec
inc
bound
fistl
stc
pop
or
stos
bound
mov
gs
pop
xchg
or
jnp
cld
jb
push
aad
je
push
and
call
pop
jae
cmp
push
push
jg
test
out
adc
dec
addr16
jl
test
jbe
mov
iret
test
mov
call
inc
rcr
frstor
je
stos
sub
pop
ja
lret
lds
daa
inc
mov
test
push
xchg
cld
out
or
sbb
bound
aad
cmc
shlb
cmp
stos
cs
inc
sub
dec
cmp
jne
outsb
mov
xchg
filds
dec
mov
in
sub
jne
mov
pop
in
popa
mov
xor
in
mov
cli
mov
scas
clc
test
or
lcall
inc
add
mov
in
aas
mov
xor
popa
mov
shrl
push
nop
and
sbb
sub
outsl
cmp
jmp
fnstenv
test
push
or
jbe
push
stos
inc
out
jmp
adc
and
shll
cs
or
lcall
je
daa
out
es
shrl
inc
push
push
adc
xchg
mov
dec
and
imul
repz
sahf
out
mov
cmp
dec
mov
jbe
jae
cli
outsb
pop
inc
cmp
stos
mov
inc
xchg
jecxz
mov
or
andb
or
insl
outsl
mov
in
mov
movsl
jo
stos
js
test
jmp
mov
xor
call
inc
sub
mov
ss
xrelease
cmp
fidivrl
ljmp
jg
loope
mov
lea
and
inc
and
mov
repz
push
lods
xor
test
push
jge
stos
enter
in
dec
and
stos
jecxz
mov
mov
mov
add
outsb
dec
push
les
iret
ja
dec
jecxz
lahf
into
xchg
rcr
test
repz
icebp
add
sub
mov
ds
pop
outsb
cwtl
in
push
lret
lea
aam
nop
mov
dec
dec
cli
aaa
push
in
mov
loop
xor
or
loopne
or
mov
ret
lds
ds
test
cmpsb
fstp
int3
lea
mov
imul
and
push
add
ljmp
bound
pop
mov
inc
xor
lods
mov
movsb
jb
xchg
in
icebp
jno
aam
mul
pop
xchg
fwait
jecxz
ja
shll
sbb
sbb
into
or
popa
subb
jg
out
cmp
jle
mov
xor
enter
push
imulb
bound
jecxz
xchg
pushf
fwait
in
jnp
xchg
push
push
and
cmp
into
sub
insb
shl
dec
xchg
inc
aas
jo
or
fs
mov
and
in
mov
pop
dec
stos
leave
adc
daa
in
mov
push
loop
jns
xchg
mov
fisttpl
xchg
sbb
pop
mov
std
mov
mov
ljmp
sti
bound
lahf
das
pop
adc
ficompl
xorb
jo
jg
dec
sahf
fcoml
and
negl
adc
mov
inc
dec
adc
lret
ss
push
jmp
cmc
imulb
xorb
out
mov
inc
or
addr16
mov
jmp
and
jp
sbb
rorl
inc
adc
xchg
push
test
jo
sahf
outsb
std
and
mov
stos
lret
incb
sbb
daa
pusha
mov
cmpsl
aad
adc
outsl
mov
aam
pop
xor
cli
repz
stc
inc
ljmp
push
ljmp
xor
insl
arpl
cmp
popf
sub
add
sbb
cmp
lock
adc
mov
mov
adc
push
out
lret
idivb
scas
xlat
lock
movsl
cltd
out
out
push
or
cli
lods
jp
adc
call
arpl
iret
pop
icebp
cmp
mov
push
cmp
push
add
xor
and
ds
jbe
and
sbb
rorl
fstl
push
ret
nop
push
into
and
test
imul
or
pop
dec
dec
repnz
ret
lahf
addr16
movl
cmpsl
repnz
mov
cmpsl
adc
lods
inc
arpl
cld
js
xorb
fldl2t
daa
call
ds
add
pushf
pop
test
push
outsl
test
mov
fstpt
add
ret
fwait
cwtl
mov
adc
add
pop
mov
inc
pop
add
mov
push
sub
popf
xor
jnp
sti
stc
popf
dec
orb
or
out
sbb
insl
jno
sub
add
add
aaa
fcmovb
push
aas
into
add
and
mov
test
scas
add
add
dec
ljmp
lds
aad
mov
mov
aaa
inc
out
das
push
notb
sarl
ret
jge
cmp
push
jb
fwait
jns
inc
les
jnp
or
addr16
pop
sar
jbe
cli
imul
fld1
mov
push
outsb
add
or
pop
pop
push
push
jns
xlat
dec
mov
xchg
popf
lret
sbb
addr16
lret
sahf
pop
xor
push
dec
mov
sub
roll
or
rcr
js
scas
push
ja
xchg
filds
xchg
cli
xchg
iret
pop
jp
jae
cmp
fldl
lret
sahf
lret
cmp
pop
xchg
xchg
xor
or
std
push
adc
and
popa
xor
inc
xchg
fld
push
stos
sub
jb
mov
dec
sub
mov
lods
cmp
mov
mov
fisubrl
sub
outsb
or
jp
push
pop
cs
fidivrs
out
mov
fisubrl
sub
outsb
or
jp
push
pop
cs
fidivrs
out
mov
fisubrl
sub
outsb
or
jp
push
pop
das
dec
fistpll
out
mov
fisubrl
adc
outsb
jge
xacquire
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
insb
ret
hlt
loop
std
in
shl
fldenv
fs
bound
adc
and
xor
int3
rcl
ret
hlt
loop
xchg
xchg
andb
inc
dec
jb
bound
jo
and
xor
push
rclb
repnz
xchg
xchg
faddl
inc
insb
cmp
add
adc
push
push
inc
and
xchg
orl
push
roll
mov
inc
ja
push
pop
imul
fists
add
sbb
jge
aam
imul
xor
fwait
jb
arpl
xor
adc
add
in
shlb
stos
mov
sti
adc
and
repz
xchg
movsl
pop
mov
push
popa
pop
push
je
mov
xor
lret
add
sub
sbb
pop
jnp
pop
jge
dec
cld
hlt
test
add
fwait
mov
neg
adc
je
inc
jb
push
aam
sbb
push
xchg
or
andl
lods
lods
push
gs
bound
daa
and
not
aam
in
cwtl
loop
xchg
rolb
mov
movb
push
adc
add
push
fs
mov
movsb
ljmp
shlb
sbb
or
jg
jnp
mov
inc
les
aas
mov
div
lods
enter
jl
adc
push
ja
jno
push
inc
jne
mov
out
xchg
xchg
andb
inc
fs
bound
adc
and
xor
rcl
ret
hlt
loop
xchg
xchg
andb
inc
fs
bound
adc
and
xor
rclb
xlat
dec
add
xchg
in
faddl
dec
in
inc
sub
push
dec
ret
xchg
hlt
outsl
inc
pop
mov
sahf
xchg
inc
and
pop
sbb
push
push
bound
xchg
aam
lcall
std
pop
gs
adc
adc
test
inc
cmc
lcall
fcmove
loopne
aad
pop
push
lahf
shrl
rclb
jp
xchg
jnp
sbb
mov
fimull
in
inc
cmpsl
dec
mov
push
push
and
mov
jnp
add
aam
and
jno
or
xchg
iret
scas
pop
sbb
nop
cmp
je
cmpsl
lds
lds
mov
sbbl
jb
mov
mov
jge
data16
in
cltd
ss
out
imulb
iret
push
fldenv
push
xor
les
aas
xor
add
repz
in
or
imul
xchg
cmpsl
dec
call
mov
push
sub
repz
xchg
leave
repz
into
xchg
mov
or
das
xor
leave
pop
push
stos
hlt
fldl
ss
insl
or
inc
fwait
notb
mov
nop
arpl
popa
iret
cmp
into
das
sti
iret
scas
fwait
scas
in
inc
jmp
xlat
sub
xchg
cld
movsb
pop
jbe
mov
jl
shrb
mov
cld
std
mov
stos
negb
cli
cmp
inc
shll
pop
xorb
lea
lods
inc
lret
hlt
rcll
cmp
push
dec
jnp
aas
std
or
filds
js
pop
sub
jne
lds
push
loope
lret
loope
dec
dec
icebp
fcoms
je
cmpsb
ljmp
mov
mov
inc
xchg
das
add
sbb
pop
sub
ja
into
mov
add
ja
adc
adc
fs
sbb
mov
pop
cmpsl
push
lret
dec
mov
movsb
push
imul
jl
inc
push
push
test
push
cmpsl
adc
testb
xlat
je
in
data16
jge
xchg
out
jge
and
inc
adc
xchg
stos
pop
sbbl
jno
pop
pusha
dec
pop
push
dec
xor
ljmp
ja
sbb
add
fwait
test
mov
push
lcall
movsb
push
outsb
pushf
xlat
seta
sti
xor
pop
sub
mov
int
fdiv
das
inc
daa
gs
hlt
sti
and
push
adc
out
rolb
push
sbb
mov
xor
fisubrs
mov
jb
movsl
jle
lahf
mov
adc
imul
push
add
decb
orl
repnz
insb
xor
sub
movsb
xor
iret
xchg
push
mov
shl
mov
pop
jle
cmpb
xchg
mov
fdivrs
push
testl
stos
lahf
or
jp
ljmp
dec
dec
pop
or
xchg
rorb
gs
push
mov
je
inc
mov
push
std
push
ret
sbb
xchg
lret
mov
pushf
xor
sar
xchg
sbb
xchg
add
mov
jle
inc
movsb
popa
mov
cmp
dec
negb
outsb
cmc
imul
jns
in
and
ficompl
mov
cld
push
test
cwtl
push
and
sbb
fdivrs
in
shl
imul
cli
xor
test
imul
jae
das
jnp
add
or
or
or
lret
pop
sahf
in
push
inc
mov
insl
jmp
sti
hlt
imul
iret
and
add
mov
push
insl
call
lock
cmc
pop
lcall
in
dec
xor
lcall
aas
mov
daa
bound
cmpsl
push
lret
dec
rcr
arpl
sub
addb
add
popa
jae
or
cltd
je
mov
jns
std
mov
push
jle
in
add
mov
jnp
rcll
cmpsb
jne
push
and
stos
and
sub
and
stc
xchg
sbbb
mov
xchg
jo
test
inc
adc
xor
xor
jl
push
call
fnstenv
push
mov
sti
sbb
sbb
loop
inc
mov
dec
push
jb
mov
data16
cwtl
outsb
ds
iret
push
inc
ficoms
imul
arpl
jns
lret
xchg
dec
lcall
sbb
push
mov
push
sti
das
jbe
nop
shrb
lcall
in
imul
outsb
fdivs
dec
cmp
inc
adc
dec
lock
jg
cmpb
inc
or
mov
xchg
pop
orb
test
adc
ja
push
scas
in
insl
outsl
nop
and
cmpsl
int3
repz
mov
lahf
adc
mov
ja
cli
scas
call
mov
outsl
movsl
lret
jmp
lea
rcll
jmp
adcl
das
inc
mov
push
cmp
pop
mov
pusha
gs
push
sbb
mov
popa
fnstcw
mov
and
xchg
sbb
jle
inc
imul
pop
leave
into
sub
sbb
loop
fimuls
adc
xlat
pop
push
lea
imul
mov
dec
sbb
xlat
xor
add
dec
mov
rcll
sub
popa
pop
mov
adc
lret
fwait
cwtl
jmp
sub
test
sub
dec
pop
mov
mov
push
call
xrelease
imul
inc
addb
mov
sbb
xor
add
jae
sbb
add
jp
test
cwtl
shlb
gs
iret
jge
jge
incb
andl
dec
mov
les
pop
mov
xor
sbb
cmp
rclb
sub
and
mov
cmp
mov
ret
pop
and
push
int
add
pop
xchg
shl
mov
fdivp
cmp
js
aaa
lret
je
inc
jae
and
shlb
lods
xchg
and
pop
mov
scas
inc
stos
adcb
push
into
fbld
pop
shr
maxps
stc
push
push
pusha
sar
add
jo
xchg
sbb
nop
fcomps
gs
ror
xchg
mov
lret
ds
and
test
cmp
jne
in
stc
leave
lds
scas
bound
outsl
and
inc
orl
mov
je
insb
mov
dec
push
jmp
inc
dec
ret
cmpl
xchg
cmpsl
sub
xchg
xlat
xchg
addb
pop
inc
sub
mov
sub
gs
stos
ss
loopne
into
mov
mov
add
inc
push
jecxz
in
mov
jnp
push
js
add
pusha
sub
xchg
fsubrl
js
js
sahf
fcoms
pusha
je
adc
sub
test
add
cmp
je
nop
mov
rorl
and
rcrb
push
adc
mov
xor
mov
sbb
in
fsubrs
leave
test
testb
fwait
out
call
mov
pop
lahf
pop
mov
dec
or
ss
inc
jnp
flds
decb
mov
cmc
scas
add
ljmp
mov
or
negl
cmc
insb
mov
jecxz
hlt
xor
mov
fmull
jo
test
xor
mov
std
scas
sbb
dec
mov
mov
mov
and
aad
mov
jbe
dec
pop
sub
push
enter
outsb
jl
ljmp
inc
cs
xchg
push
xor
and
popa
lahf
int3
sub
push
icebp
fisttpll
in
mov
ja
int3
add
into
jge
stc
sar
lods
cmp
incl
xchg
inc
clc
mov
jg
insb
inc
mov
fnstcw
mov
je
cld
push
push
pop
aam
jbe
sbb
cmp
inc
dec
adc
add
outsb
enter
mov
js
mov
xchg
lret
pop
dec
mov
sub
dec
or
rclb
mul
xchg
sbb
test
in
out
popa
jnp
adc
sbb
push
arpl
mov
mov
sub
sub
sub
jl
jo
adc
mov
push
in
leave
popa
jbe
sub
in
push
xor
test
sub
push
inc
add
pushf
out
add
out
jo
sub
je
loop
add
fbld
inc
mov
inc
fdivr
xlat
xchg
stos
inc
pop
jno
cmp
dec
or
jne
xchg
mov
jl
dec
jecxz
movsb
imul
mov
popa
je
jp
loop
push
sbb
enter
into
and
out
aaa
jge
xor
push
mov
xor
dec
adc
aas
das
pop
inc
dec
out
adc
add
jp
mov
push
lret
adc
dec
jb
notb
inc
lret
jae
rcrb
notb
test
scas
popa
popa
jno
pop
js
push
sbb
fmull
cmp
icebp
pop
ds
test
movsl
jno
daa
sbb
fs
sub
fwait
cmpsl
jno
sub
ja
adc
outsl
ficompl
xor
inc
scas
pop
or
jmp
stos
mov
sbb
das
lret
call
fwait
mov
outsl
insl
incl
xor
stos
shr
sub
aas
add
push
aas
loop
jg
insl
loop
js
mov
inc
sbb
dec
sahf
xchg
loopne
mov
imul
nop
or
sti
das
daa
enter
js
subb
cwtl
cmp
out
and
out
arpl
jp
xchg
mov
and
out
mov
mov
in
mov
ret
mov
jecxz
out
lods
les
sbb
out
mov
pushf
pop
xchg
aad
cmp
mov
sub
imul
pop
dec
aad
outsl
fadd
fs
or
jae
ret
ss
lds
aaa
mov
mov
push
adc
adcb
aaa
jmp
cmp
roll
xor
ja
fmul
shlb
repz
dec
arpl
mov
stos
or
stos
aas
pop
ss
mov
push
sub
xchg
pop
movsl
xor
cmpsb
cmp
mull
in
mov
xor
jbe
loop
sahf
push
pushf
push
sub
loopne
pop
les
push
sarl
rcrb
xchg
xchg
leave
sbb
js
jle
stc
cs
mov
std
xchg
inc
addb
rorb
jo
jl
push
jbe
fildl
out
fidivs
dec
sub
and
mov
jns
adc
and
cmp
jne
sub
mov
sahf
sbb
sub
lret
fbstp
dec
pop
inc
sbb
into
dec
jae
xacquire
adc
sbb
cli
fildll
vpsllw
dec
cmp
lret
dec
je
or
idivl
sbb
xlat
dec
cwtl
inc
lcall
or
dec
inc
mov
mov
popf
add
scas
and
cmp
or
mov
sub
adc
repz
jns
mov
jns
in
stos
ljmp
sbbb
pop
push
psubsb
lea
jmp
push
das
ja
cmc
ret
dec
xchg
xor
dec
add
cmpsb
lret
and
dec
cmp
push
sub
xlat
ret
pop
pop
stos
dec
xor
or
and
xchg
push
pop
sbb
xchg
pusha
jl
movsl
inc
push
jp
mov
cwtl
cli
push
and
in
xchg
dec
sbb
stos
mov
add
dec
jmp
pop
adc
sbb
shlb
dec
cmpsl
mov
lret
pusha
xor
sbb
cmp
cmp
in
enter
xor
and
and
jg
pop
popa
xchg
es
jle
mov
push
or
sbbl
pop
add
ljmp
sbb
ljmp
insb
js
scas
pushf
sub
js
into
jns
mov
subl
mov
scas
out
push
pushl
call
rorl
xlat
addr16
hlt
arpl
cwtl
mov
push
push
mov
push
jne
dec
imul
inc
out
shl
cwtl
dec
bound
cmpsl
repz
in
nop
jmp
shll
pop
jbe
ss
or
cmpsl
outsl
daa
fcmovbe
xor
sarl
imul
and
mov
ret
rsqrtps
insb
jae
sbb
dec
add
xchg
xchg
xchg
pop
or
dec
pop
add
mov
pop
mov
push
sbb
scas
enter
fs
in
out
aad
push
imul
pushf
xor
push
sbb
fdivrs
inc
cmp
xchg
cmp
lahf
push
mov
rolb
call
movsl
mov
jge
dec
or
pop
or
arpl
adc
adc
int3
inc
mov
rolb
sahf
sub
mov
fnstenv
mov
push
dec
clc
sbb
rclb
and
lcall
pop
inc
pop
jnp
xor
pusha
jnp
fbld
shl
xchg
xchg
xchg
jne
jl
and
add
jp
and
out
test
push
xor
pop
jnp
jecxz
cmp
addl
push
add
xchg
xchg
mov
add
sbbb
test
inc
push
sbb
aaa
mov
cs
push
fs
lea
sbb
push
data16
fisttpll
xchg
pop
push
call
xor
push
pop
lahf
sub
sbb
jb
jge
aam
pop
std
mov
cmpsl
sbb
ss
or
dec
test
dec
mov
scas
inc
inc
inc
insl
mov
mov
dec
push
mov
int3
add
jbe
pop
shll
call
jae
jmp
pop
and
lahf
xor
outsb
inc
fnstcw
cmp
fisttpl
fucomip
stos
orb
mov
and
out
loopne
sbbb
mov
iret
pusha
jmp
pop
pop
addr16
cld
cmpsl
shl
ljmp
outsb
mov
and
cmpsl
test
test
push
orb
arpl
into
adc
lret
push
xchg
ret
cld
jbe
push
insb
jle
pop
jb
clc
pop
push
push
adc
stos
or
outsb
inc
scas
and
arpl
add
or
je
lret
sbb
or
ret
pusha
mov
aad
aam
dec
push
faddp
push
pushf
aas
out
cli
or
sbb
in
ljmp
out
icebp
jl
shl
enter
movsl
lods
mov
cmc
or
mov
jmp
in
stc
dec
or
loopne
mov
hlt
imul
ror
jns
adc
loopne
das
jle
mov
and
or
mov
out
xchg
xor
and
repz
popf
mov
lods
out
sub
push
jg
mov
push
or
dec
mov
orl
imul
xchg
in
sub
mov
push
in
test
shl
jne
jmp
jae
xor
stc
push
jp
mov
std
or
in
dec
mov
cmpsb
push
repnz
push
mov
ss
and
xchg
inc
ret
inc
xchg
push
fbstp
push
mov
mov
xchg
and
and
mov
incb
or
into
pushf
pushf
movsl
ds
and
sub
daa
sub
int3
ja
jb
sahf
ss
cli
outsl
sbb
push
xchg
insl
inc
cld
cmp
pusha
mov
mov
sbb
push
mov
mov
xor
mov
xchg
adc
inc
cmp
or
add
in
inc
cmpsl
ds
jp
rcrl
pop
adc
add
mov
mov
jbe
jo
cltd
xor
jns
add
add
dec
sbb
adc
lock
repz
adc
pop
xor
ja
xchg
inc
jbe
je
aad
or
mov
or
cmp
dec
mov
push
addr16
jp
iret
cwtl
arpl
xchg
mov
cmp
mov
dec
add
push
dec
cmp
xchg
push
jmp
cmp
xchg
xor
add
pop
jne
ds
xlat
jecxz
loop
js
adcl
jecxz
mov
cmp
adc
outsb
inc
shlb
push
add
inc
push
mov
push
out
stos
inc
adc
mov
xor
inc
lret
loope
std
sbb
dec
cmp
popa
test
mov
push
push
inc
mov
xchg
cmp
inc
daa
mov
inc
sbb
xor
mov
sub
mov
adc
inc
adc
cwtl
or
aam
test
sbb
addr16
testl
push
daa
lret
stc
cltd
ja
xor
popf
cmp
or
push
fmull
loop
mov
daa
push
loop
push
add
sahf
xchg
push
dec
mov
lods
icebp
add
adc
insl
xchg
mov
cwtl
ss
testb
push
mov
and
pop
cmpsl
and
or
ds
sub
inc
pusha
shrl
dec
dec
inc
and
cli
pop
sub
mov
icebp
shrb
jnp
pop
xchg
mov
daa
or
insl
dec
aad
push
fistps
out
ss
add
shrl
xor
jp
fs
cld
cmpsb
cmp
mov
xchg
stos
or
push
jge
sub
add
pop
xchg
int
mov
mov
out
or
filds
cld
and
leave
dec
es
imul
jbe
jmp
or
dec
dec
out
andb
sub
ret
inc
push
mov
aam
icebp
pop
or
pop
fmull
lods
in
nop
mov
lcall
dec
cs
or
out
jne
dec
fstl
icebp
repz
arpl
jle
dec
ret
xor
fmul
ret
in
and
add
testb
lret
sub
test
inc
repz
add
loopne
mov
adc
lahf
in
inc
and
js
mov
dec
jae
inc
outsb
loopne
xor
out
or
push
lret
jmp
cwtl
lahf
lods
fisubs
and
cmp
out
test
adc
mov
adc
adc
imul
fisubs
cmc
dec
mul
jb
push
lahf
pop
popa
xchg
mov
sbb
lahf
hlt
movsl
sbb
dec
xchg
pop
loopne
imul
pop
xor
adc
pop
imul
dec
mov
pop
push
lods
out
add
test
fwait
push
call
lcall
enter
adc
adc
loopne
rorl
ror
stc
das
push
mov
sbb
icebp
stos
dec
pop
jae
addr16
cmp
call
mov
add
or
push
mov
or
ffreep
jnp
jns
in
int
add
stc
mov
add
mov
shrl
sub
bound
clc
stc
std
out
pop
scas
mov
or
in
mov
adc
push
sar
jne
inc
add
add
mov
add
cmp
sub
cld
repnz
mov
sbb
lret
mov
push
lock
push
mov
les
inc
lea
loop
je
cmp
in
sub
jne
fimuls
mov
push
mov
xchg
pop
jne
jne
arpl
dec
adc
jo
popf
call
bound
mov
fcoml
add
loopne
test
mov
cmpsb
sti
icebp
call
lcall
dec
in
shll
mov
add
xor
pop
mov
jne
push
mov
adc
cmp
and
lret
mov
jge
cmpsb
sub
mov
fidivl
dec
lock
adc
call
jecxz
iret
ljmp
mov
popa
out
mov
inc
aad
arpl
mov
loopne
mov
push
ret
cld
and
jl
jecxz
cld
imulb
jnp
iret
adc
int
scas
xor
cmpsl
mov
jae
stc
inc
push
cmp
sbb
loope
mov
inc
xor
adc
adc
ret
add
jns
mulps
jno
pop
mov
imul
clc
inc
mov
push
xor
adc
jb
push
or
mov
loop
popa
push
mov
mov
jno
imul
rorl
xor
bound
insl
ds
in
fdivrl
mov
or
repnz
scas
call
adc
xchg
sbb
pop
add
inc
jo
xor
add
cmpsl
ret
pop
inc
mov
je
mov
imul
daa
jecxz
enter
gs
jmp
ss
adc
addr16
dec
orb
jns
mov
push
iret
mov
push
dec
std
in
ret
or
cli
mov
cs
mov
je
inc
mov
pop
dec
pop
aas
ret
jo
xor
sti
je
incl
out
or
push
test
in
fadds
int
pop
sahf
push
in
sbb
xor
jmp
dec
or
shlb
sub
fnstsw
fldcw
das
mov
xchg
xchg
adcl
and
testb
sub
and
jbe
jnp
pop
xchg
bound
pushf
xchg
mov
data16
inc
mov
adc
stc
sbb
adc
aaa
sub
rorb
sti
lahf
jg
dec
cltd
jp
xlat
xlat
stc
cmp
test
stc
sbb
sub
into
mov
xor
call
andb
inc
fs
bound
adc
and
xor
rcl
ret
hlt
loop
xchg
xchg
andb
inc
fs
bound
adc
and
xor
xlat
ret
hlt
jecxz
xchg
nop
andb
inc
insl
jb
bound
or
and
sar
ret
fsub
test
xor
inc
lods
stos
call
jae
pushf
std
fcmovne
lret
fucom
leave
hlt
fld
jmp
sar
icebp
mov
pop
inc
imul
sub
in
hlt
fld
jmp
mov
test
je
inc
imul
sub
in
hlt
fld
jmp
mov
test
push
jp
sbb
sbb
jge
nop
mov
mov
pushf
outsl
and
xor
push
add
mov
or
mov
jl
mov
fdivrs
stos
sbb
push
sub
sbb
sahf
aam
sbbl
dec
pop
lret
in
ficompl
popa
aam
xor
sub
lods
adc
in
sar
pop
rcl
int3
sub
ffree
xchg
inc
xchg
mov
cmpsb
movsl
in
stos
cltd
je
xor
cld
and
mov
sub
xchg
adc
pop
cltd
gs
adc
je
mov
sti
sub
fmuls
stc
sub
and
xor
mov
ds
rorb
dec
ret
sub
sub
leave
hlt
fld
jmp
mov
test
je
inc
imul
sub
or
xchg
stc
shr
lock
adc
adc
adc
or
or
popa
push
fs
lods
cmpb
call
rol
fstl
add
and
cmp
addr16
sbb
jle
orl
pushf
loope
mov
test
je
inc
imul
sub
in
hlt
fld
jmp
mov
test
je
inc
imul
sub
in
xchg
mov
add
cmp
jbe
es
xlat
mov
cmp
xchg
movsl
or
daa
mov
int
add
fimull
fdivrs
mov
fcoms
jmp
push
mov
lahf
fidivl
imull
mov
cmp
adc
pop
imul
jbe
pop
cmp
mov
loopne
and
cli
aas
inc
inc
inc
xchg
fnsave
dec
push
mov
mov
dec
notb
lea
lea
imul
cwtl
dec
fwait
sbb
xchg
jne
out
xchg
icebp
clc
pop
std
xor
cmp
push
or
sub
in
adc
cmp
leave
in
dec
sbb
decb
dec
sbb
mov
or
mov
and
jnp
sbb
push
xchg
test
push
jns
insl
mov
pop
stc
cmpsl
sub
icebp
adc
inc
pop
clc
xchg
cmp
cmpsl
pushf
or
adc
mov
insl
sbb
push
aam
mov
adc
in
js
mov
pop
sbb
icebp
das
cmpsl
add
sub
cmpsb
js
imul
xlat
mov
mov
mov
cmp
leave
pop
push
aam
popf
and
jmp
dec
aaa
inc
fildll
or
jg
shr
sub
xor
test
jne
jecxz
icebp
outsl
out
dec
test
movsb
call
or
mov
sub
fs
mov
sbb
adc
call
out
jb
or
pusha
enter
arpl
xor
mov
push
cmp
int3
lods
std
mov
cli
ror
adc
cli
imul
xor
sub
cmp
push
out
sub
inc
fcomps
lods
in
pop
rcll
mov
cmc
loope
push
and
adc
adcl
test
in
or
mov
bound
xchg
inc
mov
or
add
andb
cmc
dec
imul
incl
lahf
and
push
adc
les
mov
pop
add
scas
mov
into
loop
xor
mov
dec
fmull
pop
in
orb
imul
stos
test
fldenv
addb
adc
fs
lret
aaa
mov
mov
repz
jg
xchg
dec
js
xor
insl
jmp
xor
jle
ljmp
dec
sub
shrb
push
cs
fisubrs
cmp
repnz
imul
fsubl
pop
push
ljmp
xchg
das
adc
fistpl
push
fnstcw
inc
push
jns
mov
dec
dec
pop
insb
push
stos
dec
mov
xlat
inc
setbe
ss
sbb
dec
sbb
fnstenv
add
loop
imul
add
sub
mov
pop
sbb
sub
xchg
mov
xor
pop
out
jecxz
mov
and
adc
mov
rcrl
insb
pop
cmp
ror
enter
xchg
mov
les
sbb
mov
pop
push
sti
sbb
pop
rorb
aas
pop
fsubr
leave
xor
sub
pop
ret
cwtl
ss
dec
jne
test
stos
dec
mov
loope
nop
fs
xchg
mov
outsb
jns
cmp
movsl
and
push
ljmp
cmp
imul
icebp
pushf
push
sahf
sbb
scas
bswap
jne
mov
test
or
add
mov
negl
sub
xchg
lcall
je
ror
mov
fidivs
test
ds
jecxz
xor
cmp
jle
lock
imul
ds
cmc
and
sahf
imul
cld
test
dec
std
pop
data16
xchg
sar
cmp
dec
pop
fwait
ret
inc
aad
addr16
add
and
push
arpl
cld
orl
movsb
and
call
je
xor
daa
inc
ret
xchg
mov
mov
fiadds
ret
int
mov
mov
cli
rolb
mov
ss
mov
or
stc
push
es
shll
hlt
loopne
push
daa
sub
ja
mov
push
je
cmp
rorl
pop
fiaddl
dec
mov
mov
lret
mov
stc
insb
jb
in
notl
push
push
popa
mov
clc
mov
dec
xor
dec
adc
jl
dec
pop
lds
arpl
jb
jecxz
add
xchg
into
outsl
xchg
or
adc
jbe
fnstenv
inc
xchg
std
aas
adc
mov
into
pop
mov
into
push
cmp
cltd
sbb
jno
pop
adc
jbe
mov
cltd
xlat
out
cmpsl
pushf
sub
sub
inc
insb
ljmp
pop
mov
repnz
dec
andb
mov
cmp
fcmovnu
mov
jbe
fisubs
clc
mov
aaa
dec
das
pop
fstl
arpl
and
sbb
subl
dec
mov
pop
stos
stos
rcr
inc
pop
sahf
pop
outsb
rclb
xchg
divps
fxch
jp
aas
cld
ss
pop
sbbb
fwait
dec
adc
insb
std
int
ds
out
pusha
mov
adc
pop
or
jne
scas
cmp
rorb
movsl
jle
ret
ds
fistpl
xor
outsl
dec
mov
push
pop
mov
or
aad
fs
dec
mov
in
jbe
shll
add
loopne
das
adc
mov
cld
int
mov
cmpl
dec
xchg
icebp
shrl
cmp
push
or
inc
push
daa
xor
in
cmp
scas
cld
stos
xchg
paddb
mulb
xchg
xchg
cmp
sub
xor
incl
xchg
xchg
fimuls
insb
inc
sbb
push
data16
or
dec
xor
xchg
adc
adc
add
xchg
xchg
xchg
shl
data16
sbbl
pop
ret
fcompl
pop
frstor
icebp
ror
cmp
inc
dec
mov
nop
hlt
mov
vpaddusb
cmp
and
cmp
js
or
lods
lahf
lcall
adc
sarb
psubw
wrmsr
pop
in
loop
dec
xor
jmp
imul
and
std
cmp
in
and
iret
ss
lret
and
incl
stos
call
popf
pop
sbb
popf
sub
xchg
or
data16
aam
inc
pop
xchg
fstpl
icebp
push
dec
push
xchg
cmpsl
les
xchg
jo
jne
sahf
subb
add
popa
mov
adc
sti
lds
xchg
cs
sub
pop
clc
push
imul
xchg
push
add
cmp
xchg
lea
jnp
fstps
fsts
pop
xor
lock
pusha
push
addr16
jmp
shrb
ja
out
popa
pop
sbb
call
cli
mov
lret
test
inc
push
cmp
dec
loop
or
mov
xchg
inc
mov
or
inc
cld
or
pop
sbb
mov
and
lods
cmp
rorl
push
insb
push
das
mov
aam
mov
or
cmpsb
mov
pop
or
fnsave
pop
sbb
mov
push
clc
insl
movsl
imul
and
sub
pop
mov
jae
lock
fwait
int3
or
shll
and
xor
ds
hlt
pop
mov
fcmove
or
out
xchg
out
jno
cmpsb
jne
andl
push
mov
xchg
inc
pusha
sub
push
mov
and
cwtl
notl
or
popa
add
and
dec
std
sub
pop
sti
add
lea
jp
gs
dec
mov
rcr
mov
testb
aaa
scas
or
addr16
nop
fdivrs
loope
cltd
push
and
clc
lea
imul
stos
mov
xor
and
inc
cld
ljmp
addr16
add
test
sub
and
xor
xchg
cmp
inc
add
and
mov
jno
sub
jns
cmpsl
add
xor
cmp
aas
cli
dec
test
adc
addr16
push
xor
adc
xchg
cmp
and
lods
add
jo
call
jno
jle
cld
leave
sbb
insl
push
xor
out
jbe
lret
sbb
repnz
mov
push
data16
xor
lahf
cvtpi2ps
stos
pop
push
cltd
mov
adc
test
jg
adc
jg
incb
or
push
jns
push
cmp
pop
push
cli
or
mov
push
int
add
ret
fmull
inc
fsubs
movsl
xchg
repz
cli
icebp
or
fistpll
aaa
lret
and
xchg
inc
ds
sbb
mov
cmpsl
cmp
test
cld
out
xor
add
jae
es
into
dec
dec
mov
fstpt
xchg
xchg
adc
cmp
or
push
push
aaa
or
adcb
inc
les
cmp
add
les
cmp
xor
arpl
xor
sbb
push
cs
out
sbb
aaa
notl
lahf
mov
push
es
dec
sahf
xchg
or
outsb
pop
adc
bound
divb
mov
rcr
stos
xchg
mov
fldcw
repnz
sbb
aaa
popf
divb
inc
pusha
pop
enter
cmp
ljmp
mov
xchg
mov
or
xor
jae
shlb
in
lret
inc
rcl
data16
mov
jl
push
orl
arpl
popa
add
pop
mov
pop
daa
push
addr16
lds
popf
jle
push
popa
stos
and
in
nop
pop
and
inc
mov
sbb
in
outsb
sub
add
jp
fcmovu
fs
sub
fistl
xor
fsubrl
mov
push
addl
test
mull
xor
fwait
loop
int
dec
or
push
ret
pop
adc
dec
loope
loope
or
and
ret
testb
push
mov
out
dec
aas
out
push
inc
cmp
jae
roll
repnz
cmpb
popa
and
add
pop
lock
xchg
cmp
xchg
xchg
cld
xchg
jbe
sti
mov
das
cwtl
mov
ret
shrl
repz
xchg
inc
mov
rolb
sbb
inc
pushf
jl
cmp
or
pop
and
scas
aad
or
popf
push
test
mov
out
push
sbb
ss
jmp
mov
movsb
aam
mov
push
xchg
jo
fldcw
mov
or
in
add
cltd
inc
mov
push
mov
pop
sbbb
fiaddl
lahf
popa
aam
arpl
push
jge
das
cltd
mov
leave
dec
push
sbb
push
fsts
sbb
filds
adc
xlat
ds
dec
inc
adc
mov
adc
jl
push
cmp
jnp
lock
lret
shrl
jo
add
popa
cli
add
orl
lods
cmp
outsb
mov
cmp
xlat
dec
adc
sahf
xor
subb
mov
les
or
daa
sub
imul
inc
lea
test
bound
incl
jl
inc
push
fdivl
dec
and
cmpb
fnstenv
pop
push
jo
sbb
je
mov
das
mov
xor
adc
inc
adc
subb
and
mov
sub
lahf
test
jbe
fucomi
testb
shr
pushf
mov
adc
sbb
cmp
push
or
xchg
daa
mov
cmpsb
pop
movsl
mov
int
jg
lret
sub
pop
in
lcall
xor
mov
adc
ljmp
adc
sti
int3
mov
mov
add
cmpsb
ret
xor
push
push
pop
ja
xor
aad
lahf
or
cmp
int
or
push
add
les
pop
xchg
in
mov
adc
test
pop
mov
and
inc
fs
loop
sti
adc
ljmp
lea
and
dec
scas
xchg
xor
mov
shrb
popf
jp
pop
out
lcall
and
push
adc
sub
xor
cmpsl
jg
xor
xchg
cltd
sbb
lahf
dec
xchg
lock
out
push
jl
arpl
jb
dec
test
add
ret
and
mov
sbb
out
leave
mov
pop
mov
inc
pop
out
adc
jmp
xchg
inc
jne
les
adc
xor
nop
ret
adc
or
clc
loopne
rorb
loopne
sbb
ljmp
fldcw
sbbb
sub
stc
inc
loope
pop
stc
dec
mov
jnp
pop
inc
sahf
repnz
add
cmpsb
and
fmull
jnp
pop
dec
push
loope
or
xchg
daa
dec
lea
mov
push
insb
xlat
int3
rcrb
mov
push
mov
ljmp
cmpsl
pop
push
stos
fs
xor
icebp
push
out
fsubrs
imul
es
test
jl
cmpsb
sbb
in
xchg
pop
fcompl
cmp
testb
pop
inc
fisubrl
and
ret
ss
icebp
dec
mov
rorl
jne
into
or
xor
imull
inc
pop
push
dec
hlt
lahf
in
dec
popf
dec
mov
pop
mov
pop
push
mov
clc
fcmovb
scas
ss
cli
sbb
lret
dec
loop
popf
jne
xchg
xor
cmp
mov
out
pop
bound
aam
mov
rclb
scas
pop
xchg
xchg
mov
push
ja
or
xor
lods
or
pop
repz
stos
push
test
rcrb
jecxz
ja
sbb
cmp
dec
int3
sbb
aas
out
inc
add
push
jb
imul
int3
jg
xchg
fucomp
inc
or
add
adc
sbb
enter
dec
js
jno
push
adc
fdivrp
imull
das
dec
and
inc
jnp
lret
test
add
stos
jns
add
popl
lock
mov
cmpsl
js
testl
fnsave
cmp
xor
lods
dec
loope
and
in
sub
test
test
fadds
notl
setne
insl
ljmp
push
addb
add
mov
mov
fiaddl
xlat
divb
fists
mov
vzeroupper
lods
pop
jmp
pushf
hlt
scas
jl
dec
sbb
leave
add
sbb
mov
inc
cmpsl
fs
pop
mov
cmp
mov
pop
push
fisubrl
xchg
mov
inc
cmc
pusha
inc
std
and
dec
pop
cmp
test
pop
mov
cs
xchg
outsb
fstl
mov
add
jnp
rorl
leave
sub
jae
insb
icebp
mov
aaa
iret
xchg
lods
inc
xchg
ret
cli
inc
jnp
jno
imul
jl
loope
mov
call
push
adc
cmpsb
and
mov
or
popf
mov
mov
mov
jge
mov
bnd
adc
jno
out
xchg
stos
das
adc
or
xor
cmp
aaa
js
repnz
cltd
stc
das
add
sahf
sahf
int3
inc
mov
imul
fsubrs
push
mov
pop
xchg
adc
ss
fldcw
jo
std
insl
fstps
mov
push
sti
fsts
cwtl
in
jge
cltd
or
pushfw
dec
xchg
jmp
cmp
jmp
push
cmc
push
lcall
out
push
xchg
es
xor
stos
aad
addl
sti
sbbb
insb
lock
pop
lods
mov
arpl
xor
sbb
push
xchg
jg
mov
lock
add
cwtl
scas
pop
jge
jne
push
pop
stc
or
inc
cmp
std
out
pop
sti
inc
pop
ljmp
adc
or
lds
shrl
in
fnstcw
dec
xorb
add
pop
and
adc
out
sub
mov
hlt
jns
mov
sti
fmuls
stc
leave
or
xchg
jno
adc
push
dec
test
or
insl
bnd
aaa
imul
stos
or
ret
push
mulb
lcall
pop
lds
cld
out
mov
sub
aad
adc
xchg
jbe
adc
xchg
pop
int
out
sbb
xchg
fimuls
sub
sbb
popf
loope
inc
aam
call
dec
lahf
insb
jb
inc
jp
lret
inc
shrl
jmp
mov
xor
xor
into
xchg
dec
fcoml
fnstsw
cmpsb
xor
test
test
mov
xchg
stos
scas
mulb
jnp
int3
cmp
xor
int
fsubrs
ds
adc
and
hlt
or
cmp
push
scas
insl
imull
mov
test
aad
push
ds
test
sub
dec
dec
fmuls
scas
mov
push
mov
pop
ljmp
out
sbb
inc
dec
leave
mov
and
dec
pop
push
inc
rol
clc
jl
xchg
dec
mov
xchg
movsb
les
push
jne
inc
ret
lret
xchg
sub
xchg
fstps
inc
cwtl
and
dec
das
roll
pop
xorb
and
cmpsl
das
fildl
mov
bound
xchg
data16
push
loop
cli
adc
pushf
jnp
je
mov
in
sbb
fdivrp
pushl
xchg
or
cmpsb
shlb
xchg
nop
mov
jae
faddl
push
mov
cli
jo
jge
test
sbb
loopne
call
stos
jle
ds
mov
add
pop
mov
jae
xchg
call
imul
inc
insb
or
cmp
fists
mov
or
sub
xchg
sbb
out
sub
mov
mov
xchg
pop
pop
xor
cmp
outsl
inc
hlt
stos
jge
jno
jne
mov
sub
mov
test
or
pop
lods
fldcw
mov
and
mov
push
or
movsl
adc
repz
jl
leave
add
inc
xor
and
jbe
aaa
push
pop
fcomip
sub
push
data16
mov
inc
cmp
stos
loopne
out
loop
aaa
lods
scas
fs
inc
sub
mov
loopne
callw
mov
pop
inc
fs
out
jb
xchg
lret
and
std
lds
jo
xor
xorl
ss
ljmp
std
jae
rclb
cltd
xchg
mov
and
mov
test
or
sti
lcall
testb
push
mov
addr16
xchg
or
ja
stos
clc
dec
or
sub
std
sbb
rorl
sbb
popa
push
test
xor
outsl
jl
mov
adc
pop
or
js
clc
xor
imul
in
dec
loop
dec
sub
mov
cmovo
ljmp
in
xor
jecxz
mov
in
popa
lret
cmp
xor
sbb
das
push
cmp
dec
in
lret
pushf
pop
mov
imul
jb
fstpt
adc
xchg
push
push
cmp
loop
pusha
xchg
fidivs
sub
hlt
xor
bound
push
call
cs
cltd
sub
cmpsl
cmc
mov
es
lret
sub
mov
jns
adc
cmp
negl
jo
mov
fidivrs
pusha
test
fisubl
cs
sbbl
mov
mov
jno
add
sub
mov
ss
push
cli
inc
jbe
mov
imul
out
mov
pop
aas
dec
push
lret
or
cld
adc
bound
mov
lahf
clc
roll
xchg
addr16
into
rolb
mov
fstl
fistpl
and
xchg
test
out
push
inc
test
mov
ret
into
and
inc
cmp
lret
mov
lcall
dec
cmpb
mov
aas
fdivr
push
add
bound
popf
xchg
sbb
jmp
and
int3
pushf
mov
loope
mov
in
je
jae
pop
jns
popf
adc
xchg
iret
fldl
mov
cmp
push
lret
repz
push
aaa
fisttpll
insb
pushf
std
or
mov
adc
int3
fdivrl
das
incl
stos
push
xchg
inc
mov
pop
mov
shrl
stc
adc
repnz
sub
xchg
movsb
rorl
loope
loopne
lea
or
sub
add
add
aam
dec
push
fisttpll
mov
sub
hlt
stc
xchg
pushf
and
dec
xchg
shl
loopne
daa
enter
xchg
mulb
or
push
or
dec
bound
sbb
outsl
out
jp
mov
je
lahf
pop
mov
ds
cli
clc
in
push
inc
fldcw
jle
inc
std
adc
pusha
aad
mov
ss
cmp
int3
pop
int3
pop
les
cmp
lods
inc
jbe
std
in
fsincos
jmp
mov
test
je
inc
imul
sub
in
hlt
fld
jmp
mov
test
je
inc
imul
sub
in
hlt
fld
jmp
mov
test
je
inc
imul
add
leave
hlt
fld
jmp
mov
add
adc
fwait
dec
mov
out
imul
in
loope
repnz
mov
mov
cmpsb
cs
imul
xor
add
add
xchg
repnz
rcl
ret
mov
adcb
bound
pop
push
inc
bound
and
adc
add
add
dec
or
cwtl
xchg
mov
jb
inc
sub
aaa
xor
inc
inc
push
pusha
dec
data16
mov
pop
pop
adc
popf
sbb
ljmp
push
icebp
push
and
push
cmp
pop
jge
lea
sahf
lods
scas
adc
daa
outsb
jge
cltd
in
dec
sbb
mov
mov
les
imul
mov
fnstenv
jb
push
push
push
mov
lret
lds
repnz
cmpsb
mov
jge
xchg
packsswb
jb
lods
lods
inc
frstor
xor
sbb
das
dec
cmp
or
jle
push
icebp
xor
addr16
xor
cli
inc
push
sbb
cmpsl
sub
pop
std
pop
push
jge
cmpsl
adcl
xor
test
addr16
adc
jle
ret
rol
inc
mov
mov
movsb
jb
lret
bound
push
cmp
xor
adc
mov
orb
pop
fmul
mul
xchg
lds
and
daa
divl
and
pop
dec
imul
scas
mov
movsb
mov
mov
lret
loopne
lock
mov
adc
pop
inc
add
jb
jge
and
push
jno
sbbl
mov
bound
bound
push
inc
and
xor
add
adc
loop
repnz
rcl
ret
mov
adcb
bound
push
inc
and
xor
add
adc
loop
push
mov
scas
adc
cmp
mov
and
jns
mov
dec
mov
sub
pushf
leave
sub
or
mov
rolb
pop
jle
or
push
xor
shrl
push
jne
and
sub
ret
ret
mov
popf
adc
sti
inc
push
adc
cmp
xchg
nop
cld
stos
lods
push
loop
add
out
or
ljmp
sti
setae
lret
mov
leave
imul
adc
out
xchg
repz
cmp
les
cmp
or
cmp
ror
pop
cmp
ljmp
rcl
pop
clc
in
test
mov
iret
and
dec
cs
fwait
lcall
imul
jno
or
push
mov
mov
rol
mov
or
dec
out
xor
aad
scas
lret
cmpsl
cld
fucomp
cli
xor
mov
mov
hlt
cmpsl
add
add
fcomps
cmpl
jmp
or
jmp
mov
ja
aam
sub
arpl
mov
pop
inc
mov
cmp
les
clc
mov
mov
xor
imul
jle
cmp
idivl
cmp
push
cmpsl
xchg
push
movsb
xor
fistpll
clc
dec
mov
mov
push
stc
addl
and
xor
std
pop
and
cmp
in
pop
xchg
xor
sub
and
out
psrlq
mov
sbb
mov
test
mov
sub
hlt
mov
mov
frstor
inc
aaa
push
pop
in
loop
cmc
push
inc
and
idiv
in
imul
add
add
test
loope
cmp
shlb
sub
loopne
arpl
lods
das
cwtl
mov
add
jb
and
lret
mov
cmpb
je
sbb
sarb
lods
sbb
inc
pop
cmp
out
out
lods
sub
dec
into
and
jmp
out
loop
dec
sti
mov
mov
cs
cltd
test
jo
ret
dec
pusha
int3
imul
cwtl
push
mov
and
rorl
mov
cli
pop
cmp
pop
jle
cmp
hlt
ljmp
jae
sahf
pop
insb
xor
jmp
fmull
dec
xorl
popf
shlb
mov
pop
xchg
nop
xchg
or
lock
into
cmp
add
iret
or
shlb
cmpsl
dec
sbb
pop
aam
sahf
hlt
mov
inc
in
jg
addl
xchg
push
shlb
cmpl
add
fidivl
int3
mov
mov
gs
mov
scas
out
cltd
je
clc
sub
mov
test
fs
jne,pn
pop
push
out
aas
mov
or
das
pop
out
iret
push
iret
movsb
mov
out
mov
ds
lods
daa
fisubl
inc
addb
push
popf
outsl
orl
lret
push
ja
xchg
mov
pop
jg
je
sarl
xchg
jecxz
push
fbld
jge
adc
pop
call
test
sub
mov
jnp
outsl
push
adc
mulb
lods
mov
andl
mov
or
mov
mov
mov
xchg
xlat
cmpb
scas
mov
and
push
cmpsb
xor
mov
call
ret
or
cmp
outsb
stc
jecxz
xchg
push
sub
sahf
movsb
movsl
sbb
and
pop
fldcw
add
sbb
orb
lret
movsb
popf
mov
and
ds
dec
pop
rcr
sub
adc
je
pushf
inc
sti
arpl
jle
ret
daa
das
shlb
addr16
and
addb
movsl
and
daa
dec
mov
fbld
inc
pop
sbb
and
dec
and
sar
push
pop
pop
pop
mov
cmp
clc
dec
inc
ror
aaa
enter
add
fnstsw
adc
sbb
and
lock
aad
xor
into
dec
inc
sahf
out
stos
cs
mov
mov
imul
jge
pop
inc
ljmp
iret
add
sbb
push
stc
adc
in
hlt
ds
pushf
outsb
outsb
lret
xor
insl
sbb
fdivs
mov
ljmp
fs
and
lsl
popl
push
inc
and
jb
add
sbb
cmp
cmp
test
sub
loop
rcrb
dec
mov
adc
inc
loopne
push
jmp
adc
or
jo
pop
adc
nop
ja
and
mov
fisubs
shr
cmp
cltd
loopne
cmp
jmp
mov
xor
jge
sti
and
sub
aaa
mov
notb
insb
sbb
mov
outsl
pushf
adc
dec
push
test
mov
push
sahf
scas
sbb
and
insl
add
xchg
repnz
iret
popf
rol
inc
int
push
or
out
sub
shll
lcall
inc
push
mov
mov
fisubs
adc
imul
ljmp
dec
xchg
lds
int
jge
inc
sbb
imul
loopne
xchg
outsl
stos
popa
imul
fisttpl
mulb
cmc
inc
jge
and
scas
mov
incl
mov
test
push
adc
mov
cs
sub
stos
mov
int3
leave
test
mov
stos
or
jp
and
xor
in
and
aam
or
int3
scas
int3
fidivrl
pop
mov
or
push
sti
push
mov
or
and
add
scas
cmp
out
cmp
cld
inc
lods
in
pop
out
test
ja
mov
mov
pop
in
mov
imul
xchg
inc
jge,pt
stc
insb
cmp
jge
and
negl
mov
popa
movsl
inc
ljmp
add
jmp
mulb
lret
or
nop
movq
mov
rcl
enter
outsb
shlb
lds
xor
inc
mov
dec
pushaw
je
push
int3
out
cmp
cld
jb
movsb
sahf
adc
sbb
outsl
jmp
insb
cli
cmp
into
mov
mov
and
ret
loope
scas
lea
jo
mov
pop
pop
pop
jnp
roll
icebp
and
cmp
mov
popf
call
mov
mov
xchg
dec
inc
sbb
cmp
xchg
pop
imul
in
out
lods
stos
and
mov
or
imul
sub
sbb
sbb
push
xor
dec
cltd
jno
sbb
cmp
nop
mov
repnz
sub
jne
js
lcall
jnp
test
xor
mov
and
iret
jle
inc
push
leave
push
sub
xchg
daa
popa
fneni(8087
cmp
shll
loop
pop
cltd
sub
inc
call
cwtl
clc
xchg
testb
in
sub
xor
jmp
sbb
inc
in
add
mov
ret
adc
xor
cltd
sbb
cs
insl
inc
sarl
mov
cmp
movlps
mov
jmp
stc
and
add
jmp
cmp
iret
out
cmp
cmpsb
cmp
fimuls
pop
loope
xchg
dec
push
and
and
jns
xchg
daa
popa
push
cmp
popa
xchg
jl
ja
ja
das
outsl
aaa
out
outsl
and
mov
mov
jns
pop
xchg
mov
repnz
daa
cld
lods
and
repz
pop
mov
out
gs
lret
inc
and
inc
bound
cltd
andb
or
adc
inc
frstor
adc
inc
cmp
push
ja
xchg
ret
lock
repnz
dec
xchg
shl
scas
mov
cmpsb
stos
popf
int3
cmpsb
cmp
adc
mov
dec
cltd
mov
jle
xchg
jb
stc
cmc
inc
fdivr
and
scas
popa
leave
cmp
or
jns
fldcw
mov
outsb
insb
out
push
gs
mov
daa
test
mov
loop
test
push
cld
jb
mov
fiadds
push
sub
call
std
popl
pop
in
cmc
and
lcall
insl
faddl
ljmp
xor
adc
dec
addr16
lcall
cmpsb
pop
sub
or
repnz
insl
cs
fs
xchg
lcall
push
mov
lods
pusha
pop
popf
mov
ret
inc
mov
addr16
xor
cmpsb
push
or
mov
jo
repnz
fstl
sub
or
add
push
roll
aam
loop
pusha
sbb
jne
lods
mov
test
or
mov
imul
mov
sbb
inc
mov
stc
inc
add
ds
data16
shrl
cmp
movsb
push
push
push
loopne
cmp
xchg
xchg
stos
xchg
loop
les
add
jmp
rolb
ljmp
adc
out
in
in
mov
and
ret
lahf
inc
jns
cmp
loope
int3
push
xchg
add
loopne
ret
pop
pop
adcb
lret
inc
xor
test
shll
out
stos
sub
out
xchg
inc
add
mov
mov
mov
mov
gs
pop
sahf
xchg
cltd
jo
mov
inc
aam
repz
fcompl
adc
add
mov
pop
xchg
shlb
cltd
xor
frstor
scas
mov
std
mov
inc
add
notb
xchg
notl
jmp
lret
loopne
xchg
ret
sbb
mov
mov
cmp
iret
mov
subb
add
repnz
mov
cli
movsb
jbe
xor
push
cwtl
mov
inc
sbb
inc
push
inc
into
loope
sub
cmovnp
fsubrl
push
or
and
mulb
test
nop
aaa
je
int
aas
daa
xchg
xor
adc
mov
xchg
adc
pusha
fdivrl
jno
hlt
stos
in
push
out
in
pusha
dec
js
mov
popf
jl
pop
xchg
cld
push
mov
ds
mov
aad
scas
push
movsl
cli
and
incb
cmp
test
dec
andl
icebp
dec
popf
xor
ss
pop
push
test
pop
xchg
aaa
movsl
test
mov
mov
jmp
test
pop
repnz
adc
imul
mov
sub
aaa
inc
loopne
in
addb
bound
loopne
inc
sbb
pop
pop
cld
sbb
push
scas
adc
xor
adc
inc
shll
cmpsl
xchg
setge
out
adc
pop
push
dec
sub
and
add
jae
cld
mov
sub
aad
jns
fidivs
lcall
xor
inc
xchg
shlb
popaw
adcl
stc
lods
xchg
jae
aad
adc
fucomp
repnz
adc
aad
stc
xor
xor
cld
mov
lahf
pop
and
sbbl
lcall
and
jno
cmp
mov
xchg
ret
and
movsl
stc
fsubs
xlat
xchg
sbb
into
std
mov
add
inc
sbb
gs
pop
rclb
stos
adc
mov
or
nop
jo
mov
jnp
ret
push
out
sub
mov
mov
mov
mov
mov
xchg
mov
jns
xchg
js
out
int
pop
mov
pop
cmp
aad
cld
ss
xchg
mov
in
shlb
xchg
push
sbb
mov
in
mov
push
int3
inc
or
mov
jae
inc
mov
sub
pushf
mov
push
dec
gs
mov
stc
mov
aad
mov
and
cmc
shrb
in
push
xchg
xor
shll
add
sbb
jecxz
incl
adc
fidivrl
sbb
pop
shlb
daa
mov
je
dec
repnz
sti
les
icebp
imul
daa
push
or
test
idivb
cmp
dec
xor
dec
outsb
xchg
or
rcrl
dec
add
mov
out
lds
mov
xchg
cltd
jb
lds
cltd
cwtl
mov
pop
fstps
fmull
nop
jo
jmp
enter
adc
sar
outsl
sub
int
fcoms
aas
push
add
inc
fs
out
cmpsb
dec
dec
cmp
les
push
arpl
inc
mov
xchg
push
sbb
jo
and
clc
test
adc
mov
stc
aad
pop
imul
cmp
sbb
or
sbb
xchg
mov
sbb
repz
daa
xchg
fcoml
aad
and
shrl
ljmp
fldl
dec
shr
lock
jne
imull
ja
aas
jns
push
fistpl
test
shll
mov
sub
lahf
nop
cmp
push
std
les
push
mov
imul
and
fsubl
xchg
push
in
jo
nop
push
jl
rcr
sub
xor
jl
cmp
in
jle
inc
fcomi
out
xchg
pop
jbe
scas
in
jmp
stos
xor
stc
sbb
add
xlat
shll
fucom
lock
add
and
mov
push
pusha
adc
jns
in
dec
stc
loop
mov
stos
int3
xchg
adc
int3
add
pop
sbb
in
jne
in
dec
xchg
ljmp
pop
add
shrb
into
lods
push
sahf
int
jmp
lea
cmp
mov
or
rcrb
out
andb
xorl
sub
sub
lods
aas
mov
xchg
subl
cmp
stos
pop
gs
into
outsl
jle
xor
jl
cltd
outsb
outsl
or
in
outsl
mull
sub
adc
push
iret
dec
jo
mov
sbb
xchg
outsl
outsb
out
mov
outsl
mov
int3
cmp
mov
lcall
push
outsb
hlt
js
rcrb
inc
push
inc
ret
xor
xchg
fwait
jo
mov
cmp
xor
xor
int
pushf
add
jae
rclb
out
jnp
mov
popa
mov
pushf
mov
adc
jmp
imul
mov
or
jne
mov
jne
fcoms
lret
xlat
mov
mov
std
add
mov
test
jmp
fldt
add
shrb
aad
mov
pop
xchg
roll
shrl
popa
ret
aaa
pop
dec
mull
and
cmc
rorb
jp
add
scas
jae
or
xchg
push
scas
mov
imul
pop
and
inc
pop
inc
xchg
pop
enter
jne
jge
add
xchg
jmp
adc
pop
push
push
movsb
jle
fnstsw
xor
sti
push
into
cmpl
insb
jbe
push
adc
inc
dec
ret
out
fcompl
nop
addr16
jae
cmp
test
ret
ljmp
add
push
fcmovnbe
das
cmpsl
push
rol
fdivrs
dec
gs
mov
adc
cmpsl
adc
sub
test
inc
insb
cmp
cwtl
aad
outsl
mov
stos
rclb
adc
mov
clc
jno
push
or
gs
rclb
insb
mov
mov
adc
inc
enter
cmpsb
loop
dec
dec
subb
je
dec
js
ja
lock
adc
rcl
aam
popf
or
lock
mov
fldpi
sub
or
push
fldenv
aam
je
or
push
lcall
int3
mov
dec
push
std
mov
push
mov
inc
int
popf
mov
adc
lds
adc
sahf
add
dec
inc
ja
insl
push
sbb
hlt
iret
and
js
push
test
stc
xor
leave
xchg
in
out
and
addr16
xchg
fs
add
in
inc
cld
mov
nop
cmpsl
xchg
fimuls
and
rcll
push
andb
and
lcall
int
or
sub
shl
call
fistpl
inc
int3
jge
push
ljmp
pop
cmp
xchg
fs
xchg
scas
pop
fadds
popa
es
inc
andb
call
mov
aas
sbb
sti
mov
sbb
and
hlt
jno
cli
mov
and
dec
dec
fidivrl
loop
mov
pusha
pusha
and
int3
mov
xor
fs
jp
aaa
stos
dec
jmp
push
mov
out
cltd
rol
jecxz
repz
out
sub
in
push
ficompl
rclb
dec
push
cmpsb
add
cmpsl
inc
stos
cmp
sbb
test
stos
mov
ret
sbb
gs
inc
xor
push
adc
cs
jae
jae
hlt
leave
mov
xchg
std
pop
and
fsubl
and
mov
mov
mov
cmpsb
push
add
sbb
es
jge
ljmp
cld
inc
jge
int3
bnd
push
pop
sub
stos
push
add
push
xchg
bound
sbb
xchg
mov
xorl
popf
add
adc
mov
les
jecxz
cmp
mov
or
ljmp
mov
adc
sbb
cmp
or
outsb
popa
test
lret
outsl
xchg
aad
sarb
adc
shrd
xchg
sbb
jl
or
out
std
and
leave
movsl
inc
pushf
outsl
and
sub
adc
repnz
out
enter
push
pop
gs
dec
mov
arpl
add
cmp
lcall
idivl
sub
xor
adc
dec
jge
les
push
xchg
popa
stc
iret
pop
cmpb
xorl
xor
shlb
fdivrs
sub
adc
mov
xor
cmp
xor
push
jno
xchg
scas
imul
outsl
dec
leave
nop
jns
sbb
lret
sarl
pusha
jnp
sub
pusha
cltd
and
mov
stos
enter
fdivrl
mov
lods
sbb
movsl
insl
std
or
fisubs
dec
in
lret
xchg
test
mov
mov
and
jecxz
adc
jp
mov
mov
cmp
pop
push
ljmp
mov
cmp
sti
sbb
jb
sub
stos
sub
add
shll
inc
or
and
pop
jne
dec
icebp
clc
loopne
int3
in
out
add
insb
xor
gs
push
in
mov
hlt
hlt
xchg
cltd
pop
xor
cmpsb
ja
mov
lock
add
int3
and
jg
sbb
pushf
mov
pop
cltd
sti
add
pop
sahf
mov
sbb
mov
dec
inc
jnp
push
sbb
stc
mov
xchg
insb
mov
into
adc
add
hlt
cmp
xor
push
push
add
pop
mov
ja
imul
hlt
nop
cli
lds
pop
push
push
int
mov
stos
xor
in
ret
cli
fldenv
loopne
sub
sbb
stc
rorb
pushf
push
aas
inc
ljmp
jns
std
popa
dec
inc
sahf
loopne
mov
popf
fisubs
pop
fadds
mov
add
sahf
mov
cmp
sbb
into
push
mov
dec
mov
cld
sbb
sub
and
mov
popa
xlat
ds
sub
lret
jnp
dec
addr16
push
stos
aas
adc
mov
sbbl
daa
stos
or
pop
ret
cmp
adc
xchg
mov
push
inc
mov
pop
inc
mov
jae
push
xchg
sub
iret
xchg
loop
icebp
mov
popf
outsl
dec
add
cs
sub
mov
mov
aaa
test
jg
jbe
lock
out
or
mov
fnstenv
fldcw
and
xorl
mov
int3
dec
and
jmp
lret
jmp
xlat
push
lret
imul
rol
nop
sub
push
xchg
in
dec
pop
jo
scas
out
xor
mov
sbb
cs
add
outsl
xchg
mov
and
cmp
rcll
pop
lea
into
sub
dec
jmp
cli
pop
dec
ds
fisubl
add
in
fstp
lahf
daa
sub
popa
inc
pop
push
pusha
sbb
out
test
clc
and
or
out
pushf
data16
shll
mov
sub
sub
scas
pop
in
mov
cli
leave
frstor
je
lods
and
lcall
pop
repz
not
or
xchg
sbb
push
cmp
bnd
lods
mov
lcall
mov
inc
dec
jge
cld
add
mov
lods
mov
repnz
or
dec
lea
movsl
add
and
inc
mov
push
in
inc
add
inc
xchg
push
lahf
lahf
xor
inc
insb
adc
sbb
mov
roll
shld
inc
jns
pop
mov
mov
int3
xchg
add
lods
pop
aaa
jg
mov
mov
cmp
mov
test
push
mov
xchg
jbe
mov
rol
mov
xchg
xchg
andb
bound
push
inc
and
xor
add
adc
loop
repnz
rcl
ret
mov
adcb
bound
push
inc
and
xor
add
adc
loop
ret
lret
xor
push
andb
data16
push
dec
and
and
add
cli
out
push
scas
push
cwtl
repnz
adc
lea
xor
std
push
jp
lock
adc
add
sub
mov
mov
mov
shr
sar
mov
adc
add
jo
pusha
rcll
inc
or
scas
cmpb
scas
sar
popf
and
adc
pusha
arpl
inc
addr16
cmp
lock
cwtl
mov
fwait
scas
ljmp
inc
jno
pop
insb
push
js
aam
jae
cmpsl
rorl
pushl
les
dec
jne
orl
mov
iret
outsl
jg
bswap
loope
xchg
dec
jb
push
sub
pop
xor
adc
hlt
mov
hlt
sbb
out
popf
fbstp
iret
and
jp
add
aad
inc
cmpb
ljmp
pop
cmc
lods
iret
sbb
div
jl
mov
shll
jg
fdiv
adc
pushf
pop
fiadds
iret
fbld
mov
xchg
das
inc
and
push
imull
test
mov
out
inc
jnp
mov
adc
pusha
pop
push
mov
pushl
mov
loopne
shr
rclb
insb
imul
xor
inc
sbb
icebp
mov
xchg
jne
insb
sbb
and
adc
ljmp
icebp
lahf
mov
push
pop
and
jg
pop
cmp
pusha
pop
push
outsl
inc
jg
mov
mov
shr
sar
mov
adc
add
jo
pusha
pop
push
outsl
inc
jg
mov
mov
shr
sar
syscall
enter
adc
xor
notl
lods
xchg
iret
add
cmp
mov
test
les
cld
out
adc
nop
lea
mov
push
fwait
sbb
lahf
or
lret
jb
jb
adc
popf
arpl
cltd
icebp
lea
lods
insl
cmp
inc
or
pop
xchg
pop
dec
sbb
mov
jecxz
aam
inc
stos
mov
aas
push
rep
fs
ret
fsubrs
aas
call
jg
mov
jl
push
xchg
dec
sub
dec
xlat
xchg
inc
xor
mov
out
inc
adc
enter
xchg
inc
xchg
fimull
lods
pop
xchg
cmpsb
sbb
std
jb
mov
and
incb
mov
mov
lret
pop
andl
jle
scas
jne
sub
arpl
jnp
ljmp
mov
js
shll
bound
test
imul
jmp
dec
pop
cltd
lar
xchg
popf
sbb
push
ret
lahf
mov
sbb
xchg
repz
adc
and
enter
mov
mov
cmpsb
inc
jle
icebp
adc
lods
outsb
and
int
mov
lahf
add
cld
lahf
lds
pop
stos
mov
jno
test
outsl
push
clc
push
scas
in
lahf
test
cmp
and
adc
cmp
call
cmp
roll
dec
inc
jmp
jbe
push
and
aaa
pop
or
mov
mov
pop
jg
rcrl
ret
lds
add
divb
es
lcall
sarb
ss
lret
or
jns
ret
push
fldt
push
mov
cmpsl
dec
mov
sbb
sub
mov
xchg
dec
fidivrs
ficoms
das
sub
mov
sub
sbb
jge
dec
jb
ror
adc
inc
push
xchg
in
jg
adc
aas
mov
cmp
pop
fildll
in
aam
negb
mov
aas
pop
inc
cs
dec
adcb
and
inc
mov
cmp
ror
xor
fiaddl
adc
mov
add
call
nop
and
sub
andl
or
mov
clc
stos
adc
adc
mov
cltd
mov
push
cltd
inc
rcrb
ljmp
std
jne
iret
cmpb
jg
or
jge
pop
jne
add
mov
fisubrs
and
das
fcoml
dec
mov
shlb
pop
popa
mov
fisttps
fstpl
xor
movsb
rcll
push
inc
inc
pop
fsubs
out
and
sub
dec
rcll
add
mov
add
xchg
dec
enter
xor
mov
sbb
cmp
dec
sub
aad
fstpt
int
lcall
push
adc
jbe
fs
fsubrp
rcr
lahf
dec
push
mov
ds
push
roll
scas
xchg
sub
fwait
hlt
imul
add
rolb
sub
ss
lahf
push
jmp
lods
js
xor
adc
xor
and
daa
add
or
adc
xor
popf
lock
or
cmp
jb
push
sub
lds
jae
rclb
into
push
jle
roll
mov
xor
or
dec
jl
xchg
xchg
push
leave
and
loopne
insb
loope
ss
and
outsb
fadds
nop
pop
cmpsb
and
pusha
rorl
frstor
js
push
mov
lods
xor
movsb
loope
mov
sbb
js
inc
xor
mov
xacquire
and
imul
inc
lcall
cmp
in
inc
jecxz
sub
mov
xchg
pop
cmpsl
add
sub
jo
xor
push
sbb
in
imul
sbb
rorl
dec
repz
adc
movsl
loopne
inc
push
add
push
pop
mov
mov
mov
fs
aaa
dec
fdivl
dec
inc
out
adc
jle
mov
cmp
cmpsb
and
ja
jle
js
stos
fcmovnu
imul
jne
dec
cmp
or
push
mov
in
js
in
sub
data16
sbb
jne
scas
imul
mov
out
cltd
cmp
mov
xchg
xor
jno
mov
in
push
orl
jb
jae
inc
iret
testb
cmp
je
jl
lods
sub
fwait
test
lock
idivb
mov
aaa
mov
cmpl
les
push
sub
stos
or
ja
pop
add
mov
xchg
mov
cmp
cmp
pop
pop
fldenv
sub
or
sub
scas
jle
mov
jp
jge
push
sub
les
in
dec
sbbl
mov
and
push
lret
je
push
test
dec
fidivl
bound
and
xor
xchg
mov
cmc
or
in
inc
xchg
popf
loop
rolb
lret
inc
lods
sub
jns
dec
leave
add
sub
jmp
push
into
xlat
out
ljmp
add
mov
push
jns
push
pusha
xor
sub
bound
repnz
in
mov
test
push
fmuls
ja
outsl
lods
repnz
mov
bndldx
negb
xchg
add
add
out
decl
jg
outsb
lahf
add
jo
push
js
push
mov
ljmp
sar
jae
adc
stos
mov
or
cmc
scas
adc
ljmp
mov
arpl
lret
divb
xchg
lods
push
add
aaa
mov
mov
dec
call
cmc
into
mov
fmulp
mov
fucomp
or
dec
stc
imul
cmc
inc
mov
ret
mov
addr16
push
mov
xor
mov
fisttpl
sub
int3
nop
mov
cwtl
scas
imulb
or
aad
mov
dec
inc
cmpsb
fwait
fwait
mov
test
adc
fldenv
cld
add
ja
push
pop
stos
add
loop
fnsave
sub
mov
inc
inc
jns
adc
in
xchg
mov
aas
sub
or
inc
pusha
xchg
xchg
movzbl
pop
cmp
popa
or
pop
pop
and
dec
adc
mov
and
arpl
aas
push
stc
int3
je
movsb
cmp
into
cmc
cmp
or
std
sub
xor
loopne
fdivrs
je
sbbl
mov
add
mov
call
xor
cld
jno
shlb
js
inc
push
popa
in
jl
mov
insb
pushf
sbb
dec
and
pop
lods
cli
pop
push
subl
out
sbb
or
inc
sbb
addr16
jl
sti
cmp
and
fistl
cmp
pusha
cmpb
mov
insb
decb
popa
lahf
mov
and
mov
andl
shrl
push
jo
lock
leave
test
jmp
cwtl
orb
jnp
nop
insb
add
xor
mov
inc
adc
nop
mov
mov
pusha
test
push
aam
lds
add
fiadds
sbb
sti
daa
ret
sti
mov
pop
push
or
je
aad
cmp
cmp
jno
jb
and
cli
cs
decb
shr
je
movsl
ljmp
mov
xchg
add
outsb
dec
movsl
orb
aad
pusha
pop
rorl
mov
std
push
ret
aad
mov
fs
and
sub
cmpsl
adc
es
aaa
out
mov
push
jl
jo
inc
mov
test
xor
jno
dec
xchg
xchg
inc
push
iret
mull
xor
das
fisubl
cmp
pop
jg
cmp
pop
insl
inc
dec
mov
jb
add
jmp
mov
stc
mov
jo
fildl
or
hlt
and
pop
sub
push
jo
sub
aam
rcrl
data16
ja
xor
cmp
lock
xchg
xor
push
cmpsl
aaa
in
jl
lods
pop
mov
loop
and
sti
xor
inc
xchg
xchg
scas
push
mov
je
cmp
sbb
ds
xchg
inc
loope
aaa
jmp
ljmp
jne,pt
mov
push
leave
idivl
shll
js
in
xchg
data16
pop
ljmp
sub
sub
fdivrl
lret
outsl
sbb
pusha
hlt
lods
push
int3
xor
adc
xchg
mov
std
mov
xor
in
or
mov
shll
xchg
inc
dec
or
mov
cmpsb
ds
mov
xlat
sbb
outsl
arpl
pop
bound
lea
adc
addl
pop
sbb
mov
jbe
push
test
je
popf
shlb
and
inc
sub
loop
fnstsw
movsb
inc
in
sbb
cli
inc
in
dec
aas
scas
and
ss
pop
mull
shll
int3
mov
dec
cmp
lds
call
cmpsl
outsl
sub
push
mov
or
iret
push
lds
scas
lcall
jmp
sbb
cltd
int
mov
lahf
mov
adc
and
and
movsl
lcall
mov
outsb
test
popf
jmp
hlt
test
cmpsl
mov
inc
mov
cmp
xlat
mov
fisttps
cmp
fldenv
testl
in
dec
loopne
mov
or
cmp
mov
mov
mov
popa
cmp
cmp
mov
mov
ljmp
adcb
cli
test
pop
pop
adc
das
mov
and
mov
inc
fmuls
mov
push
lret
inc
inc
sarl
ret
mov
mov
jl
mov
and
aam
testb
iret
enter
insb
ljmp
movb
dec
and
fnstcw
sub
pop
cld
daa
adc
sbb
lock
test
in
sub
cmpsb
mov
test
push
clc
cmp
in
jae
idivb
sbb
scas
lahf
sti
sbb
mov
jbe
jge
inc
xor
xchg
mov
inc
fidivrs
sbb
add
lods
push
mov
fcmovnbe
mov
cmc
daa
mov
push
xchg
mov
inc
pop
loope
sbb
jp
icebp
mull
cmp
iret
or
aaa
cmp
movsb
mov
hlt
int3
fisttpll
xchg
test
movb
jl
and
ss
mov
cmpsl
xchg
xchg
ljmp
sub
shrb
je
stos
inc
fwait
aad
call
jb
adc
fnstsw
test
jg
sti
fwait
in
movsb
pop
cmp
adc
cmpsl
sub
add
pop
and
fcoml
dec
int3
push
popf
lods
dec
sub
bound
lret
icebp
jo
inc
add
lret
mov
push
stc
pop
gs
mov
jmp
mov
inc
jno
sub
or
imul
insl
xlat
or
inc
mov
jge
test
jns
fisttpl
mov
movsl
push
mov
or
fimull
xchg
into
sarb
nop
and
lcall
pop
jbe
adc
sti
fldl
in
dec
popa
lods
sbb
jns
sbb
push
scas
push
push
pop
mov
movsb
xor
stos
mov
sbb
jnp
xchg
mov
int
push
loopne
mov
or
daa
push
imul
mov
adc
leave
and
imull
std
jbe
mov
mov
les
xchg
inc
cmp
sbb
jnp
or
test
fisttpll
js
xchg
lret
aad
imul
inc
and
movsl
jp
push
out
fmull
sub
test
popa
pop
inc
mov
repnz
pop
cmp
cmpsl
adc
mov
lcall
lahf
mov
ret
cwtl
mov
aad
je
lods
lea
les
dec
push
adc
mov
pop
sahf
adc
repz
xchg
jmp
xlat
addr16
push
cwtl
mov
iret
mov
test
outsb
daa
xchg
or
jno
push
push
aas
adc
nop
mov
cmp
xor
mov
stc
mov
rolb
xchg
pop
jae
mov
fnstcw
sbb
add
dec
xor
loop
and
mov
inc
push
lret
mov
cmp
mov
outsb
js
and
fbld
ds
mov
lret
das
xor
sbb
nop
jmp
addl
sbb
int
clc
xchg
popa
shl
loope
or
pop
sbb
inc
ficoms
pusha
push
insb
pusha
xor
dec
xchg
or
add
and
inc
aaa
inc
jecxz
inc
dec
decb
add
mulb
mov
in
mov
push
ret
push
mov
cmp
or
nop
mov
xor
mov
out
movsb
add
mov
fiaddl
hlt
xchg
push
inc
pushw
xchg
notl
loopne
push
hlt
inc
mov
mov
imul
jae
pop
add
jo
xchg
jb
lret
inc
mov
mov
in
addr16
adc
mov
pop
cltd
shlb
inc
add
cltd
pop
xchg
and
ret
xchg
out
sub
jnp
pop
add
or
dec
test
test
shrd
inc
rol
in
xor
movsb
jle
out
fwait
mov
popa
sbb
leave
in
movsl
xor
dec
dec
xor
roll
lcall
jae
inc
mov
dec
nop
arpl
shlb
imul
jnp
mov
jp
mov
mov
or
sub
les
fiadds
push
mov
addr16
add
sbb
lds
push
xlat
mov
iret
fists
inc
in
test
stos
leave
push
lcall
or
add
jp
cmp
test
aas
xchg
ljmp
inc
mov
or
ja
sahf
dec
shl
stos
in
cld
int
movsb
mov
mov
inc
cwtl
and
push
inc
incb
pop
fnstenv
in
aad
inc
mov
xor
std
push
push
xor
fbld
dec
sar
int3
idivl
mov
sarb
mov
cmp
push
inc
es
cltd
mov
jg
xchg
xor
icebp
mov
maskmovq
loopne
lods
inc
icebp
jnp
push
sbb
test
mov
jns
inc
notb
push
mov
enter
popf
jle
jbe
mov
decb
dec
loope
stos
jns
in
inc
xchg
loop
in
xchg
adcl
mov
sub
mov
outsb
test
repnz
fs
repnz
pop
cltd
add
fucom
decl
bound
pusha
mov
enter
cmp
outsb
pop
push
sub
or
cmpsl
nop
and
sub
jo
lds
ret
out
les
cmp
or
fidivrl
scas
push
sub
hlt
sbb
sbb
in
call
mov
lret
push
xchg
fwait
and
sbb
stc
notl
mov
push
mov
xor
in
mov
mov
sub
dec
inc
mov
scas
cmpsb
sbb
mov
sub
xchg
xor
jg
aam
nop
pop
add
es
stos
repz
das
mov
mov
out
ss
out
rep
add
push
or
lds
lods
push
jp
lock
sbb
pop
imul
inc
testl
sbb
cwtl
xor
insl
dec
cmc
dec
fisubl
outsl
scas
adc
inc
dec
add
pop
jnp
inc
mov
cwtl
mov
xor
cmp
mov
gs
cmp
popa
pop
jo
jl
cs
xlat
mov
test
lods
cmp
jg
sub
ret
mov
pushf
cli
fidivl
sbb
mov
daa
lods
movsb
xchg
mov
pop
add
iret
xchg
bound
inc
lock
add
or
adc
or
sub
add
les
pop
test
or
sbb
xorl
hlt
icebp
ret
mov
dec
mov
fcoml
movsl
negb
aas
std
jge
push
cld
cmpsl
adc
loopne
jl
dec
or
add
mov
dec
adcb
adc
mov
push
push
outsb
mov
pop
xor
pusha
imul
pop
les
ficoms
sbb
and
xor
mov
push
mov
sbb
push
sbb
mov
xor
xchg
push
dec
inc
hlt
and
sub
repz
fisubrl
loopne,pt
sub
loopne
cmpsb
movsb
xchg
push
and
cwtl
cli
xchg
fucomi
hlt
push
les
mov
push
repz
mov
fsubs
movl
jae
mov
enter
test
add
sbb
xchg
cmc
pop
fs
push
shld
fwait
xchg
dec
mov
nop
push
shlb
add
jl
mov
mov
jae
xchg
sti
dec
sbb
sub
scas
or
mov
fucomip
xchg
mov
scas
push
fcom
sub
sti
mov
int3
lods
sbb
xchg
push
adc
mov
in
in
sbb
cmc
icebp
daa
push
call
mul
test
cmp
dec
cmp
sbbl
xor
sub
add
jp
add
in
cmp
sbbb
shrb
xchg
inc
shlb
movsl
daa
loope
cmovp
js
or
dec
cmp
lahf
movsb
cmp
dec
dec
lret
call
pop
ss
scas
sbb
test
scas
leave
dec
das
iret
movsb
sahf
scas
in
push
mov
movsl
shlb
int3
pop
lcall
sub
outsl
lods
testl
lret
hlt
jns
inc
dec
fisttps
test
jmp
cmp
lods
xchg
dec
and
int
in
shll
inc
pop
imul
or
aaa
enter
ror
push
aad
div
pop
icebp
cmp
repnz
scas
sub
push
or
adcb
jmp
orb
mov
cli
subl
nop
add
mov
imul
in
ljmp
sbb
xchg
mov
and
mov
mov
out
or
fmull
daa
pushf
or
stos
out
aaa
pop
push
jge
adc
fwait
jecxz
popa
inc
sbb
addr16
push
and
push
loopne
fldl
mov
sub
sub
jge
inc
rolb
xchg
jno
adc
or
or
sub
addb
pusha
pop
dec
and
or
jo
jge
push
fdivrs
push
add
xchg
mov
stos
notl
xor
movsb
mov
add
jp
faddl
mov
mov
or
xchg
daa
adc
popa
scas
add
mov
js
andl
idiv
pushf
mov
ret
sarb
imul
aam
dec
or
movsl
loop
and
or
cmp
fisubs
pop
lods
clc
ljmp
or
loope
stos
fldcw
ret
lret
dec
in
notl
stos
stc
push
jl
push
pusha
jecxz
call
lret
and
mov
lret
inc
cmp
sbb
mov
stos
sti
or
sub
xor
jp
int
sub
mov
rorb
jae
data16
mov
les
test
dec
mov
into
cmp
pop
add
int
xchg
test
dec
test
push
call
pusha
add
mov
repz
jne
pop
xchg
inc
mov
pop
mov
popf
jmp
dec
mov
cmp
sti
jns
shlb
in
lods
mov
inc
push
fiaddl
xor
pop
aam
inc
ds
push
add
pop
mov
in
movdq2q
jae
and
fiaddl
jmp
cmp
loop
mov
stos
inc
pop
and
cmp
add
add
adc
mov
dec
and
repnz
les
or
sub
aam
xlat
test
ljmp
jecxz
lods
dec
xchg
scas
jne
rolb
or
and
sub
mov
das
sahf
add
dec
rorb
xor
loope
shlb
ja
mov
test
and
or
popl
es
mov
push
js
adc
cmp
jne
out
mov
sub
xor
lea
push
sarl
mov
lahf
iret
fimuls
mov
xchg
cmp
lret
ds
mov
inc
add
ja
xor
nop
adc
or
insl
out
and
repnz
add
sbb
mov
ljmp
in
movsl
fistpl
stc
subl
push
ljmp
cmc
adc
cmc
into
pushf
sbb
adc
or
daa
adc
gs
ss
test
cmp
scas
nop
test
cmp
js
inc
sub
push
xchg
imul
push
repz
cli
mov
cmp
mov
xchg
pop
adc
aas
jo
pusha
pop
push
outsl
inc
jg
mov
mov
shr
sar
mov
adc
add
jo
pusha
pop
push
outsl
inc
jg
mov
mov
shr
sar
push
push
nop
push
add
lock
pusha
notl
sarb
mov
mov
ror
sar
mov
adc
add
jo
pusha
pop
push
out
inc
jg
jo
xor
addb
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
mov
xchg
daa
in
dec
fdivl
test
dec
lds
and
pushf
jne
gs
push
int3
inc
fsubl
or
sbb
insb
aad
aad
lds
cmp
or
in
jge
dec
int3
inc
fsubrl
std
sbb
sub
pop
pop
lods
dec
jecxz
jecxz
int
sub
xchg
push
sbb
mov
xor
pop
fstpl
or
cli
fidivrl
outsl
gs
lret
xor
mov
imul
cmp
out
inc
lock
loope
fimuls
ret
lods
int3
or
cmc
insl
sbb
mov
and
inc
inc
and
mull
or
in
pop
mov
shll
test
cwtl
or
arpl
fnstenv
imul
subb
aad
fnstsw
lds
ljmp
cmpsb
mov
sub
sbb
sbb
aad
lds
lods
cmp
adc
in
jne
push
int3
pop
fsubrl
pushf
sbb
insb
std
jl
dec
lds
jo
jno
push
addb
sbb
leave
dec
out
loope
cmc
or
test
pop
lods
inc
mov
sbb
fdiv
push
rorb
les
jle
or
in
out
jns
insl
stc
cmp
int3
inc
fdivl
or
sbb
insb
in
aad
lds
and
pushf
jne
gs
push
int3
inc
fdivl
or
sbb
insb
in
aad
lds
or
stos
jbe,pt
sbb
pop
inc
push
mov
sbb
cwtl
lahf
mov
popf
cmp
int3
out
mov
push
jbe
mov
daa
dec
or
and
ja
cmp
sub
aad
jecxz
test
inc
rcl
inc
loop
or
add
add
adc
ds
mov
mov
sub
bound
clc
shll
or
enter
xorb
clc
in
mov
mov
pop
mulb
mov
daa
int3
in
xlat
push
mov
xchg
push
sbb
leave
add
xor
das
loope
lods
and
pop
les
add
cmp
mov
sbb
imul
scas
mov
xchg
test
jl
lret
mov
inc
gs
out
adc
mov
cmpsl
aas
int
sarl
add
sub
add
cmp
xchg
pushf
inc
pop
js
jecxz
sahf
ret
sar
out
popa
jl
mov
xorb
leave
shrl
sbb
dec
jl
fs
xchg
jne
or
xor
out
daa
mov
std
outsl
aaa
jge
sbb
test
sbb
push
cwtl
sub
sbb
dec
fs
data16
lahf
cmp
psubusw
xchg
mov
sarl
xchg
jmp
cmpsl
insl
dec
and
ret
fcoml
adc
push
test
gs
sbb
push
scas
mov
mov
cmp
fwait
inc
mov
xchg
push
fistps
das
cmp
push
add
and
mov
or
jl
jl
sbb
aaa
arpl
adc
jae
cmp
rclb
mov
ds
nop
mov
jns
cltd
xlat
pop
in
repnz
ds
dec
mov
movsl
and
xchg
dec
xchg
and
pop
inc
sarb
jb
fld
or
xorl
loopne
xchg
rcl
movsl
add
ja
int
movsb
movsl
jns
pop
aas
sti
cmpsl
jle
dec
addl
sbb
or
scas
incl
test
inc
mov
xchg
mov
into
cmpsl
pop
stc
pop
lds
int3
mov
movsl
or
inc
mov
stc
push
and
and
aad
and
xor
bound
lods
clc
push
mov
es
pop
cmp
xchg
sbb
and
inc
popf
pop
cmp
jbe
xchg
movsl
pop
jge
test
xor
aas
shll
jb
push
ja
test
roll
ss
dec
rcl
pop
scas
int
add
adc
sub
mov
cmpsl
cltd
scas
icebp
adc
fwait
xchg
push
lret
ds
jecxz
shl
decb
jle
addr16
fsubrs
xor
mov
adc
jae
arpl
and
push
cmp
imul
mov
in
pop
inc
shll
fimuls
jo
lds
push
jl
aam
loope
jp
lret
jl
jb
outsl
jo
mov
xchg
adc
cmp
stc
push
xchg
stos
out
push
data16
push
lods
mov
inc
lods
call
pop
in
icebp
out
pop
adc
clc
repnz
mov
stos
mov
xor
xor
cmp
xchg
pop
sahf
mov
adcb
mov
dec
mov
out
mov
rclb
adc
xor
inc
mov
pop
enter
xchg
and
adc
scas
das
fildll
sahf
adc
or
lds
repnz
jp
and
pop
push
pusha
mov
inc
test
dec
cmp
aam
mov
cmpsb
jno
lods
fwait
sahf
repnz
insb
test
in
mov
out
jge
jns
pop
ret
js
fdivrp
ss
loope
jno
push
out
xchg
subl
aas
popf
cmpsb
push
pusha
push
or
jg
xchg
sahf
iretw
fwait
cmp
shrb
out
dec
int3
jae
cmp
add
add
add
pushl
jg
pop
lahf
cwtl
cmp
mov
or
push
xchg
mov
adc
sbb
rol
lods
dec
jge
sub
lret
sti
mov
cwtl
mov
sub
mov
aaa
je
mov
mov
or
out
push
dec
and
dec
adc
push
inc
xorl
push
inc
loop
idivl
fnstsw
mov
in
pop
pop
ja
movsb
dec
mov
filds
into
daa
insb
xchg
into
or
sub
mov
cmp
je
lock
lahf
sbb
inc
xchg
cld
cmpsb
mov
test
mov
fxch
cmc
inc
aas
mov
push
rcr
ret
imul
pop
pusha
out
jl
in
std
rcrl
outsl
gs
dec
push
repz
push
adc
mov
out
and
jmp
sbb
out
stos
fidivl
push
dec
ds
in
testb
lahf
call
jno
in
icebp
or
adc
shufps
subl
push
and
cltd
aas
pop
sub
adc
stos
push
ljmp
outsb
jecxz
sahf
outsl
push
icebp
enter
jne,pn
out
jo
clc
mov
or
push
je
mov
xchg
and
and
push
pop
pop
fsqrt
fildll
add
dec
test
out
sbb
pop
clc
adc
push
pusha
cmp
fldt
fmuls
cmp
jle
lock
test
std
sub
and
adc
xchg
mov
pop
fsts
mov
iret
shrb
gs
xchg
aad
mov
int3
sbb
scas
cld
jae
aas
sub
cld
dec
insl
xor
inc
sub
or
fldt
add
lret
pop
shrl
push
rorl
pop
ss
pop
add
ss
xor
dec
lcall
xchg
cmp
cltd
mov
pop
lcall
hlt
push
repz
xchg
sahf
imul
jo
push
negl
mov
jmp
sub
mov
jl
bnd
aad
stos
sub
addr16
push
adc
and
adc
cmp
push
xchg
xchg
iret
cltd
sub
div
push
mov
addr16
rolb
lret
aas
daa
das
pop
cmp
push
mov
test
xchg
je
das
outsl
mov
dec
bound
cmc
mov
inc
push
imul
sbb
cs
andl
fwait
xorl
mov
cmpb
rcll
in
jnp
xlat
sub
shlb
icebp
ss
cmp
es
xchg
jns
lods
into
mov
lock
loopne,pt
pop
cmpsl
mov
test
and
mov
xlat
sbb
dec
dec
cmpsl
clc
xor
je
lock
je
popa
dec
push
jnp
or
sub
out
xchg
xor
sahf
push
cld
or
mov
xor
sbb
inc
fwait
pusha
int
add
in
js
adc
fsubrs
xchg
lods
mov
pop
inc
jg
faddl
xchg
xchg
push
push
ss
out
call
cmpsl
xor
cmp
sarl
xlat
fnstcw
pop
mov
cwtl
xchg
jo
ds
call
dec
shll
xor
mov
call
in
xchg
orb
xlat
sbb
jmp
rorl
dec
out
fidivs
or
out
jns
lea
or
push
gs
lcall
mov
daa
pop
push
in
pop
and
in
out
imull
or
ja
jne
mov
outsl
int
cmpsb
filds
js
cmpsl
push
loopne
daa
imul
fld
insl
repz
shll
shlb
adc
pop
shrl
or
aaa
cmp
int
arpl
popa
insl
inc
inc
push
sbb
aaa
loopne
repz
mov
incl
dec
push
or
xchg
clc
push
sbb
mov
jp
mov
stos
xor
rorb
in
dec
imul
sbb
add
adc
xchg
pushf
adc
push
push
xorb
dec
inc
xchg
arpl
mov
xor
or
jae
ja
test
cltd
mov
adc
xor
xor
dec
cmpsl
mov
xchg
mov
clc
ss
out
adc
stos
movsl
mov
xchg
xchg
ret
inc
js
sbb
and
or
sahf
je
mov
jo
aas
mov
sub
loopne
cmp
xor
adc
ljmp
leave
cmp
ficoml
insb
push
adc
in
std
dec
add
lods
mov
enter
adc
sub
sbb
lret
add
mov
push
sub
push
fdivs
sub
mov
mov
cmp
addl
push
icebp
push
mov
pop
mov
scas
cs
movsb
mov
je
imul
int
ss
out
mov
push
sub
pop
aaa
lods
idivb
inc
int3
cmc
outsb
push
push
fsubr
test
in
ret
and
sbb
pop
in
cld
dec
jle
sub
in
dec
sub
hlt
mov
push
mov
imul
fwait
mov
sub
xor
push
sub
cli
ret
outsb
lret
test
stc
mov
push
std
pop
ret
lcall
dec
push
int3
jg
dec
cmp
pop
mov
or
jne
or
cmpsl
pop
xor
lret
imul
mov
lahf
mov
flds
jecxz
clc
cmp
stc
ljmp
in
cmpsl
leave
fistps
fwait
mov
mov
cmp
inc
stos
negb
fs
imul
inc
outsb
mov
push
andl
repnz
mov
in
add
adc
and
and
xchg
cmp
int
jae
ds
adc
loop
addr16
or
xchg
mov
dec
jle
lds
test
pop
adc
cmp
jns
push
pop
adc
sub
hlt
push
push
test
fisubrs
push
dec
cld
out
icebp
loop
aam
enter
jns
xorb
stc
daa
mov
fnsave
push
push
cmc
aaa
insb
loopne
test
push
inc
jbe
mov
jl
add
lret
cmp
adc
sti
mov
ss
notl
mov
fld
scas
test
ljmp
dec
mov
sahf
scas
popf
pusha
mov
les
lret
mov
push
push
add
mov
mulb
push
sub
ljmp
cltd
fstpl
fisttpl
ss
add
jo
mov
lock
ficompl
sbbl
mov
xchg
lea
cltd
mov
into
lret
sub
dec
test
lahf
dec
popf
rolb
jl
sub
mov
mov
cld
dec
stc
pop
pop
and
testl
xchg
stos
jmp
or
add
repz
or
movsb
inc
test
insl
leave
inc
xchg
push
ret
mov
cmp
and
push
data16
arpl
pusha
adc
ret
popa
and
dec
scas
cmpsl
ljmp
fbld
mov
sub
mov
dec
outsb
cmpsl
fcomi
add
push
push
cmp
sbb
inc
pop
mov
call
mov
xor
mov
rcll
mov
pushf
jg
push
mov
push
xor
cmpsl
insl
in
cwtl
push
jae
dec
xlat
xchg
push
inc
push
fsubl
push
mov
mov
sbb
hlt
cli
sbb
add
and
stc
cmp
fs
sub
aad
push
sub
jb
scas
push
sbb
ret
scas
sbb
arpl
cmp
and
xchg
ss
outsb
mov
xchg
xor
bnd
fldl
test
jno
mov
pop
sahf
incl
inc
lret
rorb
or
fsubrl
jns
mov
cli
dec
cmpsb
mov
inc
dec
push
nop
cwtl
stos
mov
sub
les
mov
mov
mov
xchg
fnsave
cmpsb
sub
paddw
and
push
sahf
ret
cs
out
adc
cli
mov
mov
daa
mov
mov
sub
push
xchg
rcr
and
push
cmp
mov
loop
mov
test
and
rcll
adc
mov
test
pop
popf
inc
fcompl
sub
int3
adc
aaa
das
and
mov
outsb
xchg
imul
jbe
inc
mov
out
mov
insb
mov
mov
pushf
xlat
out
jl
cmc
fsts
add
pop
in
add
mov
adc
mov
lcall
add
inc
lret
iret
int3
lods
cld
cmp
in
cli
ret
pop
sub
sbb
sub
jl
leave
mov
push
ret
sahf
cltd
jns
sub
add
test
les
pop
add
inc
in
sbb
mov
dec
mov
shll
cmp
push
insb
mov
mov
lret
sbb
shr
repnz
popf
das
cs
sub
or
pop
pop
sub
jno
add
push
xor
popa
shrb
pop
sub
sbb
lret
stos
movsb
mov
stos
jne
out
xor
je
push
cld
push
inc
xlat
pop
or
sbb
daa
mov
push
sbb
xchg
insb
jo
scas
shll
aas
pop
pop
imul
inc
imul
stos
sbb
pop
adc
cmpsl
dec
sub
pop
mov
or
cmpsl
je
imul
call
jo
mov
das
xor
fistps
and
outsb
pop
xor
xor
mov
in
mov
lods
sbb
imull
cmp
mov
inc
mulb
or
or
sbbl
jbe
push
in
imul
mov
push
ret
lret
roll
ret
dec
js
adc
sbb
divl
orl
mov
test
lea
or
mov
jno
push
das
rorb
xor
mov
mov
fsts
loop
add
icebp
mov
popl
jno
outsl
cmc
sub
inc
mov
in
sbb
fs
xor
adc
scas
mov
mov
and
out
push
pop
insl
aad
jo
sub
mov
iret
mov
dec
and
mov
insb
sbb
xlat
or
pop
jg
cmpsb
dec
mov
mov
or
sbb
je
dec
bound
orl
xchg
push
cmp
in
unpcklps
jp
mov
xchg
jp
out
mov
xchg
out
mov
out
loopne
mov
stos
leave
or
icebp
std
mov
jle
fdivl
cmp
adc
mov
icebp
lret
and
sbb
add
mov
leave
fisttps
xchg
inc
jl
sbb
mov
or
push
negl
push
ljmp
cmp
dec
negb
sbb
icebp
imulb
mov
push
mov
sbb
xchg
pop
or
xchg
popf
cltd
clc
int
out
jno
push
mov
jb
push
xchg
push
subb
rcrl
cmc
dec
push
test
roll
mov
add
sub
sbb
insl
xor
inc
push
xor
stc
mov
add
stos
mov
jb
rol
pop
lret
mov
mov
xchg
mov
xchg
xchg
xor
dec
push
xchg
fnstenv
fucomi
inc
pop
inc
jno
and
daa
mov
sahf
sbb
hlt
inc
divps
ret
dec
fstl
test
add
lods
daa
and
xlat
mov
shrl
mov
jb
test
outsl
pop
ds
sar
xchg
inc
mov
loopne
dec
pop
int
shlb
or
inc
lret
stc
adc
pop
cs
retw
add
ljmp
rorb
lds
mov
cmc
iret
mov
mov
mov
pusha
out
jg
stc
data16
shlb
adc
or
jno
pop
xchg
sub
jmp
mov
fwait
cmp
std
fnstcw
loope
sahf
inc
inc
add
jnp
les
int
and
sub
mov
cmp
sbbb
mov
push
jno
pop
dec
pop
inc
sbb
punpckldq
adc
cmp
dec
mov
xor
pop
mov
out
mov
int
out
cmp
test
movsb
loopne
sbb
popl
sbb
movsb
cwtl
movsb
mov
pop
pop
mov
call
mov
aad
cmc
std
xchg
sbb
lret
inc
xchg
jne
inc
sahf
mov
mov
sbb
or
adc
dec
std
xor
mov
cmp
pop
jmp
cmp
inc
test
push
pop
rorb
iret
jl
cwtl
fisubrl
pop
inc
hlt
pop
push
mov
repz
mov
jp
cmp
clc
xor
cmp
int
jle
adc
andl
adc
gs
jne
pop
xchg
sub
js
aad
lahf
xor
lock
cmp
or
cmp
lods
mov
in
jb
inc
dec
fdivrs
test
inc
mov
xchg
popf
jge
cmpsb
sub
insl
or
push
inc
push
adc
jmp
test
adc
pop
inc
jg
test
push
stc
movsbl
push
jg
mov
outsb
movl
icebp
lahf
pop
mov
testb
sub
mov
or
lret
add
test
int3
hlt
rorb
or
lds
mov
fidivrs
adc
faddl
dec
push
adc
ret
jle
popf
clc
rclb
cmp
sti
jo
outsb
pop
sbb
arpl
pop
in
mov
and
or
xorl
cmp
outsb
out
or
into
pop
jge
and
add
add
inc
push
insb
adc
xchg
cmp
sub
pop
xchg
jbe
fstpl
sbb
es
add
mov
adc
call
outsb
or
rclb
mov
push
pop
inc
adc
push
mov
ret
mov
and
lods
js
push
bound
outsl
lods
imul
pop
sub
fdiv
aaa
mov
mov
aaa
pushf
clc
xor
imul
cmp
dec
mov
xchg
mov
adc
lahf
sub
ds
stc
and
int
jmp
mov
mov
adc
add
mov
lods
add
idiv
js
arpl
cli
test
les
inc
jmp
sub
add
lds
pop
mov
iret
faddp
xor
insl
dec
cmp
push
lods
push
inc
outsl
lock
loop
add
sti
mov
xor
jne
xor
dec
inc
dec
push
xchg
jecxz
out
inc
xchg
push
movsb
mov
sbb
xchg
fldcw
out
pop
roll
hlt
in
adc
mov
lcall
scas
jecxz
xor
mov
jno
jl
xchg
cmp
and
jne
dec
xor
inc
aad
movsb
hlt
or
lea
jl
icebp
xor
dec
xchg
and
add
imulb
jne
fnstenv
outsl
outsl
scas
mov
into
xor
outsl
xor
les
jge
outsl
adc
inc
fsts
lret
and
pop
or
sbb
mov
push
jnp
xchg
inc
mov
sub
push
cwtl
push
ss
and
jmp
jge
sbb
rorb
cmc
fistps
std
push
out
sbb
push
mov
pop
xor
inc
inc
add
jb
dec
sar
xchg
es
ss
repz
out
jns
xor
xor
repnz
std
fsts
imul
mov
sahf
rcrl
cmp
adc
and
aam
nop
dec
loope
jo
sub
inc
and
jnp
cmp
ss
inc
sahf
push
or
inc
int3
adc
clc
mov
addb
lahf
hlt
lret
sub
add
xor
insb
test
rolb
dec
repnz
out
sbb
data16
dec
shlb
cwtl
add
inc
dec
push
cmp
ljmp
lods
fcmovnu
pop
xchg
std
fnstenv
pop
mov
mov
jns
fwait
push
fldenv
lret
jo
dec
insb
out
cmpsl
mov
xchg
pop
dec
sar
imulb
push
fildl
gs
out
scas
ljmp
add
pop
cli
fstpt
outsb
jmp
fldl
cltd
jo
outsl
pop
and
mov
xchg
mov
fwait
popa
jle,pt
stos
push
cmp
je
push
fld
jmp
mov
pop
inc
movsb
push
pop
mov
ret
push
jmp
jnp
sahf
jne
loope
imul
xchg
jecxz
stos
pop
js
rcl
mov
jmp
idiv
adc
gs
push
xlat
movsl
cmpl
mov
push
mov
mov
rcll
repz
or
or
inc
add
cmpsb
add
ss
sbb
fisubrl
mov
add
repz
movsb
addr16
push
les
jmp
test
enter
add
inc
addl
ret
fistl
ret
cmp
out
inc
ljmp
in
call
out
imull
cwtl
cwtl
ret
mov
jecxz
iret
jmp
incl
iret
mov
stc
mov
mov
jg
sbb
mov
out
shrl
xchg
and
outsb
dec
outsl
mov
cs
cmp
xchg
das
cmp
pushf
jne
gs
push
int3
inc
fdivl
or
sbb
insb
in
aad
lds
and
pushf
jne
gs
push
int3
inc
fdivl
or
sbb
insb
in
aad
lds
and
pushf
jne
gs
int3
inc
fdivl
or
sbb
insb
in
aad
pop
xor
mov
cld
aad
sub
xchg
aas
or
imul
cmp
outsl
mov
insb
call
mov
fildll
pop
fisttps
push
pop
mov
jg
psubusb
enter
lds
fisttps
mov
cmp
dec
scas
js
push
ja
addr16
fadds
enter
call
sbbl
mov
sbb
pop
clc
and
adc
pop
in
xor
daa
hlt
arpl
arpl
shll
cmpsl
xchg
cwtl
outsl
shrb
enter
fbstp
bound
or
notl
repnz
inc
shlb
ret
dec
es
outsl
inc
xchg
push
push
cmp
sbb
or
cmpsl
fidivl
js
lahf
adc
hlt
sub
or
lock
or
in
imul
mov
test
or
mov
movsl
pop
push
fbld
aas
test
and
and
adc
scas
rcrl
push
repnz
iret
jb
popa
xor
and
dec
xlat
dec
dec
sbb
mov
mov
push
enter
call
idivl
out
xchg
pop
xchg
js
cs
cmp
or
sbb
imul
pushf
mov
imul
lret
or
or
jge
jnp
jno
inc
scas
jp
int
fistpll
pop
mov
cmp
mov
fisttpl
fnstsw
ja
pop
enter
call
out
cmp
sub
js
push
outsl
mov
pop
enter
call
out
cmp
sub
js
push
xlat
pop
outsl
and
addr16
or
xor
das
and
lret
add
inc
rclb
mov
mov
out
mov
lret
stos
mov
mov
jecxz
xor
and
xor
mov
jecxz
push
lret
push
sub
jmp
movsl
and
fsubrs
loopne
lock
fisttpll
pop
xor
xor
jp
mov
and
mov
bndstx
add
fld
mov
inc
push
push
sti
repz
out
movsl
fisubrs
imul
adc
popf
xchg
sub
sub
or
out
jo
pop
cmp
and
pop
ret
negl
fimuls
mov
fsubs
push
es
aaa
jb
push
nop
leave
es
mov
clc
mov
xchg
scas
push
add
rcr
add
mov
mov
sub
shrl
pusha
iret
mov
mov
sub
pop
popaw
test
mov
pop
jmp
push
shr
mov
clc
cwtl
rcrl
ret
mov
mov
cmp
jp
mov
cmp
mov
mov
pop
push
pop
mov
sub
popa
jo
mov
imul
into
jg
out
mov
dec
pop
inc
lea
cmp
scas
inc
das
push
enter
pop
mov
test
add
sub
sub
mov
je
push
int3
mov
in
jns
mov
scas
pop
jmp
rorb
subl
jnp
outsb
mov
das
inc
mov
sub
addr16
js
mov
repz
cmc
inc
pop
push
add
jo
dec
xchg
cmp
xchg
or
ds
fdivrl
mov
not
inc
rol
mov
bound
mov
lret
jecxz
pushf
sub
int3
sub
ret
mov
in
loop
xor
gs
jo
movsl
test
cmp
rcr
lock
mov
pop
loop
dec
in
sbb
out
in
aad
mov
fistl
divl
cli
jnp
jb
icebp
xchg
mov
ds
mov
imul
aas
adc
jno
mov
leave
jge
dec
xchg
dec
scas
dec
loope
cli
inc
xor
xchg
stos
das
inc
pop
lods
xchg
popa
test
mov
aad
iret
jge
push
imul
or
sub
cmp
fmull
mov
xor
hlt
inc
and
stos
jno
ss
sahf
sub
incl
aas
stc
popf
dec
xor
xlat
lret
and
cli
in
and
sbb
mov
sbb
orl
add
repz
and
inc
iret
cwtl
xor
add
add
dec
pop
sti
in
mov
jg
jge
push
stc
sub
adc
xchg
mov
mov
ja
movsb
sub
inc
test
fs
xor
inc
jb
rolb
push
xor
imul
mov
sbb
sub
or
in
push
ljmp
push
pusha
shlb
loop
call
fcomp
jp
shll
inc
or
out
in
mov
movsb
lods
sbb
adc
dec
xchg
pop
lock
mov
int
out
xchg
jge
aad
fnsave
dec
andb
ss
mov
movaps
fcomps
mov
ljmp
incl
adc
jb
outsb
hlt
pusha
pop
insb
das
daa
lahf
push
les
dec
push
outsb
inc
int3
scas
fistpll
lcall
push
mov
ja
movsl
mov
test
mov
pop
pop
sub
jle
iret
imul
mov
xchg
inc
xlat
addl
pusha
js
fadd
dec
cmpb
xchg
add
fwait
je
lds
loope
xor
mov
sub
out
adc
test
das
hlt
out
scas
xchg
xchg
fstl
add
mov
add
lcall
inc
and
pop
pushf
jae
arpl
aad
repz
sbb
mov
aam
cmovg
data16
dec
mov
mov
cwtl
push
xchg
into
or
or
inc
into
sti
add
imul
inc
push
jecxz
xor
fidivs
insl
mov
inc
hlt
pop
xchg
cli
sahf
push
nop
add
clc
or
test
xor
leave
test
cmp
pop
fwait
mov
sbb
stos
gs
sub
mov
xchg
popa
inc
mov
lahf
xor
inc
imul
ljmp
xchg
ljmp
idiv
loopne
push
adc
pusha
les
jp
cmp
xchg
sbb
iret
xchg
jnp
push
arpl
xlat
insb
inc
adc
inc
ja
adc
sbbl
mov
pop
pop
out
sub
cmp
daa
repnz
idiv
jmp
rcrb
nop
imul
out
cli
push
mov
and
int3
jne
js
call
insb
lahf
or
pop
fldt
loopne
int
rcl
sbb
movsl
addr16
test
out
int
adc
push
mov
add
je
dec
inc
jmp
sbb
jnp
into
bound
jo
inc
dec
push
fldl
mov
psllw
lock
pop
jmp
add
fisubrl
xchg
bound
push
xchg
mov
loop
mov
iret
daa
orb
mov
enter
scas
and
add
push
addr16
test
lods
out
insb
int
fstp
outsl
pop
jg
adc
xchg
repnz
pop
push
xor
fisttpll
xor
imul
imul
jmp
add
mov
add
inc
push
ja,pn
add
in
lods
mov
xor
inc
and
and
aas
or
cmpsb
inc
xchg
mov
jno
loope
jecxz
cmc
rolb
mov
pop
push
add
cmpsb
xor
jg
mov
xchg
in
cltd
jmp
mov
sbb
pop
cltd
and
mov
jno
adc
in
loope
xor
nop
cmp
sub
pop
int3
fs
xor
sbb
mov
test
mov
dec
or
mov
fidivl
out
insb
sbb
sbb
jnp
push
or
fiaddl
mov
int3
cvtpi2pd
orb
icebp
jbe
jge
jg
sti
cmp
hlt
pop
add
sub
adc
ja
pop
lret
ret
mov
ret
scas
rcr
addr16
or
in
repnz
jge
popa
xchg
lahf
ror
mov
popf
jne
mov
data16
das
popa
lods
repnz
mov
lds
mov
in
int3
dec
mov
in
xor
sbb
nop
ss
mov
and
push
test
xor
jbe
fdivp
push
outsl
rorb
mov
popf
push
scas
jbe
or
xor
push
dec
and
stc
push
addr16
fucomi
pusha
mov
jne
push
out
roll
or
xchg
jno
sub
mov
pop
in
mov
jno
sbb
int3
outsl
mov
int
jbe
imul
dec
stc
mov
mov
shlb
dec
leave
or
mov
xlat
xchg
xchg
test
inc
repnz
bound
cmp
add
push
add
sub
pop
imul
mov
pop
insl
inc
jmp
shr
mov
idivb
je
or
clc
jne
add
push
mov
mov
pushf
stc
in
xor
lret
jbe
daa
mov
mov
xchg
sbb
aas
or
push
sbb
ret
aaa
les
mov
pop
jb
push
in
mov
addb
cmpsb
out
push
inc
int
andl
inc
or
ret
dec
rcl
mov
xchg
and
enter
xchg
add
hlt
mov
divl
mov
outsb
cmpsb
faddl
dec
add
mov
sub
stos
push
cmp
mov
or
mov
roll
pop
loop
sbb
adc
sti
addr16
inc
lea
in
jmp
cld
enter
out
and
sub
xchg
popf
int
cmp
and
sti
xchg
mov
dec
pop
movsb
lret
cld
enter
jge
sbb
addr16
lds
mov
punpcklwd
fsubs
adc
out
mov
shr
jno
and
xor
cmpsb
pop
jecxz
stos
insl
push
ja
sbb
push
jb
mov
daa
and
push
push
lds
xchg
mov
or
dec
mov
sbb
test
lea
xorb
mov
mov
outsb
pop
in
jo
inc
ss
rcrl
push
pusha
scas
and
xchg
sub
xor
push
pop
out
in
mov
dec
dec
inc
mov
ror
push
sbb
faddl
pop
dec
popa
cwtl
mov
dec
xchg
stos
pop
mov
adc
mov
shrl
mov
iret
xchg
dec
mov
stos
lret
imul
xchg
xor
or
je
mov
cmpsl
sti
cmp
mov
js
sahf
mov
out
mov
outsb
sahf
loope
and
pop
fisubl
dec
ss
jo
in
lods
int
pop
clc
jmp
push
jg
stos
fisttpl
and
loop
xchg
in
bound
mov
gs
ss
xchg
in
nop
pop
cmp
cmp
lret
movups
inc
push
in
lcall
pop
pop
xchg
sub
jmp
negb
mov
sub
pop
ds
shr
mov
and
les
mov
call
or
loop
xchg
jae
mov
adc
push
rcrl
push
xchg
push
jl
jne
mov
mov
add
out
insb
or
sbb
imul
stos
test
shlb
fcomps
push
hlt
ret
out
push
loop
sti
push
pop
movsl
pop
xor
pop
jb
mov
in
lds
pop
sbb
sub
push
sub
mov
stos
mov
push
xor
push
je
stos
mov
or
dec
sahf
shrl
fistl
jne
flds
dec
popf
jl
scas
dec
pop
repnz
sub
cwtl
mov
jle
inc
adc
aad
outsb
icebp
ljmp
jp
and
clc
std
add
and
push
cmpl
mov
jmp
in
cs
jl
es
or
cmpsb
sbb
call
mov
xchg
test
in
out
das
rcrl
js
jle
and
paddq
push
and
sarb
cld
loopne
mov
push
incb
rolb
roll
jg
inc
loop
xchg
jle
add
mov
cmp
out
imul
fdivrl
xor
sahf
mov
mov
cmp
cmp
mov
or
bound
cmpb
sub
mov
scas
aad
lret
sub
scas
xor
xchg
enter
rcrl
les
lcall
or
lods
ja
jns
stos
mov
mov
dec
xchg
cmc
shrb
mov
lods
nop
cwtl
and
sbb
into
push
sbb
test
jle
enter
cwtl
mov
add
xchg
cmpsl
out
ljmp
std
jg
fsubrp
rcll
int3
aas
cltd
pop
imul
int3
pop
stos
cmpl
cmp
fwait
pop
or
sub
jnp
or
mov
sbb
out
and
dec
test
imull
int3
sub
mov
enter
push
scas
in
mov
cmp
push
mov
popf
push
js
mov
dec
lcall
test
gs
test
insb
pop
dec
push
js
movsl
xchg
ja
ds
hlt
fcompl
push
insl
sbb
arpl
mov
jo
pusha
out
inc
test
ret
popf
inc
mov
or
gs
add
adc
mov
rol
inc
decb
push
mov
jle
out
fs
fldcw
test
roll
movsl
ret
lret
mov
inc
lods
sbbl
mov
int3
das
pop
xor
dec
decb
repz
jmp
inc
and
addr16
clc
mov
ret
pop
into
or
xor
shll
jbe
adc
jg
dec
adc
loope
pop
jp
cmp
mov
lret
fsubrs
jp
insl
movsl
cmc
jg
adc
ss
inc
popa
sub
dec
or
mov
xchg
lret
push
push
push
pop
int
mov
pop
inc
sub
icebp
jns
or
sub
mov
outsb
add
mov
cltd
jecxz
cmpsb
dec
add
sahf
jbe
xor
or
push
inc
outsl
insb
invd
movsl
imul
das
mov
enter
adc
dec
ficoml
dec
dec
mov
daa
hlt
fmull
daa
xor
add
xchg
xchg
dec
pushf
fstl
xor
dec
lods
fldt
test
pop
mov
iret
push
fcmove
fstpt
popa
sbb
mov
jb
pop
arpl
bnd
xchg
jmp
and
scas
in
cli
or
or
adc
pop
loopne
inc
frndint
out
add
pusha
or
ss
push
sti
push
shrb
inc
mov
jp
daa
jge
out
lds
mov
or
sub
mov
jo
xchg
jbe
sub
push
sub
hlt
sbb
jno
jmp
jne
addr16
imul
fwait
movq
cmp
mov
data16
aaa
add
or
loopne
lahf
jbe
fdivl
sub
mov
inc
or
sub
or
sub
testl
add
ret
popf
cmp
call
dec
add
fists
sbb
repnz
sti
sbb
pop
and
mov
sub
sbb
sub
cmp
push
inc
fsubrs
loopne
add
negl
cmp
cmp
xorl
mov
sbb
push
ss
push
jne
mulb
adc
pop
jle
mov
pop
imul
lcall
pop
in
jo
inc
adc
push
jp
mov
inc
cmp
sub
ret
sub
imul
pop
or
inc
xchg
pushf
call
pop
test
sti
xchg
sub
lock
in
je
loope
out
test
adc
lret
repnz
pop
xchg
pop
flds
stos
rcrl
pop
push
je
pop
pop
dec
call
inc
or
pop
push
push
pop
xor
scas
xchg
popf
push
cltd
je
mov
or
call
add
test
ja
push
addr16
inc
xchg
shl
dec
cmpsl
push
popf
inc
insb
leave
loopne
mov
xor
sbb
cwtl
ljmp
mov
scas
andb
xchg
jae
add
sahf
add
lds
xor
inc
mov
push
inc
adc
xchg
mov
dec
cmp
out
cmp
sti
add
pusha
mov
or
or
fisubrs
or
mov
jge
aaa
xor
sub
dec
sub
and
inc
inc
sub
cltd
cltd
decb
xor
push
cmc
mov
in
fisubrs
stc
push
insb
out
push
sbb
sub
adc
fstl
or
mov
je
stos
cmpsb
mov
gs
sbb
and
pop
adc
aam
mov
dec
outsl
sahf
aaa
lds
lret
cmp
aad
xchg
arpl
fists
in
sub
cmp
add
and
out
jne
pop
mov
mov
iret
je
and
jnp
push
inc
add
call
icebp
mov
jno
or
ret
and
push
dec
jle
xchg
repnz
push
or
add
call
dec
les
into
lea
cltd
repz
cmp
je
cmp
xor
lret
je
pop
jl
aad
lea
fdivrp
sub
lock
cmp
or
ds
nop
xchg
out
out
push
lea
dec
stos
lds
cltd
in
adc
cmc
xchg
std
imul
insb
mov
adc
imul
js
movsb
push
sub
mov
add
mov
out
imul
int3
pop
aad
xchg
mov
and
shl
stos
frstor
xor
ret
jns
in
popf
sub
xchg
adc
ja
outsb
adc
sarl
inc
mov
es
pop
insb
test
jo
ficoms
aas
hlt
sub
cmp
push
in
cmp
decl
add
ljmp
mov
cld
imul
fisubl
pop
mov
xchg
inc
adc
repz
cli
mov
xorl
iret
pop
stos
cmp
jne
ss
xchg
adc
js
xchg
lock
pusha
loop
dec
inc
ja
test
push
out
popf
outsb
lret
and
push
pop
mov
pop
or
repz
scas
dec
add
aas
int
aas
int3
dec
sahf
add
in
fists
jno
inc
mov
push
xor
jae
imul
int3
daa
cmpsl
dec
cwtl
or
lret
inc
inc
or
test
icebp
mov
dec
jge
je
sbb
add
mov
push
sbb
test
lret
mov
inc
xchg
stc
add
xchg
insl
outsl
push
sbb
in
push
ds
sbb
or
cwtl
imul
js
inc
cmp
fwait
lods
hlt
int3
lock
jle
push
sti
js
mov
sbb
jb
dec
inc
cs
scas
int
and
pop
sti
mov
xor
or
mov
xor
mov
cmc
aas
pop
stos
push
fisttps
pop
mov
insl
sub
pop
and
fsub
mov
sub
stos
mov
push
mov
mov
dec
mov
pop
push
lret
cmp
cmp
or
xchg
mov
xor
cltd
push
into
rol
aad
dec
adc
or
shlb
fstpt
idivl
xchg
in
or
in
cli
push
in
jno
inc
rolb
or
jg
fistps
lds
adc
mov
lahf
cmp
aaa
fs
js
push
jo
das
jg
jecxz
xorb
cmp
sub
push
pushf
in
lcall
shl
ss
xor
lods
inc
mov
jecxz
rcr
mov
in
int
into
out
sbb
mov
fsts
xchg
leave
rcll
test
imul
insl
mov
xor
scas
sbb
les
lods
fsubrs
jp
cmc
pop
ret
das
jge
xor
int3
jns
enter
sub
loopne
std
mov
arpl
xor
pusha
mov
mov
push
xlat
push
les
out
test
lea
ss
cmp
lcall
fnstcw
push
fwait
popf
cmpsl
gs
decl
adc
adc
inc
adc
add
fdivrs
mov
pop
imul
cmp
jae
push
cmp
cmp
mov
inc
leave
sbb
push
cmpsl
mov
loope
js
adc
pop
jns
out
mov
enter
out
imulb
shlb
or
sbb
adc
mul
pop
and
adc
sbb
xchg
push
xor
mov
add
test
sub
rorl
pushf
arpl
mov
sub
fwait
push
and
jnp
data16
mulb
jmp
jmp
add
pop
filds
scas
xchg
je
cmp
push
push
cltd
jl
fstpt
into
stos
or
push
sub
out
and
scas
imul
mov
mov
loop
sbb
sahf
sbb
pop
mov
inc
mov
add
pop
ds
lods
out
sbb
jae
test
es
imul
pop
mov
mov
inc
adc
subb
mov
fwait
push
xchg
test
mov
inc
adc
pop
in
repnz
mov
mov
out
mov
push
outsl
lret
aad
lods
fidivrl
inc
sbb
jp
push
aad
int3
sbb
inc
dec
pop
in
adc
jecxz
out
cmpsb
push
cli
push
icebp
jmp
scas
iret
jae
pop
out
push
repz
inc
stos
inc
inc
pop
xor
aas
jo
fs
aam
ficompl
xchg
test
xchg
mov
movsl
stos
js
das
sub
clc
stos
fs
sarl
mov
or
cmpsb
es
cmpsl
xorb
pusha
jp
lods
scas
cmpb
sub
js
jmp
fmulp
pop
adc
push
inc
ds
adc
and
jmp
xchg
inc
dec
mov
rorl
sub
in
pop
adc
int
stos
subl
arpl
lock
push
sahf
mov
sub
hlt
outsb
xchg
cs
sarb
repnz
xor
int
mov
jnp
jge
dec
jge
ja
dec
pushf
std
push
add
movsl
cld
shrl
outsb
outsl
mov
jno
cmc
lods
jp
xor
jnp
std
les
pop
fisttpll
sbb
sbb
out
fwait
mov
jg
psubusb
enter
call
out
cmp
sub
js
push
outsl
mov
pop
enter
call
out
cmp
sub
js
push
outsl
mov
pop
enter
call
jmp
ljmp
pop
fwait
dec
scas
js
push
pop
mov
pop
enter
sub
sbb
mov
clc
rclb
mov
xchg
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
les
daa
out
loop
cli
jg
ret
fsubl
add
add
add
add
pop
fiaddl
addl
add
add
add
xor
add
add
add
add
mov
add
add
add
push
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
xor
flds
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
add
lret
add
add
add
add
add
adc
test
cld
add
add
nop
add
add
add
add
mov
filds
cmp
stos
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
xor
test
push
add
add
add
roll
cld
add
insl
add
add
add
add
add
add
add
add
xchg
add
add
add
add
fiaddl
xchg
add
add
add
add
popa
add
add
cmp
inc
add
test
cmp
sahf
add
add
add
add
add
add
add
scas
add
add
add
add
xor
push
add
das
add
add
dec
add
add
add
add
inc
add
mov
gs
add
add
mov
mov
add
add
add
sub
jb
and
sbb
xor
insl
add
add
scas
add
add
add
add
xchg
add
add
add
xor
add
add
add
add
cmp
add
adc
push
add
add
add
jnp
xchg
add
addb
add
add
push
add
gs
add
inc
add
add
add
add
imul
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
cmp
add
push
add
add
add
add
sub
mov
add
add
add
ljmp
add
add
add
add
fiaddl
xchg
add
add
add
pop
add
add
add
add
add
cmp
add
add
add
cmp
jb
int
cmp
or
add
add
add
sbb
add
xor
dec
add
add
add
add
add
insb
add
xor
aaa
add
add
xor
int
or
jl
enter
pop
add
add
sbb
add
add
add
mov
movsb
add
add
add
add
add
xchg
add
pop
add
add
add
add
xor
add
cwtl
add
add
add
sbb
add
add
jae
dec
add
add
add
adc
jbe
xchg
add
add
add
push
outsl
jne
and
xchg
lods
les
jno
adc
dec
push
je
leave
dec
daa
lcall
adc
push
push
stc
repnz
sahf
hlt
outsl
mov
stos
lahf
mov
fldcw
or
movsb
pusha
in
popf
imul
and
je
test
scas
pop
lods
sub
adc
inc
jno
xchg
and
push
mov
push
pop
in
popl
aam
movl
adc
jnp
lea
icebp
fmuls
cmp
sub
jno
sub
and
sbb
in
xchg
ds
xchg
insb
jg
cmp
mov
cltd
outsb
xlat
mov
jns
dec
cs
xchg
vmwrite
in
mov
push
stos
jb
xor
or
inc
push
jecxz
fxch
pop
inc
mov
pushf
into
std
ret
xchg
add
pop
loop
xchg
in
scas
mov
lods
mov
push
cmpsb
dec
stos
outsl
cmp
inc
stc
inc
nop
bound
decb
add
jbe
lret
in
mov
ljmp
stos
cmc
jnp
in
jecxz
xchg
xchg
fcoml
loope
sub
adc
dec
lds
push
test
lds
jae
fldenv
mov
add
dec
lock
jp
xchg
pop
shl
sbbl
mov
out
addl
and
insb
es
movsl
je
bound
pop
shlb
outsl
pop
cmp
pop
inc
ss
inc
es
push
inc
ret
jns
dec
ss
push
fistps
repnz
out
sbb
cmp
adc
lahf
js
mov
scas
dec
sbb
jecxz
je
mov
aaa
adc
pop
cmp
arpl
add
int3
sahf
int3
add
loopne
in
and
sub
xor
cwtl
ss
inc
xchg
mov
jno
cld
and
mov
sti
stc
call
xchg
les
rclb
push
lcall
cmpsb
popa
pop
inc
into
ret
push
int3
jnp
jle
out
das
ja
imulb
out
push
xchg
shll
dec
jmp
push
popa
cmpb
xchg
in
adcb
out
fstl
fidivl
mov
jge
movsl
inc
repnz
lods
popf
loopne
cmp
fisttpl
jg
sub
es
mov
pop
mov
xorl
test
inc
sub
mov
pop
out
lock
or
push
out
nop
push
xchg
dec
mov
fidivl
push
sub
push
pusha
ljmp
and
daa
js
imul
into
dec
mov
data16
or
sbb
inc
ficompl
adc
sbb
das
push
das
les
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
