call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
addl
fists
sub
rolb
ret
adc
and
xor
popa
mov
xchg
jb
bound
xor
and
rolb
ret
and
xor
adcb
mov
xchg
jb
bound
xor
and
sarb
loope
sahf
push
loop
xchg
adc
xor
or
lds
pop
fildl
mov
cmp
ficoml
mov
or
data16
inc
mov
ljmp
cs
dec
in
cmp
cs
in
das
mov
sbb
popa
das
lea
xchg
dec
inc
jne
pop
fstpl
out
jo
rcll
ret
xlat
sahf
mov
nop
sbb
pop
shll
inc
add
fisttps
add
lahf
xchg
push
lods
sbb
insl
xchg
ja
dec
dec
roll
mov
cmpsl
cmp
ja
lahf
add
mov
loop
mov
imul
sub
je
xor
or
mov
and
addl
adc
add
xor
and
rolb
ret
and
xor
popa
mov
inc
sbb
or
adc
and
repnz
lcall
jecxz
adc
shlb
pop
mov
inc
decl
jo
mov
xchg
jge
ja
pop
xchg
cs
ficoms
pop
aaa
roll
sbb
lods
add
xor
and
rolb
ret
and
xor
popa
mov
xchg
jb
bound
xor
and
rolb
ret
and
xor
popa
mov
test
push
dec
pusha
in
add
fnstenv
repz
jp
ja
outsl
repz
test
mov
aas
mov
cmp
sbb
adc
or
or
xchg
cmp
sbb
imul
xor
xchg
sbb
inc
jnp
add
inc
jge
xor
sub
test
cltd
arpl
in
mov
and
inc
inc
int
sub
and
jl
popf
les
int
xlat
inc
push
popf
mov
mov
movsl
repz
js
cmp
jnp
or
jg
outsb
mov
xchg
outsl
sbb
push
test
push
loopne
das
dec
inc
std
loop
pushl
clc
sub
mov
icebp
data16
mov
std
lea
add
xor
cli
stos
push
stc
mov
cs
push
cmpsl
jae
jno
pop
fs
call
jge
es
imul
arpl
mov
enter
jl
dec
add
scas
mov
sbb
or
mov
ljmp
push
lret
je
xchg
movsb
arpl
inc
and
movsb
mov
sti
int
ds
mov
je
sub
jle
mov
les
ret
pop
fnsave
pop
sbb
ds
push
adc
cmp
test
cmp
fcmovb
add
jge
adc
inc
popw
pop
cmpl
lods
jp
repnz
aaa
cmp
jns
jmp
test
mov
cmp
cmp
into
je
pop
adc
mov
sbb
xor
xchg
mov
popf
lahf
push
sub
pusha
mov
cltd
cmp
aaa
jne
notb
dec
push
pop
inc
cmpsb
nop
sub
mov
mov
test
cld
mov
shll
ror
jle
jb
in
cwtd
call
jb
mov
enter
repnz
cmpsb
cmc
mov
lret
inc
repnz
xchg
push
faddl
test
inc
test
pop
mov
xor
cmpsl
ss
stos
in
push
xor
insb
sub
out
test
and
into
xchg
shr
rorl
scas
push
xchg
mov
dec
cltd
rorb
ds
add
dec
mov
aad
inc
movsb
adc
lock
add
jbe
mov
lea
pop
bound
jb
ja
lcall
imul
dec
cwtl
sub
mov
xor
mov
ret
imul
fldl
addb
lods
mov
cli
mov
pop
push
and
lret
cmp
mov
mov
xor
mov
lods
xorl
xchg
and
xor
jb
xor
cltd
pop
aas
inc
jns
ret
or
dec
mov
push
clc
adc
xchg
mov
int3
cmp
pop
mov
jmp
into
dec
mov
mov
cwtl
movsb
pop
xchg
pop
and
or
ja
out
movntq
push
jnp
add
rolb
aad
xor
and
add
dec
jne
sahf
dec
inc
mov
push
arpl
mov
cmpb
dec
test
sub
loope,pt
push
jmp
iret
fistpl
mov
inc
mov
or
sub
mov
sbb
mov
inc
popa
cmpsb
push
out
sbb
mov
fsubrp
inc
jne
imull
add
popa
push
jle
or
subl
xor
dec
scas
aad
pop
sub
push
jmp
mov
mov
ja
lea
jg
sbb
addr16
enter
popf
rcll
and
cmpb
mulb
sub
add
movsl
jecxz,pn
ja
inc
xchg
mov
add
xor
xchg
out
addl
push
add
test
xchg
ja
enter
aam
lcall
lds
fimuls
aaa
mov
ret
pop
loope
movsl
mov
out
lods
xchg
repz
mov
test
orb
push
movsl
js
add
ss
out
jae
icebp
add
push
into
cld
push
fisttpl
in
aaa
lods
xor
rcll
lds
or
mov
inc
mov
or
ds
cli
push
jmp
fwait
out
and
push
push
rcr
inc
xchg
and
mov
pop
xor
mov
inc
inc
loop
pop
stc
mov
outsb
addb
ret
lret
into
out
dec
mov
popa
outsb
loope
and
inc
add
addr16
rclb
add
repz
out
adc
fcomi
les
stos
xor
sub
cmp
sbb
nop
fincstp
pusha
lret
cmp
or
and
dec
cwtl
mov
pop
mov
lcall
int3
sbb
mov
aad
adc
ficoms
mov
daa
idivl
out
sub
lcall
fistpll
addr16
jg
cmp
jbe
dec
xchg
sub
shll
add
mov
arpl
mov
cltd
icebp
shll
inc
jl
dec
arpl
pop
pop
lea
add
sbb
push
push
inc
or
inc
enter
pop
push
push
mov
jns
xchg
movq
mov
jl
lods
dec
push
jp
into
cmp
fistpl
mov
and
inc
les
pushf
inc
test
inc
loope
imul
pushf
push
and
cmp
adc
pop
mov
sub
xchg
or
jle,pn
addr16
leave
int
dec
aad
jl
cmp
addr16
sar
pop
bound
imul
push
mov
mov
jno
push
cmp
out
inc
jl
pop
iret
push
or
lock
xchg
xlat
mov
loop
xor
shl
sbb
xchg
int
mov
jmp
cli
sbb
pop
mov
push
xor
outsl
sbb
mov
test
pop
dec
scas
jg
push
dec
dec
add
test
aam
cmpsb
add
mov
leave
aaa
and
pop
dec
mov
cmp
cmpsb
pop
pushf
mov
xor
adc
xlat
stc
addr16
add
lods
cmp
mov
hlt
xchg
icebp
push
test
out
repz
stc
mov
cmp
or
shlb
dec
inc
sti
cmp
scas
push
cmpb
push
mov
hlt
movsl
test
or
popa
test
loope
add
dec
sahf
negb
hlt
fsts
mov
test
mov
dec
cmpsb
jb
enter
sub
pop
je
in
mov
push
movsb
adc
xchg
jo
clc
ret
push
sbb
cmc
jp
test
inc
add
test
aas
mov
adc
inc
add
adc
out
xor
ja
enter
pop
fisubl
mov
mov
inc
imul
enter
adc
push
push
pop
ds
inc
cmp
mov
and
mov
lret
fwait
sbb
xchg
icebp
imul
clc
inc
push
dec
jl
fs
and
insl
cmp
push
ljmp
sahf
test
dec
xchg
andb
xlat
imul
or
jl
pop
clc
dec
cmp
cli
adc
xchg
out
mov
sti
jno
shrl
pushf
jno
decb
shll
int3
enter
mov
jno
dec
mov
fldenv
filds
imul
out
dec
jno
pop
sub
loop
or
leave
hlt
sub
shlb
jecxz
inc
daa
in
pop
sub
dec
xchg
pop
push
andl
mov
mov
mov
loop
insl
scas
mov
mov
inc
push
fisubs
mov
scas
popf
pop
lds
mov
and
sbb
cmc
jb
gs
sti
loopne
mov
jno
daa
mov
cmp
inc
hlt
jl
mov
xor
addl
mov
and
xchg
imul
inc
or
and
shl
xchg
sti
out
sub
xchg
dec
frstor
jecxz
cmpsl
iret
std
fdivs
roll
shrb
mov
out
lcall
scas
enter
test
enter
adc
lods
ret
iret
lret
ret
addb
add
dec
xchg
jno
shrl
cmc
add
push
jae
jle
mov
sbb
adc
and
jbe
pusha
push
shll
sbb
xorl
rcl
fdivrs
jae
leave
fcmovne
cmpsb
rorb
cmp
iret
jmp
push
outsb
push
and
rcrb
mov
stos
inc
mov
cli
ds
cld
push
in
mov
cmp
push
adc
stos
and
lret
pop
mov
cmp
jle
push
add
push
repz
mov
push
call
or
inc
and
sbb
out
js
jge
shll
pop
xor
mov
xor
inc
mov
adc
rorb
push
cld
cmp
std
aad
or
aas
mov
mov
mov
call
addr16
daa
out
mov
lds
push
addr16
add
dec
pusha
push
pop
or
mov
test
push
and
adc
or
push
cli
stos
cld
sub
pop
add
movsb
in
jo
jo
xor
stos
xchg
or
push
pop
outsb
out
sbb
cltd
insl
test
xor
das
xchg
xor
jmp
test
dec
dec
hlt
xor
shrb
sbb
dec
sbb
pop
mov
pop
push
fisttpl
out
jno
scas
les
xor
xchg
push
popa
mov
add
adc
xlat
jae
jl
pusha
lods
mov
mov
dec
lret
mov
aas
xor
sbb
xor
mov
lock
adc
mov
fldt
test
in
loop
pop
jnp
and
xchg
imul
and
pop
ds
jbe
jnp
mov
nop
mov
mov
shlb
push
lock
cmpsb
popf
pop
dec
mov
add
std
sbb
int
outsb
cmp
or
jb
testb
and
and
sbbl
ret
sarl
mov
dec
lods
fildll
jnp
sbb
pop
pop
lahf
outsb
mov
jo
cli
dec
inc
faddp
mov
mov
in
pop
fidivrs
jo
jge
xchg
orb
xlat
xor
dec
sahf
decb
fdiv
mov
mov
xor
jecxz
les
fwait
push
pusha
add
aaa
lods
in
fsubs
jbe
xor
in
test
jno
stos
popa
js
xor
cltd
pop
imul
and
imul
lret
insl
int
adc
les
pop
mov
out
ficompl
lods
out
add
xor
pop
mov
std
jns
xchg
ja
xchg
push
adc
or
ret
sar
inc
mov
out
hlt
aaa
fcmove
add
enter
jmp
subl
or
mov
cld
sbb
inc
mov
inc
push
mov
sbb
adc
mov
push
xchg
jl
adc
fimull
cmp
xlat
je
dec
mov
fsubl
dec
pop
shlb
int
cmp
jbe
inc
or
imul
dec
std
sbb
add
push
xchg
out
fcomps
inc
pop
in
in
and
loopne
xchg
xchg
in
cmp
xorb
mov
cmpb
lcall
shrb
pop
rcr
rcrb
or
sub
mov
push
xchg
sbb
fwait
bound
fstp
sti
movsb
pusha
dec
lret
push
mov
sbb
jecxz
xchg
fcompl
jecxz
mov
loop
cli
push
outsl
iret
movsl
mov
xor
pop
repz
loop
xchg
loopne
cmpsb
mov
sbb
dec
jb
or
cmp
mov
shll
xchg
lods
pop
test
lahf
and
pop
out
pushf
ja
inc
loop
iret
js
fbld
jno
fcomps
test
outsl
in
jbe
xchg
push
lahf
jp
adc
and
push
addr16
fsts
jge
mov
dec
into
push
jecxz
fwait
dec
inc
adc
pop
in
fidivrl
xor
out
mov
mov
jae
in
adc
jg
cmc
pop
mov
inc
mov
fs
mov
test
bound
pop
sub
frstor
adc
dec
rorl
push
lock
les
int
shrl
mul
and
rolb
fnsave
add
inc
das
rcll
iret
sarb
push
and
adc
mov
out
mov
cld
push
outsb
sub
cmpsl
sub
dec
es
mov
push
push
cmp
aam
lods
leave
popf
aad
xchg
cmpsb
jns
dec
mov
and
loope,pn
out
arpl
mov
hlt
lods
mov
dec
cmpb
mov
push
int3
mov
call
int3
dec
mov
enter
scas
xor
sub
jg
call
ja
jecxz
push
and
sbb
mov
or
data16
outsl
cs
dec
pop
das
neg
push
movsb
push
fnstenv
mov
fadds
mov
aaa
mov
aaa
dec
xor
xchg
jo
vunpckhps
fistpll
add
push
or
jae
mov
movsb
push
mov
in
pop
out
dec
int
rcrl
xorl
mov
push
mov
ror
mov
popa
stc
mov
scas
jp
jl
mov
dec
adc
xlat
xor
or
mov
jne
loop
cmpsl
cmpb
ss
out
jp
jb
xlat
mov
lcall
mov
jle
clc
pop
loope
arpl
test
jo
sbb
mov
imul
repz
sbb
lds
insb
leave
pusha
nop
scas
sbb
test
dec
and
push
lods
adc
mov
movsb
add
repnz
and
cltd
xchg
inc
dec
and
jae
xchg
push
lret
dec
pop
cmc
mov
lret
xlat
daa
cli
push
jle
les
xor
pop
pop
pop
repz
mov
xor
or
pop
das
and
sub
fwait
dec
inc
xor
sub
sub
ret
mov
pop
push
es
push
sbb
pop
pop
mov
jae
push
push
mov
xchg
jge
das
aad
sub
adc
sbb
xchg
fsubl
jnp
and
push
in
mov
cmpsb
xor
ljmp
cmp
mov
hlt
mov
andl
sbb
scas
dec
fs
push
movzbl
and
pop
pop
adc
mov
pop
xchg
jp
sub
sub
stos
lahf
out
adc
daa
and
out
and
enter
mov
push
hlt
jns
sub
mov
fiaddl
fcomps
mov
out
lcall
into
scas
movsl
push
and
pop
sub
gs
sub
std
lea
repnz
neg
inc
dec
pop
push
ret
jl
divb
mov
xchg
push
in
lret
mov
cmpsl
or
shlb
scas
and
push
or
jns
sbbb
fsubrs
sbb
add
mov
es
sub
aas
gs
repz
cmp
cmpb
or
ja
fildll
sub
lret
jo
sub
cltd
daa
cmp
lds
imul
mov
mov
mov
cmc
adc
jge
mov
and
rsm
stos
lret
push
aam
mov
cwtl
ror
add
inc
xchg
clc
push
push
adc
or
mov
dec
ljmp
mov
add
loop
push
and
lods
lock
xor
jmp
das
movsl
sbb
dec
ret
repnz
aas
data16
clc
int3
inc
xorb
xor
sub
push
inc
lods
leave
mov
jp
cmp
mov
stos
jno
xchg
mov
int
lea
dec
sbb
jmp
lds
jp
push
dec
mov
in
in
lret
dec
lods
cli
adc
push
mov
push
jp
mov
or
add
dec
push
pop
fcoms
pop
fstpl
scas
mov
lods
or
and
shlb
or
inc
es
fs
sub
cmp
and
push
push
inc
and
loop
popa
bound
fs
sbb
adc
rep
stc
push
mov
aaa
stos
cltd
daa
jl
dec
jne
mov
and
unpcklps
pop
pop
fisubs
sub
mov
xchg
rcrb
dec
xchg
push
xchg
je
stos
inc
sti
repnz
mov
pop
cmp
cmpsl
xchg
xchg
jmp
push
sarb
mov
ficompl
je
nop
mov
sbb
inc
rorl
xchg
shll
sub
repz
loopne
out
sbb
adc
cltd
stos
add
or
adc
adc
call
sahf
adc
and
jge
scas
enter
aad
mov
sub
push
pop
loope
dec
mov
and
mov
add
hlt
mov
mov
xchg
push
fldenv
inc
mov
mov
jae
cmp
loop
jmp
lods
cmc
aam
fldenv
movsl
test
dec
outsl
mov
mov
sbb
leave
adc
mov
mov
stc
jae
mov
cmp
xor
jle
and
sub
fistpll
icebp
shll
lret
xchg
jns
xchg
mov
fsts
or
mov
fcom
rorb
enter
sub
rcrl
push
inc
pop
test
insl
lahf
xchg
shll
pop
mov
inc
lods
or
xchg
mov
mov
jge
ror
cmpsl
or
fsubrl
test
out
xchg
add
sub
mov
in
movsb
frstor
sahf
aad
mov
jge
cmp
xlat
add
push
shr
xlat
and
push
call
loopne
sbb
fidivs
and
lret
cld
jmp
lcall
or
clc
push
push
and
arpl
les
adc
xchg
aas
push
sub
mov
pop
into
je
xlat
fists
pop
dec
lahf
ret
stos
jns
dec
outsl
pop
xor
mov
cmp
inc
adc
add
cmp
nop
or
ja
jle
jns
inc
int3
iret
lods
cli
jge
sar
sbbl
cli
test
arpl
les
in
inc
or
inc
mov
xor
mov
pop
fists
adc
xchg
lock
mov
push
lret
insb
js
and
fistpl
push
je
xor
or
xchg
hlt
aaa
adc
insb
subb
push
stos
xor
insl
sub
outsl
aaa
jb
xchg
clc
lods
fs
mov
mov
pusha
jo
jb
into
adc
xor
or
xor
xchg
push
outsb
pop
out
jne
xchg
push
mov
push
loope
cmc
mov
push
loop
mov
jb
fnstenv
pop
ret
sbb
test
fstpl
mov
cmc
insb
rcrl
jo
aaa
push
sub
sbbb
aaa
aas
stos
es
shll
sbb
sub
dec
jns
cmp
in
sbb
cmp
dec
sbb
in
jo
mov
sbb
es
test
rcl
rorl
hlt
lahf
or
into
push
adc
cmp
mov
stos
fdivrp
pop
stc
jb
lds
add
cmp
xor
bound
fidivrs
stos
xor
cld
mov
dec
fs
push
or
fdiv
jp
pop
hlt
fldl
testb
gs
mov
cwtl
adc
in
push
fdivrp
sbb
pop
lret
leave
xchg
add
jmp
xor
jbe
in
ss
stos
jo
iret
mov
mov
pop
cmp
add
stos
lods
add
repnz
pusha
adc
fiaddl
sbb
cli
out
pop
bound
and
int
aad
jnp
jecxz
and
add
dec
rorb
shrl
cs
push
ljmp
ja
pop
jmp
sbb
lret
test
movb
jmp
lods
adc
sbb
xor
adc
fcompl
push
pop
jb
gs
pop
ja
sub
ds
loope
mov
cwtl
fwait
mov
inc
out
or
ds
fiaddl
mov
cmp
push
adc
add
outsl
xor
cwtl
lock
iret
sub
repnz
pop
test
mov
sub
xchg
mov
xchg
sub
ret
mov
insb
jg
dec
cmp
fcompl
jmp
gs
inc
push
out
in
add
mov
ss
pop
repz
xor
call
fwait
std
adc
mov
nop
lds
in
push
stos
pushf
bound
push
add
clc
inc
pusha
cmp
hlt
js
mov
xchg
pop
mov
mov
mov
or
lret
mov
ja
shlb
std
push
add
imul
adc
cmp
lds
dec
and
jbe
mov
fisttps
pusha
ljmp
sub
push
rcrb
xchg
jae
bound
xor
and
rolb
ret
and
xor
popa
mov
xchg
jb
bound
xor
and
rolb
ret
and
xor
popa
mov
xchg
repnz
add
xor
mov
adc
and
xor
popa
mov
xchg
jb
bound
xor
push
sar
ret
and
inc
loop
repnz
ret
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
adc
inc
mov
pop
mov
lcall
rcrl
jecxz
loope,pt
ficoms
into
dec
xor
inc
sahf
push
mov
jno
sbbl
outsb
xorl
icebp
cs
fs
jg
jno
in
mov
leave
pop
aam
stos
dec
mov
dec
outsl
lcall
inc
xchg
push
ja
cmp
mov
test
cmc
gs
fucomp
or
outsl
mov
add
ja
in
and
dec
ds
arpl
mov
xchg
push
cmpsl
daa
push
mov
ja
dec
inc
cmc
xlat
pop
xchg
pop
mov
mov
shr
xchg
repnz
int
fstp
jns
cli
fucomp
mov
jle
and
orl
loopne
icebp
push
decb
sbb
add
lods
adc
jg
push
mov
sahf
hlt
sahf
test
sbb
mov
and
mov
scas
mov
xchg
push
sub
orb
repnz
pop
push
inc
out
and
sub
inc
pop
or
xlat
jl
push
mov
fneni(8087
shll
icebp
sbb
fisubs
push
xchg
dec
subb
aas
jecxz
lret
jno
sbbl
mov
inc
dec
cwtl
je
push
lea
sub
xor
xchg
xlat
and
out
ret
cmp
push
mov
pop
insl
lods
jge
inc
xchg
bound
popa
mov
xchg
dec
mov
push
rorl
loope
icebp
cs
adc
and
xor
inc
sahf
push
mov
jno
sbbl
outsb
rcrl
push
loope
icebp
cs
mov
jecxz
icebp
add
pop
rcll
ret
cli
pop
clc
xor
xor
sub
addr16
adc
enter
movsb
mov
fstps
incl
jns
mov
xor
xor
jnp
jge
xor
shr
mov
push
push
popf
jge
clc
roll
pop
stos
xor
xchg
and
pushf
and
decb
push
and
cmp
int3
adc
dec
lahf
and
mov
adc
outsl
arpl
aaa
add
fld
add
popa
or
mov
mov
jne
jno
imul
or
cs
push
test
aam
push
or
jae
dec
pushf
pop
cmpsb
jecxz
fwait
xchg
mov
out
fs
fs
add
push
test
ret
movsb
push
loope
jmp
sub
push
inc
pop
or
pop
sbb
es
lock
mov
push
pcmpgtd
setg
std
mov
mov
arpl
aam
inc
add
jecxz
jo
mov
fs
cmpsl
jecxz
into
stc
ror
push
xchg
sub
cmp
outsb
pop
lea
call
pusha
or
je
xchg
ja
add
lods
xor
in
in
fld1
jno
or
pop
push
lea
mov
sbb
rolb
icebp
push
or
push
xchg
shll
mov
add
mov
aaa
js
into
mov
bound
sar
cmc
push
sub
and
cld
outsb
xchg
testb
mov
out
iret
mov
dec
sub
pop
fucom
jp
add
aas
addr16
out
cmp
sar
shr
mov
or
fwait
repnz
and
sub
jo
scas
movsb
mov
out
inc
test
sub
jle
cmc
or
js
sub
sbb
lcall
seta
std
inc
sbbb
mov
lea
push
cmp
or
fistpl
xchg
mov
sub
daa
in
and
mov
pop
or
dec
mov
mov
mov
sbb
dec
or
and
neg
mov
call
lods
adc
pop
inc
jmp
addr16
fstps
out
movsl
popa
xchg
mov
push
iretw
out
sahf
imul
popfw
pop
push
mov
int3
inc
mov
xor
out
pop
and
cli
dec
xor
sbb
and
xchg
clc
xchg
mov
fldcw
fimuls
daa
jecxz
je
test
fistps
xchg
shlb
inc
pop
scas
movsl
inc
add
scas
sub
int3
hlt
jg
loop
stos
movsb
sbb
adc
jecxz
js
loopne
mov
sarl
sbb
repnz
out
aas
xchg
aam
adc
mov
cmp
pushf
dec
out
or
es
mov
mov
xchg
xor
xchg
mov
inc
and
mov
push
sbb
pop
std
ss
mov
inc
dec
imul
inc
lahf
in
xor
jle
mov
aas
jo
sbb
aas
icebp
shll
outsl
jecxz
and
clc
add
stos
pop
cmp
outsl
mov
push
das
insb
or
mov
fidivl
addr16
and
stc
jno
dec
loope
dec
enter
jg
outsb
fmull
lret
mov
jle
dec
cmpl
and
add
loopne
enter
pop
arpl
ljmp
dec
test
mov
popa
and
mov
mov
ret
loopne
aaa
jmp
setl
cli
popl
mov
or
mov
cs
arpl
dec
sub
vaddpd
push
subl
test
popa
cmp
fisubl
cwtl
cltd
fdivrp
or
fimuls
xor
jae
pop
test
sbb
mov
std
out
sub
inc
hlt
or
imul
pop
xchg
jge
jns
mov
test
cld
lret
jmp
movsl
mov
test
ja
jmp
xor
inc
lret
adc
sbb
dec
mov
push
les
xchg
sbb
xchg
mov
int3
xchg
out
pop
int3
dec
aaa
sub
incb
mov
mov
stc
xor
adc
loop
ret
mov
xor
lock
lds
or
test
in
sti
addr16
jae
cltd
jo
imul
push
mov
aam
in
jmp
sahf
dec
lret
mov
lods
xchg
adc
mov
jecxz
fsts
outsb
jmp
xchg
mov
nop
cmpsl
test
mov
push
leave
adc
dec
inc
pop
xchg
hlt
lea
mov
jb
imul
or
jae
cmp
or
loop
or
daa
psubusb
xor
mov
lret
insl
fwait
iret
inc
dec
arpl
lock
imul
mov
rcl
pushf
jo
iret
pushf
inc
or
xchg
xchg
mov
push
or
push
rorb
mov
cwtl
test
ds
jle
call
movsb
lret
sti
mov
add
cs
dec
scas
jbe
sbbb
aad
stc
cmpsb
mov
inc
in
cwtl
push
jp
enter
mov
inc
mov
lcall
push
inc
mov
or
add
stos
jle
push
pop
mov
mov
rcrb
ss
dec
scas
cltd
lcall
data16
mov
into
lock
mov
mov
dec
ret
inc
add
lods
mov
and
clc
fists
movsl
jne
cmc
dec
adcb
inc
insl
add
mov
aam
push
ljmp
or
subl
add
pop
jl
nop
push
fldenv
out
sbb
push
and
xchg
inc
push
fildll
dec
cmp
and
mov
subb
mov
pop
in
lods
sub
mov
stos
iret
repnz
jp
xchg
mull
or
shlb
push
inc
cmp
loop
dec
fmull
lds
push
popf
cwtl
test
sub
jnp
jbe
xchg
xor
das
orl
push
js
adcb
cs
mov
push
jl
aam
push
xchg
notb
aas
call
jne
mov
cmp
outsl
imul
stc
jno
or
dec
in
leave
sbb
jbe
lahf
test
lret
pop
cmp
or
enter
and
insb
inc
loopne
and
in
sbb
pop
xor
int
fcmovnbe
outsl
push
add
and
mov
inc
fucomip
mov
and
cwtl
aaa
push
push
jne
add
inc
and
xchg
add
call
popa
arpl
test
out
into
xchg
call
mov
mov
pop
jns
add
mov
sbb
mov
jmp
push
mov
adc
movsl
sub
jmp
push
add
xor
pop
cli
jo
pop
push
or
aad
push
out
jo
scas
pop
push
add
dec
mov
addr16
fsincos
dec
mov
jns
sub
inc
ds
ljmp
jge
sar
aad
cwtl
inc
fstl
or
xor
loopne
pop
int3
das
xlat
outsb
sbb
mov
pop
or
lret
push
test
mov
mov
pop
cmc
pop
lods
movl
and
fidivrl
stos
mov
daa
xchg
rol
and
push
test
inc
mov
fisttps
push
test
aam
add
cld
imul
daa
jmp
pusha
add
aaa
inc
sub
xor
adc
push
pop
lods
test
ds
call
jmp
rcr
or
aas
fildll
popf
dec
scas
pop
mov
and
sarb
icebp
and
pop
loopne
aaa
dec
enter
jnp
imul
test
leave
fnstcw
ret
std
sub
shlb
dec
sahf
cltd
and
mov
mov
mov
outsb
outsl
shll
sbb
fidivrl
mov
dec
aas
mov
jg
ficoml
jns
mov
adc
mov
or
in
daa
fs
cmpsb
sub
les
fadds
dec
test
stos
aaa
push
into
js
dec
insb
pop
stos
mov
pop
sar
loope
jecxz
aaa
je
mov
xor
ds
fs
aaa
mov
push
imul
add
mov
dec
jb
dec
ds
mov
xor
add
sarl
sbb
mov
mov
jmp
inc
sub
adcl
std
iret
ret
ds
ja
jb
xchg
xchg
mov
push
clc
fwait
dec
pop
add
imul
jae
mov
cs
stos
and
and
and
outsl
pop
cmp
adc
pop
lock
pop
push
cmp
dec
or
inc
mov
push
rclb
dec
fldcw
inc
cmp
sbb
xchg
aam
dec
stos
jmp
jge
stos
or
xor
and
insb
or
xchg
pop
enter
int3
filds
adc
jo
popa
insl
xchg
adc
lret
test
hlt
jp
cs
aad
mov
inc
adc
in
inc
or
pop
lock
cltd
xchg
mov
pop
jmp
dec
xor
jmp
leave
xchg
call
test
adcl
test
pop
and
add
int3
pop
insb
lret
and
jle
outsb
add
ficompl
leave
xlat
xor
xchg
mov
cwtd
hlt
loopne
mov
shll
lds
idivb
std
into
js
mov
adc
hlt
mov
xor
sbb
adc
jb
push
jbe
mov
inc
je
daa
mov
sbb
xchg
aas
add
mov
enter
inc
into
inc
cli
jnp
sub
jmp
test
xchg
test
dec
aas
jp
loopne
lahf
or
rcrb
pop
cmc
mov
push
out
and
inc
leave
dec
loopne
cmp
jbe
lcall
adc
adc
and
notb
cs
out
sarb
popf
fsts
fwait
pop
adc
push
sub
dec
data16
nop
mov
push
or
jo
fdiv
test
imul
shl
xor
xor
jb
xor
ret
push
sbb
ss
cwtl
addr16
jnp
mov
jmp
repz
ror
loopne
ret
aad
push
fsubs
ds
fnstcw
adc
movsl
xlat
imul
jno
pop
popa
mov
mov
mov
into
and
arpl
xchg
pop
in
fwait
pop
add
in
xlat
out
and
pop
cmp
xor
rolb
xchg
and
rcrb
xchg
out
adc
cli
jl
aas
cmp
dec
mov
pop
ret
es
inc
push
and
icebp
inc
xchg
push
rorl
cmp
mov
pop
add
stos
push
add
sbb
fimuls
jae
shl
cwtl
movsb
pop
add
in
inc
sub
adc
sahf
xor
mov
test
ss
push
mov
sbb
pop
adc
fcompl
repz
or
add
cltd
scas
mov
and
jns
aad
lret
mov
cmp
js
aas
arpl
repnz
jp
push
pop
xchg
flds
pop
sbb
or
jmp
mov
and
negl
xor
call
dec
add
imulb
dec
mov
sub
adc
fdivrs
add
aas
aad
std
lcall
dec
in
xchg
es
clc
mov
adc
andb
push
ljmp
mov
sub
sub
dec
ljmp
sub
lock
push
mov
add
adc
aas
inc
outsb
stc
push
adc
add
push
enter
mov
ss
data16
add
cmpsl
sahf
dec
daa
lock
mov
notl
cmp
repnz
ja
pop
outsb
in
pop
adc
je
ror
xor
mov
pop
mov
mov
mov
out
mov
push
fmuls
dec
dec
out
push
xlat
sub
mov
push
stc
cmp
push
scas
test
loop
lea
cs
or
sbb
adc
mov
and
inc
jne
popa
test
push
inc
jecxz
add
and
xor
or
add
xchg
int3
movb
dec
pop
push
in
movsb
cmp
and
jp
mov
aam
sbb
or
jbe
push
arpl
jnp
loope
pop
outsl
js
mov
sub
rol
mov
flds
cltd
mov
xor
scas
jle
or
addr16
mov
stc
dec
sbb
jmp
fs
mov
push
jp
sub
jae
add
mov
mov
xor
outsl
dec
cmpsb
mov
ret
insb
jne
fwait
imul
and
jb
ss
pop
mov
lahf
fidivrl
or
and
std
xchg
lret
and
lods
and
mov
or
pop
push
bound
mov
mov
add
movsb
mov
mov
or
mov
arpl
in
fcoms
sbb
mov
mov
mov
pop
aaa
cs
shll
or
insl
sarb
testl
into
leave
jnp
jns
or
pop
push
push
repnz
mov
cld
fstpl
push
hlt
into
fwait
mov
fwait
testb
lea
xor
adc
repz
mov
or
cmp
xchg
mov
stos
movsl
cmc
repz
add
add
mov
push
iret
mov
xchg
mov
push
scas
pop
pop
xor
pusha
push
aam
jg
pusha
inc
xor
mov
pop
adc
outsl
int3
cld
lea
rorb
xor
adc
ljmp
cmp
jle
sti
add
push
lods
pop
sarb
adc
aam
inc
aaa
dec
bound
mov
jae
mov
sar
int
out
leave
or
jge
pop
dec
in
sub
cmpsb
mov
mov
mov
sbb
shll
jb
jp
push
loop
test
in
mov
add
mov
pop
sbb
lods
es
outsl
and
cmpsb
sub
incl
call
fmull
test
pushf
popa
adc
dec
fstl
jnp
mov
xchg
sub
mov
js
dec
xchg
ret
out
sti
cmpsl
cmp
push
popf
aaa
add
sbb
xor
sub
xchg
dec
sub
test
and
or
int3
loopne
fisubs
cmp
sub
lods
in
dec
loop
rorb
in
test
shlb
and
xor
test
outsb
dec
jo
or
cwtl
cmc
mov
in
xchg
xchg
push
adc
jbe
cmp
cmpsl
mov
pushf
std
out
je
int3
sarl
cs
je
dec
mov
sub
stos
jge
loop
bound
mov
xchg
or
jnp
nop
movsb
jo
inc
cs
enter
fistpl
mov
add
aam
nop
dec
lcall
xchg
sbb
xor
mov
lret
cld
add
pushl
stos
andb
subl
or
fisubrl
xchg
cmp
adc
push
int
adc
mov
xchg
pop
push
stos
push
out
iret
pop
jg
jge
fucomi
lock
adc
ret
cmc
sbb
or
std
js
and
ja
push
addr16
shrb
cmpsl
xlat
movsl
push
and
cmp
pushf
mov
test
lock
fwait
add
cs
pop
pop
cld
inc
dec
mov
push
or
cmp
xor
jmp
cs
xor
lcall
xchg
push
dec
popa
cwtl
inc
out
sbbl
jmp
lods
mov
repz
sub
xchg
add
addr16
int
push
mov
sub
sbb
dec
push
js
dec
mov
inc
mov
mov
rorb
jle
in
scas
sub
mov
addl
push
cmp
xor
dec
fstps
mov
lods
dec
push
xchg
loop
lods
loop
outsb
xlat
fldenv
xchg
test
insb
cmp
lods
js
adc
int
push
pop
stos
dec
dec
aam
jl
jbe
or
xor
add
adc
es
ja
sahf
pushf
lods
iret
jmp
push
push
ret
jp
pop
aad
lods
addb
cmc
fmuls
push
cmpsl
and
inc
arpl
inc
jecxz
stos
and
leave
jp
mov
data16
addr16
mov
cld
cs
push
lret
push
imul
testl
jg
cmpsl
sub
aaa
or
mov
insl
repnz
jp
dec
push
sbb
mov
sbb
jge
inc
or
fwait
js
xchg
and
mov
sbb
push
push
es
mov
enter
xor
xor
mov
inc
mov
stos
mov
lahf
mov
aam
jg
push
fnstenv
js
aaa
jb
adc
dec
dec
mov
iret
cmp
es
jns
dec
push
jbe
push
jno
sahf
jne
pop
scas
lcall
aas
std
mov
lcall
dec
mov
popf
adc
bound
cs
fidivrs
gs
stos
mov
jmp
push
rcr
cmpsb
pusha
ret
sar
sub
std
mov
movsl
movsb
sub
enter
push
loope
in
and
pop
fcmovnbe
push
or
inc
insl
mov
sti
push
push
cmp
and
xchg
jge
and
scas
fists
push
or
dec
out
iret
jnp
out
ds
test
mov
cmp
fistps
sub
jo
jbe
sbb
fstps
mov
or
pop
outsl
mov
sbb
dec
xchg
stos
xor
push
scas
mov
sahf
sub
hlt
sbb
or
ficoml
add
scas
push
stos
gs
cmpsb
lea
xchg
adc
jg
fs
push
xor
into
add
inc
ficoms
ss
xlat
dec
inc
dec
push
jecxz
test
ror
stos
mov
in
or
push
outsl
cmp
and
xor
mov
mov
mov
sbb
mov
mov
icebp
jno
push
mov
fdivrp
shrl
xor
mov
xchg
shrl
pop
push
insb
sub
lods
push
xchg
fisubrs
push
push
loopne
ss
inc
sub
stos
pminsw
mov
in
cmc
push
scas
xchg
push
push
aas
jp
and
hlt
pop
inc
aad
stos
and
aad
out
xor
adc
shlb
add
mov
push
icebp
pop
arpl
and
addr16
sub
pop
int
pop
gs
fldt
mov
stc
cmpsl
pop
aam
xor
idiv
dec
jle
xchg
mov
xchg
ss
inc
ja
mov
mov
cmpsb
data16
push
xchg
addr16
lods
or
cli
dec
dec
movsl
daa
test
push
in
or
dec
push
sahf
add
leave
negl
cld
add
shlb
ret
stos
cmp
mov
orl
cmc
inc
stos
mov
xchg
fwait
xchg
or
pusha
jecxz
xor
inc
dec
pop
mov
xor
add
pop
xchg
frstor
das
lret
data16
fs
loope
cmp
jg
rcrl
fcmovnbe
pop
mov
movsl
jo
xchg
adc
xor
add
call
movsb
mov
dec
dec
dec
stos
pop
gs
stos
in
sbb
pusha
sti
shlb
mov
loopne
sti
fs
push
arpl
insb
aad
sub
or
push
xor
push
sub
imul
fldenv
adc
ret
ds
adc
ror
daa
jno
push
out
jge
popa
or
stos
xchg
fmul
mov
inc
fs
fs
xchg
add
mov
mov
inc
popf
dec
sub
xchg
loop
mov
or
ja
int3
adc
mov
aam
stos
cltd
mov
rcrl
je
and
ds
negb
pop
aam
and
adc
les
pop
inc
adc
dec
inc
aaa
mov
rorl
sub
jp
icebp
jae
add
rol
mov
sahf
sub
das
loop,pt
inc
cmp
stos
aaa
push
inc
adcl
push
fsubrl
pop
xor
mov
push
outsl
mov
or
lods
out
xchg
inc
lods
inc
cmp
lock
mov
cmp
jb
cli
pop
sub
push
xor
nop
mov
xchg
and
bnd
shrl
pusha
divps
xor
pusha
icebp
inc
mov
pop
movsb
sbb
jae
or
push
hlt
les
shll
sbb
popf
rorl
push
clc
cwtl
cmp
jb
mov
cltd
lods
mov
icebp
out
rolb
ret
push
dec
in
xchg
popa
out
add
mov
setae
mov
jmp
jle
pop
sub
dec
or
rorb
jge
jmp
mov
add
repz
fwait
cmpsl
push
std
imul
pop
icebp
in
sub
mov
scas
test
into
data16
xor
inc
sahf
push
mov
jno
sbbl
outsb
rcrl
push
loope
icebp
cs
adc
and
xor
inc
sahf
push
mov
jno
sbbl
outsb
rcrl
push
loope
icebp
cs
and
inc
out
ljmp
mov
sbbl
rcrl
push
loope
sbb
adc
sbb
scas
inc
sahf
inc
mov
icebp
outsb
andl
pop
jbe
inc
push
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
fcmove
lret
jmp
and
stos
jmp
pop
adc
dec
jp
imul
or
sub
sub
fcmovnu
lret
lret
jmp
fwait
lcall
pop
pop
dec
dec
sbb
push
jbe
or
cmp
sub
fcmove
lret
jmp
fwait
lcall
pop
pop
dec
imul
dec
bound
push
inc
pop
stos
test
mov
popl
cwtl
and
mov
cmp
pop
pop
lahf
sbb
jne
mov
mov
test
xor
mov
and
push
out
hlt
ret
xor
sarl
fcmove
hlt
nop
mov
lahf
xchg
add
xor
lcall
sbb
sub
bswap
or
lahf
lret
out
fcmovnbe
pop
mov
pop
shrb
mov
incb
hlt
sub
and
es
xor
test
addr16
addl
shrb
push
sub
arpl
mov
pop
lret
inc
jno
outsb
stos
jnp
inc
inc
inc
mov
out
movsb
dec
popf
sbb
and
outsl
sbb
pop
cmp
sub
test
lret
lret
jmp
fwait
lcall
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fimuls
ljmp
into
xor
stc
dec
adc
nopl
inc
outsl
push
inc
pop
test
mov
mov
adc
xor
sub
je
or
xor
lods
sahf
in
cwtl
mov
fidivl
stos
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
lret
lret
jmp
fwait
lcall
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
into
mov
call
xor
adc
clc
cmp
nop
pop
mov
int
xlat
fstl
daa
fcomps
adc
rcll
push
push
pusha
push
sub
sub
out
std
pushf
int
shlb
dec
jae
cltd
xor
out
jg
xor
out
shlb
push
dec
adc
xor
out
add
out
jne
mov
and
ljmp
or
xor
movsl
aas
loope
lret
lods
inc
ret
lock
dec
call
xchg
xchg
outsl
shlb
scas
shrb
mov
pop
or
loop
mov
cmp
adc
jns
cmp
stc
out
dec
and
pop
pusha
in
xchg
notl
out
test
mov
adc
xor
les
test
xchg
jge
mov
shlb
push
lock
mov
ret
mov
stos
out
or
dec
dec
push
iret
xchg
aam
inc
cltd
xor
or
sub
mov
ljmp
pop
dec
jbe
add
ficomps
and
pop
nop
inc
xchg
or
mov
ja
scas
jnp
js
mov
pusha
sub
fwait
movsl
mov
jbe
sub
insl
mov
jb
or
movsl
fs
cmp
push
aam
movsl
add
hlt
jl
pop
dec
jl
in
popa
or
outsl
test
popa
mov
adc
out
enter
test
outsb
or
push
add
fisubs
arpl
add
je
xchg
xor
xor
icebp
movsl
lods
jne
mov
push
jne
push
mov
sub
pop
into
movsb
js
pop
xchg
or
jmp
fwait
mov
into
mov
mov
jae
bound
int3
xor
fisubs
mov
jmp
add
mov
aaa
imul
in
mov
ds
mov
xchg
mov
inc
ljmp
sbb
pop
jb
mov
out
and
dec
movsb
cmp
dec
es
dec
aaa
fs
mov
push
rorl
mov
fdivs
push
insb
sub
shlb
js
call
mov
and
xchg
push
inc
cmpsb
aaa
add
jns
adcl
pop
cmpsl
push
fstpl
rorb
std
cli
cmpsl
nop
sbb
fimuls
push
push
outsb
sbb
jmp
les
cli
mov
sub
sbb
imul
cltd
js
cmp
imull
jae
and
std
xchg
mov
movsb
scas
dec
mov
pop
mov
ds
in
mov
jne
fwait
clc
sub
cmp
ret
inc
out
push
or
pop
pop
addr16
int
in
inc
addr16
test
stos
sbb
sub
sbb
push
andl
mov
and
adc
add
imul
mov
add
xor
scas
mov
out
lods
push
cli
dec
mov
rolb
cmp
mov
xor
test
fdivrs
jo
jecxz
inc
pop
fs
jge
mov
repz
add
push
out
mov
lods
fistpl
pop
in
sbb
pop
std
loop
pop
push
add
rclb
in
loopne
in
or
insb
dec
das
jno
ja
push
outsb
mov
cld
sti
cmc
xchg
inc
jle
out
es
out
imul
xor
addr16
xchg
pop
jne
adcb
clc
push
jno
and
jns
fstpl
and
in
and
mov
push
shrb
add
addr16
outsl
pop
ret
popf
icebp
mov
cld
and
xlat
stos
xchg
in
stos
negl
nop
ret
sub
std
jnp
mov
xchg
stc
dec
aad
and
jae
std
and
adc
sub
sub
dec
rcrl
cmp
outsl
xor
into
rcll
sahf
pop
js
xchg
sub
adc
scas
arpl
out
push
idiv
xchg
jle
or
stos
jg
stc
mov
mov
movsb
pop
fcmovb
add
ds
xor
jo
in
scas
sahf
pop
cs
jg
sub
lahf
ss
mov
fcoms
pop
mov
stos
shll
jne
pop
movsl
es
jl
pop
paddusw
push
jno
and
sub
xor
mov
inc
call
data16
sahf
ret
clc
fucomi
fldenv
and
test
ret
mov
andl
imul
mov
xchg
sahf
scas
loope
xor
ja
js
xchg
mov
dec
sub
sbb
ss
cmpsl
sar
mov
pop
lret
sub
jns
add
inc
and
xchg
fwait
jnp
xchg
inc
shrl
int
mov
stc
scas
jbe
cmc
or
push
mov
dec
ret
mov
in
mov
pop
cltd
shlb
add
and
xor
out
call
insl
push
jp
mov
iret
test
cmp
adc
sub
xchg
and
sbb
fwait
sbb
aas
loopne
jne
repz
notl
cld
push
icebp
mov
sub
cmp
pushf
mov
gs
push
dec
xchg
lret
scas
and
jbe
cmp
cmpsl
or
mov
bound
gs
nop
mov
call
inc
pop
psllw
push
fisubrl
cmpsb
mov
mov
enter
mov
enter
setbe
imul
lods
mov
cmp
aaa
sbb
and
popf
jae
and
mov
iret
cmpl
pop
xchg
imul
mov
scas
mov
cwtl
dec
fidivrs
or
fsubrl
push
fcomps
pop
or
mov
fstpl
or
mov
dec
add
push
stos
dec
sub
jno
mov
gs
sbb
push
cmp
and
inc
or
sahf
sbb
ss
push
repnz
rcrb
adc
mov
or
fcomps
xchg
pop
dec
dec
nop
pop
fsts
xchg
leave
inc
mov
or
mov
cli
inc
sbb
in
inc
dec
xchg
mov
test
popf
inc
lods
jle
ljmp
imul
cwtl
in
outsb
dec
es
mul
adc
mov
mov
or
mov
out
fsubl
sub
pop
shl
or
stc
aad
push
movsb
xor
pusha
jl
push
or
jmp
int3
jne
scas
sbb
mov
jmp
sbb
lcall
sub
xor
adc
sbb
sub
mov
aas
rorl
out
or
inc
inc
bound
adc
ss
mov
std
or
test
int
pop
lds
fs
jns
popf
dec
or
jle
adcb
mov
addb
or
bound
or
inc
dec
add
mov
mov
fldcw
setle
fidivrs
jne
mov
sahf
in
mov
movl
pop
pop
xchg
jge
mov
push
shr
vpaddusw
add
repz
jbe
repz
js
mov
loop
pop
mov
and
sarb
imul
sub
mov
add
cmc
xchg
pop
andl
in
xor
pop
pop
jge
fwait
test
add
dec
stc
or
jmp
xor
fistps
inc
push
lahf
inc
test
inc
dec
mov
or
bound
adc
enter
int
cwtl
pushf
adc
jge
mov
loope
fcoml
insb
push
ret
shll
sbb
andb
test
push
je
pop
stc
xor
jo
xor
and
addr16
inc
sbb
mov
cltd
fcomi
icebp
aaa
mov
xchg
pop
in
mov
pop
adc
xchg
lahf
lret
aas
lea
ret
sub
addb
adc
ret
fucomi
dec
cltd
jnp
std
repz
and
xchg
outsl
movl
jae
aam
xchg
fs
xchg
mov
ds
xchg
pop
push
dec
incb
dec
jae
les
jbe
xor
push
pop
mov
pusha
xor
and
rclb
daa
fstl
int
insb
test
pop
out
and
jl
es
push
subb
jl
insl
inc
popa
imul
xor
xor
sbbl
jns
mov
fnstsw
mov
dec
xor
xchg
movsl
je
push
add
aad
mov
fimuls
lock
cmp
pop
ds
cld
lcall
push
rolb
ret
int3
cs
pushf
bound
jmp
clc
mov
or
mov
jp
and
mov
das
sbb
bound
pop
fadd
lahf
test
fnstcw
adc
pop
mov
pop
rcll
dec
lea
sbb
or
jo
and
and
xor
popf
jl
movsl
xchg
mov
push
mov
inc
lcall
mov
push
jl
pop
fwait
arpl
push
add
jl
sti
popl
pusha
mov
sub
jg
dec
jns
insl
cltd
ss
xchg
mov
jl
cmpsb
and
int3
add
imul
popa
lret
jae
aas
push
jnp
aam
dec
fsubrp
mov
pop
sub
add
jnp
mov
mov
clc
mov
inc
dec
mov
xor
cmpsl
push
loope
fimuls
push
clc
inc
aas
lock
mov
into
sub
or
push
and
cmpb
push
or
pop
lods
fs
cwtl
cmp
lock
mov
add
inc
or
or
and
call
inc
ret
jmp
mov
sub
cmp
gs
daa
sub
out
mov
add
xor
jl
cmp
pop
mov
ret
mov
fwait
xor
push
inc
loope
shll
mov
xchg
cmp
bound
nop
jp
pop
divl
xor
and
xor
ja
add
mov
mov
pop
mov
shll
or
iret
fucom
jl
addr16
fists
or
jno
adc
mov
push
sbb
lahf
repnz
repnz
ret
xchg
lock
dec
mov
push
cmp
pop
lret
mov
mov
icebp
fldl
add
jns
loope
add
fsubs
loope
xorl
ds
iret
sbb
mov
inc
jne
sbb
ds
xor
mov
and
test
roll
pop
add
popf
inc
xchg
fldl2t
sub
or
jecxz
jge
cld
test
inc
lods
adc
sbb
ret
test
pop
sub
jb
mov
push
xchg
fistpll
pop
jns
movsl
mov
nop
pop
mov
mov
arpl
scas
pop
mov
inc
out
enter
loopne
push
aam
xorl
pop
cli
cltd
bound
in
roll
stc
mov
aas
popf
dec
pop
sbb
mov
mov
mov
sbb
jmp
cltd
pop
mov
pusha
mov
leave
cmp
mov
sahf
aaa
lahf
adc
jecxz
lock
rcl
mov
ljmp
adc
insb
fldt
in
repz
mov
pop
pop
mov
xchg
in
sbb
xchg
inc
cld
mov
adc
enter
ret
cmpsb
aaa
xchg
jl
ja
push
aad
push
jmp
pop
enter
repnz
jno
jp
cld
sub
scas
ret
xchg
nop
inc
incl
pop
dec
mov
cmp
mov
jp
mov
sbb
sbb
mov
mov
mov
in
jl
mov
pop
ret
fwait
dec
and
daa
add
or
daa
jo
or
rorb
cltd
xor
inc
icebp
repnz
pop
nop
addb
je
rcrl
inc
xchg
push
int3
push
push
pop
test
xor
or
popa
lret
xchg
xor
xor
inc
pop
dec
dec
sti
fs
xchg
and
jbe
push
add
inc
push
cs
inc
stos
fwait
xor
push
hlt
repnz
in
pop
stc
stos
and
movsb
xchg
sar
mov
sahf
cmp
jnp
addr16
mov
inc
data16
cltd
cmp
or
pop
and
das
fs
test
jb
mov
pop
negb
jmp
inc
stos
push
xlat
mov
lret
mov
pop
imul
mov
hlt
and
shlb
shlb
out
mov
outsb
inc
dec
ss
push
imul
and
cmp
insl
aad
repnz
pop
clc
sub
sbb
add
push
int3
enter
sahf
xchg
test
mov
inc
daa
mov
mov
sbb
cmp
xchg
lods
cmpb
stos
fsubr
les
mov
dec
or
scas
push
out
or
lret
andb
mov
cmp
dec
push
pop
stos
cld
loope
adc
les
pop
mov
mov
shll
cmpsl
mov
mov
jno
mov
cmp
pmulhw
mov
loopne
aas
xchg
mov
sub
gs
jno
jl
add
pop
jno
inc
jns
sbb
add
outsl
out
pop
repz
xor
or
roll
xor
out
cltd
pop
loope
adc
fs
adc
and
or
mov
daa
adc
push
mov
scas
mov
sbb
out
xor
mov
pop
jmp
sti
add
jo
filds
mov
mov
mov
jge
icebp
std
fmuls
out
xor
cmp
and
cltd
or
push
jge
flds
dec
push
and
pop
push
sbb
push
sti
pop
cmp
enter
cld
out
xchg
pop
mov
and
scas
scas
insb
push
jae
stos
fimuls
cltd
ja
aaa
or
mov
dec
add
dec
sarl
or
jle
push
pop
repz
jb
cmp
in
lods
decl
push
test
mov
mov
mov
test
push
ss
fcomps
sub
xchg
cltd
out
inc
js
inc
lods
insl
sarl
xor
cmpsb
shlb
ret
filds
pop
mov
insb
dec
shrl
test
xchg
xor
jge
add
bnd
and
mov
arpl
in
dec
inc
jecxz
jp
dec
pop
out
mov
jb
sbb
jae
xchg
mov
scas
add
cltd
into
xchg
lods
jge
and
adcl
sub
sbb
test
jge
bound
es
adc
jno
xchg
and
mov
fdivs
sub
clc
mov
xchg
xor
arpl
mov
and
inc
jno
int
bound
inc
xor
sub
out
movsb
test
les
inc
arpl
push
push
dec
shlb
xlat
popa
cmp
ret
sbb
sub
sbb
lahf
in
test
rolb
ljmp
xchg
lret
inc
mov
xor
fimuls
insl
or
sahf
push
cmp
hlt
fstps
lods
lea
cmc
pop
cmc
mov
mov
lahf
test
flds
test
cmp
insb
xchg
rcrl
adc
ljmp
test
jl
lds
push
lock
xchg
popf
jp
hlt
mov
adc
scas
test
sarb
test
adc
push
fcmovu
pop
data16
push
jbe
push
mov
cmpsb
jecxz
sahf
mov
pop
dec
loop
jno
sub
mov
sbb
add
and
movsl
mov
pop
inc
or
gs
or
orl
mov
mov
add
mov
mov
rclb
lea
orl
adc
xchg
in
mov
sbb
cli
cltd
dec
push
sub
cmp
mov
xchg
cmpsl
fs
or
and
inc
dec
adc
aas
inc
mov
jns
mov
xchg
and
hlt
inc
mov
subl
pop
sbb
adc
jp
lods
daa
les
insl
add
xor
dec
insb
test
mov
sahf
sbbl
mov
pop
add
shll
ljmp
xchg
adc
cmp
and
jecxz
arpl
fdivrs
sahf
mov
subl
mov
bound
xor
jmp
sbb
or
push
rcrb
inc
cmp
adc
push
imul
and
and
xor
dec
cmp
sub
sbb
mov
cwtl
lods
divb
jbe
and
rolb
adc
or
fimull
mov
xor
pop
movsb
sub
jecxz
mov
dec
mov
aad
leave
pop
xlat
dec
inc
jae
mov
call
aas
push
dec
addr16
jb
sbb
and
andb
cli
scas
mov
inc
jno
mov
push
pop
in
jns
cli
fwait
shlb
add
lods
fucomip
rorb
cltd
stos
adc
insb
xor
out
xlat
lods
aaa
or
xchg
iret
pusha
adc
dec
lods
adc
mov
jmp
mov
hlt
adc
inc
dec
xchg
add
mov
jae
lret
stc
xchg
xchg
leave
dec
jl
loopne
add
cmc
loope
xor
push
call
fldt
pop
cmp
ds
xchg
mov
ret
dec
jg
pop
inc
fists
ds
adc
pop
call
add
cmp
mov
faddl
into
xchg
mov
stc
jl
push
adc
mov
xchg
loope
add
cmp
and
jl
test
mov
jge
daa
leave
dec
sti
add
mov
jnp
cmpsb
xor
scas
push
imul
movsl
stc
pop
cmp
test
mov
call
and
mov
push
movsl
push
xchg
cmp
mov
arpl
daa
in
or
scas
inc
mov
inc
andb
pop
dec
imul
jnp
inc
in
sbb
add
jne
pop
gs
or
lea
std
sysret
mov
sub
push
inc
add
ror
dec
sub
ret
cmp
popa
rcr
ljmp
sbb
and
cmp
cmp
fwait
mov
cmpsl
aas
arpl
jmp
pop
shrb
lea
pop
dec
sub
dec
cmpsl
mov
sbb
leave
xchg
in
cmpsb
fs
jmp
ror
sub
sar
inc
jnp
lods
jl
call
add
mov
nop
jle
aas
ss
mov
into
lds
sub
cmp
add
jns
mov
lcall
mov
in
jb
nop
add
inc
push
cmp
call
cmp
iret
std
lahf
je
xchg
push
mov
sbb
mov
mov
xor
cld
mov
cmpsl
sub
lret
insl
and
hlt
or
shrb
xchg
shl
adc
lret
jno
add
outsb
mov
add
pop
daa
je
mov
std
jno
xor
lea
mov
xor
stc
fs
pop
or
cmpsb
cmp
enter
enter
jp
mov
test
aam
xchg
aad
inc
fs
mov
xlat
mov
inc
xor
xchg
cmpl
into
imul
xchg
fstl
sbb
push
jae
mov
adc
inc
iret
out
rcr
andl
jp
mov
sub
dec
jp
cmp
dec
jmp
push
and
inc
addr16
pop
in
div
or
cmp
xchg
testl
orl
mov
in
in
insl
push
xor
int3
stc
push
xchg
sub
cmc
sahf
jecxz
out
push
loope
fcompl
icebp
add
mov
mov
fsts
xor
lret
mov
and
add
movl
jnp
mov
sub
aad
popa
or
cltd
push
jg
je
jmp
xor
int
mov
mov
sti
lock
ffreep
mov
cltd
fsubr
divb
pusha
pop
icebp
adc
std
xlat
mov
inc
mov
loop
lcall
mov
pusha
sbb
loop
or
into
pop
mov
jecxz
add
in
inc
add
lcall
cld
lods
push
xchg
outsb
stos
dec
cwtl
sbb
movsl
jl
leave
fsubl
mov
outsb
lahf
nop
push
lods
cwtl
enter
adc
rcrl
adc
test
sub
push
in
sbb
push
jecxz
mov
mov
movaps
imul
mov
dec
fadds
cwtl
aad
test
jo
push
push
adc
shrl
and
fwait
cmp
sbb
cmc
cwtl
sub
inc
insl
inc
dec
push
cmp
das
sbb
ret
jnp
adc
push
push
in
pop
imul
jg
mov
cs
cld
lods
and
xchg
mov
and
testl
leave
lahf
or
xchg
lret
out
xor
shrl
cmp
or
pop
scas
pop
cmp
mov
ret
mov
pusha
repz
pusha
cmpsl
and
mov
mov
lcall
xor
movsb
ja
mov
dec
scas
lods
pop
dec
inc
inc
divl
testb
pop
std
ret
in
inc
sbb
add
jae
mov
jmp
fwait
lcall
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
lret
lret
jmp
fwait
lcall
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
lret
lret
jmp
fwait
lcall
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovu
lret
cli
jmp
fwait
lcall
pop
pop
dec
loopne
jp
sbb
push
call
pusha
fcomps
shlb
test
cwtl
shrb
js
dec
loopne
nop
sub
sbb
inc
clc
jo
pusha
fcoms
test
mov
shrb
sbb
cmpb
dec
mov
clc
jo
pusha
fcoms
test
mov
rol
sarb
into
pop
clc
insl
jecxz
jp
sbb
call
adc
mov
negb
jo
sbb
nop
mov
add
fcmovu
mov
in
daa
cmp
test
mov
fsubs
sub
jge
gs
pop
xchg
aam
pop
pop
dec
test
lret
ljmp
adc
enter
xchg
stos
xchg
mov
clc
aad
pusha
xchg
adc
add
fcoms
test
dec
shlb
jge
or
call
xchg
scas
or
sbb
daa
stos
test
and
rclb
sbb
divl
pop
aaa
scas
andb
ffree
xor
sbbb
pop
lods
cmp
enter
inc
clc
jo
pusha
fcoms
test
mov
shrb
js
dec
loopne
nop
sub
jno
xchg
clc
adc
les
push
popa
enter
or
and
hlt
or
pop
push
call
add
fdivl
jmp
cwtl
mov
ret
sub
push
ret
dec
cmp
popa
mov
xor
sarb
loopne
nop
sub
sbb
inc
clc
jo
pusha
fcoms
test
mov
shrb
js
dec
loopne
nop
sub
sbb
in
lret
jp
lahf
lret
add
idivb
pop
mov
shll
cmp
sbb
dec
mov
dec
push
inc
mov
pusha
sbb
fiadds
push
das
cltd
inc
add
add
push
stos
mov
mov
rcll
xchg
push
pop
aam
shll
mov
pop
jae
out
jmp
leave
addl
popl
adcl
sub
adc
rep
adc
mov
test
push
stc
fldt
xor
xor
xor
fadd
sbbl
xchg
xor
and
inc
cltd
sarl
and
xchg
sbb
insl
sbb
movsb
out
jb
aad
or
jmp
in
cmpsl
loop
ss
jae
movl
mov
or
xor
mov
push
xor
fiadds
dec
sbb
rclb
fisttps
inc
or
cmp
jp
sbb
xchg
jle
ss
clc
adc
and
call
clc
xchg
out
ja
test
cmp
and
int
ja
push
xchg
sti
xchg
je
pop
das
lds
outsl
pushf
jne
paddsb
test
data16
cli
int
add
test
cs
ds
les
fiaddl
fsts
iret
sahf
push
dec
dec
js
mov
jae
or
cmp
add
xor
ljmp
jg
out
pop
inc
or
nop
add
push
xchg
dec
mov
loope
dec
adc
loope
scas
adc
sbb
cmp
pusha
shlb
xchg
add
sub
inc
sbb
mov
sbb
and
cmp
and
xchg
push
mov
pop
jp
out
xchg
aad
adcl
mov
cwtl
xor
mov
lock
fwait
add
out
pop
xor
xchg
stc
les
popf
xor
lcall
sub
and
mov
and
int3
push
fs
insb
mov
inc
dec
iret
ljmp
cltd
adc
mov
leave
sbb
iret
mov
mov
adc
scas
cwtl
insl
jle
lret
xor
xchg
in
jbe
repnz
xor
ficoml
cld
mov
and
repnz
dec
shrl
adc
out
les
in
insb
pop
push
xor
push
gs
sub
test
callw
lret
ret
mov
xchg
aam
int3
loop
adc
pop
loopne
sbb
outsl
xor
xor
pop
in
shll
or
inc
leave
cmp
iret
jns
test
mov
cmc
inc
adc
cmpl
or
pushf
and
push
cld
es
setno
pop
cmpsb
cwtl
clc
fdivp
mov
mov
pop
in
inc
add
jge
xor
sub
dec
popa
push
sbb
sub
stos
pop
mov
out
out
cld
lods
inc
and
jb
and
sbb
shlb
nop
add
stos
mov
popf
add
pop
xchg
or
test
aaa
add
iret
and
mov
loopne
fcmovb
lret
or
stc
iret
dec
lods
ss
out
enter
pushf
stos
rcll
fstp
movsl
push
xchg
in
outsl
jecxz
and
adc
add
aaa
in
xlat
sub
sbb
stos
movb
jp
les
sub
xor
clc
lock
adc
xchg
test
mov
ja
aam
mov
lods
pop
and
mov
shll
xlat
jle
fists
cltd
lcall
ret
dec
cmp
mov
out
sub
sbb
add
mov
test
xorb
xchg
xchg
jb
xor
lea
adc
pop
mov
mov
jge
xchg
loop
fmulp
sub
std
mov
sbb
cld
mov
fnstcw
pop
sub
adc
into
dec
or
sub
inc
pmullw
mov
cmc
pop
repz
xchg
cmp
mov
fs
xor
hlt
and
xor
and
pop
jns
loop
pop
mov
inc
lahf
in
sbb
leave
popf
mov
cmpsb
stc
mov
fwait
mov
push
jecxz
popa
dec
out
bound
push
push
add
sbb
in
popa
cmpsl
mov
sarl
fisttpll
icebp
jmp
test
dec
out
cmp
imul
stos
and
or
push
mov
fildl
mov
xor
leave
inc
push
or
inc
iret
ret
push
sub
xor
out
ja
sbb
sbb
xorl
sti
dec
adc
push
cmpsb
les
xchg
and
jne
hlt
movntps
cmpsl
pop
cli
loope
or
and
pusha
sbb
int3
mov
call
push
pop
rcrl
jmp
in
ljmp
jae
daa
xchg
dec
adc
jmp
mov
mov
popf
je
lret
mov
fnstenv
push
adc
icebp
cmpsl
sahf
out
mov
ds
push
insl
imul
nop
xlat
push
mov
gs
xchg
and
pop
es
dec
stos
div
lods
and
out
jns
stc
add
pop
sahf
std
push
adc
jo
jb
xchg
lcall
xor
clc
xlat
jmp
les
add
lcall
mov
std
or
push
orb
or
loope
push
push
sti
stos
test
pop
cmpsl
xchg
xlat
repnz
out
sbb
fdivrs
sbb
loopne
ja
adc
mov
jle
gs
scas
lds
std
lods
mov
lret
jecxz
mov
and
mov
shrl
call
xor
imul
mov
fcmovu
imul
fwait
xchg
sbb
mov
imul
sbb
mov
ret
rcl
loop
xor
in
cld
push
mov
mov
cmc
out
inc
sbb
outsb
scas
mov
loope
mov
cmp
push
in
sarl
add
mov
mov
jbe
in
pop
mov
ja
xchg
cs
imul
jg
and
or
sbb
or
mov
jno
rorb
adcb
in
xchg
sbb
fcoml
es
lods
inc
xchg
cs
mov
cmp
add
pushf
shll
push
mov
pop
in
sbb
addr16
or
aad
mov
sub
stos
shrb
push
fcompl
pop
dec
int3
iret
call
ret
or
or
jle
ret
mov
movsb
push
push
bound
movsl
arpl
sub
xchg
in
popa
mov
or
loop
and
jns
daa
mov
stos
fscale
int3
insb
clc
xchg
dec
inc
mov
inc
and
dec
fwait
mov
scas
cmc
aam
andb
mov
mov
inc
xchg
cmp
int3
push
dec
clc
shrb
lahf
sub
mov
dec
fdivl
xchg
push
and
and
xor
xchg
push
orb
mov
pop
mov
add
daa
pop
add
mov
enter
mov
rcr
lds
inc
mov
dec
pop
push
mov
leave
lods
jnp
repz
decb
fsubrp
push
les
jp
or
shr
andl
adc
xchg
insb
dec
imul
inc
push
shll
cs
pop
sub
mov
mov
xchg
imul
push
mov
leave
adc
pop
cmp
mov
in
xchg
ficomps
and
ret
pop
cmp
aas
imul
fwait
out
je
push
pusha
pusha
lock
insl
fistl
adc
cwtl
fimull
outsb
lock
xor
jne
jo
jp
je
mov
imul
jnp
add
stc
out
fadd
inc
aad
dec
xchg
adc
out
push
pop
enter
sub
fcom
xchg
xor
mov
addr16
call
dec
dec
enter
pop
push
cmp
test
rclb
xchg
and
mov
xchg
sbb
or
stc
mov
xlat
cmp
es
push
clc
fistps
aad
push
dec
fistl
cmp
jmp
xchg
sub
jg
call
fsubs
les
cltd
mov
ss
mov
scas
inc
dec
icebp
xchg
das
addb
sub
and
cwtl
mov
mov
fisttps
xor
jae
adc
daa
test
lcall
sahf
popa
push
sub
inc
xor
and
mov
enter
cmp
adc
dec
xor
leave
ret
call
sub
add
dec
inc
lea
shl
pop
dec
imul
and
imul
bound
and
dec
arpl
fwait
out
xchg
lcall
xchg
push
cmp
xchg
cmp
mov
xchg
push
dec
int
sbb
clc
mov
mov
dec
clc
push
pop
rcrl
jmp
stos
ljmp
and
aaa
subb
xorl
sbb
dec
inc
int3
lret
add
cmp
adc
scas
jmp
cmp
out
or
aad
mov
aad
jp
and
mull
int
aam
gs
jl
test
inc
cmc
ljmp
add
inc
inc
adc
push
or
pop
add
dec
and
fldcw
sub
lods
dec
pop
lahf
aas
cmpsb
push
sti
aad
daa
addr16
popa
mov
xchg
ss
lock
dec
in
jns
sub
jbe
xchg
imulb
mov
andb
sbb
mov
pop
lcall
mov
call
dec
push
outsl
adc
xlat
inc
frstor
jmp
testl
mov
mov
cwtl
ficoml
in
cs
ljmp
lock
push
adc
out
push
bound
outsl
sbb
subl
pop
mov
or
mov
shll
mov
sbb
fcompl
lock
xor
sahf
push
ret
cwtl
add
mov
and
sub
adcb
push
add
imul
addr16
popa
and
ljmp
lahf
push
mov
nop
push
push
push
or
sub
push
gs
outsb
cli
add
jbe
in
pop
ficoml
add
inc
cmp
mov
mov
xchg
xlat
jns
sbb
lods
mov
jmp
inc
lods
jl
mov
jmp
mov
mov
pop
xor
pop
pop
add
and
inc
in
nop
pop
add
ja
icebp
push
jnp
jp
aam
fwait
xor
and
leave
xchg
inc
outsl
fstpl
aas
sub
add
in
clc
inc
push
ljmp
fidivs
pop
lret
push
mov
in
mov
pusha
add
sub
cmp
mov
ret
add
ljmp
and
call
fnstenv
inc
ret
cmp
fsubl
inc
rcll
shlb
lret
cmpsb
cmpsl
clc
loop
pop
insb
fidivl
pop
mov
sbbl
pop
jl
into
inc
in
sbb
add
xchg
cmp
mov
in
dec
dec
cmpsl
mov
lods
das
push
icebp
lcall
ja
and
leave
imul
in
outsl
sub
out
sub
and
pop
sarl
inc
pop
cmpsl
loopne
mov
clc
fsubrs
gs
neg
xor
mov
push
inc
xchg
pop
mov
xlat
mov
pushw
sbb
push
jne
mov
negl
test
mov
iret
inc
insb
sub
loop
push
jnp
cmpsl
test
rorl
ja
nop/reserved
call
ja
jno
xchg
mov
cmp
out
aaa
push
inc
fimull
fsubr
jg
xor
aaa
xchg
leave
dec
addb
adc
adc
hlt
pop
rcl
jp
jle
test
lahf
cmp
ljmp
xchg
mov
cmp
fistpll
roll
arpl
daa
xchg
mov
ret
nop
daa
jmp
in
push
xchg
aaa
jg
test
mov
jo
or
lret
xor
loopne
das
sbb
or
xor
stos
ret
lds
add
cli
mov
push
sub
mov
adc
inc
cmp
inc
pop
mov
dec
lret
push
push
jbe
ret
lret
inc
pushf
jmp
inc
jp
and
mov
cmp
in
pop
sbb
xor
add
mov
insb
sub
out
cmp
jns
adc
mov
mov
sub
ror
pushf
pop
pop
sbb
and
insl
dec
cmp
xchg
enter
int3
lcall
jnp
fsubl
sbb
push
cltd
sbb
hlt
in
jae
subb
mov
fdiv
icebp
dec
lds
insl
pop
xchg
pop
mov
mov
xchg
pop
or
mov
mov
xor
int
sbb
sarb
subb
lods
test
or
lretw
into
jno
or
xchg
in
cli
mov
loop
mov
lods
jns
outsl
xchg
jge
arpl
call
xor
test
jp
mov
push
sti
ljmp
sbb
popa
add
das
gs
out
pop
mov
daa
dec
xchg
sub
shr
in
ja
cli
jmp
add
in
leave
aas
ror
addr16
add
jns
loop
jbe
sahf
push
lahf
sbb
out
and
xchg
ret
sub
cmp
in
andl
jbe
ret
jmp
mov
in
rcr
rolb
vstmxcsr
pcmpgtb
mov
call
cmp
mov
outsl
mov
jl
scas
imul
pusha
scas
xchg
cs
sbb
popa
jmp
dec
mov
sbb
or
push
aas
xchg
or
enter
sbb
sub
jb
out
testl
in
cmpsl
inc
xchg
popa
repz
test
jbe
gs
push
push
mov
xchg
fcmovnbe
cmc
adc
cmpsl
fldl
iret
pop
and
pop
mov
or
xor
jb
ret
jg
xor
jnp
jb
or
xor
imul
insl
xor
cmpsl
push
call
loopne
ljmp
sbb
in
and
fldenv
hlt
mov
xchg
pusha
ss
in
arpl
add
jae
jl
out
adc
pop
mov
pop
mov
adcb
mov
ds
cltd
inc
xchg
and
pop
lods
int3
aas
clc
inc
leave
fidivs
sti
iret
loopne
out
xlat
adc
xor
pop
divl
inc
lret
xchg
pop
mov
in
dec
repnz
loopne
push
scas
call
dec
xchg
hlt
jno
popa
data16
adcl
xor
sahf
mov
or
movsl
xor
pushf
sub
rclb
sub
cmpsb
inc
out
pop
lret
test
bound
test
sub
xlat
jecxz
int
adcb
sbb
test
stos
arpl
push
je
mov
fiaddl
xchg
inc
jp
dec
pop
fwait
ret
push
push
gs
push
shrb
addr16
test
cmc
cmpsl
inc
mov
clc
out
popa
cmp
cmpsb
cmp
sub
pop
int3
jle
and
jle
mov
sbb
cltd
add
xchg
push
inc
cmp
mov
cltd
movsb
aad
in
dec
xor
in
in
mov
push
sti
inc
sbb
decl
or
and
and
pop
sub
cmpl
clc
inc
mov
rcrb
pop
and
inc
aaa
mov
mov
push
jae
lcall
inc
scas
push
inc
jne
jmp
jg
pop
add
addl
ljmp
adc
in
jnp
test
fstpl
arpl
xlat
andl
aas
dec
push
adcl
mov
mov
mov
add
daa
cwtl
dec
outsb
fdivs
add
int3
mov
cmp
stos
je
inc
xchg
mov
loope
xor
dec
repz
outsl
xchg
adc
xlat
push
or
lret
lahf
test
cmp
jbe
std
out
jle
aas
inc
cli
fadds
fnstsw
lock
mov
pop
gs
sti
fiadds
shll
lods
filds
sub
loopne
sbb
sti
sbb
popf
leave
test
add
sub
rorl
inc
cmp
jne
add
fsubl
adc
jp
pop
mov
xlat
push
lods
pop
push
lods
dec
pop
movsb
mov
sahf
insb
cli
push
cmc
cmpb
or
add
rcrb
cmp
sub
add
sub
push
js
inc
and
mov
push
mov
subb
rcll
add
in
mov
sbb
loope
mov
dec
out
mov
cltd
fwait
lds
stc
inc
mov
cmpsl
adc
aaa
cwtl
ss
sahf
inc
jg
pop
stos
sub
pop
jecxz
mov
mov
add
scas
rcr
xor
das
outsb
sbb
stos
sbbl
add
jo
sarl
test
aas
sub
push
jno
loop
adc
or
xchg
xlat
ror
subl
jno
decb
mov
xchg
out
call
or
test
movsl
sbb
fsubrs
fcmovnu
enter
je
out
setns
out
pop
test
in
jecxz
scas
pop
push
sub
cmp
lcall
fnstenv
inc
mov
out
pop
cmpsb
int3
stos
push
jle
lods
push
mov
decl
add
pop
mov
mov
bnd
mov
clc
jno
orl
mov
mov
das
xchg
jo
push
mov
data16
test
lds
loopne
inc
cmp
xchg
fs
xor
popa
jo
xchg
mov
adc
int
xor
mov
sbb
pop
push
enter
lds
and
dec
xchg
mov
mov
mov
shll
add
hlt
and
sbb
mov
jg
pushf
loopne
dec
mov
adc
vorps
mov
jl
push
fistl
cmp
and
pop
enter
sub
xor
or
out
mov
lods
stos
sub
pop
shr
and
andb
cli
rorb
inc
imul
dec
cmp
mov
js
add
adc
movsl
mov
mov
jl
in
aam
ret
popf
clc
jb
jp
xchg
lods
push
cltd
cmpsl
js
dec
inc
pop
mov
addr16
inc
mov
cli
mov
cmp
add
shlb
mov
inc
mov
scas
js
mov
lock
mov
pop
bound
mov
or
in
or
xlat
nop
fsubrs
call
jl
push
push
ljmp
adc
data16
mov
into
jle
push
ljmp
cld
and
ret
and
inc
jb
fnstenv
imul
jl
les
stc
inc
cmp
in
in
cli
lret
pusha
lahf
xor
mov
lret
xor
inc
xor
pop
and
dec
pusha
or
pusha
xchg
sub
sahf
call
shlb
jmp
es
xchg
out
divl
jbe
mov
js
outsb
mov
insl
ret
mov
pushf
and
mov
or
enter
es
inc
test
addr16
mov
and
adc
add
fcmovbe
xchg
lods
dec
mov
fcoms
mov
dec
mov
and
mov
xchg
sub
rcll
add
aam
stc
repz
inc
or
mov
sbb
xchg
ret
scas
sub
inc
adcb
aad
nop
push
jmp
mov
mov
lock
jb
inc
and
xchg
lret
out
lods
push
cltd
add
in
inc
jne
mov
imul
adc
nop
aaa
add
fistl
xor
sbb
loop
push
iret
jle
ja
sbb
mov
mov
fwait
xlat
aaa
mov
cmp
sbb
rcll
add
repz
cmpsl
inc
into
or
loope
dec
mov
repz
shlb
aam
mov
xchg
push
outsl
dec
push
sub
jg
push
cmp
ja
mov
out
jg
les
dec
popf
fucomp
mov
mov
fldcw
push
xorl
cltd
inc
push
shll
add
lds
inc
mov
ljmp
cmp
insb
shlb
mov
mov
inc
mov
stc
and
mov
out
or
mov
shl
add
xchg
test
shrb
mov
sub
aas
popf
pop
aaa
add
xor
mov
mov
and
pop
mov
ret
xchg
decl
adc
pop
push
pop
xchg
dec
add
cld
shrl
fwait
pushf
icebp
or
sbbb
stos
sub
pop
js
lods
ret
out
add
int3
inc
sbb
mov
vmovaps
mov
xchg
dec
imul
pop
movsb
loopne
push
inc
jp
js
jl
aas
add
loop
pusha
fcoms
test
mov
shrb
js
dec
loopne
nop
sub
sbb
inc
clc
jo
pusha
fcoms
test
mov
shrb
js
dec
loopne
nop
sub
sbb
inc
js
dec
pusha
fcoms
test
cmp
mov
cwtl
shr
sarb
loopne
nop
sub
sbb
inc
clc
jo
pusha
fcoms
test
mov
shrb
rcrb
loopne
out
or
dec
negl
push
sbb
sub
es
iret
lods
scas
mov
clc
out
call
aas
cmp
sub
dec
pop
jg
outsl
sbb
xchg
scas
test
stos
stos
lret
out
call
mov
inc
pop
push
push
pusha
xchg
jb
cwtl
jecxz
fld
into
xchg
xchg
mov
pop
push
das
js
pop
pop
dec
aam
or
lods
inc
mov
mov
and
add
mov
pop
ficoms
pop
xor
mov
sbb
jbe
call
pop
xchg
jle
bound
dec
test
arpl
or
arpl
dec
push
xor
inc
rclb
and
jno
clc
mov
pop
inc
ja
inc
jp
pop
pop
mov
jle
insl
in
mov
jbe
inc
push
and
ljmp
test
cwtl
int3
cmp
pop
fbstp
inc
lods
adc
iret
fsubrs
out
jl
rorb
cli
jns
cmp
ja
mov
lock
sub
nop/reserved
and
pop
pop
or
js
jno
cwtl
sbb
mov
rcl
jmp
mov
insl
sbb
jnp
inc
dec
xor
sub
or
out
mov
mov
test
jno
popa
js
in
ss
cs
adc
pop
cmpsl
in
into
in
fcmovu
ret
stos
lods
test
enter
pushf
insl
sbb
dec
pop
outsb
insl
sbb
dec
jg
outsl
push
mov
fmul
enter
call
aas
cmp
sub
dec
dec
jg
outsl
push
mov
fmul
enter
call
xchg
mov
and
pop
mov
ja
add
je
mov
pop
or
sbb
fs
fs
adc
sub
inc
pop
cmp
ja
dec
insb
cmp
mov
cmp
mov
fsubs
and
adc
and
iret
test
stos
cmpsb
jnp
adc
icebp
faddp
outsb
test
stos
add
cmp
imul
es
or
cld
dec
mov
adc
shll
push
adc
xor
std
mov
pop
in
sub
daa
int3
call
dec
mov
int
cmpb
or
cmc
mov
mov
cmp
mov
inc
add
cld
sar
jb
pusha
push
pop
or
test
push
popa
jmp
pop
lods
adc
mov
lock
std
push
pusha
jle
fwait
add
lds
js
addr16
sbb
pop
mov
dec
out
mov
xor
or
xor
and
aaa
and
jl
out
insb
loope
dec
adc
sbb
dec
testb
ret
aas
scas
cmp
jne
cmpsl
mov
pop
imul
sti
and
scas
xchg
rcrb
jg
scas
fcoml
mov
add
jno
cmp
fistpl
push
lods
adc
add
xchg
mov
lock
popf
js
xchg
cmpsb
adc
lahf
lods
int3
mov
xchg
out
fisttpll
dec
pop
stc
in
lods
rclw
out
mov
enter
mov
xor
mov
or
xor
dec
movsl
mov
jp
cmp
mov
popa
in
sbb
and
sub
movsb
inc
xorb
notb
mov
outsb
and
movsb
push
pop
push
adc
mov
pop
mov
adc
cmpsb
sub
popa
xor
icebp
aam
mov
test
ljmp
jl
sbb
je
aam
push
cwtl
cmp
sub
js
stos
xchg
test
mov
aaa
iret
cltd
mov
inc
rorb
dec
sub
push
leave
aad
insl
mov
xchg
fs
lea
mov
loopne
xor
adc
cmp
scas
bound
mov
pop
inc
aam
inc
add
dec
pop
es
stos
lods
push
fstps
sar
sbb
or
push
lea
les
sub
arpl
jae
adc
dec
pop
lret
jmp
pop
popa
shll
stos
pop
fists
add
lea
xchg
aam
cmp
push
leave
iret
dec
mov
adc
push
inc
sub
mov
ds
je
aaa
mov
sbb
push
mov
push
sbb
int3
mov
adc
imul
sbb
cmp
int
xor
inc
sti
sbb
lods
mov
adc
fmull
sub
add
fistl
nop
or
cmp
xchg
cpuid
inc
mov
lds
movsl
inc
and
gs
jnp
sub
push
loopne
in
cmp
ficoml
out
xor
and
call
push
pusha
cmp
fneni(8087
fcom
divb
imul
gs
ja
ficoms
sbb
lock
icebp
push
negb
jecxz
out
pop
sbb
ljmp
adc
push
pop
and
and
out
loope
jecxz
xchg
aam
jb
sub
orb
add
aam
leave
push
lahf
add
popf
shrl
adc
or
gs
xorl
divb
into
lea
js
jae
adc
inc
les
imul
adc
mov
adc
daa
out
lds
push
mov
ja
xlat
out
test
rolb
repz
push
daa
fisubrl
sub
ss
out
lret
movzwl
dec
insl
ror
xor
lret
jmp
xchg
cs
dec
xchg
xchg
movsb
fucom
ret
push
push
mov
sub
sbb
mov
clc
movsl
fs
push
jae
mov
mov
and
aam
add
pop
and
outsb
jecxz
sub
mov
insb
or
std
add
jg
mov
sbb
das
mov
mov
test
jg
push
out
mov
repz
mov
mov
out
jb
daa
es
jno
mov
push
pop
push
imul
push
dec
in
inc
cmp
stc
movsl
jmp
and
and
xor
jecxz
jg
pop
push
jp
movsl
lods
xchg
pushf
xor
dec
repnz
les
add
mov
fbstp
aas
cvtpi2ps
pop
test
out
mov
jne
and
mov
pushf
jno
jecxz
popa
xlat
into
stc
xor
dec
pop
sub
inc
inc
cmp
mov
test
xchg
sbb
lcall
lods
pop
in
or
test
mov
jo
or
insl
xchg
pop
andb
inc
arpl
incl
mov
cmc
les
sbb
jo
in
mov
js
loopne
dec
add
sbbb
pop
xlat
leave
cmpsl
je
cmpsb
iret
aam
and
pop
jg
jo
popf
xchg
movb
or
lret
dec
data16
int
cltd
scas
cltd
push
add
pop
les
inc
xor
out
and
or
pop
pop
mov
push
xor
dec
vsqrtsd
jns
shlb
filds
lahf
and
cmc
clc
pop
sbb
into
xlat
mov
int3
jnp
xchg
xchg
mov
sarl
xchg
xor
inc
imul
lret
sbb
or
mov
scas
adc
xchg
push
mov
cmc
sbb
push
fistpl
or
add
movsl
rclb
in
sub
cs
inc
xchg
cmc
cmp
mov
mov
in
test
dec
xchg
mov
sahf
int
les
aam
addl
call
fcmove
pop
jecxz
sti
mov
xchg
xchg
fldl
mov
mov
or
cmp
in
and
fcmovne
lcall
nop
out
jmp
rclb
fnstsw
ss
clc
adc
xor
mov
mov
mov
xchg
mov
bound
cmp
loope
lret
inc
xor
movsb
mov
test
cwtl
lea
mov
es
cmp
js
xor
dec
lahf
lcall
xchg
movsb
insb
sbb
adc
mov
xorb
xor
cmp
sub
loop
xchg
lret
leave
xchg
sbb
orl
out
fsub
xchg
cmp
xchg
int
je
idivb
xchg
push
lret
xchg
xchg
sbb
jg
sarl
jl
mov
mov
dec
or
mov
cmpsl
inc
sahf
in
mov
fs
lret
loop
dec
xor
out
inc
xchg
iret
pop
pop
sbb
adc
sbb
fmull
dec
add
or
cwtl
iret
jbe
scas
fdivr
fldenv
pop
mov
ror
in
mov
outsl
mov
mov
sub
insl
icebp
mov
mov
push
insl
push
pop
outsl
out
sbb
cmp
add
inc
jns
addl
shlb
or
scas
out
xchg
fisubs
push
mov
inc
xchg
pop
xor
cs
repnz
cmp
rcrl
push
jb
leave
jmp
jo
add
sti
jbe
pop
test
rolb
xchg
mov
pop
cs
cs
jo
inc
lret
push
adc
or
mov
les
lods
sbb
loop
ret
dec
mov
outsb
insb
mov
jg
testl
std
loopne
and
dec
xchg
adc
popf
cmpsl
cmp
repz
jp
mov
adc
out
jmp
shrl
push
add
pop
or
fistps
es
sbb
cli
subb
ret
movsb
andl
mov
mov
data16
push
sbb
xchg
sub
stc
dec
lods
mov
nop
aas
leave
xor
cwtl
hlt
xchg
mov
inc
mov
pop
inc
xor
mov
inc
or
test
xchg
fsubp
xor
popf
lock
adc
insl
imul
movd
int
mov
xchg
mov
mov
frstor
dec
xor
lds
mov
das
hlt
imul
repz
ffree
in
fwait
jne
add
push
jne
add
or
test
jo
xchg
mov
add
lods
arpl
dec
call
fcoms
repz
fnstcw
jge
rorl
push
push
idivb
and
cmp
sub
arpl
xchg
cmc
push
icebp
jns
jne
mov
dec
lds
loope
dec
sbb
icebp
sbb
rcrl
mov
push
int
xchg
cmp
pop
cmpsl
or
dec
xchg
enter
inc
lods
push
push
jne
mov
cmp
push
cmp
sahf
dec
xor
adc
mov
mov
stc
repnz
and
adc
scas
mov
and
xor
daa
mov
jb
lds
in
inc
bound
stc
add
repnz
lods
nop
arpl
mov
ja
jae
jg
rcl
inc
sub
ss
push
push
inc
shr
xchg
aad
lds
cmp
xchg
mov
test
int
or
cmp
push
fcompl
dec
das
dec
ds
xlat
xchg
jmp
aad
mov
inc
sub
out
cmpsb
add
push
mov
mov
add
imul
std
push
mov
lahf
fsubs
clc
sub
cmp
pop
mov
cli
jbe
pop
sti
push
xchg
jmp
or
xor
repnz
push
ljmp
adc
or
push
dec
nop
xlat
jne
cmpb
pop
arpl
mov
sub
cmpsl
inc
ret
or
sbb
call
jo
mov
lea
xchg
add
leave
pop
std
nop
outsb
int
xchg
jne
popf
jmp
subl
scas
inc
insb
inc
loop
dec
sub
jns
cs
lea
pop
pop
cmpsb
gs
lods
sub
sbb
clc
mov
push
dec
push
ret
sub
mov
movb
push
xchg
ret
stc
ret
pop
and
cmp
cs
sub
jg
dec
mov
dec
sub
xor
jo
stos
push
xlat
push
xchg
arpl
and
dec
fsubs
pop
add
js
aad
lods
test
push
bswap
scas
hlt
mov
imul
ret
arpl
adc
mov
xlat
mov
cmpsl
pushf
test
lock
sub
pop
adc
xchg
das
das
inc
jne
jl
pop
lret
shrb
mov
or
popa
cmovg
clc
sbbb
call
pusha
imul
outsl
sti
cli
mov
in
jmp
cli
mov
daa
dec
mov
sbb
fbstp
dec
pop
movsl
pushf
sub
out
add
xlat
adc
jnp
ljmp
inc
nop
inc
jmp
pop
call
cmp
cmpsl
popf
popa
inc
sbb
into
xchg
adc
push
add
cli
xor
fmull
adc
popa
cli
test
push
testl
sbb
cmp
test
or
fildl
outsb
xchg
jp
shlb
adc
pop
in
in
out
je
mov
or
clc
add
push
sub
sub
pop
mov
pop
shll
sbb
je
fwait
mov
jbe
mov
movsl
icebp
ss
aad
mov
outsl
insl
jae
pop
js
mov
adc
mov
sbb
mov
add
sub
pusha
int3
or
clc
sbb
lahf
lds
xchg
outsl
pop
inc
pusha
lds
inc
inc
dec
test
mov
ficomps
jnp
gs
add
push
movsl
bound
inc
popa
inc
pop
xor
lods
in
or
adc
mov
imul
gs
mov
out
push
out
and
out
scas
jns
jno
addr16
mov
pusha
pop
jnp
sahf
mov
cmpsl
mov
sarb
movsb
mov
push
aam
cltd
popa
push
mov
inc
pop
ja
mov
pusha
clc
mov
cli
cmp
dec
add
xchg
mul
js
cld
xor
cltd
rcll
xchg
mov
pop
out
imul
rclb
dec
ret
insb
xchg
test
pop
jns
jbe
mov
push
mov
inc
lcall
std
pop
mov
jle
cld
sub
aaa
dec
sbb
lods
push
mov
jge
gs
test
inc
cmp
sbb
sub
lock
mov
out
or
loop
xchg
cltd
minps
movsb
pop
movsl
push
push
dec
adc
subl
ja
pop
mov
leave
push
ds
cmp
mov
inc
stos
loope
lods
lcall
imul
push
jl
sbb
loop
stos
mov
xchg
sub
popa
rcl
xor
and
lahf
mov
cmc
loopne
adc
mov
jae
lock
push
lods
jns
xor
iret
and
jp
leave
dec
imul
push
push
add
sbb
fstpt
push
ljmp
int
bound
pusha
or
repnz
sub
cmp
daa
faddp
mov
outsl
fimuls
cmp
icebp
push
stos
fs
mov
push
sbb
add
or
mov
pop
clc
js
enter
adc
push
fmul
fs
xchg
imul
pusha
lret
sbb
pop
xlat
repnz
sub
rcrb
jne
mov
mov
test
and
mov
fstps
jmp
testb
jb
cmp
std
pop
test
test
shrb
roll
lret
addr16
or
rcrb
adc
lods
xchg
adc
sub
or
adc
clc
xchg
jg
int3
repnz
loopne
je
jp
sub
pop
sahf
xor
xchg
outsb
xchg
add
dec
shll
movsb
inc
mov
mov
mov
mov
mov
sub
push
imul
cmp
gs
fiadds
out
movsl
insl
fistpl
push
in
and
orb
and
push
cmp
mov
rorl
repz
lahf
loop
imul
lcall
test
add
mov
and
mov
daa
and
ret
lea
sbb
jo
decl
les
dec
lods
ret
rolb
lahf
test
mov
lds
addr16
and
fisttpll
cs
dec
and
cli
or
push
stc
xor
int3
mov
xor
jbe
shl
data16
in
das
out
imul
mov
sub
ds
cmpsl
fcoml
push
add
scas
shll
xlat
andl
push
pop
sbb
insb
int
sbb
xor
jmp
adc
stc
rorl
lods
jp
in
ds
mov
mov
in
daa
fists
inc
xor
in
adc
lea
jbe
jns
cmp
jg
pop
sub
inc
pop
inc
push
push
rorb
mov
outsb
jmp
cmpsb
scas
mov
or
stc
lds
ret
sub
rcll
sub
je
sub
adc
jb
mov
icebp
stos
es
lahf
sbb
sub
sub
ficoms
out
dec
sub
jg
push
mov
or
inc
bound
lcall
mov
addl
mov
sub
pop
xchg
dec
or
sub
leave
sub
jge
jge
adc
cs
xchg
andl
dec
jp
xchg
jns
stc
push
pop
inc
daa
lret
mov
mov
call
cmp
fcomps
pop
outsl
inc
cltd
iret
mov
js
push
and
mov
test
shlb
inc
inc
out
in
mov
repnz
mov
xor
xchg
hlt
cmp
mov
and
pop
dec
xchg
mov
data16
adc
inc
dec
adc
push
scas
lret
shlb
inc
add
clc
lcall
je
out
dec
out
repnz
js
gs
aaa
sahf
adc
jecxz
cmp
cmp
and
jl
xor
cmc
stc
hlt
imul
cli
aas
mov
aad
je
test
dec
sub
imul
les
sub
sub
and
push
cmp
jge
ficoms
jbe
mov
mov
pop
std
loope
xchg
sbb
call
sub
adc
cs
add
xor
popf
pop
lods
orl
add
jge
or
mov
fdivl
cwtl
push
push
mov
repnz
movsb
test
sarl
and
cs
jle
jae
cmp
sbb
rep
jecxz
xor
ja
sub
lods
pop
mov
pop
ret
mov
push
fmull
pop
insl
pusha
pop
xor
scas
pop
cmp
negb
inc
imul
dec
cmc
dec
jge
mov
incb
pop
sbb
cmp
rcrb
push
outsb
fimull
enter
or
shll
rclb
mull
xchg
push
es
and
inc
inc
jp
aas
jmp
mov
mov
xor
in
loop
push
shrd
fldl
ficompl
and
sbb
sub
mov
test
pop
lea
ret
cmpsl
mov
lods
or
jne
insl
xor
cmp
cmp
leave
dec
sub
insb
inc
adc
test
xlat
mov
jbe
repz
pop
or
or
pop
cmp
icebp
insb
loopne
shll
dec
cmp
xor
mov
add
fnstcw
sbb
in
dec
and
imul
mov
scas
lret
jne
in
sub
jmp
arpl
push
mov
lods
push
pop
shll
test
pop
adc
stos
adc
xchg
jmp
add
xchg
imul
sbb
xchg
ds
fiadds
xchg
mov
js
and
sahf
push
ret
jae
add
jbe
sub
mov
fwait
lret
pop
xchg
rclb
or
adcl
lcall
test
mov
sarb
fcomi
dec
outsb
cmp
sub
rcrl
popa
ret
inc
mov
in
bound
push
jle
call
inc
outsl
xor
push
int3
scas
xcrypt-ctr
cmpsl
pop
insl
iret
fucomip
xchg
inc
adc
cltd
adc
insl
adc
out
cmpsb
xchg
and
jb
cs
jl
mov
imul
mov
cwtl
xor
mov
sbb
push
push
or
into
sahf
mov
sbb
inc
cmp
sub
push
test
outsb
inc
nop
int3
test
ljmp
sbb
pop
popf
lahf
adc
add
jle
cli
inc
or
pop
movsl
jmp
ds
inc
in
mov
pop
mov
sbb
mov
push
ja
push
adcb
xorl
sbb
cmp
jne
fcmovnbe
mov
and
lcall
pusha
mov
test
mov
dec
fsubrp
mov
movsl
jno
test
cwtl
fcomps
add
mov
jae
imul
adc
mov
push
sub
adc
mov
lock
adc
sbb
sar
loop
pop
xchg
jb
adc
cmpsl
cmp
xchg
fsubr
in
and
hlt
hlt
in
add
jns
fwait
and
test
lcall
xor
xchg
push
adc
sub
push
inc
mov
pop
sti
mov
fcmovu
stos
jne
imul
outsb
hlt
pop
xorb
je
movsl
cwtl
std
xchg
je
stc
test
loope
adc
hlt
sub
push
push
loop
loop
lods
jmp
sti
repnz
pop
mov
pop
mov
cmpsb
add
and
insb
stos
push
decl
lods
roll
fmuls
cmp
xchg
loope
cmp
jecxz
xchg
dec
std
ljmp
xchg
pop
pop
cmp
daa
enter
dec
xchg
vmovupd
out
add
sbb
pop
int3
push
mov
mov
push
inc
movsb
and
jno
sbb
xor
xchg
push
sbb
jp
pop
inc
push
sbb
imull
xchg
push
xchg
mov
in
pop
mov
pushf
inc
in
cmp
scas
adc
insl
and
mov
aas
iret
scas
in
testl
cmpsl
xchg
xchg
sti
or
push
mov
iret
cmpsl
push
dec
fistl
or
movsb
movsb
push
add
movsb
daa
aaa
int
rorb
jg
ds
inc
cmpsb
add
mov
jecxz
xchg
jge
jae
pop
outsb
inc
int
lret
clc
cmc
sbb
shll
fimuls
xor
push
jmp
imul
xchg
rorb
dec
xchg
adc
jl
lret
subb
pop
imul
fstp
inc
daa
rcr
lea
fists
jbe
xchg
adc
lret
and
fs
dec
or
cmp
sub
dec
dec
jg
outsl
push
mov
fmul
enter
call
aas
cmp
sub
dec
dec
jg
outsl
push
mov
fmul
enter
call
das
cmp
sub
dec
dec
jg
outsb
push
mov
stos
lods
enter
in
pop
sbb
or
cmp
sub
pop
dec
jg
out
test
cwtl
jo
adc
push
inc
mov
xchg
xchg
rol
shrb
sbb
or
adc
dec
push
mov
pusha
mov
sti
add
xor
and
sarb
shrb
sbb
or
pop
mov
stos
jo
pusha
mov
cwtl
add
xor
and
shlb
shrb
add
adc
inc
mov
xchg
add
add
test
dec
lret
movsb
cmp
sbbb
sub
jp
fstpl
xlat
fsubs
addr16
cmp
aas
push
xchg
sbb
xchg
dec
rorl
in
cmp
inc
mov
add
das
les
outsl
lds
jmp
pusha
daa
in
adc
mov
mov
and
shrb
sub
sbb
cmp
pop
jg
jmp
jmp
push
xchg
jnp
je
test
adc
push
stos
mov
jne
sbb
xchg
dec
or
dec
push
ss
stos
std
fsubrp
mov
andb
and
xor
lret
lret
sarb
mov
pop
mov
or
mull
fistl
cmp
cmp
or
adc
inc
mov
mov
andb
jecxz
cld
xor
and
mov
cmpsb
or
sub
and
and
and
in
xchg
inc
mov
cmpsb
inc
mov
xchg
imul
cmc
aas
in
and
daa
lret
pusha
enter
test
dec
scas
mov
rorb
test
pop
subb
mov
stos
jo
pusha
mov
sti
add
xor
and
sarb
shrb
sbb
or
pop
mov
stos
jo
pusha
mov
sti
add
xor
and
sarb
mov
sbb
jb
loopne
aas
mov
dec
adc
ret
xchg
xchg
in
sbb
push
enter
cmpsb
lcall
and
outsl
movsb
mov
ds
sbb
rcrl
jge
out
mov
mov
loop
adc
test
xchg
mull
add
push
out
pushl
ss
inc
lods
cmp
jae
mov
pop
js
jnp
xor
jl
daa
inc
lea
mov
cmp
and
insb
in
sbbl
jb
in
cld
cmc
loop
xchg
enter
addl
push
dec
das
push
jae
lods
outsl
xor
sar
and
sub
adc
fimull
pop
and
in
xchg
aaa
inc
sub
mov
insb
cmpl
mov
mov
cwtl
push
mov
mov
cltd
out
xor
add
sbb
inc
and
sahf
dec
fildl
pushf
sub
cwtl
xchg
sarb
testl
lret
and
inc
es
mov
pop
divl
jmp
push
sub
inc
in
ja
cmc
pop
jae
and
stc
cmpsl
in
loope
movsl
add
push
sahf
jge
jns
sbb
sub
std
and
jle
xor
jb
jno
dec
enter
dec
stos
cld
sti
pop
pop
push
cmp
pushf
ficoml
mov
stos
add
outsl
stc
pop
jp
call
pop
popf
mov
shl
dec
push
in
into
repz
lock
xor
cmpsb
lods
push
addr16
push
pop
xchg
ljmp
shlb
cmp
mov
fmuls
adc
adc
mov
push
sarl
imul
dec
lods
mov
jbe
fsts
sbb
xor
push
in
push
add
or
sbb
test
addr16
call
lcall
jnp
inc
sbb
fistps
mov
in
xchg
sti
aam
xchg
jecxz
jnp
pop
call
xchg
xor
out
pop
addr16
or
xchg
cmc
cmp
push
pop
mov
call
cmc
std
pop
roll
scas
in
cmp
das
mov
test
cmpsb
mov
sbb
cli
daa
dec
cs
xor
int
xchg
cmpsl
mov
ret
mov
jmp
sbb
xor
aas
test
cmovbe
cmp
or
or
ret
lods
sti
mov
pop
loopne
loope
out
sbb
rcl
call
sbb
sbb
pop
cmp
lret
bound
repz
mov
out
inc
pop
jmp
stc
add
and
mov
hlt
negl
nop
dec
fnstcw
adc
jb
mov
and
lods
or
and
mov
ficoml
in
test
sbb
popf
cmp
sbb
aad
pop
js
in
jmp
out
adcb
in
mov
ret
add
add
out
call
adcl
imul
or
imul
stos
mov
mov
jecxz
enter
ficoml
pop
jo
jnp
sbb
scas
lret
stos
xchg
pop
adc
mov
push
iret
push
popf
sbb
lods
sti
stc
jge
jns
sbb
imul
push
shlb
inc
xorb
cmp
dec
loopne
test
xchg
or
lcall
hlt
icebp
cmp
jmp
pop
inc
iret
push
stc
mov
xor
insb
into
outsb
insl
scas
loop
xor
adc
or
cltd
jns
das
xor
xlat
adc
pop
sub
jmp
pop
add
jle
or
daa
jns
dec
xchg
sub
or
add
cmpsl
jle
add
scas
mov
cwtl
or
push
cli
scas
rcr
in
enter
mov
push
fcomps
mov
sub
jle
test
or
sbb
subl
jl
xchg
in
ds
mov
add
mov
fiaddl
data16
sub
xor
in
lret
les
inc
imul
pop
test
rorl
lea
sbb
outsl
loope
xor
jp
mov
cmc
das
test
push
jp
mov
mov
sub
imul
jmp
xchg
dec
repnz
mov
ror
xor
cs
out
sub
lds
fistps
aaa
jmp
xor
push
lods
mov
jecxz
cli
push
pop
xchg
or
fld
cmp
in
lret
lcall
jmp
mov
inc
into
inc
and
les
mov
or
sub
push
jge
rcrb
pop
scas
mov
setg
fldl
and
sub
in
push
mov
gs
pop
rorl
cwtl
rol
sub
adc
sahf
sar
sbb
stos
stos
and
mov
jnp
mov
cmpsb
sbb
movsl
dec
movsl
add
bound
cs
scas
or
and
adc
jbe
mov
pushf
daa
xlat
pop
fldenv
xor
in
inc
mov
stc
ficoms
push
cmpsl
inc
adc
xchg
cmp
nop
mov
ret
sub
sbb
push
xlat
movsb
push
sahf
add
je
push
imul
rorl
stc
lds
aad
jmp
mov
insb
imul
cwtl
arpl
xor
loopne
cmp
inc
jle
mov
aam
hlt
cs
outsb
xlat
jg
mov
adc
fbld
or
in
mov
sbb
inc
jnp
sbb
scas
dec
faddp
mov
mov
mov
repnz
mov
out
cwtl
mov
cmp
dec
pusha
jnp
out
and
fwait
fldt
loope
cmp
popf
int
cltd
mov
lcall
mov
cmp
push
push
cmpsl
pop
es
sbb
pop
cmpsb
sbb
sub
mov
dec
push
xlat
xor
cwtl
sar
lods
mov
jmp
jno
xchg
jbe
stos
push
xchg
or
dec
add
mov
push
sbb
sbb
adc
xchg
mov
insl
jns
mov
mov
out
out
and
paddd
xor
pop
nop
pop
jb
ljmp
jl
lods
inc
popf
lcall
adc
lcall
xlat
mov
repnz
push
test
pusha
cs
sbb
xchg
xor
xchg
xorb
movsbl
dec
shll
jle
xchg
imul
mov
lock
outsb
mov
icebp
test
mov
idiv
je
mov
scas
mov
rcrl
rorl
and
xchg
sub
hlt
in
loop
xchg
lock
repz
lret
cmp
int
clc
sub
or
and
dec
insb
pop
iret
loope
nop
jge
and
into
dec
outsb
mov
pop
rol
stc
jge
xchg
cmp
cmpsl
stc
xchg
subl
jbe
nop
in
or
insl
push
pusha
xchg
fisttpl
fdivrp
aam
and
cmp
pushf
iret
outsl
popf
lods
das
pop
xor
xor
mov
cmpl
jb
cmpsb
and
icebp
gs
cmpsb
mov
mov
adcl
xchg
and
and
das
xor
inc
xchg
leave
insb
sbb
and
and
shrb
fwait
jb
lods
push
inc
xchg
fdivl
loopne
or
inc
mov
jbe
sbb
push
push
pop
jo
sbbb
into
xor
lea
xor
rolb
mov
mov
imul
aam
daa
jb
hlt
pusha
sarb
fwait
jno
testb
mov
cmp
mov
cltd
pushf
loopne
jne
dec
xor
xor
shll
xchg
mov
mov
push
cmpl
fildll
cli
mov
mov
mov
lods
jo
repnz
enter
cmp
in
xchg
cmp
pop
setge
xor
and
sbb
pop
fdivrs
movsb
test
sbb
fs
ds
sub
xchg
ret
jg
enter
loop
rorb
fisubrs
ret
or
cmp
sub
mov
loop
sub
inc
repnz
jge
lcall
stc
dec
cmp
stos
jo
add
xor
dec
daa
lret
mov
mov
xor
clc
loopne
xor
jp
ss
enter
icebp
add
lahf
cmc
in
stos
out
sub
adc
cmp
cmpsb
nop
mov
sbb
or
rcrl
push
jno
lea
sub
cmp
pop
sub
cltd
add
cmp
sahf
mov
out
lds
subl
adc
arpl
fcom
push
jb
push
push
sahf
sub
in
and
loop
ljmp
xor
std
call
es
int3
out
rcrb
inc
pop
pop
pop
je
gs
xchg
inc
and
pop
adc
dec
adc
jne
out
shrb
sbb
cmc
es
push
fcmovbe
mov
mov
shlb
fcmovnbe
fcom
lcall
in
arpl
popa
sbbb
push
pop
inc
add
mov
cmp
add
nop
push
and
rolb
or
call
rol
jecxz
pop
mov
bnd
jbe
pop
cld
mov
mov
xchg
in
sbb
lock
loope
js
scas
out
or
stos
mov
mov
in
inc
insb
loop
bnd
mov
popf
out
dec
lret
mov
fdiv
cmc
insb
push
or
cld
xor
inc
xchg
add
inc
fnstcw
push
mov
mov
mov
aaa
push
hlt
gs
pop
xchg
mov
pop
xor
add
insl
xchg
mov
xlat
lret
xor
sbbl
aad
insb
xor
scas
clc
xchg
rol
out
jno
mov
pop
mov
mov
jno
and
add
add
pop
sub
movsl
jno
repnz
mov
cmc
push
cmp
sub
adc
popf
xor
cmp
mov
jg
mov
je
pushf
inc
inc
lret
fxch
mov
inc
pop
pop
cwtl
xchg
mov
jns
mov
cmpsb
pop
lods
test
pop
enter
cmp
jle
out
aaa
test
icebp
aam
mov
mov
push
mov
popf
js
push
arpl
sub
fsubs
lcall
jae
xor
movsb
jl
cmpsl
clc
dec
fisttpl
jae
idivl
inc
mov
fs
add
pop
add
mov
xor
pop
stos
jns
push
imul
push
cmp
addr16
mov
cmp
adc
pusha
sbb
pop
call
data16
pop
sti
dec
arpl
or
xchg
lods
ja
inc
pop
jle
movsl
cwtl
push
sbb
sbb
add
aam
adc
pop
and
leave
inc
shll
inc
xor
sub
loope
iret
adc
mov
cmp
add
fistpl
sbb
dec
dec
ljmp
push
in
cmp
inc
push
xor
nop
imul
repz
scas
push
aam
rol
es
cmp
mov
mov
jnp
jl,pt
dec
fsts
imul
xchg
rorl
lret
jp
test
fdivrl
mov
cmpsb
rclb
test
repz
inc
mov
mov
scas
sbb
lock
pop
mov
fistps
adc
mov
adc
cwtl
jmp
jp
dec
pop
scas
int
popf
mov
mov
mov
cmp
icebp
lret
js
stos
mov
sub
hlt
mov
jge
mov
cwtl
ja
xchg
add
and
jns
es
or
and
ds
jl
movl
mov
ss
cld
loope
sbb
into
jmp
jb
movsb
aam
sub
sbb
andb
inc
or
push
mov
into
fsubl
pusha
jb
jl
sbb
push
stc
in
mov
xor
cmp
push
in
sbb
nop
push
xchg
add
mov
ljmp
out
mov
icebp
dec
enter
aad
add
push
enter
aad
mov
mov
fisubl
push
jmp
jg
or
mov
inc
mov
popf
ljmp
sub
mov
jmp
sub
notl
and
ret
int
mov
sbbb
jecxz
jmp
cmpb
fimull
add
jmp
insb
cltd
int
push
cwtl
push
fs
adc
sbb
mov
popf
test
push
outsl
jns
scas
jo
lock
lods
cltd
dec
and
mov
xor
ss
in
out
push
hlt
test
add
mov
fstl
insl
or
jo
int
jmp
in
push
add
dec
into
cli
lcall
insb
push
add
lea
jg
and
loop
or
cli
notb
cld
mov
lahf
lret
aaa
popa
xor
scas
push
mov
mov
xor
mov
fcmovnu
xor
xor
mov
push
repz
push
mov
lea
mov
imul
leave
int3
shl
mov
jge
stos
push
sub
stc
push
add
ljmp
jg
adc
ret
cmp
scas
jge
inc
cltd
jecxz
jb
ret
movsl
mov
mov
jp
cmp
inc
pop
inc
jne
lock
popf
aaa
les
sbb
nop
lcall
cmpsl
jecxz
lcall
add
mov
sbb
dec
xor
and
jo
mov
test
and
mov
mov
psllw
mov
and
andb
sbb
mull
decl
mov
adc
imul
idivb
mov
das
stos
ret
out
outsb
popa
dec
movl
xchg
xlat
mov
cmp
js
mov
out
xor
push
dec
pop
push
not
loope
dec
ja
in
cmp
and
pop
sbb
mov
int3
fists
add
xor
xchg
inc
rcrl
push
cmp
sbb
ficompl
mov
add
xchg
sbb
nop
xor
les
std
mov
lods
movsb
subb
or
adc
leave
cmp
rcll
test
mov
movb
out
mov
addr16
popa
stos
jge
lcall
pop
add
scas
push
push
test
rcll
dec
ja
mov
inc
push
push
or
aaa
data16
adc
mov
out
pop
fildl
jo
sbb
les
push
pop
scas
dec
call
sub
and
cltd
enter
sub
xchg
dec
mov
mov
imul
mov
adc
add
jae
es
outsl
dec
shll
add
and
add
sub
int
ffree
test
addr16
aam
mov
adc
test
sub
pop
ja
lcall
inc
xchg
add
xor
and
test
and
insb
into
int
push
xchg
cwtl
mov
loop
sbb
sti
pop
cwtl
xor
mov
insb
mov
xchg
xor
and
pusha
add
push
lods
in
xchg
fstpt
push
iret
lods
aas
pusha
adc
xchg
dec
push
add
or
jge
mov
mov
ret
enter
and
mov
sub
lds
inc
jle
mov
in
adc
jmp
enter
aas
inc
mov
cmc
xchg
lahf
int3
mov
cmpsb
push
sbb
out
inc
jns
aam
push
popa
adc
ljmp
fisubs
pushf
insb
lods
cs
test
out
push
cmp
fstpt
and
cmp
aas
jl
jp
aad
push
aad
cmp
pop
xor
xor
sub
roll
rcl
adc
in
fwait
push
push
cmpsl
fsubrl
mov
mov
mov
add
fnstenv
inc
jp
sub
inc
add
add
lock
pop
xor
push
fisttpl
pop
mov
jg
add
jne
push
add
out
movsb
sub
xor
adc
insb
or
icebp
adc
dec
rolb
out
dec
mov
cwtl
inc
inc
pop
cs
hlt
add
dec
ficomps
addr16
popa
jmp
ret
pop
dec
mov
shr
push
and
stos
sbb
lret
or
mov
shll
mov
xchg
jp
push
xchg
test
out
jns
dec
dec
adc
xchg
or
lret
es
arpl
fwait
and
fwait
mov
dec
jo
push
mov
mov
jae
adc
sarb
sti
repnz
cs
mul
fadds
push
and
jno
mov
stc
clc
pop
push
xor
movsl
jae
sub
icebp
pop
inc
hlt
xchg
xor
int
loope
add
test
imul
or
push
repz
cmp
mov
lods
add
dec
dec
dec
lret
insb
daa
fldl
je
call
mov
xchg
jae
sbb
scas
cli
mov
sbb
cmp
ficoms
xor
mov
mov
inc
cld
inc
inc
push
jmp
xor
inc
mov
sub
test
js
sbb
adc
mul
jmp
pushl
pushf
dec
mov
mov
jbe
movsb
jmp
sub
lret
or
adc
pop
xor
jbe
rcll
add
scas
mov
xchg
ss
aas
inc
sbb
sti
xchg
loope
mov
and
mov
jecxz
dec
cmpsl
ficomps
hlt
ret
ds
xchg
cmc
fwait
addb
or
jo
imulb
pop
or
daa
inc
xor
popf
sbb
fwait
stos
enter
insb
popa
add
pushl
out
insb
repz
lock
xchg
mov
clc
out
cmp
rclb
test
mov
in
pop
cltd
cmp
sub
std
xchg
test
ficompl
dec
push
or
xchg
dec
stc
jp
dec
jmp
jmp
xchg
mov
adc
stc
dec
and
sahf
sub
xchg
stos
cmp
lods
enter
adc
inc
add
pop
cmc
inc
popf
push
mov
lock
cli
jbe
lds
sub
aas
ss
sar
xor
pop
arpl
fisubs
int3
push
in
inc
popa
repz
pop
mov
mov
pop
loop
pop
push
pop
adc
push
test
pop
mov
sub
add
xchg
push
lods
xchg
mov
loopne
movsl
mov
or
fcompl
das
subb
scas
sbb
mov
fmull
sbb
sub
sti
bound
repnz
les
ret
adc
loop
jp
add
dec
mov
adc
adc
sub
mov
jg
cmc
lods
mov
inc
rorl
iret
xchg
stos
jge
xchg
addr16
rcll
movsb
shlb
insl
stc
nop
or
xchg
push
lock
and
inc
lret
icebp
sbb
pop
inc
es
sbb
aaa
adc
cltd
insl
adc
mov
std
aaa
pop
sub
arpl
add
push
cmp
arpl
and
aas
dec
cld
idivb
mov
mov
jno
jg
or
fdivrl
out
mov
stc
dec
jae
cmp
dec
push
lret
cld
xchg
jne
scas
cltd
dec
outsl
cwtl
adcl
xchg
ret
push
int
sub
imul
push
sti
cmp
mov
loop
xchg
stc
nop
dec
jbe
mov
popa
and
call
adc
subb
jb
inc
test
testb
jns
aam
sbb
in
and
aam
sti
xchg
stos
int3
mov
push
xchg
or
push
dec
loopne
test
nop
cli
pop
pop
mov
jae
add
out
sub
inc
and
add
into
out
pushf
mov
sbb
pop
jno
lahf
enter
inc
outsb
or
jbe
aam
xor
mov
das
jnp
mov
pop
in
fdivrl
sub
insl
dec
inc
je
rolb
push
mov
sbb
sub
inc
into
jnp
adc
push
rep
mov
les
pusha
xchg
add
mov
leave
mov
popa
outsl
xchg
add
inc
repz
jg
push
sbb
add
push
das
shrl
test
lods
test
push
mov
xlat
scas
mov
jb
ds
and
mov
in
ret
push
aad
jp
fldcw
in
int3
movsb
into
cmp
cwtl
inc
push
push
nop
scas
xchg
xchg
cmp
add
ror
ds
call
loope
xor
mov
mov
and
sub
jp
pop
loopne
pop
test
cmp
loop
push
sbb
enter
das
mov
xchg
cmpb
push
inc
mov
mov
mov
hlt
loopne
nop
jnp
imul
inc
stos
jo
pusha
mov
sti
add
xor
and
sarb
shrb
sbb
or
pop
mov
stos
jo
pusha
mov
sti
add
xor
and
sarb
shrb
sbb
or
pop
mov
stos
jo
popa
mov
sti
add
xor
and
sarb
shrb
sbb
or
pop
and
mov
pusha
cld
addr16
adc
and
xor
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
fimuls
mov
imul
cmp
insb
pop
dec
ds
ds
out
pushf
in
mov
sahf
int3
scas
es
cmp
push
imul
cs
ds
movsl
ficoms
in
aam
lret
mov
pusha
or
inc
dec
xor
dec
xor
scas
sarb
jno
lods
and
mov
sbb
push
cli
lods
into
xor
mov
adc
adc
mov
rcrb
sub
xchg
shrl
fidivrs
mov
jne
jge
dec
ret
pop
pop
push
cmp
out
fwait
bnd
lods
lret
insb
sti
pop
test
cmpsb
fcompl
mov
mov
jmp
pop
mov
dec
push
inc
and
adc
repz
dec
mov
sbb
jge
roll
dec
xchg
mov
notb
ja
sub
divl
rorl
pop
repz
dec
lods
cs
shrl
mov
mov
cld
mov
sahf
int3
scas
lds
adc
add
push
dec
cs
js
into
fldenv
mov
xchg
ljmp
cmp
jle
jb
add
pop
sub
lods
mov
sahf
popf
cwtl
int
sub
dec
or
or
mov
pop
push
mov
xchg
mov
fdivrl
or
sbb
insb
push
jl
dec
cs
lods
into
mov
in
mov
sahf
int3
scas
fdivrl
or
sbb
insb
push
jl
dec
cs
lods
into
jg
aad
hlt
cmp
jnp
sbb
add
inc
repnz
test
inc
xchg
icebp
mov
insb
sbbb
or
popf
mov
jno
mov
fucom
in
pop
jp
jmp
xchg
iret
sub
push
pop
movsl
fnstcw
imul
push
xor
mov
lea
sti
fistpll
or
fmull
push
mov
aas
add
or
mov
sub
repnz
filds
fisubrl
mov
fwait
add
xlat
fmull
mov
rolb
shll
insb
lds
das
test
add
loopne
mov
pop
rclb
movsb
cmp
jg
popw
leave
inc
mov
or
rolb
inc
sub
xchg
sub
movsl
out
or
and
in
jne
xchg
lock
inc
mov
rcl
nop
popa
lods
cmpsl
pop
iret
add
cmpsb
cmp
out
xor
push
out
cmpsl
xchg
lods
push
insl
sub
xor
out
inc
imul
push
arpl
aad
ret
xchg
jae
jecxz
lock
jmp
mov
fstps
imul
sub
imul
add
xor
fsubrs
inc
dec
jecxz
cmpsl
pop
call
dec
jbe
mov
lea
adc
sti
testl
xor
addr16
inc
inc
stc
movb
mov
scas
hlt
dec
nop
mov
sbb
out
sbb
hlt
test
adc
std
icebp
ljmp
fwait
jmp
add
jecxz
not
mov
cltd
sbb
sub
add
ljmp
sti
pop
sti
lret
dec
dec
pop
or
mov
mov
daa
aam
idiv
jmp
mov
mov
mov
mov
adc
xorl
adc
mov
xlat
imul
xor
push
sbb
decb
push
mov
mov
jo
jns
jns
jmp
adc
loope
repz
mov
jp
rep
fnstenv
test
bound
ljmp
lret
or
mov
gs
bound
xchg
jge
outsb
sub
mov
sub
mov
and
cmpsl
push
rolb
cmpsb
cmp
cmp
adc
jle
arpl
pop
in
enter
push
adc
xchg
mov
jecxz
leave
fcompl
imul
inc
das
sbb
push
std
hlt
xchg
fildl
fisubl
sbb
mov
mov
nop
adc
sub
pop
into
cmp
adc
and
add
iret
mov
rolb
mov
lds
loop
sub
test
scas
add
mov
push
stos
xor
leave
adc
mov
and
xor
and
in
roll
pop
push
inc
add
clc
outsl
push
inc
add
sbb
add
scas
xor
mov
fidivl
call
fcoml
ja
mov
adc
push
sti
out
les
sbb
pop
int3
push
pop
arpl
xchg
or
xor
aad
enter
mov
mov
mov
mov
outsb
fistps
out
mov
add
stos
xor
sub
push
pop
mov
mov
hlt
xchg
jo
jns
imul
sbb
mov
mov
pop
add
push
mov
aas
rclb
xchg
jno
mov
jle
sub
loopne
sbb
stos
insb
bound
mov
cmp
mov
push
or
fnstsw
adc
add
arpl
pop
push
push
or
mov
xor
in
icebp
ljmp
add
test
pop
inc
pop
add
out
loope
aas
xor
lahf
jmp
dec
in
lret
xchg
call
dec
pushl
shll
aaa
sub
shlb
fimuls
jl
sub
cmp
cmovs
add
xchg
lods
mov
aas
xchg
push
push
dec
repz
es
cmpsl
sbb
pop
inc
push
xchg
rorl
sbb
cwtl
lret
lods
call
mov
add
or
xor
test
cmc
cmp
cwtl
enter
sub
frstor
sti
mov
jp
gs
adc
bound
scas
push
and
sub
rcl
cmpsl
icebp
push
in
dec
out
mov
xchg
or
dec
mov
cmp
pop
sbb
ss
sub
add
mov
repz
ljmp
fsts
jne
aas
jmp
popa
cmp
inc
popa
adc
clc
cmovno
push
enter
inc
mov
aaa
hlt
into
nop
cld
sbb
xor
add
dec
imulb
fisttps
xchg
jecxz
inc
mov
cli
ret
cli
xor
lea
jbe
lret
std
testb
dec
sub
inc
sahf
outsl
out
fsubl
push
dec
xor
iret
gs
je
mov
lea
mov
lods
out
mov
mov
aam
popa
subl
iret
mov
sti
pushf
inc
cmp
cmp
je
xor
stos
adc
push
test
repz
dec
aam
dec
scas
mov
jle
aam
cltd
in
mov
rcrl
lcall
lods
in
jns
jns,pn
stos
std
iret
ret
xor
sub
add
adc
fstpl
aad
mov
out
cmp
pop
insb
adc
add
push
dec
sbb
add
aaa
xlat
mull
fisttpll
mov
pop
mov
pop
shlb
popa
fld
mov
sub
mov
sahf
sub
mov
cltd
mov
je
jle
daa
jbe
or
outsl
movsl
out
sbb
jb
cmpsl
adc
mov
imul
decb
jge
pop
in
and
lret
rol
scas
mov
fistpll
jno
add
fs
sbb
mov
pop
jle
push
mov
ss
or
and
and
push
pop
cmp
sub
icebp
push
and
lock
xlat
mov
or
dec
movsb
push
in
stos
lahf
aam
pushf
lods
leave
shll
outsl
scas
leave
cmp
sub
adc
shlb
add
mov
mov
js
sbb
in
leave
lock
in
jae
dec
roll
mov
aad
imul
push
aas
sub
test
nop
fwait
and
test
shlb
inc
data16
mov
subl
out
push
js
pop
dec
mov
mov
imul
lahf
xor
loope
testl
fsub
jg
jge
cmpsb
push
dec
mov
ljmp
xor
int3
movsl
mov
ret
pop
outsl
imul
dec
in
fadds
idivl
fistl
seto
dec
xchg
lret
sti
pop
inc
cmpsb
push
ss
jno
test
popa
rolb
in
or
push
lods
iret
mov
and
add
add
mov
fsubrp
in
out
stos
inc
je
call
mov
jge
xor
bound
les
pop
fsts
repz
jp
cmp
cmpsb
inc
dec
and
sub
ss
xchg
hlt
stc
addr16
std
scas
cmpsl
jp
cld
ret
loope
xor
shl
cltd
fs
mov
in
movsb
adc
data16
mov
psubd
js
leave
repz
adc
xchg
sub
xchg
cmp
push
popa
mov
stos
sub
ficoml
mov
andl
insb
js
or
rclb
dec
mov
jp
jno
adc
push
les
icebp
cmp
cmpsb
loope
popa
jl
fstps
adc
iret
nop
cmp
sbb
lock
and
inc
cmp
cmp
movsl
or
idivl
in
cwtl
je
and
sub
fs
jnp
scas
je
sub
mov
push
push
mov
movsl
hlt
mov
xor
aad
xor
or
pushf
pop
adc
cli
jno
cli
scas
data16
push
push
jnp
movsl
jb
iret
mov
cmp
or
movsl
xchg
ljmp
lods
out
mov
jo
mov
out
pop
aas
hlt
mov
jmp
popa
pop
and
sahf
xchg
ffreep
xor
cmp
aam
mov
jne
and
sbb
fldcw
popf
push
out
sub
in
fisubl
fistpll
outsb
adc
push
sti
jae
aas
jb
add
mov
mov
outsl
dec
mov
imul
bound
pop
cmovl
push
xor
lret
out
pop
jl
mov
lods
push
cmp
cmpsb
aam
sub
call
movntss
pop
je
jo
xor
jb
gs
cwtl
sbb
jg
sub
mov
lods
cwtl
addr16
push
in
int
mov
loopne
mov
sub
mov
pop
shlb
aaa
dec
mov
jecxz
test
imul
loope
fsts
ja
enter
movsb
cli
lahf
mov
mov
arpl
or
pop
sbb
jne
filds
enter
vphsubbw
ljmp
imul
loop
add
xor
mov
cs
sbbl
xchg
andb
in
sub
pmaxub
push
addb
test
out
mov
cmc
xor
shll
mov
adc
aad
scas
lock
int3
data16
clc
cmp
cmpsl
inc
sub
test
dec
xchg
xchg
mov
dec
sub
sbb
xor
lcall
or
loopne
pop
adc
mov
push
ret
popf
dec
add
lcall
rcll
ret
and
pop
and
test
dec
call
push
mov
push
lea
aas
dec
in
shl
repz
enter
aam
mov
cmp
adc
lret
lcall
push
push
mov
adc
fisttpll
adc
lret
pop
mov
out
jo
loopne
add
inc
sti
test
shr
rcr
ret
push
or
and
stos
mov
cmpsb
lret
push
push
mov
inc
fisubrs
adc
sub
fwait
les
popa
sti
iret
sbb
and
mov
arpl
in
push
mov
pop
ret
mov
arpl
xor
and
sub
js
ficompl
fisubl
jge
int
push
push
into
out
mov
sbb
and
popa
inc
fiaddl
dec
into
rcrl
or
popl
fistpll
mov
inc
cmp
iret
js
popa
or
cmp
sarb
sub
stc
mov
xor
enter
test
mov
cmp
rcrb
icebp
push
dec
int
pop
cmp
ds
push
sbb
test
adc
outsb
inc
test
inc
push
adc
test
sbb
push
js
out
cmpsl
movsl
popa
mov
fdiv
out
jg
ret
push
lret
jnp
mov
and
jl
jl
sub
fsubs
lcall
scas
fdivrs
jae
xlat
test
push
bswap
addr16
cwtl
jb
loop
cmp
leave
movsb
and
daa
jle
pop
dec
push
lods
jb
outsl
dec
hlt
push
arpl
dec
repz
cmp
xor
pusha
jp
inc
mov
dec
xor
outsb
cmp
sbb
jno
fmull
pop
aaa
jle
cmp
cwtl
stos
ljmp
lret
mov
push
or
push
dec
sbb
lcall
mov
add
fisttpl
cmc
mov
loopne
cmp
sub
pusha
adc
pop
scas
insb
ds
or
adc
inc
imul
aaa
fdiv
xor
pop
leave
xchg
scas
dec
push
push
daa
and
nop
imul
and
frstor
adc
push
jecxz
or
popa
mov
add
add
test
adcb
mov
mov
mov
fldenv
jl
mov
pop
test
icebp
insl
movsl
push
adc
lods
push
mov
and
std
mov
imul
cmp
mov
xlat
xchg
popf
sbbl
fistl
out
es
leave
clc
xchg
bound
and
ret
aas
add
dec
xor
out
andl
les
gs
ss
pusha
test
testb
stos
jl
push
in
movsl
jl
dec
pop
adc
sbb
push
jnp
jle
dec
xchg
dec
xor
and
jl
mov
mov
in
sub
les
jmp
sbb
push
rclb
mov
mov
jmp
mov
cmp
adc
sti
add
lret
jae
ss
imul
jne
ret
xchg
pop
jmp
fdivp
rcrl
push
push
mov
add
mov
sub
cs
push
fstps
pop
inc
ljmp
outsl
pop
and
out
xchg
das
and
gs
fucomp
cltd
out
jle
addr16
dec
lcall
fwait
in
or
negl
jne
pop
add
xchg
xchg
xor
out
push
and
cmp
mov
fidivs
shr
mov
mov
stc
movsl
sti
js
sbb
jg
jb
call
nop
dec
dec
and
adc
testl
mov
xlat
mov
mov
cmp
push
scas
dec
or
add
jnp
mov
jae
cli
push
daa
xor
test
xchg
push
cli
call
jmp
scas
mov
subb
mov
aam
or
js
xor
out
jecxz
pop
scas
dec
pushf
stos
dec
inc
sub
mov
lret
rorl
lds
dec
xchg
xchg
dec
ret
or
jle
adc
cmp
xlat
and
dec
inc
xchg
cli
jle
popf
sub
mov
arpl
push
daa
xchg
or
ret
mov
and
adc
xchg
stos
inc
in
add
shl
push
jle
into
mov
mov
xor
add
adcb
dec
add
sbb
push
daa
xchg
jnp
adc
mov
mov
xor
lahf
in
clc
mov
arpl
cmp
fisubrs
outsb
xor
xchg
call
dec
leave
xchg
sub
repnz
pop
out
inc
dec
dec
push
cmp
out
std
dec
add
and
pop
mov
aad
out
loope
jnp
sbb
decl
or
push
cmp
data16
xchg
aaa
pushf
fstl
frstor
dec
inc
xchg
fmull
xchg
aas
xlat
inc
fisubrs
inc
je
scas
mov
popa
dec
lret
add
dec
gs
mov
add
filds
dec
fcompl
jle
xor
negb
or
xchg
fbstp
or
or
mov
in
xchg
test
mov
pop
int
bound
fcoml
jo
mov
add
adc
scas
adc
mov
mov
mov
mov
out
daa
shll
jnp
les
movsb
lds
sbb
fsubr
mov
stos
pop
push
mov
dec
arpl
lea
lret
sbb
xchg
xor
outsb
sub
mov
pushf
push
xor
rol
ret
mov
cli
push
mov
test
ss
sub
cmc
cmp
pop
test
insb
jge
cmp
jbe
adc
in
or
out
adc
xchg
cld
sbb
fistpll
xlat
test
ljmp
test
mov
test
sbb
dec
add
pusha
jns
dec
jg
repz
push
or
rcr
xor
xlat
iret
and
inc
or
lods
and
insl
leave
mov
adc
ret
sub
mov
mov
xchg
dec
fcomps
and
repnz
in
add
add
enter
lods
xor
push
es
negl
ja
xor
popa
jno
int3
popa
gs
lret
adc
rcll
jl
inc
cwtl
lods
mov
mov
mov
testl
mov
sbb
popf
out
dec
mov
add
mov
ja
pop
mov
sub
xchg
lahf
and
pop
sub
data16
mov
es
ja
in
xchg
sbb
pop
jle
push
ljmp
es
cs
and
sub
fwait
mov
ficomps
lea
call
xchg
or
and
stos
insl
ret
and
incl
js
mov
inc
jne
fwait
cmp
imul
adc
pop
sahf
jl
mov
mov
jno
aam
and
jp
push
nop
dec
dec
and
jbe
mov
adc
xchg
sbb
aaa
fldcw
pop
jmp
mov
clc
push
aaa
push
ret
mov
jg
mov
rcll
add
mov
adc
cmc
fsub
cmp
mov
scas
push
jae
fs
roll
mov
pop
sub
mov
stc
xlat
jl
aas
cld
jle
add
push
dec
mov
cmp
and
mov
sbb
sub
pavgb
dec
mov
pop
mov
fwait
sub
cmp
dec
push
insl
incb
mov
cmp
cwtl
daa
push
jmp
mov
or
clc
out
xor
push
push
pop
ljmp
and
mov
cmpsb
cmp
mov
inc
andl
sub
jb
addr16
repz
andb
push
shlb
rcr
imul
or
mov
adc
pushf
or
jnp
mov
pop
xlat
push
outsl
rcll
pop
lahf
inc
sbb
jmp
in
xor
sbb
mov
xchg
inc
lods
mov
movsl
leave
scas
adc
push
adc
lods
pop
xor
xchg
sbb
rcrl
mov
jbe
repz
stos
push
std
jno
aaa
scas
repz
bound
sbb
das
jb
aad
dec
jp
fistps
jl
sbb
rcrl
mov
push
fcmovb
arpl
addr16
push
mov
je
push
orl
lcall
sti
inc
enter
dec
jo
mov
movsb
sub
loope
sahf
jg
orb
jle
fmuls
cltd
and
ffree
cld
mov
fcmovnu
jae
xlat
xchg
ljmp
rcrl
repnz
sub
jmp
mov
adc
int
dec
push
cltd
ljmp
cld
or
and
fistpl
pop
mov
jnp
push
xor
mov
pop
sub
loopne
add
shll
ljmp
adc
cmpsb
cli
xor
jmp
movsb
jg
vpshufhw
adc
ds
movsl
popf
popa
clc
fmuls
jb
insl
xchg
aad
xor
in
and
xchg
dec
popf
fistl
bound
jl
mov
sbb
cmpsb
xor
lds
stos
mov
add
and
lea
std
pushf
jg
dec
pop
inc
aas
test
xchg
mov
jae
ret
mov
out
jmp
mov
lock
adc
dec
sbb
mov
sub
adc
fildll
lret
test
xor
dec
add
push
std
sub
inc
jns
fsts
in
inc
or
stos
dec
pop
mov
jnp
xchg
pusha
jo
jecxz
roll
sub
ret
cld
je
cmpsb
pop
adcb
mov
mov
jo
pusha
or
xor
pop
mov
fnsave
std
jns
dec
ljmp
sbb
xor
inc
test
imul
and
jg
outsb
xor
hlt
dec
je
xor
ds
int3
in
rolb
cwtl
dec
xchg
push
popa
fdivrl
sub
sbb
xchg
and
sub
add
fs
test
push
sub
push
int
push
jbe
movsl
cmp
and
jno
je
fldenv
push
scas
sub
pop
pop
ljmp
pop
bound
inc
jbe
mov
popa
sub
dec
sub
mov
popa
stos
out
mov
sbb
shll
mov
add
pop
cmc
add
lods
dec
sbb
pop
js
sbb
adc
xor
or
cli
pop
leave
or
aad
jbe
scas
paddsw
sbb
stc
bound
stos
aas
fcompl
shl
nop
fstl
negb
ds
inc
cmp
sub
stc
jmp
ret
xchg
stc
cwtl
adc
pop
xor
adc
mov
aad
mov
in
int
pusha
mov
add
gs
cmpsl
nop
sub
into
push
cltd
pop
and
notb
movsb
jae
mov
data16
sub
mov
in
mov
cmpsl
adc
lock
test
ffreep
jg
out
mov
mov
mov
or
xchg
dec
sbb
xchg
add
add
pop
push
jo
lahf
in
lods
sub
movsl
xchg
push
jge
fnstenv
xlat
add
loopne
and
and
sub
in
push
insl
jae
pop
fbld
test
dec
nop
and
jbe
add
cwtl
mov
inc
nopl
fistpll
pop
data16
cld
shlb
xor
xlat
sahf
inc
adc
xlat
sbb
push
cmp
sub
enter
xchg
imul
aam
adc
adc
cmpsb
sbb
jnp
xor
cmp
fs
cmc
or
imull
or
sub
pushf
mov
sbb
push
mov
test
jecxz
and
mov
scas
in
xor
cmpsb
jmp
sbb
pop
sub
outsl
mov
lea
inc
les
and
sub
je
pushf
in
mov
sahf
int3
scas
fdivrl
or
sbb
insb
push
jl
dec
cs
lods
into
mov
in
mov
sahf
int3
scas
fdivrl
or
sbb
insb
push
jl
dec
cs
lods
into
mov
in
mov
sahf
int3
scas
fdivrl
or
jle
push
js
dec
cs
ds
into
mov
mov
mov
sahf
dec
scas
pop
jle
dec
ret
hlt
cmpsb
outsb
sbb
sbb
mov
test
jg
mov
mov
in
adc
jmp
mov
xchg
pop
test
jg
pmullw
dec
das
cmc
aas
xchg
fists
icebp
and
scas
xor
inc
test
cmpsl
push
jmp
aas
std
lret
mov
xchg
add
sub
add
gs
xor
outsl
rorb
pop
loop
dec
out
jmp
and
mulw
enter
cmp
push
mov
sbb
mov
cmpsl
dec
xor
push
adc
xor
scas
je
call
pushf
scas
cmp
movsb
push
ljmp
cwtl
and
jne
inc
scas
mov
jne
push
dec
xchg
cmpsb
movsl
pop
sbb
rorb
sbb
push
fiaddl
add
jo
lahf
mov
pop
adc
loop
lahf
and
icebp
pop
andb
in
inc
sbb
ja
lahf
inc
push
fs
lcall
sbbb
mov
sbb
adc
scas
cmp
scas
jne
loope
xchg
inc
jne
xor
sbb
pextrw
das
das
es
xchg
mov
xchg
jns
mov
and
cmp
jl
jns
bound
inc
pushf
inc
fwait
dec
cmp
xor
xor
add
sarb
les
aam
andb
imulb
fwait
insb
mov
mov
or
adc
push
sub
xor
add
pop
movb
lds
cmc
aas
in
adc
jmp
scas
jne
gs
xchg
pop
test
jg
pmullw
lds
cmc
aas
in
adc
jmp
scas
jne
gs
xchg
jo
rclb
or
arpl
sub
aad
insl
add
je
lret
push
out
shll
inc
push
jle
les
ja
xor
in
sti
jle,pn
mov
cmp
xchg
inc
jge
xchg
dec
dec
scas
ret
sub
jg
out
jp
jb
adc
jnp
fwait
dec
xor
outsb
stos
mov
lahf
xlat
mov
movsb
divb
and
sbb
push
popa
and
inc
enter
enter
lcall
and
jge
push
sub
insb
xchg
out
out
mov
pop
cwtl
fcomi
in
xchg
aas
pop
sbb
pop
mov
fnstenv
into
aad
andb
test
or
mov
or
clc
mov
adc
out
rcll
incb
in
jmp
stc
std
pushf
jno
or
xor
jbe
sbb
insl
cwtl
or
mov
imul
in
sub
pop
xchg
ret
repnz
cld
push
sahf
fwait
in
arpl
dec
icebp
scas
mov
les
jb
push
test
push
add
je
dec
cmp
adcb
and
fucom
popa
adc
rcrb
data16
dec
pop
xchg
lock
shlb
push
mov
xor
testl
sub
xor
imul
sub
xor
or
das
ret
sub
test
sub
rolb
popf
sbb
enter
xchg
int
xor
call
cmpsb
aam
data16
xchg
out
aaa
pop
adc
pop
lds
or
adc
mov
ret
rorl
stc
or
mov
mov
ret
or
hlt
iret
sbb
cwtl
fistpl
inc
push
add
mov
jp
fldenv
push
add
jo
mov
jl
push
xor
adc
cmp
nop
sbb
sbb
pop
aad
cmpb
loope
ljmp
xchg
xchg
lock
inc
adc
mov
xor
mov
aam
mov
enter
and
je
xlat
push
dec
inc
and
fsubl
and
adc
and
hlt
cld
push
test
pop
popf
push
movsb
and
and
xor
push
loopne
and
in
mov
js
jo
add
das
lcall
xlat
xor
shll
cmp
nop
lret
negb
inc
mov
xor
pushf
cld
adc
pop
js
push
xchg
xchg
orb
movsb
pop
and
and
ds
rcll
sub
and
sbb
cmp
and
dec
jne
mov
arpl
adc
inc
pop
xchg
pop
repz
fadd
fisttpll
aam
jne
and
stos
xlat
pushf
push
xchg
sahf
repnz
push
roll
andl
and
cmpsb
sbb
and
lret
sarb
out
mov
adc
pop
shl
sbb
call
mov
in
aam
daa
add
bound
bound
mov
xchg
test
mov
aaa
sbb
lahf
std
or
in
jmp
or
out
jmp
shrl
xchg
cmp
out
sub
int3
xor
cmp
cmpsb
xchg
mov
jnp
or
pushf
lahf
imull
sub
addr16
in
rolb
loope
sahf
das
inc
lcall
stc
or
cli
mov
and
clc
cmp
leave
jb
cmp
in
adc
sub
fstpt
sbb
dec
jg
mov
enter
aam
mov
popa
rcl
sti
sbbl
out
mov
push
adc
addl
pop
cs
cli
scas
push
pavgw
xor
fs
rorl
mov
shrl
xor
xchg
insl
adc
sub
shr
je
aas
int3
lods
jp
inc
cmp
js
mov
test
xchg
push
pop
das
out
push
out
ss
cld
and
dec
adc
repz
test
xor
mov
js
daa
idiv
cld
loope
fldcw
cltd
divb
aas
es
push
mov
outsl
sub
xchg
cmc
adc
pop
gs
adc
sti
icebp
cmpl
push
repz
lahf
sahf
sub
mov
xchg
jle
inc
stos
dec
cmpsl
outsb
add
bound
mov
xor
movsl
pop
sbb
add
out
nop
dec
rcrl
xor
pushf
fcomps
pop
arpl
clc
xchg
add
mov
cltd
int
jmp
push
adc
jo
fwait
in
push
mov
push
pop
push
cwtl
xchg
repz
sbb
rclb
cmp
push
ret
add
mov
sub
inc
or
pop
scas
movsl
jge
fiaddl
arpl
xor
jno
popf
int
movsb
testb
and
enter
lods
ljmp
pop
inc
inc
into
or
mov
test
insb
mov
jle
xchg
movb
and
loope
cmc
and
and
mov
and
in
cwtl
pop
push
dec
leave
test
adc
icebp
push
sub
mov
in
pushaw
test
xor
mov
pop
gs
xchg
cld
xor
pop
inc
mov
pop
xchg
fidivrs
shll
lock
stc
sti
xchg
out
and
into
call
arpl
add
mov
xor
loop
je
fisttps
jns
mov
out
fisttpll
sbb
imul
stos
ficoml
ds
or
cmp
and
out
and
cld
inc
sub
fisttps
pop
fildl
lret
int3
add
pop
push
pop
jle
xchg
xor
mov
not
in
in
outsl
std
mov
xchg
add
popf
push
xor
test
inc
nop
push
gs
lret
mov
jle
jo
push
rcl
lods
mov
fnstenv
add
sbbb
push
bound
mov
push
cmpsl
push
and
xor
idivb
neg
bndldx
mov
es
mov
lds
jge
leave
outsb
and
cld
xor
mov
cmp
lcall
data16
or
je
sub
fsts
iret
adc
push
fwait
out
clc
lret
add
cmpsl
mov
adc
cs
sub
cltd
or
movsl
jl
xchg
subl
pop
dec
aaa
imul
mov
roll
pop
xchg
sbb
pop
jae
xor
out
aas
fwait
out
lods
pop
aad
xchg
decb
xorl
clc
scas
xchg
xor
adc
in
xchg
sbb
xor
xchg
repnz
stc
jl
stos
pusha
jnp
or
mov
adc
xor
dec
inc
mov
std
mov
pop
lods
js
int
xchg
gs
pusha
stos
dec
fnstsw
neg
xor
pop
test
mov
js
cmpl
sbb
bound
dec
pop
xchg
sbb
push
jns
fidivrs
scas
mov
pop
or
inc
cmp
mov
dec
mov
mov
pop
xchg
adc
mov
mov
in
imul
leave
cmc
addl
loope
sub
mov
aad
push
rclb
and
adc
dec
pushf
push
and
imul
pusha
fwait
movhps
mov
lret
jae
shr
push
jge
out
enter
mov
jp
push
rcr
sarb
loop
dec
push
jl
leave
adc
jo
pushf
loop
push
cmp
shl
leave
mov
lock
fs
add
subb
inc
lds
repz
sbb
pop
mov
enter
dec
sahf
daa
fldln2
mul
inc
out
sub
or
shlb
inc
scas
cmc
loop
or
push
xchg
mov
test
push
adc
cltd
cmp
or
add
cli
loope
jbe
cmp
jp
cmpsl
xor
aas
pop
imul
mov
lret
data16
movsb
dec
aas
shll
sbb
mov
xlat
popl
mov
jo
mov
dec
rclb
neg
ljmp
in
push
adcl
or
inc
adc
xchg
mov
pop
mov
test
inc
adc
jecxz
mov
push
fildll
enter
imulb
mov
aas
push
shl
and
mov
jle
mov
cltd
lret
mov
jl
inc
in
mov
jl
pop
xor
fldt
dec
repz
add
stc
inc
xchg
out
lret
sbb
jge
cmp
inc
dec
mov
ficompl
gs
rorb
jecxz
fstps
js
xchg
jl
cmp
test
mov
or
xchg
jo
lret
jne
mov
mov
jle
call
out
fstps
in
dec
push
lds
cmp
cwtl
sahf
xchg
dec
sub
xor
pop
out
pop
jmp
push
enter
xchg
std
cmp
push
pop
clc
jle
inc
jp
and
in
push
dec
xchg
je
insb
xchg
add
scas
and
imul
and
mov
outsb
hlt
enter
xlat
mov
dec
bound
mov
rcrb
or
fwait
int3
push
xor
or
test
out
xchg
mov
shlb
fnstenv
dec
pop
into
xlat
xchg
mov
int
mov
mov
sbb
xorl
xor
stos
xlat
dec
push
in
xor
pusha
dec
repz
and
aad
sub
inc
loope
xlat
scas
loop
dec
add
adc
add
cmp
xchg
scas
push
pop
int3
int3
mov
nop
rclb
pop
jl
inc
test
mov
mov
xor
mov
jle
popa
cmp
adc
into
mov
addr16
in
xchg
pop
out
cmp
cmpsl
and
enter
incl
int
or
push
pop
mov
test
jmp
pop
or
mov
je
inc
lret
arpl
adc
sbbb
ficompl
pushf
push
sub
lahf
insl
or
mov
into
jge
leave
test
sbb
imul
or
xchg
xor
sbb
dec
cmp
pop
movsl
inc
and
sarl
add
stc
stos
jl
jp
ret
cmp
sbb
jp
jns
and
pop
inc
jge
sbb
pushf
bound
xor
ds
into
fwait
xchg
daa
repz
lcall
sub
loop
inc
ss
jl
mov
icebp
popf
hlt
subb
outsb
aas
dec
aas
pop
fdivl
outsl
nop
hlt
rclb
fidivrs
xchg
pop
mov
jno
sarl
test
cwtl
pop
repnz
dec
push
clc
sahf
idivb
call
inc
call
test
sbb
dec
inc
scas
popf
nop
cmp
mov
aad
sar
mov
sbb
addr16
imul
dec
into
xchg
shll
jle
adc
dec
jg
xchg
sub
xchg
fcomps
inc
jmp
jmp
or
out
xor
add
insb
test
sahf
ret
sub
sbb
hlt
jle
subl
jnp
outsl
or
scas
jl
sub
fs
and
fisttpl
mov
push
and
push
popf
inc
pop
stos
cmp
push
enter
jno
pop
mov
popa
notb
mov
and
push
inc
xor
int3
pop
adc
mov
pop
dec
jno
in
ds
pop
cmpsl
dec
dec
pop
xor
arpl
mov
cltd
cs
add
mov
mov
pop
loop
cmp
sub
or
cmp
ffreep
adc
mov
pop
jmp
icebp
call
into
dec
jmp
andl
pop
sub
cmp
cmc
fiadds
adc
int3
dec
push
or
cli
shl
jno
mov
out
sub
push
imul
bound
ss
add
add
adc
repnz
add
fld
jmp
je
push
idivb
or
xor
jle
ds
push
xor
inc
sti
inc
popf
test
inc
xchg
rcrb
or
jl
xchg
in
outsl
leave
xor
jg
and
adc
cli
xchg
xor
add
arpl
fdiv
and
testl
mov
xor
ss
cltd
xor
jp
xlat
mov
add
cltd
lret
sti
cmp
ficomps
imul
sbb
sub
dec
sar
xor
call
gs
jae
pushw
dec
add
mov
push
jp
xchg
jbe
xchg
iret
ja
jle
dec
jl
lahf
push
mov
fisubl
ja
ljmp
adc
rorb
pop
cmp
mov
test
push
orb
sbb
arpl
fstl
push
popa
std
into
jo
xorl
ret
sub
stos
or
xchg
test
cmpsl
sbb
into
gs
out
mov
inc
jbe
iret
add
call
or
and
adc
fisubs
cs
call
addb
jb
mov
pop
cmp
ret
imul
mov
add
lods
dec
jmp
xchg
pop
and
jle
adc
fucomp
pop
repnz
rclb
lods
pusha
int3
movsb
ud0
jae
mov
xchg
repnz
or
fisubrl
cld
cli
mov
sahf
icebp
and
test
inc
inc
icebp
or
xchg
xchg
or
rcrl
xlat
add
pop
cmpsl
jb
sbb
arpl
arpl
mov
adc
push
mov
mov
lock
iret
cld
dec
dec
aad
in
cltd
push
test
add
inc
add
or
in
pop
xchg
mov
cld
mov
es
inc
xor
sahf
mov
push
pop
or
rclb
cmp
jno
stos
sbb
pusha
mov
jmp
cli
shlb
vpmovmskb
fistps
ljmp
xor
fcmovnb
jo
nop
inc
push
or
adc
xchg
cmc
pop
test
sub
scas
decl
mov
fwait
pusha
push
mov
js
lods
mov
pop
cs
mov
dec
cmc
mov
movsl
out
bnd
mov
stos
dec
sbb
or
jo
push
stc
jmp
shll
dec
cwtl
adc
jb
hlt
fistps
mov
fs
test
into
sub
sbb
loope
mov
addr16
pop
push
xchg
push
xchg
in
mov
sub
in
dec
add
inc
pop
fidivl
mov
inc
loop
add
xor
jno
pop
ds
jp
xor
sbb
dec
sbb
es
jp
ret
out
fcomp
loopne
leave
pop
jge
loop
xchg
test
daa
repz
int3
inc
clc
xchg
icebp
hlt
cmp
lahf
cmpsl
push
or
cs
sbb
xchg
cmp
imul
out
mov
fwait
inc
push
jbe
mov
in
rorl
das
push
ds
pusha
or
aaa
mov
jno
xchg
icebp
les
sbb
cwtl
mov
pop
push
js
mov
fs
stc
sbb
dec
or
push
data16
cmp
rol
inc
jb
push
or
pop
loopne
dec
sub
ljmp
and
cld
in
jp
push
repnz
fnstenv
in
shll
sbb
adc
xor
mov
ficoml
das
lods
pop
rcrb
cmp
mov
mov
mov
jae
pop
inc
insl
and
std
fs
mov
cld
stc
push
rorb
ljmp
pop
loope
int
pop
mov
xor
pop
fisttpll
pop
or
repz
ds
push
mov
push
mov
pop
js
xchg
push
mov
dec
pop
jo
in
dec
iret
push
stos
mov
filds
testb
scas
outsl
add
and
leave
cmp
imul
jno
in
lahf
cmp
mov
cmp
pop
jns
sub
aas
sub
ljmp
adc
mov
gs
push
xor
mov
cmp
sub
ja
mov
xchg
cmpb
jns
bound
inc
loop
mov
scas
lea
icebp
aas
mov
sbb
and
adc
test
lahf
jecxz
pushl
test
imul
adc
sahf
mov
mov
cmpsb
fwait
add
je
fidivrs
sbb
inc
iret
inc
mov
jb
add
int
fildll
sub
push
pop
fcmovne
mov
add
mov
push
cmpsb
push
mov
out
in
xlat
loop
adc
sahf
sahf
mov
daa
jge
xlat
mov
jge
negb
push
pop
jge
clc
pminsw
ret
mov
xchg
inc
xor
cmp
pusha
loope
mov
sbb
loop
xchg
push
out
rcll
mov
pushl
loope
adc
mov
imul
mov
push
add
sub
sub
sti
popa
push
cmp
jmp
mov
dec
adc
mov
ss
es
ss
sbb
jecxz
into
dec
repnz
dec
cmpsl
add
or
scas
inc
jnp
insl
fsubrs
cmpsl
sarb
inc
movsl
or
scas
mov
push
dec
test
push
add
inc
mov
rclb
adc
add
inc
mov
cmp
jge
in
push
mov
xor
jl
jle
stos
cmp
aaa
jmp
in
xchg
add
movb
cwtl
popf
mov
imul
push
cmp
shrl
inc
sub
mov
jae
es
sub
in
insl
bndldx
cmp
or
popf
shrl
or
fbstp
mov
and
or
mov
xlat
testl
mov
call
and
dec
dec
jnp
gs
into
xor
int3
push
dec
jle
mov
add
pop
cwtl
mov
divb
push
icebp
and
dec
inc
push
mov
je
out
push
lea
and
ds
mov
adc
cli
adc
xchg
or
cmp
pushl
pop
mov
xor
xchg
int3
inc
orb
mov
sbb
mov
xlat
out
cmp
sub
loop
idivb
and
loope
iret
push
mov
push
cmpsl
cli
dec
jne
loopne
xchg
dec
or
xchg
fcomps
test
cmp
xchg
add
push
iret
or
pop
mov
jb
inc
or
xchg
daa
and
nop
xor
mul
out
test
or
mov
mov
inc
xor
insl
inc
sbbb
iret
into
movsb
test
arpl
cwtl
call
cmp
jle
clc
xchg
sbb
jbe
mov
mov
fwait
mov
mov
push
ja
test
dec
xor
sub
mov
mov
xorb
push
pop
pop
mov
jbe
lcall
in
hlt
addr16
push
and
movhps
adc
add
sbb
mov
stos
inc
mov
nop
push
iret
into
xchg
in
xlat
mov
mov
or
loope
loope
xor
das
mov
std
and
jg
mov
out
pop
mov
stos
aam
xor
test
inc
cld
cmp
mov
or
sub
mov
adc
ja
sub
inc
test
cltd
addl
pushl
xchg
shll
xor
adc
xlat
call
test
ja
cmp
int3
jmp
lods
xlat
mov
fwait
lock
cmp
or
lret
and
mov
in
cmp
inc
sbb
add
call
mov
insb
inc
or
xchg
adc
shll
lods
lods
test
dec
push
and
xor
test
or
call
jl
jnp
or
dec
xchg
ss
ficompl
pop
mov
pop
mov
adc
pop
mov
sbb
adc
cmpsb
lret
imul
mov
movsl
rcll
mov
and
iret
lret
or
mov
in
imul
rolb
sbb
loop
jmp
push
pop
int
rorl
adc
lods
sarb
add
enter
jmp
or
add
dec
ss
or
into
push
cwtl
outsb
ret
cmc
cwtl
hlt
dec
adc
xor
xchg
dec
push
rclb
pop
jmp
jecxz
xor
cmpb
adc
fmuls
sbb
mov
inc
lods
pusha
mov
jl
mov
mov
std
outsb
aas
cwtl
dec
cwtl
sbb
mov
or
push
or
push
shrl
mov
cmp
pop
out
jo
flds
jg
lods
repnz
mov
xor
jl
dec
sbb
adc
mov
nop
push
sub
sbb
shlb
sub
or
rclb
push
pop
nop
sahf
push
lret
pop
jecxz
xlat
pop
lods
mov
pusha
das
xor
xor
push
idivb
popf
nop
lods
vpaddsw
cmpsl
jecxz
data16
pop
xchg
aam
and
enter
push
xchg
add
dec
xor
dec
or
cmc
out
call
xor
lea
push
mov
roll
iret
outsb
fisubs
mov
mov
or
mov
fnstcw
pmullw
lds
cmc
aas
in
adc
jmp
scas
jne
gs
xchg
pop
test
jg
pmullw
lds
cmc
aas
in
adc
jmp
scas
jne
gs
xchg
pop
int
int
movsl
pmullw
insl
das
cmc
aas
in
int
add
push
sahf
inc
scas
push
mov
test
jg
or
jne
in
ljmp
clc
fstl
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
lods
fsts
dec
push
adc
rcrl
pop
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
cld
add
xor
call
add
arpl
pop
add
add
add
add
add
add
inc
add
add
push
mov
imul
add
add
add
push
pop
add
add
iret
add
repnz
add
add
pop
add
dec
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
add
pop
add
jl
test
popa
add
pop
add
cltd
add
add
add
add
add
add
add
movsb
add
cltd
add
and
data16
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
in
inc
add
add
add
add
js
in
add
add
add
add
add
cld
add
push
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
ret
add
add
add
arpl
pop
add
inc
add
str
outsl
add
add
sbb
add
push
lea
mov
lods
add
add
add
add
mov
cmp
push
add
add
add
insl
add
add
add
add
add
add
add
add
add
and
push
add
add
add
dec
add
add
out
xchg
xchg
add
add
add
xor
add
add
add
add
lret
add
add
and
pop
add
add
loop
cmpsl
add
add
add
add
adc
add
add
aam
outsl
add
add
addb
add
add
pop
add
add
add
add
add
add
add
add
add
cmp
test
js
dec
add
pop
add
add
add
add
add
cltd
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
or
aas
add
add
add
add
pop
add
mov
add
add
add
add
mov
cltd
add
add
add
mov
inc
add
add
add
add
insl
add
add
add
add
les
xor
add
add
add
add
push
add
sbb
sbb
dec
add
add
add
push
add
add
add
add
add
pop
add
add
add
roll
popa
add
add
add
add
add
add
adc
add
add
aaa
shr
sub
rorb
push
mov
jmp
jne
push
sub
shlb
xchg
mov
outsl
loopne
ja
add
das
mov
xchg
in
ljmp
dec
js
sbb
lret
jp
lods
test
push
fcomps
std
pop
dec
cs
arpl
jl
jb
sub
decl
fadd
and
mov
call
and
pop
cld
jae
ja
addr16
pop
loope
fsubp
repnz
cmp
xor
scas
pop
jl
aaa
xor
testl
jmp
sbb
adc
lret
pop
leave
mov
dec
and
fidivs
or
push
inc
push
add
out
das
mov
imul
xor
sbb
insl
test
shrl
add
xchg
in
shll
flds
inc
aad
jns
inc
mov
inc
sbb
xor
mov
divl
sbb
movsb
add
mov
ss
enter
jecxz
jns
adc
movsl
mov
sub
adc
test
lock
rcrl
loopne
repnz
pop
sbb
pusha
das
mov
jmp
pop
xor
jnp
and
jle
sub
outsb
push
or
push
push
cltd
mov
pop
sbb
and
adc
inc
test
fsubs
test
cmp
xlat
mov
in
popa
adc
pushf
aad
xor
in
arpl
out
mov
scas
int
rorl
mov
loopne
pop
imul
popf
ret
jl
iret
pop
ficompl
inc
bound
je
mov
jb
xor
xchg
imul
das
test
es
jbe
hlt
daa
sahf
pop
imul
and
add
lea
sbb
inc
dec
iret
divb
xor
inc
sti
lahf
out
lock
cmp
into
lods
jecxz
pusha
inc
sbb
loop
ds
std
or
mov
pop
sbb
pop
cmp
stos
mov
adc
js
lret
inc
adc
cmp
popa
das
mov
lret
inc
or
arpl
out
aam
cmp
push
jecxz
push
push
shrl
fdivrs
mov
pop
sbb
insb
fs
rcrb
sbb
or
test
icebp
cli
add
mov
adc
cmpsb
push
jp
insb
dec
add
ficoml
push
inc
call
imul
jb
popa
jns
lods
sub
or
xchg
in
gs
test
and
dec
leave
mov
test
push
push
lcall
icebp
cli
pop
lret
pop
mov
add
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
