call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
mov
mov
pop
dec
and
inc
mov
xchg
and
jb
in
out
testl
xchg
aaa
addb
repnz
lea
xchg
and
adc
movl
testl
mov
lcall
pusha
fadds
imul
call
and
shrb
pop
in
cmp
sub
outsb
push
pop
add
lods
clc
cmp
mov
sub
fwait
daa
rolb
sub
push
std
jnp
cmpb
jp
mov
pop
leave
outsb
mov
push
leave
jne
outsl
lahf
test
push
std
cmp
xchg
fisttpl
xor
xlat
in
pop
pop
insl
mov
repnz
cmpsb
ja
mov
fsubl
dec
test
cmpsl
lods
push
push
out
call
notb
xor
stos
into
push
mov
push
out
pop
push
js
inc
xchg
pop
xchg
js
push
std
pop
pop
movl
daa
mov
adcb
loop
shrb
sahf
xor
sbb
push
jp
dec
out
inc
je
jb
inc
notl
and
cmp
repz
xchg
and
push
fldenv
pop
mov
cmpb
lret
inc
loope
in
xor
cmp
inc
xchg
inc
loop
ret
add
outsb
mov
mov
aas
rcll
shlb
xchg
xchg
and
jb
out
testl
xchg
aaa
addb
loop
shlb
xchg
xchg
and
jb
out
testl
adc
jnp
fcomps
or
mov
les
add
mov
shrb
jnp
js
out
loope
sbb
negb
jl
push
lahf
sarb
push
mov
add
pop
sbb
and
cwtl
les
dec
inc
repnz
jecxz
cmpsl
jo
mov
inc
push
vrsqrtps
cltd
xchg
jge
mov
pop
lods
pop
out
lcall
sbb
mov
insb
jne
jo
popf
mov
push
aad
jg
cmpsl
test
shll
xchg
fs
out
insb
inc
ret
clc
adc
sub
mov
arpl
pop
out
push
cli
push
ret
inc
gs
movsb
pop
stos
and
fxch
push
adc
or
imul
in
mov
jno
inc
inc
dec
xor
jmp
inc
mov
mov
ret
push
test
mov
pop
repz
inc
hlt
pop
push
mov
lea
ret
popa
jl
lods
jbe
push
jns
data16
adc
mov
add
xchg
xchg
lock
dec
pop
popa
sub
dec
aaa
fs
cmpsl
lods
sub
mov
adc
and
xor
jge
dec
hlt
lahf
mov
adc
call
ss
add
shlb
aas
push
push
lret
sti
cltd
lock
sub
rcrb
mov
adc
stos
addr16
mov
clc
sti
sahf
jmp
dec
popa
lock
fwait
in
push
pop
pop
mov
mov
data16
jmp
pop
imul
ja
mov
inc
js
push
je
dec
and
or
popa
push
inc
out
shrl
loope
xchg
out
lret
lds
lret
push
stos
sbb
cltd
dec
mov
shl
xchg
push
std
scas
jnp
push
sbb
lock
jae
cli
out
jno
push
and
cltd
dec
jp
mov
cmp
push
repz
movsl
stc
pop
adc
xor
cs
cmc
and
imul
in
or
and
cmpsb
sbb
sbb
fwait
mov
sbb
shlb
mov
add
or
pop
mov
ds
testl
stos
jmp
adc
test
or
js
pop
das
cmpsl
jo
cli
or
in
jb
fdivrp
and
push
loope
pop
movsb
xchg
iret
popf
addr16
jb
in
mov
inc
mov
addr16
pop
xchg
jg
leave
fnstcw
insl
inc
int
ds
lahf
pop
test
adc
pop
ret
push
mov
popf
jl
aad
fstl
xchg
sbb
mov
add
fstpl
sub
push
sbb
sbb
rclb
pusha
and
mov
pop
cmp
xor
addl
mov
mov
cmp
aam
cmpsb
jle
sbb
jae
xchg
sub
jbe
leave
lods
rcl
lds
leave
push
hlt
xchg
jo
repnz
xorl
cwtl
je
mov
addr16
sarb
xchg
lret
mov
popa
and
sbb
push
xor
pop
fs
es
mov
cmpsb
mov
fwait
push
test
lods
inc
cmp
cmp
mov
enter
xchg
push
lds
mov
scas
and
jmp
arpl
jecxz
into
add
jb
xor
insb
inc
mov
xchg
js
rorl
jmp
add
mov
daa
or
rorb
bound
add
inc
mov
push
inc
or
mov
add
and
imul
add
sub
shl
cmp
push
repnz
out
xor
popa
cmp
add
pop
out
outsb
aad
stc
iret
and
je
aam
sub
rolb
mov
mov
mov
ja
lods
test
movsl
or
pop
mov
cli
sub
mov
loope
push
pop
jns
es
stos
dec
mov
ltr
push
iret
add
shlb
pusha
xor
adc
testb
mov
jg
test
lret
out
pushl
test
imul
push
test
arpl
xor
xorb
icebp
cmp
ret
imul
test
lret
adc
and
sub
test
dec
adc
jns
cmpsl
cmp
jo
cmp
fisttpl
add
clc
rol
insl
push
xorl
push
sbb
jge
pop
fisttpll
pop
mov
sub
scas
sbb
adc
rcll
pop
insb
sub
xchg
arpl
out
ss
and
jae
shl
out
shrb
mov
xchg
movsl
js
rorb
enter
lds
ljmp
adc
xchg
add
lret
xchg
add
fbld
loop
insb
jnp
mov
xor
push
inc
test
loope
les
inc
mov
mov
jae
mov
inc
mov
inc
mov
into
mov
pop
pop
jae
test
fcmove
cli
ss
xor
mov
int3
pop
mov
shll
or
sar
push
jo
add
ret
in
inc
or
xor
pop
jno
sub
inc
stc
sbbb
jmp
add
dec
push
cmp
jmp
or
arpl
in
les
dec
stc
out
mov
sbb
int3
shll
pop
jae
inc
lock
xor
pop
xlat
int3
mov
push
jl
cltd
es
mov
mov
sbb
loope
loopne
push
in
jge
pop
cs
stc
mov
adc
and
push
add
xchg
xchg
xchg
dec
dec
ja
and
xchg
js
push
dec
shll
dec
push
stos
shlb
lds
aam
jp
shll
xor
push
push
sub
xchg
xor
and
out
jmp
filds
test
fucomi
rolb
xchg
enter
adc
aam
jl
jle
loope
sahf
je
sub
push
enter
lcall
subb
add
cwtl
xor
in
cmpsb
int3
jo
push
sub
sbbb
mov
adc
add
pop
jo
daa
cmp
aas
sub
xorl
cmpsl
ds
push
ficompl
sub
test
stos
push
sbb
scas
xor
xchg
data16
adc
xor
lds
fidivl
mov
xchg
in
mov
pop
stos
sub
dec
xor
cmp
mov
fnstenv
sub
add
xchg
push
mov
xchg
sub
sub
mov
lods
fmuls
aaa
jg
out
fldz
sbb
cli
movl
incl
pop
xor
cmp
xchg
mov
stc
clc
pop
pusha
xchg
dec
test
jbe
jg
sti
arpl
hlt
fstpl
fwait
daa
mov
mov
mov
inc
lds
mov
sub
add
movsb
inc
mov
sti
jecxz
or
in
les
pop
stc
nop
pop
inc
repnz
lret
cmp
push
ss
test
popa
loop
inc
dec
test
cmpsb
jle
pop
shlb
inc
test
test
movsb
testb
xor
or
add
push
test
movsl
in
xchg
arpl
popf
adc
lock
movsl
adc
mov
or
addr16
jbe
jg
aam
idivl
mov
mov
sbb
adc
lea
loop
inc
das
addl
out
push
jo
mov
or
xor
or
jle
je
fcompl
andb
add
movsb
push
dec
xor
push
mov
pop
adc
push
jecxz
test
fstp
xlat
addl
mov
loope
aas
dec
leave
add
fcmove
mov
jo
arpl
mov
rcll
sbb
mov
adc
add
lret
out
in
sbb
xor
push
xchg
and
repnz
mov
loopne
imul
adcl
pop
out
inc
cltd
ja
jne
sub
data16
pop
test
cmp
mov
jno
and
in
enter
test
arpl
leave
lret
std
inc
inc
hlt
xchg
imul
fbstp
test
mov
or
adc
bound
in
mov
push
in
mov
dec
cmc
ja
popa
mov
push
cmp
jb
psrad
andb
adc
push
jnp
sub
into
rol
hlt
dec
jg
divb
out
repnz
xor
sub
add
push
bnd
jg
lods
lock
ja
testb
jbe
add
inc
and
add
add
xchg
test
adc
in
jmp
mov
push
rcrl
clc
cmp
cmpl
dec
push
pop
pusha
mov
dec
cmpl
fsubp
dec
sahf
aam
jmp
divb
add
cmpsl
daa
and
dec
clc
gs
bound
push
leave
mov
sub
xchg
pop
sub
xor
mov
js
cmp
or
gs
xchg
andl
ret
out
std
and
cmc
push
lret
add
hlt
mov
add
filds
push
sarl
arpl
push
push
mov
pop
ret
out
mov
pop
ja
sahf
test
popf
sub
ljmp
not
xchg
aas
popa
jge
push
loope
mov
dec
mov
je
cmpsb
repz
dec
cli
inc
out
mov
pop
idiv
mov
ja
sub
lods
or
std
xchg
repz
sub
ror
andb
push
dec
test
cmc
adc
adc
imul
cwtl
adc
adc
loopne
mov
cmpsb
iret
xchg
cwtl
je
and
push
and
lret
push
fwait
fs
cs
pop
jp
inc
xchg
lds
ficompl
int
push
dec
cwtl
stc
mov
cli
frstor
cli
jmp
pop
add
adc
xlat
jbe
dec
int
sbb
sub
xchg
test
sub
inc
out
add
adc
add
sub
dec
jge
cmpsb
rorb
add
and
fdivrs
inc
and
scas
adc
ljmp
pop
je
pop
or
sbb
mov
jb
sbb
pusha
inc
jmp
test
mov
scas
jg
fmull
out
push
in
leave
add
jecxz
clc
push
inc
dec
in
mov
add
sbb
pop
test
ds
movsb
test
fadds
test
jp
lahf
and
inc
popf
faddl
nop
add
out
mov
mov
add
push
adc
lret
or
int
push
push
shr
out
pop
and
sti
adc
lock
out
nop
sbbl
sub
jecxz
fistps
aas
jo
adc
push
cmp
js
lahf
jg
sbb
or
cmp
sub
xchg
jnp
mov
inc
nop
sub
outsb
xor
cmp
xchg
pop
xchg
ffree
xchg
adc
add
in
mov
fiaddl
push
adc
mov
pop
gs
mov
jno
sarb
push
push
sub
je,pt
insb
fnsave
es
or
and
push
aas
test
push
push
mov
lret
cmp
test
stos
sbb
popf
mov
jne
mov
mov
testl
or
cmp
push
sti
ret
pusha
adc
fimuls
jb
mov
imulb
push
pop
adc
loope
fcmovbe
push
cmp
lcall
inc
lret
popa
fldenv
add
pop
add
adcl
in
pop
clc
in
aam
mov
inc
adcl
inc
sahf
adc
rcrb
pop
dec
adc
pop
mov
movl
push
ja
rcrl
dec
add
ret
and
dec
dec
dec
dec
dec
dec
mov
mov
enter
inc
mov
out
pop
call
or
mov
out
adc
mov
sub
mov
jmp
aam
pusha
cmp
jecxz
cmpsb
sub
jle
mov
aad
or
push
ror
pop
out
add
cli
in
jge
repz
imul
mov
sti
cmc
roll
int3
jmp
adc
jb
xchg
mov
dec
or
and
jg
sbb
mov
outsl
je
mov
pop
mov
test
dec
push
aad
sbb
inc
push
adcb
sarb
or
jg
mov
xchg
adc
test
dec
stos
jl
out
cmp
xchg
xchg
je
mov
fwait
jbe
jne
sub
and
xor
jns
mov
sbb
rcrl
jbe
mov
and
pop
and
dec
push
adc
aas
outsl
fldt
imul
movsl
dec
adc
orb
daa
das
xchg
cld
sub
fldcw
push
sbb
pop
jge
xchg
in
mov
push
into
xchg
sub
std
pop
mov
mov
jae
bound
aas
fadd
jno
scas
or
into
lds
adc
outsl
outsl
mov
je
and
add
out
test
les
jge
mov
and
cmpsl
mov
sbb
cmc
lds
in
sub
jecxz
dec
jb
jnp
and
sbb
cmp
addr16
push
imul
sub
fs
mov
add
loopne
cmc
fistpl
aas
add
pop
mov
stos
movsb
outsb
push
sub
sub
insb
test
fldt
xor
xchg
jg
xchg
bound
xchg
push
das
popa
gs
pop
pop
fildl
and
mov
push
sub
sbb
mov
flds
in
cmp
jecxz
inc
xchg
fwait
int3
subl
cld
push
mov
cwtl
pop
es
gs
sub
dec
xchg
lds
sbb
dec
fldcw
dec
in
in
mull
add
jno
loope
sub
subb
daa
inc
xor
mov
scas
arpl
cmp
inc
inc
cmp
aas
cmpsl
test
subl
call
push
jne
jle
push
nop
lock
stos
push
fmull
aam
adcb
jb
cwtl
adc
mov
aam
out
lret
adc
pop
stos
int
cmc
push
mov
imul
sub
inc
addr16
xor
add
fadds
loop
or
rcll
xor
inc
lds
push
sbb
inc
inc
add
pop
cltd
add
into
pop
or
sub
jge
sub
xchg
shlb
jg
and
push
pop
imul
std
inc
mov
loop
xchg
test
stc
push
push
popa
cmp
ds
addl
mov
mov
push
xchg
ds
call
icebp
sub
push
and
xor
jbe
add
inc
iret
xor
arpl
pop
mov
shl
fisubl
xchg
pop
lret
jge
cmpb
shrb
pop
sub
jns
bound
hlt
xchg
daa
mov
jno
daa
in
lret
adc
pop
xchg
add
out
sbb
stos
xchg
rcll
xchg
les
dec
psubb
ficomps
adc
jecxz
cli
jl
stos
fimuls
ret
xor
test
sbb
sbb
mov
cmp
nop
dec
loop
pop
lahf
out
loope
loopne
test
xor
int3
test
in
adc
pop
cmc
outsl
inc
fstp
stos
and
sbb
shrl
sarb
and
xchg
gs
cmp
adcl
push
test
jp
or
push
cmp
call
imul
ljmp
lods
jecxz
mov
mov
mov
ss
sti
xor
mov
add
call
sar
xchg
push
fldenv
imul
int
push
jge
xchg
mov
rcrl
stos
inc
inc
jp
jg
in
dec
adc
mov
cli
and
inc
pop
fbstp
xor
pusha
rol
out
xchg
scas
jbe
mov
inc
in
lock
mov
mov
mov
jle
mov
cltd
lret
cmpsb
fwait
pop
adc
sub
cld
popa
repnz
je
aam
mov
pusha
pop
cmp
push
xchg
int
pop
pop
jl
cmp
xchg
out
mov
addr16
jne
push
mov
insl
lock
sub
gs
insl
sbb
xor
ja
pusha
test
jmp
loope
inc
bound
sub
aad
movsl
add
je
pop
pop
mov
out
ja
ds
lret
cmp
xor
jne
aam
xlat
xchg
pusha
mov
shrl
xchg
ret
cwtl
cwtl
mov
push
push
ja
sub
fisttpl
fdivl
adc
jecxz
jo
ret
xor
mov
inc
loope
xchg
dec
cmp
mov
pop
imul
cmp
cmp
adc
lcall
push
cwtl
jno
jno
jecxz
dec
ldmxcsr
push
pop
jne
jl
jmp
mov
lds
jae
ffreep
pop
movsb
jne
mov
out
cmpsb
pop
lret
cmp
add
inc
mov
imul
mov
sub
insl
xchg
outsl
push
push
mov
cmpl
mov
and
push
push
inc
sbb
xchg
lds
mov
pusha
lcall
aas
mov
cmp
pop
mov
xor
out
lea
inc
hlt
xchg
les
add
adc
adc
or
daa
cli
movsb
or
mov
shlb
mov
mov
rcr
jne
dec
repz
and
addr16
push
mov
mov
jg
dec
jae
cwtl
or
into
xchg
mov
jp
out
rolb
sub
dec
adc
idivb
jmp
mov
rolb
mov
fdivrs
cs
mov
push
mov
mov
sar
cmp
and
sub
mov
leave
add
fdivs
mov
mov
cs
negl
shl
out
loopne
jns
push
add
cmp
out
lcall
adc
call
adc
mov
stc
testl
jb
in
mov
add
iret
ret
xchg
mov
int3
pop
cltd
and
ds
push
movsl
lds
pop
and
xor
mov
insb
xchg
xor
push
lret
pop
ss
cwtl
cmpsb
sub
fdivs
push
pop
vmovshdup
stc
movsb
and
push
inc
or
lods
ljmp
scas
lcall
scas
sub
jp
push
fsubs
cs
cmp
mov
xchg
xchg
mov
aas
lea
mov
loopne
scas
rcrb
jae
cmp
fcompl
pop
pushf
movsl
aad
add
mov
in
pop
push
push
mov
test
stc
imul
xchg
add
mov
or
rclb
fs
sub
lods
fldenv
lods
cmp
push
mov
aaa
movsb
mov
adc
or
jp
dec
mov
int3
xchg
mov
lcall
xchg
dec
gs
push
cmp
sub
adc
imul
push
jecxz
fstsw
outsl
sbb
ljmp
mov
pusha
mov
pop
mov
fdiv
xchg
jmp
idivb
push
daa
jp
cmp
pop
dec
mov
push
mov
int
fbld
pop
in
iret
fs
stc
ds
cwtl
and
popa
fwait
mov
or
into
call
xchg
out
aaa
mov
cwtl
push
mov
sub
push
iret
cmp
jb
lods
add
dec
aad
pop
push
lea
aad
and
bsf
outsb
mov
call
lods
fdivrs
dec
ret
pop
add
pop
pusha
sahf
nopl
lds
out
jle
inc
test
outsl
stos
jmp
xor
push
xchg
jmp
or
clc
pop
pop
sbb
sbb
fisubs
and
jbe
inc
xchg
jecxz
fdivrl
xor
mov
mov
out
inc
mov
or
sub
ljmp
aaa
andl
pop
xor
std
inc
cmp
nop
cmp
or
aaa
notl
mov
xchg
xchg
xor
dec
ljmp
imul
or
data16
out
lcall
loopne
cmp
fmull
push
dec
jo
mov
jp
fistl
ss
sub
js
in
xchg
dec
loop
fimull
mov
fldl
dec
rclb
and
mov
shl
add
dec
int3
push
andl
push
sbb
pop
sub
mov
insl
sbb
add
or
sub
jg
iret
sbb
mov
and
lods
sbb
lds
popf
mov
stos
scas
je
mov
cmp
cmp
or
addb
loop
shlb
xchg
xchg
and
jb
out
testl
xchg
aaa
addb
loop
shlb
xchg
xchg
and
jb
out
testl
xchg
aaa
addb
loop
shlb
xchg
xchg
and
jb
out
movb
and
inc
repnz
loop
shl
add
push
jne
cli
pop
sbb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
daa
aam
addb
pop
loopne
mov
loope
nop
xor
inc
xchg
pusha
out
imul
xor
and
shlb
rolb
pop
loopne
nop
ja
inc
mov
mov
js
pusha
out
testl
daa
jbe
push
pop
push
xchg
addr16
inc
mov
mov
hlt
adc
mov
inc
outsb
xchg
aaa
xorl
jns
xor
dec
xor
mov
or
iret
xchg
imul
pop
dec
test
or
pop
push
scas
cltd
mov
sbb
sub
mov
lahf
adc
jl
jns
inc
mov
push
js
std
sahf
inc
jecxz
cld
mov
shlb
shlb
loopne
test
mov
aad
mov
sbb
aad
fadds
inc
cmp
fsubl
push
pop
mov
dec
pop
xchg
nop
push
nop
push
cmc
adc
fsubrs
inc
test
xor
rcr
testl
rorb
fstpt
inc
fdivrl
loopne
test
loopne
nop
ja
inc
mov
xor
jb
pop
out
imul
sub
adc
pop
scas
bound
in
and
push
out
adc
add
inc
orl
inc
xchg
jb
and
sbb
inc
fsts
ret
xor
sbbb
mov
xlat
push
dec
mov
push
mov
ja
inc
mov
mov
xchg
pusha
out
testl
daa
shlb
rolb
pop
loopne
nop
ja
inc
mov
mov
xchg
pusha
out
testl
daa
rclb
push
mov
sbb
into
pop
sarb
loope
hlt
outsb
testb
push
andl
cmp
aaa
push
cwtd
xor
ljmp
fisubl
mov
or
ret
adc
pop
push
add
ljmp
adc
pop
lret
movsl
mov
mov
pop
inc
leave
std
scas
es
popf
or
insl
int3
mov
xlat
dec
lcall
sbb
add
ljmp
stc
cmpsb
inc
pop
aas
mov
inc
test
lock
inc
fcoml
scas
pushf
inc
subb
adc
inc
add
imul
jbe
int
int
lret
ss
std
and
sbb
lahf
xchg
fstpt
add
into
int3
xor
cmpl
loope
aaa
jmp
addr16
pop
or
xchg
jp
fs
push
push
xlat
in
jne
lds
xchg
xchg
sahf
in
dec
sti
mov
sbb
data16
mov
jge
cld
lds
pop
cltd
push
mov
inc
mov
dec
and
jae
adc
icebp
or
std
cmp
clc
rcl
lahf
push
int
add
stc
mov
push
mov
push
insl
sarb
xor
test
push
int3
mov
mov
subl
inc
mov
out
dec
jle
iret
lods
fdivs
jg
pop
cmp
mov
sbb
mov
mov
adcb
push
iret
pop
pop
scas
xchg
test
popf
xlat
add
jbe
bswap
data16
ret
rorl
fwait
pop
pop
dec
ret
cmpsl
mov
cld
mov
lret
fstpt
push
cli
sub
pop
lret
ljmp
or
fidivrs
and
cld
lods
mov
je
pop
test
pop
push
popa
mov
pop
inc
loope
pop
mov
pop
jl
lea
pop
mov
adc
add
xchg
movsl
std
pop
dec
fisubrs
or
mov
pop
dec
push
scas
xchg
hlt
push
adc
call
bnd
xchg
push
or
imul
ljmp
lss
jecxz
enter
push
stos
xchg
or
and
repnz
movsb
ficoms
cmp
clc
jbe
sub
sbb
popa
out
and
mov
mov
dec
cmp
mov
movsb
cmp
or
movsl
mov
lock
js
in
lcall
cmpsl
mov
inc
cmp
xor
sub
add
dec
je
sub
loope
nop
push
cmpsb
jo
fcmovb
fs
cs
push
loopne
orb
out
add
aas
push
adc
xor
cmp
hlt
scas
insl
mov
in
cs
cmpsl
push
or
xchg
movsb
imull
scas
lock
jle
inc
aad
mov
dec
daa
pop
pop
pop
add
imul
loop
aas
and
adc
push
xchg
xchg
xchg
and
adc
stos
fsub
pop
sbb
dec
fldl2t
fs
xchg
mov
mov
fldl
les
inc
ds
pop
in
and
ficoms
cld
xchg
sub
mov
je
sub
mov
adc
inc
pushf
orl
or
cld
dec
xor
leave
nop
mov
xor
daa
test
mul
in
mov
mov
inc
push
out
push
mov
outsl
xchg
insl
mov
sub
jecxz
insl
pop
sub
mov
push
jg
out
and
mov
jo
dec
cmp
insb
and
lds
mov
dec
sub
adc
adc
sahf
push
jg
sarb
fiadds
dec
sarl
loope
repz
push
popf
stc
adc
pop
and
inc
and
enter
and
dec
xor
dec
add
pushf
or
pop
xorb
xchg
clc
mov
rcrb
jmp
push
xchg
jl
cmp
gs
add
push
sub
nop
jp
sub
enter
mov
push
int3
adc
lea
mov
push
cs
into
fdivs
cmp
call
jge
push
mov
or
sti
push
adc
xchg
mov
stos
ret
pusha
rcrb
ret
cli
sbb
mov
push
fldt
repnz
pop
aad
jno
sub
xchg
daa
das
cmc
setne
push
xor
mov
call
std
cwtl
and
and
cli
test
leave
lock
es
jecxz
out
notb
icebp
ss
mov
push
inc
inc
sar
mov
add
xchg
sub
ljmp
push
clc
sti
and
sub
jnp
and
outsb
arpl
int
sahf
sub
jo
sbb
pop
push
inc
mov
dec
lahf
or
sbb
cmp
lcall
rorl
enter
inc
mov
test
and
inc
hlt
testb
xchg
push
movsb
mov
push
jns
xchg
mov
add
cmpsb
lea
nop
cmp
movsb
test
popf
or
cmpsb
mov
test
mov
ljmp
leave
addl
int
push
push
daa
push
push
ja
aad
inc
sub
bound
test
push
xor
push
push
add
xor
cmp
divl
sbb
dec
fdivrs
sahf
subb
sbb
mov
xchg
leave
loop
test
mov
aas
and
popa
lcall
fcmove
shrb
jp
movsb
jecxz
push
adc
fsub
ljmp
repnz
in
rorl
jecxz
cmp
or
mov
jo
imul
mov
div
sub
push
jecxz
pop
xor
and
es
fs
jno
inc
in
push
into
mov
pop
lock
and
jb
out
fnstenv
in
insb
int
mov
pop
es
out
mov
popf
and
adc
clc
in
add
jbe
xchg
dec
das
subl
into
mov
test
push
xlat
mov
sbb
xchg
inc
stos
enter
leave
pop
mov
insb
cli
push
add
lods
js
repz
fcoms
test
lret
test
cmpsl
add
sbb
test
push
xor
xchg
shrl
movb
xchg
inc
mov
cmpsl
cmp
imul
es
pusha
and
std
push
dec
hlt
aam
test
mov
cmpsb
sahf
cmpl
xlat
shrb
mov
xchg
je
mov
popa
xchg
out
xchg
mov
clc
adc
dec
or
push
orb
push
bound
in
inc
jb
fwait
jno
loop
fisttpll
jnp
sub
mov
xchg
fistpll
js
aas
insb
loope
jecxz
fmul
sub
xchg
add
sbb
dec
shrb
call
xchg
movsl
into
mov
fcomps
mov
dec
or
fdivrs
mov
inc
test
cmp
mov
jns
add
insb
addr16
bswap
and
push
sti
or
sub
stc
xchg
rcrb
in
pusha
or
in
fwait
xor
mov
jmp
mov
je
xlat
jp
ret
popf
jae
int3
sahf
cld
arpl
cwtl
js
nop
lds
fld
push
repnz
jns
fst
ja
jbe
pop
push
aad
popa
add
jmp
mov
mov
test
add
jmp
sbb
pop
push
jbe
and
nop
jecxz
fisubrl
lahf
xchg
loope
cmpsl
jbe
mov
aad
pushf
add
inc
mov
inc
dec
xor
push
and
push
fstl
enter
loope
sub
shrb
fsubrs
aas
out
pop
clc
cmp
sub
mov
cltd
dec
add
out
loopne
sub
add
mov
sub
mov
stos
jnp
xchg
push
cmp
mov
ss
sbb
jge
out
mulb
or
mov
dec
sbb
sbb
inc
cmp
fcompl
iret
push
xorb
pop
outsl
mov
mov
lret
and
push
lock
xor
and
mov
mov
jnp
out
cli
fisubrl
jnp
fstps
outsb
and
jno
xchg
outsb
or
inc
cmp
fcmovbe
aad
jnp
jne
jnp
mov
into
call
pop
cmpsb
je
data16
insb
lret
and
dec
insl
mov
mov
clc
and
mov
xor
imul
sub
and
mov
xor
ds
inc
into
rcl
or
in
add
fbstp
cs
lcall
loop
std
std
and
ret
in
pop
jg
gs
jmp
lcall
arpl
cli
add
inc
je
pop
mov
test
cmp
clc
out
stc
fbstp
popa
xor
mov
sbb
xor
inc
mov
jmp
movsb
pushf
scas
sub
mul
fisttps
cmp
jle
in
arpl
jo
mov
enter
dec
jbe
add
movsl
cmpb
nop
or
fistps
outsl
es
push
icebp
xor
jecxz
sbb
xlat
add
mov
inc
aad
push
pop
sbb
in
js
cmp
testl
daa
mov
jl
shrl
xchg
shlb
stos
adc
mov
push
nop
and
fsubs
xchg
aad
imul
fimuls
icebp
sub
cmp
mov
js
cld
adc
insb
adc
jne
xor
repz
jbe
ljmp
mov
xor
or
stc
rcll
mov
push
cmp
sbb
mov
xor
push
enter
cmp
adc
shlb
cmp
xor
xor
js
add
pop
and
xlat
into
jno
les
xor
cmp
mov
pop
imul
cli
dec
dec
lahf
cli
inc
decl
aad
xchg
outsb
inc
mov
xchg
jne
out
out
add
pop
push
je
das
ret
imul
mov
mov
aaa
push
xor
mov
xor
into
inc
ss
pop
jbe
pusha
dec
test
outsb
ljmp
aas
iret
mov
mov
cmpsl
cmp
push
pushf
pop
xchg
or
sbb
jno
add
inc
call
inc
push
dec
je
nopl
dec
cmp
pop
sub
test
lret
rcrl
jl
movsl
pop
or
mov
inc
mov
ds
push
imul
sub
fwait
pusha
lock
push
or
adc
popf
in
cmp
rclb
push
in
icebp
sub
das
push
pop
sbb
sarb
xor
jmp
cs
adc
fst
lock
fwait
rolb
out
or
daa
cs
repz
lods
cmp
loopne
lods
lcall
test
imul
scas
jno
xchg
out
inc
aas
decl
push
stos
cmpsl
mov
mov
lds
sub
and
sbb
in
lods
mov
adcl
and
rolb
mov
imul
negl
cmp
dec
addr16
inc
add
inc
cwtl
add
jg
push
push
and
hlt
dec
sbb
dec
pop
aad
pop
loopne
jl
dec
mov
int3
mov
in
sahf
mov
jns
gs
pop
dec
jne
jle
push
adc
mov
adc
mov
in
xlat
mov
mov
cmpsl
hlt
outsb
aam
test
insb
stos
dec
call
ljmp
xor
fldl
inc
and
lds
adc
sbb
sti
inc
leave
xchg
mov
lcall
bound
sahf
fimuls
cmp
in
xor
push
push
shll
xchg
sarl
jo
cmp
cli
mov
inc
jge
out
in
out
push
hlt
incl
fldl
xchg
push
repnz
js
mov
sub
movsb
or
ss
mov
and
dec
sub
mov
xor
loope
lret
cmpsb
push
shrl
mov
push
outsb
push
mov
mov
xchg
inc
xchg
sbb
popl
adc
lock
adcb
sub
cmp
jno
jae
imul
and
jge
andb
and
sbb
add
popf
cmp
orb
js
rcrl
mov
pop
push
and
or
rcrb
add
adc
in
push
xchg
cli
and
adc
outsb
inc
sbb
pop
into
pop
fmull
stos
sub
inc
test
lods
clc
lds
data16
sub
push
ss
jp
push
xor
push
int3
decl
test
pop
add
lret
jae
mov
pop
lea
lret
dec
shrb
sbb
mov
pop
mov
or
lcall
movsl
add
and
mov
ds
incl
repnz
fistpl
into
xor
mov
jae
cmpsl
imul
aas
loop
jg
js
push
js
push
outsl
push
cmp
aam
pop
popa
jge
es
shrl
shlb
in
aad
mov
sub
pushf
leave
xchg
pop
cmpsb
push
push
orl
xlat
add
push
and
pop
cmp
inc
sub
sti
inc
xchg
jbe
subl
cli
daa
or
sub
out
xor
add
xor
xchg
insb
rcr
inc
sbb
mov
insl
stos
aas
push
mov
pop
loop
xchg
jne
push
test
sub
jecxz
inc
mov
mov
leave
pusha
fcoms
adc
inc
adc
xchg
jg
data16
pop
jbe
mov
repz
fnsave
xchg
repnz
enter
pusha
mov
mov
subb
jge
pop
and
xchg
lsl
stos
movsb
rol
mov
pop
jo
sbbl
mov
add
and
jg
pop
aaa
rcrb
test
jg
inc
push
sbb
ret
cmpsb
xor
aas
adc
cmpsb
sub
jbe
insb
sbb
pushw
out
and
cwtl
or
nop
cmp
ljmp
or
pop
sbb
adc
jbe
pop
xor
stc
push
gs
push
mov
and
stos
push
push
mov
lret
mov
fwait
inc
cmpsb
cmovno
sbb
out
hlt
jbe
mov
add
pop
not
daa
scas
mov
pop
stos
aas
inc
fst
fs
lahf
mov
in
jp
fsubrl
inc
arpl
ss
sbb
xchg
jg
mov
cs
sbb
ljmp
jae
pop
lods
call
imul
push
and
inc
outsb
shlb
rclb
mov
sbb
lock
std
div
fs
and
pop
lods
or
daa
sbb
mov
test
pop
fstl
rclb
fiadds
int3
cmp
lds
and
and
jl
pop
mov
jg
or
mov
sar
or
dec
sbb
adc
vmwrite
mov
mov
or
negb
out
test
dec
mov
cs
aaa
mov
push
stos
sbb
mov
and
or
push
and
sbb
and
mov
adc
and
icebp
fmul
das
dec
cmp
inc
adcl
or
pop
fs
faddl
adc
push
push
movsl
jmp
and
call
xchg
pop
ja
mov
mov
outsl
fs
push
push
fld
addr16
in
jnp
repz
aaa
cli
cli
mov
stc
pusha
test
repnz
jnp
lahf
or
xchg
sahf
or
fcoms
push
push
out
popl
add
sbb
aad
push
mov
mov
add
out
into
sbb
shrl
popf
adc
nop
rcrb
sub
movsb
jno
dec
adc
sub
icebp
pop
dec
dec
enter
fistl
xchg
lods
xchg
dec
jb
ficoms
adc
push
mov
test
cmpsl
pop
cs
lds
pop
ja
clc
pop
ret
stos
pusha
cltd
aam
cmp
xchg
dec
inc
aam
cmp
sti
adc
inc
jns
mov
mov
stc
xchg
inc
push
cmp
mov
mov
jge
dec
and
xchg
pop
stc
dec
ljmp
inc
push
popf
test
jl
sub
inc
fdivrs
sarb
lods
jmp
lret
scas
push
jl
push
push
bound
in
xchg
lret
das
xlat
fisttpl
push
mov
shl
nop
pop
lea
fidivs
mov
jl
in
outsl
insb
aas
imul
aaa
pop
pop
imul
movsl
push
das
add
push
imul
mov
les
add
lret
pop
out
rorb
repz
pop
or
scas
xor
jl
lcall
aaa
and
scas
jmp
enter
cmpsl
lock
push
mov
push
jbe
test
jecxz
push
idivl
cmp
adc
inc
cmc
lahf
stc
or
pop
fsts
fsub
add
fwait
pop
stc
dec
mov
in
icebp
mov
cmp
les
ret
icebp
test
mov
in
dec
jb
aam
cmp
xchg
fbstp
pop
scas
jns
sub
sahf
mov
pushf
lret
addr16
jmp
test
dec
out
xor
mov
ficompl
and
mov
lods
inc
repnz
or
sbb
or
inc
jae
pop
loopne
jmp
std
mov
jg
ljmp
cmc
sbb
jg
adc
pop
stos
in
push
inc
rcll
xchg
cmp
and
fwait
shr
xchg
jp
mov
xor
push
jns
test
inc
sahf
mov
aaa
aas
and
cmp
fldenv
mov
scas
mov
jne
cmpsb
mov
test
dec
js
add
addr16
cmp
test
xor
cmc
sbb
xor
loop
mov
or
stc
int
mov
test
loopne
sti
enter
adc
jno
insl
ror
iret
cmpsb
cmc
sub
mov
xor
xchg
sub
pop
jno
inc
cmpl
push
sbb
fsubr
outsl
pop
jnp
mov
sbbl
fsubl
lahf
sub
mov
pop
mov
xchg
mov
daa
inc
add
sbb
pop
scas
adc
push
orl
xor
jbe
enter
ds
jns
jge
outsb
mov
jg
clc
daa
leave
jecxz
xchg
test
dec
inc
mov
leave
xchg
pop
dec
test
sbb
xchg
xor
pop
lods
cmp
jno
mov
and
divb
shll
ss
in
cmp
repz
mov
imul
hlt
push
mov
adc
push
mov
or
push
dec
cmp
xlat
les
loop
in
insl
mov
pop
xor
jo
fldcw
leave
imul
push
sbb
into
cmp
cmpsl
ljmp
pushf
dec
fwait
jno
ficompl
adc
adc
dec
inc
inc
icebp
call
idivl
xchg
and
adcl
lods
ss
int
aas
jne
sbb
cwtl
addr16
std
imul
cmp
pop
mov
pop
or
mov
inc
cmp
std
fstpl
pop
lret
cmp
cmpsb
fidivrs
loopne
in
insl
dec
fldl
and
mov
popf
aas
sbb
ret
mov
jl
adc
mov
popa
fidivrl
fstl
push
and
loopne
mov
pop
ret
mov
jecxz
sub
push
sub
cmp
pop
in
pop
push
leave
mov
enter
push
and
orb
cs
xchg
mov
sarl
mov
pop
jns
mov
loope
add
jmp
inc
popf
pop
mov
aam
out
and
cs
sti
int
mov
aas
and
repz
mov
mov
popa
jnp
aam
push
stc
mov
xor
xlat
gs
inc
out
xchg
fwait
nop
mov
fildll
jne
data16
mov
sub
iret
fwait
push
or
sbb
leave
cmpsb
mov
push
pop
sbb
pop
cmp
insl
add
idivl
cmp
mov
or
ret
xor
lea
add
dec
insl
mov
mov
outsb
lock
fs
sti
lcall
fwait
lahf
int3
fildll
imul
jp
xchg
stos
xchg
ficomps
cmp
test
cmp
int3
out
mov
pop
add
bound
mov
mov
mov
or
mov
mov
xchg
add
fldl
test
hlt
in
lock
pop
test
xor
xchg
sahf
rcrl
jle
lea
sbb
addr16
push
cmc
mov
jg
push
mov
push
xchg
das
adc
aas
add
ja
jg
pop
lcall
aad
andb
cmp
mov
in
or
push
pop
jnp
pop
aas
add
in
dec
mov
mov
cmp
jmp
clc
jecxz
add
push
mov
mov
in
cmpsl
dec
lret
jae
jecxz
mulb
jmp
mov
and
pop
je
mov
cwtl
mov
rorl
xor
cli
mov
mov
cmp
and
int3
xor
subb
mov
sbb
leave
jbe
xor
ss
nop
cmc
pop
loopne
nop
ja
inc
mov
mov
xchg
pusha
out
testl
daa
shlb
rolb
pop
loopne
nop
ja
inc
mov
mov
xchg
pusha
out
testl
daa
aam
into
pop
call
ja
inc
mov
mov
xchg
imul
cmp
les
xor
and
adc
mov
inc
xor
cmpsl
scas
mov
sub
push
sub
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
addr16
inc
cmp
imul
pop
daa
push
pop
fldt
mov
mov
xchg
xchg
add
ja
inc
cmp
daa
pop
aaa
imul
outsl
fwait
testl
xchg
xchg
shll
ja
inc
std
push
pop
daa
adc
inc
pop
adcl
out
aam
mov
mov
repz
pushf
jmp
cmp
outsl
das
dec
push
rolb
xor
js
mov
push
xor
scas
or
enter
call
sbb
mov
ud0
push
rclb
dec
cmpsl
dec
jle
xchg
pop
or
sub
sub
lret
mov
jp
sahf
inc
xchg
push
mov
add
push
outsl
outsb
add
movsb
ss
jns
sahf
sbb
or
cmpsl
lea
mov
out
aam
sti
fidivl
xor
dec
sbb
mov
cmp
mov
sbb
aam
sahf
pop
mov
push
jae
arpl
cmpsl
fnsetpm(287
scas
xchg
cmpb
sbb
inc
push
push
dec
daa
pop
aaa
imul
pop
jns
or
jae
movsl
xlat
stos
cmpsl
lds
jns
insl
outsl
inc
push
push
and
inc
sbb
sahf
sti
mov
mov
lahf
mov
adc
push
and
jnp
outsb
or
lods
fimull
mov
sarl
aas
pop
xor
pop
aaa
imul
pop
mov
fwait
imull
cmpsl
or
ja
inc
cmp
daa
pop
aaa
imul
pop
mov
fwait
imull
cmpsl
or
pop
subl
fmuls
mov
push
enter
mov
dec
xor
lea
push
jp
jge
lcall
dec
test
jno
insl
jmp
add
popa
sub
in
inc
lods
fists
mov
sub
push
fistps
dec
push
gs
jg
aam
sbb
jo
repz
xor
mov
fists
cmp
movsb
dec
fcoms
jno
stos
add
mov
in
rorl
adc
dec
pushl
xchg
std
cmp
lods
jp
movl
iret
lahf
rorb
fsubl
mov
inc
outsl
addr16
or
ja
cmp
call
mov
and
jecxz
popa
leave
xchg
inc
cmp
shll
out
iret
loopne
pop
outsb
sbb
in
or
cwtl
xorl
cmp
lret
sub
adc
sbb
sub
hlt
sbb
ret
sub
cmpsl
pop
test
cmp
or
imul
into
cmp
dec
movsb
and
not
iret
setne
dec
lret
push
inc
cmpsl
mov
sbb
cltd
adc
mov
lcall
fadds
lcall
int
fwait
mov
pop
mov
jg
cmp
int3
mulb
lds
xchg
mov
je
lds
pushf
jne
ret
jmp
cmpsl
clc
cwtl
mov
kmovb
xchg
cmp
lds
jb
sarb
or
ljmp
dec
incl
and
and
imul
xchg
hlt
out
in
mov
into
xor
xlat
add
push
stos
push
nop
sbbl
push
leave
insl
outsl
pushf
or
or
popf
mov
decl
mov
adc
inc
cmc
and
sbb
daa
sbb
and
jno
jmp
inc
rcrb
mov
sub
jmp
pop
in
add
mov
xor
daa
pop
stos
push
inc
xchg
add
adc
adc
notb
cld
jns
jecxz
ljmp
inc
pop
fs
add
push
out
out
aas
roll
xchg
and
roll
push
test
jb
aam
dec
mov
mov
es
cs
xor
movsl
cmp
sbbl
addr16
rcl
mov
lock
xchg
aad
dec
popf
in
or
xchg
xor
into
in
lods
mov
inc
mov
inc
movsl
fsubrl
daa
lahf
sahf
mov
jnp
and
enter
insb
imul
loope
add
cld
aas
xchg
pop
jnp
add
jmp
sub
jge
mov
aas
into
ret
aad
decl
xchg
imul
lahf
mov
scas
add
or
rorl
xor
xchg
mov
sahf
xor
outsl
inc
out
and
add
or
into
mov
idiv
mov
cmc
mov
push
sbb
or
add
pop
mov
push
jg
sbb
fiadds
and
stc
jae
ficoml
and
xchg
jl
cmp
and
imul
add
dec
pop
pop
aaa
jae
and
js
lret
xchg
mov
sbb
mov
or
in
sbb
mov
mov
scas
xor
push
ret
adc
mov
push
xor
lcall
les
jnp
lods
cmp
jae
xchg
push
xor
xchg
and
les
sub
rorl
sbb
fldcw
jae
pop
or
pop
mov
mov
fidivl
xchg
mov
sub
repz
and
ja
mov
push
inc
add
out
test
sahf
insl
lds
mulb
and
dec
ret
xchg
jl
sub
mov
mov
out
push
inc
loopne
sti
sub
scas
cs
push
cs
pop
cmpsl
shrb
cwtl
mov
popa
loopne
sub
ds
mov
out
iret
jmp
pop
mov
scas
add
lret
pop
addl
adc
xchg
dec
ja
add
jae
inc
dec
stc
insw
dec
arpl
push
adc
pop
incb
mov
ljmp
out
sbb
adc
cmc
ja
stos
in
or
fmull
loop
cmp
lahf
daa
xor
pusha
mov
jb
outsb
fnstsw
jbe
mov
pop
enter
les
mov
mov
out
popl
jmp
out
xchg
out
xlat
xchg
jns
ret
and
pop
stos
je
arpl
mov
fcomip
mov
adc
fstl
mov
push
xchg
lods
and
adc
ljmp
mov
mov
push
aad
ljmp
loope
jl
or
popf
cmp
loope
jl
mov
mov
sarl
sub
push
nop
inc
push
jns
mov
pop
sti
repnz
inc
out
sub
sbb
lock
cmp
pop
xor
arpl
outsb
jbe
xchg
adc
lahf
inc
das
test
mov
je
xchg
push
push
or
xorb
cmp
dec
arpl
mov
leave
sbb
lret
pop
mov
xchg
sbb
daa
mov
push
or
mov
ljmp
test
cmp
jl
outsl
aas
fisubrs
movsl
sub
inc
inc
out
pop
mov
xchg
xor
pushf
sbb
fldt
xor
repz
xor
cmp
mov
or
es
sbb
popw
push
out
xlat
add
add
pop
mov
cwtl
aam
jne
push
lcall
popf
push
xlat
pushf
xor
sbb
imul
xor
leave
jp
pop
orl
jmp
dec
xor
xchg
cmpsb
pop
mull
jo
inc
rorl
inc
dec
xor
mov
cwtl
out
mov
into
and
push
scas
outsb
cwtl
scas
in
int3
or
nop
gs
jbe
dec
jb
mov
stc
lods
stos
scas
icebp
js
cld
ds
imul
sub
xor
ljmp
or
pop
jnp
fmuls
stos
dec
dec
dec
mov
fsubr
dec
icebp
sub
lret
jmp
in
mov
or
stos
mov
inc
pop
popa
flds
jno
push
in
in
das
mov
mov
adc
dec
adc
push
hlt
ds
std
stos
lods
dec
pop
ds
sbb
out
mov
ljmp
sub
add
gs
in
daa
shrl
pop
daa
mov
nop
adc
mov
test
sbb
dec
fwait
testb
xchg
jne
shrb
inc
lea
cmp
jns
xor
aam
mov
jmp
rorb
mov
cwtl
mov
pop
jno
in
xchg
cwtl
cld
mov
dec
fs
pushf
imul
adc
ljmp
sbb
ljmp
jns
out
stos
sbb
sub
iret
js
outsb
repz
popf
jae
cld
hlt
pushf
push
dec
mov
xchg
mov
xchg
imul
mov
out
in
lock
pop
int3
lods
stos
je
testl
insl
xchg
cli
jp
movsl
mov
xchg
jae
int3
sahf
pop
jno
ss
stos
cmpsb
jnp
inc
jmp
aad
mov
cmpsb
add
jge
xor
test
in
mov
and
push
push
mov
aad
sti
je
add
cmp
int
stc
xlat
fldt
xor
gs
ja
add
sar
les
addb
dec
adc
xchg
imul
enter
js
inc
daa
mov
fwait
call
sarl
or
test
mov
outsl
push
cli
icebp
mov
ja
call
mov
mov
cwtl
out
js
aaa
hlt
repnz
dec
dec
mov
jae
cmp
jb
dec
shrl
inc
pop
or
sub
aas
adc
mov
ljmp
jl
fisttpl
xlat
cltd
hlt
sbb
es
je
pop
push
jge
mov
cmp
aad
shlb
fmul
lea
test
scas
les
push
cltd
mov
jge
sbb
mov
sub
pop
pop
add
mov
adc
adc
xchg
dec
stos
sbb
dec
pusha
shll
xor
add
in
mov
rcl
adc
imul
dec
shll
and
shlb
sahf
shlb
xor
add
jmp
xor
sti
mov
pushf
fnsave
cmp
dec
push
cli
push
rclb
xor
dec
iret
pop
sub
inc
lea
inc
pusha
rol
hlt
dec
aaa
jp
test
aaa
cli
out
push
popa
xchg
into
push
and
imul
adc
push
cmp
mov
push
cmc
lret
fdivl
call
test
inc
sbbl
pop
pop
mov
cmc
mov
cmp
shr
xchg
mulb
inc
xor
dec
jl
insb
std
scas
ja,pn
scas
pop
aas
xchg
pop
jecxz
fmull
jno
pop
rclb
lds
pop
jnp
cmc
mov
clc
ss
nop
mov
mov
mov
testl
mov
out
mov
fwait
icebp
adc
lret
jnp
jae
adc
sbb
inc
test
ljmp
test
cvtpi2ps
and
xor
cmpsl
dec
rcrb
mov
jne
scas
add
push
push
cld
je
push
mov
stos
and
cs
cmpsb
push
jle
mov
scas
aad
dec
sbb
subl
dec
and
imul
movsl
shrb
jno
in
pushf
mov
dec
push
lds
mov
dec
cmpsb
loop
pop
push
dec
sub
and
movb
adc
jp
ljmp
mov
cs
pusha
jno
cmp
mov
dec
orb
or
sahf
cmp
js
push
repnz
and
xchg
inc
mov
fwait
sub
push
adc
nop
or
jl
dec
pop
mov
lret
mov
in
push
test
loop
mov
rorb
push
mov
inc
lret
lock
push
jp
and
lcall
adc
inc
dec
lret
stc
movsl
cmp
aad
fmulp
lods
mov
add
movsb
imul
push
add
in
sub
das
and
sbb
inc
push
js
mov
loope
xor
and
ljmp
or
push
jmp
jl
mov
mov
jbe
jl
in
or
push
fxtract
pop
fdivrl
leave
mov
aaa
fmuls
cmp
repz
cmc
push
push
inc
sbb
test
cwtl
jp
xlat
xchg
jp
aaa
js
xchg
jle
sub
out
adc
ljmp
dec
in
addb
xchg
cli
add
mov
adc
push
jne
xlat
xor
or
call
jmp
mov
add
arpl
push
pusha
sub
sbb
ljmp
sbb
sub
xchg
and
insb
push
sub
inc
aas
mov
lock
adc
stc
jmp
sbb
movl
or
daa
mov
add
xchg
xchg
mov
push
sahf
mov
jmp
out
les
push
ss
pop
jl
xchg
pop
mov
shll
mov
dec
push
mov
jno
lret
dec
stos
dec
leave
ficompl
cli
xchg
aam
push
jl
cmc
sbb
pop
bound
je
push
mov
movsb
ljmp
loop
out
clc
test
sub
dec
push
sbb
mov
inc
stos
and
ds
dec
mov
adc
insb
mov
xchg
popf
ja
pop
mov
xor
out
outsl
fisttpll
loop
dec
add
je
leave
lods
mov
pop
jno
and
mov
or
jnp
fs
adc
stc
icebp
dec
mov
push
jae
aam
call
aam
shlb
xchg
adcb
mov
fsubrl
inc
std
add
or
mov
test
inc
ss
aas
sbb
pop
or
jno
pop
push
mov
int3
inc
repz
xchg
and
dec
add
shrb
std
pop
jg
shlb
xor
sbb
dec
lock
and
dec
inc
add
dec
and
std
aam
pusha
add
loope
cmpsl
jmp
mov
and
mov
cmp
adc
xor
mov
mov
cld
int
ret
movsb
cli
cmp
mov
lret
add
jp
add
pop
cmp
mov
mov
jae
mov
lds
cli
xchg
outsl
repz
cmp
data16
stos
je
lods
fsubl
loope
jl
aas
popa
and
pushf
je
mov
out
test
ret
or
sbb
and
xor
xchg
or
pusha
pushf
adc
orl
or
mov
push
xor
imul
movsl
out
xor
lods
jge
nop
es
jg
and
popa
sub
ds
lahf
or
fstl
pushf
jecxz
lret
imul
imulb
cmc
mov
rolb
pusha
daa
mov
add
fistpl
add
shll
enter
and
fmuls
mov
pop
mov
test
fsubr
adc
add
cmp
je
xchg
xchg
clc
leave
push
inc
adc
addb
pop
or
adc
shrb
test
jp
ljmp
outsl
in
inc
push
mov
fnsave
pusha
mov
add
insb
out
loopne
test
scas
cld
popa
psrlw
gs
jns
int3
aam
aad
scas
cs
or
mov
pop
mov
jno
xchg
ja
out
mov
mov
jle
jne
mov
lods
nop
jl
or
shll
scas
outsb
in
ficompl
sti
add
pop
jle
mov
popf
adc
ja
jg
sti
loope
cmpsb
movb
sbbb
loope
iret
inc
jno
mov
outsb
popa
pop
cltd
int
in
out
add
mov
sub
cmpsl
cmp
enter
add
xchg
add
adc
adc
daa
les
and
andl
fisttpl
pusha
add
ljmp
int3
cmpl
addr16
dec
nop
je
ss
frstor
mov
or
add
pop
pop
ja
xlat
add
xorl
cmp
add
popa
dec
adc
add
fiaddl
push
ja
xor
push
sub
push
cmpsb
inc
mov
add
out
dec
jp
mov
test
iret
scas
inc
xchg
andl
out
addb
or
out
push
into
loopne
sbb
mov
and
adc
mov
sub
cltd
inc
sub
int
and
data16
add
pop
xor
pop
xor
orb
sub
sbb
fmuls
push
inc
outsl
pop
ret
xor
fldenv
push
lcall
pop
sti
shlb
cli
rcl
mov
xor
push
lcall
ja
daa
cmp
inc
cmp
ss
mov
ja
xor
cltd
lret
popf
test
je
xlat
push
cmp
stos
or
dec
jg
out
dec
jns
add
adc
test
push
mov
push
outsl
mov
arpl
jo
fstl
push
stos
cmp
push
sub
jge
push
outsb
or
mov
fwait
adcb
sti
xorb
xor
mov
mov
xchg
mov
mov
mov
insb
js
mov
rclb
mov
fsubl
rcrl
pusha
notb
xchg
cmp
outsb
mov
sub
cmpsb
fistl
push
call
mov
add
xlat
aas
insl
mov
push
iret
fdivp
cmp
data16
jl
xchg
and
aas
movsb
insb
pop
mov
iret
lods
xsavec
testl
jbe
ret
lock
mov
test
sbb
xor
dec
and
push
shlb
sub
movsb
jl
dec
xor
dec
pop
push
add
insl
fldcw
daa
cmp
test
jmp
sbb
or
pop
lock
push
mov
stc
jo
pop
aad
jbe
push
bound
dec
sbb
xchg
inc
clc
xorl
add
mov
int3
push
loope
cmp
divl
mov
add
mov
enter
push
loop
mov
aam
push
fldenv
jb
rorl
cs
test
fists
dec
fnstsw
rcr
cmpsb
mov
les
lds
sub
mov
loopne
push
jo
or
int3
stc
adc
ds
mov
mov
fdiv
cs
or
or
out
das
xor
test
bound
cmc
ficoml
inc
call
add
jne
xchg
mov
xlat
ja
loope
and
rcll
add
cwtl
pushf
aaa
mov
jb
push
inc
push
cwtl
repnz
jecxz
cld
aad
inc
push
test
xor
sub
push
inc
fdivrs
xor
fwait
lcall
jge
xchg
fisubrs
scas
adc
icebp
gs
cmpl
aaa
pop
in
jmp
sbb
insb
pop
jne
and
adc
jecxz
sbb
mov
push
in
pop
or
mov
mov
cwtl
push
je
jmp
fmul
lock
cmp
divb
mov
xchg
jg
push
adc
xchg
hlt
sbb
push
mov
mov
mov
outsb
xor
mov
xor
pop
cmp
sbb
jnp
ret
cmp
dec
cmp
ror
lcall
xchg
out
mov
out
ljmp
fsubl
mov
sbb
cld
adcb
rcrl
adc
cli
repz
aad
ljmp
jp
inc
push
jbe
mov
xchg
cmpsl
xchg
sbb
jle
subb
xor
cmpsb
ret
repnz
inc
jl
inc
hlt
xchg
adc
dec
sbb
inc
sbbl
xchg
xchg
mov
clc
mov
repnz
fsubs
icebp
mov
stos
pop
pusha
repnz
mov
into
outsb
mov
cmpb
loope
xchg
movsl
push
fistpll
pop
cmp
push
mov
stc
cmpsl
icebp
outsb
mov
sub
aaa
add
cmpsb
mov
push
fcoml
scas
test
pop
adc
adc
stos
outsb
fstpl
lds
int
shll
lcall
push
xchg
xor
dec
jno
push
and
inc
mov
hlt
mov
mov
mov
shll
cmc
in
xchg
and
int3
aas
cli
into
ds
sub
pop
out
test
fiadds
mov
fimull
or
mov
shl
sub
push
add
jae
add
jo
and
inc
in
ret
xchg
test
cmpsb
lahf
xchg
push
ficoml
push
fnsave
aam
mov
or
out
pop
shll
push
inc
fwait
dec
addr16
movsl
xchg
add
loope
mov
shl
jns
xor
imul
cmp
or
fcmovu
outsb
sub
push
aas
lods
mov
cmp
add
xchg
xor
aam
push
lahf
rorb
fldcw
movsl
sbbb
or
xchg
push
movsl
xor
sub
xor
cmp
sbb
mov
and
mov
sub
sti
dec
lods
push
ret
popa
aaa
cmp
pop
sub
addr16
clc
ret
test
sahf
sub
push
idivl
inc
fwait
cmp
out
test
sbb
jae
inc
stos
lcall
sahf
gs
lea
mov
aas
xor
cmc
mov
cmp
fcoms
daa
cltd
cmc
cmp
ss
mov
inc
pop
pop
push
add
adcb
bnd
loop
nop
ja
leave
lret
lods
jbe
rorl
xchg
pop
cmc
sbb
xor
lahf
cwtl
ret
inc
pop
push
jo
jo
fnstcw
cmp
or
jbe
cmp
jp
enter
xchg
sarb
in
pop
gs
add
inc
xchg
adc
jge
scas
imul
stos
bound
dec
stos
mov
stos
ret
fcom
bound
repz
pop
daa
enter
mov
pop
dec
cwtl
loope
or
mov
or
lcall
lds
mov
mov
imul
cld
or
cmp
mov
mov
sbb
imul
mov
cmp
inc
cmp
sahf
jmp
xchg
mov
fiadds
add
int3
inc
inc
repnz
ja
xor
pusha
bound
fs
inc
add
and
pop
sbb
out
and
push
ret
and
pop
sahf
sub
push
and
lcall
iret
int
jbe
mov
inc
cmc
repz
and
mov
adc
icebp
sub
push
push
popa
dec
xor
push
popf
pop
leave
lea
adc
loope
dec
push
dec
push
je
inc
imul
das
xor
and
jbe
js
adc
mov
cmpsl
sub
aad
mov
jecxz
call
sub
addr16
xchg
cmpl
dec
daa
pop
aaa
imul
pop
mov
fwait
imull
cmpsl
or
ja
inc
cmp
daa
pop
aaa
imul
pop
mov
fwait
imull
cmpsl
or
ja
inc
cmp
daa
pop
aaa
imul
pop
out
mull
cmpsl
ret
xchg
xchg
adc
ja
inc
adc
daa
dec
aaa
imul
pop
mov
fs
add
mov
dec
adc
add
dec
negl
imul
or
imul
xchg
addr16
sti
inc
mov
fwait
mov
das
negl
pop
xlat
jnp
or
cmp
mov
inc
lret
aaa
fwait
daa
stos
push
mov
out
xlat
mov
cmpsl
xor
xorl
inc
loopne
jmp
pop
and
mov
sbb
adc
mov
jbe
into
lock
lods
scas
pop
mov
addr16
cmp
xchg
mov
cmp
push
pop
lret
lret
stos
inc
inc
push
mov
push
cmc
push
and
ret
jbe
xlat
or
mov
cwtl
xchg
sti
mov
arpl
xchg
mov
xchg
hlt
mov
cmpsl
aam
cmp
lods
fisttpl
outsl
test
pop
je
fsubrs
pop
push
sbb
out
divl
mov
jmp
pop
xor
test
xchg
daa
fistl
mov
mov
sbb
test
hlt
ret
aam
push
addr16
add
bound
inc
push
and
loopne
add
out
xlat
jnp
out
mov
cmpsl
sub
inc
addr16
push
lret
inc
ret
aaa
xchg
daa
cltd
pop
mov
out
mov
jne
pop
fnstcw
xlat
lret
adc
add
push
cmc
push
ret
inc
push
idivl
in
xlat
sbb
fsubp
outsb
xchg
subl
push
hlt
dec
ret
push
daa
mov
sub
sub
push
sti
inc
mov
fwait
daa
stos
pop
mov
out
xlat
jnp
or
cmp
jmp
sti
inc
mov
fwait
daa
stos
pop
mov
scas
test
jnp
sbb
cltd
inc
mov
into
rolb
jb
sbb
mov
cmp
lea
or
xlat
fs
cmp
subb
mov
fcoml
test
adc
xchg
pop
xchg
mov
lock
xor
xor
in
mov
movsb
cmp
negl
xor
or
repz
lock
mov
aad
aas
enter
vpsrlq
mov
ret
or
out
sub
xor
and
mov
push
adc
fsubrs
lods
js
stos
inc
jno
push
mov
addb
or
pop
cmp
add
lods
and
sbb
imul
inc
je
std
lret
icebp
fwait
adc
sbb
repnz
rcl
cmc
loopne
mov
in
jecxz
inc
adc
pop
ja
pop
sub
adc
pop
xor
mov
xchg
cmp
xchg
cmp
push
jnp
rolb
and
mov
lret
sbb
ss
fidivrs
imul
negl
xor
push
clc
cmp
adc
mov
cmpsl
mov
rcl
or
cmp
dec
or
bound
lds
pop
adc
ljmp
aam
pop
pop
outsl
stc
mov
movsb
lcall
push
sub
mov
mov
testb
mov
es
test
adc
push
pop
lret
shlb
sar
clc
push
push
jmp
lods
lahf
jo
jge
push
insl
mov
inc
jmp
adcb
xchg
xchg
sbb
pop
xor
pop
addr16
arpl
and
cld
pop
call
mov
in
push
gs
mov
lea
adc
out
cmpsb
inc
adc
sbbb
sub
push
add
fildll
mov
mov
test
out
mov
push
leave
sbb
and
popf
mov
and
mov
cmp
das
xchg
jns
inc
lret
dec
mov
lds
hlt
adc
jo
or
jg
ja
shr
inc
jno
cmp
mov
fcom
xchg
mov
dec
mov
adc
std
mov
rcll
jl
nop
scas
and
sub
pop
xchg
lods
testl
xor
popf
adc
mov
cmp
push
ljmp
orb
push
adc
imul
loopne
out
push
mov
std
mov
popa
das
xchg
jns
dec
adc
lods
aad
sbb
popa
pusha
mov
ja
pop
pop
fwait
out
dec
mov
data16
adc
sub
and
xchg
hlt
cmpl
push
dec
and
dec
or
mov
cmp
jns
mov
aaa
push
std
test
xchg
mov
xorl
fdivl
inc
inc
xor
testb
inc
roll
or
jecxz
sub
insl
ds
jbe
outsb
and
push
fwait
sarb
fcoms
leave
ret
out
cmpsb
hlt
lret
std
inc
sbb
xlat
imul
and
ja
das
pop
adc
aas
and
outsb
inc
push
xor
fimull
mov
add
int
cwtl
rolb
loopne
push
pop
stc
sub
bound
dec
rorl
jae
sti
jl
and
hlt
or
fstpt
or
into
jbe
lahf
cmpxchg
xchg
popa
mov
cs
fs
cld
xor
movb
je
xchg
lret
jne
iret
inc
adcl
fs
add
mov
mov
in
pushw
xor
enter
out
jg
sahf
mov
and
hlt
stos
push
push
icebp
test
fisubrs
adc
stos
daa
out
lds
lods
pop
fwait
subl
mov
inc
xor
in
pop
mov
add
mov
outsb
xor
shrl
inc
stos
mov
std
int
fisttpl
call
fsubl
lret
imul
and
test
mov
xlat
dec
hlt
add
mov
mov
decb
push
cs
push
dec
test
je
fcoms
mov
push
push
inc
bound
pop
pop
push
test
data16
inc
mov
jns
call
mov
hlt
mov
std
shl
or
addr16
es
fs
loop
mov
popf
adc
mov
xchg
jle
mov
xchg
inc
lods
or
pop
mov
shl
xchg
xchg
jecxz
mov
lahf
insb
or
int3
imul
mov
sbb
rcrb
fstl
mov
cltd
into
sbb
inc
jo
cmp
jl
cmp
push
inc
scas
push
outsl
in
dec
and
and
or
punpckhdq
movsl
push
ret
or
arpl
sub
xor
pop
imul
push
cs
cltd
xchg
in
dec
jl
in
pop
inc
fxch
add
aaa
pop
pop
repnz
out
clc
jmp
dec
jle
cmpsl
stos
and
pop
sub
jns
push
mov
dec
rorb
push
xorb
xor
lea
inc
mov
push
xor
addr16
adc
in
sbb
cmp
imulb
imul
inc
and
fwait
ss
pop
inc
ja
popf
jge
push
xor
push
ret
in
cmp
cmpsb
mov
lea
or
loop
xchg
push
call
xor
jl
push
ja
pop
lods
sub
push
lds
loopne
cmp
jmp
insb
scas
push
pop
movsb
lret
sbb
mov
adc
mov
enter
sub
xchg
mov
xlat
outsb
pop
and
jo
cmp
xor
imul
pop
fcmovnbe
sbb
data16
bsr
sarb
mov
lods
xorl
rcll
push
das
lock
cmpsl
add
and
inc
jp
jmp
fnstcw
push
add
pop
xchg
jae
sbb
sbb
and
mov
jg
sub
sub
lea
mov
out
mov
inc
cmp
mov
jno
movsb
pop
outsb
mov
pop
mov
int
fimull
leave
ljmp
cmp
push
out
icebp
jbe
mov
and
adc
cmp
mov
iret
daa
outsl
in
sub
push
inc
sbb
nop
add
lahf
enter
fdivs
cmp
lcall
cltd
stc
sub
xchg
loop
pushf
sub
add
call
rcr
scas
fsubs
sub
mov
add
or
push
push
cmpsb
mov
dec
xchg
lret
xor
sti
fimull
or
mov
push
imul
jecxz
jl
stc
or
enter
push
loop
iret
inc
stos
ljmp
inc
out
pop
sti
pop
ret
xchg
dec
test
sbb
inc
cld
mov
mov
push
push
ss
sbb
pop
mov
mov
push
mov
add
loope
arpl
mov
je
std
arpl
sarl
and
dec
in
jmp
adc
ret
iret
pop
fistpl
scas
decb
or
jnp
jecxz
aas
iret
test
movsb
pop
sbb
insb
jl
cmp
fwait
jmp
inc
into
jns
pop
lods
mov
or
adc
out
push
sub
orl
int
cmp
cltd
scas
pop
mov
cwtl
repnz
cmpsb
mov
fnstsw
in
lods
lcall
mov
jmp
cmp
mov
mov
ret
int3
sub
loop
mov
and
mov
mov
ljmp
aas
je
sbb
sarb
cmp
sub
mov
decl
ror
aam
and
mov
cs
push
pop
mov
outsb
xor
test
pop
into
neg
lret
jle
xchg
imul
sub
adc
loopne
out
outsb
das
add
out
pop
pop
mov
clc
adc
jg
outsb
pop
mov
jmp
xlat
push
into
and
fsubrs
adc
pop
mov
xchg
cmpsb
das
insl
push
and
sbb
push
dec
xlat
out
daa
dec
rclb
inc
lods
pushw
lea
xchg
out
inc
sub
pop
xor
fidivrs
adc
mov
pop
insl
mov
dec
pop
sbb
or
cmp
mov
mov
pop
push
xchg
cmc
mov
subb
push
aas
xor
addr16
cmp
inc
es
push
shll
mov
aas
sahf
mov
ds
fcompl
shll
jno
jle
dec
fnstsw
hlt
mov
loope
inc
xchg
inc
subl
mov
mov
sbb
sar
mov
adc
std
adc
mov
pop
mov
out
mov
jge
lds
scas
pusha
adcb
and
test
xor
data16
cwtl
fbld
or
incl
enter
pop
out
movsw
fwait
jle
xchg
aad
mov
out
pushf
inc
insl
sti
pop
test
pop
inc
test
mov
dec
jnp
or
pushf
jo
insb
and
xor
outsb
sahf
and
inc
sub
jp
ja
cmp
imul
jmp
adc
fisttps
adc
test
ljmp
xor
inc
pop
les
cmp
movups
out
scas
loop
pop
add
ficomps
pushf
mov
sub
inc
mov
shl
cwtl
xor
ja
aas
mov
mov
dec
or
mov
ds
xor
icebp
sbb
mov
inc
cwtl
xchg
fdivl
lock
mov
jno
aam
xlat
cmp
addr16
shll
test
lret
ucomiss
jo
mov
mov
ja
bound
inc
jecxz
mov
lahf
aad
in
cmc
in
and
or
add
notl
and
lds
pop
fmuls
stos
sub
insl
cmp
imul
xor
cmp
push
lcall
hlt
dec
mov
jns
adc
cld
aad
xor
lds
out
mov
adc
add
int3
adc
mov
rorb
mov
shll
out
mov
frstor
xor
sahf
xchg
sbb
ss
popf
jmp
leave
mov
mov
loope
cltd
jo
mov
rolb
pushaw
mov
mov
bnd
pop
mov
sub
jmp
movsb
push
imul
nop
and
add
mov
cmp
jmp
pop
lret
push
ja
arpl
jmp
or
scas
mov
jmp
mov
mov
inc
sbb
adc
inc
inc
jle
inc
push
add
pusha
sbb
lods
in
cmp
sbb
sub
popa
jbe
fcompl
xorl
lahf
mov
js
and
mov
inc
push
mov
push
subb
stos
repz
daa
inc
cld
arpl
mov
out
dec
fs
cs
jno
or
xchg
out
mov
lods
jecxz
addb
dec
sub
xchg
jnp
lods
and
sbb
stos
out
and
adc
enter
cltd
lcall
in
jne
scas
pop
push
out
lds
call
push
repz
out
and
push
pusha
rcrb
push
inc
mov
and
mov
sub
cmp
int3
push
fcoml
xchg
jmp
ds
jle
pop
repz
adc
ja
clc
cmpb
iret
mov
imul
xchg
int
fsubs
idivb
cli
mov
outsl
sbb
pusha
add
pop
in
lret
or
inc
pop
stos
cmc
insb
outsl
xchg
mov
arpl
test
or
mov
negb
lods
rolb
movsl
shlb
addr16
clc
imul
inc
xor
data16
sbb
icebp
stos
jmp
pop
dec
movsl
jo
bound
xchg
rclb
les
mov
push
movsb
jbe
std
mov
jbe
xor
movsb
lods
ja
sahf
ljmp
jg
idivb
push
adc
or
mov
in
add
icebp
push
lods
push
je
ret
sbb
iret
mov
aad
jp
sub
popa
push
ret
mov
sub
jbe
repnz
test
or
and
jge
out
mov
cli
dec
outsb
pop
pop
xchg
push
sbb
cmpsb
xchg
fstpl
das
das
pop
sub
mov
sahf
inc
aas
push
fldt
pop
sub
test
xchg
and
pop
repz
ds
sbb
es
ja
mov
not
xchg
sub
push
scas
xchg
mov
fldcw
enter
fsubrl
pop
dec
push
add
bound
inc
add
lea
imul
js
negl
sbb
push
pop
cs
and
pop
sbb
popa
mov
mov
fistps
and
push
stos
add
push
pop
ss
and
lret
shlb
movsl
sbb
in
pop
ljmp
xor
rorb
fsubrl
pop
bound
sbb
enter
sbb
iret
push
mov
in
setp
mov
arpl
pop
ljmp
std
xchg
out
mov
das
push
jo
dec
clc
sbb
push
sbb
ret
andb
fisttps
mov
inc
sub
xor
or
pop
into
mov
stc
add
dec
outsb
xchg
sub
fisubs
or
mov
ror
push
push
cmp
and
and
icebp
pop
push
fistps
lea
add
add
mov
rolb
sets
out
int3
insl
in
cli
pusha
and
lahf
rorb
arpl
and
xor
mov
in
add
jmp
subl
aam
sarb
outsl
sub
aad
scas
test
jle
pop
pop
xor
sub
add
lods
decl
mov
mov
sub
addr16
sub
push
pop
data16
xchg
mov
jp
mov
xor
hlt
push
out
std
cmp
int3
push
ja
mov
shlb
movsl
lds
add
pop
inc
or
and
jb
cmp
mov
dec
clc
mov
push
jns
popf
add
inc
int3
ljmp
mov
out
xchg
cmp
pop
loop
je
xor
mov
dec
cmp
jne
fwait
iret
push
nop
nop
jecxz
or
dec
sub
repnz
pop
adc
push
shll
mov
iret
or
sub
pusha
das
lea
out
lahf
insb
outsb
sbb
push
mov
in
fs
xor
xchg
data16
cmp
push
or
clc
and
cmp
sbb
or
sbb
ja
adc
popa
jo
rorl
in
imul
dec
xchg
mov
in
sti
aad
sub
pop
arpl
pop
adc
inc
push
js
and
dec
jnp
jge
pop
sbb
fimull
push
int3
dec
add
fsts
cmpsl
xchg
jg
data16
pop
push
or
ds
sub
push
or
mov
lods
les
ss
pop
push
enter
xchg
nop
sbb
pusha
hlt
lcall
and
push
dec
dec
and
lahf
cmpsl
outsb
sbb
cmp
or
lea
push
jae
jo
pushf
es
jae
pop
cld
add
pop
outsb
mov
cmp
jae
or
popa
xor
rcrl
imul
das
not
dec
gs
aad
mov
xchg
cmpps
mov
sarb
xor
jns
ljmp
push
jg
rcl
xor
scas
adc
cmp
add
out
addr16
test
xor
cmp
inc
pop
daa
add
adc
or
fisubrl
or
pop
mov
out
arpl
test
cmp
push
xchg
cmpsb
mov
in
lock
fucompp
into
imul
outsl
dec
dec
lcall
xor
mov
es
or
adc
add
mov
fdivl
add
bound
inc
push
cmp
out
int3
mov
inc
xchg
bound
lds
stos
movsl
cmp
xor
test
mov
js
or
jb
xor
and
fcoms
jb
mov
sub
lahf
jo
ljmp
cwtl
mov
adc
cld
mov
test
stc
lret
stc
sahf
sub
notb
lret
and
or
cld
mov
inc
sub
sub
pusha
mov
and
add
pop
mov
mov
into
or
mov
mov
cmp
mov
add
dec
add
mov
rcll
xor
aam
je
mov
sub
scas
mov
xorl
int
sbbb
and
daa
mov
mov
mov
je
stos
pop
stc
cltd
stos
imul
push
fnstenv
cmp
xchg
jge
in
test
add
sbb
or
xchg
je
and
out
pop
sub
fisubrs
test
push
scas
push
xchg
lods
fiadds
daa
pop
aas
mov
push
jmp
cmpsb
mov
rcrl
add
pop
mov
xor
mov
fcomps
add
mov
mov
mov
lret
jle
sti
mov
sbb
jl
imul
jge
lds
mov
jne
pop
test
dec
out
shll
pop
fidivrs
mov
mov
into
lcall
add
sbb
shll
add
jecxz
idiv
push
pop
mov
lret
sbbl
dec
adc
push
xor
mov
mov
adc
lcall
rol
lods
push
bndldx
in
sbbl
imul
xor
mov
icebp
push
jo
sub
adc
loope
in
mov
ja
movsl
xor
add
sub
in
lahf
adc
xchg
lret
pop
scas
popf
lret
push
sub
in
ss
lods
add
int
dec
mov
fldcw
inc
dec
cmp
xchg
mov
xchg
adc
iret
dec
js
mov
clc
data16
cld
xchg
cld
and
jge
sbb
jge
lods
mov
je
insl
pop
pop
lret
pop
mov
lds
or
cltd
arpl
pop
sub
sbb
outsb
fs
out
push
gs
push
leave
cmp
push
aam
pop
rcl
out
dec
xor
shrb
iret
ds
push
nop
fmul
aam
scas
aas
cmp
xor
repz
repnz
aaa
aas
sub
js
sti
pop
lea
jmp
dec
test
mov
fldcw
loope
adc
int
sbb
add
test
dec
push
mov
jns
push
mov
push
shlb
xchg
or
add
rol
sub
mov
pop
or
pop
sub
orb
hlt
repz
inc
xchg
imul
lcall
push
lea
fwait
sti
imul
cs
and
cmpsl
sub
mov
and
push
cs
scas
out
and
lods
out
fdivp
mov
mov
dec
les
jmp
ljmp
push
mov
add
jbe
add
les
lds
fcompl
push
call
mov
daa
sahf
cs
imul
lds
xchg
rclb
push
jmp
xor
pop
sti
adc
mov
jbe
scas
and
leave
adc
aaa
pushf
xor
loope
sbb
add
les
push
push
jle
sub
xor
inc
ljmp
mov
xchg
pop
dec
ljmp
mov
mov
cmp
mov
or
out
push
aaa
xlat
push
hlt
xor
or
mov
xor
mov
cwtl
dec
sbb
pop
scas
je
repz
mov
pushf
cmpsl
push
mov
cltd
mov
inc
sti
mov
adcb
jno
movsl
mov
jne
adc
stos
lds
jecxz
mov
mov
sub
pop
adc
inc
mov
stos
xchg
insb
and
xchg
out
mov
popf
and
fwait
outsb
jo
inc
inc
repnz
mov
or
push
jnp
popa
and
pop
divl
test
es
and
mov
push
das
xor
xor
push
xor
call
loop
inc
sets
or
or
inc
iret
gs
pop
iret
popf
inc
or
mov
jne
ficoms
adc
iret
leave
pop
sub
xor
cmp
sub
mov
dec
insb
jecxz
sub
je
mov
lcall
test
mov
cmpl
sbb
inc
xor
mov
mov
xor
inc
test
int
adc
push
xor
pop
adc
pop
adc
add
repz
stos
mov
insl
inc
and
shll
lahf
and
and
pop
orb
ret
ret
push
or
outsb
xchg
or
cmp
jmp
sti
inc
mov
fwait
daa
stos
pop
mov
out
xlat
jnp
or
cmp
jmp
sti
inc
mov
fwait
daa
stos
pop
mov
or
fwait
mov
daa
sub
push
sti
inc
mov
mov
stos
pop
push
pop
pop
testl
or
mov
int
push
sti
xor
mov
inc
clc
mov
mov
mov
mov
or
sbb
sub
cmp
pusha
sbb
inc
jp
mov
mov
shr
ret
or
sbb
sub
jb
push
pop
push
push
jp
mov
mov
lret
cli
sub
inc
dec
pop
jp
jb
or
jp
mov
out
xchg
into
hlt
push
mov
jmp
sub
jp
arpl
xor
ds
fdivs
loop
push
out
repnz
or
sub
cmp
mov
push
push
xchg
pop
dec
popa
pop
xor
add
lret
sub
cli
jb
sahf
imul
mov
pop
stos
cmpsb
scas
or
add
stos
mov
aam
lds
xchg
inc
pop
loop
das
popw
jl
inc
or
adc
in
adc
repnz
imul
cmovb
stos
jge
or
and
jg
cmc
scas
or
push
cmp
mov
scas
push
jg
jp
mov
mov
shr
sub
cmp
or
sbb
push
jp
dec
push
cmp
out
dec
imul
idiv
andl
dec
jae
inc
push
jb
pop
and
call
ret
sar
stos
repnz
sahf
scas
loop
rolb
inc
jbe
jl
push
jb
or
xlat
fcmove
out
fsubrp
into
mov
ljmp
adc
add
jb
bound
push
jp
mov
mov
shr
ret
or
sbb
sub
cmp
bound
push
jp
mov
imul
pop
test
adc
jno
jl
fs
fwait
sub
hlt
sub
jl
add
mov
xchg
data16
mov
inc
mov
iret
ja
or
stc
xchg
cmp
les
js
bound
fisubl
repnz
outsl
lods
ja
fisubl
pop
in
fdivrl
or
sbb
icebp
xor
push
mov
sbb
mov
arpl
mov
mov
push
divl
mov
pop
xchg
nop
cwtl
push
es
movsb
cmp
cmp
mov
aaa
jecxz
sub
dec
cmpsl
call
scas
inc
loopne
mov
fnstenv
stos
std
sbb
and
sbb
sbb
gs
xchg
jb
int3
iret
fwait
cmp
mov
pop
add
sub
mov
gs
dec
xchg
or
fadd
cmpb
enter
xor
call
sbb
mov
mov
jne
pop
scas
addb
cs
jbe
dec
pop
ret
jae
scas
sbb
popa
test
or
fcomp
nop
xchg
dec
in
and
in
lret
shl
pop
lret
pmullw
repnz
adc
orb
sub
xchg
cmp
cmp
add
pusha
mov
pop
test
inc
into
push
and
scas
inc
shlb
aaa
add
sub
xchg
repnz
or
and
test
push
aad
or
cmc
sub
test
clc
or
sub
mov
fwait
cmp
mov
dec
in
sbb
lods
jp
loopne
cwtl
daa
mov
sub
enter
fistpll
nop
mov
cmp
lea
sbb
cmp
pop
in
js
jb
cmp
nop
jnp
jl
cmp
dec
bound
jecxz
or
nop
adc
push
es
adc
xor
dec
fwait
mov
insl
adc
sbbl
sti
aaa
jnp
call
mov
movsb
insl
dec
les
fs
pop
fnstcw
ret
lret
negb
in
icebp
ret
xchg
cmpsb
cmc
pop
loopne
insb
fwait
sub
push
cwtl
sub
pop
mov
fldl
mul
cmp
cld
aas
js
push
stos
push
xlat
sub
ljmp
mov
sbb
lret
leave
dec
adcl
sbb
sbb
test
dec
jo
pusha
ss
popf
push
and
mov
jmp
call
lock
sbb
mov
sub
je
pushf
insl
rcrb
add
jg
inc
sub
sub
ret
adc
push
mov
xor
aas
xchg
divl
daa
jne
mov
xchg
nop
rcll
icebp
mov
push
cltd
xchg
mov
fisubs
cmp
adc
cmpsl
sbb
cmp
sbb
sub
jecxz
icebp
xorl
pcmpgtd
add
mov
cmp
out
mov
mov
lret
jns
fildl
fistps
cld
mov
sahf
out
mov
mov
inc
call
pop
rcrl
imul
jg
push
test
xchg
inc
call
subl
jp
mov
jmp
sbb
push
add
jns
adc
fwait
jmp
fs
mov
loop
cmpsl
inc
cmp
mov
scas
xchg
pop
lock
ret
leave
out
je
mov
das
sahf
lods
and
stc
pushf
nop
rclb
pop
bound
jno
jns
or
adc
sub
insl
jg
scas
cld
add
xor
outsb
cld
xchg
mov
add
push
sub
test
adc
xchg
jg
mov
aad
push
add
stos
out
fucom
fwait
add
fwait
lea
sbb
jne
call
sub
jmp
lods
jae
xchg
sti
lods
push
leave
pop
cmp
sub
fs
movsl
loop
fisttpl
scas
inc
or
int3
sbb
test
mov
shll
mov
nop
sub
lds
mov
enter
icebp
sbb
push
jle
dec
inc
aam
sti
mov
jecxz
sub
and
mov
xor
dec
pop
lock
repnz
jecxz
push
adc
and
fadd
hlt
loopne
sub
lock
add
sub
dec
test
outsb
mulb
outsl
and
bound
movsl
pop
mov
sub
movsb
shrl
popl
inc
jae
aaa
xchg
loope
les
xchg
jno
push
xor
cmp
adc
enter
out
sar
fs
in
ja
pop
shrl
bswap
js
icebp
std
dec
xor
or
cmpsl
shll
jns
adc
sub
aad
xchg
mov
mov
aas
push
data16
insl
es
dec
popa
test
jns
out
icebp
not
bound
inc
fsts
push
test
inc
fisubl
inc
mov
in
mov
mov
orl
ds
push
insl
fistl
pop
cwtl
insl
mov
sub
fcomp
cwtl
mov
insb
pop
fcmovnu
shl
in
call
mov
pop
xorb
das
pop
int3
pusha
scas
add
pop
mov
shlb
push
jae
mov
mov
enter
test
xrelease
jne
les
jne
test
push
jnp
test
ja
fbld
aad
and
mov
aam
xor
sub
imulb
adc
mov
mov
xor
arpl
les
sbb
sub
xor
sar
fidivs
mov
gs
shl
sbb
jo
shl
mov
dec
xlat
es
pop
mov
movsl
jbe
jmp
pop
arpl
adc
fistps
gs
mov
push
ss
push
cmpsl
popf
mov
rcrb
mov
pop
mov
aaa
dec
adc
aad
shll
lcall
aaa
fwait
call
xchg
pop
xchg
push
pop
out
xor
fcomps
fcmovnbe
jb
mov
sbb
cwtl
movsb
cmp
xor
xchg
dec
rcr
push
les
out
adc
cmpsl
and
fnsave
int3
push
pop
popf
or
cmp
fisubs
in
mov
and
jmp
push
pop
dec
movsbl
imul
ret
jb
dec
inc
xor
pop
or
cmp
mov
and
dec
cli
mov
xchg
jle
adc
mov
inc
inc
ja
les
movb
cmp
xchg
or
or
sbb
movsl
xchg
cltd
cli
dec
repz
leave
int3
hlt
ljmp
pop
pop
popf
insb
mov
in
xor
pop
xchg
dec
sbb
push
jg
lret
subl
xor
jmp
add
mov
jg
enter
pop
aam
and
cli
out
fidivrs
sbb
out
push
jno
ss
push
inc
xchg
js
scas
std
lahf
int
fnstenv
mov
pushf
cmp
sbbl
aaa
mov
mov
jb
cmp
xchg
cmp
push
loop
mov
add
mov
pop
adc
inc
bound
inc
mov
loope
and
repz
stos
xor
jg
divb
sbb
stos
jp
sbb
sbb
rdpmc
xor
arpl
fidivrs
inc
push
mov
sbb
mov
in
dec
mov
cmpsb
fdivrs
pushf
or
sbb
dec
fcmovbe
cmp
xlat
insl
rorb
sbb
call
stc
shlb
sub
jecxz
sub
call
add
adc
mov
mov
sub
btr
dec
scas
les
sub
popf
addr16
popf
inc
dec
rclb
push
faddl
xchg
add
cmpsb
das
out
xor
sub
loopne
cmp
mov
cmp
into
decb
dec
push
add
xchg
lods
xor
es
and
jge
and
es
les
out
sti
popa
rcr
add
cmp
push
outsl
jne
cld
xchg
int3
mov
pop
faddp
imul
test
test
mov
add
loop
push
arpl
outsl
mov
adc
leave
push
mov
test
stos
mov
js
mov
jl
inc
and
push
adc
dec
dec
sub
cld
fiadds
jge
ljmp
ja
push
fisttpl
cmp
jg
inc
push
pop
pop
fsubl
xor
pop
inc
popa
sahf
in
imul
mov
add
pop
popf
cwtl
dec
add
test
mov
sti
xchg
lret
sub
cli
aam
inc
movsb
hlt
add
dec
or
mov
enter
mov
enter
std
cld
clc
loope
insb
or
xchg
fisubrs
mov
lds
out
inc
adc
stc
cmpsb
aam
inc
js
inc
xchg
add
stos
xor
lds
xchg
sbb
mov
jp
fsubl
imull
icebp
cs
jns
pop
inc
push
repz
sbb
cmc
aam
outsb
inc
pop
icebp
add
jmp
cli
dec
aas
cld
pop
sub
jbe
fs
subb
xor
xor
aad
mov
xchg
push
mov
xchg
inc
popf
addr16
and
scas
xchg
and
pop
adc
in
or
insl
hlt
es
jle
out
jb
inc
sub
sub
ja
add
mov
loop
xchg
mov
xlat
cmp
in
push
mov
push
push
or
les
das
cmp
add
lds
aam
mov
mov
daa
bound
aad
mov
add
push
aad
in
aas
or
sub
popa
pop
pop
loop
out
sar
jns
adc
fcmovbe
dec
dec
fsts
jae
mov
xchg
push
and
popf
fnstsw
ret
cltd
pop
pushf
scas
mov
pushf
stos
in
ja
dec
in
xchg
fwait
push
outsl
cmp
shrl
repz
mov
movsb
js
leave
jno
sub
loope
icebp
fldt
pop
cmp
xor
xchg
lea
mov
jp
ljmp
push
fidivl
in
pop
cmp
rorb
in
inc
in
scas
add
add
out
inc
data16
pushl
faddl
dec
mov
sbb
shll
mov
dec
cmpsl
fmul
push
fwait
dec
aaa
dec
pop
test
adc
cs
jp
pop
gs
xchg
lret
lods
pop
adc
sahf
inc
pop
shlb
jl
xchg
mov
inc
jo
or
stos
jne
sub
adc
aad
daa
and
inc
pusha
popf
jge
test
mov
iret
aaa
hlt
sub
and
out
sub
lahf
add
imul
inc
cmp
xchg
xor
imul
cltd
sahf
mov
mov
push
lahf
imul
sub
imul
mov
mov
xchg
mov
jnp
sub
pop
mov
pop
mov
sub
test
sbb
and
push
add
pusha
and
mov
inc
sub
lds
mov
pusha
jae
push
lahf
clc
mov
adc
in
dec
jno
sub
scas
add
ljmp
jbe
pop
sbb
xlat
jbe
jbe
xchg
jecxz
enter
jno
xchg
int
shl
fildll
aas
jb
mov
dec
or
aam
mov
lret
and
popf
xor
in
cli
rcr
fistps
adc
dec
add
xchg
xchg
adc
xchg
jmp
mov
pop
cld
les
pop
xor
mov
cmp
daa
sbb
and
sub
rcr
shrb
icebp
jl
mov
pop
cli
mov
or
pop
mov
sti
cmovle
pushw
orl
mov
xor
out
idivb
adc
mov
sahf
bnd
inc
scas
or
rsqrtps
add
scas
pop
mov
es
jno
adc
dec
sahf
cmc
fmull
dec
sbb
mov
dec
inc
fcompl
hlt
mov
pop
mov
pop
and
jnp
int3
add
icebp
xor
popf
inc
dec
in
fwait
leave
call
add
aas
dec
add
xor
mov
out
outsl
xchg
cmpsl
mov
jmp
scas
inc
lods
add
lahf
cltd
lahf
test
or
jns
jno
in
out
into
fs
xchg
mov
inc
pop
insb
dec
xlat
pop
notl
inc
clc
xchg
popa
adc
mov
jmp
push
lea
int3
out
imul
sub
inc
lods
jno
push
ficomps
inc
shlb
and
inc
fnstcw
sub
enter
out
cmp
ret
dec
sub
sub
push
cmp
cltd
and
rol
mov
mov
inc
fdivs
scas
pop
repz
in
das
lods
cmpsl
movsl
push
and
mov
fcmovnbe
jge
hlt
mov
imul
lcall
std
syscall
imul
pushl
cmp
lret
dec
add
das
stos
jp
mov
and
xchg
mov
xchg
movsl
outsl
xor
out
outsb
mov
dec
inc
xchg
adc
dec
sarb
imul
xor
pop
out
xchg
dec
add
push
cmovge
test
pop
xor
sub
jbe
rol
mov
or
lret
cmp
mov
sbb
sti
inc
gs
fistpl
mov
subl
clc
xchg
inc
dec
push
lret
xor
and
cmp
push
jno
mov
addl
jno
cmovg
repz
add
jl
cmp
fstps
add
in
push
xchg
scas
cmp
push
inc
loope
jnp
inc
lahf
arpl
lods
hlt
out
cmovp
mov
stc
repz
xchg
fs
or
jg
inc
dec
das
cmp
cmp
das
pop
xchg
fwait
xchg
xchg
adc
lahf
inc
ljmp
mov
jb
shll
test
lods
push
iret
es
into
jle
sub
mov
mov
rolb
mov
jmp
push
dec
test
lahf
fcmovnb
jno
push
adc
mov
or
andl
ror
sahf
insl
fwait
mov
in
sbb
imul
movsl
pop
repnz
out
les
push
ficoml
ss
mov
xchg
hlt
mov
xlat
fstpl
mov
ret
adc
add
gs
mov
push
xchg
xchg
jnp
cmpsb
mov
aam
adc
movsl
cmc
shll
fstpl
cmp
arpl
sub
icebp
inc
ss
sub
fsts
add
leave
mov
jp
push
out
mov
cs
push
sbb
imul
push
push
adc
or
cltd
push
scas
popf
mulb
scas
push
jo
jl
int3
sti
pop
jle
lret
rorl
xchg
inc
call
cmp
outsb
loope
js
and
xchg
jl
xorl
inc
mov
jecxz
lods
push
scas
push
jae
adc
xchg
dec
push
cmpsb
cmp
cmp
je
test
mov
sub
dec
fnstcw
mov
jmp
in
popa
out
std
pop
outsl
and
push
xor
sbbl
aad
inc
cmc
notl
xlat
fiaddl
mov
fs
and
scas
sbb
inc
cwtl
push
push
xlat
adc
repnz
mov
cmpsl
rol
or
in
dec
cmp
cmp
das
mov
add
dec
std
lcall
pop
or
in
ljmp
aad
push
enter
mov
mov
cltd
add
fists
cmpl
and
stos
in
fbld
ret
pop
mov
jne
fistps
cmpsb
addl
pushf
xor
mov
je
lods
sbb
out
adc
pusha
xchg
movsb
add
jge
or
jne
xor
or
pop
adcb
mov
lahf
aad
or
inc
or
fdivs
mov
dec
xchg
xorl
adc
cwtl
std
xchg
shll
test
jb
push
fwait
jge
inc
mov
pop
xchg
fildl
add
adc
jge
or
cmpsb
inc
xchg
movsb
pop
cli
jge
xchg
jge
xor
adc
cmpsb
pop
mov
ja
lock
cs
cmp
in
mov
push
xorb
pop
in
pushl
ds
pop
pop
and
pop
insl
subl
dec
ja
ret
xor
bswap
repz
xor
xchg
sbb
movsl
adc
lret
xorb
repnz
inc
pop
push
pop
sub
add
bound
sarl
inc
pop
xlat
ficomps
adc
imul
fstl
fsub
iret
mov
rorl
jecxz
xchg
jb
mov
mov
add
fbld
xchg
mov
xchg
popl
out
aam
ja
out
cmc
pop
jnp
in
mov
out
dec
cmp
int3
lahf
inc
dec
fistpll
adc
pop
push
or
adc
shl
aas
mov
js
dec
adc
lret
push
dec
push
mov
es
fisubrs
jl
mov
ljmp
imul
loopne
sbb
mov
mov
in
push
enter
cli
movsb
sarb
jb
sub
imul
mov
sbb
ficoml
mov
pop
insb
mov
mov
sub
mov
movsb
mov
out
dec
pop
sub
into
mov
add
sub
push
sub
xor
imul
ljmp
fisttpl
out
cmp
lret
push
fcom
jae
sbb
std
or
cmp
out
lcall
dec
outsl
inc
into
insb
jne
pop
aaa
outsb
lea
mov
adc
ret
gs
ja
lcall
mov
adc
add
sbb
sub
sbb
dec
cltd
mov
dec
adc
movsb
add
xor
repnz
aad
in
icebp
inc
or
pop
dec
fldt
loope
mov
lods
pusha
je
jg
mov
not
incl
sbb
stos
pop
mov
in
jge
adcb
sbb
xchg
cmp
loop
mov
or
lcall
cld
cmp
mov
inc
mov
pop
sub
shll
xchg
jo
es
loop
sarb
rolb
xchg
push
xor
ss
mov
xchg
jecxz
pop
out
sbb
push
orl
pop
pop
call
les
push
gs
pop
push
aam
push
add
lock
mov
dec
jnp
lahf
adc
lcall
pushf
mov
popf
int
call
lret
mov
js
push
repnz
aaa
mov
mov
push
out
idivb
int3
jmp
and
xlat
idivl
jg
sub
mov
clc
ret
fwait
cmpsb
cmp
aam
xchg
push
sbb
xchg
add
or
sbb
and
mov
rol
data16
fidivrl
std
fdivl
fldpi
ficomps
cvttps2pi
sti
push
add
mov
inc
addl
insl
andl
insl
xchg
leave
mov
cmpsb
shrb
int3
arpl
mov
popf
test
xchg
pop
sarb
sbb
ret
push
lcall
dec
mov
pop
stc
aad
xchg
sub
sbb
and
popa
pop
cli
inc
and
adc
stos
cwtl
aaa
push
mov
mov
movsl
into
lret
popf
and
push
subb
fadds
jne
daa
xchg
cltd
sbb
je
and
lea
adc
push
jo
pushf
push
stos
iret
ret
imul
dec
xor
pop
in
leave
adc
mov
hlt
cmpxchg
fdivrs
popl
sub
mov
jle
xlat
jbe
xchg
sub
mov
mov
sbb
cs
jns
scas
popf
jbe
pop
xchg
sarl
mov
shlb
adc
mov
adc
cmpsl
gs
out
sbb
xchg
sub
enter
cmp
pop
insb
dec
adc
dec
test
divb
fs
sub
xchg
cmp
frndint
scas
mov
test
jle
adc
subb
sbb
mov
mov
fwait
outsl
adc
mov
cmp
xor
jle
push
or
and
ficoml
aad
into
inc
test
pop
in
add
dec
dec
cmp
fmuls
mov
inc
sub
inc
ss
adc
cmc
pop
jmp
pop
pop
jmp
jo
movsb
and
push
adc
mov
fiadds
lret
popf
pop
jbe
aaa
add
daa
and
test
inc
sub
xor
int3
les
insl
jae
mov
bound
mov
and
and
popa
inc
adc
push
xchg
push
mov
and
inc
outsl
or
jp
fsubl
inc
iret
lds
insl
notb
les
inc
and
movsb
add
int3
outsb
push
push
movsl
cmp
addl
aaa
mov
add
lcall
mov
xchg
inc
pop
jo
fs
into
dec
outsb
cmpsl
lods
push
arpl
lret
loop
xorl
sahf
jl
inc
push
stos
cs
imul
dec
push
sub
adc
fmuls
popa
push
test
cmp
cs
imul
pop
aaa
iret
imul
mov
cmpsl
push
sub
outsb
addb
push
cli
pop
jbe
data16
mov
je
cmp
rolb
scas
es
push
cltd
inc
loopne
add
cld
popl
sbb
lcall
loop
shr
ret
or
sbb
sub
cmp
bound
push
jp
mov
mov
shr
ret
or
sbb
sub
cmp
bound
push
jp
mov
mov
shr
ret
or
sbb
sub
cmp
arpl
push
jp
mov
mov
push
push
add
mov
ret
lods
xchg
mov
sub
sbb
or
push
inc
dec
mov
mov
jmp
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
mov
jmp
fcmovnu
lret
leave
cmp
sub
sbb
or
jnp
imul
dec
push
mov
in
mov
scas
movsl
leave
cmp
sbb
xorb
mov
fidivl
and
popf
dec
fistpll
and
mov
cmc
test
imul
cmp
inc
mov
jl
mov
imul
scas
sbb
jle
lock
push
imul
cmp
imul
daa
lret
leave
cmp
sub
or
pop
pop
jle
fiadds
dec
mov
jmp
loope
add
stos
push
pop
push
mov
sti
out
jmp
fmuls
push
dec
push
xor
test
test
adc
mov
lret
ss
fcomps
add
inc
cltd
mov
arpl
in
mov
mov
pushf
sahf
es
fincstp
cmp
sbb
or
jnp
imul
dec
push
mov
orb
fcmovnu
lret
lods
jp
pop
sub
bound
jnp
sbb
aas
xor
into
rcrl
xchg
jmp
mov
inc
dec
sub
addr16
or
pop
and
cli
enter
lret
test
pop
js
dec
je
addr16
adc
dec
dec
mov
cltd
mov
fcmovnu
lret
leave
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
cltd
mov
fcmovnu
lret
leave
cmp
push
scas
xchg
and
test
mov
mov
ret
mov
jg
lcall
lds
rol
mov
dec
dec
add
inc
hlt
xchg
insb
stos
lock
mov
inc
mov
adc
sub
push
scas
xchg
push
jp
out
cli
iret
jmp
mov
les
stos
das
inc
cmp
pushf
mov
popaw
jnp
fdivrs
cltd
or
dec
or
push
jp
sbb
movsl
ljmp
sub
out
jge
das
push
push
mov
push
xchg
dec
xor
mov
stos
xor
das
test
and
jl
mov
xchg
sub
enterw
sbb
or
sbb
std
mov
lret
sub
and
pop
repz
pop
pop
aaa
or
dec
fstpt
aam
ror
lods
fs
inc
lock
jno
shll
insb
ss
jge
and
dec
cmc
inc
aaa
add
notb
mov
cltd
sbb
mov
jns
out
decb
lret
mov
dec
mov
xchg
cmpsb
lcall
mov
push
test
loope
xchg
pusha
loope
ret
negb
aad
jns
lcall
and
add
and
shll
add
mov
adc
or
jne
out
test
mov
jp
sbb
jg
cwtl
arpl
and
or
jo
mov
mov
xchg
or
insb
imul
cmovs
sub
bound
xlat
push
jo
in
mov
pusha
jl
or
xor
mov
mov
xchg
cwtl
test
inc
cmpsl
pop
xor
js
dec
loopne
pop
and
loopne
lock
or
ljmp
fidivrl
imulb
repz
mov
cmp
daa
cli
cld
cmp
dec
hlt
imul
out
in
mov
pop
mov
dec
sub
mov
pop
inc
mov
fs
gs
dec
cwtl
cltd
dec
mov
ss
mov
es
sub
clc
xor
pusha
mov
fmulp
lcall
jmp
cmp
sub
push
inc
mov
test
mov
call
lret
bound
gs
std
mov
add
dec
jb
jnp
loopne
dec
in
xchg
push
add
dec
add
pushf
inc
push
mulb
in
dec
mov
out
jno
dec
rorl
pop
xor
scas
cmp
pop
sahf
jb
insb
dec
push
ds
push
adc
xchg
sub
fwait
repnz
jo
inc
add
and
jb
aaa
and
push
daa
mov
gs
icebp
imul
adc
xchg
add
push
jns
hlt
inc
sbb
and
inc
fidivs
mov
pop
cmp
lds
ss
mov
ljmp
and
inc
js
stos
test
fwait
loop
enter
sahf
inc
pusha
ds
lea
repz
xchg
add
push
adc
xchg
loope
iret
aad
mov
mov
jbe
sar
pop
mov
scas
inc
in
pop
sub
sub
in
jnp
xor
orb
pop
pusha
sub
add
mov
mov
fdivrp
cmpsl
js
fnstcw
cmp
push
mov
dec
invd
idivb
xchg
mov
ret
leave
mov
js
push
insl
int3
out
adc
mov
sub
push
mov
mov
inc
aaa
sbb
push
push
repnz
lods
mov
sbb
xor
or
jl
xchg
cld
movl
test
jl
dec
push
sub
sub
xor
jg
sub
xor
icebp
shrl
dec
push
mov
sahf
adc
dec
xchg
pop
in
adc
andl
sub
js
mov
es
or
dec
rcrb
push
pushf
mov
outsl
out
pop
xchg
pop
sbb
pop
mov
lods
sbbb
push
ror
sbb
xor
test
popf
call
into
imul
cmpb
push
dec
mov
and
cmpsl
cmp
jno
pop
pop
pop
xchg
dec
sbb
imul
mov
call
pusha
loope
jecxz
jl
jne
addb
jb
xlat
outsl
loop
push
xor
test
push
in
ds
fistl
pop
push
pop
mov
inc
mov
sub
sti
inc
mov
fxch
mov
aaa
add
movsb
xchg
les
and
outsb
inc
jb
pushfw
push
fnstcw
mov
sti
mov
fs
mov
push
xchg
mov
mov
push
icebp
jns
pop
call
movsl
sub
push
push
dec
int3
mov
das
or
cwtl
push
mov
lds
and
cmc
or
mov
push
ret
int3
mov
dec
dec
iret
adc
inc
sbb
mov
popf
out
test
inc
fwait
inc
jnp
mov
repz
pop
and
dec
sub
clc
push
movsb
xchg
adc
mov
adc
add
pop
add
leave
pushf
out
dec
jle
bound
pop
std
std
adc
cmc
push
push
adc
xchg
cmpsl
and
out
xor
jbe
or
ljmp
out
mov
sbb
cmpsl
call
sbb
test
fnsave
out
xorl
jo
lret
jmp
push
sub
jle
mov
jle
popl
clc
mov
mov
mov
xchg
outsl
cmp
mov
push
and
and
push
push
cwtl
adc
push
mov
cmc
mov
movl
or
mov
push
mov
push
xor
in
pop
mov
push
cmp
push
sbb
mov
lahf
inc
lods
imul
mov
add
imul
in
shll
int3
das
adc
dec
ret
inc
test
xchg
test
jb
push
imul
rep
or
addr16
lods
fwait
mov
into
cmp
sub
push
test
dec
lods
jg
jo
mov
add
push
jo
dec
shll
pop
dec
leave
xor
outsl
and
in
pop
pop
lods
inc
rorb
insb
pop
dec
mov
pop
aam
out
stos
mov
xchg
test
mov
fmulp
and
cltd
mov
popa
pop
or
push
and
adc
mov
jae
ss
outsl
and
hlt
inc
std
mov
in
mov
clc
ret
loopne
aam
test
sbb
sbb
cltd
fmull
repz
push
ret
dec
test
nop
sub
inc
pop
fwait
loope
scas
pusha
mov
std
sahf
sub
movsl
pop
mov
cmp
cmpsb
inc
sub
pop
push
pop
pusha
xchg
xchg
addb
xor
cmp
pop
or
adcl
sub
xor
scas
das
rcr
cmp
jge
push
mov
pop
mov
dec
inc
mov
adc
lods
mov
loope
mov
mov
xchg
xor
decb
jl
mov
and
lods
jecxz
insl
jns
pop
rcll
and
mov
enter
in
std
pop
movsl
int
mov
add
cmpb
out
pop
les
popf
stos
fisttpll
lcall
sbb
testb
in
mov
jbe
into
sub
stos
pop
mov
rorb
call
out
stos
in
divl
mov
loopne
loop
shlb
loop
repz
movsb
add
insb
mov
mov
jge
addl
pushf
sti
popa
lret
scas
repz
pop
movsl
jne
fcomps
cld
ret
loope
adc
mov
in
pop
adc
pop
lods
enter
arpl
jns
leave
xor
push
inc
mov
hlt
and
mov
adc
gs
repnz
les
movsb
leave
jg
loop
mov
adc
cmp
cmp
shl
push
mov
lods
inc
dec
sub
cmpsl
or
mov
addr16
sbb
mov
arpl
sti
inc
inc
aas
cld
sub
bound
pop
insl
jl
mov
xlat
adc
or
xor
dec
flds
adc
push
fldenv
push
fcmovnb
sahf
test
and
imul
rorl
or
mov
mov
mov
cli
jmp
das
scas
push
sub
icebp
mov
cmpsl
xor
jb
into
push
jmp
sti
in
test
push
cmp
js
addb
in
xchg
push
movsl
add
mov
iret
pop
mov
es
imul
mov
ror
push
xchg
sbb
add
lods
les
dec
in
insb
mov
mov
lahf
das
xor
in
test
insb
dec
mov
sbb
dec
outsb
bound
rol
pop
sub
add
iret
push
lds
and
test
enter
ret
dec
int
xor
add
xchg
stos
pop
xchg
add
test
add
wrmsr
push
adc
push
cmp
jne
sbb
xchg
and
shlb
sbbl
push
out
iret
popa
sbb
adc
cltd
xchg
sub
es
push
xor
insb
in
and
lret
jae
test
push
mov
js
pop
mov
xor
popa
loopne
mov
xor
imul
cmpb
outsb
repz
cmp
jge
mov
cmp
popf
or
push
jo
iret
push
testb
lret
movsb
test
test
jbe
xchg
hlt
movb
or
clc
mov
test
pop
jnp
push
mov
mov
hlt
xchg
xchg
fs
int3
cmp
push
jae
mov
mov
jg
pushf
movsl
rcrb
cli
mov
adc
jb
xor
cld
cwtl
ret
push
into
mov
jbe
pop
loopne
or
xlat
mov
repz
cmp
xor
pop
sbb
or
mov
vmovq
xor
lock
or
insb
xchg
jg
xor
sbbb
add
jecxz
imul
xor
outsb
mov
sbb
mov
xchg
push
add
icebp
popa
mov
mov
jo,pt
out
mov
cld
jle
jmp
mov
lds
cmpsb
call
adc
sbb
call
push
daa
repz
mov
addr16
inc
add
repnz
repnz
jnp
mov
dec
notl
lret
rol
cmp
adc
push
imul
pop
outsb
sub
push
sub
arpl
mov
inc
push
out
jl
cld
js
jnp
push
jmp
xchg
pop
xchg
jmp
mov
jae
xchg
fs
loope
clc
mov
mov
sbb
pop
inc
cmp
jmp
fbld
aam
xorl
mov
jae
clc
mov
mov
mov
insl
roll
pusha
jb
mov
leave
imul
loop
popl
sbb
lea
and
test
aam
pop
fcomp
fsubl
jge
nop
inc
cmp
aas
push
aas
lret
imul
cmpsl
push
out
sbb
scas
outsl
mov
pushf
mov
pushf
sbb
test
fs
loop
in
aaa
rorb
xchg
frstor
shl
add
push
int
add
mov
push
cli
xor
push
push
xchg
dec
jns
incl
mov
sbb
out
xchg
rorb
in
rorl
popa
add
pop
movsl
pop
aad
xchg
sub
and
loope
data16
xchg
enter
pop
loope
jp
repz
shll
jle
adc
ljmp
stc
xor
jmp
jmp
shll
sarb
jp
sub
push
cltd
pushf
pop
test
dec
push
rcl
mov
aas
xchg
inc
cmp
insl
sti
je
cmp
push
jmp
pop
test
stc
lret
clc
leave
leave
jl
pop
enter
sub
arpl
sti
push
push
bound
xlat
outsb
cmp
cwtl
xchg
push
sbb
push
and
pop
adc
data16
sahf
jb
mov
inc
rcl
lret
enter
jge
iret
out
adc
scas
add
xor
add
les
and
and
add
xor
mov
pop
jecxz
or
and
mov
xchg
fwait
jns
test
nop
adc
sbb
and
loope
out
imul
sub
xor
and
mov
mov
inc
mov
pop
fisttpl
xor
jns
mov
fcoml
adcl
dec
in
fildl
sub
push
jle
outsl
repz
test
pop
jle
jg
ss
cmp
pop
cltd
pand
mov
lahf
or
xor
sbb
xor
add
gs
popf
xchg
jmp
adc
stos
mov
pop
out
add
xlat
popf
sti
test
sahf
andl
dec
sarb
jecxz
mov
lock
std
adc
adc
adc
js
mov
ret
mov
add
shl
push
dec
push
xor
inc
mov
cmc
sub
cmp
std
cmp
jb
data16
imulb
sbb
cmovl
mov
pop
sub
fwait
pushf
xchg
fidivrs
mov
or
test
nop
push
fidivl
add
jo
mov
cwtl
push
mov
cwtl
or
pop
ss
sbb
cmp
ljmp
xchg
insb
mov
xchg
sarl
jns
pop
push
jecxz
pop
mov
ss
iret
mov
test
mov
iret
cld
sub
push
add
xchg
in
in
add
lea
imul
sbb
cmp
cmp
xor
sub
lcall
add
and
cmpb
inc
pop
leave
repnz
or
aad
dec
inc
mov
mov
mov
outsb
xor
sbb
xor
xor
scas
cmp
jb
aas
pop
jno
imul
pop
xchg
insb
inc
out
or
rcrb
pop
sbbb
xchg
outsb
jb
jo
mov
sbb
enter
and
jne
push
and
push
mov
rorb
insl
xchg
mov
jge
xor
sti
lds
test
mov
insb
fisttpl
jnp
mov
sbb
sub
insl
mov
mov
mov
jae,pt
std
fs
and
dec
repnz
lret
mov
std
mov
add
mov
cmpsb
jp
push
inc
add
ret
lea
inc
out
aas
cli
int
daa
ret
dec
push
outsl
imul
pop
clc
xchg
test
lock
pop
ss
out
jne
stos
dec
jnp
or
pop
rcrb
cmp
daa
mov
popf
pusha
mov
lods
xor
ja
mov
loope
lods
dec
fisttps
mov
or
movsl
call
aam
sbb
pop
js
repnz
bnd
je
sbb
jne
bound
bound
inc
hlt
push
adc
sbb
ret
rorb
ja
and
icebp
or
addr16
js
mov
sbb
pushf
std
mov
stos
fs
imul
mov
mov
sti
fisttps
out
jg
movsb
int3
sub
pop
xchg
loop
call
sti
sarb
lret
dec
mov
xor
jp
adc
push
xchg
mov
cltd
adc
int
lcall
jle
cmp
dec
sub
jns
lahf
pop
push
mov
jbe
or
test
adc
insl
jg,pn
je
sub
or
aad
shrb
jmp
pop
sub
daa
bound
adc
mov
dec
mov
int
insl
stc
filds
jle
testb
sahf
flds
add
adcl
and
push
or
les
into
or
push
xchg
fildll
jecxz
lods
test
jns
fiaddl
jle
adc
std
mov
mov
dec
rclb
out
jg
sbb
xchg
jle
and
orb
out
mov
adc
inc
in
inc
xorb
jae
dec
sahf
and
out
data16
stc
scas
adc
hlt
sbb
mov
adc
or
jl
mov
fisubrs
jl
jle
leave
rolb
or
shll
xor
scas
xchg
scas
pusha
popa
or
shl
inc
jl
cmp
ficoml
mov
lcall
or
dec
pop
inc
repz
pop
fisubs
mov
sarb
sub
outsl
dec
cmp
sti
xchg
nop
sarl
xchg
cmp
gs
xchg
adc
das
je
xchg
mov
adc
jg
hlt
cmp
cmp
push
cmpsb
push
lock
aam
sub
push
data16
pop
inc
mov
jne
jne
loopne
sahf
cmpb
xchg
imul
push
xchg
mov
xchg
in
xchg
insb
xchg
xor
xchg
cmp
pop
xchg
pop
notl
xchg
sub
jae
int3
or
sbbb
int3
sub
jbe
fs
push
fadds
and
lods
mov
mov
lods
xor
pop
call
test
dec
ficomps
pop
add
popf
out
add
daa
push
sbb
mov
add
movsl
pushf
ljmp
popf
je
aas
insb
jne
add
add
cmp
ds
push
push
sub
sbb
cli
jbe
movsl
test
mov
sbb
jle
dec
xchg
repz
mov
sarl
aaa
int
push
incl
insl
or
and
mov
jns
dec
push
dec
rcll
mov
dec
or
cmp
cmp
cs
nop
rep
add
iret
adc
sbb
int3
test
imul
in
imul
mov
xchg
lds
cmpsb
mov
or
in
stos
cltd
cmc
mov
out
daa
adc
in
add
jno
fst
and
je
incb
shl
arpl
mov
fnstsw
xchg
dec
fistpll
into
sbbb
fists
jecxz
call
add
das
push
xchg
in
test
out
and
les
fcomip
sbb
jnp
fbld
jo
mov
call
jnp
rcr
mov
iret
pop
ret
sbb
imul
js
test
inc
mov
icebp
xchg
xchg
cmpxchg
arpl
in
fmull
and
out
jns
xor
sbb
sar
xor
je
xchg
jne
sub
mov
pop
fs
inc
jo
mov
sub
pop
xor
mov
jb
sub
cmpsb
pop
push
mov
into
ror
dec
cmp
dec
xchg
sahf
hlt
jmp
push
shlb
test
out
je
cs
call
outsl
sbb
cld
jmp
adc
lods
xor
js
notl
mov
fwait
dec
push
jae
pop
insb
push
cmpsl
or
add
je
sbb
in
icebp
xchg
or
aaa
out
xor
pusha
scas
push
push
or
dec
test
dec
xor
out
mov
pop
mov
push
sbb
int
ret
das
inc
jg
adc
insb
fnsave
dec
fs
jae
push
outsb
lahf
inc
or
call
adcl
xor
scas
xchg
ds
cmc
xor
adc
out
pop
xor
mov
sbb
sbb
pop
mov
gs
or
jecxz
in
insl
popa
cld
cld
xchg
es
mov
mov
shrl
fidivrl
pushf
shlb
inc
out
hlt
pushf
std
aam
lock
push
cmpsl
sbb
mov
jle
xchg
ret
movl
push
adc
jecxz
cmp
pop
cld
xchg
fidivs
adc
mov
push
outsb
ljmp
adc
in
dec
sahf
dec
dec
xchg
mov
mov
ffreep
stos
leave
lods
cmpsl
jg
mov
xor
fsubrs
stc
lds
and
cmp
adc
dec
arpl
movsb
icebp
test
dec
dec
mov
lea
xchg
inc
pop
mov
decb
xchg
cmp
pop
push
faddl
daa
lret
xor
inc
testl
pushw
es
xchg
je
sbb
jnp
dec
arpl
addl
adc
pop
sub
fs
and
cmpsl
cmp
addr16
xor
xor
jmp
jnp
xor
scas
sub
or
mov
repnz
rcrb
lret
or
fidivrs
mov
push
cmp
adc
cmp
xchg
out
adc
mov
lea
xor
popa
push
push
xchg
mov
sub
pop
outsb
pusha
dec
pop
daa
das
mov
loop
popf
movsb
int
inc
or
stos
sub
fisubs
test
xor
push
mov
and
icebp
fcompl
mov
lret
dec
adc
imul
xor
sbb
add
aad
sbb
and
lock
mov
je
sbb
call
adcb
xor
jecxz
test
inc
mov
test
mov
xor
outsl
outsb
pushf
xor
xchg
and
sbb
nop
insb
sub
sub
testb
jnp
imul
dec
dec
mov
cltd
mov
fcmovnu
lret
leave
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
cltd
mov
fcmovnu
lret
leave
cmp
stos
sub
jns
imul
stos
test
sti
stc
jmp
fcmovnu
lret
leave
cmp
sub
sbb
or
jnp
imul
dec
dec
mov
cltd
mov
mov
push
stos
es
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
xor
add
adc
dec
pop
icebp
xor
inc
mov
andb
loopne
lock
and
xor
shlb
add
adc
pusha
xorb
mov
mov
andb
loopne
icebp
adc
pusha
shlb
and
rolb
dec
adc
pusha
mov
push
test
lahf
xchg
xor
aas
cmc
add
push
cmpl
mov
mov
outsl
mov
sbb
inc
fwait
ljmp
jnp
sub
outsb
int3
dec
iret
sar
in
dec
pusha
xorl
sbb
cmp
pusha
mov
lock
rcrl
cli
pop
fidivs
push
push
int
aad
in
adc
adc
shlb
and
pop
rol
pop
dec
or
push
dec
push
mov
outsl
mov
enter
aad
cmp
movsb
push
aad
test
mov
adc
jo
push
jo
aas
xor
iret
sbb
enter
out
lret
sti
adc
loopne
dec
out
cmc
cmp
cli
push
pop
and
mov
shlb
add
pusha
xorb
jp
xor
jo
cmp
sub
call
inc
xchg
push
rolb
push
fiadds
leave
aam
rolb
aad
repz
sbb
mov
movsl
popa
mov
xchg
arpl
cmp
shlb
nop
pop
pop
push
xchg
pop
test
xchg
xor
and
mov
mov
andb
loopne
lock
and
xor
shlb
add
adc
pusha
xorb
mov
mov
andb
loopne
lock
and
xor
rclb
inc
outsl
fdivl
dec
sti
adc
std
fcmove
add
mov
fistpll
and
test
push
rclb
cli
mov
xor
sub
or
push
data16
test
inc
fstl
inc
sbb
daa
hlt
lret
fwait
inc
xchg
dec
lea
push
push
mov
jecxz
test
es
cmpsl
cmc
xorl
in
movsb
lods
aaa
out
fldt
idivl
pop
lret
sub
pusha
xchg
lcall
adc
cli
adcb
xor
test
decb
addr16
fsub
inc
bound
mov
and
mov
or
addr16
push
push
out
inc
cmp
jns
fcmovnu
push
lea
cmp
mov
dec
jecxz
adc
xor
sbb
ss
mov
xor
fmull
push
push
dec
int
out
push
in
sub
push
pop
insb
jb
mov
in
testb
js
mov
cltd
in
sub
je
and
leave
lods
cmpsb
test
jle
les
data16
or
pop
lret
inc
adc
sbb
sbb
es
cwtl
lock
xchg
push
imul
jp,pt
mov
orl
movsl
aas
jmp
mov
lods
mov
mov
add
out
add
iret
shrb
cs
into
outsl
xor
sub
mov
jbe
test
repz
inc
inc
fucom
daa
loop
cltd
push
cmp
js
xchg
adc
xchg
fbld
dec
xchg
stos
bound
ja
push
shll
sbb
cli
call
mov
pop
xorl
shrl
mov
ret
int3
decb
push
jp
clc
nop
in
ret
mov
dec
push
aam
sbb
cwtl
sbb
mov
push
or
pop
orl
adc
lea
jns
xor
sbb
arpl
pop
mov
out
aas
je
jo
pusha
mov
lds
xor
cmpsb
fistpll
aad
push
iret
dec
sub
jmp
xchg
sahf
pop
pusha
pop
push
bound
or
cmp
ja
imul
dec
imul
hlt
mov
sbb
notb
cmp
xlat
scas
adc
adc
xor
sbb
fmul
push
inc
inc
fwait
adc
mov
jge
mov
enter
pop
es
js
int
or
ret
lret
jae
sbb
out
inc
lret
cmp
scas
aas
fs
imul
pop
call
lcall
push
mov
push
ret
popf
xchg
pop
ror
or
and
jp
push
xchg
ret
ficoml
fsubp
mov
nop
fsubs
nop
or
ds
leave
jnp
aam
shlb
test
mov
lret
out
jp
pop
mov
inc
adc
sub
jnp
jmp
in
dec
imul
xchg
gs
ss
lods
ret
test
xchg
pushf
sahf
mov
bts
sub
js
jle
aaa
xor
mov
mov
mov
aad
pop
sub
cmp
test
sti
push
jno
mov
jmp
jge
dec
xchg
and
pop
insb
cmp
lcall
jg
dec
add
mov
lret
scas
dec
testb
movsl
xor
add
shr
jns
pusha
std
xorb
push
and
icebp
ficoml
add
imul
fdivrl
push
ficomps
pop
pop
pop
sbb
int
mov
sti
pop
addb
incb
sub
cmp
jg
cmp
cmpsl
pop
lahf
mov
and
sub
scas
out
sub
imul
movsl
push
mov
popf
jl,pn
mov
mov
xchg
test
repnz
xor
imul
test
jno
sahf
movsb
mov
pop
cmp
aad
dec
inc
in
jno
mov
and
fbld
or
roll
cmp
decl
dec
pop
mov
and
ret
mov
mov
aas
aad
jbe
dec
shrl
sbb
or
and
add
testb
pop
dec
icebp
sub
outsl
sub
jae
pop
andl
fadd
add
mov
aad
push
negb
adc
push
jmp
mov
jb
fcmovnb
jp
fcomip
sbb
aam
push
fdivp
adc
xchg
ret
enter
lret
or
cld
push
mov
jno
pop
sbb
arpl
jp
or
mov
testb
adc
adc
jns
lods
adc
sub
fcomps
xchg
sub
mov
mov
mov
push
in
addr16
out
add
sub
loopne
push
pop
out
cmpsl
mov
mov
icebp
imul
cmp
mov
push
arpl
and
mov
movsl
jno
dec
mov
push
cmpb
and
xlat
nop
cwtl
sub
sti
and
pop
fsubrs
cmp
sub
and
dec
loopne
xor
cwtl
out
ret
pop
lcall
mov
ret
jg
pop
pusha
inc
jp
lods
dec
in
pop
movsb
pop
push
or
outsb
push
test
lds
pop
stos
pusha
pop
sbb
test
outsl
inc
cmc
mov
pop
das
movsb
gs
cmp
push
lock
sbb
adc
loopne
lret
dec
jae
push
das
lret
das
lahf
mov
xor
sub
xchg
jo
pop
mov
push
lods
enter
adc
mov
outsb
mov
sub
push
xchg
add
push
call
push
in
mov
jmp
test
mov
push
daa
cltd
xchg
test
jbe
je
xchg
subb
sub
bound
cmc
or
cmp
xchg
or
out
shlb
fwait
repz
je
mov
mov
cmp
jne
cmp
add
xchg
in
movsb
call
addr16
jno
movsb
mov
xor
mov
push
shlb
fstpl
pushf
jecxz
jne
sti
xchg
push
jns
sbb
and
scas
leave
dec
lret
das
push
ret
push
mov
adc
dec
inc
sarl
mov
xchg
mov
xorb
cli
out
fildll
loop
push
xchg
jle
dec
ret
jle
pop
movsb
sahf
out
cmp
fistps
cmp
das
xchg
pop
nop
in
sub
pop
mov
adc
int3
mov
push
cmp
push
cli
fistpl
js
xchg
push
sub
mov
inc
jge
push
jnp
push
jo
mov
lahf
pop
ja
hlt
adc
aas
sub
clc
pushf
mov
xor
push
fsts
and
xchg
push
int3
enter
and
lret
addl
mov
push
sub
bound
test
dec
clc
cwtl
lea
mov
sbb
neg
pop
push
push
and
dec
mov
lret
mov
vminss
rol
sub
es
fs
ja
push
dec
aas
push
out
sub
cmp
mov
movsl
out
and
push
ret
dec
dec
bound
jge
dec
cmp
xchg
movb
sbb
sbb
andl
and
or
and
xlat
mov
stos
mov
push
mov
outsl
jae
cmp
in
push
add
arpl
jmp
aam
ret
mov
int
xchg
push
adc
jae
sbb
in
sti
push
xor
cmp
xor
cld
dec
mov
xchg
je
stc
xor
rclb
mov
ja
dec
mov
loop
mov
scas
sub
fs
push
sub
arpl
mov
adc
insb
sbb
xchg
mov
popl
rorb
enter
test
insb
dec
xchg
es
in
sbb
scas
loope
jle
cli
imul
pop
mov
sub
push
push
scas
mov
jp
pusha
xchg
js
mov
xchg
lods
dec
sbb
cmc
test
fcomp
sub
scas
lret
loop
xchg
push
and
mov
rcll
mov
rcrb
fsubrl
mov
andb
leave
jbe
xor
in
daa
ss
sarb
push
or
xchg
bound
loopne
sub
fcmovnbe
mov
and
add
mov
cmc
les
idiv
adc
inc
xchg
shlb
out
jmp
or
in
xchg
adc
sub
or
cmpsb
jne
fucomi
jmp
test
add
add
andl
rcr
fs
cli
and
push
add
fidivl
pop
and
stos
data16
mov
cmp
subl
ljmp
fxch
andl
add
and
imul
cmp
or
test
mov
fistl
pop
fwait
add
call
mov
imul
hlt
cmc
dec
xor
mov
jmp
dec
jo
mov
push
scas
lods
mov
bound
fldenv
jle
int
addr16
jns
ror
xchg
mov
jl
call
mov
push
mov
clc
ficompl
imulb
leave
adc
out
das
jo
jp
push
lret
xchg
in
mov
jbe
pop
add
cli
push
adc
mov
addr16
rcr
pop
loop
mov
outsb
dec
jno
dec
xor
mov
and
or
leave
cmp
rorl
mov
xor
int
test
add
pop
add
xor
xor
leave
mov
and
mov
or
add
pusha
cwtl
mov
inc
rolb
in
fsubrl
inc
sbb
mov
incl
xlat
shr
lods
pop
xor
xchg
std
insb
aaa
in
dec
mov
loop
mov
in
xor
ds
sbb
aaa
xchg
jnp
cs
into
add
mov
lcall
xorb
mov
addl
xor
arpl
sti
cmp
insb
incl
inc
xor
scas
cmp
arpl
and
popf
pop
push
mov
adc
xchg
mov
test
lds
inc
gs
push
xchg
jmp
jle
adc
mov
push
notl
jno
sti
insl
rcr
push
or
loop
jbe
push
loope
iret
adc
xchg
dec
and
into
cld
mov
jle
mov
emms
jle
clc
jbe
sbb
cmp
lds
xorl
mov
pusha
mov
mov
sub
out
jns
aaa
daa
sub
jbe
mov
scas
outsb
sub
xor
icebp
and
cltd
pop
xlat
js
fnstcw
outsb
adc
bound
movsl
and
adc
cmpsb
test
mov
sbbl
cmp
inc
sarl
into
mov
imul
sub
loop
or
imul
mov
cmp
dec
and
in
loop
mov
mov
out
andl
gs
fs
xor
not
jp
lods
je
mov
jb
lods
push
dec
addr16
ljmp
push
lock
outsb
push
test
xor
or
pop
xchg
mov
popa
inc
cmp
sub
cmp
xorb
je
cmp
dec
sti
mov
lahf
iret
mov
rcrl
mov
dec
dec
clc
dec
adc
xchg
sub
push
movsb
inc
add
pop
jne
lahf
in
jmp
mov
xchg
add
ret
pop
iret
pop
ret
pop
mov
fidivrs
mov
inc
pop
push
xor
pop
in
out
subl
jae
dec
int
xor
mov
add
or
cmp
or
cmpsl
add
or
dec
cltd
data16
dec
or
xchg
movl
out
out
sbb
insb
jo
mov
or
pushf
ja
test
mov
out
enter
xor
jbe
aas
sbb
iret
mov
push
call
sub
imul
push
add
or
xchg
gs
mov
mov
sub
test
add
or
xchg
sub
add
hlt
movsl
loop
jb
xchg
add
out
rorl
into
mov
mov
loop
cs
inc
mov
dec
xchg
into
mov
pop
mov
aam
add
outsl
add
inc
fs
inc
enter
das
jp
test
mov
mov
jp
hlt
jae
into
fmull
sub
in
xor
push
repz
xchg
cwtl
gs
xchg
cmp
and
mov
adc
arpl
loope
popf
sahf
out
adcl
jl
jae
loope
adc
js
push
loope
mov
push
and
cmp
movsb
gs
sub
stc
or
xchg
movsl
push
xor
cmp
dec
in
shl
jno
test
mov
jb
pushw
xchg
xor
repz
aam
pop
or
push
fisttpll
movsb
popl
xor
fwait
jbe
ja
xchg
mov
lret
scas
sbb
sbb
push
cmp
ret
mov
jmp
inc
add
mov
lahf
dec
push
fldenv
repz
cltd
inc
mov
and
sub
add
and
jns
es
push
fwait
sti
je
mov
mov
ror
cmp
mov
inc
test
dec
scas
xchg
xor
mov
testl
fisttpll
xor
ret
lahf
and
mov
cmp
movsb
dec
cmp
out
pop
arpl
call
pop
pop
xchg
adc
sti
sub
mov
sub
add
pop
dec
mov
push
nop
loopne
test
pop
dec
scas
sub
sub
mov
dec
in
pop
dec
in
daa
lds
jae
leave
ds
pushf
push
push
ss
xchg
xchg
mov
neg
pop
sbb
cmc
aam
call
inc
adc
jns
lods
nop
aad
lods
push
je
je
mov
in
clc
mov
mov
lods
or
sub
ja
xor
or
pop
xchg
ds
roll
inc
sub
pop
mov
push
fstpt
mov
vcmpneq_osss
pushf
testl
pop
imulb
dec
pop
push
jnp
xchg
pop
mov
out
push
test
fwait
jbe
pop
push
sbb
fsubl
xchg
lock
inc
add
test
je
popf
aam
test
fistl
xchg
gs
jmp
rorl
mov
orl
add
hlt
fcoml
xor
adc
test
fdivs
in
or
xrelease
lds
cmpsl
sub
shrb
mov
das
pop
int
hlt
or
push
rclb
dec
push
movsl
fadds
aas
fidivrl
mov
mov
roll
pop
jo
in
pop
or
cmp
mov
pop
jecxz,pt
stos
mov
pop
fcom
in
dec
bound
ja
sbb
dec
lds
dec
call
or
pause
in
mov
push
hlt
cmp
xchg
int3
fsub
outsl
adc
inc
imul
cmp
pop
xchg
mov
xchg
sub
aaa
rcl
lds
mov
outsb
es
imul
add
push
mov
pop
aaa
dec
rcrl
mov
notb
in
sub
adc
das
insb
mov
mov
fiadds
jecxz
adcl
sub
add
mov
xor
xor
push
or
stc
or
test
out
xor
pop
je
jecxz
inc
jmp
sti
inc
xchg
les
jle
mov
imul
mov
repz
cmp
inc
sub
jmp
ret
fsubr
or
aas
xor
pop
fimull
sbbl
push
mov
xor
jecxz
or
pop
lret
inc
pop
cmp
inc
cmp
ja
pop
sub
jo
scas
lcall
mov
add
pop
mov
test
mov
insb
cli
hlt
rcrb
sbbl
aam
and
or
add
xchg
jge
xchg
sbb
jecxz,pn
or
fwait
mov
loopne
mov
inc
roll
mov
adc
add
push
stos
aas
lcall
in
mov
pusha
test
std
pushf
call
xor
dec
add
test
jns
jnp
mov
repz
add
int
repnz
adc
pop
or
xchg
out
cmp
repnz
xchg
push
test
stos
xchg
mov
pushf
jecxz
decl
and
xchg
shl
push
and
test
sub
mov
leave
movsl
xchg
cli
pop
push
mov
int
adc
mov
mov
fwait
out
mov
fmuls
ja
aas
dec
das
jp
lret
mul
pop
dec
arpl
jo
push
aas
repnz
outsl
scas
stc
call
cmp
jns
add
lock
adc
enter
fwait
adc
movsl
cmpsb
xor
mov
push
pop
mov
sti
dec
cwtl
xor
jp
rolb
adc
faddp
ss
sub
mov
gs
inc
pop
aam
jbe
cmp
lds
inc
out
add
push
jge
push
dec
jne
push
shl
sbb
cmp
push
lock
fldt
ret
dec
mov
out
addr16
push
push
in
push
fs
fistpll
adc
shll
int
inc
mov
pop
mov
cwtl
cmc
aad
stc
loope
fists
testl
pmullw
mov
sbb
rcl
shll
scas
in
mov
or
xchg
loop
sbb
ss
pop
je
or
divb
sub
test
stc
cwtl
and
cmp
adc
mov
xor
sti
pop
hlt
clc
jnp
xor
mov
cmp
int
xor
call
inc
popf
dec
or
add
inc
pusha
ss
sub
push
xor
push
int
add
jle
lcall
outsl
xchg
pusha
and
sub
xor
add
test
jae
add
push
jecxz
cmc
in
sbb
add
push
lods
stos
lret
lret
lods
cmc
movl
xchg
inc
pusha
mov
fldcw
imul
inc
pop
out
fcomp
enter
ds
shlb
inc
lcall
out
push
in
sahf
cmc
xchg
aad
insb
xor
jae
pop
cmp
jns
loop
dec
sbb
rcrl
or
andb
sub
mov
sub
xchg
cltd
test
push
sub
cmp
xchg
push
add
pop
xchg
out
xchg
push
mov
xor
and
test
push
add
js
push
inc
mov
scas
or
dec
xor
cmp
fisttps
xchg
push
cmp
mov
push
popa
pop
orb
repz
pop
outsl
aaa
imul
cmp
fidivrs
gs
pop
scas
xchg
push
imul
jae
movsb
scas
fcompl
scas
leave
shrb
xchg
pop
push
cmc
test
sub
bnd
pop
icebp
rclb
stos
and
mov
fmul
inc
xchg
pusha
sti
or
jge
mov
pop
mov
mov
lock
mov
xchg
mov
sub
int
sbbb
cmc
mov
pop
in
inc
mov
mov
push
dec
mov
cmc
les
dec
repz
scas
push
icebp
out
and
inc
push
jno
arpl
adc
pop
pusha
xor
lret
scas
icebp
mov
xor
mov
mov
or
mov
lret
xor
xorb
xorl
mov
ljmp
sub
or
mov
test
addl
and
nop
ljmp
pushf
loop
adc
xchg
imul
fidivrl
cs
cmpsl
hlt
popa
pop
sbb
push
xor
filds
push
int3
outsl
jnp
dec
pop
dec
arpl
push
xor
sub
push
jp
xchg
rolb
stos
fidivrs
pop
sbb
js
cmp
in
push
cmpsl
mov
and
shll
push
cltd
rorl
ss
repnz
push
xchg
sbbl
xor
mov
mov
hlt
lretw
test
ret
hlt
pop
lcall
pop
inc
mov
lret
out
gs
movsb
outsl
and
packuswb
and
sub
mov
cmpsl
cmp
das
test
out
mov
in
and
daa
and
fdivrs
out
pop
cmp
and
mov
out
into
pop
shrl
ja
ror
add
ret
iret
push
xchg
clc
cmp
cmp
or
jp
jno
aaa
inc
cmpsl
xorb
sub
jnp
bound
sahf
lds
sbbb
cld
into
inc
mov
dec
cs
inc
push
mov
xor
loop
les
or
jmp
repnz
cmpsb
ds
mov
aam
and
inc
adcl
rcll
mov
mov
inc
nop
push
lds
xor
mov
das
ds
push
mov
or
lahf
or
ljmp
test
dec
scas
or
xchg
xchg
mov
and
or
mov
aad
push
into
xchg
mov
sarb
mov
lock
xorb
mov
mov
andb
loopne
lock
and
xor
shlb
add
adc
pusha
xorb
mov
mov
andb
loopne
lock
and
xor
shlb
add
jno
inc
mov
mov
andb
loopne
lock
add
xor
shlb
add
adc
pusha
xorb
and
mov
mov
nop
pop
xchg
mov
cmp
sub
popf
repnz
ret
jge
paddb
orb
mov
and
add
add
sarb
mov
lea
int3
push
mov
and
adc
add
sarb
mov
lea
inc
int3
aaa
fsubrs
je
jle
ja
jne
mov
insl
cmpsl
or
xchg
xchg
dec
xchg
sahf
sahf
mov
mov
jbe
pop
repnz
repnz
mov
push
das
out
or
clc
bound
hlt
lods
xor
and
jns
stos
add
and
add
call
insb
out
or
jb
arpl
push
inc
mov
outsb
lahf
mov
testl
lcall
lods
xchg
push
sub
testl
jle
sub
movsl
cmp
insl
ret
jge
in
call
inc
sahf
popa
mov
push
stos
sbb
lret
xchg
sub
jb
data16
xor
in
adc
std
push
repnz
ret
pop
mov
lea
bound
xor
and
adc
inc
jns
pop
fwait
inc
xchg
jae
push
cmc
cmp
sub
sbb
in
das
jnp
add
xor
pusha
mov
sahf
pop
mov
jne
sub
cmp
insl
lds
adc
xor
scas
mov
ja
push
jnp
xor
or
pop
mov
lea
bound
xor
and
adc
add
sarb
mov
lea
bound
xor
and
adc
add
mov
push
and
lds
jl
and
xchg
int3
push
mov
test
aas
fnsave
pop
arpl
add
jmp
popa
mov
xlat
ret
test
push
pop
pusha
adc
adc
jmp
bound
add
sahf
adc
push
imul
lret
jno
inc
and
and
xchg
xchg
mov
mov
jle
lds
and
arpl
sbb
addr16
inc
add
std
gs
cli
cld
test
popa
popf
xchg
pop
lret
dec
test
push
cmpsb
jo
xor
sbb
lods
or
cli
stos
loop
jo
cmpsb
push
fs
xchg
pop
ljmp
mov
dec
lahf
jge
lcall
rep
cmc
popl
xchg
jl
mov
out
sub
fstpt
das
push
js
rolb
sub
neg
cmp
add
out
dec
mov
jp
int
jno
and
jge
in
xchg
cmpsl
push
and
inc
xlat
adc
mov
pushf
pusha
test
sbb
push
cmp
mov
shlb
in
jbe
out
cmp
xlat
out
mov
push
sub
mov
test
rcll
in
and
in
mov
icebp
cli
push
divb
and
xchg
ljmp
cli
fidivs
movsl
aam
test
imul
inc
or
cmp
out
test
scas
lds
adc
xchg
cltd
lock
insl
xchg
les
outsb
cmp
mov
sbbb
scas
fwait
push
out
xchg
sbb
push
jnp
enter
pusha
enter
mov
out
mov
cli
push
jb
sti
cmp
std
inc
mov
aad
pop
xchg
sahf
push
lcall
pushf
lock
jle
jle
mov
lahf
cmpsl
outsb
and
jns
push
mov
addr16
insl
push
aam
inc
stos
jnp
aas
in
div
inc
push
lods
add
push
xchg
mov
fbld
fsubs
push
push
dec
ss
dec
jecxz
or
or
jecxz
and
xor
sub
into
enter
dec
std
setp
cwtl
fs
push
pop
mov
mov
and
cld
imul
cmpl
pop
xor
xchg
xor
out
rorl
dec
std
and
xor
clc
test
pusha
inc
sub
in
pop
add
test
or
repnz
pop
xor
dec
fwait
cmp
add
and
push
scas
push
aaa
fildll
scas
add
adc
cmpsl
sbb
shlb
xor
push
loopne
xor
fimull
xor
mov
sub
mov
push
jnp
into
repnz
cmp
sbb
int
ror
jmp
shr
pusha
sub
lock
and
out
cwtl
cmp
sarl
ljmp
adc
add
mov
popa
popf
inc
xor
ljmp
mov
movsb
push
xchg
pusha
inc
in
jo
imulb
test
test
or
lock
js
and
andb
fmul
imul
call
or
mov
push
into
fcoms
mov
stc
loop
sub
or
insb
lock
test
lret
mov
xor
xor
jnp
mov
jo
int3
mov
outsb
jmp
jmp
insb
mov
adc
mov
fwait
lahf
jp
xor
jnp
inc
add
cs
cmp
popf
lods
mov
mov
subl
xchg
out
adc
adc
popa
dec
mov
and
stos
dec
xor
lret
imul
and
movsb
mov
xchg
test
xchg
mov
mov
repz
add
jp
sub
adc
mov
jmp
ss
and
sti
jo
fsubl
arpl
mov
es
push
push
lret
lods
jl
cltd
fidivrs
dec
into
push
addr16
mov
jle
stos
outsl
mov
into
fcomps
cmp
inc
sbb
loopne
push
push
adc
inc
push
sub
lds
lock
pop
jecxz
pop
jae
cmpsb
ret
pop
mov
js
mov
xchg
cltd
cld
push
pop
lods
adc
rol
ret
ss
int3
mov
call
out
mov
pop
rep
ja
in
mov
ret
loop
sbb
or
fnsetpm(287
out
fdivrl
stc
fs
xchg
jg
and
clc
mov
sub
xchg
and
jne
mov
sub
scas
mov
xor
or
fucompp
pop
out
xchg
mov
mov
call
mov
repnz
sbb
mov
jl
incl
push
test
cmpsb
add
or
jns
lret
in
cmp
hlt
movzwl
and
fdivrs
xor
loopne
or
mov
popa
cwtl
mov
jle
xlat
mov
pop
push
mov
and
jle
mov
jbe
lahf
cmpsl
loopne
adc
inc
or
roll
push
in
je
fnstenv
out
inc
xor
loopne
sub
mov
mov
mov
pop
jp
cmp
dec
pop
or
adc
out
outsl
jp
mov
movsl
xchg
cmpsb
test
inc
sbb
outsb
aaa
dec
or
add
add
test
enter
std
mov
xchg
inc
fpatan
xchg
push
xchg
aas
sub
out
add
push
mov
xlat
mov
jb
push
fcomps
jmp
adc
xlat
mov
stos
arpl
outsl
rcrl
mov
ret
mov
sbb
dec
iret
cmp
push
scas
mov
inc
mov
xor
and
pushf
and
sbbb
popf
rolb
addr16
mov
push
xchg
pop
int
sbb
dec
pop
push
pop
test
and
imul
sub
mov
add
push
rol
lods
adcb
push
inc
lock
enter
das
fdivl
out
cli
ljmp
insb
xchg
inc
dec
aas
hlt
dec
cltd
stc
or
addr16
fcom
addr16
lahf
xchg
xchg
imul
nop
cmp
xorl
ja
pop
pop
out
test
mov
cmp
push
aaa
inc
loope
outsb
xchg
mov
lahf
jl
int3
in
mov
test
testl
push
sbb
test
or
jge
fisttpll
mov
or
cmp
movsl
xchg
out
jp
push
loope
movsl
outsl
push
aad
sub
and
push
es
jecxz
shll
in
cmp
lock
imul
orl
dec
movl
jmp
sub
in
and
ljmp
pop
xor
js
jnp
and
fsub
out
mov
stc
jge
adcl
pop
pushf
fldt
jbe
mov
sbb
mov
pop
push
clc
xor
sbbl
jg
dec
and
call
jnp
cld
hlt
popa
push
jecxz
test
sub
jno
push
push
adc
call
mov
aaa
xchg
mov
popa
fs
shl
cmpsb
or
mov
dec
cld
jne
rcl
push
mov
add
cmp
test
popa
xlat
push
into
imul
shl
out
jo
addr16
mov
jg
jp
shl
sub
jg
mov
xor
jmp
push
or
push
aad
mov
mov
cmpsl
pop
scas
rcr
sbb
fisubrs
sbb
mov
add
or
jmp
sub
cmc
inc
pushf
in
enter
add
push
ficomps
repnz
inc
mov
jle
sbb
arpl
push
int3
mov
mov
mov
and
sahf
sbb
ds
cld
ja
pop
aad
stos
mov
dec
loopne
jmp
add
loope
out
sbb
jmp
xor
pop
imul
addr16
mov
js
xchg
jle
and
out
pop
orl
enter
mov
mov
fucomp
ret
ja
pusha
test
daa
dec
ja
insb
repnz
loop
push
pop
icebp
ljmp
int
xchg
sub
out
cmp
inc
push
xor
ljmp
andl
scas
or
xlat
mov
xchg
pop
enter
insl
das
sbb
lahf
lea
mov
loope
cmc
aad
add
mov
hlt
xchg
gs
roll
rcrb
xchg
popf
cli
enter
xchg
inc
into
sbb
or
inc
imul
dec
testl
dec
and
fcom
add
rorb
jmp
inc
adc
lock
std
mov
inc
pusha
popa
out
sub
addl
invd
popf
pmulhw
leave
pop
mov
rol
or
pop
and
sbb
add
inc
xchg
icebp
and
arpl
fwait
inc
rcrb
in
and
mov
mov
pushf
push
out
jne
sub
add
xlat
xchg
inc
test
addr16
fidivrs
xchg
out
pusha
imul
xor
mov
les
or
fimull
dec
sahf
cmc
xchg
imul
aaa
iret
mov
stos
fwait
into
mov
xor
push
mov
and
ret
out
dec
mov
std
test
imul
idiv
sub
ret
sti
pushf
insb
sub
lods
sbb
clc
imul
insl
loop
mov
fs
sti
inc
jmp
sarl
jno
sbb
popf
gs
leave
lea
jne
ss
sub
lcall
sarl
iret
xchg
xor
out
insl
mov
and
add
push
or
push
dec
rcrb
mov
popa
pop
cmp
sbb
je
icebp
sub
add
mov
arpl
shl
js
in
sbb
sbb
fsubl
mov
pop
loope
sbbb
outsl
pop
add
popf
loop
sub
inc
jae
scas
lods
lock
js
addl
test
dec
cld
sub
jne
sub
addr16
leave
std
jl
iret
push
adc
mov
inc
popa
jle
rcl
lods
movsb
dec
mov
ljmp
dec
jnp
stos
inc
loopne
push
push
sub
ljmp
addb
dec
jg
rorb
jge
fidivrl
inc
mov
insb
mov
out
xchg
xchg
in
mov
cmp
fildll
mov
or
ljmp
gs
dec
jo
pop
cvtps2pd
scas
mov
push
mov
cwtl
pop
imul
cmp
pop
add
jnp
into
and
clc
gs
imul
cmpsl
xor
jle
or
mov
aam
push
shlb
test
jmp
adc
das
pop
fildl
push
stos
or
dec
cli
movsb
dec
jle
sahf
out
cmp
dec
out
sbbb
push
ret
negb
mov
negb
and
sub
lret
push
scas
jne
enter
pop
jo
mov
into
and
imul
pop
jl
jp
add
inc
jno
in
inc
es
xchg
dec
fsubs
clc
jecxz
cli
cmc
imul
xchg
lock
cli
inc
pop
je
jle
fldcw
mov
stc
xchg
cld
pop
mov
xor
dec
adc
xchg
cwtl
call
cld
jnp
push
in
gs
test
imul
out
push
ja
icebp
movsb
test
dec
inc
das
repnz
loopne
jns
jno
jns
cvtps2pi
aad
into
dec
sahf
cmpsb
adc
jne
mov
imul
pop
gs
cmc
dec
loopne
cs
lock
cmp
jmp
inc
sar
mov
jle
popa
test
mov
xchg
rclb
loope
je
out
push
out
adc
sbb
lahf
enter
nop
adc
sub
mov
sub
adcl
pusha
sbb
mov
outsl
dec
dec
js
jmp
aaa
push
xchg
xor
cmp
repz
mov
out
cmpb
sti
and
sti
pushf
xchg
xchg
jne
lods
pop
bound
xchg
pop
repnz
ret
cmp
fstl
ljmp
out
ja
pop
mov
jnp
push
pop
mov
pop
addl
cmp
sbb
cld
ret
loopne
hlt
movsl
mov
pop
pop
or
cmp
pop
repnz
imul
inc
jae
test
test
xchg
and
out
mov
xchg
jle
sbb
jmp
and
add
jns
dec
inc
xchg
mov
or
mov
xchg
in
inc
cltd
enter
fisubrl
xchg
sub
mov
add
or
inc
mov
sbb
mov
inc
add
jecxz
jge
sub
imul
shl
jo
cmpsl
ret
imul
cld
add
mov
jns
add
push
ljmp
add
jecxz
xor
mov
les
mov
js
aam
in
movsl
add
out
cwtl
out
jne
rcll
outsb
mov
ficomps
jp
jbe
dec
dec
pop
sbb
mov
js
negl
xchg
cmp
sbb
sbb
push
xchg
ljmp
fiaddl
fucomi
divb
les
mov
jle
cli
rcrb
inc
cmpsl
inc
cmp
sub
push
mov
xchg
data16
test
sub
dec
adc
mov
lcall
in
inc
pop
lahf
dec
call
dec
cmp
xor
inc
sbb
ds
mov
aad
xchg
pop
xchg
lods
rcll
pop
push
stos
in
sbb
push
sub
add
out
in
int3
dec
pop
je
mov
mov
pop
push
aaa
ja
out
mov
and
in
scas
into
shrb
pop
sub
fcom
jnp
enter
insb
cmpsb
stos
mov
sar
into
cmp
daa
xor
mov
jp
dec
xorb
popa
sbbb
jo
cli
pop
push
cld
loopne
pop
add
das
mov
jns
fwait
jbe
repz
sar
jmp
sbb
fisubrl
adc
mov
repz
cmp
dec
pop
jecxz
xchg
inc
rolb
rcll
push
cmp
mov
push
sahf
daa
lea
pushl
sahf
sub
call
les
ficompl
lea
sti
lea
lea
xchg
or
lret
repz
inc
out
dec
and
sub
stos
add
inc
aaa
repnz
mov
push
and
dec
sub
or
adc
out
sarl
xor
cmp
xor
out
jnp
and
test
jb
fwait
sbb
movsl
fmull
push
cmp
popf
bound
fmuls
movsb
push
std
ljmp
jo
ljmp
or
dec
jmp
mov
shr
mov
mov
jae
loop
cmpsb
hlt
mov
mov
mov
hlt
addb
pop
leave
clc
sbbl
dec
gs
and
fistl
xchg
or
scas
push
dec
cmp
fdivrl
cmp
push
sbb
repnz
mov
imul
inc
dec
lock
negl
mov
fnstenv
add
xor
add
xchg
xor
mov
or
or
jne
out
and
insb
jl
sub
movsb
out
xchg
dec
dec
orb
or
pushf
andl
sti
sar
leave
mov
sub
jno
mov
inc
and
sbb
cmp
daa
enter
jnp
cmp
xchg
sub
push
arpl
pop
int
rcr
ret
push
dec
mov
ret
pop
daa
out
push
or
in
sarb
shr
xchg
lods
sub
add
lahf
jp
dec
rolb
pop
daa
dec
push
dec
dec
cmpl
mov
add
fnstsw
lods
pusha
sbb
cmp
inc
mov
sub
in
cmp
shll
xor
jo
adc
ja
dec
jmp
xor
ljmp
sahf
ljmp
loop
xchg
mov
mov
and
inc
ss
pop
mov
sub
aas
jecxz
pop
fdivrs
lock
xor
ss
dec
mov
and
cmp
scas
xor
das
sub
pop
clc
add
mov
mov
jmp
jb
arpl
notb
ret
push
repz
pusha
push
inc
push
jg
and
les
jmp
push
adc
cmp
icebp
jp
pop
enter
mov
loop
mov
addr16
xchg
inc
mov
pop
arpl
daa
stc
dec
mov
inc
inc
xor
ret
in
and
mov
fcmovbe
insl
imul
enter
push
in
lahf
mov
sbb
lahf
gs
jg
cltd
xchg
iret
cmp
push
sbb
pop
sbb
adc
cmp
cmp
inc
in
aam
push
mov
outsb
xlat
stc
sbb
es
hlt
cmpsb
or
xchg
mov
nop
mov
push
jecxz
addr16
js
imul
cli
daa
push
data16
sbb
repnz
pop
push
adc
out
push
xor
or
xor
test
shl
jecxz
scas
xlat
mov
in
cmpsb
ja
inc
xor
mov
add
add
int3
mov
adc
jle
fisttpll
aad
lock
pusha
into
ja
mov
sub
addr16
jp
stos
jmp
lcall
stos
ja
daa
lods
push
in
aam
fsubl
push
inc
test
repnz
add
push
add
mov
insl
jnp
ds
call
das
jg
sub
xor
xor
or
out
scas
mov
xor
mov
test
mov
cmc
mov
lret
inc
aas
out
push
popf
mov
pop
insl
jo
pop
or
jnp
sbb
jo
ss
pop
xchg
and
out
push
mov
pop
xchg
outsl
xchg
pop
adc
jecxz
lahf
or
sbb
sbb
int3
sub
jl
ficoml
in
cmc
iret
sub
cmc
movsb
imul
adc
fldl
add
orl
fistpl
xchg
push
stos
or
aas
les
movsl
xchg
les
decb
add
int
push
mull
or
cmp
outsb
fisttpl
mov
mov
mov
push
dec
call
ljmp
or
add
das
sahf
test
inc
repnz
cltd
cmpsl
clc
subl
xacquire
lds
rcr
aas
aam
cmp
jmp
nop
imul
mov
mov
rorb
out
out
sti
jo
xlat
adcl
xchg
mov
push
pop
sti
and
push
stos
sub
iret
outsb
imul
insb
outsb
in
leave
cmp
fdivrs
xor
mov
popf
pop
jno
fimull
rcrb
mov
inc
push
scas
inc
enter
fwait
fwait
loopne
dec
inc
mov
inc
or
call
lock
std
rclb
rcll
dec
dec
mov
xor
jl
inc
cmp
enter
call
mov
orb
xchg
clc
mov
mov
lock
inc
jns
mov
scas
xchg
test
cmpsl
add
or
sbb
jmp
push
jmp
inc
fadd
and
cs
lds
popl
adc
adc
jmp
push
mov
pop
jle
bound
adc
inc
repz
jl
dec
mov
les
daa
sub
jns
mov
add
jg
fiaddl
fbstp
dec
xchg
clc
test
mov
fwait
sbb
ud0
mov
mov
add
jae
or
test
sub
pop
repnz
pop
push
in
push
stos
stc
scas
push
inc
mov
jmp
sub
inc
push
sub
pop
loopne
fbstp
mov
xchg
push
pop
iret
inc
add
dec
inc
nop
lahf
int3
mov
jp
nop
mov
lcall
lret
inc
jge
dec
xlat
mov
insl
inc
das
mov
movsl
sub
fnclex
dec
push
scas
cmpsb
jb
and
loopne
out
dec
mov
add
cwtl
ss
pop
sub
sub
inc
and
pop
and
add
outsl
and
jge
pushf
dec
xchg
xchg
loop
xor
ret
sbb
jae
lods
xor
xchg
inc
jp
test
mov
mov
or
and
stos
iret
cmpsb
sub
pop
jb
cmp
lcall
dec
es
push
fdivrs
mov
outsb
testl
pop
mov
mov
xchg
jae
std
sbb
popl
sub
adc
add
stos
add
inc
pushf
data16
sub
sub
dec
push
or
jae
jnp
sub
cmp
dec
mov
test
aam
pusha
aam
pusha
shll
xchg
jno
xchg
je
pusha
and
mov
xchg
popa
hlt
pop
movsl
dec
push
addr16
add
jmp
or
ljmp
idivl
mov
dec
clc
cmp
mov
ffree
test
nop
adc
sbb
mull
ja
mov
mov
sbb
test
out
sarb
ret
pop
mov
lea
bound
xor
and
adc
add
sarb
mov
lea
bound
xor
and
adc
add
sarb
mov
lea
bound
xor
and
adc
add
sbb
sub
cmp
mov
lea
enter
xor
adc
add
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
or
dec
mov
cmp
mov
test
add
or
add
pop
push
add
or
pop
push
add
add
add
add
add
jne
pop
add
stos
add
add
add
add
add
add
add
lods
add
loop
push
add
add
add
add
out
add
add
mov
push
add
push
out
add
add
add
add
add
push
add
add
add
add
add
je
push
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
loope
dec
add
add
or
stos
add
add
add
add
add
mov
in
roll
add
add
add
lods
add
add
sub
add
lcall
add
loop
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sub
add
add
cmp
xchg
add
add
pop
add
add
add
add
add
add
lods
add
sub
add
fiadds
fldl
dec
or
add
add
add
add
add
out
data16
add
add
add
add
add
roll
add
add
add
add
add
outsb
add
add
add
mov
add
add
xor
add
add
ret
add
add
fadds
loop
in
lods
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
sub
sub
mov
mov
aaa
add
jo
pop
add
xchg
add
inc
add
add
mov
jne
mov
add
add
add
push
add
add
mov
add
xchg
add
add
adc
inc
add
addl
js
add
sub
add
add
add
add
fldl
mov
jne
out
or
push
add
dec
add
add
out
mov
sub
add
add
add
push
add
add
add
loop
in
mov
add
add
mov
add
add
test
or
add
add
add
add
sub
add
add
jge
and
add
add
bound
add
pop
add
add
jne
xchg
add
add
add
add
add
add
ds
add
add
xchg
add
push
add
add
dec
add
add
add
or
add
add
popa
add
in
add
add
add
cs
add
add
add
add
add
add
add
add
mov
add
add
sbb
lods
add
inc
add
add
add
pop
add
imul
in
sbb
js
xchg
add
add
add
pop
mov
movsb
cmpsl
stos
jle
loope
in
cmc
cmp
testl
xchg
add
xchg
aam
inc
jns
adc
ds
cmp
push
jb,pt
fisttpll
pop
xor
in
loopne
imul
test
dec
push
dec
and
outsl
out
lret
sbb
mul
in
adc
subl
inc
pop
cmpsb
mov
push
or
push
sbb
ret
inc
ret
loope
aam
mov
push
push
arpl
sti
mov
out
jmp
pop
pop
dec
mov
lods
test
clc
jnp
movsb
mov
fcoml
fiaddl
cmp
test
and
mov
xor
je
cmp
mov
mov
jne
sub
jp
or
outsl
mov
sti
insl
stc
enter
jmp
addr16
xchg
pop
mov
into
sub
pop
scas
insl
xor
xor
dec
icebp
scas
inc
inc
fdivp
insl
add
rorb
aad
xchg
and
and
ret
push
imul
jl
xlat
cmp
pop
xchg
add
jg
dec
inc
les
add
pop
test
xchg
or
sbb
stos
mov
fs
inc
shl
sbb
pop
cmp
xor
or
cmp
mov
mov
cmp
dec
addb
and
mov
and
mov
sti
int
js
inc
shll
flds
mov
inc
adc
xlat
sti
iret
outsb
int3
popf
xchg
mov
pop
dec
sub
add
stos
mov
mov
pusha
pop
das
pusha
call
repz
xchg
bound
dec
pop
and
mov
loopne
dec
das
and
repnz
lock
fistps
adc
pop
xor
out
das
inc
gs
and
nop
mov
adc
sbb
xchg
sub
fistps
mov
out
dec
in
pop
add
test
jns
mov
lods
out
dec
cli
jmp
adc
fidivl
mov
sub
loop
and
rolb
fnsave
jl
cld
cmp
pop
dec
iret
out
cmp
js
scas
xor
inc
xor
mov
ret
cld
push
jae
pop
push
ljmp
jmp
out
out
stos
es
push
icebp
mov
pop
sbb
jno
js
aam
ja
out
jo
mov
popf
scas
mov
mov
add
mov
mov
cs
je
xor
xchg
mov
inc
cwtl
push
jae
xchg
mov
adc
push
lods
or
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
