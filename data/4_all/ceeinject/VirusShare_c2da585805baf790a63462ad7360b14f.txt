call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
rolb
scas
mov
out
mov
movb
aas
push
das
ss
inc
dec
mov
xchg
xchg
mov
iret
jmp
out
fmuls
movhps
cs
ss
push
outsl
jbe
and
push
cmp
ror
xchg
pop
push
arpl
jg
adc
or
adc
ret
sti
cmc
fcom
push
leave
mov
sti
gs
aaa
sub
or
xor
test
pop
cmp
xchg
es
shll
pop
aam
imul
stc
repnz
fimuls
in
loop
iret
out
lahf
iret
mov
sub
lods
pop
pop
lock
shlb
enter
stos
mov
notl
xor
es
jnp
sbbl
shlb
rclb
fldt
nop
or
push
jb
inc
pop
outsl
dec
and
dec
xlat
mov
and
sub
lods
sub
inc
das
xor
vphaddubq
push
mov
and
out
testl
cs
adc
mov
lods
or
mov
mov
jmp
push
fs
push
popf
mov
aas
jp
mov
in
xchg
stc
sti
lret
mov
mov
mov
inc
dec
outsw
orl
add
cmp
adc
pop
lahf
rolb
clc
aad
fidivl
pushf
lds
addr16
arpl
inc
push
sub
sub
add
add
iret
lret
lcall
negb
push
movhps
es
ss
inc
dec
push
jg
outsl
jbe
xchg
mov
iret
jmp
out
negb
push
movhps
es
ss
inc
dec
push
jg
outsl
jbe
xchg
pop
fcomi
pop
xchg
mov
mov
pop
dec
mov
mov
adc
fdivrl
pop
cmp
pop
imul
jns
enter
dec
addr16
dec
bound
cmpsb
sub
mov
mov
cs
fstl
add
push
and
jo
insb
ljmp
scas
fdivl
mov
fwait
je
dec
repnz
push
mov
outsb
sahf
push
push
sub
add
or
mov
inc
outsb
xchg
aam
dec
mov
inc
and
xchg
xchg
push
xor
lods
inc
lret
fcmovne
xchg
sahf
or
push
cmc
adc
in
cmpsl
jns
sbb
pop
loope
cmp
xchg
jno
sarl
int
dec
mov
add
adc
popf
xor
mov
adc
pushf
fnsave
pop
adc
xor
aam
push
add
xchg
cmp
and
xor
arpl
mov
ret
adc
ficomps
ret
loope
arpl
xchg
sbb
scas
add
outsb
lds
cmpsl
adc
ret
jl
add
repnz
sub
sahf
fisubl
pushf
mov
repz
jmp
sbb
and
test
xchg
rclb
or
mov
call
lea
mov
lret
mov
ss
cld
mov
push
push
adc
out
pusha
pushf
scas
ljmp
cmpsb
aaa
jmp
roll
inc
inc
arpl
inc
sbb
call
cmp
out
jg
xor
aas
iret
push
les
mov
jge
push
sarl
pop
jne
inc
and
pop
sub
sub
or
jo
test
mov
cmp
dec
pop
sub
or
aaa
push
adc
aad
jo
mov
pop
xor
fwait
int3
xor
add
lods
shlb
mov
sub
lock
test
adc
xchg
lea
push
fdivrl
jmp
mov
xor
gs
or
je
out
fistpll
jle
jl
push
mov
in
insl
cmp
or
push
in
sbb
xchg
dec
push
push
sub
push
lds
popf
xchg
popl
fnsetpm(287
ror
mov
adc
add
xor
cmp
xchg
sbb
jne
addl
dec
push
int3
ja
cltd
movsb
jbe
push
xorb
mov
mov
mov
nop
popa
add
clc
mov
fidivrl
dec
xchg
in
or
fwait
dec
or
push
arpl
cmp
clc
pop
es
mov
out
add
sub
cltd
rorl
pop
loop
dec
dec
adc
sub
or
shl
fcmovbe
imul
jno
pop
adc
clc
lret
test
sub
std
les
sub
into
jo
insl
cmp
add
gs
pop
mov
jno
cs
bound
test
mov
cli
out
xor
mov
lock
in
cli
pusha
test
aas
inc
cmp
fsub
iret
jo
or
adc
or
imul
shl
sbb
jns
loope
push
cmp
cmp
xchg
jle
loope
shrb
sub
dec
inc
arpl
push
xor
sahf
pcmpgtd
jge
loope
lret
cs
fnstsw
jno
xlat
add
data16
push
fcomi
mov
popf
inc
fs
cmp
arpl
adc
jne
xor
mov
or
inc
stos
bound
fs
mov
xchg
das
jl
adc
mov
lcall
test
sbb
sahf
loop
add
and
loop
arpl
lcall
je
ficoml
mov
mov
pusha
cmp
pop
arpl
inc
pop
ja
ret
dec
sbb
pusha
adc
bnd
push
pop
sub
inc
add
cmp
add
scas
pop
mov
sub
call
dec
jle
loopne
pusha
scas
jecxz
adc
jbe
stos
xchg
cli
cmp
xchg
xor
sub
or
push
fildl
dec
negb
lcall
clc
dec
mov
sahf
test
daa
sbb
jo
loop
lcall
lea
sub
xor
ljmp
sub
mov
lods
test
sbb
cmp
fcmovb
nop
fcomps
fstps
pop
fwait
mov
mov
lahf
jle
xor
repz
fimuls
lahf
mov
dec
ret
inc
xchg
lret
addr16
pop
inc
lret
insb
out
daa
les
inc
xor
std
xchg
lods
pushf
mov
dec
sahf
sar
sub
insb
pop
cmpsb
pop
cli
cmp
ja
adc
aas
mov
test
fisttpll
pushf
mov
or
je
mov
mov
popf
or
mov
push
mov
cmp
jg
cmp
and
mov
push
jg
outsb
push
insb
fs
pop
xor
push
dec
sbb
popf
sarl
mov
xor
pop
mov
mov
aaa
mov
add
adc
xchg
jle
jno
icebp
movsl
jnp
pusha
pop
mov
push
pop
inc
bnd
mov
jmp
push
jne
jno
fisubl
cmp
cmp
mov
push
xchg
imul
repz
paddusw
cmc
push
popa
int3
mov
add
leave
sub
or
rclb
nop
nop
and
dec
fsubrs
jmp
jl
jae
mov
fisubs
sub
aas
arpl
adc
add
outsl
addr16
fcom
xchg
inc
jno
adc
rcll
push
js
sahf
call
push
jl
into
dec
icebp
daa
in
fildl
sbb
loop
aad
cmp
push
out
xor
pop
hlt
ljmp
push
sub
iret
mov
mov
pusha
pop
add
pop
stc
pop
out
gs
aas
sbb
inc
ret
dec
sub
mov
inc
test
sarb
xorl
jns
gs
mov
add
pop
inc
mov
je
jecxz
dec
xlat
xchg
pop
sub
popf
rcl
xor
pop
and
shl
punpckldq
aam
ret
pushf
inc
enter
bound
je
popf
cwtl
jle
rcrb
xchg
push
repz
adc
sbb
sti
in
aas
call
xchg
arpl
xchg
pop
ret
fcompl
lahf
mov
loop
cltd
mov
push
mov
xchg
cmpb
scas
pusha
mov
cmp
mov
insb
out
sti
shr
gs
aaa
sti
sbb
in
sbb
lock
out
arpl
das
addr16
insb
mov
std
fsub
add
cmp
fdivr
pop
cld
cmc
daa
push
cmp
add
xor
popa
xchg
cmp
pop
sahf
notl
sbbb
xchg
add
push
mov
divl
sub
add
out
clc
pop
pusha
movsl
ret
out
mov
mov
pusha
xchg
inc
mov
dec
ss
push
scas
test
pushf
test
fidivrs
add
pop
fs
xor
leave
sbb
or
cmpsb
divb
fwait
jb
dec
fnstenv
jl
loopne
or
rcrl
rcl
xchg
or
pop
pop
sbb
popf
ret
shlb
jl
pop
mov
test
aaa
mov
pushf
movsl
ds
nop
or
dec
xor
xchg
lods
add
sti
push
lret
ret
fcompl
sti
je
xchg
mov
lret
movsb
scas
xchg
mov
sbbb
sahf
daa
xor
xchg
bnd
cs
xor
loopne
jns
inc
sbb
nop
frstor
xor
test
mov
scas
arpl
cmp
or
jecxz
popa
adc
xor
adc
adc
jle
movsl
dec
insl
adc
int3
adc
inc
ja
inc
adc
in
jge
mov
mov
adc
xchg
xchg
cmp
stos
ret
sub
push
xchg
cltd
xor
mov
std
xchg
and
inc
popf
stos
sbb
add
aas
dec
dec
dec
pusha
and
sahf
loopne
push
push
stos
ret
scas
into
fldt
and
pushf
cmc
fwait
mov
adc
lret
inc
dec
sbb
lret
scas
jp
int
mov
jmp
add
cmpsl
loope
adcl
dec
inc
push
mov
unpcklps
xchg
das
aaa
sbb
arpl
pop
frstor
aas
mov
mov
pop
shll
clc
and
add
adcl
push
pop
mov
mov
and
jmp
dec
sti
je
xor
out
iret
repz
out
dec
pop
out
inc
pop
insl
in
iret
xchg
decl
inc
gs
insl
cld
movsb
xchg
or
pop
push
pop
mov
ljmp
jecxz
push
fwait
push
and
cmc
fildl
jmp
mov
jge
adc
cld
cmpsl
mov
shlb
mov
pop
ss
sbb
repnz
pop
adc
mov
jne
out
shrl
scas
jg
dec
popf
adc
mov
fsubrl
cmp
repz
sti
icebp
inc
cmp
shlb
pusha
mov
cmp
imul
lcall
sbbb
or
mov
ss
jl
shll
and
cmp
add
and
add
jno
fsubrs
sbb
es
ja
aas
movsb
insl
or
imul
cmp
aas
mov
movsl
push
orl
in
loope
xchg
out
mov
stos
pushf
and
scas
jno
shll
xorl
popa
mov
outsb
scas
cmp
adc
dec
stc
dec
adc
fwait
repz
movsb
mov
sub
pop
out
enter
add
xchg
mov
cmp
jp
hlt
ljmp
mov
sub
out
iret
fs
pop
mov
fiadds
and
fdivr
iret
mov
sub
test
or
pop
push
insl
xorb
out
js
inc
and
jp
cmpsb
mov
jge
push
xchg
dec
sarl
dec
jle
adc
ja
pop
mov
aaa
std
scas
inc
pop
mov
xchg
into
cli
cltd
add
or
mov
xchg
sbb
lock
cmpsb
mov
mov
ljmp
push
mov
cmp
jge
or
jne
mov
nop
sbb
daa
mov
xchg
rcl
and
xchg
stos
cmp
outsl
pop
cwtl
and
fidivrl
sub
sti
test
test
shl
mov
cmp
push
mov
lret
xchg
xchg
lret
pop
sbb
stos
stc
lcall
mov
pop
cmp
pushf
mov
iret
push
jle
fstp
and
mov
stos
into
jge
adc
cmp
fmulp
mov
test
sti
pop
mov
push
jp
aad
and
xor
mov
int
or
xor
fwait
pop
sti
jo
push
aas
adc
mov
scas
or
push
add
sbb
inc
add
hlt
test
fucomp
orb
outsl
add
imul
add
jne
pop
mov
test
and
aaa
sbb
fsub
adc
iret
dec
in
jg
jp
cltd
push
inc
sarl
daa
jns
pop
jbe
in
and
mov
jmp
cwtl
mov
push
mov
mov
mov
test
mov
cmp
inc
jge
adc
mov
dec
repz
icebp
mov
enter
mov
pop
push
mov
cmp
arpl
push
lds
loope
insb
bound
outsb
push
push
xchg
xor
mov
mov
addr16
sbb
push
in
mov
pop
ljmp
test
xchg
inc
dec
gs
xor
js
leave
add
dec
repz
and
add
out
cmp
and
stos
xor
sbb
mov
add
xchg
adc
push
xchg
add
jcxz
loopne
fld
cmp
push
dec
ret
add
inc
cmc
xchg
mov
pop
cmpsb
mov
lods
fs
xchg
mov
push
mov
mov
int
ret
xchg
lods
jne
mov
or
jnp
lods
out
push
push
jge
or
sub
sti
jns
jmp
sub
lcall
xor
push
aaa
mov
inc
test
int
je
sbb
push
push
lock
lret
movsb
ffreep
ds
sbb
sbb
cmp
cwtl
outsb
push
js
dec
cmp
push
and
push
mov
out
rcrb
xor
scas
outsb
cmp
pop
sbb
jo
into
jp
stos
jecxz,pn
sub
mov
sub
pop
scas
xor
mov
dec
cmpsb
ret
pop
mov
mov
xor
push
call
or
stc
je
lock
daa
pop
sub
xchg
stos
repnz
ret
arpl
mov
popa
scas
shrl
cmpsl
cmp
hlt
pop
push
and
sub
outsb
in
les
mov
push
mov
les
das
test
int3
mov
push
mov
mov
std
in
xorl
cmp
cmp
mov
movsb
scas
into
inc
scas
xor
jl
nop
push
mov
xchg
push
pop
add
push
mov
outsb
sub
out
inc
mov
inc
loope
repz
ror
xor
lea
xchg
inc
in
leave
int
mov
push
jbe
cwtl
mov
mov
add
sahf
push
xor
mov
scas
fistl
test
inc
jno
mov
mov
cmpsb
nop
test
push
cli
repnz
fs
push
arpl
loop
or
loop
jbe
shrb
xchg
les
adc
sub
pop
adc
sub
sti
jo
or
and
add
sbb
add
call
inc
pop
mov
pop
inc
fisttpl
jmp
daa
adc
iret
push
divb
push
cs
mov
call
scas
push
cld
ret
pop
invd
dec
insb
arpl
and
inc
sti
ror
mov
daa
and
arpl
daa
imul
outsb
addr16
shrl
push
mov
cmp
shl
ffree
clc
and
movsb
fldenv
mov
sub
jl
mov
jae
jp
and
fcmovne
ja
add
dec
mov
push
cmpsb
sub
cwtl
mov
add
add
pop
push
mov
push
sbb
dec
popa
popa
repz
mov
cld
das
sarl
cmc
arpl
mov
jns
jae
pop
lea
test
and
xchg
mov
mov
mov
push
mov
pop
jmp
xor
movb
push
lcall
cmpsl
test
fsubp
es
movsb
movsl
inc
mov
lods
pop
dec
jns
rol
xchg
mov
pop
test
nop
inc
test
push
add
xor
push
iret
and
cmpsb
xchg
jge
cs
insl
xchg
into
out
dec
loop
pop
ror
data16
mov
int3
xchg
xlat
dec
sbb
std
xchg
std
or
mov
cmp
lahf
pop
jnp
sub
xchg
and
mov
mov
mov
lea
push
jge
pop
imul
lahf
popa
mov
lret
and
leave
cli
test
mov
xchg
push
sahf
cmc
lods
imul
xchg
pop
in
enter
pop
push
stos
test
popf
and
jle
dec
sbb
adc
jnp
cmp
mov
ficomps
nop
adc
aam
js
sbb
in
in
sti
movsl
cmp
arpl
adc
rolb
jae
sarb
pop
repz
test
icebp
test
sbb
xorl
popf
cmpsl
push
dec
mov
sub
push
insl
imul
scas
or
push
call
adcl
outsb
stos
ret
hlt
daa
stos
jbe
dec
mov
les
adcl
jmp
pop
xor
ret
pop
icebp
cltd
cmp
sbb
std
adc
movsl
rol
push
mov
pop
inc
cmp
gs
sub
test
rcrb
ret
adc
mov
daa
mov
xchg
test
aad
mov
mov
movsl
ficoms
cmpsl
inc
aad
iret
aaa
inc
jne
jl
mov
dec
subb
and
or
lcall
outsl
jno
outsb
adc
out
or
jge
idiv
xchg
fildll
dec
lahf
out
outsl
notl
stc
lret
mov
push
loope
xor
adcl
cmpsb
sbb
leave
dec
cmp
and
jg
pop
cmp
outsl
xor
je
loope
pop
inc
dec
xor
daa
xchg
pop
sbb
mov
xchg
pusha
cmp
pop
jne
ljmp
jmp
scas
outsb
sub
and
jle
decb
stos
movsl
ljmp
ret
pop
enter
lods
pop
sbb
cmc
in
pop
and
adc
push
or
fs
jne
sahf
aas
push
add
movsb
inc
or
add
mov
lcall
xor
mov
sets
test
xor
lods
fimuls
jp
ljmp
xchg
dec
in
push
xchg
pop
cld
push
xorl
mov
mov
or
lock
mov
add
lds
enter
mov
out
sbb
loope
in
xchg
shll
xor
adc
call
mov
jo
fbstp
lret
mov
sbb
cmp
fstl
enter
jmp
in
cmp
imul
fstl
hlt
mov
xor
cmp
lock
inc
cmp
insl
jnp
lret
pushf
add
fidivrl
inc
pop
cmc
loopne
aas
out
adc
sub
fisubrl
mov
jo
inc
jne
jo
push
pop
in
into
sbb
jp
lea
adc
les
ljmp
or
enter
inc
test
dec
inc
adc
dec
adc
push
push
movsl
rcll
sbb
lock
mov
mov
jmp
jmp
and
out
imul
nop
sub
mov
and
mov
out
and
jecxz
mov
imul
jl
inc
xor
cmpsl
inc
dec
mov
sbb
push
dec
movsl
pusha
test
ror
jno
sub
jp
inc
in
sbb
cli
jmp
cli
mov
lahf
not
iret
jecxz
scas
daa
adc
push
and
push
mov
mov
dec
divb
movsb
push
mov
test
data16
mov
cmp
push
mov
jmp
push
mov
data16
aad
sub
adc
jo
mov
out
aas
js
in
and
push
cltd
dec
loop
jo
movsl
and
xor
adc
and
pop
dec
flds
xchg
imulb
lock
or
and
xor
pop
dec
into
loope
mov
xor
cltd
icebp
adc
and
cmp
sti
sbb
call
fbld
dec
cmp
sti
in
lcall
sbb
das
iret
gs
adc
aaa
xchg
push
mov
push
cmpsb
mov
mov
pop
xor
mov
sar
dec
jnp
pop
divl
subl
add
mov
push
push
mov
sbb
add
int3
ret
aaa
xchg
sahf
adc
pop
mov
js
push
nop
and
enter
sub
sbb
push
fprem1
aam
call
je
outsl
gs
fcmove
test
pop
ret
mov
idiv
roll
or
and
lock
xchg
push
add
stos
jg
fcompl
jg
sbb
loop
mov
std
cmp
fidivrl
outsb
gs
add
dec
mov
pop
add
dec
negl
adc
sub
push
aad
cmp
lods
push
dec
call
test
repz
imul
adc
mov
sahf
mov
int
push
jns
cmc
test
sbb
js
in
cmpsl
out
lret
into
ffreep
negl
mov
imul
stos
sbb
call
add
outsb
aad
jge
rcrl
jne
inc
scas
int
sahf
fcoms
fnstcw
fisubs
cld
outsl
call
movsb
out
mov
je
sarl
sbb
xor
jmp
xchg
dec
mov
in
mov
divb
lret
outsb
mov
push
arpl
xor
movsb
add
sbb
fwait
in
mov
imul
lcall
rcl
shlb
add
das
and
fidivl
es
cwtl
xor
test
hlt
es
cld
cs
insl
je
ja
cmpsb
aam
pop
jg
jp
lea
pop
jg
add
push
xchg
or
push
shrl
ja
push
test
cmp
push
mov
lret
mov
add
es
aas
xchg
lret
out
sbb
and
stos
mov
movsb
push
sti
leave
add
fsubl
lds
pushf
jecxz
mov
sub
adc
jmp
arpl
inc
out
adc
push
fmul
fbstp
test
insb
ljmp
dec
scas
inc
ss
lds
xchg
je
imul
jbe
or
mov
clc
cmp
popf
scas
jbe
iret
dec
pop
scas
jno
lahf
xchg
loopne
mov
ffreep
iret
jmp
out
negb
push
movhps
es
ss
inc
dec
push
jg
outsl
jbe
xchg
mov
iret
jmp
out
negb
push
movhps
es
ss
inc
dec
push
jg
outsl
jbe
orb
lret
mov
sbb
movlps
sub
pop
inc
push
push
jnp
pop
xchg
xchg
jb
inc
xchg
ffreep
jmp
ss
stc
lock
sub
sbbb
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
push
push
ret
jmp
push
push
add
repz
jecxz
rcl
ret
movsb
mov
mov
fs
arpl
inc
and
xor
add
adc
in
hlt
ret
rcl
ret
fdivl
fs
arpl
inc
and
xor
add
adc
in
xlat
subb
fcmovne
icebp
out
cmpl
adc
in
add
test
paddsb
test
cmp
adc
cs
nop
pushl
or
push
jmp
mov
mov
mov
rcll
jl
inc
dec
and
pusha
inc
sbb
jle
les
dec
hlt
xchg
leave
mov
fs
jae
inc
push
sti
add
and
call
jno
cmp
mov
pop
pop
jnp
rcrb
add
xchg
push
add
mov
ret
mul
dec
mov
cltd
mov
fiadds
je
mov
mov
add
cmp
fcomi
mov
pop
rcll
xchg
inc
xlat
push
dec
and
xor
add
adc
in
hlt
and
movsb
lahf
mov
test
add
adc
dec
pusha
jp
data16
xchg
cmpsb
les
mov
out
shl
add
adc
and
cmp
pop
jno
jl
inc
outsl
adcl
call
and
cmp
push
adc
in
hlt
jecxz
rcl
ret
movsb
mov
mov
fs
arpl
inc
and
xor
add
adc
in
hlt
jecxz
rcl
ret
movsb
mov
mov
fs
mov
lock
fisubrl
jecxz
xchg
xor
mov
mov
imul
pop
lahf
out
xchg
js
iret
mov
adc
cwtl
sub
push
mov
or
pushf
push
mov
shl
xchg
imul
xchg
ret
inc
sub
aaa
push
push
xchg
mov
xchg
mov
sub
daa
add
jg
push
dec
push
sbb
sbb
inc
sbb
sbb
push
aas
mov
dec
stos
adc
outsl
cwtl
mov
lcall
or
fbld
jp
mov
fs
pop
xor
in
stos
mul
sbb
ja
lahf
js
stos
inc
lods
jg
outsb
adc
dec
loopne
jle
cmpsb
pusha
int
dec
sub
dec
subl
and
ret
pop
mov
inc
lahf
cmpsl
jne
cld
das
mov
shr
adc
fbld
mov
sbb
pop
sub
ljmp
lock
cs
stos
inc
imul
jp
loop
cli
push
movsl
cld
mov
mov
cmp
rcll
daa
jb
fs
mov
je
out
and
imul
cmp
clc
mov
andb
and
add
mov
call
mov
jnp
add
and
or
ljmp
mov
cwtl
pop
adcb
mov
cmc
subb
stc
stc
pop
iret
add
mov
filds
popa
mov
mov
jl
sar
push
pop
mov
xor
shll
jge
std
cmp
mov
sub
xchg
dec
in
pop
xchg
xor
mov
xor
xchg
stos
dec
mov
pop
push
and
and
push
test
push
repnz
add
pop
dec
test
dec
jb
std
jne
cmp
cmc
xlat
cmp
jg
mov
repz
add
int
inc
bound
mov
sub
mov
movsb
shlb
popf
pop
or
scas
stos
and
inc
mov
pop
and
adc
mov
inc
mov
push
insl
popl
scas
sub
bound
dec
ret
xchg
push
dec
lds
xor
das
xchg
sbb
inc
lcall
inc
dec
lds
enter
push
pop
popf
cwtl
dec
dec
adc
pop
inc
subb
adc
cmpsl
aam
out
xchg
push
or
jnp
pop
je
loop
outsb
mov
and
cld
mov
imul
push
pop
sub
jp
lock
mov
fildll
lahf
rcrl
test
push
push
cmp
aas
jp
imul
dec
sub
jbe
and
cmpb
pop
jmp
pop
hlt
fsub
mov
cmp
mov
cltd
sbb
jbe
in
pop
daa
lods
xchg
and
fs
cwtl
xorl
in
jle
jo
out
push
not
pop
sub
enter
rolb
and
inc
dec
js
call
imul
jo
jecxz
iret
sarb
jle
inc
lods
xchg
pusha
push
inc
js
lcall
xor
les
and
repz
ret
xchg
mov
jge
filds
fbld
add
cwtl
sub
hlt
push
jbe
hlt
dec
stos
push
popa
push
fs
sbb
out
jb
mov
xchg
repz
mov
push
cli
test
mov
sti
aas
xchg
mov
pushf
inc
and
jmp
movsl
aas
jg
scas
adcb
xchg
out
push
cmp
pop
sbb
sbb
lret
adc
push
adc
push
dec
addl
inc
xor
mov
pop
imul
pusha
mov
aaa
or
mov
inc
in
rclb
jp
vpaddb
push
cmpsl
adc
daa
aam
cmp
test
and
lods
mov
lods
sub
xchg
repnz
test
mov
adcl
call
sbb
pop
mov
aam
rcrl
bound
aad
inc
lods
mov
lods
out
cmp
mov
jo
aaa
cwtl
lret
mov
dec
xchg
decb
xchg
es
inc
cmovnp
sbb
xchg
sub
enter
fs
ljmp
out
or
adc
movsl
jbe
mov
adc
sub
pushf
leave
gs
cld
xchg
and
inc
pusha
jmp
rorl
mov
push
bound
sti
roll
mov
add
mov
inc
jb
add
notb
test
inc
scas
jne
into
inc
clc
mov
lahf
mov
loop
out
jnp
leave
ljmp
fimull
push
es
add
pop
sbb
call
mov
pop
xchg
sbb
ss
pop
stc
fidivrl
fsubl
jg
loope
loop
std
ret
pmulhuw
mov
popf
jbe
fistl
add
mov
les
hlt
push
fcmovbe
ret
adc
xor
sbb
add
sarb
nop
movsb
inc
dec
shl
repz
loope
sbb
adc
out
sub
pop
data16
inc
cmpsl
lods
pushf
push
popf
adc
or
divb
sarb
into
cmp
dec
inc
xorb
or
sub
roll
cmp
add
aam
sub
cmp
pop
mov
in
pop
mov
not
sub
cmp
push
cmpsb
dec
jnp
aad
pop
add
out
jmp
addb
rclb
sub
pop
imul
test
movsb
push
lods
lock
lock
push
fildl
mov
add
sbb
adcb
and
int
dec
dec
sbb
xor
inc
jp
movsl
addr16
and
mov
pop
push
mov
jmp
hlt
mov
fisttps
and
test
mov
mov
dec
jo
mov
movsl
mov
lds
push
leave
cmp
xor
leave
or
jmp
sbb
ds
loopne
fsubrs
mov
and
inc
jg
adc
xchg
into
rcrl
out
fucomi
and
insb
pop
shlb
fwait
fs
sub
popf
fbld
lods
arpl
push
cmpsb
mov
arpl
add
add
cmp
inc
xor
stos
xor
fistl
mov
test
notl
mov
fucomp
mov
ret
ds
aam
adc
xchg
xchg
adc
mov
loopne
cmp
xchg
cmp
divb
push
rorl
out
shrb
xor
cmp
push
outsl
pop
in
xor
sbb
jns
stos
insl
dec
je
sahf
loope
out
test
sbb
lods
jne
clc
cmp
pop
mov
fs
and
out
movsl
aaa
push
dec
aas
pop
cmp
aad
in
ret
push
inc
mov
test
shlb
pop
xchg
insb
rolb
sub
idivl
sub
mov
loop
pop
gs
xor
shll
xchg
out
clc
cld
das
cmp
pop
add
sbb
scas
gs
adc
sub
cmp
rorl
mov
xchg
dec
in
jmp
mov
inc
lret
jge
mov
lret
cmpl
xor
in
insl
sahf
cmp
mov
scas
loop
clc
aad
mov
sub
in
jno
pop
sbb
in
add
das
aad
or
push
shll
jg
xor
or
scas
push
add
test
les
out
and
add
xchg
daa
testl
pop
lahf
push
out
adc
in
mov
jae
dec
sub
ret
lret
loopne
xor
push
mov
out
xchg
repnz
cmp
xor
and
mov
idiv
mov
xor
fucomip
movsb
pop
inc
mov
sub
or
insl
add
xlat
rcrb
pop
addb
mov
sbb
pusha
jecxz
fiadds
daa
inc
add
cmc
popa
pop
lahf
fsubrp
jbe
pusha
jne
dec
mov
sub
je
arpl
pushf
jl
push
push
adc
mov
and
jae
mov
mov
xor
inc
insb
inc
mov
jmp
into
inc
loopne
das
daa
stos
mov
push
loopne
mov
xchg
cmp
sti
push
shll
mov
xchg
stc
jle
push
das
mov
stos
sbb
cwtl
lods
jo
loop
push
call
movsl
pop
subl
sub
aaa
loopne
ret
mov
out
stc
lds
push
insb
pop
int3
push
jo
adc
js
xor
pushf
jmp
push
mov
and
rol
cmpsl
je
shrl
in
enter
push
ljmp
decb
cmpb
xor
sub
adc
fwait
add
jns
pusha
cltd
cmp
adc
mov
popa
inc
mov
mov
into
and
pop
jbe
lea
jecxz
iret
mov
inc
and
pop
push
push
fdivr
imul
ljmp
aaa
test
lock
xor
or
ret
rol
imul
adc
or
pop
test
dec
push
mov
icebp
mov
xchg
test
push
jmp
push
xor
sbb
in
sbb
dec
gs
sbb
lods
lock
stc
and
mov
sahf
lods
xchg
fnstcw
push
xor
cmc
adc
loop
sahf
pop
int
lahf
mov
inc
push
pop
sti
cmp
test
filds
insl
lds
das
jnp
imul
dec
insb
jo
sbb
mov
stc
push
test
sti
das
sbb
test
jns,pn
in
lret
add
es
call
into
das
ja
dec
movsb
and
mov
sub
dec
out
cmp
movsl
sub
fcos
mov
sbb
mov
push
in
jg
dec
imul
hlt
jp
jmp
jmp
mov
dec
sub
daa
lret
dec
aad
add
fstp
jo
inc
loope
shrl
cmpsl
inc
aas
ljmp
inc
popa
cmc
mulb
inc
std
dec
enter
xlat
lock
pushf
or
pop
mov
mov
repnz
push
mov
in
in
push
add
pop
mov
popa
imul
jnp
jge
jle
jg
jl
xor
or
fdivs
mov
popf
push
aam
sbb
dec
mov
mov
sti
inc
inc
negb
dec
add
fisttpl
or
call
pop
push
and
incl
xor
mov
imull
xchg
mov
pop
mov
mov
test
test
sbb
push
jbe
and
dec
cld
cmp
or
loope
mov
cmc
add
inc
pop
fildll
push
outsb
add
or
addr16
mov
cmp
sub
cmpsl
into
mov
pop
popf
fs
mov
cmp
fdivrl
daa
sub
scas
lcall
sbb
in
jnp
call
inc
push
xchg
adc
mov
mov
aas
rcr
inc
mov
xchg
or
scas
xchg
pop
sti
stos
push
stos
cmp
decb
cwtl
sbb
mov
divb
rcr
and
cli
lock
stos
jecxz
inc
pop
and
testb
lahf
imul
xor
adc
pop
mov
pop
js
sub
sar
xor
loopne
mov
into
inc
sbbb
xorl
aad
adc
addr16
lods
ret
test
adc
pushf
lock
out
mov
lods
jg
sbb
idivb
jp
cmp
inc
push
shr
cli
cltd
cli
sub
mov
loopne
xor
shll
push
test
jns
inc
cs
mov
mov
leave
outsl
and
cmp
insb
mov
insl
push
cmp
dec
xor
and
xor
out
in
push
add
add
pop
daa
out
sub
pusha
add
mov
aaa
jae
or
jecxz
cmpl
loopne
xchg
mov
pop
mov
mov
imul
mov
int3
add
sbb
orl
scas
scas
andl
cwtl
mov
pop
cmp
inc
mov
and
dec
test
shlb
or
mul
jae
and
sub
pop
sbb
jbe
lock
xor
lea
mov
cmpsl
mov
enter
pop
xor
push
fldl
xor
mov
call
dec
add
xor
xchg
sarb
jge
sub
xor
add
loop
test
fistpl
aad
scas
testl
cmp
jmp
mov
xchg
and
ljmp
xchg
xchg
insl
sti
sbb
mov
lods
imul
and
lret
repnz
and
and
push
jb
sub
lret
mov
rcrl
int3
and
xor
stos
lods
jno
lcall
leave
mov
dec
das
dec
shll
mov
mov
inc
je
sbb
inc
adc
cmp
xchg
lods
adc
data16
jmp
test
inc
popa
pop
loopne
insl
cmpsb
mov
nop
aas
adc
pop
jnp
adc
dec
or
leave
test
xchg
and
arpl
movsb
cld
jle
pop
add
fisttps
xor
daa
movl
push
loop
cmp
hlt
int
or
test
pop
jbe
cli
out
data16
mov
mov
sbb
pop
jg
mul
fs
mulb
mov
pop
mov
or
pop
dec
dec
jecxz
mov
pusha
mov
cmc
das
dec
sbb
or
xchg
cli
jb
ljmp
lahf
push
into
sub
dec
int
cmpsb
stos
fucom
jnp
jmp
dec
xadd
inc
out
cmp
out
inc
in
gs
jae
cmp
push
mov
dec
ret
mov
notb
pop
xchg
loop
lods
mov
mov
push
xor
or
pusha
in
in
mov
or
cwtl
hlt
jmp
int3
and
shlb
adc
pop
fs
jmp
xor
jno
sbb
test
pop
add
mov
imul
pop
pushf
adc
fs
push
test
div
popf
and
add
loope
out
mov
repz
loope
or
or
xchg
xchg
mov
into
fs
enter
xor
and
mov
push
int3
test
inc
sub
cwtl
imulb
aas
jae
push
cmc
hlt
mov
pushf
cs
or
imulb
outsb
cmp
dec
in
imul
rorb
scas
push
xchg
push
mov
adc
mov
dec
sbb
pop
lret
fmul
sbb
xlat
cli
rcl
mov
addr16
xor
out
pusha
js
inc
add
mov
imul
fildl
test
hlt
shr
in
pop
add
lea
adc
pop
mov
inc
inc
orl
pop
int3
leave
gs
ja
push
inc
mov
pushf
push
lret
mov
jg
or
push
popf
and
sbb
adc
scas
jmp
pop
shlb
insl
in
xchg
and
out
dec
or
cmp
sub
sbb
push
out
jae
push
aas
les
mov
and
xchg
daa
push
enter
enter
jae
fcom
cli
jno
ror
imul
stos
popf
lock
mov
cwtl
ds
dec
ljmp
lcall
into
aaa
mov
cmp
mov
xor
add
lea
sbb
outsl
jge
mov
std
repnz
mov
mov
lcall
sbb
fcoml
ret
sahf
push
xchg
fisubs
lods
sbb
icebp
les
ror
xchg
rcll
mov
cmpsb
adc
fcompl
test
mov
fwait
pop
int
sub
cmp
push
pslld
rcl
mov
mov
ljmp
pop
cmp
inc
jnp
stos
popf
jbe
mov
out
rcr
or
sub
fcoms
insl
dec
or
imul
push
lock
ds
loope
xchg
and
xor
inc
jnp
aad
or
pop
lock
lret
loop
pop
std
mov
inc
std
cli
je
pop
mov
mov
and
ljmp
sbb
femms
push
push
aad
ret
xchg
std
outsl
adc
fmull
lret
subl
mov
cmp
fldenv
jne
test
jnp
or
push
outsb
add
ror
dec
shlb
fwait
lcall
adc
dec
pop
and
or
ja
xor
mov
ret
data16
sub
pushl
inc
sub
cmpsl
pop
in
sub
lods
adc
mov
loope
lea
aam
inc
mov
pop
add
cmp
xorl
aas
fisubrl
and
sarl
scas
inc
xor
jb
insb
loopne
xor
fists
mov
out
dec
addr16
in
stos
das
stc
inc
fwait
shll
inc
add
gs
addr16
lcall
out
add
push
and
insl
sbb
sbb
pop
outsb
dec
jge
mov
in
add
shr
lds
dec
int3
dec
xor
imul
add
pop
gs
adc
push
push
jge
stos
xor
in
addr16
cli
inc
scas
jmp
pusha
push
dec
mov
lahf
pop
fnstsw
cld
mov
mov
gs
bnd
rolb
cmp
shlb
jmp
mov
fnsave
stos
ficoml
shlb
repz
lret
clc
dec
sti
sbb
mov
push
jmp
mov
inc
mov
dec
loop
out
mov
mov
lods
out
push
punpcklbw
pop
push
into
mov
ss
mov
mov
mov
lcall
or
push
dec
mov
xor
sahf
and
mov
das
jbe
ljmp
lahf
sbb
or
cmpb
mov
movsb
sbb
add
pop
pop
std
ja
movl
lret
inc
pop
mov
sub
dec
stos
push
push
mov
cmp
test
in
imul
or
sub
test
bound
repnz
pop
xlat
and
add
test
scas
add
add
mov
mov
sbb
mov
mov
lret
pusha
shl
mov
loopne
push
pop
fdivl
or
wbinvd
xor
adc
xchg
aam
out
jnp
sub
inc
movsl
sbb
mov
rcrb
sbb
test
clc
mov
imul
es
push
fs
stc
test
out
mov
dec
jmp
dec
push
stos
lret
fdiv
pop
iret
xlat
in
fscale
xor
and
mov
aaa
cli
or
adc
stos
dec
cs
cli
xor
imul
scas
mov
outsl
scas
nop
gs
sub
sub
shrb
sahf
mov
shr
sbb
xchg
insb
dec
cmp
push
mov
scas
mov
jecxz
jne
sub
push
add
andl
adc
jb
aas
cmpsb
push
test
push
rclb
xchg
and
sbb
adc
fldenv
xor
push
sti
cmp
rclb
and
dec
cltd
dec
cltd
pop
ja
mov
pushf
idivl
inc
sub
lods
push
movsl
cmp
or
in
mov
stc
jne
and
dec
fdivrl
lret
jbe
push
and
push
ja
and
test
inc
cld
xchg
loope
std
ja
mov
leave
cmp
sub
in
push
mov
nop
push
inc
pusha
out
or
pop
cmpsb
into
cltd
jecxz
dec
xor
push
in
mov
cs
leave
xchg
and
inc
push
push
dec
ss
xor
jno
lds
inc
inc
mov
add
out
pop
dec
push
aad
xchg
push
mov
loope
popf
jo
loopne
and
dec
nop
icebp
or
or
fstpl
das
and
pop
push
cmp
jmp
lret
scas
mov
sub
repnz
mov
roll
push
aaa
and
daa
lahf
out
mov
shlb
cmpsl
cmp
mov
add
imul
cmp
fnstenv
jb
jg
pusha
inc
std
xchg
cmp
leave
and
pushf
ret
lods
xor
jbe
push
ss
push
shl
xor
out
add
cmp
mov
jp
lock
scas
pop
shl
mov
xchg
mov
pop
das
nop
incl
fmull
pop
mov
out
mov
mov
xor
pop
stos
xor
push
xorb
dec
mov
aas
clc
gs
push
ret
icebp
push
xor
cmp
lret
aam
jle
sbbb
sbbl
pop
in
in
leave
mov
mov
sarb
or
or
cmp
push
nop
iret
and
xchg
lret
dec
pop
cmp
pop
sbb
mov
or
and
fstpt
das
lahf
push
push
mov
out
sahf
das
test
bound
mov
pop
popf
stc
xchg
scas
inc
fisttps
push
enter
inc
aas
push
inc
and
xor
add
adc
in
hlt
jecxz
rcl
ret
movsb
mov
mov
fs
arpl
inc
and
xor
add
adc
in
hlt
jecxz
rcl
ret
movsb
mov
mov
fs
sub
sub
xor
add
xchg
add
sub
jecxz
rcl
ret
movsb
mov
mov
fs
arpl
inc
and
xor
add
adc
in
hlt
dec
outsb
rcl
mov
cmp
pop
hlt
insb
in
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cwtl
out
idivb
ljmp
sbb
or
inc
sub
es
ss
push
idivb
cmpsb
enter
call
jbe
inc
sub
dec
dec
ss
push
idivb
cmpsb
enter
call
push
dec
xor
aaa
pop
jb
popa
cmp
gs
xchg
jmp
xlat
xchg
sbb
xor
ret
es
lea
dec
je
ja
inc
lcall
add
add
push
xlat
xor
es
ljmp
push
cmp
out
sti
shrb
xor
ret
cmpsb
xor
push
pop
xor
ss
subl
mov
scas
xorl
cltd
test
or
dec
enter
pop
lret
xchg
or
pop
daa
cs
mov
cltd
add
mov
mov
xchg
push
jnp
push
xchg
repz
inc
jle
mov
rcrl
dec
and
mov
push
push
pop
out
idivb
cmpsb
enter
call
jbe
inc
sub
es
ss
push
mov
out
mov
shrb
insl
ja
and
fisubs
push
sbb
cmp
cmp
out
lods
repnz
outsl
cmovne
sub
jns
mov
int
popf
mov
mov
xchg
xchg
sbb
jbe
inc
sub
es
ss
push
idivb
cmpsb
enter
call
jbe
inc
sub
es
ss
push
sahf
and
sarb
pop
test
ja
stos
fucomi
pop
push
inc
xor
jns
inc
mov
and
lret
test
sbb
xchg
push
sub
jecxz
xor
sbb
lret
jecxz
aad
push
dec
ss
add
loopne
add
shlb
xor
das
faddl
push
lods
dec
call
add
cld
push
mov
cmp
pushf
jmp
rcll
cmp
lret
loopne
rcll
mov
aas
outsb
ret
pop
pop
ljmp
testl
outsb
adcb
imul
cltd
inc
adc
push
dec
pusha
icebp
hlt
inc
adc
xchg
loop
pop
imul
out
jecxz
aad
xchg
mov
cmp
adc
adc
mov
cld
lods
jmp
test
xor
push
fisttps
mov
mov
std
adcl
mov
into
mov
in
imul
mov
imul
rcr
or
mov
das
out
xor
push
inc
push
mov
push
mov
and
xor
cmp
frstor
xor
add
adc
or
imul
mov
mov
and
sbb
adc
jbe
sbb
sub
cmp
cmp
xor
test
or
in
mov
jbe
rcll
imul
cmp
and
xor
dec
lret
outsl
out
mov
sbb
jmp
adcb
xchg
xchg
stc
sahf
idiv
mov
dec
call
sbb
outsb
in
arpl
push
or
push
rclb
lahf
insb
pop
out
ds
out
xor
sahf
sub
mov
movsb
movsb
mov
jle
xchg
sub
lock
sbb
je
insb
ficoml
mov
lea
cld
das
decl
outsb
jb
jae
lea
sbb
pop
sub
dec
in
mov
cs
inc
mov
scas
xor
inc
adc
mov
xchg
mov
push
jae
dec
and
les
shll
inc
repz
xchg
test
rcll
jle
lock
xchg
cli
inc
test
adc
mov
xor
mov
clc
push
int
mov
aad
jne
cmpsb
inc
mov
in
xchg
outsl
insl
xchg
dec
sbb
adc
test
mov
and
mov
jmp
cmp
and
mov
repz
mov
xchg
leave
lcall
mov
push
lea
test
int3
shlb
push
pop
sbb
cmp
sarb
push
js
imul
jg
and
iret
aam
repz
xor
xor
pop
jbe
lods
int3
leave
push
jle
sbb
adcl
or
fidivs
ja
faddl
and
sbb
decl
loope
sbb
mov
fiadds
xchg
mov
mov
in
rcl
jmp
push
push
scas
jg
cmpsb
test
cmp
in
pushf
in
adc
std
nop
sbb
sbb
push
movsb
push
cld
add
dec
fucomi
xchg
iret
outsb
sub
jnp
mov
test
into
loopne
push
push
test
mov
sbb
fdivrs
ret
jge
xor
sbb
push
adc
or
pop
pop
sbb
inc
add
pusha
fs
xchg
mov
scas
cmpsb
int
leave
pop
aaa
insb
das
and
leave
lret
scas
sahf
pop
pop
outsl
clc
pop
clc
jae
cli
xlat
outsb
sub
rolb
in
sti
movsb
enter
mov
push
mov
outsb
push
inc
jmp
cs
mov
and
inc
sbb
fsubrl
ds
jle
lret
mov
and
xlat
fists
fildl
test
insl
adc
out
mov
mov
xor
rcrl
inc
fsubp
mov
jno
fistpl
sub
test
lds
jae
xchg
imul
clc
sbb
movsl
lock
into
fisubrl
pop
lds
and
push
cltd
push
pop
mov
xchg
sbb
loopne
inc
xchg
je
inc
adc
xor
mov
mov
mov
repnz
jmp
in
pop
es
dec
pop
jge
fsubs
fld
push
and
cmp
push
divps
fdivs
push
and
les
stc
mov
push
pusha
add
mov
pop
xchg
adc
push
insl
test
fmul
flds
jb
xchg
jl
xor
cvtdq2ps
sub
mov
mov
add
push
scas
or
push
aas
xor
sti
divl
jp
add
jno
pop
mov
jp
mov
xorb
cs
sahf
fisttpll
inc
imul
inc
movsl
add
dec
stos
mov
jne
int
cltd
push
punpcklbw
jmp
das
shll
mov
mov
test
sub
cmp
fmulp
outsl
xchg
dec
adc
push
stc
adc
jo
es
stos
into
insl
lods
cmp
je
add
pop
repz
sbb
or
sti
rcrb
pop
or
sbb
scas
inc
cmc
gs
push
jp
je
cs
mov
movsl
dec
out
mov
shlb
dec
push
or
popl
push
in
cli
lahf
scas
mov
push
jae
test
dec
mov
gs
sbb
jae
imul
sbb
push
dec
jp
imul
int3
cmp
mov
lret
js
lret
arpl
push
hlt
in
call
roll
pop
faddp
xchg
inc
sub
push
xlat
inc
and
xlat
or
ljmp
packssdw
bound
add
mov
cmp
xor
bnd
lret
ss
sub
adc
pop
rorl
int3
negl
cmp
pop
sub
test
outsb
xchg
xor
xchg
jne
stos
test
cltd
aam
mov
bound
mov
sbb
xor
inc
push
pop
out
push
jno
or
add
scas
add
test
in
push
mov
push
xchg
inc
adc
outsb
gs
outsl
fadd
adc
xchg
enter
pop
rcll
hlt
cld
adc
jb
push
aaa
out
inc
icebp
push
leave
lock
stos
cwtl
pop
push
add
xchg
in
sbb
lret
add
mov
nop
fisttpll
xchg
mov
outsl
das
jo
lods
jae
mov
mov
push
xchg
add
adcl
fsubl
pop
jg
cs
shl
jle
inc
pop
sbb
xor
dec
inc
adc
lock
mov
pop
mov
mov
rcrl
movsl
and
push
imul
stos
pop
pop
in
jge
popa
inc
mov
lock
repz
dec
outsl
cmp
int
fsubs
mov
addb
mov
adc
in
loopne
mov
outsb
add
popw
inc
ret
fwait
popa
dec
sub
js
and
sbb
push
push
xor
jg
push
cmp
rcrb
push
shrb
into
fcoml
mov
scas
lret
les
cs
sub
mov
in
test
sub
adc
mov
mov
leave
fs
cmp
or
cmpl
outsb
sub
sub
mov
fisubrs
mov
das
jno
mov
sbb
out
pop
stc
cmp
out
add
jg
test
mov
int
cmp
cld
mov
dec
enter
inc
inc
sarb
push
jo
push
test
popa
bound
sbb
cli
xor
adc
sub
push
lahf
or
aad
icebp
lods
popa
lods
cs
xchg
jg
mov
mov
aam
mov
imul
popf
sub
or
mov
imul
mov
sti
mov
push
sub
cli
mov
push
mov
lods
add
cltd
sub
scas
inc
push
std
loop
jle
loopne
mov
movsb
pop
fsts
fisubl
clc
xor
out
sar
fdivl
popa
ret
fnstcw
cs
mov
xor
out
repnz
leave
mov
cli
and
maxps
push
jbe
cmp
nop
int3
sub
mov
in
pop
cmp
int
dec
add
push
jmp
mov
into
mov
xor
rol
in
cwtl
clc
imul
sbb
mov
pusha
sub
aaa
mov
xchg
fwait
dec
cmpsl
inc
pop
mov
xor
xchg
cmp
jnp
mov
jae
lds
cwtl
pop
mov
movsl
pop
and
loopne
invd
pop
fcoms
pop
pop
scas
pop
inc
adc
inc
sbb
mov
imul
push
cwtl
stos
sahf
aas
dec
scas
mov
xchg
jbe
push
int3
outsb
out
aaa
icebp
add
add
cmp
push
add
push
out
test
push
cli
xor
gs
in
outsl
pop
rcrb
stos
cmpsl
fadds
mov
dec
xor
iret
scas
paddusb
insb
xchg
test
test
add
pop
sub
test
nop
mov
and
mov
push
in
shll
xorb
cmp
aam
mov
mov
xor
cmp
stos
loope
repnz
insl
and
pusha
ficoml
jns
stos
mov
pop
sbb
loope
loope
sbb
stos
xor
jecxz
jl
adc
and
shl
adc
cli
sbb
ja
or
je
or
or
icebp
sub
inc
mulb
or
mov
xchg
cs
mov
pusha
in
ljmp
mov
scas
ja
adc
and
mov
aaa
dec
and
fisubrs
fimull
sarl
stos
jg
add
mov
mov
lret
ds
mov
ds
cmp
mov
das
call
mov
arpl
xchg
sbb
mov
pop
int
jmp
popf
lods
add
push
imul
push
xlat
push
cmp
movsb
cmp
mov
leave
ret
mov
lcall
mov
or
je
add
faddp
sub
or
mov
xor
mov
stos
outsl
jmp
push
rcrb
lret
iret
stos
adc
repz
inc
aas
push
sbb
mov
cltd
cmp
adc
lret
fs
mov
loopne
xchg
lret
iret
mov
jp
dec
aas
int
int
add
sbb
sbb
xchg
and
stos
pop
in
cwtl
int3
out
dec
mov
pop
add
sbb
cmpsb
dec
loopne
push
or
cwtl
test
mov
push
comiss
test
cmp
dec
or
jno
icebp
jp
pop
xchg
outsl
loopne
movsb
pop
jmp
or
jne
mov
test
push
jbe
sub
lds
xchg
xor
inc
ret
mov
insb
and
inc
push
orl
rcll
dec
int
int
pop
dec
cmc
movsb
adc
bound
les
imul
leave
xor
gs
lds
loope
mov
push
push
divl
and
sub
cli
out
pop
repnz
daa
push
cmc
test
xor
mov
mov
xchg
iret
dec
adc
jp
es
out
clc
sub
pop
or
dec
pop
je
dec
sub
push
or
mov
xchg
add
xchg
cltd
mov
mov
sbb
inc
xchg
add
xchg
movsb
fisttpll
mov
iret
mov
sbb
mov
scas
stos
adcb
push
leave
stc
out
mov
dec
int3
sar
das
mov
inc
jb
or
loop
test
adc
push
sbb
pushf
jne
push
cmp
xlat
inc
fwait
jle
cmp
pop
cltd
xchg
cvtps2pd
into
inc
cs
sub
outsl
lock
int
in
jl
mov
bswap
lahf
test
repz
xlat
xor
sub
pop
pushf
sbb
pop
push
push
loope
mov
xchg
fistl
or
add
scas
push
daa
movsb
pusha
push
cmp
lods
je
in
scas
ret
xchg
add
js
xor
sbb
les
add
iret
cmc
clc
jno
mov
jmp
and
cmp
adc
mov
pop
cmc
pop
std
pop
inc
xor
dec
outsl
repz
or
push
adc
cmpl
bound
cmp
int
int
and
adc
mov
add
add
call
sub
ret
inc
jmp
dec
xchg
mov
lahf
pop
rcl
out
cld
test
and
sahf
pushf
inc
add
pop
jb
xchg
cmp
sbb
aam
out
and
movsb
bswap
sub
cmp
loop
movsb
mov
dec
jno
mov
xor
add
arpl
imul
and
int
adc
fcoms
mov
imull
fdivr
stos
leave
loop
inc
lea
or
or
stc
int3
mov
mov
int3
imulb
clc
int
filds
push
filds
lcall
dec
inc
pop
daa
dec
adc
xor
dec
and
mov
cltd
mov
fninit
movsb
add
call
call
test
daa
rolb
add
ss
rcl
outsb
out
fcompl
addb
inc
sbb
cld
inc
int3
mov
add
popf
shrb
push
pusha
adc
bound
pusha
sub
push
adc
push
popf
mov
outsl
pushf
rcrl
jae
pop
xorl
mov
sbbb
outsb
cld
mov
mov
inc
fisttpl
sub
mov
loop
out
sti
mov
lcall
daa
loope
inc
add
pusha
adc
int
pop
pop
test
fs
cmp
pop
leave
sbb
ljmp
jmp
mov
add
push
jge
in
cmpsl
mov
popa
adc
mov
xor
sbb
fdivl
test
lods
popa
pop
mov
pushf
xor
pop
or
ljmp
test
sbb
mov
sahf
sub
add
lret
std
fbld
inc
adc
lcall
lahf
pop
fwait
or
loope
pop
pop
ljmp
and
aas
and
clc
dec
jne
cmp
les
adc
inc
jo
aad
dec
lods
ror
push
xchg
mov
xchg
imul
insb
outsl
cli
pop
popl
sub
and
into
and
jp
push
mov
das
push
jle
pop
in
repnz
pop
aaa
dec
add
mulb
dec
shll
mov
shlb
outsb
stos
insl
enter
mov
jl
pushf
pop
mov
pop
in
mov
repz
mov
mov
testb
lods
fnsetpm(287
cmp
xchg
jmp
div
mov
fldl
scas
icebp
repnz
push
cli
aaa
xchg
stos
movsb
inc
mov
mov
xchg
cmpsb
inc
cld
jnp
leave
scas
push
and
inc
pop
shll
arpl
add
xor
arpl
jmp
hlt
cs
ss
push
out
dec
popf
jl
std
lods
mov
adc
outsb
cmp
pop
pop
ficoml
bound
push
sub
and
push
ret
xchg
dec
std
cmp
outsl
add
mov
stc
mov
andl
sub
imul
stos
dec
xchg
xchg
shll
or
add
xor
pop
out
orb
les
inc
loopne
cld
aaa
mull
fsubl
rcrl
jmp
loope
aaa
jmp
sub
sub
or
ljmp
ret
in
or
ljmp
or
cmp
add
shr
push
or
rclb
mov
les
push
cmp
lcall
outsl
xor
mov
loop
pop
add
in
xor
pop
in
movsl
push
sahf
outsb
jle
push
setle
mov
push
imul
adc
scas
imul
lock
loop
xchg
cwtl
pop
xlat
mov
popf
test
cmpsb
mov
fisttpll
pop
mov
xor
lods
or
inc
adc
repnz
mov
ret
insb
mov
aaa
pop
push
aam
mov
xchg
cmp
inc
test
lods
or
fadds
mov
xor
pop
fisttps
dec
fbstp
inc
mov
jo
into
xchg
mov
fwait
fwait
test
test
xor
insl
icebp
shlb
xlat
fsts
mov
imulb
test
movsb
pop
nop
in
fucomi
push
cmp
cmp
cwtl
mov
jnp
ror
or
jp
pop
mov
push
xor
enter
aaa
and
mov
jbe
pop
cmp
mov
xor
push
inc
lods
inc
xchg
mov
or
cld
mov
xchg
lahf
roll
adc
jmp
pop
popa
pop
push
sbb
sbb
cmpsl
cmpsb
inc
push
sub
into
test
outsl
fiadds
cwtl
or
mov
scas
pop
into
add
loopne
rcrl
lret
sub
aad
jge
lock
cs
sti
stc
sub
fbld
adc
filds
roll
cwtl
mov
xchg
jl
clc
imul
lret
sub
mov
cs
push
es
les
xor
cmp
adc
flds
jle
aad
push
cltd
shrb
cmpsl
pop
loop
mov
or
repnz
or
add
in
shl
push
in
jb
inc
or
clc
lahf
inc
jg
jnp
leave
nop
jle
mov
js
add
clc
or
ret
pop
add
jge
xchg
popa
jno
stos
dec
ret
sbb
dec
shlb
mov
cltd
mov
mov
in
push
mov
mov
and
lret
push
mov
mov
pop
and
je
push
js
pushf
mov
dec
or
out
ror
add
pusha
push
rol
sub
inc
dec
std
add
daa
push
mov
test
dec
fcoms
mov
sub
imul
loope
sub
fwait
pop
mov
orb
pop
ret
cld
sbb
mov
cmp
push
cmp
dec
cmp
jecxz
jns
fcmove
xchg
cmpsb
les
cwtl
or
ficoml
enter
sbb
arpl
pop
cli
push
lret
xchg
ljmp
cmp
sbb
stos
and
dec
inc
pop
push
scas
mov
out
cwtl
js
sbb
xchg
into
lods
jnp
hlt
je
mov
mov
js
jns
jo
stos
ljmp
mov
push
xchg
or
xor
adc
jp
cli
jl
push
das
xor
jl
or
add
jbe
call
adc
mov
pop
adc
adc
lahf
neg
jl
push
sbb
mov
jns
stos
rcl
iret
mov
mov
cmpsl
sub
sarl
fadds
pop
pop
mov
lcall
out
das
xor
xchg
mov
pop
sbb
jae
sub
mov
mov
repnz
rcll
aaa
repnz
mov
xor
ljmp
ds
push
outsl
aas
lods
or
stos
jecxz
or
repnz
lret
mov
lcall
inc
xor
jmp
add
inc
mov
cld
daa
jo
xor
outsb
xor
mov
and
mov
lds
cmp
sbb
xchg
adc
mov
or
sub
pop
mov
hlt
push
pop
fbld
aad
add
cmp
adc
outsb
mov
pop
lods
leave
or
push
push
or
dec
in
daa
xchg
das
sbb
add
movb
push
mov
push
xchg
push
inc
cmpsl
jno
imul
push
dec
out
dec
testb
jg
or
push
arpl
pop
cmp
aam
aam
call
mov
shll
sbb
fdivl
adc
popf
and
xor
int
mov
mov
fildll
sbb
xchg
stos
in
or
stos
stc
ds
push
cmpsb
cmpsl
add
xor
mov
pop
mov
cli
das
dec
adc
mov
sub
dec
mov
rclw
punpcklwd
mov
push
mov
daa
sbb
nop
cmp
pop
adc
ret
test
jle
outsb
push
or
mov
add
pusha
ljmp
aaa
fisttps
out
sbb
lock
int3
mov
dec
cmp
mov
ja
inc
das
sub
call
pop
rcl
fwait
push
test
scas
lcall
nop
pop
or
and
int
cmc
pop
outsb
jbe
mov
and
xor
ja
outsl
mov
stc
pop
jae
inc
lret
stc
inc
cmp
dec
cmp
or
push
pushaw
outsb
add
insl
dec
add
push
xor
mov
xchg
sub
jl
inc
bound
mov
popa
test
xor
call
fdivs
rcll
inc
sub
push
js
or
xchg
out
mov
inc
cli
push
bndstx
int
cltd
and
push
ja
push
cmpsl
jbe,pt
int3
scas
dec
lret
mov
add
mov
dec
andb
imulb
les
xchg
test
fsubs
call
jbe
inc
sub
es
ss
push
idivb
cmpsb
enter
call
jbe
inc
sub
es
ss
push
idivb
cmpsb
leave
mov
xchg
xchg
sbb
jbe
inc
sub
es
ss
push
idivb
cmpsb
enter
push
fcoml
scas
ror
stc
nop
jmp
push
xor
and
push
pusha
sub
cmp
cs
mov
into
loopne
loopne
adc
add
xor
and
jle
dec
jo
add
cli
mov
mov
into
lock
adc
add
xor
and
jle
dec
jo
pusha
scas
nop
mov
into
xchg
mov
addr16
jo,pt
arpl
ljmp
insb
adc
jmp
jmp
pop
out
mov
setle
pop
xchg
lods
inc
inc
cli
int
clc
test
pop
adcb
adc
jmp
iret
dec
and
loop
out
sbb
mov
scas
nop
aam
jno
hlt
pop
dec
das
ja
stos
jge
sub
popf
aas
adc
outsb
push
outsb
inc
mov
subb
mov
and
test
loopne
rorb
fs
es
dec
and
mov
dec
pop
mov
cs
lret
add
dec
push
push
dec
mov
sub
cli
aad
nop
aam
jbe
fistpl
sar
into
lock
jo
add
xor
and
jle
dec
jo
pusha
scas
nop
mov
mov
into
lock
imul
add
aaa
xor
adc
mov
rorb
orb
pop
js
inc
sub
adc
lret
cmc
mov
repnz
fidivs
push
pop
pop
outsb
bound
dec
jo
pusha
scas
nop
mov
mov
into
lock
adc
add
xor
and
jle
dec
jo
pusha
scas
nop
mov
mov
into
lock
adc
out
movsl
rol
mull
inc
test
or
sbb
int3
ja
mov
stos
cmovnp
cmc
std
adc
mov
ljmp
and
aas
ret
jg
pop
out
mov
out
push
or
pop
dec
ffree
into
mov
nop
jbe
cmp
dec
scas
roll
jecxz
mov
out
inc
out
nop
jo
and
mov
in
outsl
xor
add
jno
cs
jge
ljmp
addr16
mov
fimuls
rcll
sub
dec
cmp
jge
lret
push
mov
mov
and
jnp
pop
jl
loopne
enter
mov
cwtl
sub
arpl
negl
pop
pushl
inc
test
adc
xchg
lds
xor
imul
insl
loope
lods
xor
shll
lods
inc
mov
adcb
repz
mov
insb
imul
stc
dec
jnp
inc
jb
popa
or
das
dec
sub
push
pop
pusha
call
push
push
push
add
mov
add
jp
mov
pop
jmp
imul
add
jge
push
mov
out
insb
or
jbe
inc
clc
js
fcoml
adc
add
jnp
test
in
push
fldl
and
push
mov
sbb
inc
scas
mov
mov
fidivs
jg
jp
push
inc
insl
mov
adc
pop
xor
inc
clc
in
bnd
lods
xchg
cmp
sbb
aas
cmp
xor
scas
pop
lahf
lds
inc
stc
rclb
shlb
flds
dec
inc
popf
int3
jg
jns
ror
pop
lret
pusha
jae
or
arpl
mov
cmc
ret
out
lahf
out
insb
insl
push
and
inc
push
rcll
mov
sbb
in
repz
fldenv
jb
push
call
sbb
sub
adc
push
mulb
push
cld
jle
ss
mov
dec
mov
popf
xor
push
subl
ret
xor
mov
test
ss
fmull
add
add
loope
sub
notl
fcmovnu
add
mov
mov
popa
and
pushf
imul
or
inc
cmp
mov
add
mov
jae
jae
add
inc
int
movsl
daa
jo
mov
fmuls
cmp
fnstcw
hlt
call
push
xchg
jmp
or
push
xchg
scas
or
fildll
cmp
scas
sbb
outsb
shlb
ret
sbb
call
jbe
les
fistpll
push
dec
xor
jecxz
jno
fwait
rcr
cli
mov
inc
pop
inc
stos
daa
loop
mov
xchg
cmpsl
add
jle
jae
adc
adcl
push
xor
jne
add
sub
fs
lret
stos
sbb
icebp
pop
test
insl
loopne
lret
or
xor
mov
inc
cmpsb
pop
cwtl
std
xchg
jl
sbb
push
push
roll
fildl
pop
fmul
cltd
into
mov
sbb
inc
push
push
xchg
lahf
imul
lret
orb
fldenv
jno
fs
icebp
mov
pop
mov
js
mov
pop
loope
mov
movsb
jmp
add
out
cltd
adc
aad
mov
ja
test
sbb
mov
test
neg
dec
pop
fldl
or
not
scas
ret
mov
shl
repnz
lret
adc
mov
lahf
push
mov
sti
dec
push
ja
or
ret
mov
shr
rorl
js
aas
lods
popf
cs
push
pop
mov
push
xor
stos
mov
jge
daa
sbb
jb
int3
or
jne
push
lods
jns
in
movsb
or
pop
and
fadds
in
add
dec
pop
aas
lods
push
jo
iret
cmp
adc
mov
sub
push
xor
notb
jecxz
adc
cwtl
mov
mov
jl
jns
inc
orl
sub
mov
xchg
addb
or
aam
jne
scas
stos
arpl
scas
xor
js
mov
mov
fwait
sbb
or
mov
and
fxrstor
pushf
and
push
xchg
scas
or
xchg
mov
negl
xor
adc
rcrb
inc
mov
and
out
push
or
fisubl
dec
mov
mov
sub
outsb
aaa
insl
pop
es
and
mov
xchg
cwtl
jg
or
push
add
enter
inc
or
pop
out
cmp
lock
pop
push
stc
pusha
cwtl
int3
pushf
or
lods
pushf
inc
js
insb
cmp
inc
test
lods
mov
push
push
shll
push
shrl
nop
fldt
cli
adc
push
sbbb
shl
mov
cwtl
loopne
negb
lea
push
mov
xchg
push
scas
ljmp
jecxz
sbb
test
xchg
daa
out
add
sbb
mov
sub
test
shlb
xchg
repnz
push
adc
cmp
out
mov
sbb
mov
jp
dec
mov
cli
cmp
mov
inc
push
test
add
addr16
xor
in
jmp
cmpsl
adc
sub
xchg
dec
outsb
aam
sbb
insb
mov
cld
loopne
jne
aad
push
out
xor
inc
cmp
sub
cmpb
in
cli
push
inc
sbb
mov
hlt
repnz
jmp
xchg
and
out
icebp
adc
in
xchg
in
jbe
sbbl
sub
pop
push
mov
mov
and
sbb
push
dec
adc
push
dec
mov
pop
or
cmp
in
aam
clc
jmp
or
xchg
mov
mov
push
stos
inc
pop
cltd
ret
jae
test
lock
pop
inc
mov
mov
sarb
dec
cmpsb
pop
dec
pop
cwtl
andb
jecxz
mov
mov
inc
push
filds
lahf
das
xor
orl
hlt
les
sub
push
push
fmul
scas
inc
leave
push
jge
pop
ficompl
ja
mov
cmp
into
and
add
mov
mov
pushf
jbe
mov
xchg
lret
test
stos
arpl
out
xchg
sbb
xchg
and
mov
rorl
pop
jb
cmpsb
sub
test
or
jbe
jge
loope
cmc
enter
mov
inc
sub
inc
int
or
cld
stos
test
ret
addr16
insl
sahf
xchg
adc
pop
mov
repz
cmp
or
sbb
ret
push
sti
testb
inc
pop
pushf
lret
cmp
leave
repz
or
add
push
jle
divl
ret
xchg
mov
mov
xchg
aam
cmp
in
lret
cmpsb
test
pop
pop
and
divb
mov
ss
and
sti
jnp
inc
fildl
sbb
push
call
fmulp
popf
fmull
push
outsl
dec
outsl
les
mov
dec
inc
adc
mov
dec
jbe
mov
inc
xchg
es
pop
add
sbb
mov
mov
or
xchg
clc
dec
cli
insb
lret
pop
vpsrlq
push
fiadds
xchg
das
lods
in
out
test
fs
jecxz
adc
addl
push
aam
bound
test
cltd
clc
ja
push
and
cmp
mov
imul
add
ja
sbb
jo
push
jbe
mov
stos
fidivl
xorb
cltd
mov
sub
orl
jo
jns
movsl
dec
pop
push
jle,pt
repnz
shr
sub
dec
pusha
inc
pop
and
ja
pop
cmp
cs
inc
dec
mov
or
jcxz
xor
fstps
jle
xchg
stos
and
pushf
xchg
jl
mov
xchg
repz
xchg
daa
ret
push
jns
mov
cmp
mov
repz
jns
fcomi
daa
or
out
xor
insb
inc
mov
sbb
inc
pusha
xchg
roll
inc
movl
cmp
sysenter
hlt
add
aaa
icebp
mov
mov
jge
dec
jecxz
lahf
outsl
int3
push
sahf
cwtl
bound
add
insl
pushf
sub
shl
sub
cli
cmpsb
cmp
sub
mov
xchg
inc
aas
mov
mov
fsubp
xor
xchg
leave
hlt
xchg
sbb
mov
andb
mov
mov
push
dec
dec
test
mov
stos
dec
lods
push
mov
jno
push
jno
int3
lret
jns
xlat
imul
jnp
xchg
test
fists
leave
inc
or
cltd
lcall
mov
inc
cmpsl
rol
roll
test
sbb
test
or
and
cli
subl
lock
and
xchg
cltd
pusha
add
and
ret
xchg
loope
xchg
addl
jnp
idivl
cmp
mov
mov
ja
push
xor
push
pop
cs
and
nop
fldz
inc
pusha
cmp
sub
mov
adc
jbe
sbb
jp
inc
jae
leave
push
add
push
dec
out
xor
inc
mov
stos
je
cmc
dec
sbb
and
jecxz
sbb
test
and
aaa
sbb
jns
mov
sub
mov
ret
mov
orps
ret
or
cmc
ret
pop
xor
daa
pusha
mov
out
or
imul
jge
push
pusha
sub
pusha
mov
hlt
adc
add
pop
jae
fwait
push
inc
lret
test
in
in
fwait
inc
das
pop
testl
rcl
and
mov
jne
sbb
ffreep
repnz
jg
ret
pop
lea
aam
enter
add
dec
pushf
das
jnp
dec
cmp
sub
scas
dec
lods
les
adc
xor
mov
scas
jecxz
pop
xchg
pop
fisttpll
out
aaa
adc
inc
fwait
mov
lea
xchg
fimuls
and
xchg
scas
xlat
cmp
std
adc
cmp
sbb
mov
jmp
divb
arpl
cltd
lahf
jb
in
push
lods
adc
xchg
cmp
add
xor
push
test
lea
jns
push
mov
push
mov
dec
inc
inc
push
adc
adc
fsubs
xor
in
andl
mov
mov
or
inc
fnstcw
mov
jae
lds
cmp
cwtl
jbe
sbb
nop
scas
cltd
sbb
cli
add
pop
pop
and
dec
rol
xor
jp
lea
stos
mov
dec
inc
rcr
inc
es
ljmp
mov
dec
or
cmpsb
popf
lret
cmp
cld
jo
pop
fwait
addr16
xchg
dec
mov
cmpsb
mov
xor
aaa
pop
jmp
movsl
jo
mov
fisttpll
js
xchg
dec
lds
adc
cmp
stos
lds
add
nop
es
dec
xchg
shrl
cmp
hlt
or
and
mov
sub
and
sarl
ja
mov
pop
sub
lods
inc
pop
sahf
fistps
bound
sbb
lods
fs
sub
or
or
or
movsl
lods
add
mov
out
jns
popa
jo
mov
pop
jbe
ret
or
iret
adc
sbb
pop
sbb
push
jbe
inc
xor
rcrb
xlat
mov
stos
cmp
fwait
mov
jl
jmp
inc
cld
stos
xchg
xchg
dec
sti
icebp
insl
adc
inc
jo
scas
mov
fildll
adc
dec
mov
jne
and
push
add
outsl
pop
sub
xor
cmp
rcll
xlat
inc
insl
cld
jg
mov
adc
pop
int3
xlat
mov
mov
dec
insl
mov
test
sbb
into
cmp
jns
stos
xchg
mov
xchg
jmp
jle
push
aaa
xchg
adcb
jns
sub
clc
cmpl
lcall
lock
mov
or
testb
ficoms
out
hlt
shlb
dec
and
insb
scas
push
mov
test
add
sbb
jmp
test
scas
xor
in
or
jae
gs
push
add
adc
lods
or
mov
sbb
outsb
pop
cmp
je
mov
add
mov
rcll
jb
imul
loop
xchg
shlb
out
aam
xchg
or
mov
imul
nop
or
mov
lret
imul
sbb
mov
jp
xor
popa
ljmp
aaa
add
and
pop
call
cs
in
mov
fstpl
cmp
les
dec
mov
popl
das
jge,pt
inc
out
loop
pop
test
bound
cli
icebp
sbb
cmp
repnz
xchg
sub
jmp
jne
rolb
cmc
inc
pop
sbb
inc
cmc
xchg
push
add
rolb
cli
aad
outsb
or
repz
stos
ret
daa
pop
jb
andb
push
je
pop
shlb
xor
por
lock
pop
pop
cmp
pop
iret
dec
mov
pop
xor
inc
js
xchg
inc
xorb
or
mov
lock
jbe
imul
xchg
sti
push
mov
fmuls
les
mov
mov
mov
mov
mov
andb
insl
jl
cli
mov
add
out
cmpsb
sub
dec
js
fsts
adc
mov
test
xor
or
sbb
add
jmp
shlb
fs
sbb
mov
stos
in
push
stc
loopne
dec
cmp
and
jmp
dec
mov
in
mov
aam
mov
hlt
xlat
push
aas
sbb
out
lret
mov
negb
cmp
outsb
inc
adc
fs
cmpsb
ljmp
repz
dec
pop
dec
call
lods
mov
ja
sbb
sbb
mov
andl
cmp
dec
dec
fnstenv
les
pop
xchg
jns
dec
mov
aas
outsl
out
mov
arpl
pop
ss
aaa
jmp
test
sbb
jp
jnp
es
mov
or
and
mov
repnz
ss
popf
sbb
inc
popa
stos
or
sti
ret
cmpsb
adc
mov
push
out
movsb
xor
xchg
pop
mov
mov
stos
nop
sbb
jl
ret
mov
and
repz
shlb
xlat
out
xchg
popa
and
aas
dec
or
or
je
arpl
dec
mov
jae
ficoms
xlat
jmp
cmp
push
inc
xlat
pop
cmp
fwait
xchg
xchg
insl
xchg
xchg
cmpsl
aam
jle
mov
mov
bound
stos
xchg
mov
pop
xor
cmp
dec
dec
xor
or
idivb
faddl
pop
sub
std
pushl
cmp
mov
pop
fmul
ret
jno
mov
cwtl
faddl
imul
cltd
jg
cmp
or
outsb
out
mov
mov
and
jne
inc
repz
pop
rcr
jg
and
repnz
addl
ffreep
mov
jne
xor
outsb
rcrb
sbb
test
sub
and
popa
cld
add
fnstsw
sub
or
sbb
enter
dec
daa
mov
iret
in
mov
add
push
add
push
mov
mov
dec
jns
xchg
aad
jns
xor
in
cwtl
aas
sbb
pop
fcmovbe
std
cmpsb
loop
fwait
push
test
jno
cli
add
cmp
out
test
push
push
aaa
xchg
scas
push
mov
or
cmp
arpl
xor
dec
sbb
fistps
cmp
xor
daa
adc
sbb
jp
inc
sub
test
jb
not
test
daa
daa
push
push
ljmp
adc
adc
pop
dec
test
jle
and
jns
jp
mov
sahf
ljmp
test
js
rclb
xor
stc
loope
mov
mov
dec
fsts
je,pn
sahf
inc
mov
test
fists
fsubr
add
cwtl
pop
gs
es
add
push
loopne
cwtl
jmp
mul
bnd
jecxz
inc
inc
sub
lcall
mov
stos
and
xchg
xor
xor
lock
sti
pop
pop
pop
stc
les
cmpsb
mov
mov
lret
enter
aam
xor
cmp
cwtl
cmp
popw
pop
mov
push
or
insl
jo
jns
mov
pop
loop
stos
inc
xor
scas
mov
add
insl
push
xor
xor
ja
or
push
das
jbe
sti
daa
cmc
sub
dec
mov
mov
push
scas
xlat
sbbl
fcomp
mov
fimull
jg
std
popa
jne
adc
dec
pop
into
adc
cmpsl
pop
dec
insl
cli
adcb
push
add
sbb
xor
enter
pop
pop
lods
adc
bound
xlat
pop
dec
dec
ret
mov
jecxz
call
inc
pushf
dec
pop
cmp
cli
jnp
jae
loope
push
enter
imul
das
jae
mov
pop
or
jae
cmp
jbe
mov
roll
jae
cs
push
lahf
cmp
loopne
in
cmp
mov
mov
mov
inc
in
fwait
inc
fimuls
mov
fcompp
xor
adc
inc
insl
es
shrl
add
dec
enter
stc
cmp
es
add
mov
orl
xor
jb
mov
in
dec
and
jae
inc
xor
or
jg
or
lret
sub
ret
test
mov
jo
testl
pop
cli
mov
sahf
push
imul
cld
xchg
ret
ss
jecxz
xchg
push
mov
dec
adc
arpl
ds
adcb
or
pop
std
lret
data16
in
xchg
sub
xor
jb
les
lahf
xor
hlt
mov
sub
ret
lcall
shlb
sbb
sbb
xlat
and
insb
adc
sti
stc
sbb
jbe
imul
push
mov
jg
outsl
dec
fmuls
lds
mov
shll
orl
out
mov
inc
jle
frstor
ja
rcr
into
mov
dec
das
out
rorl
and
mov
enter
inc
out
mov
add
lock
fwait
xchg
xchg
dec
out
and
into
aad
adc
ret
xchg
test
mov
ljmp
lea
sub
aad
jb
xchg
cmpsl
aad
adc
xlat
adc
xchg
push
add
repz
test
mov
jge
inc
mov
adc
inc
ret
xchg
jb
sarl
lcall
add
pop
sbb
xorb
stos
stos
sub
cld
imul
pop
push
or
hlt
sub
into
imul
inc
jmp
jb
ds
jl
xor
and
sbb
inc
out
pushf
cld
in
int3
rorb
jmp
ror
ss
mov
sbb
sub
cmp
sbb
call
add
iret
aaa
jmp
outsl
rcll
xchg
jl
enter
adc
cltd
aam
lahf
pop
icebp
gs
xor
jnp
in
insl
add
xchg
lahf
repz
xchg
dec
pop
xchg
into
cli
test
push
jecxz
dec
pop
cld
popf
xlat
cwtl
fmull
add
ret
mov
adc
inc
jb
or
fiadds
xchg
dec
inc
adc
mov
inc
lods
bswap
adc
loope
es
cs
cmp
and
xchg
out
decb
add
push
mov
imul
inc
xor
sti
nop
mov
mov
adc
into
add
loope
sub
cmp
jae
and
ret
imull
sub
negb
inc
roll
mov
cmp
jo
icebp
mov
push
popf
jbe
xchg
jg
dec
pushf
lods
out
sub
push
xchg
adc
les
or
pop
int3
jl
dec
test
jne
pop
dec
in
push
mov
adc
in
or
dec
or
sbb
push
jmp
jbe
int3
cmp
xchg
jne
push
push
dec
sub
fnstsw
insb
insb
lods
mov
loopne
lods
pop
pop
test
mov
pop
inc
mov
jne
and
dec
mov
push
cmp
movl
bound
pop
xlat
iret
dec
xchg
pop
and
sahf
enter
xor
pop
or
inc
iret
xor
hlt
fwait
dec
lahf
insb
jbe
leave
sub
inc
push
mov
adc
inc
mov
loopne
xchg
adc
xchg
insb
jae
or
xor
jmp
out
ffreep
sti
int
and
mov
mov
or
shrl
sub
mulb
testl
xchg
sub
clc
sub
aam
add
push
and
jle
dec
jo
pusha
scas
nop
mov
mov
into
lock
adc
add
xor
and
jle
dec
jo
pusha
scas
nop
mov
mov
into
lock
adc
add
xor
and
jle
dec
jo
pusha
scas
nop
mov
mov
into
lock
adc
add
xor
and
jle
dec
jo
mov
and
sahf
xlat
cltd
pop
jbe
xor
and
fimuls
jle
mov
xor
jge
ficomps
int
pop
mov
or
jle
push
dec
push
pop
cs
jge,pt
fdivrp
lods
mov
scas
scas
mov
sbb
push
dec
push
pop
cs
jge,pt
and
fwait
mov
mov
pop
inc
and
insb
test
or
xchg
loope
scas
cmp
in
aas
sbb
popf
sbb
ret
adc
mov
lods
jae
jae
popa
xor
push
pop
punpcklwd
pop
push
or
xchg
mov
jo
bound
int3
pop
sbb
mov
pop
sahf
dec
loope
cmp
into
loop
sbb
sbb
out
push
push
in
outsb
cmpsl
int
mov
in
mov
ret
push
dec
js,pn
cmpsb
jno
lret
jge
and
adc
mov
pop
loop
dec
sti
out
cmp
rcl
sbb
popf
xor
or
cli
fcomps
cld
adc
jle
push
dec
push
pop
cs
jge,pt
ficomps
mov
sahf
bound
sbb
dec
and
imul
insb
jmp
cli
lods
shrb
adc
ss
imul
jge
cmc
mov
xchg
int3
fwait
rol
scas
in
mov
mov
dec
or
dec
push
pop
cs
jge,pt
ficomps
mov
sahf
or
jle
push
dec
push
pop
cs
jge,pt
ficomps
mov
sahf
or
sub
jge
adc
mov
insl
xor
js
ds
fdivs
lds
ss
arpl
push
inc
mov
daa
xor
lahf
mov
insb
sarl
mov
lcall
pop
in
daa
hlt
pop
adc
fiaddl
mov
out
lahf
lahf
sbb
push
adc
dec
testl
mov
jo
mov
stc
mov
adc
test
pop
and
icebp
inc
mov
mov
pop
sbb
nop
inc
sbb
sbb
movsl
add
dec
fisttpl
inc
xchg
jmp
ret
lods
mov
sahf
test
frstor
notb
out
add
add
scas
scas
in
jp
loope
shrl
or
dec
inc
loopne
out
pop
imul
mov
jecxz
repnz
loope
aaa
into
inc
movsl
lds
sbb
mov
sub
rcr
push
xor
sub
into
das
pop
xchg
add
movsl
and
xor
or
repnz
push
jl
xchg
bound
out
fisttpl
pop
push
hlt
xchg
movsb
test
adcl
push
lods
les
test
call
xor
mov
dec
movsl
pop
les
lret
xchg
mov
addr16
int3
sub
dec
push
mov
subb
imulb
les
jo
mov
fiadds
inc
gs
sarb
out
sub
xchg
xchg
xor
sbb
cmp
jnp
dec
xlat
and
lea
mov
sbb
xor
scas
fsubrp
pop
inc
iret
pop
sbb
dec
push
fucom
ficompl
inc
out
and
lcall
bound
and
movsb
dec
jge
jge
iret
sub
push
push
jl
fisttps
dec
int
in
push
dec
and
mov
push
xor
outsb
xor
xchg
lret
iret
mov
and
fisubs
mov
sbb
xchg
xor
jg
xor
lods
pushf
dec
mov
cmp
add
addr16
push
mov
stos
repz
pop
loope
divl
push
add
jle
mov
int3
pusha
stos
int3
inc
inc
jae
cmpl
roll
dec
pop
aam
incb
pop
sub
in
insb
mov
pop
or
subl
or
cld
cmpl
xor
sub
scas
fstp
lahf
ret
out
out
pushf
into
dec
mov
dec
sbb
pop
adc
sar
dec
arpl
je
sub
sbb
sbb
inc
dec
daa
rolb
and
sub
adc
into
push
sub
xchg
repz
adcl
subl
fcmovnbe
pop
insl
pop
je
xchg
fadds
xor
lds
mov
pop
push
cmp
or
imul
cmp
fs
mov
enter
andb
ljmp
ljmp
inc
mov
cld
lock
xchg
leave
mov
dec
inc
mov
shlb
cmp
push
orb
mov
nop
mov
or
cs
and
insl
mov
aad
ficompl
sbb
sub
rorb
sti
mov
add
xor
push
push
shrb
test
ret
subb
mov
andl
iret
mov
repz
lock
mov
mov
fcmovb
in
xchg
add
sbb
outsl
scas
lcall
inc
int3
mov
lods
pop
imulb
cmp
mov
dec
sub
fisubrl
fcomps
jge
add
int3
jbe
icebp
test
fnstenv
sbb
ret
loope
sub
jle
pop
adc
sbb
or
icebp
sbb
icebp
pushf
lahf
test
les
adc
lds
jo
addl
push
and
add
jp
sbb
loop
out
test
xor
jge
mov
sbb
xor
pusha
js
cmpl
lods
cmpb
mov
xor
les
cwtl
nop
hlt
fcmovnu
nop
lock
cltd
or
cmp
adc
daa
xor
push
imul
leave
data16
loopne
mov
jo
jb
sbb
pop
imul
mov
aam
pop
jno
bound
mov
nop
push
sub
mov
sbb
pop
inc
add
jo
jecxz
push
lds
cmpsl
js
jecxz
ds
mov
mov
popf
inc
js
bound
cmc
into
fsubs
into
stos
jg
pop
insb
es
dec
aam
push
dec
and
and
xchg
iret
es
flds
std
sbb
mov
sbb
mov
add
in
pop
mov
pop
pop
inc
and
pop
pop
into
dec
or
test
sbb
and
data16
lahf
shrl
cmpsb
add
scas
pop
pop
repnz
push
aaa
pop
clc
mov
shll
push
sbb
or
popa
xor
or
pop
ja
movsb
fs
xor
push
cmp
lcall
and
into
push
gs
or
add
stos
daa
in
sub
jmp
test
mov
add
fwait
scas
xchg
fsubl
or
roll
inc
hlt
repz
dec
xor
mov
js
jge
mov
add
int
dec
xorb
lcall
cli
push
dec
leave
cmpsb
out
push
int
push
in
add
cmc
xchg
shll
sub
popf
sub
dec
pop
fcoms
sahf
xor
or
fldcw
or
popf
enter
repnz
or
jp
mov
gs
mov
pop
mov
push
pand
dec
mov
jno
fmull
mov
out
pop
mov
mov
idivb
scas
aas
jne
shrl
jae
dec
and
sbbl
lcall
push
insl
shl
insl
sbb
aaa
dec
mov
outsb
jns
aas
sub
lods
cli
lret
adcl
jle
cmpsb
arpl
mov
int3
mov
mov
xchg
das
dec
or
movsb
test
add
popa
sub
fwait
xchg
hlt
mov
fimuls
arpl
ljmp
test
loope
push
lock
scas
cs
or
popa
cmp
cmp
movsb
sbb
xchg
cltd
dec
ljmp
xchg
nop
cli
fbld
push
pop
cld
mov
jmp
cmp
and
jge
mov
jle
sbb
icebp
sbb
mov
test
aad
adc
andl
test
and
jecxz
pop
scas
mov
cli
mov
mov
lahf
cmp
dec
cli
add
or
cld
add
inc
test
in
mov
arpl
xchg
and
sbb
insl
movsb
mov
nop
sub
xchg
xchg
ret
jb
popa
adc
adc
xchg
inc
or
lds
sub
sub
fidivs
cld
mov
in
xchg
push
pop
in
push
add
cmpsb
mov
gs
arpl
gs
fidivrl
insb
jle
xchg
inc
jns
iret
fdivrl
cmpsb
movb
ljmp
sbb
sub
aam
fcmovnbe
stc
inc
rcll
shlb
add
mov
movsl
ja
mov
fiaddl
inc
or
nop
xchg
stc
dec
sbb
push
push
push
imul
in
movsb
daa
imul
dec
or
xchg
push
daa
dec
mov
iret
adc
pop
cmp
sub
dec
add
imul
add
jb
shlb
cli
mov
sbb
mov
movsb
xor
push
jg
repnz
cmpsl
in
lods
fwait
inc
jmp
xchg
jge
and
cltd
and
pop
and
outsb
roll
push
test
bsr
jecxz
sub
mov
jecxz
aam
mov
xchg
in
or
in
push
and
icebp
xor
andl
dec
hlt
sub
int3
inc
mov
push
mov
jo
aas
psubw
adc
jecxz
lods
push
jg
mov
aaa
jg
rcll
roll
imul
mov
push
shr
dec
push
cli
insb
lret
je
adc
lock
hlt
mov
aaa
or
sbb
add
ljmp
cmp
hlt
pop
mov
mov
inc
adc
add
push
stos
hlt
addr16
ret
pop
jno
cli
outsb
fsubs
mov
repnz
mov
push
icebp
popa
mov
push
and
arpl
mov
pusha
repz
or
scas
out
int
out
loope
gs
jge
popa
xor
sbb
insl
pop
mov
xchg
test
add
xchg
xor
ljmp
iret
shl
mov
jnp
daa
mov
ljmp
sbb
lea
sbb
mov
inc
pop
fistl
or
in
rsqrtps
je
jns
rorl
sub
stc
pop
cltd
in
or
lds
aam
pop
fstpl
push
push
jl
out
movsl
mov
call
pusha
sub
dec
rcll
sbb
jp
daa
bound
les
jno
aam
inc
and
in
sbb
or
cmp
mov
arpl
jecxz
clc
cmp
ss
xor
adc
mov
nop
push
sub
xchg
stc
push
enter
repnz
out
pop
jne
ljmp
mov
xlat
aam
incl
jmp
and
popf
sbb
and
add
xor
test
jmp
jmp
sbb
mov
mov
scas
pop
sub
xchg
mov
xchg
jo
jle
mov
rdmsr
cmp
push
fistps
mov
pop
fcompl
jge
nop
enter
lret
shl
popf
addr16
xor
sub
loopne
clc
push
loopne
lcall
mov
shr
loope
popf
outsl
hlt
ljmp
cmp
pop
inc
out
dec
out
lods
or
fsubp
loopne
pop
out
xchg
mov
mov
lods
lea
mov
mov
pop
or
push
mov
dec
mov
lret
mov
dec
jb
pop
sbb
and
dec
daa
and
sub
aaa
sub
movsb
mov
cmp
inc
data16
sbb
aaa
mov
leave
jns
sub
insl
add
aam
stc
inc
aam
pop
push
dec
add
mov
dec
push
out
fcomi
subb
jl
and
addb
inc
inc
scas
cwtl
xchg
sub
hlt
jae
ret
fistpll
ja
jp
icebp
sub
fstl
mov
ljmp
jge
push
fmull
insl
cmp
and
pop
mov
sbb
pop
inc
loope
daa
mov
ret
xchg
and
mov
push
sbbb
bound
xor
call
jl
adc
push
dec
or
ljmp
stos
or
adc
xchg
dec
test
ficoml
popa
push
mov
mov
xlat
xchg
sbb
xchg
mov
adc
push
pop
fimuls
je
in
push
pop
lds
jne
in
and
in
mov
inc
mov
sub
loopne
and
out
imul
cmpsb
shrb
std
lahf
cmc
call
lahf
jae
mov
adc
xor
imul
ret
lcall
mov
mov
adc
into
test
repz
and
add
add
out
inc
xchg
dec
out
cmp
add
popa
rclb
jg
ljmp
pop
into
inc
shrb
mov
loope
pop
into
dec
das
es
in
jle
sub
cmc
aaa
pop
icebp
out
jno
cmp
xchg
shll
sub
xchg
ljmp
push
pop
es
lock
mov
cltd
or
movsb
shr
fidivs
mov
rcrl
insb
mov
sub
xchg
adc
insb
adc
pushf
pop
cwtl
cwtl
jns
xor
ds
push
pop
or
std
nop
pushf
inc
pop
fldcw
rcrl
add
push
mov
mov
insl
mov
cmpsl
lahf
xchg
mov
xlat
andl
lcall
call
jp
and
aaa
inc
das
cmpsb
xor
loop
cli
popa
lds
pop
sub
pop
mov
leave
add
push
daa
inc
ret
insb
mov
dec
lock
mov
pop
and
jo
jl
pop
insb
mov
leave
jns
insb
inc
jns
mov
xchg
adc
sahf
adc
cld
jo
jl,pn
paddsw
fistpll
ss
daa
test
hlt
push
add
sbb
cltd
movsb
and
inc
shlb
add
and
test
mov
lcall
outsb
movl
in
pop
jb
adc
sar
xchg
mov
insb
cli
sbb
pushf
in
enter
bound
cld
cld
cmp
es
mov
push
xchg
sbb
push
ljmp
stos
jp
arpl
jp
outsl
cmp
xchg
in
stos
aaa
sti
in
push
adc
testl
stos
jo
adc
push
ja
stos
into
push
int3
mov
xchg
sbb
aaa
ss
jns
lods
xor
xchg
mov
jne
xor
in
jecxz
mov
out
push
in
pop
pusha
jne
dec
dec
jns
and
cmp
inc
and
std
aad
lea
xor
adc
mov
pop
lret
mov
xchg
cltd
jnp
add
push
push
sahf
sbb
jge
xlat
imul
cltd
je
call
jmp
and
jmp
hlt
inc
pop
mov
loop
loop
jp
icebp
sbb
inc
push
rcr
hlt
dec
mov
out
jg
mov
or
or
in
insb
test
jle
dec
divb
cld
xor
in
or
mov
jecxz
sub
sub
mov
jge
mov
pop
xor
dec
iret
sarb
fwait
test
pop
mov
ljmp
sub
pop
sub
imul
leave
sbb
test
jns
and
ljmp
xor
aas
loope
cmp
and
shlb
xchg
xor
adc
jp
cmc
or
mov
pop
movsb
lock
xchg
mov
daa
aad
lret
adc
mov
aaa
mov
cmp
push
mov
retw
or
in
dec
push
inc
sbb
movsl
pushf
stc
or
popf
lods
ss
sbb
adc
push
out
dec
jp
lods
or
fistl
xchg
mov
fnsave
push
xchg
mov
jl
add
bound
or
pop
sbb
aad
mov
inc
pop
and
aam
stos
std
or
xchg
jo
gs
aaa
es
stos
xchg
out
pop
push
pop
js
faddp
insl
cmp
dec
in
repz
xor
lods
cmpsb
stos
iret
lahf
int3
adcb
pop
rcr
aaa
stos
inc
jbe
cmp
and
push
mov
testl
sarb
int
dec
cmp
fwait
mov
es
jge
stos
je
dec
sbb
out
into
dec
das
call
pushw
pop
rcr
add
cwtl
shrl
in
push
ja
sbb
lahf
orl
mov
test
dec
test
leave
cltd
push
xchg
jae
imul
pop
fldcw
mov
push
mov
inc
lea
fstpt
push
test
sbb
dec
nop
outsl
test
sub
adc
adc
out
pop
lret
stc
mov
movsb
pop
pop
inc
pop
xor
stos
ljmp
adc
cmpsl
shrb
mov
dec
rcrb
push
aad
fs
xor
imul
sbb
push
lods
stos
jmp
fidivrs
push
sub
and
and
push
scas
push
fdivrp
cmp
xor
mov
stos
mov
ss
adc
cmp
adc
icebp
push
sti
lock
add
push
cmpb
or
leave
pop
mov
mov
imul
pop
xor
test
out
sub
rcll
pop
mov
inc
cmp
dec
je
insl
sbb
andb
sub
or
aad
incb
fstps
fwait
xchg
dec
xchg
jmp
jge
imul
inc
sbb
clc
in
jg
ljmp
dec
sahf
sbb
insb
int
loop
sbb
ficompl
aam
aam
testb
aaa
sbb
cmpsl
into
add
xchg
mov
fwait
mov
fcom
jp
and
in
sarl
notb
add
lods
dec
sti
stos
pop
mov
mov
push
add
rorb
icebp
je
stc
inc
shlb
push
cs
pop
mov
popa
jmp
dec
outsb
cmp
pmaxsw
fsubr
and
sahf
or
push
dec
icebp
fnstcw
xchg
mov
scas
pusha
and
add
xor
ret
add
add
push
loopne
xchg
cmc
adc
outsl
jae
fwait
mov
inc
mov
inc
int
sbb
leave
popf
test
xor
sub
mov
pop
dec
out
stos
popf
adc
xchg
push
xor
pop
xor
int3
jg
adc
aaa
inc
loope
mov
xchg
loope
ss
jmp
xchg
rclw
maskmovq
inc
in
and
push
or
jae
sti
insb
mov
add
stos
jnp
xor
aad
push
insb
ror
sub
jle
or
xor
fadds
popf
mov
loopne
sarb
cmp
add
or
mov
je
fcomi
or
lods
std
mov
mov
mov
pop
incb
mulb
and
in
xchg
xor
test
pop
insl
sbb
sbb
push
pop
fwait
adc
pop
addr16
sub
adc
mov
mov
pop
aad
in
xchg
fdivrl
data16
mov
push
push
sub
dec
mov
notb
mov
hlt
int3
mull
push
or
ficoms
pop
or
push
pop
cmp
or
roll
int
jg
push
fbld
cmc
jno
insb
rcll
jecxz
cld
mov
push
lods
iret
add
or
std
in
into
or
rcr
test
popa
loopne
mov
mov
lcall
push
cmpsl
lea
or
test
repnz
fnstsw
mov
xchg
xlat
inc
rcll
xor
jl
xchg
cltd
xor
sbb
mov
inc
lea
clc
jno
mov
pop
lods
pusha
push
jl
pop
sti
dec
data16
pop
sub
mov
fwait
push
mov
mov
sbbb
addr16
lret
jo
out
adc
stos
insb
and
sahf
sbbl
aas
pop
xchg
iret
pop
sbb
dec
pop
std
dec
in
fimuls
mov
pop
mov
push
int3
jle
mov
icebp
jmp
cmp
movsl
jle
pop
sbb
pop
sahf
insb
insb
lahf
inc
and
push
pop
and
lds
mov
push
filds
test
dec
mov
repnz
clc
fwait
mov
inc
pop
outsl
add
das
inc
or
mov
xor
jmp
bound
adcb
rorb
pop
sub
xorb
mov
sub
scas
daa
pop
adc
cmp
and
pop
dec
iret
pop
test
pop
push
mulb
pop
sbb
imul
mov
add
mov
cmp
iret
adc
mov
and
push
lea
cmc
jae
mov
pusha
mov
sti
enter
cmp
outsl
test
xchg
jl
es
pushf
mov
fwait
cmpsb
data16
cmpb
mov
push
je
mov
and
leave
sub
or
lret
xchg
sbbb
lahf
aam
imul
add
call
aam
pop
hlt
insb
lock
pop
movsb
out
xor
repnz
adcl
cltd
add
inc
mov
push
sbb
xchg
sti
rolb
movsb
mov
adc
psadbw
cmp
add
loop
push
jae
cmp
jae
pop
ret
dec
jmp
cmpsl
sub
sarb
sbb
test
je
test
and
push
inc
popf
xchg
pop
push
or
and
push
mov
push
or
bound
pop
cmp
dec
add
mov
fsubl
xor
pop
mov
cld
mov
scas
adc
ss
outsl
lea
ss
out
cmp
fstpt
repnz
or
xchg
jns
nop
lea
dec
jnp
mov
test
sub
adc
ret
add
stos
iret
cmpsl
pop
test
or
or
movswl
int
pop
imul
push
imull
addr16
pop
clc
in
fs
test
add
push
cmp
cmp
hlt
aaa
test
repz
dec
scas
fwait
or
fidivs
pop
or
jle
mov
mulb
xor
pusha
ss
fstpt
add
in
jae
hlt
mov
sbb
je
push
sub
push
test
sbb
push
dec
push
pop
cs
jge,pt
ficomps
mov
sahf
or
jle
push
dec
push
pop
cs
jge,pt
ficomps
mov
sahf
or
jle
push
dec
push
insl
jge,pt
or
mov
scas
in
mov
sbb
push
dec
push
pop
cs
jge,pt
fidivs
inc
lods
dec
stc
inc
push
and
inc
add
push
into
inc
fiadds
fisttpll
sahf
cmc
outsb
in
aam
les
cmpsb
jle
push
test
je
fs
push
into
inc
fidivs
and
adc
add
in
in
aam
lret
cs
ds
push
test
insl
out
jge
dec
into
pop
fisubrs
mov
in
push
and
jl
pop
enter
sbb
stos
xor
addr16
ret
jge
jb
sub
pushf
or
mov
cmc
out
mov
push
push
and
xchg
adcb
sub
pop
in
mov
xchg
push
jnp
mov
cwtl
sub
stc
mov
pop
mov
dec
dec
sahf
mov
pop
or
jne
je
popf
iret
pusha
lret
and
into
jg
in
loope
cmp
pop
lock
and
jmp
and
scas
cmp
pop
jno
enter
jg
mov
insl
dec
out
jnp
sete
imul
gs
or
xchg
pop
icebp
shl
lret
test
mov
into
inc
fisubs
scas
xor
adc
sbb
jle
dec
fstpl
cs
pop
sbb
xor
pop
jmp
out
hlt
add
xor
jmp
mov
into
xor
pop
lret
and
adc
push
sahf
mov
adcl
mov
iret
push
loop
loopne
adc
sub
jl
and
adc
add
hlt
outsb
in
aam
les
movsb
ds
push
test
je
fs
push
into
inc
fidivs
and
adc
add
hlt
outsb
in
aam
les
movsb
ds
push
test
je
dec
jmp
cmp
addps
test
fld
loopne
ja
mov
dec
add
insb
fdivr
ljmp
pop
ljmp
repnz
xor
in
ja
sarb
adc
imul
fs
sti
cmp
inc
rol
cli
bound
xchg
fcoml
push
rolb
rcrl
pop
lcall
gs
jmp
push
fists
ljmp
push
mov
hlt
movsl
jmp
enter
mov
cmp
fisttpll
int3
xor
cmp
cld
cmpsl
jmp
add
rcrl
adc
xor
pop
out
push
or
insb
test
xor
bound
mov
adc
xor
cli
adc
xorb
cli
adc
out
lods
xchg
mov
outsl
xchg
ja
fldl
pop
leave
inc
clc
lret
xchg
insb
outsl
inc
xchg
int3
pop
mov
sti
into
scas
xlat
popf
test
shll
movsl
cmpsl
jecxz
fdivl
aam
add
mov
cmp
push
mov
pop
xchg
push
mov
rolb
insb
dec
fwait
cmp
and
mov
add
fnstcw
dec
hlt
push
or
mov
push
xor
in
ja
push
or
mov
jg
push
sbb
pop
sbb
push
pop
aam
test
xchg
inc
dec
sbb
pusha
sub
sahf
jns
push
lret
sub
jne
mov
pop
add
xchg
popf
push
daa
or
mov
mov
xor
jne
push
xchg
adc
dec
fbld
dec
push
mov
das
mov
aam
sar
and
es
lods
mov
push
and
mov
mov
mov
mov
xchg
jmp
pop
ds
sbb
ljmp
jle
push
ret
aaa
jge
enter
jp
fcoml
test
pop
int3
dec
mov
xchg
push
out
dec
cli
rcrb
mov
lea
dec
mov
les
scas
loopne
iret
mov
bound
ja
jecxz
xchg
out
jecxz
dec
mov
stos
mov
add
test
call
mov
daa
xchg
sbb
mov
mov
in
js
stos
xchg
sub
cmc
or
subb
rep
call
movsl
pop
mov
jge
sti
test
pop
aad
lds
push
lcall
sbb
out
pop
cltd
and
mov
fsubrs
mov
std
std
jp
in
das
test
cmc
adc
add
pop
jbe
pop
cltd
jmp
cmpb
out
les
js
fstpt
xor
add
add
in
xchg
pusha
das
lahf
stc
and
clc
jnp
dec
mov
in
shl
jb
fbstp
push
push
movsl
inc
stos
jae
popa
xor
test
pop
andb
xor
pop
xchg
lret
xorl
daa
int3
or
dec
push
stos
mov
jne
subb
mov
pop
and
push
inc
add
pop
xor
lods
ljmp
inc
lret
call
mov
out
cmp
inc
pop
inc
jl
lcall
sbb
xchg
sub
in
sub
out
dec
push
inc
inc
push
rolb
scas
sti
out
pop
ja
bound
clc
dec
mov
mov
xchg
rorb
push
or
mov
adc
enter
pop
hlt
pop
lods
sbb
stos
adc
inc
cmp
orb
orb
dec
dec
les
ficomps
xor
mov
xchg
mov
ret
ret
jl
aad
ret
add
insb
shlb
xchg
and
or
lahf
aaa
data16
cmp
js
jne
adc
inc
out
pop
aas
mov
xchg
jnp
rorb
xor
je
mov
pop
dec
jg
or
aaa
dec
lahf
sub
rcrb
jns
mov
jge
jge
or
mov
scas
repnz
push
shlb
cmpsl
lret
dec
in
adc
pop
gs
push
in
pop
lret
xchg
loop
fisttpl
clc
popa
fdivs
cmpsl
adc
or
add
or
push
pusha
jae
jnp
daa
xchg
scas
out
popf
stc
int3
mov
sbb
inc
cmc
xchg
dec
mov
pop
adcl
out
add
push
call
xchg
jmp
cmp
jp
dec
cmp
push
jnp
repnz
cmp
push
lds
adc
jbe
jb
dec
enter
lahf
xchg
and
push
test
test
rorl
mov
xchg
hlt
dec
shrb
jl
je
sbbb
jnp
mov
inc
and
daa
mov
push
mov
mov
push
mov
mov
or
dec
fldenv
jg
jmp
xor
iret
aam
pop
imul
mov
mov
ja
loopne
inc
add
mov
incl
ret
lcall
mov
stos
out
dec
fldenv
fs
xor
nop
or
mov
nop
pushf
mov
pop
inc
add
fistpl
and
cld
mov
push
scas
add
inc
sar
insl
or
sub
stc
inc
sbb
and
mov
cmp
cmpsb
push
mov
add
cmc
pop
push
icebp
or
adc
adc
popl
mov
lds
dec
roll
sbb
sub
ret
lods
inc
fnstenv
enter
or
pop
push
outsb
mov
mov
xor
or
push
cmp
stos
mov
and
aaa
add
sbb
lea
test
dec
mov
icebp
add
test
lcall
sub
jae
lret
sub
or
pusha
popf
call
into
add
cltd
sti
fdivr
insb
movsl
inc
xor
out
icebp
das
mov
sbb
jbe
rorb
jmp
mov
push
lea
push
push
pop
mov
sub
fwait
aas
mov
std
filds
ss
loope
popa
xor
outsb
iret
lahf
outsl
ret
pushf
or
int
pop
inc
jge
or
inc
xchg
in
arpl
pushf
jp
insl
mov
fadds
pop
cmp
cld
ret
sti
cmp
pop
in
push
add
ja
mov
inc
loopne
std
sbb
pop
in
and
sbb
shrb
dec
sbb
call
in
mov
add
out
iret
arpl
pop
push
es
dec
imul
and
pop
mov
jo
pushf
push
push
cltd
mov
cltd
xor
cmp
lret
cmp
mov
das
sbb
sub
dec
ffreep
jbe,pt
arpl
fstpt
xchg
imul
sbb
aas
inc
in
in
btr
or
mov
mov
test
in
cld
add
sti
or
rcrl
mov
pushf
lahf
push
popf
jne
aam
sarb
arpl
cmp
push
adc
inc
and
pop
aaa
sbb
gs
insl
pop
mov
xor
notl
add
bt
push
mov
and
fldenv
or
cmpsb
or
mov
sarl
jecxz
jge
push
mov
int
leave
daa
stos
xchg
dec
sar
or
out
nop
xchg
cmp
jmp
data16
xchg
and
or
shr
cld
cmp
imulb
fadd
xor
jne
lahf
xor
incb
inc
gs
or
mov
push
mov
data16
movsl
cmc
ja
sbb
jbe
pop
out
mov
jp
push
mov
inc
ficomps
push
gs
xor
jge
addl
ret
outsl
xor
movsb
sub
sbb
mov
int3
int
in
cmpsl
jge
jo
nop
bound
cmp
arpl
cmp
and
in
test
flds
dec
mov
jl
pop
stos
out
adc
std
cmp
xor
and
xchg
fisttpll
cmovae
jnp
addr16
fcomps
fstpl
dec
scas
mov
xor
bound
shl
or
orl
adc
int
mov
jno
push
and
inc
inc
sahf
test
mov
and
cli
jle
jae
movsb
or
loop
mov
jmp
inc
xchg
fisubs
xchg
mov
ja
out
mov
jmp
xchg
das
sbb
mov
insb
shlb
lret
sub
push
xor
mov
inc
push
push
sub
mov
mov
addr16
pusha
or
sbb
dec
cli
leave
xchg
clc
out
xor
test
int
jbe
popf
lcall
mov
es
jns
leave
and
adc
push
mov
mov
xor
add
pusha
sub
arpl
bound
xchg
fsubrs
mov
sbbb
xlat
mov
sbb
pop
pop
sbb
xchg
iret
mov
mov
sbb
test
push
push
and
test
dec
mov
mov
pushf
out
mov
jg
mov
adc
fisttpll
pop
enter
dec
bound
fisttpl
sti
cmp
ljmp
cmpxchg
xchg
in
dec
jg
dec
add
dec
cmp
repnz
test
sub
dec
stos
fcmovb
repnz
jge
out
dec
data16
aam
inc
sub
jne
testb
inc
bound
shl
inc
jnp
xorl
jbe
ja
cmpsl
gs
mov
xchg
or
out
and
insl
cmpb
sub
shrb
loopne
sub
repnz
pop
imul
dec
shrb
cmp
mov
fs
jne
movsl
cmpsb
jbe
and
enter
fcmovnb
fcmovb
jecxz
fwait
arpl
enter
mov
cmc
sbb
xlat
stc
jmp
imul
jns
cmpsl
sub
or
fdivl
jo
push
cmp
fidivrs
nop
or
and
bnd
pop
insl
mov
inc
mov
xchg
adc
inc
sahf
pop
jl
je
add
shl
lods
js
mov
add
mov
jbe
cmp
movhps
cmp
mov
adc
mov
xor
scas
roll
jne
add
adc
fsubl
ds
adcb
out
mov
mov
in
jne,pn
lods
sub
testb
scas
ret
dec
data16
inc
js
inc
and
xor
mov
ret
sub
int
movsb
adc
daa
sbb
decl
mov
xchg
jbe
fsts
insl
and
icebp
jb
stos
ret
adc
pop
mov
pop
sbb
rcl
jb
dec
fdivrp
lret
dec
mov
mov
adc
pushf
jmp
mov
dec
shl
fildll
mov
push
outsl
mov
mov
subl
jmp
sub
fisubrs
in
aaa
adc
out
cmp
mov
and
cmc
push
cld
repz
rcll
mov
fcompl
sub
sub
int3
inc
enter
sbbb
adc
adc
mov
mov
fs
pop
inc
out
mov
aas
mov
or
xchg
jns
jmp
or
js
ss
and
test
subl
test
in
xchg
iret
call
mov
testl
xchg
and
fbstp
sti
loope
mov
inc
in
xchg
and
xchg
push
mov
imul
xchg
lds
std
fsubl
jecxz
adc
adc
in
outsl
sahf
or
into
imul
mov
adc
insb
xor
mov
add
loope,pn
jb
dec
push
loope
test
in
pop
jne
imul
mov
add
loopne
in
sbb
jne
adc
mov
sub
adc
and
ret
add
mov
lock
sbb
mov
fcompl
mov
insb
dec
xor
jno
notl
mov
cmp
push
das
adc
sub
jp
inc
jmp
rclb
and
mov
out
adc
nop
iret
push
mov
jecxz
mov
xchg
das
loope
imul
aaa
dec
mov
inc
imulb
insb
jp
call
or
mov
sti
cli
xchg
lods
aad
mov
out
xor
sub
adc
out
jae
ret
loop
sbb
adc
mov
sub
hlt
jae
jg
dec
sbb
test
dec
test
rcr
loope
mov
cmp
pop
mov
imul
xor
daa
int3
das
push
shl
divl
cltd
mov
push
jne
jo
jbe
inc
fucomp
pop
push
mov
inc
mov
nop
push
push
test
cmc
inc
rorl
test
pop
sbbb
push
jns
cmpl
cmpsl
subb
hlt
popf
in
inc
fimull
xchg
icebp
je
jae
std
mov
std
cmp
pop
out
stos
mov
sub
movsl
in
pop
or
inc
pop
dec
popf
xchg
mov
push
stos
adc
adc
sbb
and
and
push
sbb
sbb
lahf
dec
rcll
repz
inc
push
into
mov
adc
inc
cmp
ja
sbbl
lea
or
xor
jb
ja
sub
sub
bound
inc
inc
or
mov
mov
imul
inc
arpl
mov
cmp
jge
add
bound
or
xchg
std
sahf
mov
les
ljmp
and
and
fcompl
mov
cmp
jns
mov
in
sbb
mov
sub
bound
popa
jb
rorb
rol
and
pop
jp
aas
inc
adc
imul
mov
daa
sub
add
jnp
jnp
rcrb
movsl
stos
out
stos
or
je
fcomps
push
stos
lock
iret
dec
add
out
sub
iret
jne
sub
push
loope
jns
cmc
cmp
mov
sbb
cmc
cltd
out
cmpsl
loop
jge
xchg
clc
popf
int3
movsb
cmp
iret
das
or
mov
gs
idivb
or
mov
pop
jae
movsl
test
lret
fwait
jle
cli
roll
cmp
cmp
xchg
stc
icebp
xchg
hlt
mov
filds
or
adc
mov
sarl
mov
scas
xor
imul
iret
xchg
lock
in
lea
mov
test
in
push
aad
shr
xchg
or
ret
jle
xor
cmp
lcall
adc
add
out
test
jno
iret
addr16
fsubl
jl
aad
es
xchg
out
test
adc
int
getsec
jecxz
lock
dec
sahf
hlt
inc
dec
jmp
aam
fsubs
xchg
xor
fs
stc
pop
and
mov
ljmp
sub
inc
fucomip
mov
mov
daa
dec
ficompl
cmpsb
mov
loope
out
pop
mov
scas
in
idivb
pop
outsb
xchg
mov
mov
dec
jns
aad
jo
into
sub
in
gs
rcrb
pop
mov
xlat
and
sub
pop
scas
dec
xchg
sahf
adc
cwtl
aad
cmp
jb
sbb
addr16
fnstenv
out
testl
and
or
insb
jb
shll
fwait
cmp
nop
mov
addr16
scas
lcall
dec
es
inc
xchg
jbe
pop
adc
xor
mov
aad
pop
push
jnp
cmp
je
lods
rolb
fdivl
inc
movsl
inc
xchg
loop
dec
mov
lods
xchg
js
in
xchg
cmp
add
bound
inc
cld
mov
hlt
adc
fisubl
sub
nop
sub
ds
sahf
mov
fwait
iret
jae
cmpsl
inc
insl
mov
fisttpl
je
out
inc
out
xchg
ljmp
lods
sbb
adc
pop
pop
jmp
cmp
and
jmp
fidivrs
pop
add
test
repz
divl
iret
insb
inc
hlt
sbb
mov
sub
push
push
mov
pop
hlt
loop
mov
xchg
vmptrld
fs
xchg
jbe
xor
cmp
xchg
dec
adc
movsb
test
int3
sub
outsl
xchg
arpl
rolb
movsb
xchg
insb
inc
lock
aaa
xchg
aaa
sbb
dec
mov
sub
jge,pt
cmc
les
push
and
add
jne
jmp
add
inc
xchg
repnz
test
shrl
loopne
or
outsl
ja
pop
adc
es
mov
lcall
lock
in
dec
out
repz
loop
add
ficoms
vmovsd
jg
adcb
xchg
mov
hlt
repnz
mov
cmpxchg
sbb
out
mov
inc
roll
test
pop
inc
es
dec
ss
in
aas
dec
cmp
mov
bound
xor
stc
sar
adc
mov
rorb
popf
sub
lret
mov
cld
xor
inc
out
out
inc
mov
hlt
lret
adc
mov
aad
pop
xchg
xor
cli
pop
mov
and
mov
test
cmp
jge
rorb
sub
jne
add
ror
xchg
xor
or
sbb
movsb
xchg
bound
stos
sbb
loopne
jne
xchg
stc
lods
mov
jge
ja
das
sti
dec
mov
sarb
cmc
repnz
out
stos
inc
arpl
mov
dec
push
out
into
adc
mov
push
push
out
clc
mov
loop
jl
mov
jl
dec
mov
daa
or
fists
int
push
fiaddl
or
out
mov
mov
outsb
pop
mov
ret
jge
jecxz
popa
pop
xrelease
pop
xchg
movsb
mov
jmp
xor
lods
xchg
lcall
mov
jge
adc
xor
outsb
jmp
inc
int3
std
cmp
dec
mov
loope
dec
or
iret
dec
cmc
loope
xor
outsl
xchg
test
fs
ds
aam
mov
mov
in
in
cmp
leave
jp
cmc
aaa
cs
sub
jl
test
sbb
repz
adc
ss
and
in
jge
jns
jno
xchg
mov
out
jae
sbbb
aad
fbld
rol
xor
xchg
sti
das
dec
cmp
test
push
popaw
into
or
stos
loope
leave
pop
ret
stos
out
test
enter
mov
loope
or
push
push
jbe
push
adc
cs
bound
inc
and
out
xchg
insb
rorl
pop
pop
push
stos
sahf
ds
mov
das
imul
mov
xchg
xchg
add
or
cmp
ja
push
mov
lods
pop
test
fs
leave
cmpsb
loopne
inc
out
inc
sbb
enter
shlb
jg
sarb
sti
adc
jp
add
out
mov
xor
xchg
repnz
push
xchg
jnp
and
hlt
cmp
add
pop
jnp
adc
lcall
xchg
aas
xor
sub
dec
add
xorb
add
repz
jns
adc
jo
xchg
sub
and
push
out
pop
xchg
xchg
jnp
cmpsb
data16
jp
test
in
sub
in
jo
shlb
or
daa
mov
mov
std
aad
push
enter
in
rcrl
arpl
add
int
iret
push
lds
andb
or
stos
daa
push
inc
xchg
add
in
and
and
std
sbb
hlt
jno
adc
push
inc
mov
test
xlat
xor
sub
xchg
nop
sbb
mov
lds
cmp
cmp
rclb
or
xchg
mov
jmp
mov
mov
push
subb
jno
lahf
dec
push
mov
fdivl
mov
stc
bound
outsl
jae
mov
mov
leave
in
gs
testb
mov
push
add
jg
iret
sbb
arpl
xchg
rcr
pop
imul
add
xchg
and
jl
sbb
adc
push
adc
cmp
or
push
cmp
ffreep
or
or
jae
pop
imulb
sub
rclb
xchg
add
je
je
cltd
cs
aam
add
mov
jne
dec
ss
add
jnp
push
jp
jl
sub
movsb
imul
ss
dec
mov
pop
dec
jp
cmc
mov
push
lret
ficomps
xchg
xchg
mov
pushf
es
je
movb
sar
sti
cmp
jl
aas
aad
subl
jecxz
dec
push
or
push
push
adc
add
stmxcsr
jg
jne
sub
jno
mov
xchg
xchg
jbe
adc
pop
mov
lcall
iret
mov
jne
cmp
push
mov
scas
jge
sub
xchg
lcall
mov
icebp
aaa
aaa
imul
mov
fucom
aaa
mov
lock
aas
mov
nop
pop
dec
in
push
repnz
scas
pop
cwtl
sub
mov
iret
inc
fidivs
and
adc
add
hlt
outsb
in
aam
les
movsb
ds
push
test
je
fs
push
into
inc
fidivs
and
adc
add
hlt
outsb
in
aam
les
movsb
ds
push
test
je
fs
push
into
inc
fbstp
and
adc
add
hlt
outsb
in
aam
les
das
movsl
ds
push
xchg
je
data16
push
into
inc
fidivl
scas
and
xchg
push
test
xchg
sbb
jle
les
ret
cmpsb
sub
imul
loope
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
stc
and
int
std
lret
mov
movsb
lods
ss
mov
insl
dec
outsl
cmp
sbb
mov
lret
popf
stos
lea
pop
push
cmp
insl
jp
sub
sbb
sbb
dec
in
hlt
movsb
test
xchg
test
dec
ja
or
insl
push
pop
pop
arpl
push
sub
fimull
stos
push
inc
and
movb
sub
push
rorl
push
adcb
pop
jne
adc
pop
and
fildll
insl
lds
cmc
pusha
add
scas
dec
scas
mov
jmp
xchg
leave
mov
lea
dec
call
rol
ss
aas
std
fldl
stos
dec
gs
push
jnp
push
ficomps
sub
sbb
out
cli
add
inc
mov
add
cmp
insl
jg
sub
add
std
xor
inc
cmpsl
inc
insb
xchg
pop
shrl
jge
dec
jns
sbb
or
lret
popf
rorb
mov
fs
jb
and
sub
cwtl
int
cld
mov
aad
mov
jp
cmp
dec
jo
pop
jae
outsl
inc
mov
int
lea
mov
sbb
or
cs
outsl
inc
bound
dec
dec
xchg
pushf
xchg
jmp
mov
push
pop
jge
insl
cmp
or
lret
popf
stos
lea
pop
push
pop
jge
insl
cmp
or
sbb
or
jne
inc
call
adc
cltd
es
popa
popa
cmpsl
addr16
and
adc
fildl
imul
adc
rolb
adc
and
neg
insb
jecxz
add
push
jp
fmul
js
cwtl
pop
cmp
inc
push
jle
push
icebp
imul
xor
mov
xchg
mov
add
jmp
dec
mov
insb
std
cli
nop
call
loop
divl
dec
cmp
scas
mov
dec
movsl
stc
adc
push
fwait
movsb
popf
inc
scas
mov
or
push
outsb
mull
out
mov
and
adc
xchg
ret
scas
sbb
ficompl
dec
pop
leave
sub
cmpsl
stos
inc
push
or
test
xor
mov
add
and
pop
push
loopne
xchg
out
and
test
or
xor
xlat
cld
jno
cvtpi2ps
movsb
and
or
pop
lods
mov
lahf
jns
out
in
shll
and
addr16
and
push
int3
stos
jg
add
and
lds
xor
popa
cli
lods
clc
clc
jbe
ret
mov
mov
inc
push
sbbl
sub
pushf
dec
insl
xchg
mov
int
leave
push
out
mov
jmp
push
cwtl
add
out
jge
and
cmp
call
loop
mov
hlt
mov
sub
dec
adc
dec
rcrb
cmp
jge
arpl
add
pop
jo
js
popf
cmp
xchg
xor
mov
sub
and
je
cli
aaa
aas
inc
addl
cmp
scas
xchg
stos
jle
in
lcall
loopne
enter
sbb
orl
jne
cmp
int
mov
or
xorb
stos
push
xchg
lds
mov
dec
push
cmp
repnz
or
mov
dec
add
pop
loop
add
gs
or
push
cmp
pop
xchg
push
scas
vmulss
popl
in
jbe
add
xor
fs
testb
in
out
add
les
pop
cld
pop
lret
push
mov
mov
pop
enter
or
cmp
stc
inc
dec
cld
or
aad
add
sub
insl
test
xchg
add
and
lahf
sbb
lcall
adc
stos
sbb
in
leave
xor
or
out
imul
arpl
outsl
pop
mov
outsl
fnstsw
lret
idivl
test
dec
ljmp
lock
pop
movsb
mulb
sarl
notl
xchg
mov
push
rcl
inc
or
mov
faddp
int3
push
insb
loope
cmc
push
ds
lret
mov
ja
dec
jge
xor
mov
cli
setb
pop
imul
push
dec
xchg
test
idivl
lds
or
maxps
loop
push
notb
mov
mov
jmp
xchg
sbb
or
jmp
sar
cmc
aam
andl
pop
pop
adc
mov
lahf
pop
pop
mov
aad
sti
cmpsb
adc
cld
lcall
leave
ud2
xchg
mull
movsl
test
jbe
and
pop
xor
ja
sub
jmp
int3
inc
std
data16
jnp
popa
lea
jae
fdivrl
in
xchg
stc
add
ficoml
xor
push
dec
mov
sbb
adc
xor
mov
mov
xor
das
lock
pop
mov
int
inc
jne
loop
push
mov
dec
jns
pop
adc
mov
loopne
adc
test
xchg
push
add
sub
int
dec
lcall
fcomps
sub
aaa
imul
fidivl
mov
mov
xchg
mov
sub
cmp
cmpsb
pop
jo
les
out
mov
xchg
int
and
sbb
mov
lds
movsb
es
ljmp
hlt
or
ja
rorl
test
int3
lods
jnp
dec
pop
cmp
or
notb
inc
pushf
decl
maxps
dec
test
add
jge
test
dec
fisttpl
pop
mov
mov
mov
sti
xchg
xor
jl
mov
xor
fwait
and
outsl
jecxz
mov
in
fxch
in
insb
rorb
lds
adc
xchg
mov
cmp
xchg
push
ss
cmp
cli
xlat
test
jmp
cmc
ja
ljmp
sub
mov
jmp
push
xchg
and
inc
ret
scas
ficoms
in
push
lods
cld
pop
cmpsb
hlt
mov
fstp
sbb
sub
cmp
cmp
mov
dec
fs
std
lods
lock
or
mov
mov
in
inc
mov
lds
jl
das
adc
sti
aaa
aad
outsl
dec
iret
push
orl
dec
into
mov
pusha
push
aas
test
sbb
and
in
and
shll
mov
mov
enter
hlt
gs
jmp
jp
ja
outsl
jne
insl
inc
fs
sub
xor
mov
aas
test
xorb
popa
rolb
cli
push
sbb
fiaddl
scas
bound
rclb
lock
lahf
mov
xor
adc
jle
push
and
cmp
dec
mov
push
jo
or
mov
add
cli
cmpsl
add
sbbl
cmp
data16
jo
pop
adc
add
iret
and
pop
xor
mov
jnp
xchg
repz
daa
push
rorl
hlt
pushf
or
movsl
out
add
xchg
loope
cmp
pop
mov
cmp
mov
mov
mov
bound
xor
mov
iret
and
sub
xchg
cmp
fcompl
dec
andl
ljmp
add
adc
shrb
outsl
loope
pop
jl
add
push
push
sahf
lret
mov
call
sub
mov
loopne
decb
inc
addr16
mov
enter
subl
nop
call
fwait
and
lahf
shl
sub
push
mov
sbb
mov
test
out
rorl
aam
or
iret
xchg
insb
add
subl
ret
inc
pop
test
shlb
mull
stos
xchg
std
dec
jbe
sbb
aaa
lods
mov
je
mov
testb
dec
and
std
xchg
das
lret
es
stos
lcall
jecxz
fistps
sahf
and
cli
jg
int
outsl
outsb
pop
mov
fsubrl
push
lods
bound
mov
mov
dec
mov
lods
xchg
jno
ret
call
sti
xor
imul
data16
pop
dec
pop
dec
add
sbb
arpl
lcall
xchg
adcb
push
mov
popl
xor
xor
rcrb
mov
jle
aas
test
and
rcrl
adc
shl
popf
insb
mov
adc
cmp
dec
aad
ret
mov
cmp
add
push
in
cmp
mov
or
pop
mov
test
movsl
pop
cltd
inc
cmpsb
rol
mov
cmp
mov
loope
lds
lods
push
xchg
lods
pop
aaa
ss
shrl
push
and
adc
jg
cmp
out
in
sbb
test
test
sub
andl
jno
cld
xor
pop
xchg
adcb
shlb
and
adc
jp
divb
stc
mov
sbb
lcall
cld
test
pop
aam
sti
fnstcw
fucomp
inc
int
cmp
shll
decb
sub
fcom
icebp
cs
push
or
jge
lods
int3
xor
or
dec
xchg
sub
xor
or
push
add
adc
subb
push
mov
add
push
mov
cmpb
fistps
dec
repz
testl
lods
aad
add
push
arpl
imul
popf
push
xchg
push
test
add
shll
sbb
mov
xchg
dec
loopne
in
icebp
xor
jle
cli
push
jecxz
cmc
xchg
mov
xchg
inc
sbb
xor
pusha
fmull
in
pop
int
clc
mov
loopne
or
ds
and
sub
gs
adcl
fcomip
pop
in
pop
andl
aam
pop
fcoml
or
jge
push
ss
enter
dec
hlt
cmpsl
xlat
popl
sub
iret
imul
mov
pusha
insl
xlat
jae
jo
dec
cmc
out
aam
mov
rcll
mov
fisttpl
add
mov
or
cwtl
xchg
pop
push
pop
inc
dec
mov
inc
adc
stos
rolb
in
sarl
loope
fwait
in
arpl
pusha
jmp
sub
jne
jl
mov
cwtl
or
js
add
stos
cmp
jae
and
sub
mov
pushf
xchg
fwait
insb
movsl
mov
fldl
mov
push
push
xchg
and
xchg
sub
xchg
xorb
outsb
and
test
mov
je
stc
jle
jl
daa
adc
fs
inc
in
mov
mov
mov
es
xor
mov
jle
xchg
mov
movsl
popa
jmp
ljmp
sahf
xchg
shl
out
mov
sbb
dec
std
push
jp
push
jge
push
mov
pop
mov
shl
xchg
shlb
repnz
lock
xor
imull
mov
jno
xchg
push
xor
movsl
xor
clc
adc
sub
shlb
mov
mov
iret
cltd
xor
pop
push
add
pop
sub
test
push
ds
lock
push
mov
cmp
daa
lahf
andl
jle
adc
add
jno
js
in
andl
push
jg
scas
add
pop
mov
imul
ds
call
add
mul
int
in
stos
xor
fwait
add
cli
daa
out
or
mov
dec
jne
popf
out
out
dec
push
outsb
add
mov
in
mov
mov
sarl
insl
mov
xor
jecxz
xlat
or
test
jge
lahf
adc
mov
scas
mov
imul
pusha
mov
inc
fidivrs
std
clc
pop
popa
push
xchg
repnz
pop
lret
mov
out
sbb
mov
imul
pop
mov
das
je
fdivrp
packssdw
adc
icebp
push
or
xchg
sbb
daa
or
xor
adc
fdivl
mov
mov
adc
sub
scas
into
sub
std
pop
je
jle
test
mov
idivl
jle
push
test
adc
popa
insl
pushf
in
pop
lahf
addr16
pop
sbb
adc
pop
pop
xchg
rorl
fiadds
sar
pop
in
and
mov
int3
decb
inc
imul
int3
push
adc
sub
aad
push
lret
data16
adc
or
dec
add
adc
and
cmc
inc
add
fmuls
ret
sub
push
cltd
and
loop
dec
add
jmp
insb
shll
jae
jp
aam
orb
int3
mov
stc
movsb
mov
sbb
jl
imul
sbb
stos
cs
dec
aam
and
subl
aas
jnp
ja
xchg
dec
arpl
dec
aaa
pop
lret
fstl
adc
mov
dec
cmp
jne
mov
movsl
pop
aad
push
popa
out
jge
ret
inc
mov
imulb
inc
pop
loope
adc
cmpsl
add
rolb
rcrl
jnp
dec
sbb
mov
mov
sbb
cltd
mov
subb
jmp
arpl
cmpsb
xor
adc
insl
repz
sbb
cmpsb
fs
jb
repz
xor
rorb
into
mov
jnp
push
inc
lret
add
mov
push
stos
aaa
xchg
mov
popf
xchg
insb
fwait
mov
push
sahf
ret
and
mov
sahf
test
jmpw
mov
rorb
fwait
rcrb
andl
mov
sti
mov
lods
add
adc
fisttpll
dec
loope
lcall
sbb
scas
sarb
call
pop
inc
inc
pop
dec
push
mov
adc
fmuls
xlat
or
gs
nop
ret
insb
stos
daa
push
add
addr16
adc
rcll
fldl
sub
mov
add
adc
jle
pop
or
or
sub
out
pop
test
adc
lods
addr16
fwait
and
sub
jl
sub
pop
push
inc
scas
loop
xor
cld
mov
fstl
pop
aad
xorl
lds
sbb
pop
scas
mov
xor
mov
fisubrs
dec
aad
inc
mov
adc
push
in
jg
sahf
or
scas
dec
xor
test
out
pop
outsb
cmp
cmp
into
push
sbb
cmp
sbb
sbbb
add
jnp
mov
inc
test
stos
xchg
xchg
push
adc
test
ljmp
push
sbb
jnp
lcall
push
subb
pop
cmc
mov
mov
jge
or
lcall
xchg
dec
xchg
int3
std
stos
sbb
mov
jl
pop
movsl
lret
mov
loope
cmp
mov
in
lret
cmp
mov
jne
fwait
addl
pop
repz
bound
xchg
cmp
lea
int3
sbb
xchg
sar
sbb
push
js
ja
in
out
push
out
fdivrp
inc
jne
pop
popf
movsb
aas
icebp
ret
pushf
movb
push
dec
xchg
bound
xchg
dec
inc
lea
adc
inc
enter
movsl
push
decl
fidivs
arpl
pop
and
mov
pop
pop
cmp
dec
add
mov
in
push
pop
leave
adc
cmpsl
std
pop
mov
cwtl
fwait
or
fisttps
test
dec
xchg
aas
aaa
jge
stc
cmp
shrb
xor
sub
add
in
dec
cmp
inc
js
jae
lret
push
loope
mov
rcll
mov
sbb
jmp
dec
inc
nop
add
scas
les
adc
push
lds
sbb
sbb
mov
movsl
sahf
mov
inc
sbb
ss
addr16
clc
sub
or
jmp
push
xor
jbe
insl
inc
ret
in
ja
xor
dec
aas
loop
add
addb
cmpsb
movsb
pop
arpl
jno
mov
daa
mov
and
mov
dec
cmpsl
out
outsb
negb
and
popf
push
imul
gs
jo
roll
popf
cli
jae
lahf
jg
test
mov
jp
mov
mov
inc
xchg
dec
les
test
mov
cs
jl
mov
div
insb
imul
inc
pushl
mov
dec
outsb
es
dec
aad
xorb
sarl
mov
jns
int3
push
jb
ja
cmp
dec
mov
adcb
inc
cltd
jle
push
stos
ss
push
inc
aad
aad
test
js
out
sub
jle
rcrb
das
dec
and
divb
iret
cmp
and
pop
lret
arpl
inc
roll
xchg
insb
hlt
dec
das
les
inc
mov
cmp
or
outsl
loope
cs
push
bnd
xor
inc
dec
pop
fistl
popa
and
inc
cmp
jmp
adcl
jge
sub
push
mov
lcall
clc
adc
push
pop
sbb
push
mov
sub
lea
jne
push
iret
scas
out
in
xor
cmp
fists
add
stos
pop
dec
add
pushf
mov
add
add
pop
adc
dec
rcrl
or
sub
pop
test
inc
inc
inc
jno
adc
adc
cld
mov
mov
push
jle,pn
mov
cmpsb
dec
fdivp
add
testl
jge
cmp
jle
rcr
incb
mov
dec
in
arpl
mov
mov
imul
or
cmc
loope
insb
test
repnz
into
rorb
test
and
clc
mul
shrl
cwtl
mov
cmpsl
push
xchg
jb
lods
mov
nop
add
sub
sahf
in
es
js
inc
js
fs
inc
xchg
jae
jns
lcall
lods
push
lahf
sub
sbb
fdivrl
fistpl
push
lret
outsl
push
sub
repnz
loope
sahf
ss
add
and
sbb
mov
cltd
pop
push
mov
xchg
pushf
push
xchg
arpl
clc
cmp
add
mov
xchg
imul
push
ret
pop
mov
or
pop
dec
stos
push
clc
push
xor
scas
xchg
mov
adc
push
push
and
stos
fisubl
jno
ret
scas
icebp
call
jecxz
adc
hlt
arpl
mov
sub
pmuludq
inc
cmpb
add
scas
mov
inc
mov
outsl
cmc
push
inc
push
add
sub
jl
fiaddl
push
jne
adc
and
not
jbe
and
shlb
insb
lods
dec
cmc
std
aas
and
ret
rcr
xchg
dec
in
imul
inc
cmp
adc
lcall
cmpsb
xor
cmp
sbb
xlat
sub
dec
arpl
dec
std
jg
ja
jns
andl
repnz
dec
sbb
xchg
or
mov
ljmp
sub
or
mov
daa
and
sahf
adc
mov
fisubl
in
add
push
pop
or
push
inc
scas
into
jecxz
mov
mov
leave
call
push
cwtl
sub
stos
inc
loope
movsb
popa
in
loop
lds
ret
hlt
cmp
icebp
add
fistps
cmp
inc
cmpb
mov
cmpsb
sub
adc
pop
cwtl
frstor
jb
adc
cmpsb
scas
int3
jns
inc
es
cmpb
in
xchg
jmp
in
in
in
out
ficoms
mov
xchg
enter
mov
jno
pushl
stos
and
arpl
icebp
and
inc
push
jb
test
mov
popa
add
pop
inc
scas
addb
jge
test
and
push
cld
add
js
adc
xchg
sub
lods
aad
mov
std
in
and
mov
inc
imul
xchg
push
leave
movsb
imul
mov
xchg
dec
pop
scas
xchg
cwtl
aas
pop
enter
fcmovne
fsubl
cmp
test
loope
push
cmp
sub
shlb
ror
xor
in
out
jecxz
int3
ret
rdmsr
out
movsl
add
jl
mov
cmpl
jae
push
add
ljmp
xor
add
and
xor
and
arpl
cmpsb
out
lds
sarb
push
mov
sahf
mov
pop
ret
mov
divl
cwtl
rolb
jnp
imul
pop
cmp
push
sbbb
hlt
push
cmc
mov
push
out
xchg
icebp
xor
das
aad
in
pop
inc
xchg
inc
andl
fiadds
push
les
jb
hlt
cmp
and
orl
or
mov
inc
inc
cwtl
movsl
fisttpll
hlt
popf
fadds
xor
inc
add
fsubl
mov
push
lods
inc
test
pushf
sahf
iret
nopl
adc
jl
jecxz
and
jne
mov
xor
jnp
xchg
and
mov
lret
lock
mov
adcb
xlat
push
jae
cs
testl
push
xlat
push
nop
in
insl
and
movsl
stos
in
repnz
mov
jg
cmp
cmpsl
mov
outsl
cmpsb
mov
pop
das
stos
pop
addb
int
testb
xchg
adc
jmp
hlt
jno
jbe
inc
les
pop
pop
lock
dec
cmp
adc
pushf
jno
sbb
iret
call
mov
xchg
out
jnp
and
mov
fidivrl
sti
xchg
ret
loope
and
or
pusha
mov
sub
jnp
subb
sahf
loop
jecxz
lock
mov
pop
inc
stos
xorb
ds
jp
iret
mov
icebp
ss
add
test
call
mov
mov
jne
jno
add
pop
outsb
das
mov
stc
adc
inc
sbb
xchg
or
pop
pop
add
lahf
stc
or
mov
rcr
dec
xchg
cwtl
mov
cld
mov
xor
mov
sub
pop
mov
stc
lock
cmp
jb
cld
js
sahf
push
dec
mov
add
mov
push
or
mov
das
nop
fimull
sub
fnstsw
js
clc
roll
out
outsl
jmp
scas
and
fs
add
das
mov
dec
mov
les
rorl
sbb
cmpsb
outsb
ret
pop
enter
push
xchg
lahf
mov
lret
popf
stos
lea
pop
push
pop
jge
insl
cmp
or
lret
popf
stos
lea
pop
push
pop
jge
insl
cmp
or
mov
popf
stos
lea
pop
push
stos
jge
insb
cmp
loop
out
fnsave
in
mov
mov
xchg
out
jge
sbb
mov
shrb
and
outsl
push
adc
cmc
sbb
outsl
mov
pop
daa
scas
and
jo
pusha
out
push
iret
inc
stos
mov
cmovb
lock
rcrb
cmp
imul
push
lds
jbe
push
and
xor
and
pop
ljmp
arpl
xor
pop
jb
or
xchg
sbb
fdivs
lods
xor
mov
lahf
or
xor
shrl
loopne
movzwl
cmp
dec
cmpsl
mov
mov
popa
aam
cld
pop
xorb
jg
bswap
movsl
jp
pop
sbb
icebp
xor
jo
int3
push
out
jne
mov
iret
enter
fcoml
nop
mov
dec
shrb
filds
jo
jmp
das
mov
mov
rcrl
test
andb
sbb
fcmovbe
push
and
pop
ja
adc
mov
imul
lock
xor
pop
lock
pop
lahf
pusha
out
jp
push
iret
pop
test
push
cltd
push
call
push
fstps
scas
inc
int
ljmp
push
mov
mov
jp
or
xor
and
jne
add
add
push
mov
mov
mov
sbb
mov
scas
adc
or
pusha
call
inc
fbstp
jo
jg
dec
rcrb
and
jo
pusha
call
inc
fbstp
jo
jg
dec
rcrb
jecxz
dec
or
pop
fs
popa
out
add
rcrb
mov
dec
sahf
push
mov
mov
push
arpl
iret
int3
inc
ja
mov
xor
mov
pusha
rcl
xchg
push
scas
pushf
mov
inc
pop
rcrl
imul
xchg
mov
pop
pop
or
lret
dec
mov
mov
mov
clc
rcrb
xchg
cmp
inc
pop
mov
push
or
cmpsl
shrl
sub
lock
pop
lret
ss
addl
inc
aam
add
or
mov
push
mov
dec
sub
or
adc
or
ja
mov
mov
xchg
sub
out
xchg
out
push
add
jbe
push
rolb
cld
std
xor
pop
lret
gs
test
mov
inc
jno
sub
repz
and
jae
and
lahf
sahf
in
std
add
outsl
push
push
mov
cmc
adc
stc
cmp
xchg
adc
push
sahf
or
mov
lret
add
xchg
fmul
adc
cmp
add
push
les
addl
mov
xchg
inc
push
fmulp
movsb
jne
xchg
xchg
mov
jne
jle
sbb
adc
cs
aam
xor
mov
mov
dec
mov
xchg
inc
cpuid
adc
stos
test
xor
sub
cltd
clc
shll
repnz
push
aas
mov
mov
sbb
and
dec
mov
cmc
sub
adc
stos
mov
test
inc
lcall
lret
cltd
addr16
cmpsl
xor
test
pop
inc
andl
addr16
fidivl
dec
xor
mov
es
mov
lret
push
lahf
dec
gs
icebp
fcomip
add
ja
cmp
jg
lea
inc
das
push
jmp
cld
mov
jns
imulb
add
loop
rcll
adc
mov
out
or
xchg
pop
sub
inc
aad
adc
sub
adcb
push
and
xchg
fistpl
mov
inc
fisttps
out
imul
inc
repz
mov
xchg
aam
jne
xor
xor
dec
sbb
or
sbb
lds
mov
lret
pop
jns
mov
insl
xchg
popf
movsl
add
lret
push
and
addr16
xchg
push
pop
in
xor
sub
or
xlat
xchg
rcll
into
lods
cmpsl
dec
repz
and
les
hlt
mov
es
cmpsb
or
cltd
movsb
inc
mov
mov
and
adc
lret
push
adc
jecxz
mov
pusha
inc
in
inc
mov
jnp
pop
scas
inc
lcall
rolb
loope
je
into
bound
push
push
jg
sbb
int
mov
sbb
ret
popa
daa
in
xchg
aas
mov
cli
sahf
add
xchg
std
lahf
sbb
mov
and
popf
cmpsl
jmp
stc
sarl
sti
adc
xor
jno
push
fld1
popa
inc
xchg
dec
pusha
or
mov
popf
mov
cmp
sub
addl
push
out
mov
mov
arpl
jl
pop
ss
fnstenv
mov
mov
sbb
fbstp
xchg
push
icebp
mov
enter
xor
dec
clc
xor
inc
dec
insb
das
stc
sahf
cs
adc
xor
lods
sbb
hlt
imul
pop
loope
adcl
ljmp
mov
add
sti
stos
mov
sarl
pop
push
mov
mov
and
xor
sbb
xor
mov
push
inc
sub
jmp
cmp
pushf
pop
ds
cwtl
mov
cwtl
inc
iret
mov
pop
inc
xchg
push
sbb
and
sub
movsl
push
cmp
xor
sub
add
mov
ret
sbb
mov
cmp
insb
nop
test
mov
sub
in
ja
jp
mov
pop
push
movsb
push
aad
imul
add
pop
popa
cmpb
aam
dec
out
leave
dec
aam
daa
jo
pop
outsb
dec
push
std
cld
lock
fiaddl
adc
imul
xor
lret
mov
push
push
pop
outsb
js
inc
cs
add
shrl
movsl
pop
pop
push
pop
inc
outsb
pop
xchg
outsl
pop
popa
jmp
gs
pop
popf
stc
push
pop
add
dec
xor
mov
sbb
inc
scas
inc
pop
ret
push
and
fimuls
orl
or
int
rcrb
lahf
jle
jl
in
mov
arpl
lock
add
outsl
pop
out
inc
fstpl
mov
pop
dec
fs
negl
inc
pop
push
movsb
pop
imul
test
mov
test
imul
xor
shl
mov
lods
push
cld
aam
dec
xchg
ret
jne
pusha
fistps
pop
popf
mov
or
fs
and
loopne
adc
or
or
push
xor
jae
pop
mov
cwtl
adc
sahf
call
out
stos
adc
pop
sbb
repnz
arpl
mov
test
xchg
clc
jp
and
cmp
mov
nop
mov
lahf
mov
test
rcrl
clc
or
jle
jl
pusha
iret
inc
test
shlb
loopne
push
stc
mov
xor
inc
sbb
loopne
data16
je
mov
popf
sbb
repnz
mov
or
and
and
pop
and
pop
repz
fldl
aaa
les
into
out
shr
in
adc
addb
ret
and
mov
aas
cmpsb
inc
ss
insb
loop
out
mov
dec
sbb
daa
sub
push
fistps
scas
fwait
dec
dec
fwait
dec
lods
pop
cmp
inc
xchg
test
pop
add
xor
lahf
lods
jmp
and
inc
cld
icebp
ja
sbb
and
ret
or
mov
loopne
fwait
loopne
lods
outsb
xchg
repz
mov
mov
dec
add
jge
fiadds
sbb
mov
mov
cmp
push
fdivrs
mov
sahf
shr
out
dec
add
xor
inc
mov
inc
sar
or
iret
add
sub
cmp
and
repnz
lret
icebp
cmp
in
xchg
pop
outsb
mov
out
push
jne
int
cmc
mov
push
insb
gs
mov
mov
stos
je
jno
or
jne
xlat
push
pop
fcompl
mov
fmulp
cli
lods
push
pop
add
mov
mov
mov
jmp
nop
rcr
testl
sbb
mov
inc
adc
pop
aaa
mov
inc
and
pop
out
and
push
jmp
inc
sub
leave
pop
mov
cltd
iret
xlat
shll
loopne
xchg
insl
pusha
push
iret
cmc
pushl
stos
and
add
adc
mov
mov
sbbl
pop
test
adc
fistps
cs
sub
divb
lahf
sti
fistps
lahf
fsubrs
jmp
push
xchg
stos
sub
mov
ja
sbb
aad
inc
adc
mov
mov
mov
lret
movsl
popa
add
repz
popa
in
mov
push
and
andl
imul
arpl
sarl
lods
aad
sbb
pop
mov
lcall
xor
pusha
std
daa
test
test
je
lods
xchg
or
cmp
mov
cli
dec
das
or
jle
cmpb
mov
outsl
push
or
roll
lock
shlb
das
add
xor
aad
rorl
or
cmp
frstor
stc
or
xchg
iret
fucomip
xor
and
incl
and
insl
loop
mov
cs
cli
les
lret
inc
xor
incl
xor
push
test
pop
rclb
mov
cmp
dec
add
mov
sub
mov
cmp
lock
mov
pop
int
pop
test
jo
sub
push
sub
adc
jno
mov
rcrl
sbb
dec
sub
cmp
fdivrl
sbb
or
aam
sbb
jg
lods
pusha
rorl
pusha
dec
ss
mov
push
mov
lea
leave
inc
sub
cmp
aam
icebp
xchg
pop
push
push
nop
in
jne
ljmp
pop
pop
or
in
cld
mov
pop
mov
imul
and
or
loopne
inc
iret
jbe
xchg
or
andb
push
inc
sti
mov
je
fsubs
outsl
sar
push
sbb
dec
mov
je
mov
and
push
imul
and
sti
pop
mov
add
fstpt
pusha
pop
cmp
pop
push
mov
ljmp
cli
mov
and
jp
push
inc
out
add
cmpb
hlt
sbb
mov
sbb
cmpps
mov
in
hlt
or
mov
jne
shll
or
loop
out
in
cltd
sub
test
dec
fldl
mov
pop
xchg
xchg
int
pop
test
fimull
lahf
xchg
and
dec
jns
testb
xchg
and
or
outsl
mov
inc
cmp
push
in
ret
gs
mov
cmpsl
dec
jge
sahf
jne
fnstcw
mov
push
lret
dec
mov
gs
cmp
inc
mov
test
inc
ret
fwait
mov
dec
sub
push
sarl
iret
incb
push
pop
cmp
jle
ret
fstl
pop
sbb
mov
lret
js
rcl
add
mov
lea
lock
inc
dec
push
xchg
ficoms
sbbb
movsb
scas
rclb
in
xchg
adc
mov
mov
or
inc
mov
repz
int3
js
sub
jle
and
mov
jnp
mov
iret
cmp
test
or
xchg
cs
les
mov
rcll
add
add
adc
xchg
and
push
rolb
push
inc
lcall
arpl
jp
xchg
test
loopne
cmp
xchg
mov
push
push
enter
push
dec
into
ret
test
lret
and
mov
xchg
popf
xchg
xor
js
pop
filds
mov
or
pop
rcr
push
and
add
cmp
insl
into
punpckhbw
adc
lock
gs
adc
es
sub
pop
popf
xchg
lahf
and
repz
push
sbb
cmc
ljmp
inc
aaa
mov
mov
ja
inc
lea
inc
outsl
aam
sub
in
mov
push
add
xchg
pop
push
orl
jo
cmp
and
je
test
fwait
mov
xor
shlb
cmp
inc
sub
jne
cmp
mov
lret
or
mov
xor
xchg
loop
mov
or
outsb
frstor
cmp
fdivs
mov
jmp
lcall
and
jnp
and
sbb
jg
aas
imul
data16
scas
nop
sahf
shlb
repnz
ljmp
test
aam
popf
fnstenv
jge
cmpsl
xchg
mov
fwait
out
jno
in
scas
enter
lcall
out
fmull
aaa
call
in
fnsave
xchg
and
cltd
sarb
sub
addr16
scas
and
in
mov
push
cmp
pop
mov
call
sbb
adc
mov
push
dec
popa
je
mov
test
adc
mov
test
jbe
sbb
shlb
mov
mov
xchg
gs
outsb
decb
pop
leave
cwtl
push
fxtract
aas
xchg
mov
dec
adc
dec
adc
pop
fisttpll
jb
push
xor
cld
cmp
and
shll
int
push
add
mov
out
pop
inc
jne
aaa
pushf
in
jg
push
outsl
sub
shll
mov
sbb
sahf
mov
dec
dec
jnp
mov
daa
scas
inc
or
or
xchg
roll
xor
out
les
lret
mov
push
adc
out
add
xor
imul
orl
roll
xchg
push
ss
clc
jle
jmp
nop
mov
mov
sub
or
dec
ret
imul
push
enter
sub
sbb
adc
insb
pop
enter
out
mov
xlat
jge
mov
dec
imul
outsb
mov
mov
orb
adc
dec
loopne
ja
imul
addb
inc
cld
out
xchg
cwtl
dec
add
stc
repz
test
aaa
fsub
inc
xchg
jmp
jbe
inc
lea
or
sub
sbb
jle
adc
out
pop
punpckhwd
mov
jp
sti
dec
mov
std
dec
jg
out
mov
outsb
pop
std
das
and
js
jbe
push
add
dec
dec
adc
lret
hlt
pushf
imul
cmpsl
or
xchg
stc
lcall
icebp
test
scas
leave
mov
test
cmp
xor
in
in
ret
cld
int
xor
lea
fucomp
sarl
jb
ljmp
sub
adc
mov
xchg
addr16
adc
xchg
push
in
dec
das
mov
mov
xor
cwtl
and
in
pop
inc
popf
add
pop
movswl
iret
into
push
ret
fiadds
cwtl
sbb
and
out
mov
xor
pop
mov
ret
lea
div
and
sahf
push
or
or
and
jp
insl
mov
fstl
rcrl
test
or
xor
mov
ret
jle
outsb
pushf
orl
jmp
idiv
in
scas
and
out
stos
jne
test
pop
and
jb
mov
push
inc
jge
jge
push
enter
aam
mov
int
mov
testb
repz
and
pop
pushf
fadd
cmpsb
idivl
sahf
outsb
mov
mov
sbb
mov
lods
xchg
push
pop
aaa
mov
dec
clc
or
lea
cmpsb
mov
rcrl
xchg
xchg
or
orl
dec
adcb
inc
push
jmp
std
add
pop
adc
clc
pop
leave
or
ret
add
icebp
mov
popa
pop
scas
mov
jns
addr16
divl
enter
push
mov
jo
lcall
cs
sub
jo
xchg
jb
fstenv
sbbl
cli
mov
dec
fwait
loope
xchg
rclb
or
pop
add
dec
sbb
cmc
daa
xor
adc
push
xlat
scas
inc
dec
mov
sub
scas
iret
jns
jecxz
inc
jmp
adc
mov
add
out
stos
fucomi
mov
sti
xor
ss
insb
sbb
sti
xchg
sbb
test
stos
loop
fisttpll
imul
insb
push
test
mov
cli
mov
int3
mov
dec
lods
int
fidivrs
mov
call
xchg
jb
out
add
iret
test
jle
divb
xchg
xor
sub
adc
push
and
test
push
test
adc
arpl
insb
xor
mov
push
push
insb
dec
mov
sbb
add
and
mov
popa
adc
icebp
xor
clc
stos
sbb
rcll
xchg
std
aaa
imul
adc
add
aas
inc
mov
rcrl
out
and
push
or
and
mov
scas
xchg
int
and
add
imul
movsl
add
sub
cmc
and
arpl
xor
pop
jae
sub
ret
imull
scas
push
xlat
push
or
adc
cmpsl
ds
push
cmp
repz
fmuls
stc
outsl
xchg
push
push
fs
pop
dec
sub
je
cli
xchg
and
xor
fidivs
fldpi
xchg
js
dec
xchg
push
or
fsubr
fcoms
sbb
cmp
out
mov
jl
je
dec
repnz
out
test
or
test
rorb
pop
lock
vpsubw
dec
and
repnz
ss
mov
push
cmp
loopne
shll
xor
xor
adc
repnz
or
xchg
mov
xor
ret
ficoms
int
shlb
jbe
insb
and
inc
addr16
sub
and
popa
ljmp
jge
outsb
out
mov
pop
popf
adc
je
mov
pop
jg
or
outsl
mov
jnp
js
and
lock
iret
sub
sub
or
xor
sbb
sub
mov
xor
cmp
cli
adc
and
or
xor
xchg
inc
imul
ja
mov
add
repnz
add
lods
sbb
arpl
fisttpll
out
sbb
nop
add
cmp
inc
sub
inc
lods
xor
scas
push
fiaddl
sbb
inc
xlat
stos
mov
mov
inc
xchg
jl
push
dec
jne
loop
hlt
paddusb
pop
jge
pop
rcl
mov
in
imul
or
xorb
ficompl
dec
sub
lcall
lret
mov
inc
xchg
xor
cli
jmp
push
test
mov
pop
mov
sbb
cld
sub
scas
push
mov
and
shr
adc
lea
enter
mov
jp
insb
add
hlt
inc
xchg
mov
dec
rorl
mov
mov
pushf
hlt
fildl
jle
push
add
cmc
pop
ja
mov
imul
add
xchg
mov
movsb
add
jo
jg
out
sub
aaa
mov
lods
icebp
mov
cwtl
mov
pushf
jmp
pop
pop
pop
imul
aaa
gs
sub
add
imul
mov
js
lods
xor
push
cmpsl
and
xlat
pop
cwtl
xchg
jns
leave
pop
sbb
push
test
out
les
and
jo
std
fdivl
jnp
mov
sti
das
sbb
outsb
push
sti
mov
mov
inc
popf
cmp
stos
push
ljmp
jge
mov
pop
clc
mov
pop
lcall
sahf
lods
aam
dec
xchg
and
aaa
scas
xor
dec
xchg
sbb
add
jnp
jge
add
pop
or
pop
roll
sti
xchg
aas
or
mov
dec
in
inc
cs
and
sub
sahf
cmp
or
lret
movsb
pop
popa
pop
push
jg
cwtl
lret
jbe
in
mov
sbb
out
pop
mov
gs
mov
sub
loopne
sbb
nopl
cld
mov
popa
cld
inc
ss
iret
fmull
add
mov
cmc
into
ljmp
adc
inc
push
loop
and
leave
ficompl
int
ljmp
xchg
sub
mov
or
or
pop
loopne
and
mov
test
cmp
pushw
call
or
push
or
sub
mov
fiadds
cmpsb
xor
cltd
sub
in
mov
inc
jb
pop
jp
add
test
inc
insb
pusha
or
aad
push
aam
push
jp
loop
pop
je
stos
and
push
adc
sub
nop
cmpsl
mov
mov
xchg
and
pop
cmp
pop
mov
dec
push
outsb
and
mov
leave
mov
mov
data16
adcl
xchg
xor
rcr
filds
lods
jno
pop
jae
mov
or
js
dec
mov
inc
fstpt
pop
aam
lods
adc
in
adc
mov
repz
ljmp
dec
lea
jne
shll
mov
lods
push
or
dec
xchg
in
jmp
pusha
data16
dec
mov
mov
lds
ja
es
cld
leave
or
mov
ret
lcall
repz
xchg
mov
or
dec
inc
fimuls
movsb
test
mov
sahf
adc
sahf
mov
push
pop
stos
cmp
sbb
ud2
and
push
repnz
int3
jb
movsl
mov
movsl
pop
imul
adc
adc
add
das
je
lock
ret
out
ja
jbe
push
push
pushf
stos
cmpsb
cmp
xor
daa
jle
out
sbb
mov
xor
addr16
fisttps
dec
shrb
popl
lahf
jo
pusha
call
inc
fbstp
jo
jg
dec
rcrb
and
jo
pusha
call
inc
fbstp
jo
jg
dec
rcrb
and
jo
pusha
call
inc
fbstp
jo
jg
dec
icebp
pop
add
adc
mov
lahf
jo
pusha
call
iret
rcrb
das
pop
xchg
cmp
subb
push
and
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lahf
xor
jno
arpl
shl
add
or
add
or
add
push
add
icebp
add
add
add
add
add
inc
add
add
add
xchg
data16
jno
sub
add
xchg
add
add
adc
jg
pop
add
add
add
sbb
xor
xchg
add
or
push
add
add
sbb
pop
add
add
add
add
bound
jmp
mov
add
add
add
add
add
add
stc
add
cmp
add
mov
xor
adc
testb
add
add
add
add
add
xlat
add
add
add
sub
add
add
mov
add
add
add
les
or
icebp
add
jbe
jne
add
add
les
testb
add
add
add
add
add
add
add
add
jge
into
add
cmpsb
add
add
add
add
fadds
jne
movb
add
add
insl
add
pusha
add
pusha
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
jno
and
sub
add
add
inc
add
add
add
bound
jnp
dec
add
pusha
add
add
add
add
add
add
add
add
jge
dec
add
add
add
das
add
cmp
mov
jmp
jno
or
cwtl
add
add
add
add
add
add
add
or
cmp
add
sub
add
add
add
add
add
jge
ds
add
or
sub
add
add
add
add
add
add
add
add
add
sub
add
cld
add
add
add
add
add
add
jp
scas
add
add
add
dec
add
mov
add
add
inc
add
push
add
add
jno
jns
adc
jno
into
add
sub
add
add
jle
testb
add
add
push
add
add
add
add
add
add
add
add
add
add
lcall
add
push
add
add
scas
add
add
lahf
add
add
add
sbb
jle
out
lods
add
add
add
str
add
add
add
mov
mov
push
add
add
add
pusha
add
add
add
xor
jno
sub
add
inc
add
add
add
add
add
add
add
add
add
add
sbb
faddl
pop
add
add
add
add
scas
add
add
adc
testb
add
add
xchg
add
sbb
faddl
fiaddl
cwtl
add
add
mov
inc
add
add
add
add
faddl
pop
add
add
inc
add
add
push
add
add
add
fldl
in
scas
add
pop
add
add
add
popf
add
add
mov
adc
mov
inc
insl
inc
or
push
mov
out
inc
cmpsb
or
enter
das
lret
test
sub
fiadds
push
mov
fadds
pop
fdivs
adc
dec
mov
and
lret
add
dec
stos
enter
sarl
leave
inc
xchg
inc
mov
stc
ret
jmp
fildl
mov
fistps
jne
mov
jmp
xor
data16
jb
test
jmp
cmp
adc
dec
cmc
shrb
sbb
into
outsl
test
lret
outsl
lock
xchg
or
fadd
rclb
sub
out
repnz
movsl
iret
mov
pop
ffree
popl
adc
push
rorb
push
lods
ret
testl
rcll
ret
mov
lea
cmp
lcall
insb
xor
jb
lahf
js
out
fistl
lock
mov
popa
xchg
mov
or
shll
inc
bound
add
inc
cli
rcrb
sbb
out
adc
into
push
cmp
jo
and
cltd
fs
aaa
cmc
scas
jge
pusha
dec
adc
fistpl
aas
and
test
fwait
adc
mov
sti
mov
mov
addb
test
jmp
mov
data16
dec
sub
roll
and
and
ljmp
and
sarb
outsl
cli
scas
jno
test
jae
cmp
xchg
sbb
sbb
aad
xlat
sub
mov
test
dec
sub
or
xchg
stos
in
mov
mov
lods
mov
loopne
mov
loope
cmp
ja
mov
fildll
pop
insb
mov
xchg
sbb
data16
cwtl
ja
push
je
or
xchg
je
fs
adc
inc
and
cmp
xorb
sub
es
mov
roll
cmpsb
mov
inc
insb
std
mov
push
mov
sbb
mov
and
push
and
and
dec
or
inc
outsb
test
repz
repz
push
mov
out
adc
test
mov
jnp
arpl
pop
jmp
push
sub
jg
dec
mov
insl
add
sbb
in
push
jecxz
addr16
loopne
scas
or
lret
dec
mov
lret
push
sub
scas
in
mov
adc
in
ds
mov
cmpsb
push
sub
dec
aad
in
add
mov
insb
sub
push
movl
mov
xchg
aas
loope
pop
subb
push
sbb
rcll
add
xchg
jns
dec
insl
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
