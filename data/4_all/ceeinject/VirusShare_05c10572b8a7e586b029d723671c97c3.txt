call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
andl
ss
push
push
andb
fisubrl
rcll
sbb
outsb
xchg
or
push
imull
ds
fidivs
out
push
push
mov
jbe
inc
mov
mov
xchg
push
cmpl
ds
adc
pop
ss
data16
jbe
inc
inc
push
dec
cmpsb
xor
mov
dec
mov
stos
push
mov
cltd
stos
inc
mov
dec
popa
fst
outsl
pop
subl
adc
mov
insb
ja
fidivs
sti
test
cmp
lret
dec
xchg
jns
orl
mov
sahf
ss
imul
aam
roll
sub
mov
push
cmpsb
mov
imul
dec
popa
sbb
adc
jbe
dec
mov
dec
jle
adcl
cmp
and
adc
sbb
sbb
push
mov
mov
std
mov
out
scas
dec
ss
jg
and
mov
data16
sub
inc
fbstp
repz
mov
push
cmpsb
imul
sub
fidivs
out
push
xchg
push
mov
jbe
inc
push
push
mov
xchg
outsb
out
imulb
pop
nop
mov
inc
nop
push
loopne
jmp
mov
pop
scas
ds
out
xchg
jo
pop
mov
mov
dec
push
pop
test
and
int
jbe
pop
les
loope
les
jnp
pop
mov
in
gs
arpl
jbe
inc
mov
mov
xchg
push
out
imulb
ds
into
fidivs
out
push
push
mov
jbe
inc
mov
mov
xchg
push
out
imulb
ds
into
sbb
inc
imul
mov
mov
test
hlt
mov
popf
inc
jge
and
jbe
adc
aad
stos
mov
xchg
stc
cmp
mov
sub
into
and
sbb
std
rorl
mov
jle
mov
lret
out
xchg
ret
xor
daa
shlb
mov
push
imul
es
lret
loopne
fidivs
sbb
icebp
mov
insb
outsb
sub
add
jmp
dec
push
sbb
inc
inc
sub
push
sahf
nop
cmp
adc
js
stos
jecxz
cmp
inc
ja
stc
scas
ret
jmp
mov
movsb
pop
inc
sbb
mov
daa
leave
inc
or
js
adc
add
and
mov
gs
pop
jmp
rclb
mov
out
rcrb
xchg
and
sbb
jp
mov
in
cli
sahf
add
cwtl
and
int
or
cmp
shll
jp
jecxz
pushf
les
imul
push
pop
cltd
cmpsl
ja
dec
push
pop
lods
jecxz
roll
or
in
xlat
sub
push
loope
in
ljmp
sahf
dec
loopne
gs
and
ficomps
sbb
pop
ja
daa
sarl
lods
ss
push
in
jmp
cld
cmp
push
and
mov
jl
rcll
scas
lcall
xchg
inc
dec
or
ds
outsl
lret
in
data16
jl
or
sbb
xor
xor
sub
fisttpll
enter
icebp
xor
mov
sahf
pushf
sub
jg
mov
mov
adc
std
outsl
inc
rolb
in
jb
aaa
fists
out
lock
sarb
lcall
push
cmc
test
mov
rcrb
push
mov
push
popf
lcall
popf
call
repnz
fldenv
ret
cmpsl
mov
jge
out
or
inc
jg
fmuls
xlat
xor
mov
pop
add
push
pop
cli
stos
adcb
outsb
cmpsb
popa
imul
mov
stos
imul
adcb
insl
push
mov
jg
jb
inc
and
push
sub
push
inc
popl
pop
ret
push
cmp
jp
mov
push
cmp
mov
je
ljmp
lods
or
inc
inc
jl
dec
ret
push
mov
scas
daa
fwait
movsb
sub
adc
sbb
mov
pop
hlt
scas
inc
or
xchg
inc
inc
dec
xlat
pop
jno
adc
lods
aad
lds
notb
or
xorb
pushf
out
scas
pop
xchg
rcrb
xchg
mov
and
pop
lret
sbb
lret
outsb
mov
cmpb
andl
sub
xlat
jae
out
stos
adcb
pop
xor
imul
fsubrl
inc
dec
xor
les
push
lods
in
push
lcall
xor
or
pop
subl
inc
adc
push
push
pop
xlat
xor
inc
mov
iret
loope
cmp
inc
loop
inc
mov
bound
andb
push
shl
mov
mov
xchg
push
js
jecxz
std
jge
sbb
mov
xor
mov
xor
stos
adcl
mov
inc
xor
adc
movsl
mov
add
sub
pop
sets
pop
push
and
imul
and
xor
outsl
push
aad
inc
leave
mov
movsl
movsl
pop
push
add
fimull
testb
xorb
fcomp
adc
fisubrl
out
jns
add
icebp
inc
stos
mov
xor
das
mov
mov
lock
mov
inc
movsl
pop
test
fadd
sbb
aaa
daa
pop
out
data16
popf
cmp
pop
sbb
jno
push
subb
push
xor
imul
sub
movsb
clc
pavgw
in
inc
into
jp
pusha
loope
xchg
movsl
es
int3
pop
dec
xor
aad
push
cwtl
mov
mov
dec
das
dec
mov
loop
lahf
hlt
pop
fsubrl
cmp
xor
mov
mov
xchg
pop
in
jne
lret
out
out
xchg
rorb
int
pop
or
fsts
out
sbb
clc
or
cltd
or
movsl
sub
jle
xchg
pop
dec
push
xchg
push
xor
stos
stos
test
insl
and
adc
cld
xchg
inc
punpckhwd
inc
je
add
and
mov
jge
inc
nop
in
xchg
xor
cmp
imul
cmc
fbstp
popf
jle
test
fwait
sti
fstpl
pavgw
out
gs
js
imul
out
movsb
cmp
mov
cmpsb
pop
mov
cmc
and
inc
mov
mov
inc
cmp
test
popf
or
add
scas
pop
xchg
inc
push
inc
cmc
movb
fstp
addl
inc
push
orb
in
in
xchg
out
arpl
adc
pop
stos
outsb
push
cmp
lea
adc
sbb
add
xor
iret
push
sbb
and
out
cmp
bound
lcall
push
mov
mov
dec
sarb
and
xchg
jne
xchg
inc
lcall
aad
jns
pop
data16
mov
out
push
sbb
in
inc
mov
pop
inc
call
mov
add
cmc
out
or
xor
repz
shrb
mov
push
mov
sbb
sahf
cmpsl
and
loop
test
mov
ret
sub
xchg
mov
jno
push
iret
inc
mov
mov
lret
pop
add
mov
pop
dec
jbe
push
scas
add
cld
insb
mov
mov
push
fisubs
xchg
push
loope
imul
lret
out
jno
mov
mov
dec
lods
shlb
mov
push
push
int3
loope
insl
inc
std
inc
push
inc
sub
fldt
mov
mov
pop
pop
scas
mov
aad
das
adc
cld
out
pop
jb
push
mov
aam
mov
nop
mov
loopne
outsl
xor
xorps
scas
mov
fisttpl
out
jecxz
jle
sbb
das
pop
repz
mov
push
add
push
cvtps2pd
out
lods
icebp
gs
cmp
mov
test
ret
ds
out
xor
sbb
scas
and
test
mov
inc
xchg
xchg
sbb
jmp
notb
repnz
mov
jnp,pt
test
aas
lcall
cltd
push
push
inc
dec
ret
fidivs
xor
jbe
repz
in
test
and
pop
and
je
pop
outsl
xor
dec
jl
ljmp
imul
lret
dec
ljmp
dec
aad
dec
push
clc
stos
sbbl
loop
xchg
inc
pop
inc
dec
push
lods
pop
xchg
adc
dec
ss
gs
fildll
push
pop
mov
pop
insb
pushf
pop
pushf
arpl
ljmp
mov
jmp
insl
add
inc
aam
xor
test
push
and
imul
adcb
jns
push
test
subl
xor
sub
clc
inc
pop
jp
pop
imul
fs
xchg
je
insb
or
clc
jne
negb
les
insb
jo
movsl
and
xlat
pop
xchg
idivb
pop
jle
insb
mov
imul
fadds
and
hlt
lea
add
in
push
mov
push
loop
nop
push
and
pushf
hlt
cs
push
cmpsb
push
out
push
lret
clc
xor
cmpsl
data16
test
mov
fwait
sbb
push
xor
out
push
mov
in
mov
int
adc
push
fwait
cli
sahf
rcrb
mov
sub
mov
inc
repnz
lock
sub
xchg
shll
mov
xor
cmp
jnp
daa
jl
in
ror
cld
cld
pop
push
bound
jle
mov
jl
js
popa
shll
sarb
ficoml
bound
inc
xchg
ja
cld
cmpsb
cmc
out
lock
lret
xor
testl
movsl
nop
and
mov
dec
cwtl
inc
mov
popf
xchg
jle
lcall
rolb
pop
aam
xor
xor
out
mov
enter
hlt
fstps
idiv
sbb
iret
jb
jae
or
gs
movsl
imul
pop
cmp
not
in
fs
mov
daa
jge
jo
xchg
mov
add
jmp
je
cltd
jbe
push
lahf
out
in
jns
imul
cld
fldln2
inc
fcomps
dec
pop
rclb
iret
lods
inc
inc
cwtl
push
xor
add
addl
rorb
add
mov
jle
adc
inc
sar
lret
mov
xlat
push
xor
divb
sbb
push
mov
sarb
mov
push
sub
and
dec
adc
pop
pusha
aam
pop
push
lcall
hlt
fs
shll
pop
push
lds
imul
xchg
pop
negb
leave
std
ds
sub
xchg
xor
sbb
scas
ds
lds
inc
cmp
cmpsl
xchg
jge
jg
xor
clc
adc
mov
mov
pop
bnd
lret
push
xor
rclb
sbb
imul
xchg
jge
add
test
jmp
adcl
push
dec
xchg
mov
js
mov
movsb
dec
lret
fnstcw
outsb
inc
mov
pop
aas
fsubrs
cli
and
jmp
into
mov
xchg
lock
in
add
andb
popf
push
sub
movsl
and
fistl
aas
stos
cmp
dec
rcrb
sub
ret
cmp
or
fildll
ja
xchg
jae
addr16
shll
sbb
cmp
or
lock
push
dec
and
cmp
sbb
push
xchg
stos
xchg
cwtl
cmp
mov
jge
sahf
push
or
sub
pop
stos
pop
negb
sar
out
xchg
mov
and
insl
xchg
cmp
lret
sbbl
add
jno
imull
sbbl
pushf
jge
xor
mov
nop
call
movsl
movsl
imul
icebp
xchg
lahf
cmpsb
fsubs
mov
test
push
mulb
cmp
cmp
jmp
or
fwait
loop
scas
mov
jns
fnstenv
call
addr16
add
xchg
pop
cmpsl
test
jb
out
sti
clc
jns
dec
jl
ret
int
imul
jmp
mov
test
lret
in
lret
popf
add
lock
add
inc
imul
mov
sub
mov
lods
lock
insl
dec
xor
es
sbb
push
xchg
add
in
xchg
int
mov
loopne
adc
and
das
mov
idivb
jb
adc
sbb
leave
stc
sbb
stos
jmp
inc
pop
aas
dec
out
inc
test
and
addr16
leave
or
pop
and
stos
sub
jb
outsb
fldenv
scas
mov
mov
das
in
push
sbb
dec
int
stos
and
push
sbb
ljmp
leave
push
and
sub
cmp
and
divps
sbb
lcall
ds
icebp
or
inc
xchg
sub
xchg
out
aas
out
mov
pop
stc
adc
jne
cmp
fnsave
test
sub
jecxz,pn
mov
loopne
xchg
push
mov
or
nop
pop
jle
adc
sub
sbb
push
jae
or
std
faddp
xchg
push
sub
adc
add
mov
push
gs
and
sti
mov
test
das
loope
jno
add
and
fadd
jne
jmp
push
sahf
cmpb
outsb
sub
mov
mov
test
or
sub
leave
rol
jg
scas
leave
mov
and
jmp
sub
add
test
movsb
mov
mov
jae
xor
sbb
in
mov
stc
add
dec
mov
iret
mov
sub
mov
cmp
push
repnz
loope
push
int
call
rorb
iret
cmp
popa
mov
mov
roll
cltd
in
imul
daa
aaa
ds
push
pop
int
jnp
mov
push
jo
push
ljmp
sar
or
scas
pop
push
push
scas
cmp
pop
add
aaa
push
cmp
cmpsl
sti
es
cltd
cltd
cmp
push
cld
sbb
aam
mov
repnz
cmc
mov
xchg
adc
ds
jb
ja
popf
das
mov
pop
int
dec
or
and
xchg
xor
and
xchg
stos
pop
repnz
jbe
cmpsb
cmp
repnz
xchg
movsl
clc
add
and
shll
stos
ja
jmp
cli
in
fadd
roll
cmp
mov
push
adc
dec
ljmp
or
push
movl
push
in
stos
and
test
or
imul
cmp
jo
and
mov
movsl
pop
push
mov
leave
xlat
bound
jmp
mov
rorb
in
jo
fiaddl
xor
imul
jle
jecxz
add
fidivrs
fisubl
gs
fidivrs
inc
jno
jbe
psllw
adc
ficomps
dec
lock
cmp
xor
and
adc
popa
add
aad
cld
out
pop
ret
adcl
dec
mov
call
cli
fisubrs
sbb
fdivr
pop
into
das
or
hlt
xor
icebp
push
mov
cwtl
cld
sbbb
stos
dec
outsw
testl
cmp
cli
jbe
sub
sti
add
sub
aaa
mov
insl
lea
rol
mov
lock
test
mov
inc
fwait
out
and
insl
jl
jns
xor
and
lods
sbb
push
call
call
sub
xor
xlat
cs
cmp
cmp
xchg
push
orb
and
add
jae
inc
pop
pop
xlat
frstor
mov
pushf
xchg
inc
js
es
test
pop
inc
pushf
in
leave
pop
mov
jae
icebp
cli
repnz
dec
mov
jo
movsb
aas
movsb
xor
or
xchg
push
popa
xchg
hlt
rcll
push
mov
notb
sbb
adc
or
ss
pop
add
insl
ret
or
lea
dec
shlb
js
jns
xchg
pushf
cli
fisubs
mov
xor
jl
pop
pusha
testl
jp
fwait
push
add
jp
iret
dec
add
mov
xchg
outsl
call
cli
xor
test
push
insb
cmp
int3
jl
dec
js
bound
and
cmpsb
pop
push
imul
lds
mov
movsb
push
inc
pop
add
inc
dec
adc
les
sbb
lret
pop
pusha
sahf
mov
je
push
insb
lret
adc
das
adc
imul
ficoms
jo
sub
lock
mov
jmp
jg
pusha
sub
add
adc
dec
loop
jo
add
cmc
adc
subb
bound
insb
cmpsb
push
outsl
jb
cltd
clc
js
testb
push
adc
insl
dec
adc
mov
dec
adc
mov
call
adc
inc
fmuls
pop
mov
stc
mov
fnsave
out
push
mov
lcall
push
mov
ficompl
sbb
loop
jae
fsubrs
loope
add
adc
adc
ja
lea
sbb
jp
bnd
aad
cmp
out
lods
mov
lret
cmpsl
inc
adc
push
test
lret
adc
test
sbb
shrb
fwait
push
insb
outsb
add
and
scas
icebp
push
mov
pusha
pop
fwait
in
outsb
fldt
loope
shrl
and
lret
ds
pop
out
and
imul
or
popa
popf
and
aaa
fbstp
cmp
subl
faddl
lock
jo
inc
pop
xchg
jmp
popf
je
inc
loope
incb
mulb
fistl
mov
push
dec
inc
dec
inc
sahf
xor
or
cs
jle
leave
mov
xor
scas
mov
sub
jle
ret
push
out
push
add
cmp
cmpl
loop
dec
mov
xchg
scas
sbb
xchg
push
fstpl
mov
mov
cwtl
mov
add
fldenv
xor
inc
insl
test
inc
lret
and
sti
call
scas
test
mov
lods
jne
ja
sbb
pop
mov
mov
cmpsl
sub
jo
lret
xor
mov
push
test
pop
jns
inc
loop
sbb
scas
cltd
add
cmpsb
sbbl
inc
outsl
insl
imul
fcompl
lcall
inc
and
xchg
adc
fdivs
ds
jecxz
xchg
push
and
lock
imul
stos
mov
loope
in
pop
mulb
mov
lock
inc
jno
cwtl
sbb
iret
dec
cltd
lds
sbb
adc
cmp
scas
out
xor
add
fbstp
into
pop
mov
push
cmp
sub
lods
out
loope
mov
sub
mov
bswap
cmp
in
xor
js
test
fwait
call
sub
jb
mov
punpcklwd
out
mov
adc
add
or
data16
cli
shrb
fdivrs
ds
cmp
cld
cs
iret
mov
cld
pop
inc
iret
sub
push
ret
sub
in
cmp
shlb
shrl
cmpsb
bound
std
outsb
xchg
inc
mov
push
xchg
roll
adc
fxam
dec
inc
xchg
jecxz
jecxz
sbbb
ds
jg
inc
lret
jmp
int3
push
imul
jbe
ror
xchg
mov
mov
popf
mov
or
lcall
outsb
fstpl
jp
clc
cmp
lods
dec
into
repz
jno
rorl
jae
jmp
jge
shll
mov
enter
sti
popf
fidivrl
stos
jge
popf
out
loope
sub
add
lret
inc
data16
push
jb
lea
test
mov
mov
cmpsl
arpl
negl
cmp
sub
xchg
test
aas
inc
shlb
aam
sub
xor
and
movups
adc
and
jb
jp
loopne
aaa
sub
sbb
adc
loopne
mov
in
add
mov
into
mov
mov
pop
adc
rcrl
dec
cmp
cmp
cmp
and
xorl
lods
nop
in
js
xor
ljmp
scas
dec
test
mov
bound
int3
sbb
stos
sbbb
iret
cli
sub
lods
mov
lock
imul
mov
lahf
add
xchg
lret
mov
pushl
fstl
adc
sub
jb
sar
mov
mov
divb
das
push
mov
lcall
lcall
and
mov
outsb
out
insb
call
movsl
adc
pushf
push
xor
or
psraw
fcmovbe
es
push
test
in
cltd
das
mov
mov
jne
mov
pop
test
jl
lods
stc
dec
dec
pop
mov
lret
jo
mov
push
fdivr
sti
xor
and
inc
xchg
cmp
ffreep
daa
and
hlt
push
sbb
out
sti
inc
pop
clc
jle
outsl
mov
add
fadds
loopne
jmp
rclb
lock
xor
pushf
xor
push
mov
clc
out
jae
sbb
pop
loopne
adc
pop
ret
or
test
push
ja
orb
push
lret
loope
pop
aam
mov
imul
or
int
pop
popa
cmp
inc
mov
mov
mov
jo
pop
insl
cmpsb
inc
cs
leave
push
or
rol
sbbb
loope
imul
sub
mov
nop
add
push
fbld
cmp
nop
std
jo
lods
rorb
into
xor
popf
ret
loopne
or
cli
outsl
imul
leave
jg
pop
jae
mov
cli
push
clc
nop
aad
push
sarl
iret
xchg
icebp
push
xchg
push
push
dec
push
fs
repz
fisttpl
inc
fs
or
mov
jbe
cli
xchg
rclb
xlat
insl
mov
ds
mov
inc
jo
cltd
and
push
dec
xor
sbb
mov
pop
push
aam
in
rcll
cmp
and
loop
mov
jbe
inc
mov
mov
xchg
push
out
imulb
ds
into
fidivs
out
push
push
mov
jbe
inc
mov
mov
xchg
push
out
imulb
ds
into
fnsave
incb
push
lcallw
push
dec
cmpsb
pop
mov
xchg
push
out
imulb
push
es
push
mov
jbe
inc
ds
dec
cmpsb
mov
loope
outsb
xchg
or
cmp
sub
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmp
popf
or
subl
inc
int
cmp
lea
fstpl
dec
cmp
popf
or
in
pop
fisttpll
mov
sbb
in
insl
fstpl
dec
cmp
popf
or
in
pop
fisttpll
mov
insl
call
or
mov
fs
jb
cmp
faddp
jne,pn
xchg
sbb
data16
mov
mov
jb
add
movsl
lds
andb
arpl
in
out
pop
pushf
mov
test
jnp
push
loope
stos
mov
dec
add
mov
int
jge
pop
pop
mov
or
cld
xchg
std
add
dec
popf
dec
push
and
jl
jb
lods
cs
cmp
outsb
and
jo
std
dec
adc
js
sub
loope
lods
mov
sub
pop
int
add
aad
daa
pushf
repnz
push
ss
stc
push
pop
dec
cli
ret
insl
sbb
or
sbb
dec
mov
or
in
pop
fisttpll
mov
sbb
in
insl
fstpl
or
dec
jle
fisttpl
sbb
leave
mov
out
jae
arpl
lods
adc
fistpll
out
popf
dec
ficompl
cwtl
es
sbb
lret
dec
lea
adc
and
sub
stc
cmp
dec
int
cmp
lea
fstpl
dec
cmp
popf
or
in
pop
fisttpll
mov
sbb
in
insl
fstpl
dec
cmp
outsl
jb
lods
cmp
mov
and
jmp
aam
fdivrl
loope
jl
iret
lea
leave
cmp
mov
std
ds
sbb
xchg
or
mov
push
push
add
xchg
jo
jmp
adcb
imul
lcall
scas
es
decl
adc
ds
sbb
inc
mov
inc
fadds
mov
sbb
int3
out
faddp
dec
pop
mov
hlt
and
adcl
repz
insb
jl
inc
mov
pop
mov
xlat
aaa
jne
movsl
sbb
cmp
in
ljmpw
arpl
mov
call
in
push
xchg
sbbb
dec
xor
pop
sub
shlb
jne
std
push
mov
movsb
int
xchg
mov
fcompp
mov
push
push
adcb
sbb
rcr
in
popa
xchg
sbbb
mov
dec
jb
ja
mov
push
icebp
aam
and
push
test
adc
add
sbb
and
test
fidivs
mov
dec
lock
clc
cmp
add
test
xchg
das
test
push
jmp
mov
xchg
mov
xchg
push
xchg
daa
jno
fldcw
in
sub
dec
fs
call
ja
dec
js
cmp
rclb
mov
in
dec
test
lret
add
inc
pop
inc
lret
aam
or
lock
xchg
jge
rcrb
pop
cmpsl
imul
pushf
mov
fucomip
inc
cmpsb
js
shlb
shll
lahf
frstor
loop
mov
out
pop
dec
and
das
lahf
jge
in
ficoms
mov
mov
mov
push
pop
fwait
leave
loopne
pop
cmpsb
mov
movsb
ss
ja
and
inc
xor
es
js
pop
inc
lret
adc
sbb
scas
outsb
lods
rorb
rclb
jle
jl
push
shl
mov
ja
xor
lahf
jg
in
add
dec
and
pop
cmpsl
fdivp
cmpb
cmp
insl
push
out
cltd
push
mov
imull
stos
mulb
adc
sub
iret
leave
mov
mov
dec
mov
popa
jle
xchg
int3
mov
and
dec
jns
pop
and
add
mov
jnp
mov
sub
add
sti
add
stos
inc
cmp
mov
and
mov
cwtl
popf
aad
sbb
outsl
pushf
gs
shrl
adc
sbbb
outsb
lods
jl
cmpsl
dec
out
addr16
cmp
cmp
repz
fdiv
jno
int3
stc
outsb
int3
pushw
shlb
mov
stos
iret
and
dec
cld
xchg
sub
out
outsb
push
jl
inc
lods
inc
cmp
pop
push
outsb
cs
push
mov
pop
xchg
jno
leave
and
lahf
jecxz
shl
and
fs
cmp
js
xchg
test
stos
mov
adc
adc
inc
hlt
hlt
inc
out
pop
movsl
inc
mov
adc
inc
fiadds
xlat
and
dec
lock
or
movsb
pop
dec
mov
push
sub
es
scas
push
in
out
divb
ljmp
or
push
xchg
add
jp
pop
ror
sti
sbb
out
mov
adc
ja
push
xor
pop
inc
sbb
pop
rcll
pusha
les
adc
outsl
jmp
push
test
pop
imul
cmp
lock
xchg
in
push
aaa
fs
jb
dec
jns
inc
rcrl
xchg
cld
sub
sub
mov
arpl
std
xor
insb
rclb
movsl
push
inc
jbe
cmp
jnp
dec
xorb
mov
xor
dec
jl
call
repnz
mov
fs
or
mov
fcmovbe
jno
cmp
aam
add
jp
popa
mov
cld
call
jge
std
mov
mov
movaps
push
aaa
push
repz
mov
push
out
jecxz
jle
ljmp
inc
sub
xor
stc
sbbl
adc
sub
sbbb
leave
and
stc
xchg
xchg
mov
mov
sbb
inc
sbb
xchg
mov
addl
gs
mov
imul
sbb
jp
sub
xor
pop
jb
lahf
loopne
scas
nop
loop
lods
cmpsb
mov
xor
aas
notb
mov
int3
mov
aam
pushf
arpl
xchg
sbb
cli
mov
fmuls
lods
cmp
ror
pop
aam
cmp
je
dec
dec
pop
int3
lock
sub
adc
popa
imul
and
push
xor
dec
sbb
push
push
lods
cmp
xor
rcr
into
out
and
js
pop
divb
in
insl
shl
mov
sahf
push
jmp
test
lret
add
icebp
stos
or
dec
ret
pop
popf
scas
sti
imul
aad
jae
cmp
repz
js
sti
mov
or
push
stc
cmp
dec
jmp
in
adcb
dec
adc
addb
test
popf
lret
stos
mov
stos
mov
stos
mov
out
mov
das
xchg
pop
dec
push
addb
jge
cmp
cmpsb
scas
push
sub
mov
or
sbb
cld
push
loope
xor
in
shl
dec
sub
les
repnz
adc
sbb
js
add
cmp
adc
movsl
shrb
movsl
or
xchg
test
js
xchg
mov
inc
jle
mov
loope
xor
shlb
fcoms
cmp
test
sar
inc
fxch
pop
aad
pop
sbb
enter
nop
loope
test
sub
pop
ss
loope
sbb
push
std
mov
movsb
lods
test
insl
gs
push
mov
mov
xor
xchg
notb
adc
cmp
mov
cmp
jg
xchg
faddl
xchg
xchg
loopne
jno
fnsave
jb
inc
repnz
xor
push
pop
insl
lods
jge
addr16
xchg
mov
fs
test
leave
icebp
jmp
add
repz
mov
imulb
xchg
mov
movsl
roll
xlat
add
jno
lea
shl
fnstenv
and
call
mov
testl
xor
fstl
insl
out
stos
arpl
out
mov
jge
leave
sbb
pop
jnp
push
andl
or
sbb
ja
rcll
mov
xchg
push
push
sub
xor
shr
adc
inc
ret
jno
add
cli
stos
push
or
xchg
dec
ljmp
adc
xor
stos
mov
aad
jmp
lods
das
mov
pop
mov
inc
lcall
add
or
cmpsb
lcall
idiv
adc
js
movsb
inc
outsb
mov
cmp
jge
ljmp
mov
scas
or
jnp
ljmp
pop
push
insl
insl
cmp
icebp
cld
cmc
and
jne
cmp
js
fimuls
pop
ret
imul
enter
or
lcallw
enter
or
sahf
not
push
sub
dec
push
ja
fistl
lods
xor
test
sub
repnz
out
sub
outsb
cmp
sbb
fisubl
inc
push
add
test
mov
addr16
sarb
and
or
lret
xlat
inc
mov
xor
sbb
fs
ficompl
movsl
rcrl
mov
mov
cwtl
das
or
push
loope
dec
repnz
dec
loop
cmc
int3
pop
inc
es
fwait
loopne
dec
popa
sbbb
dec
xor
xchg
pop
out
mov
jl
mov
jecxz
in
adc
adc
lock
or
mov
in
xor
push
mov
pop
ret
inc
movsb
cs
push
mov
push
dec
lea
es
in
outsb
mov
xor
rorl
adc
leave
std
sbb
adc
dec
fcoms
and
pop
hlt
out
aam
cmp
xor
mov
adc
dec
ss
dec
add
push
call
in
mov
icebp
test
mull
push
xor
xchg
in
jae
dec
pop
sbb
cmpsb
mov
insl
lret
and
out
mov
in
and
int
push
pop
pop
sbb
outsb
call
lock
sbb
stc
movsl
frstor
push
xorb
cmp
cld
or
icebp
add
inc
icebp
xchg
or
pop
adc
adc
xor
push
push
shrl
cmp
rcrb
sub
cmp
sub
es
xchg
pop
dec
fisttps
pop
xchg
leave
cmp
cmc
pop
adc
cmp
mov
leave
ret
rcrb
mov
call
cmpsl
les
xchg
inc
or
and
and
inc
lea
xor
fstpl
cli
push
push
jg
push
xchg
loop
mov
stc
bound
iret
out
pop
pop
mov
iret
shll
out
nop
aas
add
mov
sbb
data16
xorb
adc
test
daa
push
jno
jle
ret
nop
xlat
aas
cld
psignb
cmpl
bound
arpl
jns
adc
pop
ficoms
mov
mov
mov
add
gs
jle
mov
fs
jno
das
sub
sub
in
les
sbb
xchg
adc
pushf
push
push
fcmovbe
and
mov
push
scas
jne
int
push
loope
jmp
aaa
lods
cmpsl
xor
dec
xlat
lock
mov
jge
cmpsb
lret
outsb
xor
sarb
push
outsl
fcoms
imul
clc
insl
pusha
add
jb
sub
xchg
mov
imul
dec
ds
test
stc
mov
mov
mov
xor
mov
subps
xor
shl
cmc
in
repnz
rorl
andb
repz
into
push
in
or
arpl
mov
mov
je
pop
andb
push
mov
jp
jnp
repnz
dec
inc
xor
aam
xor
fucomi
push
das
movntps
inc
inc
mov
testb
mov
pusha
ljmp
hlt
insl
mov
popa
dec
push
jge
out
jl
mul
lea
je
fwait
imul
pop
xchg
cmc
inc
mov
jo
jle
sub
loop
add
outsl
xchg
xchg
and
sub
mov
or
loop
jnp
push
jmp
std
mov
jo
pop
popa
inc
mov
and
cld
pop
inc
mov
xor
xchg
stc
pop
or
xor
dec
lods
add
iret
js
mov
push
addl
adc
cmp
push
into
rolb
jmp
inc
sub
insl
sbb
add
xor
sbb
jne
repnz
and
pop
sti
repnz
sbb
inc
insb
out
andb
ret
iret
sub
ror
sbbb
mov
push
cs
aas
xchg
xor
pop
popa
adcb
inc
adc
in
add
or
jge
arpl
ljmp
loop
mov
cltd
imul
test
movsb
mov
sub
inc
mov
aas
mov
cwtl
je
cli
dec
hlt
push
sub
fcmovu
dec
ja
mov
mov
push
sub
xchg
xchg
and
and
aad
push
loopne
mov
aaa
pop
xchg
add
fisubrs
ja
push
icebp
xorb
mov
cmp
shrb
push
add
outsb
fcmove
in
jmp
dec
mov
aad
sbb
cmp
or
jnp
jmp
lret
and
dec
movsl
inc
mov
adc
sub
sbb
fwait
gs
xor
frstor
lahf
shl
inc
mov
sbb
inc
repnz
pop
hlt
mov
cs
sbb
mov
mov
rcrb
xchg
xor
xor
gs
lret
mov
enter
adc
lods
jle
mov
sbb
mov
stc
mov
stos
sarb
lahf
repnz
dec
sub
mov
cmpsl
xchg
pop
add
and
adc
inc
or
inc
jge
xchg
xchg
or
ja
and
sub
dec
inc
mov
sbbl
or
jb
out
fwait
popa
test
inc
jns
enter
enter
fidivrl
jae
sbb
xor
sbb
rolb
nop
push
loopne
in
sahf
int
movsl
cmpsl
mov
xchg
pop
jg
scas
test
lds
add
clc
sbb
adc
push
insb
dec
rcl
enter
pop
or
add
add
mov
push
dec
sub
push
jecxz
mov
clc
adc
loopne
and
pushf
lock
call
dec
js
outsb
mov
mov
add
negl
ljmp
mov
inc
cli
pop
push
push
mov
and
add
addr16
inc
std
test
lret
jle
dec
pop
dec
xor
mov
and
xchg
daa
sbb
fmuls
test
ret
push
imul
aam
mov
repnz
xchg
mov
sti
inc
pushf
cmp
hlt
jae
sub
inc
dec
add
out
mov
inc
lds
mov
icebp
jns
stos
jl
das
lea
and
cmp
sbb
pop
cwtl
mov
insl
push
inc
mov
out
imul
loop
and
cwtl
xor
movsl
pop
adc
jecxz
lcall
jl
or
push
pop
jne
dec
inc
inc
mov
dec
into
add
and
or
mov
sub
dec
stc
pop
movsl
xor
jle
jno
ljmp
sbb
mov
movsl
sbb
test
jbe
mov
test
sbb
test
int
cli
push
divl
enter
fs
jno
ja
mov
sbb
jp
lds
mov
and
add
fs
outsb
and
sbb
xor
cs
into
mov
repz
lret
movntq
xchg
js
cmc
xor
push
push
enter
data16
dec
push
into
mov
xchg
inc
lods
dec
fildll
lock
mov
dec
andl
inc
aaa
or
or
cmp
sbbl
xor
dec
in
or
mov
popa
mov
and
imul
adc
cli
cmp
bound
jg
sub
iret
dec
mov
sbb
test
dec
imul
lret
sarb
ret
insl
ret
fisubs
test
mov
push
push
dec
jl
inc
sub
int3
stos
negl
and
xor
sub
rol
popa
movsl
cmpsl
movsl
aam
scas
add
sbb
aaa
pop
or
jnp
mov
incb
push
cwtl
lret
and
leave
mov
mov
push
adc
int
or
push
xor
out
sbb
jns
test
icebp
pop
cmp
jnp
or
xor
mov
les
push
popa
lahf
jns
mov
jecxz
les
jge
loopne
lcall
rclb
add
add
dec
cmp
dec
mov
popf
popf
lret
fistl
push
mov
mov
adc
pop
fdivl
stc
mov
negl
mov
test
inc
imul
bound
add
mov
mov
mov
pushf
mov
stc
enter
icebp
jge
movsb
push
jp
divl
ljmp
scas
cld
icebp
lret
ficomps
pushf
nop
adc
pop
dec
nop
pushf
mov
sub
xchg
mov
inc
mov
lock
jp
cmpsl
sahf
jg
lret
push
add
aas
lods
sbb
jae
leave
inc
imul
xchg
adc
mov
aam
dec
mov
dec
fnsetpm(287
sub
stc
mov
xchg
sub
or
fsubrs
lea
mov
pushf
cmp
mov
add
mov
add
push
add
stc
add
popa
fstpl
add
jle
cmp
or
js
jmp
into
bound
or
aas
xor
in
jnp
cmp
aaa
cmp
insl
incl
push
cs
push
call
mov
cmp
mov
jg
mov
jae
mov
xchg
scas
lret
cltd
outsl
mov
or
loop
cs
push
dec
add
mov
dec
out
out
push
cwtl
ja
std
fists
or
aad
testb
jmp
in
stos
jnp
sbb
rclb
js
ret
push
test
int3
jge
or
repnz
int
add
out
add
pop
mov
in
fwait
imul
add
scas
mov
scas
and
sbb
in
mov
cmp
inc
fs
mov
or
pop
push
inc
jne
xor
jbe
hlt
pop
pop
lods
push
adc
push
push
loop
mov
insb
faddl
fucomi
imul
leave
dec
ja
aad
xchg
xor
mov
push
pop
mov
imul
lret
push
or
cmp
mov
int
loopne
sahf
fwait
cmc
mov
ds
icebp
dec
add
adc
arpl
sbb
cmp
jbe
lahf
add
mov
jle
adc
movsl
insb
jbe
lds
into
mov
test
arpl
ret
push
fisttpll
dec
jns
add
repz
inc
fdivr
inc
sub
dec
loop
jle
aam
jae
in
mov
lds
ret
jmp
mov
out
add
int
lcall
int3
in
popa
mov
adcb
and
sub
lret
and
dec
orb
adc
push
push
imul
insl
les
fldpi
pop
and
cmp
je
movsb
lret
xor
sub
dec
imul
repz
adc
or
stos
pop
lods
test
jl
cli
aaa
lcall
xchg
or
pusha
mov
icebp
dec
xor
roll
xchg
and
aad
movsl
sub
cld
mov
sti
jne
cmpsl
inc
adcb
and
ficoml
push
loope
inc
jbe
and
imul
xchg
shl
in
inc
sbb
inc
cld
in
rcr
xor
add
and
shll
mov
mov
sbb
and
cwtl
push
cmc
pop
fiaddl
mov
fabs
xor
xor
das
and
cli
stos
xlat
sbb
shrl
push
mov
js
adc
mov
mov
outsb
jecxz
pop
mov
push
aaa
test
cmp
pop
hlt
das
pop
jno
jmp
pop
push
aad
arpl
jnp
imul
inc
sub
dec
lods
cld
push
or
stos
inc
sub
adc
sar
hlt
inc
jnp
repnz
aam
test
mov
add
sub
bnd
out
scas
sbb
std
das
or
push
fcoms
mov
ret
dec
inc
arpl
mov
out
pop
cltd
jns
js
ljmp
sub
movsl
aad
inc
aas
mov
dec
xchg
sub
pushf
sub
rcrl
mov
xor
cmp
push
enter
sbb
clc
in
jecxz
cmp
mov
cltd
xor
cwtl
pop
cli
inc
mov
call
fdivrs
jl
sti
mov
xchg
js
outsl
mov
fildl
cltd
rcll
jbe
arpl
pop
push
dec
jno
test
and
leave
in
sub
fdiv
jp
sbb
sarb
mov
jno
adc
cwtl
sub
aas
pop
sbbl
test
jl
xor
fs
and
arpl
aaa
jle
mov
scas
ljmp
xchg
into
push
shrl
loope
hlt
sub
in
pop
orb
lcall
mov
fcoml
mov
scas
scas
out
jno
decb
lret
pop
jl
je
lret
or
outsb
dec
dec
in
pop
xchg
xor
adc
test
cmpsl
or
pop
into
mov
ja
sub
mov
fisttpll
dec
movsl
cld
xor
or
out
scas
lock
adc
aad
mov
pop
push
ss
or
fildll
out
daa
hlt
iret
lret
and
fldenv
lret
insb
inc
mov
sub
inc
xchg
push
andb
out
aaa
mov
jge
dec
jge
pusha
incb
cltd
sti
imul
sbb
mov
lret
iret
cmpl
loop
pop
les
sbb
lcall
popa
fmull
ljmp
pop
out
mov
cmpsl
outsb
into
xorb
mov
adc
adc
bound
mov
cmpsl
xchg
in
outsb
cltd
pop
mov
mov
ds
and
push
rorb
adc
mov
xchg
xor
inc
out
dec
cmpb
insl
gs
dec
lods
and
in
pop
fisttpll
mov
sbb
in
insl
fstpl
dec
cmp
popf
or
in
pop
fisttpll
mov
sbb
in
insl
fstpl
dec
cmp
popf
or
in
pop
fmull
mov
sbb
in
insl
fcompl
dec
cmp
popf
or
insl
fstpl
xor
push
xchg
sbb
gs
and
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
fstpl
imul
imul
popf
xor
jmp
sbb
mov
int
std
jns
or
cmp
jmp
sbb
mov
int
std
jns
or
cmp
test
stc
insl
mov
fmull
sub
imul
shrl
sub
call
clc
xor
rorb
fwait
xchg
negb
sbb
mov
pop
mov
jl
loopne
push
xor
sbb
or
adcb
pop
mov
mov
cmp
int3
ret
dec
enter
xor
cs
or
lods
xor
push
inc
xchg
adcb
sub
mov
mov
adc
sbb
and
test
stc
ret
mov
cmpsb
xor
call
cmp
sub
dec
push
insl
shrl
adc
in
sub
sub
fstpl
imul
sbb
leave
pop
jge
insl
mov
mov
int
xchg
adc
repz
leave
cmp
mov
lret
insb
sub
cmp
or
adc
jmp
lods
and
stc
add
pop
int3
jge
xchg
pop
sahf
push
xchg
adc
lea
mov
jge
insl
mov
mov
int
std
jns
or
cmp
jmp
sbb
mov
test
dec
push
stos
notl
xor
ret
into
imul
shrb
dec
mov
cltd
cli
pop
sarl
fists
fs
ror
lods
xchg
push
adc
pop
dec
int3
sbb
add
call
and
sbb
insb
mov
cmp
and
and
xchg
cmpsl
out
adcb
mov
cmp
adc
orb
fwait
lea
fnstenv
dec
in
pop
mov
sub
sti
or
or
pop
fnstenv
cmp
lret
mov
roll
decb
pop
mov
pop
mov
shrb
mov
sbb
and
movsl
scas
insb
cs
lcall
scas
xor
pop
jns
mov
mov
roll
mov
mov
out
xchg
jns
or
cmp
sbb
lea
aaa
or
mov
mov
gs
sub
xor
jbe
pop
add
ret
jbe
xor
push
shlb
pop
or
gs
movsb
ljmp
push
dec
sbbb
dec
sti
cmp
push
mov
aaa
cwtl
mov
ds
loope
dec
lods
je
mov
mov
mov
fdivrp
imull
and
mov
and
loop
jo
mov
pushf
cli
mov
jb
push
mov
or
out
and
sub
repnz
stc
mov
jo
push
sbb
mov
sbb
lods
mov
xchg
sbb
imul
lods
cmp
mov
mov
mov
jb
cmp
xchg
lret
jmp
adc
test
out
xchg
push
sbb
out
xlat
stc
movsb
cltd
add
lods
xchg
cmp
cmp
jl
adcl
pop
dec
loop
daa
mov
iret
ret
cmp
fucomp
jbe
dec
lds
adc
xor
movsl
stos
bound
insl
or
ds
jg
sbb
daa
stc
in
adc
adc
sub
popf
pxor
jmp
inc
test
mov
repnz
out
fstps
mov
add
pop
scas
push
fstl
insb
push
out
mov
add
les
mov
insl
or
dec
jle
ret
addr16
push
push
call
mov
xor
mov
cld
in
pop
or
bnd
xchg
add
xchg
sarl
mov
imul
lret
sub
fs
adc
js
sbb
jl
or
cmp
xorl
adc
push
in
sub
lods
loope
icebp
rsm
mov
ds
lret
cmp
aad
push
cmp
or
jo
leave
push
std
jno
fsts
add
xchg
adc
repnz
cmpsl
rcll
jmp
xor
mov
aaa
call
cs
mov
popf
add
mov
mov
sbb
xor
nopl
add
xchg
mov
add
xlat
js
push
ljmp
jle
mov
stos
xlat
repnz
mov
push
xor
js
inc
pop
dec
pop
fistpl
adc
popa
loope
fldt
push
sub
cmpl
and
add
push
adc
mov
repz
mov
sbb
sarb
fmul
xchg
lods
sbb
insb
lds
clc
mov
nop
test
hlt
adc
fiaddl
leave
inc
sbb
cwtl
or
lret
jl
push
xchg
aam
mov
out
dec
sbb
fsubr
test
aam
cli
cmp
jp
loopne
loopne
push
mov
int
test
and
cmp
inc
out
pop
loope
xchg
cmovle
or
rol
in
aaa
cwtl
mov
mov
popf
add
out
pusha
pop
imul
je
adc
mov
xchg
mov
mov
cmp
outsl
xorb
mov
in
outsb
fnstsw
lods
pusha
dec
add
fdivrs
add
cmpsb
xchg
jge
ds
cmc
push
leave
push
push
fdivrs
adc
jecxz
pop
addr16
mov
pop
aaa
dec
js
jge
ja
cmpsb
fbld
cmc
or
sar
ja
add
pop
stos
xchg
fsincos
in
stc
xchg
dec
je
aaa
cmp
ljmp
adc
pop
rolb
test
std
in
mov
dec
in
out
jge
ret
popf
aas
dec
xor
dec
arpl
shrl
std
adc
dec
jno
loope
jle
add
insb
cmp
jbe
push
insb
lods
loope
jbe
stc
lahf
lret
inc
xor
mull
icebp
adc
or
sbb
movsw
mov
push
fsub
xchg
es
insb
outsb
jns
out
mov
mov
outsb
mov
fs
lds
imul
sbb
adc
cli
add
out
orl
cmpsl
fwait
or
out
gs
imul
jg
mov
xchg
enter
fiaddl
mov
mov
xchg
or
enter
jno
adc
mov
div
imul
dec
bound
inc
mov
xor
lods
cmp
jb
mov
pop
pop
jecxz
xchg
imul
xlat
push
dec
icebp
inc
xchg
dec
fisttps
inc
cmpsb
test
popf
daa
pop
fadds
xchg
mul
dec
push
les
sbb
xchg
repnz
push
stos
cli
mov
push
hlt
xor
jae
enter
push
mov
leave
hlt
pop
in
shrl
stc
jg
test
aad
rolb
mov
push
pop
ret
cmp
mov
mov
punpcklbw
push
dec
pop
mov
je
mov
mov
jl
dec
jg
jg
in
xor
inc
pop
mov
mov
inc
mov
stos
adc
aaa
jl
lret
push
cmp
jl
push
mov
fwait
imull
movsl
cmpsl
aad
ds
dec
add
inc
int
mov
out
stc
jb
dec
xor
fs
mov
ret
add
cmpsl
lea
in
out
scas
or
push
adc
scas
adc
fs
jnp
mov
or
sbb
pop
in
pusha
jo
sub
cmp
cmp
adc
xor
cltd
adc
or
mov
mov
xchg
xchg
push
pop
cmp
pusha
ret
jle
sub
and
dec
inc
stos
or
mov
lret
mov
jle
sbb
clc
out
cli
xor
outsb
lahf
ss
jnp
subb
repnz
push
daa
inc
repnz
sbb
mov
mov
gs
imulb
mov
iret
cmpsl
frstor
sub
testl
test
ret
repz
rolb
push
out
lcall
or
and
pop
xor
cvtpi2ps
jb
jb
test
pop
push
cltd
ja
mov
or
jp
jl
mov
add
stos
xchg
xor
outsb
xchg
cmp
daa
dec
mov
scas
or
mov
and
cmp
cltd
push
dec
mov
jb
repnz
aas
test
stos
dec
cmp
push
aad
add
or
dec
fnstsw
mov
leave
js
mov
das
adc
push
push
dec
add
or
jbe
mov
rol
sub
mov
lret
ljmp
inc
or
adc
fisubrl
bound
xchg
loope
clc
mov
mov
and
out
mov
push
aaa
xlat
imulb
and
jb
cmp
dec
mov
ficoml
sbb
cmp
scas
sbb
lret
xorl
das
jg
test
sarb
mov
jae
cmpsb
repz
mov
xchg
inc
call
xchg
scas
mov
xchg
jmp
sahf
mov
mov
sbb
xchg
add
xchg
pop
push
inc
add
adc
dec
out
mov
or
inc
jno
in
add
push
aam
jns
lcall
push
je
dec
cmc
rcrl
mov
cmp
scas
imul
pop
push
outsl
enter
aas
shr
xor
bound
fdivl
ret
inc
mov
or
adc
jge
xor
fiaddl
inc
xchg
movsb
test
stos
xor
in
pushaw
inc
subl
jle
push
repnz
aaa
cmp
dec
iret
sub
fmull
add
or
shl
pop
and
or
jecxz
popa
pop
pop
movsl
lods
cs
jge
mov
repnz
dec
sbb
pushl
pusha
mov
mov
loope
push
inc
cmp
jnp
ret
loope
sbb
sbb
xchg
push
adc
jmp
insl
xlat
es
jae
js
mov
push
inc
dec
test
and
sbb
and
or
cmp
mov
dec
xor
xchg
icebp
mov
cmp
mov
mov
pushf
mov
mov
jae
scas
out
rol
push
inc
dec
test
sub
ror
jmp
mov
std
xor
pop
dec
mov
shrl
outsl
popa
fsubs
icebp
push
adc
jne
dec
jmp
aaa
adcb
cmp
test
dec
add
aaa
sarb
inc
imul
repnz
ljmp
mov
sbb
push
jge
fsubl
push
xchg
lods
pop
iret
stos
in
xchg
lock
shll
rorb
scas
cmp
jge
jge
jmp
leave
inc
cmp
aaa
inc
push
mov
mov
fisttps
repnz
and
adc
pop
inc
mov
outsb
popa
cld
lret
jle
cmp
jle
add
ret
popa
xchg
aad
lds
fnsave
add
pop
sbb
test
mov
out
sbb
imul
cltd
mov
push
fwait
push
pop
clc
inc
xchg
aaa
pop
ret
dec
cmp
fldcw
in
jl
jbe
mov
sahf
dec
pushf
push
inc
adc
xlat
je
test
stos
dec
cmpsl
mov
dec
ss
dec
dec
push
sub
add
mov
pop
jl
xchg
jl
enter
lods
add
cltd
aad
rcl
lret
jae
sub
mov
mov
int
std
in
shrb
add
xlat
xchg
icebp
add
xchg
jne
and
sub
xor
or
push
jne
pop
outsl
xlat
add
loope
jecxz
repnz
pop
mov
faddl
js
aaa
mov
push
inc
and
cmp
jae
inc
imul
in
iret
jg
stos
jp
lret
jo
push
inc
lock
testb
and
cmp
mov
sti
pop
in
fwait
adc
pop
xor
pop
lea
fdivs
dec
adc
inc
xorl
mov
cmp
xchg
je
aad
dec
insl
je
pop
aad
cmp
popf
sub
inc
jae
data16
xor
add
mov
out
push
mov
xor
or
aas
xor
pop
into
pop
out
xchg
fnsave
pop
mov
adc
jmp
dec
xlat
lcall
cmpsb
lret
call
mov
movsb
test
mov
negl
add
dec
fildl
scas
sbbb
fisubs
xchg
inc
mov
sti
mov
sub
fisttps
xlat
push
icebp
jle
dec
dec
dec
sbb
lods
mov
fildll
insl
cmpsb
xor
mov
insb
mov
cmpsl
inc
xchg
in
imul
fiadds
xor
pop
rorl
mov
jle
add
push
sbb
cmp
addr16
lods
xchg
mov
ja
adc
jecxz
dec
jo
xchg
pop
pop
out
pop
push
mov
hlt
add
and
cmc
stc
lock
sub
fisubs
pop
lock
cmp
pushf
jne
sti
popf
jecxz
scas
dec
cmp
jmp
cld
sbb
inc
push
daa
filds
daa
int3
cwtl
push
jae
addl
push
pop
cmp
stos
add
stos
dec
test
icebp
lret
addr16
fisubrs
and
cmpsb
mov
int
mov
cmpsb
subl
cmpsl
mov
adc
or
mov
out
into
sub
es
pop
xchg
or
add
sbb
cld
dec
orl
cmp
push
mov
or
insl
mov
loopne
xchg
imul
inc
movsb
fisubs
push
lods
adc
fistl
mov
or
fisubl
lahf
pop
xor
inc
sbb
mov
sbb
fisubrl
add
fcompl
scas
fsubl
dec
imul
leave
inc
add
divl
adc
pop
xchg
call
xor
push
xor
sarl
into
leave
cs
repnz
sbb
dec
push
je
pop
and
mov
mov
adc
js
test
mov
in
hlt
aaa
stos
cmc
fwait
and
fimull
xchg
enter
xor
dec
xlat
push
or
ficompl
ja
imul
mov
lock
ss
xchg
cmp
ds
int3
sar
pop
in
call
or
push
cld
xor
cli
dec
arpl
cmp
insl
pusha
or
cmc
sub
je
mov
imul
orb
xlat
push
leave
xchg
divb
jno
inc
mov
icebp
testl
cmc
push
or
mov
and
mov
sbb
popa
and
pop
sbb
cli
cltd
jle
mov
insb
sub
xor
insl
sub
cmp
add
cwtl
adc
lret
jg
std
sbb
or
cmp
es
pop
flds
mov
fstps
pop
xchg
adc
jbe
mov
fistpl
mov
jge
int3
ja
fldt
sbb
cmpsb
test
data16
mov
pop
jmp
jne
push
jne
and
jmp
push
in
nop
les
or
dec
icebp
add
ret
sub
sbb
and
inc
movsb
int
rclb
imul
mov
iret
inc
pop
adc
or
push
insl
test
or
es
gs
jbe
mov
mov
add
mov
ret
push
dec
ror
movsl
mov
into
stos
in
lds
int
mov
mov
xchg
shr
pop
dec
dec
inc
ja
vmread
loop
ret
dec
mov
xor
xor
or
or
imul
adc
pop
inc
xchg
and
sbb
add
xor
mov
lds
and
sbbl
sub
mov
mov
and
add
xor
scas
jno
lods
jae
push
fwait
iret
fisubrs
fwait
cmpsl
popf
repnz
imul
inc
insl
inc
inc
sarl
or
pop
xchg
es
adc
out
push
mov
cmp
ljmp
scas
add
push
jo
adc
iret
xor
iret
jle
inc
lret
mov
adc
std
mov
sar
jno
mov
mov
sbb
cld
xchg
lock
pop
repz
sbb
push
mov
xchg
add
scas
mov
cmc
pop
adc
fsubl
push
outsb
out
mov
mov
ja
and
clc
in
push
adc
int3
jb
movsb
sarl
add
push
shrl
in
fsubr
mov
mov
xchg
push
fwait
cwtl
cmp
leave
cltd
divl
adc
stc
stos
in
icebp
aad
pop
inc
faddp
add
pop
jl
das
mov
movsb
inc
sbb
xlat
inc
jl
into
gs
sub
out
push
rolb
loop
sti
lds
xlat
dec
in
popa
insl
jg
cs
xor
mov
in
push
xor
jge
movsb
pop
adc
inc
add
lahf
dec
hlt
add
mov
cmp
pusha
jecxz
jge
scas
aas
es
pop
mov
pop
sbb
xchg
cmpsl
adc
pop
sbb
lcall
dec
dec
adc
mov
data16
jb
cli
repnz
arpl
xchg
inc
test
aam
je
cmp
fwait
adc
push
lret
lock
xchg
stc
dec
cwtl
push
pop
aad
fnsave
jo
aas
mov
pop
mov
fwait
mov
xchg
add
idivb
in
loop
xlat
insb
ret
cmc
iret
imul
pop
inc
pop
adc
xchg
mov
pop
cltd
and
or
sbb
in
mov
mov
or
mov
outsb
jecxz
stos
xchg
add
andl
xor
ljmp
xchg
adc
rorl
jo
dec
cld
mov
es
out
sbb
fs
mov
mov
jle
sar
divl
xchg
fbld
pushf
cmpsb
test
insl
cmp
repnz
test
pop
into
cmpsb
fldcw
xchg
jne
cmpsl
stos
cmp
xor
in
pop
fbld
jl
fimull
jle
daa
outsl
dec
cs
adcl
shlb
mov
or
inc
and
arpl
scas
mov
adc
frndint
pop
xchg
cmp
inc
or
push
xchg
sub
mov
and
cmpsl
call
popa
int
movl
pop
and
iret
pop
subb
cmp
sbbl
movsl
adc
jae
pop
push
imul
mov
test
sti
mov
push
add
rcll
cmp
sub
jb
jno
mov
shlb
popf
out
movsb
sub
mov
xchg
dec
mov
rorl
pop
out
loopne
dec
aas
mov
inc
jecxz
out
adc
pop
sahf
pop
imul
out
in
jle
ja
add
movsb
decb
jge
push
xlat
rcl
mov
cmp
pop
iret
nop
xchg
or
mov
gs
jno
adc
insl
xorl
dec
dec
lods
dec
mov
mov
pushf
fsts
nop
mov
jns
aam
mov
or
lock
lcall
rorb
out
int
inc
adc
test
sbb
gs
ret
mov
mov
pop
lods
pop
into
aas
cld
cmp
int3
and
push
leave
xor
pop
sahf
mov
mov
mov
sahf
jmp
les
inc
xlat
les
xor
adc
imul
sub
fs
bound
fcomi
cmpsb
adc
dec
inc
or
jno
loope
mov
jo
or
sbb
movsl
ds
aaa
lea
aam
pop
pop
in
ret
gs
cmp
cmp
mov
push
mov
lock
push
iret
scas
je
outsb
xchg
or
sbb
mov
cmp
aaa
lret
es
xor
cmp
insl
cmp
fbld
imul
cmp
pop
pop
mov
arpl
and
xorl
adcl
and
and
jno
mov
cs
xchg
insl
dec
add
push
push
std
and
xchg
and
stc
divb
out
movsb
out
xchg
cmp
xor
pop
out
je
les
in
or
test
lahf
xlat
pushf
out
pop
pop
mov
loopne
jecxz
test
repnz
sbb
clc
insl
pop
jbe
repnz
mov
and
mov
inc
add
and
sbb
shl
pop
mov
pusha
inc
inc
popf
inc
std
inc
rorl
add
aad
lds
fstpl
sub
mov
out
add
jmp
inc
call
mov
inc
shrl
in
mov
das
inc
xor
pop
xchg
push
sub
sbb
pop
push
lahf
test
jno
leave
xchg
mov
insb
pop
push
or
dec
xor
sbb
stos
push
and
test
add
lcall
push
mov
mov
subb
cmp
sbb
inc
mov
insb
pop
adc
adc
jnp
adc
movsb
and
xlat
xchg
add
dec
fimuls
mov
cmpsb
arpl
mov
xchg
sbb
xchg
ljmp
imulb
sbb
mov
lret
inc
fwait
pop
out
dec
rcrl
cmc
btc
adc
test
pop
wbinvd
inc
data16
mov
aaa
orl
xchg
or
push
insl
adc
mov
inc
dec
push
inc
pusha
jno
add
scas
cmpsb
popa
mov
shll
or
dec
or
repnz
loop
inc
add
loope
outsb
lret
loopne
and
and
inc
ljmp
jbe
insl
stos
lahf
or
cmc
test
jl
cmp
cmpsl
test
aaa
fsts
pop
aad
and
sbb
and
adc
mov
mov
imul
shl
xchg
in
inc
in
test
mov
sub
lea
insl
imul
call
repz
cmc
xchg
ljmp
loop
push
push
fs
test
shlb
adc
jbe
and
sbb
dec
sub
out
xlat
rcrb
lahf
shll
adc
ljmp
daa
or
sti
clc
pop
mov
jne
sbb
shlb
xlat
adc
pop
jecxz
dec
movsb
div
iret
maskmovq
imull
lea
mov
stc
movsl
cmpsl
add
dec
icebp
add
mov
xor
xor
rcr
xchg
fcompl
and
testb
cmc
dec
jo
fists
shl
mov
test
int
jg
xlat
lds
mov
aam
and
and
add
xchg
je
adc
pop
sbb
ds
pop
sub
test
cmp
jmp
repnz
ret
pop
mov
loop
dec
jns
fsubrs
mov
inc
inc
adc
in
or
cmp
jmp
sbb
mov
int
std
jns
or
cmp
jmp
sbb
mov
dec
jmp
popf
sbb
leave
fstp
dec
jmp
sbb
mov
int
std
jns
or
cmp
inc
jge
sbb
xchg
jmp
shrb
test
rorl
mov
push
mov
sarl
scas
lds
xor
inc
mov
cmpl
mov
sarl
loope
fildll
sub
push
into
popa
fidivs
daa
ds
push
cmp
outsb
icebp
jle
dec
jmp
ret
scas
add
inc
xchg
popf
aaa
adcb
adc
jge
insb
aam
into
jle
lds
xor
out
inc
arpl
fisubl
out
pop
inc
sahf
sahf
cmp
aad
dec
inc
aam
pop
inc
push
test
pop
nop
in
add
sbb
push
jmp
iret
ljmp
xabort
inc
xor
mov
scas
add
add
hlt
iret
dec
mov
lods
stos
mov
mov
cmpl
mov
aad
loope
and
jl
test
xor
push
xchg
fmul
sahf
fmull
fs
es
aad
jne
dec
and
mov
rcll
arpl
cld
inc
cs
cld
sarl
outsb
dec
aam
popa
xchg
mov
lock
push
aam
jbe
fistpl
sub
adc
lea
mov
aad
mov
sarl
loope
arpl
and
mov
push
int
fldl
fs
mov
out
inc
mov
push
mov
xchg
mov
dec
xlat
pop
sarb
sub
pop
ret
mov
add
add
add
pop
jno
int
jle
dec
loope
icebp
scas
add
xor
inc
push
into
popa
fidivs
cmpl
mov
sarl
loope
icebp
scas
add
xor
inc
push
into
popa
fidivs
sbbl
fdiv
dec
inc
into
dec
leave
imul
movsl
cmpsl
dec
ljmp
mov
sahf
xchg
mov
cwtl
mov
lret
lods
adcl
sub
out
inc
sub
xor
cltd
into
push
dec
in
roll
or
or
lods
sbbb
enter
adc
inc
sbbl
es
jo
or
xor
pop
data16
bnd
push
imul
sub
jecxz
bound
int
iret
dec
stos
mov
push
mov
sbb
jmp
test
int
roll
icebp
fdiv
aaa
imul
pop
stos
nop
push
push
add
stc
mov
mov
test
or
cli
cmp
sbb
push
xor
cmp
cmp
stc
inc
std
jl
ficomps
cmp
mov
lcall
xchg
add
popa
in
in
adc
jle
cmp
or
ret
and
sub
mov
test
mov
xchg
add
gs
hlt
ljmp
jns
or
jl
aas
scas
rol
mov
ror
xorb
mov
out
mov
lret
dec
inc
pop
scas
push
jae
dec
cmp
stos
cmp
lea
sub
popf
mov
je
clc
or
dec
inc
cmp
cmp
xchg
adc
or
push
dec
xchg
jle
loop
mov
inc
ficompl
mov
addr16
pop
enter
hlt
movsb
rorl
icebp
push
xbegin
cwtl
fstpl
hlt
inc
xor
cmp
mov
mov
pop
mov
jno
mov
mov
dec
adc
mov
hlt
push
pop
add
jl
fcmovu
sbb
lret
jp
test
adc
cmp
mov
shlb
jg
adc
add
mov
pop
inc
dec
out
pushf
push
push
and
add
inc
cmp
jno
fcmovu
nop
mov
pop
fucomip
sub
pushf
mov
xchg
dec
add
int
sbb
in
cs
repnz
add
data16
mov
inc
sub
clc
pop
mov
mov
lock
dec
mov
in
dec
fsts
xlat
mov
in
pushf
lea
pushf
mov
into
shlb
cmp
jge
cmp
mov
out
or
or
es
xchg
leave
mov
imul
aaa
js
aam
mov
outsl
lea
push
ret
popa
movl
insl
out
pop
stc
orb
xor
mov
arpl
out
loope
and
dec
jo
sub
sbb
xor
jecxz
sahf
push
push
loopne
cli
jmp
sbb
mov
insl
xchg
add
sub
hlt
ja
dec
pop
mov
les
inc
or
mov
out
fcompl
faddl
movb
pop
daa
inc
pop
das
lods
arpl
rcrb
mov
in
lcall
addr16
roll
movsb
sarb
add
jmp
sbb
inc
adc
cmp
cld
sbb
inc
push
mov
or
pop
loope
lds
pop
push
mov
xchg
insb
pop
cmp
push
ss
sbb
dec
not
or
sarb
nop
ret
cmc
pmuludq
pop
js
or
mov
mov
repz
mov
jno
and
loopne
js
out
add
cmp
push
stc
mov
aad
aaa
cs
mov
xchg
insl
scas
stos
push
and
or
call
pop
inc
pop
popa
mov
pop
mov
loop
stos
in
or
ja
add
scas
mov
and
lock
dec
jnp
mov
and
push
repz
inc
into
xlat
sbb
jmp
sbb
in
icebp
lock
or
ret
mov
sbb
mov
pop
outsl
push
pop
dec
roll
sub
inc
in
add
mov
jmp
xlat
ja
mov
mov
out
mov
nop
jmp
dec
loopne
call
rcrl
mov
ret
data16
and
test
add
lret
movsb
cmpsl
push
les
jp
filds
xor
ljmp
imul
pop
fdivrl
mov
outsl
cltd
sbb
mov
call
xor
pop
xor
lea
in
push
or
fs
hlt
sbb
mov
clc
repnz
les
dec
xchg
cmc
fistl
fptan
repnz
jns
lods
adc
bound
sub
sbb
nop
lods
mov
idiv
jl
xchg
or
dec
jl
pop
call
xchg
incl
out
pop
add
in
lods
cmp
sub
test
mov
mov
push
inc
push
fst
mov
cmp
mov
lods
ja
inc
repnz
call
jmp
cmp
mov
add
and
pushf
xor
aas
inc
cmpsl
out
cld
insl
loope
stc
lahf
leave
negl
test
leave
test
daa
xchg
sbb
fstpl
ds
and
jmp
fcoms
ss
add
inc
and
and
mov
push
pop
pop
or
test
insl
dec
mov
mov
pop
sbb
rol
sti
sbb
out
dec
adc
lret
daa
lds
sbb
mov
ja
rcl
dec
cwtl
push
mov
mov
mov
xchg
aad
sub
ss
dec
fmull
sti
xchg
in
inc
movsl
xor
dec
sub
decl
cmp
push
stos
xchg
jb
daa
fstpl
cmp
dec
push
inc
xor
int
xlat
ja
dec
outsb
test
mov
cmp
push
icebp
mov
mov
cmp
inc
push
mov
movb
mov
gs
nop
jne
sbb
add
flds
xchg
scas
mov
fisttpll
jo
stc
jge
xor
or
imul
es
out
xchg
push
push
and
aaa
sub
push
push
gs
sahf
sbb
inc
rclb
enter
jge
add
cmp
into
sbb
ret
in
lods
inc
mov
out
pusha
push
ja
enter
xchg
outsl
aaa
roll
loope
scas
loop
aam
movsl
sbb
adc
icebp
test
jb
xor
aaa
xchg
adc
test
repnz
mov
dec
xor
mov
and
iret
xchg
adc
mov
dec
les
shll
sub
push
adc
push
pop
scas
add
jmp
xor
stc
lahf
out
loop
push
sub
mov
aam
bound
mov
enter
add
jnp
mov
ljmp
or
dec
sahf
cmp
outsl
and
sbb
mov
movsl
sub
scas
in
sbb
jge
cmpsl
mov
mov
add
neg
mov
sub
mov
sub
or
gs
jns
jbe
pop
push
ja
filds
bound
in
int
mov
pop
rcrb
pop
jb
cmpsl
mov
and
mov
and
or
xchg
pop
mov
xchg
ss
maskmovq
imull
add
pop
mov
outsl
pop
ds
jp
jbe
xor
dec
mov
imul
int3
add
cmp
out
push
fadds
pop
int
push
pop
and
or
adc
loop
add
loope
pop
test
loopne
shrb
mov
xor
mov
cwtl
jge
sub
das
lret
leave
aaa
pop
pop
cmc
rcll
aas
sub
xor
insb
jp
popf
or
xor
xchg
mov
out
test
and
mov
mov
and
cld
or
repz
mov
adc
or
push
mov
mov
push
pop
inc
xor
out
xchg
add
jno
into
mov
pop
in
gs
fldenv
dec
lea
rclb
mov
mov
xor
pop
jo
popf
push
xchg
cltd
push
fiaddl
xor
adc
test
adcb
cwtl
pcmpgtb
adc
hlt
and
dec
pop
mov
adc
fidivrs
sub
std
mov
out
pop
sbb
sub
pop
sbb
push
into
and
push
mov
inc
cmovae
or
lahf
lock
add
xchg
leave
and
push
jmp
pop
push
mov
adc
decb
adc
adc
stc
sbb
sarb
xchg
pop
push
push
movsl
inc
dec
sarb
leave
mov
or
mov
popf
lods
xchg
push
inc
js
arpl
fwait
sbb
ja
xchg
sbb
inc
push
pop
ja
repz
mov
inc
xlat
call
fimuls
ret
aaa
sub
xchg
lods
mov
mov
outsl
lods
mov
and
imul
enter
sub
aad
mov
roll
incb
into
aam
pop
dec
push
and
push
testb
dec
fnstenv
aad
je
ds
push
test
sti
mov
and
jle
xor
push
xor
fstpt
inc
xchg
pop
and
stc
add
pusha
mov
mov
or
in
int
push
mov
jmp
aad
pusha
push
sbbl
mov
xor
mov
jecxz
stc
push
cvtdq2ps
icebp
out
mov
in
rcrb
mov
lock
mov
xor
and
sarl
mov
sub
cmp
loopne
hlt
jno
jns,pt
mov
into
mov
rclb
negl
imul
mov
push
push
rorl
lcall
insb
iret
mov
inc
xor
rol
cli
and
push
dec
sub
cmovl
das
mov
xchg
sti
mov
test
fsubrp
arpl
fadds
imul
add
or
leave
stos
add
mov
add
push
mov
shlb
dec
sarl
fidivl
les
dec
aas
lcall
push
fmuls
add
sub
jecxz
fstpt
inc
lds
aaa
icebp
xor
subl
jnp
repnz
inc
push
jbe
call
push
rclb
cmp
clc
cmp
push
pop
movsl
inc
in
lds
lods
push
popa
jl
stos
in
fldenv
popf
xchg
mov
cmp
adc
outsb
imul
adc
jmp
jno
adc
stc
shl
add
mov
add
fdivr
xchg
jecxz
lahf
inc
mov
aaa
xchg
mov
fstpt
shrl
sub
rorb
and
stos
das
xlat
popf
gs
cmp
cli
jmp
adc
lret
out
clc
pop
adc
fadds
sub
dec
sbb
xlat
and
ljmp
scas
sub
push
inc
pop
pushf
mov
scas
aam
mov
call
jg
mov
icebp
lret
mov
cmp
aad
ja
mov
inc
repnz
dec
mov
push
pop
mov
add
dec
push
push
add
cmp
in
sub
dec
cmp
mov
pop
jnp
sarl
xor
mov
sbb
add
xlat
jmp
out
call
rorl
dec
fcomps
dec
leave
xchg
stos
pushl
std
inc
not
mov
mov
test
repnz
cli
enter
and
lcall
outsl
pop
sti
xor
nop
scas
sarl
jle
push
add
dec
mov
push
nop
repz
jae
pop
out
ss
jp
in
mov
or
adc
sub
mov
sbb
fisubrl
ljmp
xchg
pop
sub
adc
outsb
mov
mov
sar
daa
aaa
or
mov
in
or
incb
dec
fidivl
clc
and
mov
shll
xor
lcall
icebp
push
lds
pop
test
or
jae
pushf
daa
rol
sarl
mov
test
cmpsl
or
sub
add
faddl
jecxz
arpl
mov
mov
repnz
and
xchg
movsb
sub
sbb
insb
rolb
mov
and
xor
out
lret
xlat
push
mov
xchg
lahf
xor
loopne
inc
mov
jno
or
jle
stc
jbe
jne
cmpb
inc
addr16
or
lcall
out
sub
jmp
loopne
stos
mov
in
mov
in
pushw
xor
jns
sti
mov
subb
jp
stos
mov
push
insb
out
pop
cmpl
test
jne
lret
hlt
lahf
xor
pushl
xchg
test
cwtl
pusha
inc
into
out
cwtl
out
je
in
push
pusha
aam
insb
or
ds
mov
cmpsl
jle
dec
mov
ljmp
mov
push
push
orl
jne
push
sub
in
push
pop
les
stos
dec
insb
pop
mov
popa
fimull
xor
in
shrl
mov
push
int3
push
adc
lahf
ds
cli
das
pop
fbld
mov
icebp
jae,pn
jl
loope
fsubp
inc
push
cmp
and
sbb
or
inc
aas
test
repnz
pop
jb
jmp
mov
inc
mov
sarl
lods
rorb
fimull
xor
mov
movsl
mov
flds
push
inc
xchg
mov
cmp
gs
and
addb
aaa
and
leave
xchg
stos
aam
pop
in
xlat
cld
add
std
fcmovb
cmc
adc
imul
mov
mov
insb
sub
std
xlat
es
hlt
in
imul
lahf
aad
push
mov
cmp
filds
repz
aas
jbe
mov
and
push
mov
cs
mov
aas
ret
hlt
sub
sbbb
mov
or
ljmp
adc
jmp
cmp
adcl
cltd
cld
lahf
addl
mov
push
mov
inc
test
sub
pushf
pop
arpl
call
mov
xchg
jb
daa
xor
stos
leave
sbb
mov
roll
jg
pop
xor
mov
add
push
repz
cmc
sbb
xor
mov
push
jge
ljmp
xor
ja
jnp
mov
ljmp
shrl
or
repz
cmp
sbb
inc
xor
jge
fsubp
in
imul
pop
ret
jge
mov
imul
jo
bound
daa
dec
dec
dec
xlat
sbb
aad
aam
jle
cmp
push
pop
xchg
or
or
add
add
xchg
mov
into
aaa
das
jo
xor
enter
and
leave
push
jle
adc
sbb
dec
stc
inc
jmp
lods
xor
fucomip
and
fcomps
aad
push
fwait
shlb
orl
xchg
adc
cs
inc
mov
add
adc
loop
dec
and
aaa
mov
xor
push
pop
pop
jo
adc
cmp
mov
imul
scas
rcrl
packuswb
jl
or
adc
mov
aas
sub
roll
cmp
lea
xor
inc
and
lock
clc
aaa
test
push
mov
repnz
and
ljmp
out
mov
cld
test
jno
pop
xor
adc
mov
xor
outsb
push
shlb
dec
pop
push
sub
outsl
insl
test
sbb
mov
fs
mov
testl
shll
add
out
movl
mov
pushf
fcmovnb
sti
inc
repz
bound
stos
inc
inc
sub
jg
adc
adc
xor
mov
mov
or
rcl
cltd
jp
cmp
loop
in
inc
jb,pn
add
daa
or
pop
call
lock
lods
inc
fs
mov
mov
jle
and
loop
repnz
test
push
fnstsw
xchg
js
mov
xor
lods
or
sar
mov
cli
ss
in
cld
inc
pop
rclb
sub
test
jle
mov
and
and
fsubs
add
lret
mov
xchg
shlb
dec
inc
cs
or
jge
pop
sbb
sub
jp
lret
or
mov
jb
inc
icebp
jb
xchg
in
sbb
sbb
cli
jge
fldl
sahf
or
lock
fistl
push
cmp
jno
movsb
pop
mov
imul
and
cmpl
cld
test
mov
xlat
push
jnp
pop
jo
jmp
pop
mov
push
mov
push
imul
dec
jecxz
xor
jecxz
push
lea
popa
nop
mov
and
mov
les
cwtl
fwait
push
repnz
test
fstpt
push
aam
cmp
int
and
inc
roll
sbb
testb
mov
jge
ds
adc
ror
pop
pop
adc
mov
and
enter
or
or
jns
push
pop
inc
and
pop
adc
iret
hlt
cmp
mov
or
test
mov
or
cmpsl
and
or
dec
inc
rcrb
sbb
scas
loope
mov
loopne
inc
mov
and
das
dec
cmc
test
push
and
xor
ret
mov
pushf
pop
sbb
push
daa
xor
xor
sahf
add
xchg
jle
pop
mov
mov
mov
and
mov
data16
fnstsw
rcrl
std
fnstsw
fisttpll
stos
in
adc
and
xor
roll
xchg
std
add
or
icebp
dec
test
sti
pop
out
inc
mov
mov
xchg
jnp
ds
push
push
xor
js
iret
ret
push
push
push
outsb
sub
inc
add
sub
cltd
leave
fisubl
jecxz
out
sbb
or
xlat
icebp
pushf
push
pop
jg
pop
test
aam
jne
jg
jge
fistpl
jecxz
or
into
adc
sub
je
adc
sub
push
push
mov
lock
pop
gs
lret
and
xchg
insl
pop
mov
push
shrl
hlt
xchg
test
and
in
outsl
xchg
fstp
orl
pop
mov
std
int3
or
sbb
push
int3
adc
jnp
repnz
outsb
or
mov
lods
adcl
mov
into
inc
add
cli
and
icebp
setp
pushf
xor
inc
ds
je
outsb
mov
enter
dec
test
cld
imull
incl
adc
and
sbb
cmp
test
mov
sbb
imull
cli
mov
sahf
cwtl
lods
cmp
jp
add
xlat
sub
mov
mov
insl
dec
xor
mov
fyl2xp1
les
sub
cmp
lods
out
cld
sub
xchg
mov
jnp
aad
mov
xchg
sub
jb
pop
das
cmp
mulb
and
dec
mov
fcomp
xchg
out
loop
adc
into
jmp
cs
pop
call
dec
jg
sub
test
loop
and
adc
lret
jnp
ror
lock
mov
mov
pop
daa
adc
dec
sbb
ja
add
sub
push
adc
fdivr
popf
xor
fs
xor
stc
push
dec
lret
push
pop
aam
out
adc
sahf
pop
xorb
jmp
test
fcmovbe
bound
add
xor
xlat
push
push
pusha
outsl
iret
jmp
int3
mov
pop
pusha
xchg
daa
insl
loopne
call
mov
mov
sub
dec
fstpt
jp
stos
jbe
mov
jnp
cli
mov
add
cwtl
hlt
add
and
nop
fs
jl
arpl
dec
push
outsl
cmp
mov
fnsave
out
repz
jle
xchg
es
jecxz
ss
sub
ss
sub
leave
mov
aam
lcall
and
hlt
arpl
outsb
aam
jl
sub
sub
mov
insl
and
ret
dec
es
xchg
movsl
js
verr
outsl
xor
insl
xor
int3
aas
push
push
mov
cltd
pextrw
fs
mov
mov
sbb
or
popf
adc
jl
mov
xchg
gs
out
pop
stos
std
aam
fdiv
and
mov
and
das
adc
mov
ds
and
jecxz
mov
cmpsb
jo
arpl
dec
dec
mov
mov
int
xchg
repnz
aas
aas
fstpl
and
dec
pop
add
loope
loope
mov
into
ret
xchg
je
js
mov
add
jae
popa
pop
dec
mulb
and
mov
pop
inc
xorl
add
frstor
insb
sub
or
pop
or
in
pop
inc
das
lods
push
ljmp
outsl
inc
psrlq
jae
dec
lock
sbb
aas
inc
mov
in
xchg
bound
mov
aaa
xchg
scas
aas
push
pop
mov
push
mov
cmp
xor
rorl
pop
icebp
scas
add
xor
inc
push
into
popa
fidivs
cmpl
mov
sarl
loope
icebp
scas
add
xor
inc
push
into
popa
fidivs
test
lahf
push
mov
jle
dec
in
icebp
scas
add
cmp
inc
push
into
push
jne,pt
inc
push
icebp
outsb
sarl
popa
pop
xor
and
sub
sbb
or
xchg
bound
lahf
jnp
jg
dec
pop
pop
ja
addr16
shr
cmpsl
sti
iret
xchg
imull
jmp
outsl
daa
pop
jbe
pop
pop
aaa
inc
addr16
push
dec
inc
pop
push
incl
xchg
xchg
push
mov
sbb
adc
sbb
adc
pop
jmp
xchg
mov
out
or
insb
adc
dec
lea
mov
dec
inc
inc
pop
fs
out
pop
xchg
add
scas
addr16
pop
iret
dec
ffree
dec
push
das
xchg
daa
sti
dec
mov
cmp
push
push
mov
cli
loop
xchg
icebp
ds
cmpsb
xchg
sub
adc
loop
cli
add
pop
shlb
and
lahf
iret
jnp
imul
out
jb
imul
out
sub
ss
daa
das
xchg
jp
mov
push
out
dec
dec
cli
stos
pop
mov
sbb
mov
pop
xchg
cmp
outsl
pop
mov
xor
scas
push
dec
loopne
das
cmp
fidivrs
or
push
cmp
iret
repnz
and
sahf
mov
inc
cli
cs
push
cmove
xchg
dec
xchg
adc
popa
pop
icebp
jmp
aaa
pop
aas
add
cmova
mov
push
cwtl
fisttpl
cli
aaa
sub
cmp
add
dec
and
stos
ret
scas
out
sahf
rolb
push
or
pop
sub
push
jg
jae
outsb
push
je
mov
aam
movsb
lret
out
xlat
pop
lahf
aaa
outsl
daa
jg
dec
pop
pop
ja
addr16
push
cmova
mov
cmpsl
call
scas
out
xlat
pop
lahf
aaa
outsl
daa
jg
dec
pop
pop
ja
addr16
push
cmova
mov
add
push
insb
inc
repz
setl
scas
aam
je
sub
ljmp
sti
xor
xor
leave
cmp
dec
mov
cmpsl
pop
pop
mov
add
gs
sbb
jge
mov
repnz
sub
iret
push
sbb
enter
fadds
pop
divl
cmc
xchg
adc
sub
test
enter
and
cmp
pop
loopne
add
ja
mov
ret
dec
pop
stos
aas
jmp
das
adc
addr16
xchg
cmp
adcl
sub
jo
ja
mov
aad
out
xchg
popf
push
std
dec
xchg
adc
leave
mov
xchg
sub
adc
sub
mov
addr16
pop
cltd
jnp
cli
scas
jl
fs
mov
adc
out
push
idivb
or
xor
mov
xor
mov
xor
pusha
lods
cmp
mov
add
and
dec
pop
mov
hlt
rep
push
adc
push
sub
addr16
dec
in
popf
sub
inc
sub
ret
scas
inc
cmp
sbb
out
dec
pop
dec
push
push
lea
cmp
fstpl
movsl
mov
xchg
cld
or
dec
jmp
mov
repnz
jl
adc
out
add
aas
mov
lods
sbb
inc
scas
popf
push
lods
jns
loop
inc
adc
xchg
cli
jbe
or
xor
icebp
add
jg
mov
test
xor
mov
outsl
les
int
loop
pop
add
insb
fcoml
xor
ds
inc
mov
sub
dec
cld
cmp
insl
mov
pusha
loopne
loope
outsb
es
cli
dec
shll
jmp
sub
xchg
cmpsl
inc
ret
ret
mov
xlat
popf
sbb
sahf
or
pop
ret
xor
fadds
and
or
jbe
mov
and
jbe
dec
and
mov
mov
leave
das
mov
jbe
divb
add
xchg
outsl
sbb
js
mov
xor
push
stc
fs
mov
or
pop
jbe
ja
cmpb
mov
cli
or
std
pop
popf
xor
xor
imul
add
insb
mov
cwtl
xchg
stc
jge
sub
xor
stos
nop
outsl
mov
mov
sti
popf
xor
fnsave
mov
ret
xchg
cmp
jg
xchg
pop
les
mov
mov
mov
inc
bound
sbb
cmp
mov
mov
sbb
pop
imul
addr16
call
mov
jns
and
out
fisttpll
jp
es
jmp
fdiv
insl
jno
xchg
or
clc
fbld
movsb
aam
enter
cmp
sarl
aam
jp
and
cmp
neg
dec
and
add
ret
fldcw
fistpl
ja
stos
mov
lret
les
aas
sbb
inc
aas
stc
test
dec
in
pushf
inc
out
mov
pop
shlb
lods
lahf
shlb
cmp
xchg
sbb
mov
sti
cld
repnz
lahf
pop
sub
or
pop
push
ret
ljmp
jp
frstor
fsubs
mov
retw
jmp
mov
inc
mov
sub
in
daa
cmp
xlat
test
test
outsl
call
jle
jl
imul
mov
xlat
sub
bound
aam
adc
xor
sub
ret
cli
orb
insl
aas
sbb
xchg
inc
dec
cmp
bound
flds
jno
test
not
mov
and
pop
cld
jg
incb
mov
shlb
rcrl
and
xchg
ret
cmp
inc
dec
lahf
sbb
fs
pop
jg
xor
pop
adc
or
ljmp
in
jg
enter
call
push
mov
dec
cmpsb
cld
xchg
cmp
xor
adcl
dec
jle
mov
cmp
jg
sbb
mov
dec
leave
and
ret
je,pn
jecxz
je
cmp
imulb
or
push
fsubs
cmp
out
xchg
fnstcw
mov
xchg
sbb
insb
add
xor
imull
or
dec
pop
aad
xor
xchg
sub
ud1
mov
mov
enter
aad
sub
mov
cmp
xchg
push
aaa
movsl
int3
int
lahf
mov
xchg
mov
ja
adc
inc
imul
and
es
ja
xor
stos
mov
fsubrl
aaa
data16
push
mov
jg
jae
xor
cmpsl
scas
out
mov
add
push
xchg
pop
mov
push
push
push
cmp
rclb
push
mov
gs
movsb
mov
mov
std
out
push
repz
ss
into
cmc
add
out
repnz
lock
stos
push
rdmsr
cmp
ljmp
pop
xchg
inc
sti
mov
inc
pop
cld
push
mov
pusha
cmp
push
pop
popf
cmpsl
adc
mov
lcall
imul
xor
je
sti
sbb
sub
push
ficoms
jge
mov
sbb
cmp
mov
pop
xor
adc
mov
pop
cmc
xlat
cltd
xchg
or
or
enter
xor
lock
add
mov
lahf
icebp
scas
inc
int3
je
mov
imul
or
andl
sub
add
dec
rol
add
gs
adc
call
scas
push
sub
movsl
jecxz
dec
bound
scas
fwait
adc
mov
loopne
sbb
int
fldcw
pop
ret
cs
mov
orb
sub
cld
inc
nop
xchg
rcl
push
enter
imul
or
mov
mov
addr16
dec
dec
pop
push
cmp
push
pop
xor
into
int
out
xlat
into
movsb
mov
mov
xlat
or
sti
or
outsb
pop
cmp
test
fcomps
ss
aaa
testb
aad
out
adc
out
push
xlat
fadds
das
int
push
imul
jne
dec
jge
sahf
sbb
jle
fwait
inc
mov
adc
jmp
xchg
inc
int3
pop
ja
add
rol
in
xor
lahf
sbb
xor
sbb
jnp
or
pusha
add
daa
dec
xor
xlat
push
adc
cmp
sarb
fdivp
out
icebp
cmp
xchg
xor
testl
nop
mov
mov
cmp
sub
outsb
xchg
insb
mov
lret
jbe
sbb
sbb
push
push
inc
aad
sub
adc
add
cmp
pop
add
sbb
and
repnz
leave
rcl
lods
stos
arpl
xor
out
stos
stos
xchg
enter
mov
imul
shrl
pop
imul
jae
xchg
clc
sub
sarl
push
rcl
sbb
lds
fisubl
mov
out
mov
dec
outsb
es
jbe
push
cmp
sbb
push
fcomps
sub
inc
xlat
adc
lret
mov
cmc
mov
dec
mov
cmp
sbb
xlat
push
out
add
push
iret
shl
xchg
xchg
cmc
fistps
push
inc
ficomps
and
mov
xchg
xchg
shl
mov
ljmp
addb
mov
adc
in
sbb
popa
xchg
je
jno,pn
stc
test
adc
mov
adc
sbb
add
push
mov
fldl
jge,pt
test
out
scas
cmp
scas
push
lahf
mov
mov
pop
test
mov
pusha
pop
out
int3
xor
cmpsb
cmp
mov
aam
or
adc
cmc
dec
stos
popf
xchg
sbb
int3
adc
mov
int3
or
sbb
lods
icebp
int
pop
data16
pop
or
mov
xor
js
jns
dec
cmpsb
das
int3
xlat
arpl
jge
pusha
fnstsw
inc
push
in
mov
aad
sbbb
ret
cmp
mov
ret
stc
push
inc
in
sbb
pop
push
xor
cmp
xor
pop
xor
mov
xor
mov
pop
push
lea
and
mov
jae
xchg
dec
dec
inc
call
into
xlat
pop
rolb
xchg
mov
aam
xor
rdmsr
jo
sbb
jno
or
mov
and
xchg
xorl
test
cmpsl
roll
xchg
adc
pusha
xor
push
shll
xchg
lock
repnz
fmull
or
or
cwtl
std
xor
mov
in
pushf
ret
dec
sar
jb
sbb
add
inc
sbb
xor
cmc
or
lcall
and
imul
insl
cmc
mov
stc
cmp
lods
xchg
mov
cmp
sbb
mov
pop
loop
adc
mov
mov
or
xlat
popf
cmpsl
popf
je
repnz
jp
iret
iret
add
mov
insb
mov
lods
loope
inc
maxps
ljmp
add
and
nop
sbb
sub
cltd
sub
cmpsl
sub
ficoml
mov
lret
push
cmp
ret
mov
xor
pop
mov
xor
fdivs
test
or
hlt
mov
fcmovnu
pop
pop
in
sbb
jo
mov
int
mov
xor
enter
shl
loopne
es
das
cmp
sbb
fistpl
adc
xor
xor
dec
ljmp
sbb
add
xor
fistps
adc
cmp
pop
enter
adc
mov
lret
sbb
cmp
in
mov
cmp
jne
test
daa
lds
notl
add
inc
xor
fwait
popa
or
sbb
lret
sarb
lahf
addr16
sarb
cmc
mov
and
outsb
fcmovb
imul
cmp
pop
adc
fstpt
lahf
jge
push
icebp
repz
push
stos
mov
call
push
in
and
scas
enter
frstor
dec
repnz
add
cmp
pop
popf
mov
ffreep
rorl
iret
xor
scas
outsb
jge
add
dec
in
dec
rcrl
test
and
push
xor
out
out
lret
add
pop
insb
sub
pop
cmpb
addl
xorb
inc
int3
add
jae
int
lods
add
sbb
imul
push
mov
inc
test
out
dec
mov
inc
cmp
ret
cltd
aad
xor
push
mov
sub
sbb
out
clc
push
mov
inc
call
je
cmpl
dec
testb
mov
jge
cwtl
outsb
insl
stc
scas
sbbl
xchg
mov
mov
jnp
mov
int3
mov
pop
xchg
or
pop
imul
xchg
icebp
and
sub
ja
imul
loope
pop
jle
leave
xor
xchg
inc
cmp
cmc
and
mov
ss
and
adc
fnstsw
push
mov
jo
sub
addl
popf
add
sub
hlt
sbb
ret
mov
insl
fucom
pusha
pop
mov
jae
inc
aas
test
out
test
lahf
push
or
inc
dec
xor
nop
sti
add
pop
popf
movsb
mov
adc
test
sbbb
scas
sbb
outsb
out
ds
imul
and
add
clc
adc
fldenv
ret
mov
je
xor
mov
fistpll
imull
in
mov
cmp
inc
test
lcall
and
popa
sahf
push
and
ss
iret
jb
rcll
sahf
sub
mov
fcoml
cmp
jg
push
add
add
ret
and
push
sbb
jle
sub
add
lret
repnz
sbb
jge
bound
push
sbb
dec
adc
fcmovu
xor
stc
sbb
mov
adc
push
sub
sbb
jno
xchg
in
test
xorl
add
sti
aas
cltd
mov
cmp
or
or
pop
lock
movsl
dec
into
rcrl
aad
dec
push
ret
cld
adc
sbb
jbe
loopne
push
mov
testb
jmp
stos
dec
test
inc
fistps
sbbl
add
insw
push
fiaddl
jle
shll
lock
jns
data16
mov
lahf
fistps
inc
xor
mov
mov
ror
jmp
pop
pop
mov
and
pop
mov
sub
push
lock
movsb
daa
dec
pop
scas
push
dec
inc
jmp
ret
jbe
and
pop
outsl
aam
xchg
mov
push
stos
mov
sub
dec
dec
add
mov
mov
repnz
out
lods
arpl
inc
stc
sbb
nop
inc
scas
sti
cltd
nop
push
adc
cwtl
enter
xchg
insb
mov
cwtl
or
movsl
xor
jmp
lods
jns
jge
push
test
mov
inc
push
add
xor
enter
xor
pop
ret
inc
dec
out
adc
imul
sbb
add
cmp
xlat
cmpsb
std
out
fdivrl
incb
fists
into
adc
stos
jne
and
stos
into
iret
imulb
adc
sti
fistps
jbe
js
mov
cmpsb
shrl
divb
fsubrl
daa
imul
sarb
pop
out
jbe
push
in
mov
rcr
fisubrl
dec
shll
sbb
mov
mov
out
loop
or
daa
cmp
adcb
pop
jae
aad
add
lret
fnstcw
mov
sbb
verr
decl
insb
mov
aaa
jge
and
pop
cmp
add
clc
testl
dec
push
push
push
ret
shrb
mov
xchg
stos
in
repz
adc
jb
push
sbb
push
sbb
pop
call
lcall
mov
push
data16
mov
adc
xchg
enter
fwait
outsl
dec
add
fdivl
int
mov
addr16
insl
stos
adc
sahf
adc
add
or
cltd
out
xor
jno
sbb
adc
mov
test
pop
shll
jl
int
ljmp
mov
imul
inc
sub
or
xor
adc
into
shl
sti
mov
outsb
push
icebp
scas
mov
fs
into
cli
les
mov
dec
cwtl
and
push
pop
ret
imul
fcmovne
ljmp
sarl
mov
mov
xchg
push
and
iret
in
ret
pop
xchg
cli
jno
sti
sub
push
test
push
adc
xor
data16
mov
lods
ret
jp
stos
test
cmp
out
inc
sahf
lds
add
push
xchg
lea
sahf
das
fiadds
or
pop
xchg
mov
ja
rcll
data16
mov
es
clc
imul
enter
push
cmp
sbb
add
pusha
fnstcw
xchg
cwtl
or
adc
and
rcl
sbb
or
ss
fcmovb
or
aas
test
sub
inc
cld
dec
aaa
cmp
outsl
fmull
mov
push
lds
xor
sub
jp
push
jge
or
ja
call
mov
fwait
xchg
cmp
sarl
daa
repnz
insb
adc
cmpsb
cltd
dec
mov
push
shll
addr16
pop
lahf
out
inc
icebp
dec
inc
mov
aas
lods
fxch
push
sub
push
pop
addb
in
arpl
jno
in
xlat
xchg
bound
adcb
jp
push
sahf
sbb
jle
mov
jne
push
dec
add
rclb
arpl
arpl
xchg
icebp
jnp
xlat
movsb
loope
dec
imul
sbb
add
jg
imul
xor
xor
ret
xchg
decb
fsts
inc
aaa
pop
xchg
adc
inc
mov
adc
mov
in
jns
movsl
daa
cs
xor
lock
lock
rorb
insl
fbstp
jno
mov
mov
or
pushf
call
lock
fdivs
jmp
pop
xchg
xor
mov
add
or
mov
sbb
in
push
mov
mov
sbb
dec
xor
xor
jo
imul
push
xor
jmp
jle
ja
dec
shl
jle
fisttps
add
adc
and
dec
pusha
push
es
add
mov
cltd
js
popa
add
in
gs
cmp
test
test
rcrl
push
in
xchg
jge
inc
notb
ds
or
jne
inc
adc
movsb
jb
stos
jnp
fcompl
int
in
outsb
sbb
dec
xor
pop
in
out
out
fsubrs
das
mov
aaa
inc
or
adc
pop
test
bound
fmulp
stos
daa
mov
jg
std
jp
push
inc
stos
xchg
aad
and
jecxz
inc
ja
sbb
xlat
mov
int3
rorl
cmp
cmp
cmp
addr16
out
arpl
xchg
popf
mov
popf
movsb
iret
cmp
sub
or
sub
sub
and
jg
cmp
mov
inc
fwait
xchg
sbb
in
mov
lock
jle
inc
out
add
sbb
aam
data16
fwait
movsl
shll
inc
sbb
imul
jo
push
insl
mov
call
frstor
cltd
mov
jge
das
or
push
push
and
sbbb
mov
push
fstpl
stc
jno
push
scas
or
lcall
test
cmp
mov
popa
out
dec
imul
dec
mov
das
sti
cld
and
jno
loopne
mov
call
add
mov
dec
notl
add
ret
push
ds
pop
outsl
fs
cmpsl
insl
jmp
ss
sub
mov
add
pop
jecxz
dec
sub
inc
outsl
and
jae
and
jmp
aam
pop
ss
arpl
inc
in
movsb
addr16
dec
inc
xor
loope
js
hlt
lods
aas
shl
int3
fimull
cli
mov
mov
shll
in
insb
shll
push
aad
add
xchg
pop
pushl
aad
jp
in
push
popf
xor
mov
imul
movsb
jne
push
int3
pextrw
pop
arpl
sub
mov
push
jnp
xorb
mov
sub
out
inc
push
add
test
lea
mov
fisubs
adc
subb
push
mov
and
into
ret
loope
insl
aas
sub
xchg
xchg
xlat
jl
add
jp
xchg
ds
push
sub
jmp
jecxz
jb
xor
sbb
and
jmp
jmp
sbb
lret
pop
sbb
sub
xchg
rorl
mov
les
xor
dec
int3
mov
or
jl
mov
inc
addl
orl
mov
adc
push
sahf
std
xorb
mov
xchg
mov
rorl
jno
nop
pushf
rcrl
icebp
sbb
inc
movsl
ss
push
add
fistps
fdivrl
mov
mov
nop
std
and
pop
das
push
bound
push
inc
clc
mov
mov
mov
inc
adc
jecxz
arpl
in
cmc
stos
ds
leave
pop
lock
xor
adc
mov
fidivrl
insl
or
pop
call
cltd
shrl
lods
std
mov
div
in
aas
mov
mov
lods
jge
adcb
movsb
lret
hlt
subl
mov
dec
ficoms
add
or
lods
sbb
in
popf
mov
push
gs
dec
mov
ljmp
mov
mov
loope
cmpsl
fcmovbe
out
add
das
adc
std
dec
mov
aam
es
outsb
adc
out
inc
or
fdivrl
cltd
je
loop
xchg
adc
das
das
mov
pop
sub
punpckhdq
inc
dec
adc
movsb
xor
outsl
sbb
leave
fwait
mov
inc
cli
lret
bnd
push
lcall
mov
repz
lcall
and
jnp
pop
scas
sub
jl
jmp
xor
insl
cmp
in
cld
ss
mov
lea
jae
jg
iret
mov
or
aas
sub
ret
inc
dec
dec
push
lcall
lock
faddl
sub
in
pop
add
xchg
popa
dec
xchg
push
push
jne
ljmp
or
adc
mov
fsub
leave
mov
add
adc
ds
mov
pushl
xlat
invd
stos
sti
mov
pusha
daa
int3
out
jl
out
pop
or
rorb
push
call
mov
out
xlat
pop
lahf
aaa
outsl
daa
jg
dec
pop
pop
ja
addr16
push
cmova
mov
cmpsl
call
scas
out
xlat
pop
lahf
aaa
outsl
daa
jg
dec
pop
pop
ja
addr16
push
cmova
mov
xchg
mov
mov
fbld
out
xlat
popl
lahf
aaa
mov
jg
dec
pop
pop
ja
ja
push
das
scas
pop
mov
iret
cmpsl
fdivp
scas
idivl
aaa
nop
fcom
mov
cmpsl
out
shrb
pop
in
aad
lds
ficompl
int
inc
std
inc
mov
mov
in
aad
lds
xchg
cmp
mov
inc
lea
cmc
lods
adc
pop
in
int
fmull
lea
pop
mov
cwtl
inc
out
je
dec
lea
add
and
cmp
inc
dec
fsubrp
loop
lods
adc
jmp
shlb
adc
pop
dec
or
mov
jo
jo
bound
adc
pop
bound
sbb
or
xchg
movsl
cmpsb
loope
imul
jmp
pop
and
mov
xchg
cmc
or
int
jp
and
adc
fidivrl
int
add
sub
in
adc
test
adc
inc
ficomps
test
adc
pop
add
in
aad
aad
sti
or
je
jno
inc
jo
stc
popfw
push
lods
ljmp
insl
lds
or
mov
jge
dec
std
pop
lea
mov
in
aam
les
js
push
pop
call
addb
sub
pop
shll
adc
push
in
movsl
xor
xchg
sub
or
add
and
dec
std
jns
pusha
cmp
mov
fstps
test
jne
gs
push
std
inc
lea
mov
in
aad
lds
xchg
cmp
gs
push
std
inc
lea
mov
loopne
das
jle
push
rcrb
insl
test
outsb
fbld
or
cmp
les
cmpsl
cmp
lret
mov
andb
sahf
into
push
gs
sbb
jl
movsl
sub
mov
js,pt
int3
lret
jg
movsb
push
test
xchg
bnd
mov
xor
scas
jne
push
fstpt
cltd
insl
xchg
lds
and
shll
xchg
aam
ss
jmp
adc
xor
mov
fwait
imul
xorl
cltd
jae
push
xor
cmpb
lods
lahf
cmp
les
sbb
rolb
push
and
dec
nop
in
sub
fcmove
xchg
imul
int3
sub
jmp
stos
adc
adc
lods
sbb
sbb
push
mov
daa
mov
pop
xchg
inc
out
iret
sahf
mov
fs
cmpsl
ret
add
inc
mov
cltd
sbb
mov
test
loop
pop
ret
into
test
test
mov
sbb
daa
dec
loope
push
jo
icebp
js
pop
or
aad
pop
lock
dec
sti
xchg
adc
dec
pusha
insb
loopne
jae
repnz
out
lcall
dec
push
shr
repnz
ss
xchg
jp
mov
clc
in
out
push
adc
fisubrs
add
loop
push
xchg
testl
push
movsl
xor
xchg
shl
cmp
fimull
mov
stc
loope
das
aaa
mov
idiv
mov
or
xchg
aad
sub
movsb
outsl
dec
addb
sar
pop
lret
bound
or
jbe
shlb
adcb
incb
cmp
xchg
cwtl
xsavec
mov
fisubl
and
sti
ljmp
jnp
enter
push
test
cmp
dec
orb
shll
fnstcw
jns
pop
sbb
xchg
and
loope
xor
xchg
loope
fadd
dec
sub
add
addr16
pop
dec
push
scas
mov
mov
clc
fmulp
xor
sub
cmp
pop
loopne
aaa
es
repz
sbb
mov
pop
ljmp
jbe
push
ss
imul
cmovnp
imul
stc
sbb
push
and
iret
inc
push
jmp
adc
sti
cmpsb
pop
xchg
or
out
mov
leave
das
cmpsl
adc
mov
jmp
mov
fwait
mov
in
rep
pop
mov
lahf
mov
mov
loopne
xor
in
dec
push
imul
nop
mov
sbb
andl
cmp
clc
negl
mov
sbb
jl
cltd
jo
int3
out
pop
inc
ds
icebp
xchg
clc
shrl
lcall
test
dec
or
xor
push
data16
xchg
mov
fs
jb
add
aad
ja
fs
inc
addr16
xchg
adc
jp
sahf
jmp
sub
stos
mov
mov
test
and
mov
aaa
add
pop
cmp
push
xchg
int
mov
mov
cmpsb
mov
sarb
lret
stc
jbe
je
rdpmc
js
test
mov
hlt
xor
mov
sub
sarb
inc
pop
xchg
pop
jns
mov
or
sbb
xor
jnp
mov
pop
adc
mov
mov
mov
pop
out
jnp
mov
xor
lea
in
pop
cmp
idiv
out
xchg
pusha
frstor
sbb
imul
and
mov
mov
js
imul
pop
test
sbb
dec
cmpsl
fldt
pop
out
cmpsb
test
test
loop
push
jmp
cwtl
xchg
dec
sbb
xchg
icebp
leave
lds
push
adc
mov
ja
es
adc
adc
inc
nop
mov
scas
lods
sub
xorl
sbb
out
add
xchg
add
scas
leave
sar
pop
das
jns
mov
mov
push
mulb
lret
xor
lock
in
mov
dec
dec
fs
test
jno
fcmovnu
mov
enter
xor
cli
std
push
pop
jle
xchg
fs
out
sarb
add
stos
pop
in
inc
jb
imul
aaa
sbb
repz
inc
clc
push
loopne
ud1
ror
xchg
filds
lret
iret
xor
sbb
sbb
xor
shl
xchg
mov
add
push
sti
xchg
notl
adc
inc
andl
pop
jle
shll
stos
or
jb
stos
orl
cmp
add
in
pop
and
mov
cmp
bound
pop
xor
xchg
sahf
sti
add
mov
or
mov
insl
bound
jmp
ret
push
jnp
mov
sbb
mov
sbb
out
jmp
sub
pop
inc
mov
add
dec
outsb
and
adc
inc
movsb
dec
inc
divb
stc
cmp
stc
pop
imul
mov
mov
xor
leave
mov
pushf
cmp
cmp
mov
imul
pop
shrb
sub
adc
test
es
lock
dec
std
cld
inc
aaa
fwait
pop
clc
adc
push
push
mov
js
stos
dec
scas
out
loop
push
xchg
sahf
call
mov
in
pop
add
mov
push
out
lea
rcrl
ret
sub
cmp
ficoms
shll
dec
in
and
inc
mov
in
and
aam
shufps
pop
lret
jmp
sub
movsl
dec
pop
push
imul
dec
mov
jmp
in
test
adc
adc
pusha
mov
lea
scas
mov
nop
dec
mov
loope
pop
sbb
xor
xchg
inc
adc
lret
and
adc
icebp
lods
mov
rclb
xchg
inc
xchg
jge
add
sbb
dec
cmc
sbb
pop
sbb
mov
fwait
pop
rcrb
cmp
and
test
lret
xor
cmp
inc
test
enter
popf
ret
dec
addr16
stc
movsb
mov
lret
sub
out
sub
mov
jl
or
sub
insb
jns
stc
adc
fnsave
outsl
cmpsl
test
push
rcr
cmpsb
iret
jns
shll
out
repz
shrl
lods
or
aaa
or
mov
push
in
out
repnz
sbb
sbb
mov
push
andb
cwtl
outsl
ret
inc
pop
lock
imul
xor
movsl
cmp
call
clc
icebp
lods
mov
pop
insl
addr16
aad
or
adc
dec
dec
add
mov
sbb
mov
dec
sbb
sub
xlat
dec
out
shl
and
repz
pop
add
idivb
in
dec
scas
dec
subl
inc
adc
inc
inc
sub
push
test
dec
clc
jbe
loopne
pop
jno
loopne
cmp
repz
pop
cmp
jne
push
daa
imul
popf
in
orb
sbb
mov
fadd
xor
lret
xor
xchg
pop
jbe
xor
hlt
jbe
fcmovnbe
sbb
pop
cltd
lcall
add
xor
cmp
adc
imul
sarl
arpl
stos
cli
add
xor
das
adc
dec
pop
test
rolb
fs
shufps
sub
icebp
aad
loope
pop
push
insl
into
jmp
adc
loope
xchg
mov
pop
inc
sub
and
adc
clc
ret
data16
dec
out
stos
sti
pop
xchg
or
test
movsb
jns
stos
mov
aam
push
mov
and
inc
pop
mov
cmp
push
fs
loop
jnp
cmp
dec
pop
push
orl
orb
cmp
and
xor
pop
jl
aad
adc
imul
data16
jp
stos
or
jbe
cmc
inc
xor
pop
cmpl
push
xchg
imull
mov
in
add
jae
inc
cmp
mov
ficomps
sub
jns
xchg
xchg
mov
aas
cmp
cmp
lcall
cmp
adc
fwait
cmp
mov
call
xor
xchg
int3
outsl
push
jg
mov
dec
add
jg
aas
inc
dec
mov
jg
pop
clc
lcall
mov
clc
cld
cmpsb
xor
or
xchg
jno
jae
inc
xor
gs
sbb
bound
inc
xchg
lret
dec
ficoms
pop
ss
jp
cmp
out
cwtl
xchg
sub
addl
movsl
es
mov
xchg
mov
rol
push
lods
cs
inc
or
and
inc
dec
push
pop
cli
fsubr
mov
addb
mov
ret
or
or
aad
call
xchg
test
cwtl
shrb
or
sbb
out
clc
out
inc
xchg
mov
shr
xchg
test
ret
repnz
mov
mov
jbe
push
xlat
mov
adc
bound
dec
arpl
ss
fs
inc
je
ss
inc
dec
std
and
mov
sub
mov
cli
mov
dec
out
jmp
inc
leave
aad
mov
cli
je
and
inc
jg
call
lea
pop
cmp
pop
jo
mov
sbb
cs
mov
insl
sbb
dec
push
sahf
jae
dec
dec
cld
push
cmp
in
and
rorl
add
and
mov
subb
and
xchg
sbb
jae
outsb
in
lret
fidivl
cmp
xor
sub
int3
xchg
cmc
insl
jle
iret
flds
test
mov
fnsave
cli
int
ja
repz
repz
and
jmp
pop
gs
daa
enter
pusha
jns
inc
cli
add
pop
push
add
in
adc
fimull
stc
mov
jmp
aaa
ds
mov
outsb
lcall
ret
outsb
mov
xchg
push
jne
lock
sub
adc
cli
mov
jbe
loopne
jae
gs
das
das
mov
push
pop
mov
movsl
fsubrs
xchg
loopne
cmp
insb
mov
fbld
sbb
pop
orb
cmpsb
in
or
jl
add
mov
push
je
xchg
mov
and
call
lods
int
daa
xchg
inc
arpl
out
inc
imul
dec
adc
add
sub
pusha
mov
insl
leave
insb
mov
xchg
pop
insl
inc
mov
pop
psubsw
push
rcrb
shlb
mov
sbb
adc
mov
fs
xchg
pop
xchg
sbb
cmp
dec
push
movsb
cmc
idivl
out
cli
add
xchg
adc
mov
add
shlb
enter
sbb
fnstenv
xor
jb
sub
lret
scas
adc
pop
mov
iret
dec
xchg
and
push
pop
mov
fs
test
adc
arpl
push
push
notb
loopne
pop
push
dec
add
in
mov
test
roll
jnp,pn
adc
dec
jb
cmc
add
or
jae
sbb
add
pop
jp
or
pop
lods
jmp
inc
pop
lahf
push
call
sbb
bound
push
xor
mov
mov
push
mov
inc
adc
jno
test
out
mov
xorl
out
jmp
jecxz
lea
inc
dec
clc
xchg
fcom
jmp
or
add
fsubs
xlat
inc
adc
adcb
sti
mov
or
ja
jae
outsl
sbb
push
lds
adc
add
xchg
jp
inc
mov
rorb
into
enter
repz
mov
and
jbe
sbb
hlt
xchg
jo
mov
lcall
xchg
testb
int
mov
xor
jno
xchg
jne
xchg
ds
xor
push
icebp
add
add
pop
lahf
cmp
hlt
cmc
dec
sarb
and
enter
jae
jecxz
push
push
push
addr16
scas
jnp
frstor
test
std
xchg
and
xchg
pop
loopne
int
cli
pop
sbb
not
cmp
mov
popa
cmp
inc
adc
cmc
int
movsl
sbb
push
and
das
inc
lret
outsl
cld
ss
xor
sub
adc
mov
jbe
aam
sbb
repz
push
jno
ds
ljmp
or
std
fdivl
cwtl
pop
cli
xchg
sub
iret
mov
popa
jle
mov
cmpl
ss
frstor
and
add
inc
mov
pop
aaa
je
cmc
xchg
push
xlat
in
jge
push
daa
push
push
dec
daa
mov
ret
sarb
sub
call
jg
addr16
fimuls
cld
popa
fwait
andb
cmpsl
fistps
sub
into
mov
ret
mov
repz
adc
sbb
mov
xchg
imul
pop
in
rcll
jp
ds
push
cmp
and
jbe,pt
test
lret
push
sub
or
sub
aaa
inc
cmpsb
fldt
jle
bound
je
mov
and
mov
shl
mov
pop
sbb
stos
fistpl
gs
roll
cmp
das
jecxz
push
cmpsb
xor
sbb
or
rolb
mov
xor
in
in
add
sub
sub
xor
lods
adc
jmp
inc
add
xor
push
in
daa
shll
sbb
sub
cmpsb
scas
lods
test
cltd
adc
mov
xchg
sahf
out
fildll
lods
gs
daa
mov
xor
xchg
jmp
js
dec
popa
sbb
sbb
pop
push
mov
jnp
aam
scas
jnp
mov
aam
clc
pop
adc
xchg
jb
jmp
xlat
repz
xorb
loopne
adc
adc
push
push
push
mov
cltd
inc
jns
lret
scas
xchg
push
dec
aaa
push
xchg
inc
in
call
dec
rcr
shr
lds
mov
xor
lds
adc
adc
mov
mov
push
inc
insb
cmpsb
out
cmp
xchg
cmpsl
sbb
push
rolb
ja
jecxz
adc
sub
repz
mov
mov
out
lods
scas
cmp
inc
cli
call
int3
push
bound
mov
test
out
or
xchg
pop
or
nop
mov
xchg
jns
les
xchg
cmp
ja
push
xor
outsl
enter
cs
dec
int3
lret
fdivp
and
repnz
in
jg
insl
add
push
ljmp
adc
test
pop
aad
sbb
dec
mov
sub
pop
mov
dec
in
hlt
xchg
subb
xor
orb
push
dec
jb
add
pop
es
pop
xor
xor
repnz
bnd
es
mov
sbb
js
ret
test
loope
mov
push
les
pop
out
fbld
pop
jg
xor
adc
cli
das
xor
jmp
paddsb
mov
lahf
inc
push
mov
dec
sbb
sbb
mov
sbb
lods
push
mov
jb
or
addr16
cs
dec
xor
imul
push
jb
mov
jle
hlt
fldl
mull
inc
ds
dec
ficompl
push
adc
or
mov
ror
dec
popf
inc
inc
and
es
push
pop
adc
sub
cmc
jmp
dec
sub
addl
mov
aas
out
jo
int
xchg
xchg
ficoms
movsl
test
in
jmp
testl
mov
mov
icebp
out
inc
jge
fstpl
dec
lds
inc
xor
push
in
loop
outsb
and
in
stc
sarb
mov
cli
mov
clc
outsb
push
jne
rorb
pop
inc
cwtl
xor
dec
adc
faddl
in
loop
mov
popf
mov
cs
sub
orb
popa
sub
imul
popa
mov
cmp
fcompl
xor
iret
imul
nop
test
mov
cmp
lret
push
push
cmp
sub
xchg
push
fsubs
inc
push
out
js
arpl
pop
jno
adc
fbstp
lods
sbbl
pop
dec
je
mov
fwait
lret
fdivrl
sar
xlat
addr16
adc
adc
pop
inc
test
loopne
cmp
je
inc
arpl
clc
mov
xchg
jle
fisubl
cmp
pop
push
test
leave
jnp
xchg
nop
and
jmp
rclb
cmp
sub
jg
fistl
addb
pop
stos
jmp
test
inc
mov
jge
jo
add
adc
es
jbe
insb
mov
adc
push
ljmp
lods
or
movsb
jmp
xchg
sbb
sbb
ficompl
xor
push
into
and
mov
add
cmp
cs
or
jnp
push
out
sub
cmp
sarb
test
das
clc
xor
push
push
cmp
loop
xchg
pop
lea
cmp
leave
lods
movl
movsb
push
xor
dec
test
ret
mov
hlt
xor
fildl
ror
lret
add
mov
pop
scas
sarl
push
es
pop
sbb
and
icebp
jl
xchg
add
and
hlt
xchg
pop
and
push
iret
cltd
push
adc
mov
mov
mov
pusha
out
mov
pop
cmp
mov
adc
negb
push
test
fisubs
cwtl
or
lds
jge
stos
xchg
dec
lds
jmp
sahf
fidivrl
adc
andb
add
cmp
dec
mov
cs
das
shlb
in
cli
add
std
jmp
fsubl
and
push
cld
mov
sub
xchg
jp
sub
outsb
std
ljmp
clc
out
xor
std
inc
loop
pop
jge
insb
jmp
mov
mov
sbb
dec
imul
push
es
repz
sub
sbb
scas
lods
ficomps
popa
rclb
jb
popf
ss
stc
push
xor
daa
sbb
pushf
push
push
test
in
add
sbb
mov
and
push
lods
sahf
sub
jb
idivb
fimull
push
push
pushf
stos
jb
jmp
sbb
outsl
mov
lcall
xchg
mov
inc
inc
aad
fcmovb
dec
mov
and
xchg
push
adc
scas
mov
xchg
cld
jne
fmull
pop
js
xlat
fistpll
xchg
lcall
jnp
dec
data16
fadds
sub
ljmp
cld
push
push
push
outsb
adc
mov
inc
mov
pop
sti
adc
xor
or
add
lahf
push
mov
fsub
push
les
push
outsb
inc
sub
push
mov
inc
mov
leave
cmp
aam
push
cmp
shll
sahf
rorb
cmpsl
nop
loop
int
cmpsl
out
push
ror
test
jns
mov
sub
jns
xor
icebp
xchg
les
lds
jp
cmpsl
push
add
pop
int
aam
jg
cmp
jne
ret
iret
or
adc
stc
jnp
scas
bnd
pop
cmp
and
mov
dec
movsl
mov
call
push
jae
push
sbb
xor
addr16
call
popf
mov
aad
jbe
enter
pop
jne
push
jge
dec
cmpsl
dec
xor
loope
mov
jae
dec
jl
and
inc
fsubl
pop
icebp
push
ss
aas
mov
push
adc
jg
ss
lock
pusha
jle
add
jae
and
pop
jns
sub
inc
sbb
test
mov
cmc
in
xlat
and
cli
add
cmp
shr
cmc
sbb
push
mov
pushf
fwait
lret
cli
inc
pop
fsubrs
pop
testl
out
daa
xor
insb
cltd
nop
pop
fstpl
insb
adc
aam
or
cwtl
and
ja
arpl
push
inc
je
push
imul
dec
data16
ret
inc
jno
mov
add
mov
cmp
out
lea
dec
test
insb
loop
das
ret
dec
dec
imul
jae
push
pop
jle
es
ljmp
and
jp
or
bound
dec
fildl
scas
lret
mov
push
pop
jb
jnp
mov
out
mov
push
jnp
es
scas
subb
clc
ficoml
enter
sar
int
mov
lcall
jl
rolb
adc
addr16
push
xchg
ds
repz
inc
aad
or
jge
in
cmp
or
xchg
cmp
gs
push
std
inc
lea
mov
in
aad
lds
xchg
cmp
gs
push
std
inc
lea
mov
in
aad
lds
xchg
cmp
gs
push
std
inc
lea
mov
in
aad
lds
xchg
cmp
iret
inc
push
std
xor
mov
inc
cli
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
mov
jb
mov
repz
ss
adc
aaa
and
push
fdivl
jbe
xchg
mov
mov
ret
out
testb
and
xor
push
data16
lahf
lcall
into
lret
sti
imul
pop
add
inc
inc
or
daa
cmp
and
iret
stc
jecxz
mov
xchg
or
adc
add
sbb
fldln2
pop
scas
daa
outsb
xor
push
fdivrs
subl
stos
or
in
mov
and
arpl
cld
aas
in
fidivl
int3
push
and
xchg
mov
push
nop
lock
add
shlb
scas
push
add
adc
dec
mov
ljmp
xchg
xchg
loopne
ret
xlat
ret
sbb
pop
in
adc
leave
mov
in
pushf
jbe
push
sbb
push
cmp
into
cmpsb
stos
jmp
fwait
push
call
in
daa
fcmovnb
mov
xor
outsb
jl
out
pop
dec
cmp
dec
aam
adc
imul
add
mov
popa
jbe
dec
xchg
popl
rol
shl
jecxz
ljmp
das
sub
dec
dec
jl
jbe
ljmp
mov
mov
stos
notb
push
daa
push
push
inc
xor
or
pop
jmp
rol
fsubrl
xchg
movsl
roll
jbe
inc
ja
inc
xor
pop
jecxz
cli
xchg
lret
testb
div
push
add
adc
and
xor
push
push
data16
xchg
mov
mov
shl
jecxz
repz
add
adc
and
xor
push
push
data16
xchg
lds
in
xor
daa
lcall
mov
sbb
sbb
cltd
mov
repnz
sbbb
mov
cmpl
xchg
and
mov
sbb
out
int
insb
and
adc
cmp
aas
fsts
or
pop
push
jbe
or
adc
jmp
adc
adc
pop
shrl
ss
jmp
cmp
fsubl
in
xchg
andl
lods
aas
lock
inc
inc
sbb
mov
dec
orb
mov
sbb
sub
adc
test
jns
out
pop
lods
mov
xlat
fstps
fdivp
in
shl
testl
outsb
mov
lret
xchg
mov
mov
xchg
jno
testb
loopne
fs
outsb
jecxz
imul
sar
sbbb
dec
out
andl
jo
fstp
fs
mov
sbb
mov
xor
or
and
mov
jae
ljmp
add
ds
dec
dec
sbb
sbb
andl
gs
cmp
push
or
cmp
push
sub
scas
shlb
mov
xchg
sub
pop
sub
push
or
rorl
pop
add
mov
ret
icebp
subb
stc
jmp
sub
std
into
cltd
into
add
sbb
cmp
xor
jb
xchg
mov
nop
mov
pushf
and
sub
jecxz
adc
leave
mov
jbe
sbb
sub
cld
cld
pop
js
sbb
bound
fxch
dec
dec
popf
clts
or
insl
xchg
mov
in
push
mov
std
movsb
pop
dec
push
sub
es
mov
mov
xrelease
and
push
arpl
cs
dec
xor
xchg
lock
les
inc
cld
ret
add
int
mov
sbb
in
lret
mov
cmpsb
push
xchg
lock
in
fdiv
sbbl
add
pop
jbe
add
cmp
pop
or
std
adc
pop
adc
in
repnz
out
and
in
jo
cmc
call
xchg
push
je
jnp
pusha
xor
inc
sbb
outsb
es
mov
push
insl
sub
cmp
xor
lods
stos
lods
mov
sub
adc
pop
jg
ja
mov
push
sbb
dec
mov
es
popf
sub
mov
arpl
mov
andb
ljmp
movsl
jb
mov
add
jns
mov
sbb
inc
imul
in
arpl
cmp
or
jmp
in
nop
icebp
mov
mov
pop
add
xor
iret
xchg
dec
jbe
mov
push
scas
fistpl
push
leave
push
push
mov
cmp
fstpl
mov
cmp
cwtl
js
fsts
in
and
test
cmc
out
mov
xor
push
dec
push
dec
icebp
popf
and
push
sbb
lds
lret
stos
or
movl
sbb
andl
mov
sub
mov
mov
andb
or
dec
jg
ss
adc
sub
aas
jns
jne
cmp
push
loopne
dec
xor
popf
and
xchg
pop
dec
cmp
xchg
sub
sub
xor
leave
pop
jns
imul
inc
inc
xchg
mov
pop
popa
push
stos
sahf
mov
xor
xchg
and
notb
out
cmp
mov
fdivrp
adc
in
in
adc
adcl
outsl
incb
ja
clc
loope
mov
mov
sbb
call
pushf
mov
sbb
sbb
lods
pop
pop
xor
adc
jae
jo
scas
lods
outsb
subb
mov
std
dec
stos
mul
sbb
sbbl
or
divb
xor
add
lds
mov
leave
jecxz
and
mov
sub
adc
cs
repnz
and
jg
test
fidivl
loopne
adc
push
sbb
lret
xchg
arpl
jb
adc
adcl
jb
clc
lods
insb
cs
scas
decl
inc
clc
xor
loope
sarb
mull
jns
push
inc
dec
test
nop
jg
cltd
outsl
pop
movsl
pop
mov
push
cmpsl
xchg
lods
jmp
or
sub
mov
sub
fnsave
push
addr16
inc
xor
ja
inc
sbbl
lahf
lea
inc
mov
push
aaa
addl
lret
jmp
xor
test
in
daa
rcl
mov
imul
mov
test
pop
clc
mov
xor
lret
andl
push
mov
movsb
ret
stos
testb
mov
adc
stc
pushf
out
pushf
in
jns
xor
out
sbb
or
or
loope
push
cwtl
sbb
xor
test
shlb
mov
les
inc
adc
call
inc
ret
lock
ffree
cmp
xor
pop
lods
cmp
movsl
and
mov
leave
mov
ds
and
and
pop
bnd
mov
imul
jl
pop
xor
or
jo
add
sub
inc
add
addr16
outsl
icebp
lea
pop
pcmpgtb
ss
lret
aam
or
mov
add
ja
iret
negb
push
aaa
sub
insb
pop
pushf
es
mov
in
cmp
sbb
les
mov
out
test
jp
in
and
arpl
enter
dec
cmp
pop
in
rcl
stc
imul
aaa
mov
idivl
sbb
mov
std
insb
pusha
pop
in
fdivrl
dec
in
int3
pusha
xor
inc
scas
push
push
jo
and
stos
jno
fisubl
lahf
sti
cmc
sub
and
mov
out
jne
test
push
arpl
and
imul
jmp
xor
cltd
mov
mov
xrelease
jne
inc
inc
add
mov
jge
popa
decb
mov
cmp
jp
cmpsl
loopne
lret
dec
es
cmp
gs
mov
jno
cli
outsl
lds
fadds
outsl
enter
dec
ss
and
repz
push
mov
jmp
sub
gs
mov
mov
or
and
int3
mov
or
sahf
jle
in
add
test
mov
sbb
add
or
cmp
out
jecxz
xchg
cmp
push
stos
cmc
daa
xchg
cs
xor
dec
xchg
inc
xchg
dec
js
ss
push
subl
mov
leave
aam
xchg
xor
aaa
cmp
arpl
cmc
push
sub
mov
adcl
adc
data16
dec
sbb
mov
testb
push
arpl
mov
popa
mull
stos
push
scas
ss
sbb
ljmp
pop
out
movsl
xchg
jno
bound
test
fxch
and
outsl
faddl
cmp
dec
out
jl
dec
mov
pop
outsb
add
cmp
mov
insl
add
movsb
pop
cmp
adc
cmpsb
cmp
mov
mov
ja
add
cli
jle
dec
xchg
push
mov
cli
cmpsl
es
repz
add
xchg
out
or
lea
jp
je
fs
or
jno
lods
pop
pop
out
jecxz
test
mov
es
gs
ds
scas
sarl
std
ljmp
xchg
fcmovnb
cli
mov
ja
les
dec
mov
cmp
xchg
add
or
mov
sar
sub
pop
addr16
dec
xchg
lea
mov
mov
scas
repnz
rcrb
movsl
pushf
add
mov
dec
push
mov
out
test
sbb
daa
xchg
sbb
inc
mov
loopne
pop
repnz
lea
jb
imul
ljmp
xor
daa
shrl
mov
out
cvttps2pi
imul
repz
and
xorb
stos
xchg
iret
mov
cmp
add
mov
xor
jg
outsl
adc
xchg
cmp
or
flds
cmp
xchg
jl
adc
sarb
mov
lods
popf
inc
scas
insl
lea
cwtl
mov
mov
push
lds
adc
in
cmp
jecxz
daa
notb
pop
lods
cmp
adc
shll
add
jp
add
clc
shl
in
mov
fcoms
push
loopne
ljmp
inc
out
mov
mov
jne
pop
int
int
out
push
outsl
cld
and
rep
scas
incl
jae
pop
fcomip
mov
cltd
or
dec
in
lock
int
mov
in
mov
xchg
push
sub
add
add
adcl
pop
or
mov
xchg
addr16
sbb
cwtl
push
outsb
mov
mov
fmull
add
daa
lret
push
hlt
push
call
ljmp
push
retw
rcll
mov
adc
cmp
mov
dec
adc
adc
push
lret
adc
mov
movsl
shll
cltd
mov
incl
push
rcr
ljmp
cld
push
jae
js
stc
dec
outsb
mov
filds
loopnew
and
add
xchg
or
imul
mov
push
sbb
xchg
test
dec
pusha
sarl
pop
aas
imul
push
add
nop
push
and
inc
imul
lea
mov
ja
ds
pop
loop
ret
test
notb
in
repz
fstl
jns
cmpsb
cld
subb
out
enter
leave
ret
xorl
sti
inc
je
pop
arpl
push
out
jmp
push
iret
sub
jecxz
ret
jnp
out
xchg
ret
adc
sub
int
inc
insl
ret
xchg
mov
mov
popf
sbb
or
repz
insl
icebp
insl
scas
cmp
insb
xor
jo
fstps
popa
and
cld
lcall
flds
pop
out
fwait
loop
jecxz
jno
pusha
dec
or
loop
and
test
inc
add
cmp
inc
bound
adc
rcrb
movsb
or
and
negl
or
in
imul
ret
jo
and
push
or
shlb
dec
in
das
outsl
sti
xchg
push
maxps
in
std
mov
cmpsb
adc
orb
mov
ret
cmpsb
out
dec
pop
and
lds
sbb
loope
testb
mov
mov
inc
cli
pop
inc
sbb
nop
add
xor
cmp
xchg
mov
pop
cmc
mov
cld
sbb
lret
lret
mov
and
fists
outsl
mov
je
fdivrs
push
pushl
pop
dec
fwait
aad
cmc
les
cs
addr16
pop
mov
jno
repz
inc
inc
push
cmp
push
xchg
pop
xchg
push
sbb
dec
mov
dec
mov
lock
and
jge
int3
mov
ljmp
adc
mov
hlt
loop
mov
andb
sub
aad
ds
cli
cli
mov
test
and
inc
add
cmp
fisubs
pop
mov
adc
dec
push
in
xor
test
jecxz
xchg
mov
mov
sahf
test
in
ljmp
std
push
test
pop
push
jmp
or
test
and
xchg
mov
sti
inc
mov
ret
push
jb
push
mov
cmp
and
mov
loopne
bound
mov
xchg
out
push
shll
mov
idivl
dec
push
jae
ja
sub
mov
cmp
sti
pop
stc
test
mov
out
test
testb
fnsave
pop
adc
xor
js
sbb
incl
lods
lea
sahf
movsb
mov
popf
cmpsb
and
add
aas
cli
pop
cltd
je
enter
push
jmp
out
adc
clc
js
repnz
xor
movsl
sbb
lods
push
test
mov
shll
ss
cmp
mov
push
inc
arpl
xchg
mov
js
pop
in
lcall
mov
or
mov
xchg
cli
adcb
insl
ljmp
scas
vmread
mov
xor
scas
test
imul
mov
pop
mov
adc
mov
and
mov
addr16
sbb
enter
pop
xchg
mov
test
xchg
loopne
sti
popa
and
div
out
popa
fisubl
in
jge
mov
push
pusha
or
or
push
data16
adc
add
inc
std
adc
fcmovu
adc
push
mov
sub
mov
outsb
lea
add
mov
sbb
ret
shr
dec
fwait
cwtl
imul
scas
adc
xor
lahf
fstl
add
dec
add
adc
xor
and
inc
sahf
cmp
jno
mov
sub
popa
or
add
cmpb
add
sbb
dec
adc
mov
fwait
mov
mov
arpl
pop
mov
mov
xor
mov
subb
adc
add
sbb
out
loop
push
and
outsb
aaa
iret
pop
inc
and
sub
and
adc
insb
addr16
mov
mov
cmp
nop
int3
pop
shlb
mov
fucomip
mov
jecxz
xor
out
dec
outsl
frstor
push
push
ljmp
in
mov
push
out
repnz
dec
pop
xchg
sti
jecxz
lcall
stos
lcall
stos
in
dec
fadd
rcrl
sahf
xor
imul
add
push
daa
inc
es
call
addr16
pop
aad
and
xchg
sti
sbb
inc
xchg
fsub
cwtl
jo
loop
pushf
psubq
jno
insb
add
int3
push
sbb
cmp
dec
jo
mov
arpl
jle
cwtl
or
aam
xchg
xor
sbb
add
sbb
pop
sbb
sbb
mov
mov
cmpsb
mov
out
out
out
pop
push
xor
xor
adc
sub
mov
insl
or
sub
jne
xchg
xchg
mov
insl
test
imul
add
pushf
push
test
gs
js
jl
je
add
ja
cs
cmpsb
mov
adc
sti
adc
ss
pop
pop
popa
sub
dec
imul
scas
call
mov
push
pushf
mov
mov
jl
ror
shll
in
insb
cmp
in
es
mov
sbb
stos
pusha
push
mov
inc
mov
dec
xor
arpl
inc
bound
dec
icebp
cmp
shrb
call
mov
in
and
lahf
pop
leave
es
out
pop
xlat
loope
inc
and
add
popf
out
lret
xchg
jbe
insl
scas
call
sti
push
pop
cmc
push
dec
lods
jmp
out
int
mov
shrl
jae
imul
pop
scas
lods
loopne
jns
inc
mov
out
add
test
mov
mov
fimuls
fsubl
ret
xchg
mov
and
mov
jmp
adc
and
enter
cmp
jl
push
or
add
ss
inc
mov
test
pop
rdpmc
sub
in
mov
inc
xchg
outsl
mov
cmc
outsl
or
push
mov
mov
fstpl
fwait
pop
je
loop
jno
test
adc
test
data16
push
pop
stos
jo
nop
clc
call
xchg
inc
icebp
adc
lods
mov
pop
ja
and
mov
ret
adc
adc
bound
mov
adc
mov
add
rolb
xchg
jp
fiaddl
outsl
fs
movsb
mov
fisttpll
jmp
outsb
mov
xchg
mov
jne
out
jae
mov
test
fnsave
xchg
out
jle
pop
sbb
out
in
scas
dec
mov
aad
and
hlt
das
ret
sbb
cmp
sbb
adc
mov
inc
or
mov
call
adc
xchg
int
push
cmpsl
das
repnz
and
out
push
test
outsb
shrb
add
and
pop
xor
pop
sub
les
mov
push
decl
mov
decl
cmp
sub
ficomps
pushf
cmp
fisubl
or
xchg
jnp
mov
fs
push
inc
scas
dec
call
inc
inc
js
push
ja
jne
inc
dec
lret
jbe
iret
mov
push
dec
clc
je
mov
cmp
data16
push
aam
insl
fisttpl
scas
iret
mov
dec
cmp
jg
mov
subl
not
cmp
or
fidivl
push
testb
cmpsl
daa
into
pop
xor
or
js
ss
pop
dec
repz
add
and
sbb
mov
enter
fstps
imull
or
inc
inc
jp
lods
adc
bound
dec
mov
pop
dec
dec
stos
push
xor
es
pop
movsb
sub
insl
inc
jo
iret
jbe
inc
inc
sbb
pop
push
fwait
lods
xor
mov
and
xchg
dec
xor
mov
mov
int
adc
add
jne
jg
mov
loope
daa
pop
mov
push
pop
lea
jns
in
pop
in
outsl
pop
jl
and
cld
sbb
mov
andb
hlt
or
pop
jnp
aaa
out
sbb
xor
cmpsb
mov
or
maskmovq
adc
divl
sub
or
jmp
xchg
sub
push
add
imul
fcomip
les
and
es
mov
jne
xor
clc
ret
add
mov
cmpl
push
addr16
cmp
js
pop
mov
shll
mov
std
call
dec
and
cmpsl
dec
call
repz
sarl
popa
das
add
loop
in
push
int
jp
cwtl
push
es
xchg
sub
push
pushf
mov
mov
cmpsl
dec
mov
jns
sbb
iret
push
ja
stos
mov
cmc
fistl
mov
sbb
insb
jo
insl
popf
pusha
movsb
sub
das
in
xchg
adc
jnp
lcall
shrb
sbbl
cmc
and
std
mov
sub
sub
daa
sub
jno
jne
ret
es
xor
stos
mov
push
pop
jg
shlb
flds
add
pop
aaa
imul
je
das
and
cmpsl
ja
xchg
xor
xchg
xor
pop
fcoml
mov
xchg
sbb
xchg
psubq
inc
test
push
outsl
cltd
jns
and
lods
data16
sbb
jge
test
adc
ss
lods
mov
mov
xchg
push
popa
push
xchg
jge
xor
lock
dec
std
dec
addb
insl
fstps
push
xchg
in
mov
cmp
out
ret
push
cmpsl
xchg
arpl
sbb
mov
int3
jno
xorl
mov
mov
les
popf
repz
fisubs
lcall
lret
lock
xor
sbb
dec
shll
rep
or
cmpsb
insl
mov
jle
aad
ljmp
nop
loop
xchg
add
pop
jbe
je
push
jne
push
in
add
aas
and
jo
jns
xor
in
cmp
out
incl
punpckhbw
gs
push
and
xor
nop
mov
in
aas
or
add
adc
out
lret
cwtl
pop
mov
push
xchg
outsb
lods
xlat
shlb
inc
push
jns
rol
mov
mov
femms
fnstenv
dec
jmp
push
in
iret
inc
push
roll
inc
int3
xor
rorl
int
add
push
cmp
pushf
sub
jmp
adc
cmpsl
mov
or
xchg
sahf
push
aam
sbb
sbb
sti
jno
lcall
orl
pop
mov
int3
in
cld
jmp
sbb
out
cwtl
icebp
adc
rcl
dec
push
dec
add
out
pop
jg
mov
inc
pop
lock
in
mov
push
out
ds
pop
loope
pop
leave
jp
mov
jge
mov
test
cmp
iret
test
ret
or
gs
and
movsl
rcrl
loope
aas
cmp
aad
pop
cld
cmc
jns
stos
pop
in
jae
mov
das
jns
sti
loope
and
mov
xchg
fbld
je
push
test
loopne
es
mov
flds
insb
sub
pop
cmpsl
into
push
adc
mov
push
inc
push
and
clc
push
sub
xchg
lods
mov
shl
jecxz
repz
add
adc
and
xor
push
push
data16
xchg
mov
mov
shl
jecxz
repz
add
adc
and
xor
push
push
data16
xchg
mov
mov
shl
jecxz
repz
add
adc
and
aaa
inc
inc
push
push
data16
xchg
mov
data16
xor
add
mov
xor
fisubrs
sbb
or
sbb
or
cmp
sub
and
inc
pop
pop
push
aam
mov
ficoml
ljmp
xor
inc
pop
push
dec
pusha
jp
adc
mov
ror
loopne
lock
sub
pop
pop
dec
dec
js
addr16
lcall
out
mov
cltd
jo
adc
push
pop
sub
lods
dec
push
icebp
mov
jnp
push
shlb
pushl
and
scas
xchg
iret
nop
jb
pusha
dec
out
outsl
jne
scas
mov
add
jge
lea
adc
imul
lret
push
pop
lock
cli
aas
iret
xchg
lret
aaa
push
rcrb
rclb
jge
stc
inc
dec
mov
jo
mov
clc
jne
ds
dec
inc
fiaddl
jmp
outsb
out
pop
jns
inc
cmpsl
adc
nop
ret
jo
pusha
dec
mov
mov
mov
push
ror
insl
cli
or
lahf
adc
std
pop
fildl
jg
outsl
fstps
mov
add
rcrb
sbb
or
cmp
sub
dec
dec
pusha
jp
push
lcall
fcomp
enter
jmp
dec
inc
cmp
aas
cmp
ds
jecxz
mov
fisubrs
xchg
movsb
add
outsl
inc
pop
xor
xor
ds
or
xor
repz
mov
lret
nop
lods
lock
and
dec
xor
je
dec
pusha
jp
push
lcall
rcr
lret
lock
xor
inc
pop
push
dec
pusha
jp
push
lcall
rcr
lret
lock
pop
call
fcomip
sub
scas
jae
adc
xchg
jl
pusha
dec
in
inc
pop
mov
ja
pop
add
xchg
loope
sub
xchg
in
add
inc
push
mov
dec
adc
dec
pop
outsb
daa
jmp
jge
lods
lea
dec
sub
or
lret
popa
cmp
orl
mov
mov
pop
inc
xchg
mov
sub
cmp
dec
jmp
xor
dec
mov
jecxz
and
jmp
inc
hlt
jb
jge
mov
jl
ret
shlb
bound
data16
stc
jno
mov
cltd
jle
push
sbb
mov
push
scas
mov
inc
testb
push
sarl
ret
gs
shlb
jae
or
lods
cmp
xor
ds
sbb
les
adc
cmpsb
aaa
push
adc
mov
insb
mov
pop
fcoms
pop
fwait
cmpsl
test
pop
cmp
mov
in
fsubs
or
xchg
pop
adc
lods
mov
cli
dec
xchg
cmp
das
sbb
popf
cltd
orb
and
sub
fwait
xlat
xchg
xchg
outsb
es
mov
and
xor
lcall
popa
adc
xor
jmp
push
inc
xchg
sub
dec
bnd
sub
popa
jmp
aad
stos
test
jb
aad
lods
mov
push
sbb
insb
lock
int3
xchg
push
dec
and
xor
or
popl
lahf
divl
or
pop
xrelease
jl
mov
xor
mov
xor
jo
scas
icebp
jno
movsb
scas
or
out
mov
cmp
inc
adc
cmp
fwait
dec
int3
movsb
add
cmp
es
imul
lock
push
lret
or
fwait
add
in
icebp
iret
pushf
pop
and
aas
notb
pop
dec
fsubrl
outsl
xor
iret
pusha
adc
dec
mov
pop
cmpsb
inc
insl
jl
adcl
jbe
inc
mov
sbb
dec
mov
stc
push
pop
sbbb
jmp
xchg
nop
pop
repz
sub
mov
adc
cmp
add
push
cmpsb
das
pop
stc
js
fwait
dec
aaa
cld
adc
cwtl
cmp
jno
sahf
cmpsb
lahf
sahf
push
push
mov
bound
ror
mov
loope
or
add
adc
mov
cmp
sbbl
je
inc
pop
or
sti
and
sbb
rep
or
outsb
sbb
hlt
fsub
fildl
jbe
mov
mov
cmp
xchg
jae
push
int
xor
out
jnp
mov
xchg
cwtl
pop
imul
ss
repnz
cmp
sub
rol
cmp
cltd
and
data16
xor
cmp
fcoms
std
mov
cmpsl
jp
insb
mov
in
test
sub
jo
fdivrl
push
cmp
push
std
in
jae
mov
and
je
push
pop
dec
push
cmc
outsb
aam
dec
sbb
and
inc
testl
pop
xchg
add
xlat
mov
and
jl
jmp
and
stos
xchg
pop
scas
sub
lret
sub
mov
pusha
loope
divb
sub
mov
push
aad
lret
sbb
in
jmp
sbb
and
icebp
scas
jmp
insl
js
add
lock
fs
dec
sub
lods
lea
pop
fs
je
cmpsl
call
sti
mov
orb
mov
push
stos
movl
std
push
cmp
fwait
cmp
jo
stos
ljmp
repnz
inc
mov
fsubrs
xor
daa
mov
adc
xchg
or
ds
in
sarb
out
je
loop
frstor
pcmpeqw
ljmp
ret
jmp
mov
loopne
or
push
inc
or
mov
inc
ficoms
loop
push
std
ljmp
mov
mov
pop
dec
inc
xor
aas
jo
rcr
cmc
jle
mov
repz
inc
mov
inc
movsl
insb
jo
imul
pop
mov
add
jnp
stos
sub
mov
fisttpl
lds
and
mov
sub
adc
popf
push
aad
and
insl
and
pop
mov
lds
ljmp
sar
xchg
and
push
test
cmp
xchg
stc
mov
sub
stos
mov
lock
int3
addr16
push
outsl
pop
cmpsl
mov
cmp
add
xorl
stos
jp
insl
mov
sbb
loop
cmp
mov
push
inc
imul
out
sarb
add
test
sbb
and
pop
xchg
pop
in
and
xor
movsb
adc
and
addr16
lock
jbe
insb
mov
dec
push
repnz
test
mov
insb
cmpsl
std
lret
ja
popa
lret
push
and
sahf
cmp
push
jmp
push
repz
cmp
jne
cmp
faddl
cmp
dec
ja
add
jae
outsb
jl
jbe
fnstcw
jecxz
out
jp
mov
lock
insb
imul
fs
jge
jo
out
test
call
aaa
push
cmp
pop
push
add
and
loop
icebp
add
sub
out
into
pop
or
xor
inc
inc
repz
in
jne
ljmp
fiaddl
dec
lcall
data16
mov
adc
dec
mov
mov
jbe
inc
push
insl
jae
inc
fistpll
xchg
inc
jb
xchg
fbld
cmp
mov
outsb
ret
jl
repnz
dec
ja
adc
mov
jp
dec
jnp
call
fnstsw
fsubrs
push
inc
inc
mov
addr16
xchg
and
loop
loopne
mov
or
mov
movsb
aad
btr
sbb
addr16
push
xor
in
in
xor
xchg
cmpsb
pop
es
inc
jle
cmpsb
lret
add
lcall
xchg
sbb
mov
dec
inc
arpl
xchg
add
fstp
and
pop
pop
jne
insl
bound
and
pushf
lods
outsb
pop
jg
js
dec
test
sub
adc
cwtl
je
loop
popa
rcll
pushf
mov
movsb
in
out
add
loope
pushw
popf
in
arpl
leave
xchg
mov
ret
dec
jg
mov
and
daa
ret
mov
cmpsl
mov
shl
push
sub
mov
sbb
sub
push
xchg
scas
outsl
xchg
mov
xor
adc
shll
lds
adc
idiv
sub
pop
sbb
xlat
sbb
jle
je
popf
mov
shll
ja
xchg
nop
dec
rorl
adc
in
mov
add
push
jno
aam
cmp
sub
adc
outsb
imul
leave
fists
ret
sbb
aas
mov
sbb
cmp
inc
mov
xchg
xor
aad
jo
mov
movsl
xor
or
into
push
dec
popa
int3
jge
pop
pop
pop
or
push
aam
mov
and
aad
out
mov
push
xlat
sbbb
adc
lods
data16
es
scas
and
jns,pn
push
or
lcall
daa
cmp
sub
adc
ficomps
lock
sbb
adc
negb
xchg
push
mov
jge
mov
xchg
mov
imul
push
pop
cs
jl
mov
fnstcw
jno
mov
lcall
mov
rorl
jle
in
push
push
sub
mov
fidivrs
mov
cmp
xorb
lds
inc
sbb
pop
push
lret
lcall
dec
std
mov
test
sbb
lret
mov
push
shrl
outsb
push
imul
inc
pop
icebp
xchg
cmp
xchg
add
jbe
out
jbe
fisubrl
dec
pop
mov
jno
jnp
repnz
ficoms
dec
fidivl
sbbb
fists
inc
sub
pop
mov
ss
shll
icebp
and
lret
jb
faddl
loopne
lret
int
adc
fsubrl
insb
stc
clc
lea
hlt
fstl
fdivl
movnti
mov
pushf
cmc
and
mov
sub
pavgb
std
pusha
or
and
js
inc
or
xchg
and
out
sahf
dec
inc
gs
jmp
xor
xlat
inc
sub
nop
add
std
mov
stc
cmp
sbb
mov
inc
lcall
cli
sbb
push
and
call
insb
sbb
pop
fsub
push
xlat
fdivl
lcall
lret
rcrl
xor
decb
clc
push
dec
popf
or
adc
sub
xor
jge
imul
popa
aaa
ljmp
lcall
xorl
xchg
insb
popa
bound
xorb
jge
or
cmpsb
call
jbe
cmp
lods
pop
jbe
cmp
imul
fwait
or
lea
int3
dec
cmpsb
cmpb
iret
jo
xor
jno
mov
stos
lcall
pusha
adc
dec
jae
in
outsl
cmovne
notl
mov
and
push
outsb
xchg
add
imul
dec
mov
jmp
cld
cwtl
nop
push
and
movsl
aaa
loope
sahf
inc
lods
stos
sub
sbb
jo
insb
mov
mov
into
cmp
gs
inc
test
das
push
push
das
adcl
mov
jp
fisttps
lea
sbb
sbb
and
mov
lahf
pop
jge
repnz
dec
sti
adc
xor
cs
int
lods
repz
lea
int
mov
test
and
mov
cmp
push
repnz
adc
dec
ja
in
or
adc
adc
pop
inc
adc
sub
les
add
lea
movsb
and
ja
pop
cmp
ror
jecxz
movsb
mov
mov
xor
imul
lahf
fstps
stc
pop
sub
sub
cli
or
push
adc
andl
mov
repnz
out
outsl
sti
jl
sub
adcb
xchg
add
pop
pop
ret
push
pop
aas
adc
or
jnp
int
inc
jae
adc
mov
mov
ja
sbb
mov
int
outsb
mov
add
dec
adc
cmp
dec
dec
ret
xchg
ret
repz
mul
xor
mov
mov
cmc
lock
stos
dec
xchg
add
jp
and
in
or
push
dec
enter
inc
fs
pop
enter
fistpl
movsb
adc
out
dec
cmp
dec
mov
xchg
test
push
cmp
cmp
icebp
sub
call
inc
sbb
push
fbld
mov
scas
pop
notb
adc
out
enter
and
sub
jecxz
aam
std
sbb
stos
mov
std
or
orl
add
repnz
es
inc
aaa
add
adc
repz
inc
test
jne
mov
xchg
dec
adc
or
mov
ds
nop
xor
int
or
out
gs
out
sbb
sub
pop
or
call
imul
dec
xlat
cmp
xor
xchg
mov
jnp
dec
fidivrs
pushl
fs
mov
movl
cmc
out
fst
and
in
mov
dec
fsubs
jbe
sub
sahf
sbb
fwait
data16
jnp
in
inc
push
push
es
push
lea
lods
in
cmp
jl
and
dec
js
add
mov
mov
xchg
stc
and
jl
repz
mov
inc
xor
test
mov
pop
and
mov
cld
xchg
cmp
inc
or
add
jmp
or
loope
out
rclb
leave
mov
mov
fwait
cmpsb
aam
jp
test
test
lcall
sbb
cld
dec
int3
std
dec
dec
adc
mov
insl
pop
push
inc
dec
xor
out
je,pt
movsb
mov
dec
pop
mov
ror
xchg
jge
jp
inc
and
add
xor
dec
out
outsb
lcall
jl
dec
jge
ss
xor
sub
pop
nop
lods
mov
adc
jmp
inc
outsl
and
loop
cld
movsb
push
dec
dec
pop
push
call
mov
movsb
adc
rclb
mov
sbb
loop
mov
mov
sub
mov
sbb
sbb
push
adc
insb
cmpsb
or
sub
add
xor
aas
fs
lret
xchg
das
mov
aam
adcb
fwait
lcall
sub
incb
add
mov
stos
sub
mov
loop
inc
int
sub
pop
sbb
push
push
mov
int3
shlb
out
xchg
jo
lahf
outsl
mov
jecxz
cmp
scas
mov
insl
sub
adc
xchg
aas
add
xchg
jmp
daa
and
inc
jnp
fdivl
and
push
mov
adc
sbb
daa
sub
adc
jmp
xor
add
addr16
fdivr
arpl
das
pop
xor
inc
dec
sbb
ds
nop
push
sub
imul
sub
movsb
mov
mov
lahf
repnz
data16
mov
mov
ljmp
or
ss
sub
leave
out
pop
sub
shll
fistps
out
leave
xlat
pop
je
testb
rorb
xchg
pop
dec
xchg
xchg
incb
and
adc
xor
dec
ficompl
mov
inc
js
push
fmuls
stc
or
scas
int
mov
and
adc
dec
mov
pop
shl
loopne
ljmp
andl
add
pop
mov
iret
cmp
mov
clc
adc
adc
sbb
inc
notb
data16
xlat
cmpl
sbb
cmp
and
fdivrp
or
jns
or
jge
or
aam
out
loopne
sbb
lahf
add
pop
je
popa
adc
dec
cmp
out
jg
adc
xlat
jge
jge
fucomi
sbb
mov
sub
cmpsl
pop
mov
jno
mov
jb
jbe
xchg
and
mov
out
sub
xchg
xchg
fnstenv
test
mov
xor
push
fistpll
pop
mov
adcb
mov
aaa
dec
add
or
ljmp
divl
test
cs
adc
and
jmp
cmp
dec
and
aaa
fisttps
or
xchg
sub
mov
mov
lea
mov
hlt
jg
subb
ret
ljmp
push
dec
movsb
iret
popf
mov
mov
xor
lods
push
ss
fiaddl
jge
mov
hlt
fwait
ja
inc
mov
or
in
jp
mov
imul
inc
jns
xchg
scas
jp
mov
lret
js
pop
inc
xlat
cmp
inc
dec
popa
je
hlt
and
cmpsb
test
xor
andl
xor
push
in
mov
sahf
loop
cli
rol
mov
int
fcomp
push
mov
pop
jecxz
mov
subb
xor
sahf
adc
ret
outsl
cmpsb
jb
in
xchg
rcl
and
push
scas
cld
fisttpl
je
ja
movsb
cmpb
jle
jle
dec
mov
js
mov
icebp
std
shrb
xchg
out
stc
pop
leave
loop
ja,pn
jbe
inc
jle
mov
mov
and
lods
inc
xor
movsb
xor
xor
int
out
ja
and
cmp
mov
sbb
in
adc
xchg
add
mov
add
cmp
mov
adc
mov
xchg
popa
nop
jnp
sub
add
gs
cmc
das
test
js
clc
and
xchg
xchg
xor
rorl
mov
loopne
inc
add
mov
mov
xchg
movsb
lods
mov
push
mov
cltd
outsb
mov
popa
les
clc
mov
jae
cmp
icebp
jmp
lock
enter
xchg
dec
test
cmp
and
cmpsl
jmp
adc
decb
int3
ss
fs
ret
fdivr
push
dec
scas
push
test
les
cmp
push
inc
inc
das
movsb
fwait
aam
or
and
mov
and
mov
xor
dec
push
mov
jecxz
mov
jbe
xor
mov
fnstsw
aam
pop
fists
stos
mov
hlt
stc
mov
aaa
mov
test
jecxz
enter
imul
outsb
sub
xor
loope
popa
sbb
in
mov
push
loope
push
mov
jne
sbb
cmp
aaa
mov
cmpsl
inc
test
cltd
movsb
sbb
in
inc
movsl
push
mov
mov
scas
out
pop
icebp
test
xor
push
movsl
jne
out
xor
out
xchg
and
push
dec
sub
cmp
jle
ljmp
mov
stos
add
mov
in
loope
fdivrl
add
adc
repnz
movsl
mov
sar
cmp
or
aaa
dec
leave
and
test
push
pop
xchg
or
xor
xorb
stos
cmpsb
jg
jb
cwtl
popf
xor
jno
inc
in
loopne
nop
outsb
rorb
movl
jb
jl
and
pop
xorb
pop
repnz
loop
por
enter
adc
insb
inc
adc
jb
repnz
in
mov
adc
mov
das
lock
mov
ret
adc
xchg
lret
ficompl
and
inc
popa
lods
and
mov
mov
jns
jg
lret
movsb
js
repnz
cmp
sahf
test
mov
pop
testb
dec
push
jmp
or
mov
adc
adc
mov
sub
sti
test
test
xchg
and
sbb
dec
push
cs
or
xchg
inc
xchg
pop
xor
xchg
mov
mov
jb
mov
push
mov
cmp
dec
fwait
mov
bound
add
int3
push
inc
scas
cmp
bound
cmpsl
fstpt
fsubr
ret
stos
in
call
dec
add
ss
es
jge
push
out
sbb
mov
pop
aam
cmp
pop
lret
sahf
or
imul
int
mov
sub
iret
mov
jb
clc
pushf
inc
mov
mov
movl
push
js
xor
dec
push
mov
adcl
divb
ss
cvtps2pi
xor
movsb
es
lea
pop
jg
cmp
orl
cmp
loope
das
inc
pop
dec
and
inc
xchg
test
dec
push
mov
jle
icebp
cmp
adc
sti
xorl
inc
adc
cs
and
repnz
std
fxch
repnz
cli
movsb
or
add
ror
movsl
or
call
cmp
out
movsl
ret
sbb
adc
out
jmp
fcoml
pop
outsb
sub
cltd
xor
shr
jne
insl
pop
and
adc
mov
scas
mov
and
add
adc
clc
fidivrs
or
add
xor
and
stc
inc
aad
xchg
pop
shr
push
fistps
lret
sub
mov
cld
sbb
addr16
lret
orl
lcall
stos
mov
xor
aad
rcr
mov
rorb
das
nop
lods
aam
push
aad
xlat
adc
jns
test
lcall
fsubs
add
popa
fcoml
dec
loopne
jne
jnp
into
out
or
inc
mov
cmp
mov
mov
inc
cmp
pop
ficomps
lcall
lds
dec
mov
incb
int
out
inc
ret
cmp
js
fnsave
sub
or
push
orl
jnp
push
add
loope
outsl
roll
adc
test
add
xchg
filds
fnsave
testl
push
xchg
call
not
movsb
incl
jp
sub
and
add
insb
lea
sub
sub
push
fstp
pop
xor
xchg
aas
or
repz
xchg
insl
sbb
out
stos
sbb
aad
lcall
test
decl
sub
mov
sub
insb
in
jne
or
movsl
hlt
loop
pop
push
js
jecxz
sti
cld
das
enter
xor
xchg
adc
cmpsb
mov
outsb
cmp
mov
enter
xchg
push
sbb
call
mov
xchg
movsb
xchg
cmp
sub
push
dec
pusha
jp
push
lcall
rcr
lret
lock
xor
inc
pop
push
dec
pusha
jp
push
lcall
rcr
lret
lock
xor
inc
pop
push
dec
pusha
jp
push
lcall
rcr
lret
shr
sbb
push
cmp
sub
push
dec
loopne
lock
lcall
mov
pop
xor
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
into
add
mov
cmp
mov
jecxz
mov
add
push
add
pop
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
int3
add
add
icebp
add
imul
ljmp
add
add
add
add
add
fildl
imul
filds
xlat
add
inc
add
add
add
add
add
add
lea
test
pop
add
add
mov
filds
add
add
add
nop
add
add
add
and
adc
mov
mov
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
mov
inc
add
add
add
jne
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
sub
inc
add
add
add
add
pop
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
push
add
movl
mov
add
add
add
add
add
sbb
pop
add
add
add
add
add
add
flds
in
add
add
mov
push
add
add
add
add
dec
add
add
int
mov
mov
ja
push
add
add
add
add
add
add
aas
add
add
add
das
add
add
add
add
add
movl
push
add
add
add
lea
test
ljmp
add
add
dec
add
fildl
xor
filds
pushf
add
add
add
add
add
add
add
add
add
add
add
add
in
add
int
mov
je
ja
sub
faddl
fildl
imul
icebp
add
add
add
add
push
add
cmp
rolb
nop
add
add
mov
das
add
add
mov
mov
pop
add
add
add
add
add
add
add
in
imul
or
nop
add
adc
mov
filds
in
add
add
add
movl
popf
add
add
imul
add
mov
add
add
mov
popa
add
push
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
sub
mov
imul
and
int3
add
add
add
add
faddl
stos
add
add
add
add
add
add
and
sbb
mov
mov
cld
add
add
add
sub
add
imul
sub
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
or
add
add
add
adc
imul
inc
or
add
mov
add
adc
mov
cmp
clc
add
inc
or
add
sbb
cmp
xlat
add
cld
add
add
loop
or
shlb
std
inc
loop
xchg
mov
sbb
testb
sub
ljmp
and
xchg
ret
scas
fldcw
sub
xchg
add
mov
adc
jge
xchg
dec
and
mov
sub
mov
pop
pop
cmp
and
jle
test
iret
aas
ja
mov
je
pop
div
dec
push
repz
movsl
and
xchg
and
dec
insb
xor
das
fistps
insb
stos
xchg
movsb
imul
pop
xor
add
mov
jecxz
test
aaa
repz
ret
fmuls
iret
shll
outsb
jle
pop
pop
fisttpll
mov
sbbl
pop
addr16
pop
fstpt
inc
ds
rcr
rcrb
dec
xchg
mov
and
mov
ss
inc
stc
aas
loope
dec
jno
rorb
and
gs
mov
mov
jne
dec
lods
testl
dec
mov
std
std
ret
sbb
call
jnp
in
mov
and
dec
jb
or
std
lods
sahf
push
dec
adc
sub
jmp
mov
outsl
stos
inc
out
mov
jnp
or
stos
push
dec
iret
mov
sbbl
test
stc
into
lret
sub
sub
arpl
sub
mov
cmpsl
push
lods
mov
inc
dec
fists
lret
popa
jbe
push
je
or
sub
jae
mov
mov
sahf
stos
aam
pop
out
nop
int3
lds
rolb
sbb
jmp
ljmp
lret
sub
and
in
mov
test
mov
or
push
int3
jg
mov
xor
add
mov
filds
es
or
xor
and
and
cmc
mov
push
rolb
mov
aad
sti
jge
insl
push
repz
pop
xchg
dec
mov
mov
testb
add
pop
and
in
sahf
pop
fildl
in
xchg
nop
xchg
btr
in
or
add
xlat
out
test
jo
fstl
sti
js
cs
push
js
xchg
adc
lds
enter
add
xor
pop
push
jecxz
xchg
push
cli
cmpb
sub
sbb
shll
or
mov
inc
in
xchg
popa
inc
stc
fidivrs
es
pop
test
xchg
enter
mov
push
cld
xchg
and
cld
push
pop
cltd
stos
pop
imul
push
lcallw
xchg
insb
push
cmp
xchg
into
lods
inc
xor
test
pop
into
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
