call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sarb
loop
es
mov
cli
scas
lret
inc
sub
bound
adc
push
pop
and
mov
loop
xchg
cli
sub
fisubl
sub
insb
or
push
xor
pop
and
mov
cli
mov
fisubl
or
cs
cmp
mov
repnz
mov
fiaddl
inc
aam
mov
jb
aas
add
rcll
adc
mov
pop
cli
subb
aaa
rcl
imul
setl
jp
mov
sub
lock
mov
push
push
sub
add
inc
out
pop
adc
push
fbld
repnz
rorb
insl
pop
sub
mov
xor
lds
inc
sahf
popf
ljmp
and
into
dec
cli
jg
add
insl
jb
arpl
mov
ljmp
xchg
push
ljmp
mov
aas
and
mov
sbb
and
stos
lods
sub
jns
loop
pop
push
jp
cmp
pop
and
mov
loop
test
xchg
ljmp
pop
sub
jnp
or
push
pop
and
mov
lcall
lcall
sub
jg
jle
cmp
inc
and
mov
call
cmpsb
mov
icebp
scas
adc
push
jb
and
adc
imul
mov
scas
loop
call
sub
fisubl
sub
bound
adc
push
pop
and
mov
loop
xchg
cli
sub
fisubl
sub
bound
adc
push
pop
and
mov
xchg
dec
decb
mov
add
jmp
loopne
cmc
xchg
loopne
movsl
lret
pop
addr16
std
shl
jl
cmovns
pop
jge
lret
inc
inc
or
sbb
ss
jbe
push
jp
mov
nop
lea
aas
nop
and
sub
fcoms
inc
dec
or
rcrl
inc
jle
imul
fisttpll
cmc
or
sub
mov
jp
inc
cmpb
sub
add
test
mov
nop
adc
rorb
pushf
xor
out
add
cmp
jnp
pop
push
cmp
lock
push
out
cli
and
inc
leave
mov
or
sub
test
jle
sti
xor
cmp
mov
sub
test
sub
xchg
outsb
mov
cs
imul
cmpsb
stc
aas
dec
mov
push
into
adc
sarb
add
cmp
jl
sbb
fstpt
clc
cli
ror
dec
sbb
and
call
lret
int
inc
push
jno
ss
movsb
add
pushf
cli
and
add
cmpsl
fdivrs
div
adc
mov
cli
scas
das
mov
mov
mov
dec
rolb
dec
es
out
adc
pop
mov
cmpsb
loop
movsl
dec
shrb
sub
mov
pop
mov
test
loope
in
das
inc
or
cli
fildll
pop
test
dec
sub
mov
adc
dec
cmpsl
mov
out
sub
std
mov
or
mov
mov
mov
sahf
inc
sbb
adc
sub
jo
mov
ficoms
sbb
and
test
cmp
xor
jg
xchg
adc
idivb
and
push
jbe
orl
or
xchg
addr16
push
ja
or
ret
pop
fmul
loopne
aaa
xchg
imul
xor
in
ret
or
aaa
lea
jne
scas
adc
nop
push
xor
pusha
xor
push
call
movsb
cmp
or
pop
dec
insl
push
inc
out
in
pop
pop
mov
daa
push
or
jo
xchg
push
aas
test
cmpsl
divb
cmpsl
scas
mov
scas
and
fildll
pusha
popa
dec
add
ljmp
sub
cmp
mov
insb
dec
fistps
lahf
lods
pop
scas
imull
push
or
iret
into
ss
and
fidivl
xchg
sub
sub
mov
popa
jo
cmpsl
sbb
sub
insb
jno
dec
xor
push
frstor
sbb
sbb
movsl
pop
out
out
data16
jl
cmp
adc
es
cld
jg
jo
insw
sub
cltd
cmp
xchg
imul
jl
push
bound
cmpsb
orb
jns
sar
dec
inc
arpl
xchg
sbb
mov
xchg
loope
outsl
jmp
rorl
div
mov
nop
cli
test
pop
cwtl
fcmovnb
loope
pop
aas
insb
pusha
mov
gs
iret
out
call
mov
cmc
inc
sbb
dec
shrb
mov
fists
mov
insl
mov
push
aas
test
mov
sub
iret
enter
push
mov
mov
ja
pop
mov
xor
out
insl
and
pop
imul
sti
sti
mov
add
or
cli
enter
cld
mov
loope
lods
sub
call
hlt
xor
or
push
inc
rcrl
fwait
lcall
mov
popa
adc
call
subb
clc
jge
inc
jno
inc
decb
and
add
xor
inc
xchg
pusha
inc
jl
sbb
lcall
rorl
pop
sbb
sti
push
mov
clc
mov
push
inc
sub
nop
int3
cmp
pop
iret
jb
cmp
mov
aam
or
pop
fwait
cld
push
jne
sub
lcall
jne
cwtl
adc
flds
lea
cmp
in
addb
sub
jp
mov
popf
xchg
or
or
fsubp
fs
out
bound
adc
jnp
divl
in
hlt
ret
dec
das
mov
stos
aaa
push
shrl
pop
sbb
xchg
cmc
lret
push
inc
into
fists
pop
mov
xchg
push
push
and
ficomps
rcrb
mov
mov
rclb
loop
pop
push
adc
jmp
jecxz
and
lcall
das
sbb
and
test
roll
aam
xchg
pop
or
pushf
xchg
out
and
mulb
adc
or
jae
fs
test
sahf
jp
add
mov
sbb
and
xchg
adcl
lcall
pushl
sub
int3
cmpsl
scas
mov
pop
mov
mov
xor
repz
fidivrs
pop
xchg
outsl
cmp
mov
jo
sti
out
out
fdiv
sub
int
fstl
jo
and
in
lods
mov
mov
mov
xorl
loopne
shll
xchg
inc
xchg
xchg
addr16
notb
inc
pop
xchg
sahf
shrb
clc
jae
mov
gs
mov
mov
push
lods
cmp
pop
and
out
cmp
rorl
roll
lret
loope
loope
dec
dec
outsb
mov
mov
out
inc
jno
pop
sti
mov
les
leave
bound
pop
mov
cwtl
mov
or
add
pop
cmpl
inc
subl
dec
shll
call
pusha
aaa
adc
je
mov
lret
and
jp
or
add
shrl
cmp
adc
pushf
add
cli
loop
sub
rolb
stos
aaa
fnsave
or
pop
and
imul
mov
js
cs
mov
das
imul
mov
inc
push
stc
jne
das
xor
rcl
cmp
and
adc
jl
xor
jbe
sub
xchg
xor
add
lcall
in
popa
sbb
adcl
sub
pop
jg
dec
testl
pop
sar
xchg
and
or
or
pop
repnz
push
pushf
test
cmp
jbe
sub
ret
out
fidivs
scas
xchg
mov
sahf
cmp
leave
mov
inc
mov
fdivl
dec
adc
mov
inc
or
cld
cmpb
or
and
cmpsl
and
ret
cmpsb
incb
jp
push
sbbb
dec
movsb
jb
jbe
mov
in
xchg
push
adc
neg
lods
shl
xor
jo
aaa
or
mov
and
clc
adc
fcmovnu
jmp
ret
mov
ret
fcompp
sbb
in
dec
daa
cltd
mov
pop
leave
jp
lods
sub
sub
test
nop
push
in
fdivrs
dec
pop
mov
dec
nop
pusha
sahf
mov
mov
test
mov
cli
imul
mov
push
sub
mov
xchg
cmpsb
or
or
xorb
popa
pop
jle
mov
leave
sbb
push
cmp
or
hlt
imul
adc
js
inc
mov
mov
and
cmp
repz
push
ja
sahf
fisubrl
pop
aas
pop
xchg
jb
xor
push
push
loopne
lds
stc
sub
std
loop
rcrl
mov
jle
push
inc
sub
test
outsb
jo
cmp
xchg
mov
pop
mov
rcrl
jmp
hlt
pusha
fimuls
xchg
clc
push
dec
pop
mov
bound
or
dec
aad
mov
testl
inc
fidivrl
and
jmp
inc
xor
notb
inc
data16
ror
mov
stos
push
mov
les
push
testl
cmp
sbb
sti
or
insl
in
xchg
std
pop
xor
jle
fbld
xlat
out
leave
add
sahf
cmp
mov
mov
insb
and
adc
jns
movsl
push
ljmp
xlat
into
inc
cmp
movsb
imul
push
mov
ret
pop
dec
jne
mov
rorl
push
mov
xor
xor
fidivrs
stc
mov
imul
sub
sub
mov
clc
repnz
lock
mov
sub
inc
iret
outsl
pop
fldl
dec
lcall
adc
repnz
int
leave
call
jne
pop
popf
repnz
out
aam
push
shll
mov
fidivrs
ret
lret
cld
mov
cltd
mov
jno
imul
dec
repnz
or
das
divb
pop
dec
mov
push
jns
std
xor
pop
xchg
sub
dec
sahf
cmpsb
mov
mov
fidivrs
dec
incl
nop
out
mov
cmp
icebp
inc
cld
pop
add
faddl
mov
mov
mov
xchg
fnsave
push
orb
xor
aas
mov
test
dec
cli
repz
test
jl
call
and
jge
cmp
repz
leave
std
pop
fisubs
jmp
js
mov
movsl
cmc
icebp
bound
push
xchg
dec
dec
aaa
jno
fcmovnb
add
cmp
subb
jae
add
or
jg
push
xchg
push
mov
mov
andl
incb
mov
jbe
in
pusha
das
dec
push
pop
stc
xor
jg
pop
sbb
inc
stos
adc
adc
xchg
jae
dec
or
jnp
mov
xchg
jb
or
adc
cmp
dec
ljmp
or
int
adc
daa
mov
inc
cmp
pushf
jo
adc
ds
xor
adc
adc
push
shrb
or
adc
aaa
xchg
xchg
popf
sarb
sbbb
jbe
loope
mov
cmp
xchg
xor
fsubrl
lds
sub
xor
imul
dec
xchg
insb
fnsave
or
es
test
mov
mov
push
faddp
cmp
dec
mov
addr16
push
dec
or
and
fsubp
adc
pop
loope
push
sbb
add
call
lcall
add
in
sbb
pop
lcall
and
aas
int3
fs
add
push
xor
push
imul
sbb
ret
daa
dec
or
mov
stos
testl
flds
adc
jmp
fcompl
loop
push
pusha
fcomi
or
xchg
fisttpll
jo
lret
push
dec
adc
int
flds
pusha
neg
jae
or
cltd
xor
push
xor
inc
xchg
lds
or
adc
mov
clc
ja
push
mov
insb
adcl
cmc
push
inc
shll
jge
shll
add
scas
and
stos
jecxz
rorl
shll
adc
xchg
gs
repz
loop
mov
fnsave
mov
pop
adc
push
test
lock
xor
pop
jmp
xchg
sbb
out
scas
lods
ds
testb
out
test
clc
push
scas
jl
and
inc
mov
daa
scas
in
subb
adc
cmc
loope
mov
cmp
xor
incl
xchg
sub
mov
and
dec
mov
jb
add
in
and
rclb
addb
rcll
cli
mov
adc
push
push
pop
xor
stos
add
loopne
and
push
je
mov
pop
adc
jecxz
jbe
pop
mov
fisttpl
std
in
inc
cmp
inc
cmp
adc
cwtl
stos
mov
xor
cmpsb
scas
sub
call
ljmp
inc
cmp
push
adc
and
mov
rcrl
pop
stos
fsubp
pushf
lret
icebp
data16
es
and
lret
cwtl
xor
sbb
idiv
xor
dec
or
fwait
rcl
jecxz
xor
addr16
mov
sbb
std
mov
adc
test
out
lahf
dec
dec
stc
fmuls
loope
lea
push
dec
pop
dec
cmp
loope
jnp
hlt
fisubrl
mov
pop
adc
in
xchg
add
pop
fwait
mov
dec
inc
xor
xchg
bound
hlt
mov
imul
ljmp
in
sbb
xchg
and
push
xor
out
call
xor
jb
xlat
or
push
xchg
pop
lret
add
xor
dec
xchg
xchg
xor
js
aaa
sbb
cmp
mov
xchg
addr16
ss
jle
dec
outsl
nop
jle
and
into
dec
iret
sub
push
shr
xor
outsb
inc
sbb
or
imul
pop
xor
neg
push
test
and
xchg
pop
imul
cmpb
jge
rcl
lahf
adc
xchg
adc
icebp
inc
sub
dec
add
into
adc
sub
mov
aad
sub
fsub
loope
mov
popl
lret
bound
daa
test
or
mov
rolb
mov
nop
pop
xchg
cli
cld
sub
dec
mov
push
aaa
mov
fdivrp
imul
adc
xor
sub
sahf
lods
sbb
xchg
in
mov
push
ljmp
cs
or
jg
pop
jle
in
push
iret
add
dec
add
xor
xor
cmpsl
push
mov
jg
ret
int
je
movsb
push
rorb
nop
outsb
dec
inc
enter
test
es
cld
dec
push
bound
jp
pop
xchg
aaa
shll
mov
leave
adc
inc
loop
and
les
or
xor
mov
mov
mov
jae
cli
ret
pop
push
test
jp
pop
int3
and
jno
mov
pushf
outsb
out
pop
je
les
scas
pop
inc
cmp
add
push
lods
hlt
lret
or
or
sbb
enter
mov
bound
mov
call
daa
sahf
loope
jecxz
pop
lds
fstps
jns
stos
jb
push
mov
cmp
cmpsl
xor
pop
lds
mov
in
fsubl
sbb
mov
xor
pusha
mov
in
pop
xlat
sbb
jns
inc
pop
sub
pushf
ss
cmpsl
cli
cltd
scas
in
xlat
cmp
loope
je
xchg
pop
loope
fnsave
mov
mov
push
test
mov
and
push
imul
pusha
ret
mov
dec
mov
enter
sub
or
inc
mov
xchg
cmc
sbb
pushf
lahf
and
adc
daa
rcll
fsts
mov
jle
nop
and
sub
pop
aaa
push
lcall
xchg
or
ret
test
mov
cmp
xchg
inc
dec
mov
push
inc
sbb
pop
in
inc
fisubrl
lods
mov
ret
in
cli
push
mov
rep
lods
dec
adc
vcomiss
and
jle
aaa
stos
jp
inc
push
xlat
mov
mov
inc
pop
test
adc
xor
mov
push
mov
xchg
lret
out
push
pop
shr
jns
sub
adc
into
repnz
pusha
xor
xor
adc
sub
sbb
sbb
fwait
call
xor
imul
repnz
add
fistps
push
adc
pop
cmp
lods
mov
or
in
imul
dec
pop
adc
pop
in
test
jo
xchg
hlt
jecxz
jp
xchg
jb
inc
test
push
popa
fistpl
pop
xchg
adcb
movnti
mov
adc
enter
mov
clc
cmc
cltd
or
js
cs
inc
pop
addr16
fwait
rorl
lret
flds
pop
xchg
cmp
xor
mov
out
hlt
xchg
scas
jecxz
out
mov
push
lahf
dec
sub
arpl
xchg
add
ret
xchg
inc
mov
sarb
pop
sub
cmp
inc
jg
jge
orb
pushf
fnclex
cmc
xchg
call
pusha
inc
adc
shlb
les
push
mov
std
xchg
pop
xchg
pop
ss
mov
jl
and
cmp
push
test
inc
popf
jno
std
adc
in
adc
shll
in
inc
aaa
dec
sub
insb
xchg
test
ds
xchg
sti
sub
fcomi
prefetch
mov
enter
cmp
aad
imul
or
sub
mov
mov
fwait
cmpsl
xlat
mov
int
divb
dec
xor
into
mov
sub
sub
je
movsb
es
push
sahf
imull
push
push
inc
sbb
test
mov
adc
pop
neg
jl
int3
outsl
dec
lea
dec
lock
xchg
outsl
aas
xchg
shll
cmpsb
fnstenv
cld
cmpsb
bound
mov
fcomip
xor
or
adcb
adc
xor
inc
jmp
je
stos
xchg
dec
dec
mov
ja
sbb
sar
addr16
lods
xor
scas
inc
repz
inc
test
imulb
jns
add
adc
icebp
stos
mov
aaa
xchg
push
sarl
sub
jge
pop
push
std
ja
and
loope
xor
lea
mov
inc
mov
popf
jno
sbb
shrb
jmp
fistpll
mov
xorl
lods
and
sub
cmp
loope
and
jg
cmp
push
mov
addr16
sub
out
cmp
lds
les
push
repz
mov
mov
jbe
outsl
fs
mov
dec
incl
aad
or
mov
ljmp
call
push
loopne
adc
sahf
rcl
mov
cmp
fs
das
aas
xor
movsl
mov
xchg
sub
mov
xor
cltd
fs
xchg
mov
incb
ret
mov
cmp
stc
cmc
pop
push
fiadds
mov
fucomip
push
loopne
imul
test
stos
leave
inc
cmpsl
and
stos
sub
sub
ffree
sbb
push
in
shl
push
and
aas
cwtl
repnz
mov
fwait
addr16
loopne
std
lds
rcrb
mov
push
pop
add
adc
mov
xor
fiaddl
jle
pop
xor
mov
dec
add
movsb
das
inc
cld
mov
or
lock
stos
mov
adc
mov
insl
add
adc
and
push
jl
arpl
lods
sbbl
push
jl
icebp
or
pushf
mov
xchg
aaa
icebp
ret
ret
lret
sti
inc
test
pushf
dec
aas
fdivl
out
stc
push
xchg
and
int3
adc
fidivl
mov
mov
ds
cmpsb
inc
int3
mov
inc
adc
mov
pop
jp
xor
jmp
xchg
jl
pop
xlat
xchg
sbb
push
inc
dec
mov
mov
push
xchg
addr16
rorb
jns
aam
fistps
addb
mov
dec
icebp
or
push
sub
jl
dec
rcrl
shrb
mov
push
loop
jecxz
hlt
or
xchg
pop
inc
and
cltd
push
fnclex
out
pop
jns
aad
in
fs
push
movsb
iret
in
dec
adc
bound
mov
dec
mov
imul
shlb
movsl
xor
pushf
cmp
jl
ja
mov
cmp
std
sub
adc
divl
dec
rcrl
pop
sbb
pusha
test
fbld
fucomp
scas
cli
jbe
scas
add
and
mov
dec
decb
leave
scas
data16
dec
insl
insl
movsl
jnp
test
ret
data16
inc
or
repnz
repz
or
mov
inc
out
les
rorl
dec
sub
or
mov
sbb
xor
movsl
cmpsb
movsl
sahf
pop
pusha
xchg
jmp
push
xchg
sbbb
sbb
in
pop
xor
jmp
sub
xorb
fmuls
jl
mov
js
lret
adc
add
jo
push
mov
shll
lret
mov
scas
insb
jns
xor
mov
inc
fwait
sbb
push
and
lea
arpl
ret
mov
mov
pushf
test
sarl
imul
jl
rcll
mov
lret
add
out
mov
cld
adc
fs
ja
hlt
cltd
stos
imul
scas
pop
push
and
push
sbb
call
stc
dec
pop
push
mov
cmc
push
or
jns
out
repnz
sub
arpl
dec
jl
frstor
and
push
xor
jne
pop
shrb
xor
sub
or
aad
hlt
inc
arpl
mov
rcrl
notl
pop
mov
stos
adc
xor
xacquire
lret
cmp
add
add
jns
push
jg
jl
push
inc
aam
sahf
fadds
repnz
push
lods
push
xor
movsl
sbb
sbb
push
push
sub
mov
ja
dec
sbb
xor
adc
in
sbbb
repz
or
movsl
mov
stos
std
pop
enter
mov
aaa
mov
ret
mov
mov
loop
xchg
cli
sub
fisubl
sub
bound
adc
push
pop
and
mov
loop
xchg
cli
sub
fisubl
sub
bound
adc
push
pop
and
mov
loop
xchg
cli
sub
fisubl
sub
bound
adc
push
pop
and
mov
loop
nop
cli
sub
fisubl
lret
mov
jge
repnz
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
leave
push
popf
es
ss
dec
lods
es
add
xchg
push
cmpsb
pop
mov
or
lock
idivb
es
ss
inc
lea
lods
jbe
xchg
pop
shlb
jge
and
sbb
push
imul
es
mov
push
aad
cmpsl
jbe
xchg
jle
or
stmxcsr
jnp
pop
cwtl
pop
dec
mov
pushf
push
mov
push
fs
lea
dec
mov
dec
aad
adc
mov
into
stos
push
rcrl
rclb
insl
push
addb
mov
sub
out
or
movsl
popf
test
mov
or
sbb
out
dec
cld
dec
pop
insb
faddl
cmp
cli
inc
int
fstl
mov
inc
cltd
inc
lods
cwtl
insl
push
xor
xchg
nop
jl
sbb
inc
stc
sbb
dec
adc
add
mov
ja
xchg
outsb
push
mov
aas
lea
aam
push
jle
mov
xor
and
sub
cltd
mov
pop
mov
xlat
pop
out
sahf
push
pop
inc
push
std
es
ss
inc
lea
lods
jbe
xchg
cmc
cmpsb
outsl
mov
xor
repz
testb
int
mov
adcl
add
aaa
cli
push
xchg
sub
mov
pop
mov
fwait
jbe
push
xchg
add
cmp
les
jecxz
xchg
sub
aas
repz
mov
dec
testb
jb
dec
xorl
popf
lods
jbe
xchg
pop
cmpsb
insl
mov
or
idivb
es
ss
inc
lea
lods
jbe
xchg
pop
cmpsb
insl
mov
or
idivb
popf
nop
adc
pushf
ljmp
out
add
daa
xor
in
dec
jmp
cmpsb
daa
jne
ficomps
cmp
sbb
xor
xor
pop
sub
enter
insb
pop
sbb
mov
sarl
xchg
sahf
xor
mov
pushf
sub
inc
lock
mulb
cld
ss
mov
xchg
push
fwait
add
cld
sbb
into
pop
lea
iret
out
mov
and
jb
sbb
and
pop
sub
lahf
ret
insb
pop
test
out
insb
mov
xor
sbb
fmull
pop
sbb
es
je
lret
push
mov
push
sub
adc
inc
movsb
fldl
inc
mov
addl
or
cmp
and
push
movsl
scas
jb
dec
push
sahf
ja
rorb
clc
jg
in
fisubs
iret
shl
and
mov
pop
lods
xor
jb
push
out
mov
and
scas
lahf
ficomps
ja
rep
cmp
insb
sbb
das
jp
inc
or
andl
or
out
cmp
sbb
aaa
int3
cmc
jge
addb
fstpl
sbb
lods
inc
mov
adc
sbb
inc
shll
and
jb
je
daa
int
into
jbe
mov
jnp
js
call
jmp
push
insl
pop
stos
xor
pop
aam
lods
cmp
ljmp
fnstcw
not
adc
dec
imul
xchg
cmp
inc
pop
sub
adc
xor
xor
pop
sub
cld
rolb
mov
in
jge
xchg
std
lret
xchg
push
sbb
shl
lret
scas
push
add
sbb
jb
iret
mov
push
and
jbe
stc
pop
sbb
jmp
mov
xor
dec
sbbl
push
jecxz
jge
ja
cli
xchg
xchg
sti
rorl
push
call
in
cmp
cmp
xchg
idivb
sub
loope
cmp
test
mov
scas
dec
jnp
inc
sbb
inc
addr16
scas
push
pop
loop
mov
pop
test
add
lea
mov
call
es
aas
cli
imul
divps
cmp
les
xchg
out
add
fwait
out
sarl
adc
jle
cmp
xor
into
addr16
mov
adc
mov
lahf
cli
int3
inc
mov
sub
xor
fsubr
int
rcl
xchg
add
ds
ljmp
pushf
sub
sbb
ret
ret
dec
shrl
arpl
add
pop
aam
jge
jne
dec
mov
xor
scas
int3
and
loop
fistps
pop
and
mov
insl
iret
cmp
enter
xor
nop
addr16
xor
mov
lret
mov
jecxz
rclb
lods
jnp
lds
cmp
jmp
fnsave
movsl
les
xchg
add
mov
push
rclb
cli
loopne
push
mov
or
cmp
scas
cmp
jae
add
inc
gs
in
xchg
cmp
xor
ds
rol
inc
repz
pop
ds
cmp
adc
jge
push
call
insl
mov
movsb
enter
ret
or
in
popf
xor
jb
jl
stos
sbb
loop
mov
les
rorb
dec
hlt
clc
mov
lret
ss
lds
in
lods
push
cmp
mov
mov
inc
outsl
jae
push
idivl
push
add
arpl
fiadds
cmpsb
lods
and
and
cwtl
data16
or
xchg
lea
mov
cli
mov
loop
outsl
loopne
sub
mov
mov
xchg
mov
frstpm(287
stos
imul
cmp
pop
call
cmp
lea
fbld
sub
sub
frstor
test
ljmp
jnp
popf
lret
sbb
in
cmp
sub
sub
rorl
in
in
xor
in
push
sbb
xchg
mov
fsts
rorl
sbbb
loop
sbb
pusha
pop
lahf
sarl
pop
mov
pop
hlt
adc
lahf
lock
faddl
decl
mov
adc
add
repz
add
inc
test
sub
shlb
je
pop
scas
les
inc
shlb
pop
mov
mov
dec
jmp
cmp
repnz
lcall
test
mov
inc
mov
int
and
fimull
sub
sub
in
jb
pop
test
imul
iret
loope
mov
cmp
pusha
scas
push
subb
push
pop
dec
push
fldenv
mov
in
and
sub
andl
and
dec
inc
cwtl
dec
stos
pop
add
mov
pop
movsb
popa
nop
call
inc
movsb
int3
xchg
mov
add
xor
test
inc
xchg
test
xchg
test
xor
rolb
in
aas
aam
adc
addr16
dec
xchg
inc
movsb
sub
pop
push
test
mov
pop
hlt
or
push
je
cmpsl
and
or
xchg
popa
inc
jbe
xchg
push
xor
or
and
mov
adc
inc
push
ljmp
jb
enter
jl
sub
lahf
pop
xor
decb
scas
jno
shl
inc
fdivr
fists
adc
cmp
in
pop
pusha
mov
add
mov
repnz
sub
push
scas
xlat
push
out
mov
int3
cmpsb
jle
aad
out
ret
add
in
cld
jg
test
in
push
enter
push
push
inc
and
shrb
xor
mov
push
xor
js
push
mov
xchg
shlb
scas
fcomps
cli
repz
push
sbb
sbb
dec
jmp
in
sub
je
push
push
xchg
movsl
pop
push
cltd
cwtl
push
mov
mov
xor
pushf
sbb
xchg
sub
std
ret
mov
inc
sbb
cmpsb
shrb
outsb
inc
push
sub
dec
mov
je
jnp
test
jmp
jns
jmp
in
dec
adc
ljmp
lea
mov
negb
jno
jbe
sub
stos
in
push
addr16
mov
pop
movsb
cmpsb
and
data16
adc
pop
xor
cs
sar
imul
dec
loopne
cli
xor
add
or
in
mov
insl
das
sbb
ss
fldcw
push
adc
mov
fstpt
jl
sbbl
add
das
lods
daa
mov
xlat
aad
push
xchg
notl
xchg
pusha
arpl
mov
pop
pop
loopne
stos
pop
mov
in
cmp
or
xchg
hlt
mul
jnp
and
dec
rolb
das
int
mov
insl
push
adc
adc
ret
rcl
outsl
nop
lahf
xor
pop
jle
in
fidivrs
push
bswap
xchg
iret
shll
out
ret
shlb
pop
sub
enter
push
pop
fildl
jle
movsl
roll
add
ss
cltd
enter
js
test
or
push
ljmp
adc
test
or
sbbl
notl
repz
sub
insl
cmp
pop
iret
fmuls
cltd
hlt
cmpsb
ljmp
mov
testb
dec
mov
push
dec
mov
xor
push
int3
cs
add
sub
test
cmpsl
pop
movsl
push
inc
ds
xlat
or
rcrl
jecxz
xchg
jb
ss
push
je
add
and
fwait
sarb
jmp
fcmovnbe
and
xor
jp
mov
clc
popf
in
jo
fnstsw
data16
pusha
cmpsb
daa
jle
addr16
lcall
push
scas
aam
ja
push
out
mov
rcrl
xlat
pop
push
frstor
push
stos
adc
stos
pop
or
xlat
fldt
cltd
adc
fbstp
int
mov
push
xchg
mov
dec
test
das
xlat
lret
mov
jo
jno
inc
ljmp
mov
nop
std
in
mov
shlb
nop
insb
mov
adc
push
in
popa
repz
jne
push
mov
subl
sbb
sbb
mov
testb
mov
xchg
dec
stos
jecxz
adc
fs
inc
jno
inc
sub
icebp
mov
mov
loopne
outsb
cmc
lods
jle
mov
jne
icebp
push
arpl
rorl
rcrl
popa
pop
fs
popa
popa
stos
jecxz
out
clc
xor
push
or
xchg
dec
inc
loopne
lea
xchg
in
cmc
adc
or
xchg
int
jbe
sbb
mov
mov
in
call
push
or
lods
xchg
xor
dec
inc
dec
xchg
push
and
aaa
mov
icebp
hlt
and
shrl
out
xor
adc
into
xlat
mov
enter
leave
push
fcoml
pushf
nop
inc
fists
sub
cmpsb
dec
call
inc
mov
ret
cli
and
ds
pop
mov
ss
in
adc
cmpsl
lret
adc
mov
push
jle,pn
or
adc
mov
mov
mov
mov
and
xchg
fisubl
jae
add
or
or
flds
add
add
push
loopne
pop
mov
push
xchg
movsl
sbb
lds
and
or
xchg
je
sub
jne
mov
or
sub
sbb
fisttpl
xor
outsb
jp
dec
xchg
mov
xor
add
push
inc
lret
jge
mov
mov
sub
pop
hlt
add
jnp
adc
ja
fwait
xor
imul
int3
pushf
adc
int
sub
and
xor
or
ljmp
inc
inc
adc
push
push
loop
push
imul
mov
mov
xchg
push
cmp
stos
mov
jo
out
mov
or
pushf
sbb
push
enter
scas
adc
fprem1
dec
sbb
push
stos
inc
pusha
inc
and
iret
sbb
out
jnp
xchg
es
and
xchg
adcl
xor
push
scas
or
je
std
in
test
or
inc
mov
pop
mov
inc
push
repnz
pop
scas
pop
mov
pop
lods
fists
sub
bound
shrb
jno
push
mov
rorb
cmp
incl
in
lret
addl
sbb
fdivrs
stos
xorl
xchg
inc
mov
dec
test
lret
xchg
out
ja
iret
fldl2t
lret
pop
cmpsl
ds
rolb
outsl
xor
jg
sub
inc
xor
pushf
jb
adc
sub
and
jmp
mov
cs
sbb
jg
jb
pop
shrl
xorl
pop
outsl
jmp
pop
hlt
xchg
test
das
in
int
aaa
or
js
nop
rcrb
xor
mov
scas
aaa
pop
mov
mov
sbb
mov
jno
inc
lods
mov
dec
and
pop
es
cmp
inc
lea
orl
lcall
cmp
xor
test
push
inc
sub
adc
jnp
jge
inc
and
fsubrp
dec
add
adc
cmp
push
test
mov
add
out
jns
out
test
ljmp
lods
add
imul
test
pop
rcrl
or
je
adcb
rorl
jno
outsb
mov
dec
pop
xor
shrb
add
push
pop
pop
cs
popa
pop
jl
push
sbb
leave
loopne
mov
xchg
out
pop
add
inc
adc
cmc
addr16
push
lcall
fnstenv
sahf
inc
pushf
sub
ret
inc
xchg
push
sbb
rclb
mov
xor
pushf
lret
inc
cmpsl
pop
adcb
mov
mov
das
cmp
xor
clc
iret
in
loopne
jne
jg
aaa
sub
cmp
enter
and
or
sbb
cmp
inc
dec
add
dec
mov
popa
js
out
xchg
lods
test
xor
int
sub
and
xlat
xor
push
push
sahf
bound
sbb
mov
repz
push
push
mov
adc
push
jnp
pop
adc
inc
dec
ficomps
inc
sti
out
out
mov
enter
inc
int3
pop
pop
mov
icebp
fcompl
xchg
inc
cmpsb
mov
in
cmp
in
daa
cs
or
jecxz
cmp
aad
cmp
stos
pop
shlb
out
cmp
outsb
pushf
das
clc
mov
mov
cmpsl
sbb
imul
and
pop
icebp
insb
push
cmp
xchg
xor
fadd
mov
jae
inc
xchg
dec
inc
stc
mov
pop
fadds
les
fcmovnbe
cmp
sub
cmpl
icebp
movsb
cmpsl
fs
pop
mov
inc
jle
cs
and
push
push
rorl
mov
pop
movsb
fistpll
in
pop
jnp
shll
cmp
dec
or
int
aad
lods
pop
dec
pop
stos
pop
fsub
sbb
xchg
or
inc
xchg
pop
cwtl
and
in
iret
vpsadbw
or
pushf
fmull
mov
lahf
inc
icebp
rcrb
icebp
clc
popf
int
adc
test
rcrl
push
ficoms
cmp
cli
fisubl
mov
std
pop
inc
pushf
or
insl
adc
inc
out
stc
xor
jns
sbb
and
notb
jecxz
push
xchg
or
xchg
lods
push
pop
test
popa
mov
sbb
out
movsl
xchg
es
mov
sub
add
movsl
loopne
sbb
stos
xor
lods
lret
push
decl
pushf
jge
pop
cmp
mov
out
sbbl
jns
mov
sub
stos
inc
lcall
into
fcomps
movsb
shrl
mov
sbb
leave
aam
int3
mov
pop
ret
lods
loopne
repz
push
insb
cmp
sub
fwait
lret
or
cmpsb
jb
stc
mov
loopne
mov
jecxz
jbe
mov
icebp
pop
push
sbb
or
xor
lock
pop
xchg
xchg
arpl
xor
xchg
mov
pop
fnstcw
adcb
sbb
daa
jne
mov
cmp
inc
incl
xlat
or
shll
xchg
jmp
loopne
inc
ficomps
dec
sub
push
fmuls
rolb
push
cmp
js
aad
dec
sub
cli
cmp
pop
add
and
sbb
push
ret
or
arpl
mulb
lahf
inc
outsl
sbb
aaa
inc
call
into
lret
and
xor
aaa
les
jo
lock
pop
mov
dec
pop
out
dec
xor
cld
dec
data16
test
stc
imul
out
sahf
add
cmovbe
jle
add
mov
cmpsl
add
mov
in
mov
js
mov
cmp
cwtl
inc
cmp
ret
mov
rclb
repnz
ret
std
inc
div
jmp
into
pop
jne
mov
mov
cmp
dec
dec
ret
dec
icebp
push
push
gs
adc
jnp
insb
sahf
xlat
andb
jo
jae
sbb
scas
fsubl
or
ds
pop
sbb
pop
add
arpl
data16
inc
inc
fimuls
lea
sbb
xor
xlat
loop
aaa
fwait
dec
push
push
jnp
pop
lock
jl
push
frstor
xchg
mov
movsl
push
insb
xchg
sub
outsl
push
out
addb
jo
es
sub
pop
scas
mov
or
js
xchg
nop
jg
push
arpl
or
ret
inc
inc
xchg
data16
lds
outsb
cmp
push
push
icebp
insl
cmpsl
mov
jbe
sahf
int3
ror
jne
fs
loopne
test
sub
dec
pop
and
je
xor
shlb
lock
adc
jns
mov
and
testb
cmp
add
ds
xchg
sub
in
lret
mov
in
pusha
scas
das
jo
outsb
fwait
fwait
add
call
push
sahf
test
jb
mov
inc
cmp
insb
sbb
popa
sub
enter
in
mov
cmp
push
dec
pop
push
sbb
mov
sub
loopne
mov
pusha
pop
adc
icebp
scas
stos
rcll
into
push
jno
sbb
rcrl
out
cs
shrl
sarl
jno
jnp
jo
leave
fxch
xchg
push
iret
test
push
adc
stos
pop
pop
push
movsb
sub
xchg
cltd
into
jmp
jb
lret
sbb
jo
gs
xor
xchg
mov
lahf
mov
inc
bound
lret
dec
loop
sti
xchg
xlat
les
mov
bound
je
mov
pusha
xor
adc
cmpsb
sub
sbb
push
cmp
or
das
mov
xchg
lods
sbb
inc
pop
nop
fldt
xor
hlt
jno
rcrl
ret
push
inc
daa
jp
mov
aaa
mov
sbb
movl
shll
fldt
sbb
pop
mov
push
fmull
jnp
iret
add
dec
nop
mov
xor
lods
lods
in
mov
and
jb
mov
sbb
punpckhdq
mov
andl
andb
sub
jg
xor
popf
xlat
enter
in
cmovs
orb
cmc
mov
inc
repz
ret
lea
jmp
jnp
lcall
data16
popf
jb
gs
adc
out
xor
jne
pop
test
scas
xchg
mov
push
adc
test
daa
or
sbb
jp
add
lret
pop
les
jne
mov
int3
sbb
sub
out
adc
adc
sarl
mov
cmp
stos
pusha
dec
add
test
es
xchg
and
rorb
or
lock
loope,pn
lret
jnp
loopne
pushf
imul
cs
clc
pushf
xchg
inc
cmpsb
push
pop
xor
xchg
loopne
adcb
mov
loope
dec
call
xchg
adc
mov
or
cmp
adc
push
ss
lret
stos
dec
xor
jg
in
inc
dec
bound
push
push
popa
mov
ret
sti
ljmp
ss
mov
int
rorb
scas
sbb
aad
lret
lret
in
xor
mov
cmc
sub
shrl
ds
xchg
lahf
cmp
and
adc
inc
adc
shr
cmp
cmp
dec
xchg
fnstcw
shlb
pop
lods
push
pusha
cwtl
mov
out
xchg
dec
pop
imul
push
imul
add
leave
pop
xchg
pop
rorl
movsb
dec
insl
adc
sarl
jo
mov
out
iret
mov
jnp
xor
stos
mov
xlat
and
sub
loope
mov
sbb
cmpsl
mov
xchg
clc
je
mov
push
xchg
mov
mov
sub
cmpsb
pop
gs
pop
addr16
fimuls
fimuls
mov
dec
stc
pop
dec
test
je
jmp
jb
jmp
and
ret
or
xorb
inc
outsl
xor
dec
into
shrl
enter
incl
repnz
lock
pop
lret
pop
sarl
push
cmc
divl
pop
pop
mov
dec
inc
or
sbb
mov
out
aam
arpl
inc
push
lret
les
and
sub
je
int3
cvttps2pi
pop
lods
sti
push
lds
pop
cmpsl
push
pop
je
test
cmpsl
stos
mov
mov
pop
add
and
ret
adc
daa
in
movsb
xchg
ret
push
and
adc
ret
negl
push
or
data16
lods
fs
decb
xor
mov
push
mov
fcmovnbe
mov
mov
mov
lahf
rcrl
push
imul
dec
push
je
mov
add
cmpsb
outsb
ljmp
push
push
mov
sti
push
cld
xor
into
cmpsl
xchg
jp
add
mov
cmpsl
sbb
pop
outsl
xchg
dec
push
sub
xchg
sbb
sub
loop
in
data16
sub
jne
inc
iret
js
xchg
mov
pop
sub
dec
ficompl
in
xchg
js
jns
push
cmp
pop
adc
add
mov
inc
test
mov
pop
fnsave
leave
jp
aam
sbb
sub
jne
roll
cltd
sub
leave
inc
dec
in
jnp
iret
outsb
jle
inc
aaa
and
push
shlb
push
sbb
adc
outsb
jae
imul
adc
mov
nop
inc
pushf
rorb
xor
out
push
fisttpll
jle
and
lods
pop
daa
xchg
lret
pop
loope
cmp
jne
and
fwait
add
rcl
jb
loop
dec
mov
inc
repz
or
and
or
jnp
mov
dec
inc
rorb
mov
mov
imul
dec
mov
xchg
arpl
jns
shl
pop
lea
fsts
mov
std
inc
lea
lods
jbe
xchg
pop
cmpsb
insl
mov
or
idivb
es
ss
inc
lea
lods
jbe
xchg
pop
cmpsb
insl
mov
or
idivb
es
ss
inc
lea
test
xchg
cmpsb
insl
mov
or
sbb
push
sub
cmp
or
mov
sub
xchg
mov
mov
pop
sbb
inc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
lahf
test
add
decl
bndstx
sub
cmp
dec
dec
pop
pop
imul
lahf
test
iret
fsts
out
stc
mov
nopl
sub
cmp
dec
and
imul
cltd
lahf
test
repz
jmp
sarb
jl
jo
dec
dec
sbb
sub
adc
clc
icebp
test
clc
mov
jb
rorl
and
jg,pt
mov
rolb
add
mov
inc
add
into
fldenv
adc
sub
push
dec
pop
pushf
aas
outsb
sub
jbe
repz
or
and
je
orb
mov
rcrb
scas
jns
mov
pop
mov
adc
add
lock
dec
enter
sbb
mov
ficompl
inc
cmp
jmp
lcall
adc
movsb
call
fstps
jle
xorb
inc
test
mov
dec
scas
jmp
ja
rclb
lods
dec
or
dec
cltd
outsl
test
iret
jmp
mov
fldcw
aas
cmp
arpl
imul
lahf
out
in
call
xchg
jl
pop
pop
jl
iret
and
sub
or
dec
in
fmulp
into
clc
lcall
mov
dec
push
dec
cmp
pop
cmp
add
adc
fstps
fmull
stc
decl
nopl
sub
cmp
dec
dec
pop
pop
imul
lahf
test
iret
jmp
nopl
sub
cmp
dec
dec
pop
pop
imul
dec
xor
xchg
sbb
cld
mov
iret
lret
dec
push
xchg
pusha
sub
enter
sub
or
inc
jbe
xchg
jp
insb
or
sbb
aaa
jnp
jge
mov
xchg
mov
add
pop
ja
mov
out
sti
jo
and
orl
inc
arpl
and
jg
shl
push
push
cmp
mov
push
mov
xor
scas
sub
inc
mov
out
pushf
mov
fimuls
mov
add
mov
cmp
out
loope
and
fucom
lret
test
js
arpl
sbb
lcall
ljmp
sbb
scas
xchg
inc
outsb
or
cmp
ret
imull
andb
icebp
ljmp
lahf
scas
mov
aam
push
insb
fcmovne
faddp
xor
mov
stos
dec
cmp
mov
cmpsb
jnp
jg
mov
pusha
lock
mov
pop
loop
xchg
jmp
inc
xor
test
xor
clc
jge
pop
sub
test
cld
lods
stos
in
dec
pop
pop
mov
outsl
fwait
jecxz
mov
mov
sti
jo
jmp
andl
push
jecxz
push
aas
xchg
jno
loopne
adc
cmc
sbb
in
dec
inc
xor
mov
addl
mov
outsb
mov
mov
cmp
or
adc
enter
aaa
fs
pop
leave
or
test
inc
xchg
jecxz
xchg
aas
dec
or
or
cs
ret
sti
stos
pop
jbe
sti
push
sbb
push
imul
loope
cwtl
dec
jge
test
lret
ljmp
call
mov
xchg
js
cwtl
outsl
pop
das
xchg
movsb
mov
dec
jmp
mov
mov
jb
incb
outsl
push
loopne
decb
imul
jbe
jo
sub
push
mov
popf
jp
fldenv
test
sub
mov
push
mov
ds
inc
mov
ret
xchg
es
addr16
mov
insl
jae
out
sub
inc
mov
jbe
imul
out
cmp
cmp
pmulhw
mov
movsb
sbb
add
data16
cmpsl
push
cwtl
cmpsl
mov
add
push
cltd
testb
ljmp
fisubrs
mov
cmp
shl
pop
pop
pop
add
js
adc
and
cld
push
dec
add
pop
rolb
out
pop
adc
gs
push
cmp
cltd
adc
dec
cld
xor
into
adc
xor
mov
and
push
jb
xchg
shrb
xchg
movsb
data16
roll
pop
push
call
inc
je
xchg
test
pop
push
jmp
push
sbb
inc
pop
imul
js
addr16
daa
inc
add
or
cld
insb
xchg
sub
adc
fwait
sub
cmpsb
cwtl
rorl
cmp
cli
hlt
xchg
or
push
jnp
lret
adc
sbb
push
xor
ret
xchg
dec
int
in
adcb
ret
std
int
daa
jno
es
xchg
in
popf
adc
sbb
test
pop
inc
xor
push
adc
mov
cs
ret
rcll
jl
adcl
pop
cmpsl
lock
mov
xchg
cmp
int
divl
push
sahf
mov
cld
dec
scas
daa
dec
jo
mulb
mov
icebp
outsb
add
mov
push
shl
push
mov
icebp
mov
cmc
decl
out
xchg
jb
jmp
int3
ret
aad
push
aam
test
sbb
icebp
lret
adc
and
sahf
lahf
or
in
add
fmul
lock
lret
sbb
push
add
push
inc
inc
jp
sbb
xchg
push
pop
outsl
and
pop
push
inc
mov
jp
icebp
imul
mov
repnz
adc
aaa
repz
adc
or
ja
mov
sub
fidivs
adc
in
icebp
sbb
into
adc
pop
or
movsl
repnz
sarb
lock
dec
pusha
dec
movsb
adc
fs
or
add
shll
loope
shl
std
dec
divb
mov
cmpsl
jbe
imul
pop
dec
iret
jmp
push
push
aad
add
or
pop
pop
push
jo
mov
add
or
add
adc
add
pop
jmp
or
add
js
lock
daa
es
cmc
cmp
xor
mov
roll
pop
test
fwait
clc
ret
push
in
pop
aas
mov
sbb
adc
inc
addr16
cmp
sbb
mov
push
iret
cmp
in
cmp
mov
mov
sahf
and
enter
imulb
test
imulb
mov
mov
inc
jne
subb
sub
insb
call
inc
repz
sbb
bound
rcl
shlb
and
inc
popl
mov
xchg
cwtl
add
out
or
push
push
dec
arpl
inc
testl
call
push
pop
sub
dec
and
or
aam
xor
aam
xchg
mov
incb
mov
dec
add
mov
inc
fsubl
inc
add
insb
cmc
les
call
push
add
nop
dec
in
divb
or
jae
and
fidivrs
push
test
push
xor
adc
in
mov
add
inc
pop
jno
mov
adc
push
ljmp
sub
dec
cltd
dec
jecxz
jb
insb
push
jae
lret
rcl
or
pusha
mov
repnz
mov
in
hlt
ret
sub
andl
adc
mov
cmp
lods
ficomps
rep
sbbl
and
sbb
jne
nop
mov
and
js
lret
add
mov
popa
stos
sbb
outsb
dec
fisubl
nop
cmp
movsb
sbb
fimull
jae
pushf
in
cmpsb
and
mov
scas
loopne
mov
rcl
jns
ret
mov
add
sub
sbb
insl
add
or
pop
hlt
adc
add
insl
dec
xor
fadds
adc
sbb
add
scas
shlb
ds
add
mov
sbb
in
subl
dec
cli
jg
les
or
in
cmp
test
and
aad
test
int3
xchg
movsl
rorl
sbb
sub
xchg
xchg
clc
mov
push
mov
stos
inc
insl
add
xchg
cmp
popa
out
xor
data16
test
stos
dec
mov
out
mov
jg
xchg
dec
adc
stos
inc
sbb
push
shl
or
std
scas
sbb
mov
sub
mov
mov
xchg
adcl
lock
dec
out
mov
aaa
and
out
inc
ss
adc
dec
inc
das
mov
mov
or
sbbl
mov
mov
cltd
dec
add
imul
xor
outsl
dec
inc
imul
jmp
movsl
orl
push
xor
rorb
jge
cmpsl
shrb
mov
roll
addr16
enter
roll
sbb
adcb
xchg
inc
fstpl
xor
and
pop
jno
mov
pop
aam
sbb
fs
sub
pop
fucomi
xchg
movsb
sub
std
je
push
pop
lods
jae
xlat
mov
fiaddl
sbb
inc
repnz
movsl
loopne
push
jmp
xlat
jo
jne
ljmp
in
cmp
xlat
pop
sbb
mov
mov
mov
addr16
push
lret
cmp
cmp
stos
xchg
aas
lahf
stc
ds
xor
pushf
jb
jp
mov
roll
sbb
cs
sbb
pop
scas
mov
std
and
push
mov
dec
addr16
jp
add
mov
jns
xchg
pop
insl
add
fmuls
jno
mov
in
out
imul
movsb
mov
ret
xor
xor
cmpsl
cs
mov
add
loope
add
dec
mov
jno
gs
mov
ss
fwait
mov
in
int
mov
cli
in
arpl
in
movsl
in
ficomps
jl
lcall
out
sub
adc
jbe
inc
nop
repnz
xor
sbb
aam
dec
xlat
repnz
sub
mov
ret
sbb
fdivr
xor
mov
lock
dec
or
push
insl
cs
in
sbb
loop
jmp
sub
arpl
mov
mov
pop
loope
add
pop
pop
push
sarb
ror
add
ljmp
lods
rcll
xchg
xchg
aas
cmc
jle
mov
add
sub
mov
rorb
loope
adc
sub
mov
xlat
dec
jae
lods
sbb
sbb
popl
xor
adc
subl
add
dec
int3
iret
jb
pop
cmpsl
pop
add
popf
push
mov
cmp
adc
jnp
pushf
enter
jmp
or
fidivs
add
fst
or
sbb
lds
cli
xor
iret
aas
mov
movsb
fistps
test
mov
mov
outsb
adc
lods
and
rcrl
or
mov
cmp
add
mov
mov
pop
mov
cmp
and
jnp
data16
aad
test
push
pop
cmc
pop
divb
loop
arpl
pop
jbe
mov
fucompp
and
fincstp
aad
test
leave
adc
pop
mov
dec
xchg
movb
add
adc
cmp
cmpsb
rcrb
push
jl
in
add
push
sbb
xchg
adc
cmc
sub
cltd
mov
ret
mov
cld
or
sti
dec
push
or
mov
jecxz
loop
roll
mov
test
and
inc
sbb
cmp
jnp
popf
insb
data16
push
xor
sub
sub
popa
sbbl
dec
iret
fcoms
xchg
pop
cmpsb
xchg
sub
jg
sbb
mov
cld
in
inc
movd
adc
jne,pn
mov
ss
lret
adc
add
mov
jb
cld
psubd
jbe
mov
and
or
pop
push
pushl
push
sbb
pop
cltd
lds
inc
mov
mov
loopne
pop
or
pop
shrl
sti
aaa
mov
mov
sub
cld
adc
dec
push
mov
cmp
pusha
mov
int3
sub
jg
inc
push
in
dec
xchg
test
in
outsl
sbb
int3
dec
dec
int3
mov
dec
ljmp
lret
mov
sub
fs
js
jmp
mov
les
icebp
push
dec
xor
xor
test
jmp
sbb
dec
mov
outsl
test
loopne
mov
shrl
leave
dec
inc
pop
iret
jmp
push
cmpsl
gs
pop
rol
mov
pop
nop
cli
inc
add
scas
orb
push
xchg
subl
ficoml
lds
dec
aaa
lods
push
in
mov
test
cmpsw
inc
jnp
ficompl
addr16
ret
xchg
fiaddl
fwait
daa
lret
mov
jns
sbb
fwait
push
cmp
inc
push
sahf
inc
subl
xor
int3
in
mov
in
xchg
xchg
and
or
xchg
test
mov
xor
dec
mov
std
adc
ljmp
es
leave
inc
push
mov
inc
rcrb
test
pmuludq
cli
test
movsb
call
and
dec
xchg
dec
mov
jecxz
imul
xchg
ss
subl
pusha
mov
add
sbb
enter
mov
insb
orb
mov
sub
in
fildll
cmp
mov
icebp
test
aaa
push
sbb
jl
xorb
xor
mov
test
xlat
pusha
repnz
sbb
inc
push
rcr
jno
repnz
mov
mov
or
in
push
loop
pop
test
pop
cwtl
sbb
or
sub
les
or
lret
aas
jge
dec
adc
movsb
movsb
mov
out
repnz
or
sahf
mov
jle
push
xchg
xor
and
jno
jnp
cltd
jb
jecxz
out
add
xchg
aaa
shl
loop
push
pop
lret
pop
fnstenv
aad
aaa
ret
iret
jge
iret
mov
mov
clc
in
mov
gs
xchg
or
pop
mov
ljmp
icebp
xor
iret
or
mov
xchg
je
mov
mov
and
cmc
int3
and
ret
into
ja
jno
cmc
fucomip
test
jb
test
mov
sub
in
xor
and
std
lret
xor
sbb
pop
sub
aas
dec
cmp
mov
pop
pop
sub
lock
call
pop
pop
jp
mov
xchg
aaa
mov
jecxz
dec
jmp
rolb
lahf
cmp
cmp
scas
ja
dec
cmp
mov
dec
sub
dec
pop
adc
lods
mov
icebp
and
in
sysexit
fs
in
sarl
jg
adc
xor
or
cli
mov
add
outsb
xchg
jo
out
lret
lea
push
enter
push
gs
fildll
sub
test
pop
das
scas
or
mov
addr16
push
shlb
mov
mov
cmp
ja
push
sti
mov
nop
push
icebp
inc
loope
pushf
xor
dec
idivb
ret
bound
int3
int3
test
cld
lods
cmc
and
xchg
mov
cmp
data16
aas
push
mov
test
push
cmpsl
mov
and
rcl
pop
mov
arpl
jne
sqrtps
fistpll
jg
nop
shlb
xlat
or
pop
lods
test
setns
mov
mov
mov
push
cli
jb
or
fs
shrb
xchg
insl
testb
mov
pop
nop
inc
xor
ss
jge
xor
push
push
and
lret
push
jmp
pop
jns
mull
scas
test
loop
jg
leave
mov
fsubrl
lcall
xchg
pop
xlat
cmp
dec
out
pop
xchg
scas
jb
xor
rcrl
aam
cwtl
sbb
sub
add
adc
cltd
mov
and
mov
jb
and
arpl
jge
push
and
mov
lcall
clc
fstps
ljmp
sahf
scas
out
cld
das
mov
xchg
sub
imul
insb
fmuls
loope
adc
sti
mov
cmp
fistps
aam
or
es
jg
add
into
push
or
pop
rorb
in
mov
adc
add
inc
mov
jae
xchg
mov
xchg
or
pop
loop
adcb
loop
xor
aad
mov
les
rcrb
cmp
push
xchg
adc
movsb
or
xor
cmpl
loopne
jb
ret
push
lcall
jle
sbb
mov
and
mov
insb
sub
adc
ficomps
xor
mov
test
test
inc
shlb
mov
adc
das
in
mov
lahf
lock
inc
lcall
imul
and
push
repz
orb
mov
xor
mov
sub
stos
mov
xor
inc
ds
sbb
mov
sub
pop
repz
jbe
cltd
jbe
sub
add
adc
push
stos
scas
jbe
jg
add
add
shl
mov
shll
or
test
dec
add
cmp
dec
add
adc
push
inc
push
mov
dec
dec
inc
and
sbb
or
and
loopne
popf
and
push
hlt
movsb
inc
add
add
lods
mov
add
bound
xlat
gs
ret
inc
sbb
xlat
xchg
leave
add
loop,pt
or
xchg
dec
push
cmp
xchg
push
inc
jnp
or
cli
sar
shlb
stos
inc
push
or
hlt
or
jl
int3
ja
mov
lods
mov
in
and
pop
lcall
inc
or
xor
inc
negb
jo
cmp
push
les
fidivs
imul
ret
xor
pop
xchg
lea
jae
sub
jmp
jbe
adc
pushf
pop
out
int3
shl
enter
add
adc
xor
gs
adc
call
xchg
pop
and
xor
mov
fcoms
iret
mov
xor
fists
out
adc
in
push
dec
mov
test
xchg
push
sub
add
ljmp
es
ss
mov
daa
or
push
call
filds
test
les
iret
push
int3
adc
cwtl
mov
push
push
cmpl
xlat
xchg
mov
insb
adc
int
sub
dec
es
add
xor
rol
xor
dec
push
lcall
mov
fistps
mov
and
in
xor
xchg
jge
cmc
sub
std
imul
sub
scas
sub
movsl
dec
std
xor
push
lock
and
into
adc
dec
xor
pop
push
shrl
fidivl
stos
rcrb
dec
jp
ret
jmp
fisubrs
pop
cmp
ljmp
mov
mov
fsubl
outsb
and
les
pop
ljmp
jle
inc
lret
sbb
cmp
hlt
mov
scas
cmp
pushf
xor
add
push
xor
xchg
shl
ja
es
mov
xchg
je
roll
xchg
stc
ss
orl
clc
out
dec
enter
and
enter
mov
cmp
lds
and
loopne
iret
dec
inc
cmpl
stc
xchg
cmp
push
pop
jne
jle
out
or
mov
mov
int3
mov
adc
test
adc
out
clc
jecxz
xor
pop
pop
or
sbb
movsl
sahf
bound
pop
jne
dec
sbb
and
stos
jae
fwait
movsb
adc
cmpsl
ret
fildl
pop
jle
xor
jge
sbb
movsb
pop
out
adc
inc
pop
add
ret
inc
mov
imul
sub
not
xchg
das
pop
push
adc
xor
movsl
in
in
sub
cmpsb
adc
addr16
add
mov
test
pop
in
pop
dec
xor
dec
mov
orb
xchg
or
aam
jge
xor
sub
lods
rorl
mov
das
pop
push
mov
rcrl
call
out
mov
push
loope
and
loopne
adc
popl
pushf
push
gs
aas
sub
cmp
addr16
fucomip
xor
bound
sbb
sub
outsl
mov
mull
jns
aaa
push
adc
add
sahf
mov
pop
sahf
mov
nop
loop
fwait
jle
lret
adc
pop
cmpb
hlt
mov
or
fimuls
xorb
cmp
dec
add
lods
push
sub
xchg
loopne
lea
les
fcomip
mov
fstpt
mov
rorl
subb
daa
sti
imul
ret
or
add
lea
pop
dec
shll
cmp
mov
sti
add
mov
push
psubusw
xchg
dec
xor
sar
jb
mov
inc
stos
sub
xchg
xor
inc
lcall
jg
pop
test
outsb
xchg
ds
roll
insl
aaa
repnz
mov
sti
xchg
sbb
shlb
inc
inc
std
cld
adc
add
mov
nop
fcomi
pop
leave
dec
repnz
lret
jbe
scas
insb
jecxz
movsb
ret
lea
sbb
mov
lock
xorl
sahf
scas
stos
push
dec
sti
loope
ret
mov
sahf
pop
push
int
ret
movsl
ficoml
les
adc
cmp
pop
adc
ret
jmp
cmp
ror
add
push
lcall
add
pusha
nop
mov
cmp
and
int3
mov
in
fsubl
fldenv
xorl
popf
sbb
mov
push
adc
fadd
popf
fsubl
xor
dec
sahf
stos
pop
pop
inc
mov
jae
ss
xchg
lahf
xchg
ret
mov
fucomip
out
stc
decl
nopl
sub
cmp
dec
dec
pop
pop
imul
lahf
test
iret
jmp
nopl
sub
cmp
dec
dec
pop
pop
imul
xlat
test
iret
fdivs
out
stc
decl
xlat
sbb
sub
cmp
dec
dec
pop
pop
push
cltd
lahf
test
iret
imul
mov
das
cmp
shll
jge
outsb
cmc
pop
lds
ds
pop
fstpt
and
fiadds
push
mov
add
outsb
cmc
xor
dec
aad
movsl
cs
test
xchg
gs
jne
inc
into
push
and
mov
int3
lds
mov
test
xchg
lcall
push
aad
fcoml
pusha
rclb
pop
mov
je,pn
xchg
and
and
fcoml
aam
sub
pop
scas
dec
xchg
mov
adc
inc
in
mov
xor
and
xor
div
outsl
ds
cmpb
lret
inc
into
xchg
scas
and
mov
mov
les
movsl
loope
push
vorps
pusha
pop
mov
scas
gs
sti
mov
js
or
shrl
ret
dec
xchg
jp
ret
fisubs
insl
je
mov
scas
jo
add
inc
andl
mov
loope
cmp
int
ljmp
rcrl
cmp
pop
lds
fisubl
test
cmp
jne
inc
push
mulb
mov
mov
sub
inc
hlt
push
push
in
or
cmp
dec
rorb
jo
movsb
or
push
rorb
ljmp
ficoms
mov
dec
rcrl
iret
jnp
mov
cmpl
leave
cs
test
xchg
gs
jne
inc
into
push
mov
add
outsb
cmc
pop
lds
movsl
cs
test
xchg
gs
jne
inc
into
push
mov
add
enter
mov
pusha
mov
xchg
jl
mov
push
in
and
dec
addr16
hlt
sub
xlat
xor
incl
dec
xor
arpl
cmp
popa
popf
dec
cmp
stos
bound
stc
in
mov
call
pop
cmpsb
sub
shlb
add
pop
mov
jp
pusha
ja
adc
and
xchg
mov
int3
cltd
call
mov
cwtl
mov
dec
stos
pop
jnp
divl
adc
and
data16
cld
repnz
cmp
jbe
push
jp
sbb
xchg
xchg
pop
fisttps
mov
ja
call
loopne
adc
cli
int
xor
push
sub
jbe
mov
push
or
sarl
xchg
mov
pop
test
cmc
cmp
mov
mov
dec
cltd
inc
mov
cmpsb
pop
inc
mov
inc
cmp
xchg
push
jp
pop
les
hlt
mov
int
pushf
push
and
js
jne
aam
cmp
cmp
mov
frstor
ss
and
and
sub
mov
aaa
aam
fistl
bound
jb
or
imul
sbb
add
cmpl
mov
push
push
pop
mov
lds
xlat
movsl
fmuls
fmull
mov
mov
mov
mov
aas
push
sub
rcrb
sbb
cld
or
mov
sahf
or
xor
dec
or
add
roll
dec
ret
sarb
mov
sub
aad
dec
lahf
jmp
loopne
push
fs
jmp
out
cmp
enter
inc
pop
icebp
push
das
xchg
sub
dec
dec
ljmp
mov
and
pop
jge
adc
add
je
adc
or
popa
outsb
push
inc
adc
sub
call
push
icebp
jne
inc
mov
rcl
daa
mov
mov
mov
inc
and
pop
adc
mov
or
stc
dec
mov
aas
les
xor
mul
neg
add
push
add
push
out
and
sbb
das
adc
lcall
es
mov
lods
lahf
test
mov
std
rclb
lock
fmuls
pop
pop
inc
xchg
out
adc
adc
sub
lods
pop
arpl
push
xor
mov
aad
xlat
inc
fidivs
stos
or
pusha
cltd
sub
push
sub
pop
jnp
sbb
pop
movsb
dec
pop
lret
aas
xchg
ss
dec
jl
dec
lcall
adc
push
sbb
mov
in
popa
pop
xchg
repnz
rep
nop
or
or
add
pop
xor
push
mov
add
cmc
test
and
sub
and
lea
gs
and
sbb
lret
and
cmpsb
pushf
xchg
scas
sbb
inc
add
inc
inc
mov
lds
adcb
pop
adc
cmpsl
or
lods
lret
hlt
ror
outsl
sbb
jl
xchg
call
addl
mov
mov
std
cmc
out
int
push
pushf
dec
or
aaa
iret
sub
repnz
pusha
shll
cmp
jo
jmp
xchg
dec
lods
shl
push
bound
int
sbb
scas
loope
pop
jnp
rcr
mov
sbb
jo
mov
movsl
push
mov
sub
mov
push
outsl
jbe
sub
pop
or
shufps
jne
jge
jmp
dec
pusha
mov
rdtsc
jnp
sub
ss
or
fimuls
pop
mov
mov
and
fs
andl
mov
dec
out
push
fistl
stos
xlat
sub
inc
das
xor
iret
test
and
sub
and
test
push
clc
cmpsb
in
js
call
imul
mov
dec
fmulp
stos
insl
dec
dec
mov
and
push
movb
push
mov
jo
jmp
div
lret
scas
lds
and
cwtl
jbe
das
enter
xor
mov
or
push
mov
jmp
setle
lods
mov
incl
sbb
xchg
lahf
shlb
lahf
fimuls
or
dec
lods
and
sbb
int
lods
push
lcall
push
inc
and
repnz
js
fwait
xchg
mov
mov
or
xor
inc
mov
sar
pushf
inc
adc
inc
add
pop
inc
aad
adc
test
xor
jbe
clc
jno
in
xor
xor
lods
pop
mov
mov
jle
jge
fucomp
push
and
in
repnz
sub
mov
stc
iret
cs
jl
sub
inc
out
test
movaps
jns
sub
in
sub
adc
sbb
jecxz
decl
std
shrb
pushw
push
test
pause
xchg
lods
inc
cmp
popa
cld
mov
mov
enter
fnstenv
mov
icebp
or
test
insl
loop
or
inc
jbe
jb
mov
lods
aam
std
mov
push
inc
test
psubd
clc
jae
dec
mov
jnp
lock
dec
out
pop
jg
mov
dec
add
ja
jg
push
add
gs
repz
or
mov
stc
mov
mov
adc
xchg
jne
sub
outsb
pop
shlb
divb
or
sub
stc
push
ret
loope
movsl
adc
mov
cld
jo
lods
mov
mov
cltd
pushf
sbb
mov
add
dec
or
mov
mov
pop
iret
jnp
dec
mov
adc
and
movb
xor
lcall
jne
cltd
push
bound
inc
fs
mov
and
loope
inc
int
or
pushf
mov
dec
subl
pop
jae
or
stos
jmp
add
ret
imul
pop
adc
pushf
adc
cld
les
lcall
inc
xchg
push
cmpsl
add
cmp
aas
lcall
stos
movsb
cmp
cmpsl
scas
jle
mov
ror
pop
mov
cltd
sbb
test
pop
ss
fcoms
notl
mov
or
clc
into
jbe
dec
repz
lret
les
xor
mov
sub
dec
shl
aad
sbb
cwtl
ret
test
xchg
cld
lock
sub
out
or
xor
jb
shlb
int
sbb
popf
mov
push
out
pusha
mov
movsl
xchg
pushl
pop
jge
pop
addr16
push
and
and
ret
lret
imul
add
mov
adc
pop
push
leave
fistl
add
ds
ret
mov
mov
mov
xchg
test
inc
mov
pop
loopne
in
add
dec
les
mov
sbb
jb
xlat
push
aas
enter
imul
insb
inc
sbb
ror
ds
inc
push
cwtl
andl
ret
or
adc
pop
sub
jae
inc
sti
push
pushf
lods
mov
fbld
sub
add
loop
mov
daa
es
fisttpl
lods
cmp
sbb
repnz
cmpb
lret
int3
jne
adc
sub
mov
pushf
push
mov
int3
inc
push
arpl
sbb
mov
mov
xor
sub
into
xchg
fisubrl
mov
adc
add
pop
mov
add
xchg
dec
xor
jbe
inc
bound
push
call
int
cmp
shll
mov
or
dec
and
test
andb
mov
fwait
cmp
dec
push
push
rcll
scas
popa
add
mov
pusha
dec
push
ja
mov
dec
lahf
push
sub
jge
cmp
jmp
xor
aad
sbb
repnz
ss
dec
loope
adc
sub
xchg
push
icebp
pop
mov
push
out
dec
pop
int3
fisttpl
mov
addb
and
lret
sbb
cmp
ds
iret
psubb
fisubrl
adc
cmp
add
icebp
out
cmc
xor
pusha
pushf
or
xchg
sub
push
lahf
dec
sub
js
xchg
cmpb
lahf
sub
repz
insb
mov
int3
sbb
inc
lds
mov
jl
dec
adc
jno
lods
mov
leave
push
mov
add
scas
push
xor
ret
pushf
dec
mov
mov
push
xchg
icebp
xchg
xchg
notb
mov
adc
mov
inc
mov
pop
or
push
sbb
addl
cmpsl
lcallw
inc
mov
mov
das
subb
subb
lods
or
inc
daa
jecxz
add
scas
jno
push
sbb
push
in
adc
and
xchg
dec
push
hlt
push
movsb
shll
orb
mov
jnp
shr
leave
push
sbb
xor
dec
pop
ljmp
cmp
pushf
dec
mov
lock
outsb
out
mov
clc
sub
push
sub
add
inc
jecxz
cmpsl
mov
es
xorl
cli
aaa
mov
mov
inc
data16
rclb
cmp
sbb
mov
loope
jne
push
mov
cmp
mov
or
jns
cmp
jge
lds
inc
outsb
in
jb
shlb
arpl
mov
out
movsb
rorb
scas
cmp
xchg
bound
int
in
popf
add
sarl
lcall
adc
inc
jne
pop
mov
xlat
nop
pop
push
push
or
shll
lcall
bound
push
fwait
dec
mov
jl
in
jmp
dec
mov
jmp
mov
sbb
xchg
fisubrs
xor
fdivrs
push
fsubr
in
inc
xchg
xlat
cli
rorl
mov
ja
fnstcw
rcrl
mov
adc
cmp
cmpsl
in
out
xchg
in
ss
mov
popf
sbb
inc
sbb
lret
and
fnstenv
xor
dec
xchg
pop
fstpt
stc
cmpsb
add
les
and
outsl
xchg
pop
stc
pop
or
pop
into
dec
mov
jbe
jo
cmp
or
mov
or
fiadds
pop
dec
pop
adc
mov
mov
mov
pop
pop
into
mov
ss
add
or
sbb
mov
popf
and
notl
sub
cld
imul
inc
cmpsb
int
cmp
aaa
push
mov
sarb
pop
adc
mov
outsl
and
popa
cltd
lahf
xchg
xchg
jne
mov
jmp
mov
xchg
inc
arpl
aas
mov
rol
rorl
sbb
cmp
int
mov
push
xor
cld
ja
dec
lcall
push
cmpsl
addr16
ljmp
mov
outsl
hlt
mov
fwait
add
dec
mov
scas
hlt
faddp
loopne
shll
and
push
lcall
cmp
xchg
jle
xchg
stc
mov
getsec
mov
dec
and
pop
jg
push
mov
add
aam
out
sbb
fs
mov
sub
jne
outsl
xchg
je
pop
mov
sbb
adcl
stos
mov
out
imul
pop
add
dec
mov
int
mov
movb
call
clc
inc
popl
cmp
ret
clc
jge
push
fadds
jecxz
fwait
ds
pusha
imul
mov
mov
fsub
mov
arpl
inc
shrb
sub
repz
mov
out
test
jne
ss
pop
cmp
jg
dec
dec
pop
add
sti
push
cmp
pop
jo
mov
sbb
xor
loop
sub
xchg
xor
stc
sbb
sti
add
aad
inc
ljmp
fstpl
in
dec
xchg
mov
dec
xor
dec
enter
push
push
lods
xor
das
and
clc
nop
sub
arpl
xor
add
scas
inc
dec
and
jnp
int3
sub
jne
insl
pushf
cmp
cld
sbb
lds
mov
aam
cmpsl
cmp
lret
cwtl
in
rcrb
dec
push
bound
repnz
ss
pop
shr
out
sub
sti
xchg
js
inc
sbbl
mov
mov
add
mov
pop
pop
aad
je
xchg
sbb
pop
sbb
cmpsb
dec
inc
mov
mov
sub
pop
insb
xchg
pop
pushf
leave
sbbb
cltd
xor
sbb
shr
jne
loopne
arpl
lods
mov
or
lret
lcall
cld
pop
sahf
cli
mov
cld
imulb
push
and
xorb
and
leave
dec
fwait
and
cltd
mov
mov
aas
insl
push
addl
pop
pop
jg
xchg
cmpsb
rcrb
clc
fcomp
xchg
push
pop
movl
dec
ja
in
dec
dec
or
push
pop
push
clc
loop
fst
nop
clc
cltd
xor
fidivl
pop
out
inc
fwait
mov
mov
pop
popf
and
pop
lea
popf
mov
cmp
mov
out
jp
sarl
jle
and
dec
and
pop
ficoms
lea
xor
ds
mov
mov
jo
xor
ds
cmp
icebp
cmp
push
lahf
cmpsl
loop
hlt
ffree
pop
cmp
lcall
cmpsb
into
fadd
sub
push
sbb
jno
sbb
out
mov
adc
add
push
cmp
lods
xchg
or
mov
outsb
movsb
hlt
fisubl
inc
pop
and
add
roll
add
pop
mov
push
aas
lahf
mov
cli
movsbl
shlb
push
dec
stc
fists
test
ss
jae
repz
push
ds
test
in
aaa
call
lret
btc
test
mov
aad
push
call
push
insb
add
cltd
lds
xchg
test
das
mov
jbe
cmp
fsubrl
mov
xchg
jae
imull
lds
push
xor
sbb
ror
sbb
leave
xor
sub
loopne
jmp
xchg
mov
adc
les
xchg
scas
and
dec
push
push
mov
push
sbb
ds
mov
xchg
int
xchg
xchg
xor
sbb
stos
xor
pop
add
std
lods
cmp
jo
jne
das
dec
pop
mov
inc
aas
add
sub
add
sarb
inc
and
test
mov
sbb
arpl
pop
mov
mov
iret
nop
ds
leave
fsubrl
shrb
push
scas
pop
dec
xchg
jmp
dec
sbb
add
int
add
mov
push
into
test
push
xor
js
js
pop
imul
stos
push
xlat
mov
fwait
mov
mov
lods
xor
in
jb
out
test
popa
inc
in
xchg
imul
lods
cmp
jle
adc
mov
dec
mov
jl
int
test
xor
vpshufhw
push
outsl
push
sub
adc
mov
iret
add
or
jno
mov
ffreep
push
mov
subl
lods
pop
push
mov
and
sub
pop
stc
je
xchg
repz
rcl
lods
push
xchg
sbb
dec
adc
pushf
add
sbbb
dec
aad
cmp
lea
xorl
repz
or
fcmovb
or
push
movsb
mov
inc
jg
aad
inc
rorb
aam
roll
sub
sbb
jns
push
add
lcall
sahf
stos
mov
movsl
fistps
push
fsubrs
test
icebp
xchg
stc
jbe
mov
icebp
ret
add
je
sub
popf
lret
fmulp
stos
loope
and
addl
xor
sub
sarb
sub
dec
mov
test
ret
jb
hlt
lea
xor
sub
pop
and
ror
mov
aad
push
lds
daa
loope
test
clc
jl
add
lods
lods
aaa
sti
fidivrl
and
out
adc
gs
cmp
bound
sbb
lds
add
xchg
dec
hlt
nop
dec
iret
into
mov
scas
stc
std
jo
dec
aad
mov
pop
es
scas
pop
jmp
dec
mov
jno
fdiv
pop
test
std
cmp
sbbb
paddw
daa
rorb
push
lods
iret
mov
cmp
mov
and
in
sbb
popf
fldenv
mov
flds
sub
push
add
jmp
mov
and
imul
inc
mov
pop
pop
arpl
mov
add
iret
mov
pop
inc
in
repnz
push
xchg
sub
ss
fisubrl
out
pop
xchg
sbb
jmp
lods
lret
filds
shll
xchg
pop
add
sti
and
mov
sub
movsl
ret
xlat
add
push
loop
dec
pushf
and
cmp
mov
lcall
cmpb
in
out
mov
jo
imul
sub
jo
rcl
mov
cmc
cmp
jle
mov
les
out
and
xlat
pop
pop
dec
cmpsb
pop
xchg
mov
mov
pop
sbb
imulb
shrb
mov
clts
fbstp
mov
cltd
push
dec
push
daa
dec
shrl
cli
sbb
xchg
jp
aas
addb
loope
fstps
cltd
mov
test
js
popa
cmpsl
scas
lret
gs
fimuls
popf
loop
movsb
rorb
hlt
sub
lret
scas
loope
mov
xor
cld
pop
lcall
xchg
or
test
pop
popa
lret
shrl
mov
bound
xchg
sub
jl
mov
mov
and
addl
jle
in
pushf
cmp
xchg
out
out
jle
jp
scas
test
add
xchg
cmp
stos
lahf
sbb
mov
add
ret
lcall
and
iret
adc
roll
fstl
mov
lea
xchg
lods
xchg
daa
insb
mov
xchg
divb
imul
arpl
fisttps
int
xlat
mov
cltd
push
push
adc
imul
cmp
es
lret
popf
or
pop
inc
test
mov
and
ds
test
mov
ret
int3
jp
pop
push
test
repz
mov
test
sbb
push
mov
xor
ljmp
sbb
mov
sbb
hlt
add
jne
sbb
or
sub
add
lock
sahf
into
cld
jmp
pop
gs
into
push
dec
push
popa
or
outsl
sbb
mov
adc
jmp
lahf
shlb
mov
mov
push
push
test
pop
mov
xor
mov
pop
adc
or
adc
notb
je
push
movsb
test
sahf
lret
in
stc
jmp
fwait
xor
and
sahf
out
adc
cmp
inc
stc
cltd
mov
inc
cmp
in
inc
fisttpl
movsl
sub
jp
mov
dec
fistl
adc
dec
xchg
jmp
pop
push
sub
cmp
push
xor
jo
shlb
adc
pusha
das
pop
push
aad
cmp
ljmp
outsl
or
xchg
inc
inc
ficompl
dec
push
jo
imul
cs
xchg
push
inc
mov
aad
cmpsb
repz
cmpsl
popf
test
add
fdivrl
outsl
int3
out
cmp
cmpsl
ret
or
leave
mov
les
mov
lds
jge
add
xchg
or
xor
loop
and
push
push
mov
les
xor
pop
clc
shl
das
es
jecxz
out
mov
fdivrl
repnz
xorl
stos
fadds
stos
mov
jae
dec
test
dec
pop
cmp
aad
orb
rorl
xchg
sbb
add
or
dec
jbe
test
loopne
dec
aad
repz
icebp
lret
out
movsb
push
mov
push
leave
add
mov
sarl
insl
push
ret
inc
sub
pop
adcl
orl
push
leave
into
or
jmp
jne
mov
stos
gs
jo
inc
leave
repz
pop
repnz
jbe
jp
xchg
xor
les
das
jmp
sbb
sbb
xchg
call
mov
rorl
xchg
test
das
mov
insb
xchg
jp
mov
and
cmp
add
fwait
mov
sub
push
cmp
pop
mulw
loope
mov
mov
jae
jmp
scas
sahf
sbbb
and
adc
jmp
push
insl
repnz
cmp
gs
cwtl
mov
sbb
dec
aad
movsl
cs
test
xchg
gs
jne
inc
into
push
mov
add
outsb
cmc
pop
lds
movsl
cs
test
xchg
gs
jne
inc
into
push
mov
add
pop
cmc
lds
scas
movsl
cs
test
xchg
gs
je
inc
into
push
mov
add
xor
add
outsb
sarl
movsl
ds
lcall
leave
lods
es
jno
or
mov
mov
add
adc
imul
mov
fwait
pop
jmp
jle
lret
push
cmp
imul
clc
dec
call
fistpl
sub
js
push
cmp
imul
clc
dec
call
mov
cmp
pop
fucomi
sub
dec
push
lods
call
pop
cltd
xor
jns
push
sub
jo
ret
jecxz
int
add
in
call
popf
sbb
testl
mov
jo
nop
mov
cld
leave
ja
out
stos
jae
popf
mov
push
pop
inc
outsb
dec
xlat
data16
mov
sti
xor
push
pop
mov
fsubrs
jnp
call
xlat
cmp
mov
xor
push
gs
ja
jmp
mov
outsb
clc
pop
call
in
push
sti
and
std
xor
push
pusha
mov
sub
testb
cs
dec
fwait
movsl
lcall
imul
mov
imul
clc
dec
call
mov
pop
jmp
sti
js
push
cmp
out
fwait
pop
lods
jnp
add
mov
add
adc
sub
cmp
or
imul
shll
inc
ljmp
sub
cmpsb
push
cltd
imul
clc
dec
call
mov
pop
jmp
sti
js
push
cmp
imul
clc
dec
call
mov
pop
jmp
sti
js
push
jb
mov
ret
mov
push
in
adc
pop
sbb
mov
out
cltd
xor
and
pop
dec
sub
hlt
mov
mov
jl
cmp
adc
rcr
jp
cmp
test
leave
mov
xchg
lock
jmp
jle
mov
mov
divb
mov
mov
mov
jg
gs
adc
mov
movsl
inc
mov
and
hlt
push
push
leave
add
hlt
pushf
adc
mov
imul
sbb
ljmp
clc
mov
and
mov
mov
movsb
pop
inc
xabort
dec
jo
icebp
pop
inc
pushf
shl
pop
std
xor
or
and
dec
lds
mov
lds
mov
pop
or
dec
or
lret
sbb
adc
fcompl
movsb
test
push
inc
fiaddl
ds
call
ret
xchg
lods
cltd
and
out
sarb
shll
mov
mov
mov
inc
aas
adc
ljmp
fcoml
int3
jo
dec
das
sahf
les
fs
shrb
adc
cs
js
rclb
xor
ror
repnz
add
xor
clc
adc
sbb
jb
pop
and
mull
dec
pusha
inc
ss
loope
push
pushf
iret
cmp
push
sub
jo
fcomps
xchg
xchg
or
mov
xchg
stc
xchg
dec
and
xor
repz
ss
ss
pusha
jl
pushf
icebp
into
or
das
sbb
jnp
enter
jmp
fs
mov
xchg
dec
test
jmp
pop
push
xchg
fimuls
cli
mov
jg
scas
in
imul
dec
loop
in
inc
flds
dec
and
xor
cltd
and
out
xor
jmp
movsb
pop
stos
or
ja
test
sbbb
inc
add
loopne
pop
mov
jmp
jl
dec
adc
push
shll
pop
adc
outsl
test
pop
jg
lea
xlat
dec
sub
nop
jns
popa
in
fcmovnb
lea
cmp
daa
sbb
call
in
cltd
jmp
insb
rcll
inc
sbb
shrl
test
stos
int
lahf
in
cmpsl
cmp
inc
jle
jne
and
cmc
lahf
insl
dec
outsl
mov
loop
or
add
dec
xchg
mov
sbb
loope
fsubrs
push
out
push
pop
push
je
clc
push
fwait
ret
jne
cmpsl
imul
mov
in
in
rclb
push
out
or
and
and
adc
dec
stos
loopne
enter
inc
ja
mov
les
stc
mov
sub
and
cmp
addb
js
scas
xor
inc
out
ja
jns
inc
cmpb
pop
dec
sarl
loope
lock
fisubl
test
sbb
shlb
negb
gs
andl
jnp
call
lock
jnp
xchg
test
and
inc
mov
shlb
addl
sbb
fidivrs
mov
data16
and
adc
cwtl
xor
dec
scas
push
or
jnp
jns
mov
outsl
mov
mov
jmp
jmp
sub
shlb
or
inc
mov
xor
xchg
inc
xlat
and
insl
fidivs
mov
movsl
pop
ljmp
jnp
xor
sbb
fldenv
mov
xchg
in
pop
js
movsl
inc
dec
pop
and
ficompl
cmp
cmp
mov
mov
aad
cmp
imul
out
in
xor
or
sub
fbld
sbb
and
sub
outsl
add
cmp
rol
jp
repnz
sub
sbb
cs
mov
cmp
stos
addr16
mov
sbb
dec
and
push
push
mov
in
inc
push
inc
push
mov
leave
xor
stos
xchg
mov
stc
je
mov
cwtl
mov
insb
test
insl
scas
test
adc
pop
sbb
jnp
cli
push
inc
sahf
xchg
xor
adc
xor
mov
sarb
and
lods
hlt
loope
mov
sub
mov
xchg
lret
rcrb
jmp
insb
stos
cmp
lret
mov
mov
mov
jns
and
jo
push
dec
mov
jge
jl
pop
mov
repnz
negb
or
add
scas
push
inc
shll
dec
outsb
add
add
mov
out
xchg
in
dec
clc
lret
push
lods
mov
jle
adc
or
into
shll
js
mov
jle
movsb
or
addr16
inc
sbb
int
mov
sbb
push
or
dec
fisttps
shl
add
lea
sub
mov
test
push
jl
mov
out
mov
lods
out
mov
pop
ret
mov
arpl
push
jo
sbb
inc
push
icebp
jecxz
push
pop
int3
fmull
push
in
or
fldcw
dec
and
aas
out
in
dec
xlat
nop
ret
rcll
mov
cmp
dec
jno
enter
inc
xchg
xor
mov
pusha
lcall
sbb
mov
inc
dec
xor
lds
xor
sub
insb
cld
addr16
testb
sbb
add
daa
jno
xor
popl
rclb
rcl
jmp
loope
mov
rolb
and
insb
push
fisubrs
xor
jae
cwtl
lahf
lock
cmp
and
adc
inc
nop
imul
mov
xchg
je
sbb
test
mov
mov
loope
pushl
mov
stos
lahf
cli
mov
xchg
inc
out
lcall
cmpsl
xor
je
out
xchg
or
sub
jbe
iret
xchg
adc
push
imul
imul
lahf
inc
push
mov
sbb
push
xor
js
pop
nop
int
cli
int
xchg
ret
fdiv
xor
ret
in
mov
cmpsl
push
clc
jne
cmp
test
out
dec
stc
adc
test
push
pop
xor
mov
in
mov
in
cmp
mov
add
push
cltd
push
push
or
xor
in
inc
pop
ret
sti
ror
mul
cmc
sub
and
jmp
imul
jo
movsb
sbb
mov
das
les
test
lock
jmp
imul
scas
adc
inc
ss
pusha
inc
mov
stc
sbb
mov
stos
mov
cmp
addl
cmp
pushf
inc
cmp
cli
mov
inc
and
mov
sbb
jne
icebp
adc
jmp
out
xlat
aaa
inc
push
push
sub
sarl
push
push
mov
incl
cmp
shl
pushf
sub
das
cmp
jns
xor
cmp
in
jae
mov
daa
inc
xlat
mov
ljmp
lds
push
jl
out
in
push
nop
push
xchg
pushf
and
in
sbb
popa
xchg
movsl
imul
out
lock
nop
pusha
movsb
faddl
jecxz
jmp
pushl
push
xchg
lret
sub
dec
popf
or
dec
sar
mov
add
cmp
fyl2xp1
es
cwtl
cmp
divl
xchg
sbb
sbb
push
and
add
mov
inc
insb
jecxz
and
mov
mov
mov
orl
cli
xchg
fisubs
inc
jae
scas
in
mov
inc
dec
ljmp
ss
jmp
pop
ret
je
mov
or
inc
sarl
jmp
and
jo
jmp
es
xchg
lods
dec
mov
and
cmpsb
leave
pop
push
js
mov
add
test
out
and
xor
dec
jo
inc
jg
je
jnp
and
negb
xchg
pop
fstps
mov
rcrb
out
pop
and
loopne
sbb
dec
xor
jge
out
xchg
mov
and
iret
add
lret
dec
or
jl
ljmp
sbb
out
inc
sbb
lods
cmp
or
xor
cs
scas
add
push
idivl
mov
add
fsubr
punpcklwd
jne
adc
xor
mov
sahf
xor
xor
adc
cmp
xchg
dec
movsl
out
fwait
icebp
jne
jb
xor
dec
imul
mov
sti
cs
ljmp
insb
xor
dec
les
xlat
or
int
jp
ds
imul
dec
in
xchg
xchg
cmp
insb
sarl
cli
pop
loope
loope
cmpsl
out
push
add
sbb
push
testl
cmpsb
cltd
inc
xlat
push
mov
js
sbb
xor
inc
stc
test
jns
push
cmp
jne
xor
sub
push
push
fmuls
cwtl
iret
fidivrs
mov
jg
inc
out
lods
sub
in
pop
test
xchg
mov
pop
jbe
ljmp
mov
daa
jmp
mov
cmp
in
jp
out
pop
adc
out
mov
loop
stos
jecxz
xchg
imul
inc
pop
lcall
dec
mov
push
jge
fidivl
jg
sbbl
imul
mov
jbe
leave
xchg
test
mov
jb
adc
insb
mov
mov
aas
hlt
es
loope
pop
dec
js
inc
xchg
negb
fildll
jle
pop
outsb
and
pop
outsb
mov
xor
push
movsl
inc
inc
ret
popa
dec
add
and
add
sahf
jns
into
in
mov
push
mov
sbb
sub
or
loop,pn
adc
lcall
repnz
pop
mov
and
in
mov
outsb
pop
or
add
test
daa
lock
xchg
stos
into
into
add
fs
jl
or
or
xchg
sbbl
sbb
nop
movsl
leave
cmp
push
movsb
int
lcall
add
in
in
divps
hlt
mov
lahf
push
shll
and
jle
dec
jae
push
push
cli
pop
jecxz
popa
mov
pop
cmpsl
jle
cmpsb
aam
nop
cmp
push
xchg
push
mov
cmp
lcall
push
iret
and
xchg
jb
test
push
jge
insl
pop
mov
inc
repnz
add
push
adc
pop
std
lods
aam
mov
arpl
fwait
cmp
movsl
dec
mov
out
test
movb
mov
mov
popf
mov
mov
jb
or
inc
andb
mov
mov
add
mov
divb
or
movsb
or
add
lock
cs
loope
sbb
sub
arpl
adc
subb
xchg
mov
and
jmp
cld
insb
xchg
repz
stos
test
dec
push
sub
push
pushw
pop
cltd
jbe
repz
cld
xor
cmpsl
out
ljmp
out
outsl
sub
loop
or
inc
inc
add
adc
cs
jns
xchg
outsl
cld
push
inc
pop
xor
outsl
leave
cwtl
jnp
mov
mov
mov
rorl
cmp
loop
repnz
mov
call
jecxz
sbb
loop
sub
int3
mov
ljmp
xchg
jne
movsb
mov
xlat
dec
pop
cld
and
add
or
sub
mov
cmp
or
cltd
dec
add
leave
xchg
adc
cmpsb
sbb
sbb
inc
mov
xor
movsl
pop
insl
or
mov
cmpsl
pop
jmp
lods
cmp
mov
jnp
gs
pop
add
xchg
bound
sarb
and
inc
mov
in
pop
dec
movsl
lds
mov
and
xlat
icebp
imul
and
fs
inc
and
out
leave
mov
mov
mov
fnstcw
shll
sbb
rorb
xchg
sarb
pusha
mov
mov
push
in
lods
cld
dec
and
stc
lcall
lds
dec
adc
enter
repz
loopne
cmp
ja
mov
in
mov
and
mov
lcall
hlt
popa
fsubrs
sbb
std
dec
push
mov
movsb
in
pop
data16
popf
fcoms
cmpsb
loop
ja
sbbl
icebp
sbb
xor
shlb
aaa
repnz
xchg
xchg
mov
jns
jl
in
addr16
add
scas
mov
rclb
jp
add
fldt
mov
cld
fs
pop
adc
or
mov
mov
mov
add
inc
and
xchg
mov
pop
mov
mov
mov
std
or
push
addr16
xor
mov
js
stc
dec
iret
add
add
push
push
or
movsb
or
xor
sub
rcrb
sbb
cmp
or
loopne
jae
lock
pop
js
je
jbe
std
add
shr
mov
fidivrs
inc
aas
pop
mov
lret
rcrl
sub
pop
xor
daa
movl
jp
imul
and
sub
sbb
mov
jmp
repnz
std
out
cmpsl
subb
divb
or
outsl
cmp
inc
in
ret
jmp
sbb
add
or
in
test
iret
ficompl
and
cmp
outsl
jmp
bound
movsb
arpl
mov
inc
movsl
cmp
lods
push
clc
movsb
sub
testb
sbb
cwtl
ja
rorl
incl
pop
push
ret
push
xchg
jle
mov
fsts
cmp
ss
adc
sub
shlb
imulb
mov
movsl
xor
xchg
test
lret
mov
pop
jecxz
aam
sub
sarl
aaa
std
cmp
cmp
cld
push
sub
fnstenv
xchg
push
xor
mov
pop
jecxz
pop
icebp
xchg
inc
push
adc
xchg
adc
sbb
nop
jp
push
ja
cmp
add
scas
addr16
movsl
xor
inc
ret
jnp
dec
cwtl
or
icebp
xor
rclb
fidivs
les
icebp
imul
mov
icebp
mov
mov
or
cmp
icebp
outsb
add
cmp
add
sti
es
jb
inc
sbb
jg
insb
jl
xchg
pop
aas
push
push
mov
pop
add
push
pop
ss
stc
xchg
test
jo
xlat
mov
jecxz
mov
int
sub
into
in
pusha
movsl
mov
fwait
jmp
mov
lods
stos
pop
mov
pop
scas
add
jmp
into
mov
mov
gs
test
out
jp
test
mov
gs
arpl
in
scas
in
adc
push
inc
mov
inc
sub
mov
loop
icebp
testb
or
stos
fcompl
cli
xchg
adc
jns
jns
mov
adc
cmp
ret
xor
pop
sub
push
test
cltd
dec
sbb
cmc
movsb
mov
pop
xor
test
sub
jns
xchg
mov
data16
lahf
push
add
dec
aam
out
popa
mov
sub
push
rcrl
dec
into
roll
inc
stos
push
aad
fidivl
aam
adc
test
aad
and
clc
out
pop
sbbb
cmp
out
or
pop
fidivrl
scas
cmpsb
adcb
data16
les
add
add
jo
aaa
dec
outsl
mov
sahf
movsl
mov
test
pusha
enter
or
idivl
mov
fildll
mov
leave
dec
jle
push
fs
push
jb
jp
scas
arpl
lret
push
mov
jg
popa
xchg
insb
cltd
loop
jmp
addb
dec
out
jmp
mov
leave
adc
aad
out
fidivrs
stos
mov
jl
adcl
push
int
rorl
es
leave
sub
sarl
incb
jno
add
inc
add
aaa
sub
or
lret
jne
cmpsl
add
cmp
or
sbb
insl
and
daa
int3
push
push
sbb
pop
and
lcall
je
cmc
pop
or
and
loopne
ja
xchg
inc
test
mov
pop
fwait
mov
cld
sub
xor
cmp
xorb
lods
not
insb
int
cmpb
lret
fwait
leave
loopne
jns
jbe
pop
mov
pop
gs
xlat
pop
movsl
mov
and
jns
in
pop
aas
and
pusha
xchg
jne
je
pop
pop
mov
ja
call
mov
add
sbb
lcall
pop
clc
idiv
or
cmp
xor
adc
mov
test
jae
insl
lret
arpl
cwtl
pop
cmp
push
sbb
or
stos
ljmp
lock
jne
ficoms
aas
adc
out
lahf
mov
xchg
test
add
sub
inc
outsl
outsl
enter
jns
ja
xchg
mov
and
jb
add
std
orl
ljmp
mov
cmp
ret
and
push
pop
inc
sub
cwtl
dec
jne
fcomi
rolb
sub
hlt
sbb
fldenv
push
cwtl
adc
cmp
insb
push
arpl
xlat
jecxz
sbb
jnp
lahf
jnp
or
pushf
outsb
xsavec
mov
addr16
pop
adc
mov
lock
mov
push
scas
or
into
out
shlb
ret
sub
out
test
adc
lcall
rcl
je
pop
addl
or
add
int
in
mov
pop
cmc
xchg
xor
jne
fcmovnbe
fwait
std
ds
cltd
jns
fwait
and
orl
and
add
daa
mov
dec
subb
scas
cmp
push
ss
jnp
ficoms
ljmp
mov
jmp
fsubrp
or
or
mov
fdivr
sahf
fsub
jle
sub
andb
cmp
mov
fbld
out
push
out
lea
sarl
leave
jecxz
lods
push
dec
mov
popf
push
pop
idivl
xor
fwait
or
sbb
fnstcw
test
dec
dec
add
cmpsb
add
xchg
and
in
stos
mov
mov
jnp
pop
sub
ja
adc
mov
sbb
inc
and
adc
aas
mov
cmp
call
adcl
pop
cmp
jns
lret
adc
scas
push
loope
pop
lcall
cs
insl
in
jle
jl
sub
lods
orb
fld
adc
movsl
test
imul
addr16
mov
addr16
shrb
pop
fidivrl
movsl
js
jg
add
fstl
inc
push
jecxz
lret
mov
imul
add
arpl
out
push
out
in
jno
daa
mov
lds
jge
sub
lock
xor
jge
pop
imul
enter
add
test
push
stos
mov
push
cmpsl
std
das
pop
mov
lcall
test
repz
push
lods
sub
push
into
aad
inc
pop
adc
xchg
fs
out
xor
scas
ljmp
mov
sub
mov
lock
lods
adc
sub
in
in
out
lds
cmp
xor
addr16
xor
shlb
mov
clc
pop
cld
fwait
in
loopne
add
rclb
jp
pop
xor
jle
dec
ss
test
out
enter
xchg
xor
aam
jl
fiadds
imul
mov
sbb
ret
or
pop
fs
leave
push
or
add
xchg
mov
out
xorb
cmp
dec
rcll
push
push
mov
dec
movsl
test
inc
jmp
mov
insl
cmpsb
and
cltd
pop
pop
scas
pusha
jmp
mov
sbb
mov
cli
out
out
loopne
sbb
xchg
mov
lcall
dec
mov
mov
mov
stc
xlat
scas
jmp
outsl
push
pop
daa
jae
adc
dec
dec
and
stos
sahf
adc
or
mov
aam
xlat
xor
out
xchg
mov
xor
mov
push
clc
jo
imul
sti
push
sbb
jg
cmpsb
push
rolb
xchg
xchg
mov
or
adc
mov
push
out
adc
and
es
jbe
lahf
lods
insl
and
lods
outsl
mov
mov
cmpsb
pop
in
sti
cmp
sub
movsb
push
inc
in
cmp
bound
and
dec
mov
mov
inc
bound
es
and
cmp
imul
clc
dec
call
mov
pop
jmp
sti
js
push
cmp
imul
clc
dec
call
mov
pop
jmp
sti
js
push
mov
fsubrs
sti
clc
dec
call
mov
pop
jmp
sti
js
imul
mov
imul
clc
dec
call
adc
arpl
add
xor
and
sbb
or
cmp
sub
pop
ljmp
cmpsl
insb
pop
and
mov
or
in
fstpl
sub
pop
lea
lods
or
dec
mov
insl
lods
fnstsw
sub
or
cmp
sub
pop
lea
lods
insb
pop
pushf
outsb
scas
adc
insl
ret
bound
adcb
std
outsl
orl
jg
imul
lods
out
push
dec
mov
xchg
sbb
sbb
push
adc
inc
hlt
push
out
mov
jae
inc
xchg
mov
push
mov
int3
cli
out
cwtl
jmp
adc
xorb
repz
pop
pushf
sbb
dec
and
pop
jno
and
xchg
int
xchg
sub
jp
pop
cwtl
dec
cmp
shlb
jae
jp
sub
int3
dec
sub
mov
in
and
sub
and
xlat
lea
mov
sbb
dec
repnz
sub
and
sbb
andb
adc
xor
lods
in
pushf
mov
push
dec
int
pushf
js
lods
adc
sbb
or
cmp
sub
pop
lea
lods
insb
pop
pushf
dec
mov
insl
lods
sbb
cld
sub
jne
jge
insl
popf
sbb
cmp
sbb
xchg
jge
adc
mov
imul
je
dec
popf
pop
enter
incl
stc
sbb
jg
insl
sbb
arpl
cltd
pop
mov
xchg
pop
adcl
lods
insb
pop
pushf
dec
mov
insl
lods
sbb
cld
sub
or
cmp
sub
pop
lea
lods
insb
pop
pushf
dec
mov
insl
lods
sbb
cld
sub
and
push
ret
test
pop
mov
mov
into
push
jnp
mov
es
loope
mov
dec
clc
push
cmp
mov
dec
sti
jbe
mov
je
in
sbb
loop
cmp
jne
mov
pop
int
dec
or
in
fldt
sub
push
dec
add
out
push
add
pop
dec
scas
mov
add
cmp
mov
out
or
mov
int3
stos
mov
fdivrl
jbe
xchg
movsb
or
fs
sbb
lret
ret
sub
sub
pusha
dec
aas
repz
fimuls
inc
imul
jb
fiaddl
and
and
loope
int3
inc
mov
clc
scas
out
and
ja
fisubrs
cs
xchg
adc
push
xchg
sbb
xor
cmp
rorb
rolb
loopne
or
es
jmp
scas
decl
out
inc
loopne,pn
in
int
enter
xchg
stc
movsb
and
inc
insb
dec
aad
mov
push
push
test
pop
sbb
insb
das
dec
pop
and
sub
mov
jecxz
dec
cmp
sbb
and
and
xor
xchg
icebp
test
les
dec
sub
and
fmuls
in
sti
xchg
push
mov
dec
xor
sub
jge
leave
xor
aad
out
cmovb
bound
or
pop
cs
adc
ja
mov
xchg
fsub
and
cmp
mov
je
imull
lcall
inc
adc
mov
push
push
pop
sbb
in
push
jg
insl
mov
xlat
dec
add
jecxz
add
mov
sub
rolb
sbb
dec
in
in
fcomip
pushf
pop
aaa
dec
xchg
and
push
aad
out
sarb
pop
out
mov
shll
test
movsb
movsb
or
push
fwait
jo
jl
mov
or
adc
sbbb
scas
stc
pop
mov
or
push
xor
fxch
and
jmp
pop
fwait
dec
push
xchg
pop
sub
test
xchg
loop
in
aas
fists
xchg
push
adc
mov
xor
sub
and
xchg
cmp
daa
enter
fstpt
pop
xchg
sysenter
leave
lret
pop
xchg
gs
xchg
xchg
pminsw
fisubl
imul
inc
stos
pop
mov
adc
iret
push
and
and
push
sub
arpl
mov
sbb
mov
lea
inc
adc
jl
hlt
nop
mov
ds
mov
cmp
fs
fnstcw
ja
adc
and
mov
lret
mov
stos
mov
push
imul
mov
lret
aaa
sbb
clc
jne
or
shrb
push
es
inc
jmp
arpl
pop
mov
ret
ficoms
pop
gs
scas
mov
repz
jmp
add
loope
ret
call
shlb
popa
gs
cld
jecxz
and
mov
pushf
lahf
jbe
cmp
jl
xchg
mov
xchg
mov
adc
rcll
lret
std
dec
cs
jp
mov
bswap
into
lret
jbe
loope
sahf
scas
xchg
stc
sub
jbe
xor
adc
push
mov
mov
add
pop
or
int3
ja
fcmovu
adc
aas
push
fistpl
sub
or
xchg
mov
mov
or
fbstp
mov
repnz
fistpll
dec
and
es
aam
stc
jne
adc
adc
and
pop
mov
fbstp
add
mov
scas
jmp
loopne
in
sbb
lcall
xchg
mov
test
dec
fbstp
sbb
or
mov
inc
icebp
neg
in
data16
xchg
sbb
addr16
mov
call
mov
ret
jb
pop
test
add
or
sbb
cld
pop
gs
sbb
fildl
xchg
arpl
data16
enter
ret
movsl
pusha
shlb
rcll
ret
mov
in
in
outsl
aad
js
fldenv
in
mov
aad
ret
adc
or
jno
sbb
dec
popa
icebp
jmp
sbb
call
and
stos
fiadds
mov
dec
cld
lcall
rclb
shll
sbb
xor
mov
push
adcb
and
pop
cmc
popa
mov
out
cmc
clc
mov
daa
xchg
ss
jae
and
jbe
adcl
cmp
adc
testb
hlt
out
inc
and
fsts
dec
int
outsl
inc
mov
lret
jl,pn
repnz
outsb
mov
pop
ss
or
das
aam
movsl
lret
notl
xchg
push
push
cmp
add
xchg
mov
gs
inc
mov
out
sarl
jne
mov
repnz
xchg
xchg
test
pop
or
dec
cltd
inc
mov
out
roll
lds
int
or
aas
setno
addr16
fmuls
jb
pop
sbb
jl
and
pop
push
mov
out
pop
loope
inc
pop
mov
push
loope
jbe
xchg
and
inc
cmp
shrb
mov
xchg
jge
sbb
mov
mov
xchg
add
fistl
test
adc
inc
iret
sbb
push
in
xor
cwtl
xchg
xchg
push
sbb
fldl
or
push
sub
or
fistpll
enter
or
xchg
cmpxchg
iret
loope
jle
mov
aam
fldt
xchg
and
in
fxch
ret
push
and
xchg
xor
ret
lret
jge
jge
mov
roll
ret
call
je
mov
push
cltd
aad
push
je
dec
mov
push
jo
stc
neg
sbbb
inc
sbb
inc
jg
adcl
in
jp
aad
in
mov
add
xlat
mov
je
xor
xchg
xor
out
in
adc
xor
mov
mov
sbb
jne
jp
sub
xchg
clc
jno
mov
pop
movsb
pop
jl
xchg
inc
inc
fcomps
call
repnz
and
mov
outsb
and
cmp
nop
sahf
lea
in
mov
xor
fdivrl
imulb
add
mov
jne
push
pop
and
or
sbb
pop
jecxz
mov
loopne
mov
cmpl
adc
mov
adc
lods
pop
cmp
cli
mov
push
jge
xchg
jae
push
jle
test
xchg
stc
leave
push
ret
add
call
popa
ret
dec
xor
jge
pop
out
cwtl
sbb
int3
out
test
sub
jno
mov
sub
jmp
shll
mov
jl
push
cmp
or
clc
pop
and
mov
repnz
loop
scas
loopne
sbb
add
bound
cld
scas
imul
xchg
cmc
mov
nop
or
mov
rorb
push
in
or
test
test
pop
sarl
mov
lcall
out
ret
jbe
or
fnsave
andl
stc
mov
add
sti
popf
or
jecxz,pn
stos
fisubrs
dec
test
push
lock
and
sbb
ljmp
pop
or
push
imul
jg
into
push
add
inc
dec
sti
push
loopne
iret
mov
fdivl
jns
arpl
lret
xchg
push
mov
xchg
outsb
pop
or
pop
je
aas
push
jl
fwait
sbb
test
mov
xchg
scas
mov
mov
rcl
jae
or
mov
je
out
mov
cld
mov
ret
inc
pop
mov
sub
mov
add
push
or
push
stos
clc
adc
js
stos
sub
mov
outsb
psubw
xchg
mov
add
repnz
dec
sbb
ds
sub
dec
imul
nop
and
dec
jo
call
enter
fsubs
scas
or
into
popf
sbb
shll
mov
stc
lds
pusha
jb
mov
jle
int3
pusha
sub
push
adc
pusha
fidivrl
in
cs
xchg
in
xor
scas
cmp
pop
and
repz
push
cmc
outsb
ds
scas
xchg
push
jle
out
test
cmpsl
jg
adc
mov
stc
imul
cmp
mov
push
push
popa
adc
xchg
fwait
xchg
js
fsub
xchg
xchg
xchg
mov
das
push
xor
in
aad
ds
mov
jp
or
mov
xchg
pop
pusha
sbb
loopne
test
or
xchg
adc
incl
mov
sbb
adc
jo
jl
sbb
xchg
adc
jecxz
jb
adc
jbe
fnclex
or
xchg
cmp
pop
mov
dec
into
hlt
shlb
leave
push
imul
cwtl
mov
inc
and
hlt
nop
adc
pop
rclb
shll
loop
loopne
loopne
push
mov
push
out
sub
sbb
sbb
inc
mov
sub
xchg
ds
fwait
es
addr16
out
pop
jae
cmp
adc
sbb
ret
addr16
out
cltd
in
ds
test
loop
testl
dec
sbb
testl
mov
sbb
lods
push
mov
sub
push
push
inc
xchg
les
jg
pop
adc
icebp
mov
cmp
sub
lock
add
xchg
lcall
mov
jg
cmp
xchg
outsb
mov
or
sub
icebp
jle
xchg
mov
inc
pop
jo
push
push
inc
xchg
lea
dec
cmpsl
in
mov
xor
jl
out
pop
xor
cwtl
xor
testb
stc
andb
cmp
inc
mov
das
std
sbb
stc
enter
loope
mov
mov
movsl
setle
jb
shl
cmp
mov
fwait
iret
outsl
jno
stc
cmp
scas
push
pop
ja
mov
in
aas
scas
sub
or
pop
movsl
sub
jmp
jecxz
jl
lahf
mov
push
inc
fistpl
test
fidivrs
push
pushl
xchg
neg
mov
lea
mov
das
pop
inc
and
rclb
xchg
cmp
adc
jb
sbb
cmp
and
mov
xor
insl
ret
push
jmp
mov
mov
repnz
in
pop
rolb
cmp
or
cmp
dec
adc
pop
xchg
icebp
adc
mov
or
and
pop
popf
pop
in
mov
repz
mov
mov
loope
mov
ss
xor
xlat
push
xchg
sub
xchg
je
lcall
xchg
or
les
ds
inc
sub
mov
inc
mov
cmp
inc
cmpsb
adc
lcall
push
daa
ret
cltd
mov
aam
xchg
data16
outsl
xchg
adc
pop
test
fcomp
lcall
mov
pushf
sub
xchg
dec
jnp
jo
leave
test
xor
pop
bound
push
xchg
sbb
insb
loope
call
in
mov
pop
sti
dec
ja
and
adc
je
jo
hlt
push
dec
fnstsw
dec
adc
fwait
push
bound
mov
mov
out
lds
mov
jbe
scas
movsb
int
push
mov
out
xor
xor
add
mov
mov
xor
fucomip
imul
mov
inc
mov
adc
cmc
stos
test
sarb
cmp
aaa
mov
test
or
dec
sbb
popf
outsb
xor
or
push
mov
and
mov
jo
mov
jle
nop
push
fs
sub
sub
mov
jbe
and
loop
sarl
jns
dec
fisubrs
stos
mov
cmp
dec
add
das
mov
adc
sbb
push
stos
add
sbb
push
gs
sbb
jb
push
pop
mov
sub
sti
into
ror
iret
push
stos
xchg
pop
pop
cmpsb
mov
jae
adcl
repz
add
jnp
jge
loop
sub
lea
pop
rcrl
int
mov
sub
fwait
sbb
adc
mov
stos
mov
push
std
test
xlat
aas
pop
ljmp
adc
jecxz
sbb
xchg
ret
movsl
inc
pusha
idiv
inc
or
cmp
or
movl
jne
sub
push
xor
stos
jo
in
mov
ret
pop
lahf
sub
cmp
call
cmp
push
sahf
aam
daa
stc
insb
or
fidivs
lahf
add
pop
pop
cmp
leave
in
sub
pusha
repnz
popf
dec
ret
pop
sub
inc
xchg
push
in
mov
ss
push
inc
decl
incb
rcrl
dec
dec
push
cmc
lock
adc
movsb
aam
xchg
call
out
jge
scas
fs
into
mov
xchg
imul
pusha
pop
sub
cmp
pop
add
mov
or
scas
xchg
and
pop
add
inc
mov
mov
ljmp
dec
mov
cltd
fsts
xchg
inc
mov
movsl
cmp
mov
sbb
xchg
je
sub
sub
mov
sbbb
dec
add
fistpl
sbb
mov
pop
jmp
sbb
cmp
sub
sub
sti
test
dec
mov
scas
pop
fwait
ja
mov
mov
shll
xor
fdivs
mov
scas
in
repnz
mov
sbb
sub
mov
push
fcomps
adc
mov
loopne
mov
xor
fs
and
mov
xor
push
frstor
mov
les
mov
cli
or
adc
mov
les
leave
cld
stc
lcall
pusha
xchg
movsb
push
adc
or
stos
sbb
sbb
adcb
sub
inc
mov
outsl
sub
fwait
adc
cmp
and
xchg
mov
sub
and
aad
out
lret
add
mov
pop
fbld
into
fidivrs
fs
inc
or
push
pop
and
aad
std
mov
xlat
leave
push
xorb
mov
imul
fsubp
mov
lock
movsb
ljmp
es
and
dec
cmp
jp
enter
cmpsl
mov
rolb
jge
ret
sub
and
or
add
xor
mov
fs
into
fstpl
cmp
cmovge
pop
fcom
sar
mov
lock
lds
rorb
dec
pop
jno
mov
or
push
pusha
lret
aad
inc
pop
xor
push
in
jno
sbbl
pop
rcll
sub
imul
xor
int3
xchg
inc
mov
ja
inc
cli
cmp
mov
sbb
jne
xchg
or
jl
or
rolb
cmp
mov
je
cmpsb
rcll
pop
inc
in
in
enter
in
fs
push
inc
inc
jns
aas
add
sub
jnp
lock
gs
fidivl
fsubs
mov
js
mov
icebp
stos
xor
mov
cs
out
jb
lea
jnp
or
jo
sub
xchg
or
sbb
imul
mov
incl
mov
mov
mov
mov
in
cmp
fisubrs
or
lret
sub
inc
xchg
sarl
jno
pop
ljmp
push
iret
mov
cli
in
add
mov
inc
je
mov
inc
xor
pop
mov
insb
ret
adc
and
repz
cmp
insb
or
scas
mov
xchg
sub
popf
add
xchg
gs
out
pop
es
nop
cmp
insb
mov
push
arpl
sti
mov
mov
mov
inc
daa
lret
sub
xchg
fcoml
call
aad
and
ret
subb
xor
push
out
dec
and
xlat
xor
cmp
add
mov
sbb
shlb
hlt
vmovdqa
sbb
lret
vminps
xchg
test
je
push
push
xor
pop
mov
or
ja
dec
aas
fiadds
or
cmpsb
test
imul
pop
xor
aam
adc
movsl
nop
inc
pushf
push
cli
arpl
scas
lds
imull
inc
stos
ret
adc
loopne
fdivl
xchg
dec
push
jo
inc
aas
push
push
lods
aam
push
mov
int
jp
mov
xlat
or
sbb
jno
xlat
cmp
adc
scas
cld
mov
icebp
pushf
into
mov
aaa
in
pusha
dec
sub
movsb
mov
imull
out
and
sahf
cmpb
or
jmp
loop
mov
and
jmp
cmp
es
in
je
cmc
inc
mov
xor
xchg
push
addr16
in
mov
lret
ds
mov
mov
or
fcmovb
popa
jle
mov
or
fcmovnu
push
data16
testl
ljmp
mov
loope
mov
cmp
jg
pop
dec
xchg
icebp
das
js
leave
iret
xchg
xor
mov
mov
mov
and
faddl
pop
pop
sbb
shll
sbb
pusha
iret
mov
inc
stos
adc
sti
xor
inc
cmp
jo
mov
ret
jae
iret
fstl
aas
loope
lea
mov
add
sti
push
lds
push
adc
inc
pop
jo
mov
shll
jo
test
ficoms
sbb
ss
arpl
xchg
lea
scas
pop
fmull
sbb
jle
ret
rolb
inc
jecxz
lods
stos
mov
lahf
into
sbb
cmpsb
jle
outsb
stos
xlat
cwtl
push
mov
in
or
icebp
bnd
bound
inc
cmp
std
es
mov
jecxz
in
xchg
pop
pop
add
pop
in
mov
hlt
out
push
sbb
or
jle
dec
fldcw
iret
jne
dec
std
push
jg
push
rclb
lds
ret
cmc
incb
dec
xor
les
fisubl
adcb
sbb
icebp
fucom
stos
das
xor
adc
mov
ja
mov
popf
mov
movsb
fwait
ret
pop
mov
popa
fisubrs
daa
inc
sbb
dec
mov
lods
pop
push
xor
push
fsub
sbb
mov
jns
sub
int3
jmp
in
dec
cmp
popa
movsb
inc
fisubrl
push
add
ja
jecxz
rcrb
jno
imul
jae
or
lods
popa
movsl
pop
addr16
ljmp
js
clc
cld
pop
inc
js
cmp
scas
and
inc
sub
std
jb
mov
pusha
scas
jo
cmpl
jnp
xchg
xor
leave
jl
mull
sahf
xor
mov
push
cs
stc
aas
cs
rcl
jns
cwtl
cld
push
and
lods
adc
mov
adcb
xchg
jp
jnp
arpl
lods
cmp
icebp
jns
data16
mov
arpl
cli
rcl
aam
mov
dec
mov
sbb
jecxz
clc
dec
loopne
mov
sbb
std
jbe
mov
sbb
jbe
ja
mov
sarb
clc
jns
add
fwait
mov
push
ljmp
xor
js
push
aas
cmp
mov
pop
std
mov
adc
and
cs
andb
inc
pop
mov
out
push
std
addb
movsb
add
mov
xchg
sub
adc
mov
inc
jp
push
mov
movb
lcall
lahf
out
stos
or
sbb
rcrb
ljmp
daa
shll
inc
add
divl
sbb
aad
icebp
test
bound
out
aam
push
sub
pusha
test
push
stos
popa
pop
sti
cmp
hlt
sbb
and
add
adc
fcom
and
icebp
jge,pt
mov
scas
imul
fistpl
jae
inc
push
sub
test
and
sarl
add
cmc
sub
movsb
xchg
cmpsl
les
push
jle
out
push
fistpll
dec
cwtl
xlat
mov
add
stos
les
add
add
jl
cmp
cmp
ja
xchg
dec
sub
sahf
clc
cmp
jbe
insb
ret
popa
dec
les
mov
das
mov
sti
cmpsl
mov
or
jo
mov
orb
dec
pop
loope
jmp
lahf
jo
sbb
test
mov
loope
out
push
repz
xor
fsub
mov
mov
mov
mov
sub
jns
or
cmp
sub
pop
lea
lods
insb
pop
pushf
dec
mov
insl
lods
sbb
cld
sub
or
cmp
sub
pop
lea
lods
insb
pop
pushf
dec
mov
insl
lods
sbb
cld
sub
or
cmp
sub
pop
lea
sub
mov
insl
lods
sbb
cld
sub
or
cmp
sub
pop
lea
lods
lods
pop
pushf
dec
xlat
mov
jge
dec
add
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
lret
sub
sub
dec
sbb
inc
int3
mov
test
leave
cmc
cltd
in
vpextrw
lds
xor
cmp
imul
movsl
int
jnp
leave
xchg
fdivs
adc
and
push
insb
inc
jge
dec
outsb
pop
mov
lahf
test
mov
mov
xor
push
mov
movsl
mov
jb
popa
cs
xchg
push
sarl
sub
sahf
or
sub
cmpsb
fwait
cltd
fbstp
dec
push
test
add
lret
pusha
dec
sti
popa
pop
and
jnp
popa
test
stc
sub
ss
in
sub
vpcmpgtw
and
insb
push
dec
movsl
orl
in
dec
cmpsb
mov
test
or
dec
in
push
cltd
cltd
jns
imul
mov
push
jmp
adc
rolb
mov
mov
cmpb
or
stc
aad
xor
cs
pop
jne
imul
mov
mov
bnd
push
jl
dec
adc
add
and
imul
sub
fcompl
ljmp
pushf
test
dec
sbb
cmp
xor
mov
cltd
in
loope
lods
xchg
mov
dec
je
jo
sbb
imul
movsl
test
cmc
fxam
jmp
xor
cmp
imul
movsl
test
cmc
fxam
jmp
xor
push
push
dec
jne
jmp
ljmp
clc
push
icebp
adcb
mov
xlat
jbe
cmpsb
xchg
push
mulb
aam
out
push
dec
out
push
lahf
push
xchg
pop
test
and
pop
mov
sbb
jbe
shl
or
sbb
xchg
in
mov
stos
add
data16
add
mov
into
out
mov
or
pop
lock
std
mov
dec
or
aas
icebp
adc
and
jns
and
pop
cmc
sub
add
mov
ljmp
xlat
jp
or
sbb
aas
mov
movsb
fiaddl
dec
mov
jno
lods
nop
pop
insl
xchg
pop
jns
dec
out
out
mov
dec
jge
dec
push
push
xchg
loop
test
inc
mov
icebp
sbb
sbb
aam
mov
xor
mov
mov
sbb
xor
cmp
jmp
sahf
outsl
or
mov
jns
xor
sub
movsb
pop
testb
inc
rolb
pop
pop
sti
cli
push
stos
sub
bound
push
daa
ret
shr
loopne
mov
in
push
adc
push
jb
adc
cmp
imul
add
js
push
xchg
iret
mov
sub
das
mov
bound
dec
mov
lea
cmp
xor
nop
xchg
in
xchg
in
cwtl
sbb
aas
mov
in
sbb
push
adc
mov
push
mov
scas
mov
and
xchg
call
out
dec
aad
dec
lret
dec
xor
xchg
or
push
push
push
push
into
fcoml
pop
arpl
cli
jno
mov
insl
push
stos
outsb
pop
icebp
adc
and
pusha
and
es
cmp
jae
and
push
xabort
cmpsl
call
push
sarl
cmp
adc
mov
pop
or
sbb
daa
jo
dec
ret
rorb
stos
lods
mov
call
lahf
jbe
incl
bound
mov
faddl
out
insb
mov
pop
mov
out
and
stc
or
jecxz
mov
xor
adc
mov
insb
pop
xor
lods
inc
add
dec
and
insb
dec
jo
mov
xchg
ret
dec
jae
dec
stos
je
dec
push
andb
mov
or
mov
jge
shl
rcll
rcrl
ret
sbb
jecxz
repnz
call
fs
xchg
fadd
imul
xor
cld
push
jo
mov
movl
rcr
roll
mov
divl
push
test
mov
cs
ret
push
pop
push
je
aam
jecxz
mulb
pop
sbb
add
pop
popf
ror
push
cmp
xchg
cltd
sub
bound
adc
inc
add
fidivrl
nop
pop
aaa
cld
iret
mov
and
sub
mov
push
ds
movb
iret
rcll
jmp
adc
int3
fldt
inc
popf
scas
or
aas
xor
inc
xchg
inc
or
jno
ret
jae
adc
and
pop
mov
fstps
mov
into
in
ljmp
push
push
ljmp
push
cwtl
and
sti
push
dec
hlt
mov
in
test
mov
aaa
and
and
insl
test
cmp
je
pop
int3
call
xchg
and
push
movsl
mulb
scas
call
cltd
mov
jns
mov
inc
push
adcb
fdivrp
sbb
int
hlt
imul
je
popa
dec
outsl
mov
cmp
fisubrs
shl
mov
cld
or
jge
xchg
ds
xor
js
movl
adc
stos
fdivrp
repnz
jg
pop
mov
and
mov
pop
xlat
mov
cmp
movsb
sti
mov
imul
fnstenv
mov
subl
ret
fiadds
or
jo
or
unpcklps
sbb
push
out
mov
daa
xor
jno
in
fists
push
lods
icebp
push
mov
mov
jmp
or
mov
mov
inc
test
mov
and
sbb
sti
aas
jg
jmp
inc
daa
int
cli
int3
adcl
cld
add
lret
pop
mov
cmpsl
jno
rolb
pop
cmpsl
jg
or
mov
inc
xor
sbb
sbb
jmp
test
pop
add
dec
outsb
scas
test
mov
jg
and
or
mov
arpl
movsb
jge
rclb
xchg
scas
scas
sbb
sbb
aaa
or
xor
jb
push
xchg
push
insb
fidivrl
and
lcall
push
stos
lea
ljmp
adc
gs
movsb
dec
pop
jmp
shlb
daa
jg
cs
jno
pop
xchg
ljmp
and
dec
jge
push
dec
hlt
dec
push
daa
dec
ds
xor
xchg
out
imul
aam
gs
mov
jo
add
leave
xor
mov
sub
shrb
xor
icebp
outsl
xchg
int
mov
adc
cltd
sti
cld
inc
cmp
into
push
leave
std
or
andl
xor
out
sbb
mov
pushf
push
adc
in
leave
enter
jg
or
adc
orl
and
es
xchg
nop
pop
daa
stos
push
sbb
fwait
jl
popf
jae
cmpsb
mov
cmc
shll
ljmp
sbb
push
jb
pushf
or
js
rcll
and
xchg
pop
pushf
repz
sahf
shr
imul
repnz
jp
lcall
mov
sti
push
movsl
cs
add
push
jb
aam
push
mov
cmp
cmp
pop
sub
lock
xor
loop
out
pop
rcrl
movsl
jecxz
outsb
aad
jmp
mov
mov
dec
push
push
fbstp
insb
clc
jbe
add
hlt
das
mov
ret
lahf
mov
jmp
negb
xchg
fisttpl
mov
mov
dec
sbb
inc
aam
inc
data16
lds
sub
add
fcompl
mov
sti
not
inc
lret
mov
int3
adc
cmp
test
mov
add
push
xlat
xchg
aaa
enter
add
lods
test
cmpsb
mov
imul
ret
roll
adc
jecxz
pop
cmpsl
fsubl
dec
mov
dec
xchg
les
push
mov
leave
out
pop
push
test
lahf
les
and
sub
sub
insl
imul
mov
mov
dec
xchg
sub
and
js
push
mov
leave
mov
xchg
sahf
insl
ss
mov
mov
scas
and
into
outsb
jle
popa
inc
lea
pop
xor
bound
add
int
in
pop
mov
adc
sbb
movsl
xchg
or
jecxz
push
stos
pop
idiv
adc
test
inc
ljmp
dec
pop
fsubrs
notb
cmp
rol
jle
dec
push
push
loop
aaa
nop
xorb
push
jnp
xchg
pop
and
bound
sbbb
mov
aaa
in
add
imul
push
pop
and
push
idivl
cwtl
aad
push
add
popa
div
lds
testb
jno
daa
mov
and
dec
lahf
mov
notb
jg
enter
flds
test
adc
mov
and
imul
and
inc
pop
adc
dec
pop
cmpsl
sbb
fwait
je
inc
das
out
fcomi
inc
mov
ljmp
call
and
dec
add
dec
xchg
loop
mov
imul
stos
xchg
rcr
clc
into
movsb
dec
inc
mov
mov
mov
inc
outsb
dec
rcrb
jno
repz
int
ja
mov
ljmp
dec
sbbl
cld
mov
push
fisttps
mov
pop
daa
add
out
jg
sbb
out
adc
nop
mov
mov
movsb
xorb
iret
pminub
sti
or
out
xor
shll
scas
sbb
popa
shlb
add
inc
lock
xor
sub
pop
sub
ret
addb
mov
pop
dec
sti
sbb
inc
pop
shll
or
jge
in
dec
xchg
jnp
and
mov
pop
sahf
push
stos
loop
fwait
scas
xchg
and
ja
pop
jp
mov
mov
adc
mov
repz
mov
or
lret
mov
in
cmp
mov
push
sbbb
adc
scas
pushf
dec
test
mov
lock
out
push
popa
mov
mov
xchg
leave
ret
jg
add
cmp
add
xor
pop
add
pop
sub
lea
cmc
xchg
pop
dec
stc
sbb
jnp
pop
cmp
push
cs
or
test
sub
sbb
outsb
aam
and
scas
js
mov
inc
bswap
in
sub
dec
and
adc
daa
cli
outsl
lcall
pop
rcll
bound
mov
addr16
stos
lret
or
scas
fnstenv
scas
sbb
push
pop
lods
lahf
ja
addr16
aam
mov
xchg
sbb
hlt
scas
mov
loope
pop
push
stos
or
bnd
adc
rorl
fs
insb
lea
pop
ljmp
lock
addb
jo
or
sbb
push
inc
out
xchg
xchg
arpl
ret
pop
pop
jge
sahf
test
stc
movsb
cmp
les
mov
dec
stos
adc
fldl
pop
fldenv
sbb
mov
test
xor
and
mov
xchg
sub
mov
jno
les
mov
in
sahf
lea
imul
lahf
mov
in
inc
test
repnz
mov
js
js
adcl
int
xchg
fisubrl
es
fadds
imul
popf
addr16
pop
outsb
std
fstl
add
mov
gs
movsb
pop
or
pop
lods
and
repz
aam
fisttps
lods
mov
xchg
loopne
ja
jb
push
and
cmp
faddl
cmp
xor
jle
mov
xchg
cmp
stos
add
lock
xchg
jp
jb
xchg
fwait
test
xchg
rorb
mov
repz
jbe
cmp
rcll
scas
leave
lret
push
sub
lret
mov
push
xor
mov
sub
xchg
xor
fucom
push
in
in
call
adc
loope
jmp
stc
cmp
inc
insb
mov
dec
loop
pop
inc
or
xor
xor
aas
or
fimuls
dec
in
movsb
dec
stc
or
and
dec
out
daa
test
push
jns
mov
out
cmp
daa
clc
cwtl
mov
sbb
sbb
adc
push
or
fildll
xlat
scas
add
das
inc
jae
vmovapd
mov
sub
push
push
repnz
mov
insl
xchg
js
out
fs
cmp
loope
inc
or
pop
hlt
loop
inc
or
aas
inc
and
mov
cli
dec
cmpsb
sbb
je,pt
jge
push
pop
ljmp
addr16
std
adc
imul
jb
iret
pop
jo
or
xor
mov
shll
fisubl
ja
push
pusha
test
mov
mov
push
cs
dec
out
jb
pop
ret
pop
es
inc
cmc
movsl
dec
pop
into
sub
mov
mov
and
adc
test
mov
addr16
mov
mov
jno
inc
bound
ror
stc
sbb
mov
adc
mov
addr16
aaa
mov
aad
cmpsl
pop
adc
add
dec
inc
xor
inc
mov
cmpsl
pop
outsb
popf
test
pop
jp
ret
xchg
cmpl
adc
fnstcw
mov
xlat
push
ljmp
pop
add
add
mov
vpmulhuw
dec
cmp
mov
pushf
sbb
push
lret
pop
dec
ficompl
jne
daa
adcl
ljmp
lea
mov
ret
jno
fmull
loopne,pt
mov
cmp
dec
or
xchg
push
mov
cmp
daa
adc
mov
jno
jns
sub
lock
mov
out
pushw
mov
movsl
js
jmp
xchg
out
mov
push
ss
lcall
into
sub
push
testb
outsb
adc
pop
and
fstpl
and
mov
jb
hlt
enter
test
adc
pushl
sub
jmp
in
fisttpl
mov
gs
jp
mov
inc
cltd
sarb
cmc
fadds
insb
movsb
hlt
test
es
stos
pop
cmp
pushf
jo
mov
ret
shrb
pop
dec
mov
mov
cld
push
test
pop
or
jg
clc
shl
loop
cwtl
sbb
jo
insb
mov
and
ret
insl
mov
inc
sub
add
scas
cmp
adc
sbb
mov
fiaddl
xor
pop
pushf
out
pop
pop
add
push
sbb
cld
mov
popl
dec
fsubrl
inc
sub
xor
out
xlat
push
mov
enter
fwait
les
test
mov
pop
jb
stc
int3
mov
clc
pop
gs
hlt
sub
ss
out
mov
pop
idiv
pushf
ret
or
push
inc
test
fs
test
sub
push
sub
and
adc
sbb
jae
mov
push
xor
xchg
cmpsl
inc
imul
bound
test
popa
cld
add
push
mov
loope
and
cmp
inc
in
cli
inc
mov
in
inc
je
jb
jns
mov
nop
cwtl
rol
loope
stos
jg
out
pushf
xlat
clc
loop
mov
loopne
in
pop
pusha
mov
sub
aas
and
push
enter
mov
outsb
je
xchg
or
jmp
ficompl
push
jae
adc
or
aam
mov
pop
xor
loop
call
pushf
sub
add
mov
inc
inc
adc
adc
push
add
fisubl
fdivrs
std
cmpsb
test
dec
inc
daa
popf
adc
dec
lcall
dec
add
mov
mov
mov
or
xchg
in
inc
jno
sbb
cld
dec
dec
sub
jle
xlat
xchg
cs
fisubrl
or
fs
call
adc
xor
xchg
pushf
push
push
cmp
dec
fdivrl
jp
pop
mov
insl
push
fists
aaa
roll
cmp
add
into
cmp
xchg
insl
push
cmp
xchg
les
cmpsb
mov
xor
pushf
xchg
in
push
xor
insl
pusha
push
mov
add
roll
ss
push
cmp
cld
jle
sbb
jp
mov
xor
ss
sub
pop
mov
pop
push
loop
mov
arpl
mov
pop
repz
xor
das
jl
cmp
popf
cwtl
pop
pop
xor
pop
mov
xlat
push
popf
cmpsl
ret
cmp
out
add
fs
pushf
push
out
or
icebp
mov
adc
lea
push
xor
cs
scas
sub
pop
xchg
mov
stos
cmp
adc
adc
adc
orb
cmp
dec
loope
js
fst
iret
into
mov
js
sub
cmpsl
and
fwait
outsb
in
push
mov
cli
test
mov
push
jecxz
cli
adc
jno
lea
xor
fldl
rorl
gs
and
mov
add
negl
cs
push
std
int
cmp
data16
notb
jne
pusha
inc
pusha
mov
cmc
shl
xchg
push
inc
push
mov
cli
or
loop
in
cmpsl
and
inc
filds
out
mov
sarl
cmp
dec
aad
fisttps
push
jl
in
pusha
inc
loop
pop
icebp
sbb
push
fistpl
movsb
push
fistl
arpl
fcoml
rcr
jle
shlb
pop
das
push
sti
jmp
push
mov
dec
addr16
push
cwtl
arpl
fildll
mov
bound
ficompl
subl
and
adcl
popa
in
cmp
mov
jo
jo
les
jl
mov
divb
or
adc
movsb
push
or
cmp
add
jmp
movsl
cmp
jmp
sbb
sbb
jae
and
std
sbb
add
mov
lods
outsb
aam
adc
sarb
inc
mov
jmp
cmp
fs
jmp
push
push
pop
mov
js
imul
mov
adc
mov
and
mov
flds
adc
lcall
pop
dec
xchg
sub
decb
mov
inc
std
mov
pop
xchg
lods
lcall
cmpb
lret
in
mov
popl
adc
std
lahf
pusha
sub
popa
cmp
fwait
shlb
mov
icebp
push
stc
cmp
jo
inc
js
adc
mov
mov
push
inc
dec
inc
xor
lods
mov
das
and
jg
cmc
cmp
jae
pop
ss
mov
xchg
push
dec
or
pusha
insb
sbb
mov
aad
push
or
adc
mov
ss
add
dec
lcall
push
lahf
push
popf
pop
dec
jecxz
xchg
cli
orb
add
in
push
pop
jg
in
mov
jg
push
int
int
dec
mulb
daa
push
xchg
pop
iret
sub
icebp
cmpb
pop
push
adc
dec
pop
xchg
pcmpgtb
lret
ret
gs
pushf
pop
xor
cmp
dec
sbb
mov
inc
mov
sbb
shll
xchg
movsb
ret
mov
ret
bound
in
dec
out
lcall
aad
mov
rcrl
repz
sti
pop
lods
movsl
sbb
fldlg2
shlb
jns
idivl
mov
sub
xor
mov
cmp
pop
dec
push
cmp
sbb
dec
stos
sub
inc
cld
push
out
inc
aaa
cmp
cs
inc
dec
mov
jge
incb
mov
xor
bound
pop
mov
in
bound
int3
gs
jge
test
mov
sub
loop
add
xchg
movsl
and
lods
push
mov
mov
lcall
mov
adc
in
jae
jmp
push
icebp
jmp
lock
lods
pop
dec
in
scas
ljmp
cwtl
dec
fwait
scas
lock
adc
dec
adc
pop
stos
add
add
mov
xchg
popa
out
dec
popf
inc
movl
jne
popf
cmp
dec
lods
pop
mov
shll
or
pop
nop
mov
shll
outsb
aas
pop
mov
xor
xlat
nop
and
xor
dec
push
loope
add
push
stos
sub
hlt
addr16
mov
dec
aad
outsl
dec
xor
xor
and
inc
test
call
test
pop
movsb
cmpb
dec
xchg
mov
xchg
movsl
cmp
adc
hlt
lcall
mov
lock
stos
scas
add
imul
rol
xchg
sti
mov
push
rcrl
dec
push
loop
pop
and
icebp
mov
push
into
inc
std
pop
xchg
push
and
rcll
subb
je
stos
aas
xchg
dec
push
mov
shrb
stc
adc
xor
or
xor
aas
add
int
and
xchg
mov
or
jg
pop
les
dec
sti
mov
push
mov
inc
inc
je
test
push
dec
gs
lods
sarb
ja
cwtl
lgs
leave
shrl
xchg
xor
xchg
pop
popl
push
adc
inc
xor
xchg
pop
lock
mov
xchg
push
xor
pop
mov
adc
das
iret
inc
sbb
xchg
inc
into
dec
aaa
lds
daa
add
pop
and
cmpsb
push
pop
fs
js
or
cmp
inc
adc
mov
jg
add
cmpsl
loopne
stos
pop
cmpsb
leave
and
dec
ss
lods
fincstp
adc
sub
dec
ds
or
push
les
dec
ss
cs
add
int
or
addr16
fwait
push
sbb
bound
dec
jne
imul
movsl
test
cmc
fxam
jmp
xor
cmp
imul
movsl
test
cmc
fxam
jmp
xor
cmp
imul
movsl
lods
xchg
mov
in
aam
lds
adc
pop
gs
mov
lsl
push
sbb
sub
cmp
inc
cmp
popa
push
test
add
leave
in
sarb
leave
push
stc
mov
mov
cmp
popa
pop
adc
jns
imul
icebp
test
cmp
jmp
pop
mov
or
sbb
xchg
cmp
mov
xchg
stc
ficoms
into
pop
sbb
pop
push
rcr
or
jge
push
stos
or
loop
imul
add
xor
popa
mov
push
into
in
ficomps
mov
pop
fistpll
fs
dec
int
sub
inc
test
sub
shll
inc
fwait
push
push
es
cmp
mov
in
mov
pop
adc
movsb
mov
fidivrl
test
lods
lret
add
dec
push
mov
aam
mov
cmpsb
ror
je
cmp
dec
pop
sub
stos
pop
sub
pushf
and
scas
or
aam
mov
cld
xor
stos
mov
mov
stc
cmpsl
sub
push
cmp
popa
pop
adc
cmp
sbb
popa
call
xlat
cltd
stc
stos
lea
jge
inc
add
adc
push
or
enter
enter
cmpsl
orl
subl
xor
sub
inc
sbb
mov
xchg
loope
orl
push
add
imul
mov
xchg
leave
cmp
push
or
jno
popa
pop
adc
jns
imul
mov
xchg
leave
cmp
push
int
xchg
divb
adc
decl
cmp
dec
pusha
pop
inc
xchg
cld
pop
mov
repnz
cmp
xchg
ja
jnp
std
outsw
imul
ja
gs
mov
jl
test
push
clc
pop
cmp
cli
lahf
lods
fisttpl
stos
lcall
out
daa
pop
push
pop
xchg
pop
adc
inc
stos
xor
arpl
jbe
cld
test
cltd
xchg
ja
pop
mov
rcrl
mov
pop
xchg
lock
loop
inc
out
les
sbb
push
xor
pop
push
push
gs
sub
rorb
adc
enter
adc
mov
dec
sbb
mov
jl
ss
add
jb
cwtl
enter
mov
cmpsl
mov
js
orb
push
mov
and
jbe
lock
out
mov
call
mov
cmpsl
or
mov
mov
leave
loop
xchg
sub
lea
incb
iret
bnd
je
shll
add
ftst
addb
icebp
mov
xchg
divb
sub
rorb
outsl
sbb
jmp
pop
in
icebp
xor
pop
in
fs
stos
fildl
xor
jle
and
fstl
sub
jl
xor
sub
adc
sbb
das
mov
es
and
inc
jmp
dec
int
aam
cmp
push
mov
fdiv
or
fldenv
xchg
adc
insb
dec
sbb
popa
sub
push
lahf
lds
pop
jmp
outsl
dec
out
sub
outsb
inc
aas
cmp
fnstcw
push
add
mov
push
hlt
sub
dec
mov
adc
or
xchg
test
push
cwtl
outsl
cmpsl
jmp
roll
inc
xor
adc
pop
mov
pop
test
jmp
cmpsl
inc
jns
cltd
mov
push
inc
pop
cmpsb
cmp
xchg
dec
and
inc
mov
lret
or
in
fsub
cmp
sub
in
push
jo
stc
mov
sub
cmp
js
lds
in
aad
faddl
mov
lret
cmp
cld
lods
mov
jnp
jge
push
lcall
fs
test
push
inc
insl
jge
pop
test
adc
adc
sahf
dec
ret
out
test
lret
les
add
lods
xchg
and
subb
push
push
jne
adc
pop
cmp
inc
lcall
sbb
or
lock
fcomip
jb
std
and
stc
cmp
mov
pusha
inc
mov
adc
scas
jecxz
sbb
adc
scas
movsb
ds
out
xor
rcrb
je
push
and
shrl
or
and
dec
loopne
adc
pop
andb
out
mov
xchg
pop
dec
jg
mov
adc
scas
das
dec
add
enter
lahf
aaa
xor
xor
mov
mov
cmp
data16
cld
xor
cmp
xchg
pop
inc
push
sbb
fs
adc
inc
aaa
ret
mov
fstpt
mov
lret
pusha
sti
pop
cwtl
dec
and
in
mov
sub
cmp
jbe
testl
jecxz
les
adc
and
mov
pop
int3
mov
xchg
loop,pn
in
fs
mov
sub
divl
vpacksswb
xlat
loop
xchg
out
mov
dec
dec
push
mov
mov
into
lahf
add
push
mov
inc
out
cmc
loopne
pusha
jae
aam
rcl
das
pop
inc
add
arpl
pop
jbe
pop
add
js
out
cmp
add
fmuls
add
mov
cmpsb
adc
xchg
fstpt
mov
aaa
lds
mov
lahf
jnp
mov
insl
sar
es
int3
sbb
insb
mov
stos
sub
lahf
jle
ljmp
ljmp
arpl
sub
andl
cmp
inc
and
mov
popf
outsb
test
pop
fucom
fadds
xor
loop
in
out
jmp
add
pop
push
pop
cmp
divb
xchg
lods
xchg
cltd
xor
xor
inc
mov
adc
jae
sbb
mov
into
push
pop
xchg
jge
adc
scas
out
das
mov
inc
sub
adc
and
xchg
pop
lock
xchg
stc
mov
add
insl
test
pusha
js
daa
cmp
mov
inc
pusha
mov
ja
test
push
mov
and
jb
aaa
sarb
gs
xchg
fisttpl
dec
xor
sbb
pop
push
and
add
arpl
ficoml
xchg
or
jmp
scas
xlat
ljmp
and
ret
decl
negb
and
sbb
mov
fildl
rcll
rcl
pop
push
add
inc
testl
mov
inc
call
movsl
fldcw
dec
js
mov
rcr
insl
mov
cmp
push
mov
loopne
dec
jle
mov
dec
push
movsb
fwait
mov
xor
scas
cmp
bound
sub
aam
ficomps
dec
cmp
cld
imul
call
aad
int
pop
dec
idivl
mov
sub
into
dec
test
loope
mov
push
andl
xchg
leave
mov
fimuls
sysexit
xor
inc
popf
xlat
push
mov
jbe
icebp
sbb
mov
lret
xor
repz
pop
sbb
and
idiv
cmpsl
cmpsl
add
sbb
fdivrl
lahf
mov
lea
jbe
pushf
adc
in
and
or
cmp
lock
scas
push
cli
out
sub
pop
jnp
cmp
xchg
mov
xchg
or
mov
cmp
stos
push
xlat
sub
leave
out
and
mov
cmp
shrb
addr16
jb
stos
mov
push
fsubs
movsl
jnp
xchg
lahf
movsb
xchg
xchg
xchg
cmpsb
daa
lods
fs
aad
cltd
es
sub
inc
lcall
adc
rcll
inc
mov
sub
mov
ljmp
pop
cmp
lea
pop
jbe
jae
clc
lcall
sub
or
shlb
mov
test
cmp
scas
dec
rorl
sahf
stos
adc
subb
jbe
cmovo
jecxz
dec
xor
cmpsl
mov
test
pop
xor
or
pusha
cmpsb
and
pop
sbb
inc
push
push
addr16
xchg
mov
inc
test
sbb
jle
jg
fimuls
dec
add
ds
enter
aaa
enter
dec
mov
stos
and
jbe
fsub
gs
or
push
and
dec
imul
outsb
rol
scas
dec
add
call
cmp
cmp
push
push
mov
enter
xchg
stos
in
and
mov
pushf
call
mov
pop
outsl
test
nop
push
into
out
jmp
inc
and
imul
outsl
push
das
mov
out
push
in
les
xchg
push
or
repz
dec
subb
xor
dec
bound
cwtl
std
dec
xchg
jp
mov
bound
xchg
insb
loop
sbb
in
fidivl
xlat
or
movsb
pop
in
js
loopne
int3
jne
push
adc
int3
ficoml
repz
mov
dec
lods
mov
dec
pusha
loope
int
ror
dec
pop
push
fs
std
daa
push
lcall
nop
cwtl
loopne
je
je
dec
lea
aaa
sub
sbb
aas
mov
sbb
fcmovbe
mov
nop
add
push
sahf
pop
lds
in
dec
out
in
imul
xchg
nop
xor
ds
lods
cli
add
loopne
fs
loopne
xchg
rcrl
loopne
pop
add
mov
test
mov
cmp
and
imul
sub
inc
cmp
or
loope
out
mov
xlat
cmp
addl
jae
jae
push
enter
fisubs
push
stc
fidivrs
adc
aas
jmp
xchg
in
out
mov
xchg
fsubs
mov
and
scas
repnz
adc
sbb
jb
jns
jg
mov
pop
cmp
jno
test
mov
movl
nop
fdivrs
pop
jp
add
sub
lahf
xorb
das
test
mov
jmp
sub
xchg
mov
lods
sbb
push
and
fwait
imul
add
stos
jbe
aas
xor
sbb
adc
xor
lea
sub
into
xor
scas
loope
push
cmp
aam
or
in
jge
data16
lds
mov
mov
xchg
add
adc
sbb
mov
mov
test
es
int
insl
push
das
mov
add
dec
mov
push
pushf
lahf
cwtl
mov
loope
push
xchg
outsl
mov
sbb
cmpsb
sub
jnp
hlt
mov
mov
xchg
int3
xchg
xchg
push
shlb
sub
ja
mov
std
fcom
sbb
shlb
pop
lret
cmp
ss
pop
sbb
cmp
adc
clc
femms
cltd
test
cwtl
sub
sti
jno
fildl
scas
jg
test
xchg
push
push
xlat
addr16
scas
in
lock
sahf
les
pop
outsl
aam
inc
pop
int3
incl
aad
sti
mov
pop
dec
ja
add
repz
roll
sbb
push
cld
adc
imul
sbb
nop
insl
xchg
mov
and
test
xor
ficomps
push
add
fbld
jl
cmp
js
fimuls
adc
push
pop
jg
mov
mov
mov
pushf
jle
lods
dec
mov
mov
loope
push
insl
dec
xor
add
add
fdivs
adc
jmp
and
mov
xchg
aam
cld
into
push
jb
dec
cs
inc
push
in
out
mov
cs
cmp
cmp
jbe
dec
pop
imul
push
jo
push
pop
inc
addr16
and
leave
into
adc
data16
sbbl
push
push
out
xchg
pusha
xchg
push
or
les
pushf
ljmp
add
cmp
sti
leave
in
inc
inc
imul
mov
adc
jle
push
mov
add
out
sarl
sti
mov
jns
testb
imull
jl
add
xchg
daa
into
test
inc
or
xor
out
sar
ds
sahf
sub
icebp
outsb
or
shlb
stos
jle
fiadds
rcl
sub
addr16
dec
or
lods
fsubs
nop
sub
sub
arpl
mov
inc
stos
hlt
push
imulb
pop
or
cld
fiaddl
mov
mov
bound
mov
aaa
sub
mov
stc
push
mov
enter
inc
or
xchg
sub
out
cli
mov
jle
shr
stc
sub
inc
jl
ja
sub
ret
and
es
aam
movsl
push
inc
pusha
aad
lock
ss
out
pop
and
insb
add
cs
sbb
cmp
leave
push
xchg
cli
cmp
jmp
sub
mov
std
gs
sarl
cmp
sbb
sti
push
add
les
adc
jg
add
insb
inc
jns
test
pop
fstpl
fisttps
adc
mov
push
pop
sub
and
out
roll
cli
fld
jo
ficomps
int
jb
sbb
sbb
mov
lds
mov
jge
repz
sub
enter
xchg
cmp
in
fidivrs
loopne
cltd
dec
scas
pop
adc
dec
repnz
or
rolb
push
insl
js
ret
add
sbb
jb
pop
pop
cli
mulb
lahf
add
rorl
jecxz
pop
test
sti
pop
mov
or
mov
sbb
fwait
push
pop
sbb
or
inc
repnz
and
mov
push
sbb
leave
pop
push
inc
outsb
inc
dec
stc
adc
std
dec
jo
or
arpl
add
outsb
xchg
jl
sub
test
sbb
stos
adc
ja
mov
lods
stos
dec
xor
fildll
scas
clc
mov
mov
in
mov
mov
dec
xlat
add
sbb
fcoml
aad
shrl
sub
in
mov
add
jmp
jns
xchg
ror
pushf
outsb
scas
and
adc
rcrl
fmul
mov
loop
pop
mov
push
hlt
lea
jne
adc
sub
add
mov
mov
and
in
pop
adc
fisttps
mov
fstpl
div
xchg
ljmp
imull
outsb
inc
mov
int
push
push
inc
mov
mov
inc
push
add
and
push
xor
jbe
sub
mov
mov
jecxz
out
cmp
clc
push
nop
add
or
outsl
test
adc
cmc
pop
jae
jo
in
ds
clc
fldt
test
scas
xchg
xlat
lret
popf
xor
repnz
daa
in
jbe
sub
xchg
pop
dec
les
sub
rcll
test
popf
aam
mulb
jl
xor
insb
fsubl
int
ret
pop
inc
push
mov
sub
test
lahf
call
pop
cmp
popf
xchg
pop
repnz
rolb
insw
es
fimull
into
xlat
sub
mov
and
push
icebp
ret
fldenv
loopne
jl
cmp
push
pop
push
pop
insb
dec
cmp
jno,pn
push
and
xchg
xchg
jge
and
push
rorb
pop
popa
imul
and
dec
xchg
adc
incl
mov
adc
push
inc
prefetchw
mov
shrb
lock
fistpl
stc
mov
cmp
out
lods
cmpsl
adc
mov
insb
mov
orl
xlat
add
mov
and
cli
mov
or
mov
add
orl
add
xchg
push
or
outsl
mov
lods
and
lret
cmp
cmp
clc
lods
mov
pop
rolb
hlt
push
sti
mov
xchg
push
push
in
or
repz
jne
push
dec
divl
and
cmp
pop
inc
add
sbb
loop
push
lea
out
push
sub
outsl
cmpsb
in
jae
call
fsubl
loop
shll
movsb
lcall
sbb
subl
ljmp
jmp
out
push
call
xchg
cs
lock
fdivrl
adc
into
fimuls
fldl
xlat
mov
mov
xchg
push
sbb
xor
lret
lret
js
negb
scas
and
stos
mov
scas
nop
mov
into
outsb
jmp
popf
cld
and
push
gs
scas
xchg
lret
xchg
sbb
sub
jae
inc
imul
sub
mov
pop
cmp
aaa
clc
jno
push
stc
int3
jl
xor
out
sub
or
in
mov
test
mov
adc
test
ljmp
call
inc
dec
out
fidivs
mov
iret
stc
push
je
pop
rol
cld
stos
sbb
lretw
dec
iret
mov
mov
jne
xor
pop
fldenv
stc
fmul
pavgw
repz
fistpl
pop
cmp
mov
ja
fstpl
scas
and
or
insw
int3
inc
sbb
test
out
jns
nop
or
xchg
mov
in
dec
lock
mov
pop
mov
test
aad
lret
cmp
push
repz
cmp
lods
push
pushf
pop
sbb
js
sti
jp
cli
out
add
jnp
es
xchg
shll
or
cmpsl
rcll
das
add
insl
dec
adc
data16
mov
lock
dec
cld
and
aad
dec
pop
mov
shrl
pusha
inc
roll
lcall
push
add
adc
addr16
mov
stc
jo
jge
dec
sahf
xchg
mov
mov
adc
hlt
lea
test
mov
outsb
xchg
pop
jne
jp
ja
sbb
adc
mov
inc
mov
add
mov
cmp
dec
jmp
push
inc
inc
mov
push
adc
fldcw
test
sbb
inc
int
lods
mov
jmp
add
fmuls
jp
daa
jns
call
jmp
pop
test
lcall
pop
dec
mov
cmpsb
mov
lsl
xorb
cmp
pop
fwait
scas
xlat
scas
cmp
js
sbb
lret
mov
and
bound
sub
jb
mov
hlt
icebp
mov
lahf
rolb
jne
ss
pmaddwd
sub
xchg
sahf
arpl
jl
lock
sbb
dec
aad
inc
mov
test
inc
in
pop
add
sub
xor
testb
mov
or
mov
mov
out
and
out
jp
mov
inc
pop
mov
sbb
push
out
lea
stc
mov
cmp
cmovl
xchg
xchg
cmpsb
xchg
bound
mov
add
or
rorl
mov
int
hlt
xor
and
pusha
cli
stos
pop
repnz
dec
int
test
xor
lock
push
shrb
cld
aam
dec
mov
add
fs
out
mov
mov
in
adc
addr16
sbb
inc
sub
nop
jnp
inc
mov
enter
arpl
ljmp
clc
in
dec
dec
push
pop
cltd
loope
icebp
ss
pop
adc
mov
imul
sub
shr
cmc
adc
sbb
mov
mov
mov
xor
jge
outsb
enter
and
xor
cs
sub
fnstsw
sub
and
jb
mov
sbb
xor
dec
adc
dec
rcrl
and
xchg
mov
ret
adcb
or
xchg
movsb
cmp
jae
out
adc
movsb
ret
fsts
cmp
out
jecxz
mov
adc
rcrl
adc
test
popf
xor
out
dec
push
std
add
gs
cld
negb
in
cwtl
fbstp
shlb
sbb
mov
test
in
jmp
in
mov
in
sbb
mov
sbb
dec
mov
cwtl
xchg
inc
add
sbb
int3
sbb
cmp
cmp
rolb
and
and
andl
mov
sub
mov
push
clc
adc
imul
outsl
out
push
fldt
pop
mov
cs
xor
push
pop
sbb
jnp
enter
xchg
or
mov
fistps
or
push
call
add
cmp
loop
mov
pop
mov
xchg
in
xchg
mov
gs
xchg
inc
sub
mov
enter
pop
adc
fists
xchg
and
jnp
lret
lret
push
out
jnp
call
repz
out
leave
adc
xorb
icebp
xor
nop
add
or
out
aas
mov
in
inc
or
xchg
or
and
jge
dec
fdiv
push
push
rorl
and
pop
dec
push
mov
adc
dec
sub
push
test
sti
test
rcll
lret
das
inc
push
mov
mov
pop
into
push
jge
mov
icebp
mov
cmp
mov
xchg
lahf
ds
or
xchg
and
xchg
ljmp
cmc
aad
pop
push
aas
ret
ljmp
shlb
test
mov
sbb
sub
nopl
mov
jb
add
popa
push
or
inc
mov
into
int
test
inc
pop
nop
imul
cltd
loope
or
push
xchg
push
rcr
js
loope
shrl
push
gs
xchg
dec
cli
loopne
leave
pop
ds
fs
bound
cs
mov
fdivl
data16
jne,pn
xor
push
sub
imul
fistpl
push
aad
insb
es
lret
repz
or
inc
popa
xor
cmp
into
mov
inc
xchg
hlt
hlt
clc
adc
cmp
mov
ss
pop
es
sbb
jp
sub
jno
out
inc
leave
sbb
flds
dec
jne
pop
adc
test
xorl
add
jge
loop
pusha
das
out
aas
xlat
or
jecxz
mov
xchg
inc
fistps
push
push
jl
pop
pop
pop
out
sbb
data16
cmpb
push
cmpsb
pop
cmp
cli
xchg
stos
xor
pop
std
mov
push
in
ret
add
adc
sub
stos
rcl
movsl
int
and
repz
mov
sub
or
add
mov
cs
cmp
fiaddl
in
adc
mov
loopne
sub
sbb
lea
shlb
mov
inc
cmp
repz
push
ja
push
outsl
sub
or
or
pop
lea
js
dec
mov
aam
push
std
scas
xor
xlat
call
adc
jle
and
mov
jmp
lock
repnz
dec
enter
mov
pop
and
add
sbb
adc
shrb
aaa
inc
sbb
popa
pop
adc
jns
imul
mov
xchg
leave
cmp
push
or
jno
popa
pop
adc
jns
imul
mov
xchg
leave
cmp
push
or
jno
popa
pop
adc
jns
push
shll
rolb
add
inc
mov
add
adc
jns
jmp
imul
test
incb
into
push
ficoms
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
lcall
pop
push
mov
cmp
and
pop
add
push
add
push
add
pop
add
popa
add
add
int3
add
lea
scas
add
add
add
loopne
aas
add
out
add
fadds
cmp
lea
dec
add
add
mov
outsb
add
mov
pop
add
add
add
add
add
add
add
adc
mov
push
add
add
add
jne
testb
add
add
add
add
add
add
add
add
adc
pusha
add
add
add
add
sub
fiaddl
jb
gs
add
inc
add
push
add
add
add
add
add
push
add
add
insb
add
add
add
add
add
filds
adc
xchg
add
add
push
add
add
add
add
push
add
add
add
add
add
add
push
add
daa
add
add
add
add
push
loopne
push
add
loope
outsl
add
add
add
add
add
add
out
add
cmp
xor
push
add
test
add
popa
add
mov
lahf
add
add
add
mov
add
push
add
add
add
add
add
add
add
add
mov
movsb
add
xor
add
add
mov
rolb
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
push
add
push
add
add
add
popa
add
adc
push
add
add
add
or
add
add
add
add
add
addl
adc
mov
stc
add
or
add
add
add
loope
mov
and
add
add
add
add
jmp
mov
adc
loop
jle
add
add
daa
add
xor
push
add
in
push
add
push
add
add
add
add
add
add
cmp
pop
add
add
add
add
add
add
add
jae
mov
loopne
xor
daa
add
scas
add
add
add
add
add
add
add
aad
in
loop
add
xchg
add
add
fiaddl
adc
outsb
add
movl
inc
add
add
add
add
add
mov
dec
add
add
add
add
add
add
add
add
lods
add
add
or
add
add
add
push
add
pop
add
add
xchg
add
add
push
add
add
add
add
add
add
push
add
add
add
add
das
add
add
inc
add
adc
sbb
inc
add
add
add
add
or
add
add
pop
sub
add
stc
add
inc
add
add
pop
push
add
movl
mov
out
int3
add
add
add
add
add
or
push
add
mov
add
test
add
mov
dec
aaa
and
lods
movsl
insb
push
or
enter
call
out
repnz
gs
or
sub
mov
xchg
mov
pop
pop
mov
push
fadds
sbb
xor
fadds
cmpsl
cmp
push
push
and
hlt
ljmp
popa
cmc
lahf
pop
stos
shlb
mov
xchg
lahf
bswap
loopne
repz
jle
adc
and
gs
insl
aas
in
sub
cmovg
movsl
imulb
les
xchg
xchg
sbb
push
adc
jbe
xchg
cmp
scas
jmp
inc
sub
dec
les
dec
pop
lcall
gs
mov
jmp
js
into
nop
sub
fistpl
icebp
and
in
jae
cmp
xchg
inc
movsb
test
fimuls
jb
dec
mov
jg
add
in
mov
push
push
cmp
sub
mov
mov
mov
dec
cmpsb
sub
leave
or
lret
xor
mov
push
xor
push
or
sbb
sbb
nop
lret
sbb
cltd
cmp
jge
jge
dec
inc
arpl
push
jl
jbe
jle
pop
mov
ss
xor
push
sarl
bound
jecxz
mov
je
insl
push
cs
push
add
mov
arpl
mov
cmpsl
sti
sub
outsb
inc
sbb
pop
xchg
jae
imull
xor
ret
js
test
jp
cmp
adc
lcall
scas
std
lds
cltd
sbb
outsb
sub
jbe
xchg
cmpsb
xchg
iret
fnstcw
cltd
and
andb
jo
jb
std
das
call
js
dec
in
or
es
loope
inc
gs
adc
push
rorb
cmp
push
scas
into
adc
xchg
push
fisubrl
int3
jle
pop
add
std
in
jb
sbb
inc
mov
stos
icebp
in
out
push
dec
cmpsb
sbb
iret
jnp
inc
lcall
mov
mov
xchg
inc
sub
or
mov
mov
mov
cmp
adc
mov
out
push
push
inc
stos
and
jb
popf
pop
leave
jbe
mov
pop
in
aam
push
pop
ds
imul
mov
pop
insb
aaa
cmpsb
mov
cld
movsl
mov
rorb
jmp
inc
push
inc
les
xchg
ret
jle
out
fwait
mov
and
sbb
dec
cltd
mov
jo
push
cmp
or
pop
loope
xor
fwait
pushf
sbb
dec
icebp
sahf
and
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
