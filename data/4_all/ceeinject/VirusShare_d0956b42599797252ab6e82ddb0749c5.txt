call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
scas
scas
mov
dec
push
aas
xchg
adc
xchg
cmpsb
sbb
lock
negb
scas
push
mov
inc
out
push
out
iretw
jbe
and
pop
sbb
negb
mov
cmpsb
mov
negb
out
xlat
mov
xchg
cli
sbb
jbe
push
and
xor
ss
ljmp
bound
jb
or
hlt
mov
scas
inc
xor
push
lahf
test
and
shrb
pop
pop
pop
loopne
cmova
addr16
push
aam
mov
daa
aam
cld
dec
add
imul
cmp
pop
adc
icebp
outsb
inc
pop
jo
int3
inc
out
test
pop
xchg
iret
lock
xchg
dec
push
aam
repz
dec
subl
inc
fnstenv
jmp
das
aad
and
ds
rol
rcrb
cmpsb
xor
sbb
fiaddl
ja
adc
jecxz
jle
outsb
push
cmpsl
lock
inc
inc
lahf
mov
mov
pop
lahf
inc
out
adc
iretw
into
je
add
jle
test
cmpsb
ja
addr16
xchg
pop
je
pusha
int
ljmp
jne
pop
mov
testb
jp
or
xor
sahf
popa
cld
std
lock
out
aaa
mov
mov
xlat
pop
ret
push
sbb
xchg
sub
mov
add
push
jmp
jbe
xchg
xchg
aas
cmpsb
movzbl
outsl
jg
dec
negb
scas
push
mov
inc
out
push
jmp
jbe
xchg
xchg
aas
cmpsb
movzbl
outsl
jg
dec
negb
scas
shrb
cmp
add
rol
daa
ret
adcl
inc
mov
and
xor
fadd
fldt
or
or
dec
dec
cmc
push
iret
call
out
repz
fwait
call
add
scas
ret
dec
fs
dec
xor
xchg
mov
sti
call
inc
pop
xchg
cmpb
fs
sub
or
daa
bnd
hlt
pop
add
repnz
mov
xchg
iret
sub
sub
sbb
inc
add
popf
xchg
push
push
add
mov
or
jno
call
xchg
in
lret
js
rclb
xchg
cmp
push
mov
lret
ror
jne
mov
lea
insb
dec
test
sti
lret
xchg
enter
testb
shlb
popf
mov
jl,pn
mov
stos
fcompl
mov
sbb
jno
pop
dec
jg
fnstenv
xor
outsl
jnp
mov
push
xchg
rcrb
pop
mov
mov
das
adc
ljmp
mov
sbb
xchg
and
int3
es
mov
mov
out
pop
xor
test
add
pop
mov
pop
pop
fdivrs
adc
inc
add
push
or
daa
gs
adc
cmc
push
popa
fs
lcall
jne
and
adc
ja
enter
mov
call
pop
js
fsts
out
scas
es
sbb
leave
stos
jp
out
aas
sub
mov
lods
stos
sub
or
sbb
popf
mulb
stos
or
out
test
push
fisubs
xchg
popf
pop
mov
lret
iret
mov
fldenv
add
call
mov
fstpt
popa
mov
pop
adc
pop
test
sub
and
in
sub
adc
or
add
imul
mov
shll
dec
sbb
or
sub
nop
sbb
xchg
and
cmpsl
cmp
cwtl
pop
outsb
loopne
jbe
add
jmp
dec
push
push
sbb
mov
clc
mov
sahf
imul
cs
into
mov
and
call
push
cltd
xchg
jnp
popf
imul
ds
call
adc
pop
sub
xor
out
enter
cli
sarb
jo
and
arpl
push
xor
std
xchg
xchg
mov
xor
insl
inc
lea
mov
push
mov
inc
lret
iret
xor
cmpsl
xchg
add
mov
popa
mov
dec
aas
hlt
dec
add
add
inc
subb
xchg
push
cli
aaa
jnp
int3
push
movsb
enter
insb
lods
xchg
iret
dec
pop
aas
inc
out
fwait
daa
in
and
sbb
dec
mov
mov
xlat
push
mov
js
sub
inc
aas
fldcw
outsb
sub
cltd
nop
mov
add
insb
arpl
or
lahf
test
sbb
or
daa
in
enter
add
cmpsb
pop
mov
test
lods
jnp
dec
insb
or
pop
loope
mov
pushl
mov
push
xchg
in
add
fdivrp
sub
adc
test
jmp
mov
insl
dec
aad
sub
test
scas
pop
mov
push
pop
pop
sub
mov
lock
cmp
pop
mov
pop
rol
inc
aas
out
pop
pushf
shrb
movsb
adc
xlat
leave
fsubrp
xchg
and
dec
pop
call
jb
and
repnz
dec
fs
std
mov
xchg
cmpsb
lds
fists
shlb
in
movsl
cmpsb
and
arpl
outsb
repz
ret
lods
sbb
movsb
xor
js
mov
mov
xor
es
fst
pop
adc
pop
pop
jp
ret
stos
in
or
xchg
ret
mov
mov
icebp
pop
inc
sbb
sub
xor
addr16
mov
mov
adc
aaa
push
pop
int3
xchg
inc
or
jp
mov
pop
clc
icebp
xor
and
mov
jb
into
imul
pop
sbb
dec
push
and
pop
mov
bound
popf
enter
rorl
mov
ss
mov
test
cmc
rorb
mov
jle
adc
adc
rorl
adc
sub
mov
adc
cmpb
popf
mov
lret
out
int3
push
out
dec
mov
dec
icebp
aaa
or
jmp
mov
addr16
or
hlt
push
into
xor
mov
js
test
fistpll
cmp
popa
adcb
adc
jle
cmp
adc
add
jmp
pop
iret
out
out
les
push
dec
mov
notl
sbb
mov
clc
inc
mov
or
in
mov
jnp
stos
out
xchg
scas
fmuls
pop
aaa
movsl
inc
cmpsl
sub
stos
add
adc
mov
fldt
push
xor
sahf
clc
cmp
mov
push
add
add
lahf
fstpl
aam
call
roll
inc
pop
sbbl
idiv
dec
arpl
mov
xor
les
xor
mov
xchg
jmp
aad
frstor
xchg
lds
lret
aaa
inc
jmp
lds
and
xchg
or
add
add
icebp
sbb
jecxz
idivl
lcall
ja
jo
lcall
xchg
sarl
inc
ret
dec
insb
mov
test
cltd
ret
shll
jmp
repz
or
push
mov
or
dec
mov
mov
outsl
xchg
ljmp
insl
dec
cmpsl
fstpt
mov
inc
cli
jle
xlat
adc
aam
pop
imul
int
pushf
in
lods
iret
lcall
int
outsl
cs
dec
add
imul
sbb
outsb
in
dec
fsubrl
lcall
subb
sub
add
mov
arpl
lock
stos
mov
push
sarl
dec
sti
in
xor
ret
adc
pop
repz
movsb
mov
dec
fdivl
out
sub
dec
sub
push
mov
inc
mov
pop
int
or
loopne
lea
mov
leave
imul
movsb
add
mov
mov
pop
and
pusha
adc
pop
call
cmp
movsb
fidivrl
sbb
and
lds
popf
ljmp
scas
call
outsb
jbe
mov
pop
push
dec
sahf
add
scas
xor
jg
mov
enter
rolb
xchg
push
cwtl
shll
fsubr
mov
dec
mov
pop
sbb
testb
call
cwtl
mov
testb
repz
mov
mov
es
jecxz
andb
xor
popl
loopne
adc
out
fisubl
shlb
cmp
or
out
pushf
test
mov
mov
cmp
jns
in
fsts
xchg
pop
ret
sahf
dec
subb
shr
sbb
pop
xor
imul
cmpsl
pop
sbb
negb
xlat
mov
fnstenv
push
xchg
xchg
pop
lock
and
call
es
adc
sub
movsl
push
and
nop
xchg
push
out
int
dec
sub
dec
lea
jg
fldl2t
loop
icebp
adc
mov
shrl
adc
hlt
push
jbe
jle
fs
add
jmp
in
movsl
inc
push
or
mov
xor
mov
inc
into
pop
mov
sahf
insb
push
xchg
dec
jbe
std
xor
jo
pop
mov
lcall
ja
dec
push
sub
sub
mov
addr16
mov
mov
push
fs
sahf
add
lahf
jbe
test
push
mov
pop
call
jnp
xchg
test
push
pop
push
ja
fs
mov
cs
cmp
test
push
or
and
lahf
jno
repnz
push
pop
das
gs
dec
xchg
sahf
std
dec
adc
int3
mov
mov
insb
sbb
or
dec
add
push
je
repz
add
pop
mov
or
adc
mov
pushf
jge
jne
inc
or
dec
push
out
or
push
ljmp
inc
push
scas
xor
enter
mov
imul
nop
jo
dec
sti
dec
sub
inc
push
lds
mov
add
dec
outsb
push
js
cmc
sub
mov
mov
lcall
dec
xchg
mov
add
cmp
int
mov
mov
and
add
dec
rclb
stos
jb
inc
cli
aam
mov
jp
jecxz
scas
push
sub
mov
sahf
adc
aas
mov
push
cltd
dec
iret
dec
repnz
inc
xor
pushf
test
cmp
addl
cmp
outsl
dec
stc
xor
adc
xor
mov
jae
dec
rol
cwtl
adc
jne
and
adc
out
push
mov
jae
jae
cmpsb
mov
sub
ds
sub
fmull
mov
xor
push
sub
xor
mov
enter
or
repnz
mov
jo
dec
in
sti
ret
test
aas
xchg
push
pushf
jge
jmp
pushf
scas
jmp
cli
jmp
cmpl
push
adc
inc
and
adcl
sub
pop
mov
test
int
orl
gs
mov
and
mov
sbb
nop
je
test
out
loopne
push
in
addr16
inc
mov
mov
jnp
push
jg
cmp
and
mov
sub
sarb
pop
in
in
jge
push
in
mov
sahf
add
testl
jns
daa
iret
scas
cmp
arpl
jns
leave
jg
jne
mov
aas
add
xor
jno
jl
cmp
push
jle
sbb
loopne
jo
loop
mov
or
test
mov
into
cmp
insl
repnz
ficoml
ja
fcoml
adc
push
call
int3
les
cltd
inc
movsb
pop
or
ret
mull
jp
movsl
out
pushf
cs
arpl
sbb
ss
mov
jae
add
hlt
loope
cmpsl
add
xor
outsl
sub
daa
loopne
and
int3
neg
sbb
or
test
pop
sub
xor
js
pop
daa
mov
call
lods
add
stc
jo
lds
inc
jb
pusha
aaa
adc
cmp
test
or
mov
fdivl
iret
mov
je
shr
add
sub
sub
jg
in
pop
jo
int3
insb
movsb
std
sbb
jmp
dec
aas
arpl
or
and
test
je
jp
cs
mov
inc
loop
and
in
pop
sub
in
dec
inc
xor
jnp
repz
mov
jae
out
xor
xchg
add
popa
mov
jg
push
nop
insl
popa
xchg
sbb
xor
std
fimuls
lcall
mov
cmp
shr
mov
bound
xor
adc
lahf
pushw
mov
or
add
stc
call
fwait
xor
push
or
and
insl
sub
mov
and
cmp
or
sub
daa
loop
push
lock
adc
pop
ss
mov
addl
cmp
add
aaa
mov
dec
in
fwait
in
adc
mov
inc
mov
data16
pop
or
cld
jl
dec
fadd
sbb
mov
in
jns
sub
mov
out
xchg
cmp
shl
cmp
adc
push
and
sub
jno
xchg
ljmp
test
sub
dec
jnp
pop
jle
insl
push
cmc
mov
mov
pushf
data16
loope
pushf
sbb
and
or
popf
cmpb
shrl
and
jle
daa
test
pop
fiaddl
ret
add
inc
leave
cs
daa
scas
rclb
in
clc
fnsave
dec
sbbl
dec
pop
pop
add
push
inc
loop
incb
add
nopl
ds
adc
xchg
push
roll
ret
mov
mov
push
sub
pop
cwtl
adc
cmp
inc
es
daa
jno
adc
mov
movsl
dec
scas
jecxz
movsl
xchg
hlt
pop
jl
gs
stos
jmp
sahf
dec
mov
cmpl
sub
stc
cld
notl
mov
out
mov
mov
aaa
daa
inc
test
and
bound
aad
ss
mov
dec
dec
mov
mov
outsl
mov
inc
mov
out
into
adc
insl
push
aas
test
or
lret
mov
add
push
jmp
cmpsb
mov
lahf
xchg
xchg
sbbl
sub
push
adc
push
pop
es
scas
subb
jge
xchg
bound
js
xchg
mov
push
adc
mov
and
pop
mov
in
pop
jp
and
jbe
inc
mov
adc
xor
lret
sar
and
or
push
mov
leave
lcall
and
and
movsl
icebp
pop
sahf
fnstcw
pusha
xor
nop
test
mov
jp
sub
lods
stos
cmp
dec
jne
idiv
outsl
cltd
lret
jmp
mov
ret
in
jl
cmpsb
imul
lock
fldenv
jno
jg
imul
xchg
outsl
sbb
shll
jmp
pusha
fisttpl
inc
int3
cld
je
js
mov
bswap
imul
popf
xchg
pop
jae
jb
xor
fdivrl
lods
nop
sarb
in
pop
in
in
and
sbb
test
imul
pop
popa
lock
cmovg
mov
ljmp
loopne
cmp
repz
cmpsl
bound
into
ret
xchg
mov
nop
stc
sbb
sahf
es
pop
push
addr16
into
inc
mov
adc
mov
cmp
pop
jae
addb
inc
jbe
repnz
push
fisubs
aas
push
shll
sbb
mov
pop
sub
scas
hlt
pop
push
adc
loop
sub
cmp
push
jg
jae
loop
test
dec
mov
lods
insl
jo
and
fwait
add
test
push
loop
add
add
xchg
or
add
lret
jecxz
lahf
arpl
pop
push
xchg
sub
stos
inc
pop
test
gs
fistps
fisubl
test
sbb
sbb
adc
cmp
pop
aaa
addb
push
test
insl
lds
xchg
wrmsr
pop
in
inc
sarb
pusha
sub
lret
es
mov
in
lods
mov
daa
fbld
insb
lods
mov
lea
adc
dec
test
mov
push
jl
mov
out
push
jmp
lahf
pushf
jg
outsl
test
and
inc
xor
mov
add
dec
pop
sbb
push
outsb
notb
pop
xchg
dec
lock
sbb
in
mov
or
push
aam
mov
mov
hlt
and
cltd
xor
mov
daa
xlat
jg
ljmp
test
push
pop
in
js
xchg
ljmp
popf
sbb
mov
sbb
loop
ficoms
or
scas
sbb
push
mov
adc
clc
mov
loopne
ret
cwtl
imul
imul
sub
call
xchg
dec
push
jne
test
notl
xor
leave
cli
call
push
mov
sbb
ret
lods
mov
pop
aaa
sub
adc
adc
out
ficomps
test
jae
insl
xor
jb
pop
bound
test
aaa
movsl
mov
mov
push
adc
bound
pop
cmc
jmp
shrl
lds
je
jne
adc
adc
fstl
adc
lods
icebp
bnd
pop
sarl
sti
insb
jne
and
lahf
inc
mov
popf
xchg
jge
xchg
add
mov
xchg
mov
adc
pop
nop
lret
imul
mov
int
outsb
stc
inc
and
into
or
xor
jl
mov
inc
and
cmp
and
sbb
cmp
das
push
mov
cltd
test
nop
cmp
add
mov
push
arpl
mov
cmp
push
cmpsb
mov
push
xor
les
sarl
pop
push
ret
mov
bound
sbb
outsl
mov
int
jecxz
push
xchg
cmp
push
popa
inc
jb
enter
jmp
fstp
xor
je
mov
jb
cmp
adcb
add
sysenter
fbstp
lds
or
add
ror
icebp
inc
pop
sub
jb
pop
outsb
jno
shlb
pop
lods
and
pop
adc
adc
in
push
popa
or
adc
jne
cmp
sbb
ror
and
mov
xchg
test
pusha
test
jle
fcomps
test
je
lock
out
repnz
addr16
and
cmc
pop
mov
pop
shr
mov
nop
in
sub
pop
dec
or
mov
xchg
movsb
test
adc
inc
push
in
xor
or
or
cld
xor
or
stc
pop
xchg
enter
sbb
inc
lds
fcomip
or
jne
jno
mov
push
sahf
add
xchg
cmp
hlt
fsubr
mov
inc
and
enter
js
jbe
fistps
daa
xchg
jae
and
adc
addb
xchg
es
add
out
adc
call
add
stos
mov
cmp
push
jp
push
xchg
pop
loope
mov
jbe
jge
jnp
xchg
fists
in
jl
loop
dec
call
adc
pop
mov
nop
push
xchg
sub
jb
sub
mov
pop
andl
or
data16
imull
dec
and
les
push
fdivl
mov
jle
sar
mov
les
pusha
daa
lea
sub
jp
ret
xchg
add
movsl
icebp
ja
pop
xor
adc
out
jl
jecxz
fbstp
jbe
push
add
mov
push
sbb
sbb
les
xchg
add
sub
in
mov
rcll
sbb
test
repz
push
push
mov
aam
xor
pop
aam
out
xchg
xor
sub
pop
dec
sub
fnstenv
ret
jo
jecxz
sbb
xchg
outsl
aad
enter
push
jge
pop
addr16
xchg
add
xchg
leave
jle
scas
push
fwait
in
out
mov
mov
push
outsl
mov
push
adc
xchg
xchg
pop
ljmp
jae
popf
cmc
pusha
pop
push
pop
pop
inc
pop
xchg
xorb
popa
test
and
jbe
push
lods
out
aas
cmpsl
xchg
jge
int
call
mov
lds
sbb
subb
cmp
mov
fsincos
xchg
fwait
dec
fldl
mov
jo
cmp
subl
repz
icebp
lea
adc
and
add
dec
cmp
add
pop
mov
dec
push
imul
add
jae
adc
push
add
jmp
test
addr16
pop
loop
add
push
sub
ds
stc
aad
pop
jg
cmp
and
pop
test
test
dec
mov
inc
mov
fiadds
cmp
or
xchg
in
cmpsb
movsl
call
cmp
test
mov
pusha
popf
loopne
in
in
add
mov
fists
ret
aam
fists
ffreep
shll
xor
xchg
sub
iret
loopne
cmc
xor
aaa
aas
jbe
out
fucomip
fisubrs
xchg
loope
dec
movaps
jp
xchg
sub
jnp
popf
lods
cmp
arpl
mov
jnp
jl
xchg
jmp
jl
cmp
push
inc
push
outsl
lods
sub
movsl
sbb
sbb
xchg
fcompl
mov
pop
pusha
sub
or
mov
or
pop
or
insl
mov
mov
xor
mov
pop
loopne
sti
dec
xor
insl
push
mov
jmp
test
mov
cld
cld
cmpsb
fidivrl
mov
xor
jl
pop
icebp
add
mov
mov
out
inc
outsb
imul
test
sbb
fstpl
cltd
mov
jns
enter
mov
rcpps
fs
addr16
fmul
sahf
pop
roll
pusha
xchg
scas
mov
test
addl
push
push
test
sbb
movsl
fistpll
mov
xchg
adc
sbb
xchg
mov
loope
fcomps
xor
pop
movsb
cs
test
aam
in
icebp
lds
push
sbb
loop
dec
push
sti
lods
pop
mov
sbb
pop
add
repz
mov
adc
stc
mov
std
test
mov
sub
iretw
jbe
xchg
xchg
aas
cmpsb
movzbl
outsl
jg
dec
negb
scas
push
mov
inc
out
push
jmp
jbe
xchg
xchg
aas
cmpsb
movzbl
outsl
jg
dec
negb
scas
adc
lahf
inc
out
push
jmp
ja
subb
aas
scas
lss
outsl
iret
jg
dec
pop
push
stos
cmp
inc
out
inc
jmp
negb
xchg
imul
sbb
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
idiv
leave
xlat
pop
test
int
cltd
imul
daa
sub
cmp
or
sbb
jmp
xlat
fldenv
mov
pop
xor
pop
daa
inc
aaa
cmp
dec
pop
sbb
jnp
stc
popa
xlat
addr16
andl
jns
dec
jle
push
dec
jge
sbb
mov
mov
or
insb
inc
movsl
push
ret
mov
lods
aad
mov
dec
push
inc
insb
bound
xor
xor
leave
popa
fistl
and
dec
fsubrs
and
push
or
xchg
pop
call
pop
idiv
cli
cmpsb
cmp
in
cld
mov
or
or
fsts
cmpsl
test
jmp
xchg
addr16
jl
movsl
fldcw
pop
movb
adc
adc
lea
ja
mov
mov
pop
stos
jp
cmp
sbb
out
sub
inc
sbb
jecxz
out
jbe
js
sbb
aaa
imul
movb
jg
mov
dec
xlat
shll
push
xchg
sbb
ja
inc
pop
push
adc
add
pop
ja
mov
mov
lret
loop
cld
es
jae
and
cmp
inc
inc
pop
dec
inc
dec
inc
js
lods
test
loope
fisttpl
add
ds
jns
jne
push
xchg
mov
cmpsl
int
mov
imul
daa
sub
cmp
or
sbb
jmp
xlat
fldenv
mov
jns
dec
push
pop
daa
sub
cmp
or
sbb
jmp
repz
jge
sbb
push
test
add
sub
popf
mov
rolb
mov
inc
adc
pop
int3
sbb
aaa
stos
lahf
xchg
nop
xor
xchg
sahf
daa
jge
adc
out
test
fsubs
loope
adc
and
xchg
add
xchg
idiv
imul
scas
loopne
or
out
sub
mov
sbb
adc
xchg
into
push
jp
ficoml
lret
pop
fwait
cmpsl
adc
mov
mov
jle
aaa
sub
in
adc
or
mov
out
lcall
movsl
shll
pop
jl
inc
inc
sub
inc
in
loope
dec
addr16
cmp
dec
in
call
inc
stos
cmpsb
push
push
adc
sub
dec
inc
jl
or
ss
js
xor
inc
loop
mov
mov
dec
jp
push
jno
adc
lock
mov
sub
add
fstpl
sti
xchg
sahf
sub
inc
cwtl
scas
enter
mov
shrb
mov
add
icebp
repnz
jo
mov
mov
jle
push
in
aad
fstpl
or
imul
shl
dec
cmp
mov
or
xor
mov
ret
inc
and
mov
mov
rorl
test
or
adc
jp
mov
inc
gs
pop
xchg
loopne,pt
inc
inc
repnz
pop
cld
inc
dec
or
jl
lret
dec
cmpb
pusha
mov
les
cli
add
pop
lcall
sbb
dec
cmp
imul
jge
jl
xchg
fdivrs
hlt
outsw
adc
and
push
mov
fcoms
in
stc
mov
add
dec
adc
mov
jbe
adc
shrb
notl
testb
stos
jle
lahf
roll
mov
or
and
outsb
push
push
enter
ret
std
cld
cwtl
retw
cltd
add
mov
mov
ret
mov
jo
inc
mov
or
repnz
or
popf
add
ret
xchg
jo
repz
stos
lahf
lea
imul
or
outsl
inc
int3
pop
push
lds
call
xchg
mov
popa
mull
ljmp
cmc
imul
xchg
mov
je
xchg
pop
xor
sub
inc
xchg
cmp
xchg
push
idivl
xchg
and
xchg
scas
jle
cmpsb
pop
fldl2e
push
jne
ret
push
mov
push
mov
repz
push
rcrb
mov
dec
jae
or
shll
adc
adc
rcrl
inc
xchg
arpl
pusha
sbb
aad
addr16
and
pusha
xchg
xchg
sub
mov
xchg
outsb
push
inc
push
mov
pop
pop
mov
or
inc
and
jmp
mov
push
add
adc
pop
xor
xchg
sarl
out
sub
in
cmp
popf
outsb
das
int
cmp
loop
jns
aaa
xlat
sbb
add
dec
nop
mov
in
jae
push
in
jg
idivl
shlb
xor
aad
aam
adc
pop
add
icebp
inc
jns
mov
sbb
adc
leave
aam
mov
das
or
fnstcw
in
stos
xchg
sbb
scas
fwait
mulb
jmp
outsl
mov
xor
cs
push
stos
inc
jge
xchg
int
or
mov
inc
xchg
adc
mov
push
mov
jae
leave
mov
scas
or
push
jge
popa
mov
gs
icebp
je
cli
mov
fistl
cmp
mov
adc
inc
popa
shll
add
arpl
lds
pop
jecxz
mov
fimuls
push
pusha
in
fcmovbe
or
dec
mov
xchg
stc
and
int3
aas
xor
divl
repz
test
xchg
mov
jl
popf
inc
push
xchg
push
insl
cwtl
insl
in
mov
mov
mov
sarb
leave
test
mov
repz
pop
and
dec
lret
inc
jmp
mov
lods
xchg
mov
sbb
mov
xor
and
nop
jmp
pop
mov
js
add
cli
rcl
notb
inc
je
subl
adc
sub
add
mov
outsl
add
cmp
dec
add
xor
popa
push
enter
leave
add
fisttps
xor
push
inc
mov
xor
fnstenv
push
xchg
ftst
repz
das
jge
or
jecxz
mov
insb
out
cs
xchg
mov
xchg
xor
ret
lea
mov
mov
es
out
lret
push
xor
lahf
mov
xchg
pop
or
into
and
in
test
test
mov
popf
sbb
cs
adc
adc
xor
jbe
clc
sbb
add
mov
ds
mov
popf
push
sti
dec
jne
xchg
xor
xor
out
loope
xor
fsubrl
aas
lods
insl
adc
jp
movl
es
or
leave
stos
sub
inc
push
into
das
pop
inc
add
pop
dec
and
repz
jl
inc
xor
pop
loopne
sbb
std
cli
cmp
jecxz
sarl
push
mov
or
push
or
fdivrl
stos
or
ss
repz
nop
shll
mov
xchg
shll
pushf
or
cwtl
and
add
movsl
mov
inc
fstps
sti
mov
mov
ds
fwait
hlt
ffreep
jle
jo
lret
inc
cwtl
mov
inc
sub
pop
cld
scas
mov
test
test
or
pushf
push
xchg
js
ret
sbb
mov
mov
cmpsb
or
nop
in
test
imul
dec
sbb
or
cli
imul
pop
mov
cltd
and
frstor
sub
mov
notb
inc
pop
mov
xchg
jne
and
popf
aad
mov
dec
dec
or
dec
add
ds
sti
leave
nop
adc
or
xlat
xchg
pusha
and
inc
inc
xchg
enter
aam
out
nop
imul
jae
jae
mov
icebp
fsubs
lret
mov
test
or
sub
fistps
loope
sub
mov
test
add
and
jns
mov
decb
addl
pushf
out
or
pop
lods
test
leave
mov
cltd
mov
repnz
mov
repnz
and
scas
xchg
xor
in
push
ficomps
xchg
or
pop
xchg
cmp
out
shll
push
aad
push
add
push
mov
sti
mov
divl
nop
rcl
add
fistps
dec
fcomp
cmp
adc
cltd
loope
xor
insl
push
sahf
add
lahf
popf
mov
lcall
pop
fiadds
loopne
mov
and
fstps
movsb
inc
stos
ret
fbstp
adc
cmp
insl
dec
adc
shll
out
mov
or
add
ss
movsb
pop
push
loop
pop
xchg
test
hlt
loop
sbb
xchg
cmp
jg
movsl
fwait
inc
jecxz
pop
mov
addb
les
add
inc
or
xor
push
add
std
sti
mov
cmp
leave
push
fwait
test
cs
outsb
addr16
add
in
mov
aam
pushf
xchg
sub
xchg
test
inc
jnp
mov
or
ja
xchg
cmp
sub
lret
cmp
addr16
mov
arpl
mov
pop
lret
inc
lahf
jg
lods
imul
gs
aad
stos
enter
dec
add
pop
movsl
mov
sahf
pusha
xchg
mov
push
aas
inc
adc
ds
cld
sti
xchg
shrl
stos
std
pop
and
mov
mov
daa
pop
cli
push
cld
into
push
stos
cmpsl
test
daa
pop
cmp
dec
sbb
or
pop
jmp
mov
test
ss
sub
push
movsl
addr16
rol
push
jg
pushf
or
imul
test
ficoms
cmp
iret
iret
sbb
mov
pxor
sbb
xlat
fadds
std
jge
pop
mov
xlat
push
pop
xlat
gs
mov
inc
mov
bound
lret
add
rcrb
add
lods
push
insb
cmp
jne
in
leave
movq
mov
lahf
fwait
jnp
lods
daa
pusha
subb
out
les
out
lret
push
and
pusha
jl
sti
pop
jge
loop
push
cmp
add
mov
test
popf
dec
mov
cltd
pop
gs
mov
jle
je
mov
and
sbb
movsb
mov
fwait
inc
inc
push
xor
push
mov
jmp
icebp
sub
dec
mov
test
push
in
rcl
mov
add
xchg
stos
rorb
dec
ret
inc
xlat
pop
call
fbstp
in
push
push
ret
jb
push
in
scas
out
ja
mov
sahf
aad
repz
lea
cltd
imul
inc
mov
lods
aas
subl
push
or
or
xchg
movsb
jbe
popl
fwait
call
filds
cmc
scas
push
cmp
in
inc
xchg
mov
andl
ljmp
insl
push
mov
xchg
push
dec
pop
pop
outsl
dec
sbb
mov
jno
or
lcall
pop
mov
pop
and
or
pop
rcrl
into
pop
sub
sbb
scas
sbb
inc
aaa
mov
lods
mov
pusha
mov
mov
loope
std
jp
and
xor
aam
mov
xor
lea
xchg
js
lret
jg
ficoms
xchg
test
mov
ss
push
rol
xchg
popa
dec
aaa
and
cltd
xor
dec
call
leave
or
xchg
sbb
outsl
inc
les
cmp
adc
rolb
mov
mov
into
cmp
and
repz
cwtl
scas
loop
rcll
adc
movsb
xchg
push
out
mov
mov
cld
in
push
xchg
cwtl
into
icebp
jnp
fists
push
cld
adc
nop
mov
push
mov
jecxz
in
xchg
mov
aaa
jo
sub
rcr
mov
test
mov
mov
inc
xchg
loop
jge
jbe
sub
xor
repz
cmp
xchg
inc
mov
fstpl
cmc
adc
imul
sub
ret
pop
icebp
xor
pop
lds
in
adc
fs
test
bound
es
mov
loopne
js
enter
mov
mov
mov
daa
shl
iret
aam
in
add
jnp
sub
mov
xor
mov
cmp
out
push
xchg
inc
shlb
inc
mov
test
adc
pop
int3
bound
sti
divb
jecxz
rorb
or
inc
aas
js
push
cmp
gs
rorb
inc
fistpll
add
std
jbe
mov
or
ja
fnstenv
inc
call
or
mov
cmpsb
lds
push
cli
icebp
cmp
sub
mov
pusha
adc
add
push
aas
ljmp
dec
dec
int
mov
dec
jb
mov
movsl
add
sarl
mov
icebp
pushf
sti
roll
mov
xchg
adc
pop
lea
and
fucomip
inc
andb
sbb
fisubs
adc
sbbl
mov
xchg
xchg
inc
cmpsl
adc
xor
jg
mov
mov
sarl
insb
lcall
sbb
xchg
aad
pop
aad
lods
rolb
xchg
jnp
mov
push
mov
xchg
in
aad
int
lods
xchg
mov
outsb
jno
or
sbb
dec
popa
and
scas
mov
popa
arpl
or
arpl
xchg
cmpsl
leave
and
cmp
imul
mov
loop
jb
cs
movsb
cmpsl
dec
push
mov
mov
ss
cmc
inc
inc
mov
loopne
jno
jae
sub
jo
add
or
call
in
xor
or
aam
filds
inc
iret
add
dec
popa
inc
and
mov
mov
mov
sub
lcall
sub
add
mov
popf
sarb
test
iret
dec
add
sub
insb
outsb
nop
jmp
mov
mov
cmc
stos
or
jne
inc
push
xchg
test
cvtps2pi
std
cmc
into
and
xchg
mov
repnz
stc
inc
cmpsl
shr
out
outsl
cmp
mov
stos
or
dec
imul
repz
ss
mov
pop
movsl
lcall
jae
lods
in
fstl
bound
mov
popf
inc
mov
sbb
ja
addr16
pushf
out
inc
shrb
push
xlat
imulb
xchg
jo
lahf
and
jle
sbb
ret
loope
jo
or
rorl
or
data16
out
jecxz
mov
pop
ja
adc
ja
xor
in
or
in
pop
fucomip
add
sbb
adc
in
mov
push
mov
pop
mov
or
es
xor
lods
divl
lcall
fcoml
mov
inc
cmp
add
mov
in
mov
insl
xchg
pop
sub
scas
cmp
add
push
sarb
jle
ss
adc
sbb
out
xor
into
lods
inc
aad
fsubl
sub
and
jne
pop
cmc
lods
jne
push
or
xchg
mov
mov
movsl
xor
mov
push
daa
inc
loope
repz
movsl
xchg
sub
xlat
imul
in
in
pop
test
stos
mov
ret
orb
adc
jae
lcall
cmp
fistps
lret
xor
rclb
xchg
frstor
cld
mov
enter
xor
inc
sub
insl
jl
notb
push
xchg
add
outsl
scas
dec
jge
mov
dec
sbb
add
push
ror
js
addr16
loope
xchg
lock
cmp
test
int3
push
dec
je
cli
mov
xor
movsl
sbb
mov
adc
cmp
popf
xchg
and
ljmp
inc
outsb
xchg
data16
gs
mov
pop
pop
nop
int
dec
imul
push
cld
mov
out
out
add
fwait
movsbl
mov
lock
test
addb
fs
outsl
mov
adc
icebp
adc
je
xchg
add
aam
mov
notl
mov
and
hlt
les
xor
sar
pop
pop
xchg
push
stos
lock
aam
jl
push
int
xchg
popf
xor
sbbb
les
scas
scas
cltd
fcoms
inc
lcall
lods
inc
dec
xor
mov
jecxz
ret
test
add
jns
out
and
or
hlt
ss
adc
sub
push
in
add
mov
mov
cwtl
xchg
add
insb
add
paddsb
push
pop
jb
ss
inc
pop
notb
movsl
pop
shlb
pusha
je
pushf
mov
push
adc
mov
arpl
das
mov
add
push
loope
xchg
addl
jae
cld
fwait
adc
insl
and
xchg
xchg
out
lods
add
add
mov
mov
dec
sbb
rcl
cmpsl
xchg
imul
shlb
mov
push
ds
aad
sub
and
xchg
inc
in
mov
int3
movsl
lock
std
jb
scas
ror
jecxz
mov
mov
pop
mov
aam
inc
mov
mov
cmpsl
loop
mov
gs
and
dec
mov
fwait
sub
popf
xchg
imul
or
xor
cmp
xor
pop
inc
aam
test
cld
or
and
dec
xor
push
mov
push
mov
aas
lret
call
lcall
xor
jge
push
jecxz
psllq
into
frstor
sbb
inc
rcll
fs
dec
add
outsb
jecxz
push
hlt
adc
aaa
test
inc
add
addl
aas
sub
mov
dec
bound
clc
pop
insl
adc
mov
xor
push
movsl
inc
xchg
fisubs
addr16
sbb
cmp
or
daa
or
jle
and
sub
mov
push
xchg
ljmp
nop
mov
xchg
nop
hlt
lock
mov
mov
movb
mov
mov
add
pop
cmp
fdivs
pop
ficoml
add
leave
sarl
push
aas
jl
xor
xchg
mov
xchg
xchg
idiv
sub
mov
imul
inc
sarb
movsb
clc
xchg
sub
inc
pusha
test
sbb
jmp
and
ret
mov
in
pop
ret
inc
pop
dec
clc
subl
dec
outsl
jnp
inc
jnp
or
popf
add
outsl
mov
pop
xor
je
outsl
jle
sub
sti
test
sbb
mov
jl
shll
notl
dec
jns
test
fwait
jb
mov
sbb
shl
mov
lds
repnz
dec
ret
movsb
outsl
rorb
loop
imul
stos
push
xor
jnp
ret
push
push
mov
out
je
leave
jg
push
dec
cmc
add
cmp
daa
push
dec
inc
push
push
out
cmp
das
add
push
xchg
repz
dec
fldenv
sbbb
xor
dec
and
or
test
les
xorl
and
xorl
dec
es
mov
int3
xchg
test
mov
cli
je
dec
xchg
push
add
or
scas
adc
aam
cmp
add
mov
xor
ja
add
sub
jbe
out
jmp
and
cli
mov
adc
adc
inc
fdivl
dec
in
movsl
clts
clc
test
mov
lea
xchg
negl
int
jge
gs
addr16
das
pop
shll
ret
stos
movsb
adc
into
mov
cmp
push
push
insb
add
dec
outsb
aas
roll
sahf
xlat
dec
aam
and
movsl
arpl
ret
xor
xchg
stos
fcompl
js
loop
addl
and
or
inc
ss
sub
xor
push
leave
sub
nop
xchg
jno
inc
jl
or
divb
lret
mov
adc
ja
inc
adc
ja
fstl
cmp
xchg
imul
mov
add
std
cmp
test
xor
mov
les
daa
dec
data16
adc
sbb
or
enter
pop
cmc
xlat
or
in
push
imul
idivb
jge
inc
sbbb
ljmp
jl
mov
xor
sub
mov
notl
outsl
into
jbe
mov
dec
cmp
push
jae
cmpsl
mov
pop
jnp
dec
scas
inc
fiaddl
xchg
popf
gs
mov
xlat
mov
leave
pop
pushf
mov
pop
and
js
outsb
inc
lret
dec
insl
std
dec
or
dec
sti
test
jne
aaa
adc
adc
mov
loop
mov
arpl
add
lcall
and
inc
fsubp
stos
cmp
sub
xor
pop
ror
vsubpd
pop
ja
out
idivb
jbe
ja
leave
pop
nop
out
pop
xchg
mov
mov
js
das
lahf
and
xor
jp
pushf
mov
lds
mov
insl
int
jo
data16
inc
jno
fsubs
mov
dec
fcoms
cs
in
push
in
push
and
aaa
iret
inc
in
ret
fstps
mov
sti
cmp
ds
dec
xchg
sbb
in
enter
lahf
inc
iret
add
dec
nop
or
popa
inc
or
ret
fisubs
sti
fidivl
push
mov
ljmp
and
lods
inc
adc
adc
sbb
push
mov
shrb
ja
in
shlb
add
sbb
shr
shr
jbe
ljmp
adc
into
xchg
sarl
sti
inc
bound
add
rcr
sahf
in
sub
hlt
lahf
js
rcll
nop
fdivrs
addb
cmp
sbbb
xor
std
in
push
push
daa
scas
sbb
arpl
in
add
je
mov
movsl
xlat
fldenv
mov
jns
dec
push
pop
daa
sub
cmp
or
sbb
jmp
xlat
fldenv
mov
jns
dec
push
pop
daa
sub
cmp
or
sbb
jmp
xlat
fldenv
mov
jns
dec
push
pop
daa
sub
cmp
sub
sbb
jmp
xlat
fsubs
or
shr
dec
push
cs
mov
call
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
outsl
push
and
ss
push
jbe
or
jbe
cmp
mov
movsl
xlat
aad
push
and
ss
gs
push
inc
adc
cmpsl
inc
mov
mov
vcvttss2si
cmp
or
inc
jl
dec
push
jbe
xchg
fcomp
subb
inc
dec
and
push
jge
cltd
mov
dec
add
imul
fstpl
lret
push
test
adc
push
lcall
xchg
pop
imul
mov
cmp
cmpsl
mov
hlt
icebp
cmp
fs
inc
mov
pop
xchg
lds
mov
cmp
mov
pusha
push
inc
jo
mov
jp
imul
xchg
sub
aad
fucompp
dec
fnstenv
and
aaa
push
jbe
jns
addl
in
pop
mov
add
mov
enter
mov
outsb
decl
pop
xchg
push
test
xlat
cmc
xchg
push
and
ss
jg
push
pop
jbe
xchg
mov
std
aad
fdivl
jo
popa
ja
add
and
sub
shl
out
jmp
cltd
mov
xchg
mov
mov
jp
outsb
pop
push
add
add
jecxz
in
shl
nop
mov
lds
jo
add
push
push
inc
jbe
xchg
mov
in
aad
push
and
ss
gs
push
inc
jbe
xchg
mov
in
aad
push
out
dec
dec
insl
icebp
pop
mov
aad
xor
mov
mov
dec
movsl
push
mov
mov
lock
push
mov
ljmp
incl
loopne
sbb
or
lds
sbb
scas
mov
add
aas
cmp
les
lds
ss
add
push
add
insb
sti
repnz
sbb
and
xchg
adc
fsubrs
ds
sbb
or
das
push
inc
repz
push
mov
push
lock
incl
sbb
mov
push
sbb
mov
mov
jge
mov
outsb
cld
pushf
rcr
gs
aam
ja
sub
ljmp
jae
repnz
repz
xchg
jmp
mov
jne
xchg
shlb
push
and
mov
sahf
sbb
enter
leave
cltd
pop
push
ret
cwtl
in
fcomip
and
pop
mov
fwait
lea
cwtl
or
adc
jge
jl
lods
sub
pusha
xchg
aaa
mov
in
xlat
int3
mov
mov
cmp
stos
outsb
xchg
xchg
cltd
lea
enter
fcmovne
sti
sub
lds
icebp
add
imul
or
into
sarl
shr
cmp
inc
outsb
sub
lods
int
fdivrs
add
and
xor
push
loop
xlat
push
add
sarb
xor
shlb
out
dec
stc
mov
jle
and
inc
mov
cmp
das
repnz
push
shrb
push
mov
dec
fidivl
mov
outsl
cltd
imul
int3
sbb
pop
lock
pushf
cmc
xchg
rorb
sbb
and
inc
mov
mull
mov
jnp
movsl
push
rcrl
sub
cs
adc
adc
jp
or
sub
sub
in
clc
ret
cmpsb
xchg
xor
arpl
or
test
cld
test
mov
lahf
pop
popa
arpl
or
fs
lret
shrl
cmc
mov
in
loopne
adc
xchg
xor
lret
popa
dec
leave
leave
ja
or
dec
or
jno
jmp
rcll
scas
cmp
adc
arpl
push
loopne
test
or
xchg
mov
mov
fs
dec
jge
pushf
fcomi
out
and
or
pop
fidivrl
cmp
jg
pushf
popf
fwait
xchg
xor
stc
mov
or
push
cmp
fstl
test
mov
xor
scas
mov
in
xchg
outsb
sub
jmp
mov
cs
stc
and
sarl
sti
repnz
jne
movsl
fidivrs
and
pop
movb
sar
jbe
pop
sbb
jl
push
xchg
leavew
inc
pop
fstpt
arpl
cwtl
mov
andb
push
mov
dec
xchg
mov
push
pop
aad
in
sub
push
push
inc
adc
ljmp
adc
addr16
and
pop
shl
mov
bts
sub
ret
push
adc
call
mov
xchg
icebp
inc
sbb
push
jle
mov
loope
cltd
push
dec
adc
xchg
pop
repnz
adc
in
jg
dec
inc
inc
add
sub
mov
pushf
mov
pop
dec
jmp
cmp
les
xchg
adc
jb
stos
rclb
mov
xchg
inc
cwtl
gs
jno
mov
mov
lret
mov
sub
xchg
js
sbb
xchg
pushf
and
outsl
push
jae
push
ret
sub
insl
in
jae
fcomps
push
loope
je
jnp
je
popf
js
pop
ljmp
adc
add
in
dec
sarb
adc
addl
inc
hlt
mov
push
push
xor
mov
xchg
pop
leave
divl
jg
push
fdivrl
les
andl
pop
cld
sbb
pop
fstpt
pop
jge
loopne
scas
pop
outsl
inc
xchg
scas
xchg
xlat
test
xchg
sbbb
jmp
xchg
push
push
add
dec
cli
pop
stc
push
pusha
notl
shlb
clc
ja
int3
xor
scas
inc
mov
xchg
inc
inc
sahf
jb
insb
inc
mov
pop
sub
ret
or
add
and
mov
imul
mov
pop
cli
lahf
pusha
bound
mov
jl
fucom
scas
sahf
mov
test
rorb
inc
pop
mov
jle
fwait
sbbb
fistl
inc
jge
int3
xchg
and
std
inc
pop
jb
jecxz
pop
pop
adc
clc
adc
rorl
aas
icebp
jae
push
out
push
jnp
jae
mov
mov
mov
loop
push
call
add
jnp
pop
xor
ss
scas
clc
icebp
outsl
pop
adc
outsb
mov
int3
int3
in
push
push
shrl
out
popf
stos
je
loopne
js
aas
loopne
clc
xor
pop
stos
into
imul
inc
push
and
cltd
mov
popf
inc
test
and
iret
pop
test
jbe
lcall
adc
pop
in
xor
push
sub
xlat
mov
mov
fwait
pusha
fimull
push
mov
mov
mov
mov
mov
enter
mov
adc
lret
push
fimull
mov
or
dec
lock
jnp
pop
mov
ret
iret
push
jbe
and
mov
mov
inc
push
mov
movsb
fldenv
movsl
mov
icebp
popf
fisttps
mov
out
das
mov
addr16
punpckhdq
test
inc
or
and
fmuls
jbe
aas
adc
mov
insl
xchg
push
pop
scas
je
push
dec
pushf
ss
jae
arpl
lods
push
cmc
ror
jne
push
xchg
inc
jecxz
push
dec
enter
mov
xchg
mov
mov
orb
addl
fucomi
adcl
add
mov
xor
dec
sbb
and
std
sbb
sbb
push
and
lret
and
jb
repz
add
fstpt
push
out
xor
lahf
call
or
pop
xor
hlt
ljmp
ja
xor
cli
rol
or
mov
pop
and
mov
sbb
mov
fidivs
cltd
insb
sbb
das
ja
xor
xchg
jg
sbb
add
pop
cmp
cmp
shr
popl
shl
rolb
test
pop
fnstcw
dec
imul
adc
lret
mov
xor
cld
mov
mov
fnstsw
cmp
pushf
push
out
sub
inc
loopne
jge
mov
xchg
or
mov
lods
fidivl
ret
or
dec
xchg
insl
push
push
enter
ss
sbb
in
xchg
sub
daa
je
and
repz
into
test
iret
sbb
int3
cmpl
ds
lods
sbb
test
ret
aam
loop
ret
pop
push
mov
cmp
fcoms
je
cwtl
sarl
flds
lods
mov
xor
sbb
xchg
int
les
inc
shrb
lret
inc
mov
sbb
mov
dec
inc
repz
and
ss
mov
sub
mov
mov
shrl
push
ds
push
in
adc
and
addr16
mov
mov
bound
xlat
jg
push
jb
cmp
pop
push
loop
push
ljmp
icebp
push
sub
or
push
fwait
lret
jp
xchg
mov
rorb
sub
inc
lods
call
icebp
scas
movsl
cmp
pop
outsb
or
lret
xor
pop
inc
insb
nop
push
adc
arpl
dec
pop
ljmp
repz
ss
aas
xor
push
push
pop
cmpsl
icebp
cmovge
dec
cli
jg
cmpsb
push
inc
xchg
es
hlt
adc
jmp
in
andl
or
xchg
icebp
cmp
cmpsl
cmp
icebp
inc
mov
mov
das
lods
sbb
hlt
addl
push
nop
aam
mov
mov
mov
outsl
push
jg
out
xlat
mulb
cmp
adc
ljmp
rolb
adc
sub
mov
jge
insb
ja
jl
inc
sbb
inc
sbbl
hlt
pop
add
mov
int
cmp
les
subb
stos
outsl
add
out
repz
popf
jecxz
faddp
cli
test
jp
add
xor
sbb
and
std
push
fwait
loop
icebp
fisubl
adc
sbb
stc
adc
jae
or
test
pop
xchg
mov
fcmovbe
push
pop
and
add
inc
jae
ret
xor
pop
paddd
arpl
xlat
jne
jl
in
jns
lods
aaa
clc
scas
cmp
dec
mov
dec
push
fisubs
ret
out
and
dec
cltd
cwtl
inc
dec
mov
or
add
mov
lds
cld
mov
and
incb
cmp
insl
lock
xchg
adc
xor
repnz
rep
and
and
inc
pop
or
pop
imul
dec
sub
jae
sbb
jmp
cmp
mov
inc
das
in
sub
ds
cs
mov
mov
mov
fsubr
mov
cmpsl
jge
jge
cld
mov
js
in
sbb
sub
mov
sub
aaa
cli
cmpsb
test
push
xchg
mov
mov
rcrb
jnp
mov
ret
sti
bound
cmp
loop
dec
lcall
imul
lods
ss
cmp
mov
jmp
std
mov
xchg
mov
push
pop
mov
test
imul
mov
push
jl
jnp
xchg
jl
in
dec
cli
das
hlt
cmc
xchg
js
jg
cmpb
mov
push
data16
push
jae
mov
push
and
popa
in
imul
add
jae,pt
mov
or
sbb
or
out
dec
call
scas
and
and
in
notb
sti
jo
push
inc
lret
pop
mov
cli
test
push
xor
aas
test
rcrl
xchg
decb
fldl
dec
aam
add
lock
push
mov
mov
mov
loopne
or
dec
xorb
cmp
lods
adcb
std
dec
shlb
stos
fstps
jne
xchg
sarl
jl
fcoml
or
push
jecxz
push
push
loopne
iret
aam
xchg
imul
mov
push
adc
lds
xchg
js
scas
out
lcall
lcall
std
mov
aas
fisubs
jbe
add
dec
mov
mov
clc
pop
movsl
pop
pop
xchg
lea
ror
movsl
pop
xor
mov
imul
fsubs
fildll
fwait
loop
repz
adc
add
push
xchg
fadds
push
call
scas
lcall
lcall
lea
or
call
xor
and
mov
cmp
mov
imulb
repnz
filds
inc
mov
push
insl
or
and
adc
lods
jb
fdivrl
mov
pop
push
lods
icebp
dec
ss
dec
std
mov
movsl
cmpsb
sub
add
popa
in
rclb
fwait
and
mov
mov
hlt
cmpb
fisubl
push
and
mov
les
andl
mov
enter
stos
neg
dec
add
mov
ljmp
jge
fldt
fdivrp
hlt
xchg
and
push
cli
inc
bound
out
cltd
fcmovu
repnz
xor
xchg
cmp
sbb
sbb
add
leave
daa
push
ds
fldenv
insb
daa
cld
cmpsb
lcall
mov
mov
std
add
out
dec
sbb
and
ss
cmpsl
mov
mov
xchg
daa
bnd
mov
pop
cli
jae
stos
pop
in
mov
mov
imul
ss
cmc
jne
add
jbe
xlat
mov
out
or
jne
ret
insb
test
sbb
jne
icebp
mov
jmp
les
xchg
mov
sub
jg
push
or
sbb
xor
xchg
cmp
fwait
sbb
fs
shlb
dec
and
icebp
insl
not
jecxz
std
scas
loop
pop
insb
mov
js
lcall
in
movsl
mov
jle
lret
lret
mov
push
decb
and
sub
inc
test
and
test
cmp
or
ja
cwtl
inc
add
pop
xor
addl
shr
cs
in
jle
mull
cmpsl
pop
add
into
or
jmp
test
pop
cmpsb
rcr
pop
popf
or
pop
adcl
cmp
das
andl
adc
cmpsb
into
rcl
stc
jno
addb
in
addl
adc
push
shrl
jmp
andb
lods
xchg
push
jge
loop
aad
mov
or
push
adc
mov
bound
mov
pop
data16
cmp
sub
jecxz
shl
outsl
inc
adc
pop
dec
call
cli
mov
imul
xor
rol
or
insb
ret
xchg
add
xchg
add
push
movsl
mov
inc
dec
int
cltd
aad
lods
movsb
lret
bndldx
ljmp
lock
imul
jl
adc
or
arpl
xchg
ja
leave
mov
xchg
xchg
pusha
xchg
aam
pusha
pop
insb
push
ds
mov
add
inc
cmp
lcall
lahf
pop
add
sbb
test
sarl
dec
bound
ja
lods
out
jp
lret
mov
fbld
sbb
and
out
dec
fnstsw
sbb
xchg
jmp
inc
faddp
clc
lahf
sbb
int
cmp
adcl
fs
int
cmc
lock
push
and
sub
jnp
xchg
arpl
add
shrb
add
mov
dec
rcrb
and
add
fstpl
nop
aas
push
adc
cmp
sub
xchg
loop
mull
sti
add
or
cmp
fmuls
ret
mull
mov
jnp
inc
jg
scas
mov
in
add
pop
and
std
jb
int3
sar
imul
divl
xchg
sub
mov
mov
sarb
sbb
movb
ret
sbb
and
inc
jae
push
push
mov
xchg
iret
push
fiaddl
fdivl
orb
jge
mov
rcll
repz
sti
dec
ja
mov
adc
int
or
jge
sbb
pop
leave
or
ds
cwtl
cmc
pop
movsl
pop
dec
repnz
cmpsb
clc
imul
sbb
pop
cmp
popf
xchg
ret
sti
les
repz
mov
pop
lea
movsb
xor
mov
mov
sbb
loop
adc
cmpsb
inc
test
push
pusha
dec
pop
mov
insb
mov
mov
leave
mov
push
hlt
fdivrs
loopne
shlb
lea
xor
rorl
jae
jnp
nop
aad
dec
sahf
imul
and
dec
pop
sub
push
jmp
mov
dec
stos
outsb
xlat
es
cld
aam
nop
fs
data16
stos
lods
mov
jge
and
negl
xchg
iret
mov
push
sub
cmp
sbb
iret
je
clc
mov
push
push
fiaddl
mov
daa
mov
test
rorl
xchg
out
cmp
nop
repnz
gs
adc
mov
rcll
mov
jae
pusha
call
cmpsb
cmp
mov
and
sahf
adc
mov
ss
fwait
add
inc
push
or
fwait
testl
fidivs
int
pop
xor
mov
jmp
sahf
fs
mov
lcall
movsl
pushf
add
mul
lds
pop
mov
rcll
sub
je
pop
push
jne
jmp
inc
inc
popf
xor
loop
stos
inc
jmp
sbb
mov
pop
addr16
or
jo
push
sub
cmp
aas
jl
xchg
leave
or
xor
add
aam
sub
xchg
movb
lahf
sbb
inc
dec
push
dec
or
out
mov
loope
xchg
pop
hlt
jmp
sbb
dec
jne
inc
mov
inc
push
vunpcklps
xor
inc
fnstcw
jns
sbb
or
adcl
adc
inc
or
adc
jns
push
imull
mov
mov
jmp
fdivs
xchg
fidivl
data16
cmp
dec
test
and
push
not
bnd
rcr
mov
mov
pop
inc
dec
lods
stc
imul
push
inc
or
jecxz
mov
push
jb
push
push
sub
dec
jbe
inc
add
test
xchg
jle
inc
mov
and
stos
pop
push
leave
cmp
mov
adcl
sub
stos
and
es
das
push
and
rcll
push
jbe
loopne
lea
call
in
jae
sahf
sbb
push
push
xor
adc
mov
jo
scas
mov
inc
dec
cmp
jbe
ja
movsb
xchg
aas
jo
jno
or
into
inc
aaa
xor
iret
inc
xchg
jns
adc
pop
or
pushf
gs
ljmp
sarb
mov
pop
imul
mov
mov
stc
mov
pop
xchg
push
mov
xor
fs
sub
pusha
pop
mov
pop
loopne
lock
pop
mov
sbb
hlt
push
daa
dec
xlat
and
dec
mov
adc
mov
inc
call
lahf
sub
xchg
xor
mov
daa
adc
out
lea
loop
pop
cmp
cltd
jnp
stos
add
inc
push
cwtl
pop
jle
dec
dec
pop
push
adc
ja
cmp
inc
inc
or
and
fisttps
sbb
pop
sbb
cmpsb
lods
sbb
leave
adc
fbld
out
inc
jne
dec
xchg
frstor
add
xor
rorb
push
jbe
dec
cs
fisubl
mov
fnstsw
inc
mov
insl
adc
sbb
cmc
clc
xchg
std
fsubrp
fiadds
int
ret
adc
mov
clc
add
in
sbb
mov
lds
inc
adc
into
in
cwtl
shr
fsubs
mov
pcmpgtw
pop
test
pop
jb
push
icebp
adc
scas
mov
pop
push
sti
jle
shrb
cwtl
jg
mov
add
and
add
push
xor
fldenv
fdivr
and
out
pop
fsubl
mov
dec
cmc
inc
lcall
dec
mov
adc
arpl
inc
ds
gs
xlat
pop
int3
fisubrs
cmp
pop
mov
addr16
sbb
sbb
cmpl
cltd
xchg
dec
lods
mov
mov
jo
or
cmp
dec
outsl
mov
scas
andb
jb
lods
adc
sbb
xor
xchg
cmp
push
or
fcompl
jecxz
cli
cld
lahf
loopne
jb
pop
pop
aad
test
das
xchg
or
sbb
cmc
in
lock
fidivrl
shr
xlat
loop
mov
cmp
pop
testb
stos
pop
rcl
scas
imul
xor
js
bound
jno
repnz
add
jae
js,pn
mov
adc
or
mov
pop
flds
lds
scas
xor
in
push
stos
fistpl
dec
arpl
loope
and
cmp
jg
lds
adc
add
pop
leave
out
add
mov
mov
ljmp
iret
mov
dec
cmc
jns
ss
push
mov
cld
add
imul
push
inc
es
or
gs
dec
xchg
aad
lods
das
aad
sbb
out
hlt
shll
ret
and
les
mull
mov
dec
sbb
cltd
jecxz
icebp
cmp
inc
or
mov
sbb
lock
loopne
add
cmp
in
stos
out
popf
dec
int3
xchg
inc
inc
mov
or
sarb
or
mov
jne
pop
inc
cmc
movsb
add
in
mov
loop
mov
mov
lock
int3
lahf
mov
ss
cmp
xor
sti
pop
jbe
sub
push
push
pop
pop
sub
test
and
into
dec
xchg
push
int3
add
pop
fldt
sub
xchg
in
mov
dec
in
in
cmpsl
fisubrl
std
dec
cmp
mov
into
add
push
jge
mov
push
loop
mov
jnp
xchg
mov
pushf
pop
add
das
or
fcoms
xchg
jno
lock
rol
mov
ret
xchg
dec
sub
loop
cltd
adc
movsb
mov
jne
out
sti
add
pop
adc
lahf
fbstp
sahf
clc
mov
jbe
sahf
xchg
fdivrl
outsl
mov
cltd
inc
arpl
les
mov
clc
sbb
xchg
add
fdivr
mov
fimull
push
mulb
add
push
push
inc
jbe
xchg
mov
in
aad
push
and
ss
gs
push
inc
jbe
xchg
mov
in
aad
push
and
ss
gs
push
inc
jbe
xchg
mov
loope
aad
hlt
testb
adc
and
add
push
aad
lds
aas
cmpsb
test
orb
sub
cmp
iret
jo
lahf
out
scas
mov
fisubl
pop
adc
jg
cmovg
pop
das
jg
jg
fistps
iret
lahf
fildll
or
jg
cvttps2pi
das
outsl
aas
jg
xchg
fistps
lahf
scas
idivl
and
femms
insb
xor
jg
mov
xor
and
push
inc
jno
xchg
imul
shlb
ficoms
daa
add
inc
lahf
and
push
ja
shl
xchg
aas
cmpb
lret
jns
outsb
xor
jo
sbb
cltd
dec
fbld
loopne
icebp
mov
jg
cli
mov
lods
xchg
aas
jg
lahf
sub
clc
out
pusha
pop
divb
shl
mov
add
sbb
mov
pushf
mov
jle
push
add
out
mov
decb
push
pop
loop
hlt
aas
pop
daa
lahf
rcl
outsl
aas
xor
daa
jg
scas
add
adc
or
scas
jb
push
sbb
lahf
cmp
sub
nop
cmp
mov
mov
lahf
fildll
pop
pop
pop
outsl
ss
xorps
dec
das
outsl
aas
sbb
scas
mov
mov
cmpl
aas
data16
jp
push
mov
pop
or
outsl
dec
adc
fistpll
in
ljmp
jle
pop
jg
clc
cmp
push
sbb
into
lcall
out
mov
pop
outsl
das
jg
cmovg
pop
das
outsl
aas
jg
fistps
iret
lahf
fildll
maxps
outsl
das
jg
cmovg
pop
das
outsl
aas
jg
mov
lods
pop
repnz
mov
cld
cltd
mov
adc
es
mov
cmpsb
inc
mov
je
mov
daa
cwtl
ljmp
cmp
jg
fmull
scas
clc
xor
lds
out
sbb
sbb
aam
sub
lds
cmpsb
jnp
cmp
inc
xchg
push
fbld
or
inc
jmp
lds
mov
lock
adc
xchg
insb
xor
leave
pop
sbb
andb
mov
fsub
pop
xchg
adc
inc
test
mov
jecxz
jg
and
cmp
sarb
cmpsl
cmp
add
popa
lcall
xchg
jmp
in
mov
fisubrs
xor
aad
mov
xor
or
insl
popf
test
lahf
jmp
mov
mov
sti
mov
out
mov
inc
aaa
fdivs
pop
rcrb
xchg
enter
jbe
vunpcklps
inc
pop
xor
jmp
sub
and
cli
popa
cmpb
jmp
lods
push
jl
mov
sbb
cmp
pop
cmp
cmc
dec
mov
mov
push
pop
jmp
push
add
scas
mov
xchg
fcmovnu
jle
or
and
jg
and
jle
xchg
xchg
sahf
clc
in
xlat
mov
gs
sbb
push
xchg
cmp
push
or
and
push
and
incb
sub
insb
sbb
inc
sub
or
pop
jp
clc
inc
fcomps
and
mov
and
jmp
sbb
fisubrl
subb
cmp
inc
mov
cmpsb
mov
cs
ja
fcmovne
xlat
dec
push
mov
pop
stos
adc
push
jno
mov
inc
ficoml
xor
sbb
mov
shlb
cmp
xchg
xor
or
pop
dec
cmp
int3
js
scas
push
fadds
mov
adc
dec
jmp
push
cmpsl
stos
or
adc
dec
test
into
lods
fbstp
fcompl
sarl
outsb
mov
mov
dec
jbe
add
pop
xor
pop
or
pop
loope
test
mov
jnp
push
xchg
addr16
xchg
mov
ret
in
subb
arpl
xor
sub
xor
rep
scas
popa
das
cld
cs
xchg
adc
loope
or
cltd
loop
insb
sbb
fldlg2
inc
test
imul
pop
lods
mov
stos
jae
test
mov
xlat
popa
scas
push
jecxz
pop
sub
cmpsl
mov
rorl
push
sub
push
xlat
pop
dec
xchg
dec
repnz
je
fsubs
xchg
pop
add
mov
inc
ds
cltd
jmp
dec
ja
cmc
ja
push
mov
test
push
imul
jb
mov
xchg
loopne
mov
bound
push
inc
enter
lods
pop
pusha
pop
rcrl
mov
dec
mov
push
push
pop
pusha
jns
ret
aaa
jns
mov
clc
jl
int3
repz
imulb
out
outsb
adc
cmp
xchg
xchg
pop
xor
pushf
adc
js
pop
and
push
mov
leave
ss
sbb
xchg
iret
in
mov
fistl
orb
or
jae
data16
jp
roll
dec
sub
add
or
inc
inc
mov
test
or
mov
mov
stc
push
inc
adc
pusha
pop
jge
jge
jb
pop
repz
fbld
loopne
dec
ficoms
ret
shlb
pop
jecxz
inc
dec
pop
and
mov
mov
pop
decb
pop
sbb
add
jnp
ljmp
icebp
push
cmp
xlat
lcall
inc
lea
scas
inc
lret
mov
cmp
daa
pushf
stc
insl
and
test
lods
mov
cs
cld
lret
jmp
lock
sbb
sbb
setno
popa
ljmp
dec
das
hlt
clc
cmpsl
push
cmp
cmp
pusha
jbe
xchg
push
mov
cmp
fs
cltd
sub
xor
fwait
daa
sbb
inc
andl
cmpsb
fs
xor
movsl
outsl
sbb
push
enter
std
mov
lret
push
js
bound
test
mov
sbb
repz
mov
or
jnp
shrb
mov
ficoms
cmpsb
popf
add
add
stos
aaa
into
test
lcall
movsl
xchg
push
pop
mov
lret
lock
mull
out
sbb
leave
leave
out
stos
sub
in
out
xchg
mov
cmpsb
jl
dec
into
dec
mov
push
clc
jae
adc
in
sbb
add
xor
cmp
mov
ds
out
outsb
jge
lea
insb
mov
in
inc
scas
mul
xor
pop
xchg
sub
js
inc
inc
into
push
mov
xchg
and
insl
sub
stos
sbb
push
add
xor
dec
nop
cmpsl
xchg
cld
jno
cli
fstl
mov
or
dec
fs
stos
or
notl
ret
fsubl
rol
push
pusha
push
dec
cwtl
mov
gs
xchg
scas
push
push
inc
sti
mov
mov
jecxz
mov
daa
ja
out
inc
popf
inc
ljmp
lcall
jb
xlat
in
dec
repnz
push
bound
xor
push
cmp
pusha
hlt
sar
add
testl
insb
mov
cli
jmp
push
lods
cmp
pop
std
clc
movsl
outsl
test
scas
mov
dec
aas
stos
add
jnp
xlat
sub
outsb
aad
and
into
stc
mov
jo
aas
jmp
mov
jnp
pop
mov
adc
std
call
mov
cmpsb
jp
dec
mov
jbe
cwtl
call
sub
sbb
jle
into
mov
cli
xchg
jns
stc
sbb
mov
add
in
jge
fiaddl
sub
scas
mov
aam
sbb
stos
cmp
fisubs
mov
jne
mov
ret
push
cmc
pop
out
aam
pop
lods
cmp
sbb
and
lea
xor
repz
pop
aam
dec
pop
push
mov
push
mov
mov
cmp
inc
fadds
call
mov
mov
ljmp
or
stos
cmc
rcr
ret
or
jne
push
cwtl
out
cmpb
imul
es
ljmp
scas
icebp
and
push
jnp
dec
jno
shlb
cmp
stos
dec
insb
mov
pushf
lea
or
mov
lock
movsb
clc
pop
pop
dec
push
inc
in
cld
and
das
dec
outsl
fs
add
outsl
fsubr
shl
inc
iret
and
dec
popa
aad
sbb
fs
and
dec
cs
sbb
out
pushf
inc
mov
dec
mov
mov
incl
sbb
jp
push
adc
rcrl
adc
jo
rol
mov
mov
addl
mov
pop
in
pop
daa
movsl
push
push
xchg
fsubl
nop
loop
mov
pop
push
jp
jp
dec
cwtl
lret
xchg
cmp
sbb
sbb
cli
or
aaa
ftst
les
inc
xor
das
mov
mov
shlb
mov
sti
jae
ja
es
jnp
inc
xor
push
bound
call
cli
rclb
sub
pop
arpl
idivl
inc
push
mov
rclb
mov
dec
rolb
pop
out
mov
sub
out
push
popa
and
pop
cmpsb
std
fcmovnu
mov
iret
jge
out
inc
sub
cmpsb
adc
dec
lock
add
sti
repz
sbb
mov
lds
mov
insb
jns
outsb
add
push
sub
inc
sub
mov
aas
cmp
pop
add
jle
andl
push
fstps
push
add
int3
imul
cld
jne
pop
inc
outsl
and
sub
fs
mov
xchg
push
and
cwtl
push
enter
shr
cmp
adc
mov
pop
call
subl
adc
jg
pop
push
cmp
cld
test
jnp
push
xorl
outsl
bound
add
daa
and
pop
xchg
mov
int3
xchg
dec
push
mov
sub
aad
dec
xlat
sub
addr16
lock
mov
xchg
gs
mov
repz
dec
data16
nop
xchg
xor
clc
jmp
and
fcomi
roll
mov
pop
test
pop
cld
movl
bound
add
sarl
jmp
jecxz
test
pushf
out
mov
xchg
addr16
adc
jmp
icebp
out
mov
cwtl
mov
rorl
arpl
mov
jmp
int3
inc
sbbb
scas
outsl
push
sbbl
scas
inc
jns
cmp
mov
mov
in
cmp
into
test
iret
adc
mov
xchg
mov
xor
pop
loope
pop
hlt
aas
aad
hlt
pop
jbe
leave
pushw
inc
jmp
test
inc
rorb
movsl
arpl
adc
xor
or
push
cltd
lret
xor
mov
mov
push
mov
or
dec
imul
mov
push
push
scas
pop
xor
je
push
mov
leave
adc
fmull
xchg
mov
das
shlb
shrd
push
xchg
fcoms
adc
inc
pop
xlat
mov
sub
rclb
aam
sub
cmp
and
mov
fistl
dec
or
xor
pop
stc
fstp
pop
add
fwait
push
jb
sub
inc
ret
call
andb
mulb
add
and
sahf
push
sub
mov
and
mov
das
xor
pop
movsl
dec
pop
fildl
sbb
cld
inc
mov
jle
test
testl
mov
push
mov
cld
inc
mov
or
pop
jle
jb
xchg
outsb
xor
cld
xchg
and
push
aas
cmp
jno
add
imul
push
lret
sahf
jb
mov
bound
pop
xchg
lcall
sti
cmp
pop
or
aam
shrl
dec
mov
mov
imul
or
and
inc
cli
aaa
mov
mov
data16
lahf
nop
xor
fwait
test
popa
xchg
stos
xchg
dec
ret
mov
nop
mov
jnp
pop
dec
pop
or
leave
add
loop
cli
inc
mov
loope
sarb
fbld
mov
lret
adc
sbb
addl
je
dec
push
pop
shll
pop
out
insb
cmp
pusha
movsb
enter
cmp
xchg
mov
fcoms
imull
and
sbb
mov
pop
jecxz
inc
ret
mov
bound
cmp
or
mov
add
jle
pusha
stos
outsl
inc
push
popa
popa
fisttpll
data16
adc
dec
cltd
fimuls
out
mov
inc
imul
xor
mov
clc
inc
pushf
jge
cmp
loop
insl
addb
pushf
inc
sub
enter
cltd
push
je
mov
insl
adc
pop
les
lret
addr16
jg
popa
scas
popf
scas
lea
mov
jge
push
les
or
lea
loopne
jno
mov
imul
out
movsb
jnp
aas
pop
ret
and
cmp
xor
sub
repnz
out
dec
push
rcr
push
lods
imul
push
adc
test
es
movsl
or
outsl
lds
repnz
pop
cli
mov
adc
inc
flds
xchg
pop
inc
repz
mov
cmp
fwait
jmp
mov
popl
lahf
fisttps
jecxz
cltd
mov
jg
push
add
daa
cmp
cld
rorb
mov
ds
dec
faddl
push
add
inc
pop
ret
lret
push
xlat
test
xlat
or
loop
hlt
jp
lods
and
stos
in
jbe
jo
push
out
sahf
and
pop
push
call
lret
and
xchg
aaa
mov
push
push
sub
cmp
sbbl
or
mov
xchg
mov
ret
cmp
mov
xlat
divl
mov
enter
je
movsb
in
inc
and
ljmp
wbinvd
insb
xor
aas
dec
mov
and
out
mov
loop
insl
sub
comiss
inc
nop
hlt
ljmp
jg
mov
dec
cmc
sub
adc
jnp
cltd
pop
stos
sub
mov
lea
mov
idivl
jae
push
stos
leave
jae
push
popa
fdivr
call
jo
in
in
push
adc
cld
in
push
jle
xchg
repnz
pop
pop
mov
mov
mov
mov
icebp
lock
insb
add
mov
cmpsb
sbb
pop
stc
fdivr
in
cltd
sub
add
out
push
cmpsl
add
xchg
sbb
xchg
and
movsb
push
adc
movsb
xor
adc
stos
in
les
dec
pushf
pop
add
jae
sti
mov
fwait
push
xor
repnz
xor
mov
aad
lret
jae
ret
cs
sbb
sti
scas
lcall
jecxz
and
mov
mov
mov
sub
and
fdivrp
loop
iret
adc
dec
mov
in
fcompl
xorl
push
in
or
arpl
push
outsl
aaa
fldl
adc
mov
iret
imul
ds
test
xchg
mov
jp
cld
xchg
jne
sbb
cmpsb
fmull
mov
jae
inc
push
daa
jge
and
push
cmpsb
or
lea
mov
in
dec
mov
mov
daa
popf
enter
pop
sahf
push
and
repz
xchg
test
scas
dec
mov
outsl
pop
or
cmc
movsl
cwtl
cltd
add
and
pop
mov
dec
jge
stos
out
ljmp
ja
repnz
mul
inc
xchg
fwait
inc
mov
add
repnz
aaa
mov
push
cmpsb
sbb
shrl
into
dec
lahf
cmp
sti
jle
mov
adc
push
cld
mov
xchg
scas
dec
pop
add
fwait
mov
dec
and
ljmp
ljmp
mov
xor
mov
lret
mov
out
mov
sub
lods
aad
xorb
out
leave
fsubrp
push
lds
hlt
push
cmpsl
fimuls
xchg
out
adc
cld
popa
scas
jmp
mov
and
out
mov
and
jl
jecxz
push
dec
or
adc
shl
in
addr16
add
addr16
test
and
xchg
addl
xchg
sub
mov
dec
ja
pushf
neg
dec
xlat
je
lret
fidivl
mov
push
pop
xlat
cli
add
fs
push
lock
cmc
aaa
call
xchg
mov
push
add
jne
test
mov
out
mull
mov
gs
adc
push
mov
jmp
pop
mov
cmp
arpl
jg
fwait
push
lods
aas
fs
fildl
jle
iret
inc
pusha
pop
mov
pop
pop
add
adc
movsb
std
dec
or
pop
icebp
push
dec
cwtl
out
mov
cmc
adc
lahf
mov
xchg
sub
daa
mov
add
mov
andb
push
lds
outsl
push
mov
push
ja
lret
out
xor
cmpsl
in
sbb
push
movups
sub
popa
sbb
mov
jp
popf
outsl
jmp
call
loope
popa
data16
jae
xor
out
repz
sub
fwait
insl
pop
scas
xor
pop
and
push
sbb
in
test
or
pop
lahf
jmp
jb
loop
je
popf
hlt
inc
push
repnz
enter
lea
out
rcrb
aam
imul
sbb
adc
out
jno
xor
sbb
push
push
adc
sub
xlat
or
adc
pop
push
sub
push
test
pop
add
sarl
lock
les
mov
dec
out
and
mov
pop
das
adc
lds
push
ret
aam
lea
mov
lahf
add
adc
testb
scas
ja
cmp
dec
mov
dec
arpl
loop
jb
or
arpl
fdivrl
std
or
decl
xchg
jae
gs
test
dec
adc
enter
imul
jbe
sbb
adc
sti
ss
in
jbe
enter
clc
sub
outsb
adc
mov
insl
jno
push
sbb
mov
mulb
adc
or
push
cmpsl
sbb
dec
cmp
loopne
dec
stc
lahf
pop
pop
fdivr
jmp
mov
popf
lret
bound
pop
stos
xchg
cs
mov
in
mov
inc
fistps
jg
xchg
pop
loope
jle
mov
movsl
lock
scas
jge
mov
aaa
mov
xchg
mov
cmp
int
jg
push
cmp
arpl
mov
cmp
add
sbb
mov
xor
xchg
aam
mov
jg
in
imul
leave
outsb
mov
and
imul
adc
pop
sub
xchg
sti
pop
mov
add
add
jl
ficoml
idivb
jb
jecxz
imulb
in
arpl
pop
in
outsl
les
xchg
jne
sahf
mov
jecxz
cs
sbb
jle
xchg
test
xor
mov
xchg
push
cmpsl
xor
or
cmp
jmp
mov
mov
pop
sub
cmp
int
mov
push
xor
inc
bound
call
iret
or
dec
xor
nop
sbb
sti
add
mov
test
js
xor
popf
mov
push
in
xchg
push
fadds
mov
xchg
int3
cs
fnstenv
scas
push
push
es
fdivrs
cmp
cld
repnz
imul
in
mov
sbb
jns
call
pop
sub
mov
sbb
pop
push
loop
inc
sbb
cmpsb
mov
div
mov
subb
xor
popa
jae
rcr
mov
inc
mov
push
or
pushf
jns
mov
rcl
jg
sbb
icebp
inc
push
lret
scas
jp
cmp
push
xor
pop
roll
cmp
cmp
pop
loope
das
test
fdivl
cltd
popf
dec
pop
addl
and
cmp
or
mov
mov
sub
inc
ret
rcr
in
test
add
popl
and
cmc
sub
sbb
data16
mov
aaa
cmpsl
loop
add
orl
js
adc
cmp
rol
movsb
vpmulhw
call
inc
mov
pop
and
mov
cwtl
out
pop
rcrb
cmp
test
sub
enter
jbe
xchg
sub
pushf
and
xor
sub
add
jbe
mov
rcll
es
and
test
mov
arpl
pop
ficoml
movsl
mov
push
leave
or
mov
mov
xchg
fisubl
out
or
ret
inc
cmp
mov
sub
push
shl
fildll
xchg
pop
cmp
pop
pop
jle
jns
dec
out
cmp
ss
mov
mov
out
int3
or
lods
lock
jle
in
out
push
sbb
xchg
xchg
mov
jb
lcall
sbb
icebp
lds
scas
mov
loope
int3
call
pop
pop
xchg
lods
jl
neg
scas
pop
pop
mov
lret
push
cmp
pop
cmp
ret
mov
add
jne
mov
push
es
popf
adc
push
mov
adc
pop
sub
pusha
mov
cwtl
or
mov
adc
sarl
cmp
and
mov
sub
ret
adc
xchg
cmpsl
jecxz
iret
aaa
mov
roll
fs
stos
mov
pop
sbb
sbb
and
sbb
pop
and
jo
sahf
rol
pop
mov
mov
sub
out
lahf
pushf
sbb
pop
aas
int
lea
inc
ds
lret
daa
add
jns
in
fadds
std
mov
mov
xchg
cmp
insb
add
jb
pusha
fistl
stc
push
insb
mov
insb
and
ficomps
and
imul
out
out
mov
sub
movsb
inc
sub
inc
es
ret
dec
cwtl
add
cmc
mov
dec
jno
push
or
sbb
ss
xchg
push
rolb
inc
fsubrl
sbbl
jp
push
call
push
bound
icebp
and
add
cmpsl
int
ret
jp
mov
shlb
inc
push
jge
outsl
xor
shl
test
dec
push
cmpsb
push
mov
test
push
test
dec
mov
mov
ss
out
ret
sub
ret
mov
sub
sbb
cli
push
xchg
lock
js
xlat
clc
repnz
pop
dec
fcoml
test
jns
das
xchg
std
shrb
insb
loop
cmp
jmp
call
jne
pop
fstpl
lahf
rolb
mov
scas
out
mov
pop
outsl
das
jg
cmovg
pop
das
outsl
aas
jg
fistps
iret
lahf
fildll
maxps
outsl
das
jg
cmovg
pop
das
outsl
aas
jg
fistps
iret
sahf
fildll
maxps
outsl
das
jle
cmovg
pop
outsb
aas
jg
fistps
iret
lahf
fildll
out
aas
pushl
das
jg
js
xchg
mov
lahf
push
popl
jno
popa
adc
bound
lahf
push
sarl
loope,pn
xchg
dec
cmpl
popl
jno
popa
fists
iret
add
xor
pop
pop
rorl
sarl
das
loope
std
dec
cmpl
popl
jno
popa
fists
iret
add
xor
and
shrl
push
subl
pop
lds
or
add
shlb
or
xor
mov
shlb
or
xlat
add
jecxz
push
in
adc
test
cmp
sub
movsl
mov
shl
test
mov
lock
push
xchg
fisubl
sbb
je
xchg
aas
test
mov
test
sbbl
adc
gs
scas
ss
mov
add
out
fists
jne
add
mov
outsl
adc
push
in
xchg
stos
add
cs
lea
ret
das
mov
pop
aam
int3
jl
and
sbb
cmp
fs
sar
rorb
hlt
setno
sarb
mov
mov
push
popl
jno
popa
fists
iret
add
xor
and
rorl
sarl
das
loope
xchg
dec
cmpl
sti
add
jno
popa
fbstp
fwait
ja
jne
test
sarb
push
xchg
pop
rorb
sbb
sub
cli
xor
and
adc
popa
fistpll
dec
xchg
inc
jp
pop
mov
pop
jmp
adcb
sbb
cli
adc
ret
add
aas
iret
add
xor
and
rorl
sarl
das
loope
xchg
dec
cmpl
popl
jno
popa
fists
iret
add
xor
and
rorl
sarl
das
loope
xchg
dec
cmpl
stos
sub
pushf
andb
mov
ds
cmp
push
test
dec
add
add
jb
addr16
minps
inc
mov
iret
fidivrl
test
xchg
sar
mov
mov
ficomps
xor
test
jo
cmp
cwtl
xor
les
and
loope
into
ret
xchg
popa
outsb
and
xchg
xor
loope
adc
lods
sbb
movsl
add
das
ss
les
xchg
push
pop
rorl
cmpsb
cld
in
jne
imul
push
inc
cmpsl
sbb
pusha
in
push
fsubs
and
push
rcrb
and
loopne
add
sub
push
mov
push
ret
jae
mov
jge
or
lret
xchg
jecxz
jb
movsl
fs
stos
test
dec
jb
es
les
leave
fcompp
add
mov
cwtl
mov
test
jae
sbb
rcr
jnp
pop
jne
pushf
negl
mov
lahf
idivb
or
pop
pusha
xchg
jne
fcmovnb
or
repnz
test
sub
loop
cmp
fldenv
fsubp
jbe
sarl
loope
mov
out
jae
push
pop
jl
imul
cmp
loope
sub
xor
insb
test
clc
cltd
int3
adc
fwait
adc
fsubl
or
mov
adc
adc
xchg
rcl
ss
mov
clc
cld
inc
pop
in
mov
lcall
ret
cwtl
mov
cwtl
inc
fdivr
adc
out
adc
xchg
or
popa
xchg
cmpl
add
fcoms
xor
mov
add
mov
ret
repnz
push
int3
pop
mov
xor
xchg
outsb
insl
out
stos
js
dec
lods
and
mov
inc
aam
in
int3
xor
lret
xchg
jbe
cwtl
loope
fwait
loope
out
adc
sub
add
in
push
mov
imul
cmpsl
in
and
in
push
cli
test
int
ficompl
adc
mov
repnz
cmp
fldcw
push
pop
dec
xlat
and
xchg
push
or
pop
jle
lahf
push
in
mov
aaa
test
lock
inc
pop
ret
cmpsb
inc
in
imul
stos
pop
cmp
cltd
lea
andb
les
jbe
xchg
fcoml
popa
movsl
or
lcall
mov
aam
lcall
adc
and
ss
sub
push
test
stos
inc
ds
push
sub
aam
inc
arpl
mov
aaa
mov
push
cltd
add
movsl
scas
fs
and
jbe
imul
mov
iret
sbb
pop
inc
adc
adc
add
inc
fbstp
jle
ljmp
inc
aad
into
ljmp
addr16
sub
insb
add
lret
xlat
dec
or
stos
enter
insb
cmpsl
inc
stos
popf
xchg
mov
jg
mov
rorb
aas
mov
push
daa
add
xor
pop
xchg
ret
out
insl
int3
adc
or
dec
inc
fdivrp
outsb
int
mov
and
dec
insl
mov
je
out
enter
nop
dec
movsb
cwtl
pop
jmp
mov
adc
push
pop
xor
push
les
sbb
push
js
lcall
or
mov
out
push
and
push
repz
shrl
jne
push
test
shll
push
test
lods
pop
jne
mov
mov
mov
xchg
in
jnp
push
xchg
xlat
out
and
daa
add
adc
repnz
insb
mov
and
or
inc
or
les
inc
mov
mov
sub
aad
inc
pop
addr16
sarl
aas
push
fisubs
mov
or
mov
and
xchg
adc
jle
jg
andl
test
or
ds
popf
sti
jae
mov
add
orb
pop
push
jl
imul
xchg
mov
lods
ror
xor
push
mov
lret
lahf
mov
dec
cmp
pop
dec
js
dec
sbb
pop
adc
adc
shrl
icebp
pop
popf
dec
add
jecxz
xor
jp
cmp
sub
clc
xlat
enter
or
add
out
jp
mov
xchg
and
cmpsb
cmc
push
dec
loop
leave
pop
hlt
shll
stos
filds
mov
js
subl
fists
mov
cwtl
mov
icebp
in
or
popf
js
and
jp
and
jmp
xchg
aad
push
xor
sbb
dec
cmp
add
mov
push
push
jae
insb
test
addl
mov
imul
dec
bnd
test
push
daa
roll
push
dec
sub
in
sbb
lds
scas
enter
adc
in
shll
aam
in
xchg
xchg
jae
lds
add
sub
hlt
bound
int3
or
mov
notb
repnz
jp
scas
cmp
lods
inc
mov
cwtl
in
icebp
out
mov
bound
jp
jb
adc
inc
test
xchg
xchg
into
push
xchg
es
int3
add
enter
dec
insb
and
sub
push
jnp
js
xchg
dec
aam
push
inc
iret
ficoms
mov
mov
rcrl
and
xchg
lret
mov
fsts
xchg
pop
clc
rcr
in
cmp
test
add
subb
cmp
clc
test
and
repnz
jge
jmp
push
push
pop
inc
pushf
js
xlat
loopne
add
mov
test
fcoml
fimull
sub
pop
es
cs
or
jb
cmp
fwait
icebp
mulb
dec
adc
sub
jnp
aas
or
inc
jmp
jae
or
sub
cmp
pop
cmp
mov
sarb
xchg
jmp
sbb
mov
adc
ffreep
dec
pop
cmp
dec
inc
adc
mull
shlb
add
or
stos
pusha
xor
cmp
pushf
jp
cld
sub
test
insl
add
mov
insl
lock
inc
out
setge
jl
pop
jbe
std
fsubrs
jl
sbb
loop
mov
subb
mov
and
cmp
cli
push
dec
mov
stc
xchg
add
mov
jo
rcr
out
ljmp
shlb
cmpsl
aad
insb
jg
in
xor
scas
fisubrs
inc
loop
clc
lea
iret
scas
mov
aaa
nop
lret
shll
jb
subl
push
fistpl
rcl
vaddss
mov
add
mov
mov
insl
ja
fists
aaa
mov
add
add
mov
add
mov
mov
lock
or
je
xchg
call
xor
fucom
mov
and
mov
out
sub
cli
xor
cmp
stos
xor
xchg
adc
popf
daa
aas
shrb
stos
adc
push
or
add
test
loop
outsb
inc
add
xchg
stos
insl
xchg
adc
adc
lret
jl
imul
mov
repnz
cmp
clc
mov
mov
pop
push
xor
sti
shrl
sbb
std
leave
aad
ljmp
fisttps
xor
or
inc
mov
cmp
sti
fmul
xlat
bound
fisttpl
test
mov
jo
fcomp
jle
popa
adc
lds
dec
pop
cli
xor
mov
imul
loopne
js
mov
subl
jo
mov
sbb
sub
dec
dec
xchg
cmp
inc
pop
dec
jg
std
adc
pop
out
push
insl
mov
outsb
xorb
mov
outsb
mov
std
std
sti
mov
out
adc
pop
movsl
je
jle
mov
fildl
inc
test
inc
push
and
ficompl
inc
in
outsl
jecxz
sarl
es
xchg
mov
dec
movsl
mov
fimuls
cs
mov
cmp
stc
pop
xchg
xchg
mov
sub
and
pop
lahf
outsb
fists
nop
outsl
and
mov
lcall
adc
cld
loope
loop
call
ss
sub
push
push
cmpsb
test
clc
sub
addl
mov
into
cmp
xchg
jnp
in
and
jecxz
scas
rcr
test
loopne
rorl
leave
das
mov
repz
pop
mov
fmull
test
xlat
in
rcll
repz
shrl
sub
pop
or
and
sti
js
dec
pop
jp
jns
mov
std
dec
movsb
jne
stos
cmc
sub
bound
or
lea
mov
add
jbe
out
iret
jl
jb
cmp
mov
or
leave
dec
bound
mov
adc
jb
addl
xor
mov
aam
sub
imul
enter
push
and
push
jmp
aad
nop
sub
jecxz
out
enter
cmp
sbb
test
std
loop
jo
enter
xor
add
gs
jge
enter
jl
mov
das
pop
xor
orb
push
cmpsl
adc
mov
or
faddl
mov
cmp
cmp
stos
xchg
mov
xchg
xor
mov
in
mov
mov
jno
dec
nop
adc
movsl
jp
xchg
test
xchg
sub
movsb
incl
mov
jmp
push
push
mov
mov
and
push
pop
xchg
mov
insb
cmpsl
mov
push
iret
pop
jle
mov
not
sahf
fsubrs
sbb
cmp
shll
rol
add
inc
punpckhdq
jge
dec
imul
mov
sub
subb
arpl
lcall
cmp
scas
mov
fisubs
aas
ss
mov
jmp
xchg
sbb
insb
jne
das
cltd
loope
enter
in
rep
mov
notb
cltd
add
mov
xor
push
sahf
loopne
inc
push
or
push
stc
lds
fildl
int3
add
dec
or
dec
push
ret
fildll
loopne
mov
outsl
xchg
push
rclb
pshufw
shrl
sub
mov
inc
cmpsl
mov
cs
dec
mov
cmp
aam
shrb
in
xchg
cmpsb
js
pushf
out
xchg
push
pop
dec
jb
imul
into
ret
ret
negl
subl
imul
movsl
xchg
movsl
or
cmp
mov
aaa
pop
xchg
cli
es
mov
adc
dec
xor
jo
inc
pop
in
mov
ds
jno
sbb
jno
fnstcw
jns
mov
jno
in
je
mov
mov
and
iret
popf
xor
xor
jg
mov
fldln2
ss
stos
test
shl
into
repz
push
push
out
outsb
pusha
ret
stos
repz
push
pop
push
adc
adc
andb
push
and
dec
sub
nop
mov
cltd
cltd
imul
test
jo
pop
int
and
aad
pop
nop
jmp
sarl
dec
sbb
cmpsl
sub
scas
in
xor
xlat
lds
jnp
adc
pop
pop
mov
mov
cs
jns
mov
sbb
push
int
jecxz
je
inc
outsl
sti
pop
and
loop
mov
xchg
iret
or
insb
sub
jl
push
dec
jnp
pop
testl
pop
ret
sub
cmp
or
push
fcoml
movsb
test
cmp
test
mov
imul
mov
loop
pop
test
sar
ret
xor
loop
cmp
loopne
out
sub
aad
lods
rorl
xchg
lcall
sbb
cmp
rorb
add
cmp
rcrl
gs
sub
push
fmull
jae
es
lcall
dec
jge
dec
div
loope
add
cmp
add
lret
mov
cmp
lahf
cld
xchg
xor
mov
and
or
push
shl
xchg
mov
mov
mov
lret
test
push
xchg
les
pop
data16
xchg
in
mov
push
outsb
add
out
xchg
shlb
andb
add
enter
mov
movsb
rorb
pop
insl
dec
enter
cmp
push
lsl
mov
mov
xchg
mov
push
imul
shrl
aaa
sub
mov
adc
jae
int
aam
adc
inc
out
mov
push
fiadds
jmp
pop
insl
frstor
jecxz
int3
push
ret
int3
jae
lahf
lea
xchg
and
negl
aas
dec
loope
lahf
or
xchg
dec
pop
pop
xchg
cli
mov
js
pop
or
and
sahf
push
or
stc
jecxz
mov
jo
and
xchg
shl
in
push
push
xchg
cmp
cltd
cmpsl
mov
test
pop
mov
lods
icebp
xchg
repnz
fildll
jbe
mov
subl
or
outsl
xchg
add
cmp
ss
sub
in
mov
push
mov
mov
xchg
out
fs
dec
inc
and
inc
movsl
stos
xchg
mov
sarb
insl
aas
mov
jae
idivl
xchg
jb
hlt
lret
out
xlat
clc
jecxz
add
lret
xor
push
jg
xlat
push
xor
cmp
loope
popa
xor
sub
mov
mov
icebp
adc
in
jne
lcall
movswl
jecxz
insb
lret
mov
faddl
dec
scas
jno
das
cltd
and
mov
gs
lds
imul
fwait
push
jne
dec
outsb
lods
popa
rcrb
int3
mov
xchg
lret
std
add
lds
sub
cmpsb
int
mov
and
push
std
scas
aaa
lret
xchg
les
sub
cmpl
mov
lea
mulb
xchg
icebp
cmc
neg
xor
test
addl
add
add
test
xchg
cmp
mov
negb
sbb
aam
push
jle
push
aas
int
fisubrs
lods
xchg
repnz
ss
mov
lret
mov
cmc
lods
les
sbb
and
je
clc
xor
mov
cmpl
ret
sahf
outsb
xor
push
inc
mov
jae
mov
loopne
dec
or
clc
negb
lret
or
mov
push
nop
add
adc
mov
movsl
into
pop
sti
push
rcll
dec
jg
lods
test
fnstenv
cltd
fldl
xchg
out
and
sub
add
rclb
ja
lods
adc
dec
inc
loope
pop
pop
mov
rol
repz
lret
inc
sbb
int
mov
popa
xchg
adcl
loope
call
ljmp
and
nop
cmp
test
xor
test
inc
and
dec
mov
scas
shll
or
ljmp
cmp
adc
das
outsb
repz
mov
nop
iret
mov
jno
sub
push
or
shrl
sub
inc
sbb
mov
push
cld
test
lds
inc
pop
out
mov
mov
jle
push
adc
dec
clc
pop
cmp
out
popa
popa
shld
stos
jns
adc
pop
push
pop
xchg
xor
stos
or
push
fdivrs
out
mov
mov
or
mov
ja
cmpsb
sub
notl
mov
rorl
jo
imul
in
test
lcall
pop
cmp
popf
jmp
jns
push
nop
stos
mov
aaa
jbe
and
std
dec
mov
mov
mov
jl
mov
cltd
push
cld
jno
insl
mov
ss
or
cs
loop
sbb
sbb
inc
xchg
lret
dec
cmp
repz
jb
push
testb
fwait
lahf
cld
ss
gs
pusha
push
jbe
jne
out
mov
int3
enter
xchg
and
stc
mov
jne
inc
packuswb
pop
mov
push
mov
fsub
add
xchg
jp
scas
hlt
gs
call
cld
xor
loope
arpl
insb
int3
sbb
mov
aas
add
pop
sbb
mov
clc
jne
cmp
xor
push
into
repz
or
nop
enter
xchg
fmulp
sub
std
mov
xchg
fsubs
in
sbb
sub
and
mov
scas
push
sub
or
lahf
pop
adc
movhps
mov
shlb
dec
push
mov
add
lods
aam
cwtl
jns
pop
sbb
dec
sbb
nop
or
sbb
loopne
add
adc
xor
xor
push
push
nop
mov
inc
xchg
sub
dec
and
xchg
mov
sbb
sbbb
dec
fcompl
cmpsb
inc
pop
xchg
pop
icebp
repnz
filds
push
pop
call
and
inc
push
cltd
adc
or
inc
push
or
out
push
cld
xchg
pop
js
das
push
cmp
or
roll
xchg
xor
sbb
cmp
test
mov
xchg
insl
jmp
jl
pop
ss
roll
in
push
pop
fwait
or
cld
iret
jmp
xchg
push
push
rorl
sub
lret
or
insl
lret
lods
cmp
fadds
add
push
jns
cs
xchg
aad
mov
pop
clc
add
dec
push
je
jno
dec
imul
mov
cltd
inc
les
jmp
sbb
mov
cwtl
or
test
sub
xchg
mov
and
mov
lods
xor
nop
lret
push
lock
or
insb
scas
cwtl
jnp
xchg
imulb
scas
sub
and
ret
and
pop
repnz
and
sbb
fisttpll
adc
add
cmpb
xor
movsl
dec
lods
xchg
nop
lods
mov
cmp
mov
aaa
in
fiaddl
movsb
xchg
sti
cmp
aas
loope
mov
inc
sahf
test
mov
push
lock
pop
aam
out
push
inc
hlt
dec
or
add
enter
xor
ds
dec
sub
add
insl
mov
repz
shlb
fiadds
pop
clc
sub
ficompl
fisttpll
jnp
aaa
xor
pop
mov
push
cmp
into
pop
lock
dec
xor
sbb
dec
movl
dec
pushf
test
jmp
dec
cmpsb
loopne
adc
sub
add
xchg
mov
push
push
bound
hlt
pop
inc
movsl
in
dec
mov
sti
rcrb
or
and
enter
jns
add
addr16
outsb
js
notl
or
out
std
popa
mov
sahf
mov
or
inc
mov
xchg
and
add
pop
subb
test
je
test
dec
add
push
or
int3
push
jo
push
lret
fidivrs
dec
jmp
es
xchg
and
and
lock
jae
rol
scas
push
insb
or
mov
mov
mov
in
decb
lods
lcall
and
dec
or
repz
je
test
mov
and
jnp
arpl
mov
out
jle
loopne
mov
inc
in
dec
adc
pop
rorb
inc
cmp
xchg
inc
xlat
loopne
inc
and
stc
or
xchg
mov
xchg
pcmpgtb
pusha
cmp
test
lcall
cld
xor
cmp
xchg
mov
int
push
mov
pop
and
adc
out
xor
pushf
cmp
xchg
negb
test
inc
cmp
loopne
mov
sbb
push
jb
dec
test
aam
adc
test
icebp
and
hlt
mov
push
dec
cmc
ret
adc
pop
scas
fs
add
and
add
inc
inc
lods
sbb
mov
mull
aas
movsl
fisttpl
popa
test
pop
sbb
inc
mov
daa
jo
xor
sti
push
fcompl
mov
std
inc
mov
nop
pop
pop
or
stc
jbe
ds
ret
and
stc
popa
lret
cmp
sbb
mov
addr16
mov
push
sti
frstor
add
inc
inc
adc
insl
or
dec
push
out
fwait
cmp
pop
dec
pop
popa
xchg
adc
insl
add
das
sub
or
push
sub
les
sub
int3
jnp
xchg
pop
dec
inc
imul
sub
roll
and
inc
cwtl
lahf
or
push
add
push
fs
stc
in
std
test
sbb
pop
pop
cmpsb
dec
rcrb
dec
cmpsb
js
cmp
sbb
clc
push
pushf
inc
pop
mov
repnz
je
das
adc
imulb
mov
inc
and
jb
js
and
incb
sbb
dec
push
ss
testb
xor
dec
sbb
sub
bound
dec
or
dec
jg
sub
cmpsb
pop
push
or
in
sbbl
loopne
call
repz
jle
mov
or
sbbl
mov
aad
inc
mov
adc
add
xor
and
rorl
sarl
das
loope
xchg
dec
cmpl
popl
jno
popa
fists
iret
add
xor
and
rorl
sarl
das
loope
xchg
dec
cmpl
cmovno
jno
popa
pop
adc
add
xor
pop
rorl
sarl
das
loope
xchg
dec
cmpl
popl
jno
popa
fists
iret
add
xor
and
rorl
imul
aas
jle
dec
pop
pop
pushf
lock
mov
fsubs
sbbb
sub
pop
xor
insb
adc
lock
mov
mov
mov
or
or
cmp
and
xor
push
insb
add
shlb
in
in
addb
push
inc
pop
jne
dec
and
add
lock
mov
ja
inc
cmp
out
imull
add
dec
stos
movsb
sbb
sbb
mov
aas
divb
int3
pop
jns
jns
cltd
cwtl
and
int
inc
pop
int3
jl
xchg
push
arpl
ljmp
shrb
dec
repz
add
mov
loopne
out
insb
mov
sbb
shlb
int
add
in
jg
stos
or
adc
out
insb
int3
adc
pop
xor
aas
and
sbb
sbb
lret
scas
faddl
sub
lea
pop
sti
mov
cmp
vcvtss2si
in
pusha
jecxz
andl
and
insb
add
xchg
loopne
shrb
cld
nop
cmc
addb
xor
and
insb
imul
mov
stos
mov
sbb
pusha
adc
cmp
pop
push
sub
adc
inc
repz
loop
rcr
mov
clc
int3
cld
out
sbbb
adc
pop
push
daa
dec
or
push
stc
mov
les
cld
nop
in
sbbb
pusha
cmp
sub
pop
xor
adc
lock
mov
mov
mov
sbb
or
cmp
sub
pop
xor
adc
lock
xchg
out
sub
xchg
dec
ds
xor
xor
add
js
scas
lods
sub
ret
dec
lods
lret
addl
mov
lcall
jecxz
mov
stc
cwtl
mov
insb
or
mov
and
aad
lods
mov
test
xor
jmp
dec
dec
fsin
shlb
mov
mov
mov
popa
or
and
push
jne
aaa
xchg
inc
mov
sub
push
cld
adc
push
sub
ret
mov
jne
mov
sbb
mov
pop
jnp
jo
pushf
or
roll
loope
sub
mov
fwait
movb
mov
repz
rcrb
cmp
clc
insl
mov
push
leave
inc
insb
mov
cmp
les
outsl
add
cmp
cmp
dec
xor
xor
mov
dec
decb
test
inc
cld
xor
dec
in
sbb
jne
pop
cmc
daa
bound
aaa
mov
fimuls
aad
cmpsl
mov
dec
cmp
mov
dec
loop
mov
inc
out
adc
cvtps2pd
std
gs
ficoms
loope
ja
pop
repz
sub
jb
loopne
inc
bsr
sub
mov
or
inc
ljmp
adc
in
iret
mov
int3
leave
adcl
test
mov
and
and
dec
lret
out
pop
fbstp
sub
sub
pop
lret
lds
les
inc
xor
xor
rcrb
gs
scas
mov
fs
mov
bt
test
das
lret
cs
xchg
or
mov
cltd
sub
lea
clc
cmpsb
cmp
and
outsl
mov
cwtl
mov
cmp
das
push
or
sbb
mov
lret
vaddpd
sub
add
mov
fsubl
pop
cli
mov
and
and
insl
cmp
jno
adc
push
xor
push
and
and
es
xchg
repnz
cmpb
fldt
sub
bound
sti
push
push
mov
mov
int
jmp
mov
pop
and
pop
jae
dec
mov
or
mov
inc
lcall
adc
inc
pop
fsubr
pusha
mov
sbb
cli
adc
mov
sbb
cmp
in
ss
std
mov
sbb
lcall
cltd
call
and
or
mov
into
xchg
xor
pop
int
fcoms
mov
xchg
into
loope
fdiv
mov
fidivrs
xor
jno
arpl
jmp
es
push
lods
fimuls
push
jne
or
stos
arpl
ffree
push
test
xor
hlt
iret
outsl
aaa
xchg
lcall
xchg
mov
push
mov
loop
xorl
addr16
push
mov
sub
add
mov
mov
fs
sahf
int
ret
sub
push
jmp
xchg
mov
ficoms
in
or
sbb
xor
xor
mov
shlb
mov
enter
inc
inc
sub
fisttpl
add
iret
aas
in
in
js
xchg
movsl
pop
repnz
and
arpl
scas
xchg
or
mov
mov
js
arpl
in
hlt
stc
xor
cltd
and
push
dec
nop
add
mov
sbb
test
pop
setl
cmp
lea
out
in
pushf
js
cwtl
xlat
adc
fisttpl
or
xchg
adc
popa
or
xchg
sub
xor
inc
orb
sbb
mov
and
imul
push
or
aaa
std
fbld
cltd
or
xor
in
mov
frstor
mov
inc
bswap
add
ret
iret
fisubl
xor
inc
push
push
out
lcall
xchg
add
jno
jnp
cltd
mov
xor
add
pop
push
push
shrb
or
and
scas
imulb
add
testl
jge
call
jno
fldenv
and
push
out
dec
mov
daa
leave
fdivrs
out
outsl
or
cmp
loopne
mov
pop
mov
popa
leave
popa
cmovge
lahf
push
sbb
cmp
icebp
test
test
sbb
adc
out
in
int
mov
test
inc
addb
movsl
jae
add
sub
insl
push
cmp
gs
cwtl
adc
sub
mov
cmp
mov
fs
xor
or
fidivrs
cmp
inc
jg
pop
in
xlat
lret
pop
data16
rcrl
add
mov
rcrb
cmp
jl
psubb
js
adc
pop
int
mov
loope
xchg
xchg
test
fmull
lahf
mov
icebp
insb
imul
test
cmp
lock
aas
aas
in
cmp
dec
mov
rolb
cmp
cwtl
aaa
js
xlat
fisttpl
outsb
xchg
bound
adc
mov
dec
out
xchg
and
notl
cmp
clc
cld
dec
dec
mov
das
scas
std
pushf
or
pop
shll
jmp
stc
int3
push
scas
fimuls
sbb
test
mov
sub
mov
mov
or
roll
out
test
sbb
mov
mov
mov
dec
fucomi
and
sbb
pop
xor
dec
fwait
int3
aaa
jp
sbb
sub
jp
call
mov
insb
pminsw
mov
ret
aas
addb
cmp
jle
mov
ret
mov
fimuls
cli
jmp
xlat
inc
outsl
gs
jb
stos
jg
cld
int
test
and
icebp
or
mov
orl
pop
sbb
cmpsl
leave
add
subb
ljmp
dec
mov
inc
or
fildll
fisubs
clc
int3
cmc
push
mov
aam
xchg
xor
adcl
cltd
push
scas
mov
mov
fldl
ret
inc
shrb
aas
push
mov
arpl
xchg
adc
mov
mov
push
mov
inc
jne
mov
sub
movsl
inc
lods
out
jns
test
mov
xor
inc
clc
arpl
mov
or
insb
ficompl
adc
pushf
xchg
leave
push
pop
xor
out
clc
jle
jb
int3
out
mov
push
adc
in
jno
jmp
sbb
popf
ret
js
rol
push
cmpsl
xchg
mov
jecxz
jl
push
push
imulb
xchg
inc
lret
rcll
inc
mov
mov
mov
ss
imul
xchg
dec
pop
jae
push
jo
enter
in
mov
pop
add
push
push
mov
inc
inc
add
dec
push
dec
negb
push
shl
cmp
mov
sbb
dec
divb
jae
out
push
orl
fcmovbe
inc
dec
les
dec
inc
lods
xlat
sahf
lcall
cltd
jnp
inc
mov
xor
insb
dec
hlt
or
movsb
bound
dec
push
xchg
insl
add
leave
and
fisttpl
stos
or
fldenv
cld
lretw
and
arpl
and
adc
in
loop
pop
loop
je
mov
pop
or
test
dec
pop
data16
pop
inc
adc
xor
add
add
leave
stos
jne
imul
fistps
dec
push
xor
xchg
cmp
push
add
mov
leave
xchg
call
mov
inc
ret
push
adc
cmp
or
inc
push
nop
mov
rcr
sbb
jecxz
mov
lahf
inc
sbb
mov
inc
ja
push
scas
adc
sti
or
jo
pop
and
xorl
scas
pop
push
inc
mov
aam
sub
popf
jle
arpl
out
aad
and
bound
jae
shll
lret
lods
jae
or
cmp
mov
add
addl
mov
push
mov
pop
cli
mov
jbe
roll
ss
pusha
cltd
add
pop
movsb
shlb
stos
add
mov
arpl
addr16
pop
mov
jle
adc
cwtl
inc
dec
enterw
pop
leave
mov
push
push
xchg
ss
fstpl
xchg
fstp
push
sub
jne
in
sti
mov
hlt
inc
imul
push
inc
rclb
mov
clc
clc
jecxz
inc
jmp
imul
dec
jo
ljmp
inc
lock
mov
sub
add
pop
or
fucom
add
cmp
lock
es
fmull
test
gs
xchg
lahf
outsb
push
stos
movb
lea
loopne
dec
cmpsb
sub
pop
dec
cmp
fstpt
mov
xor
add
and
gs
jbe
add
std
dec
xchg
js
pavgb
dec
or
stos
lds
out
imul
add
adc
xor
and
fs
out
cmp
dec
sbbb
stos
and
into
aaa
add
mov
cmp
cld
icebp
jl
decl
repz
hlt
loopne
imul
dec
js
mov
lds
xchg
ss
and
andl
cmp
clc
mov
or
xor
mov
aam
push
rcll
fdivl
add
out
cmp
cld
inc
fdiv
fildl
xor
inc
mov
sarb
rcrb
cltd
dec
aam
incb
mov
adc
or
imul
lea
loop
add
shr
stc
mov
dec
in
les
les
icebp
jae
inc
inc
ljmp
push
jns
cli
adc
dec
mov
cmp
loop
mov
frstor
dec
mov
nop
subb
ljmp
stos
and
pop
stc
xchg
cltd
cmp
and
js
les
jbe
hlt
fidivrl
mov
mov
push
or
fsubrl
lret
loop
fstl
scas
nop
in
ljmp
icebp
jns
add
dec
lea
fwait
pushf
mov
mov
mov
sub
cmpsl
xor
into
sub
insb
jge
add
pop
ret
movsl
sbbl
jno
std
jmp
stos
and
das
int
add
dec
iret
movsb
dec
leave
or
fwait
ljmp
fcomip
dec
jle
shl
xor
ljmp
idivb
bound
pop
fldcw
fstpt
push
mov
sbb
inc
pusha
push
das
cmp
loop
in
and
inc
jo
pop
xchg
ds
push
jae
out
fcmovnb
mov
pop
inc
add
aaa
push
insb
outsl
ja
inc
mov
in
pop
popa
xchg
lahf
and
dec
fstl
in
jle
hlt
xor
imul
push
mov
fs
xchg
pop
or
xchg
aad
pop
insb
in
out
adc
rorl
push
jecxz
adc
les
inc
and
shrd
xlat
mov
inc
or
call
jbe
out
jle
rclb
sti
in
inc
jbe
lea
sub
jb
fsubs
aam
int3
cli
daa
sbb
fdivs
mov
test
dec
xchg
dec
mov
sub
lret
cmp
scas
cwtl
mov
mov
insl
sahf
aad
subl
push
or
sbb
xchg
xchg
adc
enter
es
push
and
popf
pop
pop
pop
mov
adc
sahf
dec
cmp
out
or
pop
sub
fcmovbe
sub
cmc
lock
inc
sub
scas
dec
imul
test
inc
ds
jmp
and
pop
test
mov
jg
roll
push
rcrb
cs
pop
loop,pn
cmp
subb
cltd
cmpsl
shlb
sub
dec
lahf
xchg
add
push
adc
lahf
call
jmp
shr
mov
dec
mov
xchg
dec
in
call
loopne
mov
mov
jnp
jb
add
stc
popa
test
cli
pop
loopne
in
mov
or
or
in
clc
int3
lret
inc
xchg
sub
sti
pusha
aaa
jae
out
dec
xor
cmp
leave
jb
fidivl
jno
fstl
dec
fs
sbb
mov
xchg
cmp
enter
xor
pop
leave
xor
xchg
and
jg
int
je
rcr
shr
fidivl
cmpsb
jle
inc
out
mov
or
fcompl
in
add
repnz
cmp
out
mov
mov
leave
inc
mov
mov
popa
cli
cltd
int
xchg
push
ror
lcall
sub
pop
sarl
pop
aaa
jmp
fmull
jg
lods
and
outsb
imulb
push
mov
inc
push
dec
pop
adc
fiadds
std
dec
jmp
sbb
les
sub
es
sbb
mulb
sbb
mov
mov
xor
mov
pop
lret
dec
out
push
aad
test
jg
arpl
mov
stos
mov
mov
clc
jecxz
cmpsl
dec
fs
jle
popf
dec
pop
add
xchg
aas
movsb
in
cwtl
sti
and
pop
stc
jns
lret
jb
hlt
test
dec
xor
sti
mov
sarb
mov
xorb
add
xlat
nop
inc
clc
fwait
aam
add
insl
clc
and
shrl
mov
hlt
stos
sub
cwtl
sub
mov
dec
pop
pop
dec
or
jne
mov
lds
movl
sbb
in
jmp
outsb
loope
fisttpll
loop
sub
pop
fidivs
repnz
inc
xor
je
xchg
aas
jno
xchg
inc
stos
xor
fnstenv
outsl
arpl
push
fcmovnu
in
lods
dec
inc
mov
fstpt
cmp
scas
incl
lret
push
shl
mov
jl
lahf
sbb
add
cmp
mov
dec
mov
loop
ret
jp
addb
pop
and
cld
sub
std
fstp
dec
int3
repnz
or
pop
and
xchg
lock
rorb
cmp
jmp
push
xchg
dec
mov
shl
stc
xor
jnp
stos
leave
push
push
inc
cmp
cmp
test
scas
xchg
cwtl
pop
mov
sbb
jns
adc
out
movsb
xchg
xor
fdivrl
sbb
push
mov
or
xchg
push
pop
jmp
fwait
mov
or
and
jmp
sub
scas
and
hlt
lea
sub
incb
cmp
int3
imul
je
test
clc
iret
mov
or
popa
push
xor
sub
cmp
adc
mov
add
cltd
aam
dec
mov
pop
mov
push
xchg
es
dec
lret
mov
daa
xchg
or
xchg
xor
sub
xor
call
push
xchg
and
rorl
addr16
lret
mov
cs
xor
loope
or
sbb
notb
daa
sarl
and
fdiv
fadd
data16
and
adc
outsl
cld
aad
vpermilps
nop
aaa
testl
or
loopne
xchg
clc
sub
fiadds
jmp
xor
and
pop
scas
mov
push
jge
push
hlt
push
fstpl
cmp
pop
push
loopne
insl
jle
mov
dec
dec
stc
push
scas
or
arpl
jg
pop
jo
dec
rol
daa
add
cwtl
stc
in
mov
jg
cmp
leave
inc
mov
mov
push
lds
sbb
cmpsl
xor
and
jl
ret
mulw
not
mov
mov
mov
push
lods
nop
xor
ss
fwait
rclb
mov
nop
adc
jne
data16
repnz
mov
cmp
add
lcall
mov
inc
cmpb
in
pop
xchg
mov
mov
adc
mov
pop
fcomp
ss
and
clc
and
cmp
and
or
add
sub
sbb
mov
push
loop
dec
mov
scas
insb
jnp
leave
imul
rcr
and
adc
stos
pop
aas
imul
push
lret
std
dec
pop
and
stos
xor
cmpsl
popf
cmpb
dec
arpl
pop
fnstenv
jecxz
mov
shl
and
fwait
lea
lock
cmpl
cmp
subb
pop
jo
imul
enter
aas
sbb
rcrb
hlt
faddl
ret
mov
imul
sub
dec
cwtl
imul
adcl
pop
xor
adc
mov
shlb
pop
sbb
pop
js
lods
jae
aaa
pop
rolb
sbb
cmpsb
rcrl
xchg
cmp
movsb
out
add
dec
test
lea
repz
cmpsb
fistpl
icebp
jno
int
xchg
enter
sub
xlat
push
in
test
cmc
sti
stos
repz
cltd
ja
pop
mov
nop
push
mov
sub
push
int
and
movsl
inc
mov
dec
sbb
pop
xchg
cmp
scas
movsl
pop
pop
pop
sahf
ss
mov
add
xor
mov
jp
add
fildl
inc
or
es
pop
stos
mov
in
or
lea
jmp
xor
pushf
test
ficoml
rorb
adc
and
cltd
jecxz
fwait
push
mov
mov
repz
cvtpi2ps
movsb
jmp
call
inc
popa
add
jbe
dec
sub
push
mov
int3
add
cmp
inc
pop
sub
pop
mov
dec
das
mov
xchg
mov
push
stos
popa
push
outsb
lcall
imul
xorl
aad
add
pop
pusha
leave
or
push
hlt
or
push
or
pushl
adc
fsubr
jno
pop
and
fnsave
jl
mov
and
sbbb
or
pushl
pop
xchg
jp
mov
jnp
mov
jp
jp
lea
fdivl
xchg
pusha
addl
push
repnz
jecxz
test
fisttpl
cmp
mov
decb
stc
pop
push
pop
inc
rolb
rclb
cmp
inc
fisttpll
xchg
in
std
mul
hlt
jae
test
sbbb
mov
inc
jne
mov
inc
sbb
and
in
insl
xor
dec
mov
pushf
cmp
jnp
sti
jg
cld
xchg
lcall
imul
insb
les
xlat
adc
push
in
sbb
ljmp
pop
xor
roll
addr16
and
orb
jb
aaa
stos
cmp
sbb
int
movsl
add
adc
dec
mov
imulb
sbb
inc
xchg
cmpsb
popf
imul
sub
add
and
imul
in
orb
popa
mulb
xor
cmp
dec
hlt
push
and
lds
jg
nop
sbb
gs
push
mov
pop
in
jge
test
fcoml
pop
or
mov
bound
stos
aas
ja
enter
shrb
pop
and
jb
cmpl
and
dec
cmp
in
movsb
loop
xor
pop
das
loop
inc
test
sub
adc
add
subl
xchg
inc
dec
mov
arpl
push
in
cmp
sbb
sbbl
jge
repnz
or
shrl
shrl
dec
in
adc
mov
ljmp
out
cmpsl
and
xchg
into
mov
js
or
xchg
in
aas
dec
rorl
daa
fistpll
clc
loope
and
or
add
jge
mov
mov
clc
or
cmp
call
lahf
mov
sub
jae
adc
in
jne
enter
mov
dec
pop
ret
push
cwtl
and
xchg
push
push
mov
in
arpl
pop
mull
adc
cmpsl
rorb
inc
lock
testl
movsb
jl
in
dec
xchg
int3
inc
mov
push
mov
insb
dec
xchg
lods
cmpl
adc
pop
cwtl
sbb
pop
shll
jl
push
inc
mulb
pusha
cwtl
cli
lock
dec
mov
adc
loop
mov
test
mov
inc
aad
scas
clc
pushf
in
pop
lss
cli
rcll
lcall
mov
jl
jne
push
subb
insb
mov
sub
pop
adc
sub
pusha
add
sbb
fisubrl
ret
into
xchg
jmp
adc
push
or
in
rcrl
test
jbe
repnz
sbb
mov
in
cmp
xlat
and
cmp
adc
adc
dec
xor
lea
fidivrl
pop
cmp
jecxz
pushl
cmp
adc
push
int3
addl
xor
and
sub
movsl
imulb
rol
mov
adc
xchg
lret
pop
adc
leave
cmpsl
jae
popa
mov
ja
push
loop
jb
lahf
cs
inc
sub
xor
shrb
js
cmp
cmpsl
mov
rcr
int3
mov
sbb
or
cmp
sub
pop
xor
adc
lock
mov
mov
mov
sbb
or
cmp
sub
pop
xor
adc
lock
push
lods
rcr
int3
and
nop
in
sbbb
pusha
cmp
sub
pop
xor
jl
outsb
add
lods
rcr
int3
mov
jecxz
repz
sub
sub
xchg
call
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
out
xor
and
call
int3
push
xchg
jg
outsl
mov
mov
outsl
loop
loop
adc
add
xor
and
push
mov
bound
rcrl
dec
sarb
ret
pop
loop
adc
add
xor
and
push
mov
bound
shrl
dec
mov
stos
dec
sarb
punpckldq
add
fnstcw
outsb
mov
cmp
cmp
movsl
xchg
imul
inc
into
arpl
push
inc
dec
push
clc
xchg
pop
xchg
ret
jmp
das
dec
das
cmp
repz
ljmp
push
call
pop
push
xchg
mov
pop
insb
aas
add
loopne
push
aad
add
adc
into
fistl
outsb
mov
orb
mov
xchg
jg
loope
cs
std
adc
aaa
xor
pusha
fsqrt
cmp
outsb
loop
mov
push
push
sbb
pop
mov
je
lods
mov
insl
adcb
das
dec
cmpsb
rol
repz
cmovge
add
xor
and
push
mov
bound
mov
mov
das
repnz
loop
xchg
inc
cmp
cltd
insb
mov
shlb
out
xor
adc
push
fnsave
and
popf
xchg
push
mov
push
aaa
fisubl
xorl
out
add
or
and
push
popa
fs
sub
push
stos
add
jb
bound
mov
mov
das
repnz
loop
adc
add
xor
and
push
mov
bound
mov
mov
das
repnz
loop
adc
pop
cli
mov
jp
mov
test
stos
xor
or
adc
incb
sysret
loope
xchg
iret
push
ret
loope
or
xor
notb
outsb
mov
and
mov
jl
xor
or
js
jae
push
cld
mov
out
inc
popa
mov
imulb
xor
push
pop
aam
inc
pop
push
imul
ljmp
rolb
adcb
js
fcoml
test
test
movsb
insb
das
addr16
aad
movsl
lahf
mov
ja
sub
xchg
insb
cwtl
mov
mov
leave
sbb
inc
xor
add
popa
call
push
xor
divb
push
fdivs
ja
adc
xchg
inc
fstpl
cmp
inc
ljmp
inc
and
jns
jl
fidivs
enter
mov
jmp
fstpt
fidivrs
imul
enter
sub
rolb
test
shrl
mov
mov
sub
dec
pop
dec
push
push
dec
stc
push
pop
testb
test
jo
mov
push
jl
imul
mov
push
clc
fs
addl
mov
fsubrp
push
fwait
cmp
pop
jmp
pop
iret
xor
sbb
pop
shrl
mov
pop
dec
or
scas
lahf
push
cmpsb
sub
xchg
int3
xchg
cmpl
fcmovne
sub
xor
xchg
inc
sbb
outsl
mov
leave
nop
push
inc
pop
pop
lret
or
imul
fnsave
xchg
out
mov
sbb
ret
out
xchg
and
jp
aam
inc
adc
sti
or
shr
negl
jmp
jne
inc
jbe
cmp
insb
imul
testb
popa
ds
or
jae
repz
mov
ret
fimull
and
sti
int3
jl
add
sbb
xor
push
or
in
jle
sbb
std
jbe
popa
sub
shll
dec
iret
add
pop
addl
popf
leave
jnp
jp
xor
jno
xchg
push
cmp
ror
jp
mov
mov
hlt
daa
add
out
xchg
neg
cmp
mov
nop
push
lcall
jae
pop
dec
xor
stos
jnp
and
add
insl
sub
scas
sbb
jns
les
pushf
jp
xor
int3
lods
sbb
lcall
add
out
inc
aaa
sub
rcll
sahf
lahf
xchg
mov
xchg
lock
push
daa
sbb
or
mov
mov
adc
hlt
fs
mov
cmpb
mov
ret
loopne
and
imull
sti
ss
cmp
mov
jge
cmp
push
sub
filds
pop
fcoms
jecxz
insl
aad
rorl
push
int
or
shlb
mov
in
pop
orb
subl
outsb
pushf
sbb
mov
aaa
int3
sbbl
xchg
or
dec
test
push
xchg
fs
fcmovnu
fwait
jle
insb
test
loopne
xchg
sahf
stc
ss
jmp
in
je
out
xor
inc
adc
cmc
gs
mov
push
mov
mov
xor
jl
jmp
test
push
add
idivl
nop
into
pop
push
sahf
roll
js
stos
sbb
xchg
or
sbb
fucomi
mov
pop
mov
xor
cmpsb
aaa
fmuls
sbb
inc
add
mov
scas
mov
out
mov
loop
daa
sti
pop
mov
xor
jbe
adc
inc
movsb
pop
ret
xor
stos
mov
jmp
sub
cwtl
mov
xor
std
out
sub
or
ljmp
js
push
jmp
out
into
mov
xchg
inc
pop
std
inc
mov
pop
mov
mov
adc
popf
mov
ja
sub
fidivs
pop
sahf
inc
cmp
mov
and
xor
xorl
gs
push
in
scas
mov
mov
push
lds
clc
push
adc
fnstenv
aas
adc
dec
rorl
mov
icebp
add
out
jae
popa
mov
in
add
and
paddq
call
les
ret
in
call
imul
xchg
aaa
xorb
enter
sub
lods
lds
shlb
inc
mulb
jg
xor
repnz
dec
jnp
les
mov
gs
das
in
incl
sub
xchg
fwait
xorb
adc
xor
out
subl
xchg
dec
xorb
xor
cmp
testb
lods
movsb
insl
add
dec
push
fs
clc
inc
stos
and
mov
mov
mov
lcall
jne
hlt
or
test
leave
mov
inc
push
adc
cmp
and
lret
jbe
xor
cltd
sub
add
ffreep
movsb
js
cmp
sbb
lods
sarb
mov
das
add
jne
cmp
iret
idivb
pop
insl
sub
pop
xchg
mov
repnz
aaa
and
xchg
sbb
xchg
push
cmp
sub
pop
lret
cs
mov
inc
enter
xchg
jge
out
aam
pushf
fs
push
cs
iret
mov
fildl
pop
mov
dec
sbb
in
js
mov
testl
cltd
fwait
or
ficompl
jle,pt
addb
mov
rorb
mov
in
mov
sub
popl
mov
iret
data16
dec
shrb
movsb
cmp
and
insl
dec
movsl
dec
lods
shrb
call
pushf
shl
jo
int
and
inc
mov
mov
mov
aaa
sub
sbb
imul
pop
xchg
mov
cmc
mov
out
repnz
test
mov
cmp
mov
mov
push
pop
jno
fbld
testl
pop
fsubl
jp
xor
or
sub
outsb
pushf
add
push
shl
in
push
inc
loop
mov
in
fidivrl
sarl
hlt
roll
sbb
ljmp
or
cld
inc
ret
daa
ja
lcall
nop
cmc
notb
imul
jb
insl
dec
mov
imul
fmuls
movsb
sub
rcr
daa
andb
filds
dec
jge
and
xchg
ret
popw
cmpsl
or
xchg
aad
pusha
iret
mov
cmp
jae
add
or
push
jb
andl
push
icebp
out
lods
dec
lods
test
jg
or
pop
push
add
loop
dec
dec
sbb
adc
inc
cmpsb
adc
dec
mov
pop
int3
cmp
ret
out
mov
sub
add
out
imul
inc
or
mov
xlat
adc
aam
loop
xchg
inc
dec
xchg
fs
jmp
jecxz
and
inc
test
adc
xor
ja
cwtl
sbb
or
loop
cmp
in
ljmp
jl
test
nop
outsl
dec
mov
pop
lds
mov
mov
shrb
ret
xchg
inc
lcall
push
das
fldenv
insl
mov
mov
daa
mov
ret
lods
das
sub
push
dec
js
inc
mov
dec
cmp
dec
lods
inc
sbb
xor
xor
sbb
xlat
mov
out
and
lcall
ss
jb
fstenv
cltd
test
sti
rcl
xlat
lea
mov
dec
in
mov
leave
xchg
push
fidivl
mov
jmp
mov
mov
inc
sbb
xor
outsb
push
mov
inc
incb
mov
xlat
scas
cs
int3
sahf
hlt
pushf
add
inc
fbld
stc
std
mov
int
xchg
movsl
adc
and
and
add
fscale
mov
mov
cltd
mov
loopne
cmp
pcmpeqw
dec
mov
mov
mov
xor
inc
jb
add
xchg
in
jnp
iret
pop
outsl
shl
cmp
iret
adc
xor
jnp
xchg
push
lock
push
cwtl
dec
push
mov
pushf
in
or
loope
movsb
cmp
adc
leave
xchg
sahf
ret
cmp
mov
push
rcrb
arpl
push
jo
sbb
cmpsb
mov
inc
or
jno
popa
cmpsb
adc
xchg
cmpb
cmpsl
subl
push
mov
cmp
sub
repz
adc
cmp
shl
fs
or
jp
sbb
jmp
push
ret
xorl
xchg
out
xlat
js
arpl
pop
mov
or
fisttpll
sbb
lods
sub
sbb
adc
loope
cmc
test
fcmovb
stc
leave
dec
orl
push
lock
out
rol
out
insb
push
pop
pop
or
in
pop
clc
xor
inc
hlt
pop
jle
subl
mov
int
cld
sbb
cmp
test
cld
outsl
jae
dec
in
cld
xchg
and
mov
ret
add
mov
arpl
mov
jge
into
dec
jbe
and
cmp
cmp
stos
mov
rcrl
cs
dec
pop
pop
mov
pop
sahf
aad
add
mov
or
imul
popa
xor
jge
push
mov
cmp
xor
pop
arpl
sahf
inc
and
insb
sub
in
dec
rcl
or
add
dec
mov
cs
gs
jb
jb
pop
jp
arpl
fimuls
aas
iret
loop
dec
inc
fbstp
fnstenv
and
insl
call
int3
add
push
pop
js
push
dec
dec
pshufw
cmp
or
sahf
and
xor
sub
xor
xor
xlat
add
ds
jge
adc
dec
into
jmp
test
mov
das
pushf
imul
in
pop
nop
pop
rorl
cmp
pop
cli
mov
out
and
pmulhuw
dec
inc
ja
loop
shll
std
pop
jbe
push
pop
icebp
push
lock
stc
xor
gs
mov
fdivrs
jge
mov
cmpsl
jo
xor
into
test
mov
dec
push
decl
popf
insl
cmpl
shrl
out
ss
pop
in
cmp
adc
sti
ds
int
sub
mov
inc
ret
sub
stos
inc
data16
xor
sbb
ficoml
imul
mov
out
jmp
in
lds
enter
or
repnz
mov
mov
cltd
adc
in
dec
cli
inc
sbb
insl
sbb
mov
inc
mov
es
push
adc
pop
rolb
cmpsl
adc
aaa
lea
jl
jnp
inc
loopne
add
jge
in
sub
xor
or
test
pop
pop
cmpsl
xchg
fldl
les
and
subl
sbb
push
scas
in
mov
stos
cmp
jne
cmpb
ret
cmp
aam
js
and
jmp
jl
hlt
dec
orl
mov
cli
js
jp
cld
stos
xor
and
jg
aam
jmp
push
or
push
movsl
xchg
xchg
leave
idivl
in
sbb
aad
or
gs
cmp
jle
out
mov
call
cmp
inc
sbb
das
and
jne
cmpsl
add
testl
bound
inc
loope
aaa
arpl
pusha
outsb
aas
pop
inc
std
scas
adc
mov
xchg
push
sbb
or
shl
mov
stc
or
sub
pop
hlt
jae
aam
fabs
fs
adc
es
cmpsb
adc
push
leave
or
push
frstor
mov
aaa
lret
loopne
gs
inc
dec
pop
mov
scas
xor
pop
jae
mov
repz
mov
cld
push
push
popf
jb
in
pop
mov
loopne
cmc
add
jle
ja
mov
insb
sub
ficomps
mov
in
roll
cwtl
mov
cli
jae
mov
rcl
xchg
js
lret
push
jle
add
jmp
scas
sbb
jp
fidivs
pop
push
in
mov
fistpll
fisttpl
imul
push
push
fmuls
or
dec
push
mov
add
jp
mov
xor
insl
inc
fimuls
jp
mov
jo
mov
aaa
cltd
aas
cs
sbb
xor
jecxz
jb
jnp
scas
adc
hlt
std
aaa
fdivrs
cmp
aam
fbld
test
jb
sbb
daa
inc
lahf
cltd
jmp
add
movsl
mov
sub
sbb
xor
add
scas
sarb
sub
pop
aad
and
xor
xchg
shr
imul
rorb
out
inc
das
adc
pop
enter
mov
push
ret
mov
cmpsb
dec
lret
mov
mov
mov
test
fisubs
ljmp
cmpl
mov
inc
stos
cmp
movsb
or
push
mov
fsubrs
cmpsl
int3
test
push
dec
pop
lea
add
jge
fsubs
push
sti
mov
add
clc
js
inc
sbb
sahf
mov
scas
xchg
ret
aaa
jmp
xor
sbb
je
aas
dec
fsubrs
xchg
loope
ljmp
adc
xlat
or
inc
or
mov
shrb
inc
repz
popa
push
test
add
lahf
loopne
insb
jne
in
nop
push
push
cwtl
and
enter
jl
pop
cmp
adc
fistpl
ss
push
cmp
sbb
push
roll
mov
mov
fmulp
jge
xorl
pop
fcomp
adc
or
inc
pop
in
call
xor
loop
mov
cmc
cli
fsubrp
adc
xor
add
xchg
nop
mov
jecxz
dec
sub
hlt
in
stc
adc
ficoml
xchg
add
mov
inc
cmpsl
adc
fistps
fimull
xor
aaa
or
mov
insl
inc
sbb
in
dec
xchg
popf
jnp
xor
flds
cmc
lods
jno
add
testl
lret
in
das
aas
pushf
loope
mov
jae
les
stos
shlb
push
jb
roll
ret
jl
jle
aas
popf
jp
mov
dec
push
sbb
mov
mov
nop
ja
outsb
ret
xor
mov
xor
push
fstps
cmp
dec
sub
dec
sub
nop
lods
fimuls
int3
aad
cld
pop
xchg
or
jb
js
cmp
icebp
fs
dec
jmp
inc
and
lahf
stc
decl
inc
xchg
std
sub
sbb
add
loope
push
and
pop
aad
xchg
ds
fld
test
int3
xchg
ror
mov
xlat
scas
adc
add
mov
lods
xchg
nop
test
or
dec
adc
pop
test
xor
push
jns
js
stos
scas
addb
mov
fs
inc
shlb
test
jecxz
xchg
add
enter
icebp
adc
dec
dec
aaa
lahf
mov
movsb
aad
push
jnp
push
dec
pusha
mov
out
sub
js
in
fwait
xchg
int
fdivr
iret
pop
adc
pushf
sahf
out
pop
clc
mov
xor
popf
mov
or
shl
mov
daa
lahf
shlb
jbe
and
xor
jo
loop
ljmp
daa
cmc
mov
ja
mov
jl
mov
mov
mov
xchg
outsb
shl
pop
inc
jae
cmp
jmp
cwtl
addr16
jno
jecxz
mov
xor
mov
je
mov
lret
xor
loopne
pop
inc
leave
pop
in
jl
aad
int
push
int
add
sbb
out
icebp
andl
inc
daa
loopne
push
pop
mov
inc
sub
sarb
pop
rcrl
jge
in
cmp
mov
jl
mov
sti
lcall
xor
cmpsl
popf
sub
cmp
scas
pop
push
mov
pop
cmc
add
pop
imul
stc
pop
jns
adc
xor
xchg
add
sub
cmpb
push
std
push
jne
dec
fwait
jae
jle
mov
ds
pop
cmc
test
or
in
inc
and
aad
repnz
jecxz
dec
push
pop
cmc
out
or
js
fs
push
cmp
mov
add
xchg
insl
adc
decl
rorl
add
test
mov
jmp
or
lock
ja
loope
mov
mov
xchg
xlat
nop
push
pop
add
mov
out
cmp
call
aam
daa
fcoml
pop
idivl
sarb
mov
sbb
ja
int3
dec
loopne
test
dec
xor
movsl
cmpsb
jnp
dec
into
enter
cmpsb
enter
and
add
xchg
xor
lret
stos
int
ja
pop
xor
jns
aaa
cmpb
pop
mov
test
cs
jl
mov
mov
mov
push
push
adc
inc
or
leave
ljmp
addr16
or
dec
cmc
and
sbb
mov
fadds
aad
insl
jge
rcrb
dec
inc
jge
enter
pop
jnp
pop
out
inc
mov
pmaxsw
sbb
fwait
pop
inc
xchg
push
pushf
ljmp
bound
pushf
mov
cld
bnd
cmpsl
daa
push
pusha
and
adc
mov
inc
loope
cmpsb
das
in
fistpll
clc
jmp
aaa
dec
fwait
fs
fldl
push
cmp
xor
punpckhwd
arpl
popa
int3
std
out
jb
xor
daa
or
jbe
mov
inc
std
mov
popa
lock
and
and
leave
xchg
push
jnp
cmc
sbb
jne
out
push
cltd
push
fwait
mov
jmp
sbb
lret
cmc
clc
xchg
jp
cmpsb
jbe
lods
sti
sti
aaa
shr
push
sbb
push
andl
adc
rolb
inc
lret
int3
pop
fwait
mov
jp
and
inc
cmp
arpl
cmc
dec
jmp
imul
push
int3
push
mov
in
mov
ljmp
sub
lock
popa
mov
test
fadd
pushl
ret
test
ret
mov
jbe
call
push
push
xchg
ffreep
orl
jg
mov
cmp
call
or
mov
dec
test
and
gs
lods
test
roll
insb
add
jne
stc
pop
lods
std
in
pop
rcr
mov
sti
dec
loopne
out
das
dec
sti
jb
xchg
les
mov
enter
inc
fs
out
jo
fidivrs
sbb
cltd
movsb
xchg
sub
jge
inc
jno
mov
andb
sub
fbld
push
and
hlt
adc
movsb
lret
gs
pop
fcmovnbe
sbb
jle
aam
sub
push
fisttpl
in
repz
cmp
in
test
sbb
pop
push
adc
pop
outsl
lahf
fyl2x
jecxz
sbbb
mov
jae
jo
mov
or
mov
xor
cmp
jno
push
sti
in
mov
and
icebp
pop
fsubs
cmp
mov
inc
subl
add
movsl
fdivs
fcomps
or
pop
mov
mov
pushf
testl
int
sub
mov
push
adc
aad
mov
mov
adc
clc
rol
or
mov
jnp
xchg
cwtl
xor
cwtl
cmp
int3
cltd
outsl
int3
mov
mov
or
cmp
sbb
lods
jl
ja
mull
sub
mov
mov
inc
in
push
dec
pop
pop
pop
and
xor
jmp
and
mov
jne
mov
mov
stos
xchg
pop
xor
and
in
test
xchg
loop
jl
and
lods
push
loopne
sbb
mov
addr16
stc
pusha
jne
fldcw
sub
adc
lods
jecxz
sbb
insl
sbb
lret
add
gs
inc
aaa
cmpl
sti
aaa
dec
jmp
or
fistl
cli
adc
ret
add
jle
pop
sbb
lret
pop
ret
imul
sti
lahf
mov
bound
cmp
mov
sbb
mov
inc
xor
lds
lcall
ja
or
sbb
call
push
lret
cmp
cld
cmc
enter
push
push
mov
enter
bndstx
cmpb
dec
push
mulb
cltd
xchg
push
or
and
sbb
in
xchg
stc
fcmovnb
push
xor
pop
xchg
sbb
ljmp
pusha
xchg
mov
xor
es
ljmp
xchg
loopne
hlt
cmp
sub
adc
jge
adc
push
cmp
xchg
cmp
shll
push
aaa
notb
jle
out
xchg
pop
add
ja
mov
mov
add
stos
ret
fs
gs
dec
cmpsl
cs
fsubs
xlat
sbb
dec
pop
jns
sub
inc
pop
dec
jge
bound
nop
jl
lds
int
std
and
sbb
push
cmc
or
mov
jnp
add
jecxz
shll
shll
xchg
leave
les
fisttpll
scas
je
xor
sub
ds
xor
pop
and
push
pop
push
int
pop
xchg
xor
push
cmp
and
ljmp
scas
jb
bound
mov
mov
das
repnz
loop
adc
add
xor
and
push
mov
bound
mov
mov
das
repnz
loop
adc
add
xor
and
push
mov
bound
mov
mov
das
repnz
jecxz
adc
add
xor
and
push
mov
bound
addb
movsl
mov
rorb
jl
sub
imul
cmp
sub
cmp
jecxz
call
mov
cwtl
mov
push
sbb
or
cmp
sub
fprem
leave
call
fsts
test
scas
jmp
mov
pop
or
daa
adc
cmp
mov
sti
into
in
ljmp
jns
add
jecxz
add
sahf
jae
pop
cmpsb
lcall
mov
jnp
stos
stc
sub
mov
sub
movsb
imull
pop
mov
cwtl
lods
aad
mov
adc
or
jg
rcl
dec
shll
call
leave
clc
in
fldl2t
mov
push
jno
xchg
dec
test
push
out
or
fsubrs
test
jge
or
pop
leave
lods
mov
cmpsb
scas
inc
xchg
pop
movsl
hlt
mov
or
hlt
stc
fisttpl
stc
cmp
inc
lret
movsl
add
js
xchg
cwtl
out
loopne
push
int
jo
sbb
in
mov
hlt
pop
dec
jns
imul
sbb
inc
fcmovu
hlt
roll
mov
or
popf
addr16
dec
insl
sub
mov
mov
shr
int3
loope
ds
or
or
push
jp
jno
cmp
mov
test
std
call
mov
xor
and
je
sub
sbb
or
clc
leave
call
cltd
mov
test
push
sbb
or
cmp
sub
fprem
leave
call
cltd
mov
test
ds
pop
loope
push
mov
aaa
mov
cmp
add
insl
adc
dec
mov
das
inc
push
shr
push
push
jnp
mov
std
cltd
mov
mov
pop
mov
scas
lock
add
pop
mov
ficomps
jg
fsubs
dec
or
clc
jns
push
cmp
pusha
cld
sbb
test
lods
cs
mov
push
pop
loope
stc
dec
lock
movsl
push
pop
leave
jecxz
outsb
push
mov
mov
dec
rorb
into
shlb
and
mov
shlb
in
lods
pushf
cmp
in
rcll
cmp
lret
repz
push
mov
ljmp
push
addr16
inc
insb
and
sub
ficomps
jbe
scas
cld
out
mov
pop
vshuff32x4
leave
jp
or
clc
jmp
mov
push
les
adc
cmp
add
or
jae
fs
stos
pop
scas
call
scas
sarb
aas
mov
sub
and
in
movsb
out
push
pushf
push
ret
push
dec
outsb
cmpsl
pop
mov
push
cmc
outsl
adc
imull
jl
jp
adc
inc
aad
or
push
ds
sahf
xor
lds
xchg
cld
push
and
insl
push
inc
jbe
movsb
add
cmp
rclb
mov
sub
loopne
mov
and
xor
xor
add
arpl
int3
cmp
adc
mov
push
mov
xor
sti
into
and
jge
jnp
imul
and
in
xor
ljmp
xchg
loop
jmp
getsec
sahf
dec
mov
mov
rcrl
out
xor
mov
push
cwtl
adc
inc
cmc
mov
in
and
push
xchg
mov
pop
jb
push
push
fstps
sbb
out
xor
repz
loopne
sti
test
adc
mov
ljmp
jle
sbb
ret
decl
leave
nop
xor
inc
arpl
mov
sti
aad
pusha
adc
dec
inc
cmp
pusha
rorl
rol
cmp
in
in
lds
xlat
cmpsl
imul
adc
insb
lds
pushf
out
and
cmp
adc
xchg
aaa
sub
adc
dec
dec
mull
or
xchg
jp
sub
out
sub
imul
push
int3
in
push
xchg
gs
test
add
sar
testl
in
out
xchg
lea
xlat
jns
cmpsb
add
or
or
cmp
gs
hlt
inc
xchg
shlb
mov
testl
mov
call
push
add
mov
cli
iret
jae
mov
enter
in
cmp
nop
call
xchg
inc
mov
sub
aaa
push
aas
enter
push
mov
popa
mov
dec
add
xor
ja
test
out
pop
inc
outsl
loope
mov
mov
inc
sbb
mov
lods
out
cmp
test
enter
sub
jg
push
out
cld
popf
andb
xchg
std
orl
pop
aam
pop
enter
pop
arpl
les
xchg
jae
aad
mov
lcall
jno
popf
pushf
iret
sbb
push
cli
bswap
out
inc
fstl
bound
cmc
das
lret
cli
adc
pop
stc
add
mov
lret
sub
push
lcall
lea
scas
mov
aaa
pop
lcall
andb
sub
cltd
aas
push
sbb
add
lea
sub
outsb
mov
in
jmp
movsl
clc
fsubr
push
sbb
adc
cs
int
out
pop
xor
xchg
sarl
lret
pop
lods
movhlps
sahf
push
imull
rorl
mov
stc
mov
xchg
out
jae
adc
shrb
pusha
dec
push
add
or
xor
push
adc
mov
enter
sub
or
dec
imul
jbe
mov
les
mov
sub
scas
mov
repnz
or
push
jo
push
aas
inc
sub
xlat
push
mov
inc
ja
pushf
cwtl
inc
mov
lods
fistl
cltd
in
cli
and
pop
sahf
push
or
dec
lret
outsb
outsl
or
jg
aam
mov
cmp
adc
jno
xor
addr16
cld
and
xchg
sub
mov
sti
loop
and
dec
inc
addb
adc
rcrl
adc
adc
and
jecxz
mov
sub
xchg
mov
lret
adc
js
push
lods
scas
inc
push
imul
bnd
out
add
sbb
repnz
lcall
in
fwait
ja
sub
adc
mov
sbb
pushf
fldl
mov
dec
loopne
mov
pop
push
jo
cmpsb
out
xor
dec
mov
sbb
add
adc
cmc
pusha
add
pop
push
iret
fadds
dec
cmp
xor
lahf
stos
sarl
loope
sub
inc
dec
inc
std
mov
test
pop
and
loopne
shrl
xor
push
sub
rclb
les
add
clc
daa
mov
sbb
rol
cmp
in
mov
fmuls
outsb
rorb
cmc
mov
enter
or
cld
push
sub
call
out
cmp
js
out
mov
sbb
cmp
add
xor
dec
cmc
test
or
mov
push
jb
pop
mov
cltd
pop
data16
pushf
imul
test
dec
inc
notl
das
dec
hlt
test
mov
dec
adc
int
imull
add
ds
xchg
sbb
mov
call
das
cld
dec
lods
insb
push
pop
repz
and
mov
inc
mov
dec
sbb
icebp
adc
mov
in
shrb
movsl
push
xchg
cwtl
push
cwtl
sbbb
sub
out
je
jbe
leave
aam
jbe
popl
cli
adc
jne
int
jns
xchg
aaa
fstpl
enter
daa
mov
lods
shl
xchg
into
in
aad
mov
mov
mov
movsl
sbb
or
in
lahf
mulb
mov
xor
mov
test
lret
xor
fcomps
mov
and
pop
shlb
lock
jae
and
jg
mov
mov
pop
mov
jg
sbb
mov
jae
inc
dec
lock
pop
mov
jne
cs
pop
fwait
and
jmp
adc
lods
jnp
and
push
cmp
shr
jmp
xor
pop
lahf
fstps
mov
repz
xchg
add
sub
pop
adc
cmp
sbb
pop
jecxz
ficoms
add
scas
xlat
fistps
sub
add
or
jns
add
fwait
adc
mov
mulb
inc
inc
push
mov
sub
pop
adc
jne
pop
loope
cmp
mov
mov
or
mov
pop
xor
xorl
ret
sahf
lods
scas
mov
pop
xorb
add
pop
andb
xor
lcall
lock
cltd
andb
adc
loop
cld
in
inc
les
movsl
loopne
or
xchg
add
test
in
scas
add
shlb
pop
repnz
mov
sub
jmp
lret
das
sbb
js
test
fidivrs
pop
pop
daa
test
sbb
and
xchg
inc
xor
rcll
adc
push
mov
ss
xchg
adc
in
and
push
in
push
mov
push
cmp
fmul
sub
sub
orb
int
mov
aam
xchg
rorl
cli
pop
insb
dec
mov
push
sub
bound
test
dec
mov
call
clc
sub
lahf
rcr
mov
fs
xor
out
out
popf
sbb
push
addl
sub
pop
aas
repz
cltd
mov
addr16
and
sbb
mov
bound
sahf
loopne
cmp
jno
lea
sbb
push
outsb
lahf
lret
push
testl
in
rolb
aam
out
psraw
sbb
test
mov
xchg
and
inc
add
cmp
cmp
jle
push
lcall
sahf
dec
jns
xchg
lahf
xchg
inc
rolb
cmp
sbb
sub
daa
loopne
sarl
jmp
into
pop
fisttps
int3
push
bound
add
cmc
dec
test
scas
loop
pop
out
out
push
loopne
insl
addr16
out
or
xchg
fdivs
jb
ljmp
call
call
gs
dec
push
lret
sti
int3
xor
dec
cmpsl
stos
and
pop
jnp
jg
insb
fadd
xchg
fdiv
xchg
jecxz
xchg
rcr
push
inc
stos
jo
fstl
inc
lock
scas
or
test
jo
push
ret
jg
loop
sub
xchg
les
lret
xchg
push
sahf
loop
pop
insb
stos
fists
test
cmp
repz
stos
or
xor
and
bound
pop
test
mov
dec
inc
push
aas
sbb
jl
shll
pop
pop
dec
call
mov
mov
xor
pop
out
push
mov
lds
cwtl
fsts
gs
scas
dec
movsb
mov
popa
dec
test
cli
aas
aaa
xchg
inc
dec
addr16
in
dec
and
dec
push
lret
es
jns
pusha
pop
jns
dec
shl
loope
pusha
ror
cmc
cltd
and
sbb
jb
shrb
mov
pop
dec
shrl
jnp
adcl
movl
jns
lods
jle
xor
rolb
cwtl
enter
in
push
nop
in
out
leave
rcrl
cmp
nop
iret
repz
lods
cmpsl
and
dec
push
push
mov
fsubrl
repz
push
mov
jbe
std
cli
xchg
psubusb
mov
aas
xchg
aam
mov
inc
sbb
mov
iret
sub
push
or
andb
lret
sar
adc
aam
dec
adc
cld
jmp
addb
xchg
pushf
mov
inc
jmp
lahf
test
jmp
js
out
enter
add
lock
es
mov
pop
adc
or
jno
pop
or
adcl
shlb
mov
cmp
cmp
xor
push
mov
mov
shll
loopne
inc
dec
xor
fcmovnb
sub
leave
sahf
ret
push
repz
jecxz
or
ljmp
mov
hlt
ljmp
xchg
mov
cmp
add
sub
pusha
jbe
movsl
aaa
mov
xorl
ret
xchg
cmp
jmp
shlb
adc
jo
call
cmpsl
mov
stos
test
mov
pusha
sbb
pushf
int
filds
adc
bnd
inc
aad
loopne
ret
sub
mov
cmp
mov
cmp
cs
cwtl
add
dec
mov
mov
or
aad
in
pop
add
mov
loope
inc
lret
inc
add
es
cmc
xchg
jmp
jg
jle
xchg
xor
out
lds
outsl
or
test
mov
sti
jecxz
out
cwtl
inc
add
rcr
pop
xor
inc
in
jle
popa
mov
cmp
inc
inc
hlt
lock
jbe
dec
decb
adc
push
pop
sub
jb
inc
int
addb
insl
push
xchg
xchg
lods
aaa
data16
into
inc
shrl
mov
loope
or
pop
pop
daa
out
sub
fstps
repz
sbb
test
or
jl
test
std
sbb
in
lods
sbb
inc
sub
dec
clc
or
sbb
test
push
outsl
sbb
jnp
push
fs
mov
scas
andl
faddl
mov
push
mov
and
dec
outsb
cmpsb
jmp
push
xchg
ret
dec
dec
int3
rol
adc
pop
loopne
push
cmc
mov
jae
popf
push
pop
in
push
into
push
dec
ljmp
mov
cmp
push
adc
shlb
xor
push
icebp
pusha
fcomps
dec
sbb
mov
fs
jo
fcos
cmp
sbb
lcall
cmp
out
negl
jns
sub
add
dec
or
mov
test
adc
inc
ficoms
pop
mov
movsb
ja
pop
xor
push
rclb
mov
in
or
sti
cs
pushf
mov
sbb
cld
mov
fst
pop
outsb
loopne
dec
in
test
test
mov
ljmp
scas
fstps
and
sbb
push
adc
enter
mov
pop
cmp
insb
mov
lret
mov
xchg
mov
inc
dec
jp
sti
movsl
pushf
sub
lea
in
out
rorb
jmp
cmpsb
call
mov
sti
ljmp
xor
lret
ret
xchg
mov
add
or
pop
outsl
int
pop
xchg
rcl
push
jns
sbb
pop
and
nop
pop
fs
test
bound
mov
sub
fxam
loope
mov
pop
aam
loop
std
cwtl
int3
in
mov
mov
push
fwait
sub
outsw
fcoms
inc
rorl
jg
inc
lds
test
dec
jnp
adc
push
sbb
sub
cs
in
int
shll
mov
fldcw
mov
mov
dec
leave
mov
mov
cmpsb
or
lods
cmp
cmp
shll
or
lods
lcall
dec
dec
mov
loope
mov
mov
aas
movsl
jne
and
cld
imul
xor
lds
jge
mov
add
sarl
adc
fidivrs
aad
adc
std
nop
pop
or
adc
insl
pop
sub
std
xor
xor
xchg
mov
ret
in
int3
outsl
rcrl
lahf
mov
scas
out
shrb
jo
sahf
lret
les
test
mov
dec
outsb
dec
xor
xchg
sbb
cwtl
mov
sbb
test
lcall
sahf
rcll
jb
mov
out
mov
cmpsb
xchg
jnp
xchg
mov
dec
xchg
push
mov
adc
arpl
pop
fisubrs
rcll
dec
xchg
mov
mov
or
loopne
jle
rcrb
inc
jp,pn
and
hlt
loope
jae
inc
ret
rolb
mov
push
add
call
push
jp
lret
dec
pusha
inc
mov
pop
add
and
fisubs
imul
inc
pop
out
inc
pop
stos
xchg
pop
jmp
addr16
outsb
jl
cltd
popa
pop
push
lahf
mov
pop
mov
testb
mov
push
aad
inc
imul
adc
or
fs
mov
xchg
jb
push
std
push
inc
nop
push
xor
jge
cmpsl
adc
test
hlt
fcoml
sub
imull
mov
loopne
xchg
imul
sarb
shrb
dec
mov
jnp
cmp
shlb
mov
mov
add
movsb
into
cmp
xor
pop
push
cmpsl
xchg
decb
add
repnz
outsl
les
pop
sbb
xor
lods
mov
out
sub
scas
out
dec
lock
pop
adc
test
xchg
push
icebp
cmpsb
mov
jmp
arpl
dec
xchg
sub
cmp
add
sub
movsl
add
stc
jo
push
in
pop
mov
xchg
xor
inc
fdivrs
cmp
stos
orb
sub
sbb
imul
and
pop
mov
or
out
lahf
push
mov
inc
fdivs
cmc
xchg
jbe
sub
xchg
rclb
xor
adc
into
jecxz
pop
arpl
mov
mov
inc
icebp
lahf
jp
sub
adc
jo
mov
jl
push
inc
hlt
sub
into
scas
push
mov
sbb
aaa
jne
fmuls
adc
addr16
loop
mov
xor
push
jmp
xor
xor
int
xchg
sub
les
or
div
dec
fidivl
jns
fcoms
and
int3
sarl
mov
addr16
inc
push
mov
sub
fldt
scas
imul
cltd
fmull
or
mov
js
cmp
pop
cmpsl
cmp
ljmp
je
jg
stos
pop
insl
push
cmp
bound
sbb
adc
dec
mov
push
clc
popa
loope
repz
and
dec
test
pop
iret
push
pop
frstor
test
mov
es
loope
lahf
jg
push
pop
xlat
mov
and
push
es
push
mov
mov
shr
jo
pop
adc
sub
popf
sub
push
ret
sahf
mov
test
fstps
xchg
stos
add
xorb
pop
add
xchg
icebp
and
dec
daa
push
mov
fbstp
inc
fs
nop
fdivl
mov
mov
xor
mov
roll
inc
stos
adc
loop
mov
push
out
adc
repz
popf
rcll
jmp
ror
adc
or
dec
cmp
pusha
dec
cmp
pop
mov
out
xchg
jae
pop
ret
sbb
jo
jecxz
mov
inc
cmp
push
add
es
add
in
mov
push
lds
testl
mov
jge
push
add
call
mov
or
sub
adc
ljmp
or
test
sub
xor
mov
and
jmp
outsb
mov
xchg
mov
sub
xchg
enter
rorl
arpl
shrl
push
inc
inc
inc
repnz
xchg
adc
lret
mov
fdivrp
push
pop
js
cmp
lahf
scas
push
push
push
jns
and
and
push
sahf
ds
pop
cltd
mov
adc
mov
xchg
cli
sbb
pop
hlt
inc
das
andl
add
jnp
mov
sarb
push
insl
sbb
les
scas
adc
scas
mulb
out
lock
jg
movsl
add
rorb
sub
cwtl
mov
imul
stos
adc
adc
pushf
int
jno
ficomps
in
adcb
xchg
nop
in
xor
cli
push
imul
es
cmp
jg
push
je
and
pop
fs
mov
rorl
cs
test
mov
out
decb
push
jle
lods
je
adc
or
push
loop
jae
cld
mov
sub
sbb
sbb
mov
lahf
push
addr16
cld
cmp
push
mov
in
xor
push
sbb
fldl
out
bound
stc
and
pop
pop
in
push
stos
pop
lret
fnsave
icebp
xchg
jmp
mov
in
adc
xchg
js
js
cmp
mov
mov
dec
lock
icebp
scas
sub
scas
mov
rorl
jbe
dec
mov
inc
sub
or
arpl
add
ja
sub
clc
test
leave
sub
clc
xchg
inc
lock
mov
push
mov
fs
inc
mov
mov
loopne
pop
ljmp
xor
xchg
into
in
xor
in
fcoms
push
sbb
adc
and
jne
into
mov
sbb
push
maxps
cltd
or
jg
test
bound
xchg
push
in
cmpsb
inc
movups
hlt
push
mov
adc
jle
push
stos
popa
enter
add
mov
dec
sbb
xchg
repnz
pop
push
add
xor
mov
in
fsubr
and
cmp
outsb
outsl
int
mov
scas
push
rcl
and
std
cmpsb
pop
add
dec
negl
scas
in
idivl
inc
xor
mov
inc
push
fnsave
xchg
mov
sub
or
adc
outsl
outsl
and
push
lret
popf
dec
mov
jne
add
aam
add
or
adc
ss
fs
daa
je
out
icebp
cli
mov
fnstcw
mov
loopne
test
std
sub
movsb
mov
dec
and
fnstcw
ss
stos
fmull
add
mov
jae
mov
inc
stos
inc
xchg
cmpsl
or
lods
adc
cli
xchg
pop
inc
das
inc
pop
push
mov
mov
js
stos
clc
ljmp
xchg
pop
lods
sar
mov
mov
lcall
out
and
fwait
add
cs
jmp
xor
repnz
sbb
mov
int3
xor
pcmpgtw
cwtl
cmpsl
push
pusha
lods
sbb
lods
out
jg
enter
js
aaa
jle
jge
jl
scas
daa
popa
test
data16
xchg
cs
jle
xchg
push
lea
mov
add
lea
xor
pop
add
cmpsl
inc
ret
pop
or
dec
popa
sub
pop
bound
xchg
pop
pop
and
ret
cmpsl
cmp
cmp
gs
dec
add
mov
lcall
push
xchg
xchg
or
mov
popf
mov
in
push
mov
push
mov
xor
push
andb
jo
aam
adc
mov
pop
imul
and
scas
inc
cmp
mov
jns
dec
inc
out
movsl
xlat
enter
adc
xchg
fsubl
loopne
scas
dec
dec
dec
je
push
les
lds
pop
imul
sbb
or
clc
leave
call
cltd
mov
test
push
sbb
or
cmp
sub
fprem
leave
call
cltd
mov
test
sbb
dec
mov
or
sbb
or
stc
leave
in
or
jmp
test
xchg
inc
insb
dec
pushf
adc
or
cmp
sub
cwtl
test
inc
push
fsubr
mov
inc
loopne
lock
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
xor
in
cltd
leave
cwtl
jo
or
in
icebp
incl
add
add
push
add
or
add
adc
and
add
add
xor
mov
add
jl
ja
aas
add
jo
repnz
add
add
add
addl
aad
push
add
add
add
add
popa
add
mov
rolb
cmpsl
add
movsl
add
add
add
add
clc
add
add
add
in
add
add
add
add
add
imul
add
push
add
bound
push
add
add
scas
add
add
add
add
add
add
add
add
add
add
jl
pop
add
add
lret
add
add
addl
aam
add
int3
add
add
add
push
add
in
add
add
add
add
add
add
pop
add
arpl
scas
add
push
add
nop
add
lret
add
add
add
inc
add
add
push
add
push
add
add
add
add
adc
in
add
add
lea
lahf
add
add
push
add
add
das
add
clc
add
adc
xor
add
add
push
add
add
aam
push
add
add
add
mov
and
outsb
add
add
add
add
add
add
insl
add
add
add
add
add
add
xchg
add
add
inc
add
fadds
repz
add
rolb
add
add
add
add
add
and
test
js
icebp
add
add
add
add
add
add
add
add
jl
lret
add
add
add
add
add
add
add
bound
popa
add
add
add
add
add
add
icebp
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
xchg
add
or
push
add
add
ret
add
repnz
add
aam
ja
inc
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
add
popf
add
sbb
aad
lret
add
add
cmpsl
add
add
incl
dec
add
add
add
xchg
add
inc
add
add
adc
pop
add
outsl
add
add
dec
add
add
add
add
add
rolb
int3
add
add
add
add
add
icebp
add
add
mov
add
add
xchg
add
add
add
rolb
call
add
js
rolb
imul
add
cwtl
add
add
mov
add
add
add
add
jnp
aas
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
std
add
jg
sub
push
add
add
add
add
add
fs
inc
fidivl
fcmovu
mov
ret
ljmp
adc
pop
imul
pop
adc
ss
add
inc
and
leave
call
test
dec
iret
outsl
add
push
sbb
inc
inc
gs
loopne
mov
jb
std
xor
and
push
lds
jno
lret
inc
or
fisttps
mov
mov
mov
xchg
popf
xor
stc
jmp
hlt
pop
dec
jno
pop
popf
cmp
sub
testb
jl
mov
mov
popa
cmp
jecxz
push
adc
addr16
in
xchg
mov
mov
pop
ret
mov
mov
inc
movsb
insl
negb
or
xor
dec
int
aam
dec
in
loopne
add
call
ja
or
lea
fs
iret
adc
push
add
lock
xor
je
stos
and
lods
inc
addl
push
dec
dec
lret
xor
stos
fsts
adc
push
add
roll
ljmp
jb
lods
cmpsl
mov
fisttpll
xor
aas
mov
in
cwtd
imul
je
lret
in
insb
jge
dec
sbb
ljmp
xor
loop
mov
xchg
in
adc
pushf
aas
pop
jns
gs
ljmp
outsl
imul
insb
cmp
jecxz
mov
movsb
or
test
popf
aas
jl
dec
cmp
lret
nop
movsl
xchg
or
lds
push
in
mov
dec
shl
mov
add
add
ja
cmpl
fidivl
iret
push
sbb
sbb
and
fwait
mov
gs
mov
jle
add
in
mov
dec
lahf
js
push
scas
fnstenv
sbb
xchg
inc
icebp
lret
mov
js
mov
sub
dec
cmp
mov
imulb
xor
sbb
sbb
adc
mov
aam
fdivrs
mov
cmpsl
or
fldl
scas
and
cmp
scas
jg
rolb
out
lahf
jnp
into
daa
arpl
ljmp
adc
xchg
es
stos
xchg
sti
lods
inc
aad
dec
jae
jge
or
xor
sbb
jmp
cmc
ret
mov
sub
jne
lret
and
cwtl
insl
fsts
nop
pushf
mov
push
aam
test
inc
mov
jp,pt
test
mov
inc
xchg
mov
jle
jl
sbb
pop
xchg
fisubrs
jnp
test
inc
push
cld
je
jae
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
