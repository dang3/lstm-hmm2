imul
adc
add
sub
enter
loop
cmpsl
call
ja
scas
cmp
cmp
sbb
cld
xchg
jle
mov
out
ja
dec
movsl
sub
and
xchg
ja
icebp
jge
xchg
sbb
push
xchg
mov
orl
sub
mov
adc
and
rol
rcr
pop
sbb
jp
pop
dec
pop
push
push
inc
mov
outsl
lock
mov
gs
scas
sti
adc
imul
inc
shlb
push
mov
jnp
cmp
dec
pop
jo
push
mov
shr
mov
popf
jae
xchg
jmp
in
mov
dec
or
ds
movhps
dec
ds
or
mov
inc
addr16
sahf
xchg
sub
stc
in
xchg
mov
lock
sbb
push
subl
sbb
adc
cmp
cmpsb
jne
pushl
outsb
mov
push
aad
inc
std
cmp
andl
xlat
cs
stos
and
mov
add
sbb
jae
imul
enter
int
xchg
adc
xor
add
popa
hlt
lahf
lods
mov
ficoml
fwait
jl
stc
sub
xchg
imul
pop
or
push
aad
mov
int3
mov
dec
cwtl
ret
or
sub
fstpl
jp
push
mov
daa
rcrb
scas
cmp
ja
sarb
loope
stos
or
sbb
jb
pop
pmullw
into
lret
or
lcall
fnstcw
std
adc
cmp
lea
push
out
cmc
and
fs
lahf
cmpsl
mov
sti
inc
pop
mov
sbb
sbb
jns
out
ss
mov
jns
dec
sahf
inc
scas
mov
ds
xchg
rorb
loop
mov
push
gs
aad
inc
cmp
jo
movl
cmpsl
stos
outsl
aas
loop
cmp
or
jecxz
test
and
dec
sbb
test
lahf
sbb
je
or
insl
aaa
add
xchg
mov
sbb
pop
xorl
dec
adc
xchg
adc
jp
addb
mov
adc
loopne
xchg
pop
inc
jl
in
int3
nop
push
shll
jae
adc
fistps
push
negl
mov
int
ss
push
pop
add
repz
push
pop
mull
and
andps
sbb
push
rcl
sbb
js
push
outsl
icebp
ja
xor
pop
decb
aam
pop
mov
test
mov
sbb
mov
mov
push
and
cli
mov
rorb
mov
and
cmp
test
jmp
inc
shr
inc
jno
hlt
imul
mov
mov
imul
sub
es
fdivrs
es
test
daa
add
loop
push
mov
xchg
jecxz
aaa
mov
adc
dec
jp
shlb
fsubl
shrb
rclb
sahf
mov
sbb
xor
mov
iret
insb
cmpsl
mov
xlat
lds
scas
into
dec
and
sar
imul
mov
femms
sub
pushl
jb
jb
pop
dec
mov
dec
mov
pop
je
int3
mov
out
movsl
in
vpsrlq
jns
aad
jnp,pn
xor
jge
ja
jae
iret
sbb
sbbl
push
push
ljmp
push
push
jmp
cmp
in
pop
lcall
mov
and
adc
out
or
inc
mov
lock
andb
lds
leave
loopne
mov
lea
pop
cmp
pop
sbb
sbb
out
pusha
jl
cmp
enter
sub
outsl
sub
sub
and
push
loop
hlt
data16
push
lahf
test
faddl
pushf
repz
pop
test
test
into
mov
mov
int3
sub
adc
cmp
pushf
pop
stos
scas
mov
sub
repnz
jo
xchg
pop
ljmp
mov
insb
xchg
inc
mov
sub
mov
cmp
and
imul
scas
xchg
fcoms
lahf
xor
sbb
dec
jl
in
jp
mov
cmpsb
mov
das
insb
mov
ds
dec
jmp
mov
push
jb
sub
dec
sub
clc
pop
shll
lods
jg
lret
movsl
mov
sbb
sbb
ljmp
loop
js
and
adc
punpckhbw
xchg
pop
imul
fsts
stos
ss
in
ds
jb
dec
lock
add
xchg
icebp
loope
mov
ret
ss
stos
je
pusha
lock
shrb
xchg
pop
sub
sub
push
push
jmp
stc
andb
adc
sub
fiadds
xor
mov
sbb
out
inc
ljmp
cld
mov
fcoml
outsl
add
loopne
pop
and
insb
jno
repz
nop
add
dec
pop
sqrtps
lahf
arpl
xlat
cmp
rorb
inc
inc
mov
or
cmc
mov
rol
fnstsw
push
jge
popa
mov
outsb
jae
push
or
cmp
out
add
mov
loopne
inc
test
xor
jns
mov
insl
out
jns
dec
and
mov
add
jae
ret
adc
xchg
mov
jbe
fsubrs
or
jnp
or
or
sub
adc
fstp
ja
and
movsl
icebp
sub
je
mov
fstp
aad
or
xor
fbld
cmc
adc
push
aas
pop
cmp
iret
shrb
lret
push
or
and
push
pop
inc
push
sbb
outsl
push
xchg
pop
sti
sbb
imul
sbbb
sub
repnz
and
cmp
xlat
mov
push
adc
daa
pop
test
xchg
push
ret
xor
imul
push
dec
jecxz
pop
push
rorb
lock
test
push
sahf
pop
popa
es
jns
mov
test
add
aam
dec
push
inc
inc
lods
xchg
cmp
lret
xlat
mov
fimuls
sub
orl
stos
stc
js,pt
mov
repz
repnz
cmpsb
inc
sar
iret
rol
adc
pop
stos
push
dec
shlb
push
inc
or
cmp
ljmp
jnp
push
nop
mov
add
pop
jne
sub
xor
in
cmp
repnz
mov
push
add
inc
sbb
cli
ret
sub
jge
jecxz
jge
scas
add
not
pop
das
mov
mov
xchg
into
adc
dec
jns
ljmp
data16
dec
pusha
cwtl
jo
add
jg
or
mov
imul
sub
add
sbb
inc
mov
stos
adc
filds
mov
std
hlt
addr16
gs
lds
mov
xorl
inc
mov
push
pop
inc
popa
sbb
sub
mov
jns
sub
mov
out
push
xchg
pop
dec
jne
mov
mov
jmp
jge
std
pop
popf
jb
xchg
ljmp
sar
and
jbe
push
pop
jo
js
xchg
push
rorb
js
aaa
frstor
scas
mov
push
sbb
jbe
sbb
aad
pushf
sub
imul
cld
push
mov
test
fcoml
and
stos
cmp
jge
mov
and
aam
hlt
push
add
in
sub
xchg
aam
lods
xchg
push
fsubp
dec
movsb
adc
or
add
popf
fdivrl
aaa
fsts
mov
aad
shrb
push
ret
lcall
into
xchg
loop
sbbl
js
repnz
pop
or
ret
imul
pop
pop
fadds
sbbb
and
cwtl
fnsave
pop
js
jecxz
cld
outsb
inc
jae
jo
js
pushf
mov
push
sar
arpl
mov
and
sbb
pop
mov
roll
std
test
xchg
mov
or
mov
rcrb
add
push
mov
cmp
adc
or
mov
or
or
adc
jl
les
adc
xchg
lret
enter
ds
inc
lods
jo
sarl
test
loop
pushl
or
cmp
add
shll
add
aam
enter
xchg
movsb
scas
iret
dec
icebp
pop
js
and
ja
rcl
push
ljmp
mov
jns
repz
xchg
push
mov
and
outsb
xor
stos
lods
enter
icebp
mov
pop
dec
cld
std
push
loop
inc
cmc
cli
out
jl
popf
or
jle
out
mov
idivb
ss
inc
ljmp
fwait
rorb
cmpb
jl
outsb
inc
jo
dec
out
mov
xchg
insl
aas
push
push
xchg
cmp
pushf
add
leave
xor
ds
inc
ret
push
push
push
shlb
dec
stos
cli
mov
pusha
cmc
sbb
push
xchg
data16
or
pusha
idivl
inc
jb
arpl
mov
testl
imul
pop
mov
test
inc
je
sbb
mov
lret
jmp
cmp
inc
daa
adc
out
movsb
cmc
daa
movsl
sub
add
add
adc
idivb
rorl
sbbb
cmp
mov
xor
std
fs
repz
pop
cmp
pop
std
inc
pop
cmp
rcrb
mov
test
fisubs
js
xlat
xchg
mov
loopne
mov
scas
cmpsb
stos
icebp
and
xor
hlt
stos
xchg
pop
popa
icebp
adc
cmc
push
jno
shr
adc
mov
add
pop
mov
loope
lret
daa
adc
add
dec
push
xor
shll
cmp
nop
movsb
sub
out
fistps
pushf
in
cltd
pop
mov
aaa
mov
or
inc
fbstp
dec
xor
sub
rolb
in
jno
xor
mov
sub
pop
aaa
div
jnp
mov
or
jae
hlt
insl
loopne
es
adc
out
adc
aad
inc
adc
sbbl
jg
sub
sub
push
mov
mov
enter
orl
jae
mov
xor
sbb
sub
jb
cmp
call
xchg
jae
iret
mov
mov
insb
sbb
push
mov
pop
je
aas
fcmovnu
add
sti
or
push
clc
dec
bound
pop
mov
ja
rcrl
addb
iret
fisubs
and
pusha
xchg
pop
inc
or
movsb
f2xm1
or
jmp
cmc
dec
mov
pop
xchg
jb
test
inc
jl
cmp
int
add
dec
push
pop
lret
imul
pushf
aas
icebp
mov
inc
add
dec
rcrl
dec
out
fcomps
js
aad
inc
adc
and
mov
pushl
adc
call
mov
sub
in
add
mov
cld
push
pop
pop
jmp
xchg
mov
jle
movsb
iret
adc
es
iret
inc
mov
loope
sub
push
mov
or
sbb
mov
fimuls
shrb
std
out
std
jge
adc
sub
mov
mov
cmp
sbb
jecxz
mov
fldenv
mov
pop
cltd
aaa
or
cmc
jmp
sbb
jo
mov
jo
xor
and
das
push
test
and
lods
pop
inc
cmp
sbb
mov
aam
popf
pop
pop
lahf
decl
das
enter
xor
and
push
jp
aad
adc
mov
push
inc
insb
or
push
cmpsb
mov
pop
cltd
add
loope
xor
pushf
adc
loop
iret
adc
scas
or
mov
adc
fistpll
pusha
scas
add
ret
cltd
mov
mov
icebp
dec
dec
enter
stc
and
in
xchg
dec
sub
out
clc
fcom
lea
test
mov
dec
insl
pop
subb
arpl
pop
jne
dec
out
cmp
cmpsl
jnp
or
pop
cmpsl
pop
xlat
jno
scas
xchg
jecxz
daa
pushf
or
mov
jle
inc
nop
xchg
sbb
push
xchg
fs
sub
lock
mov
xchg
fstps
or
loopnew
cld
fld
cmp
ret
mov
sbbb
jno
sub
cwtl
mov
in
fsubrs
mov
les
int3
pop
popf
push
sub
adc
idivb
and
icebp
lds
xor
daa
dec
testl
pop
lods
les
mov
sbb
mov
shll
dec
lret
and
mov
roll
call
test
sub
jae
xor
ret
sbb
cli
and
aam
sbb
cld
rcrl
ds
mov
push
xchg
ds
arpl
in
aaa
cmpsl
mull
daa
icebp
sbb
mov
lock
pop
stos
xchg
jae
cmpsl
repnz
bound
sbb
xchg
aad
xor
xor
jp
sub
add
sub
call
pop
in
inc
mov
test
adc
mov
mov
adc
adc
imul
repz
fbstp
repnz
ja
cld
jns
cmp
pop
mov
cltd
dec
cld
cmp
and
push
push
lods
cmpsb
das
fmull
lret
in
aam
adc
mov
xchg
xor
idiv
push
daa
pusha
lods
pop
test
test
movb
cmp
and
mov
sbb
mov
test
sub
arpl
mov
and
and
dec
scas
pop
roll
in
mov
push
nop
aam
bound
push
outsl
cld
mov
dec
and
cwtl
push
xchg
add
mov
insl
sbbb
jae
lret
notb
leave
xor
les
shll
ret
mov
pop
das
sub
xchg
cmp
sub
std
push
jmp
inc
push
or
and
pop
xchg
aaa
add
xlat
repz
xchg
imul
jno
push
movsb
dec
xor
in
cwtl
add
adc
iret
push
xor
xchg
test
jno
call
dec
sbb
aam
sub
sbb
in
notb
mul
movsl
xchg
out
push
pusha
jecxz
and
dec
stos
sbb
mov
push
ret
sbb
inc
movsb
aad
insl
enter
filds
clc
sub
dec
cmp
jo
jge
int
test
xor
mov
xchg
aam
add
or
dec
dec
shll
add
mov
adc
fidivrs
lret
testl
sbb
into
out
inc
cmp
shll
mov
mov
test
add
shrb
shl
inc
shl
and
in
xor
jmp
bound
int
push
nop
adc
mov
or
mov
mov
inc
pop
cmp
mov
addr16
hlt
lods
xchg
adc
ret
inc
adc
pop
dec
sbb
test
movsl
dec
push
shrb
scas
ret
out
dec
in
fstp
sub
fisubl
jns
sbbl
add
xor
sub
and
mov
stc
push
hlt
ret
fldenv
sub
lret
jge
sub
int
mov
faddl
dec
and
sbb
call
and
and
xchg
add
fs
sub
out
push
lea
cmp
and
test
pop
inc
in
into
dec
and
repz
cltd
in
mov
lds
xor
sub
aas
cmp
pop
xor
xchg
cmc
out
jb
ljmp
add
xchg
xor
mov
addr16
shlb
xchg
xchg
inc
and
xchg
cli
loop
dec
enter
dec
push
push
scas
outsl
cmp
cmp
sbbl
pushf
sub
mov
setnp
rolb
adc
jne
xchg
lods
pop
or
ds
sbb
inc
xor
daa
mov
adc
push
call
xchg
xor
mov
inc
std
inc
fdiv
jbe
dec
fisttpl
sbb
hlt
mov
push
pop
rolb
inc
xchg
aas
xchg
fs
mov
xor
xchg
or
fsubrs
stc
stos
xor
jecxz
notl
cs
mov
mov
add
mov
pop
sahf
inc
mov
mov
push
and
xchg
fdivs
inc
sub
add
cmp
mov
mov
dec
cmpsl
fildll
testl
call
mov
and
into
out
dec
sbb
xchg
jb
jne
cld
mov
xchg
inc
dec
cmp
cli
fcmovnb
cs
aas
fbstp
lds
mov
mov
pop
aaa
mov
sbb
cwtl
cmp
jecxz
rolb
sbb
jne
xchg
push
leave
xor
fs
pusha
push
pop
and
addr16
testl
xlat
outsb
xor
fildl
pcmpeqw
adc
mov
rolb
aas
push
jle
xor
divb
not
in
scas
or
jns
enter
and
dec
mov
mov
outsb
jns
add
sbb
and
mov
lds
jmp
int3
cmc
mov
add
cmp
icebp
das
jle
out
mov
test
call
adc
xchg
adc
ficompl
fsubl
incl
or
xor
scas
fisubs
add
mov
push
fcoml
pop
jp
or
mov
in
mov
sbb
cld
mov
jp
pop
jg
es
rolb
push
out
mov
in
xlat
mov
pop
xor
cmp
push
mov
add
xchg
out
mov
xor
icebp
test
popf
notl
sbb
push
sahf
xchg
lds
stos
dec
stos
cmp
pop
out
pop
gs
shlb
cmpsl
pop
or
in
out
decb
repnz
xchg
arpl
xchg
jmp
cli
enter
cltd
fnstcw
filds
jae
nop
or
pop
or
xorl
mov
out
or
push
add
sub
lahf
aas
mov
mov
jp
int
cmpsl
mov
mov
pop
pop
or
gs
cmc
shlb
bound
jne
add
push
adc
jnp
xchg
sar
repnz
ja
xchg
pop
xor
jp
out
hlt
das
pop
repnz
adc
sub
dec
jl
dec
mov
movsb
cmp
lret
sbbl
mov
and
lods
push
add
shr
sub
dec
inc
jmp
imulb
ret
cmc
test
gs
pop
and
pop
fidivl
in
lds
test
and
icebp
jae
push
and
mov
std
dec
iret
fs
pop
jge
add
popa
mov
add
jp
inc
adc
mov
inc
loopne
jb
adc
stos
add
js
ljmp
mov
cmovns
fsubrp
movsl
js
cltd
push
fadds
xchg
gs
and
jns
fimull
adc
sbb
jmp
mov
shl
sbb
idivl
jns
gs
cmpsb
into
loope
sti
adcl
sub
aas
mov
stos
repnz
cld
lock
je
adcl
and
pusha
mov
pop
pop
cwtl
pop
mov
bnd
mov
movsb
aaa
fsubl
test
aaa
int3
xchg
flds
mov
jl
jno
ja
insb
ss
sub
and
movsl
inc
dec
int
jno
cld
scas
lcall
adc
rcrb
in
leave
je
imul
clc
rcll
cmp
insl
push
or
aaa
adc
dec
negl
call
stc
push
sbbb
cltd
jle
jp
mov
and
inc
lds
mov
ljmp
ret
cmc
xor
in
jae
mov
add
call
mov
pop
add
sbb
rcrb
jl
mov
jp
mov
testl
adc
cmp
out
xor
lods
push
addb
jae
fildll
mov
push
pop
dec
mov
bound
cs
dec
cltd
mov
add
cld
xlat
fwait
pushf
icebp
sub
adc
jmp
jnp
fprem1
clc
popf
mov
pusha
adc
test
mov
pop
hlt
mov
pop
int
push
jmp
add
std
std
stos
or
scas
stc
xchg
loope
push
fwait
jns
insl
mov
adc
and
in
in
stc
outsl
add
mov
lods
ljmp
lret
mov
aad
mov
sub
in
cmp
push
jmp
jp
xchg
mov
cwtl
or
cmp
loopne
data16
rcrl
sub
add
inc
mov
shlb
dec
sub
push
out
fidivs
dec
test
jnp
mov
arpl
mov
and
pop
pop
or
xor
push
and
repnz
add
out
lret
mov
jg
andb
mov
popl
cmp
jnp
pop
fdivr
scas
pop
jnp
divl
cmc
push
ss
test
sahf
stos
leave
or
mov
sub
dec
ljmp
sub
orb
xlat
inc
incl
movsl
in
mov
stos
adc
in
push
mov
lea
cld
ret
jno
sbb
inc
cmp
scas
leave
cmp
scas
loop
push
mov
in
in
test
dec
aam
adc
into
dec
call
xchg
movsb
or
push
lret
loop
xchg
push
je
xchg
inc
shrb
jmp
or
push
data16
daa
icebp
movsb
push
insb
jns
sub
jmp
push
pushf
push
mov
dec
vpcmpeqw
mov
dec
add
mov
sahf
aaa
or
outsl
out
pusha
aad
addb
into
adc
out
lahf
stos
inc
push
push
sub
mov
mov
cmp
push
shlb
sbb
aas
daa
outsb
push
add
xchg
aad
rcll
test
sbb
push
ret
out
clc
add
sti
jno
sbb
notl
pop
jne
test
push
pop
sub
leave
sub
xchg
push
push
mov
shll
pop
outsb
das
mov
pushf
rcrl
pop
jno
lcall
fisttps
mov
mov
mov
jmp
adc
adc
fadds
mov
mov
sub
scas
or
sti
not
mov
push
addr16
sbb
jne
sub
int
inc
dec
cmp
xchg
xor
icebp
scas
iret
pop
cltd
pop
mov
sbb
add
scas
popf
cmpsb
testl
push
sbb
pop
stos
sbb
sub
add
add
cld
adcl
in
fcoms
jmp
pop
cwtl
inc
xchg
mov
pop
ljmp
fiadds
sub
adc
js
xchg
loop
mov
xchg
or
stos
add
outsl
rcrl
mov
bound
std
in
adc
popa
ja
push
call
mov
movsl
pop
mov
shll
cmpsl
push
xchg
xchg
daa
fisttpll
cmp
mov
pop
mov
sti
or
adc
insb
insb
lods
xchg
sahf
in
inc
outsl
enter
clc
lahf
sub
or
add
in
dec
cmp
aas
sahf
les
mov
je
out
sub
and
int3
mov
fcmovne
out
jmp
ss
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
mov
test
push
.byte
.byte
loopne
xchg
dec
sub
add
add
decl
mov
add
add
add
int
add
add
add
ret
add
lahf
add
in
add
mov
add
in
add
fcompl
add
add
add
stos
lahf
add
fcompl
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jo
imul
add
addr16
insb
outsl
jae
dec
gs
add
dec
insb
gs
jne
add
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
jb
gs
xor
cs
insb
add
mov
add
add
add
mov
add
lea
lea
je
add
add
add
jmp
mov
pushl
popl
jmp
popl
mov
cmpl
je
push
pushl
pushl
push
addl
call
add
pop
mov
shl
add
add
jmp
jmp
push
imul
jb
je
arpl
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
gs
xor
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
imul
jo
imul
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
insb
jne
push
jb
arpl
outsb
inc
popa
arpl
add
add
jb
gs
xor
cs
insb
add
add
push
imul
insb
insb
outsl
arpl
add
add
inc
push
dec
cmp
jo
inc
jne
arpl
add
and
fisttpll
inc
push
and
inc
in
jl
iret
and
sbb
xor
outsb
lods
add
mov
and
cmpsl
je
sahf
sub
cli
jmp
ret
div
aas
xchg
add
test
jne
adc
stos
ret
cmp
jo
fcompl
movsb
sbbb
pop
mov
es
ja
lret
and
negb
push
cmp
inc
or
pop
cmp
call
mov
jns
xor
mov
fildl
jmp
mov
test
sub
inc
jle
push
sbb
mov
bnd
cmpsb
shlb
cwtl
mov
loope
dec
mov
enter
sbb
incb
clc
leave
sub
stc
cmc
mov
sbb
test
fs
aad
push
add
mov
aaa
add
popa
jbe
dec
out
movsl
cltd
cmp
add
add
add
add
add
add
add
add
add
inc
mov
mov
mov
add
rolb
add
add
inc
lods
mov
inc
add
inc
add
jecxz
add
and
cmp
add
add
xor
cmp
cmp
add
add
dec
outsl
popa
fs
imul
add
add
and
add
fisubl
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
push
mov
push
mov
mov
and
shr
test
jne
pop
mov
pop
pop
ret
push
mov
test
jbe
cmp
mov
jb
mov
sub
cmp
mov
jl
mov
shr
mov
neg
shl
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
add
dec
jne
mov
test
je
xor
mov
add
inc
add
dec
jne
mov
xor
mov
div
mov
mov
mov
xor
div
test
mov
ja
mov
pop
shl
pop
or
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
push
push
mov
push
mov
movl
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
rep
stos
mov
shr
test
mov
jne
mov
call
cmp
je
or
mov
mov
mov
test
je
call
mov
cmp
je
mov
mov
call
mov
mov
inc
and
mov
jmp
call
mov
cmp
je
mov
call
cmp
je
mov
and
and
mov
shl
or
add
mov
mov
js
jmp
mov
lea
xor
and
mov
mov
mov
call
mov
mov
inc
and
inc
mov
mov
cmp
jle
jmp
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jb
or
ret
mov
push
xor
mov
inc
mov
mov
pop
ret
nop
nop
mov
push
cmp
jae
mov
mov
mov
inc
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
jae
mov
mov
mov
inc
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
mov
push
push
push
mov
call
push
mov
push
push
mov
call
add
mov
push
call
push
push
mov
call
mov
mov
lea
mov
lea
cmp
jae
imul
mov
add
xor
mov
add
cmp
jb
mov
add
mov
mov
mov
sub
inc
lea
mov
lea
mov
add
add
add
cmp
jae
cmp
jae
lea
mov
and
cmp
jae
imul
mov
add
xor
mov
add
cmp
jb
mov
mov
mov
push
push
mov
mov
mov
call
mov
test
mov
je
cmp
jbe
push
push
push
push
call
mov
lea
mov
mov
shr
rep
mov
and
rep
mov
mov
push
push
push
mov
push
call
cmp
je
push
push
push
push
call
push
push
push
call
mov
add
cmp
je
push
push
push
push
call
mov
push
push
push
call
push
push
push
mov
call
mov
mov
add
test
jne
push
push
push
push
call
call
push
push
push
mov
call
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
call
push
call
add
test
pop
pop
pop
je
mov
call
jmp
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
pop
call
xchg
pop
mov
popa
pop
pop
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
mov
test
push
mov
jne
push
push
push
call
push
call
add
mov
mov
lea
push
push
lea
push
push
call
mov
dec
test
je
mov
lea
mov
add
mov
add
dec
dec
test
ja
mov
lea
push
lea
push
push
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
xor
lea
movb
mov
rep
stos
stos
mov
xor
lea
sub
imul
add
mov
and
mov
shr
mov
xor
inc
mov
inc
mov
inc
test
je
cmp
jb
mov
cmpl
jne
mov
push
call
add
mov
test
jne
push
call
test
mov
jne
int3
mov
lea
push
push
push
call
add
test
pop
pop
pop
jne
int3
mov
pop
ret
nop
nop
push
mov
sub
mov
push
mov
mov
push
push
test
jne
mov
mov
lea
mov
test
je
lea
sub
xor
mov
mov
inc
test
jne
lea
movb
push
call
mov
add
cmp
mov
jl
mov
mov
push
push
push
mov
call
add
mov
movl
mov
mov
mov
test
je
mov
mov
test
je
cmp
jg
cmp
jl
movsbl
add
movsbl
xor
cmp
je
xor
cmp
jne
mov
inc
inc
mov
mov
test
jne
cmpb
je
mov
add
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
mov
pop
pop
pop
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
push
je
mov
mov
mov
test
je
cmp
jne
dec
inc
inc
test
jne
pop
xor
pop
ret
test
je
xor
xor
mov
mov
pop
sub
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
mov
push
test
push
jl
mov
cmp
jae
mov
mov
lea
mov
add
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
mov
pop
mov
lea
xor
pop
mov
mov
lea
mov
add
pop
pop
ret
mov
mov
movl
mov
dec
js
jmp
mov
mov
push
lea
cltd
sub
mov
mov
sar
mov
lea
mov
add
test
push
jge
mov
push
call
jmp
mov
push
call
add
test
je
jle
inc
mov
jmp
lea
cmp
jle
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
cmp
push
jbe
mov
cmp
jae
test
jne
mov
mov
mov
mov
lea
test
mov
je
test
je
test
jne
mov
sub
mov
lea
mov
add
jmp
mov
push
push
push
push
call
mov
mov
mov
add
cmp
jae
add
add
cmp
jae
mov
xor
lea
movb
rep
stos
stos
mov
lea
test
je
cmp
je
cmp
je
mov
mov
inc
inc
test
jne
lea
lea
push
call
mov
add
test
jne
mov
test
je
lea
push
call
mov
test
jne
mov
test
je
lea
push
call
mov
test
je
cmp
ja
pop
pop
xor
pop
mov
pop
ret
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
mov
jns
add
pop
dec
sub
in
test
test
data16
jae
add
pop
add
in
mov
fcomi
or
and
push
add
out
add
fs
es
pusha
pop
fnstenv
mov
dec
dec
test
in
sahf
push
and
push
loop
daa
repz
mov
imul
roll
mov
mov
cli
rcl
push
es
pop
inc
std
or
cmp
jb
imul
aad
outsl
bound
jp
inc
leave
jecxz
xor
or
aad
and
inc
imul
pushf
pop
xchg
in
test
mov
es
repnz
lcall
inc
stos
sahf
jmp
and
push
push
and
fistps
xchg
dec
in
xorb
js
lret
add
or
mov
insl
push
enter
lret
xor
movsb
sahf
lret
pop
jle
fisubrl
insb
sbb
lret
lds
loopne
ret
imul
xor
and
mov
es
mov
jl
ror
cvttps2pi
inc
cmpsb
lret
test
mov
das
clc
addr16
xor
or
sti
in
nop
xor
sbb
cmc
push
mov
mov
adc
push
movsb
sub
pop
add
ret
xchg
xchg
jb
in
testb
jno
divb
xor
daa
adc
mov
mov
pop
push
repnz
movsb
shrl
and
mov
inc
pop
iret
je
mov
call
jbe
ret
add
xchg
pop
jecxz
inc
and
xchg
sub
push
shlb
fadd
xchg
es
call
push
loop
mov
inc
adc
loope
jns
ret
es
jb
xchg
adc
test
inc
jecxz
push
idiv
and
stos
pushf
adc
ret
test
bound
in
dec
pop
jne
sbb
addr16
mov
xor
test
jge,pt
jl
and
mov
mov
cmc
dec
jno
out
xchg
pop
and
je
cmp
test
sub
int
mov
cli
test
xchg
jb
pushf
adc
mov
inc
or
fldcw
outsb
mov
lock
and
enter
ja
adc
jmp
mov
pop
jp
jge
stos
xchg
into
int
lret
jmp
pop
std
rorl
push
dec
mov
pusha
out
or
mov
add
push
sbb
mov
gs
add
cwtl
enter
mov
sub
arpl
push
aam
int3
xchg
cmp
sub
pop
outsl
inc
push
pop
ja
enter
push
pop
cmpsl
mov
lret
mov
sub
in
not
inc
pop
aad
inc
or
rolb
jp
and
dec
pop
push
sub
mov
inc
and
das
mov
hlt
inc
mov
sarl
xchg
jecxz
jecxz
cld
jns
push
inc
lea
ret
inc
dec
mov
js
jg
lea
popa
jno
xchg
mov
sub
cmp
jmp
mov
test
gs
sub
xchg
dec
clc
add
je
lea
mov
cld
pop
mov
xor
jg
bound
mov
cltd
cmp
imul
and
xorb
popa
adc
xchg
cmp
scas
adc
mov
dec
inc
inc
cmp
fdivl
sti
sub
xor
jmp
pop
mov
adc
fnstenv
pop
xchg
xchg
std
sbb
in
rcrl
xlat
gs
cmp
push
nop
inc
mov
fs
pop
mov
fs
repnz
push
xchg
jnp
xchg
cmpsl
ljmp
add
add
push
gs
pusha
call
imul
in
xchg
dec
in
stc
jno
cltd
fidivrl
loop
sbb
adc
or
cwtl
xor
imul
xor
jmp
xchg
jb
and
scas
add
cmpsl
jb
add
add
test
add
jmp
call
into
cwtl
add
fiaddl
add
push
imul
xor
and
fstps
push
lock
cs
fisubl
mov
mov
sbb
mov
inc
and
cmp
lret
cmp
test
stc
mov
pushl
xchg
jo,pt
xlat
into
inc
jno
dec
dec
fsubrl
call
adcb
inc
fdivr
aas
int3
jp
sub
mov
pop
sbb
sbb
cs
mov
faddl
or
cmp
clc
addr16
shr
fldcw
pop
enter
icebp
repz
mov
jbe
adc
ss
loope
fadd
addb
push
icebp
sarl
xchg
mov
sub
cmp
mov
aam
fdivrs
fdivs
sbb
icebp
mov
push
add
outsl
mov
mov
iret
mov
mov
xor
imul
inc
stos
adc
inc
dec
sbbb
lcall
adc
enter
stos
jge
sbb
add
mov
arpl
cmp
sbb
std
mov
push
and
inc
test
in
enter
insb
imul
xor
fs
jo
mov
mov
hlt
jns
or
and
in
addl
fwait
imul
jae
ltr
xchg
jmp
pop
fistpl
negl
mov
sbb
ret
cwtl
jecxz
or
push
or
iret
sub
jb
fisttpll
fwait
hlt
push
stos
rcrb
or
and
pushf
push
test
fadd
xchg
cmp
or
int3
hlt
loope
xchg
push
test
sbb
cmpsl
popf
xor
push
repnz
popa
les
rorb
out
mov
xchg
xor
xchg
pop
mov
lods
sub
cmp
dec
dec
pop
imul
mov
outsb
dec
mov
and
sub
jmp
stos
ds
daa
pop
dec
leave
sub
daa
adc
pop
sub
xlat
lea
and
popf
gs
dec
jg
cmp
rolb
loop
inc
push
sbb
jp
jg
divl
pop
mov
outsl
sbb
inc
dec
popa
mov
xchg
push
sti
mov
test
out
and
ret
fldenv
enter
lcall
lret
test
or
pop
add
push
xor
stos
mov
pop
adc
push
push
jbe
jne
test
adc
movsl
fdivl
jle
push
mov
ja
in
sbb
cli
jp
lds
add
dec
add
les
rcrb
or
aas
or
fidivl
push
adc
int3
mov
mov
fnstsw
rol
cmc
dec
sub
jge
subb
fwait
in
xor
xchg
insb
pop
and
cwtl
ljmp
dec
sbb
pop
inc
sbb
cltd
leave
lcall
mov
rorl
enter
xor
sahf
push
push
mov
mov
and
fmuls
jmp
out
or
ljmp
jecxz
xchg
gs
push
loopne
add
cmp
fdivl
dec
fsub
sub
fwait
stc
lret
jle
push
or
sbb
mov
popf
mov
mov
cmc
loopne
jecxz
idivl
inc
fmull
fxch
addr16
push
aas
das
jg
cmp
push
cmp
movsb
sbb
or
push
in
lret
push
xacquire
jae
leave
lock
jae
lea
clc
push
dec
sub
ss
push
sub
iret
stc
lods
sbb
pop
push
aam
and
mov
mov
jno
jmp
push
pushl
out
add
ficomps
dec
sti
mov
adc
or
pop
inc
sub
enter
cltd
push
ja
ret
jecxz
pop
lret
stos
jp
add
mov
xchg
adc
inc
ljmp
sbb
push
adc
dec
jno
repz
aaa
mov
mov
push
jb
in
xor
sub
fcompl
jp
scas
push
in
cli
jno
xchg
imul
in
fs
ja
jg
popf
adc
jnp
mov
and
inc
push
mov
pushf
sub
cmp
stos
mull
insb
cmpb
out
adc
out
pop
pop
repz
jl
dec
es
cmp
or
push
mov
push
inc
pop
xchg
daa
cmp
arpl
nop
lods
cmpsl
rclb
xchg
in
jge
mov
ficoms
fdivr
push
push
outsb
imul
mov
push
pop
lock
fdivrp
and
mov
cmp
dec
jb
inc
scas
stos
aad
lret
dec
repnz
dec
pop
adc
ja
iret
inc
ret
mov
mov
and
push
mov
pop
das
pop
addr16
divb
or
inc
sub
mov
call
fwait
sti
loope
rclb
jge
imul
shrb
xchg
orb
outsl
out
lcall
adc
push
pusha
push
into
mov
shll
int
ljmp
jnp
loope
data16
push
jmp
outsb
rcrb
pop
jl
bts
mov
xchg
inc
mov
push
mov
add
incb
adc
loop
sbb
xor
pop
lea
in
mov
add
test
jmp
rclb
mov
cmp
inc
cmp
push
out
and
push
addr16
mov
cmpsl
or
stos
cmp
js
xor
rcrb
or
in
push
outsl
xchg
movsl
ficoms
jge
push
int
mov
mov
cld
les
pop
sub
xor
adc
nop
dec
or
push
das
mov
xor
sub
jl
push
add
pop
movsb
sub
pushf
cli
sub
xchg
cmpsl
push
xor
and
imul
hlt
add
cmpb
inc
inc
sub
popa
pop
xchg
sbb
sbb
adc
imul
push
jle
inc
pusha
cmpsl
sbb
idivb
inc
sub
dec
cmp
aas
mov
xchg
ss
jo
add
js
mov
sahf
sub
sbb
pop
adc
or
imull
test
mov
mov
push
dec
lea
pop
push
in
pop
mov
or
add
xor
pop
dec
xor
enter
jge
cmpsb
mov
insb
and
js
lcall
inc
int3
push
subb
notl
cmp
xor
pop
mov
lods
adc
dec
cmp
lods
enter
jp
sub
mov
mov
and
dec
cli
rclb
push
icebp
rcll
aad
mov
mov
mov
cmpsl
dec
lock
in
out
pop
in
push
loop
pop
adc
xchg
ja
dec
sub
inc
fcmovnu
inc
and
jnp
loope
sahf
push
jmp
mov
pop
add
xor
out
push
sbb
ss
push
mov
sub
cmp
pusha
ljmp
sub
scas
sbb
rolb
jns
pop
scas
in
rolb
xor
dec
push
pop
and
aas
lret
shl
fldenv
stos
pop
xchg
sbb
fucomip
jg
test
out
test
adc
iret
pop
ljmp
mov
dec
aad
into
push
arpl
loopne
xchg
jns
xchg
pop
mov
stc
sbbb
das
pop
cmp
dec
mov
daa
addr16
jne
mov
or
push
ss
lock
mov
pop
pop
cmp
and
mov
subb
mov
sub
dec
fstpl
inc
dec
movsl
pop
and
mov
lahf
cmp
fstl
js
movsb
loopne
and
outsl
arpl
xor
jmp
push
sbb
cmpsl
jl
hlt
mov
dec
call
scas
mov
push
jns
arpl
pop
bound
arpl
movb
ds
rorb
add
or
pushf
xor
les
push
pushl
xor
xchg
scas
xchg
mov
mov
outsb
inc
lock
push
iret
lods
mov
lcall
xchg
mov
mov
and
or
xlat
jo
loope
stc
jns
fisubl
call
push
mov
pop
xchg
adc
fists
inc
aam
or
sub
cmpl
nop
movsl
je
cld
lahf
in
js
decb
push
and
xchg
dec
mov
xchg
jp
xchg
mov
ljmp
mov
nop
mov
inc
cmpsb
mov
int3
mov
das
les
add
push
or
daa
loop
aas
ss
outsb
and
sahf
add
sub
cwtl
push
scas
cwtl
fisttpll
add
loope
ret
out
xorb
dec
jno
hlt
in
lea
push
jnp
out
pop
std
xor
dec
push
adcl
fcomp
xor
and
hlt
scas
mov
mov
lahf
std
cmp
sub
int3
subb
push
popf
sub
ret
sbbb
mov
add
leave
dec
cs
lds
loopne
mov
repz
and
mov
rcrb
add
sbb
outsb
push
sbb
adc
inc
fisttpll
xor
ljmp
mov
push
pop
jl
aas
aad
shll
arpl
and
jecxz
dec
xlat
pop
pop
sarb
jle
aad
push
daa
jno
jae
dec
out
shl
out
pop
push
pop
mov
jg
and
out
inc
push
sub
jbe
sub
fidivs
dec
cmp
outsl
dec
mov
inc
cmpsl
movl
imul
mov
mov
out
push
out
sbb
stc
add
movsl
or
out
je
lret
xor
lcall
xlat
or
or
pop
sub
ss
jge
push
pop
pop
mov
test
and
test
pushf
mov
mov
sub
cli
jbe
ret
mov
push
cmp
sbb
add
xchg
push
pop
xor
mov
sbb
jecxz
mov
pop
loop
add
lcall
jecxz
sbb
jb
dec
ss
movsb
cmpsl
cmp
jmp
aad
or
xor
rcrb
jae
pop
test
cli
fwait
into
pop
mov
push
push
dec
jge
xchg
fimuls
lock
mov
imul
mov
or
aas
cwtl
dec
and
adc
mov
and
xchg
jle
mov
add
out
dec
mov
mov
inc
shll
xor
movsl
test
push
sbb
sbb
xchg
xlat
negb
pushf
xor
out
cld
and
es
sub
fbstp
jae
xor
push
out
shl
insl
cmpl
pop
adc
out
fwait
cmp
sahf
mov
xor
jmp
mov
mov
sbb
daa
dec
repnz
out
sbb
dec
bound
stc
push
out
aaa
out
mov
or
add
mov
and
pop
jne
pop
daa
jmp
aaa
test
pop
das
mov
fdivl
mov
ja
jp
lock
or
pop
mov
repnz
insl
cmp
dec
fldl
fldcw
mov
in
out
es
inc
add
dec
xor
dec
pop
cmp
hlt
mov
lods
js
fstpt
incb
jmp
xlat
cs
xor
and
jo
adc
pusha
orb
pop
rcrl
insb
push
inc
shlb
jp
jne
test
lods
cli
mov
insb
add
sbb
out
jno
test
sarl
push
scas
fisubrs
aad
fs
rcll
sub
dec
pop
pusha
outsb
pop
mov
fxch
mov
xchg
adc
mov
lea
cs
jne
pop
sub
gs
out
rcrl
pop
add
inc
sub
push
sub
xchg
ret
adc
int
adc
push
pop
ror
and
mov
out
fucomi
test
outsl
mov
add
inc
popf
insb
xchg
mov
xor
mov
rcrl
mov
cli
mov
ss
leave
into
mov
clc
loopne
mov
mov
mov
stc
push
mov
loopne
cmc
mov
mov
data16
mov
mov
mov
pop
andb
push
into
dec
jne
lock
pop
outsb
mov
push
jne
sarl
add
movsl
inc
aad
shrl
loope
mov
sbb
into
pushf
xorb
mov
jns
cwtl
mov
insb
shrb
pop
push
adc
xchg
call
xchg
mov
add
mov
insb
movsl
scas
cli
test
sub
inc
and
and
jne
jp
cmp
sti
mov
movsb
push
cmp
or
aas
cmpsb
test
loop
mov
shrl
lahf
push
cmpsl
or
stc
sbb
into
test
jge
mov
shl
je,pt
adc
stos
or
mov
dec
aas
sub
or
das
pop
lods
xor
stos
ds
mov
insl
push
inc
sbb
xchg
dec
adc
xor
ret
pop
adc
hlt
les
aam
lods
push
fdivs
xor
xchg
cmpsb
pop
pop
pop
fidivrl
mov
or
jno
mov
sbb
dec
mov
dec
inc
mov
pop
enter
call
pop
jae
sarb
sbb
sub
dec
shl
mov
add
sbb
inc
fdivrl
sub
mov
test
pop
adc
dec
push
fdivrp
sbb
mov
dec
push
xor
add
movsl
xlat
fildl
in
rorb
int3
fcmove
adc
push
xchg
and
fucomi
xchg
xor
int3
ss
sarb
xchg
xchg
in
push
outsb
adc
inc
and
push
cmp
daa
stc
xor
rcll
add
pop
mov
popf
jmp
pushl
imul
cs
mull
ss
repnz
inc
pop
mov
pop
notb
and
adc
adc
adc
cmpsl
mov
pop
scas
or
push
nop
fnstsw
repz
xchg
subl
cmp
das
or
push
cmp
push
push
push
xor
xchg
fwait
xchg
sti
cmp
scas
mov
xchg
sbb
cmpb
scas
dec
push
rolb
mov
or
jne
mov
outsl
aad
push
push
mov
sub
inc
add
jnp
cmp
ds
repz
dec
sarl
fistpll
iret
pop
pop
sbb
sub
mov
stos
mov
fisubs
mov
xchg
jmp
mov
test
sbb
pushf
sbb
clc
or
mov
jb
popf
mov
push
repnz
pop
mov
mov
push
sbb
iret
mov
mov
ss
dec
mov
dec
cmp
push
mull
xchg
jnp
and
mov
add
push
dec
add
out
dec
pop
cmp
pop
ja
push
mov
int
in
in
ja
sbb
ret
into
push
inc
sbb
cmp
in
cmp
and
xor
sub
repz
clc
pop
dec
adc
lret
xchg
xchg
out
je
mov
xor
stc
fstl
scas
or
in
call
pop
int3
daa
jno
scas
mov
call
ret
ss
cmpsb
testl
call
or
popa
addb
xchg
jnp
pop
jns
inc
xchg
push
xlat
dec
cmpsb
add
mov
push
lret
popa
clc
mov
in
mov
add
test
ret
sub
cmpb
negl
inc
push
out
xor
and
mov
pop
sbb
addr16
mov
in
sub
test
arpl
push
xchg
and
fstpt
subb
fwait
jmp
or
or
mov
icebp
sti
cmp
sub
inc
into
and
push
test
push
cwtl
shll
mov
dec
lods
ret
insb
cltd
imul
sub
push
mov
dec
mov
pop
mov
test
in
push
inc
xor
jb
push
pop
xor
sub
js
loop
inc
jnp
push
fdivl
js
aaa
mov
xchg
push
scas
xor
test
add
and
xchg
mov
ror
or
sahf
pushf
out
sbb
cmp
icebp
inc
mov
xor
cmp
out
outsl
sub
inc
cld
rolb
imul
push
xchg
xor
and
lahf
fnstenv
shll
insl
js
add
ljmp
mov
mov
mov
cwtl
sub
mov
int3
scas
faddp
xor
add
fistpll
mov
mov
popa
aas
mov
mov
xlat
jp
clc
dec
xchg
jns
repnz
fwait
inc
mov
ljmp
frstor
mov
cmp
inc
or
xor
rcll
push
push
mov
sub
call
mov
and
fdivrl
bound
testb
mov
and
inc
lds
jne
jno
dec
in
mov
test
loop
mov
popf
stos
push
ss
pop
ds
add
inc
fildl
dec
fldcw
dec
nop
and
xchg
cmp
js
xlat
jbe
pop
and
into
sbb
xor
and
push
sub
aas
xor
sub
notl
push
inc
fstl
rol
imul
ds
add
adc
test
lods
scas
movsl
jge
out
dec
sub
out
push
lret
dec
xor
inc
sub
push
push
outsl
fimuls
and
popa
jns
in
pop
cmp
or
lds
mov
aaa
mov
aad
mov
outsb
lock
fidivl
arpl
xor
pop
cmpsb
ret
ficoml
push
mov
xor
xor
lcall
push
lcall
add
testl
dec
call
not
or
es
sahf
cmp
adc
sbbb
pop
adc
int3
outsl
mov
mov
mov
jle
cltd
mov
cmp
sub
filds
daa
or
inc
sub
add
cmp
jp
sahf
lods
jmp
out
pop
negb
or
add
sbb
out
or
jns
jmp
scas
lea
ds
jno
fsub
push
and
xor
int3
rcll
cld
push
outsb
test
inc
mov
cmp
jb
push
daa
mov
add
jge
xor
jne
or
jle
es
jg
subl
lds
js
pushf
add
cli
das
out
je
jl
faddl
push
jne
sub
mov
fsubrp
mov
ret
and
push
push
push
lret
repz
and
leave
xor
mov
scas
jmp
mov
and
les
js
xor
xor
outsb
imulb
shll
outsl
lahf
test
enter
or
mov
das
push
rcl
mov
push
push
cmp
test
push
insb
call
xchg
jmp
mov
jns
and
insl
pop
cmc
test
ficomps
mov
inc
adc
mov
dec
nop
stc
sbb
mov
jbe
jge
popa
and
cmp
mov
cmc
jno
fdivrs
inc
cwtl
mov
insl
test
decl
loop
repnz
scas
push
lahf
pop
push
scas
ljmp
insb
sahf
pop
test
fdiv
xchg
lret
popfw
mov
sbbb
fisttpl
add
inc
xchg
add
es
pushf
fisubl
xor
jae
fisttpl
jno
daa
mov
lds
rorl
das
pop
andb
pop
pushf
pop
inc
inc
pop
fwait
ljmp
push
and
xchg
ljmp
push
mov
ret
inc
or
and
dec
xlat
adc
and
xchg
ds
mov
ret
inc
aad
je
leave
lahf
pop
xchg
push
inc
insb
jmp
fisubrs
jae
loop
adc
icebp
inc
sbb
pop
mov
call
lcall
add
adc
sub
mov
jp
sub
rcll
fiaddl
out
mov
out
xor
and
mov
cmp
fdiv
jae
mov
in
sti
xchg
dec
in
fildl
repz
mov
testb
xchg
sahf
call
pop
aaa
cltd
adc
int
or
push
int3
adc
xor
ficompl
mov
inc
ss
cld
mov
cli
cmp
xor
dec
jnp
mov
sub
mov
adc
icebp
sahf
lods
mov
xlat
inc
les
dec
add
jo
sbbl
mov
shll
pop
push
orb
cmp
xchg
popf
xor
das
lret
outsl
cmc
daa
in
push
cmc
mov
jg
neg
pusha
pop
jne
xor
sub
adc
jae
fdivrl
loope
dec
mov
mov
push
imul
mov
rorl
pop
fsts
aas
push
lret
insl
mov
xchg
inc
in
ret
out
mov
add
mov
push
hlt
int
lods
jns
call
jle
repnz
mov
lahf
pop
int
cmp
or
push
es
mov
popf
adc
mov
mov
jmp
lret
xor
les
stc
mov
lcall
cmp
aam
movl
pop
rcrl
and
fistps
imul
sub
jb
cmp
dec
dec
mov
xchg
popf
or
mov
mov
jb
xchg
xlat
adc
or
lret
pushl
mov
lea
xor
push
adc
je
pop
sbb
xchg
push
xchg
inc
and
and
fs
repz
and
adc
bound
pusha
lret
ss
push
shrl
into
and
jmp
and
push
decb
inc
das
pop
dec
sub
out
sub
cmpsl
cltd
ret
xor
lret
bound
mov
sbb
mov
push
push
lret
sub
xchg
scas
inc
xchg
cltd
pop
nop
lea
adc
loop
aas
insb
cwtl
mov
lret
divb
cli
cmp
fdivl
push
xor
lods
xor
jg
add
shl
push
sti
int3
rcll
in
mov
cmp
pop
inc
stos
shrl
add
dec
jl
cld
lret
mov
repnz
out
add
xchg
leave
outsl
dec
fisubs
jg
inc
mov
fcmovne
pusha
imul
push
add
mov
das
xorl
inc
inc
mov
cld
pusha
cmc
mov
adc
cmp
or
or
inc
mov
xlat
cmp
fs
mov
mov
mov
mov
adc
shrb
inc
mov
subl
insl
out
xchg
fs
hlt
and
and
in
arpl
cmpsl
pushf
cwtl
test
sti
push
inc
lods
jae
addr16
xchg
dec
cwtl
xchg
cmp
int
int
pusha
and
lods
ret
das
sti
push
dec
cmc
fsub
psadbw
popa
ret
mull
mov
push
into
push
sub
mov
test
out
mov
mov
pop
cs
push
mov
in
cmpsl
lcall
cli
insl
je
cmp
int
sub
out
and
pop
cli
jp
and
addb
loopne
mov
pushf
xrelease
pushf
movsb
ljmp
push
mov
push
lea
jmp
xlat
push
sbbb
cltd
popf
sbb
fbstp
push
out
mov
or
mov
add
pop
fisttps
cmp
jge
lret
push
ss
aas
xor
inc
insl
int3
mov
jae
ret
jle
shl
pop
fidivs
out
loopne
ja
pusha
sbb
dec
lods
sub
cmp
das
testl
and
fdivl
call
and
dec
adc
outsl
cs
pop
jno
fxtract
ret
repz
push
test
outsl
ror
jl
mov
add
add
sbb
dec
pop
and
clc
shll
sar
cmp
stos
jno
and
sub
pop
cwtl
js
rcrl
and
lret
shrb
sbb
push
dec
inc
xor
add
in
jl
push
jns
daa
hlt
mov
test
dec
fdivr
pop
or
cmp
fdivrl
lahf
push
outsl
sbb
aad
mov
cmp
repnz
jmp
movsb
icebp
mov
sbbb
je,pt
or
addl
pop
rcr
rorl
cmp
or
lret
adc
popf
push
pop
mov
inc
pop
clc
mov
pop
fists
insb
repz
int3
jp
movsb
add
jp
xchg
or
out
dec
inc
add
mov
mov
mov
pop
dec
add
and
push
push
idiv
fwait
push
cmpsb
pop
gs
pop
out
call
pushl
test
insb
jmp
repz
push
push
out
lds
test
xchg
and
in
aas
pop
and
cmp
js
jecxz
das
push
repz
xchg
loop
sbb
popf
ds
jecxz
mov
int3
adc
je
cmc
xchg
lret
sbb
jno
mov
push
cmc
mov
sbb
pop
push
je
enter
pop
or
out
push
jmp
cmc
xchg
mov
fdiv
mov
aas
push
lea
mov
jno
bound
jnp
les
pop
adc
test
out
sub
outsb
dec
mov
fstps
cli
pop
nop
stos
aaa
sbb
pop
push
in
ja
fmulp
repz
int3
jno
imul
pusha
adc
popf
sub
jno
fprem1
fimuls
fldt
adc
fiaddl
ja
stc
call
xlat
das
mov
or
dec
and
dec
fistl
xchg
out
push
das
mov
aas
lahf
ror
lret
pusha
xchg
icebp
loope
mov
push
or
jne
cmp
dec
decb
sub
stos
dec
aad
aad
in
cmp
imul
push
aaa
insb
xchg
mov
pop
pop
adc
mov
and
stc
mov
mov
xor
movd
pop
jl
mov
push
sbb
call
mov
out
jne
rdtsc
inc
push
adc
mov
push
pop
dec
fisttpl
xor
pushf
cli
bound
jmp
cli
ljmp
lahf
decb
pop
sub
outsb
mov
pop
mov
rcll
push
pop
xchg
shlb
ds
in
in
xor
daa
loop
popa
xchg
mov
hlt
dec
adc
cltd
mov
mov
sbb
mov
mov
ret
stos
pop
mov
cmpsb
cs
je
lock
pop
jb
ja
in
sub
adc
pop
nop
push
inc
mov
fndisi(8087
xor
jmp
das
in
inc
push
and
and
adc
ffree
test
sub
outsl
fsubp
mov
add
add
xor
mov
jnp
push
orb
adc
clc
pop
add
aaa
loope
fcoml
out
pop
xlat
subl
lcall
xor
cmp
jge
or
callw
lods
lret
test
cmpb
ss
lret
push
int
xchg
frstor
jne
sub
enter
call
enter
les
pop
pop
xchg
jl
pop
fimuls
mov
adc
repnz
xchg
lods
sti
hlt
mov
or
sbbl
in
inc
lds
xchg
add
adc
push
test
mov
adc
mov
xor
jp
popf
add
fwait
js
ja
fisubrl
xlat
jo
push
mov
daa
mov
mov
sahf
and
in
stc
popf
pusha
xchg
sub
sbb
lea
xor
xchg
adc
orl
mov
xchg
sbb
dec
xchg
fiadds
or
jno
mov
inc
inc
cs
loopne
mov
ret
sbb
insl
cmp
fbstp
cmpsl
xchg
inc
pop
cli
stos
sbb
mov
stc
cmc
jge
adc
adc
pop
fisubl
mov
mov
cmp
mov
push
jae
loop
dec
jecxz
cmp
sbb
xchg
sahf
xor
sbb
cmpsl
and
daa
sub
aad
mov
jmp
or
stos
testl
rclb
inc
mov
mov
xor
sahf
and
ret
jp
mov
lcall
or
sbb
ret
adcb
and
loop
xor
daa
adc
test
xchg
cli
sub
or
mov
fiadds
and
dec
scas
arpl
inc
dec
insb
mov
mov
mov
sub
in
adc
mov
lods
adc
ret
movsl
or
add
and
add
in
movsl
dec
xorb
popa
mov
pop
jns,pt
sub
push
lcall
mov
in
xlat
adcb
and
push
mov
stos
sub
or
dec
addb
push
mov
add
imul
lret
shrb
mov
rcll
les
pop
je
sub
adc
push
pop
inc
mov
or
inc
mov
sub
test
stos
dec
cmp
add
add
xor
out
xchg
jno
loop
ret
mov
xor
or
xchg
dec
jl
movb
xor
adc
push
push
mov
xor
scas
in
xor
xchg
movzbl
scas
sub
jb
xor
and
test
insb
int3
vpmovqw
ret
out
jg
xor
leave
jo
cmp
jmp
sbb
dec
lods
add
cmp
leave
mov
or
cwtl
pop
jo
xor
mov
ljmp
test
pop
sub
addb
shlb
mov
dec
jmp
and
mov
sbb
lret
and
aas
stc
or
in
pop
or
lock
mov
les
insl
mov
jmp
popa
xor
pop
jg
mov
stos
arpl
dec
fiaddl
ds
mov
xor
stc
ret
movsb
mov
ret
jl
in
xchg
push
add
and
pop
mov
pop
or
fildll
xor
cmp
iret
cmpsb
inc
and
dec
sahf
repz
pop
dec
lcall
adc
mov
push
xchg
inc
mov
scas
dec
lods
fimull
pushf
mov
xorb
sbb
add
shll
repz
pop
clc
fmulp
orb
stos
lret
jecxz
xchg
imulb
les
ljmp
loopne
enter
ficomps
push
dec
cmp
jae
icebp
and
mov
sub
xor
mov
cmp
jne
sub
adc
add
das
rcrb
clc
repnz
bound
andb
lods
sub
sub
enter
inc
xor
mov
sbb
into
sbb
movsb
xchg
in
lds
adc
sbb
out
mov
mov
fs
or
or
xchg
int3
clc
mov
xor
xchg
ss
hlt
pop
sbb
jle
sti
dec
arpl
jne
pushf
popa
mov
js
add
cmpb
pop
cmp
decb
outsb
sub
leave
xchg
or
pop
cwtl
daa
orl
lods
and
dec
scas
xchg
rol
ja
adc
cmp
jbe
sahf
popf
adc
mov
inc
ret
test
cltd
xchg
data16
scas
dec
cld
pop
scas
stos
mov
push
cmpsb
stos
sub
das
sub
sub
cs
add
loope
sub
sti
out
xlat
jmp
cmp
repnz
cmpsl
push
cltd
outsb
push
adc
adc
sub
and
xchg
dec
cli
ds
jp,pn
jbe
sbb
adc
das
test
call
movsb
adc
lods
lret
xlat
movsb
mov
and
mov
popf
and
inc
dec
int3
lock
insb
movsl
lock
xchg
fmul
inc
push
ret
repz
inc
aaa
mov
xchg
inc
xor
mov
adc
cltd
add
les
movsb
xchg
xor
and
adc
pop
int
cmpsl
scas
hlt
xchg
inc
in
lods
ret
jg
mov
cltd
inc
icebp
loop
push
lea
outsl
jge
js
leave
pop
lret
scas
cmpsb
sbb
fs
out
test
jbe
sbb
mov
test
lods
xchg
pop
fwait
addr16
scas
arpl
mov
in
sbb
shr
shll
sahf
cli
icebp
pxor
mov
int
nopl
and
ret
xchg
push
out
rclb
jecxz
dec
and
inc
cwtl
jbe
iret
enter
or
and
fisubl
and
ja
mov
dec
mov
push
pop
inc
or
outsb
add
and
movsb
out
add
ret
sub
aad
lea
je
adc
jle
inc
insl
aad
pop
jl
jb
movsb
inc
dec
inc
and
or
mov
cltd
addr16
cmpsb
mov
out
imul
movsl
js
fimuls
mov
cmp
and
adc
mov
xchg
mov
imul
sub
inc
aas
out
pop
cwtl
xchg
fwait
cld
popf
sbb
inc
mov
stos
xchg
mov
sbb
sbb
push
xchg
jp
mov
idiv
clc
pusha
icebp
mov
lods
mov
xor
push
pop
cwtl
aad
popa
ret
pusha
sbb
jge
and
mov
xorl
leave
adc
cmpsl
jnp
std
popa
lcall
push
and
xchg
cmp
mov
sti
sahf
movsbl
aaa
out
and
xor
call
cmp
ljmp
daa
sbb
xchg
pop
aad
stos
xor
mov
das
sub
xchg
pop
test
sbb
or
pop
and
mov
shlb
sub
sbb
outsl
add
scas
mov
lds
int
aaa
in
xchg
sbb
dec
je
xor
icebp
iret
insl
adc
mov
sbb
hlt
push
mov
add
and
icebp
dec
stos
pop
mov
sbb
or
sti
add
add
xchg
or
sti
dec
in
mov
mov
and
push
test
or
xchg
mov
into
cld
jb
jmp
mov
mov
sbb
aas
mov
xchg
jmp
iret
add
loop
sub
sbbl
dec
push
xchg
icebp
pop
push
or
inc
aas
mov
gs
sbb
cmc
mov
adc
out
test
faddl
mov
push
xchg
sub
das
jo
push
mov
pop
int3
mov
inc
pop
sbb
movsb
dec
lret
popa
dec
ret
or
mov
into
fs
xchg
push
into
cmp
gs
cmp
cltd
hlt
or
add
stc
pop
adc
pusha
fldenv
sub
das
clc
mov
push
push
jecxz
ffree
push
inc
aas
lret
push
xchg
jl
mov
fxch
sbb
sbb
into
lock
gs
bound
sub
dec
iret
dec
mov
and
xchg
sbbl
sbb
out
cmp
push
dec
and
mov
cli
enter
nop
test
js
mov
fadd
lret
jl
int3
or
add
or
jae
sub
ja
pop
push
ljmp
sbb
dec
nop
lahf
pop
jle
fwait
inc
fwait
popf
daa
dec
data16
jb
daa
aad
mov
nopl
mov
in
xchg
pop
push
in
dec
lahf
push
hlt
je
daa
scas
test
outsl
add
sub
test
jbe
xchg
fists
and
out
pop
jae
or
and
sbb
cmp
jge
jae
push
push
xchg
nop
mov
add
xchg
scas
les
jae
mov
and
add
mov
pop
and
sub
xchg
fistps
or
daa
shlb
movsl
pop
pop
fsin
pusha
xchg
mov
sbb
ret
subb
xlat
int
jmp
pusha
add
out
sarl
mov
imull
divb
stc
xorb
mov
mov
dec
pusha
ljmp
dec
movl
fmuls
jnp
nop
ror
sub
pop
shl
add
sbb
jge
pop
adc
test
mov
adc
xor
mov
push
sbb
push
mov
inc
push
adc
xchg
and
jp
js
mov
pop
mov
mov
movsl
std
sahf
fldz
test
lret
dec
adc
int
test
cmp
jmp
rcr
aam
xlat
js
fcompl
pop
jl
andb
ret
shrb
popf
cmpsl
wbinvd
mov
mov
lock
gs
movsb
outsl
shrl
int
add
daa
pusha
cmp
push
sar
es
and
xor
xor
dec
adc
sbb
cs
addr16
data16
xor
setle
jecxz
test
push
loope
pop
pop
lock
insb
enter
adc
jno
faddl
adc
dec
insl
vfrczss
sub
fcomps
out
nop
xchg
push
mov
mov
push
xor
stos
jecxz
or
dec
mov
pusha
stc
jno
inc
jo
and
pop
gs
dec
push
pop
cmp
lahf
and
adc
shlb
and
cmpsb
sub
cmp
mov
xchg
cmpsl
mov
lods
popf
jge
cmp
pop
sahf
fs
ret
mov
int
fndisi(8087
push
gs
jne
dec
adc
jb
add
inc
aam
hlt
loopne
or
enter
dec
push
push
inc
mov
pop
test
dec
xchg
mov
rcll
xchg
lahf
ret
jge
aad
and
pop
sbb
iret
push
cmp
je
jp
jle
dec
fsubrp
push
rorl
add
add
popf
pop
jecxz
lahf
cltd
and
ja
clc
or
call
xor
lahf
movsl
outsl
pusha
sahf
pop
ds
ror
movb
jmp
loope
jno
and
in
xchg
or
bound
add
cld
and
cwtl
jecxz
sbb
push
xchg
jne
cmp
xchg
pop
add
cmp
push
cmp
add
xchg
add
sti
and
repz
cld
xor
test
inc
or
in
iret
ret
insb
ds
int3
cs
jle
incl
dec
sbb
sub
jb
in
jg
clc
leave
inc
dec
add
xchg
xor
fbld
movsb
mov
fbld
lds
imul
jno
fstpl
dec
jmp
imul
idivb
ljmp
or
in
cmp
cmp
push
jno
xlat
xor
push
data16
int
or
inc
mov
xor
cld
and
or
adc
sub
dec
push
call
push
xor
loop
lea
or
adc
mov
lds
and
insl
inc
jo
push
add
mov
xchg
xchg
mov
xchg
dec
mov
mov
mov
and
add
jecxz
lret
xor
mov
cmp
leave
scas
push
dec
call
adc
cltd
jae
clc
shll
fisttpll
adc
inc
jecxz
aad
inc
mov
mov
ret
add
and
push
lods
out
dec
xlat
sub
cmpsb
leave
jecxz
jb
xchg
inc
xor
push
js
lret
in
or
repz
das
cmpsb
imul
inc
xchg
push
push
dec
scas
idivl
in
dec
mov
dec
sbb
jle
movsl
mov
sbb
pop
mov
sub
out
cmp
inc
inc
add
bound
add
pop
xchg
cmp
inc
nop
mov
push
idivl
mov
fs
sbb
cmc
std
pop
fidivrl
mov
scas
or
xchg
je
test
aad
jno
push
ds
push
jae
push
gs
push
xor
mov
dec
jne
add
dec
icebp
cwtl
jno
xor
mov
mov
arpl
pop
stc
jmp
dec
aam
clc
std
xchg
mov
pop
iret
aam
test
and
cwtl
popa
pop
bound
mov
push
mov
pop
popa
xchg
xor
lret
loopne
loop
call
inc
push
push
dec
mov
pop
push
ror
and
xor
stc
pop
xchg
mov
in
aas
stos
imul
push
aaa
enter
das
inc
outsl
mov
loop
je
loopne
jno
icebp
fildl
cmp
fcomp
inc
fidivrs
dec
repz
ss
xchg
scas
mov
and
jle
fstps
lret
sahf
sahf
inc
pop
nop
inc
lret
inc
jp
push
xlat
sub
cmp
dec
into
cmc
jae
insl
les
or
cltd
pop
mov
pop
rolb
lock
jo
imulb
jecxz
fists
add
aaa
inc
fwait
mov
pop
inc
and
cs
sbb
add
repnz
mov
pop
mov
lea
xchg
sti
mov
or
pushw
hlt
push
cmpb
adcb
sub
movsl
addr16
adc
dec
mov
adc
test
xchg
cmpsl
loope
inc
adc
rcrb
out
sub
cmp
mov
out
mov
cmpsl
es
xor
shr
jnp
inc
pop
jmp
xchg
outsb
xchg
mov
jp
add
mov
out
loope
loop
mov
into
cmp
jne
outsl
xchg
movsb
lock
les
cmc
or
fsts
fcoms
cmp
je
jo
andb
xchg
outsl
push
ljmp
inc
jmp
xor
pop
out
sub
sar
mov
xor
es
add
sbb
test
inc
movsl
mov
push
ret
loop
push
cmp
cmpsb
push
sub
insl
test
pop
andb
and
cwtl
mov
or
mov
jbe
mov
cmpsb
jae
jnp
sbb
outsl
fidivs
cs
xor
shll
adc
sbb
cmp
int
sti
gs
popa
es
cwtl
inc
pop
xor
lods
les
movsb
imul
jae
dec
cmp
push
cld
int
or
pop
outsb
adc
mov
ret
ss
cmp
nop
jp
out
arpl
mov
dec
cmpsl
jl
mov
jg
pop
inc
arpl
gs
lds
mov
mov
lret
mov
and
ljmp
add
push
lock
out
stos
fmull
dec
fucomip
popa
inc
mov
loope
mov
xchg
ss
jl
pop
sbb
mov
cwtl
cli
aaa
in
scas
push
sub
mov
pop
mov
pop
js
sbb
cltd
mov
test
add
cli
jae
outsb
aaa
pop
jmp
neg
int3
jp
jge
aaa
cmp
pushf
pop
push
maxps
out
inc
xchg
inc
sbb
sub
sbb
mov
insb
testl
ficoms
cltd
inc
lcall
cltd
imul
xchg
je
dec
loopne
fwait
xor
or
dec
repnz
adcb
push
xlat
pop
xchg
add
or
shrl
jo
mov
cmp
stc
jno
cmp
pop
push
adc
add
icebp
ja
mov
int3
push
fwait
addr16
pop
jo
sbb
icebp
icebp
out
ret
xchg
out
mov
fidivrl
pop
fisubl
xchg
push
dec
xor
scas
xchg
push
and
lcall
cld
inc
adc
xor
hlt
mov
inc
mov
dec
mov
sbb
jecxz
into
mov
shr
addb
pop
adc
mov
fisubl
sti
jbe
sbb
inc
fsubl
xor
rorl
repz
xchg
and
dec
pop
mov
add
mov
jge
into
popf
shrl
xor
add
popf
loop
adc
mov
sbb
add
int
mov
xchg
jge
arpl
pusha
jl
pop
mov
push
inc
fwait
add
fstl
sbb
inc
push
or
or
dec
pushf
fdivrp
aas
add
push
fmuls
push
lahf
jno
faddl
pop
push
sbb
xchg
cmovb
jns
sub
sarb
mov
push
mov
cmp
ds
dec
dec
mov
into
jg
test
or
pop
in
add
adc
nop
les
hlt
push
stc
jno
in
insb
lahf
push
ret
sub
enter
xchg
aas
cs
push
movsl
aaa
add
outsb
stos
insb
daa
repnz
adc
lret
lds
dec
imul
dec
jae
sahf
aas
pop
push
add
xchg
add
sbb
add
test
shl
shlb
cli
mull
lea
imul
inc
lahf
fsub
in
lret
sti
test
lret
data16
dec
or
test
pop
mov
sti
clc
outsb
ficompl
hlt
or
popa
outsb
lock
jge
fs
mov
roll
pusha
sub
mov
mov
fsubrs
ret
outsl
xor
sbb
sbb
jno
adc
fmuls
mov
cmp
adc
icebp
add
adc
adc
sar
lcall
pop
cs
jno
in
xchg
mov
sbb
mov
iret
push
out
nop
movsb
add
fcomps
dec
xor
dec
cmpsb
pop
pop
mov
fldenv
fiadds
je
jecxz
fimull
test
jecxz
sub
pop
pusha
std
xor
ja
mov
movsl
or
adc
mov
cmp
xor
pop
fcomip
stos
hlt
pushl
ficomps
out
push
mov
or
cmp
and
stos
mov
mov
push
stos
xchg
lods
fidivrs
idiv
movsb
cmc
mov
insb
lret
lret
aaa
jnp
add
inc
js
jbe
cmp
nop
mov
addr16
ja
cli
jbe
mov
dec
or
fsub
cwtl
sti
ss
xchg
mov
sbb
aas
xor
scas
xorb
outsl
in
push
push
cwtl
in
loope
lock
sub
pop
adc
loop
addr16
fistps
in
push
ljmp
cmpsb
adc
imul
lds
les
push
inc
imul
mov
ds
add
add
and
stos
inc
push
adc
mov
cmp
in
and
insb
int
xchg
shlb
lahf
cld
leave
sti
cwtl
out
dec
clc
pop
lahf
int3
mov
pusha
out
nop
push
aad
mov
pop
test
lret
lods
lods
call
les
decb
push
adc
cwtl
les
aas
adc
or
cmp
out
imul
nop
jnp
daa
loopne
out
insl
fildll
aaa
inc
pop
mov
std
addr16
das
mov
scas
push
mov
pop
cmp
xor
xor
outsl
movnti
add
fstpl
ret
std
xor
and
pushf
sbb
jns
xor
pop
ja
xchg
movsb
imul
mov
push
xchg
push
pop
xchg
scas
xchg
sbb
pop
andl
outsb
jecxz
xchg
xchg
mov
or
ja
pusha
cltd
push
and
mov
mov
in
lock
fwait
mov
mov
fistpl
sub
jbe
mov
int3
push
aam
dec
sti
mov
cmc
shrb
fcmovnu
push
aam
inc
inc
mov
aas
xchg
ja
xor
xchg
mov
sar
pop
bound
jno
add
xchg
pop
add
repz
or
pushf
or
ficompl
push
sti
cmp
xchg
add
sbb
cmp
icebp
lret
mov
ja
outsl
jg
in
pop
pop
dec
mov
jle
cmc
mov
repz
or
xor
jmp
add
push
in
jb
dec
addr16
sbb
pop
add
xor
gs
and
flds
adc
ljmp
outsl
and
xchg
xor
mov
xchg
dec
push
jge
bound
xchg
mov
push
lret
aaa
cmpsb
imul
or
dec
bnd
fldl2t
mov
pop
popa
mov
push
xchg
sbbl
js
das
cmp
imul
push
lods
mov
push
add
cltd
outsl
mulb
ret
push
test
addr16
lahf
mov
test
mov
xchg
subb
mov
xorb
adc
cmpsb
es
xor
dec
xor
and
push
sub
pop
jb
mov
or
mov
xchg
roll
leave
dec
pop
rorb
ret
sbb
sbb
pop
stos
cmp
mov
scas
jecxz
test
leave
pushf
fisubrl
add
push
inc
mov
pop
and
and
add
out
xlat
push
fists
lcall
decl
int3
imul
fcomps
xchg
in
add
scas
mov
sub
fldenv
repz
sub
push
ret
lds
pop
fistpll
fnstenv
mov
in
mov
jns
xlat
inc
sbb
movq
loopne
shrl
scas
push
cmp
cs
or
jp
dec
cmc
cmc
mov
inc
jg
repz
repz
pop
xchg
push
scas
in
hlt
in
sbbb
lret
xor
dec
test
cmc
push
popa
lcall
push
repnz
and
aaa
inc
pop
cld
and
inc
cmpsl
mov
pop
jno
cmp
int3
outsl
pop
rolb
add
lods
fiaddl
pop
sub
xchg
ss
lcall
dec
jne
orb
push
sahf
es
xchg
adc
pop
and
dec
ret
jle
rcr
mov
sbb
ljmp
stc
outsl
inc
int3
mov
mov
lret
lea
xor
lahf
inc
mov
andb
aad
into
sbb
xchg
xchg
rolb
push
adc
pushf
pop
xchg
xchg
ds
aad
or
mov
out
imul
mov
icebp
jbe
push
adc
ljmp
xor
mov
dec
mov
in
in
movsl
int3
dec
push
adc
loop
imul
mov
popa
push
push
pop
into
cmovae
dec
fistl
lahf
dec
clc
cli
imul
fiadds
in
mov
mov
cwtl
dec
stos
ret
pop
mov
push
push
in
xchg
aas
jne
bts
mov
or
mov
stos
mov
fnstsw
push
vaddsd
leave
lea
push
mov
loopne,pt
insb
add
es
ret
adc
push
jnp
jo
ss
jne
sti
repz
in
fisttpll
push
testl
cmpsl
pop
push
repz
sbb
mov
push
inc
std
jle
loope
popa
adc
push
inc
or
pop
jns
mov
xchg
pop
xor
mov
push
or
push
icebp
test
fwait
and
push
mov
sbb
xor
call
jg
lods
mov
xchg
mov
fsubp
xlat
hlt
and
jne
shrl
jb
mov
jae
addr16
fsubrs
sahf
in
sbb
jmp
push
inc
lock
or
les
sbb
xor
xchg
nop
fcmovnbe
out
sarl
sahf
dec
and
lahf
sarl
mov
aas
and
push
xor
mov
fsubrs
pop
pop
std
daa
stos
outsl
fmul
outsb
mov
fisubs
push
xchg
push
stc
mov
ror
jl
into
mov
pop
lcall
dec
jbe
sub
outsl
xlat
outsl
xor
test
shrl
mov
xlat
scas
cltd
sbb
cmp
fwait
ret
or
inc
inc
inc
js
movsl
test
pushf
int3
or
hlt
fists
faddl
xchg
out
ds
lahf
out
push
cmp
mov
cs
sbbl
and
test
outsb
xchg
mov
push
mov
je
in
test
mov
or
divl
mov
sub
lods
fidivrl
xchg
and
dec
pop
stc
dec
popf
repnz
repnz
pop
mov
sbb
shrb
cmpsb
jge
pop
daa
adc
sbb
repnz
into
jp
ret
ret
mov
pop
nop
sarl
jno
jns
or
das
push
scas
xor
daa
add
pop
xchg
lahf
sub
push
je
mov
mov
leave
push
dec
js
push
adc
movsl
xor
jne
sahf
jo
mov
cmp
mov
dec
addl
mov
mov
mov
lock
dec
xchg
cltd
into
aaa
enter
js
lea
f2xm1
or
js
dec
test
add
insl
push
jo
aam
mov
or
loope
or
movsl
adc
jns
in
iret
or
enter
ret
sub
int
add
aad
adcb
add
bound
xor
push
xor
repnz
or
jge
xchg
out
sti
cmp
inc
push
dec
ljmp
movsl
lcall
cmpsl
adc
shlb
iret
add
jno
lret
dec
das
test
xor
data16
jnp
mov
daa
scas
push
xchg
adc
add
push
mov
pop
cmpsl
pop
hlt
xor
adc
fs
mov
add
xor
ja
inc
xchg
xor
mov
sbb
leave
sub
inc
sbb
mov
rorl
cmp
icebp
shlw
popa
xchg
loop
icebp
sysexit
fmuls
std
or
aam
mov
add
fs
std
mov
or
scas
push
mov
sbb
mov
test
loop
jo
mov
mov
mov
mov
aaa
push
jb
cs
pop
out
xor
sbb
dec
popf
cmp
outsb
sbbb
out
pop
jns
pushf
hlt
push
rcrb
mov
inc
push
sbb
push
orl
mov
lods
pop
daa
push
cs
aam
mov
imul
mov
add
sub
sarb
mov
stc
addr16
dec
das
mov
add
pop
scas
dec
dec
sub
push
sbb
push
addr16
imul
xchg
mov
sbb
nop
push
inc
popf
cltd
or
cmp
in
mov
xchg
stc
mov
mov
cmp
lds
popf
mov
fs
stos
cmp
ss
sbb
cmp
mov
fsubs
inc
or
push
dec
jecxz
and
xchg
lods
addl
add
arpl
push
mov
jmp
daa
cmp
jp
sub
lods
sahf
dec
out
add
ja
lock
js
mov
mov
pop
iret
pop
out
mov
xchg
inc
inc
dec
incl
jle
adc
shlb
adc
andb
add
repnz
hlt
mov
xchg
pusha
adcb
popf
sub
push
fldl
xchg
cli
call
sub
int3
sub
les
pushf
hlt
inc
scas
fcmove
push
xor
popf
insl
cld
mov
sti
lret
adc
fidivrs
and
fistps
ds
jo
sub
lcall
out
popf
jecxz
sub
mov
cld
leave
in
fdivp
push
cmpsl
mov
cmp
mov
push
mov
pop
in
mov
dec
push
mov
mov
xchg
leave
jne
out
pop
mov
and
popa
xrelease
add
sti
mov
push
and
sbb
mov
cmp
xchg
sub
dec
out
lods
add
les
ds
popf
ret
mull
pop
repz
pop
je
pusha
out
mov
and
mov
push
add
push
cltd
xchg
mov
sbb
cmp
ficomps
push
xor
mov
lret
mov
push
xor
orb
sbb
jge
lds
jmp
push
loopne
sub
cmpsl
ficomps
lret
sahf
dec
fisubrs
pop
mov
fs
repz
cltd
xchg
add
and
jmp
imul
test
test
addr16
inc
insb
mov
std
xor
push
aas
adc
icebp
and
xchg
mov
or
test
mov
cmpsb
sub
inc
mov
pusha
adcb
mov
rcrb
shlb
or
xchg
mov
pushl
lods
inc
fs
loope
xchg
pushf
xchg
call
imul
jb
popa
cmc
jne
fisubrl
test
dec
ljmp
mov
movsb
mov
cmp
adc
scas
inc
cmc
adc
xor
hlt
inc
addb
sub
fmuls
cmp
hlt
mov
negb
cmp
shlb
xor
cmp
xchg
inc
pusha
mov
js
ss
sub
sarb
push
shrl
cmc
cltd
ret
sti
dec
lods
out
xchg
enter
pusha
and
loop
imul
out
mov
add
gs
dec
test
push
add
lret
int3
fwait
add
lea
lds
push
sarl
addr16
push
adcl
ljmp
fsubl
adc
rol
dec
loop
jbe
lcall
and
jb
sbb
shrl
js
sbb
sbb
jno
mov
cld
sbb
clc
rcrl
cmp
sti
jb
mov
jo,pt
bound
jne
or
scas
int
pop
sub
lret
inc
adc
inc
aad
nop
inc
cmp
lods
into
dec
sbb
stos
and
dec
mov
fisubs
inc
xor
cmpl
mov
jnp
add
or
adc
shlb
cld
fdivrl
sub
nop
shll
in
test
pusha
aam
loope
mov
xlat
jl
and
jg
mov
not
shrb
icebp
pushl
dec
push
or
hlt
roll
scas
nop
cmpl
jp
or
loop
cmp
sub
jnp
xchg
xor
shll
test
lcall
jno
pop
imul
inc
sbbb
cmp
push
mov
cmpsb
repnz
fistpl
jns
jns
adc
push
rolb
outsb
loop
sub
dec
push
fnstsw
adc
icebp
push
subl
mov
mov
jge
sarl
scas
das
addr16
push
movsb
imul
add
js
pop
clc
pop
add
int3
xor
jno
inc
fimull
loopne
sub
lods
scas
and
mov
int3
mov
in
mov
push
pop
cmp
inc
mov
xor
fbld
das
scas
push
adc
in
pop
mov
dec
adc
inc
loop
popf
test
idivb
pop
ss
mov
popa
mov
imul
pcmpeqw
mov
aaa
in
test
fists
cli
inc
in
insl
loopne
sbb
dec
enter
dec
add
sub
xor
aas
stos
pop
jmp
or
clc
cmp
add
xchg
sub
js
push
push
mov
iret
sti
pop
jnp
mov
out
cltd
dec
mov
jp
sbb
pop
push
aaa
inc
aas
lret
out
pop
adc
cmp
inc
fcom
pop
mov
cmp
adc
es
sti
pop
or
xor
xor
addr16
mov
roll
push
sbb
pusha
rep
stos
subb
clc
pop
cs
fildl
or
ficoml
lds
mov
dec
xor
mov
lea
xchg
cmp
icebp
sbb
iret
test
orb
mov
sbb
out
stos
pop
pop
icebp
cwtl
rcl
mov
dec
xchg
lcall
sarb
mov
test
adc
mov
sbb
xlat
mov
adc
mov
out
adc
clc
mov
jbe
inc
xchg
out
movl
dec
and
cmc
xor
repz
jo
push
in
push
shlb
xchg
mov
inc
mov
cmp
adc
into
adc
push
push
loope
test
or
xor
in
popa
mov
notb
lods
mov
das
inc
fadds
mov
into
aad
or
jne
add
movsb
add
mov
out
je
sub
push
and
sbb
cmp
sti
movsl
sbb
fistpll
lcall
mov
sub
lds
insb
cmp
in
sahf
mov
jbe
nop
xchg
dec
xor
adc
pushf
scas
bound
cltd
jo
stos
cld
aam
pop
pushf
test
pop
popa
mov
es
mov
in
lods
pop
xchg
push
pop
add
popl
lds
mov
xlat
popf
cmp
adc
bound
push
fcoml
leave
cmp
push
adc
add
rorl
mov
lods
out
imul
inc
rcl
push
xor
es
cmp
enter
pop
pusha
mov
xchg
pop
int3
sbb
push
push
and
sub
pop
push
ljmp
cmp
movsl
orl
pop
repz
pop
lahf
mov
xor
jbe
push
lods
leave
iret
push
jae
or
rcr
lods
sahf
mov
sbb
push
mov
pushf
shll
xchg
stc
mov
jb
daa
lcall
add
adc
clc
out
xchg
fbld
inc
je
lock
push
push
xor
xchg
out
rorl
je
inc
popf
aam
inc
adc
int
inc
aad
jle
cmp
lret
jo
popl
imul
les
pop
push
inc
out
sbb
xchg
or
push
loopne
lahf
push
jne
daa
dec
mov
fs
xor
mov
stc
inc
mov
cmp
or
xor
test
or
and
stos
iret
call
mov
push
cmpsb
shl
ja
xor
je
and
dec
loopne
lods
adc
loopne,pn
in
xor
push
imul
lret
cmp
add
mov
add
inc
sub
rcl
add
mov
push
jecxz
mov
push
and
out
shll
and
in
push
xor
int
stos
movsb
scas
sbb
fidivs
xorl
enter
jl
cmpsl
aas
scas
and
add
aam
mov
hlt
or
cmp
push
xor
adc
aam
jno
cmp
and
inc
push
xor
push
and
in
inc
fdivr
push
adc
pushf
ret
mov
jl
xlat
mov
shrl
add
sbbb
lcall
loopne
adc
add
sbbl
sub
adc
xor
cmp
jg
sub
lods
in
mov
std
sub
rolb
sub
cmpsb
in
lods
dec
jecxz
xchg
mov
sbb
subb
scas
xor
pop
xchg
fwait
sub
out
fcoms
ja
add
dec
cmp
xchg
cmc
mov
dec
add
imul
bound
into
or
or
aaa
adc
xchg
rorl
mov
das
out
xor
mov
push
bound
sbb
push
rclb
pop
mov
mov
pop
mov
arpl
inc
cmp
nop
cmp
add
mov
cld
add
int
push
imul
out
inc
jb
out
xchg
mov
pop
xchg
mov
sarl
dec
in
loopne
or
or
movsb
imul
gs
xor
push
jo
sub
fcompl
std
dec
cmp
mov
lds
mov
test
inc
pop
or
ss
or
sub
rorb
dec
push
in
testb
jg
sub
addr16
sbb
cmp
loopne
insl
pop
mov
neg
stos
and
xorl
adc
xor
std
ret
cmp
xchg
mov
sbb
mov
mov
jae
js
inc
xchg
dec
mov
test
xchg
sub
fs
lahf
jae
or
mov
sbb
pop
mov
lods
or
outsl
lahf
mov
fmuls
cmp
rclb
gs
aas
cmp
leave
into
sti
cli
js
xchg
or
dec
add
insl
mov
mov
add
imul
xchg
sub
mov
int3
insb
test
xor
xor
add
adc
push
add
mov
jl
int3
inc
cltd
gs
ror
cmp
mov
filds
jg
loop
fstps
pop
mov
and
mov
fs
mov
push
xchg
push
rol
shl
adc
or
add
sbb
fiadds
push
and
pop
fsub
cli
or
into
rcl
xor
pop
shl
inc
xchg
cmc
int3
xchg
das
mov
xchg
loopne
xchg
orl
or
add
lret
subl
sbb
out
sbbb
add
xor
aam
lods
andl
aas
in
iret
out
mov
and
fistps
push
xchg
shll
orl
inc
jnp
dec
stc
push
in
arpl
call
inc
push
xor
adc
sub
ret
jns
add
jae
mov
cmp
add
inc
int
xor
inc
std
sbb
lea
shlb
scas
mov
lods
sbb
push
jmp
rcl
sbb
lods
test
jns
add
jmp
fidivrs
jns
subb
js
ja
in
jmp
cld
adc
mov
insl
or
inc
xchg
stc
nop
sbb
test
jle
mov
inc
push
ret
or
out
xor
test
and
mov
mov
ret
pop
test
incb
in
mov
neg
jmp
sbb
stc
push
divl
fidivs
push
hlt
pop
jle
fs
push
cmp
popf
push
push
call
mov
mov
ror
sbb
imul
in
cmp
push
cmc
mov
adc
mov
into
out
adc
bound
or
sbb
gs
push
in
or
fists
into
scas
fistps
push
push
insl
xor
and
ds
out
bound
test
dec
cwtl
daa
push
cli
sbb
mov
push
nop
mov
pop
mov
loope
xchg
nop
add
cmpsb
in
jmp
xchg
cmc
pusha
add
mov
movsb
fldl
sub
ds
pop
ret
mov
lea
sbb
cmp
mov
fildll
js
xor
sub
cmp
cmp
out
mov
xchg
repz
jge,pn
jae
bound
cli
mov
mov
push
ds
push
add
sub
sbb
jmp
lcall
cs
mov
scas
into
in
push
sbb
notl
mov
xor
cmp
loop
mov
mov
sub
mov
jmp
cmpsb
xor
push
cmc
dec
push
pop
mov
pop
jg
or
movsl
test
push
popf
pop
test
test
dec
enter
aam
mov
dec
fnstenv
adc
mov
insl
rol
test
in
popa
loope
push
adc
jp
jb
fstpl
pop
lcall
scas
shll
outsl
in
mov
sub
lods
popa
fucomi
xchg
pop
sahf
in
insl
push
je
movsb
mov
fs
aas
ret
out
cmp
inc
cli
shlb
fsubrl
sahf
adc
sbb
out
inc
sub
shlb
clc
test
xchg
subb
lcall
xchg
jg
push
iret
push
mov
test
mov
mov
scas
and
and
and
adcl
lds
push
sbb
mov
int3
lahf
mov
and
in
addr16
cltd
fiadds
ret
mov
or
ja
scas
fiaddl
iret
lahf
push
mov
mov
sbb
loope
mov
jg
dec
es
mov
cmp
pop
loopne
dec
cli
aaa
jg
adc
adc
mov
sub
jle
and
notl
cmpb
inc
shrb
repz
cwtl
dec
stos
aas
insb
pop
sar
mov
and
or
cmpb
sti
mov
inc
add
and
mov
sti
and
sub
popa
inc
mov
push
sbb
cwtl
pop
cmp
dec
jno
mov
adc
sbb
mov
dec
lret
xor
cmp
add
scas
cmc
add
insl
cmc
imulb
push
push
aas
inc
sbbl
xor
inc
into
mov
adc
es
sbb
push
mulb
dec
cli
decb
les
test
shlb
pop
push
movsl
scas
push
sub
adc
xchg
cmpsb
pop
fbstp
dec
nop
push
inc
jge
cmc
es
bnd
gs
xchg
adc
pop
sbb
out
enter
lcall
xchg
rclb
hlt
mov
cwtl
fadds
xor
stc
xchg
pop
dec
push
pop
imul
jmp
push
or
sub
jnp
rcrb
adc
nop
adc
imul
cli
mov
mov
data16
push
add
in
imul
cmc
pusha
mov
sub
xor
fstpt
lods
mov
dec
jnp
xlat
pusha
or
push
andb
aaa
daa
divl
pusha
push
into
or
out
out
xchg
dec
aam
xor
mov
mov
and
jnp
mov
stc
test
fdivs
or
pop
divl
in
jge
aaa
lds
push
and
adc
dec
jl
sbb
adc
mov
imul
xorl
imull
les
and
cmp
int
aas
mov
adc
rcrl
pop
fldcw
mov
or
mov
push
insl
scas
movb
es
lods
jl
and
mov
sahf
lret
sti
and
add
mov
es
pop
out
and
je
push
cmp
test
xor
outsb
scas
xchg
pop
je
repz
int
mov
cld
pop
pop
jno
nop
jecxz
sub
cmp
cmp
outsb
rolb
sbb
movsb
sub
lods
int3
and
xor
rcll
cmc
mov
adc
mov
imul
xchg
pop
rorb
std
or
in
push
sub
leave
std
into
jbe
dec
dec
add
scas
sbb
cmp
adc
mov
push
cmp
and
xlat
mov
dec
imul
mov
in
sub
pop
sub
xchg
adc
pop
mov
jl
pop
xlat
out
iret
inc
dec
mov
add
add
dec
or
shrb
sahf
popa
cmpsb
insb
push
lcall
pop
dec
lret
jns
mov
insl
mov
shl
insb
jo
or
outsb
lcall
out
je
fsub
mov
pop
mov
dec
sbbl
and
pushf
lds
loop
lcall
xlat
scas
sti
inc
adc
add
inc
xor
in
add
mov
or
xchg
std
xor
jnp
jo
movsb
xchg
ss
mov
mov
ljmp
jp
fsts
movsl
dec
in
dec
adc
cmp
mov
outsl
jmp
and
inc
jne
mov
fwait
push
movsb
dec
shrl
sahf
jne
or
daa
fnstenv
mov
rcr
dec
rcl
pop
or
mov
push
mov
adc
decb
and
or
loopne,pn
ljmp
adc
lea
cltd
out
mov
js
mov
testb
insl
cmp
jp
mov
std
push
pop
test
mov
fs
or
push
test
test
sbbl
aaa
je
or
sbb
and
arpl
mov
dec
idivb
test
insb
dec
pop
mov
jecxz,pt
int
inc
xor
mov
sbb
fiaddl
cltd
out
fndisi(8087
shlb
decb
push
cmp
mov
sub
xorb
inc
pop
imul
push
pop
hlt
test
and
jbe
jo
mov
push
mov
pop
mov
push
arpl
jle
mov
into
aas
adc
xchg
shlb
mov
xlat
push
adc
out
sub
and
lcall
pop
cltd
pop
addb
leave
lock
fisttpll
bound
test
xor
ja
push
pusha
imul
mov
cld
pop
sbb
xchg
push
push
in
and
pop
ja
dec
push
xor
sub
jl
andb
xchg
or
roll
sub
clc
sbb
xchg
pusha
outsb
push
jns
imul
push
or
mov
cmpsb
inc
imul
sub
sub
scas
lea
push
sub
jb
loope
aaa
dec
push
cmp
mov
jns
xor
lea
es
xor
xor
cmp
fcmovb
pop
xor
push
sar
mov
ja
add
jp
mov
jmp
mov
push
jp
movsl
jp
out
sbb
scas
jno
push
push
aad
mov
les
pop
repnz
pushl
cmp
adc
pop
aaa
mov
incl
adc
fcmove
and
jmp
arpl
xlat
stos
cmc
mov
por
fwait
push
int3
mov
ss
xchg
xor
xchg
fwait
sub
jne
bound
pop
loope
mov
pop
gs
daa
adc
mov
daa
xor
inc
or
mov
mov
mov
es
sub
imul
dec
pop
sbb
cmpsl
cmp
dec
aas
dec
arpl
es
dec
aas
or
arpl
test
aaa
jecxz
sarl
clc
fs
test
cmp
insl
sbbb
xchg
les
cld
clc
push
cmc
call
in
sbb
lret
mov
or
jecxz
js
hlt
test
add
xorl
sbb
cli
dec
faddp
xor
fdivrl
mov
pop
test
dec
pusha
imul
scas
cmp
jne
push
shll
add
insb
pop
ret
in
mov
mov
arpl
into
mov
fadds
add
in
dec
sub
add
in
into
ss
bound
push
fwait
or
lahf
push
fisttps
or
xlat
sub
mov
cmp
out
xor
mov
adc
mov
cmp
stc
jbe
mov
adc
mov
add
es
cld
inc
sub
dec
inc
mov
add
mov
pop
sbb
imul
fdivr
mov
pop
pop
mov
inc
stc
mov
sub
and
dec
sub
push
out
jecxz
jmp
repnz
or
mov
bound
jae
jle
mov
ja
jp
sbb
sbb
sbb
xor
stos
mov
inc
mov
sbb
stos
xchg
enter
or
in
or
and
ror
xchg
jle
add
mov
fbld
mov
push
push
std
in
lock
xor
inc
push
or
push
test
mov
lret
cmp
ja
aad
and
or
or
mov
push
sbb
addr16
cmpsl
add
ficompl
aaa
cmp
lds
xchg
movsl
fwait
mov
mov
jno
mov
sub
movsl
lcall
pop
inc
and
in
push
sub
mov
mov
xchg
cmpsl
push
rclb
in
ss
cli
mov
cmp
pop
testl
xor
pop
je
and
fs
mov
sarb
mov
lds
cmc
enter
sbb
mov
jo
push
outsl
and
dec
arpl
xor
scas
les
or
das
jnp
and
or
pop
jecxz
pop
dec
mov
ja
xor
es
inc
inc
out
push
jo
stc
fdivrs
cmp
mov
fs
xlat
lock
in
xchg
leave
cmc
and
jmp
jnp
pusha
push
pop
inc
mov
divl
sar
sbb
addr16
lods
lods
pusha
inc
hlt
jmp
sub
incb
shlb
sahf
sti
sbb
adc
mov
lds
inc
shl
shlb
dec
into
pop
cmpsb
fwait
push
gs
aas
or
outsl
rclb
sub
testb
xchg
jo
push
dec
imul
js
inc
cmp
les
fnstsw
cwtl
inc
mul
rorl
lds
jge
xchg
xor
sbb
pop
bswap
mov
fcoms
aaa
jecxz
inc
push
gs
aaa
mov
mov
lds
sub
jg
stos
push
adc
in
lcall
xor
cwtl
add
push
xchg
mov
outsb
mov
leave
call
imul
sbb
ljmp
push
sti
mov
cmp
adc
push
push
in
scas
ret
push
loope
jecxz
in
and
mov
xchg
popa
inc
inc
in
pop
mov
inc
and
push
push
cmpsb
jmp
or
mov
lret
push
arpl
iret
aas
insl
sub
jmp
cmc
xchg
cmpsl
cwtl
stos
std
outsl
push
pop
sbb
pop
andb
sub
movsl
inc
scas
enter
call
aaa
testb
pop
mov
sub
and
jb
scas
clc
pop
lret
test
out
inc
mov
out
jge
xor
insb
dec
cmp
cmpsl
ffree
add
xchg
push
or
mov
jns
lret
not
dec
xor
push
shl
adc
stc
sahf
or
insb
jg
pop
pop
shl
insl
pop
sbb
lahf
cltd
sub
mov
jno
sahf
cwtl
es
imul
cltd
loopne
push
sub
jb
sub
aam
cmp
jnp
push
call
arpl
das
push
or
jmp
fisttpl
mov
adc
add
mov
pop
xlat
aam
xor
pop
bound
sbb
pop
loop
or
in
popa
inc
loopne
xor
cli
jecxz
mov
sarl
dec
ss
mov
xchg
mov
std
arpl
stos
lds
std
mov
push
push
inc
shlb
out
shlb
out
xorb
pop
xorl
je
jb
cmovs
popa
inc
das
loop
stc
je
in
flds
push
inc
sub
push
push
hlt
imulb
test
hlt
dec
mov
insb
lret
addr16
adc
cld
cli
inc
sbb
sar
inc
in
pop
mov
xor
mov
and
leave
push
fimull
scas
rcrl
jg
mov
movsb
adc
xchg
jmp
inc
in
xor
push
xorl
or
enter
inc
lret
sbb
lods
add
and
movsb
popa
sbb
in
test
sub
mov
lret
icebp
jns
in
mov
and
mov
mov
ret
fnsetpm(287
data16
mov
lret
xchg
lea
push
xchg
sub
push
jmp
enter
push
lock
jne
jae
clc
bound
mov
or
aam
xchg
mov
sbb
outsl
icebp
jns
push
xchg
mov
adc
add
adc
xor
loopw
cmp
outsl
ja
mov
aas
ljmp
scas
out
adc
add
js
in
xor
call
or
shrl
vcmppd
xorb
push
fbstp
call
insl
push
ja
stc
xor
stc
xchg
loopne
push
push
loop
cli
lods
std
jns
es
in
bound
inc
sub
popa
fwait
push
and
cmp
lret
js
sub
lahf
arpl
jl
push
and
and
ja
and
cmp
mov
pop
scas
xor
lods
xor
call
xor
jmp
loop
into
cwtl
std
inc
es
pop
jno
jne
mov
or
in
scas
roll
pop
or
lods
xlat
rcl
sub
sbb
cs
sub
hlt
movsb
inc
pop
dec
in
js
xchg
sbb
xchg
in
cmp
mov
bswap
xchg
mov
sub
push
aaa
jecxz
insl
or
enter
pop
mov
xchg
jp
out
shl
or
dec
xchg
mov
adc
das
jne
mov
aam
cs
stc
pusha
push
pop
lahf
xorb
es
shlb
into
or
pop
mov
movsl
pop
jg
jns
adc
and
xor
pop
in
mov
mov
aas
sti
mov
nop
xchg
jle
sub
mov
imul
inc
daa
lods
xchg
mov
loope
imul
cmp
pop
push
test
rorb
cmp
idivb
ss
cmp
push
ljmp
sahf
cld
lods
push
incl
insb
add
rolb
dec
sbb
mov
mov
cmp
in
push
add
test
sub
mov
mov
paddusw
inc
sbbl
and
pop
test
stc
adc
or
pop
icebp
xchg
inc
lock
push
push
push
cmp
lcall
cmp
addb
xchg
inc
lcall
bound
inc
movb
mov
jg
or
loope
cltd
scas
cmpsl
and
in
mov
mov
adc
inc
xor
mov
mov
jbe
mov
mov
stc
cmp
jp
fsubp
sub
repnz
sarl
fstl
cmp
imul
gs
addr16
and
rorl
test
cltd
push
test
mov
cmp
adc
sub
fisttps
sti
adc
push
fnstenv
addr16
repz
inc
je
test
mov
xchg
ficompl
sbb
mov
or
cwtl
mov
imul
cmp
pop
dec
adc
cltd
sub
fwait
xrelease
inc
adc
std
in
jp
push
push
xchg
outsl
sbb
adcb
ficoml
into
iret
jo
pop
sbb
rcrl
sbb
push
jg
orb
cwtl
lea
or
daa
pushf
test
mov
iret
ficoms
hlt
mov
push
ja
push
mov
mov
xchg
adc
mov
loope
add
dec
mov
stos
jp
add
mov
shr
test
out
imul
push
fiadds
shll
xchg
mov
push
test
repnz
cmp
sbb
xor
sahf
inc
jnp
dec
or
xchg
mov
lea
imull
pop
sbb
cwtl
loopne
out
pop
std
mov
jecxz
mov
cltd
out
and
sub
mov
add
insl
add
imul
push
add
mov
jb
mov
add
mov
mov
outsb
adc
sub
mov
scas
dec
mov
mov
pop
cmp
push
add
pop
xchg
test
fdivrl
popf
cmp
and
push
aas
sti
add
and
dec
cmpsb
aam
cmp
inc
push
jb
scas
and
xchg
cmp
sti
aaa
int3
pop
out
addr16
mov
xor
or
push
and
fcmovu
addl
scas
jle
daa
cmp
icebp
or
dec
sbb
mov
jno
xchg
or
pushf
stc
push
and
adc
aad
lcall
sub
mov
inc
repnz
mov
sti
mov
cmp
jl
aas
shrb
mov
cmp
adc
xchg
jl
fisubs
js
insb
lahf
lods
ret
adc
imul
cli
test
dec
outsb
insb
xchg
mov
add
pop
and
adc
scas
imul
ret
cmpsl
bound
movzwl
in
movsl
jne
in
mov
mov
pop
fdiv
xor
mov
lea
jl
lret
cmp
push
inc
or
out
lods
inc
ficoms
icebp
mov
daa
hlt
lahf
fidivrl
push
adc
pop
loope
je
pop
notl
jp
jbe
add
in
mov
inc
cmp
dec
lods
inc
mov
lret
in
push
cld
xchg
mov
jp
ja
and
cmp
ds
punpckhwd
jno
mov
filds
add
push
mov
pop
lods
lods
repz
dec
jno
jb
sbb
ljmp
jns
mov
mov
loopne
imul
or
pop
rcr
dec
sbb
imul
insl
jecxz
lea
sub
push
out
fmull
or
je
imul
adc
pop
pop
add
sbb
and
cmpsl
push
cmc
push
jle
mov
sub
pop
or
outsb
xchg
test
xchg
testl
or
push
jecxz
add
jl
lret
xor
scas
and
pop
push
out
nop
mov
and
out
add
push
gs
mov
fs
cmpsb
outsb
xlat
pop
movsl
test
jp
mov
test
mov
cmpl
jecxz
into
jb
mov
adc
adc
out
gs
mulb
loopne
into
push
pop
pop
clc
push
push
or
xchg
daa
in
cmp
insb
int3
xlat
push
fnstcw
ja
addr16
push
xor
pop
push
icebp
inc
xchg
push
hlt
das
xor
sub
sahf
jp
mov
decb
std
loope
clc
add
sub
test
dec
ja
push
outsb
movsb
mov
std
daa
data16
jno
or
fbld
push
mov
rcll
add
lahf
mov
xor
es
mov
into
lods
cld
adc
add
mov
add
scas
pop
gs
push
push
dec
popf
sbb
repnz
bound
fldenv
mov
dec
xor
lods
inc
and
sub
push
adc
cmp
sub
fsubrl
jge
adc
xchg
lods
jp
dec
mov
es
sub
shrl
repz
lods
rclb
adc
inc
cmpsb
adc
testl
data16
sbb
push
orl
fistpll
xchg
fs
sub
mov
jge
stos
mov
aas
xchg
add
notb
scas
cmp
cmp
mov
xchg
imul
movsb
dec
in
call
xchg
mov
mov
dec
test
pop
stos
inc
cwtl
cmp
push
ret
adc
pop
push
lret
push
xchg
jno
stos
lods
cmpsl
add
rep
xor
cmpsb
mov
test
jecxz
add
jg
adc
pop
sub
xchg
lahf
push
mov
mov
fdivl
clc
sub
jnp
xchg
cwtl
stos
mov
sub
sbb
adc
mov
pop
push
repz
mov
pop
sbb
insb
daa
mov
xor
jl
cmpsb
sbb
inc
aad
movsl
pop
lea
dec
aad
shr
stos
mov
mov
mov
push
and
sbb
lea
and
movl
into
les
movsb
xchg
addr16
sbb
jo
out
popa
cmc
push
mov
test
ljmp
push
ret
jecxz
mov
push
shr
sub
jmp
sahf
xchg
cmp
test
sub
or
rclb
cmp
jb
jb
xchg
sbb
mov
cmp
jnp
nop
shrl
ja
sbb
movsb
div
push
and
hlt
daa
mov
jge
sti
lock
and
int
mov
cmp
pop
popa
push
dec
jl
sub
sbb
mov
xchg
adc
leave
mov
or
add
out
sti
sbb
rcll
inc
push
push
and
sti
iret
mov
jnp
and
sub
mov
and
and
jno
js
and
sbb
jo
adc
ljmp
sub
push
push
pop
cld
mov
jne
sti
cmp
mov
cld
addr16
insl
cmp
and
pop
push
add
fnstsw
test
cmp
push
cmp
jg
xor
xchg
cmovne
out
mov
addb
xor
push
pop
sub
mov
dec
sub
jo
stc
cwtl
mov
inc
adc
repz
sti
jecxz
mov
mov
add
pop
data16
mov
add
mov
les
mov
je
fs
daa
shll
int
or
cltd
test
inc
arpl
push
std
sbb
mov
push
mov
cld
push
inc
sbb
test
xorl
ret
add
or
cwtl
cli
mov
loope
sbb
cmp
leave
pop
cmp
outsb
mov
aad
inc
lcall
arpl
jl
out
mov
pop
cs
and
fnstenv
lods
cltd
cmpsb
xor
xorb
mov
test
bound
pop
add
push
xor
dec
arpl
mov
sub
out
jecxz
jnp
or
rolb
push
xchg
push
popl
push
rolb
jge
hlt
scas
or
test
cmp
inc
cmpl
js
xor
ret
fimuls
dec
test
or
in
fdivl
mov
inc
cmp
mov
push
mov
lret
aad
inc
into
movsb
pop
pop
shll
mov
and
jb
loop
add
cli
pushf
cmc
std
scas
nop
add
jge
mov
xchg
or
repz
pop
test
mov
scas
cmc
mov
cmpsb
stos
std
jge
xchg
int3
stc
add
arpl
pushl
mov
inc
cmpsb
mov
and
notl
rcl
cmp
jmp
cli
cwtl
insl
movsl
lret
cmp
sar
push
popf
shlb
mov
in
test
add
xor
dec
sub
inc
aas
inc
sub
cmpsl
push
push
add
xor
and
adc
xor
inc
lds
push
inc
fwait
sti
dec
jge
inc
pop
jge
sbb
adc
mov
popf
loope
dec
das
push
xchg
xor
fimuls
shlb
sahf
sub
xlat
xor
xchg
aas
adc
sahf
add
rclb
push
fisubrs
ds
js
inc
pop
jnp
idiv
test
fisubl
jae
xchg
inc
out
scas
mov
aaa
add
shll
jb
inc
out
test
xchg
icebp
aam
jecxz
or
dec
push
cwtl
sbb
or
cmp
repz
inc
pushf
xlat
cmpsl
sbb
mov
xchg
sub
xchg
dec
xchg
xchg
das
jle
xchg
subl
shrb
setg
dec
dec
js
sub
push
aad
jmp
cmpsb
clc
shrl
out
jno
xchg
int3
adc
decl
movsb
inc
fldl
cltd
leave
dec
sub
test
lds
test
xlat
mov
repz
jns
adcl
into
aas
sub
ret
cwtl
push
adc
cmp
add
push
loop
int
mov
mov
sub
lret
popa
mov
jg
xor
cmp
sub
sbb
sbb
mov
jecxz
out
loopne
push
add
push
mov
cmc
adc
push
jbe
sub
in
and
mov
iret
loopne
and
mov
inc
pusha
sti
xchg
fsubrl
lods
inc
roll
xchg
jo
in
cmp
jmp
sub
jo
pop
add
je
push
mov
sahf
push
jno,pn
pop
push
cmp
dec
sub
mov
cmpsb
divb
jne
mov
dec
nop
adc
and
adc
push
add
lcall
jge
jnp
add
shlb
popf
nop
xchg
jle
mov
xchg
popf
adc
insl
sub
ljmp
adc
mov
and
nop
call
mov
push
xlat
push
jns
sti
jb
mov
sbb
inc
xor
push
or
fsts
cmp
mov
div
cmp
iret
xchg
loop
fsts
xchg
mov
sar
ljmp
xchg
jp
cmp
enter
icebp
loop
enter
inc
test
scas
or
sub
sahf
pop
insb
sbbb
ds
pop
jb
aas
add
adc
shl
mov
mov
stc
imul
fisubs
out
faddl
pop
shr
cmp
outsb
ja
ja
add
or
sub
imul
shlb
lret
rclb
xorl
mov
sbb
icebp
xor
add
in
mov
cmp
lock
repz
sbb
mov
test
add
push
pop
insl
pop
adc
sub
pop
daa
sub
add
mov
jg
push
and
push
fdivr
pop
test
in
nop
dec
fbstp
dec
adc
bound
ror
cmpsb
pop
in
ret
xchg
sub
or
xorl
cmp
adcb
lcall
gs
pop
lret
lds
mov
xchg
sbb
shl
jmp
movsl
cmp
mov
xor
js
xorb
push
scas
int3
xor
nop
mov
add
xor
adc
sbb
fimull
push
lahf
pop
xor
xchg
xor
jl
es
test
lods
repnz
pop
shr
loope
pop
push
fnsave
inc
dec
test
mov
sbb
mov
jbe
jmp
out
fwait
js
aaa
inc
jl
nop
scas
andb
daa
add
int
add
ret
outsl
sti
mov
mov
pushf
rorl
mov
out
and
mov
rclb
lcall
or
mov
iret
push
je
pop
mov
push
subl
scas
mov
insl
inc
sub
add
pop
push
xor
clc
cmp
and
sbb
nop
out
mov
mov
cwtl
leave
cli
push
sbb
inc
adcl
out
scas
xchg
in
fiadds
push
orb
movsl
cwtl
dec
into
rcl
push
cmc
aam
cmp
in
jmp
ret
out
cmp
or
std
xchg
cwtl
loopne
lcall
mov
lret
cld
mov
xchg
insb
jl
add
and
and
add
shrb
in
enter
pop
xchg
xor
js
sar
jp
xchg
mov
fisubs
add
fwait
insb
sti
xor
push
adc
sub
stos
sbb
push
push
pop
xor
push
incb
push
insb
jb
push
mov
jmp
mov
xor
movsl
lret
and
mov
ljmp
mov
lds
in
mov
sub
pop
hlt
adc
in
clc
cltd
mov
movaps
cmp
lods
sub
mov
call
add
rolb
mov
inc
pop
add
inc
dec
mov
lea
mov
scas
int3
sub
mov
cmc
push
xor
test
dec
pop
mov
enter
rep
adc
push
dec
xor
cld
cmpsl
mov
xor
clc
outsb
push
imul
cwtl
sarl
imulb
xor
out
cmp
and
sub
sbb
fadd
out
push
outsb
adc
xor
add
lds
or
push
push
sbb
pop
das
cmp
in
pop
out
ret
fsubrl
lea
cmpsl
in
jne
mov
add
repz
adc
addr16
sbbl
pop
sbb
shll
in
lods
lahf
inc
aad
jno
popa
sbb
fs
mov
das
nop
xchg
shrl
dec
jns
mov
add
mov
xchg
cmpl
add
pop
loopne
dec
sub
inc
loope
movsb
or
aaa
icebp
imul
mov
psllw
and
or
dec
sub
ret
xor
xchg
and
pop
shlb
cmp
xor
lret
ss
bsr
and
cwtl
insb
outsl
push
std
pop
stos
mov
xchg
dec
mov
dec
ret
dec
out
jge
push
or
sti
cmp
pushf
in
int
sbb
mov
out
in
icebp
mov
icebp
out
add
ret
lcall
icebp
mov
inc
in
fs
or
ret
aas
outsb
fsubrl
mov
push
xchg
push
scas
cs
cmc
out
into
mov
push
mov
mov
xor
in
or
pop
out
and
jecxz
lret
sbb
ret
cli
pop
rol
jno
fwait
test
jns
jmp
pop
mov
lods
sub
add
mov
in
test
dec
insb
jl
inc
sbb
test
rol
in
xchg
xor
lea
push
fsubs
push
inc
adc
adc
mov
pop
mov
sbb
xor
movsl
stc
jl
push
mov
in
ficompl
adc
mul
in
adc
xchg
sbb
inc
scas
sub
mov
add
mov
adcl
adc
in
cmp
incb
shufps
jb
pop
jae
adc
in
xor
dec
push
gs
bound
add
lods
outsb
hlt
adc
pop
repnz
jb
inc
add
push
xchg
gs
sub
jnp
arpl
repnz
inc
lea
mov
pop
cld
fwait
mov
out
gs
sub
add
push
test
mov
inc
xchg
add
push
lock
mov
or
fdivrl
jbe
hlt
push
iret
ds
std
outsb
mull
out
lods
cli
loopw
adc
sub
mov
fs
call
pop
repz
cmpb
pop
out
ds
in
insb
xor
hlt
dec
stos
aad
scas
jl
scas
mov
sub
xlat
ret
mov
movsb
jl
sbb
push
adc
lret
mov
fwait
push
stc
sbb
test
in
dec
jp
jp
add
add
xor
mov
fsubl
push
adc
loope
dec
mov
adc
mov
push
int3
pop
lcall
push
inc
mov
mov
and
cmp
repnz
xchg
out
aad
rcl
adc
jl
into
or
xchg
push
out
cld
adc
jg
scas
lahf
fsubl
adc
ja,pt
in
out
lds
mov
jmp
jno
ret
ret
out
pop
or
xorl
js
dec
xor
cltd
push
lahf
dec
fisubl
rorl
movl
fildll
push
cmc
loopne
fwait
push
jne
fisubrs
pop
test
xor
aam
sub
jo
xchg
sbb
push
cld
pushf
adc
mov
test
mov
mov
mov
sbb
mov
sbb
ljmp
scas
cmpb
mov
jge
mov
xor
and
mov
pop
xor
xchg
jmp
and
mov
mov
adc
into
inc
negb
mov
add
lret
loopne
mov
dec
orb
cmp
repnz
in
jmp
mov
pusha
lock
rcrb
pop
pop
dec
je
mov
add
loope
dec
mov
scas
pop
sub
adc
lock
shll
mov
xchg
dec
pop
jae
popa
mov
inc
loope
pop
shrl
and
popf
push
clc
popf
push
xor
xchg
je
cmp
or
xor
jns
jge
inc
mov
push
jge
mov
nop
cli
jne
lret
pop
lods
push
mov
ss
mov
mov
inc
xchg
jle
pop
mov
mov
nop
inc
mov
mov
lcall
or
sbb
adc
mov
enter
icebp
sbb
mov
jp
inc
into
xchg
jb
out
dec
ficoml
mov
push
fwait
lcall
pop
sub
pop
fucompp
or
sahf
mov
adc
js
inc
into
fistpl
pop
dec
jns
pop
push
xchg
sub
pop
push
mov
enter
push
inc
sbb
jmp
fs
andl
mov
dec
sarb
pop
mov
leave
ds
jecxz
jle
jae
sub
mov
mov
mov
sbb
fldcw
cld
call
sbb
rcr
insb
or
jge
lahf
xor
cmc
sub
aaa
lods
add
out
hlt
push
push
xor
mov
xor
rcrb
dec
leave
pop
loopne
cs
jle
mov
sbb
cltd
int
push
pop
in
jnp
aas
test
add
pop
repnz
push
movsb
fs
cld
dec
int
push
lods
xchg
mov
loopne
push
mov
aas
outsb
adc
lret
cmp
test
in
outsb
xorl
sarl
ss
aas
jnp
dec
xor
and
sbb
into
mov
imull
hlt
lahf
inc
push
adc
inc
out
cwtl
cwtl
adc
push
pushf
pop
mov
sti
push
out
cwtl
bound
pop
test
mov
mov
std
add
mov
ljmp
cmp
lret
xor
pop
je
push
xchg
jo
mov
subl
ret
xor
cmp
or
dec
es
push
mov
scas
pop
and
sti
and
pop
dec
stos
mov
jne
add
outsb
mov
xchg
xchg
pop
push
mov
loopne
cli
pop
jmp
in
shll
xchg
daa
shrl
jp
push
xor
es
inc
sub
sbb
pop
jge
bound
stos
jb
mov
dec
js
mov
and
ja
sub
xchg
hlt
pop
cmpsl
mov
xlat
shl
adc
add
cld
lds
into
mov
out
cs
xchg
jecxz
mov
lcall
mov
fiadds
cmp
orl
pop
xlat
rorl
mov
sub
cs
js
or
dec
lret
lds
fs
sub
inc
leave
aas
mov
jl
cmp
int
loopne
aad
jmp
pop
jne
ret
mov
adc
cmc
xchg
dec
and
imul
xor
jmp
jle
mov
mov
mov
aad
or
movsl
cmp
lcall
ds
jne
push
data16
das
rcrb
cmp
les
cli
mov
cmpsl
mov
add
and
sub
xchg
loop
cs
outsl
loop
xchg
cmpsb
cmp
out
adc
in
push
sti
mov
mov
rcll
aam
inc
inc
add
fisubrl
xchg
sti
xchg
out
idivb
rcrb
push
push
hlt
fmuls
lods
loopne
adc
pop
dec
xor
pop
pop
out
dec
xchg
outsl
mov
das
and
ds
lock
mov
stos
das
mov
push
sbb
sbb
dec
imul
inc
pop
inc
fucom
push
ja
std
lock
bound
testl
lods
mov
jo
xchg
sub
mov
xchg
mov
xor
cmpb
ja
fsubrp
jae
es
cmp
xchg
add
add
leave
adc
rcrb
shlb
or
fmull
mov
push
sbb
out
push
cs
pop
mov
stc
add
or
add
popf
repz
popa
push
push
xor
pop
rorb
xor
pop
jo
ret
outsl
mov
pop
into
jecxz
clc
aaa
mov
sbb
and
pusha
push
add
mov
push
adc
fs
lds
loopne
test
push
hlt
dec
jmp
dec
mov
outsl
les
or
scas
bound
ret
xchg
jmp
dec
ret
and
xchg
aam
in
sarb
inc
in
bound
dec
xchg
xchg
xchg
rorl
mov
xor
pop
fstl
cli
jp
mov
movsb
test
pop
xlat
stos
out
ss
in
mov
mov
idivl
add
adc
dec
mov
cmpsb
pop
std
sub
and
inc
xchg
xchg
jo
dec
fldl
pop
sbb
repz
jae
arpl
rcrl
jle
loopne
addr16
jecxz
int3
pop
icebp
cmp
jae
push
push
int
in
loop
jl
mov
aaa
dec
icebp
xor
out
rolb
shll
test
mov
xchg
mov
fisttps
mov
jge
pop
dec
jae
or
xchg
sarb
dec
sbb
shll
pop
add
in
pop
inc
mov
adc
mov
outsl
fildll
push
pop
test
movzwl
dec
icebp
mov
pop
jo
outsb
outsl
cmpsl
mov
dec
mov
clc
mov
ja
cld
push
jno
xchg
addb
push
pop
sbbb
mov
mov
out
pop
lods
in
adc
and
test
mov
xor
cmp
sarb
in
mov
cli
ljmp
push
imul
or
in
mov
ja
pop
push
roll
push
inc
fadds
mov
mov
filds
andb
das
fisubs
call
push
jmp
inc
pop
cli
or
daa
mov
test
jns
shrl
pushf
out
clc
xchg
mov
sub
mov
push
shlb
lahf
sti
push
pop
shlb
mov
into
adc
call
jae
and
push
inc
les
sahf
sti
inc
test
shr
cli
adc
mov
mov
cmc
icebp
jle
pop
out
popa
pop
outsb
jl
cli
xor
sbb
ja
add
mov
mov
inc
sbb
cmp
dec
xchg
sbb
dec
adc
test
loopne
test
movsb
sbb
test
and
sti
add
lea
or
mov
sub
lods
scas
pop
jae
xor
addl
iret
stos
iret
xor
std
xlat
dec
aas
mov
or
daa
sub
or
add
scas
in
clc
outsb
cmp
repnz
add
scas
lock
add
das
push
push
and
jo
mov
and
sub
jecxz
outsl
mov
negb
dec
xor
push
sarb
push
lods
pop
loop
ss
gs
bound
scas
fucomp
mov
setge
jl
jmp
es
inc
sahf
ficoml
push
sbb
or
inc
in
lea
sbb
cli
js
fs
xlat
int3
fsubs
jns
or
mov
iret
jo
movsl
insb
jle
push
and
add
dec
or
inc
pop
inc
pop
jmp
jae
add
dec
repnz
inc
lret
jbe
hlt
and
lret
inc
push
xchg
stc
lret
sti
inc
lret
xchg
sahf
int3
in
lahf
or
scas
xchg
jmp
repz
xchg
ret
dec
pop
inc
aam
cmpsl
in
jns
pop
and
shrl
iret
cmp
ljmp
jno
push
aaa
jbe
fsubrs
mov
aas
insb
push
aas
sbb
sub
leave
xchg
imulb
outsb
int3
call
fldenv
cs
sahf
imul
add
into
sub
shlb
insb
and
in
jno
lcall
lahf
das
dec
imul
cmp
fisubrs
aad
adc
cmp
mov
fcomps
enter
cmp
mov
dec
ret
xor
xchg
mov
call
cvtpi2ps
movsb
inc
pop
dec
rcrl
aad
mov
xor
xor
xchg
scas
jne
stos
ljmp
cmp
push
jnp
ljmp
jp
cmp
add
scas
sub
int
mov
fisubs
rcrb
cmp
sbb
imul
test
mov
std
adc
mov
and
sub
pop
inc
ret
fistpll
shrb
or
xchg
sbb
jmp
rcl
addl
arpl
daa
adc
inc
push
xchg
xchg
inc
maxps
dec
in
rorb
push
pop
or
aam
jp
dec
mov
xor
repnz
imul
cmp
ja
mov
mov
mov
std
dec
hlt
jle
or
icebp
dec
mov
jne
cmp
popa
pop
inc
and
ja
stos
xchg
enter
daa
sub
adc
dec
push
cmp
jbe
pop
mov
call
scas
cli
mov
icebp
popf
cwtl
pushf
test
iret
pushf
subb
mov
lds
cmp
mov
jmp
dec
pop
sti
test
loop
cli
mov
mov
add
call
lcall
push
stc
les
lea
or
xchg
jns
sbb
mov
pop
rcrb
into
push
jne
in
loop
or
aad
cmp
aas
xor
jg
clc
cmpsb
jno
pop
mov
cs
add
out
jp
mov
or
scas
jns
jg
mov
sbb
fildl
int3
addr16
sub
cmpsl
cmp
xchg
outsb
aaa
add
or
test
xor
fcompl
das
mov
ss
insb
clc
stc
xchg
mov
xor
cmp
je
lods
scas
jno
loop
lods
dec
dec
lahf
sahf
inc
dec
aad
addr16
push
in
push
into
dec
cwtl
adc
iret
dec
in
push
pop
hlt
dec
stos
iret
pop
sbbb
inc
push
sub
dec
fs
aad
push
dec
rorl
xchg
mov
test
cmp
ja
movsl
repnz
rcrw
mov
jg
cld
mov
sarl
test
jnp
adc
loope
hlt
leave
sbb
mov
sub
ficoms
or
loop
adc
inc
adc
lret
subl
mov
mov
pop
imul
adc
adc
push
cmp
dec
jno
rcrb
ds
push
fwait
pop
dec
inc
mov
outsl
xor
mov
movsb
push
dec
sahf
aam
cmp
inc
sti
fwait
imul
insb
fsubrl
rcrb
pop
dec
dec
jg
out
and
negl
mov
dec
sbb
cmc
cltd
jo
out
hlt
scas
test
mov
pop
jl
mov
cld
stos
add
sub
imul
adc
mov
adc
fwait
push
sbb
push
mov
das
pop
add
test
adc
out
push
sarb
aam
pop
mov
add
xchg
bnd
fildll
enter
jp
ljmp
mov
stc
nop
jge
sbbl
and
out
push
mov
xchg
and
lcall
fnstenv
jge
dec
mov
jp
fsts
repz
pop
push
sahf
decb
cmpsb
xchg
cwtl
aad
sub
cs
or
rcr
add
jle
sub
loope
mov
repz
nop
sarb
mov
sbb
xchg
dec
int3
mov
or
pop
test
int
arpl
adcl
aaa
testl
mov
jmp
mov
rcl
push
xor
insw
cmpsb
and
add
repnz
mov
mov
sahf
hlt
mov
mov
mov
cmp
cmp
cltd
rorl
sub
xor
mov
aaa
mov
fstps
jge
sbb
sub
xchg
adc
xchg
repnz
xchg
add
nop
xchg
divl
xchg
pop
scas
mov
shll
outsl
adc
shrl
int
pop
mov
test
fbstp
sbb
call
xchg
ss
jg
sarl
shr
sti
pop
mov
enter
and
out
lea
std
xchg
cwtl
nop
sbb
leave
movsl
pop
xor
sub
es
je
jbe
fwait
scas
dec
aam
mov
mov
jne
mov
fs
ret
ret
pop
call
adc
and
jl
sbbb
ja
cmp
add
test
jo
push
shlb
cmpsl
mov
arpl
shlb
lods
or
add
dec
lcall
mov
sbb
adc
or
add
xchg
orb
lock
mov
mov
dec
mov
fstpt
xor
xor
pop
shlb
mov
das
aas
xchg
das
outsl
push
stos
into
dec
mov
or
pop
xor
sbb
xchg
les
mov
movsb
adc
cmp
ficomps
mov
push
lds
or
and
or
push
rcl
das
popa
xchg
adc
cmp
movsb
sub
dec
push
insb
imul
mov
pop
cmp
ss
clc
test
mov
mov
shlb
xchg
or
cld
cmpsb
add
cmp
xor
stos
neg
inc
sbb
dec
cmc
mov
adc
push
add
in
pop
insl
and
dec
pop
jbe
imul
stos
add
adc
in
jg
adc
cmc
xchg
push
sbbb
ficompl
stos
jle
jmp
pop
inc
pop
insb
sbb
cmp
mov
add
jl
adc
pop
incb
adc
pop
dec
xor
inc
cmpl
stc
dec
out
jle
aad
pop
dec
movsl
iret
je
inc
jb
and
loop
adc
pop
inc
leave
stos
pop
je
jge
xor
add
faddl
push
mov
icebp
jne
push
lret
stc
or
or
mov
sub
aad
mov
mov
sarb
ret
push
mov
xchg
xchg
sub
in
das
inc
scas
xor
enter
sub
xchg
or
mov
jl
rclb
je
adc
jno
add
push
jbe
rcl
fists
dec
sbb
icebp
test
cmc
out
fbld
inc
sti
and
add
std
fwait
xorb
cld
dec
xchg
test
push
add
jge
xchg
mov
pop
scas
jno
mov
ret
jae
lock
add
stos
xor
or
xor
test
ds
outsl
fdivr
mov
xchg
dec
adc
cli
shll
mov
sbb
or
push
aad
sti
dec
mov
rolb
adc
and
ret
aaa
jmp
jno
inc
lea
sbb
push
xorl
mov
push
stos
jne
lock
addr16
mov
inc
mov
insb
pusha
xchg
test
test
mov
push
lods
pop
sbb
data16
pop
mov
cmc
mov
push
mov
xchg
cli
lcall
xor
add
lahf
push
es
sub
mov
int
cmp
mov
and
js
pop
call
pop
cs
cld
sahf
pop
xor
lods
mov
mov
jbe
add
adc
ds
xor
shl
add
push
shll
arpl
sti
adcl
push
pop
add
ret
push
pop
mov
bound
enter
mov
mov
sbb
sahf
lds
enter
mov
inc
cmp
fidivs
shl
outsb
repz
scas
rorb
push
stos
aaa
ret
sahf
or
push
add
dec
cmp
loopne
lods
cmpsb
sbb
clc
xchg
jg
js
shlb
cmpsb
cmp
pop
loopne
sbb
ficoms
outsb
cmp
cmp
mov
orb
rcll
icebp
pushf
movb
lret
aaa
sub
cmpsb
adc
int3
sub
pop
mov
xor
imul
push
lds
ja
stos
mov
xchg
stos
cmp
adc
dec
lock
and
jl
pop
xchg
push
add
push
rolb
ds
ljmp
stos
cvtps2pi
xchg
inc
adc
aad
pop
sub
punpckhwd
lods
cmp
outsl
and
jo
jb
mov
xchg
cs
mov
push
imul
test
icebp
aas
cmp
adc
xchg
pop
mov
int3
inc
icebp
test
movsb
push
adc
mov
adc
or
les
ljmp
lahf
dec
jae
mov
pop
xor
dec
push
fbstp
in
cmp
into
fcoms
and
imull
cs
ja
dec
xchg
or
adc
inc
and
xor
cmp
pop
lea
xlat
add
pop
ret
mov
pushf
aam
inc
cmp
sub
psubd
pop
mov
pop
lock
and
push
mov
adc
sub
cltd
mov
xor
lods
sbb
inc
cmp
lahf
jnp
out
loopne
pusha
fidivs
movsl
mov
mov
fmul
lods
test
pop
fucomi
enter
adc
addr16
adc
fisttpl
mov
sbb
sbb
and
aas
sbb
mov
pop
mov
enter
aad
imul
cmp
jnp
addb
add
popa
push
dec
lcall
mov
mov
lret
mov
xor
inc
or
pop
stos
xor
test
call
es
xlat
lret
leave
cs
adc
enter
inc
daa
out
nop
mov
mov
rol
clc
and
xchg
jecxz
in
push
outsl
pop
out
jb
mov
or
cmp
repz
or
call
loopne
push
xor
inc
mov
shrb
fwait
dec
push
lret
cld
inc
fildll
inc
rorl
into
ljmp
lock
insb
int3
xchg
jbe
out
jbe
xchg
pop
das
stc
repz
stos
mov
sbbb
and
xor
mov
sti
lcall
mov
cmp
pop
mov
cld
sbb
xor
test
out
inc
xchg
in
adc
arpl
and
sti
push
sub
jge
sub
cmp
fs
sbb
fiaddl
cmp
and
mov
mov
inc
adc
enter
sbb
test
jl
push
vpunpckhqdq
push
rep
lcall
and
xor
scas
or
pusha
test
add
stos
loopne
cmpsb
bound
and
jae
push
call
repnz
inc
push
jnp
fmull
mov
push
sbb
cwtl
dec
cmc
mov
mov
scas
jge
sub
gs
mov
es
sub
mov
lock
mov
mov
mov
sub
lcall
dec
test
mov
push
jl
lret
add
inc
or
push
sub
bound
repnz
and
push
mov
out
or
dec
jle
lahf
lahf
adc
mov
addr16
movsb
pop
sbb
inc
out
repz
fwait
jns
jl
sub
mov
test
test
mov
add
popa
mov
addr16
mov
jmp
ljmp
repz
pop
ficoml
stos
fstpt
pop
loopne
lret
loop
into
add
popf
mov
xchg
cltd
mov
test
cmpsl
cmpb
ds
scas
clc
fstps
adc
pop
repnz
sbb
lahf
dec
push
add
jecxz
push
or
jns
sbb
inc
xchg
mov
lret
shlb
xchg
enter
add
ficompl
cltd
xchg
or
insb
arpl
mov
sbb
jecxz
enter
in
jmp
int3
insb
push
and
adcl
out
outsl
jo
lret
fcompl
mov
pshufw
add
dec
bound
add
sub
mov
outsb
andl
loop
push
sub
lods
push
push
dec
dec
out
mov
stc
sub
mov
push
shrl
faddp
push
imul
not
xchg
mov
add
mulb
sub
lahf
stc
or
gs
clc
outsb
jns
inc
push
dec
fucomp
sarb
add
sbb
insl
cmpsb
pop
push
xor
dec
iret
loope
aad
jns
movsb
pop
lds
dec
pop
aad
fs
jbe
rcrl
or
insb
outsb
inc
xor
cmp
leave
stc
scas
adc
loope
fwait
test
shr
nop
inc
je
push
das
adc
mov
cmp
sbbb
out
inc
gs
and
aad
orb
or
dec
cltd
dec
pushf
cltd
jg
push
or
jno
fisubl
mov
xchg
lret
sub
lcall
or
xor
btc
repz
loop
mov
xlat
push
pop
std
xor
inc
in
sub
mov
xor
in
mov
xor
aas
mov
jnp
xorl
int
aam
dec
dec
and
push
jge
movsl
fsub
clc
or
push
or
dec
rcl
mov
mov
push
or
mov
or
dec
inc
inc
cmc
shr
iret
xchg
andb
cwtl
addr16
sti
jl
addr16
loopne
clc
lcall
aas
loop
subb
sub
ucomiss
inc
cmp
pop
fwait
mov
pop
fiadds
cmp
adc
pop
jle
es
sub
mov
xchg
pop
xor
leave
inc
and
dec
and
or
outsb
cmpsb
mul
mov
loope
int3
fsub
push
fwait
loope
cmc
inc
mov
push
dec
data16
fisttpl
pop
push
ljmp
ja
loope
jle
out
cmp
lret
pop
add
cld
mov
pop
gs
jbe
add
sbb
xchg
dec
fdivs
adc
out
adc
int
orl
or
dec
aam
fucomi
mov
mov
add
popa
jo
dec
sub
shrl
xchg
sub
fcmovu
int
hlt
lds
adc
je
repnz
ja
cmpsb
leave
arpl
cltd
and
mov
daa
inc
bound
out
pop
cmp
outsl
daa
pop
pop
mov
iret
sub
pop
xchg
inc
arpl
sarl
push
cmpsl
inc
and
lds
and
cld
stc
add
jmp
xchg
jecxz
lods
cmp
jge
mov
bound
fidivl
cmp
adc
xchg
inc
and
cmp
repz
movsb
call
cmp
xchg
aas
dec
or
jle
dec
dec
dec
jl
mov
pop
int
mov
lods
mov
into
cmp
xchg
pop
ret
scas
xor
inc
cmp
stos
ja
dec
inc
insb
mov
faddl
addb
insb
enter
xor
std
in
data16
cmp
sub
fs
int3
gs
jb
out
lret
mov
call
scas
std
popa
stos
adc
cmp
fstp
sti
ret
sbb
mov
in
push
es
xor
movsb
xorl
xchg
mov
pushf
sbb
push
sahf
addr16
xlat
xchg
lcall
fcoml
out
movsb
xor
fdivrl
enter
cld
push
lea
cmp
mov
insl
scas
jns
push
in
adc
sub
dec
icebp
mov
in
mov
inc
arpl
insb
xor
ret
call
mov
pop
movsb
sub
nop
push
or
xchg
dec
mov
lcall
insl
int3
int
xchg
xchg
xchg
ret
mov
pop
fsubl
pop
repz
and
outsb
xor
adc
fsubs
jecxz
test
std
int
addr16
inc
les
sub
das
xlat
lret
je
and
cmpsb
lds
ja
repnz
scas
xor
mov
rorb
in
outsl
dec
sti
inc
int
mov
outsl
outsb
mov
lret
imul
fwait
daa
test
sub
int
rclb
mov
add
add
mov
mov
sahf
insb
frstor
mov
shl
gs
sbb
sub
xor
adc
loope
repnz
ret
pop
sti
cmp
sub
mov
pop
dec
lds
sub
push
jl
std
push
xchg
sahf
out
or
pop
jg
fwait
aas
push
jno
lods
push
sub
aad
mov
adc
sub
push
fs
das
jl
fcmovnu
mov
dec
pop
pop
cli
aas
icebp
stos
jp
roll
sbb
movsb
pusha
bound
rcrb
dec
roll
test
mov
push
pmulhuw
outsb
xor
pop
fs
hlt
sbb
adc
adc
cmp
ljmp
push
mov
lret
data16
and
cli
data16
xor
mov
shrl
adc
mov
lret
cmpsl
xchg
clc
sub
jecxz
mov
sub
outsl
cli
arpl
add
cmp
jp
xchg
add
out
in
imul
out
mov
ljmp
pusha
mov
ss
inc
ret
xchg
push
cmpsb
cmpsl
loop
hlt
jns
aaa
add
inc
jl
inc
inc
mov
sub
sti
dec
push
lods
cmpsb
sbb
cmp
cmp
out
inc
test
fadds
nop
add
ror
sub
inc
sbb
ret
mov
pushl
cmpsl
movd
lds
xor
jecxz
push
addr16
jl
and
dec
push
sbb
iret
ret
adc
cmpsl
sbb
push
or
nop
mov
mov
push
and
arpl
dec
push
mov
cwtl
xor
inc
sub
mov
enter
cwtl
cmp
add
notl
inc
inc
xor
mov
aas
dec
jns
inc
cs
shll
sub
callw
mov
mov
jp
cmp
icebp
daa
cmc
sub
cli
cmpsl
jp
jg
inc
add
outsb
cmpsb
cmp
xlat
and
dec
popa
xchg
pushf
mov
fcomps
test
xor
adc
add
dec
sbb
xchg
cltd
cmp
cmp
loopne
adc
cmpsl
xchg
sahf
inc
mov
arpl
fwait
clc
xlat
or
outsl
stos
jl
scas
repz
mov
movsl
jg
dec
dec
add
lret
push
test
fsts
xchg
pop
sarb
insb
notl
insl
push
adc
jge
insb
imul
out
mov
inc
push
jmp
xor
dec
js
loopne
or
xor
pop
pusha
push
cmpl
adcl
mov
push
testb
push
xor
fsubrp
es
and
cmp
pop
jb
push
inc
lock
or
push
fs
test
in
aad
loope
fs
push
mov
jbe
mov
addl
fnstsw
xchg
xor
push
push
enter
cmp
std
les
ret
jecxz
clc
mov
int
nop
adc
test
lret
ljmp
lock
mov
jp
cmp
sbb
dec
int3
sub
push
inc
gs
popf
cmc
jge
mov
stos
jbe
jle
mov
outsb
dec
lret
mov
clc
fsubl
fs
int
sbb
insl
test
jge
inc
arpl
jbe
jmp
pop
std
mov
xor
push
adc
out
xlat
in
mov
out
adc
mov
xchg
mov
inc
xchg
jge
loopne
fsubrs
scas
push
test
in
adc
xchg
rcrl
add
push
push
scas
and
jecxz
inc
cmpsb
pop
cltd
mov
jae
or
add
int
and
aaa
jg
push
jne
popf
xorb
and
dec
or
sbb
aad
add
pop
pop
jbe
in
xchg
push
jb
sbb
sbb
out
les
cmp
push
rcll
out
xchg
mov
adc
pop
and
inc
cmpsl
push
adc
jmp
mov
inc
mov
mov
or
push
ficoms
mov
dec
push
orb
dec
rolb
dec
and
mov
mov
mov
lret
mov
jge
sbb
rclb
mov
mov
ljmp
inc
cmp
dec
or
cmc
pop
inc
ljmp
sub
js
pop
jge
in
fnstsw
xor
stc
les
call
fucomip
xor
movsl
jg
dec
cmp
into
stos
dec
and
daa
mov
sub
popa
inc
aaa
idiv
xor
xchg
cmp
mov
lret
and
lods
loop
scas
sbb
enter
test
mov
mov
xor
aaa
movsb
or
rcrb
ja
mov
movsl
ja
dec
add
adc
gs
dec
push
mov
cmp
dec
cmp
fistpll
bnd
xor
add
arpl
int3
sub
je
and
jo
mov
mov
add
push
fadds
sub
dec
arpl
xchg
sbb
cmp
insb
fimuls
insb
or
jle
pop
push
xor
dec
cmc
push
icebp
icebp
jg
aas
shll
add
rcrl
adc
add
mov
jl
cmp
pop
lds
jbe
in
jl
ds
pop
bound
pop
outsb
xchg
mov
pop
cs
je
shlb
pop
and
pushf
inc
inc
ss
pop
or
jnp
mov
imul
enter
leave
xorb
js
pop
test
sub
dec
test
std
inc
adc
sub
loop
stos
popa
data16
sbb
or
std
mov
inc
xchg
loop
sub
pop
lock
mov
imul
fwait
mov
out
ja
push
addr16
fwait
test
mulw
and
pusha
repnz
xor
xchg
loop
xchg
fs
dec
movsb
fnsave
jge
ret
inc
sar
lds
xor
jb
cmpsl
in
aas
dec
jo
and
ret
inc
aas
push
inc
repz
out
mov
mov
push
loop
les
lods
sub
imul
cld
and
das
sub
mov
ljmp
in
push
mov
pop
lret
push
insl
pextrw
jo
je
jecxz
adc
push
mov
add
aas
mov
pop
clc
or
popf
movsb
call
xchg
inc
dec
xchg
sub
fldt
fistps
fbstp
cmp
add
mov
sbb
sarl
pop
sbb
sbb
push
mov
arpl
or
push
xor
sahf
mov
xchg
mov
cmpsb
inc
mov
add
add
sbb
or
push
outsl
loope
push
push
xchg
out
in
lahf
or
sbb
addr16
fwait
lret
out
inc
shll
shlb
je
inc
xchg
pop
push
cmc
in
pop
mov
aaa
scas
push
cwtl
sbb
lods
repnz
push
xlat
daa
mov
repz
push
xchg
out
icebp
push
lcall
lods
arpl
test
push
lock
pop
shlb
repnz
iret
pop
aad
aaa
clc
mov
push
roll
xchg
mov
rolb
nop
sar
js
push
in
and
aad
cmp
pop
mov
lods
fsubrs
push
jle
lret
jnp
xor
scas
add
or
test
ds
jp
in
push
je
sub
mov
mov
or
adc
lock
insb
pusha
scas
mov
add
cmpl
pop
push
lahf
fisttpll
call
cltd
insl
lds
aad
sbb
adc
fisttpll
mov
cmpsb
imul
inc
push
mov
ja
fisubrl
inc
mov
or
fisubs
dec
ret
inc
inc
xor
push
xchg
sarl
add
mov
arpl
dec
inc
scas
dec
add
fcmovu
inc
sub
shll
lret
add
lahf
cmpsl
jg
addb
mov
pcmpgtw
push
cmp
push
je
cltd
or
insb
ja
mov
jecxz
mov
aas
dec
out
lods
jl
ja
xor
xor
add
lret
push
pop
or
shll
xor
fs
in
ret
cmpsb
and
add
mov
inc
insl
mov
js
fcoml
jmp
sbb
aad
test
xor
cmp
xchg
jl
xlat
shlb
int
int3
not
mov
arpl
mov
mov
ret
push
std
xchg
jmp
gs
inc
cmp
pop
imul
js
adc
dec
inc
mov
bound
push
negb
dec
adc
and
arpl
les
or
cli
xchg
sub
add
xchg
call
bound
ret
sub
in
and
push
fbld
ds
rcl
and
rcll
xor
dec
movsl
fiaddl
jle
inc
xor
mov
xchg
or
insl
enter
aaa
dec
es
cmp
add
add
mov
aas
sbb
jp
mov
pop
adc
xor
jle,pt
shlb
sti
ret
fidivl
mov
lds
and
push
dec
inc
xchg
or
or
js
sbb
call
push
cmp
aas
jae
mov
addb
mov
cmp
mov
xchg
hlt
aam
mov
pusha
hlt
push
movl
ret
pop
not
ss
int3
lahf
xchg
sbbb
faddl
aad
roll
mov
enter
mov
or
dec
icebp
lods
je
push
jnp
fnstsw
leave
dec
stc
and
movsl
sbb
pop
xchg
out
fs
push
jecxz
cmp
jg
pop
pop
icebp
add
je
xor
pushf
jnp
cmp
lods
in
enter
mov
xchg
xchg
push
or
inc
adc
pushf
jl
cmp
sbb
adc
popf
pop
lret
outsb
test
inc
dec
imul
xchg
out
subb
popl
movsb
xor
cmp
shll
jnp
sub
outsl
pop
ffreep
stos
pop
cmp
jle
insl
fsubrs
ljmp
cmp
orl
mov
rcrl
pop
pop
xchg
outsl
sub
pop
pusha
aaa
das
adc
pop
adc
std
or
or
sbb
jo
and
iret
sbb
xchg
xor
bound
inc
jp
push
xor
push
in
int3
test
cs
jo
out
ret
jle
fistpll
call
js
or
fldenv
add
stos
xlat
xchg
sub
repz
xor
stos
cmp
xchg
cmpsl
xor
add
pop
sahf
jl
in
sbb
xor
xchg
or
fsub
jle
push
add
jno
mov
dec
icebp
mov
jo
sub
js
movsb
add
icebp
mov
xor
sbb
jge
dec
das
pop
and
sbb
cltd
cmp
cmp
sub
pop
fildll
or
ret
cmp
inc
sbb
aad
mov
and
cmp
mov
test
popl
cli
sar
ret
mov
in
fildll
push
sbb
loope
jg
xor
inc
std
in
fstps
ret
test
sub
cmp
lods
jmp
push
roll
aaa
dec
mov
fdivl
add
lret
sbb
sbb
cltd
or
ror
shlb
cmp
pop
daa
leave
and
mov
cmp
inc
mov
ja
push
notl
bound
adc
push
imul
cwtl
and
or
loope
loopne
call
pop
cs
xlat
pop
xchg
pusha
and
inc
les
sub
add
int3
lahf
lods
jecxz
test
in
sysret
repz
xchg
dec
popa
cs
inc
inc
or
jne
jmp
inc
sbb
inc
push
in
pop
lcall
cmpsb
xor
or
pop
sub
xor
jge
push
cmp
movsb
ljmp
sub
mov
sub
je
aad
lcall
scas
inc
clc
jle
icebp
add
cwtl
push
lcall
push
cmp
fmul
lahf
andl
test
mov
mov
hlt
out
cwtl
out
fcmovnbe
test
push
jmp
stos
stos
lret
xor
fbstp
insl
ljmp
fs
xor
mov
pushf
jg
cmp
loope
cmp
lock
in
pop
xor
mov
mov
scas
into
jne
push
inc
int
es
fadds
fisubl
mov
mov
jne
decl
shrl
leave
out
mov
xchg
inc
cwtl
imul
out
push
fdivrs
pop
fdivrp
imul
push
call
flds
jno
ret
sahf
adc
popa
pop
pushf
jp
xchg
das
std
push
mov
push
sub
pop
in
inc
and
popf
sti
or
std
sbb
adc
mov
cmc
hlt
push
mov
cmpb
mov
sub
dec
jl
hlt
scas
push
and
in
fistl
cmp
push
daa
inc
popf
mov
sbb
push
psadbw
into
push
popa
pop
repz
cmp
inc
xchg
inc
lods
in
dec
addr16
mov
ss
pusha
or
cmpsl
inc
pop
push
lock
mov
loope
test
addr16
pop
out
pop
aas
les
pop
mov
faddl
lret
dec
out
popf
mov
lret
loope
sub
pushf
popf
dec
into
jl
mov
adc
inc
push
push
mov
outsl
or
push
ds
repnz
jg
movsw
lret
fndisi(8087
cmpsl
or
mov
xor
repz
test
aaa
fnstenv
stos
adc
inc
nop
add
sahf
pmaxub
add
push
je
and
mov
repnz
inc
call
iret
xorl
mov
rcrl
shlb
sahf
jmp
jbe
les
je
or
pop
dec
push
ds
out
lahf
ficomps
shlb
inc
outsb
std
daa
jmp
and
inc
jne
push
addl
mov
mov
sti
and
adc
fiadds
jnp
test
mov
jno
test
pop
sbb
dec
push
repnz
xor
xchg
aad
mov
inc
notl
xor
xor
out
jge
pop
sub
jl
push
or
sbb
cmp
xor
cmpsb
add
mov
pop
dec
xchg
cmpsl
xor
inc
addb
push
mov
lods
rolb
les
xor
cwtl
loop
sbb
xchg
mov
mov
insl
mov
aas
sbb
testl
test
push
push
mov
adc
jb
movb
mov
sbb
out
jnp
fstpt
mov
lret
mov
cs
je
lret
out
xchg
cmpsb
orb
pop
lea
mov
pop
aaa
inc
jmp
loope
movsl
ficoml
cmp
add
add
sahf
xchg
dec
stos
dec
ss
cld
jge
in
xchg
pushf
xor
pop
jno
push
popf
mov
mov
jbe
or
inc
dec
push
ja
sbb
sbb
int
das
pop
inc
push
adc
inc
popa
cwtl
mov
cltd
in
pop
xchg
pop
pop
in
xlat
mov
fcomip
je
push
scas
sti
xor
dec
sub
xchg
in
inc
mov
and
jge
rolb
mov
popf
bound
push
in
adc
mov
dec
or
bound
mov
or
sarb
jns
lods
lds
push
mov
fimull
loopne
test
and
sti
mov
mov
jne
mov
xor
inc
arpl
fwait
movsb
icebp
mov
fwait
pop
pop
mov
xchg
push
lods
int
mov
lret
scas
xor
lret
mov
mov
pop
movsb
rclb
pop
or
inc
faddl
xchg
out
push
xchg
mov
xchg
pop
out
insl
fcoms
mov
insb
incl
sahf
mov
mov
lds
icebp
push
jmp
xor
les
sbb
or
out
dec
lret
jbe
lods
jmp
lods
lock
mov
inc
mov
loop
mov
cmp
outsb
push
jae
call
add
lahf
xchg
das
loope
add
mov
xor
xchg
sbb
imul
add
cmp
pop
in
jl
rorb
in
xchg
jnp
clc
sub
repz
adc
sti
sub
jp
arpl
mov
data16
stos
shlb
mov
iret
add
test
out
gs
cmpsl
push
pusha
xor
push
outsb
add
add
mov
sarb
mov
xor
pop
ja
push
mov
pop
dec
addb
jns
mov
push
std
aas
xchg
xor
jns
xchg
repz
sub
test
inc
sbb
lcall
mov
dec
pop
inc
cltd
in
inc
lock
shll
push
sub
cld
pop
adc
mov
shll
iret
xor
and
and
les
pop
inc
int3
jp
jo
sub
xchg
and
rcrb
enter
pop
jmp
shrl
fs
jmp
lret
popa
and
testl
into
fldl
sbb
push
pop
cmp
inc
jno
insl
sti
pusha
cmp
popa
pop
xor
cltd
cs
inc
test
addr16
daa
sub
bound
cmp
das
jl
add
add
jle
call
les
jb
adc
movsb
das
inc
xchg
push
addr16
add
push
fnsave
jmp
inc
sub
dec
outsb
push
jmp
dec
fisubrs
leave
enter
imul
movsl
adc
xchg
and
cmp
pop
jmp
orb
adc
pop
xor
sti
movsl
mov
rclb
and
mov
push
mov
in
cwtl
jle
or
and
test
push
push
dec
pop
inc
mov
push
addr16
sbb
shlb
and
xorb
add
pushl
gs
and
loop
lcall
xchg
sahf
xchg
js
sub
mul
add
nop
xchg
pop
xchg
stc
add
ds
dec
jge
xor
cmp
shlb
push
pop
in
dec
pushf
dec
test
pusha
xchg
outsb
in
mov
cld
cmp
mov
std
inc
icebp
les
movsb
mov
sub
mov
es
sbb
in
mul
mov
repz
sbb
mov
pop
sub
and
push
jns
and
pop
lea
insb
xor
sub
mov
in
jns
icebp
scas
pop
jb
pop
add
int
pop
mov
ud0
push
add
push
loopne
add
test
xchg
sub
sbbl
mov
lods
popa
pop
pushf
mov
aaa
insl
pop
xchg
test
or
inc
imul
ror
scas
hlt
stos
mov
jle
sbb
dec
in
push
inc
adc
mov
mov
arpl
adc
jecxz
push
xor
dec
mov
xlat
test
jo
dec
cwtl
sbb
pop
mov
xchg
fsubrl
les
outsb
shl
pop
xchg
sub
inc
mov
push
movsl
push
ds
mov
cmp
in
xlat
xor
push
ficomps
pop
pop
out
fnstsw
cmp
xor
jae
cmp
jae
cli
lahf
xor
sbb
jecxz
mov
rcr
mov
sbbl
jbe
and
xor
popf
out
sbb
jb
mov
arpl
mov
cmc
add
push
add
fnstenv
sub
pop
push
call
dec
cwtl
pushf
push
cmp
pop
fucomip
imul
dec
mov
mov
or
mov
bound
adc
pop
cmp
mov
dec
imul
mov
lods
xor
test
xor
js
in
adc
push
test
add
sbb
fs
xor
or
dec
cmpsb
imul
and
and
xchg
adc
pop
sub
sub
popf
movsl
loopne
jle
sbb
or
adc
inc
and
sar
xchg
or
mov
hlt
sub
add
add
aaa
lods
out
adc
orb
dec
popf
or
inc
and
xorl
add
movsl
cld
movsl
mov
sub
faddl
int3
scas
sub
dec
push
subl
lock
ss
jb
add
or
in
jne
mov
ja
mov
mov
fs
cmpsb
loope
add
xor
jbe
or
les
cmpsb
sbb
lods
xchg
out
jbe
dec
or
inc
pop
movsb
and
and
cld
cmp
inc
dec
cmp
sarb
lret
push
fdivrl
test
jle
dec
loope
in
aaa
je
jmp
jbe
inc
in
repz
lock
aaa
add
pusha
jno
and
out
mov
in
mov
or
in
cmp
sbb
push
data16
lods
sti
and
in
mov
dec
push
mov
scas
dec
xor
mov
jbe
adc
fcompl
in
inc
sarb
xchg
lret
add
cli
ficomps
xchg
cmp
aam
cltd
xlat
add
dec
add
popf
lret
xchg
mov
dec
fsubrl
xor
adc
pushf
dec
push
pop
mov
les
adc
mov
or
dec
mov
pop
pop
test
jmp
arpl
pop
dec
mov
push
setp
test
xchg
lea
add
inc
dec
add
add
mov
adc
or
mov
repnz
xchg
inc
mov
xor
fldt
push
push
mov
das
std
js
cmp
shll
sti
jae
popa
add
enter
mov
incb
in
pop
in
jl
fcomi
cmp
xor
divb
cmpsb
clc
in
shll
mov
push
out
hlt
jecxz
jp
pop
xor
lret
fiadds
mov
cmp
cmpb
jb
imul
jl
les
sarl
dec
xor
pop
stos
pop
cwtl
dec
stos
sub
dec
and
pop
test
ljmp
sbb
std
arpl
dec
int
and
test
cmp
repz
cmpsl
sub
cwtl
mov
mov
loopne
mov
shll
jns
xchg
jnp
or
mov
dec
or
inc
xor
andl
fisttpll
jge
outsl
sbb
int
stos
jne
sbb
sti
jle
pop
sti
add
inc
cmpb
insb
add
xorb
mov
hlt
lret
out
incb
cmp
sbb
lock
xor
xchg
mov
shlb
movsb
popf
sti
into
in
lods
inc
dec
test
mov
push
loop
jle
inc
pop
das
xor
pop
dec
jne
jb
cmpsb
or
inc
lods
sbb
sub
lods
mov
pop
daa
mov
mov
jp
int3
std
adc
test
mov
adc
outsl
repz
divb
jp
stos
fwait
and
mov
imul
and
lcall
mov
ret
ja
jp
lods
inc
pop
scas
sub
and
dec
and
mov
and
pusha
jmp
sahf
pushf
in
mov
mov
loope
mov
xlat
cli
popa
xchg
add
jl
inc
call
addl
cs
jl
cwtl
out
push
xchg
push
xchg
popf
imul
push
das
or
aad
jecxz
jne
ret
lret
daa
pop
lea
xchg
push
xchg
imul
adc
sbb
aad
aam
and
or
xor
mov
and
inc
ja
cmp
ljmp
xchg
xchg
push
int
outsl
adc
jnp
cmp
cmp
cmp
les
mov
pop
stc
cmp
xchg
outsb
xchg
sub
xchg
mov
and
pop
sub
sub
repz
inc
es
out
adc
pop
mov
push
sbb
jne
in
ja
cmp
and
pop
out
ss
dec
push
push
push
js
jo
push
cmpsb
add
jl
aam
call
xor
popf
scas
or
xlat
push
rol
arpl
test
adc
xchg
or
sarl
jmp
mov
or
adc
lret
enter
inc
sahf
lret
xchg
out
and
stc
repz
bound
hlt
gs
out
inc
push
repnz
lcall
out
mov
xor
push
mov
cmp
jo
or
in
loope
ds
xor
mull
in
mov
stos
je
out
pop
test
mov
test
mov
addb
dec
adc
loop
adc
data16
sub
xor
and
aad
xor
stos
dec
fidivs
out
ficomps
pop
adc
cmp
fists
xchg
and
push
daa
inc
xchg
mov
gs
popa
and
dec
loop
cld
inc
cli
xlat
add
cmp
mov
mov
pusha
mov
fucomi
mov
fcomps
out
mov
in
out
mov
out
fisubrl
cmpsb
inc
inc
andb
and
and
test
int
pushf
dec
addl
rol
and
jp
mov
mov
mov
sarl
ds
fiaddl
mov
push
mov
adc
jge
in
xor
ja
jb
jle
sarb
call
std
xor
lds
std
movl
sub
daa
xor
int
push
sbb
push
xlat
das
push
hlt
outsb
cmp
push
lea
xor
push
dec
cmp
pop
movsl
push
in
inc
fcomps
iret
cmpsb
imul
out
dec
mov
int3
out
jecxz
daa
imul
in
push
xchg
rclb
add
cmp
pop
nop
hlt
data16
and
nop
repz
inc
dec
out
or
mov
into
push
in
sti
fidivrl
ficompl
repnz
dec
pop
popa
dec
or
int
sub
rolb
push
stos
or
jg
dec
out
sub
sbb
mov
ja
icebp
add
inc
das
or
xchg
fdivrl
test
push
xchg
sbb
xchg
in
add
or
pushl
push
mov
or
pop
mov
xor
mov
lret
sub
pop
jge
adc
or
mov
mov
xchg
xchg
push
sbb
add
or
adc
outsl
aad
jmp
adc
pushf
mov
bound
fdivl
pop
adc
jb
sarl
cvtpi2ps
mov
jp
fbld
mov
das
mov
mov
xchg
sti
movsb
int
inc
cmp
sbb
int3
mov
fildl
adcl
hlt
jno
xchg
sarl
lods
hlt
and
push
loop
pop
scas
jns
push
and
jbe
and
xchg
leave
add
mov
aam
scas
mov
jb
mov
cmc
dec
in
pop
nop
sbb
sarb
mov
or
andb
add
hlt
in
mov
mov
sbb
xor
adc
fisubs
add
pop
cltd
mov
pusha
push
imul
sbb
arpl
dec
lods
xchg
hlt
mov
scas
sarl
adc
stos
cmp
test
xor
scas
xchg
rorb
bound
dec
lds
test
lock
std
and
xor
mov
adc
mov
xor
mov
and
jbe
test
lret
inc
pop
xchg
inc
outsl
movsl
jae
adc
cmp
mov
xlat
and
cmp
pusha
pop
mov
add
jns
pop
jge
clts
pop
leave
mov
iret
mov
mov
lock
popf
popf
mov
clc
dec
out
push
outsb
mov
mov
filds
mov
fisttpll
xor
shrl
loop
das
xor
xchg
int
mov
mov
int
dec
addr16
jb
stc
sbb
decb
jne
imul
xchg
cmp
lret
jmp
cltd
imul
es
insb
jl
push
test
sbb
push
inc
ja
sub
lret
out
xor
scas
ljmp
xorl
xor
mov
adc
inc
lret
xchg
push
test
lock
add
cmp
insb
xchg
mov
mov
pusha
out
aad
pop
scas
adc
xor
jmp
les
sub
fstpt
ror
jp
lgdtl
cmp
pop
xchg
mov
push
dec
pop
mov
aad
cli
lods
mov
ret
out
movsb
imul
cs
mov
scas
outsl
push
jns,pt
js
sub
test
into
jp
cltd
sti
rol
push
cmp
and
loop
mov
shrl
test
or
mov
jo
fildll
mov
ds
cmp
mov
mov
push
inc
sarb
jmp
or
or
mov
push
fs
lcall
pushf
lods
adc
aaa
nop
fldt
and
pop
add
ret
cmp
xchg
std
daa
sub
mov
mov
dec
gs
jno
scas
push
jmp
dec
dec
fs
inc
jle
sbb
xor
push
xor
es
push
sbb
mov
sbb
sbb
mov
icebp
popa
add
fadd
mov
inc
sar
jle
sbb
loope
dec
out
xor
gs
and
subl
pushf
popf
fsubl
sub
mov
inc
sub
dec
dec
aam
sti
mov
inc
xor
mov
mov
iret
aas
orl
loopne
cmp
add
incl
shlb
and
jae
subb
mov
hlt
dec
and
pop
cli
mov
ds
jb
addb
test
jle
jbe
mov
and
lock
and
mov
jg
ficoms
outsl
cmpsb
add
push
cmp
cltd
pop
push
adc
and
dec
xchg
hlt
inc
xchg
sbb
jae
xchg
es
call
sbb
cmpsl
js
adc
pop
data16
test
cmpsb
cmp
or
cmp
in
int
cmpsb
mulb
test
faddp
jge
mov
mov
pop
mov
or
pop
jg
adc
xchg
adc
adc
or
xchg
pop
fisttps
cmc
sti
cmp
jo
ljmp
mov
lret
cmp
fcomps
gs
cmp
adc
and
es
popl
fbld
inc
popf
hlt
mov
mov
cltd
mov
lock
adc
cmp
pxor
mov
pop
idiv
pop
or
ds
cltd
push
lret
adc
adc
out
loopne
mov
nop
enter
sub
fnclex
testb
lcall
loopne
mov
sub
arpl
or
pop
out
pop
jg
lcall
or
mov
mov
popf
dec
sbb
adc
hlt
mov
clc
jecxz
aaa
nop
and
sahf
ja
test
mov
fs
mov
or
add
leave
and
xor
ja
cmpsb
dec
loop
rcl
rorl
jae
jns
les
cli
lock
leave
in
pop
sbb
pop
jbe
xchg
push
mov
sbb
adc
mov
icebp
mov
mov
jg
pop
dec
pop
stos
mov
xorl
xor
ret
xchg
in
pusha
fldenv
push
adc
mov
in
dec
jmp
add
dec
pop
cmp
adc
xchg
data16
mov
add
jo
xchg
in
shlb
jbe
pushf
xlat
idivb
nop
jae
dec
adc
inc
in
in
stos
sub
jle
enter
push
adc
xlat
mov
scas
cmp
pop
add
jecxz
inc
pop
cmpl
jne
mov
out
mov
push
sti
adc
cltd
rcrl
ss
fmull
sbb
xorb
int3
orb
cmpsb
pop
sbb
jecxz
fmull
mov
scas
gs
fs
mov
repnz
notb
jmp
fbld
pop
sti
sbb
scas
jo
xchg
sbb
cmp
push
push
push
das
sbb
fwait
jp
fs
push
movsl
jb
sbb
add
mov
sub
jmp
rcl
or
push
fwait
inc
push
and
mov
clc
pop
data16
sub
mov
jp
and
jb
pop
jge
scas
inc
addr16
call
movsl
jne
int3
out
dec
iret
xchg
shll
lret
mov
inc
mov
push
push
add
adc
mov
mov
or
popf
adcl
add
fnstsw
outsb
jmp
jns
fistps
ljmp
mov
icebp
into
or
insl
out
mov
lret
es
addr16
lock
cli
pop
xor
hlt
fnstcw
nop
call
push
inc
js
outsl
cli
jg
and
add
stc
pop
jmp
and
stos
adc
aam
inc
fwait
mov
bound
adc
fcoml
inc
push
sub
pushf
pop
and
and
mov
sbb
scas
add
pop
inc
xor
pop
mov
jns
stc
sbb
push
lods
dec
xor
inc
lret
inc
sub
inc
cmp
aam
mov
rcrl
or
repz
js
sbb
hlt
jp
xor
out
movsl
pop
ud2
movsl
data16
xchg
jae
loopne
out
popa
inc
sahf
sub
and
inc
mov
push
lods
push
or
mov
out
dec
adc
push
jp
data16
jae
mov
imul
dec
sbb
insl
aad
mov
and
faddp
in
or
scas
cmp
sahf
cmp
insb
pop
out
adc
loope
adc
je
dec
es
outsb
sbb
cwtl
xor
mov
shlb
pushf
sub
jmp
or
shr
icebp
pop
fisubrl
jo
mov
sub
std
sbb
aas
sarl
pop
and
jae
insl
xor
mov
add
ret
mov
je
loope
xchg
rcr
testl
out
mov
cwtl
sub
jno
jmp
mov
jo
out
iretw
push
in
lahf
lods
lock
sub
push
fildl
mov
cltd
lods
aad
and
faddl
fidivl
lret
mov
mov
and
sbb
xchg
jl
cmp
xchg
mov
cltd
jne
out
jg
fcoms
inc
jo
sub
lret
cmc
push
stc
jne
push
not
mov
fisttps
add
inc
fcomip
notl
xchg
sub
add
call
inc
orb
sbb
push
jnp
and
lret
pop
push
repnz
or
or
push
outsb
sub
dec
inc
xor
ret
or
dec
aad
pushf
cmp
mov
negl
lea
cwtl
iret
hlt
stos
adc
sub
inc
inc
mov
ret
daa
jb
lahf
push
aad
test
arpl
and
cmp
scas
sub
into
sahf
mov
fisttpll
cli
cmp
fistpl
cmp
push
stos
xchg
inc
repnz
scas
out
ja
rcll
in
mov
jae
sbb
and
pop
xor
xor
pop
inc
jae
stos
inc
repz
cmp
mov
push
inc
xchg
lahf
xor
dec
out
rorl
xchg
jecxz
mov
xchg
iret
movsb
ret
push
orl
lock
jge
out
mov
add
into
cld
fwait
rcrl
cmc
insl
dec
incb
subl
insb
insb
xor
out
adc
fldcw
fs
lods
test
sub
inc
xchg
xchg
or
sbb
dec
push
je
mov
mov
or
xor
mov
pop
divb
roll
divl
mov
insl
outsb
inc
test
mov
fs
out
shl
mov
int3
aam
dec
push
cmpsb
xchg
sti
pop
pop
gs
jb
lret
jp
mov
jnp
hlt
and
dec
push
sbb
cwtl
xchg
adc
xlat
je
cmp
dec
dec
pop
les
push
ss
and
add
call
loop
in
cmp
pop
add
sub
lret
push
test
fcompl
mov
fiadds
sub
jns
pop
push
sub
mov
imul
pusha
outsl
mov
es
or
mov
fstp
pop
and
or
gs
and
xorb
push
adcb
shrb
fdivl
cmp
into
imul
inc
popf
icebp
and
out
mov
cmp
ljmp
imul
test
enter
subb
int3
jmp
repnz
and
xor
adc
push
shll
scas
sbb
lcall
xchg
and
cltd
inc
cs
mov
push
cli
dec
test
dec
scas
cmp
mov
ret
pop
stos
xor
mov
out
push
ljmp
mov
popa
dec
imul
into
test
sbb
cmpb
shrl
mov
jbe
dec
scas
aaa
dec
scas
lea
lds
sub
pop
cmp
fcmovb
and
insl
add
popf
mov
cmp
fildll
xlat
mov
cli
test
push
setge
xchg
lods
xchg
xlat
js
mov
aas
sbb
mov
add
test
pop
xchg
movsl
movsl
lds
mov
loopne
xchg
jg
jge
daa
cmpsl
aam
mov
sbbb
hlt
pop
data16
ljmp
jne
cmc
cwtl
dec
ljmp
jne
lcall
or
scas
push
xor
in
outsb
xchg
sbb
dec
xor
add
xchg
pop
sub
out
push
fdivs
pop
enter
add
pusha
push
sbb
push
int
scas
pop
and
iret
push
inc
sahf
xorl
pop
shrb
rcrb
lods
ret
aad
out
fidivrs
and
dec
push
xor
mov
call
push
cmp
push
and
push
and
dec
lret
in
lds
and
insb
xchg
or
int
sbb
inc
mov
fidivrs
dec
lret
sbb
sub
jecxz
es
cmp
push
movsb
jmp
mov
out
push
dec
ja
mov
mov
fistl
popa
notl
scas
test
clc
jbe
mov
pop
repz
and
sahf
fcmovu
mov
iret
dec
push
loope
movsl
fstpl
andl
xlat
pop
jg
leave
mov
adc
pop
lds
leave
mov
xchg
pop
lods
frstor
xor
and
pushf
loop
shr
mov
mov
mov
xor
mov
aad
pusha
out
test
fwait
jle
jns
sbb
jo
push
test
sub
dec
add
adc
lahf
and
leave
sub
pushaw
call
fldcw
or
insl
dec
ret
pop
daa
push
shrb
das
xchg
int
xor
lods
mov
shll
pop
pop
add
mov
pop
cmp
mov
sbb
lock
lea
icebp
adc
mov
inc
mov
xor
pop
popl
fs
testl
insb
hlt
or
jecxz,pt
movsb
lock
std
xchg
les
test
in
in
mov
jns
pop
jge
pop
inc
rorl
aas
lret
je
outsb
sbb
xchg
push
or
pop
fcmovu
push
out
lcall
icebp
lods
in
dec
mov
sbb
pop
xlat
pop
sbb
sti
les
lods
lea
addl
mov
adc
mov
dec
xorl
out
dec
lcall
test
cmc
mov
inc
pusha
pop
sahf
cltd
subb
push
lods
push
adc
sbb
movl
cmp
dec
add
mov
lock
mov
enter
pop
xchg
xor
add
test
pop
incb
cltd
adc
xchg
pop
push
xor
adc
and
pop
and
and
mov
dec
xlat
cmp
dec
lret
jb
mov
jmp
jl
push
roll
sbbb
mov
lea
bound
jmp
std
mov
dec
mov
fldl
insb
popf
xor
enter
and
add
ss
add
pop
and
addr16
jl
jnp
ret
cmc
push
lret
pop
push
sub
dec
and
mov
jg
xor
and
test
in
in
jns
and
cltd
lcall
aad
clc
mov
sbb
mov
xor
rorb
not
sbb
scas
ds
mov
test
pushf
sub
xchg
xlat
sub
pop
or
sbb
fwait
sahf
mov
aad
mov
dec
fcoms
popf
inc
scas
popf
sbb
adc
es
ret
inc
adc
scas
xchg
out
popa
jbe
lds
loope
add
lahf
adc
cli
mov
out
push
add
lods
out
and
shrb
jb
ret
jne
js
sbb
rcrl
and
cmpl
push
sbb
jl
or
mov
lcall
fcmovnbe
aas
pop
cmpsb
mov
cwtl
das
gs
pop
adc
xchg
cmpsb
iret
xchg
mov
mov
insl
jp
xor
popl
popf
inc
cli
sbb
sub
aaa
mov
dec
inc
mov
pop
imul
cmc
inc
gs
adc
aam
aad
imul
xchg
out
xchg
mov
mov
push
aam
fisubrs
push
mov
std
inc
subb
inc
adc
jnp
and
jo
movsl
lret
jne
insb
and
std
rorb
cmp
arpl
pusha
ds
xor
add
push
or
or
jb
cwtl
rcrb
dec
fistpl
jne
mov
push
repz
xchg
insl
mov
lds
adc
adc
inc
hlt
pop
iret
mov
pop
pop
sub
arpl
push
jge
sbb
and
mov
xchg
testl
mov
mov
popf
dec
test
imul
decb
sarl
push
insb
insl
inc
andl
cmpsl
xchg
scas
xor
ljmp
popf
jecxz
sbb
inc
pop
mov
cmp
or
dec
in
loope
pop
in
push
adc
lock
jp
movl
leave
ss
xorps
xchg
mov
js
sub
fwait
xchg
daa
movsb
orb
ja
sub
push
dec
je
push
pop
sahf
and
daa
das
and
roll
mov
fs
outsl
adc
push
jnp
repz
shll
subl
addr16
inc
pop
hlt
add
imul
inc
cmp
mov
inc
mov
sti
dec
adc
out
fwait
sbb
cs
fcom
jmp
adc
adc
push
mov
jle
pop
nop
insl
mov
addr16
mov
lock
jge
cwtl
cmpsl
aam
push
fdivrp
stos
sbbb
aaa
fsubrs
xchg
outsl
mov
push
dec
jbe
leave
or
push
push
out
daa
or
jbe
aas
jp
cmp
jae
fdivl
add
xchg
mov
ds
mov
fsts
xchg
cmp
jb
dec
xor
fcomp
xchg
fsts
add
sbb
or
sarl
adc
xchg
or
mov
xor
or
sahf
nop
lock
pop
lods
out
aas
cltd
inc
mov
dec
dec
fsubl
push
pop
stc
and
xchg
mov
xor
das
mov
pop
and
fxch
dec
cmp
sbb
sub
test
dec
loope
fiadds
inc
add
sub
rcl
mov
hlt
inc
fs
pop
sarb
incl
fbstp
pop
xchg
imul
or
push
cmc
add
inc
stos
in
add
jmp
idivb
pop
aad
mov
xchg
sbb
mov
push
cmpsl
jno
and
adc
jg
push
lret
imul
pop
mov
les
cmp
out
xor
xchg
adc
out
out
les
mov
pop
mov
daa
js
test
cmp
cmp
iret
jp
je
xor
shlb
xchg
clc
sbb
fcomip
out
mov
lods
outsb
mov
pushf
jg
jg
arpl
xor
cltd
cmp
mov
ljmp
dec
in
adc
aas
mov
out
loopne
sbbl
daa
out
dec
insl
add
fistps
mov
xchg
push
push
push
mov
jbe
pushf
push
and
mov
enter
loop
mov
xchg
in
sbb
call
loope
test
ja
xchg
movd
cmpsl
aam
popf
hlt
push
push
push
out
cmp
adc
jmp
in
mov
cmp
test
orb
movsl
std
cld
fiadds
call
sbb
mov
cmpb
push
sub
cmp
pop
adc
ret
lahf
into
ficomps
push
bound
and
push
lds
dec
test
or
ja
cwtl
pop
push
decb
sub
and
test
or
outsl
orps
jecxz
mov
mov
jne
sub
das
test
lret
mov
pop
and
leave
je
push
nop
lods
popl
adc
jns
mov
xchg
push
cmpsb
stos
or
jb
push
dec
cmpsl
mov
xchg
insl
std
cmpl
mov
jmp
sub
and
cmp
add
cmpsl
cwtl
push
cmpsb
lcall
shll
fmull
aas
jne
pop
pop
loope
xchg
add
fdivrl
rolb
stos
inc
js
aaa
in
mov
js
xor
lods
push
cli
sub
cmp
inc
fst
hlt
xchg
jle
xor
sub
test
xchg
shrb
in
xor
and
push
stos
dec
push
fwait
jnp
dec
sarb
fimull
cmp
dec
and
out
push
pop
adc
lods
outsl
xchg
adc
das
inc
adc
fcompl
adc
aad
mov
add
sbb
jge
sbb
fcmove
and
adc
rorb
stos
add
dec
cld
mov
jmp
dec
js
je
aam
or
and
cmp
jl
or
insb
ljmp
cli
lcall
add
mov
mov
adc
sub
cmpsb
les
cwtl
aas
mov
subl
xor
mov
dec
sti
stos
out
or
scas
pop
out
push
jo
adc
mov
cltd
mov
jae
sub
stc
out
mov
mov
fcompl
xor
jnp
mov
mov
ret
jmp
fbld
jne
push
insl
or
ljmp
mov
hlt
inc
insb
and
mov
daa
cmp
xor
push
or
pop
sbb
inc
hlt
neg
jb
out
popa
insb
jge
and
nop
adc
sarl
mov
je
shrb
lret
leave
adc
and
rolb
adc
enter
mov
lock
sub
pop
dec
pop
cmp
jno
or
mov
jae
pop
dec
inc
mov
push
and
andl
lahf
popa
dec
adc
js
sahf
cmp
mov
insb
js
lea
jo
pushf
subl
cld
into
call
sbb
icebp
iret
clc
stos
cmpsl
mov
or
enter
hlt
cmp
stos
cmpsb
ds
jp
pop
and
imul
xchg
or
clc
inc
ret
and
jmp
movsl
cmp
rcl
dec
incl
dec
jle
xchg
fdivl
or
sbb
sahf
fucom
xchg
inc
xchg
iret
xor
mov
mov
dec
add
adc
insl
jbe
dec
jo
mov
sbb
clc
inc
xchg
ljmp
sbb
call
inc
inc
idivb
jae
cs
loope
insl
and
lods
adc
cmp
pop
lahf
mov
scas
or
jmp
xor
or
adc
mov
push
mov
sub
mov
push
shlb
inc
mov
sbb
jmp
mov
repnz
loope
stos
push
push
daa
adc
or
add
rorl
push
add
sub
lods
adc
enter
int3
and
and
outsb
cmc
out
out
leave
int
and
int
cmpsb
lcall
repnz
lea
cs
stos
adcb
or
insl
mov
push
je,pn
loop
ljmp
out
mov
bound
pop
test
into
cmp
icebp
push
test
mov
or
in
das
xor
cwtl
daa
or
mov
inc
sahf
in
pop
xchg
sbb
ds
or
pop
mov
enter
or
nop
movsl
clc
imulb
js
pop
sub
shlb
aaa
lods
fwait
inc
ds
mov
jmp
js
scas
adc
loop
push
jae
in
mov
inc
or
addl
mov
and
imul
repnz
push
cmp
jae
movb
cltd
mov
or
add
in
in
ja
inc
in
popa
std
mov
loope
fwait
test
aas
inc
fs
dec
add
jecxz
inc
mov
aam
mov
xlat
dec
sub
adc
mov
push
fld
jg
cmp
sbb
jne
adc
arpl
add
dec
fsubrp
push
into
pop
sbb
sub
scas
sti
mov
dec
sbb
sbb
push
dec
ret
sbb
addr16
mov
popf
push
lea
out
and
mov
jbe
xor
cmc
or
mov
jl
xor
mov
cli
das
data16
adcb
xchg
ljmp
shlb
lret
fwait
pop
ja
adc
das
sbb
outsl
leave
mov
inc
adc
aam
push
das
rol
adc
lret
inc
cmp
sbb
mov
xchg
fs
sub
sbb
sahf
inc
rcrb
xor
jmp
inc
mov
iret
fnsave
loopne
and
pop
xchg
jne
jg
clc
js
fs
popf
mov
in
scas
fisubs
out
cmovnp
btrl
scas
xchg
js
lods
int3
adc
jb
outsl
or
xor
je
orb
pushf
test
add
mul
imul
stos
ja
jbe
inc
push
dec
mov
je
or
push
test
push
jecxz
adcl
dec
sti
movsb
js
lods
roll
daa
mov
popf
or
stos
push
push
fxch
cltd
jle
lods
cmc
dec
add
pxor
cltd
mov
dec
subl
in
insl
jg
push
icebp
popa
sti
jp
outsl
sbb
aas
jno
push
cld
pop
and
aaa
loop
aam
call
sti
scas
test
cld
shlb
sbbl
je
pop
stos
mov
out
pop
int3
mov
call
popa
loopne
or
adc
daa
stos
cld
mov
bound
jecxz
test
sbb
call
into
and
sub
push
fldenv
or
fdivl
dec
test
jg
lahf
rcr
adc
pop
popa
dec
mov
push
arpl
scas
js
add
aas
push
mov
ret
inc
cvttps2pi
jmp
xor
xchg
xchg
icebp
mov
sbbb
aaa
scas
cmp
test
mov
leave
daa
ret
cmp
jbe
mov
daa
mov
cmp
dec
sbb
mov
loope
sub
mov
mov
push
jb
inc
fsub
or
adc
xor
fsubs
adc
lcall
xchg
and
and
sub
or
dec
rorb
ja
cmc
pop
pop
shll
jne
sbbl
xor
movsl
mov
xor
or
push
jne
lret
push
aaa
xchg
lock
pop
dec
sbb
loopne
jmp
imul
mov
ret
sbb
or
mov
inc
mov
fistpl
pop
jb
mull
mov
or
pop
or
adc
enter
roll
mov
xchg
mov
push
mov
and
mov
jge
lret
loope
xlat
into
mov
in
xor
mov
test
pushf
mov
rorl
mov
push
cmc
or
dec
cmp
push
sbb
sub
sbb
cmpsb
lret
fdivs
or
pop
and
xchg
jae
inc
test
dec
loopne
xchg
outsb
cmp
in
test
lock
cs
jb
push
xchg
and
xchg
rolb
das
lret
sbb
scas
dec
sub
lea
pmaxsw
aad
sbb
mov
ret
xor
sub
dec
mov
cli
xor
lret
popa
push
cmc
push
lods
push
pop
push
pusha
addr16
adc
dec
jl
push
or
in
xor
inc
mov
aad
outsb
ss
xor
adc
jno
es
movsb
mov
inc
jb
pop
in
pushf
jge
test
repz
pop
and
mov
mov
ret
inc
fwait
das
push
gs
jecxz
pop
leave
adc
xor
sub
ret
mov
fs
jnp
cs
je
insl
jo
xor
pop
mov
or
pop
ss
lea
imul
in
push
push
push
pop
out
mov
xor
bound
mov
push
mov
imul
jne
stc
mov
jp
jl
stos
ljmp
and
cmp
xor
popa
mov
sub
cld
push
mov
rol
lock
push
mov
dec
xchg
pop
call
imul
xor
aad
loop
out
mov
push
cld
insb
loop
mov
arpl
dec
jmp
mov
aad
and
adc
cmp
int3
adc
sbb
jmp
iret
shrl
sbb
fldcw
loope
das
jp
xchg
or
cld
xlat
mov
sbb
or
xor
cs
push
outsl
jns
xchg
ds
stos
adc
scas
filds
pop
jmp
push
lock
mov
filds
adc
mov
inc
cmp
and
mov
ja
mov
leave
mov
pop
inc
das
cwtl
mov
and
lods
ret
add
movsb
jns
jbe
pop
imul
rorl
jnp
add
in
cltd
jmp
sub
pop
imul
xchg
std
dec
cmpsl
sub
jmp
lock
xchg
cmp
push
jnp
fst
out
push
in
scas
add
cld
cld
sbb
cmpsb
fsubp
cmp
inc
popf
leave
lods
jno
aas
mov
lock
push
jno
sahf
ja
cs
xchg
pop
add
out
ljmp
and
ficomps
push
xor
mov
mov
dec
sbb
xorb
cmp
cmp
aaa
lds
or
bound
and
mov
rol
icebp
fs
mov
mov
test
lds
cs
test
sahf
ss
scas
scas
push
xor
push
sbb
or
pop
or
lock
mov
int3
cs
cltd
sub
data16
and
mov
dec
enter
jg
jp
stc
dec
xchg
jge
lret
mov
stos
push
push
pmaddwd
mov
pop
fstl
into
imul
sub
rcll
ja
cs
add
test
rcl
in
push
fisubrs
shl
cmp
jmp
iret
les
mov
movsb
push
or
cmpsb
rcll
out
inc
pop
loope
sbb
out
push
sub
sbb
push
ficomps
cli
pop
enter
lahf
sti
shll
cmpb
xchg
xor
loop
ss
or
lcall
js
push
stos
xor
mov
jb
sahf
sbb
out
mov
or
jg
sti
out
cli
xor
fidivrl
ret
inc
xchg
daa
mov
test
and
sub
jp
mov
push
mov
pushf
ret
xchg
push
popa
xchg
cwtl
jno
into
push
dec
cmpsl
xor
es
cmc
jns
mov
mov
mov
push
or
icebp
jmp
jbe
ret
rcr
aaa
push
jg
fldt
sbb
popa
mov
sbb
mov
imul
adcb
int3
or
inc
mov
xor
ss
mov
loope
loop
push
loop
sahf
dec
out
out
mov
sbb
push
and
scas
jno
into
jb
jle
cmp
repnz
popa
pop
pmuludq
ds
xchg
out
pusha
push
inc
mov
in
mov
jno
push
je
mov
sbb
jb
xchg
dec
insb
inc
pop
mov
ljmp
fildll
dec
loop
cmp
mov
mov
outsb
addr16
imul
mov
mov
cmpsl
out
sbb
fdivr
lods
insl
and
xchg
fmul
gs
int3
mov
jecxz
and
clc
xchg
scas
pop
and
pushf
lods
leave
mov
xchg
int3
ja,pn
outsb
fnstsw
mov
fldl2t
sub
mov
nop
gs
and
push
popf
repnz
out
dec
rcll
push
test
gs
pop
mov
inc
adcb
jg
std
jns
rcrb
fiadds
lahf
jl
pusha
mov
fstl
xor
outsl
jns
cmpsl
xchg
jae
sbb
mov
test
pop
xor
femms
jae
pop
lcall
push
mov
test
repnz
mov
hlt
daa
adc
jb
push
call
or
xchg
out
or
mov
fcomps
test
xchg
xchg
jg
sbb
dec
and
fsts
cmpsl
jbe
mov
repz
out
test
into
ljmp
ds
daa
xchg
lret
call
adc
ret
jb
pop
xor
nop
outsl
leave
xchg
mov
dec
cmp
add
shlb
mov
insb
xchg
enter
lret
or
ftst
xchg
sbb
loope
dec
pusha
adc
dec
sbbl
shlb
fnsave
shll
xlat
cwtl
dec
mov
xchg
mov
and
mov
out
je
ficompl
pop
xor
insb
mov
and
cltd
fsubrl
in
loope
aam
add
jle
lret
xchg
sbb
popf
xchg
ficoml
lods
jle
in
pop
jo
pushf
jbe
mov
sbb
pusha
mov
aad
sbb
pop
mov
xchg
cmpsb
xchg
outsl
jl
jge
jae
es
insl
mov
sahf
aaa
xor
outsb
das
mov
pop
ja
mov
andb
out
shrl
xchg
fwait
pop
cmp
nop
aad
adc
in
icebp
xlat
cld
jae
cmp
push
sbb
or
xlat
pop
push
rol
jle
pop
jns
insb
sub
popf
je
sbb
mov
nop
xchg
xor
lret
cmp
jae
out
scas
jl
aad
xchg
rcr
test
jb
leave
cltd
push
adc
and
filds
and
add
in
insb
xchg
aad
sti
outsb
lock
push
mov
fstpt
mov
std
pushf
pop
in
icebp
popf
jo
and
push
int3
jmp
lds
nop
mov
pop
sub
loopne
leave
sahf
mov
jne
mov
sbb
push
dec
fstp
xor
lock
popf
ja
lret
adc
lea
push
push
fsubrs
dec
pushf
and
jne
and
loope
cmp
inc
cltd
push
push
mov
cmp
xor
jecxz
neg
push
loopne
add
lea
and
das
fsubrl
ss
movsl
xchg
test
xchg
inc
out
mov
cs
push
imul
push
stc
idiv
aas
mov
lret
ljmp
add
push
add
aad
inc
cwtl
push
inc
push
fimull
pop
paddsb
nop
stc
mov
push
jo
and
ljmp
lea
pop
addl
mov
jns
sbb
inc
shll
and
inc
movaps
pushf
outsl
mov
push
loopne
adc
fldt
and
sbb
or
frstor
js
loop
push
fucomip
pop
stc
push
add
push
mov
imul
daa
sub
fldl
push
ret
jns
mov
jno
push
mov
and
ljmp
jecxz
push
icebp
pushf
mov
mov
pop
ss
aas
nop
shlb
sub
push
insb
insb
xchg
loop
jmp
pop
adc
mov
out
out
imul
out
or
mov
add
enter
in
jns
cld
xchg
std
and
aaa
repz
faddl
sbb
push
pushf
cmp
ds
and
adc
lahf
mov
sub
cwtl
mov
movsl
arpl
add
fmull
enter
rcl
sbb
mov
out
negl
sbb
adc
xchg
lea
dec
test
into
scas
jae
out
mov
dec
add
insl
icebp
mov
rorb
sub
cmp
cmp
add
pop
jecxz
push
out
scas
aaa
mov
in
mov
aas
pop
mov
dec
or
xchg
inc
sub
xlat
xor
and
jecxz
pop
xchg
fucomi
mov
movsb
rolb
sbb
pop
rorl
or
loop
mov
jmp
xchg
jns
adc
orl
and
mov
inc
in
jo
out
sbb
cmc
dec
mov
mov
hlt
icebp
pop
out
punpckhwd
push
add
imul
mov
xchg
or
mov
cmp
xchg
add
add
icebp
and
push
gs
in
sti
sbb
lds
mov
stos
inc
adc
scas
les
pop
arpl
add
xchg
cmp
je
leave
adc
xchg
pop
jb
push
icebp
rcl
adc
rcll
shl
in
fdivrs
insb
jmp
daa
adc
jne
inc
push
out
xchg
ficomps
or
fstps
pop
in
orb
je
test
pop
and
sub
js
and
mov
cmp
lahf
adc
hlt
repz
in
jge
dec
fcmovb
movsl
jb
jg
adc
jno
fsubl
pop
sbb
mov
lret
mov
aam
iret
fnsave
rclb
outsb
iret
dec
loopne
mov
addr16
sub
xchg
decl
insl
dec
pop
and
and
lahf
movl
call
les
or
cmp
gs
dec
adc
mov
loop
into
enter
sbb
test
sbb
dec
stos
testl
lahf
lods
and
cmp
stos
xor
mov
movsb
gs
lret
sub
cmc
icebp
pusha
jp
sti
out
inc
push
add
in
pop
cmp
xchg
idivl
lods
fisubl
xchg
cmp
jle
daa
mov
add
and
fisubl
lret
nop
shl
insb
psubd
lret
pop
xchg
icebp
mov
xor
push
aam
test
sub
add
sub
sub
cltd
cmpsb
mov
loope
cmc
sti
leave
cmc
cmp
jmp
xor
aas
dec
inc
into
mov
mov
leave
lret
cwtl
stos
out
jae
sbb
jno
aas
mov
and
hlt
ret
das
dec
testl
push
jns
pop
ret
aam
cli
jns
scas
cmp
add
push
leave
fsub
and
nop
xchg
shlb
stc
push
jecxz
cmovl
sbbl
mov
jo
inc
shl
int3
sub
sbb
inc
fcoml
xchg
xchg
dec
jl
adc
int
clc
mov
fisttps
add
mov
mov
jno,pn
xchg
jle
test
jle
pop
jl
test
fcompl
mov
adc
fcoml
aam
aaa
mov
mov
aam
add
xchg
mov
xchg
clc
aas
push
push
inc
out
sub
push
shl
je
decb
push
jbe
push
jb
and
and
or
lods
add
sahf
fs
and
dec
mov
test
pop
adc
popf
cmpsl
ss
xchg
sbb
enter
sahf
bound
sub
imul
pop
add
and
sahf
cmp
jl
insl
daa
cmp
jne
jl
loopne
fsubrp
icebp
or
out
shlb
push
or
div
in
and
call
lods
insl
jle
add
or
pusha
jns
pop
jmp
aam
mov
push
push
rcl
xchg
clc
sti
jge
mov
mov
dec
sti
jno
scas
outsl
icebp
adc
jmp
mov
test
shl
xchg
jne
mov
cmp
push
or
gs
fs
aas
mov
test
lods
scas
mov
imul
dec
cmpsb
movsl
and
shrb
addr16
inc
xor
insl
inc
push
xchg
sbb
std
dec
shl
jno
sub
pop
out
cmp
mov
add
xchg
jg
xor
push
push
stos
enter
fdivs
pop
sub
insl
add
sbb
hlt
sbb
cmpsb
sub
push
ja
adc
jmp
js
pushf
xorb
iret
fists
cmp
adc
sub
pop
rcrb
xor
inc
mov
lods
push
mov
jnp
in
cmp
adc
popa
pop
loopne
lods
lret
mov
cli
or
test
inc
into
adc
fisubrl
clc
push
mov
mov
lret
mov
fdivs
push
iret
insb
fisubrl
insl
push
idivw
xor
repz
and
movsl
pop
arpl
out
jb
adc
daa
into
and
daa
jecxz
pop
call
xchg
popf
or
adc
mov
inc
xor
dec
lahf
xor
jns
fcomps
xor
int3
stos
mov
outsl
mov
cmpsb
or
mov
push
dec
mov
adc
sbb
sub
pop
std
dec
jl
dec
jb
xchg
daa
lret
push
std
sub
mov
mov
cmpsb
push
xor
xor
cld
out
push
outsl
dec
movsb
jae
fiaddl
test
xor
gs
xor
adcb
xchg
daa
es
or
bndldx
sbb
xchg
push
in
cmp
lock
and
stos
add
pop
aam
push
jmp
mov
loope
add
add
std
lret
sti
mov
fnstsw
subl
data16
leave
mov
adc
mov
xchg
into
cmp
mov
cld
inc
cs
imul
cmpsb
push
outsl
outsl
cltd
mov
xor
sub
test
lock
jmp
pop
mov
cmpsl
or
push
test
mov
daa
in
and
insb
popf
and
sbb
hlt
stos
dec
adc
dec
or
mov
daa
and
and
xor
cmc
sbb
push
lds
ljmp
pusha
xor
rolb
add
arpl
mov
andb
inc
push
cwtl
jecxz
xchg
mov
push
cmp
cs
iret
pop
pop
and
push
pusha
cli
xchg
mov
nop
jb
mov
or
shr
mov
das
lods
cli
xchg
adc
inc
hlt
xchg
pop
ja
inc
fwait
jmp
lahf
cmc
pushf
pushf
pop
lea
push
pop
sub
jl
jmp
aad
jno
test
in
jecxz
adc
mov
add
xchg
dec
jns
lods
mov
pop
hlt
sub
mov
ljmp
sahf
arpl
add
orl
scas
rorb
pop
inc
dec
jnp
cmpsb
add
repnz
test
jae
cmp
movsl
and
dec
jl
pop
icebp
add
mov
ficomps
aaa
adc
ljmp
sbb
push
sarb
aas
in
cmpsb
arpl
adc
ljmp
adc
pop
mov
repz
dec
sbb
insl
push
pop
int3
push
dec
daa
sbb
mov
xchg
jle
jb
movsl
mov
mov
pop
mov
cmp
pop
outsb
jns
loopne
fs
dec
lds
push
aaa
add
popf
lea
cmpsl
testl
push
pop
notb
je
and
add
jbe
nop
add
shlb
adc
mov
inc
pop
cmp
add
into
ljmp
jecxz
jle
jg
rdtsc
std
lret
in
pop
jno
jecxz
sbbb
adc
inc
mov
xlat
shlb
scas
mov
or
jl
dec
mov
out
cmp
cld
jmp
mov
and
pop
fs
out
cltd
lea
aam
subb
pop
std
cmp
cmp
and
jns
ss
lret
and
cmp
xchg
ljmp
push
adc
or
pop
adc
lea
sub
sarb
inc
adc
sbb
or
mov
aaa
ja
in
repnz
stc
mov
cmpsl
mov
cli
bound
fdivrs
insl
out
mov
adc
inc
imul
inc
daa
push
or
shrb
inc
jbe
mov
add
pop
or
popa
stc
sti
in
mulb
jge
or
mov
mov
mov
mov
dec
pop
das
loop
adc
cli
dec
fcoml
pop
xchg
pop
dec
sahf
dec
and
xlat
adc
add
add
and
addr16
jo
stc
rolb
mov
js
cmp
xor
xchg
or
dec
cmpb
fcoms
nop
fmuls
je
repz
sbb
jns
dec
push
jp
icebp
sbb
mov
sbb
mov
sbb
ja
mov
fisttpll
mov
aas
adc
aaa
test
fdivrl
and
inc
push
and
fwait
dec
sahf
jl
or
das
repz
mov
mov
jo
add
add
or
jo
loopne
adc
mov
mov
lret
mov
push
aam
lock
mov
out
test
gs
fidivrl
jg
data16
xor
iret
mov
jne
pop
lods
lods
xchg
std
jmp
test
xchg
ljmp
inc
mov
sub
add
xchg
cmpsl
push
in
sub
sub
fwait
dec
cmp
dec
dec
ss
xor
icebp
loopne
jl
jecxz
hlt
or
out
inc
and
xchg
push
stos
adc
adc
jns
pop
add
jp
ret
xchg
imul
lahf
lcall
stos
pop
fiadds
mov
inc
hlt
push
push
loope
lahf
sub
sbbl
and
xor
popf
repz
sbb
pop
jle
add
xchg
jnp
push
repnz
add
aad
mov
in
dec
fisubrs
dec
loop
daa
pop
sub
mov
mov
or
out
or
out
shlb
cmp
push
out
inc
sbb
mov
inc
andb
rcrl
lds
in
lds
cld
dec
adc
mov
inc
in
and
in
xor
mov
sub
daa
and
jne
push
in
test
daa
push
mov
mov
cs
push
jo
xlat
aaa
dec
repnz
mov
push
stos
incl
mov
cltd
mov
add
test
shl
dec
les
sbb
lcall
imul
hlt
mov
pusha
jecxz
jbe
sbb
mov
aam
sarl
fstl
sub
mov
in
mov
fimull
jecxz
subl
jle
cwtl
cld
gs
and
lea
inc
out
xchg
sub
.byte
cltd
.byte
fwait
