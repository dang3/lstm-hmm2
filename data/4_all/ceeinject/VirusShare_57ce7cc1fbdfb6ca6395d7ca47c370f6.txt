call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
adc
inc
xor
ss
imul
movsl
out
mov
out
xchg
in
cmc
popa
add
inc
xor
push
gs
or
mov
add
mov
cmpsl
aad
in
cmc
outsl
add
pop
xor
push
adc
test
mov
xlat
mov
cltd
xchg
jmp
in
out
xchg
jbe
pop
sbb
xor
and
pushw
loopne
insb
sub
ret
lds
push
jmp
push
jns
mov
inc
fnop
out
iret
jg
icebp
sbb
mov
rorl
jp
or
dec
test
js
daa
aad
xchg
push
and
rcrl
sbb
shl
aad
pusha
inc
dec
cmpsb
inc
jbe
mov
int
adc
xor
push
mov
jp
push
and
sub
out
outsl
hlt
xchg
jno
inc
pcmpeqw
mov
push
movhps
jp
fld
pop
mov
xchg
cmpsl
aad
in
or
xor
lods
popf
imulb
xor
xchg
sbb
sub
mov
jbe
xchg
mov
adc
push
xor
push
gs
jne
test
xchg
into
movsl
fbstp
xchg
in
pushf
add
and
dec
cmp
and
cmp
xchg
movsb
shrb
repz
jecxz
jbe
data16
inc
inc
xor
jp
inc
adc
into
out
xchg
divb
aam
mov
lcall
inc
push
dec
imul
push
gs
jne
test
xchg
movsl
mov
lds
cmc
jbe
adc
inc
xor
push
gs
jne
test
xchg
movsl
mov
lds
cmc
jbe
movsl
jge
enter
xor
mov
fsubrs
sub
icebp
rorb
sbb
push
fwait
pop
sub
pop
adcb
add
mov
pop
lret
adc
mov
icebp
outsl
shll
adc
push
jg
xchg
pop
scas
add
mov
mov
aaa
loopne
inc
dec
inc
jmp
and
pop
adc
mov
imul
ret
lods
aaa
push
push
push
mov
rorb
push
js
popa
mov
dec
ret
push
mov
cmpsb
push
cmp
jnp
lods
popa
xchg
sahf
fnsave
in
sub
push
lcall
into
lret
repz
xchg
sub
mov
div
psubd
call
mov
insb
mov
xchg
push
jb
leave
cmp
or
mov
je
sbb
dec
cmp
jl
les
mov
fbstp
mov
jo
pop
fldl
rolb
jb
addr16
lds
or
sub
and
mov
hlt
leave
pop
das
xchg
xor
push
fstl
mov
jbe
mov
dec
lock
leave
jbe
out
push
mov
or
comiss
push
rolb
xor
cmp
shrl
aam
mov
dec
xchg
dec
aam
stos
pop
xchg
inc
leave
movnti
arpl
pushf
mov
adcl
pop
push
jae
xchg
int
sub
movsl
pop
jb
cmpl
mov
mov
sbb
stos
add
nop
rcrl
icebp
cs
ret
jbe
mov
aad
jl
test
push
fistps
ret
lock
sub
and
scas
and
and
mov
stos
add
rcrl
pop
pop
aas
nop
lods
push
icebp
test
hlt
inc
call
cmp
push
out
sti
out
add
mov
aaa
dec
push
clc
es
jbe
sbb
frstpm(287
ja
iret
jns
out
inc
push
pop
fbstp
push
cs
xor
call
add
loope
pop
insl
xorl
inc
enter
adc
into
jmp
out
cli
mulb
mov
inc
dec
jno
adc
fmul
int3
bound
jecxz,pt
out
jo
testb
and
mov
jno
sub
mov
test
or
pop
mov
pop
pop
aam
inc
xor
repz
aaa
or
and
out
pop
fstps
cmp
subl
add
ficompl
insl
jne
out
pop
jge
dec
push
push
xchg
daa
stc
or
mov
xchg
dec
pop
mov
and
sbb
lock
mov
cmpsb
xor
xchg
sub
loope
mov
pop
cmc
xor
inc
stos
jo
pop
and
sbb
fistps
push
pop
cmpsl
mov
test
dec
cmp
mov
rcll
into
and
cmp
out
int
or
rcl
rcr
xor
ficoms
scas
das
scas
push
inc
cs
and
mov
push
rol
xor
addl
cli
data16
in
lret
pop
ror
jg
push
push
pop
mov
or
xchg
lret
outsb
ja,pt
aam
lahf
inc
push
test
and
add
jmp
iret
xor
enter
cs
rorb
push
xor
mov
xchg
loop
and
mov
test
lcall
mov
adcl
lock
subl
cmpsl
nop
repnz
pushl
das
add
inc
pop
fadds
or
call
add
inc
ds
xchg
popl
push
cmp
subl
sub
outsl
jl
push
xchg
lret
loope
and
cmp
andb
push
sub
dec
mov
cmc
aas
loope
pop
mov
mov
jmp
mov
es
sbb
cmp
shlb
subl
pslld
xchg
sti
jae
fnsave
ss
push
nop
mov
fldz
fstps
jae
loop
xchg
dec
loope
fldcw
fmull
in
mov
scas
loope
or
jns
rcrb
jp
sub
add
dec
bnd
adc
push
les
mov
lds
pop
inc
out
sbb
cmp
fsubp
push
sarb
dec
or
fistpl
and
data16
aaa
cmp
imul
cmp
and
cmp
jmp
inc
mov
cmpsl
jo
xchg
cld
daa
xor
fistpl
or
dec
cmpsl
push
cs
std
mov
pop
or
fiadds
jo
and
pop
mov
dec
add
mov
push
lret
out
fsubrs
xchg
mov
mov
fdivr
add
or
js
push
dec
aas
add
ss
mov
adc
pop
imul
jge
out
push
add
lret
sub
push
add
sahf
jbe
add
lcall
lea
mov
mov
in
dec
cmp
jo
dec
jmp
sarb
and
push
jmp
sti
add
xor
shll
sub
pop
adc
loopne
mov
cmp
imul
dec
mov
loope
cmp
shr
call
mov
cmc
loop
jno
adc
pop
enter
outsb
sbb
xchg
es
dec
shlb
cmp
xchg
fisubs
jle
lret
fiaddl
push
pop
shrb
or
jb
movl
or
mov
sar
and
popl
adc
sbb
adc
push
push
adc
fwait
movsl
xor
jmp
jne
mov
and
add
cwtl
xor
cmc
movsb
cld
insb
out
ljmp
add
fisubrs
push
lret
mov
nop
lret
idivl
sahf
js
fidivrs
shl
and
stos
shr
sahf
nop
jle
lcall
dec
popa
xchg
mov
movsb
sarb
movsb
dec
fidivs
sahf
sbb
dec
int3
outsl
aas
mov
and
js
aad
xchg
clc
es
and
pop
loope
mov
pop
xor
in
push
ret
mov
sbb
adc
test
mov
fmul
fmul
pop
dec
xchg
fistpl
jmp
xor
adc
jne
addb
add
in
cmpsb
into
out
xor
xor
adc
cwtl
pushf
push
popa
sub
jae
rcrl
push
jne
dec
movsb
les
aaa
inc
ret
cmp
adc
ficoms
jbe
enter
mov
push
pop
popf
cmc
cmp
fldenv
jb
inc
pop
adc
fwait
push
outsb
std
inc
mov
aad
sbb
repz
movsl
filds
pop
es
sbb
pop
add
xorb
cld
fstpt
push
adc
xor
xchg
sbb
and
test
hlt
dec
jle
lods
fwait
test
mov
jnp
adc
out
mov
outsb
add
pop
cmp
rcrl
and
or
test
lds
testl
les
push
insl
in
lock
mov
in
faddl
push
sbb
pusha
adc
faddl
arpl
jb
pop
and
mov
out
ror
cmp
leave
xchg
popa
inc
rolb
sbb
loop
std
adc
push
push
adc
loope
bound
mov
sub
out
test
lcall
pop
repnz
imul
jle
movsb
push
mov
cmp
hlt
cltd
cwtl
inc
xor
jne
clc
stos
xor
cmp
in
mov
xor
adc
movsl
dec
repnz
fcoms
mov
pop
inc
out
and
aaa
push
fstl
pop
adc
rol
dec
sub
inc
inc
adc
and
inc
or
mov
pop
inc
inc
pop
loopne
loopne
loopne
xchg
xor
pop
add
divl
or
push
imulb
push
gs
xor
rcll
std
fnsave
dec
dec
dec
or
lds
into
outsb
push
sub
imul
sti
sub
lcall
jo
sbb
insb
pop
sbb
dec
sub
mov
std
shrb
scas
ficomps
and
daa
into
add
es
subl
mov
fs
fwait
ja,pn
push
clc
mov
xor
adc
inc
fidivl
or
inc
lea
aam
leave
jne
push
and
dec
sahf
jge
xlat
pop
push
sub
jae
fstpt
sti
and
adc
mov
or
mov
dec
jno
stos
in
imul
test
pop
aad
call
inc
icebp
dec
dec
cmp
or
test
xchg
jmp
ret
push
mov
loop
fisubs
mov
out
push
ret
stos
fadd
outsl
inc
lods
and
push
arpl
lcall
cmp
bound
cmpsb
arpl
xchg
adc
int3
xor
addb
cmp
mov
call
push
loope
pop
mov
mov
and
in
push
push
and
sbb
idivl
call
jno
push
std
imulb
cmpsb
push
ljmp
das
or
xor
pop
xchg
cs
cmc
mov
and
inc
cs
inc
inc
push
cmp
sbb
and
test
sub
mov
mov
or
mov
movsb
ds
sarl
in
outsb
fwait
mov
pop
leave
roll
add
sbb
fldl
gs
adc
cmp
mov
push
cmc
in
jecxz
cwtl
ss
pop
mov
mov
adc
jecxz
stc
lcall
push
add
mov
push
iret
mov
sti
inc
xchg
stos
das
and
mov
pop
sbb
outsl
movsb
leave
push
xchg
sbb
push
ret
push
mov
repnz
mov
loope
divb
sub
dec
int
test
fldt
and
xchg
pop
loop
aad
leave
cltd
insb
sar
xchg
xchg
pop
cmp
mov
pop
or
jmp
inc
and
in
dec
int3
into
stos
into
sbb
imul
fwait
sti
inc
dec
push
imul
dec
cmpsb
mull
inc
add
adc
push
outsb
push
pop
inc
cs
xchg
dec
pop
and
jl
inc
repz
xlat
xchg
cmp
out
fcmovnb
fdivrl
or
out
lret
add
cmp
nop
cmp
outsl
pushf
sbbl
daa
cmc
add
jno
xor
rcrl
jae
mov
mov
pop
stc
xchg
push
lahf
xor
lret
loop
in
add
mov
pop
ret
iret
loope
iret
dec
pushf
out
inc
lea
pop
mov
cmp
sbb
ret
adc
mov
dec
xchg
out
fwait
pusha
or
and
lock
in
fcoms
mov
cmp
das
rol
mov
hlt
test
and
lret
add
adc
outsl
test
stos
scas
sbb
inc
stos
ficompl
xchg
ss
inc
sbb
mov
dec
cld
adc
push
dec
out
inc
adc
aas
cltd
xlat
jne
call
mov
jge
js
jg
fcompl
jg
jp
pop
ret
xor
mov
sbb
adc
roll
inc
mov
shlb
popf
inc
mov
jbe
push
lock
sbb
push
stos
jmp
mov
push
inc
pop
cltd
lods
dec
scas
cmpsb
xor
sbb
xchg
adc
cmp
lods
loopne
xchg
in
push
shr
cmp
sbb
repz
hlt
imul
lock
pop
out
dec
call
dec
jmp
mov
push
sti
roll
and
subl
scas
xchg
test
into
mov
or
xor
cmpsl
fsubr
pop
mov
es
fcmove
mov
addr16
jl
decl
mov
jp
sti
daa
mov
jmp
daa
pop
xchg
push
insl
testb
mov
ficompl
push
xor
imul
inc
test
divb
sub
cmp
xchg
outsl
push
call
ja
insl
xchg
push
adc
cmp
aad
out
xchg
iret
inc
jmp
sub
jnp
add
mov
out
push
jl
mov
test
pushf
inc
dec
jnp
sub
or
cmp
cmp
jae
jne
fidivrs
test
sub
loope
fisttpll
add
xchg
mov
push
dec
mov
dec
ret
sbb
imul
outsb
inc
out
or
daa
mov
stos
loopne
cmp
test
cmp
mov
outsb
fucomi
push
inc
sub
outsb
fwait
push
dec
cld
mov
push
add
call
outsl
adc
mov
mov
into
pop
adc
mov
pop
inc
pop
dec
jge
mov
mov
xor
das
fcomps
push
sbb
xchg
jl
or
out
arpl
stos
pop
dec
push
out
pushf
push
pop
ljmp
ss
loope
fsts
jae
mov
mov
inc
inc
push
sbb
add
ffreep
adc
out
syscall
bound
fidivs
jmp
loope
out
mov
add
pop
add
mov
bound
inc
fstl
dec
adcb
mov
lahf
pop
xor
lea
cld
dec
ror
xchg
dec
mov
into
add
aas
pop
dec
and
cld
out
test
roll
fcmovnbe
les
repnz
mov
pop
fcompl
pop
jp
lcall
int3
jmp
push
or
jne
mov
lahf
mulb
or
jno
cmp
mov
xchg
adc
dec
std
mov
sub
jge
mov
imul
fst
cmpb
jno
mov
dec
cltd
mov
cmp
movsl
ds
mov
pusha
hlt
adc
shr
pop
pop
lret
lcall
stos
in
dec
mov
xchg
sbb
shll
bound
out
addr16
pop
mov
test
fucom
shl
data16
xchg
cmpsb
mov
pushf
mov
inc
mov
sahf
cmp
mov
test
push
roll
xchg
jge
out
or
incl
and
ret
jmp
clc
in
mov
mov
loopne
xor
cs
pop
dec
xchg
xchg
movsb
loop
push
icebp
popf
arpl
dec
and
test
rclb
insl
add
test
lahf
pop
aam
add
xor
ljmp
cmp
ficomps
sbb
test
or
je
mov
cmp
fistpl
sbb
push
in
ja
jno
inc
mov
mov
mov
mov
imul
pop
mov
int3
xchg
push
xchg
xchg
ja
ret
lods
lret
pop
sbb
inc
inc
jge
je
clc
cmp
icebp
dec
adc
cmp
jo
jl
mov
test
add
cmp
insb
in
mov
and
cmpb
test
movl
je
daa
jg
shlb
push
jge
xchg
adc
icebp
clc
push
mov
push
cltd
ss
loopne
cmp
inc
lds
ret
pop
adc
xchg
fsts
clc
je
mov
xchg
pushw
sbb
popf
or
cmp
jnp
mov
lods
sub
push
mov
cmp
jp
sbb
inc
dec
xor
enter
dec
dec
mov
fnstenv
add
in
arpl
mov
mov
test
cmpsl
dec
scas
stc
sar
or
xchg
adc
add
js
mov
push
and
dec
sti
shlb
mov
xor
mov
pop
popa
fimuls
jo
frstor
dec
jge
or
sbb
sub
test
inc
xor
int
push
dec
in
lcall
je
jno
push
lds
in
dec
adc
lahf
ss
push
mov
jno
mov
jns
mov
testl
xchg
loopne
sbb
jns
mov
fwait
push
sbb
cs
push
dec
cmp
xchg
pop
pop
push
movsl
mov
cmp
jne
jno
andps
and
mov
mov
or
ja
push
xchg
lea
jge
cmc
arpl
int
sbb
jb
sbb
mov
xchg
enter
jne
mov
pop
mov
push
lock
fistps
rclb
nop
pop
aam
cmp
dec
loope
mov
js
lahf
sub
cli
cmpb
cld
in
mov
loopne
mov
js
pop
push
mov
mov
setnp
or
and
push
sbb
cltd
cmp
shl
jl
lret
lcall
jb
mov
or
dec
pop
inc
dec
pop
pop
pusha
mov
repz
movsl
ret
push
jl
lret
scas
mov
push
add
dec
test
xor
into
jecxz
mov
stc
ret
sahf
aaa
and
aas
dec
dec
and
cld
iret
loope
pop
repnz
push
or
ror
mov
push
aas
or
or
out
loop
add
jmp
adc
cmpsb
and
add
xchg
jbe
cmpsl
cld
adc
xor
aas
jno
xor
outsb
pop
aas
pop
and
push
xchg
mov
pop
push
hlt
or
aad
adc
inc
sbb
hlt
mov
adcb
mov
push
mov
and
hlt
call
stc
dec
inc
mov
jns
cmpsb
sub
xchg
or
add
call
mov
sbbb
mov
or
mov
loope
in
xchg
mov
jmp
test
push
out
inc
jp
push
fists
bound
lcall
lea
sub
dec
xchg
add
addl
push
pop
lea
les
push
sbbl
mov
aaa
cld
or
adc
push
pop
cmp
xlat
sub
mov
arpl
cmp
inc
or
gs
sub
dec
push
xor
test
daa
xchg
out
jmp
mov
andl
mov
cmpsl
or
test
pop
jbe,pt
inc
arpl
adc
out
mov
xchg
fwait
loope
sbb
xor
xlat
popf
mov
aad
mov
push
xchg
dec
inc
adc
call
icebp
loope
sub
dec
enter
inc
push
push
aas
pop
and
mov
sub
push
das
mov
out
push
inc
movsb
jae
jnp
leave
add
cmp
adc
mov
xchg
or
outsl
cmpsl
mov
xchg
stos
push
rorb
shrl
js
push
lfs
lea
in
scas
dec
xchg
in
rcl
in
sbb
gs
sub
test
in
xlat
shll
jnp
jg
and
sbb
f2xm1
nop
int3
inc
ljmp
push
arpl
push
xchg
and
icebp
into
cltd
push
jg
jp
xor
push
js
enter
fidivl
xor
notb
das
dec
test
ret
lds
mov
cltd
aaa
cmpsb
mov
push
mov
mov
fdivrl
jns
stos
enter
js
pop
enter
sbb
pop
int
jbe
in
xchg
leave
push
xor
mov
sub
pushf
ret
into
addl
dec
sbb
in
adcb
mov
shll
rclb
lea
test
in
pop
mov
push
and
scas
adc
cmpsl
into
enter
dec
rcrb
or
nop
mov
aaa
dec
mov
lods
xchg
cmp
aaa
inc
loop
ds
out
mov
jmpw
jns
push
adc
cmp
xchg
or
loopne
jecxz
jmp
pop
lea
aas
xchg
mov
rolb
cmp
add
lods
pop
pop
dec
test
test
mov
ds
jae
dec
aas
pop
dec
dec
inc
movsl
int3
leave
sbb
or
mov
adc
mov
dec
mov
jmp
add
aad
rep
int
clc
xchg
pop
pop
mov
mov
lods
xchg
pop
movsb
insl
or
pop
and
ret
aam
cltd
xchg
push
mov
cmpsl
jl
in
dec
movsb
cltd
fucomp
dec
sbb
jecxz
js
add
cmp
aaa
ret
pop
jmp
ds
mov
push
push
out
inc
repnz
xchg
out
mov
cli
sub
pushf
xlat
add
aam
fstl
push
push
add
mov
push
repnz
inc
lods
sbb
lret
push
insl
repz
mov
pop
loope
iret
insl
cmp
mov
call
inc
scas
mov
mov
lds
pop
outsb
add
mov
dec
pusha
dec
dec
dec
mov
orb
pop
sbb
sbb
ficomps
inc
js
out
push
div
test
pushl
add
or
jg
jl
push
pop
bound
xchg
test
jno,pn
call
sbb
or
mov
xchg
cmp
ja
xchg
test
cwtl
insl
pop
mov
pop
xchg
inc
int3
fadds
movsb
mov
stos
scas
test
shrl
mov
arpl
ss
push
cmp
inc
xchg
lahf
leave
adc
aaa
dec
push
or
rcll
push
pop
push
add
mov
pop
push
idivb
xor
pop
pop
sbb
or
sbb
jp
aad
add
lretw
push
push
movsb
in
ja
jns
adc
sbb
push
mov
xor
push
gs
jne
test
xchg
movsl
mov
lds
cmc
jbe
adc
inc
xor
push
gs
jne
test
xchg
movsl
mov
lds
cmc
jbe
adc
inc
xor
push
gs
jne
test
xchg
shlb
mov
cmc
inc
add
inc
xor
xchg
xchg
test
aas
jl
mov
dec
sub
jns
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sar
shr
fabs
leave
and
mov
inc
imul
add
stc
shr
fabs
leave
xchg
mov
mov
or
outsl
dec
adc
xor
xor
or
stc
fsubr
jmp
mov
mov
imul
jl
inc
insl
imul
stc
scas
mov
mov
cwtl
ret
dec
jo
data16
xlat
out
popa
clc
or
int3
sbb
add
push
scas
imul
lahf
xor
aam
push
les
adc
xor
pop
mov
cmpsl
movsl
push
xor
js
fldenv
push
test
mov
cmp
jmp
shr
shrl
adc
subb
mov
sahf
sbb
push
add
mov
sbb
pop
add
outsb
mov
push
or
xchg
jo
xchg
mov
sub
aad
out
test
outsl
and
mov
push
xor
andl
test
imul
push
out
xor
fsubr
icebp
fabs
leave
xchg
mov
imul
sbb
sub
and
xchg
movsb
jmp
loop
out
cld
xlat
mov
sbb
adc
pop
inc
sbb
stc
mov
mov
mov
repnz
add
jno
and
adc
inc
inc
jl
pop
mov
lods
mov
fnstcw
mov
imul
add
xor
and
sar
shr
fabs
leave
xchg
mov
mov
imul
add
xor
and
sar
out
mov
std
jne
adc
jo
add
popf
sarb
push
sub
outsl
dec
loop
sahf
movsl
xorl
jl
outsb
test
call
sub
std
mov
out
ljmp
push
fidivl
cmc
sbb
movsl
sbb
jecxz
ljmp
dec
jg
jmp
jg
jbe
out
mov
mov
int
cli
sbb
div
mov
xor
out
jne
cli
xchg
xor
push
stc
mov
repz
shrb
jp
in
adc
stc
popa
aam
push
jecxz
mov
lret
js
out
xlat
jl
adc
cld
lcall
daa
jecxz
cwtl
push
call
imul
and
adc
dec
cmp
loop
jne
xorl
addl
jnp
aas
push
aas
gs
inc
xchg
rcrb
out
loop
pop
add
cmpsb
cmp
pop
in
in
push
push
js
add
mov
mov
cmp
adc
cmc
jns
mov
insl
cmp
jno
or
cli
or
iret
add
xor
je
mov
sub
xchg
push
jmp
pop
xchg
push
ret
pop
sbb
mov
pushf
jp
pop
mov
lods
clc
mov
adc
mov
dec
cmc
mov
cld
cld
or
mov
cmp
lret
jecxz
aam
leave
test
mov
adc
mov
test
fists
je
mov
arpl
sbb
repnz
lods
mov
lret
push
mov
fidivrl
add
gs
das
inc
jle
push
sti
popa
imulb
xchg
mov
cmp
lods
sbb
rcll
cmp
ret
xor
jno
movsl
sub
inc
inc
in
cmp
push
daa
and
mov
xor
pop
push
pop
cmc
fnsave
iret
sbb
jmp
jmp
fs
int3
test
xor
push
fs
cli
cmp
out
aaa
jns
push
in
mov
shlb
jmp
sbb
mov
xor
rcrb
jmp
adc
rorl
push
fcmovne
negl
xor
test
into
dec
inc
pop
insb
ficompl
add
iret
mov
ficompl
cli
loope
sub
test
dec
push
in
push
cmpsb
mov
cmpb
test
push
sub
es
mov
sbb
push
mov
jmp
jae
aad
xor
loop
inc
imul
pop
mov
dec
mov
mov
sub
jg
data16
pop
dec
adc
xchg
xchg
dec
pop
das
test
stos
cmp
scas
add
inc
sti
jbe
nop
mov
movsl
jo
mov
jne
mov
pop
sub
out
sbb
lcall
cmp
js
icebp
jecxz
sbb
mov
in
jb
out
lret
lods
jbe
iret
insb
and
dec
jnp
push
fisubrs
pop
scas
inc
stos
pop
hlt
jge
cmpsb
adc
pop
adc
ret
aaa
dec
jns
sbb
test
xor
mov
sub
test
lret
push
aam
jl
xchg
dec
or
jle
rcr
mov
in
aaa
arpl
jge
mov
mov
mov
xchg
or
dec
movsb
lods
xchg
mov
addr16
cmp
insl
scas
in
aad
dec
xor
mov
into
or
pushw
insb
or
dec
repz
inc
mov
jmp
je
sub
pop
inc
mov
lods
scas
adc
cmovp
cmp
lea
mov
fwait
xchg
jge
inc
and
popa
call
xchg
hlt
xor
or
ja
in
sarb
mov
add
out
inc
sbb
fnstenv
mov
mulb
loopne
sbb
cltd
push
adc
sub
in
and
jmp
cmp
loope
mov
and
mov
pop
lea
dec
les
push
jno
mov
pop
loope
push
fcomip
push
stos
jmp
enter
push
lods
mov
jmp
int
sub
insb
stc
ss
cwtl
lahf
stos
ficoms
loop
shl
leave
dec
jbe
rcrl
and
leave
sbb
mov
repz
mov
in
dec
push
cmc
pop
push
inc
mov
pop
and
mov
sbb
push
jge
gs
sub
cmp
pop
pop
cmp
cmp
sahf
insl
dec
lods
lods
mov
outsl
jne
and
xor
mov
testb
dec
xor
call
mov
add
jecxz
ljmp
arpl
sbb
or
mov
cwtl
sub
inc
or
out
ds
mov
sub
fistl
test
mov
mov
jge
pop
negl
inc
movsl
xlat
sub
rcll
ljmp
das
inc
int
push
mov
lock
aaa
push
xchg
subl
pop
lods
adc
mov
push
sub
das
pusha
jns
ljmp
inc
pushf
push
je
jno
jo
imul
mov
test
int
mul
jl
jecxz
xchg
test
outsl
fsubrp
cmp
in
outsb
ljmp
insb
cmp
xchg
in
fnstenv
cvtdq2ps
sub
cli
and
ss
xchg
outsl
mov
aas
xchg
dec
stos
ret
or
sti
push
dec
clc
jg
inc
aaa
inc
inc
mov
jne
lea
clc
out
xchg
dec
insb
xchg
sub
add
xchg
mov
enter
mov
int
sbb
scas
test
leave
cld
pop
pop
lret
out
hlt
bound
fcom
sub
xor
mov
fcmovne
xor
into
inc
in
fcoml
sahf
mov
jnp
sti
pop
sbb
sub
and
imulb
jp
loopne
dec
fbld
cld
test
imul
sub
sbb
cld
sub
dec
add
push
and
in
fcomp
push
pop
inc
sub
and
sbb
std
sbb
in
iret
mov
das
clc
cwtl
jecxz
mov
fwait
mov
repz
scas
adc
test
mov
insb
push
nop
inc
lods
or
adc
ret
mov
pop
jbe
jl
ret
repnz
repz
push
por
vpmacssdd
push
mov
out
mov
out
arpl
sbb
loope
leave
inc
movsl
ret
inc
outsl
lea
out
dec
ja
fmuls
mov
pop
arpl
dec
mov
sub
mov
insl
fidivrl
enter
xor
loop
sub
inc
sub
pop
mov
or
addr16
pop
scas
out
ljmp
in
ja
stc
xchg
sbb
mov
mov
and
sbb
jecxz
mov
dec
pop
hlt
mov
jb
popw
jecxz
popf
mov
sahf
and
in
stos
loope,pt
or
clc
dec
adc
jle
xor
jge
inc
dec
jle
xor
imul
cmp
into
pop
inc
mov
and
out
or
push
or
xor
push
xchg
shr
enter
cmp
pop
in
enter
mov
sub
fsubs
lods
sub
outsl
mov
inc
subb
fdivrs
clc
add
or
mov
bound
test
mov
cmc
push
xchg
push
xlat
loope
fwait
test
or
sarb
mov
mov
lods
dec
out
xor
or
push
sub
xchg
inc
lret
movsb
add
xchg
mov
push
jp
and
shr
aam
xor
push
ljmp
inc
adc
mov
or
out
cmp
aaa
nop
jl
sub
adc
pop
jle
aam
jbe
lds
xchg
lret
jnp,pt
cld
in
cmp
xchg
ds
mov
test
jl
in
and
ret
xorb
insb
fwait
jp
and
push
mov
sbb
scas
lret
push
pop
xchg
sbb
ficomps
fmul
cmp
or
xor
aas
arpl
inc
sti
mov
mov
mov
mov
out
add
rorl
sub
ficompl
cld
out
mov
mov
add
inc
popa
jne
lds
lods
jb
pop
daa
cltd
dec
xchg
icebp
pop
aas
cmp
lods
pop
xchg
cmp
and
mov
aas
lret
int3
fs
dec
jecxz
xchg
loop
xor
cmp
scas
pop
das
push
addr16
mov
mov
stos
out
adc
sbb
push
dec
add
add
sbb
into
or
in
js
sbb
pop
and
jmp
fidivrl
fs
xchg
xchg
inc
push
dec
pop
ror
lock
pop
mov
test
lret
push
cld
insl
test
push
gs
jns
pop
imul
fstps
cmp
xor
fbld
in
mov
mov
cmp
and
pop
rorb
and
add
mov
mov
dec
xchg
aas
jp
mov
in
xchg
hlt
jo
fiaddl
dec
jbe
fbstp
ljmp
jno
addr16
scas
xor
sbb
ret
rcrl
ds
es
xchg
sub
add
aaa
fstl
in
xchg
mov
sbb
jp
jg
fidivs
orb
add
pop
push
add
scas
sbb
xchg
mov
stos
add
outsb
sbb
add
cmpl
insb
add
int
rorl
push
mov
aad
add
add
inc
xor
push
popf
push
push
outsb
sub
and
mov
lcall
mov
test
outsb
out
fisttpll
push
sbb
arpl
xor
js
push
pop
insl
lahf
cmp
fsubrl
adc
aam
lock
sbb
ljmp
xchg
cmp
adc
sub
sbb
lock
popf
bound
mov
jl
int3
imul
mov
sub
pop
xchg
dec
ror
cli
pop
mov
faddp
test
sbb
xorl
sub
int3
pusha
addr16
ret
push
or
imul
fnsave
push
cli
pop
and
in
iret
int
lock
shlb
cmp
icebp
int3
cmpsb
adc
push
xor
push
inc
stos
add
xchg
aaa
mov
popa
iret
bound
je
push
nop
jbe
test
pop
pop
xorl
pop
shll
add
inc
inc
jo
test
jmp
mov
pop
cmp
pop
add
loop
mov
cmpsl
mov
lcall
or
cmp
loopne
inc
jecxz
and
fs
and
xchg
sbb
inc
cwtl
outsb
inc
jl
mov
leave
adc
leave
je
data16
adc
mov
fsubr
mov
and
loope
popf
test
sbb
push
pop
jno
ljmp
loopne
dec
mov
lcall
dec
jl
sub
mov
and
aad
fs
add
in
push
mov
or
in
inc
iret
dec
and
mov
xchg
jg
fwait
addr16
pop
and
push
cltd
mov
adc
jmp
push
xor
orb
mov
clc
xorl
and
sub
test
movsb
notl
add
nop
mov
add
out
sbb
adc
clc
xchg
mov
or
les
lock
int3
fsubl
das
leave
sub
pop
ja
ss
and
aaa
sub
repz
in
test
leave
ret
adc
ret
push
xor
hlt
or
cltd
roll
or
stc
sub
rcll
adc
adc
dec
jg
cmp
or
mov
xchg
jmp
lock
inc
xchg
lock
xor
mov
and
ret
sbb
add
lret
xchg
and
mov
xchg
jae
and
cmp
lock
icebp
clc
mov
mov
add
sub
ja
dec
or
adc
rclb
xlat
rclb
xchg
push
xchg
push
mov
xlat
fcmovnu
movsl
andl
push
notl
frstor
in
lcall
mov
pop
pop
cltd
and
aaa
sub
cmp
test
fwait
cmp
out
dec
jp
pusha
and
sub
sti
ret
int
dec
daa
lcall
scas
loopne
pop
mov
sub
dec
mov
jp
movsb
inc
inc
lods
movswl
jecxz
push
pushf
ret
mov
jg
jl
or
daa
test
push
decl
push
stos
cli
xchg
mov
test
sti
jge
jo
push
test
add
inc
std
lret
mov
pop
sub
jns
imul
jp
ds
push
cmp
inc
mov
jno
sbb
imul
pop
mov
mov
stos
jp
pop
aad
jno
sbb
ja
jle
adc
inc
cmp
andl
sbb
xor
imul
xor
stc
cmpsb
lret
insl
out
and
cmp
pop
sub
inc
jp
iret
pop
test
pop
jle
xchg
lcall
pusha
in
dec
call
movsl
mov
mov
subb
mul
mov
fsubl
sbb
js
adc
cmp
mov
in
xor
push
push
scas
dec
jg
and
dec
in
and
jl
sbb
mov
test
jmp
and
inc
js
addr16
testl
add
cmp
jbe
mov
xchg
add
mov
mov
xchg
cmp
add
pop
adc
popl
in
and
loop
or
mov
ret
rolb
imul
popa
pushf
and
mov
ljmp
inc
jns
aad
xchg
push
xchg
xor
in
inc
mov
mov
add
pushf
inc
pop
lahf
jle
movsl
push
pop
adc
xchg
mov
xor
add
divl
inc
sbb
xorb
mov
sahf
pop
and
sti
sbb
cwtl
movsl
arpl
push
stos
scas
lret
mov
lret
push
push
mov
pop
mov
sub
sub
or
jno
jno
mov
lods
shlb
imul
mov
cmp
xchg
push
pop
inc
add
stos
push
sub
lods
and
loop
jge
std
loope
mov
out
stc
and
xchg
and
cmc
nop
je
push
test
aad
pop
cmpsb
pop
in
jg
incl
fildll
xchg
cmp
lcall
fxch
lock
xor
dec
mov
sti
es
inc
mov
sub
clc
loopne
fistps
addr16
scas
jbe
popf
jns
jecxz
jecxz
aas
into
adcl
lock
jecxz,pt
jmp
sub
test
xchg
outsb
push
pop
adcl
lds
xor
fcomps
cmp
int
xchg
insl
std
jbe
pop
fdiv
stos
out
jl
add
subb
adc
dec
xchg
push
rol
xchg
and
fisubrl
dec
ds
pusha
sub
pop
movsb
and
icebp
mov
push
pop
add
imulb
cwtl
lcall
cwtl
cs
adcl
jge
dec
sbb
shrl
adc
lahf
and
jecxz
mov
aaa
mov
je
bound
rcrl
aad
int
andl
notb
leave
jo
inc
aaa
adc
xchg
or
push
cld
pop
scas
mov
push
jne
pop
decl
lock
jg
fldt
mov
jns
mov
mov
xor
mov
push
cmp
daa
jecxz
cwtl
dec
js
or
cmpsb
xor
ljmp
lcall
into
inc
sahf
les
xor
jg
jge
loope
cmp
cmp
pushf
push
add
data16
jae
and
lea
xor
push
sbb
mov
cmp
cmp
movsl
js
js
cmpsb
mov
sbb
mov
jae
iret
bound
pop
mov
mov
cmp
xor
lea
sbb
subl
lods
subl
xchg
add
addr16
test
cmp
mov
or
inc
inc
xchg
push
sarb
icebp
xlat
mov
in
fs
fs
scas
push
insl
add
add
test
mov
jecxz
jno
aam
push
outsb
pop
test
push
lcall
sbb
shll
lea
aaa
inc
stos
dec
adc
and
outsl
add
scas
jnp
sahf
repz
jl
cltd
roll
scas
mov
xchg
dec
fistpl
xor
xchg
in
ficoml
ret
sub
mov
hlt
hlt
insl
jne
ret
stos
xorb
ljmp
out
cmp
aaa
fdivr
mov
jl
xor
xchg
sub
cmp
and
sub
or
fdivrs
in
addr16
mov
mov
data16
mov
and
and
pusha
or
loope
inc
cmc
leave
dec
imul
enter
and
mov
mov
andl
xchg
enter
mov
mov
mov
mov
or
test
sub
mov
popf
adc
xor
dec
or
sub
insb
pop
add
es
dec
sbb
sub
mov
sbb
jnp
fldt
jns
mov
repz
pop
mov
xchg
cmpsl
push
inc
xchg
pop
jle
adc
mov
loop
cld
push
dec
mov
cmc
inc
or
mov
loopne
lods
cmp
or
jmp
pop
and
fwait
add
fs
ljmp
sahf
loope
push
cmp
frstors
add
xor
mov
gs
jg
sbb
outsb
pop
js
sbb
push
mov
mov
mov
add
xchg
stos
adc
rcll
add
fcomps
mov
push
jp
inc
shrl
data16
repnz
dec
aad
gs
cmp
out
and
mov
jno
jbe
sub
push
cmp
and
jns
sarl
jmp
rclb
fnstsw
jbe
inc
fisubl
orl
gs
loopne
cmc
add
sbb
mov
scas
pop
mov
and
mov
mov
test
or
and
inc
pusha
imul
xchg
imul
push
push
out
int
bswap
pop
mov
jmp
sbb
pop
adc
dec
js
and
popa
js
cmp
push
inc
cmpsb
mov
lea
dec
mov
les
or
or
pop
dec
adc
sub
lahf
iret
dec
aaa
or
lock
cli
adc
mov
or
mov
out
aas
test
ret
jecxz
xor
ret
pop
movsb
xor
dec
xchg
popa
imul
sti
jmp
iret
adcb
xorl
xchg
test
movsl
or
popa
aad
mov
xchg
test
imul
frstor
mov
pop
mov
mov
mov
jns
outsl
repnz
dec
sub
mov
subl
xchg
arpl
aaa
dec
mov
pushf
pop
fsubl
fs
imul
pop
cld
cmc
push
mov
jno
hlt
mov
loop
mov
pop
cli
and
mov
cli
in
pop
in
xor
pop
int3
ljmp
add
test
dec
lahf
mov
dec
je
jle
mov
or
dec
call
adc
stos
push
jo
xor
stc
lea
lods
dec
push
insb
adc
pop
jae
lret
jmp
jle
pop
pop
jns
sbb
adc
inc
and
cmpsl
cmpsb
jne
ljmp
into
aad
cmpsb
orl
cli
mov
nop
bound
aas
enter
dec
add
fidivrs
adc
and
dec
out
or
push
push
fs
int3
int
fcmovbe
dec
cmc
inc
mov
xchg
out
or
popf
or
xlat
stc
hlt
xor
fwait
xor
push
clc
fidivrs
addr16
adc
adc
sub
push
in
lods
jecxz
andl
jno
jecxz
hlt
mov
mov
mov
mov
test
push
xchg
xlat
cs
sbb
test
dec
repz
clc
bound
aad
in
push
jno
and
aam
inc
stc
add
pop
sub
testl
jle
push
mov
cwtl
xchg
or
xchg
push
into
iret
fndisi(8087
sti
jb
cmp
int
lock
sbb
bnd
out
push
aaa
clc
scas
cmp
cmp
jnp
movsl
cmp
pop
jecxz
das
sub
and
outsl
dec
testb
sub
xchg
stc
dec
and
ja
pop
lea
sbb
scas
or
dec
fwait
pop
shlb
popa
cmp
inc
or
sar
into
pusha
icebp
sbb
pop
nop
int
lods
cmp
lahf
xor
adc
ss
cmp
push
sbbb
cmp
popf
sub
ret
pop
sub
and
mov
push
int
mov
leave
xchg
mov
mov
imul
add
xor
and
sar
shr
fabs
leave
xchg
mov
mov
imul
add
xor
and
sar
shrl
loope
xchg
mov
mov
imul
add
xor
and
sar
ret
jmp
xchg
mov
and
fistpl
ds
into
out
notb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
pop
pop
inc
push
jp
or
and
push
adc
xchg
mov
cmp
mov
lcall
adc
push
xor
or
inc
sub
dec
lret
orl
lcall
mov
mov
or
cmp
xchg
stc
mov
loope
call
xchg
push
inc
push
adc
pop
sbb
lea
jmp
dec
iret
or
test
adc
fsubl
lcall
insb
scas
jg
dec
push
repz
pushf
stos
js
scas
mov
pop
pop
pop
push
rol
mov
or
pushf
xchg
ficoml
lcall
and
adc
add
inc
sbb
mov
out
lret
push
fisubl
dec
add
jne
lcall
lds
dec
into
out
mulb
inc
mov
mov
aam
push
mov
push
mov
cld
imul
cmc
sbb
mov
add
stc
rcr
arpl
leave
pop
mov
mov
and
jp
out
push
bound
jae
icebp
or
inc
sub
nop
sub
and
sub
add
divb
push
cmp
rorb
sar
hlt
lods
ret
xchg
mov
push
aas
inc
sbb
dec
arpl
jg
fistps
outsl
push
lods
repnz
ljmp
ret
ret
xchg
sti
nop
es
ss
pop
sub
pop
sbb
jae
arpl
xchg
fiaddl
mov
lcall
adc
push
jp
or
inc
sub
arpl
xchg
fiaddl
mov
lcall
adc
push
test
mov
dec
inc
ficompl
stc
mov
shll
pop
xor
sbb
jle
jle
test
fiadds
loopne
test
or
jnp
adcl
lock
hlt
jbe
test
repnz
fistpl
mov
jp
jns
imul
bound
adc
outsb
adcl
inc
push
fldenv
or
test
jae
sbb
xchg
mov
push
mov
pop
lods
sub
xor
jp
jmp
mov
leave
insl
and
fidivl
cwtl
lret
iret
xchg
stos
push
movsb
nopl
test
mov
cmp
loopne
mov
repnz
ret
mov
mov
xchg
cmp
icebp
or
hlt
add
incb
popf
xchg
sbb
fldenv
pop
mov
jmp
push
sub
pop
fisubrl
or
call
gs
es
mov
in
sbb
lea
push
nop
les
push
xor
push
in
mov
imul
mov
mov
mov
dec
cmp
xor
sbb
inc
push
addb
subl
sbb
sbb
lret
add
push
pushf
cmp
std
fidivrs
icebp
fstps
pop
mov
pop
push
pop
ficomps
ljmp
movsl
fsub
mov
inc
fcompl
inc
rorb
out
hlt
cmp
xor
jae
popf
jo
sub
xchg
mov
mov
jno
mov
loope
dec
std
add
mov
cmp
fmull
xor
pop
les
lods
or
or
xor
mov
xchg
sub
cmpb
js
inc
mov
add
mov
js
cmp
adc
popa
mov
push
dec
xor
lahf
repnz
mov
insl
sbb
sbb
add
fnstenv
ljmp
cmp
das
mov
jp
pushf
jp
jl
sbb
enter
mov
jecxz
dec
mov
mov
mov
jnp
scas
lds
stos
mov
adc
xchg
mov
mov
bound
shlb
fcompl
xchg
and
gs
popa
and
fildl
cmpb
imul
pop
repnz
jge
xor
adc
arpl
fistpll
xchg
inc
sbb
jp
lret
fs
sti
adc
sbbb
lret
or
push
pop
xchg
or
clc
pop
push
lcall
lahf
mov
add
mov
inc
mov
fsubrl
lret
mov
cmp
add
push
mov
outsl
push
imul
arpl
nop
sbb
mov
vmovdqu
loop
inc
or
test
in
mov
testl
enter
mov
sbb
in
aas
mov
lahf
cwtl
mov
push
out
inc
jp
aaa
dec
lcall
lahf
sbb
icebp
sbb
pop
sbb
sbb
sub
loop
jns
add
outsb
mov
add
not
adc
mov
mov
mov
adc
xchg
cmpsb
ja
xor
mov
and
in
inc
mov
or
sub
loopne
push
inc
inc
xor
shufps
adc
rcr
cmpsb
in
mov
and
dec
xchg
inc
jae
imull
lea
into
gs
cmp
and
cs
in
nop
adc
enter
shrb
lods
mov
out
xor
inc
jb
add
bound
sahf
cld
test
scas
mov
mov
sub
cmpsl
cli
add
lea
jmp
mov
loope
or
fsubrl
ficoml
pop
inc
mov
pop
push
xchg
fcomp
push
shll
in
jbe
push
test
mov
lds
inc
mov
sbb
jbe
xchg
out
adc
pop
fisttps
outsl
push
rol
push
in
mov
js
xchg
jnp
and
icebp
fisubl
ljmp
test
into
jb
movsb
jp
lea
das
out
into
je
mov
scas
adc
out
ret
enter
loope
out
mov
add
pop
repz
sbb
push
mov
mov
mov
mov
std
rolb
jo
mov
sub
dec
pop
adc
ljmp
pop
adc
andl
sar
add
xor
jno
push
lret
jmp
ss
aas
push
mov
out
jl
pop
fmull
pop
insl
aas
xlat
sub
sti
shll
idivb
dec
and
mov
mov
mov
push
cmp
inc
xchg
cwtl
call
adc
nop
lret
stos
push
xor
cmp
mov
inc
insl
lret
insl
scas
pop
scas
pop
add
psllq
xchg
ret
and
sbb
out
cwtl
aam
enter
popa
xlat
sbb
popa
dec
roll
push
push
dec
into
lock
mov
mov
mov
stos
or
mov
cmp
sub
mov
pop
sahf
dec
cld
jle
imul
out
test
push
cmp
arpl
fs
or
xor
call
push
pop
enter
dec
mov
dec
cltd
dec
or
mov
hlt
mov
ds
mov
cld
mov
adc
xchg
fsubr
adc
bound
sbb
arpl
sbb
in
sub
out
cwtl
mov
adc
call
pop
lret
cmpsb
xchg
cmc
sahf
iret
cmp
adc
popa
mov
xchg
cmp
jnp
stos
insb
add
jge
cmc
mov
xchg
jbe
push
cli
sub
add
or
and
dec
ds
or
fdivs
xchg
mov
icebp
jno
pop
lds
jb
jp
cmpsl
into
call
sub
xchg
dec
rorb
jle
mov
sub
push
dec
pop
sbb
ljmp
pop
mov
pop
ror
mov
lret
inc
into
loop
mov
out
mov
adc
sub
mov
mov
dec
cmc
repnz
scas
push
or
fcoml
push
adc
inc
mov
mov
repnz
outsl
popf
mov
jno
fs
pop
adc
inc
test
ret
adc
push
mov
outsb
dec
jae
jp
test
repnz
push
sti
jo
mov
push
fldenv
aas
loopne
push
aaa
fldenv
xor
hlt
jb
add
lea
mov
test
inc
push
cmpsb
daa
inc
adc
mov
xchg
xor
das
mov
push
xchg
mov
add
out
sti
fidivrs
stos
jp
xchg
push
loope
cs
or
inc
push
mov
movsb
bnd
inc
outsb
test
sahf
cs
or
mov
lcall
adc
std
lods
sbb
mov
cmp
popa
pop
movsb
repz
pusha
mov
in
in
sbb
dec
orb
ja
pop
mov
std
aad
iret
mov
dec
push
adc
dec
jge
hlt
sub
sbb
je
movsb
xor
lret
jmp
rcrl
ss
sbb
xchg
stos
xor
cli
stos
out
mov
js
adc
mov
cs
pop
dec
or
cmp
mov
fmuls
bound
dec
ja
dec
pop
adc
xchg
outsb
sbb
cld
fsubl
loop
xchg
mov
xor
hlt
lods
cmpsb
or
dec
adc
icebp
in
and
decb
jb
jne
inc
jno
jae
sbb
mov
popa
mov
rcrb
pop
fwait
sbb
fidivl
dec
icebp
les
pop
cmp
out
ja
imul
repnz
popf
cmp
push
cmp
pop
jp
mov
sub
nop
mov
cltd
xchg
fwait
mov
pop
orl
lcall
lcall
xchg
dec
adc
jmp
imul
mov
and
mov
push
mov
jmp
dec
nop
out
mov
outsb
jp
jl
in
faddl
pop
les
ds
vpmovzxbq
loop
fidivs
add
fmulp
popa
cltd
rcll
mov
xor
js
icebp
mov
or
pop
and
mov
lea
es
mov
test
cltd
cmp
jecxz
mov
mov
out
add
stc
dec
stos
sub
fyl2x
xorl
mov
push
push
cwtl
es
aad
nop
idivb
loopne
dec
jns
ret
or
sahf
pop
fiaddl
xor
pop
mov
inc
jbe
sahf
loope
push
lods
jge
adc
add
movsb
enter
sub
cmp
jecxz
hlt
push
push
fmull
inc
je
sbb
out
push
mov
cmp
xchg
shr
cmp
mov
sub
insb
pop
clc
adc
sti
imul
add
dec
and
in
lcall
adc
mov
fldenv
xchg
sub
jg
stc
lea
or
cmpsl
xor
xor
loope
pop
dec
cltd
in
insb
xchg
sbb
mov
jecxz
je
cmpsl
pop
lea
sbb
fisubrs
push
in
sub
idivl
inc
pusha
loope
movsb
sbb
add
roll
cmc
pusha
jne
nop
sbb
fisttpll
es
push
mov
vminsd
mov
inc
cmp
je
fildl
cmp
cwtl
jl
dec
bound
xchg
dec
mov
fstpt
mov
xchg
mov
out
arpl
mov
in
jns
mov
outsb
int3
xlat
mov
pusha
mov
in
ja
adc
xchg
aam
mov
add
and
pop
loop
lods
xchg
or
inc
push
rcl
mov
fs
dec
dec
test
int
pop
addb
xchg
inc
lret
js
sub
out
fucomi
adc
es
das
cmp
pushf
js
xor
loop
loope
ret
dec
pop
aas
sbb
test
outsb
outsb
outsb
ret
cmp
cmp
adc
subb
in
jmp
movsl
arpl
ljmp
inc
dec
int
cltd
mov
cmc
sub
xchg
je
lret
neg
pop
insl
add
inc
jne
sub
cmp
mov
lahf
xor
ret
pop
xlat
mov
ret
cmp
insb
stos
loop
jbe
gs
ret
jg
lods
lea
dec
cld
cwtl
cmpsb
lcall
mov
jmp
or
xor
or
test
pop
xchg
and
loope
dec
fmuls
xchg
loope
mov
cmp
cmpsl
dec
mov
pop
sahf
popa
cmp
insl
sbb
mov
outsl
clc
jno
inc
push
sbb
or
pushf
iret
jg
mov
push
hlt
mov
and
xchg
es
ds
mov
push
or
mov
mov
out
xor
xchg
movsl
std
rcrl
adcl
xchg
push
mov
lds
push
jnp
sub
pop
sbb
or
mov
xchg
mov
jl
les
mov
dec
jne
mov
pop
into
mov
cmpsl
ret
lds
push
mov
mov
lahf
cs
bswap
iret
in
imul
and
push
insb
mov
push
adc
outsb
xchg
int
xchg
sub
cmp
adc
jo
nop
sub
sub
aas
out
push
call
fildl
xchg
lea
lret
inc
or
dec
stc
imul
push
js
jns
and
popa
inc
into
ret
out
pusha
xor
dec
cmp
movsb
lret
les
jecxz
daa
sub
sub
jno
ljmp
mov
movsb
scas
dec
add
pop
dec
xchg
or
xorb
xchg
cmpsl
ljmp
into
add
mov
mov
mov
fwait
mov
and
sbbl
lret
inc
inc
pop
xor
leave
rclb
int3
push
in
imul
jns
inc
mov
icebp
cltd
inc
mov
mov
sbb
cwtl
dec
scas
sub
lret
cmc
sbb
dec
rorb
mov
out
pushf
jns
cmp
imul
adc
das
daa
stc
jbe
and
sub
and
imul
in
fdivp
jbe
dec
dec
xchg
loopne
pop
push
lock
lds
aas
lret
popf
fs
cmp
dec
mov
adc
sbb
inc
dec
push
sub
mov
mov
sub
test
out
les
aaa
ja
xlat
cltd
pop
outsb
insb
jle
jno
inc
es
pop
cmp
mov
aaa
ja
test
outsb
add
push
scas
addr16
adc
imul
xchg
lcall
push
push
mov
adc
adc
in
mov
roll
cmpsl
push
fimull
mov
idivb
push
push
leave
push
fidivl
insl
ds
jp
mov
inc
mov
sbb
stc
mov
into
clc
dec
jecxz
outsb
gs
adc
prefetchwt1
or
fstpl
mov
jge
insb
ss
mul
scas
fs
les
lods
shl
add
arpl
into
push
test
js
push
dec
xchg
and
fidivs
push
xchg
ffreep
inc
outsb
dec
inc
in
push
cwtl
and
aad
jo
push
mov
jecxz
imul
pop
call
push
dec
jle
lock
mov
lds
dec
or
addr16
push
cmpsl
adc
sahf
shll
jnp
xorl
out
scas
jmp
cld
pusha
mov
hlt
mov
or
inc
xor
lcall
lods
mov
stos
mov
cli
into
ffreep
add
iret
rcrb
ret
pop
in
mov
insl
dec
and
xchg
pop
sbb
cmp
sbb
adc
jmp
add
fbld
loopne
jne
inc
outsb
dec
xor
xchg
add
popf
movsb
and
pop
imul
adc
xor
pop
popa
dec
addr16
pop
unpcklps
pusha
cmp
mov
jmp
mov
pop
int
push
nop
jg
xor
xchg
add
pusha
insl
mov
inc
or
push
mov
jbe
mov
mov
xchg
jle
add
xchg
xor
sub
ljmp
scas
push
fdivl
xchg
xor
out
jbe
jnp
repz
shr
out
jno
xchg
mov
popf
xchg
aam
es
addps
pusha
jp
scas
aam
lret
dec
jmp
push
pop
mov
jp
out
das
flds
push
push
adc
mov
and
inc
dec
popa
das
xchg
shrb
lahf
xlat
and
xchg
dec
sbbb
jp
and
adc
rcl
aaa
jg
fwait
fs
mov
mov
je
popa
mov
in
jno
push
testb
cli
ja
push
lret
scas
sub
outsl
add
lock
bound
pop
ret
hlt
pop
cmpsl
ret
xor
dec
std
lret
jns
out
sub
inc
add
les
inc
fdivl
sbb
dec
popa
aad
or
sbb
or
mov
pop
jo
adc
sti
pop
jle
xor
xchg
fisubl
mov
cmp
dec
cli
loopne
inc
lahf
xor
push
sbb
xor
cmpb
jle
mov
jbe
in
in
push
cmp
cmp
into
icebp
sub
mov
subl
pop
js
or
inc
pop
inc
add
push
ja
jge
flds
add
nop
pop
sbb
and
jns
and
loopne
inc
mov
out
jle
push
mov
fs
adc
jae
fnstenv
jl
cmp
jmpw
pop
push
fnstenv
xor
insl
cmp
dec
clc
dec
inc
pop
pop
sbb
shrb
pop
jl
adc
repnz
gs
jnp
push
fs
ljmp
addl
dec
out
loope
shll
mov
lret
xor
inc
push
mov
mov
mov
mov
fists
mov
mov
pop
fisttpl
ret
mov
xchg
js
adc
or
push
xorl
cmc
inc
pop
ret
push
xor
stc
icebp
mov
jmp
lret
insl
add
jno
aas
mov
add
in
jae
cld
cmc
inc
pop
mov
pusha
addr16
fiaddl
insl
pop
mov
xor
xorb
sbb
push
jnp
push
gs
push
cmc
scas
ja
icebp
mov
xor
nop
icebp
pop
adc
out
lea
mov
push
add
pusha
sbb
xorb
sub
inc
mov
push
addr16
stos
lahf
subb
cmp
adc
push
mov
pop
mov
leave
test
in
and
aad
imull
mov
pushf
clc
push
push
pop
xchg
and
mov
pop
jmp
out
push
mov
dec
adc
je
lods
xchg
inc
iret
rol
cmp
stc
sub
adc
loopne
dec
int
frstor
sarl
sbb
cld
push
popf
scas
lahf
pushf
dec
popa
dec
push
aad
sub
pop
mov
out
in
ss
ds
imul
pop
int3
xchg
xchg
push
mov
divb
cmp
aas
scas
icebp
mov
ficoml
subl
mov
movsb
test
dec
outsb
sub
cwtl
lret
inc
mov
iret
clc
cmove
xor
inc
xchg
fcmovb
adc
mov
pshufw
jnp
pop
popf
mov
aad
or
xlat
scas
adc
outsl
cmp
add
dec
sub
push
add
dec
or
sub
jg
call
stos
out
test
js
push
xchg
pop
shl
jns
in
negb
and
lods
hlt
mov
insl
add
ljmp
xor
repz
sti
inc
jl
ja
in
movsb
imul
ds
inc
xlat
out
lds
ds
in
adc
mov
mov
sbb
cli
out
cmp
ljmp
pop
dec
and
into
gs
insl
and
sbb
sbb
dec
push
sar
push
xchg
add
inc
dec
je
ficoml
aaa
data16
ja
jecxz
rcll
mov
call
lds
push
push
fisubs
fldcw
adc
mov
ret
adc
push
mov
or
clts
push
ss
fisttpll
iret
xchg
shlb
ds
test
and
das
push
cmp
lret
sti
out
add
pop
lret
ss
sti
inc
scas
pop
test
loopne
add
stos
lock
xchg
push
mov
loop
jns
cmpb
mov
out
loop
mov
sub
mov
fstpt
lcall
cwtl
xchg
push
aas
add
ljmp
or
fidivrl
mov
int
pop
sub
fstpt
lahf
icebp
sub
sbb
lods
push
mov
lea
cmpsl
sar
inc
js
pop
add
adc
mov
ret
adc
fisubs
pop
pusha
hlt
les
cs
mov
xor
lahf
mov
xchg
mov
es
dec
and
inc
pop
pop
push
dec
ss
inc
and
cmc
test
enter
or
jge
dec
aaa
sbb
add
cmp
mov
lret
cld
lock
ficompl
fsubl
and
fiadds
jge
xchg
xor
xchg
sar
fsts
fs
scas
out
inc
mov
pop
sub
fdivrl
imul
xchg
sbb
jmp
xchg
test
sub
mov
out
cmc
int3
xor
nop
pop
jbe
mov
dec
flds
lds
cld
sbb
mov
leave
mov
icebp
inc
in
test
mov
sti
add
ficoml
add
sbb
xchg
push
call
std
mov
shl
cmp
add
xor
sbb
dec
sub
adc
dec
addl
mov
xchg
dec
insb
or
inc
mov
imul
jno
ljmp
arpl
sahf
dec
mov
dec
cmc
pusha
add
and
addl
sub
mov
cmp
adc
lods
xlat
dec
into
mov
push
jae
mov
fbstp
mov
sub
inc
dec
sub
jnp
xor
mov
pop
sar
sub
mov
mov
daa
sub
arpl
test
imul
test
xor
inc
pop
dec
cli
sahf
jl
lahf
xor
pop
xchg
push
mov
pop
mov
fldt
mov
cmp
pop
mov
xor
sbb
repz
cs
mov
cmpsl
nop
or
imul
mov
dec
outsl
or
ds
fs
int
mov
adc
mov
jge
in
mov
pop
shll
or
test
push
insl
cmc
cmp
fnsave
add
cld
dec
scas
clc
lahf
std
adc
jnp
lcall
pop
inc
stos
testb
xchg
adc
arpl
jg
cld
cmc
jmp
mov
mov
and
mov
mov
adc
shr
add
sti
dec
daa
popa
das
mov
std
mov
xchg
inc
jo
sbb
ret
push
leave
xor
loop
sub
xor
pminub
movb
insl
xchg
jnp
dec
pop
or
mov
pop
inc
sbb
cmp
addr16
push
mov
xor
out
out
and
out
test
pop
pop
loop
dec
xlat
sahf
icebp
lods
or
fdivrs
imul
pop
or
sub
and
pop
xor
inc
mov
sahf
sahf
cmp
loop
xchg
loope
pop
cld
call
push
sahf
add
add
repnz
sub
push
sbb
jae
arpl
xchg
fiaddl
mov
lcall
adc
push
jp
or
inc
sub
arpl
xchg
fiaddl
mov
lcall
pop
push
or
jp
lcall
arpl
xchg
fiaddl
mov
mov
stos
cli
push
pop
pop
testl
arpl
push
or
repz
sub
cli
aam
stos
adc
adc
mov
pop
leave
es
add
insb
fcoms
sbb
js
pop
loope
adc
and
jno
popa
fcoms
sub
test
dec
loope
adc
and
jno
popa
ret
mov
sbb
sub
pop
gs
shll
cld
dec
adc
push
and
mov
cmpsb
dec
pop
orl
mov
add
cmc
stc
into
add
fs
arpl
lea
push
sub
sbb
xchg
shrl
push
imul
xlat
push
clc
mov
lods
xchg
clc
mov
js
js
mov
pop
adc
es
cmp
mov
daa
popa
js
push
call
roll
nop
test
ja
js
enter
cwtl
ljmp
dec
sub
addl
loope
sub
mov
push
jp
lret
bnd
sub
sub
sbb
xchg
or
shrb
and
jno
popa
rcll
mov
outsl
icebp
dec
loope
je
bound
xor
cs
push
movsb
in
loope
in
ret
ja
add
xchg
xor
push
clc
pusha
popf
xor
or
xor
and
jecxz
out
int3
jl
pop
sbb
jbe
add
ja
inc
in
adc
inc
clc
jno
popa
fcoms
or
js
dec
loope
adc
and
jno
popa
fcoms
or
js
dec
loope
adc
pop
mov
je
xor
mov
int3
adc
adc
push
int
push
sbb
mov
xchg
sub
push
enter
inc
mov
xor
and
es
ss
ja
jge
push
xor
sbb
daa
mov
xor
push
or
mov
in
jns
std
in
popf
push
rcll
fsubs
test
lcall
repnz
push
arpl
sti
and
sar
notb
rorl
and
repz
xor
stc
icebp
xchg
movsl
das
rcr
cltd
aaa
inc
pop
mov
inc
inc
aaa
push
fdivrs
stc
into
mull
fdivrl
ds
popf
stos
gs
mov
or
clc
dec
push
leave
jne
loopne
sarb
pop
sub
xchg
jge
push
mov
rcl
stos
lods
insb
rcrb
sarl
or
pop
je
incb
sub
mov
arpl
ja
jne
push
add
lea
cli
xlat
mov
popf
lcall
sub
addb
mov
sbb
sahf
sub
push
aam
inc
push
mov
pop
insb
mov
ljmp
cmp
xor
lds
hlt
sbb
sbb
xchg
lcall
and
xor
loopne
xchg
aam
loop
dec
out
push
dec
int
ja
mov
imul
dec
fidivrs
cli
mov
or
je
xchg
mov
dec
cmpsl
cmp
xor
loope
popf
gs
cmpsl
push
fists
and
sbb
ret
fldz
negl
jg
mov
mov
mov
cmp
push
jle
jo
insb
mov
stos
adc
xlat
cs
test
addr16
push
insb
icebp
mov
adc
inc
dec
mov
cmpsb
xor
push
in
push
mov
add
lret
lods
hlt
loop
movsb
es
cwtl
adc
xchg
fisubrl
dec
inc
xchg
rorl
shll
mov
add
fisubrs
dec
inc
loope
adc
sub
fistps
sbb
push
lods
add
push
outsl
jno
mov
cmp
lret
or
sub
add
nop
lahf
aaa
jge
sahf
mov
addr16
sarb
push
xor
aas
fidivl
sbb
nop
add
xlat
jbe
fldcw
je
test
leave
fsubl
addr16
xchg
int
repnz
jno
gs
xchg
and
mov
pop
jp
and
pop
lret
pop
push
inc
sub
fstpt
fmull
xor
sub
pop
xor
pop
repz
inc
xchg
inc
sub
iret
jl
inc
out
in
lods
inc
jg
xchg
scas
adc
push
add
add
ja
cmc
popa
in
mov
lock
lea
push
jg
cli
and
inc
in
xchg
mov
and
xchg
xor
fisttps
and
push
rorb
push
push
scas
out
mov
xor
hlt
push
mov
in
sub
ret
mov
mov
popf
iret
cmp
cwtl
sbbl
push
aaa
inc
jmp
aas
push
push
pushl
push
data16
adc
mov
jl
inc
movsb
sub
push
es
xchg
inc
dec
xor
cld
subl
add
call
push
and
cmp
lret
cmpb
lahf
cmp
psrlw
int
xchg
inc
ja
sub
push
xor
cld
cmp
mov
cmp
jg
andb
pop
sbb
popa
push
xor
add
jge
gs
fsts
rol
push
dec
xor
int
insb
bound
adc
mov
mov
cltd
stc
and
test
gs
pop
icebp
sub
push
mov
leave
call
sub
xchg
adc
add
cmp
sahf
ret
adc
mov
daa
inc
fidivl
adc
loop
xlat
ret
sub
cmp
cmp
cmp
cmp
jmp
xorl
jg
es
sub
jmp
daa
test
pop
pop
xchg
push
adc
dec
ss
adc
cli
mov
dec
aam
mov
ds
and
xor
fs
nop
test
loope
and
in
cmpsl
dec
std
pop
jnp
hlt
jne
jbe
test
add
jne
sti
je
adc
jl
out
sti
testb
loop
pop
lock
popf
mov
lea
lock
jns
pop
outsl
aaa
push
pop
or
mov
jp
fnsave
and
in
je
cmp
cmpsl
dec
popa
mov
pop
ret
add
push
push
push
push
add
cmp
pop
fwait
adc
repnz
xor
adc
xor
adc
sarb
in
mov
pop
xchg
push
mov
daa
sbbb
mulb
dec
xchg
ficompl
xchg
jmp
mov
and
push
mov
aam
and
jns
or
push
mov
push
iret
mov
cmp
sbb
add
push
adc
cmp
mov
xchg
incl
ljmp
negl
ja
nop
pop
mov
cs
sbb
shl
shlb
in
arpl
sub
clc
pop
xchg
out
sbb
aam
pop
scas
pop
sbb
mov
ss
inc
jmp
cmpsl
or
nop
mov
je
pop
sub
jmp
test
pusha
dec
icebp
fsubl
and
cmp
sbb
cmp
aad
dec
adc
adc
and
inc
and
sti
fucomip
mov
jmp
cld
je
xchg
fbstp
inc
dec
dec
dec
scas
mov
stc
mov
testl
mov
gs
cmp
cmp
and
mov
dec
icebp
scas
sbb
enter
xor
or
adc
shll
mov
xchg
fsubp
mov
cmpsl
in
fucompp
jbe
cmp
jmp
xor
sub
cwtl
xchg
cmc
mov
lods
mov
jle
pop
lcall
mov
leave
cmc
insl
in
add
lods
arpl
pop
cmp
cld
fcmovne
pushf
pop
inc
mov
popf
ss
add
dec
insb
pop
sub
xchg
insl
std
loop
inc
fidivrl
lret
mov
mov
mov
fcmovb
or
cld
lahf
fidivrs
cmpsl
arpl
push
sbb
push
stc
out
es
cmp
push
jae
shlb
arpl
pop
test
leave
inc
outsl
loop
in
std
push
xor
movsb
xor
inc
sti
pop
push
lock
mov
pusha
call
push
sbb
repnz
loop
ficoms
cmc
outsb
push
ror
push
inc
out
xchg
stos
mov
pop
aas
xor
repnz
loopne
inc
push
pop
adcb
sub
movsb
xor
out
es
stos
or
mov
jae
enter
das
sub
jbe
movsl
popa
ret
sub
pop
xchg
sbb
movsb
mov
mov
and
loop
dec
sub
enter
daa
jnp
dec
clc
aas
push
jmp
iret
xchg
dec
pusha
push
xor
mov
ja
dec
or
jb
cmp
xchg
pop
jb
lods
insl
inc
js
stc
mov
mov
cmp
push
bound
fxch
cmp
mov
jl
or
es
jmp
xchg
in
mov
add
add
sbb
pop
mov
in
loope
push
xchg
mov
sub
lds
fstpl
inc
sti
ljmp
jae
xchg
and
xlat
pop
xchg
cmpsl
inc
mov
mov
mov
es
in
push
mov
pushf
loope
lcall
scas
lahf
in
mov
xchg
cmpsl
dec
mov
sub
push
sti
scas
add
in
sahf
mov
aaa
dec
mov
mov
aas
mov
add
fisubl
test
jnp
xor
xlat
arpl
cld
in
cli
outsb
sahf
and
inc
fbld
push
add
decl
sbb
dec
xchg
call
and
sub
ud2
rorb
mov
xor
pop
dec
cmp
gs
adc
inc
adc
push
mov
push
push
loope
push
push
in
jae
jnp
cwtl
repnz
pop
or
xor
shll
out
test
ss
jmp
mov
and
inc
in
icebp
adc
sub
les
cld
dec
test
sbb
mov
insl
aad
add
dec
das
pushl
xchg
fldenv
fistpl
mov
inc
fucomip
pusha
sbb
or
mov
mov
cmp
popf
mov
cmp
push
repnz
xchg
xor
mov
lret
or
push
push
shll
xor
inc
inc
xor
int3
xchg
fldenv
push
xchg
scas
adc
inc
cmc
lret
js
mov
sub
inc
or
out
in
gs
test
lock
mov
loop
lock
jnp
jp
xor
iret
ficoms
add
xor
popa
inc
inc
les
mov
lea
and
out
testl
lods
add
sbb
jge
arpl
mov
imul
inc
fcmovb
and
aam
xchg
fwait
push
lock
push
mov
xor
xchg
add
lea
inc
jb
outsl
adc
in
aam
pop
jp
mov
xlat
lods
lock
insb
cmp
dec
in
aam
mov
scas
movsb
inc
and
mov
stos
mov
dec
ljmp
negl
adc
push
fcmove
xchg
sbb
jno
or
inc
dec
in
shrl
loop
stos
and
push
mov
sub
xor
clc
cmp
dec
adc
sub
add
jl
mov
shl
or
dec
popl
sub
or
in
aaa
sub
cmp
ds
ds
sti
ss
cmpsb
mov
cltd
or
add
pop
outsb
xor
adc
push
imul
ret
sbb
nop
inc
ja
xchg
in
movsb
mov
push
test
int
cmpsl
mov
fstpl
addr16
fistpll
lods
in
pusha
jecxz
mov
cs
testl
out
out
outsl
mov
fcos
pop
adc
push
sbbl
std
mov
pop
mov
add
test
lea
cmp
xchg
subb
cmp
inc
pop
xor
jo
enter
into
push
inc
insl
push
lcall
xchg
jmp
push
int
out
out
test
lahf
and
sub
mov
jns
fs
xchg
mov
sbbl
inc
push
loop
stos
xlat
int3
push
adc
pop
lods
dec
mov
aad
out
std
fiaddl
push
add
sbb
rcll
and
clc
in
ret
mov
cmp
adc
sbb
sub
nop
cmp
mov
mov
jecxz
aad
fdivl
add
mov
cmp
mov
lret
std
aad
pop
mov
or
add
mov
or
fisubs
or
out
xorl
loop
out
sub
or
adc
mov
mov
testl
rcl
fsubp
mov
out
mov
in
dec
data16
push
test
or
and
cwtl
inc
pop
or
shrd
lahf
pop
mov
mov
xorb
cmc
jae
ss
inc
fs
lret
mov
loop
cmp
mov
aas
add
dec
lods
adc
xchg
pop
push
mov
andb
int3
cmp
movsl
cli
leave
and
or
sub
insl
add
decb
push
out
jmp
sub
dec
or
mov
xor
add
ja
or
sbb
xchg
das
mov
setg
push
adc
pop
cmp
dec
popf
loop
xchg
iret
aam
push
mov
xor
leave
push
mov
decl
repnz
jb
dec
ljmp
xchg
inc
dec
xor
mov
cmp
lahf
ss
mov
js
out
or
sahf
cmc
nop
and
es
fcoms
cmp
dec
push
cmpb
push
mov
dec
scas
or
xchg
sub
xor
nop
push
jnp
xlat
and
and
mov
pop
fiaddl
jg
sbb
sub
lock
xor
cmpsb
mov
jecxz
ret
cmp
push
nop
into
out
outsb
push
test
int
pop
imul
add
dec
out
xor
fldl
cld
dec
fstpt
mov
iret
test
adc
and
sbb
insb
dec
jmp
insb
aad
in
mov
mov
movsb
out
mov
lea
push
adc
or
leavew
and
lods
ljmp
or
stc
or
out
cmpsb
mov
lods
and
ret
sahf
inc
jecxz
xchg
inc
and
dec
jl
out
xchg
or
mov
cs
sbb
dec
inc
cli
movsb
sar
aaa
sbb
ret
sbb
adc
add
add
mov
cmp
mov
lods
dec
pop
dec
jecxz
pop
insb
test
movsb
cltd
mov
pop
daa
xor
lret
pop
cmpsb
outsb
movsb
add
xor
out
les
cmp
jp
mov
dec
or
std
popf
hlt
mov
or
out
call
jno
ret
mov
daa
cmp
sti
in
dec
add
pop
push
lea
and
mov
and
xchg
or
or
scas
sbb
test
scas
stc
outsb
jmp
cwtl
pop
or
cmp
jb
ds
and
pop
pop
nop
add
das
adc
mov
jae
push
adcl
ficompl
or
xchg
scas
test
adc
je
and
xchg
out
adc
movsbl
addb
int3
popf
and
lahf
inc
rcr
sub
in
cmp
mov
jns
pop
mov
push
pop
in
sub
mov
push
js
popa
movsl
fisubrl
jl
or
mov
jae
adc
mov
sub
push
push
imul
sub
add
xchg
dec
mov
shlb
dec
xchg
dec
mov
test
push
lock
popa
aad
dec
sub
push
add
and
mov
sub
fisttpl
ljmp
xchg
jle
dec
fldt
fnstcw
push
in
cwtl
clc
inc
cmp
adc
test
sub
sbb
repnz
das
rorl
inc
outsb
push
outsb
es
cs
xor
mov
mov
inc
pusha
negb
pop
and
outsb
leave
and
sub
aaa
sub
mov
loope
jae
push
mov
sar
fsubp
mov
push
mov
lock
fstpt
cmp
mov
out
and
and
mov
dec
add
or
data16
sbb
adc
push
or
sub
xchg
ret
jns
inc
jg
push
push
lock
sbb
and
cli
outsl
out
fisubs
push
je
out
mov
iret
repz
push
inc
dec
mov
test
and
pop
push
jnp
int
fcoms
xor
stc
jge
push
add
xchg
fnstenv
leave
mov
sub
mov
inc
movsb
cmp
inc
mov
mov
pop
jp
popf
jg
mov
cli
fnsetpm(287
and
mov
sub
add
inc
fisubs
push
mov
mov
cmp
adc
jo
push
adc
jmp
pusha
push
xchg
pop
notb
outsb
call
push
dec
loopne
pop
movsb
nop
jns
cmp
repnz
xor
stos
scas
mov
test
pop
push
sub
xchg
inc
subl
adcl
or
jae
push
push
cli
pusha
jbe
push
hlt
jl
arpl
inc
stos
ja
jecxz
aas
jl
in
xor
push
pop
ret
add
daa
and
pop
mov
testl
call
sbb
in
cli
sbb
lahf
and
xchg
add
mov
push
mov
subb
dec
cmp
jge
and
fld
jns
lods
popf
sub
mov
jnp
mov
outsb
jae
addr16
xor
das
fwait
cli
insb
sub
fisubrs
pop
jl
xchg
jb
jb
push
lret
sbb
push
xor
mov
int3
xor
lcall
fs
jae
sbb
lock
pop
add
clc
mov
lahf
out
ja
pop
hlt
dec
pop
mov
dec
vmwrite
sbb
pop
rorl
push
push
sub
aam
lret
xor
leave
lods
dec
push
pop
pop
mov
mov
lret
fsubrl
mov
xor
dec
stos
stc
test
xor
mov
push
out
xchg
ret
mov
jae
push
scas
push
adc
xor
stos
fcom
stos
scas
popa
push
push
inc
sub
push
jg
pop
fwait
jb
sbbb
cli
or
xchg
outsl
fdivr
inc
mov
icebp
dec
jno
leave
out
test
and
xchg
lret
or
inc
pop
push
cmpsl
add
fmul
scas
icebp
jnp
sub
xor
jl
or
adc
iret
stos
push
xchg
sbb
xchg
jle
xor
push
dec
movsl
aam
mov
pusha
inc
loop
xchg
jb
add
mov
cwtl
iret
sar
popf
subb
mov
adc
cmp
xorb
dec
das
aad
sbb
int
test
dec
mov
xchg
push
adc
bound
ficomps
fwait
shlb
sub
lods
and
xchg
jl
in
cmpsl
imul
push
leave
mov
leave
cmp
push
adc
ret
ds
inc
test
adc
test
mov
cld
shlb
xchg
call
bound
add
or
fwait
inc
rclb
scas
or
out
out
mov
push
push
insl
ds
es
and
and
sub
cli
mov
jns
mov
loop
lahf
pop
and
clc
scas
out
mov
icebp
stos
mov
repz
insl
daa
xchg
inc
insb
ds
shlb
test
push
pop
jp
sbb
push
sub
and
xchg
mov
push
into
adcl
faddl
cli
lods
cltd
test
jne
xchg
loopne
das
xlat
gs
adc
das
jbe
jns
shll
mov
jg
jne
cmp
mov
cmp
shlb
mov
add
cli
push
and
stc
inc
sub
sahf
mov
mov
sub
jnp
les
pop
xor
push
dec
insb
sbb
fwait
je
ds
xor
mov
sub
add
mov
stc
cld
mov
fcoms
test
repz
lds
gs
stos
sub
shlb
mov
insl
adc
and
stos
push
loopne
sti
dec
int3
imul
sub
sub
cmp
stos
pop
sub
xchg
test
or
lret
test
push
mov
and
jns
out
nop
xor
pusha
clc
daa
cwtl
jne
adc
adc
push
push
faddl
rorl
insl
andnps
mov
sub
or
jmp
call
pop
add
cs
or
push
dec
scas
mov
in
mov
xor
fstps
imul
or
mov
mov
xor
xchg
pop
test
cmpsl
jl
in
sbb
mov
testb
cmp
mull
mov
jle
aas
jae
nop
mov
mov
push
sbb
in
push
mov
add
push
mov
or
popa
push
sub
fbld
enter
pop
cmc
inc
xor
jecxz
xchg
cmpsb
ret
jmp
mov
in
shlb
pop
jmp
xchg
or
pop
push
inc
jl
stos
mov
lret
ret
add
test
sub
ja
push
lock
xchg
fcmovnu
out
dec
dec
jle
push
push
sahf
xchg
sbb
decl
arpl
sub
out
mov
shll
xor
hlt
sti
lock
sahf
negl
iret
pop
mov
testb
or
ret
out
or
jno
sub
mov
sbb
xlat
xchg
jmp
sbb
imul
push
add
mov
mov
xor
push
fildll
fstps
jne
loop
push
rcr
ds
fmul
iret
push
pop
pop
push
lahf
add
mov
lods
popa
jne
movb
aas
jp
out
xchg
mov
mov
insb
mov
cmp
xor
adc
popa
cmc
sub
xchg
dec
sti
mov
test
xor
jle
cmp
sbb
inc
mov
cltd
cmp
je
cli
fwait
fs
mov
inc
int
js
mov
lods
push
dec
das
inc
cltd
jmp
pop
test
es
repnz
jmp
gs
sub
clc
repnz
jns
xchg
mov
jb
push
push
jge
inc
xchg
sub
push
std
test
mov
add
cmp
mov
pop
shrl
cwtl
push
call
popa
fcoms
or
js
dec
loope
adc
and
jno
popa
fcoms
or
js
dec
loope
adc
and
jno
popa
fcoms
or
js
dec
loope
adc
and
icebp
enter
sub
sbb
mov
xchg
mov
cmpsl
loope
popa
ficoml
inc
cli
mov
add
jae
gs
shrb
jp
or
cmp
popa
ficoml
inc
cli
xor
add
mov
sarl
mov
cmp
popa
ficoml
inc
cli
xor
add
mov
movsb
jp
pop
enter
out
cmp
lret
sbb
dec
add
test
loop
fisubrs
sub
mov
in
lcall
cs
cmpsb
je
test
push
cmp
lret
cltd
sub
hlt
fbld
pop
sbb
stos
adc
mov
mov
adc
les
mov
popa
lods
out
xor
add
loope
daa
dec
rclb
dec
adc
sahf
add
pop
add
cltd
sete
xchg
rorl
leave
pop
adc
jle
mov
and
jmp
roll
cltd
jmp
mov
dec
movsb
outsb
dec
jp
cmc
mov
cmp
lret
push
ljmp
adc
loope
shrl
jp
or
jl
cmpsl
and
mov
push
iret
fs
push
xor
addr16
arpl
test
pop
mov
nop
and
out
inc
mov
lds
mov
cmp
push
cli
shlb
pop
sahf
push
pop
lcall
jo
and
icebp
dec
loope
shrl
jp
or
cmp
popa
ficoml
inc
cli
xor
add
shrl
jp
or
cmp
fs
fcompl
adc
inc
dec
sub
push
mov
cmp
and
dec
in
sub
rorl
loop
xchg
std
test
lret
sar
mov
out
loop
mov
sub
push
xchg
add
push
ss
lahf
popa
lock
inc
insl
movsb
ljmp
mov
cwtl
bound
push
sbb
roll
cmpsb
pop
cmp
pop
cwtl
icebp
out
aas
xchg
pop
mov
mov
bswap
inc
sbb
inc
pop
int3
js
mov
mov
xchg
pop
out
bndstx
out
js
fs
shll
push
push
idiv
ret
jbe
addr16
jl
aad
insl
cltd
jl
dec
pop
ret
jp
jle
aas
cs
adc
out
inc
push
out
in
popf
shr
jnp
fwait
lahf
inc
add
test
mov
add
cmp
mov
fstps
mov
cmp
and
pusha
out
or
and
push
test
mov
xchg
xchg
stos
mov
mov
aaa
sti
add
call
stos
imul
call
int3
or
sbb
or
ret
and
lahf
mov
add
mov
das
in
xor
out
pop
and
fcompl
cmpsb
in
mov
mov
cmp
testb
ljmp
jmp
mov
mov
add
and
scas
mov
scas
lahf
dec
stos
adc
popf
mov
shll
jo
dec
lods
jno
or
push
pushf
sub
mov
scas
cmp
mov
dec
insb
jle
mov
mov
loop
aaa
mov
sub
dec
in
ss
pusha
movsb
inc
inc
lds
in
jl
and
xchg
jne
cmpsl
pushf
stc
adc
daa
xor
inc
rorb
sub
loopne
imul
sbb
dec
and
jo
ficoml
add
jb
out
push
sti
dec
and
andl
cmp
lea
sbb
or
and
pusha
test
cli
and
into
out
vmovntps
mov
mov
icebp
stos
cmpsl
repz
les
popf
jno
and
and
pusha
call
sub
inc
cli
mov
iret
fnsave
push
jmp
rcrl
out
push
dec
imul
jne
jle
sbbl
dec
out
mov
out
call
lock
mov
dec
mov
cmp
inc
pop
push
popa
sub
inc
outsl
test
adc
jmp
push
lods
orl
pop
hlt
adc
pop
mov
add
adc
mov
movsb
lock
or
inc
pusha
shll
mov
aaa
xchg
xor
jecxz
test
mov
add
mov
rcll
notl
push
pop
inc
mov
addr16
pop
push
xchg
jmp
daa
fbstp
sub
inc
xor
fistl
mov
inc
cwtl
cmp
clc
mov
hlt
fwait
pop
fcomps
scas
dec
loop
stc
addl
dec
fcmovu
bound
or
inc
push
mov
mov
push
pop
jns
mov
adc
add
insl
ja
pop
andl
xor
fdivrs
test
sti
popf
cmp
push
sbb
xor
xchg
cmp
xorl
dec
icebp
lds
cmpsl
inc
mov
push
rclb
outsb
xor
cmpb
inc
dec
push
imul
dec
fsubrs
out
mov
jnp
cli
mov
rcll
aam
cmp
pushaw
imulb
test
popf
aaa
inc
xlat
in
fsub
ljmp
dec
xorb
xor
popa
sti
dec
mov
lds
rorl
mov
add
test
mov
pop
out
test
xchg
mov
or
insb
cmc
jb
sub
hlt
mov
out
xor
test
push
push
fninit
jnp
xor
sub
xchg
test
cmp
mov
and
pushf
or
loopne
xchg
shrl
adcb
xchg
cld
ljmp
mov
mov
or
ret
add
cld
mov
sub
adc
mov
inc
adc
jo
sub
ljmp
sti
jp
xor
inc
xchg
jns
pusha
jge
out
jno
fidivrs
clc
cli
xor
jp
dec
lret
push
mov
fildl
lds
mov
dec
lcall
popf
sub
inc
jns
test
or
jo,pn
es
je
lret
push
into
and
hlt
add
mov
mov
repnz
mov
mov
dec
testl
and
sbb
fsubl
mov
cmp
leave
sahf
jmp
pop
cmc
pop
je
pop
out
pop
in
adc
push
movsb
jnp
and
pop
push
mov
cmp
pmullw
xlat
sbb
lds
push
outsb
sub
sbb
scas
dec
into
or
outsl
pushl
push
sar
push
adc
jb
mov
cmp
adc
pop
movsb
lahf
adc
loope
sub
mov
push
or
mov
mov
icebp
lret
sarl
jno
clc
add
popa
orb
ljmp
test
test
dec
pushf
stos
out
push
lds
daa
add
rcll
or
xchg
out
cmp
ffree
mov
xchg
or
rcrl
cmpsl
fists
int
mov
loopne
mov
push
rcrb
lahf
adc
xor
test
jbe
inc
ds
rorl
rolb
mov
cwtl
pop
or
or
lods
dec
inc
jecxz
in
mov
cmp
mov
adc
cmpb
push
ficompl
jnp
push
sbb
xchg
out
push
ficoms
inc
dec
xor
cli
sub
in
adc
and
jecxz
loopne
ss
loopne
data16
ja
mov
xchg
xchg
repz
push
xlat
xor
mov
mov
xor
dec
cmp
arpl
push
mov
test
je
mov
cwtl
outsb
jae
enter
insl
les
cmp
mov
jno
xor
mov
cs
aam
lds
notb
loopne
mov
jbe
xor
xchg
les
xchg
test
pop
popa
add
pop
out
jmp
sub
ljmp
sub
sub
mov
mov
cld
scas
and
les
push
push
xchg
adc
mov
int3
mov
or
js
or
push
arpl
adc
jl
jl
xor
pop
repz
test
push
lcall
cmp
dec
inc
add
mov
dec
jl
pop
mulb
sbb
mov
imul
imul
mov
xor
or
sbb
fcom
loop
sbb
out
pushf
sbb
jae
sub
fsubrp
cmpb
call
andl
dec
mov
xchg
or
lret
sub
add
pusha
rorb
mov
sbb
fldt
xchg
out
sbb
adc
push
push
mov
mov
jb
adc
lahf
add
lods
xor
jo
rsqrtps
fisubrl
and
jge
sbb
and
dec
sub
cmpsb
mov
ret
gs
ret
cmpsl
ljmp
and
fs
add
mov
pop
xorb
mov
insl
lahf
sub
mov
out
xor
cmp
shlb
std
fistl
or
fwait
adc
out
shll
loope
xchg
out
cmc
daa
mov
add
xchg
aaa
pusha
mov
rcrb
aaa
nop
sti
popa
ds
xor
ja
pop
push
scas
push
or
push
js
dec
xlat
push
mov
lods
mov
push
aad
pop
jmp
outsl
xchg
push
out
mov
cmpsb
or
push
iret
sub
fistps
ret
adc
jmp
pop
mov
push
mov
cmp
sub
repz
cmpsl
and
divb
sbb
cmp
or
add
mov
jecxz
push
es
or
push
mov
outsb
icebp
jnp
out
and
aas
cld
lahf
jg
inc
popa
inc
cli
push
adc
js
lcall
jbe
out
out
loopne
pop
mov
insb
icebp
sub
xchg
ficomps
arpl
les
inc
xor
fwait
inc
jecxz
cmpsb
mov
addr16
fimull
or
sbb
lods
xor
sar
jg
jo
leave
cmp
sub
pop
daa
mov
outsb
or
xor
xlat
dec
dec
pop
jo
hlt
push
aad
push
mov
add
cmp
int3
mov
sub
stc
pop
add
arpl
jno
popa
xor
adc
add
mov
push
mov
sub
mov
iret
sbb
repz
das
jg
push
icebp
mov
subb
xchg
test
std
adc
loopne
jl
mov
jl
pop
fdivrs
mov
repnz
ret
and
loopne
inc
inc
inc
movsb
cwtl
and
mov
xor
xor
insb
mov
sub
in
mov
push
xchg
sbb
and
fdivrl
sub
dec
xchg
push
in
out
jmp
mov
xchg
mov
mov
mov
loope
ret
fistpll
and
mov
lret
rcrb
popa
fists
sbb
sub
hlt
dec
jae
jg
movsl
scas
xorl
andl
mov
pop
pop
xorb
call
inc
fstps
and
cmp
add
cmc
inc
sub
ficompl
pop
push
das
mov
maskmovq
mull
dec
lcall
push
adcl
mov
jl
insb
mov
cmpsl
add
mov
and
jp
inc
push
jg
fdivrl
sub
sbb
test
lret
or
dec
xor
sbb
adc
testb
in
shl
in
loop
jnp
jg
insb
jne
and
arpl
es
sub
adc
es
into
data16
mov
in
pop
aam
cld
sub
insb
push
stos
mov
mov
ret
or
lods
add
push
mov
loope
push
aad
ja
popa
mov
cli
xor
fs
add
cs
stos
sbb
inc
jnp
add
xor
mov
sub
mov
dec
inc
or
jbe
inc
imul
and
mov
ficompl
dec
mov
test
pushf
cmp
insb
cltd
or
push
mov
push
dec
jmp
cmp
repnz
lret
hlt
dec
out
jns
jb
mov
fidivrs
mov
mov
mov
filds
dec
sub
ret
popl
pop
xlat
stc
sbb
mov
aad
sub
or
pop
imul
sub
xor
or
adc
jo
dec
movsb
daa
jg
cmpsl
xchg
cltd
inc
insb
in
repnz
stos
shlb
push
mov
movsl
sbb
push
ja
lods
add
sub
sbbb
add
lcall
xchg
dec
mov
cmp
in
push
loop
ds
sbb
push
inc
out
xchg
mov
xchg
lock
jmp
mov
xor
or
or
cmp
and
mov
rclb
movsb
cld
sub
and
call
add
sub
xchg
repnz
mov
sub
fstps
test
adc
sbb
daa
and
adc
cmpsb
push
mov
pop
inc
pop
and
jge
mov
sbb
popf
dec
jno
and
sub
popa
adc
popa
mov
fistpll
sub
sbb
xchg
lret
mov
cwtl
ja
stc
push
shl
xchg
cmpsb
stos
out
jl
dec
test
mov
clc
ret
in
leave
fdiv
jnp
stc
repnz
lret
fwait
push
or
test
pop
and
sti
lods
pop
xor
sub
shll
scas
scas
xchg
cmc
stc
pusha
in
dec
mov
pop
movsl
push
test
lods
imul
mov
inc
sbbb
push
xor
mov
dec
loope
jae
popa
das
lds
mov
pop
ds
sbb
push
cld
cmp
push
orl
stos
or
push
push
or
popf
xchg
push
add
popf
idivb
rcll
mov
xlat
and
dec
test
cld
add
fistpl
pop
mov
push
dec
or
movsb
scas
lods
mov
or
push
pop
jmp
cwtl
insb
dec
gs
pop
push
pushf
xchg
cmp
mov
add
xor
stos
loope
test
aas
mov
mov
movsb
mov
push
fst
mov
add
and
mov
stos
test
cmc
add
mov
mov
or
cld
das
mov
aaa
jmp
popf
mov
pop
repz
ss
push
cs
or
movsb
xor
jnp
inc
sub
fnstenv
inc
sbb
icebp
inc
or
loopne
ret
loopne
insb
pop
inc
dec
ja
inc
test
adc
and
sub
scas
lods
leave
sahf
jo
sti
pop
stos
dec
jl
inc
push
inc
jne
jge
into
int3
lret
or
popa
icebp
daa
jno
popf
loop
sub
mov
inc
and
sub
jecxz
adc
add
sub
xor
adc
fcmove
dec
jle
hlt
push
push
sti
xor
je
lock
pop
sahf
lahf
inc
mov
ss
fnstenv
mov
mov
and
or
xchg
neg
pushl
jecxz
cmp
xor
ja
jl
mov
push
andl
ror
inc
sbb
aaa
adc
pop
mov
movsb
push
mov
mov
jmp
pop
call
cmc
mov
loope
lock
enter
mov
xchg
or
xor
jmp
jg
rep
roll
mov
sarl
push
roll
add
mov
ja,pn
mov
and
divl
insl
aas
mov
or
cmp
std
sub
arpl
or
jg
mov
dec
and
pop
aad
int
xchg
addr16
dec
mov
test
icebp
cmpsl
mov
mov
sbb
xor
loop
xor
ds
test
movsb
dec
inc
cld
or
loope
mov
addr16
or
mov
je
mov
inc
mov
pmaxsw
and
sub
aas
dec
in
aam
bound
insb
movsl
fistps
inc
sbb
jns
ret
jne
inc
addr16
outsl
xchg
pop
jae
lds
outsb
fmull
je
dec
cmp
dec
ljmp
ret
and
push
add
mov
pushf
icebp
imul
mov
mov
inc
xor
push
and
mov
push
dec
outsb
arpl
push
dec
push
push
addl
and
xchg
pop
jns
scas
ret
les
leave
fwait
inc
insl
fsub
addr16
xchg
jge
push
cld
and
std
addr16
mov
inc
push
int
mov
fs
in
lods
push
adc
sub
aas
sahf
insb
test
push
out
or
loopne
inc
icebp
mov
mull
nop
stos
xor
hlt
mov
sbb
idivb
and
jp
and
sub
loop
ret
int3
addr16
lcall
fdivrs
dec
mov
aaa
mov
mov
jp
mov
add
in
lcall
push
mov
fiaddl
mov
and
sub
mov
xor
sub
js
ljmp
into
repz
or
hlt
mov
or
pop
inc
pop
adc
adc
ljmp
ret
add
mov
mov
leave
pop
cld
pop
sub
dec
cltd
sbb
inc
inc
insw
xchg
stc
xchg
scas
add
adc
clc
xchg
dec
dec
sbb
pusha
push
jo
iret
aam
sbb
dec
stos
push
dec
cmp
push
movsl
iret
test
jne
xchg
in
adc
and
jne
add
aas
xor
dec
inc
jge
sbb
out
shrb
testl
stc
insb
xchg
clc
cmp
gs
mov
aas
push
lock
and
ja
mov
push
cli
push
or
in
int3
bswap
scas
sahf
pushf
sarl
fstpl
pop
xchg
in
and
insl
xor
arpl
xchg
dec
mov
iret
ljmp
fcoml
popa
cltd
sti
cmp
add
out
mov
dec
scas
and
xor
ja
fiaddl
hlt
mov
aam
xchg
jge
sub
ret
sbb
add
adcl
jp
call
push
lds
cmpsl
jle
add
ja
nop
movsb
mov
rclb
lock
imul
mov
nop
xor
mov
js
xor
pop
es
imull
push
push
stos
decb
jo
and
fimuls
push
sbb
jmp
mov
imul
notl
in
adc
es
jno
jmp
out
fimull
fcmove
repz
mov
mulb
fldcw
lods
iret
inc
cmp
rcrl
outsb
and
fisubrl
adc
push
sbb
adc
xchg
sub
pushf
push
pop
les
std
jmp
and
das
push
sti
ds
jae
ljmp
insl
das
ljmp
add
shlb
sbbl
dec
fwait
or
xor
xchg
xchg
imul
ret
push
xor
sahf
fs
test
inc
cltd
pushf
or
add
cmp
jnp
pop
es
fsubs
and
fs
sub
cmp
fs
mov
and
mov
stos
out
xor
outsb
fnsave
push
imul
cmp
add
mov
mov
imul
push
push
scas
pop
sbb
std
mov
call
mov
xor
mov
dec
mov
inc
fsubl
pop
fsubrs
pop
push
movsl
int3
lock
jle
mov
arpl
cld
jle
aam
dec
push
mov
dec
outsl
and
cwtl
loopne
lods
inc
loopne
outsb
in
shll
pusha
or
mov
or
fwait
divb
incb
adc
clc
push
adc
pop
cs
das
add
and
mov
xor
push
fmuls
aad
loop
das
ret
pop
jns
pop
dec
mov
mov
lcall
sub
sub
mov
sub
lret
and
stos
push
mov
cltd
cld
adc
pop
sbb
stos
data16
divl
cmp
xchg
sbb
adc
dec
cmc
dec
lods
imul
pop
bound
xchg
lret
adc
cmpsl
sbbl
pop
test
push
call
mov
scas
lret
fldt
xor
push
sub
push
nop
inc
xor
cli
fwait
ljmp
les
inc
arpl
dec
push
xor
fs
aaa
jo
inc
lahf
cmp
repnz
inc
or
mov
sbb
mov
sbb
mov
cld
fwait
xchg
lcall
insl
filds
outsl
test
shlb
push
test
shr
stos
sarb
adc
or
sub
nop
test
mov
adc
pusha
out
in
in
mov
adc
dec
mov
sbb
in
roll
mov
jb
mov
test
or
aaa
jle
mov
xchg
aam
mov
lret
jl
cmp
push
push
fldl
hlt
xchg
or
mov
cmp
xor
rcrl
pop
push
jno
fstpt
rorl
shrb
push
xchg
iret
in
cmp
aad
jle
insb
and
insl
inc
inc
sbb
xchg
pop
scas
mov
mov
test
cwtl
mov
mov
shr
sub
int
jmp
fwait
xor
xor
arpl
sub
adc
out
push
icebp
xor
sub
aas
lds
test
addr16
fildll
lret
in
sbb
pop
xor
js
add
fcompl
clc
jbe
icebp
js
push
xchg
xor
shrb
adc
push
sbb
fldcw
mov
mov
data16
dec
jmp
ja
cmp
iret
or
sub
mov
lock
xor
cmp
inc
jle
fsubl
inc
shrl
ds
movsl
inc
negb
inc
leave
rorl
fnstsw
test
or
ds
test
out
jmp
int
mov
int3
sbb
adc
push
subb
pushf
xorb
adcl
in
jo
call
cmp
dec
pusha
pop
mov
lods
mov
xchg
push
sub
jbe
rclb
or
xchg
jmp
imul
arpl
test
add
test
adc
scas
sar
cmp
mov
sbb
fwait
aad
imul
and
fldenv
test
pop
xor
xchg
inc
mov
dec
jne
pop
mov
pop
jo
mov
mov
daa
pop
xlat
mov
loopne
in
jb
mov
xchg
jno
jl
fucomi
inc
cli
xor
add
shrl
jp
or
cmp
popa
ficoml
inc
cli
xor
add
shrl
jp
or
cmp
popa
ficoml
inc
sti
xor
add
shrl
jp
or
cmp
pusha
ficoml
inc
xor
add
mov
lock
rorl
aad
vpaddb
in
leave
int3
je
fisttpl
ret
pop
pop
dec
dec
cmp
or
cld
jmp
int3
mov
pushf
mov
jns
imul
sub
sbb
or
cld
jmp
int3
mov
pushf
mov
cmp
cmp
jo
jns
jnp
mov
pushf
and
lahf
jno
sbb
cmpsb
nop
rolb
mov
jge
insb
pop
dec
jecxz
enter
cld
test
test
push
test
cmpsb
mov
sub
movsb
test
in
loope
fimuls
mov
bound
inc
xlat
dec
jns
cmp
mov
ret
push
adc
sar
jmp
lcall
mov
in
xchg
cmpsl
lcall
lcall
adc
and
shl
test
mov
mov
cmp
je
in
add
push
cli
sbb
les
pop
daa
adc
mov
cmpsb
sub
imul
jmp
int3
mov
pushf
mov
pop
dec
dec
cmp
sub
sbb
dec
mov
popf
mov
fdivr
stc
mov
jns
or
pop
rdtsc
cmp
dec
sub
outsb
dec
imul
in
jmp
sbb
cmp
pop
cmp
cmp
mov
pushf
mov
movsl
mov
mov
mov
imul
sub
sbb
or
cld
jmp
int3
mov
pushf
mov
pop
dec
dec
cmp
sub
sbb
or
cld
int3
les
or
stos
das
jb
jle
push
insb
pop
jb
jo,pn
mov
cmpsl
add
and
test
push
repz
out
movsl
pop
iret
add
movsl
fwait
xchg
or
mov
jge
cmp
jmp
in
stos
stos
xor
mov
push
mov
pop
xlat
movb
fdiv
cmc
pop
mov
repnz
lret
clc
fstpl
xchg
cmp
jne
push
mov
mov
out
movsl
sbb
jge
fimuls
imulb
mov
je
jnp
jg
push
jmp
push
aam
and
cli
xchg
and
lahf
aas
fs
sbb
fmuls
inc
notl
xchg
cmpsl
insb
pop
xchg
rclb
mov
sbb
adc
xchg
push
test
ja
imul
fldl
lahf
xchg
inc
test
cmp
int
cmc
mov
cmp
clc
add
into
arpl
jb
and
sub
jnp
stos
xchg
stc
xlat
lahf
jae
ss
dec
divl
pushf
cmp
ret
and
dec
in
sti
jno
pusha
mov
fistps
jle
dec
addr16
sahf
adc
push
or
pop
push
cli
shrb
xchg
adc
jne
lret
dec
pop
cmp
dec
scas
and
jp
pop
add
outsb
clc
movsb
inc
lcall
popa
aam
pusha
jecxz
mov
jl
pop
in
or
test
iret
out
xor
sbb
nop
ficoml
push
cmp
mov
aaa
cli
mov
sahf
push
xchg
mov
jae
addr16
add
ficomps
pop
das
movsl
add
lock
loope
adc
cmp
or
test
test
inc
in
stos
mov
pop
xchg
pop
adc
scas
fldl2e
gs
shlb
mov
repz
fbld
jo
mov
xchg
and
xchg
lds
shrb
mov
inc
dec
push
pop
sub
inc
xor
shl
cmp
add
push
mov
outsb
adc
test
dec
jp
nop
rclb
push
xchg
xor
sbbl
outsb
repz
dec
pop
out
sub
and
cld
adc
push
out
jle
push
fstpl
xchg
dec
cmp
jns
xchg
dec
cmpsb
insl
inc
jnp
repnz
popa
jl
sbb
out
pop
mov
pop
inc
add
and
vmaxss
adc
mov
inc
testb
inc
repnz
fcmovnu
sub
ficoml
jp
mov
sarl
xchg
push
cmc
mov
loopne
xchg
xchg
jo
or
test
les
inc
out
leave
js
xor
push
int3
pop
and
adc
mov
ds
popa
add
push
and
stc
mov
in
jne
rol
add
add
mov
cmp
cmpsb
mov
icebp
jbe
add
adc
lods
mov
push
fnsave
pusha
fcmovu
push
pop
movsl
sub
outsl
or
in
int3
push
cwtl
in
lret
int3
stos
ds
mov
sub
or
pop
xchg
mov
scas
jecxz
mov
pusha
aas
pop
loop
insl
mov
jne
jnp
inc
add
jmp
sbb
xchg
lret
loop
andb
xor
addr16
outsb
shl
lods
scas
arpl
sbb
xchg
sub
outsl
mov
xor
mov
les
push
rcl
push
add
xchg
mov
mov
aas
dec
std
fxch
cmp
add
shl
ja
cmp
jns
inc
or
insl
dec
scas
hlt
gs
jl
test
adc
sbb
xchg
jns
pushf
push
push
lods
xor
out
cwtl
xchg
out
rcrb
sub
mov
loop
imulb
sub
lock
dec
and
adc
into
je
pop
das
adc
clc
inc
imul
adcl
or
test
sub
daa
popf
cwtl
add
fimull
or
in
psadbw
clc
push
sbb
cmp
jg
js
sub
cli
hlt
les
mov
xchg
out
jbe
pop
test
outsl
ret
subl
mov
jp
mov
mov
jp
cmp
ds
and
push
inc
arpl
ret
mov
push
cltd
div
or
call
mov
push
in
or
ja
outsl
movsb
imul
or
dec
mov
movsb
or
push
fsub
jp
jne
addr16
sub
jne
cmpsb
inc
aam
pop
sub
mov
adc
out
mov
outsb
mov
aas
mov
cltd
xchg
dec
adc
pop
sbb
lods
fistl
inc
push
or
mov
xchg
and
jne
or
popf
out
cmpsb
je
popa
ror
mov
mov
xchg
scas
push
jns
std
or
andps
add
sub
bound
xor
pop
mov
addr16
test
test
and
sbb
movsl
sar
jecxz
cmp
jp
cwtl
xchg
js
les
adc
out
or
jp
cmc
ret
daa
mov
cmpsb
repz
decl
adc
std
frstor
imul
dec
std
add
iret
sti
adc
ja
mov
cltd
pushf
xor
test
and
sar
cmpsl
fmuls
add
loop
or
push
dec
les
xlat
repz
outsb
sti
inc
mov
or
sub
sub
mov
mov
aas
je
adc
dec
mov
push
cmpsl
mov
inc
xor
and
and
push
insl
xchg
pop
cmp
or
cli
repnz
or
push
add
mov
sbbl
push
je
data16
cmpsb
movb
sub
daa
stos
adc
repnz
mov
aam
xchg
adc
aad
clc
fsubrs
enter
adc
jno
mov
mov
insl
cmpsb
sbb
sub
stos
jns
mov
xchg
or
lods
sbb
add
les
mov
sbb
jl
enter
pop
insl
dec
add
xchg
mov
icebp
sub
pop
pop
mov
or
push
add
hlt
ds
fwait
inc
or
pop
mov
gs
jns
cli
add
pop
xor
iret
repz
push
push
lahf
xchg
mov
cmp
sub
sahf
sbb
popa
icebp
rcl
pop
xchg
sbb
js
or
sbb
mov
lods
mov
sbb
jecxz
lods
adc
jne
leave
loopne
test
les
je
aas
cmpsb
xchg
push
add
mov
pop
je
pushf
xchg
aad
dec
enter
pop
mov
out
mov
adc
pop
push
nop
or
mov
sub
notl
lahf
sbb
jb
in
out
ljmp
jno
xchg
push
fwait
int
xor
mov
icebp
pop
push
push
jnp
push
mov
shlb
push
lods
daa
in
xchg
jmp
outsl
loopne
sub
clc
sub
mov
or
sbb
test
push
xchg
jne
inc
sbb
shl
adc
mov
mov
xchg
cmp
xor
mov
adc
or
sbb
mov
xor
add
or
jmp
push
pop
les
push
mov
loope
adc
xor
out
int
sub
aaa
call
sbb
dec
jno
and
pop
add
movsb
lahf
pop
cmp
popa
test
pop
jns
jge
insl
mov
xchg
xor
and
and
dec
jne
loopne
xchg
incb
jge
mov
adc
ffreep
mov
jmp
loopne
and
mov
scas
sbb
dec
dec
test
fstps
adc
or
es
xchg
movsb
jae
repz
pop
out
push
out
jnp
adc
mov
lcall
lcall
frstor
and
mov
fistpl
arpl
loopne
je
push
orl
ficoms
mov
lahf
push
ficompl
dec
bound
sub
movb
insl
push
jg
jo
adc
and
push
fwait
mov
in
fistl
pop
iret
rorb
lea
xor
sbb
jmp
mov
xor
xor
ljmp
hlt
dec
fmul
and
pusha
dec
sbb
movsl
cmpsb
popa
xor
movsl
cmp
cmpsl
inc
push
or
nop
sarl
pop
aaa
xlat
xorl
pop
mov
lret
shrb
mov
and
xchg
lock
daa
add
sub
movsb
add
jno
xor
jle
bound
sub
pop
lret
and
out
sub
push
mov
adc
adc
inc
lock
insb
cmp
aaa
jmp
xlat
cmp
test
clc
ret
cltd
dec
jb,pt
jl
rcll
inc
push
adc
jo
adc
xlat
dec
mov
fwait
mov
sub
xchg
xchg
inc
sbb
stos
xor
mov
inc
and
sub
push
jl
or
push
push
repz
gs
adc
das
inc
ret
jae
fmulp
and
pop
outsl
push
adc
pop
adc
pop
pop
add
in
xor
add
jge
jb
adc
and
popf
mov
mov
mov
pop
mov
ss
adc
and
rorl
into
popa
xchg
dec
enter
decw
test
aam
add
mov
fistl
stos
inc
mov
clc
addr16
dec
sbb
insb
mov
sub
cmp
xchg
xor
movsb
lahf
cmp
or
mov
int3
and
int3
adc
call
mov
xchg
test
add
xchg
sub
cmpsb
xchg
push
repnz
enter
adc
pop
cmp
mov
stc
lcall
adc
mov
jns
cmp
xchg
sahf
or
lret
dec
mov
js
or
add
rolb
mov
das
mov
lahf
cs
and
aam
jno
or
and
push
inc
jbe
int
or
js
push
je
lret
cld
cmpsl
pusha
aam
std
push
adc
sub
pop
stos
rcr
sbb
cltd
sbb
or
dec
dec
mov
jo
fisubs
mov
xchg
data16
out
cwtl
add
test
cmp
and
cmpl
inc
or
js
addr16
jae
cmp
xorl
daa
call
sbb
mov
je
push
iret
pop
loop
xlat
into
pusha
call
movsl
repz
stos
sbb
cmp
xchg
jmp
push
pop
push
cmp
mov
sbb
push
ss
xchg
push
mov
aas
dec
daa
sti
test
stos
cmp
ljmp
cmp
bound
mov
add
jge
add
pop
mov
and
movsl
add
mov
nop
or
sbb
fisttpll
rcrb
int3
or
movsl
adc
not
mov
pop
pop
jge
mov
repnz
je
dec
bnd
mov
mov
imul
pop
das
sub
and
in
push
nop
jae
inc
stos
pop
sbb
mov
xchg
push
inc
pushf
sarl
insl
mov
cwtl
mov
push
js
inc
and
jmp
cmp
jb
xorl
gs
adc
int3
addr16
leave
mov
call
mov
icebp
lea
xor
inc
pop
aam
movsb
lods
fsub
mul
daa
jecxz
les
lods
mov
aas
cli
mov
ret
gs
sub
les
mov
fnstsw
lds
mov
jge
icebp
fisubl
cmp
push
jbe
addr16
add
sub
lcall
mov
lock
test
sub
rcll
adcb
xchg
lret
in
or
pop
loope
mov
shll
fmul
adc
rcll
cmp
clc
mov
rcll
xchg
mov
clc
mov
xchg
mov
mov
xchg
insb
sbb
mov
sbb
jb
mov
orl
mov
jmp
cmpsl
push
push
lods
and
jb
cmp
mov
int
jecxz
loopne
es
fsts
popa
dec
mov
mov
sub
cli
sarb
rcrl
pop
mov
mov
je
aas
dec
js
out
std
fildll
jecxz
jne
dec
in
lcall
test
jg
jbe
inc
hlt
inc
clc
sti
xchg
pop
sbb
cmp
add
xchg
xlat
or
push
inc
or
jl
cmp
or
out
dec
popa
adc
sahf
imul
daa
out
add
loopne
cmp
cmp
adc
aas
ret
pop
ror
jnp
scas
stc
out
orb
shl
push
pop
push
pusha
cmp
push
pop
popa
aaa
mov
sbb
out
push
jo
sbb
subb
jo
into
and
fwait
pop
stos
xchg
pop
fwait
in
push
mov
fucomip
icebp
jmp
inc
scas
mov
xor
repnz
sahf
jo
and
jp
cmp
rcrl
imul
xchg
iret
or
mov
outsl
pop
jno
imul
repz
out
jns
mov
push
clc
pop
or
mov
out
push
stos
outsl
sub
jns
cmp
negl
pusha
sbb
out
push
lret
or
push
jbe
push
sub
mov
popa
ret
xchg
adc
xchg
xor
adc
inc
push
nop
and
fbstp
int
mov
xor
jge
cmp
jle
jle
mov
or
push
cmp
inc
push
jo
cwtl
imull
pop
iret
or
push
sarl
jl
sbb
mov
test
movsb
push
pop
loopne
jmp
out
add
and
cmp
jp
push
test
shlb
stos
add
push
fstps
xchg
push
movsl
push
in
ljmp
rcr
mov
push
ds
int3
pusha
les
mov
sbb
movsl
in
popf
mov
or
adc
push
jb
xchg
xor
rol
pop
imul
pop
call
inc
fwait
mov
jl
ds
mov
mov
movsl
xor
jl
cmc
mov
xchg
fs
out
sbb
adc
mov
xchg
in
sahf
addr16
push
sbb
inc
es
sti
in
aaa
jle
fldenv
stos
mov
mov
ss
icebp
pop
fisubrl
and
xor
cmp
outsl
mov
leave
repnz
push
add
sbb
xchg
loop
pop
jno
or
jne
pop
cmp
or
cmc
xor
push
add
dec
cmc
xor
outsb
or
xlat
gs
orb
cmp
test
les
mov
jp
jo
pop
cld
out
inc
mov
jle
mov
add
into
pop
push
xor
adc
and
mov
idiv
pop
and
iret
mov
mov
movsl
popa
push
and
xchg
sub
dec
loop
mov
adc
and
xor
lods
notl
push
push
pop
mov
xchg
or
add
xchg
ljmp
insl
inc
lods
pop
pushf
sti
bound
roll
pusha
or
ffreep
sbb
cmp
imul
stc
cmc
mov
inc
dec
inc
pop
pop
sarl
daa
fsin
stos
sbb
dec
out
mov
icebp
nop
push
ljmp
mov
or
out
in
jnp
add
fadd
push
xorl
aas
xchg
sbb
push
fiadds
addr16
hlt
mov
inc
les
stos
jmp
jo
cmp
jae
lcall
add
or
es
or
jge
xchg
ret
addr16
mov
sahf
jne
jl
jne
lahf
outsb
out
mov
insb
es
jnp
jecxz
out
xchg
push
imul
xor
push
jle
leave
jle
xchg
test
shlb
lret
push
ja
adc
fcomps
loopne
fbstp
or
lret
aas
pop
cmp
or
dec
sub
xchg
push
clc
sbb
stc
mov
ds
jge
xchg
pop
mov
out
sbb
dec
add
mov
pop
icebp
pop
fdivr
adcl
mov
dec
das
iret
popf
loop,pt
iret
popf
es
clc
lahf
fs
xor
mov
push
cwtl
xorl
add
clc
and
mov
popf
in
pushf
jne
pop
fisubs
or
mov
out
lret
fs
lret
inc
push
scas
sahf
std
add
sbb
negl
aaa
pop
aaa
add
test
push
leave
and
inc
mov
mov
fnsetpm(287
filds
std
cmp
out
push
in
popf
inc
xchg
lret
jge
or
flds
fwait
outsl
pusha
fdivp
nop
lods
adc
cwtl
xor
ljmp
mov
imul
imulb
add
and
cmp
daa
sub
inc
push
or
and
pushf
addr16
cmpsl
mov
orb
fisubs
lret
mov
sub
outsb
mov
ret
mulb
mov
inc
jge
sbb
xor
js
cmp
or
xchg
addb
pop
pop
jmp
xlat
add
lret
inc
mov
and
scas
call
icebp
adc
dec
arpl
dec
inc
outsl
cmp
cmp
outsl
jbe
cmpsb
lret
in
mov
push
in
jno
js
jmp
push
mov
pop
push
jo
stc
mov
dec
testl
inc
adc
add
imul
and
xchg
aaa
mov
lret
pop
aam
mov
jnp
pop
fcom
cmp
or
out
test
mov
push
cmp
cs
xor
js
out
call
xchg
dec
mov
dec
mov
adc
mov
fwait
call
adc
cmp
test
jp
mov
loope
data16
pop
dec
mov
mov
and
sti
cwtl
sub
clc
jne
jo
adc
and
aas
out
lods
fnstenv
and
movsb
lods
movsb
adc
mov
add
mov
enter
mov
cmp
out
pop
and
jge
mov
xchg
stc
inc
inc
add
int
mov
add
xlat
ljmp
mov
sub
das
dec
push
mov
add
add
mov
push
push
aam
mov
mov
mov
inc
test
test
fbstp
je
xor
aam
mov
outsb
xchg
dec
cwtl
sub
inc
cmpsb
pop
out
out
xor
mov
inc
icebp
inc
test
std
jmp
xor
jno
dec
daa
push
pop
imulb
xlat
sbbl
mov
ret
inc
cwtl
mov
or
loope
les
jb
mov
pop
inc
mov
xchg
ret
cmp
dec
mov
dec
lar
inc
enter
or
fs
test
mov
add
cmp
jp
cld
in
cmp
and
cld
rcl
test
test
inc
fsubl
or
push
out
stos
push
aad
test
adc
push
pusha
jno
in
call
mov
jno
or
push
pop
add
pushf
push
rcrl
mov
inc
int
jne
push
xor
lcall
fisubrl
aaa
adcb
out
bound
ljmp
add
adc
fmuls
je
sub
mov
sub
aas
enter
lods
mov
xchg
fists
movsb
pop
lods
xor
mov
iret
int
lahf
dec
sbb
jae
dec
outsb
and
inc
cmp
lret
push
fldenv
xchg
inc
iret
jae
je
pop
or
int
nop
pop
lcall
scas
add
sbb
je
add
mov
push
mov
scas
adc
inc
or
sub
test
adc
repnz
push
incl
sbb
aaa
sbb
jnp
shll
lds
mov
test
jo
sub
fwait
xchg
out
xchg
out
orl
loope
aad
ret
mov
dec
mov
cmc
ret
push
or
lret
test
jmp
xchg
insb
xor
mov
mov
adc
fucom
jge
jl
sub
test
and
mov
imul
jae
in
mov
sbb
pushf
cmp
gs
mov
jle
mov
jo
mov
in
mov
aas
and
xor
inc
scas
ss
and
push
jb
dec
lar
inc
rcll
adc
jl
aas
and
dec
shll
js
lock
clc
xchg
notl
sbb
mov
and
aaa
es
add
repnz
insl
call
out
in
sub
clc
xor
xor
lcall
mov
sahf
stc
fisubs
or
push
insl
mov
testl
mov
call
and
js
mov
lock
in
mov
outsl
out
mov
insl
pushf
sahf
out
insb
inc
mov
scas
stc
repnz
add
mov
mov
and
out
filds
mov
sarb
xor
roll
adc
sub
ds
outsl
jge
inc
sub
lret
pop
lock
cmp
lock
xor
cmp
ljmp
cmp
mov
lods
jb
inc
push
sbb
in
fcomp
leave
int3
mov
pushf
mov
pop
dec
dec
cmp
sub
sbb
or
cld
jmp
int3
mov
pushf
mov
pop
dec
dec
cmp
sub
sbb
or
cld
imul
cmp
mov
imul
sub
sbb
or
cld
jmp
int3
mov
pushf
mov
imul
dec
mov
shrl
jns
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
xor
jb
bound
inc
jb
push
jmp
ret
insl
loop
xchg
or
mov
fnsave
std
adc
and
rorb
jge
insl
loop
xchg
bound
cmp
jb
call
mov
mov
rclb
int3
push
cli
pop
loope
cld
pop
int3
cmp
add
add
mov
dec
sbb
cmp
xchg
nop
aas
push
dec
xchg
xchg
in
aam
and
in
or
insl
or
fidivs
int3
leave
fdivrs
ficoms
movsl
dec
or
ss
test
or
sub
bound
add
jecxz
adc
dec
inc
shlb
les
mov
mov
xor
test
movsl
and
loop
imul
sbbb
mov
lods
or
add
lret
int
test
xor
scas
or
loop
sub
inc
sub
adc
and
bnd
xor
mov
mov
fstl
scas
pop
sarl
dec
repnz
les
xchg
or
sbb
jmp
imulb
push
mov
pushf
and
scas
xor
and
mov
rorb
or
push
rorb
fwait
es
add
rorb
pop
repnz
loop
xchg
or
mov
fnsave
std
adc
and
repnz
loop
xchg
or
mov
or
dec
inc
ror
adc
mov
mov
or
or
testl
inc
mov
push
cltd
fadds
adc
push
mov
and
xor
add
enter
mov
sbb
jl
pusha
dec
push
sub
xor
nop
xchg
push
cltd
mov
shll
and
xor
mov
pop
sub
out
mov
xor
in
mov
cmp
pop
adc
sahf
mov
scas
ljmp
push
cmp
test
adc
pop
stos
lret
cmove
sub
and
xchg
or
aaa
int3
enter
inc
jmp
cmpl
lret
scas
and
call
fdivrs
jo
insl
xchg
popl
lea
popf
mov
fdivl
cmpsb
inc
lcall
cmp
mov
xor
jle
ret
mov
mov
sbb
add
cmpl
out
mov
and
scas
enter
lods
or
leave
adc
xchg
loopne
push
add
int
ds
mov
push
lods
icebp
icebp
arpl
jae
aad
xchg
repz
sub
jle
add
mov
adc
adc
ret
mov
std
xrelease
jne
mov
and
adc
and
les
sub
fdivp
mov
repz
xchg
dec
ljmp
ja
test
jp,pt
int3
jl
insb
movsb
gs
rcl
or
adc
jg
add
notb
sub
and
xor
movsb
and
xchg
mov
das
rcrl
mov
mov
add
rol
add
movb
das
in
pop
icebp
fistl
das
mov
xor
adc
cmpsl
mov
mov
fmuls
rorl
sbb
sub
cld
mov
mov
hlt
aaa
lahf
adc
sbbl
mov
data16
mov
mov
lods
xchg
les
ret
jae
lea
mov
sub
rcl
imul
cld
sub
ret
xor
or
ffree
popa
pushf
bound
or
out
mov
ss
pop
fadds
pop
outsb
xor
mov
pop
aam
adcl
js
jnp
push
aam
adc
sahf
jle
dec
and
pop
push
and
orl
and
ret
imul
adc
jae
out
cltd
push
pop
cmp
in
pusha
test
mov
fwait
and
mov
pop
mov
cmc
and
and
hlt
scas
pushf
jb
dec
jnp
xchg
call
inc
jg
sbb
jge
add
lods
push
insl
sbb
mov
adc
outsl
daa
mov
or
adc
and
cli
in
mov
neg
cmp
mov
cmp
adc
aad
inc
imul
adc
and
idiv
shlb
mov
cmpsl
fstpl
and
test
stos
mov
xor
sti
cmpsl
adc
lcall
adc
jl
mov
xor
sbb
push
into
push
push
add
cmc
movsl
sarl
dec
push
rorb
das
repz
dec
ret
mov
sbb
xchg
xchg
into
imul
jns
sub
inc
loope
pop
lds
xor
adc
sub
out
shlb
inc
mov
nop
dec
dec
fisttps
xor
fistl
stc
and
lods
iret
insl
iretw
rorl
xchg
push
lret
mov
inc
mov
shl
jbe
popa
xorl
push
pop
roll
leave
jg
pop
cmp
dec
les
cmp
xor
sub
mov
fucomip
lahf
lret
imul
xchg
das
fdivrl
cwtl
sub
push
rorb
push
call
push
sub
or
jg
cltd
jecxz
mov
mov
rcr
mov
mov
pushf
cmp
jg
sti
das
push
adcb
jne
inc
scas
loopne
or
mov
stc
jns
fs
insl
jbe
repnz
pop
sti
aad
stos
sahf
out
xor
fucomp
pop
aas
jg
push
fs
test
aam
push
pop
div
push
out
dec
bound
xor
movsb
mov
loope
rcrl
rorb
in
imul
or
and
push
push
dec
out
stc
lods
addb
call
popf
cmp
xchg
sbbb
movsb
lret
inc
hlt
jl
dec
insb
add
add
jno
bound
xor
mov
rcrl
fcmovu
cld
jge
lds
in
push
push
pop
inc
fmull
sbbb
int3
loopne
dec
adc
jae
jecxz
sbb
push
out
nop
negb
dec
lret
xor
mov
stos
shll
dec
loopne
or
sahf
mov
sub
stos
nop
mov
mov
gs
xchg
sub
arpl
das
sti
inc
pusha
mov
rcl
repnz
mov
push
lcall
and
mov
sbb
lahf
fistpll
inc
int3
xchg
fwait
push
pop
dec
xchg
mov
jp
add
inc
jl
fldcw
test
cwtl
jb
stos
mov
sub
add
sub
mov
popf
cli
sbb
popa
fidivrs
push
hlt
mov
mov
shll
push
inc
cld
subb
lcall
and
xchg
mov
jmp
cmpsl
std
gs
test
fadds
out
and
inc
mov
test
repz
jns
dec
jne
xor
test
in
push
ja
add
fsubs
std
or
xchg
out
sarb
test
or
cmp
xor
xlat
sarb
mov
add
outsb
adc
or
repz
fcompl
add
sbb
notb
jb
mov
mov
fsubrs
xor
sbb
mov
fdivrs
dec
lret
dec
mov
mov
aaa
fs
mov
daa
pop
lods
loopne
es
adc
and
je
outsb
shlb
lods
mov
mov
and
cmpsl
pushf
cmp
rorl
popf
movsl
xorb
mov
dec
loopne
push
daa
inc
out
adc
or
cmp
fsub
push
dec
scas
imul
xlat
and
xchg
cmp
jne
rorb
xchg
dec
pusha
pop
lods
movsl
sub
and
je
dec
imul
popf
popf
or
mov
shrb
cmp
push
imull
sub
sub
ljmp
aam
push
pop
lret
and
adc
xchg
dec
mov
xchg
arpl
rcl
rcrb
xchg
jae
xchg
psubsw
mov
rorl
jno
loopne
icebp
fs
or
mov
xchg
adc
int3
mov
push
and
mov
movsl
clc
cmp
dec
xchg
dec
push
nop
xchg
pop
adc
fisubs
out
lcall
addl
xchg
sbb
enter
sbb
fisubs
push
push
das
ret
jns
push
xchg
nop
mov
adc
out
outsb
jg
mov
imul
lret
out
push
add
clc
pop
mov
xchg
sub
xor
cmp
add
dec
mov
push
sbb
aas
gs
cmp
jb
fisttps
imul
in
aas
dec
adc
push
fbld
mov
dec
add
jbe
jge
xchg
sbb
push
testb
mov
mov
mov
inc
outsl
xchg
pop
xor
mov
out
shll
verr
push
sahf
cmp
lds
nop
fidivl
jle
sub
cli
jge
daa
lods
stos
pop
les
out
inc
sub
clc
xchg
cmp
xor
sti
cld
lds
lock
sub
mov
mov
jmp
loope
jecxz
dec
push
sub
mov
push
sbb
cltd
je
sbb
test
pop
dec
movsl
test
icebp
cmp
movsl
fcomip
cwtl
divl
push
cmp
aas
dec
add
dec
out
jne
mov
pop
mov
dec
jl
fistpl
mov
sbb
mov
pop
in
sbb
push
rolb
repnz
into
xchg
rcrl
das
addr16
loope
jp
cmp
xor
or
sti
jecxz
push
dec
scas
cmp
shl
sbb
out
fstps
cli
dec
mov
adc
negb
mov
mov
cmp
mov
xor
das
and
sti
push
out
adc
mov
xor
daa
and
pop
das
sbb
insb
mov
ljmp
and
mov
adc
mov
dec
push
ja
jae
jmp
sahf
pop
push
fisubl
in
loopne
and
movsb
cmpb
pusha
std
pop
rcr
dec
cld
mov
cmp
loope
push
and
lds
repz
sub
loop
cmp
inc
dec
xor
push
lcall
pop
jecxz
mov
rcrb
push
mov
mov
loope
enter
push
outsb
push
cmp
addl
or
bound
mov
test
jp
cmpsb
lds
out
push
lret
aas
enter
pop
adcb
jg
in
shll
push
out
xor
mov
cmp
sahf
lret
mov
pop
call
push
sub
stos
sub
out
fcmovnbe
nop
in
mov
ss
dec
addr16
xor
out
ret
jecxz
mov
jnp
adc
dec
jl
jl
dec
jp
std
dec
sub
xor
sub
or
sub
xor
out
nop
icebp
movsl
push
sub
add
push
std
stos
jle
ret
push
mov
and
sbb
jp
jmp
sub
dec
add
or
out
pop
test
sbb
mov
testl
cmc
pusha
movsl
hlt
sbbl
daa
pop
add
or
and
sbbb
cmp
xchg
ds
in
or
jae
imul
testb
jns
pushf
mov
sti
mov
test
dec
xor
dec
loope
sub
icebp
rolb
out
pop
lods
mov
sahf
mov
subl
adc
out
or
pop
jae
or
mov
test
mov
jae
dec
push
daa
xor
add
mov
fstpt
jg
rorl
mov
cmpsl
inc
cmp
and
or
xchg
std
xchg
lahf
dec
add
bound
test
call
loope
arpl
dec
jecxz
popa
dec
cmp
cmpb
mov
insb
inc
pop
xor
push
fmuls
aad
incb
outsl
aas
jae
pop
fcom
or
sbb
in
stc
jl
lahf
stos
mov
add
je
xor
mull
sbbl
outsl
stos
imul
jmp
pop
dec
mov
pop
test
push
push
popf
es
xchg
jne
mov
repz
jo
push
mov
cmp
in
aaa
addr16
std
outsl
fnstenv
and
out
adcb
fmull
sahf
addr16
cld
cmp
rcll
iret
ret
cmpsb
rcrl
lock
std
movsl
dec
repnz
sbb
sbbl
lods
enter
xlat
lods
repz
addb
jno
push
mov
and
cmp
cmp
imul
push
xchg
icebp
jns
inc
bound
pop
mov
insb
mov
inc
aas
lret
sub
shlb
jnp
sbb
leave
jo
subl
mov
xor
xchg
inc
ja
sbb
or
stos
sub
sub
lahf
in
hlt
mov
movsl
sub
out
repnz
sub
ror
xchg
xchg
mov
dec
mov
xchg
sub
pop
stc
inc
scas
repz
sar
push
mov
cmp
cld
dec
push
hlt
sbb
mov
jno
mulb
pop
sahf
arpl
cmc
cmp
cmpsb
sti
jmp
arpl
add
rorb
in
aam
in
xor
iret
or
xchg
mov
mov
aad
lret
lock
sbb
in
stos
add
jge
push
mov
inc
js
inc
jno
pop
lret
push
sbb
inc
or
mov
xorb
shll
cmp
mov
out
pop
mov
repz
loopne
stc
mov
and
mov
out
xchg
rcrb
lods
ret
jp
pop
inc
loope
notb
cld
int3
ljmp
popa
adcb
loop
xchg
sarl
std
ss
movsb
loope
outsb
mov
and
hlt
pop
push
lock
leave
mov
jge
adc
pop
pop
or
ljmp
aaa
stos
push
cmp
mov
fistps
push
clc
enter
sahf
inc
xchg
paddb
scas
mov
xchg
ljmp
stos
sbb
and
stos
loope
pop
or
arpl
jo
mov
sti
clc
adc
pop
mov
mov
mov
clc
cmpsl
mov
popfw
jp
xor
inc
sub
pop
dec
dec
add
or
push
cmpsb
mov
ret
outsl
sbb
adc
and
repnz
mov
jbe
faddl
imul
lret
adc
pop
stc
movsl
mov
insl
cltd
xor
xchg
pusha
pop
fs
push
test
jecxz
orb
ds
loopne
subb
push
addr16
bound
decb
cmp
pop
shrb
adc
pop
pop
push
pop
mov
rorl
je
xchg
loopne
inc
pop
xchg
push
xor
imul
xlat
xchg
inc
pop
or
cmpl
push
and
jnp
cmp
pop
pushf
scas
sbb
mov
addb
mul
hlt
inc
and
push
mov
mov
cmpsl
repnz
inc
mov
push
ljmp
gs
xor
popa
popf
mov
test
sti
out
int
inc
test
xchg
rol
cmp
or
lock
inc
mov
aam
or
mov
cmc
push
mov
pushf
jmp
notl
fcmovu
mov
cmp
stos
xchg
enter
lret
or
push
andl
push
jae
xchg
mov
push
scas
mov
sub
or
stos
test
push
fildll
add
jmp
and
jecxz
mov
cmc
xor
lahf
lods
daa
popf
sbb
pop
adc
int
inc
jl
cmp
sub
lods
mov
pmuludq
cmp
addr16
test
or
cwtl
mov
inc
arpl
mov
xchg
jbe
push
jmp
ficoms
pop
push
aad
int3
or
push
pop
dec
mov
xor
xchg
inc
out
mov
xchg
lods
push
adcb
lock
cmpsl
pop
dec
cmp
daa
out
push
test
and
ror
mov
or
aad
out
or
hlt
cld
or
inc
add
or
push
jl
fcmovbe
push
int3
scas
je
sarl
xchg
pushf
mov
sti
add
ss
or
and
pop
push
mov
sti
in
dec
testb
mov
mov
cmpsl
cmpsb
xorl
outsb
push
enter
into
ljmp
mov
lret
add
xor
cmpsb
and
push
btr
jmp
pop
mov
dec
cmp
testl
mov
dec
or
ljmp
in
in
imul
mov
adc
fnstsw
sub
loop
mov
imulb
movsl
sbb
test
inc
rcll
mov
fldenv
addr16
pop
scas
or
cmp
and
movsb
dec
add
xchg
mov
das
mov
dec
or
daa
jecxz
mov
iret
std
push
sbb
enter
les
and
xor
jp
test
in
xor
ret
cmpsl
adc
dec
lahf
mov
data16
xchg
sub
push
rclb
cwtl
inc
xchg
sbb
add
jmp
add
es
inc
sbb
xchg
bound
sbb
sub
sbb
push
inc
fisttps
dec
int3
xchg
test
xchg
mov
sub
nop
data16
leave
ja
shlb
stos
aad
push
bnd
in
dec
pop
lret
pop
adc
fstp
pop
xor
pop
xchg
sbb
mov
push
xor
xor
sub
lea
mov
repz
mov
bound
lcall
fcmovnu
sbb
mov
fwait
cmpsb
mov
sbb
cli
mov
pop
inc
or
push
jle
lret
push
or
jge
adc
fdivrl
in
mov
push
orl
mov
jle
in
jg
std
or
mov
popl
adc
add
push
pop
clc
jmp
inc
iret
add
loopne
jno
dec
or
sbb
push
inc
dec
adc
lahf
pop
js
adc
push
lds
ja
inc
fstpt
int3
popa
das
mov
mov
push
jbe,pt
pushf
ficoms
fimull
mov
insb
adc
repz
cli
andb
clc
fsubs
inc
add
roll
out
or
adc
adc
xchg
testb
inc
dec
jno
add
mov
lock
inc
ret
sahf
dec
mov
in
mov
mov
int
add
rorl
inc
xorl
fs
in
jbe
orb
std
fwait
out
sarb
and
push
aas
add
dec
aam
mov
sbb
jno
xchg
pop
mov
dec
and
mov
dec
or
jae
add
add
sahf
or
loop
dec
jmp
aad
inc
mov
sbbb
cwtl
adc
inc
lea
out
inc
push
cmp
stos
roll
jb
and
mov
jo
in
mov
push
mov
sbb
imul
mov
inc
mov
jb
mov
pop
test
dec
push
push
sahf
cs
and
shrl
sub
mov
jns
push
push
adc
js
rorb
jo
jge
cmpsb
or
outsb
add
sbb
xchg
fmulp
mov
bound
xchg
call
test
adc
ss
cltd
pop
push
not
mov
pop
inc
out
shlb
sbb
jp
stos
inc
outsl
and
add
mov
ss
push
bound
mov
sbb
sbb
std
jle
xchg
les
cmpsl
mov
aad
push
repz
leave
xor
repnz
stc
mov
adc
inc
jmp
rcr
jg
mov
sbb
cmp
scas
ret
sub
jo
rolb
in
std
mov
mov
or
test
sti
mov
add
leave
adc
sarl
stos
iret
pop
sbb
push
mov
mov
or
aad
push
pop
pop
adc
dec
push
mov
repnz
or
ret
add
jnp
sub
lods
sbb
pop
mov
rolb
xchg
andl
stc
in
dec
and
add
mov
sub
cwtl
sti
ret
icebp
mov
call
shrl
pop
dec
mov
add
push
in
loop
in
imul
pop
aad
fisttpll
cltd
in
cmc
and
in
push
cmp
dec
xor
in
das
data16
test
lods
sub
add
mov
rcr
sub
mov
aaa
push
loopne
cmp
fnstenv
adc
sbb
addb
in
or
inc
add
jge
sub
or
mov
daa
loop
test
in
fldenv
pop
dec
push
test
dec
ficompl
dec
mov
fistl
outsb
pop
and
imull
scas
mov
xchg
sbb
mov
ljmp
and
dec
push
dec
adc
dec
fisubs
cmpl
pop
mov
bound
lret
mov
jns
push
sub
jecxz
xchg
scas
stos
addr16
ficoms
test
dec
fisttps
jp
xchg
clc
and
xchg
lods
sbbb
movsb
scas
mov
hlt
cs
xchg
pusha
call
lret
push
lock
and
inc
notl
pop
shrb
fwait
rorb
sbbl
pop
mov
jnp
sub
rol
lock
lret
mov
cmp
loope
and
mov
xor
das
push
inc
mov
pop
or
push
cmp
pop
mov
sub
xchg
je
leave
icebp
pop
outsl
and
mov
inc
mov
scas
cld
aam
xchg
mov
jge
adc
fsubs
adc
cwtl
pop
dec
inc
xor
mov
and
shl
pop
mov
ss
pop
cwtl
jns
inc
fcmovnu
push
enter
add
add
popa
andl
xor
ret
insl
loop
xchg
or
mov
fnsave
std
adc
and
repnz
loop
xchg
or
mov
xchg
jb
std
adc
and
repnz
loop
xchg
or
mov
fnsave
cld
adc
and
pop
insl
loop
in
or
dec
rcrb
fbld
mov
pushf
xchg
add
xor
inc
jb
bound
mov
mov
loope
shl
inc
sub
and
push
adc
jae
inc
bound
mov
fs
clc
mov
fcompp
sbb
adc
outsb
adc
fs
push
add
shr
mov
negb
xchg
mulb
loope
and
add
test
cli
aaa
mov
aad
mov
cmp
cs
fdivrp
iret
int
leave
out
xlat
add
das
repz
test
mov
and
pop
push
fiaddl
and
xor
imul
lods
iret
enter
adc
cli
dec
iret
jle
ret
cmp
push
pop
rcll
fstpl
mov
jg
dec
jle
in
and
mov
stos
mov
int
and
and
pop
aam
pop
add
jns
sbb
cmp
sbb
xor
and
xlat
dec
inc
xchg
aaa
inc
jb
mov
cwtl
into
xchg
shl
xchg
repnz
and
or
jns
imul
hlt
ret
mul
int3
hlt
mov
lods
xorl
inc
je
add
jae
cs
fdiv
repnz
sahf
mov
jecxz
push
inc
push
push
fs
adc
adc
jno
and
ret
aam
rol
icebp
repnz
adc
add
xor
and
push
popa
inc
jno
inc
bound
mov
mov
icebp
repnz
adc
add
xor
and
push
popa
inc
jno
inc
bound
mov
std
xchg
sahf
push
outsl
xchg
jbe
int
sbb
inc
nop
shll
loopne
xor
mov
leave
aas
popf
mov
adc
adc
pusha
in
addr16
test
outsb
mov
cmp
inc
insl
inc
rolb
icebp
icebp
test
movd
xchg
inc
jnp
jbe
stos
ss
pop
pop
hlt
xor
das
xchg
imul
lods
push
add
int
mov
pop
push
out
gs
xlat
daa
lea
jb
sub
in
lods
inc
int
in
mov
insb
mov
nop
or
inc
add
adc
jmp
pop
pop
pop
rcll
pop
mov
or
repnz
adc
stos
mov
insb
sub
sub
mov
ja
inc
sub
push
inc
int3
push
repz
repz
jmp
test
int3
ficompl
fsubl
push
cmpsb
aad
outsb
xor
jae
arpl
mov
xchg
jl
xchg
dec
outsl
ret
xchg
ja
jecxz
movsb
into
call
xchg
mov
mov
hlt
inc
mov
mov
or
cmp
aas
xor
aas
stos
or
mov
fldl
cwtl
xor
popf
mov
inc
roll
lcall
push
sub
gs
push
inc
test
imul
sbb
mov
fidivrs
inc
ja
sbb
rcrl
rorl
pop
mov
scas
std
dec
xor
sub
stos
push
add
lret
add
insl
stos
mov
imul
outsl
xor
in
insb
and
lock
push
inc
std
cwtl
daa
jle
filds
ja
mov
lahf
dec
popf
lods
push
and
mov
xchg
jl
ljmp
mov
outsb
lea
sub
or
stos
mul
adc
fdivr
movsl
repz
enter
scas
sti
jmp
test
dec
outsb
call
lret
push
pop
pop
es
fdivs
lods
outsb
lahf
adc
jecxz
je
xchg
jnp
jb
in
mov
stos
in
add
sub
shll
pop
xor
enter
daa
adcl
cwtl
dec
dec
out
jmp
pop
or
jae
xchg
scas
test
xchg
sbb
inc
test
and
adc
lahf
shlb
aas
jb
mov
mov
jnp
jge
into
pushf
mov
pushf
out
nop
mov
or
outsl
xchg
push
cmp
enter
mov
or
sbbb
xchg
popf
or
lcall
cmpsb
xor
mov
scas
imull
cmp
push
fdivl
lea
cmc
push
pop
in
shrl
imul
and
mov
ss
dec
or
stc
in
sbb
int
xchg
mov
cmpsl
icebp
rol
dec
mov
dec
jno
scas
sbb
xchg
cmp
jle
int
mov
jne
sbb
sbb
arpl
cmp
cwtl
push
sti
sub
mov
jl
ja
mov
xlat
pop
dec
pusha
inc
insl
movsb
dec
inc
lret
mov
fcompl
lret
cli
cwtl
mov
decl
sbb
adc
fistpll
jg
push
mulb
lahf
add
push
jecxz
std
negl
push
pop
clc
sbb
xchg
mov
movsb
or
jns
into
jnp
data16
mov
xchg
test
jmp
popf
sub
mov
jno
aaa
add
xor
ret
pop
mov
cmp
clc
or
sub
jne
mov
jmp
cmp
sti
popa
sbb
sub
cmp
leave
jg
xor
cli
les
lcall
cmp
movsl
pop
pop
xchg
xchg
mov
mov
in
test
addr16
pop
sub
hlt
test
sbb
sti
push
mov
jb
es
xchg
add
mov
add
sbb
pusha
lahf
icebp
mov
xor
in
xchg
sub
sub
adc
dec
add
push
movsl
rep
pushf
push
lret
sahf
adc
dec
filds
outsb
nop
outsl
inc
andb
jb
jecxz
sub
cmp
cmc
xchg
sbb
xor
mov
and
push
xchg
jno
scas
sbb
or
insl
mov
rorl
rep
adc
inc
and
arpl
shlb
xor
xor
push
call
loopne
cmp
jae
aas
cltd
iret
inc
das
xor
sbb
js
inc
loop
or
pop
push
or
and
cmp
and
outsb
sarl
xchg
mov
jo
mov
iret
mov
fwait
scas
iret
scas
outsb
test
je
fildl
and
mov
xor
inc
gs
jecxz
daa
jp
das
shll
adcb
cs
cld
xor
jecxz
xchg
and
pop
int
adc
mov
mov
lea
add
data16
dec
pop
pop
pop
jno
leave
xor
xchg
push
shrl
std
push
or
std
jle
mov
jl
scas
nop
dec
mov
push
mov
inc
mov
inc
cmc
mov
sarb
xorl
movsb
neg
add
mov
pop
jns
xlat
arpl
cmp
stos
cmpb
test
mov
push
mov
insb
pusha
addr16
and
push
pop
add
mov
mov
mov
insl
inc
iret
jge
push
rcll
in
xor
out
shlw
arpl
push
clc
xchg
mov
aas
divl
mov
ret
insb
mov
mov
aas
in
sbb
pushf
inc
pop
mov
lret
inc
lretw
shll
addr16
aaa
sub
bound
aas
pushf
sbbb
ja,pt
dec
in
cltd
std
inc
test
in
sbb
dec
sub
dec
push
sub
leave
scas
xor
sub
lods
pop
das
out
aad
sub
push
jb
sarb
add
out
pop
and
aad
loopne
mov
ficoml
outsb
imul
stc
js
sbb
lea
dec
popf
arpl
test
imul
and
adc
add
ret
push
lds
int3
das
lcall
push
insl
scas
and
push
into
lods
jge
cwtl
int3
jae
xchg
xchg
or
or
sub
icebp
xchg
stos
aas
dec
add
push
and
add
pushf
lea
or
hlt
std
in
push
add
test
outsl
lcall
adc
ljmp
push
sub
neg
leave
inc
loopne
aas
stos
cltd
push
xor
mov
div
ss
movsb
adc
ror
sbb
mov
cld
mov
fcompl
push
dec
test
sbb
cmp
mov
pop
add
jno
and
mov
jo
lcall
push
gs
ffreep
loope
ficompl
out
cld
lods
cs
sar
je
call
cmp
fmull
adc
sub
divl
dec
jge
xor
pop
mov
mov
enter
fbld
lahf
aaa
enter
mov
cltd
add
cmpsb
jne
out
imul
sbb
jp
lea
ja
adc
in
add
out
mov
scas
inc
leave
sbb
inc
mov
ljmp
movsl
negb
loopne
mov
fbld
std
and
incb
pop
add
mov
icebp
dec
and
or
sbb
outsl
add
subl
mov
jae
leave
inc
test
fmuls
sbb
pushf
insl
xor
adc
int
lret
fwait
arpl
dec
pop
int
orb
xor
fcmovne
cmc
adc
and
dec
aad
mov
adc
push
xor
push
sbb
xchg
inc
movsb
mov
outsb
dec
dec
pop
mov
xchg
cmp
dec
aad
inc
stc
hlt
shll
add
incb
pop
out
outsl
pop
or
lret
sahf
int
cmp
push
fs
int3
mov
add
pusha
lahf
and
inc
jae
lds
cwtl
popa
loope
jmp
clc
sub
fs
ret
outsl
cmpsl
pop
and
push
icebp
push
push
mov
int
inc
push
pop
sub
pop
ret
dec
rcrb
lea
cli
roll
sbb
popf
fimull
sbb
cmp
sub
in
cmp
inc
sbb
xchg
cltd
xor
cmpsb
xchg
sbb
mov
test
adc
dec
push
in
jl
fs
dec
test
cli
mov
mov
sbb
aaa
testl
mov
xor
ficoml
daa
dec
dec
pop
sub
jno
cmovo
mov
sub
fdivl
pop
leave
add
lcall
std
push
addr16
div
jge
int3
sti
shl
repz
jnp
vmwrite
pop
jmp
insl
flds
inc
sarl
mov
pop
stc
cmp
repz
cld
ror
dec
and
cs
xor
or
xchg
jl
call
inc
mov
mov
pop
lahf
mov
cmpsl
cmp
xor
fwait
xchg
popf
outsb
dec
and
outsb
inc
pop
aaa
xchg
movb
mov
cmp
adc
adc
popf
fidivs
push
andb
andb
test
mov
stos
neg
sub
add
xchg
sbb
int
pop
fsub
lods
in
scas
adc
test
call
loope,pt
adc
inc
pop
arpl
insl
stos
push
ret
pushf
into
xor
sbb
sbbl
cmpsl
dec
jae
ds
popa
pop
addr16
ljmp
gs
mov
pop
cltd
mov
jmp
aas
mov
addr16
cmp
mov
xchg
sahf
adc
shll
jae
mov
dec
sbb
fsubrs
loopne
fldcw
loope
push
test
test
adc
dec
jne
ljmp
rcrb
insb
inc
sbb
pop
imul
out
add
xor
sti
push
movsl
inc
mov
jp
aaa
shl
add
mov
scas
sbb
jb
imul
addb
xchg
arpl
in
inc
mov
adc
xchg
sub
int
loope
push
mov
jmp
mov
jns
mov
mov
outsl
ja
movsl
or
test
je
cwtl
or
dec
sahf
mov
fsubrs
push
iret
add
sbb
clc
push
imul
neg
cmp
inc
test
jecxz
dec
pop
mov
lds
in
mov
sbb
pop
repz
push
or
out
pop
mov
mov
lods
std
xor
jnp
add
frstor
fstp
popa
cwtl
add
jp
jbe
mov
push
add
popf
sub
ja
adc
es
xlat
jno
mov
shlb
fucomip
xchg
mov
adc
movsl
std
arpl
push
and
jecxz
int
sub
in
negl
inc
js
sti
imul
ret
cld
je
sbb
cmp
inc
in
push
sbb
popl
mov
jns
int3
push
hlt
filds
dec
or
inc
jp
insl
shrl
lea
leave
out
push
cmp
stos
fcoms
jp
data16
mov
ret
out
shl
sbb
rorb
mov
push
adc
adc
xchg
jp
jno
cmp
jp
pushf
add
and
pusha
addr16
movsb
xchg
sbb
or
std
popf
enter
mov
or
out
sub
xor
sub
sbb
into
ret
push
cmp
loope
imul
in
shl
jno
and
jle
stos
mov
loopne
addr16
loop
mov
lock
popa
imul
mov
jmp
sbb
push
push
scas
mov
lahf
jne
sbb
in
pop
adcb
fwait
mov
or
lcall
and
inc
clc
test
loopne
dec
mov
push
jnp
test
pop
mov
es
push
or
leave
andb
outsb
loope
add
in
adc
mov
mov
test
jp
ficompl
sub
dec
add
pushf
xchg
and
push
add
push
xor
lods
mov
rcrl
mov
and
xchg
pop
mov
xorl
outsl
adc
arpl
xorl
xchg
cli
pushf
lret
stos
subl
das
mov
les
dec
jo
ret
mov
cmp
mov
mov
add
adc
cmp
cs
add
movsb
mov
pop
or
xor
rorl
xor
pushf
movsb
mov
adc
push
jg
sbb
pop
hlt
and
rcrb
fildl
add
pop
jae
pop
inc
push
pop
fwait
sarl
pop
xchg
dec
test
mov
push
movl
out
xor
mov
inc
xchg
push
int3
sub
mov
outsl
loope
jno
pop
call
or
sub
rsqrtps
sbb
pop
add
and
mov
outsl
aaa
leave
insb
lcall
lahf
test
icebp
iret
stos
int3
data16
adc
adc
inc
pop
adc
sub
xchg
and
lods
movsb
shlb
add
jb
push
out
js
aaa
jns
dec
dec
xchg
push
cmpl
jae
lcall
cwtl
loope
mov
ds
add
inc
jae
dec
mov
push
or
mov
pop
push
mov
cmp
clc
mov
sub
xchg
xor
and
xchg
adc
outsb
mov
stos
es
lds
rorb
aad
sti
or
pop
push
out
xchg
decb
aaa
in
and
fwait
sub
dec
ds
sub
mov
bound
leave
orl
cwtl
mov
iret
lods
repz
push
dec
ret
adc
or
or
nop
mov
push
daa
scas
lret
movsb
pop
cmp
adc
movsl
pop
xchg
js
movl
dec
je
add
sbb
or
es
sbb
xchg
cs
mov
cmpsb
push
mov
pop
mov
pop
stc
mov
mov
jg
stos
dec
jne
cmc
jmp
rcr
add
pop
aad
inc
adc
icebp
push
inc
jmp
and
sub
sub
in
shll
sbb
pop
loop
push
jnp
dec
mov
xchg
rcll
in
xchg
and
leave
js
push
inc
cmp
lods
pop
data16
jle
lret
and
notl
icebp
addb
insb
dec
jp
iret
jae
xor
sahf
xchg
jmp
dec
dec
sti
lods
dec
add
or
scas
push
inc
xor
in
xor
mov
jne
dec
adc
frstor
test
xor
lea
int3
scas
sub
scas
xchg
jg
mov
pushf
data16
mov
mov
and
sti
incb
push
dec
jle
aaa
xchg
adc
sbb
and
push
ret
inc
shrb
xor
xchg
adc
rclb
pop
mov
sub
cmp
or
or
out
xor
sub
cmp
and
mov
out
enter
int3
sbb
add
jp
hlt
mov
or
mov
inc
add
xor
cltd
push
or
out
mov
arpl
outsb
scas
lahf
or
test
fs
jmp
fwait
imul
pop
incl
push
push
cmpsb
xchg
sub
push
push
dec
jge
xchg
add
inc
fsubs
xchg
inc
cmp
std
sahf
mov
andl
loopne
sub
pop
out
sub
daa
jne
inc
rcll
jle
test
pop
pop
add
imul
add
xchg
dec
or
stos
fucomip
shll
push
add
test
add
aam
insl
mov
push
add
jmp
inc
adc
and
cld
pushf
push
jmp
jae
add
inc
cltd
ja
das
sub
js
jge
sahf
xor
or
insb
pop
andl
or
mov
sub
mov
xchg
jecxz
outsb
div
mov
jge
cmc
stc
inc
sbb
or
stos
into
pop
push
xor
cmpsb
sub
mov
bound
lahf
sub
clc
mov
stos
sub
scas
popa
pusha
sbb
aam
stos
pop
or
fdivl
stos
sbb
out
insb
arpl
aaa
call
jne
xor
out
in
xor
xor
push
lods
fldenv
push
pushf
cmpsb
pop
push
dec
daa
fidivl
loope
dec
mov
cmp
decl
push
loope
push
mov
sub
ljmp
in
inc
push
mov
js
es
push
inc
inc
and
and
cmp
test
hlt
movsb
jo
push
dec
add
cmpsl
repz
mov
rolb
fsubl
pop
mov
mov
test
xor
subl
fistpll
jno
shlb
jecxz
jnp
push
in
sbb
xor
mov
cmc
or
xchg
imul
and
movsb
lret
je
andb
icebp
jne
mov
xchg
xchg
cmp
imul
shl
lahf
aam
das
imul
repz
jns
and
cltd
mov
or
lcall
repz
jmp
inc
xor
test
fstpl
or
pop
enter
jl
mov
popf
sbbl
test
leave
aad
jbe
inc
mov
sub
jecxz
pop
imul
mov
xchg
ret
pop
pop
outsl
sbb
das
mov
xchg
and
lret
dec
imul
xchg
xchg
jo
jae
pop
iret
sbb
dec
sbb
clc
jne
and
repnz
push
lret
adc
test
insb
movsb
sub
nop
jg
fidivrs
dec
push
jae
outsb
in
fildll
aaa
mov
aaa
or
pop
nop
cmp
aas
addl
test
cmp
in
mov
lahf
stc
mov
ret
jb
cmp
ret
sahf
adc
mov
int
jle
das
aas
jmp
imull
jne
push
pushf
cmpsb
scas
rcll
pop
imul
pop
pop
sub
mov
stos
mov
cmp
test
fucom
fnsave
aaa
popf
in
add
rorl
and
cld
cs
ja
iret
int3
sbb
sbb
incl
insb
fs
out
or
xchg
ret
push
lds
cmp
cli
dec
push
pop
mov
es
sub
dec
sbb
fiaddl
fistpl
arpl
mov
scas
jecxz
fnstcw
dec
mov
sbb
repz
push
ljmp
push
jbe
imul
add
inc
int
pop
push
adc
pushf
mov
or
shrb
sub
ret
stos
arpl
pusha
test
pop
iret
inc
pop
clc
rcrb
adc
outsb
subb
enter
test
sub
hlt
outsb
into
jl
iret
mov
pop
cmp
rolb
push
shlb
lods
xchg
add
push
cmp
arpl
dec
sahf
lret
inc
in
mov
int
nop
ret
out
test
pop
cwtl
test
scas
popf
clc
sub
adc
cmpsb
adc
outsl
xchg
sbb
lcall
xor
push
shrb
xor
int3
icebp
ss
sub
repz
stc
into
mov
mov
mov
sahf
push
insb
or
pop
repz
out
jmp
dec
addr16
jle
xchg
aaa
lret
xchg
cmp
add
movl
das
addr16
aam
add
das
inc
push
jmp
jb
repnz
mov
lods
sbb
hlt
imulb
fcmove
mov
dec
in
sbb
decl
and
in
xor
lret
xor
dec
nop
sbb
fdivl
inc
shll
mov
sbb
adc
dec
out
cmc
test
dec
sub
pop
scas
cs
cwtl
jp
je
lret
xchg
xchg
pushf
in
not
scas
inc
xchg
xor
mov
mov
dec
jmp
jmp
xchg
inc
lahf
rcl
add
push
outsl
lret
inc
jne
aad
inc
out
lods
ja
mov
call
pop
pop
hlt
push
sub
mov
push
loope
cmp
outsb
adc
jno
add
mov
bound
add
out
inc
sub
out
fcoms
mov
fdivrs
or
sbb
call
inc
out
data16
cs
jp
sub
lods
add
loop
jbe
aaa
sbb
push
int
out
mov
adcb
negl
stos
out
insl
into
fwait
mov
fisubrl
enter
sub
cmp
lods
pop
and
popl
arpl
xlat
call
inc
rorb
bnd
dec
lods
pop
inc
cmp
lahf
dec
nop
cmpsl
imul
push
mov
xchg
pop
inc
inc
mov
testl
pop
lret
lahf
dec
and
test
jl
imul
mov
mov
es
jnp
es
test
add
or
or
jecxz
int3
leave
adc
test
xor
xor
testl
lcall
fnsave
arpl
mov
mov
cmpl
rcll
and
xor
add
adc
inc
jno
inc
bound
mov
mov
icebp
repnz
adc
add
xor
and
push
popa
inc
jno
inc
bound
mov
mov
icebp
repnz
push
and
xor
add
adc
jbe
push
push
mov
mov
repnz
and
fwait
cwtl
add
and
push
lea
popf
cs
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
ja
push
dec
aam
sbb
testb
add
push
add
push
add
add
add
mov
add
add
add
or
lcall
add
add
add
jmp
add
add
add
add
cmp
les
add
add
add
add
enter
pushf
add
mov
add
add
lods
add
push
add
add
add
add
pop
add
dec
add
add
add
out
mov
add
push
add
sub
add
add
add
adc
or
or
sub
sub
add
add
pushf
add
add
add
add
add
add
add
add
roll
sub
jo
icebp
add
mov
add
add
roll
fiadds
sub
add
push
add
dec
add
aam
aaa
add
add
les
mov
lret
add
add
add
add
or
xor
cmp
popf
add
add
cmp
mov
add
jmp
add
mov
pop
add
add
add
add
add
add
add
inc
add
int3
add
add
add
stos
add
inc
add
mov
add
test
in
add
add
add
add
outsl
add
add
cli
add
add
add
cmp
add
mov
mov
add
cmp
mov
add
add
add
add
add
add
add
add
add
add
add
adc
imul
xor
add
xchg
add
add
add
add
add
add
add
faddl
sub
mov
add
je
push
add
pop
add
jb
jge
sub
cmp
cmp
jg
sub
add
add
add
push
add
add
dec
add
add
add
dec
add
add
push
add
add
add
add
add
add
add
ja
and
add
add
add
xor
mov
or
jne
cmp
push
add
add
add
push
add
add
add
add
popf
add
add
add
add
add
mov
pop
add
addb
push
add
add
add
add
jmp
push
add
push
add
or
lea
cmc
add
add
add
add
add
add
add
add
add
add
xor
or
jb
pop
add
add
cmp
inc
add
add
push
add
pop
inc
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
xchg
sub
add
add
jge
sahf
add
add
add
add
add
add
les
fiadds
cmp
add
xor
push
add
push
add
pop
add
add
xor
add
add
add
add
pop
adc
mov
add
add
add
add
add
add
add
int
adc
dec
add
in
add
add
add
add
mov
cmp
add
sbb
push
add
add
add
mov
add
add
add
add
movsl
add
add
add
add
add
add
add
add
std
popf
shll
repnz
mov
test
stc
xchg
xor
ja
hlt
xor
mov
in
add
dec
cmpb
js
and
cmp
daa
lret
mov
adc
pop
dec
dec
fidivs
cmp
out
in
adcl
push
loop
shlb
xor
les
test
jg
inc
popa
jns
sbb
and
pushl
add
or
jae
dec
push
iret
cmpl
fsubl
adc
out
pop
cmp
jns
xor
shll
pop
test
in
mov
sub
test
aam
dec
xlat
movsb
jb
cltd
mov
in
or
and
mov
xchg
idivb
pop
mov
and
push
sbb
mov
cmpsb
mov
aad
pop
test
pop
sbb
lock
pusha
movsb
dec
lds
ds
shrl
fstl
jb
pop
dec
dec
rcrl
mov
mov
push
cmp
pop
xor
mov
scas
sbb
out
mov
out
mov
jo
repnz
pop
add
pop
cmp
xchg
mov
mov
jo
sbb
pop
enter
pushf
lret
push
nop
std
sbb
adc
jnp
negb
ss
pop
xchg
cmp
mov
test
movsl
mov
xchg
cli
push
or
jne
push
mov
pop
inc
addl
mov
pop
xchg
bound
cmpsb
out
xlat
jecxz
cmpl
pminsw
mov
mov
xor
cs
lock
loop,pt
leave
or
cmpsb
xlat
int
inc
pop
movsb
jge
sub
and
cltd
adc
fcompl
ret
mov
cmpsb
add
xorb
imul
arpl
pop
and
xchg
stc
adc
cld
cli
std
push
lahf
adc
test
in
xorb
cwtl
mov
lods
mov
jno
fnstenv
andb
rorb
push
bound
test
inc
movsl
fwait
cmp
dec
cltd
fidivrl
push
scas
lcall
fdivrl
adc
bound
fwait
sub
mov
jb
lea
cmpsl
sahf
jbe
pop
rorl
or
nop
mov
inc
jge
cs
and
inc
jge
mov
cltd
loopne
ficompl
out
popa
xor
or
push
xor
mov
and
sbb
dec
add
ret
out
jo
js
or
arpl
rol
out
fdivl
dec
ret
cmp
jae
add
jecxz
jmp
mov
xchg
outsb
mov
dec
jge
jecxz
sarl
add
pop
cmp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
