call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
stos
fcompl
ror
mov
add
pop
sbb
jp
push
dec
sub
cmp
int3
stos
fcompl
mov
pushf
fldt
pop
jp
or
imul
dec
cmp
int3
stos
fcompl
mov
pushf
fldt
jg
push
outsb
sbb
jnp
and
lret
mov
jo
lret
cltd
and
clc
aaa
mov
movsl
pop
add
dec
decl
cmpsl
shlb
es
out
mov
jns
mov
sbb
mov
mov
xchg
aad
sub
insl
ds
stos
rcll
popa
sbb
pop
mov
rorl
hlt
sub
sbb
test
clc
mov
das
popf
cmp
lret
inc
sub
jecxz
fwait
or
loop
es
cmp
enter
adc
adc
push
mov
adc
or
pop
add
sub
ret
stos
push
adc
push
mov
and
movd
dec
pop
sub
sub
int3
stos
fcompl
mov
pushf
fldt
pop
sbb
jnp
imul
dec
push
iret
enter
in
jmp
scas
call
je
outsl
or
dec
daa
jns
push
aas
jb
test
ret
cld
sahf
loopne
rcr
lds
and
xor
sbb
int
test
mov
lret
mov
sbb
jnp
imul
dec
cmp
int3
stos
fcompl
mov
pushf
fldt
pop
sbb
jnp
imul
dec
cmp
int3
scas
mov
add
ds
loopne
test
movsl
jb
cwtl
sub
sbb
cmp
inc
xchg
out
jg
ja
xlat
sub
mov
int
lods
cmp
mov
jns
adc
mov
mov
lcall
aaa
sbb
jns
bound
mov
daa
scas
mov
iret
xor
std
sbb
xor
mov
dec
outsb
aad
fnstcw
ficoms
loop
push
sbb
out
pop
mov
into
lea
jg
fmuls
fistps
shrd
mov
or
mov
pop
adc
daa
mov
xor
mov
jle
mov
sub
int3
add
xchg
ret
jne
mov
lea
adc
jle
addr16
add
sbb
dec
sub
testb
ja
aad
lds
push
dec
adc
and
rol
push
push
jecxz
xchg
clc
enter
dec
inc
or
pop
jbe
xchg
push
ljmp
je
jmp
arpl
adc
gs
sahf
mov
xor
and
jg
leave
loope
call
xor
shrl
je
lods
arpl
movsl
movsl
xchg
push
sub
int3
cmc
frstor
int3
dec
repz
jge
dec
dec
push
jae
inc
and
sarl
jl
mov
fildll
dec
outsb
lret
popf
out
push
nop
es
aad
xlat
imulb
jnp,pt
inc
ret
andb
outsl
addb
fucomi
mov
into
mov
mov
push
out
outsb
cmc
push
push
pop
pop
push
bound
cwtl
cmp
jg
jae
incl
leave
das
int3
jmp
jl
loop
dec
insl
imul
outsb
hlt
fdiv
scas
in
and
jmp
mov
sbbl
test
aaa
aas
popa
loop
aam
mov
sbb
cs
aaa
xchg
pop
adc
push
arpl
mov
fucomp
adc
mov
adc
out
mov
inc
xor
pop
jnp
das
add
cld
mov
int
sbb
mov
jecxz
pop
outsb
inc
aad
and
pop
dec
add
mov
mov
push
dec
sub
enter
addr16
inc
mov
or
inc
cmp
ljmp
repz
pop
movsl
xor
jecxz
sbb
push
lahf
ret
xor
addr16
sbb
shrl
cltd
jo
pushf
loopne
mov
or
mov
add
pop
xor
shlb
or
es
mov
mov
xor
bnd
pop
xchg
test
dec
aad
mov
xorb
xchg
ss
cwtl
xchg
push
into
sub
mov
ljmp
daa
pushf
lds
mov
mov
aaa
jae
xor
shlb
push
das
ja
and
lods
stos
fs
jo
jno
icebp
div
setb
out
push
rcrb
std
leavew
movsb
lea
lcall
loopne
push
fdivrp
out
pusha
stos
dec
cmpsl
adc
dec
xor
mov
out
and
pop
and
std
mov
incb
stos
fsubp
cli
aad
lods
push
std
add
xchg
jbe
inc
and
xor
dec
sbb
push
fdiv
aas
fcos
decl
or
cltd
data16
cld
shlb
jns
sub
cmpsb
arpl
fs
mov
imul
lock
pop
pop
ljmp
shl
add
add
cmova
and
fsts
dec
xchg
cmp
imul
sbb
sub
push
mov
fdivrs
into
sub
mov
lea
call
lret
inc
flds
adc
hlt
es
add
pop
cmpl
pop
fidivrl
scas
call
mov
or
neg
test
scas
dec
jge
sub
gs
cmpsb
mov
mov
mov
mov
lds
jnp
bound
jmp
mov
in
mov
mov
fistpl
dec
inc
lret
mov
in
xchg
sti
mov
mov
dec
out
in
fdivrs
addl
xor
pop
push
dec
push
outsb
xor
rorl
std
lea
das
mov
jae
fstpl
idivb
pop
gs
dec
repz
pop
inc
pop
dec
jp
cmp
cmpsw
clc
gs
call
add
rcrb
frstpm(287
inc
mov
stos
daa
scas
iret
mov
imul
fstpt
sti
mov
lcall
orb
jecxz
fisttpll
inc
sbb
inc
dec
fcoml
inc
pusha
inc
push
and
xchg
push
jae
inc
jge
jmp
rcrb
lcall
cwtd
lock
xchg
sub
arpl
lcall
and
sub
fildl
sbb
cs
mov
iret
dec
jmp
mov
mov
cmp
jp
iret
into
adc
or
popa
xchg
out
mov
lods
jns
int3
andb
mov
push
and
dec
or
mov
cld
xchg
add
lcall
imul
in
mov
inc
inc
or
and
fildl
les
pop
xorb
dec
adc
ss
psraw
popa
in
pop
pusha
mov
cmc
xchg
adc
mov
mov
lahf
and
cs
stc
xchg
or
jl
sub
or
jno
loopne
pop
jp
mov
xchg
mov
or
shlb
lea
fmull
inc
ss
imul
push
fs
rorb
ret
mov
inc
push
aam
popf
cmp
fwait
push
pop
mov
ret
fwait
mov
xchg
out
sbb
ret
xchg
or
insl
mov
mov
ret
ds
mov
xor
or
mov
sub
cmpb
cli
call
mov
pop
adc
scas
out
repz
loope
fildll
jae
sti
popf
push
out
and
push
push
push
scas
mov
shll
retw
mov
pop
lret
inc
jae
pop
mov
lods
and
sbb
pop
sbb
cmpsb
pop
dec
in
bound
xlat
sbb
mov
fiaddl
hlt
fsqrt
cmpl
lds
push
mov
daa
mov
rorl
push
test
jle
bswap
xchg
mov
xor
outsb
cmp
in
adc
sub
push
or
jb
lret
cmp
mov
add
sbb
jp
sti
push
int
out
addr16
inc
inc
lds
aam
div
shrd
xor
pop
nop
add
outsl
inc
and
pop
movsl
mov
stc
loope
push
iret
pop
mov
loope
and
sub
inc
or
xor
sbbb
or
repz
pop
or
push
loop
xchg
call
jns
jp
inc
addr16
int3
mov
imul
sarl
push
jno
test
push
fs
jns
lods
int
push
mov
inc
adc
into
leave
loopne
in
xchg
cmp
aam
test
stos
push
jb
push
xor
shlb
xor
in
mov
or
pushf
mov
pop
sub
cld
dec
pop
mov
jnp
push
pushf
pop
insl
insb
cwtl
jl
je
add
push
push
mul
adc
int3
xchg
aad
out
test
push
andl
inc
push
mov
mov
mov
out
push
mov
shrl
shr
mov
sahf
sbb
shrb
add
ror
mov
mov
push
in
pop
push
arpl
jbe
cmpsl
aaa
pusha
aam
mov
ss
sbb
pop
push
lea
pusha
jae
cmc
add
iret
sbb
lods
lds
clc
jle
and
hlt
not
les
adc
jge
int
inc
push
add
rdmsr
cmp
cmpsl
jae
cmp
jmp
xor
or
test
jne
in
ret
add
pop
fisttpll
movsb
or
cli
jg
mov
test
div
cmp
divb
sbb
outsb
inc
mov
fdivl
jle
out
xor
mov
in
pop
cltd
scas
and
xchg
cmpsb
fcmove
and
push
or
xor
pop
jno
xchg
push
push
test
jne
jae
mov
mov
mov
jecxz
cmc
xchg
mov
push
sub
sub
push
sub
and
add
add
push
adc
repz
js
es
cmp
pop
fisttpl
jbe
jno
stos
pop
enter
cmp
dec
fiadds
push
hlt
cwtl
jae
jg
push
push
ficoms
adcl
mov
shl
xor
lods
in
sbb
jnp
pop
add
test
xchg
test
xor
pop
rcll
int3
filds
arpl
aad
or
push
add
sub
dec
xchg
inc
dec
inc
adc
mov
mov
pushf
push
mov
stos
mov
adc
push
divb
cmpsl
xor
mov
mov
scas
xchg
pop
movsb
fucomi
pop
sub
pop
sub
pop
xlat
jns
pop
ret
in
mov
and
xor
cmp
cmpb
xorl
pop
mov
mov
dec
sbb
and
movsb
push
or
hlt
jl
test
call
push
in
xchg
lahf
test
ljmp
sti
je
mov
fnstenv
adc
mov
test
aaa
jl
das
push
ret
mov
jb
cld
jp
push
int
dec
pop
xor
je
sub
lret
cli
adc
decl
enter
ret
sub
jne
mov
xor
lret
or
pop
jno
and
xlat
icebp
sbb
sub
jl
and
js
mov
mov
in
aam
xor
xorb
rcrl
mov
mov
mov
fsubp
push
adc
adc
lcall
inc
sbb
lret
xor
imul
and
pop
imul
or
mov
sub
loope
test
fs
pop
cmpb
dec
xorb
lret
jne
dec
popa
in
lea
jbe
mov
xchg
add
cmp
push
push
cmp
jae
stos
popa
push
movsb
fmuls
cli
ret
incl
imul
pop
cli
add
ficompl
cmp
not
out
outsb
push
adcl
mov
mov
stc
loop
sbb
adcb
popf
movsb
lret
adc
mov
lret
mov
cmpsl
fldl
xchg
xchg
leave
pop
mov
mov
push
fidivrs
cwtl
das
arpl
das
add
dec
push
sbb
cli
pop
aaa
pushf
adc
and
lock
inc
jge
gs
pusha
lret
imul
xor
addl
adc
mov
dec
push
clc
push
bound
sti
xchg
fwait
adc
adc
dec
cs
cmp
aam
fildll
xor
bound
orl
xor
inc
pop
or
push
pop
aad
add
insl
dec
popa
bnd
push
jge
push
enter
pop
push
mov
push
je
inc
scas
fisubrl
or
add
inc
jns
faddl
in
shl
push
ja
adc
jae
sbb
data16
icebp
pop
loopne
sar
push
pop
adc
push
jns
add
fninit
std
fstpl
push
icebp
sbb
push
sbb
sti
cmp
fcomp
rcrb
sbb
loope
frstor
lret
pop
push
push
lods
fxch
push
mov
data16
mov
daa
lret
hlt
lahf
jmp
adc
cmp
sbb
lahf
in
xchg
sbb
and
out
mov
mov
add
shll
cld
aas
sub
push
fsin
negb
jo
add
mov
mov
sub
pop
mov
leave
jae
std
mov
pop
imul
ret
inc
or
xor
push
mov
sahf
push
cmp
aaa
in
and
test
cmp
pop
inc
sub
jo
inc
in
and
add
dec
jle
in
outsl
mov
js
sti
hlt
shll
mov
jp
stos
mov
out
and
js
jl
std
push
sar
push
outsb
adc
dec
div
dec
xor
lods
je
dec
mov
icebp
pop
pop
add
test
sarb
add
dec
pusha
test
xchg
gs
fwait
or
decb
fsubs
mov
add
fisubrl
and
xchg
xchg
outsb
adc
dec
push
stc
add
aaa
pop
or
mov
aad
and
inc
clc
ja
mov
sbb
loop
cs
movsb
xchg
sub
int3
mov
cwtl
nop
loope
inc
add
lock
or
arpl
aaa
pop
sbb
and
js
push
incb
add
aas
jb
jg
iret
adc
aam
jecxz
repnz
sbb
adcl
rolb
punpckhbw
dec
cmp
cmpsl
aas
inc
ds
jae
sbb
loope
pop
and
and
pushf
inc
outsl
jmp
loopne
pusha
js
insl
add
jmp
inc
mov
lods
jmp
fdiv
mov
fs
inc
or
andb
mov
clc
mov
adc
xchg
xchg
or
movsl
sahf
dec
push
push
inc
xchg
add
std
fs
or
or
cs
jbe
jbe
pop
int
insb
push
in
or
push
ds
sahf
aas
mov
jle
jae
cld
mov
rorl
cwtl
gs
stc
push
repz
jmp
or
outsl
sahf
js
push
and
in
fucomp
adc
fidivs
add
dec
and
movsl
scas
xchg
sub
sbb
daa
push
fsubrs
sbb
enter
mov
xor
mov
sub
les
mov
add
mov
pusha
int
outsl
or
test
pop
idivb
xchg
insb
xchg
test
fcoms
mov
push
xor
jbe
pop
cli
mov
ds
sbb
shl
cmp
xor
dec
lds
mov
cmp
into
lock
add
imul
jae
jecxz
xchg
das
push
test
sbb
and
jmp
fincstp
insb
push
sahf
aas
imul
sbb
loop
test
shl
not
outsb
dec
and
jnp
mov
mov
lret
cld
mov
sahf
ja
aaa
es
lret
ficoms
mov
aam
pop
sbb
push
cmp
in
or
fstl
mov
sub
lea
loop
add
add
pop
cli
pop
or
and
ja
je
cmp
jnp
test
aam
inc
test
xchg
push
sbb
movsl
data16
cwtl
rcrl
lock
inc
cmc
push
cmp
lcall
orb
xchg
lods
xlat
cmpsb
rclb
call
dec
mov
mov
adc
into
dec
popf
int3
clc
mov
lds
sti
aad
sub
movsl
iret
bound
xchg
or
gs
dec
xchg
or
mov
and
mov
sub
in
adc
cmc
adc
mov
push
data16
fbstp
add
enter
lds
pop
xchg
mov
xchg
pusha
mov
add
subl
cli
xchg
cmpsl
jge
jecxz
xor
dec
mov
fcoms
xchg
inc
neg
test
lock
mov
repnz
test
push
mov
decl
fcomip
inc
push
add
xchg
lret
xchg
and
cmp
push
mov
and
aam
in
mov
xchg
adc
ret
adc
ficomps
mov
ss
jp
push
stos
cmp
and
mov
outsb
cli
and
insl
into
nop
cmp
xor
dec
lea
or
jne
inc
stos
cwtl
mov
test
stos
inc
js
mov
or
jl
clc
push
bound
cwtd
mov
test
dec
bnd
sarb
mov
lret
sar
xchg
push
push
rorl
jle
adc
sbb
test
mov
fidivl
push
push
fsubrs
adc
sarl
int3
in
push
jb
mov
out
int
aaa
add
js
repz
nop
jne
shlb
inc
fidivs
add
mov
adc
jge
js
dec
call
and
insb
ja
sub
adc
xor
mov
bsr
je
lea
dec
repz
sub
jnp
adc
mov
outsb
cmpsl
ja
mov
jle
pop
add
mov
sahf
dec
cmp
int3
movsb
mov
or
cmpb
push
je
adcl
xchg
addr16
pusha
sbb
test
ljmp
call
add
cmpsb
stos
jmp
dec
scas
lahf
inc
loope
push
and
adc
es
out
push
cmpsb
sbb
hlt
out
sub
mov
sbb
inc
dec
int3
loopne
mov
idivl
lds
adc
loop
jmp
jmp
sarl
mov
cmp
or
cmp
jl
mov
mov
paddd
cwtl
dec
out
push
lock
in
add
cmp
mov
lcall
aad
orb
sub
je
jle
or
test
leave
adc
nop
aad
mov
popf
nop
dec
sbb
cmp
in
loopne
mov
in
xchg
stos
adc
pop
ljmp
xchg
or
ret
in
cmpsl
pusha
sub
in
pop
dec
cmp
mov
outsb
mov
rcl
mov
rcrl
ljmp
cmp
pop
lds
and
jb
das
mov
andl
pop
insl
nop
cmp
xor
adc
jg
rcrl
push
mov
cmp
xchg
jb
sub
je
xor
add
fsubr
insb
out
fnstsw
lahf
mov
fisubrs
mov
pusha
or
sbb
xchg
push
loop
dec
push
cmpsb
dec
mov
notl
jno
inc
mov
pop
jmp
dec
add
xchg
dec
sub
sub
nop
ss
or
ljmp
dec
sbb
inc
nop
xor
gs
sub
out
mov
mov
lock
push
notb
adc
dec
out
repnz
pop
cmp
loope
inc
pop
pop
sub
dec
lods
xchg
mov
test
aas
test
rclb
and
push
fwait
negl
dec
mov
in
loopne
insb
sub
sti
dec
add
push
push
mov
test
pop
int3
loopne
or
mov
loopne
cmc
fisubrl
out
cmp
xchg
insl
adc
cwtl
adc
stos
fisttps
js
pop
xlat
fistpll
movsl
div
popf
inc
xchg
add
mov
pop
jecxz
xchg
pushf
ret
dec
aas
sub
cmp
xor
mov
ror
pop
shlb
mov
rcrl
pop
add
xlat
add
fadd
inc
inc
mov
cs
xchg
push
hlt
dec
push
rclb
int3
jne
andl
std
jbe
hlt
testb
jmp
mov
inc
dec
out
add
mov
in
or
les
test
ja
aas
fistl
cmc
faddp
mov
mov
pop
decb
js
test
jbe
lcall
mov
jno
decl
push
rorl
push
fs
stos
inc
adc
cmc
cmp
sub
scas
loopne
push
dec
test
push
mov
adc
pop
ds
test
mov
mov
and
outsb
shlb
inc
les
hlt
enter
es
fwait
and
jns
leave
shld
out
aad
daa
nop
fs
ja
inc
add
xor
xchg
dec
fists
jmp
inc
add
das
sub
dec
push
andl
stc
cwtl
mov
xor
push
int3
adc
cltd
imul
sti
jnp
xchg
xchg
push
pushf
pop
pop
imul
int3
rcll
lock
push
push
dec
mov
fstl
inc
jmp
cmp
push
sbb
ret
test
cmpsb
dec
xor
int
cmc
mov
js
cltd
inc
push
xchg
int3
test
or
mov
fsubs
in
xor
ret
push
int3
xor
mov
cld
pop
sahf
popa
repz
xchg
push
and
sbb
out
dec
push
mov
leave
jo
scas
cmp
stc
xchg
test
mov
jb
dec
orl
les
test
push
mov
sbb
or
stos
fstpt
ds
jge
sbb
mov
mov
mov
roll
aaa
cmpsl
or
fbstp
addr16
sti
push
or
out
test
xchg
neg
adc
es
push
shlb
push
pusha
out
xchg
adc
imul
arpl
int3
dec
inc
push
sub
cmpsb
mov
adc
mov
add
data16
ja
xchg
xchg
jno
add
dec
jae
xchg
test
les
pop
pushf
aam
mov
ja
adc
mov
fisubl
mov
mov
add
adc
cmc
lods
or
in
int3
adc
fisttpl
icebp
stc
pop
outsb
pop
and
dec
dec
subl
dec
jo
bound
rolb
jg
popf
mov
test
dec
jg
and
xlat
cmp
push
lds
lock
repnz
cs
mov
add
or
adc
and
lret
adc
jl
out
xchg
addps
adc
cmpsl
inc
mov
insl
inc
push
jl
mov
and
fdivrl
in
mov
sti
mov
pushf
fldt
pop
sbb
jnp
imul
dec
cmp
int3
stos
fcompl
mov
pushf
fldt
pop
sbb
jnp
imul
dec
cmp
int3
stos
fcompl
mov
pushf
fldt
pop
sbb
jnp
imul
dec
cmp
int3
stos
fcompl
mov
pushf
fldt
divb
test
jecxz
shll
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
adc
hlt
test
in
mov
in
xchg
inc
orl
mov
mov
aad
lds
in
xchg
or
cmp
sub
mov
inc
sarb
gs
cmp
add
xchg
add
outsl
stos
xchg
or
inc
int
mov
mov
pop
mov
inc
filds
xchg
insb
test
cmpsb
sbb
cmp
das
fs
fmulp
mov
inc
int
or
lret
push
sbb
inc
and
push
pop
dec
test
pop
stos
xor
sbb
sbb
push
jl
in
adc
dec
inc
adc
pushf
push
xor
je
fwait
arpl
add
dec
loope
loop
aad
lds
icebp
cmp
sbb
jne
sub
rcrb
adc
mov
flds
mov
orl
sbb
cmpsb
popl
jbe
adc
xchg
out
xchg
outsl
jg
adc
data16
addl
jbe
and
xor
std
mov
mov
fnstcw
jl
add
sbb
dec
test
pop
in
and
repnz
cld
sub
pop
cs
stos
cmp
jns
das
rorb
push
lea
cmc
push
loop
enter
pop
xchg
les
jne
insl
xlat
push
fcompl
in
lea
cltd
daa
adcb
jmp
push
cmpsb
jg
or
sub
test
int3
inc
cld
jne
gs
adc
lods
and
jl
insb
in
xchg
or
cmp
sub
fcoml
inc
cld
jne
gs
adc
lods
and
aam
xor
push
repnz
sbb
fnsetpm(287
xor
or
pop
mov
push
inc
ret
in
movsl
dec
sub
xchg
lret
stos
mov
dec
xchg
cmp
fadds
insb
je
pop
mov
movsb
repz
cmp
nop
add
jge
pop
sbb
dec
jns
inc
mov
loope
shrb
inc
add
push
es
cld
adc
out
repz
adc
or
mulb
cs
andb
dec
or
sub
dec
xor
in
lahf
clc
je
sbb
jecxz
enter
mulb
cmp
or
cli
push
mov
sbb
nop
imul
dec
in
mov
jae
out
sub
push
fstl
in
fistps
in
rcrl
adc
fimuls
out
int
fisttps
xor
sarl
xchg
pop
sbb
mov
xchg
mov
popf
lods
cld
movsb
gs
xchg
jns
inc
push
je
sti
push
mov
test
dec
je
pop
and
lds
loope
adc
int3
mov
sub
jae
add
jmp
daa
jge
xchg
data16
int
test
jb
arpl
xor
rorb
lret
stos
and
not
lock
pop
mov
jp
mov
add
shrb
or
xchg
xchg
sbb
dec
dec
mov
in
cmc
xor
pop
jp
mov
cltd
mov
jne
cld
pop
inc
adc
faddl
sub
jmp
jle
sbb
or
in
int3
pop
leave
inc
std
mov
sub
mov
or
inc
bound
and
mov
and
arpl
jne
jb
sub
mov
shrl
sub
mov
xor
ja
pop
lret
dec
jmp
jge
mov
repnz
inc
dec
jb
push
xchg
cmp
shrl
lcall
test
adcl
loop
out
adc
xchg
xchg
js
fildl
jns
mov
in
adc
pushf
inc
xchg
dec
add
push
or
lock
pop
cwtl
mov
sub
sub
or
sbb
cmp
dec
xchg
mov
and
stc
and
fdivrl
inc
fimuls
xchg
mov
or
push
in
outsb
and
insb
insl
into
inc
dec
mov
and
nop
fisttpl
clc
iret
or
test
jae
aad
ffree
cmp
add
mov
adc
pop
or
cmp
fsubrl
or
ret
sub
sbb
out
mov
jo
je
pop
push
xlat
fsub
sbb
pop
mov
adc
sub
lds
dec
stos
pop
clc
push
fistpll
cmp
lds
xchg
mov
aad
inc
clc
jae
outsl
and
mov
mov
xchg
inc
vpsadbw
jns
sbb
repnz
movsb
sarb
data16
lock
addb
inc
dec
xchg
mov
loop
mov
sub
icebp
clc
andl
or
dec
sub
test
mov
mov
enter
sbb
insb
mov
or
adcl
jo
test
inc
sub
jns
dec
jae
cmpsl
cmpsl
aad
pop
into
movsl
xchg
out
mov
fwait
xor
mov
icebp
js
into
jbe
xchg
mov
xchg
not
mov
lods
nop
push
inc
rol
lds
inc
or
jle
push
mov
jno
das
icebp
xchg
push
daa
mov
mov
cld
lret
and
dec
fnstenv
or
jge
hlt
mov
mov
xlat
sub
cmpsb
mov
int3
loopne
cmpsl
test
mov
mov
pushf
cli
in
cwtl
xchg
inc
aaa
negl
cs
rcr
adc
xor
nop
push
mov
insb
mov
pop
mov
out
ljmp
mov
sbb
xlat
popf
xor
xor
in
cmpsl
dec
aad
out
pop
cmp
rolb
cmp
or
pushf
sub
sub
xchg
dec
stc
addb
inc
cli
cmp
mov
jmp
js
icebp
pop
aaa
dec
js
push
loopne
shll
adc
fdivl
sbb
sbb
cmp
lcall
mov
in
loop
sbb
mov
lahf
fwait
sbb
fimull
dec
ss
scas
loope
adc
sub
out
movsl
ret
movsl
jg
adc
push
xor
pushf
les
and
pop
mov
in
jecxz
sbb
lahf
das
adc
fwait
dec
nop
pop
push
cmp
push
arpl
pop
cltd
mov
pushw
shrw
inc
fnstcw
pushf
mov
scas
daa
jns
xchg
dec
pop
mov
cs
mov
jno
hlt
sub
popf
rclb
ja
popf
jb
cmpsl
xor
cmp
out
fstp
cmc
fs
add
cltd
dec
xorl
pop
pop
jg
pop
mov
or
sbb
jnp
insl
test
push
sub
sbb
daa
cmp
testb
std
fcmovne
xchg
icebp
outsb
or
insb
jo
insb
cld
pop
jl
outsb
and
push
jae
xor
popf
inc
sahf
xchg
adc
sbb
cltd
pop
pop
push
repnz
jb
adc
push
push
add
mov
xor
sub
or
aad
lahf
shrb
enter
stos
div
div
test
ds
fs
or
cld
inc
dec
adc
outsb
mov
outsl
mov
and
fchs
or
test
fmull
add
lds
fsubl
sbb
lods
adc
inc
scas
add
cld
xor
int3
pop
out
js
dec
cmpsb
roll
sbb
or
mov
and
mov
mov
pushf
pop
andb
into
popf
adcl
lea
cmpl
ljmp
je
cld
adc
fcmove
dec
scas
adc
cltd
mov
fsubrl
inc
in
pop
mov
push
divl
push
sahf
cwtl
insb
pop
push
jno
jmp
adcl
int
and
shll
stos
rclb
or
int
push
and
mov
jbe
xlat
lods
xchg
stos
lcall
mov
mov
dec
cmpsb
mov
das
cwtl
or
add
jnp
mov
pushf
xchg
aam
inc
call
cmpsb
dec
imul
out
xchg
ficomps
mov
aad
xchg
daa
mov
or
lods
pop
sub
push
int3
fwait
dec
into
test
arpl
cmp
ret
xor
lahf
mov
lock
in
scas
pop
fxch
cld
lret
push
cs
cmpsb
xchg
adc
int
aad
jnp
ficoml
and
adc
imul
push
std
aas
loopne
fs
out
les
hlt
in
addr16
xchg
aad
std
das
xchg
mov
and
shll
adc
imul
jae
aam
push
adc
inc
jmp
inc
icebp
bound
add
dec
push
into
cwtl
cmp
sub
push
jecxz
lock
aam
dec
or
hlt
scas
push
push
sbb
fcompl
out
pusha
and
les
cmp
pop
jbe
push
rorl
jo
loopne
test
add
cmpsl
inc
daa
mov
sub
sbb
xchg
test
rorb
jl
lock
dec
scas
fs
stc
inc
out
mov
test
add
push
je
jmp
mov
imul
xchg
adc
push
rcll
and
test
pop
pop
lock
je
mov
sbb
push
stc
out
hlt
dec
push
add
dec
xchg
int
add
add
push
test
mov
inc
addl
ja
mov
push
jmp
xor
jnp
pop
enter
jg
pop
fdivs
int
sti
pop
orl
pop
sbb
insb
adc
ds
jbe
sub
rol
dec
shr
sahf
rcrl
maskmovq
notl
es
fnstsw
xor
iret
or
cli
ret
insl
adc
cmpsb
pop
add
cli
test
add
lods
stc
xchg
mov
jno
push
les
push
adc
pop
cs
push
ret
push
jg
mov
xchg
ret
popf
dec
sbb
mov
sarl
or
enter
and
pusha
out
insl
sbb
dec
imul
mov
or
mov
jecxz
mov
popf
arpl
jo
adc
je
adc
dec
aad
cwtl
sbbb
dec
out
jns
sbb
dec
dec
sub
pop
jne
decl
sti
xor
adc
mov
cwtl
cmp
xrelease
mov
cli
rolb
add
mov
inc
test
sbb
in
repnz
es
aam
sbb
data16
dec
cmpsl
lret
sahf
or
cld
inc
adc
mov
hlt
push
pop
popf
xor
dec
movsb
mov
subl
xor
shrl
inc
repz
mov
pop
iret
pop
xor
lea
out
sbb
in
cmp
sub
test
jo
xchg
subb
cli
lret
fimull
mov
rcl
pop
add
in
outsb
imul
lock
push
xlat
cld
cmp
mov
adc
int3
push
imul
sbb
sub
dec
imul
stos
pop
sub
mov
data16
test
cmp
pushf
push
nop
cmp
ss
scas
les
in
cmpsl
in
test
cmp
xor
push
xchg
stc
cmp
pop
stos
xchg
jno
rolb
lods
lea
pusha
out
sbb
out
ja
sbb
adc
cmpb
enter
mov
or
push
inc
add
mov
dec
jmp
mov
aaa
xchg
push
xchg
or
mov
push
xorl
and
adc
jno
stos
push
mov
xchg
je
cmp
stc
jecxz
add
cltd
push
pop
int3
mov
xor
mov
pop
jp
outsl
jb
loopne
arpl
mov
cmp
adc
int3
rcll
and
push
test
rdmsr
lret
dec
xor
push
adc
int3
sub
test
rcrl
cmp
sarl
insl
add
je
mov
test
cmp
aad
adc
push
out
ja
dec
xchg
push
imul
xchg
xor
out
push
repz
subl
in
push
icebp
and
sub
leave
or
inc
xchg
imull
aas
mov
sarb
out
or
lcall
dec
jbe
jae
adc
xchg
inc
das
ss
popa
cwtl
insb
aas
mov
test
rcl
cmc
pop
xor
dec
pop
stc
pop
punpckhbw
inc
pop
jecxz
ss
test
div
popa
inc
pushf
jnp
enter
js
cmpsb
jge
out
loope
loop
xchg
in
imul
stos
outsl
cmpsb
jnp
push
in
js
xchg
sbb
cmp
test
mov
aas
inc
mov
inc
xchg
push
aam
xor
pop
pop
xchg
fwait
xor
es
push
cmp
mov
pop
pop
fmulp
ljmp
test
jge
or
fsubrs
ljmp
cmpb
int3
mov
adc
lea
mov
adc
ljmp
test
mov
sbb
mov
mov
ret
rcl
das
jp
cs
xchg
push
cmp
aas
das
cld
sahf
loopne
sub
and
mov
mov
sbb
movsl
sub
add
and
and
sub
fldenv
fwait
bound
mov
lods
imul
enter
shl
sbb
xor
aam
daa
sbb
xchg
sbb
dec
xchg
dec
mov
out
cmp
cmp
sub
in
cmc
sub
lret
lret
fldenv
mov
mov
pop
cmp
push
mov
sub
das
lods
adc
sbb
jp
mov
shlb
in
mov
cltd
adc
inc
mov
das
nop
mov
lods
addl
mov
fimuls
bound
clc
sub
jb
mov
add
stc
jno
and
and
cltd
popa
sbb
jae
cmpsl
repnz
mov
xor
pop
mov
inc
call
dec
int3
xchg
lret
nop
daa
mov
push
aas
lea
and
mov
cmpsl
sbb
inc
jge
sub
pop
fcmovb
mov
mov
sbb
mov
call
adc
mov
mov
fwait
pop
movsb
stos
add
addl
inc
cmp
pop
jl
mov
aas
jne
inc
xor
arpl
dec
dec
fnsave
push
inc
imul
cs
cmp
adc
dec
push
lods
das
outsb
mov
pop
pop
shrb
xchg
ljmp
negb
adc
mov
out
xor
out
nop
popa
adc
xor
jne
xor
mov
jge
xchg
call
std
imul
sbb
cmp
int3
rolb
push
lret
cs
sub
jo
adc
mov
outsb
xchg
jmp
pop
rorl
mov
ja
mov
mov
mov
push
and
cmp
call
or
mov
mov
test
xor
cmovs
insl
jno
push
loop
sbb
sti
rolb
mov
roll
pushf
fwait
je
jle
sub
and
pop
add
insb
xchg
or
add
jbe
mov
mov
sub
xchg
inc
lock
pop
pop
imul
lret
lods
cmpsb
int3
pop
xor
cmp
bound
jb
push
lds
fdivrp
fs
pop
pop
mov
pop
mov
lods
out
insb
xchg
addr16
inc
xor
add
or
xchg
mov
mulb
dec
inc
mov
sub
data16
pop
ss
xchg
mov
xchg
sbb
mov
mov
push
ror
bound
shr
sbb
aas
mov
mov
test
mov
dec
int
lods
xor
push
orb
fsts
jmp
dec
pop
add
sbb
xchg
dec
or
pop
xor
jb
pop
aaa
lods
pop
es
test
xchg
cwtl
das
sub
mov
adc
cld
push
pushf
cli
and
fcoms
mov
lret
insb
push
je
test
int3
ret
mov
dec
stc
xchg
push
mov
fwait
test
mov
push
fstpt
mov
and
xchg
xchg
lods
add
lret
cmp
icebp
sbb
mov
test
lods
push
shl
cmp
mov
push
pushf
fidivrs
and
jno
mov
in
cmpsb
test
pop
cltd
mov
call
lret
out
shlb
cmp
push
add
les
xchg
shll
xor
insl
jmp
jnp
repnz
inc
fs
scas
mov
adc
insl
lds
inc
sar
pop
popa
lods
push
mov
cli
ds
sbb
fistpl
push
loop
sbb
pop
es
out
inc
ds
mov
rorb
nop
lods
cmc
adc
inc
dec
mov
lea
push
lock
xchg
in
das
outsb
jl
cmp
sti
scas
iret
imul
pop
int3
push
movsb
pusha
cmc
bnd
xchg
jl
sahf
push
push
or
mov
push
push
mov
dec
push
test
out
repz
push
sbb
out
test
mov
mov
test
push
or
mov
jge
arpl
jg
adc
in
xchg
test
decb
jecxz
loope
add
ja
je
add
inc
hlt
pop
dec
aaa
subb
add
inc
inc
dec
aas
mov
mov
inc
sahf
repnz
aaa
push
xlat
stos
pop
out
mov
xchg
dec
mov
xor
popl
inc
fwait
ret
cs
adc
or
sbb
push
andl
cli
xchg
push
or
cmpsb
jmp
push
mov
pop
or
shl
xor
faddl
cmp
push
cs
ret
mov
cmp
adc
cli
rorl
jecxz
adc
mov
dec
dec
mov
jnp
sub
inc
insl
les
push
rclb
dec
xchg
daa
aas
add
adc
cmp
inc
ffreep
mov
adc
push
fdivs
mov
sbb
rorb
xor
push
sbb
sbb
mov
out
sti
loope
cwtl
aas
jne
fcomps
mov
in
cmp
jecxz
dec
std
imul
mov
bound
sub
jle
into
in
mov
aas
jno
sbb
or
xchg
mov
adc
push
inc
inc
nop
shll
leave
shll
movsb
aad
mov
gs
jb
pop
adcl
lods
pop
inc
out
test
popf
mov
inc
sbb
les
sti
pop
fstp
mov
pop
imul
add
mov
inc
sub
cmp
mov
movsl
mov
adc
push
cs
pusha
loop
es
sbb
movsb
popl
ss
mov
test
jle
inc
iret
pop
pusha
mov
pop
in
dec
out
add
mov
xor
adc
cltd
adc
adc
or
push
or
mov
mov
or
xor
mov
inc
flds
pop
xchg
insb
mov
add
xlat
pop
jmp
jo
test
pop
sahf
cmpsb
pushf
mov
cmp
pop
rcl
ja
cltd
mov
sar
imul
stos
xor
aam
pusha
dec
stos
mov
sti
fsubrs
les
cmp
shrl
mov
pop
sbb
in
arpl
sbb
fisttpl
push
push
dec
out
push
mov
mov
push
pushf
dec
popa
test
icebp
push
inc
mov
lods
icebp
dec
push
cwtl
mov
xlat
xor
inc
or
repnz
dec
into
dec
push
jecxz
test
or
popf
mov
lahf
push
dec
int
ljmp
loopne
jns
imul
xor
fldt
sub
outsl
inc
or
xchg
push
mov
or
loop
jle
push
jle
shrb
nop
xchg
jne
iret
ljmp
xor
or
jecxz
sub
das
sub
jno
insl
mov
adc
lea
cmp
mov
leave
cmpsb
scas
adc
mov
enter
lods
sub
adc
ret
cmc
add
loop
scas
inc
nop
lock
daa
pop
sub
mov
div
push
pushl
cmpsb
xchg
sbb
xor
mov
sbb
fdivr
add
jne
sbb
loopne
sbb
dec
sbb
das
mov
das
enter
out
test
mov
adc
push
mov
add
cmc
xor
lcall
adc
mov
addl
jg
mov
orl
pusha
fsts
dec
cmpsl
push
sub
add
mov
jg
fstl
stc
pusha
idivl
jge,pn
inc
or
inc
sub
or
lea
mov
adc
es
sbb
fs
and
cmpsb
call
jns
call
mov
repz
sti
outsl
popa
xchg
adc
loope
inc
pop
sbb
inc
ret
push
inc
adc
in
imul
push
out
xchg
popa
notb
loopne
push
gs
aas
mov
clc
lret
cltd
mov
leave
and
jg
and
rorb
movzbl
hlt
outsb
jno
xchg
in
imul
mov
sub
fadds
stos
mov
jnp
lahf
push
push
pop
push
inc
adc
and
jg
ja
lret
arpl
ret
fadds
pop
ficomps
fs
shll
inc
cmpsl
punpckhwd
outsb
and
ss
jo
nop
mov
fstps
adc
add
js
xchg
push
cmpsl
mov
cmp
aaa
mov
testl
movsb
arpl
dec
fisttps
mov
daa
lret
js
cmp
mov
or
or
inc
pop
xor
fsubs
inc
xchg
out
loope
pusha
pop
sbb
ffree
cmp
sbb
push
or
sub
and
mov
outsl
pop
cmp
sbb
adc
xor
pusha
aas
or
mov
or
aam
sub
cli
orb
mov
stc
popf
push
sub
adc
add
jl
loop
out
add
sarl
jecxz
mov
lcall
stos
fcmovb
sub
clc
jno
outsl
test
mov
out
pop
scas
test
sub
aas
test
and
pop
les
movb
fbld
xchg
ja
pavgb
mov
mov
scas
fcmovb
adc
fwait
jg
push
cmpsl
mov
fstpl
out
rcll
sub
mov
jnp
das
cltd
rcrl
sarb
mov
inc
scas
cwtl
outsl
lods
mov
and
mov
imull
inc
xor
mov
inc
icebp
int
pop
mov
sbb
js
mov
pop
and
pop
inc
adc
lret
adc
and
jns
xlat
je
jmp
mov
push
inc
ja
ds
mov
mov
or
sub
cwtl
scas
cltd
jns
and
out
xor
mov
into
pop
cmc
call
mov
jecxz
mov
in
jle
inc
mov
add
xor
sahf
movsb
stos
js
cltd
lret
sub
je
shlb
ljmp
iret
std
iret
icebp
call
jo
sbb
or
cmp
sub
fcoml
inc
cld
jne
gs
adc
lods
and
jl
insb
in
xchg
or
cmp
sub
fcoml
inc
cld
jne
gs
adc
lods
and
insb
in
insb
loope
xchg
or
cmp
sub
inc
cmc
jne
insb
pushf
adc
roll
hlt
adc
xchg
sbb
cmp
lods
fsubrl
in
adc
insl
add
inc
dec
push
pop
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
loop
icebp
sbb
sub
mov
mov
mov
mov
add
add
test
icebp
sbb
dec
mov
subl
mov
popa
cmpsb
xor
add
add
push
orl
gs
xchg
cli
sub
xor
dec
sahf
inc
mov
popf
dec
stc
rcrl
jle
rcrb
mov
and
imul
fs
adc
or
push
test
sub
xchg
lods
add
test
add
out
je
or
push
iret
mov
sbb
and
xor
jmp
sub
or
cmp
xor
xchg
xchg
jno
lds
add
adc
loope
dec
mov
or
jns
mov
adc
fs
push
leave
insb
movsb
sarb
add
pop
fidivrl
movsb
test
jne
enter
lods
enter
jmp
cmpsl
jmp
inc
dec
leave
pop
xorl
popa
icebp
imul
adc
mov
test
ss
add
fsubl
pop
lods
push
dec
xchg
pop
mov
mov
enter
je
les
inc
int3
sub
pop
cltd
pop
xchg
push
pop
popf
pop
mov
sub
xchg
jns
mov
inc
test
xor
add
adc
loope
icebp
sbb
sub
cmp
imul
mov
add
adc
loope
push
into
add
pop
jp
aaa
xor
or
icebp
and
jp
mov
jge
mov
fcom
xor
in
adc
loopne
movsl
cmp
mov
lock
push
sub
outsl
sbb
pusha
pop
or
insb
clc
imul
fsubr
add
mov
dec
xchg
sub
aam
xor
inc
mov
cltd
push
and
pop
jg
adc
popf
ficoml
xchg
push
inc
xchg
in
xlat
inc
cltd
movsl
pop
mov
xor
xlat
outsb
orb
ljmp
pop
mov
loope
fidivs
lea
imul
loop
inc
xor
iret
enter
shrb
cli
ret
jmp
stos
repnz
in
addr16
out
lock
mov
enter
nop
mov
pushf
dec
mov
repnz
fmull
fmulp
jp
andl
test
inc
mov
cmp
pmuludq
and
sbb
mov
clc
pop
fbstp
pop
icebp
mov
push
sub
mov
popaw
add
rcrl
popa
mov
insl
mov
nop
in
jl
mov
mov
imul
mov
out
shll
jb
sbb
call
stc
inc
mov
xchg
scas
popf
adc
cld
cmp
scas
arpl
in
aas
push
stc
cmp
es
cmpsb
xchg
loope,pt
cmp
test
shlb
xchg
inc
daa
cmp
aam
daa
int3
je
cmpsl
adc
popf
pop
dec
mov
test
push
xchg
scas
xchg
stos
xlat
aaa
cmp
add
out
pop
sbb
outsb
pop
xchg
cmp
add
mov
imul
push
lods
cmc
push
adc
pop
imul
adc
rorl
jnp
sahf
mov
repz
fwait
mov
fsubr
fistps
js
test
out
inc
push
cld
std
push
sbb
pop
fisttpll
cmpsl
aad
fcoml
fldl
loop
lret
in
pushf
test
sti
jbe
out
and
xor
lds
je
call
ret
xchg
fists
push
push
mov
and
dec
ret
in
sahf
aad
mov
fidivs
mov
fists
mov
lods
sub
ret
mov
push
and
dec
dec
mov
sti
js
je
and
push
mov
mov
pushf
push
hlt
push
jnp
push
pop
lret
fs
fnstenv
mov
ret
and
ja
cwtl
sub
jmp
xorb
mov
xchg
sti
icebp
call
mov
or
movsl
outsb
jp
ss
pop
and
add
cmpsb
mov
sub
pop
in
jge
ret
sbb
mov
popa
xchg
sub
or
lcall
das
sti
push
arpl
inc
pop
or
add
insl
xor
cmp
inc
lea
xchg
cmc
cltd
push
fmuls
add
inc
mov
das
xor
insl
lock
hlt
mov
std
inc
fcompl
int
sarb
test
stos
notl
out
pop
lahf
bound
sub
mov
jb
in
ljmp
imul
std
repz
cmp
sbb
inc
loope
jb
lret
lock
add
xor
ficompl
xchg
lods
or
sbb
dec
xchg
jno
xchg
clc
add
ljmp
xor
fmuls
in
ds
mov
fildl
lret
dec
div
cmp
jno
adc
and
xor
int3
push
push
jmp
std
sbb
jmp
xchg
in
repz
stos
cld
xor
push
push
cmp
jo
inc
sub
jg
mov
xor
push
inc
lahf
sbb
sbb
pop
out
outsl
xchg
mov
xchg
sbb
pop
jp
jne
icebp
sbb
lea
shr
test
pop
in
pusha
jp
popa
pusha
jae
pop
ds
jo
push
cmp
mov
aas
and
pop
push
or
cld
clc
gs
jecxz
sub
mov
cmpsb
pushw
lret
pushf
cmpsl
dec
fcmovu
in
dec
mov
xlat
int
dec
xor
rcll
mov
inc
es
mov
out
aad
testb
sub
filds
inc
mov
nop
cmp
push
ss
movsl
pop
test
orb
loop
xchg
enter
dec
sub
sar
lock
test
out
dec
mov
dec
imul
mov
jp
push
ljmp
xchg
lret
xchg
cmp
pop
xor
mull
or
xlat
add
nop
cmpsl
inc
cmp
enter
xor
aad
hlt
cmp
mull
adc
mov
cmp
and
and
xor
leave
xchg
sti
cs
xor
cmp
aaa
and
loope
jmp
lds
test
add
push
lcall
sahf
mov
sbb
jbe,pn
sub
and
nop
xchg
test
les
pop
divl
imul
add
stc
cmp
stos
inc
adc
jnp
gs
push
inc
pop
iret
or
ret
aaa
dec
std
or
mov
idivb
dec
movsb
cmp
repz
jbe
push
enter
movsb
push
add
adc
les
mov
mov
xchg
jae
pusha
mov
les
sbb
mov
inc
mov
inc
jnp
mov
sbb
stc
inc
jmp
mov
imul
jl
pop
pop
pop
add
ljmp
stos
scas
jge
adc
mov
test
cli
fistl
sbb
test
sar
fdivl
insl
push
bts
imul
mov
inc
xchg
mov
or
inc
pop
cmpsl
and
cwtl
mov
jecxz
std
lcall
imul
je
mov
mov
insl
sbb
dec
lock
rep
test
jg
gs
pop
fidivl
repz
add
incb
dec
push
pop
pushf
and
clc
imul
mov
jb
dec
inc
jns
aad
cld
push
xchg
jnp
not
adc
xor
and
push
das
ret
js
les
mov
dec
cmp
sbb
andl
mov
pop
jns
popf
fcomi
mov
fwait
testb
fistpll
pushf
int3
sbb
je
pop
int3
test
mov
adc
iret
test
subl
aad
pushf
sbb
add
xor
jbe
enter
out
in
jge
or
sbb
inc
xor
add
aaa
jbe
popf
in
mov
mov
dec
lret
push
movsb
sar
inc
cmpsb
xchg
fdivs
shrd
jle
popf
in
clc
cs
pop
mul
sub
arpl
filds
loop
dec
pop
adc
rorb
sahf
cmp
lret
lea
aas
popa
popa
jp
test
scas
xchg
in
pop
jnp
popf
cmp
jb
fcompl
sbb
push
dec
pop
outsl
sub
sub
pop
inc
sub
xchg
push
xor
adc
in
push
test
mov
push
out
lock
adc
inc
lcall
push
jge
inc
pop
and
fsts
mov
sub
cmpsb
cmp
xor
pusha
and
nop
sarl
imul
int
rcrb
xchg
mov
das
xor
xchg
xchg
int
mov
rcr
adc
mov
lock
push
sub
insb
ss
in
mov
mov
daa
mov
or
insl
lret
jp
arpl
testb
sub
mov
data16
pop
pop
rclb
rol
dec
xchg
dec
flds
inc
sbb
push
testb
mov
xchg
ret
es
and
lea
cmp
das
jo
adc
dec
push
jbe
sub
pushf
dec
das
imul
add
sbb
shlb
gs
and
fwait
out
xchg
mov
mov
cmpb
loop
xchg
xchg
enter
shrl
outsl
test
xchg
outsb
mov
test
jns
dec
xchg
cmp
xor
push
cmp
mov
in
dec
dec
into
cmp
incl
jg
xor
fidivrs
cwtl
mov
scas
and
sub
jae
inc
arpl
sahf
jge
cmpsb
fistps
sbb
or
adc
insb
fs
pusha
fdivrs
pop
ss
and
lret
cmpsl
mov
xor
sarl
repz
sbb
push
cmpl
jp
mov
ret
mov
mov
sbb
push
sbb
push
repnz
sarl
sub
ss
sub
mov
fisubl
jnp
jb
mov
leave
xchg
mov
add
jae
adc
cmp
out
xlat
mov
daa
lods
sbb
test
test
adc
mov
imul
and
lods
mov
test
enter
cmp
xor
out
fldenv
jnp
xchg
mov
mov
push
sbb
adc
mov
xor
cmpsl
inc
repnz
roll
pop
test
enter
outsb
mov
sbb
rolb
stos
cltd
test
aad
call
std
out
cmc
popa
add
out
shlb
loop
out
cmpsb
cli
add
jle
repnz
pop
jmp
push
cmc
xchg
mov
and
inc
pop
out
pop
adc
pop
mov
xor
idiv
push
jbe
dec
int3
mov
les
push
stos
add
movsl
jne
mov
mov
insl
lods
sub
adc
lods
arpl
jle
sub
arpl
jae
shll
dec
mov
div
gs
xchg
imul
loop
and
incb
adc
ja
lods
add
sahf
jo
pop
sbb
loope
xor
or
cmpsl
ret
insb
mov
rcl
and
dec
inc
orb
xor
movsb
and
les
xchg
leave
std
pop
jle
into
push
lea
jns
lods
mov
push
mov
xor
cld
rcr
pop
mov
fldl
xchg
mov
int
imul
mov
enter
add
xor
in
jns
or
dec
popf
repnz
inc
test
jns
ds
rorl
call
pop
push
xchg
fsts
pop
xor
mov
mov
scas
dec
cmp
je
in
ret
or
inc
mov
adc
cs
mov
dec
incb
adcl
mov
pushf
jnp
jl
xor
popf
inc
adc
inc
jge
das
leave
mov
push
inc
sti
enter
mov
sub
shrl
xlat
lds
xchg
sti
lods
insb
cmpb
mov
mov
push
in
jmp
adc
notl
inc
mov
loop
and
adc
add
lea
dec
pop
or
ds
lcall
gs
imul
scas
mov
mov
icebp
cmp
add
jnp
pop
iret
dec
nop
push
mov
mov
lods
and
outsl
movsb
leave
jnp
and
mov
or
call
xorl
cmpsl
icebp
mov
and
sub
mov
mov
clc
jbe
push
sbb
adc
lods
xchg
push
inc
call
in
movsb
pop
in
mov
add
iret
sub
push
pop
sbb
das
mov
sbb
jge,pn
loope
cmp
lret
pop
mov
mov
xor
dec
jne
sti
ds
dec
fwait
jb
mov
test
leave
sub
xchg
inc
mov
xchg
and
bound
cmpl
jecxz
mull
fmul
mov
repnz
mov
decl
outsb
and
push
mov
sbb
cmp
inc
sub
sbb
xor
jne
imul
cli
mov
fwait
inc
jecxz
loop
popf
add
or
test
add
gs
decb
pop
icebp
xor
and
loopne
ja
or
divl
lret
call
add
mov
cmp
int3
adc
mov
popa
jnp
push
inc
outsb
cmpsl
insl
rcrb
lahf
and
jle
in
xor
rcrb
adc
daa
outsl
adc
lods
push
pop
and
xor
pop
sbb
cltd
rclb
pop
jne
xor
sbb
mov
xorb
cmp
mov
dec
push
mov
sbb
enter
ficoml
divl
cmc
push
jg
lret
pop
repnz
mov
imul
dec
inc
lret
and
cwtl
jnp
mov
add
pop
sub
add
in
xor
stos
pop
jl
clc
cmp
fistpll
mov
pop
in
push
popf
ja
pop
ds
lret
dec
dec
push
cmp
fists
testl
cmp
sub
test
cmp
push
xor
fwait
cmp
and
mov
in
mov
cmp
out
rorb
xor
js
ds
dec
inc
out
sbb
cmp
cmp
jp
jo
mov
leave
ret
lods
pusha
jmp
dec
xor
jnp
fwait
and
mov
pusha
xchg
lock
stos
jbe
insb
pop
repz
cmpsb
sub
in
call
aaa
leave
mov
pop
push
sub
pop
mov
xchg
in
xorb
fcompl
and
test
in
dec
sbb
pop
and
jb
out
lds
dec
aaa
push
sbb
dec
push
repz
loopne
cmc
cwtl
mov
jb
jno
es
jb
lods
adc
sahf
cli
test
aaa
cmpsb
repnz
dec
lcall
addb
or
in
inc
push
jle
insb
and
dec
pop
pop
arpl
adc
and
test
sar
sub
in
jo
mov
mov
sub
das
adc
jno
sbb
lret
dec
mov
mov
mov
push
push
sub
and
xor
sub
dec
mov
xor
inc
push
das
xor
gs
std
and
shll
and
adc
and
mov
aaa
or
popf
pop
outsb
sub
repnz
stos
xor
adc
pop
mov
out
lods
xchg
shrb
adcb
jb
mov
outsb
std
imul
cli
addr16
adc
scas
cmp
lcall
adc
jbe
ret
xor
and
push
lahf
xor
test
out
xchg
and
jl
dec
pusha
cmp
iret
sub
jnp
jb
jg
add
pop
xlat
jecxz
sbb
addl
subl
rolb
jns
stos
bound
push
stos
jecxz
jne
pop
ret
cmp
loope
pop
rorl
mov
xor
adc
mov
adc
fildll
push
xchg
pop
mov
lcall
xchg
mov
cmp
cmp
inc
fldcw
and
inc
adc
cli
adc
sub
xor
sbb
inc
push
iret
cmpsl
mov
sbb
jmp
sbb
push
addr16
jo
lret
mov
out
or
and
sbb
repz
lahf
and
mov
repnz
arpl
or
int
cmp
jl
xchg
push
sub
push
mov
cmp
out
arpl
xchg
push
popl
jp
aas
xchg
icebp
push
mov
sbb
pop
orb
jle
mov
cwtl
rorb
add
fstps
mov
pop
inc
outsl
xlat
and
int
pop
xchg
sahf
out
gs
mov
sahf
mov
cmp
cmp
ja
repnz
jns
jle
loopne
adc
js
and
xchg
leave
sbb
lret
into
sbb
andb
mov
nop
push
mov
mov
pop
sub
leave
cmp
mov
mov
inc
push
shrl
addr16
pop
jb
dec
dec
addl
jb
lds
stos
ljmp
dec
jnp
lods
mov
jno
in
and
pusha
mov
loopne
insb
das
adc
in
mov
xchg
or
jp
testl
fldl
sub
xchg
aaa
mov
je
push
repz
ret
push
inc
or
push
pop
sarl
das
push
jecxz
lock
push
clc
stos
rcrl
xor
notb
inc
das
cmp
mov
shrl
outsl
jecxz
or
leave
jmp
adc
outsb
insl
mov
jmp
test
adc
sbb
cmp
jns
jg
repnz
jge
xchg
or
popa
adc
push
sub
add
lock
aas
iret
call
shlb
cwtl
sbb
push
cs
aaa
mov
or
sahf
push
adc
ljmp
addb
movsl
sub
loop
dec
lret
and
dec
popf
pop
out
add
or
mov
ljmp
mov
cwtl
xor
sub
aad
xchg
xlat
cmpl
add
out
dec
mov
int3
fdiv
std
pop
adc
mov
aaa
mov
mov
mov
aas
das
js
push
mov
cmp
sti
inc
f2xm1
scas
lods
push
mov
jp
movsb
pop
cmpb
divl
push
out
inc
mov
std
add
enter
inc
leave
fisttpl
sub
mulb
cmp
jae
fwait
adc
and
mov
dec
or
loopne
daa
inc
pop
fstpl
cwtl
daa
ret
in
out
ljmp
insb
les
mov
push
das
decb
stc
mov
cmp
xchg
jns
stc
pop
dec
sub
or
in
ds
ret
mov
insb
inc
sub
mov
inc
push
xchg
in
jecxz
notb
imul
fwait
mov
cli
movsl
jmp
lods
pop
test
rcr
nop
lea
and
faddp
push
inc
cmpl
in
fs
xchg
mov
les
jbe
fsubl
pop
sbb
es
dec
divl
stos
inc
xchg
ret
xlat
mov
sarb
inc
les
or
popf
nop
popa
jnp
mov
jmp
xor
xchg
dec
imul
adc
pop
mov
jmp
leave
subl
icebp
ljmp
xchg
or
cli
out
and
in
dec
xor
cmp
mov
xchg
add
shlb
inc
leave
adc
outsl
out
mov
lods
xchg
daa
std
sub
mov
jae
pop
ret
and
cmp
mov
sub
repnz
mov
jne
dec
jmp
cld
cltd
loope
stos
jp
adc
js
jne
fidivl
and
sbb
cmc
push
sarb
sbb
sub
cli
repz
inc
cmp
cld
sub
cs
lock
in
dec
test
jmp
xchg
xchg
cmp
fsubl
add
push
adc
xchg
sbb
pop
dec
lret
xchg
push
roll
cmp
dec
push
idivl
rol
push
pusha
mov
gs
push
sbb
mov
pop
mov
dec
mov
jb
dec
mov
test
dec
mov
jl
cwtl
js
push
sub
add
iret
es
and
xchg
push
mov
lret
mov
into
mov
inc
lret
push
psrld
xchg
or
push
out
cwtl
sub
adc
cld
jns
inc
insl
xor
lret
repz
xor
xchg
xlat
stos
push
js
push
adc
jae
dec
and
xchg
test
enterw
sahf
adc
hlt
addr16
mov
sub
cmp
xchg
add
inc
test
sub
rcll
jnp
test
cld
loope
inc
lods
or
inc
dec
jb
repnz
ss
in
fsubr
jmp
das
cli
adc
mov
scas
cli
push
xchg
adc
notb
and
push
pop
sti
xor
mov
xchg
sarb
inc
push
add
stos
mov
pop
sbb
mov
push
and
shlb
adc
sti
scas
mov
jmp
dec
pop
dec
mov
sub
push
push
shlb
sub
pop
sbb
mov
inc
push
cmp
leave
xchg
lods
jns
xor
iret
or
mov
dec
out
cmpsl
sahf
mov
cmp
add
mov
sub
mov
inc
xor
data16
mov
addr16
mov
stos
cmpsb
fwait
outsb
or
aam
test
push
sti
sbb
dec
jmp
push
adc
in
cmp
rorl
lcall
aas
cmpsb
imul
and
out
out
repnz
jbe
fiadds
test
loope
jg
adc
inc
and
dec
sbb
fldl
sti
push
cs
or
jle
adcb
xor
mov
icebp
into
cld
and
fisttpll
mov
fndisi(8087
mov
jno
imul
pop
jne
or
cmc
xchg
jae
jo
xchg
push
push
xchg
cmp
fisubrl
lods
push
stos
push
cld
cltd
inc
jle
or
jne
mov
fisttpl
fistpll
mov
mov
cld
cmp
sbb
rcrb
fsubr
xchg
iret
inc
and
xchg
cmp
imul
mov
add
adc
loope
icebp
sbb
sub
cmp
imul
mov
add
adc
loope
rcll
sarl
xor
icebp
subl
cltd
mov
push
mov
add
stc
stc
cmc
or
cmp
jmp
mov
jmp
push
into
push
inc
mov
push
cmp
sub
sbb
or
mov
push
push
xor
push
mov
cld
mov
cmpsl
faddl
sub
sbb
or
jl
insb
es
push
dec
arpl
mov
cmp
in
cmpsb
fcoml
sub
sbb
or
jl
insb
es
push
dec
push
mov
mov
test
lock
repz
push
sbb
pusha
and
adc
arpl
adc
aas
test
inc
je
cmpsl
jbe
cmp
lret
andl
stos
mov
out
sbb
jae
add
inc
xlat
insb
data16
sbb
call
mov
rorb
dec
xchg
lcall
sub
jbe
or
pop
aaa
jns
fstps
dec
out
or
sbb
out
add
stc
xchg
mov
cltd
cld
test
insb
leave
filds
push
push
or
repz
icebp
scas
in
mov
dec
shrw
jo
call
sahf
lods
rcrl
loop
mov
popa
negb
jbe
data16
or
jl
insb
es
push
dec
push
mov
mov
cld
mov
cmpsb
fcoml
pop
pop
jne
gs
jl
push
push
cmp
jb
xchg
lcall
in
loope
in
jecxz
sbb
jns
pusha
and
and
push
sub
xchg
std
xchg
sahf
mov
xchg
std
roll
rcrb
sub
jae
pusha
xor
es
push
dec
push
mov
mov
cld
mov
cmpsb
fcoml
sub
sbb
or
jl
insb
es
push
dec
push
mov
mov
cld
mov
cmpsb
fcoml
or
cmp
addl
out
clc
lahf
movsb
mov
js
popf
int
sub
push
push
js
mov
btc
loopne
mov
pop
xor
ss
pop
data16
repnz
inc
ficoms
cmp
or
sbb
cld
lock
push
sub
add
movsl
and
cmp
pop
ljmp
mov
aad
outsl
jae
xchg
hlt
stos
jp
pushf
mov
hlt
repnz
pop
das
shll
mov
dec
je
push
adc
roll
sbb
daa
jae
mov
or
test
test
dec
mov
shr
jp
pop
pop
cltd
imul
popa
mov
enter
movsb
incb
adc
pushf
inc
cmpsl
mov
and
push
push
insb
fidivrs
roll
gs
pop
xchg
jle
push
pop
ljmp
test
adc
sub
ljmp
cwtl
fldl
dec
cmp
push
into
dec
data16
xchg
mov
int3
inc
jo
sbb
xchg
stos
pop
push
cmp
addb
in
dec
push
sti
rcll
popa
clc
mov
jge
sbb
or
add
pop
iret
roll
inc
int
xor
mov
pop
rcrl
xchg
fidivs
lds
cmp
or
inc
lret
das
add
xorb
mov
adc
xchg
divb
and
mov
out
xchg
pop
and
cmp
mov
aaa
or
scas
scas
out
add
lret
sbb
and
jmp
sbb
das
stos
sahf
sti
pop
mov
or
sbb
dec
push
popf
pop
mov
in
adc
add
mov
or
lret
call
in
cmc
je
popf
cmp
push
in
mov
fwait
dec
mov
push
fistl
hlt
push
rcrl
cld
movq
push
jecxz
push
add
adc
and
sub
leave
push
pop
pop
inc
push
adc
dec
les
push
push
add
or
mov
divb
out
inc
push
pop
sbb
sub
add
mov
sub
xchg
lret
adc
das
cwtl
sbb
adc
ljmp
inc
or
movsl
inc
pop
mov
inc
sub
int3
pop
leave
sub
sbb
mov
push
fs
and
xor
inc
mov
ret
xchg
cmp
jnp
xor
fidivl
or
jmp
lcall
test
stos
pop
std
addr16
mov
inc
push
or
sbb
jecxz
cmp
sbb
add
vpavgw
and
lea
push
sbb
pop
sti
lea
mov
dec
mov
pop
fs
dec
jle
sub
and
out
mov
mov
sub
fidivrs
push
jecxz
jge
fwait
loop
les
pusha
pop
les
jae
std
and
std
mov
sbb
or
inc
push
sbb
jno
in
dec
inc
adcb
xor
sbb
adc
jb
xor
popf
inc
pop
jnp
orl
jnp
icebp
mov
int3
adc
or
leave
loop
mov
and
mov
out
mov
xor
movsb
pop
sbb
test
inc
out
jno
in
movd
lret
dec
jne
in
test
bound
addb
data16
call
fsubr
xchg
mov
in
test
push
out
lods
nop
adc
out
dec
push
fs
pop
int3
test
cltd
or
push
lret
test
sti
ljmp
jmp
jge
pmulhuw
xchg
jg
mov
push
ja
pop
insb
cwtl
xor
pop
js
cs
push
pushf
mov
sbb
into
add
fldl
cltd
fstpl
sbb
frstor
scas
gs
call
fnstsw
jg
xlat
test
out
ror
sub
insl
push
fsubl
mov
push
std
adc
sbb
mov
ja
jp
adc
stos
fucomp
push
mov
push
pop
sub
dec
test
xchg
push
nop
dec
or
pop
cltd
dec
jb
shrl
pop
test
lret
movsb
insb
pop
push
mov
push
add
add
das
push
adc
or
repz
add
or
and
cmp
ret
sub
pusha
xchg
or
push
int3
inc
push
jg
daa
je
and
fidivrl
das
mov
les
cmpsl
or
pop
dec
hlt
popa
test
dec
mov
int3
adc
dec
sbb
or
mov
loop
fidivl
data16
cs
int
inc
ret
push
jp
lret
lds
cmp
aad
mov
push
sbb
hlt
pop
xorl
aaa
or
cmp
loopne
push
test
mulb
jl
popa
sbb
mov
dec
das
mov
pop
ljmp
push
lds
insl
out
int
mov
add
inc
jp
fcmovb
adc
addb
nop
pop
xchg
lcall
cmpsb
adc
mull
in
test
xor
xor
in
rcrb
mov
testb
rep
push
in
lahf
mov
cmp
inc
add
rolb
insl
testl
jns
mov
pop
adc
and
xor
pop
lahf
aad
xor
push
inc
dec
adc
bound
nop
imul
repz
pop
or
push
cwtl
es
xor
leave
flds
push
mov
fidivl
mov
mov
ja
xchg
push
sti
sbb
and
clc
out
js
rcrb
cmpsl
xor
ret
shll
xorb
iret
inc
cmpsl
sub
aad
addr16
repz
inc
aam
xchg
call
jl
out
das
frstor
lret
jl
sub
sub
test
ja
int
andl
aaa
arpl
or
xchg
aaa
xchg
jp
xor
xchg
xor
xchg
inc
mov
fsubrs
stos
es
int3
iret
push
sub
lods
aad
pop
inc
ficomps
insl
and
sub
cmp
jp
jnp
into
add
cs
sbb
jno
popa
negb
cmp
push
push
jnp
fwait
bound
pop
ja
push
push
cs
jmp
aam
mov
or
xor
popf
test
push
test
mov
fcomi
adc
test
fmull
mov
das
lcall
mov
xchg
arpl
push
dec
imul
inc
mov
adc
mov
mov
add
mov
andl
cmp
sarl
ds
jbe
test
adc
or
mov
leave
loope
add
sub
or
add
cmc
cmc
aad
sub
stos
inc
sbbl
lds
mov
or
mov
mov
mov
jns
mov
dec
sub
jmp
js
cmc
ss
pop
jbe
cli
push
popf
mov
daa
push
in
bound
cmp
popa
scas
xor
mov
pop
movsb
int
jne
mov
or
popf
lock
js
jp
mov
fs
lret
and
cmp
in
scas
and
pop
stc
pop
add
test
jns
cmp
imul
inc
pop
mov
mov
sbb
stos
inc
flds
sub
or
push
dec
clc
pop
sbb
cmpsb
add
xchg
dec
xchg
jb
sub
mov
arpl
rcrb
xor
mov
test
mov
mov
pop
outsb
stc
ror
sub
pop
movsb
sti
jmp
out
scas
adc
mov
push
popa
cmpsb
lldt
sub
mov
jae
add
mov
bound
insb
aad
out
mov
adc
xchg
push
jb
jne
call
inc
ss
mov
fsts
jbe
les
sub
ja
ljmp
data16
pop
pop
mov
pusha
movsl
xchg
jmp
nop
loope
daa
push
aas
mov
cmp
xchg
push
xor
ss
or
in
ljmp
inc
cmp
movsl
push
jno
lods
sub
imul
dec
roll
xor
xchg
aaa
or
test
push
pop
stc
int3
js
xchg
mov
and
cmp
adc
test
sbb
or
cmp
jne
pop
mov
out
mov
ffreep
aam
mov
stc
dec
jnp
dec
jl
mov
xchg
pop
aas
xor
xor
jmp
adc
nop
out
pop
popf
sbb
hlt
cmp
jp
adcl
jg
cld
mov
movsl
and
jge
repz
push
cmp
rcll
rclb
cmp
clc
dec
jb
in
jecxz
xchg
gs
mov
hlt
mov
jge
inc
mov
test
int
cmpsb
xchg
mov
fsin
add
dec
fimuls
xor
adc
push
push
push
sbb
mov
jae
cmp
in
xchg
repnz
mov
dec
pop
xchg
cwtl
push
test
fcompl
xlat
ds
mov
dec
scas
and
xlat
mov
popf
pop
lds
xchg
cmpsl
push
mov
pop
dec
fisubl
jb
ret
ret
aad
xchg
xchg
pop
and
mov
pop
mov
jns
aas
aam
jp
arpl
push
ljmp
sub
in
data16
cmp
in
sub
cltd
xchg
aam
test
ret
mov
push
cwtl
mov
imul
fisubrs
push
rcll
js,pn
cmp
rolb
insb
sub
and
mov
outsl
mov
push
dec
sub
out
dec
jo
popf
push
ds
scas
mov
sub
ret
fists
mov
mov
fistpll
mov
cmp
sbb
stc
fisttpll
pusha
add
mov
loopne
enter
test
repnz
lret
jb
add
lods
cmp
int3
leave
xchg
int
xor
mov
sub
cli
loopne
jecxz
mov
jo
shrl
into
mov
adc
sahf
inc
mov
cmpb
gs
mov
and
out
cmc
sbb
pop
stos
in
jne
cmp
cmc
inc
ret
jmp
xor
cmp
xor
test
les
xchg
mov
lds
push
push
lret
xchg
icebp
adc
mov
shlb
xchg
loope
pusha
movsb
das
add
mov
xlat
js
push
sub
roll
mov
push
int
adc
dec
xor
lahf
outsl
push
jge
and
push
mov
movsl
cld
notl
lock
jg
adcb
outsl
test
mov
dec
imul
fistps
cmp
dec
ss
xor
dec
lret
cs
frstor
push
xchg
inc
jl
adcl
mov
inc
jge
stos
fisttpll
dec
sarl
push
scas
dec
adc
icebp
sub
dec
or
js
and
push
leave
lcall
leave
xchg
dec
aam
scas
jb
arpl
into
das
pop
lea
testb
mov
lea
jne
stc
test
lret
adc
pop
jo
loope
outsl
dec
mov
pusha
lods
cmc
lea
push
inc
paddusw
lret
xchg
jmp
mov
cmpsb
call
ljmp
push
jne
in
pusha
cmp
mov
fsts
mov
add
enter
popl
mov
jmp
mov
push
enter
call
int
adc
popf
lods
pushf
repz
add
test
mov
cmc
loopne
lret
mov
push
adc
or
sbbb
pop
fnstenv
insb
stc
sbb
mov
ljmp
mov
imul
mov
rorl
scas
rcrl
testb
mov
addb
scas
mov
mov
jno
mov
sub
sub
adc
mov
fcompl
inc
repz
and
and
enter
in
mov
push
add
xchg
pop
enter
sbb
out
xchg
insb
loope
es
lret
or
lods
adc
jo
subb
cmp
inc
aaa
ljmp
fwait
sub
addr16
jp
movsl
push
aad
mov
cmp
dec
xor
xchg
pop
mov
fsubrl
push
adc
add
movsl
mov
je
sub
push
inc
ret
lret
inc
mov
inc
mov
ss
xor
xor
iret
cmp
mov
dec
jne
xchg
pop
aam
imul
jae
lods
lock
sti
subl
add
cmc
aad
xlat
inc
inc
push
jge
push
jnp
mov
ds
hlt
sbb
je
cli
xor
outsb
lods
dec
push
fcomps
test
mov
xor
hlt
call
dec
xchg
and
xchg
cmc
adc
pop
mov
and
cmc
sub
cld
clc
mov
test
icebp
int3
xor
cwtl
xchg
jecxz
sbb
dec
jmp
add
and
or
pop
and
int3
cltd
repz
fsubrl
sti
mov
test
ret
insl
fisubs
out
dec
push
xor
or
push
xorl
test
lock
dec
mov
cmc
xor
loop
les
jl
shrl
lret
es
iret
aam
push
clc
xlat
cmp
nop
cmc
mov
out
sbb
test
lret
push
cmpsl
cmp
or
pop
outsb
adc
lods
xchg
gs
cmc
stc
jmp
les
xchg
fsubrs
xchg
mov
sbb
dec
sbb
shll
xor
enter
mov
push
inc
pushf
push
xor
in
xor
push
sarb
test
shr
icebp
out
xchg
sub
bound
imul
repz
mov
incl
adc
and
pop
repz
inc
dec
lcall
popf
and
data16
shrb
mov
xor
push
inc
and
push
mov
fidivrs
jge
sbb
sbb
and
jge
in
call
mov
gs
mov
dec
test
inc
sti
push
iret
repz
je
xchg
mov
jb
enter
jne
lret
mov
pop
mov
and
mov
add
out
pushf
adcb
incb
mov
cltd
into
pop
mov
dec
mov
inc
les
fs
into
or
lods
lahf
test
jmp
aam
inc
loop
or
xchg
or
iret
out
mov
push
bound
sub
ret
mov
shrl
sub
iret
dec
movsb
xchg
js
jle
cmpsl
ret
loope
mov
cmp
xchg
pushf
into
and
push
cmp
push
arpl
push
or
pop
hlt
sub
imul
scas
enter
hlt
cmpsb
add
pop
xlat
xchg
jecxz
push
push
ss
mov
imul
insb
mov
ret
ss
in
ja
mov
lods
sub
add
mov
and
lcall
cld
stos
popa
jmp
fisubrl
jne
fwait
adc
in
movsb
mov
mov
sbb
imul
jecxz
sbbb
lret
xor
cmpsb
or
popf
iret
pop
enter
rclb
ficoml
sbb
dec
and
jbe
aad
dec
ret
cs
rdpmc
icebp
adc
out
fstl
dec
add
push
inc
and
push
sbb
scas
ror
repnz
push
lahf
ficompl
outsl
mov
data16
add
cmpl
sti
jmp
cmp
mov
dec
pushf
and
mov
outsl
xchg
imul
mov
popa
out
cmp
hlt
cmp
pop
or
sub
mov
loop
jns
or
in
daa
push
xor
adc
push
jl
pop
xrelease
jg
jg
jbe
mov
sub
or
xor
roll
mov
mov
add
pop
pop
call
fdiv
push
aaa
sahf
ja
movsl
mov
imul
inc
add
xor
lret
aas
pushf
in
xor
jge
fs
push
jno
addl
xor
dec
and
insb
sub
pop
loopew
hlt
lds
mov
fnstenv
orb
insl
mov
xchg
mov
gs
push
sbb
mov
mov
mov
push
pusha
or
cli
xlat
outsb
roll
rcl
adc
jp
pop
popa
cmc
rcrl
cld
sub
xchg
jo
sub
negl
inc
add
sub
and
bound
pop
loopne
pop
out
sub
or
repnz
repz
jnp
sbb
xor
subl
filds
and
in
mov
fprem1
faddl
popl
or
insb
out
and
xchg
or
xchg
je
adc
cli
push
cmp
mov
mov
adc
movsb
jno
fisttpll
out
mov
es
inc
mov
les
xor
popf
arpl
mov
cltd
movsl
cwtl
mov
pop
mov
pop
fldcw
mov
or
jo
xchg
adc
xchg
mov
xchg
in
pop
dec
nop
add
insl
mov
shl
lods
ret
and
or
outsl
leave
test
add
mov
pop
popa
sbb
adc
adc
iret
movsl
inc
das
jns
sahf
jle
data16
icebp
popf
fmull
dec
and
jae
jb
and
mov
pop
orb
shl
sbb
pusha
mov
cwtl
push
daa
aas
sahf
or
push
pop
cmpsb
mov
inc
cmp
inc
in
pop
mov
testl
sbb
lahf
xchg
insl
gs
std
xchg
fs
cmp
pop
out
shrl
cmp
push
call
push
xor
je
cli
mov
aam
mov
imul
push
bswap
mov
in
jo
xchg
bound
pop
sbb
scas
mov
mov
mov
xchg
sahf
lds
mov
xchg
es
ss
gs
xchg
mov
daa
outsb
push
je
jl
mov
and
or
scas
leave
aam
sub
pop
push
pushf
popa
sarb
mov
mov
jbe
js
sub
pop
cmp
mov
mov
es
loop
stos
sub
shrl
int
lcall
scas
dec
sub
sbb
loope
rorb
fsubr
jnp
data16
mov
outsl
sbb
ret
scas
mov
lds
mov
call
aam
rcrb
ja
sti
icebp
bound
sbb
gs
jbe
sbb
xor
add
std
roll
or
jne
sbb
xchg
xor
pushf
das
mov
cmp
outsl
mov
xchg
into
xchg
sub
pop
xchg
adc
push
push
shll
dec
jbe
call
pushf
loop
mov
lret
ret
js
jno
movsb
cmp
inc
mov
ljmp
cmpsl
nop
or
arpl
mull
popf
lds
adc
push
mov
xor
into
inc
aas
pop
mov
xchg
xchg
jnp
dec
xchg
sub
xor
outsl
out
cmp
loope
fcmovnbe
pop
push
incb
pushf
imul
dec
pop
push
sbb
jg
lds
je
aam
jo
sub
pop
lret
in
stos
mov
mov
inc
int3
pop
mov
lcall
das
fistpl
loop
fcomps
and
out
adc
shl
scas
jl
push
and
outsb
es
sbb
fmuls
test
push
push
daa
ljmp
jg
lea
mov
es
mov
popa
xor
addl
rorl
das
dec
add
cwtl
mov
cmp
xor
sub
iret
fs
test
imul
daa
into
push
pop
dec
lcall
xor
daa
ret
sub
scas
push
or
xchg
mov
mov
dec
and
bound
arpl
xor
scas
cmc
cmp
imul
sbb
out
fs
xlat
add
stos
sub
aad
nop
mov
mov
push
push
cld
divl
add
jmp
adc
repz
and
fcoms
jns
call
mov
loop
and
push
sub
inc
pop
jb
aam
rolb
movsb
xchg
dec
cmpsb
xchg
fimull
int
adc
data16
and
sbb
pop
xchg
or
mov
in
ja
inc
pusha
lea
rclb
mov
outsl
xchg
gs
add
sbb
xchg
cmp
fcmovu
gs
std
add
xor
mov
xchg
negl
outsl
mov
ficomps
cmp
or
jecxz
fadds
xlat
mov
push
dec
rcl
scas
mov
cli
sbb
sub
adcb
shl
jmp
ss
cwtl
add
inc
inc
aas
cmp
sbb
ss
es
push
dec
push
mov
mov
cld
mov
cmpsb
fcoml
sub
sbb
or
jl
insb
es
push
dec
push
mov
mov
cld
mov
cmpsb
fcoml
lods
pushfw
push
or
cld
ss
es
push
int3
push
mov
mov
cld
mov
cmpsb
fcoml
sub
sbb
or
jl
insb
es
push
dec
mov
mov
lods
imul
mov
daa
fs
pusha
test
inc
movsb
xor
and
adc
add
xor
and
push
mov
fs
bound
aam
les
hlt
add
repnz
add
xor
and
push
mov
fs
inc
fsubs
les
movsb
xor
imul
adc
jo
push
stos
enter
test
or
pop
mov
repz
jg
sub
sub
lods
mov
insb
into
sub
in
mov
movsl
gs
dec
inc
hlt
push
sbb
ret
mov
add
pop
jae
in
push
ja
inc
mov
fs
test
in
jmp
add
ficoml
push
lret
popf
xorb
out
xchg
mov
mov
xchg
ljmp
clc
push
loop
cmpb
shrl
fisttps
xchg
bound
sub
xchg
sbb
call
lahf
sub
mov
daa
xchg
mov
sub
aad
add
xor
add
xor
and
push
mov
fs
bound
aam
les
hlt
add
xchg
jb
xlat
cmp
add
add
pop
in
and
pop
lret
arpl
test
dec
mov
xorl
jmp
fs
add
enter
stos
jnp
push
jo
inc
cmpsl
push
idivl
mov
fs
bound
aam
les
hlt
add
repnz
add
xor
and
push
mov
fs
bound
aam
les
hlt
add
repnz
adc
mov
push
ret
sbb
lea
loop
cli
adc
push
sbb
xchg
aam
stc
cmp
aad
push
mov
clc
mov
push
in
fwait
jb
or
test
andl
mov
jns
pop
jl
js
fdivr
ja
popa
dec
cmpsb
dec
fstpl
cmc
repnz
cmp
test
mov
jge
mov
pushf
repz
roll
mov
cld
inc
inc
xchg
imull
repnz
dec
mov
pop
popf
push
add
push
sbb
add
add
rcl
aaa
add
shlb
inc
sbb
inc
stos
sbb
test
dec
jge
ss
add
call
xchg
fnstenv
and
ret
iret
fisttpll
jmp
ret
fstpt
xchg
test
movsl
decb
in
aad
popf
pop
cmp
adc
pop
cli
cmp
sbb
pop
push
push
cltd
adc
ss
sbb
jnp
add
clc
gs
jns
lods
sahf
mov
push
scas
fisubl
pushf
mov
cmc
xchg
or
fildll
negb
ss
dec
mov
out
xchg
mov
bound
dec
jp
and
sub
lods
mov
pusha
mov
call
cltd
sbb
iret
jle
xor
or
push
jmp
shl
mov
addr16
inc
xchg
out
lock
and
addr16
inc
cmp
mov
push
pop
in
pop
mov
enter
mov
sbb
loop
mov
out
imul
xlat
fstl
push
ja
jl
pop
icebp
das
lock
mov
popfw
stc
xchg
cmp
mov
or
dec
mov
gs
sbb
pop
ficompl
xor
aam
xchg
adc
iret
enter
je
mov
in
jns
call
out
push
dec
sub
rol
ds
or
adc
add
ret
mov
mov
lahf
adc
fildl
daa
xorb
dec
mov
mov
cmpsb
imul
jecxz
aaa
dec
adc
fidivrl
out
push
push
outsl
cmp
adc
out
mov
nop
hlt
push
ja
mov
scas
jle
and
repz
mov
xor
push
mov
xor
sub
push
pop
dec
pop
mov
adc
cmc
mov
mov
lret
pusha
mov
rcrb
mov
js
cmp
lods
pop
mov
mov
notb
fistpll
inc
fcomps
mov
out
test
and
jne
push
mov
xchg
inc
sub
hlt
xchg
cmpsl
or
mov
dec
repnz
int
scas
xchg
fsts
sbb
mov
fisubrs
loopne
lret
sarb
push
mov
jle
rolb
add
or
loopne
test
inc
bound
pop
xchg
cli
and
sbb
outsl
sti
call
mov
mov
mov
bound
fsts
push
jl
in
or
mov
add
in
loope
sahf
popa
shll
aas
pop
lcall
jo
xchg
or
cmp
push
dec
xchg
lea
xchg
sub
xchg
sbbb
test
lcall
fistl
lods
and
jmp
xchg
inc
push
sbb
mov
cwtl
cmp
and
dec
pop
or
cmc
jne
ljmp
testl
shrb
inc
mov
aaa
fidivrs
cmp
test
jle
inc
andb
in
or
jmp
cmpb
fisttpl
mov
out
push
out
shrb
sbb
pop
xor
test
insb
shl
iret
mov
sbb
in
cli
aad
iret
cltd
adc
cmp
cmp
adc
dec
mov
add
add
xchg
imul
leave
push
jns
jl
inc
mov
sub
xor
jmp
xchg
jp
xor
mov
dec
mov
into
fidivl
add
mov
fs
mov
jg
hlt
std
dec
pusha
sbb
or
sahf
push
ljmp
sbb
subl
sarb
jne
pop
test
inc
dec
js
sbb
mov
xor
out
pop
lods
in
cmp
jmp
mov
and
ja
lds
aad
idivl
sub
push
lods
add
sahf
lahf
hlt
add
popf
aad
fs
mov
inc
mov
cmpb
adc
stos
or
or
movsl
xlat
pop
xchg
xor
sub
xor
jmp
or
fstpl
loop
or
gs
dec
mov
cmp
fs
and
repz
enter
icebp
test
mov
pushw
scas
push
xchg
mov
sub
inc
aas
xchg
and
and
in
out
scas
add
icebp
loop
mov
add
negl
lret
sbb
sbb
lods
jns
xchg
popa
dec
xlat
loope
jnp
mov
push
adc
pop
dec
dec
add
adc
fdivrs
cwtl
xor
mov
or
push
sbb
ss
arpl
pop
pop
divl
mov
mov
outsb
xor
add
push
lret
ja
cli
cmp
notb
fs
pop
das
arpl
inc
icebp
movsb
pop
add
stos
inc
dec
icebp
jnp
jno
lahf
rorb
test
or
cs
inc
rcrl
and
scas
add
out
stos
mov
call
movsl
mov
dec
pop
mov
jnp
mov
js
mov
sti
scas
mov
jge
dec
and
icebp
sub
jne
jne
int
adc
xor
and
sbb
fwait
mov
xchg
or
dec
aas
jp
inc
lods
icebp
mov
testl
hlt
inc
pop
rol
sbb
adc
rorl
loop
cld
mov
jl
push
lret
int3
sub
jae
out
fsubrs
cli
jbe
pop
loop
in
test
jmp
sub
mov
add
mov
test
push
insl
lahf
shrb
aaa
xor
mov
aam
cmc
in
mov
addr16
repz
aas
inc
fistps
mov
mov
daa
cltd
sahf
add
int
xchg
lds
loop
push
scas
pusha
pop
push
cmp
push
dec
or
lods
mov
jecxz
xor
cmp
je
mov
dec
jp
insb
loopne
fidivrs
or
scas
shlb
sub
cmc
out
and
jb
push
push
xchg
mov
iret
test
ljmp
lret
pusha
jb
call
cmc
enter
es
mov
pop
mov
mov
sbb
jnp
out
std
dec
out
iret
ftst
xchg
sbb
pusha
cltd
mov
daa
repz
imul
test
mov
cmp
sub
lods
je
cli
pop
add
in
daa
movsb
cmp
repz
divl
fisubs
mov
mov
push
test
cld
or
cltd
dec
jl
push
adc
clc
cmp
fs
leave
mov
cmpsl
enter
in
jmp
aaa
js
cmove
pop
adc
mov
cltd
and
aaa
mov
hlt
mov
xor
adc
js
pop
xchg
jo
je
int3
xchg
lret
mov
inc
push
mov
or
jo
dec
mov
and
into
sbb
pop
rclb
subb
push
sbb
fsts
fbstp
lea
pop
add
int3
cmc
sub
in
fs
test
inc
out
cltd
xlat
push
pop
std
pop
mov
je
js,pn
punpcklbw
cmc
ja
insl
pop
add
fs
aam
or
jae
aas
lahf
mov
add
xor
xchg
sbb
scas
or
iret
call
push
fistl
pop
jae
notb
cmp
fdivp
subb
std
mov
dec
dec
idivl
negl
stc
and
filds
push
sub
mov
pop
ret
xor
test
cltd
push
jl
es
mov
fs
pop
mov
jae
popf
pushf
lret
subl
cmpsb
fldcw
sub
mov
xchg
scas
and
fildl
cmp
lret
or
mov
je
xchg
mov
mov
aad
inc
imul
fimull
mov
jl
dec
mov
dec
outsb
cmpsl
jmp
or
mov
mov
cmp
aam
mov
push
adc
jp
adc
adc
iret
xchg
mov
mov
js
pop
push
xor
and
fs
dec
mov
adcl
bound
push
jg
lret
xchg
cli
addr16
add
fnsave
mov
notb
push
ret
data16
xor
out
jle
js
test
bound
lcall
lcall
test
int
lock
sbb
push
pusha
mov
icebp
sub
xchg
cmpsl
xchg
pop
sahf
dec
xor
movsb
aam
cli
or
frstor
data16
mov
shlb
vfrczpd
mov
jae
jbe
adc
inc
mov
out
mov
ja
repz
xchg
push
xor
cmp
jb
inc
in
dec
out
fdivs
outsl
adc
sbb
sbbl
mov
xchg
mov
inc
cmp
jle
rcr
jne
enter
stos
shr
inc
add
push
ss
jno
xchg
mov
fsubl
popf
and
cli
jle
push
push
sub
lock
into
jnp
ficomps
jb
pop
lock
xchg
ds
fiadds
test
shrl
add
idivl
jb
cmc
loop
sbb
div
bound
sub
insl
lds
inc
pusha
xchg
xchg
pop
dec
hlt
adc
push
fldl
shl
jl
sub
dec
cmp
std
xor
sbb
movsl
sub
push
scas
xchg
cmp
jns
andb
ljmp
adc
sbb
push
xchg
push
inc
dec
movsl
lds
cltd
sbb
lods
stos
fsubs
lea
lods
sub
das
pop
out
hlt
add
lea
in
std
out
push
test
ja
aaa
rcrb
inc
xchg
cmp
fistps
or
mov
aad
insl
jno
inc
cld
push
popa
icebp
ja
mov
pop
outsl
add
mov
sub
pop
adc
hlt
xchg
out
out
mov
cltd
cmp
jp
jmp
mov
es
sub
lret
aaa
sti
adcb
adc
je
mov
outsl
shll
out
outsl
or
sub
push
or
lret
push
adc
lret
pop
dec
or
jbe
loope,pn
or
adc
cltd
cmp
adc
jg
sarb
xchg
cld
mov
push
mov
sub
andl
pushl
sbb
rcrb
pushf
lods
cli
sub
jl
push
sub
mov
cmpsl
push
push
xor
pusha
pop
jl
xchg
inc
xor
xchg
mov
sbb
ret
mov
adc
sub
cmp
dec
lods
addr16
cli
mov
lcall
and
fnstcw
xchg
jmp
dec
popf
ja
dec
sbb
jg
clc
mov
mov
fwait
mov
adc
inc
dec
out
sbb
add
gs
push
sub
add
mov
insb
mov
mov
cmc
push
hlt
push
stos
insb
xchg
mov
mov
dec
mov
adc
push
subl
out
push
icebp
jns
lock
dec
cmp
mov
loope
push
outsb
dec
cmp
dec
adc
iret
loopne
mov
adc
pop
push
jp
lret
jns
les
rcr
inc
dec
sahf
mov
sbb
mov
imul
xchg
pop
and
cmp
aad
fmul
mov
mov
imul
rorb
add
fs
mov
or
scas
aaa
std
out
mov
xor
add
rcrb
dec
xlat
and
mov
mov
dec
mov
loopne
pop
sbb
xor
cli
push
popa
lret
aad
addb
negb
jecxz
notb
jno
loopne
repnz
pop
adc
rcrl
jae
add
lcall
shll
pop
sub
aas
pop
addr16
loope
test
inc
repnz
jno
mov
push
insl
adc
outsl
adc
push
test
jecxz
xchg
push
sub
fwait
or
mulb
adc
mov
pop
pop
add
xchg
push
outsl
add
loope
cmp
adc
xor
jno
js
dec
or
pop
cltd
rsm
enter
sub
out
dec
pop
ds
xor
cmp
mov
and
mov
pop
jge
xor
iret
insl
mov
scas
lcall
mov
testb
add
call
fwait
ret
mov
popl
xor
clc
cmc
and
push
add
mov
jg
xor
cs
das
xor
pop
dec
jge
test
add
xor
shl
outsl
int
mov
sbbl
jns
ret
lea
in
in
fdivr
pop
dec
jns
xorb
inc
xchg
es
addl
mov
mov
xor
cmpsb
inc
imull
mov
sub
cs
dec
sbb
mov
mov
xor
and
mov
movsb
aam
idivl
cmpsl
mulb
add
mov
mov
dec
int3
pop
mov
mov
pop
out
inc
ja
cmp
arpl
add
gs
idivb
sbb
sub
dec
and
xchg
dec
loopne
push
mov
and
sub
adc
fwait
repnz
aaa
loopne
add
iret
pop
sahf
cmp
push
xchg
push
mov
je
shl
mov
lods
adc
mov
shr
cmp
or
or
cmpsb
jae
mov
mov
push
ret
xchg
xor
add
pushf
out
aas
mov
mov
pop
jne
jecxz
push
stos
cli
in
mov
push
adc
test
std
mov
mov
push
aad
sbb
lret
gs
inc
and
repnz
push
ficoml
mov
fstpl
add
cs
mov
xor
pop
mov
xor
and
sbb
or
shl
push
loop
mov
xchg
dec
add
in
dec
repz
in
inc
pop
aas
cmp
jp
adc
or
add
loope
push
jnp
aas
sar
xor
lcall
mov
push
nop
or
mov
sbb
jmp
xchg
outsb
inc
cmc
das
adc
ljmp
xchg
ja
dec
or
push
xchg
scas
into
mov
es
cmp
ljmp
lds
das
shrl
pop
in
insb
sbb
jo
inc
cld
leave
jne
into
movsl
test
inc
ss
jae
aad
pop
mov
xchg
cmpsl
xchg
addb
add
test
mov
fiadds
mov
dec
jbe
cmpsb
lods
popa
lahf
pop
jns
jb
addr16
mov
in
cmp
jb
dec
out
add
test
xlat
and
jns
lods
icebp
ret
dec
sbb
sbb
mov
mov
scas
jmp
insb
stos
ficomps
fwait
ss
and
sbb
insl
mov
iret
lods
subb
cmpsb
pop
xchg
int
xor
in
sbb
inc
es
mov
add
lcall
jp
dec
xor
cli
jbe
mov
clc
in
call
dec
stc
cmp
addr16
adc
pop
fcoms
into
mov
xorb
mov
rcrb
clc
inc
push
call
out
leave
and
and
push
xor
out
sub
sub
xor
fcoml
out
adc
xchg
clc
ja
mov
mov
and
push
mov
inc
xlat
or
test
das
mov
adc
and
mov
pop
nop
cltd
insl
add
insb
nop
jne
fs
lcall
ja
dec
jae
mov
scas
fists
adc
addb
ret
xchg
daa
enter
xor
dec
out
repnz
aas
pop
xor
mov
insb
dec
out
dec
xchg
mov
dec
push
cwtl
cmp
pop
mov
repnz
mov
ret
and
aaa
scas
or
imulb
out
push
jp
scas
shlb
xchg
xchg
lds
and
push
popf
xor
mov
inc
jmp
int
or
lods
adc
test
push
aam
pop
xchg
das
daa
xchg
aam
inc
push
aaa
cmp
and
pop
fcmovb
xchg
mov
mov
test
jo
pop
cwtl
cltd
cmpsl
xor
sbb
cmp
sbb
in
add
pop
mov
mov
sbb
xchg
out
leave
pop
repnz
imul
sbb
test
inc
fisubs
adc
mov
fs
outsl
and
pop
xchg
jmp
mov
pop
dec
jb
pop
fdivrp
dec
xor
cld
fistps
mov
ds
lods
pop
cmp
int3
pop
sahf
adc
cmp
lret
adc
data16
adc
pop
or
data16
inc
stc
or
ljmp
dec
mov
cmp
mov
and
lahf
adc
lret
subb
in
pop
cld
xor
push
xor
xor
aaa
sub
xchg
jnp
rcr
push
xchg
icebp
outsl
inc
pop
loope
clc
ret
repnz
add
repz
movsb
adc
mov
jmp
mov
adc
int3
mov
push
incb
outsb
lcall
iret
mov
add
mov
dec
cmp
insl
ljmp
and
pop
mov
cmp
and
lcall
jge
push
bound
or
xor
dec
inc
pushf
aam
cld
fildll
sub
jp
dec
dec
roll
add
mov
and
clc
or
xorl
scas
push
sub
scas
or
cwtl
xor
loop
and
mov
mov
sbbl
pop
popf
inc
jmp
jle
mov
gs
or
outsb
mov
sarb
xor
inc
mov
icebp
fnsave
sub
cmpsb
pop
or
mov
rcll
xor
jmp
cmp
sub
mov
mov
push
aaa
and
sub
xor
pushf
clc
dec
and
xchg
fs
adc
jbe
push
into
and
sarl
testb
add
push
test
dec
maxps
loopne,pt
cmp
fs
roll
data16
int3
ja
pop
sbb
inc
mov
stos
add
add
loopne
mov
mov
mov
movsl
pop
cwtl
repz
in
jmp
cmpsl
jmp
ret
mov
or
cmp
lahf
mov
mov
mov
or
jp
fisubrl
lods
dec
sti
stos
pop
mov
mov
jne
push
dec
pop
adc
loop
jge
sbb
mov
testb
sbb
or
or
dec
nop
cli
push
push
pop
rcr
jo
sbb
sbb
and
imul
cmp
repz
jno
enter
iret
jb
aam
sti
cmc
loop
stos
data16
xor
jecxz
pusha
cmp
shll
pop
sub
shl
pop
sub
scas
sahf
mov
or
sbb
int
xchg
mov
loop
iret
inc
clc
xchg
sub
cwtl
pop
enter
mov
push
mov
and
pop
sub
lret
popf
adc
popf
cltd
iret
or
jle
stc
repz
sbb
dec
adc
xlat
lock
inc
mov
push
inc
and
jl
sbb
outsb
lea
bound
test
outsb
repnz
es
out
das
cmc
mov
dec
js
adc
pop
iret
test
in
xor
sbb
addr16
mov
loopne
repnz
jb
insl
inc
push
leave
mov
adcb
push
cmp
and
mov
pop
xor
rol
or
movsl
fbld
xchg
cltd
pop
test
or
aas
cmpsl
sbb
push
shlb
push
andb
ds
clc
stos
jne
loope
ret
jg
movsl
mov
inc
push
jne
int
xor
xchg
nop
cli
cmc
pop
mov
loopne
add
adc
scas
mov
jae
and
ficomps
psubb
xchg
jnp
mov
xor
cs
xor
lock
aaa
mov
jnp
sub
xchg
pusha
mov
fstpt
cmp
loopne
mov
push
je
testl
inc
push
add
fcoml
aam
imul
js
pop
testb
cmp
test
stos
lock
cmc
lret
jae
sub
mov
ljmp
inc
shlb
sub
pop
jmp
lahf
mov
outsb
insb
cmp
fldenv
gs
aam
inc
filds
dec
mov
jp
pop
je
add
aaa
sahf
mov
rolb
adc
inc
cwtl
adcl
sbb
fs
lcall
out
sti
cwtl
mov
cmpsb
sbb
dec
sbb
repz
dec
movzwl
sub
fists
add
or
test
aad
xor
scas
adc
addr16
stos
xor
and
jae
mov
add
xor
mov
fs
bound
aam
les
hlt
add
repnz
add
xor
and
push
mov
fs
bound
aam
les
hlt
add
repnz
add
xor
and
xchg
jne
fs
bound
xor
and
adc
add
repnz
add
xor
and
hlt
add
clc
mov
roll
stos
cmp
or
sbb
dec
or
insl
sub
cmp
or
mov
mov
lret
lods
ljmp
insl
sub
or
push
lcall
std
fimull
ljmp
insl
sub
or
push
lcall
std
mov
test
mov
dec
add
sbb
dec
icebp
notl
aad
mov
ficoml
ja
stos
jg
sbb
xorb
loop
sub
aaa
in
das
jo
clc
fbstp
std
adc
loop
orl
sbbb
insl
test
lcall
add
inc
pop
lahf
push
sub
pop
or
dec
mov
pop
sbb
lcall
lods
and
mov
xor
lods
jle
push
call
inc
or
imul
adc
cmp
sbb
xor
mov
mov
pop
loope
lret
fldl
out
cld
out
lret
pop
cli
mov
or
insl
sub
or
push
lcall
std
fimull
ljmp
add
adc
popa
add
fldt
mov
mov
dec
js
push
dec
nopl
jns
pop
push
pushl
out
xchg
mov
enter
add
push
push
add
dec
sbb
lcall
std
fimull
ljmp
insl
sub
or
push
lcall
std
fimull
ljmp
fisttps
cmp
push
jne
repz
std
subl
clc
cmp
jnp
cmp
jae
push
push
push
mov
or
pop
add
xor
add
lods
adc
test
shl
or
sbb
xor
adc
int
sub
mov
imul
and
mulb
mov
adc
xchg
out
cli
add
mov
and
daa
cli
jmp
imull
in
add
pop
xchg
push
cmp
cmp
das
cmp
andl
lock
out
aas
ficomps
insl
std
shll
pop
push
or
addr16
and
rolb
push
idivb
dec
pop
leave
or
out
sub
stc
xchg
aad
sahf
sarl
xlat
add
stc
bound
in
ja
push
mov
movsl
ret
aaa
xchg
adc
into
mov
call
outsl
sbbb
cmc
ja
jns
mov
int
xchg
cmp
and
sub
cmpsb
test
and
daa
hlt
xchg
cwtl
iret
imul
aaa
adc
mov
pusha
movsb
add
je
repnz
cmpsl
sbb
std
dec
test
jecxz
ds
and
incb
sbb
pusha
sbb
int3
mov
cmp
pop
push
add
and
mov
pop
scas
add
mov
mov
test
jg
pop
test
push
rolb
stc
fistpl
cmpb
pop
int3
pop
mov
js
mov
xor
adc
jbe
movsl
lods
sub
push
lods
mov
xchg
cmp
xchg
cmp
dec
push
jecxz
mov
pushf
lcall
cmp
imul
mov
jg
aaa
imul
call
lea
lods
xchg
int
mov
ret
in
cltd
xchg
or
push
and
enter
fmul
xchg
mov
mov
jmp
mov
push
int3
test
push
dec
sbb
pop
into
cltd
aas
icebp
std
repnz
nop
push
cmpsb
pop
fs
testl
hlt
ret
mov
inc
push
daa
cmpb
rorl
test
ret
dec
inc
imul
pushf
or
ret
dec
test
je
cmp
dec
mul
cmp
aam
ss
pop
mov
rorl
dec
shr
pop
dec
xlat
pop
mov
adc
cmp
and
shrl
aad
mov
in
ficompl
aad
or
adc
mov
inc
jecxz
adcb
and
mov
jnp
ret
cwtl
jno
jne
sbb
dec
jp
xor
add
xchg
sbb
dec
adc
mov
mov
lcall
mov
pop
rcll
pushf
inc
leave
andb
inc
sbb
faddl
inc
cmpsl
sti
mov
push
loopne
rol
dec
lds
or
cmp
add
inc
and
inc
fnsave
test
call
cwtl
fisubl
stos
push
fst
shll
orl
xchg
mov
out
loope
insb
loop
lds
stos
xchg
mov
jne
sbb
nop
cmp
adc
push
outsb
inc
add
inc
dec
aas
sub
fistl
loopne
pop
cmp
mov
lods
or
mov
je
fmuls
sub
mov
icebp
pop
fists
jae
out
dec
mov
shll
in
push
sbb
cmc
sbb
not
sub
pop
test
adc
data16
xor
push
sahf
mov
pop
cmp
pop
lods
aad
push
sub
push
push
mov
les
push
lods
hlt
xchg
mov
fidivrs
aaa
xchg
and
mov
and
subb
lcall
aaa
dec
mov
jge
and
into
icebp
js
mov
push
lret
outsb
mov
scas
repz
adc
test
stc
test
test
ja
dec
fwait
xor
lock
popa
in
in
and
and
mov
out
jb
jecxz
push
mov
jmp
into
inc
jp
mov
and
push
js
repnz
add
mov
out
pop
jne
jo
xchg
sub
jge
or
xor
nop
lds
ret
and
sti
or
pop
and
jnp
inc
loope
sbb
js
repz
lds
cmp
stos
fadds
pop
inc
es
pop
mov
arpl
sbbl
add
outsl
and
jmp
mov
in
and
or
call
mov
inc
push
sbb
dec
in
and
and
cmpsb
mov
enter
dec
jg
fcoml
push
jmp
sub
jb
sub
fimuls
push
jl
fistps
rcr
mov
add
je
xor
int
xchg
pop
in
mov
or
cmp
lret
movsl
xchg
je
fnstenv
lret
add
dec
adc
mov
adc
xchg
shll
mov
cmpsb
mov
or
push
pop
mov
call
or
les
out
loopne
jmp
daa
sbb
fcoms
pop
insb
inc
xchg
das
mov
aad
inc
inc
ret
popf
stc
daa
imul
add
jle,pt
int3
mov
in
bound
fnstsw
nop
jle
inc
mov
enter
enter
shl
mov
sub
mov
inc
xor
ficomps
ss
aad
lret
push
mov
shrl
pushf
cmp
cmp
jecxz
sbb
cmp
jle
sub
stc
jge
jns
sbb
fsubrs
push
jg
mov
dec
jge
mov
sbb
lods
inc
or
jmp
push
ror
repz
mov
jmp
mov
lock
in
fprem
sub
xlat
or
movzwl
aas
mov
sub
inc
imul
push
push
dec
cmpsb
lret
sub
loop
addb
add
shl
das
lcall
fsubl
xchg
cmpsl
push
gs
mov
xor
test
jne
jno
xor
sbb
xor
into
dec
arpl
mov
push
jge
add
aas
je
rcl
pushf
rcrb
push
lret
js
sahf
dec
adc
mov
in
mov
mov
push
and
test
daa
push
sub
xor
out
push
xchg
push
aam
adc
sahf
mov
jnp
add
adcb
mov
jnp
or
fdivrs
movsb
or
movsl
cmp
push
and
movsb
leave
pop
mov
cmp
mov
push
and
mov
cwtl
inc
xchg
xor
adcl
xor
mov
rol
sbb
mov
mov
divb
loop
mov
jge
mulb
mov
mov
loopne
adc
add
pop
pop
jecxz
jb
mov
stos
arpl
loope
je
mov
loopne
pusha
jb
mov
inc
mov
filds
enter
or
loope
stc
movb
aaa
dec
push
inc
in
orb
lret
dec
xchg
mov
dec
ss
aas
mov
mov
test
jp
or
or
sub
arpl
jbe
imul
mov
jg
lret
xchg
movsb
or
cmp
dec
and
test
arpl
pop
jge
orl
aas
xor
stos
rorl
pop
xchg
dec
sub
jmp
mov
enter
push
lods
inc
ds
cmc
fsubrs
push
ds
pop
mov
imul
dec
fcomps
jle
outsb
mov
out
stc
in
loopne
add
rorb
jne
je
mov
add
fsubs
loope
adc
cmp
adcl
sbb
fildl
cmp
pop
jge
dec
jbe
sar
ja
xchg
inc
or
out
movsb
xchg
inc
push
pop
call
lret
pop
out
lcall
push
and
dec
inc
or
jmp
dec
in
jmp
mov
adcl
mov
or
insl
imul
pop
mov
arpl
movsb
stos
cmp
and
shlb
fistpl
sbb
pop
popa
mov
push
xor
mov
dec
daa
pop
jle
test
ss
mov
inc
inc
ret
inc
imul
aam
mov
ljmp
fs
push
rcrl
jmp
incb
push
sbb
jb
push
pop
adc
and
ss
test
xor
mov
push
repnz
sbb
scas
icebp
arpl
div
xor
xchg
and
push
jne
add
xchg
mov
xchg
jp
cli
dec
push
rclb
pushf
movsl
fbld
pop
push
xchg
fidivl
pop
out
js
pop
scas
lds
ljmp
out
in
aam
jno
rcr
sbb
add
mov
imul
and
push
mov
sub
ret
adc
cmp
mov
or
jne
fwait
pop
push
sahf
cmpsl
mov
es
popf
loop
dec
stos
lods
jb
lcall
add
andl
sbb
in
sti
in
dec
mov
dec
imul
jp
dec
cmp
dec
adc
into
decl
mov
or
pop
popa
pop
jmp
ljmp
outsl
or
repz
dec
stos
lcall
punpcklwd
adc
movsb
aaa
add
sub
xlat
iret
push
cli
out
imul
push
cmpl
out
mov
xor
loope
lahf
bound
pusha
fsubrl
and
inc
inc
cwtl
mov
test
xor
or
pushf
call
dec
mov
clc
pusha
push
jg
stos
es
jne
mov
lcall
dec
adc
mov
cmovge
mov
insl
sbb
int
fldt
jne
into
inc
mov
dec
jbe
sbb
or
adc
sub
xor
je
xchg
inc
sub
mov
imul
in
cmpsb
inc
xor
jge
mov
push
mov
push
or
pop
fsubl
add
shr
inc
stc
adc
sarb
in
jge
jne
imul
enter
pop
xor
jo
out
in
aaa
aam
movsl
imul
aam
sub
pop
mov
mov
fldl
and
or
push
flds
xchg
push
es
rcrb
sub
mov
test
pusha
lds
loope
lds
push
cmpb
gs
sub
aam
inc
dec
enter
shll
push
out
dec
push
mov
popf
push
sub
lods
leave
pop
mov
sbb
fildl
fst
ds
sbb
sub
mov
xchg
out
adc
push
andb
imul
xor
sti
fmull
aam
push
xchg
stc
aad
sbb
or
mov
js
aas
push
push
cmp
fbld
xor
xchg
pushf
sahf
js
out
pop
movsb
sub
ljmp
push
push
cmp
in
push
pop
jge
mov
adc
jbe
pop
dec
jne
jle
int
mov
pop
xchg
cwtl
push
adc
cmp
push
es
mov
lds
aaa
fists
and
loop
stc
adc
imul
push
test
adc
fwait
pop
add
insb
mov
jno
mov
out
cs
mov
push
push
mov
lret
mov
shr
push
pop
out
adc
test
fcompl
cmp
adc
sub
sbb
mull
push
repnz
clc
dec
js
mov
aam
out
jge
mov
push
lret
in
arpl
mov
xor
nop
cltd
into
mov
push
fwait
lret
cmp
loop
dec
dec
mov
push
inc
or
push
pop
popa
test
pop
call
loop
inc
pop
jns
sub
in
imul
and
mov
aam
cs
push
pop
push
movsb
pop
out
xchg
inc
pop
mov
clc
aam
cmp
mov
xor
push
int3
notb
pop
xchg
dec
scas
dec
scas
fsubrp
cwtl
fisttps
int
ss
dec
orb
test
mov
popa
mov
out
mov
fwait
cld
std
jae
xor
and
mov
pop
adc
bound
xchg
adc
push
cmc
pop
mov
mov
cmp
pushf
sbb
xchg
ret
pop
jnp
aaa
out
mov
mov
push
dec
arpl
addr16
mov
mov
fucom
es
jge
pop
xor
adc
pushf
add
mov
insl
cmp
jae
roll
mov
inc
cmp
mov
rorb
lods
push
sti
add
pop
addl
call
dec
out
and
mov
jb
fs
adc
fnstsw
lret
sbb
stos
cmp
jmp
sub
incl
adc
pop
fists
out
out
jnp
and
sub
mov
jb
lret
jge
inc
sbb
push
aaa
bound
and
test
frstor
jl
mov
shl
inc
jg
movsl
add
jmp
ja
hlt
call
idivl
call
mov
dec
xor
push
and
push
add
xchg
lods
lods
pop
bswap
xchg
cwtl
bound
pop
pop
ljmp
fsubrs
loopne
xor
aaa
push
jno
enter
cs
xor
stos
popa
movsb
pop
push
sub
cmp
mov
out
shrb
xchg
or
dec
test
xor
sbb
loope
nop
out
insl
sbb
icebp
int
xchg
mov
aad
pop
cwtl
inc
stos
pop
xor
dec
divl
adc
out
mov
sbb
imul
roll
or
es
fisubrl
shl
outsl
xchg
mov
repnz
ret
or
xor
fisubs
dec
test
mov
mov
mov
push
cli
mov
incb
sbb
jmp
and
js
mov
notb
pop
arpl
xor
idivl
mov
aas
dec
mov
mov
iret
mov
fcoms
jae
pop
jo
dec
hlt
ret
js
jg
cmp
jp
pop
mov
pop
sbb
dec
mov
add
aad
in
push
fimull
push
pop
cmpsl
daa
fiadds
scas
jp
lods
push
push
mov
insb
or
fsubs
cmpsb
aad
or
stos
xchg
add
xchg
inc
fucom
push
fs
inc
pushf
sub
fsubl
mov
pop
cmc
or
inc
out
and
aaa
mov
xchg
push
pop
lock
lret
les
push
dec
or
and
xchg
mov
jle
mov
jle
sub
inc
xor
shll
xchg
scas
dec
call
popf
jb
pop
cmpsb
sbb
divl
push
mov
ret
inc
mov
xchg
xor
xor
clc
add
pop
add
jnp
mov
push
add
into
int3
dec
std
test
xchg
xchg
pop
stc
loope
pop
mov
mov
fs
add
push
jge
push
cmpsl
push
mov
xchg
sar
shll
cld
xchg
or
dec
movsl
sub
sti
mov
sbb
sbbb
jbe
rclb
pop
pop
sti
cltd
mov
mov
sbb
pop
fiadds
jae
push
outsb
arpl
cmp
cmp
mov
cmc
imul
sub
rcrl
sub
insb
daa
mov
mov
arpl
ret
cmc
push
mov
push
pop
pop
xchg
push
dec
sarl
jb
push
ret
idivb
repnz
cmp
mov
dec
xchg
jp
fcoms
mov
or
das
stc
loopne
xchg
roll
cmp
int3
aas
push
pop
dec
outsl
xchg
sarl
js
xchg
inc
cld
insb
inc
rcll
adcb
sub
inc
lods
cld
adc
outsl
imul
mov
xchg
je
mov
pop
xchg
bound
and
add
push
test
mov
loopne
sarl
sbb
js
mov
pushf
stos
inc
xchg
out
cmp
rcll
orl
mov
add
or
or
pop
shlb
or
adc
mov
and
and
movsb
ss
inc
mov
mov
adc
aas
cmpb
mov
imul
sbb
call
rcrb
out
or
push
sub
mov
mov
test
lods
adc
or
lret
das
or
imul
sub
sub
push
pop
iret
dec
loop
test
sub
or
aas
pop
shlb
cmp
mov
mov
mov
mov
cmp
and
arpl
xchg
gs
insl
push
jmp
ret
dec
push
ffreep
add
jecxz
pop
int3
test
cmp
sub
mov
divl
hlt
mov
push
stos
fld
popf
dec
jae
enter
jno
jmp
repz
gs
aad
push
pop
popl
fistpl
cmc
ret
enter
bswap
pop
dec
in
and
add
push
pop
push
xchg
xchg
cmp
lods
push
fs
mov
lret
mov
add
and
mov
push
repnz
shll
jl
push
idivl
loop
orb
mov
lcall
push
adc
sti
xchg
mov
or
jae
outsl
sbb
mov
out
xor
mov
inc
cmp
jp
xor
aas
mov
scas
int3
out
xchg
and
out
in
adc
mov
in
repnz
mov
das
push
mov
mov
xchg
or
ss
xchg
lds
cwtl
imul
and
fdiv
test
jp
dec
les
dec
jae
test
xor
jmp
and
mov
cmp
add
ds
inc
scas
push
adc
jbe
push
xor
clc
fadds
and
repz
xor
hlt
mov
mov
out
inc
jo
fisttps
push
push
sub
and
sbb
scas
push
stos
push
dec
xor
jnp
xlat
test
push
pop
loop
dec
add
jp
adc
fldt
mov
jecxz
cmp
inc
xor
mov
mov
adc
gs
js
loope
nop
mov
mov
jae
gs
data16
jnp
jns
pop
test
call
mov
aad
xchg
arpl
and
inc
rorl
aaa
push
dec
movsb
ja
sub
sbb
push
push
mov
sub
add
push
or
pop
xor
roll
and
mov
call
aaa
ljmp
sub
jb
iret
push
inc
adc
add
out
lea
push
call
add
addb
daa
loop
imul
in
loop
adc
stc
in
dec
push
xchg
lcall
leave
xor
pop
mov
bound
cmp
mov
sbb
movsb
les
adc
jo
mov
jae
sbb
subl
or
jg
cmp
mov
lock
ja
push
mov
pop
mov
cmp
sub
jle
hlt
fstps
shll
shl
lock
popa
add
ljmp
jno
neg
and
mov
lock
lret
shrb
dec
test
enter
stos
loop
fcomp
mov
cmpsb
leave
movsl
into
test
xor
nop
rorb
out
mov
push
hlt
ror
mov
sub
lock
sti
push
push
rorl
jne
pop
cmp
stos
stos
cmpsb
cmp
mov
mov
mov
pop
cmp
adc
and
xor
pop
cli
mov
divb
dec
inc
or
test
ja
sbb
stc
test
add
fldenv
or
or
hlt
sti
cmp
jno
fstl
push
std
jp
inc
add
imul
inc
out
xlat
cwtl
push
int3
lods
lods
cmpsb
or
cmp
mov
fbld
cmpsb
mov
arpl
pop
loopne
repnz
push
cmp
je
ja
mov
jp
loop
xor
les
mov
les
sub
in
push
lcall
sub
mov
sub
lods
jns
xchg
jae
daa
jb
orb
or
rclb
es
es
xchg
lea
ds
jns
push
inc
js
and
sub
or
aam
jecxz
shlb
push
insb
popf
into
xchg
xchg
mov
jle
loope
rcrb
pop
mov
cmc
insl
fsubs
icebp
outsb
inc
cmc
pusha
test
les
mov
jl
pop
repnz
dec
xor
fildl
rorb
fwait
xor
dec
nop
mov
inc
cs
jno
into
jb
mov
push
mov
ret
jmp
fcmovnb
sub
repnz
mov
mov
mov
adc
mov
testl
push
jg
jge
sub
sti
fcoml
pop
popf
negb
mov
or
insl
sub
or
push
lcall
std
fimull
ljmp
insl
sub
or
push
lcall
std
fimull
ljmp
in
sub
or
push
lcall
std
fimull
ljmp
insl
sub
or
push
lcall
mov
push
adc
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pushf
mov
lods
insb
push
jae
sub
fmull
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
mov
lods
insb
fcompl
or
cmp
sub
fimuls
cmp
and
pop
jl
jl
insb
lods
test
dec
movsb
fs
lds
in
ss
mov
frstor
loop
ljmp
mov
repz
aad
mov
testl
ja
mov
inc
pop
negl
hlt
adc
jns
jns
cltd
pop
and
in
or
pop
fnstcw
loope
mov
ljmp
dec
sub
dec
pop
repz
inc
mov
mov
lods
popf
or
dec
jne
mov
int
add
xchg
mov
adc
ss
int3
add
and
lock
sbb
sbb
lret
mov
dec
add
push
insb
lods
sti
jl
cmpsl
and
into
in
clts
in
jecxz
sbb
sbb
pop
stc
jl
insb
mov
mov
sbb
or
and
adc
and
xor
fwait
mov
lock
dec
fnstcw
insl
scas
dec
stos
bound
mov
mov
test
sub
push
mov
in
dec
rorl
imul
movsl
imul
or
or
stc
sbb
les
xchg
jo
or
cmp
sub
fmull
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
mov
lods
insb
fcompl
or
cmp
sub
fmull
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
mov
jg
and
les
jbe
loopne
out
movsl
xor
add
arpl
xchg
jmp
clc
pop
in
imul
sub
sahf
mov
push
xchg
call
sbb
stc
cmp
dec
loop
add
inc
cld
mov
scas
mov
lcall
aad
jno
aam
cmp
test
xor
cmp
inc
mov
cmc
push
shlb
push
out
enter
adc
cmp
out
jg
cmp
cmp
in
std
imul
pop
mov
sub
fistpll
or
fucomi
jmp
movsb
in
and
mov
ret
jecxz
cs
jno
addr16
adc
in
xchg
jp
cmpsl
aas
scas
mov
test
cmpsl
in
jb
xchg
dec
adc
mov
jae
popa
pop
xor
jp
fcmovb
or
mov
cld
dec
mov
add
sub
xlat
xor
xchg
pop
xchg
xchg
rorl
mov
push
test
inc
adc
adc
add
xor
xor
mov
repz
test
lret
std
adc
mov
jno
jne
adc
ret
adc
ja
pop
jo
test
sbbl
clc
mov
clc
jo
mov
loop
out
js
xchg
daa
inc
push
insb
arpl
xor
inc
or
aaa
cmp
out
aas
addr16
push
sahf
into
jmp
out
and
mov
xor
or
pushf
mov
mov
addr16
imul
push
outsb
jbe
sub
mov
js
fsubrp
test
mov
pop
fdivs
movsb
ljmp
fnsave
repz
dec
jg
dec
les
and
push
jno
mov
call
xchg
add
push
sbb
adc
xchg
sbbb
mov
imul
push
outsl
add
cli
cs
jecxz
test
or
in
jecxz
xchg
mov
push
cmpsl
fisttps
cmc
shll
cltd
cmp
ljmp
pop
adcl
dec
test
mov
in
mov
jmp
and
cmpsl
repz
pop
add
inc
mov
repz
pop
xor
or
aaa
adcb
sbb
mov
xor
aaa
xor
insb
roll
fbstp
and
sbb
mov
sbb
mov
sub
jecxz
dec
mov
jb
jmp
movsl
les
shll
cmp
sub
loop
inc
xchg
and
mov
mov
cmp
mov
ljmp
or
cmpsb
push
mov
inc
push
adc
movsl
mov
inc
adc
flds
cwtl
pop
gs
arpl
mov
mov
shl
ret
jecxz
jns
scas
jecxz
in
add
test
mov
lods
jne
pop
lahf
orb
call
fimull
and
sbb
mov
insb
pop
inc
stos
das
jmp
in
imul
int3
out
cltd
add
and
push
out
ficompl
inc
sub
push
stc
xchg
shrl
mov
shr
jecxz
mov
arpl
test
and
mov
pop
xchg
mov
cmp
push
pop
cld
ja
ret
out
jmp
cmpsl
sahf
mov
mov
pop
leave
and
and
jae
lods
out
sbb
inc
scas
push
ret
rorl
mov
lahf
repnz
dec
fsubrs
mov
out
call
adc
call
test
add
ret
mov
lods
adc
mov
dec
cmp
dec
add
popf
loope
fcmovb
push
imul
jle
fisubrl
sub
arpl
out
cmc
xor
pop
sahf
dec
xorl
jg
out
inc
add
mov
sbb
xor
and
in
aaa
or
sbb
bound
ret
sahf
sub
ds
inc
push
add
es
lcall
cmp
push
xor
pop
dec
ds
xchg
leave
pushl
out
jns
sbb
mov
out
in
jle
ret
faddl
rcr
and
test
xor
xor
xchg
in
int3
ljmp
es
mov
mov
jns
cmp
lret
add
push
cmp
cs
sub
cmp
shlb
mov
cmp
and
stc
pop
jae
rsm
mov
cmp
xchg
adc
cmp
mov
idivl
subl
scas
into
xchg
ds
in
or
je
in
inc
jmp
cwtl
cmp
ja
insb
and
sub
clc
adc
lea
dec
dec
dec
loop
out
ds
push
frstor
in
xor
push
lahf
call
sbb
in
sub
addr16
in
insb
push
and
push
fmul
leave
xorb
mov
loope
mov
and
lahf
neg
int3
mov
mov
ljmp
xor
inc
push
fs
sub
mov
dec
mov
rcr
lock
and
sub
or
aad
inc
lret
fadds
jb
ret
cmp
adc
adc
jge
xor
cmpsl
inc
pop
shlb
and
mov
mov
stc
add
xor
fdiv
setno
in
mov
mov
in
rol
aam
aad
in
cmp
jl
push
dec
sbb
or
int
jae
xchg
mov
xor
and
inc
ss
popa
jp
arpl
jmp
data16
int3
and
jb
popf
inc
popf
cltd
and
bound
mov
aaa
cmpsb
jns
jo
cs
jmp
pop
je
movl
shll
cmc
sbb
adc
xor
mov
inc
dec
aaa
mov
add
mov
movsb
lahf
mov
daa
imul
sub
cmp
pop
insl
sub
fwait
mov
bound
out
cmp
xchg
jmp
out
imul
mov
mov
aad
mov
popf
pop
lds
sarl
pushf
fstps
mov
dec
sbb
shrl
mov
fmuls
insl
ror
or
in
movsb
jns
cmpsl
push
leave
sbb
cmp
mov
pop
lds
push
pop
cli
xchg
mov
lret
fldcw
iret
aas
mov
and
cld
push
sarl
mov
lods
iret
repnz
popa
repnz
mov
pop
or
inc
jbe
int
push
fsubl
or
sub
sub
cltd
inc
insb
inc
mov
push
idivb
xor
inc
adc
xor
scas
ljmp
add
jmp
das
jmp
pop
stc
cmp
add
inc
mov
adc
dec
push
cmp
sub
hlt
cs
dec
test
popa
es
xchg
aad
and
sub
test
dec
xorb
jp
stc
cltd
mov
shl
imul
xor
test
js
cmp
bound
push
cmp
cmp
dec
mov
xchg
stos
aad
inc
cmc
mov
mov
jge
arpl
cmpsl
cld
pop
repz
jae
fistpll
push
mov
rcr
mov
pop
xor
fwait
pushf
mov
es
les
mov
sbb
push
sub
pop
add
test
movsl
imul
test
add
sub
dec
and
mov
fstpl
pop
jno
xchg
cmp
test
sub
jbe
call
loopne
adc
mov
sti
dec
repnz
inc
mov
call
insb
dec
fwait
jbe
pop
xchg
add
fcoml
scas
mov
dec
cmp
imul
mov
mov
bound
adc
lods
test
push
lea
adc
mov
scas
xchg
out
enter
pop
mov
stos
push
movsb
xlat
sbb
jecxz
into
sahf
mov
mov
adc
pop
xchg
leave
lock
repz
mov
sti
jg
mov
add
add
inc
push
iret
pop
xchg
je
xor
gs
mov
sub
mov
icebp
dec
sti
xchg
xchg
pop
or
push
out
mov
out
xchg
sbb
pop
xor
lods
std
lds
dec
sbb
loop
mov
mov
imul
das
jb
enter
testl
in
sub
dec
icebp
sbb
dec
je
or
cmpsl
pop
stc
jns
add
pop
xchg
jecxz
lahf
cmp
adc
subl
mov
mov
test
cwtl
inc
inc
inc
std
mov
ret
stos
int3
mov
fmuls
mov
xchg
pop
mov
mov
jb
adc
cmc
test
sub
lret
or
pop
xor
jmp
xor
imul
mov
int3
add
out
ja
pusha
imul
inc
jp
sahf
add
push
movsl
aas
scas
gs
sbb
pop
push
bound
fiaddl
pop
or
out
push
fs
sbb
movsb
push
dec
fdivrl
xor
jbe
cmp
inc
fwait
inc
cmpsl
xchg
mov
scas
mov
dec
popa
cwtl
test
sbb
xor
ret
push
mov
lods
arpl
add
jge
stc
shlb
jno
push
add
sti
ror
pop
pop
jl
aam
pop
lret
das
mov
bound
and
mov
ficoms
lea
sbb
adc
int3
fcmovnb
jb
insb
xchg
jp
mov
xchg
push
pop
dec
stos
jecxz
or
mov
lcall
mov
rcrb
jnp
push
xchg
inc
mov
mov
and
sbb
out
shl
cmpsb
inc
inc
lea
and
aas
js
add
das
xchg
jp
push
cmpsl
lahf
add
push
pop
adc
shl
xor
add
mov
scas
or
out
mov
mov
popf
cmc
xchg
mov
scas
push
ljmp
add
xlat
lahf
and
mov
aad
and
loop
in
stos
out
subb
std
adc
out
push
adc
mov
pop
push
jo
fcomi
int
push
arpl
test
inc
and
fcoms
or
pop
mov
pop
lock
inc
cmp
aad
std
and
jg
sar
sbb
sbb
dec
and
mov
mull
and
outsl
in
outsb
push
mov
std
jb
jns
repz
loope
into
cmp
xchg
ja
loop
movsb
es
inc
in
shl
mov
cmp
adc
cmp
mov
push
call
shll
sub
fdecstp
jg
add
cmp
xor
fwait
loope
xchg
or
arpl
jle
mov
icebp
bound
movsl
les
xchg
addl
out
mov
pop
test
adc
xchg
cli
cmpsl
adcl
cmp
cmp
xchg
mov
pusha
adcb
insb
jbe
repz
imul
pop
adc
sub
xchg
std
pop
fdivrl
rorl
vpunpckldq
pusha
mov
sub
fcomp
jno
jge
aam
mov
stos
and
dec
push
in
les
mov
sbb
xor
sub
inc
inc
adc
jbe
iret
sti
js
pushf
sbbb
xchg
and
ja
icebp
push
and
jns
cmp
out
mov
or
out
cmp
mov
xorps
xchg
ret
call
push
jmp
jne
mov
pop
mov
sub
xchg
mov
jp
out
push
sub
addr16
icebp
mov
filds
mov
pushf
imul
mov
call
mov
lret
aam
lock
mov
fdivp
iret
aaa
lcall
adc
pushf
inc
sbb
mov
daa
mov
cmpsb
adc
aas
sbb
movsl
add
fdivrl
scas
jo
push
movsb
ja
mov
or
lcall
pushf
push
cwtl
mov
outsl
xchg
scas
push
outsb
hlt
dec
cmpl
shlb
stc
jno
inc
into
std
xchg
dec
repz
cmp
pop
fildl
dec
fimull
mov
loopne
mov
cld
cld
mov
andb
mov
lea
rcrb
cmc
icebp
mov
insl
enter
push
add
inc
sub
mov
push
add
add
outsl
imul
add
inc
insb
or
pop
or
inc
mov
sti
or
decb
cmc
add
adc
stc
out
andl
inc
rol
xchg
mov
sbb
pop
xchg
sbb
sub
scas
sti
pop
inc
sub
ficoms
xchg
mov
pushf
mov
ljmp
mov
rcrb
fadd
lods
repz
sub
clc
pop
sbb
movsb
jmp
push
sub
add
fwait
outsl
mov
xchg
and
rcrl
adc
lret
adc
fwait
cmp
cmp
fcomps
and
js
ret
negb
dec
mov
mov
iret
repz
test
in
loop
iret
pushf
pop
cmp
pop
add
push
outsb
filds
dec
leave
sub
cmpsl
inc
push
fs
nop
inc
xchg
cmp
push
adcb
mov
xchg
mov
cmpsb
ret
sbb
dec
adc
arpl
cmp
jb
lods
dec
xor
add
sbb
sbb
aas
sub
sbbl
mov
jl
sbb
shr
arpl
jge
loope
inc
push
in
movsl
dec
mov
inc
mov
push
sbb
jle
jns
mov
negl
icebp
sub
xchg
mov
fcmovnu
xor
adc
dec
mov
insb
js
shll
dec
mov
mov
add
xor
in
cltd
pop
add
in
enter
fidivs
add
push
or
mov
cmp
push
adc
popf
cmpb
sub
gs
arpl
insb
in
add
ret
or
sub
jbe
je
leave
int
das
inc
or
out
add
push
cmp
std
nop
jb
jmp
or
scas
cs
ret
xlat
cld
push
movsb
xor
push
push
jp
in
pop
push
notb
into
testl
mov
inc
movsb
fcmovb
xor
lock
and
fsubs
mov
aad
dec
jne
cwtl
sub
inc
fsts
rorb
push
aad
xchg
push
mov
pop
pushf
int
imul
and
or
cli
aam
xchg
pop
ret
and
adc
add
or
fwait
stos
jb
cmc
dec
inc
inc
fiadds
push
mov
dec
adc
out
inc
andb
mov
jp
lret
cmp
pop
ljmp
jne
add
fwait
sub
cmp
cwtl
je
mov
pop
inc
xor
daa
mov
pop
imul
stos
test
movsb
xchg
fsubrs
mov
cmp
sbb
lods
xchg
mov
outsb
adc
xor
std
xor
lret
adc
fcompl
std
mov
sbb
leave
pop
daa
outsl
ss
int
add
add
jmp
adc
enter
dec
sbb
fsubr
mov
sub
addr16
inc
bound
cmp
ds
movsb
mov
imul
ljmp
testb
and
subl
aad
push
insl
sbb
xchg
or
dec
jne
test
nop
pop
jae
out
lahf
stos
int3
xchg
dec
cwtl
push
xchg
mov
jecxz
jecxz
shlb
out
inc
fisubrs
test
les
fidivl
or
dec
cld
push
test
or
jne
pop
dec
imul
les
jb
shrl
stos
stc
or
mov
mov
jp
fld1
adc
arpl
test
mov
adc
jge
orb
ret
jmp
insl
xor
add
out
dec
jecxz
adc
daa
cmpsl
push
mov
js
xchg
dec
rorl
iret
stos
pop
gs
cmp
repnz
scas
ror
jg
push
inc
outsl
outsl
out
sub
pop
mov
das
inc
dec
dec
scas
int
push
popa
in
jns
into
pop
push
negl
jnp
es
fcoml
fmuls
jp
ret
repnz
cmp
testb
pop
inc
mov
pop
jns
push
mov
mov
cmp
fiaddl
stc
ja
and
mov
mov
sbb
xchg
xchg
mov
jbe
das
jne
sub
mov
outsl
push
daa
push
jbe
adc
inc
jno
sbb
fs
into
iret
adc
daa
jo
push
repnz
repnz
xchg
push
push
mov
inc
lret
or
or
push
inc
pop
xlat
ljmp
xchg
lret
add
mov
in
ja
xor
cmp
shl
pop
orb
shll
jns
adc
mov
sbb
call
lahf
or
cld
pop
out
outsb
aad
sub
push
mov
fsub
rclb
cmp
mov
fs
lds
push
gs
xor
sbbb
sub
aam
lods
inc
outsl
mov
imul
je
stos
addb
pop
inc
sbb
stc
xor
push
xor
shll
in
inc
push
shll
xchg
pop
in
mov
or
jl
fimull
mov
outsb
iret
mov
adc
stos
xor
in
outsb
push
sarl
dec
cmpsl
pushf
jne
test
fs
gs
arpl
mov
add
mov
pop
jb
in
scas
inc
jno
push
sahf
iret
xlat
push
fwait
outsb
jo
xor
cmp
and
xor
dec
std
inc
shrb
sub
and
or
int3
and
setne
cmpsl
clc
sbb
outsl
in
imul
out
lea
mov
sub
mov
sub
sbb
mov
jmp
ja
add
test
rclb
insl
ficoms
jp
lcall
pop
in
stos
in
ficompl
aas
adc
mov
into
jg
sub
test
and
repnz
gs
push
jl
sahf
insb
mov
mov
fxch
pop
test
gs
cmpl
rorb
out
adc
out
aad
outsl
mov
pminub
pop
xchg
cmpsb
pop
and
sub
and
add
sbb
mov
jl
xchg
ljmp
push
popf
maskmovq
add
nop
push
aad
push
push
mov
fldcw
mov
jecxz
cmc
cmp
xor
mov
jns
xchg
pop
cmc
mov
xchg
inc
cmp
push
std
imul
xchg
insb
int3
ja
outsb
out
push
jae
addl
mov
ljmp
mov
pop
xchg
out
dec
push
jg
sahf
fsubrl
mov
arpl
lret
mov
mov
or
fdivrs
push
rcl
cltd
insb
sub
pop
clc
pop
inc
pop
loope
sbb
ror
mov
nop
or
outsb
sub
mov
push
pop
sti
mov
sarb
movsl
repnz
jne
cmp
data16
or
in
loop
push
mov
in
mov
jns
imul
outsb
in
jecxz
and
popa
aas
pop
dec
mov
inc
cwtl
bnd
adc
fs
xchg
mov
jae
jnp
cmpsb
dec
mov
lea
out
xchg
loopne
jl
out
test
mov
dec
or
pop
stos
mov
jb
adc
push
jnp
inc
cwtl
out
sar
call
mov
push
arpl
mov
inc
loop
xchg
mov
xchg
push
sti
add
popf
push
push
xor
stc
xor
mulb
into
inc
add
jo
cmp
jnp
lods
adc
sbb
cld
out
jae
add
push
hlt
lods
inc
cs
inc
xchg
inc
push
add
push
ret
lcall
mov
mov
add
dec
aam
sbb
xor
in
inc
jns
sub
sarl
push
cmp
psubb
stos
sti
jno
sub
aaa
insl
sbb
or
call
out
dec
sub
out
sbb
lea
sub
mov
outsb
adc
into
sbb
test
popa
scas
aam
mov
rep
inc
fmuls
push
cmp
push
cmc
in
and
mov
mov
stc
adc
les
or
jle
sti
xchg
shrb
xorb
cmp
std
repz
mov
iret
add
add
aas
aad
sbb
stos
xchg
ds
jns
bound
adc
inc
mov
sub
add
iret
or
dec
mov
lods
insb
fcompl
or
cmp
sub
fmull
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
mov
lods
insb
fcompl
or
cmp
sub
fmull
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
mov
lods
insb
fcompl
or
cmp
sub
fmull
cmp
sub
pop
pushf
dec
mov
lods
pushf
pop
mov
lods
insb
ficomps
or
cmp
sub
fdiv
xchg
cld
sub
sub
jae
inc
xchg
push
mov
dec
rcrb
xchg
ret
push
mov
fdivl
inc
fnsave
and
adc
lock
rcrb
sub
insl
push
jo
and
xchg
fldenv
mov
stc
jo
pusha
fcoms
inc
mov
adc
fisubrl
and
jge
jae
jns
nop
and
mov
clc
mov
imul
mov
mov
xor
jbe
loopne
imul
addr16
dec
lret
pop
out
push
popl
mov
leave
addr16
jns
popa
insl
cmc
lock
mov
mov
stc
adc
jne
stos
mov
fdivl
aaa
loopne
and
movsl
sub
nop
pushf
push
or
pop
inc
ss
movsl
xchg
arpl
jbe
mov
in
jbe
lock
xorb
popl
push
xor
mov
call
or
sbb
or
xchg
mov
andl
lahf
and
imul
sub
add
push
sarb
sub
xchg
imul
pop
andb
adc
jo
xor
ds
gs
cmc
loopne
lock
sub
ja
jge
sub
jo
add
flds
jo
adc
mov
jns
sub
mov
orb
sbb
jo
inc
leave
push
fldenv
test
adc
rorb
mov
or
stc
inc
leave
push
fldenv
test
adc
cltd
into
mov
cmpsl
aas
enter
add
pushf
pop
cmpb
mov
rcrb
ja
popf
mov
ffreep
rorb
or
add
aas
inc
jl
lahf
loopne
xor
cltd
test
test
push
mov
in
dec
pop
fwait
lods
add
in
test
sbb
jg
pop
mov
add
inc
and
cmpsb
mov
repz
scas
inc
fiaddl
aaa
mov
loope
sarb
and
bound
jb
xchg
push
pop
mov
das
push
pusha
and
dec
mov
jb
scas
scas
jge
andb
sti
iret
inc
icebp
ja
fstps
xchg
mov
fidivl
xchg
dec
nop
pop
jge
ret
mov
xchg
test
mov
pop
sbb
adc
lcall
stos
push
jecxz
mov
out
xor
dec
cmp
or
xchg
stc
push
fstpt
call
mov
push
mov
ljmp
push
pop
addl
lods
add
jl
neg
push
pop
fucomp
ljmp
hlt
lahf
scas
cmp
sahf
cwtl
or
outsb
cli
stc
add
mov
add
xlat
lcall
jp
sub
lahf
dec
pop
push
and
push
mov
insb
xchg
ret
enter
dec
mov
add
fwait
inc
mov
pop
scas
fcoms
push
cmp
jb
push
add
adc
insl
fucom
mov
out
sub
xchg
jp
leave
outsb
js
orb
in
push
sub
xchg
pop
xchg
pop
sarb
fisttps
arpl
enter
loopne
pop
jne
add
rdtsc
push
insl
stc
repnz
cltd
and
outsb
inc
jb
and
das
push
adc
je
sti
cltd
push
fistl
mov
mov
sub
je
or
dec
pop
sub
cmp
stos
mov
add
push
aam
xchg
sub
and
out
insb
addr16
jg
cmp
into
cmp
lock
adc
test
lods
sbb
cmp
rdpmc
jge
push
cmp
repnz
jecxz
dec
mov
out
into
pusha
fwait
inc
and
dec
mov
or
pop
xor
sti
subl
das
mov
cmp
xor
hlt
ret
jp
rorb
stos
cmp
pusha
xlat
lea
mov
testb
jecxz
mov
lea
scas
jae
mov
push
outsl
mov
push
dec
jge
adcb
leave
push
in
adc
hlt
mov
inc
jp
jns
add
in
scas
dec
fs
mov
push
mov
dec
pop
cld
fisubrl
clc
jb
out
mov
pop
jo
xchg
sub
cmpsb
les
out
cmp
pusha
sub
mov
call
mov
sbb
push
movsl
imulb
inc
xchg
dec
inc
jecxz
push
shll
daa
xchg
jbe
test
mov
int3
fdivrs
dec
popa
pop
call
test
sbb
add
dec
gs
ja
jl
xchg
mov
out
inc
cmc
add
mov
stos
xor
xchg
add
sub
dec
pop
in
jae
dec
iret
pusha
mov
push
mov
or
add
fstpl
stc
xchg
ret
jnp
out
test
cmp
pop
adc
add
mov
nop
fdivs
mov
xchg
in
nop
adc
and
xchg
rorl
cmp
or
fcomps
lret
pop
push
test
test
jmp
int3
std
mov
incl
cli
orb
pop
mov
inc
xor
xchg
jle
insb
inc
sub
pop
dec
pop
xchg
outsl
xchg
jmp
and
xchg
mov
xchg
inc
sahf
fwait
jge
es
lret
lcall
sahf
outsl
sub
pop
orl
pop
pop
xchg
stc
daa
sub
mov
orb
jne
xor
lods
fst
dec
inc
mov
dec
mov
lcall
mov
jecxz
xlat
int
subb
loop
out
xchg
xlat
jno
pop
pop
ljmp
out
ljmp
pop
sub
stos
loopne
push
nop
mov
and
xchg
jo
mov
xchg
in
fldenv
pop
sahf
aas
mov
or
pop
dec
out
mov
fistps
rclb
inc
mov
frstor
add
clc
scas
push
dec
mov
outsb
cmpl
xchg
sub
cli
jl
stc
xchg
pop
xchg
pop
ds
test
cmc
mov
mov
and
xlat
jmp
in
dec
mov
mov
adc
inc
mov
negb
in
add
mov
jecxz
rorl
es
or
iret
add
jb
out
adc
pop
xchg
lods
mov
adc
adc
adc
xchg
jo
rorl
in
pop
dec
dec
test
and
ljmp
sbb
cmpb
repz
aas
and
pushf
cmp
jge
sub
xchg
add
clc
imul
adc
dec
push
mov
out
lods
movsb
cmp
scas
push
hlt
movsl
cmp
xor
cltd
out
movsb
jecxz
lcall
insl
popa
aam
fldcw
dec
ds
inc
roll
jo
cli
out
int
pop
dec
add
andl
lret
add
push
int
xor
rcrb
aaa
jne
gs
push
mov
int3
enter
lcall
mov
jb
cli
cmp
not
fistl
and
cmp
leave
es
xor
mov
clc
inc
and
mov
sahf
call
call
out
inc
sti
jo
pop
pop
js
out
ss
cltd
xor
aas
stc
dec
hlt
add
rdmsr
jmp
jns
pop
xlat
sbb
cld
mov
int3
push
cmp
push
push
xchg
pop
shll
rcrb
mov
out
mov
add
into
pop
and
mov
jp
adc
fisubs
es
fisubs
repnz
mov
jb
data16
fs
dec
scas
frstor
cmpl
cltd
or
cmp
popl
push
std
dec
sbbl
adc
call
mov
dec
and
repz
fbld
repz
cmp
adc
stos
xor
in
and
inc
imul
push
xor
mov
stos
nop
push
inc
aaa
xchg
mov
xor
dec
cmpb
stc
das
out
mov
or
sahf
js
or
pop
inc
cmp
into
xlat
out
imul
daa
sti
sbbl
cs
arpl
int
sub
add
scas
popa
push
outsl
dec
dec
in
jnp
mov
out
mov
push
gs
fwait
call
jo
push
cmp
outsb
add
stc
sub
push
imul
add
dec
inc
push
ljmp
mov
movsl
push
push
pop
pushf
cmp
mov
sbb
loop
cmp
mov
lods
and
pop
cmp
inc
sahf
dec
fstps
add
movsl
xor
push
aas
int
repz
inc
mov
test
xor
sbb
shll
inc
sub
push
cmc
ror
sub
jbe
sub
pop
lods
lahf
pop
ret
and
xor
mov
cmp
jbe
xchg
ja
add
imul
movsl
push
dec
cmp
int
out
shll
pop
and
popa
icebp
xor
mov
xchg
shlb
add
movsl
and
js
jno
xchg
in
lods
pushf
std
clc
in
in
inc
push
xor
fcoms
sub
adc
popf
jp
xor
add
pop
xor
js
lret
fsubrl
push
jo
movsb
lcall
ja
test
cltd
outsb
xchg
pushf
test
sub
push
pxor
mov
dec
icebp
sarl
sbb
cli
jo
stos
jbe
outsl
out
fsts
jecxz
mov
mov
pop
mov
or
and
leave
lods
js
lahf
stc
call
lods
xchg
outsl
lcall
daa
sub
mov
sbb
jb
repnz
popl
adc
inc
xchg
ret
dec
rorl
test
cmpsb
dec
mov
adc
fistpll
repnz
jp
pop
je
add
stos
das
sti
dec
arpl
push
dec
jne
nop
aam
in
mov
or
sbb
mov
inc
and
jecxz
lods
add
sbb
dec
leave
inc
push
testb
in
cmp
mov
in
out
outsb
or
mov
dec
jl
inc
jle
les
insb
dec
mov
push
or
ret
cltd
mov
or
mov
jg
cmp
cltd
jge
lea
movsb
xchg
cmc
push
movsl
mov
mov
push
xchg
add
outsl
mov
es
add
cmp
into
pop
pusha
test
adc
in
cs
fs
add
cld
lcall
sbb
jno
or
pop
pop
jb
js
dec
in
jg
outsb
into
fstp
addr16
pop
mov
or
mov
dec
int3
xchg
or
xchg
out
mov
dec
imul
cli
mov
imul
mov
pushf
mov
xlat
mov
xor
repnz
out
scas
dec
cmc
sub
or
lea
mov
xchg
push
out
popf
aaa
push
hlt
scas
xchg
xchg
es
add
insb
xor
imul
inc
dec
lds
sbb
mov
mov
push
sarb
jle
aaa
bound
fldl
fcomp
sbb
pop
push
les
push
push
xor
test
mov
icebp
inc
dec
push
push
add
cld
and
inc
lock
adcl
stc
idivl
icebp
fidivrs
push
outsb
add
movsb
cmp
xor
shrl
rolb
cmp
add
jl
push
cmp
in
cmp
jnp
insl
sahf
pop
lock
es
xor
js
sbb
cmp
add
dec
xor
mov
mov
jno
mov
mov
movl
sti
inc
push
add
fwait
adc
cmpsb
add
push
sbb
mov
jbe
stc
iret
jbe
std
adc
fs
out
stc
fs
dec
sub
shl
xor
jge
ds
cmp
cmp
insl
adc
imul
add
push
icebp
sbb
ffreep
arpl
iret
pushf
adc
dec
mov
or
adc
cltd
dec
cmp
insl
inc
out
mov
xor
adc
aaa
cltd
xchg
cmovne
mov
lock
loope
jne
mov
mov
leave
fwait
sahf
xlat
cs
in
cs
xchg
cmpsb
stos
stos
mov
and
mov
enter
jbe
rcr
inc
test
gs
xor
cmp
sub
lea
rcll
lahf
xor
inc
pop
xor
push
cmpsb
fcmove
adc
clc
cmp
dec
adc
divl
push
pop
xchg
loop
sbb
leavew
mov
lahf
in
sahf
fsubs
xlat
int3
pop
mov
iret
and
or
add
sti
pop
mov
cmp
xchg
and
jle
pop
loopne
jbe
dec
loop
push
sub
stc
fldenv
aam
xor
fisubs
iret
mov
lcall
ja
pop
aam
loope
cmp
fisubrl
xor
addl
sbb
jnp
and
jb
cmp
in
jle
mov
scas
mov
mov
mov
out
or
lret
inc
push
mov
lret
out
and
push
pop
sbb
inc
flds
int
pop
jp
call
jecxz
stos
xchg
mov
int
adc
fs
aad
and
adc
push
das
inc
xchg
hlt
sti
mov
sbb
cmp
mov
mov
fistpl
push
shlb
sarb
filds
cmp
jbe
add
outsl
xchg
push
shrl
sub
stos
sbb
xchg
mov
or
xchg
js
jne
aas
popa
pop
jo
lret
stc
popl
dec
mov
nop
scas
scas
rolb
mov
shlb
in
in
push
pop
ret
sbb
xchg
xor
mov
add
outsb
mov
mov
aas
mov
and
mov
jp
mov
mov
dec
sbb
inc
ja
popa
jmp
pop
mov
insb
ljmp
pop
cmp
mov
loope
repz
and
mov
inc
addl
xor
and
out
ds
fmul
xchg
bound
outsb
addr16
bound
arpl
cmp
jo
push
loopne
in
mov
xor
aam
push
inc
std
sub
mov
ds
push
hlt
pop
lea
xor
push
pop
push
inc
push
sar
imul
dec
sbb
in
ja
cmpsb
inc
cmp
dec
mov
fmulp
inc
pusha
pop
cmp
mov
cmpsb
jp
jbe
dec
xchg
es
mov
lock
jle
aas
pop
jp
movsb
sub
ja
out
mov
inc
inc
js
js
outsl
aam
clc
out
jns
aad
std
pop
pop
push
or
mov
mov
icebp
out
mov
or
lret
xchg
fs
sub
mov
cld
inc
xchg
imul
pushf
insl
lcall
lret
jmp
sub
scas
or
add
imul
hlt
or
mov
xor
pop
inc
ljmp
mov
lock
push
sti
jle
ja
xor
clc
push
add
xchg
xor
lods
xor
cmp
and
adc
pop
mov
dec
sub
adc
js
pop
std
cltd
dec
stos
test
lea
cmp
in
jnp
mov
repnz
xor
clc
xor
cmp
je
cwtl
pop
xor
scas
decb
call
pop
outsb
arpl
arpl
mov
sti
push
add
lahf
xor
movsb
mov
sbb
scas
jp
xchg
jl
xchg
lcall
int
pop
out
jle
fiadds
cmp
add
es
adc
test
mov
mov
adc
loopne
mov
pusha
pop
jmp
daa
mov
adc
mov
lahf
pushf
aaa
sahf
daa
ret
add
lret
xor
jnp
push
sbbb
cmp
imul
stos
pop
mov
into
adc
mov
adc
jbe
jns
sub
and
pop
les
push
insl
and
ds
pop
jmp
push
mov
enter
je
aas
pop
push
dec
xor
add
mov
mov
sub
scas
sub
sub
mov
leave
pusha
scas
xor
decl
cli
scas
cmp
push
cli
rcl
mov
gs
loopne
jge
jg
sub
imul
sub
popa
out
jge
mov
push
pusha
add
rcrb
jp
mov
lock
inc
push
adc
cld
popa
ja
mov
jo
pop
jle
int3
shlb
test
arpl
and
mov
ja
sti
or
in
cmp
cmp
dec
cmpsl
fdiv
mov
sbb
outsl
cmpsl
pop
ret
fiaddl
xchg
stos
xchg
inc
shlb
es
insl
mov
adc
jmp
and
sbb
xchg
mov
dec
dec
outsb
movmskps
jg
jle
test
stos
sar
and
jbe
popf
bound
lret
inc
sub
cmpsb
cltd
adc
mov
ret
mov
sbb
or
and
call
sub
pop
add
push
out
push
mov
adc
or
lods
jae
call
lret
xor
or
or
fwait
cmpsl
rolb
int3
mov
inc
sbb
sbb
inc
cltd
ss
rcrl
ljmp
popf
das
jae
sub
pop
inc
bound
sar
lock
push
ret
sarl
push
or
pop
push
imulb
aaa
add
mov
adc
sbb
xor
pop
or
inc
push
dec
fists
xor
adc
adc
fnstcw
hlt
mov
dec
jp
xor
js
loopne
pop
pop
xchg
pusha
dec
sbb
sub
xchg
jb
ret
xchg
insl
fdivrl
arpl
mov
inc
shrb
xor
shrl
sbb
mov
xor
mov
bound
mov
mov
std
pop
cmp
enter
sbb
lret
std
popa
and
popf
mov
add
out
or
sbb
ficomps
adc
in
sahf
jp
leave
push
xchg
in
mov
cltd
inc
add
ljmp
dec
push
mov
es
push
es
mov
sbb
cmpsl
jb
cmp
ljmp
fildl
fdivl
stc
fmull
test
cmp
mov
or
ds
push
out
fldenv
in
add
jle
sub
out
bound
test
mov
mov
jl
jge
cltd
sbb
es
sbb
jp
arpl
adc
push
pop
inc
cmp
add
add
sub
push
push
jb
in
or
test
jecxz
inc
mov
popa
xchg
popf
subb
add
mov
inc
cmp
mov
inc
stos
push
div
ds
ret
cld
aam
jmp
and
xchg
into
repz
mov
cmpsl
ja
or
ret
add
aam
pop
lods
xor
ss
arpl
dec
add
fs
int3
push
sub
xchg
movsl
js
mov
add
daa
xor
popa
shlb
mov
jp
or
int3
and
clc
and
ss
sbb
sbb
cmp
stos
aam
hlt
or
and
add
cmpsb
out
inc
pop
and
mov
in
xchg
fistpl
mov
sbb
ret
xchg
roll
push
lret
xchg
out
sahf
icebp
sbb
adc
add
ja
jmp
or
pop
jp
or
mov
fdivrl
rolb
cltd
xor
xchg
add
jmp
imul
dec
inc
and
movsl
outsb
jbe
stos
js
rorl
xor
cs
pop
fimull
pusha
adc
jo
ret
ret
rcrb
inc
sbb
pop
xchg
repz
push
add
cmp
sbb
sub
mov
divl
rolb
es
xlat
and
pop
icebp
jmp
pushf
mov
fwait
cs
call
xor
fstpt
jl
cmp
pop
sbbl
cli
push
sbb
fimuls
jle
mov
stos
dec
in
stos
sbb
shrl
ret
jae
dec
cld
enter
dec
in
push
fwait
cmp
les
fstpl
nop
jmp
add
ja
mov
push
cmp
xchg
pop
vpminub
cmp
mov
ret
pop
mov
push
adc
mov
cmp
test
lods
xor
mov
sbb
stos
jp
and
repz
sbb
bound
pop
sub
push
loopne
fldenv
imul
sarb
std
fcom
int
pop
das
cmp
or
dec
jecxz
test
push
ret
lods
mov
repz
mov
sbb
push
inc
call
sub
sbb
xlat
stos
sub
dec
test
jge
and
dec
mov
js
movsb
inc
and
movsb
jg
mov
cmpsb
in
clc
jecxz
and
mov
movsl
push
push
mov
out
ja
movsb
mov
or
cmp
pcmpgtd
insb
fisttpll
data16
mov
push
xor
dec
scas
ss
or
ret
push
rclb
inc
popa
js
stos
mov
jo
and
xchg
leave
imul
add
rcrb
adc
mov
push
mov
or
push
xor
out
or
xchg
and
pop
pop
cmc
out
popa
jge
dec
sti
inc
idivl
cs
pusha
sbb
adc
adc
repz
jae
lret
mov
lret
dec
xorl
sub
push
jp
out
ds
ja
stos
sbb
sbb
and
pop
mov
sti
sbb
pop
stc
fcomps
mov
push
loop
dec
xchg
ja
fmull
inc
out
xor
push
out
pop
push
xchg
inc
mov
cli
or
mov
call
in
pop
fldlg2
roll
ds
sub
stos
xor
aam
mov
and
cmp
jno
fs
adc
lcall
loop
inc
sub
sub
xchg
imul
push
dec
cmc
pop
das
sbb
adc
jl
mov
insl
addl
js
cmp
cmc
rorb
dec
push
bound
in
aad
sub
hlt
and
test
aam
bound
stos
jge
xchg
sub
rcll
nop
daa
sahf
sbb
lahf
nop
push
mov
inc
je
pop
jmp
jmp
mov
xchg
fbstp
bound
jecxz
sub
jns
fs
test
cli
lock
pusha
nop
aam
daa
ja
lock
aas
sbb
cmc
shrb
insb
push
sbb
xchg
stos
pop
into
movsl
lods
mov
test
push
jp
mov
fdivr
out
stos
ret
mov
cmp
iret
dec
pop
lods
xor
mov
rcrl
jae
push
pusha
push
outsl
xchg
out
jns
dec
rcrb
sub
sbb
jo
inc
leave
push
fldenv
test
adc
rorb
mov
or
stc
inc
leave
push
fldenv
test
adc
rorb
mov
or
stc
inc
leave
push
frstor
test
and
testb
mov
or
fstps
leave
push
scas
push
and
out
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
loope
sbb
cltd
hlt
cmp
pusha
jl
add
or
push
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
push
scas
add
add
add
add
add
add
add
add
mov
xchg
add
add
add
add
add
add
add
roll
xchg
add
add
add
add
add
jp
push
add
add
addl
add
sbb
add
add
and
pop
add
add
add
mov
add
jno
adc
add
add
add
add
add
add
add
add
add
add
add
scas
add
out
add
add
add
stos
add
add
mov
sbb
add
or
addl
add
add
push
add
add
add
add
add
pop
add
add
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
or
lret
add
outsl
add
dec
add
add
stos
add
add
add
add
add
mov
dec
add
dec
add
add
add
inc
add
pop
add
ret
add
mov
inc
add
add
or
add
add
add
pop
add
add
add
add
add
add
add
add
mov
mov
cld
add
add
add
mov
add
add
jno
pop
add
lcall
add
add
aaa
add
xor
jbe
scas
add
add
add
mov
add
and
scas
add
add
add
add
outsb
add
add
add
add
add
add
lods
add
add
add
mov
fwait
add
add
add
xlat
add
jae
mov
jae
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
in
mov
int3
add
add
add
and
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
int3
add
lret
add
in
add
jno
sbb
stos
add
add
add
jno
jno
sbb
stos
add
adc
inc
add
xor
sbb
cwtl
add
add
add
add
add
add
add
add
add
mov
cwtl
add
add
add
sub
add
add
add
push
add
or
add
fwait
add
mov
add
in
inc
add
add
add
add
add
add
in
in
add
add
add
add
add
add
sub
jae
or
sti
add
add
add
xchg
jne
ds
add
add
xor
imul
add
add
imul
clc
jns
fnstcw
and
pop
push
dec
pop
cmpsl
adc
les
data16
dec
rcrl
repz
sarl
adc
adc
jg
rcr
xchg
pop
cmp
cld
sub
lods
cmp
pop
sub
insb
ret
insb
mov
cmp
push
mov
sbb
push
mov
pusha
rorb
dec
mov
mov
shrb
lahf
jmp
inc
xchg
mov
pop
iret
sbb
jmp
mov
bound
sbb
sbbl
jge
dec
inc
mov
pop
cmpsl
bnd
mov
gs
seto
lret
dec
inc
dec
mov
cmp
mov
pusha
push
ficompl
jae
and
pop
dec
adc
jne
push
sarb
shrl
iret
bswap
push
add
xor
adc
dec
cmc
mov
sbb
out
aas
or
and
jp
movsb
push
xchg
jno
test
cltd
test
jne
mov
and
jp
leave
xlat
dec
insl
push
and
dec
notl
xchg
ret
stos
sbb
insl
outsl
and
test
mov
shrb
sbb
jb
test
pop
add
dec
je
cmp
mov
negl
aas
lea
pop
jo
cld
xchg
xlat
loop
popf
icebp
popf
aas
movsl
cmpsl
cmp
mov
jg
jno
xor
cmp
aas
xchg
rorl
test
fld
mov
or
movb
or
shll
sub
aaa
insb
add
and
loop
fistps
inc
dec
in
into
jl
stos
lock
jo
icebp
icebp
addr16
mov
sub
add
cli
push
repz
sbb
popa
mov
add
fidivs
ja
and
inc
loopne
in
dec
cmp
xor
xchg
jecxz
mov
adc
add
cmp
in
or
leave
ljmp
inc
cmp
mov
cmp
sbb
dec
lods
outsl
push
jl
imul
fwait
sub
faddl
sub
in
cmp
jmp
inc
push
iret
cmp
shlb
cwtl
cld
hlt
hlt
roll
push
xor
cmp
and
mov
pop
xchg
dec
inc
hlt
push
dec
xchg
sahf
dec
xchg
xor
or
mov
mov
mov
inc
push
mov
ret
xor
xorl
push
fsubs
stos
test
std
lret
scas
push
cmp
fldcw
lret
clc
inc
or
add
shrb
inc
jl
mov
mov
nop
leave
fidivs
cltd
adc
jp
push
leave
hlt
push
lcall
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
