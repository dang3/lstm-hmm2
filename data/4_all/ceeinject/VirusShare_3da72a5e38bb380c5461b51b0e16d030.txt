call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
lock
pop
cs
ds
push
outsb
sub
jg
sahf
xchg
lods
mov
sahf
fucomip
lcall
nopl
push
das
ds
dec
dec
pop
pop
outsb
outsl
jle
test
jl
into
lods
fisttps
out
out
call
push
pop
pop
ss
es
push
inc
inc
jbe
imul
fcmove
mov
popf
mov
push
jbe
pop
push
mov
mov
xchg
stos
push
jmp
out
icebp
movsb
push
push
xchg
pop
cmpsl
cs
mov
mov
testl
mov
jb
mov
xor
cwtl
addr16
pop
add
pop
pop
jl
xchg
mov
popa
pop
adc
xor
filds
ficomps
pop
into
das
mov
imul
xchg
jle
mov
dec
loop
dec
pushf
lea
scas
gs
xchg
out
aaa
loope
ja
dec
fistps
outsl
sahf
mov
xchg
popa
lahf
mov
cmpsl
fists
out
push
add
add
jmp
mov
repz
mov
jno
popa
mov
mov
stos
push
adc
out
into
nopl
cs
sub
outsb
jbe
xchg
xchg
xchg
xlat
enter
fwait
jge
jnp
dec
cs
sub
xor
insb
add
adc
out
out
cli
rcl
mov
out
fwait
xchg
push
ja
pop
dec
pop
cmp
cmp
insl
add
cmp
mov
sahf
jmp
lret
cld
stos
mov
lcall
ds
and
outsb
outsl
jle
mov
mov
fucomip
out
decl
nopl
cs
ds
dec
dec
pop
pop
outsb
outsl
jle
mov
mov
fucomip
out
decl
paddusw
popa
jb
cmp
shll
xchg
mov
and
outsb
mul
ret
fwait
add
std
push
fiadds
bound
mov
decl
add
mov
add
ret
xchg
ret
arpl
sti
mov
lods
imul
aas
cli
or
enter
mov
add
repz
mov
gs
insl
mov
aaa
fwait
out
add
and
in
dec
sub
pop
cmp
inc
add
in
or
lcall
xor
popf
xor
out
outsb
lds
imul
std
add
jle
call
fcomip
cld
pop
pusha
out
cmpsb
aas
into
push
repnz
enter
push
sarl
iret
push
jp,pt
test
in
mov
dec
add
or
or
arpl
dec
fadds
add
mov
fsubrl
jnp
push
add
sub
and
and
add
mov
insl
mov
arpl
xchg
das
add
sbb
sbb
cwtl
cli
fimull
mov
jne,pn
je
mov
and
aad
scas
fsubr
fcoml
popf
xchg
xor
mov
push
clc
xor
loop
ret
add
cmp
jae
push
fstpt
jecxz
leave
pop
jge
push
rclb
iret
fimull
mov
shlb
jb
jno
mov
shlb
mov
mov
out
clc
sbb
sahf
inc
mov
mov
jle
bound
mov
mov
pop
stc
aad
sahf
loopne
scas
stos
je
in
adc
rolb
cmpsb
mov
pop
cmp
mov
sti
jbe
dec
mov
pusha
pop
scas
gs
cmc
adc
shl
adc
xor
aad
push
pop
sub
out
cmp
sbb
pop
pop
sbb
pop
shll
jl
into
dec
frstpm(287
mov
sbb
dec
inc
lret
xor
and
jae
inc
pop
movsb
sub
add
ja
or
fsincos
mov
adc
lret
sbb
add
push
adc
jle
insl
test
fbstp
out
add
xchg
cmp
cmp
inc
xchg
loope
inc
xchg
je
stos
iret
add
jg
jo
imul
mov
loopne
in
lcall
test
test
lea
repz
lret
push
sbb
dec
fadd
lahf
js
ret
sti
pusha
ljmp
sbb
push
xchg
popa
and
lcall
jnp
mov
out
pop
cmc
sub
rcll
push
pushf
or
jae
xor
in
xchg
adc
push
and
mov
mov
test
inc
inc
or
insb
mov
cmovle
in
gs
mov
push
mul
popf
cmc
xor
mov
out
adc
dec
scas
mov
mov
test
sarb
cmp
add
int3
add
div
lcall
mov
cmp
mov
dec
scas
mov
testl
mov
aad
xor
rcrl
pop
push
pushf
and
jns
mov
icebp
xchg
adc
sub
out
sub
or
daa
fcoml
packuswb
les
jmp
xchg
add
pop
js
lds
call
push
jnp
pop
out
add
in
sbb
es
and
push
out
in
sbb
jae
pop
add
xchg
xchg
xchg
imul
push
icebp
lahf
mov
jl
mov
pop
lds
add
sub
incb
add
cli
int3
inc
fidivl
xchg
mov
shlb
test
int3
cmpsb
xchg
push
movsl
xchg
std
lods
xchg
dec
sbb
lock
dec
jle
nop
lea
jb
dec
fidivrs
fdivl
xchg
icebp
sarb
sbb
jp
ja
les
iret
push
sbb
jo
add
mov
jecxz
pop
lret
leave
xchg
int
push
adc
repnz
inc
test
and
dec
or
xor
fsub
jecxz
cmc
or
or
mov
aas
xchg
cltd
repnz
pop
pop
jp
dec
adc
aam
pop
jb
or
pop
xor
and
fwait
mov
mov
jo
cmp
xor
fs
leave
add
jnp
int
test
and
pop
iret
mov
jb
loope
and
lea
xchg
cmp
jg
clc
int
fdivs
daa
xchg
xor
pop
mov
into
jbe
mov
stos
mov
cmpsb
and
sub
adc
cmp
repz
pop
adc
cmpsl
dec
lds
inc
xchg
flds
in
testl
out
cwtl
adc
sub
sbb
scas
inc
inc
cmp
lea
mov
pop
fwait
cmp
inc
hlt
jg
fstpt
cmp
xchg
out
mov
dec
mov
mov
arpl
mulb
inc
addl
and
int
add
mov
movsl
lret
mov
mov
adc
stos
jp
and
lods
xchg
testb
insb
faddl
pop
dec
push
adc
mov
or
mov
fsubrs
sub
stos
mov
cmc
ja
cmpsb
and
adc
or
mov
testb
cwtl
pop
out
stos
mov
jg
mov
push
pop
cmp
add
loope
cltd
xchg
adc
lea
jns
lods
orb
cmp
out
dec
fwait
out
xchg
pop
cmp
mov
pop
jge
pop
addr16
lahf
pop
insl
test
das
orb
ss
adcb
pop
repnz
lret
mov
sub
cmp
adc
imul
cli
xor
dec
add
daa
insl
mov
xchg
inc
and
shlb
sbb
pop
xchg
ja
mov
pop
int
mov
sbb
addr16
sti
imul
sub
in
mov
push
aas
xlat
inc
shrd
loope
rclb
pop
fisttps
ja
div
popa
sbb
jl
sub
cs
es
xchg
pop
cmpsb
pop
push
xor
xchg
xor
mov
mov
icebp
in
sub
mov
lret
or
jnp
sbb
push
xor
dec
pop
lock
and
mov
pop
pop
data16
push
push
mov
cmp
xor
stc
cmp
aad
push
loope
cltd
hlt
sbb
push
push
mov
es
mov
std
lods
inc
mov
mov
dec
mov
movsl
int
xor
xchg
cltd
add
add
push
mov
test
fs
daa
mov
dec
mov
fldlg2
xchg
or
test
cmpsb
cmp
imul
loop
sub
pop
in
fisubrl
roll
in
xor
daa
inc
outsb
lret
push
hlt
sbb
add
sbb
jl
fistl
mov
sbb
rolb
bound
shrl
dec
sub
add
push
enter
mov
mov
cmp
and
sub
sti
mov
lahf
mov
stos
jne
mov
fidivl
xchg
das
cmp
into
mov
loop
gs
cmpsl
stos
cmc
sub
iret
jle
lahf
daa
outsb
push
dec
sbb
mov
inc
adc
xchg
ss
dec
mov
and
inc
ja
cltd
or
or
loopne
jmp
push
mov
rcr
pop
out
xor
push
enter
mov
sub
lea
lods
lret
and
in
loop
aas
xchg
sub
xchg
icebp
out
cmpsb
inc
inc
push
jmp
aaa
add
shr
popa
leave
pusha
dec
out
push
int3
or
inc
dec
push
lods
pushf
push
push
inc
xor
push
insb
fs
sbb
data16
das
mov
and
or
in
jmp
fwait
int3
pop
data16
mov
cmp
aaa
pop
or
xor
push
inc
mov
in
push
mov
jne
jns
in
out
scas
repz
or
fnstenv
add
jmp
cmp
sub
inc
test
jle
sbb
or
stos
out
push
cmp
repnz
push
adc
ljmp
mov
jl
cmpsb
xor
cwtl
mov
blcs
jp
jno
ja
mov
inc
inc
or
nop
add
push
lods
test
lock
xchg
enter
lcall
int
jmp
sbb
mov
dec
aam
rcrb
test
ret
sarl
fidivrs
add
and
nop
sbb
sub
sbb
lcall
and
sbb
popf
sbb
sub
push
scas
out
insl
push
mov
mov
push
test
popa
jp
call
clc
cwtl
stc
xchg
mov
hlt
inc
pop
lret
iret
movsl
les
adc
sub
lcall
xchg
mov
xchg
cmp
sbb
es
inc
dec
inc
pop
out
jg
adc
jno
jne
jl
dec
mov
jae
insl
pop
pop
mov
subb
negl
jns
inc
outsl
add
loopne
push
cld
jmp
push
out
push
stos
dec
push
mov
hlt
adc
add
shll
push
cmp
jne
xchg
mov
jmp
aas
int3
mov
and
rclb
jae
adc
cmpsl
or
jge
sub
cmpsl
jbe
inc
popa
out
shll
push
pop
int
les
lock
repz
addr16
sti
push
add
daa
adc
das
jne
adc
sub
inc
lods
test
bound
fstp
sub
fnstcw
push
push
xchg
push
add
fbld
ds
mov
test
leave
andb
cld
push
or
nop
mov
test
mov
out
push
dec
inc
in
inc
test
pusha
cmp
addr16
std
fdivs
cmpsl
daa
lods
ffree
xchg
and
js
ja
adc
push
add
in
mov
sub
sub
mov
pop
ja
cmp
jne
mov
jl
loop
roll
pop
incl
mov
aaa
rcrb
jmp
ljmp
fadd
adc
xorb
lret
int3
icebp
add
xchg
jmp
dec
sti
xchg
lods
hlt
loopne
addb
loope
and
js
mov
add
mov
repnz
jmp
hlt
hlt
fdivrl
pop
hlt
xchg
push
shr
mov
fdivs
int
xor
or
test
in
xchg
pop
aaa
mov
dec
movsb
fadd
or
or
mov
xlat
sbb
jb
lret
fldenv
sub
pop
or
xchg
adc
loope
xlat
mov
xchg
mov
sbb
jmp
inc
daa
jnp
in
sbb
jle
and
test
lcall
or
dec
sahf
inc
inc
es
imul
popf
test
leave
jge
mov
adcl
movl
mov
jl
mov
in
sbb
fcmovu
fstpl
outsb
mov
mov
adc
xchg
push
lods
mov
push
mov
fimull
dec
push
rclb
inc
xor
xchg
adc
mov
cmp
dec
cmp
ds
xchg
fistps
and
ficoml
out
lock
sbb
bnd
out
jle
dec
ja
mov
test
mov
inc
push
call
mov
icebp
push
hlt
outsl
xchg
incl
pop
mov
push
mov
shlb
repz
test
imul
mov
pushf
push
xchg
mov
xchg
ficomps
jp
sub
imul
es
jae
inc
pop
pop
jg
mov
mov
mov
mov
dec
ret
sbb
test
lods
mov
repz
sbb
loope
and
pushf
push
inc
mov
into
sub
push
aas
mov
mov
mov
jae
into
cmpsb
fidivs
in
in
mov
test
cmp
shll
mov
add
or
cmp
sbb
add
mov
popa
gs
inc
testb
daa
std
gs
pop
popf
jge
sbb
sar
or
pushf
movsb
push
pop
jb
and
nop
cmp
sti
xchg
cmp
sub
cmp
mov
inc
iret
lock
adc
inc
mov
pop
out
push
and
cli
incb
stos
addr16
cmp
inc
inc
jo
push
ja
xor
mov
test
test
out
or
sub
jle
sbb
mov
stos
mov
mov
test
mov
mov
outsl
push
cmpsl
js
rclb
int3
ret
pop
jl
jmp
popf
in
mov
test
inc
add
jg
push
mov
inc
sub
ret
call
push
sbb
stos
std
fs
mov
out
ds
adc
negl
pop
pop
or
xchg
cmpsl
xchg
mov
mov
dec
stc
pushf
push
or
insb
subb
test
mov
xor
mov
ficompl
lods
push
pop
roll
cmovne
sub
in
outsb
loopne
nop
aam
mov
movsl
mov
xchg
pop
negl
sbb
mov
mov
jnp
sar
xor
mov
pop
pop
xchg
jne
mov
les
cli
data16
es
push
jae
xchg
sbb
aam
sbb
outsb
inc
insb
clc
ja
sahf
adc
push
xchg
sub
out
and
call
out
mov
into
push
sbb
xlat
aad
mov
xchg
mov
and
cmp
in
js
jo
movsl
cmpsl
mov
dec
inc
xor
mov
fcmovnbe
xor
js
insl
leave
andb
pop
clc
into
dec
cmp
xor
ljmp
adc
std
mov
das
jnp
inc
xor
sub
in
xchg
ret
jle
lds
sub
add
inc
and
cmp
ret
lahf
call
cltd
mov
sub
dec
ljmp
inc
iret
mov
int
push
int
dec
push
sbb
mov
cmpsb
push
add
inc
inc
adc
inc
jl
sub
push
icebp
les
test
lret
pop
ljmp
sub
or
sbb
or
mov
leave
xchg
test
inc
cmp
and
xchg
cmp
pushf
xor
mov
daa
rorb
xorl
jmp
mov
cmp
xchg
xchg
add
dec
add
idivl
mov
insb
iret
xchg
push
js
and
call
and
xchg
push
popl
cmpsb
outsb
rorb
dec
stc
enter
xchg
adc
jle
xorl
lods
inc
or
je
fldenv
in
xchg
fcoml
ror
mov
cli
insb
xchg
adc
and
jnp
cmpl
std
jne
xor
mov
fbld
xor
mov
lods
and
dec
mov
lock
jbe
add
sbb
aaa
jns
sub
xor
jl
fidivl
mov
cmpsb
fisttpl
mov
pop
loope
jge
enter
cmp
cwtl
push
xor
adc
andb
lret
int3
sub
cli
xchg
cmc
and
lret
in
pop
clc
mov
es
mul
mov
pop
adc
mov
cli
int
mov
enter
push
rcr
jbe
jg
ljmp
xor
mov
ret
in
lahf
push
outsb
mov
adc
jb
scas
xchg
ret
jl
adc
ror
add
push
roll
leave
push
add
sub
fs
call
pop
add
hlt
or
push
xor
inc
push
daa
mov
xlat
lea
cmp
sub
adc
pusha
mov
repnz
sbb
xchg
into
pop
insl
cmp
xchg
or
mov
push
dec
sarb
lods
add
lock
jae
adc
mov
push
rolb
jnp
xchg
lret
daa
mov
dec
fwait
js
and
idivb
aam
inc
adc
mov
push
sub
scas
imul
inc
fs
cmp
gs
dec
inc
in
adc
adc
mov
cmc
in
dec
ret
mov
ret
lea
out
fucompp
fwait
dec
inc
in
jp
insl
xor
xchg
outsb
and
fldl
rcll
add
ret
jl
call
rcl
aam
or
jbe
or
pop
jmp
paddusw
daa
sub
push
mov
popa
fcomps
scas
cli
pop
and
sarb
out
sbb
adc
xorb
sub
div
xchg
lcall
stos
dec
insb
pop
add
cmpsb
inc
es
imul
cli
loope
push
sbb
xchg
add
xchg
or
cmp
xchg
fsubr
stos
push
or
aas
std
adc
mov
iret
lock
push
xchg
std
mov
aas
jae
clc
xor
inc
clc
cmc
imul
sbb
sub
xchg
ljmp
dec
stos
push
in
xchg
nop
mov
sbb
ror
popf
add
ljmp
add
and
sub
sbb
jp
cmc
fs
mov
lods
pop
fs
cmp
sub
movsb
push
xchg
mov
inc
add
ja
arpl
fidivl
mov
mov
mov
rcrl
out
cmc
ljmp
xchg
push
pop
or
mov
dec
inc
dec
fs
lods
test
je
jl
test
shlb
jno
adc
movsl
or
mov
cmp
push
popf
sub
mov
sbb
pop
insl
mov
fisubrl
les
daa
cmp
adc
push
adc
sbb
mov
or
pop
dec
add
loopne
loop
mov
mov
les
ljmp
xchg
int3
mov
mov
xchg
ljmp
outsl
mov
out
js
dec
pop
movsb
xor
xor
mov
es
pop
pop
std
popa
shlb
repz
ljmp
fsubl
pop
and
pop
jno
je
pop
jp
fldt
es
xchg
mov
rorl
jne
loop
lods
fs
repz
call
dec
xchg
dec
mov
cwtl
sub
inc
sub
fildl
or
cltd
jnp,pt
js
xchg
mov
icebp
cltd
sub
jmp
jge
and
jb
hlt
mov
pop
pop
inc
repnz
xchg
leave
hlt
fwait
or
flds
inc
rclb
fs
dec
cltd
popf
cmp
vmovdqu
inc
jecxz
jmp
in
mov
pop
push
jnp
adc
jge
sbb
fsubl
mov
jnp
aad
in
push
jge
jno
sti
pop
adc
cmpb
mov
nop
or
xchg
divl
das
adc
mov
dec
idivb
jb
scas
or
sub
popa
int
mov
add
outsb
std
shrb
insl
mov
adc
add
push
aaa
das
push
dec
testb
lret
imul
lcall
sub
xchg
fldt
push
repz
mov
and
lret
lcall
cmp
sti
pop
es
dec
inc
into
sbbl
notb
std
lret
adc
rorb
pop
pushf
push
arpl
add
push
arpl
filds
mov
pop
mov
mov
add
dec
in
adc
xchg
fsubl
fidivl
jbe
push
in
adc
rcrl
xchg
adc
cmp
xchg
cmp
xchg
fidivrl
dec
cmp
in
mov
ljmp
sti
decb
popf
cmp
fsubrl
pop
sbb
fdivs
loop
lahf
xlat
adc
ja
cmp
insl
sub
mov
or
call
pop
aas
sub
xchg
aaa
mov
in
push
out
ret
lods
jns
hlt
dec
mov
stc
adc
decb
xlat
and
mov
imul
or
js
push
out
inc
out
jg
or
mov
dec
pop
add
mov
dec
xor
ljmp
shrl
cmpsb
xchg
mov
ret
stos
fcomp
fsub
in
push
mov
or
fwait
subl
jecxz
pop
lahf
add
mov
pop
call
lret
out
rcr
xor
cmp
frstor
jnp,pn
test
add
xchg
ret
incb
sarl
daa
mov
add
popa
adc
sub
sbb
out
loop
and
sbb
or
call
inc
adc
pop
mov
cld
insb
subl
dec
or
push
js
inc
mov
aad
ja
xor
dec
fwait
outsl
add
sbb
mov
lahf
stos
cmpsl
xchg
insl
xchg
movsl
pushf
pusha
int3
and
cs
add
push
lods
pop
test
les
jb
rol
push
cwtl
les
int3
mov
push
cwtl
inc
sub
sub
push
mov
cs
inc
cli
sbb
and
inc
jl
fldt
xchg
scas
aad
jge
sub
das
sarb
dec
dec
pop
pop
outsb
outsl
jle
mov
mov
fucomip
out
decl
nopl
cs
ds
dec
dec
pop
pop
outsb
outsl
jle
mov
mov
fucomip
out
decl
nopl
cs
ds
dec
dec
pop
pop
outsb
outsl
jle
mov
mov
fucomip
out
iret
cmp
sub
sbb
ds
dec
dec
pop
pop
out
outsl
jg
popa
xor
mov
adc
add
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
into
pop
dec
dec
jle
outsb
outsb
movsb
pop
cs
push
dec
fisubs
out
out
lahf
lahf
scas
scas
scas
scas
pop
pop
dec
dec
jg
outsb
outsb
push
push
push
push
ds
into
into
lahf
out
out
sahf
sti
mov
pop
pop
dec
dec
jle
outsb
outsb
push
push
push
push
ds
into
in
lahf
fwait
mov
sahf
fcmovnb
fldcw
adc
xor
loope,pn
cmp
int
icebp
movsl
mov
sti
jmp
pop
ret
pop
or
jecxz
push
add
stos
into
xor
cmpsl
add
arpl
push
fisttpl
mov
pop
sbb
shlb
sahf
iret
test
adc
and
mov
xor
bound
imul
fidivs
cs
into
and
xor
cmp
imul
outsb
scas
lret
movsb
scas
mov
cmpl
outsl
cs
mov
out
int
out
cmp
push
dec
cmpsb
pop
dec
pop
hlt
shr
push
movb
ficomps
lret
arpl
ljmp
push
add
dec
jle
outsb
outsb
push
push
push
push
ds
into
into
out
out
sahf
sahf
mov
sub
aaa
adc
and
pop
pop
imul
dec
pop
mov
jl
xchg
lods
mov
ror
fcmove
add
or
or
imul
xchg
std
sbb
sbb
pop
sub
push
ds
into
into
out
out
sahf
sahf
mov
pop
pop
dec
dec
jle
outsb
outsb
push
push
push
push
ds
into
into
out
out
sahf
sahf
mov
pop
pop
dec
repz
insl
jmp
lea
lret
xchg
sarb
mov
lahf
std
fxam
mov
inc
nop
rorl
imul
aaa
push
aaa
and
sahf
cmpsl
imul
lret
sbb
and
cmpsl
cmc
jns
mov
ret
rcrb
mov
jns
or
pushf
fstpt
enter
dec
stos
je
xchg
add
push
add
mov
jp
pop
lods
mov
push
jns
outsl
out
cmp
adc
sbb
bound
sub
sub
and
mov
push
cli
xchg
or
inc
les
push
dec
push
pop
push
sarb
and
mov
sbb
sbb
mull
in
mov
in
and
inc
jae
mov
push
or
leave
cltd
mov
jae
adc
xchg
jnp
push
jg
inc
pushf
adc
mov
adc
hlt
scas
mov
lds
sub
nop
push
mov
xchg
adc
xchg
push
cmp
add
cltd
ja
mov
mov
loopne
int3
lcall
xchg
aas
add
ficoml
dec
js
or
je
mov
push
and
push
test
sbb
adc
add
sub
xchg
mov
lahf
leave
push
gs
loop
jns
shrl
push
ret
pop
inc
sub
xor
and
push
mov
pop
xor
std
lret
mov
sbb
and
imul
out
movsb
add
rorl
ret
add
imul
dec
imul
repz
pop
and
imul
loope
inc
push
mov
pop
ss
imul
dec
aaa
pop
imul
test
jmp
divb
pop
jb
divb
jecxz
fistps
fidivrl
data16
jnp
js
cli
dec
pop
lret
and
push
es
orl
mov
aad
dec
add
in
mov
std
sub
and
out
gs
stc
leave
push
add
inc
mov
fnstcw
lahf
inc
aas
data16
insb
mov
lock
leave
add
cmpsl
mov
mov
lret
sti
adc
divl
inc
and
mov
sub
sub
sub
cmp
cmp
adc
std
int3
sbb
lods
xor
movsl
push
lahf
or
out
mov
int
add
cmc
lock
into
mov
icebp
add
jge
cs
cmp
dec
mov
push
adc
stos
push
jnp
ret
mov
pop
adc
push
mov
sbb
rcll
lods
push
xor
mov
movsb
push
lahf
inc
sarl
addr16
pop
mov
inc
xchg
add
in
pop
aas
cwtl
jne
in
and
sub
push
popa
enter
jg
add
out
xchg
pop
test
push
test
xor
add
call
pop
jnp
in
sti
jb
sbb
dec
and
xor
aas
mov
cmc
push
pop
ficoml
cmp
sbb
enter
xor
add
inc
cs
sbb
cmp
movb
cmp
jmp
fsts
jp
pop
xor
mov
fsubl
adc
sahf
add
ja
sti
pop
fstps
xchg
mov
loop
push
fisubrs
cs
and
popf
or
aaa
xchg
clc
jnp
mov
popf
popf
sub
bound
in
mov
imul
xchg
push
push
ret
xchg
and
push
cmp
shrl
popf
pop
out
jnp
test
cmp
jae
mov
aaa
or
push
lea
stos
popf
inc
jecxz
mov
dec
andb
sti
faddl
dec
cmp
xor
push
push
in
cmp
mov
push
ds
fdivs
push
jp
inc
shll
rorl
push
dec
movsl
push
dec
outsl
adc
das
stc
sub
outsb
and
jmp
add
test
lods
fs
dec
xchg
mov
leave
and
out
sub
jmp
mov
out
dec
movsl
lea
jg
xchg
mov
jo
cmc
dec
je
movsl
movsl
stc
test
push
mov
icebp
lret
inc
add
mov
xchg
mov
sahf
fidivrl
or
sbb
scas
xchg
push
cmp
push
aad
loop
in
xchg
inc
pop
push
jne
inc
loop
xor
arpl
pop
nop
sti
sbb
shlb
xchg
mov
shl
xchg
pushf
jl
mov
fsts
sbb
cwtl
mov
adc
cmp
adc
shlb
jge
sbb
xchg
push
into
aam
jns
push
cmpsb
inc
sbb
cmp
cld
sub
test
ficoml
jmp
mov
mov
lcall
cwtl
cld
out
std
and
mov
or
xor
pop
idivb
mov
xchg
sbbl
push
lahf
pop
mov
mov
sub
jle
in
pusha
or
jo
dec
jo
shll
mov
lods
jbe
jl
enter
mov
in
scas
test
jnp
push
fstl
sub
push
or
out
aas
inc
scas
mov
mov
inc
fnstsw
mov
sub
xor
pop
ds
push
sti
imul
and
cmp
cmp
adc
cli
cs
test
inc
cvttps2pi
inc
jbe
aaa
dec
mov
into
or
mov
mov
loope
add
lods
dec
popa
imul
push
or
cmp
sub
dec
loopne
test
adc
inc
push
sbb
inc
xchg
pusha
and
scas
and
fstpt
pusha
lret
inc
pushf
jnp
pop
es
fistl
mov
les
bnd
pop
fdivrl
jle
adc
es
test
lods
fdivs
std
pop
add
insb
mov
daa
js
mov
lods
fucom
adc
jge
rolb
das
mov
jecxz
mov
xchg
xor
out
jo
movsl
inc
out
cmpsl
push
mov
mov
out
inc
inc
sub
enter
lret
sbb
sbb
sub
gs
mov
loop
test
test
fsub
popf
test
lret
icebp
popf
fldenv
cli
pusha
stc
jl
mov
xlat
jb
mov
movsl
and
and
push
and
mov
fpatan
movsb
test
cmp
addb
push
ss
pop
inc
es
sub
cmp
xor
gs
push
int3
insb
push
cs
sbb
mov
add
popl
sub
icebp
mov
adc
js
mov
jl
pop
icebp
dec
leave
jae
xchg
jl
mov
dec
loope
sti
mov
mov
add
scas
mov
repnz
mov
xchg
or
jne
cmp
aaa
mov
fcompl
add
aam
addb
add
and
sub
adc
les
push
cmp
lea
xor
and
setbe
sub
adc
mov
sub
push
loopne
jge
int3
ret
int3
dec
cmpsl
ret
inc
mov
jle
int
mov
je
shll
dec
xor
inc
and
push
dec
adc
add
roll
je
idivl
mov
rol
jne
out
int
sbb
popa
mov
adc
arpl
outsb
jnp
and
sub
lods
cltd
cmpl
xchg
popf
mov
jg
inc
sahf
leave
popl
dec
cmp
aas
fwait
enter
sbb
jge
enter
jge
sbb
bound
dec
pop
xor
and
es
dec
mov
out
xchg
popa
ds
loopne
ss
sub
xor
xchg
fcomps
inc
popa
loope
loope
test
pop
mov
ds
sbb
push
mov
fnstenv
inc
lods
hlt
mov
roll
nop
and
dec
sub
frstor
faddl
imul
shl
push
mov
nop
mov
decb
js
jecxz
sbb
adc
stc
push
push
mov
por
ja
xchg
jnp
xorl
ljmp
out
dec
iret
daa
jecxz
xlat
add
pop
lahf
mov
jmp
lret
fimull
cmpsl
sarl
out
sub
cmp
mov
pop
mov
shlb
push
into
inc
sub
sub
xor
sbb
lea
inc
inc
jb
inc
lds
cwtl
cli
dec
adc
push
fmuls
add
out
outsb
fwait
stos
int
lods
mov
jbe
sub
lea
cmpsl
add
sbb
xchg
ficoms
pusha
in
lcall
adc
cmc
mov
cltd
mov
sbbb
or
pop
ss
sub
inc
pop
rcrl
sub
rcrl
xchg
das
iret
stc
cltd
mov
xchg
mov
mov
lahf
add
fdiv
pushf
or
adcb
mov
xorl
pop
loopne
sti
inc
push
add
inc
lret
nop
push
jp
ds
jg
stos
fildl
jae
lret
outsl
pop
fstp
test
pop
sbb
mov
scas
test
adc
pop
sub
adcl
cmp
negl
adc
pop
push
sbbl
cmp
sbb
push
xchg
adc
in
jnp
cli
adc
jns
push
jo
jecxz
and
sub
pusha
mov
sarl
mov
arpl
push
clc
test
dec
pop
dec
cmpsb
adc
or
js
mov
mov
movsl
ljmp
fmull
ret
jecxz
or
ret
push
fidivs
out
pop
push
gs
sbb
mov
sbb
adc
add
lods
sbb
in
xchg
sub
push
sbb
in
enter
test
incl
stc
pop
mov
in
sbb
dec
and
insb
cs
jnp
scas
cmpsb
leave
les
mov
jmp
lret
mov
xchg
int3
push
inc
mov
aas
int3
fistpll
pop
movsb
out
out
test
roll
jg
xorb
mov
and
into
mov
mov
pop
pop
in
adc
pmaddwd
push
mov
imul
shll
cmp
or
and
pop
cmp
enter
cmp
cmp
insb
mov
sbb
add
cmpsb
scas
and
hlt
pop
sub
cmp
jae
bound
dec
inc
imul
clc
jne
cld
sarl
popf
xchg
mov
lea
aad
dec
sbb
mov
call
adc
lds
imul
popf
push
dec
inc
adc
fistps
das
pushf
jae
scas
add
test
jg
cmp
ljmp
bound
mov
dec
lret
push
lret
popa
je
sbb
inc
fisubrs
sbb
push
dec
sub
out
push
jecxz
js
mov
mov
divb
push
outsb
pop
or
dec
icebp
popf
cmp
rorb
lret
jno
jecxz
in
popf
xchg
sub
nop
mov
push
pop
cmc
dec
xchg
xchg
xor
cld
sbb
jmp
fcoms
sbb
add
cltd
dec
pop
sahf
push
scas
push
adc
loope
mov
in
inc
lahf
xor
repnz
test
add
dec
jl
mov
into
cmpsb
or
test
xchg
adc
mov
adc
or
sbb
inc
push
ljmp
adc
add
dec
int3
test
and
mov
in
jg
test
mov
jmp
dec
mov
jg
dec
inc
aad
adc
sbb
sbbb
jno
dec
psubsw
mov
add
dec
cltd
gs
xchg
xor
dec
or
std
sub
mov
ret
insl
sub
fsubs
leave
sbb
sarb
sub
movsl
data16
pusha
mov
aam
mov
xchg
std
rcl
rorl
lock
lea
loopnew
lods
leave
stc
xor
icebp
xor
pop
fiadds
add
adc
js
and
jl
sub
je
fstpl
outsl
iret
arpl
es
adc
cs
push
int
jbe
psubsw
iret
jno
sbb
and
pop
shrb
jo
xor
push
fsubrl
lods
and
pop
fdivs
fldt
pop
insb
sub
sbb
mov
les
js
mov
aas
pop
sbb
fdivrs
jmp
xchg
cmp
pusha
sub
popa
xchg
roll
test
shlb
dec
pop
cmp
jmp
divb
cld
jl
and
adc
shrl
scas
jecxz
xchg
lea
add
sub
jmp
cli
fistpl
popa
mov
add
adc
xchg
out
pop
mov
cmpsb
test
das
adcl
movsl
shlb
mov
ljmp
adc
pop
jns
or
mov
add
or
arpl
pop
pushl
jecxz
adc
adc
leave
jle
test
cmpl
pop
test
aam
daa
ret
mov
xchg
imul
cmp
pop
mov
in
adc
cld
adc
mov
xor
out
incl
ss
adc
add
jnp
dec
test
adc
and
hlt
mov
insl
sarl
mov
inc
dec
jns
inc
gs
push
xchg
in
inc
hlt
int
pop
sub
dec
scas
jp
pop
pop
loope
pop
add
fiaddl
or
fwait
clc
cmp
outsb
sub
pop
adc
jne
mull
mov
xchg
fcmovnbe
jle
filds
add
cmp
cmpsl
dec
jg
pop
leave
int3
add
cmpsb
xor
and
pushf
xlat
ds
push
adc
outsb
sub
mov
test
inc
je
dec
test
push
inc
sub
std
and
adc
adcl
jge
test
sahf
enter
dec
sub
loope
bound
clc
lahf
push
mov
or
xchg
shl
and
arpl
push
out
in
mov
aas
push
pop
cmp
sub
xchg
xchg
fxam
mov
cltd
les
xchg
cmc
negl
pop
dec
cmp
mov
ss
xor
pop
js
mov
loope
fisubrs
lea
aaa
fimull
orb
outsb
or
mov
pop
scas
jmp
test
into
inc
xor
fsubs
les
push
mov
pusha
sbb
dec
mov
cmp
sub
das
push
sbbl
add
pop
jmp
call
or
pop
jne
test
ja
movsl
orl
stos
and
sar
mov
mov
cmp
push
incb
mov
test
and
nop
mov
lea
or
test
and
cmp
out
repz
sbb
adc
cwtl
dec
sub
push
fiadds
pop
sub
mov
ss
fidivrl
sbb
repz
lret
std
adc
adc
out
lods
sub
aas
aad
movzbl
aaa
inc
xchg
mov
insl
fistpll
pusha
inc
adc
outsb
enter
test
int3
and
and
enter
cmp
mov
ljmp
pop
pushf
mov
mov
les
jecxz
push
push
mov
pop
mov
mov
add
adc
xchg
data16
outsb
pop
push
xor
push
imul
mov
jb
pop
aaa
push
adc
jne
out
or
in
pop
xor
push
aam
arpl
inc
inc
pop
pop
or
jg
das
loope
leave
jnp
pop
push
sbb
mov
mov
je
fwait
mov
inc
add
out
inc
xchg
and
lods
or
ret
xor
cmp
push
jmp
sbb
push
cwtl
lock
cmp
ja
mov
sub
mov
mov
adc
iret
dec
imul
inc
push
inc
push
adc
enter
ds
pop
lods
or
hlt
sbbb
testb
sub
addr16
cli
sub
shrl
pop
mov
add
cld
shl
in
stc
jp
outsb
and
lock
fimuls
ja
scas
jbe
mov
aas
mov
cmp
inc
jle
or
jnp
xor
pop
dec
xchg
adc
cmc
lret
inc
xor
mov
or
mov
ds
mov
rorl
loopne
ror
push
cmp
out
lds
test
mov
adc
out
or
popf
adc
mov
mov
xor
and
mov
push
imul
loopne
sti
jbe
jg
xchg
sbb
mov
int3
adc
mov
lds
imul
mov
mov
jnp
lahf
push
jg
hlt
dec
inc
xor
jns
outsb
fdivs
add
fldenv
ret
xchg
push
rcrb
push
mov
mov
data16
orb
out
fisubrl
mov
lcall
aam
loopne
push
jb
icebp
jo
dec
pushf
mov
add
outsl
addr16
push
test
push
fisubs
mov
cltd
icebp
hlt
xchg
aam
ja
xchg
adc
mov
cmc
cwtl
mov
arpl
add
cmp
ja
or
cmp
fdiv
adc
mov
sbb
mov
sub
mov
push
sbb
sub
arpl
or
dec
adc
mov
jp
sbb
jl
sarb
int
jo
pop
dec
outsl
jmp
loop
sub
ljmp
in
mov
pop
xchg
xor
popa
es
not
call
psubusb
int
mov
sub
mov
imul
call
cmp
cwtl
lods
add
stos
pop
int
loope
push
sub
xor
fldt
push
lcall
ret
insb
fsub
mov
adc
into
pop
fistl
cmpsl
push
add
adc
xchg
stc
sahf
out
mov
sbb
stc
je
sub
cwtl
fcmovne
dec
sub
mov
sbb
adc
mov
adc
imul
fs
push
fs
pop
adc
aad
lret
rcll
mov
jmp
pop
js
jmp
fcoml
cmp
mov
jg
pop
mov
inc
jo
dec
xchg
or
push
dec
mov
inc
or
xchg
out
int3
push
jae
scas
scas
push
sub
mov
jae
cmp
xchg
negb
test
outsl
jne
mov
push
sbb
cmpb
addb
mov
insl
xchg
call
into
into
cmp
popf
inc
cmpsl
mov
lahf
iret
popa
add
and
cmp
pop
hlt
into
flds
xrelease
lock
jl
and
or
ja
mov
lahf
jo
nop
mov
inc
add
and
out
mov
mov
push
or
pop
cmpsb
cmc
stc
fs
dec
insb
test
cmp
sub
push
rol
dec
and
rorl
orb
sahf
lea
sbb
jne
adc
aaa
sbb
inc
dec
sub
xor
sbb
pushf
int
lods
rcl
and
lock
insl
lods
xchg
sub
sub
add
push
movsb
mov
mov
sbb
mov
dec
aaa
inc
sbb
and
push
loop
jno
pop
js
aas
pop
stc
mov
jbe
insb
popf
jecxz
fistps
arpl
jo
mov
out
out
and
cltd
scas
mov
mov
and
and
jp
or
adc
cltd
jp
sbb
cmp
dec
icebp
insl
mov
dec
cmc
or
in
push
mov
xchg
stos
rcl
or
push
and
sbb
sbbl
fcoms
mov
adc
push
xor
aaa
adc
mov
aas
outsl
lds
xchg
popf
push
adc
push
and
adc
push
fxch
adc
cmc
adcl
push
mov
outsb
test
ss
mov
xchg
idivl
stc
ret
jns
pop
cmp
mov
lret
jns
mov
hlt
jbe
mov
mov
cmp
inc
ret
xchg
dec
or
xchg
dec
xor
mov
dec
daa
adc
cltd
test
inc
rcl
out
out
lcall
or
add
aaa
pop
imul
dec
enter
imul
repz
sbb
lds
pop
jno
vpminsw
sarb
jno
lea
insl
fwait
and
or
and
mov
pusha
sbb
ss
stos
sub
ror
xor
push
roll
out
xchg
mov
and
jg
in
ret
pop
sbb
or
inc
lret
int
mov
jle
outsb
push
push
push
push
ds
into
into
out
out
sahf
sahf
mov
pop
pop
dec
dec
jle
outsb
outsb
push
push
push
push
ds
into
into
out
out
sahf
sahf
mov
pop
pop
dec
dec
jle
outsb
outsb
push
push
push
push
ds
into
into
out
out
sahf
sahf
mov
pop
pop
dec
dec
jg
outsb
outsb
push
push
push
push
ds
into
fs
out
cltd
jmp
inc
push
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
pushf
mov
js
mov
sahf
lods
icebp
mov
sub
cmp
dec
sub
jl
jl
mov
pushf
cld
lods
int3
mov
mov
sbb
sbb
sub
xor
insb
cmp
or
sbb
dec
test
mov
movsb
stos
aad
hlt
hlt
xchg
scas
adc
sub
xor
jle
js
test
mov
lahf
mov
cmp
out
andl
pop
xor
arpl
aam
add
out
fdivl
imul
adc
ret
cmp
xchg
movsl
pop
xchg
cli
sub
inc
pop
inc
addr16
pop
insl
jecxz
adc
mov
dec
fbld
fisttpl
enter
mov
std
adc
mov
pop
mov
pop
mov
repz
fdivrl
adc
and
pop
and
lahf
les
or
fisubrl
sub
inc
pop
sub
adc
mov
fimuls
cld
hlt
popf
repz
xchg
sub
lcall
insb
loopne
jbe
pusha
test
lods
mov
int3
mov
adc
dec
and
shlb
jl
loopne
stc
xchg
leave
mov
mov
fisttpl
jo
pop
jmp
cmp
js
jne
stos
std
mov
mov
in
scas
dec
or
jge
dec
arpl
cmp
imul
sbb
mov
fdivrl
insb
sbb
sub
cmp
dec
sub
cmp
or
sbb
in
pushf
cld
lods
int3
mov
mov
or
sbb
sub
cmp
dec
sub
cmp
or
sbb
in
mov
adc
mov
mov
rcr
enter
xchg
adc
pop
cltd
and
mov
js
icebp
inc
add
popa
xchg
fdivl
push
leave
cltd
cmp
jae
mov
loopne
lock
scas
jp
mov
and
cltd
inc
outsl
lds
mov
sub
call
lods
jae
mov
mov
jl
mov
adc
dec
sbb
sti
and
clc
fisubrl
out
inc
sub
jnp
es
std
sub
add
cld
lcall
int3
sub
hlt
jae
shll
idiv
fs
inc
popf
pop
xchg
mov
sub
leave
popa
push
cmc
pop
push
dec
ja
fs
lea
call
jmp
jp
dec
xchg
cmc
cmp
mov
mov
mov
loope
test
leave
test
pushf
into
xchg
sarl
mov
in
ljmp
adc
ret
ds
cmp
mov
and
pop
cmc
xchg
push
daa
mov
sahf
stc
movsl
outsb
inc
xchg
mov
xor
jl
fsubrs
fmul
inc
mov
or
sub
push
out
and
cwtl
hlt
outsl
jl
jae
les
jne
ret
jns
jbe
cmpsb
insl
subl
fnstcw
xchg
ret
adc
push
adc
mov
sbb
shrb
repz
mov
shrl
test
mov
and
push
and
leave
cmpsl
lods
adc
scas
in
hlt
xchg
xor
lret
xor
lds
rcrl
mov
into
xchg
mov
mov
push
cwtl
sub
das
adc
pop
repz
sub
dec
xlat
jo
sbb
push
int3
pop
cmpb
cmc
push
push
pushl
mov
lahf
and
test
mov
fadd
out
xor
aam
fisubrl
icebp
cmp
mov
sub
rcll
ljmp
loopne
mov
test
xchg
mov
add
adc
aaa
cmpsl
lcall
sbb
scas
mov
cltd
pushf
jns
pop
sbb
out
mov
icebp
add
lahf
push
out
ljmp
dec
dec
hlt
call
sub
jnp
inc
gs
ds
sub
cltd
xchg
mov
mov
add
in
dec
insb
popf
mov
bound
mov
jnp
mov
xor
lret
pop
sub
mov
out
and
jecxz
out
mov
fcoml
cld
adc
mov
test
inc
push
mov
mov
jle
pushl
scas
pop
and
mov
xchg
or
pop
icebp
lea
sub
and
mov
push
mov
push
cmpsb
test
push
scas
mov
iret
clc
xlat
lahf
xchg
inc
sbb
jnp
mov
mov
fstps
or
stos
jae
jl
nop
insl
push
jmp
iret
adc
mov
jae
inc
sbb
in
push
xchg
adc
push
lods
popa
insb
pop
inc
in
divl
pusha
out
cwtl
pop
mov
sub
mov
sbb
ss
mov
repz
sub
inc
xlat
pop
fildl
test
lds
cmp
out
jmp
add
out
add
leave
add
push
loope
dec
and
push
fs
lds
movsb
repz
push
fcompl
loopne
push
mov
sub
fs
adcl
stos
cmp
int
pop
jecxz
test
and
fcmovbe
mov
pop
inc
test
push
pop
dec
sub
inc
sub
mov
mov
cmpsl
cltd
cmpsb
dec
add
shlb
stc
insl
arpl
sub
ficoms
dec
xor
es
in
pop
push
divb
lods
inc
lcall
insb
or
sub
test
rolb
mov
lcall
insl
mov
in
push
mov
jae
cmpsb
sub
testb
sbb
sub
cs
mov
hlt
rolb
dec
outsl
out
orl
fsubr
jmp
dec
mov
adc
mov
push
mov
inc
ss
sbb
xchg
nop
lahf
btr
stos
stos
hlt
imul
and
lcall
fidivl
mov
mov
jle
adc
cld
aas
dec
lahf
push
push
data16
push
jmp
push
cltd
lods
cmp
rcr
js
sbb
roll
je
and
popf
enter
mov
push
outsl
pop
addr16
out
cld
mov
mov
and
cltd
xor
mov
in
and
mov
ret
pushl
dec
mov
xchg
clc
add
js,pt
push
sub
inc
jns
dec
pop
adc
jmp
scas
pop
push
push
sub
or
leave
popf
push
stos
jg
inc
jb
mov
jae
insb
jg
xchg
adc
push
stos
and
jmp
mov
pop
outsb
xchg
sbb
outsb
fs
cmp
pop
jb
es
mov
cmp
int3
mov
ret
ljmp
and
fstps
push
mov
xlat
pop
xchg
mov
mov
ja
sbb
push
xorl
jae
lret
bound
pop
pop
xor
cmp
loope
dec
pop
stc
ss
hlt
mov
inc
mov
lahf
push
fcmovu
call
in
xor
gs
and
inc
jle
sub
rcl
das
xor
cli
push
adc
sahf
mov
sbb
pushl
add
stos
jge
imul
lcall
stos
mov
ret
loop
xchg
rcl
sub
lock
jae
cli
sbb
pushf
mov
nop
loopne
and
fstpl
aas
lods
loope
or
sbb
push
lds
inc
ffree
jno
in
lods
jle
int3
das
inc
push
sbb
pop
sbb
or
stos
and
insb
inc
jo
pop
mov
mov
pop
jge
adc
push
sub
sub
jns
xchg
scas
jp
push
imul
dec
fidivs
in
int
inc
out
and
xchg
rcll
mov
dec
jp
loopne
out
push
mov
shlb
cltd
lret
xchg
adc
lea
push
insb
mov
sti
xchg
imul
cli
int3
loope
pop
lcall
mov
xor
sub
or
mov
cmp
ret
jbe
inc
in
aas
insb
cmp
shlb
jbe
daa
add
call
mov
mov
adc
pop
fcomp
movsb
lcallw
popf
imul
push
xchg
cmp
in
pushl
fadd
mov
xlat
adc
fs
sub
adc
inc
sbb
cmpsb
dec
sahf
add
cld
mov
sbb
sbb
jmp
loopne
movsl
push
dec
jae
adc
push
jbe
xcrypt-cbc
cmpsl
xchg
out
lods
and
ret
movsb
pop
popa
cmp
jnp
and
out
pop
insl
xor
pop
das
je
call
loopne
push
pop
decl
imul
xchg
insl
stos
fstpl
ljmp
jecxz
inc
inc
int3
cwtl
sub
lods
imul
push
mov
cwtl
in
mov
jp
imul
ss
mov
out
mov
mov
aad
xorl
xchg
inc
dec
bound
cmp
mov
fnsave
pop
rcl
cmc
cmp
pop
xchg
fsubr
mov
pop
or
test
ljmp
lea
outsb
mov
jg
js
pop
adc
add
imul
addb
in
gs
imul
scas
push
cmc
mov
adc
xchg
mov
shr
popa
push
rclb
repnz
frstor
cmp
xor
mov
add
inc
ss
mov
aaa
dec
bound
mov
inc
and
cmpsb
in
daa
inc
mov
cmp
cmc
das
in
mov
test
fidivl
push
cmp
sti
adc
mov
lock
or
xchg
dec
sbb
imul
scas
add
push
mov
sbb
lret
ja
pushf
sub
repnz
dec
scas
jno
nop
inc
loope
xor
decl
lds
in
clc
nop
pop
imul
test
shll
test
cmpsl
mov
ja
imulb
stc
into
sbb
mov
sbb
lods
xchg
sti
mov
push
pop
insl
cmp
or
pop
call
jne
cs
mov
mov
jb
xchg
subl
fadds
and
call
inc
dec
rcrb
das
lock
test
hlt
lds
fwait
jecxz
mulb
cmp
cmp
jl
cs
or
jl
xchg
push
adc
shlb
test
sahf
or
lret
push
adc
notb
push
sub
push
ds
in
mov
or
mov
insl
xchg
add
xlat
pop
int
repnz
pop
fidivrl
fs
or
adc
jl
xchg
dec
in
push
aad
adc
loope
ljmp
clc
cmp
mov
imul
sahf
lods
sbb
mov
mov
dec
xchg
push
mov
das
adc
popa
mov
push
cmpsl
fsub
pop
sub
stc
addr16
insb
xlat
xchg
lret
lods
sbbl
jg
rclb
pop
push
xor
jmp
into
fnstsw
pushw
push
mov
xchg
lret
add
xchg
add
sub
out
inc
lock
jae
pushf
movl
hlt
xchg
fisttpll
add
aam
mov
or
ds
or
sub
divb
hlt
mov
stos
test
xor
jne
imul
or
push
stos
scas
jne
sub
jmp
je
mov
in
jle
loope
shlb
and
sub
jbe
cmp
xchg
imul
in
out
sbb
mov
out
xor
outsl
pop
cld
cld
sarb
sti
lds
outsb
je
call
sub
pop
dec
out
sub
lret
sbb
xor
mov
aas
testb
pusha
imul
xchg
push
push
call
ljmp
testb
popa
xlat
lds
sar
add
out
lahf
lret
and
jno
pop
jecxz
mov
mov
js
dec
pop
clc
cwtl
pusha
sahf
insl
loopne
mov
push
test
jo
xlat
jp
cmp
inc
mov
hlt
inc
gs
jg
and
xchg
test
popa
andl
adcl
stos
or
subl
insl
out
gs
fisubrs
dec
subb
xchg
dec
and
outsl
jns
cli
inc
lret
lret
lret
sub
fs
adc
mov
inc
inc
add
and
aas
sahf
enter
dec
cmc
popf
or
cmp
fs
jg
pop
fidivs
adc
insb
and
push
xchg
mov
jmp
mov
fsts
dec
cld
push
mov
xchg
packssdw
mov
mov
je
ds
shrl
cmp
mov
adc
mov
sbb
popf
rorl
arpl
and
ret
setb
lret
in
orl
pusha
mov
cmp
sar
xor
aam
dec
inc
adc
jle
xchg
xchg
mov
cmp
and
sub
shlb
mov
mov
sub
movsl
adc
js
xchg
rcll
xchg
cs
mov
pop
loope
adc
push
cmp
lods
mov
movsl
sbb
and
jge
add
testb
push
cmpl
pop
jmp
adc
inc
or
sbb
imul
movsl
stc
mov
push
clc
jbe
mov
test
lea
lock
and
je
cwtl
test
and
cs
call
aad
and
dec
mov
mov
stos
dec
insl
pop
add
xor
mov
cltd
loope
arpl
add
stos
out
aas
outsl
je
clc
mov
mov
mov
mov
mov
push
fs
int3
es
push
pop
in
sub
bsr
pop
jnp
int3
sbb
out
ljmp
ret
in
lea
mov
insb
das
daa
xchg
sbb
aam
mov
into
aaa
jno
mov
mov
mov
sbb
push
mov
or
bound
enter
fldenv
adc
movsb
sbb
xor
lock
jp
mov
push
insb
mov
mov
adc
push
inc
scas
sub
pop
cmp
out
xor
cmp
and
pop
mov
test
adc
and
icebp
lods
call
jle
enter
jp
cmp
add
fdivs
cmp
hlt
inc
cmp
lcall
loope
mov
add
notl
xor
fcomps
mov
fchs
dec
imul
cmp
movsl
int
enter
daa
dec
cmp
and
inc
sti
xchg
std
fcmovne
idivb
scas
sbb
ror
cmp
xchg
xchg
clc
inc
lds
jg
pop
adc
bound
dec
and
cmp
aaa
mov
cmpsb
jne
inc
push
push
test
loope
test
test
and
xchg
arpl
mov
fcmovnu
cmpl
dec
test
test
xchg
shll
lahf
and
or
pop
adc
sub
dec
jb
push
hlt
sub
movsb
mov
sbb
icebp
adc
aam
fldenv
mov
push
arpl
cltd
arpl
adc
test
sub
rorl
pop
xchg
adcl
push
jle
mov
mov
lock
bound
mov
mov
xchg
mov
inc
sbb
or
jp
loop
cwtl
inc
mov
add
cmp
mov
inc
cwtl
dec
fstps
movsl
rcrb
pop
jecxz
xchg
idivb
lret
sub
fnstsw
dec
jg
js
mov
popa
std
push
cmp
int
pushf
subl
push
or
iret
lea
sub
or
push
mov
cmp
cmp
popa
fs
inc
push
mov
imul
enter
push
leave
xchg
sub
or
inc
sbb
xchg
jge
xchg
dec
adc
fbstp
push
adc
notl
sub
jne
xor
dec
clc
lock
or
sub
shl
fmull
adc
stc
outsb
loope
stos
bound
ja
pop
inc
or
arpl
push
lahf
adc
pusha
pop
jecxz
data16
mov
pop
or
push
in
sub
fcmovb
inc
jbe
aaa
cli
xchg
pop
js
cmp
nop
adc
aam
dec
lea
into
xor
cmp
mov
xchg
add
rorl
rcrb
stc
mov
repnz
pop
lret
sbb
sti
lcall
cli
mov
pop
stos
popa
lea
or
jnp
and
fstp
and
mov
push
or
push
adc
mov
sub
inc
test
mov
movsl
scas
jp
push
lds
sub
xor
jno
mov
xchg
xchg
loop
in
jg
ljmp
es
mov
notl
jecxz
arpl
aad
fcoms
mov
push
insl
pop
cmp
sub
sahf
pushf
sub
loope
loopne
jbe
push
mov
pop
fstpt
adc
mov
sub
into
cmp
sub
rcr
test
fistl
jno
push
push
jo
mov
or
pushf
stos
call
bound
xchg
xor
daa
dec
test
cmp
inc
add
dec
fildll
inc
push
sarl
loop
cmp
mov
cmp
loopne
push
adc
sbb
push
test
inc
data16
xor
xchg
pop
in
je
push
push
dec
imul
pop
pusha
cwtl
jecxz
rcrl
iret
jmp
test
cmovbe
fidivl
mov
cmp
dec
or
and
imul
jo
ljmp
mov
adc
rolb
jo
sub
mov
js
faddl
push
dec
jo
sub
inc
ss
add
xchg
je
daa
cmpsl
jl
lock
cli
in
fdivrs
fildll
sahf
hlt
fpatan
test
pop
inc
xchg
add
jl
inc
int3
shll
pop
cmp
test
rclb
or
leave
push
push
repnz
jg
outsb
xor
or
lret
cwtl
mov
add
pop
mov
adc
cmpsb
outsb
frstor
jnp
jae
out
fnstcw
and
sbb
scas
jo
jne
je
flds
mov
fisubrl
dec
or
jge
popf
testl
mov
mov
addr16
inc
andps
inc
scas
xor
cmp
add
out
add
mov
push
cmp
xor
or
jnp
xor
mov
ror
sub
out
cwtl
stos
ret
mov
and
in
sub
es
pop
jg
std
push
std
mov
push
dec
fs
push
pusha
imul
fdivrl
jmp
roll
cmp
data16
in
mov
mov
inc
mov
jl
stos
arpl
mov
test
push
int
and
pop
pushf
dec
loope
popf
jb
and
and
dec
push
jnp
lods
addl
shr
push
mov
adc
scas
mov
jns
pushf
sub
sbb
repz
adc
adc
adcb
hlt
ss
inc
lret
sub
out
push
sbbl
mov
mov
dec
pop
loope
jp
outsl
out
mov
movsb
aaa
xlat
pop
js
mov
test
imul
shlb
jle
pop
out
rcl
popf
lret
mov
test
mov
sub
sti
icebp
cli
and
cmp
iret
fisubs
inc
loope
dec
push
dec
repnz
mov
es
in
xchg
mov
xchg
sti
and
and
pop
je
jnp
fbstp
insb
push
into
popa
cmp
xchg
mov
push
cmp
xor
jbe
inc
push
and
mov
dec
add
sbb
fs
cltd
and
sub
sahf
push
into
hlt
jp
ja
sbb
ja
notb
rcll
fdivrl
mov
mov
insl
xchg
jl
jle
divl
cmp
imul
subb
shll
mov
enter
in
cld
lcall
nop
insl
pop
adc
cli
mov
scas
loope
xchg
ret
mov
insl
popa
and
push
cmp
rorl
std
inc
jo
scas
jb
fwait
das
sti
ds
add
cli
imul
xchg
inc
inc
sub
aaa
pop
inc
in
push
hlt
pop
dec
popa
imul
insb
ret
jmp
sub
mov
movb
mov
and
and
adc
dec
fsubl
ret
aaa
mov
jo
jb
adc
insb
leave
scas
pushf
mov
fsubrl
inc
mov
test
sub
mov
and
adc
ss
sub
mov
push
pop
js
ja
xor
repnz
movsl
mov
xchg
test
jge
jo
pop
pop
sbb
lret
ret
mov
lds
jecxz
mov
loop
mov
jmp
out
jnp
jb
hlt
cmp
test
inc
outsb
je
mov
pop
sub
loopne
cli
insb
dec
jne
lahf
lock
cmp
cmpsb
lcall
jns
mov
in
dec
mov
scas
sbb
add
pop
mov
xor
push
lock
orb
aam
loope
flds
arpl
cwtl
adc
and
arpl
mov
movsb
cmp
stc
cs
es
sbb
int
fmuls
ret
jb
clc
fists
ljmp
cmp
adc
clc
mov
pop
pop
adc
sbb
push
jo
leave
push
call
jbe
xchg
popf
test
addb
fwait
mov
xor
sahf
rcll
xor
jae
adc
daa
mov
jns
mov
cmp
mov
je
cmp
add
sub
rcll
pop
cmpb
jge
add
daa
mov
mov
mov
jns
in
inc
lods
daa
dec
loope
lods
xchg
icebp
jne
sub
cwtl
push
xchg
shlb
in
mov
xor
mov
xchg
jmp
mov
int
sub
in
push
mov
mov
pop
sarl
pop
pop
jp
or
imul
mov
mov
adc
and
movb
popa
cwtl
arpl
divb
test
dec
adc
mov
in
adc
repz
ret
adc
insb
in
inc
or
and
push
push
stos
inc
pop
or
dec
rclb
sbb
icebp
fdivl
daa
les
fwait
sub
mov
insb
xor
sbb
or
or
aas
popf
pop
lea
push
icebp
and
lahf
aaa
sub
subb
sub
scas
pop
in
roll
js
xor
and
inc
es
mov
pop
scas
imul
dec
and
adc
mov
mov
ret
jl
sbb
fidivl
or
push
pop
ret
rcll
pop
nop
into
aas
rcl
pop
ret
mov
cld
adc
fstpl
cld
cmpsb
leave
mov
mov
or
sbb
sub
cmp
dec
sub
cmp
or
sbb
in
pushf
cld
lods
int3
mov
mov
or
sbb
sub
cmp
dec
sub
cmp
or
sbb
call
mov
xlat
in
mov
pushf
or
sbb
sub
cmp
dec
sub
insb
add
sahf
sbb
lods
fdivrl
xchg
jecxz
xchg
cmp
xchg
je
fs
and
xchg
jbe
mov
fstpt
scas
pop
mov
push
lcall
sub
cmp
or
sbb
in
fldt
stos
sub
dec
mov
push
cmp
int
popf
mov
ret
jae
daa
loop
lock
xchg
sub
adc
call
cli
pandn
nopl
add
les
push
sub
inc
into
test
add
sar
jnp
les
and
push
hlt
xor
xor
cmp
adc
mov
xchg
cmp
imul
mov
cmc
mov
leave
and
xor
and
repz
les
les
jne
inc
push
stc
sub
fimull
mov
outsl
cli
test
fcmovnb
and
es
test
pop
xchg
inc
sbb
subb
stos
cmc
xor
fcoms
fldt
out
out
out
gs
mov
and
sti
loop
adc
pusha
lret
aad
jb
stos
into
js
insb
pop
lea
dec
mov
jg
or
mov
adc
and
xor
inc
movsl
push
mov
imul
or
iret
inc
fmuls
sbb
mov
dec
ret
dec
call
repz
leave
nop
lds
pop
test
push
outsl
scas
pop
mov
fsubrs
fimuls
sbb
dec
mov
ficomps
out
outsb
jmp
sbb
jmp
sti
or
cmp
sub
jp
push
lcall
sub
cmp
or
sbb
jmp
sti
or
cmp
sub
jp
push
lcall
addr16
push
push
imul
test
dec
imul
and
in
sub
dec
xor
xor
dec
cltd
sub
stc
add
shlb
enter
cmc
repz
imul
push
xchg
loopne
pop
xor
test
push
xor
cld
cmp
and
dec
mov
lock
pop
test
les
out
sub
mov
push
daa
pop
into
sahf
sbb
jbe
arpl
outsl
stc
mov
loope
mov
fnstcw
pop
push
and
sahf
and
aaa
scas
and
mov
adc
sbb
movsl
mov
stos
in
test
pop
aad
sub
ds
mov
cmpsb
pusha
mov
es
test
rclb
in
shlb
cmp
notl
ror
dec
xor
or
mov
and
roll
sti
jb
xchg
push
sarb
jmp
shrb
pushf
jns
pop
dec
fsubrs
in
lret
popf
mov
adc
inc
outsb
jmp
mov
sbb
dec
dec
dec
aas
pop
mov
cmpsb
imul
je
pop
dec
adc
in
fs
jecxz
mov
fcoml
stos
mov
outsl
mov
imul
into
mov
iret
and
dec
mov
orl
imul
fnstsw
outsl
inc
mul
divb
rcrb
inc
mov
pop
jno
outsl
xchg
pusha
xchg
cwtl
stos
iret
push
inc
ds
decb
jecxz
jl
push
fiaddl
sub
fidivs
ljmp
push
add
xlat
popf
jno
leave
aaa
out
sub
and
mov
pop
rorl
mov
pop
push
xchg
sub
mov
and
fs
inc
dec
dec
inc
notl
js
test
jne
cmp
aas
sub
mov
into
mov
jns
mov
addr16
ljmp
mov
loopne
mov
lock
rolb
mov
sahf
cmp
int3
inc
ss
pop
mov
adc
push
mov
jns
adc
jns
movsl
fucomi
repnz
push
xor
movsl
jg
lret
loope
push
sahf
push
ficoms
loop
int3
push
sub
insb
dec
cmp
adc
sti
and
push
ret
pushf
dec
nop
scas
sub
adc
jno
fnsave
xor
imul
outsl
inc
leave
outsb
clc
in
neg
mov
loopne
jno
mov
push
hlt
imul
rcrl
mov
out
flds
sar
cmpsb
cmp
sti
fidivrs
pop
push
cmp
je
and
jecxz
inc
lcall
stc
sub
cmp
mov
in
insl
mov
in
sub
je
mov
std
xor
mov
scas
imul
pusha
push
sbb
xchg
lahf
or
hlt
pusha
or
subb
repnz
clc
je
push
aam
cmc
imul
test
rcl
repnz
or
push
inc
sahf
scas
and
xor
jbe
rclb
ret
arpl
out
loop
roll
add
sub
and
dec
sub
das
jne
out
mov
in
mov
aas
orl
push
es
outsl
xchg
xor
lret
or
adc
fs
adc
push
xchg
sbb
adc
data16
add
xchg
xchg
sbb
sub
pusha
sub
clc
ljmp
fldt
rcrl
cmp
xchg
addr16
inc
cmp
ficoms
fisubrs
xchg
es
xor
stos
lret
mov
push
inc
mov
mov
xlat
mov
xchg
arpl
popl
fs
cltd
pop
testl
xchg
cli
mov
icebp
jl
roll
inc
out
movl
and
add
add
bound
xchg
xor
pop
sbb
push
mov
lcall
test
aaa
add
outsl
mov
push
sub
push
inc
outsl
cmp
mov
mov
inc
jl
loope
or
push
sti
push
fsubs
mov
lcall
push
xchg
push
idivb
xchg
out
rcr
dec
in
rolb
jl
bound
cwtl
pop
xor
mov
pushf
adc
mov
cmpsb
pushf
xchg
out
inc
or
or
fsubrl
outsb
push
jmp
push
mov
test
push
in
std
xchg
int3
dec
out
sub
popf
test
push
sub
sub
cltd
out
cmp
and
sbb
mov
cmp
mov
mov
ja
adc
xchg
lock
pinsrw
es
and
adc
cmp
mov
add
cld
and
nop
sbb
rcl
lods
clc
js
lcall
popa
lds
popf
lret
repz
outsb
lret
cmp
aad
test
and
lcall
jb
lahf
addr16
dec
mov
pop
rol
pop
pop
fsubr
leave
adc
shl
scas
adc
xchg
iret
pusha
mov
xlat
dec
sub
int3
fwait
stos
movsl
adc
mov
sbb
pop
xor
aam
cs
dec
push
adc
and
jle
push
mov
jo
test
mov
add
push
ds
inc
aam
sbb
loopne
cmp
jmp
or
ljmp
cmp
xor
orl
fdivl
scas
es
push
jbe
addr16
movsb
frstor
xchg
sbbb
cmpsl
mov
fsub
jae
mov
cmp
stos
ret
in
call
cltd
loope
push
adc
loopne
sbb
das
ljmp
add
cmp
add
mov
ret
sub
pushf
dec
push
inc
daa
lahf
es
cmpl
repz
xor
imul
cli
xchg
push
movsl
jcxz
imull
dec
jbe
sarb
jno
add
pop
test
push
pop
push
add
xchg
sub
addr16
frstor
dec
ret
int3
imulb
inc
and
jb
and
ficomps
fcmovnb
scas
xchg
push
add
adc
inc
dec
lea
inc
imul
das
jmp
cmp
insb
and
sub
pusha
mov
and
adc
inc
pop
ja
in
xchg
pusha
or
stos
test
loop
out
test
sbb
insb
insb
jae
stos
mov
and
leave
jbe
pop
and
fidivl
ja
xor
lret
jecxz
pop
call
int
in
mov
fsubrl
push
loop
lcall
pop
popa
addr16
outsl
push
inc
push
fimuls
xchg
adc
movsl
movb
lea
or
pop
or
push
enter
push
call
sbb
aad
sbb
mov
inc
mov
sahf
daa
push
jne
fdivrp
cli
in
mov
out
jg
pop
inc
ret
std
dec
mov
pop
cmp
hlt
add
cmc
lock
push
popa
es
lods
sbb
imul
adc
and
imul
jmp
and
mov
shll
addr16
bound
scas
cwtl
mov
lret
sti
jmp
dec
imull
pop
mov
call
sbb
test
cmp
push
outsb
fs
lcall
xor
loopne
sbb
jp
insb
lods
movsb
sub
sub
adc
sub
inc
xor
push
addr16
and
push
jo
cli
push
mov
mov
inc
pushl
in
sub
sub
pop
lret
out
xchg
add
stc
pop
inc
gs
pop
int
in
cmp
mov
xchg
push
add
cmp
pop
cmpl
mov
lods
adc
jnp
popf
sub
lods
sbb
mov
in
and
xor
and
repnz
and
jne
dec
and
push
or
test
jnp
sbb
xchg
inc
aad
cwtl
sbb
or
rcrl
in
push
push
lods
popa
dec
xor
fldcw
jle
pushf
aad
cmp
std
gs
push
xchg
cwtl
mov
sub
push
xchg
orb
in
mov
fisttps
push
mov
push
fs
lds
fucom
pushf
out
movsl
jne
mov
insl
lock
das
nop
jnp
sbb
movsl
mov
pop
fwait
imul
shr
lock
cmp
or
mov
mov
pop
dec
mov
xor
or
pop
in
mov
sets
xchg
popf
data16
sbb
cli
add
push
dec
mov
cmpsl
stc
ret
stos
jmp
xor
ret
mov
add
repz
and
push
rcr
mov
inc
sub
xchg
idivb
in
testl
imul
xor
fprem
pop
sti
and
test
mov
xchg
adc
add
insb
dec
dec
sbb
mov
add
icebp
dec
and
es
pop
gs
add
push
pop
scas
jge
mov
mov
and
add
andb
sub
mov
xchg
sti
lds
shrb
lahf
mov
pop
test
mov
stc
ds
test
xor
xor
mov
sbb
popl
add
lock
in
jnp
xchg
sbb
mov
mov
lret
or
es
dec
or
addr16
push
pop
out
mov
clc
or
dec
sti
stc
lea
sahf
dec
int3
bound
repnz
dec
or
mov
xor
rclb
xchg
mov
shl
aam
je
inc
sbb
dec
dec
pop
fwait
mov
cmpsb
jne
pop
jo
xor
pop
adc
aas
loop
jne,pt
lds
push
add
push
popa
cmp
jmp
jmp
push
arpl
fisubrl
pushf
into
mov
add
in
pop
pop
shlb
cs
pushl
jne
lahf
cmpl
loopne
xor
mov
aad
bound
js
xlat
fcmovb
mov
fnsave
in
mov
ss
or
enter
test
pop
pop
es
jl
jg
cmp
loop
dec
xor
add
mov
push
adc
mov
push
movsl
jns
loopne
sbb
pop
xlat
fdivrl
call
movsl
ljmp
mov
adcb
mov
or
mov
xor
add
notl
mov
jmp
mov
movsb
ljmp
fmull
sarb
xchg
ror
mov
sbb
add
bound
xor
xlat
sub
pop
cmp
mov
xchg
cltd
pop
push
push
jl
cmp
mov
mov
adcb
add
push
and
push
sbbl
pop
inc
fnstenv
loope
popf
push
ss
adc
lret
mov
push
in
cmc
fisubl
jbe
adc
mov
mov
mov
loope
das
pusha
icebp
bound
test
popa
mov
jns
imul
and
test
call
ljmp
test
and
mov
lret
iret
jg
add
adc
mov
fs
cmpsb
aad
inc
sub
ret
bound
in
xchg
jb
and
add
jmp
es
push
mov
push
outsb
and
mov
xchg
iret
not
test
mov
lds
shrl
cmp
arpl
cmp
nop
pop
cs
lret
test
cltd
es
insb
sti
roll
jl
test
pop
cld
stos
aam
stc
cmp
sbb
aad
or
xor
mov
mov
ja
adc
xchg
jbe
cmp
cmp
ds
bound
mul
scas
stos
xchg
xchg
sub
int
pop
repnz
mov
aad
in
jne
daa
insl
int
test
pusha
add
cmpsl
mov
imul
push
lock
cmp
or
dec
testl
les
pop
pop
cmpb
imul
int3
loopne
popf
jb
add
lods
or
sbb
std
dec
sbb
push
shlb
add
adc
jne
outsl
outsl
cwtl
mov
dec
and
dec
lock
inc
mov
faddp
out
inc
dec
icebp
popa
or
sahf
sub
mov
add
adc
cmp
lods
in
rolb
lret
xor
and
add
or
lods
test
imul
fdivrs
add
xchg
push
mov
xchg
mov
mov
fdivr
cmpsb
stos
push
mov
jp
cwtl
sub
pop
iret
push
out
sub
mov
adc
add
shll
jno
mov
aam
add
mov
das
add
into
jge
jne
sahf
rolb
pusha
scas
mov
nop
push
or
add
push
or
lahf
jno
data16
repnz
dec
xchg
pop
push
loopne
push
sti
lods
mov
lahf
data16
sub
jle
test
cmp
push
fcomps
xchg
sub
pusha
mov
inc
cmp
lret
clc
cwtl
fcmove
mov
sub
xor
xchg
or
add
jne
aaa
cmpsl
inc
stc
mov
movsl
cmpsl
and
enter
fsubr
sbb
xchg
pop
push
dec
dec
or
mov
mov
lahf
jge
mulb
je
jns
jne
adc
and
mov
inc
in
adc
pop
sar
mov
add
out
cltd
push
sub
gs
dec
movsb
scas
dec
mov
sbb
icebp
xchg
pop
sub
sub
pop
loopne
nop
pop
cmpsl
scas
pop
adc
cmpl
movsb
adc
in
add
and
aam
xchg
mov
dec
add
jns
inc
in
pop
add
stos
adc
filds
leave
sbb
mov
jle
cmp
call
fsubs
lods
mov
lret
and
iret
repz
push
adc
notb
adc
stos
sbb
cmovnp
out
shlb
in
scas
scas
daa
sub
fmulp
lock
xrelease
daa
cmp
iret
pushf
dec
mov
out
inc
aam
mov
lea
mov
sbb
pop
lds
gs
scas
gs
movsl
mov
mov
pusha
popa
lret
rep
insl
punpckhwd
fisubrl
in
or
test
mov
push
mov
ja
outsb
sbb
pop
insb
std
mov
pop
in
je
test
xchg
iret
xchg
add
repz
mov
or
scas
cli
int
mov
mov
jnp
sbb
push
mov
inc
mov
adc
fldenv
mov
cmp
mov
dec
pop
in
je
mov
mov
pop
and
popa
mov
orb
nop
addr16
inc
mov
icebp
cmp
std
inc
mov
push
lock
mov
xor
cmp
loope
fcoms
ret
mov
std
stc
push
cmpsl
cwtl
mov
pusha
std
fwait
in
test
mov
sbb
pop
aas
imul
xor
pop
ret
inc
jmp
xor
adc
outsb
iret
dec
test
sub
mov
dec
stos
cmp
nop
int
xchg
icebp
inc
test
dec
sub
cmp
in
cmp
adc
test
xor
mov
cld
rcrb
push
cli
and
lea
cmp
cmp
pop
sti
jmp
inc
sub
dec
mov
aam
cmp
jmp
das
in
stc
sbb
pop
cmpl
fnstenv
nop
cwtl
mov
iret
out
cmc
loopne
sub
mov
pop
pop
out
sbb
mov
pop
push
lcall
mov
mov
xlat
pop
scas
cmp
pop
xor
data16
and
cltd
xor
pop
sbb
je
pop
ret
and
xchg
rcll
cmc
add
inc
cmp
dec
mov
jg
rclb
gs
test
pop
pop
mov
push
mov
jecxz
and
add
dec
aam
mov
ljmp
orb
mov
and
or
inc
je
nop
fbld
cmc
sbb
ja
dec
cmp
inc
xor
jg
xchg
mov
jmp
popf
inc
mov
mov
subb
aad
shll
add
adc
dec
nop
adc
jnp
or
movsl
push
dec
sbb
dec
dec
add
jge
or
push
pop
out
adc
enter
imul
lret
xor
out
cltd
bound
mov
je
and
mov
mov
mov
adc
sbb
fdivl
push
cmp
shll
dec
data16
sti
je
add
idiv
shrl
push
push
mov
das
arpl
repz
or
dec
imul
aad
jmp
adc
pop
mov
mov
fs
enter
in
xchg
push
jae
dec
subl
gs
test
mov
repnz
cmpsb
hlt
dec
add
xor
push
sub
vmwrite
inc
pushf
out
cmpsl
in
fs
xor
sub
and
or
jne
insl
push
and
mov
push
mov
sbb
and
ds
mov
mov
popa
pop
pop
into
push
sub
push
stc
out
mov
add
cmp
mov
xor
mov
sub
test
and
pusha
test
jge,pn
rcrl
std
cmpsl
xchg
les
xchg
push
inc
std
loopne
xor
inc
out
xchg
fsubs
and
call
cmp
shll
daa
or
inc
xchg
mov
nop
mov
out
xchg
push
movsl
mov
sub
aaa
push
add
add
test
push
popa
push
fdivl
cs
imull
pusha
insl
cli
daa
std
into
mov
repz
push
or
sbb
aad
addr16
test
xchg
sarl
imul
addb
cmp
xchg
xchg
jmp
push
jl
sbb
mov
add
mov
ljmp
inc
bound
or
int3
mov
sub
mov
bound
mov
ljmp
xchg
test
fdivrl
xchg
fs
ja
subb
loopne
and
push
sbb
loop
fcmove
loope
mov
push
push
pop
and
pop
adc
and
inc
or
ljmp
xor
insl
jo
movsl
xor
stos
mov
push
sahf
bound
and
fbld
decb
mov
int
push
push
repnz
pop
sbb
add
mov
cmc
dec
mov
and
jns
mov
mov
pop
negb
mov
pop
mov
rcrl
cmp
pop
inc
test
xor
mov
pop
fstp
push
push
int
push
js
mov
jnp
fimuls
mov
leave
movsl
shrb
shll
popa
sub
sub
jmp
mov
jg
out
add
pop
les
mov
xor
inc
mov
xor
aas
jb
jbe
arpl
mov
pop
xchg
scas
inc
mov
lock
xchg
or
mov
or
fdivrs
xchg
lea
movsl
pop
jg
loopne
in
fildl
sbb
and
ss
cli
xchg
out
dec
dec
xor
mov
andb
popa
imul
mov
dec
mov
jp
aam
xchg
sub
and
lcall
jno
xchg
inc
syscall
jp
adc
push
stc
ret
std
fwait
mov
popa
sub
or
push
mov
fisubl
xor
loopne
imul
stos
sub
xor
out
mov
outsl
xchg
fwait
cmp
leave
cld
sbb
fidivs
aas
lods
stos
daa
out
or
pop
fcomps
sarl
pop
pushf
nopl
mov
movsb
ja
testl
lret
jno
jns
sahf
sub
xchg
dec
je
dec
mov
cmc
call
dec
jnp
in
and
cmpsl
clc
dec
sbb
in
adc
std
mov
pop
and
pop
mov
aaa
fadds
enter
dec
inc
insb
jbe
rcll
lcall
out
cmp
aaa
lcall
mov
aas
hlt
rcrl
pusha
jmpw
popa
fcoms
pop
cmpl
cwtl
add
cmpsl
addr16
mov
mov
lods
push
setg
mov
xor
fsubs
xor
dec
ds
jns
push
push
out
cltd
push
rclb
loope
adcb
dec
test
out
into
cli
movsl
pushf
bound
ret
test
ja
xchg
subb
push
ficomps
fdivrs
inc
or
scas
or
insl
sbb
sbb
fsts
sysexit
sub
push
imul
jle
or
dec
js
and
push
outsl
or
ret
xlat
adc
scas
lcall
dec
in
sbb
stos
pop
pop
jmp
andl
mov
push
mov
push
adc
mov
mov
sub
xor
aaa
adc
mov
sub
lds
je
adc
sub
push
and
orb
adcb
mov
cmp
or
sbb
jmp
sti
or
cmp
sub
jp
push
lcall
sub
cmp
or
sbb
jmp
sti
or
cmp
sub
jp
push
lcall
sub
aas
lret
sbb
out
sbb
or
cmp
cs
pop
mov
outsb
jae
push
mov
mov
sub
or
fwait
sub
sbb
popa
cmp
pop
xor
das
cs
or
sbb
insb
push
push
adc
pop
loopne
pop
mov
in
out
cld
jnp
into
int3
fimuls
cmp
pusha
push
sbb
insb
outsb
jl
dec
dec
pop
pop
lods
scas
mov
sahf
lods
out
cld
dec
mov
ficoms
les
jb
sbb
push
dec
pop
pop
enter
in
stc
sahf
xchg
sbb
jo,pn
or
jne
push
xchg
ja
jmp
mov
fistl
sbb
fcomps
js
mov
inc
in
cld
add
inc
enter
pusha
adc
fwait
mov
shlb
sub
stc
or
jecxz
scas
inc
push
outsl
mov
push
mov
arpl
out
mov
push
lock
ret
xchg
outsl
jl
mov
pop
mov
or
into
adc
push
ror
xor
sub
and
pop
xlat
fisttpll
fstps
cld
add
rclb
mov
loop
xchg
sbb
mov
add
sti
scas
cmp
fcmovu
fbstp
push
or
sbb
mov
jle
dec
cli
pop
push
es
movsb
out
idiv
dec
fdivl
js
fs
add
jle
add
lret
out
lret
stc
fcomps
int3
mov
cmp
push
jge
add
cmp
pop
lret
out
lret
mov
in
xchg
lea
mov
push
insl
insl
dec
jnp
outsb
jl
dec
dec
pop
pop
lods
scas
mov
sahf
in
out
cld
dec
into
sub
cmp
or
sbb
insb
outsb
jl
dec
dec
pop
pop
lods
scas
mov
sahf
in
out
cld
dec
into
sub
lcall
mov
cwtl
lds
out
pop
mov
jno
sbb
adc
aaa
mov
or
sub
jmp
inc
out
sbb
arpl
jae
enter
gs
mov
xor
pop
sbb
out
in
or
cmpsb
sarl
lret
adc
push
cmpsl
xchg
jb
adc
push
sub
insb
or
sub
jp
inc
out
std
ja
inc
jg
and
into
adc
pop
rorl
cli
cli
aas
ljmp
pop
hlt
insb
arpl
fdivl
or
push
out
cmp
and
clc
imul
loop
rclb
and
cmp
add
inc
fcomip
dec
dec
iret
fcomp
clc
sbb
jb
or
sub
movsb
into
cmp
inc
insl
and
and
xchg
fdivl
sbb
shl
lret
mov
test
xor
inc
xor
rcl
lret
decl
mov
jbe
shrb
lods
outsb
aas
ret
imul
jnp
sbb
in
call
jl
push
and
clc
xor
xchg
sub
push
sbb
xor
sbb
aad
mov
mov
mov
xchg
cld
xchg
or
cli
cs
add
inc
call
jo
repnz
mov
testl
pop
or
shlb
dec
add
call
repnz
xchg
sbb
outsb
cmp
movups
testb
lods
loop
int3
adcl
out
fs
mov
xchg
jb
fldl
sub
mov
js
jp
sbb
inc
jb
cmc
cmp
xchg
cmp
xor
push
les
cmpsl
adc
sbb
xor
and
jl
and
fwait
cmp
call
pop
sbb
or
scas
int3
xor
adc
rcl
xchg
lret
fisubs
lcall
pop
xlat
mov
daa
out
adcl
rorb
addr16
or
mov
imul
pop
mov
inc
lock
mov
mov
lret
lds
in
gs
es
dec
stos
out
sbb
into
jge
mov
aas
dec
out
lods
fldcw
pop
data16
mov
mov
cmpl
sbb
cmp
notl
in
sbb
inc
mov
out
pop
cmp
fmul
xchg
dec
scas
sub
pushf
bnd
xchg
mov
les
pop
fisubrs
sub
mov
dec
sbb
orl
jns
dec
fsubs
push
dec
pusha
aas
xchg
adc
jmp
faddp
ret
xchg
sub
pop
out
fsubrs
inc
and
mov
fbstp
pushf
inc
cmp
in
subb
imul
cltd
and
xlat
pop
pop
into
xor
lods
cmp
push
jns
mov
shrl
and
sbb
cmp
sbb
fs
jo
out
sbb
pop
dec
pusha
int3
ljmp
pushf
arpl
xlat
mov
xorl
push
mov
pushf
push
pop
cmp
dec
in
test
mov
outsb
adc
xor
xor
lret
push
push
or
cmp
aaa
adc
cwtl
cld
pop
lret
pop
and
xchg
out
inc
or
data16
push
repnz
das
les
inc
xchg
fcoml
push
out
sub
dec
rorb
and
and
test
or
xchg
mov
push
push
jns
out
movsb
cmp
inc
lods
fildll
sbb
jb
and
jnp
pusha
ja
shrb
sub
imul
dec
fwait
mov
mov
fldl
ss
repnz
mov
jns
call
dec
sahf
push
dec
cwtl
mov
mov
inc
shll
sti
call
icebp
sahf
mov
imul
dec
sarl
mov
or
std
scas
aaa
in
mov
pop
test
sub
inc
pop
popa
push
pusha
push
ret
sub
sub
and
iretw
shlb
jbe
and
cli
repz
stos
iret
pusha
push
or
mov
mov
aad
insb
imul
aaa
sub
aam
outsl
clc
mov
push
nop
cmp
cs
fldcw
outsb
add
and
jb
sub
cmp
in
movsl
mov
jl
jae
stc
mov
cmc
gs
dec
repz
shll
push
sbb
es
mov
and
mov
jl
imul
pop
shll
adc
lahf
and
loop
lds
fmull
inc
incb
pop
fwait
jnp
sbb
mov
sub
sbb
fistpl
sub
dec
jmp
mov
adc
or
jmp
cmp
pop
btr
push
sahf
ljmp
mov
adc
js
mov
daa
mov
and
inc
lock
shlb
test
sbb
jo
lods
or
daa
xchg
add
cmp
mov
push
adc
xchg
leave
sub
fdivrl
insl
mov
into
lock
test
cli
sbb
sbbb
or
pop
daa
fwait
loopne
sahf
pop
test
push
fadds
arpl
iret
call
stos
out
push
xchg
adc
pop
dec
sarl
std
popa
pop
jo
push
dec
or
pop
cmp
dec
int
stc
pop
movsl
push
in
pop
cltd
fidivs
mov
in
pop
loop
lret
clc
imul
out
cvttps2pi
pop
sub
pop
adc
outsl
adc
dec
dec
les
stos
mov
or
aad
cmpsb
or
mov
mov
add
sub
xchg
mov
mov
stos
mov
idivb
inc
push
adc
inc
inc
sbb
lods
jl
aas
and
push
fs
push
or
imul
sub
aam
add
xchg
daa
xchg
divb
fsubrs
mov
push
loop
push
pop
inc
fs
inc
mov
add
jae
dec
pop
loope
push
sbb
in
sub
aad
bound
mov
cmp
jmp
inc
das
or
jecxz
andl
outsl
cmp
push
sub
fstpt
into
and
push
mov
xlat
add
test
cmp
hlt
test
in
subb
jbe
xlat
ljmp
sub
cmpsb
xchg
test
dec
out
jns
imul
pushf
xlat
sbb
pushf
dec
push
andl
xchg
inc
lods
and
or
imul
jo
ja
or
mov
mov
adc
ja
mov
xchg
push
sti
mov
out
sub
or
cwtl
mov
ror
fistps
and
mov
aad
orl
and
lret
mov
lea
and
movsl
lcall
imull
push
loopne
mov
push
xor
xlat
xchg
xchg
sub
add
jecxz
mov
jns
inc
push
pop
bound
das
or
xor
xchg
and
outsb
pop
rolb
ret
or
pop
loop
cmpsl
enter
jno
or
fsts
jge
lcall
cmp
mov
rol
or
leave
inc
jb
jge
popa
sbb
cs
int3
lret
mov
imul
or
push
sbb
popf
out
push
cmc
xchg
mov
popf
cwtl
ja
xchg
lods
cmc
xor
mov
mov
pop
hlt
mov
aaa
sub
cld
jmp
aaa
lods
fs
cld
stos
jl
out
pop
testb
add
xor
and
sub
and
cmp
cli
cmp
arpl
out
pop
sbb
jb
pop
xor
add
xor
pop
notl
dec
jnp
pop
and
dec
and
sbb
lcall
cmpsl
xor
push
cmp
lret
icebp
inc
lock
mov
cmp
xchg
loopne
or
jmp
in
adc
lahf
sub
std
movsl
and
dec
or
insb
dec
dec
mov
in
mov
sbb
pop
adc
test
pop
pop
clc
adc
shll
pop
xchg
daa
movsb
sbb
ret
inc
mov
iret
sarl
sbb
lea
pushf
jb
inc
add
xchg
sub
fdiv
xchg
mov
jl
or
cmp
mov
xor
pop
arpl
mov
lock
mov
lea
imul
adc
dec
sbb
repnz
or
sahf
push
xor
clc
fmuls
dec
cmp
fs
out
xor
sbb
test
and
mov
inc
aas
arpl
and
push
fnstcw
xchg
and
int3
sbb
inc
ja
mov
ret
fists
push
xchg
pop
cmp
int
cltd
inc
es
rcll
add
xchg
enter
ljmp
push
xchg
sbb
cltd
in
mov
bound
mov
ret
xor
pop
ffree
lods
fldenv
les
push
cmp
fildll
int
push
sbb
icebp
mov
xchg
imul
adc
push
xchg
xchg
jae
cmp
adc
cli
sub
shl
or
xchg
pop
or
push
jmp
hlt
jne
adc
add
movsl
sbb
lret
ret
out
add
rcrb
inc
lcall
inc
out
adc
addr16
addl
outsb
push
mov
gs
pop
shr
dec
shrb
orb
cmp
gs
hlt
addr16
data16
inc
sub
es
cmp
push
popf
push
shll
imul
and
cmpsl
loopne
xchg
pusha
sub
in
les
push
sub
mov
xor
xchg
test
add
out
pop
lahf
fnstsw
mov
ljmp
pop
sbbb
scas
jnp
adc
cli
xor
mov
dec
sub
and
jp
mov
mov
shrb
xchg
out
pop
mov
lea
movaps
cwtl
or
cmpsb
fstps
xor
insl
mov
out
call
xor
push
in
out
icebp
nop
pop
sub
xchg
jno
lret
es
bound
push
jp
dec
pop
push
iret
push
jb
ds
les
inc
pusha
enter
push
and
mov
mov
insb
rcll
loopne
dec
imul
add
or
es
or
sub
out
sbb
bnd
popl
or
mov
add
lea
movups
add
push
jecxz
ficoms
popa
inc
test
stos
arpl
out
jno
pop
popa
dec
inc
fcmovne
ja
shl
xchg
xor
sbb
xchg
fidivrl
enter
jb
sbb
mov
pop
les
adc
aaa
loop
xor
mov
add
rcrl
mov
and
sub
push
rorb
sbb
or
mov
mov
pusha
push
mov
inc
mov
and
jae
cmc
lock
and
pop
aam
pop
jmp
outsl
jo
add
ficoml
mov
icebp
sbb
or
and
ficoms
call
popf
push
and
aaa
mov
movsl
out
ret
lret
push
call
pop
lods
out
imul
jo
cld
leave
jno
popa
lods
push
mov
or
nop
and
cmp
push
aas
xchg
rolb
pop
mov
xlat
arpl
out
insl
cmp
out
mov
push
sub
sbb
inc
lahf
aas
in
mov
loope
outsl
push
pushf
ret
dec
mov
cmp
iret
les
movb
outsb
pop
mov
dec
mov
dec
sbb
push
fdivs
sbb
es
je
leave
js
jmp
sub
jne
mov
lahf
xlat
add
ss
movsb
xchg
mov
pop
lea
cmp
xchg
lret
out
fst
gs
jmp
out
mov
and
jnp
test
rorb
pop
incl
cwtl
mov
fisubrs
jns
fistpll
mov
sub
xor
movsb
gs
imul
xchg
std
push
xchg
sar
and
and
push
and
pop
dec
fcoml
gs
push
insl
fbld
jl
sahf
xchg
inc
jns
jb
ljmp
pop
inc
insl
in
sbb
inc
rorl
jnp
jnp
stc
ret
ds
add
stos
dec
xor
jecxz
inc
xor
sbb
addr16
xchg
js
and
pop
adc
sbb
and
cmp
cmp
rolb
add
dec
add
fistpll
mov
push
fcoml
hlt
or
sbb
mov
mov
cmp
jno
lcall
xor
movsb
mov
cmp
dec
int3
jmp
dec
jp
repz
mov
out
and
out
dec
loopne
lock
loopne
cmp
adc
push
pop
sbb
lods
push
mov
rorl
aam
lds
xor
orb
add
mov
dec
mov
xor
sti
pop
mov
dec
mov
hlt
inc
and
aad
insl
and
cmpsb
cmpsl
pop
mov
dec
shlb
dec
repz
xchg
cmp
iret
sub
and
adc
ja
sub
add
repz
into
in
icebp
pop
cmp
mov
scas
lds
sub
push
lret
and
jae
push
int
mov
adc
cmp
fdivl
inc
mov
xchg
jns
sbb
cmp
sub
add
scas
aaa
jb
cltd
and
idiv
xchg
lahf
movsl
shlb
out
loop
mov
in
test
jns
pop
xor
xor
pop
mov
mov
jae
dec
mov
adc
inc
inc
mov
in
adc
jmp
repz
icebp
cmc
inc
pushf
mov
pusha
pop
fdivrs
push
sbb
cmpsl
jne
decl
cltd
push
lods
push
scas
fisubrl
repnz
dec
lret
ljmp
loop
mov
sub
jecxz
push
popl
cmpsb
movsl
xchg
addr16
fldt
inc
paddq
inc
jno
xor
cmp
cltd
mov
dec
inc
pop
outsb
xchg
inc
dec
pop
outsb
pop
mov
adc
inc
pop
push
loopne
dec
pop
dec
and
jecxz
push
push
inc
clc
int
ja
mov
fxch
mov
jmp
test
inc
int
pop
xor
jb
jge
add
inc
ret
ljmp
in
sub
fstp
das
push
loopne
faddl
xchg
push
xor
xor
leave
cmp
sahf
pop
pop
jg
mov
popa
scas
dec
mov
push
imul
jg
pop
je
mov
mov
insb
shr
test
lcall
cmc
ret
dec
pop
cmp
add
mov
and
int
mov
mov
in
jb
cltd
jmp
fdivs
xor
arpl
push
test
mov
gs
stos
add
shlb
in
jmp
js
fwait
xchg
repnz
test
das
fsubrs
rorb
psubq
cmpsb
popf
js
mov
xchg
xchg
addl
xchg
jle
test
mov
xchg
fcomps
xchg
mov
test
push
invd
pushf
cli
mov
push
mov
sub
movsb
jnp
dec
arpl
loop
xchg
aam
gs
js
testl
mov
add
cmp
jg
xchg
and
or
fwait
inc
mov
std
clc
js
sub
fimull
lahf
inc
cmp
add
vsqrtps
push
fidivl
inc
dec
cs
in
or
arpl
repz
xchg
dec
mov
pop
outsl
bound
adc
cltd
shlb
in
leave
sub
jbe
andb
xchg
cmp
lcall
test
xchg
adc
mov
fwait
inc
lea
ljmp
in
sub
popl
or
insl
clc
push
outsb
imul
pop
and
fnsave
dec
and
lret
cmpl
out
insl
push
ja
jge
pop
mov
lds
call
mov
pushf
xchg
cmpsl
jo
call
xchg
lcall
xchg
int3
insb
out
daa
cmpsl
es
xchg
mov
xor
out
sub
and
mov
xor
stos
fstl
xchg
mov
sub
mov
cmpsl
les
push
and
lcall
dec
cmp
push
mov
cmp
lea
mov
scas
call
push
ret
cmc
stc
sub
lock
fwait
incl
mov
lods
push
nop
sbb
hlt
repnz
daa
mov
mov
out
out
das
mov
mov
sbb
fcoms
xor
push
cmp
arpl
outsl
jmp
les
dec
push
movsl
add
cwtl
push
jb
sbb
pop
jg
cmp
inc
jmp
or
cmp
pop
push
clc
mov
iret
mov
adc
push
clts
out
pop
push
into
ror
gs
gs
jp
rcrl
mov
or
sti
sub
scas
jo
cmp
sar
cmpsb
ret
and
test
mov
fwait
cmp
popf
push
fsubrl
adc
imull
xchg
jno
repz
je
push
addr16
scas
cmpsl
rolb
pop
mov
aad
div
rorb
stos
fisttpl
mov
nop
mov
xor
test
lea
inc
adc
das
inc
dec
cltd
jb
push
in
int
pop
jns
xlat
mov
test
mov
add
repz
adc
pop
test
insb
out
bound
aam
sahf
inc
add
cmp
arpl
jo
sub
xor
mov
xchg
mov
movsl
cld
xor
and
mov
pop
and
and
push
mov
push
mov
ljmp
push
repnz
int
push
aas
fisttps
cld
add
or
out
jae
pop
sbb
inc
pop
mov
setl
jnp
jb
jp
xchg
jbe
gs
dec
inc
push
dec
mov
out
jp
sub
rclb
mov
popf
icebp
pop
jle
pop
call
cmc
sub
mov
mov
jp
mov
sub
add
push
dec
int3
mov
dec
stos
adc
notb
test
enter
stos
rol
pop
int3
cltd
xorb
fs
scas
adc
mov
fmuls
mov
sub
fisubl
adc
lret
icebp
jb
jge
mov
xor
in
sub
fnstcw
std
pop
test
movsb
sub
push
sub
or
adc
sub
cld
inc
ffree
pop
sub
or
or
cmp
les
mov
in
xor
divb
lret
fstpl
outsb
or
push
test
clc
insb
mov
mov
jnp
ret
rclb
mov
aas
xchg
cmp
clc
sub
stos
cmc
lods
xchg
xor
shr
fmull
dec
xlat
es
or
es
mov
sub
gs
push
jg
repnz
imull
inc
inc
scas
pop
fldcw
xor
inc
push
hlt
xchg
push
cld
jmp
imul
rol
clc
jge
stc
es
imul
and
add
adc
push
push
arpl
popa
scas
or
loop
fldl
and
out
fiaddl
sbb
das
pop
aas
inc
fisubl
push
or
and
and
mov
mov
adc
xchg
mov
inc
push
adc
sti
pusha
and
ljmp
or
sbb
jae
cmp
xor
mov
jb
pop
xor
nop
pop
dec
test
push
fcmovnb
out
push
outsl
lock
xchg
scas
sbb
sub
push
into
lcall
sub
mov
mov
imul
sbb
pop
cld
mov
les
lods
call
outsl
cltd
or
sub
cltd
jmp
cwtl
cli
mov
aad
push
adc
mov
cli
sub
fdivrl
xchg
outsb
inc
rorl
inc
movsl
decb
out
pop
clc
mov
push
mov
int3
test
mov
in
adc
cmpsl
or
mov
xor
out
mov
xchg
or
call
aaa
mov
js
xorb
arpl
mov
jmp
jecxz
into
adc
pop
lret
push
mov
outsl
xor
mov
imull
fucom
stos
mov
jge
push
repz
out
popf
add
call
xlat
dec
repz
lcall
sbb
jmp
loopne
pop
or
enter
inc
inc
test
mov
xor
xor
sbb
test
push
pop
loope
mov
pop
push
dec
mov
ljmp
es
dec
xlat
xlat
pop
push
dec
rorb
jmp
push
mov
sbb
in
in
shll
sarb
adc
leave
int
stos
imul
imul
add
mov
xchg
push
adc
push
mov
jl
rolb
pop
sbb
lret
fadd
or
aas
add
adc
push
xchg
pop
mov
push
xchg
pop
xchg
mov
fstpl
out
filds
fsubrl
pop
push
ds
push
sbb
insb
outsb
jl
dec
dec
pop
pop
lods
scas
mov
sahf
in
out
cld
dec
into
sub
cmp
or
sbb
insb
outsb
jl
dec
dec
pop
pop
lods
scas
mov
sahf
in
out
cld
dec
into
sub
or
insb
mov
cld
outsb
jl
dec
dec
pushf
pop
lods
cs
sahf
in
out
in
dec
into
xor
cmp
pusha
ds
push
cmp
insb
outsb
insb
jle
dec
fcompl
scas
inc
adc
mov
xor
and
jns
imul
hlt
push
pop
xor
cmp
jp
mov
lcall
test
cli
jns
imul
cmp
pop
sbb
jp
mov
lcall
test
cli
jns
imul
cmp
pop
sbb
jp
mov
mov
leave
mov
in
out
or
lock
cltd
cwtl
xchg
es
push
stos
or
std
int
add
popa
lea
xor
loop
add
mov
movsl
out
hlt
jb
aaa
insb
cli
es
ss
into
ljmp
pop
fnstsw
mov
pop
rcll
dec
mov
jp
lret
cld
adc
imul
push
dec
cmp
pushf
orl
je
insb
daa
push
mov
mov
adc
fildl
cld
mov
pusha
dec
sub
adc
mov
mov
add
leave
jmp
stos
test
ret
sbb
ljmp
scas
loope
jmp
decl
cli
mov
imul
cmp
pop
sbb
jp
mov
lcall
test
mov
xor
cmp
or
stc
out
repz
mov
mov
push
or
cmp
and
je
add
mov
mov
lahf
cld
xchg
sbb
imul
sub
push
jp
mov
lcall
test
cli
jns
imul
cmp
pop
sbb
jp
mov
lcall
test
cli
jns
dec
pinsrw
jmp
sub
incb
xchg
fcomps
icebp
lock
cmp
sbb
cmp
dec
mov
cmpsb
cmpsb
je
jge
inc
inc
aaa
inc
leave
mov
or
shlb
loopne
int3
clc
mov
jno
or
jo
jb
cmp
shrb
insb
add
mov
xchg
popa
into
cltd
ret
and
dec
xchg
or
aaa
xchg
mov
aaa
cmp
pop
sub
lahf
push
adcb
mov
mov
fcoml
cmp
xor
xor
clc
push
jle
es
hlt
bnd
push
xchg
xchg
divb
popf
rclb
in
and
lret
in
popf
fidivl
sbb
and
pusha
fsts
cwtl
inc
and
mov
sbb
or
in
add
addb
dec
adc
and
push
push
lock
pop
popa
into
pop
test
jge
xchg
mov
mov
fsubrs
push
ret
gs
fcmovu
lahf
push
mov
xchg
mov
adc
add
es
inc
fistpll
iret
shl
push
xor
push
in
shrl
xchg
testb
mov
jae
sbb
cmpsb
jg
mov
bound
and
and
and
fisttpl
push
out
gs
imul
out
jmp
cmp
ds
daa
sbb
jp
into
dec
inc
movsb
lods
cld
push
xchg
cld
es
stos
dec
dec
mov
jno
lea
out
push
cmpsl
push
imul
ffreep
cmpsb
mov
bound
inc
xchg
js
pusha
pop
mov
jge
or
pop
outsb
xchg
test
dec
mov
xchg
loope
int3
dec
out
sar
imul
nop
or
lahf
cmp
jns
and
js
inc
mov
rorb
lea
inc
push
fistl
mov
jb
enter
xorb
pop
inc
push
das
jae
and
lods
pop
in
push
loopne
jp
push
mov
lahf
les
subb
jp
scas
adc
lock
in
sbb
cmp
sub
jb
push
pop
cmp
daa
fwait
or
dec
in
or
push
xor
lods
inc
ljmp
pop
and
rcrl
sub
repz
cmpb
aas
mov
insl
daa
or
adc
mov
mov
pop
ljmp
adc
mov
lods
xor
arpl
rclb
inc
fs
push
xchg
out
sub
jecxz
cli
int3
mov
je
jmp
or
mov
adc
std
fldcw
cmpsb
push
in
aad
cwtl
jg
ja
jle
loopne
ja
sub
iret
or
into
sub
xor
sbb
in
mov
jbe
pushf
mov
xlat
and
jne
jno
pop
imul
into
mov
lret
jmp
ds
cmc
jle
adc
adc
inc
mov
out
jge
mov
daa
push
pop
xchg
dec
mov
adc
xor
scas
sbb
add
movsb
ret
sbbl
add
out
cmp
cmp
inc
cld
cli
jl
popf
fwait
pop
enter
clc
mov
or
inc
jbe
das
mov
pop
int
movsl
ljmp
xor
ret
sub
fldenv
in
add
or
shrb
cld
xor
adc
lods
jp
iret
clc
pop
pop
mov
push
stc
scas
mov
cmpl
popa
cmpsl
test
xor
pop
sbb
jnp
lock
add
out
add
add
inc
mov
insb
fsts
sarl
lea
add
je
scas
lahf
push
mov
xchg
mov
adc
int
mov
sub
fcoms
pop
imul
xchg
inc
pop
dec
cmc
xchg
or
or
inc
cltd
out
ljmp
push
push
rcll
arpl
hlt
sar
out
adc
js
jmp
pop
inc
and
je
inc
jge
pop
mov
outsl
pop
dec
sub
outsb
pop
mov
aam
ret
gs
mov
nop
stos
xor
dec
stos
mov
xchg
lds
scas
pop
out
cwtl
mov
hlt
push
lcall
jp
stos
ja
lods
in
jbe
loope
jle
out
outsb
aam
sbb
scas
pop
loop
ret
cwtl
adc
and
dec
cmpl
aas
jb
mov
daa
ret
mov
cli
jmp
xor
lcall
mov
sbbb
test
fidivrl
cmp
sbb
mov
loope
mov
add
xor
dec
mov
rcrb
ret
addl
jns
and
xor
jne
lds
pop
mov
js
jne,pn
insl
or
pop
pop
andb
leave
push
and
inc
and
pop
inc
sbb
dec
jge
dec
lds
cmpb
push
dec
or
jg
lahf
addb
jecxz
leave
push
inc
je
aaa
divb
xchg
or
shrb
mov
in
xchg
sbb
mov
aas
add
imul
jmp
xchg
xchg
sbb
int
pop
je
cmp
ja
mov
xchg
mov
cmpsl
jbe
idivb
push
sub
add
cmp
cli
mov
nop
test
call
mov
push
jno
ret
imul
sbb
bound
dec
dec
into
mov
xor
fdivr
cmp
das
mov
xchg
push
pop
pop
push
jo,pt
ret
push
inc
mov
pop
mov
cwtl
popf
ljmp
dec
cmp
sub
push
cmpb
mov
or
and
orb
lock
or
test
insl
hlt
aas
mov
lea
call
aad
jg
jne
and
xchg
int3
inc
cmp
lock
jl
inc
inc
int3
lahf
sub
pushf
jb
lret
mov
shrb
mov
push
xchg
add
std
mov
repz
mov
add
add
das
inc
stos
jbe
xchg
das
pop
fstpt
cmp
decl
insb
lods
mul
add
out
jnp
popa
dec
enter
and
mov
add
in
jns
ds
aam
shll
dec
test
jle
xor
scas
sarl
adc
testb
loopne
in
cmpsl
stos
clc
mov
cmc
add
lock
jg
test
shr
das
push
or
jmp
push
xchg
ljmp
stos
mov
aad
mov
sbb
insb
js
cmpsb
mov
push
mov
test
push
cld
or
test
lds
mov
movsl
pop
je
mov
test
jp
rolb
pop
cmpsb
add
push
mov
dec
in
sbb
mov
push
in
cmp
je
xlat
lahf
jo
jns
xchg
cmpsb
mov
data16
loop
bound
add
jno
ficoml
jle
stc
aas
addr16
wrmsr
sbb
push
jl
lret
out
cltd
pop
icebp
push
fisttpl
and
jb
cli
out
pop
add
shlb
push
ljmp
cmp
negb
sub
fidivrl
cmpsl
mov
xchg
ja
and
jb
into
push
flds
aad
test
lcall
cwtl
lds
filds
arpl
scas
mov
dec
fs
jb
rcrl
loop
icebp
adc
repnz
fstl
pop
jl
push
dec
imul
mov
dec
adc
pop
and
ds
test
test
fldt
xchg
pop
mov
lret
cmpsb
mov
mov
push
sub
dec
mov
xchg
mov
fabs
pop
push
iret
repnz
rolb
out
test
inc
adc
push
mov
aas
pop
les
mov
cmp
xor
mov
loopne
jmp
push
adc
mov
dec
xlat
push
pop
mov
sbbb
flds
mov
addl
out
jecxz
ss
insb
or
xchg
sbb
or
and
mov
and
out
inc
out
pop
cmp
repz
mov
mov
lahf
jnp
out
es
xchg
mov
push
fwait
shl
cmpsl
and
scas
xor
push
mov
pop
xor
pushf
cltd
fildl
xchg
and
and
repz
pop
imul
fstpl
mov
mov
loopne
mov
mov
les
or
ljmp
std
fcompl
push
or
add
int
jg
sahf
rcr
lret
jo
pusha
pop
lret
and
fstps
mov
dec
inc
mov
cmpb
lahf
push
ss
sub
sub
enter
cmc
sub
pop
out
sbb
fwait
adc
test
push
repnz
aam
stc
cmpb
mov
ret
rolb
iret
loopne
inc
xchg
pop
outsl
jl
or
into
sub
push
add
dec
mov
fstpt
dec
mov
ds
popa
fsubrl
popa
test
sti
daa
pop
push
cwtl
xor
iret
fidivrl
sbb
mov
lock
push
push
mov
mov
push
arpl
lahf
lcall
mov
push
push
mov
xchg
or
cmp
ja
cmp
and
mov
das
xor
sub
pushf
xchg
mov
jne
jb
clc
inc
sahf
ss
dec
ret
aaa
mov
adc
mov
sahf
xchg
lock
ds
mov
push
shr
jg
inc
and
enter
out
les
jl
inc
xor
push
pop
xor
shll
or
js
mov
jb
addr16
loop
inc
push
xchg
cmpsl
outsl
jl
stos
stos
sbbb
dec
mov
inc
mov
cld
inc
and
pop
sbb
mov
push
dec
xchg
lods
push
mov
xchg
sub
ds
cmpsb
mov
jo
ret
jge
pushf
rorl
mov
stos
shll
mov
fs
les
xchg
fimuls
and
push
cli
ds
jno
pop
dec
push
jecxz
adcb
das
arpl
xchg
notb
jle
dec
dec
mov
and
out
or
rcrl
jl
shlb
bound
adc
aam
jmp
addb
mov
negl
daa
sbb
adc
jb
das
mov
testl
imul
mov
jnp
cmp
mov
hlt
cmp
std
cs
loop
mov
adc
leave
mov
adc
jg
call
mov
test
hlt
cli
mov
inc
sbbb
jno
mov
les
jmp
ret
movsl
mov
popa
inc
movsb
cltd
sub
cs
lods
pop
xchg
in
es
xor
adcl
rolb
stc
pop
mov
adc
sbbb
fldcw
out
push
shlb
xchg
in
add
jl
adc
adc
mov
addr16
lods
ljmp
nop
mov
bound
adc
stos
scas
pushf
sbb
in
xlat
push
jg
pop
jne
mov
fnstcw
add
xor
loope
jp
mov
dec
push
sub
adc
mov
sbb
dec
pop
sub
mov
mov
test
mov
mov
jle
cmpb
cmp
cmp
xor
xchg
jb
cmp
movsb
dec
mov
jge
loope
push
xchg
jecxz
pop
lret
inc
sbb
or
loopne
repnz
pop
lods
mov
mull
mov
bound
aas
hlt
jae
daa
data16
repnz
xorl
lahf
pop
lods
out
icebp
lock
or
lahf
cs
rep
incb
fnstenv
stos
pusha
mov
sbb
outsl
mov
sti
andb
stos
mov
arpl
cmp
daa
jne
sbb
shlb
stos
ja
movsl
ss
push
insb
movb
into
pop
dec
mov
loopne
push
xchg
cmpsb
aas
sahf
jl
push
test
aam
mov
loop
adc
cmp
cmp
test
pop
jb
sti
sub
stos
jl
mov
enter
cld
cmpsl
std
mov
clc
xchg
in
mov
jbe
or
add
sbb
and
repz
iret
out
dec
ljmp
cmpsb
das
xchg
idivl
idivb
inc
lods
lcall
loop
jecxz
movsb
daa
jp
lds
adc
dec
ds
fistps
dec
and
add
sub
pop
mov
cmpsl
movd
xchg
popl
jl
cmpsl
sub
cmpsl
int3
xchg
jae
out
outsl
jp
jmp
repnz
sbb
lods
mov
daa
push
xor
ljmp
and
jae
xorb
sti
jmp
and
pop
lock
stos
and
nop
push
push
aam
push
inc
rcrb
imul
or
pushf
repz
icebp
and
sbb
fadd
or
cmp
mov
je
mov
adc
popa
adc
sbb
cs
lea
aaa
xor
xchg
mov
add
push
or
xor
lds
cmp
adc
popa
lds
sub
leave
daa
or
lock
sarb
jmp
gs
pop
jno
ja
jg
les
or
inc
add
aam
push
mov
jno
mov
adc
mov
lods
mov
add
xchg
push
cmp
inc
test
jmp
sbb
dec
das
std
enter
std
in
mov
imul
pop
sbb
mov
mov
cmp
xor
negl
add
mov
pop
push
xlat
ror
in
cld
pop
stos
cltd
adc
or
test
pop
out
cmpsb
mov
pop
pop
je
cmp
pop
ret
iret
or
test
jae
stos
add
push
dec
pop
xchg
paddw
stc
aam
sti
push
or
mov
mov
aad
or
jb
pop
cmp
or
jg
outsb
fs
js
icebp
in
dec
mov
or
ss
xchg
pushf
xchg
inc
dec
popa
xchg
jo
xor
cmc
xor
int
lcall
cmp
sbb
xchg
int3
pop
fdivl
dec
fxch
js
insl
xor
mov
orl
outsl
inc
ficoms
mov
inc
push
test
mov
loope
outsb
dec
mov
out
sahf
mov
fwait
movsb
jecxz
enter
mov
cmp
mov
pop
mov
test
lock
ss
arpl
mov
and
xchg
hlt
stos
xor
stos
std
mov
mov
mov
sub
cmc
sahf
sbb
adc
inc
or
push
sub
bound
and
in
testb
nop
push
push
pop
imul
roll
rol
clc
call
mov
imul
or
test
mov
and
inc
std
mov
jae
push
es
cvtpi2ps
outsb
push
dec
cmpb
inc
inc
stos
out
jo
ret
out
dec
add
sbb
and
inc
insl
rcr
test
add
insb
idivb
xchg
sub
cmp
mov
pushfw
pop
xor
xor
shl
es
insl
arpl
dec
lcallw
jae
jb
ds
popa
dec
negl
sti
outsb
je
inc
or
mov
add
ds
das
pop
lret
cmp
mov
mov
and
outsl
repz
mov
cmpsl
lock
xor
repnz
in
fists
and
arpl
imul
cmp
pop
push
imul
xchg
fidivrs
lds
inc
jb
loope
and
sub
or
or
mov
jp
dec
pop
loop
xlat
outsb
mov
sub
adc
lcall
xorl
inc
stos
xchg
inc
adc
test
aaa
mov
pop
lahf
mov
jb
jbe
inc
cwtl
xor
js
mov
bound
mov
dec
rcl
cld
cmpsl
dec
das
add
pop
dec
loope
sub
push
push
jp
mov
lret
cmp
inc
loop
push
add
or
xchg
pop
cld
aas
or
lahf
in
lret
scas
adc
lods
and
nop
sbb
or
xorb
mov
add
inc
pop
shl
shr
in
hlt
scas
xchg
ss
ljmp
lret
add
shlb
mov
push
lea
add
ja
jp
negl
mov
out
cltd
lods
mov
je
pop
add
sub
out
xor
addl
add
inc
lods
add
cmp
lret
mov
iret
inc
xchg
adc
adc
xchg
mov
sbb
popf
add
mov
lods
test
mov
jns
mov
out
xchg
jecxz
mov
cmpsb
xorl
adcl
iret
lods
or
mov
push
mov
faddl
mov
xchg
xchg
xor
fucomi
cwtl
sbb
cmp
mov
stc
test
push
xor
lods
sbb
scas
cld
nop
xchg
enter
mov
fs
and
mov
lret
mov
pop
sub
dec
icebp
inc
mov
inc
shrb
fistpll
aaa
jno
fsubr
addl
jge
xchg
push
iret
mov
cs
gs
rorl
pushf
push
lds
nop
xlat
loope
lods
push
adc
jle
call
cltd
cmp
dec
xchg
cmp
cld
out
or
clc
fnstenv
sbb
sub
in
cs
and
das
sbb
lcall
sub
mov
in
jbe
push
popl
ljmp
aaa
xor
mov
ret
cmpsl
and
mov
dec
dec
sarl
mov
gs
inc
loopne
push
fs
int3
mov
mov
call
cmc
xchg
xchg
lds
aad
nop
out
lret
fwait
adc
and
push
dec
subl
daa
roll
rorb
pop
aad
pop
mov
dec
cmp
pusha
psubusb
dec
jp
adc
in
and
cmpsl
mov
cmp
cs
daa
gs
mov
sahf
insl
and
xor
or
cmp
cmp
cmpsb
jmp
pop
push
std
mov
xchg
ret
or
inc
dec
mov
aas
xchg
aad
lods
out
int3
rcrl
mov
inc
add
cli
inc
je
mov
popf
pop
icebp
sub
push
or
enter
mov
fwait
sub
scas
mov
push
adc
out
loope
insb
push
jbe
mov
jge
lods
aas
push
insb
out
and
je
mov
xchg
mov
jnp
shl
and
mov
and
push
hlt
inc
scas
jg,pt
and
push
push
scas
jnp
nop
add
xchg
sbb
sub
lret
push
jae
in
push
leave
scas
stos
lods
lock
sub
add
pop
add
xchg
pushf
inc
adc
insb
pop
mov
test
jb
nop
and
add
pop
jmp
lahf
prefetch
lods
pop
rol
jbe
fisttps
inc
lds
push
loopne
insb
xchg
call
jecxz
xor
mov
insb
pop
in
imul
and
jnp
mov
mov
arpl
mov
cmp
mov
xlat
mov
sbbb
fwait
mov
mov
xor
xchg
push
xor
aam
cmpsb
jl
cwtl
and
in
mov
std
insl
lret
daa
and
fldt
scas
jl
or
mov
mov
jbe
push
aad
pop
mov
mov
push
mov
mov
inc
fstpt
xor
cmp
test
dec
es
iret
rcrl
ljmp
cld
jle
inc
sub
inc
mov
loop
xchg
and
sbb
ljmp
arpl
cltd
push
mov
cltd
out
mov
xor
ds
out
sti
out
xlat
jl
xchg
xchg
jl
arpl
js
or
lcall
mov
pusha
xsave
inc
sar
stos
dec
iret
mov
loop
outsl
rclb
pop
and
divps
orl
adcl
inc
outsl
xchg
addl
imull
and
out
push
sbb
ret
cmp
imul
rclb
subl
ja
ljmp
icebp
pushf
mov
leave
mov
andb
fstl
daa
adc
insl
jne
add
inc
repnz
sub
mov
outsl
jecxz
push
cwtl
addr16
mov
jle
xchg
push
sub
and
stos
push
jns
mov
pop
scas
lea
ljmp
xchg
das
add
loope
andl
loop
ficoml
dec
and
sub
mov
or
mov
clc
aas
inc
movsl
inc
xlat
jge
cmp
push
clc
sub
pop
xor
ss
mov
xchg
roll
inc
and
xchg
push
adc
cli
ret
fsts
loop
aam
or
and
xchg
or
imul
inc
sub
rcll
lea
fs
add
or
addl
push
negb
test
adc
mov
dec
shlb
lret
push
imul
test
hlt
and
sub
into
scas
mov
xchg
cmp
sti
jl
in
pop
sub
cmp
pop
sbb
jp
mov
lcall
test
cli
jns
imul
cmp
pop
sbb
jp
mov
lcall
test
cli
jns
jmp
cmp
imul
fldcw
test
cli
jns
imul
cmp
ficompl
ljmp
jae
leave
int
inc
fldenv
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jmp
sub
cmp
dec
cld
jns
jns
dec
test
cmp
or
sbb
jmp
sub
cmp
imul
mov
or
sbb
jmp
sub
cmp
imul
fadds
pop
mov
ja
mov
inc
stos
cmp
imul
in
andl
leave
test
cmpsb
bound
xchg
cmp
push
mov
andb
lahf
std
push
les
adc
jmp
jb
add
aas
testl
sub
fists
adc
lock
mov
mov
insb
insb
flds
dec
clc
cmp
test
add
xchg
imul
leave
push
daa
or
sbb
push
jge
dec
mov
shll
jns
test
pop
push
sarb
jmp
mov
xchg
mov
cmp
dec
js
jbe
adc
cwtl
adc
mov
sbb
adc
jmp
stc
sbb
sub
cmp
imul
mov
or
sbb
lods
sub
in
das
fsubrs
sub
xor
mov
ljmp
cmp
and
cltd
sbb
or
sbb
dec
cmpsl
insl
fdivrs
sbb
mov
addr16
jns
mov
dec
test
cmp
or
sbb
jmp
sub
cmp
imul
mov
or
sbb
jmp
std
sti
jae
adc
cmp
pusha
push
add
jmp
mov
push
xorb
lcall
out
push
inc
je
cmp
or
rorl
and
movsb
pop
pusha
fidivs
std
sub
cmpb
xor
gs
sbb
dec
aaa
xor
mov
cli
pop
pushf
scas
dec
cld
mov
rcrl
fistpll
lret
loope
push
in
loope
cmc
loop
mov
sbb
ds
cltd
dec
mov
xlat
cmp
mov
aaa
lret
stos
adc
or
int3
lcall
hlt
shrl
mov
and
jl
imulb
cli
cmp
cmp
mov
fsubp
lret
hlt
js
int3
rcrb
sarl
xchg
call
out
mov
inc
xor
push
and
jmp
mov
jmp
nop
inc
imul
push
pop
xchg
repnz
xchg
sub
mov
ljmp
xchg
xchg
adc
jp
jecxz
dec
loope
mov
mov
inc
lods
add
shl
pop
pop
or
out
hlt
rcrb
inc
jo
ret
inc
xor
divl
sub
add
mov
jns
insl
or
adcl
cs
stos
cld
pop
pusha
call
and
shl
cmp
mov
xorb
bound
aad
add
and
jnp
insb
cmp
push
insb
or
dec
stos
push
ljmp
mov
or
repnz
popa
jnp
jo
das
xor
pop
mov
sbb
sbb
lods
test
scas
lock
stc
sbb
repz
jne
adc
popf
or
idiv
out
scas
cwtl
idivb
fisubl
pop
call
mov
jae
imul
pop
call
xchg
xor
mov
cli
int
andb
in
push
sbb
cmp
xor
or
movb
les
pushf
xchg
mov
jle
inc
adc
ss
sti
js
push
lret
ljmp
test
mov
in
lcall
and
insl
sti
xchg
loope
cld
push
adc
fnstsw
jns
cmp
fmuls
sbb
pop
out
xchg
ret
sbb
cmp
lahf
push
push
pop
mov
lods
pop
frstor
fldenv
xor
aad
xor
imul
mov
int
sbb
fucomi
scas
in
scas
mov
loopne
push
xchg
loope
cmp
pop
sub
arpl
xor
sbb
inc
xchg
test
pop
jg
sbb
int
movsb
into
inc
inc
stos
in
adc
push
xlat
pop
popl
scas
or
inc
mov
repz
cmpxchg
sbb
push
addr16
out
movsb
stos
shr
fcoml
mov
hlt
adc
popf
adc
mov
xchg
pop
push
adc
shll
orps
push
jne
jg
popl
or
cld
xchg
push
pop
pop
pop
outsl
mov
mov
pushf
and
cltd
adc
sub
xor
hlt
push
adc
mov
stos
or
mul
jnp
repz
je
sub
adc
mov
in
xor
movsl
cmpsb
cmpsb
movsl
bound
add
pop
sub
pop
sbb
cmpsl
jns
pop
fists
scas
add
push
dec
lea
outsl
push
je
jle
dec
lret
xchg
in
scas
sti
std
cwtl
mov
sub
inc
cs
mov
pop
mov
call
cmpsb
in
enter
mov
or
fs
call
aas
mov
mov
ds
push
push
fsts
cmp
imul
sti
add
stos
movsl
fs
in
mov
or
scas
adc
ss
arpl
mov
push
lods
movsb
jg
sbb
mov
jmp
pop
sbb
clc
mov
and
mov
push
orb
ljmp
dec
sahf
dec
sub
test
stos
sahf
mov
xchg
outsb
inc
lock
insb
fisubs
xchg
hlt
mov
dec
xchg
arpl
pop
pop
outsb
sbb
sarl
inc
je
int
cmp
sahf
or
add
ja
push
and
in
sub
insl
cli
int3
pushf
loop
pop
jge
ss
outsb
mov
imul
sub
pop
or
out
adc
test
push
imul
sbb
insl
cmpsl
mov
iret
mov
lahf
outsl
pop
insb
cmc
es
out
sub
push
dec
jg
xor
jo
dec
bound
int3
xchg
mov
cmp
mov
arpl
jge
push
cmp
std
adc
jne
sub
mov
out
mov
fbstp
inc
add
mov
push
insb
aam
pop
cld
jg
push
fbld
arpl
scas
pushf
mov
je
inc
in
sbb
pop
in
fisubrl
xsha256
cmpsb
push
in
je
add
cmp
daa
and
lret
pop
test
imul
in
fcoml
mov
cltd
aad
pop
xor
lock
pop
pop
jmp
push
push
dec
cmc
stc
pop
xor
sti
mov
lcall
fmulp
imul
ret
mov
leave
fadds
fisttps
mov
mov
xchg
sub
add
pop
popf
cmp
out
aas
popa
inc
rcrl
int3
test
xchg
push
lret
les
add
rclb
arpl
push
pop
xor
rol
or
sub
xchg
addr16
loope
mov
pop
pop
out
and
mov
inc
loope
fisubl
pop
xor
idiv
jb
insb
cmp
sub
shl
inc
stc
mov
in
lahf
inc
sti
or
mov
mov
out
sub
pop
aaa
ja
sbb
cs
int3
rorb
mov
cltd
jl
stos
bound
lock
cli
aad
fs
mov
les
imul
push
adc
push
add
mul
insb
or
xchg
iret
call
std
testb
repz
fstps
jmp
loop
push
adc
mov
mov
pop
jp
adc
out
push
into
pop
mov
push
pop
sub
cli
sub
aaa
adc
and
pusha
flds
push
cmc
add
mov
push
xchg
out
jno
in
push
or
jle
lds
cld
sub
pop
leave
mov
dec
xchg
fiaddl
mov
mov
negb
and
pusha
ret
cli
push
outsb
cmp
outsb
sub
or
jae
push
filds
or
ror
push
push
movsl
cltd
js
cmp
pop
dec
sub
enter
inc
adc
xchg
sub
mov
adc
gs
out
or
fldl
ja
sbb
xlat
inc
mov
test
sub
icebp
lret
into
mov
push
loopne
mov
pop
loop
inc
xlat
jae
cmp
es
sti
int3
lock
imul
mov
mov
mov
arpl
dec
cmp
pop
daa
rcll
shl
add
int
jns
enter
xor
jbe
ret
dec
jns
dec
or
mov
jg
fs
cmp
addl
int3
pop
int3
xor
jge
dec
lock
cli
or
mov
jecxz
ret
int3
ljmp
mov
int
ucomiss
mov
cld
inc
mov
mov
cmp
lods
mov
out
pushf
les
dec
add
aad
lods
dec
xor
aas
jg
fnsave
cmc
sbb
stos
movsb
into
sub
xchg
inc
outsb
sub
push
pop
mov
xor
mov
mov
xor
cmc
ret
outsl
pop
inc
xor
mov
jno
pop
cmpsl
repnz
mov
inc
das
outsb
pushf
mov
sbb
push
data16
clc
aas
rorb
xor
jno
lea
pushf
mov
and
xor
aas
cmpsl
sub
repnz
and
ljmp
adc
and
fistl
jp
fldt
js
jbe
xor
loopne
loop
add
mov
lods
adc
test
movsb
mov
jge
inc
lock
call
inc
in
pop
sbb
jno
mov
or
mov
cmc
fisttpll
mov
xchg
fs
ret
adc
test
cwtl
adc
lods
popa
sti
aam
mov
pop
xor
out
int
mov
test
mov
sub
fs
aas
pop
mov
adc
ret
stos
mov
pop
jl
aaa
pop
xchg
int
mov
enter
mov
out
cmpsb
push
fmull
xor
ja
shl
mov
lret
or
or
push
jbe
xor
scas
cmp
and
gs
add
jne
int
ret
addr16
add
mov
into
int3
loopne
cs
imul
adc
into
mov
aam
pop
ljmp
xchg
divl
mov
push
imul
scas
cmp
sarl
or
repz
add
insl
mov
rcrb
push
push
mov
adc
popa
jae
test
cmp
add
aad
push
es
jmp
pop
push
cmpsb
xlat
insb
jne
movsl
pop
mov
mov
icebp
int3
add
jns
jb
lea
enter
jecxz
in
pop
push
fs
mov
scas
inc
jb
lahf
cld
pushf
mov
sbb
mov
sbb
nop
rcl
fcmove
movsl
jae
das
mov
pop
and
jb
xor
adc
add
stos
cmp
rcl
mov
push
in
leave
push
int
popf
sbb
sbb
fwait
or
pop
fisubrs
jg
xchg
stc
popf
js
lods
insb
sarb
bound
mov
add
push
mov
movsb
imul
mov
add
sbb
or
sub
xchg
xchg
in
cmp
imul
push
std
insl
test
add
aam
pop
stos
fucomi
shl
xchg
cwtl
outsl
repz
insb
lods
jge
dec
je
mov
cmp
fabs
mov
lds
push
cmpsb
push
sub
in
pop
dec
sbb
gs
mov
jbe
addl
add
xor
xor
jno
in
cld
adc
mov
mov
stc
fnstsw
fisubl
jns
xor
das
imul
rolb
cmp
ret
clc
cmp
cmpsb
mov
push
shll
ss
pop
out
je
pop
dec
xchg
mov
xor
or
adc
or
jo
vandps
push
push
mov
ljmp
push
pop
mov
sub
pushaw
les
push
ret
inc
movl
add
and
mov
data16
mul
ret
in
enter
aaa
xchg
push
js
cmc
repz
dec
clc
ror
icebp
adc
dec
or
pop
mov
fnsave
push
sub
cltd
popa
outsl
and
or
dec
mov
push
fldl
dec
clc
push
add
je
jmp
incl
and
cmp
cmp
aad
xchg
mov
stos
mov
inc
xchg
push
push
inc
roll
lods
push
fidivs
xor
mov
add
shrb
leave
jns,pn
test
ss
push
jg
add
mov
in
jo
dec
jecxz
pop
test
and
xchg
and
cmp
xlat
cmp
outsl
lahf
hlt
adc
xor
xchg
ss
stos
stos
xchg
mov
testb
mov
jle
cmp
scas
xchg
icebp
sub
movsb
rcr
cwtl
xchg
xchg
jle
or
dec
adc
jmp
arpl
xor
pop
rcll
stc
clc
clc
and
dec
das
sbb
ja
mov
mov
jecxz
mov
das
aas
mov
pop
int
int
cmpl
pop
rcrl
fldenv
iret
in
pop
loopne
jns
sub
inc
shlb
pop
stc
xchg
cmp
int
inc
inc
sbb
lea
test
add
std
sbb
pop
ljmp
stc
adc
loopne
pop
xor
imul
jl
andl
aaa
es
or
sbb
sub
cmp
pop
push
jl
push
or
dec
jne,pt
imul
in
mov
in
add
call
xor
shrb
jne
add
push
movsl
icebp
fwait
loop
mov
jmp
cld
shll
int
incl
xor
sbb
mov
std
js
mov
mov
outsb
push
pop
xchg
xchg
repz
jg
cli
rolb
mov
inc
xchg
inc
rclb
add
pop
in
call
mov
push
in
shr
adc
arpl
add
fmul
lret
sbb
push
cmpl
sub
insb
pop
nop/reserved
pop
and
es
dec
and
cmp
dec
sub
inc
and
cmpsl
jecxz
pop
out
ss
addr16
ficompl
cmp
lcall
out
cli
stos
jae
mov
inc
popa
inc
jecxz
scas
mov
call
dec
and
mov
sub
in
outsb
je
adc
lret
addl
in
addl
rclb
dec
mov
test
mov
and
cmpsl
or
in
stc
mov
pop
push
add
int3
xlat
inc
pop
clc
sub
sub
fldt
leave
add
push
adc
lcall
test
pop
incl
in
push
xchg
push
lcall
lock
imul
xor
stc
lock
or
leave
push
adc
inc
jns
out
nop
mov
outsl
xor
sub
mov
sub
xchg
sub
inc
adc
mov
out
mov
fdiv
sbb
fcoml
mov
jl
push
data16
mov
add
mov
jmp
lahf
pop
mov
sti
int
mov
stos
cld
xchg
stc
jge
add
in
jnp
mov
xorb
and
scas
mov
shl
pop
inc
mov
mov
sahf
mov
jb
dec
push
add
push
push
mov
lods
cmp
lcall
jns
mov
sub
daa
int
add
cmova
and
or
push
cltd
sub
inc
mov
out
jle
ret
push
adc
mov
pop
insl
push
andb
cld
jl
lret
fwait
add
sbb
cltd
jge
xchg
ffree
and
jecxz
lcall
mov
mov
dec
or
rolb
and
repnz
xchg
pushf
leave
daa
pushf
repnz
xchg
push
inc
leave
dec
jg
scas
push
cwtl
int
sub
mov
mov
cltd
push
push
push
cs
lods
or
mov
add
mov
lret
xor
jmp
add
aaa
mov
adc
adc
cmpsb
cmp
mov
inc
sti
jne
mov
dec
inc
pusha
int
bound
push
lret
sub
mov
stos
lds
sub
ss
mul
cwtl
outsb
jg
or
and
sub
push
sbb
jnp
call
mov
fs
cltd
and
dec
roll
fistps
or
lret
incb
mov
loope
dec
daa
push
sti
aas
cmp
out
inc
adc
addr16
aam
cmpsl
das
mov
sbb
hlt
loopne
rol
mov
dec
mov
jecxz
cltd
dec
test
ss
or
mov
insb
pushf
and
and
ljmp
lcall
jb
fwait
out
std
cmp
mov
in
lret
adc
jnp
fmull
mov
mov
pop
adc
cmp
cli
xorl
lods
mov
pop
pop
add
cs
ror
ljmp
cmc
dec
shlb
fidivrl
push
fwait
daa
xor
orb
hlt
out
repz
pop
sbb
xchg
es
mov
cmp
or
jp
pop
push
mov
add
movsb
shlb
cld
ljmp
push
xor
inc
call
mov
jbe
mov
ljmp
mov
insl
and
xlat
fdivrs
pushf
add
jp
cmp
xchg
inc
lock
mov
cli
or
mov
js
push
fidivl
fs
pushf
ss
adc
repnz
shr
pop
push
cmpsl
dec
xchg
jnp
lret
cmp
cmp
add
xor
mov
mov
test
lods
inc
xor
movb
xchg
adc
adc
mov
pop
outsl
mov
mov
mov
add
test
jge
push
std
std
out
inc
lods
sub
or
push
test
cmp
clc
out
push
sbb
jnp
cmc
arpl
jb
fdivrp
mov
adc
faddl
sbb
mov
add
cli
aam
fwait
dec
clc
fbld
sbb
sbb
notb
jge
test
pop
sahf
mov
and
cmp
arpl
shrb
pushf
fmull
pusha
daa
fsubrs
push
inc
daa
xchg
and
mov
fbstp
int
push
and
test
xor
or
push
mov
out
push
shll
jge
mov
das
out
jns
dec
andl
or
mov
mov
cld
sub
sbbl
push
aaa
ljmpw
out
push
lea
mov
loopne
sahf
xor
push
daa
mov
jns
jno
push
inc
shl
xrelease
xchg
mov
lea
stc
in
daa
insb
out
mov
pushf
gs
push
pop
fldcw
or
das
in
xor
xchg
fcoms
xor
adc
cwtl
or
stos
fdivs
rorl
inc
clc
push
ret
adc
jl
lods
mov
pop
dec
adc
outsl
pop
adc
divl
xchg
cmp
cltd
fwait
and
outsb
enter
shrb
adc
jnp
aas
repnz
mov
or
pushf
sbb
aas
mov
mov
scas
imul
mov
lds
mov
in
add
gs
stos
jmp
xchg
jp
cmp
mov
add
outsl
or
mov
mov
in
fs
outsb
add
xchg
dec
mov
jns
shrl
pop
xchg
pop
sbb
shlb
mov
in
fwait
inc
inc
jae
or
xchg
sbb
out
jmp
mov
sbb
mov
pop
dec
shll
xchg
cld
push
cmc
insl
and
lods
lret
pop
aam
inc
pop
adc
sbb
outsb
and
jmp
aam
in
push
lds
sub
jle
or
pop
add
jb
dec
cmpsb
and
xor
cmp
movsb
dec
dec
adc
repnz
xchg
cs
popf
inc
inc
inc
pop
sub
xchg
sbb
mov
not
jl
int
rcr
shrb
out
dec
es
ljmp
fucom
out
mov
mov
es
test
loop
inc
push
mov
enter
lods
sbb
mov
mov
and
lahf
outsb
pop
psubsw
cmp
popf
fbstp
dec
popf
cwtl
aad
call
mov
xchg
hlt
inc
imul
or
or
mov
and
mov
loopne
xchg
mov
fsts
adc
out
mov
sub
test
sarb
mov
dec
or
or
pop
adc
dec
loopne
das
mov
cmp
pop
push
mov
xlat
sub
xchg
aas
rolb
add
ret
les
loope
int
mov
push
in
or
xchg
add
push
jns
jmp
add
xchg
out
fst
sbb
inc
cli
or
jecxz
dec
lock
sar
orb
idiv
rolb
sub
imul
and
ja
inc
outsl
lods
and
xchg
filds
lds
in
mov
test
repz
cmp
movsl
mov
mov
popa
sub
icebp
adc
jecxz
negb
dec
pop
mov
xchg
dec
sbb
xchg
test
sub
adc
xor
stos
push
xchg
sub
jmp
ret
mov
iret
dec
mov
pop
stos
push
jne
roll
xchg
shr
mov
push
fstpl
fbld
or
lahf
lret
push
insl
xchg
mov
fimull
jle
hlt
mov
aam
sbb
sub
jl
in
aaa
fisubrs
jp
inc
xlat
mov
lock
push
rolb
jg
js
xchg
mov
and
sbb
iret
aas
add
or
cltd
jne
pop
test
pop
jle
add
shll
lcall
stos
add
pop
push
lods
pop
xchg
dec
dec
and
popf
sub
rcr
stos
addr16
push
add
loopne
adc
outsb
aas
shll
loope
in
xchg
push
add
mov
pop
sbb
xchg
test
lahf
sub
or
xchg
adc
hlt
imul
mov
xlat
repnz
inc
jge
inc
das
dec
adc
mov
test
test
ss
dec
cltd
and
push
mov
int3
movsb
cmpsl
les
xor
push
jne
jmp
mov
sbbb
adc
xlat
sub
cmp
imul
mov
or
sbb
jmp
sub
cmp
imul
mov
or
sbb
jmp
sub
cmp
imul
mov
or
sbb
jmp
sub
cmp
imul
into
pop
inc
mov
notb
out
mov
fwait
pop
stos
daa
mov
ss
and
ja
xchg
xchg
sub
pop
aad
out
testl
inc
fcmovnu
jmp
sti
add
xchg
mov
cmpsl
cmp
imul
pop
stos
mov
imul
sti
outsl
or
hlt
pop
clc
pop
les
sub
incl
cli
jns
push
shlb
jo
faddl
jnp
scas
ret
test
sub
cmp
pop
andl
push
push
jge
mov
inc
fldt
mov
xchg
aad
les
cmp
push
icebp
adc
cmp
or
shll
sub
xlat
call
mov
mov
pushf
sti
mov
js
lret
dec
sbb
pop
sub
adc
ljmp
je
mov
arpl
adc
outsl
jo
or
adc
sbb
or
ss
or
dec
daa
jmp
dec
xchg
fistpl
scas
scas
or
lods
out
jae
pop
fwait
out
mov
fistl
mov
sbb
mov
decl
pop
das
imul
cltd
out
push
clc
pop
in
fs
sbb
push
jg
jnp
jle
pop
sarl
int
sbb
std
inc
out
push
enter
scas
sub
sbb
jl
push
ret
mov
xchg
pushf
in
push
fwait
push
in
ja
push
mov
fistl
addr16
ja
xchg
xchg
sub
pop
xlat
imul
testl
inc
fistl
addr16
ja
xchg
xchg
sub
pop
xlat
imul
testl
fisubrs
je
cmp
inc
enter
push
sbb
push
jae
jecxz
jne
in
dec
mov
stos
mov
outsb
scas
push
xor
mov
mov
jb
mov
adc
cmp
repnz
mov
jb
inc
jmp
sub
les
jp
pop
stos
and
int3
fldpi
push
test
inc
mov
loopne
lock
mov
arpl
jnp
push
shl
pop
fnstcw
movsl
mov
in
daa
jge
dec
and
or
addr16
push
call
scas
dec
mov
negb
mov
xor
mov
jle
xchg
outsl
adc
or
mov
std
hlt
iret
add
pop
mov
lcall
lods
cmpb
lret
or
sahf
leave
outsb
push
xchg
mov
pop
fs
mov
mov
dec
repnz
mov
add
xor
mov
mov
rcrb
push
clc
mov
scas
lds
and
pmulhuw
adcb
xchg
mov
dec
cmc
pop
arpl
ret
data16
xor
pop
negl
imull
inc
or
dec
cmp
jge
add
mov
mov
ficomps
lea
push
fdivs
pop
mov
divl
mov
sub
mov
or
or
shlb
dec
jno
arpl
fwait
pusha
loope
cmp
push
adc
iret
outsl
pusha
cld
mov
das
lret
push
jecxz
mov
inc
popf
addb
shl
cmp
aaa
jne
mov
enter
mov
xorl
stos
sub
mov
pop
sbb
xchg
je
cmp
pop
adc
xchg
je
mov
and
xchg
imull
pusha
push
inc
pop
inc
fldlg2
mov
mov
aam
jmp
push
jle
push
jae
or
fldcw
pop
pop
cwtl
leave
std
push
xor
push
sbb
dec
insl
add
mov
shlb
add
mov
xor
fidivrs
cmovnp
hlt
lea
adc
addb
push
js
cld
add
movsb
xor
xor
fldenv
sub
mov
aas
iret
xchg
fisubl
aad
mov
popf
in
jae
jl
daa
loopne
sahf
fcoml
mov
in
jmp
lcall
push
fsubl
hlt
cmp
fbstp
inc
mov
inc
rorb
leave
push
dec
inc
mov
jno
addb
sub
mov
jae
dec
xchg
xchg
xchg
jnp
adc
popf
cmp
test
xor
pop
pop
andl
orb
mov
mov
xor
jp
lahf
pop
cmp
push
mov
aam
fs
pop
repz
add
icebp
mov
sub
xchg
adc
inc
pushl
push
mov
push
daa
lods
cwtl
mov
mov
push
in
xchg
cmp
sub
cmp
and
or
push
cmp
mov
out
pop
nop
mov
inc
rcll
into
or
enter
sbb
cmp
movsl
jmp
mov
inc
in
rorb
adc
cmpsb
mov
inc
mov
popf
jl
aas
mov
xchg
or
inc
lret
adcb
fs
rcrl
imul
pop
bound
dec
ret
mov
dec
jecxz
popl
pusha
daa
les
test
xchg
fistl
mov
movsb
pusha
add
xor
push
das
dec
fs
aad
sbb
and
adc
push
scas
or
rorl
fsts
jno
add
or
inc
shl
leave
popf
push
add
mov
inc
ss
sub
cmp
xor
out
xor
dec
je
inc
dec
mov
lods
sahf
test
jno
mov
call
ficoml
mov
idivl
in
loopne
lds
mov
in
loope
xchg
ljmp
push
cmp
push
jnp
lock
jne
inc
push
scas
jle
rcrl
xor
dec
xor
push
pop
jge
ljmp
xor
in
jl
lcall
mov
xchg
mov
push
loope
push
push
ss
add
rcrb
movsl
fiaddl
xor
leave
fstps
adc
push
test
pop
das
shrl
stos
in
ja
push
cmp
adc
rcl
sub
repz
adc
cmc
mov
popf
lcall
outsb
jno
ret
adc
loope
test
aaa
scas
pop
push
xchg
pop
clc
mov
test
std
add
mov
add
pop
aad
cmc
push
jge
pushf
pop
mov
popa
add
aad
dec
cld
loop
outsb
jne
stc
sahf
popa
push
sahf
cmp
in
pop
scas
mov
jne
push
sahf
nop
insl
insb
fadd
gs
pop
adc
loop
cmp
pop
inc
cmp
fsubl
pop
mov
sub
sbb
fnstcw
hlt
sub
inc
push
stos
xor
mov
iret
nop
xor
jmp
cmp
sbb
mov
rorl
sbb
leave
outsb
cmp
scas
movsb
out
and
adc
jo
clc
pop
pusha
add
mov
pop
or
adc
mov
jbe
cmp
aaa
sub
jmp
mov
imul
dec
js
lea
push
dec
cmp
lea
das
pop
mov
movsb
jae
lahf
inc
xchg
fisttpl
aad
lods
fdiv
mov
mov
push
imul
popl
insb
sbb
call
imull
push
jo
test
lahf
sar
cs
cmc
cmp
lret
lret
or
mov
das
mov
xor
dec
insb
scas
shll
outsb
arpl
imul
fsubl
inc
lds
or
sti
bound
scas
lods
stos
jl
shlb
jp
push
adc
notb
mov
sub
ret
das
push
ficoml
into
sub
fdivrl
testb
mov
jbe
xor
inc
repz
loope
mov
insb
push
dec
notl
or
pop
jg
inc
call
xchg
fs
cltd
test
sub
aas
outsb
xchg
inc
lcall
adc
xor
insl
and
sti
lret
decl
add
cld
loop
inc
loop
lods
jp
jo
push
and
mov
add
dec
sbb
pusha
es
std
cmp
lods
or
xor
aas
dec
fwait
xchg
cltd
xor
push
add
gs
push
sbb
jno
cmp
jmp
mov
cs
dec
mov
outsl
inc
bound
jb
or
push
int3
mov
sbb
sub
push
addb
xor
dec
orl
add
mov
das
scas
inc
inc
arpl
pop
mov
push
jmp
pop
sbb
or
xchg
dec
repnz
sahf
ljmp
cmp
jmp
ficomps
je
xor
xor
xchg
and
inc
mov
test
inc
mov
add
mov
out
mov
jp
push
out
mov
rcrb
fs
adc
stos
push
dec
lds
mov
xlat
scas
std
loope
lds
jns
cwtl
and
mov
ficoml
mov
daa
sub
xor
pop
xchg
pop
js
test
xor
add
or
sbb
dec
negl
mov
and
flds
dec
and
jge
xchg
jb
mov
test
cld
sub
fwait
leave
and
loope
dec
mov
fs
pop
sbb
insl
icebp
mov
pop
adc
sub
call
test
pop
xchg
icebp
jo
lea
sub
sbb
inc
push
sbb
lods
lahf
mov
inc
jmp
sub
add
fwait
inc
fdivl
adc
loope
or
into
movsl
aaa
mov
mov
cmc
jg
mov
out
push
push
xor
filds
mov
sub
movsl
fisubrl
sub
leave
icebp
xor
mov
ljmp
repnz
arpl
add
test
repz
dec
add
leave
or
mov
xchg
dec
xor
je
sub
insl
dec
lret
in
push
jge
mov
mov
push
fcompl
adc
scas
xor
je
jl
adc
pop
fists
es
scas
arpl
int3
test
sar
mov
mov
sbb
cwtl
fdivrp
dec
sarb
aas
jg
jl
or
ja
push
outsb
enter
ret
pop
lcall
dec
cli
lret
adc
dec
jmp
or
sub
adc
cmp
pop
stos
xor
into
das
or
clc
loope
stos
outsb
inc
pop
mov
jb
in
jmp
dec
outsl
xlat
lret
ret
xchg
pop
scas
dec
lods
in
or
in
inc
jbe
js
lahf
lds
ficomps
push
out
lret
mov
fldt
repnz
loopne
cmc
xor
sbb
pop
xchg
out
icebp
push
jno
push
xchg
ss
stc
fxch
fidivrs
mov
add
out
adc
adc
mov
sub
sub
andl
adc
rorb
mov
mov
popf
cld
xor
or
jb
ds
xchg
call
daa
add
imul
xchg
jg
fdivp
inc
enter
xor
bound
pop
addr16
sub
jge
lcall
mov
sbb
test
scas
push
push
xor
mov
dec
adc
lret
mov
push
sub
mov
mov
pushf
mov
lock
mov
or
jl
adc
loopne
mov
cmc
cmpl
pop
cltd
jb
sbb
mov
incl
add
call
sbb
xchg
pop
sub
repz
ss
loopne
mov
push
popa
and
idivl
push
inc
push
movsb
xchg
sbb
jne
cwtl
call
push
and
xchg
enter
clc
or
aas
mov
push
cmp
jnp
loopne
daa
add
loop
fidivs
push
xorl
shlb
or
stc
push
mov
sar
movsl
daa
loope
jbe
xchg
inc
add
push
mov
scas
orb
cmc
pop
sti
lret
lret
fs
adcl
lea
mov
sbb
pop
dec
imul
pop
push
mov
movsl
cmpsb
out
testl
lods
jb
jmp
inc
push
xor
jo
sbb
or
dec
ret
mov
test
test
pop
iret
lret
mov
mov
pop
sub
shrl
gs
rclb
out
pop
add
mov
mov
mov
test
icebp
je
aam
cmp
shlb
inc
jg
mov
cmp
cmp
data16
jg
movsb
out
mov
shrb
xlat
lret
jmp
aam
repz
outsb
rorb
jns
es
pop
out
mov
cs
repnz
or
das
cmc
xor
or
mov
xor
xlat
or
scas
and
insb
mov
pop
int
icebp
xor
lret
repz
push
imul
lcall
inc
aad
sub
pop
test
je
jmp
cmp
cltd
loop
mov
and
ret
sahf
pop
push
xchg
frstor
inc
mov
cld
enter
shrl
mov
xchg
cmc
push
cmp
into
push
jbe
jae
pop
scas
mov
ja
adc
mov
mov
popl
rcrb
jb
fdivrs
dec
cli
out
push
pop
mov
push
jg
mov
pop
orl
lahf
jne
xor
ret
or
sbb
imul
and
adc
pop
enter
jmp
pop
hlt
movsb
sub
sbbl
fstl
shl
cmp
pop
dec
mov
jmp
pop
nop
xor
mov
inc
scas
inc
sahf
or
stos
adc
push
add
sbb
popa
xchg
xor
ja
push
out
fdivr
lds
add
inc
jno
cmp
call
fisttpl
push
mov
cwtl
and
ret
dec
out
int
inc
adc
gs
add
scas
test
shrb
cmp
push
lahf
sbb
and
cmovg
cs
push
xor
cwtl
andl
mov
rol
int
test
pop
jbe
loope
sbb
addb
jne
das
xor
push
fmul
mov
pop
add
imul
push
lret
xorb
mov
decb
sbb
shlb
inc
xchg
xor
push
adc
mov
lods
push
xchg
mov
outsb
loopne
sbb
and
mov
pop
mov
cltd
mov
dec
xchg
push
and
js
add
test
fadd
movsb
sbb
adc
mov
pop
adc
rcr
outsb
push
inc
jmp
test
cmp
mov
adc
adc
imul
imul
es
pop
fsubl
movsb
push
xchg
pusha
into
adc
mov
enter
mov
add
push
pusha
out
std
dec
clc
or
out
xchg
xor
popa
fbstp
jg
pop
sub
and
sahf
into
daa
out
pop
adc
sub
stc
dec
fisubrl
jge
adc
sbb
mov
call
mov
pop
or
out
roll
xor
jp
sahf
xchg
fstpl
insb
lods
pop
fidivl
dec
inc
push
xor
jae
xchg
je
std
out
mov
loopne
hlt
pop
jge
leave
mov
mov
insl
addb
push
xchg
popf
xorb
or
jle
jno
and
xor
inc
loopne
sbb
shrl
xchg
fwait
insl
decl
inc
sub
scas
mov
mov
mov
arpl
inc
into
dec
rolb
inc
push
sub
pop
jle
test
push
pop
loop
ja
rclb
pop
stc
add
sub
inc
insl
fnstenv
and
push
mov
cltd
pop
pushf
adc
mov
mov
dec
testl
cs
shlb
aam
cmpsb
ret
sar
lahf
loopne
mov
inc
inc
ret
je
ja
add
jbe
rorb
xchg
jecxz
sbb
and
fisubl
lods
das
xor
push
push
mov
in
mov
jo
lods
mov
pop
pop
stos
daa
jle
mul
loopne
sub
sub
add
ret
or
loopne
mov
in
insb
negl
add
cmp
mov
xor
ljmp
jecxz
dec
sub
adc
xorl
loop
enter
jbe
arpl
scas
dec
push
scas
push
xor
enter
pop
incb
sbb
sub
sub
arpl
scas
dec
sbbb
rcll
add
pop
sbb
xchg
addl
aad
rolb
addr16
and
xchg
sbb
stc
add
fcompl
add
and
ret
sub
dec
popf
mov
ljmp
inc
xchg
pop
and
fcmovnu
xor
iret
aaa
js
push
popa
lock
dec
fbld
nop
mov
daa
mov
test
push
jbe
in
xchg
std
inc
in
rclb
adc
test
or
out
shll
test
cwtl
lret
mov
xor
xlat
insl
out
nop
sbb
jo
jle
add
fdivrs
pop
clc
mov
or
xor
mov
push
fs
cld
jmp
cmpl
dec
dec
mov
aad
mov
js
fisubs
and
jge
sbb
aaa
mov
cwtl
mov
add
and
sbb
test
lock
push
inc
pop
push
imul
out
cltd
adc
cs
stos
repnz
sub
loopne
addr16
cmpsb
cmc
insl
inc
hlt
add
in
ret
loop
out
cmp
push
xchg
punpckldq
in
js
ljmp
imul
fsub
movsl
add
xchg
ja
jno
add
int
fbld
lods
mov
andb
bnd
stos
shll
fnstenv
dec
push
mov
push
mov
xchg
insb
out
mov
rorl
loopne
push
jmp
lods
jl
test
adc
pop
aas
es
lods
sbb
jle
dec
enter
lcall
addr16
jmp
pushf
jb
cmpsb
jae
jle
sbb
daa
pop
mov
add
mov
pop
jno
sbbl
pop
jne
hlt
icebp
aam
sub
data16
daa
test
loopne
mov
dec
out
or
dec
or
pop
data16
jnp
pop
inc
jne
adc
mov
fmull
and
negl
and
inc
data16
and
shl
pushf
fdivs
push
pop
repz
jp
and
sub
test
repz
adc
scas
je
not
sub
in
inc
and
push
aad
xor
pop
cs
adc
lret
je
int3
call
call
addr16
jge
and
sti
fisttps
out
jecxz
fisubs
mov
loop
sahf
jecxz
add
xchg
les
xor
or
scas
test
cs
mov
sbb
cwtl
out
mov
jns
inc
cli
dec
sbbb
dec
dec
cmp
cmpsb
movsl
fstpl
aam
cmp
pushf
push
push
mov
mov
sbb
ret
vmovaps
aam
inc
push
pop
lods
pop
pop
ss
pop
scas
adc
and
add
addr16
pop
lock
and
adc
or
data16
pop
adc
in
imul
xchg
aaa
enter
jns
pop
in
jge
dec
jp
mov
cmp
jl
out
sbb
cltd
push
std
xchg
adcb
mov
xor
or
lcall
add
mov
push
pushf
mov
scas
nop
pop
stc
in
jno
loop
ljmp
std
xor
jno
xor
lock
adc
sbb
cmpl
jl
stos
jge
les
mov
enter
inc
xchg
aaa
cs
enter
mov
jg
sbb
aad
cmp
and
bswap
aad
xchg
loop
imul
cli
cmp
hlt
mov
fistpl
into
sti
dec
jg
xchg
jle
cmp
mov
cmpsl
push
outsb
dec
enter
into
push
mov
push
imulb
add
sub
sbb
cmpsl
scas
mov
mov
push
push
shll
pop
icebp
fwait
lret
orps
or
outsl
pop
gs
mov
pop
jge
push
push
frstor
cmp
pop
dec
and
js
pop
pop
jge
mov
fwait
daa
xchg
xchg
inc
ffree
sub
cmpsl
xchg
call
sub
mov
cli
stos
or
vaesdeclast
data16
jp,pt
push
cmp
fildll
lock
dec
add
xchg
xchg
xchg
mov
jecxz
stos
and
push
sti
mov
mov
daa
pop
push
mov
and
aad
stos
and
and
out
int
adc
and
jecxz
movsb
je
push
pop
mov
add
stos
test
sub
fistpl
cli
add
sbb
cmpsb
in
shrl
ss
xchg
mov
sbb
ja
ja
mov
push
arpl
jle
jno
cld
lret
push
pop
mov
sub
mov
mov
add
or
push
rclb
mov
inc
xor
sahf
adc
fsub
xchg
push
mov
xor
das
dec
push
iret
nop
addr16
les
test
fisubl
xchg
push
popa
xor
cmp
stc
iret
std
je
and
cmpsb
mov
or
add
jp
inc
inc
mov
cmp
or
std
scas
das
stc
mov
mov
aas
aad
cmp
pop
lea
inc
and
jp
outsb
fcmovbe
push
popa
dec
sbb
sbb
xlat
pop
dec
add
xor
push
mov
mov
leave
in
add
jge
lods
xchg
add
rorl
daa
lock
roll
add
fnstcw
dec
dec
shr
xchg
jl
sub
and
pop
xor
aad
xor
in
mov
fists
rcrb
addr16
pop
push
sbb
loopne
or
fimuls
loopne
xchg
inc
add
sbb
ja
outsl
out
cmp
stos
push
popf
pop
pop
dec
mov
mov
jg,pt
sbb
mov
cmp
jmp
insb
pcmpeqb
cmp
sub
mov
fcoml
lcall
js
les
ljmp
mov
mov
aam
sbb
add
and
jle
jae
outsl
imul
xchg
sbb
imul
cld
hlt
xor
sahf
add
stc
sbb
jge
stc
jnp
adcl
shrb
mov
mov
out
mov
and
in
dec
push
fadds
sbb
mov
or
pop
cmpl
mov
out
shll
pop
jg
movsb
lret
mov
stos
push
stc
xchg
mov
sub
call
dec
mov
push
jmp
sti
ja
xchg
xchg
sub
pop
xlat
imul
testl
inc
fistl
addr16
ja
xchg
xchg
sub
pop
xlat
imul
testl
inc
jmp
sti
ja
pop
sbb
dec
pop
xlat
push
jnp
mov
fwait
pop
stos
daa
mov
push
imul
ja
js
cmp
cmp
shrl
xchg
sbb
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
imul
ljmp
push
add
add
add
add
add
add
pop
or
push
add
mov
stos
add
add
addl
mov
test
movsb
add
add
dec
add
add
add
add
add
add
add
or
add
pop
add
add
insl
or
add
sbb
dec
add
into
add
add
add
add
push
movsb
add
add
add
add
add
add
dec
add
add
pop
add
add
add
add
add
add
add
add
add
add
jnp
enter
fadds
mov
jb
adc
mov
arpl
add
add
add
add
add
testl
jl
lds
add
add
add
add
add
add
testl
flds
add
jnp
mov
pop
add
mov
add
add
add
add
add
add
test
adc
xchg
add
add
add
filds
fldl
sbb
enter
add
add
mov
lret
add
add
jnp
mov
add
inc
add
add
add
add
lods
add
dec
add
add
add
xor
leave
add
add
add
add
add
add
dec
add
addb
add
add
add
add
add
add
or
add
add
add
add
add
add
mov
add
jnp
aad
add
add
testl
add
movsb
add
add
add
add
add
push
dec
add
mov
add
add
add
or
and
add
add
add
stos
add
add
add
add
add
cltd
add
add
add
adc
add
add
add
jnp
add
aad
jnp
cmp
add
add
add
fadds
jl
inc
add
add
add
add
test
or
ret
add
jnp
dec
add
jnp
sub
testl
sbb
mov
outsb
add
dec
add
add
sbb
filds
fldl
in
add
add
add
add
jl
dec
add
add
add
in
add
adc
adc
ret
add
add
add
add
xor
mov
xchg
push
add
add
inc
add
add
test
int3
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
adc
int
or
sbb
and
into
add
add
add
into
add
cmp
add
testl
jl
adc
mov
imul
ret
add
add
cmpsb
add
add
add
ss
add
filds
and
and
add
add
add
add
cmp
mov
pop
add
add
adc
add
add
add
push
add
add
add
add
int
bound
and
jb
mov
add
add
pop
add
add
rolb
add
add
addl
add
fwait
add
add
add
add
test
cmp
leave
or
imul
or
dec
or
inc
cs
push
or
lods
mov
icebp
inc
out
pop
cmp
dec
inc
lahf
mov
jl
daa
push
enter
lret
sub
push
pop
test
sub
out
cmc
cltd
aas
push
inc
movsl
ficomps
xchg
xchg
insl
ficompl
mov
mov
lahf
nop
aas
mov
insb
cld
sti
pop
imul
shrl
hlt
orps
mov
pop
pop
in
int3
jae
push
daa
xchg
push
aas
popa
out
or
dec
cld
imul
mov
lcall
sbb
out
addr16
pop
adc
add
sbb
test
in
js
dec
sbb
ja
xor
call
lods
cmp
mov
push
shll
mov
fs
push
inc
and
xchg
out
cld
popf
out
scas
repz
das
push
shrb
bound
orb
test
cs
outsl
mov
jbe
jns
push
adc
aaa
std
ljmp
and
or
push
pop
int
pop
bound
and
sub
in
inc
les
daa
dec
pop
cmp
sarl
fnstenv
xchg
rclb
xchg
inc
add
mov
xchg
mov
xchg
insb
mov
lea
push
out
pop
movsl
mov
pop
rcr
jmp
xor
int3
mov
cmpsb
jns
sbb
cmpl
jg
filds
les
es
jne
repz
fsubrp
ja
mov
das
cmp
fmull
out
cmp
out
adc
cmp
or
test
clc
jbe
sbb
and
inc
push
lahf
testb
cmp
mov
mov
cld
insb
mov
lods
leave
push
jne
test
std
lods
addb
jns
lock
divb
lock
je
or
mov
dec
data16
adc
jnp
pop
ret
inc
mov
stos
pop
int3
mov
pop
or
inc
jle
push
das
scas
dec
outsl
cmp
dec
aam
and
les
sub
imul
pop
insl
clc
aad
test
stc
movb
lret
sbb
and
cltd
clc
cmc
sbb
adc
imul
add
arpl
cmp
jno
popa
push
pop
out
jo
cltd
sbb
stos
adc
and
lahf
fdivr
xchg
fwait
inc
fistpll
mov
sti
mov
lds
inc
sbb
xchg
call
pop
or
std
cmpsl
in
pop
cltd
sub
icebp
stos
cltd
mov
push
mov
push
loope
mov
mov
stc
int3
jo
insb
sub
js
int3
xchg
cmp
loopne
cmp
xchg
xchg
lcall
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
