xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xor
ret
xchg
addl
xchg
ret
add
popl
push
mov
push
xchg
add
push
pop
push
xchg
add
push
xor
pop
xor
mov
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
pop
push
xchg
ret
push
popl
ret
xchg
xchg
xchg
push
pop
push
pop
mul
xchg
xchg
xchg
push
pop
push
pop
add
ret
pop
push
xchg
ret
push
xchg
add
ret
add
ret
push
pop
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
push
call
push
push
push
call
call
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
call
push
push
push
push
call
pop
pushl
xchg
push
push
push
push
call
push
call
call
push
call
push
push
call
push
cmp
jae
ret
pop
call
cmp
push
ljmp
sub
jne
xchg
in
out
dec
push
jp
pop
mov
fwait
inc
mov
leave
lods
shlb
aad
fisubrl
xchg
shlb
fcoml
dec
or
jae
ret
mov
adc
pop
jbe
and
hlt
stc
mov
push
rorb
pop
adc
clc
or
subl
mov
or
cmp
adc
push
cmp
insb
sbb
mov
jno
leave
repz
xor
lods
aam
pushf
mov
cmpsb
fdivr
adc
pop
inc
or
int
xchg
dec
jo
and
xor
das
or
sbb
jno
mov
or
pop
rcrl
cwtl
xor
sbb
cmp
imul
and
cmpsb
test
and
fildl
adc
dec
sbb
fimuls
sbbl
dec
push
lea
push
ret
cmp
mov
test
jge
dec
cmc
dec
mov
shr
loope
in
inc
shll
pop
sbb
sete
dec
push
lds
shlb
push
popa
and
pop
or
int3
or
sub
int3
mov
aas
push
or
shrb
push
into
xchg
cmp
and
jmp
jbe
lods
icebp
mov
inc
jne
sub
scas
outsb
xchg
sarb
add
mov
jae
in
push
lcall
xchg
cld
scas
inc
leave
xchg
xchg
push
push
dec
jmp
mov
or
mov
adc
add
push
dec
movsl
loopne
gs
ljmp
fcmovnbe
push
lahf
shl
pop
xchg
clc
popa
jnp
xor
push
mov
popa
insl
fnstsw
push
test
insb
int
in
sbb
mov
into
icebp
lret
jb
push
fsubs
aas
lret
imul
sbb
ljmp
imul
incb
bswap
push
sahf
popa
xor
jmp
loop
pop
imul
inc
fsubs
mov
or
stc
and
das
out
fnsave
jl
mov
pop
mov
leave
in
in
not
inc
adc
dec
iret
movsb
popa
popf
and
jno
xor
jns
and
mov
out
ds
sti
dec
cmpl
jg
dec
je
mov
inc
outsb
ret
test
cmp
inc
sbb
jle
test
mov
cld
lock
fwait
cmpsb
push
ror
lret
ja
dec
rcrl
add
push
cli
inc
xchg
leave
xor
lea
and
mov
f2xm1
adc
enter
adc
dec
fistps
xchg
das
jns
mov
push
loope
out
lea
xchg
aaa
mov
xor
mov
mov
stc
andl
outsb
jl
xor
in
jbe
inc
jp
xchg
ret
aas
pop
dec
rcrl
cmp
sbb
pop
cmpsb
mov
incl
jo
mov
rcll
inc
ss
ret
clc
mov
inc
fnstsw
pop
mov
ja
mov
mov
fisubs
fstpt
push
fcmove
push
dec
sbb
sbb
or
adc
bnd
inc
cmp
lock
into
mov
lcall
xor
stos
je
roll
cmpsb
out
xor
adc
clc
js
xchg
xchg
repnz
iret
jge
or
and
adc
mov
xchg
scas
aaa
adc
gs
sub
push
xor
inc
inc
leave
ljmp
lods
sbb
xor
push
push
dec
mov
lret
push
insl
loopne
mov
clc
inc
lret
popf
in
adc
cmp
mov
pop
cmp
aad
mov
lret
fnstcw
in
ret
cmp
push
pop
out
mov
mov
fisubrs
sbb
mov
data16
shufps
lock
adc
pop
lret
imul
es
call
fldenv
xchg
mov
push
cmp
sub
dec
repnz
cltd
xchg
mov
mov
and
jo
push
jle
and
popl
adc
dec
mov
xchg
inc
test
add
sub
or
push
mov
adc
jmp
outsb
fstl
xor
call
in
out
mov
xchg
push
jbe
mov
dec
sub
mov
les
bnd
xchg
popl
push
add
out
fstpl
js
aad
sbb
cmpsb
rorb
mov
dec
mov
jo
fsubl
jns
je
dec
fmuls
in
lret
out
inc
push
hlt
cmpl
pop
mov
push
adc
int
fisubs
ret
and
cmp
stos
mov
xchg
xchg
clc
lea
or
or
hlt
icebp
and
sub
xorl
js
xchg
push
push
mov
lret
test
mov
in
pop
xlat
gs
add
ja
pop
daa
inc
and
insl
jmp
pop
repnz
adc
ret
or
mov
mov
pop
cwtl
imul
negb
adc
enter
jo
jns
or
cmp
pop
movsl
and
inc
dec
inc
lahf
xor
add
aam
mov
inc
lea
pop
jp
dec
mov
xchg
add
pop
dec
loope
in
aas
push
mov
sbb
mov
shll
xorl
fdivrs
pop
fxch
adc
out
xchg
xchg
iret
insb
mov
lahf
push
scas
jecxz
pop
sarb
imul
push
mov
pop
cmp
scas
and
pushf
jmp
imulb
lcall
adc
cmovns
push
jae
sbb
xchg
arpl
lcall
lahf
push
xor
lods
sti
jnp
leave
lds
addr16
je
dec
push
xlat
xor
bound
fistpll
test
std
jp
mov
mulb
dec
and
fcomps
arpl
xorl
out
sahf
jae
clc
inc
iret
xchg
stos
mov
mov
lret
inc
aaa
leave
pop
add
dec
test
pop
js
mov
movsb
and
mov
jbe
inc
cs
add
imul
inc
xor
adc
ja
je
sbb
inc
xor
fldt
mov
fnsave
lret
icebp
lret
jg
leave
cs
shr
cltd
jl
scas
jmp
sub
push
inc
push
in
lock
in
sbb
xchg
push
jbe
loopne
loop
dec
repnz
int3
and
xlat
and
xor
js
sub
xor
fnstenv
ret
push
ljmp
mov
iret
lds
sti
mov
cld
scas
cli
div
aad
std
fwait
xor
in
rcrl
inc
imul
pop
jne
std
dec
mov
std
negb
out
out
push
lock
pop
mov
xcrypt-ecb
cmpsl
or
cmp
int3
mov
cmp
daa
xchg
pop
ss
inc
sub
fwait
jb
jge
cwtl
ja,pt
xchg
ret
mov
lret
xchg
popa
loopne
push
and
or
cmp
jb
dec
mov
mov
fdivr
sti
imul
jp
pop
test
push
loopne
mov
nop
jge
test
pop
push
aas
mov
lds
cmp
lret
fisubl
dec
mov
ret
sub
xchg
jp
cltd
mov
mov
pop
hlt
movsl
mov
or
mov
inc
adc
mov
xor
arpl
add
sbb
add
addr16
in
mov
mov
sti
mov
outsb
push
stos
in
push
pushf
aas
mov
out
push
dec
add
mov
iret
ret
and
loopne
imulb
jle
test
dec
sbb
add
stc
das
ret
push
faddl
pop
popf
xor
aam
sbb
cs
push
addr16
mov
mov
hlt
div
insb
out
add
movsb
cmpsl
inc
jns
mov
stos
adc
adc
mov
jl
push
dec
jecxz
dec
push
mov
decb
sub
cld
into
pop
shrl
sbb
jb
lods
popa
pop
hlt
xchg
inc
lods
mov
adc
add
mov
xchg
repnz
sahf
inc
aam
xor
sbb
and
push
fdivrl
sub
adc
ja
mov
lahf
jge
jb
movsl
sub
xchg
inc
inc
cld
or
ret
scas
sub
gs
insb
mov
jne
jecxz
mov
orl
ja
rorl
xchg
jo
xor
and
subl
sbbb
jl
pushf
fucomi
repnz
mov
incb
not
jns
test
ret
push
les
adc
mov
sbb
ficoml
dec
sub
loop
sub
jbe
test
int3
ljmp
mov
cwtd
mov
les
test
jae
and
lret
mov
xor
sti
lahf
cmp
sarl
cwtl
xor
dec
sbb
cmp
div
mov
scas
mov
adc
or
addl
ret
adc
out
xlat
lock
and
cmpsb
out
ret
jo
je
cld
popa
pop
sbb
sbb
fidivl
fs
leave
hlt
push
or
shrl
mov
sub
aam
out
sbb
adc
mov
mov
cli
mov
sbb
jecxz
fcomps
push
add
mov
mov
dec
cmp
add
aaa
call
mov
nop
mov
xrelease
dec
push
sar
xchg
outsb
pop
mov
repz
sbb
dec
mov
sti
int
out
mov
fwait
push
std
test
bound
and
rol
mov
bound
push
out
aaa
mov
inc
lahf
push
adc
dec
orb
xchg
push
xor
cmp
fld
push
adc
mov
xor
mov
orb
pop
arpl
cmp
loop
popf
jg
test
lret
fstpt
dec
aam
mov
mov
inc
and
cmp
lods
or
cmpsl
sbb
sub
insb
enter
dec
add
sub
sbb
cmc
xor
in
scas
sbb
dec
ja
imul
fldenv
push
out
push
ljmp
xchg
xchg
cmp
stos
hlt
mov
loopne
in
cs
subb
scas
or
orb
adc
popf
or
repnz
sbbl
push
mov
inc
cli
mov
insl
outsl
lock
imul
jle
aad
movsl
repz
subl
jae
push
pop
dec
cmp
dec
jno
loopne
gs
xor
sbb
loopne
mov
dec
adc
int3
stc
sub
cmpsb
or
sub
sub
cmpl
mov
mov
push
cmp
popa
scas
ftst
les
enter
dec
mov
data16
sti
int3
xchg
xor
gs
xlat
push
popa
add
das
cmpsl
mov
rcr
mov
xlat
movsl
mov
ljmp
push
push
add
iret
xchg
orl
xor
packuswb
or
daa
sti
lcall
loope,pt
inc
sbb
jp
dec
add
out
mov
rcr
sbb
mov
mov
push
push
inc
mul
repnz
pop
loope
rcpps
in
pusha
adc
push
push
fcoml
jmp
pop
pusha
int
xor
rclb
cmp
mov
fs
and
jle
addl
push
push
ret
sub
scas
popa
inc
cld
sahf
push
leave
cltd
sbb
xchg
inc
inc
aas
mov
push
lds
xor
xchg
sbb
sbb
inc
cmpsl
xchg
fiaddl
and
mov
jecxz
pop
cmp
inc
inc
roll
faddl
mov
inc
mov
cli
xor
not
pusha
inc
loop
xlat
fcoms
jae
xchg
and
add
insb
arpl
jge
popa
lret
mov
pop
pop
mov
repz
push
push
out
jecxz,pt
je
sbb
xchg
rorb
dec
dec
inc
sub
fidivrl
and
xlat
pop
fidivl
and
scas
add
and
bswap
fs
push
push
pusha
xchg
mov
cmp
and
sbbl
xchg
nop
jae
insb
jp
mov
inc
push
negb
outsb
sub
dec
mov
jle
insb
pop
xchg
push
mov
cld
into
cmp
and
test
cmp
insb
jg
lret
sub
dec
clc
pop
inc
xor
pop
cmpb
cli
shll
mov
rorb
jns
or
sbb
mov
jns
pop
in
mov
cmp
adc
std
sbb
or
or
jp
push
sub
push
insl
xchg
mov
sahf
add
xor
push
jge
push
and
xor
bound
movsb
or
mov
insb
add
push
xchg
imul
dec
cmpsl
xchg
es
iret
ss
je
imul
ljmp
sti
xlat
lea
push
xor
out
mov
gs
clc
inc
push
loope
int
scas
jae
jae
fidivrs
sar
xchg
jbe,pt
jge
and
pop
pushf
call
cltd
loop
rol
stc
mov
ret
test
sub
xor
jnp
aad
repz
cmp
jb
loope
jmp
add
xchg
out
pop
mov
sti
and
sub
cmpsl
dec
mov
hlt
inc
cmp
sbb
call
aam
popa
xor
push
ret
push
sahf
jne
cmp
cmpsb
sbb
pop
cmp
iret
movhps
int
xor
xchg
pop
xor
outsb
jae
mov
xor
adc
int
jle
movsb
pusha
mov
adc
push
mov
sbb
test
insb
ret
push
jo
push
lret
jl
scas
imul
outsl
dec
shrl
cld
push
mov
int3
mov
les
dec
pop
rcl
sub
inc
push
in
gs
mov
xchg
add
sbb
call
mov
mov
imul
xor
add
outsl
cmc
inc
dec
push
xchg
mov
and
xchg
xor
cmp
test
inc
pop
mov
xor
mov
mov
imul
cmp
mov
mov
pop
loop
xchg
push
fsubrs
xchg
or
or
adcl
push
inc
xor
leave
daa
scas
sub
leave
repz
jns
lock
roll
fst
nop
xchg
jne
pop
cmp
sub
sbbb
pop
push
mov
mov
bound
fwait
pop
les
fnsave
fwait
ds
adc
test
aam
nop
pop
pop
jg
insb
xor
imul
or
or
or
arpl
arpl
xor
lahf
inc
dec
dec
sub
fmulp
sbb
xchg
ss
in
push
test
mov
fstpl
mov
cli
jl
std
stos
cmp
xor
push
pop
mov
mov
pop
rcrl
push
dec
mov
xlat
jmp
cmc
repz
in
jge
ljmp
mov
lods
cwtl
lods
out
xor
incb
in
outsl
outsb
inc
hlt
or
cltd
ret
xor
fdivrl
test
lods
jmp
pushf
iret
jae
sahf
push
fisttpll
test
inc
mov
lahf
scas
jecxz
and
cli
and
cmp
lods
xor
cli
xor
test
sub
movsb
inc
inc
in
in
xchg
dec
mov
add
pop
cmp
cmp
and
ja
adc
or
mov
mov
cli
mov
and
shrb
add
dec
mov
push
add
ret
loopne
or
mov
inc
mov
ljmp
stos
inc
or
fs
pop
jno
pop
mov
xchg
adc
xor
or
pop
bound
jb
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
lret
outsl
mov
add
cmp
xor
sub
adc
add
loop
xor
sub
lcall
popa
insl
xchg
pop
jb
outsb
test
mov
fistps
add
popf
pop
dec
in
stos
mov
dec
xchg
jne
sub
push
std
or
pop
addr16
xor
notl
cmp
in
mov
dec
enter
movsl
dec
mov
mov
std
sbb
cmp
push
xchg
inc
sbb
mov
and
inc
sbb
loop
ficomps
arpl
leave
pop
pop
ja
jnp
sbb
jns
inc
flds
sbb
popf
pop
xchg
mov
inc
lea
out
mov
add
xchg
call
lret
repnz
mov
adc
push
lret
lods
fdivl
inc
fwait
in
into
mov
fldcw
xchg
pop
pop
inc
pop
jno
pop
mov
in
pusha
in
mov
je
sub
mov
stos
add
pop
daa
add
pop
xor
call
xchg
lret
ret
and
imul
sub
push
out
pop
dec
rcrl
stos
add
xchg
sub
sbb
hlt
notb
pop
xor
jo
dec
cli
dec
popl
mov
adc
cmp
xor
imul
push
push
mov
jae
sbb
sub
mov
mov
cwtl
gs
inc
cmp
jbe
inc
nop
jns
xor
cli
mov
cmp
mov
or
gs
dec
inc
dec
push
sbb
xor
out
std
adc
and
daa
int
enter
movsl
push
test
cmp
shrl
rorb
mov
push
add
xor
test
orb
mov
add
sub
pusha
jnp
mov
test
mov
jge
shr
ss
mov
dec
test
xchg
jl
mov
out
dec
sub
loopne
add
xchg
push
pop
icebp
call
and
data16
xor
aaa
pusha
rcrb
fdivrs
and
cmpsl
ljmp
jns
jnp
out
movsl
inc
cli
les
add
hlt
xchg
or
pop
and
sbb
mov
fisubrl
mov
mov
jns
xor
enter
movsb
xchg
xor
sub
add
int
les
push
sahf
es
fwait
sbb
in
inc
nop
jnp
es
addl
into
mov
mov
and
push
aas
jmp
sbb
pop
sahf
jae
outsl
cmpsb
pop
hlt
popf
jae
pop
adc
cmpsl
clc
xor
hlt
lods
adc
sbbb
adc
icebp
mov
mov
push
cltd
and
out
loop
out
adc
in
pop
cmpsl
fbstp
jo
mov
add
sbb
imul
add
mov
iret
cmpsb
mov
mov
orl
idivl
out
jo
gs
or
fld
sub
add
xorl
xchg
fwait
test
push
and
cs
mov
mov
aad
jmp
cmp
aad
push
icebp
xchg
mov
inc
jo
das
fst
cmp
xchg
lock
pop
fmul
int
ret
inc
filds
and
js
pop
dec
call
divl
push
dec
test
std
dec
inc
sbb
push
push
jecxz
pop
nop
inc
int3
xchg
xchg
rorl
cs
pop
test
mov
sbb
out
ret
daa
mov
ret
adcb
add
out
lcall
xchg
loopne
adc
ss
es
pushf
js
jmp
leave
iret
repnz
rcl
push
dec
repz
roll
lods
push
gs
sbbb
in
mov
xor
jae
mov
lods
leave
jge
sahf
pop
enter
mov
push
subb
testl
sub
jp
pop
cmpsl
jg
and
data16
ret
fwait
inc
jecxz
stos
lea
pop
stos
lret
or
jl
jecxz
into
jbe
addr16
mov
stos
jbe
push
mov
add
mov
xorl
xchg
movsb
fisubl
mov
add
lea
mov
mov
sub
mov
inc
dec
add
mov
cmp
dec
aam
mov
mov
cli
idivb
mov
jmp
jo
and
lcall
repz
jnp
adc
subl
pop
cwtl
data16
lret
or
sbb
fwait
gs
repnz
loop
lret
in
xor
cmp
lods
sub
imul
cmp
xchg
jle
mov
cltd
add
fildl
pushl
mov
loopne
mov
jbe
sub
imul
xor
sti
lret
add
add
mov
cli
jns
popf
ljmp
mov
add
ret
pop
pop
push
jle
jg
nop
jne
mov
ja
pop
loopne
and
jge
std
push
pop
scas
xchg
or
repnz
loop
mov
in
frstor
jns,pt
pop
pop
sti
adc
imul
or
ljmp
cmp
or
arpl
mov
test
adc
mov
fcomip
out
fucomi
ss
std
adc
addl
sti
push
add
and
pushf
inc
xchg
fs
add
jmp
and
sarl
das
stos
xchg
test
loope
nop
adc
sub
je
mov
inc
xchg
jbe
push
cmp
inc
dec
and
arpl
xchg
mov
lret
cmp
xchg
cmp
jns,pt
cwtl
shll
stos
shll
dec
jae
out
sub
scas
lds
jb
mov
popf
test
jns
xchg
jo
mov
cs
cmpb
icebp
stos
jnp
cwtl
or
push
jmp
test
insl
push
xchg
call
cmp
ds
imulb
clc
dec
mov
push
or
jno
in
xor
ja
jnp
adcl
and
push
add
cmpl
lods
mov
add
repz
adcl
adc
mov
mov
pop
ss
cmp
fisttpl
into
xchg
mov
adc
cmp
jo
pop
adc
nop
js
rep
cmp
imul
sahf
push
sbb
push
fucomi
push
fstl
xchg
inc
pop
test
cld
outsb
or
test
and
ffree
mov
movsl
inc
mov
cmp
inc
decb
inc
mov
aas
dec
sub
imul
dec
pop
xor
in
mov
out
jno
cmp
inc
stos
push
push
sub
in
sti
jg
push
dec
scas
add
test
inc
adc
pop
lret
notb
les
and
ficoml
jge
andl
test
movsb
adcb
mov
ret
add
leave
sbb
fwait
jnp
mov
and
ret
jb
xchg
std
mov
cmc
lret
add
out
or
push
lret
mov
xchg
sub
mov
push
xchg
mov
sarb
insl
sub
inc
adc
mov
sbb
int3
dec
test
jns
add
add
mov
push
adc
dec
bound
or
pop
mov
scas
sahf
sbb
mov
cmp
add
mov
push
inc
xchg
mov
loope
dec
mov
aas
push
mov
add
xor
jno
jne
loopw
fs
ret
test
daa
out
pop
movsb
xlat
loope
sub
icebp
push
mov
bound
xchg
xchg
in
inc
jmp
in
lock
xchg
test
sbb
mov
js
mul
push
jecxz
pop
sbb
rcll
dec
std
mov
sbb
add
jl
aaa
frstor
stos
ss
popf
std
add
sbb
dec
mov
rcll
sub
insl
out
fwait
xchg
mull
xlat
sbb
mov
mov
repz
mov
pop
mov
push
mov
xchg
aam
pop
std
push
xlat
push
adc
push
dec
in
xchg
pusha
push
aaa
dec
pop
jae
addl
add
std
sbb
test
repz
cmpsb
sbbl
pusha
in
or
cli
pop
jns
push
pop
push
push
push
xchg
not
xlat
adcl
dec
mov
inc
jmp
xchg
jmp
mov
shrb
dec
in
push
in
mov
scas
rolb
cmp
in
inc
les
cmp
shrd
pop
sub
out
fists
xor
sub
arpl
ret
shlb
jmp
push
mov
fbstp
xor
dec
lret
je
xor
in
inc
insb
jo
jns
jbe
insb
mov
sbbb
test
popf
fimuls
fidivrl
icebp
jnp
push
aam
xor
mov
jecxz
out
aaa
hlt
xor
fmul
fimuls
test
aam
popa
negb
enter
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
into
mov
mov
xchg
jp
lahf
cmpsb
push
les
add
test
hlt
xchg
dec
rolb
stos
cltd
cmp
mov
xchg
cs
mov
inc
lcall
pop
xor
sti
dec
imul
cmp
inc
mov
pop
scas
sub
pusha
add
xchg
test
add
jmp
mov
nop
mov
fbstp
cs
cmp
arpl
aaa
out
leave
sub
mov
sbb
nop
xor
adc
movsb
daa
test
in
or
xchg
pop
or
insb
ja
lahf
ss
movsl
lds
push
jo,pt
ret
dec
push
and
lahf
dec
jno
mov
mov
gs
into
lock
test
lcall
pop
mov
ja
bound
lods
jp
fldt
cmpsb
daa
jns
cmpsl
jno
ficomps
ss
adc
icebp
dec
mov
nop
out
push
mov
mov
scas
fs
pop
test
adc
mov
ret
inc
xchg
mov
pusha
pop
mov
xor
data16
arpl
mov
push
sbb
cmp
cmp
nop
adc
loop
fidivrl
xor
rcl
or
movsl
mov
scas
ljmp
inc
dec
mov
adc
mov
sahf
jbe
cmp
aad
add
andb
imul
or
repnz
mov
xlat
popa
cmp
lcall
repz
jne
dec
das
lcall
jne
jg
sbb
fs
repz
mov
cld
insl
jge
or
sbb
push
mov
notb
xor
cmp
in
cli
pop
movsl
adc
adc
popf
sub
mov
out
xor
dec
xchg
xchg
es
mov
mov
inc
xchg
in
call
scas
andl
xor
push
test
stc
sbb
push
sbb
pop
push
test
add
psadbw
sub
pop
and
popa
je
push
loope
adc
sbb
sub
and
jg
pop
sbbb
loope
subb
lods
pushf
test
push
mov
jnp
jmp
mov
ss
addr16
xchg
lds
cmp
dec
in
jb
in
or
cmp
test
fdivl
push
fstpl
in
mov
cli
and
mov
outsb
or
js
mov
dec
fwait
ret
insl
inc
add
out
stos
leave
repz
add
je
nop
sbb
jecxz
mov
pop
add
sbbl
lahf
pusha
imul
push
repz
jmp
loop
inc
mov
adc
xor
int
aam
push
xchg
int
and
shlb
and
out
mov
pop
jge
loopne
imul
frstor
mov
cwtl
cltd
xor
sbb
or
test
push
test
pop
dec
or
sahf
xor
push
testl
xchg
push
popf
cmp
or
xchg
stos
or
xor
int
pop
jl
xor
xor
inc
fsub
mov
mov
push
out
dec
cld
ret
subl
sub
popa
add
and
cmp
or
xor
cmp
lea
andl
and
push
mov
and
call
and
fnsave
xor
mov
adc
imul
add
sub
or
fs
jp
lret
bswap
leave
popf
push
mov
gs
xor
pop
add
pop
xchg
inc
or
js
mov
mov
hlt
jg
push
mov
js
push
inc
adc
imul
inc
xor
std
imul
mov
lahf
loop
pop
push
outsl
add
dec
scas
mov
lahf
xchg
repz
into
mov
sbb
call
mov
into
push
es
dec
leave
pop
xor
cmc
sbb
mov
xchg
lahf
push
pop
in
adcl
iret
out
cmp
sub
repnz
aaa
xchg
icebp
mov
test
sbb
mov
rclb
jbe
dec
push
adc
mov
jne
mov
outsl
lahf
xchg
and
mov
mov
mov
in
repz
cmp
push
lods
cmp
mov
adc
jg
stos
fldcw
scas
inc
push
pop
sub
addb
stos
fwait
scas
add
test
movsb
mov
int3
jno
cltd
inc
dec
fnstenv
or
jle
fists
sbb
out
fcoml
rcr
mov
mov
divb
sbb
jo
aas
ljmp
nop
mov
repnz
add
xor
sub
pop
xchg
jbe
ret
mov
cmpsl
push
popa
dec
outsb
adc
orb
lret
cmp
mov
imul
cld
jnp
icebp
mov
push
sub
testb
loopne
cld
push
mov
out
fcompl
shlb
ss
mov
mov
mov
or
icebp
mov
negl
inc
daa
stos
mov
mov
out
xlat
lea
das
xor
pop
push
loope
push
pxor
lahf
mov
adc
and
dec
sbb
aad
xlat
fildl
inc
dec
ss
sbb
xor
mov
ror
nop
dec
ljmp
mov
pop
int
out
jmp
loop
push
outsl
jg
lock
int
cmp
push
shlb
xchg
adc
and
add
bound
add
xchg
shrb
ret
cwtl
cmp
or
mov
fcmovu
pop
adc
mov
xor
pop
pop
cltd
dec
mov
xchg
outsb
repnz
sub
mov
sbb
push
and
xor
jns
inc
and
fwait
xchg
ret
in
int
push
lahf
mov
out
addb
fcmovb
mov
dec
scas
in
sbb
iret
adcb
mov
jno
mov
mov
test
jge
xchg
push
gs
ljmp
inc
jns
inc
xchg
mov
sub
ret
dec
fwait
or
jns
sar
daa
in
enter
mov
inc
test
das
push
xor
cmpsb
fnstsw
or
xor
scas
pop
iret
and
mov
clc
sub
in
inc
jno
push
into
lods
jmp
cmpsb
adc
inc
mov
jo
test
cltd
jl,pn
jge
cltd
adc
mov
mov
lods
out
and
push
lret
enter
jle
jge
and
and
scas
dec
int3
lret
test
int3
fcoms
mov
int3
sbb
mov
jle
divl
jns
xor
adc
cmp
jle
adc
mov
ljmp
dec
mov
jl
mov
popa
cli
dec
loop
les
aaa
jg
xorl
arpl
sub
lret
adc
cmpsl
lods
mov
test
dec
cltd
rclb
mov
jo
sbb
fidivrl
inc
mov
sbb
xchg
loop
fimull
in
sub
dec
pusha
mov
sbb
addb
cmp
aam
into
insb
pop
xchg
mov
rol
incb
repnz
push
sbb
rol
push
inc
leave
mov
xchg
add
inc
out
rolb
loop
dec
movb
pushf
or
cli
xchg
mov
add
mov
cmp
in
inc
je
fwait
enter
lret
xorl
sti
xchg
push
cltd
mov
jne
fsts
pop
push
ljmp
imul
lods
dec
repnz
mov
add
add
out
mov
in
jp
clc
and
cli
and
push
sub
lret
adc
jmp
sub
mov
shrb
xor
mov
cmpsl
jg
rorb
sub
mov
sarl
add
xchg
sahf
mov
cmp
data16
cmp
lahf
jg
or
cmp
jmp
push
aad
pop
lret
or
std
idivb
es
cmp
scas
dec
outsl
xlat
and
cmc
loope
mov
mov
sub
std
dec
mov
aad
sub
mov
cmpsb
subb
adc
add
es
movsb
mov
int3
sbb
mov
in
inc
stos
pop
jnp
dec
push
addb
ljmp
je
out
jmp
stc
mov
push
jp
repnz
mov
xorl
outsl
fsubs
call
jl
movsl
add
sbb
ret
jno
stos
into
xchg
pop
jg
mov
cpuid
mov
subb
xor
push
add
mov
cmpsb
clc
push
mov
insl
popf
pop
xchg
popa
sbb
fmuls
ja
push
adc
jecxz
mov
je
rcll
dec
pusha
imul
dec
xor
mov
pop
ret
mov
sbb
rolb
jnp
cmpsb
repnz
out
add
test
cmp
aaa
testb
cltd
ds
and
mov
and
lcall
jo
pop
push
xor
bound
dec
mov
jne
xchg
dec
jb
mov
push
in
je
add
push
and
lock
std
iret
cmp
adc
rorb
or
pop
dec
cmp
adc
mov
lcall
dec
rorb
add
jecxz
xchg
xchg
repz
cmpsl
repz
mov
lock
setg
pop
dec
inc
aam
int
insl
ret
jb
xor
lahf
xchg
js
mov
enter
repz
les
add
cltd
jno
repnz
cltd
and
xor
xchg
loope
std
push
sub
sbb
xor
fmul
or
adc
cltd
lcall
jl
sbb
inc
xchg
mov
xchg
jnp
mov
jo
xchg
mov
out
push
mov
stos
inc
sbb
paddsw
xor
andb
ljmp
cmc
inc
xchg
lods
out
push
and
mov
inc
ds
mov
mov
xchg
mov
adc
and
insb
cwtl
sbb
jnp
push
ret
imul
sub
ja
movsb
or
mov
ds
mov
lock
push
add
leave
or
ret
xor
je
jge
clc
sbb
cmp
mov
fsts
std
cmpl
les
or
pusha
add
sub
push
mov
sbb
icebp
sub
inc
xor
andb
enter
faddl
mov
shrl
push
negl
mov
stos
das
loopne
mov
in
das
sar
mov
mov
inc
iret
push
push
or
dec
or
in
fs
inc
popf
int3
cmp
dec
mov
mov
lods
push
mov
dec
push
shlb
fstpt
and
std
icebp
in
add
cmpsl
adc
lahf
bound
negl
sahf
ret
arpl
or
add
pushf
into
dec
jo
or
ret
fwait
push
stos
dec
js,pn
mov
das
dec
cmp
mov
stc
cmp
inc
or
jecxz
dec
insb
jmp
in
sub
outsl
jg
jmp
insl
mov
xor
jge
adc
mov
fwait
cmp
flds
das
cmp
pop
jno
out
mov
mov
sbb
sbb
inc
andb
or
inc
sbb
and
pop
dec
and
into
scas
mov
test
mov
clc
out
jbe
sub
lods
pushf
cltd
fmulp
mov
jne
aam
dec
sbb
int
xchg
sarb
incb
push
push
or
inc
pop
xchg
aad
pop
push
bnd
sub
popa
mov
push
cmpsl
sbb
test
mov
movq
in
insl
sub
test
call
mov
lcall
ficomps
ret
enter
mov
arpl
jge
ljmp
imul
call
les
fcmovnb
aad
bound
sub
jne
fldpi
movsb
dec
js
jb
dec
mov
mov
jae
sbb
pop
dec
dec
out
jg
out
jl
xor
inc
mov
out
rcll
and
mov
xchg
or
filds
test
enterw
pop
clc
mov
mov
mov
fnstcw
enter
imul
cwtl
in
addl
push
mov
and
clc
jmp
and
imul
cmp
mov
xchg
cmpsl
sub
adc
into
outsl
pop
mov
sbb
fwait
ds
roll
push
pop
call
adc
xchg
out
out
mov
mov
and
fildl
xchg
fs
insb
sub
jl
pop
push
push
cmpl
in
ret
mov
cmp
roll
mov
xchg
xchg
rorl
leave
sub
add
sti
pop
pusha
jge
stc
push
divb
jnp
das
or
aad
xor
bt
pop
inc
mov
loopne
mov
or
dec
out
jne
xchg
cmc
das
inc
mov
push
aad
push
mov
in
xchg
add
pop
cwtl
xlat
ss
in
sub
imul
dec
pop
push
xchg
call
test
adc
pop
adc
cmpsl
testl
jmp
ficompl
out
pop
shrb
mov
lods
popf
xor
mov
in
ret
push
sti
mov
mov
cmp
fidivl
push
xchg
adc
fidivl
andl
push
sub
cmc
int
sbb
clc
scas
fxch
lcall
cmpsb
test
js
test
rol
sbb
xchg
mov
lahf
sub
out
fcom
sbb
cmpsl
mov
sub
mov
hlt
jno
push
into
adc
mov
adc
jnp
and
jg,pn
lods
out
out
iret
scas
pop
inc
out
pop
mov
into
jecxz
lahf
jg
push
hlt
rcl
fidivrs
ret
sbb
movsl
jmp
call
push
rcrb
ds
push
push
shl
jbe
inc
xchg
repnz
daa
sar
xor
mov
les
out
into
mov
idiv
popa
aas
pop
or
das
xchg
add
pop
loopne
les
xor
xchg
xor
mov
jnp
sti
push
ljmp
in
pop
cwtl
adc
arpl
mov
push
jg
popl
mov
int3
add
mov
mov
call
bound
aaa
cmp
ret
es
jbe
jecxz
pop
das
test
xor
call
mov
ret
xor
jae
dec
dec
repz
fucomip
xor
shl
jae
inc
popa
out
rol
dec
sahf
es
outsl
cmpsb
stc
mov
in
sbb
pop
insb
mov
into
decb
and
stos
xor
mov
adc
data16
fnsave
mov
stos
jmp
mov
xor
xchg
int
sbb
lret
lahf
mov
out
cmp
mov
mov
dec
mov
push
cmpsb
out
sti
outsl
out
mov
lea
jbe
cmp
je
sbb
stos
das
repnz
pop
dec
insl
stos
out
adc
in
hlt
lods
adc
add
insb
leave
pop
fstpl
clc
gs
repnz
mov
adc
jge
aad
cmp
mov
clc
xorl
inc
nop
xchg
lret
inc
adc
aaa
xchg
add
or
push
aad
dec
push
mov
or
lret
sub
test
pop
mov
out
add
mov
std
aas
loopne
je
fcompl
das
mov
mov
or
lahf
mov
push
rclb
jnp
mov
mov
cmpsb
inc
out
popf
popa
stc
sbb
and
or
shlb
xor
or
outsb
adc
jbe
xor
xlat
loop
outsl
adc
jp
mov
pop
adc
cmp
pop
icebp
scas
cltd
and
int
pop
fisubrl
loopne
in
repz
inc
push
or
dec
add
mov
inc
dec
aaa
lret
lret
and
out
push
jp
adc
push
shll
fisttps
mov
enterw
xchg
xor
xor
jp
lea
xchg
adc
daa
pop
int3
xchg
lret
sub
lret
lock
add
push
imul
dec
pusha
lods
pop
xchg
pop
adc
add
jg
ss
fcmovnu
in
sbb
das
shrl
mov
outsl
xchg
das
push
int3
and
jmp
fildl
mov
test
rcl
ficompl
mov
mov
dec
outsb
fistpl
pop
pop
ds
imul
xchg
dec
mov
lods
rorb
out
es
inc
mov
mov
jae
jnp
cmpl
add
push
imul
jbe
jne
cmc
pop
lea
xchg
cmp
push
mov
push
push
mov
pop
push
cmp
pushf
cli
std
nop
pop
sbb
push
in
push
fs
insl
cmp
lret
or
push
jo
xor
popa
mov
xchg
push
shr
cltd
inc
es
pop
adcb
cli
xchg
xchg
ljmp
stc
cli
jmp
fiaddl
cli
test
andb
sub
xchg
je
lds
decl
cmp
loope
mov
cmp
mov
cmp
ret
lds
push
clc
pop
or
or
loop
pop
loope
xlat
pop
adc
shrb
push
ja
inc
dec
scas
sbb
cmp
popf
add
mov
ljmp
pop
ljmp
nop
sub
inc
enter
in
aam
jb
std
lods
cmc
xor
mov
and
push
fbstp
lahf
out
jle
xor
push
faddl
mov
add
negl
sar
push
pop
sbb
dec
aam
or
jns
mov
aaa
les
jecxz
pop
jle
mov
mov
fbld
adc
lea
call
mov
mov
xlat
add
fnstenv
sbb
mov
adc
imul
loopne
jne
lea
dec
call
insl
out
lret
jae
and
scas
cmp
and
inc
pop
clc
mov
addb
xor
push
sub
adc
dec
mov
nop
lret
dec
inc
push
inc
push
stc
push
pop
aaa
and
sti
lds
mov
mov
loopne
insl
push
adc
in
mov
cld
mov
push
scas
divl
sbb
mov
shr
xchg
mov
fs
movb
outsl
mov
cli
jl
dec
out
jg
test
push
cmp
ror
int3
adc
out
jne
jp
inc
mov
aad
xchg
je
push
into
incb
inc
fcoms
sbb
loopne
shlb
into
mov
sbb
push
mov
or
pop
test
mov
in
hlt
cltd
in
pop
sbb
data16
add
cltd
xchg
cs
cmpsb
add
in
int3
dec
mov
bound
mov
repnz
cltd
in
fidivrs
cmc
fnstenv
sub
les
sbb
inc
pop
psubsb
out
adc
xchg
adc
or
hlt
push
pusha
lods
stc
andb
dec
cld
and
into
mov
fisubrl
js
insl
outsl
jge
mov
test
aaa
pop
adc
jl
lock
stos
lahf
addr16
mov
clc
cs
pop
adc
loop
cmpsl
adcb
add
mov
push
js
and
add
outsl
out
pop
mov
scas
xor
xlat
sub
cwtl
lret
vpandn
sbb
out
lahf
push
jmp
pushf
mov
and
xchg
icebp
hlt
or
lahf
jnp
in
cmp
or
xchg
mov
and
cmp
out
cld
rcll
mov
push
ret
push
mov
mov
pusha
lds
mov
pop
fistps
push
setl
and
add
mov
sahf
mov
int3
rolb
sub
sbb
inc
adc
es
loop
mov
mov
popa
jecxz
mov
or
adc
or
rorl
xlat
adc
add
inc
into
loop
stos
add
fwait
push
mov
out
ss
test
xchg
arpl
cmp
dec
fdivrs
add
push
lret
jg
jo
sti
fld
and
inc
sbb
pop
outsl
imul
out
cmpsb
xor
jno
nop
sahf
xor
xor
loopne
fucomp
jl
ss
les
ror
jp
loop
stc
orl
mov
shl
mov
mov
jg
jns
js
push
dec
push
or
ja
sarl
push
sub
mov
cmpb
xor
lds
repnz
jne
dec
push
mov
sub
adc
mov
test
pushf
push
std
mov
loop
cmp
cmp
aaa
xchg
cld
leave
adc
mov
inc
imul
cmp
mov
cmp
in
xchg
pop
sbbb
outsl
push
mov
mov
or
scas
mov
or
daa
lcall
hlt
adc
das
std
out
sub
adc
mov
and
xlat
lea
out
ss
dec
rcll
ss
pop
cmp
xchg
mov
in
imul
xchg
outsb
xchg
mov
rolb
adc
fs
jae
mov
mov
and
mov
jp
daa
test
inc
stc
sub
push
in
mov
mov
loop
jmp
sbbb
jmp
xor
xchg
push
or
fucomip
jo
jge
movsl
int
dec
dec
jecxz
and
icebp
inc
iret
xor
sbbl
cmpsb
xchg
inc
mov
ljmp
dec
sub
shlb
xchg
popa
test
std
jo
inc
dec
in
jo
or
scas
pop
movsl
fmull
sbb
add
dec
popf
imull
sub
pop
jne
mov
push
xchg
daa
test
push
dec
pop
clc
aam
jge
inc
xchg
icebp
mov
cmp
lret
sub
std
clc
clc
imul
sub
out
repnz
lret
add
cwtl
sbb
pop
movsb
xchg
in
lret
aas
mov
notb
paddq
popa
adc
fadds
push
js
dec
lret
fs
pop
nop
test
jae
push
int
pop
test
mov
mov
push
mov
pop
xchg
imul
sti
xchg
std
lods
sbb
stc
xor
mov
scas
lods
repz
movb
sbb
mov
jne
fsubl
dec
stc
mov
into
mov
sub
or
xchg
scas
test
andl
pushf
adc
pop
dec
push
aam
pop
pusha
or
and
incb
mov
pop
dec
es
sbb
mov
cmp
test
out
adc
sti
or
mov
adc
xchg
jg
and
or
mov
cmp
shl
pop
pop
outsb
leave
and
fstpl
fidivrs
jge
push
xor
stos
scas
xor
xchg
mov
jnp
sti
aad
or
pop
stos
popw
lods
jge
inc
push
jmp
mov
stos
outsb
push
dec
pop
mov
or
dec
mov
dec
jne
es
fstpt
lods
jns
enter
fsubrl
lock
fs
nop
xor
cmp
lock
sbb
adc
xchg
adc
bound
pop
inc
sbb
ja
inc
test
and
addr16
jns
or
in
int3
push
xchg
mov
push
daa
jo
mov
popa
hlt
dec
pop
jbe
cmpsl
lock
sbb
sub
shlb
jns
rorl
push
or
add
push
inc
aas
dec
lods
aam
jno
mov
push
xor
daa
xchg
ret
pop
push
mov
addr16
pop
repz
sbb
cmp
fistl
sbb
les
jmp
ja
vmread
popa
test
or
ret
pop
jae
pop
cmc
loop
iret
ror
or
cmpsb
icebp
jno
test
cvtps2pi
mov
jge
xor
push
imul
add
xchg
std
iret
dec
loop
lcall
dec
sti
xchg
xchg
addr16
sti
push
je
adc
test
push
es
shlb
out
test
mov
mov
or
loope
and
adc
fs
inc
ss
insl
pop
cli
mov
sbb
pushf
pop
pop
xchg
jle
dec
cli
in
test
xlat
jmp
rorb
jl
and
mov
push
mov
pop
pop
in
lock
adc
inc
popf
cmp
aad
xchg
ret
jns
xchg
out
dec
or
arpl
es
cmp
add
fstps
fimuls
das
fcoml
jno
es
dec
mov
hlt
sti
das
jg
jne
mov
mov
and
xor
ss
shll
add
aam
dec
lds
jl
sub
shr
xor
push
ss
rcll
or
jns
ss
jg
xchg
push
jae
xorb
imul
int3
enter
frstor
movsl
insl
hlt
pop
aam
cmc
loopne
cmc
sbb
orl
mov
jg
imul
push
and
lret
out
data16
stc
dec
test
lret
mov
jno
add
inc
adc
sub
int3
add
fidivrl
xor
cmp
mov
mov
xchg
iret
dec
notl
and
and
xor
mov
pop
mov
xchg
adc
fisubrl
sub
push
ja
inc
insl
cmc
xor
dec
pusha
js
stos
pop
not
mov
dec
mov
xchg
mov
mov
mov
xor
leave
mov
jp
inc
xor
jo
stos
or
push
push
adc
dec
mov
out
fcompl
es
or
adcb
jo
xor
pop
in
dec
cmp
push
push
ret
dec
test
cmp
and
push
repz
and
pusha
sbb
repz
iret
in
mov
jle
or
push
add
leave
mov
sbb
std
cwtl
lock
mov
jecxz
sub
mov
cmp
int3
mov
cmc
add
scas
test
testl
lea
sahf
cmpsb
mov
fistpll
jae
outsb
dec
cmp
leave
js
jmp
xchg
or
push
fildll
insl
cmp
cli
bound
mov
inc
and
into
cmp
cmpl
adc
es
rclb
fsubr
fneni(8087
out
sbb
push
xor
lea
mov
jg
stos
and
mov
mov
push
test
shlb
cmpsb
or
int
push
loopne
mov
mov
jae
xor
pop
dec
push
inc
xor
daa
stc
xor
aas
add
jne
lock
sbb
push
and
push
mov
in
hlt
sub
into
js
cli
inc
jl
loopne
cs
ficoml
mov
xchg
push
rep
mov
call
add
leave
cltd
fstl
ljmp
adc
cmp
push
gs
push
inc
in
xchg
test
das
bound
push
sub
cltd
jb
dec
lret
rclb
out
cmp
adc
aaa
inc
stc
inc
hlt
or
xchg
push
in
add
andl
mov
mov
add
cmp
fwait
jae
imul
fists
xor
jae
daa
pop
inc
addl
pop
inc
jo
push
xchg
push
sub
pusha
jmp
js
clc
cmpsl
cmc
clc
fs
cmp
stc
add
jno
dec
ds
cmc
aas
inc
cmc
jns
dec
xchg
stc
push
push
and
or
insl
fisttpl
inc
dec
mov
jno
mov
jae
mov
daa
ret
mov
xor
mov
aas
mov
es
in
leave
aaa
push
imul
cs
aad
or
pop
in
pushf
inc
test
into
xor
clc
xor
shlb
mov
repnz
repnz
pop
inc
ja
push
dec
and
and
rcrl
push
sbb
fmull
lcall
add
xor
addr16
andl
fnstenv
jmp
cmc
xchg
and
addr16
jns
mov
jb
push
jp
in
fmuls
jecxz
shll
inc
retw
mov
pop
pushf
or
out
pop
divb
repnz
xor
add
jnp
xchg
inc
mov
fbld
adc
mov
xchg
mov
inc
mov
jo
and
pop
adc
pop
jmp
cmp
aad
jbe
orb
add
ret
pushf
xlat
in
xchg
iret
xor
jo
xor
imul
push
push
js
shlb
fs
iret
jbe
loope
outsl
push
loope
push
aaa
adc
pop
jp
ret
or
lret
insl
mov
xor
xor
jmp
jmp
cmpsl
jecxz
and
mov
into
pop
punpckhbw
cmpsb
in
push
pop
mov
fcmovne
cmp
lds
pop
or
sti
mov
call
push
cmpsb
add
out
int
scas
adc
dec
mov
xchg
push
cld
add
jp
adc
sbb
jns
cmp
inc
sub
xor
mov
or
call
xchg
lock
je
jl
dec
das
jmp
mov
lods
jl
cltd
inc
fs
add
ret
cmp
or
fildl
imul
push
sbbl
or
icebp
lret
loopne
adc
into
pop
fimuls
fs
jmp
repz
xchg
cltd
xor
sbb
sub
mov
loope
jo
ljmp
fucomi
mov
enter
adc
jecxz
in
int
dec
loop
arpl
mov
js
orl
repz
sarl
jnp
addr16
and
mov
rorb
inc
xlat
imul
cs
xor
mov
adc
xchg
rcr
ret
mov
scas
push
notl
push
ja
ret
lahf
je
in
fcmovu
cmp
push
mov
jge
push
or
lds
cmp
pop
mov
pusha
xor
dec
sub
ret
fwait
or
inc
enter
loopne
imul
jmp
mov
sti
mov
jecxz
dec
push
or
jae
les
sbb
mov
xchg
and
mov
pop
mov
sub
das
adc
mov
fwait
dec
jg
test
testl
sub
out
clc
xlat
sahf
dec
pop
push
and
bound
xchg
loop
add
idiv
ret
dec
xchg
test
cli
repz
or
les
add
mov
cmpl
sbb
in
repz
jne
cmpsb
ljmp
loopne
jmp
adc
cli
and
inc
test
jl
push
aam
jge
mov
jae
out
fdivl
push
add
jecxz
jp
out
popa
xchg
dec
call
lcall
or
imul
sub
inc
mov
dec
aaa
cli
xor
lods
xchg
cmp
out
scas
mov
sbb
xchg
mov
jnp
vorps
mov
mov
xor
outsb
fldcw
pop
inc
in
mov
mov
mov
fs
dec
adc
mov
jl
inc
push
je
xchg
xor
pusha
dec
cs
jae
std
cmc
rcr
fwait
cli
jae
out
inc
adc
imul
js
fcmove
xor
xchg
mov
lret
mov
js
mov
push
outsb
in
ret
out
ror
push
mov
or
pop
cli
lock
lock
pop
sbb
dec
cmp
dec
lret
int
into
mov
sahf
inc
movb
adc
movsl
sbb
xlat
stos
push
adc
mov
cmp
fcompl
inc
aas
add
jb
rolb
add
idivl
fnstenv
nop
push
aad
xchg
push
sub
cltd
pop
dec
mov
lret
jns
imull
fildl
inc
sub
test
jnp
adc
rclb
in
add
and
pop
pop
and
imul
xchg
pop
orb
inc
ficompl
out
rcr
mov
pop
mov
push
rorl
pop
jge
daa
pusha
js
adc
scas
mov
fsubl
aaa
inc
lcall
and
test
and
jp
sub
inc
push
cmp
lea
mov
add
cmp
xchg
addr16
push
addb
adc
inc
xlat
mov
stos
push
xchg
push
retw
inc
xlat
mov
repnz
imul
aad
lret
add
es
test
es
push
pop
sbb
jge
or
movsl
ficoml
push
or
push
pop
cmp
data16
sbb
push
lahf
pop
into
test
fstpt
cmp
or
ret
mov
add
sbb
pop
xor
push
enter
dec
mov
test
int
arpl
mov
pop
cltd
jo
or
icebp
fcomi
lret
popf
imull
jo
jl
mov
aam
lods
out
or
add
outsb
dec
dec
aad
push
loopne
push
pop
dec
and
shlb
shlb
xor
pushf
adc
adc
hlt
cltd
push
lret
daa
jle
jle
inc
das
shl
or
jne
outsl
sub
jns
sbb
jp
cmp
inc
inc
or
pop
lock
adc
loop
and
cli
sbb
adc
cmp
fimuls
inc
shll
out
jge
aaa
push
jle
push
mov
sub
sbb
mov
lds
jle
sub
int3
les
cmp
insb
mov
xchg
insb
repnz
xor
mov
les
xchg
mov
stos
dec
repnz
ret
add
sub
ljmp
inc
mov
mov
pop
sub
sahf
shr
xorb
aam
cmp
and
movsw
out
sub
insb
and
and
imul
jge
and
inc
mov
ja
jle
xor
mov
mov
inc
aas
inc
mov
ds
fs
fnstsw
mov
mov
inc
mov
add
mov
or
cmp
mov
mov
pop
bound
xchg
lods
in
add
cmpb
sub
inc
mov
and
into
stos
movsl
and
sbb
xchg
outsl
test
in
inc
lea
insb
dec
orb
fisttpll
or
cwtl
cli
sub
insl
adc
loope
xchg
jno
loop
sub
sub
pop
push
pop
lahf
sbb
dec
inc
test
jmp
xlat
loopne
mov
xor
rolb
dec
jae
popf
icebp
loopne
inc
testb
repz
sbb
sub
cmpsl
xchg
cmp
sub
jns
inc
out
arpl
fwait
xlat
stos
or
rcll
stc
loop
cmpsb
lahf
jge
mov
add
add
stos
jge
out
ret
pop
les
cmp
inc
icebp
dec
push
adc
push
test
sbb
mov
mov
dec
sbb
out
mov
jecxz
push
decb
dec
jb
stc
or
dec
mov
daa
push
xor
mov
jle
rcrb
dec
xor
cltd
mov
insb
mov
mov
aas
add
call
inc
jle
imul
es
jns
clc
adc
shrl
push
xchg
jo
mov
mov
and
xor
push
dec
and
daa
test
xchg
jmp
negb
stos
int
sub
pop
pop
and
adc
push
adc
mov
inc
mov
iret
xchg
scas
lock
loopne
andb
dec
jp
mov
popf
or
imul
jo
in
cmp
shlb
sbb
push
les
ja
ljmp
cmpb
gs
bswap
dec
lahf
js
scas
push
cmp
fbld
and
fcmovnbe
dec
mov
lret
mov
push
dec
mov
sbb
cmp
out
rolb
int3
jmp
dec
add
int3
lcall
out
push
push
bound
sbb
dec
push
cld
fcoml
subl
aaa
sbb
or
movb
pop
nop
sbb
into
mov
scas
cmpsl
outsb
or
add
adc
imull
lods
pushf
inc
jne
inc
and
cmc
iret
mov
sbb
push
fwait
loope
xchg
xor
rolb
jmp
loop
pop
fimull
push
xchg
in
in
aas
adc
jnp
arpl
push
pop
rorb
pop
or
scas
push
jmp
out
mov
push
loop
filds
mov
leave
xchg
stc
fs
push
rcll
cs
push
in
mov
ss
pop
inc
idiv
or
sub
and
shl
cmp
cmp
orl
aam
loop
cmp
bound
fs
frstor
mov
or
fcoml
or
scas
xchg
and
ds
xor
add
jle
int3
add
clc
xor
insl
mov
ja
inc
mov
push
je
jecxz
pop
dec
pop
scas
sub
jne
scas
xchg
movsl
lcall
aad
cmp
inc
dec
jb
testl
xchg
xor
pop
cmpsl
sbb
xlat
or
inc
add
mov
lret
mov
jg
jmp
fwait
popa
jle
out
mov
aas
adc
pusha
test
push
mov
scas
cmp
out
or
inc
sar
dec
add
xchg
adc
cmp
dec
inc
add
adc
enter
addr16
clc
test
push
ss
sbb
ficomps
push
ret
rcll
mov
mov
bound
cltd
cmc
mov
xchg
mov
movsl
jg
jle
mov
adc
loop
jno
jb
out
bound
aam
jecxz
call
loop
dec
mov
mov
mov
jp
in
int3
jmp
xor
icebp
mov
mov
lea
sahf
ja
out
sub
aad
sub
pop
imul
inc
iret
inc
popa
in
into
clc
jecxz
push
int3
data16
xor
ja
ret
pusha
sub
jl
push
imul
xor
lds
push
inc
roll
mov
jge
mov
adc
and
mov
imul
ljmp
test
sarl
jmp
mov
sub
mov
inc
out
push
jmp
js
mov
int
jb
mov
add
jmp
sti
popf
pop
xor
inc
outsb
movsb
jge
xchg
cld
adc
data16
call
enter
mov
mov
xor
shlb
mov
es
lret
shlb
popl
pop
lea
add
jp
push
ret
out
sub
xchg
popf
jb
sahf
sub
xor
cmc
fadd
lret
xchg
das
mov
inc
pop
xchg
or
repz
outsl
xorb
out
mov
push
out
xor
subl
pushf
or
cmp
into
test
dec
xor
loop
xor
in
out
lods
test
sub
jbe
out
in
sub
or
pop
push
xchg
lods
dec
cmp
mov
cmc
popf
addr16
cmpsl
push
adc
orl
jns
inc
cmp
jge
addr16
rolb
leave
add
test
int
push
jmp
cmp
idivl
xchg
stos
test
push
adc
fwait
sbb
rcr
adc
pop
rolb
sub
or
push
in
jae
mov
bnd
push
xchg
scas
cmp
movsl
lret
and
pop
inc
mov
dec
push
add
icebp
lods
push
int3
mov
pop
out
sub
and
ss
push
or
lock
and
repnz
adc
movsl
std
lcall
iret
mov
pop
pop
sbb
sbb
lea
push
push
dec
fstp
mov
mov
pop
mov
xchg
pop
pushf
fs
push
xor
lea
push
sti
jno
mov
pop
test
shrl
and
dec
cmpsl
adc
sub
pop
mov
jg
repnz
or
leave
mov
mov
jmp
jbe
std
inc
scas
in
adc
add
add
stos
daa
jl
or
sub
jno
mov
data16
iret
std
fldt
cmc
mov
test
jmp
sub
leave
jp
mov
jl
mov
movsb
xor
mov
ja
inc
iret
loopne
or
addr16
in
push
clc
pop
pop
test
stos
inc
lods
pop
fisubl
lahf
aaa
pushf
sbb
lret
mov
xchg
or
loope
or
jbe
push
shlb
adc
xchg
fwait
rorl
fists
std
add
mov
pushf
in
cld
enter
dec
xchg
pushf
cmp
xchg
mov
andb
loopne
push
es
mov
xor
push
mov
and
in
fnstcw
out
enter
sti
jbe
addl
ds
mov
mov
leave
gs
xchg
push
in
mov
fcoms
dec
pop
sub
fs
push
orb
stos
sbb
push
daa
pop
mov
xchg
in
movups
aam
jae
in
call
mov
movsl
xor
es
lds
or
adc
push
out
call
mov
jno
mov
xor
loop
data16
or
dec
stos
into
fmulp
fmuls
lds
lcall
pop
fstl
fiaddl
test
ret
iret
insl
pop
repz
inc
jle
aad
stos
xchg
fmul
not
mov
shrb
sbb
sti
lret
push
ja
sti
inc
int3
mov
mov
pop
cmovle
imulb
or
cli
loop
dec
addr16
cmpsb
xchg
aam
data16
push
xlat
sub
mov
sbb
mov
cwtl
push
inc
pop
lcall
xchg
call
mov
or
pushl
imul
das
xchg
icebp
outsl
popa
adc
jne
cmp
cmc
out
jmp
fdivrs
arpl
add
pushf
adc
pop
js
mov
pop
mov
nop
mov
and
daa
ss
fs
cmpl
jo
inc
cmc
jns
into
in
dec
push
pop
insb
jl
pop
sbb
mov
mov
xor
and
fstl
das
in
inc
pop
dec
call
mov
dec
ficoml
xchg
fsub
xor
leave
test
mov
fs
in
push
lock
js
mov
inc
pop
stc
jnp
inc
xchg
loop
mov
rol
mov
sahf
mov
adc
outsb
aad
inc
inc
sub
call
test
xchg
nop
jl
xor
movsb
das
mov
mov
in
jmp
out
and
pop
popf
cmp
jmp
in
mov
jg
push
rorb
pop
and
pop
insl
incb
in
ja
aaa
es
dec
fidivl
mov
out
arpl
jns
pop
std
dec
mov
nop
ds
mov
dec
mov
push
cld
xchg
shll
and
xor
or
adc
mov
or
pop
ret
mull
test
mov
iret
dec
in
call
rorb
xchg
mov
push
je
xor
sbb
cs
or
pop
dec
addr16
mov
xor
cmpsl
sbb
push
push
arpl
push
mov
ds
std
pop
lock
scas
lods
aas
pop
sbb
sbb
ret
mov
xchg
scas
push
or
das
sahf
jg
cmpsb
mov
sub
cld
inc
xor
push
xchg
cmpsb
xchg
popf
mov
pushf
adc
ret
ds
les
xor
xchg
pop
sub
cwtl
lods
jp
mov
mov
pop
pushf
dec
mov
dec
push
fsubr
add
sub
imul
mov
pushf
xor
jp
loopne
push
pusha
jnp
push
loope
pop
mov
fildll
pop
scas
lds
popa
xchg
fs
test
adc
rcll
fs
bnd
lock
sbb
push
xchg
shlb
aas
test
fldl
in
inc
xlat
and
lahf
sub
mov
repz
xchg
pop
cmpsl
out
and
mov
dec
push
pop
and
mov
cmpsb
inc
stos
in
inc
cmp
in
roll
sub
in
mov
andl
into
pop
cmpb
pop
movsl
jge
mov
mov
pop
dec
cmp
fwait
es
adc
xchg
inc
jae
negb
fldenv
scas
mov
stos
inc
xchg
fdivrl
mov
xchg
cs
sub
popf
pusha
les
movsl
cltd
std
out
jbe
lret
je
xor
mov
cmp
xor
andb
sub
and
sbb
rcll
stc
pop
addr16
fdivl
jno
xchg
sbb
push
lret
sbb
or
mov
pusha
jmp
call
inc
add
cwtl
sahf
ret
inc
movsl
lret
in
jo
inc
jmp
and
inc
iret
mov
and
cli
inc
sbb
inc
stos
shlb
fists
ja
pop
test
inc
shrl
out
dec
cmp
or
fnstsw
adc
es
mov
and
test
and
xchg
and
stos
or
sub
and
push
add
in
adc
lds
in
scas
sahf
push
jae
orb
int3
outsb
int
scas
lcall
aad
gs
call
enter
cmp
jno
jae
daa
adc
sarl
inc
xchg
cmpsb
push
cmp
pushf
mov
gs
xchg
jb
sub
pushf
mov
fwait
test
jb
jae
repz
pop
ss
pop
xor
sub
jns
into
fwait
push
imul
imul
jle
cmpsl
int
mov
outsb
pusha
push
test
adc
sahf
and
sub
add
ljmp
push
cmp
pop
jle
mov
dec
adc
pushf
sbb
sbb
lods
pop
cmpsb
push
mov
cmp
in
or
fildl
push
jne
sub
cmpsb
and
pop
ss
sti
cld
mov
pop
sahf
cwtl
out
pusha
and
pop
cmp
movsl
psrlq
jnp
in
lods
cltd
mov
cmp
fs
popa
xchg
fldenv
jecxz
jo
lahf
out
fimull
mov
mov
out
push
pop
mov
push
push
jbe
cmp
xchg
subb
adc
rolb
movsb
outsl
push
jle
fisttpl
sbb
idivl
pop
movsb
push
mov
inc
xchg
mov
sub
inc
xchg
xorb
xor
or
mov
cmp
mov
xor
sub
dec
mov
ja
cwtl
lods
or
lea
les
push
sahf
repz
fidivrl
stos
push
mov
inc
pop
mov
ror
xchg
adc
xchg
aas
mov
sub
or
dec
inc
cmp
adc
outsl
fnsave
lcall
pop
ds
and
movsl
loope
jp
pop
adc
les
nop
push
jo
xor
or
hlt
in
addr16
sbb
xor
rorl
jmp
inc
push
ficoml
rcrb
nopl
mov
cmp
hlt
lea
scas
arpl
and
inc
shl
mov
add
shr
in
fmuls
pop
aas
adc
aaa
loope
cmp
adc
fidivrl
xlat
push
xchg
xchg
sub
mov
loope
movsb
out
mov
mov
sbb
xchg
jge
fbld
stos
jno
hlt
pop
je
inc
fstp
scas
dec
outsl
in
hlt
mov
cmp
sbb
pop
pushf
in
xchg
mov
mov
or
bound
outsb
jns
jno
xor
outsl
jmp
inc
jle
mov
jle
pop
sub
clc
dec
pushl
enter
fs
shr
insb
cmpsl
mov
ret
bound
cmp
loop
cmp
test
mov
pushf
push
ss
jb
push
adc
jp
xchg
std
inc
ja
and
pop
into
cmpsb
mov
jle
adc
add
fldt
cmp
aaa
xlat
stos
adc
sub
cmpsl
cwtl
std
push
daa
sbb
fwait
popa
mov
push
lds
push
js
or
cltd
push
jp
sbb
push
xchg
xorw
movsb
jmp
fdivrs
mov
lret
sbb
dec
inc
pop
pop
sbb
pop
ficompl
loop
jle
xchg
cld
jle
int3
in
mov
lods
movsb
inc
ret
cltd
sbb
cmp
sbb
aas
pop
imul
cmpsb
lea
or
enter
jne
out
adc
xor
fimull
mov
add
out
clc
jp
mov
xchg
or
adc
jecxz
cmpsb
pushf
cmc
push
jmp
loopne
fcomps
dec
inc
sub
mov
popa
pop
hlt
mov
mov
insl
mov
leave
dec
loop
push
lret
mov
or
xchg
add
nop
or
dec
jecxz
xchg
dec
popa
out
and
lcall
sub
sahf
bound
inc
inc
mov
ja
pop
sbb
cwtl
xchg
pop
jb
dec
xchg
and
addb
jno
js
repnz
xchg
cmp
cltd
push
push
iret
inc
into
cltd
shl
mov
cmp
fildll
xor
jmp
push
mov
shrl
push
sahf
movsl
ret
mov
jb
lds
mov
add
jns
sbb
dec
ret
push
cli
leave
or
fdivrs
insb
test
sub
stos
mov
iret
mov
push
data16
lock
mov
pop
loope
into
stos
aas
cmc
xchg
mov
cld
outsl
adc
mov
mov
sbb
adcb
sbb
inc
mov
xchg
cld
dec
push
add
xchg
sub
pop
cwtl
cmp
jg
fimull
sarb
mov
xchg
and
ds
cmp
xor
cmp
ficomps
add
dec
fldenv
sbb
iret
daa
or
and
outsl
mov
fsubrl
sub
mov
loopne
inc
and
xor
pop
shl
cwtl
lods
jl
xchg
stc
fbld
in
cmpsb
push
mov
fnstcw
inc
ret
jmp
sahf
cmp
pop
hlt
xchg
xchg
adc
mov
mov
sub
incb
dec
xchg
in
cmc
shrb
leave
cmp
or
lret
sub
pop
idivb
mov
pop
inc
dec
mov
cltd
or
xchg
ret
pop
adc
clc
dec
cmp
inc
cltd
loope
xchg
call
test
in
out
paddusw
cltd
pop
xchg
pushl
inc
mov
mov
out
pop
or
push
popf
jle
mov
dec
and
mov
ret
ja
popf
adc
jle
push
inc
sub
jle
sbb
push
add
xor
loop
cmp
mov
pop
cwtl
mov
sub
mov
daa
call
stos
jmp
and
pop
fnstsw
mov
sbb
push
cs
sahf
fmuls
sub
mov
testl
outsl
div
or
arpl
xchg
aad
cltd
lcall
out
mov
arpl
cmc
sbb
xor
enter
xor
repz
faddp
mov
push
sub
sub
push
cmp
test
arpl
pop
pop
out
push
lods
dec
cmc
dec
inc
xchg
xchg
push
sbb
out
push
loopne
push
ficompl
cwtl
inc
dec
jne
enter
cmpl
add
in
hlt
dec
push
movsl
scas
jno
xchg
lret
fsub
jg
jno
shrb
lock
pop
leave
insl
sbb
xchg
sarb
outsl
data16
outsb
test
push
xchg
das
int
add
cs
das
gs
das
mov
mov
push
xchg
idivb
mov
test
out
mov
mov
call
push
jns
addb
push
cltd
ja
pop
stos
xchg
and
orb
xchg
insl
pop
mov
push
orl
sbb
scas
or
dec
jnp
pushl
push
mov
jmp
insb
jno
adc
cmp
fbld
pop
sub
add
aam
or
lods
ljmp
or
xchg
sbb
lea
mov
add
mov
outsb
andl
mov
and
sub
js
adc
sbb
dec
bound
and
je
dec
cltd
sbbl
lds
filds
push
enter
push
in
and
in
hlt
adc
lret
push
sbb
aad
or
pusha
sbb
rclb
and
xchg
mov
sarb
xlat
int3
out
push
mov
jg
ljmp
jmp
incb
and
pop
adc
mov
mov
in
sti
cmp
mov
xor
mov
stc
nop
in
pop
out
movsl
fadds
mov
loop
push
push
adc
cmp
lcall
in
ds
or
xchg
dec
xchg
outsl
cwtl
add
cmpsb
or
sbb
shrl
fsubl
mov
or
xlat
cmp
push
dec
add
out
or
push
mov
mov
stos
xchg
push
dec
xchg
jno
sbb
mov
mov
push
les
js
lcall
enter
lods
add
cwtl
popa
cwtl
adc
inc
sbb
loopne
lcall
or
push
stos
out
sbb
stc
cmp
je
xlat
fmul
mull
icebp
das
pop
cmp
jecxz
inc
xchg
test
hlt
mov
popl
pop
cld
or
or
mov
cmp
cmp
or
xchg
fwait
iret
jmp
push
mov
sub
sarl
imul
sub
testl
gs
xor
lcall
rcll
aam
fdivrp
pop
sbb
cmpsb
sub
lret
jg
mov
imul
test
lret
mov
leave
inc
and
cwtl
and
shll
sub
fdivrs
mov
pop
push
jo
dec
jl
icebp
fwait
loop
xor
cmp
adc
dec
test
cmp
sbb
aad
sub
loope
test
aam
cmpsb
cmpsl
lahf
testl
xchg
push
out
lahf
xchg
leave
cmpsb
pop
pop
adc
xchg
jbe
adc
cmpsl
cmpsb
jae
jnp
aaa
jb
or
sbb
aam
adc
jg
cmpsl
push
movsb
mov
and
xchg
ljmp
outsl
xchg
lods
mov
xchg
out
movsb
js
and
inc
push
lods
mov
test
repz
rcll
int3
jmp
pop
mov
sbb
adc
pop
hlt
xchg
lret
cmp
sub
jp
enter
into
dec
enter
lcall
xchg
or
insb
fisttpll
popf
jno
mov
or
xlat
dec
jb
adc
lret
sub
int3
loop
push
and
sbb
std
es
les
pushf
inc
ja
in
pop
loop
jo
push
push
add
aad
jg
push
icebp
jnp
daa
imul
std
pop
iret
sub
jp
bound
and
xor
cs
cmpb
mov
out
lret
movsb
xchg
inc
cmp
mov
mov
outsb
jnp
push
dec
outsb
rcl
hlt
xchg
pop
push
adc
push
test
pop
repnz
out
push
jnp
lcall
push
divl
out
jbe
scas
jge
push
rorb
stos
out
xor
fucomip
loop
and
mov
sub
mov
xor
push
mov
lahf
cmpsl
xor
and
insl
pushf
mov
sbbb
cli
push
test
out
mov
int3
and
les
arpl
or
notb
ljmp
mov
sbb
ss
cli
rcl
xor
pop
lea
push
mov
push
mov
data16
inc
mov
adcl
push
dec
daa
fisubrl
inc
xchg
mov
bnd
pushf
test
into
xor
push
push
pop
dec
lods
cs
adc
test
push
orl
sub
sbb
xor
les
addr16
push
shr
hlt
mov
fsubl
cmp
pop
and
dec
jne
sub
sbb
dec
mov
adc
ds
inc
push
jecxz
int
jno
cmp
arpl
mov
js
mov
add
pushf
insl
outsb
and
mov
cltd
int
cmp
test
fmul
mov
dec
push
lods
loope
loop
out
out
pop
adc
pop
push
sub
repnz
pop
dec
cs
shrb
xor
mov
movsb
cld
pusha
jmp
and
mov
or
shl
xor
ja
movsl
out
or
sub
cmp
ror
in
aam
mov
in
pop
pusha
in
push
fsubr
add
dec
push
ret
int3
scas
cmc
push
rclb
cmpsb
push
out
add
xchg
mov
sar
pop
pop
out
sbb
xor
rorb
dec
and
add
mov
scas
or
jbe
cld
cmp
xchg
inc
pop
out
adc
pop
cmp
sbb
out
mov
hlt
inc
xchg
cmpsl
cmp
jns
mov
xor
xchg
jg
jge
lret
mov
cmpsb
sub
nop
lret
ss
push
cmp
dec
rolb
out
int
jno
out
push
xchg
xchg
cli
jne
mov
cmp
iret
cmp
or
popa
imul
les
or
mov
sub
pop
mov
lret
mov
jge
mov
xchg
dec
push
cwtd
out
cli
sti
mov
inc
push
or
cwtl
movsl
mov
push
stos
sti
out
jns
mov
push
cmp
adc
mov
out
mov
and
repnz
outsb
add
mov
mov
mov
in
dec
jle
inc
mul
dec
push
or
pop
not
xor
les
bound
cmpsl
cmc
xchg
data16
nop
imul
sub
mov
inc
dec
jns
cltd
xchg
jmp
pop
add
cs
scas
push
lock
leave
sub
les
mov
dec
les
jnp
in
jae
jo
lahf
push
xor
test
lahf
cmp
and
jg
aam
push
sbb
pop
pop
outsl
ss
out
mov
cmp
enter
mov
nop
cmp
jo
cltd
cmp
push
icebp
imul
cmpsl
cmc
cmp
popa
sti
mov
inc
push
in
stos
cmp
push
add
testb
dec
cmp
and
cs
jge
inc
push
test
hlt
cmpb
popf
stc
cmp
orb
push
xchg
arpl
adc
mov
mov
or
clc
dec
popa
sbb
push
es
xchg
out
mov
sub
dec
cmc
arpl
sahf
insb
in
repnz
sub
cmpsl
stos
mov
pop
sub
fisttpl
mov
mov
lret
pop
insl
adcb
inc
jno
ret
push
insb
mulb
rolb
sbb
add
push
mov
ror
es
in
es
cwtd
gs
mov
xor
mov
fsubs
mov
sarl
js
and
pushl
xchg
ffreep
jbe
mov
test
enter
cltd
sahf
xor
fcompl
jno
push
setge
jne
push
push
pop
inc
jl
push
into
lds
xor
stos
les
dec
sub
stc
xchg
scas
lahf
int
or
popa
sbb
stos
cltd
push
test
pop
out
sbb
in
call
pop
popa
inc
pusha
sub
cmpsl
xor
mov
cwtl
and
add
adc
jle
inc
sbb
jb
and
repz
push
mov
mov
fsubs
cmp
xor
sbb
js
push
ja
jns
add
adc
jne
push
lods
ret
gs
add
rcll
push
fsubs
sub
cli
and
in
add
sub
xchg
xor
cmp
mov
mov
sahf
xor
push
ss
fdivrl
popf
inc
mov
lret
mov
andb
fwait
add
jo
or
add
cmpsl
pop
jle
pop
push
sub
mov
mov
rcr
test
jg
adcb
mov
incb
ret
mov
inc
ss
lahf
mov
sbb
loop
add
rolb
dec
jne
dec
test
inc
and
xchg
mov
test
dec
push
loop
call
add
push
scas
jb
pop
adc
int3
test
xor
xchg
xor
andl
stos
imul
push
stos
aas
mov
mov
fwait
out
lds
push
mov
sbb
je
rcll
or
gs
bound
in
clc
sti
mov
fstpl
xchg
sbb
and
push
or
mov
mov
and
jbe
and
bound
jbe
and
mov
adc
not
pop
sbb
sbb
test
mov
aad
lret
jne
mov
push
insb
ret
in
mov
push
rclb
and
outsb
jbe
test
sub
jno
ljmp
or
inc
aad
adc
lcall
mov
push
stos
leave
xor
xchg
dec
mov
adc
add
mov
push
push
push
and
sbb
or
mov
scas
push
and
jnp
inc
push
lods
repnz
cltd
mov
std
push
inc
and
jecxz
push
cmp
hlt
sub
inc
push
jb
std
in
sbb
xor
bound
pop
ljmp
mov
movnti
in
add
cmp
jmp
and
adc
insb
cmpsb
push
jne
data16
flds
cmp
jne
loop
mov
jo
adc
mov
and
sbb
in
jmp
stc
pusha
test
aas
inc
jae
push
xor
inc
popf
test
sar
pushf
in
xchg
jbe
and
pop
cmpsl
mov
enter
xchg
sub
stc
rorl
pop
cmc
in
loop
cmpsb
add
shrl
cmpsl
pop
push
insl
repz
pop
lahf
xor
int
shrl
mov
es
or
gs
inc
xchg
scas
into
call
divl
aam
imul
jb
movsl
enter
lcall
aas
pop
add
push
insl
mov
jl
lods
and
or
out
push
jne
xor
pop
xor
out
int3
dec
cmpsb
adc
cltd
xchg
sub
push
jae
dec
xor
cmpsb
fsincos
test
jns
xchg
insb
push
push
test
sahf
cmp
jb
insl
mov
scas
sahf
insb
out
das
mov
pop
inc
jmp
cli
mov
adc
xor
add
leave
daa
gs
je
lcall
ret
or
daa
aas
bound
push
aaa
data16
test
repnz
pandn
cs
decb
sbb
subb
push
cmpb
mov
mov
jns
or
cmpsb
leave
pop
mov
inc
int3
jp
sbb
mov
mov
lret
clc
rolb
sbb
sub
nop
stos
addr16
mov
add
xor
dec
outsl
mov
sbb
int
shll
test
push
loopne
mov
inc
sahf
add
imul
jnp
adc
cmp
cmpsl
cmc
jbe
es
or
int
mov
icebp
in
and
icebp
mov
jne
jl
and
push
lods
dec
push
out
xchg
dec
adcb
jp
inc
push
cmp
add
inc
imul
mov
int
jmp
jle
jmp
mov
and
push
sub
pop
add
jecxz
std
test
mov
loope
jns
int3
cmpsb
imul
jmp
std
mov
iret
aad
xor
jbe
and
pop
mov
jb
mov
rol
mov
fisubl
jl
mov
mov
jle
jnp
fs
push
mov
cmc
into
test
pushf
scas
out
idivb
js
jno
xchg
fimuls
mov
movsb
dec
stos
pop
xchg
mov
sub
inc
mov
adc
cmpsb
cmp
nop
dec
xchg
iret
mov
testb
mov
aas
cwtl
push
cmpsl
adc
insb
pop
dec
jp
test
adc
test
push
shlb
andb
xor
adc
add
ja
add
or
jp
adc
jg
add
aad
fdivr
xchg
mov
mov
roll
bound
into
sub
inc
adc
adc
push
out
aaa
idivb
xor
int3
cmp
repz
imul
loope
add
jno
in
loopne
mov
test
std
retw
out
mov
adc
fsubrl
nopl
idivl
insb
popa
cmpb
dec
cmpsb
add
and
fwait
inc
fadd
cld
rclb
adc
out
jae
imul
xchg
leave
and
and
repnz
bound
scas
fstps
in
mov
out
shll
and
add
push
testb
and
movl
cmp
rclb
vmovapd
arpl
sqrtps
xchg
lds
insb
testl
adc
inc
repz
stc
mov
cwtl
jbe
sarb
aad
stc
ror
pop
jge
cmc
mov
push
or
lahf
mov
clc
or
pop
fsts
jb
fsubrs
sbb
ss
sub
int
js
cmp
sbb
repz
pop
or
mov
les
jl
adc
sbb
adc
lods
or
dec
cli
rorb
enter
adc
inc
gs
pop
cmpsb
mov
scas
rorl
aas
aaa
pop
sarl
or
and
mov
mov
jp
and
push
aad
xor
mov
sti
and
xchg
pop
mov
data16
nop
lret
xor
into
test
mov
mov
sarb
xchg
shll
je
pop
xor
ret
sub
shrl
aam
out
les
or
adc
mov
stos
mov
mov
xchg
cmp
js
fisubrs
mov
xchg
ret
lret
mov
sbbl
sub
xchg
dec
les
pop
loope
popa
sbb
dec
rorl
repnz
mov
setp
jb
mov
cmp
lods
push
or
out
test
pop
fcom
mov
out
test
mov
lock
test
pop
stos
xor
inc
jp
sub
xchg
or
pop
mov
or
mov
scas
cli
in
fcompl
sub
and
cmpl
xchg
jnp
sub
scas
push
jno
cltd
add
cld
push
inc
push
jbe
in
pop
sub
mov
push
jnp
jl
xor
arpl
inc
insb
ss
mov
and
mov
hlt
fcoml
imul
sub
dec
mov
sub
nop
adc
iret
andl
add
dec
push
idivb
mov
mov
dec
push
rcrl
hlt
or
loop
ret
mov
pop
pop
push
push
scas
test
or
mov
cltd
inc
adc
sub
stos
adc
ja
cmc
outsl
je
pop
int3
fidivs
mov
je
out
push
xchg
popa
insb
inc
mov
into
lret
push
clc
pop
jge
nop
mov
sbb
adc
rcrb
insb
cmp
cld
in
mov
fcoms
jmp
sbb
stos
ds
repnz
int
nop
mov
xchg
mov
push
push
in
scas
and
enter
push
sub
stos
dec
pushf
cld
xchg
sahf
inc
daa
pop
lahf
insb
add
ds
add
roll
push
mov
aaa
lods
lock
fcmovbe
mov
flds
lcall
mov
leave
movsl
lret
hlt
test
aaa
test
insb
xlat
jle
push
xor
cmp
dec
leave
dec
xor
pop
lock
push
mov
in
jmp
fwait
jp
jp
int
add
mov
aam
xor
push
sub
mov
xorl
dec
push
stc
inc
xor
jae
xor
mov
adc
jae
pop
push
lock
pusha
cmpsl
mov
fcoms
add
fstl
push
insb
pop
dec
jbe
sahf
gs
xchg
xor
mov
pop
adc
popf
arpl
insl
mov
roll
push
or
or
test
jne
sbbb
leave
jne,pt
sbb
inc
bound
pop
xchg
imul
mov
inc
jno
mov
sub
mov
and
movl
cmp
pop
sub
mov
push
xchg
fs
iret
ljmp
test
pop
mov
jmp
pop
cwtl
ret
sub
test
lds
lock
adc
divl
dec
push
add
lret
xchg
add
cld
jns
mov
js
insl
not
mov
in
jle
cmpsb
jl
adc
out
pop
stc
sub
or
sbbb
pop
out
sarb
push
push
dec
nop
hlt
fdivs
sysret
add
and
cmpsl
hlt
xor
stos
adc
push
pop
xchg
cmp
in
and
stos
lods
imul
ljmp
ret
fwait
adc
into
lods
hlt
loop
aas
aaa
sbb
and
and
jge
and
xor
sub
dec
fsubr
daa
clc
lahf
popa
lea
and
iret
das
mov
mov
pop
int
sub
push
dec
outsb
inc
aas
js
lret
or
rorb
dec
cmp
sub
sub
int
dec
cs
xchg
out
test
in
insl
das
pop
dec
xor
jl
push
shr
daa
call
cmpsb
daa
call
push
and
mov
clc
test
xchg
mov
mov
mov
mov
mov
xorl
fstl
xor
lods
lret
adc
add
mov
push
rolb
add
xor
js
adc
loopne
jle
xchg
cld
outsl
push
cmpsl
inc
ja
ljmp
or
xor
addl
add
push
push
mov
leave
sarb
mov
enter
iret
xchg
and
add
bound
fdiv
roll
mov
loopne
jae
pop
enter
pop
mov
jl
notb
ret
scas
pop
push
dec
rclb
jmp
add
ds
ret
loopne
jge
mov
in
jp
pop
jne
xlat
adc
mov
pop
add
test
and
ret
inc
sti
push
filds
jns
or
jp
fnstsw
mov
gs
mov
jae
push
inc
in
jnp
pop
sti
pop
push
loop
sbb
push
mov
add
int
push
xchg
repz
int
enter
xchg
cmp
or
fdiv
xor
xor
sub
push
sbb
gs
jne
fwait
xchg
adc
dec
pushf
test
pop
test
and
xchg
adc
call
mov
loop
pop
out
scas
jne
cmp
xchg
ret
push
xchg
frstor
out
or
pusha
mov
mov
xchg
addr16
jnp
xor
leave
push
dec
jl
add
stos
dec
mov
xor
sbb
shr
or
sahf
nop
scas
jl
sub
shrl
pop
inc
pop
fucom
fsubs
mov
fadd
es
dec
loopne
xchg
lret
fistpll
inc
test
addb
xchg
popf
sub
shlb
sbb
ffreep
cltd
push
sti
cmp
adc
insb
js
lea
jl
adc
xor
in
dec
aas
stc
pop
adc
inc
fldl
rolb
popf
add
push
adc
dec
repz
fwait
nop
mov
scas
fwait
rep
inc
sahf
lcall
fcmovne
xchg
int3
and
jno
pop
adc
mov
popf
pop
jne
fwait
sbb
xchg
insl
ficomps
sub
inc
jo
lea
leave
stc
jno
pop
ret
loop
clc
loope
dec
mov
lcall
mov
fcmovne
lds
sbb
imul
bound
mov
popf
sbb
cs
testb
stc
lods
daa
and
sbb
jg
mov
cmpsb
loope
mov
or
sub
testl
addl
xor
xchg
negb
inc
call
push
sbb
lret
push
adc
sbb
nop
inc
push
add
cmc
lcall
inc
push
sbb
lcall
push
xor
cmp
dec
in
testl
pop
mov
xlat
xchg
pop
imul
add
test
or
mov
mov
jne
push
std
xor
pop
sub
sbb
dec
sti
dec
stos
ja
nop
daa
pushf
pop
push
cld
mov
inc
fucomip
jne
jbe
dec
mov
inc
dec
stos
stc
fwait
movsl
fucomi
inc
mov
jns
jo
lods
imul
into
scas
adc
ret
je
push
mov
pushf
xor
adc
sub
jg
adc
sub
jbe
sub
ficoms
jae
stos
call
andl
and
inc
test
lret
add
incb
pop
insb
fadds
vmulss
fisttpll
loopne
imul
rorb
add
xchg
xlat
or
mov
bound
inc
mov
sub
cs
mov
daa
push
shl
movsb
in
scas
ror
cld
dec
inc
out
int
mov
dec
js
add
pop
je
repnz
xlat
fisubrs
out
imul
add
shlb
push
push
nop
cli
add
iret
idiv
lea
adc
mov
add
adc
add
or
and
daa
xchg
mov
test
data16
dec
or
mov
mov
lds
add
mov
insl
jle
jb
push
je
cld
shl
mov
repnz
xor
nop
lea
add
cmp
fisubrs
rcrl
xchg
shll
mov
and
lods
fcomip
fwait
cmc
fcoms
and
inc
pop
sbb
mov
mov
dec
cmp
push
dec
add
cltd
push
loopne
push
and
ja
movsl
arpl
sbbl
and
out
inc
scas
jns
rcrb
mov
iret
or
jns
and
push
cld
mov
repnz
icebp
in
aad
adc
jge
pushf
notl
aad
mov
in
ficoml
mov
pop
mov
sbb
cmp
cmp
stc
sarl
inc
repnz
mov
and
dec
xchg
xchg
into
pop
jp
adc
inc
mov
mov
test
inc
add
je
fidivrl
pop
nop
pop
jp
imul
dec
xlat
mov
or
jge
mov
cwtl
cmp
dec
push
lods
push
mov
shll
xchg
in
jns
stc
push
pop
dec
xchg
sti
stos
and
mov
clc
adcb
xchg
pop
xor
iret
pusha
cwtl
adc
mov
and
clc
push
test
xchg
mov
cmpsl
mov
dec
imul
sbb
xchg
pop
mov
or
insb
push
mov
aam
test
or
lods
dec
pop
push
xor
idivl
sub
rcl
push
pop
sub
inc
push
jg
cltd
dec
repz
ret
inc
icebp
mov
cmp
rorb
cli
imul
repnz
and
fdivs
cwtl
cld
mov
xchg
hlt
xchg
push
popf
mov
dec
scas
lcall
mov
mov
bound
dec
jb
inc
fimull
mov
mov
andl
hlt
repz
repnz
stos
andl
adcb
mov
jbe
xchg
pop
inc
jmp
in
mov
aad
pop
adc
fistl
hlt
and
fdiv
xor
mov
push
dec
cmp
mov
or
add
iret
xchg
xchg
gs
xorb
mov
mov
or
dec
xchg
pushf
test
aam
js
jle
mov
pop
test
xchg
test
fwait
mov
adc
cltd
sub
jmp
sbb
jp
push
lock
shrl
and
dec
sbb
test
sub
and
push
pop
jno
inc
nop
insb
mov
jle
test
fcom
cmpsl
add
or
pop
hlt
test
nop
mov
or
sub
push
mov
call
pop
jp
cmpsb
es
sbb
mov
loop
or
and
dec
pushf
stc
xchg
inc
mov
or
dec
jg
loop
and
lea
and
lret
jecxz
mov
sbb
lret
sbb
cmpb
ja
dec
leave
and
clc
jbe
push
outsb
aaa
xchg
sbb
mov
fisttpll
inc
pop
sub
rol
cmp
adc
fisubrs
push
iret
inc
jne
andl
sub
je
scas
daa
cld
inc
sbb
push
jne
jbe
nop
xchg
inc
add
iret
xor
jns
rolb
ss
aam
xchg
out
loope
mov
and
push
sub
sahf
push
cmpsl
shrb
sti
mov
hlt
mov
or
ds
push
add
je
pushf
int3
faddl
pop
jbe
mov
xchg
cmpsb
orb
mov
sbb
scas
sub
test
cmp
add
cmp
mov
jo
add
add
inc
pop
xchg
into
lock
jnp
xor
sbb
and
push
sub
xchg
add
je
shr
mov
mov
sbb
mov
dec
push
aaa
loope
mov
sti
inc
mov
sub
ret
and
pop
mov
outsl
imul
or
xchg
lds
adc
add
xchg
mov
scas
mov
inc
xchg
jne
ljmp
push
jp
lods
sbb
out
jg
push
icebp
int
mov
inc
es
aas
sahf
notb
rcrb
repnz
out
pop
cld
push
mov
loope
fs
mov
inc
cmp
scas
mov
jl
bound
idiv
pop
scas
jae
test
test
stc
sbb
pop
and
pop
and
ljmp
mov
jp
adc
cld
cmp
lea
adc
jno
jge
jl
outsl
jle
repz
in
mov
mov
cmpsl
pop
je
xchg
in
jmp
adc
mov
mov
lock
and
dec
xor
sub
pop
cmp
ss
lods
adc
mov
xchg
lds
out
add
bswap
adc
sbb
fdivr
bound
testb
pop
ljmpw
mov
sub
cmp
shll
adc
xor
sub
arpl
pop
mov
jecxz
lahf
lods
pop
mov
lds
push
lock
sub
xor
popa
arpl
inc
push
cmp
or
inc
fldl
sub
cmpsb
sbb
jp
inc
push
stos
pop
popa
pop
xor
push
in
lds
jp
mov
jbe
std
adc
andl
jmp
in
mov
xchg
mov
mov
push
movsl
jae
int3
imul
cmp
mov
in
cltd
mov
cmp
stos
insl
call
es
in
mov
push
pop
cmc
jbe
loopne
sub
arpl
cmp
shl
or
jmp
pusha
pop
pop
imul
cmc
and
cltd
daa
dec
mov
xchg
cmp
mov
push
daa
pop
push
pop
mov
add
xchg
jbe
aad
std
cmp
xor
and
add
out
xchg
and
in
mov
xor
mov
xchg
jae
sub
aad
jbe
lret
aam
adc
cmp
pop
ds
sub
fimull
orb
jp
enter
pop
pop
fistps
xchg
ret
outsb
lahf
inc
popa
pop
mov
inc
cwtl
jns
xchg
xchg
jno
popa
mov
nop
pop
test
cmp
xor
in
nop
xor
adc
insb
ud2
popa
push
lcall
inc
inc
xor
fstps
aaa
fidivl
lock
je
cmp
push
pop
loope
test
and
sbb
negb
cmpsl
and
xor
push
fsubp
mov
hlt
insl
and
dec
cwtl
fldpi
mov
dec
ja
repnz
pop
pop
xchg
adc
shll
orl
mov
push
xor
push
rorl
in
aas
sub
xchg
mov
adc
and
es
cmp
mov
mov
icebp
cmpsl
testl
stos
sbb
sbb
xor
dec
jl
mov
mov
or
pop
imul
fs
pop
mov
xchg
mov
dec
fs
gs
xor
mov
jno
sub
mov
lds
dec
rclb
lahf
dec
jg
dec
bound
cmp
ljmp
mov
pop
inc
mov
push
lea
mov
or
rclb
into
jbe
addr16
adc
sub
aas
loopne
insb
ret
hlt
inc
dec
cmp
out
leave
cmpsl
ss
xchg
ret
scas
dec
iret
and
loope
sbb
popf
push
mov
mov
jb
js
mov
stc
jl
out
push
sti
sbb
cmp
adc
fdivrl
lret
or
xor
mov
js
sub
inc
nop
push
push
mov
adc
jno
adc
out
jns
xor
push
xor
leave
lret
aaa
cmpsl
repz
ficompl
aaa
mov
in
add
scas
inc
lods
mov
pop
pop
nop
pop
push
pusha
cmpsb
stos
or
pop
rcrl
sahf
cs
xchg
inc
dec
fwait
pop
dec
addr16
icebp
or
das
jle
out
push
xchg
inc
in
xchg
cmp
mov
cmc
add
cmp
lock
rol
jl
mov
xchg
repnz
pop
lea
andl
mov
pop
jmp
popf
add
in
std
dec
insw
inc
xchg
aaa
pop
xchg
icebp
inc
movsl
sbb
or
insl
adc
adc
fisttpll
xor
fwait
pop
outsb
mov
xor
fidivrl
mov
inc
xchg
or
cmp
sub
and
mov
cmp
out
jg
out
or
roll
lock
mov
stc
push
xor
push
popf
dec
jne
cmova
jnp
xchg
insb
hlt
int3
mov
jae
jmp
jns
addr16
into
ljmp
inc
sub
cmp
pop
test
decl
pusha
xor
mov
shr
push
mov
mov
mov
push
inc
lret
or
xor
push
nop
out
xchg
xor
and
dec
adc
fdiv
js
jl
mov
mov
cmpsl
xchg
or
inc
shl
dec
pop
mov
inc
or
popa
das
shl
fisubrs
je
test
pop
mov
es
inc
cltd
lds
sub
not
inc
lock
pop
adc
int
sbb
sbb
adc
in
stc
mov
add
pop
js
cwtl
fnstsw
push
data16
inc
cmp
clc
push
mov
mov
xchg
mov
ror
jne
std
inc
adc
adc
jle
jns
dec
mov
repz
pop
adc
cmp
aam
stos
sub
roll
mov
add
mov
and
xchg
sub
loope
mov
testb
dec
xchg
ss
cmp
out
jle
mov
ja
stos
cltd
and
mov
testb
aaa
jno
jge
push
xor
sbb
test
xor
int
or
bnd
arpl
adc
fiadds
std
aad
mov
test
daa
out
xchg
cmp
mov
cmp
adc
adc
inc
sbb
inc
jns
fisttps
inc
shl
clc
popa
std
mov
icebp
mov
stc
fsubr
clc
jb
cmp
push
out
mov
xor
loope
cli
mov
jb
mov
ret
fwait
cmpsb
or
cmp
lock
xchg
sbb
mov
xor
movsl
mov
rorb
out
and
xchg
ret
daa
cmp
xor
dec
pusha
and
jge
jge
std
js
push
pop
or
out
sbb
push
les
xlat
shrl
jecxz
lret
lock
pop
and
pop
push
rolb
and
in
add
jle
mov
xchg
jle
je
adc
xchg
dec
and
jnp
sti
arpl
and
push
lods
mov
jns
xchg
in
arpl
pop
dec
aad
fstps
and
mov
adc
sub
imul
mov
jl
and
ret
aas
cltd
and
push
mov
mov
dec
movsl
loope
imul
movsl
call
lock
jb
hlt
inc
xchg
jne
insb
push
cs
or
outsl
ljmp
stos
push
mov
add
add
xlat
inc
sahf
jbe
fstl
add
mov
cs
mov
push
int3
cwtl
lods
pop
mov
adc
fcoml
icebp
and
or
xchg
jp
sbb
jg
adc
xchg
add
sbb
fstl
pop
jmp
js
sbb
xchg
mov
out
scas
or
pop
lcall
xor
jno
les
insb
xchg
call
sbb
jle
add
inc
jge
inc
and
inc
inc
xchg
adc
and
push
push
outsb
hlt
jbe
mov
movsb
and
xchg
pop
mov
mov
jbe
jmp
scas
ja
pop
jno
test
push
stos
xor
jo
xchg
jno
sahf
or
xchg
push
mov
nop
test
lahf
sbb
stc
sbb
xor
sbb
std
jbe
dec
xlat
push
xor
insl
add
xchg
data16
sub
ret
xorps
shlb
imul
mov
fwait
jnp
adc
mov
call
cmc
ret
in
sbb
and
push
bnd
rorb
out
sarb
mov
int
push
mov
xchg
cmp
cli
lret
jge
inc
inc
outsb
ss
sbb
jge
ss
insl
jecxz
add
movb
in
jl
mov
sbb
popf
mov
test
push
xchg
cmpsb
push
inc
test
or
or
jecxz
movsl
mov
sbb
call
test
das
pusha
cwtl
fsubrs
ds
mov
dec
jecxz
jmp
ss
mov
or
ljmp
shr
mov
stos
in
cmp
xchg
pop
xchg
test
mov
adcl
mov
ljmp
aam
add
bound
adcb
sub
jmp
cmp
push
sbb
adc
lahf
sbb
inc
ret
jnp
in
pop
in
mov
push
in
cltd
pop
shll
sub
test
inc
xor
xchg
ja
xor
dec
push
loope
push
cwtl
mov
xchg
sub
mov
sbb
mov
stos
inc
or
pusha
jmp
cmpsl
in
aad
push
adc
pop
or
push
ret
jbe
mov
nop
xchg
xchg
iret
int3
sub
mov
imul
repnz
push
pop
adc
push
test
insb
jg
cmp
or
nop
inc
insb
rorl
mov
xor
int3
lock
es
or
and
mov
ss
sbbb
mov
into
mov
imul
xchg
rolb
dec
punpcklqdq
inc
xor
pusha
xor
fists
mov
mov
pop
sbb
stc
fnstsw
dec
insb
fisubrs
enter
popf
jmp
mov
stos
into
sub
mov
pop
out
push
je
into
insb
dec
adc
push
hlt
dec
rorl
imul
pop
mov
mov
adc
ljmp
mov
test
xor
cs
adc
pop
mov
inc
xor
andnps
rcl
sbb
pop
or
push
and
decl
xor
jbe
lods
adc
in
cmp
fs
and
push
loope
cmp
mov
in
mov
fldenv
ja
pop
sbb
and
sbb
orl
adc
ret
add
cmp
loopne
stos
and
into
adc
jle
hlt
jne
sub
out
xchg
sahf
push
mov
mov
andb
movsb
orb
cmp
cmpsl
jns
or
movsl
js
sub
shl
sbb
daa
mov
push
pop
push
sbb
pop
fcompl
std
inc
ficompl
pusha
adc
dec
dec
int3
lcall
cli
or
mov
mov
loope
roll
scas
jne
pop
mov
push
push
into
rol
clc
jecxz
iret
in
pop
and
in
jbe
push
inc
sbb
js
in
cwtl
push
out
cmp
mov
imul
in
jns
loop
es
jg
lds
or
mov
into
inc
mov
push
popf
cltd
dec
ret
sbb
xchg
push
add
mov
inc
mov
ret
xchg
xchg
je
inc
mov
mov
repz
sar
cmpsl
movsl
xor
and
xchg
adc
arpl
shlb
push
mov
imul
dec
bound
push
cli
movsl
mov
cmpl
sbb
cwtl
xor
sub
roll
xchg
ret
stos
xchg
jnp
cmc
jae
fmulp
adc
aaa
imul
or
push
inc
jg
cmp
arpl
out
mov
dec
jge
rorb
mov
xchg
cmpsb
push
add
in
cmp
and
sub
loope
adc
loope
lret
sub
nop
lods
cmp
aad
loope
xor
jp
sbb
rorb
or
xchg
std
cmp
dec
lea
sub
push
insl
inc
or
stos
mov
sub
rol
out
aas
push
cmc
xchg
and
loopne
in
stc
sbb
mov
cmp
sbb
xor
mov
lods
out
sub
lods
jbe
arpl
push
xchg
jle
mov
cli
lock
inc
fdivr
popa
mov
out
add
mov
xchg
sti
jge
mov
sbb
loopne
mov
int
pop
rol
aam
adc
jno
adc
out
dec
mov
mov
mov
ja
mov
mov
aaa
pop
insl
incl
pop
pop
fstps
pop
push
push
xor
fildll
mov
xor
fadds
pusha
dec
popf
or
and
dec
xchg
cmpsb
push
cmpsb
fadd
std
subl
lret
xchg
roll
aaa
pop
sub
pop
push
lock
or
inc
movsl
mov
adc
scas
stos
repnz
jl
jmp
push
push
mov
push
lcall
gs
mov
pusha
enter
mov
jg
mov
dec
rcll
fdivp
mov
pop
jg
cli
mov
test
sbb
add
icebp
mov
cmc
or
cmpsb
popf
dec
int3
sub
dec
sbb
or
hlt
nop
mov
fdivrs
inc
js
lcall
in
sbb
mov
pop
inc
sbb
mov
push
int3
pop
sub
sti
ret
popa
add
jno
test
std
testl
clc
mov
cmp
inc
or
cltd
jge
inc
aas
sub
jg
ljmp
sbb
dec
mov
cmp
stos
sbbb
add
int3
imul
mov
jno
lret
cmpsl
xor
andl
out
ja
mov
out
jns,pt
xchg
xchg
sbb
cmp
lahf
mov
adc
jbe
cmp
ret
xchg
lahf
mov
ja
xor
imul
mov
dec
and
push
call
add
sub
or
jne
in
loope
movsb
dec
xor
fsincos
fcompl
sbb
jl
pop
dec
fmul
fwait
or
mov
addr16
inc
das
mov
popf
scas
or
ja
sub
fs
cmpsl
fnstsw
notl
pop
in
inc
std
sbb
push
push
inc
mov
inc
cs
aad
push
push
shll
adc
stc
push
jl
pop
add
sti
mov
jle
sbb
inc
jg,pt
scas
mov
adc
in
ret
jmp
push
add
sbb
dec
in
pop
add
ret
aas
and
repz
or
cmpsl
jne
imul
jb
pop
mov
sub
push
or
pop
sub
pop
cmc
push
add
mov
shrl
cmp
push
mov
mov
or
mov
sbb
inc
sti
test
aad
cmp
js
pop
xchg
gs
push
outsb
movsb
mulb
mov
popa
mov
mov
into
jg
pop
lret
out
ljmp
adc
ja
pop
or
add
lock
mov
sub
js
popl
xor
xlat
test
cmpl
int3
xchg
jp
xor
inc
mov
out
inc
inc
imul
pop
and
jmp
and
push
fcomp
rcl
pop
loopne
fimull
test
fcomp
adc
fucomi
pop
inc
mov
sti
cmpsl
stos
movsb
out
in
outsb
jne
ret
sub
test
xor
jne
fnstenv
and
sub
dec
push
push
cmp
inc
inc
dec
push
inc
mov
pop
outsb
repz
sahf
popf
push
pop
movsl
and
ret
push
add
jno
aam
adc
pop
push
jnp
jecxz
sti
popf
sub
and
ret
pop
push
data16
in
jno
out
push
fs
and
xlat
and
ficoml
jbe
push
in
jne
test
mov
cmc
pop
pop
cmp
and
push
or
inc
dec
mov
aad
fdivrl
std
arpl
je
cmp
popa
sti
inc
orl
cmpsl
mov
push
sub
mov
mov
in
ret
adc
test
adc
cmp
push
test
mov
out
add
scas
jg
cmc
es
push
ret
fisttpll
pop
or
and
rcrb
ret
cs
adc
fbld
mov
es
jecxz
je
jbe
or
lahf
or
push
sbb
xchg
ret
ljmp
xlat
ja
xchg
dec
jae
dec
jbe
push
pop
xchg
js
lahf
push
test
outsl
in
jecxz
popf
push
xor
fisubs
push
int3
mov
mov
jge
pop
cmp
push
popa
and
cmp
andl
cs
sub
das
lret
inc
decb
popa
pop
jge
jmp
add
adc
cmp
adc
inc
mov
dec
cli
jns
adcb
mov
mov
xlat
sub
jl
mov
bound
out
aas
call
add
xor
pop
mov
das
insb
sub
int
negl
fst
test
daa
cld
xor
add
mov
cs
enter
mov
inc
loopne
fadds
iret
into
idivl
dec
arpl
mov
sub
rol
lds
jecxz
out
ret
mov
fsubs
cmp
jg
loopne
inc
test
in
shr
sub
mov
sub
sete
cmp
xlat
icebp
gs
xor
jne
dec
decl
xchg
push
lods
scas
adc
inc
rorl
cmp
test
sarb
adc
cmpsl
movsl
dec
xor
sbb
pop
arpl
shll
out
cli
pop
mov
sub
std
push
mov
sahf
xchg
not
mov
push
xchg
cwtl
or
adc
push
in
push
sbb
cli
loop
jno
inc
out
insl
je
jl
sub
adc
daa
jl
add
call
idiv
sub
mov
test
out
scas
xchg
arpl
test
xor
pop
cs
cmc
je
pop
and
imul
inc
sub
xchg
in
jmp
inc
mov
push
jns
insl
xchg
out
shlb
jno
xchg
cld
or
adc
pop
repnz
and
sub
push
mov
rorl
iret
adc
int3
call
adc
hlt
addr16
lahf
fsubrl
push
inc
mov
gs
mov
push
lea
mov
pop
push
sbb
mov
out
ficoml
cmp
inc
lods
and
loopne
daa
orl
sti
insl
xor
jne
xor
jb
push
mov
xor
push
ljmp
sbb
dec
mov
and
mov
rorb
jne
je
mov
mov
out
sbb
in
inc
fwait
lret
dec
jle
pop
dec
daa
mov
push
pop
movsl
test
mov
push
jl
cmp
cwtl
lcall
cmc
mov
mov
sbb
pop
sahf
jno
loope
sub
xor
lea
sub
mov
sbb
or
pop
repz
lret
sub
sub
push
push
jnp
push
push
pop
cli
cmpsb
repnz
xlat
pop
or
ret
cltd
sub
jle
dec
inc
jae
js
jo
imul
pop
add
mov
rcrl
cmp
jp
das
dec
or
inc
nop
add
add
stos
sar
pop
add
and
push
nop
cmp
xchg
rolb
jns
sahf
iret
mov
mov
mov
sub
jp
or
pop
jno
xchg
push
xor
cmp
or
call
in
add
mov
sbb
xchg
movsb
dec
cmp
mov
adc
mov
jg
pop
push
push
pushf
dec
notl
in
test
pop
or
into
rorl
gs
arpl
pop
loope
sti
in
or
aas
ss
cmpsl
dec
add
pop
add
popf
adc
in
pop
int3
mov
jle
dec
lcall
scas
rcl
mov
scas
adc
push
fnsave
push
bound
fmull
xor
lret
leave
shrb
loop
pop
scas
xchg
add
ja
mov
mov
push
jmp
sahf
sbb
mov
in
pusha
out
int
jp
les
inc
mov
leave
js
xchg
pusha
test
fnstcw
dec
cmpsb
mov
jo
and
sub
add
in
ds
sub
cmp
jp
out
roll
xor
imul
gs
mov
xlat
fcmovnb
lds
call
cmp
pop
shrb
or
cmpsb
cli
lock
pop
scas
insl
add
and
mov
cld
pop
dec
mov
mov
inc
inc
mov
inc
popf
sub
jp
xchg
pusha
xchg
stc
and
xchg
mov
lahf
adc
mov
push
mov
enter
loopne
dec
bound
jl
int
add
xchg
jmp
pop
out
and
int3
pop
test
in
test
in
lods
aaa
pop
imul
scas
pop
add
fnstsw
lods
sti
cmp
cmc
pop
and
sbb
inc
and
xor
mov
sahf
pop
mov
pop
std
fcoml
mov
loopne
das
add
movsl
push
xor
jo
xor
jbe
sub
in
add
cmp
jecxz
neg
je
rclb
or
sub
push
ret
xor
and
add
or
movsl
adcl
sbb
lgs
jp
push
int
push
ficoms
push
xchg
call
popf
std
fstpt
or
adc
out
out
fcoml
mov
sbb
into
movsl
sbb
cli
das
pop
xor
fdivr
cmc
andb
addr16
clc
iret
rclb
imul
sub
mov
xchg
xor
xchg
inc
fsubr
outsb
popf
frstor
inc
and
inc
push
and
jp
cs
fst
lret
jb
pop
shl
adc
imul
mov
sar
lods
jp
movsb
cmp
dec
into
lods
and
xor
sahf
sbb
daa
cwtl
dec
ret
xor
cltd
mov
xor
shll
pop
push
iret
sub
mov
fidivl
repnz
leave
mov
jg
add
out
dec
mov
into
mov
jno
push
ret
jnp
lods
mov
jbe
jno
xor
test
mov
dec
aad
sahf
movsl
lea
arpl
sub
cmp
mov
adc
int3
add
pop
in
and
sarb
push
sub
aas
jae
mov
cmp
scas
test
xor
in
xchg
fcoms
mov
xorb
or
mov
cwtl
mov
push
shlb
sub
jnp
xor
sti
lds
mov
add
push
inc
out
outsl
mov
daa
test
das
xlat
pop
cmpsl
adc
mov
shrb
dec
test
jo
inc
mov
mov
xor
shll
fs
adc
sarl
sub
das
mov
mov
cli
decb
xlat
test
sub
bound
or
push
cli
jecxz,pt
pop
cmp
push
mov
push
lea
mov
test
stos
mov
push
and
add
int
rorb
mov
in
sbb
je
repz
sbb
mov
inc
dec
jmp
fstl
loope
stos
ljmp
cli
mov
ja
sti
daa
mov
and
inc
dec
add
jmp
nop
mov
pop
mov
jl
mov
pop
icebp
arpl
pop
mov
sbb
jl
cmp
in
pusha
push
ljmp
and
aam
cld
sub
cmp
mov
lea
sbb
jmp
xchg
lahf
cmpl
das
jg
inc
pop
enter
out
dec
lods
js
sub
mov
adc
pop
adc
sbb
mov
jns
loop
push
push
sub
pop
sbb
les
sti
fildll
push
cmp
shrb
stos
lock
aas
mov
jl
sarb
mov
jmp
jae
sbb
and
nop
lock
push
cmc
mov
sbb
or
and
mov
adc
stos
loop
cmp
nop
shrb
push
fs
jo
or
std
jmp
add
xchg
and
jge
pop
jo
dec
sub
jmp
into
stc
or
stos
push
es
ret
leave
jl
out
test
leave
cmpsl
cmc
cmp
or
int3
mov
adc
je
movsb
add
pop
cmp
jge
es
mov
cmp
mov
cmc
dec
int3
xchg
sbb
inc
cmp
mov
lock
sbb
sub
mov
sub
dec
popa
or
in
pop
jge
or
push
push
lret
push
movsb
rcrb
inc
mov
push
mov
push
cmpl
mov
cli
pop
mov
xor
jb
jle
cmp
push
popf
loope
aam
cmp
pop
sub
pop
push
movsb
lcall
int3
xchg
addr16
jl
es
add
sbb
out
andl
insl
mov
jge
es
add
adc
in
or
push
shlb
inc
stc
pop
inc
insb
or
cmc
scas
add
mulb
xchg
and
mov
inc
lods
dec
leave
das
imul
test
and
xor
in
cmp
outsl
jmp
xchg
dec
scas
mov
mov
cmp
scas
jb
cmp
inc
sahf
in
addb
aaa
xor
dec
ss
jns
ret
mov
repnz
jno
sub
mov
sub
or
jp
pop
outsl
jno
mov
inc
int
adc
inc
inc
push
iret
or
add
ss
paddsw
adc
repnz
cmc
mov
mov
hlt
sbb
mov
or
ret
dec
fcoms
mov
xchg
adc
pop
push
or
dec
bound
movsl
push
test
insl
pop
cli
ret
je
popf
or
ljmp
notb
aas
loope
dec
xor
mov
loope
je
pushf
clc
or
cs
test
pop
mul
into
dec
inc
dec
inc
pop
jmp
lock
push
cltd
mov
mov
jnp
mov
mov
scas
mov
dec
mov
dec
subl
cmp
sbb
pop
rorb
dec
push
test
xchg
int3
fcoms
mov
aas
sbb
dec
rcl
push
jmp
aad
xchg
nop
pop
mov
cmp
lods
add
inc
mov
mov
pop
imul
push
inc
das
xchg
mov
inc
dec
jbe
fistpll
repz
fs
xor
xchg
add
cwtl
aam
dec
cmp
divl
cmp
cmp
sub
das
sub
sub
fs
add
hlt
and
out
jge
pop
imul
insb
inc
inc
jmp
loop
push
das
or
mov
inc
pusha
pop
xchg
mov
test
xor
imul
pop
inc
sti
dec
xrelease
shlb
outsb
int3
and
cmpsl
inc
xchg
mov
hlt
cwtl
sbb
mov
push
or
ret
mov
xor
insl
inc
inc
ds
test
lds
sub
jnp
pushf
lods
stos
jne
xchg
push
pop
or
dec
enter
sbb
out
push
mov
shlb
lcall
sahf
outsb
pop
cmpsb
sub
gs
fsubr
in
sub
or
jge
aad
dec
jle
dec
nop
cld
pop
add
jg
mov
pop
scas
jo
push
std
sar
and
push
dec
out
jmp
or
popa
adcl
inc
mov
fadds
jno
sbb
lahf
clc
fiadds
cmp
movsl
shrb
xchg
sbb
cmc
inc
or
out
arpl
enter
pop
dec
add
or
push
add
inc
sub
mov
jno
cmp
ret
jl
das
sub
and
jp
imul
or
adc
test
mov
outsb
jno
int
xchg
imul
ja
add
mov
scas
xchg
push
jmp
dec
dec
inc
inc
fdivrs
mov
lahf
ret
jle
addr16
hlt
stc
rcll
pop
jns
and
lock
stos
repz
out
scas
cmpb
lea
or
fidivs
mov
jb
and
imul
dec
or
jo
xchg
out
inc
lods
pop
aas
arpl
outsb
fisubs
orb
lea
push
and
sbb
mov
jg
mov
ljmp
pop
mov
shrb
sarb
pop
push
repz
out
jnp
lret
call
pop
sahf
test
pop
cs
or
insb
sbb
mov
cmc
pop
add
xor
sbb
in
cmp
mov
push
lods
fsubrs
ds
jnp
pop
mov
mov
jne
cmp
pop
jno
pop
mov
sbb
popf
out
mov
rcll
mov
gs
pop
jno
or
sub
imul
daa
adc
lds
jb
mov
ljmp
pop
and
lea
in
mov
jbe
cmp
pop
fisubl
andl
jne
out
pop
adc
sbb
or
push
out
mov
lods
push
addb
xchg
les
jge
cmp
clc
or
lds
mov
jae
sub
ret
sub
into
call
in
dec
mov
movsb
daa
aad
sub
into
xchg
xorl
or
push
stos
mov
fdivrs
sti
mov
ffreep
xchg
xchg
adc
sbb
aas
lock
jge
out
outsb
xchg
xchg
into
sbb
mov
dec
xchg
aad
push
push
add
sub
rclb
inc
sahf
ds
sub
scas
rcrb
xchg
clc
jno
aad
je
popf
testl
inc
xor
cwtl
sub
scas
cwtl
jno
mov
and
cltd
call
in
sub
dec
sahf
mov
jp
mov
aas
xchg
scas
outsb
in
fs
out
dec
add
rclb
adc
mov
push
int
jo
sbb
xor
orl
dec
jmp
sbb
push
mov
cwtl
dec
jmp
and
xor
das
add
dec
in
and
mov
dec
cli
aam
enter
mov
scas
and
sbb
aas
lds
or
jne
dec
test
rclb
mov
xor
sarb
loop
inc
pop
push
sarb
or
mov
xor
les
gs
jmp
std
inc
add
sub
mov
mov
in
adc
in
jo
xor
stos
in
call
insl
je
push
push
scas
xor
jnp
cmp
push
sub
pop
push
jbe
jo
pusha
adc
test
sahf
orl
adc
out
mov
mov
lods
gs
xchg
lret
jge
pop
lods
ss
push
stc
xor
popa
add
not
scas
popa
loope
jl
pop
movsb
scas
dec
push
mov
push
pop
add
and
sbb
dec
cmpsb
push
dec
jmp
mov
test
pop
fists
mov
repz
in
push
jmp
sti
mov
adc
mov
dec
inc
push
mov
bound
scas
outsb
scas
ss
jge
fistpl
imulb
sbb
hlt
jmp
inc
into
sub
aad
icebp
push
js
add
cmp
mov
mov
addr16
push
dec
inc
jne
mov
inc
inc
sub
pop
ret
test
movsl
inc
add
push
mov
daa
xchg
sub
xchg
movsb
sbb
push
fdivrl
add
imul
push
in
xchg
sti
mov
jge
xchg
mov
sahf
ret
inc
mov
popa
push
cmp
mov
dec
or
or
pop
jns
insb
inc
iret
sarb
mov
push
mov
mov
mov
sarb
sub
pop
pop
lret
adc
leave
or
jne
imul
mov
or
fiaddl
ja
mov
add
test
sub
out
xor
push
fs
aas
in
add
aad
fs
repz
ror
or
push
lods
out
and
sti
cltd
mov
in
out
sbb
outsl
and
jg
clc
lcall
pop
outsl
ja
mov
sar
inc
into
xor
outsl
xchg
addr16
jp
push
stos
test
dec
add
dec
ss
and
popa
fmull
pop
frstor
bound
mov
test
jns
outsl
in
popa
mov
fs
pop
and
mov
xchg
mov
or
xchg
jbe
in
xchg
sub
dec
sbb
xchg
add
jns
fcoms
daa
rorb
in
sub
nop
jns
jbe
flds
les
lods
cmc
jg
fsubrs
xor
jns
adc
lret
mov
out
test
lahf
fadd
ljmp
or
push
in
push
dec
or
mov
movsl
and
push
movsl
mov
mov
enter
mov
sbbl
repz
pop
test
stos
jmp
daa
mov
push
loopne
out
fadd
pusha
push
add
cmp
cmpsl
or
cmp
adcb
add
mov
jae
out
inc
jo
iret
mov
outsl
or
or
cmpsb
pop
into
cs
mov
sub
xchg
mov
test
mov
inc
cs
das
out
mov
rclb
mov
repnz
inc
push
js
icebp
cmp
dec
scas
and
pusha
data16
jnp
add
js
mov
stos
or
cli
js
es
and
lock
or
outsl
push
cmp
lods
add
je
icebp
xor
mov
sub
and
in
inc
fisttpl
jecxz
test
addl
add
sbb
adc
cmc
lea
movsl
in
mov
mov
ret
je
mov
mov
mov
xor
xor
push
and
dec
mov
add
fnsave
test
in
int
jb
lret
repnz
mov
out
inc
std
leave
push
cmp
aam
and
add
and
negb
jge
fsub
cmp
into
arpl
in
lcall
cmp
stos
inc
out
stc
cs
sub
insl
aad
dec
xchg
cmp
loope
dec
mov
and
sub
aam
mov
xor
add
mov
in
mov
mov
or
sbb
xchg
inc
pcmpgtb
je
cmp
xchg
mov
pop
stos
fldcw
mov
lret
sti
mov
insb
cmc
ds
hlt
dec
stos
lret
test
and
int3
or
xchg
jl
push
mov
loop
push
jl
mov
fs
scas
mov
es
cmp
xchg
aad
popa
pusha
xor
rolb
mov
push
out
lahf
jne
adc
lcall
vpsubsw
test
push
out
mov
cmp
gs
rorl
data16
fstl
adc
ljmp
mov
out
ds
je
pop
pop
insl
xor
popa
es
xchg
and
push
shrl
add
push
sub
pop
out
out
xchg
push
pop
js
gs
out
adc
scas
cmpsl
leave
lds
add
mov
pop
adc
mov
fucom
mov
xor
and
add
loope
mov
sbb
inc
mov
push
push
mov
xor
lea
inc
xor
dec
jae
xor
sbb
xchg
or
inc
enter
js
mov
dec
dec
rcrb
and
jle
int
sarl
xchg
xor
pop
dec
daa
adc
xor
add
pop
mov
and
xchg
loopne
xor
mov
fstpt
call
rcrb
add
ret
push
xor
stc
leave
and
and
xor
xchg
rcrb
xchg
es
sti
xor
push
inc
sarb
pop
pushf
adc
pusha
test
fists
add
dec
cmp
clc
cmpsl
push
rcrl
imul
ljmp
shl
ljmp
sbb
loop
pextrw
mov
mov
add
leave
fidivrl
daa
loopne
insl
pop
jecxz
jae
jg
xor
push
pop
repnz
mov
dec
dec
repnz
fidivrl
jnp
stos
cmc
jp
pop
xchg
jp
sti
lret
push
xchg
and
out
rolb
inc
dec
pop
sub
sahf
mov
add
mov
inc
and
or
mov
popa
xor
cmpsb
cmp
mov
mov
pushf
fsubr
test
ljmp
push
inc
mov
jnp
jnp
inc
testl
push
and
mov
shll
jge
pop
mov
sbb
scas
and
loope
mov
lcall
out
and
rorb
out
mov
stos
aas
xchg
fidivl
mov
sbb
jmp
repnz
orb
les
hlt
ret
bound
in
lock
out
or
mov
outsl
arpl
fadd
sub
jae
and
mov
cmpsl
shl
rclb
inc
and
pop
cs
or
jne
fs
imul
mov
cli
mov
pop
add
adc
sbb
hlt
push
adc
mov
in
adc
xor
push
mov
sbb
push
loopne
adc
ss
cltd
sarl
mov
sbb
pop
mov
jo
outsl
mov
jmp
push
mov
xchg
ds
lock
pusha
stc
mov
cmp
jge
jge
and
sub
seto
sub
push
xlat
jecxz,pn
mov
jp
into
nop
lods
out
dec
je
daa
sahf
shrb
bound
shll
mov
mov
inc
adc
mov
insl
pop
cmpl
add
fwait
pop
adc
add
jne
mov
sahf
jle
or
aas
push
pop
in
stos
loopne
jmp
test
mov
imul
push
xor
xchg
push
sbb
test
sti
rcrl
int3
sub
imul
out
xchg
mov
fisttps
in
pushf
cli
inc
jbe
add
sub
notl
cwtl
sub
scas
sbb
movsb
inc
dec
cmp
jo
ret
lret
xchg
mov
fimull
and
jnp
sub
pop
ja
bound
xchg
sbb
mov
aas
es
jnp
jmp
out
lret
xorb
xchg
pop
cmp
push
dec
loope
dec
mov
rdpmc
dec
mov
adcl
sub
jno
mov
xor
cld
fs
push
shll
sub
dec
inc
call
cs
cmp
or
js
cld
inc
lods
mov
cmp
and
add
clc
in
jb
stc
adc
push
adc
xchg
dec
inc
repz
pop
push
out
movsb
ja
and
es
scas
ret
mov
sbb
das
aas
push
mov
sbb
push
dec
insb
dec
push
xchg
int
imul
movsb
adc
andl
dec
xor
jns
xchg
push
pushf
and
mov
and
lea
jg
and
mov
push
push
test
pop
xchg
push
mov
mov
addr16
cmpsl
jle
movsb
sub
xchg
adc
mov
mov
pusha
xor
sub
mov
sub
jg
cmpsl
mov
test
dec
pop
inc
jmp
data16
cli
pop
or
fadds
jmp
or
lret
in
rorb
sub
stos
movsl
call
add
push
mov
bound
and
and
roll
xorb
pop
pop
rcrl
jl
pop
jmp
lret
sbb
mov
mov
mov
jns
jnp
int
xchg
call
ljmp
adc
mov
inc
popl
in
inc
jne
inc
nop
lahf
jle
in
sub
jne
sbb
divl
adc
imul
arpl
add
fs
push
shll
push
push
shrb
enter
fs
mov
divb
pushf
iret
pop
arpl
mov
inc
pop
push
cmpsb
scas
ljmp
ffreep
rcrl
movsl
imul
pop
test
inc
lds
mov
icebp
jmp
clc
dec
pop
add
hlt
sub
sti
xlat
int3
mov
dec
cwtl
fadd
les
data16
xor
incl
daa
in
stos
cmpsl
mov
xlat
adc
ds
mov
sub
cltd
js
sbb
sahf
aam
mov
jbe
stos
icebp
push
mov
add
mov
div
add
inc
data16
outsl
and
jns
pop
xchg
sbb
push
or
repz
or
fstpt
sahf
stc
cmpb
push
shrl
xor
and
fstps
shl
lock
xor
cs
xor
cmp
push
out
inc
pop
mulb
cli
sbb
push
push
push
adc
outsl
gs
insl
add
ss
test
jo
push
xchg
shll
mov
in
das
mov
mov
lds
push
cmpb
and
sti
mov
jo
dec
pop
scas
int3
and
and
sub
ss
lods
aas
popa
sub
add
fistpll
inc
jecxz
ss
cmc
out
outsl
rclb
sbb
cmc
sub
shl
jmp
push
fs
test
mov
lea
jge
push
jle
mov
daa
rorb
xor
xchg
aaa
arpl
arpl
or
into
and
cli
push
incb
mov
popf
mov
add
add
aas
loope
xor
addb
mov
sbb
and
adc
loop
push
jns
mov
and
sub
cmp
push
jmp
jge
sbb
pop
ret
xchg
add
mov
push
imul
pop
pop
and
mov
dec
outsl
xorl
shl
movsb
push
push
push
push
ret
mov
in
out
inc
movsb
mov
je
lods
jle
loop
xchg
push
nop
push
inc
pop
pop
push
inc
jb,pn
rclb
out
adc
sub
dec
or
jle
and
jp
daa
xor
push
pop
test
jecxz
in
loop
push
dec
adc
mov
xor
mov
loope
pop
mov
scas
lret
xor
mov
inc
aaa
hlt
in
cmp
or
cli
and
or
pop
inc
mov
ret
scas
mov
mov
outsb
movsl
mov
in
xchg
jnp
or
test
or
stos
xchg
xor
mov
cmp
lock
mov
lahf
xchg
pop
xor
inc
aaa
dec
xchg
push
scas
xor
cmpl
insl
jle
repz
push
sahf
cmc
cli
test
icebp
bound
faddl
pop
hlt
mov
in
dec
lods
lret
data16
in
xchg
and
cmp
add
mov
int3
mov
test
jge
mov
shll
and
pop
rol
and
push
or
and
rorl
xor
and
into
lahf
jmp
mov
add
sarl
in
xchg
jo
pop
inc
xor
imul
sbb
jae
shll
popa
out
test
ja
xor
cmp
mov
cli
pop
cld
xor
push
in
bound
sbb
ljmp
mov
iretw
cmc
inc
ret
push
xchg
inc
sbbb
jmp
pop
imulb
pop
pop
ss
iret
mov
mov
out
std
fcmovne
or
push
mov
mov
stos
inc
pop
pushf
add
test
mov
dec
inc
fbstp
in
cs
clc
lods
es
jnp
icebp
clc
repz
jno
mov
insl
sub
imul
and
outsl
and
jge
adc
sbb
mov
jbe
rcr
dec
xor
rol
jb
push
xchg
jle
mov
lea
cmpsb
mov
loope
popw
mov
mov
lock
insl
add
test
and
mov
cmp
enter
xorb
ljmp
or
out
inc
ljmp
aam
or
imul
push
std
sbb
fstpl
scas
sub
jmp
push
movsl
mov
loopne
xchg
pop
push
movsb
jl
ss
jmp
in
mov
in
mov
inc
in
out
stos
ss
setno
mov
adc
gs
xchg
mov
fs
repz
inc
inc
mov
outsb
jmp
sbb
dec
adc
outsl
cltd
pop
out
mov
nop
sbb
or
inc
je
leave
inc
mov
stos
xchg
mov
shl
scas
jl
inc
cmpsb
mov
jle
sub
sub
xchg
fisttps
inc
xor
sbb
inc
repnz
test
mov
mov
pop
mov
lret
xor
adc
sub
adc
xchg
or
loopne
arpl
rorb
icebp
lds
into
popf
sub
mov
or
sbb
mov
cmp
ja
lret
xor
mov
inc
push
and
sub
jne
lock
das
aas
mov
pop
data16
xor
mov
lods
arpl
xchg
stos
pop
das
mov
xlat
mulb
and
adc
adc
dec
dec
js
sub
push
hlt
jno
test
popf
jmp
sbb
lods
fidivrl
or
push
xor
push
and
adc
movsl
sub
push
inc
aam
out
outsb
and
jne
pop
xchg
test
ret
mov
mov
push
adc
iret
or
insl
or
push
out
divb
arpl
mov
dec
jge
aaa
incb
imul
mov
mov
pop
ljmp
push
dec
mov
int3
inc
sub
mov
mov
ret
jno
xchg
in
dec
xchg
ljmp
jne
xchg
cmpsl
push
push
test
popa
mov
pop
dec
sbb
jb
dec
in
xor
xchg
push
push
cmp
pop
dec
jbe
mov
cmpl
jmp
lock
insl
or
inc
fisttpl
sarb
mov
cwtl
cmc
mov
movsb
push
sub
mov
or
cwtl
pop
sbb
jp
and
js
jle
jge
dec
adc
inc
push
xchg
mov
fistl
xlat
jmp
mov
mov
adc
frstpm(287
sbb
jnp
add
and
and
enter
jnp
add
js
les
jnp
lea
mov
xor
sub
cmp
je
les
arpl
aas
push
out
movsb
and
scas
stc
sub
popa
scas
fucompp
fists
lods
in
push
sub
sbb
outsl
pop
sub
mov
stos
stc
pop
mov
repnz
in
sarl
test
pop
xor
daa
push
lea
push
or
fldenv
lahf
xchg
cwtl
jno
test
out
cld
jmp
mov
inc
mov
das
adc
iret
jno
pusha
mulb
in
insl
push
aaa
push
mov
push
pminub
dec
fucomi
sti
gs
arpl
or
movl
mov
lcall
pop
add
mov
scas
outsl
cmc
dec
and
test
test
mov
xchg
inc
leave
fucom
sbb
jl
out
cwtl
movsb
mov
mov
inc
cli
xchg
push
push
bswap
insl
into
icebp
inc
leave
cmpsb
cmp
filds
lds
fcmovnbe
push
push
orl
adc
pushf
pop
pop
jns
repnz
fnstsw
fisubs
test
out
scas
push
into
and
mov
dec
jp
ror
rcrl
push
pop
mov
insb
cmp
push
mov
inc
lea
cmpsb
gs
pop
orb
nop
mov
add
cwtl
and
xor
mov
push
les
lahf
xchg
fsubl
test
push
scas
addr16
popa
mov
jmp
or
out
repz
mov
lods
jmp
or
push
sub
mov
ja
xchg
push
aad
cmc
lret
xchg
in
notl
mov
movsb
push
data16
std
jnp
pop
mov
xchg
dec
cs
call
aad
sbb
jbe
cmc
ds
hlt
cmp
dec
mov
into
decl
rorl
in
fsub
sbb
jo
xor
inc
mov
xor
inc
enter
push
loop
ficomps
sbb
jns
lahf
mov
adc
sub
xchg
mov
cmpsl
mov
jns
jbe
movsb
push
icebp
adc
fs
sahf
movsb
movb
adc
pop
jmp
andb
sti
shr
sub
and
sub
add
arpl
and
movsb
jns
mov
cmc
sarb
int3
pop
test
ds
jns
xchg
lret
andl
roll
lret
daa
mov
mov
xchg
inc
dec
int3
fsub
pop
gs
mov
xchg
ds
push
jecxz
bound
test
nop
ficoml
mov
mov
mov
xor
mov
call
or
mov
loope
inc
jno
fbld
in
mov
or
call
lock
ja
cmp
repnz
pop
insb
jno
mov
mov
inc
data16
jl
fucomp
test
mov
xchg
mov
add
movsb
add
les
jp
je
imul
push
neg
push
add
mov
stos
dec
psllw
into
push
test
sbb
push
or
fstpt
jp
imul
and
cld
inc
insb
and
repnz
lahf
cmp
dec
inc
adc
loope
adc
cmpsl
mov
cmp
imul
int
add
lods
jb
mov
std
rol
in
imul
cmovp
mov
jle
push
sub
mov
xor
loopne
hlt
lea
or
pushf
inc
mov
enter
cmp
mov
aaa
notl
outsl
or
xchg
mov
xchg
cmp
or
cmpsl
push
lea
jae
jmp
shll
shll
insl
sub
inc
ja
pop
or
int
cmpl
ja
jno
int
pop
stos
jmp
ret
xlat
mov
adcb
fwait
jo
inc
dec
or
stos
dec
jne
jbe
stc
xor
test
rorb
sbb
or
inc
cmp
sahf
push
mov
loope
idivl
pop
mov
in
push
lret
mov
inc
xor
inc
outsl
xor
jnp
loop
mov
mov
test
nop
fbstp
fidivrs
repz
nop
cmp
pop
xchg
verw
iret
cs
addr16
inc
push
mov
pop
rcl
test
dec
cmp
sti
cli
sbb
cmp
inc
or
cmc
cmpsl
mov
stos
icebp
mov
bound
jg
xchg
xchg
dec
dec
bound
ficompl
cwtl
imul
shll
jb
jmp
or
push
mov
mov
push
stc
scas
ljmp
sbb
ja
or
cmp
adc
jns
cmp
inc
in
mov
imul
pop
xor
fxch
adc
push
cld
sbb
sahf
cltd
or
xor
xchg
inc
test
stos
cmp
adc
inc
scas
scas
sub
add
mov
xor
and
add
ficoms
out
xchg
subb
mov
or
rcrl
inc
test
ljmp
and
ja
cltd
or
or
outsb
popf
adc
mov
and
sub
scas
pop
jbe
add
jl
adc
cmp
stc
add
ja
fsts
xor
lods
outsl
dec
cwtl
jle
mov
and
test
mov
jmp
pop
fstpt
sahf
adc
popf
cli
adc
or
outsl
push
push
or
add
jecxz
mov
daa
push
xor
scas
into
test
out
pop
mov
mov
stos
sub
jbe
and
add
jns
incl
cmp
pop
aas
mov
pushf
adc
sub
ja
testb
cmp
pop
imul
repz
xchg
sub
ja
lods
pop
mov
sub
and
jne
adc
xchg
imul
je
imul
dec
inc
adc
xor
sub
add
xor
xchg
lods
int
test
repz
adc
adc
adc
fldt
xor
shrb
dec
iret
pop
jg
stos
and
or
pushf
cmp
cs
fdivrs
fwait
xchg
sub
shll
mov
xchg
adcl
lds
mov
mov
inc
frstor
mov
inc
aas
dec
mov
icebp
mov
xchg
arpl
out
add
sar
or
cmp
adc
popa
or
fsubs
stc
dec
fs
fstps
pop
inc
cmp
arpl
pop
dec
pop
sarb
jb
and
out
cmp
mov
test
call
xor
jle
and
in
nop
adc
aas
call
jb
xor
fcmovne
popa
mov
sub
or
movsb
inc
push
rcrb
sub
mov
push
std
subl
sub
fcoms
movb
pushf
mov
outsl
mov
aaa
in
js
data16
hlt
dec
ror
sub
daa
mov
cltd
mov
fwait
cmp
insl
ffreep
pop
out
and
sbb
and
loopne
inc
arpl
mov
inc
xchg
mov
xchg
sti
mov
cmp
fs
loope
jo
lcall
mov
inc
cs
add
push
mov
inc
dec
xor
incl
push
jecxz
pop
dec
mov
dec
repnz
mov
sbb
and
dec
mov
or
xor
jle
add
inc
jge
mov
jo
int
stos
aaa
mov
cmpsl
js
pop
subb
jmp
sub
pop
loopne
and
or
or
cwtl
out
movsl
mov
cmp
testb
and
in
dec
out
mov
xor
mov
xchg
test
dec
xchg
cmp
sti
inc
and
inc
in
push
loopne
loopne
call
jne
into
adcb
loop
call
dec
sbb
cmp
pop
push
add
pop
and
adc
mov
shrl
mov
test
fsubl
pop
sbb
lods
stc
aad
popa
iret
aad
repz
mov
sti
rcll
aaa
dec
cmpsl
out
and
lcall
sub
adc
cltd
fwait
lret
xor
jnp
pop
pop
outsb
mov
rclb
pop
imul
lea
call
mov
xchg
pop
test
push
pop
pop
pop
pop
sub
andb
pop
mov
inc
sub
pusha
bound
or
and
pop
xchg
cmpsb
sbb
pusha
push
es
sti
jl
fs
bound
fbstp
mov
push
jmp
pop
lds
cmp
in
fstpt
add
or
repz
add
add
cmp
loop
loop
inc
mov
jl
or
xchg
xchg
mov
fisubrl
jns
hlt
push
dec
in
mov
push
das
mov
sub
pusha
mov
sub
mov
dec
cmp
sub
jecxz
movsl
mov
test
sbb
add
add
jb
and
lahf
dec
sub
mov
push
ret
mov
pop
sub
xor
or
int
dec
cmp
lods
sub
pop
lret
push
adc
in
add
xchg
sbb
stos
pop
repnz
loop
dec
scas
fcmovnbe
invd
inc
add
inc
sub
int
push
lret
or
xor
movsl
xchg
push
or
repnz
dec
mov
fisubl
adc
subb
xchg
or
pop
stos
movsl
shl
in
push
mov
pop
push
jne
sbbb
jg
bound
lods
mov
cmpsb
sub
rcl
sti
push
ss
mov
loop
dec
jb
dec
cmpsb
xchg
xorb
mov
fsubl
adc
fsubr
pop
inc
add
hlt
enter
testb
mov
mov
sbb
inc
or
test
jo
xchg
sub
sbb
fwait
call
push
push
push
jmp
mov
or
cmp
popa
pop
xlat
jl
sbb
out
mov
jge
sarb
sbbl
mov
dec
inc
iret
testb
imul
icebp
lcall
pop
dec
or
xchg
jbe
mov
mov
or
mov
lods
icebp
data16
xchg
cmp
shrl
imul
xor
les
dec
es
fldenv
push
xor
xchg
nop
mov
insb
sbb
es
jmp
int3
in
js
sbb
cmpb
mov
push
jo
idivl
negb
mov
dec
out
stos
fwait
or
test
cmp
imulb
data16
lods
sub
push
inc
unpcklps
fisubrl
inc
mov
push
mov
adc
in
pop
mov
iret
push
jmp
incb
lret
test
imul
nop
jp
jae
int
cmp
add
sahf
push
popa
mov
pop
fisttpl
fadds
leave
and
sbb
insl
rcrl
cmc
jmp
nop
dec
xchg
ss
repnz
mov
cli
push
mov
std
mov
mov
inc
int3
cltd
pop
or
pop
jle
mov
pusha
shrb
sub
in
pop
sub
lock
jecxz
mov
jp
inc
inc
mov
movsb
push
shll
mov
cwtl
lea
adc
push
jnp
fstps
aad
cmp
subl
imul
ror
mov
adc
jmp
xor
adc
add
shrl
pop
jmp
pop
jne
adc
lcall
or
or
fs
pop
xchg
stc
mov
sbb
addl
test
movsl
cld
dec
lea
orb
lock
mov
xchg
adc
push
lahf
mov
ret
movsb
scas
adc
arpl
test
mov
xchg
inc
dec
push
mov
rolb
clc
lock
pop
scas
insl
leave
rcrw
or
xor
imull
into
aad
imul
and
jecxz
xor
stos
aaa
outsl
pop
jbe
jp
insb
out
lods
int3
xlat
mov
jg
negb
add
fsubrs
sbb
inc
jle
jnp
jae
pop
sahf
ja
pushf
inc
out
xchg
mov
push
test
pop
push
jno
sahf
gs
sub
xchg
hlt
mov
adc
data16
movsb
jnp
add
mov
push
stc
pop
sub
data16
clc
js
push
imul
idivl
inc
jb
dec
int3
pop
pop
pop
or
and
cltd
jl
jle
and
bnd
sub
xchg
aad
push
mov
mov
repz
imul
xor
xor
mov
push
fs
mov
sahf
cmp
xor
add
mov
sbb
cmp
gs
loope
mov
icebp
fidivl
sub
push
scas
in
inc
aas
js
sbb
movb
push
jae
pusha
jnp
push
outsb
out
fwait
jmp
push
loopne
jl
shl
sub
push
sarb
bound
adc
xchg
inc
loopne
adc
hlt
xor
and
ficompl
cltd
dec
jns
push
jecxz
dec
out
clc
cmp
enter
lcall
mov
lds
std
push
mov
fldenv
shl
lock
imul
sbb
add
rcll
or
fcompl
mov
mov
add
mov
dec
sub
mov
cmp
sahf
and
cmp
and
mov
push
mov
push
push
mov
xchg
adc
insb
adc
pop
mov
xchg
and
cmc
mov
lahf
iret
pop
mulb
cmc
pushf
xchg
inc
call
mov
inc
sub
loop
loopne
and
sbb
cmp
push
lcall
fwait
push
and
aaa
sbb
inc
sbb
and
adc
jo
lret
xchg
mov
cmpsb
push
xchg
aas
pop
inc
jno
pusha
cld
aaa
lret
sub
test
push
fdivrl
sub
ficoms
mov
inc
movsb
aaa
cmc
ja
fwait
in
adc
fdivs
lret
loope
jge
sub
int3
addl
insb
pushf
xchg
js
push
repnz
cmpsb
pop
fnstenv
inc
dec
loope
es
arpl
xor
cmp
xor
mov
sub
or
out
mov
jecxz
mov
insl
lret
sub
insl
mov
cmp
mov
cmp
push
sbb
out
lret
inc
sub
inc
scas
das
aaa
fisubrl
push
addr16
lret
popa
outsb
or
jns
das
push
adc
stos
push
scas
xor
add
popf
rclb
aad
lret
push
mov
cltd
mov
out
mov
stos
mov
ljmp
xchg
mov
fdivr
loope
ds
stc
mov
dec
scas
mov
jl
das
cltd
inc
mov
lret
xchg
lods
push
movsb
int3
push
or
aam
mov
xor
fs
outsb
xchg
add
lods
adc
test
push
sahf
lock
cli
mov
neg
inc
inc
inc
sub
pop
pop
stc
sbb
and
xchg
cmp
imul
int
and
sysexit
js
jl
fadd
ljmp
sbb
outsb
sbb
xor
dec
sub
inc
lods
leave
clc
shl
js
outsb
popa
or
mov
adc
mov
and
lret
jo
add
sbb
jle
arpl
dec
push
clc
jns
jo
rcll
jnp
and
daa
dec
and
mov
sub
decb
andb
push
dec
and
mov
xchg
mov
push
lock
cmpsl
popf
dec
fs
push
aad
pop
es
xchg
mov
jne
xor
jbe
test
scas
fisttpll
ljmp
xor
xchg
in
mov
lods
inc
sub
mov
cltd
fidivl
inc
pop
hlt
and
push
sbb
ficomps
leave
stos
mov
test
sbb
push
add
mov
fldcw
pop
lcall
movsl
or
out
mov
mov
lods
ds
movsl
pop
and
ja
and
mov
push
into
mulb
jl
cmp
movsl
mov
pop
or
add
or
push
js
mov
dec
imul
fdivs
js
jmp
xchg
jge
mov
js
adc
in
jg
and
jmp
ja
js
dec
inc
mov
add
repnz
or
fnstsw
lea
mov
mov
xor
sti
jge
adcb
out
dec
movsl
push
into
dec
repz
mov
out
fisttpll
enter
aad
test
cli
ud1
xchg
mov
xchg
in
js
mov
jp
xchg
fwait
movb
test
cmpsl
nop
or
sub
int
addr16
andl
loop
insb
ss
and
pop
mov
aas
mov
xchg
pop
sbb
dec
cmp
inc
sbb
clc
pop
inc
push
and
lcall
sbb
adc
stos
in
mov
movntq
ss
adc
fucom
jecxz
mov
int
les
into
add
popf
lcall
or
rcr
ss
lock
jb
into
test
mov
imul
loope
out
mov
jno
cmp
xchg
push
mov
sub
scas
fistl
pusha
lret
push
xor
cs
gs
jbe
scas
push
cmpsb
dec
mov
mov
lods
mov
out
push
jmp
repz
push
fidivrl
and
cmpsb
xchg
imul
and
inc
lea
sbb
mov
adc
xchg
pop
mov
sub
cmp
lcall
shrb
aas
dec
es
sub
xchg
jecxz
loope
xchg
ss
cmp
lret
scas
scas
or
jl
dec
loop
sarl
add
push
dec
mov
rorl
sbb
lea
aas
dec
test
push
push
testl
sbb
jbe
fwait
shll
adc
ror
mov
mov
pop
mov
mov
das
sbb
mov
xor
xchg
add
inc
push
xchg
xchg
push
xor
orl
pop
loope
negl
aas
jnp
pop
sbb
cmp
test
call
xchg
pusha
rcrl
push
sbb
test
sbb
sahf
or
jo
cli
cmpsl
jge
jmp
mov
testb
sub
shl
lods
add
loope
xor
push
pop
xor
ja
in
add
jne
jecxz
cmp
pop
lcall
xor
xor
sub
aam
into
jbe
and
mov
popa
and
mov
add
pminsw
popf
pop
imull
jae
arpl
sbb
jge
cmp
shlb
push
mov
inc
lret
aad
jae
cmpsb
sub
loop
insb
das
icebp
popa
add
icebp
fwait
mov
fwait
mov
into
mov
into
pop
lods
sub
stos
loopne
xchg
jae
fiadds
sbb
mov
inc
fiaddl
into
inc
pop
cs
adc
mov
push
mov
popf
scas
aad
cmpl
daa
xchg
notb
add
xchg
cmp
psubd
mov
xor
xadd
inc
mov
test
ss
stc
repnz
mov
outsl
sub
fstpt
mov
popf
jae
sub
mov
int
repz
mov
cs
lods
mov
xchg
push
repz
enter
nop
dec
lret
mov
sbb
jge
push
lock
into
les
push
js
push
dec
imul
mov
mov
daa
push
sbb
mov
movsl
roll
xchg
cmp
fldl
mov
add
rorb
pop
sarb
sub
cld
rcl
call
sub
test
sbb
xorb
imul
or
dec
loope
roll
xlat
clc
dec
inc
lret
sbb
sub
cmp
movsl
dec
inc
inc
sbb
movsb
sahf
pop
push
pop
adc
data16
sbb
cmp
imul
rcr
jp
jns
fs
jns
enter
mov
dec
push
pop
push
dec
adc
and
jo
in
leave
mov
insl
xlat
mov
jmp
xor
inc
loop
negb
pop
and
outsl
sub
xchg
mov
xchg
mov
mov
pop
outsl
pop
shlb
inc
cmpsb
getsec
je
pop
add
jge
adc
add
mov
or
push
mov
jnp
movsl
xchg
push
test
mov
jle
icebp
push
inc
sub
jecxz
in
xchg
adc
xor
movsl
mov
daa
cltd
idivl
cwtl
pop
sbb
jb
sbb
scas
loop
andl
push
ss
sarb
lods
negb
bound
int
fwait
cmp
jo
mov
or
out
push
or
inc
mov
mov
int
stos
sbb
cmpsb
mov
lret
aam
ds
inc
in
fcmovb
pop
lcall
fdiv
lahf
mov
pusha
jmp
pop
aaa
mov
movsb
push
data16
int
xchg
inc
repnz
jmp
adc
enter
out
adc
test
aam
push
out
nop
cmpsb
insl
mov
dec
sbb
ljmp
fldl
into
das
arpl
pop
mov
orl
or
scas
mov
aad
mov
pusha
push
xchg
inc
imul
mov
xchg
push
test
mov
subl
and
hlt
movsl
push
xor
push
pop
mov
cmpsl
fwait
shrb
lea
pop
cmp
gs
sbb
shlb
inc
aad
shr
jl
and
mov
jno
stos
push
xchg
clc
inc
sub
mov
in
pop
outsb
pop
fisubrs
test
mov
notb
in
idivb
int
shlb
test
push
dec
jle
dec
lar
rorl
cli
sbb
les
enter
push
test
pop
inc
push
jmp
movsb
cmp
sub
xor
fistl
jmp
ret
aam
fidivs
inc
push
call
sarb
pop
mov
sub
repz
pushf
nop
adc
mov
sbb
xchg
push
arpl
movsb
and
inc
and
jno
lods
jle
cmpsb
pop
mov
push
add
adc
shlb
lret
pusha
pusha
pop
sub
pop
mov
jmp
insb
sub
push
cmp
inc
mov
lret
cs
outsb
pushf
xchg
mov
adc
out
lret
xchg
push
in
repnz
inc
aas
stos
enter
out
lods
adc
mov
out
xor
dec
and
sti
jnp
in
adc
test
mov
testl
xor
leave
sarb
in
movsl
mov
outsl
mov
aad
xchg
pop
dec
inc
xor
dec
xor
inc
cld
and
pop
xlat
xchg
fdivl
clc
out
gs
ret
scas
sbb
inc
adc
ficomps
and
adc
lea
dec
mov
dec
add
test
adc
out
dec
pop
pop
hlt
mov
pop
pop
jbe
sub
fcmovb
inc
jge
xchg
lret
cwtl
pop
cli
cli
xchg
jle
mov
pop
std
nop
pop
sbb
push
adc
ret
jl
mov
and
jmp
sub
fs
mov
xchg
cmc
ret
mov
ljmp
jmp
cmp
cmp
das
leave
in
xchg
xchg
dec
mov
addr16
cmp
int3
into
sbb
rcl
xchg
mov
cmc
jno
lds
mov
loope
cmp
out
xchg
and
mov
adc
mov
outsb
pop
cmp
jb
and
insb
mov
daa
repnz
add
hlt
divl
cs
inc
add
pop
xchg
sarb
mov
aaa
cmp
push
and
in
in
push
mov
adcb
fcoml
inc
xor
mov
aaa
scas
mov
lock
cld
addr16
and
pop
adc
mov
push
pop
mov
pop
out
notl
shl
xchg
imull
mov
xchg
insb
imul
call
push
repz
test
aas
stos
movsl
sub
jbe
int
mov
ret
xor
arpl
or
inc
ds
leave
mov
aam
cmp
aaa
inc
loope
out
das
or
insb
inc
push
mov
mov
xchg
cmp
repz
cld
es
mov
jb
rcll
lods
out
jb
cld
push
dec
shrl
sbb
movsl
or
testb
push
ret
sub
mul
rclb
xlat
mov
xchg
popa
pmaxub
out
add
int
outsl
out
xor
mov
xchg
pop
mov
and
dec
push
push
mov
sbb
lock
cmp
xor
test
inc
cmp
es
negl
xchg
shll
mov
sub
jmp
pop
sbb
and
pop
fwait
outsl
popa
mov
pop
pop
or
jmp
or
push
cmp
xor
xchg
lock
sahf
mov
inc
fmuls
test
push
iret
stc
inc
cmp
cmc
inc
sahf
xor
fsubr
or
es
fs
add
cmp
pop
inc
jl
nop
dec
insb
pop
push
das
xchg
pop
arpl
jle
pushf
dec
mov
push
jge
lea
pusha
lds
orb
lods
daa
gs
shlb
dec
push
inc
mov
mov
lcall
mov
lret
cmpsb
loope
mov
ret
idivl
cwtl
jl
add
pop
rcll
dec
jp
xor
shlb
mov
rolb
je
jne
xor
cmp
ljmp
xchg
sbb
inc
xchg
push
fists
push
xchg
xchg
mov
add
shlb
daa
arpl
enter
stc
lcall
mov
xchg
movsl
mov
xor
add
insl
jp
ljmp
xchg
pop
repz
jl
sbb
scas
imul
cmp
push
data16
dec
lcall
inc
mov
movsb
les
ja
loopne
aad
leave
xchg
cmp
fnstenv
loope
lahf
and
jg
cmp
in
xchg
xchg
aad
add
sub
enter
rorb
mov
mov
pop
stc
jecxz
call
mov
and
xchg
xor
psrad
mov
sub
inc
mov
pop
xchg
pop
outsb
sub
aad
icebp
jl
iret
jnp
fisubs
int3
outsl
int3
insb
imul
xor
lods
dec
inc
lods
subl
cmpsl
jnp
jmp
jecxz
push
inc
pop
mov
pop
push
sub
mov
lcall
pop
fwait
mov
xor
jb
mov
shrb
aam
scas
push
loope
xchg
fcoms
dec
jno
sbb
mov
aas
jmp
int3
lahf
aaa
leave
sub
sub
cli
shll
mov
jp
jmp
add
or
inc
fcompl
lahf
mov
std
jmp
out
cmp
jl
test
add
xchg
aam
jb
fidivrl
sbb
test
push
testb
push
inc
mov
mov
jl
jo
aam
ret
mov
aas
pop
and
iret
mov
dec
inc
xchg
sub
jp
call
aam
ret
pop
test
push
or
push
insl
idivl
add
lea
sbb
and
or
lds
sub
leave
pop
cmp
dec
mov
mov
mov
cs
in
mov
gs
cwtl
les
insb
std
and
mulb
ficomps
cmp
jge
jg
lret
inc
sbb
sbb
xor
add
mov
jo
sti
test
cs
fildll
aas
popf
sbb
mov
mov
pusha
xor
adc
ret
dec
out
sub
stc
out
pop
imull
test
aam
daa
xor
pop
arpl
mov
mov
bnd
add
repz
pop
lret
push
push
jp
add
inc
hlt
jne
cmp
inc
cwtl
sub
out
cmc
sub
sub
sub
rorw
jo
xor
stos
stos
jmp
insb
cld
add
push
loope
ss
push
jecxz
add
and
test
xchg
cmp
cmp
fucom
scas
add
cmp
outsl
dec
mov
sub
add
in
pop
and
andb
pop
sub
insl
sbb
adcb
out
vmovupd
push
cmp
mov
mov
mov
dec
xor
sub
in
xchg
stc
lea
pop
lcall
lds
sub
mull
dec
dec
and
xchg
inc
in
aas
fnstcw
in
das
ret
add
inc
xor
inc
dec
jmp
jp
and
int3
fisubs
out
cmp
xchg
stos
and
inc
dec
aas
pop
aaa
nop
add
mov
sub
dec
xchg
xor
lcall
lahf
or
std
push
popf
and
cmp
pusha
sarb
push
push
divb
pop
insb
iret
cmp
pop
sbb
popa
xor
aas
mov
cwtl
push
inc
rclb
pop
inc
scas
xor
sbb
outsb
jnp
fmuls
xor
incl
jl
je
shll
rcr
xchg
enter
popf
cmp
daa
sub
add
xor
pop
movsb
nop
lods
dec
adc
arpl
mov
movb
test
lea
cmc
mov
lds
push
movsb
shr
fsubr
mov
fcoms
or
test
lds
imul
inc
inc
mov
adc
and
mov
shl
mov
sti
dec
pusha
cli
fwait
and
setbe
insb
cmc
gs
test
sub
repz
lock
push
xor
add
pop
mov
push
dec
mov
les
push
adc
lods
xor
into
jo
xchg
jmp
mov
fsubrl
cmp
fcoms
push
adc
aam
sbb
cmp
or
gs
imul
andb
xor
mov
add
out
jl
test
mov
add
sahf
es
repnz
jmp
fcmove
cmpsb
aad
jmp
cmpsl
leave
mov
inc
inc
or
adc
js
iret
icebp
inc
add
dec
loope
cld
adc
push
aad
sub
dec
popf
xchg
or
mov
test
push
ds
iret
je
xchg
fisttpll
xchg
pop
mov
xor
and
addr16
repz
push
or
out
cmpsb
lahf
dec
dec
dec
cmpsl
les
dec
or
or
add
dec
lods
xchg
lea
ja
repz
notb
add
in
leave
mov
in
stos
sbbl
fnstsw
cmp
inc
and
add
xor
inc
pop
xchg
and
lret
cmpsl
movsl
mov
xor
jno
popf
or
subb
mov
mov
sbb
loope
add
sti
aad
decl
jns
push
decl
cmp
aam
mov
inc
or
fisttps
inc
sub
xor
jbe
fsubs
jmp
sub
cmp
xchg
cwtl
in
and
dec
fldcw
and
xorl
jnp
out
xor
shll
push
clc
loop
sbb
or
jecxz
jno
mov
das
and
add
gs
xor
pop
icebp
pop
mov
mov
pop
test
movsb
stos
repz
ret
stc
fadds
adc
xor
or
and
call
test
push
jmp
xchg
bound
out
jno
and
jnp
jecxz
cmpsb
stc
test
cmp
mov
cmp
adc
or
sti
out
push
into
mov
adc
dec
movsb
cmp
push
fstps
mov
and
add
ja
mov
mov
fiaddl
out
fcomps
jg
iret
cmp
cs
mov
or
cwtl
push
int
pop
cmc
or
cld
jbe
sbb
push
out
mov
loop
pusha
pop
fisttpl
outsl
adc
mov
jmp
and
stc
fcoms
pop
outsl
xchg
addl
push
js
add
ret
push
leave
pop
in
ljmp
push
mov
je
sub
std
loop
add
dec
and
xor
test
ret
test
loope
xchg
fs
aaa
sub
mov
lea
mov
mov
pop
int3
sarl
push
popf
or
jnp
data16
and
scas
sbb
stos
sub
sbb
mov
sbbb
xchg
pop
ret
test
nop
pop
add
cmp
gs
adcl
mov
xchg
cmp
or
pop
dec
mov
cld
stos
xchg
xchg
and
movsl
xchg
mov
inc
inc
fcmove
ds
shrb
dec
ss
leave
pusha
cmpsb
fldenv
push
movsb
aaa
lods
loopne
xchg
lds
pop
dec
ljmp
daa
data16
pop
dec
inc
out
mov
push
sti
js
sub
pcmpgtw
push
iret
dec
push
stos
mov
dec
gs
scas
xor
loope
mov
lea
mov
dec
dec
hlt
sub
sub
sub
xchg
inc
fisubl
enter
mov
xor
in
jge
lahf
add
jecxz
test
push
or
test
and
sbb
mov
repnz
sub
insb
arpl
cmc
dec
xchg
adc
popa
mov
mov
mov
je
aam
repz
mov
mov
bound
xor
push
je
je
sub
dec
mov
adc
inc
or
das
jecxz
in
sti
sbb
xlat
push
mov
xor
xchg
pop
aas
cs
pop
sahf
sub
mov
in
sbb
pop
dec
mov
iret
icebp
movsl
pop
pushf
inc
sar
js
ja
cmp
outsl
add
sahf
mov
adc
in
imul
mov
inc
pop
pop
gs
cmpsb
ss
gs
out
data16
jne
jae
testl
ljmp
jge
sahf
leave
shrb
aas
jge
inc
push
or
mov
jne
outsl
sub
mov
aam
jb
dec
aam
loope
add
sub
outsb
into
in
push
ret
shl
mov
xchg
mov
fisubl
jns
sub
fs
and
ja
sub
cwtl
and
adc
jmp
push
push
or
dec
and
into
lods
add
bound
aaa
push
mov
add
add
push
mov
std
icebp
ror
mov
test
cs
inc
aaa
in
cmp
sarb
lret
xor
cmp
imul
js
out
iret
stc
and
mov
testl
int3
mov
inc
push
fwait
outsb
dec
mov
pushf
rolb
shrb
sbb
out
cmp
and
jg
sub
xor
sub
sbb
adc
xorb
clc
mov
xorb
jecxz
out
mov
pushl
pop
inc
fnstsw
sti
xchg
adc
push
and
push
fstpl
lock
lods
nop
cmpsl
xchg
mov
cmp
mov
mov
ja
out
cmp
add
inc
mov
in
mov
shll
jne
cmp
je
into
daa
push
mov
imul
sbb
and
mov
fwait
loope
dec
orl
pop
flds
sbb
sarb
shll
pop
jle
aam
mov
cmp
popf
test
pushf
dec
ficompl
sbb
cli
fisttpll
mov
cs
rcrb
mov
repz
sub
aam
inc
cmpsb
leave
jmp
lcall
test
inc
mov
sub
mov
rcr
add
xor
icebp
out
insb
mov
scas
jl
fcoms
cmp
clc
pop
xchg
test
adc
in
dec
fnstsw
orb
mov
and
add
push
adc
push
out
mov
mov
imul
sbbb
add
aad
lea
and
cltd
xlat
sbb
subb
pop
fidivrs
ret
fmul
popl
push
icebp
rcrl
xchg
or
xchg
xchg
outsl
pop
xchg
fiaddl
adc
pop
adc
insb
les
stos
pop
fldenv
adc
pop
mov
testl
arpl
enter
sub
mov
cld
pop
mov
mov
movsl
sbb
cmpb
in
mov
out
inc
pop
jp
xchg
sub
push
inc
dec
push
in
xor
xchg
fstpt
stc
sub
jle
out
push
adc
pop
div
inc
int
pop
mov
pusha
mov
gs
and
nop
out
jmp
lods
dec
arpl
fcmovu
pop
push
pop
in
dec
out
ljmp
xor
xor
mov
mov
pop
jns
inc
stos
cmovs
pop
sub
sbb
push
mov
fstps
fstpt
fidivl
dec
js
outsb
popf
test
xor
fs
das
xchg
and
xchg
outsl
ds
pop
add
pop
orb
pop
mov
mov
int3
sub
testb
xor
mov
xor
dec
jp
in
fsubrs
out
mov
fstpt
fsts
mov
in
fnstenv
in
lock
xor
lea
movsl
js
cmpsl
or
and
xor
icebp
or
push
ret
mov
sub
cmp
mov
pop
hlt
adc
push
mov
popl
push
pop
outsb
sti
cmpsl
out
lods
push
cltd
mov
inc
mov
and
push
fmuls
pop
xor
out
push
test
xchg
das
outsl
daa
adc
sub
or
test
insb
test
push
gs
les
out
xchg
pop
loop
mov
sub
mov
add
push
push
dec
dec
inc
xchg
dec
xlat
es
pop
popf
jne
imull
mov
imul
mov
sub
clc
push
or
lret
mov
jl
ficoml
clc
mov
mov
xchg
mov
pop
push
inc
xchg
outsb
mov
jne
dec
push
clc
and
mov
xchg
daa
or
dec
jmp
idivl
into
sub
jle
add
jmp
mov
sbb
inc
flds
mov
jns
adc
ljmp
mov
mov
push
xor
xchg
add
lret
int
int
mov
repnz
mov
cmc
pop
sub
lock
rorl
xchg
add
pop
mov
xchg
mov
movsb
cmpsb
or
dec
loopne
in
shr
mov
repnz
cli
and
repz
mov
int3
cmp
sahf
outsl
jp
dec
in
mov
jbe
dec
sbb
adcl
aas
push
and
or
jno
xor
ja
mov
add
cwtl
ljmp
sub
scas
add
lods
or
cmpsl
and
daa
push
gs
jmp
jmp
push
shrl
mov
xchg
into
dec
stos
inc
and
testb
pop
iret
imul
rcl
sbb
call
fwait
or
mov
fidivrl
jbe
hlt
or
cwtl
lret
and
frstor
mov
xchg
stos
dec
adc
pop
sub
lea
std
cld
mov
add
mov
les
hlt
mov
lea
loope
pop
test
inc
cmp
xchg
fcmovu
cmpsb
int
xor
sbb
cmp
push
xchg
shll
lds
ds
mov
cmp
jne
movsb
outsb
imul
ret
cs
cmp
sub
push
insl
xchg
orb
shl
mov
jle
push
or
divl
clc
out
mov
aad
or
clc
out
mov
in
roll
js
dec
cltd
inc
cmp
push
push
jg
sub
lods
bound
test
sbb
pop
aam
insb
pop
mov
repz
jns
subb
insb
xor
and
cli
jnp
addr16
mov
mov
cli
sub
cmpsl
mov
inc
add
dec
pop
sub
xchg
fadds
std
sbb
daa
jae,pn
pop
mov
jmp
mov
out
call
push
mov
push
inc
outsl
xchg
aas
adc
and
cmpl
ljmp
orb
int
stc
mov
ds
sub
mov
xor
xchg
mov
jo
mov
lahf
push
lock
mov
fistps
daa
rorb
enter
shll
clc
dec
gs
pop
mov
stos
jge
addl
jl
push
es
loop
pop
cmpsb
and
test
lahf
mov
pop
ret
pop
cmp
call
loop
stc
popa
mov
sub
cmp
push
sub
repnz
cltd
movsl
insl
cld
jno
int
mov
fidivrs
sbb
inc
inc
xchg
cmp
stos
cltd
imul
das
jnp
imul
xchg
mov
mov
pop
push
aas
shlb
roll
mov
fldl
and
shll
adc
push
sbb
lahf
es
aam
mov
and
sub
lret
in
fnsave
mov
rcrl
lcall
fwait
sub
xchg
into
stos
pop
test
and
xchg
popa
pop
jge
arpl
je
pop
adc
adc
pop
scas
add
pop
les
add
pop
aam
xor
imul
icebp
outsl
or
and
xor
outsb
in
or
pop
rolb
data16
cwtl
popf
int3
fisubl
and
arpl
out
mov
dec
and
jge
lret
mov
sub
fs
inc
pop
xor
xchg
pop
xor
je
out
lahf
mov
push
or
in
sub
sbb
lods
xchg
aam
push
cmp
jge
loopne
xchg
push
fmuls
aaa
stos
xchg
pop
mov
or
pop
jo
sbb
xchg
xchg
pusha
add
xor
inc
ret
insl
mov
or
js
scas
iret
sti
jo
lret
mov
imul
jo
dec
and
inc
mov
pop
mov
mov
adc
add
icebp
imul
inc
pushf
sbb
mov
ss
out
push
hlt
scas
hlt
push
stc
push
jle
rcrl
mov
adc
in
jmp
in
sub
shll
loopne
shr
test
bound
inc
stos
test
out
mov
je
mov
pop
mov
data16
dec
sbb
push
pmulhuw
insl
enter
lret
mov
push
adc
out
xor
cmp
jmp
cmp
ljmp
mov
fidivl
jmp
rcrl
push
pusha
in
or
repz
xchg
jnp
add
xchg
ja
test
dec
mov
dec
add
bound
xor
inc
pop
jg
and
insb
mov
push
icebp
sti
xor
shrl
mov
mov
jo
jmp
call
and
testb
adc
es
lea
adc
popf
insb
outsl
outsl
sub
loopne
sarl
popa
data16
mov
imul
leave
mov
movsb
gs
dec
mov
out
bound
push
jns
dec
and
ds
and
add
stc
or
rol
leave
in
mov
dec
daa
xchg
orb
adc
out
push
jp
lret
fidivrs
adc
add
mov
pop
int
js
jno
scas
fbld
inc
mov
test
inc
cmp
sbb
mov
test
cltd
cmp
adc
mov
test
arpl
fwait
sub
popa
mov
pushf
pop
push
into
sbb
addr16
mov
adc
or
shll
xchg
xchg
fsubp
movsb
mov
stc
jg
dec
out
sub
pop
addb
inc
xlat
das
jmp
ds
mov
popa
mov
in
cmp
fs
xlat
sti
jns
jns
neg
fwait
push
mull
inc
adc
cmp
pusha
pop
cltd
push
push
push
frstor
jle
add
pop
fldt
cwtl
jne
clc
gs
daa
ja
stos
mov
mov
stc
rolb
das
aaa
mov
fildll
loopne
or
mov
icebp
jle
mov
imul
jmp
iret
pop
xchg
jmp
lods
add
stc
stos
test
iret
mov
and
mov
add
adc
cltd
icebp
insl
out
imul
cld
pop
pusha
mov
or
add
test
imul
push
pop
mov
cmp
nop
cmp
adc
cli
mov
sbb
rcr
stc
push
and
xchg
repz
pop
jg
decb
cs
test
hlt
jmp
xchg
sarl
xor
xor
mov
mov
cmp
mov
popa
mov
sbb
push
sbb
aas
adc
pop
and
pop
sub
inc
test
or
int3
in
mov
in
mov
xor
jmp
jnp
xor
adc
inc
cli
fistpl
cmp
jmp
xor
test
fcmovu
push
rcl
jle
nop
inc
and
or
add
addr16
push
movb
sahf
notb
in
in
std
dec
les
daa
rcrb
sbb
sub
test
or
add
push
fisubrl
lds
adc
cmpsl
lods
iret
cmp
mov
xlat
lret
outsl
iret
out
jmp
cmp
mov
inc
mov
hlt
xchg
mov
mov
inc
stc
sbb
and
imul
cmc
mov
pushf
push
push
rcrb
addr16
cmp
pop
dec
mov
or
lahf
dec
mov
xchg
xchg
mov
xor
inc
jge
sub
mov
psraw
bound
xchg
dec
mov
int
pop
adc
out
pop
fstpl
mov
hlt
clc
cmc
stos
inc
xchg
mov
cmp
insl
mov
addl
fmul
fisttpl
mov
movsb
sub
cs
lods
push
mov
inc
lcall
push
mov
adc
jne
cmc
adc
sub
xchg
jbe
fsubs
test
flds
mov
daa
dec
push
add
pop
or
push
or
jp
out
push
fwait
cmc
shrb
push
insb
movsl
inc
pusha
mov
sbb
pusha
test
cmp
fcoms
aam
mov
mov
dec
jle
std
and
ja
xor
jge
out
adc
sbb
mov
pop
stos
xchg
cmp
daa
out
cltd
in
adc
aaa
dec
sarl
pop
lock
mov
sub
xchg
in
cmpsl
push
sub
clc
sub
int
arpl
mov
sub
jmp
xor
push
and
loope
jnp
out
cmp
ud1
daa
adc
xor
add
lret
ret
sub
scas
mov
out
mov
add
rcrb
jp
dec
cmpsl
and
mov
rcll
fwait
stos
shrd
test
fsts
xchg
fdivs
fwait
adc
in
xlat
movsl
sarl
dec
int3
mov
jne
sbb
fcomi
mov
popf
push
div
jmp
push
gs
and
subl
dec
js
sbb
outsl
pop
xchg
es
cwtl
cmp
fimull
or
pop
cmp
inc
mov
sbb
jp
sbb
sub
sub
pop
cmp
mov
inc
jae
sub
ror
xor
es
fildl
cwtl
push
sahf
lea
incl
ficompl
mov
ljmp
push
dec
jnp
xchg
cmp
xchg
loopne
out
add
sub
std
jp
dec
dec
pop
dec
add
mov
test
mul
or
inc
iret
out
jbe
out
rorl
rclb
cld
or
jmp
cs
repnz
mov
jle
cmpsl
hlt
inc
push
stos
jmp
and
inc
int3
sub
daa
stos
cmp
popf
ss
addr16
insl
enter
dec
mov
mov
sbb
es
sbb
pop
in
pop
mov
iret
dec
mov
push
jns
fnstsw
jmp
sti
rcrb
cwtl
dec
aas
out
jo
push
aam
xor
pop
popa
jno
push
aam
out
cs
mov
repz
xor
andl
orl
and
pushf
mov
adc
arpl
popl
mov
inc
popf
je
pop
in
aaa
lcall
roll
mov
inc
jae
lods
cmp
and
in
ja
mov
imul
lds
inc
rcrl
xor
dec
clc
inc
ret
fwait
test
xor
push
mov
or
push
pushf
add
in
jp
test
insb
aas
lds
adc
jno
pop
cwtl
in
cld
pop
push
dec
push
dec
or
jl
fisubl
icebp
dec
imul
scas
push
dec
lock
aaa
jbe
mov
xchg
or
aad
mov
data16
cmp
mov
cwtl
inc
fildl
js
sub
data16
loope
cmp
lock
mov
or
orl
imul
ret
clc
xchg
outsl
repnz
xor
outsb
iret
jmp
jle
fsubrs
stos
mov
dec
inc
xor
lret
inc
popa
repnz
push
push
stos
xchg
dec
out
sbb
cwtl
popa
jle
cwtl
test
gs
into
add
lods
dec
fwait
mov
sub
mov
xor
aam
inc
outsb
xor
jmp
mov
mov
test
and
lret
push
movsl
iret
xchg
mov
sahf
mov
test
lcall
sub
fistl
shlb
push
mov
jnp
push
sbb
push
outsb
push
fsubrl
mov
xchg
push
lds
movsl
popa
and
lea
jl
jge
push
fisttpl
push
ret
out
push
add
jae
paddd
mov
add
inc
notb
xor
mov
mov
pop
addr16
negl
dec
sbb
shll
shll
insl
pushl
xor
xor
inc
insb
ljmp
cs
xlat
dec
add
out
test
popf
int3
pusha
jnp
mov
test
adc
mov
std
jge
push
fnstenv
ss
ret
in
xor
xchg
cmovbe
xchg
mov
xor
hlt
lock
sbb
lea
mov
mov
pop
inc
push
movsl
sub
sbb
sbb
mov
fiadds
push
lret
test
sub
sbb
icebp
enter
aam
mov
and
flds
scas
scas
ret
call
stc
push
in
stc
push
movsb
jne
aaa
imul
xlat
jmp
push
sbb
cmp
fiaddl
aam
cmpsb
mov
lret
xor
jo
sub
jl
int3
inc
imul
loop
dec
insb
hlt
vmovss
or
pop
inc
int3
aaa
adc
nop
mov
test
les
lahf
mov
push
call
pop
pop
ret
loope
mov
ljmp
ljmp
push
pop
sbb
jmp
adc
mov
test
dec
add
and
rcrb
jmp
roll
xor
mov
or
fimull
or
jo
mov
adc
jmp
mov
fdiv
push
stc
movl
jno
push
test
push
lret
pop
push
cmp
inc
xchg
fcmovnbe
ljmp
in
test
push
subl
jno
lods
sti
push
dec
bound
mov
xor
call
aaa
bnd
or
js
out
mov
push
aaa
mov
pop
cwtl
sti
cmpsl
out
fsub
addr16
clc
xchg
xlat
movsl
jmp
mov
fisubs
imul
fwait
imul
mov
xor
fmul
in
lcall
lahf
aam
or
les
sub
aam
cwtl
jns
fcom
cmp
sub
xchg
cld
mul
add
xchg
pop
aaa
imul
decb
pushf
shlb
clc
mov
xchg
cmp
scas
iret
int
adc
jecxz
call
mov
imul
xor
in
mov
fiadds
push
jae
mov
int3
aam
sbb
popa
das
jo
aam
loope
dec
jb
mov
cmp
xchg
pop
fcom
ret
sub
push
test
leave
dec
fst
pop
or
icebp
jp
lret
jg
dec
je
adc
je
fisttpll
test
data16
decb
mov
out
popf
popf
jmp
jbe
sub
out
popf
add
xchg
push
pop
into
and
jae
xchg
or
mov
dec
scas
sub
mov
pop
shr
xchg
sub
or
cmp
dec
jge
push
scas
bound
dec
out
cmp
xchg
shlb
mov
sbb
dec
repz
dec
xchg
lret
push
mov
jmp
xchg
jb
inc
xor
call
fldcw
mov
cmp
mov
scas
and
sahf
push
jns
push
repnz
sbb
in
sub
push
pop
adc
imul
mov
lahf
fiaddl
mov
outsl
dec
sbb
mov
scas
or
ja
mov
in
stos
dec
rolb
cmp
xor
xor
jp
ret
xor
dec
cmpsl
sarl
xor
add
and
mov
pop
sbb
and
in
cmpsb
sti
mov
js
mov
scas
int
inc
jb
xor
lret
pop
sbb
cld
std
lods
cmp
aas
push
loop
es
aad
cwtl
into
loop
mov
inc
fsts
js
cld
xor
xor
sbb
jecxz
aam
loopne
or
cmp
test
inc
dec
jp
dec
pop
pop
push
xchg
adc
daa
test
roll
inc
xchg
push
push
js
je
testb
ret
jnp
dec
sub
movntq
les
lret
xor
push
das
aas
inc
int3
sub
lahf
fldl2t
sub
sub
lea
mov
pusha
fisubl
xchg
pushf
stc
dec
add
push
and
pop
cld
xor
ja
mov
jbe
ficompl
mov
sub
xlat
clc
popa
cmp
pop
dec
or
push
push
inc
sarb
pop
mov
inc
mov
mov
mov
jg
inc
incl
outsb
inc
les
unpcklps
adc
fwait
aad
pop
pop
mov
sbb
int3
insl
cwtl
mov
sub
mov
leave
inc
jle
xor
pop
jnp
aas
sbb
fwait
popf
add
cmpsb
xor
stc
repnz
rcrb
dec
mov
lea
mov
lahf
cwtl
mov
das
iret
hlt
xor
repz
fwait
cmp
or
call
push
lea
fcomip
int
push
in
in
cmp
push
ss
inc
add
cmp
lahf
mov
adc
fsubl
ret
mov
inc
nop
pop
jmp
rcll
shrl
data16
cmp
inc
pop
fdivp
xchg
lods
pop
jo
lret
pop
mov
stc
test
je
in
push
test
movsl
test
xlat
aam
mov
xchg
je
ss
fbstp
mov
out
in
and
ja
xorb
push
addr16
daa
add
dec
ret
mov
sbb
push
pop
nop
fs
outsb
fidivl
mov
lahf
lds
ds
sbb
push
jge
pop
idivl
jl
push
test
jmp
idivl
insb
push
cmc
lret
cltd
add
lahf
pusha
int3
jnp
sbb
leave
mov
lock
jno
jae
out
bound
sub
sbb
mov
dec
xchg
or
aam
fwait
sbb
inc
int
bnd
stos
movsb
inc
mov
jb
idivb
sbb
xor
add
and
in
sbb
sbb
lahf
daa
push
lret
or
pusha
mov
or
ret
xchg
sti
push
test
ds
js
inc
daa
loop
pop
cli
sbbl
out
fcmovu
xchg
lret
mov
push
cmc
cmp
push
dec
fmulp
gs
cmp
addr16
xchg
mov
jmp
jecxz
xlat
mov
jo
aaa
mov
mov
mov
pop
xchg
mov
sti
aaa
int3
mov
and
dec
pop
and
pminsw
imul
xchg
pop
mov
push
pop
stos
and
or
inc
sbb
scas
or
movaps
sub
pop
jb
and
leave
and
push
inc
in
push
cmp
int
aam
or
pop
push
jnp
and
add
dec
push
push
lcall
pop
out
loop
jne
clc
js
add
pusha
stos
sbb
cmpsb
add
push
in
adc
push
test
and
push
in
pop
outsb
xchg
xchg
outsl
shlb
aaa
dec
daa
xlat
cld
dec
test
and
pop
jmp
add
cmp
aam
subl
test
sbb
arpl
pusha
clc
iret
mov
add
addb
xor
test
mov
xor
addr16
jmp
inc
repz
push
xor
adc
dec
jno
dec
push
gs
dec
xchg
mov
clc
lret
rcrb
int
mov
cli
lcall
and
dec
mov
adc
jg
in
and
test
int
jg
or
sbb
pop
idivb
mov
xchg
cmp
jmp
fisttpl
mov
out
in
inc
pop
js
aam
nop
popf
leave
stc
test
xchg
lret
sti
mov
push
jecxz
outsl
sbb
test
aas
mull
mov
mov
fdivs
add
jecxz
int3
call
cmp
pop
push
lock
jbe
pop
aad
xlat
sti
cmp
test
ljmp
mov
dec
sbb
xor
arpl
les
je
shlb
pop
sbb
enter
sub
inc
adcl
mov
js
sbb
or
int3
and
lcall
mov
sub
mov
imul
add
out
movsb
test
xor
mov
in
and
les
pop
cmp
dec
sub
mov
xor
add
loopne
pop
xchg
and
xchg
lods
lahf
cwtl
sub
cmp
or
loopne
popf
loopne
push
or
inc
imul
into
test
pop
inc
mov
pop
movl
pop
mov
out
sbb
inc
lcall
aad
jmp
cmpsb
or
aad
jae
push
andl
mov
push
or
push
fwait
cltd
xchg
stc
push
mov
jg
push
dec
jmp
hlt
pushf
adc
int3
jle
mov
jp
mov
int
popf
cmc
ffreep
inc
js
mov
inc
xchg
in
inc
sbb
adc
and
push
sub
add
insl
inc
repz
cli
xlat
inc
scas
out
sbb
xor
mov
and
jge
movsb
daa
test
lret
iret
loope
cld
fimuls
xor
sbbl
xor
sbb
lds
imul
clc
inc
inc
adc
jbe
xchg
mov
xchg
dec
out
mul
inc
mov
fidivl
fisubl
cmc
dec
inc
js
jnp
js
sub
neg
imul
dec
imul
lods
add
mov
imul
add
xor
adc
les
pop
mov
sahf
cld
subl
jg
mov
adc
push
setp
movsl
add
push
cmp
and
xchg
push
inc
xchg
test
jmp
and
outsl
xor
sub
shrb
fcompl
lahf
add
cwtl
or
mov
sar
sub
fdivp
inc
jmp
popl
dec
pushf
dec
shlb
test
and
std
idivb
ret
ret
xchg
hlt
shrb
push
imul
add
sub
shll
pop
pushf
pop
cli
sub
insb
mov
pop
push
jp
hlt
mov
mov
int
add
push
out
lret
dec
addr16
sbb
out
pop
adc
cmp
mov
setno
sbb
adc
lods
pop
mov
add
wrmsr
les
xchg
cmpsl
and
and
adc
imul
popl
sti
call
xchg
push
cmp
push
paddq
inc
or
lret
xor
js
cmp
jge
sbb
xor
nop
rcll
hlt
outsl
getsec
pop
sbb
jne
jne
jo
dec
push
xchg
xchg
xlat
add
insl
inc
outsl
dec
push
or
xchg
pop
in
and
lds
mov
mov
jbe
add
pop
addr16
pusha
mov
add
mov
in
jp
loope
mov
dec
jb
pop
mov
mov
or
das
ficompl
cld
xor
pop
jle
sub
push
insb
fistl
test
sbb
cmp
sub
sub
xor
outsb
mov
test
imul
push
adc
outsb
arpl
loop
sub
dec
je
xor
mov
inc
xor
pop
mov
rorb
arpl
inc
add
xor
leave
add
test
cwtl
inc
jg
int3
push
or
jnp
insb
mov
xchg
add
mov
add
fstpt
jmp
dec
aam
pop
out
aaa
mov
jns
pop
pop
cmc
adc
sti
sbb
pop
cmp
mov
mov
adc
arpl
lcall
fildll
js
cmpsb
ja
add
cmp
pop
xor
pusha
das
lahf
sub
add
and
and
mov
push
jns
push
es
gs
and
orb
and
fidivrl
pop
fisubl
je
aas
lret
add
jp
fiadds
sub
or
pop
pusha
pop
jae
jno
lock
dec
sub
jo
repz
push
cwtl
cmp
mov
rcrb
in
pop
dec
lds
jno
aas
daa
dec
jbe
lock
gs
fwait
inc
imul
notl
and
imul
fnsave
mov
dec
dec
int3
sbb
jnp
sub
inc
fistpll
or
dec
ret
dec
cld
jne
into
outsl
repnz
int
adc
jb
xchg
inc
xor
pop
jmp
fstl
popf
mov
jge
inc
aam
inc
jne
popf
adcb
cmp
repnz
rorl
jl
loope
or
movsl
xchg
jns
stos
inc
jnp
add
cmp
adc
sub
bound
mov
push
scas
shl
lds
leave
cmp
jns
pop
mov
inc
bound
in
dec
and
mov
jge
inc
imul
inc
xor
pop
enter
lret
adc
outsb
mov
inc
repz
mov
or
cmp
fisttps
mov
sub
push
or
jbe
addl
repz
inc
mov
addr16
cmp
mov
icebp
roll
xchg
mov
inc
mov
not
fwait
push
inc
dec
mov
imul
mov
or
out
xor
push
aam
xchg
dec
add
xchg
cli
repnz
mov
xchg
insb
cmp
mov
jo
push
xchg
mov
dec
dec
ja
loopne
fdivrs
adc
fs
xor
decl
shl
jl
scas
xchg
lcall
sbb
push
lret
inc
sub
shlb
into
dec
loopne
xchg
or
enter
mov
insl
out
dec
pushf
add
out
or
xchg
in
movsb
pop
es
sbb
or
leave
adc
lcall
adc
in
in
jae
sbb
and
ja
adc
dec
sti
sub
lea
push
mov
pop
jecxz
xchg
jne
adc
mov
sub
jmp
cmp
mov
mov
dec
imul
dec
das
repnz
push
sbb
fstpt
sub
sub
in
lock
sub
gs
sbb
push
jno
negl
adc
dec
repnz
imul
rcl
mov
ret
cmp
lahf
pop
rcll
xchg
jg
mov
mov
cmpsl
dec
adc
inc
pop
or
outsb
lock
jl
fstl
pushf
shlb
inc
addr16
loopne
adc
inc
dec
jnp
insl
add
je
and
ja
mov
and
jno
xor
mov
xchg
je
dec
div
je
cwtl
mov
je
subl
inc
sti
lcall
pop
xor
dec
dec
pop
cmc
call
in
push
rcr
xor
add
lret
inc
rorb
data16
lods
xchg
ljmp
cmp
cmc
pusha
push
sbbl
jp
xor
gs
and
sbb
std
jg
fdivs
jae
sub
dec
pop
in
pop
adc
dec
out
add
and
fwait
enter
mov
test
mov
notb
lret
nop
test
add
ds
mov
scas
sub
call
into
fcmovnbe
lret
mov
ss
add
push
cmc
insl
pusha
cld
xor
cmpsb
and
test
push
aaa
out
jns
movq
insl
sbb
rcrl
sub
xorb
aas
iret
das
popa
fldcw
data16
imul
pop
cltd
mov
cmpsb
push
add
jg
pusha
icebp
add
out
push
test
aad
cmpsl
cmp
jl
or
daa
pop
outsl
jle
lock
lods
xlat
iret
out
ljmp
shll
lahf
xor
push
mov
pop
jns
or
arpl
xchg
out
insb
fisttpll
sub
push
sahf
xor
rorl
out
pusha
dec
cwtl
mov
xchg
mov
pop
mov
out
jl
inc
or
or
push
les
divl
jmp
in
js
push
xchg
jne
push
ja
arpl
sti
xchg
mov
xor
arpl
nop
jno
mov
add
adc
ret
ficoms
or
data16
sub
imul
mov
cmp
cmp
out
sbb
mov
mov
lods
jle
or
shrl
mov
movb
cs
cmp
push
push
xor
int3
jnp
mov
rolb
xchg
mov
or
lcall
inc
test
rcl
inc
loop
jb
addr16
mov
in
mov
lret
out
sbb
or
pop
pop
sub
dec
and
mov
subb
ficoml
mov
or
loopne
push
out
mov
lods
cmpsb
xor
add
arpl
lds
add
fmul
lahf
pop
outsb
aam
sbb
push
je
ss
xor
sahf
call
nop
fsubs
push
jns
outsb
test
jl
sbb
test
and
fidivl
rcrb
mov
es
xorl
jnp
xchg
cmpsl
shll
or
mov
inc
pusha
pop
icebp
jne
sbb
mov
xchg
adc
rorb
in
xchg
popf
push
pop
test
add
hlt
lods
pop
rcll
adc
push
lcall
popa
xchg
inc
aam
add
popf
js
mov
call
cmovnp
daa
push
loop
jl
lret
in
into
outsb
out
lret
outsb
cmpsl
stos
or
jl
loopne
cltd
pop
and
dec
jno
sbb
xor
jno
ljmp
scas
mov
pop
ret
mov
and
jns
cltd
adcb
pop
push
shll
testb
inc
dec
sub
mov
out
jle
in
sarb
or
stos
stos
decb
xor
lods
cli
nop
push
fsubl
cmp
inc
stos
xchg
popf
stos
pop
pusha
stos
mov
mov
pop
cmpsb
mov
rorl
or
and
adc
sbb
loope
nop
es
imul
xor
cmpb
jp
and
xchg
out
cltd
push
aam
cmp
lret
shr
dec
orb
pop
stc
icebp
or
jecxz
xchg
jge
xchg
idivb
rcll
inc
test
push
out
ja
mov
cmpsb
add
add
cli
push
into
mov
pop
inc
mov
mov
jae
jle
xchg
test
inc
call
gs
mov
sbb
mov
xchg
arpl
enter
add
stos
cli
mul
sub
xchg
dec
pop
mov
push
mov
mov
aad
adc
pop
mov
fdivl
or
out
sahf
add
fucomp
or
clc
nop
sbb
sbb
iret
pop
push
sbb
ret
push
fimuls
push
xchg
dec
repz
out
dec
rorb
test
icebp
lods
mov
in
mov
rcrl
jno
jae
inc
adc
xchg
imul
push
mov
dec
sbb
mov
fsubrl
mov
push
xor
jp
iret
cmp
inc
fldt
loop
int
inc
rolb
mov
in
cmp
dec
loop
add
cltd
leave
getsec
sbb
and
dec
add
jmp
ja
mov
fwait
das
sarl
cli
fidivrs
mov
mov
jle
adc
punpckldq
sub
movsl
outsb
dec
int
je
popa
dec
ficoml
icebp
sarb
mov
add
xchg
repz
push
nop
sbb
jecxz
rclb
cmp
arpl
sbbl
pusha
push
daa
mov
fisttps
push
add
lret
pop
movsl
cmc
call
xchg
loopne
imul
sbb
cmp
test
pop
in
jmp
lea
bound
and
ds
cmc
pushf
cwtl
test
inc
faddl
cmp
add
icebp
lret
je
pop
adc
mov
arpl
sbb
mov
push
push
lahf
mov
mov
jge
andl
jo
frstor
jg
imul
pop
lahf
call
inc
sub
mov
xchg
inc
xor
mov
lea
dec
ds
fisttpl
or
xor
aam
push
in
mov
push
imul
sub
xchg
adc
mov
or
cltd
call
mov
rcll
gs
jns
movsl
adc
cs
cmp
mov
adc
push
sub
jb
test
mov
aaa
xchg
jecxz
mov
push
test
loop
test
lahf
cmp
and
sbb
aad
inc
inc
es
mov
cli
add
mov
testb
jle
insb
jl
add
adc
fildl
jne
fstpt
add
je
sbb
ret
pop
fsubrs
std
sub
loop
cmp
or
cmpsb
sub
mov
and
sbb
ror
jl
es
mov
mov
gs
jb
jp
in
subl
dec
fldcw
pop
sub
inc
inc
mov
xor
mov
push
push
push
test
daa
iret
xchg
fwait
inc
jmp
subb
push
cmp
jnp
and
mov
sub
xchg
xor
hlt
fsts
lahf
lock
pop
cmpsl
jge
mov
jbe
inc
repnz
imul
mov
pop
in
sub
imul
ret
orb
cli
mov
and
in
or
cli
gs
xor
xchg
movsb
outsb
clc
mov
ficoms
call
dec
nop
movsl
pusha
push
mov
xlat
xchg
mov
and
jo
daa
pop
mov
xchg
rolb
es
rcrb
mov
or
adc
mov
loopne
jb
rcr
in
cmp
clc
dec
sbb
xchg
cwtl
and
xchg
jle
aad
xor
orl
mov
in
mov
sarl
iret
jns
or
cmp
rclb
hlt
mov
or
int3
sub
push
pop
xchg
movsl
ja
and
sub
shrb
inc
popf
test
jnp
push
hlt
xchg
push
aad
std
aad
push
xchg
adc
inc
mov
add
push
push
loopne
mov
cld
repz
fldcw
ret
inc
pop
fwait
adc
fwait
xchg
sbb
lods
lods
arpl
enter
gs
pop
mov
or
loopne
repz
xchg
icebp
mov
adc
enter
cmp
mov
lret
mov
mov
cmpsl
jno
pop
in
mov
fwait
xchg
or
xor
test
inc
cld
mov
or
rcrb
iret
mov
mov
stos
addb
lret
scas
ret
ljmp
or
fs
incl
mov
sub
fdivrs
jns
xchg
mov
lock
pop
dec
or
movsl
and
int
dec
mov
andb
sbb
aaa
movsl
lcall
mov
xchg
xchg
adc
pop
jne
fdivl
cmpsl
dec
jne
int
stc
into
mov
xchg
and
pushf
gs
fildll
lock
les
aaa
mov
les
pop
or
xor
pop
lock
pop
daa
mov
cwtl
and
and
mov
inc
fildl
mov
js
cmc
lds
or
fwait
pop
lds
xchg
out
mov
add
mov
ja,pn
xlat
mov
aas
mov
ljmp
or
pop
mov
pop
fwait
xor
xchg
enter
mov
mov
mov
xchg
add
subb
jg
mov
pusha
pusha
gs
imul
outsb
xchg
iret
cmp
dec
aas
jl
fldt
in
fidivrl
jnp
pop
xchg
popa
hlt
pusha
dec
cmpsl
lcall
inc
add
sbb
push
incl
hlt
out
test
psadbw
or
pop
mov
fdivr
dec
sub
mov
nop
shrl
mov
dec
shrl
ret
pop
addl
lret
out
xor
push
hlt
hlt
stos
push
lcall
cltd
add
outsl
sbb
cmp
std
jmp
mov
xchg
sahf
lcall
or
mov
ror
sti
jns
push
and
shll
call
fcoml
mov
add
pop
mov
pop
push
cmpsb
push
in
sub
push
es
cmp
mov
pushf
ljmp
aam
add
gs
adc
jge
jb
inc
sbb
repnz
pop
and
stc
push
fsubr
aad
lcall
cmp
lds
inc
sti
fldl
movsb
mov
jecxz
pop
cmp
mov
add
add
inc
pushf
stos
inc
ja
sbb
mov
adc
repnz
mov
sbb
outsl
sub
and
xlat
mov
stos
lret
sub
adc
or
fwait
pop
sub
daa
jmp
jg
in
mov
mov
dec
call
rorl
sahf
and
stos
leave
scas
push
sub
out
cmpl
pop
incb
test
cmp
sbb
mov
or
scas
std
sahf
test
xor
ror
cmpsl
popl
int
pop
jno
adc
out
xchg
fdivrs
pop
fldcw
dec
hlt
cmp
jb
nop
cmpsl
stc
stc
adc
movsb
and
sbb
repnz
insb
orb
mull
push
sub
lods
vsubps
iret
test
shrl
test
xchg
push
inc
sub
cmp
int3
rorb
enter
in
push
cwtl
aam
push
xchg
sahf
jp
or
stos
gs
mov
or
xlat
shlb
adc
imul
and
mov
sub
add
and
call
dec
pop
fs
loopne
push
test
sbb
roll
pop
lret
jae
jnp
or
cli
stos
xor
push
das
xor
gs
bound
je
adc
inc
pop
jge
push
add
pop
pop
in
jno
repnz
loopne
push
fdivrl
movq
outsb
clc
add
mov
mov
stos
andl
mov
dec
shll
mov
ret
rclb
inc
in
push
enter
sub
fs
decb
ljmp
sbbl
in
pop
sub
insb
sbb
cmpl
aas
pop
inc
mov
int
in
jns
sbb
aad
adcb
adc
lcall
mov
inc
xchg
stos
mov
add
cmp
loopne
pop
in
dec
fucomp
jns
adc
movsl
adc
shlb
dec
insl
rcrb
pop
and
dec
push
and
inc
cmp
jle
dec
xchg
rcrb
pop
or
lods
adcl
daa
fcoms
xchg
fcmovnbe
jo
jecxz
jge
cmp
aas
and
rcll
aad
adc
sbb
jp
cltd
jne
xor
fwait
cmpsl
xchg
inc
leave
ja
adc
or
negl
aas
fisttpll
mov
fnstenv
and
push
ficomps
and
scas
mov
or
cltd
inc
gs
punpcklbw
int
in
jno
test
ret
je
add
cmpl
clc
mov
xchg
push
int
fiadds
jle
push
mov
xchg
icebp
movups
loope
and
adc
sub
add
rcl
pop
sbb
test
mov
lret
dec
or
imul
mov
lods
jg
movsb
lds
dec
mov
xchg
in
adc
imul
inc
popa
pop
pop
dec
xchg
jno
inc
cmp
xor
jle
adc
in
jnp
add
xchg
xchg
mov
adc
adc
push
ja
pushf
jo
mov
jae
sub
add
sbb
sbb
rorl
ret
xlat
fsubrp
adc
rorl
xorb
or
in
aam
and
ss
push
xacquire
or
fsts
xchg
popf
add
xchg
push
xor
mov
adc
adc
pop
or
ss
inc
inc
out
jb
mov
and
mov
ret
xor
push
imul
popf
popf
adc
rcll
lahf
daa
add
xchg
test
cmp
in
push
shlb
inc
xorl
aad
jb
call
pusha
insl
fdiv
in
mov
mov
sub
lcall
fistpl
arpl
int3
int
stc
orb
lods
push
pop
je
bound
pop
jp
test
std
sub
pop
dec
stos
push
xchg
inc
cmp
push
sbb
jg
es
push
pop
sbb
cmpsb
adc
push
pop
jns
push
inc
dec
jg
inc
push
mov
add
or
int
mov
aad
stc
jp
pop
scas
push
seto
mov
rcrl
dec
push
and
pop
mov
jp
mov
cli
mov
and
push
inc
cltd
stos
pop
movsl
loop
shlb
out
mov
pop
push
loope
lcall
cmp
inc
shll
mov
int3
push
mov
punpckhbw
cmp
hlt
and
jnp
movsb
jmp
push
mov
sub
ret
xor
lret
aas
cwtl
shrb
jae
pop
cli
ja
mov
mov
xorb
adc
into
push
sbb
xor
adc
pop
adc
push
cmp
push
rcl
xchg
repz
in
and
shr
cmp
fiaddl
lods
mov
pop
jo
add
aas
mov
insb
cmp
cmp
push
in
dec
and
pop
dec
push
add
xchg
fwait
shl
scas
dec
sbb
add
leave
ljmp
in
jnp
stc
lret
mov
xlat
push
leave
xchg
jns
mov
push
shll
lret
repnz
lahf
test
and
add
mov
fwait
in
push
ja
xchg
popa
jg
std
push
gs
mov
dec
dec
mov
adc
mov
out
or
sbb
dec
and
pushf
add
xlat
xor
test
lods
xorb
aaa
andb
xchg
add
das
aaa
add
mov
or
inc
sarl
pop
mov
in
test
xlat
mov
repnz
dec
call
stos
push
ds
xor
in
in
cmp
adc
dec
pop
or
lcall
and
arpl
aas
mov
sub
push
scas
insl
mov
adc
and
clc
mov
lods
pop
xor
sti
test
repnz
out
aad
xchg
dec
aas
lea
pop
leave
jnp
pop
cmpsl
lea
push
add
loop
movsb
shlb
pop
jle
and
push
sti
sbb
or
mov
outsl
arpl
jmp
adc
das
xchg
out
ds
out
pop
std
mov
ljmp
sti
stos
mov
and
mov
shl
mov
mov
lods
das
insl
mov
add
sbb
cmpsl
mov
jmp
xchg
and
xchg
pop
movsb
loop
mov
or
das
or
mov
dec
mov
sub
pushf
cmpsb
or
jne
fbld
repz
aad
nop
sbb
add
repz
fistpll
inc
push
add
repnz
incb
outsl
mov
cs
sub
mov
mov
lea
xchg
iret
sub
jnp
xor
fistps
pushf
mov
mov
lods
mov
push
sbb
pop
loop
xchg
movsl
rol
rorb
xchg
ret
repnz
cli
ja
loopne
adc
dec
mov
jb
ljmp
shl
ret
stc
test
sub
test
or
mov
sub
adc
jno
stos
inc
pop
xor
loopne
mov
pop
add
push
out
fsubrl
jle
sub
add
push
sbb
add
imul
pop
dec
test
decb
aaa
mov
or
ret
std
inc
call
jg
stc
lcall
mov
xor
or
shlb
fists
orl
call
jge
mov
inc
lock
ds
loop
pop
lcall
jge
dec
mov
mov
cld
dec
leave
mov
adc
xchg
repz
sub
ds
push
shrl
sbb
sbb
jns
or
mov
pushf
pop
enter
mov
fcompl
ret
loopne
inc
mov
inc
push
or
cmpsl
push
stos
or
shll
or
imul
std
aaa
outsb
mov
int3
jmp
push
ss
adcl
adc
and
bound
push
mov
push
add
test
pop
fisttpll
cld
push
pop
icebp
frndint
dec
pop
stos
enter
ds
push
andl
and
js
mov
sbb
daa
sub
add
push
push
loopne
inc
or
into
cmp
mov
adc
cmp
cmp
out
cmc
btc
mov
xchg
jp
ds
xor
in
scas
leave
dec
push
push
cs
test
ret
mov
gs
aam
xchg
fcmovnbe
pushf
xchg
mov
push
inc
mov
sub
inc
push
test
cmp
cmpsb
push
stos
js
pop
push
mov
ljmp
sbb
jae
add
mull
adc
das
mov
addr16
das
in
inc
push
pop
mov
inc
xor
sbb
xchg
cmp
ljmp
sbb
iret
and
mov
xchg
mov
sub
out
movsb
xor
sti
jmp
pop
ficoml
dec
jge
test
lods
push
push
mov
inc
imul
jp
adc
add
dec
lret
movsl
jo
test
imul
pop
outsb
gs
dec
sub
or
sahf
mov
push
jae
push
mov
scas
jge
mov
lods
mov
lods
movsb
or
jp
or
shll
pop
mov
dec
ret
mov
mov
sbb
push
mov
bound
jp
insl
fwait
stc
pop
sbb
jne
in
push
sbb
pop
cmpsl
push
or
add
fisubl
fsin
pop
movsl
push
ds
scas
mov
out
dec
jle
mov
inc
loop
test
test
sbb
scas
lods
shlb
or
movsb
movsl
les
in
outsl
mov
frstor
fldl
cltd
mov
and
jnp
push
cmpsl
pop
cmp
mov
mov
mov
dec
fistps
dec
mov
mov
sub
movb
insb
gs
pop
leave
ja
sub
xchg
bound
mov
mov
sbb
mov
negb
test
mov
sbb
xchg
cwtl
test
sti
loopne
add
xor
or
repnz
adc
arpl
pop
cmpsb
adc
or
stc
fdivrs
mov
adc
sbb
jmp
push
push
mov
ja
mov
js
mov
loop
les
cld
into
stos
roll
mov
sbb
stos
pop
ljmp
negl
imul
and
mov
fwait
pop
int3
sbb
ljmp
sub
or
or
mov
out
lods
ficoml
jnp
out
inc
pop
dec
mov
icebp
clc
addr16
aaa
sbb
mov
sbb
inc
jno
and
fdivrl
xor
les
lret
add
mov
push
mov
jmp
jl
pop
arpl
imul
adc
jo
jg
mov
scas
mov
and
sbb
push
dec
aam
in
mov
aad
cld
pop
cmp
ds
adc
xchg
pop
call
jno
cmp
icebp
xchg
in
inc
mov
shlb
push
cli
sbb
push
js
cmp
mov
or
pop
push
sub
inc
outsb
outsl
popf
test
mov
sub
jge
pop
mov
lock
gs
sbbl
sahf
pop
adc
xor
cld
je
fldl2t
add
push
es
mov
xchg
icebp
mov
popf
or
mov
cmp
lcall
rcll
or
aam
dec
mov
push
add
ficoms
or
add
sub
xor
leave
hlt
dec
pop
mov
aam
ret
cmpsl
jnp
bound
mov
in
js
sub
jno
dec
fsubl
xchg
mov
jne
lods
inc
jle
sarl
repnz
xchg
mov
xchg
pop
les
inc
popf
cmp
mov
fs
rclb
inc
gs
outsl
xchg
call
xor
or
mov
ja
int3
mov
repnz
imul
fcomps
xchg
xchg
aam
popf
dec
or
adc
or
orb
test
mov
pop
xchg
shl
decb
in
mov
pop
push
mov
push
in
pop
outsb
mov
movsb
lea
je
adc
popf
cli
or
xor
lods
cwtl
hlt
ficoml
test
clc
mov
sbb
mov
in
decl
scas
fidivrs
dec
loopne
inc
aas
dec
inc
push
adc
push
call
fwait
pop
in
inc
rcl
mov
sbb
in
imul
insl
dec
ss
push
addr16
dec
rclb
jecxz
and
xchg
fldcw
inc
sbb
aam
repz
add
mov
push
adc
stos
mov
subb
sbb
stos
pop
pop
or
cmp
data16
shlb
ljmp
movsb
mov
fimull
mov
std
or
mov
clc
out
and
aas
push
adc
shl
je
inc
jp
jmp
jge
ja
ss
lret
jo
leave
push
rcll
insb
insl
clc
pop
mov
xchg
test
andb
ljmp
movsl
add
mov
das
in
pop
lods
dec
gs
pop
xchg
lahf
fstpt
movsb
or
nop
lock
fists
jp
fsts
loopne
icebp
mov
addl
sbb
aad
aam
fcomip
rolb
aad
xor
xchg
push
imulb
inc
lds
dec
sub
sbb
or
inc
and
into
bound
xchg
nop
cltd
xchg
mov
jmp
das
rcr
add
pop
leave
mov
mov
add
cmp
dec
mul
repnz
xor
insb
fdivrl
jmp
push
out
fsubs
flds
ret
xchg
sub
loopne
test
mov
in
pop
cmp
scas
mov
fldcw
std
dec
repz
fisubl
jle
fcmovu
in
pop
pop
push
inc
dec
arpl
loope
es
negl
gs
pop
pushf
mov
call
sbb
fistl
cmp
sahf
jmp
mov
sub
mov
stos
mov
inc
adc
jle
aaa
cwtl
in
inc
add
pop
insl
inc
cltd
pushf
sub
mov
push
mov
sbb
gs
jae
mov
mov
dec
pop
out
bound
mov
std
add
nop
inc
pushf
pop
dec
sbb
and
or
vmwrite
cmpsb
sub
fisttpll
dec
dec
mov
jo
in
sbb
pop
push
mov
mov
decb
sub
pop
pop
aad
dec
ficoms
aaa
cmp
push
test
mov
pop
andl
xchg
inc
popf
lods
sbb
inc
add
sahf
stos
pop
xchg
fldl
mov
lea
xor
add
cld
push
icebp
xchg
ret
xor
dec
pushf
inc
xor
mov
mov
mov
mov
dec
iret
sti
adc
lret
sub
cmp
stc
idivb
lods
loopne
das
adc
lret
push
pop
pop
push
orl
imul
pop
stos
cwtl
cmp
mov
adc
ret
cld
adc
xchg
xor
sarb
cmp
and
out
xchg
repz
iret
in
das
mov
sbb
inc
test
xchg
mov
cmp
mov
clc
rcrl
adc
xor
or
mov
push
xor
rcpps
sbb
inc
fists
cld
dec
in
xor
movsb
popa
sbb
orb
adc
cld
xchg
test
inc
pop
jecxz
iret
loopne
loope
int
sbb
repnz
inc
fcmovnbe
sbb
dec
jl
jo
daa
dec
push
sub
nop
pushw
pushl
cmc
scas
dec
pop
ds
add
xchg
jnp
aad
lods
add
cmp
lods
mov
inc
shrl
xchg
mov
xor
jmp
push
xlat
mov
xor
inc
aaa
cmp
stc
push
cltd
mov
cmpb
pop
fucomip
pop
inc
add
repz
psraw
mov
cmp
inc
adc
std
fwait
cmpb
ljmp
mov
jnp,pt
rolb
aas
xlat
out
clc
loopne
or
aam
jne
jb
jnp
or
add
mov
jmp
push
adcl
add
insb
test
pop
lahf
lret
insb
inc
fidivrl
xchg
mov
sahf
cmpsl
ss
addr16
test
mov
inc
inc
sub
mov
pop
sub
mov
insb
push
fistps
cmp
push
pop
jg
ds
lea
lods
pop
hlt
inc
jno
aam
xorb
addr16
and
scas
mov
and
inc
leave
sbb
or
cwtl
push
push
xchg
mov
xchg
mov
daa
fwait
add
divl
sbb
inc
aaa
mov
mov
loop
ret
fldl2e
int3
sbb
shlb
bound
sub
inc
push
lea
mov
xrelease
data16
loop
and
roll
dec
jae
cs
cmp
sub
push
imul
int
sbb
or
jecxz
cmp
sbb
dec
sbb
loopne
mov
aaa
stos
sub
mov
mov
jp
and
mov
out
in
adc
hlt
push
mov
cmc
mov
dec
add
jecxz
cmp
or
ja
push
punpcklbw
add
lcall
mov
or
fisttps
fimull
daa
xchg
sahf
gs
popa
jl
sbb
iret
movsb
sbb
and
adcb
sti
aam
das
mov
scas
rcll
pop
cwtl
cmpsb
or
dec
push
pop
stos
inc
mov
arpl
fidivrs
sub
negb
int
xchg
mulb
es
stc
jle
dec
loope
addr16
mov
out
and
xchg
lret
xchg
loopne
jp
adc
loopne
sbb
push
das
in
mov
mov
sahf
pop
or
rcll
cltd
repz
push
sub
push
cli
cmpsb
xchg
xchg
int3
fldenv
xlat
mov
aas
dec
lret
stos
xor
cmc
cld
push
cmpsl
stc
dec
jmp
inc
fnstenv
dec
jmp
das
popf
stos
xchg
pop
mov
incb
in
mov
inc
arpl
nop
adcl
in
dec
push
sub
ss
sub
out
mov
pop
xchg
push
dec
mov
pop
repnz
cmp
icebp
sbb
adcl
repnz
xchg
pushf
pushf
lods
test
lret
sub
lcall
and
pop
clc
notb
mov
fstpt
fs
jle
shlw
xchg
icebp
ss
lods
lea
test
inc
cmp
and
imul
aas
xchg
mov
pop
insl
or
sbb
push
mov
xchg
pop
xor
imul
cmc
inc
mov
push
cmp
add
inc
outsl
xchg
push
iret
les
cld
cmc
and
jge
bound
jno
push
lods
mov
test
push
pop
shlb
insl
mov
push
sbb
xchg
cmp
cmp
sub
add
adc
pushf
add
std
xchg
loope
adc
cmc
xchg
sbb
pop
cmp
jmp
aam
sbb
bnd
sbb
sti
sbb
enter
jle
lods
xchg
add
mov
add
fwait
lock
flds
add
cmpsb
jg
inc
shrl
pop
mov
jb
mov
xchg
or
push
cmp
in
inc
and
ss
js
in
aam
rclb
lret
jbe
cmp
in
iret
xor
pop
add
xchg
clc
outsb
adc
leave
sbbl
sub
jl
je
pop
gs
dec
stos
int
repnz
push
push
out
xor
lret
xchg
push
test
jg
shl
adc
test
movsl
fadds
xor
outsb
int3
push
inc
stos
movsl
push
sbb
lar
movsl
js
jns
repz
push
adc
inc
shlb
loope
ss
jo
sub
cmp
insb
aad
pop
scas
inc
push
inc
cmp
xchg
scas
jge
mov
fiadds
insl
cltd
mov
adc
sahf
mov
sbb
mov
add
loope
daa
stc
cmpsl
cli
mov
dec
dec
mov
in
les
inc
movsl
pusha
clc
push
mov
popf
lea
xchg
xchg
or
or
dec
sarl
pushf
dec
pop
cmp
movsb
jg
push
inc
mov
mov
loop
popf
sbb
psrld
sub
iret
sahf
cld
xchg
dec
mov
mov
lea
test
pop
xchg
jecxz
je
stos
cmpsl
lods
cmp
or
push
sub
xor
outsl
imul
stos
jle
test
push
aas
loopne
xchg
xchg
inc
cwtl
inc
sub
mov
stos
jae
and
cmc
pushaw
movsb
xor
mov
out
mov
xchg
shlb
xchg
ror
ret
cmp
stos
mov
cmp
push
push
mov
movsl
xchg
int
mov
cmp
xchg
push
adc
loop
mov
cld
aas
in
je
mov
pop
fs
pop
jle
in
mov
mov
sti
in
xchg
lea
test
and
push
cmc
sub
jmp
and
cmp
jnp
aad
cmp
loope
xor
jo
jge
add
adc
mov
mov
mov
das
or
out
fcomps
aam
adc
dec
jl
mov
popa
out
dec
cs
sub
enter
mov
adc
or
mov
out
jg
rcrb
sahf
mov
sbb
test
jbe
pop
stos
nop
mov
mov
mov
aad
dec
jb
and
or
int
dec
push
mov
ret
mov
xchg
sbb
ds
cld
xchg
sub
and
xor
push
xchg
push
push
pop
cmp
rcr
sbb
xchg
mov
add
es
cmp
mov
mov
add
sahf
ja
fldl
aad
outsb
test
pop
or
dec
push
stc
in
ss
ds
call
jmp
movsl
fistpl
adc
jl
jnp
mov
pop
mov
cmp
stos
sub
out
xor
out
enter
nop
dec
bound
fdivl
xor
add
nop
ret
mov
aam
aaa
int3
test
mov
out
loopne
rclb
lods
jb
mov
lcall
fwait
push
sbb
jnp
dec
aaa
lcall
xor
fmull
bound
in
lcall
inc
mov
and
daa
push
mov
push
icebp
jmp
mov
cmp
jg
cwtl
pop
sbb
gs
push
aaa
fiadds
clc
fs
pushf
leave
push
cmp
or
sbb
xchg
addr16
cmpsb
les
test
int3
nop
or
mov
mov
es
inc
outsl
xchg
mov
xor
sub
testl
pusha
push
xchg
lret
outsb
sahf
sub
add
push
nop
add
cmc
fsubr
out
sbb
in
cmp
cmpsl
cltd
sbb
repnz
arpl
jmp
xchg
mov
xchg
xor
les
cmpsb
xor
aam
xor
lea
stc
sub
jge
sbb
cs
and
inc
test
push
out
div
movsb
lret
xchg
sbb
jecxz
xchg
lea
in
jmp
les
negb
pop
sbb
add
pop
cmp
pop
push
idivb
jmp
push
add
sub
enter
xchg
and
mov
mov
pop
xor
add
mov
rcll
xchg
out
mov
lock
je
in
mov
pop
cwtl
stc
xchg
ss
push
lds
cwtl
xor
movsl
pop
xlat
int
outsb
add
out
dec
daa
sti
andl
add
pop
or
mov
pop
imulb
cmp
out
pop
xchg
fbld
aaa
clc
adc
cmpsl
mov
fcmovnb
push
xchg
xchg
sbb
inc
sbb
jl
pop
mov
add
xchg
hlt
sahf
test
movsb
sub
xlat
pop
mov
loop
add
mov
fildll
int
cli
mov
scas
jae
sub
push
lods
push
push
jge
mov
icebp
or
xlat
jl
lods
pushf
or
adc
lods
jns
es
out
sbb
idiv
popf
cmp
or
lods
jmp
xor
xlat
dec
xor
shll
bound
ret
movsb
test
les
jg
sub
mov
cmc
daa
out
fistps
dec
jle
adc
icebp
and
popf
es
add
xor
dec
lock
stos
jl
out
and
mov
or
cmpsb
cld
std
loopne
iret
push
test
gs
mov
enter
int
adc
mov
lret
mov
add
xchg
mov
add
fdivl
data16
daa
and
test
ja
jne
xchg
push
and
lods
mov
mov
aam
aam
cltd
insl
jae
add
lahf
sbb
cmp
pop
lahf
scas
andl
arpl
or
or
push
jp
lcall
stc
jge
pop
adc
inc
xor
mov
mov
aaa
enter
jmp
mov
xchg
iret
cmc
popf
sar
enter
xor
gs
scas
xor
mov
daa
out
pop
jle
mov
mov
cmpsl
bound
pop
dec
mov
clc
lods
fdivl
dec
add
cs
loopne
lret
jb
or
pop
sub
lret
aaa
repz
cmp
lcall
repnz
xchg
int
or
pop
sbb
jmp
or
xchg
or
outsb
and
mov
xchg
push
cltd
mov
scas
jnp
xlat
cli
test
dec
dec
jo
sti
pusha
mov
or
daa
ja
incl
dec
sub
fbld
popf
or
push
lret
jle
lods
pop
pop
sbb
jle
out
or
inc
lods
push
mov
lahf
imul
out
sub
jl
jb
push
enter
mov
outsl
dec
jnp
hlt
cmp
and
movsl
sti
pop
jle
sbb
mov
aaa
lock
dec
mov
das
lds
dec
push
add
adc
adc
pusha
pop
sub
adc
jae
popf
in
orb
cmp
mov
push
mov
or
outsb
push
inc
xchg
inc
push
lret
mov
push
dec
push
jle
repnz
sub
xor
nop
jmp
xorb
mov
push
adc
flds
icebp
push
xchg
xor
xor
stc
scas
mov
jp
iret
js
mov
js
outsl
adc
enter
push
sbb
xchg
xchg
or
push
and
jle
roll
adc
sbb
pop
jle
push
inc
pop
jecxz
ja
in
orl
fidivl
dec
mov
push
mov
ss
push
repz
jl
cmp
dec
lss
lods
mov
lret
pop
xchg
mov
test
jbe
leave
insl
out
movb
adc
pop
fcoml
lock
sbb
into
lods
pop
aas
stos
icebp
inc
lcall
loopne
popf
jo
andl
push
sub
roll
insl
push
xor
mov
ss
sar
outsb
or
clc
out
jo
popf
rolb
mov
push
loope
inc
call
rorb
add
lods
jnp
scas
mov
push
jbe
xor
inc
call
pushf
pop
sbb
int
notl
xor
es
mov
pop
inc
mov
int3
jbe
pop
pop
bound
or
lods
xlat
xlat
lock
adc
dec
mov
in
aas
mov
testb
aam
fs
stc
out
outsb
mov
dec
mov
and
ret
inc
dec
mov
in
sti
test
mov
xor
push
pop
cmp
adcl
sbb
or
mov
jae
push
lcall
test
enter
mov
into
push
loope
mov
jns
lods
xchg
scas
or
xlat
sbb
aad
sbb
mov
dec
aad
add
or
mov
xchg
imul
fisttpll
popf
dec
ljmp
or
jnp
inc
mov
mov
sub
fwait
cmp
fcoms
mov
xor
pusha
dec
xchg
mov
xchg
jne
inc
jno
test
jecxz
out
lods
rclb
cltd
fnsetpm(287
mov
stos
fwait
mov
subb
ljmp
xchg
sarb
dec
stc
fisttps
adc
dec
dec
xchg
stos
out
adc
mov
aaa
or
push
ss
in
push
jp
movsb
cmp
mov
inc
pop
fsubrl
or
pushw
call
jmp
jecxz
daa
jae
subb
sbb
nop
xlat
cs
cmp
dec
popa
repnz
jnp
adc
je
mov
add
xchg
imul
jmp
arpl
xchg
pop
mov
mov
jecxz
fadd
mov
push
mov
int
ret
push
stos
xchg
fs
pop
popa
das
xchg
mov
inc
pop
aad
incl
push
sahf
jge
pushf
stos
enter
and
out
movsl
and
lret
or
daa
dec
push
jg
aaa
mov
pop
imul
lds
or
out
inc
into
loope
aaa
outsl
stos
jbe
sub
sbb
into
inc
testb
out
lods
mov
pop
cmc
mov
push
mov
and
divl
push
add
stc
pop
pop
mov
int3
sbb
inc
hlt
mov
or
pop
js
sub
cwtl
pop
jnp
adc
cmp
add
test
cmpsb
popa
mov
icebp
sbb
add
arpl
sbb
rcr
out
dec
sbb
pop
mov
popf
out
mov
aaa
jbe
mov
xchg
std
push
adc
cld
pop
xchg
pop
bound
test
dec
mov
inc
cmp
push
jmp
in
sub
and
nop
fnstsw
std
ret
aas
sar
rolb
cmp
idiv
dec
xor
jl
sti
inc
ret
mov
cmp
popf
stos
mov
mov
push
sub
dec
lods
test
pop
hlt
out
sahf
je
push
adc
xchg
xor
cmp
js
mov
fisttpl
jne
dec
mov
sub
jmp
dec
call
int3
sub
orb
inc
mov
mov
in
cmp
add
add
jle
push
loop
enter
aad
jno
xor
add
movsl
or
vmwrite
mov
xchg
push
lds
mov
outsl
test
jle
jmp
push
adc
std
push
jo
and
pop
and
xor
pop
push
sahf
cwtl
jg
adc
mov
adcb
xor
iret
add
add
jbe
mov
xor
lock
cli
jnp
js
addr16
cmp
out
test
fbld
lahf
add
add
dec
jo
xor
clc
xor
mov
insb
gs
rorl
jmp
inc
cmpsl
push
insb
daa
mov
mov
out
call
stos
insb
stos
dec
in
ret
std
pop
add
cmp
add
or
dec
aam
ljmp
push
icebp
out
sub
ja
std
adc
ret
cmp
pop
popa
cmpsl
cwtl
aad
cltd
in
xchg
mov
mov
in
pop
rcl
flds
es
sub
out
adc
dec
mov
push
mov
into
or
iret
mov
jge
lds
mov
aad
orb
dec
dec
outsb
mov
mov
stos
fsubrl
mov
mov
mov
push
cwtl
adc
push
outsl
punpcklbw
cmp
jl
push
and
mov
cmc
adc
popf
sahf
inc
push
xor
mov
fwait
mov
test
fldenv
jnp
jno
xor
and
jo
pop
mov
leave
jnp
and
jge
adc
adc
xor
mov
xchg
sub
sub
jae
arpl
sbb
push
std
add
scas
loopne
shr
add
popa
jno
stc
dec
pop
out
mov
jne
and
pop
in
stc
shrl
jg
sub
mov
add
inc
shrl
add
push
xor
push
sbb
mov
xchg
out
sub
arpl
mov
mov
idivb
inc
push
push
mov
mov
jg
out
movsb
xchg
jg
scas
fstpt
and
cltd
loop
or
sbb
mov
mov
nop
jle
xlat
movsl
lcall
lea
xchg
shll
pop
pop
push
push
dec
or
lds
imul
xchg
punpcklwd
push
xchg
mov
cmpsl
and
dec
rcr
jnp
jo
adc
hlt
jle
jno
les
lods
cmpsb
pop
xchg
fmuls
sbb
cmp
movl
mov
addl
add
mov
cmpsb
and
jae
push
push
mov
shll
ja
dec
mov
push
pusha
xor
and
cmp
dec
dec
or
incb
popa
lret
mov
dec
jmp
aad
ss
cmpsl
arpl
cmpsb
xchg
cmp
loop
imul
das
mov
popf
and
pop
pop
fsts
stos
push
imul
insl
dec
sub
outsl
sahf
sub
cs
das
sub
int
mov
repnz
out
decb
xlat
xor
aaa
lds
mov
push
push
push
dec
jno
mov
jae
or
stc
shll
out
mov
cmp
xor
cmpsw
clc
das
sbb
rol
cmpb
test
lods
adcb
mov
jno
mov
mov
push
mov
cli
xchg
cmpsl
sbb
dec
cmp
pop
fisttpll
int
out
ljmp
mov
dec
push
ret
fiadds
xchg
push
mov
xor
addr16
add
arpl
mov
mov
cmp
cmp
sahf
fs
loopne
push
fisubrs
jmp
adc
add
cmpb
sub
cmc
leave
out
pop
cli
cmp
xor
test
into
mov
in
lcall
push
adc
les
mov
push
adc
add
jo
xchg
scas
inc
nop
dec
mov
mov
xchg
xchg
lds
dec
test
mov
pop
xchg
in
jecxz
sbb
jb
cmp
ds
mov
mov
add
mov
xchg
jecxz
mov
sti
cmp
xchg
pop
sub
loopne
fldl
or
mov
loopne
mov
fisubrs
pop
add
pop
fcmove
sub
out
mov
mov
and
cmp
jle
shrd
adc
or
outsb
push
je
test
ret
pop
das
mov
testl
stos
fs
mov
inc
cmpsb
sub
insl
das
xchg
or
and
mov
xchg
adc
int3
idivl
movsl
fists
push
notl
cmpsl
mov
sub
mov
jge
lret
in
ss
mov
cmp
jge
lahf
pop
inc
xchg
cmp
or
sub
fnstcw
mov
lea
push
push
inc
or
xchg
fdivs
int
adcb
daa
add
ja
enter
rcrb
adc
pop
fdivp
ret
and
test
and
loope
jmp
dec
lds
jmp
jp
xor
xchg
sbb
dec
loope
dec
pop
insb
inc
repnz
cli
ljmp
jle
mov
dec
sbb
ret
mov
mov
lea
cmpl
ret
mov
enter
insb
popf
aam
shll
or
loopne
mov
jg
mov
push
xchg
lahf
push
fcoms
sub
pop
dec
stos
mov
push
and
inc
xlat
lahf
xor
mov
in
scas
xor
xchg
stos
das
pop
pop
xor
imul
mov
mov
ja
les
xchg
scas
xchg
jb
ficoml
add
pop
cmpb
push
push
clc
and
les
sbb
xor
pop
adc
fisubrl
jne
fdivrs
jbe
sbb
cmpsl
cmp
in
jae
aas
jo
aad
inc
shll
je
cmp
aas
in
inc
loop
inc
jns
loopne
fwait
mov
sbb
mov
into
or
jo
lret
push
repz
mov
push
or
fimuls
repz
lods
push
fs
inc
jl
loope
sbb
js
sbb
inc
shl
lods
test
xchg
hlt
inc
insl
std
mov
ret
cmp
cmpsl
push
jae
ret
sub
push
inc
stos
cmp
flds
gs
or
cmp
push
repnz
jle
pop
fdivr
or
adc
xor
add
add
cmp
xchg
mov
push
add
ds
xchg
repnz
jle
push
and
test
lcall
add
repz
icebp
jne
ja
xlat
jecxz
push
enter
pop
mov
fimull
inc
imul
pop
negl
or
xchg
das
and
mull
xchg
add
cmp
bound
stos
mov
push
inc
inc
mov
xor
pop
das
sub
cli
jnp
push
inc
cld
push
xchg
push
sarl
bound
sbb
dec
into
scas
dec
and
jp
repz
hlt
jbe
shrl
pop
mov
xchg
inc
aam
mov
enter
call
bnd
add
call
sahf
dec
xor
dec
xchg
pop
add
push
inc
imul
sub
cmp
int3
ja
mov
dec
sbb
ret
in
sti
adc
inc
and
hlt
int3
xchg
jae
mov
or
popf
and
fmuls
inc
jg
mov
and
stos
ljmp
gs
mov
and
insb
stc
push
and
test
arpl
xchg
cmp
rorb
andl
cs
icebp
push
js
fisttpl
adc
cmp
aad
xchg
cmp
pop
dec
incb
insl
mov
ficompl
push
pop
add
stos
pop
fdivp
mov
subl
and
les
icebp
test
imul
sub
cmpsl
mov
sbb
dec
out
jbe
jecxz
xchg
das
fistl
pop
or
aaa
cmp
push
mov
icebp
cltd
std
out
imul
adc
fsts
dec
inc
or
mov
test
outsl
dec
mov
loope
nop
push
jmp
pop
dec
xor
les
and
jg
shll
nop
test
test
jae
out
js
dec
cmp
inc
repz
aam
cli
jecxz
mov
insb
xchg
mov
dec
adc
popa
sub
cmpsl
gs
sbb
sub
xchg
mov
mov
rorb
jb
cmp
negl
cmp
push
fistps
dec
icebp
xchg
inc
jge
or
inc
mov
stos
mov
ret
mov
jp
jl
inc
cmovne
jle
add
cld
xchg
es
fsubl
push
mov
mov
pop
cld
cmpsb
add
inc
pop
insb
mov
out
cld
add
cmc
dec
dec
xchg
test
ficomps
std
dec
ret
dec
lea
enter
push
sub
insl
jl
cwtl
pop
fs
ds
cmc
call
mov
insb
not
data16
testl
sbb
jge
daa
mov
add
cltd
fcom
sub
cmp
inc
shrl
push
xchg
ret
xchg
out
out
das
out
pushl
jo
or
das
orl
notl
push
or
jg
ret
sbb
out
ds
jl
xchg
or
das
ss
arpl
iret
mov
push
or
push
mov
pop
cmp
xor
fwait
inc
xor
mov
xchg
sbb
lea
and
mov
dec
je
addr16
mov
push
out
outsl
mov
mov
jl
std
notb
and
cli
sub
mov
and
rolb
jne
jnp
pop
test
pop
jle
jmp
into
cmp
loop
gs
sarb
mov
and
xchg
jmp
jo
inc
dec
test
les
repz
mov
loope
adc
adc
dec
pop
cmp
xchg
or
sbb
dec
lock
or
sub
jns
aam
lret
pop
loope
pop
push
jle,pn
push
jge
test
mov
stc
daa
cmpsb
inc
add
das
sub
sahf
or
xchg
mov
out
mov
leave
mov
jo
or
imulb
fiadds
adc
sub
push
in
push
and
fs
pusha
dec
pop
cmp
fidivs
movsl
and
push
push
pop
dec
sub
ja
mov
clc
or
inc
scas
xor
in
addr16
xchg
pop
xchg
into
mull
shrb
push
push
xchg
adc
std
sub
dec
adcb
ja
mov
outsl
mov
fcoml
xchg
pop
xlat
add
lret
sar
lea
in
mov
shlb
and
pop
pop
adc
daa
and
mov
lds
cmpsb
int3
lahf
or
lods
ja
loope
or
xchg
repnz
into
test
jns
xor
adc
cli
add
push
and
mov
out
jnp
sub
pop
xor
xchg
mov
ja
inc
popf
jmp
in
iret
sub
lea
jecxz
cltd
hlt
sbbl
arpl
clc
push
inc
stos
out
ljmp
dec
stos
andl
xchg
adc
test
repnz
pushf
aas
int3
mov
aas
stos
scas
cmp
lds
mov
fwait
xchg
test
xor
add
lret
popa
outsl
clc
inc
iret
neg
adc
xchg
adc
cmp
stos
fistpll
mov
test
es
ss
xor
and
ljmp
adc
in
stos
jp
adc
add
lahf
mov
fwait
hlt
addr16
fcoms
call
xrelease
cmp
outsb
adc
ret
xchg
push
scas
mov
stos
pop
repnz
inc
mov
adc
leave
add
fidivl
lret
mov
mov
enter
add
jmp
je
std
and
insl
lea
pop
mov
inc
fcompl
push
shrl
loopne
imul
ficoml
add
sarb
cmpsl
jns
mov
dec
mov
popf
add
pop
xchg
fwait
hlt
movsb
inc
mov
ds
addr16
pop
jmp
mov
pop
in
les
subb
cltd
frstor
mov
push
jbe
mov
cmpsb
push
jno
out
and
mov
pop
lcall
daa
pop
adc
fcmove
jb
aam
popf
sbb
push
iret
pop
mov
and
ret
jl
pushf
xchg
sahf
sti
lods
fcmovne
aam
sbb
sbb
mov
jne
mov
test
str
out
jnp
bound
lcall
mov
out
aad
jne
shr
or
dec
movsl
xchg
sub
xchg
pop
fimull
jno
inc
mov
je
push
push
dec
pop
sub
inc
test
clc
dec
xor
inc
sbb
imul
xlat
pop
mov
inc
dec
notb
sbb
xchg
fisubrs
and
lds
mov
mov
cltd
out
fnstcw
shr
mov
xor
leave
fs
cmpb
outsb
push
lods
int
mov
into
dec
add
movsb
or
sbb
mov
loope
push
mov
movsb
pop
jge
inc
in
cmpsb
popl
dec
popf
push
cmpsb
cmp
mov
or
mov
adc
add
nop
jbe
inc
fimuls
cwtl
mov
aad
movsb
aas
lret
push
inc
cmp
lods
xchg
adc
dec
das
sarl
psubb
adcl
pop
loope
scas
loopne
pop
pop
imul
mov
out
scas
push
jo
dec
adc
test
jnp
fnop
nop
sbb
mov
bound
sbb
mov
and
jno
push
mov
or
adc
sbb
jle
mov
aaa
jo
fwait
jns
popa
mov
rorb
push
hlt
js
push
and
pusha
xor
or
addr16
cmp
jo
mov
xchg
cmp
sbb
adc
rcr
ret
jb
inc
push
xchg
fidivrs
inc
sbb
movsl
xor
xor
or
sbb
sub
imul
mov
daa
enter
jne
in
mov
mov
cmp
pop
or
ljmp
out
cmpsl
push
test
mov
in
and
das
es
out
xchg
sahf
cmp
mov
mov
ret
inc
arpl
mov
cmpsl
sbb
movsb
mov
inc
jno
lock
mov
mov
cmp
mov
add
dec
dec
es
pushf
push
js
js
cmp
test
adc
jns
test
sbb
xchg
and
push
pushw
push
pop
or
jmp
test
data16
mov
sbbl
rorl
xor
rclb
int3
and
pop
pusha
xlat
pop
and
stos
mov
xchg
in
shr
inc
adc
pop
test
cwtl
jae
movsb
cmp
jns
aam
cmp
rcr
insb
movb
bound
aaa
insl
jecxz,pn
mov
shrl
and
filds
mov
adc
cmp
ss
les
inc
push
das
push
fistpl
mov
push
mov
mov
dec
adc
xchg
add
add
push
push
notl
pop
ret
sbb
adc
mov
mov
sbb
test
add
cwtl
adc
jecxz
loop
adc
cmpsb
adc
call
aam
fbld
cltd
add
xor
cmpb
and
push
push
dec
insb
dec
int3
out
push
push
xlat
sbb
mov
inc
xchg
daa
push
mov
jne
insl
cs
pop
mov
lret
push
ss
xlat
lods
je
cmc
iret
pop
lahf
lods
ljmp
lcall
dec
xor
mov
xor
sti
dec
adc
adc
lock
xor
imul
jb
sbb
push
add
pop
imul
repnz
mov
push
sbb
sub
pusha
addr16
mov
bound
lods
cld
mov
push
lock
lret
gs
nop
ljmp
push
ret
xor
fcomip
filds
pop
mov
ljmp
es
cmpsl
mov
mov
negl
and
rcrb
mov
test
pop
xor
cmp
jge
sbb
adc
or
pop
jp
aam
lret
repz
in
cmp
pushf
jnp
pop
loope
ret
push
rclb
cmc
mov
xchg
inc
imul
fwait
js
jb
lods
xchg
adc
mov
insb
loop
shr
push
nop
rcrl
cmp
imul
notb
loop
ss
aad
icebp
xor
lahf
stos
jno
sub
mov
mov
xor
test
jl
loope
inc
pop
inc
jbe
mov
pop
adcb
clc
lock
lret
and
fistl
dec
cwtl
dec
loop
sub
xchg
sbb
pop
stos
mov
jns
mov
pop
jo
jmp
xchg
mov
test
pushf
mov
mov
push
ja
xchg
dec
mov
sub
cmp
es
sub
mov
jbe
in
push
cmp
out
and
mov
adc
jecxz
or
pop
inc
inc
dec
jno
pop
test
cmc
ja
das
xlat
jne
cli
cmp
mov
popa
push
adc
mov
jns
mov
fimull
xlat
nop
mov
shll
pop
js
cmp
mov
and
inc
adc
add
jns
push
adcl
dec
outsb
mov
lods
mov
sbb
mov
and
xchg
sti
cmp
xchg
fcmove
fldl2e
xor
sti
cld
and
out
lret
xor
shlb
sub
mov
int3
sbb
popf
dec
pop
arpl
mov
jmp
sub
pushf
pusha
or
stc
jecxz
pop
sub
cmp
and
xor
add
xchg
mov
and
lret
aad
shll
jmp
pop
mov
pop
dec
mov
aaa
ljmp
fidivl
sub
negl
sub
imul
mov
stos
add
in
jns
adc
bound
dec
dec
mov
add
mov
ret
movsb
fidivrs
inc
or
jno
push
lret
ret
or
jne
cmp
pushf
push
insl
pop
or
movsw
inc
inc
in
iret
jecxz
mov
push
mov
clc
dec
jne
push
adc
lods
mov
aad
ds
add
cmp
fmul
xchg
jecxz
insl
shll
xchg
rolb
sub
push
xor
enter
mov
sub
pop
mov
xor
cmp
sub
fwait
mov
and
loop
push
aad
sub
movsl
fadd
sbb
or
test
push
push
jbe
xchg
ljmp
sbb
jge
stos
je
cmc
sbb
nop
sbb
adc
lret
add
or
jne
push
es
or
movsb
ja
or
inc
or
in
popf
in
cli
cltd
iret
mov
cmpsb
cmp
out
addb
jo
mov
and
mov
jb
pop
clc
into
stos
test
ljmp
adc
push
or
inc
stos
icebp
pop
mov
or
mov
arpl
adc
mov
rclb
mov
divl
mov
pushf
xor
notl
add
cmp
rcr
mov
mov
adc
sub
pop
pop
mov
jl
mov
jmp
ss
mov
mov
cmp
sbb
lods
stos
inc
pop
fcmove
sbb
mov
dec
ficoml
fidivs
push
cltd
pop
push
call
sub
inc
xchg
xchg
mov
ja
sub
ja
push
jl
adc
jecxz
inc
xchg
lgs
lods
dec
adc
inc
out
jg
adcl
sub
andl
int3
loopne
das
popa
push
sub
mov
dec
cwtl
scas
ja
enter
cmp
fwait
hlt
scas
cld
es
sbb
mov
rol
pop
xor
js
aad
dec
dec
xchg
mov
push
pop
jl
pop
and
mov
sti
adc
mov
ss
mov
jne
loope
xchg
mov
popf
lods
xchg
shlb
outsl
pop
mov
push
sub
frstpm(287
scas
inc
js
es
repnz
pop
cmp
mov
lcall
mov
lret
inc
dec
jecxz
push
jo
add
jne
cli
nop
and
sbb
ljmp
cmp
lods
inc
sub
push
ret
sub
mov
movsl
add
jae
pop
cltd
cmpsl
add
cltd
lret
aaa
xchg
mov
mov
xlat
rol
test
or
sub
loopne
mov
lods
fucomip
fiaddl
jbe
pop
adc
mov
andb
in
dec
mov
cmc
in
pop
add
cmpsb
fstl
mov
fdivrp
pop
mov
repz
je
push
jp
cmc
adc
and
push
arpl
mov
cwtl
aam
movsl
jecxz
inc
pusha
xor
daa
fcomps
adc
mov
cmp
mov
and
cmpsl
dec
jmp
or
repnz
sbb
jp
mov
dec
fsubp
adcb
das
xor
mov
aad
inc
rcrl
fs
rcl
pop
push
ret
shlb
adc
sbb
xchg
cmp
repz
rorl
dec
std
xlat
mov
push
dec
cmpsb
jge
mov
out
mov
addr16
mov
jmp
cmp
call
mov
aaa
xchg
pusha
ss
mov
imul
push
stos
or
add
or
addl
sub
mov
lret
popa
pop
push
scas
xor
cmpsl
adc
into
mov
dec
stc
push
mov
sub
xor
and
mov
sbb
inc
scas
inc
jne
mov
inc
dec
data16
je
por
imul
pushf
inc
mov
adc
orl
out
roll
lahf
push
mov
dec
mov
loopne
sti
mov
xor
mov
insl
pop
xor
push
sub
sbb
mov
outsb
jle
sbb
xchg
push
inc
cmp
dec
jae
cmp
cmpsl
daa
das
sub
push
cmp
mov
xor
mov
push
xor
adc
lret
jae
jp
jno
shll
pusha
or
leave
add
xchg
push
cmp
loope
in
sub
cmp
xchg
cmp
insb
arpl
adc
or
inc
adc
loope
cmp
fs
aaa
xchg
xchg
shll
pop
lock
and
leave
hlt
mov
subl
loop
push
fs
cmp
jge
cmp
mov
ljmp
jmp
jb
iret
push
lea
insl
sub
test
jne
xchg
pop
mov
test
mov
fistps
or
adc
mov
imul
cmpsl
mov
jl
sbb
sub
int3
or
xchg
jo
jp
pushf
fists
xchg
mov
pop
lahf
icebp
lods
dec
mov
push
hlt
or
aaa
xor
stos
movsl
scas
and
and
sbb
lcall
pop
inc
mov
and
pop
sbb
out
pop
idivb
push
jecxz
jb
pop
or
jg
out
push
jmp
aaa
jp
push
xor
in
and
in
cmpsb
pop
lods
inc
pop
iret
inc
and
add
loopne
in
mov
xor
lret
xor
sbb
lret
or
lret
xor
test
jecxz
push
pop
mov
lea
scas
jb
pop
sub
stc
mov
pop
cltd
add
push
imul
imul
cmp
xor
mov
aam
jne
cld
mov
add
addr16
int3
mov
fisubrl
xor
sub
lds
xchg
jo
cmpsb
ret
or
nop
mov
sbb
out
pop
ss
mov
mov
xor
dec
add
rorl
inc
icebp
cmp
pop
int3
jecxz
fcomip
push
or
ljmp
call
lods
in
push
ljmp
mov
scas
pushf
outsl
or
es
je
jg
inc
cmp
cltd
cltd
or
inc
or
aaa
and
xchg
int3
imul
and
in
push
push
daa
pop
pushf
movsl
into
repnz
xchg
mov
mov
mov
push
movsl
aad
cmpsl
pop
push
scas
cmp
icebp
xchg
mov
icebp
pop
add
icebp
lahf
aam
fbld
xor
push
mov
iret
adc
pushf
fwait
test
idivl
cwtl
xor
dec
fwait
jle
repz
out
sub
pop
ror
das
jb
test
inc
push
ja
cld
push
bound
cmpsb
jecxz
cmp
or
or
stos
adc
cwtl
sbb
aaa
xchg
add
test
ja
jg
cmp
fistpll
repz
sbb
inc
imull
dec
inc
ss
mov
lock
inc
inc
lret
aam
xor
jnp
xchg
mov
push
fcoml
lods
jl
add
pop
push
loopne
std
push
dec
mov
jbe
in
adc
xchg
rcr
pop
xor
fwait
inc
fisttpl
dec
adc
stc
fiaddl
call
sub
mov
pop
subb
inc
into
enter
int
xchg
push
pop
je
rorl
add
sub
mov
movsl
inc
fildl
inc
or
xchg
in
out
mov
subl
push
fs
inc
clc
lret
mov
mov
ret
rcrl
cmp
cmpsl
jae
adc
lods
cli
pop
push
push
outsl
movsb
xchg
leave
add
jle
push
mov
push
mov
arpl
mov
cmc
cmp
lcall
in
mov
sub
rorb
dec
fldt
sbb
dec
pop
mov
push
sar
pop
pusha
int3
pop
stc
sbb
xchg
loop
ss
out
jbe
rorb
test
jb
mov
in
icebp
xor
lea
cmpsb
jg
call
xchg
sti
scas
jae
ret
cs
repz
adc
filds
ss
mov
aad
cmpsl
test
push
xor
sbb
cmp
xchg
push
in
inc
pop
cmp
adc
data16
or
gs
mov
dec
lods
roll
mov
sub
lahf
lds
cs
imull
xlat
repz
xchg
lret
adcb
filds
and
shlb
rcl
jno
push
sub
cwtl
xchg
inc
pop
cmp
loope
loopew
add
in
pusha
lock
imul
das
lock
cli
shll
lahf
jne
jb
call
cwtl
int
mov
mov
lahf
aaa
test
push
into
les
outsl
sub
xchg
loop
int
dec
dec
sbb
and
xchg
dec
ss
lret
xor
sub
lods
cli
js
xor
xchg
and
loop
jmp
pop
out
mov
cld
cmp
or
mov
outsl
jo
outsb
test
and
mov
sbb
jo
mov
mov
bound
and
das
sahf
packsswb
sub
fsubrs
sbb
xor
adc
cmp
in
xorl
pusha
test
mov
cmp
test
mov
push
mov
out
iret
mov
imul
push
js
aas
scas
fsts
test
inc
sbb
cmp
mov
lret
out
push
or
inc
iret
fucomip
scas
lea
add
pop
mov
es
not
pop
out
ret
js
sub
xchg
xchg
inc
jne
mov
loop
inc
pushf
iret
push
or
je
inc
cld
sbb
pop
cmp
jne
mov
mov
out
jno
mov
jge
and
lock
mov
and
pop
cli
pmovmskb
mov
ret
out
adc
push
rcr
xchg
rolb
cli
test
rolb
push
mov
or
sub
daa
pop
adc
popf
into
outsl
mov
dec
jg
mov
or
jns
movsb
pop
mov
sub
loop
sahf
repnz
add
cmc
imul
mov
ss
incb
jo
out
jae
adc
jmp
roll
xchg
xor
push
dec
sahf
arpl
xor
loope
mov
add
inc
sub
loope
or
outsl
push
in
ret
stos
daa
cmp
fstl
call
jl
or
pop
mov
and
mov
mov
sarl
scas
std
xchg
inc
or
sbb
pop
mov
js
sub
and
xchg
or
mov
lea
arpl
dec
nop
loopne
enter
push
adc
jp
sbb
adc
in
data16
test
lds
jb
xor
or
mov
mov
mov
jge
pavgw
push
hlt
repnz
test
mov
mov
xlat
int
pop
and
fidivl
mov
mov
mov
xor
xlat
jbe
mov
mov
xchg
jnp
inc
aaa
fnstcw
inc
xor
push
sbb
mov
add
xchg
fidivrs
pop
jp
pop
xor
loopne
shl
les
sbb
xchg
lret
mov
pop
pop
orl
push
icebp
test
int
addb
insb
hlt
rol
or
ror
adc
xchg
xchg
or
test
and
add
inc
jne
loopne
lret
repnz
stos
xchg
add
orb
cltd
idivl
lahf
pop
pop
mov
in
push
ret
popf
aam
adc
jle
mov
mov
mov
into
push
xlat
lods
pop
push
popa
out
add
inc
fstpt
sub
out
clc
or
repnz
xor
push
leave
jo
push
adc
dec
inc
cmc
pop
mov
cmp
push
adc
mov
xlat
sbb
rorb
gs
push
shll
cld
fs
adc
cld
mov
lcall
orl
lcall
push
imul
lds
js
rclb
lret
mov
addl
push
or
int
imul
inc
dec
test
or
scas
jnp
aas
ljmp
sti
push
les
cmp
mov
mov
enter
and
xor
xor
movl
std
mov
xchg
pop
jo
pop
jo
div
in
outsb
scas
mov
std
jnp
push
xchg
jge
mov
push
cmp
lea
xchg
outsb
push
stc
negl
sbb
adc
mov
mov
cltd
mov
and
cmp
lods
xchg
sub
jbe
sbb
sbb
adc
into
mov
in
daa
push
cmp
push
leave
fnstsw
in
and
cwtl
in
cmp
inc
shlb
mov
clc
outsl
repz
loopne
movsl
pushf
mov
inc
fistl
shl
les
mov
scas
pop
mov
and
or
mov
cmp
addr16
enter
add
cld
add
daa
jg
aad
sbb
gs
in
sbb
dec
js
jns
sub
addr16
xor
hlt
out
neg
aas
sbb
dec
and
das
jle
leave
fisubrs
ds
cwtl
sub
jno
add
sbb
push
mov
sub
sbb
cmpl
pop
js
dec
mov
push
pusha
mov
cli
enter
xchg
imul
xor
mov
std
cmp
inc
mov
cs
sub
into
rorl
mov
push
sbb
cwtl
ss
jg
push
movb
lods
jae
loop
sub
mov
loop
enter
cmp
das
mov
in
cmpsb
shrb
xor
mov
mov
jb
pop
mov
dec
rclb
or
ja
add
adc
sbb
pop
and
xor
pop
mov
mov
adc
scas
cmp
sti
lds
fwait
je
std
in
dec
mov
hlt
dec
jge
push
cmpsl
add
dec
in
jl
rcrb
popf
test
lods
fcmovnbe
lea
shrl
aam
and
popf
pusha
nop
in
push
stc
jge
jns,pn
xor
adc
aaa
mov
je
lcall
in
aas
int3
cmp
or
por
sbb
daa
in
push
add
imul
sub
mov
ret
hlt
cmpsb
adc
xor
repz
iret
dec
jne
int
insb
adc
cmpsl
out
fldenv
les
or
aad
ds
push
mov
xchg
jl
cmp
add
insl
and
test
rcrl
movsl
jmp
dec
mov
dec
nop
lea
outsb
outsb
fwait
push
cmp
sarl
repz
lock
jg
pop
ret
aam
ds
pop
cltd
out
xchg
test
lods
pushf
lret
push
adcl
fisubl
add
and
or
fwait
xorl
lea
gs
adc
out
sbb
jnp
mov
divb
inc
pop
cld
cmc
pop
roll
push
popa
inc
mov
xchg
mov
dec
push
cs
dec
xorl
mov
frstor
xchg
ret
ss
jne
orb
xchg
scas
hlt
inc
mov
adcb
cmp
mov
or
mov
insl
stos
add
insb
push
jge
cld
fwait
in
fsubrs
mov
jecxz
rorb
pop
inc
xchg
mov
insl
enter
pop
js
cld
cmp
pop
into
add
addr16
mov
mov
cmp
adc
mov
add
mov
cmpsl
inc
mov
cmpsl
insl
mov
or
outsb
push
stos
push
push
pop
xor
mov
decl
push
and
xor
fsubl
xlat
mov
fsub
cmp
sub
mov
mov
xchg
mov
add
ljmp
mov
in
out
cmp
xor
mov
out
dec
pop
bound
push
mov
into
dec
shlb
lahf
sarb
lods
xchg
cmc
or
mov
jp
jmp
inc
push
xchg
sbb
inc
jl
xchg
pop
dec
cmp
fucomi
or
xor
inc
cmpsl
fwait
sbb
sbb
fcomps
mov
outsl
sbbb
fdivrl
cmp
xor
inc
xor
adc
push
outsl
lock
fildl
lret
xlat
mov
inc
ja
ss
lds
jl
les
mov
out
push
mov
popf
mov
mov
js
popf
sar
addb
orl
and
hlt
fwait
jo
in
in
ja
fldt
aaa
jnp
insl
leave
sti
fwait
ja
shrb
cmp
lret
sub
cmpsb
lds
bound
shl
popf
movsb
dec
shlb
pop
ret
jmp
insl
dec
sub
int3
adc
mov
mov
adc
arpl
data16
stos
add
outsb
xchg
pop
stos
sub
sbb
sbb
cld
lahf
jbe
jbe
xor
cmc
lcall
or
and
mov
inc
ret
or
inc
arpl
pusha
ds
fstl
arpl
outsl
lcall
out
nop
nop
dec
xchg
enter
dec
aaa
psubq
cmp
xor
fwait
shl
stc
popf
push
mov
scas
xor
int3
sbb
out
pusha
sbb
mov
dec
popf
std
jbe
xchg
mov
shrl
xchg
mov
mov
adc
jae
mov
cmp
mov
in
cmp
sub
ret
mov
das
jecxz
cld
add
outsl
pop
fsts
inc
ds
aaa
ja
sub
stos
fnstenv
test
or
mov
push
lock
pop
jmp
outsb
sub
and
xchg
sub
jo
push
cmp
jp
and
xor
sar
std
pop
and
or
clc
push
inc
mov
aaa
xchg
jg
leave
or
in
and
jno
adc
adc
jnp
cmpsb
aaa
push
imulb
inc
or
xor
repnz
nop
sub
in
jge
loopne
cmpsb
pop
adc
mov
push
fbstp
inc
xlat
add
scas
insl
lock
inc
outsl
notl
loopne
sarb
push
lahf
arpl
lahf
mov
repnz
fdivrp
xor
mov
and
loopne
repnz
daa
loopne
mov
or
pop
sti
dec
inc
mov
pop
push
stos
jl
test
add
and
and
test
pushf
cmpsb
add
fiadds
int3
jnp
daa
xor
aam
insb
hlt
add
popf
mov
pop
test
fistps
mov
sub
xor
leave
add
dec
sub
cmc
add
xor
sahf
pop
jp
dec
cwtl
mov
inc
fcmovb
mov
les
imul
cmpsb
mov
dec
sti
inc
mov
pop
sbb
xchg
xlat
and
jecxz
cmp
in
and
inc
imul
mov
cmpsl
lea
lret
test
jo
test
mov
add
push
xlat
and
iret
imul
imul
shll
adcl
mov
data16
inc
or
mov
jnp
sbb
sti
dec
xor
mov
arpl
out
jae
imull
lds
or
xchg
sahf
pop
aaa
movsb
xor
sbb
pusha
insb
daa
popa
jns
fbld
jg
fstl
mov
sbb
cmp
pushf
jg
mov
push
jg
fwait
imul
jle
inc
fdivr
fisubl
insl
divl
pop
cltd
push
jno
jle
jle
and
ret
mov
fiaddl
jmp
ljmp
cld
or
lds
jno
pop
and
das
xchg
out
das
xor
fwait
decb
out
rclb
fstpt
out
push
fwait
test
xor
pop
push
in
neg
cmp
inc
mov
jp
jmp
adc
movsl
mov
lahf
jne
shrb
sbb
xchg
and
daa
cmp
pop
insb
pop
xchg
xchg
or
test
cmpsl
add
push
pushf
xor
scas
imul
fmuls
pop
aas
es
movsl
imul
sub
stc
mov
bound
push
or
insl
and
idivl
sub
repnz
xor
jg
push
daa
insl
xor
mov
into
xor
leave
fildll
sbb
mov
int
enter
movsl
pop
cld
popf
das
or
mov
mov
in
aad
lcall
in
sbb
gs
jae
jno
scas
shrl
pop
xchg
xchg
icebp
into
push
fwait
and
sub
dec
pop
adc
xor
subl
jo
push
and
leave
adc
mov
sbb
sub
orb
push
fcmovnbe
xor
xchg
test
push
inc
cld
xchg
xchg
pop
popa
sub
or
mov
mov
mov
cmp
xor
xorl
flds
jl
pmaddwd
in
inc
pop
push
mov
sbb
aas
push
sub
imul
pop
shll
xorb
mov
adc
scas
and
mov
and
push
push
std
mov
stos
mov
and
mov
or
cmp
dec
aam
and
sarb
mov
stos
insl
in
xor
add
inc
enter
repnz
or
movsb
pop
ljmp
orl
xor
mov
push
dec
shrl
pop
jne
pop
lcall
cmp
fimuls
inc
lahf
push
mov
lds
pusha
lds
and
psrad
jle
adc
aad
mov
dec
mov
add
iret
cmp
cld
es
in
lods
xchg
cwtl
mov
mov
pop
pop
mov
cs
imul
sbb
mov
ret
rcl
movsb
cld
loop
rclb
push
sub
sbbl
addr16
call
inc
or
imul
std
jno
aad
pop
cmpsb
mov
stc
xchg
es
push
cmp
and
dec
js
js
cmpsb
je
sahf
int
pop
jb
fnop
stc
sub
cmp
mov
iret
jns
aam
xchg
ds
xchg
fdivr
jle
push
mov
incb
mov
sbb
rcr
xchg
enter
mov
push
test
clc
int3
in
jg
mov
sub
mov
ss
ffreep
and
xor
lods
or
aad
sbb
cmpsb
fidivl
cli
fwait
xor
stos
or
shrb
out
je
jo
loope
stos
mov
cvtps2pd
mov
inc
sbb
fcompl
add
cmpsb
les
add
add
fwait
cmp
movsl
and
xor
add
pop
push
repz
ja
data16
je
popa
sbb
push
pop
out
push
push
imul
ljmp
or
mov
outsb
lds
cld
out
mov
add
test
or
in
or
out
push
lea
out
lds
mov
xchg
mov
sbb
aas
sub
aad
inc
out
cmp
mov
shlb
jnp
es
jbe
xchg
adc
and
add
xlat
push
fdivl
push
mov
out
enter
mov
and
cmp
scas
mov
in
jg
xorl
mov
js
rolb
rorb
inc
mov
lret
sbb
ret
add
push
jnp
lahf
test
push
repnz
push
pop
loope
pop
or
or
cmp
mov
mov
mov
outsl
xor
ret
xchg
jo
sub
lea
inc
push
pop
push
jp
cltd
mov
sbb
roll
add
jmp
lods
mov
inc
xor
mov
mov
sti
cmp
pop
inc
xchg
arpl
shlb
jns
mov
sar
push
mov
xchg
sti
jle
cmp
mov
inc
out
dec
fcomps
cmp
outsl
stos
inc
jge
push
push
pop
push
add
lods
jg
stos
sarb
loopne
cmpsl
inc
push
dec
mov
push
cli
inc
jno
fcomps
push
mov
mov
add
in
in
mov
lds
xchg
stos
mov
test
push
fs
mov
and
ret
jae
ljmp
push
mov
dec
and
jle
es
dec
xchg
mov
lcall
and
data16
sarl
mov
repz
arpl
sbbl
jae
mov
fwait
stos
push
xchg
rorl
fs
loop
push
mov
pop
sbb
call
cmp
jmp
pop
pop
lods
xlat
pop
roll
loop
xchg
stos
pusha
push
and
pop
aaa
repnz
std
adc
int3
dec
xlat
into
dec
sbb
int
lods
shrl
push
outsl
sub
jno
inc
xor
shlb
or
push
mov
mov
push
mov
push
cmc
jae
cmc
pop
xchg
call
sbb
mov
rclb
and
in
xchg
jp
xchg
aaa
xchg
dec
mov
xor
popa
out
icebp
xlat
bound
stc
add
mov
fcomip
mov
insb
ds
jbe
or
cmpsb
popw
outsl
mov
addr16
sar
inc
cmp
dec
jbe
push
cmp
xor
jmp
xor
xchg
lahf
add
add
je
mov
or
xor
shr
mov
hlt
test
jo
inc
cmp
xor
out
test
loopne
fbstp
js
aaa
adc
or
adc
scas
mov
fwait
std
mov
fsubs
into
push
int3
push
mov
pop
mov
mov
pop
out
movsl
xchg
cmpsb
add
dec
mov
lahf
mov
adc
mov
cmc
xchg
les
push
shrl
movsl
xchg
xchg
std
jecxz
pop
insb
or
icebp
mov
lods
pop
add
rcl
fwait
iret
lcall
test
dec
mov
sbb
dec
stc
rolb
jp
jl
jmp
loopne
mov
dec
shll
repnz
lock
lea
mov
fdivrs
inc
cmovle
out
mov
fists
push
pop
or
data16
clc
dec
mov
mov
jns
popa
jmp
cli
shll
mov
stos
or
push
cltd
cmp
jne
xchg
cli
fmull
outsl
bound
test
xchg
data16
pushl
xchg
cmp
sbbl
sub
add
movsl
push
mov
and
xchg
dec
jecxz
fdivrs
xchg
enter
shll
sbb
xchg
cmc
xor
sbbl
sbb
jl
cmpb
in
call
inc
xor
shl
pop
mov
insb
dec
jmp
mov
sti
inc
shlb
pop
jne
xlat
icebp
jae
jg
stos
das
pop
sub
jp
call
lock
rorl
rcrl
in
mov
inc
pop
lods
mov
mov
pushl
fadds
push
fs
out
std
xor
popa
dec
pop
ljmp
movsb
les
sti
ja
xchg
mov
mov
mov
mov
pushf
cwtl
repz
addl
sub
push
xchg
jmp
ds
add
or
add
nop
dec
jbe
sbb
xor
xchg
mov
popf
std
pop
push
data16
pushf
out
mov
cmpsl
addr16
aad
fadds
inc
stos
xlat
in
syscall
sbb
fildll
test
jnp
add
shr
mov
int
cwtl
add
pusha
movsl
lea
xor
sub
push
cmp
cwtl
gs
arpl
inc
mov
fisubrl
sbb
adc
nop
loopne
dec
or
jle
mov
negb
pop
adc
and
in
add
mov
in
stos
mov
sub
or
leave
dec
jecxz
push
lcall
test
jnp
scas
cmpl
movsb
adc
repz
xlat
push
les
into
and
mov
mov
push
outsb
in
sbb
movsl
fprem
jns
rcll
mov
jle
mov
mov
jo
inc
cmp
sbb
or
outsl
addr16
jns
cmp
push
xor
adc
and
lds
iret
xor
jae
add
out
or
and
dec
mov
pop
out
or
out
cmpsl
cltd
rcr
or
out
cmpsl
cltd
rcr
lds
mov
cltd
inc
jo
jl
ret
fisttps
jno
in
adc
adc
pushf
adc
scas
cmp
movsl
out
lret
imul
adc
fists
lods
or
sarl
push
pop
adcl
cmc
sarb
sbb
popf
sub
mov
inc
mov
push
dec
dec
lahf
mov
mov
jnp
mov
xor
add
aaa
aas
inc
data16
xchg
out
cmpsb
and
lahf
or
cmp
int3
mov
jbe
add
sub
or
lock
scas
into
out
sub
pop
insb
inc
fwait
js
xor
push
out
fists
jp
mov
aas
popf
add
pop
js
dec
mov
jmp
sub
mov
push
inc
sub
and
xor
mov
andb
or
decl
pusha
sub
and
stos
xlat
lock
cmpsl
cmp
outsl
ret
pop
jle
adc
push
rcrl
fisttps
push
or
xor
iret
ret
insb
fptan
lcall
inc
inc
mov
lock
ret
or
xchg
jnp
xor
scas
xchg
enter
out
nop
jo
mov
das
pop
jl
mov
lock
inc
sbb
inc
lret
jmp
ffreep
insl
in
mov
inc
movsb
sub
nop
and
jne
stos
jp
rcrb
nop
cmp
or
push
xchg
sbb
or
pop
xlat
scas
subl
movsl
adc
scas
dec
xor
ds
push
and
addb
push
add
das
fcmovne
sub
jle
xchg
es
lods
scas
ja
sbb
int3
lret
or
xor
cmc
xchg
cmc
inc
repz
rolb
in
xor
add
cs
mov
lock
adc
shll
push
movsl
xchg
xchg
fbld
pusha
adc
mov
mov
push
jge,pt
xlat
aaa
in
imul
ret
push
or
sub
or
movsb
popf
iret
sti
ljmp
outsb
call
dec
loope
jno
pop
xor
push
xlat
ss
adc
xchg
push
adc
add
ljmp
jp
andl
data16
insb
test
jl
mov
fs
fs
or
add
shl
cltd
int3
and
inc
jecxz
lea
xchg
sbb
xor
jb
xchg
pushf
mov
hlt
bound
pop
inc
inc
add
pushf
testl
jp
mov
xchg
and
mov
test
lds
iret
insl
or
sti
inc
sbb
or
jns
loop
inc
fadds
sub
lds
dec
pop
cmp
and
insl
cmp
int3
test
mov
iret
mov
not
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
mov
jl
addl
add
adc
cld
or
mov
xchg
fsubrs
scas
jnp
sbb
or
out
mov
inc
lods
and
lret
push
push
rol
mov
push
ja
add
out
or
push
sbb
jbe
jb
hlt
fwait
mov
pop
xor
std
out
scas
rorb
js
icebp
jg
inc
pop
in
or
adcb
das
into
sahf
clc
frndint
or
xor
xchg
inc
leave
push
or
stos
clc
fists
jns
dec
push
test
insl
push
adc
mov
jns
outsl
xchg
sub
mov
lret
dec
push
and
cmp
push
pushf
adc
repz
mov
loope
jge
pop
lea
xor
fisubrs
sbb
push
popa
data16
std
or
stc
pop
sub
mov
test
mov
cld
sbb
scas
xlat
jge
stos
and
mov
mov
xor
into
jae
cmpsl
ljmp
or
repz
sahf
xchg
enter
inc
sub
pop
jp
nop
orb
test
aad
pop
mov
and
into
sarl
cmp
fsubr
imul
aam
dec
xchg
sbb
es
xchg
adc
cmp
inc
xor
lret
insl
sbb
push
sub
fldt
jbe
iret
lret
inc
or
and
fcoms
mov
pusha
adc
stos
jno
negb
sarl
iret
dec
jl
hlt
inc
in
int3
loop
jbe
cli
mov
dec
sbb
shll
push
sub
int
sub
sub
lret
and
inc
ja
push
loop
shll
ror
sarl
ficompl
pop
add
inc
add
push
cmpsl
dec
daa
test
push
inc
sahf
ljmp
jb
mov
stos
test
xchg
mov
pusha
xor
scas
adc
movl
fadds
mov
lock
fsub
and
jne
pop
mov
pop
push
or
mov
clc
bound
mov
loope
ret
imul
mov
stos
addb
lods
and
data16
xchg
popa
into
mov
mov
and
bnd
sub
jnp
push
js
jl
aad
add
jecxz
popl
mov
faddl
dec
das
push
inc
push
orb
shrb
xchg
inc
mov
push
popf
push
movl
cmc
into
pop
in
xchg
xor
ljmp
inc
pop
jge
or
sbb
lods
and
test
xor
or
aam
pop
in
ds
sahf
fsts
xchg
sbb
jae
xchg
fdivrs
mov
mov
out
scas
pop
push
ds
inc
mov
mov
push
stos
add
sbb
lahf
mov
inc
jle
lret
mov
dec
push
pop
push
push
loop
sti
outsl
adc
arpl
pop
push
outsb
andl
movb
shll
fistps
in
jg
jg
push
add
xchg
in
xchg
aam
mov
xor
adc
imul
lret
data16
test
inc
push
xchg
pop
inc
clc
mov
push
dec
fwait
sbb
test
mov
jne
and
int3
sub
pop
xchg
orl
push
xor
dec
andl
add
lds
adc
out
je
mov
mov
jae
inc
jbe
inc
dec
dec
pop
pop
add
adc
dec
out
jmp
pop
pop
lods
xchg
aaa
jecxz
cli
pop
nop
cmp
popa
cltd
inc
mov
adc
iret
sbb
jno
retw
out
push
dec
inc
stos
push
xchg
jae
idiv
stc
mov
fcmovu
sbb
cmc
addr16
roll
adc
cltd
sub
mov
movsb
test
insl
pop
sahf
movsb
push
pushf
sbb
clc
roll
or
shlb
sar
ja
scas
mov
and
lret
subl
scas
inc
sbb
cmp
xorl
cmp
outsb
cmpsb
inc
ret
cmp
or
test
cmp
int
dec
mov
out
xchg
cmpsl
dec
dec
mov
inc
pushf
cld
push
fnsave
sub
sub
cli
daa
fs
cwtl
push
repnz
xchg
stc
sti
sbb
lret
mov
lret
jbe
push
sub
xor
mov
cmpsl
xchg
clc
pop
loope
call
push
push
cmpsl
sub
dec
xor
sti
clc
lret
push
rorl
and
push
xor
pop
mov
into
lock
inc
pop
dec
mov
xor
inc
test
enter
push
add
ss
and
fsubl
mov
jg
pushl
mov
lock
popf
js
mov
scas
in
adc
hlt
decl
jo
inc
in
imul
pop
aad
cmp
aaa
repnz
sub
call
xchg
push
xor
test
mov
sub
adc
test
out
cmc
push
sbb
jne
push
loope
je
push
cld
inc
testl
sti
shll
cld
mov
xchg
repnz
fwait
sub
push
add
notb
lcall
fs
mov
jl
aas
push
hlt
sti
and
add
test
mov
jmp
mov
jg
jno
hlt
stc
sbb
inc
inc
and
outsb
sbb
xor
cmp
out
sbb
push
lea
inc
ficomps
xor
out
out
inc
jl
xor
insb
es
mov
pop
loope
mov
mov
push
push
ret
pop
fdivs
lret
dec
cmp
pop
cmp
out
decl
imul
sub
and
mov
in
mov
call
filds
or
ret
pop
stos
push
stc
cmp
das
popa
sti
cwtl
add
mov
cmp
movsb
in
das
add
rcrl
cwtl
mov
and
xor
pop
lods
sub
out
js
xchg
inc
sub
mov
imul
loop
pop
adc
pop
into
jge
into
aas
imul
and
mov
pop
pop
sub
pop
and
fidivrs
xlat
jecxz
out
insl
xchg
nop
adc
lock
loop
xorl
and
and
shll
test
jns
dec
and
xchg
int3
xor
int3
or
push
adc
jp
stos
jae
cmp
cwtl
mov
scas
scas
roll
pop
dec
aam
mov
mov
insl
bound
rcrb
mov
jecxz
cli
mov
pop
pop
sysexit
mov
sbb
sbb
loopne
xor
mov
pop
aas
out
push
mov
dec
sbb
sbb
outsb
mov
fstpl
into
xchg
or
les
in
outsb
xor
mov
cmp
sbb
pop
scas
out
jg
loopne
test
mov
les
mov
sbb
add
sub
mov
clc
repnz
dec
xor
imul
insl
or
adc
lds
icebp
fldl
jbe
dec
xor
push
aam
lret
popa
fdivrp
add
pushf
ret
ss
cli
lret
addr16
or
adc
pusha
mov
sub
bswap
rorb
ret
gs
sbb
add
xchg
push
addr16
lret
stos
mov
sti
push
xchg
push
popa
movsb
in
inc
push
jmp
dec
imul
fbld
aam
cs
rcrb
fwait
nop
cmp
or
jge
aad
pusha
mov
mov
call
cmp
dec
cli
xor
addr16
inc
mov
add
jno
mov
jp
mov
add
scas
jbe
xchg
fimuls
out
imul
xchg
dec
andb
xor
icebp
mov
mov
pop
adc
fbld
dec
jns
jbe
mov
add
decl
cmpb
add
icebp
ss
xchg
idivl
mov
aas
neg
pop
adc
cwtl
imul
mov
push
pushf
popa
rclb
adc
cld
xor
fdivs
rcll
sbb
mov
mov
push
push
icebp
mov
add
inc
cltd
cmpxchg
stos
rorl
scas
int
std
mov
loopne
push
arpl
data16
shr
pop
aaa
jl
jb
jp
lea
decl
mov
mov
xor
sbb
sub
mov
push
ret
js
popa
std
xorl
ja
pop
cld
sub
gs
fistpl
loopne
inc
js
mov
xor
fs
jns
dec
push
shr
mov
or
into
fnsave
sbb
clc
mov
loop
call
lret
inc
add
pop
xor
push
mov
pop
dec
rclb
ds
dec
push
in
pop
scas
sub
pop
mov
lcall
jbe
jo
add
jl
mulb
subb
fnsave
loope
adc
imul
rcll
cmp
cmpsl
std
xor
lahf
leave
addr16
mov
mov
ljmp
add
popf
xor
enter
push
lods
popa
minps
aas
mov
mov
mov
sub
or
in
or
bound
mov
ds
sahf
lcall
xor
rolb
sub
fcomp
adcl
shrl
cmpsb
adc
loope
movsl
jp
cmp
lods
jo
push
ret
xorb
pop
inc
and
push
test
xchg
es
fwait
and
inc
dec
and
mov
xchg
or
jge
jae
stos
insl
in
push
out
movsl
and
out
sub
fiaddl
outsl
lahf
int
js
add
bswap
fildl
mov
enter
dec
fidivs
inc
jnp
jmp
je
arpl
ficompl
lret
mov
xor
push
pop
ds
mov
ret
mov
scas
shlb
andb
sbb
adc
outsb
out
pop
dec
imul
shl
pop
fldenv
pushl
movsb
and
lods
pop
jne
adc
mov
cmp
and
push
pop
sub
adc
mov
cwtl
out
stos
mov
cmp
cmp
insl
mov
dec
xchg
sbb
cld
out
pop
push
push
xchg
sub
mov
jo
in
and
mov
aas
xchg
push
stos
mov
jnp
add
sbb
sbbl
and
cs
repnz
pop
popf
mov
push
inc
cmp
inc
cmp
jae
push
out
mov
and
mov
call
movnti
inc
cltd
stos
adc
lods
mov
push
jge
notl
scas
xlat
insl
push
xor
pop
into
push
pushf
or
dec
adc
cmp
sub
nop
push
jl
rolb
mov
xchg
cmp
sbb
or
xchg
jno
je
addl
sub
test
jbe
test
cmc
mov
add
repnz
push
dec
cwtl
sub
iret
mov
aam
out
add
push
jnp
push
rcl
cmp
cmp
inc
sti
stc
jne
jmp
pop
std
sti
push
inc
xchg
inc
aaa
or
loope
data16
pop
jbe
pop
mov
pop
push
jg
inc
repnz
add
shl
sar
xchg
mov
fdivrs
es
ljmp
cmc
push
pop
mov
lock
cmp
lea
xchg
sub
mov
mov
cmp
or
push
fs
sub
jle
aas
inc
sub
xchg
arpl
unpckhps
push
inc
out
and
push
in
insb
call
notb
out
xchg
mov
or
or
flds
insb
fcmovnu
test
and
dec
sub
mov
or
shl
mov
sub
push
or
add
mov
ss
in
loop
jo
dec
cwtl
mov
inc
pusha
sub
lock
push
fsubrp
fwait
xchg
lret
ret
rcrl
inc
fmull
or
cltd
and
adc
push
leave
mov
mov
fwait
inc
je
push
shr
fs
fcmovnbe
mov
sub
pop
loop
js
mov
lahf
outsl
dec
push
das
pop
xchg
jae
fcompl
loopne
lods
fisttps
lret
jp
add
ss
cmpsb
inc
call
and
fcmovu
add
sub
nop
fmuls
xor
fimuls
cmpsl
cmp
fldenv
es
pop
adc
psubd
xlat
mov
push
into
xlat
mov
dec
mov
mov
jecxz
push
xor
inc
mov
test
mov
sarb
je
cli
jbe
nop
mov
jp
cmpsb
movsb
or
shrb
das
mov
jo
push
adcb
pop
adc
lret
ss
das
cmpsb
jo
iret
lock
notl
adc
sbb
repz
sbb
adc
jo
pop
sub
mov
mov
xchg
adc
adc
mov
mov
inc
cmpsb
incb
out
orl
cmp
rorb
jnp
lods
movsb
inc
cmpsb
mov
mov
inc
add
outsl
xchg
movsb
cmp
adc
cmpsb
and
ljmp
dec
push
push
scas
gs
xor
mov
sbb
mov
xchg
out
fcoml
push
sti
dec
inc
add
mov
and
cli
jbe
test
ds
int3
sbb
push
sbb
adc
mov
jcxz
mov
imull
jo
add
sub
push
add
sub
adc
inc
mov
pop
cld
jecxz
sub
or
and
sub
lods
bound
jl
mov
ret
out
sub
inc
fisttpll
push
mov
add
adc
xchg
sti
xchg
imul
jg
inc
sub
in
bound
add
jmp
sbb
jg
mulb
loop
sbb
xchg
cmp
lret
scas
clc
loop
out
push
pushf
or
jp
xor
inc
stos
not
enter
popf
ljmp
imul
movsb
xor
jle
dec
outsb
ret
pushf
cwtl
push
std
in
cltd
push
arpl
jl
or
or
call
cs
xor
imul
adc
test
mov
xchg
add
loope
adc
mov
ret
icebp
das
int3
inc
int3
jecxz
flds
imul
mov
ljmp
push
sbb
lods
mov
in
clc
jno
dec
mov
sti
lock
push
dec
aam
pop
subb
scas
jb
out
sbb
jp
int3
int
popf
sahf
jne
enter
push
fdivrl
out
fidivrl
orb
cmp
loope
mov
mov
clc
jbe
scas
test
mov
mov
into
cltd
jecxz
sub
mov
pushf
xlat
aam
mov
icebp
cmpsl
repnz
push
into
pop
dec
adc
movhps
push
stc
inc
lods
push
insb
lcall
cmpsl
mov
push
or
fcmovnu
jg
jge
or
int
in
mov
ja
es
je
adc
pop
dec
leave
ja
mov
add
and
fs
pushf
mov
inc
jb
add
inc
movsl
cltd
push
fdivs
cmc
jl
xchg
xor
sub
fs
and
xor
addb
fwait
pop
cmp
add
mov
adcl
sbb
das
outsb
xchg
sbb
push
pop
jno
scas
mov
clc
xor
mov
popa
ja
imul
into
xlat
andb
mov
loopne
fidivrl
jmp
inc
sub
bound
lods
or
out
setns
aam
xor
sub
sbb
into
into
fs
cmc
fldcw
xchg
jp
push
dec
pusha
test
lds
push
inc
jg
inc
sub
push
xor
and
mov
xchg
pop
test
jle
pop
xchg
and
das
cmp
xchg
mov
push
jne
mov
iret
repz
dec
shll
mov
js
xor
cmc
cmpsb
lret
jae
jmp
cmc
fists
dec
sub
or
pop
jle
mov
rclb
in
jnp
shrb
pop
sbb
push
cmp
cld
mov
daa
mov
test
sub
fimuls
inc
jnp
mov
push
pusha
jbe
flds
inc
sub
inc
mov
sub
or
mov
and
ja
rclb
jnp
and
and
xor
decb
mov
ficoml
adcb
test
lcall
or
mov
adc
ret
fisttpll
fwait
mov
rorb
pop
mov
push
cmp
outsl
daa
shll
lds
imul
fs
imul
pop
stos
or
pop
xchg
xchg
leave
popf
pushf
cmp
jae
mov
pop
push
mov
scas
in
adc
jmp
lods
fldt
cmp
and
pop
or
push
inc
ljmp
mov
insb
leave
ja
jp
shlb
data16
mov
mov
dec
pop
idiv
add
aam
inc
pop
lcall
inc
pop
ljmp
cmp
in
dec
pop
or
sub
int3
rclb
jnp
ljmp
mov
mov
mov
pop
mov
lret
mov
cmc
and
andb
aad
fistl
or
or
pop
fcmovne
and
cltd
fcomps
arpl
sbb
push
out
lea
cld
test
push
les
outsb
repz
andb
push
decl
push
stc
stos
inc
out
lods
mov
imul
xor
mov
sbb
xor
test
out
add
or
fadds
sbb
movsb
jg
and
xor
pushf
and
in
push
pop
adc
cli
inc
test
inc
mov
fdivs
mov
loope
pop
mov
iret
sub
push
lahf
into
fdivr
je
push
stos
dec
js
pop
push
sbb
or
sbb
fwait
mov
xchg
ret
pop
sahf
lea
xchg
lcall
mov
fdivl
xor
lds
mov
sbb
adc
lods
sarl
cmp
pop
lea
mov
imul
pop
subl
jo
xchg
arpl
jae
and
decb
sbb
std
in
xor
mov
in
push
sbb
and
adc
and
adc
cmp
sbb
mov
mov
fmul
mov
ret
cld
push
add
aas
sbb
cmc
movaps
sbb
dec
cmp
add
xor
and
mov
mull
je
clc
js
stos
xor
inc
mov
cltd
lret
fwait
xchg
rcll
divb
inc
and
xor
jle
adc
mov
pushf
mov
aad
pop
push
mov
test
inc
add
fildll
in
mov
mov
pushf
movb
int
movsl
inc
pop
mov
pop
popf
dec
xchg
decb
jg
daa
scas
xlat
aad
mov
insl
xchg
popf
bnd
sti
lods
cld
scas
std
pusha
add
out
out
cmp
xchg
push
xchg
daa
fnstsw
fwait
mov
jb
mov
or
add
dec
jb
mov
fnstenv
mov
aaa
dec
repz
orl
xor
cmc
and
sub
dec
insl
sbb
rcll
push
dec
jno
ja
fmul
jns
inc
mov
daa
fdivrs
pop
repnz
pop
xor
shrl
sub
loopne
lea
xlat
and
jns
mov
pop
dec
mov
mov
lods
ret
or
pushl
mov
addr16
in
and
lcall
fwait
sbb
bound
bound
sub
int
add
or
mov
mov
jo
cld
inc
out
inc
sub
jo
pop
jl
xchg
xor
in
in
rcrl
pushf
pop
out
dec
xchg
icebp
xor
push
sub
test
rep
inc
mov
xor
bound
subl
lds
push
sbb
cmp
int3
clc
jl
pop
add
and
sub
aad
cld
or
mov
das
dec
lret
pushf
lcall
push
pop
sbb
push
mov
mov
lods
mov
shrb
lcall
daa
xchg
cld
cmp
pop
stc
xchg
mov
fs
test
testb
pop
xchg
dec
outsb
cmc
pop
lock
lahf
push
popf
add
ret
cmpsb
or
sbb
xlat
cmp
jge
js
jae
pop
dec
lds
mov
icebp
add
mov
xor
aas
loop
hlt
sub
push
pop
xchg
jbe
mov
loope
push
push
enter
mov
out
ficomps
jmp
sar
int
aam
or
scas
and
cmp
div
pop
mov
adc
fdivs
push
add
iret
sbb
nop
jge
dec
sub
lcall
dec
xor
sbb
fistpll
pushf
repz
cwtl
shlb
jmp
pop
sbb
popa
sub
enter
movsl
push
jno
pop
lret
add
call
and
push
or
pop
int
ss
xchg
popf
pop
fnstcw
sub
and
jne
pop
sub
or
cmpsl
cs
js
stc
repz
test
xchg
stc
xchg
sub
addr16
cs
xor
add
cmp
dec
mov
push
push
dec
push
jbe
repz
std
mov
jno
cmp
adc
ds
dec
pop
xchg
nop
or
jle
dec
jl
mov
int
or
ds
xor
push
inc
popf
lods
std
int
pop
dec
xchg
jmp
pop
out
push
xchg
mov
insl
pop
cmp
xchg
push
es
mov
push
call
jnp
rcll
push
pop
fldl
outsb
sub
push
push
cmc
in
pop
add
lds
cmp
xchg
add
push
adc
dec
das
mov
xchg
push
mov
cmp
clc
in
fwait
lret
mov
mov
push
cli
xchg
sbb
cmpsb
mov
repz
push
pop
mov
inc
mov
shlb
dec
in
mov
fisubrs
xchg
push
add
out
lods
test
dec
idivl
repnz
cli
jae
lock
je
push
xchg
or
test
dec
and
fwait
mov
mov
xchg
dec
jle
adc
push
adc
leave
jns
add
dec
sub
inc
cmp
gs
jg
xchg
cmp
xor
pop
xor
jo
mov
aam
mov
je
imul
xchg
loop
cs
jb
or
aas
adc
imulb
je
frstor
inc
add
outsb
popf
std
sbb
sbb
psrlq
test
push
jge
cmpl
push
sbb
in
and
add
lock
or
adc
stc
fucom
adcl
xchg
sbb
cmp
mov
shlb
fbstp
xor
xchg
in
aam
aaa
jecxz
pop
ds
mov
or
mov
out
sbb
pop
dec
stos
inc
rcrl
out
mov
cltd
insb
outsl
jnp
ret
hlt
outsl
dec
push
pop
cld
pop
aam
xor
push
aas
fcmovnbe
xchg
jno
dec
jb
insb
lods
shl
aaa
rdtsc
add
push
popa
aas
test
and
sahf
xchg
xchg
mov
loope
pop
mov
js
mov
jo
inc
sbb
lods
fwait
aam
jmp
out
ss
xor
mov
xchg
sbb
jmp
pop
lods
enter
inc
mov
je
sbb
xchg
push
lea
push
push
jb
lock
cwtl
dec
mulb
push
and
aaa
add
cli
pop
xchg
sub
xor
sub
and
xchg
jns
xchg
addr16
or
fwait
pop
inc
push
in
and
dec
sbb
out
sbb
mov
in
pop
jbe
lret
js
xchg
add
aaa
or
ja
add
xor
add
ret
sub
push
movsb
and
test
rcrl
imul
inc
aam
pop
push
fucom
test
arpl
ja
lahf
jp
sbb
mov
adc
cmpsl
dec
sahf
lods
ljmp
movsb
adc
and
inc
or
leave
out
sti
fwait
pop
pop
out
lret
ds
cmpsb
xchg
mov
sbb
mov
cli
daa
jmp
jecxz
pop
adc
add
gs
fcomps
jecxz
or
rclb
fs
mov
xor
xchg
test
sub
sbb
inc
mov
add
fisubrs
testl
negl
mov
sub
stos
push
lret
mov
sbb
push
push
add
add
inc
mov
sbb
outsb
mov
std
js
mov
mov
insb
aad
mov
dec
pusha
pop
push
inc
subb
add
cli
incl
das
mov
lahf
aas
ds
aam
movsb
cmpl
add
add
sub
lods
movsl
mov
and
mov
xchg
xchg
pusha
adc
scas
shlb
jge
xor
aaa
mov
pushf
std
mov
push
nopl
je
and
adc
push
cmpsl
xchg
icebp
mov
idiv
popf
xchg
imul
mov
sbb
cmp
movd
lahf
pop
loope
mov
mov
add
dec
cmpsb
xchg
or
mov
gs
out
xor
or
arpl
dec
sahf
jnp
aas
jne
xchg
loope
xor
dec
add
mov
adc
jmp
dec
xlat
ja
shll
incl
test
mov
repnz
stc
cli
push
xor
push
jmp
jae
fcoms
stos
xlat
jbe
daa
fistps
mov
sub
clc
push
or
lret
jmp
mov
shll
and
fsubrs
lret
jg
or
push
es
jno
push
ja
sbb
jmp
arpl
fwait
mov
lock
cmp
mov
lock
and
cmp
mov
pop
movsb
fnstsw
xchg
ds
hlt
mov
stc
mov
mov
fistl
in
mov
movsl
outsl
mov
pop
jge
aas
ficomps
pop
cld
and
fmuls
aam
and
mov
fdivrs
sub
testl
clc
dec
ret
aaa
stc
roll
push
dec
mov
mov
fistl
test
sub
aas
sbb
cmp
test
sbbb
push
cs
mov
es
cmpsl
fstps
xor
lods
cld
xlat
add
lret
into
mov
xchg
sub
sti
inc
pop
mov
jle
ret
pop
cs
jbe
or
shlb
dec
cli
sub
inc
aas
add
dec
pop
or
add
data16
repz
roll
cmp
lock
psllq
jae
mov
xchg
xorl
add
into
stc
mov
gs
test
xor
lds
fdiv
lds
sbb
jp
sub
mov
jmp
mov
testl
jmp
aas
movsl
xchg
sbb
inc
mov
mov
xchg
cmpsb
xchg
je
xchg
sbb
dec
fcompl
test
mov
fcmovu
push
push
push
mov
mov
dec
cmp
clc
cmc
ret
xor
pop
stos
ret
pop
stos
xor
out
add
jmpw
push
sbb
jbe
or
dec
pop
add
movsb
scas
inc
jns
sub
mov
jae
ds
sbb
push
pop
xor
in
es
movsl
cmpsl
mov
sbb
sarb
cmp
add
enter
cld
pop
or
push
scas
or
in
cmp
ss
dec
rcrb
test
cltd
xchg
mov
jbe
imul
inc
cmp
movsb
push
out
stos
sub
loopne
lds
or
mov
lahf
filds
aad
dec
mov
adc
lods
sarl
inc
ret
pop
das
xchg
pop
push
out
xchg
nop
or
push
xor
cwtl
test
add
lcall
adc
mov
cltd
push
ds
sub
pushf
push
ret
int3
cltd
insl
push
sahf
js
lcall
and
or
xchg
adc
in
dec
dec
add
mov
or
in
ret
stos
icebp
lods
push
rcr
pop
dec
addr16
cmpsb
or
inc
outsb
std
mov
adc
jp
movsl
popf
imul
or
mov
dec
mov
fstpl
hlt
ret
mov
pop
or
add
dec
shll
jnp
and
mov
push
fwait
rcrb
imul
xchg
je
in
in
add
jns
mov
repnz
iret
incb
push
mov
stos
frstor
adcb
mov
dec
inc
dec
add
inc
xor
aaa
pop
or
mov
jecxz
cmp
imul
popw
cmp
mov
xchg
les
lret
push
ss
sbb
mov
addr16
out
jo
aam
std
imul
mov
call
daa
push
jge
sub
mov
les
jge
xchg
cmc
cmpsb
inc
xor
hlt
add
xchg
mov
cmp
nop
repz
lock
aas
mov
int3
paddb
jbe
and
mov
fs
cmp
sbb
les
add
mov
xchg
mov
out
rcll
push
rcrl
jge
pop
add
notl
imul
aad
mov
ficoms
jae
cmp
dec
push
adc
shll
xor
in
int3
jns
rol
or
cmp
lret
and
int
or
sbb
xorb
clc
cmpsb
insb
scas
xor
dec
cmpsb
test
inc
lea
xchg
cli
pop
stc
mov
rolb
mov
pushl
sahf
inc
xor
push
dec
xor
fisubrs
mov
enter
cltd
icebp
sub
test
jb
pop
xor
push
les
jge
fdivrl
lock
push
stos
adc
push
xchg
fcomip
xchg
add
adc
popf
rolb
mov
cwtl
rcr
jno
add
jae
hlt
mov
pushf
loop
lret
cld
lock
mov
pop
cmp
mov
lea
inc
push
insb
movb
lock
mov
popa
sbb
push
dec
inc
mov
popf
jecxz
out
clc
cwtl
and
xor
sub
sbbb
mov
cmp
push
jne
push
pop
xorl
pop
jb
cmpsl
lahf
inc
pop
incl
scas
push
out
addr16
movsl
popf
rorb
cltd
push
clc
push
add
pop
or
lock
mov
shll
pusha
gs
cmp
dec
mov
mov
add
dec
sbb
das
mov
aam
and
cmp
nop
xor
xrelease
int3
dec
or
pop
jo
push
lret
bound
cmp
inc
push
out
daa
in
fists
xchg
dec
fs
xchg
and
push
and
lds
js
dec
cmp
rcrl
pop
movsb
dec
mov
jmp
leave
cmp
out
lods
in
pop
xchg
xor
dec
xor
imul
mov
cld
inc
jbe
ja,pt
sub
pop
lret
push
jl
or
pop
daa
repz
jecxz
into
dec
dec
leave
pop
mov
jne
popf
cmp
ss
loopne
dec
in
loopne
sbb
mov
call
stc
mov
sub
leave
sub
test
cmp
imul
popf
xor
or
jmp
outsl
mov
and
sti
and
sbb
std
aam
addr16
sti
in
out
inc
jno
ja
inc
adc
popa
insl
mov
out
fisubrl
ljmp
add
lcall
adc
jne
aam
icebp
sbb
adc
and
shrb
mov
mov
shll
push
xchg
pop
mov
aam
pop
popf
cmpsb
xchg
mov
pop
loop
mov
push
mov
pop
push
out
inc
dec
pop
aad
leave
lods
sub
mov
push
push
jo
loopne
push
mov
xchg
push
adc
je
pushf
xor
or
test
into
add
rcrb
sub
push
sbb
hlt
icebp
sbb
inc
add
das
adc
hlt
xor
add
jecxz
cltd
cltd
fldt
mov
jo
aad
adc
xor
shl
push
outsl
dec
int
xlat
jmp
cs
lock
lock
scas
sub
xchg
pop
pop
bound
inc
pop
fs
xor
lcall
and
fimuls
xor
jle
repnz
mull
sub
cmpsl
cld
ljmp
mov
mov
adc
out
xchg
in
mov
xor
and
xor
in
jno
js
leave
jg
popf
test
scas
jp
in
aad
inc
lods
pop
iret
push
outsb
push
mov
or
repnz
and
pop
push
mov
cmp
add
cwtl
and
imul
mov
jno
lock
xor
mov
dec
mov
or
inc
test
loop
shr
push
mov
jno
xor
cld
jp
adc
jo
jnp
sbbb
in
lds
cmpsl
xchg
lods
jno
incl
movsl
mov
dec
adc
in
lret
outsl
xchg
xchg
rolb
adc
mov
fwait
stos
mov
mov
clc
xchg
rcrb
and
push
mov
inc
xchg
pop
adc
test
lds
jg
push
pop
adc
ds
jecxz
pushf
dec
jne
mov
arpl
dec
xor
loopne
pop
push
pop
jmp
test
repz
pop
daa
daa
push
inc
imul
mov
inc
sub
movsl
and
gs
gs
jl
arpl
sub
lods
in
cmpsb
mov
jno
mov
mov
mov
rorl
xchg
sarb
cmp
dec
sub
mov
push
mov
or
mov
iret
cmc
cld
sbb
leave
and
xchg
lds
in
std
mov
stc
xchg
push
sub
insb
ret
adc
push
mov
xchg
rolb
and
fadd
xor
sahf
sbb
fstl
dec
dec
xchg
fs
xchg
out
jmp
adc
pop
loop
lcall
ds
and
cmc
xor
lds
lods
mov
xchg
sarb
sub
mov
ss
andb
inc
jl
inc
aam
xchg
stos
stc
call
sti
dec
and
cmpsb
cmp
push
and
xchg
inc
xchg
insl
je
xchg
outsl
cmp
xor
das
roll
and
or
in
in
sub
pop
test
pop
cmp
or
adc
imulb
movsb
ret
dec
dec
cmp
cli
out
or
test
fisubl
sbb
push
add
push
dec
xor
adc
mov
andl
mov
jo,pt
ss
jo
pop
add
cmp
std
sbb
sub
mull
pop
push
jns
iret
fcompl
mov
inc
fdecstp
cmpsl
lcall
pop
pop
std
fmul
mov
pop
xchg
daa
and
orl
in
push
cmpsb
push
jb
cmp
pop
imul
dec
outsl
mov
mov
or
out
xchg
ds
jae
or
lods
pop
stos
xchg
jge
pop
les
cltd
mov
fwait
mul
inc
sbb
lock
ljmp
imul
fmuls
js
loop
pop
test
jmp
push
and
jge
sahf
xchg
out
lods
je
pop
mov
loope
cmpsb
inc
shrb
jmp
gs
leave
push
cmp
enter
stc
cmpsb
test
cmpsb
mov
dec
repz
in
pop
jl
movsl
addr16
negb
aaa
sub
jp
out
nop
cs
xchg
jbe
push
pop
outsb
std
imul
and
jle
mov
push
lds
inc
dec
xchg
jmp
cmc
xchg
mov
das
xchg
push
mov
in
xor
pop
repnz
popa
fnstcw
repnz
aad
adc
mov
xor
jne
mov
enter
test
hlt
xor
or
push
mov
dec
sub
mov
aaa
stos
cmp
xor
or
mov
or
mov
loopne
or
add
push
push
nop
push
xor
pushl
mov
fdiv
cmpb
int
push
mov
mov
xchg
test
push
testb
or
add
iret
ss
xchg
repz
popf
jo
mov
pop
dec
sti
lock
add
xor
popa
lds
jmp
mov
and
dec
mov
mov
dec
je
mov
xchg
loope
add
xchg
popa
hlt
out
jns
cltd
jo
movsl
mov
daa
js
and
cmp
out
aad
cli
mov
mov
lcall
dec
jecxz
push
mov
xchg
lds
lods
cmp
mov
xor
jmp
xchg
iret
enter
mov
push
psubq
daa
mov
repz
lcall
mov
sbbb
sbbl
sbb
test
inc
sub
sbb
and
xlat
jecxz
fstpt
out
ss
xchg
sbb
xchg
mov
insl
push
jbe
xchg
popl
cmp
imull
sbb
xorb
in
scas
repnz
sub
or
jbe
jae
je
gs
das
mov
xor
imul
mov
xor
push
fmulp
shr
clc
xchg
outsl
cmp
lahf
addr16
mov
sbb
dec
aam
mov
adc
xor
xor
movsl
cmp
lods
fmul
jp
xchg
xchg
jg
pop
lds
test
loope
xor
dec
push
mov
enter
subb
or
stc
test
mov
mov
pop
inc
pop
outsb
ret
shlb
orb
aam
enter
pop
leave
pop
push
or
stc
lods
test
dec
test
shll
or
jnp
push
jae
mov
pop
sub
xor
mov
sub
into
adc
ficoms
cmp
lahf
inc
jecxz
cmpsl
push
jmp
out
testl
in
pop
jl
mov
sub
ds
cmc
jnp
fcmovnb
mov
fmuls
cs
gs
jmp
inc
mov
mov
out
cs
nop
movsb
push
cmp
lret
jne
test
cli
int
or
inc
int
aas
mov
stc
ds
or
mov
mov
fimuls
add
ljmp
lods
dec
cmpsb
xor
push
loope
aas
sub
or
shl
mov
ficoms
pop
cli
mov
es
fstpt
sahf
inc
mov
mov
sti
aam
and
dec
inc
inc
push
add
sub
adc
xor
add
js
or
imul
icebp
sbb
jae
enter
xchg
repz
jle
dec
mov
mov
sub
or
mov
inc
in
popf
inc
cld
mov
fs
pop
scas
mov
sbb
mov
push
cltd
inc
or
ffreep
xchg
cmp
mov
pop
xor
test
int
dec
fistpll
inc
cmpsl
inc
rcrl
pop
cmc
rcrl
repz
sbbb
jmp
xchg
pop
xor
inc
sub
aad
das
sub
test
push
dec
jno
enter
sbb
cmovle
dec
daa
sbb
les
and
iret
mov
adc
cltd
repz
inc
addr16
aam
sahf
sbb
or
das
or
fidivrs
and
lcall
aad
mov
jns
shl
mov
cltd
fldl
xor
jg
imul
rol
xchg
adc
cmp
aaa
mov
mov
int3
std
jne
sub
inc
dec
arpl
pop
outsl
jg
mov
les
xchg
or
dec
add
or
inc
shll
std
dec
jb
jge
test
into
fmull
inc
push
push
leave
enter
dec
int3
mov
sahf
xor
sub
cltd
movsl
fisttps
ret
pop
pushw
sub
in
aam
mov
je
lea
orb
ffreep
ret
out
push
jle
arpl
in
mov
add
and
adc
movsl
in
int3
icebp
or
jmp
pop
add
pop
js
std
mov
mov
aad
lds
orl
xor
dec
or
sub
mov
mov
mov
or
lahf
mov
imul
push
pop
mov
movsl
test
xor
dec
add
pop
jl
out
xchg
mov
in
push
iret
sbb
jle
pop
push
inc
pop
call
dec
shll
in
mov
dec
cwtl
pop
xchg
xchg
enter
pop
xchg
pop
nop
stos
lods
fwait
add
add
and
das
loop
scas
insb
mov
push
mov
pop
add
iret
jnp
jnp
dec
mov
mov
sbb
in
add
rcrl
iret
push
stos
outsb
sahf
enter
roll
sub
push
testb
lret
xchg
scas
lea
mov
cmp
aad
fldt
or
popf
fmull
idivl
les
sbb
and
pop
ss
xor
mov
sbb
test
inc
dec
sbb
lods
fucom
sub
aad
int
inc
cmpsl
leave
cmc
and
push
roll
das
roll
sti
clc
fisttpl
mov
mov
cmp
xor
ret
nop
incl
jns
jg
movsb
pop
mov
test
es
push
movsl
incl
cmp
xor
rcr
sub
dec
lahf
rcrl
inc
js
xchg
pop
leave
add
insb
mov
mov
aas
mov
cmp
push
inc
cmpsb
pop
out
roll
adc
aas
and
ret
test
jle
icebp
pop
cmp
lea
adc
pop
test
call
data16
sbb
roll
jb
mov
xchg
mov
pusha
fwait
push
inc
pop
mov
cmpsb
out
pop
sbb
xlat
out
and
out
fwait
rorb
add
jo
fwait
loope
mov
sbb
push
lods
mov
push
rorl
test
faddl
shrl
rorb
outsl
test
dec
adc
dec
test
es
shlb
dec
xchg
gs
mov
mov
cmpl
lods
dec
data16
push
mov
fisttps
out
push
pop
xorl
repz
xor
sub
adc
adc
mov
loop
dec
push
adc
scas
mov
adc
lret
mov
outsl
js
aaa
and
cmovs
pushf
in
mov
inc
sahf
fcoml
int3
adc
pop
cmp
dec
fbld
sbb
xchg
mov
xchg
out
ja
clc
inc
ret
push
in
call
sub
pop
aad
cld
sub
push
jmp
pop
adc
or
and
ss
push
xor
and
pop
ret
enter
scas
cmp
mov
je
lcall
or
addr16
mov
sahf
push
int
cmpb
sets
mov
add
inc
jp
outsb
in
mov
repz
test
mov
test
cli
dec
cwtl
fldcw
pop
xor
fcoms
mov
jne
mov
ja
in
stos
add
pusha
and
aas
cmpsl
mov
mov
es
imul
pushf
mov
mov
xchg
scas
push
xor
push
xor
mov
mov
ret
adc
fs
call
orb
adc
stos
pop
arpl
scas
dec
pop
adc
xor
sub
cmpsl
sub
cmpsl
int
iret
pusha
in
andl
insl
pop
enter
repz
inc
aas
inc
outsb
mov
sbb
out
daa
sub
xchg
mov
mov
ss
es
lahf
pop
sbb
xor
fnstenv
inc
adc
adc
xor
sub
pop
lcall
or
scas
ficompl
dec
ret
sbb
shlb
add
add
push
cmp
add
and
pop
out
sti
leave
imul
inc
dec
dec
mov
out
mov
sub
mov
add
push
inc
les
mov
and
mov
and
loopne
jp
cmp
mov
push
popf
jo
rorl
ret
into
mov
ljmp
cmc
pop
mov
daa
push
inc
xchg
ja
adc
movsl
xor
mov
lgs
pop
mov
shl
mov
xchg
into
bnd
nop
ja
jp
mov
pop
aad
insb
lret
push
or
pusha
scas
call
xor
mov
stos
lea
mov
inc
dec
xchg
adc
dec
popa
fdivs
mov
xchg
fldl
mov
lret
popf
incl
ljmp
xor
repz
out
bound
mov
sbb
jp
pop
xchg
mov
xchg
rorl
dec
mul
test
outsb
mov
xchg
push
sbb
roll
and
mov
or
sbb
jecxz
jp
adcl
inc
mov
push
repz
nop
add
ret
mov
test
sub
push
fistps
sti
mov
das
fldl
xlat
and
or
sbbb
fldt
callw
sti
inc
inc
add
ss
or
sub
movsb
repnz
cmp
jae
mov
mov
in
xor
sahf
push
fwait
dec
ja
mov
xor
sbb
lock
stc
movsb
in
cmp
xchg
rcrb
jg
arpl
mov
scas
ds
lcall
ljmp
rcl
or
inc
jne
adcb
dec
sbb
pop
mov
cmp
fcoms
lds
sub
inc
imull
fwait
mov
stos
gs
mov
mov
jp
mov
add
popa
enter
xchg
popf
rclb
fcmovnb
andb
out
cmc
insb
mov
dec
dec
sbb
iret
push
and
fdivrp
scas
mov
xchg
pushw
sub
rcr
lret
push
xor
dec
sbb
push
movsl
xchg
ret
jecxz
xchg
in
sub
mov
out
xor
xchg
repz
call
inc
and
lods
ds
ljmp
pop
mov
jp
nop
cli
jno
cmc
out
orb
pop
test
jo
lock
fisttpl
or
pop
popf
fidivrl
stc
push
and
lret
inc
add
inc
call
and
gs
dec
in
daa
jmp
repnz
pop
add
push
cmpsl
movsl
mov
es
js
shr
xchg
mov
pop
jg
push
jl
push
int
rdmsr
sub
scas
pop
imul
fcoml
and
mov
or
repnz
xchg
jp
xchg
push
pop
sbb
test
imul
ret
mov
sbb
adc
mov
pushf
mov
fs
addl
and
arpl
cmp
sarb
jp
cwtl
outsb
and
and
or
push
ret
and
push
adc
fiadds
pop
cli
inc
dec
xor
es
mov
aas
shll
fnsave
mov
pushf
mov
mov
loop
push
sbb
mov
lods
push
leave
mov
xor
das
sub
push
stc
stos
push
dec
repz
ret
pop
jno
pushf
push
mov
pop
xchg
sub
lock
dec
xor
xor
loope
popa
inc
xchg
test
rcll
into
mov
loop
adc
les
push
cmp
and
xchg
xor
int
stos
push
js
test
xor
mov
adc
cli
mov
mov
cmpsl
lock
loope
outsl
and
stc
mov
push
rclb
cmp
call
jmp
jae
lcall
add
push
jae
adc
pop
adc
rorb
lcall
inc
xor
jge
sbb
push
fcmovnu
aam
int
test
jge
xchg
pushf
cwtl
in
adcl
push
pop
sub
and
mov
aaa
arpl
cli
pop
loopne
mov
insl
rcrl
nop
rclb
mov
fsubr
lret
xchg
arpl
mov
sub
and
push
icebp
insb
jmp
pop
add
testl
xchg
fldt
orl
push
outsl
xchg
xchg
push
and
adc
test
aad
cmp
jae
lock
cmp
arpl
shll
sahf
clc
lcall
ds
xlat
sarb
and
ret
fdiv
inc
fcomps
xor
ret
cli
sti
aad
leave
pop
loope
dec
out
popa
sub
inc
inc
jnp
popf
xor
mov
mov
pop
adc
into
ret
dec
stc
sub
sbb
fwait
cmp
popf
jecxz
or
imul
pop
push
adc
mov
mov
mov
out
inc
lcall
jmp
cmp
movb
enter
insb
outsl
dec
in
or
lods
call
sbb
shl
and
fwait
lret
xchg
xor
jb
js
cmp
cmpsl
xchg
movsl
push
jle
xor
lret
bound
sbb
gs
mov
scas
into
xchg
iret
arpl
sbb
adc
icebp
icebp
and
add
and
sti
test
sbb
test
sarl
jecxz
push
mov
les
xchg
dec
xchg
aaa
ret
push
fnsave
sub
jns
lods
ja
shlb
and
xor
loopne
daa
lret
pop
xor
sbb
ds
and
imul
adc
loop
cmp
pop
mov
cmpb
inc
out
adc
fidivrs
stc
inc
xor
test
dec
hlt
arpl
sub
or
ja
cmc
sahf
rcl
int3
fcoml
add
xor
rorb
xchg
xchg
xchg
testl
inc
push
sub
xchg
std
mull
xchg
jle
mov
cli
orb
adc
adc
imul
aas
xor
xchg
ror
mov
push
mov
sbb
cwtl
push
push
movsb
test
stc
imul
adc
mov
hlt
icebp
add
or
mov
dec
jmp
push
fcomps
mov
test
cli
xchg
mov
lock
adc
imul
dec
push
mov
stc
add
pop
xchg
cmp
cmpsl
ljmp
pop
inc
sahf
add
add
pop
out
jl
in
jns
or
ret
pop
cmpsl
xor
or
xor
adcb
push
sub
jge
and
xchg
mov
jge
scas
int3
movsb
fmuls
cmc
mov
mov
and
out
inc
daa
or
push
repnz
es
shrb
pushf
jnp
jbe
lock
dec
gs
repz
or
jne
xchg
repnz
fsubrl
pop
iret
nop
cwtl
ss
roll
sbb
jg
ds
out
mov
mov
fnstenv
pop
jle
rcrb
cs
add
je
adc
data16
repz
mov
adc
cld
dec
or
jne
aas
mov
scas
in
sbb
inc
or
xor
test
dec
xor
xor
sahf
imull
jnp
jno
or
addb
xor
imul
xor
mov
sbb
xor
adc
pop
mov
fsubl
and
lret
bound
and
cmp
popf
inc
push
popa
xchg
cwtl
push
mov
pop
mov
pusha
imul
mov
add
pop
ficoml
inc
shll
aad
negb
xor
loope
mov
add
add
js
mov
push
test
addl
call
push
stos
inc
movsb
cmp
pop
sbb
push
call
pop
add
inc
jl
test
add
je
int
pop
mov
dec
mov
inc
pushf
loope
test
fwait
cmp
out
inc
jl
ljmp
movsb
test
push
push
les
push
cmp
pop
dec
out
test
mov
pop
cmpsb
cmp
add
cwtl
frstor
sbb
jnp
mov
push
dec
pop
out
mov
lods
shrb
xor
fwait
adc
pop
push
mov
cwtl
inc
sahf
sub
xchg
int3
movsb
movl
aad
cmp
enter
and
scas
and
pop
int
push
arpl
aam
es
cmp
insl
pushf
xor
imul
dec
ss
and
int
fld
mov
shl
push
dec
jl
rorl
sub
dec
inc
mov
mov
pop
js
fstpt
insb
addr16
cmp
xchg
loop
mov
inc
mov
jl
xor
dec
dec
aas
cmp
mov
fcompl
push
or
xor
push
jge
or
loopne
outsb
clc
jg
mov
repnz
repnz
fimull
ss
add
test
call
inc
into
mov
add
leave
or
sub
cmp
out
lahf
les
sahf
xchg
push
and
enter
inc
sahf
xchg
roll
outsb
dec
dec
jle
es
ljmp
sbb
mov
shrl
jge
loopne
mov
sub
mov
or
scas
sub
movl
add
and
xacquire
xor
arpl
push
and
xchg
sbb
or
and
jmp
cltd
aaa
sub
xchg
xchg
scas
fdivrs
xchg
jge
xor
cwtl
push
xor
ror
or
or
lret
dec
lea
pop
dec
xor
mov
and
or
xor
int
in
mov
inc
sub
ret
fs
in
or
popf
or
inc
test
loope
push
test
push
xor
lods
mov
or
inc
adc
mov
outsb
or
dec
movsl
jae
mov
cmp
mov
sub
push
jg
cmp
jp
icebp
mov
xchg
ficompl
xor
shlb
inc
insl
in
outsl
aam
in
mov
int
xchg
cmp
or
mov
lods
xlat
jmp
int
add
mov
xor
neg
cmp
fildl
shrl
stc
fisttps
mov
dec
cltd
pop
imul
dec
add
fimull
cmpsb
scas
lcall
pop
pusha
hlt
mov
imul
pop
pop
int3
cltd
sarl
aaa
lock
or
cs
pop
ljmp
xchg
sbb
out
add
addr16
and
push
jl
cld
addr16
mov
jae
adc
cld
adc
jbe
lcall
sbb
rcrl
xor
mov
dec
sub
xor
or
adc
mov
mov
jecxz
aam
insb
dec
icebp
cli
loop
adc
je
sbb
xor
sbb
mov
add
fistpll
stos
dec
add
mov
xchg
adc
imul
ljmp
mov
fisttpll
rcrl
icebp
push
or
dec
xlat
ja
clc
push
xchg
mov
push
sbb
negb
int
mov
shl
adc
or
aaa
and
mov
xor
daa
repnz
pop
add
ret
pop
leave
ret
jmp
mov
js
fnsave
cmpsb
pop
insb
mov
jne
int
mov
xchg
and
push
hlt
insl
pop
push
test
pop
jl
pop
cmp
adc
pop
sbb
xchg
repnz
dec
fsubs
stos
dec
cmp
push
pushf
stc
mov
and
mov
cmpsl
dec
cwtl
dec
adc
outsl
imul
pop
in
shrl
or
add
aam
sbb
mov
in
sahf
jmp
je
and
cli
cmp
in
mov
push
dec
aas
mov
mov
in
sahf
gs
dec
ret
bnd
dec
add
push
data16
add
rorb
mov
fldenv
jbe
cmpsb
aaa
add
jle
pop
div
clc
xor
fsubl
fistl
sub
jge
sub
and
aaa
in
inc
lcall
dec
outsb
cld
sbb
mov
mov
stos
sahf
inc
or
gs
pop
jl
add
jno
mov
lods
mov
sbb
xchg
sahf
jg
rorb
inc
stos
xchg
loopne
xor
repz
pop
mov
xor
mov
jmp
dec
sub
inc
and
and
xchg
pop
out
je
sbb
shrl
icebp
xchg
mov
push
aaa
cmpsl
or
dec
and
jae
dec
aad
mov
fwait
nop
sti
call
xlat
cmp
sub
mov
out
xorb
jb
jns
fstps
xor
cmp
sahf
adc
pop
pop
test
test
fsubrp
jbe
rcr
in
or
push
fnstsw
mov
mov
dec
inc
jne
ljmp
sti
dec
loope
inc
enter
outsb
cmp
in
shrl
outsb
xchg
fwait
lcall
adc
mov
cmc
dec
outsb
lret
mov
adc
mov
pop
iret
push
mov
lret
xor
scas
rclb
test
adc
cld
aaa
sarb
mov
cmp
in
pop
inc
cmp
inc
insb
sub
push
or
sbb
fcoms
or
es
mov
xlat
inc
stc
adc
repz
cmp
pop
fisttps
fnstenv
xchg
cmp
cmp
sbb
dec
mov
xor
lds
pop
mov
adc
cmc
adc
and
rorl
aaa
js
pop
or
int3
push
orl
arpl
ds
push
popa
push
jns
cmp
adc
or
jecxz
movb
add
loop
movsw
inc
xor
mov
sub
push
mov
xchg
int3
dec
and
and
push
jnp
into
lds
dec
inc
outsl
std
push
test
fisubl
shrl
mov
cltd
aaa
mov
ds
mov
cld
pop
mov
lret
sbb
xorl
push
xor
push
pop
int
sbb
imul
lret
mov
pop
cmp
dec
xor
fimull
cmp
xor
lahf
push
pop
rcrb
cmp
or
push
mov
js
cli
orl
jns
jno
stc
and
imul
push
pusha
jecxz
jo
lret
ss
stos
sub
push
mov
jb
fidivrs
xor
inc
xchg
cmpsl
pop
fldenv
inc
xchg
and
repnz
mov
lock
mov
rorl
sbb
add
cmp
repnz
dec
imul
scas
mov
sbb
cmpsl
jne
test
push
fistpll
pusha
ret
cld
mov
sub
cmc
and
or
mov
lret
aam
int
sub
inc
adc
call
adc
cmpsb
es
sahf
adc
mov
xchg
addb
push
int3
xchg
and
daa
xor
and
cltd
xchg
les
in
xchg
ljmp
fbstp
and
shlb
mov
mov
lods
pop
jge
jbe
mov
outsl
and
test
loope
push
and
outsl
add
mov
xlat
stc
xor
nopl
mov
sbb
inc
mov
clc
lock
pop
xor
inc
les
mov
sbb
cmc
shl
daa
sbb
popf
or
bound
pop
pusha
rorl
clc
mov
xor
mov
mov
xchg
xchg
cmp
sbb
pushl
adc
addr16
xor
jge
lret
push
sbb
mov
xchg
out
mov
test
xchg
loop
test
js
adc
or
fiaddl
or
test
sar
iret
cs
sbb
sahf
sbb
shl
divl
aam
rep
pop
add
addr16
mov
lea
loopne
mov
mov
jmp
sub
test
test
inc
xor
cmp
jp
push
push
fisubrl
push
push
mov
imul
push
inc
pop
xchg
mov
aaa
jg
mov
testl
loop
xchg
sub
adc
mov
xchg
jnp
mov
fistps
shll
ret
ja
inc
xor
subl
sub
xor
dec
jno
cmp
pop
jo
jnp
jp
dec
and
push
or
sub
cmpsl
jne
gs
jge
lods
ljmp
mov
xchg
std
lods
imul
sti
mov
inc
push
in
mov
mov
cmp
fcmovbe
add
jbe
loopne
and
in
repz
inc
cmp
repnz
sub
loop
and
jb
add
scas
out
jle
cmp
shlb
pop
jge
push
bound
fisubrl
push
add
and
les
in
cmpb
or
test
shll
push
outsl
and
xor
js
in
or
ljmp
gs
out
mov
imul
jns
lods
hlt
frstor
nop
and
dec
xchg
xchg
pop
in
or
add
and
ficoms
sbb
sub
fdiv
xchg
orb
inc
xlat
push
cmp
xor
mov
js
pop
jmp
fbld
sbb
or
push
fsubl
jns
xchg
adc
test
jno
mov
fldt
je
push
cmp
shlb
inc
fmul
pop
mov
shr
stos
test
dec
xchg
int3
mov
jle
repz
cli
and
cmp
test
xchg
clc
inc
es
cmp
lea
mov
into
test
pop
lret
fdivr
sub
ja
sarb
push
adc
fmull
sti
cli
mov
mov
cld
ror
dec
mov
into
gs
jge
inc
jo
jp
rcll
xchg
out
push
lret
ja
pusha
push
mov
aam
int3
xchg
out
push
test
cmp
push
sub
and
sub
jns
mov
sahf
jo
mov
test
test
sbb
add
and
pop
pusha
clc
dec
mov
dec
arpl
sti
daa
and
leave
into
mov
add
and
jno
pop
mov
mov
sub
sub
jb
push
aam
rorl
lretw
push
push
mov
arpl
fwait
jo
call
and
xchg
inc
cld
inc
inc
addb
xchg
stos
mov
insl
icebp
imul
jne
fs
xchg
push
shlb
xchg
je
jbe
cmp
adc
jo
cmpb
addr16
xor
inc
pop
ss
inc
stos
push
test
popf
add
les
bound
mov
pop
cmpb
mov
insl
and
xlat
mov
mov
xchg
shrd
xchg
sbb
ret
stos
or
xor
in
mov
or
lods
xchg
sahf
andl
mov
pop
add
pop
sbb
aas
or
cmp
cmp
stos
pop
cmp
cmp
or
pop
pop
je
sar
cwtl
pop
inc
push
repnz
mov
jp
mov
xlat
enter
ret
aas
clc
xchg
xchg
jo
or
xchg
sti
lret
mov
shll
inc
cmp
cmp
inc
arpl
movsb
jg
or
jno
add
shl
fistl
sub
mov
leave
sti
or
sahf
pop
pusha
dec
rcl
pop
adc
das
sbb
mov
xor
xor
add
jnp
test
sub
pop
adc
xor
add
aam
sbb
in
mov
call
inc
adc
mov
clc
int3
xchg
neg
out
sbb
mull
daa
popa
aad
ljmp
nop
hlt
dec
cmpsb
or
mov
outsb
dec
mov
pop
sbb
inc
mov
cmp
enter
or
cltd
add
pop
push
inc
and
test
sub
pop
not
xor
inc
mov
jp
mov
xchg
pop
sub
add
sbb
jle
jmp
out
pop
popf
mov
mov
sti
sub
cmpsl
popf
gs
fcmovu
cs
ja
mov
call
lea
dec
ret
jg
xorl
cmc
sbb
dec
cmpb
out
xchg
jns
add
das
lds
aam
dec
das
pop
inc
pop
lret
rcrl
xor
icebp
sahf
andl
outsl
fcompl
or
dec
shr
repz
push
fidivs
pop
and
shll
lahf
mov
inc
clc
push
add
cs
arpl
subl
cmpl
pop
jg
mov
inc
push
insb
int
enter
aaa
popf
aam
mov
loop
mov
jl
cmc
popa
add
dec
sub
lea
es
rol
aaa
mov
push
imul
movsb
cmp
imul
pop
lahf
outsl
pop
and
sbb
mov
cltd
push
lea
and
inc
rol
sbb
inc
cwtl
xchg
dec
adc
pop
sahf
fs
sbb
daa
out
lea
popa
xor
stos
jne
sub
sarl
cmp
sbb
mov
lret
out
popa
mov
jg
stos
shll
arpl
fadds
sub
nop
in
mov
stos
mov
in
or
cltd
loopne
and
gs
std
into
mov
leave
and
fsubrl
jl
std
enter
push
jns
sub
sub
push
testl
aad
mov
jge
push
jnp
cld
xchg
fnstcw
mov
movsb
addl
xchg
or
adc
mov
incl
and
lret
dec
and
leave
or
push
arpl
or
add
adc
xchg
test
sahf
sub
lods
inc
pop
mov
push
inc
adc
adc
sbbl
sbb
sahf
jnp
pop
loope
jecxz
into
or
fistpll
ret
or
fisubl
pop
add
cwtl
adc
mov
mov
dec
sarl
or
filds
push
hlt
int3
cwtl
repnz
push
and
jp
es
lahf
xor
add
or
pushf
out
shr
pop
mov
jg
dec
sub
outsb
repnz
mov
add
punpcklwd
subl
icebp
ljmp
push
mov
dec
addr16
jge
dec
and
stos
pandn
insl
mov
outsl
cli
movsl
rorl
pop
fnstcw
mov
shl
mov
pop
push
xchg
adc
cli
mov
leave
fwait
mov
jne
inc
mov
sub
out
add
sbb
out
and
xor
or
xor
movsl
addr16
imul
movsl
and
stos
pop
adc
int3
adc
andb
inc
mov
mov
pusha
leave
add
mov
cmpsl
add
mov
mov
mov
pop
xchg
and
sub
mov
mov
adcl
decl
cli
cs
test
lret
outsb
pop
inc
mov
fnstenv
cmc
jg
fisubrs
out
loopne
ljmp
inc
pop
pop
and
lcall
xchg
mov
dec
cmc
pop
enter
pop
xchg
mov
and
in
add
mov
pushf
mov
mov
imul
push
cmp
add
test
inc
add
mov
shll
mov
add
out
mov
leave
fsubp
insl
add
push
cmpsl
jecxz
xchg
xor
nop
dec
shlb
pushf
pop
es
das
loopne
pushf
dec
test
daa
pop
sub
lea
testb
into
enter
add
add
lret
dec
les
jno
pop
pop
adc
inc
inc
mov
stos
imul
xor
add
jno
int
mov
xor
in
mov
shr
or
mov
out
fsts
mov
cltd
sbb
shl
and
decl
jecxz
dec
lcall
jb
pop
clc
pop
iret
jecxz
adcl
adc
mov
arpl
pop
adc
mov
popa
and
sub
fs
mov
jnp
cwtl
aaa
fmuls
ret
mov
call
push
repnz
and
out
lods
loopne
fimuls
fucom
popf
pop
sbb
xor
mov
push
mov
lock
leave
and
dec
shll
subl
in
push
pusha
nop
cmpl
adc
add
and
es
or
stc
jae
xchg
enter
in
lds
mov
pop
sub
scas
into
fiadds
push
arpl
pop
dec
in
call
mov
inc
cwtl
push
cmp
pop
cmp
cltd
push
mov
test
sbb
outsb
mov
fdivrs
inc
inc
jne
sub
movsb
ret
test
nop
pop
imull
lahf
dec
repnz
enter
or
addr16
or
call
rorl
roll
jecxz
xchg
jne
daa
ljmp
stc
mov
jp,pt
xor
adc
mov
sbb
test
fidivrs
mov
xorb
std
mov
mov
cmp
mov
or
arpl
roll
inc
aas
mov
xchg
ficoms
sub
call
cmpb
mov
and
dec
shrl
rcll
dec
dec
hlt
outsl
mov
cmc
stos
dec
sti
xor
xchg
mov
push
push
fisubrs
int3
cmpb
jecxz
xchg
repz
imul
lret
sbb
mov
mov
test
mov
cmp
lods
orb
mov
push
mov
lods
mov
pusha
jp
xchg
dec
ficompl
test
fidivs
xor
fistpl
jnp
icebp
push
stos
adc
sarb
mov
or
push
jge
insb
mov
and
cmpb
jns
push
cmp
pop
jbe
or
add
jbe
lcall
rcr
sub
adc
das
cmpl
loopne
dec
test
sahf
pop
in
inc
mov
nop
cltd
scas
adc
or
mov
roll
cmpsl
test
or
sbb
and
xchg
mov
cmp
xor
fimull
lahf
in
sbb
cld
clc
mov
call
xchg
and
stos
xchg
bound
cmp
add
hlt
jbe
out
lds
mov
xchg
fisubrs
xchg
mov
sar
pop
pop
jecxz
or
in
jp
xor
dec
outsl
xor
int
call
sbb
add
add
repz
xor
add
insb
sub
arpl
dec
pop
aad
dec
cmp
jb
test
in
test
ljmp
outsb
sbb
xchg
push
movsl
and
jbe
popf
push
mov
mov
pushl
xchg
cmp
jle
lcall
es
std
fsts
sub
je
fdivrl
lcall
es
loopne
incb
inc
jp
std
cmc
mov
shrb
fimull
xor
in
aaa
icebp
inc
je
dec
ficomps
jmp
xor
out
add
sub
dec
sub
incb
aas
popf
mov
mov
xor
ljmp
adc
and
out
stos
add
aaa
fsts
or
cmp
adc
pop
dec
cs
push
stc
fisttps
add
pushf
cmc
pop
ret
and
jno
adc
dec
outsb
fcmovu
cwtl
push
sub
das
lea
xor
pop
fsubr
jb
repz
int3
dec
pop
iret
mov
fwait
mov
je
xchg
mov
pop
xchg
aaa
and
mov
or
or
mul
movsb
cmp
xor
adc
mov
jbe
add
decl
fmull
push
xor
push
pop
mov
xchg
lds
xchg
fcomps
rcrl
test
sbbb
aam
mov
push
adc
cmp
pop
popf
sub
mov
enter
xchg
dec
lds
ss
fld
arpl
leave
or
pop
stc
xrelease
jecxz
add
push
or
or
dec
shll
ret
push
xchg
insl
push
xor
andb
lock
jle
push
testb
and
fst
jg
dec
push
lcall
addl
jle
sub
add
popa
pop
mov
cld
lret
dec
cmpsl
inc
icebp
mov
mov
mov
cmp
adc
rcr
imul
shrb
enter
repnz
out
daa
shlb
hlt
and
inc
dec
mov
jmp
cld
fldcw
outsb
das
push
icebp
cli
add
cltd
lock
mov
jbe
aam
lret
cs
push
cltd
xchg
cltd
ficomps
lds
xchg
daa
test
dec
loop
cmp
push
inc
sub
sti
pop
inc
repz
movsb
push
add
xchg
inc
in
mov
hlt
fsubl
cwtl
jbe
icebp
mov
xchg
pop
mov
sarb
stc
fwait
loopne
jno
stc
fcompl
and
repnz
enter
sub
pop
sbb
mov
movsb
in
adc
dec
les
ljmp
mov
add
cmp
rcrl
iret
in
lods
dec
adc
fidivrl
lods
sar
add
pop
adc
jg
mov
inc
sbb
fdivl
inc
dec
lret
ja
jo
jnp
xchg
and
adc
mov
mov
movsb
enter
or
dec
or
push
sbb
pop
iret
xchg
mov
lods
xor
aaa
or
xchg
adc
into
mov
fwait
adc
or
cltd
sbb
inc
aaa
cmp
leave
pushf
xor
mul
loope
aad
enter
jle
mov
pop
push
mov
ljmp
inc
lods
cmp
sub
jecxz
ret
arpl
pop
sbb
aam
loope
add
sub
sbbl
dec
loope
push
aas
fs
cmpsb
cmpsb
xchg
xor
shl
sbb
jp
aam
aam
fimuls
stos
xchg
jg
pop
nop
arpl
inc
popl
mov
bound
sbb
adc
mov
jp
subl
shll
icebp
mov
or
cli
ret
in
out
fs
notl
inc
mov
mov
lcall
dec
push
fists
into
sub
imul
xor
es
cmp
jle
out
leave
mov
push
xor
push
cmp
imul
push
mov
clc
out
jg
shlb
or
jb
in
xor
lcall
out
icebp
outsl
and
gs
lahf
es
cwtl
clc
incl
std
mov
xchg
sub
jno
sbb
divb
jae
cmp
aaa
xchg
pop
xor
pop
add
inc
ret
or
xchg
xchg
lret
xor
scas
js
pushf
fs
pop
out
ds
mov
scas
or
fwait
popl
lds
mov
testb
jp
xorl
jmp
fimuls
sub
push
or
or
mov
es
dec
cli
and
mov
xchg
out
inc
jae
sub
cmp
xchg
pop
cltd
dec
mov
sbb
dec
dec
dec
xchg
xor
cmp
sbb
enter
mov
xchg
or
scas
mov
outsb
or
imul
jae
inc
mov
into
mov
dec
clc
es
mov
lods
rcrl
inc
xchg
inc
mov
pop
and
shl
sti
or
mov
dec
stos
cmpl
mov
xor
pop
lret
mov
int
adc
xchg
insl
dec
out
bound
add
mov
arpl
sub
into
rorb
faddl
xor
jnp
adc
shrl
ds
inc
shrb
les
icebp
adc
mov
adc
mov
addr16
aad
out
pop
ja
xchg
or
mov
stc
test
pushf
ss
outsb
cltd
or
stos
adcb
jl
mov
fiadds
or
cmpsb
mov
xchg
stos
pop
sub
sbb
insl
insb
and
jns
cmp
add
fdivrs
pop
or
adc
push
cmpsb
adc
fisttpl
roll
shll
aad
icebp
cmp
ficompl
pop
fnsave
xchg
ds
arpl
jns
arpl
inc
push
rorl
jecxz
xor
mov
ds
stc
nop
push
jae
add
clc
sbb
sbb
or
movsb
rolb
jge
int3
push
iret
outsb
or
xchg
mov
mov
jle
or
jecxz
inc
je
jmp
test
pop
push
push
mov
lret
int
cmp
imul
orb
and
pop
mov
mov
inc
loop
jae
scas
cmp
lret
mov
dec
xchg
mov
mov
inc
std
movsb
aaa
sti
insl
loop
sub
cs
xchg
xor
xor
addb
rcll
out
lcall
popf
lock
pop
out
xchg
jmp
aas
inc
fstpl
or
arpl
je
push
cmp
xor
aad
dec
fsts
xchg
or
ss
test
push
faddl
cmc
mov
push
push
enter
popa
inc
out
repnz
movsl
or
pop
fs
movsb
cmp
aas
push
push
push
adc
xor
sub
cmc
push
imul
cli
xor
movsl
mov
div
pop
push
xor
into
shlb
ds
fdivl
adc
fwait
ret
ja
mov
sbb
mov
and
and
sti
sub
add
outsb
jp
mov
ljmp
cwtl
dec
xorb
lret
repz
enter
negl
mov
cmp
mov
outsl
icebp
pop
jne
cmp
mull
aas
hlt
adc
das
out
inc
add
movsl
pop
pop
ret
pusha
pop
xchg
sahf
scas
dec
cmp
lock
add
inc
push
xor
movsl
push
or
cltd
sahf
ret
push
movsl
adcb
jp
popa
clc
mov
sbb
mov
fcmovnu
push
jmp
out
inc
insl
push
ja
push
mov
gs
adc
mov
dec
in
add
fistl
inc
adc
arpl
enter
call
dec
add
mov
mov
stos
and
cs
leave
dec
mov
cmp
out
and
jns
mov
lret
push
shll
inc
out
and
push
cmp
jmp
fmuls
int3
mov
dec
jp
lea
cld
icebp
lods
ja
xchg
sub
lcall
sbb
dec
iret
lret
jle
and
sbb
imul
jp
in
pop
push
dec
shll
orb
repnz
adc
dec
or
jo
scas
inc
xchg
aaa
push
mov
mov
adc
loope
icebp
outsb
fistps
leave
add
add
push
icebp
xor
hlt
jp
int
lret
cmp
jne
cs
test
mov
inc
and
jl
inc
add
mov
push
add
jp
jg
test
in
loopne
cmp
push
in
inc
mov
jae
sub
popf
test
fsubs
scas
loopne
es
daa
xor
mov
inc
adc
les
xchg
jnp
jb
imul
or
repnz
sub
sbb
outsl
and
das
mov
xchg
xor
gs
mov
cld
les
stos
xor
lods
das
test
mov
inc
cmp
mov
popa
lods
and
rolb
bound
ds
mov
push
nop
dec
pop
daa
data16
call
inc
stos
and
loop
push
inc
and
pop
aad
cwtl
insb
mov
outsl
push
cmp
jns
jmp
iret
sub
mov
cmp
mov
pop
push
adc
cs
jb
fisttpll
je
dec
inc
add
leave
mov
push
or
jp
jno
xor
lahf
lcall
jge
sub
sbb
out
aam
jge
cli
stos
in
jmp
inc
dec
sbb
out
push
ljmp
subl
sti
push
inc
pop
cmc
add
xchg
pop
add
jo
pop
xchg
aad
sti
cmp
into
cmc
sbb
cmp
sub
mov
push
ds
shll
mov
jle
or
dec
sbb
dec
or
mov
push
es
cmp
jbe
adc
shrb
fs
or
sub
iret
jae
dec
xor
cmp
out
pushf
cmp
jae
mov
cmp
mov
aas
sbb
cltd
adc
cmpsl
jo
fisttpl
mov
lret
mull
cmp
ja
xlat
hlt
mov
repz
cmc
call
jp
add
push
adc
mov
adc
fstl
iret
jp
es
pushf
cmp
shll
xor
sar
in
sbb
push
pop
int
or
push
jae
pop
stos
mov
fimuls
jge
pop
mov
push
in
mov
sub
into
mov
cmpl
pushf
daa
lret
bound
or
push
orb
jmp
or
scas
iret
sbb
mov
in
es
xlat
sahf
cmp
mov
les
pop
out
cli
addr16
mov
ror
or
jo
pop
pushf
inc
lds
mov
lret
mov
pop
push
mov
jnp
push
shlb
xor
out
aam
insb
xchg
mov
aas
jmp
xchg
loope
push
fidivs
dec
movsb
push
cltd
push
ljmp
mov
popa
xor
xor
push
in
std
das
pusha
insb
push
xor
test
mov
addl
mov
inc
fsubl
cmp
add
ficompl
jg
adc
fldcw
mov
aaa
dec
sbb
xchg
dec
or
push
add
ja
jg
inc
lret
xchg
and
add
push
enter
add
xor
test
movsl
neg
fldl
icebp
mov
fsubl
mov
jnp
adcl
inc
ret
inc
fisubl
aas
mov
jno
mov
xor
xchg
stos
dec
ja
lcall
jecxz
insb
pop
adc
out
sub
push
dec
push
mov
ljmp
stc
inc
inc
imul
inc
xchg
jmp
mov
xadd
pop
in
in
mov
stos
xchg
pop
cmpsb
lock
adc
js
outsb
cmp
lret
push
sbb
xor
dec
ret
cmp
xchg
or
in
bound
inc
int3
fsubs
incb
sbb
aas
push
add
or
sub
aaa
sub
data16
mov
sarl
les
pop
jl
iret
insb
mov
mov
sub
js
gs
out
mov
pop
mov
hlt
mov
push
add
es
imul
mov
jp
data16
adc
mov
insl
insl
jbe
xor
pop
pusha
daa
je
push
insl
pop
addl
in
xor
jmp
call
pop
xchg
jg
aad
sbb
cmp
testl
add
mov
mov
pop
jg
mov
inc
adc
cld
hlt
jno
addr16
mul
fwait
daa
mov
mov
bswap
xchg
xor
and
xchg
int
mov
repnz
and
rorb
gs
sub
stos
icebp
roll
iret
mov
pop
repnz
movsl
mov
test
neg
cmpsl
ret
push
negb
cli
popa
cmp
aad
decl
mov
imul
mov
pusha
inc
es
push
mov
or
xor
mov
mov
std
in
daa
icebp
aam
dec
icebp
dec
sub
cmpsb
jne
mov
sbb
or
in
pop
cmp
push
xor
mov
ret
lock
out
xor
lret
clc
scas
push
int3
xchg
dec
rcl
cmp
and
pop
pop
test
testb
mov
mov
cmp
pop
push
mov
pop
cli
sti
filds
lcall
sbb
sbb
enter
inc
lcall
les
mov
je
out
mov
mov
pop
push
lahf
cwtl
iret
rclb
mov
pop
cli
jns
pop
lds
jg
lods
mov
lcall
push
bound
xchg
mov
mov
iret
jo
add
jo
aad
mov
mov
dec
dec
jp
aad
mov
in
lret
xor
dec
jp
lahf
fmul
dec
mov
out
mov
push
dec
mov
mov
sti
mov
enter
ror
xlat
push
push
jb
call
jnp
jnp
sbb
pop
outsb
xchg
mov
mov
push
es
or
xor
gs
jg
imul
jb
push
andb
sub
ljmp
sbb
in
repz
mov
adc
arpl
in
mov
dec
adc
hlt
xor
imul
xor
and
lret
mov
jle
fwait
lret
sahf
push
dec
mov
sahf
dec
jns
push
push
mov
insb
push
mov
std
and
sbb
xor
mov
cmp
ficoms
inc
pop
pop
enter
pop
gs
jp
sahf
sti
sub
mul
pop
in
inc
cld
jge
jmp
xlat
mov
rclb
repnz
in
xchg
cmpsb
test
cmpb
push
add
sarl
mov
lcall
xchg
xchg
loopne
pop
jp
xchg
dec
pop
inc
aad
cmc
and
movsb
xorl
mov
pop
div
mov
mov
nop
mov
shlb
outsb
rclb
pop
mov
push
fists
std
dec
adc
out
in
add
es
sub
stos
jge
cmp
cmp
adc
dec
adc
das
add
add
inc
int
scas
out
lret
clc
bnd
insl
sub
mov
sub
les
adc
dec
mov
stc
movsl
or
jp
fcoml
jmp
pop
test
xchg
mov
movsl
dec
std
pop
jecxz
cmp
out
or
cwtl
shlb
and
lret
mov
xchg
sbb
mov
int
daa
jno
ss
cld
ds
push
xor
cwtl
jnp
adc
dec
xor
mov
popf
mov
pop
mov
in
xchg
jns
pop
arpl
addr16
sbb
les
outsb
fstpl
lret
inc
sbb
add
into
stc
adc
test
xor
adc
mov
push
stos
pop
test
or
mov
xor
mov
sbb
adcl
mov
repz
imul
pop
iret
adc
and
cmp
mov
mov
add
adc
mov
fidivrl
sbb
loope
lret
addr16
int
ljmp
push
inc
nop
nop
mov
lea
inc
mov
mov
hlt
jg
xchg
add
leave
in
and
cld
in
xor
popa
sub
adc
jge
pop
lret
stc
fwait
movsl
stc
paddsw
and
movsb
test
xor
xor
clc
test
or
mov
pop
push
mov
mov
xchg
xlat
xor
aam
inc
xor
add
outsb
test
mov
lahf
add
mov
xchg
and
invd
test
xchg
shlb
out
aaa
call
add
jg
xchg
shll
push
and
sub
fsubrl
fmulp
jmp
das
adc
lcall
test
xchg
dec
sbb
inc
cmp
ss
iret
inc
jne
mov
pushf
adc
mov
fstl
push
cmc
fldpi
stc
adc
lods
sub
shl
jnp
xchg
sbb
in
imulb
jo
loop
loopne
iret
movsb
fldl
and
das
pushf
lods
cmp
xchg
pop
cmpsl
jne
rcrl
sbb
lcall
dec
and
aad
cmp
aaa
xor
pop
dec
fnstcw
aam
test
mov
faddl
icebp
fs
sbb
dec
lcall
sbb
xor
jl
imul
sub
jae
mov
or
xor
shl
lret
or
incl
les
in
mov
push
rcl
insb
sbb
out
jmp
add
jbe
adc
bound
adc
lock
xor
push
mov
pop
pushf
inc
std
sub
add
mov
pop
arpl
cmpsb
cwtl
mov
ja
jno
push
rclb
imul
sub
inc
subl
jle
ja
sahf
push
jecxz
push
inc
or
filds
pop
push
mov
in
addr16
fcomi
in
pop
scas
xchg
pop
adc
pop
out
sbb
dec
push
in
stc
inc
lret
dec
loope
out
das
sub
mov
cmp
pop
push
add
movsb
cmp
out
fs
fsts
sub
mov
movsl
scas
xchg
cmpsl
sub
xor
test
dec
lods
lcall
dec
add
mov
sbb
loopne
mov
push
addr16
into
lea
lea
cs
sbb
cmp
sbb
mov
enter
adc
push
sbb
test
xor
and
mov
xchg
sarb
cmpsl
dec
out
pushf
out
aas
addr16
fbld
dec
sub
push
in
push
arpl
aaa
cltd
not
mov
sahf
in
pop
mov
rorl
mov
push
movsl
mov
les
mov
leave
rcll
scas
sub
mov
aaa
fcoms
and
and
leave
call
in
sub
stc
pop
dec
loopne,pt
jmp
imul
mov
sub
mov
pop
mov
adc
push
scas
mov
sbb
pop
lods
cmpsl
test
in
or
fdivrl
iret
adc
in
jge
or
call
out
pop
fwait
and
mov
cmp
pop
add
leave
insb
pop
and
or
lock
inc
andl
loop
addr16
xchg
cmc
in
add
cmpsb
sub
cmp
cli
dec
mov
add
pop
lret
cmpl
fisubrl
push
fstpl
jg
out
aam
xlat
out
aam
push
or
js
cli
jmp
lahf
and
sbb
lcall
or
xchg
mov
pop
mov
imul
mov
jl
imul
xchg
fcmovnu
adc
and
inc
cmp
add
xor
or
xchg
jmp
aam
inc
cmpsl
es
cmp
nop
jmp
sub
std
mov
clc
dec
sbb
movsl
mov
nop
sbb
mov
or
test
sub
add
add
lock
dec
bound
xchg
push
xchg
mov
cmpsb
sar
out
xchg
mov
add
shrb
jl
xlat
popf
xor
pop
js
jns
cmp
add
cmp
jl
cmp
jb
sub
xchg
mov
dec
mov
insb
out
imul
sbb
xor
sbb
in
jns
pop
in
enter
lock
jo
dec
fwait
mov
icebp
pusha
add
push
jp
and
dec
mov
rcr
imul
stc
outsl
mov
sbb
out
cld
js
pop
add
pushf
out
mov
cmp
push
sbb
or
addr16
xchg
insl
dec
lock
mov
sbb
xchg
iret
mov
jne
sbb
inc
ss
aad
rclb
out
and
mov
adc
pop
jo
outsl
dec
or
stos
outsb
test
mov
cmp
cmp
jge
or
xor
inc
xchg
push
in
aad
sahf
sub
push
push
push
sbb
and
rorb
daa
push
fnstsw
cld
mov
mov
roll
insb
sahf
adc
ficoml
xor
add
dec
mov
ret
sub
cmpsb
jmp
adc
int3
in
ret
ud1
mov
xchg
mov
and
lock
dec
out
push
jp
leave
insl
inc
mov
adc
dec
dec
fdivrl
cmp
insl
cs
lea
sub
xchg
andb
in
into
aad
sub
sub
xlat
jne
push
mov
sub
xchg
sub
loop
and
loop
pusha
jmp
xor
inc
and
sub
xchg
aaa
lods
aaa
fcmovu
mov
out
dec
and
mov
and
jge
pusha
ds
xor
xchg
inc
aam
loopne
out
es
iret
cmp
cli
movsl
orl
outsb
push
imul
mov
loop
inc
push
out
jbe
lahf
pop
push
cwtl
loop
rolb
sub
add
xor
outsb
jne
loope
and
les
jbe
dec
fsubl
adc
jae
pop
cwtl
push
fstpt
fsubs
movsb
add
pop
enter
jns
ss
mov
jecxz
fs
mulb
push
mov
shl
sbb
out
aad
hlt
pop
outsb
push
push
push
cmp
pop
mov
cli
and
cmp
int3
pop
jbe
ffree
adc
lahf
test
push
out
lret
add
add
add
add
adc
add
pop
mov
xchg
adc
aaa
pop
mov
mov
sahf
pop
daa
jno
pop
mov
xchg
adc
ficomps
ss
adc
ficomps
ss
adc
xchg
stos
fstps
xor
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
int3
jge
sbb
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
test
mov
sub
loopne
adc
add
add
add
add
add
sahf
and
jg
sbb
inc
add
rolb
add
in
add
add
add
lcall
add
mov
jo
add
add
jmp
andl
rolb
add
push
add
add
add
sbb
add
add
add
sbb
and
add
add
add
add
add
ljmp
add
mov
add
add
jg
sbb
and
add
add
add
add
add
push
add
addr16
inc
add
add
add
mov
notb
ret
jle
movsl
mov
push
iret
imul
adc
sbb
out
push
loopne
hlt
fstpt
pop
sbb
inc
xchg
jne
popa
test
insl
cmpsl
stos
insb
rolb
jne
sub
xor
aaa
mov
ret
mov
sbb
dec
repnz
xchg
mov
into
pop
push
adc
pop
jns
xor
mov
xchg
xor
repz
jge
ljmp
adc
scas
daa
rcrl
cld
lea
mov
imul
loopne
fmulp
push
pop
mov
cmp
ret
jmp
scas
arpl
cmp
push
fwait
pushf
in
out
cmpsl
lcall
dec
lds
adc
xchg
push
jb
jle
sbb
scas
cmp
fdivrl
lods
pop
push
mov
lcall
or
xchg
push
push
jge
int
in
lea
and
imul
int
popf
hlt
push
sbb
push
jae
mov
xlat
iret
cld
mov
mov
xchg
das
pop
sbb
inc
cltd
fiaddl
fists
xor
jb
out
cmpsb
cltd
aam
inc
lret
jo
xchg
adc
jo
adc
fistl
ja
jge
lods
inc
or
cmp
test
rcrb
popf
push
mov
inc
lahf
out
fwait
leave
adc
pusha
xchg
fidivl
and
lods
sti
rcll
rolb
xchg
ljmp
sub
mov
icebp
loop
mov
ja
inc
sbb
in
push
outsb
test
push
mov
std
push
mov
jle
jmp
popa
sbb
adc
cmp
lret
mov
insb
lret
lcall
cmp
jmp
packuswb
sub
xchg
call
js
sbb
decl
in
int3
in
orl
mov
dec
add
insl
sarb
test
ljmp
push
mov
int
jb
push
inc
jb
sub
cwtl
test
sub
cli
hlt
sub
push
xlat
or
sahf
sbb
sbb
movsl
lods
pop
sbb
pushf
lods
imul
or
movq
sbb
pop
aaa
xchg
mov
sbb
loop
sti
fisttpll
popf
cs
add
insb
int
mov
imul
mov
in
call
cmc
xchg
mov
push
xchg
lds
scas
test
push
negl
lock
in
repnz
aas
add
lods
add
push
sub
xchg
or
lcall
push
fsubr
call
xor
jb
sti
into
push
push
jnp
add
sub
jmp
xor
pop
test
popa
cld
mulb
cwtl
xchg
daa
jmp
jb
pop
sarl
lea
outsl
lods
fldenv
cmc
or
lret
mov
das
out
and
sub
add
sbb
jne
pop
jbe
xchg
rcrl
mov
push
adc
mov
sbb
movl
fsubrl
sub
or
dec
xchg
cwtl
pop
call
fwait
mov
push
xor
sbb
icebp
xlat
cltd
mov
ds
out
adc
cpuid
pop
icebp
aad
es
mov
test
pop
ret
adcb
mov
mov
and
rolb
mov
std
mov
inc
add
movsb
lret
fbstp
push
dec
push
in
mov
inc
dec
mov
arpl
dec
outsb
aam
inc
clc
fcoms
push
nop
jmp
sub
or
dec
sahf
sub
orl
jo
dec
int
pushf
lods
xchg
jle
mov
mov
jecxz
adc
mov
test
adc
jne
push
in
das
iret
notl
xchg
adc
repz
jp
cwtl
testb
cmp
jbe
and
pusha
mov
and
imul
fwait
mov
sti
aad
cwtl
out
inc
andl
mov
and
add
hlt
sbbb
pop
cld
pop
in
addr16
testl
mov
stc
les
es
or
push
aam
push
dec
in
mul
jnp
test
add
ja
aaa
test
inc
je
mov
mov
rolb
push
xchg
adc
test
dec
dec
mov
cltd
shr
dec
loope
mov
mov
mov
mov
pop
mov
inc
mov
jge
movsb
out
pushf
fsubrl
bound
sub
cmp
stos
fdivrl
mov
clc
sub
cld
adc
and
stos
cmpsb
arpl
cmp
lret
cmp
aaa
lods
push
and
inc
xchg
test
or
out
sbb
lcall
or
fstl
fisttpl
subl
add
push
jno
dec
jb
xchg
sbb
xchg
out
incb
jp
add
sbb
ljmp
testl
ljmp
fmul
adc
insb
ja
test
stos
adc
int
es
gs
xor
cmp
cs
push
xchg
nop
sbb
out
pop
inc
cmp
xor
push
lcall
sahf
fsubr
into
cmp
jecxz,pn
xor
mov
adc
push
stos
pop
in
mov
pop
push
xchg
xchg
pushf
jbe
and
cmp
rorb
mov
ret
mov
mov
cmp
ja
bound
movsb
scas
push
inc
adc
out
jae
inc
xor
pop
jno
fdivp
or
in
push
adcb
sbb
push
adc
add
mov
pop
lods
sub
jnp
xor
mov
lods
jl
and
ret
mov
sarb
mov
pop
push
mov
daa
aas
je
sub
mov
inc
push
xchg
mov
lcall
rcll
sub
dec
or
daa
cmp
and
xchg
cwtl
mov
daa
bswap
or
call
bound
shll
mov
jnp
jno
out
sub
add
loop
adc
jb
scas
mov
sbbb
pop
aam
add
sbb
mov
pop
dec
in
mov
pop
xor
pusha
push
in
push
out
mov
int3
cli
movsl
xor
cmp
in
stc
push
data16
cmc
pop
stos
rolb
test
mov
gs
pop
mull
xor
xlat
test
lock
add
das
frstor
lret
or
pop
shll
imull
popa
insb
mov
add
aam
lods
push
lret
xchg
mov
lret
xor
fmull
pop
push
xchg
frstor
cwtl
enter
pop
pop
pop
hlt
jne
std
dec
jb
xor
dec
xor
in
cmp
loope
push
sbb
push
push
dec
stos
icebp
loope
pop
sub
pop
inc
mov
ja
aas
loopne
lods
lret
hlt
xchg
mov
add
packsswb
cmpsb
movsb
fs
and
pop
rcll
sar
lds
std
dec
dec
int3
xchg
addr16
cs
pop
cmp
lret
xchg
xchg
fwait
push
cmp
sbb
xchg
les
jle
lods
ror
test
sbbl
fcoms
mov
inc
push
sahf
dec
mov
out
in
push
pop
gs
lret
inc
call
mov
sbb
sahf
fmulp
cmp
push
sarl
sub
lret
jne
test
stos
scas
lret
xor
movl
imul
pop
add
sub
and
xchg
icebp
out
std
cs
cmp
add
jno
je
dec
ficomps
push
out
push
jge,pt
mov
pop
jb
call
inc
mov
shll
leave
or
pop
imul
pop
xchg
lahf
mov
sti
push
add
ljmp
xchg
or
inc
dec
sub
je
xchg
mov
mov
adc
sub
xchg
mov
and
test
rcrl
push
loop
dec
mov
push
rcrb
and
jl
imul
icebp
bound
xchg
repz
daa
sarl
test
fsubrp
or
push
cmp
ljmp
js
sub
mov
push
and
aad
out
mov
stos
adc
or
subl
sbb
and
pop
jmp
add
in
stc
push
out
mov
movl
ljmp
inc
jae
clc
jo
add
jl
adc
fimull
fldln2
xor
or
lret
xchg
jle
fadd
mov
pop
or
frstor
mov
inc
xor
lods
scas
or
fs
int
mov
int3
and
xchg
sub
out
arpl
lahf
inc
cmp
xchg
xchg
scas
xor
lahf
je
cmp
std
mov
mov
mov
stos
add
icebp
out
xor
ret
out
mov
psubsb
leave
xchg
push
cmp
sar
jmp
hlt
lods
push
push
out
rol
cltd
ret
or
ja
add
les
adc
pop
xchg
loope
sub
xor
lcall
shl
pop
sti
push
jo
sub
push
mov
lock
mov
pop
push
in
and
pushf
mov
xchg
xchg
pop
cmp
scas
dec
lahf
jb
mov
xchg
sti
jae
outsb
int
mov
pop
push
test
add
dec
push
push
jbe
jle
pop
jb
dec
hlt
mov
std
adc
adc
rcrb
sysenter
push
andl
ds
sarb
roll
jmp
fisubl
fstpt
insl
cmpsb
mov
test
and
out
dec
jl
xchg
dec
icebp
test
sahf
mov
push
push
mov
add
rol
icebp
mov
jbe
clc
adc
cmp
lcall
xchg
cmp
adc
sub
ret
push
xor
mov
push
xchg
xchg
test
jb
cmp
sbb
loopne
pop
pop
outsl
sbb
stos
inc
cld
ror
and
ds
pop
and
pop
cs
mov
in
inc
fwait
mov
push
dec
cltd
std
movl
or
ljmp
imul
push
xchg
test
es
xchg
in
out
stos
xor
jnp
popa
add
xchg
push
pop
int3
ficompl
cli
mov
add
and
in
mov
pop
adc
xchg
ja
push
xor
rorb
dec
fwait
add
js
aas
jg
loopne
fs
jnp
add
and
cltd
dec
cmc
sahf
pop
imul
mov
aad
das
adc
mov
xchg
cs
push
int
int3
xor
arpl
or
mov
lahf
and
bound
insb
adc
pop
xchg
rcl
sahf
inc
int3
stos
or
cltd
mov
jbe
rcrl
or
inc
sub
faddl
push
jle
xchg
fwait
rorb
jl
rol
jnp
mov
fcomps
aam
nop
js
inc
pop
addl
jle
pop
hlt
dec
js
and
push
push
or
fs
inc
call
data16
mov
jmp
les
in
scas
cmpsb
push
inc
cmc
mov
test
dec
mov
loope
fistpl
xchg
fs
int
iret
inc
ret
mov
subl
push
adcb
dec
mov
insb
mov
inc
es
ja
dec
stos
or
out
sub
cmp
inc
and
sbb
and
movsb
pop
sbb
fcmovbe
hlt
rcr
aam
mov
xlat
je
and
dec
dec
aaa
out
std
rcrl
xor
push
cmc
sub
adc
stos
pop
or
xchg
xor
push
jnp
les
inc
push
test
mov
jb
push
lcall
dec
lock
sysenter
xchg
insl
and
fidivrl
test
aad
out
fs
mov
cltd
cmpsb
fstpt
add
std
dec
popf
ret
in
js
add
xor
mov
cmp
in
or
nopl
lret
pop
mov
xchg
push
xor
ret
mov
mov
mov
inc
fcomps
xchg
xchg
ss
jae
insb
in
mov
jns
lret
cld
mov
pop
mulb
pop
adc
movsl
xchg
fsubrl
rorb
lahf
in
or
cmp
scas
inc
adc
jnp
aam
or
or
push
pop
mov
xchg
into
dec
mov
sbb
movsl
imul
push
dec
inc
add
imul
jnp
jecxz
mov
mov
movsl
jle
inc
add
leave
dec
fsubrs
mov
cltd
rcll
and
cwtl
popf
stos
scas
aaa
lret
push
sbb
and
call
xchg
in
mov
cmp
in
loop
and
mov
mov
out
pop
mov
pop
mov
adc
lods
add
push
decb
adc
aam
les
arpl
jecxz
mov
jl
stos
shrl
push
popa
dec
addr16
or
cwtl
cs
les
mov
mov
iret
and
repnz
jl
test
mov
push
sbb
mov
xor
xchg
xchg
das
lahf
pop
in
xchg
or
or
imul
lret
fcomps
in
out
xchg
xor
dec
or
mull
in
ljmp
jge
leave
jb
mov
mov
cmp
mov
or
test
repnz
fnstenv
inc
lods
dec
roll
sti
pop
or
scas
push
push
cmp
or
movsb
rclb
outsl
mov
cmp
aam
fmuls
fnstsw
adc
push
cmp
rcrl
mov
popa
inc
pop
cmc
cs
xor
sarl
ja
mov
shl
test
addr16
and
mov
mov
mov
pop
sub
push
mov
std
lea
mov
adc
jnp
or
imul
ret
mov
fildl
dec
clc
gs
cmp
add
dec
xorl
sahf
cmp
out
fldt
cmp
cmpsl
sbb
sub
or
daa
in
scas
pop
out
add
popf
clc
mov
mov
xchg
adc
dec
inc
fistpl
and
aas
out
call
dec
int3
jnp
jmp
stos
add
fmul
je
test
mov
mov
jmp
cld
push
out
add
sub
addr16
sub
les
sub
sbb
mov
mov
mov
jae
daa
mov
shlb
pop
out
add
imul
icebp
movsb
mov
pop
nop
sbb
scas
inc
in
or
lds
and
mov
mov
dec
out
dec
or
jl
mov
aas
pop
outsl
jl
in
adc
and
mov
inc
mov
fisttpll
das
add
mov
setl
sub
dec
fistps
mov
push
loopne
mov
pop
out
lret
in
test
ret
push
insb
mov
jae
sbb
andl
mov
nop
pop
insb
pop
cmp
lahf
fidivs
adc
cmpsb
or
cmpsl
mov
mov
icebp
pop
and
test
out
dec
movsb
add
xor
stc
call
outsb
lcall
inc
loope
inc
jae
push
fwait
push
add
pop
mov
push
test
adc
fstl
ja
cwtl
mov
add
incl
push
add
xchg
or
xchg
mov
les
xlat
and
scas
std
mov
lock
imul
cmp
in
mov
mov
xor
in
xor
js
xchg
jp
add
pusha
xchg
mov
pop
pop
ja
jae
xchg
cmpsb
xor
dec
loop
and
js
fwait
lahf
sbb
dec
cs
lods
cmpsb
cmp
cmp
or
aaa
jle
mov
aas
mov
daa
sub
add
and
fucomi
mov
pop
rolb
xor
adc
and
or
stos
cmp
and
mov
push
mov
push
and
or
jecxz
ret
sbb
adc
mov
test
xchg
iret
test
pop
leave
jecxz
push
jnp
lcall
js
loopne
outsl
scas
les
xor
inc
std
mov
cmpsb
lods
xor
movb
sbb
shrb
mov
les
sbb
jle
mov
int3
aad
sub
inc
inc
push
inc
lods
xchg
fs
data16
push
inc
mov
sub
cmc
jne,pn
imul
xor
cmpsl
stc
cmpsb
mov
xor
pop
and
adc
cltd
cmc
arpl
fisubl
sub
xchg
dec
inc
pop
int
lods
aam
mov
xchg
test
jae
in
jle
lahf
ljmp
mov
push
inc
daa
sarb
test
push
arpl
mov
sub
emms
fisttpll
cmc
stos
ret
push
or
cld
ja
call
dec
test
dec
dec
jnp
pop
test
pushf
xchg
xchg
out
out
mov
fdivl
jmp
xor
lcall
push
xor
sbb
lcall
mov
push
sbb
lea
sti
leave
ss
inc
sahf
movsl
jl
test
adc
dec
jmp
rcr
in
out
andl
sbb
pop
jg
xchg
jb
pop
lods
stos
out
ss
insl
pushl
js
mov
or
lods
ljmp
fcmovbe
add
add
xchg
adcl
les
xchg
add
cmpsl
fwait
test
mov
sbb
adc
or
stos
stc
xor
sbb
dec
pop
push
or
repnz
cmc
and
xchg
test
nop
jmp
int
or
out
push
clc
pop
jns
loop,pt
adc
push
test
ficoms
mull
mov
fmul
xchg
lds
jno
xor
push
cmp
add
out
gs
xchg
movsb
out
push
push
into
scas
cmpsl
fs
insl
inc
push
xchg
mov
and
rcrl
shr
inc
popf
jno
cli
mov
dec
or
rorb
shr
nop
lea
or
mov
and
mov
push
adc
pop
in
adc
dec
out
push
push
lahf
or
dec
sub
dec
outsb
ljmp
push
inc
repz
cmp
aaa
cmp
pop
add
fs
xchg
xchg
xchg
imul
outsb
test
loopne
inc
push
dec
dec
add
pop
repz
lret
push
notb
or
mov
imul
test
xchg
in
cmp
mov
popf
in
push
test
fidivrs
dec
pop
loop
jge
sete
pushf
roll
sahf
inc
jne
out
iret
fcomp
push
jge
and
dec
fbld
pop
clc
repnz
aad
pop
hlt
jg
add
movsl
mul
inc
sbb
mov
push
mov
jne
inc
fwait
decb
add
xchg
out
pop
jle
adc
xor
pop
fiadds
and
dec
sbb
ret
mov
insl
jns
sub
leave
jmp
mov
cmp
mov
mov
mov
jnp
pop
ret
mov
movsb
arpl
stos
roll
aam
data16
dec
hlt
inc
in
pop
cld
sub
mov
ds
outsb
or
cli
push
xor
imul
add
add
mov
jbe
test
pop
sahf
insl
fisttps
mov
cmpsb
cmpsb
lcall
int3
insb
or
dec
sbb
cmp
pusha
jbe
push
inc
scas
bound
jae
mov
or
and
add
mov
dec
mov
jmp
push
lods
or
inc
jnp
iret
cs
inc
xor
adc
es
in
cmp
ljmp
fnstenv
mov
stos
lret
xchg
loopnew
and
xchg
fs
mov
test
inc
jle
xchg
mov
lret
outsb
sarl
dec
bound
lea
adc
and
cltd
jo
pusha
fcomip
std
cs
mov
jns
movsb
mov
fmul
icebp
movsl
mov
popa
vandnpd
loop
ror
les
mov
ds
fsubr
testl
jle
sbb
adc
sbb
adc
inc
mov
jecxz
sbb
push
cmp
shrl
push
movsbl
push
mov
push
inc
push
add
dec
or
push
fistpl
imul
sub
mov
pusha
ja
ret
sti
lods
xchg
jb
mov
and
cmp
daa
adc
jmp
in
ja
fidivs
xor
aaa
xchg
xor
cld
sbb
jl,pt
movsb
test
adc
imul
mov
fwait
xor
xor
jno
jae
mov
dec
pop
pop
mov
add
and
addb
scas
jns,pn
xchg
pop
sub
stos
and
mov
mov
int3
push
cmp
rcll
das
repnz
rorl
mov
mov
ret
sub
mov
pop
add
pop
push
mov
xlat
lret
lcall
and
add
or
or
xchg
cmp
lahf
sub
lds
pop
scas
mov
lods
movsl
jns
or
les
sahf
fdivs
inc
pop
rcrl
sti
sbb
push
enter
jmp
jb
pop
sbb
sbb
fidivs
into
push
mov
dec
call
out
imul
into
inc
push
mull
aas
or
mov
push
dec
aaa
out
cmpsb
mov
xchg
sbb
sar
mov
jns
dec
jge
aaa
hlt
popa
mov
pop
std
cli
lcall
sbb
cmc
leave
add
pop
test
cmpsl
test
xchg
movsl
pop
sbbb
mov
push
adc
adc
mov
movsb
pop
ret
push
sub
xchg
lods
jnp
arpl
lahf
inc
sub
sub
clc
and
jne
cmp
fwait
push
push
inc
jge
xchg
and
mov
mov
imul
push
cli
adc
mov
iret
imul
mov
icebp
gs
outsb
jb
nop
or
inc
cmp
pop
cmp
rclb
and
mov
push
jp
add
mov
insb
jae
stos
js
cmc
jle
dec
movsl
lret
xchg
adc
sahf
jge
cmp
dec
sub
hlt
mov
aaa
ss
clc
out
adc
dec
pushf
pop
mov
push
mov
pop
dec
fstl
shll
shrl
cmpl
xchg
shrb
ss
push
gs
mov
cmc
shlb
repnz
add
or
cltd
sti
mov
out
or
fnstcw
mov
test
sti
xchg
aas
cli
cs
mov
add
iret
lahf
sbb
imul
minps
push
mov
mov
pop
dec
push
shrl
popf
sub
mov
pop
mov
or
xchg
dec
lret
clc
pusha
push
or
cld
scas
pop
mov
das
fists
iret
pop
addr16
jecxz
cmpsl
jp
sub
jge
rcl
mov
push
xchg
aas
cmc
inc
xor
push
imul
push
sbb
and
test
pop
xchg
push
mov
push
jg
out
xchg
imul
out
mov
lret
loope
xchg
neg
in
daa
push
jge
stc
ss
imul
mov
aaa
dec
jnp
es
subps
mov
sub
int
cmp
cmp
ss
add
adc
sbb
sbb
cmp
xchg
nop
rcl
adc
pop
out
sub
and
mov
sbb
mov
cltd
ret
xor
lea
xorb
insl
push
sub
xor
mov
nop
inc
orb
pop
pop
mov
and
xor
fdivs
dec
scas
daa
repz
call
addr16
daa
cmp
mov
in
or
pop
jne
mov
sbb
sub
out
xor
movsb
push
mov
dec
jecxz
jne
insl
dec
mov
and
test
push
jb
mov
cmc
fiadds
pop
cld
sti
sbb
add
int3
inc
out
sahf
pop
pushf
push
mov
insl
add
push
shlb
jp
inc
mov
mov
es
fstps
scas
mov
sbb
mov
pop
jns
pop
adc
outsl
mov
jp
call
adc
or
lcall
adc
push
or
cmp
pop
sbb
out
mov
outsl
das
dec
aad
orb
push
add
mov
hlt
repz
test
sub
jbe
jecxz
lcall
rcrl
or
fistps
xlat
push
sahf
shl
push
xchg
cmpb
and
test
cli
fidivrs
xor
cltd
fnstenv
addl
or
cmpsb
pop
rolb
hlt
popa
fidivrl
jne
pop
xchg
call
dec
cmpsl
or
in
cmp
sbb
imulb
xchg
jp
rdpmc
xchg
loopne
lret
inc
jmp
sahf
hlt
cmp
das
adc
lods
aad
movsb
adc
inc
clc
in
fadds
fdiv
push
fisttpll
adc
dec
lods
shll
test
dec
mov
cmp
jge
add
adc
fdivs
daa
outsl
scas
stos
aad
dec
mov
mov
in
mov
shll
test
push
sahf
cmc
fldl
mov
insb
jle
es
mov
in
cmp
test
pop
mov
loop
jle
imul
xor
add
outsl
popa
cmpsb
mov
lret
leave
out
mov
mov
shrl
cmp
fdivrs
sbb
adc
ret
mov
jecxz
bound
inc
xchg
xor
ss
cmp
sub
adc
xor
or
mov
sti
scas
jb
push
bswap
lds
cmp
and
fbld
cmp
in
shll
dec
mov
nop
or
das
add
pushf
fsubrp
insl
repz
test
and
sub
repnz
jns
inc
xchg
jp,pt
ret
sub
add
leave
jp
and
pop
into
mov
inc
outsb
jl
mov
inc
mov
dec
jl
ret
dec
jb
pop
lods
mov
fidivl
imul
insl
ds
daa
jmp
push
add
jp
mov
in
stos
pusha
enter
sub
add
jge
pusha
dec
test
fucomp
sub
loop
mov
addps
xor
mov
cmp
scas
add
pop
or
fldl
test
imul
push
stc
adc
stos
cmp
cmp
sbb
and
cmp
adc
inc
jge
inc
call
sub
lcall
mov
push
adc
inc
add
fidivrl
mov
mov
mov
sub
pop
arpl
aaa
out
xlat
imul
pop
mov
xor
cltd
pop
sub
rcl
rclb
mov
cld
lds
cmp
dec
js
fwait
mov
repnz
push
xchg
enter
cmpsb
ret
add
pop
or
je
pop
inc
push
aas
cmpsl
pop
pushf
pop
lods
in
gs
pop
sbb
movsb
lahf
in
data16
dec
shlb
fcmovnbe
add
pop
pop
xor
shl
call
aam
call
mov
mov
xchg
rcll
js
and
mov
dec
adc
jo
int3
mov
dec
lret
xlat
sahf
adc
mov
cmpsl
adc
dec
push
pop
lock
push
jb
test
in
sbb
and
and
dec
add
add
push
cmc
mov
idiv
and
lock
xchg
cmpsb
pop
dec
sub
sbb
outsb
dec
cmp
stos
outsb
cli
js
inc
test
lcall
dec
out
cs
aam
mov
sub
fildl
vandnpd
jecxz
and
xor
mov
adc
adc
arpl
push
add
pop
cld
mov
mov
decl
sub
mov
mov
scas
lods
loope
push
shrb
in
int3
jnp
mov
xchg
arpl
jnp
pop
cmp
and
into
jg
jmp
sub
repz
iret
sub
rcrl
fcoms
inc
outsb
cltd
adc
ljmp
into
lcall
jp
mov
jo
dec
sub
cmp
cmp
jbe
and
dec
fidivl
fisubrs
call
cmp
imul
aad
cmp
dec
icebp
push
call
add
sbb
xor
cmpsl
divb
int
sti
adc
jbe
mov
stos
adcb
mov
push
test
in
cmp
xor
push
pusha
dec
sbb
cmp
shll
xlat
fstpl
cmc
ja
nop
cmpsb
mov
popl
rcll
or
scas
mov
lret
xchg
fucomp
pop
sbb
sub
rcrb
add
mov
lods
enter
push
push
data16
adc
jne
mov
ja
lods
shr
xorl
sub
and
sbb
hlt
adc
flds
fs
xchg
lods
adc
jnp
or
jnp
iret
jmp
jle
cmpsb
lahf
xor
out
pop
mov
movsb
aaa
mov
stos
orb
xchg
jns
sbbl
aaa
int3
loop
pop
std
cld
mov
lods
imul
mov
pop
cld
ja
clc
mov
rcr
mov
jo
movsl
mov
mov
inc
in
xor
mov
add
repnz
jmp
xor
rcrl
pop
gs
negb
inc
je
insl
mov
push
add
jg
pop
pop
gs
sbb
jno
popf
push
mov
add
xchg
push
fiaddl
adc
stc
loop
or
push
sarl
push
pop
enter
fdivl
cld
out
fbld
or
loope
into
jmp
dec
mov
jmp
je
inc
adc
xor
enter
xchg
cli
mov
and
out
mov
push
xchg
test
push
cmpl
loope
int3
out
and
sbb
stos
pop
and
mov
push
or
mov
lret
icebp
leave
enter
sbb
loopne
sarl
push
icebp
aad
out
js
stos
cmpsb
lds
xchg
lret
mov
adc
jle
mov
add
pop
fidivrs
cltd
cmp
push
stos
out
add
jmp
sub
test
cmp
jmp
mov
in
mov
dec
outsl
and
sub
pop
faddp
lret
push
in
pushl
xor
sbb
imul
mov
add
pop
push
in
pop
cmp
cmp
cld
fwait
and
sbb
nop
adc
ss
jb
scas
xchg
sub
loop
call
in
dec
imul
stos
std
mov
cmp
add
testb
mov
rcl
ret
jp
mov
add
mov
test
push
sub
nop
xchg
push
fiadds
jge
jmp
daa
lods
repnz
sbb
mov
lret
dec
or
aaa
xchg
mov
push
ja
fst
jnp
push
aam
nop
pop
jae
int3
mov
sub
loop
cmp
xchg
repz
xchg
movsb
loope
mov
pop
push
push
movaps
imul
out
mov
push
iret
adcl
daa
xor
ret
pushf
fdivs
mov
and
cmc
push
inc
or
xor
add
add
imul
fsubp
mov
int
daa
cmp
jae
popa
inc
scas
jge
and
sgdtl
aam
test
adc
push
jl
rcrb
mov
jl
int
or
sbb
mov
in
xor
sbb
cwtl
inc
fnsave
sti
mov
cmp
fidivrl
and
mov
and
xchg
hlt
rol
iret
ret
pop
dec
cld
cmp
icebp
out
lods
add
xor
jle
andl
divb
mov
sbb
fcmove
lods
leave
outsb
adc
cwtl
pop
mov
cmpsb
sbb
mov
addr16
cltd
jno
loop
inc
fdiv
fidivrl
mov
ss
sbb
and
xlat
xchg
cmp
data16
mov
inc
add
loope
dec
pusha
lods
inc
and
mov
lcall
adc
sub
movsb
sbb
icebp
js
inc
insl
mov
popf
xchg
push
xor
call
mov
xchg
sarb
scas
enter
jle
movsl
mov
pop
cmp
cmpsl
and
push
xor
push
out
jmp
lret
adc
xor
or
jbe
mov
negb
ret
pushf
xor
mov
jns
test
xor
and
test
pop
or
movsl
fdiv
fildll
dec
sahf
mov
mov
sarl
and
loope
decb
cmp
hlt
sbb
subl
inc
cmp
or
xor
iret
mov
inc
leave
cmpsl
addr16
lods
lods
andb
insl
dec
and
int
push
insl
movsl
ret
roll
push
cmp
add
hlt
cwtl
mov
push
sbb
push
pop
add
xchg
push
xor
out
push
pop
jns
jno
fwait
lea
ljmp
jp
push
negb
sbb
dec
les
arpl
addb
inc
daa
movsb
pop
mov
rcll
mov
mov
xchg
mov
fldenv
mov
out
jb
xlat
outsl
aaa
or
and
lcall
inc
icebp
mov
mov
adc
mov
lods
idivl
adcl
subb
mov
mov
inc
inc
and
jbe
loop
scas
fidivrl
out
add
cmp
loope
cmpb
nop
add
push
add
mov
in
cmc
adc
dec
xchg
sarl
and
or
jmp
mov
add
mov
xor
inc
and
push
sub
pop
push
push
daa
dec
int
lock
xchg
push
std
nop
push
mov
movsl
pop
inc
add
xor
js
loope
pop
dec
adc
xchg
call
adc
push
xchg
enter
out
or
test
out
lods
sti
in
popf
mov
fildl
popf
mov
sub
adc
pop
dec
pop
out
mov
fisubrl
xor
jl
pop
mov
scas
cmp
inc
mov
mov
dec
pop
fiadds
xor
or
sbb
push
out
mov
fadds
add
fwait
pop
mov
cld
insl
ret
pop
cmp
push
or
pop
adc
cld
jns
in
dec
jno
mov
adc
incb
and
mov
xchg
pusha
mov
ret
shll
outsl
lods
insl
dec
icebp
es
outsl
xchg
bound
jo
add
cmp
movsl
das
daa
aaa
mov
add
xchg
add
or
sbb
icebp
pusha
or
orb
aas
mov
mov
pop
dec
pop
repnz
mov
das
ja
xor
sbb
loopne
into
jbe
orl
into
imul
sbb
sub
ret
sbb
out
loopne
add
mov
dec
loopne
dec
js
aad
popa
jne
push
xchg
lea
inc
mov
lahf
inc
pop
lods
int
or
fwait
pop
push
lret
push
xor
leave
xor
hlt
dec
shll
pop
lock
jnp
pusha
test
mov
lret
cmp
inc
cli
fisubs
stos
xchg
lds
cmp
ds
mov
lock
into
movb
je
dec
xchg
fdivs
sbb
movsl
arpl
dec
mov
mov
rcrb
outsb
aad
add
cltd
test
stos
add
scas
hlt
sub
repz
and
jle
rcr
add
cli
pusha
cmp
jge
xor
fcompl
incb
test
cmc
xor
sub
dec
mov
xor
push
insb
sub
rclb
sbb
sar
frstor
push
xchg
addr16
xchg
mov
popf
push
inc
shrl
or
or
mov
push
filds
scas
test
lcall
xor
jnp
int3
and
adc
notl
arpl
sub
outsb
push
jae
test
push
cmp
mov
sbb
mov
and
lea
pop
cmp
adc
adc
fisubl
addr16
inc
push
sti
jp
int3
lods
push
insb
inc
or
fisubrl
xor
jno
cmp
lods
movsb
aam
les
inc
jge
imul
pop
fmull
and
mov
cmpsb
push
inc
sti
jl
dec
pop
shll
mov
and
add
into
or
popf
jo
mov
repz
clc
xchg
xchg
jecxz
jmp
int3
jmp
and
test
std
ss
std
insb
push
pop
aam
cmpsb
into
in
mov
or
xchg
fcomps
lea
addr16
or
mov
hlt
mov
inc
in
int3
ret
cmp
in
jle
add
enter
into
rclb
mov
xor
fwait
sbbl
dec
cmpsl
test
mov
pop
add
inc
int
outsl
mov
push
dec
pop
pop
push
icebp
sbb
popf
xor
hlt
gs
addr16
adc
jnp
dec
subl
xchg
daa
repz
push
dec
pop
sbbl
fwait
push
jmp
cmpsb
div
mull
rcll
xchg
sahf
sub
pusha
addr16
cmpsb
xchg
lret
jb
dec
clc
jge
ss
ljmp
jo
stos
fnsave
adc
mov
popf
pop
pusha
scas
test
es
sub
jp
pop
jb
mov
mov
ds
cmpsl
fs
mov
stc
repnz
pusha
push
push
stos
mov
add
insb
add
xchg
loop
lock
cmpb
cmp
mov
cmpsb
and
movsl
mov
push
setle
test
cmp
dec
and
sub
fcoms
int3
mov
hlt
mov
mov
inc
xchg
cltd
ret
push
loopne
inc
jne
stos
lahf
imul
bound
dec
mov
fisttpl
xchg
sti
fwait
pop
lret
leave
mov
sbb
nop
xchg
adcb
mov
notb
lea
push
scas
fcmovnbe
out
xchg
es
ret
pop
xchg
popa
mov
sbb
mov
out
xchg
je
sub
mov
mov
push
or
mov
nop
fwait
push
sbbb
addl
ret
dec
mov
xchg
pop
fisubrl
pop
sub
xchg
push
pop
sbb
push
stos
daa
pop
or
jecxz
icebp
dec
repz
fistl
dec
negb
pop
dec
outsl
ljmp
mov
data16
fcompl
cmp
xchg
jl
out
mov
fucomip
movsb
jl
scas
sbb
push
xor
sti
leave
in
popf
in
cmp
fcmovu
xchg
int3
arpl
in
mov
push
push
testb
sub
jb
xorl
movsl
mov
add
bound
add
lds
bound
inc
mov
mov
jge
mov
push
xor
mov
or
cmpsb
lods
push
hlt
mov
lods
adc
je
or
and
dec
in
push
sbb
adc
hlt
insl
sub
ss
data16
addr16
mov
pop
adc
outsb
jle
dec
lods
xor
push
mov
pop
pop
dec
nop
inc
sahf
cmp
or
push
sarb
call
mov
xor
bound
mov
xchg
mov
ret
sbb
mov
xlat
movsb
dec
aam
cmpsl
call
jmp
das
pop
push
pop
rcrb
adc
frstor
mov
mulb
int3
mov
jno
inc
test
fistpl
pop
adc
test
push
mov
sahf
icebp
xchg
xchg
jge
mov
sti
jno
or
xchg
out
lock
inc
xchg
decl
xchg
icebp
push
cld
mov
and
lret
mov
popf
hlt
fs
loopne
mov
arpl
pop
sub
dec
push
cmp
pop
xor
lds
add
cli
jle
adc
mov
or
push
rcrb
and
aaa
inc
in
dec
stos
sbb
pushf
or
cli
addr16
ret
push
sbb
mov
cld
sbb
cmp
fadds
cmp
ds
push
dec
push
and
jmp
xchg
sbb
addb
mov
ret
test
cld
out
cwtl
xlat
sbb
add
testb
or
and
mov
xor
loope
inc
cmp
pushf
push
xor
push
lock
and
out
adc
mov
and
push
xor
sbb
xlat
in
or
cmc
xor
je
fnstcw
andb
in
push
mov
scas
outsb
or
mov
flds
or
jp
stos
mov
jb
adc
jbe
lret
xchg
inc
mov
xor
jbe
loop
je
roll
arpl
test
push
push
pop
movsl
insl
lret
loop
ljmp
mov
lret
mov
imul
jmp
cli
inc
ffree
sub
pop
bswap
push
int3
xchg
push
jl
and
xor
xor
sti
in
add
ds
icebp
mov
mov
imul
mov
scas
lcall
movsl
push
js
ja
jae
adc
test
movsb
push
popf
int
push
push
sub
pop
dec
push
call
cmp
cltd
inc
icebp
pop
inc
pop
add
jl
mov
inc
loope
inc
lea
out
ds
enter
mov
out
sub
and
mov
xorb
pushf
inc
ficomps
sub
fcoms
mov
jecxz
jne
out
pushf
movb
or
xor
cli
push
lods
lahf
dec
std
mov
and
adc
es
cli
ja
sbb
sbb
inc
fbstp
popa
push
outsl
jecxz
sub
in
mov
mov
dec
mov
dec
jbe
mov
add
jge
inc
imul
mov
sub
rcll
fucomip
imul
jae
les
xchg
cmp
data16
out
mov
mov
xchg
retw
mov
sbb
push
mov
add
inc
inc
adc
jbe
adc
xchg
push
and
movsb
je
mov
jl
outsb
and
sti
inc
arpl
js
stc
mov
or
sbb
das
push
push
cmc
pop
pop
xor
jne
xor
mov
out
xchg
enter
and
mov
daa
mov
mov
enter
sub
sbb
cmp
xchg
scas
cli
sbb
stc
pop
mov
fcompl
pop
cwtl
cmpsl
dec
out
sbb
cs
sub
jg
enter
mov
push
fmul
xchg
lcall
xchg
daa
sub
cmp
gs
popf
pop
loop
ret
nop
call
and
mov
sti
fdivrl
cltd
pop
cmpsb
mov
push
jl
fs
fucom
sbb
xchg
cli
mov
jecxz
and
pop
mov
in
xor
stos
dec
sbb
icebp
sbb
dec
sub
push
aas
enter
jl
mov
add
test
mov
or
jmp
adc
stos
mov
jb
cli
nop
adcl
jl
loop
lods
clc
dec
loopne
or
push
mov
xchg
arpl
ret
mov
call
mov
or
pusha
cmp
cld
jg
test
push
daa
pop
scas
inc
icebp
sbb
in
ret
je
jecxz
scas
dec
or
stc
lds
mov
push
repnz
cmp
fsubrl
xor
mov
push
cmp
push
out
stos
push
adc
mov
cmpsl
or
or
pop
xor
cmp
cmp
mov
xor
push
adc
mov
sub
jb
fs
popa
test
rclb
mov
mov
dec
pushl
xchg
pop
inc
mov
sub
andb
ret
pop
pusha
ficoms
outsl
in
lcall
je
daa
notb
std
incl
push
xor
jbe
mov
mov
dec
xor
mov
int
outsb
jecxz
insb
fwait
cltd
addr16
aam
xor
xor
xchg
dec
into
adc
jecxz
fcompl
inc
fisubs
jo
jp
pop
je
fs
push
sub
lcall
dec
cmc
leave
jg
fs
ja
pushf
mov
mov
or
and
sub
add
and
add
adc
fsubr
cmp
jmp
jge
adc
dec
fimuls
subl
push
mov
jo
adc
xor
subb
jg
sbb
cli
xor
pop
mov
lret
adc
pop
mov
inc
push
inc
fwait
inc
dec
push
lret
mov
mov
jmp
adc
fwait
pop
push
lock
je
lcall
mov
push
aad
mov
xor
je
dec
and
cld
xchg
addl
jbe
je
mov
jmp
imul
test
cmp
bound
aas
movsb
lahf
pop
inc
dec
insl
lea
or
repnz
add
cwtl
call
cs
pop
aam
jle
inc
out
xchg
pop
test
lds
sbbl
push
lret
cmp
pop
or
and
aas
xchg
mov
add
mov
jg
add
aaa
in
lea
mov
push
dec
pushf
ljmp
xchg
jns
pand
mov
loop
inc
movsb
rolb
and
and
std
fs
xorb
js
cli
pop
jns
pop
adc
xor
shlb
incl
repnz
cmc
jmp
jle
lds
cmpsl
cmp
xchg
lcall
xchg
loop
decb
cli
ja
mov
dec
addb
ljmp
push
leave
pminub
out
cmpsb
stc
fisttps
adc
and
das
in
les
cwtl
mov
xor
in
cltd
daa
mov
cmc
inc
sbb
sub
dec
into
shrl
jno
pop
inc
jle
inc
mov
xchg
aas
and
in
adcb
fwait
or
mov
pusha
pusha
mov
jne
mov
mov
inc
imul
jae
enter
add
mov
hlt
and
pushl
lods
repz
jecxz
dec
ds
jg
repnz
cltd
in
movl
out
hlt
out
push
or
mov
rcrb
jns
jmp
daa
rorl
out
fiaddl
lret
das
stc
pop
enter
test
movl
icebp
loope
testl
xchg
mov
add
adc
jb
sbb
cmp
mov
add
cmpsl
mov
loop
and
cld
mov
adc
rorb
cmc
lea
movsb
pushf
lods
jo
dec
pop
cmp
and
fidivrl
fwait
adc
jmp
pop
add
insb
dec
pushf
push
mov
mov
and
cmpsb
dec
in
loop
lcall
mov
cmpsb
in
bound
mov
subb
daa
dec
push
mov
pop
jno
lret
das
xorb
mov
mov
rcll
sbb
mov
jnp
sbb
mov
cli
movsl
or
mov
xchg
test
orb
mov
inc
int3
call
mov
movsl
fdivl
push
in
inc
shr
cwtl
mov
xor
mov
movsb
adc
jl
rorb
sub
repz
mov
jno
jmp
jns
movsl
or
mov
xor
ror
sarb
cmp
jns
dec
mov
ja
and
ret
mov
push
fidivrl
or
xchg
movsb
push
lods
insl
jmp
stos
xchg
adc
lods
fs
cmpsl
jns
leave
sub
dec
pop
adc
cmc
sub
imul
adc
repnz
arpl
add
adc
and
and
and
xchg
cmp
sub
mov
clc
dec
adc
sbb
aam
inc
xor
mov
std
jp
and
aam
repnz
clc
loope
push
mov
clc
push
lcall
dec
push
or
push
aaa
sti
push
aas
jne
jnp
shlb
test
lock
cltd
push
push
int
iret
repz
stos
les
push
lea
adc
pop
sbb
ljmp
push
jae
stos
mov
pop
sbb
shll
dec
jmp
lods
push
loopne
pop
movsl
sbbl
enter
cli
rclb
mov
lock
inc
fwait
mov
pop
cmp
sbbb
icebp
iret
insl
movsl
push
filds
dec
push
adc
hlt
jmp
adc
mov
scas
xchg
mov
sbb
pop
hlt
or
das
cmp
pop
fs
jg
gs
in
cmp
call
push
aam
pop
aaa
push
mov
jmp
mov
clc
stos
cli
ds
enter
push
idivl
mov
add
sbb
cmpsl
adc
xor
sbb
pop
sbb
xchg
out
xor
inc
push
dec
rcl
cmp
mov
xchg
pushf
daa
fs
scas
mov
pop
sbb
loope
mov
fidivs
out
mov
out
je
into
mov
bound
call
xlat
mull
lret
jl
sub
add
movsl
shll
ja
ds
add
test
dec
out
and
push
add
loopne
sbb
fcompl
jmp
mov
stos
inc
adc
mov
xchg
mov
mov
imul
inc
jge
jns
jno
loop
jl
mov
sub
ss
and
sbb
cmc
or
data16
jnp
idivl
js
adc
adc
call
outsl
sbb
mov
dec
insb
push
leave
mov
xchg
loopne
iret
cld
mov
shlb
push
dec
jmp
mov
leave
jmp
test
jnp
adc
adc
xchg
adc
push
daa
xchg
push
dec
pop
pop
andl
pop
sub
sarl
add
stc
ficoms
fisubrl
pop
lods
push
out
outsl
jbe
add
int3
mov
mov
hlt
sahf
ret
outsb
jmp
ror
addr16
mov
pop
or
mov
test
neg
adc
pop
cltd
pop
inc
imul
js
xchg
loope
cmp
mov
call
cmp
fsubr
jg
inc
mov
ret
adcb
sub
push
jmp
insl
es
jge,pn
sub
cmp
xchg
dec
sub
insl
movsl
in
xchg
push
jl
mov
ficoml
inc
fidivrs
loope
xchg
addr16
arpl
cwtl
jb
lcall
les
inc
je
push
xchg
push
xor
out
popf
dec
cmp
outsb
gs
cmp
mulps
mov
push
daa
repnz
xchg
mov
ljmp
pop
push
xor
test
enter
lcall
daa
xor
xor
sarl
call
mov
addl
imul
test
adc
test
cmpsb
shrl
push
xchg
aaa
or
fisubl
arpl
mov
jmp
xchg
insl
sub
jns
mov
mov
mov
push
popa
popa
dec
adcl
loop
mov
xchg
cs
jl
or
mov
push
and
pop
popa
jno
enter
aam
adc
fldcw
sub
mov
cld
xchg
xchg
pop
push
jae
pop
notb
cli
mov
negb
popa
add
int3
shrb
das
or
test
push
xchg
fst
xchg
clc
adc
jbe
pop
adc
ds
adc
add
arpl
and
dec
cmp
push
xor
pusha
pop
filds
sub
and
fldcw
xor
xor
lret
inc
imul
push
xchg
lret
leave
mov
dec
loope
in
jle
lret
xchg
push
cld
xchg
lea
movsb
or
cmp
sbb
fsqrt
loopne
mov
inc
scas
push
cmp
jp
xor
in
lds
push
adc
jecxz
loop
sub
ret
bound
mov
cmpsb
stc
or
in
imul
push
ljmp
xchg
aas
inc
add
pop
mov
pop
divl
psrld
pushf
jecxz
cmpsb
std
jae
stc
mov
xor
xchg
lret
lcall
inc
pusha
jns
dec
sbb
push
loopne
daa
pushf
pop
xchg
jb
mov
xchg
add
rorb
in
mov
out
jo
jmp
pop
daa
inc
loop
ss
test
loope
push
jae
imul
insb
mov
and
jne
aas
mov
aad
ljmp
mov
jecxz
pusha
and
aaa
xchg
add
sub
or
sbb
rcrl
pop
cmp
in
jg
jmp
gs
mov
sbb
mov
mov
iret
sbb
push
jnp
mov
cmp
jmp
pop
dec
cld
insb
addb
in
jmp
fidivl
or
jne
call
xor
add
andl
aas
test
aad
lcall
pop
pop
int3
cld
dec
xor
xchg
jb
cmc
cli
or
xlat
mov
or
mov
mov
xchg
pop
xchg
inc
mov
cltd
cmpsb
xchg
inc
pop
scas
dec
insb
insb
mov
mov
add
lret
cwtl
jae
repz
cmp
fdivrs
ja
ret
lret
mov
pop
clc
mov
cmp
xor
and
inc
insl
icebp
mov
xlat
lret
js
jo
mov
xorl
pop
xchg
mov
jmp
cltd
jp
pop
sahf
fwait
sbb
jnp
push
jno
ds
popa
adc
pop
lods
cld
popa
dec
jo
mov
js
cmc
cli
push
mov
test
nop
sbb
or
mov
mov
loopne
fcoms
aas
pop
xor
sbb
out
or
lret
cmp
adcb
sub
arpl
xrelease
cltd
lods
and
sub
xor
shrl
sbb
int
ljmp
imul
cmp
xor
pop
addr16
xor
inc
mov
test
popa
add
xor
sbbb
pop
mov
xor
inc
push
push
pop
or
cld
jmp
xlat
hlt
mov
push
adc
js
sarb
dec
lods
push
inc
ljmp
xchg
sub
insb
adc
jne
xor
sarl
pop
mov
and
adc
or
lret
push
cmp
nop
mov
ret
test
push
inc
mov
aam
data16
cwtl
mov
loop
lret
stc
js
shl
mov
xchg
scas
mov
loope
iret
inc
xor
fistl
jge
addr16
scas
adc
aam
daa
dec
les
dec
hlt
cmp
jo
cmc
sub
ret
push
out
sbb
xchg
fldt
inc
cmpsl
sub
and
jle
jns
mov
nop
xchg
mov
sbbl
in
aad
jmp
mov
stos
out
andl
sbb
clc
cld
enter
cmp
jmp
xor
jbe
add
scas
push
fcomip
daa
ljmp
jl
nop
dec
xchg
pop
pop
fsubs
push
roll
outsl
or
iret
imul
mov
push
sub
cmpsl
or
out
dec
sbb
loope
jbe
push
pop
imul
sbb
xchg
call
push
jg
pop
repz
push
mov
or
adc
inc
loope
push
not
das
jnp
cmp
sub
sub
cmpsl
std
test
or
rcl
push
stos
outsb
arpl
sarl
sub
and
insl
mov
sbb
cs
call
hlt
fisttpl
pusha
into
and
add
jo
inc
xchg
push
xor
repz
outsl
fisubl
ja
adc
sbb
stos
xlat
inc
pop
jmp
fsubs
inc
lea
mov
or
call
mov
jle
add
xor
mov
jo
insb
push
or
push
stos
cmpsb
push
pop
xchg
and
mov
mov
decb
mov
cmc
mov
jl
adc
cwtl
adc
pop
xchg
add
test
adc
dec
add
xor
out
adcb
imul
lret
cmp
jb
sbbb
fisttpl
dec
jmp
lret
fwait
push
xchg
adc
mov
sub
cmpsb
pop
and
pop
cmp
inc
test
sbb
cmp
xlat
shll
xchg
mov
loopne
lcall
notl
test
add
gs
scas
mov
xchg
sub
mov
test
pop
pop
sub
lahf
and
or
cmp
in
inc
inc
and
inc
cmp
mov
push
loop
aam
iret
mov
das
xorb
sbb
jb
mov
push
jno
cmp
xchg
shl
sbb
in
push
nop
or
and
xor
cmpsl
es
mov
mov
or
out
pushf
movsb
cwtl
daa
sti
call
dec
and
mov
mov
pop
push
mov
mov
add
aas
mov
jb
ror
bound
dec
mov
pusha
and
fstpt
movl
addb
add
loopne
mov
push
adc
xor
or
ljmp
and
imul
rep
imul
cmp
push
xchg
xchg
inc
lods
shr
popf
mov
lret
dec
or
aas
lahf
xchg
ficomps
rcl
test
in
shll
leave
std
sub
xor
pop
loope
mov
inc
adc
add
mov
cs
xchg
pop
std
ljmp
insl
mov
jle
shrl
test
sub
dec
push
inc
cli
xor
rol
lahf
sub
int3
cmp
push
out
mov
pop
in
out
shlb
stos
or
jae
divl
inc
cmpsb
ds
mov
sub
iret
dec
iret
rcrb
loope
cmp
hlt
xorl
cmp
cwtl
adc
sub
mov
pusha
lods
xchg
gs
xchg
jle
push
add
mov
je
lock
mov
push
push
es
inc
add
mov
and
stos
jle
nop
ds
sarl
and
lcall
pop
scas
mov
sti
movsb
outsb
add
mov
jb
mov
or
iret
add
mov
les
inc
arpl
arpl
imulb
scas
mull
xor
and
movsb
jbe
jno
es
xor
sub
rol
arpl
or
dec
and
mov
dec
fnsave
lcall
sub
pop
sti
outsl
cmp
stc
xor
sahf
cmpsl
sbb
fcompl
out
movsb
adc
fwait
into
mov
sub
adcb
xchg
bound
sbb
movsb
dec
pop
lea
sub
jno
ljmp
mov
push
lret
xchg
sub
icebp
rclb
xor
and
pop
jae
cmp
les
adc
mov
xchg
lods
jg
cmp
and
mov
lock
aad
ljmp
add
mov
jns
jl
popf
lea
in
sub
cmp
rorl
pop
jmp
cmpxchg
push
mov
pop
cmc
popf
cmpsl
inc
incl
lods
mov
dec
into
pop
push
xchg
stos
pop
push
push
in
scas
xchg
sub
enter
dec
ss
int
add
cwtl
mov
setns
mov
leave
imul
cmpsb
and
sub
jmp
aad
les
jb
jmp
jne
mov
cmp
rep
or
mov
mov
and
jb
xchg
leave
int
sbb
mov
subl
bound
movl
push
icebp
pop
mov
es
jp
push
inc
pop
mov
lcall
mov
jae
mov
jmp
int3
mov
xor
sub
out
sarb
push
adc
or
ljmp
jno
push
xor
mov
cli
shll
aad
lock
mov
pop
loop
mov
fnstcw
cmp
sbb
dec
test
data16
xchg
add
sbb
inc
lock
cwtl
dec
add
jmp
inc
pop
sbb
inc
push
sarl
mov
movsl
push
sub
mov
push
jge
cli
or
addr16
cmpsl
lods
mov
cmc
shlb
xchg
mov
jle
repnz
fdivrs
mov
insl
pop
and
out
xchg
ds
push
cmpsl
pop
fwait
scas
adc
mov
and
dec
pop
jbe
adc
mov
jnp
push
dec
roll
stos
jmp
add
cmp
mov
push
mov
xor
arpl
cmpsb
dec
xchg
roll
aad
cmpsl
icebp
inc
rol
or
test
aad
push
aaa
mov
jmp
jecxz
in
cmp
adc
movsl
xor
sahf
enter
cmp
setl
sahf
adc
clc
lds
adc
pusha
rcrb
and
push
movsb
fistl
aas
cld
aaa
std
mov
xchg
outsb
sbb
mov
cmpsl
sub
lds
decl
push
pop
push
frstor
cmp
arpl
subl
shlb
inc
in
push
aam
mov
cli
je
stos
mov
fdivl
sarl
sbb
jp
in
inc
bnd
mov
pushf
faddl
faddl
jp
mov
push
in
mov
pusha
call
cmp
push
int3
adc
add
push
adc
pop
es
sub
dec
std
cwtl
clc
xchg
adc
loop
enter
sub
in
shlb
xchg
and
sbb
popa
dec
stc
fisttpl
fcoml
roll
test
bound
test
xor
mov
push
adc
mov
dec
or
mov
jnp
les
or
xor
pop
cmp
push
push
xor
jae
inc
pop
loopne
cmpsb
loop
and
inc
roll
mov
repnz
adc
or
inc
lods
orb
adc
mov
test
in
movsl
dec
sub
in
std
xor
sbb
mov
fldenv
adc
scas
inc
test
mov
mov
je
push
rorl
popa
dec
or
in
cmc
repnz
push
addr16
push
popa
push
dec
push
cwtl
and
mov
inc
sub
inc
sbb
ret
addr16
dec
inc
xor
jmp
mov
push
dec
or
push
pushf
data16
out
lock
les
stos
call
cli
call
cmp
xchg
push
testl
out
jno
mov
icebp
data16
mov
lea
daa
mov
xchg
lret
bts
enter
fdivrp
or
inc
dec
fsubrl
inc
and
cld
in
in
or
dec
sbb
popa
jecxz
les
mov
data16
out
bound
stc
cmp
mov
or
loop
sahf
jb
and
ljmp
cmp
xor
or
xor
lods
imulb
imul
ret
xor
jg
add
xor
or
pop
cmpsl
outsl
inc
xchg
pop
test
mov
xor
filds
cltd
jo
cwtl
cmp
fadds
xor
sbb
jmp
stc
insb
inc
xor
int3
incl
jb
cmp
sarl
popf
pop
push
push
mov
dec
test
inc
jns
add
push
pop
call
pop
repnz
arpl
push
or
push
call
dec
sub
mulb
sbb
cmc
outsl
or
mov
add
jl
xchg
faddl
scas
std
cmp
xor
cmp
adc
outsl
cmc
shll
fstps
push
sahf
ret
pushl
mov
xchg
and
add
jb
or
shl
fcoml
fwait
or
sarl
aas
fcmovnbe
push
adc
adc
in
in
ja
jp
lahf
sbb
push
cmpsb
fld
sub
adc
adc
sti
pop
and
mov
fs
xor
cmp
xchg
jo
movsb
lods
sarl
loope
jle
mov
jg
out
rorl
mov
mov
inc
jno
inc
out
js
jmp
and
inc
xchg
and
test
stos
sub
test
push
mov
outsb
mov
lahf
ret
inc
push
mov
sub
and
dec
lea
adc
out
mov
cmp
xchg
idivb
xchg
push
out
sbbb
mov
out
fsubrs
aam
lahf
adc
call
cmp
mov
push
stos
xor
loope
icebp
add
add
adc
popf
fistpl
std
clc
or
adc
xchg
andl
sub
or
pop
gs
fisttpll
xchg
fdivrs
push
adc
jmp
lret
mov
mov
shll
push
xchg
mov
jno
adc
roll
add
jmp
push
aas
aaa
sbb
int3
adc
insl
cmp
iret
add
jo
adcb
cmp
sbb
int
mov
xchg
aaa
data16
rcll
xchg
jmp
dec
repnz
or
es
pop
aaa
sbb
mov
inc
jecxz
add
xor
inc
pusha
push
mov
mov
movsb
mov
pop
mov
sub
pop
sbb
sahf
icebp
nop
loope
nop
addb
xchg
test
out
hlt
push
imul
jbe
or
pop
adc
adc
stc
out
imulb
jns
or
inc
ljmp
xchg
pushf
loope
in
mov
pop
stos
xor
cmp
gs
push
insb
sub
cmp
std
out
mov
jae
in
test
jae
pop
dec
sbbl
test
sbb
mov
ss
bound
scas
inc
xchg
insb
dec
pop
inc
push
int
or
fstps
sub
xor
dec
addr16
jb
lret
iret
inc
and
mov
insl
lds
lods
mov
and
mov
inc
or
dec
sub
lahf
stc
push
xchg
xchg
push
ffreep
xchg
or
jbe
loop
push
xchg
push
lock
adcb
call
sbb
mov
gs
add
xor
pop
in
dec
inc
xor
and
dec
mov
lock
sahf
das
xchg
dec
movsb
lret
xchg
pusha
popf
pop
mov
mov
ljmp
in
daa
mov
push
into
sub
mov
dec
xor
mov
loop
and
add
fimuls
movb
sahf
or
addr16
sub
cmp
cld
popa
or
dec
jl
pushf
pop
sbb
mov
imul
fwait
lret
cltd
and
cmp
push
add
xchg
sbb
scas
cmp
leave
imul
jl
ficoml
addr16
repz
push
xchg
sti
daa
test
and
ds
out
lahf
dec
out
aam
inc
mov
sbb
sti
sub
insb
scas
mov
inc
push
xlat
andb
mov
jle
add
inc
js
jge
out
pop
add
andb
fnstsw
fcompl
cli
sbb
xor
jmp
inc
rcl
arpl
cmp
xlat
inc
inc
jo
imul
mov
cmp
incl
mov
cwtl
popf
xchg
pop
xor
popf
into
push
mov
mov
pushf
jecxz
lret
push
das
lcall
xor
fstpl
stos
jb
cmp
shrl
or
je
aad
shl
and
mov
jl
jnp
add
jecxz
test
push
push
or
lret
jp
mov
icebp
pop
mov
js
push
push
sbb
imul
sub
jle
fcomps
xlat
adc
xor
shlb
mov
lds
wrmsr
xchg
mov
mov
adc
push
xor
fdivl
jb
cltd
xchg
in
dec
shll
in
jb,pn
mov
ficompl
iret
inc
xchg
cltd
add
mov
inc
sbb
ja
and
push
jbe
mov
subb
push
and
dec
xchg
sbb
es
jno
dec
mov
out
icebp
je
cld
repz
adc
sti
cli
adc
cmp
int3
or
dec
push
cmc
xor
ficoml
or
out
cmp
sar
jg
pop
pop
das
movsb
or
ss
xchg
dec
idivl
cmp
shlb
out
subb
popa
pushf
mov
mov
xchg
mov
inc
stos
or
insl
aad
aad
inc
add
fidivs
neg
sub
cmpsb
xor
sbb
ss
adc
jmp
outsb
fisubl
sub
sbb
sub
cltd
fdivs
mov
fidivrl
pop
cmp
dec
jmp
dec
test
stc
testb
cmpsb
testl
pushf
push
out
cli
xor
xor
addr16
into
nop
sbb
xor
jns
out
mov
push
pop
scas
popa
test
or
sbbl
mov
int3
push
mov
movsl
in
cld
xor
xor
inc
xchg
and
jp
roll
mov
cs
ss
xor
repnz
jecxz
mov
cmpsl
and
imul
push
xlat
dec
push
mov
insb
jmp
mov
roll
mov
jbe
popf
les
xor
cli
xchg
jo
sub
mov
mov
and
repz
nop
push
cmpb
andl
movsb
xbegin
jmp
adc
jne
in
incl
in
ret
add
repz
mov
push
mov
aas
ds
pop
cli
in
daa
pop
jmp
lock
stos
push
jmp
lds
and
jmp
nop
repz
push
add
lret
xor
fildll
std
cmc
cmp
mov
fwait
push
shll
and
sub
ret
adc
jns
xchg
push
js
and
inc
out
in
pushf
jmp
int3
pop
aam
pushf
add
data16
imul
xor
movsb
sub
nop
lock
pushf
push
bound
outsl
adc
sahf
test
push
jl
popa
adc
mov
jno
mov
xor
icebp
pop
mov
inc
pusha
dec
mov
hlt
test
and
lret
das
pop
test
es
gs
cmp
sbb
cmp
js
jnp
outsl
int
xor
in
insl
pop
ljmp
inc
stc
lock
jb
mov
sarl
pop
pop
mov
jns
ja
test
xchg
inc
lret
jns
jmp
fwait
mov
clc
jnp
lret
rorl
pop
iret
dec
adc
test
rcl
iret
cmpsb
xor
mov
imul
repz
xchg
jns
rcr
cld
out
int
clc
add
sub
xlat
pop
ja
xor
dec
data16
push
bound
fwait
pop
pop
dec
and
fdivl
pop
jae
cltd
imulb
inc
lods
and
test
mov
ret
add
movsl
mov
sub
les
mov
xor
mov
data16
iret
aas
mov
push
push
iret
lahf
les
cmpsl
fyl2xp1
jmp
mov
push
mov
xchg
push
std
fistpll
push
dec
repz
mov
fwait
jb
js
mov
hlt
int
jo
ret
into
in
lods
ret
mov
aam
adc
pop
add
inc
add
xorb
mov
ds
outsb
dec
xor
inc
xchg
lock
shlb
fisttpl
sbb
push
xchg
pop
and
mov
mov
nop
pushw
lock
and
inc
dec
mov
add
out
mov
lahf
fimuls
ss
addr16
cmp
bound
leave
pop
push
cmp
bound
push
cwtl
inc
addr16
dec
xchg
lret
popf
repnz
popa
cmp
dec
xchg
flds
adc
ljmp
or
jecxz
hlt
lret
loopne
ja
fbld
xchg
mov
imul
jge
jae
mov
lret
loop
mov
mov
test
fbstp
xor
lret
or
mov
add
push
adc
daa
mov
add
push
adcl
movsl
inc
es
sti
ret
les
mov
aad
xor
pop
mov
mov
stos
push
outsl
jge
stc
les
mov
mov
pop
stos
dec
jne
repz
in
loopne
xchg
popa
ds
ja
mov
sbb
pop
mov
push
lea
fdivl
xchg
movsb
xchg
clc
mov
nop
lcall
push
sbb
imull
cltd
adc
test
iret
out
push
xor
dec
shl
adc
out
sub
popf
or
decb
int
xor
imul
jecxz
mov
add
repz
sbb
les
jg
popa
fstpt
out
xor
and
jp
ljmp
push
mov
push
jmp
repnz
xchg
pop
aaa
imul
mov
mov
daa
shrb
dec
pop
fcomi
add
loope
or
loop
ja
mov
jp
sub
js
loop
lret
int3
in
mov
aam
inc
push
ss
xchg
mov
test
jmp
addr16
aam
mov
jl
cmc
xor
ret
cmp
dec
scas
pop
cmc
sub
add
push
gs
sbb
mov
mov
xchg
stc
mov
inc
sbb
jle
and
xor
mov
outsl
addl
into
rcrl
js
adc
dec
testb
bt
cmpsb
daa
fwait
xor
mov
or
int
xor
xchg
and
das
in
and
in
leave
dec
jne
je
jle
mov
mov
cmp
adc
sbb
dec
ds
insb
jb
pop
jne
je
pop
adc
in
pop
jg
cld
mov
stos
inc
lcall
mov
or
stos
sbb
test
cltd
lahf
push
add
pop
int
add
sbb
shlb
in
int3
inc
cwtl
or
mov
pop
lds
lcall
jl
cwtl
adc
mov
andl
add
lock
divb
mov
and
fnsave
popf
pop
or
dec
cmp
sbb
loopne
in
pop
xchg
shll
sub
dec
mov
lds
add
mov
mov
std
push
loope
mov
shrl
movl
sti
mov
xor
lods
and
mov
in
or
sbb
add
in
out
mov
test
out
adc
aas
mov
fmul
or
int3
sti
mov
mov
dec
fidivrl
jo
dec
adc
test
lea
stc
sub
add
jns
mov
sub
popa
cmpsl
or
jge
cltd
scas
or
or
das
xor
xor
inc
or
xor
adc
jbe
mov
add
sub
sbb
icebp
jne
int
pop
shl
test
nop
dec
inc
movsl
inc
xchg
push
test
imul
push
test
sti
daa
es
fsub
ss
jae
add
mov
mov
push
xchg
sti
dec
mov
mov
jmp
push
xor
inc
push
lods
test
outsl
outsl
inc
push
or
push
xchg
movsl
ror
mov
in
add
mov
lahf
addr16
test
cmpsb
data16
outsb
pop
jmp
mov
daa
push
xchg
pushf
daa
enter
frstor
and
lahf
cltd
cmp
ja
gs
pop
test
popf
ss
pop
adc
lahf
stc
dec
sbb
add
jp
cmp
outsl
repz
and
mov
lea
xor
testl
mov
in
cmpsb
stos
mov
nop
xchg
repz
push
int
fs
jns
or
mov
adc
sbb
jmp
jno
xchg
insb
lock
and
and
xor
mov
push
push
ljmp
xchg
mov
movsl
loop
sbb
aas
xor
ss
arpl
test
mov
cmp
pop
cmpsl
pusha
js
loopne
sbb
test
out
mov
pop
push
xchg
fdivrl
lret
addr16
fstps
adc
dec
in
ds
ret
scas
pop
push
dec
movsb
mov
mov
push
xor
insb
sti
out
adc
insl
cmp
mov
lahf
enter
lret
imulb
lahf
adc
iret
mov
mov
jb
push
or
inc
sahf
or
xchg
inc
and
push
push
jae
and
aas
cli
stos
mov
popa
push
dec
xchg
mov
mov
adc
divl
lods
jbe
movsbl
cs
push
mov
mov
hlt
jno
add
decb
mov
int
cwtl
jecxz
push
mov
hlt
inc
lds
ljmp
sub
dec
out
incb
icebp
dec
push
es
fimull
dec
sbb
sahf
imul
mov
or
and
sti
rcrl
pop
imul
sub
sub
push
int3
popa
pop
lock
mov
pop
lcall
and
loopne
adc
adc
mov
inc
in
pushf
mov
jl
cld
inc
sbb
inc
xchg
push
mov
push
jnp
mov
dec
xchg
xor
add
in
test
xchg
bound
xor
inc
sahf
push
dec
cmp
add
mov
es
mov
jmp
in
jecxz
sti
adc
xor
sahf
pusha
lcall
addr16
dec
push
in
mov
jbe
idivl
jg
xor
sarb
js
insb
setne
pop
jo
jp
pop
jmp
cld
leave
aaa
ficoms
mov
or
dec
mov
or
ret
xchg
bound
bound
jg
shl
scas
addl
jb
push
es
jg
or
mov
jmp
les
movsl
cmc
sub
xchg
aas
cmpsl
inc
lret
jo
adc
cmp
gs
push
repz
loop
outsl
leave
pop
sahf
mov
aad
das
mov
xor
js
mov
fdivl
jae
repnz
cmp
jmp
jnp
nop
mov
jae
cs
lds
adc
xchg
and
add
cs
mov
addl
fcmove
sub
mov
lret
sarl
lods
mov
aad
xorb
cli
addr16
cli
insl
es
mov
cmc
xor
and
mov
add
sub
popa
xchg
inc
sub
insl
adc
mov
das
int
push
adc
or
jne
addb
pop
jecxz
fisubrl
xor
inc
jns
rcll
test
nop
add
pop
xchg
cld
cmp
jecxz
std
es
xor
into
jns
test
mov
shlb
jecxz
xor
push
das
test
mov
adc
cmpsl
data16
pusha
add
inc
aad
xchg
inc
rcrl
ds
hlt
and
dec
add
push
inc
fs
out
fisubrl
add
dec
mov
lods
xor
mov
movsb
stc
add
fcom
enter
lahf
fs
out
cwtl
lret
rorb
sti
jne
inc
loope
sub
fsts
dec
mov
add
jmp
xor
pop
pop
test
and
push
out
pop
ffree
frstpm(287
push
lret
subb
out
ret
fs
test
jle
mov
pop
cs
pop
je
in
fsts
idivl
jae
dec
push
mov
inc
cmpxchg
mov
div
and
ds
aas
aas
enter
mov
adc
pop
pop
insb
scas
xchg
pop
outsl
ja
clc
lahf
nop
jp
add
stos
mov
xor
imul
or
daa
mov
es
and
xchg
daa
pop
cld
jo
and
outsb
loopne
aaa
push
mov
xor
inc
int
or
adc
add
fiaddl
xor
mov
pushl
ficoms
jnp
mov
mov
xchg
in
js
add
mov
mov
ss
xchg
repz
push
test
outsb
jbe
outsb
pop
dec
aaa
inc
mov
lahf
sbb
sub
mov
add
fildl
inc
adc
pop
hlt
loopne
sub
add
push
nop
insb
cmc
sub
push
push
xor
inc
rcll
jge
adc
inc
rcll
jl
xchg
jno
cmp
pop
in
jge
dec
push
hlt
mov
popf
sbb
arpl
in
cltd
pop
lcall
jae
out
push
repnz
jo
rcrb
cmc
cmc
loope
out
sbb
jg
push
sbb
push
mov
sbb
mov
dec
test
mov
cmp
mov
inc
fstpl
jo
adc
fists
cs
xlat
pop
and
bound
scas
sbb
jo
pop
cli
or
mov
fcoms
push
cmp
pop
xchg
adc
cmp
inc
pop
idivl
push
mov
push
loop
fists
rclb
fmul
dec
mov
les
aaa
lahf
mov
mov
clc
mov
add
mov
dec
adc
stos
add
flds
jg
adc
fbld
out
jmp
pop
add
ret
xor
rclb
idivb
mov
std
fidivrl
scas
gs
fisttps
clc
inc
inc
movsb
fimuls
mov
sub
gs
icebp
lea
add
lea
ret
out
hlt
add
inc
xchg
or
daa
andl
pop
xlat
repnz
int3
test
inc
fwait
imul
push
jnp
and
pop
stc
int
aad
into
stos
inc
aam
add
push
test
imul
sbb
xchg
aaa
or
cmc
adc
fildl
fldl2t
jnp
lea
sbb
adc
leave
ja
int3
xchg
andb
ret
cli
add
insb
subl
int
nop
enter
shlb
sbb
mov
in
aaa
idivl
push
out
push
push
mov
cwtl
jge
stos
and
sbb
inc
xchg
je
paddusb
sar
ljmp
mov
call
clc
fidivl
mov
jmp
mov
dec
int
mov
subb
div
sbb
repz
jnp
and
out
ss
mov
imul
add
repz
add
outsl
jecxz,pn
mov
cld
sub
popf
pop
push
insl
enter
push
popa
push
lea
js
pop
push
fdivrs
popa
cmp
cli
cld
std
inc
cmp
mov
sbb
cmp
sahf
in
mov
sub
push
pop
add
or
xlat
mov
gs
stos
in
cmpsb
call
push
push
aam
xor
add
lcall
mov
fistpl
repz
adc
mov
pop
mov
adc
xchg
inc
adc
mov
lahf
test
xchg
xor
shr
inc
sbb
pop
xor
sbbb
movsl
aam
push
das
or
sbb
inc
inc
loop
fwait
clc
outsb
shll
dec
fldl
push
xchg
push
and
fdivs
ret
adc
xchg
pop
mov
jnp
or
dec
hlt
in
push
in
jne
xor
cs
pop
adc
call
lcall
jb
cmp
cmp
cld
pop
cmp
mov
mov
popf
aad
push
jle
flds
or
pushf
inc
or
insb
fldenv
sbb
adc
push
mov
lret
test
ret
mov
out
xor
xchg
sub
or
fcmove
add
mov
mov
cmpsl
mov
test
and
jns
jbe
inc
cmp
scas
mov
xor
test
jbe
aam
mov
nop
xorb
or
sub
push
out
jo
cld
and
sub
jmp
daa
inc
stc
insl
aaa
bound
fdivp
sahf
addl
test
stc
cmp
pop
mov
or
lds
sahf
popf
pop
test
das
pop
pushf
icebp
add
je
lds
fbld
xor
jle
mov
les
fldenv
mov
sbb
pop
je
dec
mov
xor
push
add
addb
mov
lret
and
jae
mov
cmp
sysenter
inc
sbb
jo
aas
cmpsb
push
bound
xchg
js
rcrb
fadds
std
pushf
jno
jp
jnp
call
inc
mov
cmpsb
inc
in
in
or
enter
jb
popa
test
mov
in
adcb
mov
inc
pushf
jge
sub
push
mov
add
sbb
in
or
jmp
sbb
jl
mov
push
into
jbe
mov
jmp
lods
mov
sub
cmpsb
lahf
xor
add
movsl
or
insl
enter
loopne
loope
and
insl
adc
mov
je
int3
stos
xchg
mov
in
dec
std
ffree
jne
mov
movsl
mov
push
andb
sbb
mov
aas
sbb
dec
or
sti
mov
mov
fisttps
shrb
add
dec
push
int3
lret
xor
inc
push
mov
lock
stos
loop
adc
popa
pushf
jle
cld
mov
lret
inc
sar
ret
mov
xchg
fistps
ds
xchg
adc
mov
ficoms
dec
iret
xlat
pop
xchg
or
aam
xchg
and
stos
dec
imul
lods
shrl
insb
sub
add
aaa
mov
shll
or
mov
mov
daa
test
cmp
in
and
lcall
subl
in
or
repnz
ret
movsl
nop
aaa
push
mov
sahf
fstpt
test
lods
sbb
fidivrs
mov
push
or
pop
ret
fstl
into
adc
push
sub
loope
xchg
dec
dec
adc
test
fwait
and
pop
mov
dec
pop
push
cld
push
loop
cmc
add
insb
mov
push
xchg
loop
xor
ret
imul
leave
mov
fisubl
cmp
mov
pushf
xor
jl
js
lea
fcomps
inc
jp
pushl
sbb
jmp
pop
ja
out
dec
test
and
and
ret
mov
mov
xor
les
cmp
incl
cmp
add
inc
movsb
mov
adc
mov
test
cmpsl
add
aas
add
inc
cmp
rcll
enter
push
sbb
jno
xchg
push
sub
fmull
pop
inc
ret
dec
jne
les
cmp
inc
or
push
filds
shll
icebp
mov
orl
or
mov
xchg
xor
add
jmp
sahf
aaa
xchg
pop
outsb
sub
mov
cmp
xchg
faddl
in
lahf
call
repz
push
in
lea
push
push
pop
cs
out
mov
xchg
loopne
mov
divb
xor
or
add
pop
cmpsb
inc
sarb
test
insb
repz
lcall
test
add
xor
mov
subb
sbb
push
scas
andl
and
or
movsb
add
imull
mov
frstor
add
lock
rclb
setns
loope
pop
jne
jnp
adc
inc
cs
fcmovnbe
dec
sbb
stos
push
stos
orps
adc
mov
jmp
inc
mov
sbb
inc
mov
inc
shll
or
xchg
stos
nop
jp
sbb
iret
mov
test
jnp
cmp
adc
xchg
in
and
out
push
subl
loopne
add
mov
pop
arpl
push
add
mov
xchg
jne
test
leave
mov
adcb
jbe
xchg
cwtl
xor
lret
movsl
popa
adc
loope
arpl
gs
xor
movsb
ja
mov
shlb
xchg
or
fsubrl
mov
daa
outsb
dec
sub
data16
push
shll
ljmp
or
inc
jb
lret
mov
inc
test
std
push
mov
or
jmp
xchg
mov
lods
mov
or
je
data16
cmpsb
sbb
repz
stos
pop
fdivr
sbb
lock
negl
out
rorb
fs
repz
inc
pushf
or
xchg
adc
and
mov
or
or
movsb
stos
add
pop
incb
addr16
dec
rclb
addr16
pushf
jno
scas
xor
mov
mov
sub
out
testb
jmp
out
imul
push
adc
push
pop
push
loope
pop
push
out
inc
fidivrl
out
jno
pop
mov
roll
pop
les
ljmp
sbb
inc
pop
sub
das
std
loopne
sarl
sub
jno
out
push
jae
and
mov
inc
popa
movsb
lods
mov
pop
std
fmull
push
out
push
mov
lea
adc
sub
jnp
mov
daa
mov
cmpsl
movsb
sbb
cmc
cmp
mov
push
imul
dec
inc
jno
inc
dec
mov
test
ret
mov
xor
mov
insl
js
out
sbb
mov
daa
inc
mov
pop
jnp
movsb
fistl
scas
add
int
cld
dec
fmulp
cmp
pop
ds
aam
roll
mov
int3
out
dec
or
and
call
sbb
in
dec
inc
sub
test
and
out
dec
cmp
leave
outsl
and
jge
add
test
xor
adc
pop
leave
adcl
lea
test
add
cmp
aaa
movsl
sbb
pop
hlt
test
mov
clc
pushf
aam
pop
lcall
mov
inc
jne
inc
out
ret
shlb
iret
cmp
jns
cmp
adc
xchg
repnz
sbb
lods
movsl
mov
add
mov
in
pop
fsincos
and
das
jge
ficoms
fstps
xor
insb
adcl
imul
sub
cmpsl
ljmp
push
es
cli
pop
cmp
hlt
and
iret
adc
mov
mov
out
sub
cmpsb
dec
add
test
dec
adc
enter
or
lods
sbb
test
testb
es
and
les
jge
xchg
push
fisubrl
sbb
fcoml
xor
icebp
mov
mov
icebp
or
cmp
in
js
push
xchg
jo
pop
test
repz
push
xchg
inc
xchg
rol
mov
fwait
jp
sub
xor
sahf
mov
imul
ja
fisttps
iret
data16
mov
test
mov
push
or
daa
jecxz
mov
cmp
pop
push
out
inc
dec
lods
test
push
iret
jmp
push
test
fsubrs
mov
dec
out
xchg
enter
clc
out
es
mov
imul
lcall
scas
and
mov
stos
test
rcll
ja
jns
cltd
hlt
or
lds
push
mov
out
std
adc
cs
std
jle
mov
xchg
mov
mov
out
push
xor
mov
mov
cmp
pop
clc
arpl
clc
sbb
stc
cmp
pop
add
femms
and
cmpsb
int3
sbb
add
push
test
adc
add
out
jnp
jle
movsb
add
pop
in
inc
lret
adc
push
jnp
sbb
in
arpl
or
and
push
mov
push
mov
fdivrp
outsl
xchg
sub
jle
mov
aas
xchg
sub
clc
push
dec
cltd
test
ror
xor
pop
add
fptan
mov
jae
aam
out
push
adc
and
jnp
dec
or
xchg
mov
packssdw
fdivl
sub
gs
subl
inc
push
cmp
mov
ds
repz
pusha
movsb
lret
xchg
jecxz
leave
mov
ljmp
fsts
xor
mov
cmp
fcomps
dec
inc
push
xchg
xchg
xor
loop
loopne
dec
call
fnsave
data16
sub
addb
push
outsb
shrb
inc
adcl
mov
adc
and
pop
sbb
jmp
popa
out
mov
punpcklbw
and
xchg
arpl
sti
add
pop
es
in
push
sub
add
xchg
adc
nop
imul
andb
insl
dec
inc
and
cmpl
hlt
aaa
cmp
pop
jmp
fbstp
fdivr
dec
sysenter
idiv
test
cmp
arpl
xchg
add
dec
jne
sub
xor
pop
fstpl
sub
inc
push
enter
lcall
cmpsb
int
js
addr16
popf
mov
sarb
inc
inc
mov
fisttps
sub
and
mov
imul
and
shl
mov
cwtl
or
icebp
mov
xorl
add
inc
test
pop
cmp
ja
xor
rcll
mov
es
jmp
movsb
int3
loope
xchg
cmpxchg
xchg
push
movsl
cltd
sahf
mov
mov
jg
cmp
mov
sbbb
hlt
pushf
aad
sbb
or
mov
push
or
aas
ja
fcomps
dec
pop
push
pop
lret
jo
xchg
in
pop
adc
in
orl
cwtl
mov
mov
out
mov
clc
mov
idivl
adcl
xor
sbb
out
jg
repnz
cmp
xor
jae
mov
jmp
clc
ret
xchg
inc
mov
out
stos
cmp
fdivrl
push
adc
sub
repz
lahf
notl
repnz
add
mov
cmc
mov
push
rolb
dec
into
xor
mov
dec
dec
adc
aas
lea
sbb
xlat
mov
stc
test
lahf
dec
xorb
xor
xor
push
repnz
pop
jno
lret
loopne
pop
sub
lahf
sbb
sub
push
shlb
enter
fdivr
mov
int3
imul
es
push
pop
mov
shlb
in
xor
adc
jns
xchg
leave
lds
addr16
add
push
sbb
xchg
popa
xor
dec
sbb
test
or
arpl
xchg
xor
outsb
js
push
dec
or
cmpsb
cmpsl
test
push
pop
adc
pop
sbb
mov
dec
sub
add
mov
call
scas
shrb
rcrl
jae
jg
xor
sbb
mov
std
xor
cmpl
push
push
xor
sbb
fdivrs
push
icebp
hlt
mov
jg
jp
mov
out
ja
dec
dec
scas
loop
jbe
cmp
jp
aam
ret
xchg
dec
mov
push
shlb
sub
in
cld
cmp
xchg
cmc
and
outsb
mov
push
or
in
fdivrs
jle
dec
div
push
pop
dec
repnz
and
cmp
push
xor
loopne
dec
lret
push
repnz
jmp
int
scas
lods
stos
jns
cmc
add
lahf
adc
mov
pandn
roll
ret
push
mov
dec
mov
lods
jmp
fisttpll
jno
in
out
lock
jnp
inc
push
mov
int
out
cs
mov
in
dec
xor
xchg
pop
sbb
shrl
add
movsb
jecxz
jecxz
add
dec
or
xchg
xor
ffreep
pop
inc
mov
ja
pop
xchg
outsb
lods
ficoms
xlat
cmp
das
lret
mov
jae
aas
cmp
cmp
mov
fstps
cmp
jb
mov
hlt
imul
sahf
dec
rcrb
lahf
cld
flds
sahf
ret
mov
shll
jmp
ss
cmpb
mov
outsb
bound
lcall
jb
pop
fwait
mov
orl
movsb
jns
add
mov
flds
sbbl
je
lret
inc
ret
pop
icebp
imul
bound
int3
icebp
in
xor
outsl
movsb
enter
sub
shlb
cmp
push
fs
cld
bound
inc
cmpsb
inc
push
inc
xchg
aam
fcomps
cmpsb
popf
dec
add
rolb
test
and
xchg
in
popa
int
adc
xchg
ss
or
or
mov
push
into
test
xor
xchg
test
fstpt
add
add
stos
cli
push
dec
and
in
shlw
push
mov
pop
pop
out
mov
mov
or
push
popf
bound
inc
mov
pop
mov
mov
sbb
addr16
push
adc
icebp
xchg
shlb
test
sbb
dec
fcoms
dec
lock
rorl
dec
adc
pop
icebp
cmp
mov
mov
pop
nop
jg
in
gs
fstl
aad
pop
fldt
cmc
cmc
or
cmp
or
inc
insl
gs
xor
mov
jbe
mov
lock
lods
insb
xor
stos
shl
sbb
in
and
xchg
jg
outsl
push
dec
daa
ret
fadd
movsb
cli
push
jmp
std
mov
negl
mov
addb
test
cltd
push
idivl
mov
fcmovnu
mov
sahf
testl
sarl
les
fists
inc
xchg
out
cmpsb
cmpsl
sbbb
fadds
push
cli
push
iret
pop
dec
cmpsb
xor
sarb
add
sub
sbb
jle
inc
fsubs
mov
insl
ret
insl
lret
pusha
pop
adc
push
pop
or
int3
dec
mov
mov
cmp
cltd
xlat
jg
insl
addr16
cmp
xor
xchg
xlat
imul
push
jle
movsb
push
mov
jmp
mov
xchg
sbbb
into
rcrl
mov
and
call
or
push
push
xlat
add
shl
dec
loope
lret
fisttps
push
xor
bound
jne
push
pop
insl
out
dec
dec
loop
in
or
xchg
mov
mov
and
cmp
adc
xchg
inc
int3
sub
aad
aam
mov
xchg
bound
or
or
jno
mov
pop
fstps
std
cli
pop
aas
rcrl
and
jmp
iret
add
add
insb
xchg
cmp
cli
rcll
les
in
scas
sarb
add
pavgw
inc
divb
and
inc
dec
fwait
dec
test
jo
xor
xor
push
push
jmp
mov
push
xor
push
push
xchg
mov
mov
int3
sub
jne
out
xchg
shr
fistpl
mov
cli
lcall
pop
jle
orl
loop
test
aas
insl
cmp
das
dec
push
dec
add
xchg
mov
push
rclb
adc
xchg
and
popf
mov
inc
sarl
into
js
out
xchg
inc
add
or
fdivrl
shr
mov
pop
and
add
xchg
imul
test
sbb
xchg
stos
sub
push
xchg
mov
rolb
ja
leave
jg
adc
pop
loopne
sbb
dec
inc
push
cmp
jg
sub
in
jbe
cmpsb
or
inc
mov
jae
fsubrs
fisubrs
jne
les
sbb
imul
xchg
fisttpll
nop
dec
xchg
popf
pop
inc
mov
cwtl
inc
addr16
shrl
shl
outsb
push
sarl
cmp
adc
push
imul
inc
lds
jmp
sbb
loope
and
jge
sub
not
xchg
shll
inc
inc
int3
jg
dec
and
cs
sbb
seto
sub
sbb
jb
mov
stos
sahf
adc
in
pop
mov
inc
pushf
pop
cli
mov
pop
push
mov
jmp
das
es
mov
inc
mov
sub
fcmovu
mov
cmp
inc
xchg
fdivl
push
jmp
xchg
and
add
sbb
jnp
cld
filds
pushf
jnp
aam
cmc
call
mov
mov
jge
jmp
adc
sbb
enter
pop
in
mov
xor
lock
sub
out
push
stos
notl
aad
mov
cmp
adc
and
and
sahf
fldenv
imul
mov
sub
push
scas
aad
sahf
cli
imul
dec
mov
push
inc
testb
xchg
mov
jl
pop
lods
dec
icebp
decb
icebp
xor
mov
adc
int
and
pop
add
incl
dec
lods
push
sbb
stos
mov
out
mov
push
jae
fsub
mov
cmpsl
dec
outsb
enter
and
xor
testl
test
pop
in
push
and
repz
xlat
out
add
fdivr
sbb
pop
xorl
sbbl
insl
leave
or
je
or
cmp
mov
adc
mov
mov
inc
adc
pop
jne
adc
shrb
punpckhbw
aas
xor
insb
lds
sub
les
test
push
xor
cmp
sbb
in
adc
sbb
lcall
aaa
scas
mov
xlat
push
shll
add
ja
sub
lret
cli
xchg
pop
inc
mov
push
sbb
jle
dec
dec
xchg
repz
cmp
and
pop
sub
cmp
adc
lcall
aam
push
dec
and
fadds
cmp
in
cmp
mov
mov
lcall
jb
popa
cmp
pop
int3
mov
mov
je
test
xor
stc
inc
xchg
mov
nop
data16
repz
andb
mov
cmp
sub
xchg
paddd
xchg
jmp
push
pop
rolb
mov
fistpl
xchg
mov
sub
mov
adc
and
stos
push
sbb
mov
xchg
sub
sbb
aas
mov
fcmovnb
mov
frstor
outsl
imull
lds
cmp
dec
jns
cmpsl
and
xchg
add
push
sar
les
adc
jecxz
push
push
data16
adc
push
pop
xor
add
pop
xchg
lret
mov
sahf
scas
outsl
test
hlt
mul
pop
enter
adc
loope
insb
insl
add
test
jb
sbb
xor
in
mov
stos
cmp
mov
sbb
cmp
cmp
sbb
jge
jg
mov
stos
in
sbb
inc
dec
jmp
inc
dec
sub
loope
sub
push
cmc
out
imul
std
sub
orb
fistpll
adc
lahf
pop
loopne
popf
or
rolb
push
push
mov
xchg
insb
and
cmp
push
mov
and
mov
lcall
out
das
cmp
lcall
push
inc
pop
mov
sub
pushf
test
mov
inc
shrb
jnp
inc
movsb
dec
mov
icebp
add
arpl
inc
cmp
daa
inc
fwait
jecxz
cmpsb
or
add
icebp
sbb
loop
rcrl
dec
es
daa
cmp
push
push
fcompl
mov
push
add
xlat
cmpb
shlb
cs
push
nop
or
sbb
mov
add
sbb
xor
ret
mov
xchg
adc
mov
xchg
pop
push
push
sbb
mov
in
jmp
mov
mov
sub
and
mov
aad
iret
outsl
dec
dec
scas
test
mov
xchg
mov
push
mov
cmp
fldenv
testb
pop
adc
cmpsl
dec
sahf
xchg
hlt
cmp
jnp
adc
int3
push
aam
mov
dec
jo
adc
cmp
pop
push
mov
sub
loop
lahf
mov
xor
stos
and
jg
and
adc
mov
lods
push
in
je
scas
push
cwtl
cmp
cmpsb
pop
pushf
ret
push
mov
leave
push
stos
mov
and
xor
or
inc
xchg
add
or
or
mov
dec
dec
enter
inc
sbb
outsb
pop
mov
fbld
loop
js
pop
sub
mov
pop
inc
fdivrp
das
inc
sbb
pop
imul
jmp
daa
lods
mov
ss
nop
jecxz
cmp
mov
cwtl
stos
or
fwait
push
outsl
fwait
and
faddl
mov
sub
mov
sub
jp
mov
mov
xor
inc
mov
add
mov
add
ret
push
or
icebp
mov
add
and
cwtl
ret
rcll
outsl
loope
adc
out
mov
dec
aas
mov
sti
push
popa
xchg
mov
push
push
in
jg
cmpsl
adc
push
cli
imull
lcall
xchg
call
cmp
mov
lea
test
daa
addr16
int
sub
cmp
or
adc
es
push
xchg
mov
mov
mov
push
arpl
cwtl
insl
and
sub
adc
aad
icebp
ss
inc
mov
add
mov
hlt
dec
clc
jg
not
fistps
out
mov
add
and
rcl
sahf
dec
mov
jmp
pop
lock
xchg
pop
aad
outsb
jno
mov
pop
pop
sbb
mov
pop
jl
insb
xchg
lcall
idivl
arpl
inc
xor
or
movsl
jmp
sbbl
or
jp
in
es
vmread
jg
cld
jns
orb
ret
fnstcw
xor
sub
mov
or
sub
sti
sbb
fdivrl
add
sub
or
aaa
xchg
push
push
enter
cmp
pop
test
out
pop
cmp
in
aam
pushf
insb
mov
mov
xchg
adc
clc
cmp
cmp
das
pusha
xor
jne
fnstenv
adc
push
mov
lock
mov
das
add
mov
push
fs
xor
jle
lds
sbb
jmp
push
ja
test
mov
loopne
xor
das
push
js
in
cmp
xchg
dec
loop
mov
or
xor
out
aam
sub
ljmp
inc
andl
add
or
test
xchg
and
es
out
add
mov
mov
data16
into
mov
icebp
ret
xor
repnz
inc
bound
cmpsb
mov
cs
add
adc
sbb
rorb
lret
cmp
test
dec
sbb
loope
test
push
rorl
push
mov
push
sahf
or
testl
loope
popf
cmp
cmp
dec
jo
push
lods
sbb
mov
les
out
mov
jle
sbb
sbb
aas
mov
cs
fbstp
adc
inc
mov
pop
int3
push
inc
cmpsb
stos
lcall
xchg
xor
ficomps
mov
mov
sbb
sbb
test
rcr
lods
dec
or
icebp
mov
sbb
push
and
shll
sbb
sub
pop
jmp
push
in
mov
or
sbb
xchg
clc
push
scas
cmp
aaa
mov
sahf
aas
cmpsb
mov
dec
gs
and
jns
inc
dec
pop
int3
aaa
enter
sbb
ja
lret
orb
add
jnp
pop
mov
pop
loopne
out
imul
mov
outsl
mov
mov
jne
xchg
imul
popa
clc
idivb
jbe
notb
or
mov
test
and
xor
jge
xchg
and
mov
das
mov
xchg
add
repnz
xchg
mov
in
xchg
fimuls
jg
nop
fucomi
xor
jb
testl
out
cld
daa
inc
addl
or
pop
cmpsl
and
dec
icebp
ret
xorb
mov
pushf
mov
dec
stos
mov
es
mov
aam
or
popf
jl
xor
cltd
test
sbb
push
and
lahf
in
lock
jnp
lds
mov
cmp
adc
notb
and
bound
xlat
dec
sbb
push
idivb
aam
lret
adc
pop
sub
mov
mov
push
or
xor
sub
dec
xchg
ds
mov
ljmp
mov
shll
sbb
fidivs
xchg
adc
sbbb
add
pop
je
or
addl
xchg
je
mov
or
lcall
and
sub
test
inc
ds
pushf
das
testl
mov
sbb
pop
lret
nop
pop
or
popf
outsb
les
push
fiadds
lods
mov
jp
xchg
jne
imulb
jle
jl
cmp
in
jae
or
push
push
in
cmp
xchg
shl
fsubrs
outsl
xor
jg
push
dec
mov
nop
adc
mov
dec
push
mov
cmp
or
adc
dec
repz
cmp
mov
cmp
fistl
aad
mov
dec
mov
mov
mov
sbb
and
in
and
je
subl
notl
fisubrl
loope
xchg
dec
and
dec
mov
lcall
jbe
aam
ret
ljmp
lods
jle
mov
pop
stos
jecxz
es
cli
pusha
fstpl
mov
dec
ret
push
out
loopne
jo
into
mov
inc
loopne
xchg
inc
fldl
mov
pop
sarl
xchg
mov
insl
repnz
scas
js
inc
scas
dec
mov
dec
cld
movsl
lock
adc
lret
pop
jmp
stc
mov
movsb
js
dec
ss
inc
push
sub
ret
pop
or
and
xchg
push
dec
jae,pn
pop
movb
cmp
popa
sbbl
mov
fstp
adc
adc
pop
fwait
cmp
arpl
xor
mov
pop
lods
sub
or
loop
sahf
push
push
sahf
lea
popf
movsl
ds
mov
jp
pop
es
mov
outsb
xor
cmpsb
loopne
into
outsb
or
xchg
mov
fisttpll
mov
pop
arpl
sbb
lret
xor
mov
mov
xor
push
outsb
mov
mov
and
cmp
or
inc
mov
ror
or
xor
inc
test
jae
into
sub
sbbl
cmp
xchg
ret
mov
stos
xor
lea
adc
daa
lock
testl
dec
inc
icebp
lret
xlat
loop
fcomip
push
jbe
loope
mov
cmp
in
and
ja
fisttpl
lea
lret
cli
ljmp
fistpll
sbb
inc
loope
xor
fs
cmp
lods
pop
mov
nop
sub
pop
aas
cmpsb
mov
or
scas
dec
in
popa
dec
stc
cmp
push
sbb
xchg
sbb
mov
xchg
mov
xchg
bound
mov
mov
or
push
inc
or
dec
decl
je
mov
stos
xor
xor
add
test
jle
pusha
and
cli
or
fildl
in
lea
jmp
push
in
call
lret
pop
and
mov
rol
scas
xchg
pop
add
adc
mov
movsl
push
fdivrl
jge
adc
xor
mov
xorl
notl
jl
lret
jnp
jnp
enter
inc
adc
lock
imull
cli
mov
rcr
insl
sbb
and
mov
pop
hlt
xor
bound
dec
cmc
jl
rclb
and
lods
iret
std
jmp
cmp
js
and
cmp
cmp
pop
nop
mov
fstpt
add
xchg
push
mov
xchg
mov
data16
lret
test
or
jo
mov
sbb
fistpll
in
add
lret
xor
ret
pushl
adc
cmc
adc
movsl
mov
fcom
rcrb
fwait
stos
stc
mov
xchg
dec
jns
fwait
lret
dec
inc
xor
mov
or
cld
fdivl
mov
pusha
inc
inc
bnd
adc
mov
ljmp
in
jge
xor
add
push
popa
push
jge
cmp
arpl
xchg
adc
insb
sbb
sbb
insl
add
mov
dec
int3
es
movsb
cwtl
flds
dec
lock
pop
sub
clc
adc
cmpsb
cmpsb
hlt
and
pop
insb
mov
stos
mov
fistl
adc
sti
sub
mov
dec
outsb
sbb
das
addr16
cmc
nop
fnstenv
je
inc
push
xchg
or
out
or
lret
or
jge
jg
in
aad
xchg
mov
mov
inc
sub
orb
out
mov
aaa
popa
xchg
test
gs
mov
cmp
into
pop
push
loopne
aad
xchg
test
pop
mov
pop
aam
xor
aad
adc
cmp
inc
hlt
xor
jne
dec
jno
jbe
in
or
cli
pop
lret
pop
sub
mov
mov
in
clc
les
mulb
xor
inc
je
int3
dec
xchg
adc
xchg
push
pop
add
pushf
leave
mov
insb
cmp
scas
imul
movsl
adc
lret
andb
arpl
inc
sbbb
repz
scas
sbb
mov
jnp
fisttpl
xor
or
jns
fstpl
sub
insb
mov
das
jg
stc
in
cmp
jmp
fwait
pop
shl
mov
mov
les
jo
adc
out
cld
fcom
sarl
cwtl
test
stos
stc
and
mov
xor
mov
sub
inc
outsb
jp
test
cwtl
sub
xor
outsb
xchg
dec
xchg
pushl
mov
cli
push
mov
sbb
xor
ds
adc
adc
jno
lahf
lock
xchg
ljmp
scas
dec
test
iretw
test
je
ljmp
xchg
cmc
mov
mov
gs
lahf
aam
mov
push
jg
pop
call
jecxz
xchg
mov
aam
xor
subb
ficoml
leave
mov
mov
lods
pusha
xor
cli
push
mov
and
lds
ljmp
mov
mov
out
mov
orl
addr16
mov
and
movsl
das
inc
mov
inc
xorb
loop
mov
xchg
outsl
sbb
add
mov
scas
dec
out
push
push
pop
enter
popf
popa
ljmp
jae
fcompl
mov
out
sbbl
mov
call
lret
jmp
ss
adc
sbb
repnz
jecxz
pop
stos
lcall
roll
jno
add
xchg
hlt
mov
je
int3
mov
into
stc
adc
inc
lea
lods
and
pop
dec
add
fwait
nop
and
fcmovb
dec
inc
push
push
pusha
idivb
pop
mov
xchg
aas
loop
pop
mov
ljmp
and
ret
dec
pop
lds
mov
clc
sub
sbb
dec
jecxz
repnz
aad
fsub
or
inc
jnp
shll
cmp
sbb
sub
push
pop
aaa
int
sub
cs
mov
mov
in
mov
rolb
jno
xchg
inc
ss
or
xchg
lcall
test
nop
daa
pushl
fs
ror
pop
mov
sub
sti
cmp
pusha
add
jne
adc
sub
fneni(8087
mov
divl
push
jp
mov
jge
fsubl
add
scas
pop
insl
mov
in
std
aas
fdivr
push
dec
insl
cmpsl
mov
scas
push
xchg
mov
inc
sbb
inc
add
out
and
aad
xchg
rcrl
nop
in
cmpl
adc
adc
ss
push
pop
xchg
inc
mov
pop
int
ja
xchg
aad
ljmp
outsl
ret
mov
testl
test
jmp
arpl
pushf
pop
shlb
and
fisubrl
and
push
mov
sbb
jne
sub
mov
inc
cmp
leave
xchg
call
sub
lcall
icebp
adc
aaa
pushf
sbb
fsub
add
fists
pusha
lcall
mov
lret
mov
data16
outsb
and
nop
jle
mov
fwait
insb
inc
cmpsb
jo
pop
jle
sub
mov
in
mov
scas
push
daa
scas
xchg
pushf
popf
in
nop
lret
cmpsl
aas
xor
xchg
cli
into
add
popf
fwait
xlat
mov
cmc
enter
sahf
mov
pop
ficompl
mov
leave
xchg
fadds
popa
mov
imul
or
and
inc
dec
pop
mov
pop
hlt
inc
test
mov
or
cli
and
in
cmp
xor
push
and
sti
and
sbb
addr16
push
out
cmpsl
call
push
rol
mov
daa
in
xor
fadds
shl
jne
cmp
mov
int3
xor
and
sarb
jmp
popa
lahf
hlt
dec
cmpsb
mov
addr16
mov
xor
mull
inc
xchg
int
decb
int3
int
cwtl
push
cmpsl
popa
sbb
jg
jae
mov
jp
dec
mov
xor
stc
inc
movsb
lcall
inc
mov
loop
test
mov
lret
dec
xor
and
push
pop
hlt
into
std
sbbl
sub
pop
mov
jge
mov
cwtl
into
dec
inc
mov
xor
repnz
xchg
and
sbb
push
pop
pop
dec
xor
cltd
jecxz
outsl
aaa
int3
add
xor
loope
jle
mov
cltd
andb
divw
mov
xor
mov
stos
in
fwait
sbb
mov
and
gs
cmp
test
ficoms
pop
adcb
xchg
push
jno
fidivl
xor
popa
insl
je
je
ror
imul
dec
lahf
pusha
ficoml
sbb
or
sbb
xor
sbb
insl
push
in
add
jg
clc
pop
add
jns
pusha
loop
jb
bnd
shl
jae
inc
jp
pop
push
imul
fcmovnbe
push
and
ss
sarl
dec
jg
and
jbe
fldl
mov
xor
inc
or
adc
imul
movsb
mov
dec
rep
dec
in
pop
mov
icebp
dec
and
mov
ljmp
adc
and
mov
jmp
aam
jle
cwtl
mov
dec
sbb
and
jne
lret
adc
fdivr
mov
jo
xchg
adc
maskmovq
aam
adc
ds
and
pop
jg
jp
enter
lcall
xor
mov
loope
adc
es
das
jle
fcmove
lret
in
push
or
in
sbb
movsb
or
dec
aad
pop
jl
push
fstl
out
pop
mov
push
cmp
mov
out
jb
loop
jb
popa
adc
stos
cmc
call
sbb
divl
push
cmp
jno
sub
or
xchg
ret
test
pop
lret
jne
xchg
lock
sahf
xor
sbb
hlt
icebp
loop
jne
dec
adc
mov
cmp
cmp
fwait
cmpsl
jb
sbb
cmp
sub
jge
jecxz
inc
cmp
dec
movsb
addr16
fstps
sub
sub
aaa
mov
pop
jbe
js
je
sub
int
int3
cmp
ret
lea
lods
cli
mov
fildll
inc
cwtl
fiaddl
or
push
cmp
daa
xor
es
mov
add
jmp
dec
add
push
aaa
push
icebp
inc
mov
xor
pop
cli
insl
sahf
push
pushf
xchg
or
xchg
sub
stos
sub
sub
and
pop
sarl
ficoml
adc
scas
out
dec
mov
cli
movsb
mov
inc
ror
std
arpl
and
in
mov
test
push
adc
sub
xchg
pop
pop
dec
jno
out
shlb
test
clc
lds
mov
jle
ret
inc
xchg
testb
icebp
dec
mov
mov
mov
in
dec
jge
mov
pop
ret
sub
cmpsl
mov
imul
xchg
sbb
adc
mov
push
lock
push
mulb
bswap
mov
fwait
jmp
aam
sbb
icebp
repz
das
scas
fdivs
inc
in
add
mov
mov
mov
imul
outsb
clc
adc
cmp
inc
pop
shlb
inc
pop
and
test
xchg
fcoml
xchg
xchg
movsl
push
repz
mov
mov
push
dec
lock
repnz
jmp
jnp
mov
push
sub
and
cmp
aad
shl
mov
cmp
jne
mov
mov
and
pop
pop
push
adc
pop
mov
std
sbb
movsl
shll
fsubrl
pushf
orb
stc
inc
outsb
fcompl
aas
xchg
ret
jp
cmp
ret
jo
or
ret
dec
jge
push
test
in
cs
adc
sub
add
aad
fmull
lods
jle
ljmp
ljmp
jle
xor
mov
daa
mov
cmp
mov
and
inc
fistpll
cmp
loop
add
sub
pop
mov
cmp
inc
movsb
xchg
scas
aad
ss
and
sarb
fs
scas
enter
ret
sub
fnstenv
adc
xor
sub
sub
jg
push
pop
cmc
test
aam
push
nop
or
roll
jp
stos
scas
xchg
mov
test
xchg
mov
inc
je
inc
sbb
ss
dec
add
dec
xchg
mov
into
pop
sbb
and
jb
cmp
mov
mov
mov
jnp
data16
xlat
cmp
inc
enter
add
repz
sti
cli
mov
and
movsl
aad
subl
sbb
lret
jbe
lea
mov
aam
add
inc
dec
mov
adc
xor
dec
nop
rcrl
in
cmc
cs
or
fidivl
divb
sar
stos
mov
outsb
addb
inc
pop
aaa
sub
sbb
scas
sbb
aad
aad
add
insb
dec
inc
inc
popa
repz
pop
aas
cli
enter
inc
sub
lret
fiadds
and
pop
subb
in
and
test
sbb
mov
int
jmp
push
inc
int
push
and
int3
xchg
pop
rcr
fst
jl
cmc
mov
pop
dec
cs
sub
fdiv
sbb
int
inc
mov
xorl
sub
push
adc
fs
pop
and
sbb
mov
lret
mov
aad
pop
sti
mov
jle
fisubrs
add
popf
mov
add
jecxz
xor
or
nop
and
test
mov
addr16
xchg
ljmp
mov
push
aas
rolb
movsb
mov
inc
pop
pop
bound
xor
push
imul
sbb
daa
add
jl
loopne
sahf
cltd
and
cmp
pop
ss
cmp
fmull
repnz
into
adc
lret
mulb
pop
mov
mov
je
add
ret
and
cmp
adc
xchg
jno
push
xor
cmp
shrb
jle
pop
inc
sbbb
loope
cltd
out
ficoml
dec
xchg
jae
daa
call
push
push
cs
jmp
je
notb
loop
leave
into
stos
mov
mov
shll
aaa
dec
in
ja
dec
lret
les
cld
adc
adcb
pop
mov
cmp
jmp
test
mov
mov
mov
test
notb
pop
ljmp
cmpsb
repnz
movsb
cmp
cmc
mov
cwtl
daa
lret
int3
sbb
and
dec
int
or
xchg
ds
sub
out
lret
lcall
push
daa
jns
mov
mov
xor
xor
outsl
std
pop
xchg
shr
jnp
test
sbb
sub
rolb
aaa
js
xor
pop
pop
loope
mov
out
adc
jge
cmp
jg
sti
fldt
loop
dec
jecxz
notl
ret
mov
xchg
es
into
xor
xor
loopne
xchg
subb
cmpsb
daa
mov
mov
fadd
xchg
rorb
mov
insb
das
cmp
lods
mov
jge
pop
fcoms
scas
inc
das
add
add
ret
test
dec
fdivrp
into
xor
loope
lret
dec
popf
call
xlat
sbb
xor
jge
xchg
dec
mov
ljmp
pop
es
xchg
cmp
mov
or
lahf
ds
hlt
js
mov
mov
xchg
xchg
xor
cmp
push
jp
js
in
and
mov
or
push
popf
jge
push
fisubrl
xor
inc
and
sbb
inc
or
in
jmp
jecxz
jecxz
push
dec
sub
and
mov
cmc
daa
lea
mov
xor
push
movsl
int
dec
add
mov
loope
pop
cmp
pop
sahf
adc
repnz
fldt
xor
mov
clc
ja
or
scas
add
fcoml
in
inc
add
fwait
add
aas
inc
insl
ret
cmp
pop
pop
xchg
adc
xchg
push
push
cli
shrl
test
jns
in
int
jg
daa
movsl
in
cmp
xchg
sub
jmp
and
mov
lods
add
jbe
loope
cmp
xchg
xor
inc
jp
sub
and
fsubrl
lret
and
mov
push
stos
clc
dec
add
push
cmp
push
cmp
mov
cmp
jo
fs
mov
cltd
aas
pop
cs
push
lea
mov
xor
fucompp
cli
push
xor
xchg
xchg
push
mov
jge
dec
arpl
fmul
test
or
scas
xchg
shll
leave
jecxz
inc
mov
cmpl
sti
lods
sub
cmpsl
cld
dec
aaa
xorb
jle
sub
xorb
mov
push
or
fdivl
xor
mov
dec
sbbb
mov
in
sbb
gs
sub
popa
bound
xchg
pop
sub
aaa
sti
es
jno
lds
imul
xor
sub
dec
repnz
cs
mov
pop
push
loopne
fs
add
clc
push
faddp
out
add
hlt
mov
mov
jge
cmc
inc
int3
pop
push
jbe
incl
mov
sbb
jl
stos
scas
call
pusha
jnp
dec
aaa
jbe
xor
inc
fcomip
fidivs
rcll
lret
mov
xor
xchg
clc
test
xor
sahf
add
jae
jge
mov
dec
aas
rcll
int3
mov
test
pop
adc
fwait
add
xor
sub
loop
mov
inc
seta
sub
cmp
loopne
movsl
dec
pop
sub
mov
in
nop
hlt
sbb
es
xor
xorb
mov
cld
dec
pop
inc
or
fsubrs
mov
mov
je
or
mov
lock
mov
sbb
out
sahf
fwait
rolb
inc
shlb
lock
mov
or
and
push
adc
push
add
and
or
xchg
rorl
jl
and
hlt
mov
mov
rorb
cltd
int
imul
sbb
push
sbb
sti
sub
push
sub
cmp
sub
in
jbe
or
icebp
fcomip
or
xor
mov
popa
dec
pop
mov
push
ffreep
popw
cmp
movsb
fcoml
cmp
imul
pop
addr16
inc
lock
mov
mov
and
mov
andl
xchg
popf
jno
mov
or
loope
cmp
or
mov
adc
stos
jmp
pushf
insb
ret
mov
mov
test
lcall
mov
stc
popa
leave
popf
rclb
out
sti
push
xchg
fwait
mov
imul
sub
dec
cmp
daa
jnp
enter
hlt
rorl
or
jmp
mov
roll
adc
push
inc
fs
js
aam
or
subl
enter
loop
iret
sub
test
cmp
xor
lods
jo
andb
lcall
or
rorb
out
mov
sbb
lret
stos
or
sub
out
add
add
lret
stc
and
push
adc
repz
xlat
push
in
mov
adc
mov
sbb
jcxz
dec
push
fmuls
adc
add
pop
jp
in
sbb
popa
in
push
je
push
imul
sub
ret
xchg
fcmovu
cmp
not
pop
insl
lods
inc
jbe
shrl
insb
or
mov
or
aam
in
push
rcl
mov
mov
sbb
cmpsb
movsl
nop
xor
cmpsb
push
in
jecxz,pn
cltd
cmp
and
scas
adc
push
aaa
mov
or
jo
pop
stos
ror
xchg
and
ja
inc
aaa
sbb
and
rclb
jmp
inc
imul
mov
mov
xchg
test
or
mov
outsb
xor
push
rcr
in
add
lret
xchg
pop
int3
sub
cmpsl
cmpsb
or
mov
or
fs
push
mov
mov
pusha
add
out
mov
add
les
pop
gs
jp
xchg
dec
sub
dec
pushf
cltd
adc
popa
adcb
bnd
cmp
add
mov
hlt
xorl
jne
ja
pop
iret
arpl
repz
loop
push
pop
imul
sbb
mov
nop
not
imul
insb
fbstp
jo
pop
dec
dec
pop
pop
cmc
push
mov
cmp
add
outsl
popf
jg
lret
inc
xchg
and
incl
aas
xchg
inc
in
lods
dec
mov
clc
ja
sbb
cmp
jge
sti
and
mov
pop
mov
cmp
repz
mov
push
jmp
jmp
and
mov
or
fistpl
sahf
sub
jecxz
bound
into
movsb
fdivl
scas
cld
xor
les
fcmove
insl
js
addr16
jl
stos
add
xor
cltd
mov
jmp
push
dec
sbb
or
cmpb
loopne
shll
dec
mov
mov
int3
and
pusha
inc
pop
sbb
cmp
cmp
mov
or
test
cmp
xor
inc
shll
orb
push
arpl
adc
or
cmp
mov
jl
fldcw
int3
dec
test
and
xlat
addr16
shlb
sub
rolb
pusha
fstl
xchg
rcrb
movsl
std
xor
mov
mov
xor
or
jno
std
cli
imul
sbb
mov
mov
bound
push
imul
mov
js
xchg
push
hlt
ljmp
push
rdtsc
and
push
out
cmp
sub
fcomps
dec
mov
dec
das
test
imul
inc
test
shll
shrb
icebp
xchg
movsl
bound
sub
cld
rclb
xor
dec
sub
loope
or
sub
dec
push
pop
lahf
fs
xchg
cmpsl
out
fsubrl
add
mov
mov
shlb
pop
cs
ret
add
frstor
stos
ljmp
aaa
pop
ljmp
jge
or
cmpl
mov
xor
lcall
jno
pop
xchg
jae
xor
outsb
adc
jbe
cmp
incl
mov
xchg
int3
cltd
ja
dec
aaa
in
add
add
shll
sub
dec
sub
je
inc
xchg
dec
rclb
and
enter
jnp
pop
gs
insl
dec
add
sti
add
push
add
mov
mov
int3
popf
or
mov
mov
pop
ret
adc
adc
ja
lea
stc
pop
inc
dec
xor
inc
push
loop
cmp
scas
or
mov
ficomps
lds
mov
ss
inc
stos
or
and
push
xor
mov
fistpl
pop
je
aas
inc
lret
loopne
sbb
adc
inc
enter
jbe
cmpsl
adc
sti
insb
ds
adc
jl
outsl
testb
mov
jb
xor
xchg
pop
stos
adc
mov
xlat
sbb
cltd
xor
loop
daa
or
jo
fldcw
jecxz
aas
jg
int
xchg
lret
or
adc
mov
int3
imul
fsubrs
sbb
adc
pop
mov
sub
mov
or
xchg
push
js
sbb
shl
popa
lcall
xchg
push
cmpsb
out
rcrl
pop
xchg
and
inc
test
gs
addr16
xor
ret
fsts
sbb
mov
and
lods
xchg
pop
and
in
call
mov
in
push
pusha
push
pusha
mov
mov
mov
mov
xchg
fndisi(8087
pop
and
push
add
fbld
xchg
mov
sub
mov
scas
aad
adc
das
fnstsw
out
xchg
insb
iret
push
jp
out
repnz
xor
sub
sub
cmp
pop
hlt
or
data16
lods
and
pop
push
jp
ret
call
pop
sbb
cmp
cmp
xlat
sbb
or
mov
in
xchg
fistl
inc
jle
lret
jno
mov
rclb
jae
push
mov
sbb
fiadds
clc
shlb
push
hlt
push
aad
push
fstpl
andl
push
cmc
or
push
mov
popaw
sub
mov
mov
mov
push
adcb
mov
jg
mov
jmp
mov
pop
jmp
cmp
push
jp
mov
rorl
and
pop
fstl
xchg
out
in
hlt
pop
repnz
mov
fucomi
movsl
xor
mov
inc
sub
aad
mov
int
and
mov
mov
ret
ss
xor
or
mov
cmp
fildl
push
in
outsl
je
scas
lock
mov
xchg
mov
mov
enter
inc
cltd
pop
aas
lods
fs
frstor
cmpsb
aas
jo
push
mov
insl
push
mov
jae
loop
pop
add
mov
popf
int3
mov
fidivs
add
adc
push
dec
insl
jl
dec
push
jb
ret
inc
js
xor
cmc
lods
imulb
jge
jle
sub
mov
roll
mov
test
pop
mov
fwait
jbe
push
sbb
adc
lea
jmp
ljmp
add
test
jge
scas
mov
pop
push
push
mov
lret
push
xchg
movsb
sbb
repnz
pop
push
xlat
push
cmpsl
fisubrl
jmp
jns
inc
sbb
fs
movsl
popf
movups
in
sub
bound
lcall
jbe
mov
or
insb
jecxz
mov
fs
mov
out
add
mov
out
cmp
outsl
ret
sbb
xlat
xchg
push
jge
es
loopne
insl
lahf
inc
mov
jle
push
mov
xor
inc
push
cmp
pop
mov
arpl
add
xor
jl
push
or
sarl
and
add
push
push
pop
in
push
xor
pop
xor
push
scas
inc
xor
pop
fstps
and
mov
iret
sbb
mov
loopne
push
icebp
sar
push
mov
hlt
popa
sbb
jns
xor
xchg
push
fsubs
and
shrb
lock
outsl
bound
mov
push
lods
adc
mov
in
xchg
rorb
push
adc
mov
mov
xchg
push
rorb
jmp
jns
or
mov
sub
stos
mov
std
inc
daa
push
rcl
out
scas
inc
mov
outsb
inc
cltd
jle
lahf
xchg
sahf
into
mov
push
mov
jne
fstpt
clc
xlat
scas
mov
dec
out
popa
or
insb
out
clc
dec
shl
cmp
push
add
pop
jbe
rcrl
xor
dec
mov
stc
dec
or
and
std
scas
xchg
mov
mov
jb
lret
push
xchg
adc
ss
int
xchg
cmp
xchg
lcall
mov
mov
gs
mov
scas
in
xor
andl
jle
jle
mov
je
in
test
mov
mov
mov
jge
sbb
xchg
lds
inc
ds
fiaddl
in
jo
outsb
loope
sub
xor
cli
and
lea
add
cwtl
lcall
aam
push
pop
or
jg
ja
mov
jmp
and
cmp
or
movsl
and
insb
sbb
aam
xchg
movsb
roll
mov
adc
stos
and
ds
jno
out
fistps
push
lret
sbb
pop
push
in
xchg
into
lds
cmpb
arpl
stos
sub
jb
xchg
xor
and
cmpsb
sub
fs
inc
or
pop
mov
sub
popf
mov
and
lcall
xor
pop
loop
popf
push
inc
push
sub
jl
loope
mov
iret
sbb
pushf
dec
inc
jmp
mov
jp
mov
mov
jmp
cmpsl
push
jno
repz
mov
in
push
movsl
ss
push
loopne
pusha
in
push
sub
adc
dec
data16
mov
es
and
xchg
es
push
mov
xlat
lret
add
jo
mov
jno
call
cmpsb
enter
adc
aad
stos
xor
andb
pop
ljmp
sbb
loopne
lret
fs
cwtl
outsl
dec
stc
das
fs
lret
repnz
ja
inc
mov
adc
jnp
into
adc
subl
lock
push
fstpl
subb
or
sti
ficompl
mov
cwtl
mov
xchg
jne
outsb
adcb
lret
aam
or
jge
es
sbb
pop
adc
repz
and
xchg
enter
lcall
ds
int3
and
lahf
sbb
mov
out
or
xchg
jnp
in
xlat
lret
jp
enter
int3
insl
xchg
aaa
outsb
popa
sahf
sbb
sarl
sub
fiadds
add
adc
enter
aas
dec
out
or
and
mov
pop
xchg
pop
out
push
daa
mov
mov
shlb
dec
mov
pop
inc
push
mov
sahf
push
sub
shll
scas
pop
repnz
rcrl
jmp
les
aad
sbb
push
inc
aaa
push
mov
test
sub
pop
fmuls
movsb
mov
and
and
mov
jg
xor
xchg
dec
shrb
lock
mov
xor
cmp
nop
daa
outsl
out
ret
data16
or
sbb
ss
lret
in
mov
mov
inc
ja
cmpsl
ljmp
dec
xchg
xchg
dec
mov
in
adc
sbb
jno
imul
jmp
mov
sub
aaa
loop
ffreep
js
push
pop
dec
dec
outsl
fisttpll
aam
aam
outsb
stc
and
gs
add
xchg
fcoms
jnp
xchg
test
push
push
dec
mov
jo
jmp
fdivrl
inc
aaa
cs
mov
sub
xchg
inc
and
int
lahf
stos
add
jle
dec
push
scas
adc
mov
shrb
xor
ret
and
loope
push
mov
mwait
sbb
js
cmp
xor
loop
mov
rcrb
inc
pop
fdivrs
push
popa
repnz
roll
sub
pusha
loop
cmp
out
nop
mov
shll
stos
inc
and
aas
std
bound
and
pop
inc
repz
jns
test
adc
sbb
jecxz
mov
sub
jae
repz
enter
and
adc
dec
jns
loopne
into
jnp
mov
or
mov
cltd
sbb
cmc
mov
lods
adc
mov
cmp
imul
xor
imul
aad
and
push
out
insb
mov
dec
into
cwtl
push
inc
imul
dec
out
aas
or
sbb
shrb
sbb
push
cld
xor
mov
xchg
scas
jmp
addr16
cs
xor
xor
dec
lds
jbe
fiadds
popa
inc
fwait
stos
int
mov
add
inc
inc
cmp
and
mov
ja
std
sbb
jne
mov
test
test
sbb
leave
fidivrl
push
dec
mov
stos
xchg
popa
or
sub
orl
fwait
mov
fistl
mov
dec
mov
aas
insb
xor
push
fwait
mov
dec
jp
insb
stc
das
sub
or
popa
or
cmpsb
loopne
and
xchg
out
stc
pop
cmpb
jg
movsb
or
cwtl
addb
ss
cmp
lock
popa
mov
xchg
cld
test
xor
stos
fabs
stc
movsl
cltd
imul
cmc
nop
lret
pop
ret
sub
in
loopne
fisubl
jp
and
jns
jns
mov
pop
pop
cmp
popa
xchg
lahf
adcl
js
aaa
cwtl
je
movsl
icebp
xor
sub
iret
iret
fcomp
movsl
test
jns
mov
jecxz
ret
adc
or
insb
mov
aam
das
lret
mov
cltd
sub
rclb
movsb
pop
push
mov
stos
add
add
jge
dec
fdivrp
out
jb
test
pop
fnsave
jns
and
addr16
lret
pusha
rolb
inc
mov
es
dec
test
aas
lods
in
pop
xchg
add
pop
sub
out
mov
lock
mov
push
scas
das
jp
rcrl
dec
arpl
cmp
insl
xor
cmp
pushf
das
mov
pusha
rcr
sub
stc
sti
sbb
fsubrs
jno
aad
hlt
xchg
fnstsw
jb
add
dec
shl
insl
cs
inc
dec
pop
loopne
rcll
pop
test
rcll
sarb
push
decb
daa
and
lods
rcr
push
pop
xchg
sub
das
arpl
dec
fdiv
cmp
push
mov
data16
sbb
outsb
aas
xor
or
daa
sbb
jecxz
adc
icebp
gs
aas
push
pop
popf
aad
mov
sbb
test
fisubs
jo
xlat
std
dec
gs
adc
jo
or
test
push
xchg
movsl
sarl
mov
cmp
and
cmp
inc
gs
xchg
pushf
fidivs
push
cli
pop
push
xor
frstor
and
inc
jle
pushf
xchg
test
pushf
movsb
xchg
and
and
fnstenv
sbb
cmp
out
push
sub
mov
and
data16
test
in
negb
lret
mov
aam
or
ja
fbld
cwtl
ljmp
xor
addr16
sub
mov
sbb
popf
xchg
es
das
idivl
mov
sub
and
gs
addr16
fwait
jb
in
xchg
pop
mov
shrl
das
sbbl
stc
push
cmp
sbb
test
jp
mov
push
out
ljmp
fsubrl
and
shrb
or
sub
mov
loopne
pop
cmp
test
jecxz
xlat
fwait
mov
divl
xchg
push
fcom
cmp
out
add
lea
sbbl
adc
ret
cwtl
test
jnp
daa
clc
mov
add
iret
push
ljmp
inc
xchg
add
pushl
cld
mov
dec
pop
xor
in
pop
xchg
cmp
mov
jge
pop
jo
cmp
adc
jo
xchg
xor
push
dec
mov
push
jbe
inc
mov
add
repz
jne
les
popf
push
mov
pop
lds
stc
push
mov
aam
push
push
fldcw
jle
lcall
mov
adc
adc
fidivrs
int3
push
std
xor
sub
ret
clc
sub
mov
inc
test
stos
push
sbb
xchg
jg
fwait
rol
cld
push
movsb
rclb
aas
sti
les
aad
pop
je
mov
mov
cmp
xchg
les
js
in
jg
pop
lock
cmp
fnsave
xchg
push
lea
adc
fimuls
sbb
out
ret
inc
lods
push
stc
mull
rcll
lret
push
aam
mov
and
jae
cmpsl
cli
dec
jmp
mov
mov
cmp
sbbl
add
cmp
and
and
mov
mov
push
pop
or
cmp
popf
arpl
movsb
fadds
xor
imul
addr16
fwait
mull
scas
sub
aad
scas
ret
pop
sti
mov
das
stc
test
sbb
adc
orb
xor
sub
jno
fidivs
xor
add
dec
jb
pop
push
fs
push
out
mov
sub
inc
mov
mov
stc
jo
shlb
pop
mov
dec
cmp
inc
pop
pop
adc
sbb
imul
hlt
push
push
dec
adc
addb
mov
mov
xor
outsl
sub
idivl
mov
xchg
scas
mov
add
stos
mov
cmp
bound
mov
mov
in
pushf
nop
sub
clc
cmpsb
xor
dec
add
xchg
xor
adc
out
dec
jb
xorl
sub
or
fmull
cmc
sub
jo
mov
or
sbb
mov
jmp
nop
mov
inc
dec
mov
sahf
and
movsl
pusha
fcomip
adc
xor
lods
push
cmp
cltd
add
mov
cmp
icebp
push
ds
push
pop
xchg
xor
mov
mull
outsl
std
addl
push
dec
cli
int3
mov
sbb
add
cmp
cltd
cs
sub
imull
jg
pop
or
and
sub
push
xchg
sti
inc
mov
push
mov
dec
xchg
adc
gs
push
pop
out
cli
addr16
sarb
icebp
test
mov
xor
test
test
xor
fadds
jb
lods
out
dec
mov
pop
imul
std
adc
test
fucomi
push
xor
add
mov
push
jmp
lret
testl
sbb
dec
nop
int
mov
cmc
scas
jae
scas
mov
jp
xchg
jbe
xchg
popf
repz
push
aad
mov
jl
cli
push
arpl
leave
inc
fsubrs
cltd
mov
dec
or
push
sbb
mov
push
loop
lcall
pop
popa
orl
icebp
test
push
xchg
jmp
icebp
in
insl
sbb
push
cmp
pop
add
sbb
enter
data16
mov
aas
pop
ret
sbbl
sbbl
fisubrl
push
outsb
lret
adc
les
ljmp
stos
add
sbbl
pusha
xor
movsl
ret
sub
and
daa
cmp
jne
dec
jno
dec
aad
out
orb
push
pop
mov
mov
stos
insb
sub
inc
cmp
adc
adc
pop
insl
dec
pop
push
pop
arpl
rcr
pop
xlat
sub
cmp
adc
xchg
add
idivb
cs
ss
jne
lods
pop
and
jno
add
arpl
arpl
mov
popa
repz
inc
or
adc
or
imul
leave
dec
mov
sbb
stc
aaa
dec
mov
loop
jge
xor
jno
test
jg
mov
pushf
cld
xor
push
stos
iret
and
push
pop
xor
lods
and
sub
inc
xor
repz
pop
mov
xor
out
push
arpl
scas
xchg
cmp
aam
sub
mov
mov
fwait
jg
cmpsb
push
lods
xor
inc
sub
orl
mov
jmp
lods
adc
pop
cwtl
push
fwait
push
push
lods
mov
mov
testb
push
push
dec
push
icebp
or
cli
leave
add
aad
enter
insl
in
mov
nop
in
dec
ficoml
push
cmc
nop
stos
or
xor
stc
dec
adc
rol
lods
sbb
int3
and
imul
inc
and
stc
inc
jp
mov
insb
mov
and
aaa
bound
mov
push
pop
mov
add
test
cltd
mov
xchg
lahf
inc
movsb
lds
push
enter
inc
prefetch
push
lods
xor
shlb
inc
jb
dec
adc
sbb
jecxz
or
jecxz
call
into
and
and
cmp
dec
pop
in
stos
inc
out
dec
outsl
pop
adc
in
pop
shll
xchg
ja
sub
daa
insb
push
cmpsb
sub
leave
fcomp
out
cmp
lds
ljmp
movsl
scas
adc
inc
out
or
dec
inc
push
outsl
push
loope
addl
adc
push
pop
out
je
mov
jmp
cs
aad
das
sbb
mov
add
pushf
mov
xchg
test
mov
mov
in
add
cmp
lds
jle
lods
divl
int3
adc
rcrl
in
sub
or
sbb
jmp
push
xchg
std
mov
je
inc
enter
and
outsl
lds
push
jge
cwtl
mov
aam
arpl
stos
stos
shlb
sub
add
push
cld
push
lods
pop
mov
movsl
or
push
es
and
call
or
push
test
ds
insl
cld
pusha
sbbb
arpl
ret
adc
loopw
jo
rolb
xchg
outsb
cmpb
or
mov
push
lock
dec
and
cld
loopne
pop
ljmp
fldcw
add
mov
dec
fisttpl
inc
jecxz
jg
jmp
sbb
mov
mov
imul
enter
ror
popa
gs
push
stos
jmp
cmp
pushf
jmp
sub
mov
or
inc
jecxz
inc
and
testb
pop
mov
dec
xlat
adc
in
in
mov
jo
test
lea
xor
insl
in
inc
mov
pop
fiadds
jmp
xchg
cs
mov
push
inc
jl
jns
fisttps
hlt
sub
sbb
and
or
pop
push
rcll
addr16
adc
mov
cmp
jl
fdivrl
xchg
cmp
js
leave
lods
add
adc
ret
dec
push
xor
sbb
imul
or
cli
xor
int
fidivl
iret
aas
mov
add
push
sti
scas
in
and
cmp
mov
xor
xchg
sarb
push
jmp
pop
je
arpl
mov
ss
enter
add
sub
ret
pop
xchg
pop
push
pop
aas
inc
or
inc
lret
mov
push
data16
push
fnstsw
xor
fildl
lea
fists
es
nop
add
std
mov
push
add
push
pushf
sub
and
out
addl
cmc
mov
add
push
ss
xor
ja
mov
pop
out
or
add
popa
rolb
cmpsl
and
push
pop
push
add
jecxz
arpl
or
ficompl
roll
mov
jns
addr16
cmpsl
mov
add
pop
lahf
cmp
inc
sbb
add
adc
push
and
xchg
pop
add
sarl
lret
jge
cwtl
rcrb
flds
daa
fdivrl
insl
sti
add
jle
jecxz
mov
or
pop
inc
sub
dec
inc
or
dec
inc
mov
xchg
mov
lret
cmpsb
out
pop
xchg
dec
xchg
ja
test
adc
insl
jns
repnz
mov
loopne
push
and
imul
test
shlb
sub
xor
data16
sub
cmc
fs
daa
loop
loop
sbb
loope
cmp
xchg
sti
into
sbb
jo
aad
adc
fcoms
and
pop
shll
or
sbb
inc
out
dec
sub
ret
cmpsb
add
mov
test
scas
movl
int3
insl
push
ret
push
jp
test
inc
or
push
test
cmp
pop
sub
adc
inc
adc
jg
mov
std
dec
cs
mov
cmp
sbb
lock
sarl
mov
outsb
or
adc
je
sbb
pop
es
push
sbb
hlt
cmp
cli
and
mov
xor
pusha
and
cli
or
sub
pop
je
orb
pop
in
push
js
rcrb
into
cmp
aas
iret
pop
dec
jne
call
jae
rclb
push
loopne,pn
xchg
pop
addr16
cmpsl
test
dec
mov
ret
mov
adc
out
leave
hlt
push
lods
adc
xchg
or
mul
sub
lret
ss
dec
loopne
addl
pop
lods
dec
clc
adc
inc
mov
sub
sub
mov
negb
mov
pop
insb
imul
xor
sbb
jg
scas
enter
adc
daa
sub
mov
ljmp
or
js
arpl
dec
and
sbb
xchg
inc
pop
sub
jo
cmp
repnz
pop
mov
inc
out
out
iret
push
repnz
cmp
out
cld
loope,pt
rorb
jmp
ss
xchg
mov
xor
xchg
cmc
cmpsl
popf
sub
xor
int3
mov
inc
rol
shlb
sbb
fs
adc
rcrl
mov
aam
pop
inc
pop
pop
inc
scas
je
inc
adc
in
pop
lds
test
bound
jne
xor
inc
idivb
leave
adc
mov
mov
xor
sahf
cmp
gs
sub
insl
mov
pusha
popa
ficoms
orb
sbb
jecxz
jmp
push
add
mov
mov
into
sub
repz
push
adc
or
in
test
bound
xor
int3
pop
arpl
aad
pop
or
jb
outsl
popf
mov
stos
fildll
iret
pop
fcmovnb
movb
sbb
xor
movsb
outsb
mov
or
or
sub
dec
jns
jo
out
jmp
sbb
add
enter
mov
test
sbbb
mov
rcrl
pop
std
ljmp
xor
jl
mov
sbb
inc
loop
into
sub
inc
xchg
cmp
ja
pop
lcall
push
pop
push
scas
dec
inc
mov
aad
xor
cwtl
lods
fidivs
das
jle
popa
mov
scas
pop
sbb
mov
adc
rcr
daa
insb
outsb
gs
lret
cmp
decl
outsl
mov
xchg
push
cmpsl
ret
adc
ficoms
jge
sub
dec
mov
inc
mov
push
sbb
out
push
shrl
push
or
lods
fnstcw
pusha
sbb
stos
xchg
arpl
dec
clc
ja
roll
mov
xchg
push
and
shrb
push
pop
lahf
test
fnstenv
cmp
js
mov
inc
stos
lock
icebp
mov
into
xchg
xchg
xor
in
rcrb
mov
addb
fcoml
dec
es
popf
out
lds
xchg
jmp
nop
xchg
adc
popf
cld
orl
jo
sub
jns
xchg
push
lea
push
sbb
decb
xchg
mov
arpl
dec
les
out
push
dec
sbb
mov
adc
add
xchg
jle
loopne
cmp
int
loope
and
lahf
cmp
pop
mov
into
lds
push
sahf
out
xor
jnp
lock
cltd
fincstp
mov
bound
xor
inc
daa
fcomp
rcrb
hlt
int
loope
xchg
les
inc
xchg
daa
ja
repz
mov
test
inc
pop
add
out
int3
sarl
jmp
pushl
loopne
movsl
or
movlps
mov
mov
xchg
cmp
lock
dec
jp
lock
sbb
adc
xchg
mov
popf
push
mov
dec
neg
push
pmullw
xor
cmc
daa
sub
movsl
mov
insb
adc
stos
nop
out
pop
dec
ljmp
stos
or
test
mov
jmp
mov
xchg
mov
cmpsb
fdivl
adc
mov
rcrl
dec
daa
addr16
xor
inc
or
add
jl
pop
push
sahf
xlat
add
fwait
insb
jp
inc
jno
xor
add
sbb
cmp
push
xchg
dec
incl
xor
push
xor
cmp
dec
movsb
ljmp
mov
ja
pop
and
mov
mov
scas
mov
arpl
mov
dec
or
sbb
lahf
mov
dec
js
jg
xchg
sbb
int3
in
add
mov
sbb
add
mov
push
add
nop
stos
inc
ss
sub
inc
in
add
xchg
es
jmp
pop
adc
cmp
les
push
cmp
sbb
in
cs
adc
push
jg
inc
loopne
sub
pop
lahf
xchg
push
andl
test
insl
cli
incl
jle
int3
jno,pn
adc
xchg
fs
sbb
mov
xchg
xor
fildll
notl
jg
mov
shl
fisttpl
xor
mov
shr
adc
pop
mov
mov
jle
iret
mov
jecxz
push
iret
cs
add
or
inc
mov
push
push
jl
jb
cli
push
jb
movsl
push
push
and
adc
fiadds
insl
add
inc
jbe
roll
movsl
aam
push
push
rclb
jae
mov
in
sub
mov
jnp
xchg
idivb
pop
or
lret
mov
xor
rcrb
pop
imul
push
jb
leave
mov
xchg
stos
push
and
mov
inc
repnz
dec
xchg
push
mov
pop
and
and
iret
mov
aad
pop
std
inc
in
ljmp
sbb
push
imul
mov
xor
mov
or
mov
jmp
lods
mov
cmc
dec
ret
add
adc
sub
cmpsl
mov
pop
inc
aaa
cwtl
adc
scas
mov
cmp
adc
mov
sbb
push
sbb
inc
mov
in
je
push
sub
pop
mov
cli
or
push
lods
es
xlat
scas
mov
ds
test
cmp
or
jno
lahf
out
xor
jns
inc
iret
xor
shlb
cwtl
xchg
adc
or
jns
out
jae
mov
insl
pusha
sti
aad
scas
push
popl
push
mov
xchg
xchg
stc
pushf
loopne
nop
adc
lcall
fiaddl
adc
mov
xchg
add
sub
adc
push
xor
mov
ljmp
xchg
int3
adc
pop
pushf
fstpt
es
or
stos
popa
filds
mov
mov
inc
cmp
out
mov
or
jmp
aas
mov
or
call
mov
test
mov
rorb
lea
adc
xor
sub
jmp
xor
movb
sub
sti
inc
jns
popa
mov
mov
fists
mov
sub
push
out
cmp
inc
and
mov
loopne
leave
sarl
out
es
mov
mul
fisubrl
mov
mov
add
jns
pop
arpl
pop
cld
mov
test
mov
push
in
nop
dec
out
sbb
int
mov
int
mov
in
push
imul
loope
movsb
rorl
adc
std
stc
mov
outsb
lea
in
lods
mov
js
test
cs
out
xor
xchg
xchg
fcoml
mov
outsl
sbb
je
in
xchg
xor
ds
in
emms
out
cmp
add
pushl
call
cltd
subb
jb
stos
js
or
hlt
or
mov
xchg
cmp
mov
or
ret
pop
int
xchg
popf
pop
popa
push
xor
pop
popf
cmp
stos
lods
stc
orb
push
sbb
dec
fadd
mulb
pop
inc
or
mov
ret
xchg
cmpsl
add
mov
push
jb
jns
push
pop
add
test
push
sbb
repz
xor
sahf
mov
sbb
add
mov
test
cmc
xchg
dec
dec
dec
ret
pop
imul
out
add
mov
jae
sti
adc
fcmovbe
fsubl
cmp
jo
mov
dec
jb
xorl
popa
les
data16
add
aas
push
mov
xbegin
mov
dec
fbstp
push
pop
pop
imul
dec
pop
imulb
dec
cmp
out
loopne
xor
cmpsl
ret
insl
jecxz
inc
icebp
cltd
fmull
adc
xor
lret
sbb
pop
ss
and
std
aad
adc
retw
pop
jb
jge
pop
repz
sbb
inc
cs
gs
pop
test
sbb
test
sbb
add
scas
pop
insb
pop
dec
insl
mov
sbbb
shrl
into
xchg
iret
mov
and
insb
out
mov
gs
push
mov
popa
mov
cmp
dec
and
enter
inc
aam
inc
mov
sbb
pop
dec
ja
loope
out
test
add
mov
je
int
inc
push
dec
push
mov
lret
xchg
cmpsl
mov
mov
sbb
sub
sarb
push
ret
inc
test
xor
dec
mov
out
jg
xchg
xlat
pop
fidivs
mov
aas
ss
div
cmp
sti
sbbb
aad
ja
jnp
dec
xlat
jg
or
mov
ja
fcomps
jbe
sahf
cld
sbb
push
jne
jecxz
dec
pop
jo
or
xchg
cmp
in
dec
dec
xchg
fistpll
pop
push
aam
mov
mov
pop
mov
insb
mov
lods
das
lcall
stos
xchg
jmp
adc
push
addr16
mov
adc
dec
mov
aad
bound
cmp
add
mov
repnz
cmp
ds
cwtl
stc
and
sbb
leave
cltd
xchg
divb
in
xchg
ja
lods
rorl
cmp
stc
mov
xchg
lea
negb
rclb
pop
outsl
sbb
jg
test
int3
mov
adc
loop
fstl
nop
test
push
cwtl
mov
aam
shll
dec
pop
add
test
icebp
xor
push
call
call
das
pushf
arpl
inc
es
xchg
int
jns
stc
jne
lods
add
cmpsl
mov
mov
mov
inc
mov
mov
pop
insb
pop
decl
adc
lods
les
cli
inc
jne
in
sbb
adc
sub
adc
adc
test
mov
sahf
pop
cmpsl
mov
jae
push
lds
jne
xchg
jnp
adc
js
cli
sub
add
mov
push
inc
stos
int3
adc
adc
inc
jecxz
jo
or
icebp
scas
es
dec
xchg
sbb
inc
repz
lcall
and
jno
pushl
fxch
xor
test
fnstcw
ja
cmp
leave
leave
adc
jge
repnz
scas
pop
xchg
movsb
sub
xor
cmp
push
cmpsb
xchg
jecxz
push
je
jo
sbb
imul
in
cmc
mov
sub
out
mov
aam
mov
cwtl
loop
adc
mov
push
mov
jnp
or
cmp
cmp
inc
sti
or
mov
enter
or
sbbb
js
je
loope
ja
mov
divl
mov
mov
bound
sub
dec
jnp
lods
scas
punpckhwd
jg
and
sahf
mov
jmp
adcl
test
mov
mov
mov
test
out
add
pop
cmc
addl
xchg
mov
lea
aaa
and
add
cmc
and
std
xchg
mov
popa
xchg
adc
dec
cmp
imul
int3
push
jno
mov
aam
xchg
insb
xor
mov
decl
cmp
adc
pop
ja
mov
pop
mov
sub
or
pusha
sub
or
cs
pop
mov
pop
jle
jne
jmp
sbb
inc
pop
call
shll
mov
in
mov
out
cwtl
prefetchnta
xor
lods
sbb
lret
sbb
sub
adc
sub
mov
jno
sub
lods
andb
mov
cmpsb
es
mov
adc
mov
jp
jae
les
mov
inc
loope
or
add
insb
daa
fistpll
push
mov
jg
test
jns
cli
jl
pop
xor
or
sub
push
out
xchg
cmp
jg
into
int
or
mov
dec
je
sub
pop
push
sub
lret
mov
cmp
lea
in
mov
xchg
or
lret
out
dec
xor
sti
cltd
imul
mov
inc
lret
and
stos
repnz
or
cmp
push
subl
or
imul
mov
loopne
pop
pop
mov
mov
mov
push
cmp
js
mov
cltd
pop
insl
sbb
lcall
cmovbe
push
cmp
jecxz
xchg
mov
xchg
pop
test
jne
pop
jmp
push
loope
sbb
orb
sbb
xor
cmp
push
leave
pop
adc
scas
dec
cmpsl
lahf
roll
scas
xchg
in
loopne
imul
pop
mov
pcmpeqw
sbb
and
je
lds
jo
stc
pop
jl
dec
xchg
jb
sub
loop
mov
or
xor
pop
sbb
adc
pop
jno
xor
ljmp
test
xchg
dec
push
cld
pop
adc
sbb
mov
inc
pushf
fbld
xchg
or
jns
and
cmp
pop
in
sub
sub
mov
bound
or
sbb
jl
mov
inc
shlb
rolb
add
rorl
ret
xor
pop
cld
push
add
xorb
fildll
cmp
jmp
xor
mov
add
cmpsl
or
pop
out
dec
orb
cs
or
mov
movsb
mov
cmpsl
mov
test
pop
out
inc
adc
cmp
push
adc
inc
into
pushf
dec
ds
das
pop
cmpsl
adc
cmp
mov
xor
in
push
pop
dec
jnp
mov
xor
push
faddl
mov
pop
mov
pushf
pop
gs
test
into
outsb
jns
cltd
xlat
ret
cmp
dec
sbb
cs
ret
dec
fisubs
mov
out
xchg
pop
cltd
jns
xor
dec
mov
mov
mov
movsl
negl
mov
movsl
inc
xor
int3
jns
nop
outsb
leave
push
gs
mov
cmp
mov
ja
daa
sub
into
inc
nop
jne
enter
cwtl
xchg
mov
out
jne
and
sub
mov
loop
es
dec
sub
adc
xor
mov
lahf
popf
ss
fiadds
push
push
adc
mov
fdivr
and
push
adcl
stos
dec
out
or
xchg
mov
pop
repz
cmpsl
fwait
dec
cmp
adc
xchg
std
icebp
push
scas
mov
or
das
mov
push
mulb
mov
imul
pop
mov
push
sbb
cmp
sub
insl
mov
dec
aad
dec
cmc
aaa
sub
push
les
movsb
aam
out
mov
xchg
push
fs
push
mov
movsl
sahf
es
imul
fistl
mov
pushf
or
fistps
jecxz
push
sti
mov
int3
inc
xchg
faddp
in
dec
aam
data16
mov
or
loop
adc
lea
add
scas
cmp
lods
inc
outsl
negb
jb
sub
les
pop
int
xor
mov
leave
xor
ds
xor
rcrl
pop
adc
mov
lds
js
cwtl
mov
lahf
mov
inc
lahf
cmpl
pop
mov
push
sarl
imul
pop
nopl
ficompl
sbb
push
loopne
push
dec
sbb
fisubrs
push
jp
and
cltd
popa
pop
push
lds
mov
or
call
or
and
inc
dec
xchg
movsb
inc
stos
aam
negl
or
sbb
mov
push
test
mov
cmp
sub
repnz
mov
mov
ret
push
and
xor
into
lods
cwtl
push
in
cmpsl
push
cmpsb
push
push
loop
inc
pushf
pop
inc
test
sbb
lcall
test
xor
inc
lds
push
lods
fwait
pop
mov
mov
sahf
push
push
stos
call
ror
push
pop
stos
aas
roll
int
xor
mov
xor
xor
fisttps
lcall
sbb
jb
fwait
sbb
jmp
or
xor
imul
push
hlt
rcl
pop
test
xchg
mov
test
pop
jae
mov
int
arpl
xchg
lcall
dec
test
and
inc
push
je
mov
adc
mov
das
xchg
and
test
pop
cltd
xchg
rcll
dec
testb
inc
dec
or
roll
ds
lock
cmc
push
mov
fcmovb
fcoms
mov
xorl
mov
jl
or
push
mov
lcall
jle
mov
and
xchg
mov
inc
push
enter
movb
or
jle
inc
lret
xor
aam
js
ds
push
xchg
mulb
mov
and
jge
iret
or
adc
cli
test
add
in
cmpsb
and
popf
lea
cmpb
sub
iret
xor
loop
push
pop
aaa
pop
aad
fnstsw
mov
test
adcl
aam
xchg
movsb
test
call
int
xor
mov
or
into
mov
mov
es
or
cmc
add
lea
mov
xchg
mov
lods
pop
add
enter
jp
movsb
sub
sbb
push
je
out
or
scas
push
cmp
popf
adcl
mov
testb
pusha
loop
inc
add
insl
xor
in
lret
jne
xchg
mov
mov
xorb
mov
leave
pushf
or
stos
adc
lods
rorb
add
mov
sbb
sbbl
sbb
cs
jne
xchg
fstpt
divb
or
sbb
frstor
arpl
mov
inc
out
test
test
loopne
sub
inc
shr
adc
add
mov
jp
jo
lds
fstpt
jne
jb
dec
jnp
gs
cmc
subps
or
inc
mov
mov
sub
sbb
gs
imul
mov
loop
mov
jle
sbb
aaa
xchg
loope
mov
dec
cld
fbld
push
lods
gs
jl
fdivl
sahf
push
clc
outsl
mov
stos
dec
sti
sahf
stos
sub
insb
dec
adc
and
js
fwait
xchg
pop
mov
setge
jne
rcl
movsb
jp
hlt
mov
repnz
ja
add
pop
nop
cmp
rcrb
lods
lock
pop
leave
sahf
out
pop
mov
cwtl
mov
leave
arpl
out
ret
pop
xor
push
lods
mov
bound
stos
das
adc
xchg
dec
int3
push
aaa
stc
cmp
dec
cli
xor
xorl
pushf
jg
ja
shlb
jo
cs
add
rorb
pop
ret
or
push
sub
xor
and
mov
add
in
cmp
in
mov
mov
mov
ret
dec
adc
in
push
mov
sbb
mov
mov
cmpsb
out
push
mov
insb
sub
mov
pop
out
jae
cmp
sti
push
daa
mov
mov
in
push
fstpl
or
jmp
push
xorb
insb
pusha
lcall
shl
push
mov
mov
leave
and
or
scas
xchg
lret
adcb
and
xor
shr
inc
test
mov
cwtl
pushf
jnp
stos
icebp
jo
mov
xchg
insl
sti
aas
add
xor
std
adc
pushf
ljmp
popa
sub
mov
addr16
cmp
test
push
loope
idivl
jl
gs
mov
outsb
mov
xor
mov
xchg
cmp
mov
push
mov
mov
mov
inc
aam
ret
outsb
movsb
cmp
dec
stos
pop
and
mov
mull
cmpsl
fwait
adcb
in
mov
sti
js
lcall
stos
adc
jl
sub
jne
mov
cmp
roll
inc
cmp
dec
nop
dec
jmp
ss
sbbb
enter
ss
mov
and
movsl
cmovne
inc
mov
mulb
jnp
das
nop
mull
cmp
mov
and
cwtl
dec
xchg
lds
fstl
lcall
inc
insl
xor
cs
je
mov
cmc
cmpsb
pop
insb
cmpsb
jae
jl
outsl
ljmp
mov
fnstenv
add
rorb
int3
int
mov
xchg
insl
xor
xor
add
dec
stc
cmc
pop
daa
cmpl
ffree
repz
fdivs
push
mov
add
aas
lcall
mov
lods
xchg
and
push
sub
xchg
mov
iret
insl
pop
sub
pop
movsb
ds
xchg
jne
addr16
adc
or
mov
adc
dec
outsb
adc
xchg
inc
and
cwtl
mov
fnstcw
inc
and
sbbb
pop
fadd
cmp
mov
test
mul
cld
mov
fsubl
jmp
jecxz
insl
fmull
mov
adc
test
jo
pop
imul
cli
add
xor
inc
mov
sbb
pushf
icebp
and
enter
pop
mov
ret
scas
sahf
insl
aad
shll
inc
or
pop
or
or
push
fistl
mov
aas
lret
and
test
dec
mov
mov
cmpsl
je
hlt
daa
lods
je
insl
fcmovne
shrl
xor
inc
rorb
mov
pop
dec
cld
rcr
mov
push
negb
loop
scas
xorb
or
cmp
inc
jmp
mov
mov
aad
cld
call
ja
testl
pop
jnp
push
leave
add
js
lods
mov
dec
repnz
ljmp
scas
xchg
aad
and
imul
aam
and
mov
push
push
scas
pop
lret
xchg
subb
hlt
xchg
hlt
shll
xorl
sarb
cltd
mov
inc
outsb
cmpsl
inc
repnz
cmp
adc
aam
xlat
sti
pop
subb
sbb
jge
ret
popa
mov
cs
fmull
mov
push
add
sbb
imul
popf
add
inc
push
sub
fwait
dec
pop
cmc
push
in
xchg
mov
xor
push
mov
mov
sbb
popa
jno
testl
pusha
ds
test
icebp
int3
mov
xorb
sbb
inc
lahf
sbb
pop
sub
xor
call
xchg
loop
loop
pusha
test
clc
mov
mov
fcoml
inc
icebp
fdivs
ret
repnz
out
pop
cmp
xor
nop
add
daa
nop
int
sub
or
out
cmp
push
jmp
shl
mov
mov
and
aam
xchg
inc
std
shlb
fs
pop
push
jge
and
jmp
xor
cli
cmp
mov
lret
sub
roll
lods
cld
or
and
mov
sbb
adc
imul
popf
sbb
dec
push
mov
xchg
test
mov
add
and
lret
in
xor
jmp
xchg
adc
in
adc
sub
ljmp
enter
lock
je
sub
xchg
inc
push
call
fistpll
xor
icebp
movsb
repnz
loope
faddl
cmpsl
inc
pusha
std
cmpl
sub
pop
insl
mov
cmpsl
orl
sub
xchg
lahf
adc
inc
mov
jnp
ss
repnz
ret
mov
ficoms
adc
xlat
or
shrb
jmp
jo
cmp
aam
out
and
test
mov
sbb
pop
pop
pop
cmpsb
pop
push
jb
adc
jno
lods
mov
inc
mov
push
sti
inc
pop
mov
leave
lret
movsl
or
hlt
je
cltd
lock
stos
jp
mov
dec
bnd
mov
xchg
insl
lock
out
pop
lods
xchg
insb
sub
inc
dec
pop
out
bound
xchg
fisttpll
cmp
pop
sbb
xchg
sahf
push
popa
adc
pop
adc
nop
bound
aas
ret
dec
sbb
mov
push
mov
nop
dec
push
sub
mov
std
sbb
jo
adc
jg
mov
mov
neg
out
pop
inc
fs
ret
xor
mov
mov
andb
xchg
xor
add
jne
push
xchg
xchg
clc
mov
sbb
xor
cs
pushf
cwtl
jp
loopne
cmp
addr16
sbb
pop
adc
pop
mov
cmp
adc
cmp
movsl
iret
push
sbb
ret
out
xor
std
adc
xor
hlt
mov
out
and
les
ret
pusha
imul
outsl
cli
xor
mov
loope
movsb
fbstp
shlb
out
ss
add
ja
pop
arpl
frstor
xchg
sub
xchg
mov
pop
sbb
and
xchg
inc
inc
imul
mov
jae
ret
test
imul
divb
loopne
mov
or
dec
or
fdivr
mov
jp
cltd
ljmp
adc
or
stos
mov
enter
xchg
xor
movsb
cmp
outsb
ret
je
adc
cs
cld
adc
lcall
cmpsl
lcall
mov
mov
add
or
dec
adc
ret
push
in
stc
push
mov
sub
pop
clts
pop
fnstenv
adc
test
xchg
popf
sbb
int3
jg
ret
lea
fdivrs
cmp
cld
xchg
mov
daa
sbb
xchg
shll
ja
ds
jp
cwtl
cmp
dec
sbb
std
cld
add
aam
sarl
jae
jne
mov
pushf
mov
iret
xchg
rorl
repz
test
insl
clts
inc
popf
addl
xor
in
ljmp
imul
cmpsl
lods
dec
xchg
test
rclb
jb
adc
lock
iret
cltd
lret
push
nop
insl
push
cmp
xor
xlat
xor
pop
sub
lcall
das
out
cmp
adc
nop
jmp
pop
xchg
or
mov
and
jns
xor
test
inc
daa
mov
mov
inc
xor
cld
xor
jbe
push
xchg
push
fucomip
mov
sbbb
repnz
cmp
popa
outsb
mov
pop
ret
jbe
adcl
dec
adc
bound
std
mov
cmp
add
xor
xchg
lods
add
iret
ljmp
jnp
cmp
mov
shll
fimull
loop
lock
sub
fildl
add
xchg
mov
scas
outsl
sbb
adc
push
pop
in
lret
std
in
shlb
lahf
outsb
outsl
dec
testb
cmp
aam
out
or
xchg
xchg
push
xchg
inc
fbstp
test
mov
faddl
pushf
sahf
xor
daa
adc
sub
mov
xchg
jns
out
mov
andb
add
push
jle
into
imul
popf
mov
testb
and
lods
leave
or
cmp
push
xor
std
ljmp
xlat
fisttpll
adc
and
cmp
les
xchg
shl
pop
loope
popf
adc
mov
pushf
sub
fmuls
push
out
test
jb
shll
push
sub
fcmovnu
addr16
xchg
pop
fsubrl
add
mov
movsl
mov
fistpll
pop
jecxz
xchg
rcl
into
lock
mov
fistpl
mov
out
pop
out
aaa
lock
or
mov
push
mov
cmp
test
popa
or
mov
cwtl
out
aas
sbb
ljmp
movsb
repz
or
mov
mov
sarb
test
sbbl
insb
arpl
stos
mov
sub
dec
add
adc
push
loope
inc
pop
mov
add
push
xlat
outsl
repnz
dec
sub
test
faddl
pop
adc
ds
sbb
enter
pop
inc
dec
xchg
mov
arpl
fisttpll
push
dec
mov
cmp
lahf
movsl
das
mov
scas
ljmp
cli
adc
add
adc
ss
bound
xor
mov
dec
mov
inc
loopne
cmpsl
outsb
jb
iret
inc
push
scas
pop
nop
cmp
call
lret
cmp
adcb
scas
push
movb
adc
out
loop
loopne
scas
pmulhuw
pop
lret
inc
lods
add
cltd
sub
mov
mov
sbbb
mov
fistpll
and
dec
sbb
leave
cli
pusha
and
sbb
aad
arpl
sub
xchg
sub
mov
pusha
push
lea
std
pop
addr16
sbb
pop
adc
dec
insl
mov
or
fmul
xchg
sbb
mov
hlt
mov
adc
call
push
dec
cmp
push
sbb
inc
rolb
arpl
adc
roll
add
mov
dec
fimull
repnz
pop
outsb
sub
fadd
addr16
sbb
and
jmp
and
call
mov
daa
movsl
into
enter
ds
adc
and
sarl
dec
test
cmpsl
iret
inc
xlat
test
gs
mov
jge
mov
imul
insl
pop
mov
popa
cmp
daa
popa
lcall
mov
test
jecxz
test
dec
add
adc
cmc
xor
inc
mov
inc
sbb
in
xchg
xchg
jae
sbb
pop
sub
cmp
dec
sub
sarb
outsb
or
jge
inc
repnz
cltd
mov
cmp
inc
lods
cli
pop
mov
jae
or
mov
and
fldenv
std
cmp
push
push
jle
inc
cmp
adc
addr16
sbb
lods
loop
ja
and
fdivs
push
int
mov
repnz
dec
fdivs
and
jae,pt
and
xor
xchg
int3
outsb
mov
leave
xlat
mov
inc
add
xor
int3
inc
hlt
movsb
clc
push
fldenv
and
jecxz
and
leave
scas
icebp
mov
xchg
xor
sub
scas
jmp
sbb
add
or
rclb
adc
rcll
lcall
sahf
and
adc
mov
mov
rclb
test
aad
jo
sahf
push
dec
and
or
popf
push
adc
xchg
inc
push
aaa
cmp
dec
aaa
xchg
mov
hlt
pop
inc
iret
lea
mov
pop
jbe
cmp
jae
out
into
mov
pop
pop
arpl
fdivrl
insb
rclb
repnz
ficomps
dec
insl
sbb
add
in
int3
xor
xor
add
push
mov
lret
pushl
stos
sbb
mull
test
cmp
sub
nop
das
test
xchg
mulb
andb
outsb
sbb
jbe
fs
iret
scas
lea
lret
jp
jg
ret
adc
xchg
test
ret
jle
iret
and
aam
sar
mov
xchg
sub
lock
push
imul
sub
ljmp
and
sub
cmp
or
loop
xchg
rcrl
pop
mov
call
jbe
inc
mov
mov
mov
or
add
sbb
mov
test
addr16
sahf
stos
mov
notb
loop
push
pop
jb
jg
test
std
loopne
imulb
in
cmpb
push
cmp
push
mov
adc
push
cmp
rorl
fidivrs
mov
mov
inc
movsb
mov
daa
or
jnp
pop
mov
mov
ja
lea
inc
mov
pop
jno
push
jle
adc
mov
pop
mov
add
or
imul
test
mov
pusha
add
andl
mov
xchg
in
cwtl
mov
stc
clc
inc
pop
push
imull
stos
lods
xchg
imul
ret
xor
movsb
scas
xlat
cmp
push
cltd
movsl
sub
outsl
test
dec
das
or
scas
mov
push
lahf
insl
dec
int3
outsb
xorb
sti
mov
outsb
push
cwtl
sub
inc
sub
dec
xor
cld
push
test
xlat
sbb
cli
add
test
mov
pop
add
mov
icebp
lcall
dec
jns
sub
sub
xchg
out
movsb
mov
xchg
or
cmp
insb
gs
jns
cmc
jmp
das
test
jns
xchg
lret
jmp
imul
cmp
xsave
in
sti
sbb
mov
jmp
push
push
jp
cltd
dec
insb
xor
gs
lods
outsl
sbb
add
out
xchg
je
push
int
ss
jnp
sub
mov
mov
push
hlt
mov
lea
add
mov
sub
std
fidivrs
dec
jmp
arpl
int3
loope
push
push
sub
cmc
lods
lcall
inc
fdivrs
mov
scas
sbb
pop
xchg
aas
jbe
xor
lcall
cmp
ljmp
add
mov
stos
pushf
test
push
mov
mov
xor
jle
add
lea
popa
movsb
xor
repnz
fwait
cmp
lcall
cmp
std
mov
adc
aas
xchg
jl
adcl
aas
xchg
lods
push
ds
shrl
jo
mov
sbb
negb
inc
insb
aaa
mov
xor
sub
mov
and
jno
bound
mov
push
je
dec
test
and
clc
aad
cmp
xor
loopne
pmulhuw
xor
dec
xor
mov
pop
xor
and
adc
push
repz
and
cmp
outsl
and
cmp
dec
stos
ret
enter
lock
xorb
nop
dec
inc
ljmp
scas
xor
sbb
lds
inc
xchg
mov
xchg
in
and
or
lret
cwtl
orl
adc
sti
sti
xorl
sub
pop
or
inc
lods
fsubrp
sbb
jae
or
lods
test
push
inc
std
pop
push
push
mov
mov
sbb
mov
pop
into
pop
push
mov
sbbb
rep
sbb
incl
fs
xor
arpl
dec
push
in
stos
xchg
outsb
cmpsb
jno
cmp
movsl
fcmovu
and
jno
repnz
or
rcll
sbb
roll
mov
notb
dec
cmp
test
loop
and
ret
jle
push
mov
pop
xor
stos
xor
shrl
idivb
mov
dec
cmp
mov
sbb
shrb
mov
xchg
pop
cmpb
and
cmp
xor
xchg
inc
mov
jae
out
mov
jmp
jl
and
ds
and
jne
inc
fldl
jnp
out
xchg
mov
aas
pushf
jno
ret
dec
jb
jp
pushf
ds
push
sbb
fidivrs
lods
orl
int
es
pop
in
jge
imul
lcall
fdivl
shr
fisubrs
in
imul
sbb
mov
xor
add
fildll
insl
and
add
xlat
mov
jns
xor
jp
hlt
out
lods
das
sbb
nop
gs
sbb
or
cmp
jg
pushf
lea
test
ret
jmp
dec
or
dec
mov
pop
inc
inc
mov
mul
mov
lea
inc
daa
fwait
fs
mov
push
jnp
push
test
ret
jnp
aam
mov
pushf
sti
cld
movsb
aad
mov
lea
inc
call
adc
push
shll
sbb
jecxz
xchg
mov
loope
mov
cmpsb
jno
arpl
inc
mov
iret
pusha
inc
xchg
dec
sub
sti
sbb
mov
push
add
xor
xchg
hlt
or
add
cmc
adc
pop
add
and
test
cli
out
stos
add
lods
mov
add
mov
pop
xchg
addl
enter
push
loope
xchg
js
lret
or
pop
enter
in
shl
bnd
mov
mov
mov
aam
pop
add
arpl
adc
stos
test
sbb
lock
pop
mov
add
jb
cli
jmp
push
push
dec
mov
sub
pusha
ds
jb
xchg
xchg
jnp
fidivrl
xor
shr
add
jmp
sub
cmpsl
and
sbb
xchg
xor
xchg
es
jo
addl
std
stos
ljmp
out
or
mov
and
add
dec
sbb
cmp
lret
loope
mov
repz
push
std
lods
sub
jle
mov
pushf
jl
mov
outsb
push
jecxz
jp
loopne
xchg
or
sti
dec
out
gs
mov
mov
cmp
xchg
jmp
gs
dec
mov
mov
scas
mov
ja
test
enter
scas
cmp
lods
jo
sbb
lahf
gs
xor
mov
dec
es
repz
cltd
lods
xor
dec
popa
sbb
mov
sub
jmp
call
pop
addb
rclb
mov
xchg
stos
mov
mov
xchg
sub
sbb
test
popf
mov
xchg
punpckhdq
fwait
daa
inc
adc
ss
inc
je
cwtl
push
int
pop
mov
cmp
xchg
adc
jl
sub
or
pop
insb
fimuls
or
xchg
mov
aad
mov
in
mov
mov
fwait
pop
lods
test
xchg
fwait
push
movsb
jmp
andl
bound
adc
adc
faddl
cmpsb
mov
cmp
stc
cmc
push
imul
mov
ret
mov
mov
rorl
xchg
push
add
test
add
addr16
cmp
imul
mov
jne
sub
mov
inc
loopne
xor
dec
cmpb
into
xor
push
in
rorl
cli
std
push
cmc
iret
outsl
inc
mov
or
iret
scas
xor
out
mov
movsb
rcl
pop
lcall
mov
out
lea
sbb
push
adc
push
jnp
push
mov
jge
mov
adc
mov
sbb
mov
dec
movlps
add
push
imul
lods
jo
data16
fnstcw
movsl
sti
out
js
in
fs
inc
movsb
pop
pusha
popf
sbb
clc
insl
pop
cmp
pusha
insb
add
scas
fldl
add
xchg
js
adcb
ret
aad
aad
push
cmpsb
out
push
popf
sbb
push
mov
pop
into
ljmp
mov
insl
pop
popf
sbb
or
add
fnstsw
sbb
mov
insl
mov
inc
dec
sbb
mov
jge
jo
aaa
incl
adc
sahf
lods
cmp
and
push
push
dec
jmp
sti
jns
loope
pop
pusha
add
jb
popf
xchg
jmp
outsl
aad
jb
and
shl
int
add
mov
cs
cmp
push
testl
daa
inc
mov
ffreep
clc
shlb
jecxz
xchg
mov
push
insb
xchg
adc
fimuls
xchg
sub
xlat
push
pop
aaa
jle
mov
fildll
sti
mov
cmp
adc
cmc
xor
xchg
int3
or
jae
fs
pop
xchg
leave
xchg
lahf
sub
pop
fldl
cmp
xor
sbb
xchg
aam
sbb
adc
enter
hlt
xor
lds
mov
enter
out
out
mov
xchg
cli
test
mov
sbb
scas
scas
pop
xchg
xchg
leave
xor
xchg
xor
jl
mov
roll
push
fidivl
lds
pushf
adc
xchg
mov
sub
data16
adc
pushf
std
push
insb
dec
jle
xorb
jo
ljmp
push
shrb
arpl
sub
mov
mov
xchg
xor
addl
insb
xlat
mov
dec
xchg
pop
mov
inc
jle
xor
jg
hlt
mov
inc
mov
push
clc
js
mov
jae
jp
ss
mov
push
icebp
dec
sub
or
jecxz
mov
fcompl
repz
jle
setno
pop
inc
out
push
jl
jne
sbbb
hlt
cld
mov
adc
fs
pusha
jg
mov
cwtl
xchg
and
or
or
sbb
add
lods
lahf
sub
sbb
pop
add
clc
int
mov
mull
lods
scas
test
inc
cwtl
cli
mov
jle
sbb
stos
leave
lds
out
mov
popf
int3
mov
xor
sbb
shl
mov
fsts
pushf
pop
jae
sbb
insl
mov
mov
sub
cmc
mov
xchg
add
sub
je
mov
lret
nop
xchg
arpl
and
push
fs
jmp
movsl
shrb
sbbl
or
dec
lods
xchg
iret
inc
pop
mov
into
xchg
cmp
sub
test
loopne
cmp
cld
dec
das
or
inc
jne
xchg
aas
xor
cmpsl
out
push
pop
flds
jb
jbe
insl
pushl
push
loope
inc
jmp
xlat
fstpl
mov
orb
das
outsl
mov
jl
sbb
sahf
sub
test
xor
or
hlt
out
cwtl
sub
inc
dec
outsb
scas
mov
repnz
adc
mov
mov
jae
mov
outsl
jo
bound
data16
fst
btc
lret
mov
idiv
sahf
cmp
js
dec
in
out
pop
inc
adc
fbstp
add
arpl
jno
jne
mov
out
dec
scas
out
xor
add
test
shll
push
fcoml
int
cmp
dec
jbe
push
jnp
jge
add
lock
mov
inc
in
popa
fildll
xchg
cmp
or
ret
lcall
repnz
fcmove
enter
push
sub
add
rol
xor
xchg
leave
inc
loop
cmp
sbb
inc
pop
mov
cmc
xchg
jae
pop
add
out
jnp
bound
mov
xchg
cmc
mov
lods
iret
or
repnz
roll
scas
jp
push
xchg
xchg
sbbb
popf
in
mov
shl
fsubs
cmp
iret
data16
pop
inc
inc
mov
rcrl
movl
inc
incl
cmp
mov
mov
pop
ds
daa
mov
and
je
lds
xchg
ja
xchg
cltd
call
lock
sbb
daa
aas
iret
mov
jmp
fbstp
pop
sahf
ljmp
or
les
mov
pop
fstl
imul
jb
mov
xchg
adc
testl
mov
fidivs
mov
xor
inc
shrb
xchg
xchg
jl
std
push
lds
mov
fbstp
xlat
inc
mov
adc
sbb
adc
push
ds
xlat
mov
insl
in
mov
jbe
or
repnz
dec
pop
cmpsl
jbe
imul
cmp
std
scas
je
int
je
cld
add
mov
int
outsl
adc
jnp
imul
shrd
fildll
adc
pop
inc
and
je
sub
sahf
sahf
fnstenv
repnz
inc
pop
pop
push
cmpsb
push
in
outsl
popf
or
sti
addr16
sub
mov
cld
xchg
dec
inc
xlat
and
je
mov
lret
ljmp
sub
lea
add
add
enter
push
xchg
xlat
and
push
xchg
fsub
jns
ljmp
mov
ljmp
xchg
test
enter
fidivl
cmpsb
or
fdivrl
outsb
add
dec
popf
imul
out
notl
stc
ja
popa
or
mov
repnz
or
xchg
outsb
andb
lahf
mov
sbb
xor
mov
sarb
sub
pop
incb
mov
addr16
cmc
mov
push
dec
and
mov
hlt
or
mov
nop
inc
mov
dec
pusha
adc
pop
mov
gs
jmp
mov
mov
mov
cmp
sarb
ret
into
je
rcrl
add
lods
in
imul
cmp
mov
add
shrb
fldcw
lcall
lock
mov
sub
in
mov
mov
xchg
jl
stos
push
add
arpl
pusha
jmp
pop
nop
adc
out
sbb
movsl
mov
movsb
or
mov
cli
fadds
jb
fadds
jg
mov
pushf
mov
mov
mov
push
into
out
in
sub
mov
pop
movsl
into
sub
add
ret
jno
pop
fidivl
pop
or
mov
icebp
mov
cmp
sar
xor
pop
loope
test
jmp
add
sub
adc
ret
xorl
sub
pop
std
pop
push
push
lea
in
xchg
daa
rcrl
sti
push
xchg
sbb
cmpsl
jg
cli
inc
test
mov
xor
rcrl
dec
mov
adc
daa
and
ret
push
and
scas
in
cs
hlt
test
dec
aas
or
arpl
pop
xchg
sarb
loope
jg
jno
cld
jge
add
sbb
add
incb
push
adc
insb
cmp
mov
out
movsl
es
inc
sbb
mov
and
inc
test
lock
mov
daa
mov
mov
mov
adc
jb
push
adc
xlat
testl
jbe
shlb
mov
add
pop
push
icebp
jns
mov
push
outsb
push
and
rol
xchg
pop
and
shr
inc
aad
push
loope
xchg
in
fildl
mov
push
fdivl
fnstcw
imul
movsb
out
jecxz
sahf
fstps
and
bound
mov
out
rol
popf
mov
call
loopne
pop
mov
addr16
push
xchg
fcmovu
pop
and
xor
iret
int3
jl
cmp
or
or
cmpsb
push
nop
jae
sub
mov
fxch
push
iret
jle
mov
xchg
jo
push
sub
mov
push
pop
in
sbb
push
add
test
mov
mov
xor
mov
push
out
jnp
ds
cmc
jno
ds
pop
xchg
mov
and
sub
mov
mov
push
pop
inc
js
or
das
loope,pt
mov
scas
pop
and
mov
orl
mov
pop
shrb
sub
out
repz
xor
inc
fsubs
adc
pop
js
add
pop
ret
andl
sbb
dec
xor
pushf
popf
pushf
insl
sub
pushf
stos
pop
sub
xor
xor
cmp
insb
test
xchg
xor
stos
outsl
pop
lods
subb
dec
mov
lods
or
inc
outsl
outsl
insb
sub
mov
aad
or
out
sub
scas
stos
mov
daa
ds
jecxz
stos
add
sbb
mov
and
cli
ret
push
arpl
mov
test
sub
mov
xchg
adc
adcl
arpl
dec
hlt
fsubl
test
mov
mov
jne
adc
mov
xor
mov
xchg
subl
inc
and
mov
popa
xor
das
sub
in
mov
dec
xlat
push
jg
int3
cmp
push
sahf
stos
push
jne
sbb
subb
ljmp
jecxz
add
insb
cltd
cli
rolb
popa
sbb
mov
dec
or
inc
out
movsl
xchg
and
cmp
sub
fsubl
sub
dec
aam
xchg
test
leave
lcall
mov
out
in
xchg
mov
and
jns
iret
or
xchg
and
jbe
or
push
pusha
loope
sub
cmpsb
test
stc
daa
imul
nop
xor
xor
push
jp
xchg
pop
inc
in
mov
loopne
mov
cs
xor
jb
ror
and
pushf
sub
mov
sbb
ret
mov
aaa
mov
fldenv
xchg
out
mov
inc
sbb
scas
mov
xchg
jae
inc
aas
cmp
sbb
sahf
pop
addr16
mov
inc
fistl
loope
in
mov
lcall
fcmovnb
mov
in
jmp
or
jmp
call
cld
pushf
or
cmp
adc
aaa
pop
xchg
pusha
cmc
lds
or
cmpb
out
ja
std
mov
fnstsw
iret
scas
sub
test
or
addr16
sbb
mov
test
mov
sbb
xor
dec
stos
pop
test
pop
movb
or
dec
push
arpl
mov
add
loopne
mov
lret
xchg
mov
mov
jbe
ret
sub
lods
mov
jmp
pop
scas
jmp
mov
sbb
ret
and
pop
ret
sbb
lods
inc
les
inc
outsb
jno
int
hlt
jg
sbb
subl
mov
ja
pop
jae
mov
aad
in
bound
inc
mov
subb
and
nop
adc
pusha
das
jns
sub
jg
xor
sbb
dec
mov
push
popf
dec
stos
xchg
es
jbe
out
fldt
mov
fnstcw
push
in
cmp
adc
mov
lods
or
and
outsb
push
rcrl
or
dec
mov
xchg
inc
sub
loop
fadd
inc
xchg
sub
shll
int3
les
stos
add
jns
add
add
dec
pop
test
imul
enter
xchg
mov
stos
jecxz
bnd
rol
push
andl
in
xchg
test
mov
jns
cmpsl
add
sahf
xchg
cli
jmp
adc
in
push
push
js
xchg
mov
dec
hlt
insb
add
pop
in
jbe
inc
pop
shrl
int3
data16
pop
xchg
and
fcompl
loop
in
jnp
fwait
movsl
fcmovne
add
sarb
sbb
pop
lret
loope
pop
pop
pushf
loop,pt
cld
shr
jnp
lods
test
and
out
out
cmpsl
repnz
fwait
dec
push
movups
test
data16
xchg
fstp
inc
mov
and
shl
and
and
cli
rcll
mov
test
lret
in
or
push
mov
cmpsl
cmc
mov
sbb
dec
es
loop
stc
rcrb
or
rorl
imul
push
mov
leave
sbb
rorb
inc
loop
mov
mov
int3
fstl
enter
movsl
xchg
push
cltd
ret
ror
mov
lds
es
stos
inc
mov
movsl
test
aas
loop
mov
xor
cmc
xor
mov
jle
bound
loop
fnsave
imul
pop
loop
outsl
cmpb
push
sub
xlat
out
lds
loopne
xchg
clc
inc
sti
mov
add
push
setne
cld
xlat
pop
fstps
loopne
pushf
or
pop
adc
add
sub
scas
movsl
mov
jg
movsb
ss
dec
mov
push
cld
clc
cmpsl
push
jmp
mov
fsubr
jns
jecxz
pop
xchg
outsl
mov
inc
xchg
ret
sbbl
mov
and
fildl
push
into
cmc
cmc
mull
or
icebp
data16
imul
in
jbe
jae
xchg
rorl
ljmpw
push
pop
movsl
xchg
push
inc
mov
cld
icebp
aaa
add
mov
repnz
es
bound
lds
fcmovnbe
aam
xchg
adc
int
xor
gs
or
push
and
std
lret
lock
das
sbb
in
push
jno
mov
and
adcl
arpl
cmp
stos
cmpsb
aad
addr16
cmp
out
sarb
pop
jo
sub
xor
pop
push
jnp
push
jl
mov
dec
aad
and
pop
push
sarb
inc
rcrl
pop
jnp
cmp
mov
jp
lock
loopne
pop
jg
movsl
js
jmp
dec
add
pop
jo
inc
cmp
sub
inc
out
cmp
sti
add
roll
aaa
xor
mov
xchg
addr16
incl
jns
loopne
push
fldl
dec
imul
lods
xchg
cli
outsl
dec
pop
mov
adcl
ljmp
test
fdivrl
push
sbb
sub
idiv
hlt
insb
pop
and
xor
cmp
push
inc
scas
cwtl
sbb
je
or
xchg
xchg
mov
push
sbb
mov
dec
outsl
add
and
inc
addps
les
push
sub
sbbb
cli
enter
repnz
loopne
jns
add
test
sub
inc
mov
sub
push
out
mov
mov
sbb
mov
and
inc
dec
push
mov
jns
rcrb
mov
aaa
pushf
jne
test
outsb
push
pop
pop
inc
push
test
push
mov
mov
dec
and
nop
sub
arpl
not
mov
test
jae
push
sub
cld
xchg
mov
cs
scas
fwait
push
adc
jbe
xlat
add
outsb
xchg
inc
mov
sahf
dec
pop
loopne
mov
int3
mov
arpl
pop
push
and
ljmp
pop
or
dec
jp
stos
pop
dec
xchg
insb
mov
in
dec
xor
test
mov
gs
gs
dec
dec
mov
cmpsb
iret
lea
shr
lcall
adc
into
pop
xchg
jl
sub
mov
fsubl
dec
mov
and
push
jne
mov
dec
mov
adc
push
jge
and
ds
stos
pop
rorl
xor
pop
mov
dec
jno
push
in
jo
test
push
iret
cmp
es
add
orb
paddw
xor
mov
cltd
jbe
aas
jnp
pushf
cmp
jle
ror
lea
movsb
out
add
imul
in
cmp
mov
add
xor
bound
mov
sbb
push
lock
dec
cld
inc
mov
pop
idiv
lds
and
cmpsb
lret
leave
xchg
dec
fmull
push
jbe
push
pop
and
ret
xchg
fsubrp
jg
adc
sarl
dec
mov
jae
adc
inc
sbb
add
rcrl
fwait
pop
dec
or
mov
ret
add
mov
sub
insl
aam
out
sbb
les
ss
mov
ret
inc
lods
push
adc
jg
aaa
pop
mov
push
sub
xchg
sbbb
adc
scas
or
push
sbb
sub
js
or
dec
xchg
sbb
cmp
cmp
push
adc
icebp
mov
shll
xchg
mov
iret
jns
push
add
xchg
enter
mov
jle
imul
jmp
adc
xor
lret
mov
test
std
test
fwait
push
jecxz
daa
out
ds
loopne
cld
push
push
loopne
cmpsb
enter
test
scas
dec
mov
dec
or
lods
jnp
cmpsb
in
lcall
js
cmp
xor
mov
xchg
jg
addr16
pop
outsb
popf
test
push
roll
popa
dec
stos
nop
add
scas
fiadds
pop
lcall
nop
xchg
bound
fsub
cwtl
pop
jo
inc
mov
mov
pusha
imul
jno
stos
adc
jne
xchg
xchg
call
and
add
add
or
bound
push
jno
imul
or
les
mov
icebp
jo
mov
sbb
lcall
movsl
cmp
jge
sub
stos
mov
jecxz,pt
enter
pop
bound
or
fsubr
cmpsl
fmuls
ret
dec
dec
das
dec
inc
lods
shll
movsl
inc
das
shlb
lock
js
data16
ds
js
dec
shlb
ss
pusha
push
dec
cmpsb
sub
fdivr
jnp
test
nop
push
pop
push
mov
ret
aas
dec
mov
aam
add
mov
sbb
ret
and
xchg
xchg
ret
insl
mov
leave
jl
sbb
xor
shll
cwtl
imul
cmp
lahf
stc
lods
mov
sti
xlat
xchg
or
stos
aam
mov
mov
int3
ret
pop
and
xchg
pusha
mov
mov
mov
in
imul
pusha
xchg
cmp
sub
sahf
mov
dec
push
enter
mov
addr16
xchg
cmp
cmp
fwait
jo
sbb
mov
mov
aam
push
sahf
pop
fcoms
mov
adc
mov
mov
flds
fidivrs
or
popa
dec
pop
push
das
dec
sbbl
mov
mov
repz
mov
ret
scas
adc
push
push
outsb
xlat
cltd
add
repnz
mov
xchg
les
mov
lods
push
mov
orb
add
adc
fstpt
xor
stc
cld
dec
jle
stc
add
add
rol
cltd
lcall
xchg
jne
inc
or
xlat
xchg
jo
lods
mov
sbb
enter
pushw
sti
jns
aas
sbbl
decl
stos
cli
inc
out
fistps
rorb
je
push
orb
iret
cltd
push
xchg
xchg
pop
xchg
pop
cltd
js
mov
ret
xchg
stc
push
flds
inc
xor
push
xor
sti
sbbb
mov
inc
mov
or
push
mov
pop
mov
in
js
ffreep
xchg
ret
push
cmp
mov
or
aaa
push
dec
fwait
adc
xchg
push
jae
ss
test
sarl
nop
xchg
out
pop
shlb
mov
or
push
adc
xor
dec
and
rcll
dec
lods
in
cmpb
outsl
fsubp
lods
lcall
jne
test
and
or
int
push
cmpsb
xchg
lds
dec
rorl
fcmovnu
lods
cltd
fsubs
or
jge
push
push
or
sbbl
out
mov
mov
jo
pop
adc
xor
jo
shr
jo
arpl
cmpsl
gs
dec
dec
adc
lock
adc
cmc
addl
test
mulb
fiaddl
mov
sbb
sbb
and
add
fimuls
pop
mov
jl
or
or
and
mov
add
test
movd
mov
sub
cmpsb
push
push
fmull
jae
mov
adcb
cmp
ds
push
sbb
inc
push
leave
ja
jbe
mov
fsts
icebp
jbe
hlt
call
jmp
cmp
clc
sahf
outsl
and
lea
stos
fnstcw
lcall
sbb
pop
pop
xchg
loop
cmc
and
pop
and
xlat
leave
pop
sar
cmp
jmp
mov
stc
mov
pop
enter
mov
jmp
out
lock
sbb
and
push
stos
jl
hlt
mov
movsl
push
pushf
ds
mov
sbb
ja
adc
out
lcall
cwtl
inc
test
fcom
lods
repnz
test
mov
inc
inc
xchg
repnz
jl
bound
mov
iret
rep
inc
lret
loope
cmp
mov
xchg
sbb
lea
cli
cwtl
fwait
dec
hlt
jnp,pt
test
es
shrl
call
xchg
cmp
rclb
dec
add
es
clc
jb
jge
stos
sub
and
add
adc
shlb
pop
popf
xor
or
ficomps
fisubs
sbb
daa
int3
inc
lret
notb
jmp
xor
dec
xor
or
push
aaa
pop
lcall
or
cmp
inc
mov
stos
sahf
sub
add
lods
adc
out
jb
push
cmp
testb
fstps
or
mov
or
cmp
mov
dec
test
out
js
jmp
mov
popf
iret
mov
imul
jbe
or
das
inc
and
jp
movsb
mov
xchg
fdivrl
adc
cli
inc
fidivrs
xor
adc
insl
mov
ja
jns
stos
sbb
push
mov
cmp
and
sub
cmpsl
lock
xor
inc
or
pop
iret
test
hlt
test
ds
mov
mov
push
sbb
mov
cld
test
stc
out
packsswb
in
dec
xchg
shl
sbb
fists
jns
mov
cmpsl
js
mov
popa
jo
jl
sbb
or
test
xchg
sbb
inc
stc
xchg
dec
xchg
repz
pop
pop
je
lret
lret
jbe
movl
inc
mov
pop
and
xchg
pop
sti
aad
iret
mov
xchg
mov
fnsave
or
fsubr
repz
mov
push
cmpsl
sub
ja
icebp
into
or
cmp
cmp
dec
and
push
bound
lret
sub
inc
out
nop
fwait
movsb
cwtl
ror
mov
adcl
jge
adc
cli
popf
and
xor
mov
je
aas
xchg
repz
fwait
pop
in
inc
pop
mov
lods
data16
testl
and
inc
std
adc
loopne
mov
roll
sub
sub
jg
movsl
pop
cwtl
cmp
add
push
sbb
data16
cld
adc
jnp
mov
push
inc
mov
push
out
out
cmpb
xchg
int
xor
cld
imul
cs
dec
adc
xorl
lcall
sub
subl
cmp
inc
sbb
enter
xchg
fwait
jl
mov
push
cmp
mov
mov
sub
stos
jmp
add
fldcw
sbb
mov
shll
insb
jp
pop
mov
cmpsl
cs
js
subb
ss
fisubrs
gs
cmp
jno
push
cmpb
jne
bound
gs
adc
add
stc
xchg
inc
sahf
cmpsl
dec
les
dec
mov
pusha
mov
and
mov
jg
push
inc
xchg
pop
mov
sbb
adc
sub
add
pusha
stos
cmc
add
lea
lcall
jnp
mov
ror
pushf
aaa
cmp
cmpsl
ret
movl
pop
or
mov
mov
in
rorl
xchg
jle
xchg
fists
mov
popf
jg
rcrl
daa
fdivrs
xchg
icebp
imul
or
and
fimull
pop
out
or
xchg
xor
nop
ret
ljmp
sub
mov
mov
loope
test
pushf
and
mov
mov
lods
mov
outsl
xchg
push
jno
mov
insb
leave
inc
ds
out
call
adc
lods
enter
adc
imul
pop
movsl
sbb
pop
or
lgs
lahf
repz
pop
shlb
lea
or
pop
adc
test
push
pop
xor
cmpsl
lea
adcl
dec
imul
sbb
add
shrb
daa
or
stos
orl
lods
xchg
in
sbb
js
push
inc
and
pop
sub
sub
subb
loopne
xor
hlt
push
lds
jmp
inc
xchg
iret
and
sbb
jge
inc
and
rorb
js
enter
inc
or
sbb
jne
pop
add
fstl
nop
xchg
nop
insl
and
iret
lock
mov
pop
pop
data16
andl
std
outsb
pushf
ljmp
test
nop
xchg
pop
sub
lds
inc
bound
mov
mov
rcll
mov
popl
dec
out
test
call
sub
jl
inc
lods
fiaddl
aam
into
dec
mov
add
icebp
out
mov
pop
sbb
mov
xor
mov
bt
test
xor
pushf
pop
insl
add
ljmp
js
ss
mov
arpl
sub
imul
adc
adc
and
push
jl
loope
pop
mov
aad
test
add
fbld
in
stos
mov
loop
xor
adc
mov
fstpl
xchg
in
xor
mov
pop
mov
popa
lret
and
pop
push
ljmp
jo
sbb
iret
cmp
iret
cmpsb
imul
jo
and
adc
sub
dec
movsl
ljmp
test
test
call
call
sbb
inc
pushf
or
xchg
xor
mov
mov
enter
arpl
cltd
xchg
daa
mov
xor
in
ljmp
or
js
add
adcb
cmp
outsl
ja
push
pop
lds
push
lds
dec
hlt
test
mov
pop
jbe
jns
cwtl
aam
lea
pop
mov
and
bound
jl
sub
ljmp
jmp
adc
fistl
movsl
fsts
xor
movsb
addr16
mov
int3
sbb
or
rclb
mov
sbb
dec
ss
pop
jae
mov
xor
mov
sahf
push
js
cwtl
into
mov
pop
pop
ljmp
js
hlt
sbb
pop
cmp
pop
push
cmp
and
roll
jge
xor
xor
aaa
daa
mov
jno
dec
fadd
push
out
sbbb
lret
inc
pop
inc
dec
lods
sub
xchg
cmp
and
in
fwait
xlat
gs
or
cwtl
dec
popa
mov
cmp
mov
jbe
pop
push
push
xchg
pusha
cmpsl
mov
or
adc
test
push
xchg
clc
xor
andb
cmp
scas
jle
mov
les
loopne
enter
xlat
leave
push
inc
and
xchg
imul
mov
xor
pop
out
loopne
mov
insb
loope
test
push
fadds
test
add
xchg
mov
cld
xchg
movsl
les
inc
imul
hlt
shlb
lahf
roll
mov
xchg
push
inc
adc
insl
sbb
add
jg
leave
bound
push
std
sub
push
mov
call
ja
shll
rcl
insl
imul
sub
pop
outsb
add
mov
push
leave
fildll
sub
pop
outsb
mov
dec
xchg
pop
clc
subl
sarb
jns
add
rcrb
clc
addb
cmc
jae
push
pop
test
xor
jmp
rcl
fsub
cmc
daa
out
add
xchg
pop
lret
stos
cwtl
mov
adc
or
push
lret
rcll
push
test
aas
push
jmp
fcoml
push
sti
cli
mov
mov
mov
imul
mov
and
popf
les
bound
insl
jp
add
out
jle
mov
sub
lea
fimull
cmc
cmp
cltd
arpl
negl
int3
sub
mov
pop
fidivrs
daa
push
divb
cs
int3
in
popa
fdivrs
xor
lret
fsubr
fildl
stos
clc
cmp
push
dec
aam
lock
jl
sbbl
cmpsb
dec
sub
or
ljmp
jge
push
repnz
mov
xor
pop
test
std
add
out
jecxz
test
mov
rcrb
sbb
adc
in
and
add
lods
dec
jo
mov
into
negl
or
pop
lods
jmp
loopne
fs
push
ret
daa
mov
fadds
insl
mov
jns
or
xor
out
leave
pushf
inc
and
test
or
or
out
popf
dec
lcall
aam
sub
mov
faddl
call
mov
xchg
xchg
mov
in
icebp
loop
xor
ja
mov
xchg
adc
pop
jle
in
pop
and
cwtl
insl
xor
xchg
sbb
rorb
inc
insl
bswap
mov
aaa
es
insb
mov
gs
rorl
enter
and
imul
fs
sbb
adc
or
ret
inc
ss
clc
mov
cmp
or
mov
mov
xchg
rcl
sahf
mov
pushf
icebp
add
cmpsl
mov
cmpsl
data16
xor
cltd
mov
add
lea
aad
sahf
cs
mov
sub
or
push
dec
cmc
scas
fdivl
inc
or
outsl
out
and
mov
or
movsb
xchg
pop
xor
std
lock
insb
xor
xchg
mov
out
cmpsl
fstpl
and
fimuls
and
jns
xchg
and
sub
adc
test
add
adc
inc
popf
add
sub
stos
ja
mov
xor
fwait
push
dec
push
jns
js
sub
sub
cmp
es
mov
subl
jg
adc
sbb
mov
push
stc
cmc
ljmp
cs
roll
ficomps
cmp
out
xor
mov
mov
push
cmp
mov
xchg
data16
xchg
inc
loop
adc
xchg
into
fmuls
stos
mov
sbb
mov
sbb
setg
cmp
mov
cltd
mov
jns
test
es
movsl
fwait
xchg
adc
xchg
mov
mov
mov
pop
dec
rcr
fisttps
outsb
imul
inc
test
mov
sar
outsl
xchg
nop
fstpt
insl
into
cwtl
pop
fisttpl
stos
shrl
xchg
xor
imul
push
xor
lret
test
push
mov
mov
mov
mov
in
lods
lret
xchg
imul
gs
loop
and
add
pop
pop
jb
movsl
bound
sbb
rcrl
ljmp
cmp
lahf
jo
xor
in
sahf
sbb
dec
jle
sbb
cmpl
lods
lahf
test
mov
nop
cs
jo
addl
add
push
inc
and
lods
out
dec
jle
sti
dec
push
add
lock
adc
sti
sbb
ret
and
xchg
and
xor
mov
insl
bound
mov
aas
dec
mov
mov
out
jge
and
lahf
mov
adc
dec
sti
in
rcrl
mov
cli
sbb
das
jbe
mov
and
dec
sub
fs
jg,pn
cs
sub
xchg
inc
rorb
sbb
mov
call
sahf
sbb
mov
mov
jp
cmc
push
mov
xor
adc
enter
mov
shlb
xor
sub
stc
nop
mov
lcall
pop
mov
add
push
imul
sub
enter
enter
int3
call
fimuls
imul
push
es
push
fcmovnu
sar
imul
mov
popf
push
popa
rorb
lret
test
mov
sbb
daa
ret
mov
mov
and
shll
lret
aam
out
lret
pop
sbb
push
pop
mov
aad
mov
push
and
cmp
and
jnp
testb
dec
mov
sahf
test
loopne
cmp
pop
ret
adc
inc
nop
fwait
jns
cmp
les
xchg
bound
test
dec
stos
leave
cmp
sub
push
or
rcrb
lock
add
sub
fwait
sub
mov
lcall
adc
cmp
in
ljmp
gs
imul
pop
mov
fbstp
popa
shl
mov
sbb
cwtl
inc
fcomps
jp
pop
out
lds
mov
mov
rcl
insl
test
and
icebp
and
jl
imul
fcoms
cmpsb
fildll
shrl
adc
andb
and
pop
sarl
stos
popa
shrb
push
outsb
das
and
xor
xchg
mov
sbb
lcall
push
mov
mov
xchg
mov
nop
rcrl
int
lea
jb
hlt
jecxz
pop
xor
repz
xor
mov
jmp
mov
mov
daa
add
int
jne
jl
imul
jo
pop
dec
push
add
popa
pop
xor
shll
icebp
dec
jbe
pusha
jne
cmp
lahf
sbb
xchg
scas
lahf
add
stos
push
push
leave
cmp
dec
and
repnz
dec
aaa
imul
adc
cmp
dec
xor
arpl
shrb
out
jb
icebp
fwait
cmp
ret
xor
aas
mov
jae
pop
jbe
dec
cltd
stc
loope
dec
sub
cwtl
dec
fstpl
fidivrl
or
mov
push
dec
lcall
or
ds
fsub
push
repnz
ror
xor
addl
fisubs
out
adc
pop
sub
in
mov
push
jmp
call
jg
pop
and
in
cli
mov
dec
rclb
pusha
in
js
xor
mov
add
lahf
sbb
mov
dec
lret
jbe
pop
xchg
adc
decb
fstps
enter
jo
js
add
movsl
push
dec
dec
inc
jecxz
push
pop
mov
pop
inc
xchg
mov
sub
cmpsl
and
stc
loop
popa
pushf
push
or
popf
cmpsl
xchg
insb
inc
cli
or
pop
sbb
imul
fsubl
cmp
xor
out
pop
sbb
sbb
clc
daa
loopne
add
nop
stc
pop
pop
adc
push
cli
xor
mov
test
jns
dec
shll
push
fsubp
jmp
inc
xor
pop
call
negb
jmp
sbb
pop
dec
roll
inc
sbb
pop
mov
push
mov
loop
add
push
loope
leave
sti
jmp
mov
out
adc
and
loop
nop
arpl
sbb
test
scas
stc
jmp
leave
pop
cwtl
hlt
aam
testl
cmp
inc
inc
mov
inc
adc
mov
pop
or
mov
sbb
inc
pop
mov
pusha
bound
scas
or
adc
push
mov
mov
sub
sub
hlt
aam
mov
add
sbb
ds
jae
stos
pop
addr16
sbb
mov
nop
jmp
pop
cmc
adc
jmp
mov
cs
stc
into
pop
jl
jo
xchg
and
mov
repnz
pop
mov
jmp
idiv
sub
push
jle
ljmp
xor
int3
xchg
leave
xchg
xor
xchg
mov
and
lds
or
loopne
mov
enter
rcl
mov
andl
push
pop
or
stc
jg
dec
mov
dec
popa
jmp
mov
pop
cmp
push
sub
add
jl
cltd
xor
push
fs
jo
sub
sub
sbb
mov
add
push
fdivrl
or
sub
das
sub
lret
or
inc
cmpsb
and
cmp
out
into
adcl
fdivp
adc
fs
clc
or
add
or
mov
pop
inc
lcall
ljmp
bound
out
push
out
mov
shr
jmp
or
divb
insl
xchg
pop
xor
movsl
dec
jle
xchg
lahf
xchg
xor
movl
orb
add
ljmp
out
xor
sbb
dec
cmp
inc
inc
add
shlb
into
cmp
add
jmp
dec
pop
lret
subl
mov
and
and
cmp
int3
lcall
test
leave
and
scas
cs
cli
mov
ds
pushf
dec
repz
add
addps
sahf
mov
lods
loop
jo
push
test
in
outsl
sbb
push
mov
sbbl
into
pop
cmp
outsl
std
fwait
es
jnp
out
aam
test
out
mov
int
push
sub
ss
inc
adc
fildll
insl
loopne
arpl
dec
pop
mov
jg
jmp
subb
push
and
inc
mov
xchg
add
std
out
rorb
sbb
arpl
pop
nop
jmp
xchg
daa
enter
lods
adc
or
push
sbb
push
sbb
loope
hlt
lcall
insl
fs
loopne
sbb
xor
jge
push
cmc
xchg
push
sub
pop
or
cmp
leave
nop
sahf
cmp
mov
movsl
leave
and
sub
popa
sub
dec
push
or
inc
or
xchg
xlat
mov
and
push
addr16
adc
mov
and
and
push
pop
gs
pop
scas
in
sub
mov
stc
movb
dec
ficomps
and
int3
mov
inc
cmc
dec
ss
xlat
sub
dec
les
mov
mov
adc
scas
test
push
push
jne
dec
test
jo
adc
movsb
or
cmc
nop
nop
arpl
inc
inc
jae
cli
popf
or
ljmp
addr16
mov
sbb
add
mov
adc
scas
push
call
sbb
insl
push
xrelease
jle
xchg
movsb
mov
add
push
je
and
push
cmpsb
test
push
cmp
movsb
pusha
out
pop
aas
in
into
repnz
stos
xchg
push
sbb
mov
dec
xor
mov
int
pop
lods
or
outsl
nop
add
insb
mov
sbb
sti
cwtl
repnz
jo
shll
xor
xchg
push
sub
inc
test
fnstcw
xchg
add
mul
push
adc
imul
aaa
add
scas
sub
int
add
xchg
sbb
jae
inc
je
jae
ficoms
mov
unpckhps
pop
sub
cmc
cmpsb
push
xchg
hlt
scas
mov
sub
cli
xor
mov
jne
push
xchg
clc
adcl
punpckhdq
xor
jle
test
fsubl
mov
mov
js
add
push
mov
sbb
lods
pop
hlt
ss
pop
js
in
jl
push
call
dec
pushf
stc
test
jl
sbb
and
xor
xchg
or
pop
xchg
push
in
sub
jge
push
mov
test
lret
or
lcall
adc
mov
repz
jl
sub
fucomip
dec
pop
out
pop
xchg
jns
sbb
mov
cmpsl
pop
movb
jg
pushf
inc
enter
mov
lret
jno
mov
push
imul
pushf
in
mov
aaa
pusha
aaa
inc
call
and
sbb
and
test
push
xchg
shl
fs
inc
mov
jne
enter
addl
inc
and
orb
in
pusha
adc
cmp
inc
xor
cli
test
jl
outsb
shrl
mov
jo
pop
fidivrs
sti
in
outsl
sub
sbb
jl
cmpsb
pushf
lea
jp
hlt
xchg
mov
cmp
xor
xchg
outsb
xlat
shr
int3
in
inc
cmp
movsb
add
mov
ljmp
pop
je
jo
and
movsl
dec
loope
fwait
dec
je
push
mov
pushf
cmp
inc
and
sbb
in
mov
inc
mov
and
imul
mov
subb
mov
out
gs
mov
cmp
fisttps
stc
cs
leave
out
out
orl
ja
jmp
push
push
pop
jg
test
ss
push
lcall
mov
sub
mov
push
bound
lret
pop
mov
orb
add
push
sti
push
inc
add
andl
test
popa
push
les
and
xor
test
inc
push
sub
pop
adc
mov
jl
loop
mov
decl
lods
cmp
inc
std
imul
cmp
sub
add
sub
adc
dec
sub
fcompl
aad
mov
call
push
cmpl
rcll
repz
testl
jo
nop
adc
dec
and
mov
sbb
cmp
inc
add
mov
sub
sbb
sub
xchg
add
and
lods
push
jl
sbb
mov
sar
xchg
mov
pusha
mov
push
das
lahf
push
popf
mov
out
pop
dec
inc
popa
xchg
push
xchg
xchg
lods
jns
sti
cmpsl
sbb
lea
sub
jnp
ss
pop
lock
leave
jl
pusha
test
dec
xor
mov
cmc
sub
icebp
dec
push
mov
dec
je
nop
sub
cmp
ss
adc
sbbl
xchg
jo
push
mov
lods
jnp
sub
outsb
ss
or
cmp
aas
fcoml
lahf
hlt
inc
mov
stc
jmp
jo
jne
inc
xor
jg
into
cld
lds
test
adc
shrb
xor
jnp
sub
jo
push
cmp
enter
add
clc
push
inc
sahf
enter
je
push
daa
mov
fcoml
mov
in
gs
fcompl
pop
mov
leave
jmp
adc
inc
xchg
jmp
mov
sti
call
scas
mov
repnz
jb
adcb
mov
mov
jecxz
outsb
jmp
sar
xorb
mov
enter
ret
mov
out
mov
aam
in
mov
and
scas
mov
push
jmp
enter
es
pop
mov
add
pop
movsl
sbb
push
lods
decl
xchg
stc
sbb
jo
jge
jle
test
jbe
outsb
clc
clc
aaa
dec
outsb
mov
inc
or
inc
xchg
data16
fs
pop
add
cmp
and
fldt
cmpsb
mov
lock
addl
fwait
pusha
or
loop
fs
in
adcl
call
push
aas
cmpsb
jnp
sbb
sub
xor
fsubrl
cltd
sbb
push
std
mov
push
fistpl
inc
ret
fs
cs
jle
loope
in
pushf
test
dec
hlt
mov
xor
lahf
push
pop
xor
shll
js
mov
adc
aad
xchg
es
fwait
jge
loop
lds
fiadds
push
jno,pn
stos
cmpsb
adc
xor
fistpll
and
cmp
jp
lods
scas
jp
shl
insb
dec
ffreep
xor
dec
sbb
je
push
mov
aas
push
xchg
insb
aaa
scas
inc
jne
add
movsl
hlt
xor
std
adc
js
fildll
mov
add
ss
inc
xchg
insl
xchg
je
clc
fldcw
jge
inc
cld
pop
lea
and
enter
rorb
js
xchg
movsb
push
loop
jbe
xchg
push
jge
insl
mov
add
jle
add
and
jl
mov
cs
mov
xchg
je
stos
sbb
xchg
mov
das
add
aas
mov
dec
xchg
cli
imull
inc
mov
or
mov
lret
pop
sbb
dec
adcl
dec
mov
push
test
lea
xchg
testl
sahf
dec
xchg
shll
jmp
or
sarb
dec
test
adcl
arpl
jge
int
or
dec
loop
lock
adc
mov
fmull
mov
xor
imul
and
outsl
jg
xorl
les
mov
xchg
adcl
fdivp
aad
into
lods
add
daa
jl
push
add
jmp
ds
out
out
xchg
gs
jne
sub
xor
fdiv
push
push
cmp
cmp
lds
test
jno
adc
mov
xorl
and
lods
mov
push
push
push
or
lret
mov
lea
push
xor
cwtl
push
lods
mov
rclb
and
rorb
repz
insb
and
or
jo
fists
push
mov
mov
or
mov
xchg
and
sub
mov
and
iret
sbb
add
inc
mov
lds
out
jmp
jp
testl
cmp
lds
hlt
and
hlt
movsl
aad
jb
sub
sbb
dec
insl
jge
adc
mov
fadds
call
mov
addb
mov
cmpsb
call
and
sub
add
mov
push
das
jg
mov
rolb
test
inc
xchg
ljmp
jo
adc
pop
xchg
pop
xor
mov
cmp
test
mov
insb
add
in
push
insb
inc
push
jg
lea
push
lds
subb
mov
lahf
in
xlat
ljmp
jmp
lds
daa
mov
adc
dec
sub
test
loop
fcom
mov
fisubs
popf
push
mov
hlt
mov
pop
xchg
jo
loopne
xor
test
ror
xor
inc
sahf
shll
mov
push
xlat
das
sbb
and
in
xor
movsb
movsl
addr16
mov
cltd
or
cmpsb
test
lods
sti
mov
lea
adc
cs
jle
jnp
hlt
mov
mov
pop
and
cltd
or
xchg
pop
sub
or
or
lahf
mov
jb
xorb
push
imul
pushf
sub
test
pop
jle
mov
out
sbb
jns
cli
xchg
rcrl
pop
inc
push
fcmovnu
adc
mov
out
sub
mov
sbb
sbbl
int3
mov
es
xchg
push
aad
subl
ja
xchg
mov
das
fdivrs
notl
test
push
xor
orps
scas
pop
repz
test
je
sub
adc
push
clc
outsl
test
and
add
pushf
loop
push
cmp
lret
ficomps
fbld
mov
stc
out
or
mov
cmp
aad
imul
mov
clc
sbb
push
or
xchg
adc
xchg
addr16
jo
ljmp
xchg
ret
lret
shl
lock
sbb
add
and
fcoms
push
inc
inc
cmp
js
sub
jg
outsl
cli
cmp
sahf
scas
std
cld
push
xor
pop
mov
xlat
insb
ret
jbe
fwait
shlb
jmp
or
adc
decb
ficomps
or
and
scas
repnz
stos
shrl
jmp
inc
rcll
xor
dec
aas
mov
push
pop
cmp
push
or
cmp
pop
jle
movsl
sbb
mov
int3
sbb
dec
cmp
fwait
push
int3
jmp
ljmp
testb
loope
sahf
in
mov
fwait
scas
and
xchg
mov
jo
sub
xor
cmpsl
out
loop
gs
mov
fwait
aam
xor
xor
and
scas
adc
scas
cmp
mov
fcmovne
jg
ss
stos
xchg
adc
in
inc
mov
jno
dec
fimuls
cs
scas
je,pn
adc
push
sub
scas
cmpb
test
mov
cmp
lcall
pusha
insb
mov
arpl
mov
push
xchg
push
das
jae
lea
sbb
or
mov
sahf
dec
adc
fisttpl
inc
stc
mov
sbb
sbb
sub
mov
ficoms
cmpsl
popf
sub
bound
out
sbb
push
iret
adc
adc
test
push
mov
add
fstp
mov
test
jne
in
stos
cld
or
pop
imul
and
test
fprem
mov
adc
sbb
loopne
insb
int
and
jo
mov
inc
dec
pop
or
nop
jns
jl
and
and
mov
jno
dec
jge
mov
push
test
cld
sub
call
and
int3
cli
fcoml
push
and
xor
int
and
jbe
inc
stos
out
imul
add
int3
imul
push
iret
int
or
pop
sahf
push
insl
ror
push
xchg
mov
out
dec
cmp
mov
mov
out
das
mov
lock
cmp
push
lret
and
and
jmp
mov
xchg
fwait
sub
ret
pop
mov
dec
xlat
mov
push
jp
mov
xchg
jne
ds
fistpll
popf
repz
mov
sti
es
cmpsb
pop
outsl
repz
or
add
pushf
pop
arpl
jl
stos
pop
mov
jae
shll
sub
adc
mov
pop
push
flds
adc
std
subb
inc
mov
popf
sti
mov
imul
sbb
xchg
and
outsl
mov
sbb
in
lcall
mov
icebp
arpl
movsb
mov
and
or
jb
in
ds
pop
jbe
clc
adc
push
fistpll
jmp
xchg
iret
mov
movsl
dec
adc
aad
mov
lahf
movsb
js
test
inc
xchg
sub
add
push
and
out
add
adc
aad
jmp
xchg
push
or
cwtl
pusha
scas
inc
iret
adc
mov
call
xchg
es
fildl
daa
or
lcall
cmp
sub
add
jo
push
repz
xor
xlat
leave
insb
ret
call
adcl
add
and
pop
pusha
pushf
mov
mov
sbb
cmp
mov
add
ret
push
js
mov
jle
insb
sarb
adc
inc
ror
inc
rcr
sbb
push
pop
lods
ljmp
jnp
xchg
or
jg
and
repnz
xchg
outsl
aam
hlt
mov
fidivrl
out
orl
stos
and
inc
sub
imul
fcomps
add
fwait
mov
pop
inc
push
loopne
movsb
xchg
mov
xchg
pop
test
mov
mov
inc
into
aas
mov
add
pop
fdivrs
fsubrl
sub
mov
lcall
mov
bound
nop
sbb
aas
jns
pop
sub
mov
jmp
mov
xor
inc
jg
fsubs
xchg
or
xor
int
mov
xchg
dec
mov
icebp
cli
scas
inc
and
std
add
xchg
lock
loop
xor
mov
or
mov
dec
or
imul
xchg
into
jno
and
xor
or
insl
xor
xor
mov
fisubl
iret
inc
fstpl
mov
shrl
cmp
fwait
add
pop
std
pop
lds
or
jecxz
out
xlat
mov
test
mov
shrb
fs
sub
pop
push
fwait
jns
mov
hlt
aad
xor
add
fsubrs
popa
xor
push
pop
cld
hlt
pop
arpl
addb
sub
mov
loope
out
mov
repnz
adc
in
mov
nop
daa
mov
inc
and
cmc
mov
jle
repnz
ss
sbb
xor
out
loop
cltd
in
dec
add
xor
aad
sahf
adc
adc
adcl
inc
jmp
add
sbb
sub
xorl
test
mov
imul
jno
pop
rorl
leave
cld
cwtl
sahf
mov
mov
in
sar
lock
lea
pop
aam
sbb
mov
addr16
hlt
sti
dec
jge
filds
repz
leave
outsb
pop
adc
sarl
add
mov
jnp
mov
inc
xchg
inc
movsb
jp
add
jo
aad
push
pop
xchg
dec
ja
in
in
imul
jl
jae
dec
pop
xor
das
ja
in
cli
pop
sbb
lea
lret
xchg
sub
mov
sub
jle
hlt
loopne
nop
popa
stos
inc
inc
sbb
imul
mov
mov
mov
aam
cmp
nop
leave
mov
mov
mov
ds
bound
pop
or
fildll
jmp
roll
xlat
pop
dec
dec
lock
adc
mov
pop
jo
jo
aas
sbb
mov
repz
pusha
out
push
adc
mov
lea
pop
inc
jmp
jmp
inc
lahf
lea
or
mov
daa
cmp
xchg
cld
aad
gs
adc
movb
sti
fldt
or
lds
mov
push
mov
sub
call
sub
fdivl
push
int
cmpsl
add
dec
push
jne
pop
add
inc
sbb
rolb
mov
add
and
imul
mov
in
adc
leave
mov
xchg
pop
jo
imul
dec
jb
or
in
jno
lahf
dec
sub
das
or
daa
xchg
shlb
stos
dec
add
daa
mov
jp
pop
subb
push
push
mov
mov
fistpl
sub
lods
fdivrs
out
fisttps
mov
addr16
xor
nop
test
lret
xor
movsb
sub
cmpsb
sahf
lahf
xor
popf
sub
fxch
lret
jecxz
dec
push
dec
sbb
ljmp
xchg
jmp
cmp
lods
clc
enter
cs
ss
mov
lds
mov
outsl
inc
xchg
mov
subl
or
lret
addr16
sbb
js
mov
loop
add
or
dec
imul
mov
nopl
sahf
add
iret
jnp
xchg
js
cld
loopne
fsubp
adc
or
xchg
mov
inc
or
mov
push
hlt
jnp
sub
mov
mov
je
das
je
fisubs
mov
mov
aas
loopne
xor
sub
dec
mov
pop
add
mov
lds
jmp
push
sbb
or
push
push
lods
jno
adc
negl
adc
jne
pushf
xchg
je
aaa
cmp
es
loope
mov
pushf
sbbb
das
inc
jmp
out
sub
fnsave
push
rcrb
cs
jecxz
push
xor
lret
and
loop
punpcklbw
dec
mov
or
outsl
mov
test
fwait
xchg
frstor
cmp
xor
xor
popa
sub
iret
mov
popf
pop
ret
shl
in
xchg
mov
xchg
inc
mov
cwtl
mov
fsubr
es
cwtl
xchg
sbb
mov
jecxz,pn
gs
std
in
mov
mov
inc
inc
test
pop
mov
in
jns
repnz
pushf
shrb
adc
call
iret
adc
cli
jbe
bound
fnstenv
sub
shlb
inc
or
pop
add
scas
xor
jae
in
mov
test
mov
pushf
test
lret
sub
cmp
fsubrs
lods
jae
mov
mov
adc
out
out
test
cld
leave
jmp
cmp
cmp
xlat
dec
outsb
inc
inc
push
fisubrs
lock
cmc
hlt
jnp
push
push
test
or
insl
testl
push
fisubs
pop
push
dec
das
int3
dec
lea
fmuls
jbe
dec
rcll
leave
adc
xchg
cld
clc
rcrl
out
mov
adc
fstpt
ljmp
sti
aam
xor
fwait
jle
into
hlt
test
and
nop
lret
mov
mov
inc
mov
or
xor
popf
loope
cmp
insb
ficomps
ret
das
leave
test
lret
mov
and
mov
cmp
inc
pop
shll
pop
sub
cld
rorb
loop
mov
jne
popf
aaa
aas
es
add
fs
sarb
std
hlt
pusha
sbb
or
jbe
pop
sbb
mov
aam
add
test
sub
push
jno
add
test
and
cli
adc
xchg
xchg
mov
cmp
push
out
jle
mov
inc
xchg
pop
sbb
hlt
mov
dec
cli
popa
dec
inc
or
xchg
stos
fs
imul
aaa
mov
pusha
jb
aas
push
mov
out
mov
jns
roll
leavew
lods
dec
mov
cmpl
cwtl
jo
sub
mov
push
shlb
je
icebp
push
movsl
sub
mov
sub
xchg
idivl
sub
jle
dec
or
repz
jge
fldcw
insb
in
cs
and
imul
inc
bound
dec
test
lds
and
mov
in
popa
mov
roll
sbb
adc
mov
or
and
jne
xchg
cmpsb
lret
ffreep
les
roll
aaa
das
xlat
add
cmp
mov
sbb
out
fwait
cld
mov
idivb
sbb
and
cs
xchg
push
mov
xchg
xchg
fs
pop
ss
or
inc
out
jl
dec
jo
adcb
push
inc
sti
adc
dec
add
and
cmc
aad
fdivrs
add
sbb
push
xor
mov
dec
sbb
jbe
loope
dec
sub
and
repnz
mov
mov
movsl
enter
jo
mov
lret
cmp
into
cmpsl
int
sub
and
jp
mov
inc
arpl
inc
into
cs
push
cmp
mov
push
jmp
dec
pop
adc
sub
cwtl
sub
and
aaa
cmp
xchg
test
movb
repz
fidivrs
inc
xor
fistpll
int
js
pop
push
cmp
pop
lock
sti
dec
mov
movl
xor
mov
in
fisubrs
shl
adc
mov
push
stc
sahf
insb
push
cmp
sub
xor
mov
pop
mov
mov
dec
pushl
mov
sbb
imul
dec
xchg
mov
sub
mov
xchg
inc
std
pusha
sub
mov
int3
loop
fimuls
loope
je
sbb
jnp
loope
stos
jp
fsubl
xor
sbb
cmc
xchg
popa
loopne
xchg
insl
mov
mov
mov
jo
inc
inc
adc
sub
push
lods
cmpsb
xchg
xchg
mov
xchg
and
jnp
and
lret
xor
fisttps
xor
cs
xchg
stos
inc
fbld
inc
aas
sbb
ja
and
aaa
cld
mov
dec
lds
pop
fwait
outsl
jmp
xchg
gs
xlat
ja
mov
and
mov
sar
adc
inc
test
movsb
adc
jnp
sub
and
fmull
ds
stos
sub
in
in
xchg
fistpl
lret
mov
pop
xor
mov
push
push
mov
xchg
mov
sbb
mov
in
push
loop
call
jno
inc
dec
pop
pop
or
mov
pop
xor
mov
xchg
xchg
andb
jb
jae
std
xchg
xchg
stc
stos
cmp
cmpb
xor
ja
jo
mov
jge
es
into
xchg
lods
xchg
fstps
lods
mov
in
sbb
fs
push
andl
aas
sbb
incl
pusha
in
sti
lret
les
cli
incl
popl
pushf
push
mov
sbb
fnstsw
cmp
mov
nop
cmpsl
jg
pusha
mov
push
call
ret
fistps
mov
outsb
mov
mov
imul
jl
and
adc
pop
xlat
test
push
xchg
jb
cmpb
mov
ljmp
jns
sub
push
mov
dec
add
adc
ja
cltd
mov
inc
xchg
dec
ret
arpl
sub
arpl
hlt
add
sub
jae
or
out
cmc
pop
rcrl
xor
mov
inc
in
orb
push
popf
jbe
mov
pop
out
pop
sbb
mov
mov
dec
imul
shr
idiv
dec
iret
pop
mov
jno
dec
jns
mov
adc
and
mov
and
dec
in
daa
mov
mov
push
je
or
sti
sub
push
cmp
rcrb
push
cmp
jo
loop
scas
aas
ja
push
or
loopne
mov
or
add
adc
xor
mov
jmp
loop
jo
out
add
nop
mov
cs
ds
mov
icebp
sbb
cmpsb
pop
xchg
mov
les
and
stc
pop
out
test
lcall
dec
jns
add
push
dec
dec
sub
loopne
push
adc
addl
leave
or
mov
rclb
adc
pusha
stos
pop
fcompl
cmpsb
mov
cmc
sub
clc
cmc
or
sub
sub
mov
adc
sbb
rep
mov
push
sub
jno
push
dec
pop
loope
bound
add
inc
inc
sbb
sub
pop
mov
mov
stos
jbe
bound
jbe
cmovnp
xlat
sbb
std
data16
rcr
mov
cltd
mov
int
add
mov
les
dec
ret
lret
xchg
sbb
inc
dec
repz
outsb
add
inc
loop
or
push
je
lret
jo
dec
and
pop
adcl
call
push
aaa
ret
int3
xchg
shlb
push
enter
mov
lret
bound
cs
dec
into
adc
cmp
fidivrl
scas
cmp
mov
cmp
dec
jo
jl
clc
xchg
popa
scas
mov
test
aas
lahf
pop
xchg
daa
out
inc
fimuls
inc
enter
xchg
push
mov
sahf
hlt
dec
andl
mulb
xchg
or
inc
cmp
sub
pop
mov
jmp
adc
ret
inc
push
imul
fisubrl
push
or
push
mov
idiv
test
clc
mov
lahf
cs
inc
jl
push
inc
pop
int3
sahf
imul
mov
push
fldenv
mov
add
outsl
je
gs
cmp
add
imul
gs
les
lock
push
jo
jmp
mov
push
dec
in
adc
adc
out
mov
mov
push
push
out
dec
out
shll
xor
clc
fadds
push
adc
pusha
sub
pop
inc
jge
push
sbb
lods
dec
cs
push
mov
mov
or
adc
jge
fimull
stc
push
or
adc
lahf
fldenvs
paddb
stos
lods
setl
repz
cmpsb
xor
xchg
lods
xchg
mov
pop
ds
push
jo
aad
xor
stc
adc
or
push
adc
inc
cmp
jge
fsub
xor
cwtl
jge
pop
cmp
loope
out
in
pop
pop
mov
xchg
xor
lahf
mov
cmc
push
add
enter
xor
push
ja
in
out
dec
fwait
pop
pop
aam
cmpsl
jecxz
fidivs
xlat
dec
arpl
xor
pop
in
out
pop
loopne
push
mov
mov
jle
dec
cmp
aaa
pushf
popf
and
stos
push
imull
pop
mov
je
and
outsl
outsb
ficomps
cmp
inc
fisttps
insl
and
push
fisubrl
cmpsl
xchg
mov
imul
sub
mov
outsl
lods
cmc
imul
push
nop
out
sti
mov
pop
test
sti
or
lret
sub
sbb
aas
mov
int3
jg
jge
xor
testl
call
fidivrs
dec
inc
mov
fiadds
js
and
pop
cmp
mov
loopne
and
xchg
sub
out
xchg
jge
adc
or
mov
cmpsb
adc
lods
enter
out
or
dec
inc
or
es
aas
dec
imul
aam
push
sub
fcompl
adc
cmp
push
mov
mov
inc
push
sub
ljmp
push
ss
dec
jbe
mov
push
or
cmp
icebp
addr16
and
ja
ja
ss
sbb
or
out
sbb
or
imul
das
adc
dec
xchg
outsl
push
je
lahf
xchg
dec
inc
mov
xchg
mov
adc
jge
jmp
lcall
sbb
movsb
pop
cmp
cmpsb
mov
xchg
ret
adc
mov
in
pavgw
push
add
xchg
sbb
aas
or
cmp
hlt
movsb
jecxz
fsubrs
dec
fsts
add
mov
ljmp
add
js
mov
or
pop
sbb
jnp
jl
mov
sub
dec
and
test
sub
xchg
xor
lods
jb
aaa
ficomps
in
into
push
loope
and
arpl
imul
sub
xchg
mov
fdivrl
add
sub
xor
jo
jp
mov
push
sub
sub
mov
inc
push
or
fnop
int3
cmc
icebp
push
shlb
adc
push
testb
loopne
xchg
out
sub
add
and
jle
mov
fcompl
adc
xor
arpl
sub
fdiv
pop
negl
add
lret
daa
les
std
les
xor
mov
mov
cli
jbe
loop
sahf
xor
outsb
adc
fisubs
or
mov
jnp
add
jne
inc
and
cmp
xchg
loope
pop
inc
xor
xchg
loop
pushf
jbe
mov
imul
mov
jp
mov
mov
das
or
cmp
addr16
scas
mov
aad
xor
shl
mov
rorl
inc
push
jb
popf
addl
jmp
adc
ret
mov
bound
mov
cmp
outsl
add
and
xchg
mov
fsub
sub
repnz
sti
mov
push
lds
push
jo
cmp
push
xchg
push
mov
jmp
cmpsl
or
test
push
inc
or
sub
dec
sbb
adc
lret
cltd
test
roll
mov
xchg
pop
adc
inc
jl
cmp
or
dec
insl
outsb
in
jns
scas
lds
aaa
psrad
loope
pop
mov
data16
repnz
mov
in
inc
mov
and
sub
insl
loope
sub
icebp
add
jmp
cmp
test
pxor
cwtl
mov
je
scas
imul
cmp
out
inc
fisubrs
pop
std
test
xor
outsl
lea
js
enter
out
pop
jae
adc
or
push
pop
add
add
aad
xchg
and
aam
dec
sbbl
cmp
test
inc
stos
mov
das
jl
pushf
mov
bound
hlt
mov
dec
fcoml
movsb
dec
jmp
adc
jb
int3
enter
mov
fldcw
and
jns
fs
das
addr16
fcomp
or
and
faddl
nop
jb
sub
adc
sub
pop
xchg
jp
movsb
cmp
ficomps
or
mov
push
fisttpll
push
push
stos
push
mov
mov
pop
or
mov
sub
pushl
stc
xor
arpl
mov
push
cmp
scas
dec
ret
repz
sbb
xchg
jge
xchg
add
cltd
adc
sar
insl
mov
lcall
jmp
push
ret
and
pop
fldt
outsl
dec
push
or
sbb
xchg
mov
iret
cmp
loop
mov
int3
seto
mov
adc
cwtl
scas
xchg
xlat
mov
inc
add
fadd
test
adc
out
jbe
pop
xchg
into
push
es
inc
inc
jnp
nop
ret
add
add
push
jp
and
and
xchg
push
cmp
insl
mov
fdivrs
add
push
int3
decb
sbb
cltd
ret
push
add
orl
loop
cld
push
in
das
sbb
std
add
cs
into
lret
inc
cmpsl
out
push
pop
cs
dec
ret
ret
fsubl
pop
test
and
sbb
nop
push
jbe
pop
dec
sbb
faddl
lods
fdivp
push
jae
dec
sbb
aam
mov
je
or
jnp
repnz
ja
cmpb
sahf
mov
call
push
out
int
sbb
filds
mov
lods
ret
xor
test
mov
mov
jle
imul
scas
adc
cmpsl
cmp
testb
add
lea
jmp
mov
and
mov
div
inc
popa
xor
inc
insb
popa
ret
jo
outsl
push
xorb
push
xor
cmp
add
sahf
mov
pop
and
xchg
sub
mov
rcl
sbb
xor
inc
addr16
mov
dec
sub
push
ds
add
push
mov
aas
and
sub
jmp
jl
jo
sub
rcr
aam
sti
dec
mov
sbb
adc
mov
and
push
dec
dec
and
pop
das
pcmpeqb
ffreep
jnp
xorb
push
cmp
scas
dec
insl
out
fildll
test
ljmp
push
sub
push
push
cmpl
or
pusha
aas
jle
fdivr
pop
add
mov
je
pop
in
or
popf
jnp,pt
mov
add
fucomp
adc
rcrb
sub
dec
xor
pusha
fwait
push
adc
or
fstps
andl
stos
movsb
xchg
xchg
sbb
fmuls
push
sbb
cmpsb
mov
pop
test
cmp
pushf
push
cmpl
outsl
gs
xchg
sbb
call
push
inc
mov
ds
jge
fwait
and
cmc
sar
xor
loop
sbb
jne
loopne
sbb
sub
xchg
push
ljmp
arpl
and
jg
cmp
pop
push
aas
sbb
mov
in
icebp
int
xchg
dec
adc
sub
cs
cli
inc
ljmp
jmp
imul
add
push
xor
andl
cltd
sbb
shr
lret
stos
pop
inc
lahf
push
sbb
lods
cmp
pop
sbb
sbb
cmc
inc
add
insl
imul
mov
or
sbb
into
jmp
inc
cs
movsl
mov
and
rorb
cmp
stc
es
or
leave
dec
outsl
clc
cmpsl
pop
inc
shl
mov
xchg
mov
testl
cmpsl
xchg
cmpsb
pop
cmp
lods
push
orl
int
cmp
addr16
in
mov
sbb
sbb
or
pop
dec
data16
xchg
in
mov
testb
inc
lea
out
dec
lret
daa
dec
xor
call
or
add
push
sti
mov
adc
out
dec
fwait
sub
adc
push
gs
mov
mov
add
ret
cmp
in
cmpsb
adc
mov
fdivrs
mov
jg
shrb
into
mov
lock
dec
aad
add
data16
fcom
das
cmc
mov
mov
test
xchg
fdivl
fldenv
push
mov
aad
loopne
ret
shrl
aaa
ja
aad
xor
bnd
pop
dec
imul
mov
push
jp
out
mov
movsl
xchg
xchg
fimull
adc
call
lds
pop
dec
stos
ja
fists
inc
loop
lret
out
cmp
cmp
and
loop
jle
jl
clc
sub
add
jle
xor
out
pop
mov
stos
mov
fwait
inc
and
loop
mov
ljmp
push
dec
or
sbb
push
dec
mov
xchg
cwtl
dec
imul
shll
pop
daa
outsb
std
cmp
scas
ficoms
mov
dec
ret
cwtl
imul
jo
pushf
xchg
cmpl
test
cmp
mov
fdivrl
jno
mov
lods
popa
dec
add
negb
dec
mov
xlat
inc
pop
pop
and
out
lock
imul
jmp
mov
out
cmp
pop
daa
xor
jp
fsubs
mov
pop
mov
pusha
pusha
stos
sar
and
xor
scas
inc
stc
dec
xlat
mov
and
jae
sub
lea
sbb
outsb
lahf
pop
les
movsb
daa
jge
mov
pusha
mov
or
imul
adc
repnz
jmp
cmp
or
dec
ss
aad
dec
inc
popa
pushf
push
sub
adc
xchg
push
mov
push
and
jne
repnz
mov
shrl
adc
mov
ret
push
nop
movsb
sub
inc
xchg
mov
in
xor
jb
cmc
xchg
lds
cmp
inc
popa
and
cmc
sbb
pop
xchg
into
or
push
or
sub
pop
push
nop
jb
icebp
mov
in
jp
jle
jmp
xor
mov
gs
lret
xchg
or
cmpsb
add
pop
mov
sub
add
pushf
push
pop
add
push
jp
add
or
xchg
adc
jg
out
sbb
rcr
popf
push
ja
xor
fisttpl
scas
sahf
enter
cmp
sub
incl
jbe
dec
ja
mov
adc
jmp
xchg
test
sar
imul
aam
test
xchg
clc
ljmp
gs
test
jnp
inc
in
push
xor
nop
idivl
cmpsl
les
cmp
fisubs
dec
pop
pop
sbb
pusha
xchg
pop
mov
loopne
sbb
xchg
aas
adc
rcll
lock
cld
mov
ror
adc
movsb
mov
xadd
cmc
and
enter
dec
mov
movsb
hlt
jo
jge
subl
inc
dec
shrl
mov
or
int
icebp
mov
popf
inc
adc
push
fstpt
add
aam
pop
mov
pusha
popa
inc
pop
pushf
jae
fnstsw
push
in
push
and
inc
adc
dec
sbbb
out
xor
sub
pop
mov
test
pusha
int
es
aaa
stc
popa
test
lock
mov
sbb
cld
aad
pop
xor
mov
test
push
out
or
aad
fwait
cmp
jge
push
adc
popf
and
dec
cmpsb
scas
incl
stc
mov
enter
push
cli
imul
fcmovu
sbb
loope
mov
ret
mov
inc
call
jo
insl
or
iret
or
mov
push
inc
out
mov
gs
imul
test
or
out
loop
pop
lcall
dec
jae
pop
nop
mov
or
sub
pop
test
mov
cmpb
jmp
lock
and
sbb
or
jae
xchg
aaa
mov
iret
mov
pushf
add
mov
rcr
dec
dec
mov
dec
xchg
mov
nop
sbb
movsb
sbb
add
adc
or
clc
test
ds
push
xor
pusha
cmpsb
popa
jecxz
fwait
sbb
fs
cmp
mov
dec
dec
arpl
xchg
or
push
iret
jo
jbe
out
jle
dec
xchg
popa
mov
lret
ss
cltd
inc
add
movsb
stos
pop
xor
into
cmp
xchg
mov
or
add
xor
mov
in
push
in
cmp
orb
mov
mov
adc
cld
add
mov
dec
gs
mov
mov
pop
xchg
clc
dec
mov
nop
insl
mov
inc
aaa
lret
fdivr
push
ror
test
cmp
ffree
popf
sub
sarb
ja
mov
adc
in
inc
xor
mov
je
cwtl
push
xchg
and
mov
outsl
out
test
add
xlat
add
imul
ret
insl
cmp
jmp
mov
cmpsb
lcall
jnp
ljmp
cwtl
mov
pop
sbb
daa
lcall
shll
rorl
mov
insl
addr16
fmuls
aam
stos
and
aas
je
mov
and
shrb
in
fcomp
pop
int
xor
push
mov
push
in
out
mov
xor
jl
cmp
sahf
aad
jl
mov
fnstenv
rorb
aas
orb
adc
ret
adc
hlt
jnp
mov
dec
aad
inc
sub
pop
xor
fcmovbe
xlat
xchg
dec
mov
mov
ficomps
jae
sahf
mov
xlat
in
repz
test
movsb
add
lret
push
xor
mov
iret
lcall
das
mov
jp
jge
sbb
cmpsb
repnz
push
push
adc
mov
and
inc
jb
adc
mov
sbb
arpl
mov
sarb
adc
stos
stos
adc
and
popf
mov
push
fdivrl
jmp
sub
xor
neg
shrb
shlb
jne
sahf
call
lods
out
addl
mov
jne
popa
ds
ss
insl
xchg
aam
movsl
and
mov
pop
xchg
ret
test
sub
pop
and
jmp
mov
mov
mov
fdivrs
bound
fmull
sub
movb
in
fstpt
pop
iret
adc
mov
sub
lea
jns
cmpsl
mov
jo
imul
sbb
ror
sub
lods
jbe
inc
fwait
and
stos
sbb
mov
add
xor
daa
out
das
cmp
ret
inc
jg
xchg
fiadds
stos
xor
push
sub
jge
lds
pop
mov
xchg
push
jns
lock
or
cmp
popa
hlt
sub
jbe
or
cmp
daa
xor
xchg
negl
jae
pushf
dec
data16
sub
aaa
leave
ffree
mov
clc
lret
and
orl
inc
out
icebp
jmp
mov
je
inc
shlb
jbe
sub
ss
cwtl
pop
jmp
ja
sbb
int3
in
nop
mov
fbstp
decl
and
jnp
addl
or
jl
scas
clc
sub
fldt
gs
jae
mov
and
dec
out
lcall
in
mov
xchg
inc
pop
das
stos
call
push
xchg
je
mov
sub
stos
loop
mov
ret
sti
rol
je
sti
push
aam
mov
cld
scas
rcrl
out
shlb
jo
cmp
insb
jg
sbb
adc
out
dec
sub
rcl
xorl
mov
pop
push
mov
jmp
cwtl
or
loopne
jne
scas
and
mov
lahf
mov
icebp
je
in
pop
in
fildll
insb
fidivl
aas
ret
sbb
sar
in
push
sbb
or
cmp
dec
pop
push
dec
mov
mov
in
and
hlt
out
mov
les
xor
incb
test
xchg
xchg
adc
out
pop
pop
jns
inc
fcomps
stc
in
dec
out
fisubl
lret
xchg
stc
fbstp
aam
or
pop
pushf
clc
shrb
pop
shl
push
pop
push
jns
mov
int3
mov
dec
push
cmp
sub
or
cmc
bound
lret
lods
js
dec
shlb
in
cmpb
pop
scas
fistpl
mov
jbe
sbb
jbe
call
cmp
mov
mov
jg
ss
movsb
imulb
mov
pop
mov
addr16
scas
sahf
sahf
xlat
ja
ljmp
ret
aas
adc
push
push
inc
lods
lcall
xor
icebp
or
and
cmp
cwtl
xor
inc
aam
fadds
mov
and
in
jbe
inc
insl
mov
insl
jge
push
or
call
lds
sub
popf
cmp
pop
fstps
cmp
and
rorl
cld
adc
cmp
outsb
mov
dec
jg
or
out
mov
imul
lock
cld
pop
cmp
jne
clc
pop
dec
mov
push
aad
mov
xchg
xchg
cmpsl
and
lock
sbb
sub
lahf
sbb
inc
sub
inc
cmp
xor
stc
scas
push
fdivrl
dec
push
andl
pop
pop
lret
push
aam
lea
mov
mulb
mov
add
mov
and
add
push
jl
sub
cmp
jne
nop
push
pop
out
mov
insb
mov
sbb
push
add
shl
inc
push
inc
jnp
pushf
mov
mov
outsl
adc
clc
push
add
dec
cmpsb
dec
pop
sub
into
outsl
popf
jns
mov
push
cmc
in
mov
dec
mov
stos
push
subb
adc
push
xchg
dec
sahf
mov
jno
into
mov
in
ret
dec
aas
cmpsl
or
test
mov
in
dec
jecxz
test
test
cmp
push
mov
mov
xchg
sub
push
aaa
push
push
sub
enter
mov
jns
rcll
pop
push
pop
in
ss
inc
aam
lock
or
int3
fimull
fwait
pop
add
bound
rcll
movsl
popf
push
lock
cmp
fdivs
mov
mov
cs
pop
add
inc
cmp
dec
jb
js
mov
dec
inc
mov
sbb
repnz
cmp
sub
movsb
int
jmp
mov
xchg
and
movsl
mov
mov
or
test
movsl
adc
adc
xchg
or
cmpb
cmc
mov
push
adc
into
cmp
pop
mov
aad
pop
fwait
or
xorl
dec
pushf
sub
add
sbb
seta
outsb
adc
lods
mov
xor
cmp
fiadds
aad
jge
cmp
push
out
mov
addr16
jmp
enter
add
stc
sarb
jnp
test
ss
mov
data16
decl
cmp
es
xchg
test
dec
and
clc
mov
iret
iret
pop
dec
pop
sub
adc
sbb
sbb
outsb
mov
iret
mov
push
dec
cwtl
shll
add
out
popa
imul
xor
outsb
aad
mov
cmp
mov
pusha
jne
movb
push
out
sub
dec
cmpsb
mov
inc
xchg
mov
inc
shr
cmp
push
mov
ljmp
out
scas
mov
inc
jnp
push
lds
push
vmptrst
popa
mov
insb
fsubrl
js
mov
pop
mov
mov
xchg
repnz
xor
cmpsl
mov
jae
pop
inc
sub
hlt
mov
cmp
push
mov
sbb
ret
jmp
mov
jne
pop
out
std
inc
xchg
test
xchg
ljmp
imul
jno
xchg
imul
rcrb
push
lahf
or
jnp
into
ret
cld
out
shr
nop
and
inc
ret
add
dec
daa
dec
call
dec
addr16
sub
dec
or
jae
stos
jns
push
cld
lds
sub
pusha
into
xor
lret
fstpt
mov
pop
mov
jae
mov
inc
hlt
sahf
hlt
ret
adc
jns
cmp
cmp
scas
sbb
lods
dec
sub
leave
jg
jae
cwtl
xchg
cmp
rolb
jne
sub
mov
pushf
mov
push
cltd
cltd
arpl
movsb
aas
sbb
repnz
cwtl
ds
imul
jle
daa
fwait
lcall
into
fdivs
jb
sub
pusha
xchg
pop
push
jecxz
add
mov
lods
xchg
jno
enter
pushf
bndstx
pop
mov
inc
fwait
pop
pop
add
adc
test
push
outsb
loopne
repz
cmc
dec
loop
jo
pop
push
insl
sbbl
push
adc
pop
jo
sbb
cmp
jns
hlt
les
aad
push
mov
je
cmp
mov
ds
mov
aad
scas
and
push
sub
adc
mov
imul
add
inc
mov
sarl
or
loopne
inc
jl
pushf
push
sbb
fldt
sub
xchg
sbb
mov
dec
mov
faddl
jmp
lret
cmp
sarb
sub
pop
sub
sub
outsl
popa
mov
xchg
inc
out
push
or
mov
movsl
add
pop
sbb
sbb
xlat
sub
fcmovb
in
xor
lret
or
bound
mov
mov
subps
xchg
ret
mov
shlb
out
subl
adc
mov
shrl
mov
push
mov
mov
pop
mov
stos
mov
dec
dec
clc
mov
ret
das
test
scas
sub
movsl
dec
xchg
lods
sub
aaa
icebp
sbb
movsb
jae
mov
jmp
jnp
ret
sahf
setae
jmp
mov
xor
pop
sub
or
loope
jle
pop
dec
inc
les
jnp
sbb
lret
les
and
xchg
jb
lret
xor
jecxz
cltd
xchg
fwait
push
mov
dec
nop
jge
int
push
pop
test
mov
jnp
dec
or
std
sbb
lret
add
enter
pop
cmpsl
lcall
fimuls
inc
mov
ja
mov
in
jp
jnp
pop
jae
mov
ja
lcall
sbb
sbb
test
pop
movsb
stc
push
sub
xor
fistl
add
testl
int3
call
nop
xor
xor
cmp
mov
xor
and
adc
into
jmp
and
mov
sbb
sub
mov
inc
jg
mov
js
sbb
sbb
sub
jns
ljmp
out
sbb
push
ds
enter
addb
mov
xor
cltd
fisubrl
imul
insl
je
or
dec
cmp
dec
sbb
scas
sub
ljmp
data16
push
adc
inc
dec
fiaddl
pop
aad
mov
ds
imul
insl
sbb
mov
jno
mov
fsubrl
jbe
mov
and
cmp
scas
mov
dec
lds
pop
and
push
sbb
and
daa
pop
add
das
into
and
jbe
addr16
xor
cmp
aam
daa
xchg
lock
sub
ret
in
dec
jecxz
inc
cmpsb
or
fs
push
pop
jns
sub
jge
test
into
push
pushl
imul
out
ficomps
adc
xchg
and
cmp
pop
iret
das
lahf
movsl
cmc
jne
mov
cmp
sbbl
in
dec
ja
or
shlb
pop
sub
mov
dec
test
data16
das
xchg
xor
call
xor
adc
or
test
add
dec
sbb
inc
adc
loopne
cltd
adc
sti
sahf
in
dec
cmpsl
cltd
dec
push
jnp
pusha
adc
loope
imul
test
push
in
add
mov
sub
hlt
mov
adc
daa
fidivrs
inc
addr16
mov
pop
pop
sbb
out
mov
in
outsb
xor
and
test
fldl
pop
xchg
sub
call
je
inc
mov
in
cmpsb
cmp
add
cld
mov
pop
xchg
adc
pop
jno
cltd
jns
xchg
cmp
cmc
push
jge
mov
loop
mov
inc
movsl
sahf
mov
xor
out
adc
divl
xchg
int3
mov
dec
lods
out
push
push
cmp
add
mov
push
pop
mov
ficoml
imul
int
inc
jl
orb
fldenv
sub
subb
loope
sub
rolb
dec
mov
add
addb
mov
aaa
jmp
jg
test
outsb
cmp
pop
int3
fcmovne
jmp
hlt
fldt
icebp
in
sarl
insb
mov
jge
stos
pop
pop
cmp
jge
stc
nop
pop
cmpsb
fimull
nop
stos
fstps
or
int
fistps
or
jnp
and
jmp
mov
sbb
aad
push
sbbl
xor
outsl
jmp
testl
ss
dec
inc
add
sub
or
pop
scas
into
jg
mov
out
loop
movl
xchg
mov
movb
mov
mov
mov
push
mov
inc
xchg
test
paddq
call
cmp
mov
call
bound
rolb
roll
sarl
xlat
ret
stos
pop
mov
mov
jbe
xchg
push
ja
sar
adc
fcmovne
mov
and
loop
sub
adc
push
lods
or
mov
cmp
cwtl
inc
fwait
bound
sbb
test
mov
outsb
mov
ret
cmp
iret
or
scas
pop
mov
cmpsl
sub
cmp
lds
xchg
imul
jb
xchg
leave
rcrl
roll
fcomps
leave
ret
push
jne
dec
fistpll
mov
sbb
push
addr16
loope
lods
orb
std
shr
xchg
dec
shll
aas
fsts
negl
inc
insb
add
neg
cmp
push
iret
loopne
or
repz
icebp
repz
mov
popf
dec
stc
cmpsl
adc
nop
sub
xor
jbe
push
lcall
mov
add
mov
in
xchg
inc
pusha
xchg
sbb
in
jmp
arpl
in
std
push
outsb
or
movsb
mov
push
jge
daa
in
mov
adc
out
or
movb
in
std
jl
mov
mov
pop
mov
or
stos
add
pop
out
sarl
push
arpl
cmp
movsl
lds
jbe
js
lods
xchg
and
push
insb
cli
inc
data16
insl
movsb
mov
imull
outsb
ret
cmp
cmp
mov
or
mov
push
inc
xlat
mov
mov
inc
sbb
sub
xor
fcmovb
fimull
jmp
test
inc
out
mov
cmp
movsl
dec
mov
cli
pusha
cmpsb
mov
or
xchg
push
shl
inc
mov
lret
and
pop
pop
outsl
outsb
jp
add
fwait
jns
cmpsb
fsub
xlat
rolb
mov
and
mov
notb
mov
rorb
mov
lds
dec
popf
fwait
ds
cs
ret
push
fwait
push
dec
or
in
jns
dec
orl
jecxz
pusha
loopne
or
mov
sub
mov
roll
icebp
jno
daa
leave
stos
ret
jge
fdivrl
rorl
lods
mov
inc
iret
out
sbb
outsb
mov
dec
dec
adc
gs
movsl
test
sub
bound
or
not
xchg
mov
and
mov
lock
imul
imull
sbb
sub
push
cmpl
gs
lret
pop
loope
sub
loopne
repnz
daa
mov
enter
dec
cmp
xchg
mov
xor
adc
xchg
clc
in
les
jmp
dec
push
dec
cltd
xor
shll
and
jg
push
dec
out
das
cmp
or
ficoms
icebp
hlt
jo
rclb
mov
mov
repnz
sbbb
add
mov
sbb
or
fnsave
ret
pop
mov
jmp
cltd
pop
addr16
inc
mov
sub
sti
mov
mov
xor
pushf
pop
mov
leave
xchg
cmp
or
gs
or
cmpsl
outsb
out
out
nop
fs
in
xor
aaa
popf
push
jge
adc
mov
inc
cmp
inc
pop
and
decl
insl
std
and
cltd
cmp
in
enter
imul
push
xchg
scas
in
dec
jmp
ljmp
lahf
testb
xchg
pop
push
sbb
pusha
add
add
sub
jnp
mov
mov
lock
pop
push
lahf
cmp
lahf
xchg
scas
mov
aam
cmpb
or
or
decb
call
dec
mov
dec
popf
hlt
fidivrs
jno
pop
xor
xchg
nop
mov
xor
mov
add
push
adc
pusha
sbb
out
mov
fcompl
sbb
jbe
popa
sub
push
scas
out
scas
fnop
fucom
push
outsb
dec
rcrb
sarl
push
and
int3
pop
push
pop
sahf
jg
out
int
cmp
sbb
dec
jl
daa
push
rolb
fs
out
xor
sub
mov
cmp
pop
pop
jb
jo
in
cmp
out
lea
dec
sub
mov
loop
push
dec
hlt
pop
aam
and
mov
mov
xor
hlt
loope
fiadds
push
jbe
aaa
pop
and
xchg
dec
xor
cwtl
add
test
rclb
mov
call
fs
fldl2e
ja
or
jne
test
mov
test
jns
inc
xorb
sbb
add
andb
movsl
lea
and
stos
jge
cmp
roll
sarb
pusha
dec
xlat
int3
loope
mov
imul
or
dec
addr16
adc
loopne
outsl
adc
loopne
popa
inc
das
hlt
sbb
cld
jnp
hlt
icebp
xchg
mov
cltd
sub
out
notl
int
fcmove
or
cmp
cmp
aad
jo
iret
cmp
popf
cld
ret
dec
sub
inc
loopne
inc
lds
dec
add
nop
in
fwait
dec
popa
dec
and
mov
sub
sbb
xor
jnp
mov
outsl
aas
inc
jb
xchg
mov
inc
sbb
inc
mov
insb
out
cmp
and
xor
loopne
add
fistl
add
jnp
pushf
aaa
mov
mov
or
hlt
push
mov
pop
out
add
cmpsb
cltd
mov
push
movsb
xchg
scas
add
pusha
jns
fcoms
push
ret
daa
das
cs
movsb
out
inc
in
push
int
jp
lret
jno
cli
outsb
jle
pop
hlt
or
push
sbb
sbb
pop
mov
insl
fsts
hlt
and
lahf
sub
pop
dec
cmp
leave
jbe
sbb
test
xchg
push
inc
fnsave
xchg
push
dec
pop
cmp
es
cwtl
cmp
jmp
mov
xchg
test
adc
xchg
dec
sbb
pushw
fidivrs
adc
pop
sbb
push
insb
sub
aas
and
mov
mov
out
cltd
add
hlt
adc
xchg
push
pop
mov
in
mov
mov
pop
pop
and
mov
add
push
pop
add
stc
repnz
inc
movsl
mov
or
insl
and
inc
fwait
and
sbb
xor
sub
push
xchg
jle
loope
cmovp
mov
jl
add
push
inc
push
jo
cmpsl
mov
xchg
shrl
cli
aas
jp
stos
out
push
mov
pop
adc
lcall
das
mov
stos
movsb
xchg
divb
pop
fstp
fcoms
aam
add
sbb
inc
add
jno
pop
bound
ret
enter
in
jnp
ljmp
andl
mov
sbb
test
arpl
icebp
xorb
cld
std
add
sets
push
add
xor
cmp
dec
scas
sahf
mov
and
add
adc
add
cmp
xchg
es
and
call
gs
lods
xlat
aas
jno
sub
xor
ficompl
sbb
mov
adc
in
lahf
es
gs
addr16
adc
or
and
mov
and
arpl
mov
imul
dec
das
movsl
in
ret
cmp
daa
stos
mov
adc
sbb
cli
cld
imul
subb
stc
arpl
rorb
inc
daa
xlat
shr
fcompl
test
cmp
arpl
xlat
out
push
hlt
jae
cmp
push
push
mov
mov
dec
sbb
mov
cmpsb
jle
mov
mov
pop
mov
cmp
cmp
adc
push
repnz
scas
xchg
in
enter
imul
and
js
xchg
fldt
xchg
mov
mov
outsl
mov
insb
push
mov
cmp
cld
or
sahf
insb
mov
inc
clc
fucomip
push
sub
jl
push
xchg
xchg
das
cltd
dec
mov
sub
popf
sub
mov
lret
pop
test
in
addl
mov
dec
fs
mov
mov
fsubp
scas
inc
sahf
repnz
adc
add
leave
cmp
hlt
adc
insl
cmp
ja
shlb
testb
xchg
call
nop
pop
and
hlt
ljmp
ds
xor
and
xchg
cmp
mov
loop
inc
pop
int3
mov
fnstsw
aas
mov
mov
pusha
je
enter
mov
ret
pop
imul
lds
loop
adc
add
scas
sub
add
dec
rorl
push
xchg
fldt
sub
mov
cmp
iret
scas
or
cmp
aad
rclb
xor
test
or
xchg
jecxz
hlt
sub
popf
dec
fwait
mov
sti
sub
mov
ljmp
lret
mov
cmp
sahf
ret
into
mov
add
sub
add
push
ret
mov
ret
data16
fisttpl
sub
sbb
test
xorb
and
mov
mov
ljmp
aaa
fmul
adc
mov
into
movl
addr16
dec
cltd
sbb
jne
sub
aam
adc
push
pop
dec
or
push
adc
or
subb
xchg
jecxz
jg
stos
adc
mov
cmp
mov
inc
fimull
xchg
iret
out
cmp
jecxz
sub
subb
push
cmp
adc
aaa
subb
ja,pt
mov
jbe
jg
out
fdivr
add
cli
mov
xor
dec
dec
data16
test
xor
or
adc
test
push
jne
or
into
dec
xor
pop
stos
insb
pop
cmp
jo
pop
sbb
fwait
ds
jnp
cld
data16
inc
ret
inc
push
call
push
xor
pop
aas
cmp
aam
dec
sbb
pop
mov
ficoml
sbb
lods
outsl
out
dec
cmc
mov
xchg
insl
lods
cld
sub
mov
dec
mov
fwait
inc
xchg
int3
add
cltd
aaa
mov
jne
imul
popa
sahf
fldl
mov
adc
inc
out
out
lahf
rorl
scas
and
pop
or
xlat
roll
imul
repz
adcb
jecxz
test
mov
pop
std
push
outsb
xor
mov
cmp
js
cmpl
repnz
add
add
jo
sub
cmp
leave
inc
fadd
fucomip
sub
cli
ret
mov
mov
ss
add
add
scas
lret
dec
mov
out
mov
scas
mov
mov
cmp
popa
cmpsl
sbb
inc
jae
ja
mov
shrl
insl
into
mov
push
xor
mov
ljmp
jl
arpl
cmc
mov
outsl
arpl
aaa
test
divb
es
clc
into
sarb
mov
hlt
push
mov
cmp
cmpsb
jb
mov
inc
and
inc
and
push
push
mov
aaa
repz
outsl
mov
cmpsl
js
cmovnp
ffreep
cmp
xor
pop
dec
inc
add
bound
cmc
repz
xlat
sbb
shlb
test
in
mov
rcll
sbb
or
sahf
or
sbb
mov
dec
mov
push
mov
sub
stc
fsubl
fs
xor
in
fwait
test
xor
sti
loop
fcomps
push
or
fldt
jmp
adc
lods
les
cmp
outsb
mov
fs
push
ret
cs
jl
bound
in
add
loop
mov
xchg
pop
dec
jmp
out
decb
mov
in
mov
call
push
insl
imul
push
filds
dec
rolb
push
lret
xchg
cmpsb
cld
and
mov
int3
jno
pushf
mov
xor
aaa
mov
mov
add
mov
mull
js
mov
cmp
stos
out
jno
adc
or
loopne
sbbl
sub
into
icebp
pop
sbb
lret
test
xchg
pop
mov
cmc
xchg
ds
cld
push
fmull
aad
arpl
je
jae
nop
sub
bound
fsubrl
mov
cltd
jne
stos
test
jb
mov
outsb
in
jge
test
add
int
icebp
sub
xor
ret
jge
inc
xchg
xchg
dec
fsubs
movsl
push
in
push
pop
iret
mov
add
adc
sbb
mov
out
jge
jl
int
outsb
sbb
xchg
test
sub
in
lods
lods
insl
pop
sub
fdivrs
inc
cmp
int3
dec
cmp
pop
mov
out
pop
mov
pop
test
pop
push
jge
ljmp
push
push
push
inc
xor
xchg
sbb
lahf
inc
mov
xor
dec
arpl
xchg
jge
mov
and
dec
push
clc
jge
sub
sbb
add
iret
xchg
dec
cmpsl
inc
pop
xchg
mov
push
pop
add
push
push
sbb
inc
jl
mov
imul
adc
jno
test
sahf
pushf
mov
test
lret
jne
pop
fsubrl
rorb
sub
jmp
inc
pop
pop
dec
pop
inc
negl
pop
sub
or
dec
dec
stos
mov
popl
cmp
movsl
xchg
sub
call
jns
rcl
inc
inc
cmp
stos
or
push
sbb
jbe
lea
insb
fisttpll
pop
popa
jnp
mov
clc
call
jge
das
cmc
decl
dec
adc
xchg
cwtl
xor
mov
sbb
test
stos
pop
out
xchg
nop
rclb
or
add
shll
lret
outsb
imul
std
mov
push
js
push
dec
xadd
mov
adc
jmp
rolb
inc
repnz
mov
lock
mov
xchg
sbb
es
lea
or
lods
lods
xchg
sbb
out
cmp
and
js
mov
lret
inc
cmp
sbb
jb
rcl
xchg
mov
aam
mov
add
jmp
aas
lea
xor
jbe
das
mov
or
cli
push
out
push
xlat
rcrl
lret
in
ret
cmp
adc
push
xchg
or
adc
aam
das
test
in
stos
add
sub
mov
xor
movsl
xchg
xor
dec
xorl
cli
inc
fs
cwtl
or
pop
fistps
mov
popf
push
je
xchg
mov
cmp
lcall
pop
sub
out
jmp
fnsave
push
xor
fildll
push
mov
cwtl
fists
jmp
cld
icebp
cs
imul
jne
sti
xor
fstl
ret
daa
popa
in
out
fisttpl
sti
cmp
dec
inc
mov
fiaddl
nop
xchg
iret
scas
gs
outsb
dec
sbb
loop
push
loop
mov
pop
lds
xchg
hlt
jmp
push
imul
pop
insb
shl
mov
dec
mov
adc
pushf
out
aaa
push
or
xchg
lcall
xchg
mov
jmp
xor
outsb
rorb
push
and
pop
out
aad
or
jb
jecxz
mov
cld
scas
add
dec
xchg
loopne
push
mov
pop
sbb
xchg
xchg
ficompl
xor
imul
sub
xor
sbb
push
push
mov
jne
stos
loopne
and
xchg
add
movsb
imul
xchg
cmc
mov
or
popl
jbe
push
push
pop
sbb
or
dec
lods
shll
movsb
es
sub
shl
sti
lock
cwtl
inc
aas
cmp
cmp
nop
loope
pop
in
mov
jb
pop
sbb
std
add
ss
and
ljmp
xor
mov
gs
aas
sub
aas
lret
in
jmp
fimull
sbb
mov
enter
adc
fdiv
xor
or
cli
add
cmp
push
mov
push
jnp
out
popa
cmp
jecxz
jb
aaa
imul
lea
iret
repz
gs
test
ja
cld
jp
push
inc
push
mov
iret
xor
sbb
mov
frstor
inc
jo
cmpsl
push
jne
jecxz
pop
sub
insl
cmpl
enter
sub
in
lahf
imul
call
xor
lods
in
inc
jo
stos
lret
pushf
and
out
movsl
cmp
fdivrp
popa
addr16
jnp
xchg
daa
jecxz
incb
in
orl
adc
or
cmpb
xlat
ficoms
push
jmp
incb
in
pop
sbb
xchg
cmp
outsb
mov
out
setno
flds
jae
mov
xor
and
lcall
call
out
lahf
mov
lcall
cmpb
inc
jne
dec
jecxz
test
cmp
jge
flds
flds
rol
cwtl
sbb
or
push
adc
or
fs
sbb
clc
cmp
or
pop
inc
xchg
xchg
xchg
dec
adc
dec
pop
popf
sub
cmp
xlat
sahf
pop
mov
pop
out
dec
inc
cmp
push
icebp
stos
xchg
mov
shrb
and
movsb
int3
je
push
icebp
push
inc
adc
mov
and
sbb
je
js
push
aaa
iret
out
test
aad
add
cmpsl
add
adc
add
dec
xlat
mov
fwait
fwait
add
andl
scas
mov
jmp
int3
std
mov
lahf
sti
ss
icebp
cmp
in
cwtl
jle
push
mov
lcall
roll
sub
or
rcr
sbb
jp
cmpsb
push
sub
xchg
cli
cmpsl
lret
vpor
std
adc
decb
ljmp
mov
dec
xchg
push
sub
push
imul
fdivs
stos
dec
mov
jecxz
adc
push
rcll
clc
and
mov
mov
mov
leave
popa
rcrl
test
cmp
pop
lahf
sub
aaa
rclb
sbb
and
es
jge
aas
mov
adc
sahf
jns
fistps
xor
push
sub
fs
out
imul
pop
adc
inc
mov
lea
ret
repz
mov
mov
push
push
xchg
sub
std
xor
in
cwtl
mov
pop
pushf
popf
and
mov
mov
mov
pop
jecxz
movsl
push
aam
arpl
lods
mull
pop
insb
add
jle
cmc
mov
aaa
dec
xor
sbb
xor
lcall
fsts
imul
dec
mov
in
xchg
mov
adc
xchg
aaa
bound
or
imul
adc
jno
push
push
jnp
out
push
addb
lahf
roll
or
mov
gs
inc
negl
dec
in
adc
std
inc
sub
inc
sti
lahf
or
sti
mov
mov
rcrl
divl
fwait
adc
mov
and
add
dec
xor
adc
inc
jno
test
mov
test
and
xchg
fidivrl
pop
dec
mov
sub
push
out
out
test
icebp
icebp
into
xchg
or
leave
inc
lea
loope
bound
sbb
adc
in
jle
push
out
and
dec
jae
sbb
scas
mov
push
jae
out
xor
sbb
popf
les
adc
pop
in
pop
call
mov
lret
xlat
or
xchg
mov
lock
sub
pop
stos
frstor
ss
adcl
mov
sub
test
aam
mov
test
stos
iret
sahf
adc
inc
ret
xchg
sub
mov
imul
stc
fcmovnb
push
repz
int
jecxz
movsb
rcll
adc
arpl
xor
push
scas
in
out
pusha
fucomi
das
push
das
decl
dec
mov
icebp
sbb
lods
ds
clc
push
loopne
inc
sbbl
xor
xor
out
lock
fldt
cmpsb
pop
ja
addl
mov
out
xor
popf
adc
mov
lret
or
push
filds
das
or
ss
pop
rcr
mov
push
add
stos
mov
sbbl
sahf
xchg
popf
nop
and
lret
testl
xorb
addl
stos
out
pusha
loop
sub
and
lahf
iret
sbb
daa
sub
mov
test
dec
jae
mov
cli
push
adc
xchg
cmc
cmp
insl
nop
push
and
sti
jb
mov
jnp
sbb
sbb
lret
das
xor
or
cmp
leave
adc
mov
dec
xchg
cmp
fwait
ja
push
aas
enter
icebp
arpl
xor
dec
das
movsl
or
sbb
scas
push
jecxz
inc
std
mov
fistps
sub
sbb
hlt
in
repnz
outsb
jmp
lret
or
jbe
mov
mov
jecxz
jno
dec
cmpsb
xor
fdivr
les
sbb
leave
aas
orb
stos
test
mov
je
mov
scas
in
and
cmpsl
add
insl
das
mov
push
mov
push
mov
inc
testb
mov
or
enter
dec
mov
xchg
adcl
lahf
xchg
dec
in
loope
xlat
pop
xchg
shlb
and
scas
rcl
sub
jmp
cmc
jb
rcrb
cltd
xchg
inc
dec
xor
roll
ficoms
push
aaa
out
dec
jns
iret
add
insb
and
out
add
cltd
aad
mov
add
mov
adc
mov
fsubl
mov
and
or
lods
test
dec
jp
imull
jno
cmp
push
xchg
int
push
insl
push
repnz
in
clc
jecxz
sbb
pop
lcall
loope
int
and
jb
mov
mov
pop
in
out
movsb
gs
in
test
call
into
scas
sbb
imul
push
mov
sub
lahf
or
fidivl
into
and
loop
adc
xor
clc
jecxz
loope
lea
inc
hlt
iret
lret
les
cmp
inc
cwtl
jg
mov
cmpsb
testl
sbb
fcom
mov
seto
adc
rcl
mov
or
or
int3
dec
push
sarb
inc
xchg
dec
lods
or
ja
in
repz
or
out
test
sbb
jle
into
cmp
pusha
cli
aas
pusha
inc
sub
adc
jnp
mov
imul
or
fmuls
icebp
in
imul
dec
add
notb
scas
jns
add
mov
insb
jmp
jp
sub
mov
gs
add
push
out
add
mov
mov
loope
leave
fwait
adc
insb
dec
pushf
cmc
repnz
ret
mov
add
out
jp
insl
pop
pop
in
add
pop
sub
mov
inc
inc
repz
fbld
fldl
pop
arpl
cmpsb
inc
pop
and
adc
test
fidivrs
pop
mov
inc
mov
arpl
je
mov
stc
add
outsl
xlat
ja
mov
and
mov
push
cmp
cmp
aas
std
adc
or
insb
int3
arpl
mov
or
je
notl
jle
pop
and
jae
mov
orl
sub
fs
cmp
lods
jmp
neg
xchg
enter
loopne
int3
add
add
iret
mov
test
xor
push
cmp
and
mov
rolb
testl
cmpsl
jg
cmp
orl
xlat
imul
das
mov
xchg
add
sahf
cmp
sahf
stos
das
mov
pop
shll
inc
loop
ret
pop
dec
sbb
fs
push
or
adc
icebp
fidivs
xor
adc
push
add
xchg
hlt
push
sub
cli
push
jnp
mov
orb
inc
jno
enter
xchg
cmp
sarb
insb
cltd
jg
mov
rolb
dec
lret
sti
add
imul
jge
arpl
bound
mov
mov
inc
aad
jne
add
movsb
out
inc
mov
shlb
cli
aas
or
mov
inc
pop
adc
call
sahf
cmpb
aaa
out
cltd
test
push
rclw
xchg
pop
lods
pushl
add
sbb
pop
jne
jbe
cmpsb
shll
loop
lds
loop
jb
ljmp
inc
leave
lcall
fld1
xor
push
stc
int
jle
or
aas
dec
stos
add
outsb
sbb
imul
jb
lds
dec
cmpsl
add
fnstenv
xchg
rolb
mov
sbb
inc
jg
addr16
mov
ss
cmp
push
dec
xchg
inc
fsubs
adc
push
pop
sbb
jl
loope
mov
data16
sbb
mov
arpl
xchg
shl
cmp
movsb
int3
imul
mov
cltd
sbb
add
lds
bnd
pop
adc
repz
jbe
mov
in
ds
lcall
cld
incl
pop
data16
xchg
lds
jmp
gs
out
pusha
sub
dec
and
push
cs
or
mov
push
pop
sub
mov
out
mov
jmp
push
and
and
push
add
inc
xor
repz
cltd
in
not
or
or
mov
mov
daa
dec
xchg
sbbb
push
mov
repnz
mov
add
stos
insl
mov
xchg
jl
imul
mov
push
add
rcrb
iret
int3
lea
ret
in
add
stos
mov
hlt
in
insl
dec
sarl
or
mov
int3
cwtl
test
cld
enter
aad
dec
or
sub
pop
ret
test
out
cmp
sbb
dec
nop
cmp
imul
inc
jnp
xor
push
bound
cmp
mov
pop
nop
push
pop
push
adc
xor
push
dec
push
aad
cmp
pop
jns
pushf
repz
int
push
movsl
adc
js
outsl
cwtl
bound
lods
jo
fidivrs
jno
push
test
ds
mov
jns
or
jo
push
sub
nop
jge
and
ret
ljmp
pop
xchg
in
dec
rolb
xchg
cmpsl
adc
cmp
push
add
inc
pusha
adc
testb
and
or
lods
add
mov
je
add
inc
push
lret
mov
xor
pusha
fimuls
or
clc
fstps
std
call
mov
push
inc
push
and
dec
adc
or
xor
movsl
dec
adc
fs
add
out
in
ficoms
adc
push
xchg
jg
add
pushw
push
aaa
mov
ja
sub
sarb
mov
imul
mov
jbe
movsb
test
insb
leave
ljmp
inc
pop
inc
mov
or
inc
pop
jl
cmpsl
adc
roll
and
jae
xor
stos
into
pop
lock
jge
bound
iret
or
mov
out
push
in
or
cmc
aad
xlat
pop
dec
add
cltd
sub
mov
int
incl
mov
pop
cmp
ret
push
xor
mov
pop
xchg
loop
jne
pop
fcoms
mov
aad
mov
and
addr16
out
imul
xor
loope
jp
js
or
pop
lret
in
test
jns
ljmp
or
ret
inc
adc
ljmp
popa
and
inc
push
xor
cltd
insb
stc
out
cmpsl
push
push
aas
sub
sbb
std
lea
jns
push
add
sbb
lea
fbstp
lea
iret
sbb
in
int3
pop
popa
cmp
in
int
push
add
stc
das
xchg
add
fstl
ljmp
jo
sbb
in
cltd
adc
stos
inc
push
ja
cmpsb
dec
in
lret
stc
adc
daa
int3
cmp
mov
and
or
sub
das
sbb
fmull
cmc
adc
mov
jo
or
test
pop
mov
inc
xor
cmc
addr16
mov
inc
cld
pop
cltd
dec
mov
adc
dec
fcmovbe
sahf
push
fdivrp
aas
mov
test
movsl
push
or
xchg
or
stos
ljmp
inc
rcl
push
add
and
or
cli
sarl
xchg
xchg
lock
xor
xor
repnz
or
pop
cmp
cmc
out
hlt
in
loopne
xor
cmp
and
mov
into
xchg
imul
inc
cmpsl
jecxz
lods
insb
bound
inc
das
les
inc
xchg
dec
inc
outsb
xlat
clc
mov
add
mov
stos
adcb
mov
stos
icebp
outsb
in
mov
cmp
decl
mov
sub
fs
xchg
cmp
negl
cmp
mov
imul
or
dec
mov
sub
ror
inc
sbb
stos
dec
sbb
mov
adc
mov
pop
lods
lea
and
push
mov
fbld
mov
scas
and
aaa
cmp
leave
decl
add
xchg
mov
imul
in
pushf
push
pop
xlat
add
outsl
out
add
push
adc
xor
mov
add
loop
jmp
push
andb
mov
sbb
stos
xchg
into
sbb
fs
adc
out
testb
insb
pop
inc
mov
jae
xchg
out
mov
sbb
cmp
mov
aam
push
sub
nopl
push
lahf
mov
mov
dec
cmpsl
in
ja
out
dec
pop
mov
lods
leave
adc
lock
clc
mov
addb
xchg
arpl
xchg
jle
popa
mov
cmp
imul
je
adc
jbe
xchg
adc
mov
push
cmp
fistpll
mov
rorb
jp
ficompl
sbb
lcall
xor
cmp
push
insl
pop
pop
lock
into
xchg
in
out
inc
mov
mov
xor
push
fldl
stc
mov
inc
in
out
gs
adc
loope
int3
sahf
sbb
push
sbb
aad
add
cmpsb
xchg
ret
push
shrb
xor
push
addr16
stos
rcrl
sub
and
scas
jecxz
jp
mov
into
jp
push
lahf
or
adc
cmp
and
add
aas
nop
nop
loopne
dec
jae
repnz
mov
rclb
add
xor
push
adc
or
arpl
xchg
rcll
lret
mov
sbb
test
push
xor
sub
fisttpl
dec
ss
push
inc
clc
stos
aad
push
dec
lahf
xchg
sub
loope
pop
hlt
test
pop
dec
cmp
cwtl
push
fsubs
ret
mov
lods
insl
loope
mov
stos
mov
pop
adc
jecxz
or
xor
push
mov
mov
repnz
push
stos
pop
sahf
mov
or
push
sub
lock
lcall
inc
cmpsl
out
pop
repnz
cmp
fstpl
lret
mov
aaa
push
aad
cmp
push
adcb
out
cmp
das
out
push
add
xchg
hlt
mov
aas
jne
jle
mov
xchg
inc
cld
jno
shl
xchg
and
pop
fwait
xor
xchg
lea
into
loop
push
push
inc
dec
mov
sbb
cwtl
sbb
and
xchg
jl
aas
pushf
jns
pusha
mov
loopne
call
sbb
loope
add
sbbl
xchg
xor
sub
dec
imull
ficompl
push
imul
mov
bound
frstor
je
movsb
mov
pusha
lock
mov
frstor
pop
jno
dec
cmp
inc
sti
es
dec
jno
lods
inc
adcl
pop
add
pop
out
push
dec
add
jno
sbb
adc
pop
mov
inc
adc
cmp
outsl
pop
mov
mov
mov
inc
or
mov
loopne
jnp
xchg
repz
mov
sti
adc
int3
loope
dec
mov
adc
pusha
sub
mov
es
cmp
mov
jmp
data16
rclb
xchg
mov
and
cs
imul
xchg
les
subb
addb
pop
mov
in
jne
sbb
mov
inc
add
xchg
cmp
scas
scas
sbb
pop
and
pop
dec
jmp
jne,pt
lret
sbb
sub
jp
jl
or
pop
aad
fcoms
dec
cwtl
xchg
popf
jmp
std
mov
push
rolb
adc
xor
and
repnz
sarb
or
push
arpl
fisttps
jg
cmpsb
pop
jns
xchg
xorl
sub
and
cmp
outsb
call
xlat
sub
mov
outsb
jo
jnp
or
or
daa
nop
mov
loope
nop
mov
add
cmp
stos
dec
stc
rol
push
pop
ljmp
fdivrs
imull
sub
pop
mov
jge
and
pop
mov
ljmp
lods
insl
mov
in
push
test
add
repz
jle
into
mov
add
loopne
pop
and
int3
inc
fs
sbb
cwtl
mov
xorl
jle
xchg
fs
popa
enter
dec
sbb
mov
test
inc
je
inc
mov
daa
stos
pop
lahf
mov
jae
xor
push
test
dec
push
stos
out
jg
push
test
dec
adc
xor
enter
fbld
ret
sbb
push
fcmove
lea
xchg
pop
or
imul
mov
jne
mov
cmpl
sub
jmp
mov
pusha
in
cmpsb
jne
mov
jecxz
inc
push
pop
dec
cmpsb
popa
fidivs
push
jle,pt
push
shrl
or
sub
adc
pop
repz
out
or
dec
xchg
jbe
data16
and
adc
cs
jmp
jno
xchg
mov
jbe
add
out
out
pusha
shll
pop
adc
outsb
hlt
push
in
sahf
cli
out
insl
dec
gs
or
out
pop
jecxz
cltd
xchg
leave
insl
imul
clc
mov
push
hlt
fisubrl
cwtl
xor
bound
sbb
sbb
pop
sbb
dec
or
mov
inc
adc
gs
fnsave
and
or
xor
mov
adc
fisttps
sub
xchg
das
fwait
ret
cmp
pop
push
imul
ret
pusha
out
push
inc
jne
ficompl
fimull
xchg
sbbb
ret
cld
push
repz
es
mov
out
aam
xor
les
stc
mov
aad
or
loopnew
mov
fildll
outsb
mov
in
les
subl
pop
fidivrs
jp
bound
ljmp
adc
mov
outsb
fadds
call
or
std
fidivrl
pop
call
pushf
int
scas
in
insl
cmp
sbb
rcr
mov
imulb
pop
cmpsb
pop
jle
sbb
jae
jno
sbb
popf
push
loope
test
hlt
into
jbe
lret
hlt
dec
imul
jmp
mov
lock
in
test
shlb
sbb
addr16
pop
cmpsl
push
inc
cld
shll
mov
hlt
mov
out
faddl
fprem1
mov
adc
push
or
in
test
inc
xchg
cmp
push
call
nop
or
rcl
mov
push
or
inc
lods
js
sahf
jg
sbb
jmp
xchg
push
cmp
jbe
loope
sub
loopne
mov
xor
dec
lods
and
pop
repnz
into
xchg
rcrl
dec
push
mov
and
adc
out
cmpl
sbb
ljmp
add
add
cwtl
das
xchg
jae
sub
shl
fisubrs
mov
gs
cmp
and
cltd
cmp
leave
insb
push
xor
mov
xor
pop
sbb
jge
fadd
jns
test
pop
sbb
in
mov
adc
mov
mov
mulb
cltd
push
push
fs
push
lcall
pop
and
push
mov
jo
ret
mov
inc
mov
jge
outsl
stos
iret
jnp
mov
stc
jbe
dec
adc
push
or
sub
aam
inc
repnz
js
insb
mov
or
xchg
imul
in
pop
das
push
push
cmpsl
xlat
aas
les
adc
xchg
mov
xchg
hlt
dec
push
mov
aad
jo
loopne
push
xchg
mov
add
sbb
imul
add
loopne
into
fbld
aam
testl
sti
pop
mov
jnp
jle
sbb
jle
xlat
jnp
dec
cld
aad
mov
pop
test
cmpsl
jb
shrb
adc
leave
push
pop
popa
sub
xorl
or
sub
loopne
or
icebp
enter
mov
push
addr16
adc
sbb
cmp
xchg
sub
sub
push
mov
mov
inc
push
fwait
push
pop
pop
into
push
fstp
pop
iret
incl
adc
and
xchg
lcall
inc
cmp
pop
cmp
popf
mov
fistpl
outsb
movb
push
xlat
ret
clc
pusha
add
arpl
cmp
gs
mov
ljmp
imul
jns
divb
cmp
fisubl
push
jp
push
push
les
inc
lea
sti
xchg
and
lods
add
and
loopne
sbbb
lods
sub
hlt
call
inc
jnp
xchg
mov
addr16
loope
loopne
pop
sbb
sti
mov
cmp
addr16
movsb
test
adc
mov
movsl
xchg
ret
adcb
pop
xchg
mov
inc
call
test
or
push
fwait
divb
push
mov
cmp
shlb
jne
add
loop
or
ficoml
sub
fidivrl
mov
test
popf
jns
push
cmp
loop
xchg
mov
inc
mov
fst
ss
mov
sbb
jno
out
adc
aad
cmp
pop
stos
cmp
repz
adc
loope
dec
xor
stos
bound
xchg
shll
xchg
sub
scas
pusha
out
push
out
iret
cld
push
leave
push
hlt
mov
or
notb
cmp
push
push
icebp
jle
stos
pop
mov
repz
je
jecxz
mov
ja
fisttps
mov
jl
push
jbe
dec
mov
sar
loopne
std
jns
outsl
popf
pop
mov
sbb
rclb
mov
insb
fwait
shl
or
leave
int3
shlb
add
shlb
jl
repnz
inc
je
cmp
adc
loop
pop
cmp
andb
enter
adc
dec
jg
push
repnz
bound
out
push
sub
lret
das
xchg
cmp
fsub
sub
rcrl
xchg
push
stos
push
aad
insl
popf
cmc
testl
mov
or
stos
adc
add
sbb
xor
inc
dec
dec
shll
es
lahf
mov
and
dec
or
outsl
sub
push
adcb
adc
push
nop
jmp
imul
fdivrs
sbb
lahf
aas
jo
iret
lahf
mov
pop
jae
mov
movsl
insl
xchg
xchg
mov
sub
push
cltd
dec
mov
or
bound
add
pop
and
jae
cmp
or
push
sbb
fisubl
sub
push
adc
shll
mov
outsb
inc
imul
pushl
addr16
xchg
inc
xchg
pop
shll
repz
dec
xor
negl
mov
sbb
imul
push
and
xor
push
out
lds
mov
out
shrl
add
inc
ja
clc
xor
sbb
lret
scas
sub
scas
stos
imul
leave
dec
repnz
jg
mov
mov
jae
add
mov
pop
scas
pop
and
loop
mov
or
dec
pop
jb
aam
xchg
dec
orb
movsl
lods
leave
leave
pop
adc
nop
das
fiaddl
lea
sub
mov
in
pop
aaa
mov
loop
inc
dec
ficoml
pop
xchg
mov
in
cmp
popa
xor
ljmp
mov
push
pop
imul
sbb
ljmp
fildll
xchg
mov
movsb
mov
mov
ds
mov
arpl
xor
mov
inc
push
mov
inc
lcall
div
adc
pshufw
push
xchg
fs
mov
lods
mov
or
or
jno
in
sarb
adc
sbb
leave
hlt
mov
push
iret
dec
gs
jp
push
lcall
jl
inc
jecxz
test
xchg
push
pop
mov
inc
test
push
hlt
lret
pop
jle
jl
pop
jnp
fstl
lahf
or
aas
cmc
mov
pop
mov
jg
ds
movsl
and
adc
xlat
lret
aaa
cltd
insb
repnz
dec
sbb
jmp
in
push
adc
mov
and
jne
xchg
orb
xchg
jl
mov
inc
mov
dec
daa
stos
mov
xlat
mov
lret
lods
mov
cs
mov
jp
dec
cwtl
mov
ja
test
fs
fwait
jno
xchg
rolb
mov
leave
test
hlt
sbbl
lods
mov
sub
call
sbb
ljmp
repnz
mov
sub
pop
pop
sub
inc
mov
orl
and
adc
inc
mov
cli
jo
push
mov
pop
clc
in
or
pop
jmp
inc
push
xchg
xlat
aaa
xor
sti
nop
pop
push
xchg
arpl
sbb
repnz
mov
pusha
hlt
sub
je
adc
inc
outsb
xor
or
dec
mov
mov
mov
pop
arpl
jno
gs
in
ljmp
pop
ret
lret
inc
popf
cltd
dec
lods
int
shlb
push
aam
popf
lret
int3
pop
mov
xchg
popa
jle
fnstsw
cmp
add
sub
stos
ds
pop
lods
add
push
nop
out
mov
push
push
cmp
xor
mov
loope
pop
cwtl
jle
adc
iret
push
sub
adc
jg
out
push
mov
fmuls
ret
lds
mov
or
mov
cmp
pop
scas
add
adc
lahf
mov
mov
fdivs
jg
and
and
or
adc
xor
rorb
inc
mov
out
ret
dec
addr16
ss
mov
pop
xchg
out
mov
xchg
pop
test
fdivp
mov
inc
sti
sahf
mov
icebp
cmp
ja
pop
sub
cmp
mov
popl
or
out
stos
mov
rclb
jl
sahf
xor
jno
testb
jns
ror
add
dec
je
test
pop
fprem
loopne
and
jae
nop
movsb
xor
sub
mov
xor
push
sbb
ficomps
and
ja
rolb
ds
or
xor
popa
cs
inc
std
lock
mov
jl
xchg
shrb
sbb
sub
ret
out
sub
jae
xchg
mov
ljmp
jo
xchg
pop
or
int
sub
cmp
xor
inc
add
mov
xchg
mov
icebp
jo
push
outsb
stos
inc
lret
out
mov
sub
pop
cmp
les
std
lods
pop
sti
aaa
mov
mov
xchg
inc
jae
jne
es
je
popf
dec
sbb
fadds
cld
fs
jb
ret
sahf
inc
add
dec
mov
adc
sbb
daa
cmp
ljmp
outsb
or
jbe
push
call
cs
mov
adc
int
clc
sbb
mov
ss
mov
into
jne
test
nop
js
rcrl
mov
xchg
add
sub
and
mov
rol
inc
jnp
inc
cmp
loop
jo
inc
fucomip
push
fadds
xchg
ret
mov
loopne
icebp
fldl
fs
sbb
js
adc
out
sahf
push
or
xlat
cmp
adc
fisubl
xchg
mov
sub
adc
mov
push
xor
sbb
jb
inc
push
add
pop
sub
xor
ja
mov
pushf
popa
mov
loop
dec
adc
ror
hlt
int3
addr16
insl
jbe
lods
jp
xor
xchg
in
sarb
call
out
xchg
mov
sbb
shll
mov
pop
test
in
and
popa
bswap
jl
mov
imul
arpl
jg
jno
aad
cmc
clc
mov
rcr
pop
imul
inc
adc
push
jnp
push
fstps
cmp
jae
sbb
stc
and
clc
leave
shrl
lods
adc
testl
lahf
push
and
jnp
sahf
mov
outsl
jle
push
hlt
out
repz
clc
jg
xchg
lahf
sub
ja
inc
xchg
flds
dec
test
lds
sub
or
int
inc
cmp
inc
lods
lea
ret
push
fnstsw
mov
add
enter
push
insb
orb
jl
ljmp
popf
loope
push
xchg
stos
inc
ja
test
out
repz
cltd
lret
push
mov
adc
mov
push
mov
iret
sbb
int
fildl
push
fs
ret
xor
fptan
lret
xor
adc
cltd
enter
aam
enter
mov
xchg
and
adc
hlt
aam
adc
adc
jge
or
push
aaa
jmp
andl
jae
out
inc
xchg
pop
and
cmp
inc
rolb
lret
gs
fiaddl
dec
fs
cli
jb
test
iret
iret
pop
dec
sahf
cmp
and
lret
insb
gs
mov
lods
hlt
xor
jl
pop
cwtl
fwait
push
push
test
fistps
arpl
and
js
popf
les
outsl
mov
xlat
mov
dec
jmp
push
out
aaa
jge
insl
adc
mov
push
out
mov
and
and
xchg
lea
sub
outsb
push
in
dec
fs
cmpsl
ret
cld
mov
lds
pop
scas
mov
cmpsb
xchg
lock
mov
rcrb
sub
sbb
imul
jbe
mov
es
cmp
adc
or
sahf
rorl
lods
fwait
je
sahf
fistpll
fisttpll
or
test
aad
es
push
pushf
push
je
push
adcb
mov
faddp
push
inc
bound
and
lods
aam
xchg
mov
fsubrl
cli
les
sub
mov
adc
paddusw
mov
mov
jmp
cwtl
or
push
in
pop
pop
cli
imul
sti
lret
popa
loopne
jb
test
inc
dec
push
add
sahf
in
mov
mov
stos
push
in
xlat
sub
int3
sub
ret
ja
cmp
cmpsb
cld
jb
imul
or
xchg
lock
mov
outsl
stos
inc
gs
mov
mov
push
mov
fcomps
ljmp
idivl
data16
mov
dec
xlat
sti
mov
outsl
out
inc
movsb
cltd
or
sub
scas
shlb
dec
mov
xor
jg
pushfw
and
lahf
aas
inc
and
adc
aad
hlt
jecxz
out
inc
jge
mov
pop
pop
scas
lods
mov
ljmp
add
shll
add
rclb
add
cmc
mov
dec
mov
inc
jbe
pop
pop
xor
loope
sub
shll
stos
lods
adc
jbe
inc
pusha
sbb
pusha
rolb
lods
xchg
sub
mov
pop
pop
mov
mov
cmp
xor
loop
pusha
mov
adc
loope
addr16
inc
mov
lock
outsl
fsubs
push
movsb
jmp
add
scas
sub
insb
and
test
test
repz
adc
mov
jg
add
or
and
inc
rorl
sub
pushf
ss
mov
adc
inc
daa
inc
fwait
xchg
jno
mov
cwtl
jne
xchg
fbld
aam
xchg
pop
sbb
shrl
mov
sbb
ja
rcr
mov
mov
cld
cwtl
mov
adc
jb
imul
and
pop
cmc
stos
loope
rcr
sti
add
aas
sub
shlb
or
roll
out
mov
ss
jge
lods
pop
dec
lock
insb
ficomps
out
cmc
fsts
sbbl
push
enter
fs
sbb
js
inc
lret
je
lahf
and
dec
roll
int3
sub
fsts
mov
addb
xchg
gs
hlt
dec
add
ret
xor
scas
movsb
add
mov
jecxz
jbe
push
mov
loop
mov
jno
pushf
inc
aam
mov
add
adc
jge
inc
inc
xchg
add
xchg
push
cmpsl
mov
adcl
cwtl
xlat
xor
inc
lret
stc
mov
jmp
inc
rolb
lcall
in
sub
hlt
dec
jae
jnp
xchg
push
push
repz
dec
xchg
pop
jae
pop
add
add
cmc
push
imul
loopne
cltd
out
bound
jb
sub
sbb
xchg
mov
mov
inc
sarb
jmp
cs
push
lods
mov
and
jmp
in
inc
xor
jl
jp
hlt
fimull
adc
js
das
adc
movsb
hlt
push
inc
mov
fidivs
mov
sub
out
fsts
data16
mov
and
dec
pop
fmul
xor
in
push
int
fs
loopne
inc
push
jbe
push
cwtl
flds
out
bound
xor
push
in
xchg
pop
inc
sub
push
fwait
mov
push
jbe
cmp
in
lds
enter
arpl
hlt
push
test
pop
into
add
imul
outsb
std
lods
xchg
shl
pushf
jecxz
jp
ret
add
repz
add
adc
xchg
mov
cmpsb
inc
add
insb
xorl
or
mov
mov
mulb
jne
inc
xchg
in
mov
sbb
aas
js
and
inc
lods
jb
mov
xchg
rcrl
jns
into
mov
dec
push
pop
mov
shl
mov
clc
dec
xchg
dec
adc
mov
cld
adc
out
clc
jnp
jecxz
pop
sbbl
iret
frstor
cmp
scas
xchg
in
lds
and
xor
push
lret
mov
lods
lret
push
imul
xchg
mov
and
mov
aad
push
push
das
nop
pop
sbb
fdivl
mov
lds
jo
cmp
rorl
sbb
ret
sub
and
js
sbbl
xchg
or
dec
pop
repnz
jne
mov
adc
push
mov
in
jp
push
loope
cmp
jp
addb
pop
mov
pop
jl
js
loop
xchg
icebp
mov
push
or
iret
addb
push
mov
filds
xor
sub
movb
and
je
fldcw
mov
dec
pushf
xchg
outsb
outsb
shlb
inc
sub
mov
or
xor
mov
scas
stos
sbb
xchg
stos
pop
and
mov
pop
mov
mov
inc
dec
mov
mov
xchg
xor
mov
xlat
pop
arpl
mov
movsb
pop
cltd
loopne
sub
add
cmp
leave
add
mov
js
dec
xorl
lret
in
movsb
and
cmp
fnsave
dec
out
int
mov
jne
sub
shll
scas
fwait
sbb
pop
sub
add
and
clc
std
lods
sbb
ss
lds
pop
loope
pop
add
pop
in
jo
cwtl
pop
imul
fisttpll
or
xlat
push
add
in
orl
stc
or
nop
arpl
pop
sarl
mov
orl
out
mov
hlt
lahf
adc
into
and
mov
pushf
mov
ljmp
add
test
push
xchg
xchg
out
pop
pop
jo
mov
cmp
add
inc
sub
in
out
push
fwait
enter
push
fsubrl
push
pop
stc
or
and
or
push
fnstenv
cli
mov
jl
jp
pop
mov
addr16
adc
scas
and
stc
test
xchg
xor
or
lahf
lock
fs
xchg
test
mov
arpl
xchg
push
mov
movsb
lock
xchg
inc
sub
fidivrl
and
movsb
dec
push
repz
adc
inc
sub
mov
dec
xor
pop
pop
push
aad
fldt
sbb
inc
leave
jecxz
xchg
fwait
leave
mov
dec
sarl
pop
pop
pop
cwtl
in
bnd
pop
fimull
inc
lahf
cmp
dec
sub
xor
out
lret
insl
mov
xor
lods
adc
cmp
jo
outsb
cmp
lds
testb
rcll
adc
mov
clc
orb
sbb
fdiv
int
mov
out
xchg
pop
aaa
mov
dec
mov
fisubl
mov
or
std
xchg
and
into
shlb
adc
pop
outsb
push
aam
jge
dec
dec
inc
push
addl
lods
imul
pop
cli
add
hlt
stc
je
mov
push
inc
and
loopne
xor
add
popf
xor
cwtl
sub
aas
scas
lea
xchg
aaa
popa
fcmovbe
jecxz
lar
jecxz
mov
and
mov
xchg
add
cld
jl
mov
push
mov
jae
sbb
les
aad
sbbb
ficomps
in
pushf
cmp
stos
insb
popf
sbb
sarl
cmp
jecxz
jbe
mov
push
adc
flds
jae
push
scas
out
loopne
dec
lret
jmp
loop
testb
nop
loop
call
xchg
aaa
sbb
xchg
clc
insl
jnp
loopne
fdivl
pop
xchg
pop
xchg
pop
dec
out
push
sbb
shll
es
lret
imull
pop
pop
xor
popa
jns
jne
jl
mov
or
in
mov
popf
inc
ret
cli
pop
cmpl
jle
scas
xchg
cs
cmp
mov
pop
add
mov
xor
subb
sub
mov
or
fbstp
pusha
inc
pop
fsts
es
andl
dec
nop
dec
mov
mov
iret
adc
inc
inc
jle
jp
shr
cmp
in
pop
insl
add
mov
lret
push
cli
data16
ret
sbb
fisttpll
push
fucom
int
adc
sub
inc
xchg
push
cld
xchg
lret
xorb
mov
or
mov
and
xor
push
stc
imul
mov
popf
lods
xchg
mov
mov
mov
or
repnz
and
mov
mov
xchg
outsl
cmp
jecxz
ja
sarl
jge
shll
insb
imul
and
icebp
rclb
lahf
sbb
jns
cmp
pop
sub
insl
push
lock
pop
popf
mov
lds
and
push
cmp
testb
in
loope
or
or
inc
add
mov
xor
sub
xor
xchg
inc
jg
cmp
xor
roll
jecxz
icebp
mov
mov
in
pop
test
jo
cs
mov
cmp
sub
sbb
pusha
aaa
adc
addr16
push
rolb
pshufw
call
jp
inc
mov
mov
test
pop
loopne
movsl
dec
mov
jbe
and
xor
cltd
dec
mov
outsb
xchg
jmp
xchg
jecxz
xchg
and
leave
push
js
mov
xchg
jmp
add
cmpsl
jb
or
sbb
test
push
rolb
lds
jmp
pop
cmp
sbb
dec
data16
fs
inc
sbb
mov
mov
add
xor
pop
ja
nop
xchg
lcall
jae
lods
aad
int3
xchg
aad
adc
pop
cmp
dec
mov
stos
popf
pop
jno
pop
into
insl
mov
loop
jnp
cli
pop
mov
or
and
enter
stos
sub
jns
push
in
inc
push
insl
gs
lahf
mov
pop
rorl
out
mov
and
inc
xchg
es
out
out
ficompl
xor
lds
adc
or
push
std
lock
stc
shll
rolb
mov
les
xor
inc
mov
mov
xchg
pop
pop
sbb
lea
sbb
mov
push
lods
ljmp
cmpsl
xor
xchg
or
movsb
das
push
push
xor
add
sub
jae
push
or
push
add
cli
inc
iret
mov
adc
into
mov
jl
mov
popa
pusha
xchg
dec
hlt
call
or
les
add
ss
xrelease
cmp
mov
or
mov
js
int3
add
or
into
push
lods
push
xchg
pushw
lahf
mov
filds
into
sbb
pop
jb
cmp
or
or
jno
rcll
adc
jno
std
jae
jg
out
pop
mov
xchg
inc
xor
movsb
cmp
jne
or
jg
cs
xchg
fldcw
lods
pop
or
mov
test
inc
pop
stc
lret
dec
jle
inc
mov
pop
adcl
lret
cltd
dec
test
jg
pop
mov
push
ret
je
pop
xchg
ret
mov
adc
mov
cmc
lcall
xlat
js
sahf
nop
xchg
adc
or
xchg
add
inc
mov
sub
sbbl
ja
je
incb
sub
iret
cmpsb
lret
imul
xor
cli
arpl
dec
xor
cmp
das
imul
in
aam
lret
andl
adc
loopne
loopne
push
mov
add
mov
ds
or
jb
repz
xor
ja
out
ficompl
fistpl
xor
jae
xor
cld
sbb
test
out
sbb
add
into
stos
sub
xchg
sbb
adc
inc
and
ss
andb
pop
roll
sub
cmp
data16
pushf
pop
mov
mov
iret
iret
jge
test
push
sub
push
mov
mov
jp
outsb
jmp
dec
adc
pop
ss
inc
and
jg
adc
lret
pop
add
push
imul
add
xchg
xchg
pop
fnsave
ret
call
lds
inc
dec
sub
cwtl
lret
inc
or
out
jno
and
jmp
stc
sbb
dec
add
and
xchg
fsubrs
fwait
lods
shll
rcrl
cmp
xchg
jg
dec
pop
jbe
adc
add
int
xchg
xor
or
push
fs
mov
xchg
inc
jl
xor
lahf
enter
mov
jbe
daa
push
xchg
ljmp
lahf
dec
clc
push
adcb
cmc
and
push
xorl
inc
ror
out
stc
inc
repnz
lcall
arpl
shll
or
bound
mov
pushf
daa
jl
ss
in
inc
lcall
pop
out
push
mov
shl
cmp
and
jo
xor
cmp
and
xchg
push
mov
jecxz
inc
fcoms
dec
das
inc
mov
out
es
stos
mov
ja
pop
pop
subb
nop
sub
mov
dec
sub
jno
jae
daa
pop
jne
dec
mov
push
data16
arpl
out
test
imul
cmp
dec
jne
insb
jmp
fdivrl
out
xchg
or
and
xchg
leave
push
push
ss
jb
mov
cmp
xchg
pop
popa
mov
out
aad
addr16
mov
repnz
jb
and
pop
cli
jnp
and
jbe
loope
dec
ret
adc
and
ja
mov
push
out
mov
insl
sbb
sbb
and
and
sbb
xor
pop
sbb
clc
lods
inc
mov
subb
push
mov
pop
jmp
mov
xor
repnz
scas
not
jae
mov
stos
fdivr
lods
sub
cmp
loope
cli
mov
mov
iret
dec
pop
aas
cmpsb
scas
testl
dec
rolb
test
mov
adc
movsb
mov
push
or
shlb
stos
pop
lods
jns
pop
fs
sub
sub
inc
mov
mov
sbb
outsl
cs
cmp
ss
cmpsl
push
sub
arpl
xchg
xchg
cwtl
out
push
lahf
adc
and
loop
mov
mov
and
add
in
iret
mov
rcl
or
sbb
insb
lds
sbb
mov
sub
mov
leave
and
mov
pop
fucom
push
dec
cmp
imul
inc
fs
aad
adcb
mov
jecxz
sbb
imull
pop
sub
push
mov
lret
frstor
pop
mov
add
imul
imul
adc
inc
jo
mov
jge
dec
cmc
es
mov
cmp
sub
dec
ficoms
push
jle
dec
xchg
cli
es
fisttpll
stos
fdivr
clc
jno
leave
cmp
cs
inc
clc
or
fildll
and
sbb
lret
addr16
push
jl
or
pop
hlt
xchg
jecxz
push
or
fdivp
cmp
xchg
cs
sbb
inc
sbb
cmp
xchg
imul
sbb
cltd
testl
sahf
aad
sti
xorb
sarb
sbb
push
lds
ss
cs
dec
push
push
push
mov
std
jle
push
sub
jg
jne
outsl
fwait
dec
js
mov
cmpsb
xchg
leave
sub
lock
in
mov
push
inc
fcmovnu
out
push
loop
cli
cmpsl
and
cli
into
inc
cmpsl
pop
sbb
fistpll
invd
in
push
push
jb
add
push
shll
loopne
je
shrb
sub
ljmp
loopne
push
add
mov
jmp
jae
cs
add
mov
pop
jb
loopne
pop
jp
mov
loopne
test
incb
inc
xor
dec
jns
rcrb
repnz
cs
xchg
jle
adc
cmp
inc
lcall
loop
jbe
inc
enter
mov
cmpsl
inc
jp
lea
adc
pop
pop
dec
dec
push
dec
inc
dec
dec
in
mov
adc
or
ficomps
ss
adc
ficomps
ss
adc
call
xor
sbb
test
outsb
push
jle
in
jno
pop
mov
xchg
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
inc
mov
jecxz
in
or
aaa
fwait
mov
lret
pushf
push
shrl
push
mov
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
ficomps
ss
adc
mov
.byte
pop
.byte
.byte
