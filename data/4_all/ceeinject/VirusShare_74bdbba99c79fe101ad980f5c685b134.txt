call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lea
dec
mov
hlt
inc
xchg
push
enter
inc
out
lret
inc
leave
pop
mov
daa
mov
jnp
imul
out
xchg
cmp
or
inc
jmp
sti
movsl
lret
pop
fadds
jnp
fwait
daa
mov
fisubrs
inc
call
and
adc
dec
rcrl
scas
adc
cmp
dec
lds
mov
das
mov
lahf
aam
repnz
mov
popf
arpl
xchg
aas
addr16
xlat
es
sub
shl
mov
mov
aad
xchg
outsb
sbbl
push
stos
ds
fistpl
in
mov
insl
xchg
movsl
outsl
mov
sub
addr16
dec
call
gs
pop
sub
imul
insb
jnp
sbb
hlt
arpl
cmp
call
into
loope
inc
cmp
sbb
cmpsl
dec
mov
pop
jbe
jmp
sahf
addr16
mov
fbstp
mov
add
push
and
mov
data16
call
daa
fwait
pop
jnp
jl
dec
lock
xchg
popf
sub
jecxz
rep
ret
bt
mov
movsb
push
mov
dec
rep
ljmp
xchg
inc
xchg
add
arpl
push
fwait
inc
out
add
imul
jmp
addr16
addb
scas
adc
inc
mull
out
mov
cmp
ds
push
xchg
mov
cmpsl
or
inc
jmp
pop
mov
daa
mov
jnp
imul
out
xchg
cmp
or
inc
jmp
pop
mov
daa
mov
jnp
in
scas
jp
pop
mov
cmpsl
jmp
jns
xor
mov
stos
shll
pushf
ss
stc
sub
cmp
mov
xor
das
cmp
adc
add
mov
in
push
cmc
lods
out
mov
xchg
roll
inc
dec
xor
outsl
mov
xchg
mov
xor
add
jo
lea
loopne
mov
or
pop
sub
sahf
aaa
fldl
xor
dec
test
xlat
pop
incb
sbb
push
inc
mov
mov
subb
mov
sbbb
or
sahf
ds
mov
xchg
lock
shl
repz
jae
js
jmp
push
imul
lods
xlat
ret
push
sbb
cmpsl
out
sbbb
sub
sahf
cmp
sub
jne
ljmp
mov
lcall
out
pop
ficomps
neg
ss
mov
mov
or
jecxz
dec
in
xchg
cmpsb
pop
pop
cmp
lds
bound
sub
add
cmp
daa
and
cwtl
and
pop
sti
cs
mov
lcall
add
and
arpl
mov
es
dec
mov
repnz
push
addr16
sub
dec
aad
rclb
cli
movsl
popf
sbb
cmp
add
in
sahf
scas
mov
fwait
addr16
or
repz
es
cmp
dec
rclb
lock
and
pop
test
dec
dec
jmp
ljmp
mov
or
pushf
pop
jne
sahf
test
in
int3
ror
mov
xchg
shrb
nop
out
mov
adcb
daa
ret
mov
das
and
cmpsb
pop
js
pusha
sub
jo
inc
call
add
int
enter
out
js
fst
pop
test
push
fisubs
andl
xchg
pop
fldenv
nop
mov
stos
loopne
es
js
popa
aaa
mov
xchg
xor
sub
in
adc
and
pop
fldcw
and
cmpl
add
pop
fisubs
cld
adc
jb
nop
dec
dec
fisttps
arpl
cwtl
shl
jo
out
jle
sbb
push
fstps
enter
push
mov
xchg
sub
push
mov
out
xor
mov
xchg
sub
rcrb
xchg
mov
outsb
sbb
dec
jle
jns
call
loop
lods
xchg
inc
fcmovnu
or
jmp
adc
lds
pop
cmc
xchg
clc
xchg
push
sub
mov
iret
cs
jle
cmp
cmp
mov
jno
fsubrs
xor
scas
stos
cwtl
mov
hlt
dec
fwait
popa
scas
dec
mov
jecxz
inc
fidivrl
lea
add
int3
push
mov
push
pushf
or
add
lods
popf
lcall
and
jg
ljmp
lcall
sbb
outsb
mov
psrlw
push
push
adc
cltd
pop
rcrl
je
pop
test
pop
cmp
xor
loope
icebp
jns
mov
sbb
add
js
mov
lods
and
pop
cs
mov
lods
cld
sbb
aaa
push
cltd
icebp
dec
stos
jae
test
jb
pop
lret
leave
inc
mov
int
fcomp
sub
bound
xor
stos
mov
push
pop
pop
test
add
and
stos
mov
mov
jno
inc
cltd
or
stos
mov
and
jb
sbb
cmpb
or
js
sub
mov
pop
fstpt
je
lods
daa
mov
pop
push
lods
pop
mov
cmpsb
js
push
push
bound
fwait
jbe
leave
xchg
xor
adc
into
cmpsb
add
enter
xor
das
sub
push
mov
loop
ret
add
rcrl
daa
aad
lds
test
pop
scas
iret
dec
jg
pop
push
mov
dec
xchg
push
add
jo
push
lock
and
je
and
mov
data16
and
popf
jmp
aas
or
rcl
mov
pop
inc
cmp
lea
scas
dec
enter
jmp
mov
push
adcl
sub
jl
insl
in
sbb
pop
rorl
xor
leave
xchg
cmp
or
divl
mov
and
xchg
jmp
negl
dec
scas
insl
sti
cld
mov
dec
sbb
scas
xor
inc
jo
pop
dec
pop
leave
js
pop
dec
pop
shrl
or
in
mov
cwtl
mov
and
insl
daa
cld
cmp
sub
mov
pop
fcmove
in
test
adc
test
jne
xor
push
ljmp
ret
push
test
mov
pushf
xor
out
xorl
cmp
inc
and
aad
inc
jmp
scas
jae
fmull
sub
sarl
push
cmp
and
inc
xchg
outsb
dec
mov
or
leave
imul
pushf
test
stc
and
pop
in
aam
sub
push
dec
out
iret
sarl
sbb
test
inc
ja
sahf
jmp
in
mov
push
scas
lcall
int
inc
popa
sub
jle
sub
xor
mov
scas
xor
gs
cmp
or
stos
ja
syscall
push
jl
push
mov
jmp
jp
aaa
cs
movsb
ss
pusha
sbb
xor
adc
pop
or
popa
pop
adc
cmp
mov
into
and
mov
outsl
sbb
movsl
mov
mov
notb
xor
jns
sub
cmp
bound
adc
clc
sbb
outsl
das
loope
mov
enter
pop
pop
jmp
mov
mov
in
stos
push
xchg
jnp
mov
rolb
imul
andl
bound
fmulp
and
push
pop
test
sub
ffreep
mov
push
cmc
cwtl
xchg
aad
mov
jmp
mov
xor
push
aad
and
and
sti
pusha
xchg
hlt
push
mov
sbb
xchg
scas
mov
testb
mov
cmp
jg
rcl
and
push
jmp
cwtl
jno
out
lret
pop
jecxz
lret
iret
arpl
mov
xor
aaa
add
scas
and
pop
xchg
push
adc
mov
mov
fidivrs
mov
or
shlb
inc
mov
sahf
and
cmp
inc
mov
lret
sti
subb
popa
ret
loope
adc
dec
ja
xchg
outsb
add
xlat
aas
out
inc
sbb
mov
mov
dec
dec
push
outsl
sbb
dec
and
pushf
int3
and
xor
pop
repnz
outsb
mov
out
in
sbb
add
insb
sahf
loope
cmp
in
stc
popa
and
rcr
enter
out
fadds
inc
rolb
fistpll
jle
lret
push
push
or
mov
xor
in
hlt
mov
xchg
loopne
fistl
mov
jmp
jle
pop
sub
push
fcmovnb
ds
xlat
int
pop
mov
loope
push
imul
jns
mov
xchg
jbe
insl
lret
imul
pop
mov
decl
jae
fstl
and
xchg
sbb
dec
lret
shl
xor
mov
pop
dec
sbb
adc
lret
pushw
inc
push
xchg
mov
das
ret
ds
mov
aaa
shll
in
fisttps
xlat
in
add
scas
shll
mov
sbb
jmp
pop
std
add
dec
pop
cli
xchg
das
push
mov
adc
mov
mov
enter
pop
xor
mov
sbb
lock
and
push
mov
jge
cmp
mov
cmpps
nop
or
mov
in
test
nop
dec
lds
aad
mov
jmp
scas
dec
rcrl
push
in
sbb
aas
enter
jns
dec
hlt
jbe
jns
inc
int
jecxz
jmp
add
mov
lahf
int3
inc
popf
out
and
push
clc
sarl
lds
mov
js
sbb
cmp
outsl
jae
inc
lds
mov
repz
push
jns
outsl
shlb
nop
mov
jb
mov
jb
inc
cltd
popa
jbe
je
loopne
lret
stos
jl
test
imul
push
mov
push
pop
xor
sub
inc
pop
sub
adc
popa
cmpsb
repz
add
mov
sub
xlat
pop
adcb
dec
fwait
ret
enter
push
pop
insl
mov
add
fs
dec
pusha
je
push
hlt
ss
sbb
adc
xor
fdivs
out
jg
xchg
cli
in
pop
leave
push
jmp
mov
mov
lcall
adc
mov
mov
xor
xchg
mov
int
outsl
pop
cltd
fcomps
aam
dec
lret
outsl
movsb
push
leave
inc
imul
fildll
mov
dec
loop
hlt
sub
shl
xchg
shlb
push
ret
sbb
pop
stos
movzwl
arpl
lds
inc
std
push
lock
call
pop
movsl
std
inc
shll
lea
mov
sub
inc
or
lret
mov
scas
or
adc
ret
pop
pop
gs
rcrb
sar
test
enter
aaa
mov
repz
andl
dec
pop
jo
ja
mov
mov
pop
and
inc
roll
cmp
lret
adc
out
mov
jp
divl
imulb
cwtl
lcall
les
jl
adc
or
jnp
insb
and
sarb
in
popa
daa
add
rol
daa
xchg
mov
xchg
xlat
fisttps
fs
xchg
push
lahf
sti
lods
loopne
fdivrl
in
jnp
mov
fsubrs
ljmp
fwait
fwait
pop
stos
cli
rcll
dec
adc
ret
sahf
test
outsl
mov
adc
adc
lock
fsts
jle
sub
jg
test
mov
cmc
stos
lods
cltd
add
cld
sbb
adc
fstp
test
scas
jne
adc
pop
in
lods
cmp
insb
ret
dec
mov
mov
mov
out
ljmp
roll
xchg
cmp
mov
xchg
fwait
xor
lahf
rcrb
fwait
popa
jp
in
xchg
xor
sbb
adcl
daa
lock
xorl
shlb
push
sbb
jmp
std
mov
and
ret
xchg
roll
mov
push
push
lock
xor
mov
sbb
mov
fxch
push
pop
andl
es
sahf
and
and
les
jmp
aad
fnsave
aas
int3
inc
pop
bound
jecxz
aaa
stc
sbb
add
mov
je
call
push
inc
sub
rorl
iret
enter
popa
push
dec
sti
inc
mov
outsb
jne
mov
les
push
jb
lods
add
stos
and
push
xchg
lret
jae
mov
std
cmp
std
mov
out
std
popa
roll
add
test
inc
cwtl
mov
aad
popf
shlb
or
adc
sub
popf
xchg
andb
je
cmp
pop
dec
inc
pushf
test
cmp
and
fstl
not
mov
pushf
lcall
push
movb
mov
movsb
dec
popa
push
mov
add
sub
in
adc
dec
mov
out
cmc
pop
nop
test
or
xlat
test
mov
cmp
lock
sub
push
lahf
pop
jns
lcall
xchg
lods
js
mov
stc
lods
addr16
call
push
loop
push
out
lea
movsl
js
inc
fsubrl
outsb
cmp
xchg
cmp
sbb
add
pop
sbb
sbb
and
push
inc
call
fwait
and
in
nop
mov
std
js
je
leave
insl
imul
stc
aam
test
inc
mov
mov
mov
dec
and
lds
das
inc
mov
mov
mov
cmp
xor
jl
lods
xor
sbbl
sbb
xor
mov
test
outsb
xorb
push
std
shll
xchg
rcr
arpl
mov
inc
scas
fcoml
mov
mov
movsl
dec
adc
dec
hlt
sub
mov
push
and
xchg
ds
fwait
or
fwait
shll
or
mov
cld
inc
fcompl
fcoml
inc
not
jns
xor
push
test
andb
imul
xorl
aam
mov
ret
pop
push
out
aad
or
mov
jo
imul
xchg
jo
insb
mov
mov
cmp
push
fimuls
lret
jg
div
cmpsl
imul
dec
fsubl
inc
mov
add
inc
movsb
dec
fldt
mov
imul
test
or
rolb
xchg
inc
xlat
pop
mov
jae
pop
pop
test
mov
insb
lret
call
mov
xor
dec
movsl
mov
or
outsb
fisubrl
fwait
or
xchg
scas
mov
dec
and
lcall
mov
aam
push
or
ja
mov
mov
out
mov
mov
xchg
clc
out
mov
inc
cmp
loopne
pop
mov
stos
jp
pushf
insb
mov
sub
dec
movsl
sub
aad
xchg
mov
in
mov
mov
mov
cltd
int
xchg
popl
inc
dec
mov
sub
mov
mov
push
xchg
pop
les
adc
cmc
adc
imul
imul
xchg
pop
popf
mov
mov
loope
scas
pop
test
into
xor
push
popa
adc
jns
shll
jo
sbb
call
inc
xchg
jmp
sti
or
cltd
sbb
sbb
movsl
cmpsb
push
push
push
pop
cmp
int
jns
cmpb
cld
sbb
pop
in
sub
xchg
mov
insb
adc
push
xor
std
add
test
jmp
dec
dec
addr16
sub
scas
pop
loopne
cmp
aad
push
iret
adc
aam
cwtl
pop
decb
test
fs
adc
pop
fcom
push
into
test
arpl
adc
arpl
mov
jp
adc
add
cmc
pop
dec
dec
jnp
in
and
and
out
lods
push
mov
lods
ret
loopne
pop
ja
cmp
call
inc
lahf
ret
jecxz
jmp
xchg
sti
jnp
lods
mov
shll
fwait
xor
adc
jp
loopne
js
mov
mov
or
jo
mov
sar
mov
jo
sbb
addr16
rorb
and
leave
sti
ljmp
mov
stos
xor
push
mov
in
mov
xchg
ret
arpl
xchg
push
pop
mov
insl
or
sbb
and
and
and
and
data16
pop
leave
mov
enter
mov
fsubrl
and
test
sbb
ja
in
xor
xchg
xchg
lds
cmp
cmp
dec
pop
es
dec
mov
fdivl
jmp
sbb
sbb
sbb
xchg
sub
das
jo
sarb
ljmp
xchg
and
or
divb
push
stos
jmp
imul
or
fs
jns
clc
and
lea
sbb
add
scas
jl
mov
lods
push
ret
add
mov
inc
push
push
jecxz
mov
daa
outsb
rcr
push
and
add
in
clc
or
push
fcomi
xchg
mov
fucomip
shlb
inc
insl
cli
bound
mov
inc
inc
dec
or
movsl
mov
imul
mov
inc
xchg
adc
mov
adc
jge
iret
jne
int
sbb
adcb
ffree
xor
xor
push
mov
adcb
gs
fcmovu
imul
ljmp
lock
mov
mov
or
adc
pop
or
mov
jle
xor
pop
mov
out
xchg
popf
add
cwtl
clc
pop
loop
xchg
cmp
pop
sbb
inc
iret
push
push
push
mov
jp
or
aad
push
sbb
jecxz
adc
call
add
ss
lods
pop
fsubrl
subl
push
sub
inc
cmp
and
adc
add
int
adc
jo
das
dec
jmp
lods
cmp
std
iret
cmpsb
adc
push
xor
xlat
fistl
push
popa
dec
andnps
cmp
int
fsub
xor
ret
jmp
sahf
inc
mov
xchg
dec
adc
dec
test
adc
dec
sbb
pop
addr16
push
imul
sbb
cli
enter
mov
pop
repnz
aas
and
sbbl
xor
mov
pop
jmp
pop
jl
pop
int3
jg
test
sbb
push
subb
outsl
fs
add
sbb
in
and
sbb
nop
jns
push
fwait
or
test
orl
sahf
push
dec
cwtl
lods
mov
cwtl
inc
pop
add
sub
dec
dec
dec
dec
scas
aas
sub
add
xchg
xor
push
inc
gs
jae
sti
cmp
scas
lds
icebp
xor
sbb
lods
movsb
popf
cltd
mov
inc
add
pop
cltd
pusha
shr
inc
nop
mov
orl
fdivrl
pop
pop
popf
mov
mov
or
jno
es
fdivl
fcmovbe
ljmp
dec
mov
mov
sbb
pop
scas
inc
push
sbb
daa
stos
push
push
adc
cmpsl
xor
lods
jns
loop
popf
sbb
mov
add
cmpsb
shlb
stos
aaa
cmp
and
ljmp
mov
mov
mov
leave
orl
and
sub
fsubp
sub
sub
aas
int
clc
decb
clc
loop
in
addr16
imul
and
insl
daa
jmp
leave
fisttpll
fsubrs
mov
adc
ss
call
xchg
inc
cld
repnz
out
js
push
sbb
aam
jle
out
cli
insb
pop
sti
xchg
movsb
jecxz
std
sub
or
dec
dec
movsl
out
cwtl
jb
cmp
fisttps
xchg
fildl
push
test
pusha
cld
outsl
jns
cmp
sub
dec
ret
cmc
xor
int
out
adc
add
incl
mov
stos
out
cmc
mov
and
jl
out
imul
pop
jg
xor
addr16
xor
icebp
mov
inc
sub
cltd
and
add
movsb
sub
js
in
mov
or
lret
push
mov
push
loope
jne
arpl
jge
or
cmc
or
jp
mov
stc
sahf
mov
in
push
sbb
iret
popf
lahf
dec
popf
lods
iret
stos
mov
push
rclb
in
divb
xchg
sub
mov
inc
sahf
aaa
add
mov
push
inc
cli
lret
repz
iret
mov
inc
sub
xchg
mov
mov
cld
cmp
pop
push
inc
fidivs
jnp
hlt
pop
out
dec
inc
insb
add
xor
lret
push
and
sbb
jnp
flds
mov
das
nop
int3
and
or
mov
addr16
jle
add
pop
rclb
ret
sti
iret
lahf
pop
pop
mov
xor
push
loopne
lcall
cmp
daa
in
xor
aaa
inc
lods
and
imul
aad
arpl
push
mov
or
arpl
in
push
sti
push
inc
xchg
jp
xor
aam
and
aas
fnstcw
in
mov
ret
lret
and
push
mov
add
std
movsb
cli
xchg
push
lods
jmp
and
push
push
adc
push
add
lds
and
xor
ja
das
or
iret
jmp
add
xor
push
hlt
aaa
xchg
lcall
push
and
addr16
gs
loope
and
into
out
rclb
sub
icebp
test
inc
scas
cmp
mov
negl
test
enter
jp
insl
imul
dec
es
lcall
mov
pop
and
cmpsl
push
sahf
cmp
mov
sbb
int3
fucomp
rolb
push
inc
out
add
in
scas
fidivrs
xor
xor
outsl
sub
addr16
mov
or
jb
add
mov
out
popa
sub
lock
push
iret
inc
or
xchg
dec
push
sbb
in
push
movsb
adc
and
pop
mov
push
adc
jns
push
stos
xchg
orl
imul
cld
inc
xchg
cltd
jge
sub
xlat
in
adc
mov
pushf
mov
aam
js
imul
and
dec
or
ja
andl
cmp
test
and
stc
xchg
call
pop
pop
in
xor
or
mov
ret
xchg
pop
sahf
inc
gs
das
mov
ja
mov
mov
add
imul
push
popa
nop
sub
test
lcall
lret
jl
imul
sub
sti
inc
jmp
pop
mov
daa
mov
jnp
imul
out
xchg
cmp
or
inc
jmp
pop
mov
daa
mov
jnp
imul
out
xchg
cmp
or
inc
jmp
pop
mov
push
mov
jnp
imul
out
xchg
cmp
or
pusha
xor
je
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
leave
jns
sub
mov
dec
mov
mov
int
mov
sub
xchg
dec
mov
mov
in
or
jp
dec
xchg
sbb
jb
sub
xchg
or
mov
into
add
lret
jle
jmpw
xchg
sub
push
xchg
sub
sahf
xchg
int3
or
lahf
mull
dec
sbb
es
scas
push
jg
movsb
sub
cmpsb
daa
loop
repnz
and
repnz
adc
in
mov
mov
cld
pop
std
jg
jp
sbb
push
loop
push
dec
push
jge
insl
mulps
dec
jne
lcall
js
or
cmc
test
and
bound
icebp
xor
mov
adc
fdivl
icebp
push
fnstcw
dec
xlat
sbb
xor
sub
push
insl
or
scas
pop
mov
xchg
dec
call
xchg
icebp
mov
sub
dec
outsb
cmp
sbb
mov
rolb
dec
icebp
inc
adcl
mov
sahf
xor
inc
fisubrs
dec
dec
mov
pop
scas
js
je
inc
jmp
mov
and
outsl
jg
je
ds
popl
std
jae
jne
inc
clc
jnp
cmpsb
push
mov
mov
test
sub
dec
std
pop
in
push
jp
or
cmp
ljmp
sub
dec
std
pop
in
push
jp
or
cmp
sub
cmp
les
xchg
or
xchg
pop
push
repz
imul
stc
jp
pop
or
push
sub
jg
out
and
push
mov
test
and
dec
pushf
pop
push
jno
mov
imul
jle,pt
lahf
pusha
push
jno
imul
fcompl
xchg
popf
pop
jecxz
mov
mov
xor
lret
pop
outsb
insb
test
lahf
ret
dec
ss
and
pop
rclb
xlat
gs
cltd
adc
movb
out
ljmp
testb
imul
popf
popa
mov
aam
adc
cld
cmp
and
rcrb
enter
stc
cmp
sarb
add
dec
sub
or
mul
jle
pop
mov
repnz
and
dec
lret
or
icebp
mov
std
sub
inc
inc
dec
push
je
mov
mov
call
and
fs
dec
movsb
scas
ret
arpl
sbb
inc
daa
cmpsb
ds
loopne
loop
adc
insl
enter
dec
fwait
jge
sub
je
xor
mov
xchg
mov
out
sahf
mov
xchg
out
mov
je
insb
sbbl
jno
fildll
cs
mov
scas
lcall
cmp
xor
enter
lea
test
sbb
adc
aad
paddd
ljmp
mov
arpl
stos
repnz
or
dec
decb
bound
bound
jno
jns
or
pop
je,pt
sbb
xlat
in
xor
sub
cmpsb
ror
out
aad
mov
adc
outsl
rcrl
add
pop
jge
jge
jl
imul
mov
pop
dec
pop
adc
ljmp
in
adc
pop
inc
int3
adc
scas
addr16
sbb
lods
loop
sbb
dec
lods
sbb
sub
pop
pop
in
push
sti
xor
and
adc
jg
ja
movsl
dec
inc
int
mov
sahf
fsubs
call
cs
in
mov
ret
jnp
dec
add
data16
push
sub
scas
xor
lock
pushf
jb
xchg
jbe
sbb
sahf
cmovle
adc
lods
nop
inc
sahf
and
and
test
cltd
push
sub
sbb
pusha
cmc
je
or
es
pop
shl
sbb
ret
jg
bswap
clc
xlat
ret
les
insb
js
cmp
jb
sbb
xor
dec
js
lock
or
lods
dec
mov
lods
mov
aaa
fnstsw
inc
aaa
pusha
lcall
mov
push
into
rclb
jmp
call
cmp
mov
aam
sub
js
add
push
lret
adc
in
aad
mov
mov
pushf
loop
inc
and
sbb
cli
bound
sbb
cmc
das
jno
jno
xor
test
cmp
xchg
add
ljmp
push
dec
xchg
or
enter
add
jae
mov
cmp
lods
repz
aam
mov
xor
push
fisubrs
cld
add
xchg
mov
xchg
mov
adc
outsl
pusha
loop
das
test
outsl
fidivrs
and
test
mov
fucomi
lcall
loop
xchg
cmp
fdivrs
push
mov
fadds
les
or
add
mov
jne
addl
shr
cmpsl
add
add
bound
cltd
inc
inc
adc
sub
lret
in
xchg
and
shl
sbb
cmp
dec
and
cmc
sti
pop
inc
lret
lcall
repnz
add
sbb
lds
sbb
test
ficoms
fadds
push
jecxz
push
xor
mov
pop
popf
pop
popf
out
out
test
push
jecxz
add
es
leave
mov
fwait
in
shrb
mov
test
add
outsb
dec
cmc
rclb
fnstsw
inc
mov
jnp
xchg
dec
cmpsl
xor
mov
mov
mov
dec
jo
stc
hlt
or
subl
xchg
jns
mov
lea
xor
hlt
shll
dec
adc
xchg
xchg
shrl
je
xchg
into
mov
ljmp
mov
outsl
sbb
xchg
bound
sbb
push
addl
adc
sbb
adc
pop
sbb
mov
incb
sub
leave
mov
mov
or
fldln2
stos
in
and
lock
or
out
mov
lock
jle
test
mov
xor
and
popf
jle
jne
test
cltd
inc
notl
aam
mov
jbe
pop
adcb
xbegin
lds
mov
and
hlt
mov
rcll
cli
or
inc
imul
movsl
bsr
push
dec
lea
in
enter
fdivrs
adc
ds
mov
mov
push
in
mov
dec
jmp
jmpw
ret
lahf
add
or
popa
sbb
mov
mov
cmp
adc
and
push
mov
dec
jp
fcoml
cmp
jne
mov
orb
xor
mov
aam
data16
in
jno
xlat
xor
in
in
adc
enter
inc
insb
dec
pop
mov
ss
shlb
in
push
repz
sbb
or
jecxz
jle
jb
rclb
cwtl
pop
arpl
aas
push
dec
push
std
fisubrs
popa
add
lahf
push
mov
inc
inc
outsb
jo
or
adc
xor
add
out
add
adc
js
mov
in
push
dec
das
js
idivb
pop
xor
js
sarb
jb
jno,pt
je
jbe
lods
ds
pop
jp
jb
addr16
fildll
add
dec
adc
mov
lods
dec
inc
insb
pop
or
and
dec
cmp
push
jb
daa
idivb
mov
rcrb
inc
loope
mov
push
fwait
mov
sub
ret
mov
roll
sub
push
mov
sub
int
cmpsl
inc
pop
iret
call
icebp
jnp
roll
jle
shl
dec
pusha
rclb
dec
mov
std
popa
cmp
mov
aad
vpshufd
mov
mov
xchg
sbb
push
adc
xchg
inc
sbb
ds
sub
jbe
les
mov
push
scas
xchg
lret
cwtl
xchg
aam
jno
mov
popf
ds
leave
and
cmpb
xlat
xchg
push
add
dec
add
adc
mov
fnstcw
loop
cwtl
dec
test
dec
stc
mov
addr16
cmp
pop
mov
xor
outsl
jmp
xor
imul
mov
gs
mov
stc
lcall
sbb
subb
sti
adc
fistl
jbe
nop
orl
loope
mov
jo
cmp
jg
mov
sbb
lods
jbe
mov
pop
enter
ja
xchg
fstpt
jmp
xchg
ja
cmpsb
pop
in
mov
popa
cltd
cmc
jae
mov
jg
add
scas
ja
fisubrs
jle
lahf
mov
leave
repz
fadds
insb
push
ret
movsb
xchg
sub
push
inc
cmp
xchg
out
aam
rorb
dec
movsl
xchg
xor
push
clc
pop
rorl
add
enter
inc
pushl
divb
mov
aaa
cltd
xchg
and
daa
fwait
mov
mov
adcb
mov
xor
xor
mov
fisubl
mov
ss
icebp
dec
pop
lret
test
or
pop
push
cmp
cltd
into
lret
mov
pop
xor
movsl
outsl
jecxz
cmp
dec
les
mov
ds
and
ljmp
and
xlat
and
add
in
scas
sbb
push
dec
push
mov
stc
jl
int
jg
mov
jp
lods
jp
mov
cltd
xchg
test
xor
xchg
filds
push
lods
add
inc
cmp
mov
cmp
jl
adc
mov
bound
and
and
xchg
mov
xchg
cmc
mov
out
push
iret
rcrb
xchg
sbb
mov
xor
insb
mov
dec
adc
xor
mov
cmp
out
jne
ljmp
fdivrs
xor
lahf
mov
xorb
test
dec
outsl
je
mov
subl
cmpsl
mov
dec
cmp
data16
xchg
inc
pop
cmp
in
adc
pop
lcall
mov
adc
cmp
lds
cmc
mov
cmp
orl
xor
xchg
add
push
stos
cltd
scas
push
push
mov
and
cli
pop
js
roll
push
cmp
adc
mov
inc
xchg
adc
push
insb
push
mov
jnp
fiadds
mov
sub
sbb
lret
dec
cs
xchg
jae
or
xor
dec
jne
lret
push
ds
out
fisttpll
jno
jg
push
das
adc
xor
add
jne
pop
cmc
xchg
rcrb
xor
adc
mov
fnsave
push
push
jae
ret
outsb
ret
data16
adc
lret
arpl
fildl
pop
sbb
inc
pop
cmp
das
fbld
and
push
faddp
mov
jecxz
jge
cmp
cmc
testb
movsl
test
pop
xchg
les
cs
jb
adc
adc
icebp
cmp
xor
frstor
jns
rolb
mov
out
aaa
or
loop
scas
push
out
bound
push
adc
pop
pop
jne
ret
icebp
mov
out
sbb
gs
hlt
movsb
xchg
jno
fdivs
sbb
pop
mov
sbb
inc
repz
int
popa
imul
fnstsw
push
mov
or
test
sub
ljmp
cmp
popf
pop
fimuls
cwtl
test
mov
add
test
xchg
pop
push
fcoml
jae
mov
loope
and
jp
les
add
add
ret
dec
xchg
jle
xchg
xchg
stc
mov
aaa
mov
xchg
sbb
cmc
lea
mov
jle
orb
inc
ja
inc
lods
psubusb
sbb
fucomip
out
jmp
icebp
negl
jbe
pop
xor
std
push
push
mov
popf
loopne
push
cwtl
mov
les
cltd
mov
sti
insl
cmp
ss
pop
shlb
outsb
mov
lock
stc
test
mov
sbb
arpl
ljmp
repz
jno
clc
rorb
jo
push
rcrl
dec
dec
lock
mov
xchg
out
add
push
mov
dec
sbb
dec
loopne
fstpl
mov
int
mov
stc
test
xchg
pop
pushf
sub
dec
and
mov
mov
cmp
dec
les
xor
push
and
cmp
int3
into
sar
push
xchg
jb
push
fsubp
leave
rorb
pop
jne
cmpsl
jmp
fcoml
faddp
lret
enter
or
xchg
orb
mov
and
sbb
jmp
aas
lret
pushf
xor
mov
pop
js
pop
mov
jo
or
in
mov
sub
outsl
outsl
enter
fwait
daa
ficoms
mov
mov
xchg
xchg
lahf
test
xor
push
std
loop
movsb
and
fistpl
jne
psadbw
xchg
insb
in
lock
lock
not
sti
gs
movsl
or
dec
inc
cmp
push
jg
add
mov
lock
cltd
inc
movsl
movsb
aad
fiaddl
jecxz
cltd
jns
imul
repnz
mov
xchg
sahf
lea
mov
add
inc
insb
xchg
imul
loopne
emms
popf
mov
xlat
add
pusha
sbb
xchg
mov
push
subb
xor
repz
mov
rcrl
inc
enter
sub
sub
mov
lock
cmp
push
aad
inc
add
aas
test
repnz
push
xchg
sub
lahf
outsb
add
rorb
mov
fcmovnb
cmp
out
mov
pop
xchg
fs
mov
lret
pop
data16
add
mov
dec
loop
dec
xor
fisubl
jae
dec
testb
lock
xchg
fcoms
je
dec
mov
pop
clc
adc
or
lahf
adc
jns
push
and
sti
cli
dec
and
cli
mov
xchg
outsl
rcll
pop
and
sbb
lcall
add
mov
sub
lock
loopne
dec
ret
push
push
adc
inc
insb
inc
jmp
sbb
cwtl
mov
aad
outsb
rcll
popa
int3
bound
rorl
mov
adc
lock
sarb
or
push
jecxz
mov
jo
inc
mov
rol
mov
bound
aaa
and
mov
es
mov
push
js
in
pop
je
adc
enter
xchg
ja
jecxz
and
stos
add
dec
xlat
push
mov
dec
sub
add
arpl
loope
sbb
rolb
imul
test
inc
pop
mov
push
out
in
dec
mov
pop
cwtl
add
and
iret
sbb
dec
cwtl
pop
out
cmp
jns
lock
push
pop
cmp
ja
das
push
jne
cmpl
jns
sub
shl
lock
aas
add
add
mov
sub
adc
addr16
int
pop
push
xchg
add
rorl
dec
add
pop
data16
int3
adc
add
pop
xchg
jbe
fistps
scas
cmpsb
out
sti
int3
jge
imull
mov
cmp
mov
pushf
xor
inc
mov
mov
test
jg
in
and
or
xlat
adc
es
push
mov
insb
scas
cli
in
or
dec
or
and
jns
lods
xchg
xchg
popf
cli
stos
arpl
inc
push
call
jmp
inc
jns
aam
test
xchg
xchg
inc
lea
jmp
cmp
iret
fs
jecxz
lret
movb
addr16
icebp
rcrb
xchg
add
mov
dec
mov
mov
adc
sbb
rcl
movsl
xorl
xchg
in
das
test
loope
popa
or
inc
test
jmp
push
int3
in
adc
and
fmuls
push
das
adc
insb
dec
push
mov
mov
or
mov
and
mov
jb
ret
dec
int3
sahf
call
gs
int3
cwtl
mov
popf
in
popa
jl
jmp
repz
loopne
js
mov
out
adc
outsb
int3
inc
or
jno
xchg
mov
inc
lock
mov
xor
jns
push
ret
xor
fldenv
lods
js
jae
pop
add
and
fadd
pop
jmp
addr16
fldt
es
xor
and
push
cld
fildll
pop
adc
je
push
leave
je
jl
test
mov
push
xor
lret
int
sub
sahf
or
sbb
dec
outsb
xor
mov
call
cmp
adc
dec
aaa
inc
dec
sbb
push
insb
push
popa
out
scas
xorl
inc
divb
pushf
cmp
outsb
aam
outsl
mov
call
adc
jns
je
push
imul
inc
mov
fwait
call
inc
sub
and
xlat
jbe
push
outsl
add
xchg
dec
shll
cld
out
add
xchg
fstps
sbb
inc
sub
inc
mov
xchg
xor
ss
xchg
sub
jne
fdivrp
leave
dec
and
cmc
outsb
outsb
mov
mov
xchg
int3
pop
ljmp
push
sahf
lea
and
nop
xor
inc
jb
push
push
inc
aam
and
arpl
in
cmp
dec
outsb
lret
cmp
sbb
cmp
cmp
xchg
xor
daa
jbe
adcb
mov
sbb
orb
nop
decb
fs
mov
ss
push
jmp
add
add
pop
scas
repnz
sbb
arpl
inc
into
inc
mov
push
xchg
sub
sbb
or
mov
push
daa
leave
dec
xchg
sub
fimuls
jnp
jnp
popa
add
out
stos
or
ret
mov
pop
mov
mov
mov
ja
xlat
xchg
loopne
popa
xchg
pop
sub
es
dec
xor
hlt
push
push
or
mov
xor
lahf
or
ja
cmp
pop
jge
push
push
shld
push
les
dec
push
lods
imul
sbb
lods
inc
rolb
das
dec
repz
das
rep
xlat
or
add
pop
test
cli
or
cld
and
fs
scas
jmp
daa
mov
xor
fmulp
fdivrl
jnp
das
cld
outsb
mov
xor
lods
int3
mov
adc
ret
dec
jl
daa
movsl
lahf
out
aad
fistl
clc
js
lods
jb
clc
inc
jmp
jo
popa
repz
insb
addb
rorl
pop
aad
mov
xor
pop
test
mov
lds
and
push
popf
sbb
dec
pop
leave
fwait
cltd
fcmovnb
lcall
enter
adc
adc
sahf
out
mov
out
cmp
lds
test
or
in
push
cmp
aad
mov
push
inc
mov
ja
stc
pop
xchg
shll
pusha
jo
pop
in
xchg
lods
je
js
je
adc
lret
jmp
jg
jmp
outsb
shll
ds
push
test
into
cmp
ljmp
nop
mov
mov
jae
rcrl
idivl
xor
gs
mov
dec
clc
xchg
scas
aad
insb
stc
arpl
cltd
xlat
int
mov
inc
mov
lret
roll
fdivl
ficomps
pop
mov
dec
jle
scas
xlat
outsb
leave
or
mov
mov
and
les
fs
push
pop
ds
sub
mov
and
nop
pop
dec
or
mov
pusha
lods
jmp
mov
leave
shl
loopne
popa
jge
mov
xchg
in
cmp
shll
jmp
pop
inc
sub
out
sbb
mov
cmp
fdivrs
outsl
cmpsl
es
outsl
jb
mov
mov
ficoml
push
je
jns
fimull
dec
in
aaa
add
fstpl
jo
icebp
sbb
fsubrs
xor
inc
daa
dec
xchg
pop
sti
pop
mov
dec
adc
movsb
xor
shlb
scas
int
mov
add
call
cmpb
push
test
loope
xor
notl
sbb
mov
xchg
push
jns
or
mov
pop
lret
sub
mov
out
movsl
xchg
cmpsb
pop
ret
test
in
fbld
or
push
xchg
mov
cmc
jns
cs
pusha
jo
xor
fbstp
neg
call
ljmp
rclb
dec
inc
nop
add
and
in
cltd
jo
xchg
shll
mov
add
xorl
cld
mov
pop
insl
add
and
cs
or
cmpsl
jmp
and
inc
sbb
lcall
bound
cwtl
test
jge
loop
mov
inc
sub
mov
lret
frstor
jb
jns
into
mov
inc
push
sbb
sbb
cli
stc
std
jns
roll
mov
push
pop
push
int3
or
call
pusha
test
and
out
aaa
dec
mov
sbb
loope
mov
sub
dec
rcrb
aam
or
lods
sti
faddl
adc
repnz
mov
inc
jbe
cmp
daa
mov
lds
pushf
aam
sahf
jo
test
cmp
daa
cltd
out
scas
mov
push
adc
out
mov
sti
fcompl
push
xchg
dec
lahf
cmp
sti
addr16
mov
xor
in
sub
xor
pop
stos
test
popf
insb
or
adc
jle
sub
sub
aaa
dec
shl
insb
dec
cli
pusha
jbe
arpl
je
ret
fmuls
out
test
mov
mov
jns
das
outsb
mov
pop
add
mov
mov
lods
push
adc
cmp
adc
lret
popf
pop
xor
mov
push
into
pop
push
fisubrs
ror
add
fxch
cmp
ljmp
rcl
and
inc
or
mov
fcmovu
dec
mov
mov
jb
xchg
popa
ret
lock
jbe
jle
pop
and
lahf
out
iret
push
pop
xor
out
sbb
mov
push
and
add
mov
or
or
jne
rorl
lahf
stc
cltd
gs
aas
mov
xchg
adc
insl
lods
pop
cli
dec
mov
mov
in
push
jp
or
cmp
ljmp
sub
dec
std
pop
in
push
jp
or
cmp
mov
dec
sbb
jp
dec
cld
pop
jmp
or
shrb
cltd
xchg
mov
cmp
dec
add
mov
aad
vandnpd
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
iret
pop
filds
out
aaa
jmp
adcl
addr16
sub
outsl
mov
cmpsl
pop
das
out
out
pop
filds
out
aaa
jmp
push
lahf
inc
scas
ja
add
pop
xchg
mov
cmpsl
lss
das
idivl
out
pop
filds
out
aaa
jmp
push
lahf
inc
scas
ja
addr16
xchg
pop
movsb
sbb
push
leave
addr16
jl
popa
xchg
push
nop
xchg
ja
lea
in
lahf
test
je
bound
in
sub
test
mov
or
inc
pop
arpl
sbb
stos
movsl
inc
sbb
movsb
decl
mov
dec
cli
mov
or
pop
push
daa
in
loopne
sbb
movsb
dec
xchg
xor
pop
scas
sub
sub
and
push
popl
jg
xchg
dec
js
jno
and
ja
das
cmpb
test
sub
xchg
test
es
xchg
jg
mulb
iret
lahf
sub
xor
adc
sbb
push
std
xor
pop
xchg
xor
pop
xor
push
xchg
das
notl
xchg
pop
filds
out
aaa
jmp
push
lahf
inc
scas
ja
addr16
xchg
pop
xchg
jg
pop
das
idivl
mov
mov
data16
xor
adc
adc
out
sahf
or
adc
push
jbe
imul
imul
repz
repnz
cmc
sarb
cmc
push
dec
push
pop
xchg
aas
mov
push
mov
pop
gs
inc
scas
ja
addr16
xchg
pop
xchg
jg
pop
das
idivl
out
pop
filds
out
aaa
jmp
push
lahf
inc
scas
ja
addr16
xchg
pop
xchg
jg
pop
das
idivl
out
pop
jp
push
pop
fneni(8087
push
mov
mov
cltd
std
lds
lods
out
dec
cmpsb
leave
popl
cmpsb
adc
mov
test
in
addl
fwait
mov
and
inc
adc
push
movsb
mov
loopne
cmc
and
mov
and
add
xchg
mov
jo
push
das
xchg
popa
cmpsl
push
test
adc
jmp
mov
add
sub
stc
dec
mov
in
jnp
and
cmp
mov
and
insl
clc
jmp
mov
sub
dec
pop
xchg
xchg
jno
or
fisubs
outsl
gs
mov
pop
lcall
subb
add
call
xchg
mov
or
idivb
icebp
fs
mov
xor
subl
in
mov
cmp
sub
sbb
mov
out
pop
sub
add
mov
jg
inc
call
arpl
mov
out
rclb
dec
push
jecxz
test
loop
enter
or
aaa
push
in
subps
sub
insl
mov
push
jb
mov
or
ljmp
xchg
out
xorl
or
cmp
in
sub
jge
adc
sub
out
xchg
xchg
sbb
pop
bound
cld
cs
xor
sbb
in
push
mov
xchg
enter
mov
iret
test
cmp
jl
mov
mov
rorb
cmp
test
and
sbb
inc
nop
mov
cmp
cmp
int3
ret
pop
fsubl
mov
or
bound
push
adc
xor
mov
inc
in
lcall
in
sub
into
in
pop
decb
sub
insl
shll
ja
push
jo
or
add
das
jecxz
cmp
sbb
in
mov
aaa
push
sbb
jge
enter
inc
sub
jp
add
mov
pop
or
test
mov
inc
mov
arpl
dec
sub
mov
imulb
mov
mov
xchg
pop
adc
jns
aaa
stos
sbbb
int
and
inc
mov
cmp
push
jno
mov
dec
in
je
sub
pop
cltd
push
aaa
rol
das
es
and
test
xchg
insb
iret
cmp
push
in
lahf
push
imul
dec
lods
cmp
push
inc
sub
inc
mov
lcall
push
rolb
and
add
fisubl
aaa
jmp
adcb
dec
mov
push
pop
cmpb
js
push
into
push
mov
out
sbb
movl
inc
inc
nop
xor
cmc
mov
xor
jge
push
je
sahf
stc
nop
jg
cmp
sbb
mov
cmpsl
inc
pop
mov
ficoml
imul
mov
sbbl
stos
repnz
xchg
dec
insl
imull
jno
push
mov
dec
test
jnp
sub
rcrb
cmc
pop
push
jbe
sub
sbb
mov
addr16
mov
movsb
insl
sbb
popa
jmp
js
mov
mov
ficoml
sub
cmp
dec
mov
inc
cmp
and
divb
push
mov
sub
inc
cmp
inc
ror
pop
jge
aas
sub
sti
sti
xchg
ret
pop
dec
cmpsb
bt
loopne
sub
push
and
dec
dec
adcl
pop
mov
insl
scas
nop
push
inc
push
cmp
in
or
push
mov
dec
rcrb
inc
inc
add
lahf
pop
or
sbb
bound
lret
and
sub
popf
push
loopne
aaa
ret
hlt
sbb
jbe
call
in
xchg
pusha
outsl
incb
mov
and
subb
cmp
mov
lods
mov
add
xchg
sbb
push
fstps
pop
jge
dec
inc
dec
lcall
dec
xchg
mov
mov
testb
enter
mov
sub
xor
inc
aam
inc
inc
ds
ljmp
mov
jle
push
aas
jns
and
push
xor
cmpsb
gs
lock
cmpb
jg
sarl
in
repnz
outsb
arpl
dec
nop
or
or
fdiv
xchg
lods
cmpb
jae
lret
outsl
repz
shlb
loopne
xor
shlb
inc
jg
daa
ljmp
jb
mov
stos
xchg
add
xor
or
push
add
test
imul
iret
ret
adc
out
inc
in
pusha
filds
bound
sub
sbb
dec
das
pop
inc
out
repnz
repnz
hlt
ret
adc
xorl
xorb
mov
sbb
sahf
inc
incb
ret
sti
xor
xor
mov
cli
add
pop
xor
test
popl
repz
dec
mov
aad
xchg
xchg
por
sbb
cmp
push
stos
imul
mov
loope
arpl
out
inc
mov
ds
push
jmp
shlb
rcll
pop
sub
scas
lret
and
mov
cwtl
test
jb
lret
hlt
dec
fstl
jb
gs
jae
jbe
loop
pop
xor
mov
fisttps
jb
mov
jb
std
in
lret
sub
cmpsl
adc
popf
add
ja
sahf
mov
scas
in
aas
imul
pop
enter
jmp
and
fists
cmp
xlat
xor
push
mov
adc
test
cwtl
inc
mov
mov
mov
pop
outsb
push
mov
mov
orl
add
jbe
sarl
xchg
in
ficoms
popf
popa
push
out
dec
add
outsl
cmc
xor
mov
jmp
add
ret
cmc
adc
xchg
sub
push
out
nop
mov
xlat
pushl
bound
mov
mov
lods
scas
addr16
pop
or
fistpll
add
enter
rcl
fwait
insl
xchg
movl
adc
add
fdivrs
fidivrl
sahf
and
cmp
out
outsl
cltd
hlt
ffreep
inc
sub
pop
ljmp
mov
push
das
test
push
and
inc
add
cmp
and
jne
loopne
jbe
or
dec
jb
jbe
mov
cmpb
mov
jb
pop
inc
pop
fstl
sub
imul
push
mov
xor
mov
and
sub
mov
cwtl
bnd
out
loopne
aaa
leave
adc
cwtl
rol
outsl
adc
je
ds
cli
xor
sahf
pop
sub
cltd
jb
repnz
stos
push
add
rol
or
xor
movsl
and
xor
and
xor
test
inc
das
outsl
xor
pop
jecxz
lret
pop
jo
inc
xchg
fsub
and
jge
pcmpgtb
mov
pop
pusha
and
xchg
jae
movsl
int
pop
push
fisubrl
cmpsl
cmp
scas
sbb
aaa
das
roll
pushf
sbb
shll
dec
popa
lods
xchg
inc
fcoms
xor
pop
icebp
add
fisubrs
mov
test
scas
dec
ret
adc
push
movsl
xchg
xchg
enter
aam
nop
popl
pop
adc
fstpl
into
mov
arpl
xchg
add
xchg
dec
mov
pop
jbe
js
mov
out
xchg
lcall
repz
mov
jnp
jecxz
aam
jo
ss
add
test
ret
es
jne
int
inc
inc
ja
or
sub
addr16
mov
dec
and
xlat
cmpsl
xchg
ja
mov
xchg
test
jns
subb
scas
andb
dec
shlb
add
sub
in
push
lea
inc
jno
dec
push
xchg
insl
lahf
pop
mov
imul
repnz
jmp
inc
push
sbb
push
addb
ret
xor
rcll
ja
mov
lods
jmp
leave
je
gs
in
mov
test
jns
push
sarl
jno
cmp
push
push
ds
repnz
jns
in
cmp
ss
fs
leave
mov
pop
in
idivb
in
loope
pop
lds
jle
into
out
cwtl
xlat
les
xchg
stos
nop
or
inc
pushf
add
pop
es
add
aas
cmp
movsb
in
call
mov
mov
neg
std
mov
or
shrb
scas
test
out
cmp
shrl
sbb
mov
cmp
xchg
jbe
xchg
leave
dec
mov
dec
push
ret
sbb
dec
decl
dec
fstps
ss
and
lds
into
test
mov
xchg
adc
out
fiadds
sbb
pop
cmc
roll
scas
mov
clc
xor
inc
repnz
dec
or
push
in
adc
lods
jmp
or
dec
and
lock
jns
iret
loope
cltd
dec
bound
adc
mov
xorl
jae
cs
loopne
scas
pop
pop
mov
pop
scas
aam
cmp
inc
xor
mov
and
dec
rclb
sub
add
popa
fsubrs
cmp
fiaddl
inc
andl
jb
cmp
sbb
mov
popf
mov
mov
add
sub
push
sti
lock
mov
daa
les
fdivs
das
cmp
pop
test
adc
out
add
sub
cltd
loopne
lods
mov
pushf
and
sbb
pop
sub
xchg
lods
inc
fwait
jl
in
and
push
call
outsb
xchg
nop
push
inc
sub
xor
pop
push
mov
mov
mulb
stos
sbb
jne
repz
cmp
adc
std
pushf
dec
or
add
icebp
cmp
pop
dec
adc
and
xchg
outsl
mov
les
enter
bound
add
hlt
addb
mov
lock
xchg
mov
xchg
call
into
lret
sbb
mov
or
imul
add
push
sub
sub
inc
out
or
jo
add
mov
and
add
jnp
mov
push
pop
pop
test
inc
outsl
movl
addr16
push
adc
push
gs
mov
loopne
cmp
clc
pushl
int
jns
fwait
sarb
mov
pop
int3
xchg
xchg
mov
ret
dec
mov
lcall
xchg
jmp
mov
pop
imul
rolb
push
mov
nop
gs
in
xchg
mov
lock
mov
out
jl
jae
rorb
push
adc
addr16
pusha
or
push
out
xchg
adc
mov
jmp
jbe
add
or
clc
std
adc
sbb
xchg
adc
push
sbb
movsb
xor
push
or
adc
jl
xchg
mov
out
lahf
push
int3
lcall
push
mov
pop
imul
sahf
dec
jnp
push
inc
fs
jnp
sbb
mov
pop
in
out
rorb
mov
xlat
aas
pop
sbb
in
lods
dec
repz
mov
pusha
shlb
ret
je
pushl
fcomip
mov
or
rcr
add
push
xor
and
mov
fs
lods
out
mov
into
jne
mov
or
jo
movb
ret
push
test
and
sbb
xchg
fdivrp
or
add
ret
lock
inc
and
xchg
cmp
cmp
mov
push
cli
cmp
sarb
adc
dec
pop
mov
std
mov
es
scas
lret
rolb
sub
jb
daa
in
add
dec
cmp
dec
cmpsl
mov
call
std
fwait
rorb
sbb
xchg
or
popf
add
cmpsb
dec
dec
icebp
adc
mov
pop
mov
mov
adc
mov
fcomps
aas
rorl
mov
push
mov
repz
push
sub
and
iret
imul
lea
shr
mov
push
rolb
test
lds
jnp
xchg
call
loopne
fcompl
cmp
sub
arpl
sub
and
popf
jns
cmp
push
data16
cmpsl
mov
add
iret
fcomps
jno
mov
js
popf
dec
subl
mov
pop
movsb
jbe
popf
insb
pop
push
sub
pop
push
mov
pop
jp
dec
jo
push
or
pop
sbb
push
dec
mov
pop
push
cwtl
out
pop
fnstcw
xchg
arpl
adc
xchg
out
sbb
ds
int3
push
push
xor
test
mov
or
ds
fisttpl
arpl
in
in
vunpckhps
xor
mov
or
and
mov
imul
inc
call
lock
cs
aad
dec
pop
adcb
pop
fdiv
mov
cmp
jecxz
push
test
aaa
in
loopne
mov
ret
jge
sbb
jecxz
lods
hlt
dec
repnz
cmp
fsubl
xchg
rclb
xlat
push
fistpll
enter
sub
lret
insb
jno
das
js
dec
out
mov
add
inc
sub
dec
add
test
andb
fwait
shrb
adc
push
popf
flds
xchg
adc
mov
lea
push
cmpsl
mov
sbb
jp
aaa
push
push
das
les
je
push
mov
aas
push
mov
inc
pop
in
enter
pop
scas
inc
dec
mov
pop
lcall
jp
inc
ret
dec
and
popa
outsb
into
mov
sbb
cmpsb
jge
cwtl
fidivl
pop
in
mov
sbb
stc
or
xor
insb
jl
orl
adc
into
mov
push
fimull
loop
jnp
cmp
dec
adc
push
and
or
imul
call
xor
test
clc
add
mov
dec
cmpsl
and
mov
push
test
and
out
out
sub
repnz
mov
push
aam
pop
mov
and
stc
and
inc
inc
xchg
pop
mov
add
pop
jg
je
push
daa
adc
jbe
pop
cmp
pop
out
leave
ja
dec
cmp
add
mov
jo
mov
fimull
mov
xor
out
cmc
or
dec
xchg
fs
and
adc
fcmovnbe
cmc
adc
cmpsb
scas
fsubrl
lret
pop
fstpt
ret
dec
or
es
inc
mov
arpl
ss
jge
mov
mov
adcl
lods
das
pop
mov
xchg
inc
mov
push
mov
xchg
lcall
mov
iret
jno
ret
sub
daa
sbb
mov
repz
lret
sub
sbb
cmp
insl
sub
mov
movsl
xor
xchg
popa
js
mov
xchg
cmp
jl
not
xchg
out
or
fisubrl
sub
push
sub
testb
lds
js
dec
pop
pusha
push
adc
movsb
mov
or
int
mov
loop
xchg
jge
or
loopne
lcall
jmp
mov
pop
sarb
insl
inc
and
mov
addr16
push
into
dec
fs
jl
stc
popa
sub
fsubl
mov
aaa
bound
and
and
lea
ss
adc
jecxz
out
lea
fldcw
inc
xchg
loop
xchg
call
test
add
aaa
push
pop
and
mov
pop
rolb
pop
jge
and
cld
inc
out
je
cmpsb
jnp
mov
not
pusha
cmp
jne
or
fadds
data16
leave
lcall
push
mov
add
and
sub
test
int
sti
inc
sbb
sbb
into
adc
cmc
inc
addr16
rcl
cmp
jecxz
movsb
dec
lods
test
aam
inc
jle
or
cmp
dec
inc
jmp
fldl
loopne
lahf
fiaddl
push
cmpsb
mov
daa
xchg
xor
push
lods
les
sti
add
in
enter
repnz
mov
and
cmpl
addr16
xlat
rcrb
pop
add
jg
push
loope
cld
or
aas
xchg
rcll
popf
and
mov
mov
mov
aad
dec
je
jle
lods
imulb
push
xor
andb
mov
jp
jmp
mov
xchg
jmp
lds
repz
push
ret
push
cmpsb
aam
inc
sbb
mov
repz
pop
fs
fsubrs
dec
mov
adc
cltd
xchg
and
shlb
add
js
mov
push
jne
not
sti
shll
xchg
pushf
mov
mov
addr16
or
pop
cmp
xchg
cmp
stc
in
mov
aam
push
jb
iret
fmuls
fst
hlt
pop
sub
mov
std
hlt
or
lret
aas
add
cmp
pop
inc
imul
fstl
lret
add
push
aas
out
mov
loop
sti
fs
mov
push
into
or
repz
mov
dec
mov
lea
ror
push
mov
add
lret
jns
cmp
rcrb
out
cli
mov
mov
insl
inc
sbb
or
mov
push
shl
imulb
popa
icebp
ljmp
ret
push
mov
mov
sbb
movsl
sub
push
xor
and
stc
xchg
xor
mov
mov
dec
push
dec
mov
mov
cmp
xchg
dec
jbe
jo
shrl
pop
popa
not
sbb
ds
shr
push
cs
std
mov
jbe
lret
push
call
cmc
or
fdiv
cs
bound
cmp
mov
mov
jg
push
mov
jbe
shlb
inc
or
das
mov
sub
jp
push
push
ds
pop
mov
daa
cmc
movsl
lock
loopne
imul
sub
push
inc
fildll
jg
jl
xor
lock
popa
std
fnsave
loop
insl
or
shll
mov
fsts
push
fistpll
test
addl
jo
sub
pushf
inc
pop
imul
outsl
dec
xor
popf
es
dec
push
data16
fnstsw
pop
sub
cli
sahf
and
in
mov
iret
flds
adc
dec
pop
push
pop
enter
inc
jbe
psubw
push
stos
shll
xlat
xlat
repnz
xchg
xor
adc
push
nop
cmc
inc
cld
mov
mov
xor
mov
idivb
inc
sub
push
test
pusha
xlat
imul
push
insl
push
sub
shlb
fists
xlat
fs
fdecstp
out
inc
outsl
pushf
dec
and
xchg
gs
imul
sub
push
jno
sbb
push
xchg
or
push
cmp
push
decl
mov
jle
imul
pop
push
xchg
or
sti
xchg
cmp
cmp
jo
mov
push
cs
loopne
xchg
divl
popa
scas
pop
daa
mov
mov
add
rorl
dec
jnp
push
mov
add
shrl
inc
dec
out
dec
dec
adc
repnz
jle
pop
clc
push
push
sbb
mov
aaa
mov
jae
xchg
sbb
add
cmp
push
xchg
mov
and
andl
popf
fdivl
call
add
cs
cmp
xor
inc
and
push
cmpl
ss
cmp
jle
lret
test
cmpsb
fidivs
jae
daa
sub
inc
frstor
pop
rol
lret
push
or
int
push
jnp
xchg
push
push
xor
fsubs
sbbb
es
sub
add
loope
stc
lea
fidivrl
bound
or
sbb
js
or
std
fwait
cmpsb
rorb
test
jb
test
in
repnz
fcomps
lock
mov
xor
xchg
push
inc
lods
loop
push
mov
js
adc
xchg
xchg
mov
popa
idivl
out
and
sahf
shlb
icebp
lods
dec
mov
cmp
push
sbb
adc
repz
mov
adc
or
dec
jae
inc
dec
push
adc
pop
cmp
out
lret
dec
adc
js
sub
out
sub
mov
cld
pop
ret
jge
ja
add
jo
clc
mov
ljmp
fistpll
sbb
add
mov
sub
rorl
mov
lahf
je
outsb
mov
push
pop
push
lret
sub
mov
jae
dec
in
jecxz
dec
std
dec
shr
movsb
jge
sbb
andl
jb
xchg
sub
mov
mov
cmp
call
dec
sbb
test
jne
pop
stc
popa
in
cmpsl
dec
lods
lods
adc
daa
push
lahf
inc
scas
ja
addr16
xchg
pop
xchg
jg
pop
das
idivl
out
pop
filds
out
aaa
jmp
push
lahf
inc
scas
ja
addr16
xchg
pop
xchg
jg
pop
das
idivl
out
pop
filds
out
aaa
jmp
push
lahf
inc
scas
ja
addr16
xchg
pop
xchg
jg
pop
das
idivl
out
pop
filds
out
aaa
jmp
push
lahf
inc
scas
ja
cmpsl
dec
xchg
pop
sub
js
xchg
cmp
or
sbb
dec
push
adc
dec
cmp
fidivl
jmp
test
cwtl
test
push
sbb
or
cmp
sub
clc
leave
call
cltd
aam
test
cwtl
test
push
sbb
or
cmp
sub
fprem
ljmp
in
cli
cli
test
sub
xor
dec
push
sbb
rclb
loop
repz
mov
std
add
mov
mov
xchg
int
cmp
lods
lds
roll
mov
int
lods
into
mov
clc
fldenv
xor
dec
dec
xor
test
jmp
pop
scas
fsubl
subl
sbb
outsb
dec
mov
fwait
imulb
pusha
jb
imulb
pop
inc
pop
sbb
leave
mov
and
cld
or
lds
sub
pop
shll
or
gs
mov
inc
dec
xchg
or
cmp
dec
sahf
jmp
sbb
mov
stos
popf
lcall
dec
sbb
or
cmp
sub
fprem
leave
call
cltd
mov
test
sub
pop
das
dec
jl
inc
push
pop
lods
pop
test
mov
enter
fld
das
sbb
sub
push
inc
fs
insb
insb
stos
mov
xchg
test
in
test
ds
and
sub
cmp
sub
fprem
leave
call
cltd
mov
test
push
sbb
or
cmp
sub
fprem
leave
call
cltd
mov
test
add
mov
mov
dec
sti
imul
test
test
sbb
aam
add
jmp
leave
inc
cmp
add
or
loope
jae
cmp
push
repnz
xchg
scas
xor
xor
and
insb
inc
ror
pop
cld
sub
push
in
xor
lods
mov
push
insb
rolb
push
data16
stc
lahf
sbb
adc
outsb
mov
outsb
lds
mov
add
push
push
dec
add
hlt
cli
mov
fs
mov
lret
sub
mov
pop
xchg
push
cli
sbb
mov
mov
js
pop
jecxz
leave
loope
or
push
into
icebp
inc
dec
push
in
xor
xor
insl
pop
or
mov
aas
push
sub
out
icebp
pop
sbb
lret
xchg
orb
pop
daa
mov
pop
mov
xor
inc
aas
mov
adc
xchg
in
xchg
hlt
mov
adc
xchg
movsl
or
push
mov
jge
inc
mov
xchg
aad
les
nop
jg
insl
pop
pop
pop
jle
pop
sti
test
sub
lahf
sub
xchg
stc
xchg
mov
mov
aaa
out
mov
cmp
movsb
add
pop
xchg
ljmp
shll
inc
inc
hlt
adc
rcl
sub
mov
mov
push
add
ja
rclb
fwait
mov
cmp
pop
and
jmp
xorl
mov
xchg
pop
pop
mov
pop
add
xor
push
adc
cmpsl
ljmp
mov
adc
stos
lods
aad
jnp
shlb
or
push
pop
push
rol
sub
add
cmc
rorb
or
cmp
add
pop
movsb
aaa
insl
jns
adc
lea
les
pop
sbb
mov
je
or
sub
mov
test
insb
and
std
ret
out
cmpsb
xchg
push
xor
jmp
sub
xchg
or
or
cwtl
in
mov
lea
dec
mov
lret
or
stos
xchg
xchg
pop
pop
xor
lds
mov
mov
or
imul
enter
scas
insb
xchg
lock
mov
and
jg
dec
cltd
or
sbb
mov
and
and
test
pop
sbb
int
daa
mov
mulb
push
sbb
add
mov
sbb
jmp
cld
call
popf
int3
cmp
imul
jp
testb
push
mov
inc
sub
sub
divl
imul
call
imul
dec
clc
inc
sbb
add
je
mov
jge
aaa
push
pop
mov
xorl
rorb
sub
insl
popf
scas
ds
xor
call
out
sarl
mov
add
cmc
rorb
pop
loope
dec
and
add
sub
loop
jge
mov
xchg
lock
repz
mov
jge
add
iret
mov
mov
xor
ljmp
jg
dec
lret
inc
rcrl
insb
fnsave
jb
scas
sub
mov
or
inc
push
not
push
jecxz
sub
ljmp
cmp
movsl
fistpll
je
cmp
hlt
movsl
cmpsl
mov
push
sbbl
iret
mov
cmc
sub
fs
cwtl
cmp
and
call
xor
fcmovbe
push
clc
fldenv
es
sub
shlb
lahf
orb
push
xor
aaa
xor
lret
enter
xchg
jp
pop
repnz
mov
into
pop
adc
jo
enter
rorl
jae
xchg
pop
mov
inc
faddl
push
push
jne
and
pop
repnz
lret
adc
rol
cmpsb
sbbl
push
push
aaa
adc
outsl
cmp
rolb
arpl
mov
dec
jb
cmpb
adc
loop
movsl
outsl
push
fldcw
lcall
jecxz
movsb
in
je
add
loop
ror
ret
jb
pop
jl
inc
inc
repnz
cmp
jle
out
xchg
cld
jg
cmp
into
lret
mov
sub
inc
jl
jne
popf
pop
jo
push
pop
push
test
rcrb
push
jmp
or
adc
outsl
mov
ljmp
adc
jge
xchg
outsl
jl,pn
loope
cmp
popf
mov
adc
loope
hlt
scas
stos
sub
shlb
and
mov
push
cltd
lods
jmp
out
nop
int3
cld
or
and
jb
adcl
sub
pop
dec
lret
loop
lahf
sbb
mov
lret
push
std
ja
mov
jae
ss
inc
dec
push
inc
adc
jle
pop
test
jns
shl
mov
lock
fnstenv
jne
xor
mov
lds
dec
loopne
inc
xor
mov
les
mov
sub
xor
sbb
and
mov
mov
fs
stos
stos
popa
sub
dec
in
fidivrl
mov
iret
mov
loop
cmp
test
inc
and
xchg
out
mov
test
pop
jg
insb
pop
xor
mov
sbb
mov
or
jg
aam
adc
mov
xor
daa
dec
cmp
sub
shlb
lret
pop
adc
popa
fdivl
jecxz
rcr
lcall
xor
cmp
adc
daa
js
imul
adc
mov
ret
fcoml
icebp
test
shll
inc
lea
pop
pop
aas
in
in
div
loop
pop
fucomip
arpl
pop
push
push
dec
push
inc
pop
jge
fwait
ja
dec
arpl
dec
dec
lock
jbe
lcall
sarl
inc
out
sub
xorl
sbb
xchg
test
mov
add
movsb
adc
sti
repz
imull
jae
jmp
push
mov
addl
cwtl
xchg
pop
aam
test
cmpsl
xor
mov
xor
imul
mov
dec
out
push
mov
imul
mov
inc
ja
test
inc
in
jne,pt
into
decb
aaa
icebp
lock
mov
loop
in
xchg
mov
insl
push
jle
or
outsb
push
fdivrp
and
dec
cmp
test
and
mov
sbb
or
movsl
or
fimuls
mov
adc
test
mov
ljmp
out
and
add
inc
jne
outsb
arpl
pop
std
js
xchg
cli
movsl
adc
ret
adc
mov
xchg
push
lret
bound
repnz
dec
and
pop
out
pop
scas
mov
and
inc
loopne
shlb
inc
cld
rcll
hlt
jecxz
adc
call
dec
jle
jns
enter
jmp
adc
push
sbb
xchg
pop
outsl
mov
ud2
cmp
mov
ljmp
lds
ljmp
leave
lcall
xor
rorb
popa
ss
es
mov
mov
mov
push
popa
out
sub
inc
jge
mov
jnp
dec
push
pushf
shlb
lods
and
gs
arpl
repz
fcomi
xorps
mov
xor
arpl
mov
aas
jecxz
sub
int
roll
mov
scas
lods
lea
mov
sbb
les
loopne
dec
xchg
lret
cmpsb
jecxz
lret
mov
pop
push
mov
cld
adc
push
clc
inc
hlt
mov
movsb
shr
dec
sti
fwait
add
xchg
jo
mov
jnp
adc
add
cmp
test
or
ljmp
cmpsl
xchg
fildll
aas
cs
lods
scas
jl
xor
sahf
sarb
xchg
out
icebp
adc
ret
pop
sarb
es
mov
hlt
test
mov
and
sub
iret
sbb
mov
stos
sbb
jmp
xor
mov
push
roll
repnz
lods
xor
imul
sbb
push
roll
xchg
cmpsl
push
mov
pop
mov
jns
jg
hlt
mov
or
lea
lret
fmul
fdivs
pop
sbb
jbe
jbe
shll
loopne
sbb
xor
xor
push
mov
xchg
mov
or
push
inc
repz
inc
int
ficoms
out
pop
and
pop
dec
cld
je
lods
add
cmp
mov
in
jno
jae
pop
cmp
add
mov
push
je
cld
scas
cmp
adcb
jle
insl
movsl
push
and
xor
int
pop
pop
out
mov
in
cmpl
pop
push
neg
dec
mov
lock
mov
adc
rcl
dec
test
xchg
mov
addr16
xor
dec
pop
mov
mov
mov
or
fdivr
sub
sbb
test
test
xor
push
cltd
pop
xchg
jno
jae
jns
in
inc
add
sbb
cmp
xlat
leave
cmp
outsb
sbb
xlat
pop
jmp
mov
in
cmc
pop
mov
lods
sbb
add
in
dec
xchg
addb
fadds
xlat
mov
cmpl
add
imul
jno
pop
inc
fldenv
ja
jbe
push
add
xor
rcrl
leave
jo
xchg
dec
dec
scas
dec
fcoms
jo
xchg
pop
dec
cli
enter
xchg
add
mov
pop
adc
ljmp
stos
lret
xlat
mov
mov
mov
outsl
or
movsb
out
sbb
fidivl
xor
xchg
pop
sub
xchg
imul
jge
mov
sbb
stc
fadds
pop
out
jno
pop
ja
push
xchg
clc
adc
stc
cmp
xor
dec
adc
call
mov
sub
inc
adc
dec
icebp
loope
and
adc
cwtl
or
addr16
rclb
mov
inc
jp,pn
mov
mov
mov
je
mov
dec
fmulp
cmp
mov
jp
push
jg
sub
inc
pop
or
lcall
std
jg
fnstcw
leave
add
push
pop
inc
stos
xchg
push
mov
inc
pop
outsb
hlt
vrcpss
push
inc
jmp
xor
pusha
fildll
aaa
add
stos
and
jle
push
mov
mov
clc
mov
mov
stos
andb
xchg
pop
test
sbb
sbb
js
add
loope
inc
and
nop
cmpsb
inc
negl
pop
push
adc
icebp
adc
push
into
ljmp
inc
roll
popf
pop
sub
loop
push
jmp
ds
sahf
ja
lea
or
rorb
inc
and
int3
rorl
cmp
dec
dec
xor
push
or
and
ss
sub
mov
ret
mov
cs
movsb
inc
dec
enter
mov
stos
es
sahf
mov
pop
lods
out
and
test
stc
test
xchg
cwtl
push
imul
enter
push
xchg
cmp
ret
inc
loopne
lods
pop
cli
fwait
xchg
rcrb
fsubs
adc
and
out
out
pop
inc
hlt
shl
ja
add
sbb
iret
rcr
adc
and
jp
adc
adc
int
scas
push
mov
popa
mov
in
jg
aas
add
jge
pop
movsb
or
adc
sub
mov
mov
jo
iret
mov
jecxz
and
inc
cmpsl
inc
adcl
cmc
pop
into
fwait
mov
xor
dec
mov
mov
decl
dec
lret
push
imul
push
ss
out
movsb
fisubs
not
dec
adc
loop,pn
pop
sbb
inc
jl
mov
test
inc
pop
adc
sarb
outsl
loop
cmpsl
stos
das
and
and
in
push
sub
lock
stos
fdivl
in
pop
popa
orl
pushf
inc
sbb
push
fidivrl
push
ret
cmp
ds
push
mov
fdivrl
add
mov
push
or
icebp
mov
nop
repnz
push
or
jb
add
jmp
push
lret
sbb
ds
inc
add
test
dec
loopne
mov
repnz
jae
mov
dec
bound
sub
mov
pop
cltd
mov
xlat
pop
xor
movsl
scas
jne
lcall
frstor
nop
mov
insb
popf
cwtl
inc
in
sahf
jns
xchg
xor
js
scas
js
mov
fcoml
mov
sbb
in
outsb
sbb
cmp
adc
adc
sub
mov
cmpsl
inc
pop
sub
add
sbb
cs
sub
cmpsl
add
in
inc
adc
imulb
mov
inc
xor
adc
cs
inc
aaa
sub
lahf
mov
push
lods
in
das
add
or
or
mov
dec
sbb
jmp
rolb
test
lret
jb
xor
pop
xor
mov
je
mov
pop
mov
sub
xchg
insl
cmp
loope
pop
je
or
sbb
jno
in
clc
int
sub
iret
push
idivb
fs
xor
sbb
roll
das
out
sub
xchg
sbb
adc
lcallw
clc
and
adcb
push
fs
aaa
sub
notb
loop
add
fildl
dec
sub
or
lock
add
mov
push
mov
inc
or
inc
lea
movsb
xchg
sbb
sub
xchg
popf
addl
mov
adc
dec
lret
gs
cltd
or
fidivs
jae
adc
inc
adc
mov
scas
mov
loope
test
pop
cmp
or
add
int
and
rorb
jmp
out
pop
shlb
and
adcl
insb
cld
adc
mov
jbe
not
jge
popf
clc
adc
xchg
add
dec
decb
or
add
pop
notl
stc
xor
lret
ljmp
arpl
std
push
sub
xor
mov
loopne
add
jg
sub
jp
xchg
in
aad
and
xor
xchg
decl
dec
or
mov
ljmp
test
nop
bound
sub
xor
dec
dec
pop
outsl
dec
clc
subl
lock
out
xor
jno
repz
jle
lcall
rcrb
sbb
cli
pop
xchg
fisubrs
scas
or
std
push
jo
xor
dec
fcompl
daa
add
cld
leave
pop
int3
adc
mov
mov
stc
xchg
xlat
ss
popf
mov
ljmp
inc
mov
pop
jnp
add
cld
jns
mov
or
mov
pop
imul
in
mov
outsl
popf
xor
sbb
into
inc
into
mov
sbb
faddl
clc
dec
cmp
xchg
jmp
push
adc
ds
in
jp
xor
cmp
cmc
or
test
jmp
ss
add
fisubrs
verr
inc
in
clc
out
lods
sub
mov
pop
movsl
scas
xor
popf
shll
cmp
lock
cmp
push
cmp
loopne
stos
pop
rcll
in
mov
shl
cmp
cmp
xor
sbb
cwtl
mov
adc
int
dec
ret
repnz
test
popf
mov
repz
jo
jo
add
cmp
test
xchg
fisubl
imul
out
push
imul
stos
stc
add
cmc
mov
mov
pushf
or
or
mov
in
popa
out
aam
int
mov
jnp
cli
mov
out
lret
fstps
mov
repnz
mov
test
mov
mov
add
jg
je
pop
inc
sbb
xchg
push
or
daa
nop
mov
sarb
xor
jmp
icebp
xchg
sub
xor
xchg
int3
sahf
fcmovnb
lods
loope
cmpsb
jbe
fldl
dec
fisttps
das
xlat
in
mov
iret
pop
cmp
cmp
add
stc
xchg
int3
pusha
jne
xlat
in
ret
scas
testl
movsb
jo
clc
fstl
aad
dec
cmc
std
in
loope
pop
xor
fdivs
jecxz
mov
inc
lds
xorl
push
inc
mov
inc
icebp
sbb
push
mov
xor
adc
lret
mov
into
int
movsl
gs
jne
dec
mov
int
pop
lret
inc
add
ss
addr16
jno
dec
call
adc
sti
scas
mov
mov
loopne
rcrb
ss
fldenv
pop
cltd
dec
outsl
std
cwtl
imul
pop
rcll
sbb
sbb
pop
jmp
jg
cmpsl
stos
pop
jo
push
mov
sbb
cmpsl
jns
mov
mov
in
rcr
cmp
adc
dec
xchg
fwait
xor
cmp
jge
push
les
aas
xor
inc
jae
inc
in
push
imulb
push
in
mov
sarb
roll
inc
jnp
mov
mov
sbb
imul
mov
xchg
cmpl
xlat
cmp
repnz
insb
outsl
push
cli
pop
add
jl
call
cmp
dec
loop
test
test
out
fildll
inc
shlb
cs
mov
push
adc
add
inc
push
inc
clc
push
push
sarl
icebp
icebp
sbb
in
sub
mov
inc
out
iret
int3
jnp
movsb
les
xchg
inc
sub
popf
sbb
inc
mov
mov
repnz
cwtl
ds
push
test
shll
xor
imul
imul
insb
xchg
mov
movsl
sub
jnp
pop
shrl
dec
enter
pop
sti
mov
sub
sti
xor
neg
add
and
test
andb
ds
das
push
scas
push
xchg
sub
enter
mov
shrb
sub
int3
inc
jl
sahf
lods
jmp
mov
wrmsr
sbb
outsl
arpl
push
push
dec
mov
loop
or
aam
inc
stos
sub
mov
xchg
dec
cmpsb
movsb
jnp
mov
mov
xor
js
jo
sbb
shrb
lcall
idivl
add
pop
dec
cmp
mov
fmuls
jae
mov
and
mov
dec
lods
lahf
lcall
les
je
cmp
add
inc
xor
jbe
or
and
cli
mov
sub
out
movsb
mov
inc
ficoms
add
dec
hlt
jmp
lock
jnp
lcall
rolb
mov
icebp
fmul
xor
daa
inc
sbb
in
imul
pop
lea
xor
pushf
inc
cli
xor
movsb
dec
sarb
push
vsqrtsd
out
lea
mov
add
push
or
pop
icebp
sti
mov
std
ss
sarl
and
jne
inc
xor
repz
ss
adc
dec
stos
xchg
jmp
push
sub
cwtl
jbe
jae
mov
dec
in
mov
push
mov
fs
in
fisttpl
add
jge
das
notb
and
lds
inc
rcll
dec
mov
pmaddwd
xchg
nop
mov
xchg
arpl
push
and
jb
sbb
fsub
fisubrl
cmp
movsw
push
inc
inc
jo
xor
call
lods
aad
inc
fbld
add
icebp
insl
clc
adc
and
sub
subl
lea
lret
jo
nop
pop
mov
das
in
mov
out
jmp
jnp
stos
sub
mov
adc
js
repnz
xor
cmp
fsubr
sbb
mov
push
mov
sbb
shlb
out
jle
fnstsw
xor
sbb
xchg
lcall
jg
jnp
sti
in
iret
push
clc
xchg
pusha
jno
rep
dec
inc
mov
sbb
add
mov
mov
push
push
adcl
addr16
or
jge
je
mov
rorl
mov
shrl
ds
sahf
pop
inc
xor
push
outsb
std
notl
je
iret
mov
xchg
movsb
or
aas
stos
gs
fidivrl
or
outsl
xor
and
mov
xor
push
into
pop
pop
inc
mov
add
mov
jp
arpl
orb
ror
mov
and
push
cmpsl
call
cs
or
jae
or
dec
enter
dec
subl
push
fwait
cmp
sti
xchg
push
xlat
mov
es
inc
fildl
inc
pop
imul
sbb
or
clc
leave
call
cltd
mov
test
push
sbb
or
cmp
sub
fprem
leave
call
cltd
mov
test
push
sbb
or
cmp
sub
fdivr
leave
call
cltd
mov
test
push
sbb
or
mov
clc
ss
push
fsubr
mov
inc
addr16
ja
push
xor
cli
sbb
add
nop
pop
mov
push
roll
ja
add
and
push
dec
pusha
divl
adcb
daa
shll
daa
sarb
inc
loopne
lock
adc
inc
jmp
sti
pusha
sbb
or
shrl
mov
add
jmp
lret
loopne
dec
fwait
jmp
aas
add
mov
int3
stos
inc
lret
jnp
push
sbb
xchg
push
in
jno
inc
pop
cmp
mov
movsl
cmc
xor
stc
pop
cmp
test
jbe
ljmp
push
mov
jmp
add
xor
dec
stos
jle
adc
mov
ja
push
adc
inc
xlat
jl
orb
nop
call
pop
push
cmpl
sub
jae
and
andb
out
inc
in
lock
xchg
add
inc
gs
push
adc
stos
cmpsb
mov
mov
mov
sbb
inc
outsl
aad
cmp
mov
pop
xchg
adc
xor
lods
inc
xlat
push
pusha
sub
nop
shll
sarb
je
push
xchg
mov
mov
adc
inc
iret
inc
aam
mov
pushf
xor
rclb
push
js
and
cltd
or
fcoms
inc
mov
mov
or
sarl
inc
out
les
mov
pusha
divl
adcb
pop
mov
push
rolb
ja
add
and
push
pusha
divl
adcb
pop
mov
push
rolb
ja
add
lods
adc
mov
dec
pop
in
test
leave
outsl
and
shll
cmp
jbe
pop
and
enter
xchg
pop
cmpsl
loop
stc
ret
dec
mov
shrb
loopew
pop
dec
aad
add
mov
arpl
adc
shll
jp
dec
jb
flds
xchg
lret
lahf
imul
dec
imul
jge
pop
cmp
jne
xchg
dec
inc
repz
cmp
sub
fiaddl
ljmp
dec
jmp
or
xchg
xchg
imul
insb
repz
xor
sbb
push
leave
xchg
push
cli
icebp
pop
repnz
mov
adc
dec
jo
add
shll
dec
gs
hlt
jg
sbb
xor
cmpsl
fsubp
inc
jge
jp
ljmp
mov
jno
or
mov
push
outsl
pop
push
je
call
aaa
rep
test
mov
jnp
enter
and
xchg
mov
push
imul
in
mov
dec
les
or
and
xor
sbb
jb
sbb
into
lea
sub
xchg
jecxz
pop
test
rorl
movsb
sub
xor
push
dec
ret
mov
sbb
pop
out
pop
add
jg
es
jmp
lods
xor
pop
mov
aam
pop
lret
out
jno
xchg
mov
adcl
sete
in
or
mov
scas
aaa
aaa
push
inc
push
or
mov
dec
call
mov
repz
mov
fucomi
pop
or
stos
xorl
testl
std
bound
jnp
in
dec
pop
fldcw
scas
rclb
sbb
sbb
xchg
insl
dec
pop
dec
sub
inc
sbbl
daa
mov
mov
ficoml
inc
stos
aad
fsubrp
cmpsb
jl
pop
roll
scas
mov
gs
push
lds
inc
imul
mov
icebp
aad
mov
cmp
inc
dec
sti
sahf
mov
xchg
pusha
inc
mov
sub
or
cmpsl
sbb
outsb
pop
jo
inc
sub
pop
pushf
add
sub
sahf
jmp
dec
xchg
push
xchg
jnp
pop
jmp
mov
pop
mov
inc
mov
sbbb
in
sbb
or
shlb
cmp
mov
loop
adc
jmp
xchg
popf
cltd
dec
and
xchg
movsb
cmp
das
sub
push
push
dec
xchg
pushl
dec
jo
outsb
loope
push
fisttpll
pop
mul
push
repz
out
fsubs
test
int3
lods
cmp
out
cmp
push
xchg
roll
cld
js
loope
cmpsl
or
jb
xchg
jne
xor
andl
add
imul
icebp
fsubl
jge
aaa
xor
xchg
sbb
dec
mov
rcrl
mov
ret
inc
cmp
sbb
push
mov
cld
cmp
and
gs
imul
and
inc
enter
mov
pop
pushf
push
les
mov
pusha
inc
ds
pop
cld
pop
jmp
jmp
shlb
jnp
pop
mov
imul
lret
jp
inc
imul
adc
jno
push
loopne
stos
call
rclb
fucom
cltd
and
xor
stos
pop
lods
mov
jno
xchg
xchg
mov
cmp
aas
xor
jnp
mov
ljmp
dec
sbb
mov
int3
push
cmp
pusha
cmp
mov
adc
lcall
cld
flds
sub
mov
xor
ret
icebp
pop
or
sbb
cmpsl
jo
in
adc
daa
test
or
pop
imul
push
add
enter
jmp
xchg
rcrl
xchg
jbe
sbb
in
inc
pop
jnp
mov
ss
pop
push
inc
sahf
push
fistl
add
push
in
stos
push
enter
or
jb
push
jle
in
dec
xchg
into
popa
rolb
add
pop
push
push
add
test
xchg
mov
pop
mov
or
sub
mov
mov
fsub
dec
sbb
inc
inc
int
mov
lcall
movsb
add
mov
sbb
sti
dec
cmp
mov
in
fldt
ds
jecxz
xchg
adc
int3
insl
dec
sub
add
push
cltd
push
lret
mov
repnz
popf
xchg
dec
popa
push
test
stos
loopne
popa
and
pushf
cltd
adc
jmp
pop
repnz
xchg
pop
adc
sub
fnsave
xchg
mov
xor
jbe
mov
int3
dec
and
mov
mov
mov
lahf
mov
push
cmpsb
cmp
push
idivb
jmp
decb
mov
icebp
adc
gs
mov
cmp
clc
inc
and
movsl
test
stos
fmul
xor
mov
fstps
je
sub
push
loopne
je
xor
fsts
jp
jl
mov
cmp
pop
cmp
aas
add
cmp
push
cli
ficomps
in
scas
pop
push
and
ljmp
popl
popa
neg
lea
mov
dec
mov
insl
fnstcw
mov
shl
xor
jnp
push
add
mov
lock
mov
mov
mov
es
add
lahf
mov
mov
xor
jae
pop
ja
je
ds
and
mov
in
pop
outsb
push
mov
aam
cmpsl
xor
push
push
sbb
add
lods
inc
xor
push
or
sbb
xlat
xor
js
fcomps
jmp
es
je
cmp
leave
mov
rclb
or
rcrb
shr
xor
es
push
out
inc
adc
dec
jmp
pop
aas
subl
gs
or
int
lahf
push
and
aam
sbb
sbbb
mov
cld
adcb
sbb
paddsb
imul
leave
sub
nop
pop
add
rorb
int
xor
inc
out
out
lock
nop
pop
mov
mov
lock
stos
in
ss
cmp
subb
cmpsb
lods
mov
mov
repnz
aam
add
jle
and
test
mov
pop
ftst
loop
jno
and
scas
and
sbb
popa
fimuls
mov
gs
push
jno
divb
xor
call
stos
pop
mov
daa
jge
inc
sbb
fdiv
cmp
mov
ror
lahf
push
cmpsl
sub
xchg
lcall
mov
lret
cli
in
mov
movsb
or
addb
sbb
cltd
inc
pop
cmp
and
push
mov
lock
neg
or
fisubl
mov
sub
and
icebp
fstp
xchg
int
lods
enter
pop
ret
xor
repnz
cmpsb
test
sbb
cltd
cmp
in
lcall
mov
sub
hlt
mov
mov
jne
mov
xchg
mov
mov
sbb
out
adc
idiv
inc
mov
nop
push
pushf
ljmp
sti
in
cmp
movsl
jmp
xchg
or
ret
mov
mov
xor
aaa
or
aad
sub
mov
push
popa
insl
les
out
cmpsb
mov
push
push
popf
data16
lock
gs
loopne
repnz
dec
stc
aas
pop
and
fs
pushaw
insl
je
adc
push
or
add
fs
icebp
lds
pop
sbb
sub
jp
shll
xor
push
scas
mov
dec
daa
insl
fistl
cmp
cli
out
dec
sub
add
icebp
call
cltd
testl
dec
and
repz
jb
fsts
pushf
ljmp
filds
add
lea
lret
xor
mov
xor
sbb
dec
jne
or
in
fwait
mov
pusha
out
lahf
es
fwait
sbb
mov
sbb
push
sbb
out
adc
clc
icebp
jae
adc
adc
pop
add
adc
mov
nop
xchg
hlt
movsl
dec
jns
mov
ret
lret
sbb
mov
pop
icebp
add
icebp
jmp
adc
aam
pop
dec
sub
clc
es
mov
adc
lods
loope
mov
pop
loop
notl
mov
iret
cmp
out
xchg
jle
sub
shrb
sbb
outsl
adc
adc
js
in
mov
mov
lcall
xor
sub
and
cmc
jge
pusha
xchg
into
cmpb
out
pop
mov
mov
jns
jge
repnz
xchg
pop
ljmp
cmpsb
inc
xchg
pushf
cmp
js
inc
dec
pop
loope
lahf
stc
loop
pminub
ss
pop
hlt
and
jge
fisubs
and
mov
in
repnz
push
push
add
inc
lret
ja
inc
or
sti
outsl
mov
add
lds
mov
outsl
adc
pushf
dec
push
xchg
rcr
lret
cmp
sbb
jb
insl
add
jge
xchg
and
fistps
xorl
add
std
loopne
push
data16
mov
mov
sub
lods
stos
imul
jg
movd
jno
mov
jecxz
add
adc
aas
mov
jae,pt
popf
mov
sub
pop
mov
dec
jecxz
sub
fnsave
rorl
je
int
cmpb
or
lret
mov
push
fiaddl
in
pop
inc
lods
loope
andb
repz
movsl
pop
mov
cltd
xchg
mov
pop
dec
adc
into
test
xlat
push
xchg
mov
mov
les
ds
push
pop
notb
scas
xor
das
cs
btr
pop
add
pop
or
aad
push
xor
pop
adc
enter
psubw
iret
daa
cli
fsubs
and
mov
push
cmp
xchg
imul
ss
jecxz
jne
cmp
jg
imul
cwtl
cs
lahf
test
cltd
movsb
sub
pop
jns
jle
mov
sbb
xchg
enter
test
popf
sub
pcmpgtw
fdivs
jmp
sahf
fwait
ds
loop
aaa
fidivrs
push
cmp
push
roll
xor
in
mov
cmpl
jne
loopne
leave
shll
mov
jo
xchg
stos
js
mov
addb
xchg
test
andb
sbb
hlt
adc
xorb
sbb
cmp
inc
push
mov
xchg
dec
aam
push
sub
int
push
pusha
js
fcom
ret
push
ret
mov
pushf
lods
jl
repz
adc
adc
ja
or
inc
bound
cs
cmpsl
inc
cmp
aad
call
and
repnz
push
mov
dec
gs
dec
add
mov
pop
fsts
into
movsl
jmp
bound
pop
and
dec
xor
dec
or
enter
mov
mov
or
out
pop
adc
fimull
dec
decl
in
and
mov
lahf
into
cld
xorb
and
and
iret
or
sub
xchg
shlb
cmp
popf
int3
aad
mov
pop
push
mov
cmp
sbb
shlb
or
lahf
movsb
clc
lods
mulb
aad
or
pop
xchg
mov
jae
cwtl
mov
imul
mov
push
aaa
mov
inc
or
adc
fidivrl
jle
xchg
push
test
pop
push
loope
cmp
pop
leave
fcmovnb
dec
sub
inc
in
jg
adc
adc
in
dec
inc
jbe
cli
dec
pusha
imul
and
cld
scas
outsl
orb
insl
sbb
jbe
jp
push
fwait
imul
push
push
out
imul
push
shlb
inc
xlat
lds
or
das
cltd
dec
hlt
dec
sbb
or
dec
push
jge
jb
xchg
rclb
inc
pop
or
pop
das
loopne
inc
pop
push
cmc
push
jns
leave
sbb
rolb
dec
clc
test
dec
lahf
test
add
push
add
shrb
dec
xchg
andl
aas
inc
adc
xchg
ss
mov
fsubl
popa
push
pop
xchg
fildll
push
push
pop
rcl
adc
pushf
push
cmpsl
adc
std
sbb
mov
mov
adc
lea
mov
jp
jnp
push
add
fwait
jecxz
aas
pop
sbb
insb
xchg
sub
inc
push
cmpsl
jns
push
lret
enter
xlat
jp
shrb
loop
rolb
rolb
and
add
outsl
dec
xchg
movsb
inc
hlt
cmp
xor
sub
inc
js
arpl
pop
gs
and
out
loopne
jmp
cwtl
insl
test
fsubr
xchg
jg
add
jae
add
aas
cmp
aad
cmp
xor
cmpsb
pop
mov
dec
or
bound
jle
jnp
jge
cmp
jecxz
or
bound
scas
or
dec
jge
fnsave
stos
push
ja
pushf
clc
push
and
repz
add
adc
pop
add
lods
sbb
lea
add
pop
adc
std
dec
lret
xor
ja
pop
mov
pop
push
mov
clc
ds
test
in
push
sub
mov
mov
xor
adc
cwtl
mov
push
sbb
fbstp
lret
add
mov
lods
xor
sub
mov
jg
or
cmp
arpl
mov
jle
push
out
sahf
jne
inc
sti
out
cmc
bound
and
mov
add
fadd
call
pop
vmwrite
jb
add
inc
push
cmpsl
adc
pop
stos
sub
scas
icebp
push
xlat
or
out
stc
cmpsb
xchg
sbb
imul
ds
clc
cltd
mov
arpl
add
fldt
mov
mov
scas
test
dec
les
cmp
adc
mov
insb
ret
cmp
inc
inc
enter
jb
pop
pop
jmp
data16
outsl
xchg
and
sub
cmc
sahf
xchg
in
jae
xor
repz
cmp
leave
cmp
xorb
ds
xor
shll
inc
and
adc
mov
jns
subl
or
adc
insb
fidivl
dec
add
xchg
hlt
lods
inc
mov
push
testb
es
mov
push
push
rorb
sbbl
ljmp
test
and
mov
add
push
add
adc
or
jne
add
cmc
jg
aad
mov
mov
mov
jge
pop
mov
mov
ret
pop
es
jmp
sahf
push
cld
mov
movsb
in
inc
outsb
fnstcw
jbe
xchg
jmp
xlat
lock
ljmp
jnp
fwait
sti
fs
mov
call
xchg
mov
aam
jg
leave
faddl
mov
lret
lods
int3
rol
xor
xor
cmpsl
dec
clc
mov
adc
xchg
stos
jbe
cwtl
xchg
pop
lret
bound
rclb
or
filds
lcall
scas
mov
out
call
daa
pusha
stos
dec
js
pop
testb
lcall
mov
out
mov
xchg
nop
out
movsb
dec
inc
roll
std
popf
aad
pop
sub
push
cmpsb
add
sbb
loope
in
xor
cmp
sti
imul
cmc
sub
lods
push
cmp
lret
xchg
xor
mov
sti
xor
sbbl
rcrb
jno
push
lret
xchg
or
xchg
cli
pop
stos
ret
fcomi
lods
fstpt
ja
xor
rcrl
stc
aaa
xor
movlps
pop
mov
jb
outsb
push
cmp
push
mov
lret
std
cmp
in
lods
arpl
xchg
jae
lods
cmpsl
mov
xchg
push
jl
mov
lock
cmp
adc
and
inc
pop
cltd
pop
test
xor
mov
mov
and
out
pushf
pop
lret
push
rcrb
lods
movl
xchg
push
lret
insb
sbb
sbb
fcmovu
lret
loopne
inc
pop
pop
mov
fildl
adc
and
cmp
push
ss
fcoms
jp
stc
push
sub
shll
es
adcb
sub
pusha
popl
inc
mov
lret
pop
dec
mov
add
movsb
aam
not
sbb
push
and
sbb
jo
aaa
vsqrtsd
jne
xor
addl
add
repz
adc
sti
pop
jmp
cld
icebp
jl
dec
stos
jp
fidivrs
jae
jmp
push
mov
push
mov
push
scas
push
push
sbb
arpl
lods
lret
add
xchg
sbb
cmp
mov
nop
sub
cwtl
push
sub
mov
sbb
sar
mov
idivb
leave
cmpsl
and
incb
lcall
cmp
push
call
add
xor
outsl
orb
sbb
aam
push
mov
jle
fiaddl
push
sbb
mov
fiadds
cmp
add
jp
add
leave
daa
dec
int
jl
fsubrs
lock
test
popa
jns
daa
jg
dec
sub
aam
adc
push
cli
hlt
sahf
lock
shrb
xor
rcrb
nop
xor
add
sub
push
and
pop
nop
and
aad
shll
pop
and
jno
out
ss
cmp
std
sbb
xor
jns
inc
bound
dec
roll
jmp
lea
add
test
cmp
lret
cmpl
cmp
enter
xor
and
jmp
lods
pop
scas
in
mov
push
push
and
cli
mov
sbb
dec
sbb
sbb
jecxz
mov
xchg
lds
or
jno
into
cwtl
ficomps
or
jne
push
add
adc
nop
mov
hlt
cltd
push
or
rcll
pop
loop,pt
and
enter
jmp
test
je
aaa
arpl
and
add
movsl
fnstsw
add
or
inc
aad
xchg
push
test
sti
lods
xchg
dec
nop
gs
stos
repz
adc
das
sbb
jmp
aam
ljmp
mov
and
pushf
mov
cs
mov
dec
aam
adc
jnp
and
xchg
xchg
and
loope
subl
cwtl
xchg
or
xor
sbb
subl
mov
push
xor
rcrl
dec
xor
loop
popf
adcl
mov
loop
mov
inc
sbb
cmp
jae
sarl
pop
mov
mov
add
test
sbb
pop
push
jnp
imul
scas
dec
sahf
loop
mov
pushf
loope
fisubrs
loopne
addr16
les
jge
xchg
scas
pop
or
push
loope
call
das
pop
in
xchg
daa
or
jo
inc
shll
test
xor
cmp
cli
orl
insl
cmp
mov
je
or
xchg
adc
rcrb
add
out
mov
sahf
jge
jb
cld
xchg
xor
or
movsl
pop
stc
push
and
cmp
and
movsb
adc
mov
movsl
inc
clc
sub
mov
and
jl
inc
and
test
adc
in
xor
filds
or
sahf
cmp
out
js
leave
add
lahf
jbe
jl
add
in
push
rorb
mov
xchg
sub
push
add
rol
lcall
mov
outsb
xor
aad
add
xor
rcrl
cmp
scas
subl
xchg
loope
adc
stos
test
sub
pop
lock
push
addr16
lret
test
sub
enterw
sahf
nop
pop
xchg
pushf
xor
bound
pop
shlb
outsl
dec
and
sbb
cmpsb
and
and
fisubrl
mov
movsb
xor
cmp
add
add
popa
push
pop
jmp
lret
push
mov
iret
mov
mov
mov
sbb
imull
pop
dec
repz
inc
scas
xchg
sbbl
inc
xchg
dec
ss
stc
arpl
xchg
adc
jbe
inc
mov
or
cld
and
rorb
mov
add
imul
repnz
mov
int3
adc
lret
cli
loope
push
bound
fdivp
push
lea
pop
jge
loop
cmp
inc
jnp
dec
xchg
sbb
mov
stos
jp
insb
es
xor
pop
inc
ljmp
fcmovnbe
out
push
push
sbb
and
pop
jmp
movsb
rorl
add
imul
inc
inc
or
xor
shll
mov
xchg
xlat
push
pusha
divl
adcb
pop
mov
push
rolb
ja
add
and
push
pusha
divl
adcb
pop
mov
push
rolb
ja
add
and
xor
pusha
divl
or
pop
mov
push
rolb
push
icebp
add
and
push
pusha
ja
out
call
mov
mov
pop
mov
dec
mov
stos
jl
mov
mov
fcompl
in
sub
cmp
mov
fwait
insb
stos
jl
or
sbb
sub
cmp
fmull
fcompl
in
sub
cmp
mov
fwait
je
fs
xor
cmp
aad
incl
pop
test
mov
repz
lock
jmp
and
iret
or
or
sti
sbb
daa
dec
sub
je
lea
adc
rolb
and
out
repz
mov
jnp
sub
cmp
mov
mov
mov
xlat
iret
pushf
cwtl
push
cmpsl
in
cld
jp
lret
and
aam
jno
mov
push
dec
je
lcall
sbb
stos
inc
cmp
push
add
jae
pushf
or
xchg
mov
loopew
pushf
inc
repz
add
popa
adc
lods
int3
dec
sbb
in
xlat
or
je
pushf
push
push
push
sub
or
add
fcomp
and
xor
push
or
mov
scas
lods
jle
jnp
mov
insb
stos
jl
sbb
or
sub
and
sbb
sub
cmp
mov
dec
or
or
jg
jp
popa
mov
int3
addr16
lahf
inc
cwtl
push
mov
stc
and
jmp
cmp
in
pusha
scas
sbb
sub
outsl
sti
dec
mov
push
mov
xor
push
fcoms
add
adc
inc
cmpsl
sbb
sub
cmp
int3
or
sbb
sub
cmp
mov
fwait
insb
stos
jl
or
sbb
sub
cmp
int3
or
sbb
sub
cmp
mov
mov
pop
punpckhdq
jle
cs
pushf
filds
jo
jge
gs
rorb
ja
hlt
pop
cmp
inc
cld
jle
sub
stos
mov
insb
fisubl
pop
add
popa
scas
repnz
xlat
aam
sub
jb
and
jp
jmp
xchg
mov
jg
inc
notl
lock
cmp
ror
notb
lods
lret
dec
adc
sti
or
jge
hlt
jge
xor
ret
add
mov
xor
xchg
xchg
aaa
ja
inc
shrb
movsl
pop
fiaddl
inc
js
jl
sbbl
pop
movsb
dec
push
sahf
push
fistps
push
sub
jne
mov
sbb
jge
inc
mov
dec
arpl
adc
jb
adc
xor
or
daa
js
imul
pop
jo
pop
neg
nop
js
imulb
push
xor
pop
stc
adc
fs
lahf
push
imul
sbb
lods
hlt
inc
push
xchg
pop
arpl
lcall
cld
xor
bnd
movsb
ljmp
repnz
mov
mov
lea
inc
xchg
cmp
mov
add
add
test
cmp
jns
int3
pop
cmp
or
dec
rcll
es
fistps
mov
loopne
cli
mov
fwait
jmp
cmp
into
push
dec
jp
lret
addr16
jge
or
push
sub
out
pop
in
jg
xlat
jecxz
das
addr16
test
mov
fnsave
pop
cs
lds
push
xor
stos
adc
aam
inc
jbe
sub
mov
push
fiadds
inc
cmp
xchg
es
and
xor
push
cwtl
in
pop
mov
mov
outsl
imul
ds
pop
mov
mov
cmc
sub
cmpsl
inc
mov
filds
xchg
shrb
cmp
mov
fcmovnbe
push
in
aad
pop
adc
fisubl
adc
hlt
mov
scas
dec
adc
add
cmp
pop
andb
inc
loopne
imul
dec
xchg
imul
mov
push
fnstcw
aas
enter
imul
lret
pop
int3
or
cltd
pop
jmp
movsb
mov
push
cmp
cmpl
mov
adc
pop
xor
adc
notl
or
sti
add
fsubrl
repnz
push
cmc
addr16
shlb
xor
jo
enter
cld
shll
movsb
mov
push
dec
cmp
cmp
inc
js
mov
aam
in
dec
fistpl
inc
mov
nop
jle
sub
mov
inc
lea
adc
pop
inc
cmp
push
mov
ljmp
add
mov
inc
jge
sbb
sti
sbbl
xor
aas
jl
jae
call
ret
cld
sub
jnp
mov
movsl
sbb
out
dec
fmuls
dec
inc
mov
xlat
mov
into
fwait
xor
jb
in
push
xchg
repnz
or
jge
data16
lock
ret
pop
mov
jne
outsl
xchg
sbb
xchg
add
sbb
push
pop
cmpsb
xchg
mov
jg
xchg
inc
cwtl
xchg
outsl
mov
icebp
lods
loop
ljmp
pop
push
adc
cmp
shrb
fildll
cmp
in
push
outsb
sbb
mov
or
mov
xchg
xchg
lock
cmpsb
dec
jns
sbb
int
imul
and
jb
ret
cltd
mov
xlat
es
jae
mov
push
xchg
mov
mov
gs
les
and
jo
fidivs
hlt
xchg
in
mov
push
mov
cmp
jb
test
mov
std
loop
repz
sbb
iret
mov
pop
inc
das
cmpsl
stos
popa
add
cmp
inc
fwait
or
cld
nop
arpl
lea
aad
xchg
aad
jo
inc
adc
adc
inc
adc
loopne
mov
mov
iret
dec
add
pop
movsl
pop
mov
adc
mov
ss
ss
mov
insl
push
xchg
data16
out
dec
pop
pop
clc
xchg
dec
out
sarb
stos
push
out
jl
enter
stc
jnp
movsb
xchg
sbb
mov
xor
into
cltd
lret
popa
push
adc
sahf
and
cli
cmp
inc
cs
jne
sahf
dec
fs
adc
or
cmp
stos
inc
shll
mov
pushf
jns
std
mov
pop
jbe
lods
and
dec
lea
out
mov
imul
int3
dec
orb
jp
outsl
and
into
out
mov
xchg
xchg
xor
in
aad
adc
dec
pusha
iret
push
jb
fdivl
sub
cltd
fidivrs
cmp
mov
shl
or
jns
fidivrl
cmc
bound
push
ljmp
adc
test
fisttpl
xchg
lahf
xchg
insl
xor
jecxz
cmp
mov
sub
inc
or
mov
push
adc
mov
inc
shlb
int3
enter
call
mov
lock
push
nop
pop
std
cmpsb
pop
xchg
je
fsubs
xchg
mov
jg
cwtl
jno
and
or
imul
shlb
dec
push
xor
cmp
add
and
inc
mov
sbb
and
mov
test
push
cmp
test
mov
in
insb
leave
out
xchg
ljmp
test
inc
std
insl
pop
mov
cs
xchg
insb
mov
les
cmp
mov
das
nop
mov
dec
add
or
xor
out
inc
out
sbb
mov
ret
push
ss
cmpsl
or
inc
fdivrs
xorl
cwtl
xchg
std
pop
xor
xor
push
sbb
mov
cmp
mov
xchg
test
in
or
cmp
jne
leave
out
fidivs
xchg
das
push
and
mov
cmpsb
mov
push
insb
popfw
adcb
fstp
hlt
or
mov
mov
and
jb
mov
or
enter
inc
mov
push
mov
insb
cs
icebp
fldt
add
cwtl
dec
mov
pop
pushf
fistpll
dec
iret
repnz
jb
sbb
in
adc
cli
mov
lods
add
cmp
inc
jnp
jno
mov
fstpl
sahf
out
pop
lcall
jge
cmpsb
imul
popa
xchg
nop
inc
in
icebp
enter
xchg
pop
push
popa
gs
ja
cmp
in
sbb
std
sub
xchg
xor
fcompl
int3
inc
popa
rclb
call
xchg
pop
jb
jg
rcl
std
jmp
scas
jp
xor
pop
jmp
pop
mov
wbinvd
add
xchg
mov
int3
dec
push
cmpsl
or
lods
leave
subb
lret
sbb
lock
mov
test
ds
mov
cmp
push
enter
xchg
gs
scas
xor
ret
jo
jo
aad
and
dec
xor
mov
aad
xlat
out
leave
inc
shl
fistps
push
rolb
sub
mov
mov
roll
lahf
cmp
icebp
imul
jg
mov
cli
jp
push
lock
je
mov
aas
iret
pop
xor
mov
xchg
xchg
lret
ss
out
aas
jge
lahf
push
out
mov
scas
call
into
repnz
ds
adc
notl
push
push
fsubs
loop
test
and
dec
popa
mov
pop
outsl
int3
push
pop
mov
mov
push
rcrl
jnp
lods
cmp
fsubs
clc
frstor
pop
dec
xor
cmp
outsl
add
jmp
sahf
jo
pop
inc
xchg
shll
mov
cwtl
add
sub
adc
cmp
das
fisubrs
leave
lods
ja
push
fbld
mov
sbb
and
in
aaa
dec
mov
movsb
in
scas
dec
cli
hlt
pop
cmpl
cmp
fimull
mov
call
jb
sbb
dec
sub
mov
push
rcl
aas
jmp
cmp
out
fsubs
lock
stc
lahf
orl
dec
int
enter
adc
aam
ret
jmp
mov
lcall
iret
push
divl
notl
mov
cmp
sbb
and
fcmovu
notl
inc
add
pop
leave
adc
jo
xor
ja
jl
sbb
dec
scas
mov
jl
mov
stos
ficompl
jno
stos
movsl
jb
aas
xchg
lahf
ret
xor
into
xor
test
rcrb
cmp
xor
jp
jnp
sub
repnz
iret
mov
int
testl
lods
adc
dec
mov
xlat
das
fucomi
daa
and
or
in
pop
mov
std
fwait
dec
fwait
rolb
pop
sbbl
pop
xchg
outsb
mov
call
repz
inc
xlat
inc
mov
sarb
cmp
lret
and
xlat
pop
and
mov
cs
in
pop
jp
jb
add
orb
jge
sarb
jbe
add
cmp
jo
frstor
mov
cmp
sub
daa
fcomps
dec
pop
mov
pop
mov
xor
mov
or
inc
faddl
sub
push
push
movsb
lods
pop
mov
jg
mov
cmp
dec
cmpsl
fdivrs
lods
nop
dec
shrl
ds
and
out
lods
lret
mov
xor
daa
mov
sub
insl
aas
mov
out
lods
fdivl
popa
cld
ret
inc
sbbl
into
mov
imul
push
sbb
xchg
dec
ret
mov
inc
adc
in
jnp
lahf
loope
jnp
dec
pop
inc
cld
pop
ss
mov
nop
mov
sahf
data16
mov
ds
jns
push
ja
dec
je
mov
scas
stos
or
out
loope
adc
mov
add
in
scas
cmp
push
rcl
shlb
int
call
std
fldenv
mov
popf
movsl
in
push
jnp
pop
and
ja
adc
rcrl
test
sub
sbb
mov
xor
pop
mov
or
mov
shll
pop
sbbl
push
inc
sub
out
test
mov
fwait
xor
sbb
lret
dec
lods
jle
cli
xchg
xor
pop
pop
fnstcw
pop
xchg
fnsetpm(287
mov
repz
fiaddl
cmp
jns
js
aam
popf
repnz
inc
mov
mov
xchg
scas
adc
incb
mov
fcompl
stos
enter
sbb
fcoms
add
test
leave
push
shll
and
and
stos
sarb
mov
inc
enter
jne
sahf
adc
or
push
inc
movsl
xlat
sub
dec
push
out
jg
fadd
inc
scas
js
rcrb
int3
fsubrs
test
std
dec
ret
ss
aam
xor
mov
dec
fbstp
fbld
xlat
fstpt
fcoml
pop
xor
pop
hlt
or
scas
and
cmp
jl
lret
arpl
push
xchg
xor
sub
popl
xor
fidivrl
push
movsl
jge
push
arpl
inc
inc
hlt
or
imul
sbb
pop
inc
xchg
scas
insb
mov
pop
call
stc
sbb
mov
mulb
fildl
ret
sarl
out
jbe
mov
sbbb
stc
add
rclb
cmc
insl
sub
mov
push
loope
mov
sub
scas
loopne
mov
xor
les
scas
adc
mov
jmp
pushf
xchg
fdecstp
jecxz
or
xor
test
xchg
test
movsl
sub
push
xor
ja
clc
or
outsl
divl
fdivrs
nop
fstp
add
pop
adc
sub
ret
lods
inc
bound
aam
sub
mov
fisttpl
adc
pushf
pop
in
sub
fwait
pop
jp
mov
mov
dec
mov
rorb
adc
push
sub
or
xor
dec
cmp
sbb
ret
pop
test
cmp
cmp
jae
adc
loope
mov
popa
lea
add
outsb
sbb
mov
fidivrs
xchg
push
push
sarb
fidivl
dec
mov
repnz
movsb
push
sub
cmp
inc
add
mov
xor
cmp
dec
insl
sarl
aam
pushf
mov
pop
stos
sbb
in
push
addr16
ret
mov
jnp
push
xchg
fadds
testl
mov
stc
inc
or
mov
xor
out
lcall
jp
loop
xlat
cmp
aad
xor
scas
and
push
sbb
push
and
inc
pop
dec
adc
mov
stc
mulb
mov
jns
outsl
lret
mov
jmp
icebp
sub
shl
jae
jl
xchg
es
push
add
or
lock
scas
mov
ror
and
cmp
cwtl
xchg
mov
fdivl
xchg
jb
hlt
sahf
lahf
mov
cli
jbe
push
cltd
bound
out
addl
jp
ja
in
xlat
inc
out
cld
outsb
pop
push
cmp
xor
push
or
jmp
fdivl
pop
fstps
movsb
lds
sbb
push
jbe
cli
xor
mov
sbb
pusha
inc
stc
jo
and
pop
cli
lcall
fimuls
mov
pop
push
nop
fwait
test
sub
adc
ljmp
push
int
xchg
mov
insb
dec
push
ret
cwtl
cmpsl
mov
mov
pop
inc
fidivs
scas
inc
mov
movl
imul
adc
inc
lods
push
scas
sub
popf
and
ljmp
adc
lret
lea
or
jbe
fcmovnb
mov
dec
aas
loope
das
dec
aad
and
adc
add
pusha
dec
hlt
sub
cmp
push
sub
adc
jno
mov
fldenv
inc
arpl
inc
xlat
cmpsl
bound
lahf
ljmp
mov
clc
popa
jo
push
mov
orl
pop
enter
lock
mov
mov
xor
add
mov
imul
dec
scas
mov
xchg
add
into
xchg
das
inc
sbb
scas
xchg
in
mov
lock
les
imul
mov
pusha
jne
cmp
fsubl
mov
std
sbb
jl
xchg
dec
jbe
inc
push
cltd
loopne
mov
aam
imul
popa
inc
xlat
testb
cmpsl
push
xchg
xchg
scas
xchg
test
scas
negl
inc
lods
ficomps
jecxz
sarl
call
cmp
mov
dec
add
lods
dec
cli
sbb
push
aas
insb
pop
pop
nop
sub
es
push
cli
cmp
aad
int
lahf
jne
cltd
les
mov
mov
fdivrl
mov
packuswb
hlt
iret
inc
xor
jae
mov
fstpl
xor
adc
add
pop
pop
loope
aad
test
xor
les
xorl
movsl
or
mov
pushf
jo
inc
arpl
jle
sbb
scas
xor
jns
mov
das
inc
fsubl
mov
inc
mov
bnd
rolb
aam
and
aaa
sbb
or
stc
jnp
inc
stos
adc
pop
add
cmp
rcrl
xor
sub
in
dec
push
cmp
mulb
or
movsb
push
pop
movsl
jecxz
ss
or
mov
cmpsl
js
mov
xchg
int
cmp
les
sbb
xchg
sbb
lods
dec
pop
inc
mov
push
bound
imul
out
pop
xor
xor
inc
xchg
sti
jae
xchg
xor
jne
dec
insb
mov
add
jp
fdivs
je
cltd
int
movsb
mov
cmpsl
adc
cmp
adc
addb
sub
mov
mov
insl
js
push
rol
push
or
xchg
xchg
jg
mov
pop
fsts
sbb
inc
mov
shrl
push
and
xor
fildll
aaa
loop
xchg
loope
xlat
out
stos
xor
lahf
outsb
sti
pop
pop
mov
sub
mov
negb
in
ljmp
mov
inc
hlt
int
mov
xchg
sbb
mov
mov
xchg
std
pop
pusha
mov
sub
or
xor
lods
jmp
push
aaa
sbb
shl
loop
outsb
outsl
mov
fs
pop
jb
loope
mov
xor
dec
jb
lcall
dec
movsb
scas
lret
cmp
mov
cmp
aas
push
push
divl
fldcw
push
out
adc
outsb
jp
pop
sub
lods
adc
fsubs
shr
popa
cltd
jbe
push
call
fs
je
inc
sbb
sbb
and
and
sbb
push
ss
pop
mov
mov
out
cld
push
inc
jbe
fnstenv
stc
movsl
mov
scas
xlat
sbb
xor
xchg
stos
dec
mul
and
xchg
mov
cmp
or
fwait
add
clc
inc
xchg
test
dec
sub
jecxz
std
xchg
rcll
mov
iret
rcr
push
ret
mov
xchg
and
call
movsb
dec
cmp
sbb
imul
xor
insb
out
mov
gs
lock
in
pop
mov
fs
sub
xchg
and
inc
lock
int
shrl
lock
xchg
pop
test
and
popf
xlat
fmull
mov
push
jbe
and
mov
xor
adc
adc
cmc
ror
aam
xchg
xchg
inc
dec
lods
adc
popf
rcrb
lret
add
inc
inc
pop
ret
push
aad
inc
push
and
je
out
fldt
jp
es
xchg
xor
mov
mov
cli
dec
into
fucom
daa
and
mov
push
jle
test
das
in
adc
or
cmc
mov
jo
gs
ds
outsb
aam
sub
les
and
sarb
add
cmc
ret
mov
xor
dec
popf
push
clc
or
push
jnp
sub
lea
jecxz
and
sub
fmull
stc
mov
or
outsb
jae
mov
repz
rcl
sub
movsb
call
push
pop
ja
pop
adcb
ja
push
testl
lret
mov
cmp
xor
mov
and
xchg
xor
pop
push
mov
cmp
test
push
mov
iret
popa
mov
jb
cmp
test
push
xchg
jns
cmpsl
mov
adc
mov
mov
scas
xor
test
rcrl
or
ja
or
add
xchg
adc
mov
and
fistpll
xchg
or
scas
cli
fistl
jb
xchg
test
or
xor
push
sbbl
addr16
inc
adc
lret
pop
or
inc
pushf
push
into
jae
mov
and
and
or
rcrl
out
mov
call
inc
outsb
mov
repnz
inc
add
lea
xor
adc
in
pop
test
push
mov
in
lahf
or
mov
stos
xchg
fisubrs
mov
out
sub
xor
test
loopne
dec
sbb
push
insl
je
in
das
push
mov
adc
daa
add
fistps
je
xchg
fxch
mov
sbb
js
xchg
leave
cld
loop
mov
aam
adc
test
sbb
sub
mov
pusha
push
popa
lods
add
clc
call
andb
cmc
push
mov
lods
mov
jb
add
push
sub
test
dec
jnp
fsubrl
scas
imul
shll
into
insb
dec
xchg
aas
les
repnz
stos
icebp
add
xchg
dec
out
xlat
es
leave
cwtl
jg
movsl
lret
sub
jle
rcrb
or
pop
inc
mov
fwait
lds
inc
inc
xchg
sbb
fildll
lods
dec
popf
mov
dec
aad
sbb
jae
jmp
fidivrs
push
mov
bound
sub
or
out
cmp
in
or
mov
dec
test
stos
dec
pop
frstor
out
sbb
sub
mov
shlb
mov
icebp
sub
lock
add
mov
cltd
outsb
and
ja
aam
mov
imul
jae
scas
outsb
scas
in
mov
outsb
sbbb
cmp
xchg
and
sub
sub
rclb
pusha
out
in
jbe
fadds
inc
sub
cli
inc
dec
lods
jmp
dec
je
xor
je
xor
xchg
mov
dec
push
jge
cld
clc
pop
lds
and
jno
das
xchg
dec
jae
and
stos
adc
fneni(8087
popf
xacquire
push
cmp
stos
sub
sub
stos
sbb
push
add
int
xchg
testl
out
arpl
movsl
pop
inc
lcall
or
sbb
sub
cmp
int3
or
sbb
sub
cmp
mov
fwait
insb
stos
jl
or
sbb
sub
cmp
int3
or
sbb
sub
cmp
mov
fwait
insb
stos
jl
or
sbb
sub
cmp
int3
or
sbb
sub
cmp
mov
fwait
insl
stos
jl
push
lret
sbb
lods
imul
sub
dec
sti
ret
adc
push
xchg
inc
test
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lret
in
sti
fucomp
int
aad
ret
mov
insl
jnp
push
sbb
sub
sti
fucomp
int
mov
stos
lea
dec
or
fstpt
sub
sti
fucomp
int
mov
stos
lea
push
dec
sbb
inc
dec
outsl
inc
or
sti
mov
pushf
push
jp
dec
mov
push
mov
jecxz
repnz
cmpsb
push
das
iret
xchg
stos
inc
insl
cmpsl
mov
mov
fwait
push
int
xchg
into
xchg
test
in
or
insb
dec
cmpsb
pop
mov
sahf
mov
xor
cmc
popa
pop
sbbb
jnp
stos
mov
cmp
in
pop
loop
test
call
jmp
mov
adc
add
push
dec
sarb
sbb
adc
ret
mov
mov
sbb
lea
hlt
shrl
sub
cmp
jns
ss
mov
dec
dec
sub
or
std
lret
in
sti
fucomp
int
mov
stos
lea
dec
insl
jnp
imul
or
lcall
movsb
fwait
sar
lods
test
sbb
adc
sbb
pop
pop
insl
dec
mov
fldl
leave
ret
ljmp
jns
imul
pop
gs
push
js
pop
mov
mov
test
mov
stos
lea
dec
insl
jnp
imul
or
lret
in
sti
fucomp
int
mov
stos
lea
dec
insl
jnp
imul
or
out
movsb
outsw
les
push
jecxz
dec
sub
jp
js
push
mov
imul
or
jmp
and
sbb
loop
pop
sbb
pop
inc
and
js
sbb
in
pop
lods
in
ds
insb
and
or
and
cmpsl
popl
mov
cmp
pop
jo
xchg
aam
push
cmp
mov
sub
pop
fadd
or
push
xlat
ficompl
addb
dec
sbb
aam
int3
in
inc
push
mov
jbe
popa
cmp
jle
jle
pop
xor
call
ret
cli
or
push
sub
outsb
scas
test
pop
mov
fistl
and
lret
out
test
jb
lods
xchg
in
sbb
push
shll
shll
int
outsl
push
or
adc
js
in
in
cmc
jge
insb
mov
jecxz
and
mov
dec
int3
xor
int
mov
jg
lret
nop
cmp
inc
push
stos
nop
jl
in
xchg
mov
sub
inc
leave
andl
pop
pop
push
repnz
push
sbb
movsb
add
enter
mov
out
ss
pop
aad
les
mov
daa
ret
hlt
rorl
cmp
fsub
test
sbb
jbe
inc
fwait
int
shll
cltd
mov
and
out
cld
ret
fs
fisttps
cmp
cld
into
or
int
sub
mov
decb
xor
shlb
out
jne
add
inc
hlt
les
push
adc
std
pushf
cmc
fwait
shr
cli
addps
imul
lds
jnp
cmp
add
or
fs
gs
adc
mov
sub
js
test
icebp
out
adc
sbb
mov
and
jecxz
outsl
loopne
adc
cli
ja
mov
adc
inc
enter
pop
in
imull
add
pushf
stc
xor
test
outsb
aad
xchg
or
jae
imul
mov
and
lahf
mov
or
or
aas
scas
scas
enter
xchg
lea
mov
inc
movsb
pop
mov
push
and
out
inc
inc
lods
out
std
test
jae
adc
insb
outsb
aaa
dec
jnp
icebp
jle
sub
mov
outsl
rcr
pop
jnp
call
fwait
mov
jge
leave
push
pop
xchg
xor
pop
icebp
shrl
mov
ds
add
ret
addr16
mov
ljmp
gs
sti
adc
std
insl
inc
movsb
gs
iret
movsb
lods
mov
sbb
mov
add
mov
xchg
inc
fmuls
or
jecxz
shll
jge
lret
jo
aas
mov
rcrl
aaa
fcomps
push
test
dec
and
js
ds
out
icebp
inc
adc
into
sbbb
pop
stc
jmp
mov
adc
sub
mov
arpl
mov
out
jl
mov
ja
mov
jbe
fcomps
imul
iret
jb
dec
xlat
mov
inc
bound
pusha
sbb
out
shlb
aam
xlat
jno
lret
divl
push
aas
shrb
mov
loopne
int
into
sarb
cmp
mov
ja
mov
cwtl
or
pop
cmc
push
dec
mov
mov
cmp
sti
push
repz
sbb
inc
mov
stc
mov
mov
ret
mov
sub
mov
jno
loope
ret
or
lods
mov
divl
mov
repz
pop
or
pop
xchg
addl
xchg
xor
clc
sbb
pop
cmp
push
rorb
ret
inc
add
or
inc
fnsave
or
imul
mov
inc
jecxz
dec
test
jl
cmp
xchg
adc
mov
pop
inc
push
in
scas
aam
inc
push
sbb
pop
fcmovu
pop
push
in
cmpsb
mov
xor
mov
mov
lea
adc
pop
sub
loope
cmc
xchg
insb
jbe
xor
jmp
dec
inc
js
sub
sbb
aaa
push
loopne
mov
or
xor
sbb
push
into
setne
dec
add
repnz
gs
scas
mov
xchg
xchg
js
int
cmpsb
daa
xlat
sub
into
popa
loop
xchg
cmpsb
jl
mov
ss
lods
imul
scas
fdiv
les
addr16
push
push
cmp
inc
loope
or
dec
fsubl
or
mov
add
ret
push
dec
shrb
sbb
xor
sub
sahf
stos
jmp
pop
ficoms
fstps
push
jns
cwtl
pop
fucom
xor
iret
imul
adcl
jmp
imul
lods
ret
or
xor
pop
fstpl
jno
xchg
ret
hlt
push
or
xorl
xchg
das
mov
lret
enter
adc
cmp
cs
incb
jae
out
cmpsb
arpl
out
pop
lods
out
loope
rol
mov
jmp
or
in
and
popf
pop
xchg
dec
mov
js
fimuls
jo
pop
pop
mov
sbb
push
icebp
jl
adc
jns
ror
enter
call
xchg
push
mov
pop
xorb
xchg
jg
int3
push
icebp
dec
pop
sbb
shll
lock
stc
out
iret
push
pop
push
inc
sarb
adc
xlat
push
fstps
stos
mov
lea
or
inc
imul
adc
ljmp
cmp
inc
shll
data16
xchg
pop
mov
fisttps
adc
lret
inc
and
inc
insl
mov
cmc
dec
iret
bound
sub
push
inc
sub
aaa
mov
imul
mov
jo
mov
ret
jnp
mov
push
xchg
push
and
mov
jecxz
push
push
jp
jge
iret
jle
adc
xor
inc
pop
or
mov
sub
repnz
in
loopne
sub
rcll
ja
outsl
cmp
pop
sub
jle
ljmp
or
mov
xorb
test
dec
mov
pop
and
xor
iret
push
ss
fistps
push
jge
leave
jbe
push
add
add
das
pop
inc
fldcw
cmp
and
or
jle
add
repnz
aas
inc
fidivrs
in
pop
jmp
or
or
sub
mov
xchg
xchg
shr
enter
xor
test
and
sub
scas
popa
scas
adc
adc
fcomi
dec
data16
sub
fidivl
mov
decb
scas
jae
and
cwtl
lods
jnp
and
xchg
mov
inc
loope
int3
stos
lcall
and
push
mov
in
add
mov
xlat
dec
cmp
sarb
std
sub
into
aaa
ss
cmpsb
jp
push
je
jns
jo
stc
mov
cltd
pop
popl
or
cmpsb
mov
loope
push
insl
call
cmc
sub
fisttpll
enter
inc
push
pop
dec
push
push
je
cmc
jbe
out
cmpsb
xchg
mov
mov
jbe
add
add
js
add
inc
inc
lea
es
in
mov
hlt
xor
outsl
cmp
pop
arpl
bound
push
dec
xchg
mov
movsl
xor
mov
pop
ss
cltd
and
cmp
les
sbb
loope
jnp
jp
push
mov
inc
xchg
inc
jnp
lahf
in
or
out
inc
ret
jne
cld
jne
jns
loop
lcall
aad
shlb
jb
lock
out
popf
daa
subb
popf
or
xchg
cwtl
lods
out
dec
aad
pushf
aad
mov
adc
test
dec
in
leave
bound
test
repnz
push
and
push
int
cli
movsb
ljmp
push
ffree
lret
out
xchg
lea
or
mov
inc
pop
dec
call
out
fisttpl
repz
mov
dec
adc
ja
mov
dec
sub
sti
flds
les
cmp
bound
jg
clc
cmp
inc
mov
lea
enter
cltd
clc
stc
add
mov
incl
push
subb
xchg
dec
sarl
sub
scas
jecxz
pop
sahf
popa
decb
sbb
decl
xchg
xchg
adc
push
pop
jb
cmp
insb
stos
push
pop
xchg
pop
out
dec
test
sbb
xchg
push
out
mov
sub
jecxz
or
and
mov
sub
dec
arpl
mov
fldl
fisttpl
sub
dec
rorl
sahf
mov
insb
mov
lods
push
push
addb
pop
mov
lahf
aad
outsb
shr
xchg
leave
mov
ret
or
aaa
jne
icebp
xor
push
movsb
and
outsl
adc
push
jne
bound
es
sub
jle
xor
inc
shrb
mov
jae
arpl
aam
fcompl
lods
fimull
pop
and
jae
jns
add
cmp
int
dec
sub
lret
lea
nop
inc
xchg
mov
xor
mov
or
fincstp
push
es
adc
add
in
inc
add
repnz
clc
jmp
out
jns
popa
lret
dec
fiaddl
adc
add
cmp
mov
inc
add
sar
outsl
int
fisttps
pusha
pop
fcomi
and
or
imul
stos
cwtl
clc
xor
repnz
xor
add
arpl
sub
inc
es
shll
jne
int
mov
mov
call
arpl
or
fcomps
pop
lock
outsb
pusha
mov
jg
shlb
jb
fcmovnbe
int3
xchg
inc
jo
lret
cwtl
daa
or
xchg
cmp
push
lods
xchg
mov
test
lahf
dec
dec
test
call
lea
sub
mov
popa
cltd
lahf
and
rorb
into
pop
insb
aad
cmpxchg
into
testb
xor
xchg
dec
sub
fucom
lock
jne
sar
faddp
sahf
jns
lret
inc
push
iret
mov
mov
dec
cmp
mov
mov
xor
nop
inc
add
mov
cmp
stc
lret
daa
int3
xor
fwait
test
push
dec
dec
je
jecxz
out
mov
repnz
add
lret
push
mov
dec
negb
mov
jo
jmp
xor
mov
call
test
pop
fsubrs
frstor
ret
testl
jbe
push
cmc
jo
aam
jne
addr16
inc
cli
insl
cmp
xchg
ljmp
scas
push
fwait
mov
inc
and
xchg
stc
sub
in
sub
pop
cld
and
xchg
or
cli
leave
out
jle
cmp
mov
xor
sub
cmp
mov
inc
mov
add
jmp
and
jno,pt
stos
lcall
xor
mov
out
lock
push
cmp
inc
test
fistl
movsl
outsb
ljmp
icebp
pop
inc
or
inc
adc
loop
xchg
fcomi
movlps
out
lods
sbb
xor
cs
pop
lea
sub
xor
bound
out
insb
jnp
xor
fs
rolb
mov
xchg
mov
sbb
push
out
and
ds
divb
stos
addl
mov
push
mov
imul
xchg
fists
ds
xor
aas
daa
ja
insl
pop
jmp
add
mov
arpl
add
insl
mov
xor
mov
inc
rclb
cmpsl
mov
lret
add
cli
and
testl
into
shrb
pop
aam
dec
loope
bound
in
fildl
inc
inc
xor
cmp
cld
in
shlb
aaa
mov
ud2
cltd
test
insl
or
sti
data16
test
jg
add
xchg
jae
adc
dec
aam
or
ja
sub
stos
or
insb
shrb
cmc
hlt
inc
inc
loope
rolb
shl
adc
adc
cltd
push
and
addr16
or
jnp
and
cli
or
mov
ljmp
ja
or
test
lret
pop
or
aam
pop
ds
fnstcw
mov
mov
add
out
push
xorl
mov
xchg
ja
mov
dec
lds
cmpsb
mov
inc
sub
sbb
ficompl
jb
pushf
mov
push
aam
popf
or
mov
jecxz
xchg
inc
shlb
shr
mov
repnz
adc
lock
mov
das
xor
test
sub
stos
insb
dec
mov
lods
sbb
push
cmpsl
mul
cmp
push
mov
mov
cli
shlb
adc
mov
xor
gs
mov
mov
mov
lcall
jb
icebp
xor
int3
push
sbb
daa
sbbl
pop
mov
push
rcrl
orl
fisttpl
dec
push
popf
mov
aad
into
adc
das
js
aas
sbb
cmpb
out
jecxz
pop
push
sbb
mov
insb
lret
cld
and
rcrb
cwtl
in
cmp
ret
lret
add
jno
and
push
loop
test
addr16
sub
add
xchg
xor
mov
mov
divl
movsb
jns
xor
or
sbb
xchg
pop
in
mov
pop
cmp
js
mov
mov
mov
jl
push
scas
or
int
and
lock
cmc
add
les
outsl
inc
ss
push
push
jno
push
les
cltd
dec
push
jns
call
mov
jecxz
push
jle
mov
inc
add
sub
xlat
inc
sbb
sub
sbb
xchg
mov
lods
andl
xchg
stos
jle
fstps
push
pop
inc
dec
mov
pop
nop
add
xor
call
sub
mov
dec
lcall
add
pop
mov
cmpsb
ljmp
cmp
inc
lods
and
int
out
and
fs
push
gs
mov
xchg
mull
arpl
rcl
adc
insl
pop
or
jecxz
mov
in
mov
test
mov
in
xchg
or
push
mov
in
xor
add
lcall
mov
adc
shlb
out
mov
add
adc
adc
cmp
incl
call
adc
sbb
loopne
adc
clc
push
and
sbb
orb
addl
add
inc
test
jmp
popa
jle
push
sbb
mov
rcr
or
xchg
sub
push
roll
or
int
dec
ror
mov
push
ja
and
pusha
mov
mov
mov
rcll
xor
sub
xor
pop
daa
sub
stos
jo
dec
test
and
sub
or
sbb
fucomip
xlat
stos
sub
insl
push
adc
test
sub
data16
bnd
add
fbstp
mov
sarl
dec
sbb
dec
mov
test
mov
sub
pop
cmpsl
fistl
scas
jbe
rcrl
xlat
out
loop
ret
inc
out
cmpsl
shll
aas
xlat
fscale
and
mov
rorb
mov
sbb
test
loope
adc
mov
imul
and
jmp
pop
in
int
dec
jns
lock
out
mov
in
daa
fmuls
sti
mov
sub
dec
mov
pop
js
mov
mov
fwait
mov
dec
xor
cmp
mov
pop
gs
mov
mov
adc
fisubs
mov
sbb
iret
jmp
add
mov
mov
gs
lods
pop
into
add
fwait
xor
cwtl
xor
or
pop
insb
faddl
mov
add
mov
mov
adc
push
stos
push
lds
push
cli
cmc
das
int
mov
aam
xor
cmp
cli
jae
inc
lahf
or
popw
and
mov
fsubrl
pop
pop
lods
nop
scas
pushf
cs
arpl
imul
movsl
pop
mov
jecxz
push
mov
int3
pop
sbb
jae
sahf
pop
dec
outsb
sbb
jbe
add
lods
adc
jle
gs
mov
lods
mov
push
orl
xchg
loopne
cltd
add
push
dec
cmp
dec
mov
xor
cmpsl
sti
test
sub
xchg
ja
push
sbb
pop
sbb
fisttps
adc
jbe
pop
lret
adc
lcall
jno
addb
popf
stos
fcoms
push
or
pushf
mov
xor
sarl
out
sub
push
test
jo
or
sub
mov
pop
fidivs
popf
stc
outsb
mov
jl
icebp
je
inc
dec
inc
jmp
or
fdivrl
ljmp
jnp
gs
scas
test
mov
stos
add
pop
aas
xchg
loopne
and
pop
rol
adc
xlat
inc
stc
or
mov
inc
lock
push
jnp
cld
sub
lods
sti
add
mov
pop
xchg
jb
push
jl
xor
andl
out
bound
hlt
movsl
push
sub
idivl
aas
subl
jne
mov
sbb
jl
jg
cmc
stos
lret
into
loope
imulb
popf
mov
push
mov
fcompl
pop
adc
mov
xlat
in
orb
rclb
dec
insl
mov
fiadds
push
les
xchg
inc
mov
mov
cmp
ss
es
add
aam
fisubs
les
adc
and
and
es
sub
inc
cmp
push
pop
shll
or
xchg
lock
sbb
mov
sub
add
dec
roll
jo
cmp
aam
push
inc
mov
sbb
push
pop
addb
popf
dec
js
outsb
stos
xchg
inc
push
jle
jo
adc
test
cmc
mov
mov
cmc
jg
xchg
fcompl
xor
or
cmp
ret
sub
into
addb
test
icebp
cmp
ret
sbb
loopne
mov
sti
fildl
mov
xor
sub
pop
xchg
pop
pop
sti
adc
mov
shr
scas
sbb
and
sbb
out
aam
push
and
in
inc
xchg
add
jmp
mov
adc
or
cld
mov
das
cmp
mov
in
pusha
jp
dec
jmp
iret
pop
mov
inc
jg
and
aas
cmp
sub
adc
popa
cmp
mov
rol
out
int
push
lcall
dec
mov
sbb
inc
push
sub
dec
in
mov
orb
and
jp
rolb
ret
icebp
int3
inc
xchg
push
scas
jne
cltd
add
gs
mov
xchg
out
popa
mov
adc
in
inc
testl
xor
ret
ret
sub
or
movsb
sub
fadds
rorl
pop
loop
jno
insb
xor
fbld
adc
adc
and
jb
je
inc
mov
inc
pushf
jae
mov
mov
xor
xor
dec
mov
clc
push
jno
mov
cmp
dec
add
jo
push
in
int3
test
sub
push
aas
fisttpl
adc
cmpsl
push
cmpsb
mov
xchg
xchg
xchg
popa
mov
inc
into
outsb
adc
ret
jmp
repz
and
mov
and
insl
mov
xchg
xlat
add
inc
test
push
repz
mov
xor
popf
jge
ret
icebp
jle
and
jae
cmp
adc
outsb
xor
push
pushl
and
jg
mov
dec
aad
repnz
test
and
push
xor
or
push
into
xor
rorl
imul
inc
in
sbbb
scas
inc
aaa
adc
mov
mov
les
sub
sbb
gs
imul
pop
and
and
cmpb
push
mov
sub
sbb
pushf
into
gs
dec
add
insl
in
cmp
packssdw
mov
xchg
lret
adc
push
test
jbe
sti
mov
mov
arpl
cltd
rolb
rorl
imul
fwait
lcall
mov
xor
dec
lea
pop
add
pop
lret
imul
mov
push
mov
into
add
jns
inc
mov
adc
mov
sub
es
cli
fucomp
int
mov
stos
lea
dec
insl
jnp
imul
or
lret
in
sti
fucomp
int
mov
stos
lea
dec
insl
jnp
imul
or
dec
insl
jnp
jmp
sbb
sub
jnp
imul
or
lret
in
sti
fucomp
int
mov
stos
lea
dec
rcrl
cmp
jnp
dec
loop
repnz
adc
and
xor
cld
lods
cmp
mov
xchg
xor
and
push
les
in
hlt
pushf
add
adc
and
xor
inc
les
in
inc
mov
sbb
je
fs
dec
sbb
bound
pop
mov
sbb
adc
push
shll
add
movsb
fs
rcll
mov
fwait
daa
pop
pop
fnstcw
mov
add
sbb
cwtl
add
sahf
mov
cmp
nop
jnp
push
hlt
iret
dec
shll
or
cwtl
xchg
jg
pop
and
pop
iret
mov
adcb
push
test
xchg
lret
into
fimull
popa
leave
insl
xchg
cmp
leave
fcomi
addr16
cmp
out
add
and
fstpt
fprem
inc
push
popa
sbb
jmp
test
mov
lods
sbb
js
imul
daa
or
and
adc
sti
test
faddl
mov
jno
sbb
xor
in
inc
xor
out
repnz
adc
aam
adcb
insl
out
xchg
mov
mov
pop
int3
je
add
out
repnz
lret
inc
mov
out
test
jne
inc
xchg
mov
sub
add
or
repz
outsl
pop
mov
adc
icebp
push
rorl
mov
aam
andl
les
jno
ja
push
hlt
fs
adc
add
xor
and
push
les
in
hlt
xchg
add
adc
and
xor
inc
les
in
adc
add
xor
and
push
les
in
hlt
xchg
add
pop
sbb
sti
ss
iret
stos
lret
subb
mov
adc
pop
sbb
mov
mov
sub
jecxz
sbb
mov
xchg
nop
dec
int3
add
push
push
sbb
pop
mov
xor
inc
sbb
idivl
xchg
insb
pop
pop
mov
pop
jns
sbb
jp
xchg
adcb
out
sub
cmp
cmpsb
lret
add
mull
stos
add
pop
outsl
pop
addr16
loopne
inc
inc
fsub
clc
insb
dec
sub
pop
pop
fimuls
or
lcall
xchg
stos
add
mov
out
sbb
cli
shlb
fistps
cmc
sub
stos
mov
and
mov
ss
mov
pusha
lret
adc
jp
gs
xchg
icebp
stos
mov
pop
test
pop
repz
mov
ljmp
inc
fisttpll
mov
in
xchg
cmpsb
jle
jbe
xchg
cwtl
xchg
cmp
sbb
inc
inc
jae
aaa
hlt
adc
and
sbb
push
cmp
or
bound
cmp
mov
pop
jl
inc
out
pushf
mov
xchg
inc
jl
add
dec
adc
dec
es
insl
mov
push
outsb
or
aaa
adc
fnstcw
cmpsl
in
xor
sub
dec
adc
enter
push
test
cmp
xor
sti
jle
push
xchg
scas
jo
push
cmp
xor
js
lret
mov
and
jbe
cld
dec
mov
outsl
pop
xchg
push
test
mov
and
add
sbb
cmp
sbb
aad
and
shrl
jge
pop
inc
xor
dec
adc
pop
popf
sub
fcmovnu
inc
pushf
inc
int
or
xlat
push
mov
les
dec
test
mov
jecxz
and
fdivr
push
dec
jmp
push
push
loop
js
cmp
lock
add
jnp
or
addl
dec
repnz
ds
adc
ss
and
mov
mov
cmp
fimull
add
add
cmpb
sbb
xor
xchg
pop
inc
inc
mov
xchg
je
sbb
mov
mov
cmpsl
insb
cmp
test
loop
sub
ret
lods
sub
pushf
dec
xchg
dec
jp
dec
xor
je
je
sbb
mov
xchg
test
xchg
jmp
pop
cwtl
outsb
xchg
add
sub
lock
inc
jp
lret
enter
add
loope
out
popa
push
rol
inc
fimull
cmc
push
pop
aam
mov
sub
lods
xchg
bound
pop
jp
sbb
cmp
or
jae
push
cmc
addr16
test
or
in
int
cmp
lock
dec
cmp
sbb
pop
add
push
xor
fs
iret
xchg
fdivs
cmpsl
jae
mov
loop
inc
je
je
push
roll
pusha
fisubs
pop
and
adc
lds
jnp
mov
add
aas
mov
ds
ljmp
ljmp
jle
fcmovb
mov
fistpll
mov
adc
jecxz
stos
cld
cwtl
fs
icebp
sbb
fcoml
test
setno
cmp
cmpl
int3
sbbb
lcall
clc
leave
ds
cmp
std
adc
stc
jg
mov
mov
rolb
dec
roll
hlt
std
loopne
add
jg
enter
ja
xor
cmp
int3
movl
movsb
lds
push
sub
pop
out
imul
outsl
mov
push
push
pop
ficoml
sbb
push
into
pusha
outsb
sub
mov
scas
or
je
addb
insb
stos
out
push
loope
push
fists
cmpsb
sbb
inc
add
orl
sub
pop
pop
and
mov
data16
aad
gs
sbb
sub
cmpb
clc
jae
mov
mov
dec
xchg
bnd
mov
mov
testb
ffreep
shl
mov
bound
lock
rcll
ds
push
fcoml
imul
and
arpl
fstps
cltd
push
jp
aas
inc
aas
adc
ljmp
jne
popf
je
das
and
movsl
and
out
jg
hlt
imul
mov
notl
aad
mov
test
clc
inc
dec
fimuls
cli
mov
or
mov
or
push
lret
aam
mov
cmpsl
mov
xchg
jmp
ss
popf
imul
push
bound
cltd
inc
pop
in
movsb
push
xchg
xchg
imull
sbb
sbb
push
add
cwtl
push
in
enter
ljmp
call
xor
orl
orl
not
cmp
in
insl
rolb
jnp
adc
jo
mov
fwait
cmp
fstpl
fildll
out
or
mov
inc
inc
repnz
sub
mov
push
xchg
add
shl
fbstp
int3
outsl
dec
jns
les
and
fbld
insl
pop
divl
les
sub
sub
pop
and
pop
mov
shlb
push
lds
cld
in
adc
movsb
dec
xor
inc
pop
loop
fmulp
in
insb
loop
xchg
inc
or
call
mov
mov
fbld
cmp
fwait
sahf
xor
xor
cmpsl
iret
jmp
das
jge
lret
pop
sahf
ss
pop
ds
ja
pop
xchg
inc
lea
lods
xchg
inc
dec
lods
call
cli
pop
std
fs
int
shll
out
popa
jne
dec
clc
imul
addr16
pop
cmp
or
push
mov
aad
mov
into
loop
and
pusha
mov
inc
das
jp
mov
stos
xlat
mov
cmpsb
int
rorb
movsl
push
jne
xchg
ss
add
jmp
inc
insl
das
push
mov
cmp
stc
inc
out
or
mov
pop
jl
sbb
fmuls
ljmp
fdivrl
push
test
jo
xchg
dec
fisubs
sti
jle
dec
cmpsb
and
jo
jo
outsl
xor
or
out
push
sbbl
mov
xor
dec
aad
cmpsl
sub
adc
fcomps
mov
adc
mov
xor
call
fcoml
test
in
mov
loopne
jecxz
je
out
dec
jae
mov
mov
loop
stc
movsl
sahf
or
and
aaa
ret
cmp
xchg
push
lret
or
ss
gs
xchg
pop
and
and
imull
les
mov
xchg
out
cmpsl
out
fwait
pusha
xor
arpl
xchg
sbb
out
inc
push
and
stc
and
xor
in
and
mov
pop
insl
jns
out
add
xchg
adcb
fisubrl
jbe
mov
xor
and
cmpsb
addr16
inc
repnz
and
xchg
push
nop
jmp
and
std
push
lahf
les
imul
inc
and
add
dec
insl
mov
jg
mov
pop
xor
ret
push
ljmp
and
add
pop
jno
cmpsl
leave
add
fcmovnu
fstpt
or
popa
and
inc
ret
cwtl
dec
mov
aaa
adc
jo
pop
xor
pop
in
add
push
cmpsb
lret
je
int
mov
int3
pop
test
xchg
ds
repnz
xchg
arpl
push
push
lret
loop
imull
loopne
pop
adcl
out
jnp
add
int3
xchg
or
or
stos
ret
cmpsb
and
repz
iret
sbb
dec
jbe
and
mov
jns
mov
adc
dec
cmp
cmp
test
int3
jns
bound
mov
and
push
std
mov
and
out
cmpsl
inc
test
pop
lock
lret
divl
fcmovb
into
xor
push
repz
xlat
lret
sar
imul
aaa
cld
gs
shl
addr16
in
iret
push
sbb
pop
fbld
cmp
mov
or
sub
dec
imul
or
sub
pop
insb
sub
push
cmp
addl
iret
xlat
ss
out
sub
inc
xchg
cmpsb
push
sub
mov
ficoml
int
xor
jp
mov
push
dec
out
push
idivb
scas
inc
cmp
dec
outsl
pusha
dec
and
jle
repnz
inc
xchg
filds
mov
insl
shll
ds
mov
stos
cmc
dec
sub
fsubrs
mov
mov
cli
inc
insb
das
lods
cmpsl
jg
pop
ja
int3
cmp
pop
and
idivl
mov
mov
mov
mov
cmpsl
stos
pusha
dec
push
adc
adc
enter
sub
xor
sbb
clc
negl
mov
jae
fs
xchg
gs
push
dec
xchg
notl
inc
jns
lock
push
subps
fcomps
stos
pop
mov
adc
or
mov
lock
fidivl
dec
lea
cmp
fs
ror
mov
lds
fistpl
lret
aas
out
inc
mov
mov
movsl
int
fdivrl
mov
stc
adc
push
jle
addr16
stos
sbb
mov
xor
aad
xor
mov
push
xlat
icebp
fisubrs
push
ljmp
xor
cmp
jl
jne
ds
jmp
cmc
push
mov
mov
push
mov
mov
pop
mov
inc
movsb
out
mov
adc
mov
outsl
add
insl
sbb
push
or
jb
push
inc
cmp
addr16
jle
push
jg
and
fists
lock
mov
stos
pop
mov
outsl
jno
xchg
jecxz
sbb
das
jae
cli
mov
and
pop
sti
cmp
lret
or
or
mov
mov
push
xchg
ljmp
loop
push
clc
cmp
fwait
inc
fstps
push
repnz
mov
or
jge
lods
mov
mov
cmc
divb
pusha
out
sbbl
sub
dec
or
mov
aad
adc
movsb
mov
les
ficoms
sub
xor
cmpsl
adc
test
xor
adc
xchg
sub
decb
test
mov
xchg
fmull
mov
das
ffreep
mov
and
push
cld
and
inc
nop
lods
xor
jns
mov
out
xor
dec
dec
ljmp
xchg
imul
cwtl
jp
aad
shll
js
mov
stos
cld
je
xchg
pop
cmp
js
push
add
dec
mov
out
cmp
lcall
adcb
hlt
jns
dec
clc
ret
mov
xor
int3
xchg
int3
cwtl
xor
out
fidivs
mov
fbld
lods
pop
fmuls
hlt
dec
add
xor
add
jb
xor
outsb
push
dec
lahf
insl
adc
dec
mov
dec
add
fbld
jno
cwtl
dec
addb
movsb
pop
or
add
je
fildll
in
cli
lea
les
push
mov
xchg
hlt
sbb
adc
aad
mov
notb
mov
je
shl
scas
test
nop
or
adc
shlb
mov
inc
orl
xchg
xchg
js
ret
xchg
mov
or
cmp
adc
add
test
jp
sub
loop
lret
insl
dec
mov
lcall
cmp
sti
repz
sbb
stos
out
dec
dec
xchg
cmc
stos
hlt
aas
mov
test
mov
f2xm1
ret
pop
cmpsb
ss
mov
popa
xchg
out
ljmp
jg
shl
loope
and
out
xor
jge
dec
mov
pushf
fbld
fdivrp
lcall
lods
mov
ljmp
in
add
or
or
xor
jg
pop
mov
jae
inc
jbe
push
aad
xchg
or
out
aaa
add
push
std
inc
xchg
or
out
hlt
jmp
lcall
dec
stc
fimull
push
movsl
push
sub
pop
adc
mov
jmp
adc
mov
aas
xlat
and
push
inc
cwtl
inc
divl
repz
pop
jecxz
push
cmp
into
jl
pop
cmp
fs
mov
mov
jbe
dec
dec
cmpsl
dec
shrl
jnp
in
xchg
idivb
scas
shr
stc
sbb
icebp
push
xchg
pop
pop
ljmp
mov
clc
mov
lret
imul
xchg
jmp
fnop
sub
pop
lret
jo
lods
xorb
jne
movsb
push
hlt
mov
fdivrp
mov
and
pop
adc
inc
sub
dec
jne
sbb
lret
pop
jo
inc
mov
mov
xchg
mov
popa
fldenv
stc
repnz
out
push
sbb
icebp
pop
aas
xor
fwait
push
or
hlt
jecxz
push
ljmp
mov
mov
add
aaa
ds
frstor
pop
in
lret
cmc
pop
lods
xchg
std
jle
data16
fadds
fld
xor
jmp
lds
mov
push
add
fldcw
jge
cmp
stos
xor
lcall
repnz
adc
clc
and
lods
cld
aas
mov
mov
repnz
mov
push
leave
les
dec
popa
cmp
pop
cmpsl
lahf
test
xor
cmp
mov
ja
xchg
int
adc
cmp
inc
add
pop
pop
jne
inc
jno
jmp
gs
cli
mov
mov
or
sub
sub
mov
outsl
and
ficoml
lahf
stos
or
lret
cmpsl
xor
dec
fs
inc
lds
xchg
jo
adc
inc
repz
in
clc
fidivs
insb
sub
popf
test
cmp
ret
in
mov
hlt
mov
pop
in
mul
in
mov
jne
mov
mov
imul
push
jnp
push
cld
jns
cli
mov
mov
cs
rol
addr16
sub
iret
iret
pop
test
xor
and
outsl
fwait
aaa
cmp
mov
out
push
xor
arpl
inc
stos
arpl
aaa
outsl
sti
add
imul
mov
or
jbe
addl
mov
cmp
mov
xor
mov
fnstsw
ja
cmp
pop
pop
stos
lahf
cli
dec
adc
mov
cmp
mov
je
clc
aaa
mov
inc
insb
fucomip
mov
jg
mov
pop
daa
dec
test
addr16
ds
int
je
jae
fidivs
popf
fcom
test
pop
add
cld
dec
sub
pop
sbb
cwtl
adc
inc
kmovw
and
jp
sbb
out
jbe
add
lock
stos
dec
xor
mov
xchg
in
mov
in
lret
pop
mov
fsubl
and
add
xor
dec
mov
sub
outsb
inc
std
movsb
mov
cs
jb
mov
mov
test
dec
imul
ds
cmp
js
xchg
mov
lahf
adc
test
movsl
mov
push
xchg
inc
push
bound
imul
insl
aaa
jmp
xchg
mov
clc
push
xor
pop
pop
out
lock
xchg
sub
xchg
xchg
in
mov
es
outsl
ret
in
sbb
andl
pusha
stos
fwait
es
mov
push
pop
dec
setle
xor
jge
xchg
mov
lock
or
xchg
mov
shrl
push
call
jb
outsb
xlat
jbe
xor
clc
ja
roll
xor
push
es
pop
stos
xchg
pop
stc
jno
adc
es
mov
dec
repnz
pop
clc
int
test
sbb
xchg
shlb
fwait
adc
mov
mov
fwait
rorl
lock
test
dec
push
mov
pop
add
stos
cmp
push
push
aas
movsl
dec
in
sbbl
cmp
neg
push
daa
inc
aad
inc
add
outsl
aas
mov
sbb
jae
ja
pop
sub
xorb
add
sbb
loope
xchg
data16
fadd
push
fisubrl
mov
aam
mov
or
aam
mov
inc
ret
cmp
xchg
jne
movsl
dec
add
adc
sahf
data16
bound
int3
sbb
stc
cli
mov
pop
nop
ds
and
in
push
lea
fnstcw
fsubs
arpl
xor
fs
sbb
sbb
xlat
iret
fisttpl
es
pop
mov
fldcw
jle
pushf
hlt
dec
ja
or
ss
mov
push
rorb
or
ret
pop
dec
sub
sub
sar
mov
insb
cmpsl
pop
lods
sahf
scas
aam
arpl
test
iret
enter
push
fwait
gs
aad
sti
mov
cmp
and
data16
push
push
sub
dec
push
lret
xor
xchg
stos
mov
rolb
cmc
mov
jmp
lods
test
mov
xor
push
mov
xchg
aaa
xchg
popa
in
cmp
fisubrl
lods
test
jb
dec
ja
test
loope
scas
dec
in
movsb
fwait
popf
mov
rorl
push
pop
scas
mov
jmp
imul
mov
and
inc
or
mov
inc
sub
lds
int
lds
cmpsl
cmp
test
mov
rorl
pushf
adc
enter
insb
jg
cltd
jnp
push
insl
or
inc
xor
adc
push
pop
iret
xchg
je
mov
mov
jnp
and
xchg
rcr
mov
lcall
into
out
or
cmp
push
push
das
fcmovnu
lds
sbb
popa
bound
xor
push
jns
pop
js
xlat
ds
mov
mov
jae
ds
xchg
jno
push
mov
sbb
mov
daa
iret
std
xchg
sub
in
inc
stc
rcrb
pop
mov
or
mov
jno
mov
jae
mov
lds
inc
xchg
inc
inc
mov
in
scas
enter
repz
sbb
push
inc
cs
pop
push
mov
cmpsl
clc
and
mov
lahf
scas
mov
and
aad
sti
lods
pushf
push
adcb
cwtl
je
mov
jo
sub
jno
loope
pop
inc
xchg
lcall
xlat
rorl
ss
xor
notb
pop
xor
outsl
jecxz
arpl
push
cmp
xor
mov
mov
mov
movsb
int3
pushf
out
lcall
pop
cmpsb
mov
shll
ret
enter
in
sub
or
dec
mov
mov
inc
or
dec
sub
fmull
xchg
sbb
and
cmp
orl
add
push
call
sbb
in
or
sti
jb
sti
cmpsb
jge
add
ficomps
in
popf
dec
push
add
inc
negb
popa
inc
lods
add
and
cli
daa
sahf
test
pop
mov
int
and
pop
cmpsl
inc
es
and
add
or
inc
inc
pop
dec
mov
sub
enter
jnp
jle
rorl
enter
arpl
movd
les
dec
inc
in
into
xorl
insl
pop
pop
pop
adc
lods
lret
sti
cmp
mov
mov
lods
xchg
inc
nop
jl
das
leave
jb
and
pop
leave
dec
leave
adc
lods
push
lods
leave
fucomp
xchg
ja
cmpsb
orl
push
xor
stos
call
nop
ss
push
sahf
mov
addb
or
fisubrs
cli
enter
xlat
cmp
cmp
xchg
cltd
mov
add
test
push
cmp
add
pop
inc
sbb
bound
cld
test
xlat
sub
dec
cmp
inc
xor
mov
pop
aas
sub
cmp
xchg
or
xchg
jp
aaa
add
xchg
pop
cwtl
jae
sub
mov
mov
or
leave
inc
imul
stos
rcr
push
xor
js
xchg
xor
jns
inc
xchg
xor
int3
push
pop
lock
cltd
jbe
fdivl
lods
cld
sbb
mov
pop
or
cmpb
xor
sahf
adc
lahf
icebp
cwtl
test
dec
call
mov
movsb
mov
pop
adc
lahf
daa
mov
pop
add
insl
and
test
decl
xchg
es
popf
cmp
xchg
push
pop
cli
add
xchg
adcb
jmp
pop
xchg
inc
jns
mov
push
icebp
stos
xchg
sbb
inc
adc
xor
out
push
push
pop
push
cli
cmp
add
xor
aad
pop
pop
or
cmc
push
nop
fidivs
popf
jnp
and
imul
xor
iret
int3
mov
xchg
nop
add
fdivr
arpl
add
loope
push
jg
repz
xlat
pop
mov
adc
test
dec
xor
or
mov
jp
sbb
cld
ficomps
mov
cs
xor
jl
push
gs
adc
subl
fdivrs
gs
xchg
adc
outsl
cmp
push
sub
sbb
adc
and
xor
inc
les
in
adc
add
xor
and
push
les
in
hlt
xchg
add
adc
and
xor
inc
les
in
adc
add
xor
and
push
les
in
hlt
xchg
add
adc
and
xor
inc
rclb
je
test
cmp
les
jo
push
lock
test
cmp
mov
inc
aam
hlt
fs
test
ds
movsb
and
and
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
add
into
dec
pop
fdivl
sbb
repnz
add
pop
add
add
add
add
add
add
add
add
addl
add
push
add
inc
add
add
add
sahf
add
add
jecxz
sldt
add
pop
add
inc
add
add
lret
add
add
add
add
add
roll
add
add
add
jmp
add
roll
add
add
push
add
add
add
add
add
add
add
add
imul
xchg
add
add
add
add
add
js
and
add
add
add
add
pop
add
and
cmp
sldt
add
pop
add
add
sbb
in
inc
add
add
add
add
add
add
jo
inc
add
add
add
add
add
add
xor
push
add
add
xor
inc
add
add
add
push
add
testb
add
add
add
mov
add
sub
xchg
add
bound
mov
inc
add
add
add
add
add
add
add
add
pop
add
add
add
add
popa
add
add
add
jo
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
scas
add
add
out
cwtl
add
add
cltd
add
add
add
jo
out
add
add
sbb
bound
sldt
add
add
add
add
add
inc
add
add
and
inc
add
add
add
add
add
add
add
add
adc
cmp
roll
add
arpl
fldl
add
add
add
add
xor
ret
add
ret
add
add
mov
fiaddl
sub
daa
add
aad
mov
addb
add
mov
repz
inc
add
pop
add
add
add
add
add
or
cltd
add
add
add
add
add
add
add
add
add
add
enter
mov
mov
add
add
add
add
pop
add
add
add
bound
and
jo
aam
mov
add
add
add
add
add
add
add
add
jnp
push
add
add
add
add
add
add
add
add
lret
add
add
push
add
add
add
add
lret
add
add
cmp
push
add
add
add
add
add
add
add
mov
addb
add
add
add
add
enter
jmp
addb
add
hlt
add
jne
scas
add
add
add
add
add
add
add
add
add
add
les
roll
add
add
add
add
insl
add
add
add
add
add
sub
inc
add
add
fadds
hlt
add
add
sub
adc
add
movsl
add
add
add
add
add
add
or
add
add
add
add
add
pop
in
dec
es
sahf
jno
inc
repz
nop
scas
ljmp
pop
js
out
std
dec
and
clc
insb
imul
mull
mov
in
xor
mov
xchg
out
push
sbb
sub
mov
enter
je
aam
outsb
pop
cld
jns
xor
stc
jg
sti
dec
xor
pop
pmulhuw
mov
addr16
pop
pop
orb
aaa
jo
dec
jnp
mov
jns
out
fldenv
add
sti
jmp
and
cld
cmc
xchg
gs
cmc
jno
das
ret
push
mov
rcrb
call
loopne
push
lock
and
cmp
mov
xchg
call
divb
xchg
cs
add
movsl
pop
mov
fs
mov
enter
xor
xchg
or
or
and
cmp
rcrl
cmp
scas
inc
pop
push
and
adc
adc
repnz
xor
add
xchg
ret
sti
aas
mov
sub
fs
cmpsl
frstor
jp
popf
adc
push
sub
mov
aam
leave
ret
push
push
hlt
xor
rcll
les
pop
jnp
sbb
sbb
xchg
sti
mov
cmp
dec
pusha
cld
inc
add
cmp
lock
adc
push
add
pinsrw
cmp
jno
hlt
clc
pop
fcmovu
leave
and
les
out
pop
xchg
fs
stos
test
push
jge
pop
scas
fwait
scas
push
out
ljmp
lea
add
and
mov
imul
enter
cmpsb
push
xchg
fsts
test
and
and
pop
xchg
cld
arpl
mov
and
mov
jg
pop
inc
mov
outsb
pop
xchg
jo
fstps
inc
iret
out
shrl
xchg
ret
test
test
sti
pop
daa
int3
fisttpl
cwtl
and
mov
loop
inc
mov
cmp
dec
js
sub
mov
pushf
mov
jl
mov
cltd
inc
icebp
add
int3
insl
lret
mov
dec
push
stos
sub
cmp
push
out
sbb
jbe
sub
dec
push
cmp
push
repnz
lock
repz
inc
mov
cmp
cld
xchg
mov
sbb
mov
add
fsub
jno
sub
adc
adc
pop
loop
push
xor
or
popf
enter
dec
dec
add
jnp
in
cmc
pop
shrl
and
jb
jae
out
in
outsb
lods
cwtl
test
and
xor
push
xchg
push
imul
adc
vmwrite
inc
orl
inc
stc
movsb
xchg
out
out
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
