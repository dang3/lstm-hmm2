xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
push
add
add
ret
add
popl
push
push
xchg
add
mov
pop
push
xchg
push
xchg
add
xor
xor
xchg
popl
push
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
mov
ret
xchg
popl
push
ret
xchg
xchg
xchg
push
pop
pop
push
xchg
mul
push
pop
push
pop
push
pop
push
addl
pop
ret
mov
ret
mov
ret
push
addl
pop
ret
pop
push
xchg
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
push
push
push
call
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
push
call
push
push
call
push
call
mov
push
call
push
push
push
call
push
call
push
push
push
call
push
push
push
push
call
push
cmp
jae
ret
pop
call
ljmp
inc
add
add
mov
add
add
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
negb
dec
lcall
fwait
sbb
stos
pop
fwait
add
mov
repz
mov
roll
aad
subb
lahf
push
in
xchg
and
repz
adc
xchg
push
call
pop
jo
cmpsl
lret
push
test
and
les
jg
sub
inc
jmp
test
push
rcl
jle
push
xchg
pop
sti
jne
sub
cmp
stos
push
popf
ret
mov
sbb
push
nop
in
mov
repz
out
sub
dec
outsl
and
movd
xor
adc
jmp
js
std
repz
sbb
es
and
push
dec
adc
xlat
push
fwait
lock
cmp
pop
jge
sbb
mov
addb
cmp
and
sbb
pop
push
lds
xor
sbb
jmp
lret
test
repz
add
dec
dec
jb
jo
fs
cli
or
jb
mov
fisubrs
test
lods
and
test
pop
mov
stos
jl
push
repnz
push
add
xchg
sbb
push
jae
mov
nop
mov
lahf
cmc
inc
pop
fcompl
loop
outsl
iret
loopne
cmc
sti
inc
jmp
inc
insl
in
mov
ds
repnz
pcmpeqb
dec
mov
sbb
pop
fwait
ljmp
dec
adc
popf
cs
imul
cmp
add
jb
cmpsb
sub
leave
inc
push
jne
add
scas
pop
mov
pop
in
jno
jns
int3
inc
and
sbb
cmp
mov
cmp
cltd
cmpsb
sub
pop
aam
mov
add
or
ja
cmp
push
push
dec
xchg
push
pusha
and
xor
out
lods
es
jno
xor
mull
ljmp
jbe
test
mov
inc
add
inc
mov
sub
cli
and
jbe
in
push
sbbb
sahf
pop
addr16
inc
into
lret
repnz
popf
xor
dec
inc
test
push
mov
pop
sbb
push
lds
push
mov
jle
test
popl
fsubl
pusha
push
adc
cmp
and
push
xor
and
or
out
push
push
push
pusha
mov
mov
fs
push
or
dec
pop
cmp
mov
dec
icebp
andl
cli
cmpsb
xlat
push
mov
pop
xor
pop
ljmp
or
adc
xor
cld
inc
dec
pop
cmp
js
ss
shll
mov
xchg
ds
es
test
pop
or
into
add
jns
cmpsl
ss
imul
leave
icebp
xchg
fs
add
ret
in
xor
movsl
stos
or
pushaw
xor
sbb
mov
sub
das
pop
push
movsb
dec
xor
fildll
inc
mov
shll
add
jns
clc
jb
arpl
push
xor
jnp
sub
mov
aad
ficoml
cld
jae
std
icebp
insl
push
xor
mov
popf
adc
dec
in
aaa
into
and
ficoms
imul
je
jns
int
pop
jmp
fwait
jg
dec
loope
in
and
adc
movsl
sub
lods
mov
enter
pushf
sub
subl
fcmovnb
test
es
popf
rcl
lret
sahf
rorl
sti
xor
sarl
cmp
stos
stos
test
test
xchg
sbb
stc
sub
and
stos
int3
mov
out
ret
mov
sbbl
mov
pop
and
mov
in
jg
cmp
dec
jmp
scas
or
add
leave
cmp
int
and
lret
shlb
dec
jbe
out
test
movsl
jg
aaa
stc
rcll
push
dec
jae
icebp
push
outsb
in
xchg
pop
mov
not
leave
mov
outsl
lds
adc
cmp
rcl
pop
ljmp
dec
push
inc
cmpsl
jne
push
mov
clc
out
inc
sub
xorl
sub
scas
daa
or
mov
into
movsb
sahf
aaa
test
enter
sahf
int3
aad
sub
ret
pop
dec
push
movsl
push
xor
lret
mov
add
xchg
shl
test
mov
scas
inc
insl
lret
mov
dec
cmp
nop
pop
cwtl
gs
hlt
sarb
std
repnz
mov
in
adc
mov
out
outsb
jno
iret
push
xchg
jb
add
inc
cli
fcmovnb
and
pop
test
inc
mov
cmpsb
push
mov
cmc
fsubrl
enter
ja
xor
add
mov
adc
clc
pop
adc
inc
adc
idivb
mov
inc
sbb
lea
mov
cld
xorl
or
cmp
lcall
insl
sbb
into
out
es
dec
push
sub
sbb
icebp
and
fcmovbe
outsl
test
pusha
mov
loope
rorb
cmpb
int
in
aaa
cmp
subl
and
aad
fdivrs
inc
lods
fnsave
sbb
scas
ljmp
fsubrl
pop
xor
mov
loop
ss
aam
lods
xor
and
jle
adc
movsb
lods
ljmp
ds
popa
sub
stos
jmp
mov
mov
scas
and
notb
mov
ljmp
mov
movsb
adc
jp
adc
ret
inc
testb
adc
pop
hlt
xor
inc
cmp
mov
push
mov
sti
mov
mov
pop
mov
inc
test
mov
xor
dec
add
aaa
sub
test
add
int
adc
add
test
push
mov
xchg
roll
mov
and
loop
add
pushf
xchg
xlat
adc
cmpsl
call
mov
hlt
mov
xor
lret
test
ja
mov
add
syscall
push
push
or
inc
lret
movsl
mov
jbe
push
lret
inc
adc
adc
lods
fwait
in
cmc
sahf
loopne
cmp
pushl
movsl
aad
les
sub
sub
cmp
in
sub
pop
add
movsb
cltd
add
repz
xchg
dec
enter
enter
out
cmpsb
shlb
jb
mov
pop
test
fisttps
rcr
inc
aam
into
enter
imul
ds
and
and
scas
inc
inc
xchg
sbbb
xchg
insb
cmpsb
maxps
dec
in
addb
jge
into
das
add
sub
lret
mov
mov
or
dec
sahf
daa
xorl
imul
sbb
pop
or
sbb
sub
loopne
inc
mov
adc
lahf
lahf
add
into
loop
dec
lds
xchg
daa
push
aaa
stos
add
loope
scas
inc
pop
inc
cmp
cs
imul
test
jg
cmp
mov
iret
aas
pop
lahf
aas
inc
and
add
rcrb
xchg
sub
cmp
fdivrl
int
cmp
add
js
add
mov
cmp
inc
jne
hlt
fs
aam
das
in
iret
cmc
rcrb
push
sahf
cmp
sbb
fidivrl
cli
or
aam
loopne
pusha
xor
jno
mov
mov
jb
xchg
cmp
or
pop
inc
pushf
sbb
popl
adc
shl
or
cmc
adc
jp
sbb
mov
stos
je
mov
mov
iret
out
popf
gs
xorl
mov
repz
lcall
jno
shl
xor
fcmovbe
jnp
fwait
sub
das
hlt
push
mov
pop
loop
fwait
jbe
push
pop
sub
xchg
push
jp
xor
test
aas
lret
ljmp
inc
testl
or
dec
test
scas
loopne
jmp
enter
mov
or
push
xor
and
orb
inc
cmp
pop
pop
repnz
lahf
scas
sub
or
xchg
fisttps
or
cmp
aam
in
cmp
sti
lea
pushf
xchg
dec
inc
inc
jnp
xlat
aad
xlat
xorl
add
fidivrs
lods
sar
mov
pop
cmp
fnsave
mov
leave
cwtl
aam
icebp
mov
imul
mov
out
mov
push
sbbl
rclb
dec
xchg
inc
xchg
icebp
xchg
xchg
push
push
add
loope
sbb
xor
int
jne
inc
cmpsl
jne
orl
faddl
push
gs
mov
sar
aam
lret
sub
icebp
xchg
sbb
nop
ljmp
ss
les
sub
js
data16
mov
sti
lcall
andl
or
insb
popl
imul
xchg
adc
cld
std
adc
push
sbb
fidivrs
dec
add
or
sub
dec
jecxz
jle
imul
mov
mov
cmpl
xchg
cwtl
test
mov
pop
xchg
scas
loope
and
push
int3
imulb
xchg
or
roll
push
mov
pop
inc
cltd
cmp
repz
scas
push
adc
addl
mov
stos
inc
cmp
jnp
cmp
and
xor
arpl
adc
jmp
cmc
enter
cmpsl
sbb
jecxz
lods
lds
repz
and
imul
inc
push
lock
loope
incl
inc
sbb
jae
orb
fs
sbb
sub
jae
fxch
add
sbb
lods
mov
ds
scas
pop
xor
imul
imul
jecxz
repnz
incb
scas
jns
mov
xlat
jae
adc
push
shlb
int
add
int
pop
push
daa
sub
pop
jmp
push
xchg
push
xorb
mov
push
sub
fiadds
cmp
out
test
pop
xchg
les
and
imul
mov
and
idivl
cli
lds
sub
xchg
xor
adc
roll
inc
or
ljmp
out
fisubrs
ljmp
cs
xchg
lock
xorb
cli
cwtl
test
sahf
outsb
repz
dec
shrl
hlt
sub
enter
xchg
sarl
jae
int
sbb
mov
or
sub
mov
aam
push
mov
push
stos
lahf
pop
push
sub
mov
or
sub
mov
pop
xchg
adcb
sub
aas
int
daa
dec
mov
test
xorl
push
js
jmp
jbe
addb
notl
in
das
pop
xchg
jmp
mov
jb
xchg
mov
and
in
xchg
bound
pop
in
sarb
jbe
mov
aas
xchg
data16
imul
in
out
mov
mov
rolb
pop
insb
push
jns
int3
outsl
and
jae
fadds
scas
push
out
lret
dec
add
daa
ja
sbb
dec
imul
mov
int
push
subb
lret
and
dec
inc
add
or
lods
stos
icebp
pop
lret
mov
mov
add
mov
bt
mov
out
or
xchg
xchg
jg
mov
cmp
sub
dec
xchg
jmp
outsb
call
test
shrl
push
push
add
dec
push
pop
jg
mov
stos
sub
mov
xchg
xor
ja
push
nop
imul
mov
add
cmp
pop
nop
mov
pushf
repnz
push
xor
sbb
and
and
fstl
cs
das
pop
ss
movsl
leave
or
sbb
push
or
pop
xchg
lods
dec
push
jb
fistl
dec
pop
in
push
imul
punpckhdq
test
pop
data16
cwtl
pusha
xor
int
and
imull
rolb
or
cwtl
xor
addl
rorb
xchg
ss
ljmp
pop
sub
sti
add
mov
push
mov
push
ret
test
shl
and
mov
jns
pop
push
int3
pusha
je
add
xchg
cltd
dec
pop
div
sbb
mov
mov
sbb
sbb
inc
sub
pop
leave
mov
outsl
xchg
mov
sbb
popa
test
cmp
rcr
popf
pusha
repz
jnp
sbb
stos
out
test
mov
sbb
test
bound
testl
test
push
pop
push
xor
inc
push
cltd
lock
inc
ljmp
out
in
stos
add
in
fdivs
cs
leave
andb
dec
inc
inc
jl
lea
adc
popf
and
pcmpeqw
xchg
lock
add
push
mov
push
hlt
mov
mov
test
pop
jecxz
ds
out
bound
rorb
mov
dec
repnz
pop
inc
leave
lea
in
jmp
ss
cmp
sub
pop
jmp
mov
mov
lods
imul
cli
fiadds
dec
mov
pop
fisubrl
sbb
jne
ds
jns
mov
mov
addr16
push
arpl
divb
imull
loopne
dec
ds
pop
movsl
mov
sahf
push
cmp
jmp
xchg
sub
ja
sti
orb
call
test
inc
pushl
shr
aam
into
jo
adc
xor
lahf
scas
jmp
mov
mov
mov
cmc
test
les
pop
lods
add
xlat
or
dec
xlat
js
push
mov
mov
jmp
fdivrs
jne
out
outsl
mov
mov
sub
shrl
dec
pop
lret
test
cmp
jmp
pop
lea
lcall
cmp
ret
jns
fdivrs
xchg
jmp
outsb
ja
dec
js
xchg
test
scas
and
ljmp
pusha
mov
test
repz
das
inc
int
xor
xlat
mov
lock
outsl
dec
shlb
mov
cltd
lahf
stos
jg
cmp
inc
int3
mov
push
push
cwtl
leave
dec
inc
pop
mov
mov
push
cmp
lds
mov
sub
mov
ljmp
ret
xchg
jmp
inc
jns
in
or
inc
sahf
sub
push
adc
test
test
xor
jno
cmp
mov
aad
mov
jbe
test
jmp
aam
push
movsl
mov
loop
cltd
test
fisubl
push
or
lods
sub
sbb
test
inc
stos
je
in
mov
rorb
into
jo
sahf
mov
sbb
mov
dec
aad
pop
push
cld
dec
mov
aas
test
jecxz
cmp
into
movsl
int3
xchg
lcall
int
dec
mov
or
sub
test
and
pusha
jp
sbb
cmp
dec
nop
push
out
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lahf
rorl
lds
xchg
or
outsb
scas
popf
in
mov
dec
mov
cmp
rclb
ficoml
sbb
mov
add
imul
fcompl
stos
or
and
sbb
jae
xlat
xor
xchg
cmpsb
ja
xor
mov
les
lods
scas
lret
sbb
les
insl
push
hlt
push
repz
add
and
cmp
stc
dec
imul
xlat
int3
mov
cmp
mov
jbe
rorb
sbb
mov
cmpsb
sbb
out
pop
dec
or
cwtl
mov
cmp
jo
jmp
addr16
jmp
jb
jb
out
cmp
mov
sub
cmp
mov
stos
fwait
scas
sub
sbb
jbe
or
xor
xlat
jo
test
lods
popf
jmp
jmp
sbb
or
imul
js
dec
xorl
pop
inc
xchg
add
cmpsb
inc
jo
xor
mov
ss
gs
jle
int
pop
imul
rcll
call
aaa
dec
ja
repz
js
lahf
rcll
ds
sub
jge
imull
hlt
sarl
sahf
jmp
pop
push
std
negl
pop
ljmp
es
cmp
out
jecxz
fidivs
in
repnz
fbstp
mov
in
cwtl
aaa
or
cmpsl
pop
ja
or
cmp
sub
xchg
ss
jo
repnz
push
fcmovnu
mov
test
gs
mov
mov
fwait
pop
mov
pop
int
fistpl
rcrb
add
push
cmc
dec
out
mov
gs
es
es
xchg
shlb
cmp
rcl
xor
xor
sub
cld
into
push
xor
or
sbb
mov
pop
and
adc
xor
jnp
mov
jp
int3
aad
sub
orl
repz
xor
notl
push
pop
push
pop
jnp
mov
out
imulb
lret
subb
or
jo
out
or
inc
test
repz
mov
xchg
xlat
xchg
push
les
inc
std
push
fisttps
jmp
outsb
xor
jle
leave
orl
in
xchg
xor
loope
lret
mov
sub
xor
cmpsb
xchg
pop
out
lret
adc
inc
not
shlb
inc
rcrl
stos
jmp
sar
aaa
call
xchg
sbb
pop
icebp
cmp
fisubl
das
fsubs
cmc
outsl
je
cs
ror
rcrl
add
movsl
stos
loope
jb
mov
cmp
daa
icebp
stc
mov
das
lea
push
adc
int3
xchg
xchg
ret
popa
into
in
vphadduwd
loopne
cmpsl
in
jl
lock
jnp
sbb
int3
and
mov
jns
in
sub
or
sbb
pushf
ret
xchg
xchg
sub
imul
divl
push
pushf
xchg
std
sub
test
enter
mov
jge
aas
icebp
es
in
mov
test
out
pop
shll
call
mov
lods
jbe
test
lahf
mov
jp
jmp
push
mov
mov
xchg
adc
add
jne
xchg
dec
dec
lea
dec
cmpsb
mov
rorl
cli
in
cmp
jbe
jb
stos
out
sarb
inc
imul
mov
mov
sbb
es
cmpsl
cltd
outsb
imul
shll
pop
inc
mov
jbe
xchg
nop
pop
jns
outsb
jno
xchg
jb
enter
mov
sbb
cmp
stos
mov
test
mov
mov
cli
or
or
and
push
mov
scas
mov
in
shlb
sub
xor
mov
push
cmp
daa
pop
outsl
andb
sbb
pusha
cmp
lret
xchg
adc
sbb
testl
add
jbe
pusha
sub
mov
je
and
adc
cli
xor
push
dec
cmp
ss
jmp
adc
lret
jmp
sarb
jbe
jae
pop
fs
cmpl
lahf
sbb
jecxz
in
lret
push
cmpsb
adc
xchg
cwtl
stc
lcall
push
in
or
loop
cmp
scas
std
mov
cli
ds
jle
loop,pn
sbb
mov
out
jbe
lds
decb
push
dec
aaa
and
loope
repnz
insl
cmp
sbb
add
mov
cmc
xchg
lcall
or
add
cltd
jbe
push
das
mov
ss
es
cmc
int3
pop
cli
dec
jle
adc
add
sub
insb
push
out
in
jno
test
std
aad
orl
sbb
mov
sub
push
mov
mov
lahf
dec
jo
xlat
outsb
xchg
and
fs
jg
ds
out
in
stos
jns
daa
int
cltd
pop
mov
pushf
les
dec
and
shr
cld
dec
xor
addl
sbb
mov
rorb
roll
ja
daa
int
jns
pop
and
mov
cwtl
aad
in
push
ljmp
insl
add
test
xchg
ljmp
mov
lods
pop
xchg
pop
pop
pop
mov
cmpsl
mov
add
mov
ret
mov
aas
or
stos
in
add
mov
inc
fistpll
xor
push
imull
and
test
cmp
dec
negl
push
dec
repnz
mov
gs
jmp
push
in
ss
sub
pop
enter
adc
sub
push
popa
mov
inc
fcmove
ss
pushf
add
idiv
push
sub
push
test
xor
es
lahf
popf
fnstenv
xchg
data16
jge
imul
cmp
ds
repz
pop
fstpl
jle
dec
insl
inc
outsb
dec
jmp
jb
mov
ja
ss
out
test
inc
cmp
dec
cmp
jmp
test
call
dec
cli
pop
jge
mov
jne
cmpsb
lret
outsb
cmp
cmp
push
xchg
dec
aam
xor
and
les
xlat
aaa
push
jmp
jl
cmp
add
ret
pop
inc
movsl
xor
loop
xor
mov
les
cmp
sbb
add
in
fwait
dec
mov
enter
lods
je
mov
adc
jmp
mov
pop
ljmp
jl
nop
fcmovnbe
imull
sbb
xorl
nop
or
lret
lahf
mov
out
xchg
test
repnz
lods
xchg
lods
jp
mov
push
out
imul
pushf
fcoms
dec
push
out
iret
scas
daa
mov
scas
addr16
cmp
mov
loopne
add
push
frstor
push
mov
ret
fsubl
xor
jmp
jae
scas
pusha
shrb
scas
pushl
push
mov
sbb
dec
xchg
inc
in
cld
cltd
adc
dec
push
add
aam
jb
out
add
push
pop
outsb
outsb
and
dec
adc
int
cmp
push
push
stos
cmp
ss
adc
xchg
scas
mov
mov
pop
sti
push
pop
push
inc
mov
jae
stos
mov
xor
sbb
je
jge
mov
add
dec
adc
addr16
gs
test
ret
imul
push
jmp
inc
fbstp
push
test
aam
xor
ss
pop
jae
sbb
mov
popa
xchg
mov
int
xchg
loopne
pop
jb
sub
or
adc
jmp
dec
ret
and
add
sarl
pop
pusha
rcl
data16
inc
je
int
icebp
jnp
jnp
pushf
dec
loop
push
lea
incl
incb
mov
push
int3
in
pop
xchg
jp
ret
mov
cmp
add
cli
scas
imul
mov
xlat
xorl
jae
imul
mov
push
pop
jmp
sub
pop
sbb
sti
add
jno
cmp
ror
cmp
mov
mov
ss
mov
iret
mov
xchg
sbb
lea
aaa
sub
movsl
movsl
call
data16
sbb
idivb
mov
cwtl
cmp
or
mov
iret
pushf
xorb
notl
fcomps
inc
add
stos
adc
mov
or
sub
sarb
mov
jne
in
stos
mov
cwtl
xor
sbb
stc
notb
ljmp
pop
enter
push
dec
push
loopne
inc
add
pop
push
sub
pop
repz
pop
rol
fstps
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
insl
cmc
add
test
adc
mov
pushl
xchg
mov
stos
cmp
in
sbb
enter
xchg
movsb
xchg
xor
mov
mov
enter
jg
xchg
pop
movsb
xor
ss
xchg
movsl
shll
pop
lret
adc
push
popa
movsb
xchg
mov
cmp
loope
inc
mov
nop
cmpl
mov
sub
mov
xor
lods
lods
mov
sbb
in
insb
fistl
xchg
test
vpmacssdql
insl
dec
shll
outsb
cmpsl
cmpsl
jbe
or
jmp
aaa
and
sub
xchg
add
inc
mov
insb
push
loope
stos
or
push
and
out
loope
shl
sbb
mov
loop
add
addl
test
xchg
dec
outsl
push
add
in
stos
mov
out
and
adc
add
adc
pop
cltd
fwait
cmp
mov
lea
orl
pop
fistpll
pushf
adc
add
mov
lahf
ror
mov
push
or
pusha
adc
push
arpl
or
decl
inc
testb
fstl
imul
push
fdivr
jl
and
icebp
cmpsl
sub
stos
incl
mov
push
jnp
push
repnz
shll
push
push
sbb
fs
push
clc
cmpsl
mov
cmc
aam
inc
jmp
push
aam
push
cmp
out
pop
pop
xor
cmc
mov
mov
cltd
add
add
cmc
pop
cmc
rorb
daa
lcall
add
std
or
xor
ret
loopne
jg
inc
pop
mov
in
dec
cld
inc
inc
and
sub
lcall
push
jnp
lcall
mov
addr16
inc
mov
push
dec
mov
inc
inc
out
mov
mov
cli
repnz
ds
cld
loopne
lcall
jno
cmc
popa
testb
mov
dec
push
xor
push
push
cmp
sub
jle
idivb
xlat
cmp
jge
popf
jns
xor
pop
popa
inc
mov
jmp
mov
mov
adc
fs
or
pushf
push
xor
mov
call
pushl
mov
xlat
jmp
js
out
xor
test
aas
jmp
mul
xor
vmovaps
pushf
jecxz
stos
movb
lods
add
dec
lea
adc
and
sbb
xchg
cs
xchg
mov
adc
adc
out
mov
xor
loopne
mov
int
cmc
and
push
rclb
roll
and
int
shrb
fstpl
mov
scas
jne
or
cmp
shr
pushf
push
mov
addb
add
ja
mov
stc
loop
adc
mov
mov
mov
pushf
pop
in
dec
pop
mov
mov
sbb
mov
lock
idivb
test
push
mov
or
inc
addr16
jle
dec
divb
xchg
or
mov
popa
or
mov
aam
je
pop
sbb
rcr
or
pushf
popa
jmp
or
push
lcall
movsl
pop
pop
jecxz
pop
cs
sub
add
mov
testb
sbb
push
icebp
lret
dec
imul
data16
or
out
pop
dec
in
sub
xor
jne
jnp
mov
push
test
dec
or
push
pop
xor
push
scas
popa
inc
repz
test
add
lea
cmp
lcall
int3
stos
addr16
add
jo
out
or
mov
repnz
movsb
jno
scas
rolb
fiadds
mov
push
cmpsl
or
and
push
jns
jle
cmp
push
dec
lret
mov
cmp
dec
mov
cltd
mov
std
shrl
fisubrs
rcr
hlt
mov
mov
cltd
fildl
mov
push
movsb
adc
ret
dec
xchg
inc
jno
ret
fidivrs
loopne
xchg
pusha
cld
sahf
dec
jmp
xor
mov
inc
ljmp
aad
sti
out
pop
and
pop
xor
cli
push
sbb
adc
mov
out
cmc
push
fwait
xor
out
cli
mov
mov
in
mov
xlat
test
sub
scas
add
push
shl
cli
adc
mov
mov
pop
push
loopne
cs
jmp
in
mov
pop
push
pop
outsb
sbb
and
xorl
jecxz
shrl
xchg
pop
xlat
jo
dec
pop
leave
pop
and
subl
cltd
outsb
sbb
pop
loopne
lea
in
cmp
jo
pop
jecxz
outsb
pop
iret
adc
add
push
mov
mov
jns
sahf
push
mov
std
call
jnp
inc
aam
shlb
cmp
mov
inc
xchg
adc
popa
cmp
jb
js
xor
xchg
addr16
lret
push
test
dec
and
rol
jno
xchg
push
xchg
loopne
inc
test
pop
fcomi
in
arpl
popf
pop
xchg
inc
add
mov
jle
imulb
loopne
in
leave
lods
outsb
jecxz
jbe
out
fbstp
mov
inc
sub
nop
leave
pop
sub
and
inc
jp
mov
out
sbb
lods
mov
xor
push
xchg
scas
pop
pop
scas
test
lcall
aam
fwait
sub
xchg
in
call
mov
dec
popl
pushf
push
scas
add
fnstenv
leave
inc
jl
mov
aad
pop
pop
repz
add
inc
daa
pop
or
addr16
popf
mov
inc
dec
fwait
xchg
ds
mov
dec
orb
scas
sub
mov
xchg
scas
pop
cmpl
call
testl
js
lods
mov
outsl
xor
push
faddl
cmpsl
inc
ljmp
pop
fcoml
mov
hlt
push
std
mov
jnp
je
and
aaa
pop
iret
sahf
push
fs
sbb
mov
mov
push
push
mov
add
lock
pushf
jno
ja
mov
daa
pop
mov
inc
xchg
lock
lcall
sbb
mov
shll
popf
jae
outsl
sbb
cmp
jl
inc
cmpb
popf
movsl
mov
push
psubusw
clc
xor
mov
insl
sub
fwait
pop
mov
sub
cwtl
and
dec
adc
mov
xor
stos
jae
dec
arpl
xorb
cmpb
push
sbb
daa
xor
adc
xor
pop
call
sbb
xorb
ret
jae
addl
jge
fistps
push
mov
cltd
cltd
push
sub
mov
mov
adc
nop
cmc
outsb
sbbl
lret
and
popf
sahf
fisttps
call
fisubs
les
fucomip
icebp
xor
xor
sbb
sti
adc
out
mov
dec
pop
xorb
dec
push
xor
mov
aad
loope
das
ds
mov
and
sbb
pop
pop
into
mov
cmp
add
mov
jmp
mov
sbb
xchg
in
stos
jo
inc
jle
inc
mov
insb
cmpsl
into
mov
dec
cmpsb
vpaddb
stc
mov
in
int3
rolb
mov
or
packssdw
mov
sarw
inc
out
sub
adc
mov
test
cwtl
adc
lock
es
test
mov
jb
in
xor
ljmp
dec
scas
cmp
pusha
sbb
and
les
pop
and
pop
inc
mov
sbb
shr
lods
mov
cmp
fldl
int3
or
mov
rorl
iret
je
clc
add
mov
lds
daa
daa
adc
add
jns
or
push
dec
insb
pop
aas
xchg
mov
dec
and
jnp
sub
jne
and
mov
mulb
in
stos
jo
push
add
mov
mov
subl
xchg
movsb
sub
dec
loopne
mov
push
iret
pushf
repnz
mov
push
mov
add
pop
sub
rorb
movsl
cld
jp
inc
ret
add
lret
int
bndstx
adc
ds
inc
inc
js
rcrl
subl
mov
cmpsl
mov
mov
jbe
or
lret
cmpsl
cltd
data16
into
sbb
adc
xchg
inc
cli
mov
hlt
scas
inc
lea
sbbl
fs
stc
xchg
dec
mov
idivl
jb
cmc
in
dec
dec
icebp
imul
xchg
sbb
arpl
jecxz
ret
lahf
std
cli
mov
cmpsb
aad
add
pop
mov
pop
push
lret
addr16
popf
movsb
addr16
cld
sbb
icebp
aad
jmp
jno
pusha
xor
cmpsl
popf
xchg
sub
xchg
cltd
sti
pop
push
dec
push
cmpsl
sahf
cmp
shlb
iret
jne
mov
enter
xchg
cmpsl
sbb
mov
lret
jg
lods
test
push
dec
dec
popl
push
lods
sub
sarb
xor
out
ret
and
pop
fsubl
das
loop
sbb
xor
jmp
cld
call
xor
mov
xchg
and
mov
pop
ds
nop
out
ds
bound
test
in
aaa
lret
push
loop
or
mov
daa
fsubr
inc
scas
mov
out
divb
lods
adc
add
xor
or
mov
jl
mov
push
xchg
mov
inc
mov
scas
in
fs
mov
mulb
adc
xorl
shrb
mov
cmpsl
xor
sbb
mov
xchg
fisubrl
push
add
mov
xor
xor
repnz
ds
adc
jecxz
or
sub
inc
aam
pop
movsl
sbb
hlt
int
mov
cmpsl
cmp
pop
fsubl
dec
mov
fistps
scas
and
int3
mov
mov
mov
loop
aas
push
out
notl
ja
pusha
xchg
mov
and
and
sti
daa
jecxz
mov
and
dec
std
insl
bswap
lcall
and
mov
mov
push
pop
jmp
scas
push
xchg
sub
push
sbb
add
adcb
xchg
and
repz
dec
mov
fcompl
jne
mov
jno
mov
jnp
stos
mov
mov
je
xchg
lods
xchg
xchg
xor
test
xchg
mov
fsubrl
lcall
iret
repnz
into
cmp
push
enter
mov
mov
insb
and
cmc
jp
xchg
cmp
xchg
loope
lods
addr16
mov
fistpll
adc
pop
xchg
insl
add
cmp
cmp
pop
adc
sbb
push
lcall
loopne
sbbb
sub
jg
sub
sbb
dec
in
insb
call
jge
push
sub
loop
push
xchg
insl
jno
mov
mov
sbb
cmp
aaa
mov
lcall
rcll
roll
iret
pop
pop
filds
shll
push
adc
sti
add
popf
and
pop
xor
or
xchg
dec
cmp
mov
push
pop
push
pusha
push
clc
xchg
leave
fistps
popf
nop
jbe
repz
lret
and
dec
xchg
arpl
bnd
icebp
int3
cwtl
or
or
imul
push
push
mov
sub
mov
adc
int
idivb
push
sub
mov
fs
jle
sbb
in
loop
mov
fiadds
rcll
lods
push
leave
xchg
adc
xlat
data16
jmp
or
sbb
xchg
inc
xchg
and
repz
push
mov
dec
lods
lds
lea
add
pop
pop
push
jo
cmpsb
cwtl
out
sub
adc
sub
ss
cmp
clc
mov
std
into
pop
mov
data16
mov
scas
mov
push
lret
aam
loope
dec
push
fs
pop
mov
test
flds
mov
fidivl
jge
mov
insb
cmp
inc
sub
jg
in
adc
xchg
mov
fbld
jg
sbbb
imul
imul
cmp
int3
movsb
add
in
ljmp
loope
out
mov
sbb
mov
leave
push
addr16
jnp
jno
ret
subl
xor
inc
mov
jns
and
mov
cwtl
dec
xor
dec
mov
fcoml
cmpsb
je
js
jmp
test
cwtl
ljmp
and
mov
xor
inc
ds
push
mov
mov
test
sbb
cmc
mov
sbb
push
xchg
sbb
insb
sub
push
insl
jb
jae
jb
sbb
popf
scas
xchg
push
bound
push
jae
sbb
fisttpll
cmp
cli
add
pop
das
mov
adc
rolb
mov
insb
pop
popf
orl
xchg
ds
lods
or
pop
cmc
jle
lahf
sbb
dec
adc
movsl
or
mov
scas
inc
mov
mov
vmulps
dec
scas
and
mov
mov
mov
call
mov
clc
and
mov
cmpl
sbb
pop
cmc
insl
xor
dec
into
add
lods
push
xchg
inc
rolb
lock
in
ret
pop
xor
sar
jb
mov
push
inc
mov
cli
rcr
sub
cld
sub
adc
subl
lret
jle
xor
movsl
inc
sti
adc
lds
and
sub
and
es
cmpsb
pop
rcrb
dec
lock
mov
adc
ret
mov
xor
add
mov
lret
mov
or
xchg
imul
inc
repnz
xor
push
gs
mov
loopne
cmpsl
push
pop
daa
mov
sbb
jbe
aad
aad
addl
mulb
je
les
xchg
js
mov
insl
stos
mov
popf
inc
fdivrp
adc
xor
ja
fdivrl
sub
xor
lods
ficomps
jo
sar
imul
jge
aad
inc
cmp
lret
pop
sbb
mov
xchg
mov
das
inc
scas
mov
fidivrs
aas
stc
shrb
fs
sbb
les
sbb
pop
fsubp
cmp
ficoml
outsl
loope
stos
sub
aad
or
les
movsl
lcall
popa
sub
sbb
mov
adcl
setp
sbb
sar
push
push
nop
jmp
xor
aas
mov
insl
ficompl
ss
xor
add
pop
dec
pop
in
pop
pop
lahf
roll
add
shlb
mov
bound
lods
leave
lret
arpl
cmp
add
lods
rcl
nop
insb
dec
inc
popa
push
lret
popa
test
dec
xlat
lret
mov
test
clc
xchg
popf
inc
cli
mov
jo
or
out
decl
sub
sbb
test
xlat
mov
or
add
xchg
out
icebp
in
cmpsl
cmpsl
and
in
jbe
rep
arpl
movsb
rcrb
mov
lret
repz
fsubrs
enter
in
pop
xchg
outsb
and
pop
imul
outsb
mov
sbb
adc
scas
xchg
add
mov
mov
adc
inc
and
xchg
adc
jne
inc
cmp
or
jle
insl
add
pop
pushf
xchg
sahf
and
loopne
sub
into
mov
out
rcll
mov
xchg
fwait
jl
push
mov
dec
push
xor
xor
and
xorb
cs
jae
mov
fnstenv
xchg
test
and
fldl
stos
mov
popa
dec
aaa
scas
add
cltd
daa
inc
push
push
ror
inc
call
cwtl
jle
adc
sbb
mov
sar
int
jb
sub
fisubs
mov
je
pop
insl
mov
xchg
popa
popa
scas
stc
or
xchg
popa
pop
jge
xchg
xor
cmpsl
lret
jecxz
xchg
into
hlt
mov
xchg
stc
lcall
pshufw
lock
pop
and
cmp
dec
aaa
add
jge
dec
repnz
xchg
mov
sub
mov
enter
in
mov
sahf
cs
mov
or
rorb
jns
mov
jbe
jo
inc
sub
adc
mov
and
incb
shll
sbb
fisttpll
dec
mov
stos
jg
cmp
adc
mov
add
or
push
mov
sbbl
inc
cmpsl
imul
pop
push
ja
out
cmc
in
xchg
jge
iret
cmp
adc
fs
xor
pop
sub
sub
adc
aam
out
adcb
enter
lret
subb
cld
push
xchg
les
ret
test
mov
fiadds
mov
add
mov
add
mov
test
mul
mov
outsb
mov
gs
mov
ds
jp
push
ret
cmp
push
and
pop
mov
std
rolb
sar
call
mov
aas
arpl
sub
inc
jp
repz
aaa
add
push
sub
mov
daa
test
outsl
sub
inc
mulb
jnp
leave
leave
and
cmp
loope
mov
clc
adc
subb
mov
jecxz
addr16
sbb
mov
mov
inc
adc
xor
lods
xorl
xchg
fsubrs
cs
dec
insb
push
in
out
or
or
addl
pop
mov
out
lock
jge
enter
cmc
sub
insl
mov
and
outsl
and
pop
sbb
xchg
and
pop
ds
inc
out
ret
stc
mov
and
in
ja
push
mov
imul
repz
pop
nop
idivb
insl
lcall
fnsave
dec
sahf
mov
pop
or
rcll
xchg
mov
mov
mov
sub
xchg
aaa
jo
and
pusha
dec
mov
fdivs
xchg
mov
addr16
cmp
cli
mov
jl
repnz
loop
imulb
pop
dec
cs
sti
or
cmc
pop
push
outsl
mov
add
cmpsb
dec
inc
cmp
fwait
xchg
adc
in
lret
mov
mov
stos
aaa
xor
dec
push
jbe
xchg
jl
scas
sahf
xor
hlt
mov
cs
orb
testb
pop
and
add
mov
mov
ss
enter
push
xchg
add
sub
push
imul
popa
mov
je
adc
push
gs
sub
nop
sahf
jno
push
nop
inc
adc
cmp
popa
fchs
aam
sub
adc
mov
fs
dec
fistpl
xor
adc
mov
push
xor
icebp
fsubrp
mov
mov
sub
call
push
xor
stos
mov
mov
jne
dec
ja
dec
testl
rcrb
lret
les
ljmp
push
mov
xor
out
mov
mov
and
dec
push
sysexit
lea
add
inc
cltd
and
push
popa
jne
mov
mov
add
pop
xchg
pushf
rcrl
sub
mov
mov
dec
mov
push
mov
sti
add
xor
mov
sti
pop
fcomip
push
daa
mov
sbb
add
mov
jno
loope
mov
sti
out
bound
aas
and
mov
adc
mov
cmp
testb
push
ret
mov
sbb
pushf
fisubrs
js
imul
aas
and
mov
sbb
lret
mov
rcll
mov
outsb
inc
mov
inc
lock
into
cmp
test
and
aad
scas
daa
xchg
cmp
xor
imul
cmp
or
dec
loopne
pop
dec
sub
int3
add
arpl
xchg
fldcw
mov
adc
leave
jl
fldcw
inc
in
push
loope
ss
cmp
jp
xlat
mov
add
out
lods
xor
lods
and
mov
add
push
push
inc
dec
outsl
mov
mov
shll
sbb
call
mov
imul
sbb
inc
mov
aad
xchg
xchg
loope
in
mov
lcall
jno
cmp
push
shr
and
popf
pop
push
add
sbb
lret
les
int3
xchg
xor
repz
lods
or
out
fld1
push
popf
inc
mov
adc
cmpsb
lea
repz
fisttpl
cmpsb
inc
fnstsw
or
lds
loopne
sbb
mov
aad
mov
cmp
jp
sti
stc
add
sub
in
pop
mov
fwait
push
lea
loop
testl
adcl
adc
test
stos
push
js
fnsave
mov
fdivrs
xor
ja
leave
cmp
cmp
and
into
insl
xor
and
cmp
dec
bound
xor
adc
nop
or
push
aam
pop
or
add
out
add
cmpsl
push
cmp
push
cmp
add
mov
mov
mov
jns
mov
inc
xor
mov
sub
movl
imul
hlt
je
mov
push
ljmp
mov
mov
or
mov
sbb
xchg
push
pop
xchg
mov
lret
cmp
cltd
cmp
mov
dec
pusha
jno
lods
xchg
lods
loopne
addb
jbe
lahf
dec
rorb
jno
and
xor
sbb
sahf
inc
imul
add
pop
cmpsb
mov
in
and
pop
or
mov
cwtl
in
cmpsb
not
loopne
cld
sub
je
jge
jae
ret
add
mov
mov
add
xor
lret
mov
inc
ret
xlat
pop
sub
out
pop
cmc
jns
insl
mov
out
pop
xor
fsubs
jns
jns
jns
jmp
aas
adc
clc
push
jo
frstor
xor
lock
add
pop
push
jns
jns
ja
cmp
adc
or
sti
push
pop
std
mov
push
fisttpl
mov
sarb
sub
and
shrl
pop
cmpsb
aam
xchg
andl
std
jns
adc
mov
mov
xchg
sub
shl
push
jmp
sti
inc
mov
sbb
or
pop
sarb
push
ret
outsb
les
lret
out
jp
stos
fwait
inc
xor
data16
outsb
pop
xchg
mov
xor
cmpsb
pop
add
and
lock
push
rdmsr
rclb
pop
xchg
mov
inc
flds
aaa
pop
and
inc
cmp
add
je
sub
outsb
test
jnp
pop
repz
jno
push
mov
enter
cmc
lret
orps
and
mov
out
mov
pop
int
sub
arpl
sub
dec
into
dec
jp
idivl
sbb
pop
testl
movl
inc
loop
jne
xorl
xchg
jg
add
mov
ja
jne
imul
push
subl
mov
js
xchg
shrb
cmpsl
lods
add
fmul
lret
cld
sbb
out
addr16
jb
jbe
cli
add
insl
lock
or
mov
lods
out
jmp
xchg
or
push
and
add
mov
or
rcr
nop
fucomi
mov
jge
nop
pop
mov
mov
push
and
pop
sbb
add
cwtl
lock
push
loope
dec
decb
mov
pop
arpl
test
pop
adc
mov
cmp
ret
movntps
inc
cmpsb
sar
mov
loop
adc
cmpl
mov
xchg
popf
andb
int
sub
popa
pop
mov
push
imul
ret
mov
mov
subl
imul
aaa
cmp
jno
out
and
ret
movsb
dec
sbb
outsl
insl
xchg
movsl
xchg
xor
nop
xchg
pop
cmp
pusha
inc
cli
fwait
shlb
sbb
loopne
push
pop
cli
adc
xchg
shlb
movl
xchg
aad
xchg
imul
movsl
add
repz
popf
add
cmpsl
xchg
pop
fwait
xor
jp
sbb
cmp
adc
add
xor
addb
icebp
mov
push
push
pusha
jle
nop
push
mov
pop
mov
mov
pop
addr16
lods
les
dec
cmp
inc
cmp
paddusw
scas
movsl
jne
and
xchg
mov
cmp
push
test
inc
adc
mov
sbb
adc
xor
or
dec
fldl
pop
and
iret
mov
movsl
cmpsb
pop
mov
std
push
cli
movsl
or
mov
stos
sti
or
cmpsl
inc
out
xchg
push
pop
pop
fs
mov
andb
add
xor
dec
add
mov
cltd
sbb
test
mov
dec
adc
iretw
mov
inc
jecxz
cld
inc
ret
mov
fnstsw
aad
pop
jecxz
leave
dec
jge
sub
push
mov
mov
push
mov
sbb
mov
out
mov
repz
jp
test
jns
mov
sub
pop
xchg
test
rol
dec
test
and
ret
hlt
icebp
jp
cmp
and
pop
inc
bound
into
cld
jmp
sub
fisubrs
jne
sbb
repnz
nop
or
lock
xchg
mov
xor
dec
xorb
jecxz
repz
lock
adc
sbb
mov
jbe
lcall
dec
je
lret
mov
sahf
push
pop
roll
aam
or
loope
sub
mov
mov
or
xor
add
stc
mov
cltd
dec
xor
out
pop
adc
hlt
ret
mov
xor
subl
je
sub
mov
int3
test
clc
add
xlat
sbb
inc
add
or
pop
xchg
mov
cltd
mov
call
lret
cmpsb
push
sti
mov
test
xchg
fsubp
jp
xor
xor
cmc
mov
insl
pop
sub
ja
call
fs
idiv
jp
xchg
test
adc
mov
cmpsb
outsb
sbbl
mov
xchg
das
mov
aad
and
je
cmc
into
ficompl
mov
or
mov
pop
fdivrs
scas
ss
arpl
scas
adc
or
jmp
int
pop
mov
enter
inc
in
fldl
pop
cmp
and
enter
jmp
pop
lret
push
push
sbb
mov
lock
in
jae
and
xor
arpl
aam
push
int
mov
sbb
adc
enter
cmp
mov
movsl
lock
inc
push
js
or
jl
cmpsb
pop
arpl
mov
mov
stc
mov
cmp
out
pop
push
mov
movntq
sbb
jle
sub
fs
push
mov
mov
insl
mov
pop
rcr
push
insb
call
and
xchg
pop
jmp
push
loope
rolb
scas
push
mov
imul
imul
sahf
and
popf
aam
rcl
or
int3
push
out
xor
sbb
xchg
cmp
mov
fstps
mov
jne
or
xor
sbb
test
jbe
jo
lods
sahf
pop
sbb
add
f2xm1
in
aaa
add
sarl
mov
scas
xchg
aaa
sub
mov
jmp
adc
flds
daa
jns
out
fsubrs
add
cltd
pop
jl
subb
addr16
popf
xor
ja
outsb
xchg
mov
pop
sbb
push
loopne
dec
jbe
mov
mov
aad
dec
fstp
pop
dec
adc
enter
psrlq
das
aam
shll
push
and
test
stos
mov
notb
pop
mov
in
dec
scas
cmp
sub
orb
in
and
adc
sub
loopne
aad
mov
jl
pop
jge
ja
jg
push
ret
xor
cld
scas
adc
and
mov
adc
sub
testl
ja
sub
xchg
dec
repnz
mov
adcb
clc
push
rcl
orl
jo
call
das
fsubl
jno
mov
nop
adcb
inc
xlat
in
or
mov
in
jo
sarb
cmp
mov
inc
sbb
aaa
push
cltd
mov
fstp
mov
aam
jb
ret
cwtl
lea
mov
inc
mov
into
fisubrl
shll
cmp
fisttpl
jecxz
add
dec
mov
xor
in
sbb
scas
mov
mov
addb
add
mov
clc
fs
ret
inc
ljmp
mov
ljmp
mov
or
aad
dec
repnz
jno
push
movsb
mov
dec
add
lock
cld
inc
sbb
hlt
cmpsl
outsb
inc
pop
out
hlt
xor
mov
jnp
ja,pt
in
outsb
push
xchg
in
les
xor
inc
xor
fs
ljmp
shl
fsubrl
test
add
notb
mov
in
sbb
int
cs
cmc
add
push
int3
jns
icebp
repnz
setb
dec
inc
mov
popa
push
xchg
or
xchg
adc
jnp
cld
xchg
or
dec
jle
out
pusha
ss
andb
ret
out
dec
jecxz
fcompl
jge
addl
add
xor
movsb
xlat
or
ret
addr16
mov
popa
movsl
shll
cmp
test
insb
pushf
cltd
test
mov
cmp
stc
xlat
pop
fisubl
or
xor
xor
pop
lret
shrb
fs
jb
hlt
dec
fwait
fwait
aaa
or
cltd
shll
cmpsb
cli
mov
rcrb
rol
sbb
mov
mov
aas
inc
push
push
jmp
cmc
in
jns
sub
shrl
rorl
jae
xor
in
and
mov
sub
fwait
or
add
pop
mov
xchg
int3
mov
push
push
test
hlt
mov
adc
jl
dec
in
add
mov
jl
mov
lock
cmpl
divl
dec
mov
inc
lret
gs
cmp
stc
cli
cs
or
ds
jnp
fst
mov
xor
lods
jmp
inc
dec
pop
xchg
rorb
mov
fimuls
imul
ljmp
sub
movsb
and
call
adc
fs
bound
xchg
cmp
daa
sbb
dec
sub
insl
add
les
mov
jg
mov
pop
dec
jecxz
sub
xchg
xor
inc
push
enter
out
mov
adc
nop
fcoml
inc
ds
dec
mov
mov
outsb
loop
adc
mov
lcall
aam
lods
xchg
sub
iret
mov
jecxz
sub
stc
leave
sub
outsl
aas
ret
fildl
or
cmpsb
ficomps
dec
sub
cwtl
jge
arpl
in
push
iret
es
sub
adc
mov
lock
lcall
ficoml
dec
fmuls
loop
std
ret
and
outsl
pop
lcall
jo
sti
xor
lret
lahf
shrb
jl
push
pop
ret
sarl
and
mov
mov
subb
out
inc
sbbb
mov
dec
in
pop
pop
scas
filds
hlt
dec
insb
jo
leave
mov
mov
jecxz
loop
inc
jne
jne
jg
arpl
dec
lcall
les
test
inc
mov
cmpsl
fstps
in
leave
cmpl
mov
in
stos
in
sub
scas
or
or
mov
pop
or
aad
mov
in
sub
jp
adcl
jmp
mov
push
mov
mov
in
stos
or
sub
mov
out
mov
pop
nop
jge
js
xor
lret
sub
notl
test
clc
es
dec
test
das
sbb
out
push
pop
mov
cmpsl
inc
dec
loop
out
pop
mov
dec
cmc
bound
cmp
int
into
mov
pop
mov
bound
push
pop
nop
xchg
rcrb
mov
xadd
nop
inc
cmp
ret
cmp
mov
scas
xchg
shlb
enter
leave
lahf
test
jno
aam
aad
xor
fsubs
aaa
in
ss
movsb
sub
std
lods
call
bnd
xlat
or
popf
adc
and
pop
scas
in
ret
xor
bound
xchg
jae
xor
mull
leave
xor
mov
push
sbb
js
test
and
cmpsl
sub
jmp
cs
dec
and
mov
adc
cmp
test
xchg
hlt
sbb
into
jno
lcall
call
cmpsb
bound
sub
arpl
or
mov
shlb
push
pop
test
movsb
pusha
es
test
mov
pop
inc
inc
out
fst
cmpsb
or
aaa
jl
into
outsb
rolb
push
arpl
mov
pop
ret
add
fimull
test
outsb
sbb
mov
inc
pop
push
push
test
subl
jl
clc
scas
dec
adc
xchg
addr16
mov
xorb
pop
lret
xor
repz
and
mov
fwait
push
pop
jecxz
aas
mov
cmp
pop
lods
pop
sbb
imulb
sbb
mov
dec
push
jecxz
inc
std
inc
inc
movsb
xor
inc
xor
sub
cmp
sbb
pop
add
enter
pop
add
arpl
adc
js
or
jns
mov
pop
xor
mov
or
icebp
mov
stos
bts
sbb
js
sub
mov
outsb
lret
orb
sbb
scas
xor
movsl
movsb
push
inc
add
mov
xor
xchg
mov
adc
jne
lea
adc
test
mov
imul
in
inc
cmpl
mov
out
mov
out
shl
in
std
push
pusha
jne
imul
out
push
cmpsb
ds
popa
repz
and
test
fs
pusha
aam
pusha
inc
jno
xchg
lret
out
jb
icebp
sub
xor
push
sub
outsb
mov
adc
in
addr16
ret
out
insl
stc
popl
sti
repz
jmp
mov
ja
out
and
mov
fimuls
sub
lea
orb
fwait
shll
bound
mov
pop
push
lret
jmp
xchg
dec
pop
inc
fbld
cmpb
scas
and
xor
out
insb
adc
imul
lahf
push
xchg
cli
lcall
out
insb
mov
xchg
cltd
imul
inc
ja
fcmovnb
cmpl
cli
movb
loop
add
frstor
jg
pop
aam
dec
fidivl
jecxz
sbbl
xchg
adc
test
adc
mov
pop
mov
scas
xchg
cmpsl
in
fucomi
cmpsb
cwtl
cwtl
clc
test
cli
js
sub
int
ficompl
cmpsl
inc
lock
and
stos
mov
pop
lahf
pop
jge
inc
leave
push
aaa
stos
sahf
pop
out
lret
testb
jo
pop
push
sub
fsub
rcrb
cmp
jnp
je
mov
inc
cltd
pop
ss
lea
sbb
mov
addr16
rolb
cmp
pop
inc
daa
or
mov
popa
pop
sub
es
test
test
mov
cltd
gs
mov
mov
fwait
push
push
xor
jg
int3
dec
arpl
cld
adc
int
push
cmpsb
shll
andl
js
dec
dec
push
mov
dec
in
outsb
mov
lahf
xchg
cs
rcrl
scas
imul
mov
pop
addr16
rcll
push
rclb
lds
std
fsubrs
sti
cmp
loope
jb
jo
pop
jnp
xchg
imul
bound
or
hlt
dec
test
mov
out
leave
out
cmpsb
xchg
push
pop
sub
aam
and
inc
nop
jno
in
enter
outsb
xor
rcr
and
daa
loopne
pop
insb
ljmp
fistpl
mov
ja
xor
sub
scas
stc
orb
push
sub
adc
idiv
cld
mov
pop
daa
in
inc
sar
add
push
fidivl
mov
stos
sub
add
arpl
dec
outsb
lret
arpl
mov
sub
adc
cmpb
or
sbb
cld
push
rorl
pop
xor
lret
jp,pt
movsb
mov
inc
cwtl
sub
int3
fisttpll
int3
adc
lret
push
aas
mov
push
add
xchg
and
aas
js
pop
adc
mov
xor
sbb
or
pop
in
cld
sbb
xlat
xor
jne
imul
push
ljmp
cltd
pusha
lock
push
mov
cmp
out
mov
aaa
jbe
cmpsb
jno
jo
mov
pushl
jl
ljmp
je
rclb
pop
xchg
out
jnp
pop
in
jbe
jae
lock
rcr
and
stos
test
or
mov
mov
dec
jle
cwtl
mov
inc
loope
test
sub
cmp
int
adc
pop
adc
xor
mov
add
adc
dec
pop
xchg
pop
mov
dec
pusha
das
pop
mov
call
fldcw
sbb
in
mov
aas
and
and
ss
mov
adc
push
fcoml
fldenv
pushf
add
jl
int3
mov
mov
cs
fs
dec
push
jmp
and
stc
add
sub
xchg
jb
mov
imul
push
sti
lock
mov
sar
sub
movsl
mov
inc
inc
stc
mov
rep
add
xchg
jmp
push
shlb
cmpsl
mov
lahf
pop
lahf
and
rcrb
fwait
or
adc
push
inc
rorl
push
scas
dec
vmovlpd
mov
inc
fisubl
fs
js
xlat
pop
or
pusha
testb
adc
aaa
or
adc
hlt
scas
mov
pop
or
lods
mov
loopne
pop
iret
jns
loope
xchg
dec
cs
rorl
xchg
scas
aas
dec
push
mov
dec
addr16
addr16
xchg
rolb
movsb
jg
jg
sub
loop
sub
js
or
push
rorb
xor
loopne
mull
lds
in
daa
and
repnz
mov
push
pop
aaa
cmp
sub
jno
loope
rcrl
sbb
mov
loope
sub
xor
andb
sub
pop
sub
mov
push
dec
int
bound
and
dec
add
inc
sbb
dec
jmp
icebp
aaa
sbb
sbb
jge
adcb
cmp
sbb
repz
in
jno
fcomip
pop
mov
push
mov
sbb
dec
inc
adc
pop
pop
adc
loope
mov
ja
mov
cmp
icebp
icebp
hlt
and
cmpsb
inc
xchg
call
pop
mov
jl
shll
or
dec
sbb
push
and
lahf
pop
loop
ret
mov
sbb
mov
push
adc
push
cmp
pop
loopne
inc
sub
mov
daa
js
xor
ror
cmp
mov
mov
bound
pushf
cld
repnz
xacquire
imul
xchg
shl
in
aam
jl
sub
cmp
lods
jl
xchg
mov
stos
dec
xor
jnp
fstpt
and
push
jecxz
jnp
ja
xchg
mov
mov
addr16
fcomps
ret
mov
leave
push
jb
sub
xor
add
adc
jl
insl
jge
xchg
out
or
mov
xchg
lret
repz
ficoml
test
push
sbb
popl
mov
loopne
dec
jno
addb
push
nop
mov
pop
cmp
fcmovu
push
pop
and
repnz
or
outsb
pop
mov
adc
cmp
inc
mov
sbb
cmpsb
std
cwtl
push
ret
inc
lret
xchg
cmpl
inc
mov
push
mov
fsubs
pop
mov
mov
jle
sahf
fnstsw
jnp
in
iret
outsl
loope
jo
into
into
ljmp
pop
jp
push
mov
negb
int3
mov
and
xor
jle
sbb
mov
sub
mov
fs
sbb
mov
sbb
mov
ret
scas
mov
fstp
std
int3
jne
sbb
std
addl
aam
mov
js
and
cs
inc
jmp
mov
out
fdivrl
ljmp
cmp
aam
in
lea
xchg
jb
rorb
rolb
shrl
pmullw
xchg
inc
sbb
dec
push
int
cmp
nop
stos
mov
mov
and
adc
mov
mov
lods
mov
fdivrl
mov
js
and
test
xor
push
mov
sbb
lds
in
adc
mov
pop
xor
les
mov
pop
lret
mov
cmp
xchg
sub
push
inc
xchg
add
fcmovnu
fdivp
mov
cmc
xlat
cmp
cwtl
je
adc
sub
lods
andb
call
addl
shll
pop
push
iret
ret
lods
aad
nop
aam
mov
mov
ds
idiv
jno
gs
pop
test
ss
or
notl
cmp
pop
sahf
shl
lea
push
xor
mov
cmp
icebp
bound
rcrb
push
hlt
push
stc
push
gs
cmp
inc
roll
pop
neg
add
dec
xchg
cmc
push
pop
push
mov
push
inc
mov
mov
mov
orl
push
xchg
lock
xor
push
aas
or
mov
pusha
gs
cmc
outsb
ds
jae
es
pushf
gs
sti
sub
push
push
in
mov
std
es
xchg
xor
es
fcompl
or
fwait
dec
stos
jb
mov
xor
adc
insl
sub
cvtpi2ps
lds
and
popa
das
push
push
or
lret
xor
nop
cwtl
push
jb
pop
leave
pop
in
add
xchg
adc
or
adc
ljmp
addl
push
xor
pop
push
adc
adc
scas
mov
sti
adc
or
in
stos
and
idivl
pushf
jge
dec
push
test
xlat
scas
enter
xchg
add
jle
inc
add
in
sub
mov
test
in
scas
xchg
sbb
push
mov
cmp
xchg
je
pop
adc
xchg
sbb
std
pop
inc
bound
jge
xchg
xor
imul
mov
mov
dec
inc
sbb
icebp
fmuls
lds
or
mov
daa
xchg
mov
xchg
scas
xchg
jnp
add
sub
jbe
pop
ret
fcmovnbe
cmp
mov
mov
mov
xchg
jbe
shlb
jle
push
dec
cwtl
add
ret
mov
dec
data16
bnd
push
cmp
adc
cltd
jecxz
sbb
scas
lock
outsb
adc
out
dec
loope
imul
out
fcomp
pop
lea
mov
xor
adc
outsb
call
cltd
sarl
jecxz
push
pop
sbb
nop
xchg
aam
cmp
adc
out
jmp
xor
loopne
jb
sarb
cli
mov
in
mov
add
out
sub
mov
loope
in
cs
mov
je
stos
repnz
jo
xchg
pop
cmc
stos
and
in
push
push
in
push
or
fs
fbstp
dec
pop
dec
push
repnz
pop
test
js
sbb
insl
outsb
pop
xchg
xor
leave
into
inc
imul
into
fsubrl
mov
ja
or
ds
or
xor
dec
push
pusha
jbe
lahf
lea
pushf
cmc
xchg
xchg
xor
je
adc
shlb
outsl
add
lahf
lahf
push
nop
leave
inc
fisttpll
in
xchg
hlt
xchg
push
xor
cmc
and
inc
movsb
testl
jb
xor
fmull
pop
je
push
test
fildl
subb
xchg
cmpsb
scas
mov
xchg
jmp
dec
adcb
fisttpl
sub
sarb
xchg
lret
dec
pop
pop
xor
dec
sahf
flds
mov
inc
push
outsb
sahf
push
mov
aaa
mov
jo
xchg
pushf
aam
div
jmp
pop
sarl
out
aaa
mov
jge
mov
andb
add
mov
jnp
lcall
sar
dec
nop
jbe
adc
out
pop
mov
mov
push
in
mov
shll
sub
pop
lock
or
mov
int3
movsb
xchg
pop
sbb
scas
inc
in
push
jnp
cld
cltd
pop
div
lock
mov
jne
xchg
xchg
fldenv
fimuls
mov
inc
xchg
mov
notl
unpcklps
add
cli
in
push
mov
inc
jmp
mov
mov
sub
movsb
dec
pop
jnp
mov
sbb
mov
or
test
sub
sbb
or
out
push
int3
std
sarl
xchg
pop
movsl
or
lock
aaa
addr16
scas
sarl
sbb
jnp
test
repnz
mov
inc
pushf
mov
lcall
jbe
cmp
in
aam
mov
mov
jnp
aad
adc
mov
cs
push
dec
mov
mov
repz
fdivl
dec
jae
adc
inc
sbb
mov
in
mov
xlat
pop
fidivrl
cmp
mov
sbb
shll
scas
mov
in
lock
xlat
gs
push
jo
outsl
in
mov
sbb
lock
ds
dec
test
sbb
lcall
mov
movd
imul
sarl
stos
roll
aas
ja
stos
xchg
inc
and
sahf
lahf
cmp
in
ficoml
inc
inc
fnstenv
das
mov
ret
test
sub
clc
rorb
lea
and
out
add
mov
push
xchg
push
pop
jl
ret
lods
push
std
sbb
jl
jb
inc
scas
addr16
or
mov
clc
rcrl
jb
loopne
js
nop
xor
mov
testl
dec
pop
test
imul
adc
int3
mov
mov
jmp
fistpll
fistpll
fwait
xchg
stos
xor
pop
out
cmp
xor
arpl
leave
in
rorb
adc
stos
lods
in
inc
dec
jecxz
cmpsb
jmp
cmp
in
out
adc
or
movsb
test
jns
sbbl
and
add
mov
in
insl
and
imulb
mov
pop
or
hlt
mov
cld
dec
dec
ret
arpl
fidivrl
popa
sbb
outsl
and
hlt
icebp
add
sbb
mov
les
aaa
add
adc
xchg
adc
movsb
push
clc
arpl
mov
js
notl
rcrl
pop
aam
stos
lds
mov
loopne
dec
shrb
push
fmuls
mov
xlat
cmc
fwait
ja
and
cmc
cmpsb
xchg
outsl
sbb
int3
in
movsb
movsb
nop
cltd
fs
sub
hlt
js
movsb
into
lds
and
enter
pop
mov
das
jno
lahf
sahf
jp
push
jno
cmp
inc
scas
loopne
sub
enter
popl
mov
inc
or
repz
add
enter
int3
or
insl
xorl
xchg
cmp
fwait
outsb
cmp
dec
movsb
or
jbe
pusha
or
inc
mov
aad
test
jno
shrl
and
das
mov
sbb
mov
out
push
je
jo
pop
pushf
push
pop
dec
and
xchg
sbb
outsl
ficoms
inc
cmp
mov
mov
and
cld
lret
lahf
into
scas
sti
ret
push
mov
pusha
out
add
sub
dec
test
sub
imul
mov
jp
bound
cmp
hlt
sahf
inc
aad
mov
mov
and
sub
mov
cmpb
jo
scas
inc
inc
mov
sbb
mov
mov
loope
add
mov
or
sbb
test
test
out
loope
push
sar
cmp
sbb
in
bound
fstl
leave
fstps
ja
repnz
stc
out
and
mov
inc
push
cmove
dec
mov
cmp
sarl
cmp
pop
out
jnp
lods
lea
out
arpl
dec
sub
mov
aas
fcoms
xchg
mov
int
repnz
xor
mov
ret
xor
stos
add
in
cmp
push
ret
xchg
adc
jle
mov
push
aas
cld
cmp
push
fcmovb
out
jno
mov
mov
mov
xchg
rolb
scas
cltd
mov
push
push
ds
sbb
sub
and
cmp
rclb
aad
push
subb
cmp
xor
negb
mulb
inc
fbstp
inc
jne
mov
pusha
insl
inc
add
mov
xchg
cltd
repz
dec
cmp
loope
adc
shll
cltd
lahf
lods
lods
inc
inc
xor
push
mov
negl
stos
call
push
icebp
and
jecxz
cmpsl
push
adc
xchg
popa
xchg
leave
mov
cmp
ret
mov
mov
imul
movsb
add
pop
xchg
mov
and
or
push
imul
jns
pop
push
out
enter
lahf
imul
call
insl
mov
data16
mov
add
repnz
inc
jge
cmp
fdivrs
push
into
test
les
aad
mov
or
xlat
or
out
lds
xchg
pop
jmp
sub
add
cmp
pop
enter
dec
pusha
xchg
lods
fiadds
shrb
cmp
sti
les
pushf
enter
pop
mov
sub
xor
mov
jne
pop
fiadds
or
pushf
insb
cld
jo
fs
test
lahf
out
in
std
jmp
jmp
push
ret
mov
nop
jb
adc
dec
fdivrs
jg
xchg
add
pusha
fdivs
mov
daa
out
data16
mov
and
fdivrl
mov
xchg
fadd
cmp
xlat
jecxz
inc
incb
sbb
jmp
adc
int3
enter
xor
cmp
mov
sub
push
arpl
or
xlat
lahf
popf
shl
hlt
jp
pop
sbb
repnz
mov
and
mov
push
int
repnz
push
mov
mov
cmpsl
int3
inc
lds
ss
cmp
jge
stc
pop
xchg
ljmp
inc
scas
outsl
inc
jo
inc
fisubrl
and
pusha
test
pop
push
xchg
adc
xor
push
scas
inc
lds
xchg
pop
hlt
jl
inc
fs
dec
out
pop
nop
sti
adc
sbb
add
stos
push
test
mov
gs
mov
dec
cmp
mov
sub
xlat
insl
push
cmp
negb
repz
pushf
pop
and
lods
addr16
add
sbb
daa
sub
ret
xchg
ja
ss
fnstenv
push
aam
fdivl
insw
jecxz
int
nop
sbb
shl
lcall
push
adc
test
inc
mov
dec
clc
cld
xor
rol
rol
pop
mov
cmovnp
inc
fs
test
pop
or
mov
fs
cmpsl
pop
inc
aam
leave
rcll
clc
mov
xchg
loop
sahf
ja
stc
or
sahf
adc
inc
pop
out
adc
pop
xor
test
xlat
mov
mov
adc
adc
xchg
inc
push
jbe
xchg
add
mov
lds
mov
mov
lock
xor
call
shl
mov
movsl
xchg
shl
push
loope
and
sub
std
push
cltd
and
and
add
dec
jmp
aam
stc
inc
mov
stos
dec
mov
mov
mov
and
xchg
inc
dec
mov
jmp
and
cli
xor
pop
cmpsb
sbb
sbb
lods
sbb
sahf
scas
cmp
cmc
loop
loopne
ljmp
xchg
or
dec
sbb
out
jns
cmp
fstps
mov
and
jne
ja
dec
test
and
mov
imul
sub
jae
inc
stc
ja
mov
mov
jo
sbb
or
test
sbb
popl
pop
sub
je
daa
or
jl
inc
or
mov
adc
cmc
xlat
dec
pop
mov
sbb
inc
ds
or
aam
rorl
lods
mov
xchg
and
aaa
pop
lods
adc
jge
in
cmp
xchg
iret
jne
xor
dec
fiaddl
xor
pusha
sti
and
into
call
div
shlb
xchg
pop
push
xchg
outsb
ljmp
mov
push
push
and
xchg
pop
mov
bound
ret
xchg
aam
inc
out
xlat
int3
outsb
hlt
scas
mov
mov
or
add
mov
adc
push
mov
fistl
mulb
test
dec
and
scas
sub
pop
aam
arpl
mov
pop
mov
xchg
mov
cmp
add
xchg
cmp
in
clc
dec
push
fidivl
icebp
repnz
les
addr16
inc
sbb
addr16
lea
test
inc
jae
ja
rcl
or
adc
inc
in
mov
jmp
mov
je
adc
dec
sub
jmp
cld
pop
in
sti
and
push
or
pusha
test
jno
xchg
mov
or
cwtl
adc
dec
test
xchg
push
out
sbb
inc
pop
push
adc
je
add
inc
repnz
mov
jmp
xchg
jne
loope
and
fcomps
leave
pusha
xlat
stos
push
rorb
pop
insl
jmp
data16
jb
call
cmp
xor
ltr
in
and
stos
cmp
jg
arpl
push
je
mov
dec
aaa
jge
xchg
test
jae
lock
inc
fidivrl
push
mov
pop
in
jne
adc
cmp
inc
add
fabs
xor
lds
cmp
sbb
addb
and
pop
fcomp
fwait
xor
stc
sbb
jp
sahf
xor
jns
mov
mov
popl
ss
into
leave
dec
pop
addb
int
cmc
fistpl
cltd
push
pop
xor
movsl
push
push
cmpsl
lcall
inc
xor
lret
addl
lods
aas
jecxz
inc
and
inc
fs
dec
stos
rcr
arpl
insb
xchg
aam
orl
lret
pop
cwtl
xchg
frstor
fcomip
subb
or
cmp
mov
dec
fldt
les
mov
pop
or
movsl
aas
pusha
inc
lret
mov
xlat
jno
add
push
call
fsubrl
xchg
push
add
cwtl
push
bound
loope
pop
jle
ja
or
pusha
sub
adc
ja
pop
jne
lret
and
jge
mov
xacquire
jge
jl
in
loopne
or
xor
ret
mov
push
fsubr
jecxz
ljmp
mov
lea
jg
add
or
adc
sub
cli
add
jecxz
les
fmull
fadd
mov
xor
lds
fs
dec
xlat
inc
xor
mov
dec
cmp
inc
gs
ss
icebp
in
lret
sbb
les
fcmovnbe
in
lcall
out
call
xchg
sti
rcrb
cmp
fdivl
out
pop
rorb
imul
negl
ja
or
imul
jnp
movsb
xchg
mov
add
push
xor
and
cmpsl
ret
xchg
sub
insl
xchg
sqrtps
subb
ret
and
test
mov
aas
lret
xchg
in
adc
imul
mov
inc
mov
sub
ds
stc
sbb
cmp
shr
xor
je
scas
test
int3
bnd
sub
int
jl
pusha
push
xchg
and
jae
mov
in
inc
and
mov
jle
mov
sub
cmp
mov
arpl
xor
out
cld
ret
dec
push
push
mov
faddp
mov
insl
xchg
cmp
sub
push
sub
pop
mov
shlb
das
out
xchg
aas
adc
out
add
cvtdq2ps
pop
test
frstor
leave
decb
dec
shlb
jno
nop
jg
pop
sbb
scas
sub
push
sub
adc
cmpsl
push
cmpsl
lcall
adc
pop
sbb
ret
push
push
mov
imul
aaa
js
inc
les
rolb
sbb
jle
insl
push
mov
popa
and
loope
mov
loope
loop
int
add
jl
sbbl
adc
dec
jg
jmp
dec
pushf
cmc
icebp
cmp
nop
shr
dec
xor
cmp
sahf
clc
imul
lahf
out
pop
xchg
fidivs
ss
enter
pop
xor
aad
xchg
pop
popf
inc
lea
add
fucom
mov
ljmp
pop
data16
out
or
jne
insl
push
jg
sti
mov
mov
jp
lock
jecxz
rolb
lret
rol
data16
jo
push
aaa
cli
inc
push
mov
inc
mov
push
mov
jp
xor
pop
into
add
inc
add
das
xchg
or
icebp
mov
lock
f2xm1
lds
or
hlt
jge
add
mov
cmp
mov
push
ss
fxch
sub
dec
push
sbbb
repz
mov
je
jno
lret
sub
mov
push
outsl
inc
sahf
mov
rcrb
mov
add
pop
arpl
and
push
cmp
and
ficoms
lret
aaa
cmp
iret
shrb
mov
nop
mov
jmp
add
dec
cmp
xorl
lods
jmp
jnp
or
add
dec
lds
push
std
or
pop
cmp
jge
xchg
nop
mov
das
lods
aad
call
mov
sub
shrb
std
inc
xor
loope
das
push
les
scas
pcmpeqd
and
jns
dec
insb
jbe
push
lock
mov
cmp
push
cmp
jle
inc
in
dec
sbb
sarl
jae
mov
f2xm1
movsl
loope
inc
cmpsb
jae
call
addr16
insb
and
mov
pop
mov
add
pop
cmp
les
aaa
inc
adc
pop
fcompl
fnstcw
xor
or
int3
sbb
xor
sub
adc
loope
mov
add
xor
push
lcall
fdivrs
repnz
hlt
push
negb
les
andb
test
sbb
ret
dec
dec
roll
in
and
je
xor
dec
inc
adc
nop
or
imul
cltd
inc
ljmp
sub
mov
jl
and
dec
test
enter
notl
ret
add
scas
aam
stos
cmpsl
push
mov
std
icebp
jnp
xchg
enter
dec
pop
ljmp
dec
dec
lods
pop
ljmp
xchg
in
out
ljmp
or
test
mov
mov
std
loop
es
xchg
xor
enter
jbe
mov
pop
pop
rcrb
sbbl
in
lods
adc
mov
outsb
mov
mov
pop
cmpsl
or
scas
shrl
pop
jl
push
cmp
xchg
jl
inc
adc
sub
mov
or
mov
mov
in
outsb
int3
adc
mov
call
nop
addr16
jae
popa
or
or
xor
and
jg
inc
sub
xlat
mov
inc
int
mov
mov
mov
outsl
div
xor
popa
inc
pop
outsb
xor
test
jmp
sbb
jecxz
out
sar
sbb
icebp
popf
pusha
cmc
sahf
cld
xchg
add
xor
pop
popf
les
inc
mov
add
rcl
imull
sub
ds
mov
fdivrl
and
popf
imul
and
pop
mov
mov
inc
bound
jnp
ss
jle
mov
inc
aad
mov
bound
add
xchg
aam
divl
and
js
aam
xchg
xchg
shll
mov
inc
mul
dec
ror
mov
fstp
pop
inc
pusha
imull
jo
pop
pop
sbb
mov
aaa
jno
lret
je
jno
sub
mov
xor
gs
mov
sbb
sub
nop
in
fucomp
push
lcall
lret
mov
outsb
je
pushf
pop
mov
push
add
scas
xchg
push
sbb
push
loop
jl
pop
mov
repnz
imul
pushf
inc
aaa
inc
dec
lods
or
jmp
fdivp
push
jns
sbb
xchg
mov
lret
and
out
iret
inc
stc
pop
ret
loopne
dec
cmpsb
mov
popa
popa
cwtl
mov
stos
sub
enter
pop
aad
xchg
sahf
aaa
outsb
aas
loop
cmp
fsubs
enter
in
out
ja
scas
mov
or
test
scas
add
dec
push
repz
mov
inc
inc
add
shl
cmpl
jle
sub
int
cmp
ret
or
scas
aaa
sbb
jns
ret
dec
call
and
fnstenv
cld
pop
adcl
fbstp
cmp
sahf
pop
fsts
sbb
stos
pop
aaa
dec
mov
inc
pop
aaa
je
inc
divl
orb
or
and
xor
lcall
jmp
inc
fcmove
push
sub
int3
sub
je
call
pop
pop
push
push
push
dec
stos
lret
push
add
ss
cmp
in
adc
push
sahf
mov
jmp
xchg
cmp
imul
xlat
shrb
orl
in
mov
fs
cmc
fildl
jmp
xchg
lret
sub
and
stc
dec
mov
test
out
dec
pop
mov
movl
cmpsl
or
loop
adc
xor
ficoms
dec
jp
push
jecxz
add
push
popf
xchg
imul
aad
test
mov
sbb
sahf
daa
ret
scas
pop
ja
add
jl
inc
int3
pop
cmp
push
push
mov
and
in
dec
loopne
popf
sub
cltd
lea
lret
add
into
in
call
lods
scas
cld
call
xlat
nop
inc
mov
test
ja
test
cld
inc
lods
notl
mov
fdivrs
repz
mov
je
pop
xor
sub
and
mov
mov
mov
ja
lods
mov
mov
cmp
insb
loopne
xchg
xor
insl
and
and
pop
push
flds
inc
xchg
addr16
fsubrl
scas
cltd
jecxz
xchg
mov
jbe
jbe,pn
xor
sbb
test
or
pop
rorb
daa
add
out
sbb
popa
stos
push
cmp
iret
add
data16
popa
out
or
add
jne
mov
push
jo
cld
rorb
gs
lahf
xchg
cwtl
push
pop
jnp
xor
int3
jo
lahf
je
loopne
cmp
mov
popf
push
mov
cmp
iret
repz
push
add
dec
test
aam
or
jno
fcompl
in
stc
mov
xchg
sbb
xchg
gs
xchg
jmp
ds
pop
sbb
xor
and
imul
das
or
fisubl
xchg
xchg
xor
and
xchg
add
lds
xlat
imul
out
mov
in
in
jp
adc
pop
in
add
loop
or
lret
jle
mov
mov
aas
mov
movsb
adc
or
inc
push
dec
xor
jle
sahf
leave
cmc
jl
fsub
test
xchg
scas
js
cmc
int3
ret
adc
cmc
inc
jle
cmp
mov
sub
xchg
or
inc
cmpsb
xchg
xchg
adc
jp
bound
mov
and
push
outsl
ds
aaa
out
adc
push
jecxz
popf
adc
dec
mov
cmpl
insb
sbb
test
scas
daa
mov
arpl
pop
lret
stos
out
popa
cmp
sub
jp
jge
sbb
xchg
ret
icebp
xchg
cmc
cmpsb
std
pushf
outsl
mov
dec
mov
in
out
dec
xor
push
dec
xchg
sub
mov
mov
push
outsb
sbb
lock
add
int
fmuls
and
arpl
sarl
push
and
adc
scas
mov
inc
lret
test
or
cmp
bound
push
ret
adc
jmp
inc
shl
out
mov
sti
daa
es
and
xor
mov
inc
adc
cmp
cmp
loope
js
jno
repz
push
loope,pn
nop
adc
cmp
imul
cmp
mov
dec
push
ret
out
addr16
dec
cmp
jbe
ret
das
pop
stos
leave
xor
ljmp
mov
aaa
mov
jns
popa
mov
mov
cmp
adc
das
test
icebp
imul
out
lods
daa
aaa
push
out
imul
nop
lods
cs
lods
push
xchg
cmpsb
sbb
mov
out
jno
pop
mov
insb
bound
cmpb
dec
jl
fisttps
stc
cmp
jb
aas
add
mov
pop
dec
and
stos
xor
sbb
pop
aad
and
lcall
cmp
push
dec
sub
ljmp
inc
fmuls
mov
inc
jle
ret
ret
sbb
andl
jo
arpl
insl
add
pop
stos
adc
lea
cmp
gs
jo
mov
lds
pop
fiaddl
jmp
mov
ljmp
ss
adc
and
leave
pop
shr
dec
rcll
xchg
sar
cmp
xchg
mull
mov
pop
fldl
shlb
imul
fisttpl
and
insb
sub
inc
mov
jnp
aam
out
addb
push
cli
jmp
ret
or
mov
ljmp
mov
imul
add
mov
cwtl
stc
adc
xchg
rolb
fldcw
xchg
push
or
push
shrb
in
mov
pop
shl
bnd
stos
roll
popa
test
adc
loopne
jmp
xor
push
cltd
xchg
stos
pop
ljmp
fs
xchg
stos
popa
mov
cmp
sbb
imul
push
sahf
sbb
mov
in
insl
int3
sbb
iret
xchg
mov
pop
jle
test
dec
rol
xchg
add
popf
sub
mov
out
jmp
int3
push
pusha
jb
dec
popa
decl
adcl
test
scas
test
or
ret
add
repz
inc
cmp
cmpsb
and
mov
jne
sbb
aad
imul
fdivr
pusha
push
call
lcall
cwtl
push
and
push
pop
fsts
xchg
mov
add
and
push
mov
outsl
xchg
aam
mov
es
mov
inc
xchg
mov
mov
test
leave
out
popa
mov
sbb
ss
mov
es
sub
xchg
data16
adc
pop
pop
int
sbb
in
xchg
pop
and
xchg
inc
scas
mov
rorl
pop
dec
cmp
test
pop
jne
repnz
xor
push
arpl
pop
mov
dec
mov
js
push
xor
or
cwtl
cmp
out
lret
or
daa
arpl
insl
dec
pop
adc
leave
mov
scas
movsl
sbb
or
loopne
pop
mov
pushf
mov
push
mov
inc
pop
dec
fldcw
jmp
add
push
mov
gs
hlt
and
push
add
adcl
pop
adc
sub
or
add
std
cs
popa
mov
sub
aas
jnp
xchg
mov
inc
jno
aas
jmp
add
cmpsl
cmpsl
psubusb
cs
in
mov
pop
cwtl
mov
das
and
sti
or
rcl
fistpl
movsl
sub
loope
add
js
fs
mov
shr
xor
pcmpgtw
add
test
scas
push
lahf
bnd
lcall
dec
add
jb
aas
lcall
hlt
xor
fistl
push
xchg
or
mov
fsubl
cmpsb
cmp
les
mov
xor
cmpsb
adc
adc
pushf
pop
js
push
jbe
call
iret
push
mov
pop
subb
xor
sbb
out
test
cmp
sub
xchg
shll
adc
push
aad
int3
mov
popa
push
out
xchg
and
negb
mov
lods
dec
stos
mov
or
js
repz
dec
mov
insl
int
lea
or
notb
fld1
xchg
outsl
bound
cmpsb
in
cli
mov
into
or
cmc
dec
sub
lret
xlat
stos
ret
shll
jb
sbb
rol
sub
sti
addl
es
iret
or
hlt
loope
lret
jecxz
lret
dec
sub
cmp
notb
pop
addr16
je
jp
add
push
xor
cli
iret
loopne
popa
jmp
mov
sbb
jne
repz
fwait
sbb
pop
jl
int3
adc
push
xchg
xor
sbbb
dec
jne
lods
inc
loop
mov
lahf
mov
shll
add
mov
dec
iret
pop
mov
xor
decb
sub
and
ret
xlat
jns
jb
xor
sbb
dec
jnp
es
cld
test
sbb
adc
imulb
mov
mov
aam
test
std
adc
and
inc
sub
hlt
or
xor
scas
push
sahf
dec
mov
inc
push
fdivl
dec
sub
sbb
push
in
stc
adc
lret
lret
xor
push
insl
movsb
pusha
pop
cmpsb
fnstsw
dec
sub
mov
sarl
lds
push
mov
dec
idivl
cmc
hlt
stos
xor
cmp
clc
cmp
mov
mov
sbb
loopne
test
popf
adc
adc
push
or
mov
ret
and
gs
sbb
pushf
std
xchg
leave
xorl
lock
jnp
push
imul
adc
xchg
dec
ret
clc
shl
mov
cli
into
lahf
inc
outsb
int
and
jbe
and
xchg
nop
into
cmp
out
mov
xlat
pop
mov
mov
push
jb
pop
or
jle
imul
push
jg
in
ret
fwait
push
movsl
jle
loop
pop
cmp
in
cmp
jae
push
push
lock
cmc
fmuls
or
push
cmpsl
addr16
jp
in
cmp
pop
xor
inc
aaa
int3
cld
cwtl
and
and
push
sti
jge
hlt
inc
lods
aad
mov
inc
xchg
lret
push
hlt
or
sti
aaa
mov
pop
xor
test
popa
dec
add
cmpsb
add
es
inc
loopne
test
loope
outsb
or
add
sub
lret
xor
adc
push
mov
sub
jbe
pop
shld
xchg
std
adcl
aam
dec
in
ljmp
test
out
icebp
lcall
cmp
dec
mov
sub
xchg
fidivl
in
adc
aas
shrl
push
or
add
sub
icebp
insb
inc
notl
cmp
or
mov
xchg
jl
mov
sbb
adc
cld
lods
punpcklwd
aam
inc
cltd
fisttps
mov
dec
popf
or
cs
fimuls
or
sub
aad
cli
sbb
js
adc
cmpsl
xor
cmc
xchg
cmp
movsb
lcall
mov
pushf
lret
inc
or
ret
imul
mov
loop
inc
adc
testb
jbe
fistps
mov
addr16
inc
push
sbb
sbb
mov
fcomip
repnz
add
jno
cmp
xchg
jbe
adc
addr16
loope
pop
decl
outsl
lods
and
push
pop
in
xchg
xchg
cwtl
mov
in
jnp
js
jnp
pop
xchg
jnp
outsb
pop
fwait
test
test
pusha
iret
subl
adc
mov
lods
mov
test
push
add
push
sahf
pop
xchg
inc
sub
stc
or
xor
loop
pop
push
rorl
and
repz
cmc
add
cli
xchg
repz
pop
leave
imull
xor
dec
dec
lock
jge
popf
nop
mov
orl
hlt
mov
repnz
mov
inc
fsubl
adc
test
addl
pop
dec
or
fcompl
mov
pusha
mov
fwait
mov
ror
mov
xchg
loop
filds
bound
testb
out
nop
jp
mov
jp
fiaddl
xchg
and
and
lret
imul
sbb
add
sbb
into
mov
pop
or
in
fdivl
sahf
inc
sahf
push
cmp
and
iret
jno
mov
sar
test
loopne
cli
aam
repz
ljmp
in
mov
ficoms
cmp
dec
imul
xor
xlat
movsb
inc
pop
sbb
or
daa
clc
sub
cs
insl
push
jp
pop
fcmovnbe
push
jl
loopne
hlt
testb
pop
and
test
ds
mov
icebp
je
orb
xchg
aam
xchg
fsubl
rcrb
movsb
leave
and
out
jmp
dec
dec
jmp
and
adc
mov
pop
xor
and
inc
inc
and
pop
in
mov
add
subb
push
add
scas
shlb
jbe
lcall
mov
sbb
sub
iret
or
cmpsl
push
mov
mov
add
fdivl
sub
cmpsl
arpl
out
scas
and
xchg
and
pop
fiaddl
rcr
cmpsl
lock
orb
and
arpl
dec
xchg
scas
inc
mov
jne
cmp
out
aad
or
push
push
dec
and
pop
imulb
adc
movsl
lods
sti
in
adc
addr16
adc
add
testl
std
adc
call
sbb
or
add
sub
xchg
ss
pop
ret
pop
sbb
push
or
ss
mov
mov
and
bound
cs
sbb
mov
jne,pn
loope
fucomp
lock
or
outsb
scas
xorl
fcoms
mov
stos
shll
cmp
mov
mov
std
xor
out
pusha
push
stos
push
lcall
in
icebp
lret
aas
cmp
roll
dec
add
mov
cmp
outsl
mov
mov
imul
and
cld
jmp
mov
dec
xorl
imul
mov
cld
xor
cmp
xchg
sbb
dec
inc
or
push
sbb
orb
shrb
xchg
pop
in
pusha
sahf
outsb
int
or
mov
clc
xchg
icebp
jb
adc
out
movsl
push
jle
xchg
mov
dec
int3
out
sub
mov
outsb
hlt
push
pop
jp
shl
push
cmp
iret
xchg
sbb
mov
xchg
mov
push
imul
jl
js
push
sub
cmp
fmul
inc
lcall
push
jae
push
cwtl
add
fisubl
rcrb
lea
loopne
xchg
mov
in
inc
int
jle
in
dec
aad
mov
sar
adc
xchg
jle
in
or
in
loopne
nop
mov
gs
rcl
cmp
pop
mov
mov
out
or
push
or
ret
mov
jnp
outsl
cmp
test
mov
loop
fists
in
movaps
loope
pop
push
dec
aas
scas
inc
cmpsl
push
mov
clc
aad
in
jle
lods
mov
or
pop
call
push
jg
mov
xor
adc
xor
jecxz
mov
jg
mov
stos
sbb
in
les
ret
jbe
add
push
xor
sbbl
jnp
int
fimull
fstps
xchg
push
mov
sti
jle
mov
xor
cli
gs
out
mov
or
fwait
jmp
xor
aad
das
jne
jbe
and
outsl
jae
sahf
xor
cmc
cmp
sti
lods
cmp
fwait
cmp
pop
jne
mov
jns
pop
sbb
subl
lods
mov
outsl
inc
clc
pusha
popf
or
aad
xchg
in
shll
out
push
adc
push
jnp
push
adc
cmp
js
add
pop
daa
cmpsl
mov
sub
negb
call
enter
jnp
in
adc
sbb
movsb
std
aad
aam
jne
insb
xchg
push
bound
lds
out
fwait
dec
daa
scas
mov
rorb
rcrb
push
dec
mov
and
mov
mov
shr
inc
out
out
das
push
pop
add
movsb
iret
mov
mov
xlat
xlat
sbb
in
pop
scas
les
sti
popf
add
insb
and
dec
jbe
les
xchg
sahf
pop
push
hlt
jmp
and
pop
test
dec
adc
mov
aad
xchg
test
or
sub
fmull
sub
xor
adc
xchg
ret
repnz
sar
jle
icebp
mov
in
and
inc
xchg
call
xchg
in
sarl
add
and
adc
popa
lock
dec
adc
aas
sbb
popf
push
jge
xrelease
sbb
xchg
pop
fiadds
mov
scas
inc
sti
and
cli
push
xchg
test
ret
dec
call
pop
mov
test
cli
int
push
fsub
bound
movsb
in
cmpsl
xchg
in
nop
jmp
and
xchg
idivb
inc
ficoms
lea
lahf
mov
push
mov
xchg
lret
sbb
shl
lds
imul
mov
or
int3
jecxz
rorb
xchg
jb
out
insl
push
stc
dec
mov
and
imulb
dec
mov
and
rclb
cs
mov
pop
inc
add
push
mov
gs
insl
mov
mov
out
adc
mov
dec
rolb
add
adc
mov
cmpsl
in
adc
mov
add
cld
test
es
les
cmp
add
jecxz
or
mov
mov
lret
addl
mov
test
push
jg
mov
mov
jmp
mov
xor
ljmp
and
and
cmp
ss
adcl
cmpsb
dec
insl
mov
cmp
test
jnp
dec
inc
test
xor
and
clc
dec
out
loop
cwtl
xor
movsb
loopne
fidivl
xor
dec
dec
cmpsl
int3
fstpl
fdivl
mov
cmpsl
xchg
and
mov
push
cmp
leave
pop
jl
or
mov
mov
scas
adc
scas
pop
pushf
ret
sub
cwtl
pop
mov
jmp
popa
sahf
cmp
mov
mov
jb
nop
and
icebp
mov
dec
inc
jge
repz
mov
adcb
shlb
movsl
aas
insb
push
and
xor
subl
mov
in
inc
sbb
adcl
inc
mov
mov
out
lret
dec
test
fiaddl
cmpsl
adc
or
push
ss
popf
xchg
ror
inc
cli
sub
mov
stos
mov
mov
push
enter
mov
jmp
push
cmp
imul
repz
subb
aad
and
xchg
out
fs
fmul
sub
mov
das
push
loope
repz
cltd
adc
test
cmp
add
fcoms
shrl
sbb
ljmp
jle
push
call
out
das
fsubp
orb
mov
xor
add
mov
inc
sub
push
cld
jae
les
into
push
xor
push
and
in
push
shll
mov
pop
fisttpl
clc
sti
testl
adc
repz
inc
sti
push
aaa
lret
xchg
outsl
hlt
enter
dec
arpl
sbb
xchg
mov
add
mov
or
mov
push
pop
push
cmp
frstors
jg
push
mov
pop
push
aaa
rcrb
dec
lods
adc
stc
add
sti
jne
into
cmp
fsubr
and
pop
sub
inc
dec
pop
neg
dec
call
xchg
fstpl
popa
femms
xor
xchg
push
xchg
push
mov
lahf
mov
push
xor
fisttpl
decb
mov
clc
movsb
leave
movb
repz
sbb
sbb
shll
incb
and
cmp
jns
pop
add
dec
fscale
repnz
or
inc
sbb
sbb
pop
and
fmul
shr
sbb
pop
mov
and
test
out
clc
sub
cmpsl
xlat
xchg
push
xchg
jo
sub
xlat
xchg
xchg
sub
into
or
adc
and
ja
es
jns
out
shrb
cmp
inc
pushl
daa
loopne
mov
mov
cmp
xchg
add
add
xor
pusha
lea
mov
hlt
xor
and
mov
or
cmp
and
hlt
xchg
and
shlb
fimull
fldcw
leave
xchg
mov
movsl
and
icebp
mov
ror
cli
sbb
xor
xchg
mov
mov
push
std
xor
sub
dec
cmpsl
mov
pop
sbb
pop
cltd
xor
repz
les
jmp
aaa
cli
fwait
pop
cmp
test
xchg
or
icebp
fcoms
cmp
push
jo
jns
sbb
loop
or
scas
mov
in
mov
push
dec
and
jmp
insb
xchg
maskmovq
imull
add
das
das
mov
inc
fisttps
imulb
inc
popf
fistpl
out
xchg
pop
push
add
cmpsl
mov
cwtl
fisubrs
sub
fdivrp
mov
insl
inc
adc
bound
dec
pop
decl
testl
mov
lahf
xchg
push
sub
into
cli
dec
mov
fidivs
mov
push
xor
stos
scas
movsb
ja
jecxz
in
lods
inc
mov
scas
loope
and
addr16
lahf
xchg
jb
and
push
movsl
lret
xchg
sub
sub
in
xchg
inc
rcll
dec
xor
pop
and
int
sbb
sarb
dec
loope
mov
dec
xor
vmovntps
mov
cmp
ss
scas
or
lock
push
pop
into
int3
lods
pop
jge
or
insb
inc
jmp
stos
in
mov
and
adc
shl
mov
and
stos
push
mov
lahf
pop
fwait
dec
pop
lods
adc
imulb
ds
push
fisubrl
enter
sbb
out
adc
push
mov
aas
cs
mov
aad
dec
inc
add
pusha
scas
cli
inc
mov
push
aad
test
xchg
xchg
aaa
pusha
lcall
mov
or
into
push
arpl
aaa
cmpsl
xchg
cmp
xor
add
iret
lret
stos
les
pop
sub
inc
enter
sbb
sbb
dec
data16
jno
pop
lds
mov
xlat
insb
fimuls
cmp
cmpsl
xchg
loop
push
xchg
dec
mov
xor
movsl
xchg
jmp
cltd
inc
pop
clc
cmpsb
pop
sbb
add
pop
jbe,pn
pop
out
mov
out
push
jae
into
xor
inc
cmp
into
sbb
mov
roll
add
cmc
or
or
gs
shrb
push
aaa
fwait
adc
adc
test
ds
hlt
repz
jl
pop
pop
notl
arpl
push
sub
mov
aam
mov
test
outsb
mov
test
xchg
jl
cltd
mov
loope
xor
leave
fwait
nop
out
mov
pop
shlb
popf
bound
mov
push
xchg
mov
nop
push
loope
leave
jle
cmp
add
jnp
xlat
jbe
add
rorl
movsl
loop
jecxz
sub
les
lods
sub
mov
test
popf
stc
cmc
mov
out
imul
sbb
cmp
jl
sub
mov
call
cmp
sbb
sbb
cltd
inc
stc
push
and
dec
dec
scas
int3
loope
iret
jl
xchg
mov
inc
mov
dec
fadd
cmp
loope
movsl
popf
popf
push
adc
xchg
push
jnp
cmpl
push
sarb
daa
call
push
lock
jb
mov
rorb
mov
test
jnp
mov
scas
aam
cmp
sahf
and
andb
push
mov
in
testb
decb
movsb
lret
cmpsb
icebp
call
ljmp
ljmp
test
cmp
rolb
fadd
sub
popa
mov
pop
pushf
stc
test
mov
fnstenv
test
mov
in
int
and
fiaddl
rolb
std
lcall
sub
arpl
and
into
sbb
or
xchg
or
ljmp
mov
out
and
lds
loope
leave
insb
xchg
mov
mov
enter
repnz
dec
cli
mov
in
dec
aaa
loop
sub
cmc
outsl
movsl
into
xchg
stos
mov
sub
inc
sbb
xchg
pop
adc
mov
and
subb
mov
mov
fs
es
mov
mov
adc
in
or
inc
fsubs
cmp
xlat
mov
and
ficoms
test
ret
mov
dec
push
xlat
ret
mov
lea
sbb
stc
dec
int3
push
fistl
sar
insb
iret
negl
sub
lahf
jb
out
mov
ds
call
push
cwtl
es
stos
imul
cmp
add
jnp
lock
iret
cmp
push
pop
xchg
dec
jle
loopne
fstpt
or
rcrl
xor
out
mov
ret
cli
xchg
in
jecxz
push
mov
jne
xchg
fwait
insb
roll
dec
bound
fwait
idivl
mov
ret
std
subb
dec
jo
leave
lds
jl
mov
mov
push
lods
je
loope
jmp
pop
and
add
add
lcall
and
cmp
repnz
lret
rcr
imul
clc
cmpsb
xchg
cmpsl
lods
jmp
jb
adc
test
sub
jecxz
sub
mov
push
mov
pop
pusha
aaa
lods
pop
mov
data16
in
les
sbb
push
repnz
out
sbb
xchg
std
cwtl
push
lret
jb
dec
stc
lods
cmpsb
fstpt
pop
or
mov
inc
push
cltd
addr16
or
std
mov
addr16
cmp
inc
cmp
xor
lcall
and
inc
pop
movsb
mov
stc
add
pop
push
je
dec
ret
in
shlb
jnp
fwait
jmp
jb
xor
adc
sbb
mov
test
pop
pop
pop
sbb
push
sahf
inc
test
dec
and
out
cld
cmp
mov
cli
pushf
in
fs
test
sub
sbb
xchg
enter
mov
outsl
inc
sub
in
jg
ljmp
pop
mov
lret
dec
loope
addr16
mov
in
jno
fwait
ret
je
aam
in
adc
stos
mov
inc
cmp
popa
adc
xchg
jnp
sbb
pop
sarb
mov
dec
shlb
add
sbb
rorl
and
mov
aas
movsl
cmp
daa
xchg
shll
scas
aaa
arpl
xchg
lret
movsb
mov
test
test
and
pop
dec
fsubr
loop
subb
ja
clc
xchg
insb
cltd
or
aaa
int
pop
in
or
sbb
cli
push
cmp
fstp
push
jo
push
push
cmp
rcr
clc
cmc
rclb
int
call
sbbl
ds
lret
out
sub
push
sub
dec
mov
xchg
fwait
jmp
aam
jns
pop
lcall
in
insl
ja
xor
lock
cmp
nop
fisubs
jae
inc
adc
iretw
xchg
stos
fadds
sub
pop
leave
fbld
adcb
sub
pop
push
inc
scas
test
pop
mov
cmc
enter
mov
adc
dec
gs
lods
into
xchg
mov
and
fs
lahf
sub
dec
stos
aam
xlat
fdivl
roll
shlb
iret
adc
outsb
and
mov
stos
test
scas
inc
loope
popa
mov
pop
enter
lods
inc
aas
arpl
xor
ret
inc
mov
rolb
bound
cwtl
jbe
imul
cltd
add
jb
fs
mov
scas
mov
leave
xchg
in
pop
mov
push
aas
add
mov
rorl
add
sbb
jno
rcrb
nop
add
loope
jg
dec
adc
pop
jle
push
enter
popf
add
xchg
xchg
xor
lods
push
sti
jp
push
rcr
dec
push
in
sbb
test
mov
lock
sbb
cmp
cli
inc
dec
push
sub
mov
or
fsts
or
fnstcw
dec
out
idivl
aas
pusha
jp
loop
xchg
repz
ret
daa
mov
cmp
mov
lock
push
xchg
jbe
sub
lock
mov
xlat
push
inc
ffree
fstpl
shr
mov
fcmove
xchg
cmp
push
test
mov
jp
aad
cmp
out
mov
imul
call
cmp
mov
adc
sub
inc
bswap
rolb
xchg
jo
fsubl
scas
or
and
xchg
mov
jle
push
and
aaa
subl
out
js
inc
inc
scas
cwtl
mov
out
or
push
inc
inc
jne
lods
int3
xchg
adc
jbe
adc
mov
adc
push
outsb
loopne
testl
into
gs
xor
ljmp
mov
sbbb
xor
ss
cmpl
les
inc
in
lret
dec
cltd
iret
adc
fs
and
addr16
aas
pushf
mov
cmpsl
mov
test
and
push
mov
adc
push
loope
mov
std
push
mov
jb
push
dec
xchg
mov
mov
mov
mov
js
arpl
sbb
cmp
clc
sub
mov
xor
stc
xor
lock
ljmp
test
jae
arpl
loope
test
xchg
and
shlb
xor
push
inc
sbb
mov
jb
inc
ja
or
lock
sub
test
scas
fwait
jb
mov
sub
xor
inc
lods
cmc
xchg
mov
shll
bound
cmc
bound
inc
adc
add
sub
movsb
shl
cltd
leave
add
sub
jecxz
adc
and
sbb
shlb
dec
dec
addr16
popf
add
xchg
loopne
add
cmp
fdivrp
push
xor
mov
inc
cmp
aad
cmc
ret
mov
xchg
mov
imul
dec
jno
add
arpl
lea
mov
adc
bound
fisubrl
sub
push
jne
add
xchg
lret
sub
cmp
fmul
fisttps
aad
jmp
fiadds
ds
testl
jno
movsl
xor
dec
stc
inc
mov
scas
imul
adc
sub
rorl
fistps
clc
pop
push
and
enter
and
mov
sub
add
es
pop
rorl
inc
xlat
lahf
xlat
test
pop
mov
push
mov
jne
sbbl
jo
dec
dec
ss
and
aaa
pop
int
push
xchg
jns
ret
xor
push
jns
jp
pop
or
mov
outsl
pop
xor
xchg
mov
arpl
push
jnp
movsl
cmp
jp
fs
sbb
cld
xchg
cmp
out
mov
rcrl
daa
fnstenv
or
sahf
jmp
mov
mov
clc
pop
mov
mov
mov
mull
test
mov
scas
mov
insb
test
insb
lahf
dec
mov
loop
mov
and
lods
nop
cld
enter
insl
mull
inc
adc
dec
or
jmp
jae
mov
out
cmp
xor
add
mov
stos
cld
dec
loop
bound
pop
push
and
loope
pusha
lret
lret
js
dec
inc
cmp
pop
or
add
mov
sbb
xchg
out
test
sub
pushf
shrl
pop
mov
push
stos
cmpsl
jmp
jno
repz
lret
enter
repz
xor
sarl
cli
jmp
push
fsub
xchg
inc
cltd
in
mov
lahf
mov
or
xchg
roll
mov
sbb
shrl
ret
dec
inc
add
jge
shrl
out
out
adc
cmpsb
pop
push
mov
add
jmp
or
xor
mov
and
xchg
repz
xlat
fists
jns
dec
sbb
andl
jecxz
xor
pusha
or
push
sti
jmp
push
dec
dec
fwait
sub
lds
sub
push
push
mov
addr16
daa
std
outsl
fnstenv
jle
lock
enter
mov
ljmp
fistpll
stos
dec
sub
sub
ljmp
ljmp
ljmp
cmc
adc
sbb
xlat
outsl
lcall
ss
mov
xor
jl
pop
movsb
daa
xchg
popa
adc
fcoms
add
icebp
xor
mov
sbb
push
insb
in
inc
mov
arpl
cltd
dec
adc
adc
xchg
xchg
fnstenv
xchg
push
std
sbb
stos
mov
add
cld
pushf
sbb
shrb
cwtl
xchg
movsb
jmp
in
lea
cmp
loope
fisttps
and
cmpsl
dec
sub
push
shrb
aam
sbbb
or
cmp
and
inc
cmp
sti
out
mov
push
add
and
or
stos
dec
add
std
sahf
insl
jno
sbb
aam
loop
jl
imul
add
jg
inc
inc
jno
push
insb
jae
roll
and
call
cli
and
mov
inc
mov
repz
lock
cmp
jmp
mov
jbe
ljmp
lock
add
add
sti
jbe
lret
sbb
push
add
push
andl
push
lret
fistpll
ja
clc
xor
enter
sti
in
cmpsl
pop
and
jle
jbe
fs
adc
adc
ret
mov
mov
fxch
js
stos
and
in
test
scas
cld
test
rcll
rorl
mov
xchg
imul
ja
out
push
sarl
insl
inc
or
loop
ret
push
sbb
movsl
mov
fbld
loop
fsubrl
push
pop
mov
mov
aaa
int
cmp
pop
outsb
cmp
or
push
cltd
mov
mov
cmp
pop
jecxz
inc
inc
cmp
insb
test
mov
nop
sub
push
sbb
push
xor
das
jmp
loopne
leave
out
in
jno
jne
popa
mov
sub
into
push
mov
mov
inc
mov
dec
mov
aam
fs
and
mov
or
xchg
mov
hlt
stc
push
jne
inc
jno
gs
idivl
push
divb
cmp
les
mov
cmpsl
sti
movsb
dec
inc
ds
mov
loopne
in
push
repz
xor
mov
ret
xor
mov
in
pop
and
add
mov
loopne
ljmp
out
je
cmpsl
mov
pop
lods
popf
out
inc
ss
outsl
gs
cmp
cvttps2pi
adc
inc
and
jno
mov
pusha
jo
sahf
or
popf
out
stc
test
mov
dec
fs
cld
pop
xchg
mov
adc
mov
enter
pop
fisttpl
gs
cltd
loop
aas
scas
adc
pop
push
out
insl
addr16
dec
movsl
loopne
sbb
mov
lret
xchg
jae
ficoms
mull
pop
fs
add
mov
push
pop
push
les
cltd
jnp
fildl
xchg
into
cwtl
scas
mov
fidivrl
cmpsb
aam
and
lahf
loope
repz
cmp
enter
mov
cwtl
sbb
sub
stc
icebp
pop
add
pop
mov
pop
in
insb
repnz
add
aaa
fldcw
xor
pop
fwait
dec
mov
addr16
aam
sarl
pop
cmp
jno
pop
mov
sti
into
cli
xchg
dec
arpl
cmp
pop
clc
ss
inc
rcll
mov
xchg
jp
ja
and
out
sub
ja
cwtl
addr16
es
aad
mov
in
iret
pop
lea
jl
jns
xlat
mov
jne
fwait
sbb
cli
xorb
pop
mov
in
incl
ja
in
ret
push
pop
add
lods
repnz
mov
pop
fs
pusha
lret
inc
mov
outsb
into
mov
mov
das
mov
mov
std
js
pop
push
push
jg
push
jg
sbb
mov
js
rol
jl
inc
out
nop
mov
stos
sub
and
hlt
add
mov
push
adcl
push
imul
sbb
jecxz
dec
mov
pop
dec
mov
push
xchg
hlt
sub
add
sub
xorl
mov
outsb
es
mov
cmpb
cmpsl
pop
or
mov
push
fimull
push
sbb
cli
mov
mov
cltd
push
aaa
popf
adc
xchg
test
add
addl
rcrb
mov
shrb
daa
xor
or
adc
movsb
sbb
sub
sub
jecxz
inc
daa
xor
xchg
loope
pop
mov
mov
mov
cli
mov
mov
mov
sbb
lods
hlt
jmp
clc
and
mov
fcom
test
fldl2t
dec
jmp
mov
fwait
in
mov
sub
sub
mov
les
push
jne
xor
into
jg
jge
pop
sti
outsl
movsl
mov
shrl
lods
test
testl
inc
daa
test
mov
lods
jno
icebp
sub
xlat
ficomps
sub
or
sbbb
fldl2t
xor
jnp
test
aaa
aaa
je
dec
test
imul
aaa
add
xchg
mov
inc
sub
adc
jb
test
jae
cs
clc
leave
stos
es
adc
fistpl
xchg
orb
sti
and
ret
push
push
movsb
idivb
lea
add
push
in
cmp
call
dec
cmp
into
out
mov
repnz
add
xor
popf
pop
js
in
adc
jle
push
and
dec
out
gs
lock
cld
int3
lods
inc
aam
dec
push
ja
stc
fiaddl
inc
jg
int3
push
arpl
fisubl
fs
in
mov
cmp
test
xchg
loope
mov
push
add
cltd
sub
cmp
xlat
movsl
lcall
and
out
inc
or
loopne
imul
and
or
les
ljmp
sub
pop
pop
sbb
arpl
addr16
repnz
mov
ret
inc
push
xlat
add
cmp
rol
mov
pop
movsl
cwtl
xchg
sbb
test
pop
sar
cmpsl
ljmp
sti
mov
pop
out
arpl
fucomp
mov
scas
addr16
or
push
insb
lods
mov
outsb
pop
icebp
ds
fmuls
leave
jg
les
inc
adc
repnz
ljmp
repnz
sub
pop
jae
push
fstpl
inc
dec
nop
repnz
movsl
lock
push
dec
negb
jne
and
in
inc
cmc
loope
cmp
sahf
pop
int
in
jl
or
dec
shll
mov
jmp
sub
popf
out
movsb
gs
xchg
call
jno
popa
cmpsb
insl
and
dec
push
cld
cmpl
and
and
stos
mov
arpl
test
hlt
cmp
movsl
dec
inc
call
xor
jne
mov
add
mov
dec
rcrb
mov
xchg
pop
push
cmc
jae
cld
xchg
dec
outsb
sub
pop
jecxz
mov
mov
rorl
pushf
rorb
xor
xor
pop
rcrl
push
xchg
adc
outsl
push
dec
out
bound
xor
jl
lret
push
fidivs
or
xor
js
lds
sbb
adc
xchg
pop
pop
inc
sbb
js
adc
or
inc
es
pop
sub
push
mov
je
xchg
call
and
das
dec
push
xchg
shll
cmp
cmp
mov
jmp
sub
ret
addl
dec
pop
adc
adc
inc
add
mov
jns
js
sub
mov
sbb
lret
arpl
cmp
insb
jno
scas
sub
bnd
inc
stc
adc
inc
push
dec
idivb
sub
addr16
loope
mov
push
or
arpl
dec
mov
fsts
clc
push
daa
xchg
addl
std
filds
push
pop
pop
cld
ss
cmp
mov
and
in
jp
adc
pusha
dec
aaa
pop
xchg
gs
xchg
insb
clc
mov
test
jo
imul
push
jp
imull
adc
jnp
and
call
dec
mov
xorb
and
aad
rolb
ds
nop
jl
jns
add
sbb
daa
adc
add
add
inc
push
shlb
insl
mov
mov
push
pop
pop
xor
insl
xchg
xchg
push
mov
jb
pop
pusha
in
add
dec
and
mov
sub
jecxz
sub
xor
push
andb
inc
divb
push
push
dec
clc
test
add
adc
add
imul
sub
das
pushw
les
and
xor
sub
adc
sbb
jle
in
xor
inc
xchg
decl
jne
xchg
dec
mov
mov
lret
jae
jle
scas
jno
mov
ds
je
repnz
lods
shl
repz
std
scas
jl
xor
adc
or
jae
or
imul
xchg
sbb
test
shrl
or
or
xor
jle
sbb
xchg
xchg
or
sti
cmpsl
jg
fwait
enter
sbb
ss
mov
and
sub
lret
lods
icebp
dec
notl
loopne
push
dec
xor
call
mov
push
test
inc
bound
rcl
mov
mov
jo,pt
ficompl
jl
bound
jl
xchg
das
push
testl
xchg
cmc
lcall
pusha
jle
jmp
pusha
rolb
sub
cmp
or
ljmp
mov
add
out
lds
push
push
adc
psraw
add
xchg
xchg
test
cmp
loope
inc
adc
roll
shlb
jecxz
int
dec
stc
and
shlb
into
xor
or
push
mov
inc
adcb
and
mov
xchg
fimull
sub
jge
arpl
jno
pop
loop
adc
jp
out
mov
imul
inc
and
mov
mov
xor
stos
and
pop
out
lods
repz
push
jne
inc
movb
mov
add
lds
cmp
jnp
in
add
add
fwait
cmpsl
xchg
and
icebp
out
sbb
and
lea
mov
mov
dec
das
jnp
add
or
lods
pop
fildl
mov
jg
daa
das
xchg
or
leave
mov
jg
gs
xor
jae
pop
pop
loop
lret
imul
xchg
shlb
pop
and
pop
pop
sub
test
mov
lock
shrb
mov
and
mov
pusha
and
jl
loope
mov
icebp
lods
in
add
nop
pushf
mov
ja
test
dec
call
pop
insl
enter
mov
fidivrs
mov
or
dec
pop
cmp
pop
stos
clc
pop
push
mov
lock
mov
or
and
pop
std
std
cltd
je
mov
pop
rcll
hlt
loope
sbb
scas
push
pop
lret
sti
dec
pop
inc
cwtl
sub
cmp
push
jl
xchg
loop
rcrb
lods
enter
scas
mov
mov
mov
stc
fwait
test
dec
adc
loopne
insb
mov
leave
cmc
or
pop
mov
stos
repnz
push
add
je
dec
pop
dec
aas
fldt
test
cmp
out
jae
add
jl
push
and
add
pop
fsubrs
mov
add
aas
cmp
or
jo
mov
aad
test
mov
pop
cmpsl
fmulp
xchg
xchg
iret
and
call
and
nop
mov
ret
in
xchg
dec
int3
push
aad
lahf
mov
xor
mov
add
adc
mov
push
jne
xor
sub
int3
out
push
xor
dec
adc
jmp
pop
sahf
out
push
rcrl
cmpsl
aaa
jmp
dec
sbbl
aam
test
fidivrl
xor
mov
jg
xor
movsb
dec
testl
pushl
cmpsb
cmpsb
mov
fidivl
enter
rcr
xchg
lods
frndint
arpl
adc
push
pop
sub
pmulhw
out
jo
push
cmp
xor
cli
pop
xchg
add
or
sub
aaa
fisttpl
cwtl
jb
and
xchg
push
push
movsb
mov
aad
pop
flds
adc
loopne
movsb
out
sti
enter
xchg
xchg
xchg
shll
pusha
push
bound
daa
mov
mov
das
movsb
pop
ret
jbe
ds
orb
pop
clc
rolb
scas
or
enter
insl
lods
loopne
maskmovq
divl
mov
push
and
xchg
loop
notl
add
shrb
inc
push
cli
not
mov
jecxz
dec
std
mov
divl
fisttpll
push
mov
xchg
fildll
sbb
mov
repnz
pop
cmp
sti
push
mov
and
mov
imull
loopne
inc
sbb
jne
adc
cmpsb
and
repz
lret
pop
xchg
fcompl
xchg
hlt
aad
dec
mov
mov
sbb
xchg
lahf
xor
aas
scas
pop
cmpsb
mov
and
jp
in
inc
je
sbbl
aam
cs
jmp
sar
jge
fcmovb
imul
leave
incl
dec
std
inc
add
fisttps
ds
sbb
add
jp
sbb
sub
sbb
lahf
xchg
jne
adc
pop
movsb
or
nop
fldcw
into
and
sub
cs
push
mov
lret
add
imul
xor
mov
enter
xchg
pop
mov
data16
add
scas
pop
mov
and
lret
or
cs
rcll
repz
lcall
mov
push
or
pop
lcall
push
push
cmc
jp
cmpsb
daa
adc
adc
xchg
aas
mov
daa
sar
xor
inc
cwtl
inc
fidivrl
fdivl
in
insl
adc
data16
rol
imul
xlat
dec
cld
decl
mov
lds
xchg
jge
xor
ret
movsl
dec
mov
push
xor
push
dec
push
adc
clc
or
add
ret
test
push
mov
sbb
rcr
jl
jns
dec
inc
xor
cmp
in
xchg
cwtl
ja
stos
xchg
mov
hlt
push
jge
mov
std
std
jb
push
mov
add
inc
sub
in
mov
jl
xlat
fwait
out
arpl
int
icebp
fimull
aas
test
sub
adc
shll
xor
out
sub
mov
icebp
repz
jmp
sub
mov
xchg
pop
pusha
adc
rorl
outsl
or
cli
dec
roll
xchg
fisttpll
fdivp
cmpsl
mov
mov
fbstp
test
dec
rol
cld
jg
out
sbb
jns
xchg
ret
mov
movsl
inc
sbb
inc
les
fsubr
mov
call
leave
outsb
add
sahf
cmpb
cmp
mov
fdivrl
push
push
pop
clc
test
and
xor
or
sbb
push
insl
sahf
movsb
aam
xchg
xchg
jl
arpl
jb
xchg
jl
cmp
push
jb
push
mov
insl
pop
mov
push
cmp
mov
je
fdivrl
push
pushf
nop
pop
icebp
repnz
xlat
clc
mov
jnp
mov
jmp
mov
mov
icebp
loop
loope
mov
loop
lret
pop
bound
add
push
cmp
sbb
fucomi
inc
pusha
or
jb
dec
xor
in
jge
in
jo
aas
dec
arpl
adc
shrl
mov
subb
add
dec
adc
ss
ljmp
mov
adc
dec
frstor
and
add
adc
negb
mov
jno
jl
cmp
and
ljmp
sbb
inc
into
aam
sub
push
cs
sbb
in
and
pop
mov
fildl
orb
shll
pop
movsl
aad
xchg
imulb
add
ss
jmp
jnp
call
scas
ss
call
pop
or
mov
dec
les
add
std
repnz
jo
pop
flds
into
loope
and
outsb
out
ret
testl
mov
jne
aaa
dec
pop
shrb
sub
jge
divb
inc
dec
pop
or
cmp
ss
jmp
and
repnz
subl
fidivs
out
dec
rorl
mov
dec
pop
mov
lds
leave
xchg
jmp
idiv
pop
repnz
pop
adc
cmp
push
lahf
in
jp
adcb
mov
jae
add
jae
repz
xor
push
add
daa
rclb
nop
mov
popa
pop
repz
adc
dec
sub
int3
sbb
mov
mov
xlat
xchg
scas
stos
clc
mov
or
push
shr
push
adc
mov
mov
push
push
ret
mov
or
scas
cmc
rorb
mov
and
push
xchg
ljmp
fcmovu
or
cmp
dec
mov
cmp
or
addr16
adc
cltd
movsl
or
ffree
fdivs
mov
push
push
stc
adc
or
pusha
adc
repnz
or
jae
test
xchg
repz
mov
in
pushf
mov
int
adc
mov
and
subl
out
or
and
mov
and
jnp
hlt
dec
in
jl
mov
pop
xchg
dec
sbb
pop
cs
adc
dec
scas
inc
jmp
sbb
add
pop
sarb
in
fidivrl
cmp
inc
and
insl
outsb
movsl
addr16
push
push
int
push
mov
stc
bound
cmp
jae
sub
cli
in
jle
adc
clc
xor
jno
xchg
add
call
push
jae
imul
data16
mov
imul
inc
adc
pop
sbb
ficompl
jp
cmp
or
bnd
cmp
xor
xchg
ljmp
mov
aas
mov
scas
add
cs
in
daa
mov
imul
xor
dec
add
gs
xchg
add
jno
xor
push
mov
in
lahf
in
repnz
and
mov
and
and
pop
pop
call
mov
stc
sti
inc
push
test
sub
repz
idivl
scas
push
aaa
xchg
test
push
nop
jp,pn
sub
dec
out
popf
in
adc
xchg
or
xchg
or
pop
and
sub
iret
cld
push
and
sub
imul
fstpl
jp
pop
clc
cmp
lcall
popa
mov
and
or
jge
data16
aaa
aas
loop
jne
loop
addr16
js
punpckhbw
xchg
cmp
int3
stc
repnz
out
in
popa
push
push
push
orl
fnstenv
es
ljmp
pop
pop
aas
adc
int
xchg
test
mov
mov
xlat
out
das
mov
out
jp
mov
pop
shr
xchg
jb
ja
mov
xchg
lea
jl
push
xchg
adc
pop
mov
jl
dec
stos
lods
push
inc
outsl
jb
hlt
xor
mov
mov
int
dec
mov
sarb
or
sub
cmpsb
aam
gs
mov
ret
inc
sbb
and
fucomip
ja
add
movsb
enter
xchg
mov
pop
js
std
ds
add
jns
pushf
setp
insl
jmp
adc
inc
aad
clc
cwtl
test
and
add
loop
sub
jecxz
or
pop
call
or
test
sbb
pop
sub
ficompl
or
pushf
cs
leave
dec
or
jo
insl
rclb
push
pop
pop
int
insl
sbb
adc
jo
fidivs
add
lea
test
shlb
mov
and
adc
mov
test
xchg
fwait
mov
fdiv
sub
icebp
mov
in
fdivs
dec
cmp
mov
push
mov
xor
sti
mov
cmp
insl
test
outsl
ret
and
idivl
arpl
mov
inc
mov
xor
pusha
and
repnz
jno
fisubs
inc
shlb
jb
mov
jnp
sbb
cmpsl
mov
popf
fcmovb
fsubrl
inc
add
sti
ljmp
ret
add
testb
add
sbb
mov
loop
mov
inc
loopne
mov
inc
lcall
ret
push
scas
int3
dec
jg
jno
mov
push
cmp
nop
pop
pop
stc
iret
or
dec
dec
imul
outsb
pop
adc
cmpsl
movsl
test
es
cmp
mov
stc
pop
icebp
repz
add
mov
iret
or
push
push
adc
cmp
pusha
call
xlat
jno
nop
adc
sub
insb
fwait
aam
daa
or
icebp
or
push
dec
ss
into
jno
xor
out
xchg
and
inc
xchg
adc
mov
fmull
test
fcompl
aad
cmp
lds
mov
imul
movsb
push
mov
aaa
popf
data16
fadds
fwait
nop
mov
sub
repz
cmpsl
push
les
pop
adc
fwait
in
xor
sub
es
stc
jmp
lahf
sahf
and
cltd
or
rclb
add
push
in
lods
lods
das
fs
popf
xor
icebp
call
mov
push
xor
dec
gs
pop
mov
jbe
nop
fidivrl
lods
jg
mov
mov
je
rcll
jbe
fcmove
fcomps
cmpsb
aad
sbb
movsb
arpl
shrb
xor
cmp
sbb
fcoml
in
jmp
push
sahf
shrl
jle
pop
lret
call
pop
loope
xor
adc
ja
sarb
js
lret
jl
xchg
or
das
aaa
jp
mov
lcall
lods
fistl
jo
aam
cmpsb
aad
fsubrs
push
aas
das
shrb
js
push
push
adc
fmull
mov
cld
xor
cwtl
add
cs
mov
stos
pop
lds
cmp
xchg
nop
enter
inc
inc
inc
mov
jg
movsl
add
sub
test
sub
mov
xchg
mov
cltd
cmp
mov
adc
aam
jl
das
inc
push
out
outsb
sti
fwait
insb
sbb
cmp
cs
inc
cs
insl
pop
cmpsb
cltd
imul
pop
pop
inc
xlat
cmp
jecxz
push
jl
mov
rcrl
dec
jno
outsl
fstl
cmpsb
pop
pop
loop
cmp
push
call
lcall
jecxz
xlat
jno
push
test
pop
outsl
mov
ret
mov
hlt
mov
sub
ret
cmp
push
arpl
insl
sbbl
xchg
mov
rclb
jge
adc
pop
loopne
pop
std
into
jl
dec
mov
int
pop
dec
push
test
shrb
arpl
das
sub
lret
sti
sbb
loope
sbb
stos
xor
test
xlat
and
inc
mov
mov
pop
xchg
jp
fistpl
inc
dec
ret
lcall
hlt
ret
mov
cmp
mov
cli
and
mov
add
outsb
cmp
repnz
mov
das
adc
filds
out
mov
add
mov
rclb
pusha
cltd
adc
insb
incl
sbb
mov
mov
push
stos
inc
jnp
int
push
push
sti
adc
scas
je
rcll
mov
pop
sbb
das
mov
cwtl
insb
push
mov
mov
xchg
stc
add
aam
jno
std
aad
mov
dec
sub
insl
sbb
repnz
iret
mov
or
dec
and
push
js
pop
fxch
pusha
cmc
cmp
fsubl
mov
mov
mov
cmp
out
rorl
adc
jl
pop
call
sbb
sub
movl
xchg
shll
shrl
packuswb
orl
sbb
ja
sarl
sti
shll
xor
mov
push
les
imul
dec
dec
push
inc
push
sbb
sub
jne
lods
cmp
hlt
sub
ja
mov
nop
iret
pusha
lods
jp
cmovns
pop
xchg
test
sahf
test
and
mov
cli
pop
aaa
mov
cli
and
xor
jne
push
fdivs
mov
js
movb
inc
xlat
les
jecxz
mov
call
imul
sub
inc
cmpsb
or
outsl
cmpsl
fisubrl
fdivr
repz
adc
mov
push
inc
outsl
and
vmovdqu
inc
and
adc
dec
lock
xchg
jge
mov
aam
movsl
cmc
push
scas
sbb
pop
mov
fwait
data16
test
lock
leave
and
xor
aas
pop
mov
fstpl
xchg
lods
push
or
pop
push
sbb
push
scas
or
in
fsubr
fimuls
mov
mov
add
xor
in
jae
loop
xchg
out
call
das
pusha
repnz
xchg
in
notb
loop
dec
call
movsl
es
xchg
mov
testb
sbb
mov
in
daa
sub
je
push
jp
sub
inc
cmpsl
js
repz
inc
mov
mov
cmc
jle
outsl
call
mov
test
outsl
test
in
dec
add
push
je
xchg
mov
outsl
or
test
dec
nop
loop
lods
cmp
inc
mov
inc
xchg
leave
pop
shll
adc
and
mov
mov
test
dec
push
fcmovnbe
push
inc
sahf
fldt
jae
pop
mov
inc
ds
and
mov
adc
out
cltd
ljmp
stos
dec
adc
jge
push
lods
in
ja
xor
icebp
jge
mov
sbbl
pop
aas
pop
inc
jne
lcall
movsl
xor
je
js
mov
nop
jecxz
lcall
std
out
cmp
push
nop
repz
or
arpl
gs
mov
stc
adc
shlb
inc
jle
out
movsl
call
filds
aaa
pop
mov
adcl
int
and
cltd
mov
adcb
and
mov
pushf
out
sti
push
dec
mov
imul
stc
leave
fs
cmp
mov
sbb
enter
out
insb
jecxz
sub
mov
sti
mov
and
nop
sbb
sub
ds
cld
add
rcll
push
repnz
pop
cwtl
sub
jmp
xchg
out
push
andl
dec
mov
das
sbb
xchg
pop
sbbl
mov
adc
cld
sub
push
mov
and
sarl
and
shlb
push
xlat
and
inc
jecxz
loopne
dec
lods
xor
into
stos
jmp
mov
sub
stos
aaa
ret
div
movsl
jge
adc
iret
rcr
dec
adc
es
push
je
pop
pop
arpl
shll
lea
ficoml
cli
push
cwtl
icebp
xchg
dec
cs
push
jno
mov
fnstcw
pusha
mov
stc
ljmp
adc
bound
repnz
out
xchg
in
ss
adc
jno
cli
xor
lret
inc
pop
push
jg
push
push
lods
es
les
and
sbbb
mov
or
mov
data16
ror
xor
loop
mov
mov
shll
nop
into
pushf
cwtl
lret
fs
aas
push
jne
mov
ja
jo
aad
in
into
or
fs
mov
cmc
mov
jnp
inc
lret
aam
adc
cmpsl
lret
imul
jbe
dec
mov
push
jg
mov
mov
inc
out
cmpsl
gs
mov
mov
inc
imul
add
mov
sub
mov
rcl
mov
push
lahf
in
stos
shll
repnz
dec
push
push
pusha
rorb
clc
shlb
cli
push
adc
andl
mov
ja
fsubrl
dec
cld
pop
and
jno
push
inc
in
fmull
pop
or
or
arpl
stos
or
jne
mov
inc
or
mulb
sti
inc
mov
flds
insb
ror
xlat
mov
cmp
xlat
in
daa
fiadds
js
in
cmp
std
sub
fisubs
sbb
iret
jecxz
ljmp
xor
mov
mov
lcall
nop
sub
lret
xor
mov
cmp
cmpsl
test
sub
pop
ljmp
jno
iret
fildl
sub
sub
mov
rcrb
ja
out
xchg
mov
dec
fdiv
push
sbb
xchg
mov
push
add
test
cmpsb
xchg
orl
ror
stos
stc
xor
mov
cmp
cmpb
inc
cmp
add
ret
sub
xor
call
sub
push
es
dec
nop
jp
and
xchg
and
fmull
xor
lahf
sbb
scas
push
mov
ret
xorl
fdivrl
scas
ja
jbe
orl
pushf
mov
stc
js
jg
sub
mov
nop
push
mov
inc
pop
sbb
push
add
or
pop
fcmovbe
xchg
xchg
jmp
push
daa
call
sbb
mov
scas
cmp
mov
mov
adc
ficompl
or
ljmp
rcrb
lock
sbb
cld
sub
popf
call
stc
xor
mov
insl
les
add
adc
lret
xlat
out
push
add
pop
jae
into
xchg
pop
call
xlat
lds
dec
cmp
inc
pop
or
in
adc
mov
mov
ja
in
inc
mov
repz
hlt
xchg
and
pop
pop
xor
cmpsl
inc
sbb
adc
aas
mov
inc
cmc
int
mov
jae
push
inc
jp
push
xorl
mov
popf
mov
pop
and
out
xchg
jp
xchg
lea
iret
cmpsl
pusha
fcoml
gs
ret
lea
shl
lret
int3
xor
mov
mov
sub
mov
sbb
cmp
cli
out
pop
mov
adc
xor
mov
xchg
bnd
dec
jno
inc
insb
or
dec
hlt
inc
pop
adc
jmp
insb
mov
mov
jg
iret
pop
push
add
cmpsb
inc
loopne
mov
push
and
test
xchg
das
pop
add
jmp
add
jbe
lcall
mov
js
ja
sbb
and
push
sbb
lret
push
in
lcall
push
call
bound
push
add
repnz
stos
jecxz
pop
cmc
adc
push
xchg
dec
dec
js
mov
loope
test
clc
cmp
mov
mov
adc
jl
in
movsl
ret
add
inc
and
cmpsl
and
inc
push
cmpsl
es
adc
movsb
roll
mov
pop
ret
xchg
arpl
dec
dec
pop
cmpsl
jns
imul
push
cmpsl
loopw
xchg
sub
andl
loope
mov
mov
jnp
popa
sub
repz
mov
dec
insb
dec
cs
ss
pop
sbb
push
dec
fsubr
xchg
sahf
cmp
push
and
dec
jb
dec
add
push
js
imul
negl
sub
mov
aad
sbb
xor
test
cmp
stos
jnp
lds
pop
movsl
mov
mov
addr16
add
xor
xchg
cld
xor
inc
dec
inc
push
lret
iret
xchg
jnp
pop
lcall
aam
jbe
dec
xchg
add
ljmp
xchg
lods
inc
adc
xor
repnz
nop
jae
repnz
popa
mov
movsb
fldl
imul
pushf
inc
loop
mov
add
cmp
imul
out
jns
subl
xorb
xor
xchg
or
insb
arpl
es
sbb
cmp
aaa
ljmp
mov
dec
in
inc
and
adc
add
imul
cmp
sahf
add
cmp
outsb
cld
mov
lret
mov
gs
fldcw
or
adc
push
scas
repnz
push
mov
xor
in
insl
out
sbb
movsl
lods
inc
pusha
std
xor
jae
fistpl
sbb
xor
cmpsl
les
and
dec
sbb
pop
dec
mov
stc
push
imul
addr16
clc
xor
clc
mov
scas
fisubs
movsb
pushf
fistpll
dec
xchg
jge
jbe
push
add
xlat
repnz
xlat
push
popf
mov
cmp
sub
scas
arpl
pop
xchg
out
adc
lock
mov
out
int3
inc
jo
push
lods
in
pop
mov
mov
fsubs
fcoml
fmuls
xchg
cmp
mov
addr16
xchg
cmpsb
mov
jl
push
addr16
outsb
fwait
call
mov
or
xchg
hlt
sti
jno
add
push
xor
sbb
in
in
lcall
mov
dec
rcrl
mov
sbb
pop
fyl2xp1
in
movsb
rcll
push
in
jo
jb
imul
mov
mov
insb
aaa
add
xchg
fidivrs
cmp
mov
xchg
pop
sahf
or
push
inc
inc
or
sub
sbbl
scas
ds
and
sub
jae
lret
gs
and
mov
sbb
cli
movsl
cs
push
mov
add
enter
ja
movb
xchg
fsts
jmp
push
jae
adc
xor
mov
test
adc
sbb
fdivrl
pop
cltd
aam
ds
divl
das
cmp
xchg
ljmp
subb
inc
jle
sbb
push
clc
nop
cmp
xchg
mov
addl
lret
outsl
dec
insl
jecxz
xlat
in
stos
test
mov
jle
test
sbb
adc
hlt
lea
das
sysret
pop
pop
cmpl
jae
xchg
test
mov
dec
mov
push
mov
cmpsl
sub
mov
jg
push
pop
add
and
fidivrs
push
pop
xchg
jge
sub
jno
mov
in
inc
repnz
je
das
dec
add
sbb
in
mov
push
cmc
mov
outsl
jge
das
pop
xchg
fimuls
stc
rolb
add
ret
insl
or
adc
jnp
xor
xcrypt-ofb
cmpsl
insl
call
jo
loopne
mov
aaa
movsb
xor
repnz
idivb
cmc
mov
scas
cmp
jae
scas
push
pop
mov
lock
cltd
cltd
cwtl
sbb
js
daa
mov
adc
mov
out
dec
out
aaa
mov
inc
outsl
xchg
sbb
loopne
shll
out
push
dec
push
mov
push
jbe
mov
das
sti
ljmp
add
hlt
aam
xorb
aaa
inc
sbb
adc
aas
sub
mov
sub
or
test
jmp
shrl
ret
push
jge
sub
jo
loope
ds
out
jns
pop
pop
rorb
add
sbb
xor
daa
ljmp
jae
ret
xlat
and
push
sbb
mov
mov
mov
pop
cmp
hlt
xchg
jle
sub
cmp
cwtl
iret
inc
icebp
icebp
ss
push
stc
frstor
inc
push
shl
pushf
xor
cld
adc
rorb
pop
sbb
lcall
sbb
mov
sub
jae
fisubs
into
inc
push
push
cmp
dec
cmpsb
or
jno
inc
fstpl
stos
pop
outsb
push
mov
std
mov
and
mov
pop
aas
stc
movsb
and
add
mov
mov
push
int
cmp
push
inc
and
insl
mov
movsl
mov
push
sahf
testl
sub
test
adc
test
icebp
int
scas
mov
addr16
fnstenv
dec
repnz
sahf
mov
test
pop
inc
int
jmp
std
fbld
adc
mov
pushf
out
int
lods
clc
mov
mov
jb
xchg
fwait
or
xchg
aad
pop
or
insl
push
aaa
daa
loopne
adc
leave
sti
les
in
xchg
jb
dec
pop
cmp
inc
adc
mov
movsl
scas
lcall
lods
mov
fstpl
cmp
mov
std
test
adc
shl
sub
xchg
or
jge
popa
sub
add
mov
jbe
xchg
cmpsl
mov
rolb
xor
mov
lea
test
stos
add
mov
mov
scas
mov
mov
in
cmp
push
out
sahf
push
mov
inc
mov
inc
adc
pop
shll
call
mov
cmpb
loope
cmpsl
stos
cmp
dec
lret
and
mov
mov
dec
shlb
daa
jecxz
mov
sbb
lret
and
in
mov
cmc
dec
mov
movsl
xchg
mov
int3
in
testl
dec
mov
pop
xor
mov
aam
sbb
jae
pop
stc
cmp
sub
adc
fwait
inc
or
outsb
xor
out
mov
or
xor
rorb
mov
xchg
cmpl
jmp
sarb
sysret
pop
into
fmuls
inc
sub
push
addb
jno
dec
repnz
add
push
movsl
add
imul
cli
push
inc
pusha
fs
imul
lar
jg
mov
push
pop
inc
jne
push
jne
mov
jns
xchg
aam
std
xchg
ss
movsl
mov
push
dec
les
push
xor
les
negb
and
add
dec
rclb
pop
mov
in
sbb
mov
and
jb
mov
loop
scas
js
adc
push
rcl
mov
aas
lea
add
jne
xor
mov
and
cmpsb
adc
aas
daa
inc
inc
jl
imul
lds
fucom
mov
inc
and
or
and
mov
jmp
mov
es
sbb
shrl
aam
dec
sub
outsl
enter
cmp
mov
xchg
push
cmp
pop
add
or
mov
sarb
cmc
sub
or
aam
jp
inc
push
add
loop
imul
and
pop
xchg
mov
sbb
shlb
scas
mov
add
push
shrb
mov
inc
fmuls
inc
add
mov
cmpsl
mov
add
out
out
data16
retw
mov
mov
sbb
shrl
std
int
loope
mov
dec
jnp
xchg
js
dec
mov
cmp
ret
mov
into
dec
or
push
lret
sub
call
push
add
xor
jge
sub
add
jle
std
dec
movsl
lcall
push
imul
sahf
cmpsl
scas
dec
cli
mov
nop
and
mov
or
dec
stc
pushl
movl
push
mov
aaa
icebp
int
and
cwtl
xlat
xchg
sbb
mov
out
xchg
cld
cltd
adc
jecxz
out
jbe
int
and
xchg
xchg
mov
jl
es
sbb
sbb
gs
mov
fcmovu
xchg
movsb
or
dec
orl
mov
aad
mov
add
xchg
int
and
sub
test
std
xchg
pop
pop
xchg
jmp
mov
dec
cmpl
in
adcl
mov
outsl
jns
xchg
clc
pop
add
aaa
xor
outsl
popl
lret
push
inc
add
pop
aaa
push
jbe
clc
pop
ret
xor
xchg
sub
sti
sub
test
pop
jno
xor
push
inc
leave
int3
daa
jmp
jns
repz
orl
cmp
xchg
in
cmp
je
jbe
dec
popf
insb
adc
or
xor
lcall
dec
std
cmp
scas
call
dec
pushf
cmc
cltd
pop
fsubl
mov
pop
add
jb
fwait
pushf
pop
movsl
inc
sbb
and
mov
rcrb
xchg
nop
mov
pop
inc
dec
xchg
cwtl
dec
test
loopne
pop
mov
add
pop
in
sbb
sbb
mov
inc
cmpsl
push
and
sbb
xchg
push
push
fwait
cmp
cmpsb
dec
add
inc
unpcklps
out
mov
mov
mov
inc
jns
and
imul
lcall
adc
enter
icebp
outsl
sbb
xchg
sbb
add
sbb
aas
dec
push
repz
subb
push
sub
aad
sbb
negb
or
inc
mov
stos
and
xchg
mov
divb
mov
jo
nop
jne
aas
repnz
pop
ds
or
push
mov
or
add
dec
sahf
xor
test
sarl
sub
mov
inc
jnp
dec
cmp
pusha
push
dec
pop
inc
call
and
fmull
shll
addr16
mov
mov
jbe
add
ret
or
sbb
inc
out
or
add
adc
leave
lret
mov
lret
mov
sub
sbb
icebp
xchg
add
lahf
xor
sti
jbe
loop
push
dec
incl
adc
aas
cmp
ds
test
test
leave
jb
or
negb
xchg
inc
and
daa
je
sbb
stos
sbb
or
jae
mov
adc
popf
outsb
outsb
mov
int3
cmpsl
outsl
fsub
xlat
push
rcrl
push
sbb
xchg
mov
mov
sti
xor
popa
dec
inc
mov
xchg
cmc
sbb
and
movsl
test
pushf
and
adc
loope
jge
mov
das
sarb
imul
fistps
xchg
sarl
ds
jle
xor
and
and
cmp
daa
test
cli
out
jne
rorb
add
pop
sub
cltd
mov
inc
pop
mov
jbe
lret
sub
rclb
cltd
mov
mov
jbe
inc
leave
dec
les
pop
adc
lret
mov
mov
xchg
and
dec
arpl
or
cmp
sub
mov
mov
addr16
outsb
or
mov
jl
adc
test
jmp
and
dec
addr16
dec
outsb
jg
ret
test
or
push
bound
gs
jl
imul
test
jae
pusha
mov
sbb
cmp
cli
push
scas
cmp
out
xor
lods
sub
data16
or
or
fdivrl
push
mov
aaa
test
ds
xlat
jle
loopne
loopne
adc
and
pop
fbld
mov
xor
xchg
dec
adc
scas
pop
lea
xchg
push
shl
movb
int
adc
movsl
enter
insb
sub
popa
imul
xchg
pop
cmp
sub
jb
dec
aaa
mov
pusha
sbbl
ret
jl
enter
xor
xor
pop
mov
push
pop
pushl
cltd
stc
and
sarl
je
sbb
mov
jmp
dec
add
mov
sub
dec
outsl
mov
cmpsl
pop
aad
bound
loope
xor
dec
lgs
popf
dec
sahf
sub
xchg
cs
add
popa
xor
addr16
pop
pop
sbb
jo
iret
xchg
mov
scas
stos
cmp
sub
jns
pushf
sub
imul
add
aam
cld
ret
mov
or
mov
mov
call
mov
imul
ljmp
xor
fidivrs
sub
in
sbb
mov
cmpsb
test
fsubrp
loop
cmp
mov
les
xchg
xor
cmp
movsl
sbbb
mov
adc
inc
in
jl
xor
lret
ds
aaa
push
push
adc
lock
adc
inc
iret
aaa
inc
inc
lahf
dec
dec
je
jno
int
daa
outsl
inc
mov
add
mov
mov
popa
pop
ficoms
ljmp
lds
data16
jne
shll
aaa
push
push
pop
fwait
inc
mov
fwait
and
mov
jae
mov
lea
or
mov
jmp
inc
jno
pop
out
jo
mov
rcrl
adcl
cwtl
ds
inc
xchg
cmp
pusha
sbb
ljmp
enter
shrb
je
xchg
mov
es
test
xchg
sbb
lret
faddl
mov
iret
out
jo
adc
and
sbb
mov
sbb
mov
sbb
clc
mov
jae
adc
imul
lret
pop
fmul
push
mov
inc
inc
jne
adc
pop
jne
mov
gs
or
loop
repz
lods
inc
push
pop
and
xchg
in
cmpsl
mov
dec
xchg
ret
into
push
ja
pop
add
mov
sub
adc
ja
add
imul
push
in
sub
frstor
fildl
xlat
and
push
xor
sbb
fucom
repnz
sbb
sbb
clc
add
in
sbb
cli
jae
xor
aaa
rep
pop
ret
xchg
xchg
movsb
xchg
fisubl
fldcw
ljmp
inc
mov
lds
mov
jno
int3
sub
imul
pop
adc
cmp
ret
jecxz
ficoml
int3
mov
sub
sub
pop
stos
cmp
lret
mov
cmp
fidivrl
inc
pop
push
jae
sub
xchg
test
mov
dec
out
in
ret
jge
pop
ret
cmp
push
inc
cmp
push
or
mov
xor
xchg
sahf
sbb
xchg
dec
ljmp
and
jnp,pn
clc
pushw
jmp
shr
cmp
inc
xlat
pushf
adc
mov
jbe
inc
jp
cmpsb
mov
sub
sbb
xchg
and
cwtl
out
mov
dec
push
add
inc
add
scas
rclb
dec
or
call
push
pop
lahf
imul
hlt
xor
dec
sbb
jae
lods
cmpsb
jg
cs
push
popf
add
adc
pop
adc
mov
or
xchg
loopne
in
insl
movsb
adc
dec
cmp
jl
mov
xchg
rorb
add
jge
sbb
mov
js
repnz
or
push
fldt
add
ds
cmp
aaa
data16
mov
mov
mov
pop
push
cs
inc
fistpl
scas
push
ja
arpl
cltd
aaa
mov
in
mov
test
dec
scas
loopne
cs
xorl
out
sub
pop
jl
inc
push
mov
sub
sbb
mov
adc
jge
fdivrl
pop
dec
std
gs
sbb
and
hlt
jge
stos
decb
xchg
insb
leave
xchg
push
sub
lahf
push
stc
lahf
rclb
dec
fisttpll
or
out
mov
call
push
and
hlt
and
cmc
sbb
dec
xor
test
or
cmc
cli
or
or
xlat
sub
in
rorb
sub
jne
jl
out
push
xchg
and
aam
nop
stc
lea
fwait
jns
mov
pop
sub
leave
mov
cmpsb
movsl
pop
cmpsb
or
outsl
lahf
push
bound
sub
repnz
mov
mov
ja
sub
jo
jmp
inc
xor
js
cmpsb
xchg
idivl
test
jge
sub
outsl
lods
mov
mov
scas
bound
push
loope
fistpl
push
jmp
mov
dec
ljmp
dec
jbe
pop
into
mov
mov
inc
mov
lods
lea
test
flds
rorl
mov
mov
mov
mov
jle
addl
mov
push
mov
lcall
fsubl
xchg
stos
shll
push
leave
xor
addr16
pop
sub
and
inc
mov
mov
mov
and
fstpl
icebp
cwtl
leave
test
nop
pop
clc
enter
call
dec
and
mov
sub
mov
add
or
mov
mov
cld
addr16
cmp
push
or
fnstenv
fimuls
and
cs
aas
pop
add
mov
pop
decl
mov
add
lret
insl
adc
out
out
mov
sbb
enter
mov
ss
test
imul
loopne
add
jle
jno
xchg
pop
adcb
push
mov
push
push
arpl
and
jns
fidivs
aam
out
mov
xchg
test
lret
pop
jl
push
mov
mov
ljmp
adc
loopne
cmp
dec
sbbb
sub
out
hlt
mov
dec
fildll
push
mov
ficomps
lcall
or
push
popf
es
sub
repz
aad
pop
mov
add
sub
inc
cmp
das
out
sbb
das
aaa
xchg
aaa
rcll
xchg
fs
dec
jmp
cmovne
sub
jmp
adc
repnz
xlat
xor
imul
outsb
and
mov
repz
insl
mov
and
xor
arpl
mov
dec
loope
arpl
data16
shufps
leave
sub
lret
push
mov
mov
mov
jmp
dec
stos
ret
sbb
fdivl
push
lcall
sub
adcb
scas
call
pop
mov
adc
push
sub
int
cmpsl
ror
xchg
outsl
inc
aas
sub
lcall
stc
sbb
cmp
mov
and
sbb
popa
lods
js
or
mov
pusha
scas
cmpsl
bound
fildl
add
lahf
cmpsl
mov
and
sti
or
in
cmp
dec
inc
pop
jo
mov
add
sub
xor
mov
jae
fdivrl
dec
iret
fidivl
clc
cmp
push
pushf
mov
mov
add
inc
negb
mov
test
mov
inc
mov
or
and
adc
dec
and
jp
xchg
cmp
pop
pop
cltd
sbbl
daa
aas
jmp
jmp
xchg
add
cli
cmpsl
rclb
movl
cmp
xchg
sbb
inc
das
in
sbb
sbb
jbe
adc
push
lock
jo
scas
xchg
addr16
jge
jns
test
sub
stos
aam
lods
inc
in
bound
les
es
sbb
cld
or
arpl
iret
ljmp
orb
insl
push
ljmp
sub
add
cmp
jo
cmp
push
xchg
and
mov
rorl
cmpl
mov
mull
pop
pop
xchg
rcrl
lret
mov
add
mov
pop
xor
add
push
call
jae
dec
mov
xchg
arpl
add
or
std
dec
scas
fisubs
cli
xchg
xchg
pop
inc
mov
xor
punpckldq
fwait
test
imul
loopne
jnp
sub
cmp
popa
int3
dec
sbb
stos
mov
jl
mov
int
frstor
mov
cmpb
xor
mov
adc
lahf
repz
add
and
jnp
out
js
sub
push
and
sbb
ja
mov
scas
mov
mov
xchg
push
hlt
shrb
fimull
add
xor
dec
lods
scas
mov
push
hlt
pop
jns
bound
mov
and
cld
enter
or
add
or
jno
cli
pop
dec
push
jne
sti
sub
sub
js
inc
test
adcl
das
xchg
mov
push
mov
test
ret
and
bound
xor
jne
push
xchg
lret
jnp
lds
adc
xchg
push
inc
inc
inc
aaa
addr16
mov
test
je
mov
call
addl
push
pusha
testl
test
ds
mov
push
aad
mov
out
jb
pop
push
cmp
and
pop
je
inc
pop
cmp
or
aam
xchg
add
test
lods
aam
xchg
ret
inc
clc
sbb
pop
sar
add
mov
pop
and
cmp
in
clc
enter
scas
rolb
mov
push
pop
lret
jae
out
dec
and
icebp
adc
sbb
mov
xchg
iret
mov
dec
shll
cwtl
dec
loop
jge
aad
jbe
int
shl
dec
or
ss
dec
xchg
std
addr16
mov
test
notb
or
jo
iret
pushf
icebp
mov
sbb
xor
lods
sub
loop
mov
repnz
shr
cmp
push
arpl
pop
call
or
or
fiadds
adc
fdivl
test
dec
mov
scas
andb
outsb
lock
jp
or
sbb
mul
and
test
mov
test
xchg
xor
and
outsl
imul
mov
pop
push
mov
js
inc
and
jne
out
push
push
xor
in
push
xchg
or
xchg
inc
imul
mov
test
mov
in
lock
and
fs
movsl
pop
or
jae
jl
mov
fs
ja
mov
movl
dec
sub
loopne
adc
dec
adc
scas
test
and
jns
inc
pop
jno
sbb
mov
fstpt
cmp
xchg
rolb
sahf
pop
cs
lock
ja
jecxz
dec
iret
es
xchg
mov
push
mov
sbb
fucomp
mov
das
imul
xor
push
push
popa
std
mov
outsl
rol
dec
stc
jge
pop
xorb
add
idiv
cmp
xchg
dec
pop
lds
lods
loope
pop
sub
adc
sahf
xor
jne
hlt
dec
out
inc
sahf
mov
sub
push
jb
aas
mov
mov
push
test
sbb
daa
or
mov
and
pop
xor
pushf
insb
push
sub
addr16
shr
adc
pop
sbb
mov
add
push
mov
faddl
shll
in
pop
dec
insb
sarl
cmp
dec
mov
out
xlat
lods
or
inc
stos
dec
incl
sub
aam
and
ds
shrl
xchg
xchg
daa
loopne
mov
adc
mov
into
mov
sbb
inc
inc
fmuls
jnp
test
push
loope
cmp
cli
ljmp
adc
lahf
sbb
rcrb
dec
adc
xor
mov
pop
out
xlat
push
pop
adc
addr16
andl
lock
in
dec
jmp
jbe
inc
ljmp
mov
pop
mov
nop
xchg
mov
pop
lock
ret
pushf
arpl
lds
jb
jmp
add
stos
jb
and
fucomp
add
mov
cmp
sahf
add
mov
lahf
sbb
pop
mov
loop
andb
test
mov
sahf
negb
jb
sub
dec
mov
mov
cmp
pop
test
sahf
ja
rolb
test
insl
jge
mov
push
inc
xchg
imul
or
push
sahf
push
mov
jns
incb
pushf
outsb
push
notb
lret
aad
ljmp
xchg
or
lods
cmp
sbb
or
xlat
loop,pn
lahf
cmp
adc
pop
push
popf
sbb
stc
movsb
jmp
int3
nopl
cmpsb
data16
lea
stos
xlat
cmpsb
sub
and
pop
and
mov
mov
stos
cmp
lahf
xchg
and
dec
mov
cmp
xor
cs
mov
int
test
inc
outsl
jge
ljmp
in
idivb
and
inc
xor
out
mov
call
mov
xlat
jno
nop
jb
movsl
testl
mov
cmpsl
dec
daa
shl
lock
and
pop
or
aaa
push
mov
mov
push
fmull
daa
out
out
outsb
lds
sub
dec
outsb
and
out
fists
repz
rorl
cmp
push
cmpsl
sub
sub
aam
cmp
in
stc
hlt
pop
call
jne
fwait
sub
out
sub
sbb
js
or
cwtl
es
add
adc
scas
xchg
or
lahf
jle
mov
or
adc
shll
imul
addr16
add
dec
pop
inc
enter
xchg
mov
dec
adc
adc
inc
fisubrs
dec
mov
sub
dec
lret
push
dec
pop
xor
popf
push
test
and
sub
psubq
push
mov
je
sub
clc
popa
mov
dec
mov
xchg
and
jns
xchg
mov
rcrl
jmp
xchg
es
inc
mov
push
push
jae
sub
pop
outsl
mov
sti
mov
shrl
sbb
aam
fldl
xlat
mov
rcrb
xchg
mov
or
mov
sub
je
and
adc
leave
repz
mov
or
cmp
inc
jecxz
jae
insl
cmpsl
cmp
xor
jmp
addl
sub
mov
dec
push
xlat
aaa
fmulp
dec
ljmp
hlt
xchg
adc
pushw
mov
sbb
bound
jecxz
in
cwtl
mov
push
xchg
adc
je
push
push
repz
push
pushf
inc
xor
iret
les
jecxz
pushf
and
fists
ljmp
imul
xor
mov
xchg
lret
push
xchg
nop
push
push
test
shlb
jno
adc
ljmp
pop
mov
movsl
push
jp
nop
jno
dec
lock
adc
mov
mov
jne
jne
shlb
push
incb
mov
sub
mov
pop
push
pop
stos
fwait
jmp
bswap
hlt
sarl
dec
popf
lea
cmp
inc
dec
mov
aam
loope
or
dec
or
push
std
or
inc
mov
jo
mov
pop
cs
mov
jp
sbb
adc
arpl
jl
nop
ljmp
mov
les
data16
adc
outsb
fwait
xchg
dec
mov
int3
in
mov
data16
out
hlt
mov
push
xor
test
leave
jno
jecxz
inc
and
sub
aaa
or
adc
clc
xchg
out
jo
stc
sbb
xorl
outsl
sub
push
pop
mov
leave
notl
mov
std
aas
lcallw
aad
cmp
cmpb
sub
movb
scas
adc
cmpl
xchg
mov
fisttpll
adc
mov
gs
add
pusha
xchg
and
addr16
push
ret
fbld
dec
mov
sahf
repz
xchg
lret
lock
cmpsl
pusha
in
test
negl
add
inc
test
cmc
in
out
mov
in
xor
cmp
jg
sbbl
std
das
lea
lea
jge
xor
push
mov
mov
fldcw
inc
mov
shlb
daa
out
int3
aaa
and
jmp
imul
pop
and
push
dec
imulb
push
mov
xor
adc
mov
popl
into
or
inc
lods
pop
scas
shll
mov
test
pop
ja
mov
jae
outsb
imul
push
cmpsb
and
pop
jle
mov
lock
inc
scas
and
pop
sbb
pushf
setp
pop
loope
jecxz
sarl
test
lret
mov
mov
ss
inc
or
fidivl
addr16
xchg
cmpl
jo
popf
das
mov
inc
shlb
sbb
testb
pop
push
lcall
outsb
mov
fucomip
mov
mov
out
gs
aas
shl
pop
cltd
ror
sahf
aas
pop
ja
push
out
jae
cmpsb
add
lods
add
lods
push
cmp
pushf
or
lods
mov
xchg
repz
add
mov
push
out
fiadds
mov
inc
cmp
pop
repnz
jns,pt
adc
jecxz
mov
subl
add
xchg
adc
push
mov
xor
bound
in
rorb
pop
sbb
pop
mov
lock
push
repz
iret
cmp
add
xor
mov
jnp
or
xchg
cmp
mov
and
js
jb
ficoml
adc
sub
pop
insb
fidivrl
cmp
daa
xor
push
add
mov
rolb
push
sub
jle
push
cmp
pinsrw
dec
in
jae
decl
test
jno
jmp
mov
mov
scas
test
dec
into
cmpsb
mov
pop
mov
test
movsb
sti
movsb
lea
cmp
stos
aad
xlat
stc
mov
xor
cs
sbb
mov
gs
addr16
adc
mov
and
push
inc
jle
enter
inc
pop
add
cmc
adc
outsl
loop
out
hlt
push
cmp
or
dec
xchg
sub
sti
push
lret
sbb
push
cmpsb
lahf
or
xor
mov
jbe
mov
adc
shll
int3
jle
in
lock
xor
add
insb
clc
cmp
loop
push
push
insb
popa
clc
pop
loop
ret
pcmpgtb
dec
call
or
data16
lea
repnz
or
cmc
adc
inc
or
xchg
pop
bound
jne
sbb
iret
cmp
cmp
ret
or
nop
scas
push
pop
jg
ffreep
xor
ret
adc
sub
xorb
fcmovu
stc
insl
xor
or
pushf
mov
mov
mov
pop
cld
and
add
push
pop
out
stc
adc
imul
push
popa
fnsave
cld
orb
mov
cs
imul
mov
push
repnz
sbb
stos
test
xchg
jo
rol
out
xor
popf
sbb
mov
mulb
mov
fs
adc
mov
test
inc
bound
mov
insb
pop
loop
in
imul
int3
lea
add
and
test
imull
addr16
push
and
shll
pop
fiadds
es
or
leave
mov
mov
jl
dec
jge
out
inc
push
in
mov
sti
xchg
cli
sub
adc
fistps
sarb
lods
mov
aas
imul
lret
mov
imul
xchg
js
adc
mov
imul
lahf
faddl
dec
mov
ja
out
shl
mov
sub
xchg
pop
int
in
in
aas
mov
xchg
dec
sub
cltd
jge
das
out
push
inc
fisubrs
mov
push
and
stc
and
fisubl
out
in
stos
inc
mov
inc
xchg
sub
mov
and
mov
test
mov
outsl
lret
daa
mov
cld
add
clc
data16
inc
je
cmp
cmp
and
dec
aas
std
loopne
movsl
jle
push
bound
dec
xor
inc
sbb
or
pop
lcall
iret
ficompl
pop
repz
es
enter
sub
mov
sahf
negb
loopne
test
mov
and
dec
sbb
push
loope
jecxz
xorb
push
jns
adc
cli
push
or
mov
push
nop
icebp
div
divl
test
mov
fldenv
inc
inc
push
lcall
push
push
and
cmp
out
cwtl
sarb
jmp
ret
scas
imul
dec
insl
adc
xchg
mov
cli
test
movsl
scas
or
lea
bound
iret
popa
cmp
xor
xor
loopne
dec
mov
pop
fldl
add
and
out
and
jp
sub
mov
inc
ret
inc
movsb
out
out
jae
inc
stc
mov
in
out
push
outsl
cmp
cmp
dec
add
mov
repz
xorb
pop
mov
je
pop
sub
sbb
sub
stos
xor
and
lret
in
scas
mov
adc
fcoms
lods
mov
cmpsl
inc
in
fwait
cmp
hlt
in
dec
pop
xchg
sbb
pop
cmpsb
mov
mov
ror
jge
xor
jmp
ret
pop
pusha
repz
ljmp
mov
dec
adc
cmp
mov
rcll
mov
daa
mov
out
lcall
mov
jnp
cmp
and
popf
sbb
pop
mov
pop
rcll
xchg
nop
jns
pop
mov
les
pop
idivb
js
dec
and
insl
jle
je
movsb
rorb
sub
push
daa
or
dec
out
cmp
andb
std
mov
cmpsb
pop
sbb
adc
aad
mov
cmp
icebp
ds
and
add
jl
fistps
dec
nop
jg
inc
and
and
enter
hlt
hlt
aaa
mov
daa
or
add
mov
stos
decb
mov
dec
test
mov
sbb
add
add
sub
push
xor
jo
lock
imul
aas
fmuls
gs
push
imul
xor
pop
pop
orb
add
adc
and
push
arpl
mov
sub
push
mov
pop
je
or
mov
mov
mov
and
nop
iret
jle
stc
add
cmp
cltd
pop
push
xchg
in
or
dec
jl
push
dec
sub
xor
es
ffree
inc
test
fbld
mov
dec
imul
push
shrb
mov
in
jnp
jmp
dec
stos
mov
sub
iret
insb
mov
add
lret
sub
inc
or
addr16
push
cltd
add
mov
adc
aad
cs
shlb
mov
ror
mov
mov
inc
test
rcrl
fstpl
out
andb
sbb
addr16
mov
jne
xchg
cmc
int
jecxz
test
sarl
outsl
in
into
cmp
fwait
inc
out
push
mov
push
testl
iret
scas
rcll
jge
in
test
iret
and
and
and
adc
xchg
imul
std
push
test
sbb
fistpll
mov
pop
mov
ror
inc
mov
mov
inc
fs
insb
mov
xchg
dec
push
arpl
jno
movsl
leave
inc
xchg
pop
dec
mov
aaa
pop
push
push
dec
cmp
ficomps
push
insb
mov
mov
or
xchg
mov
pop
mov
mov
into
mov
pop
mov
or
outsl
outsb
pop
add
xor
inc
sub
sub
mov
mov
or
and
add
cmpsb
push
jl
js
adc
hlt
in
mov
jp
bound
sahf
pop
mov
sub
jge
stos
sub
mov
cmpsl
insl
test
fisubs
mov
cmpsl
mov
mov
pop
aaa
repz
and
jae
mov
and
ficompl
inc
in
stos
inc
dec
sbb
jno
setg
mov
pop
or
shrb
icebp
data16
cmpsl
insl
loop
sarb
shl
pop
call
jmp
mov
cmp
call
jg
and
popl
lods
jnp
inc
js
enter
scas
cmp
sahf
mov
out
xchg
dec
sub
lea
xchg
mov
sub
xorl
je
fnstsw
test
sbb
fsubrs
mov
js
or
sti
shll
jle
mov
xor
int3
hlt
test
xor
add
shlw
leave
jb
pushf
jns
inc
ljmp
lcall
lret
push
push
xchg
mov
out
jecxz
out
and
push
in
sbb
int
fisttps
jno
inc
dec
jg
pop
ss
cld
popf
stos
in
cwtl
xchg
jns
mov
push
jno
scas
and
push
mov
orl
push
call
sub
xor
mov
sub
fbld
ret
mov
cli
loopne
sub
mov
repnz
jne
or
leave
outsb
loop
stos
sub
mov
and
mov
mov
stc
xor
add
incb
hlt
xor
in
in
or
pushf
and
and
push
dec
jge
xchg
and
sub
ds
xor
loope
add
dec
mov
pusha
xor
lcall
andl
sub
or
lods
pop
loopne
pusha
xchg
dec
pop
push
rcrl
clc
lea
mov
lcall
or
sbb
mov
sbb
push
pop
repz
xchg
inc
out
negb
mov
aam
hlt
or
shrb
outsl
andl
push
cli
scas
inc
or
addr16
jb
xchg
xor
out
dec
out
ficoml
outsb
andb
sahf
or
dec
mov
push
in
jle
mov
and
mov
or
loope
add
lcall
adc
add
sub
dec
cltd
shl
xor
add
cmp
loopne
sbb
jns
xchg
mov
enter
lret
xor
inc
add
and
cmpb
gs
sbb
outsl
dec
sub
cmpl
jo
adcb
xchg
dec
outsl
sti
cmpsb
leave
pop
call
and
subb
pop
in
dec
xchg
xchg
popa
fcmovnbe
sti
cld
pop
mov
movsb
push
cli
inc
mov
mov
dec
sub
loop
out
cltd
xor
jo
adc
jge
int3
jb
xlat
mov
addl
push
mov
mov
inc
std
jmp
in
inc
xor
xchg
insl
addr16
dec
mov
adc
and
cmp
push
push
mov
mov
dec
dec
and
out
or
sub
lahf
and
dec
or
sbb
int3
cmp
and
fidivl
push
pop
pop
ret
out
sahf
sbb
movsl
insb
rcrl
mov
push
lds
lds
ja
mov
adc
lea
insl
daa
aad
in
sub
pop
push
imul
iret
and
xchg
adc
addr16
notl
pop
mov
dec
mov
push
jg
mov
and
pop
push
sbb
iret
frstor
ljmp
jne
fcomps
mov
imul
xor
cli
xchg
cmp
leave
push
add
jmp
enter
fcom
xchg
in
inc
and
inc
lahf
mov
stos
cwtl
mov
flds
adc
fldenv
jp
or
mov
scas
dec
push
xor
pop
mov
jbe
popf
and
sbb
fwait
outsl
sahf
popf
cmpb
push
pushf
loopne
cmp
mov
inc
lock
pop
test
mov
jp
in
sub
sub
aaa
xor
adc
adc
mov
jle
rcr
icebp
ret
cmp
mov
testl
in
enter
xchg
dec
iret
adc
insb
xor
add
sbb
add
lea
lret
into
stos
mov
rorl
mov
bound
mov
adc
popa
movsb
mov
cli
in
jno
and
mov
loope
or
sbb
xchg
cmp
jle
repz
adc
jmp
pop
sub
imul
mov
cmc
adc
stos
rol
dec
je
in
int3
popf
push
out
pusha
dec
sti
enter
cmp
scas
xchg
jne
sub
push
gs
xor
fcmovnu
testb
mov
sub
xor
cbtw
and
lea
ficoml
and
or
adc
aaa
dec
mov
aad
movsb
inc
adc
sbb
cmp
sbb
subl
cmp
mov
sub
mov
inc
lods
jo
adc
std
ss
push
clc
mov
jge
mov
mov
popa
dec
mov
mov
in
jae
popf
jne
inc
dec
scas
mov
xchg
jmp
xchg
sub
out
mov
lods
and
xchg
aas
jae
aaa
cmp
mov
lcall
push
jbe
sbb
jmp
mov
xchg
insl
addr16
adc
xlat
test
lods
pop
push
jge
imul
pop
cmpsb
mov
mov
lds
loope
push
add
movsl
inc
sub
adcb
int3
dec
mov
mov
movb
xlat
cmpsb
xor
jne
js
fwait
pusha
pop
dec
cmpsl
mov
std
shlb
enter
lods
shl
loope
rclb
add
mov
rcr
mov
pop
fcoml
adc
push
enter
adc
and
insb
mov
sbbb
mov
cmpsl
or
mov
pop
xor
sub
mov
std
out
rolb
ja
repnz
or
fildl
orl
inc
scas
subb
mov
sub
push
jmp
ljmp
mov
push
insl
push
sti
push
out
icebp
movsb
out
xchg
mov
mov
ljmp
cld
outsl
paddusb
xor
xlat
adc
mov
lock
dec
xchg
add
lret
daa
add
xchg
and
sbb
das
dec
gs
pop
lret
imul
js
pop
add
add
fildl
mov
sbb
outsb
push
mov
jl
bound
stos
fnstenv
xor
out
and
repz
jge
es
call
or
repnz
pop
pushf
or
nop
test
push
xchg
push
mov
add
dec
push
scas
ret
addr16
loop
xor
sbb
and
loopne
adc
mov
mov
push
jle
cmp
xor
call
stc
fwait
leave
inc
inc
mov
pop
sbb
sarl
jp
imul
testl
push
enter
icebp
pop
xchg
test
cmpsl
pop
adc
lds
mov
sbb
push
push
push
mov
test
dec
sbb
cmp
sbb
jns
stc
bextr
inc
xchg
mov
jno
std
mov
mov
iret
fs
or
pop
out
push
mov
fidivrs
xchg
orb
mov
adc
xor
or
mov
mov
out
cmp
stos
adc
xor
lret
dec
leave
in
popa
int
shll
fdivs
cld
push
pop
mov
icebp
cmp
iret
xchg
std
ljmp
dec
mov
test
icebp
jg
inc
fmul
mov
dec
loop
mov
sbb
mov
test
lock
loope
aaa
or
ret
pop
mov
cmpsb
sahf
in
sbb
dec
cmpsl
scas
mov
xor
cmp
ret
into
mov
test
rol
add
cltd
mov
outsb
cmpsb
in
inc
dec
mov
addr16
mov
sub
sti
inc
cmp
test
push
mov
aaa
clc
pop
jle
xchg
fwait
dec
inc
daa
jmp
mov
or
int3
xor
insb
jg
dec
adc
mov
test
push
add
pushf
out
lock
cmc
xchg
fwait
cltd
jne
cmp
cli
push
mov
lret
xor
jae
jbe
inc
nop
mov
les
inc
sti
push
jae
add
stc
or
push
mov
mov
cs
pop
add
fdivrl
jl
fildl
ss
movsb
mov
cmovbe
imul
jmp
add
arpl
ljmp
aam
jl
inc
mov
pop
jge
orl
mov
clc
sub
fcomp
sbb
push
xchg
xor
and
or
xchg
fidivs
mov
fidivs
mov
and
and
sarl
scas
repz
jae
xchg
add
cmpsl
adc
xchg
jl
cltd
or
shr
das
andl
xor
adc
insb
cld
push
outsl
shll
popa
in
jmp
out
movsl
flds
in
sahf
bound
lods
ror
les
sub
xchg
cmp
sbb
add
shrl
mov
out
mov
push
push
mov
shlb
call
sbb
arpl
aad
mov
testl
jecxz
adc
sti
stos
ror
in
sbb
jo
sbb
das
xchg
lock
pop
fistl
lods
xor
mov
lahf
pop
pop
lock
push
adc
mov
mov
cmp
scas
cmp
cld
push
dec
or
ret
stc
xchg
fadds
mov
popa
xor
xchg
pop
stos
lcall
and
ljmp
and
push
aas
or
stos
test
mov
cwtl
cmp
push
inc
and
inc
mov
sbb
mov
cli
cmp
push
sbb
jg
ss
or
cwtl
dec
aam
add
repnz
std
jmp
jne
sbb
mov
es
fisubrl
adcb
bnd
mull
vpmaddwd
dec
lods
addr16
les
mov
jno
push
lahf
sbb
popa
dec
or
mov
adc
repnz
test
push
mov
es
push
mov
je
push
push
mov
js
call
dec
push
sbb
mov
fnstenv
sbb
lods
cmp
pop
jbe
mov
shll
mov
iret
dec
js
push
es
pop
faddl
movsb
sbb
adc
mov
cld
mov
sbb
das
push
mov
mov
out
mov
and
xchg
movsb
pop
sahf
movsl
mov
jg
mov
jbe
inc
or
lods
aad
dec
aas
int3
jne
mov
adc
testl
mov
add
mov
ret
ds
mov
addr16
adc
mov
test
mov
xchg
call
sub
cmp
inc
in
decb
mov
nop
adc
cmp
jmp
int3
sbbl
adcb
mov
and
test
or
mov
mov
jge
mov
mov
repz
push
lds
mov
jne
jno
or
push
loop
cld
pusha
cmpl
mov
pusha
sub
inc
fdiv
inc
jno
push
sub
sub
lods
cli
pop
ds
jl
jns
push
xor
add
test
mov
cmp
sbb
mov
inc
jecxz
cmc
or
sahf
pop
fwait
mov
xchg
jae
mov
in
fs
in
loop
and
pop
lock
push
sti
sti
jecxz
arpl
int3
dec
dec
or
push
daa
sub
mov
aas
adc
push
adc
loope
push
add
inc
stos
das
es
mov
jg
iret
sub
fisubrs
lret
js
fbstp
xchg
sub
insb
mov
xchg
mov
jnp
test
or
sbb
movq
ss
mov
mov
push
rcr
pop
into
gs
inc
loopne
ds
test
std
add
push
clc
data16
pop
das
in
sti
repz
dec
subl
and
and
rorl
ja
in
and
nop
std
rcll
dec
cmp
and
lods
out
jnp
inc
aad
xchg
or
xor
jo
out
cltd
cmp
imul
dec
shr
push
xor
mov
scas
es
jnp
sub
pop
fldcw
lret
xchg
and
enter
push
mov
jl
sbb
jg
pop
aas
jne
cmp
xchg
push
push
sahf
pop
lds
cltd
cmp
mov
ret
dec
cmp
mov
aam
out
mov
dec
mov
sub
pop
loop
mov
pop
pop
inc
fdivl
int3
or
shl
mov
cli
jno
jmp
xor
pop
cmp
xchg
fisttpl
jno
fstl
pop
das
pop
xor
mov
in
or
fsubrp
adc
sahf
out
xchg
push
fmull
adc
shll
stos
jb
add
mov
add
ret
cmpsl
push
dec
in
fistl
dec
sub
pop
or
push
in
mov
fldl
cmpsl
mov
xor
pop
mov
enter
jmp
jo
pop
xor
inc
rcl
mov
push
mov
xor
lcall
pushf
imul
mov
or
pop
jb
push
xor
div
mov
inc
mov
cld
or
repz
movsl
lret
fldcw
sub
out
dec
pop
add
jne
inc
xchg
lret
outsl
pop
daa
mov
mov
lret
lret
jp
sub
jnp
sub
mov
js
test
out
lds
add
jae
leave
mov
push
lcall
sub
xchg
test
xchg
out
and
add
hlt
sub
loope
scas
popf
ret
pop
xor
addr16
les
xchg
inc
jo
or
mov
mov
jne
dec
stc
nop
push
dec
ret
inc
mov
bound
cmpsl
jp
imul
stos
xlat
jle
mov
mov
sbb
jbe
dec
mov
popf
adc
ret
stc
dec
xor
ss
in
and
aad
push
lret
pop
push
mov
imul
icebp
inc
mov
or
push
push
shlb
data16
jg
pop
inc
sub
jmp
stos
sub
jle
lcall
dec
mov
sarb
mov
insb
inc
in
scas
mov
pop
test
mov
out
dec
daa
dec
xor
push
mov
test
and
mov
push
int3
xchg
cmp
xchg
pop
mov
lea
lret
aam
pop
dec
gs
xchg
xchg
sub
rcr
add
jno
pop
inc
cmp
aaa
and
ss
inc
stos
icebp
push
dec
stos
fnstenv
in
mov
jae
aam
into
cli
aaa
ret
in
out
jnp
fldt
jecxz
test
mov
adc
add
iret
in
jmp
mov
lahf
or
cs
inc
fsubrl
sbb
insl
mov
popa
sub
add
repnz
xchg
pop
adc
pop
daa
pushf
nop
mov
clc
add
int3
cmp
xchg
adc
push
stc
cmp
sti
fists
xor
mov
ror
sbb
adc
xchg
push
dec
push
icebp
call
cmpsl
shrl
push
test
mov
dec
loop
rolb
mov
enter
mov
xlat
out
xchg
sarb
pop
test
add
mov
lods
lods
pop
jns
rcrb
fs
adc
and
cld
popa
out
ljmp
mov
jecxz
mov
jns
int
stc
jo
xor
sbb
faddl
mov
fcmovb
rolb
mov
lods
jl
iret
mov
shlb
cmp
xchg
jo
sbb
aad
adc
cmp
fistpll
mov
decb
jmp
adc
sbb
pop
push
imul
cmp
xchg
mov
in
loop
test
mov
mov
and
cmp
mov
fwait
sti
fnstenv
jl
ds
pushl
sbb
rcl
stos
mov
adc
xor
inc
cmp
sbb
fmul
fs
push
xlat
xchg
in
pushf
rcrl
fucomp
jnp
dec
inc
mov
cmpsb
push
stos
cli
call
das
inc
mov
cmp
jb
ss
out
mov
movb
jae
out
repnz
xor
fnstsw
testl
jge
jns
std
pop
stos
lods
mov
sub
cmpsl
aam
or
xchg
adc
pop
xor
jge
cmp
adcl
push
dec
sbb
data16
arpl
sahf
ret
cmp
lea
test
jbe
aaa
in
jp
inc
or
mov
fcmovu
fs
test
or
and
mov
in
insb
lret
sub
xor
out
dec
into
inc
cmpsb
dec
dec
xlat
mov
lea
dec
movsl
inc
in
xor
xor
xchg
push
in
dec
or
icebp
ljmp
mov
divl
sbb
add
push
jns
xchg
out
add
out
sahf
in
addr16
shll
lods
les
push
ret
xchg
and
pop
pusha
dec
fwait
sbb
mov
loop
ja
cmpl
mov
mov
aaa
mov
inc
cmp
lds
adc
adc
dec
in
or
mov
scas
shll
enter
mov
add
pop
inc
pusha
mov
pop
cmp
aas
jne
pop
sbbb
outsb
mov
xchg
push
xchg
pop
fadd
mov
std
popa
or
lret
les
mov
ja
pop
sub
add
mov
enter
mov
mov
imul
es
bnd
mov
sbb
push
pop
pusha
and
int
into
jne
and
subb
mov
aaa
lds
aaa
adc
and
jge
xor
jae
push
mov
xor
in
ret
mov
movsl
into
adc
xor
mov
je
sbb
mov
scas
mov
add
inc
in
fldl
mov
sub
push
shll
and
stos
push
xchg
cltd
jnp
push
loope
lods
shlb
adcl
push
push
push
imul
and
leave
test
and
pop
fbstp
outsl
movsb
jae
push
ret
pop
mov
test
ret
mov
xor
jb
xor
adc
iret
fsubrp
out
mov
movsl
test
xor
outsl
lret
dec
cltd
fsubrl
test
add
imul
movsb
push
or
std
mov
fidivrl
push
inc
dec
sti
int
cmp
xchg
xchg
mov
push
jo
push
sbbl
push
fcmovnu
cli
add
mov
idivl
jnp
es
pop
mov
adc
pop
scas
and
les
cli
fwait
cmp
or
bt
loop
pop
or
rcrb
adc
adc
mov
mov
sbb
lcall
imul
inc
push
mov
dec
push
ret
mov
lcall
fwait
sarb
lahf
xchg
popf
xchg
sub
jnp
scas
push
stos
push
leave
outsb
sbb
cli
adc
outsl
mov
jnp
mov
pop
adc
cmp
dec
cld
mov
sbb
fcmovnu
mov
mov
and
test
rcrl
cltd
hlt
and
mov
popf
repz
ret
incb
push
popf
xor
push
sbb
cli
daa
sub
mov
xor
fmuls
in
loop
or
out
jb
repnz
push
aaa
lock
jl
notl
mov
mov
xchg
outsb
cmp
out
roll
sbb
push
daa
test
xchg
nop
sti
daa
pop
xchg
pop
sbb
cmpsb
inc
xchg
dec
mov
fcoml
int3
ss
in
jo
xchg
test
pop
add
movsb
enter
daa
sbb
mov
add
rcll
cvtps2pd
mov
subl
insb
insb
cmpsl
je
mov
call
jns
lods
xchg
sub
movsl
sub
ja
push
inc
std
pop
cmp
mov
mov
mov
es
push
mov
mov
xchg
push
xchg
mov
push
call
inc
pop
enter
negb
jno
addr16
lcall
sbb
pop
sahf
in
jl
test
int
scas
xchg
sbb
andb
rorb
mov
mov
jb
lds
mov
arpl
hlt
lret
mov
lds
fwait
or
out
add
in
mov
add
stos
pusha
cwtl
in
xor
push
iret
daa
dec
mov
popa
inc
jge
daa
sub
aad
push
iret
inc
add
jmp
int3
dec
fistpll
les
pop
push
iret
test
or
fisubl
mov
std
dec
push
test
cmp
cld
into
or
inc
or
imul
add
int3
shll
movaps
jae
pop
mov
inc
mull
mov
andb
and
mov
dec
call
fcmove
jmp
cmp
test
fldl
pop
mov
jg
lods
jmp
dec
inc
and
lcall
into
add
cmp
cld
outsl
lods
pop
adc
jg
add
dec
mov
cmp
addl
mov
and
mov
in
jnp
daa
pop
ret
inc
fisttps
mov
or
pop
fsubp
aas
clc
int
cld
or
jge
push
xchg
jp
adc
push
in
fistl
pop
cmp
push
dec
lock
mov
push
adc
ds
in
das
orb
adc
jle
sbbl
add
sarl
cmpsb
adc
push
mov
ljmp
sbb
push
push
jnp
sbbl
dec
cld
add
mov
mov
loop
push
cwtl
adc
mov
dec
cmc
push
pushf
push
shll
jp
or
ret
cltd
pop
out
jge
cmpsb
jb
add
andb
push
dec
fst
dec
push
enter
sbbl
pushf
in
inc
sbb
pop
movsl
pop
cli
xchg
adc
mov
fwait
pop
dec
adc
sti
ss
pop
mov
xchg
jg
mov
scas
cmpsl
mov
dec
xchg
out
gs
jb
xchg
sbb
mov
int3
nop
mov
enter
mov
inc
sbb
mov
shlb
push
movb
push
mov
xchg
icebp
or
scas
lock
mov
sub
sub
adc
or
loope
pop
pop
faddp
loope
nop
nop
jbe
or
fistpll
jmp
jg
xchg
subb
sahf
inc
clc
push
add
test
out
sbb
mov
dec
inc
jg
cmp
cmpb
sbb
jp
movsl
jns
dec
popl
mov
xor
pop
push
xorl
mov
mov
pop
sbb
dec
mov
inc
sahf
lock
call
add
xchg
hlt
insb
pop
and
mov
mov
test
push
pop
mov
and
lods
pop
xchg
xor
std
and
sbb
js
loop
mov
subl
lea
enter
ret
les
xchg
out
jns
sub
bound
mov
call
xlat
lahf
sub
mov
bnd
xchg
xchg
mov
mov
ljmp
pop
or
enter
jnp
xor
adc
jno
dec
push
push
bound
loope
cmpsb
dec
leave
push
push
imul
cmp
xlat
outsl
xor
push
dec
ss
mov
mov
aas
mov
xchg
jno
pop
jg
jo
mov
adc
xchg
cmpsb
addr16
push
js
lcall
or
sbb
jnp
sti
adc
arpl
test
loop
pop
lods
adc
mov
sub
das
xchg
mov
shl
mov
fstl
jmp
fsubs
sub
iret
jnp
push
mov
jb
mov
sub
psubusw
aaa
icebp
scas
mov
int3
and
xorb
ret
jmp
xchg
addl
bound
ror
mov
out
es
add
outsl
popf
hlt
cli
jecxz
lahf
imul
outsb
int3
jg
xor
stc
add
adc
mov
mov
lods
pop
sub
popa
sahf
imulb
lea
push
jb
cli
std
cmc
cmp
adc
fisubl
xchg
insl
xchg
sub
pop
ja
pop
mov
cmp
ret
or
mov
jb
or
out
fs
addl
mov
cli
div
call
fcomi
add
or
cmp
and
clc
lret
test
loop
mov
aaa
jne
sbbb
fmul
outsb
aam
jns
es
fnsetpm(287
pop
sarb
idiv
ds
xchg
xchg
pop
pop
cmp
aad
mov
inc
push
sbb
fdivrl
or
cs
arpl
ficomps
adc
in
jge
popa
cmpl
mov
jnp
xor
push
pop
movsl
sbb
stos
flds
push
pop
xchg
mov
xchg
sub
fcomps
sub
ds
or
xchg
lods
add
pop
xchg
neg
shrl
stos
xchg
push
inc
bound
shl
mov
rorb
sbb
jecxz
jle
adc
ja
daa
inc
push
pushf
shll
lret
push
xchg
and
pop
sub
jno,pn
mov
sub
ret
ljmp
xor
cld
out
pop
and
and
mov
lods
ja
add
das
shll
in
jecxz
out
imul
xor
leave
xor
xchg
stc
dec
mov
js
or
or
lods
inc
adc
pop
jp
add
jo
sbb
cmp
or
jb
mov
in
push
sub
or
pop
mov
pop
cltd
orl
pop
frstor
jg
sub
rcrb
adc
xor
js
mov
and
and
test
rcl
outsb
xchg
fsub
cmp
rcll
and
xchg
inc
and
cs
xchg
mov
pop
adc
pop
push
mov
push
push
inc
sub
mov
pop
inc
ds
fists
push
cmp
popa
mov
add
push
xorl
pop
push
mov
sub
cmp
inc
xor
shll
mov
pop
hlt
cmp
cmp
cmp
dec
mov
push
mov
out
ss
in
xchg
mov
cmp
mov
mov
adc
adc
dec
aam
mov
test
jmp
push
xchg
xor
imul
cmp
xor
rcr
in
or
push
inc
ljmp
outsl
ss
xor
cli
in
stos
ljmp
jp
push
pop
inc
ljmp
cmpsl
dec
inc
int3
pop
insl
test
lds
adc
je
data16
sbb
loop
pushf
mov
call
sbb
mov
cmp
push
add
pop
xchg
xchg
pop
mov
pop
fldcw
test
int3
jmp
add
jb
xor
push
inc
jne
mov
lds
jp
adc
pop
sub
es
push
add
mov
adc
sbb
xor
xor
repz
ficompl
jbe
mov
push
outsl
mov
mov
inc
xchg
shrl
fucompp
xor
cld
jno
out
pop
xor
data16
leave
adc
adc
ret
cmp
or
iret
mov
clc
sub
or
mov
xchg
inc
push
adc
scas
sbb
cltd
sub
mov
dec
loope
roll
mov
stos
sbb
cli
repnz
test
mov
popf
ror
push
mov
sub
jl
out
mov
iret
cld
mov
fs
mov
dec
adc
pop
fdivrs
push
and
add
in
jge
mov
jo,pt
xchg
dec
pop
mov
pop
or
outsl
test
stc
xchg
or
test
das
push
pusha
icebp
cmp
cld
je
or
int3
mov
nop
add
jo
inc
fs
faddl
jo
insl
cmp
adc
shlb
aam
adc
xor
out
mov
jnp
inc
ret
push
mov
int
sub
or
outsl
ds
sub
ficoml
mov
jl
sbbl
push
repnz
pop
in
sbb
adc
cmc
xchg
insb
lret
iret
insl
loopne
shlb
mov
ret
ret
pop
es
nop
out
movsb
mov
arpl
dec
inc
addb
sbb
loopne
and
std
and
shl
jnp
sub
sbb
cltd
push
adc
or
xchg
jb
lcall
cmp
int
pop
popa
and
mov
insb
sub
push
mov
or
fmull
mov
ljmp
push
clc
leave
or
adc
inc
sbb
arpl
push
pop
or
and
or
lock
addb
xchg
xor
fists
mul
repz
arpl
sbb
and
adc
add
daa
pop
jl
push
pop
push
pop
xor
inc
pop
mov
xchg
push
sti
xchg
or
out
out
mov
fcomps
daa
loopne
xor
and
cmp
xchg
push
mov
push
xchg
rcrl
xchg
inc
sbbl
pop
xchg
in
push
pusha
mulb
clc
testl
flds
mov
adc
add
and
jae
or
sahf
ret
hlt
mov
lods
loope
orb
xchg
xchg
add
rol
xchg
movsl
gs
mov
pusha
idivb
push
inc
push
aaa
mov
mov
aad
cmp
movsb
mov
pushf
xchg
iret
pop
stc
inc
cs
jl
nop
xchg
mov
imul
js
and
adc
sub
lods
jno
bound
bound
xor
imul
mov
add
shlb
into
movsb
dec
insb
pop
dec
mov
or
jbe
rorb
dec
add
xchg
dec
iret
gs
bound
fs
lods
negl
push
or
mov
and
push
dec
pop
dec
cmp
ret
sbb
mov
stc
mov
dec
xor
push
add
mov
mov
xchg
ja
fildl
or
pushf
and
push
test
dec
outsb
daa
mov
out
push
push
cwtl
add
icebp
add
int3
enter
cmp
pop
push
mov
lea
fidivl
dec
test
dec
mov
mov
test
mov
pop
fwait
sbb
imul
cltd
pop
mov
and
pop
shr
mov
xor
sub
mov
sbb
push
movsb
fcompl
dec
and
mov
divb
lahf
subl
loop
or
lea
xor
push
jae
xor
mov
negl
enter
xor
inc
pop
outsl
repz
jmp
rcrl
rorl
cmp
aam
lret
and
scas
out
sbb
aad
jge
nopl
test
jp
jge
xchg
rcrl
add
xchg
sub
or
pop
test
nop
pop
sbb
mov
out
test
mov
push
popa
int3
inc
push
pushw
repz
sar
jbe
mov
or
or
jno
inc
les
outsl
cmp
in
pop
mov
jle
mov
cmp
ds
sub
es
stos
movsb
xorb
sub
pop
sub
pop
test
push
jg
jmp
popf
shl
pop
in
or
fsubrp
sbb
jbe
push
adc
adc
mov
cmp
push
inc
xchg
test
cmpsl
rcr
fcmovu
mov
repnz
popa
stos
iret
jg
out
jb
cmp
sarb
xchg
shll
int
xor
aam
cmc
lds
lret
lcallw
pushf
scas
fdiv
pop
icebp
sti
add
adc
es
mov
fdivr
test
pop
arpl
fildll
xchg
xchg
mov
repz
inc
inc
nopl
jl
sarb
cmp
mov
jmp
ja
fyl2xp1
in
sbb
rcrb
aad
mov
pop
push
inc
test
and
inc
lea
xchg
xchg
iret
aaa
dec
add
xlat
shll
inc
or
scas
test
addr16
mov
jl
imul
jp
dec
push
hlt
xchg
mov
scas
sub
mov
in
mov
xor
mov
pop
lea
mov
push
repnz
inc
nop
addl
mov
iret
sbb
cmpb
mov
add
xor
mov
jg
xchg
outsb
sub
sub
cmpb
out
lods
push
dec
repnz
pop
cmpsl
dec
push
sbb
adc
pop
sbb
cmc
rclb
and
sbb
scas
mov
js
mov
xlat
pop
mov
xchg
push
jg
dec
push
jg
insl
adc
lea
hlt
push
int3
mov
mov
or
dec
pop
and
scas
ds
sub
jae
in
iret
or
cmp
push
dec
mov
inc
loopne
aam
testb
sub
xor
lods
je
addl
push
dec
sti
mov
or
push
push
sbb
icebp
cli
stc
scas
mov
addr16
push
andb
fsubl
stos
xchg
dec
inc
push
mov
or
xor
icebp
jge
xor
dec
mov
ljmp
fmuls
ret
jle
hlt
mov
ljmp
iret
xchg
mov
clc
fbld
fidivrs
mov
lea
pop
ret
hlt
rcrb
fxch
test
aas
shll
outsb
dec
movsl
sub
jns
mov
jle
sbb
in
cmp
adc
add
lcall
imul
pusha
ret
inc
pop
jbe
incb
jns
push
cmp
sbb
dec
mov
add
and
xchg
in
stc
adc
or
ret
stc
cmpsl
clc
pop
cmpsb
jbe
jg
ds
mov
fwait
jmp
xor
out
imul
sbb
mov
repz
mov
dec
jle
add
gs
mov
cld
add
adc
push
jae
jg
cmpsb
clc
cmc
popa
adc
push
adc
das
fdivr
mov
cltd
into
mov
loope
sbb
iret
mov
xlat
mov
mov
or
negb
jae
cwtl
cmpsl
mov
jl
rcrl
test
inc
dec
and
push
cmp
jmp
inc
sub
mov
pusha
mov
push
mov
sub
sbb
mov
xor
sub
sub
xor
sub
fcoml
out
out
scas
sbb
jns
hlt
sahf
iret
jnp
test
mov
sar
hlt
push
imul
sub
push
jbe
add
popf
call
inc
xlat
loop
mov
stos
aaa
xor
xchg
and
jle
scas
dec
ficoms
dec
pop
mov
add
push
adc
dec
sahf
sbb
dec
repnz
popa
ficomps
fidivrs
adc
stc
xchg
mov
dec
sub
test
rorl
inc
push
mov
std
xlat
add
loopne
out
loop
outsl
mov
call
sbb
gs
clc
mov
daa
out
sbb
aad
adc
sahf
cmp
sub
jo
jle
fbld
push
sti
inc
mov
xor
jo
or
in
xchg
jp
dec
jb
imul
xchg
mov
cmp
les
push
cwtl
in
pop
aad
and
test
mov
mov
shl
loope
cmpsb
ja
mov
add
or
push
loope
push
xor
xor
jne
cli
push
ja
mov
mov
pop
in
sbb
pop
jb
push
out
cmp
or
and
sub
push
aas
data16
and
outsl
jb
bound
mov
sbb
adc
xor
xchg
cmp
sub
test
shll
mov
mov
mov
jecxz
mov
scas
dec
or
popa
adc
dec
hlt
loope
mov
adc
adc
stc
jno
inc
xchg
shl
lds
arpl
je
sbb
push
aas
pop
test
sub
test
aas
pop
gs
stc
mov
lret
sbb
xor
rcr
xor
ljmp
mov
jecxz
outsb
and
xor
sub
inc
inc
mov
rolb
rcr
aas
cmpsl
je
and
mov
and
shl
mov
push
inc
loopne
sub
cmpsl
and
mov
sub
jae
rcl
rorb
inc
rorl
ja
cmpl
xchg
pop
and
sub
lock
ss
push
mov
cmp
mov
mov
into
lods
lods
mov
in
inc
mov
pop
sbb
pop
mov
sbb
cld
jmp
out
mov
xor
jl
push
out
nop
popf
imull
or
xor
cld
sahf
xor
jnp
nop
testb
cmpsb
or
push
fisubl
fimull
lock
clc
imul
jno
or
xor
sub
adcb
mov
stos
iret
jmp
pop
arpl
jp
pop
call
in
adc
add
push
mov
loopne
pusha
sub
scas
das
jno
cltd
pop
and
jp
mov
fwait
jg
fs
inc
and
xchg
lods
jno
lods
dec
lahf
scas
fiadds
sbb
sub
inc
mov
push
xchg
mov
cmpsl
aad
jecxz
push
xlat
sbb
xor
fidivrl
ds
insl
icebp
adc
jl
dec
adc
dec
sbb
xor
arpl
in
adc
xchg
shl
je
andl
and
lds
inc
xchg
popf
jecxz
les
push
mov
inc
cld
idivb
mov
test
aas
cmpsb
and
jb
cmpsl
inc
ss
repnz
cmp
xchg
gs
popl
loopne
and
pusha
xor
pop
inc
mov
pop
pop
aaa
mov
and
lret
sbb
sbb
jmp
push
enter
aad
xor
push
out
leave
and
jge
mov
loop
cmp
dec
int3
icebp
xchg
push
fwait
test
lcall
mov
cli
xor
pop
sub
adc
jne
lret
iret
dec
ficoml
rcll
mov
xor
mov
xlat
dec
roll
xor
add
mov
imul
les
adc
jno
xchg
les
push
xor
jno
dec
dec
mov
mov
stc
xchg
mov
pop
fdivrl
and
in
nop
mov
aam
in
push
cltd
sarb
mov
insl
sub
int
add
mov
push
int
pop
aas
push
xor
xchg
daa
and
sub
scas
pop
jle
sbb
cmp
scas
jmp
div
push
push
sarl
shll
dec
or
insb
inc
mov
hlt
imul
or
cmp
pop
cmpsl
cwtl
dec
fisubrs
mov
adc
mov
lock
iret
sbb
stos
call
sub
cwtl
out
pop
sar
pop
stos
mov
test
or
sahf
mov
jecxz
negl
rolb
les
inc
out
mov
xchg
mov
jmp
or
js
sbb
sbb
sub
push
xchg
sti
mov
dec
and
cmpsw
add
inc
lcall
push
sub
push
fiaddl
stos
cs
sbb
add
jmp
push
cmp
icebp
stos
movlps
test
mov
int3
dec
cltd
das
data16
imul
addl
aad
add
mov
stos
inc
jns
clc
mov
testb
mov
ljmp
mov
xchg
sbb
lcall
pop
mov
mov
divb
rcrl
sarl
cmp
sub
xchg
pop
mov
cwtl
pop
jae
push
and
pop
xor
ljmp
pop
dec
shrl
ret
rol
mov
mov
idiv
cmp
xchg
aaa
mov
jle
push
xor
and
ret
xor
mov
pop
loop
jb,pt
xchg
sahf
cmc
xor
ss
push
mov
out
aaa
insl
cmp
xor
inc
push
jg
popf
ljmp
js
jmp
mov
gs
ret
and
std
push
or
ljmp
add
or
xor
mov
mov
push
loopne
jno
cmp
jle
xchg
xlat
sahf
sti
ljmp
adc
push
adc
flds
adc
jge
mov
cli
insl
pop
fstps
dec
mov
cld
jp
mov
xchg
iret
es
andb
setb
sub
lods
xchg
enter
dec
mulb
out
in
es
out
add
fcompl
inc
lds
lahf
sbb
jmp
cs
call
cmp
or
cmovno
fldcw
imul
mov
fdiv
add
rclb
cmc
sahf
sub
or
sub
mov
aas
xchg
setb
pop
fadd
adc
les
mov
push
mov
pushf
and
cli
repnz
stos
call
in
mov
jns
fists
icebp
dec
cmp
dec
dec
or
inc
and
mov
out
lcall
sar
pop
into
mov
jge
movsl
lcall
stc
sub
call
mov
mov
clc
aas
or
dec
cld
inc
sbb
lahf
data16
sbb
or
popf
int
cmp
inc
imul
insb
lods
adc
inc
adc
mov
mov
adc
mov
mov
xlat
or
arpl
call
push
scas
pushf
push
outsb
imul
cmc
idivl
shl
daa
int
sub
jae
jge
scas
lods
hlt
jno
mov
pop
sahf
sbb
les
in
addl
sar
mov
jge
jp
or
pushf
lock
push
jmp
jmp
jge
inc
cmp
sbb
mov
ja
push
scas
inc
int3
and
xor
enter
imul
mov
aaa
cmpsb
and
ds
add
scas
out
enter
sbb
cmc
and
cmpsl
testb
in
iret
and
jmp
cmc
dec
cli
adc
scas
xbegin
lds
lret
sbb
in
ret
jmp
outsl
inc
loope
inc
push
imul
out
lcall
or
pusha
sahf
mov
insb
lods
and
cmp
and
sbb
xchg
sub
test
pusha
mov
xchg
cmp
jns
imul
xor
lret
xor
out
loopne
sbb
enter
sarl
fisttpll
ja
add
pop
add
mov
shlb
push
mov
ss
out
jmp
push
test
pop
pop
out
push
sbb
andl
lods
test
jl
sub
imul
mov
adc
pop
in
mov
or
add
test
mov
or
dec
subb
mov
and
es
movsb
and
add
in
in
mov
push
movsb
adc
mov
adc
sub
in
sbb
pushf
pop
adc
test
mov
and
fstps
out
mov
out
test
mov
xchg
mov
push
enter
in
cli
mov
scas
jmp
popf
pop
add
dec
sbb
mov
jge
sbb
out
addr16
fisubl
push
pop
mov
mov
push
je
out
sub
inc
lahf
cld
enter
cmp
push
push
decl
dec
lods
aaa
in
inc
sbb
sub
adc
pusha
adc
sub
inc
pop
inc
fs
mov
inc
stos
mov
mov
cmc
lahf
fs
bound
imul
test
daa
out
test
jae
inc
gs
xchg
pop
jo
push
ja
repz
imul
call
sub
mov
insb
sub
lods
lds
jmp
dec
psubd
lea
mov
rcl
mov
mov
jmp
inc
lret
loope
or
jg
rolb
popl
cmp
lea
stos
mov
fistpl
add
push
xchg
int3
mov
daa
lea
inc
dec
xchg
adc
or
add
loopne
inc
or
dec
rolb
daa
je
mov
cmpsb
fwait
dec
or
xchg
or
mov
in
nop
jge
push
push
adcl
outsb
shr
js
dec
pop
jge
stc
pop
and
sbb
pop
sub
pop
cmp
jp
mov
adc
sub
fisubrs
testl
add
data16
mov
pusha
cmp
imull
test
fsubs
jbe
xchg
mov
leave
jmp
mov
test
pop
fnstsw
lds
scas
xchg
push
scas
jp
jge
xor
xchg
loope
and
jo
and
pop
fs
pop
loopne
jecxz
mov
stos
decb
notl
enter
ret
pop
movsl
cmp
loop
fsubr
pusha
mov
add
fisubrl
stc
sub
inc
fsubp
adc
mov
push
dec
push
jle
es
rol
iret
xlat
aam
insb
add
mov
xor
xorl
arpl
mov
pushl
cmpsb
mov
and
sbb
data16
cmc
fdivl
ror
jns
inc
sbb
inc
stc
and
add
nop
rcrb
mov
sbb
push
loop
lahf
sub
mov
pop
cmp
mov
mov
xchg
hlt
lahf
cwtl
fisttps
adc
push
push
mov
mov
stos
inc
push
sbb
push
cli
pusha
sbb
sysret
jmp
addr16
pop
rcrl
clc
lds
daa
adc
xor
adc
mov
xor
mov
shll
sbb
popa
nop
add
pop
ret
push
mov
pop
sbbl
iret
jge
mov
add
cmc
jg
iret
out
movsl
test
xchg
out
outsb
jbe
dec
iret
jp
test
dec
add
or
sbb
loopne
mov
dec
mov
and
outsb
stos
stc
mov
je
adc
in
out
mov
repnz
sub
addr16
cmp
adc
mov
pop
jl
ffreep
ljmp
adc
testb
aaa
repz
xlat
pusha
int3
push
jmp
ljmp
fdivrl
sar
insl
dec
jne
mov
sbbl
int
in
pop
pop
testb
xchg
fcoml
fsts
push
ss
std
mulb
rolb
imul
daa
or
adc
cli
inc
fldl
leave
mov
and
push
adc
sbb
loope
push
mov
repnz
in
daa
fsubs
xor
xlat
adc
mov
mov
or
mov
xchg
dec
leave
pop
mov
ss
xchg
in
movsb
push
out
bound
mov
pcmpgtb
and
js
or
dec
js
fisubl
xlat
sbb
push
fiaddl
push
jecxz
and
in
stos
cmpsl
or
xchg
jmp
inc
mov
mov
mov
loopne
daa
fisubs
addr16
cli
adc
xor
push
add
and
lock
jl
dec
push
mov
enter
xor
lea
inc
clc
sbb
sub
push
dec
rol
je
arpl
and
mov
enter
test
jecxz
fmuls
xchg
mov
push
insl
jmp
int
sub
iret
push
push
xchg
stc
push
sub
or
stc
loope
lret
xchg
mov
jmp
xchg
mov
sbb
push
mov
out
int
imul
sub
mov
xchg
jns
cld
inc
adc
dec
aam
jno
daa
mov
fs
jo
int3
lret
mov
adc
inc
or
rcll
stos
sti
out
popa
push
jg
cmp
add
mov
jbe
mov
or
dec
jl
sbb
jnp
mov
add
jo
dec
pop
and
call
jb
mov
scas
sbb
in
adc
mov
cmp
push
xor
pop
arpl
test
mov
sub
xor
xor
lcall
insl
pop
aad
or
gs
mov
push
push
mov
jp
idivb
lret
test
xorb
leave
inc
push
daa
jge
xchg
or
mov
lcall
icebp
xor
mov
loope
std
arpl
xlat
sbb
xchg
sti
adc
xchg
daa
sub
repnz
ja
lahf
test
xchg
mov
aaa
testb
inc
dec
testl
mov
clc
sub
adc
xchg
xchg
mov
mov
cmp
fcomps
pop
xchg
loopne
and
rol
and
cmp
lret
push
sub
xlat
das
gs
imul
xchg
pop
por
add
sbb
popf
and
std
mov
mov
movsl
mov
leave
xor
in
jg
cmp
aad
addb
aas
xchg
xchg
push
sbb
xlat
push
inc
jp
outsb
out
pop
push
fbld
add
into
or
mov
imul
mov
mov
scas
mov
loopne
cld
imul
mov
aam
adc
int
jmp
into
inc
or
cmp
or
cmc
jecxz
in
les
outsb
mov
mov
mov
in
mov
inc
mov
out
sbb
popf
stos
adc
jns
test
scas
push
sub
pop
ss
fildl
out
adcb
pop
les
subb
not
or
popf
fiaddl
ficoms
in
adc
xchg
cltd
fdivr
and
mov
mov
jo
mov
cld
ret
lahf
xchg
jmp
xor
repz
movsl
or
sub
sbb
adc
xchg
lods
fstpl
bnd
mov
popa
xor
xchg
xchg
mov
jmp
in
test
push
mov
dec
rcrl
pop
pop
daa
dec
cmp
enter
pushf
push
ss
aad
inc
out
lcall
dec
leave
fistps
mov
lahf
dec
mov
xchg
jb
and
movsl
mov
add
iret
mov
js
inc
mov
mov
pop
call
jl
pop
jmp
jae
lahf
add
pop
inc
mov
adc
lcall
pop
mov
in
sbb
ret
mov
js
cwtl
xor
pop
dec
pushf
popf
in
aam
lahf
shll
ret
or
mov
lahf
inc
mov
movb
pop
add
ficomps
dec
test
jbe
pop
out
pop
and
cwtl
jp
xchg
or
sarl
push
xchg
dec
xchg
cmp
in
pop
sub
out
mov
mov
loop
lods
sbb
jno
aam
in
pop
leave
jmp
xchg
insb
cmp
test
mov
mov
mov
movsb
ja
inc
xchg
xchg
cs
mov
lahf
jg
stos
sbb
mov
xor
ss
notb
lods
mov
adc
mov
ret
inc
sbb
fsubrl
jp
testb
outsl
data16
mov
incb
stos
inc
aam
leave
push
jbe
cli
lret
repnz
mov
jo
pop
cmp
mov
pop
push
adcb
cmpsb
xchg
adc
xlat
iret
mov
mov
arpl
push
divb
rcl
loop
and
cmc
stos
or
clc
ror
out
cmp
sbb
int
cmp
shrb
test
fcmovnb
cmpsl
sbb
xchg
and
js
xchg
xchg
dec
mov
jbe
ret
sub
cmpsl
ss
xchg
loop
mov
je
pop
jne
loopne
sub
sbb
aam
sub
notb
jl
push
and
cmp
sar
xchg
mov
ret
pop
or
in
add
leave
mov
push
xchg
lea
filds
and
mov
pop
loop
pop
loope
or
aad
or
test
ljmp
push
pop
jo
and
sbb
imul
ss
cltd
lds
fmul
lods
in
hlt
fdivs
xor
arpl
and
iret
in
pop
es
test
push
ljmp
stos
sub
mov
and
jnp
pushf
pop
sbb
popf
xor
jl
das
jge
fmuls
add
leave
xchg
std
sub
shll
cltd
jge
fwait
push
jp
test
cltd
pop
xchg
int
mov
jnp
cmp
push
bound
adc
mov
pop
mov
sbb
adc
lock
loope
cmp
cmp
add
movsb
std
ss
gs
mov
nop
pop
add
cltd
push
cmp
cmp
jp
fadd
lea
or
sahf
in
cmp
cs
sahf
pop
jp
cltd
popf
and
pop
pop
adc
push
aaa
sub
loop
xchg
pop
sub
mov
mov
cmpsl
dec
mov
cs
ret
and
pop
icebp
push
test
test
and
pusha
jge
adc
popa
push
jp
mov
mov
mov
push
outsl
cld
dec
mov
sub
ss
and
shl
cli
pop
dec
int3
sahf
mov
mov
movsb
fs
fisubrl
bound
mov
icebp
into
inc
push
clc
xor
in
cmp
shl
sbb
scas
lock
inc
cwtl
adc
sbbb
in
add
fnstenv
je
out
push
mov
inc
int
adc
xchg
xchg
aad
dec
xor
loopne
decb
mov
stos
in
std
jno
test
cwtl
xor
inc
inc
repnz
movsb
mov
sbb
jp
xor
loopne
mov
mov
jae
int
mov
xchg
push
sub
lea
push
jmp
sbb
cmp
mov
inc
lods
stos
stc
in
ret
outsb
add
cwtl
andl
inc
lods
imul
icebp
sahf
cmp
jns
pushf
bound
xchg
lcall
movsl
push
call
xchg
cmp
cld
mov
icebp
pop
mov
lock
sahf
fistpll
rcrb
xlat
bound
adc
scas
pop
pop
xchg
hlt
jno
mov
insl
mov
je
mov
lods
cmp
add
lahf
popa
jg
aad
out
jecxz
mov
repnz
daa
add
pop
icebp
mov
inc
data16
lods
mov
or
sarb
sbb
imulb
mov
mov
lods
mov
sbb
jo
dec
pushl
pop
jae
test
stc
mov
push
bound
enter
mov
cld
pop
and
insb
sub
and
shlb
mov
jmp
jbe
or
pop
xor
sub
clc
pminub
sub
mov
push
xlat
add
ja
pushf
cmpsl
int3
jl
mov
shrb
fcoms
xchg
ja
inc
cmp
sub
jbe
jae
push
xchg
jmp
lods
fcmove
das
ret
xor
lahf
sbb
jmp
insb
dec
ja
inc
mov
xor
cmpsl
add
jmp
ds
cmp
xchg
sub
loopne
pop
pop
xor
adc
pop
mov
scas
or
ret
hlt
inc
push
sub
jae
mov
es
jae
jb
add
sbb
or
std
out
jne
popa
andl
pop
pushf
mov
test
mov
pop
pusha
das
push
scas
cli
cmp
dec
out
and
ret
shll
stos
pop
cmp
pop
fmull
lods
fsubrp
mov
repnz
ljmp
mov
decb
and
jg
mov
sti
pop
inc
popf
gs
ds
pop
inc
pop
dec
sahf
mov
sbb
les
dec
in
mov
decb
lods
icebp
insl
inc
movsl
fwait
pop
sub
movsl
dec
fmuls
mov
and
lcall
xchg
or
xor
hlt
mov
xor
int3
fimull
pop
xor
push
fadds
mov
iret
inc
cs
pushf
or
loopne
push
jmp
les
lods
inc
lods
out
sub
xchg
sbb
fwait
sub
call
sub
mov
divl
ss
pop
lods
add
cmp
mov
pusha
pusha
mov
mov
hlt
cmpl
mov
das
fwait
iret
insl
mov
dec
out
test
sbb
push
xchg
pushf
xor
cmp
out
or
push
enter
mov
test
xorl
push
addr16
int
pop
mov
pop
xchg
jno
ja
mov
lods
pusha
lods
or
gs
dec
fildll
les
or
outsl
jle
leave
into
ret
insb
inc
leave
mov
pop
inc
push
lock
rcll
shrl
dec
shlb
mov
scas
sbb
mov
nop
mov
xor
cmp
jae
jbe
sub
cwtl
stos
mov
push
cltd
xor
xor
mov
aad
inc
jmp
fsubs
mov
clc
cmp
xlat
jns
aam
push
arpl
jp
pusha
sbb
and
data16
and
mov
test
or
mov
lahf
cwtl
fisubrl
stos
sti
xlat
cwtl
lcall
and
jo
xchg
sbb
jnp
pop
or
lahf
mull
push
mov
mov
jmp
mov
push
pop
xchg
inc
arpl
jecxz
mov
xchg
push
lret
lods
inc
mov
push
xor
js
shlb
xor
xor
test
test
pop
hlt
xchg
sbb
in
pop
push
xchg
pop
fsubr
push
jmp
jno
pop
or
add
jg
cli
lea
arpl
jnp
pop
pop
test
mov
sbb
adc
jecxz
dec
lea
push
pushf
cli
repnz
pop
pop
cmp
pushw
xchg
es
sbb
popa
and
clc
enter
push
das
xchg
mov
mov
int
lea
xor
sbb
cld
lods
lods
xchg
out
cmpsb
and
cld
loop
daa
sub
sbb
out
orb
cmpl
push
out
stos
push
aaa
sti
scas
aam
mov
gs
mov
adc
pop
xchg
or
es
dec
dec
out
mov
mov
add
leave
jmp
sbb
jmp
jp
aas
jno
lods
das
xor
dec
and
cmpsb
cmp
arpl
imul
dec
xchg
mov
sub
out
push
sbb
pop
aam
jg
lret
sub
mov
push
push
sub
daa
test
in
outsb
sub
jne
jle
xor
xor
subl
pop
push
add
jl
cmpsl
dec
add
mov
mov
pop
js
cli
in
aas
mov
adc
pop
sbb
gs
int3
xchg
ficomps
or
mov
lds
in
mov
push
lahf
cmpsb
fisubl
fisubrs
testb
sti
xor
push
jb
js
and
leave
xchg
push
ja
and
scas
outsb
and
xchg
jg
clc
inc
insl
jmp
cmp
inc
data16
lock
push
mov
xchg
add
mov
fdivl
xchg
inc
sar
push
cmpsb
push
xchg
dec
ja
pop
outsl
adc
xchg
pop
sbb
imul
jbe
mov
or
in
ret
xor
filds
cmpsl
fisubs
outsl
jbe
inc
outsl
loope
push
dec
inc
xor
sub
cmc
mov
add
fidivs
xchg
dec
mov
movsb
inc
sbb
xor
adc
cld
iret
dec
mov
xchg
insb
inc
xor
sub
pop
dec
cmp
pop
sub
jnp
aam
push
sahf
movsb
std
jno
negl
loop
and
or
dec
mov
sahf
aaa
mov
ret
push
cmp
out
mov
jmp
mov
adc
jmp
ficoml
xchg
js
mov
fstl
in
push
nop
jge
add
stos
or
rcrl
jl
fstps
and
shlb
jge
push
nop
hlt
xchg
lea
xor
cmp
fsubl
bnd
jns
cmp
in
mov
mov
xlat
rcrb
push
fcomip
sbb
icebp
push
in
flds
lret
in
notb
repnz
inc
mov
and
ret
out
inc
add
mov
sub
cs
shlb
loop
inc
mov
sub
adc
cld
in
cs
aam
ret
cwtl
xchg
and
hlt
cmc
fdivl
push
sub
xor
in
sbb
push
sub
add
pop
mov
cmpsl
fildll
sarl
xor
xchg
repnz
jle
jno
or
rol
loope
and
popa
insl
hlt
es
in
dec
lahf
xorb
adc
mov
dec
jns
jl
fsubl
jnp
clc
sbb
and
pop
pop
add
nop
fistpll
push
or
addl
mov
imul
sbb
inc
dec
imul
push
scas
cs
push
mov
jmp
insl
sti
or
pop
jnp
movsb
dec
popa
out
mov
inc
and
and
icebp
dec
aas
movsl
dec
scas
push
cld
cmp
hlt
xor
cmp
daa
fdivrl
sub
jnp
add
xor
fistpll
cmp
test
leave
or
jne
inc
loope
stc
and
hlt
lcall
sbb
cmp
xchg
push
jne
and
jecxz
xor
adc
inc
out
jp
xadd
std
shll
cmp
or
push
andb
in
int
das
add
mov
mov
scas
push
push
sub
into
lds
mov
pop
mov
test
movsb
or
and
enter
pushf
and
lcall
adc
and
das
hlt
and
dec
mov
dec
inc
push
mov
insb
mov
imul
add
clc
xlat
push
adc
push
xchg
lods
pop
jns
jmp
cmp
fbstp
ret
mov
sub
pusha
sti
mov
cwtl
adc
lret
pop
sbb
mov
insb
inc
imul
sub
stc
imul
and
push
jmp
cmp
push
leave
push
push
divb
addl
xchg
test
aaa
ljmp
les
inc
jl
sti
xchg
xlat
data16
in
add
loop
dec
dec
cli
mov
daa
rorb
inc
daa
cwtl
and
repnz
pop
clc
in
rcrl
subl
sahf
insl
dec
cli
and
fdivrs
into
cmpw
out
ret
aaa
lahf
int3
dec
outsb
imul
sbb
loope
repnz
mov
leave
inc
xchg
test
dec
insb
lock
sbb
lret
into
mov
mov
jmp
lods
mov
or
test
jno
iret
pusha
stos
push
fbstp
in
pop
cwtl
inc
lods
cmp
xor
repz
adc
or
push
ja
jmp
mov
mov
cmc
or
stos
into
aaa
mov
ljmp
sub
les
sub
mov
out
in
jb
sbb
adc
fnstsw
out
sbb
cmp
add
push
rolb
scas
cmc
icebp
inc
movsb
cmp
push
add
mov
in
or
xor
inc
adc
or
sarb
lahf
cmp
ja
or
ficomps
inc
inc
sub
pop
fwait
test
fcomi
mov
repnz
mov
les
out
fwait
int3
repz
repnz
cmp
or
ljmp
mov
lret
insl
jge
sbb
aaa
or
clc
or
or
mov
push
jbe
cmpsb
cmp
lcall
mov
cmp
add
aad
sbb
shlb
fbld
ret
sub
push
pop
jge
mov
mov
mov
pop
data16
pop
xor
outsb
sub
sbb
mov
sti
rorl
sub
jno
xchg
test
mov
jbe
push
sbb
cwtl
clc
outsl
shl
dec
sub
arpl
push
and
movsb
jl
push
pop
dec
or
lcall
jmp
daa
pop
pop
mov
in
cmpsb
sbb
fcomps
sbb
fld
or
jnp
pop
push
ret
sbb
sbb
shll
sbb
jp
stos
xor
xchg
or
ret
inc
enter
xor
mov
fildl
mov
mov
out
pop
test
fnsave
push
cmp
mov
mov
loop
cli
fbld
push
push
adc
cmpsb
call
popa
cli
fdivrp
sub
cltd
xchg
mov
fcomp
xchg
ljmp
rcr
and
outsb
inc
ret
inc
sahf
dec
dec
addr16
jecxz
xor
loope,pt
mov
pop
mov
idivl
adc
sub
mov
lods
pop
pop
setg
jecxz
lcall
sbb
inc
lahf
mov
push
mov
xchg
call
fwait
push
loop
push
mov
int3
push
inc
ret
mov
sub
mov
xchg
push
ret
negl
lcall
adc
ret
aas
jg
nop
sbb
adc
jg
and
pop
imul
cli
out
es
cmp
xchg
inc
out
inc
aad
lea
subl
jg
test
mov
jae
lret
add
jnp
repnz
sbb
dec
lock
push
rorl
push
repz
cmpb
aaa
inc
jne
mov
lods
push
xchg
dec
pushf
jns
hlt
insb
mov
mov
xchg
sti
sub
pop
sbb
test
xor
js
int
cmp
outsb
push
jge
fstpt
ja
inc
xchg
cmp
shrl
insl
nop
cmp
scas
cmp
cwtl
add
loope
add
add
movsl
or
pusha
push
test
je
clc
clc
notl
ss
inc
outsl
int
mov
dec
pop
mov
cli
stos
sub
lret
ljmp
adc
xchg
repnz
lock
push
add
nop
jo
int3
or
lret
pop
mov
or
out
in
adc
adc
fcom
aad
add
scas
popw
fsubrs
mov
pop
jg
in
clc
daa
cmp
xchg
cmpsb
jb
leave
pop
mov
add
fistpll
mov
fisubl
sub
xchg
or
inc
clc
movsb
mov
or
scas
xor
test
pop
pop
cld
movsl
mov
mov
mov
mov
add
andb
xor
icebp
dec
mov
stos
mov
pusha
mov
addl
or
test
outsl
aam
mov
or
movsl
xor
mov
adc
mov
js
je
cmp
pop
jge
jg
loop
pop
test
and
repz
mov
lcall
mov
and
outsl
ss
repz
cmpsb
leave
jns
inc
ja
mov
mov
ss
inc
mov
mov
popa
in
jle
push
lock
inc
out
gs
into
push
rcrb
adc
aaa
push
int3
mov
lcall
push
test
inc
pop
repnz
mov
rorl
in
add
clc
push
icebp
cmp
jb
sbb
jecxz
in
push
jo
into
fldl
stos
add
popa
sbb
jb
xchg
inc
pop
dec
fistps
mov
pop
scas
repnz
and
cmp
out
sub
mov
jle
lret
xchg
cld
jnp
cmp
push
lcall
sbb
push
sbb
out
and
aad
daa
mov
and
lcall
enter
dec
fchs
pop
adc
push
cld
xchg
pushf
dec
fsubr
push
pop
je
mov
lock
jge
lock
inc
xchg
imul
sub
insb
inc
cli
leave
and
jbe
out
xor
ret
lcall
mov
fwait
sub
shl
sbb
jo
inc
incb
js
add
pop
push
rolb
insb
jecxz
or
movsb
pop
out
insl
aad
stos
mov
jne
cld
dec
or
sti
dec
pop
lret
cld
mov
mov
movsl
mov
fnstcw
inc
mov
sub
in
jbe
mov
push
in
adc
outsb
sub
in
adc
xor
lret
jb
dec
xor
rcrl
jmp
mov
mov
jns
and
xchg
shl
int3
inc
add
adc
sub
repz
cmp
ficomps
and
mov
add
outsb
pop
call
lahf
fldcw
roll
movb
mov
jb
aas
mov
cmp
xchg
jnp
aas
mov
pop
setae
movsb
mov
xchg
rclb
cmp
icebp
ja
das
dec
insb
pop
add
pmulhw
dec
mov
adc
enter
adc
adcl
call
jle
hlt
push
xchg
repz
adc
mov
jp
lret
fstl
mov
push
add
inc
aaa
fsubl
aaa
or
push
pop
out
mov
dec
jae
jbe
dec
and
adc
push
cmp
testl
int
mov
jge
sub
out
stos
dec
cltd
in
mov
mull
mov
jo
xor
enter
inc
fists
add
in
cld
imul
dec
cmp
and
xor
icebp
insb
shl
mov
inc
mov
mov
aaa
or
mov
pop
leave
adc
cmp
mov
inc
sub
clc
jge
pop
mov
pop
xchg
pop
cld
mov
jp
xor
outsl
mov
cltd
cmpsb
lods
stos
xor
mov
sbb
mov
sbb
test
insb
xchg
popf
push
mov
stc
mov
sbb
xchg
add
push
in
cli
xlat
fstps
dec
es
das
inc
loope
pop
lahf
std
faddl
push
test
iret
xchg
mov
jno
js
shll
and
jno
arpl
jle
js
and
mov
xor
push
ret
jo
testb
movsb
pop
or
mov
iret
jo
addr16
sahf
sbb
mov
addr16
pop
aaa
add
das
jnp
ret
mov
xor
shrb
popf
jbe
imul
mov
cli
aas
xchg
int3
add
movsl
outsl
les
adc
and
call
inc
xchg
insb
dec
mov
andb
rcrb
out
add
cmp
mov
cmp
inc
xor
jle
inc
ss
pop
dec
arpl
push
pop
or
hlt
xchg
jne
pop
inc
sti
mov
xor
jno
add
jne
push
in
jae
rcr
xchg
fistpll
fnstenv
clc
mov
mov
lret
sarb
out
rclb
movsb
xchg
rcrb
sbb
xchg
into
hlt
outsl
shrl
jne
nop
jle
and
lock
jmp
arpl
mov
mov
adc
cmp
xlat
sub
inc
sub
and
addl
scas
iret
jo
or
and
sbb
ret
cs
imul
mov
inc
ja
xchg
or
cmp
lcall
imul
ljmp
mov
ret
vpxor
test
mov
mov
push
adcb
mov
test
scas
inc
std
iret
inc
inc
inc
or
shlb
inc
or
daa
jg
lds
imul
pusha
imul
sub
lret
les
inc
jbe
xor
mov
scas
jp
push
fstpl
or
mov
push
in
inc
sub
out
rcrb
outsl
mov
push
pop
std
cltd
or
and
fcoms
xchg
lods
fmuls
adc
movsl
rclb
pop
mov
ror
icebp
mov
xor
flds
cmp
sub
add
add
push
ret
mov
jg
cmc
dec
sub
push
ss
sub
sti
mov
jg
shll
mov
xor
icebp
adc
movl
sbb
adcl
xchg
js
sbb
bound
mov
sub
and
mov
sbb
aam
movsb
add
mov
out
mov
adc
cmpsb
popf
pop
sbbl
cmpl
fsubl
ss
clc
daa
int3
add
jge
sbb
push
mov
mov
push
cmc
cmp
popa
mov
jecxz
push
imul
pop
pop
dec
scas
es
inc
out
bound
testb
mov
sahf
jno
dec
test
dec
addr16
or
pop
xor
test
aas
aaa
das
jne
and
mov
dec
cmc
sar
pop
pop
xchg
lods
sbb
or
pop
jo
xchg
or
jmp
movsb
mov
aad
bound
xchg
xchg
mov
jl
fldenv
nop
sub
dec
inc
les
dec
add
jmp
stc
lds
in
fildll
inc
pop
jo
push
aad
scas
aam
pusha
lret
inc
repnz
sub
cmp
jg
cmp
or
jb
cmpb
xchg
or
decb
shrb
add
and
push
imul
push
roll
inc
xchg
insl
stos
dec
in
rcrl
test
xor
xor
ds
popa
sub
mov
push
or
mov
inc
mov
xor
into
fadd
mov
dec
daa
mov
pop
out
lds
push
aaa
addr16
push
push
out
adcb
popa
mov
pop
xchg
les
xor
push
loope
jno
popa
push
lods
loopne
dec
subl
rclb
fldcw
adc
lcall
shrb
test
xor
inc
push
mov
imul
pop
pop
cmp
outsb
sub
sti
fildl
pop
cmc
xlat
push
std
insl
add
in
dec
icebp
adc
loopne
dec
shlb
cmp
pop
adc
rclb
fisttpll
mov
int3
jecxz
dec
shrl
test
pop
xor
xchg
xor
in
mov
repz
cmp
cs
movsb
mov
pop
cwtl
cmpsb
add
xor
push
jns
and
xor
test
ds
cmp
stc
add
and
sub
loop
mov
add
stc
push
push
mov
or
mov
xchg
xchg
mov
aam
add
call
mov
incb
dec
fisttpll
mov
inc
jp
add
lods
fstl
insl
fwait
lcall
xchg
jecxz
mov
fdivrp
int
xor
outsl
inc
xor
jb
inc
pop
scas
pop
into
xor
sub
xchg
flds
dec
mov
xchg
mov
push
jge
fisubs
loope
add
ret
or
mov
mov
jnp
in
sti
push
sbb
inc
sbb
in
xrelease
mov
test
jbe
lahf
imul
test
sbb
adcb
filds
sbb
xchg
clc
enter
xor
ljmp
je
lahf
push
inc
adc
in
or
scas
xor
cld
imul
scas
mov
fwait
lods
fcompl
dec
sub
jmp
cmp
lea
pop
add
std
push
cld
xchg
rorl
filds
cmp
dec
jo
inc
push
fwait
add
adc
adc
mov
out
adc
imul
cli
gs
loope
rorb
push
ds
repz
bound
in
push
xchg
loopne
ds
out
jp
aam
test
ret
adc
cmc
out
mov
inc
jmp
loope
add
mov
push
je
jne
jo
pop
in
push
and
fimuls
lahf
das
xor
sahf
sub
sar
sbb
or
hlt
fisubrl
notb
imul
jecxz
xor
adc
pop
jns
xchg
enter
jmp
cs
lret
lds
cmpsb
repnz
and
jl
adc
daa
push
lods
push
data16
repz
in
sbb
push
inc
out
pop
mov
pop
xrelease
and
dec
testb
cmpsb
mov
mov
icebp
jae
mov
push
mov
add
loope
xlat
xor
xchg
xor
push
adc
cli
cmp
dec
stos
cmp
dec
xchg
hlt
jge
stos
mov
or
stc
fst
jl
add
es
in
lahf
shl
cmp
iret
outsb
insb
sbb
pop
cltd
push
and
mov
add
out
data16
cs
adc
nop
mov
lods
inc
add
cmp
jae
sbb
data16
or
mov
cmp
or
or
sahf
outsl
add
lods
addw
or
push
add
arpl
adc
dec
pop
mov
and
mov
xlat
sbb
lock
cmpsl
ljmp
mov
sbb
stos
xchg
or
inc
fmuls
add
xlat
sbbl
xor
or
outsb
and
clc
test
fwait
cwtl
mov
xchg
and
pop
divb
cmp
push
jmp
outsb
adc
mov
jae
adc
and
sub
adc
movsb
ficomps
js
lods
ror
sbb
adc
pop
sub
cmc
enter
sub
dec
mov
lret
js
stos
movsl
add
mov
push
cmpsb
sub
sbb
or
loope
shrb
bound
test
xchg
test
adc
add
sub
sub
mov
push
dec
orl
pushf
sarl
insb
hlt
add
lahf
sbb
push
popa
mulb
into
mov
je
jmp
icebp
adc
mov
shrl
mov
fistl
mov
imul
test
test
pop
data16
cmp
xchg
or
clc
mov
lret
decl
hlt
mov
mov
scas
shl
and
sub
bound
or
ret
inc
imul
jo
push
mul
fsubrp
xor
xchg
jb
jno
je
ljmp
ret
jmp
push
add
stc
and
cmpsl
xor
aad
ja
mov
loop
jae
xchg
push
mov
ret
cmp
xorb
ja
xor
mov
mov
bsf
rorb
dec
jge
xchg
mov
or
sub
mov
fisttpl
je
ja
or
insb
add
jle
sbb
repz
jb
pushl
pushf
jg
psubb
popa
jae
lret
mov
insl
aad
test
test
aam
dec
fiadds
add
push
lret
leave
fwait
xchg
sbb
sbb
jb
dec
push
pop
jle,pn
push
mov
movsb
xor
rcrl
adc
enter
movsb
scas
popa
cmp
clc
icebp
test
or
inc
jnp
pop
inc
adc
inc
and
and
or
and
insl
je
subb
jl
fucomip
aad
into
dec
jnp
fisubs
mov
aam
jno
inc
mov
push
mov
jmp
sti
push
call
inc
cmpsb
sbb
and
mov
fwait
mov
scas
sarb
jae
div
lock
mov
jmp
inc
inc
or
jge
sub
mov
push
cli
sub
out
pop
push
push
sbb
and
mull
cmc
stos
jae
sbb
popa
aad
fcoml
inc
cmpsb
aam
lock
outsb
lret
dec
mov
adc
mov
in
bound
mov
cmp
sub
andb
cld
nop
movsl
sub
bound
push
inc
stos
xchg
xchg
xchg
push
mov
pop
sbb
fs
pop
add
jne
sbb
aaa
jae
sub
lcall
loop
xor
pop
scas
daa
fs
fmulp
mov
mov
add
andb
jnp
pop
mov
push
sti
cli
or
cmpsl
jo
adc
enter
push
dec
push
push
cld
aas
jbe
xchg
jl
adc
lret
movsl
dec
insb
scas
add
lret
in
dec
xchg
inc
out
mov
dec
in
inc
out
push
inc
sbb
and
mov
es
xchg
xor
jl
scas
jmp
scas
mov
movsl
pop
sbb
add
xchg
pop
hlt
rorb
gs
xchg
sub
out
movsw
nop
ficompl
pop
jecxz
xchg
in
mov
push
ljmp
mov
enter
fstpt
mov
xor
cwtl
aaa
xchg
adc
push
insl
or
mov
out
xchg
push
dec
stos
xchg
and
xchg
dec
rclb
sbb
xor
dec
jae
and
dec
xor
jnp
ret
in
add
rcrb
xor
cmpsl
jle
xor
aam
dec
xchg
push
sbb
or
lret
iret
in
mov
and
xchg
test
jo,pt
daa
xchg
dec
in
mov
and
scas
out
adc
mov
push
cmp
sbb
fcompp
fwait
and
ss
push
ds
iret
vmovsd
leave
or
jecxz
ret
sbb
lret
cmpsb
cmp
mov
jne
test
mov
pop
cld
fsts
and
icebp
sub
and
daa
ficoms
and
adc
mov
dec
stos
and
pop
dec
mov
test
stos
mov
mov
jns
les
xchg
sbb
lea
outsl
sub
andl
mov
shl
and
mov
mov
push
lea
inc
jno
mov
xor
mov
das
aam
loop
leave
mov
adc
jnp
lds
mov
pop
and
dec
loop
test
daa
xor
pop
shrb
add
ror
sbb
shrb
pop
pushf
jle
or
sbb
xor
push
out
fstpl
and
jns
mov
rorl
test
jecxz
mov
paddsw
mov
sub
lods
dec
mov
lahf
int
push
in
cld
jp
stc
jae
jp
xor
xchg
or
push
sub
sbb
outsl
adc
repnz
insl
sub
inc
ficoms
inc
scas
std
test
ds
sbb
inc
popa
xchg
es
movsb
and
dec
or
inc
bound
add
dec
add
mov
cmp
popf
stos
add
data16
mov
je
xlat
aas
roll
add
xchg
dec
sahf
adc
add
mov
ss
repnz
jno
test
or
divb
pop
add
pop
sbb
sti
jp
pop
sub
outsb
add
mov
clc
cwtl
jl
pop
pop
jo
repz
jle
scas
lcall
pop
jg
xor
subl
ja
in
test
daa
push
sub
dec
mov
and
inc
int3
push
out
xchg
iret
int3
pop
jae
fldt
mov
notl
rolb
jnp
in
xchg
lods
enter
or
ret
pushf
aaa
imul
fbld
xchg
outsb
jbe
mov
add
int3
lock
xor
aas
sbb
int
or
push
xchg
adc
cli
enter
jg
sub
test
push
incl
cmpsl
adc
test
xchg
daa
lock
in
jnp
mov
scas
hlt
adc
and
fwait
inc
add
les
mov
gs
push
or
sbb
mov
ret
leave
inc
lds
xlat
xor
pop
jnp
fs
push
mov
sahf
loope
outsl
xchg
icebp
pop
sub
sub
pushf
add
cmp
cmpsb
or
cmpsb
imul
ret
mov
or
jecxz
imulb
mov
enter
jne
or
sub
pop
lock
sbb
out
daa
out
pusha
stos
test
syscall
sti
bound
sub
popa
xchg
mov
mov
bound
inc
or
or
sub
mov
inc
sarl
or
aaa
mov
mov
imul
xor
mov
insb
mov
pop
test
cmp
lods
ds
add
ret
orb
outsb
add
and
stos
scas
stos
jle
sub
cltd
int3
repnz
mov
adc
sub
mov
push
testl
out
stc
shll
adc
arpl
sbb
ds
lock
sub
cmp
dec
pop
xchg
ja
sti
ss
jp
loope
jl
mov
movsl
push
out
dec
lea
push
adc
pop
imul
or
jmp
and
jb
jb
pop
adc
fdivl
push
pop
and
inc
out
fsts
roll
ds
shrl
jg
cmpsb
out
int3
in
inc
push
sub
int3
add
repz
popa
not
gs
jmp
cmpsb
dec
in
fistl
rcrl
fmul
leave
inc
pusha
sahf
sbb
insl
mov
xchg
orb
and
scas
insl
sbb
jle
push
outsl
hlt
mov
sbb
push
repz
mov
jg
imul
xor
mov
test
add
gs
hlt
dec
out
insl
test
push
ss
push
jne
mov
add
leave
enter
loop
push
call
pop
in
iret
and
lret
sbb
cltd
test
mov
popf
pusha
mov
cmp
jmp
pushf
push
ja
add
xor
xlat
xchg
scas
mov
les
into
jl
push
dec
in
gs
enter
mov
push
mov
sub
jnp
xor
push
ljmp
fnstcw
sti
fcompl
aam
dec
out
dec
push
adc
xor
out
ja
jb
sbb
ret
adc
sub
addr16
mov
jge
mov
sbb
aaa
and
mov
inc
insl
mov
push
dec
adc
pop
push
out
xchg
pop
jl
aaa
int3
and
gs
fwait
or
cltd
lods
xchg
push
sahf
fdivr
cmp
mov
ret
lret
push
lret
mov
filds
mov
and
mov
add
into
adc
scas
adc
in
dec
fstl
mov
pop
mov
and
xchg
cwtl
inc
lock
adc
in
add
mov
mov
pop
sbbl
mov
cwtl
ljmp
jae
fisttpll
mov
dec
jno
pop
jno
pop
add
fstpt
cmp
pushf
out
inc
mov
clc
push
popf
inc
or
mov
add
push
aas
jecxz
xchg
movsl
push
aam
out
jae
jnp
ja
fs
mov
gs
jmp
outsl
pushf
cmpsb
call
push
mov
jo
xchg
sbb
cmpsb
icebp
pop
pushf
xchg
addr16
scas
sbb
shrb
xchg
pop
sbb
push
xor
movsb
sbb
jno
push
cmpsb
ret
dec
xchg
and
mov
mov
mov
fistpll
jo
mov
push
test
cmp
movsb
adc
xchg
stos
or
xchg
bound
inc
shrb
sbb
xlat
mov
clc
clc
in
cmc
add
or
mov
mov
add
nop
mov
adc
and
outsb
daa
enter
popf
mov
push
push
fldl
shr
xchg
or
cli
inc
aas
xor
push
cmp
mov
push
pop
and
ja
pop
sub
mov
or
hlt
fcom
jne
cmp
or
pop
mov
pop
popf
stos
push
ret
mov
repz
jg
push
mov
mov
enter
mov
pop
xor
mov
push
frstor
xchg
dec
and
in
imul
cltd
or
inc
imul
pop
jne
cmp
sub
adc
inc
push
xor
dec
nop
sbb
cwtl
mov
sbb
test
shlb
int
rorb
ss
xchg
sahf
or
scas
jp
xchg
movsl
add
cld
pop
lock
daa
mov
inc
icebp
cmp
and
dec
in
push
cwtl
sbb
pushf
push
fldcw
xchg
aaa
mov
out
lods
dec
pop
and
mov
shlb
xchg
in
pusha
stos
leave
xchg
pop
mov
in
faddp
in
and
std
out
es
mov
pop
pop
insb
cltd
std
add
cmpb
jno
rolb
xor
test
xor
mov
mov
dec
sbb
mov
xchg
clc
inc
adc
clc
mov
pop
pop
mov
or
dec
mov
test
mov
pusha
push
fs
push
shll
test
push
or
xchg
es
dec
cmpsb
bound
jg
jae
mov
mov
add
les
int3
push
jns
push
mov
out
jge
cmp
or
icebp
aaa
movsb
jne
imul
sub
mov
push
and
pop
ljmp
or
xchg
xchg
add
jno
adcl
inc
sub
ljmp
mov
cmp
mov
call
inc
lods
daa
jno
dec
icebp
out
xor
mov
cltd
cli
pushf
mov
sbb
ret
sbb
sub
add
test
adc
hlt
and
xchg
push
and
jl
bound
aam
std
cli
cwtl
sbb
test
jbe
mov
mul
arpl
arpl
mov
div
imul
lods
jmp
fs
push
jecxz
inc
ljmp
sti
xchg
mov
imul
hlt
insl
add
adc
jmp
out
rol
in
push
lret
ss
arpl
or
xor
dec
pop
xchg
and
sub
cwtl
and
xor
sub
adc
jbe
loop
fdivrl
cmp
frndint
adc
imull
addb
icebp
scas
push
fdiv
xor
mov
xor
out
test
or
rcrb
and
and
jecxz
mov
int
pop
and
mov
inc
and
enter
inc
push
push
cli
mov
les
test
in
outsl
outsl
scas
sub
stos
in
shl
aam
test
cmc
xorl
dec
mov
push
xor
daa
fucomi
push
imul
loopne
xchg
push
lcall
repnz
lea
push
pop
popa
insl
push
mov
js
sbb
div
jbe
repnz
sub
xor
arpl
icebp
mov
xor
and
inc
or
xlat
enter
or
js
inc
mov
add
xchg
mov
xchg
mov
dec
dec
mov
and
ret
jl
mov
inc
dec
lret
loope
icebp
aad
mov
sarb
add
mov
sub
lret
mov
and
lock
inc
mov
jno
fbld
lcall
push
call
jo
lods
pop
inc
fdivs
cld
in
arpl
test
add
jg
cmp
in
das
fcmovne
in
addl
sub
in
out
pusha
test
pop
aas
dec
or
jp
jnp
sbb
ljmp
dec
mov
sahf
ds
repnz
and
das
movsl
insb
nop
mov
xchg
xchg
iret
or
push
gs
mov
jnp
cmp
lcall
js
pushf
fimull
addr16
ficoml
lahf
daa
push
imul
sub
daa
lods
lret
cmp
jmp
cs
mov
pop
jns
mov
xchg
jmp
loop
adc
stos
pop
mov
jns
pop
dec
pop
shlb
add
pop
cmp
pop
sbb
xchg
xchg
and
sbb
pop
loop
push
js
pop
add
js
pop
add
outsb
scas
sub
sbb
add
lret
pop
outsb
add
pushf
repnz
test
mov
mov
xchg
jg
nop
or
test
in
jns
mov
jno
jecxz
add
mov
sbb
cwtl
cmp
inc
adc
movsb
icebp
add
pushf
mov
pusha
pushf
jmp
pop
pop
mov
fidivrl
arpl
loopne
fcomps
ljmp
ret
fiadds
add
fcoms
push
jne
movl
lock
loopne
push
out
mov
rclb
insl
aam
sub
push
cli
mov
shll
add
ret
jecxz
test
mov
ljmp
enter
dec
adc
mov
jmp
mov
aad
add
dec
adc
cmp
sbb
push
insl
inc
addb
xor
sbb
push
add
lea
arpl
dec
xchg
pop
push
pop
fwait
and
pusha
ss
aas
xchg
in
sbb
loope
sub
filds
and
sbb
or
cli
mov
xchg
push
bound
outsb
ljmp
push
and
jno
inc
xor
jne
test
sub
sub
aad
in
adc
sub
cmp
cmp
mov
mov
lret
push
sub
mov
ret
adc
sbb
insl
push
js
out
in
xchg
jnp
mov
sbb
and
insb
out
repnz
cmp
pop
gs
mov
lret
lock
jmp
push
and
jle
arpl
sbb
in
sbb
mov
inc
cmp
xchg
movl
sahf
add
scas
xchg
pusha
lock
inc
sbb
pop
sub
loopne
out
pop
pop
mov
jecxz
and
cmp
cmp
aas
ret
jmp
xchg
icebp
add
stos
mov
and
cmp
pop
or
cmp
xchg
mov
push
add
sub
dec
mov
stc
pushf
mov
xor
andl
xchg
jl
int
lods
inc
test
fs
inc
pusha
mov
sub
and
rorl
dec
push
in
jecxz
es
mov
les
lock
lret
pop
mov
imul
cli
stos
pop
xlat
aam
std
outsb
fcoml
push
loopne
mov
les
jge
mov
or
out
popa
cwtl
xlat
xchg
adc
clc
out
test
xor
push
repz
inc
in
add
ljmp
inc
mov
jae
loop
aam
add
inc
test
sbb
rorb
or
hlt
enter
adc
je
mov
or
test
les
mov
push
dec
jb
sahf
cmp
ss
lcall
das
ss
add
dec
outsl
cmpsb
cmp
mov
xor
push
popf
add
lahf
dec
xlat
pop
xchg
inc
dec
mov
cmp
fdivl
mov
hlt
std
ds
mov
lock
pop
ja
pop
pop
dec
pop
cld
popa
push
jb
cwtl
xlat
in
shlb
iret
aas
dec
lcall
repnz
jl
mov
sti
jge
ud2
dec
and
xchg
daa
in
mov
adc
cmp
fs
jecxz
popa
ret
pop
sbb
add
xor
mov
dec
lock
cmp
inc
push
xchg
insl
lock
outsb
out
mov
jne
mov
stc
dec
negb
dec
fists
jnp
aad
add
imul
lods
shlb
cmp
fildl
gs
jns
jg
cli
pop
push
jno
incl
pop
mov
jo
dec
pop
or
mov
les
out
dec
or
jo
xor
out
test
adc
fisttps
sub
mov
jae
ss
into
jne
sbb
mov
mov
lds
mov
jns
subb
sbb
fldenv
adc
pop
sub
mov
roll
gs
push
xchg
lods
mov
and
mov
cmp
in
cmp
push
mov
js
mov
hlt
mov
xchg
arpl
fcomps
push
or
inc
sub
adc
push
mov
push
dec
lea
pop
std
jge
decl
xor
pop
add
jge
inc
data16
adc
cmp
pushl
repz
mov
mov
fsubrl
jno
sub
dec
lods
stc
rorb
mov
jmp
sti
addr16
push
mov
jo,pn
je
test
movsb
lahf
shr
xchg
neg
mov
test
rorl
dec
insb
dec
cmpsb
into
jo
jge
dec
stc
lret
mov
jb
gs
std
dec
mov
push
in
mov
push
test
xchg
ret
mov
lock
sub
aaa
cmp
aas
jmp
mov
jno
enter
andl
push
cmp
notb
xor
ja
and
xchg
jmp
dec
xchg
loopne
lods
cld
movsb
push
cmp
dec
mov
cmp
pop
gs
xchg
rcr
popf
push
insl
push
mov
int3
ss
repnz
clc
pop
cmpsl
sti
xorb
stc
and
xor
pop
jecxz
test
inc
hlt
jl
mov
cwtl
xorl
xor
lods
jle
mov
push
mov
pusha
sahf
jo
and
adc
dec
xlat
repz
add
shrb
xor
ret
ret
or
inc
test
pop
lahf
fstps
int3
mov
jp
add
add
cld
add
and
jns
pop
mov
mov
jbe
jmp
mov
pushf
sbb
pop
dec
add
out
add
inc
mov
mov
jp
dec
stc
add
push
xor
add
cld
mov
sbb
popa
scas
test
arpl
fwait
jns
cltd
mov
and
icebp
fnsave
int3
xor
sahf
cmp
push
arpl
shll
lret
sub
jg
dec
xchg
jo
xchg
lock
in
js
fcoml
add
mov
mov
fists
xor
int
jmp
pop
xchg
mov
adc
sbb
pop
mov
mov
shrb
jne
test
adc
jb
xchg
or
cmp
iret
iret
push
je
or
and
data16
jecxz
ja
ljmp
sbb
loop
adc
jnp
push
adc
testb
lods
sti
rol
in
fs
mov
sbb
xor
in
cltd
sbb
sub
adc
adc
push
jmp
movsb
push
out
inc
bound
mov
xchg
cmp
stc
idiv
mov
pop
sub
gs
int
js
lahf
cmp
rcrl
ret
into
pop
xchg
jno
mov
mov
mov
mov
pop
pop
pop
dec
mov
int3
shll
xchg
mov
cmp
xor
clc
cmpsl
push
ret
cmpsl
sub
dec
mov
adc
aam
mov
cs
xchg
in
push
les
leave
sub
hlt
mov
xchg
mov
inc
mov
adc
pop
es
scas
xchg
clc
jle
insl
loope
sub
push
cmp
clc
dec
shl
push
loopne
xchg
inc
jns
fldenv
mov
or
shlb
ret
leave
pop
cli
loop
push
inc
insb
int3
lods
push
popa
mov
xor
nop
sbb
pop
stos
mov
mov
jge
aad
stos
add
sbb
and
sbb
push
test
sbb
jns
outsl
sbb
adc
and
jp
sbb
in
out
jae
shll
sub
cmp
sbb
int
popa
mov
inc
jae
les
xchg
fdivs
iret
lret
pop
movsb
mov
fmuls
test
jmp
jmp
call
pop
push
sub
scas
sub
les
mov
dec
lock
push
aad
inc
mov
push
test
jl
push
out
xor
es
enter
inc
push
fbld
ret
jmp
fisubrs
sub
ret
add
and
sbb
rclb
pop
cmp
mov
push
adc
mov
out
in
xor
xor
inc
imul
or
fnsave
mov
inc
lods
rorb
mov
sub
hlt
pop
mov
or
sbb
xor
or
xchg
fwait
adc
or
mov
push
and
jge
sbb
sub
lds
ss
jne
cmp
mov
xchg
or
mov
dec
push
sbb
sub
cmp
inc
inc
insb
and
sbb
sub
adc
scas
xor
test
mov
mov
lods
push
mov
push
mov
jmp
mov
ficomps
movsl
in
out
dec
lret
rcl
rorb
mul
adc
enter
and
cmc
mov
add
mov
leavew
push
sub
ljmp
dec
xchg
jl
test
sbb
les
push
test
or
mov
or
xchg
les
in
mov
jae
add
jg
fildl
aam
jecxz
lahf
filds
jmp
mov
inc
xor
orb
ret
andl
pop
mov
push
es
sub
jle
sbb
repz
inc
sbb
sahf
in
addr16
out
inc
int
insb
cmp
xchg
xchg
int
xor
cmp
stc
cmp
pop
out
xchg
push
out
dec
jmp
lock
pop
pop
jle
test
pop
incl
xor
xlat
sub
jns
in
push
lods
or
movsl
callw
jne
xor
loopne
jo
jmp
sbb
add
ljmp
lods
popa
inc
add
cmp
repnz
out
ss
ret
pop
ficoml
fldl
mov
int3
leave
dec
xchg
addr16
xor
cmp
lret
jbe
aaa
negb
xchg
jle
jno
pop
adc
movsb
outsb
or
popa
cmp
dec
or
add
outsb
hlt
andl
iret
push
cs
sub
jb
jmp
adc
lret
sub
ficoml
aad
lods
lret
adc
add
rcrl
fisubs
pop
movsb
andb
mov
adc
sti
outsl
or
fs
insl
sbb
jb
stc
mov
jb
push
shll
scas
addr16
icebp
push
pushf
cli
lods
addr16
cmp
mov
xlat
and
lret
cmp
pop
in
movsl
test
jno
inc
lret
sub
sbbl
push
sbb
mov
mov
jmp
cmp
pushf
sub
fcompl
popa
mov
add
lods
rcrb
xchg
add
or
fldl
sub
pop
sub
rol
fimull
sahf
add
lea
push
int
into
std
insl
push
sahf
lods
in
out
jp
xor
xor
pop
pusha
ja
jno
movsb
jmp
imul
jp
pop
push
mov
cmp
jns
jmp
jg
adc
pop
lds
jl
lds
jg
jne
xchg
sbb
and
es
add
movsb
mov
aas
xchg
or
sub
and
jmp
es
ret
jbe
les
mov
lods
aaa
pop
dec
test
insb
sub
mov
add
mov
jle
lret
adc
scas
mov
das
mov
in
or
push
xchg
addr16
movsb
adc
loopne
pop
dec
shlb
inc
int3
dec
push
and
outsl
dec
cmp
mov
cli
movsl
mov
sub
xchg
out
fiadds
cli
das
imul
jg
bound
pop
daa
add
xchg
addr16
inc
or
and
int3
mov
cmp
mov
inc
mov
cmpsl
or
out
pop
xchg
mov
cltd
jl
jp
mov
fwait
icebp
in
inc
xchg
add
or
lock
push
cmp
dec
fwait
add
pop
jle
jne
adc
pop
or
adc
fdivs
dec
cmp
mov
adc
test
outsb
movsb
ds
aad
sti
leave
jg
jne
sub
notl
or
and
push
push
scas
scas
ret
lea
cmpsb
sahf
test
jae
jmp
lods
mov
scas
shlb
loope
fdivs
xorb
ja
test
jb
or
mov
int
divl
lahf
repnz
or
cmp
out
xor
and
pop
push
in
and
xlat
xchg
jne
adc
ret
jb
loopne
fistpl
add
sub
insb
dec
xchg
es
fstpt
shll
stos
pop
pop
out
loope
cmp
setne
popa
inc
xor
scas
jb
xor
push
mov
sbb
pop
adc
dec
popf
test
gs
sahf
enter
or
cmp
in
push
push
jl
rolb
fildl
xchg
sub
cmp
mov
cmpsb
sbb
pop
adc
test
int3
lea
mov
in
pop
pushf
push
or
popf
shrl
push
xor
jge
push
and
mov
stos
xlat
xchg
and
pop
int3
inc
sub
std
pop
addr16
dec
pushf
stc
jp
lret
mov
pop
adc
in
pop
and
cmp
insl
imul
push
fmull
jg
adc
jl
lock
outsb
jecxz
fisubs
out
rcr
push
les
pop
sbb
dec
arpl
in
xlat
ret
mov
inc
add
push
adc
mov
in
add
xor
cs
adc
mov
hlt
gs
fcomps
fiadds
dec
xor
out
cmp
jmp
fsubrp
mov
xor
add
xchg
nop
rol
push
out
cmpsl
movsl
mov
mov
mov
imul
test
mov
sub
xorl
mov
fdivp
inc
addl
or
lods
arpl
insb
jg
add
popf
nop
lods
cltd
enter
jmp
add
enter
daa
dec
pop
clc
ds
mov
sub
ja
mov
jecxz
push
sbb
jae
cmpsl
out
pop
or
mov
outsl
dec
fmuls
or
xchg
inc
subb
mov
aaa
pop
and
xor
cmpsb
dec
pop
cmp
sub
ret
jae
cmp
mov
add
mov
icebp
xor
sarl
and
mov
inc
leave
test
jnp
and
push
outsb
add
inc
push
cmp
outsl
or
adc
xor
out
mov
fs
jge
mov
stos
cs
adc
cmp
test
add
jo
sub
sub
cmc
enter
fiadds
fiadds
pmulhuw
loop
mov
loopne
jb
out
lret
sbb
sub
fldcw
ret
dec
dec
mov
lods
test
out
cmc
sub
iret
fsubrl
out
sbb
sub
stos
or
test
push
pop
out
push
mov
or
mov
push
aam
outsl
sbb
enter
pusha
addr16
icebp
xor
ret
loope
leave
ljmp
xlat
into
pop
lock
test
xor
sub
and
xchg
add
push
inc
cmpsl
xchg
xor
xor
xlat
lcall
inc
jno
int3
stos
mov
jns
mov
xchg
sub
xor
dec
cmp
cmp
sbb
fdiv
pusha
aaa
sbb
jl
std
jecxz
xorb
std
imul
jecxz
shlb
cmp
mov
xchg
mov
fcompl
cmp
inc
push
inc
lcall
dec
sbb
int3
nop
adc
jg
into
inc
out
mov
imul
cli
jge
nop
pusha
mov
cmp
adcl
cmpsl
jno
add
mov
mov
sarl
es
popa
xor
push
mov
std
andb
scas
lret
stos
push
sub
fnsave
push
jmp
cmpb
sbb
cmp
sub
shll
dec
mov
cltd
jecxz
lods
imul
je
dec
mov
push
dec
or
dec
mov
adc
aam
insb
test
push
outsl
cld
mov
add
das
cld
sub
rorl
mov
jns
sbb
pop
sub
jecxz
adc
xchg
add
pusha
add
sar
repnz
stc
adc
and
imul
and
cmp
into
fisttpl
subl
lret
jmp
in
fcomps
addl
or
xor
dec
loop
inc
jge
jo
pop
or
sbb
or
jmp
xchg
pop
mov
push
mov
jbe
jnp
dec
sbb
sbb
test
jb
lods
dec
mov
lret
xchg
shll
scas
push
or
mov
fwait
das
dec
pop
iret
cmp
stc
cmp
bound
xor
adc
mov
inc
sarl
xchg
insl
fs
shrl
inc
out
fcom
shl
add
inc
inc
add
mov
ja
cmp
or
xchg
and
and
dec
dec
jmp
push
mov
fsubrs
scas
test
jne
in
aaa
aaa
push
xor
outsb
and
out
xchg
lock
daa
icebp
cltd
cmc
sbb
lods
and
mov
pop
jg
imul
mov
jns
pop
sbb
ja
push
popf
and
pushf
cmp
cmp
jg
mov
fstp
mov
mov
in
test
mov
test
in
jmp
cmp
lods
fdivl
jae
fcomps
or
mov
push
outsb
test
adc
rcrb
jb
into
pop
sbb
sub
dec
popf
push
add
fmuls
push
lahf
aad
fwait
xchg
rorl
mov
xchg
add
andl
mov
inc
jo
or
scas
daa
jae
arpl
jl
shlb
dec
jb
cmp
outsl
cmp
gs
jge
psadbw
fucom
rcrl
jl
popf
push
pop
and
xchg
sub
adcl
xchg
sti
sti
pop
and
lret
negl
lods
jno
lds
mov
push
pop
jmp
add
mov
imul
in
adc
loop
dec
fidivrs
push
lods
mov
inc
adc
pop
cmp
jno
shlb
push
mov
rcll
mov
cmp
and
xchg
jmp
add
sbb
in
lods
pushf
cwtl
je
push
push
adc
gs
icebp
sbb
stos
mulb
xchg
dec
jo
shlb
loop
scas
stos
les
jp
jl
enter
sbb
adc
inc
jmp
dec
and
fdivp
out
ret
mov
sahf
cltd
cs
outsb
add
xchg
xchg
ljmp
mov
repz
mov
dec
cmp
jecxz
outsb
and
mov
adc
stc
fidivs
pop
pop
aad
scas
fcmovu
mov
mov
mov
xchg
outsl
int
enter
fistpll
cmc
es
pop
arpl
xchg
pop
lods
mov
sbbb
add
xor
mov
mov
push
test
or
imul
add
adc
ja
dec
adc
pop
fdivp
xor
push
aas
add
mov
sub
or
xchg
das
pusha
pop
test
nop
popf
cmpsl
clc
push
sub
movsl
dec
in
and
jg
pop
scas
mov
pop
gs
rorb
push
add
mov
es
push
sbb
idiv
icebp
add
dec
adc
cmp
add
sbb
pusha
pushf
mov
xor
ret
out
push
enter
js
lock
pop
push
and
lcall
jae
arpl
fistl
inc
sub
pop
aas
lret
push
lret
pop
mov
int
pop
push
jmp
scas
bound
push
das
std
rorb
pop
adc
push
testl
pushf
inc
in
adc
or
jb
out
xchg
mov
cmp
cmc
cld
mov
and
jle
or
push
lret
xlat
movsb
mov
xorb
insl
xchg
adc
lods
test
push
or
std
lock
mov
movsb
lret
insl
jg
enter
popf
xchg
jbe
loop
dec
aad
jbe
movsl
ret
inc
les
push
xchg
iret
xchg
fadds
cmpsl
pop
sbb
jl
mov
xchg
cmp
arpl
mov
sbb
push
sarb
and
sub
cmpsb
add
xor
sti
cld
lret
fwait
movsb
pop
in
std
call
sub
xor
push
mov
int
fsubrs
rcl
mov
lds
sub
nop
sar
scas
insl
mov
mov
sbb
and
or
cmp
sub
push
in
dec
lea
cmpsl
ljmp
xchg
sbb
outsl
insb
sbb
and
repnz
xlat
scas
jne
clc
jp
push
popa
or
in
and
pop
mov
adc
dec
mov
pop
adc
push
fstpl
nop
inc
test
sarb
and
or
es
gs
dec
out
lret
jl
call
mov
push
call
sub
test
jnp
shrl
repz
jle
dec
into
iret
sub
pusha
sbb
stos
sbb
enter
jecxz
or
negl
xor
cmp
push
xchg
aaa
mov
sub
mov
lcall
and
jge
sub
or
mov
sti
insl
sbb
add
mov
mov
cli
xor
daa
xlat
pop
mov
notb
push
cmp
repz
cmp
mov
in
cltd
mov
test
cmp
lret
add
inc
sbb
rclb
dec
js
push
pop
sti
addr16
mov
loope
or
enter
sub
fcmovnb
fwait
xor
xor
shrl
int3
cmpsl
outsb
stos
add
hlt
dec
bound
mov
mov
push
in
sub
fs
aaa
mov
cmp
mov
inc
ret
das
add
mov
jae
shlb
adc
add
dec
mov
dec
int
je
nop
fwait
mov
lret
add
push
push
je
lea
movsb
lods
sub
or
fcom
ja
and
cwtl
cwtl
mov
and
mov
adc
push
push
addr16
adc
std
outsb
out
and
mov
jp
stc
test
lret
aad
aam
in
lods
and
fiaddl
test
aas
ret
xor
mov
lahf
add
sub
jmp
imul
mov
mov
push
sbb
js
xchg
xchg
inc
mov
mov
stos
icebp
lods
mov
icebp
lods
mov
icebp
lods
mov
icebp
lods
mov
icebp
lods
mov
icebp
lods
mov
icebp
lods
mov
icebp
lods
mov
icebp
lods
mov
add
sub
dec
sbb
ljmp
mov
jl
mov
mov
pop
stc
mov
jmp
xchg
or
and
ficoms
call
sub
ja
xchg
xchg
cld
shrl
jns
repnz
lret
and
inc
xchg
gs
pop
jnp
jae
jmp
jge
sarl
jbe
test
mov
lret
lods
pause
outsb
push
mov
div
stos
mov
mov
push
jle
lret
outsb
mov
or
push
jecxz
sub
outsl
filds
insl
sbb
dec
stos
movsb
xchg
cli
dec
mov
es
inc
test
cli
xor
jns
aaa
sub
xor
cs
sbb
add
test
xor
jns
jg
xchg
dec
stos
sbb
mov
ret
mov
into
push
sbb
lods
push
push
shrl
push
xlat
popa
jne
mov
cmp
adc
sarl
sbb
sbb
ficomps
ficompl
jle
mov
ja
lds
fneni(8087
fsts
shll
mov
jno
or
cmpsl
xlat
aad
test
enter
test
ret
shlb
adc
mov
cli
mov
inc
pop
dec
shlb
sahf
jmp
mov
pop
jb
inc
sbb
dec
dec
cmpsl
cld
dec
xchg
cmp
fs
dec
int
stos
mov
inc
ja
mov
cs
pop
pusha
std
stc
clc
cmc
xor
adcl
xchg
inc
add
push
insb
nop
sbb
pop
xchg
adc
add
fwait
dec
add
sub
jmp
and
cmpps
add
in
adc
adc
and
and
imul
lret
and
dec
xchg
sbb
pop
sbb
or
dec
mov
pop
mov
push
lods
dec
push
jae
mov
push
orl
mov
inc
xchg
jb
jecxz
adc
mov
adc
lods
sub
imul
sub
sub
mov
js
insl
imul
jno
ja
adc
mov
fwait
cld
js
mov
sbb
or
pop
test
addr16
inc
arpl
jae
js
jne
mov
or
lcall
notl
inc
push
and
orb
faddl
dec
sub
pop
ss
cmp
xor
in
jbe
pop
and
ret
out
gs
push
inc
bound
mov
or
or
push
int3
jo
jl
inc
or
mov
insb
add
inc
ljmp
lret
rcrl
pusha
jle
je
sub
jae
pop
lcall
push
enter
nop
xchg
sbb
add
inc
add
hlt
pop
cmpsb
int3
out
fnstcw
jge
add
mov
fisttps
in
or
pop
rclb
daa
scas
dec
xchg
das
repnz
aam
insb
bound
mov
lret
xchg
data16
loop
int3
mov
mov
cwtl
imul
dec
sub
sub
inc
pop
call
movsb
out
aam
lret
sbb
pop
mov
and
in
lret
adc
add
mov
inc
add
and
pop
pop
jmp
dec
mov
mov
es
call
fldcw
cmp
adc
sti
loopne
push
mov
lods
sarl
lea
jle
xchg
xchg
pop
pop
std
dec
insb
pop
cmp
int3
sarl
cmp
xor
xor
mov
push
nop
das
movsb
les
and
pop
imul
push
addr16
cmp
jge
int3
add
andl
jl
mov
or
data16
jmp
sbb
mov
fldenv
lea
pushf
dec
jne
inc
or
adcl
jne
lods
push
mov
lahf
lock
and
lret
mul
adc
repz
gs
outsb
insl
mov
js
gs
call
mov
fidivrl
movsl
fsubrl
mov
int3
xchg
cmc
shll
les
pop
out
cmp
scas
daa
sub
es
jp
push
outsb
insl
mov
mov
push
xchg
adc
ss
pop
push
fsubs
test
push
dec
mov
lahf
test
fidivrl
adc
xorl
ds
ret
cwtl
shlb
aam
mov
clts
outsl
data16
inc
inc
mov
pop
idivl
sarb
push
xorb
aam
ret
or
scas
mov
pop
enter
popa
scas
frstpm(287
sub
mov
addl
cwtl
into
loopne
dec
lds
dec
pop
lock
lcall
scas
roll
insl
cmpsl
aad
sbb
aaa
mov
xor
push
inc
sahf
daa
test
inc
xlat
dec
push
cs
add
aad
test
adc
sub
loope
or
mov
shl
xchg
pop
in
xchg
fwait
cmp
movsl
out
mov
lcall
punpckhdq
and
mov
inc
mov
lock
and
getsec
push
add
xchg
adc
les
dec
out
not
mov
out
pop
mov
xor
jae
je
aas
mov
xchg
mov
push
push
pop
int3
pop
je
or
bound
jmp
inc
pop
ljmp
push
dec
sarb
mov
lods
imul
jb
push
fisubrl
jl
xor
out
fwait
cli
aam
das
xchg
mov
push
shlb
mov
cwtl
cmp
dec
int3
sbb
es
mov
xchg
push
add
dec
and
into
sbbl
stc
cmp
mov
call
outsb
dec
stos
insl
jl
mov
out
les
xor
mov
adc
daa
je
jnp
mov
mov
cmp
lock
lds
xchg
fnstcw
mov
sub
loope
mulps
jp
ljmp
stos
inc
xor
movsl
js
cmpsl
jp
push
lret
push
and
aad
jae
push
inc
gs
mov
inc
sbbb
ret
clc
add
mov
xchg
scas
pop
out
aaa
and
inc
ds
add
iret
xchg
xchg
mov
mov
and
outsb
imul
xor
mov
mov
or
mov
aaa
pop
jl,pt
mov
push
pop
cltd
in
inc
inc
in
int
ret
mov
lahf
repz
or
flds
mov
sbbl
call
cmp
cmp
int
push
je
fldcw
xor
xor
cmp
cltd
mov
ja
xchg
testl
daa
ror
adc
dec
fisubrs
les
mov
hlt
mov
add
adc
je
sbb
sub
pop
out
ffree
pusha
add
sbb
hlt
pop
leave
bound
jae
push
loop
xchg
cli
xorl
push
dec
sbb
repz
movsl
call
pop
sbb
rol
push
andl
fsubrl
shlb
pop
in
iret
in
in
dec
dec
adc
sbb
mov
inc
ja
mov
rsqrtps
iret
pop
imul
test
fildl
mov
cmp
jg
and
subl
pop
pop
fs
outsl
loop
stc
stc
jb
cmpsl
dec
popf
pushf
mov
pushf
xor
push
mov
inc
mov
cld
int3
into
mov
rorl
push
test
call
mov
xor
sub
add
sbb
outsb
test
std
ret
mov
jp
lea
fdivrs
jle
xchg
and
xchg
sbb
mov
cvtpi2ps
and
icebp
fistpll
insl
cmpsl
inc
adc
jno
js,pn
xchg
movsb
popf
fists
xchg
mov
neg
fwait
dec
inc
jmp
punpckhwd
stos
xor
mov
loope
push
mov
push
ret
cmc
repnz
sub
fcmovnu
and
or
cmp
stos
daa
xor
loopne
out
test
sbb
es
das
pusha
mov
into
mov
lcall
push
je
pop
sti
mov
dec
and
xor
lret
sub
ss
jmp
push
std
and
int
daa
xor
loop
adc
and
bound
jp
outsb
and
xchg
into
push
cltd
rcl
into
pop
divb
loope
leave
insl
repnz
icebp
dec
or
dec
das
iret
adc
adc
js
push
ja
fldt
daa
ret
mov
push
jecxz
inc
xchg
dec
lea
lcall
mov
xchg
in
lea
or
dec
mov
data16
stos
fidivs
rcll
mov
cltd
icebp
and
leave
jmp
jp
dec
inc
add
push
inc
sub
mov
imul
xchg
call
rep
js
jmp
insb
sahf
insl
fsts
and
es
popf
xchg
or
jle
dec
dec
mov
popa
fldt
xchg
mul
xchg
xchg
inc
lea
jp
jle
mov
fucomp
xchg
leave
add
and
pop
xor
mov
sub
hlt
push
ficoms
jg
scas
mov
jp
arpl
orb
xor
testb
xchg
mov
popf
mov
mov
xor
arpl
aas
mov
sbb
ret
or
xchg
mulb
popa
imul
xchg
test
pop
pop
xlat
nop
add
call
or
push
movlps
jg
xchg
call
daa
cmpsb
lods
ja
mov
out
test
ss
loopne
and
mov
cmpsl
filds
sub
outsb
mov
mov
pop
xor
mov
cld
ds
dec
pop
stc
es
repz
jnp
and
adc
pop
inc
gs
es
mov
xlat
movzbl
repz
xlat
daa
jne
jp
push
es
in
cmpsl
lcall
mov
mov
push
mov
addb
or
fcompl
push
ljmp
hlt
jnp
jb
out
or
cwtl
scas
mov
les
orb
sbb
or
dec
fimull
test
lds
xor
mov
imul
rcpps
cmc
adc
push
mov
jae
adcl
and
aaa
mov
sbb
scas
add
out
lret
test
push
inc
xlat
sbb
jnp
push
sti
daa
xchg
add
dec
popf
in
dec
f2xm1
push
dec
lahf
dec
or
add
pop
cmp
cmpb
daa
pop
dec
mov
pushf
cmp
fldl
stos
dec
sbb
mov
mov
test
mov
andb
shlb
push
mov
cwtl
jp
cltd
push
push
ret
xchg
les
push
push
jns
push
daa
sbb
jge
cmc
jno
cmp
jmp
fstps
mov
clc
aam
lcall
flds
mov
jle
mov
push
or
leave
xorl
jg
test
fisubrs
lcall
pop
push
sbb
xlat
cmp
push
jno
movsl
push
push
xchg
enter
stos
push
xor
sbb
inc
mov
sbb
pop
mov
and
cmp
mov
and
xchg
cmp
testl
in
or
out
push
cmpsl
xor
in
sub
rolb
arpl
add
loope
fldl
outsb
cmp
clc
popl
push
fistpll
in
frstor
and
jle
ljmp
aam
mov
add
stos
mov
rcl
outsl
xchg
fcmovb
enter
mov
mov
aad
and
adc
gs
test
jl
les
in
add
mov
ret
cld
cli
add
lret
xor
add
jb
xchg
jg
xchg
xchg
ds
adc
inc
add
pop
data16
lods
and
lahf
inc
arpl
jo
xchg
jbe
test
inc
fstpt
jo
pop
int
loop
ret
fistps
and
adc
cwtl
xchg
dec
test
inc
fsub
add
cmp
or
xchg
push
into
push
clc
xchg
rorb
daa
cmp
das
test
inc
ret
iret
mov
jae
repnz
pop
jmp
add
orb
popf
xor
shrl
imul
pop
out
out
fwait
ds
aam
pop
sbbl
xchg
mov
cwtl
out
outsb
pop
cmp
test
xor
lds
push
cli
and
dec
iret
push
mov
fidivrs
mov
stc
mov
clc
popf
xor
sbb
mov
test
adc
xchg
cmp
jno
shlb
sbb
push
cmpsl
fdivrl
mov
movsb
hlt
sahf
push
aam
sbbb
add
test
adc
out
nop
mov
test
insb
add
mov
cs
push
ror
iret
mov
mov
mov
and
andb
addb
cmp
loopne
fadd
cmp
dec
adc
and
xorb
in
pcmpgtb
cs
adcl
imul
popf
and
cmpsb
fs
or
sbb
push
pushf
pop
and
adc
mov
je
push
pusha
dec
and
add
imul
sub
sbbb
xchg
idiv
or
adc
ret
mov
out
or
inc
ds
out
fisubs
cmp
jae
jl
insb
cmp
rsm
or
repz
js
aam
imul
scas
or
and
popa
push
sub
push
add
sbb
pop
pop
cld
jmp
mov
out
imul
mov
fwait
mov
cltd
mov
pushf
xor
dec
ljmp
mov
cmp
imul
repz
in
jo
inc
xor
adc
mov
or
or
cmp
and
pushl
jnp
mov
int3
hlt
hlt
or
lcall
pop
xchg
out
cmc
jbe
lahf
or
dec
lods
xchg
jmp
xchg
jecxz
lahf
or
out
xor
repz
add
add
rorl
movsb
out
adc
pop
pop
das
repnz
ss
push
fsubrs
mov
movhps
imul
movsl
or
sarb
xor
in
scas
lea
pop
mov
pop
orl
add
cs
jb
in
ds
arpl
js
sub
notb
adc
loop
sahf
bound
and
pop
push
cmp
scas
cmp
arpl
pop
and
xchg
inc
fs
sub
outsb
out
sbb
cmp
xchg
and
xor
movb
loopne,pt
push
inc
int3
and
cs
and
jne
test
inc
add
xchg
adc
jae
jne
cli
pop
pop
add
push
sti
jne
inc
mov
dec
bound
mov
mull
add
iret
xchg
xchg
mov
fmull
xchg
jae
mov
fnsave
cmp
or
pop
dec
mov
lret
mov
lds
cli
push
mov
int3
loope
mov
lret
sbb
and
rcrl
ficoms
sub
call
push
mov
loope
push
fimull
lods
push
out
imul
cwtl
mov
int3
jb
fcom
pop
push
xchg
in
dec
push
mov
inc
xchg
ret
jns
movl
into
pop
xor
mov
pop
int3
rcll
and
out
mov
pop
mov
push
fwait
dec
push
daa
movsl
movsl
mov
lods
ret
push
popf
xchg
inc
fcomps
and
divl
loope
mov
test
outsb
mov
fs
mov
jae
xchg
xor
js
sahf
inc
jne
pop
repz
pop
popa
sub
and
adc
xchg
cmp
lds
loop
jl
repz
scas
cmp
sub
daa
and
mov
out
adc
mov
das
mov
push
pop
jle
and
arpl
les
arpl
pop
in
xchg
mov
sub
leave
insb
stc
rorl
xorb
aam
xchg
sahf
pop
lret
add
repz
cwtl
imul
stc
sbb
push
lods
stos
fsubs
fcmovne
out
push
subb
dec
lods
and
push
sub
in
mov
xor
sbb
and
xor
jb
inc
sbb
test
shr
pushf
ljmp
mov
in
jo
ds
xchg
adc
sbb
aaa
add
push
mov
inc
out
out
aad
cli
cmp
scas
fdivrl
int3
xchg
sbb
pop
or
incl
lea
js
insl
fwait
cwtl
push
rcr
int
ret
xchg
in
inc
xchg
push
push
fisubs
mov
fdivrl
mov
jl
js
mov
cmp
pop
das
dec
pop
test
adc
xchg
dec
mov
mov
repz
lahf
xor
mov
jb
mov
pop
sarl
jnp
or
pop
jg
loope
das
mov
inc
loop
in
jae
mov
cltd
arpl
or
fmuls
fs
adc
in
mov
mov
popf
mov
pushf
mov
mov
jb
sbb
inc
cmp
orps
insl
xchg
ds
jp
fwait
es
cmp
das
mov
mov
xlat
fld
cmp
addl
xor
sbb
jmp
inc
mov
mov
add
cmp
xchg
mov
es
cmp
cmpsb
cwtl
inc
repz
call
pusha
out
pop
lods
inc
sbb
mov
mov
inc
cs
loope
push
mov
loope
lret
fs
test
mov
mov
and
outsl
int3
sub
out
gs
std
lods
notb
cmp
outsb
mov
dec
or
adc
fistl
aam
out
mov
test
jb
jno
mov
jecxz
xchg
loop
pusha
jge
and
out
mov
sub
adc
sub
mov
fcomps
mov
in
jg
andb
arpl
scas
mov
daa
adc
inc
pop
xor
fwait
xor
mov
mov
jle
inc
push
sbb
stos
xchg
repz
and
or
or
loope
pop
push
movsl
imul
sbb
rorl
mov
pop
cmp
les
loop
fisubrs
lcall
nop
pop
pop
lret
ljmp
sbb
xor
cmp
cmp
lret
fisubl
mov
cli
outsl
fwait
and
cmp
and
mov
icebp
std
enter
sub
dec
ret
and
mov
pop
inc
loop
pusha
adc
or
jl
in
pop
xor
faddl
jnp
mov
mov
cmp
std
lret
fldenv
fists
cld
xchg
faddl
pop
aam
xchg
pushl
pop
subl
int3
cwtl
aad
mov
outsl
add
cmpsb
arpl
cmpsb
js
lods
cmpl
mov
sub
ds
clc
cmpsl
jo
sbb
cs
xchg
and
int
stc
xchg
sub
mov
inc
pop
loope
pop
inc
pop
rcll
sbb
cltd
cmpsb
xorl
dec
mov
mov
inc
cmp
xchg
lahf
jb
lret
pop
add
into
xchg
in
dec
sub
mov
xchg
shlb
pop
leave
inc
aaa
ret
cmpsb
dec
in
int
test
jp
lock
scas
ret
movsl
pop
lock
out
push
ds
or
nop
nop
mov
dec
fs
fld
les
mov
pop
inc
test
das
xchg
stc
mov
jle
rol
cmp
push
ret
stc
pop
cmc
dec
mov
dec
repz
stos
stc
lods
mov
push
into
sub
adc
adc
pop
mov
imul
repz
mov
out
in
jge
outsb
clc
aas
jb
shrl
daa
xchg
icebp
leave
mov
fsub
pop
inc
test
ret
movsl
push
pop
ret
jge
loope
jge
repz
pushf
in
and
out
stc
fldcw
cld
mov
stos
popa
sbb
push
adc
addl
or
mov
cwtl
sbb
and
mov
les
mov
and
add
or
mov
add
sarb
aad
jno
adc
cmp
xchg
pop
adc
sti
gs
aam
push
arpl
pop
dec
sbb
inc
lods
loope
std
pop
push
cwtl
sbb
out
xor
pop
addb
fs
jg
adc
pop
mov
cmpsb
mov
pop
xor
mov
outsl
shrb
pop
ret
sub
sbb
cs
or
inc
sub
je
ret
mov
sbb
les
leave
sub
inc
xchg
and
aaa
cmp
push
push
sbb
xor
fsubrl
xor
pop
call
jno
sahf
pop
dec
dec
jnp
adc
xchg
aad
ljmp
mov
fwait
in
cld
ret
sub
pop
cmp
ss
sub
sarb
push
ja
mov
mov
jae
je
cmpsl
jmp
scas
sub
cmp
sub
gs
fbstp
lea
xor
mov
rep
shrd
popa
stc
test
scas
or
lcall
adc
int3
jb
jg
push
adc
icebp
mov
mov
negb
rorl
xorb
repz
mov
push
loope
and
adc
xor
jb
jne
test
call
sbb
loopne
mov
jp
xchg
jmp
dec
add
mov
jp
ret
out
push
mov
jb
jbe
out
cmpsb
enter
sbb
jmp
imul
enter
sub
xchg
mov
out
dec
sbb
sub
fidivrs
jns
mov
in
das
in
out
mov
repz
fwait
sbb
cmp
popa
aas
dec
pop
inc
mov
xor
cmpb
lea
mov
ret
out
mov
ds
inc
pop
gs
pop
xchg
mov
add
ret
popa
mov
and
fdivl
or
ret
pop
or
adc
cmp
lcall
jmp
mov
stos
cmpsb
out
aad
pop
jle
lock
cmp
mov
ja
pop
sub
rclb
push
lcall
std
adc
dec
std
imul
pop
test
xchg
lret
stos
repnz
xchg
mull
insl
enter
cmp
mov
xor
ret
imul
add
dec
jns
insl
xchg
sub
inc
mov
sub
and
fs
dec
in
pop
mov
push
inc
out
std
push
out
mov
movsb
or
stos
fistl
cli
ret
lret
xchg
dec
cmp
sbb
xchg
jg
mov
outsl
or
jl
mov
test
sbb
lcall
mov
or
sbb
imul
xor
sub
loopne
pop
add
es
jle
and
xor
push
jae
int3
adc
orb
cmc
cmp
sub
dec
dec
lret
mov
dec
mov
test
and
inc
mov
les
adc
mov
mov
into
jp
orl
nop
cmp
add
xor
sahf
call
aam
and
mov
int3
negb
fbstp
sbb
cmc
pusha
sbb
mov
dec
cmp
mov
or
or
push
sarl
and
add
push
std
pop
and
test
inc
push
movb
bound
sub
cmpb
push
jmp
xchg
mov
cmp
cli
xor
dec
cltd
mov
addr16
imul
xchg
add
dec
scas
pop
pop
imul
and
imul
out
inc
xchg
sarl
daa
push
add
lret
cld
or
push
cld
mov
xchg
dec
mov
repnz
xchg
in
mov
push
das
call
gs
cmp
xchg
and
and
adc
test
xor
or
mov
cmp
insl
pop
inc
jl
add
inc
shrl
popa
mov
scas
mov
push
adc
sub
dec
insl
pop
sti
cmpsb
inc
cli
mov
pop
pop
mov
daa
or
pop
xchg
inc
notb
cltd
adc
lock
std
push
sbb
add
dec
dec
inc
icebp
pop
push
mov
movsl
hlt
push
mov
scas
enter
xlat
sub
cmp
mov
loope
notb
stos
pushf
xor
pop
sbb
lret
jecxz
xchg
adc
fstpl
cmpsb
mov
xor
cmpsl
cli
sub
pop
sti
cltd
jmp
xchg
jl
push
movl
cmpsl
add
mov
in
jo
lcall
push
adc
mov
rorb
dec
lahf
sti
push
lds
lret
iret
jecxz
bound
pop
repnz
push
sti
enter
push
adc
jnp
cmpsb
cmpsl
fldenv
xor
pop
xor
insl
pop
cmp
dec
xchg
xchg
aad
push
cmp
popf
add
cmpsl
jne
jmp
lods
outsl
rcll
adc
mov
push
arpl
xchg
fildl
dec
insl
arpl
and
and
imul
jns
mov
or
jl
pushf
shl
cmp
das
ret
int
sahf
push
push
sbb
pop
jae
mov
fcoml
jge
es
xor
xor
push
iret
arpl
lea
xor
pop
ficoml
das
lods
xor
inc
pop
and
cmpsb
aad
leave
mov
dec
jl
cmp
sbb
ds
mov
iret
and
push
scas
xchg
pop
mov
mov
xlat
or
inc
sbb
xor
sarl
les
mov
mov
sahf
jno
outsl
cltd
fwait
and
js
sub
mov
test
add
fisubl
push
pop
ficompl
inc
add
mov
mov
or
push
cmpsl
xchg
jnp
or
jl
mov
in
inc
rclb
xor
dec
xor
stos
jne
fs
mov
pop
adc
jg
add
jg
pop
mov
push
adc
out
arpl
pop
push
jns
push
ja
repnz
jecxz
sub
nop
adcl
xchg
sbb
outsl
xor
mov
inc
insb
decl
hlt
pop
in
iret
mov
js
rcrb
loopne
lods
sahf
mov
mov
mov
outsl
xchg
cmp
andb
xchg
cld
idivl
pop
enter
cmp
aas
pushf
add
mov
sbb
rcrl
push
in
sbbl
xchg
fldl
pop
dec
sbb
ret
fidivs
push
rorl
xchg
pop
push
adc
cmp
sbb
mov
or
pop
mov
sub
enter
sbb
xor
aas
or
and
xor
arpl
mov
mov
pop
shll
push
test
stos
cmpsl
shr
leave
out
add
iret
sub
jno
push
in
mov
jbe
aas
test
push
jecxz
and
pop
xchg
das
jo
cmpsl
push
inc
cld
aas
test
or
adc
out
test
aas
js
jmp
xlat
jg
xor
outsl
ss
out
xor
mov
mov
cmp
je
std
jbe
cmp
je
xchg
cwtl
push
cmc
sub
outsl
adc
xchg
mov
xchg
mov
jbe
nop
sbb
popa
sbb
rcrb
mov
pop
cltd
repz
dec
in
out
test
xor
dec
int
dec
loope
xlat
enter
cltd
rcl
dec
inc
sbb
fs
into
and
sub
in
dec
mov
mov
sahf
fs
sbb
pop
mov
addb
ret
cmc
popa
sub
out
adc
in
add
sti
loop
test
sbb
inc
loopne
mov
add
mov
dec
data16
clc
movsb
xor
mov
or
shlb
outsb
lahf
sub
shrb
mov
je
xchg
cmp
std
lods
loopne
jne
imul
mov
lock
xchg
mov
shlb
jecxz
push
pop
inc
dec
test
jne
or
inc
rcll
push
jb
loop
outsb
imul
cld
sub
sub
fidivl
add
ja
or
mov
jmp
cmp
test
faddl
outsb
dec
and
dec
mov
andb
cli
mov
mov
fisubs
sub
fidivrs
les
inc
sub
jns
jl
push
icebp
scas
jmp
pop
in
adc
push
fisubs
not
stos
jns
or
sbb
jg
in
out
xlat
push
mov
mov
mov
xchg
imul
push
pushf
xchg
cld
push
fisubs
pop
sti
mov
xchg
shlb
jo
imul
adc
mov
dec
imul
and
push
jge
icebp
dec
imul
es
in
push
stc
mov
pop
jno
aam
cwtl
icebp
jo
or
mov
pop
and
jg
fmulp
mov
insl
cmc
mov
and
pop
lea
clc
and
push
stos
push
shlb
jns
cmpsb
mov
in
pop
jo
fidivrl
stc
dec
lret
stc
and
nop
inc
pop
mov
je
pop
in
scas
inc
push
mov
insl
popa
int
pop
iret
into
pop
jl
rcrl
jne
push
movsl
aam
fidivl
insb
mov
rclb
xchg
repz
and
jae
arpl
adc
cmpsb
adc
mov
jbe
rcrb
je
enter
mov
pop
xor
cltd
mov
loope
push
stos
add
mov
mov
pusha
pushf
mov
stos
xor
cmp
jne
into
or
inc
push
sbb
jo
mov
gs
push
lret
adc
adc
pop
repnz
xor
mov
vmwrite
imul
mov
lea
enter
mov
mov
test
mov
sub
mov
in
mov
int
mov
xor
scas
in
sar
xor
imul
sbb
xor
mov
movsb
leave
and
mov
add
sbb
icebp
xor
adc
xchg
dec
add
lds
les
jle
stc
or
push
fmulp
mov
mov
fnstenv
xchg
enter
sub
sarl
sarb
xchg
in
rcll
dec
repnz
gs
adcb
pushf
fimuls
js
cmp
mov
sbb
or
pop
fcoml
clc
and
dec
pushl
inc
daa
add
dec
mov
xchg
jp
dec
imul
sti
repnz
adc
movb
adc
mov
sbb
cmp
stc
add
mov
lret
push
sub
jne
aaa
je
stos
loope
stos
js
inc
jnp
push
mov
dec
inc
jp
jge
xchg
jmp
hlt
sub
mov
jle
pop
ljmp
push
insl
sub
sub
rcrb
add
cltd
adcl
xchg
inc
in
lea
xchg
loop
into
fcmovbe
cltd
pop
mov
mov
and
cmpsl
jns
pusha
dec
test
add
loope
mov
loop
pop
loopne
std
mov
into
dec
sbbb
jle
cmp
shll
loope
lret
lcall
insb
or
and
mov
inc
add
nop
pop
sbb
nop
mov
fisubrs
xchg
stc
sti
iret
pmulhuw
fimuls
sbb
in
fadd
sub
mov
push
in
add
popf
xchg
shl
rclb
fldcw
aas
shlb
mov
add
push
or
lahf
enter
jecxz
adc
in
pop
rcrl
shlb
mov
pop
xchg
push
fiadds
inc
ja,pt
gs
sub
xor
or
or
add
neg
orb
dec
lods
xchg
mov
cmp
out
jnp
or
or
inc
std
add
fsubr
sbb
xor
mov
jns
hlt
and
daa
scas
mov
js
sub
mov
or
mov
outsl
repz
inc
cmpsb
stos
push
sub
test
les
imul
test
mov
mov
sbb
arpl
pop
aaa
pop
aad
push
dec
xchg
mov
add
popa
out
popf
or
nop
jnp
lret
lret
outsl
jo
aam
in
jo
push
outsb
shll
movsl
xchg
sbb
icebp
xchg
push
mov
hlt
mov
sbb
mov
add
stc
or
cmp
clc
cmpl
sahf
popf
call
xchg
and
push
test
dec
lret
mov
mov
inc
dec
les
add
jae
mov
xorb
js
cltd
test
sahf
xchg
aad
into
xchg
add
pop
and
pop
out
negb
sub
lcall
jmp
pop
int
mov
push
out
rclb
sbb
sahf
dec
jb
cmp
cmpsl
jle
pop
in
sysenter
loope
and
push
jmp
data16
cs
fisttps
mov
jnp
daa
adc
jp
cmpsb
xor
into
cmpsl
jbe
xchg
mov
xchg
fsts
cmpsb
xor
out
mov
jnp
and
aas
in
rcll
push
xor
out
fisubl
jmp
orb
mov
or
xor
out
or
fwait
mov
xchg
ds
jne
mull
lcall
dec
stos
mov
pop
fldl
into
ljmp
mov
push
adc
cmc
aaa
push
lret
adc
jae
daa
mov
int
dec
imul
jns
icebp
in
dec
inc
jae
push
inc
cmc
orl
or
sub
pop
inc
inc
int3
repz
hlt
pop
jge
xor
add
cmp
ljmp
je
adc
std
push
cmp
push
adc
das
mov
push
xchg
mov
popf
in
mov
pop
fnsave
sbb
cmp
ret
mov
loope
adc
jnp
jp
ljmp
dec
out
push
in
add
fs
mov
jb
push
mov
jne
cmpsl
in
push
mulb
pushl
push
mov
pop
aas
lods
mov
sbbl
adc
mov
gs
int
push
mov
dec
jno
jp
sub
dec
loop
ret
test
imul
mov
es
sbb
sbb
push
fsin
shrb
dec
stos
and
and
jecxz
lock
adc
adc
jno
dec
cmp
les
inc
and
icebp
daa
or
shll
and
jne
lds
scas
mov
fmuls
jo
jmp
mov
out
cmovo
dec
sub
stos
jae
inc
dec
pop
or
je
enter
ljmp
scas
cmp
mov
andl
gs
cmp
jp
push
and
mov
cmp
jl
sub
or
add
subl
lcall
shrb
mov
imul
jnp
test
lcall
test
jae
push
mov
shlb
insl
cmp
in
mov
arpl
insl
sbb
divl
jnp
in
fiaddl
andl
test
in
pop
mov
pop
js
and
cmp
imul
imul
push
mov
imull
dec
mov
imull
sbb
pop
sti
shlb
jle
sub
xor
inc
dec
mov
inc
push
sub
mov
roll
int
mov
dec
out
sahf
test
sub
jmp
push
xor
jbe,pn
xor
lcall
sar
jnp
insl
ljmp
push
xchg
into
inc
mov
adc
cld
aaa
mov
imul
leave
jne
test
int3
ja
inc
pop
nop
out
mov
popa
mov
addr16
test
or
mov
ja
mov
repnz
in
jge
add
and
out
pop
mov
jmp
iret
test
mov
aas
add
sub
fcompl
movsl
inc
fidivrs
dec
cs
adc
push
daa
rorl
pop
popf
insl
enter
mov
adc
sbb
mov
ljmp
lds
clc
pop
mov
lahf
fdivr
push
mov
mov
sub
in
and
loop
fwait
pop
jge
into
inc
lods
dec
dec
lret
cmp
das
imul
add
xchg
inc
sub
cmp
adc
dec
and
and
inc
jg
enter
cmp
popf
sbb
mov
mov
int3
or
inc
cmp
xor
addr16
rcrl
pop
aad
in
sbb
push
mov
dec
pop
repz
data16
std
lock
add
sub
mov
sahf
rcrb
ret
rcl
es
mov
sbb
jecxz
loop
sub
test
cmp
shr
xchg
in
mov
loopne
xlat
scas
xor
daa
pop
in
mov
roll
inc
mov
ret
inc
cmp
and
jg
lock
shlb
aaa
mov
mov
jmp
and
lcall
aaa
sti
and
pop
mov
in
hlt
jg
addr16
inc
ret
mov
jo
mov
and
inc
sarl
fcoms
inc
cli
xchg
sub
pop
mov
adc
stc
cs
mov
mov
dec
mov
imul
test
popa
mov
push
push
mov
mov
mov
orb
push
nop
rcl
mov
cmp
outsb
fcomp
and
jp
xor
addb
cmpl
sub
sti
jle
popf
push
or
sub
addr16
stos
push
pop
inc
jno
fcmovne
mov
pop
sub
inc
ja
push
adc
or
insb
inc
orb
mov
std
add
sarl
push
push
lahf
rcrb
jmp
push
inc
addr16
clc
jmp
mov
mov
xchg
sub
fucom
jb
mov
mov
mov
dec
enter
js
int
les
inc
adc
mov
xor
lds
cmpsb
pop
sbb
cwtl
mov
test
mov
ret
test
adc
scas
js
fwait
ret
pop
inc
test
pop
xor
lock
add
int
out
test
sbb
jb
out
ljmp
xchg
or
test
in
jbe
dec
and
mov
jecxz
adc
adc
cmp
addr16
add
in
mov
mov
fs
ret
pop
sti
rcrl
in
inc
mov
xchg
mov
xor
adc
imul
out
es
adc
or
xchg
xchg
mov
popa
jbe
fs
iret
push
into
and
cmpl
inc
dec
sub
pop
lods
sbb
sub
mov
cmp
ret
dec
and
repnz
pop
dec
xchg
xor
xor
test
push
orl
rorb
push
fs
fnstcw
scas
out
cmp
mov
cwtl
cmp
fsqrt
enter
sub
ljmp
int
lcall
sub
xchg
mov
xchg
mov
test
sti
mov
push
pushf
in
fsubrp
nop
add
cmp
xchg
and
and
in
enter
mov
std
orb
inc
dec
mov
inc
ret
sti
fldl
dec
aas
jp
dec
sti
sarb
pop
xchg
movsl
add
sarb
jp
leave
add
and
sub
lahf
dec
and
test
dec
cmp
in
lret
mov
rcl
lret
or
mov
sbb
sbb
jmp
xor
in
sbb
sahf
cmpsl
mov
and
roll
mov
pop
nop
fs
push
add
jbe
and
and
mov
adc
cld
int3
mov
jmp
mull
in
sbb
fsubl
call
push
cli
push
push
inc
mov
xchg
ljmp
lock
inc
mov
dec
jns
lods
loop
and
nopl
sbb
cmp
mov
mov
in
dec
cwtl
inc
pop
and
sarb
sbb
loop
cmp
leave
mov
pop
out
icebp
mov
or
xchg
mov
loop
cmc
and
lea
xchg
lods
fnstcw
pusha
sub
push
xor
das
loopne
xor
add
lds
inc
sarl
and
test
shrl
pop
lock
adc
aam
push
ds
mov
add
xorb
out
test
cmpsl
jns
shl
inc
jae
lea
or
inc
mov
xchg
add
add
jns
dec
jns
jmp
add
inc
add
or
int
fadd
rcr
sub
lcall
scas
push
jmp
lret
les
mov
cwtl
and
jo
fucom
push
in
cmp
mov
mov
rolb
push
cs
push
leave
mov
jo
push
push
ret
repnz
arpl
movsl
jnp
add
push
loop
ror
adc
pop
and
push
inc
lock
pop
pop
dec
pop
test
stos
movsl
sarl
mov
xor
adc
leave
xlat
out
push
jp
sub
test
sub
lret
jae
dec
cli
ds
dec
push
stos
sub
daa
dec
fmull
cmp
mov
les
les
and
andb
inc
pusha
inc
and
inc
adc
mov
sub
pop
and
jno
pop
dec
fisubrs
repz
adc
and
rorl
cwtl
jne
test
pop
push
cld
dec
mov
pop
and
popa
push
sub
mov
mov
push
sahf
xchg
ljmp
leave
loopne
pop
or
xor
insb
adc
repnz
rcll
or
cs
xor
addr16
loopne
adcl
emms
ret
mov
leave
outsl
add
inc
pop
ljmp
int
mov
push
push
int3
xchg
hlt
inc
aam
scas
push
fs
fldt
mov
fdivs
mov
jae
pop
or
ficompl
jne
in
or
punpcklwd
ja
xchg
cmpsb
xlat
mov
leave
dec
dec
xor
loopne
sahf
dec
mov
cmp
dec
clc
cmpsl
or
dec
loopne
cld
cmp
jmp
fstl
adc
ljmp
push
popa
aaa
shrb
shll
out
daa
ljmp
repnz
xchg
inc
mov
popa
inc
cmp
sbb
fidivs
inc
jle
inc
hlt
repz
ret
mov
xor
inc
loopne
andb
addb
push
xor
add
ds
out
add
xor
cltd
cwtl
jmp
loopne
sub
cmpsl
fmull
adc
ds
sbb
cmc
sbb
sar
rorl
push
adc
or
add
mov
aam
int
leave
mov
imul
pushf
arpl
out
mov
xor
jmp
inc
dec
out
jmp
mul
inc
add
pop
int3
lods
mov
add
mov
add
test
or
leave
mov
pop
add
pop
nop
pop
inc
mov
adc
xor
xor
jg
cmpsb
push
push
jmp
enter
cmc
lods
out
xor
xorl
sub
in
jae
enter
xchg
and
xor
gs
jecxz
xor
mov
ja
mov
jmp
lods
mov
push
out
cmc
ljmp
jmp
mov
mov
pusha
push
fnstcw
jb
leave
inc
mull
lret
add
mov
push
sub
ud1
jb
in
xor
add
daa
xchg
pusha
sub
mov
loop
sar
mov
dec
push
push
sbb
sub
iret
lcall
rolb
mov
popf
and
pop
push
je
jbe
xchg
insl
adc
out
push
lret
mov
ret
cmpsb
cmc
mov
push
or
or
cmp
push
cmp
in
mov
mov
mov
inc
adc
je
pop
push
movsb
notb
pusha
popa
pushf
push
mov
test
repz
xor
push
insb
and
arpl
mov
out
cmp
pop
mov
inc
pop
mov
fnsave
arpl
stos
loope
jns
push
xchg
sub
fucomip
sbb
std
stos
loope
mov
dec
pop
push
pop
popa
out
and
push
lock
fcompl
shll
inc
and
into
xor
adc
jae
mov
jo
sbb
ja
dec
loop
xor
mov
outsb
jmp
out
enter
std
fimuls
lds
fwait
into
fwait
mov
mov
jnp
imul
jae
mov
cmc
loope
sti
test
pop
adc
xchg
int
or
call
enter
lods
xor
mov
pop
push
cmp
stos
lods
inc
in
sub
inc
dec
dec
jno
push
cmp
lret
cmc
cmp
push
xchg
and
sub
and
lods
gs
mov
push
add
xchg
xchg
mov
pop
aas
aam
pop
enter
in
mov
jge
dec
mov
lock
adc
push
mov
out
scas
ss
cmc
mov
fstpl
lods
add
and
pop
push
in
dec
cli
push
sub
dec
and
mulb
leave
adc
adc
rcrl
addb
ss
ja
inc
mov
int
push
cmp
call
mov
add
push
lret
push
arpl
dec
ret
inc
or
popf
insb
push
mov
popf
incb
xchg
xor
mov
adc
or
ss
imul
push
shlb
and
sahf
dec
pop
push
pop
icebp
popa
inc
adc
mov
lds
ja
stc
mov
out
mov
jp
mov
jg
ret
aad
or
adc
inc
pop
pushf
mov
dec
add
stos
push
shl
lods
hlt
mov
into
inc
and
sub
movsl
dec
stc
out
in
push
xchg
or
jl
mov
sbb
movsb
mov
push
jmp
xlat
pushf
aaa
and
mov
add
sbb
cmpsl
sub
loop
mov
popa
xlat
sbb
cmp
aam
and
lcall
in
jae
inc
cs
and
clc
inc
imul
cli
sub
mov
mov
or
addr16
mov
aad
imul
jmp
test
jns
idivb
out
cli
xchg
movb
add
mov
hlt
pusha
fcoms
jmp
cmp
daa
mov
arpl
sub
clc
and
dec
gs
testb
fucomp
sbb
mov
add
lcall
mov
sbb
pop
icebp
add
add
cmc
rorl
add
pop
fsubrs
nop
rorb
ljmp
or
cmp
test
or
shlb
mov
push
adc
loopne
stos
rcrl
aam
cmpsb
xlat
imul
icebp
stc
push
sub
mov
gs
out
lds
outsb
testl
movsb
mov
in
outsb
or
movsb
insb
leave
addr16
dec
sbb
lahf
in
outsl
iret
enter
push
xor
fisttps
andb
ret
cmp
xor
adcl
arpl
cmpsb
lods
ljmp
adc
cmp
mov
leave
xchg
fsubl
test
xchg
incl
clc
pop
pop
inc
pop
cld
inc
pusha
pop
sti
mov
pop
data16
xchg
jbe
nop
jle
pop
mov
xor
in
adc
jmp
rcll
test
aaa
lods
insl
outsl
bound
xchg
lret
inc
int3
cmp
push
inc
sbb
xchg
ficomps
inc
ret
add
daa
ss
push
test
int3
sub
mov
jbe
and
jno
dec
aaa
and
lcall
dec
icebp
mov
xor
xor
mov
stos
mov
sub
or
and
bound
ret
loop
pop
mov
fildl
cli
xor
std
cmp
push
outsb
xor
jmp
mov
pop
or
jno
pop
sahf
in
xor
rol
rcl
pop
inc
scas
jle
je
push
cmp
and
addl
jno
ds
ja
add
push
lea
xor
outsl
int3
mov
dec
and
lret
xor
push
in
lea
fidivrs
idiv
paddusb
mov
sbb
add
inc
jge
stc
leave
xor
jbe
dec
shlb
push
lea
les
mov
decl
pop
xor
xor
add
sub
inc
jmp
cs
in
sar
ljmp
lret
outsb
inc
push
mov
mov
pop
mov
test
push
xchg
push
jo
lods
sub
or
in
roll
stos
sub
mov
sbb
xor
scas
mov
out
addr16
add
xchg
mov
push
cs
pop
dec
add
xlat
and
imul
es
stos
iret
adc
shlb
enter
pop
mov
inc
cs
and
insl
jno
cmp
mov
stos
push
les
leave
xor
pusha
or
cltd
pop
sub
add
adc
sub
add
pop
stos
mov
repz
inc
incb
push
loope
ds
cli
adc
mov
xor
jmp
add
jb
daa
cmpsb
addb
mov
mov
cmp
mov
jb
lret
and
movsl
push
lret
xor
sbb
sub
and
sub
shrl
das
jmp
push
add
in
push
sub
in
sub
xor
pop
aam
push
clc
jmp
imul
xor
pop
mov
mov
sbb
sbbl
lods
sahf
pushf
dec
add
pop
int
test
loop
shl
or
and
pop
ficoml
rorb
push
add
and
adc
fisubrs
lods
jno
pop
mov
mov
sub
popf
cmp
xlat
cmp
xor
and
cmp
aas
loope
push
push
jnp
mov
cs
sub
push
imull
test
mov
test
and
cmp
in
xchg
push
dec
lock
sti
ljmp
addr16
inc
push
dec
movsb
pop
fwait
popf
push
jle
mov
negb
movsb
mov
aad
sub
sub
popa
inc
cmp
dec
ror
cmp
mov
insb
add
jp
dec
mov
lock
add
push
cmp
mov
out
inc
js
addb
into
mov
and
aad
flds
aam
arpl
push
cmp
cmp
cmp
fs
xchg
cmp
xchg
aas
push
adc
lcall
stos
cwtl
xchg
leave
mov
inc
push
mov
test
fcmovnb
icebp
mov
mov
or
in
add
ret
jecxz
pop
fyl2x
or
push
xchg
jecxz
fwait
sub
shr
sub
aas
outsl
mov
fbstp
cli
pop
mov
mov
out
and
aam
or
lea
mov
roll
pop
fildll
cld
cmpsb
icebp
dec
mov
insb
inc
push
adc
sti
and
mov
mov
hlt
cld
in
lahf
xlat
mov
lock
xlat
sbb
push
fsub
inc
std
push
insl
inc
xchg
mov
jge
dec
mov
adc
ret
dec
mov
mov
push
leave
fsubs
filds
mov
jg
call
or
stc
stos
repnz
inc
fwait
sbb
sbb
and
mov
xor
sub
mov
lret
arpl
fwait
not
mov
iret
mov
sti
mov
addr16
nop
inc
jnp
adc
xchg
sbb
cld
nop
bnd
int
ficompl
adc
fistps
in
sbb
test
jl
mov
jle
fsub
xchg
push
lds
das
arpl
mov
lods
dec
dec
jl
es
sub
sahf
jmp
mov
mov
xor
mov
pop
jl
jmp
dec
rclb
mov
movsl
jl
push
cli
mov
movsb
jmp
outsl
and
xor
add
lret
cld
out
bound
dec
push
ror
push
aas
sbb
insl
nop
outsb
shlb
sub
mov
ds
xchg
mov
bound
push
mov
xor
jmp
xor
loopne
dec
lods
rorb
mov
push
push
subl
pop
adc
inc
mov
xlat
add
xor
bswap
push
pop
sbbb
mov
mov
dec
std
push
repz
sbb
and
dec
inc
add
inc
cmpsl
ret
cmp
xor
rorb
leave
mov
enter
out
idiv
push
aad
push
sahf
dec
aaa
dec
nop
adc
jno
ss
adc
fdivl
lods
mov
sub
pushf
push
imul
and
mulb
daa
mov
push
pushf
inc
push
sub
aad
add
pushf
cmp
xchg
or
push
xlat
je
pop
rcr
xor
xor
jmp
addb
hlt
jnp
mov
xor
jns
in
mov
adc
mov
add
jb
and
jnp
imul
pop
les
sahf
int
arpl
jns
push
int3
fwait
das
fdivr
test
out
lea
js
xor
push
loopne
mov
pop
lea
sbb
les
bound
cwtl
arpl
mov
xor
mov
and
sub
scas
sub
lock
rcll
jno
ljmp
mov
sub
xor
adcb
jmp
daa
inc
sbb
pop
lret
xor
lret
push
lds
inc
out
fs
in
inc
je
cmp
mov
sti
bound
lods
imul
je
pusha
or
xor
xchg
pop
out
sub
sbb
inc
sbb
or
mov
shl
pop
fisubs
out
mov
mov
fstpt
jbe
lcall
cmpl
pop
sbb
lock
push
adc
pop
ret
shl
aaa
pusha
sbb
and
in
fwait
mov
hlt
mov
les
orl
add
ret
pop
mov
cmpsl
dec
push
fidivs
outsl
ds
jecxz
fadd
loope
sub
test
enter
xchg
xchg
stos
xor
adc
scas
xchg
lcall
jo
or
icebp
cmp
loop
adc
es
mov
fnstsw
imul
cmpb
test
pop
in
in
int
push
lcall
dec
movsb
add
fnsave
cld
rorl
div
gs
or
into
and
scas
cmp
jmp
mov
push
pop
jl
push
imul
or
cli
subl
jl
or
hlt
xchg
xchg
test
lcall
lds
aas
pop
fildll
mov
je
iret
adc
mov
xchg
jb
adc
add
sbbb
or
dec
inc
outsl
push
sbb
lds
xchg
push
mov
sbb
fdivr
mov
xor
test
fmull
inc
or
mov
into
adc
pop
outsb
xor
lret
xor
fildl
aaa
int
xor
inc
insl
push
xchg
xchg
mov
push
test
cmp
xchg
jecxz
das
adc
push
and
sbb
cmp
pop
lea
mov
shl
and
dec
push
mov
jae
lods
xor
pop
cmp
idivl
into
inc
xor
mov
loopne
sbb
fnstcw
bound
xor
mov
aas
dec
xlat
lret
shrl
xor
cld
pusha
popa
xlat
or
fs
jmp
jb
xorb
push
mov
mov
inc
dec
mov
xchg
inc
inc
inc
xchg
sbb
int3
xor
pop
sahf
or
lods
imull
or
aas
cmp
incl
pop
xchg
enter
push
and
xchg
mov
pusha
mov
lcall
loope
loop
rcrb
dec
mov
icebp
xchg
sar
cmc
adc
jl
lret
repz
mov
repz
aam
test
sahf
push
push
lods
jno
push
stc
sub
fucomip
jne
sub
push
jge
adc
cmp
out
mov
mov
imul
adc
in
mov
nop
in
xchg
inc
mov
repnz
ss
orb
fidivl
and
mov
jecxz
xchg
jo
add
cmp
add
in
scas
xchg
jbe
push
adc
or
test
stos
ja
mov
es
mov
xchg
cwtl
or
test
shlb
fldl
push
pop
adc
fdiv
xor
sar
push
adc
xchg
dec
xor
lret
sbb
and
sbb
xlat
inc
inc
and
mov
lds
xor
popa
mov
mov
sbb
icebp
xor
and
xchg
data16
cli
push
push
xor
mov
pop
xchg
push
flds
std
shl
outsl
iret
test
jl
loop,pn
sub
pushf
adc
fucomip
jbe
cmp
adc
adc
ss
imul
and
adc
pop
cli
cmpsb
dec
faddl
push
pop
xchg
inc
or
mov
pop
sub
outsl
adc
add
cs
and
lea
xchg
sub
xchg
movsl
inc
mov
push
dec
enter
inc
pop
jp
cltd
sbb
push
movsl
cltd
fwait
push
imul
xor
adc
dec
arpl
gs
mov
mov
jno
aam
fwait
inc
ret
cmc
xor
hlt
pushf
imul
dec
jle
incb
sbb
xor
rclb
imul
gs
repnz
xor
cld
add
dec
sub
mov
adc
jns
outsl
std
and
out
insb
lcall
dec
fnsave
jns
icebp
xor
scas
adc
lods
or
test
lea
mov
jae
mov
lock
out
mov
inc
or
lahf
ficomps
sub
cmpsl
loopne
push
or
loopne
or
fldenv
pusha
fstps
sbb
lock
sbb
mov
loope
and
cmpsl
cmp
pusha
dec
test
mov
int
lahf
push
and
ret
rorl
cmp
lcall
xor
push
aas
repz
movsb
fwait
inc
shl
arpl
scas
out
subb
jne
mov
dec
push
push
or
dec
mul
push
dec
push
mov
jnp
jnp
add
jae
out
nop
inc
jae
sahf
pop
ret
push
repnz
or
sbbb
lds
sbb
dec
cmp
fstpl
mov
in
cmpsl
notb
mov
jecxz
mov
cmpsl
loop
mov
push
pop
push
jne
adc
in
cmpl
into
ss
mov
outsl
inc
outsb
pop
fcos
mov
scas
pop
subl
inc
mov
cmp
mov
or
fistps
fbld
mov
dec
jbe
mov
add
push
sub
mov
ljmp
in
xor
rcrb
sarl
sti
sti
and
out
ja
cmpsb
sbb
jle
iret
jecxz
cmp
inc
mov
jo
bound
arpl
sbb
sub
push
ss
ficomps
push
xchg
das
test
or
lods
adc
movsl
xor
outsb
jbe
lods
push
ret
and
fisttpll
orb
hlt
cwtl
xor
push
int3
imul
out
or
sti
imull
mov
mov
fbstp
popa
icebp
xor
push
inc
add
jbe
cmp
addr16
pop
push
pop
ljmp
ret
stos
les
and
xchg
lret
aas
mov
xchg
add
mov
pop
sbbl
mov
jns
ret
sub
cs
cld
cli
les
or
call
adc
repnz
repz
lahf
sub
fcomps
jmp
mov
sbb
bound
jg
cmp
adc
gs
lcall
aam
cmp
nop
mov
mov
in
xchg
inc
mov
xchg
xchg
or
xlat
inc
xchg
rorl
xchg
out
pop
mov
sub
jo
insl
andl
dec
mov
lret
ret
inc
sub
cltd
test
cmp
add
fisubrs
push
jl
push
dec
pop
push
imul
stos
dec
push
xor
mov
jbe
pop
dec
pop
out
ret
pop
fldenv
push
dec
rclb
in
jns
and
int
rorl
subb
std
xorl
repz
inc
jge
repnz
xor
xorb
xor
les
nop
jbe
xor
fwait
pop
lea
lock
cli
xchg
add
sbb
gs
iret
mov
stos
jo
jb
test
push
das
mov
cmp
mov
mov
scas
push
in
xchg
loopne
ja
rep
enter
outsb
bound
pop
mov
pop
pop
ljmp
xchg
inc
pop
lock
aam
mov
cmp
push
cltd
stos
test
and
lahf
xchg
and
jae
jp
inc
fnstenv
xor
arpl
repnz
shr
xchg
repnz
dec
lret
inc
adc
popa
xchg
inc
sbb
push
lods
mov
insl
pushf
mov
xor
push
test
outsl
sub
rcll
jo
jb
inc
fsubrs
and
xor
mov
loopne
add
xchg
nop
fwait
push
addr16
or
test
aas
shrb
ss
and
in
fdivrl
push
jno
in
jecxz
add
dec
popa
repz
xchg
repnz
arpl
jns
jl
jae
mov
and
or
ja
stc
jb
sub
data16
add
jnp
mov
bswap
mov
push
pop
and
call
jbe
out
mov
jns
pop
jl
pop
cld
das
adc
fwait
mov
add
int
mov
bound
and
and
mov
pop
push
test
xor
pusha
cmpsl
es
fmul
movsl
xchg
or
pushf
dec
fsubr
inc
mov
xchg
loope
jno
gs
fdivrl
int3
lods
mov
jmp
pop
and
inc
add
imul
inc
jl
insb
xchg
sub
push
fisttpll
and
jg
jno
push
mov
lock
and
test
ss
and
mov
adc
adcl
xor
mov
insb
insb
and
mov
mov
mov
jns
fsubrs
or
test
jecxz
scas
add
pop
sub
jge
stc
rorb
or
push
mov
lods
adcb
jbe
cmpl
and
outsb
adc
outsb
fcmovne
dec
scas
add
or
sub
or
dec
enter
lea
les
je
pop
les
xchg
mov
ss
cmp
mov
movsb
pushf
subb
mov
je
je
cltd
shll
int
mov
push
out
leave
jnp
call
sub
insb
push
addb
scas
inc
dec
or
cmp
test
imul
pop
popf
xorl
shrl
sbb
mov
js
cld
cmp
ficoml
bound
add
push
ja
shll
inc
js
xor
mov
push
add
loope
push
lcall
xor
sti
popf
test
mov
les
enter
fcompl
push
push
and
mov
lds
push
jno
pop
fnstcw
mov
jns
dec
frstor
and
sub
sbbb
imul
cmpsb
mov
inc
bsf
adc
add
insl
sahf
push
sbb
jmp
loope
ljmp
xchg
pop
pop
shrl
xchg
jp
cmpsb
or
dec
cli
mov
lods
mov
popa
insb
lods
mov
cltd
lods
add
mov
pop
push
xlat
cld
push
mov
daa
jbe
outsb
sbb
decl
pusha
test
cs
loope
inc
mov
bswap
and
add
cmc
or
scas
aam
stc
sbb
pusha
adc
xchg
and
xor
insl
adc
xchg
mov
xchg
push
sti
lea
daa
icebp
dec
mov
ficompl
push
pop
add
xor
adc
mov
mov
les
jg
or
sbb
lods
ja
mov
mov
pop
and
mov
sbb
push
sub
cmp
pushf
mov
add
sub
xchg
mov
jge
test
fisttpll
fmul
test
gs
mov
xor
rcrb
sub
adc
jle
outsl
dec
rcrb
jmp
dec
inc
xor
and
popa
call
lea
sbb
shll
xor
jbe
cmp
mov
insl
ljmp
and
mov
popf
imull
pop
adcl
and
xabort
int3
cmp
std
pop
sub
pop
sbb
push
xor
insb
inc
mov
inc
sub
ds
shll
jmp
ja
hlt
adc
ret
orl
or
iret
bound
mov
call
test
push
mov
xlat
xor
fistps
das
pushf
call
and
push
and
sub
aad
mov
add
xor
es
push
jnp
test
gs
jno
pop
call
or
lret
loope
mov
dec
out
mov
push
and
dec
jl
jo
movsl
mov
cmp
add
in
dec
cmp
test
rcl
xor
and
popf
scas
repnz
fcomi
inc
icebp
push
or
scas
int3
std
imul
sbb
incl
rcll
cs
and
mov
jnp
pop
stc
push
sbb
stos
loopne
outsb
push
cmp
ja
and
mov
xor
jb
iret
xchg
and
sbb
lret
arpl
add
dec
xchg
xor
mov
or
repz
mov
rcrb
pusha
mov
sub
loop
or
push
cmpsb
mov
add
jecxz
dec
inc
mov
jle
mov
push
pop
rcrl
xor
mov
jmp
test
insl
fwait
inc
in
cmp
mov
xchg
dec
fldt
aad
adc
add
mov
int3
insb
sbb
or
or
sbb
cmp
ds
rcl
iret
sti
leave
inc
sub
out
arpl
or
cwtl
addr16
test
rclb
daa
je
jnp
arpl
dec
adc
and
cmp
sub
add
cmp
xchg
call
ret
shl
insb
mov
inc
fidivs
cmp
out
jbe
loopne
repz
pop
jg
xchg
push
cmpsl
or
out
repnz
pop
shlb
pop
xor
dec
cmp
sbb
jge
inc
rcr
pop
jecxz
idivb
sub
in
ss
add
push
dec
jp
sub
cmp
in
or
push
mov
push
adc
cmp
dec
jns
mov
mov
push
add
pop
fs
insb
in
xchg
mov
cmp
cmpsl
adc
inc
cmp
clc
adc
lock
pop
int3
insb
sahf
push
mov
xor
dec
inc
je
les
pop
xlat
sub
stos
repnz
fisubs
pusha
popa
fnstenv
add
stc
fdivrl
nop
pop
and
mov
pop
cli
testb
loope
jmp
cmp
nop
jle
popf
jle
rcrl
xchg
jbe
loope
popf
sub
mov
sub
data16
loop
pop
inc
adc
xor
ss
push
dec
jecxz
sar
mov
popf
xchg
mov
aam
push
or
mov
jle
pusha
push
out
outsb
sub
jecxz
push
les
loop
or
xlat
test
fwait
push
add
jns
int3
mov
xchg
dec
in
pop
ret
pop
rcll
sahf
repnz
add
push
adc
xchg
jae
out
ja
in
insl
fdivs
nop
mov
leave
or
divl
int
popf
sbb
cmpsb
dec
sub
jae
aad
mov
or
jmp
add
adc
jbe
add
sti
outsb
jb
xchg
dec
movsb
inc
outsb
lcall
in
push
clc
adc
int3
jb
outsb
adc
daa
pop
jge
inc
lret
jno
daa
xchg
imul
sti
movsb
aad
adc
lea
iret
mov
inc
roll
pop
inc
mov
mov
pop
addr16
push
shlb
repnz
ret
jno
xor
mov
xchg
sahf
ljmp
daa
stos
inc
or
sbb
add
jecxz
repnz
sbb
pusha
sbb
add
movsb
in
mov
xor
inc
imul
into
jo
je
mov
or
movsl
leave
ljmp
add
mov
and
fs
js
arpl
bound
js
repz
imul
inc
xchg
pop
rol
inc
ss
int3
cmp
cmp
push
pop
js
popf
icebp
xchg
mov
inc
and
lahf
jg
jmp
cltd
fstl
mov
cmc
sti
rclb
xorl
jle
dec
add
lahf
lret
ret
mov
sbb
sub
sub
je
loop
jns
out
mov
cmp
fildll
jg
mov
enter
stos
pop
push
out
test
adc
inc
pop
push
dec
ljmp
pop
insl
dec
mov
jge
xchg
xchg
das
pop
sbb
xchg
push
cmp
mov
mov
inc
xchg
inc
mov
nop
xchg
xchg
cltd
cmpb
test
cmp
push
pop
sub
dec
movsl
sbb
add
sbb
and
jb
test
sbb
push
test
fwait
xor
popf
pop
popa
jo
and
inc
mov
or
adc
jmp
inc
xchg
in
cmpsl
shl
pushf
ljmp
mov
movsl
jno
repz
and
ror
add
sbb
xchg
out
fbstp
insb
jecxz
fidivrs
add
jo
or
iret
cwtl
test
xchg
add
pop
mov
jmp
pop
iret
or
or
cli
inc
and
mov
add
mov
pushf
cli
aam
pop
test
lods
ja
cmp
xchg
mov
aam
mov
jle
adc
cmp
add
push
and
ud1
mov
loope
in
xchg
out
sahf
bswap
push
mov
dec
jnp
add
sub
mov
mov
xchg
fidivl
stos
mov
and
lea
int3
jge
ficoms
stos
cmc
movsl
xorb
mov
call
cmp
stos
sub
arpl
aam
clc
mov
repnz
inc
push
fwait
inc
dec
lods
mov
je
add
xchg
jnp
dec
ret
mov
and
mov
leave
jo
arpl
xchg
dec
aam
stos
xchg
jbe
out
pop
cmp
xchg
mov
mov
imul
lcall
and
jmp
fwait
sbb
in
cmp
xchg
add
aam
leave
or
daa
push
sub
in
enter
add
out
std
dec
fsubrp
shll
add
sub
adc
push
xlat
or
lahf
adc
cmp
pushw
insl
into
cltd
cs
cmp
or
dec
dec
xchg
test
mov
rolb
mov
jmp
sahf
cmp
cmc
subl
sbb
dec
testl
cwtl
mov
icebp
aas
sub
lahf
jbe
jbe
adc
lahf
xor
cmp
add
fsubs
jno
pop
test
clc
icebp
push
data16
bound
or
cmp
adc
dec
repz
inc
aam
or
sub
xchg
push
lcall
mov
jb
incl
or
jne
pop
dec
fwait
xchg
subb
mov
ret
fisubl
les
pop
xchg
and
je
int3
mov
leave
and
push
sbb
lds
popa
dec
insb
xor
jg
xchg
stc
mov
or
repnz
jns
pop
inc
ljmp
mov
movl
insb
inc
mov
mov
add
adc
sbb
dec
xchg
insl
jg
movsb
addl
add
pop
inc
pusha
call
lea
negl
lock
in
sbb
jbe
push
iret
leave
mov
test
iret
sbb
inc
idivl
jmp
sub
jns
ret
fstpl
add
dec
lds
dec
pusha
test
mov
dec
popf
in
pop
and
jmp
outsl
sub
cmpsb
in
fmul
cmp
pop
mov
test
gs
shl
push
or
jb
scas
or
jmp
icebp
test
imul
jmp
sbb
xlat
and
je
push
dec
mov
out
cmp
int
pop
xor
test
jmp
dec
mov
fstl
negb
pushf
push
inc
popf
movsb
loope
lahf
lahf
mov
inc
into
sar
ljmp
and
dec
lds
inc
pop
into
pop
push
mov
jne
lds
scas
out
cmp
push
push
xor
fstpt
stos
and
loopne
jecxz
call
lcall
inc
rol
je
mov
adc
cmp
pushf
cli
jns
mov
xor
mov
dec
sub
jbe
addr16
repnz
daa
loopne
push
test
mov
test
and
xchg
jmp
les
aaa
mov
jbe
adc
mov
pushf
popf
in
xor
xor
sti
cmpl
bound
pushf
rcrl
lcall
jge
rclb
inc
push
lea
push
repz
insb
jge
push
lock
xor
mov
in
aaa
bound
mov
das
push
js
add
jge
sbb
push
pop
mov
std
pushf
inc
loope
ret
pushf
ret
in
adc
mov
mov
mov
aaa
repnz
or
aas
pop
mov
jo
lret
into
pop
inc
mov
mov
and
popf
lea
or
jmp
in
cmp
scas
aaa
pusha
and
mov
mov
pop
sub
inc
sub
rcrl
out
cmpsl
pop
loop
rcl
sbb
add
mov
js
in
shl
fsts
out
out
and
add
pop
pop
gs
fsubr
mov
leave
in
lods
pusha
mov
out
pop
adc
enter
mov
mov
dec
popf
add
adc
push
int
inc
cltd
ret
stc
add
jle
addb
cmc
ljmp
push
out
mov
jbe
iret
dec
scas
popa
subb
or
mov
sub
jecxz
and
push
iret
shlb
xor
dec
and
xorb
imulb
lcall
mov
stos
ljmp
cmc
push
add
cmp
mov
add
scas
test
push
repnz
int
out
or
push
movsb
dec
xlat
mov
jbe
adc
dec
movsb
bound
ds
out
or
iret
push
insb
xchg
add
out
cmp
fdivrs
or
lcall
into
mov
jns
sub
ljmp
outsl
in
stos
dec
mov
push
pop
xchg
xor
pop
ret
enter
aaa
xchg
or
pop
lcall
mov
ljmp
sbb
push
lret
lcall
imul
and
push
ret
test
mov
aaa
movsl
rclb
sub
inc
mov
scas
mov
adc
scas
aaa
out
fiadds
jno
fstl
pop
xor
add
out
lahf
mov
pop
loopne
movsl
das
lods
sbb
idivb
imul
jnp
xchg
jmp
test
dec
aad
cmpsl
in
orb
sarb
mov
xor
or
les
faddl
iret
pop
cltd
sbb
cmp
fmuls
repnz
divl
push
testl
aam
pop
sbb
cmp
dec
inc
ret
nop
jmp
cmp
pop
and
insl
test
ljmp
insl
mov
mov
test
jo
das
test
in
mov
lret
mov
push
xchg
decl
ja
pop
pop
mov
std
loopne
out
js
xchg
add
jg
inc
push
test
push
add
push
sub
popa
das
lods
sti
sbb
int
xchg
push
cs
aam
ljmp
cwtl
mov
loope
psubb
mov
push
fdivrs
je
mov
xchg
ja
fs
jecxz
daa
xorl
xchg
test
fcmovnb
mov
iret
gs
mov
inc
sbb
popa
ret
inc
inc
xorl
push
mov
mov
lret
dec
jp
ss
int3
scas
shl
lret
cmc
xchg
jl
dec
ss
cli
enter
xchg
push
sbb
dec
jno
xchg
sbb
xor
pop
inc
pushf
pushf
clc
test
inc
dec
xchg
pop
add
loopne
sti
xor
pop
inc
call
and
dec
mov
orb
pop
dec
mov
add
out
and
ficoms
push
into
inc
rolb
das
insb
mov
mov
les
fsubrp
stos
scas
dec
jae
das
out
outsl
aaa
ds
sarl
divb
sbb
push
sub
pop
pushf
sbb
jb
jecxz
not
dec
lods
push
sub
jae
aas
sub
mov
out
xlat
cmp
push
mov
lea
pop
xor
push
mov
pop
lret
pop
jno
das
adc
dec
or
aam
xlat
inc
shr
add
mov
popa
insb
sar
test
pop
js
pop
cmpsb
mov
xchg
or
cmp
inc
pop
mov
inc
mov
fildll
adc
pop
adc
imul
inc
js
push
ficoms
aaa
es
mov
jl
hlt
dec
pop
je
or
xchg
xor
clc
test
ficomps
ss
stos
bound
or
imul
xchg
xchg
fwait
aad
push
adc
cmc
cmpsl
iret
fmuls
inc
pop
pop
test
mov
imul
loopne
pop
inc
push
xacquire
aas
adc
lods
test
jg
xor
jno
cmp
mov
cltd
hlt
dec
push
outsb
mov
push
cwtl
and
std
jbe
and
daa
push
push
mov
das
stos
xor
dec
loope
adc
cmpsl
cmp
ret
xor
sahf
mov
nop
push
jp
dec
pop
jmp
ficoms
or
andb
cltd
lock
movsl
ret
nop
mov
mov
int
ficoms
mov
jnp
sub
sub
repnz
sbb
aaa
outsl
adc
stos
jge
cmp
push
subl
jbe
popa
pop
test
ljmp
fildll
ss
sub
rclb
mov
pop
sub
rorb
mov
stc
sti
xor
inc
fdivs
sub
rclb
mov
cmpsb
in
pop
mov
mov
lcall
mov
pop
lock
jb
jbe
cmp
mov
or
mov
push
adc
je
shrl
test
jo
int3
lea
test
xchg
sbb
pop
sti
fstpt
xor
jge
jmp
stos
int3
jbe
subb
cmp
sbb
inc
jb
xlat
jge
fdivrl
mov
mov
xchg
lods
sbb
mov
mov
shl
clc
jecxz
out
fistpll
nop
frstor
push
out
pop
or
jecxz
fimuls
and
pusha
cmp
lcall
jbe
lea
into
out
call
bound
pop
xor
dec
insl
in
jnp
mov
out
sbb
mov
insb
imull
jecxz
mov
mov
mov
and
adcb
dec
pop
lods
dec
fisttpll
dec
fmuls
outsb
pop
orl
ret
hlt
push
in
scas
bound
pushf
and
lea
iret
dec
scas
scas
arpl
loopne
jb
sahf
mov
mov
xchg
dec
xchg
mov
lcall
mov
dec
dec
in
imul
ljmp
shlb
mov
dec
xor
or
sub
repz
gs
fwait
push
sahf
shlb
aaa
mov
dec
aas
arpl
das
xchg
jne
pop
fisubrs
or
and
dec
add
and
mov
sub
jb
scas
fnsave
dec
sub
lods
mov
lret
call
fmull
pop
and
fs
sbb
jns
mov
dec
ljmp
sub
push
imul
jae
test
add
lock
pop
inc
push
lea
lock
cmp
push
fcompl
lret
xchg
insl
or
lock
sub
test
adc
cmc
pop
test
push
mov
std
xchg
lds
jge
mov
jl
xlat
shlb
cs
ficomps
repnz
adc
xor
sub
sub
xchg
movsb
mov
adc
shll
in
sbb
adc
mov
data16
push
aad
mov
arpl
cmpsl
enter
ja
and
add
and
cmp
jnp
enter
or
jmp
cwtl
in
das
pop
pop
jge
mov
movsl
dec
das
mov
bound
jno
push
icebp
mov
cmp
sub
mov
sub
faddl
pop
mov
add
lods
push
dec
pop
out
sbb
or
into
lcall
movsb
pop
cmp
add
in
fisubrl
das
idivb
or
dec
loop
xchg
mov
jno
repnz
inc
mov
pop
andb
and
rclb
jle
repz
bound
mov
and
mov
jb
and
sti
lds
push
lahf
fnstsw
in
and
cld
adc
jns
add
add
inc
shrb
ss
xor
push
fwait
dec
jb
addr16
imul
cltd
adc
and
mov
dec
pop
enter
mov
xchg
lods
insl
lcall
add
xor
cld
cmpb
push
mov
sbb
popf
mov
rclb
ret
shrb
inc
std
ja
movsb
pop
orl
mov
lret
jo
ret
push
bound
adc
mov
pop
adc
rorb
pop
ljmp
daa
in
sbb
mov
mov
lret
loope
int3
adc
adc
fistps
dec
adc
push
mov
loope
mov
in
sbb
lahf
xchg
xchg
pop
leave
push
and
mov
push
xchg
cmp
ret
stc
push
bound
pop
sbb
sub
sub
cmpsl
mov
inc
xor
pop
paddusw
fnstenv
xor
test
xchg
cmp
adc
into
xchg
iret
sbb
insl
movsl
mov
fsubrl
jns
mov
or
cwtl
mov
jp
jl
rorb
xchg
or
dec
leave
adc
pop
ret
inc
mov
sbb
fucompp
pop
les
iret
aam
insl
and
movsb
jmp
push
mov
dec
mov
shl
arpl
addr16
ss
and
mov
sbb
dec
dec
cmp
inc
inc
movsl
sub
loopne
es
das
sub
mov
xchg
dec
scas
or
dec
mov
and
sbb
inc
mov
add
sbb
sti
cwtl
or
shlb
scas
jle
orl
hlt
mov
push
sbb
mov
dec
into
cli
popa
insb
idiv
enter
dec
jb
adcb
fstpl
sbb
pop
mov
pop
shll
fists
pop
pop
inc
mov
dec
loope
aas
jb
call
cwtl
mov
aaa
inc
cmpsb
jne
jns
jg
mov
push
cmpsb
ljmp
dec
pop
push
inc
fsts
stc
inc
rcl
sbbl
xor
xorb
pop
ss
pusha
in
adc
push
jg
cmp
dec
insl
stc
lock
dec
popf
outsl
popf
call
push
push
inc
xor
mov
sbb
and
or
rcl
xchg
outsb
arpl
sub
push
in
insl
mov
test
loopne
sub
lahf
roll
add
test
xor
std
and
push
xor
push
lcall
sete
or
test
push
popf
sbb
cmc
xlat
popf
mov
fildl
sarl
cmp
out
adc
inc
and
or
cmpl
jnp
in
lods
mov
out
adc
notl
add
mov
sbb
add
push
dec
add
gs
ret
dec
push
lds
imul
aam
xchg
adc
cmp
insb
add
cld
mov
inc
cmp
std
mov
outsl
mov
cmpsl
xor
mov
jg
sti
fsubr
or
push
cmc
jno
adc
aas
jecxz
aaa
dec
test
push
push
sub
imul
ljmp
adc
mov
rcrl
mov
popf
cli
pop
xlat
enter
mov
pop
scas
xchg
jne
mov
in
jb
hlt
insl
cmp
dec
sub
sbb
sbb
clc
lods
push
aas
mov
xchg
mov
fwait
mov
mov
inc
push
lea
cmpl
sahf
xor
jbe
pop
and
iret
fs
push
enter
mov
jl
mov
mov
jmp
xchg
popf
mov
push
adc
shll
jno
inc
movzwl
jno
loopne
orb
jns
cwtl
out
inc
imul
repnz
xor
std
jge
lock
push
pop
jbe
mov
repnz
es
imul
mov
push
loop
jnp
cltd
xlat
mov
jo
mov
addb
lds
sub
ja
je
sbb
pop
outsl
cmpsb
gs
push
inc
movsl
jo
push
mov
pushf
popf
xor
popf
dec
fsubr
or
icebp
xchg
and
push
mov
ja
iret
push
ret
pop
addr16
sarb
into
mov
xchg
jge
push
jecxz
rol
jg
in
mov
rorl
push
add
ret
out
inc
pop
push
mov
mov
mov
jmp
mov
dec
push
nop
lret
cmpsl
dec
xor
roll
xchg
mov
push
lods
decl
xchg
inc
outsb
imul
rorb
in
mov
gs
repz
xchg
jns
sti
pop
jle
clc
dec
shll
sbb
jne
fisubrl
inc
sbb
push
cltd
mov
ss
or
fisttpll
inc
jp
jmp
cld
mov
push
pop
lock
or
add
rorl
jg
adc
imul
jg
lods
scas
or
fistpl
stos
push
lods
cmp
ljmp
sub
sti
in
in
stc
xchg
mov
adc
xlat
cmpsl
mov
aas
outsl
test
in
xchg
dec
inc
fadds
push
and
push
jne
fistl
and
inc
icebp
pusha
fsub
mov
mov
jno
mov
adc
daa
pop
add
insl
movsb
cmovne
pop
push
add
and
xchg
mov
dec
sahf
pop
out
add
xor
jg
lods
push
gs
cmp
les
fs
lahf
les
in
dec
push
pop
call
inc
outsb
cmp
xchg
pop
je
into
stos
outsb
jbe
fmulp
sub
test
xchg
inc
clc
arpl
cld
add
repz
iret
push
pusha
fldt
and
mov
cmpsl
inc
lea
mov
push
stc
popa
cli
jmp
iret
inc
add
mov
ss
incl
adc
fadds
mov
aas
xchg
pop
sub
fwait
push
jbe
outsl
or
aad
shrl
in
ss
or
cmpsl
addr16
sbb
mov
stos
sub
jbe
and
push
test
das
or
and
or
pushf
aas
mov
cmp
inc
inc
sub
mov
loope
push
test
enter
inc
xchg
and
inc
enter
push
call
push
lea
aam
jg
xchg
xchg
inc
xchg
ror
mov
jo
shlb
dec
shrl
js
mov
cmp
lock
mov
cmp
fcmovnb
mov
add
loope
xor
test
xchg
aas
pusha
mov
mov
mov
mov
inc
pusha
mov
popf
fisubrl
ja
andl
lahf
push
scas
mov
xlat
adc
mov
hlt
inc
stc
jmp
rorl
in
mov
mov
or
and
sub
jne
mov
test
pop
fstpl
inc
and
clc
adc
outsb
jp
lods
jl
in
out
shr
or
sbb
outsb
sub
fadds
inc
add
mov
sbb
mov
iret
loope
stos
call
js
dec
push
push
inc
loopne
rcrb
das
push
shl
sub
mov
push
imul
mov
xor
fadds
lods
mov
cmp
stc
fcoms
dec
cmp
add
popf
sub
fsubrs
fidivs
dec
adc
in
out
and
jbe
aas
xchg
ret
cli
xlat
loopne
mov
clc
js
push
fdivl
xchg
pop
jmp
cmpsl
das
mov
push
arpl
add
adc
int
ret
loop
jne
test
and
decb
adc
ficompl
popf
pop
sub
jge
adc
lahf
mov
aaa
roll
ret
in
cmp
stos
stc
out
add
ja
mov
fimuls
jbe
push
or
inc
cmp
fadds
adcb
xor
incl
dec
test
xor
mov
mov
ja
mov
dec
jne
imul
dec
fcmovnbe
push
mov
and
out
sub
dec
add
mov
ret
and
in
fldcw
mov
cli
mov
ds
ret
je
imul
mov
pop
adc
mov
mov
mov
xchg
cmp
dec
out
adc
jbe
aas
sbb
mov
jle
mov
aas
xchg
xor
insb
outsb
insl
cltd
jne
mov
xor
xchg
dec
add
sub
add
push
shlb
std
shll
push
rorl
lds
xchg
mov
mov
inc
push
lock
and
mov
mov
shll
clc
jo
inc
cmp
cwtl
into
or
inc
les
fsubrs
mov
push
insl
dec
adc
mov
cmp
std
jg
pop
fdivl
jl
enter
lods
sbb
jg
outsb
inc
hlt
inc
mov
and
adc
jecxz
xchg
mov
popf
jo
inc
insb
jno
and
sbb
mov
pop
shlb
push
test
out
mov
jns
adc
cmp
inc
mov
mov
dec
cmc
gs
mov
mov
jp
and
fidivrl
ja
arpl
lahf
loop
insl
popf
stos
jge
pop
mov
xchg
pop
add
jle
add
std
push
or
dec
cs
popa
mov
and
shlb
add
or
imul
xor
pop
jae
xor
mov
ret
push
pop
cmp
or
xor
mov
cmpsb
clc
mov
cmp
cltd
inc
jns
hlt
sub
add
aad
imull
push
xor
pop
mov
dec
push
adc
cs
lea
popf
movsb
mov
xchg
dec
cmp
xor
mov
sbb
cmp
dec
cmpsb
movl
in
adc
xor
add
xchg
push
lea
mov
incb
sahf
nop
xchg
xchg
xor
nop
add
inc
mov
xor
mov
test
sbb
fcomps
lods
xchg
idivb
sub
pop
add
add
ss
mov
mov
pusha
lds
dec
fucom
mov
stos
out
ss
jae,pn
push
and
pop
rcrb
popf
cld
xchg
push
jl
fst
xor
and
outsl
mov
and
mov
insl
sub
or
adc
movsl
lods
cmpsl
icebp
dec
lock
test
out
incl
stos
sub
cmp
shlb
ja
pop
sbb
push
loop
lods
pushf
xchg
fistpl
or
jne
pop
xchg
inc
out
mov
inc
push
jmp
jecxz
test
jle
addl
and
xlat
insl
stos
pop
lcall
pop
mov
test
push
mov
xchg
mov
fisttps
rorl
xchg
aaa
dec
inc
das
lods
cmp
sbb
xchg
sbb
bound
adc
outsl
xchg
nop
adc
call
pcmpgtb
insb
ficomps
fcoms
push
pop
mov
pop
mov
pop
in
lret
ljmp
mov
das
pop
lods
add
adcb
cmp
cmp
add
hlt
stos
mov
fcmovnu
pop
mov
cltd
and
cmp
rcll
jg
xchg
into
out
cmpsb
pusha
ret
jb
mov
int
daa
imul
mov
test
scas
loopne
stc
inc
adc
push
test
mov
orl
and
pushf
push
popa
aaa
jns
dec
sahf
jge
push
jge
mov
sub
or
dec
inc
faddl
mov
imul
push
sahf
pop
xlat
jns
stc
pop
pop
ret
add
add
add
add
add
add
pusha
jp
sbb
cmp
fdivrl
mov
lds
loopne
jg
test
or
add
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
adc
addl
add
add
add
add
add
xor
add
sbb
add
jge
adc
add
add
xor
lret
mov
add
add
or
add
or
add
add
nop
add
add
inc
mov
add
add
mov
mov
fmuls
rolb
add
mov
push
add
frstor
add
add
add
bound
add
lret
xchg
int3
aas
mov
add
inc
add
add
jl
add
add
insb
jne
add
loop
add
add
idiv
push
and
and
jo
push
sbb
mov
adc
pop
dec
push
iret
jnp
cmp
andl
fwait
xor
subl
mov
dec
xchg
cmpb
lea
push
ret
adc
pushf
imul
stc
xchg
subl
sub
push
popa
push
insl
lret
lcall
push
and
outsl
negl
mov
insl
dec
dec
decb
dec
mov
rolb
xor
jno
cmpsl
loope
scas
mov
dec
xchg
test
jo
stos
xor
xchg
and
xchg
pop
out
dec
fwait
mov
cmp
lds
cld
sub
in
sti
cli
out
xor
pop
add
movsl
dec
and
dec
cmp
xchg
stc
add
enter
movsl
cwtl
test
and
xchg
int
mov
aam
adc
pop
xchg
jecxz
jg
rolb
inc
jp
dec
loopne
or
outsl
enter
mov
fwait
gs
test
ja
imul
xchg
jb
xor
lods
addr16
pop
xorb
xchg
int
insl
push
inc
push
in
sub
pop
sahf
xchg
and
fs
mov
hlt
into
push
ds
hlt
out
add
ss
xor
dec
sti
sbb
xchg
jmp
aas
sbb
cs
int3
call
jns
sub
cmp
xchg
mov
mov
pop
js
mov
push
int3
cmpsl
mov
xlat
jbe
out
inc
inc
mov
inc
insl
dec
jg
dec
inc
imul
int
fistl
mov
cmc
mov
add
add
xor
add
fdivrs
push
in
push
leave
add
sbb
lock
icebp
jnp
sbb
adc
lods
das
adc
jmp
dec
insb
mov
lcall
sahf
jg
or
les
pop
lcall
orl
sbb
das
mov
mov
add
dec
mov
inc
test
aaa
jo
addr16
fsubr
mov
arpl
scas
in
iret
cld
test
mov
xorb
negl
test
stos
call
loopne
mov
sbb
ja
bound
fs
data16
fstps
dec
outsl
and
movsb
rcll
pushf
inc
add
cltd
imul
nop
mov
mov
push
incb
sbb
dec
cmp
bound
cltd
sub
and
dec
repnz
shll
xlat
add
cltd
arpl
das
lods
out
insl
pop
fstl
fmull
test
pop
lret
imul
cmp
sbb
push
fbld
inc
fisttps
mov
jle
and
sahf
dec
popa
cmp
and
mov
push
imul
push
sub
fidivl
xchg
filds
rorl
jo
adc
inc
or
mov
repz
in
adc
clc
sbb
inc
inc
fcoml
dec
push
mov
push
iret
imul
in
mov
insl
dec
addr16
les
shlb
inc
aad
add
aad
int
dec
mov
mov
setne
sbb
sub
arpl
dec
iret
fstl
rol
std
pop
push
push
sbb
scas
rorb
xor
jge
hlt
fiaddl
loop
aas
daa
xchg
divl
ljmp
adc
mov
sub
rcrb
mov
mov
mov
jae
lahf
jb
jl
and
sub
xchg
add
fistps
or
lahf
jno
and
inc
xchg
cmpsl
mov
jge
insl
add
pop
ja
push
dec
mov
sarb
dec
xchg
xchg
iret
in
ret
cmpl
fildll
call
stos
ret
es
les
sahf
xchg
push
sti
test
addl
inc
fists
sbb
mov
in
ret
adc
inc
push
repnz
sbb
and
sub
arpl
xchg
fwait
jnp
cmpb
fdiv
xor
xchg
and
mov
and
push
mov
lea
sbb
fs
pushf
or
cmc
cld
fmull
mov
sbb
fsubrs
mov
jns
cs
clc
inc
jmp
xor
enter
push
inc
add
jmp
inc
cmp
mov
test
das
add
or
mov
daa
or
jp
mov
faddl
adc
sub
decl
push
cwtl
push
and
mov
push
xchg
and
dec
pop
sbb
test
arpl
cli
sub
cmpsb
outsb
jg
ja
int
insb
and
pop
dec
xor
sub
pusha
stos
adc
iret
inc
or
cli
xorl
xor
lea
sbb
outsb
out
and
lods
push
mov
jecxz
gs
push
and
xchg
inc
out
inc
push
mov
jo
sub
movb
jp
push
std
addl
lret
xor
pop
dec
mov
jl
dec
xchg
fcomp
sub
add
sub
cltd
sub
cmc
lds
rorl
test
and
imul
int
push
pop
daa
jmp
cld
mov
enter
jnp
xchg
push
xchg
aas
lods
inc
mov
loop
dec
dec
sbb
adcb
inc
and
or
adc
mov
push
mov
inc
mov
int3
shrb
cmc
into
pop
rcrl
pop
sbb
mov
xchg
lds
std
mov
jne
push
xrelease
fsubr
or
xchg
nop
mov
popf
iret
clc
xor
das
cmpsl
xor
pusha
test
push
sbb
sbbl
push
mov
ficoms
cwtl
sub
paddusb
gs
addr16
pop
mov
pop
xchg
ret
cld
add
lea
jne
or
testl
xor
lahf
incl
mov
stos
dec
pop
xlat
inc
hlt
adc
pushf
push
xlat
add
shll
inc
sub
mov
enter
iret
aaa
popa
inc
shll
mov
or
cmp
std
mov
cwtl
add
inc
or
dec
cmp
scas
mov
dec
mov
mov
xor
mov
cmc
out
xchg
fs
out
jecxz
xorb
jnp
stos
mov
jge
gs
dec
jge
ds
pop
mov
rcrb
imul
mov
adc
push
sub
std
aam
mov
negb
push
jle
repnz
add
push
in
push
mov
fisttpl
sub
and
jae
iret
mov
mov
adc
mov
mov
and
out
jmp
adc
lcall
and
cli
testl
cmpsb
scas
dec
jno
add
js
mov
arpl
inc
insb
loope
add
cmp
sub
orb
mov
xchg
clc
mov
in
scas
test
push
cmc
bound
jl
int3
xor
mov
arpl
sub
inc
les
movsl
xchg
fistps
pop
xchg
xorb
adc
mov
mov
lret
scas
mov
cltd
int
push
cmpsb
mov
mov
test
push
xchg
sbb
ret
insl
test
iret
into
bound
outsb
pushf
lret
cmp
mov
pop
mov
mov
xor
roll
pop
cmp
adc
or
pushf
dec
push
sub
test
and
cmpsl
jge
pop
inc
pop
jg
fistpll
outsl
push
add
ja
push
lahf
and
cli
popa
je
cmpsb
aam
sbb
pop
xchg
sbb
les
xor
iret
into
ljmp
xlat
divl
js
cmp
clc
mov
push
adc
lret
rcrb
mov
in
jge
mov
das
sbb
xor
push
pop
cmp
xchg
cld
xchg
mov
mov
cltd
pop
fdiv
fdivr
cmpl
imul
sbb
leave
sbb
inc
xchg
xchg
je
cmp
and
mov
sub
icebp
add
cmp
pop
roll
mov
lret
stos
dec
outsl
adc
fistpll
cmp
jae
jp
inc
ret
mov
lahf
push
in
stos
add
jno
jg
mov
mov
idivb
push
inc
pop
jle
adc
ljmp
jbe
mov
jmp
aad
rcll
addr16
mov
int
and
xchg
ret
mov
popf
dec
or
mov
xchg
fmuls
pop
xor
insl
mov
inc
or
clc
movsl
out
cmpl
lret
jecxz
push
cmp
xchg
mov
jl
mov
xchg
xchg
in
cmpsb
movsl
mov
xchg
iret
xchg
int3
push
sahf
cmp
add
mov
mov
clc
cld
stos
outsb
pop
or
dec
cs
sub
insl
cmp
mov
test
ret
fwait
pop
push
mov
or
repz
insl
aad
or
sbb
aad
call
pop
add
jp
mov
mov
rclb
cmpsl
jnp
decb
adc
jno
les
mov
movsl
jae
faddl
sub
stc
in
out
push
inc
stc
test
les
lods
sbb
movsb
mov
loop
enter
loopw
and
jl
push
add
cmp
es
int
es
cmc
inc
ror
repz
int
mov
sbb
add
orb
movsl
jge
sbb
clc
stc
daa
mov
cltd
in
dec
ss
enter
mov
fdivrl
cmp
or
pushf
cmpsb
add
popf
jbe
add
hlt
xor
test
add
sarl
xor
mov
cmp
loopne
scas
push
out
inc
and
pop
insb
cld
ja
ss
push
jp
push
sub
insb
push
repz
mov
lret
sbb
test
lock
cmp
sbb
jno
pop
ds
popf
xorb
das
loope
xchg
or
jl
mov
push
fidivs
icebp
cwtl
loop
lea
ljmp
lea
sub
pop
lahf
inc
andb
mov
sbb
inc
popa
lret
insb
pop
mov
push
ss
icebp
mov
popa
push
aaa
xor
imul
pop
mov
push
movsb
xchg
dec
imul
pop
lret
adc
mov
sub
or
and
xor
shll
hlt
out
sti
xchg
adc
mov
jb
into
mov
cmp
scas
adc
push
std
dec
jbe
jl
das
cmp
push
je
dec
int
sub
pop
cmp
jae
out
ret
sahf
mov
rcll
jo
mov
add
sub
test
and
shlb
jmp
dec
jo
adc
push
jp
ss
pop
inc
pop
dec
sub
jb
and
inc
outsl
pop
nop
inc
xor
sbb
sub
aad
add
adc
data16
adc
pop
ds
mov
stos
shlb
cwtl
decl
je
cli
imul
mov
mov
jns
orl
movsb
enter
push
icebp
test
sbb
and
sub
inc
inc
mov
jp
adc
sub
mov
out
sub
mov
arpl
jp
xor
push
adc
scas
fstpl
repz
inc
gs
adc
push
shll
sub
out
ss
or
mov
push
outsl
gs
lods
loopne
cmp
mov
rcr
insb
fistpll
ret
jle
sbb
faddl
cmp
sub
jne
cltd
enter
gs
add
mov
pop
js
jnp
pop
js
arpl
pop
mov
orb
fimuls
shlb
xor
mov
xor
fcmovb
lods
xchg
pushf
mov
leave
xor
inc
out
mov
add
dec
out
roll
mov
and
xchg
push
bnd
add
sbbl
push
mov
or
xor
lods
jno
cmc
sub
push
jae
push
add
dec
loopne
stc
std
lods
fucom
fwait
adc
xchg
movsl
and
xor
daa
mov
jecxz
xchg
test
stos
stos
jns
sbb
pop
xchg
insb
inc
xor
mov
fbld
shl
inc
push
cltd
mov
pop
adc
repnz
rcl
sti
imul
aad
clc
je
and
in
dec
push
aam
aad
mov
inc
insl
sbbl
pop
jae,pn
xchg
cmp
ror
xchg
mov
add
cmp
dec
mov
pop
loop
mov
icebp
sbb
mov
dec
xchg
adc
sbb
jmp
jle
add
les
repz
mov
out
or
out
xchg
sbb
inc
ret
cmp
test
push
xchg
inc
call
cmp
dec
adc
bound
pop
mov
mov
lods
or
in
mov
repnz
pop
add
jmp
aas
iret
xchg
scas
insl
mov
sti
sub
addl
pop
addr16
movsb
add
rorl
dec
jecxz
and
aas
xor
add
psubb
xchg
ltr
xchg
push
sub
dec
ret
pop
nop
cmp
jnp
and
mov
sub
int3
mov
xchg
jns
xor
and
out
mov
insb
test
hlt
add
ds
lods
outsl
lock
test
mov
out
mov
ss
mov
cmp
jle
insb
add
adc
shl
sbb
out
jmp
add
testb
shlb
fldt
mov
or
aad
xor
mov
mov
add
pushf
mov
adc
repz
or
lcall
jo
repz
clc
repnz
fbstp
cmc
cmp
push
adc
and
inc
in
sub
mov
stos
aas
jbe
xor
outsb
and
insl
push
sbb
pop
inc
call
mov
dec
xor
shll
push
mov
jmp
imul
mov
add
aam
bound
dec
xor
jg
repz
adc
fs
cmpsb
cmpsb
mov
test
pop
push
jmp
cwtl
insb
mov
jl
mov
mov
inc
imul
out
lock
popf
xchg
push
incl
shll
sub
mov
push
inc
jne
and
cs
andb
jns
and
out
pop
adc
lock
test
pop
mov
mov
stos
jbe
jle
push
ss
sub
js
and
adc
in
xchg
or
jne
incb
fwait
scas
add
nop
jge
loop
add
push
sub
adc
xor
lds
shll
push
jo
xchg
sub
fcomi
in
lret
mov
sub
jo
cltd
call
das
xchg
aad
xchg
out
es
jp
aas
dec
sbb
movsb
sbb
cmp
push
mov
insl
inc
fcmovnbe
dec
sbbb
dec
mov
aas
mov
sub
push
mov
cmp
jmp
paddsb
test
je
mov
add
pop
in
je
push
jo
mov
push
xchg
loop
inc
xor
mov
mov
enter
sbb
repnz
inc
pop
test
push
into
shll
rol
push
adc
and
mov
sub
test
aaa
test
fiadds
imul
icebp
push
js
aaa
mov
jne
insb
mov
subl
imull
sti
pop
push
or
dec
jge
mov
pop
aaa
dec
shlb
and
xchg
mov
loope
es
movsl
sub
adc
push
mov
adcl
cmp
ret
mov
mov
fdivr
pushf
sub
cmp
orl
and
pop
cmc
addl
inc
xchg
sub
jnp
or
std
add
push
fldenv
loope
test
pop
jecxz
test
pop
adc
xor
push
outsl
nop
out
shll
jbe
inc
mov
andl
pop
incl
xor
leave
mov
test
mov
cmp
fnsave
mov
cld
test
fsubl
xchg
in
push
ja
pop
loopne
dec
test
jle
in
test
mov
xor
jmp
xor
es
pop
and
mov
lahf
outsb
js
cli
pop
stos
sbb
popa
insl
fdivrs
outsb
out
test
cmp
idivb
inc
or
repz
sbb
inc
lds
add
outsb
aam
mov
frstpm(287
dec
cmp
lret
fld1
fsubs
cs
fnstcw
mov
mov
dec
leave
lds
inc
lret
and
aaa
icebp
js
fildl
fnstsw
jbe
jnp
mov
test
stos
dec
mov
mov
mov
sub
mov
xchg
jl
jle
mov
or
aam
xlat
das
pop
rcl
es
xor
cmpsl
xchg
adc
stos
jne
dec
std
iret
enter
testl
push
inc
lret
or
mov
xchg
pop
or
adc
inc
xor
rcrb
and
mov
and
out
or
arpl
popf
sub
js
sti
mov
and
inc
add
mov
aad
mov
cltd
aad
fucomp
std
lock
ret
dec
ret
hlt
fldcw
mov
cmp
jmp
jl
mov
test
mov
inc
test
cltd
adc
push
adc
adc
movsl
pushl
sti
pop
inc
inc
push
or
repz
lret
fildll
adc
aam
insb
sbb
test
popf
lcall
ss
in
add
popa
inc
test
mov
push
adc
fmull
dec
rorb
rol
jno
gs
dec
dec
mov
mov
movsb
pop
adc
jle
adc
movl
outsb
loopne
test
add
cld
jns
inc
mov
lahf
jp
lea
fsubrs
push
inc
mov
and
ja
pop
pop
addr16
out
leave
jl
xor
add
mov
call
in
lcall
out
ja
cmp
and
clc
ljmp
orb
mov
cmp
mov
dec
inc
fsts
xchg
cld
movsb
shl
and
push
add
pop
or
out
leave
push
push
xlat
push
jge
mov
leave
call
jae
outsl
sub
mov
cmp
popf
ljmp
sbb
or
seto
xor
sbb
fbld
stos
cmpsl
jae
into
lods
mov
or
shr
movsb
scas
loopne
mov
loopne
cmpsl
stc
mov
lds
jno
popf
insb
pop
or
pop
incl
inc
add
arpl
pusha
push
inc
mov
or
enter
cmp
cwtl
dec
hlt
xchg
leave
je
xchg
sarb
call
mov
adc
cld
stos
js
ljmp
push
mov
fisubrl
pop
push
push
arpl
inc
sbb
in
loop
push
iret
dec
jle
jle
pop
jg
loopne
xor
mov
cmp
stos
cmp
sbb
lds
push
add
iret
xor
popa
adc
cmpl
pop
push
add
or
loope
inc
ja
add
inc
fcoms
jl
fs
xor
lds
jp
jle
sahf
mov
sub
ret
lcall
push
push
sbb
xchg
faddp
test
xchg
xor
stos
adc
jge
pop
mov
push
outsb
jp
mov
mov
push
leave
sub
icebp
push
sub
cwtl
xchg
pop
pop
stos
push
ret
cmpb
sbb
add
xor
inc
test
push
scas
mov
xchg
cmp
ret
or
out
insb
xor
inc
lock
call
mov
movsl
loop
fwait
popa
in
shll
loop
mov
insl
or
fsubp
pop
repz
inc
popa
sbb
jmp
jg
dec
cmpsl
out
ficoml
jge
adc
xchg
dec
cs
sahf
xchg
loope
jbe
sub
push
stos
jge
loope
dec
outsb
in
ficoms
jge
cmpsl
adc
movsb
cwtl
fisubs
stos
xchg
icebp
loopne
cld
movsb
inc
push
jge
outsb
jp
iret
mov
sahf
xchg
dec
pop
movsl
push
pop
loopne
mov
insl
fdivrl
clc
mov
sbb
jp
outsl
add
sbb
into
mov
sbb
push
jl
mov
arpl
add
push
xchg
sti
jl
pop
xchg
and
sbb
outsl
mov
mov
ret
or
xor
aaa
xchg
into
xchg
out
enter
inc
lds
jns
add
fiaddl
pop
lret
pop
dec
xor
push
je
sbb
pop
push
xchg
shrl
cmp
shrl
idivl
push
stc
dec
cmp
fstl
add
add
lret
mulb
adc
bound
xor
cwtl
sub
add
mov
cltd
mov
pop
add
mov
clc
push
arpl
push
and
iret
lds
mov
add
mov
add
fwait
jp
cld
mov
scas
and
mov
jns
jae
dec
icebp
mov
cmp
jno
repnz
leave
out
mov
data16
push
out
call
out
jmp
push
cli
lock
mov
and
outsb
push
arpl
insl
enter
cmp
or
and
lea
dec
test
int
mov
xchg
es
cmpsb
sub
add
xor
movl
lret
inc
fwait
fs
es
inc
cli
xchg
cmp
jns
outsl
negb
lods
pop
mov
test
mov
loop
pop
mov
mov
lret
insb
stc
stc
scas
push
push
test
add
mov
or
push
int
inc
insb
adc
xchg
cmp
pop
jnp
and
xorb
out
mov
inc
test
idivl
dec
mov
repnz
push
pop
mov
mov
lret
pop
xchg
idivl
or
add
xor
cmp
popl
pop
bound
iret
mov
jns
add
pop
ficompl
push
cwtl
jmp
loope
int3
out
jge
inc
xchg
mov
lret
pop
repnz
shll
pop
cmc
pop
in
sub
pop
sbb
push
cmc
sub
xor
mov
add
sub
lret
std
sub
jge
aaa
frstor
orl
push
enter
xchg
loope
mov
sbb
enter
mov
sbb
sub
xchg
jge
jp
sub
out
addb
out
fimuls
cmp
mov
add
cmp
pop
xchg
cli
mov
pop
sub
sbb
shlb
mov
mov
mov
pop
and
xchg
or
and
mov
and
adc
xor
ja
pop
imull
jg
shlb
pop
loop
aad
inc
outsl
sub
dec
mov
cli
xchg
xor
fucom
push
popf
in
cmp
out
nop
and
out
out
xor
push
test
lahf
jg
pop
sarb
push
imul
push
rcl
adc
pop
push
xchg
or
inc
movsl
addl
adc
jnp
sbb
das
inc
scas
orl
enter
mov
lcall
and
xchg
or
lds
dec
and
es
dec
mov
sbb
xor
insl
lds
test
inc
jae
bound
imul
cmp
out
dec
add
jl
mov
mov
sahf
push
push
push
test
mov
repz
mov
ljmp
in
roll
adc
adc
push
ja
shl
pop
mov
jb
lods
in
xchg
sbb
lods
dec
jbe
aad
inc
cmp
sbb
sbb
add
inc
xchg
ficoml
ljmp
adc
sub
sub
lods
imul
xor
mov
mov
and
adc
sub
pop
cs
leave
jbe
stc
push
aad
sti
push
ss
rclb
lcall
dec
stos
mov
mov
cmp
repnz
sub
in
cwtl
pop
inc
sbb
test
test
aaa
inc
test
lret
mov
and
fbstp
rcll
stc
xor
add
cmpsb
cmp
inc
dec
push
mov
or
lock
pusha
fidivrs
pop
xchg
sub
xchg
ljmp
push
xor
cmpsb
pop
test
mov
xor
aad
mov
adc
test
pop
add
dec
mov
push
cmpsl
inc
pop
xor
push
push
jae
adc
dec
and
repz
scas
push
ret
xor
jne
mov
mov
cmpsb
dec
sub
or
lods
repz
xor
into
cmp
add
imul
or
dec
out
je
inc
loope
out
aam
mov
jg
fldln2
lods
sbb
pop
stc
or
or
gs
jb
cmc
mov
sbb
push
and
leave
test
xchg
push
xor
jbe
ret
or
add
cmpl
outsl
ljmp
and
jp
inc
pop
fsts
jo
jb
cwtl
scas
cs
mov
cmovae
adc
sub
adc
dec
mov
addb
movsb
xchg
jno
jo
dec
negb
negl
pop
in
cmp
mov
and
add
fdivs
add
mov
jl
lock
adc
aas
lds
test
div
pop
add
loope
lock
lret
add
push
sub
jo
xchg
repnz
jl
out
mov
je
xlat
sahf
jl
cli
inc
pop
shlb
pop
cmp
xor
add
dec
inc
pop
pushf
push
lahf
push
cmp
pop
push
xchg
push
lahf
inc
int3
mov
dec
adc
outsb
int3
clc
push
xchg
xchg
push
jnp
jbe
ss
sub
mov
inc
icebp
out
rcrb
fdivl
push
inc
xchg
imul
jne
and
jle
movsl
xchg
and
cli
add
dec
stos
push
inc
outsb
adc
pushf
mov
or
adc
addr16
inc
cmc
test
stos
dec
add
pop
pop
jne
sbb
jecxz
lcall
mov
orl
push
cli
pushf
repnz
cmp
sbb
stos
cltd
sbbl
mov
in
rcrl
fisttps
lods
or
mov
mov
pop
push
mov
xchg
add
sahf
push
sbb
into
cmc
testb
aam
dec
cmp
and
arpl
inc
fwait
jne
cmp
push
jg
adc
mov
mov
mov
pop
cmc
jle
jns
insl
push
idivl
sti
addb
mov
jge
ror
sarb
clc
sbb
mov
cmp
jp
test
scas
and
aaa
jecxz
xchg
test
jnp
pop
mov
lahf
lret
cmc
xlat
mov
mov
cld
mov
data16
push
xlat
dec
sbb
imull
xor
das
pushf
adc
mov
cmp
loopne
mov
adc
cmp
cmpsb
and
inc
mov
inc
or
jb
and
divl
mov
ss
and
imul
js
je
pop
data16
nop
nop
adc
pop
and
stos
and
dec
jle
mov
mov
sub
sub
adc
mov
dec
xchg
inc
rcll
out
rolb
test
movl
sbb
jo
rclb
cld
xchg
dec
xor
and
ljmp
shll
fcoml
xchg
dec
sub
leave
cwtl
lret
pushf
and
test
daa
icebp
cmpsl
inc
mov
dec
stos
scas
rclb
jo
pop
leave
repnz
and
rcll
imul
mov
sbb
inc
push
les
ljmp
int3
arpl
pop
mov
jle
jns
mov
jae
inc
movsl
pop
out
pop
xor
or
sub
xor
leave
je
mov
outsl
cmpsl
das
mov
and
xchg
cwtl
xchg
les
mov
imul
jl
int3
fdivrs
dec
xchg
add
std
pop
cmc
cmp
in
xchg
subl
nop
loope
mov
js
pop
mull
cmp
es
stc
xor
into
stc
dec
mov
adc
xor
call
mov
sbb
stos
xchg
andb
dec
mov
sbbb
jb
pop
sub
cmp
push
movsb
movsb
lcall
mov
sub
mov
rorl
pop
mov
sahf
sarl
ret
pop
sbb
fcomp
pop
std
mov
or
and
sbb
mov
loop
shlb
mov
add
or
sbb
je
sub
imul
cmp
dec
add
mov
sub
movl
adc
dec
cmp
iret
pop
int3
or
pop
rcll
cltd
mov
mov
cmp
test
das
dec
mov
fcomi
xchg
hlt
repnz
sbb
mov
or
pop
mov
lcall
sbb
lods
mov
push
imul
xchg
xorb
adc
and
inc
cmpsb
fdivp
jno
and
adc
dec
div
dec
testb
lahf
jle
stc
cmpsb
pop
lahf
jno
insb
adc
test
push
cmp
jp
mov
js
mov
xor
or
in
and
insb
mov
test
sbb
div
jge
push
movsl
insb
sbb
cmpl
jmp
out
push
sti
xchg
es
js
sub
nop/reserved
inc
jo
cmpsl
jbe
cmpsb
mov
loopne
and
inc
fidivrl
jg
outsb
pop
nop
and
ss
lods
movsl
aaa
rcrb
lea
push
lret
and
aaa
jmp
mov
ljmp
fbstp
fidivl
pslld
jmp
jno
push
mov
mov
inc
lods
add
sub
hlt
and
lcall
into
cmp
fcomps
imul
aam
in
fnstenv
jle
ja
imul
test
xchg
shr
loop
sbb
jmp
sbb
mov
xor
pop
into
ret
push
fs
mov
xlat
fistpll
mov
test
btr
inc
and
xchg
mov
sub
dec
out
icebp
int
stos
add
rol
mov
repnz
pushl
xchg
push
mov
fs
pop
lods
mov
or
adc
inc
test
lods
or
insb
in
test
loop
xchg
imul
fisubs
push
mov
or
sbb
xor
daa
je
jecxz
arpl
icebp
inc
sbb
lahf
lcall
or
arpl
ret
xchg
int3
mov
adc
repz
mov
xchg
rcrl
movsb
sti
movsb
jns
mov
neg
mov
or
shlb
sub
or
add
push
in
jbe
pop
or
jae
popf
mov
pop
add
movsb
cld
mov
sub
push
es
arpl
xchg
xchg
push
fyl2xp1
icebp
out
jae
cmc
ja
movsl
leave
mov
ret
cwtl
add
add
sbb
push
ficompl
out
fwait
cmpsb
jecxz
xor
push
movsl
sbb
sbb
push
adc
xchg
ds
aaa
loope
mov
xchg
mov
fwait
js
xchg
adc
lea
sub
xor
mov
jecxz
add
in
mov
cmpsl
enter
jnp
int
adc
outsl
iret
cmpsb
xchg
and
inc
insl
fisubrs
test
or
outsl
adc
xor
test
pop
es
pop
pop
imul
adc
lods
int3
aam
mov
pop
pop
xor
out
stos
mov
iret
sti
fwait
mov
loopne
mov
pop
stc
mov
fcmovbe
dec
mov
fnstsw
and
push
cwtl
sub
pop
clc
imul
jge
mov
mov
lods
enter
pushf
call
pop
jo
add
jo
adc
cltd
outsl
in
mov
enter
dec
enter
push
sarl
pop
sub
xchg
xor
fwait
or
mov
mov
int3
sti
cli
pop
adc
stos
aam
fisubrl
mov
ret
mov
mov
outsl
xor
arpl
pop
leave
or
xor
xchg
jo
gs
sbb
in
mov
mov
shll
add
mov
jne
loopne
lcall
enter
nop
mov
cmp
movsb
adc
sbb
ljmp
inc
xorb
mov
inc
xor
sbb
pop
adc
or
dec
pusha
imul
fsubs
dec
stos
and
sar
dec
div
xchg
inc
scas
ret
adc
xor
ret
outsl
jecxz
sbb
cwtl
push
dec
iret
enter
pop
mov
ss
adc
xor
fcompl
addl
les
iret
test
and
es
and
negl
cmpsb
lret
pop
add
push
and
loope
gs
data16
js
movd
add
mov
sbb
aaa
mov
push
ljmp
idivb
add
fistps
sub
push
cli
insb
xor
jbe
fwait
out
cmp
mov
pushf
out
pop
adc
ds
data16
dec
sbb
fs
aas
movsb
mov
jl
insl
push
inc
push
pop
loope
add
pop
loop
lock
or
fnsave
or
push
in
sub
lds
ret
pop
fdivs
sti
inc
mov
add
lds
cli
in
push
lcall
lods
mov
js
mov
loopne
shl
andb
enter
clc
adc
jge
mov
cmc
fcmovnu
and
aaa
test
sbb
les
out
mov
out
movsl
pop
pop
out
ljmp
jne
pop
ljmp
and
push
or
iret
sbb
arpl
push
into
mov
add
adc
fwait
imul
jbe
jle
imull
jae
cmp
vpunpckhwd
lahf
push
cmp
xchg
les
ret
lea
dec
cmpl
mov
or
jg
jne
cli
jb
out
jne
cmp
sub
lds
adc
and
mov
aad
dec
ljmp
push
inc
push
xchg
scas
add
scas
es
sbb
sbb
ffreep
cmpsl
pop
fisubrs
inc
pop
sahf
out
pop
dec
push
ret
mov
adc
or
or
addr16
xorl
out
ficomps
mov
sub
add
sbb
xlat
aas
lahf
data16
sti
cmpsl
fcoms
loope
dec
les
out
pop
fldcw
ret
add
add
mov
sbb
jle
inc
popf
test
mov
xchg
jns
ja
sbb
repz
stos
pop
jl
and
insl
cmpl
out
imul
mov
xlat
in
jg
scas
fldenv
jmp
cmpsl
mov
popf
pop
cli
test
je
adc
aas
and
dec
popf
xor
daa
mov
push
cmc
inc
jnp
add
add
pop
in
inc
lcall
jnp
cwtl
hlt
lret
int3
inc
fmul
cmp
addb
jnp
jl
int3
lock
cmp
cld
cmp
int
into
mov
xor
test
sbbb
jne
dec
outsl
bound
sub
xor
test
pop
mov
mov
xor
inc
sbb
into
or
out
in
adc
cltd
sbb
dec
cwtl
stos
xchg
pop
pop
push
xor
call
cmp
xor
and
iret
subb
jae
outsl
cli
mov
jp
testl
pusha
stc
outsl
loope
ja
js
inc
mov
daa
mov
arpl
push
jecxz
inc
pop
adc
push
test
sub
outsl
stos
sbb
cmc
and
in
xchg
cmpsb
cwtl
aad
jg
sub
lods
sub
and
xchg
and
outsl
mov
mov
imulb
sbb
cmp
xchg
push
bswap
mov
mov
test
push
fidivl
or
int3
xchg
xor
jo
adc
or
push
fldl
ja
repz
dec
loopne
pop
sub
mov
sbb
pop
mov
mov
push
mov
jl
jmp
mov
add
movb
repz
arpl
imul
lock
xor
icebp
popa
push
push
push
fldcw
adc
js
fmuls
push
cli
stos
sti
xchg
ffreep
insb
jl
sti
mov
xor
push
jg
into
xchg
xor
pop
push
pushf
or
mov
push
jl
mov
and
and
sub
lret
xchg
push
cwtl
add
pop
sbb
xor
mov
pop
jno
xchg
pusha
popa
jecxz
mov
test
cmp
adc
rcr
mov
call
mov
repz
fninit
xchg
std
outsb
mov
adc
jmp
xchg
sub
out
mov
push
movsl
and
lret
movsb
inc
loope
or
cmp
jbe
xor
inc
xchg
subb
outsl
cmc
and
cmp
subb
cli
int3
inc
push
imul
es
xor
popa
sub
iret
sbbb
mov
dec
xchg
fldenv
pop
xchg
jge
jae
jg
add
and
mov
pop
in
js
shl
lea
inc
sbb
adc
out
loopne
frstor
imul
loopne
sbb
ds
xchg
jmp
sti
and
movsb
aaa
sbb
lods
mov
add
cmpsl
mov
or
cli
xor
sbb
sub
fcompl
loop
xchg
and
pop
xor
cmpsl
sbb
jnp,pn
inc
test
subb
negl
sub
addr16
cltd
out
sub
scas
fistpll
mov
ss
inc
mov
rol
aaa
jmp
xor
cmovg
jo
xchg
stos
add
mov
xor
pop
aam
shll
mov
clc
outsb
iret
out
loopne
mov
into
jmp
inc
xor
adc
pop
inc
test
in
mul
lcall
adc
scas
scas
stos
pop
xor
xorl
sbb
nop
flds
sub
out
push
ja
pop
add
or
inc
call
sar
push
dec
pusha
pop
cld
rcrb
outsl
mov
fs
ja
pop
adc
and
faddl
hlt
xabort
mov
call
mov
subb
xor
sbb
or
fimuls
nop
push
fcomp
cmp
inc
add
ja,pt
and
cmc
inc
push
je
or
mov
pushf
andb
inc
pop
in
jle
xchg
bound
cmc
or
insl
mov
leave
jp
popf
xchg
lods
mov
sbb
in
loope
sbb
push
pop
xchg
inc
pushl
inc
mov
jbe
mov
das
popf
out
es
clc
xchg
inc
jnp
xor
dec
les
mov
xor
xchg
fcoml
dec
scas
inc
les
fldenv
sub
repnz
imul
loopne
xchg
push
clc
ret
fnstsw
pusha
add
xor
and
push
in
mov
daa
mov
out
jmp
pop
push
nop
xchg
sbbl
shll
ss
push
adc
shlb
jnp
aaa
fsub
adc
leave
mov
cmp
mov
cmp
pop
inc
pop
push
scas
dec
mov
sbb
adc
lret
mov
dec
aas
push
add
mov
mov
aam
push
lods
xor
test
jp
das
adc
in
or
test
cmp
sbbl
inc
popf
loopne
je
je
lods
add
ret
or
rcrb
push
nop
cwtl
les
in
adc
pop
mov
add
push
data16
mov
mov
cs
mov
out
fs
add
aaa
outsl
ja
mov
repnz
jl
addb
stos
mov
mov
dec
cmpsl
hlt
push
imul
add
pop
add
ficoml
movsl
jbe
incl
sub
adc
insl
nop
jo
ljmp
mov
fs
bound
cli
inc
lods
xor
sub
push
mov
mov
push
lods
movsb
pop
ret
in
scas
jle
aad
insb
jp
and
cmpl
dec
jb
sub
stos
pop
out
fs
xor
xchg
mov
mov
sub
jbe
push
adc
imul
jno
pusha
jge
popa
fcmove
outsl
jmp
popf
hlt
inc
lret
pop
jnp
dec
xchg
insl
div
sub
out
negb
push
movsl
fisubl
mov
int3
aad
rcll
das
and
push
into
push
mov
cmp
sub
pop
data16
pop
sti
mov
or
movsb
xchg
movsb
xchg
ffreep
push
dec
lds
inc
lods
sbb
repnz
mov
push
mov
mov
js
dec
lcall
xchg
filds
push
out
and
dec
out
push
cmp
sbb
jb
inc
push
jnp
test
pop
add
das
add
out
xor
imul
das
ret
std
jnp
faddl
pop
push
dec
cmp
imul
int3
repz
js
cs
add
clc
jmp
hlt
lcall
xchg
bound
fidivrs
incl
cmpsb
xchg
adc
mov
xor
sub
adc
lahf
fwait
xchg
add
sbb
jg
and
xchg
add
inc
loope
imul
icebp
mov
call
sub
mov
push
ds
sbb
outsl
or
mov
out
pushf
testl
add
xorb
pushf
shlb
mov
scas
rcrl
and
pop
or
mov
cmp
sbb
in
lahf
mov
add
jbe
jl
stos
jne
daa
cmpsl
sahf
orb
and
push
clc
call
push
out
jnp
fisubrl
test
aas
ret
insl
sub
fidivrs
mov
xchg
scas
mov
mov
jno
outsb
cmpsb
add
outsl
addr16
das
xor
rorl
fisttpll
or
loopne
add
inc
pop
pop
repnz
addl
fs
mov
add
adc
adcl
xchg
jne
push
or
in
jne
jmp
fidivrl
sbb
sbb
in
and
pusha
and
cmp
mov
ss
dec
and
pop
add
jbe
dec
pop
jecxz
add
icebp
inc
lds
scas
push
or
outsl
mov
mov
fdiv
inc
adcb
stos
cmp
add
and
and
pop
jle
mov
push
sahf
popa
out
negl
popf
test
mov
jmp
inc
mov
inc
sarl
sub
adcb
jnp
xchg
xor
mov
sub
or
js
int3
push
andl
jnp
xchg
push
icebp
cmp
loop
in
jns
leave
mov
push
imul
aam
jge
inc
cs
in
lahf
shlb
ljmp
pop
mov
enter
ljmp
daa
cmp
iret
add
aad
mov
mov
fnsave
ljmp
xor
mov
ss
push
stos
xor
test
cmp
jmp
dec
outsl
jle
ficompl
mov
xor
loope
in
popa
sbb
divb
fstpl
sbb
inc
add
dec
pop
hlt
pop
pusha
or
inc
cmp
pop
jno
xlat
inc
ret
pop
adc
sbbl
add
mov
push
mov
mov
sbb
int
xchg
lcall
push
rcrl
aad
push
inc
int
lods
nop
and
dec
out
sub
stos
shrl
push
xor
inc
sub
in
jle
imul
adc
enter
mov
int
and
popf
or
sahf
jno
xor
mov
xor
clc
lcall
aam
or
sub
std
xchg
loop
xchg
jp
pop
xor
lods
xchg
or
testb
or
push
xor
cmp
mov
pop
test
ljmp
cmp
out
cmc
roll
and
aam
pop
pop
or
into
xor
pushl
icebp
mov
pop
push
outsb
in
jp
sub
mov
arpl
sbb
fildl
push
dec
xchg
test
sarb
movsb
adc
jp
std
mov
mov
in
repnz
xlat
push
mov
mov
inc
scas
insb
fcoml
mov
push
scas
or
popa
outsb
sarb
xor
aam
cmovg
xchg
add
xor
add
adc
and
jmp
pop
fisubs
addl
mov
sub
lods
inc
repnz
in
and
xchg
add
clc
lcall
lcall
jbe
stos
mov
mov
and
jo
add
test
adc
das
mov
push
movsb
mov
loope
jle
clc
pop
pop
inc
jmp
jo
mov
rclb
cmc
jmp
or
dec
das
icebp
popa
lock
clc
sahf
ljmp
out
mov
ss
dec
scas
mov
out
sbb
mov
mov
imul
aam
repnz
es
mov
inc
mov
jle
movsb
xchg
cli
aam
nop
popa
inc
dec
or
sub
mov
pushf
pushf
enter
rcll
sti
loopne
les
cmp
xor
and
lea
fwait
stos
jne
cmp
mov
pop
scas
mov
aam
addb
mov
cld
xchg
dec
out
mulb
mov
push
xor
out
fimuls
call
cmpb
call
andl
mov
mov
divb
mov
ljmp
cli
ss
jbe
cmpl
jmp
std
xchg
lret
adc
lcall
sahf
mov
int3
sub
sbb
pop
and
lret
lods
jnp
popf
adc
mov
stc
sub
loope
inc
fs
sbb
jmp
cmp
sub
sub
inc
adcb
add
push
mov
cld
jg
clc
jge
jne
push
into
push
adc
iret
inc
mov
pop
insl
xlat
mov
sub
ja
jecxz
xor
mov
sbb
pop
je
mov
push
xchg
pop
rcl
mov
mov
add
fs
mov
loope
xor
les
xor
mov
stc
push
or
test
aas
cmp
arpl
mov
insl
push
mov
sbb
mov
pop
test
rcl
ret
mov
xchg
xor
hlt
adc
mov
mov
scas
aam
daa
jns
mov
mov
mov
mov
div
dec
xchg
adc
movsb
int
test
adc
push
gs
jb
xchg
jns
pop
aad
lret
sbb
aaa
das
inc
xchg
lods
call
mov
mov
adc
add
int
shl
inc
pop
fcmovu
testl
mov
adc
push
adcl
add
outsl
cld
dec
sub
in
add
push
loop
push
dec
test
mov
and
push
jg
cld
add
cmc
mov
push
in
sbb
sti
sbb
jmp
cld
jo
jl
inc
popf
das
xchg
call
mov
iret
lods
mov
insl
adc
cwtl
sbb
adc
pop
and
sub
loope
push
and
rep
ja
test
loope
mov
out
imul
pop
cmp
js
jl
lcall
sub
lods
pop
data16
sub
ss
mov
clc
cwtl
scas
out
fstp
jmp
cmpsb
cli
and
add
inc
mov
pop
not
xlat
or
dec
xor
dec
pop
pop
fwait
cli
lret
xchg
push
lcall
pop
rorl
mov
and
dec
fldl
pushf
std
push
pop
pop
outsb
pop
sbbb
movsb
in
lcall
scas
idivb
inc
das
jbe
scas
imul
fidivl
inc
mov
jnp
das
sub
cli
outsl
mov
cmpsl
out
push
mov
pop
sbb
inc
add
mov
les
repz
sbb
stc
fs
loop
pushf
adc
xchg
jnp
test
ljmp
ja
xchg
shll
xchg
imul
mov
pop
mov
pop
mov
aas
pop
test
dec
loopne
pop
fcmovbe
cmp
je
sub
jbe
sti
jne
loope
push
sub
xor
add
aam
andb
mov
jmp
out
mov
ljmp
xor
add
inc
fdivp
fwait
into
aam
mov
enter
mov
jae
jl
loopne
lods
or
emms
mov
ds
lock
add
or
cld
subl
dec
int3
sti
ret
xlat
fisubs
jg
dec
mov
in
movsb
sahf
mov
inc
out
mov
lds
pusha
or
lea
inc
loopne
out
pop
jg
insl
jbe
add
lock
ret
jp
icebp
mov
iret
pushf
mov
dec
andb
push
test
in
in
xchg
xchg
stos
cli
jge
inc
popf
stc
mov
mov
mov
icebp
xlat
out
cmpsb
push
dec
xor
push
and
ljmp
or
lods
jl
sbb
ret
filds
cmp
jne
add
xchg
mov
jno
xchg
insb
sbb
push
lock
rsm
test
fildll
push
xor
sbb
insl
mov
js
lret
or
sbb
pop
int3
mov
mov
sahf
mov
imul
and
scas
test
mov
lock
add
jbe
scas
scas
jmp
pop
and
sbb
jns
mov
loopne
adc
push
cli
mov
push
sbb
fiadds
xchg
outsb
adc
xchg
and
ret
ja
cmp
packssdw
xor
inc
xchg
inc
pop
and
sti
lcall
mov
jne
jo
mov
fsubs
lahf
popa
pop
lea
dec
jecxz
or
ret
lds
aas
dec
fdivl
or
test
scas
add
cmp
push
xchg
iret
jl
hlt
icebp
inc
dec
rolb
push
mov
rclb
iret
aaa
ss
stos
mov
jmp
mov
sub
or
sti
in
out
sub
sub
mov
hlt
push
mov
out
bound
add
fcompl
pushf
setae
sub
imul
lock
out
rcrl
pop
push
push
imul
xchg
add
sub
mov
out
cmp
add
pop
test
pop
daa
into
jbe
adc
jp
fwait
negb
xlat
sbb
or
sbb
jae
sbb
cmp
push
xor
mov
mov
or
sub
adc
addb
insl
inc
lods
pop
adc
lea
or
cmp
popa
or
inc
scas
push
std
addr16
cwtl
loopne
fwait
mov
out
dec
and
inc
data16
addr16
outsl
imul
jp
jecxz
jp
jo
shlb
loope
xor
aam
fs
xchg
adc
cli
pop
mov
insb
mov
incb
cs
lahf
mov
loopne
sahf
cmpsb
sub
mov
insl
lcall
lea
xchg
mov
ret
je
jmp
in
inc
std
xchg
and
addr16
adc
cmp
or
dec
outsl
mov
clc
imul
jns
jp
push
and
jecxz
push
dec
or
sbb
add
sahf
mov
cmp
cs
aaa
cmpsl
xlat
cmc
push
lock
dec
rcrb
add
ja
aas
xchg
dec
pop
cmp
sbb
mov
sub
cmpsl
pusha
in
mov
push
pop
xchg
fistps
mov
cmp
pop
insl
jo
cmpsb
and
pop
or
fcmovbe
dec
mov
sahf
scas
pushf
enter
and
arpl
pushf
jb
aad
enter
sar
cmp
pop
adc
dec
sbb
aaa
cmp
jg
jg
dec
inc
pop
push
dec
inc
repz
sarl
int3
xlat
push
das
inc
push
dec
ret
pop
shll
cmpsl
imul
jmp
and
lods
call
push
imul
mov
jp
push
jno
or
ljmp
push
dec
jle
xor
js
push
call
dec
cmpsb
fldt
aaa
and
jle
icebp
adc
cmpsl
cmp
push
pop
cld
adc
xchg
cmpsb
add
jmp
xor
ds
inc
movl
mov
and
xchg
leave
fcoms
mov
addr16
jmp
in
sbb
fsubrp
pop
outsl
or
cwtl
jae
xchg
and
adc
decb
fnsave
into
clc
cmp
pusha
stos
jns
push
pop
stos
lds
xchg
push
fists
sar
jmp
mov
cmc
cs
aad
and
in
cltd
popa
fs
fsubl
mov
xchg
pusha
mov
push
cmp
inc
aas
dec
xor
loope
addr16
adc
pusha
inc
fucomp
or
inc
push
sbb
cmp
xchg
adc
cmpsb
push
push
or
sbb
inc
push
pusha
pop
xchg
ljmp
dec
push
cmpl
in
xchg
sub
xor
movsl
xchg
xor
das
fdiv
in
cld
fmull
aad
out
pop
and
jp
imul
pusha
test
enter
invd
cmc
dec
addb
aam
xor
cmp
add
sub
or
sbb
mov
loope
ret
xor
lret
jge
mov
pop
movsb
cli
adc
daa
xchg
xlat
scas
outsb
mov
xchg
rcl
jge
xor
ficoml
push
gs
mov
test
outsb
pop
lret
sub
ficomps
lea
lods
pop
in
arpl
mov
mov
xchg
adc
fnstenv
jmp
pushf
and
push
pop
mov
aaa
sbbl
popf
mov
fnstsw
mov
fs
stc
sub
out
push
test
dec
sahf
push
arpl
xchg
cmpsl
xchg
sti
mov
lods
and
pop
lods
add
mov
jbe
mov
mov
push
js
push
addl
adc
fucomip
mov
pop
les
jecxz
adc
pushw
jnp
jg
push
ds
xorb
mov
xchg
mov
and
mov
outsb
stos
mov
push
scas
push
pop
mov
pop
push
xchg
rorb
loop
xchg
or
sbb
pop
fsubrl
or
sti
std
add
fbstp
outsb
scas
movb
aaa
lret
popf
test
scas
pop
mov
adc
mov
lods
out
xor
aam
fs
sub
xor
jo
testb
and
aam
add
lea
leave
add
add
adc
dec
outsl
inc
jno
rolb
ljmp
leave
outsb
out
cmp
pop
mov
push
rcrl
gs
mov
xchg
adc
inc
scas
jecxz
inc
int
dec
fwait
stos
xchg
aam
in
les
gs
mov
sub
add
outsb
iret
inc
dec
mov
aam
jne
dec
dec
mov
mov
xor
fs
aad
dec
div
lea
test
imul
pop
mov
xchg
sbb
add
adc
insl
add
das
lret
adc
cwtl
stc
adc
stos
cmp
jno
jbe
xchg
repz
push
add
loopne
jp
mov
jnp
sub
shlb
cmp
xor
mov
adc
pushf
jecxz
mov
leave
xor
pop
sbb
pop
and
icebp
xor
lret
sti
sub
inc
bnd
xor
call
and
pop
or
mov
mov
aaa
bound
movsb
adc
mov
imul
sbbb
dec
push
mov
inc
les
scas
popa
pop
sbb
jle
pop
mov
mov
mov
and
dec
stos
inc
xchg
jnp
xchg
jnp
popf
test
xor
mov
push
sbb
movsl
push
ja
dec
insl
push
pop
out
mov
cld
mov
ret
mov
fcomps
jns
push
push
pop
scas
ja
mov
pop
cmp
xchg
mov
inc
pop
cmpsl
xchg
cmp
sub
ljmp
movsl
mov
fwait
mov
mov
es
psubsw
cmp
in
mov
jge
lds
inc
or
stc
sub
inc
sbb
daa
loope
sub
cmp
into
mov
loop
aaa
into
adc
pop
bound
inc
or
clc
cs
mov
clc
ss
or
lock
scas
sbb
data16
inc
lcall
insl
mov
dec
pop
xchg
fmull
mov
sub
stos
jle
dec
int
rorb
push
iret
mov
jp
mov
push
lret
dec
or
sub
and
iret
push
aad
rcll
fdiv
mov
fistpl
loope
pop
mulb
pop
in
mov
pop
addr16
jne
leave
je
ja
mov
std
xchg
clc
xor
or
sti
sbb
sarb
mov
mov
xor
or
ret
lock
enter
mov
mov
fsubl
mov
dec
pop
adc
adc
fmuls
int
push
imull
in
jnp
fistps
mov
hlt
lea
push
push
xchg
push
xor
enter
mov
mov
aaa
jmp
cmpsl
fidivs
test
jns
stos
lcall
outsb
loope
fcom
mov
xchg
ret
or
sub
into
mov
adc
adc
stc
lret
mov
mov
adc
push
jno
in
cmpsl
pop
or
cs
out
adc
nop
pop
and
mov
mov
aaa
jnp
fnstcw
fwait
or
xchg
push
in
inc
outsb
push
fstps
inc
pop
pop
fldl
movsl
addr16
and
int3
add
negl
movsb
push
mov
in
inc
jmp
jmp
mov
lods
adc
das
mov
test
sbb
pop
xor
xchg
add
movsl
popf
push
loopne
je
push
sbb
jne
pop
fmuls
jp
jp
int
jmp
cs
jae
push
xchg
cwtl
mov
cltd
les
inc
sub
lret
outsb
mov
test
pop
xor
jno
in
lahf
xor
movsl
mov
ret
add
mov
xor
dec
dec
add
in
out
sub
mov
mov
stos
stos
sbb
lret
ds
je
cmp
ljmp
mov
mov
test
sub
repnz
dec
test
push
adcl
stos
cmp
cs
push
shll
ret
jecxz
sarl
jb
aad
mov
add
jge
popf
pop
ret
fldcw
adc
pop
mov
lret
aaa
int
insb
iret
popa
cmp
sbb
out
add
adc
ljmp
jb
add
push
add
cmp
std
push
cwtl
sbb
mov
adc
cmpsl
cltd
push
sti
xchg
int
xchg
cmpsl
dec
xchg
jb
fcoml
addr16
inc
jle
sarl
repz
xchg
daa
adc
cmpsl
cmpsl
jge
mov
and
insb
mov
in
ss
sbb
push
fsub
xchg
mov
cmp
pop
mov
xchg
je
je
in
push
cli
fildl
mov
test
dec
xchg
testl
mov
icebp
sbb
dec
mov
div
iret
mov
into
xchg
popa
and
add
fwait
inc
mov
das
sti
mov
imul
sbb
das
lahf
cli
push
xchg
lahf
and
pushf
pop
in
sahf
inc
add
stos
push
xor
icebp
mov
cmp
pop
inc
cmp
sub
adc
pop
imul
loopne
fisubl
cmc
cld
rclb
inc
push
sbb
pop
mov
dec
fmul
sub
pop
fisttpll
popf
or
lods
or
lock
int3
ss
xor
sbb
inc
inc
loope
sbb
add
push
js
fidivrl
fwait
lods
add
les
jnp
pop
gs
mov
scas
push
mov
mov
cs
xchg
cld
sbb
pop
daa
into
cmp
scas
call
push
jnp
mov
mov
xor
outsl
sub
ds
cli
stos
lods
repz
test
xchg
leave
mov
cmp
dec
xchg
add
xchg
adc
int
test
leave
xor
jecxz
cmpsb
adc
pop
xor
shr
push
addl
lods
and
inc
pushf
loope
sti
icebp
mull
in
pop
jae
loop
mov
jg
pop
xor
enter
and
pop
shlb
popa
push
lods
adc
cmp
negb
jge
cmp
inc
loop
or
cltd
popa
push
lcall
cmpsb
stos
mov
cmp
push
nop
fwait
in
jp
cmc
insb
in
pop
adc
mov
pop
pusha
pop
xchg
leave
ficoml
adc
fdivr
or
jge
lods
data16
and
push
mov
jb
adcb
mov
mov
pop
jg
into
dec
jne
inc
mov
imul
hlt
lods
dec
fcmovnbe
xor
push
ss
fucomp
rcr
ret
pop
fsts
popa
jb
sbb
popf
xor
push
in
cmp
mov
or
jne
scas
xchg
adc
test
and
enter
xchg
and
mov
test
cwtl
xchg
out
and
cwtl
xor
or
adc
sub
xlat
gs
inc
hlt
xor
dec
adc
jmp
pop
dec
sahf
adc
inc
test
xchg
pop
jl
movsl
and
dec
add
mov
outsb
dec
pop
mov
mov
ja
sarb
jge
push
sbb
push
out
je
movsb
stc
mov
sbb
mov
fimuls
sbb
fs
mov
pop
les
jae
pop
jg
adc
imul
ds
mov
sbb
xlat
dec
xor
scas
aas
bound
mov
cs
lods
in
sub
mov
lods
cmpl
add
fst
cmp
addr16
and
adc
ret
lar
cltd
loopne
mov
dec
cli
adc
mov
scas
fimuls
sub
add
popf
xchg
lods
int3
fldln2
fcmovu
ret
mov
pop
mov
mov
mov
and
push
add
insb
inc
lea
lcall
push
jecxz
lea
movsl
jo
mov
xor
hlt
or
outsl
cmp
mov
jl
mov
jge
lods
or
lret
fadd
data16
adc
mov
adc
in
pop
outsl
sub
sub
dec
mov
xor
xchg
mov
push
out
mov
pop
inc
push
pop
inc
aaa
test
pop
pop
imul
mov
sarl
addr16
adc
mov
jmp
lahf
lret
adc
scas
xchg
std
push
mov
fs
mov
pop
cld
rcrl
xchg
pop
nop
mov
jno
push
jecxz
mov
icebp
add
and
push
xor
add
sbb
orl
fisttpl
and
mov
mov
and
fisttps
sbb
ja
test
inc
sbb
imul
stos
loopne
nop
popf
test
sbb
xchg
add
idivb
mov
push
fisubs
fisubrs
int
cmpl
and
mov
jp
sbb
imull
loop
lds
stc
sub
dec
mov
xor
out
or
dec
mov
pusha
inc
int3
or
jnp
mov
push
sub
mov
je
jmp
pop
sbb
sbb
fsubs
fwait
xor
inc
mov
gs
inc
shll
jp
mov
xor
mov
xor
sahf
loope
mov
push
mov
bound
js
mov
addr16
adc
hlt
push
mov
jbe
pop
aad
je
jae
and
jmp
sbb
xor
or
test
jl
inc
jecxz,pn
cmc
and
rolb
test
call
sbb
iret
mov
dec
push
pop
inc
sbb
push
sub
addl
les
scas
lock
int3
imul
fidivrl
aas
jns
push
lcall
dec
in
add
cld
sbb
xchg
inc
stc
xchg
jne
push
imulb
out
adcb
test
jmp
mov
cmp
mov
dec
je,pn
lock
movsl
or
or
mov
and
sahf
inc
addr16
cmp
jecxz
push
pop
jb
jmp
lock
add
clc
mov
xchg
dec
add
sbb
mov
mov
mov
and
sarb
and
bound
xchg
imul
int3
mov
test
cltd
xchg
or
cwtl
shlb
fsubr
adc
pop
or
mov
jg
cmp
push
fnstsw
rol
shlb
jb
sahf
or
bound
lcall
pop
sub
push
mov
roll
cld
xlat
pop
js
pop
adcb
insb
lret
mov
sbb
movb
pop
shrb
insl
daa
shlb
xor
les
pusha
mov
adc
sbb
xchg
orb
cli
xchg
andl
fidivrl
dec
push
add
pop
mov
or
mov
test
in
divb
sub
shrb
jmp
incl
and
and
push
mov
popf
dec
fld1
int
cltd
or
pop
push
das
mov
adc
iret
shl
stos
mov
mov
jbe
addb
and
sbb
call
test
push
in
push
int3
jno
and
sub
stos
xchg
rcll
xor
loope
mov
add
imul
test
dec
cmp
dec
scas
fs
pminub
xchg
out
or
pop
jecxz
adc
add
mov
mov
cmp
cmp
std
lret
test
jmp
lods
inc
in
sub
ret
in
lahf
test
mov
add
pushf
xchg
pop
jmp
pop
adc
in
push
sub
out
push
push
negl
sahf
fcoms
inc
outsb
xor
dec
and
cmpsb
repnz
pop
sub
jns
mov
fldl
test
movsl
cld
scas
dec
fwait
adc
push
sti
and
in
sbb
and
jle
popf
repz
js
jle
add
push
push
stos
in
shrl
out
add
fld1
push
adcb
xchg
inc
mov
pop
aam
pop
cwtl
int
push
xlat
mov
jbe
in
mov
add
inc
adc
jl
push
and
cltd
add
std
push
fstp
mov
setae
cmp
sbb
es
lock
rclb
fcmovnb
xlat
inc
push
lret
push
mov
stos
sbb
dec
sbb
dec
movsb
es
movsl
cmp
push
mov
inc
repz
and
loop
pop
cld
inc
lods
fstp
sbb
in
outsl
and
mov
mov
ja
loopne
jecxz
in
lock
xchg
ffree
test
imul
daa
add
push
data16
outsl
std
clc
mov
pop
jg
xchg
loop
outsl
pop
aas
clc
inc
mov
sti
hlt
xor
out
rcll
cmpsl
xor
outsb
sbb
xor
cmpsb
pusha
fildll
adc
add
dec
mov
dec
jle
add
outsl
push
test
pop
dec
or
xchg
xchg
lea
and
xchg
ss
sbb
xor
jne
xchg
and
sub
mov
fdivrl
push
sub
pushf
mov
lock
call
adc
roll
mov
enter
outsb
jle
jae
adc
pop
and
into
push
jp
divl
cmc
out
rolb
out
std
pop
sbb
mov
xor
fmuls
jecxz
inc
lahf
dec
and
mov
add
mov
out
out
ss
out
scas
insl
rcr
rcrl
mov
adc
push
sub
and
ja
xchg
push
je
fdivrl
dec
repnz
adc
xchg
push
inc
das
sub
adc
pop
rcr
cli
subl
add
leave
loop
mov
add
mov
sbb
jnp
dec
inc
sub
inc
mov
imul
cmp
pusha
mov
addr16
sar
jo
mov
neg
pop
jp
test
popa
push
xor
dec
or
cmc
insl
icebp
iret
dec
outsb
leave
jmp
enter
mov
in
imul
das
jg
scas
dec
and
arpl
jb
andl
pop
pop
jp
inc
popa
pop
xchg
push
dec
outsl
push
fwait
pop
sub
mov
imul
cli
dec
sub
popa
mov
enter
out
push
dec
lret
lods
insl
sarl
jmp
loop
clc
push
cmpl
clc
sbb
inc
add
cmpsb
add
out
iret
dec
pop
inc
and
add
sarl
adc
mov
add
into
into
mov
push
sub
in
push
pop
cmpsb
rorl
gs
mul
lods
xchg
inc
fmul
and
cld
xor
or
out
jge
pushf
imul
push
scas
and
xchg
fimuls
rcll
mov
jp
xchg
xor
sub
mov
or
jno
jmp
dec
in
jnp
pop
sub
mov
and
pop
add
hlt
xor
rcrb
movb
imul
fisubs
jp
lods
sbb
jno
lret
call
rorb
popa
iret
sub
pop
out
xor
hlt
bound
mov
addb
outsb
and
cmpsl
push
lret
and
mov
add
in
inc
jg
jo
repnz
cmpsl
push
mov
mov
push
scas
adc
cmp
and
jo
push
pop
sti
jbe
xor
xor
loop
gs
dec
push
loope
mov
lret
xchg
mov
mov
cmp
scas
fdivs
imul
out
ret
bound
rolb
xchg
and
or
sbb
jp
or
mov
push
push
xor
pop
adc
adc
sbb
lret
push
jge
pop
hlt
lahf
pop
dec
out
mov
and
leave
lcall
or
sbb
dec
cmp
mov
jmp
loopne
iret
fdivrs
test
rcll
xor
daa
ret
stc
fcoml
rcrb
in
in
and
mov
push
mov
push
dec
pop
imull
adc
jmp
xchg
xchg
repnz
lods
jg
or
data16
sub
or
sub
shll
sbb
lea
add
or
mov
inc
mov
and
pop
adc
in
lcall
adc
cld
andl
add
sub
idivb
mov
dec
cmp
movsl
cmp
xlat
shll
push
push
rcrl
sbb
mov
test
int
xchg
mov
addr16
iret
sbb
outsb
nop
mov
icebp
mov
out
xor
jnp
xor
and
rclb
aad
loopne
inc
cmc
push
xor
jmp
push
or
and
aam
js
xor
je
xor
or
mov
cmp
push
fs
add
mov
pop
stos
cli
pushf
repnz
call
call
movl
lcall
mov
xor
nop
xor
leave
adc
mov
jmp
pusha
repnz
jbe
cli
pop
fnstenv
add
icebp
bound
imul
call
aam
scas
stos
int
arpl
insb
sub
dec
push
and
inc
dec
int
adc
mov
or
jecxz
call
test
add
js
movl
jl
mov
push
mov
pop
gs
lock
sti
stos
jmp
jnp
xchg
mov
fdivp
mov
in
xor
movsb
push
mov
sub
lods
xchg
xor
or
repz
data16
mov
rep
xor
sub
ljmp
sbb
pop
outsl
cmp
or
out
cmp
fsubr
repz
std
jecxz
movsl
mov
cld
dec
mov
in
andl
xor
inc
stos
add
fldenv
add
lds
data16
aad
jo
clc
and
insl
push
sbb
push
imul
pop
cmp
in
dec
shl
lret
out
insb
xchg
mov
lds
xchg
jnp
test
mov
into
mov
jno
rorb
std
ss
daa
sbb
pop
pop
shlb
cs
lds
ljmp
cmp
mov
pop
fstpl
mov
mov
stos
mov
ljmp
mov
arpl
xchg
ss
aaa
frstor
cs
inc
push
divl
and
mov
test
mov
in
add
sub
xor
pop
daa
xchg
pop
popa
test
sub
or
pushf
aad
mov
lock
xchg
jo
and
mov
mov
cld
xor
jno
cmpsl
jbe
xchg
and
sub
or
push
adc
xor
xchg
je
mov
adc
loopne
xor
aas
test
iret
jg
cmpsl
jl
push
jl
xchg
sub
insl
scas
lahf
sub
mov
mov
clc
arpl
sub
sbb
nop
fdivrs
in
lds
jno
sub
rcll
out
pop
mov
sub
mov
rorl
lock
in
pop
shl
mov
dec
addl
or
test
cmc
inc
cmp
mov
out
dec
pop
fsubr
stos
ja
adc
lds
xor
ret
xor
mov
xorb
cwtl
add
ss
lret
int
xchg
cltd
mov
cld
lods
cmp
pop
xor
jbe
xor
out
flds
ret
adc
mov
nop
mov
vpaddw
push
dec
or
sub
mov
std
enter
push
imul
repnz
movsb
cmp
add
das
jmp
ss
xchg
lcall
cmc
mov
xchg
aas
outsb
sbb
scas
xor
jae
dec
jecxz
cmp
std
mov
ret
pop
mov
ret
pop
mov
jl
cmc
adc
out
mov
int
adc
or
sbb
mov
filds
cmpsb
or
sbb
xchg
and
mov
jo
mov
out
cmp
ret
lcall
shrd
and
imul
cli
les
dec
call
xchg
cli
stos
cmp
sarl
xchg
push
lods
cmp
pop
lret
sbb
sub
mov
cld
cltd
pcmpgtd
mov
fists
jne
lock
sarl
aad
leave
and
aam
sub
sbb
sti
leave
mov
xchg
cmp
jmp
and
incl
pop
jne
or
enter
jge
cmp
outsl
pop
int
repz
add
xor
xchg
popf
iret
lahf
add
and
pop
lahf
mov
dec
jo
in
sbb
mov
or
xchg
sub
jns
jge
and
xor
lock
fwait
test
inc
mov
xchg
cmpsl
fidivrs
test
mov
add
mov
sbb
outsb
push
in
sahf
push
push
push
es
dec
cmp
lods
call
dec
out
dec
pop
cmc
adc
clc
inc
cmp
stc
das
jae
jb
testb
jo
cmc
dec
stos
int
mov
rcll
xchg
cmp
lock
inc
orb
stc
adc
sbb
jge
dec
cmp
movsb
cltd
jne
cld
fistps
and
enter
insb
lds
insl
popf
ds
in
notb
and
jl
push
mov
aam
pop
push
pushf
pop
mov
dec
push
frndint
pop
jb
mov
popa
jle
jns
dec
call
inc
sbb
cmp
sbb
jae
xchg
pop
add
aad
fistpl
ljmp
movsb
jecxz
cmc
shll
aas
outsl
inc
rclb
jle
imulb
mov
movsb
pop
push
and
insl
push
js
adc
xor
xchg
ror
sar
mov
out
test
push
sbb
and
je
negl
test
aad
jge
xor
imul
dec
xor
out
jmp
lea
adc
inc
xchg
test
test
mov
sahf
and
out
fsubs
stos
enter
xor
jne
cmp
add
imul
into
rcr
xchg
mov
xor
and
jb
cmp
sub
jge
adc
ja
loopne
dec
nop
scas
movsb
cmc
scas
imul
cmp
push
stc
xor
push
test
xor
pop
or
mov
push
mov
adc
shlb
ret
in
pop
loope
rolb
jo
and
scas
mov
test
mov
and
sbb
or
hlt
test
mov
test
int3
lods
push
sub
movsl
push
sub
adc
sti
mov
cmp
iret
mov
test
mov
fisubrl
iret
lret
jb
sub
lcall
xor
in
mov
es
loopne
xor
mov
pushf
ds
push
ret
push
xor
js
push
and
adc
lds
xchg
stos
test
loopne
gs
add
dec
jp
jne
pusha
dec
test
insl
mov
add
fs
sbb
mov
lods
dec
push
xchg
push
push
push
aaa
jmp
loopne
mov
adc
inc
cmp
loopne
dec
fistps
bound
or
xchg
or
adc
loop
sbb
stos
pop
stc
push
loopne
mov
imul
rorl
sahf
icebp
jne
xchg
ja
xlat
inc
es
pop
inc
mov
hlt
and
sub
xchg
lcall
or
icebp
mov
in
and
add
outsl
test
loopne
js
mov
jmp
push
shrl
jecxz
rolb
or
inc
mov
xor
fldt
push
fbld
pushf
outsl
sub
sbb
jge
orl
pop
cmp
lret
jle
xor
movsb
mov
jo
imul
push
pop
aam
fwait
insb
cmp
arpl
fldt
idivb
sahf
shrb
adc
mov
call
cmp
js
call
and
jnp
stos
aas
loopne
fdivrs
es
dec
sub
xlat
add
sub
and
mov
sahf
adc
clc
out
xchg
decl
jmp
jo
lahf
or
in
jbe
shll
leave
lahf
insl
rorb
or
jl
lds
xorb
sahf
in
enter
sbb
daa
in
adc
andb
sub
mov
cmp
rol
iret
push
pop
mov
add
jl
stc
sarb
aad
sti
pop
pop
xlat
push
pop
jne
repz
call
jb
in
push
cmp
ret
movsb
push
sub
jle
xor
lea
fwait
dec
popf
add
jns
scas
xor
inc
dec
mov
iret
outsl
pop
pop
lods
add
pushf
xchg
pushf
xchg
jb
cltd
push
push
dec
dec
pop
push
gs
inc
mov
repnz
repnz
mov
mov
pop
inc
sar
lahf
mov
fadd
mov
inc
pop
popf
movsl
fimuls
int
mov
xor
dec
sbb
fs
xor
pop
in
or
std
aas
jae
clc
stc
add
neg
mov
ret
out
mov
and
jg
xchg
sub
xor
fidivrl
gs
lea
mov
out
loop
mov
jl
repnz
ficomps
dec
or
daa
pop
xchg
dec
cmc
aas
sub
in
divb
ja
add
inc
in
orl
pop
test
jg
sbb
xchg
pop
dec
jg
adc
adcb
jle
addl
cmp
xchg
and
or
imul
imul
mov
fxch
or
pop
xchg
cs
adc
lret
cli
push
and
jecxz
jo
or
pop
xor
pop
xchg
dec
mov
popf
jge
nop
mov
out
jmp
inc
xchg
sbb
mov
ds
incb
xlat
push
sti
cmpsb
cs
in
test
cltd
test
mov
mov
cmp
mov
rclb
pop
cmp
ja
and
push
cmpsl
shl
mov
inc
mov
push
imul
test
gs
repz
push
mov
sbb
inc
not
aad
cmovg
mov
xchg
stc
movl
jge
cmpsl
je
inc
jmp
mov
sbb
lret
xchg
mov
inc
mov
push
jae
jge
push
mov
jnp
xchg
mov
stc
lods
xchg
int3
fwait
cwtl
loopne
filds
adc
xor
ss
rorl
mov
fsubp
icebp
xor
mov
xchg
cld
sbb
cld
pop
fcompl
jle
xor
push
lret
iret
call
add
imul
out
xchg
mov
sbb
lods
mov
inc
mov
fdivrs
xor
cmp
lcall
imulb
int3
push
cmpsl
fistpl
mov
jmp
add
mov
mov
adc
jae
jns
xchg
jb
sbb
sbb
sahf
mov
ficompl
arpl
jl
mov
cmp
xchg
aas
sbb
mov
outsb
stos
jmp
dec
lahf
jo
push
adc
ds
jp
jb
aas
enter
fistpll
enter
mov
int
sti
or
mov
push
lock
call
dec
xchg
or
movsb
sbb
lcall
movsb
mov
add
cmp
inc
push
jecxz
lahf
icebp
jnp
and
mov
and
stos
les
sub
mov
aam
ror
jb,pt
xchg
fistpl
sbb
leave
clc
jne
xor
or
xorb
inc
and
jmp
stos
popl
add
and
test
lret
mov
fsubp
mov
popf
pop
lahf
mov
sbb
cmp
ljmp
leave
fld
cmp
mov
int3
jg
pusha
call
sbb
arpl
ret
cmp
into
cmovp
mov
leave
test
jmp
pop
dec
cmc
not
test
adc
movsb
xchg
xor
jnp
in
outsl
daa
loope,pt
inc
mov
mov
xor
mov
in
and
or
mov
fwait
jmp
subl
bound
mov
out
mov
imul
aas
emms
loopne
mov
cld
stos
rorl
sub
jb
lret
sarb
shlb
int
mov
cli
and
gs
sti
icebp
adc
mov
dec
xor
mov
subl
mov
popf
mov
mov
int3
stos
mov
jp
out
js
adc
movsl
subl
cmpsl
lock
sub
shll
cmpsl
cmp
aaa
daa
dec
pop
mov
in
data16
test
shll
inc
xchg
pop
cmp
movsb
and
push
call
adcl
or
test
psubw
scas
imul
es
popa
addr16
pop
cmp
in
ficoms
mov
dec
scas
rcl
and
enter
jge
dec
lea
inc
adc
es
xor
or
push
mov
push
int
xchg
shrl
xor
mov
sub
cmc
js
enter
cmc
repz
cld
es
lock
enter
jl
xchg
test
pop
push
dec
enter
fmuls
xlat
cmp
mov
test
aaa
mov
andb
inc
addl
jns
fwait
das
mov
mov
cwtl
imul
pop
adc
test
mov
mov
add
daa
lods
scas
or
bound
out
pop
sbb
jle
scas
mov
inc
xchg
in
xchg
cmp
sarl
jmp
jge
dec
lahf
mov
adc
insb
stos
fnstsw
ror
push
cmp
mov
jae
test
cli
js
cwtl
push
cltd
stos
pop
jo
nop
jle
mov
jl
rorl
and
jge
dec
push
mov
sbb
sbbb
aad
or
lock
loop
andl
addr16
aam
pop
mov
cmpsb
insl
mov
xchg
dec
jnp
out
clc
jbe
ja
inc
fwait
jbe
ds
pop
jae
scas
ds
fiaddl
pop
sub
movsb
js
xchg
leave
cwtl
andl
int3
cmp
dec
pop
mov
mov
int3
pop
cmp
ret
insl
lahf
or
mov
inc
pushf
xor
cwtl
adc
xchg
int
mov
fimuls
pop
out
jg
bound
lahf
inc
jns
xor
mov
inc
shlb
cli
dec
pmaxsw
add
mov
sub
mov
mov
xor
inc
cwtl
xor
and
iret
xchg
lods
pop
or
repz
pop
insb
pop
cmc
setae
sbb
insb
mov
sahf
fistpl
and
popf
jl
and
xchg
adc
ljmp
xor
xchg
or
js
movsl
iret
xor
push
int
sbb
rclb
inc
mov
fsubl
sbb
or
in
xchg
cmc
dec
xor
jmp
test
add
inc
fsubs
fisttpl
loopne
lods
jne
dec
push
mov
xor
sub
fistps
mov
aad
sti
fildl
and
je
ds
and
stc
xor
xchg
repz
testb
inc
outsb
dec
in
ret
jb
fsubr
mov
test
jnp
inc
jecxz
mov
push
mov
cwtl
pop
mov
inc
pop
mov
or
xchg
and
out
arpl
mov
add
and
sbb
dec
aam
shr
mov
jnp
adc
fcoml
out
adc
sub
lods
sbb
gs
insl
into
adc
mov
mov
loop,pn
jg
fsubrs
adc
and
cwtl
xor
movsl
aaa
addr16
adc
jne
mov
push
test
sbbb
inc
sahf
aaa
add
insb
cmp
adc
cmc
push
or
ja
stos
enter
xchg
xor
jno
sbb
pop
add
mov
inc
mov
inc
jbe
mov
cmp
cmpsb
xor
inc
jecxz
xchg
sub
adc
dec
in
sarl
xlat
xorb
cmp
enter
mov
arpl
jl
test
or
dec
xor
mov
adc
int
sub
pop
fidivs
xchg
adc
inc
push
fcomps
lret
lods
fwait
hlt
pop
xchg
test
adcb
ljmp
jns
cmp
pop
push
out
pop
xor
imul
ja
push
push
cli
jl
int3
cmp
or
push
jecxz
cli
and
outsl
or
loope
fistpl
negw
aad
mov
push
mov
mulps
push
fs
cmpsl
xchg
out
jo
inc
jno
add
outsl
inc
cmc
es
cld
faddl
fistpl
scas
inc
imul
into
stos
pusha
and
inc
sub
mov
pop
iret
mov
out
test
lods
mov
scas
negl
or
out
in
add
jae
inc
movsb
and
add
cmpsl
test
rolb
cmp
mov
repnz
or
mov
imul
outsb
out
repnz
or
sbb
pop
rcl
cmpsl
cmp
imul
inc
xor
mov
arpl
mov
fadds
clc
mov
inc
clc
adc
or
inc
push
insl
cli
inc
imul
push
jmp
or
ret
jae
mov
mov
xlat
dec
adc
mov
mov
or
xchg
push
jl
adc
mov
mov
aas
jae
es
shlb
les
mov
fidivl
std
addr16
mov
push
sub
sub
cmp
arpl
add
xor
sahf
jl
jb
das
lcall
sbb
xor
mov
xor
push
adc
cs
js
xchg
test
cli
outsb
outsl
add
aam
int
daa
xchg
lcall
add
mov
jge
ret
push
movsl
adc
int
sbb
je
lar
fnsave
cwtl
in
and
xchg
imul
es
es
rcll
hlt
push
jnp
push
sahf
and
inc
imul
mov
xchg
nop
pmulhw
sbb
test
out
fsubl
adc
in
mov
add
jne
mov
mov
adc
inc
call
enter
lods
add
lock
into
fucomp
cmp
lret
fwait
xor
js
rcr
or
movsl
mov
jmp
adc
pusha
test
jle
mov
cmp
cmp
mov
insl
push
inc
or
add
cmpsl
aad
push
sub
jl
cmp
push
pop
loop
jns
xchg
dec
mov
loop
jo
test
or
in
add
mov
fldl
or
mov
dec
mov
mov
fidivrl
jae
inc
lahf
pop
into
pusha
add
je
aad
popa
xchg
sub
add
mov
loop
jge
xchg
jns
inc
dec
stos
pop
xchg
push
scas
insb
adc
mulb
jns
fimull
or
hlt
jae
xor
fsubrs
xchg
sbb
sbb
adc
cmpl
fwait
mov
mov
jae
les
jns
mov
fidivrl
ds
mov
push
scas
sub
inc
sub
jmp
sarb
into
jge
ret
inc
jmp
mov
sub
dec
ds
jne
sbb
mov
sbb
and
scas
popf
insl
clc
pmuludq
xchg
dec
call
mov
jae
lods
stc
mov
xor
pop
iret
movsb
movsb
jmp
sbb
adc
mov
in
or
lcall
xchg
or
jnp
rcll
mov
enter
jbe
xchg
xchg
incl
cmpsl
aad
scas
cmc
or
loop
add
mov
push
cs
mov
xor
ret
imulb
dec
adc
ds
inc
fdiv
mov
mov
fists
out
loope
fstps
mov
adc
pop
cld
cmp
add
cmc
call
dec
sti
lret
xor
lret
push
fwait
mov
int
nop
setne
movsb
sub
xchg
mov
jo
ss
ljmp
int3
dec
xor
insb
xchg
xor
cwtl
js
imul
in
fstl
cmp
fwait
pushf
cs
scas
bound
fimull
cmc
out
nop
mov
orl
pop
stc
push
arpl
fsub
xor
pusha
je
lds
push
sbb
xorl
jge
imulb
xchg
loopne
or
dec
adc
lods
dec
inc
add
dec
pop
inc
dec
inc
ret
les
test
lcall
mov
aam
mov
out
imul
out
mov
nop
mov
scas
adc
pop
xchg
addr16
ret
out
lods
jge
dec
xchg
push
loope
test
mov
mov
xor
cmpsl
adc
dec
mov
popa
pop
pop
scas
popf
pop
xchg
lea
xor
xor
out
push
bound
or
stc
inc
mov
cmc
adc
push
test
sbb
xorl
and
push
jb
ljmp
push
push
cmpb
pop
pop
add
mov
lods
loope
mov
fisttpl
ja
mov
int
arpl
rcll
cmp
jb
lahf
adc
std
repz
test
mov
jle
add
push
cmp
js
fwait
sub
imul
lret
addr16
loope
jo
call
xchg
add
jno
and
mov
mov
in
xchg
loope
aam
pop
icebp
shr
and
jbe
xor
cmp
sti
mov
mov
push
les
push
imul
nop
test
dec
repnz
stc
add
and
cmp
mov
fdivs
int3
or
aaa
xchg
push
outsl
mov
cli
mov
arpl
fcmovbe
add
js
jae,pn
pop
loope
jo
adc
jg
ret
or
ja
dec
mov
adc
mov
arpl
push
and
jb
out
icebp
pop
enter
out
lret
xchg
mov
cmp
ljmp
push
nop
rcr
movsb
lods
jbe
fs
sbb
outsl
imulb
sub
cwtl
ret
pop
or
js
fdivrl
daa
iret
pop
in
dec
mov
cmp
out
sub
loop
imul
dec
inc
enter
push
and
aam
pop
icebp
imul
xor
push
filds
into
lahf
mov
enter
cmp
push
sti
lods
inc
pop
ss
xchg
aad
arpl
inc
dec
fistps
je
add
xchg
iret
dec
leave
nop
mov
or
notl
dec
ffreep
dec
std
push
test
mov
xor
dec
inc
jp
pop
imul
fidivrs
cs
add
xchg
out
push
jmp
call
lcall
mov
dec
out
xor
and
dec
shl
fsubl
xchg
les
loope
pop
mov
jnp
and
rclb
xlat
pushf
push
fs
and
mov
shll
mov
cmpsl
push
push
sbb
js
and
mov
jecxz
movsb
xchg
test
jmp
mov
xchg
mov
and
push
imul
lret
stc
jbe
lock
cwtl
xchg
xchg
test
jl
sbb
push
push
jae
xchg
ja
fs
lods
lcall
cmc
es
ret
push
adc
movl
sbb
hlt
sbb
cli
call
push
mov
cltd
scas
jbe
mov
add
mov
xlat
add
pop
popf
addr16
sub
jb
shll
outsl
dec
cmc
sbbb
mov
scas
pop
out
xor
lea
add
fmuls
adc
lret
pop
sub
icebp
inc
popa
daa
or
fstl
outsl
jns
dec
lret
movsl
loope
lahf
loop
sbb
or
inc
inc
imul
adc
ret
popf
lretw
loop
in
pusha
bound
mov
mov
es
das
jp
adc
mov
jg
cmp
mov
int
and
mov
enter
push
std
mov
cmc
jae
test
test
cmp
adcl
sub
mov
sbb
push
enter
insl
aam
jne
lds
push
loop
bound
clc
sub
pop
cmp
insb
jp
daa
xchg
jb
adc
mov
scas
or
adc
add
xchg
sahf
repz
lock
std
addr16
loopne
add
fwait
jecxz
call
adc
inc
and
cwtl
sbb
sbb
or
dec
jne
mov
fmulp
insl
inc
popa
mov
or
xchg
insb
addl
pushf
cmpsb
pop
mov
pop
sub
and
imul
hlt
cld
add
push
jmp
cli
icebp
xchg
push
sub
mov
dec
mov
mov
xchg
nop
shll
inc
js
scas
xorl
push
jno
add
out
andb
pop
inc
lahf
push
dec
add
insl
nop
mov
out
mov
jge
add
and
fistpll
xchg
push
or
sub
add
pop
call
data16
push
int3
arpl
dec
xchg
lock
push
push
inc
leave
xchg
push
sbb
lcall
ljmp
into
popa
pop
sti
add
and
loop
movl
adc
and
leave
pop
adc
dec
xor
rorl
iret
mov
test
add
xchg
xor
push
add
test
loop
in
enter
add
out
push
mov
in
pushf
loop
pop
jno
cmp
xor
pop
cltd
mov
cwtl
or
xchg
ja
push
jmp
cld
sbb
pop
rorb
adc
leave
loope
fsubr
shlb
fs
adc
or
clc
pusha
pop
push
das
xor
pushf
xchg
inc
pop
rorb
xchg
push
jmp
and
ja
into
add
inc
movsb
fnstcw
jg
inc
mov
call
mov
test
jecxz
mov
sbb
ja
inc
ss
xor
cwtl
sbb
pop
clc
xor
lea
mov
stos
cmc
cmp
pop
add
inc
inc
xor
add
std
std
mov
mov
or
cwtl
adc
out
push
xchg
mov
shrl
inc
pop
dec
aas
inc
sbb
mov
inc
in
add
jecxz
push
jnp
xor
pop
xor
imul
push
push
pop
and
xchg
pushf
divb
leave
int
sahf
push
lret
movsl
cmp
repnz
pop
and
lds
sbb
xor
out
sahf
fimuls
pop
loop
inc
cmp
js
sub
pop
outsb
outsl
out
shrl
aaa
dec
std
jmp
xor
lcall
or
ljmp
jne
xchg
jmp
dec
add
mov
punpcklbw
ret
hlt
sbb
cmp
lret
mov
dec
adc
mov
xor
sbb
adc
fwait
insl
lock
lods
lcall
mov
addr16
je
mov
xchg
sahf
dec
sub
fwait
xlat
pop
addl
and
scas
or
ds
les
mov
and
sarb
sbb
adc
add
sub
inc
xlat
mov
inc
pushf
shl
mov
dec
int
push
sti
leave
jo
sbb
xor
push
test
lret
sbb
dec
xchg
or
dec
mov
mov
adc
cs
test
sarl
xchg
push
dec
movsl
xor
mov
fstpl
mov
dec
xchg
mov
aad
hlt
fisubs
mov
mov
pop
aam
test
xchg
ljmp
mov
fdivs
in
sbb
mov
gs
xchg
jecxz
cmp
das
xchg
mov
adc
pushl
es
testl
sub
lea
leave
rcrb
mov
push
hlt
pop
int
fcomps
cld
jecxz
sub
lea
mov
ljmp
jecxz
mov
push
adc
pop
mov
bound
shll
cmpsl
push
mov
es
mov
mov
pop
add
pop
inc
ljmp
xchg
pushf
fcmovnbe
push
inc
pop
into
insb
cwtl
cld
mov
push
dec
fistl
push
test
mov
js
and
sbb
cli
pop
cmp
fstl
push
xchg
outsl
pop
mov
std
push
inc
cmpl
xlat
push
fsubs
inc
out
mov
loope
mov
mov
jp
aas
push
aam
incb
mov
sbb
in
mov
cmp
pop
mov
adc
inc
in
aad
mov
pop
xor
jl
aam
std
test
ret
push
adcb
lcall
jns
js
imul
mov
cmp
or
out
mov
jb
es
cmpsl
inc
xlat
push
repnz
xor
xchg
inc
test
fidivrl
in
mov
pop
xor
ss
xchg
repz
lret
mov
and
push
and
and
fucomp
test
mov
hlt
mov
pushf
jle
rolb
pop
push
cli
jmp
clc
mov
mov
daa
add
mov
dec
cld
mov
mov
mov
int
inc
std
cld
ret
cmp
cmpsl
pop
iret
sub
in
dec
cwtl
inc
ds
and
push
xchg
ret
cmp
inc
inc
lret
fisubrs
scas
xchg
push
out
fisttpll
dec
out
fadds
jmp
adc
arpl
cmc
scas
xchg
push
xchg
hlt
addr16
jge
ja
sahf
push
jo
shr
mov
in
add
jl
fisttps
cmp
cs
xchg
lods
xor
fcomps
jle
adc
cmc
outsl
test
cmp
arpl
test
mov
ja
inc
test
sbb
rol
orl
push
or
adc
add
dec
and
push
int
int3
rorl
adc
xchg
push
addr16
sahf
jns
push
pop
mov
xchg
adc
add
xchg
mov
fs
or
xchg
cmpsb
out
out
lea
xor
rolb
stos
push
in
inc
stos
cs
ret
xorl
jo
test
sbb
test
sbb
jbe
loopne
xor
inc
popf
faddl
or
cltd
push
sbb
rcl
insb
gs
mov
add
jmp
dec
fcom
mov
sub
shlb
imul
xor
insl
mov
cli
sbb
mov
pop
add
push
mov
or
lds
mov
loope
sbb
stos
popf
aas
mov
sbb
fdivr
adc
leave
add
cwtl
notb
jp
xchg
mov
rep
js
int
jne
dec
push
add
jns
mov
js
xor
testb
fwait
out
lahf
jnp
rcl
pop
dec
repz
xchg
rcrb
xor
dec
push
xor
stos
lock
and
mov
pop
jae
cmpsb
cld
xchg
push
jae
outsb
mov
inc
sarb
mov
imul
in
popf
add
mov
pop
div
mov
insl
mov
jbe
aaa
and
in
arpl
mov
pop
xlat
fwait
inc
sbb
and
jl
xor
push
fmuls
xor
iret
test
cmp
inc
repz
cmp
mov
or
cmp
xchg
in
jae
fisubs
fcmovb
lock
and
jg
pop
push
pop
cmc
inc
ja
pop
add
ja
ljmp
lods
lcall
in
daa
stos
mov
movsb
fisttpl
sbb
shlb
sbb
cld
or
push
daa
sub
push
setp
movsl
mov
adc
mov
movups
mov
jno
xchg
imul
mov
xchg
mov
js
jge
push
aad
lods
jmp
loop
adc
inc
fsubp
rorb
jge
sbb
adc
pop
les
jno
ss
and
inc
inc
jge
lahf
repz
sbb
cli
jmp
cwtl
add
aad
and
pushf
or
xchg
mov
mov
lea
fcmovbe
pop
mov
shll
sahf
adc
ljmp
test
push
mov
or
sub
push
push
fs
push
daa
sub
dec
ret
jbe
sbb
into
mov
and
mov
aam
insb
mov
es
fs
inc
jp
mov
adc
jo
and
out
cmp
mov
mov
test
sti
pusha
add
pop
push
push
out
pop
adc
xlat
or
arpl
sub
in
sub
stos
and
dec
addr16
lods
loopne
sub
adcl
push
fnstenv
pop
xor
mov
repnz
cmpsb
mov
push
push
push
in
push
insb
add
and
jp
out
xchg
js
stos
xchg
shll
inc
xchg
repz
mov
loopne
mov
aad
xor
cmp
hlt
int3
xor
push
call
fisubrs
iret
and
aad
pushf
mov
scas
mov
addr16
mov
jl
das
cli
outsb
mov
jecxz
test
dec
cwtl
xor
mov
pop
enter
sbb
pop
xor
aam
mov
add
repz
xchg
loop
inc
imul
mov
test
jmp
shl
and
out
test
cmp
clc
dec
mov
js
jbe
loope
pusha
mov
add
xchg
test
xchg
lea
shr
sbb
clc
enter
adc
cmp
jge
pop
ficomps
or
cmp
and
bound
push
sub
ret
adc
inc
dec
cld
shr
loope
inc
test
mov
and
decb
xor
repz
stos
inc
jae
jmp
ljmp
push
or
mov
mov
sub
call
push
stos
mov
ss
gs
pop
xchg
test
mov
pushf
or
add
mov
scas
dec
add
add
xchg
pop
fmul
jmp
mov
lods
jmp
lea
push
xchg
imul
mov
imul
pusha
add
inc
jl
sbb
scas
stc
mov
sbb
pop
rcrl
leave
call
lds
or
xchg
xchg
sbb
pop
xor
push
stos
xchg
lods
push
xchg
push
mov
inc
push
imul
sbb
insb
loopne
int3
ret
cwtl
pop
push
ds
mov
movsb
in
cs
mov
jle
mov
adc
xor
clc
or
sbb
std
jne
adc
cld
and
jmp
add
inc
ret
xlat
dec
outsb
sub
inc
xchg
push
shrb
scas
jg
push
or
addl
mov
loop
and
or
jge
jg
aad
jo
inc
js
sub
in
jns
test
fs
adc
out
sub
jo
pop
xchg
ret
xchg
std
push
adc
hlt
dec
fmuls
les
decl
int
xor
push
lds
pop
add
fldcw
je
mov
adc
in
xchg
es
xor
pop
push
pop
lea
stc
push
insl
mov
adc
adc
aad
clc
mov
or
filds
loope
adc
sarb
or
push
sbb
pop
xchg
pop
push
lret
adc
push
jmp
push
fisubl
aam
push
xchg
ljmp
dec
xchg
inc
inc
or
setns
pushf
sub
cmp
popf
push
sahf
es
mov
and
outsb
pop
xchg
shl
pop
leave
arpl
hlt
insb
sub
jnp
push
std
fdivl
mov
test
outsl
ljmp
icebp
adc
sub
fcomps
dec
out
mov
bound
cmpsl
lahf
or
repnz
ret
cmp
mov
dec
dec
lea
mov
mov
std
sbbl
cld
sarb
imul
insl
or
add
insl
jmp
pop
jl
fs
enter
and
daa
call
ja
mov
cli
xor
jp
mov
fistpll
cmp
pushf
stos
inc
out
scas
std
je
xlat
out
adc
or
aad
int
pop
sub
inc
mov
cmp
cmp
in
cwtl
sbb
and
cmp
dec
fsub
mov
mov
imul
dec
sub
or
inc
leave
pop
in
dec
sub
mov
shrb
incb
jne
mov
lods
or
sbb
lret
mov
das
add
inc
mov
mov
mov
stc
repz
frstor
sarl
mov
dec
cmp
add
adc
pop
dec
shl
xchg
mov
repnz
je
inc
insl
in
sub
insl
icebp
push
cmp
fisubrs
in
push
inc
cltd
xchg
imul
add
cmp
mov
cs
ss
fistl
outsl
cwtl
jbe
add
ss
mov
in
imul
loope
mov
lret
push
jmp
push
iret
jmp
fisttpl
inc
mov
adc
jl
pop
aaa
cmp
sbb
jb
and
ret
cli
data16
dec
inc
bound
jnp
int3
mov
into
stc
ret
aaa
cmpb
ret
sub
sub
push
mov
push
sub
push
cli
lods
inc
fimuls
out
or
cs
adc
sbb
daa
js
or
sti
data16
ret
int
in
xchg
xlat
fiaddl
cltd
int
call
jge
in
stc
das
xchg
inc
mov
fldt
cltd
imul
xor
insl
mov
adcl
xor
mov
sbb
aam
addr16
add
sub
pop
mov
paddsw
cmp
int
xchg
int3
add
pop
xor
inc
in
mov
rcll
les
mov
dec
jp
jmp
cmp
inc
loop
jne
popf
out
mov
pop
sahf
enter
ljmp
inc
xor
mov
jne
stos
push
xchg
dec
or
or
jge
fisubrl
rclb
icebp
pop
or
xchg
sub
ret
fdivl
mov
push
mov
cmp
fdivl
cmp
jmp
div
int
adc
cmc
repz
movsb
repnz
xchg
popf
or
xchg
sub
sbbl
push
cmp
sti
clc
cmc
pop
mov
psubd
xchg
bnd
testb
sbb
sub
mov
jo
cld
dec
cli
xchg
out
sahf
icebp
lret
jns
in
pop
mov
push
repz
dec
repnz
sub
adc
xchg
sahf
cld
lods
adc
aaa
xchg
loop
jbe
scas
xor
popf
jg
mov
out
repnz
cmp
insb
bound
xchg
jecxz
jecxz
movlps
enter
mov
and
add
ss
cmp
mov
sub
scas
push
mov
stos
or
cmp
xor
cmpsb
ss
mov
adcl
pop
pop
sbb
incb
test
sbb
inc
mov
push
scas
xchg
iret
pop
cmp
cltd
mov
loopne
dec
cmp
push
push
jne
sub
xor
loope
std
paddw
and
pop
jge
and
insl
xorb
das
mov
jnp
xchg
nop
cmp
test
lea
pop
mov
sub
int3
ja
pushf
fs
push
enter
test
push
xchg
inc
add
add
pop
daa
dec
cmpb
xor
or
mov
shl
test
les
iret
inc
add
adc
fcomip
push
inc
ljmp
inc
lcall
xchg
popa
pop
cld
pusha
pushf
add
mov
int
inc
out
inc
fidivl
out
aad
mov
repz
dec
sub
popa
in
in
loop
cmp
dec
jmp
sbb
jg
lahf
hlt
mov
or
jnp
jne
xchg
call
jg
inc
adc
xor
retw
pop
and
es
cli
popf
je
insb
shlb
mov
mov
pop
dec
inc
jnp
jp
mov
inc
cmp
cmovae
mov
pop
push
adc
data16
jo
xchg
mov
es
push
and
jns
xor
jg
ret
out
fildl
and
xchg
fcomps
insb
inc
shl
in
test
xchg
in
test
dec
lods
sti
call
adcl
xchg
xor
mov
ret
and
jg
jp
rclb
cli
dec
jecxz
cmc
and
jmp
mov
sbb
mov
jb
mov
xchg
daa
jg
adc
xchg
aaa
xchg
dec
in
jmp
sub
stc
mov
inc
jp
aad
sarl
outsb
outsl
sub
lock
xchg
cmp
insb
cmc
cmc
pushf
add
fld
sub
or
ds
lcall
andb
mov
push
inc
adc
hlt
adc
test
int3
mov
inc
inc
xchg
rolb
outsl
leave
mov
insl
pop
das
loop
push
push
cmp
xlat
sarb
jl
mov
imul
rolb
ljmp
or
lea
fidivrl
call
jle
add
adc
xchg
or
xor
mov
in
xchg
jecxz
inc
dec
inc
faddl
lret
int3
outsb
sbb
sub
subb
xchg
pop
xor
mov
add
mov
jne
ss
sbb
and
iret
outsl
mov
ja
mov
lods
test
ds
je
mov
popa
icebp
in
lcall
xlat
rcr
inc
mov
aas
lods
ja
lds
xchg
sti
je
addr16
or
xchg
mov
push
push
lcall
and
test
out
mov
jnp
icebp
ret
subb
inc
push
adc
mov
and
inc
xchg
or
and
add
sub
push
adc
adc
daa
dec
mov
mov
das
fs
sub
jecxz
and
std
xchg
ss
lea
std
add
xor
mov
jp,pt
loopne
lea
rep
out
dec
popa
sub
mov
jns
push
inc
loope
xor
adc
popf
ss
xchg
or
sahf
in
pop
mov
xor
dec
or
divb
dec
or
repnz
sub
push
mov
push
xor
cwtl
pop
or
mov
sti
scas
push
cmpsl
mov
loopne
pop
sub
lods
sbbb
sbb
sbb
jo
mov
fcmove
pop
mov
or
dec
dec
ret
lret
cmp
cmpsb
lock
scas
cmp
add
fimuls
pop
loope
lret
lcall
lret
cmp
rcrb
sub
decl
adc
jae
xorl
jge
push
inc
mov
int
loopne
repnz
test
jns
loopne
cmp
sub
push
cmp
push
xchg
pop
movsl
cmp
mov
mov
and
ret
mov
ret
test
ret
add
adc
or
leave
mov
test
sbb
in
call
pop
and
pop
or
addl
insb
lods
mov
jns
mov
pushf
mov
lret
lods
cltd
test
shll
out
lahf
push
push
jmp
repz
mov
mov
data16
mov
movsb
adc
ss
add
mov
das
arpl
cmc
push
dec
jp
scas
leave
in
dec
or
andl
and
leave
movsl
lods
and
mov
dec
icebp
sub
test
sbb
mul
dec
or
push
aaa
sub
cmp
lods
femms
adc
xor
fwait
sbb
and
inc
push
das
adc
cmp
xchg
ss
int
cmp
sbb
and
mov
or
inc
xor
inc
popf
lds
push
nop
insb
popf
sub
xchg
stos
add
adc
mov
and
fdiv
lds
movsb
fdiv
iret
cmp
push
daa
cmp
jnp
inc
jecxz
jge
int3
dec
push
shll
inc
xor
pop
gs
aam
mov
mov
repz
dec
shrb
out
mov
cmpsl
pop
lock
divb
xor
and
inc
dec
mov
loop
fldcw
sub
sub
pushf
jo
add
rolw
popa
pop
rcll
pop
or
and
test
mov
mov
fs
sub
mov
and
ss
pop
mov
mov
mov
jbe
es
sub
sbb
daa
sbbb
repz
push
or
mov
iret
push
mov
and
pop
push
outsl
xor
les
jno
popa
loop
inc
cmp
push
mov
fcoml
jae
mov
cmp
ja
popf
int3
jns
lock
dec
insb
arpl
subb
adc
mov
hlt
push
mov
mov
icebp
out
adc
fiadds
das
fimull
sbb
push
loope
adc
out
mov
ja
mov
out
push
leave
sub
mov
dec
pop
pop
out
enter
hlt
dec
insl
sub
jns
lret
arpl
jp
jae
cmpsb
and
xor
mov
jnp
pusha
nop
adcb
jl
and
test
cmpsb
sbb
addr16
xchg
cmpl
add
and
imul
fildl
push
popa
or
std
xor
cmp
out
jne
std
std
popa
repnz
cs
push
add
out
in
and
push
pop
jb
push
pushf
xchg
inc
out
or
outsb
scas
mov
les
fs
mov
aaa
ret
mov
and
leave
push
mov
cli
xchg
and
adc
inc
sub
pop
jp
fmulp
pop
bound
jno
pop
pop
xor
and
flds
adc
dec
loope
xchg
push
add
or
fcomps
ss
sub
jne
aaa
inc
mov
repnz
sbb
lods
lahf
mov
jg
sbb
and
stos
adc
andb
scas
call
xlat
mov
fs
mov
shll
lcall
mov
sbbb
test
sbbb
sub
add
mov
mov
mov
xchg
popf
fisttpl
adc
pop
es
lock
shrl
loope
push
mov
cmpb
aas
int3
jle
aas
jns
push
into
push
xor
pop
sahf
outsl
cmp
and
or
pop
test
mov
pop
push
and
aam
fldl
mov
lahf
test
xor
out
xchg
shll
gs
repz
jge
stos
jl
mov
js
xor
cmp
jl
ret
cmp
jmp
ja
sbb
push
and
dec
pop
jo
popf
enter
loopne
or
stc
roll
sub
outsb
pop
mov
lods
pop
inc
push
cmc
inc
std
mov
pop
xchg
or
add
test
iret
push
rep
es
mov
inc
push
loopne
lods
xor
fsub
cwtl
enter
sbb
dec
cmpsl
mov
gs
shl
cld
pushf
jg
ds
cltd
aas
dec
or
cmc
cmp
sarb
scas
popf
jo
mov
imul
xlat
or
lret
and
mov
cld
fstl
addb
lahf
test
test
mov
mov
stc
dec
das
xor
jb
sbb
dec
pop
sbb
loopne
pop
loopne
or
enter
int3
lea
aas
push
jl
mov
xchg
shll
dec
dec
mull
sub
outsl
xchg
mov
push
pop
hlt
or
imul
loop
out
sbb
jb
mov
add
push
xor
inc
arpl
sub
pop
stos
sti
xchg
in
sbb
lret
jl
loop
hlt
add
mov
mov
mov
and
xorb
dec
pop
pop
scas
stc
stc
sbb
out
xor
aam
les
mov
sub
addl
inc
cmp
std
fs
cmp
pop
lea
pop
xchg
sub
inc
pop
in
or
push
push
ljmp
mov
popa
adc
lcall
xor
jle
dec
repz
or
pop
pushf
or
jle
loopne
loope
xchg
insl
repz
stos
mov
mov
repnz
pop
lahf
fs
mov
repz
xlat
js
dec
mov
mov
jae
dec
sbb
test
andl
inc
dec
mov
std
std
lahf
mov
xchg
aaa
dec
xor
xor
or
bnd
das
xchg
addl
sub
push
jno
mov
loop
in
add
ja
fdivl
rep
pop
adc
cmpb
cvttps2pi
add
lods
adc
insb
fbstp
test
into
jg
or
aas
mov
cmp
loop
cs
dec
fistpll
enter
fbstp
lret
pop
dec
jl
pop
sti
lds
or
lahf
sbb
rcrl
ljmp
das
and
mov
scas
sahf
lds
jbe
mov
imull
insb
cmp
adc
sbb
inc
xor
mov
mov
sahf
dec
mov
test
rorl
vmread
mov
lods
out
cmp
cmpsb
out
or
and
cwtl
in
xor
outsb
into
cmc
bnd
mov
mov
sbb
hlt
mov
fisubrl
sbb
mov
mov
push
inc
inc
shll
shll
or
outsl
cld
pop
lret
jmp
sbb
xchg
loop
lods
mov
adc
mov
fnstsw
jg
pop
in
jg
fidivrs
iret
fisttps
es
add
adc
jo
shll
cmpsb
fnsave
repz
mov
addr16
test
pop
pop
imul
cmp
imul
jns
rcl
je
rcr
jae
insl
int3
add
aad
inc
xlat
and
dec
cli
in
jnp
icebp
lock
loop
gs
mov
addr16
sbb
inc
cmp
xchg
xor
popf
repnz
inc
mov
mov
xor
jo
xor
popa
add
push
jbe
sbb
dec
fwait
lock
adc
cmp
lret
ljmp
adc
or
and
je
and
insl
inc
adcb
jg
mov
imul
cmp
fadds
cmp
ds
mov
inc
shl
xchg
imul
out
dec
outsb
testl
cmp
push
test
xchg
pop
mov
mov
pop
cmp
and
enter
popf
aaa
dec
cmpsb
and
jmp
add
dec
daa
in
jl
pop
rorl
adc
xchg
repnz
iret
pusha
pop
jno
adc
and
xchg
sub
mov
sar
xchg
pop
xor
pop
xchg
xchg
aad
mov
lds
outsl
fisubrs
and
dec
add
mov
notb
xor
andb
dec
mov
leave
bound
fldenv
int
adc
jno
inc
xor
leave
push
pop
aam
inc
fwait
mov
cmp
test
fisubrl
cmpsb
lds
jae
xor
gs
into
sbb
lock
aaa
push
mov
push
bound
in
lret
or
add
mov
mov
sub
insl
pop
movsl
pop
mov
jne
jnp
fsubrl
out
movsl
add
jmp
pop
lahf
out
popf
cwtl
cmp
cmc
outsb
shlb
add
test
out
mov
jmp
sahf
xor
and
fidivrs
shlb
repnz
push
mov
xchg
mov
adc
adc
push
jp
inc
mov
lcall
stos
push
jg
push
push
jg
stos
js
dec
outsl
dec
int3
sbb
pop
movl
xor
mov
xchg
mov
add
add
test
mov
sahf
mov
das
jge
outsl
repnz
cmpsb
cltd
std
and
fcompl
das
int3
mov
je
int3
and
cmc
pop
xchg
push
stos
push
cmp
jbe
data16
orb
sar
fiadds
lea
jl
jle
popa
sub
cmpsb
imull
out
mov
das
pop
test
rclb
out
cmp
scas
adcb
sti
lock
js
js
sub
je
jge
mov
shll
push
negb
xor
cmp
mov
mov
jle
add
adc
mov
pop
inc
ds
jb
jno
pop
lds
andb
ret
jbe
test
jns
mov
jge
push
das
fwait
movsb
dec
and
push
jnp
pop
cmc
jg
xchg
scas
push
and
mov
mov
xor
sti
cmp
mov
push
and
mov
cwtl
scas
push
loope
jecxz
enter
xchg
lods
sub
sbb
data16
int3
pop
stos
cmpl
aam
mov
movsl
das
hlt
lcall
data16
aaa
sbb
cmp
sahf
cwtl
fstp
arpl
pop
push
push
pop
out
xor
or
aas
ds
in
push
pop
rcrb
mov
stc
or
lcall
mov
clc
cmp
push
cli
lcall
sub
mov
leave
jne
mov
popa
adc
sub
or
cmp
sarb
jge
dec
jae
push
xchg
and
jb
mov
push
aaa
gs
push
add
jno
xchg
adc
testl
test
sub
jmp
sub
shll
lods
sub
cs
stc
push
mov
lahf
out
fisubrs
dec
push
fldt
mov
dec
jecxz
imul
repz
mov
fisubl
lret
pop
aad
inc
andb
in
mov
xlat
movl
hlt
inc
push
sahf
pop
inc
leavew
lea
dec
stc
jmp
daa
push
pop
in
cwtl
lods
lods
into
adc
jae
jbe
fmull
lret
adc
div
loope
sbb
fnsave
mov
lea
mov
out
fsubs
dec
out
add
hlt
or
dec
lret
add
lret
or
xchg
lret
inc
lret
add
mov
rolb
pop
mov
and
sub
test
andb
xchg
xor
in
mov
cmp
xor
dec
test
les
sub
inc
testl
aas
scas
cmp
jo
cmp
movsb
imul
scas
cli
sub
lret
mov
cmp
or
lock
xor
ret
sbb
les
pop
mov
add
push
jl
rcrl
mov
push
inc
jecxz
inc
or
lret
fstpl
mov
pop
fdivrl
outsl
sub
push
xchg
divb
jmp
mov
inc
cs
js
adc
or
lods
movsb
mov
sahf
xor
stc
cwtl
das
test
cmp
lcall
mov
xchg
lret
xor
test
sub
cs
mov
jnp
iret
dec
or
outsb
cmpsl
adc
insb
and
add
pop
int
pop
add
orb
jno,pn
insb
neg
daa
pop
call
dec
rcrb
pop
in
or
mov
mov
cmp
mov
jo
xor
mov
ds
insb
adc
icebp
out
daa
xor
add
imull
aaa
inc
movsl
jl
es
fwait
test
jns
xor
arpl
dec
js
dec
xchg
cmpl
cld
mov
mov
sub
or
cmp
jp
xor
jno
adc
stos
test
stc
fimull
fcmovnu
jp
and
sub
sbb
xchg
lret
cmp
orl
lret
jo
scas
jle
fcoml
inc
fadds
decl
out
inc
iret
sbb
decb
gs
in
jne
mov
pop
jnp
sub
add
int3
mov
inc
cmpb
scas
lock
into
int
push
lods
aam
in
pop
sbb
gs
and
jo
mov
inc
in
bound
aas
cmpsb
cwtl
xchg
sarl
pop
stos
pop
adc
outsl
jb
hlt
mov
xor
fwait
arpl
mov
hlt
hlt
icebp
dec
cmp
mov
mov
lock
push
sbb
fstpt
add
shrb
int3
out
lahf
rol
fmuls
sub
std
int
add
push
or
enter
jge
sub
mov
dec
rcrl
cmp
outsl
cltd
std
xchg
ror
mov
add
or
sbb
cwtl
shlb
pop
cmc
cmp
arpl
cltd
scas
add
jno
int3
shrl
dec
pop
jb
in
mov
out
adc
or
sbb
lods
mov
lret
aad
pop
clc
jae
ret
or
mov
repz
wrmsr
push
push
mov
jg
idivb
xchg
jecxz
cmp
and
div
out
fisttpll
lahf
test
xchg
add
andl
int3
inc
cmp
inc
mov
inc
inc
lock
dec
or
ficompl
test
add
test
shll
dec
ljmp
mov
push
add
sahf
mov
hlt
xor
ret
pop
adc
push
sbb
jp
xchg
or
mov
push
cmpsl
push
sub
mov
xchg
lods
sbb
sub
xchg
or
sbb
cmp
imul
fimuls
push
sbb
fadds
call
sbb
movsl
loopne
shr
arpl
xor
add
fstpt
ljmp
dec
cld
fistpll
xor
enter
insb
dec
lock
adc
or
in
mov
iret
sub
ret
cmp
data16
fwait
mov
enter
lea
fistps
fucompp
mov
imul
in
push
bound
lahf
push
cmp
mov
mov
push
in
test
insl
out
sbb
mov
mov
adc
sub
mov
test
xchg
push
loope
jo
push
add
test
or
fwait
pop
mov
hlt
mov
adc
les
cmp
incb
dec
dec
jge
dec
shr
imul
lods
test
imul
jecxz
pushl
scas
mov
xor
xor
std
push
pop
lock
sbb
scas
cmovb
add
dec
adc
out
or
jg
xlat
push
in
dec
or
xchg
cs
pusha
push
call
sub
dec
cmc
sbb
mov
popa
fwait
cltd
adc
sahf
sub
cmpsb
xor
pushf
addl
js
aaa
mov
sbb
mov
jo
xchg
jo
aad
push
cs
jno
sbb
test
pop
xor
lock
mov
leave
les
cmc
adc
ljmp
xchg
add
sub
xchg
test
icebp
inc
in
in
scas
pop
movnti
mov
and
mov
sub
dec
jbe
mov
push
inc
lret
pop
shl
leave
or
andl
sbb
popa
inc
andb
arpl
push
mov
out
into
scas
bound
cmpl
loopne
pop
stos
fsts
dec
mov
jo
lods
fstpt
dec
cmpsb
scas
cmpb
push
inc
add
push
imul
xchg
jp
inc
scas
mov
stos
lods
xchg
ficomps
jl
lret
dec
sbb
cmpsl
inc
xchg
fwait
and
and
loopne
clc
jl
out
scas
ret
ja
pop
sbb
repnz
dec
js
or
dec
sub
aam
cld
loop
cli
cmp
ret
daa
mov
in
hlt
xchg
jge
imul
mov
stc
cs
loopne
cmp
sbb
mov
dec
xor
mov
stc
inc
and
addr16
sub
mov
dec
pop
push
repnz
andl
inc
movl
lahf
outsl
push
jns
js
cs
pop
stos
pushf
ljmp
inc
ljmp
inc
pop
int3
mov
sub
subb
cmp
jle
pop
cmc
jbe
enter
xchg
rorb
xor
ss
in
add
loope
ret
mov
popa
mov
cmpb
add
mov
dec
clc
cmp
in
rolb
lahf
addr16
std
sbbl
shr
push
sub
std
jne
insb
and
sub
mov
push
or
dec
je
fbstp
adc
dec
shrl
jbe
lcall
push
mov
fidivs
pop
or
jbe
jb
push
sub
xor
loopne
lret
lcall
out
push
adc
fists
pop
add
hlt
lahf
xor
xor
xchg
inc
mov
push
pusha
add
std
jle
jmp
hlt
test
mov
nop
mov
adc
lcall
verw
push
not
stos
dec
sbb
jl
aad
out
push
jne
faddp
enter
push
clc
xchg
ret
jge
in
mov
pusha
mov
push
popf
pop
xor
mov
sub
lahf
push
test
test
scas
sub
aaa
xchg
scas
pop
or
ret
pop
push
aas
or
mov
jge
dec
pushf
mov
push
push
popf
xchg
sub
daa
pop
jecxz
push
int
outsl
icebp
pop
mov
mov
testl
fsubl
push
andb
xchg
in
scas
shl
sub
js
in
out
fidivrs
add
in
add
ret
arpl
movb
movsb
pusha
mov
rol
ret
mov
sbb
mov
je
pop
xchg
insl
push
ret
call
xchg
jg
pop
movsl
or
roll
jmp
mov
inc
xor
negb
dec
dec
xor
inc
and
lret
scas
mov
pop
xchg
jne,pt
sbb
ds
das
shll
push
in
inc
inc
mov
or
dec
inc
pop
jnp
mov
mov
fs
iret
cmpsl
bound
push
out
test
mov
cmp
imul
inc
repz
shrb
xchg
pop
loop
dec
je
mov
je
movsl
out
mov
popfw
xchg
aas
mov
mov
aas
mov
jno
mov
das
mov
pop
mov
rcl
or
andl
jg
clc
push
outsb
out
cmp
fstp
xchg
insl
fisubl
inc
fdivrp
aad
or
mov
scas
or
bound
pop
arpl
popa
add
adcl
dec
mov
stc
arpl
xchg
adc
xlat
xor
cmp
push
xchg
pop
xor
fincstp
ss
xlat
out
add
loopne
xor
xchg
push
fwait
xor
ljmp
push
out
adc
mov
cmpsl
jnp
lock
fdivrs
dec
or
and
rcr
adc
push
mov
xor
icebp
clc
dec
repnz
iret
mov
jg
insl
inc
mov
cmp
ret
sub
push
and
mov
inc
lea
stos
mov
xchg
aas
leave
xor
hlt
mov
mov
sub
sbb
sbb
mov
cmc
cmp
push
cmp
or
push
jge
bnd
mulb
lahf
popa
mov
jne
inc
shr
cmp
ja
sti
sbb
repz
cmp
jnp
jae
scas
jo
and
cmp
pop
jbe
mov
aad
test
ror
xchg
mov
pop
stos
push
shrb
and
cmp
inc
lcall
or
dec
or
loope
filds
int
adc
push
bound
mov
fimull
mov
fldl
ss
adc
jbe
popa
add
push
out
mov
fwait
or
test
cmp
scas
fbld
push
pop
push
mov
sbb
xor
push
aaa
add
popf
xchg
mov
fs
jo
dec
dec
push
dec
inc
dec
dec
addb
add
jle
sbb
jp
sbb
cmp
sbb
cmp
cmp
rcrb
sahf
xor
push
inc
mov
pop
jo
jp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
pop
popa
lahf
imul
fwait
stos
les
mov
sbb
push
sbb
mov
loop
jp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
.byte
.byte
cmpsb
int3
.byte
