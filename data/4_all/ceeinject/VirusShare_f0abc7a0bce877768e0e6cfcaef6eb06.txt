call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
inc
ficoms
sahf
xlat
pop
cli
outsl
repz
sarl
dec
rcrb
sub
push
xchg
out
jbe
inc
ficoms
es
bound
ljmp
cs
mov
xchg
xchg
xor
jle
dec
pop
sbb
aas
imulb
mov
out
aad
mov
jns
insl
stc
scas
sub
push
mov
test
testl
ret
cmc
pop
jnp
dec
jns
out
loop
test
push
push
inc
lds
sbb
sub
jbe
outsb
mov
jne
or
lods
iret
sbb
cs
divb
add
shrl
mov
inc
es
jb
xchg
jnp
sub
pop
mov
jns
xchg
add
push
out
inc
lret
jle
sbb
or
movsb
cmpsb
pop
aad
adc
incb
xor
inc
xchg
or
addr16
xchg
mov
sub
test
nop
fnsave
data16
pop
mov
scas
es
mov
es
in
out
xchg
filds
dec
mov
jp
pushf
data16
and
push
popf
push
jae
mov
negb
ret
inc
ret
push
mov
jmp
jbe
mov
fistpll
jb
and
xchg
aas
xchg
sub
pop
mov
loope
loop
data16
mov
adc
sahf
push
outsb
out
testb
cmpsb
ds
xchg
xchg
out
data16
jbe
inc
ficoms
es
push
outsb
out
testb
cmpsb
ds
xchg
xchg
out
data16
roll
out
enter
jg
or
addl
jl
pop
mov
les
es
pop
in
adc
or
mov
sub
and
or
push
pop
ret
imul
xchg
sti
add
jns
outsb
popf
shrb
sbb
mov
or
insb
sub
int3
pop
mov
addb
mov
test
sarl
inc
xlat
imul
cli
jge
data16
sbb
mov
push
push
sub
out
out
out
inc
sub
mov
cs
daa
push
lcall
stc
inc
out
sarl
jmp
jmp
leave
in
adc
add
rolb
arpl
push
data16
adc
lahf
pop
je
mov
jl
adc
pop
xchg
inc
cmpsb
sbb
sub
pop
fdivrs
pop
nop
lahf
mov
cmpsb
shlb
pop
sbb
jle
mov
lods
dec
mov
add
mov
push
aam
ljmp
sti
popf
jae
xchg
divl
lods
pop
pop
xchg
xor
popa
lea
imul
repnz
jno
or
ret
mov
or
sub
push
sub
clc
std
inc
jo
idiv
pop
push
int3
jb
out
mov
push
jae
mov
pushf
enter
push
cmpsb
sar
mov
addl
pop
push
mov
ja
lods
insl
ss
incl
fnsetpm(287
push
xlat
dec
or
sbb
mov
testl
mov
xor
ret
sub
mov
add
pop
mov
xchg
cmp
xor
sbb
ror
lods
xorl
dec
incb
add
movsl
and
or
jns
cs
inc
outsl
add
xchg
out
fwait
and
fidivrl
jae,pt
mov
inc
cmpsb
inc
movsb
push
aam
std
sarl
add
call
fstpl
add
jbe
push
sti
mov
cmp
cs
adc
jno
fcmovnbe
lcall
xchg
xchg
lahf
dec
push
enter
in
das
ret
inc
cmp
das
add
jp
pop
orb
sub
pop
or
mov
scas
mov
andl
scas
adc
add
cmp
sub
movsl
ss
mov
xchg
fnstsw
pop
sbb
adc
pushf
movsb
jle
cmpsb
jecxz
vpcmpeqd
cld
xchg
mov
sarl
jg
movsl
mov
in
stos
mov
push
push
sub
fnstsw
in
or
popf
mov
or
outsl
mov
jae
lret
jge
sbb
xchg
xchg
cmp
adc
pop
mov
push
xor
mov
loope
jmp
mov
mov
jbe
dec
lea
pop
addb
cli
out
mov
jmp
jecxz
cmp
pusha
push
test
mov
cmpb
fs
gs
xchg
cli
lock
pop
dec
ja
xor
jmp
loopne
and
adc
fs
inc
outsl
jg
jge
imul
jno
rcl
in
mov
lock
inc
push
fimuls
pop
xchg
mov
fnstcw
or
jl
push
fldenv
jle
movsb
cmc
ds
out
mov
mov
ret
adc
icebp
movsb
inc
scas
sub
jge
repnz
daa
add
jmp
incl
loope
mov
pop
js
dec
cmp
aam
and
mov
inc
dec
rcl
jae
idivl
call
aaa
cmp
pop
and
je
ljmp
movsb
sub
xchg
add
xchg
shrl
cmp
push
mov
fwait
xlat
out
movl
iret
outsl
ucomiss
lcall
js
cwtl
icebp
into
push
jo
cmp
loope
mov
and
xchg
mov
xchg
pop
jb
repnz
in
add
icebp
in
scas
lea
insl
add
mov
pop
cmpsb
ljmp
cmpsl
mov
repz
sti
jp
out
dec
xor
addb
jge
jb
mov
out
sub
inc
popa
jo
jmp
pushf
das
aam
sti
aam
aam
rol
cmpsb
mov
inc
movsb
push
jge
stc
pop
into
js
pop
mov
jae
push
and
dec
in
movsb
mov
fldt
push
loope
jne
mov
mov
sti
adc
xor
xchg
in
jbe
xor
mov
dec
arpl
sar
dec
sahf
ja
pushf
xchg
in
mov
lahf
mov
ror
out
shll
lret
xchg
cmp
aam
jbe
rol
icebp
push
call
call
pop
adc
fistpl
sahf
sbb
xor
mov
jbe
xchg
mov
mov
pop
pop
push
sahf
inc
ljmp
mov
dec
fsubrp
inc
lcall
ljmp
mov
sbb
jne
jg
sarb
cwtl
jg
push
add
jmp
in
stos
fcoms
enter
es
cmp
or
mov
into
out
sbb
xchg
mov
lret
sahf
call
or
clc
inc
adc
mov
cmp
imul
jo
rcpps
ss
cmpsl
xor
mov
xchg
mov
or
xchg
xchg
mov
leave
rcll
insb
sub
jecxz
push
jl
pop
xor
xor
lock
sbb
mov
mov
data16
push
out
test
and
into
fisttps
loopne
dec
stc
dec
push
fwait
cli
scas
rcrb
adc
mov
mov
sbb
stos
jbe
lea
xchg
les
mov
stos
inc
lret
jecxz
dec
fidivrl
cmpsl
mov
mov
scas
jnp
leave
xchg
mov
mov
out
cmpsb
mov
sbb
aas
arpl
daa
adc
dec
shll
sbb
movntq
push
test
add
fwait
sahf
or
adc
sahf
jmp
mov
and
jo
xchg
lods
nop
out
or
push
test
es
and
push
xor
sahf
fwait
test
test
pop
inc
fs
cli
mov
dec
mov
pop
incb
jae
adc
add
loop
push
mov
xorl
cwtl
adc
adc
dec
repz
mov
fmuls
xchg
fists
jns
push
in
push
dec
xchg
jnp
ljmp
add
popa
and
cmpsb
pop
pop
imul
out
mov
stos
cmp
inc
xchg
xchg
sub
pop
repz
mov
movsl
dec
jle
sub
pushf
push
loop
push
cmpsl
mov
jle
out
add
out
insl
inc
aam
pop
test
stos
popf
and
test
mov
inc
xor
out
pushf
shll
mov
loopne
cmpsb
push
lcall
push
pusha
movsb
test
jns
or
scas
adc
xor
mov
and
std
mov
in
ljmp
dec
jmp
not
sarl
mov
fwait
xchg
loop
ss
adc
test
push
cld
clc
enter
inc
dec
outsl
push
nop
shlb
addb
out
dec
test
xchg
sbb
sahf
mov
test
in
into
xchg
enter
ret
stos
loopne
rcr
add
fwait
rcrb
pop
test
xor
pusha
dec
add
gs
mov
mov
and
sbb
or
loopne
xchg
cmp
add
es
popf
lret
sub
pop
dec
sub
ret
jmp
inc
jns
xchg
ret
inc
push
clc
pop
jle
push
push
jnp
and
gs
xor
insl
mov
sub
scas
test
test
xchg
fisubrl
sbb
mov
xchg
mov
dec
je
or
pushf
and
jp
shl
mov
add
and
push
sbb
inc
aam
hlt
repnz
pop
push
sbb
ds
add
inc
cvtps2pd
ss
cmc
sbb
mov
cs
or
push
add
and
leave
add
lock
out
adc
test
lods
aaa
cmp
in
mov
in
fnstenv
pushf
xchg
push
in
outsb
and
mov
loopne
lods
pop
inc
cmpl
xchg
sbb
ja
filds
adc
sbb
dec
jmp
mov
mov
movl
push
push
push
mov
jle
mov
out
cmpl
andb
cs
fwait
jg
ja
sbb
xchg
adc
addr16
pop
mov
movsb
lret
fmuls
and
inc
mov
cmpsl
or
and
test
cmp
push
mov
cmp
clc
clc
nop
fnstcw
fs
inc
cmpsb
outsb
xchg
sbb
and
rorl
xchg
mov
mov
fists
dec
xor
cmp
mov
mov
loop
or
mov
jle
int
cs
or
cwtl
cmpsb
les
stos
scas
xchg
xchg
push
cmp
lods
push
loopne
lods
fildl
mov
mov
fwait
add
fistpll
inc
adc
es
ds
pop
pop
cmp
dec
sub
cmpb
les
adc
jns
fwait
in
movsb
sub
pusha
lcall
in
std
in
pop
movsb
scas
mov
adc
addr16
fsubrs
icebp
jp
mov
mov
ss
xchg
mov
pop
hlt
repnz
test
nop
xchg
and
xchg
lock
lods
test
mov
das
push
push
push
pop
sbb
sbb
pop
mov
jo
out
jno
push
cmp
pop
push
xchg
jb
push
mov
dec
data16
pop
jmp
fldl
pop
mov
adc
or
adc
or
std
test
xor
and
lods
pusha
cmp
je
dec
xor
movsb
jae
pop
stos
lds
xor
jo
cwtl
and
push
rclb
les
inc
push
out
lods
outsb
pop
js
out
rcr
dec
mov
call
dec
adc
and
fsts
inc
adc
inc
inc
pop
in
mov
insl
sbbl
aam
gs
lea
pop
into
stos
xchg
mov
xchg
andb
mov
jg
ss
hlt
pop
aas
xor
and
cs
ss
enter
clc
inc
shll
notb
aam
xchg
stc
data16
xor
sub
pop
dec
in
mov
jp
mov
iret
and
xlat
sub
out
xchg
push
pusha
shll
enter
cmp
or
stos
xchg
xlat
ss
mov
cmc
mov
outsb
or
mov
lods
addb
mov
sbb
dec
int3
xor
xchg
add
inc
loope
fsubrs
sub
or
or
add
loop
or
or
add
punpcklwd
pop
adc
in
fistl
inc
daa
aaa
push
xlat
enter
pop
mov
mov
in
jb
int3
stc
mov
push
or
orb
lret
aaa
dec
mov
xchg
out
push
push
ljmp
inc
into
lock
adc
lea
sarb
lret
test
or
shlb
lock
ds
mov
inc
ss
fs
push
push
nop
adc
lods
mov
aas
cli
cmp
push
ja
mov
xchg
rcr
pop
jl
mov
mov
pop
inc
nop
enter
jmp
ljmp
mov
lea
out
push
pop
pop
xchg
push
es
addr16
mov
mov
repz
jne
daa
loopne
mov
fcomi
xchg
out
cmpsl
add
fisttpll
cmpsb
roll
pop
adc
imul
and
jmp
cld
ss
xchg
enter
inc
mov
mov
push
fisubrs
or
sub
fwait
push
inc
jo
movsb
imul
shll
ror
xchg
int3
push
int3
sbb
dec
cs
jge
cmp
push
and
cmp
sbb
sub
push
cmp
jns
outsl
mov
jmp
mov
mov
movsb
out
xchg
and
addr16
inc
movsl
dec
stos
dec
mov
imul
fwait
lret
xchg
mov
jp
es
das
adc
pusha
call
lock
adc
mov
pop
out
xchg
loope
cwtl
mov
pop
mov
adc
cmp
xchg
add
cmpsl
xchg
scas
mov
jg
lock
mov
mov
and
xchg
popa
shll
mov
divb
or
mov
jecxz
int
sbb
ret
xor
push
ficoms
pop
popf
int3
je
rolb
fcoms
inc
hlt
jo
std
dec
shll
cmpsb
mov
xchg
push
mov
and
mov
das
jmp
and
xchg
pop
shrb
daa
adc
xchg
pop
fbstp
movsb
or
sti
xrstor
or
out
movsb
mov
add
or
addr16
sti
push
mov
cmp
rcll
jmp
rcrl
lahf
pop
inc
adc
fisubs
dec
out
add
jle
push
repz
sub
scas
outsb
push
loop
in
sub
clc
insl
mov
notb
dec
mov
cmp
inc
push
stos
add
or
icebp
and
inc
xor
mov
jge
out
inc
add
dec
fcmovnu
sar
mov
aas
cwtl
fistl
mov
and
sub
pop
pop
clc
popl
gs
in
xchg
cltd
cmpsl
scas
add
popa
imul
xchg
sarb
dec
stos
out
das
sub
scas
mov
fwait
call
mov
sti
adc
clc
leave
or
adcl
loope
clc
adc
lods
cs
mov
fmull
sbb
test
aam
xchg
cmp
cmp
sbbl
push
sar
cmp
aaa
sti
xchg
fnstenv
and
xchg
ljmp
insl
sub
aaa
and
pop
xor
xchg
mov
mov
mov
pop
adc
cmp
and
jle
lea
xchg
lret
sub
xchg
ret
jp
sbb
fistpl
xor
adc
out
adc
dec
mov
mov
cmp
dec
push
mov
xlat
sub
mov
mov
cmp
jecxz
addb
xor
les
jle
sbb
mov
push
mov
addl
sahf
dec
mov
repnz
adc
push
adc
out
notl
rorb
mov
push
xor
frstor
scas
add
sub
mov
jg
movsl
add
jo
push
push
aas
mov
xchg
sbb
sub
push
and
mov
ffreep
fwait
xorb
inc
call
js
call
dec
sub
movsb
fsub
jp
sbb
vmovupd
lods
rcr
repz
test
cmc
shl
pop
out
sub
add
sbb
in
xchg
cvttps2pi
adc
mov
mov
and
jns
bound
fisttps
in
int3
jp
xchg
cwtl
or
loopne
les
loopne
sbb
or
pop
fisubs
xchg
fidivrs
js
mov
out
stc
and
cltd
xchg
xchg
mov
push
inc
sub
inc
inc
mov
mov
mov
jp
mov
das
shll
fisttpl
mov
jl
in
aaa
inc
subl
aas
cmp
mov
inc
mov
push
lods
insl
sub
stos
repnz
scas
lcall
aad
add
test
mov
or
mov
lcall
mov
dec
jmp
in
aas
pop
std
dec
dec
add
movsl
cwtl
mov
enter
ja
pop
movsb
iret
in
jmp
mov
outsb
pop
in
sbb
shr
adc
div
pop
mov
mov
pusha
inc
shl
cmc
sub
int3
outsb
loope
into
notl
cltd
mov
cwtl
repz
cmp
pop
mov
push
inc
sbb
das
iret
mov
xchg
xchg
xor
in
push
clc
cmp
stos
jmp
xchg
daa
or
jo
xor
shrl
outsb
mov
mov
aad
aaa
int
mov
cwtl
push
mov
ret
scas
fcmove
aad
popa
sub
dec
mov
add
call
shlb
xchg
and
mov
push
push
sub
and
or
lock
push
faddl
in
scas
mov
mov
lret
xor
sub
sbb
scas
add
push
cmp
das
sub
js
xchg
lods
addr16
mov
outsb
inc
inc
dec
adc
ss
in
mov
pop
test
dec
fwait
mov
std
pop
ret
jg
pop
lea
xchg
pop
shll
inc
mov
fadd
lcall
push
movsb
test
sbb
cli
jle
in
pop
std
xor
fstps
stos
fmul
pop
les
bnd
clc
sbb
adc
cld
ja
ret
add
jl
jb
fs
scas
add
ja
or
lret
xchg
mov
inc
imul
mov
adc
cmp
mov
cld
sbb
pop
jne
stos
int
mov
stos
jne
and
xchg
jmp
pop
adc
loope
test
sbb
mov
pushf
mov
movsb
mov
mov
mov
lcall
jmp
and
repz
mov
mov
daa
jp
xor
scas
or
scas
pop
adc
xchg
add
call
add
out
rcll
cs
lods
std
clc
mov
mov
xchg
test
jl
jbe
fimuls
mov
movsl
jmp
out
inc
mov
cltd
sarb
cwtl
cld
fsubrl
pusha
jo
lret
add
adc
daa
inc
sbb
outsl
push
prefetcht2
pop
out
push
mov
hlt
push
rorl
inc
xor
divl
adc
jecxz
xor
fsubrs
out
cltd
mov
cmp
mov
hlt
movsw
jle
sub
movsb
imul
sbb
clc
sub
jb
fisubrs
ret
sbbb
das
test
rorb
in
pop
lret
into
and
insb
gs
std
aad
add
and
mov
loopne
cmpl
int3
aaa
das
mov
hlt
daa
sbb
loop
jno
pop
sub
lret
scas
out
pop
and
mov
adc
cli
fidivl
jg
sahf
les
xchg
mov
add
hlt
mov
mov
add
mov
ret
push
in
mov
inc
out
fimull
mov
push
sbb
push
cmp
cli
jge
add
or
cld
lds
mov
cmpb
lea
xchg
xor
inc
cmp
pop
arpl
mov
jbe
or
lods
xor
cmp
push
mov
jge
and
sub
dec
push
mov
inc
nop
push
or
scas
lahf
mov
push
add
out
inc
lcall
add
push
sarb
sahf
cmpsl
mov
adc
test
push
xor
sbbl
fiaddl
int3
pop
and
adcb
xor
or
dec
sar
jecxz
xor
cmpsb
mov
insl
add
or
out
jns
jns
mov
push
mov
sub
mov
inc
pop
test
mov
lcall
lods
inc
lahf
inc
fs
lret
mov
jle
sub
sbb
mov
jp
add
mov
pushf
inc
ljmp
pop
xchg
mov
adc
xlat
out
icebp
fidivrl
xchg
add
js
repnz
push
dec
or
leave
jb
divb
and
stos
dec
mov
gs
mov
dec
xorb
mov
out
pop
jecxz
cld
repnz
mov
lds
mov
cld
sahf
imull
mov
inc
aam
sar
mov
loopne
dec
mov
inc
add
adc
add
xor
fldl
pop
and
dec
or
out
xchg
xor
movb
pushf
jns
fmuls
cmp
push
mov
pop
jns
adcl
lods
fisubs
into
pushf
push
ljmp
xchg
mov
mov
xchg
sub
pop
add
xor
repnz
pop
inc
or
cmp
xchg
es
repnz
cmp
ljmp
bnd
andl
rcrl
add
mov
or
data16
test
test
mov
mov
and
lahf
mov
dec
mov
outsb
aam
in
dec
dec
push
inc
lods
lcall
jle
mov
sarl
jne
sbb
push
stc
mov
push
lcall
ficoml
dec
shll
adc
dec
repz
rolb
mov
or
xor
shll
out
mov
jnp
aas
loop
jecxz
fbld
arpl
roll
pusha
sub
sub
loopne
and
mov
add
mov
inc
hlt
int
data16
push
lods
xchg
out
stos
subb
pop
subb
push
scas
es
push
outsb
out
testb
cmpsb
ds
xchg
xchg
out
data16
jbe
inc
ficoms
es
push
outsb
out
testb
cmpsb
ds
xchg
xchg
out
data16
jbe
inc
ficoms
es
push
push
jle
inc
pop
shrb
cmpsb
daa
mov
subb
mulb
jb
inc
notb
es
mov
push
outsb
out
pop
in
pop
mov
icebp
stc
loope
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
xor
add
adc
scas
xor
and
pop
pop
imul
xchg
stos
jecxz
repz
ret
sti
shr
and
xor
add
adc
arpl
dec
inc
jnp
imul
xchg
stos
and
repz
ret
mov
xor
add
adc
arpl
dec
inc
jnp
imul
xchg
stos
jecxz
pushf
movsb
mov
mov
push
add
stos
pushf
clc
test
mov
jl
or
push
cmpsl
sbb
inc
xchg
repz
sub
mov
aam
fdivs
mov
jae
je
mov
repnz
xchg
stos
pop
mov
add
inc
call
cmp
je
jnp
push
mov
mov
cmpsb
add
bound
push
xor
inc
pop
dec
hlt
push
xchg
cs
ss
inc
stc
sti
sbb
mov
inc
add
data16
shl
jecxz
in
aam
pop
jae
shrb
dec
addr16
push
inc
out
imul
shlb
int3
hlt
rcrb
mov
push
push
mov
out
inc
mov
stos
mov
jle
xchg
push
ljmp
adc
arpl
dec
inc
jnp
imul
xchg
stos
jecxz
repz
ret
sti
roll
push
jp
arpl
add
xor
incl
mov
xchg
stos
inc
sbb
cmp
arpl
ss
cmp
imul
loop
sbb
popf
mov
inc
push
xor
push
jg
das
pop
jae
inc
jnp
imul
xchg
stos
jecxz
repz
ret
sti
shr
and
xor
add
adc
arpl
dec
inc
jnp
imul
xchg
stos
jecxz
repz
ret
sti
shr
and
push
inc
sahf
mov
popf
xchg
jno
test
movsb
lods
aam
adc
and
into
adc
sub
xor
jb
sbb
rol
xor
add
jb
popf
dec
jl
aas
cmp
push
sub
ficoml
sub
shrl
sbb
xor
or
fwait
jns
pop
and
imul
mov
sbb
js
imul
lods
sbb
inc
jge
popf
dec
adc
mov
xorl
int
out
out
push
cmp
aas
insl
jg
subl
daa
je
xchg
stos
push
sarl
jno
jo
adc
js
push
les
mov
push
adc
enter
inc
repz
and
out
xor
mov
sbb
stos
mov
inc
ljmp
xor
popf
int
cmp
test
or
push
push
xchg
movsb
test
shlb
stc
pop
scas
sub
jbe
xchg
fdivp
xor
std
rcr
and
imul
test
or
jb
in
daa
call
dec
in
jl
rol
rorb
push
fs
xchg
loopne
lods
and
cmp
xorl
mov
imul
and
sbb
scas
gs
inc
jae
push
fstpt
push
mov
mov
push
jl
pop
mov
dec
xor
xchg
fistps
subb
mov
mov
mov
mov
rol
dec
aas
outsl
lret
dec
pop
push
call
lock
mull
mov
pop
fucomip
out
push
sbb
in
fsubrs
dec
ficomps
mov
or
call
inc
inc
rcl
ss
lcall
pop
ljmp
xchg
mov
and
fadd
lahf
rclb
cwtl
jge
fadds
pop
outsb
loop
pop
jp
movsb
rorl
jp
dec
inc
push
jnp
int
jns
mov
jg
repnz
out
xor
jbe
repz
scas
xchg
or
sub
cmp
stc
gs
push
jbe
and
mov
cwtl
mov
ret
inc
loopne
into
jo
data16
push
data16
xor
and
je
sahf
hlt
push
icebp
loop
mov
and
jg
pop
pop
push
outsb
add
xorb
lret
rorl
aad
sub
in
mov
mov
sub
dec
stos
fdivs
test
lahf
pcmpeqw
xchg
cmpb
xchg
and
push
inc
pop
or
inc
adcb
mov
ret
push
dec
insb
or
dec
pop
xchg
repz
mov
fwait
jne
adc
sub
daa
jmp
mov
or
inc
out
pop
sbbb
fiadds
fnsave
dec
addl
mov
rorb
fldenv
mov
nop
out
cmpb
xor
push
inc
mov
pop
outsl
jmp
sbb
sbb
xor
adc
sbb
fistpl
movsb
cld
add
sahf
fbstp
push
pop
fcomps
daa
pop
pop
in
jp
test
cmp
pushf
int
in
imul
aaa
icebp
cmp
cld
pop
and
movsb
in
mov
jae
mov
faddl
test
mov
pop
mov
mov
cltd
or
lahf
mov
pop
sahf
adc
push
cmp
push
sub
ss
dec
js
jmp
cmpsb
mov
add
lahf
in
mov
sbb
cs
hlt
add
push
mov
popa
mov
lret
lea
ds
inc
add
push
or
add
xchg
push
sar
dec
push
scas
lods
xchg
lock
xor
pop
inc
fildl
or
je
pop
mov
decl
lods
lcall
jne
mov
popa
shrb
sti
mov
push
sub
lds
mov
dec
xchg
sub
or
or
pushf
mov
mov
add
sub
mov
cmp
outsb
je
ja
ror
push
rcl
cs
icebp
jne
push
hlt
push
mov
test
into
sub
push
push
or
dec
adc
and
cmp
mov
ja
and
mov
bound
xchg
out
add
fidivl
push
xchg
jb
xor
push
test
cmpsb
fisubrs
mov
sahf
sti
xlat
lret
or
push
in
jmp
lds
fisubrs
and
scas
mov
sub
adc
in
addb
pushf
sub
push
int
fucompp
ljmp
int
lds
lods
fidivrs
adc
sub
subl
mov
cmp
jne
and
hlt
inc
aad
fbstp
lods
mov
adc
and
fs
cs
inc
mov
jmp
fbld
push
gs
pop
push
push
sbb
fdivrs
in
and
bnd
pop
aaa
xchg
inc
shlb
dec
mov
inc
test
movb
adc
sti
je
cs
pop
fidivl
pop
push
repz
mov
out
enter
or
xchg
pop
lret
int
inc
sub
clc
shrl
add
out
icebp
mov
rclb
das
mov
add
mov
test
dec
inc
ljmp
push
mov
mov
scas
ljmp
mov
psubq
pusha
scas
xchg
lods
cmp
fimuls
cmpsb
mov
or
sar
jnp
xchg
mov
hlt
mov
loopne
jecxz
mov
push
incb
arpl
subl
lret
rorb
imul
pop
mov
imul
and
mov
jb
insb
mov
mov
in
or
out
jecxz
inc
pop
loopne
fs
shlb
inc
push
push
inc
mov
lcall
pop
push
xchg
or
jge
ficomps
xor
imul
mov
mov
pushf
dec
push
scas
or
insb
xchg
out
nop
leave
fistpll
mov
mov
ja
rcl
push
je
xor
pop
fidivl
mov
adc
es
mov
iret
lea
sarl
nop
mov
rclb
add
les
lock
aad
mov
mov
sub
mov
dec
cwtl
enter
fcomi
lods
xchg
lea
xlat
sub
shlw
push
or
insl
inc
or
mov
dec
mov
xchg
fdivrs
aad
lret
fimuls
mov
push
mov
aad
sahf
or
mov
loop
stos
mov
pop
call
mov
test
mov
push
cmp
mov
and
out
fsubr
outsb
cwtl
or
rcr
xor
dec
ljmp
inc
mov
cmpsb
cmp
mov
xor
or
fnstsw
push
sub
push
fmuls
repz
mov
inc
jp
mov
add
repz
dec
push
adc
or
push
add
ds
out
push
xor
mov
xor
into
lret
jne
sbbl
ret
mov
dec
adc
pop
xchg
xchg
mov
nop
popa
xchg
inc
mov
dec
dec
adc
push
mov
int3
jns
fsub
imul
sarb
lret
shlb
std
daa
cmp
das
push
lcall
pop
ret
std
daa
pop
sub
pop
rcrb
outsb
add
adc
movsb
push
dec
xchg
stos
movd
or
lock
and
push
pop
sbb
out
inc
lret
test
enter
xlat
xor
adc
inc
cmp
jp
ja
jbe
rcrb
jge
and
jmp
ret
inc
xchg
pop
jne
xchg
lds
cli
pusha
mov
cli
or
mov
fnstcw
inc
xor
jmp
cld
bound
cmp
adc
jge
mov
scas
in
xor
adc
lea
fidivl
xchg
imul
inc
faddp
adc
rcl
stos
cli
ret
sbb
mov
jle,pn
and
jl
or
mov
sahf
mov
enter
out
mov
xlat
xchg
cltd
jns
jmp
sar
jle
dec
enter
or
dec
icebp
scas
outsb
cmp
xchg
mov
loopne
out
mov
cmc
loopne
pop
nop
ficomps
adc
jae
xchg
mov
xchg
call
lock
sub
out
push
adc
insb
sub
mov
in
out
sarl
mov
shrb
movsb
and
mov
sarb
popa
mov
mov
inc
mov
and
mov
shll
and
sbb
cmp
rcl
and
lahf
jne
inc
jb
ss
ret
sbb
mov
push
jl
dec
jo
or
mov
and
pop
push
ds
test
push
cmp
pusha
dec
jb
dec
iret
adc
adc
inc
add
jg
aad
xor
iret
xchg
sbb
lret
fisttpll
dec
push
fdivs
das
mov
jne
cmp
cld
mov
dec
stc
inc
cltd
insb
sub
push
push
cli
mulb
dec
xchg
repz
xchg
dec
scas
in
xor
adc
cmp
mov
ret
jp
xor
push
dec
faddl
mov
pop
loope
mulb
rcl
lahf
nop
int
ja
xchg
xor
int
imul
push
and
add
mov
fsubs
inc
xchg
jne
sub
imull
inc
xchg
cmp
inc
stc
mov
shll
jmp
xchg
ret
aad
les
lods
mov
loop
lods
sbb
jmp
int3
in
fiadds
outsb
pop
js
cmp
pop
lret
sbb
in
cwtl
adc
jg
sbb
pop
hlt
nop
mov
nop
cmp
add
push
xchg
add
pop
xlat
push
test
stc
dec
imul
loop
jmp
and
movsl
pusha
fcmovnu
shl
sub
pop
xchg
sbb
lds
inc
into
gs
mov
stos
sbb
push
scas
sbb
pop
loopne
ret
pop
mov
or
shlb
ret
pop
lea
xlat
mov
adc
ret
in
push
outsl
sub
je
sbb
mov
subl
insl
lea
shll
xor
int
mov
dec
aam
and
leave
xchg
mov
mov
popa
mov
mov
pusha
add
imull
cmp
icebp
mov
dec
ja
push
lea
sbb
sbb
add
les
dec
fadd
out
sub
xor
dec
mov
stc
out
out
mov
adc
pop
pop
outsb
scas
lods
sti
xor
aas
push
aam
or
inc
dec
dec
movsl
cmp
push
lock
sbb
loope
mov
imul
aam
andb
cwtl
movsl
pusha
mov
push
mov
mov
dec
dec
testl
lea
icebp
mov
mov
inc
out
mov
sub
push
mov
inc
pop
in
stos
ret
test
mov
es
jle
jecxz
mov
push
mov
push
das
pop
and
test
in
icebp
adc
pop
mov
ret
add
es
popf
lods
movsl
add
popa
adc
addr16
xchg
push
add
out
xchg
daa
pop
andl
mov
fs
out
cwtl
stos
jo
ss
in
addr16
pop
sub
sbb
out
mov
cld
sbb
das
mov
loopne
ret
jg
test
or
lds
and
leave
rcl
scas
xor
sbb
stos
clc
and
aaa
lret
jb
cmp
push
stos
pop
jb
pusha
dec
scas
jmp
punpcklbw
cmc
push
shrb
inc
in
mov
dec
pusha
mov
mov
mov
xchg
testl
add
ffreep
xchg
jne
jge
clc
fsubs
insl
sahf
push
or
sbb
xchg
int
xor
lcall
mov
adc
loop
push
jl
mov
inc
lods
jae
lea
adc
in
in
lods
loop
pop
sub
lods
push
test
mov
jnp
sub
aad
ds
or
pop
mov
movsb
fisttps
push
mov
out
dec
lret
cli
loopne
mov
sahf
daa
mov
inc
mov
dec
out
int3
jge
jns
jl
lret
rcll
les
sbbb
pop
out
or
ficomps
popf
and
idivl
std
movsl
pop
popa
inc
sub
cld
lock
jge
xor
xor
mov
int
inc
shr
pop
or
inc
jno
jb
mov
jne
pusha
xchg
mov
add
sub
lcall
mov
stc
in
inc
cmpxchg
movsl
mov
ds
xor
js
cmp
cli
loope
pop
pop
rol
aam
or
or
test
push
push
push
mov
lret
pop
lea
ds
lahf
imul
cmp
adc
ljmp
fwait
aam
rclb
dec
sub
sbb
popl
sub
jno
test
loope
jmp
popa
dec
sbb
pop
sarl
jb
into
inc
adc
je
or
mov
adc
sub
push
inc
jl
test
pop
sub
pusha
mov
mov
push
ret
pop
mov
iret
mov
jl
sub
push
fst
xor
mov
fwait
mov
loopne,pn
repz
or
jae
fucomi
jl
mov
cld
push
gs
sarl
jge
cwtl
cld
into
add
mov
lods
decl
cmpsb
divb
sahf
or
jl
out
pop
cmp
in
jp
shll
pop
pop
mov
sub
push
test
clc
mov
lods
jnp
and
clc
test
push
enter
push
jbe
sbb
pop
mov
pop
mov
xor
in
fcompl
sarb
push
jb
lock
outsl
pop
jl
lahf
pop
jb
das
rcrl
xchg
and
mov
fildll
dec
cs
daa
cmp
mov
inc
in
into
cltd
fisubl
jecxz
scas
xchg
push
leave
mov
sbb
sub
pop
adc
adc
in
push
mov
cmc
adc
cmpsb
call
xchg
inc
xor
fwait
and
mov
pop
popf
fs
mov
aas
lock
jnp
dec
add
mov
jno
jge
add
sbb
aas
stc
call
les
adc
scas
mov
adc
sub
sarl
hlt
popa
jbe
sti
adc
ljmp
xchg
inc
sbb
rcrl
test
cmp
mov
lret
push
push
sbb
add
push
adc
pop
cmc
shl
push
rcr
faddl
test
scas
dec
in
pop
mov
mov
xchg
mov
in
out
xchg
aam
mov
inc
xchg
mov
push
mov
outsb
outsb
repz
sar
fs
vmovaps
loopne
sub
int3
push
xchg
pop
mov
fsubrp
push
in
je
push
jg
push
jbe
loopne
rclb
in
dec
mov
xchg
inc
fwait
sub
ljmp
push
ljmp
jnp
sbb
mov
mov
pop
inc
ss
jns
inc
cmp
stc
or
mov
cmp
aam
add
cmp
inc
pop
sbb
call
push
popf
gs
mov
mov
lods
sub
push
adc
je
mov
pop
lcall
dec
or
push
pop
pop
fstl
inc
je
rclb
insl
or
std
pop
dec
andb
std
mov
loope,pn
xchg
rcr
movsl
xchg
lret
push
imul
fsub
lea
pop
cmp
jle
movsb
in
in
pop
mov
dec
cmp
outsl
xchg
sub
movsl
stc
lret
lods
stc
and
inc
pop
or
movsb
pop
movsb
repnz
addr16
dec
lock
js
test
xchg
nop
mov
mov
sbb
ficoms
cltd
ds
pop
popf
cmp
add
fbld
shrl
shlb
xlat
jne
pop
insl
pop
call
pop
cmp
daa
repz
lret
fcoms
dec
cmpsb
pop
pusha
vmulps
sahf
mov
sbb
out
movsb
je
add
mov
jge
xchg
cltd
inc
test
jno
sbb
and
fistl
outsl
mov
aad
iret
inc
lods
mov
or
ret
adc
mov
fwait
xor
cmp
push
jmp
out
outsl
and
push
push
stos
daa
into
leave
popl
rcr
pop
fwait
mov
mov
inc
adc
ds
adc
pop
jmp
add
ret
push
pop
sub
sbb
xchg
test
mov
xor
inc
mov
and
pop
sbb
pop
lds
int3
adc
fs
xchg
push
mov
and
imul
sbb
imull
sbbb
add
in
jle
hlt
idiv
xcrypt-ofb
cmpsl
imul
leave
mov
inc
in
addl
pop
les
sti
cli
sti
inc
pop
lcall
mov
xlat
or
sahf
xchg
push
orb
orl
lds
push
pusha
daa
cmp
lods
fwait
sub
push
inc
mov
push
inc
pop
cmp
fnstenv
or
and
dec
nop
xchg
jb
loope
xor
inc
loope
enter
xor
scas
movsb
push
test
add
cmp
xchg
flds
cmp
in
lods
mov
mov
popf
call
jnp
jmp
push
inc
imul
iret
leave
hlt
ds
lods
lock
add
lret
pop
adc
test
and
jmp
mov
add
sbb
in
fdiv
adc
xchg
in
jae
mov
pop
push
push
xchg
xchg
lock
pop
lahf
test
add
inc
lds
mov
addr16
inc
test
pop
mov
outsb
fstpl
shr
rclb
push
cmpsb
pop
cmpsb
and
bound
adc
adc
push
cmp
dec
and
sbb
clc
in
ja
andb
imul
mov
push
vmovntdq
pop
sub
mov
fcomp
aam
cs
xlat
jnp
jl
enter
cmc
fists
mov
or
xchg
and
add
loop
pusha
in
jp
js
mov
mov
xchg
or
lods
rclb
js
in
int3
inc
ds
stos
xchg
xor
jmp
test
lahf
mov
mov
bound
sbb
loope
loop
xchg
and
inc
fdivrl
lods
cmc
pop
pop
pushf
ret
pop
mov
sub
imulb
xchg
cmp
cmpsb
ljmp
xchg
insb
pushf
jge
jbe
mov
xchg
cmpsl
iret
lret
add
in
negb
mov
sub
push
addr16
jno
mov
xchg
fisttps
daa
xor
aam
sub
pop
push
jp
ret
xor
jge
imul
mov
inc
gs
ljmp
mov
out
fistl
cld
mov
je
jp
rcrl
inc
stc
js
fcomp
out
fs
inc
pop
daa
ret
in
sub
inc
ja
cltd
int3
ja
cld
mov
jb
sarb
xor
fisttpl
mov
outsb
inc
stos
push
aad
lea
dec
xchg
mov
sbb
push
test
xor
imul
adcb
pushf
dec
lcall
xor
sub
pop
mov
jae
xchg
sub
bound
mov
fwait
pushf
adc
and
pop
fs
loopne
test
test
cmp
fcmovnu
mov
push
xchg
jp
lret
or
push
rolb
scas
mov
mov
xchg
pop
or
inc
fidivs
jnp
lahf
aam
jle
in
dec
popf
push
bound
fcom
shll
and
cmc
mov
mov
sarb
ss
xlat
notl
pop
xlat
lods
sub
jl
inc
pusha
dec
fnstcw
aad
fcomps
mull
movsl
add
sub
test
mov
in
cmp
inc
gs
push
leave
stc
adc
cs
push
dec
ret
leave
hlt
call
mov
repz
pop
xlat
jne
outsl
pusha
gs
and
sbb
repz
and
pop
daa
jp
cmp
add
jle
pop
aad
sub
daa
in
add
call
pusha
addr16
shll
adc
test
and
jl
inc
xor
inc
jecxz
divl
andb
in
fstps
lahf
mov
mov
lret
insl
cmc
add
mov
push
fsubp
mov
sbb
sub
adcl
inc
lret
test
jg
insl
les
test
sub
and
inc
sbb
jle
mov
add
aas
cmc
mulb
mov
lahf
loope
ret
in
xchg
pop
mov
mov
pop
adc
push
lock
mov
or
cmp
sub
jae
inc
jnp
imul
xchg
stos
jecxz
repz
ret
sti
shr
and
xor
add
adc
arpl
dec
inc
jnp
imul
xchg
stos
jecxz
repz
ret
sti
shr
and
mov
cmpl
lret
inc
jnp
imul
xchg
stos
jecxz
repz
ret
sti
shr
and
xor
add
adc
arpl
dec
inc
jnp
imul
xchg
fcoml
add
adc
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
and
xor
add
adc
insl
ficoms
hlt
xor
pop
mov
test
jp
or
pop
les
aam
and
xor
add
adc
mov
stos
push
mov
test
jp
or
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
hlt
sbb
jp
pop
xchg
dec
mov
scas
add
jge
imul
test
lahf
jle
or
xchg
repz
sti
sti
jmp
gs
idivl
cmp
imul
hlt
xchg
xchg
sub
or
sbb
cmpsb
adc
mov
mov
inc
aad
cmp
adc
or
mov
push
jns
dec
gs
imul
aam
sbb
mov
cmpl
gs
bsf
xchg
pop
dec
mov
je
cmp
aam
sbb
and
jmp
dec
inc
lcall
jecxz
icebp
dec
je
jp
cmc
cmpsl
out
add
cmp
lret
add
adc
mov
stos
push
mov
test
jp
or
sbb
sub
jl
cmpsl
push
or
push
mov
sub
ror
aam
shll
testl
arpl
mov
addr16
add
adc
stc
cmp
push
adc
jne
pop
mov
scas
inc
sahf
jno
and
je
inc
stos
push
mov
test
jp
or
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
test
jp
or
sbb
sub
cmp
push
iret
cltd
sbb
mov
xchg
push
addr16
mov
and
dec
clc
je
addr16
repz
cltd
jmp
sar
std
mov
dec
sub
fiaddl
and
aad
ljmp
pop
lea
mov
incb
jb
scas
sub
in
repz
cld
orl
add
outsl
imul
cli
mov
pop
mov
ds
gs
cmp
cs
lds
call
cltd
mov
mov
pop
outsb
mov
adc
and
mov
add
ja
jmp
mov
push
jp
push
push
cmpsl
ja
cmp
dec
push
mov
or
xchg
or
sub
and
mov
pop
mov
mov
and
mov
jae
stos
out
lret
mov
lcall
pop
dec
inc
std
cmp
imul
pop
fs
inc
push
dec
jecxz
movsl
lret
jge
pop
xchg
cmp
aad
loop
lret
mul
je
sub
or
xchg
push
mov
mov
call
push
popf
mov
jecxz
jmp
cli
mov
insb
push
push
cwtl
dec
xor
mov
sahf
ja
mov
repnz
mov
and
jmp
test
push
ret
jo
add
test
jmp
sub
call
mov
pop
add
pmaddwd
mov
fidivl
enter
adc
cmpsb
mov
mov
dec
stos
push
or
mov
adc
cmp
inc
pusha
sub
inc
sub
jae
xor
xor
aaa
cmpl
jnp
cmp
jmp
push
mov
jae
pop
outsb
mov
aaa
outsl
mov
add
push
cmp
out
test
fcomi
jne
xor
xchg
adc
out
mov
sahf
int
cli
jl
mull
push
dec
sub
xor
rcll
roll
adc
cmpsb
shrl
andl
pop
pop
xchg
call
mov
shl
lret
popa
fcompl
pusha
lds
mov
mov
or
jge
sbb
mov
or
push
mov
pusha
enter
inc
cmp
repnz
add
out
lahf
les
jecxz
lock
and
xchg
fld
out
sbb
mov
in
popf
test
sahf
orps
enter
fs
mov
outsb
loop
jp
push
adc
std
cmp
push
xor
js
je
xchg
or
sub
cld
loope
adc
into
popa
inc
out
ss
sti
mov
insl
pop
or
sbb
jmp
into
xor
push
mov
push
sti
dec
push
xor
sar
dec
stos
pop
fistpl
aad
insl
push
push
mov
nop
pop
push
dec
fistps
mov
push
dec
pop
test
test
cmp
mov
jae
pop
fisttps
sahf
mov
scas
push
xchg
or
aas
cmpsb
jb
mov
push
sub
hlt
mov
fisubrs
nop
cmp
xchg
aas
xchg
in
pop
mov
or
fcmovbe
add
in
xchg
leave
xchg
jne
push
fcoms
lret
sub
icebp
sub
ficoms
cmc
dec
jns
adc
fadds
add
xorl
add
rclb
fmul
inc
cmp
decl
rorl
mov
xor
fwait
pop
inc
jb
fnstenv
test
icebp
outsb
mov
lret
sbb
xor
pop
jns
pop
jno
cmp
adc
xor
nop
scas
outsb
sarl
sbbb
decl
outsb
int3
in
add
outsl
or
or
push
mov
xchg
dec
cmp
or
pop
pop
jb
mov
pop
mov
sbb
push
pop
lock
test
sub
movsl
dec
adc
sub
out
sbb
sbb
sbb
into
stos
inc
jl
int
dec
adc
enter
inc
ficompl
push
loope
cmpsb
mov
addr16
xor
mov
and
pop
shr
dec
mov
mov
stos
pusha
pop
xor
cli
push
sub
subb
lods
data16
cmp
xor
out
jnp
sub
je
cmpsl
cmpsl
mov
jae
ret
shrb
sbb
jbe
jl
and
call
xlat
pop
loope
ret
xor
jle
pushw
sbb
add
or
lock
xor
mov
jg
scas
pop
add
test
dec
mov
sahf
lret
insb
stos
dec
xchg
pop
enter
add
daa
adc
cmp
and
jnp
rcrb
adc
rcl
pop
pop
out
fadds
push
int3
ret
sbb
push
fisubl
clc
loopne
cmp
fsts
lcall
popf
push
jmp
cmpsl
cwtl
fwait
lods
xlat
jb
pop
ret
jb
xor
sub
push
je
das
outsb
aaa
push
jne
pop
lret
adc
pop
adc
pop
and
add
pusha
shlb
dec
in
pop
std
mov
in
fwait
add
mov
adc
sbb
ret
gs
icebp
inc
pushf
lds
insb
lds
mov
dec
push
mov
pop
mov
xchg
mov
outsl
push
cli
insl
sti
out
xchg
movsb
mov
or
fldl
clc
sahf
ffree
cmp
sbb
ret
enter
repnz
mov
cmc
loop
add
fstl
xor
jge
clc
xchg
mov
or
outsb
pushf
lcall
sub
cld
and
sbb
into
cmpsb
shrb
outsl
in
dec
testl
mov
jnp
insl
mov
mov
cmpsb
xchg
adc
dec
cs
mov
cli
push
loop
jbe
lret
mov
inc
or
pop
aaa
adc
xchg
cmp
ss
jl
ret
jl
stc
and
nop
add
pop
dec
push
icebp
xor
bound
fidivrs
fs
jns
push
jecxz
mov
mov
inc
add
aas
sahf
or
dec
dec
loop
dec
push
mov
in
pop
popa
rcrl
jle
out
lods
jle
push
add
xor
into
xor
shll
and
cmp
stos
dec
loope
imul
pushf
jo
mov
add
xchg
sbb
push
xor
add
push
lahf
icebp
lods
add
cmp
mov
fdivrl
xor
pop
and
popa
xor
pop
nop
pusha
pop
lret
push
int
cmpsl
mov
mov
lock
icebp
imul
mov
add
outsb
in
add
lret
out
sub
xchg
mov
lea
mov
mov
in
pop
addr16
mov
fcomps
ds
lcall
in
scas
popf
mov
leave
nop
inc
sbb
sbb
scas
adc
arpl
fwait
leave
jb
popa
aam
movl
push
xor
sbb
and
jae
popl
scas
loope
push
cmp
out
cmp
popa
mov
inc
inc
jecxz
icebp
sbb
mov
dec
add
cwtl
add
adc
mov
jl
add
dec
jnp
out
sub
xchg
dec
dec
or
push
xchg
push
add
aaa
sub
lret
rcrb
jno
pop
push
loopne
sub
movsl
fisttps
test
loop
es
and
fstps
in
sarl
ret
xchg
cmp
sbb
sbb
icebp
jge
adc
imul
inc
mov
or
hlt
adc
add
and
add
cmc
gs
push
adc
sbb
mov
sbb
addl
xchg
hlt
int3
xor
mov
outsb
jbe
out
and
mov
lea
into
jno
mov
jne
push
inc
mov
or
roll
in
lods
leave
push
arpl
insl
and
cmp
jb
adc
cmc
lret
fdivrl
or
adc
xor
data16
and
pop
inc
leave
out
lahf
stos
mov
ja
popa
cld
push
ds
jne
add
ja
bound
cltd
and
ss
enter
inc
push
mov
mov
adc
inc
shll
lea
mov
inc
dec
scas
xlat
fadds
sbb
fs
movsb
push
in
xor
inc
enter
aaa
sahf
mov
mov
push
leave
xchg
sub
mov
pop
xchg
fcmovu
sbb
shr
push
dec
mov
push
jl
cwtl
enter
out
add
popf
cmp
fdivr
add
shll
pop
filds
push
lret
clc
mov
mov
push
push
sbb
test
ds
mov
iret
cltd
out
xor
rorl
lods
xchg
mov
out
lock
mul
stos
outsl
std
aaa
mov
cmpsl
in
dec
push
enter
lret
pop
mov
cmp
negb
jg
fs
je
push
std
jle
add
mov
ficoms
mov
ljmp
jnp
pop
outsb
pop
insl
sub
sbb
mov
inc
pop
jge
mov
push
pop
stos
lds
add
mov
out
pop
ja
gs
pop
lock
sub
xchg
rolb
or
lret
xlat
add
scas
jge
in
inc
inc
addr16
repz
xchg
dec
push
out
repz
fists
clc
pop
insl
fwait
or
test
subl
or
xor
mov
imul
fcomps
mov
mov
add
subb
addb
jle
xchg
push
cmpl
pop
jne
shlb
mull
inc
xor
ret
clc
cli
test
shll
pop
imul
and
je
add
pop
mov
int
jno
push
dec
outsb
and
xchg
test
dec
add
push
popa
scas
jg
jae
add
ss
mov
jo
daa
push
inc
cld
mov
bound
adc
ror
pop
mov
sub
cmp
jno
aaa
xor
ficompl
aam
pusha
testb
arpl
stos
mov
inc
prefetch
pop
test
or
and
lods
add
jle
scas
xchg
jp,pn
sbb
xchg
lods
or
dec
cmp
subb
push
xchg
outsl
sbb
inc
loopne
push
adc
mov
jl
repnz
outsl
lods
mov
xor
mov
enter
stos
imull
cmpsl
sbb
rcrl
mov
nop
sar
in
arpl
adc
fstpt
ja
out
jb
mov
mov
arpl
xor
cmp
mov
std
nop
pop
adc
inc
sbb
out
test
sub
adc
jns
punpckldq
pop
xchg
mov
adc
jge
scas
cltd
ljmp
xchg
add
scas
and
hlt
arpl
stc
hlt
out
mov
jnp
pop
lret
xor
fisubrs
int3
mov
loopne
pop
jo
fcomps
adc
sbb
lea
lret
adc
xchg
std
jl
xor
mov
or
add
dec
or
adc
and
cmp
in
jno
xchg
push
inc
gs
sbb
iret
cmpsl
adc
mov
ja
lahf
popa
mov
jge
daa
sbb
push
repz
mov
push
jbe
cmc
xchg
push
push
push
aam
cmpb
xor
add
repnz
sub
fsubr
xor
and
push
imul
stc
movsl
sti
mov
imul
call
xchg
push
sbb
js
inc
addr16
dec
js
mov
or
sub
enter
dec
mov
mov
fisubrl
lock
xlat
and
pop
fwait
mov
xor
aas
je
mov
scas
insl
mov
or
rcrl
lods
scas
jb
jmp
outsl
stos
popa
mov
jo
xor
jl
add
scas
adc
test
xchg
pop
notl
mov
mov
ljmp
mov
lahf
sub
xor
mov
test
add
jne
and
sahf
or
shrb
sbb
cmpsl
mov
sub
sahf
cli
jbe
pop
jno
sub
fildll
pop
pop
daa
adc
cmp
dec
data16
mov
shrl
movsl
inc
pushf
mov
lret
mov
aam
cld
subb
dec
or
mov
movsb
mov
mov
pop
testb
inc
adc
mov
inc
mov
xor
inc
fldcw
lock
mov
add
fcoms
jae
lahf
cmp
xchg
ror
sti
push
aas
push
test
add
aad
lods
and
sbb
pop
sub
xor
loop
mov
cmp
push
filds
movsb
mov
shlb
pop
scas
pusha
xchg
inc
add
into
rclb
pop
cld
scas
pop
adc
jo
pop
lods
addr16
xor
std
mov
inc
push
lret
inc
daa
mov
mov
and
stc
lcall
add
add
inc
movb
pop
es
mov
in
sub
xchg
adc
addr16
imul
sarb
mov
es
inc
pop
test
mov
push
test
xchg
cmpb
sbb
pop
mov
mov
jne
sub
and
popa
pop
mov
mov
pop
enter
in
pop
lods
clc
cmp
mov
cmp
sti
outsl
fcompl
fsubl
in
decb
hlt
push
out
enter
and
int
mov
lods
xchg
and
push
inc
adcl
jle
pop
sbb
int3
in
ja
inc
push
inc
inc
sub
popa
push
inc
filds
xor
push
repz
clc
or
out
sub
push
fwait
dec
ljmp
loope
push
arpl
int
sub
push
imul
out
cli
cmp
test
mov
xor
jecxz
lret
jno
xchg
insl
or
mov
test
sub
pop
or
stc
in
adc
pop
push
into
push
cmp
cmp
lds
push
mov
xor
cmpsb
jg
sub
icebp
xlat
and
sub
mov
test
push
mov
icebp
mov
and
add
push
and
pop
icebp
push
cld
mov
daa
stc
stos
mov
inc
bound
std
pop
add
test
ljmp
fs
pop
xchg
testb
cmc
push
cmp
mov
movsb
xchg
and
fisttpl
inc
lods
mov
inc
fiadds
jecxz
sub
xor
lcall
cmp
mov
cmp
fs
out
dec
mov
in
movsb
roll
aaa
arpl
aam
and
mov
daa
dec
xor
shrb
roll
inc
dec
fisubs
jae
test
cmp
ret
mov
xchg
push
ljmp
add
jl
test
stc
xchg
sbb
jne
sbb
mov
add
mov
cmp
popf
push
cmovns
js
in
sbb
or
sahf
fbstp
mov
xor
fldenv
sub
adc
idivl
lahf
sub
mov
mov
in
sbb
inc
push
mov
in
push
lret
sbb
outsb
inc
std
dec
lds
scas
fnstenv
in
fnsave
fnstsw
sub
test
rolb
add
sbb
jecxz
push
push
rol
pop
and
jnp
iret
push
ds
hlt
push
daa
lds
push
lret
mov
cmpsb
andl
adc
xchg
clc
test
cltd
je
cli
cmp
jo
sbbl
pop
xor
cmp
push
mov
dec
fwait
sahf
das
cmp
mov
sbb
lods
fwait
popa
mov
jp
add
jmp
jecxz
inc
xchg
mov
mov
stos
inc
mov
mov
rolb
xlat
clc
cs
mov
inc
clc
xor
xor
dec
aaa
jb
jmp
or
js
pop
mov
cltd
adc
sub
jb
mov
gs
sbb
mulb
xlat
pop
cmp
notl
mov
int
scas
out
adc
jle
lods
fwait
lret
or
iret
mov
sbb
lods
sbb
nop
sub
cwtl
hlt
jne
xchg
add
push
inc
xchg
in
push
stc
ss
sub
pusha
fimuls
pop
add
movsl
mov
cmp
add
sub
xchg
imul
rclb
add
cmpsl
mov
inc
pop
dec
sbb
out
xor
fdivrl
out
adc
dec
pop
outsl
mov
es
in
je
loopne
imul
mov
add
je
sub
xor
cmp
test
int3
xor
mov
mov
xlat
cld
mov
lret
lret
cltd
aam
or
js
sbb
or
or
jecxz
sbb
mov
daa
xchg
jns
sarb
daa
dec
test
dec
xor
std
movsl
lret
and
xchg
in
or
xor
mov
add
cmp
add
mov
push
shl
push
sub
icebp
inc
cmp
sbb
inc
inc
aaa
push
sbb
loopne
js
adc
fcoml
hlt
int3
mov
fdivl
xchg
sub
add
push
or
int3
insl
cwtl
in
sahf
popa
xor
test
sahf
mov
movsl
xchg
pushf
movsl
sbbl
xlat
mov
pop
lds
sbb
pop
jl
pop
adcl
jp
mov
and
ret
fs
fisubs
mov
mov
and
push
call
cmp
jp
jge
mov
mov
mov
lret
daa
mov
and
fs
lea
adc
pushl
dec
jge
jp
loopne
jmp
adcb
ret
movsl
ja
lds
cltd
lea
xchg
mov
idiv
icebp
add
dec
mov
rcl
shr
subb
test
sub
stos
fistps
xchg
dec
mov
mov
adc
push
sub
mov
mov
xor
mov
inc
cmp
sbb
sbb
pop
mov
adc
mov
mov
xor
lret
inc
or
push
sub
xor
jne
pop
and
in
xlat
jbe
aaa
push
mov
in
fsubrl
fwait
mov
lea
xchg
jnp
or
aas
daa
mov
inc
into
mov
jge
push
repnz
lret
jno
out
jmp
call
and
push
add
push
add
fdivrl
hlt
add
adc
andb
pop
mov
inc
cmp
stos
push
xchg
push
cmp
js
xor
adc
cltd
inc
cmp
cmovg
fwait
popa
xchg
inc
iret
push
push
sbb
jno
inc
dec
mov
shll
adc
cld
in
shr
fcomps
int3
int
iret
aam
stos
fldcw
test
xor
mov
sbb
stos
js
cld
jbe
mov
je
cli
mov
inc
test
jae
mov
inc
jp
stos
or
scas
fwait
dec
ficomps
jnp
jns
dec
mov
int3
inc
cmc
daa
and
push
pop
int3
outsb
sub
dec
xor
sbb
scas
inc
stos
mov
outsb
cmp
xchg
jg
daa
ret
mov
mov
cld
jg
test
adc
xlat
test
push
mov
lcall
aaa
push
add
cwtl
addr16
ljmp
lcall
push
aam
sbb
jnp
sbb
addr16
inc
xor
push
dec
lea
pop
push
xchg
nop
je
popf
out
jl
push
pop
jno
mov
rcr
xor
mov
nop
ret
jbe
in
ljmp
adc
sbb
push
inc
lock
mov
push
inc
sbb
adc
cmp
mov
mov
xor
and
add
nop
or
adc
imul
jb
add
xor
or
adc
out
cld
test
adc
dec
add
inc
push
cmp
std
ret
in
js
jge
adc
repz
jb
push
scas
int
jo
and
cwtl
hlt
call
popa
inc
inc
pop
dec
fisubs
mov
jp
mov
xchg
daa
jns
sbb
divl
ret
mov
xor
gs
shll
push
fadds
sub
adc
inc
cli
sbb
js
lods
fiaddl
hlt
and
gs
pop
movsb
popa
cmc
cmpsb
dec
mov
ds
call
loop
sub
xor
fdivl
repnz
insb
nop
push
cmp
loopne
push
cmp
dec
dec
arpl
cmp
imul
fisubrs
roll
cmpsb
in
mov
mov
jbe
out
cmp
test
leave
xchg
inc
loopne
scas
dec
pop
mov
inc
mov
add
mov
scas
testl
es
jmp
hlt
imul
sahf
pushf
xchg
cmp
lret
or
xorl
insb
andl
push
jge
sub
stos
enter
les
adc
dec
inc
in
in
iret
imul
aas
test
lods
stos
sub
lods
sbb
fsubs
int3
insl
imul
in
int3
fldcw
dec
ljmp
fidivrl
jmp
cli
mov
stos
push
mov
test
jp
or
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
test
jp
or
sbb
sub
cmp
xor
add
adc
mov
inc
stos
push
mov
test
jp
or
sbb
sub
cmp
xor
add
adc
mov
sub
inc
pop
mov
lock
or
cmp
sub
jp
push
pop
jae
arpl
pop
pusha
jg
outsl
and
popf
ljmp
xchg
stos
sbbl
push
pop
jae
arpl
adc
add
xor
pop
cli
shr
ret
scas
repz
ljmp
mov
pop
jae
arpl
adc
add
xor
and
shr
loopne
and
aam
fucom
shlb
and
sub
cmp
xor
push
xchg
mov
xor
xor
mov
cld
icebp
add
lret
scas
das
out
adc
sub
les
out
xchg
mov
repnz
xchg
sbb
gs
andl
jbe
test
mov
xchg
cmp
dec
sbb
push
imul
lret
xor
mov
add
pop
sub
cmp
ja
add
jge
mov
push
adc
and
sbbl
push
out
shrb
test
push
into
sbb
adc
lret
in
andl
or
rcrb
push
push
pop
jae
arpl
adc
add
xor
and
shr
ret
lret
xchg
stos
sbbl
add
aas
jae
arpl
arpl
jne
ja
stos
out
ret
cmpsb
xchg
ret
out
lret
jns
sbb
or
das
arpl
dec
sbb
inc
lahf
cwtl
call
xchg
std
incb
adc
push
or
add
cmp
or
cli
shr
ret
lret
xchg
stos
sbbl
push
pop
jae
arpl
adc
add
xor
and
shr
ret
lret
xchg
stos
sbbl
iret
sub
sahf
outsb
mov
mov
cmp
xchg
dec
sbb
pop
or
cmp
lea
lahf
test
sti
mov
jmp
xor
adc
ret
jb
and
push
lods
in
and
pop
xor
test
mov
jns
jg
stc
std
mov
add
into
jne
lock
out
push
cmp
add
jl
cli
inc
sbb
mov
jmp
jmp
sub
rcl
fnstenv
jae
xor
into
sbb
dec
pop
pop
test
loope
sbb
mov
push
ja
mov
pop
in
mov
out
lea
xor
fstl
das
mov
pop
jecxz
push
push
pop
sub
push
xor
das
inc
xchg
roll
xchg
mov
adcl
add
mov
xchg
xlat
clc
adc
jl
movb
out
stos
cmpsb
mov
mov
loopne
rcl
inc
subb
pop
rol
sub
out
js
inc
mov
and
lea
ret
cmp
data16
imul
add
cltd
and
pop
adc
fwait
lods
pop
adc
insb
imul
gs
test
inc
cmc
sub
pop
pop
gs
loop
stos
lret
loopne
repz
and
inc
jmp
xlat
clc
xchg
sub
lcall
aam
cmp
push
push
out
sbb
stos
xor
sbb
mov
popa
or
call
dec
push
test
fiadds
xor
outsl
std
push
ljmp
fwait
ret
stos
adc
in
inc
fadd
fiaddl
cmpb
fwait
cmp
insb
sbb
fdivp
dec
mov
lcall
pop
or
daa
or
mov
test
call
test
xchg
daa
mov
mov
jmp
pop
push
mov
dec
fmuls
bound
jle
xchg
cld
dec
xchg
insl
xor
loop
std
fwait
inc
dec
fdivrs
inc
in
add
iret
repz
push
cltd
addr16
fxtract
inc
or
cmp
push
dec
mov
sub
pop
pop
ds
mov
stc
xchg
rcr
in
jne
mov
sbb
notb
mov
inc
aad
pop
repnz
sbb
push
mov
test
pop
mov
enter
push
jb
cmp
cltd
mov
sbb
cmpsl
test
aad
and
gs
das
test
pop
sbb
inc
popl
xchg
std
movsl
cltd
adcb
lock
mov
es
jmp
sub
xor
test
data16
sahf
lods
push
jg
fldt
sub
enter
scas
subb
or
or
or
outsb
push
mov
outsl
hlt
cmp
sub
shll
daa
cmp
test
pop
sub
out
jmp
push
pop
pop
hlt
mov
pop
push
mov
and
sub
int3
sbb
cmpl
aas
fcoms
test
mov
cmpsb
push
js
das
adc
cltd
cwtl
ljmp
cmpsb
push
cmpsl
repnz
jg
stos
cmp
or
add
sub
rcl
pop
add
sbb
add
jmp
bound
testb
pop
in
push
dec
cli
jge
xchg
in
out
test
js
jle
jg
pusha
js
pop
push
mov
and
mov
mov
repz
add
xchg
push
imul
rorb
inc
mov
mov
stos
mov
pushw
out
or
test
and
shl
imul
push
jmp
mov
push
cmp
adc
lahf
dec
repz
call
dec
push
out
ret
adcb
test
mov
xor
std
pop
xlat
cwtl
lds
call
add
push
loopne
lcall
mov
sbb
fld
test
push
push
xchg
adc
jle
out
inc
add
push
mov
adc
sub
cmpsb
xchg
in
ljmp
fistps
sbb
mov
dec
push
mov
push
movsb
adc
aaa
sub
mov
sbb
xlat
fidivrl
imul
add
dec
loope
xchg
andl
pop
cmp
lods
arpl
add
arpl
dec
xor
sub
call
inc
dec
add
js
inc
mov
int
movsl
lods
aaa
jmp
int3
or
inc
push
repz
insb
nop
jmp
jae
mov
sbb
push
popa
pop
lret
fsubs
xor
rdtsc
mov
pop
fnsave
mov
aam
fsubrs
int3
repz
in
bnd
fiaddl
jl
lods
mov
test
mov
mov
lds
ds
lock
notl
jnp
aam
shrl
in
push
imul
xchg
mov
adc
xor
sbb
lods
pop
aas
push
inc
mov
mov
ret
es
call
and
mov
push
mov
cli
mov
ss
xlat
aaa
outsb
add
mov
mov
jo
fs
rorb
push
outsb
and
nop
adc
cs
xor
stc
mov
xchg
aas
arpl
fstpl
pop
push
pop
adc
ret
rcrb
add
mov
jne
xor
in
sahf
mov
mull
push
rorb
out
cmp
sbb
jo
and
or
lahf
or
xchg
into
aam
cmpsl
and
ss
popf
jmp
lods
sbb
xchg
das
ljmp
mov
mov
roll
xchg
xchg
add
ds
stos
and
cmp
push
lods
xchg
iret
mov
jnp
sub
and
cmp
sub
dec
nop
pop
icebp
fcmovb
lahf
ljmp
cltd
aam
lahf
jnp
insb
pop
pop
fdiv
sarl
imul
out
adc
cwtl
dec
outsl
push
adc
leave
idivb
adc
pop
pop
mov
fs
mov
jo
mov
push
sbb
ror
jne
lods
outsl
push
stos
jb
sahf
mov
inc
xor
and
push
je
lods
filds
imul
es
jo
xchg
in
adc
lcall
or
cwtl
mov
cmc
mov
addr16
int3
daa
in
mov
ja
rorl
es
and
adc
or
sbb
lea
jg
popa
inc
push
fstl
imul
cmp
xlat
xchg
mov
nop
fbstp
js
mov
stos
xchg
loopne
or
mov
sbb
pop
sahf
sbb
into
xchg
sub
mov
loop
cwtl
push
pop
add
mov
pop
outsl
mov
jnp
in
shrb
dec
and
add
sbb
jmp
sbb
and
xor
mov
rcrb
xlat
das
adc
push
ret
push
mov
adc
mov
jecxz
aad
cmp
lcall
and
popa
loope
mov
mul
aas
push
push
adc
dec
call
fwait
xchg
sbb
ss
insl
cld
out
rolb
lods
xchg
insl
xor
dec
adc
jge
int
dec
or
push
xchg
lock
adc
mov
lret
mov
jecxz
into
jae
imul
sbb
sub
out
sbb
sahf
cld
jmp
xor
jno
mov
fwait
push
loope
add
imul
ficompl
ds
lea
sbb
inc
dec
mov
sbb
push
xchg
fwait
or
sbb
and
push
mov
jbe
scas
out
xchg
test
in
femms
int
hlt
out
xor
hlt
sub
jnp
sti
fidivrs
andl
stos
hlt
mov
and
ss
xor
cld
mov
insl
mov
inc
stos
into
int
addr16
adc
inc
insb
pop
jp
mov
mov
xor
mov
mov
sub
push
push
xchg
aas
sbb
rcl
out
scas
add
int
sbbb
movsl
xor
pop
jge
stos
lcall
mov
mov
lds
jns
loope
rclb
je
mov
out
sti
jmp
in
cwtl
popf
mov
mov
and
pushf
dec
int3
xchg
add
mov
andb
es
pop
call
lcall
in
into
lea
push
fcmovu
jno
xor
rcll
sti
stos
icebp
fwait
inc
sbb
mov
stc
xchg
xchg
pusha
pop
add
iret
or
sub
test
xorb
jmp
add
jo
test
das
add
mov
cmp
cmp
idivl
in
loopne
mov
sbb
lret
mov
cmpsl
mov
sub
arpl
mov
xchg
pop
sub
mov
dec
xlat
movsl
pop
add
stc
xor
scas
enter
lods
mov
jl
push
push
and
lcall
sbb
dec
or
sbb
inc
fwait
data16
inc
nop
xchg
cmc
fstps
and
or
mov
int3
jl
inc
xlat
sbb
xor
loopne
shll
mov
or
adc
cmp
fldenv
dec
inc
cltd
out
stos
mov
xor
popa
sbb
dec
outsb
fs
outsl
mov
mov
mov
out
mov
mov
mov
and
movsl
pop
xor
or
imul
int3
sbb
andb
pop
pop
loope
adc
and
loopne
add
inc
inc
mov
movl
test
push
push
push
cmpl
movsl
cmp
mov
int3
int
inc
inc
es
ficompl
sub
mov
mov
fmull
cmpsl
add
data16
repz
or
lcall
outsb
lahf
sbb
lods
stos
fmuls
sarb
adc
jns
push
push
imul
cwtl
mov
jno
mov
mov
movb
sbb
test
int
mov
jns
movsb
dec
mov
inc
mov
lahf
add
fsubrs
xor
mov
mov
bound
les
in
mov
divl
jo
or
xchg
jg
inc
push
ffreep
sub
pop
push
outsb
pop
aaa
ljmp
aam
pop
lods
push
mov
adc
or
or
push
hlt
enter
xsaves
lock
sbb
scas
test
dec
or
mov
clts
mov
adc
popa
pushf
sbb
je
sahf
ja
rorb
int3
xchg
xor
xor
adc
into
push
xchg
cmpsb
mov
push
gs
push
pop
dec
lock
mov
clc
dec
dec
dec
cmp
es
mov
adc
lods
mov
test
ja
cli
push
sbb
scas
jbe
mov
xor
cld
scas
subl
std
pop
add
in
mov
add
push
sbbl
cmp
add
xchg
outsb
mov
popa
push
sbb
lods
ret
jg
incb
inc
or
jmp
lock
push
pop
scas
pop
mov
rcl
stos
fisubrl
xchg
xor
pop
cmp
push
cmc
fcmovne
movsl
test
push
out
mov
inc
out
bswap
mov
movsb
fstpl
int3
adc
subb
sub
mov
pop
xor
push
int
push
pop
movsb
out
scas
in
mov
mov
std
les
lds
add
out
lret
bound
sarl
loopne
popf
mov
jle
out
push
pop
js
iret
push
das
xor
in
xor
movsb
xor
dec
lock
inc
ret
jno
add
pop
out
out
push
mov
pop
sub
jecxz
std
in
out
inc
jbe
ja
xorl
out
popf
hlt
xlat
cmp
inc
sarl
jge
inc
mov
inc
xchg
lds
out
cmp
pop
pushf
mov
add
test
sub
mov
pop
and
sbb
shufps
sub
fdivrs
pop
sbb
aad
inc
cmp
das
cmp
aas
inc
dec
mov
pushf
aad
divb
mov
dec
sbb
add
aaa
jbe
add
cltd
mov
push
data16
sbb
push
dec
dec
push
scas
ds
into
out
push
inc
or
sti
mov
sbb
jno
adc
jle
sbb
adc
inc
ss
dec
inc
inc
add
xor
pop
ljmp
jge
out
dec
movsl
pop
popl
lcall
dec
xadd
stos
xchg
adc
add
jle
sbb
movb
pop
cmc
mov
inc
insl
test
pop
jno
push
dec
xchg
xchg
icebp
xchg
stos
mov
lahf
ljmp
cwtl
shlb
adc
xor
dec
dec
lock
inc
fs
dec
mov
ud2
sbb
xchg
arpl
add
jns
shrb
push
cmpsl
xchg
push
mov
jge
sbb
jae
ja
mov
out
inc
ljmp
jle
mov
test
dec
sub
jo
ret
stc
and
scas
sub
cmp
andl
data16
and
aaa
or
push
mov
dec
cs
mov
push
cmpsl
cmpsl
daa
mov
addr16
stc
mov
pop
fsubrs
sub
cmpb
cmp
out
nop
adc
sbb
jge
or
push
xlat
ret
adc
jne
xchg
shll
stos
dec
das
xchg
cmp
push
jecxz
inc
dec
imul
addl
dec
mov
in
outsl
lss
outsb
pop
cld
xchg
outsl
adc
scas
pop
mov
rolb
daa
loope
pushf
push
sbb
movsl
push
test
lret
sbb
mov
std
cmc
lock
dec
xchg
je
mov
adc
repz
sub
sub
sub
cmp
enter
push
int3
bound
es
add
cmp
and
iret
mov
xchg
sbb
xor
and
or
push
mov
push
pmaddwd
pop
cmp
push
shl
arpl
outsb
call
mov
js
pop
jne
into
dec
xor
jae
scas
in
dec
mov
loop
push
das
movsl
cmpsb
xchg
outsb
adc
add
data16
fistpl
mov
loop
faddl
pop
lcall
loope
sbb
push
js
sub
add
adc
xchg
je
and
pop
jns
sub
jo
loope
inc
dec
test
jb
mov
jns
sbb
fldcw
hlt
bound
ljmp
stos
loope
mov
cli
dec
and
cmc
int
in
aad
lea
xlat
pop
adc
jo
mov
fdivr
jecxz
cmp
xchg
inc
clc
or
sbbl
adc
pop
mov
pop
jl
jg
outsl
inc
das
add
fimuls
aam
repnz
ret
xchg
pusha
fmull
xor
inc
sbb
pop
repnz
xchg
icebp
inc
dec
jmp
jle
jnp
jns
and
cli
test
insb
fadds
push
inc
lahf
inc
fdivs
insb
dec
sbb
testl
push
xor
outsb
lds
sbb
fldcw
mov
arpl
aas
and
ficoms
inc
sahf
sub
or
mov
cmpsb
xchg
test
xchg
jns
push
jno
mov
mov
stc
push
in
inc
add
pop
hlt
lock
out
lahf
push
mov
fwait
enter
or
add
test
pop
xor
lds
push
xchg
in
jno,pn
pop
fidivl
add
push
sub
sahf
test
push
mov
xchg
stc
add
mov
mov
xlat
cmp
mov
sbb
rorl
scas
call
fildl
jb
lahf
cmp
popf
jle
hlt
fsts
cs
cli
push
mov
je
xchg
into
in
fistps
les
and
or
pusha
daa
ss
add
push
push
pop
sub
or
cs
mov
xchg
pop
push
mov
inc
mov
lock
sti
insb
jmp
rcr
mov
push
ret
cmp
jl
dec
fisubs
jecxz
sub
jnp
jne
test
pusha
aam
jp
mov
notb
test
aad
push
push
pop
add
mov
lcall
inc
ret
jb
sbb
or
inc
xchg
cltd
dec
aam
inc
sbbb
or
js
outsb
mov
xchg
fldcw
pop
mov
loope
pop
add
in
mov
mov
mov
xchg
push
mov
xchg
sbb
and
stos
lahf
lret
in
mov
loopne
rorb
aaa
imul
mov
popf
xchg
test
dec
ljmp
push
mov
jmp
push
pop
cmc
inc
insb
popa
in
test
xor
in
push
xor
mov
mov
or
jb
inc
sbb
xchg
xor
out
jecxz
jmp
cmp
push
adc
mov
in
inc
xor
pop
hlt
hlt
mov
shrl
xor
adc
add
std
mov
xor
mov
mov
or
xchg
pop
shll
cmpsl
pop
push
incl
fstl
ja
stc
std
dec
mov
aas
jno
das
imul
mov
add
negl
jl
pop
sub
mov
aad
adc
test
lahf
fsubl
ss
fwait
repnz
mov
lods
pop
mov
aaa
xchg
jecxz
mov
add
or
adc
cmpsb
xorb
mov
adc
aas
leave
ret
push
or
mov
xchg
xchg
rep
jmp
xchg
lods
outsb
jmp
fdivrl
out
dec
mov
lock
pop
or
mov
aad
mov
repnz
pushf
sub
adc
jnp
jne
cmc
pop
mov
adc
subl
rcr
or
mov
adc
gs
fwait
sub
adc
jno
mov
mov
add
inc
jl
xor
pop
cmc
leave
arpl
popa
sub
sub
mov
jbe
sbb
movsb
dec
add
punpcklbw
insb
push
jbe
notb
sbb
push
push
ret
adc
shl
add
pop
int3
lahf
sub
jb
fisubs
hlt
rorb
ret
insl
sbb
iret
or
sub
test
shrl
and
jbe
andl
cmpb
mov
pop
jne
loopne
test
imul
mov
xchg
mov
int3
fimuls
out
notl
movsl
sub
std
cwtl
and
lcall
xchg
dec
dec
jb
shrl
out
adc
sarl
sbb
inc
in
xchg
imul
inc
xor
cmp
and
inc
sti
sahf
cmp
fiaddl
cmp
jno
ret
in
pop
add
jnp
fs
imul
shlb
sbb
int
inc
mov
xor
sbb
test
sub
lds
repnz
aaa
lahf
repz
clc
cwtl
jb
repnz
sahf
push
test
test
sbb
out
or
enter
scas
sbb
stos
jno
clc
in
mov
test
test
lock
das
scas
cltd
ror
rcll
adc
out
pop
inc
jp
sar
andb
rorb
add
test
les
jp
xchg
xchg
cmp
sub
or
inc
aam
inc
xchg
sbb
es
and
std
fisubrl
adc
out
loop
dec
xchg
lret
arpl
dec
lds
mov
xchg
fisttpll
adc
pcmpgtb
cmp
fcomip
xor
ljmp
std
loope
lods
pop
out
dec
seto
je
mov
add
sub
xor
test
inc
xlat
mov
jns
xchg
in
push
jne
and
pop
incb
cmp
je
inc
xchg
movsb
mov
push
cld
leave
movsb
xchg
add
out
jnp
or
pop
pop
out
sub
subb
lds
pop
pop
or
jb
std
mov
addb
aad
cld
lret
ss
cltd
push
in
fidivs
mov
aad
inc
inc
cmc
and
out
push
aaa
cmpl
lea
rcrl
push
push
add
or
ljmp
mov
jns
mov
rcr
call
int3
insl
fdivrs
repnz
push
jg
cmpsb
ret
xor
push
or
imul
jmp
add
mov
xor
lcall
iret
mov
sub
push
ds
and
inc
and
pusha
sub
sub
mov
cmp
in
nop
sub
jl
mov
xor
inc
icebp
pop
sbb
dec
aad
xchg
adc
push
loope
jnp
loop
mov
dec
mov
sbb
in
sbb
xlat
dec
add
fsubrs
arpl
adc
add
xor
and
shr
ret
lret
xchg
stos
sbbl
push
pop
jae
arpl
adc
add
xor
and
shr
ret
lret
xchg
stos
sbbl
push
pop
jae
arpl
adc
add
xor
and
shr
ret
lret
xchg
stos
sbbl
push
pop
jae
arpl
adc
add
xor
and
shr
imul
and
jne
je
fs
addl
scas
or
cmc
lahf
in
aam
les
mov
cmpsb
jo
push
test
mov
inc
xchg
xor
and
adc
add
in
in
aam
lret
add
jno
inc
test
mov
pop
xchg
sub
roll
and
adc
daa
lret
sub
sbb
shlb
hlt
addr16
and
aad
ret
aam
mov
pushf
pop
mov
mov
fwait
mov
push
icebp
and
xchg
dec
xchg
pop
jno
int
sub
cmp
jno
sub
cwtl
jno
push
add
lods
mov
adc
pop
dec
out
mov
pop
dec
xchg
int3
test
popf
xchg
pusha
lret
loopne
icebp
jmp
add
into
loope
cmp
xor
push
and
jmp
pushf
lret
push
push
pop
nop
hlt
shl
fisubs
and
xor
dec
xor
pushf
clc
test
lret
scas
es
dec
or
or
imul
xchg
inc
test
push
addl
rcrl
int3
add
adc
test
sbb
xor
inc
cmpsb
inc
test
add
hlt
push
mov
cmpsl
push
mov
ss
jmp
fnstsw
leave
xor
pop
mov
push
pushl
test
add
out
and
add
cmp
sub
jl
and
adc
add
hlt
and
xor
add
adc
test
mov
inc
xchg
xor
and
adc
add
hlt
and
xor
add
adc
test
mov
aaa
push
pop
adc
jb
xchg
shll
jae
dec
add
sbb
cli
ljmp
lock
mov
xlat
pop
jmp
test
aam
cmp
push
push
push
lock
inc
mov
mul
cmp
hlt
adc
xchg
mov
stos
ja
sar
repz
pop
int3
push
icebp
or
ds
dec
sbb
sti
dec
hlt
int
lcall
xor
js
aaa
cmp
cld
pop
jg
in
xor
movsl
and
movsl
subl
out
ficompl
mov
je
fdivp
cmpsb
inc
lahf
lahf
pusha
mov
cmp
adc
mov
dec
mov
nop
mov
push
mov
outsl
sbb
fisubl
insl
pop
fcoms
pop
inc
and
mov
jo
gs
mov
lahf
ret
sbb
push
pop
lret
mov
cmpsl
jmp
icebp
or
adc
and
mov
mov
pop
pop
dec
mov
cltd
ja
pop
and
sub
fstpl
lods
mov
sbb
mov
stos
inc
rcrl
cmp
and
sbb
dec
or
xor
push
lcall
adc
cmc
js
jmp
jmp
dec
lods
sub
push
stos
or
dec
add
lock
arpl
and
scas
xor
mov
shl
jge
shll
jg
shll
movsl
ds
push
jbe
in
orb
paddw
xchg
popf
stos
xchg
xchg
std
mov
push
adc
add
jnp
outsb
add
into
or
xchg
cmpsl
pop
shlb
cwtl
shl
pop
lods
daa
sbb
or
lea
push
out
fsubrl
imul
push
xor
cmp
out
pop
std
jbe
rcrb
sahf
loopne
insb
cmp
xlat
movsb
cmp
shlb
and
fstpl
inc
bound
scas
add
mov
mov
sub
das
jnp
xchg
mov
fisubl
jecxz
cli
out
add
xor
cs
dec
stos
incl
add
fcmovnbe
push
inc
ja
mov
pop
mov
xchg
call
stc
cld
dec
mov
outsb
in
push
lcall
aas
xorl
jae
ret
push
mov
sbb
ds
out
sahf
cmpsl
lret
cmp
dec
fisubs
xchg
xchg
movsl
ret
fisubs
rcl
xor
andl
push
sbb
popa
bound
aam
iret
add
mov
lret
cmp
test
decl
push
mov
dec
test
push
cmp
mov
scas
add
divl
push
cmp
pushf
ret
shlb
fdivr
fs
mov
xrelease
cmc
push
push
jmp
cwtl
pop
mov
xchg
xchg
es
out
enter
jns
sbb
cmp
mov
mov
popf
mov
repnz
cli
cmpsl
rol
mov
inc
jecxz
out
gs
movl
mov
enter
stos
mov
subb
ret
das
mov
mov
push
fnstsw
xlat
lock
outsl
push
push
aam
mov
lods
mov
xchg
inc
pop
push
xchg
aaa
loopne
int
add
sbb
lods
mov
stos
cltd
fcomip
inc
cltd
repnz
adc
inc
int
es
jg
popf
lds
push
sti
adc
add
enter
sub
outsb
roll
pop
pop
push
mov
dec
push
and
xor
inc
aaa
lcall
fsts
lcall
int
pop
andb
push
fsts
es
stos
cmpb
lret
call
jg
rcl
cmp
outsb
cld
pop
dec
pop
gs
adc
mov
pop
push
xabort
test
push
je
and
pushf
mov
pusha
push
lahf
and
mov
mov
mov
mov
jmp
ret
imul
jmp
cmpsl
xlat
pop
mov
shrb
cltd
add
gs
cmp
xchg
insl
cmp
adc
xor
sub
mov
movsb
cmp
pop
sub
add
cmc
pop
or
and
dec
lock
jae
sub
nop
xor
jp
outsl
sub
pop
mov
sti
mov
pop
cmp
movsb
push
adc
and
jnp
jo
out
mov
sbbb
ret
rcrb
call
lret
sbb
int
movsl
testl
inc
xchg
popa
jnp
arpl
not
pushf
loopne
jbe
pop
scas
push
lret
jp
flds
xchg
ds
bound
jl
mov
shll
fcomps
jmp
pop
fcoml
mov
jns
lods
insl
shrl
lret
fdivl
jmp
mov
and
cmp
imulb
in
sbb
cld
sub
and
int3
mov
cmp
sbb
scas
mov
fistpll
jbe
test
shrl
inc
mov
sub
mov
and
xor
out
lock
adc
stos
test
dec
jl
loop
sbb
xchg
dec
and
push
aad
dec
cli
dec
cmpsl
arpl
popf
xor
adc
sbb
lret
pusha
je
mov
in
fadds
int3
mov
lahf
fimull
out
fs
jae
fists
push
int
sub
jns
inc
movsl
fcoml
sub
or
xchg
or
sbb
int3
mov
andb
mov
insl
nop
loop
test
call
dec
dec
mov
pop
shl
aam
inc
cwtl
js
xor
dec
and
push
in
jecxz
cmp
or
inc
adc
push
mov
and
test
popa
push
xchg
xchg
jg
xorl
repnz
add
aaa
mov
loope
into
mov
cmpsl
or
jno
cs
xchg
out
mov
outsb
add
out
pusha
addr16
and
sbb
icebp
pop
adc
mov
jb
or
cmp
popf
bound
lods
or
push
or
icebp
push
in
push
dec
ds
pmulhuw
lcall
pop
pop
sbbl
pop
jae
adc
jmp
jnp
push
xor
movb
flds
gs
sbb
cmp
dec
inc
dec
push
sub
sub
pusha
sbb
dec
mov
sarl
xchg
cli
test
sub
pusha
mov
adcl
ljmp
out
push
and
movsl
mov
js
iret
das
jl
or
xchg
adc
push
loopne
mov
pop
or
push
roll
std
or
mov
pop
idivb
mov
and
in
nop
icebp
dec
shlb
and
jecxz
mov
or
jmp
fiadds
jb
lds
and
in
mov
outsb
jecxz
xor
or
xchg
sahf
sti
repnz
loopne
pop
sbb
sbb
mov
xchg
sbbl
mov
adc
push
mov
sub
imul
out
imul
dec
mov
jge
or
cmpsb
dec
pop
adc
xor
in
les
pop
scas
and
pop
ret
jmp
xchg
push
cld
mov
and
loop
ja
dec
sub
aas
jno
and
jmp
mov
adc
sti
test
push
xor
push
xor
jp
push
lods
dec
lods
fldcw
std
fwait
inc
movsl
push
out
jg
frstor
inc
sbb
data16
add
xchg
cmpsb
dec
dec
pop
cmp
xor
hlt
into
pop
push
cwtl
xlat
push
pop
nop
xchg
arpl
std
lods
mov
push
sub
push
push
mov
outsb
adc
in
andl
sub
jnp
adc
xchg
ret
jecxz
cmp
gs
sub
rolb
mov
inc
add
or
mov
stos
dec
lahf
jge
ljmp
jo
mov
xor
scas
out
out
add
cmpsl
arpl
pop
insb
loopne
pop
dec
movsb
xor
rorb
hlt
or
or
mov
jns
scas
cld
or
mov
icebp
imul
popa
mov
pop
mov
sbb
push
out
mov
fisubs
sbb
pop
xchg
cmp
decl
mov
loopne
pop
test
imul
dec
lods
mov
pop
stos
lret
sub
clc
insb
jmp
and
jmp
aas
add
push
mov
ljmp
hlt
adc
pop
in
bnd
imull
xrelease
sbbb
add
fmull
jle
ja
sub
outsl
aad
adc
lea
xchg
inc
xor
test
adc
push
out
mov
lds
das
mov
jne
xchg
or
xlat
and
add
outsl
es
sub
sub
lcall
mov
call
sahf
arpl
test
sti
inc
test
les
popf
fbld
ret
sbb
cmp
or
test
xchg
insb
mov
rcll
nop
aaa
enter
pop
cmp
cmpsb
jmp
ret
das
mov
frstor
sbb
icebp
mov
popf
jnp
xchg
xchg
les
push
xor
add
push
rcll
lcall
mov
add
mov
or
push
out
adc
cmc
mov
shlb
cmp
pop
jo
out
jo
lcall
add
mov
push
fwait
js
cmp
jae
and
xorl
ljmp
stc
lods
push
rclb
pop
jb
pop
mov
xchg
adc
xchg
push
xchg
test
in
jno
lret
jp
sbb
inc
and
aad
icebp
and
ljmp
mov
aad
test
test
cli
and
add
shlb
sub
test
loope
sbbb
sarb
scas
jmp
mov
pop
xchg
mov
xor
add
add
cmc
xchg
push
inc
daa
mov
mov
push
sub
and
stos
pushf
xor
bound
ss
xor
rol
test
cmc
cmpsl
repnz
sbb
sbb
idiv
test
jl
pop
jmp
adc
cmp
xor
sti
jge
cltd
popf
shll
xor
out
flds
sbb
lods
push
jecxz
adc
jecxz
lret
add
xchg
ljmp
push
ljmp
adc
out
xor
push
ret
outsl
test
jbe
or
inc
aam
aaa
hlt
xor
mov
rorl
pusha
in
std
and
pop
sub
rcrl
js
mov
leave
push
loopne
lods
cmp
psubsw
cmp
std
push
push
inc
nop
fildl
je
xchg
rcrb
push
gs
leave
add
fmuls
repz
or
pusha
push
je
aaa
daa
fsubl
leave
mov
call
es
jno
inc
mov
test
movsb
sbb
xchg
out
push
mov
add
mov
jbe
and
push
lock
jo
or
js
call
sub
loopne
sarl
rorb
lods
hlt
stos
imul
pop
jne
outsb
push
loop
xlat
jb
adc
scas
scas
dec
les
jp
in
xchg
jg
mov
clc
shlb
push
hlt
inc
test
pop
mov
cwtl
inc
and
cmpsb
pop
jb
dec
mov
and
daa
in
mov
sbb
nop
leave
ljmp
pop
sahf
out
cld
pushf
xchg
repz
fnstsw
aaa
cmc
hlt
mov
sub
xor
cmp
ds
test
ficoml
fidivrs
cmc
pushl
xor
loopne
les
jb
push
fwait
cmc
adc
fidivl
add
popa
sub
sub
fildll
xchg
jno
arpl
out
push
pop
sbb
mov
cmc
and
xor
lret
mov
loope
mov
pop
add
push
insb
pop
movsl
les
lock
orb
cmp
movsl
pop
xchg
arpl
cmpsl
rcr
rcrl
in
lods
sbb
dec
insb
jle
inc
outsb
ret
xchg
mov
out
jne
cli
dec
pop
mov
cmp
xchg
and
in
mov
mov
stos
rorl
sub
pop
mov
enter
mov
jg
mov
in
mov
inc
jo
jno
xchg
xchg
xchg
test
adc
adc
or
out
push
shrl
adc
fldenv
pop
cmc
jno
mov
jnp
arpl
jp
xchg
jbe
inc
daa
cmp
mov
fcmovnbe
jnp
fs
jl
pop
mov
sahf
test
sub
ret
insl
into
sbb
jge
insb
mov
pop
aas
sub
aam
fwait
pop
push
or
pop
enter
into
pusha
sub
cmc
out
push
das
cltd
mov
sub
jb
enter
add
or
imul
jge
leave
rcl
push
mov
lock
js
dec
inc
or
cmp
xorb
mov
stc
inc
test
orl
mov
es
jns
fstl
push
orb
arpl
loopne
push
inc
lock
popa
leave
pop
int
mov
mov
js
adc
push
cltd
mov
push
mov
add
and
pop
movsb
dec
movsl
lds
int
movsl
or
mov
mov
xchg
sbb
cmp
in
cli
adc
insl
pusha
shl
imul
push
mov
fwait
sbb
das
orl
loopne
cmc
or
sub
sbb
and
pop
shll
fimuls
push
dec
or
push
iret
jae
cli
test
mov
enter
fldcw
inc
jnp
mov
imul
call
xchg
fpatan
shrb
enter
xchg
adc
xlat
jb
cwtl
out
xor
jmp
xchg
xor
jbe
subb
fldcw
pop
ret
and
sbb
into
fistl
outsb
jo
les
push
inc
sbb
mov
mov
push
push
cld
push
mov
shlb
xchg
mov
add
aad
data16
divps
add
insb
jecxz
inc
xor
or
test
cltd
nop
rol
into
pop
test
mov
add
mov
pop
out
adc
mov
fcmovbe
hlt
cs
jnp
mov
sub
add
mov
insl
inc
lret
inc
in
sub
jae
cli
iret
xchg
add
mov
jb
repz
arpl
in
pop
std
lcall
dec
lret
xchg
dec
insb
add
pop
xor
data16
test
aam
sbb
or
mov
bound
es
push
fcoms
inc
addr16
rorb
hlt
jg
cmpsl
movb
xlat
or
or
aam
into
mov
cld
test
scas
adc
sub
mov
je
xchg
gs
insb
pop
pop
jo
outsl
xchg
inc
js
outsl
add
push
xchg
cmpl
pop
cltd
pop
jbe
jbe
pop
icebp
inc
addl
repnz
mov
jecxz
ret
insb
or
or
jmp
es
ds
movsl
jle
push
in
cld
inc
pop
in
scas
push
ja
out
test
and
nop
add
cmp
xorb
dec
dec
lret
jne
sub
or
and
clc
popf
jge
insb
pop
cmp
and
out
sbb
or
mov
add
sbb
cltd
mov
push
xor
in
dec
dec
cmc
mov
scas
das
mov
fiaddl
mov
xorl
in
imul
into
scas
lds
sbb
add
outsl
aam
addr16
mov
add
pop
insb
int3
sbb
imulb
add
jmp
mov
push
push
inc
fidivrl
stc
xorb
out
mov
in
loope
cwtl
push
push
pop
hlt
cwtl
fwait
xchg
cmpsb
mov
imul
push
push
icebp
fs
xor
adc
mov
jbe
jns
mov
dec
and
push
pusha
add
fidivrl
pushl
mov
jae
rcrl
sbb
dec
in
push
adc
imul
jg
in
dec
sbb
aaa
es
aam
xor
pop
dec
bound
mov
lock
sbb
icebp
nop
sbb
clc
adc
into
orl
xor
scas
jecxz
popf
es
std
js
cld
stos
inc
mov
sbb
loope
jge
outsl
fwait
and
test
cmc
subl
icebp
arpl
sub
jl
or
arpl
in
lcall
and
movsl
pusha
arpl
sub
jbe
push
push
or
sub
or
pop
xor
popf
adc
sbb
gs
and
jae
pop
rolb
bound
cmp
push
push
xor
call
rorl
push
pop
mov
cmp
jl
addb
ret
jb
dec
mov
in
jo
pop
mov
hlt
sub
push
bound
cs
or
push
push
jmp
into
fcompl
dec
adc
fstps
mov
cmp
outsb
fdiv
scas
lock
lcall
add
jle
cmp
pop
add
sbb
jae
cmc
xchg
add
sbb
bound
in
jb
jo
jle
out
cmpsb
dec
mov
dec
cmc
fcmovnbe
sub
scas
mov
dec
arpl
pop
xor
mov
mov
inc
add
cwtl
mov
jl
or
cwtl
jmp
adc
ja
jno
mov
inc
mov
cmpsl
sbb
mov
rclb
lret
pop
jbe
or
test
stos
push
ss
add
test
mov
and
cmp
push
mov
out
jb
pop
pusha
cmp
in
ljmp
ja
in
enter
hlt
sbb
aaa
repz
push
es
pop
jecxz
sbb
int3
out
enter
mov
cmp
sahf
jae
jmp
sbb
xchg
fistpl
iret
push
mov
lahf
inc
push
fcompl
jns
pxor
pop
pop
or
push
or
ss
xchg
xlat
ja
jge
jmp
mov
mov
jmp
sbb
in
lcall
xchg
mov
jle
insb
cmpsb
push
sub
outsb
jb
sub
xlat
cld
jo
fisubrs
jg
xchg
cmp
sbb
in
cmpsb
test
fidivl
and
iret
ret
lret
or
mov
cmpsb
dec
pushf
lods
fs
in
jno
mov
mov
mov
mov
mov
xchg
outsl
jmp
cli
repnz
sub
hlt
or
inc
push
mov
imul
dec
sub
out
adc
inc
sub
lret
or
out
shlb
cmp
sbb
aam
inc
lock
inc
les
enter
addb
cmpsl
sbb
push
fldlg2
out
xchg
mov
dec
jnp
jns
out
addr16
out
or
fcoms
fildll
push
repz
aam
push
popl
push
mov
add
lea
lock
mov
test
int3
inc
mov
xchg
fidivrs
cmp
sbb
dec
les
lea
outsb
xchg
pop
cmp
sti
shrl
and
cmp
sbb
lods
imul
jnp
and
call
add
push
mov
pop
xchg
mov
mov
pop
in
ret
ror
test
loope
cld
test
insb
pop
out
jne
pop
daa
mov
pop
push
dec
push
push
testb
ret
add
lods
jg
and
or
icebp
subb
sbb
gs
mov
and
mov
sbb
int
clc
pop
dec
add
test
add
xor
pop
shlb
lock
adc
aad
ss
xor
pop
and
or
insl
pop
xchg
ret
dec
cvttps2pi
movsb
adcb
sbb
int
xor
jo
and
rol
xchg
and
mov
sub
mov
clc
mov
xchg
bnd
inc
lret
leave
sti
sbb
pop
dec
xchg
loopne
out
jnp
call
add
rorb
dec
popa
cli
inc
imul
mov
aas
imul
dec
sbb
aaa
mov
fildl
fiadds
lods
jp
push
lcall
lods
inc
idivl
mov
insl
bound
lds
scas
mov
inc
stos
in
push
mov
dec
mov
lods
test
stos
lahf
out
xor
push
mul
and
mov
cmp
arpl
gs
cmc
iret
pmulhuw
jae
push
jo
mov
cmc
outsl
xchg
xchg
adc
xchg
push
and
ja
inc
sub
inc
add
test
inc
idivl
stos
cmp
test
xor
cmpsb
fwait
call
pushf
int
mov
and
in
xchg
int
dec
mov
bound
xchg
ljmp
dec
and
adc
js
repnz
in
icebp
aas
push
inc
dec
jl
dec
shlb
adc
inc
xchg
xor
mov
rol
out
mov
cltd
mov
jno
push
jle
ret
pop
addl
roll
and
xor
add
adc
test
mov
inc
xchg
xor
and
adc
add
hlt
and
xor
add
adc
test
mov
inc
xchg
xor
and
adc
add
hlt
and
xor
add
adc
xchg
mov
inc
xchg
ss
icebp
xchg
roll
add
retw
jmp
jnp
fucomi
pop
mov
mov
cmp
dec
test
mov
ljmp
aad
or
clc
push
jnp
or
cmp
mov
pop
mov
fwait
cmp
dec
pop
imul
or
cmp
mov
sahf
sub
jnp
pop
mov
jl
lods
pop
mov
andb
pop
dec
jecxz
xchg
or
xor
divl
push
push
jmp
cmp
mov
adc
mov
xchg
and
mov
jbe
jbe
addr16
push
into
sbbb
xchg
sbb
cmove
ret
lret
imul
les
fdivr
fisttps
xchg
fmuls
mov
cmp
ljmp
mov
divl
add
jecxz
adc
mov
test
test
inc
repz
mov
pop
pop
loope
decb
jmp
rorl
clc
std
cltd
xor
or
xor
inc
fwait
jge
in
jb
fs
fsubrs
jnp
or
cmp
lret
push
sti
mov
stos
adc
xchg
pop
movsb
xor
aad
std
pop
fbld
in
lahf
cmp
outsl
xlat
push
jl
jno
scas
sbb
outsb
cli
jg
sub
inc
stos
cltd
or
push
sti
insl
movsb
imul
pop
mov
in
mov
lret
push
sti
pop
mov
fwait
cmp
call
jnp
or
cmp
jmp
sti
pop
mov
fwait
cmp
call
sub
js
adc
fsubl
addb
fldenv
xorl
ljmp
test
jle
dec
and
xor
ljmp
push
iret
mov
movl
mov
hlt
adc
out
inc
fsts
sbb
or
mov
out
out
fisubrl
dec
sahf
test
les
push
fmull
xchg
mov
inc
popa
and
mov
or
xor
rcl
or
scas
lods
das
sub
notl
dec
jbe
jnp
int
fidivrl
imull
arpl
mov
shl
xchg
pop
sti
fmuls
push
add
lss
enter
aaa
add
insb
ss
mov
jnp
in
rol
jecxz
jge
xchg
mov
lds
stos
add
mov
sub
cmp
add
popf
ljmp
inc
addr16
test
lods
dec
jnp
mov
aad
out
lret
mov
aaa
inc
push
mov
imul
das
mov
jmp
sarb
xchg
xchg
mov
gs
jb
loope
shll
xlat
or
jno
mov
push
adc
fisubrs
adc
or
adc
add
jno
xchg
pop
and
aam
rcrb
sbb
jle
inc
ror
cs
ret
lock
sub
decl
inc
add
push
rcll
xchg
loope
dec
push
lock
ljmp
jo
cmp
and
jae
aam
sub
iret
cmp
and
nop
cltd
imul
adc
sbbb
inc
cmp
shlb
dec
pop
adc
std
aas
sbb
lea
pop
xor
sbb
xor
enter
into
pop
popa
pushf
jb
cmp
sahf
mov
sarb
cmpsl
loopne
mov
das
add
cmp
pop
aam
mov
addr16
mov
cmpsb
mov
jo
fstl
cmp
sbb
push
bound
loopne
jl
xor
int3
nop
xchg
enter
dec
mov
ljmp
jae
test
jbe
mov
fidivrl
ficompl
insb
cmp
cmpsb
pushf
inc
xor
adc
push
pop
movsb
or
add
fidivl
divb
sbb
data16
sub
inc
dec
lcall
sbb
das
cwtl
stos
add
add
testl
xchg
test
sub
and
nop
mov
sar
fdivp
repnz
loop
jns
inc
pop
dec
jnp
and
add
stc
cmp
pop
inc
roll
mov
insl
or
movsb
push
push
repnz
fists
ja
shll
out
fists
and
and
pop
sbb
sub
mov
sbb
mov
inc
rolb
or
push
cltd
out
ds
and
adc
out
jg
jns
mov
dec
cltd
mov
in
jb
jle
jg
push
sub
dec
cmp
shrl
xor
daa
jl
sti
add
pushf
jmp
dec
fdivl
in
push
jb
ret
sub
adc
push
jbe
add
dec
inc
and
pop
adc
ss
es
sub
inc
cmp
cs
lds
out
jae
xchg
jl
sbb
jnp
call
xor
dec
mov
popa
sub
mov
insb
inc
push
daa
insl
pop
xor
arpl
popa
xchg
add
pop
cmp
lret
cltd
push
mov
pop
movsl
pop
xchg
inc
std
mov
sbb
dec
fcoms
idiv
scas
lods
mov
aas
and
je
sub
adc
push
push
jmp
lcall
ds
mov
dec
fchs
push
xchg
lock
and
jbe
push
and
enter
sub
mov
xchg
stos
dec
push
xor
and
mov
arpl
popf
aas
push
psrld
shrl
xor
dec
xor
arpl
xor
xchg
dec
fidivs
inc
cmpsb
mov
les
cmpsb
dec
mov
mov
cs
shr
mov
mov
mov
mov
dec
jnp
lret
loop
mov
jne
mov
dec
jb
ret
imul
js
outsl
in
mov
mov
push
outsl
std
dec
lods
je
cld
movsb
jl
cmp
sbb
enter
push
cld
cwtl
adc
lcall
lahf
stc
jecxz
mov
mov
cmc
sarb
pop
outsb
adcl
daa
clc
add
addb
fists
mov
ret
mov
rcr
sbb
xchg
aam
sub
inc
jns
fmul
iret
push
test
or
and
std
xchg
cld
sbb
icebp
dec
xor
test
xchg
hlt
fsubs
mov
push
add
jge
daa
out
adc
mov
in
dec
jecxz
je
inc
aas
cmp
cmpb
jg
lret
jmp
call
ret
inc
xchg
loop
into
clc
les
aam
dec
pop
mov
jae
inc
jbe
int
inc
movsl
pop
or
into
lret
xor
in
lahf
push
adc
movsb
imul
popl
fidivs
sub
lods
frstor
sbb
cmpsl
inc
cltd
push
mov
or
xchg
rcll
sbbb
add
push
push
fisubs
gs
lret
dec
mov
xor
dec
xchg
jns
mov
xchg
rorb
mov
popa
gs
xor
mov
out
or
dec
mov
dec
and
fsub
outsb
lret
popf
leave
inc
ljmp
popa
adc
push
fnstenv
pop
ljmp
aam
arpl
mov
fstpt
jl
jae
xor
push
lahf
sbb
and
addr16
gs
push
dec
mov
enter
xor
pop
or
mov
push
pop
pusha
out
out
shlb
insb
setae
dec
inc
xor
xchg
add
and
mov
pop
mul
fadd
dec
inc
xor
cld
popf
icebp
mov
xchg
add
xchg
push
adc
dec
lock
cmp
lret
loope
dec
push
sub
in
add
sub
add
ficomps
push
sub
popa
cmc
adc
xor
and
nop
aam
mov
mov
addr16
or
xchg
pop
add
movsl
jne
lret
fdivs
sbb
pushf
sar
pusha
add
cli
jne
ret
mov
inc
mov
add
adc
aas
cwtl
mov
fstpl
xchg
fnstenv
pusha
comiss
sahf
xor
into
pop
sub
dec
cmpsb
sbb
int3
cld
adc
pop
mov
mov
xorl
in
imul
pop
pop
out
lahf
cmp
test
or
pop
dec
ds
test
lret
pop
pop
sbb
push
pop
push
dec
std
xor
sbb
bound
dec
es
or
loopne
dec
sub
bound
pop
jle
clc
popf
jecxz
shlb
cmp
loopne
dec
cmpl
and
inc
int3
rcll
popf
sub
arpl
and
push
add
fs
xor
dec
jb
ds
xchg
pushf
mov
hlt
mov
and
clc
mov
cmp
push
mov
iret
inc
dec
cltd
and
fwait
in
jge
cld
or
push
inc
das
push
divl
mov
jecxz
lds
jg
stos
mov
arpl
int3
clc
push
push
fs
add
cmp
insl
cmp
data16
ror
xchg
lods
bound
jnp
leave
inc
push
cmc
add
test
ja
rorl
jle
sub
inc
adc
gs
test
lock
fcmovnbe
test
cld
xorb
jg
leave
mov
xchg
lds
xchg
jp
arpl
mov
jnp
jg
xlat
add
out
imull
loopne
or
movsb
sub
push
pop
aas
mov
jmp
in
mov
add
jae
add
test
ret
popa
adc
sbb
js
lret
inc
mov
xor
mov
xor
push
cmp
cmp
xchg
jae
ja
outsb
jmp
dec
outsl
xchg
scas
xor
and
add
cli
icebp
xor
push
inc
mov
fwait
cmpsb
popf
outsl
add
sbb
push
insb
add
shll
jg
dec
lret
daa
scas
pop
jns
sahf
out
les
pop
sub
push
out
mov
pop
dec
xrelease
adc
scas
sub
cs
sub
bound
mov
popa
iret
fnstcw
dec
cwtl
lds
push
sub
cmpsb
push
fists
cmp
add
pop
test
sti
add
mov
scas
icebp
sbb
movsl
dec
adcb
pop
icebp
shlb
cmpsl
xchg
ret
push
popa
mov
call
loopne
dec
push
cmc
aam
pushf
dec
es
negb
jnp
jnp
add
sbb
jns
cmp
movsl
xlat
mov
cmp
dec
test
lcall
aam
inc
movsl
cmp
jmp
mov
imul
add
lods
cmp
mull
sub
sbb
lret
out
xchg
inc
repnz
push
int3
jns
loopne
out
enter
cmp
push
fsubr
ljmp
lock
pusha
movl
imulb
nop
enter
mov
pop
outsb
insl
and
vcvtss2sd
and
inc
aas
divb
sub
mov
mov
cmp
in
mov
sahf
adc
pusha
lods
mov
leave
mov
fwait
rcrl
daa
movsb
pop
ret
xor
inc
loope
jmp
and
sub
inc
clc
aad
gs
aad
dec
outsb
jae
and
jbe
jg
repz
add
pop
das
sub
or
jle
out
bound
cmp
pop
cli
test
mov
loopne
dec
nop
jns
dec
xchg
mov
lret
cmpsb
cwtl
out
sbb
dec
fwait
mov
aad
enter
wbinvd
mov
fidivrs
add
daa
sahf
jge
and
fidivl
and
ja
mov
jno
cmp
std
dec
lods
xor
push
xor
loopne
test
loopne
mov
popf
roll
fisubrl
rol
je
and
jo
je
xchg
ljmp
movsl
lret
sbb
aaa
xor
add
sbb
lods
sub
mov
lock
add
push
scas
pushf
mov
data16
push
mov
cmpl
cmp
dec
sbb
sub
scas
push
out
es
lods
cmp
mov
aaa
inc
or
in
sbb
repz
sbb
rolb
inc
stc
dec
test
in
pusha
out
jbe
popf
jmp
sbb
push
test
fsubr
ret
sbb
pop
and
fdivs
mov
or
fstpl
ljmp
pop
pop
mov
xor
xchg
je
ss
mov
xchg
jge
add
rorb
das
mov
sub
loopne
rcll
jne
mov
and
aam
out
in
cwtl
and
sbb
add
cltd
sub
push
push
add
mov
mov
in
aad
and
cmp
pop
sub
add
or
cli
jecxz
in
jp
fisubrl
dec
add
sub
scas
jae
push
and
mov
pusha
test
iret
dec
fsubr
decb
dec
sbb
data16
dec
repnz
push
pop
push
sub
fstpt
popa
mov
pop
pop
cmpsl
pushf
shlb
data16
dec
inc
push
dec
aam
mov
popf
call
sti
enter
cmpsl
push
pusha
cmpsl
shl
scas
aam
or
dec
or
aad
pusha
mov
xlat
cmp
xchg
mov
jp
divb
mov
ja
cmpsb
dec
lahf
fbld
cmpsl
mov
push
and
push
cs
push
pop
loope
xor
scas
mov
mov
mov
mov
cmp
push
and
add
ljmp
mov
adc
in
pusha
mov
push
std
add
mov
xchg
gs
lahf
sbbl
mov
sbb
addr16
fisttps
xor
mov
dec
inc
mov
jecxz
or
fstpt
xchg
cmp
inc
lret
xorb
mov
es
mov
mov
call
pop
test
xchg
mov
imul
jns
and
pop
push
dec
push
and
fisttpll
in
outsl
xchg
int3
out
jg
sti
push
dec
add
cmpsb
xchg
js
sbb
out
dec
daa
inc
xchg
xor
mov
xchg
test
mov
movsb
stos
mov
add
push
or
mov
adc
push
int
ret
push
sbb
push
xchg
adc
sub
lods
scas
cmp
mov
inc
pushf
mov
mov
or
adc
pop
pop
fwait
imul
loope
lret
cmc
icebp
popf
sub
fcmovb
cmpsb
or
cmp
lahf
addb
add
test
inc
ficomps
adc
push
stos
imul
sbb
repnz
xor
inc
dec
jmp
std
cltd
mov
loop
pop
popw
sub
push
dec
sbb
mov
sbb
xor
inc
inc
movsl
cmpsl
pshufw
into
dec
mov
xchg
idivl
lock
mov
xchg
rcll
xor
pop
jle
daa
loopne
lahf
stc
jnp
lret
out
xchg
jmp
or
xor
pavgw
xchg
in
xchg
int
ret
cmp
inc
sbb
mov
pop
push
pop
roll
pop
push
xor
dec
and
test
jns
out
test
fimuls
aaa
dec
cmpsb
cld
mov
sub
push
or
xchg
and
add
push
pop
dec
aam
shl
inc
int3
jg
mov
dec
mov
dec
inc
sbb
sbb
imul
mov
stos
cmc
jle
mov
adc
push
dec
daa
loope
cmpsb
test
je
out
int
sbb
pop
mov
fisttps
xchg
test
scas
jo
cmpsb
ret
push
and
and
cmc
sahf
jle
dec
push
scas
sub
nop
sub
sbb
mov
dec
cltd
fsubrs
inc
xlat
add
test
popf
or
push
xchg
repnz
aas
loopne
iret
insb
push
or
data16
and
inc
cmp
mov
mov
mov
sbb
into
loopne
sbb
mov
enter
pop
push
adc
sbb
inc
xlat
movsl
inc
xrelease
shr
sbb
or
popf
iret
xchg
out
pop
adc
cli
lock
iret
dec
cli
ret
xor
fisttpll
xor
push
fs
rclb
icebp
enter
or
jecxz
sub
nop
fs
cmp
xor
cmp
inc
stos
xchg
je
mov
xor
mov
enter
inc
cmpsl
aam
icebp
push
jge
popf
and
xchg
push
shll
test
push
sqrtps
in
mov
mulb
outsl
or
push
jecxz
cli
xchg
flds
adc
xor
xchg
int
dec
in
mov
lock
push
xchg
inc
sub
test
or
mov
push
adc
push
pusha
gs
mov
ret
dec
fbstp
push
cmp
in
imul
mov
fbstp
sbbl
fisubl
dec
xor
inc
pop
adc
dec
fs
testb
rcll
sti
icebp
dec
outsb
add
out
adc
pop
push
or
sub
cmp
pop
imul
test
cwtl
lahf
nop
aam
or
cmpsb
fadds
mov
pop
lahf
xchg
xlat
lea
stc
mov
mov
xor
inc
pushf
mov
dec
test
outsl
mov
jl
jb
jmp
cli
out
int3
pusha
and
ja
sbb
inc
lds
push
imul
push
fmull
fistl
mov
in
ffree
sti
hlt
jle
mov
jmp
es
push
mov
call
sbb
cmc
mov
inc
pop
mov
repz
rorl
jnp
roll
sbb
mov
enter
cmc
cmc
aas
add
mov
lods
fnop
pop
dec
sahf
xor
mov
cmp
push
push
fsts
int3
jnp
out
sbb
scas
adc
sub
jbe
xchg
jecxz
ss
test
add
mov
pop
cmp
jecxz
inc
inc
cltd
xor
xacquire
xchg
or
xchg
iret
mov
jnp
add
cs
jbe
test
in
shll
add
in
daa
jno
shlb
or
push
adc
or
lcall
or
jge
pop
insl
scas
mov
fisubrs
and
and
movsb
cli
sub
sub
jne
or
mov
add
jge
sbb
mov
fsts
out
pushl
xchg
sub
imul
jne
mov
loope
push
and
es
fsubrl
popf
clc
ret
out
dec
dec
pop
xor
fcmove
xchg
pop
xor
xchg
inc
mov
bound
pop
rolb
and
sbb
inc
lret
sahf
add
iret
clc
mov
jnp
icebp
jmp
mov
test
rclb
stos
sbb
adc
clc
sub
pop
inc
add
jo
or
push
scas
mov
subb
inc
jmp
xor
dec
sub
mov
in
std
xchg
mov
mov
fimuls
mov
cli
adc
subb
in
or
loopne
adc
sub
push
cmpsb
mov
dec
adc
ja
int3
add
mov
jno
in
xchg
mov
jne
jne
data16
pop
inc
or
add
cwtl
pop
add
or
dec
aam
xor
lods
leave
mov
lahf
mov
pop
lds
je
pop
cs
and
in
out
fstpl
lahf
dec
sbb
mov
push
or
fildl
mov
lods
sbb
cmpsl
push
inc
dec
mov
les
fcomps
jle
adc
mov
dec
adc
dec
out
out
arpl
jg
xor
cltd
mov
pop
imul
xchg
pop
test
mov
clc
inc
adc
nop
pop
xchg
imul
add
and
inc
ret
push
xchg
push
mov
pop
outsb
mov
sti
cli
sbb
sub
icebp
adc
add
in
and
iret
lods
xor
mov
pop
imul
sub
jp
inc
rorl
icebp
test
gs
mov
pmulhuw
aas
push
aas
addr16
cmp
jae
and
mov
ret
jg
es
test
das
iret
push
inc
inc
sub
sub
daa
pusha
push
pop
daa
jle
cmp
movsl
loope
pop
bnd
or
jl
loopne
ret
arpl
test
out
jne
lock
sub
and
fs
testb
or
dec
push
dec
mov
clc
ljmp
adc
stc
jecxz
sub
push
sbb
cmp
sub
adc
stc
add
dec
and
rcrb
mov
adcb
push
and
or
jnp
sub
dec
test
scas
or
int3
dec
jae
ljmp
pop
mov
scas
icebp
cwtl
aad
push
mov
xchg
ja,pn
mov
and
pushf
xchg
mov
nop
lods
sbb
jp
addr16
ja
push
add
sti
mov
mov
rcl
and
loopne
imul
lea
stos
daa
mov
das
push
inc
shll
repz
divb
dec
mov
and
jge
dec
f2xm1
jo
jp
add
pop
cld
push
push
inc
mov
sub
mov
es
xor
cmpsl
in
int
or
gs
in
dec
mov
mov
ja
addl
mov
push
xchg
add
sub
mov
lret
imull
stc
sbb
mov
push
or
into
sub
push
push
mov
pop
mov
or
jp
push
jmp
ret
inc
xchg
mov
adc
xchg
push
out
mov
sbb
je
scas
stos
idivb
dec
push
dec
pop
lea
lods
aad
divb
or
jmp
leave
sbb
nop
or
mov
minps
mov
cmp
pop
sti
test
push
mov
aas
mov
cwtl
lcall
aas
push
xchg
xchg
dec
cmp
sarb
sbb
lahf
dec
es
or
sub
sbb
xor
cmp
xchg
pop
pusha
mov
int3
mov
mov
out
xorb
xchg
mov
pop
je
fbld
mov
jae
mov
mov
mov
dec
pop
mov
cwtl
out
sub
jbe
mov
mov
in
adc
iret
sub
and
ret
mov
or
or
fwait
cmp
sub
xor
xor
daa
sub
xor
jge
arpl
dec
out
out
lcall
sub
andb
xchg
add
or
inc
adc
andb
push
movsl
clc
aaa
ds
shl
push
push
sbb
ss
out
cmp
fdivrl
enter
cmp
sub
adc
mov
test
in
xchg
aaa
xchg
pop
mov
shrl
cmpsb
lock
dec
insl
jb
movsl
push
jmp
es
nop
outsl
cmp
ss
clc
xlat
int
fmuls
test
mov
lret
push
sti
pop
mov
fwait
cmp
call
jnp
or
cmp
jmp
sti
pop
mov
fwait
cmp
in
pop
imulb
jnp
or
cmp
jmp
sti
push
mov
cmp
or
sbb
sub
cwtl
or
cmp
xchg
fcmovnbe
inc
dec
sti
das
cld
push
adc
jo
pusha
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
stc
pop
leave
insl
fnstcw
sub
jae
idivb
dec
std
jns
sub
sbb
stc
insl
fnstcw
or
cltd
cmp
sub
out
cmp
lods
sbb
shll
fs
mov
daa
imul
sub
repz
jo
cltd
dec
stc
xor
sbb
les
inc
adcl
lds
jmp
in
subl
push
mov
dec
xchg
xchg
or
in
xchg
lock
fiaddl
pop
mov
shrl
xchg
popf
jl
mov
sbb
push
dec
mov
cltd
ret
adc
dec
or
push
dec
daa
lock
or
mov
stc
sub
mov
inc
xchg
pop
test
std
and
adc
stc
mov
adc
xor
imul
xchg
mov
pop
in
jmp
push
sbb
leave
jge
addr16
xor
and
aad
lds
inc
in
xchg
and
lcall
jl
pop
aam
mov
push
sbb
mov
pop
into
insb
lods
jl
jmp
sbb
xlat
das
in
fcoml
mov
mov
dec
decl
jns
sbb
orb
lods
or
or
popa
mov
cmp
dec
in
pop
std
sub
sbb
leave
insl
fnstcw
or
cltd
cmp
dec
in
pop
std
sub
sbb
nop
dec
mov
xchg
xchg
js
xchg
rcl
pop
or
xchg
testl
mov
int
pop
sbb
mov
lock
push
add
mov
data16
lret
ret
fwait
imul
fiadds
cmpsl
mov
xchg
insl
scas
xchg
or
repnz
adc
movsb
xor
pop
in
sub
aam
pusha
sti
pop
nop
testb
or
xor
out
rcll
dec
dec
push
cmp
add
and
cmc
lcall
roll
jbe
movsb
into
andb
or
test
insl
adc
ret
clc
add
add
cmp
add
cmp
sahf
stos
or
into
or
inc
stos
push
fidivs
lret
push
add
lret
mov
mov
sbbb
dec
lods
popa
xchg
sbb
push
dec
pop
and
lahf
lea
outsl
mov
fnstsw
repz
pop
lods
add
sbb
mov
imul
dec
pop
mov
test
xchg
sub
inc
mov
inc
sub
mov
adc
incl
adc
cmp
or
pop
pop
mov
adc
cmp
mov
dec
pop
aaa
icebp
sub
jmp
out
xor
or
in
push
and
push
aaa
or
stos
fcomp
int3
rclb
enter
ja
subb
pop
pushl
call
cmp
mov
adc
lret
inc
add
repnz
adc
push
nop
js
and
sbb
xchg
cmp
xchg
jno
aad
mov
jnp
or
cltd
jg
cmp
adc
jecxz
sbb
imul
movsb
or
fs
push
inc
push
xor
mov
xchg
push
clc
jmp
mov
fnsave
pop
ret
sbbb
push
jne
adc
xor
cwtl
subb
sbb
sub
sbb
adc
inc
leave
ret
outsl
lcall
xchg
sub
arpl
and
aaa
cs
mov
pop
stos
ds
data16
arpl
xor
imul
loope
push
scas
cmpsl
js
jg
jp
stos
lea
andl
popa
push
out
add
popa
outsb
bound
or
mov
push
shrw
pop
test
push
mov
fs
fisubrl
pop
pop
sbb
mov
insb
or
fcomp
jge
stos
loop
mov
enter
and
inc
pushf
fisubrl
pop
clc
lcall
cmp
iret
jb
dec
jae
fwait
mov
fstpl
push
into
test
outsb
sub
shlb
out
addr16
scas
imul
cli
hlt
xlat
loopne
add
xchg
in
inc
cmp
andl
xchg
or
clc
pop
push
cli
call
into
fcompp
push
and
decl
jmp
lcall
rcrl
push
adcb
fdivrs
jns
cld
or
fbstp
cmp
mov
pop
push
xchg
movsb
inc
inc
test
loop
jp
out
push
cmp
rol
hlt
in
push
sbb
mov
stos
popf
js
sbb
cmp
sti
push
mov
mov
mov
pop
push
mov
xrelease
mov
add
and
pop
icebp
xor
js
push
ffreep
mov
sahf
data16
sub
mov
pop
outsb
adc
xor
imul
mov
add
mov
mov
adc
mov
into
jno
pop
dec
xchg
mov
cwtl
adc
and
fstpl
daa
push
sbb
out
fdiv
mov
mov
mov
jb
ljmp
sbb
hlt
lods
mov
dec
out
gs
cld
insl
std
push
inc
mov
stos
mov
mov
ret
jnp
push
add
xchg
div
mov
dec
bound
xlat
fdivrp
pop
shll
pop
jns
sbb
add
xchg
les
movsb
jle
popa
jb
inc
outsb
aam
fcomps
inc
out
outsb
or
lea
push
dec
pushf
popf
sub
rcrb
jp
xchg
sub
inc
jo
and
lock
insb
fs
add
insb
or
popa
add
dec
pop
js
add
jmp
fsub
adc
and
mov
inc
and
icebp
idiv
jl
daa
xlat
mov
in
out
fdiv
sub
in
daa
sbb
mov
std
xchg
mov
push
pop
push
jb
stc
cmp
mov
add
movhps
pop
or
test
dec
rclb
je
adc
jno
ss
cltd
iret
in
out
or
insb
out
movsb
jmp
ljmp
push
bound
sub
fwait
mov
and
les
adc
rcrl
adc
xchg
and
roll
or
xor
jle
movsl
test
in
pop
popf
mov
movsb
enter
insb
aaa
cmp
lcall
sub
jge
or
mov
or
rolb
rcr
lahf
jns
outsl
xchg
mov
cs
stc
mov
in
lret
mov
nop
cmp
jnp
mov
popa
cli
mov
jns
rcll
sub
ret
mov
fistl
cmp
cmp
push
pushf
jo
jno
dec
inc
push
add
and
push
mull
out
jne
jne
in
lods
sbb
mov
inc
xor
int
insl
sar
imulb
jge
fcomps
add
popf
mov
push
daa
sbb
ds
enter
push
pop
pop
aas
shrl
pop
outsb
mov
xlat
negl
xchg
adc
pusha
push
mov
sarl
repz
mov
clc
mov
fidivs
ret
lods
movsb
or
in
pop
repz
inc
push
out
dec
inc
or
std
clc
popa
cli
jmp
cmp
inc
add
sub
das
stc
jbe
inc
pop
push
jl
push
xchg
arpl
inc
sub
mov
cmp
popf
xchg
movsl
enter
add
sbb
icebp
rorb
inc
add
pushf
cmp
sbb
aam
xchg
inc
add
mov
rclb
or
out
outsb
jbe
stc
cmc
in
or
mov
mov
movsb
cmp
iret
cli
dec
loope
push
lcall
jbe
std
sbb
mov
into
cmp
mov
cmp
cli
leave
or
jae
and
mov
movb
dec
or
adc
mov
clc
push
jl
dec
adc
lock
jae
mov
jns
lds
idivb
psrad
lret
cld
inc
pop
bound
shll
insl
icebp
push
mov
aas
add
add
jge
mov
scas
je
gs
scas
adc
loopne
arpl
push
dec
jle
add
pop
iret
or
xor
mov
addr16
xchg
xorl
push
jecxz
adc
xchg
mov
sahf
or
jmp
fstps
fimull
or
cmp
loope
cli
popf
sbb
mov
xchg
out
scas
fnstsw
cld
jbe
add
dec
pop
pusha
cs
aam
mov
cmpsl
add
pop
ficompl
sbb
mov
xor
adcb
sbb
in
lods
pushf
dec
dec
int
in
sbb
adc
pop
push
ret
imul
and
xor
add
adc
mov
pop
test
int3
add
loope
arpl
add
addr16
sub
ss
leave
inc
rol
pushl
sub
scas
test
out
aad
jne
lahf
jnp
mov
push
push
insb
ljmp
push
aas
adc
push
pop
inc
push
in
cmp
gs
cld
mov
leave
js
push
aam
aam
mov
or
and
hlt
int3
loop
mov
arpl
mov
xlat
imul
push
vucomiss
push
fsubs
sbb
mov
sbb
cmp
lcall
lret
sub
ret
jb
cmp
cmpsl
and
sysenter
adc
cmp
stos
mov
imul
insl
mov
aam
popl
xor
add
inc
test
jge
nop
mov
cmpsl
and
xchg
ret
mov
bound
enter
adc
sbb
pushf
mov
in
sbb
sbb
int
iret
ret
xlat
add
pop
xor
fwait
xor
pop
pop
mov
sub
data16
push
add
xchg
mov
pop
dec
lock
jnp
movsb
nop
cld
ja
push
push
add
sbb
je
and
xor
pop
push
push
ret
lock
ret
xor
loope
or
inc
out
push
xor
sbb
andb
mov
mov
add
sahf
adc
std
push
and
stc
jnp
mov
pop
loopne,pt
xchg
push
je
enter
lcall
mov
js
mov
push
in
clc
int3
mov
mov
out
and
xor
mov
mov
mov
sbbl
mov
inc
mov
lret
gs
je
mov
leave
mov
imul
hlt
testl
fidivrs
cmc
sbb
xlat
jb
lds
aas
pop
loope
ja
loopne
pop
push
daa
add
pusha
cld
push
es
cld
rcl
inc
mov
pop
push
xchg
lret
jecxz
leave
leave
jecxz
subb
clc
incb
rcll
mov
mov
lret
stc
push
jno
mov
shlb
sarl
xchg
nop
adc
push
jne
and
orl
in
divl
in
inc
aam
sbb
inc
ret
inc
fisttps
lret
movsb
push
add
cmp
out
in
sbb
push
sub
mov
and
adc
fwait
jno
add
test
mov
call
test
dec
xlat
subb
and
dec
in
imul
idivb
fwait
dec
adc
inc
imul
cmpsb
pop
cwtl
ret
test
mov
cli
lahf
fisubrl
sub
fldenv
dec
jne
add
push
or
shll
mov
pop
dec
mov
sub
mov
pop
sbb
jmp
push
rorl
inc
scas
lock
cltd
push
and
aaa
sub
pop
pop
jb
cmp
fsubr
mov
into
rclb
add
test
fcoms
and
movsb
scas
and
jbe
and
inc
jne
lea
into
fistl
sti
sub
das
sbb
jmp
in
into
pop
push
pop
pop
and
das
cld
ret
mov
fcomps
xor
lods
mov
sbb
and
mov
sub
inc
in
out
es
jbe
jl
stos
imul
pop
push
inc
sbb
ja
int
stos
loopne
test
pop
rolb
fwait
dec
mov
andl
nop
jbe
xor
sbb
cld
adc
lock
repnz
inc
push
push
jns
pushf
cli
aad
push
loope
js
fwait
in
call
in
pop
push
test
sbb
jecxz
out
fadds
cs
adc
in
dec
dec
icebp
mov
jbe
add
push
sbb
scas
inc
sub
sub
xchg
or
test
insb
out
leave
in
mov
in
rcl
addr16
dec
sti
int
xchg
lahf
repz
lods
hlt
loopne
sbb
push
sbb
test
bound
lret
lcall
push
loop
xchg
mov
enter
clc
nop
test
imul
or
jp
and
inc
dec
stc
inc
lock
or
fsub
lea
xchg
loope
mov
adc
mov
push
mov
inc
and
ds
js
repz
push
je
sub
sub
push
ret
pop
lcall
shll
cmpsw
leave
xchg
inc
popa
outsl
fwait
mov
mov
pusha
cwtl
cwtl
cmc
push
sahf
mov
dec
mov
add
dec
xor
cmpsb
jmp
mov
gs
hlt
lds
pop
out
xchg
add
sbb
adc
adc
imul
xor
fdivrl
in
lods
jg
subl
inc
dec
adc
jb
sub
cs
xchg
iret
je
add
inc
test
inc
shrl
scas
sti
in
jmp
sahf
dec
pop
jp
add
add
dec
stos
adc
fsts
sub
mov
and
out
out
jb
stos
addb
sub
sbb
xor
mov
mov
and
mov
mov
mov
int
adc
mov
xchg
add
sarl
ds
and
shll
inc
roll
popf
repz
push
inc
xchg
xor
pop
mov
cltd
push
fwait
and
push
mov
cld
lcall
bound
xor
xchg
push
inc
cmp
jne
loope
jge
inc
ret
dec
pop
cltd
popa
iret
cmp
pop
loopne
inc
inc
int3
pop
mov
push
insl
cli
mov
les
cmp
popa
and
xchg
sub
pop
dec
lea
mov
add
fsubs
push
fs
pop
mov
idiv
push
leave
mov
xchg
inc
inc
pop
pusha
cmp
bound
adc
jle
ss
jmp
cmp
jmp
je
fsincos
mov
in
inc
in
jno
insb
icebp
lcall
iret
repz
and
std
mov
cmpsb
imul
wrmsr
int3
mov
jmp
cmp
fadds
insl
ret
std
jecxz
mov
cli
xchg
in
insl
cmpsb
push
loop
clc
das
mov
pop
cmp
imul
dec
in
ljmp
pop
aaa
sbb
push
jno
or
push
inc
push
sbb
push
and
add
sbb
dec
mov
insb
ja
test
lahf
cmpsb
push
inc
ffree
arpl
jo
sbb
test
call
aad
rorb
jl
pop
scas
ficomps
ficompl
sbb
adc
or
mov
push
mov
clc
test
jno
mov
repnz
ljmp
ds
push
push
daa
and
pushf
cwtl
mov
fiadds
pop
jno
pop
dec
cmpsw
push
mov
scas
dec
push
and
push
xchg
jb
adc
outsb
push
sbb
daa
mov
loope
ljmp
mov
mov
repz
sti
sti
imul
in
jae
ja
mov
cmp
adc
repnz
shrl
sbb
and
mov
dec
pop
mov
xchg
clc
fidivs
dec
inc
xlat
add
jns
test
jecxz
mov
xor
mov
mov
mov
outsb
mov
shr
xchg
jg
mov
aad
or
dec
popa
cs
fucomp
in
movups
mov
dec
jns
mov
std
jecxz
data16
in
shr
ja
pop
sub
cmpsl
lret
imul
lahf
dec
mov
insb
aas
mov
fsubrl
fisubl
insb
outsb
cld
add
negl
outsb
mov
xlat
mov
jne
mov
sti
addr16
or
sahf
ds
or
xor
jbe
in
jns
cltd
jns
jne
inc
mov
xor
pusha
dec
and
ds
xchg
or
fcomi
test
mov
call
jecxz
std
movsl
gs
pushf
js
or
push
movsl
test
xor
repz
popf
repnz
test
cmp
mov
xorb
loopne
or
pop
out
push
sub
enter
cld
adc
mov
cmp
mov
adc
mov
es
icebp
push
rcr
cwtl
sti
xor
addr16
clc
xchg
jae
add
xor
adc
jb
jo
ja
add
cmpsl
leave
inc
push
sub
cmpsb
add
popfw
cld
xor
push
and
dec
mov
shll
jle
adcl
insb
mov
push
sbbb
outsl
pop
js
lret
mov
cmp
fsts
pop
stc
jg
sbb
dec
push
scas
mov
mov
call
enter
push
cltd
push
mov
cld
pop
add
inc
sbb
incl
push
push
jb
or
jecxz
clc
leave
fdivrp
in
call
pop
fprem1
dec
int
push
cmp
ljmp
jbe
test
jo
mov
jns
xchg
jb
jge
sub
daa
push
fsts
pop
movsl
shl
or
xchg
mov
sarl
js
dec
xchg
js
test
sti
mov
sar
in
sub
mov
clc
cs
xchg
scas
sub
adc
dec
mov
dec
jns
icebp
fst
mov
fucomp
dec
mov
ds
push
xchg
mov
adc
fsubrs
and
adc
push
outsl
pusha
cltd
sar
shrb
gs
js
ljmp
mov
mov
js
aaa
sbb
popf
int
xor
shrb
push
cmpl
cwtl
jl
or
xchg
inc
or
jge
inc
dec
hlt
movsl
enter
sar
fidivs
inc
sub
std
add
clc
mov
pusha
adc
push
js
call
in
xor
xchg
das
bound
clc
test
pop
xchg
cmpsb
adc
mov
cmpsb
int3
adc
push
xchg
ret
ja
jecxz
jl
cmc
in
push
mov
pop
shll
aad
aam
sbb
clc
jb,pt
out
xchg
mov
or
pop
add
sub
inc
mov
int3
stos
fldl
sub
inc
and
pop
cmp
test
pop
test
or
test
jecxz
data16
adc
out
jg
lods
fidivrs
sub
cmpsl
xchg
shl
aam
data16
popa
movsb
loope
adc
cmc
mov
sub
fistps
jg
dec
cltd
inc
fildll
inc
pop
movsl
jne
push
jg
add
in
mov
out
xor
inc
mov
pop
adc
pop
dec
loopne
sbb
inc
and
out
outsl
add
pop
jmp
jne
sub
nop
push
sub
into
lds
pop
inc
xchg
sbb
pop
xchg
pop
mulb
lods
dec
add
imul
inc
inc
aas
sub
inc
bound
leave
inc
xor
sub
cmp
sbb
push
je
fwait
das
sbb
and
xchg
and
sbb
hlt
jecxz
es
rcr
dec
imul
mov
bnd
mov
push
pop
ja
xorl
mov
pop
fnstsw
ret
cmp
dec
add
insl
jne
push
xchg
inc
cmp
adc
jmp
dec
xchg
or
jb
pop
movsb
fistps
pusha
sbb
xchg
lcall
pop
ds
push
leave
iret
pop
pop
add
sub
imul
fmull
aad
jns
add
addr16
scas
and
movsb
in
fmuls
call
ljmp
inc
push
inc
inc
xchg
mov
jmp
enter
mov
sub
outsl
aas
movb
lret
popf
icebp
lods
and
xor
outsb
mov
xlat
pusha
xchg
clc
mov
les
jl
call
xchg
fnstcw
xor
orl
push
pop
les
lea
test
push
mov
jecxz
jmp
jbe
adc
mov
or
insl
sub
in
repnz
lret
js
ljmp
out
mov
shll
lcall
add
cmc
mov
jmp
addr16
fmuls
bound
mov
mov
loop
iret
cmpsb
imul
es
cli
push
jl
jbe
mov
dec
stos
sbb
mov
daa
cwtl
fisubs
push
or
out
loope
ljmp
cltd
mov
outsb
cltd
adc
pop
lods
das
sub
lods
push
loopne
nop
push
mov
ret
call
xor
sbb
xor
out
js
adc
push
push
fxch
mov
mov
clc
scas
movsb
sbb
cld
jge
out
fstpt
neg
mov
fstpl
shl
test
out
mov
or
inc
loop
xchg
lret
lahf
push
fiaddl
pop
sub
cmp
push
arpl
lret
pop
mov
add
shll
lret
or
mov
imul
jns
pop
lock
mov
lcall
cmc
adc
adc
and
movsl
jecxz
add
jo
xor
cmpsb
push
xchg
mov
rcrl
ljmp
es
dec
pop
shlb
and
jecxz
mov
pop
ret
and
clc
out
dec
insl
loope
mov
dec
pushf
mov
js
mov
sbb
xchg
or
filds
inc
in
mov
or
inc
or
out
shlb
test
imul
mov
cltd
mov
test
movsl
mov
rcr
xor
fisubs
int
cmp
test
jl
outsl
mov
push
push
jbe
cmp
lcall
push
xor
jmp
adc
xor
xchg
xor
dec
faddp
in
daa
imul
mov
out
ficoms
out
push
inc
push
push
clc
dec
loopne
lahf
or
jge
popa
pop
sbb
in
aaa
adc
xchg
mov
fwait
mov
dec
add
lock
sarl
pop
mov
push
xchg
xor
sbb
test
sub
jns
dec
in
pop
std
sub
sbb
leave
insl
fnstcw
or
cltd
cmp
dec
in
pop
std
sub
sbb
leave
insl
fnstcw
or
cltd
cmp
dec
in
pop
cld
sub
sub
ljmp
jge
or
sbb
jecxz
pop
mov
mov
notb
inc
and
cmp
lods
xchg
add
data16
ljmp
lods
out
test
cld
in
inc
sbb
or
cmp
sub
pop
jbe
inc
jl
sbb
mov
test
mov
les
xchg
into
js,pn
push
jo
xchg
push
je
inc
xchg
out
out
jecxz
fisttps
mov
bound
dec
jg
bound
pushf
pusha
jge
loope
test
fnstcw
in
mov
mov
lret
xchg
nop
dec
pop
divb
push
mov
push
sbb
stos
shufps
popa
fcomps
add
scas
getsec
je
fisubl
lock
and
cld
mov
push
cmp
cld
cli
fcompl
jecxz
cli
xchg
cltd
pop
jbe
mov
arpl
push
sbb
divb
adc
mov
outsl
mov
int
xor
lods
mov
in
ficoml
stos
mov
sub
lahf
iret
mov
pushf
mov
cmovae
imul
xor
cld
aad
jge
pusha
cld
push
mov
push
dec
inc
cmpsb
lock
pusha
sbb
lock
cmpsb
in
lock
xor
cld
orb
or
jg
add
sub
and
adc
in
jecxz
repz
mov
imul
je
ja
rdpmc
adc
adc
add
stc
in
xchg
out
lret
lahf
mov
xchg
pop
dec
insb
inc
dec
xor
jl
insb
cmpsb
pushf
mov
xchg
int3
cld
in
es
or
cmp
sub
pop
jbe
inc
jl
insb
cmpsb
pushf
mov
xchg
int3
cld
in
es
fcmovnb
lahf
add
and
daa
iret
pop
inc
in
fidivrl
fcompl
push
aad
repnz
pop
loopne
je
bound
push
cmc
ja
xor
ss
inc
mov
cld
push
out
and
cmp
sti
push
xchg
stc
cmp
popf
dec
xor
sub
adc
or
xchg
imul
int3
je
dec
push
jle
adc
jne
scas
and
or
lock
pop
mov
out
fldt
andb
jmp
cmpsl
adc
mov
rcrl
mov
movsb
int3
mov
sbb
push
pop
in
mov
pop
int3
sahf
add
jecxz
add
jnp
addr16
fcomps
mov
test
dec
fwait
sti
push
sbb
add
xor
adc
fidivrs
mov
sub
mov
out
movsb
adcb
xor
adc
adc
mov
out
xor
mov
fsubs
jno
mov
sub
push
xor
cwtl
lar
jne
stos
gs
daa
rdtsc
add
and
leave
stos
dec
jmp
sub
filds
mov
cld
jg
dec
bswap
push
outsb
sub
fnstenv
pop
sub
or
gs
sbb
cmp
les
test
xchg
pop
jne
add
pop
inc
lea
jb
dec
jecxz
arpl
sbb
xor
mov
sub
daa
xchg
pushf
outsb
sbb
fisttpll
rcll
pop
cmpsb
fwait
mul
mov
xor
pop
insb
add
mov
lock
mov
sbb
xor
xor
imul
arpl
fistl
movsb
test
or
sbb
jp
xor
adc
xor
inc
dec
loop
push
in
jle
sbb
push
push
xchg
jecxz
sbb
into
sarl
out
cli
divb
inc
repz
inc
push
out
mov
dec
je
inc
mov
push
lret
in
sub
xor
popa
into
xlat
icebp
repz
rcll
add
pop
sbb
imul
or
sub
xor
push
xorb
and
jb
xchg
cmp
mov
mov
repz
jecxz
imul
jo
push
sbb
iret
lahf
std
aad
call
adc
cs
adc
jne
lods
js
hlt
sbb
cmp
in
dec
mov
fcomps
mov
popf
ficomps
cmp
ret
filds
mov
stc
or
fsubl
mov
pop
mov
bound
sbb
dec
popa
add
sbb
insl
jle
and
arpl
sub
stos
xor
sub
jecxz
rorl
lret
aas
xchg
mov
sbb
xchg
push
aad
sbb
rclb
aas
xor
in
cli
xchg
mov
test
xor
xchg
lods
arpl
jne
in
cli
incb
pop
xor
sbb
dec
add
jecxz
add
call
pushf
jp
out
popa
push
es
fadd
push
insl
repnz
arpl
stos
inc
push
lret
sbb
fwait
jbe
dec
cmp
call
scas
pop
cmp
mov
out
sbb
fstp
pop
dec
xchg
movsl
and
xchg
mov
push
movsb
or
and
and
jnp
sub
decb
stos
std
pop
sub
and
mov
dec
pop
shl
add
mov
adc
daa
fidivrs
mov
rcrl
ret
mov
repnz
data16
sub
stos
inc
addb
mov
aad
lods
xor
popa
js
xor
adc
in
sbbb
adc
xchg
jle
out
cs
ss
mov
out
inc
shr
bound
mov
data16
pop
mov
add
push
lea
inc
add
loopne
jno
bound
xchg
fwait
cmp
shll
sbb
int
cwtl
gs
aam
ficoml
aam
dec
stc
mov
sub
ja
lea
jle
lock
or
stos
mov
pop
enter
outsb
scas
jmp
sub
loope
xchg
cmpsl
push
mov
call
cmp
test
mov
repz
pop
xor
add
pop
negb
daa
push
stc
and
in
js
and
cmp
cli
or
iret
xchg
xchg
rclb
pop
sbb
fisubrs
xor
test
dec
mov
insb
dec
jl
xor
lds
or
sarl
mov
xchg
pop
push
lods
fbld
or
push
gs
push
cmpsb
aam
addl
jecxz
jb
xor
ja
stc
aaa
mov
aas
jge
dec
pop
or
mov
jecxz
dec
outsl
lcall
incl
xchg
nop
mov
mov
mov
stc
push
mov
std
or
mov
fwait
inc
mov
push
lret
loopne
es
inc
fwait
sub
sbb
pop
push
pop
xchg
pop
movsb
push
aaa
sub
cs
and
test
adc
xchg
cmp
test
loope
test
cmp
scas
pop
test
xchg
or
inc
xor
pop
decl
sbb
sub
push
dec
or
lods
lret
daa
sahf
or
sahf
push
push
dec
push
cmpsl
cmpl
fistpl
mov
std
rorl
cmp
sub
movsb
sbb
aaa
inc
test
jo
lods
and
test
mov
mov
xor
lret
repnz
in
popf
negl
pop
adc
mov
xchg
push
jmp
das
push
cwtl
jmp
jp
mov
outsb
adc
mov
aam
popa
cmpsl
adc
aam
push
dec
rcr
add
and
movsb
test
dec
scas
pop
push
jp
sub
popa
jg
test
lock
lods
pop
call
inc
push
cli
jae
ds
push
daa
lret
neg
push
pop
cmc
scas
mov
pop
or
cwtl
add
mov
shr
push
push
jg
xlat
cmpsb
pushf
or
mov
and
outsl
xor
push
aad
xor
shlb
fwait
cmp
add
and
sbb
adc
nop
push
jle
out
mov
fdivs
fwait
pop
fxam
shlb
jno
fsubrl
lods
int3
outsb
test
lods
push
arpl
cmp
incl
testb
outsl
push
stos
or
and
clc
test
out
push
and
inc
sub
add
rcr
loopne
mov
outsl
ret
out
mov
lea
in
repz
add
xchg
pop
jne
and
push
push
mov
jmp
dec
xchg
push
inc
insl
jecxz
loope
adc
inc
inc
or
inc
jge
or
mov
aam
je
xchg
adc
mov
xor
mov
or
pop
or
leave
imul
cmc
jle
dec
das
push
mov
popf
call
pop
xchg
sarl
cmpsl
jmp
mov
push
pop
loop
lcall
aaa
xorb
mov
sub
sub
sbb
mov
inc
pop
jne
xchg
lods
push
cli
jle
sbb
push
rorl
aaa
ja
ss
leave
out
lahf
mov
mov
loopne
xor
push
push
or
fstpt
xor
mov
add
call
sbb
sub
pop
mov
stc
adc
in
aad
fisubl
call
mov
mov
jg
jo
jmp
and
cmpsb
shl
and
cmp
stos
jmp
jns
lcall
mov
adc
cli
inc
test
mov
pop
mov
xchg
test
inc
push
into
insl
daa
sti
testb
jo
lcall
or
cmp
dec
iret
loopne
ljmp
inc
or
repz
imul
sub
adc
mov
into
mov
repnz
jp
mov
stc
xor
jns
add
add
daa
into
dec
roll
pusha
and
insl
adc
or
or
mov
jo
loope
sbb
cltd
test
lds
lcall
add
fcmovb
cmp
mov
mov
sub
or
mov
and
rcll
add
out
les
pop
pop
sbb
adc
mov
lods
js
mov
cmpsb
adc
outsb
push
xchg
and
pop
ljmp
aaa
repz
inc
xchg
lea
cli
push
rol
add
cmp
sahf
mov
adc
pop
das
popf
jo
dec
data16
sbb
adc
aaa
movsl
dec
dec
fsubrl
pusha
or
jne
cmp
fistpl
push
test
movsl
pop
pusha
add
std
inc
push
or
lea
or
lahf
mov
xchg
jo
js
enter
sarb
add
jae
add
mov
or
dec
stos
mov
mov
in
adc
mov
jns
nop
xor
mov
mov
sub
stos
aad
stc
push
push
and
push
or
mov
cmp
lret
push
cmp
idivb
jae
int
divb
adc
mov
adc
ret
lcall
and
fldl
rclb
out
or
out
decb
xor
inc
pop
outsb
inc
je
rcl
ja
xchg
iret
shlb
sub
frndint
fldenv
pop
cld
and
or
fnstcw
jle
lea
icebp
ret
mov
cmpsl
push
xchg
or
or
xor
cltd
aaa
aad
dec
test
push
fdivrl
aad
and
inc
sub
rcl
mov
iret
pusha
test
xor
and
inc
push
dec
dec
cmp
dec
sbb
push
out
imul
mov
sbb
mov
shl
mov
dec
mov
inc
xor
pop
mov
mov
adc
cmp
mov
es
jl
sub
xchg
pop
push
push
jmp
push
mov
and
in
mov
jge
hlt
push
lret
dec
loop
xor
mov
imul
xchg
lock
xlat
adc
stos
call
jo
inc
pop
and
mov
jnp
or
mov
jg
and
shll
repnz
mov
mov
push
cmp
bound
xchg
lea
mov
jne
lret
ja
stos
popf
cmc
sub
lds
testb
shrb
mov
push
sahf
dec
enter
push
fildll
icebp
push
shll
test
fstpt
dec
and
test
dec
jl
pop
or
imul
mov
inc
sahf
mov
imul
jmp
in
mov
lcall
std
pop
jno
icebp
out
adc
idiv
psrld
sbb
cmp
sarl
sbb
arpl
jnp
and
sbb
push
pop
rclb
aam
ror
in
cmpsl
mov
ret
jns
scas
rcrb
adc
subl
mov
mov
sti
sahf
xor
adc
shl
rcrb
sub
in
gs
insb
imul
mov
rol
test
ss
fs
jae
lcall
xchg
push
loope
add
inc
or
jns
cmp
cmc
pop
sub
lcall
shl
sub
mov
mov
test
inc
mov
stc
add
or
mov
mov
xchg
inc
testl
in
cmp
lret
iret
cmp
aaa
aam
mov
inc
fimull
fs
cmp
mov
mov
aam
jmp
pop
inc
inc
fists
pop
pop
xor
xor
mov
repz
fistpl
scas
ret
aas
test
fwait
mov
fiaddl
pop
dec
cwtl
fisttps
jg
leave
mov
xchg
mov
mov
in
dec
popf
push
add
push
and
or
mov
push
push
or
adc
inc
sbb
cmc
mov
adc
popf
mov
inc
push
pop
in
cld
fdivr
or
test
addl
gs
mov
cmp
or
imul
mov
sub
sub
jle
mov
adc
sub
cmp
ret
or
push
cmp
jmp
sbb
xchg
pop
push
jbe
loope
push
aaa
mov
outsb
ds
pop
fcomi
sub
das
xor
dec
jae
cmp
into
je
adc
jmp
mov
cs
pop
psubsb
repz
mov
lods
lret
mov
ret
out
jge
sub
sub
jbe
dec
lahf
lock
push
cmc
xchg
daa
cmp
out
dec
push
das
testl
jmp
pop
xchg
loop
push
cmp
jl
imul
loopne
hlt
mov
test
pop
sub
mov
and
mov
add
aad
xor
mov
in
adc
in
rcl
inc
mov
dec
arpl
push
inc
out
stos
sub
sub
test
push
pop
out
loop
xchg
rcll
insl
outsb
lcall
call
cmp
clc
ret
fisubrl
jb
mov
out
sub
inc
xor
push
jp
sbb
adc
pop
add
test
cs
pxor
xchg
cmc
sti
rclb
sub
lds
jp
das
imul
mov
fsubr
orb
insl
adc
dec
and
into
adc
aaa
lock
pop
icebp
das
dec
xor
popa
lea
cmpsb
outsb
sbb
pop
stos
mov
mov
roll
sub
or
xor
mulb
dec
push
pop
pop
int
sbb
add
test
mov
adc
and
fwait
sbb
lret
test
insl
or
inc
repz
into
fimuls
jnp
and
imulb
lods
icebp
push
pop
cwtl
aam
repz
dec
adcb
popf
popa
jp
roll
sub
adc
iret
ljmp
dec
cmp
xchg
xor
int3
into
andl
cld
dec
xor
popa
adc
js
daa
dec
jns
fsubp
push
xor
fisubrs
inc
xor
pop
inc
out
in
pop
cmpsb
aad
inc
sub
fdivs
bound
lret
insl
daa
cld
rcl
loope
xchg
lods
ds
mov
fwait
add
and
es
andl
out
loope
fisubrl
insb
sub
lret
dec
xor
out
cli
push
data16
loopne
aam
push
pop
xchg
cmp
and
nop
push
or
push
xchg
mov
xchg
stc
push
push
pop
mov
icebp
sub
jne
int3
push
iret
lods
pusha
in
mov
inc
je
cs
jbe
xchg
scas
pop
and
sub
dec
pushf
bound
xor
pop
sbb
ja
add
adc
nop
push
mov
sub
jne
sbb
mov
test
fxch
lock
cli
fs
out
sbb
jg
decb
pop
arpl
fmuls
cmp
jp
rorl
adc
mov
jnp
or
adc
jae
and
jb
push
inc
or
push
lds
ret
repz
roll
cmc
mov
sbb
inc
out
shlb
test
sbb
cli
sbb
ret
and
dec
dec
pop
pusha
test
inc
sbb
cltd
fsub
cwtl
sub
mov
lret
xlat
mov
cltd
shll
sbb
push
cmp
test
lock
add
pop
push
icebp
adc
mov
sub
aam
adc
lahf
cmp
outsl
es
flds
pop
out
lods
or
add
xor
sub
cs
cmc
std
or
insb
or
negl
cmp
aaa
add
xchg
insl
movsb
test
jae
cmp
daa
lods
add
pop
sti
fstps
push
cmc
testb
fldl
stos
mov
imul
jle
inc
fidivrl
pop
fnstenv
mov
or
jmp
jne
bound
mov
inc
dec
lahf
mov
xchg
daa
in
rol
mov
mov
pushl
mov
cwtl
repz
cmc
ds
mov
testl
scas
out
nop
push
fidivrl
mov
pushf
cmpl
inc
pop
clc
es
xchg
cwtl
into
fstpl
movsb
inc
sbb
lea
outsl
sbb
pop
lret
cmpsl
out
or
mov
jg
jo
jp
adc
cmp
dec
mov
mov
and
pop
sub
sti
lock
cwtl
sbb
inc
dec
aam
xor
int
xchg
fdivrs
or
cmc
push
push
in
mov
stos
rclb
push
xchg
mov
push
pop
loopne
or
enter
lcall
arpl
rdpmc
add
sbb
int
imul
clc
jns
shlb
mov
adc
xchg
mov
adc
pop
mov
lock
cmp
mov
or
lods
rcrb
stos
rcrl
int
xor
popf
jecxz
movsb
fbld
repz
inc
jp
nop
dec
inc
jnp
sbb
lahf
adc
xchg
leave
mulb
dec
lods
stos
ret
xlat
fcomip
cs
incb
pop
xchg
dec
cs
fldl
stc
sub
mov
inc
xorb
int
pushf
mov
dec
ret
mov
pop
inc
rcrb
iret
addl
leave
ss
fidivrl
jnp
push
negl
js
loop
cld
push
or
pop
xor
mov
push
sbb
dec
cmpsb
gs
mov
shrl
clc
stc
mov
fadd
imul
inc
or
add
pusha
push
jmp
addr16
mov
outsl
inc
pushf
lahf
jnp
sub
fwait
cmp
push
aaa
and
jne
cmp
sbb
movl
dec
test
rcrb
inc
cwtl
and
pop
sti
mov
arpl
mov
pop
sbb
call
into
cmp
cs
add
push
lret
mov
jle
shll
dec
jp
adc
lahf
es
adc
shll
push
mov
adc
lret
iret
dec
aam
pop
xchg
jnp
and
mov
inc
sbb
mov
rcr
sub
imull
rcll
and
insb
add
sbb
incb
xor
in
dec
xor
and
cwtl
out
or
mov
add
test
inc
popf
dec
fcoms
iret
inc
mov
sahf
negb
push
subl
lock
jp
ss
lods
or
sbb
lea
sub
fisubl
hlt
jle
dec
divl
lds
mov
shrl
add
xchg
pop
enter
arpl
stos
ficompl
jmp
loop
mov
es
jae
aad
jg
clc
bound
jo
inc
mov
ficomps
mov
daa
mov
cmp
add
and
fsubs
mov
bound
ret
and
cmp
enter
jmp
loopne
or
mov
cmp
cmp
rcrb
or
cmp
test
pop
mov
cmp
call
sbb
repnz
ds
push
sub
push
fs
in
in
fcomps
or
xor
push
mov
loopne
ljmp
and
loop
cli
and
mov
lock
jecxz
mov
imul
cmp
xchg
sub
les
les
adc
cmp
dec
dec
shll
out
xchg
imul
jl
adcb
add
or
fstpl
inc
call
jae
mov
sbb
rcll
mov
out
call
sbb
or
pop
addb
xchg
sub
push
push
cli
jmp
loop
inc
addr16
les
xlat
test
ret
push
mov
add
inc
sarb
push
or
mov
lods
mov
fcomps
in
mov
cld
adc
pop
add
jmp
add
hlt
cli
and
sbb
fisubrs
cltd
xor
cld
mov
not
jg
or
sub
or
test
inc
ds
dec
lret
fsubrp
push
iret
inc
mov
cmp
outsl
or
mov
sti
movsb
orl
stos
adc
loopne
imul
xlat
lock
mov
popa
out
or
sbb
ja
pop
int3
test
into
insb
mov
or
enter
ljmp
movsl
into
mov
jg
sbbl
rorl
imul
jns
lods
stc
push
mov
sahf
fnstsw
mov
and
jle
inc
mov
movsb
xor
imul
mov
lret
pushf
lcall
jo
and
jbe
inc
inc
xchg
inc
adcl
push
sti
push
mov
mov
sub
inc
dec
insl
mov
in
or
sarb
movsb
jge
jg
insl
inc
pop
mov
push
inc
ficoml
pop
cli
inc
mov
sbb
dec
adc
decb
rcr
add
out
xchg
ja
fdivs
sbb
push
sub
stos
arpl
and
cmpsl
sbb
adc
push
or
aas
inc
adc
bound
or
cmp
sub
lret
dec
stos
lds
scas
inc
in
sbb
mov
mov
mov
add
inc
push
push
sub
pop
jbe
inc
jl
insb
cmpsb
pushf
mov
xchg
int3
cld
in
es
or
cmp
sub
pop
jbe
inc
jl
insb
cmpsb
pushf
mov
xchg
int3
cld
in
es
inc
inc
push
sub
pop
jbe
inc
jl
insb
cmpsb
inc
mov
jbe
xchg
lods
out
out
fdivrl
in
xor
or
cmp
sub
inc
cld
insb
cmpsb
arpl
sub
xchg
fistl
add
adc
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
out
call
and
outsl
stos
pop
adc
adc
pop
push
add
add
add
add
xchg
pop
add
add
add
add
out
add
add
js
test
imul
str
add
lock
add
mov
xor
add
mov
add
add
add
add
ret
add
add
add
add
add
or
add
add
add
xchg
add
rolb
or
icebp
add
add
add
add
add
mov
add
add
jl
addb
add
xor
add
add
adc
add
push
add
add
add
add
add
add
add
or
jne
rolb
and
in
add
ret
add
add
add
push
add
add
insl
add
add
lods
add
push
mov
add
add
add
test
xor
scas
add
add
add
mov
add
faddl
ret
add
mov
add
add
add
pop
add
add
add
add
add
push
add
xor
test
add
add
faddl
push
add
add
mov
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
jecxz
pop
add
add
add
les
insl
add
push
add
add
sbb
dec
add
add
sti
add
test
mov
add
add
cmp
test
lods
add
add
add
add
push
add
add
bound
cmp
push
add
add
cmp
push
add
add
arpl
xchg
add
add
add
add
add
add
ljmp
add
push
add
add
add
add
push
add
add
add
push
add
scas
add
add
add
add
add
int
dec
add
cmp
dec
add
popa
add
int
sub
add
mov
add
add
add
add
pop
add
add
lds
dec
add
add
add
adc
mov
add
add
add
add
add
add
add
add
xchg
add
add
add
bound
mov
xchg
add
add
cmp
sahf
add
add
add
add
add
add
add
add
adc
push
add
add
jle
leave
add
dec
add
add
add
mov
add
push
add
add
add
add
scas
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
push
add
add
add
and
add
pop
add
or
sahf
add
add
sbb
fiaddl
dec
add
add
cmpsb
add
add
add
scas
add
add
add
adc
fsubrs
dec
mov
out
scas
in
add
pop
dec
fs
pop
rolb
lcall
insl
mov
add
sub
push
mov
lds
sub
inc
push
fstl
es
scas
movsb
repz
mov
nop
mov
mov
sbb
or
adc
push
dec
jbe
sar
xchg
hlt
popf
push
or
push
add
push
jbe,pn
mov
arpl
xchg
ja
dec
push
push
pop
sbb
adc
test
mov
jo
rol
pop
ret
mov
mov
dec
jne
add
ss
in
mov
shrb
popf
movb
sbb
pop
cmpsl
push
shl
mov
lods
jle
xor
cmp
mov
cmpl
pop
jp
jns
cs
imul
jne
push
pop
fucom
shrl
daa
mov
and
mov
mov
sbb
xchg
pop
enter
mov
inc
pushf
addr16
add
repnz
mov
sub
gs
repnz
mov
aad
pop
mov
mov
and
dec
cs
jb
xchg
enter
outsb
mov
jnp
mov
outsl
pop
ljmp
fldenv
int
jecxz
mov
xchg
nop
hlt
pop
xchg
or
mov
ss
fnstcw
into
xchg
fs
pop
ja
and
jl
sub
jmp
nop
rcrb
loop
xchg
push
fdiv
sbb
daa
mov
lret
cs
lds
mov
jnp
push
or
pop
ret
test
cs
mov
testl
ja
and
in
pop
pop
lea
sbb
fldcw
add
je
and
or
lods
sub
lahf
repz
dec
sbb
aaa
jnp
cltd
mov
ret
sarl
inc
jp
add
cmp
bound
lahf
push
aam
push
pop
je
cmp
cld
jmp
and
fs
dec
lcall
jns
cli
std
cmp
inc
xchg
lcall
adc
ret
cld
or
int3
subl
mov
popf
pushf
fndisi(8087
jns
imul
mov
loop
pop
mov
xchg
mov
mov
addr16
xchg
addr16
add
inc
pusha
lahf
mov
push
jmp
jecxz
xor
setb
or
stos
js
stc
into
xchg
aad
mov
arpl
mov
xchg
xchg
cmp
push
loop
shll
jl
xchg
fcompl
jl
stc
shrl
fmuls
out
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
