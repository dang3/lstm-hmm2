call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
movsl
jne
lcall
test
or
push
push
cmp
cmp
jbe
inc
jp
jp
mov
mov
ljmp
or
sub
inc
push
jp
xchg
inc
lcall
xchg
ret
loopne
jmp
jae
or
cmp
jp
mov
repz
pushl
loop
testb
je
cmp
add
insb
and
push
and
dec
fildl
and
inc
enter
dec
pusha
pop
jb
mov
cmpl
cmp
push
aaa
pop
jne
sbb
das
pushf
mov
into
sahf
in
jo
ficoml
xchg
push
mov
mov
lcall
negb
cmp
ss
lret
cltd
sbb
inc
loopne
adc
mov
pop
sbb
jle
dec
mov
mov
push
outsl
push
cmp
and
mov
test
jp
stos
push
cmp
shl
ja
or
push
aas
loop
jmp
and
push
mov
lea
lret
repz
loopne
lods
add
and
push
jl
je
push
push
iret
out
les
mov
xchg
arpl
arpl
push
adc
sbb
das
push
pop
jmp
rcrl
mov
adcl
pop
outsb
jns
cmp
xor
lret
jmp
lret
cmpsb
neg
ljmp
push
sub
cmp
jbe
inc
push
jp
mov
mov
ljmp
push
sub
cmp
jbe
inc
push
jp
mov
sbb
sub
push
mov
dec
pushf
lds
mov
xchg
jae
inc
lock
cmp
js
cld
mov
es
js
xchg
movsb
cmp
fistpl
push
repnz
sub
adc
mov
inc
loop
ret
xchg
shl
jne
in
sti
jae
push
sbb
sub
mov
mov
lcall
ds
adc
push
jns
repz
xor
pusha
mov
jnp
xlat
movsb
xchg
int3
lods
cmp
lar
mov
xchg
je
jl
push
pop
xchg
and
sub
adc
inc
jecxz
out
out
lock
test
lcall
outsl
xchg
xor
mov
je
dec
inc
mov
mov
jmp
sub
mov
das
scas
mov
aam
xor
mov
adc
loope
xor
imul
rclb
fmull
movsl
sub
rclb
cmp
loop
in
add
cmc
add
xchg
jecxz
insb
outsl
pop
or
cmp
xchg
jae
xchg
lods
and
sbb
xchg
decb
mov
mov
mov
jno
and
into
int3
adc
mov
das
sub
arpl
in
ja
lret
sub
xor
stos
popa
sahf
or
sub
imul
sbb
ret
ds
xchg
mov
jnp
lret
pusha
sub
sub
mov
sub
imul
or
xchg
jo
shll
pop
pushf
fwait
and
roll
cs
cltd
mov
pop
scas
add
and
ret
jmp
dec
jne
dec
aad
inc
push
dec
std
scas
xor
sbb
or
sbb
fs
rolb
dec
or
das
movsb
xchg
mov
dec
mov
push
adc
and
mov
or
push
sub
aam
sub
pop
les
rol
sbb
iret
mov
mov
jecxz
mov
or
jae
test
loope
adc
loope
pop
jae
mov
mov
adc
hlt
shlb
and
inc
add
rolb
push
je
subl
subb
push
mov
cld
daa
pavgb
cmp
push
lds
cmp
jns
outsb
or
xchg
push
cmp
or
ss
xchg
xchg
sti
adc
cmp
out
inc
aad
orl
ja
cmp
add
mov
fldenv
cmp
dec
inc
adc
inc
bound
mov
insl
pop
mov
insl
and
icebp
lret
fldl
in
subl
ljmp
test
aad
nop
jae
in
fisubrl
repnz
xchg
cld
js
push
rclb
xor
cltd
hlt
in
cmp
cwtl
bound
cld
or
sti
mov
or
and
mov
jg
daa
dec
insb
gs
imul
push
xor
mov
jmp
mov
and
jno
je
loope
int3
dec
sti
aaa
inc
cmc
mov
add
negb
cmc
iret
repnz
or
xorb
sahf
add
pop
push
cmp
ja
cmp
push
sbb
subl
sub
testb
ret
shll
dec
outsl
jl
mov
shl
sub
pop
jne
rclb
and
push
rclb
mov
nop
push
ret
pop
pop
push
mov
inc
imulb
mov
insl
test
hlt
lret
push
cli
outsl
scas
lcall
push
jl
outsl
xchg
dec
mov
jg
subb
xor
pushf
cmpsl
test
mov
decl
adcl
jle
lret
xchg
sbb
sub
sbb
orb
or
xor
test
xor
xchg
jge
push
jns
insl
ret
mov
outsl
leave
mov
icebp
and
add
sub
pop
mov
dec
ja
xchg
and
aaa
mov
add
mov
pop
sbb
jno
inc
jecxz
pop
inc
cwtl
push
loop
mov
test
cmp
fildll
inc
pop
push
aad
daa
int3
jnp
gs
mov
call
push
pop
push
sti
or
fs
cmp
or
aaa
ret
jecxz
cmc
nop
lds
xchg
pop
jecxz
add
aam
jmp
ja
aaa
aaa
mov
sbb
xchg
push
in
fisttpll
insb
xchg
push
test
shlb
add
daa
stos
xchg
test
jno
aad
ret
xor
popa
mov
outsl
xor
or
fcmovne
dec
notb
test
push
push
jecxz
mov
xchg
outsb
xchg
sbb
add
adcl
hlt
add
jmp
sub
and
or
add
adc
leave
and
fisubrs
and
ss
jno
fiaddl
push
lahf
jb
mov
cbtw
inc
test
add
inc
fstpl
pop
lods
jg
pop
pop
or
jg
pop
icebp
nop
lret
outsl
and
mov
loopne
call
or
test
sbb
xor
sub
inc
sub
jg
fldl
aas
sbb
mov
cld
push
mov
cmp
sub
pop
nop
mov
ret
sbb
sub
xor
mov
sub
add
mov
dec
sahf
out
lret
cmp
cs
loopne
test
out
test
push
imul
jns
mov
imul
in
and
xor
and
fmull
pop
outsb
lcall
pop
out
stc
xchg
jns
cli
adc
mov
or
adc
adc
faddl
movl
shrl
sbbl
add
stos
fidivrs
outsl
lds
jmp
xchg
inc
enter
mov
cltd
cmpsb
mov
movl
jmp
sub
pop
jmp
and
sbb
pop
jp
movsl
mov
adc
push
mov
inc
ficomps
pop
jge
jge
aam
outsl
jp
inc
pand
adc
sub
mov
das
sbb
cmp
shll
rcrb
mov
cli
mov
test
lock
push
dec
xchg
loope
pop
daa
jbe
aam
jne
mov
dec
call
cmpsl
lret
pop
into
jecxz
mov
cmp
pop
icebp
pop
sub
inc
xchg
cs
inc
loop
das
sbb
mov
leave
inc
xchg
pop
and
mov
pop
rcrb
mov
jne
xchg
xchg
shll
push
jl
scas
or
dec
test
in
int
jmp
enter
cli
mov
into
and
out
mul
ficoms
sbb
iret
xchg
fidivs
xor
cmp
adc
xor
es
mov
neg
out
push
or
ret
push
scas
fiadds
xlat
les
add
outsb
push
test
and
popa
or
imul
sbb
jecxz
stc
outsb
or
jg
adc
lods
std
dec
push
push
xchg
in
mov
or
dec
enter
jns
mov
jae
scas
jns
xchg
insb
pop
and
enter
or
sub
sbb
insl
pusha
pop
dec
mull
ds
movsl
pop
lods
inc
jle
ret
mov
xchg
aad
movsl
xchg
mov
mov
xchg
rol
mov
roll
add
data16
int
jbe
xchg
add
cmp
push
sub
push
xor
pop
add
enter
in
test
sbb
lcall
clc
mov
int
mov
mov
cmp
add
fucomp
adc
dec
mov
mov
enter
pop
xor
cmp
mov
xchg
call
and
dec
mov
xor
lret
xorb
repz
pop
aad
call
jp
pop
sub
enter
fstl
fmull
sbb
xor
dec
jb
ss
sbb
divb
jmp
das
pop
out
sbb
test
dec
push
push
sahf
dec
xor
add
cmp
push
jecxz
or
ss
int3
inc
ss
sbb
aas
inc
insl
fistl
mov
dec
xor
mov
outsb
in
rorb
test
xchg
xchg
fldt
mov
push
scas
push
mov
sub
mov
sub
sahf
lcall
inc
cmc
cltd
push
roll
inc
mov
push
mov
pop
xchg
lcall
addr16
lcall
push
jge
jl
out
adc
leave
cmp
xchg
push
repz
lds
ljmp
push
addr16
imul
lods
ret
repnz
in
enter
push
adc
repz
add
or
mov
lcall
pop
arpl
mov
cmp
cld
sub
in
sbb
jmp
ret
push
xlat
push
lds
mov
js
mov
push
adc
aad
pop
insl
or
in
es
mov
outsb
mov
rcl
adc
imul
sub
push
jo
nop
fstpl
ss
daa
aam
jecxz
push
js
xor
js
aas
cmc
or
sub
jae
stos
aad
mov
lds
add
cltd
scas
aam
popl
xor
xchg
pop
pop
das
xor
fldenv
jo
sub
pop
in
xchg
mov
mov
inc
shl
nop
push
clc
xchg
pop
bound
out
push
cmp
mov
cmp
dec
sarl
loope
sahf
lds
inc
sbb
xor
mov
sbb
ss
inc
lret
cmpl
pop
stos
xchg
movsb
push
repz
inc
iret
mov
outsl
dec
flds
outsb
or
pop
out
imul
sbb
out
mov
xor
movsl
nop
and
inc
mov
in
leave
cmp
je
xchg
sub
mov
test
push
push
mov
sbb
imul
xchg
or
jge
or
xchg
mov
jae
fildll
jg
cmp
lock
test
jno
or
in
xor
mov
fistps
push
inc
aas
pop
cmp
push
pop
ljmp
lods
pop
mov
je
data16
jne
jecxz
xchg
cmp
cli
pushf
mov
pusha
cld
and
testb
pusha
lds
jl
xchg
addb
in
leave
es
push
jg
xchg
xchg
or
jmp
std
es
jnp
fwait
testl
mov
and
fmull
imulw
jmp
cmpb
fisubrs
es
les
sub
xor
popa
popa
and
aad
fstl
sarb
jp
jg
popa
callw
jo
int
call
mov
push
repnz
ds
lret
jmp
pop
ss
in
push
insb
ret
das
addr16
lds
insl
jae
jmp
shll
or
int
insb
and
repz
pop
xchg
xor
xor
cmpsl
clc
add
and
andb
push
test
mov
test
jg
stos
movsl
dec
frstor
testl
fwait
xchg
clc
mov
mov
mov
inc
cmp
ds
fcmovu
jno
iret
jb
ror
fdivp
icebp
pop
cld
addl
cld
fwait
xchg
xor
jecxz
arpl
sarb
mov
and
loope
repnz
cli
mov
das
lock
lds
fwait
lods
add
mov
adc
popa
push
or
pop
popa
data16
ljmp
call
jmp
shrb
mov
dec
pop
and
outsb
test
push
pop
push
jl
stos
test
jle
cmp
sub
add
pop
xchg
insl
cli
dec
pop
and
int
xor
insl
xchg
add
les
mov
lods
jns
lret
push
outsb
push
es
repz
out
mov
sbb
int
sbb
mov
pop
stos
out
cld
cld
sahf
pop
push
xor
xchg
sbb
insl
sub
mov
ret
mov
int3
cmp
sub
fidivs
mov
mov
lock
adc
jmp
ljmp
add
sbb
add
push
cwtl
cld
int3
movsl
mov
mov
and
xchg
lret
cmp
jge
push
and
pop
sbb
lahf
shlb
call
int3
sbb
lock
insl
icebp
arpl
loopne
scas
clc
sbb
lods
mov
inc
cmp
dec
fadds
jg
mov
push
push
xchg
push
sbb
sti
and
movsl
sbb
mov
push
popl
xor
lret
in
in
adc
inc
pop
into
shr
das
or
insl
and
je
subb
mov
lahf
sub
mov
sbb
inc
pop
ja
xor
lret
mov
sbb
push
mov
inc
dec
arpl
mov
dec
jae
lods
or
je
jno
push
test
jnp
mov
lret
mov
pop
push
scas
jp
add
inc
sbb
push
adc
sti
and
out
std
loop
xor
lods
nop
push
fmul
jmp
aam
mov
repnz
rclb
sbb
mov
push
and
out
xor
jle
pop
mov
cmp
addr16
int
cld
rcll
inc
aam
sub
mov
xchg
push
xor
dec
loop
jns
mov
xor
mov
test
lock
add
and
int
leave
ret
adc
cmp
xlat
mov
enter
movsl
std
das
cmp
lock
dec
in
mov
nop
cmp
nop
inc
push
xor
sub
dec
dec
stos
mov
jnp
out
mov
fcomp
frstor
lea
data16
mov
repz
add
cmp
xlat
pop
fcmovb
testb
fstpl
pushf
jmp
outsl
mov
pop
pop
inc
or
push
sub
int3
fbld
push
mov
add
fildl
inc
ret
jmp
and
xlat
mov
push
add
xchg
pop
dec
cltd
insb
subb
and
sahf
sbb
cmp
aam
pop
imul
xor
movb
xor
xor
fs
mov
xchg
scas
clc
push
out
cmpsb
jg
dec
sub
xchg
hlt
mov
out
add
dec
jp
sub
jecxz
and
pushw
and
mov
jle
andl
std
sbb
xchg
bound
push
pop
pop
loopne
mov
fucom
fsubl
inc
cmp
dec
cmpsb
aam
fs
sub
int3
insl
in
fwait
jmp
pop
pop
cmp
out
or
jp
and
inc
or
mov
fstl
ss
sbb
xor
lods
xor
sahf
aaa
data16
sub
jo
mov
ror
setnp
fsubl
xor
aaa
aad
sbb
arpl
jecxz
mov
jbe
sbb
lret
sti
call
nop
fistl
push
jae
imul
daa
and
and
cmp
mov
mov
fisubs
prefetch
jecxz
or
addr16
pop
mov
xchg
icebp
pop
jno
sahf
push
mov
jp
jge
jae
sbb
adc
adc
cwtl
cmpsl
fwait
xlat
add
or
idivl
sbb
sbb
leave
mov
xor
aas
sub
out
aas
add
outsb
in
push
mov
mov
xor
mov
out
shl
xchg
xchg
cmp
adc
mov
aaa
cmp
sar
lds
iret
es
stc
jmp
loop
pop
call
cltd
lea
adc
repz
jae
hlt
inc
mov
xor
cmc
jbe
mov
adc
popf
cmp
jo
aas
shll
and
hlt
and
xor
pop
jb,pn
push
xor
shrl
pop
das
fmul
je
adc
xor
xchg
std
mov
fistpl
mov
push
test
std
jo
loopne
arpl
dec
pop
jbe
test
les
das
ljmp
mov
lock
test
xchg
sub
jbe
push
loop
push
faddp
mov
mov
cld
mov
xchg
mov
sar
lret
xlat
bound
or
and
xor
xor
jge
stc
dec
xlat
cmpsl
rorb
lods
or
mov
pop
rorb
test
inc
push
pop
pushf
and
mov
mov
out
pop
pop
and
cmp
cmp
in
sub
cmpl
sub
mov
test
in
and
ficoml
cmc
xor
push
pop
push
or
mov
push
je
loop
popa
adc
jg
pop
fisttps
shlb
sub
pop
adc
add
lock
jno
aad
movsb
sub
test
pop
xlat
cld
je
mov
fisubrs
rcrl
shlb
cmp
test
cmp
out
lret
test
pop
iret
push
arpl
stc
cmp
fisttpll
loopne
scas
lcall
push
jmp
hlt
cmp
int
fcomi
xchg
insb
dec
loopne
ror
mov
pop
call
pop
aaa
cmpb
out
mov
xchg
dec
xchg
test
sub
test
pop
imul
adc
clc
fxch
jnp
stc
adc
outsb
leave
mov
pop
ljmp
inc
inc
sub
mov
sbb
mov
jle
and
je
fcoms
lcall
in
aaa
sarl
mov
stos
and
mov
cmpsb
jmp
sub
pop
std
dec
xor
cwtl
sarl
pop
insb
les
pop
test
sar
insl
lahf
test
stos
insb
cmc
gs
jnp
inc
cmovns
incl
imul
jbe
add
das
bnd
add
push
xchg
hlt
inc
push
mov
lret
inc
aaa
dec
cmp
cmpsb
pop
push
in
sarl
jb
mov
dec
in
mov
mov
mov
aam
js
jge
jb
jne
sbb
insb
pop
mov
add
mov
adc
pop
sbbb
sub
test
bound
cmp
xchg
mov
dec
std
sti
jp
jnp
adc
mov
ljmp
jae
sub
out
negb
cmp
sub
leave
or
fldt
adc
mov
int3
ja
xor
mov
cmpl
ds
dec
test
mov
push
movsl
xchg
jg
mov
stos
push
hlt
jnp
loop
push
out
clc
push
sbb
adc
xor
pusha
mulb
adc
add
pop
mov
mov
adc
push
pop
inc
xchg
push
cwtl
push
in
test
sbb
aam
push
insb
clc
ret
lds
inc
cmp
lock
and
test
push
ret
adc
fucomi
data16
fidivrs
pop
pop
sbb
or
jo
lret
dec
in
out
div
mov
dec
pop
in
out
in
insl
lea
pop
jl
and
ljmp
dec
es
push
xchg
dec
sbb
mov
pop
pop
iret
jge
decb
dec
enter
mov
lds
cmc
test
mov
aaa
aad
jns
negl
cmp
lcall
xlat
sbb
sub
add
adc
mov
inc
xchg
fcompl
mov
pop
mov
popf
cmp
clc
lods
test
xor
loopne
insb
stc
scas
in
inc
mov
test
jp
adc
mov
mov
shrl
cwtl
or
les
stos
popa
movl
out
dec
push
fdivs
mov
call
xchg
cmpsl
shl
or
lea
adc
mov
cmc
cmp
xchg
jmp
push
jecxz
dec
xchg
sahf
push
jmp
adc
dec
cmpsl
xchg
mov
popf
xor
sub
xlat
lock
xchg
lock
or
mov
into
into
pop
rol
dec
add
push
mov
mov
shr
mov
subl
add
inc
sub
daa
pop
jecxz
repz
test
mov
rorl
push
outsl
inc
repz
rcr
xor
xchg
mov
xchg
cli
loopne
cmc
jo
dec
filds
and
jl
sbb
sbb
cs
sbb
push
aaa
mov
push
pop
inc
dec
push
xor
cmpsb
int
adc
les
adc
mulb
cmp
outsb
jb
add
cmp
nop
jle
push
jl
cmp
ljmp
jle
outsl
mov
pop
cmp
cmp
std
insl
shrl
push
gs
push
mov
and
scas
inc
lods
lds
fsubl
adcb
mov
mov
cli
or
popa
iret
sbb
insl
mov
movsb
xchg
mov
cmp
add
cli
dec
xchg
repz
adc
jb
ss
or
ss
fidivrs
dec
ds
mov
mov
lahf
mov
sti
mov
xchg
sub
lea
xchg
ss
ljmp
and
ja
sub
ror
cli
dec
repz
mov
dec
lock
xchg
scas
sbb
xchg
mov
add
nop
mov
xchg
loop
outsl
sarl
mov
repnz
push
sub
movsb
fsts
or
pop
test
fcompl
out
neg
ljmp
push
sub
cmp
jbe
inc
push
jp
mov
mov
ljmp
push
sub
cmp
jbe
inc
push
jp
mov
mov
ljmp
imulb
push
cmp
pop
inc
imul
fsubrl
out
ljmp
lods
sub
dec
adc
movsl
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fcmovne
lret
and
adc
subl
adc
dec
mov
sbb
or
sub
sub
lret
and
adc
add
push
stos
xor
jnp
sbbl
xchg
sub
ret
and
mov
xchg
pop
mov
outsb
push
repnz
jl
mov
movsb
dec
sti
fs
push
enter
jp
insb
cltd
fnsave
xor
adc
sbb
orl
mov
mov
ficoms
xchg
dec
lock
cmp
aam
and
aaa
and
or
pop
xor
imul
cmp
and
sbb
or
shl
loope
adc
rcr
icebp
xor
iret
mov
inc
stos
stos
mov
dec
movsb
xchg
jge
lock
mov
sub
jbe
or
pop
pop
inc
pop
loop
mov
push
fwait
and
sarb
xor
sub
ss
dec
adc
leave
push
outsb
cmp
cmp
sub
xor
sar
xchg
jmp
mov
popa
mov
aaa
push
arpl
add
adc
and
sub
sahf
push
lahf
das
call
cmp
in
in
call
dec
nop
inc
mov
xchg
jo
and
push
mov
aas
clc
sub
jnp
sub
sbb
dec
stos
mov
inc
andl
mov
push
stos
inc
pop
mov
mov
sbb
or
cmp
sub
lret
and
adc
add
push
stos
inc
pop
mov
mov
sbb
or
cmp
sub
in
inc
mov
sub
mov
jno
leave
xchg
divl
loopne
pop
icebp
jae
inc
test
pop
and
sbbb
cltd
gs
cs
lret
aas
je
jns
add
xchg
inc
bound
popa
or
adc
xchg
mov
aad
fisttpll
imul
hlt
push
es
or
out
inc
mov
das
loop
bswap
pop
and
and
mov
mov
int
fisubrs
nop
adc
pop
ret
xchg
sbb
ja
outsb
vaddsubps
ja
push
xchg
addr16
inc
cmp
call
mov
cli
push
and
jne
cmp
sub
and
cwtl
jns
pop
push
fnsave
and
jl
scas
mov
xor
stc
mov
pop
loop
mov
pop
add
or
rcrl
in
ror
pushf
mov
imul
rorl
mov
mov
lahf
jge
xlat
or
jae
sub
inc
push
push
push
add
push
cmp
jns
push
cmp
scas
out
int3
or
jle
aam
fdivrl
in
add
xchg
dec
mov
add
cli
jl
inc
dec
dec
std
sahf
sub
sahf
cmpsb
leave
cmp
dec
test
xchg
xchg
sub
sbb
mov
lea
in
fstpl
mov
ljmp
sbb
fs
sti
push
cmpsl
ret
jbe
push
lods
mov
arpl
add
cmp
xorl
push
les
or
cltd
add
mov
jle
or
in
xor
cld
inc
pop
movsb
push
and
push
push
sub
sbb
xchg
adc
outsb
sub
repz
add
repz
fisttps
out
movsl
mov
adc
push
out
xchg
or
popa
sub
push
shrb
mov
cli
cmpsl
xor
pop
in
pop
pop
jmp
add
imul
ret
mov
lock
loope
sub
rol
mov
or
push
bound
or
xlat
xor
sbb
frstor
mov
or
inc
sub
mov
push
xchg
inc
mov
add
push
dec
pop
dec
mulb
cs
mov
push
add
sahf
les
push
xchg
nop
push
cmpsl
push
mov
cmc
add
movsl
inc
ds
addb
std
stc
lods
incb
adc
loop
jno
insb
addr16
sbb
ficoml
lods
mov
out
pop
psraw
arpl
adc
mov
jp
push
mov
outsb
push
inc
pop
jne
outsb
inc
cld
add
lods
inc
or
loopne
aaa
movsb
inc
fsts
dec
xchg
les
pop
dec
iret
cmp
sub
mov
sub
sbb
mov
xor
mov
ja
ret
adc
jne
movsl
mov
xchg
sub
mov
test
jns
dec
sti
add
lock
pop
movl
scas
into
jle
and
and
test
nop
cmc
aad
lock
push
jge
push
pop
popf
pop
icebp
push
stos
shl
ret
inc
mov
pop
mov
dec
ljmp
xorl
mov
imul
es
leave
sbb
rorb
mov
mov
push
leave
fsts
scas
adc
cwtl
into
aas
movsb
sbb
push
lds
cmpsl
cltd
out
outsl
xchg
aam
gs
ret
and
add
dec
pop
jb
jg
arpl
sbb
scas
mov
cmp
inc
in
bound
jge
inc
aam
adc
addl
aam
movsb
std
or
jbe
xor
sbb
imul
add
sahf
sti
fcmovbe
fisttps
mov
push
mov
push
lahf
ret
rcr
movsb
mov
or
int3
dec
add
inc
out
fists
sbb
test
xchg
test
mov
and
and
adc
mov
pop
adc
or
sahf
jle
xchg
mov
stc
xchg
or
pop
add
lock
dec
in
ljmp
lret
fldcw
addr16
push
mov
sbb
mov
in
or
mov
data16
mov
aam
fbld
mov
lret
jl
and
leave
jecxz
sbb
cwtl
or
xchg
lods
imul
int3
xchg
loopne
cmc
push
into
cli
scas
xor
mov
cmp
inc
sbb
stos
cmp
insl
negl
mov
xchg
adcl
fbld
ja
mov
or
lea
std
sbb
inc
push
xchg
loop
loope
jne
dec
sub
xchg
or
mov
fnsave
adc
adc
mov
push
lods
dec
pop
add
scas
xor
lret
ljmp
in
dec
push
mov
push
gs
dec
mov
cmp
adc
fs
mov
inc
xchg
stos
push
aam
cwtl
xor
dec
jmp
jl
mov
cs
or
out
inc
mov
orl
add
sub
or
pop
ss
jp
push
fs
test
shlb
icebp
leave
cld
icebp
push
sub
or
enter
sub
pop
leave
dec
and
in
pop
mov
addb
pop
mov
faddl
xchg
ss
repz
aad
icebp
shrb
adc
jbe
imul
ficomps
or
push
adc
xlat
lea
cmp
mov
jecxz
lock
andb
mov
xchg
in
or
adcl
adc
insl
add
sub
insb
shl
adc
cmp
and
pop
out
cmp
cld
or
sub
add
test
mov
call
aad
cld
sahf
fstl
lds
loop
push
sti
sahf
int
mov
loopne
ss
sub
add
xchg
adc
sar
lahf
addr16
pop
xor
xchg
add
les
rcr
ret
shl
jge
fimuls
add
mov
sub
dec
add
sub
cmpsl
adc
jg
fisttpll
cs
mov
mov
stos
or
fs
popf
daa
fwait
aaa
nop
aad
rcll
inc
lds
sub
test
mov
sub
push
push
pop
sbb
pusha
xchg
neg
inc
test
movsb
enter
insl
sub
pop
ficoml
xor
jne
insb
cltd
fidivl
test
cmp
mov
xchg
jne
pop
fldl
scas
xchg
dec
mov
pop
adc
inc
dec
jo
add
mov
ficomps
inc
jl
inc
and
jecxz
jno
iret
pop
movsl
lods
imul
les
outsl
adc
and
pop
push
mov
mov
push
xchg
test
or
and
mov
int3
loope
out
cmc
aam
mov
movsl
shl
lock
inc
jl
mov
sub
cmc
pop
out
inc
dec
adc
xor
stos
popf
das
out
lfs
dec
nop
in
icebp
outsb
rcrl
stos
cwtl
pop
std
or
aam
mov
out
mov
fisttpl
dec
sub
in
adc
mov
or
and
out
fisttpll
dec
gs
int3
pop
adc
lds
out
lahf
test
pop
dec
hlt
mov
pop
mov
das
es
movsb
aam
mov
cmp
sub
fdivrs
movsb
iret
jne
int3
fildll
mov
adc
imul
adc
or
xor
mov
xlat
bnd
enter
lea
jmp
xor
pop
and
cmc
push
xlat
bound
inc
jmp
test
xchg
mov
add
lods
add
pushf
dec
jge
adc
xchg
add
lods
stc
cmp
lods
icebp
and
cli
adc
mov
push
ss
xchg
rorb
pop
inc
movsl
xchg
jbe
fwait
or
faddl
mov
imul
div
inc
out
xchg
inc
sbb
jmp
ja
push
xchg
pop
pop
div
lock
sub
and
xor
int
rclb
hlt
enter
ss
jnp
ds
repz
test
andl
jge
add
cltd
or
fsts
arpl
jle
fsub
xchg
mov
in
push
xchg
aam
xor
mov
dec
mov
mov
testl
mov
popf
mov
pushf
loopne
in
push
out
sub
dec
aam
inc
repnz
into
dec
mov
jecxz
imul
and
adc
sub
test
stos
and
push
rcrb
mov
sbb
mov
ret
and
xchg
cmpsl
je
test
adc
jle
xlat
jo
mov
adc
out
test
xor
fisubs
mov
jmp
xchg
lret
dec
mov
sub
or
adc
jno
into
mov
mov
mov
sbb
mov
test
and
lret
lret
xor
mov
sub
mov
push
scas
decl
xor
mov
enter
stos
lock
pop
mov
data16
xchg
xchg
movsb
subb
in
ret
add
mov
fldl
push
xchg
in
les
in
iret
mov
push
sub
stos
out
int3
bound
xchg
test
movsb
mov
inc
push
sub
repz
sarl
shlb
in
insb
fucomp
push
repnz
shl
sahf
ret
push
cs
inc
adc
xor
shll
in
add
inc
das
inc
roll
shrl
lahf
mov
mov
int3
cmc
shll
aam
mov
sbb
lret
cld
lea
popf
cltd
test
or
push
or
dec
sub
push
sarl
lods
cs
mov
ss
xchg
bound
jnp
jl
inc
orl
test
adc
add
aad
and
std
leave
mov
clc
sbbb
sbb
and
and
jecxz
paddusw
cltd
or
lds
sbb
inc
repnz
into
pop
rcrl
roll
in
dec
pop
jp
inc
mov
xor
lret
fwait
and
leave
movsb
dec
mov
ret
jge
or
popf
adc
cmc
shl
inc
in
addr16
sbb
dec
fs
lahf
xchg
pop
js
push
xorl
andl
pop
xchg
int3
push
icebp
pop
das
mov
test
fnstsw
inc
or
xchg
fnsave
jbe
mov
xor
jp
adc
test
xor
mov
insl
xor
mov
aas
aad
mov
cmovbe
jae
leave
loopne
imul
mov
scas
mov
stos
inc
xor
rol
mov
fisubl
aaa
test
cs
sbb
dec
cmp
outsb
and
popa
ficomps
enter
cmp
sub
test
pusha
jnp
cmp
notb
mov
jmp
sub
or
and
js
cmp
mov
mov
int3
add
or
push
fwait
lcall
das
push
shlb
shlb
lods
push
and
push
pop
les
add
lcall
fisttpl
scas
test
lods
rcll
add
jl
jl
jo
imul
pusha
stc
inc
adc
sbb
fs
xchg
insl
inc
lret
sbb
cltd
loope
ljmp
push
jge
xchg
inc
stos
shll
cltd
jp
movsl
sahf
int3
aas
push
inc
push
sahf
ljmp
ds
pop
rclb
xchg
addr16
aad
push
push
add
mov
adc
mov
ret
xor
mov
addr16
dec
cmp
push
push
jbe
lods
clc
push
insl
loop
or
mov
pop
lds
cmp
lea
dec
xor
cmp
test
aad
sti
movsb
jae
inc
stc
push
sbb
cmp
mov
push
pop
sbbl
mov
test
push
lcall
aam
push
fldcw
outsl
into
mov
jp
ljmp
pop
dec
sbb
push
lcall
xor
aam
xor
sbb
dec
pop
cmp
cmp
pop
ret
or
in
outsl
ficompl
gs
dec
sub
xor
xchg
pop
rcr
or
and
pop
inc
fsub
imul
lock
enter
shrl
push
jl
movsb
and
inc
stc
push
aad
mov
xchg
adc
test
popa
pusha
lock
sbbb
cwtl
int
fsubl
jp
mov
mov
xor
mov
das
repz
leave
ss
jae
ss
out
jecxz
ja
rclb
mov
inc
dec
mov
jb
jmp
jl
imul
scas
push
mov
sbb
fs
aad
clc
fwait
xchg
or
xor
ret
loope
ljmp
and
mov
ja
jg
mov
andl
lods
andl
xchg
and
sub
jl
mov
aam
cvtpi2ps
and
cltd
mov
lret
fldcw
lahf
fimuls
popa
enter
cmc
jmp
ja,pt
xchg
xor
xor
jnp
cmp
jp
testb
jp
push
mov
sbb
jne
call
insl
roll
rclb
cmpsb
fwait
push
lret
dec
jbe
aam
outsl
or
inc
popf
push
xor
out
pusha
sub
stos
xor
pusha
add
and
inc
aas
test
adc
ljmp
es
out
arpl
xor
mov
inc
mov
int
mov
cmp
lahf
mov
int
cli
and
xchg
mov
sub
in
adc
movsb
fchs
in
repz
mov
push
imul
ret
stos
push
ljmp
inc
xchg
jb
cmpsb
mov
scas
loopne
gs
xchg
andl
xchg
push
or
testl
movsl
sub
stos
mov
stos
and
sbb
out
sbb
xchg
push
mov
clc
xor
sub
leave
popfw
or
or
xlat
cmp
mov
adc
mov
mov
hlt
push
lds
cmp
push
dec
push
mov
out
adc
cltd
mov
lret
cltd
std
or
adc
cld
cwtl
and
daa
fcom
jnp
mov
addr16
aam
jl
push
mov
movsb
dec
adc
pop
xchg
jmp
lahf
fstl
xor
inc
lea
in
sub
cmpsl
lret
mov
scas
sbb
stc
popa
mov
movsl
imul
cs
mov
sbb
mov
xchg
inc
xlat
les
pop
mov
xlat
pop
sub
jp
and
pushf
xchg
add
icebp
imul
push
lret
out
dec
xor
stc
push
mov
and
cs
sub
scas
fwait
mov
jns
inc
dec
jnp
mov
enter
dec
mov
xchg
add
cmpsl
mov
out
shl
mov
adc
jmp
loope
mov
sbb
shrl
mov
aad
pop
add
clc
scas
cmc
ss
dec
cmp
hlt
xchg
mov
xor
divb
adc
cltd
das
rorl
pop
aam
gs
push
mov
mov
mov
or
adc
clc
nop
lret
rorl
sbb
sbb
test
in
mov
and
xchg
scas
xor
inc
mov
jg
mov
xchg
orl
add
dec
dec
ss
or
cltd
cmp
hlt
jp
sub
adc
mov
addl
mov
fidivs
jmp
pop
cltd
sahf
mov
sbb
sbb
push
push
andl
in
je
pop
add
push
or
xlat
loopne
pop
cmc
xor
addr16
dec
inc
mov
mov
cs
mov
sbbb
out
mov
mov
pop
popl
out
xchg
sub
mov
inc
xchg
sbbl
cltd
cmp
loope
lret
movsb
dec
inc
mov
sahf
stos
sahf
and
pusha
sahf
xchg
or
aas
xchg
insb
popa
add
cmpsb
cmc
les
xchg
jecxz
or
mov
adc
insl
lock
aam
imul
aaa
pop
pop
movsb
mov
inc
outsb
outsl
cmc
jne
nop
call
push
or
call
loop
call
inc
lret
test
fcoml
andb
aas
sub
lret
dec
test
mov
aad
fimull
dec
jns
mov
cmp
fidivrs
mov
xchg
sub
mov
cltd
out
std
pop
cmpsl
sbb
stos
mov
pop
lods
pusha
add
xchg
push
imul
xor
test
sub
popa
push
mov
cmp
inc
pop
mov
jne
scas
outsb
cwtl
jle
ljmp
shll
stos
jbe
mov
stc
mov
loop
jecxz
cmp
inc
pop
lahf
sahf
iret
mov
les
subl
sbb
dec
push
imul
cmc
jne
sbb
adc
and
inc
pop
mov
mov
dec
fisttpl
jno
pop
subl
sub
add
popa
inc
divl
rcrl
in
mov
loop
adc
pop
lods
shlb
push
mov
mov
push
mov
push
das
lahf
xchg
testb
divb
or
loope
aad
mov
lahf
ffreep
cs
mov
mov
xchg
movl
sub
sbb
and
mov
js
inc
jmp
sbb
xor
pushf
rcrl
pop
mov
orw
jno
lods
jb
inc
cmp
daa
sbb
push
mov
add
adc
dec
adc
jle
inc
or
sbb
pop
mov
sbb
scas
push
push
cmp
mov
lret
aad
bound
push
adc
jge
dec
mov
inc
dec
xchg
jns
push
shl
out
fnstcw
lcall
xor
sub
out
push
fsub
push
mov
js
cwtl
dec
xchg
xor
icebp
and
jno
ficompl
rcrl
and
loop
cwtl
js
jae
incl
out
cmp
lret
sbb
xchg
shl
xor
xchg
add
and
jge
adc
pushf
xchg
mov
inc
xor
shll
std
push
data16
lret
xor
outsb
nop
fistpll
daa
sub
data16
jmp
mov
test
bound
cltd
sar
cwtl
push
push
push
mov
jae
lret
mov
sub
aam
jg
inc
xlat
out
in
jno
cli
mov
cwtl
shr
loope
xchg
lods
insl
inc
adc
and
sub
sbb
cmp
les
jp
sbb
sbb
and
call
push
call
fwait
mov
addb
inc
jge
cmpsl
and
aas
add
xchg
dec
mov
jo
sbbl
xchg
adcl
gs
mov
cmp
test
and
pop
mov
sub
lahf
aas
pop
loop
sbb
mov
xchg
pop
mov
jmp
das
sahf
mov
push
jecxz
or
cs
mov
loopne
or
xchg
add
dec
clc
mov
ljmp
loop
push
arpl
xchg
popa
es
out
push
sub
flds
clc
add
jl
repnz
xchg
xchg
imul
ds
lret
mov
push
lea
insb
pushf
dec
or
mov
sub
decl
pop
imul
fs
and
imul
jns
sahf
int
leave
pop
and
and
aas
pop
mov
sbb
jbe
aam
mov
mov
jns
ficoml
push
int
fwait
jnp
push
adc
pop
mov
pushf
push
sbb
subl
addr16
shrl
sub
pop
dec
mov
cmp
push
or
adc
mov
dec
xchg
inc
xorl
loop
into
inc
bound
test
subb
jo
call
aas
in
push
cmp
ficoms
popf
mov
jge
cwtl
dec
stc
movsb
inc
int
xchg
jne
call
jne
xchg
xor
mov
ja
addl
iret
push
sbb
push
adc
add
jl
mov
jp
cmp
jae
test
push
mov
popl
cmp
xlat
pusha
add
push
out
fcom
sub
rcrl
and
fisubrl
add
out
jnp
fldt
scas
arpl
jb
mov
lock
jne
push
loop
jno
mov
loopne
push
test
test
jle
add
adc
rorl
ret
gs
arpl
inc
pushf
sub
aam
jbe
xor
and
sti
imul
or
inc
and
jge
add
push
stos
inc
pop
mov
mov
sbb
or
cmp
sub
lret
and
adc
add
push
stos
inc
pop
mov
mov
sbb
or
cmp
sub
lret
imul
jno
leave
mov
imul
sbb
or
cmp
sub
leave
and
adc
add
shrl
inc
movsb
dec
mov
rcll
sbbl
cs
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jae
arpl
xor
cmp
push
inc
repz
jecxz
roll
mov
loop
adc
push
xor
xor
inc
adc
dec
repz
jecxz
cmpsl
mov
mov
loop
mov
les
inc
push
xor
or
js
push
repz
jecxz
mov
add
xchg
push
arpl
popa
xor
pop
and
xor
cmp
lock
dec
cmp
mov
push
or
ffreep
cmpsb
inc
into
fstpl
inc
cmpsl
leave
sbb
int
pop
dec
inc
repnz
mov
xchg
jns
scas
mov
pop
fwait
imul
insl
mov
in
cmp
xchg
mov
adc
sub
mulb
inc
and
and
inc
xor
mov
out
repz
repz
in
dec
lret
dec
xchg
or
pop
cmp
jnp
mov
inc
adc
pop
aad
push
dec
push
ds
xchg
outsl
mov
pop
std
adc
mov
mov
add
shrb
fs
mov
jmp
sub
inc
inc
and
push
and
jb
lock
jecxz
shll
mov
shlb
pop
es
pop
imull
jbe
inc
and
mov
scas
rcl
lret
xchg
mov
adc
es
jne
dec
adc
sbb
push
xchg
repz
xchg
loopne
xchg
popf
test
sbb
loop
pop
inc
dec
xor
and
jb
xchg
jecxz
shll
mov
loop
adc
push
xor
xor
inc
adc
xchg
jecxz
shll
mov
loop
adc
push
call
xor
sbb
lcall
cmp
jns
stos
sbb
cli
inc
mov
int3
sub
sbb
jg
or
sbbb
adc
mov
mov
mov
jp
test
movsb
in
leave
pop
popa
inc
test
andps
scas
inc
lds
and
push
inc
push
inc
shlb
test
push
xor
lods
pop
adc
mov
cmc
in
xchg
lret
stos
mov
outsb
scas
xchg
lods
stc
ret
pop
adc
aam
xchg
cmpsb
insl
push
jo
pop
add
inc
sub
jne
leave
or
push
std
sub
aam
cmpsb
mov
inc
out
sub
and
repnz
sub
loope
out
aad
jge
imul
test
mov
xor
insb
and
mov
push
xchg
lret
jl,pt
sub
insl
dec
jl
cwtl
idivl
inc
gs
imulb
stc
iret
push
movsb
mov
sbbl
ss
adc
add
sahf
test
cmp
pusha
mov
aad
fwait
decl
pop
in
fcompl
je
inc
aad
dec
inc
add
sub
nop
arpl
sbb
bound
lods
inc
ret
into
inc
or
std
jl
test
clc
sbb
and
inc
dec
faddl
jnp
cwtl
xchg
in
push
aad
mov
std
jge
sbb
adc
add
gs
xchg
icebp
cli
cmp
push
cli
insb
push
push
loop
dec
ljmp
or
xchg
and
push
push
ror
scas
js
mov
lods
mov
mov
shll
mov
lahf
mov
mov
int
cmp
add
arpl
fs
stos
mov
mov
cmpsb
cwtl
in
fcmove
pop
adc
add
lods
jle
add
cwtl
stc
popf
sbb
clc
push
xchg
bound
popf
sbb
outsb
filds
arpl
mov
ror
dec
lcall
int
mov
cmpsb
lret
out
sbb
fimull
fdivrl
push
xor
sub
push
push
pop
push
popfw
shll
cmp
push
clc
jmp
mov
repz
jns
loope
lret
adc
cli
sbb
push
xchg
ffree
jle
out
testl
lret
jp
add
outsb
dec
cmp
mov
es
sub
cld
inc
repz
jecxz
xchg
aad
push
enter
in
lods
jg
into
stos
lods
xlat
mov
aas
cmp
jno
sub
jo
mov
shl
jae
dec
push
mov
negb
leave
inc
jl
mov
outsb
cmpsb
out
sbb
stos
cmp
repnz
and
mov
jmp
inc
push
push
addr16
sbb
lock
test
lods
and
or
xchg
jb
mov
dec
mov
pop
pop
ss
xor
cmpsl
fcomip
mov
and
pop
sti
dec
ss
subl
fisubrs
cld
jge
sbb
fsubrl
mov
mov
lret
jno
mov
adc
adc
jl
xor
iret
mov
mov
pop
pop
mov
ss
pop
pop
lds
iret
mov
pop
push
sbb
xchg
sub
movsl
out
shrl
dec
dec
in
push
shlb
or
test
mov
imul
pusha
sub
loop
cmpsb
inc
jp
xor
xchg
sbb
imul
ret
bnd
fdivrp
aam
dec
mov
pop
inc
imul
and
and
inc
out
inc
mov
dec
adc
dec
xor
sub
xchg
ret
lods
or
shr
lods
jp
clc
pop
clc
into
inc
sub
mov
jmp
ret
push
jp
or
mov
es
pop
cs
into
gs
cld
aad
jge
leave
add
adc
pop
xlat
and
cmp
adc
jp
vcmpps
pop
cmp
push
enter
sti
inc
das
cmpl
cltd
test
mov
adc
das
mov
testl
enter
inc
push
cmp
icebp
cmp
mov
shlb
xchg
bound
mov
dec
or
inc
lods
fimull
and
out
popf
ficompl
mov
les
fidivl
pop
jl
mov
js
imul
ljmp
jge
and
fnsave
das
sub
lods
aad
pop
push
fwait
sub
xor
fists
mov
jnp
notb
int3
push
mov
dec
pop
hlt
sbb
mov
ja
test
or
mov
sub
adc
pop
sub
popf
inc
ds
lds
into
es
pop
mov
mov
ret
in
btc
rcrl
js
push
dec
out
cli
lds
mov
call
cs
mov
iret
add
jo
pop
add
ret
in
sub
nop
ljmp
xchg
out
sbb
or
push
push
dec
loop
imul
mov
adc
mov
inc
sbb
inc
icebp
loope
xchg
jmp
loop
repz
shrl
cmp
pmulhw
xor
pushf
out
dec
inc
es
shlb
inc
xchg
dec
mov
jnp
mov
loope
adc
sahf
jmp
xchg
sti
pop
mov
adc
out
jmp
cli
mov
in
lahf
fisubrs
adcl
int
xor
data16
ss
stc
or
js
bound
int
jmp
adc
dec
jmp
out
das
and
lret
mov
in
pop
je
pusha
sbb
or
stos
inc
dec
leave
rcrb
orb
inc
test
daa
or
xchg
mov
cmc
jge
and
or
push
pop
pop
cs
sbb
mov
or
gs
xor
cmp
cmc
cmp
lret
cmp
pop
sahf
lock
fstpt
jne
mov
mov
pushf
fisttpl
push
mov
stc
test
mov
or
sub
daa
std
dec
pop
cld
xor
out
pop
out
iret
cmc
arpl
stos
mov
das
sbb
in
jg
xor
adc
push
adc
sbb
jae
or
jmp
sub
pop
xor
inc
and
pop
pop
push
add
stos
movsb
cmp
cmp
cmp
pop
ret
xor
xor
shll
imul
test
sub
scas
jnp
pop
pop
push
sahf
and
call
push
fistpll
rcrb
mov
adc
adc
int
xlat
cmp
jno
fs
movsb
sbb
ret
push
test
jbe
jle
pop
xchg
mov
or
sub
pop
aas
mov
mov
sub
xlat
mov
mov
lahf
mov
cltd
fs
or
ss
xchg
sub
adc
jmp
sub
mov
push
inc
into
adc
xchg
inc
lods
dec
aam
push
pop
test
clc
mov
add
xchg
repnz
add
jmp
decb
aas
pop
or
hlt
jo
shrb
dec
loop
jno
push
gs
movsl
fwait
lock
or
xchg
out
stos
xchg
jl
mov
aam
nop
xchg
ds
pusha
fdivrp
fisubl
adc
pop
fimull
pop
pop
inc
add
inc
lock
stos
cli
push
loop
lock
jnp
aas
enter
dec
xchg
mov
and
aad
stos
mov
mov
cmc
in
add
je
jl
lahf
testl
jmp
jmp
lcall
cmp
cwtl
test
mov
jne
aas
pop
adc
inc
adc
sbb
inc
imul
fs
mov
cmc
testl
pop
fsubs
bound
sbb
sahf
push
mov
std
movsl
cmpsl
mov
loope
jle
dec
mov
call
cli
xor
pop
jmp
cmp
sbb
mov
or
cmp
jp
loop
shlb
pop
cmp
pop
outsb
andb
pop
jne
out
addb
ss
pop
stos
call
loope
or
xchg
mov
xchg
and
jo
in
mov
mov
mov
and
js
enter
and
mov
jg
lea
shl
rol
pop
ja
iret
stc
ret
iret
inc
stc
pushf
sub
es
int
iret
xor
lods
or
lret
ficoms
mov
dec
push
push
xchg
inc
inc
popa
jno
sbb
pop
lock
inc
inc
mov
arpl
mov
jno
aas
dec
inc
stc
inc
pop
or
push
outsl
inc
cmp
pop
mov
mov
pop
inc
inc
dec
inc
scas
shrl
mov
outsb
scas
cmp
stc
addr16
arpl
adc
cs
outsb
add
lret
popa
add
movl
jle
rcrb
loopne
mov
cli
sbb
cwtl
mov
mov
mov
push
stos
dec
neg
inc
ss
push
sub
xchg
add
push
stc
xorl
sbb
jle
ret
icebp
push
data16
dec
outsb
sbb
push
pop
mov
pop
cmp
push
xchg
push
frstor
pop
clc
push
and
mov
or
and
in
out
inc
out
das
adc
mov
in
das
push
mov
mov
movsb
in
add
mov
sub
adc
xor
pop
mov
cltd
xor
cmp
mov
push
dec
or
sbb
jae
xchg
arpl
sub
dec
adc
rcr
push
test
xchg
in
adc
insb
pushf
push
xlat
push
in
stos
xchg
nop
pop
xor
or
mov
and
jl
sub
xchg
push
filds
repz
mov
lret
loop
lods
pop
test
aas
and
jns
clc
scas
out
adc
stos
inc
mov
les
xor
mov
mov
jg
in
jmp
out
in
scas
push
sbb
jle
jb
add
shl
cld
pop
and
mov
xlat
ljmp
jg
push
in
stos
sbb
gs
jae
loopne
xor
fstpl
xor
ret
push
xor
xchg
shlb
mov
sbb
add
sbb
hlt
inc
push
outsl
push
adc
sbb
mov
hlt
pusha
adc
xchg
sbb
aam
std
mov
lret
test
jmp
mov
xchg
and
das
xchg
scas
jnp
lahf
repnz
fidivrl
inc
pop
dec
or
sbb
jge
jo
stos
push
xor
sbb
movhps
xchg
sub
mov
adc
inc
std
xchg
adc
jle
sub
jno
aas
es
inc
inc
xorl
imul
mov
icebp
ficomps
pop
inc
mov
repz
pop
outsl
and
xor
inc
mov
popa
mov
dec
dec
les
clc
icebp
in
fldcw
fwait
inc
xor
fstpt
and
lea
aaa
mov
sahf
pop
fidivrs
and
jg
sahf
xor
lea
xchg
int
lds
push
inc
push
in
or
xchg
movsb
pop
inc
std
xor
cmpsb
fsubrs
dec
das
movsb
and
in
push
xor
in
test
sub
pop
jecxz
in
xchg
mov
xlat
out
fsubrs
sub
inc
pop
inc
stos
and
xchg
ja
sarl
in
push
add
mov
push
sarb
pop
jl
push
movsb
mov
sub
xchg
cwtl
mov
fwait
ljmp
std
repz
test
adc
insb
int
cmp
pop
insl
in
or
lret
cltd
xor
xchg
push
incb
sti
add
jbe
imul
push
mov
ss
loope
cld
mov
cltd
push
push
pusha
dec
cmp
hlt
ret
sub
out
test
shr
loopne
aam
sub
in
call
sub
ret
in
pop
dec
mov
xchg
push
pop
inc
pop
out
outsw
push
cmp
mov
sbb
dec
cltd
stc
pop
lea
fldt
shrb
cs
push
test
and
mov
lods
mov
stos
in
in
sbb
xor
jge
int
add
xor
rcr
jbe
in
lahf
clc
call
mov
xor
loope
jle
pushf
int
mov
femms
insb
push
pop
fstpt
pushf
jecxz
push
mov
push
mov
loopne
rol
mov
nop
pop
mov
aaa
xchg
pop
inc
mov
cld
cmc
in
cmp
stos
dec
inc
mov
outsl
dec
sub
or
rcr
xchg
aaa
xchg
sbb
mov
sub
or
lret
push
mov
js
sbbl
inc
sub
jp
stos
or
cmp
cli
fwait
or
mov
sbb
ret
mull
mov
adc
sbb
jle
mov
mov
shrl
imul
sbb
stc
icebp
cmp
mov
call
and
dec
xor
mov
loop
insl
leave
inc
jl
lahf
data16
cltd
out
lahf
xor
ror
inc
mov
icebp
or
in
mov
popf
adc
scas
pop
fwait
push
add
dec
stc
insl
sarb
cli
adc
es
jecxz
jbe
popf
and
ss
mov
sbb
adc
xchg
mov
fwait
jge
int3
sbb
je
stos
inc
into
jno
or
mov
jge
adcl
mov
negl
stos
jmp
jns
cmp
sub
or
push
les
dec
imul
mov
into
adc
mov
addr16
pushf
mov
sbb
push
push
mov
push
xchg
es
clc
push
push
lea
iret
mov
mov
push
ret
test
sahf
push
lret
mov
sbb
cmp
daa
and
enter
fwait
sbb
pusha
mov
imul
pop
push
and
pushf
cmp
xorl
or
cmc
fimull
sub
ljmp
xchg
pop
push
inc
sub
loopne
fs
xor
sub
or
fcmovnu
movl
inc
cmc
mov
in
and
in
jge
jae,pt
or
imul
xor
cli
enter
rclb
rcrl
mov
adc
cmpsb
dec
lea
outsb
xchg
pop
int
lods
cmpsl
push
cmpsb
lret
subb
pop
and
aas
ja
sbb
test
jmp
pop
ret
add
rcr
cltd
stos
add
hlt
inc
pop
xor
imul
loopne
lods
out
jnp
sub
jmp
loope
jnp
lcall
in
sahf
and
pop
mov
inc
into
cmpsb
xor
test
mov
pop
data16
mov
jmp
enter
jo
scas
loope
mov
repnz
movb
pop
imul
mov
arpl
decl
jno
and
inc
mov
and
test
repz
into
mov
nop
cmc
pop
pushf
and
popa
lods
pop
cltd
sar
fisttpll
sbbb
ljmp
fxch
pushf
add
je
lds
sahf
test
mov
sub
aas
pop
out
dec
adc
xchg
sub
sbb
dec
mov
push
out
adc
cli
add
out
icebp
dec
push
and
jle
call
mov
mov
ds
in
aam
or
rcr
xchg
jg
sbb
push
js
cmp
hlt
stos
xor
dec
mov
imul
lret
sbb
out
jnp
ret
fbstp
scas
pop
cmpsl
pop
cmp
data16
ljmp
or
cmp
fimuls
jne
xor
popa
daa
ljmp
fs
fs
sbb
cmp
xchg
push
add
xor
imul
int3
sbb
dec
pushf
cli
jp
fcos
test
xchg
and
jl
je
pushf
cmpsl
daa
push
repz
pop
cmp
pop
scas
push
mov
xlat
inc
or
mov
fimull
mov
sbb
inc
xchg
out
inc
mov
jmp
push
jbe
jnp
and
stc
sbb
in
outsl
testb
int
adc
enter
ss
pop
pop
add
and
test
adc
and
aam
sarb
mov
out
movsl
push
into
das
ja
jp
insb
loop
pop
lret
aaa
inc
int
dec
jecxz
stos
lea
ja
xchg
movsb
cmp
sub
mov
adc
imul
mov
inc
std
lods
test
loopne
rcrl
imul
xor
xchg
mov
jbe
xchg
mov
pop
xchg
xchg
push
lock
dec
mov
out
outsb
aaa
sahf
outsl
mov
jns
push
add
fistpl
xchg
ljmp
test
daa
mov
add
lods
mov
sbb
push
cltd
scas
xchg
pop
mov
mov
loope
push
push
sarl
inc
pop
aas
mov
xchg
lret
xor
dec
icebp
repnz
rorl
mov
jmp
push
sbb
addr16
xchg
sbb
pop
inc
fdivrl
pushf
sub
aaa
cmp
movsb
push
jbe
mov
pop
jo
repnz
cmp
es
hlt
cmpsb
notl
sbb
sbb
mov
aam
dec
add
mov
dec
cli
lods
cmp
es
sub
lcall
adc
and
sar
xor
jp
aaa
lret
es
shl
stos
lret
loope
mov
or
leave
inc
or
jb
sub
fldenv
rolb
push
int
mov
fs
adc
adc
push
dec
fisttpll
mov
loop
lea
repnz
push
xchg
test
jb
sbb
fs
push
dec
div
loopne
lahf
cmp
addr16
push
das
mov
xchg
push
aam
sub
xor
ljmp
cli
lahf
insb
rcrb
cmp
mov
mov
cmp
mov
sbb
adc
daa
push
jp
mov
int
push
repz
outsl
cmpsl
js
mov
mov
out
mov
adc
sahf
scas
stos
or
data16
xchg
add
lods
pop
inc
mov
decl
cmp
shll
loopne
repnz
adc
mov
pop
out
int3
pop
in
fistl
xor
jmp
faddl
push
jge
in
pop
mov
cwtl
ja
mull
cs
iret
or
mov
mov
sub
cmp
adc
jmp
sub
nop
fimuls
inc
idivb
mov
aam
inc
dec
sub
inc
push
add
pushf
std
loop
xchg
mov
pop
fmulp
push
gs
push
lcall
mov
jno
mov
cmp
push
mov
into
jp
mov
sub
ret
mov
aad
or
pop
cld
ret
pop
ss
enter
scas
mov
cmp
mov
jecxz
xchg
adc
fsubl
add
and
dec
inc
sbb
inc
xchg
pop
cmp
sbb
inc
stos
outsl
push
not
cmp
clc
out
inc
or
negb
test
sbb
into
sbb
inc
scas
jl
cmp
lahf
inc
out
adc
xchg
icebp
and
xor
and
cmp
int3
pop
push
sbb
inc
repz
pop
push
xchg
mov
pop
fldt
xchg
and
mov
mov
or
jl
mov
jno
sub
or
in
jmp
pop
sahf
push
add
push
or
or
mov
scas
jno
inc
cli
xor
pusha
xor
cmpsl
aas
push
push
popa
xlat
jbe
fcmove
pop
insl
sbb
sub
mov
lret
sub
mov
addr16
out
push
dec
pop
adc
rorb
mov
lcallw
mov
cmp
push
cmp
and
mov
es
lods
add
or
xlat
or
cli
or
ret
stc
sub
sbb
mov
lock
inc
ficoml
ficomps
push
out
jo
das
add
rcrb
test
inc
ret
lcall
cmp
movsl
jae
cmp
aaa
cld
in
xor
test
cmpsl
shlb
out
push
mov
mov
inc
and
xor
cld
push
pop
fcom
cmp
out
lret
push
out
dec
das
mov
mov
xchg
in
mov
sbb
scas
lods
mov
add
lret
pop
jge
sbb
test
fcmovne
test
mov
int
mov
es
rcll
daa
adc
ficomps
das
shlb
daa
xlat
xchg
aas
adc
and
jge
mov
cltd
push
push
icebp
cmpsl
mov
shll
test
xor
aas
cmpsl
ret
popa
shl
lock
enter
xor
mov
lret
lea
cld
pop
sub
out
pop
in
out
push
push
dec
sub
push
mov
xor
xor
jecxz
sti
lea
sub
into
movsl
sub
xchg
cmp
sbb
xor
push
dec
or
aam
push
push
sbb
push
or
xchg
cmp
mov
inc
sbb
mov
scas
ja
testb
dec
out
lea
rcrb
xchg
sub
mov
stc
xor
ljmp
xor
inc
adc
xchg
jecxz
shll
mov
loop
adc
push
xor
xor
inc
adc
xchg
jecxz
shll
mov
loop
push
arpl
sub
xor
sub
jbe
xchg
jecxz
shll
mov
push
jae
arpl
push
inc
bound
push
and
repnz
jns
ret
aad
stos
sub
fucomip
cmp
mov
mov
cwtl
xchg
cwtl
inc
add
dec
and
sub
jb
bound
lcall
fcom
test
mov
inc
push
and
dec
cmp
bound
dec
call
fs
test
mov
adc
pop
push
sub
push
fs
movsb
mov
mov
testb
test
mov
push
fcompl
mov
cmp
adc
mov
dec
xlat
cmp
arpl
mov
dec
ret
cmp
in
jbe
push
ficompl
push
fsubl
addl
testl
pop
xchg
push
xchg
mov
fstp
cmp
addr16
sbb
sub
dec
aaa
aad
and
mov
stos
cwtl
rclb
and
jnp
sub
pusha
pop
clc
pop
mov
out
dec
jbe
rcrb
cmp
ja
sbb
ljmp
cmpsl
xlat
cmp
aaa
or
mov
enter
test
mov
loopne
nop
js
dec
cmp
xor
pop
cmp
push
pop
loopne
hlt
xor
out
mov
loope
sub
sbb
bound
inc
sub
pop
sub
push
jp
jge
test
xchg
cmc
subb
jmp
std
sahf
fists
or
dec
or
dec
daa
scas
pop
insl
and
mov
ret
mov
repnz
cwtl
adc
js
dec
and
sub
jb
bound
xchg
call
mov
mov
adc
js
dec
and
sub
jb
bound
xchg
call
std
pop
sahf
pop
lods
cmp
js
adc
pop
dec
rcll
mov
xor
inc
pop
push
insb
in
mov
movsl
sar
dec
jo
xor
jecxz
sbb
es
fisttps
pop
cmpsb
sbb
rorb
lret
pop
fdivr
pop
jg
out
ljmp
cs
sbb
insb
lret
xor
insb
inc
inc
addr16
divl
mov
movsb
daa
insb
lods
sbb
mov
call
shrl
push
sub
sbb
mov
ss
pop
adc
ljmp
lods
loope
push
data16
mov
rclb
int3
dec
xor
dec
dec
pop
mov
pop
setbe
jg
xchg
lods
mov
insl
bound
sbb
mov
push
add
add
ret
jae
roll
adc
dec
jne
pop
fildl
inc
insl
dec
pop
or
fwait
pushf
clc
in
mov
xchg
dec
fadds
or
bound
fucomip
mov
rcrb
adc
pusha
xchg
sbb
popf
arpl
fs
aad
test
je
pop
inc
popf
jl
mov
shrl
pop
push
dec
decb
add
mov
aam
dec
fldcw
jb
pusha
es
aas
inc
dec
lcall
pop
xchg
lock
jnp
sub
std
inc
data16
popa
fdivs
ret
adcb
lods
mov
lea
dec
fsubl
cltd
adc
es
push
aam
hlt
xchg
or
negl
popf
mov
fistps
pop
sub
push
or
cmpsl
out
fstpt
cmp
push
jae
imul
sbb
insb
movsb
stos
fstl
into
je
jl
repnz
insb
movb
cmp
mov
fwait
call
adc
cmc
xchg
add
xor
popa
out
cld
inc
cmc
fcmovne
xchg
imul
cld
xor
mov
scas
mov
mov
imul
dec
lret
inc
sbb
popf
lea
cmp
dec
push
repnz
loope
cmpb
cmpsb
pop
mov
dec
shlb
sbb
nop
pusha
jp
scas
or
xchg
neg
jne
inc
push
or
mov
mov
pop
in
cwtl
xchg
jle
add
ficompl
xchg
aaa
fildl
inc
test
xor
inc
lock
mov
cmp
add
out
shrb
scas
insl
cld
dec
rorl
fcomps
adc
xchg
arpl
pop
imul
jnp
cmpsb
lods
lock
popf
mov
pusha
mov
imul
push
jecxz
dec
data16
xor
repnz
jne
ret
inc
or
ret
pop
repz
cmpsl
or
clc
jb
sbb
sahf
out
mov
mov
and
scas
in
loope
dec
xor
xchg
push
aam
orl
adc
andb
push
loop
pop
mov
cmp
in
rol
popl
movsb
popa
aad
cmc
sti
dec
inc
fadds
inc
rclb
pop
mov
xor
mov
add
pop
shlb
mov
imul
pushf
push
sub
insl
loope
repnz
loopne
jge
and
daa
rcll
mov
data16
orb
rol
or
lcall
jnp
test
jl
sti
pop
inc
inc
aas
jecxz
lea
jae
int3
test
fidivs
xchg
push
cmpsl
push
loop
mov
and
add
daa
push
push
out
adc
xchg
mov
jb
or
movsl
fimull
ret
dec
fnsave
ret
dec
out
push
inc
adc
mov
xchg
nop
test
dec
orb
xor
rorb
xor
ficoms
cmp
mulb
addb
or
mov
mov
call
push
pop
mov
pop
or
xchg
cltd
andb
fisubs
in
and
pop
loop
jb
adc
push
popa
loope
out
bswap
dec
in
sub
sbb
jp
push
ljmp
lods
xchg
fstpt
jno
pushf
jl
inc
sbb
dec
cli
test
mov
pop
inc
mov
adc
xchg
mov
aam
addb
adc
push
fidivs
dec
cmp
stos
clc
mov
jecxz
xchg
lret
pop
mov
xlat
insl
repnz
sub
jno
xchg
in
push
sbb
cmp
mov
ret
movsl
test
in
pushf
insb
fisttps
sbb
mov
mov
mov
lds
lret
pop
fwait
or
add
les
testb
js
mov
mov
sbb
roll
sti
or
mov
ficompl
sbb
sbb
add
sub
insb
leave
jns
arpl
sub
sbb
sub
and
and
daa
jne
loop
adc
mull
stc
and
sarb
sarl
leave
mov
xlat
mov
ja
outsl
push
out
cmp
mov
frstor
cmpsb
fcomi
in
jne
dec
jb
jp
or
imul
hlt
push
out
fistl
imul
test
lret
pop
sbb
loopne
push
bound
push
push
push
fistl
fldt
xor
ss
mov
xchg
mov
xchg
mov
decl
jmp
push
loope
leave
cltd
icebp
mov
jno
ficoml
or
out
inc
pushf
jae
ss
mov
repnz
cwtl
sbb
insb
cs
les
out
insl
xchg
shlb
imul
push
js
push
lock
lcall
adc
mov
xchg
adc
sbb
push
ret
cmp
cmpsl
dec
cwtl
mov
mov
popa
nop
out
mov
test
xor
jp
orb
dec
mov
sub
test
mov
sub
rclb
push
enter
inc
mov
mov
jnp
pop
xchg
in
cmp
les
scas
xor
pop
mov
scas
jne
mov
xor
fnsave
movsb
add
mov
in
test
sbb
and
xor
lahf
ss
fucomp
movsb
push
in
lock
lock
sub
incl
sbb
popf
loopne
jo
test
xor
ret
add
scas
jmp
jne
add
enter
icebp
or
mul
pop
mov
sarb
fsubrl
ja
xor
jnp
insl
testb
or
lods
xor
mov
loope
imul
cmp
inc
inc
orl
fmul
aam
dec
ljmp
xchg
dec
push
push
jmp
cs
sbb
or
jns
mov
jle
stc
icebp
sbb
and
sbb
gs
pushf
push
in
stos
fiadds
insb
jle
in
or
mov
jmp
loope
push
and
cmpl
lcall
loop
rcrb
pop
mov
sub
stc
push
dec
jae
mov
aas
push
or
or
shlb
out
hlt
insl
test
cmpsb
pop
jecxz
sub
mov
pop
cltd
add
out
jo
push
imul
add
out
mov
cmp
dec
add
test
sub
inc
cli
cmp
testb
mov
scas
pop
fsts
xchg
loopne
ds
aam
jae
xor
jo
push
into
insl
inc
clc
daa
or
hlt
push
mov
dec
adc
and
lret
jge
and
notl
cli
sbb
add
add
lds
ja
push
dec
mov
cmp
xchg
hlt
push
jns
pop
mov
inc
ficomps
push
inc
lea
jmp
movsb
dec
inc
sub
fs
push
or
movsl
xchg
and
shlb
jecxz
jo
imul
jae
sbb
fs
pop
mov
pop
pop
mov
cld
cltd
imul
push
cmp
and
andb
insb
popf
lock
jns
jno,pt
sub
ja
xor
imul
fdivrl
add
stos
pop
mov
push
lock
sarl
push
test
mov
and
test
xchg
sar
outsl
daa
outsl
into
popa
pop
lock
cmp
fsubr
addr16
mov
mov
fs
insl
movsl
and
mov
adc
cmc
dec
lods
stc
stos
add
sbb
nop
fidivrl
dec
cmp
mov
rcrl
fwait
or
mov
push
mov
stc
ret
mov
lret
add
ja
sbb
enter
adc
pop
outsb
push
add
cmpl
ret
cmpsb
push
pop
pop
add
daa
pop
xchg
out
lods
and
mov
xchg
inc
jo
dec
adc
out
xchg
mov
lcall
mov
repnz
cmp
cmpl
gs
xchg
fidivl
orb
sbb
andb
or
ds
cwtl
dec
jge
cmpsl
mov
fwait
std
add
dec
int
sub
dec
pop
and
popa
ja
mov
fsubr
imul
pop
xchg
mov
push
sarl
jl
push
inc
sbb
push
or
or
inc
push
andb
jne
sbb
xchg
mov
xchg
jo
jmp
imul
mov
fimull
pop
cmp
les
scas
fbld
sbbl
push
mov
or
inc
pop
jg
mov
arpl
ds
jle
mov
mov
popf
cld
jne
dec
push
aam
cld
leave
pop
rcll
dec
jle
dec
jge
movl
cmp
insl
std
sbb
in
add
filds
cli
ret
popa
lods
repnz
jp
test
push
pusha
movsb
jmp
sbbl
hlt
jne
mov
jg
pop
mov
fwait
mov
sub
xchg
popl
ficoms
imul
mov
xchg
pushf
movsl
push
mov
sahf
test
xchg
inc
outsb
xchg
arpl
in
push
sub
or
jae
push
lods
jle
nop
xchg
in
popa
dec
jmp
lahf
push
mov
mov
jge
cmp
cmc
sbb
inc
jne
and
and
add
mov
mov
mov
stos
add
jnp
or
or
xchg
add
add
sbb
cmp
mov
testl
aad
pop
test
testb
inc
push
fiadds
or
lahf
fcmovnbe
add
mov
add
push
frstor
pop
adc
mov
loopne
xor
xchg
test
test
cmp
fdivr
push
xchg
mov
adc
data16
lea
decb
push
adc
int
jbe
adc
ret
pop
sub
mov
fimull
test
rol
lods
cltd
mov
sub
data16
lret
xor
cmc
add
aaa
xchg
popf
test
or
clc
jb
and
and
imul
sub
jo
sbb
scas
outsl
jmp
mov
cltd
data16
call
sub
ss
cmp
pop
push
and
sub
imull
xor
inc
pop
cmpsl
push
stc
cmp
lods
and
daa
outsl
movsl
cmpsb
mov
aad
lea
in
jle
inc
pushf
cltd
xchg
enter
aaa
jp
in
popa
orb
flds
inc
mov
lods
push
cli
sti
mov
aam
sti
dec
pop
loopne
test
mov
jp
adc
into
push
mov
test
sbb
sti
jno
or
aad
and
mov
sub
fwait
test
push
inc
push
mov
mov
cmp
insb
pop
dec
cmc
shlb
cmp
lds
mov
lcall
add
add
aaa
xor
lods
out
and
or
mov
mov
enter
dec
or
xor
jno
mov
sub
mov
mov
mov
sub
aaa
push
jns
out
lahf
mov
shr
out
in
push
fdivl
xor
push
sub
and
mov
cmpsl
btc
sub
cmp
stos
xor
sbb
push
push
add
pushf
push
xchg
sub
sub
pop
jb
lcall
in
mov
dec
int
cmp
jbe
jge
mov
dec
and
mov
add
stos
mov
adc
pop
mov
push
mov
jp
fists
in
out
repz
and
imul
mov
cmp
push
into
or
inc
inc
xlat
sub
xor
adc
loop
xchg
aas
and
jecxz
lods
fwait
test
xchg
pop
sub
and
and
dec
ficoml
pop
out
or
fs
in
loope
adc
pop
sub
cmp
mov
sbb
push
imul
push
adc
jecxz
add
and
lahf
into
mov
and
adc
add
jnp
mov
sub
sub
cmpsl
fistl
pop
lret
stos
cmpsl
std
mov
jae
jl
push
push
fldcw
and
dec
sti
icebp
inc
push
push
mov
pop
enter
xor
fnsave
fisubs
ret
lock
push
mov
insl
jne
out
pushf
xlat
push
scas
pop
sbb
mov
lret
js
mov
jno
cmpsl
sub
lret
gs
imul
xchg
call
push
adc
pop
cmp
inc
sub
xchg
mov
mov
aam
idivl
mov
add
lfs
out
ds
mov
sub
sti
inc
loop
push
fildll
inc
mov
pop
lea
dec
cmp
jecxz
repnz
jmp
test
sub
pop
pop
jns
movsl
mov
xchg
inc
dec
in
pop
sub
mov
movsb
outsl
imul
inc
sbb
lock
out
sbb
fstpl
mov
fcoml
data16
lcall
outsb
outsb
cld
mov
repz
xorl
add
jo
clc
loop
repnz
pop
ret
jno
mov
jl
test
sub
dec
ds
mov
xor
in
jno
ds
cmp
subb
adc
xchg
sub
mov
sbbl
movsl
mov
xchg
cmpb
push
xchg
lea
stos
lret
xchg
inc
inc
std
lcall
cmpsl
ds
insb
mov
and
mov
mov
sahf
ret
inc
jmp
fnstcw
and
scas
sbb
cmc
icebp
iret
int
dec
sub
sub
xchg
clc
fldt
xchg
or
mov
push
push
or
dec
rcrb
push
mov
jmp
in
scas
mov
outsb
daa
jl
loope
call
mov
adc
loopne
ja
push
sbb
xchg
call
arpl
or
ret
dec
sub
inc
hlt
pop
mov
jg
push
popf
pop
outsl
push
jmp
cwtl
stos
xor
xor
vmovups
popf
stos
xor
jb
pop
iret
dec
mov
sub
or
push
js
inc
sbb
das
jb
mov
aaa
inc
popf
mov
dec
dec
xchg
or
lds
roll
je
in
fists
test
shlb
lretw
cli
cmpsb
or
in
push
lcall
adc
into
mov
scas
xor
shr
psllq
lock
dec
jge
lock
mov
sbb
inc
fidivl
stos
xor
enter
mov
mov
mov
sti
xchg
inc
in
push
mov
mov
pop
movsb
std
ds
mov
dec
xor
fstpl
repz
pop
data16
sbb
push
scas
mov
divl
xor
in
mov
dec
ja
mov
test
push
jbe
mov
ret
sbb
rorb
mov
add
lret
into
mov
fwait
imul
out
gs
dec
jecxz
add
inc
sub
enter
fnstenv
or
mov
jns
cmpsl
std
pop
pop
test
stos
movsb
lock
jae
lea
ds
je
aad
stc
jl
add
pop
sbb
adc
loope
ds
rorl
out
pop
or
inc
mov
lds
mov
pop
and
mov
shlb
pop
adc
xchg
sbb
push
xor
testb
sub
iret
mov
cmpsb
and
inc
mov
xchg
jg
scas
out
mov
adc
lcall
andb
add
mov
ljmp
adc
loope
mov
movsb
adc
out
fistpl
lahf
xor
pop
xor
xchg
js
dec
jl
sub
dec
sub
cmp
aam
data16
jecxz
pushf
mov
sbb
mov
mov
ret
cmp
dec
dec
in
push
mov
loop
add
xchg
mov
inc
mov
lret
mov
xchg
dec
insb
lcall
jb
inc
jns
inc
iret
sub
std
xchg
mov
call
icebp
shlb
mov
pop
daa
in
into
mov
push
mov
cmp
inc
mov
sbb
cwtl
jle
mov
add
pop
ret
mov
sahf
mov
aas
es
fisttpl
push
or
mov
arpl
jbe
int3
pop
cwtl
mov
cld
int
in
jns
loope
bndldx
sub
scas
adc
lods
and
lods
mov
das
adcb
scas
in
sub
cwtl
imul
stos
mov
in
ja
cmpsl
xor
mov
xchg
in
or
je
jge
cmp
ss
jnp
ret
jp
movl
xchg
jg
adc
lods
popa
add
lds
mov
adc
repnz
sbb
cmpsl
popa
fldenv
pushf
jno
dec
adc
inc
repz
test
rcrl
mov
int3
out
shrl
cmp
mov
pushf
adc
mov
stos
in
mov
adc
inc
jnp
in
push
mov
clc
cwtl
pop
lret
push
fwait
sbb
pop
js
stos
mov
push
mov
cld
and
jne
sbb
in
gs
pop
mov
push
push
ficoml
push
jnp
popf
jno
dec
fdivs
sbb
adc
and
adc
in
stos
arpl
xor
mov
in
dec
mov
repnz
popa
adc
and
xlat
push
insl
push
pop
imul
and
std
aad
lahf
ficomps
pusha
or
nop
dec
add
dec
pusha
out
std
mov
es
mov
pop
jmp
mov
mov
std
subl
lea
addr16
xchg
sub
fildll
adc
or
ds
pop
mov
or
stos
or
xor
mov
das
add
sub
dec
data16
je
hlt
sahf
sbb
xchg
pop
mov
out
or
icebp
sbb
xchg
sbb
xchg
inc
js
push
lea
or
push
mov
xchg
jo
stos
call
cmp
inc
push
shlw
lock
dec
push
and
cmpsb
sub
sub
push
mov
jecxz
stos
or
inc
or
testl
cmp
sbb
movsl
lret
jl
out
inc
push
cs
mov
mov
or
xor
xor
stc
push
rcr
mov
loopne
and
daa
pop
xchg
cmp
lahf
mov
loopne
pop
lret
sub
and
mov
arpl
dec
mov
mov
mov
or
ds
popf
out
inc
les
fistpll
xchg
xor
dec
inc
shl
xchg
jl
mov
or
adcb
sbb
sub
mov
push
fcmove
mov
mov
outsb
stos
xor
and
adc
pop
outsl
js
scas
fildl
in
sbb
cmp
fwait
cmp
and
add
arpl
adc
fistpll
cmp
pop
js
enter
pop
fwait
sbb
icebp
inc
push
and
mov
sub
mov
dec
fsubp
hlt
mov
dec
pop
xchg
mov
sub
icebp
or
cli
fcmovnbe
aam
add
sub
lcall
mov
ret
loope
and
dec
xor
rorb
dec
fidivrs
jle
ret
push
aaa
insb
add
es
push
imul
cwtl
fcompl
jge
ljmp
push
fcmovnbe
cmpl
xchg
push
inc
xorb
inc
xchg
rcr
in
push
jg
adc
inc
cmp
stos
jb
lock
sub
out
xor
insl
xchg
fwait
xchg
and
inc
das
xor
clc
pop
stos
xor
fbstp
push
enter
punpckhwd
scas
xlat
xchg
leave
mov
sbb
xchg
ljmp
addr16
inc
lods
data16
imul
test
and
push
jae
ret
popf
pop
fsubs
aas
mov
mov
inc
push
fwait
xor
clc
jns
mov
mov
adc
js
dec
and
sub
jb
bound
xchg
call
mov
mov
adc
js
dec
and
sub
jb
bound
xchg
call
mov
mov
push
push
es
push
sub
jbe
push
sbb
enter
test
mov
adc
rcrb
mov
popf
out
pop
jae
inc
jnp
imul
ja
jecxz
repz
sar
mov
mov
jae
inc
jnp
imul
xor
add
adc
xlat
repz
mov
jmp
xchg
stos
arpl
push
inc
arpl
and
xor
add
adc
jecxz
repz
rcl
jmp
pop
jae
nopl
or
rcll
lret
and
bound
lock
incl
add
inc
sbb
ss
inc
ss
cmp
imul
les
xchg
and
xor
pop
sti
dec
aad
dec
imul
jb
dec
dec
xor
nop
mov
jbe
adc
jae,pt
add
jae
arpl
sbb
dec
adc
ret
inc
cmpsl
loopne
xchg
inc
cltd
mov
adc
jle
xor
inc
mov
xchg
add
push
lock
fistpl
fwait
movsb
jae
leave
adc
ret
xchg
sti
scas
sti
cmp
jnp
mov
mov
xlat
mov
imul
jae
inc
bound
and
xor
add
adc
jecxz
repz
loop
repnz
mov
aaa
cmp
push
sbb
push
push
jbe
mov
mov
decl
cmp
xor
aaa
or
add
sbb
add
sbb
sahf
mov
call
fmull
and
jae
bound
xor
add
adc
jecxz
repz
ret
sti
shr
mov
mov
jae
inc
jnp
imul
xor
add
adc
jecxz
repz
ret
sti
shr
mov
mov
jbe
into
cld
add
nop
cmp
hlt
inc
stos
aaa
inc
jecxz
mov
popf
divb
aad
jge
and
cmpsl
xor
cmp
test
inc
sub
mov
ja
push
fidivrl
test
mov
outsb
mov
data16
jae
push
enter
jg
adc
jbe
loop
mov
loope
xor
cmp
or
dec
cmp
jo
lea
stc
sub
fst
pop
mov
push
orl
iret
pop
jnp
mov
pop
and
push
aad
adc
mov
or
pop
dec
mov
push
cmp
loope
mov
sub
lret
popa
int3
sbb
pop
mov
cltd
cltd
enter
jo
xchg
sti
int
sub
aad
icebp
data16
and
push
sahf
jg
lds
pop
test
add
push
test
dec
imul
xor
or
jno
mov
fisubrs
or
lret
sub
xchg
and
or
xor
movsb
and
repz
stos
out
cmp
push
fsts
add
push
test
scas
jne
jne
dec
call
xchg
push
sbb
mov
ficompl
test
sbbl
arpl
add
enter
out
fnstcw
lcall
cld
push
mov
daa
ret
stc
jl
es
test
dec
push
adc
xchg
sar
mov
push
aaa
popf
int
push
sarl
shll
insb
sbb
dec
imul
sti
fistl
nop
les
sbb
jg
fldt
mov
out
sbb
cmpsl
push
fsubrl
ret
jle
sub
add
xchg
loop
fnstenv
mov
and
push
mulb
xor
popf
xchg
bound
pop
ret
push
mov
daa
in
aam
lcall
mov
sub
in
jmp
mov
jbe
lods
sbb
loop
mov
repz
in
jns
mov
or
shll
testb
loopne
sysenter
pushf
cltd
or
cli
pop
cmc
lds
mov
sahf
shl
sbb
iret
inc
ss
ds
aam
popa
fcmovne
pusha
test
std
aad
xchg
bound
fptan
push
mov
jl
rclb
pusha
cltd
mov
jne
hlt
adc
repz
sbbb
negb
push
gs
mov
out
pop
sahf
cmpsl
xor
js
nop
aaa
sub
or
jbe
push
sbbl
pop
fisttps
pop
sub
loop
pop
sbb
jnp
mov
rcll
xlat
xor
divl
ret
pop
out
loop
pop
or
and
idivb
pushf
int3
jmp
test
xchg
add
gs
shrb
aad
jp
aam
dec
push
jp
add
xchg
cmpsb
shlb
js
daa
sbbb
xlat
fcom
cld
push
lods
lock
loopne
fwait
jae
jnp
fisttpll
loope
mov
mov
push
lret
push
adc
mov
mov
jno
sub
test
and
add
loop
sbb
fbld
fdiv
std
mov
mov
cmc
pop
out
sub
aaa
or
or
out
mov
test
fmul
fildl
mov
xchg
lods
movsb
mov
int
or
jno
xor
mov
add
jnp
ret
andb
rcrb
mov
push
or
push
les
test
mov
jl
imul
mov
mov
lea
sbb
push
les
mov
out
mov
stos
cld
into
outsb
add
shll
xor
jnp
jnp
mov
sub
pop
inc
clc
push
ja
test
sbb
adc
dec
insb
pushf
mov
imul
bound
nop
clc
jmp
and
mov
add
jo
aad
mov
inc
and
mov
sub
out
imul
xor
je
daa
jge
inc
xchg
hlt
dec
insl
pop
je
lret
jl
push
mov
cltd
inc
testl
repz
aas
mov
jnp
icebp
sub
jns
add
lahf
stos
pop
into
jbe
insl
mov
jns
shlb
xor
popf
mov
ja
mov
or
pop
push
sbb
xchg
popl
and
mov
mov
outsl
stc
rorb
or
xchg
mov
push
stc
enter
stc
add
sti
ret
or
movsb
mov
imul
jge
loope
imul
add
adc
test
repnz
add
xchg
adc
mov
push
adc
add
lret
pop
mov
push
dec
es
xchg
ficoml
insb
dec
mov
mov
decl
mov
and
adc
mov
mov
fchs
pop
mov
popf
fcoms
cmp
cmp
dec
test
xchg
cld
mov
xor
insl
push
jecxz
jo
movsb
pop
dec
loop
inc
mov
jo
fnsave
xor
inc
or
dec
mov
aam
les
inc
adc
insl
jle
mov
and
je
scas
ds
adc
push
inc
movsb
call
out
or
mov
push
mov
push
lahf
xchg
int3
ljmp
subl
and
js
popa
push
add
sbb
sub
mov
daa
pop
das
jne
test
pusha
push
jl
xchg
inc
fcomps
icebp
fimull
ffree
lahf
jo
pop
mov
mov
gs
sbb
sbb
cmpl
mov
push
mov
imull
or
icebp
in
in
ret
rcll
lods
or
cmp
add
dec
ds
ds
daa
int
jo
hlt
jecxz
int
push
mov
and
dec
jp
frstor
sub
cmp
daa
lret
cltd
into
mov
and
mov
or
mov
cwtl
inc
pop
xchg
outsb
arpl
pusha
out
clc
xchg
mov
jle
mov
dec
aad
cmpb
mov
mov
mov
xor
fwait
cwtl
adc
outsb
aas
jmp
jne
rol
or
push
add
xchg
popf
xchg
add
out
cld
pop
shll
add
push
pop
xor
jle
mov
sti
shll
mov
push
push
mov
mov
cwtl
cmp
into
dec
nop
jp
lods
rcrl
in
call
in
or
or
insl
jmp
cmp
addr16
nop
and
ret
push
fs
sub
mov
dec
lods
lcall
aad
or
cmp
mov
adc
jecxz
divb
cld
cltd
mov
stc
and
out
xor
jge
lods
xchg
jb
xchg
fldt
cld
mov
adc
dec
sub
sub
mov
out
imul
sub
out
addr16
cmc
add
movaps
push
gs
push
pop
fbstp
inc
cmc
xor
inc
popa
sub
rolb
rdmsr
sti
into
test
cmpsb
fisttpl
jb
pop
leave
ja
scas
push
cltd
xor
cmpl
mov
sub
jl
stos
lds
dec
insb
mov
dec
shr
ljmp
or
mov
xlat
lahf
adc
adc
inc
push
sbb
cmc
mov
xor
aas
repz
sub
fidivrs
fs
loop
sub
repz
mov
movsb
and
mov
adc
pop
aaa
pop
stc
inc
mov
cmpb
ret
inc
push
sub
dec
push
add
shlb
inc
cmp
imul
arpl
mov
popa
into
test
lcall
pushf
cmp
add
xchg
negl
cmp
push
int3
mov
cli
lock
jnp
shrb
mov
aad
pushf
mov
shl
mov
scas
in
sub
test
dec
jne
adc
fiadds
orl
add
sbb
cmp
xchg
es
cmp
scas
jl
stos
pop
sbb
or
lahf
or
in
dec
sti
sub
mov
cmp
pop
mov
and
mov
dec
mov
popf
stos
pop
push
dec
mov
pop
movsb
repz
cmp
cmp
dec
lds
je
sbb
lcall
sti
insb
jbe
and
mov
jg
mov
pop
or
mov
mov
fdivs
aas
cmc
addb
pop
mov
in
push
fadd
cmc
jne
adc
and
mov
dec
cmpsb
fwait
pushw
call
shl
jnp
push
cli
mov
xchg
xchg
xor
ret
nop
and
imul
movsb
sub
or
mov
test
dec
lcall
xchg
push
mov
fs
fidivrs
stos
xlat
dec
loope
mov
inc
subb
sarl
sbb
inc
iret
orb
sub
xchg
mov
xchg
jmp
or
scas
in
mov
addl
orl
jp
loope
or
cmc
into
sub
mov
lahf
pop
out
add
mov
repnz
push
ror
in
add
outsl
mov
add
rcrl
aad
in
ja
adcl
jmp
xchg
cmp
xor
scas
repnz
lods
lcall
repz
sub
mov
cmp
loop
cs
mov
addr16
lret
cmp
xor
pop
imul
jnp
cmpsl
in
and
xchg
mov
sbb
subl
inc
movsl
jmp
cmp
pushf
ret
hlt
mov
addl
arpl
sbb
cmp
pushf
loop
out
sub
shr
dec
and
jns
and
adc
sbb
mov
cmp
xor
sti
push
add
xchg
and
lcall
xor
ss
mov
adc
cmp
lcall
xchg
cmpsl
or
dec
lock
test
sbb
mov
cltd
lahf
sbb
addb
mov
xchg
xchg
enter
mov
cmp
xor
xor
mov
mov
scas
mov
je
mov
jmp
xor
in
inc
arpl
and
cld
out
inc
xor
stc
lret
lea
adc
imul
fwait
repz
out
rcrb
das
movsb
outsl
dec
and
xor
vmovntpd
call
cmp
push
mov
jle
pop
adc
fwait
test
push
pusha
jae
aas
xchg
ss
pop
lret
and
push
loopne
xchg
std
bound
lcall
pop
jle
cmp
mov
cmpsb
lods
mov
add
xchg
test
imul
jne
and
ja
ja
cmp
sub
mov
mov
movsb
xlat
pop
test
loopne
out
shrl
pop
fstpl
out
sbb
add
mov
out
jae
xchg
icebp
mov
lea
mov
adc
fwait
stos
inc
loope
imulb
xor
sbb
in
cld
je
int
cmp
inc
stos
mov
jae
aad
je
mov
cld
fnstenv
ret
add
pop
xor
cmp
fmuls
stc
xchg
sub
adc
ja
mov
not
and
jmp
pushf
sub
imul
fst
jge
adc
ret
xchg
sub
fsts
add
xorl
in
push
into
sub
test
mov
xor
push
into
stos
jo
push
push
sub
push
shrl
loopne
out
jne
pop
jb
fs
fidivs
fstpl
mov
jmp
or
jae
int
jl
addb
mov
xor
sbb
cltd
loope
add
xchg
int
adc
imul
xlat
inc
cmpsb
in
int
dec
push
ret
and
inc
jge
call
jns
subl
lcall
std
std
jg
loopne
lds
sub
stos
xor
sbb
popa
imul
inc
dec
add
popf
scas
push
sbb
or
outsb
or
movsb
inc
mov
pusha
cmp
dec
test
jns
js
das
and
fwait
mov
inc
or
mov
add
mov
js
mov
add
mov
das
repnz
sti
xchg
je
xchg
mov
xchg
lods
mov
xor
imul
popf
mov
mov
lret
into
mov
xchg
dec
cmpsl
clc
mov
mov
xchg
dec
arpl
ss
pusha
test
mov
and
sub
mov
cmp
mov
fiaddl
add
in
sbb
and
push
sbb
fwait
test
mov
subl
sbb
lahf
xchg
mov
mov
pop
push
mov
mov
xor
mov
outsb
addr16
mov
inc
cmpl
pop
pop
aaa
mov
xlat
fiadds
pop
leave
inc
fwait
cwtl
mov
out
mov
popa
aam
sub
push
mov
int3
mov
shl
xor
popf
in
dec
inc
test
insl
inc
shll
mov
add
or
daa
or
out
icebp
inc
shlb
fisubs
inc
cmp
xor
pop
dec
mov
inc
push
fwait
xor
aad
cmpsl
sbb
sub
fwait
or
sub
mov
inc
loop
add
jns
adc
push
imul
les
mov
push
in
call
jmp
or
cmpsb
dec
add
fsts
mov
push
les
jg
pop
mov
push
dec
out
fsubrl
xlat
cmpsl
loopne
jo
sti
sahf
popf
xchg
xor
js
nop
inc
gs
adc
or
out
mov
push
xor
fists
gs
mov
inc
rol
mov
dec
jp
pop
push
iret
inc
jp
pop
movsl
lock
lahf
cmc
sub
fisubrl
fbstp
jle
cwtl
not
sub
imul
xchg
leave
mov
stos
ret
sub
add
lret
dec
cmp
dec
ss
add
xlat
adc
test
inc
lahf
lods
fimull
rolb
aam
fwait
bound
push
enter
scas
lcall
sbb
adc
lods
cld
mov
jge
pop
pop
xor
test
lahf
hlt
je
sbb
cltd
xchg
fldl
fistl
shll
enter
push
arpl
cmp
movsl
xchg
idivb
mov
in
lds
pusha
orb
out
jb
lret
out
xor
cld
mov
jg
push
push
xor
stos
lret
repnz
add
dec
repz
shl
clc
in
shl
outsb
fcoms
xchg
lcall
stc
aam
mov
inc
dec
aam
jl
fs
sbb
pop
test
jle
sbb
insl
test
gs
loope
and
jge
dec
in
sbb
push
mov
enter
and
adc
test
jbe
xor
fnsave
cli
jle
stos
adc
mov
fldcw
mov
or
popf
dec
sub
out
inc
xchg
sbb
mulb
mov
dec
dec
in
dec
push
mov
repnz
push
add
cmp
out
inc
sub
pop
cmc
std
and
mov
jbe
jnp
push
sarl
adc
mov
and
outsb
fdiv
push
arpl
subb
je
popf
clc
fsts
mov
stc
leave
push
pop
or
mov
psrlw
mov
push
or
inc
mov
popa
inc
pop
cli
dec
cmp
in
xchg
adc
bound
pop
leave
mov
into
push
push
mov
cwtl
adc
mov
lret
lret
push
push
mov
push
hlt
test
outsl
lahf
es
pop
clc
push
inc
xor
cwtl
cmp
je
bound
sbb
mov
mov
jne
push
mov
cmp
inc
cmp
push
cwtl
pop
call
popf
dec
not
or
out
sbbl
or
xor
ljmp
sbb
fcomps
dec
xchg
pop
sbb
and
sti
xor
add
xlat
test
gs
pop
sbb
int
ror
lcall
outsb
inc
repz
inc
in
push
xor
movsb
mov
lds
pop
push
jg
pop
hlt
and
or
clc
subl
cmp
sub
xchg
negl
add
popf
pop
es
xchg
or
pop
dec
negb
mov
lods
mov
aam
mov
gs
jae
test
sub
add
adc
mov
cmpl
mov
fwait
sbb
aam
xor
test
negl
sub
insl
shll
iret
push
mov
mov
std
or
stos
mov
in
daa
cld
arpl
and
and
pop
out
adc
loopne
push
push
or
lahf
sbb
pop
fs
push
repnz
sub
push
insb
leave
je
faddl
iret
les
fwait
add
mov
jge
xchg
xlat
xor
inc
mov
das
pop
xlat
cld
insl
lods
mov
and
stc
in
pop
inc
mov
cmp
orl
mov
inc
adc
cmp
push
dec
scas
dec
or
add
lahf
sub
adc
cld
mov
xor
sbb
jno
lock
adc
sbb
cmpsl
fisttpll
xlat
test
fsts
pop
sbb
xor
sbb
and
aas
sbb
cmp
mov
clc
in
sub
mov
and
and
jmp
rorb
mov
cmp
stc
inc
jp
mov
pushl
push
out
outsb
add
rclb
ffreep
data16
jne
rcl
jge
pop
pop
fwait
mov
test
xor
mov
les
int
jb
ljmp
pop
hlt
mov
out
xor
pop
sub
pop
movsb
shlb
fucom
sbbl
sbb
lcall
cli
inc
jmp
xor
xlat
push
popf
jnp
pushf
lock
xchg
pop
outsl
or
dec
mov
outsl
addb
jecxz
stos
dec
les
ds
into
cli
cmc
aam
adc
jmp
or
into
pop
ljmp
std
mov
aam
aam
pop
inc
xor
xor
dec
std
and
lods
cltd
cmpsl
mov
dec
jnp
pop
inc
jg
repz
imul
add
aas
push
or
and
push
pop
int
shrl
pop
data16
fistpll
cld
cs
inc
fsub
adc
lahf
inc
pusha
add
notb
pop
xor
mov
xchg
jmp
or
sar
xlat
js
sarl
fstps
dec
dec
sub
push
or
test
aam
stc
push
loop
lcall
mov
push
cmp
mov
call
nop
cmc
pop
lcall
dec
xor
mov
int
push
icebp
subl
or
push
fs
mov
stos
xor
and
aas
stos
jno
inc
fs
pop
dec
inc
fldenv
iret
adc
cmpsb
popl
movsl
push
int3
push
mov
les
jns
mov
adc
dec
lahf
mov
outsl
mov
xchg
pop
shr
enter
cmp
jg
mulb
cmp
jo
incb
mov
adc
fdivp
jb
mov
jl
pop
pop
jl
orl
mov
add
mov
iret
out
rcrl
dec
out
negl
pop
sub
xlat
sbb
add
fisttpll
push
sbb
push
das
fs
cmp
fisttps
lock
arpl
sbb
push
xchg
lods
jecxz
mov
lods
and
flds
or
sub
sbb
sbb
ret
and
cs
hlt
dec
and
pusha
test
add
stc
xchg
mov
adc
repnz
stos
in
fistpl
push
popf
shlb
scas
pop
insl
xor
or
scas
jae
std
xor
repnz
and
fs
mov
imul
loop
mov
adc
xchg
xor
add
inc
jl
cltd
cmp
mov
pushf
fisubrs
imul
push
jnp
stos
pop
fwait
lock
pop
pop
adcb
mov
rcr
fdivs
add
xlat
jmp
xchg
xchg
hlt
adc
fisubrl
ret
and
push
aas
imul
mov
daa
push
adc
cmp
dec
mov
sbb
hlt
std
add
sub
lcall
out
add
cmp
gs
sbb
lahf
scas
sbb
push
fwait
fs
push
outsb
xor
cltd
outsb
stos
lods
popa
outsl
fwait
dec
dec
gs
scas
sub
cmp
in
xor
cwtl
in
xlat
mov
xchg
cmc
jns
bound
push
cmp
mov
bound
xchg
test
sbb
cs
adc
mov
frstor
mov
xor
jle
jns
push
and
repnz
push
jb
iret
cli
ja
xorl
xchg
sbb
jnp
out
add
inc
mov
subl
sub
inc
outsb
or
ret
jb
js
sub
and
add
xor
dec
add
push
imul
xor
add
adc
jecxz
repz
ret
sti
shr
mov
mov
jae
inc
jnp
imul
xor
add
adc
jecxz
repz
ret
sti
shr
mov
mov
jae
inc
jnp
imul
xor
add
adc
jecxz
repz
ret
sti
shr
mov
mov
jb
inc
jg
imul
xor
add
adc
jecxz
repz
imul
cmp
jl
insb
aam
inc
sub
popa
or
push
sbb
jb
xor
loope
icebp
sti
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
cmp
lret
mov
inc
sub
popa
or
add
pop
and
mov
xchg
mov
sti
roll
fs
dec
and
mov
loopne
push
and
test
loope
cmpsb
mov
sub
js
dec
mov
mov
mov
inc
jl
mov
loope
lock
ljmp
push
and
lock
push
lcall
ljmp
fwait
in
xor
pop
lret
mov
mov
or
add
fmulp
dec
popa
ss
loope
add
stos
rcrl
nop
fmul
lods
sti
mov
mov
add
fcomp
push
addr16
test
rcrb
sbb
adc
mov
aam
fsubs
add
lret
ljmp
fs
icebp
stos
jle
gs
mov
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
sti
sub
idivl
pop
xorb
aaa
jnp
sbb
inc
dec
inc
mov
repz
cli
in
jmp
mov
add
jle
addr16
cs
and
xor
test
mov
cli
out
test
mov
mov
and
aaa
insl
imul
and
mov
loope
icebp
sti
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
sti
sub
mov
inc
push
inc
xchg
imul
int3
fcomps
mov
scas
lcall
imul
std
add
sarl
fcomps
pushf
mov
addr16
cmp
xchg
cld
jo
push
outsl
or
push
inc
or
jg
mov
mov
sub
jne
mov
push
or
mov
rorl
cmp
test
insl
cmpsl
mov
lret
cmpsl
enter
sub
adc
insb
outsl
enter
xlat
sub
xchg
dec
stc
mov
and
out
iret
movsl
sbb
and
push
nop
jne
mov
pop
and
out
add
xchg
loopne
and
jmp
push
jge
fwait
aas
imul
imul
fsubl
nop
sbb
push
mov
pop
xor
lret
arpl
andl
inc
fiaddl
stos
popa
jge
leave
adc
scas
or
rcrb
loop
mov
rclb
xor
inc
mov
subl
test
insb
xor
outsb
sub
inc
xchg
jecxz
loope
xorl
sahf
or
adc
add
leave
cltd
jecxz
add
ss
dec
cs
mov
sbb
jns
and
fwait
lcall
arpl
sahf
xor
and
insl
push
aaa
xor
fidivrs
ror
cmp
pop
xchg
nop
xor
shll
and
sbb
sti
mov
rol
add
lods
movsl
scas
jp
in
fbld
icebp
das
inc
popf
push
das
movb
adc
sahf
mov
mov
fstl
or
aas
dec
mov
xlat
decl
jno
mov
mov
gs
pop
push
push
add
inc
pop
lret
test
jp
fdivrp
mov
mov
stos
sbb
in
imul
test
mov
pop
cmp
enter
in
jae
cmp
imul
add
sti
loope
sub
shrb
jmp
sub
outsb
sub
inc
mov
cmp
xlat
sbbl
mov
xor
fwait
sbb
mov
sub
fwait
int3
sbb
push
xor
iret
pop
sbb
jl
enter
jbe
outsb
add
lahf
or
outsb
mov
lahf
addr16
adc
adc
mov
mov
rcl
jb
adc
inc
jbe
jle
mov
mov
repnz
jg
imul
or
clc
imul
mov
sbb
cmc
pop
or
arpl
inc
aam
mov
cmp
pusha
in
mov
add
mov
out
push
xchg
fwait
pushl
jbe
mov
aas
sbb
mov
shll
int
adcl
mov
scas
mov
stc
sub
sbb
pop
push
xchg
faddl
cltd
jmp
fnstcw
dec
push
add
inc
pop
pop
jmp
mov
mov
dec
jmp
or
lds
pop
pop
jno
sti
ficoml
adc
adc
xor
lea
scas
xor
and
lea
out
adc
insb
shrb
and
fs
in
subb
xchg
jne
mov
in
lods
imul
add
imul
aas
sbb
dec
in
pop
inc
pushf
mov
mov
lahf
sub
pop
jmp
out
rep
jecxz
je
sbb
sbb
stos
mov
xchg
or
jge
mov
adc
test
scas
leave
or
sub
xor
mov
push
cmp
cmp
loope
lret
xchg
pop
data16
pushf
sbb
sti
mov
and
pop
dec
mulb
arpl
jle
data16
enter
insb
cmp
sub
jae
xor
lcall
pop
ss
sub
or
mov
test
aaa
gs
add
lods
mov
movsb
inc
jns
mov
jo
xchg
xchg
pop
adcb
mov
dec
fcmovb
push
loopne
jb
clc
push
mov
mov
js
jne
xor
and
into
or
and
jg
inc
inc
in
cld
or
pop
fsubl
sbb
xchg
data16
xor
leave
cwtl
fistl
imul
lods
sarl
sbb
aas
rcl
mov
ret
mov
xchg
test
ret
ret
ficoml
popf
jns
jp
lea
ret
ficompl
xchg
imul
pop
mov
mov
fcomps
outsl
sbb
stos
dec
push
cmp
movsl
sbb
pop
lret
fstpl
pop
and
adc
mov
sbb
push
test
push
inc
adc
ds
bound
cmpsl
cltd
xor
sti
pop
sub
mov
adc
sub
orl
cmp
sub
mov
or
cmc
sub
fcompl
jle
and
pop
mov
lahf
mov
jge
jecxz
sub
pabsb
add
mov
movsl
test
mov
push
stc
xor
push
aad
insl
and
test
xor
in
pop
orl
push
stos
fstpt
xor
in
add
cmpsl
add
nopl
cld
xchg
int
xor
clc
add
movsl
inc
xor
pop
into
test
mov
sub
jbe
or
jbe
push
inc
jl
xchg
mov
ret
inc
test
jmp
jg
mov
sub
call
jne
fisubrs
xchg
sar
cmp
jb
pop
add
mov
test
adc
out
add
jno
adcl
lods
neg
inc
adc
xchg
xchg
xchg
sbb
iret
dec
aas
xchg
leave
mov
lods
push
inc
push
push
cmp
popf
cwtl
movsl
stos
adc
ret
repnz
js
jecxz
out
dec
lcall
out
pop
jbe
jp
mov
or
out
fsubrs
mov
jb
test
mov
insb
inc
pop
loope
mov
xchg
mov
shl
or
push
or
push
dec
jl
mov
xchg
addl
dec
addr16
adc
fidivl
int3
xchg
jae
scas
je
mov
ret
mov
or
out
xor
mov
dec
clc
inc
add
and
push
mov
cmp
stc
mov
in
das
mov
or
mov
sti
push
dec
mov
sbb
or
ljmp
or
mov
mov
rolb
cmpsl
sbb
xchg
stos
xchg
nop
ss
hlt
push
push
jmp
add
es
dec
jnp
jbe
cmpsb
and
enter
scas
rorb
dec
fadd
pushf
fimuls
fisubs
addr16
aas
rcrl
inc
mov
xchg
add
mov
inc
insl
shrl
loop
jne
pop
clc
movb
dec
pop
jmp
xor
sbb
push
mov
or
repnz
pop
ret
fwait
sti
ja
add
ret
mov
pusha
dec
cmp
jge
sbb
scas
int
lcall
xchg
outsl
xchg
xchg
out
and
xor
mov
cmp
aaa
arpl
ss
add
mov
xor
pop
cwtl
mov
shlb
call
loope
inc
jae
outsb
mov
inc
jo
adc
inc
es
jecxz
or
shlb
mov
sbb
push
cmp
movsb
cmp
cld
pop
or
std
push
incb
jecxz
cmc
fisttps
ficomps
adc
jp
hlt
and
jmp
adc
out
mov
or
jg
xchg
inc
mov
adc
rorb
push
fistpl
inc
jnp
lret
lret
mov
daa
movsb
pop
push
test
xor
stos
in
aaa
lods
outsl
jp
pop
leave
jecxz
nop
inc
mov
jbe
mov
jmp
mov
mov
pop
cmpsl
push
push
je
mov
or
leave
push
sbb
out
cmp
dec
push
fmul
fsubs
sbb
test
cli
repz
jns
stc
fsubl
ja
jae
inc
or
mov
inc
es
inc
mov
cmp
lea
jp
jl
fidivrl
xchg
sti
ret
out
add
jl
ret
js
ret
iret
inc
lods
ret
out
jecxz
and
xchg
lret
es
jne
sub
add
xchg
fdivr
icebp
xor
dec
test
lea
stos
jae
pop
lret
addr16
and
mov
jnp
mov
mov
dec
imul
mov
jmp
shlb
sbbl
mov
mov
mov
adc
mov
fdivl
fcomip
push
out
xlat
sbb
push
dec
fistpl
xchg
sahf
cld
insl
pop
xor
por
push
or
mov
test
and
scas
xchg
sub
out
iret
mov
mov
test
sbb
stc
xor
cld
insb
fwait
sti
pop
out
ss
push
pop
js
cli
jecxz
aas
jns
cmp
aad
fmull
mov
pop
test
push
loope
pop
pop
ja
fadds
scas
mov
and
sub
mov
xor
sub
xlat
pop
pop
cmp
pop
sbb
js
out
sub
adc
adc
mov
mov
mov
dec
testl
lock
rcrl
pop
rclb
movsl
sub
mov
cltd
pop
imul
fnsave
xchg
ret
add
dec
add
lcall
and
cwtl
vmwrite
push
bnd
ret
bound
aam
mov
jns,pn
iret
into
in
push
mov
sti
mov
mov
imul
cmp
push
imul
or
pop
cmc
mov
inc
or
mov
loope
xlat
cs
insb
pop
loop
pop
mov
mov
sti
dec
lcall
xchg
dec
fcompl
aad
addb
rcrb
or
and
ja
in
pop
add
jl
xor
fisubrl
mov
jmp
pop
shll
aad
ret
push
test
out
or
inc
stos
xchg
and
sbb
loopne
cs
frstor
mov
popa
filds
loop
lods
xor
xchg
movsb
xor
sbb
js
in
jp
icebp
xor
xor
fstpl
mov
popa
ret
mov
loope
cmp
mov
into
scas
push
and
fcompl
sbbl
ret
mov
xor
testb
inc
cmp
jl
fisttpl
inc
jns
mul
mov
in
sub
mov
leave
std
loopne
inc
movsl
inc
add
add
cmp
or
sub
sahf
leave
fs
cmp
jns
mov
scas
in
pop
test
sarl
dec
insl
dec
adc
aad
jecxz
ret
arpl
stc
xchg
scas
iret
clts
cwtl
nop
inc
outsl
sbb
fnstenv
mov
std
push
lods
sbbb
and
pop
loope
add
mov
mov
scas
int3
jecxz
add
loop
xchg
cli
ja
jl
mov
pop
js
jnp
lret
push
pop
inc
loope
andb
int3
pop
pop
xchg
inc
repz
adc
aas
push
fistps
push
out
pop
push
pop
sbb
in
je
cli
adc
jbe
xor
inc
adc
insb
and
sbbl
mov
jae
sbb
mov
cmp
xorl
push
repnz
cwtl
out
mov
dec
xchg
test
jbe
pop
push
sub
xor
icebp
arpl
aas
les
stos
out
ret
icebp
jns
in
lods
push
inc
cmp
or
test
fs
cld
adc
rcrl
jns
or
dec
mov
and
mov
mov
sbb
mov
xchg
lock
mov
xor
popf
cmp
clts
mov
pusha
ds
and
aam
ss
fwait
inc
int
mov
push
xchg
inc
bound
ss
imul
inc
in
pop
inc
enter
sahf
push
inc
pop
movsl
xor
mov
sbb
fwait
dec
xor
push
jl
sub
xor
lret
das
das
loope
and
jns
inc
out
mov
inc
inc
aas
mov
sbb
xor
xor
mov
and
push
push
dec
lahf
inc
adc
lods
sub
xor
sub
mov
ss
pop
sub
fs
jnp
lcall
pop
mov
rcrb
aad
pop
xchg
popf
fcompl
out
sbb
mov
aam
mov
stc
add
rclb
dec
imul
push
xor
inc
aas
mov
inc
aas
dec
sbb
std
loopne
data16
and
xor
cmp
push
lods
jge
stos
jnp
xchg
xchg
cmpsl
clc
push
ret
faddl
jle
sub
fmull
int
jg
fsubrs
popf
loopne
mov
xor
xchg
arpl
adc
cmpsl
ficoml
mov
mov
mov
adc
repz
arpl
inc
das
dec
popa
sbb
jecxz
mov
push
jg
cmp
inc
bound
cmp
sbb
cmpsb
jmp
sub
ret
jge
inc
mov
cld
cmc
jno
xor
icebp
imul
dec
jmp
mov
dec
arpl
pop
lahf
sahf
mov
sub
xchg
aad
test
sub
add
inc
xorl
pop
jae,pn
inc
idivb
inc
sub
or
cmp
bound
cs
jns
cmp
dec
jne
adc
cltd
lods
push
xchg
call
je
cmc
mov
std
xor
mov
mov
add
shrb
and
fs
push
mov
mov
lret
data16
cmp
out
mov
stos
mov
subl
mov
out
mov
out
push
push
lcall
mov
loope
mov
loop
dec
lds
mov
xor
sbb
iret
lds
sbb
jmp
jnp
pusha
outsb
sub
inc
pop
xor
sbb
mov
jns
inc
test
push
cmp
adc
subl
push
flds
jns
dec
mov
and
dec
out
mov
mov
jbe
mov
mov
jb
bound
std
cli
xchg
cmp
cmpsb
mov
cmp
sub
cmpsb
mov
out
sub
lret
test
sub
add
adc
xor
je
mov
cmp
enter
jecxz
movsl
fcomp
rolb
mov
movsb
outsl
fistpll
mov
js
out
cmp
popa
dec
mov
test
jo
outsb
bnd
jl
hlt
xchg
das
imul
cltd
das
lret
shlb
ret
push
adc
sub
add
stc
test
and
rorb
or
ss
sbb
push
mov
daa
jle
lahf
inc
xchg
sbb
rcrl
loope
adc
sbb
mov
mov
out
mov
fimull
mov
pop
movsl
andb
sbb
sbb
jge
fstpl
mov
jge
push
cltd
cmp
call
out
dec
mov
mov
mov
mov
cmp
mov
loope
out
cmp
in
cmc
sti
stos
xor
dec
adc
cwtl
push
push
into
ljmp
js
std
xchg
or
in
rcr
mov
nop
cmp
or
push
mov
inc
mov
pop
cmp
jb
jno
inc
push
xchg
adc
in
pushf
jno
lods
int3
ja
push
xor
mov
mov
sbb
mov
int3
jbe
mov
dec
xchg
icebp
xchg
adc
cwtl
xor
mov
out
sbb
ja
sbb
jge
jmp
inc
mov
jl
mov
movsl
cli
and
test
xchg
imul
sbb
dec
pop
jb
pop
imul
jge
clc
push
jmp
mov
cmc
push
rcll
pop
cmpsb
sti
sub
xor
cli
adc
adc
sub
cmpsl
and
js
andb
adc
push
pop
ljmp
pop
loopne
bound
fsubrl
sahf
movl
add
in
je
xor
adc
jb
pop
or
push
mov
fmul
push
cli
jae
js
pushf
imul
pusha
pop
cmp
mov
std
lods
cld
pop
jno
popl
lock
dec
das
jecxz
mov
and
or
addr16
sbb
push
cmpsl
hlt
jmp
or
std
lret
cmpsb
adc
pop
add
or
sbb
fstpt
cmp
mov
add
pop
xor
rcrb
int
cltd
mov
insl
inc
jo
cmc
xchg
rcll
inc
inc
int
xchg
jmp
sbb
lock
mov
hlt
pop
daa
and
loope
aas
idivb
dec
in
push
push
cmc
and
jge
imul
enter
xchg
adc
jo
addr16
rclb
scas
mov
push
call
cwtl
daa
push
adc
lret
jmp
mov
insb
mov
or
mov
mov
pop
into
dec
sbb
push
popa
xor
cmp
add
and
cmpsb
cli
pop
ret
rorb
shr
aaa
jno
jmp
getsec
jb
loope
fwait
scas
adc
inc
and
push
or
jns
pop
std
repz
fists
push
fwait
jge
add
mov
adc
mov
or
movsb
imul
pop
sub
pushl
pushf
hlt
repz
pop
scas
lea
pop
test
loope
jae
add
adc
mov
mov
mov
and
insb
mov
scas
xlat
adc
mov
add
mov
pop
xchg
add
mov
sti
and
mov
test
inc
push
add
mov
sub
jbe
push
cltd
dec
aaa
pushf
loop
addr16
or
mov
xor
fistpll
jns
rorl
add
mov
aaa
xor
pop
cmpsb
pop
lea
jp
decl
or
jb
cmpsl
icebp
inc
push
or
xchg
shr
sbb
mov
or
mov
cld
adc
jp
mov
repz
and
mov
adc
mov
sbb
jl
xchg
jo
mov
pop
or
iret
lahf
enter
pop
push
shl
jnp
cmpsb
push
pop
xchg
iret
add
mov
sbb
out
cs
dec
push
push
into
sarl
movsl
decb
push
add
loope
out
jecxz
cmpsl
rcl
ds
add
mov
and
sbbl
jmp
adc
lahf
movsb
or
pop
xor
cmp
mov
paddw
lret
push
std
xchg
movsl
push
mov
jns
bound
xor
imul
test
adc
pusha
push
mov
jmp
std
mov
and
mov
pop
ds
jle
mov
sbb
cmc
mov
mov
sbbl
xor
mov
test
mov
loop
pop
mov
mov
fstps
mov
cmp
add
and
cltd
dec
addb
es
fnstsw
mov
adc
mov
call
popa
mov
or
hlt
sub
lods
ret
clc
push
push
xchg
stos
mov
stos
adc
clc
nop
sbb
or
push
mov
push
cltd
out
and
adc
pop
inc
mov
cmpb
aas
lods
push
mov
sbb
mov
loop
lcall
pushf
dec
add
bound
inc
inc
add
ja
push
push
sub
mov
mov
cmc
sti
je
mov
sbbb
ret
pushf
or
mov
sbbl
pop
lock
imul
mov
xor
test
fs
xchg
mov
jp
je
jge
cmp
sbb
xor
leave
aad
sar
adc
mov
std
ficomps
aam
push
sbb
dec
push
jle
push
packsswb
mov
pop
pmulhuw
adc
sub
cmpb
pop
fisttps
ds
fisttpl
test
jmp
dec
adc
pop
dec
inc
mov
xchg
adc
dec
xorb
push
in
xor
fwait
inc
jb
cwtl
mov
outsl
jno
push
in
and
enter
sti
in
adc
adcl
jns
and
xchg
add
jmp
repz
aad
mov
cmp
enter
jns
ljmp
fwait
inc
pusha
sti
sub
xchg
sbb
fistl
rorb
xchg
or
fidivrl
stos
test
stc
push
sub
sub
stos
or
bnd
sub
push
xor
stc
cwtl
rcrb
enter
jnp
stos
js
cmp
sbb
dec
fbld
inc
lret
into
jne
out
pop
xor
add
lds
adcb
mov
jle
loope
test
jg
jecxz
lret
mov
or
add
pop
and
mov
loope
icebp
sti
sub
mov
inc
sub
popa
or
add
pop
and
mov
loope
icebp
sti
sub
mov
inc
stos
push
fwait
popa
or
add
pop
and
xor
loope
icebp
sti
sub
sub
popa
or
add
pop
mov
stos
jnp
loope
xchg
pop
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ret
jecxz
shl
ret
mov
cmc
int3
xlat
mov
addl
arpl
jb
add
adc
ret
jecxz
shl
ret
xorb
addl
add
jb
add
adc
and
add
repz
loop
bnd
xorb
addl
arpl
aaa
pop
inc
add
dec
popa
popa
pop
add
mov
lds
dec
cmp
push
hlt
cltd
test
sbb
movsl
sub
cmp
xor
ret
fistps
inc
adc
je
arpl
stos
mov
scas
xlat
ds
jb
shr
outsl
cld
mov
jb
idivl
mov
out
pusha
and
cmc
ret
ljmp
jl
test
jae
pop
adc
mov
sbb
push
jge
mov
pop
xchg
add
pop
xor
lods
stc
adcl
in
xor
fdivs
sbb
push
out
arpl
inc
sbb
es
in
pop
xor
add
shl
loop
bnd
xorb
addl
arpl
jb
add
adc
and
xor
pushf
mov
movsb
mov
std
mov
xor
aaa
pop
adc
aaa
add
inc
adc
mov
cmpsb
loope
shll
out
testl
cmc
push
ja
dec
jbe
push
movsl
mov
xchg
cmpsb
mov
mov
inc
jae
arpl
jb
add
adc
and
xor
ret
jecxz
shl
ret
xorb
addl
arpl
jb
add
adc
and
xor
ret
stos
jg
lea
in
sub
cmp
sub
and
push
gs
loopne
test
popa
cs
cmpsb
arpl
sbb
or
fwait
push
hlt
mov
or
adc
daa
movsl
lcall
add
add
xchg
jae
sbb
xor
xchg
fisubrl
add
imul
dec
mov
jo
ret
aad
into
andb
stc
xorb
fistpll
dec
adc
data16
jbe
rorl
mov
mov
ds
or
in
add
popf
sub
inc
decl
mov
in
xor
jae
cmp
aad
daa
lret
mov
lret
add
mov
jge
sbb
or
xor
lods
jg
mov
mov
shll
mov
frstor
sbb
jg
jno
lock
mov
movsb
mov
fbstp
adc
push
imul
sbb
fidivl
dec
cvttps2pi
jmp
inc
icebp
adc
or
fwait
xor
pop
aad
and
mov
push
shrl
loopne
adc
and
mov
dec
mov
and
push
pop
jb
or
lods
add
es
inc
push
into
cs
clc
rcrl
jl
xchg
enter
loop
test
clc
xchg
and
mov
sbb
cmc
ffree
hlt
pop
cmp
aad
fs
mov
pushl
pop
mov
pop
and
lods
sbb
push
push
rcrl
push
inc
pop
popa
insb
shrl
stc
les
push
add
dec
jbe
into
push
inc
sub
add
iret
pushl
cmp
mov
hlt
unpcklps
xlat
push
dec
dec
rcll
lods
les
mov
sbb
mov
js
dec
pop
aaa
loop
add
xlat
lcall
mov
sub
out
mov
push
lcall
push
cmp
ficoml
dec
add
cmp
add
in
lods
test
jns
inc
push
flds
test
cli
xchg
fucomi
inc
xor
shll
repnz
sub
setp
cmp
pop
sub
xor
push
push
out
rorl
int
cmpsb
cs
mov
adc
inc
adc
or
sub
pop
stos
mov
cmp
mov
aad
es
cmp
stc
shr
mov
jae
mov
jns
xlat
push
adc
push
insl
cwtl
dec
push
std
outsb
js
ds
pop
cltd
jmp
lret
inc
popa
pop
int3
add
lret
imul
cltd
je
xchg
adc
and
scas
pop
lods
add
js
xchg
sbb
push
push
dec
adc
dec
fidivs
out
jp
xor
add
sbb
cli
fucomp
fs
call
rcll
cmpsl
cmp
loope
lea
cmp
hlt
sbb
ds
mov
les
mov
add
lcall
cmp
fsub
popf
outsb
jmp
jmp
pop
fldl
sub
dec
jae
pop
dec
push
scas
popa
mov
out
xlat
add
popa
mov
test
or
stc
das
scas
xor
stc
fsts
inc
test
std
mov
adc
test
xchg
scas
int
ljmp
dec
mov
lock
xor
ret
push
and
xor
ljmp
out
adc
rep
loopne
dec
adc
mov
inc
jns
push
bound
dec
add
add
aaa
mov
xchg
out
and
aas
loopne
aaa
cmp
mov
stc
fcoml
pop
mov
mov
dec
adc
mov
lods
push
inc
or
cmp
mov
push
rcll
cmpsb
jno
pop
mov
cmp
mov
xchg
jbe
lock
js
push
call
push
push
loop
and
aas
push
cmp
test
pusha
movsb
add
push
lea
inc
call
cmp
mov
aaa
outsb
jmp
enter
sub
mov
mov
popa
fcmovne
push
dec
or
sahf
mov
dec
xchg
cmp
in
inc
orb
xchg
inc
jb
cmp
fs
out
addb
in
and
stc
movsb
push
mov
push
xor
int
or
ror
push
fwait
outsl
lock
fiadds
dec
dec
or
mov
aam
xlat
sbb
add
fs
adc
adc
lods
movsb
popf
jbe
mov
mov
xchg
js
xchg
mulb
and
push
mov
std
sbb
push
cmc
adc
testb
jp
fstpt
jecxz
pushf
pop
add
arpl
xchg
mov
fwait
or
add
cld
sub
jp
or
inc
sbb
rorl
or
aad
out
stc
and
jb
xchg
cmp
jge
int
and
mov
in
aaa
mov
fs
ret
or
ret
jno
sbb
fs
or
dec
dec
adc
mov
or
test
pop
lea
rcrl
and
jecxz
dec
das
push
pop
in
int
dec
movsl
bnd
xchg
shll
and
add
sub
xchg
xchg
pop
bound
inc
aaa
loope
pop
out
lcall
xor
mov
mov
xor
fdivl
sahf
lock
add
js
jbe
pop
xchg
inc
fwait
xor
mov
xchg
outsb
xchg
icebp
mov
xchg
push
out
clc
je
and
imul
out
mov
dec
xchg
sub
loope
jne
mov
jg
mov
iret
dec
cmp
bnd
in
sbb
daa
out
scas
test
outsb
in
adc
and
mov
les
lock
fcmovnb
mov
sbb
les
movsl
fistpl
jno
arpl
jo
cld
jle
cli
sbb
inc
xor
hlt
imul
test
dec
adc
xchg
mov
aam
add
pop
sti
data16
mov
and
add
sbb
dec
xchg
push
cmp
adc
or
push
test
mov
and
enter
jno
fdivl
cmp
mov
movsl
jg
dec
out
das
cs
jmp
and
insl
pushf
scas
dec
and
xchg
stos
lcall
and
and
pop
cltd
pop
add
inc
dec
sbbl
movnti
jecxz
or
inc
dec
xlat
xacquire
std
das
stos
test
in
jb
dec
scas
jp
xchg
add
lods
inc
scas
dec
push
fidivl
inc
xchg
mov
into
mov
les
data16
test
inc
xchg
fsubl
adc
out
mov
insl
subb
insl
xchg
sub
repz
rep
int
in
in
cmp
xor
jae
adc
mov
in
pop
ss
xor
rorb
sub
fstl
enter
lods
mov
jns
xchg
xchg
and
sbb
and
adc
adc
insl
ja
cmp
dec
sub
push
cmpsl
stc
mov
pusha
jnp
jnp
cmp
jbe
xchg
out
or
movsb
mov
jns
xchg
mov
movsl
std
jbe
push
jb
jb
jg
fcoms
fwait
sbb
or
fisubrl
mov
sub
mov
mov
sub
cmp
xchg
out
aas
mov
divb
data16
xorb
add
leave
cs
in
jne
push
notl
push
cmp
jl,pt
pop
jecxz
insb
sub
lcall
out
and
in
cmp
mov
ja
lods
dec
jnp
xor
lds
ret
cwtl
sub
xchg
jmp
mov
iret
jl
fwait
inc
add
dec
mov
lods
cmp
add
dec
jae
imul
ret
jns
lods
inc
push
int
cmp
cmpsl
in
movl
enter
push
push
and
punpckhdq
sbb
and
in
mov
pop
insl
mov
sub
js
add
and
jl
fcos
xor
int3
jae
mov
stc
push
pop
fmul
arpl
mov
mov
fimuls
sub
addr16
cwtl
aam
int3
mov
mov
dec
sub
fsubs
push
push
es
jmp
ss
aas
in
subb
dec
push
xchg
mov
jb
aas
pushl
sbb
xchg
lahf
pop
xor
pusha
icebp
cmp
inc
out
or
inc
pop
fistpll
inc
jecxz
loop
jno
pusha
xor
and
and
in
mov
xchg
mov
out
sbb
sbb
sbb
fcompl
or
lock
push
fstpl
cld
dec
jb
xchg
mov
cltd
pop
add
or
add
cld
xchg
mov
xor
insl
xor
test
movsl
pop
rorl
pop
xor
pop
outsl
popf
testb
push
xchg
or
in
cmp
lods
in
jle,pn
lcall
or
sub
fwait
repz
outsb
inc
sbb
jle
add
dec
xor
cwtl
or
push
and
mov
dec
xor
sbb
mov
push
fldl
fcoml
or
call
mov
call
mov
adc
jl
or
out
mov
enter
xchg
inc
fwait
cmp
das
call
or
inc
pop
push
push
inc
mov
jnp
test
testl
push
adc
fs
mov
rcl
push
or
pop
add
dec
jge
mov
scas
sub
sub
inc
arpl
sti
push
push
dec
inc
mov
es
jp
push
jae
rcr
mov
into
addl
out
je
fisttps
dec
sbb
push
sbb
push
in
mov
mov
xor
mov
inc
fstpl
sub
das
add
imul
or
push
mov
sti
mov
cmp
lods
lcall
repnz
push
iret
jmp
pop
addr16
je
gs
push
cmp
or
sbb
daa
push
inc
dec
sar
xchg
aaa
addl
cmc
rorb
cltd
cmp
popa
negl
xchg
ljmp
mov
add
pop
in
sbb
je
movsl
and
movsb
jl
jae
adc
jg
jp
dec
sub
xor
into
pop
int
loopne
dec
add
and
mov
aad
cmp
cmp
add
in
cmp
shrb
adc
jge
and
daa
aad
cmpsb
mov
dec
push
dec
in
pop
xorl
add
add
jmp
lahf
adc
clc
lods
rclb
mov
test
scas
sahf
stos
out
insb
xchg
inc
add
xlat
stos
mov
mov
pop
aaa
or
daa
cwtl
cmp
inc
lods
sub
lret
lcall
sub
push
add
aaa
cvtdq2ps
mov
bound
jns
pop
aam
fnsave
in
in
imul
movl
and
call
mov
enter
imul
pop
dec
push
arpl
adc
mov
mov
enter
and
push
cltd
lods
sub
mov
jae
cmp
sbb
stos
enter
push
das
loopne
lcall
mov
sarl
push
xchg
xchg
jge
dec
int
pop
movsb
pop
mov
out
pop
jge
shrb
push
push
push
test
jmp
dec
mov
mov
jno
loope
push
dec
mov
add
jmp
cwtl
xor
call
shlb
xor
xchg
icebp
jo
cmp
pop
sbb
pusha
je
test
cwtl
or
cmp
addr16
add
bound
add
popa
cmp
xor
daa
jmp
les
cmp
mov
adc
sbb
lret
add
scas
repnz
mov
pusha
sub
push
jge
shlb
mov
xor
or
scas
cmp
pop
int
addl
xchg
bound
pop
mov
ss
jp
mov
shll
fwait
mov
dec
jmp
sbb
sub
or
test
movsl
xchg
ret
hlt
out
sub
jmp
call
ss
adc
add
adc
or
cwtl
inc
fisttpl
push
fimull
and
pop
pop
cmp
jge
push
add
scas
sahf
cmp
jg
fprem
pushf
gs
movsl
cld
fucomip
gs
pop
sub
cmp
xlat
shl
xor
xor
dec
dec
repz
in
mov
push
in
cmc
sub
xor
in
add
and
repz
movsl
inc
or
divl
test
cmp
adc
lahf
lds
mov
insb
xchg
xor
jne
repz
movsl
fisttpll
mov
fcoml
testb
and
lret
jae
mov
cmp
or
sahf
xor
dec
mov
push
fdivrl
shrb
dec
dec
and
stos
add
or
mov
jbe
cmpsl
idivb
and
pop
inc
jge
inc
or
ds
pop
test
or
movsl
push
sbb
pop
mov
add
pop
or
cmp
ljmp
pushf
adc
fs
loopne
and
scas
test
mov
add
add
mov
inc
jne
cmp
lods
lock
mov
push
push
jecxz
jg
shlb
and
fdivrl
notb
xchg
jp
dec
mov
out
lock
push
push
push
jbe
fwait
sub
leave
push
iret
jp
jge
dec
dec
dec
jbe
in
in
daa
add
dec
shrl
mov
dec
enter
stc
outsb
cmp
push
jg
add
sbb
cmpsb
iret
mov
jae
in
daa
and
mov
mov
add
mov
and
jo
int
sub
adcb
xchg
stos
cmpsl
mov
inc
dec
mov
repnz
jae
add
hlt
cmpsb
mov
negl
jne
xor
movsl
in
inc
or
inc
hlt
movsl
ja
adc
mov
and
nop
jl
das
int3
jae
sub
push
cmp
xchg
cs
push
inc
rcrb
movsl
ljmp
scas
pop
das
add
or
mov
je
mov
rorb
daa
clc
lret
dec
scas
mov
mov
pop
xor
cmp
lahf
scas
in
push
std
out
mov
inc
inc
in
or
addl
mov
pop
push
add
adc
and
stos
pop
popf
jne
xor
testl
std
icebp
jno
dec
in
sub
xor
add
test
xor
sti
out
lcall
cmpsl
mov
icebp
enter
sbb
into
fbld
popa
fnstenv
testb
shll
fistpll
in
adc
xchg
dec
pop
dec
mov
or
int
insb
movsl
jno
fidivs
cmpsl
push
bound
ds
popa
sti
xchg
fcomps
addl
xchg
pop
cmp
mov
data16
std
jmpw
mov
cmp
cltd
rcl
fisttps
int
inc
lock
xchg
dec
mov
mov
arpl
sub
pop
aam
fcoms
ja
mov
jmp
mov
cs
xchg
push
inc
pushf
and
add
sbb
out
shlb
lea
gs
sbb
dec
stos
push
out
imul
sti
adc
mov
or
fstl
sbb
pop
sarb
nop
daa
dec
insb
mov
stos
outsl
jbe
pusha
xor
fadd
mov
pop
ja
js
pop
push
call
cmpb
out
or
ljmp
and
std
xor
sub
setnp
pop
in
int3
jbe
adc
or
daa
xor
pop
in
xchg
mov
add
scas
pop
push
lret
idivl
sti
in
nop
inc
leave
jge
popa
or
xor
mov
or
insb
test
subl
sub
pop
out
lret
repnz
add
int
imul
push
dec
or
ja
push
movsb
push
cbtw
fists
fbstp
sahf
pop
jecxz
cli
adc
mov
adc
outsb
mov
mov
cltd
out
sbb
xor
xor
mov
or
icebp
cmc
adc
js
loop
mov
cmp
cmp
and
mov
rorl
lret
mov
mov
in
jl
pop
idiv
lahf
push
push
adc
repz
dec
mov
clc
arpl
sbb
mov
imulb
out
xchg
leave
mov
and
scas
sbb
popa
rolb
adc
fwait
and
xchg
scas
fbstp
push
call
pop
insl
sarb
pop
mov
call
insl
cmp
sub
pop
pop
cmp
jl
sbb
aad
dec
lds
dec
mov
pop
out
xor
push
jnp
dec
sbb
out
xor
sub
mov
xchg
rcr
nop
push
sbb
xor
cwtl
out
push
add
push
sahf
jne
in
adc
insb
jns
mov
sbb
xchg
in
fidivs
jg
jge
jl
mov
stc
out
xor
push
clc
sbb
and
xor
ror
push
pop
or
lock
insl
sub
sub
dec
cmp
ret
and
cmp
xor
or
and
push
or
add
mov
jo
rolb
dec
pop
push
fs
movsb
mov
jl
int
inc
xchg
mov
stos
call
push
mov
scas
jecxz
xchg
clc
push
es
adc
sub
pop
mov
inc
mov
daa
cmc
dec
push
pop
pop
clc
fimuls
lret
dec
aad
clc
movsb
lods
aaa
mov
divb
push
into
lea
cmp
mov
sub
in
mov
mov
pop
gs
repnz
or
shlb
ret
inc
insb
out
push
pop
gs
add
rcl
lock
popf
mov
cmp
pop
mov
dec
cltd
jmp
jg
dec
mov
jmp
testl
mov
in
filds
call
pop
dec
jne
stos
ret
cmp
lds
ret
popf
mov
call
movsb
into
pop
inc
test
je
out
in
cs
pop
adc
mov
xor
icebp
jb
jecxz
xchg
mov
dec
gs
arpl
hlt
ss
fbld
repz
cmp
fwait
loopne
or
xchg
adc
rorl
mov
push
mov
cmpsl
les
inc
mov
inc
mov
data16
or
hlt
repnz
jle
mov
lcall
mov
push
inc
fisttpll
enter
xor
dec
xor
lds
mov
std
cmc
dec
sbb
or
aad
int3
je
dec
loopne,pt
cmpb
mov
movsb
mov
test
push
stc
pop
divl
aas
jmp
ds
jmp
gs
dec
loope
lds
adc
pushf
outsl
sub
frstor
subl
xchg
shlb
mov
aas
lcall
aas
rolb
fwait
enter
ljmp
push
fmuls
sahf
mov
sbb
push
inc
test
imul
cltd
loope
adc
and
adc
xor
ljmp
out
jbe
sbb
jae
out
push
inc
dec
mov
orl
incb
push
adcl
addr16
jbe
lsl
aam
test
movl
jle
and
xor
fcom
jmp
fs
fisttpll
popf
xor
ds
fsubrs
xchg
testl
jp
pop
loop
or
stos
stc
xchg
sbb
dec
stc
cld
aas
test
mov
subb
cli
shrb
xchg
jno
pusha
rolb
add
xchg
add
push
out
test
add
mov
push
push
pop
ss
incb
xchg
xor
popl
jae
mov
mov
daa
out
int3
pop
daa
addb
aam
mov
sbb
jb
or
nop
cmp
ja
dec
idiv
jmp
sub
cmpsl
in
hlt
cld
pop
inc
orps
inc
mov
shlb
cmp
sbb
shrl
test
jb
icebp
enter
rolb
sbbl
in
shrl
sub
outsb
adc
and
loope
scas
lods
inc
xor
mov
adc
fs
lea
cmp
shrl
dec
js
or
pop
ss
cmpsb
rcrl
lcall
or
leave
in
movsl
jne
outsl
add
or
xchg
out
push
jns
ret
stos
outsl
sbb
in
shrl
fldt
cmp
pop
jge
push
ja
cmp
fwait
jg
scas
lret
clc
sbb
jp
fstpl
or
out
fadds
mov
jno
fwait
test
sahf
pop
out
les
add
shrb
movsl
cmp
sub
int3
ds
sub
inc
push
ret
xor
imul
jmp
push
cwtl
icebp
lret
adc
add
pop
jmp
jecxz
shl
ret
xorb
addl
arpl
jb
add
adc
and
xor
ret
jecxz
shl
ret
xorb
addl
arpl
jb
add
adc
and
xor
ret
arpl
push
bnd
xorb
addl
arpl
jae
add
adc
and
xor
ret
jecxz
shl
ret
xorb
cmpl
jb
jne
lcall
push
insb
inc
pop
jb
bound
pop
pop
popa
cmp
arpl
mov
repnz
loop
xchg
in
sbbb
inc
insb
jb
bound
sub
sbb
or
not
in
ret
push
loop
lods
sbbb
inc
inc
jb
bound
xor
and
shl
loope
cmpb
out
fsub
rorl
insb
or
sbb
bound
rolb
das
mov
adc
adc
xlat
push
xchg
xchg
cmp
lret
pop
out
adc
xchg
cmp
sub
out
xchg
xchg
sti
dec
jo
add
icebp
push
insb
dec
adc
sbb
ja
test
dec
mov
jmp
sbb
xor
hlt
pop
or
enter
fdivl
add
xchg
jl
mov
xchg
adc
lcall
hlt
sub
int3
out
shrl
pushf
xlat
insb
iret
adc
and
cmp
addr16
adc
jl
mov
mov
push
insb
inc
pop
jb
bound
add
adc
ret
aad
movsb
xchg
mov
pushf
mov
lret
orps
add
jb
bound
inc
imul
popa
jbe
stos
in
ret
scas
xchg
mov
out
lret
jmp
daa
cmp
dec
bound
inc
dec
jo
dec
inc
cltd
in
mov
frndint
filds
adc
add
cmp
add
or
cld
shr
ret
int3
loop
xchg
lods
sbbb
inc
pop
jb
bound
sub
sbb
or
cld
shr
ret
int3
loop
xchg
lods
sbbb
sub
data16
mov
cmp
xchg
dec
sbb
xchg
or
test
loopne
push
mov
pusha
popl
mov
lret
pop
aaa
xchg
xor
mov
int
mov
out
call
es
xor
lds
lods
hlt
js
imul
out
sub
cmp
aas
es
xchg
pop
ficoms
lods
inc
add
jecxz
roll
divb
adc
jle
imul
ja
cmp
jmp
xor
movhps
movl
jp
xchg
add
adc
xchg
lcall
cld
aas
mov
sub
xchg
mov
clc
and
and
mov
dec
outsl
mov
loop
mov
into
ja
data16
inc
cmc
popa
mov
out
ret
movsb
je
iret
xchg
inc
cmp
int3
std
and
mov
adc
jae
int3
pop
dec
popa
in
dec
lods
xchg
dec
cltd
pop
leave
stos
lods
inc
pop
jecxz
xor
jne
add
mov
sahf
sub
mov
sbb
dec
int3
inc
pop
pop
test
shlb
imul
mov
and
pop
in
jl
add
xor
or
mov
jo
mov
lock
les
sub
mov
faddl
mov
lods
out
ja
mov
mov
lcall
adc
cmp
push
and
lds
nop
add
aad
jp
jmp
xor
dec
fucompp
mov
push
xchg
dec
xor
insb
sbb
ja
pop
das
mov
xor
jns
and
shlb
aaa
nop
test
fnstcw
imul
add
mov
je
loopne
jmp
jo
andb
jg
stc
adc
sub
sub
testl
ja
cmpsb
mov
cmp
jnp
sub
gs
outsl
das
fimull
mov
js
xchg
or
sub
push
mov
clc
xor
lock
icebp
negb
mov
jge
lret
insb
aam
dec
test
sub
mov
fnsave
add
cmp
mov
icebp
stos
sahf
jo
mov
aaa
fisttps
push
loope
push
or
and
mov
sbb
dec
cs
fistl
int
pop
xchg
pushl
lds
test
sub
cli
sbb
jmp
or
dec
fwait
aam
dec
xor
and
movsl
add
xorb
mov
push
dec
sbb
xor
mov
inc
xchg
cwtl
push
jmp
mov
inc
mov
xor
jb
push
out
inc
lret
xor
cs
jb
cmc
rcr
js
mov
jl
jae
push
lods
sub
pop
test
scas
mov
adc
push
inc
jmp
xchg
pop
cmp
jecxz
int3
mov
pop
in
sub
dec
dec
repnz
icebp
mov
jae
lahf
dec
scas
xchg
sub
cltd
or
imull
mov
mov
inc
cwtl
pop
loop
mov
add
cli
sbb
inc
movsl
sub
fs
and
imul
out
in
leave
in
fldt
add
ret
push
es
jge
gs
mov
and
and
outsb
bound
mov
lahf
mov
out
mov
xchg
sbb
ljmp
push
push
jle
ret
jno
rolb
hlt
jno
into
lods
outsb
fiadds
add
add
inc
pop
adc
mov
shll
or
xchg
mov
cmpsb
push
sub
pop
xor
push
int3
call
ja
mov
push
ja
out
in
cwtl
push
adc
pusha
jno
jne
roll
sbb
add
xor
aas
sub
loopne
mov
ja
daa
jmp
mov
lock
jne
pushf
mov
mov
stos
sbb
and
and
sub
mov
shll
sbb
push
js
incl
aaa
inc
call
dec
and
xchg
repnz
lcall
stac
mov
add
jecxz
fistpl
out
sar
cmc
imul
xor
sbb
pop
sub
add
xor
pop
mov
imul
xor
xor
adc
push
fxch
loope
pop
out
sub
xor
pop
outsb
insl
xchg
test
xor
lahf
iret
add
in
sub
dec
and
jecxz
insb
stc
loope
push
into
mov
adcl
rcrb
ljmp
outsw
iret
pushf
mov
insl
addr16
push
jbe
ret
hlt
mov
pop
mov
push
xchg
cmc
push
adc
addr16
gs
out
push
cmc
cmp
adc
dec
repnz
lcall
movsb
pop
push
cmpsb
sbb
pop
sbb
ret
cmp
add
sar
test
sub
jae
xor
fs
push
adc
rclb
inc
or
lret
fldl
add
outsl
pop
mov
jge
jno
lcall
mov
jecxz
out
fldl
mov
jne
add
sarb
cmp
push
mov
fidivs
jl
aas
jmp
jne
fdivp
jne
and
aas
mov
and
jne
xor
cmp
fwait
imul
xor
mov
xorl
cmc
sub
call
dec
cld
call
icebp
shlb
inc
mov
pop
stos
movsl
mov
int3
scas
dec
aam
ja
lahf
pop
dec
jle
popf
xor
push
pop
or
shlb
inc
dec
insb
sub
sarl
pop
cmp
movsb
xchg
add
mov
js
inc
xor
sbb
cmc
shrb
mov
jp
pushf
cld
outsb
stos
fs
xchg
es
lods
mov
insl
sub
in
push
loopne
hlt
repz
leave
cmpsb
jno
adc
outsl
in
mov
ret
loope
sarb
dec
rcrl
or
pause
jecxz
add
insl
or
adc
stos
insl
sahf
mov
jns
fildl
adc
push
jne
add
mov
fwait
cmpb
fdivrl
fnstenv
in
ljmp
jmp
xchg
int
clc
out
scas
xor
mov
add
add
inc
jb
adc
push
out
notb
mov
popf
mov
cmp
ret
mov
mov
incl
cmp
dec
test
inc
arpl
jmp
and
xor
xor
dec
mov
push
iret
sar
test
dec
push
or
pop
lods
mov
or
push
adc
push
xor
in
insl
xchg
rcrb
mov
xchg
das
aam
pop
loopne
xor
and
pushf
pop
or
or
cmp
ja
enter
test
jae
push
out
bound
nop
adc
cmc
cmp
ljmp
leave
das
sub
add
add
jg
mov
cmp
cmp
push
jge
xchg
jle
aaa
pop
arpl
rolb
pop
and
push
loopne
sahf
sti
rcl
nop
fbstp
pushf
mov
pop
dec
pop
aaa
inc
imul
mov
xchg
mov
nop
and
cltd
stos
jmp
cmc
cmc
js
xchg
xchg
push
fisttps
bound
fucomip
fistpll
ss
jne
inc
mov
ds
cmp
repz
xchg
es
call
cmp
and
inc
mov
add
enter
decl
adc
int
adc
dec
lcall
mov
mov
and
sbb
hlt
pop
push
cmp
ret
mov
daa
aad
push
lods
pop
pop
pop
sub
call
aas
aam
inc
fsubl
outsb
adc
sbb
adc
fwait
add
or
mov
movsl
cs
in
pop
jle
push
inc
repz
in
js
sub
mov
mov
add
pusha
in
sbb
std
mov
mov
xor
mov
push
inc
dec
mov
lahf
jne
movsb
or
jg
cmp
es
mov
dec
mov
xor
dec
loop
aas
fnstsw
add
fisubl
cmp
lock
lock
enter
push
sbbl
or
xor
rolb
bound
ljmp
jnp
xlat
stos
arpl
sbb
inc
fnsave
and
jnp
inc
stos
jmp
mov
cmp
xchg
cmp
adc
lret
rcrl
or
xor
scas
movl
or
cmpsb
jmp
and
pop
inc
aam
std
sahf
push
or
or
aam
sbb
repz
arpl
lret
das
stos
mov
out
bound
sbb
mov
shll
mov
aad
imul
pop
inc
mov
pop
ficomps
cmpsb
mov
push
adc
inc
adc
movsl
mov
jns
push
popa
mov
xchg
mov
sub
popf
std
cmc
stos
xchg
mov
pop
shlb
sub
or
push
xchg
xchg
sbb
dec
jg
out
pop
pop
pop
cli
pop
daa
in
jmp
int
ret
lock
pop
xchg
sbb
in
rcll
leave
jns
jge
out
push
aad
jbe
xchg
daa
mov
adc
sbb
mov
lcall
jp
into
lds
push
insb
popf
jg
mov
stos
and
xor
pop
adc
mov
lahf
mov
shrl
imul
cmpsl
push
and
sub
add
mov
out
xchg
in
fwait
int
dec
je
ret
popf
mov
nop
sbb
lods
fnstsw
jbe
or
ljmp
repnz
mov
outsl
or
pusha
shll
adc
rcrb
push
fbld
pop
sub
pop
mov
in
insb
subb
cmp
lods
scas
adc
add
out
sbb
les
mov
pushf
add
ljmp
data16
jbe
sub
mov
out
hlt
movsb
inc
insl
mov
push
imul
loope
cld
stc
xchg
xchg
xor
sub
ret
adc
cmp
sub
dec
icebp
std
xor
or
addr16
pop
sub
insl
xchg
insl
push
imul
mov
iret
inc
sbb
mov
mov
push
lcall
push
inc
sarl
sbb
mov
fbld
mov
arpl
leave
adc
addr16
lret
notb
pop
mov
xchg
lcall
inc
adcl
and
sahf
add
add
fwait
repz
fmuls
or
pushw
or
xchg
popa
mov
jge
rcrb
push
mov
insb
scas
data16
inc
imul
xor
icebp
dec
add
jno
imul
es
inc
je
cmp
jecxz
sbb
pop
es
mov
rorl
sbb
rolb
mov
insl
popa
rcrb
cmp
xchg
stos
push
cmp
in
or
jmp
dec
aad
push
inc
push
scas
cs
push
jns
pop
rcl
ret
pop
aad
adc
xlat
mov
dec
xor
pop
pop
cmpsl
jge
dec
push
sub
pop
lock
into
xchg
push
cltd
pop
xor
jl
into
mov
iret
push
and
jmp
call
leave
popf
and
cwtl
xchg
cmp
pop
push
pop
cmp
daa
movsl
scas
mov
lea
push
inc
xchg
jne
mov
pop
cld
cli
or
cmp
cld
push
scas
test
cmc
loopne
es
push
das
pop
and
adc
test
jmp
fldt
push
imulb
pop
aas
sbbb
pop
push
adcb
jmp
scas
mov
xchg
hlt
out
inc
imull
addr16
stos
cmpsb
cwtl
push
imul
mov
jmp
push
cltd
fldcw
ret
int
pop
jb
push
loop
or
mov
pusha
add
push
push
pop
xchg
test
mov
push
mov
jno
pop
pop
imul
or
lock
clc
fists
out
enter
fcmovbe
push
enter
or
and
cli
aad
or
cmp
insb
in
outsb
stos
xor
out
sub
jbe
dec
pop
jo
cli
mov
sub
pop
sbb
sbb
pushf
pushf
aad
mov
shlb
dec
iret
ret
in
mov
and
jne
mov
fwait
xchg
ljmp
mov
outsb
sti
sbb
sbb
cltd
cld
and
or
jne
ficompl
hlt
sarl
fucomp
in
loopne
or
les
outsb
scas
and
fiaddl
fcoml
repnz
outsb
outsl
mov
cmp
push
add
mov
mov
mov
daa
add
es
add
push
jg
shlb
insb
or
xlat
dec
cmp
lock
ja
inc
pushf
jb
xor
cmp
or
in
cmp
scas
into
sbb
mov
sbb
outsb
cmp
gs
push
pop
push
popf
dec
inc
pop
mov
mov
mov
in
mov
test
js
mov
push
stos
lea
jp
std
mov
lods
push
in
dec
enter
cmpsl
fwait
scas
aas
mov
and
mov
push
ds
les
cmpsb
xor
cli
das
test
sti
bound
js
sahf
int
ss
insb
pop
jo
mov
cmc
int
fs
js
jmp
add
icebp
xor
sub
lret
mov
and
mov
ficomps
push
nop
push
jmp
cld
cmp
daa
lods
xlat
es
shrl
pusha
push
outsb
lock
andl
das
pop
fs
in
push
fistpll
psllq
ret
pop
mov
iret
gs
xchg
movb
fcompp
sarl
js
xchg
int
pop
in
aad
arpl
jmp
scas
dec
in
cld
repz
js
adc
xlat
jae
pop
pop
ret
add
cs
or
xchg
push
test
push
adc
adc
xor
xor
lods
sbb
loop
pop
jns
enter
pop
xor
pop
add
outsl
xchg
enter
push
je
lcall
pop
sub
add
fcom
xchg
xlat
cmp
jno
lcall
jp
sbb
jbe
lret
fdivrs
jbe
and
push
in
aaa
cmp
and
cwtl
mov
mov
mov
push
cld
hlt
pop
sbb
into
lods
xlat
out
rol
mov
pop
shll
inc
lret
xor
adc
faddl
bound
jmp
xor
aad
push
dec
fwait
mov
dec
cmp
pop
and
addr16
sbb
mov
push
lods
sti
cmpsb
bound
insb
repz
push
clc
aas
jp
xchg
cmc
mov
fwait
in
aas
repz
fs
xchg
cld
pop
push
out
cli
out
test
stos
ffreep
mov
in
call
loop
sub
push
pop
in
lock
cmp
sbb
jne
cmp
jb
je
xor
incl
mov
adc
ret
lahf
cmpsb
cltd
xchg
jns
pop
jae
adc
inc
mov
mov
pop
ja
push
in
sub
je
sbb
jle
lds
jno
inc
push
shlb
mov
mov
std
stos
js
add
lds
jmp
pop
add
jp
jle
xchg
sarb
push
and
cmpsl
in
test
cltd
inc
gs
dec
ss
imul
fsubs
rorl
out
mov
jae
aaa
dec
out
ret
push
out
pop
push
xchg
jg
sbb
sub
xlat
sub
pop
add
xor
out
dec
cmp
jo
jns
addr16
or
xchg
stos
add
xor
push
and
imul
cmpsl
xor
rcrl
cltd
jb
add
jb
mov
in
inc
jno
fsub
and
fs
mulb
jb
dec
push
cmp
test
xchg
lock
lret
mov
cmp
sbbb
sbb
scas
push
mov
pop
mov
test
repz
lea
out
xchg
jmp
xchg
add
stc
sbb
insl
es
cmp
data16
xor
mov
adc
ud2
adc
cmp
sub
stos
xchg
jb
mov
adc
mov
add
jno
push
call
jns
loop
cmp
cmp
lahf
fs
into
pop
add
sbb
aam
gs
jmp
dec
push
mov
push
lahf
pushf
xor
mov
inc
jo
es
xor
fcoms
and
out
in
fisubs
in
pop
inc
cmp
pop
xchg
push
cld
punpcklwd
lock
xorb
mov
cmp
push
testb
mov
xchg
sub
in
push
adc
int
ret
xchg
negb
loope
hlt
dec
dec
fwait
inc
mull
adc
test
mov
jg
or
stos
add
push
insb
xchg
push
int3
addr16
test
cmc
imul
jnp
pop
jne
ficoms
jmp
outsb
leave
pusha
sbb
filds
fsts
popa
bound
lock
xor
sbb
mov
ja
jle
ret
or
stos
and
mov
mov
push
cwtl
dec
int3
sbb
xchg
sub
mov
cmp
xchg
loopne
inc
push
repnz
cmpsb
push
mov
mov
push
xchg
ljmp
pop
pop
sbb
pop
iret
jmp
dec
sub
or
pop
in
popa
pop
jp
out
stos
xchg
scas
xor
dec
cmpb
inc
cmp
dec
repnz
pop
jns
xchg
loopne
repnz
sub
xor
add
subl
dec
test
rcrb
js
add
lock
movsb
mov
ret
inc
lahf
adc
insb
push
mov
cmc
dec
adc
pushw
pushl
cmp
loope
repnz
mov
cltd
jle
cmp
xchg
ds
jns
jmp
push
roll
dec
adc
fbld
and
repz
dec
mov
jb
test
jge
sbb
pop
les
loop
sbb
mov
data16
xchg
ret
out
push
ja
push
adc
shll
ret
lahf
push
xchg
pop
rorb
fcmove
dec
dec
dec
sub
rorl
jecxz
or
stos
xchg
cmpl
mov
xor
les
lret
cmp
xor
dec
sbb
in
sarb
adc
pop
adc
fidivl
inc
jbe
sti
xor
push
jp
push
jle
pop
xchg
xchg
adc
into
cmc
aam
lret
mov
or
pop
add
inc
rolb
sbb
andl
mov
xor
mov
aam
movsb
aas
adcl
sbb
xor
push
sti
sbb
repz
pop
cmp
mov
ss
imul
das
es
out
cmpsl
xlat
mov
sub
mov
pop
lret
push
ficoms
jp
stos
mov
mov
cli
jae
cltd
cmp
stos
imul
sbb
xor
or
pop
jg
or
xchg
pop
add
and
movsb
sub
push
mov
xor
xchg
and
insb
lahf
loope
cmp
cmp
imul
jo
lahf
pusha
xchg
inc
push
push
cmp
not
aas
imul
ficoml
mov
push
loope
ret
dec
or
cld
lods
in
aam
fiaddl
das
ds
add
fcompl
popf
cli
xchg
int
ja
cmp
jbe
xor
push
lahf
addr16
sahf
dec
push
sahf
enter
sbb
xor
test
or
gs
cmp
fmuls
adc
inc
jmp
add
xor
xchg
nop
lret
xchg
xchg
mov
push
xor
and
fwait
cmpsb
movsl
or
mov
pop
js
mov
push
mov
mov
test
incl
inc
imul
outsb
ret
push
fsubr
jp
xor
adc
adc
inc
lods
into
in
loopne
bound
loop
pushf
popl
out
or
imulb
repnz
movsl
xchg
mov
dec
in
in
gs
flds
pop
xorb
shl
ret
aaa
mov
out
cmpsl
std
dec
daa
mov
xchg
or
pop
lcall
int3
xor
inc
pop
jbe
or
adc
mov
rcrb
ja
push
jno
mov
mov
dec
ret
pop
hlt
and
jnp
inc
pop
mov
xlat
xchg
rcrl
rep
sti
sub
push
inc
fwait
mov
in
cmp
jns
stos
inc
clc
mov
cmp
mov
stc
dec
mov
mov
nop
pop
sti
shl
jno
adc
cmp
mov
das
cmp
fsubs
sbb
mov
cmp
icebp
jnp
test
sub
push
rorl
xchg
adc
stos
orl
out
loop
jno
outsl
nop
push
fsubs
lock
pushf
and
sub
sub
mov
add
cmp
dec
pop
lret
in
arpl
jae
jo
sub
sti
or
push
jmp
cltd
dec
push
ficoml
fldl
jb
bound
sub
sbb
or
cld
shr
ret
int3
loop
xchg
lods
sbbb
inc
pop
jb
bound
sub
sbb
or
cld
shr
ret
int3
loop
xchg
lods
sbbb
inc
pop
jb
bound
sub
sbb
or
cld
shr
ret
int3
loop
xchg
test
pushf
mov
mov
push
dec
bound
sub
pushf
xor
jbe
int3
xchg
lret
sbb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
jge
jo
faddp
cmp
push
loop
cmp
or
push
add
push
pop
stos
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
daa
add
add
mov
xchg
add
das
add
add
add
add
add
add
popa
add
add
add
add
add
push
add
add
add
add
add
add
xor
movsb
add
add
add
add
add
add
add
sub
pop
add
add
adc
gs
add
nop
add
add
add
add
add
add
add
add
leave
add
add
add
cwtl
add
add
add
add
add
mov
or
aad
sbb
add
add
adc
cmp
cmp
push
add
cmp
mov
mov
add
xor
sbb
insb
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
xchg
pop
add
add
add
jbe
mov
mov
addl
sub
push
add
add
pop
add
add
push
add
add
add
add
cmp
push
popf
add
add
and
push
dec
add
roll
push
add
add
add
add
add
add
add
cmp
iret
add
adc
push
add
cwtl
add
add
add
add
and
insl
add
add
add
add
add
mov
cwtl
add
pop
add
add
cmp
rolb
cmp
and
or
add
push
stos
add
add
dec
add
add
add
mov
cltd
add
add
pop
add
push
add
add
add
mov
add
add
add
add
push
add
add
add
add
add
or
add
add
add
add
addl
dec
add
cmc
add
add
push
add
add
sahf
add
add
mov
cwtl
add
add
dec
add
add
add
add
add
add
add
add
loopne
cmp
insl
add
add
add
add
mov
inc
add
add
add
and
and
pop
add
add
add
add
add
es
add
add
add
cmp
and
incl
xor
and
inc
add
xor
testl
cwtl
add
add
add
cwtl
add
cltd
add
add
or
add
add
xor
mov
loop
pop
add
push
add
add
pop
add
add
pop
add
add
aaa
add
add
add
cmp
mov
sub
add
add
mov
add
ljmp
add
cmp
xchg
add
mov
sbb
xor
movsl
add
add
add
add
add
or
add
cmp
mov
add
add
add
add
add
push
add
add
testl
flds
add
xchg
cmp
push
cmp
inc
mov
clc
push
jbe
or
dec
mov
xchg
xchg
sti
repnz
mov
ret
mov
sbb
bound
in
clc
xchg
ret
cmc
pop
add
in
repnz
inc
shrb
je
into
jbe
xchg
xchg
call
lahf
push
inc
xchg
call
add
adc
jnp
out
mov
or
addr16
jno
mov
mov
push
mov
xor
cli
jg
test
mov
scas
mov
pop
sbb
es
xchg
das
or
outsb
xchg
sti
jo
jg
cmpsl
lods
ficomps
jg
je
pop
pop
imul
jno
cltd
and
jb
addr16
cmpsb
jp
jge
rcll
inc
add
lea
xchg
pushf
int3
jbe
jmp
xchg
jmp
mov
lds
xchg
iret
sbb
lock
xlat
ret
mov
adc
fwait
cmp
pop
iret
mov
cmp
dec
adc
mov
shll
in
bnd
out
decb
stos
jle
adc
js
mov
bound
je
fwait
leave
inc
mov
pusha
jmp
test
mov
add
jmp
fwait
pop
fsubrp
mov
adc
lret
mov
push
inc
cmp
xchg
xchg
mov
pop
fwait
jecxz
dec
push
roll
xchg
lahf
bound
xor
ret
mov
mov
clc
adc
jno
and
push
loop
jl
enter
cwtl
mov
enter
dec
sahf
icebp
sub
dec
inc
lods
dec
mov
cmpl
loope
aam
stc
xchg
push
pop
xor
adc
ja
jle
pop
daa
test
push
frstor
mov
scas
fildl
jno
mull
jnp
fildl
adc
call
sbb
mov
das
orl
fdivrs
jnp
sbb
js
icebp
cs
adc
and
inc
inc
loop
jns
cs
sbb
pop
mov
ret
mov
xlat
fcmovnu
adc
lea
mov
cmpsl
insb
xor
push
pop
pop
xor
push
adc
xor
mov
push
xor
int
ljmp
aas
lods
dec
mov
mov
cmp
cmpsb
xor
dec
int
jmp
enter
pop
repz
rorb
or
cs
je
lcall
adc
repnz
aaa
xchg
in
test
aad
adc
mov
icebp
sbb
inc
ss
iret
xor
mov
push
jecxz
push
clc
inc
add
icebp
ljmp
jp
mov
lds
jmp
dec
mov
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
