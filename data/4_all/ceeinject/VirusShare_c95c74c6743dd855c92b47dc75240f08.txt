call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
adc
pop
fldt
jle
adc
cli
push
out
push
mov
in
imul
mov
ficomps
scas
sub
fistpl
jle
push
mov
pop
cs
ds
les
jnp
imul
fs
sbb
pop
inc
data16
pop
mov
cmpsl
ss
sub
xorb
mov
pop
xlat
cmp
lret
pop
mov
sahf
adc
sbb
dec
es
test
bound
dec
inc
ror
outsb
mov
inc
leave
mov
addr16
idiv
pop
outsb
and
adc
repz
leave
fadds
xor
daa
icebp
mov
mov
int3
and
mov
sub
sbb
jns
sahf
or
mov
cmc
inc
sub
ds
cli
mov
or
pop
mov
in
ret
push
push
aaa
mov
mov
and
lods
jnp
pop
lahf
sbb
cmp
scas
or
and
repz
adc
xor
xchg
jmp
or
mov
outsb
outsl
imul
jno,pn
cmp
int
popf
idivb
xor
sub
fisttpl
test
aad
pushl
sub
push
fidivrs
pop
nop
adc
fs
outsl
lret
push
pop
dec
mov
or
jo
inc
lds
int3
fimuls
jmp
in
push
fimuls
push
daa
popf
insb
pushf
or
push
fwait
cs
ds
out
imul
mov
sahf
sbb
lret
pop
fldt
jle
push
mov
fwait
cs
ds
out
imul
mov
sahf
sbb
lret
popf
or
dec
push
xlat
and
xor
loopne
lods
xor
or
or
jnp
cmc
rclb
lret
stos
inc
call
lret
ljmp
daa
jmp
btr
push
sub
sbb
push
cmp
ja
bound
sahf
pop
push
mov
fiaddl
addr16
enter
jae
fidivrs
nop
mov
idivb
movsb
inc
bound
adc
mov
jecxz
mov
cld
cld
lods
push
xchg
das
es
pushf
outsb
push
jb
vpunpckhwd
popa
out
lock
push
int
mov
xchg
cmpsb
pop
push
stos
cmp
and
cmpsl
inc
jne
mov
pop
jmp
ss
sti
sub
mov
or
repz
xchg
xchg
inc
mov
outsb
testl
mov
pop
rclb
xor
gs
dec
adc
movsl
push
imul
cmpsl
pop
fnstenv
xchg
inc
xchg
adc
mov
xchg
enter
jle
mov
mov
nop
outsb
dec
mov
sbb
jle
mov
inc
push
mov
sub
cmp
enter
mov
cmp
lahf
out
cmp
cmp
push
xchg
xor
sub
scas
cmpsl
aas
call
jne
and
dec
add
mov
mov
movsb
insl
daa
inc
aam
movsl
or
aam
inc
and
pop
stos
fisttps
xor
xchg
xchg
out
test
push
pop
out
pushf
inc
fadd
add
pop
into
rolb
mov
cmp
in
out
sub
pop
jne
cmp
mov
ror
inc
sbbb
jno,pn
jmp
dec
insl
xor
or
adc
cs
out
in
dec
dec
mov
cmpsl
lods
adc
popa
xchg
add
rcll
push
jo
pushf
cmp
dec
lret
pop
jns
push
scas
or
int3
cmpsl
and
dec
out
data16
lcall
imul
mov
test
mov
das
ret
mov
push
mov
or
outsl
mov
sub
mov
cmpsl
inc
xor
lods
mov
mov
sbb
stc
loop
test
ds
inc
inc
inc
popa
push
mov
mov
jno
mov
test
mov
dec
cmp
or
xchg
or
in
out
or
aad
mov
leave
xor
fistps
test
and
push
mov
push
pusha
jns
sub
pop
fs
or
jno
fisttpll
mov
or
lcall
in
pop
int
cmp
mov
xor
in
xor
rclb
insb
ss
lock
cmp
mov
ja
jae
mov
lods
mov
dec
sbb
in
cmp
cltd
ja
sbb
or
xchg
movsb
jnp
cmp
sbb
shl
sahf
int
or
addr16
adc
mov
mov
xor
test
or
packsswb
pop
nop
pop
cmc
stc
dec
pop
sub
lods
push
or
mov
gs
sub
mov
pop
aas
fdivl
ds
push
mov
imul
mov
sbb
in
cltd
cmp
cmp
and
sbb
pop
or
adc
jnp
in
dec
fisttpll
adc
cmp
sbb
shrl
dec
rcr
pop
leave
jbe
sub
mov
mov
sub
adc
lahf
lret
sub
addl
repnz
andl
sbb
aam
fisubrs
xchg
xor
add
push
xchg
mov
in
xchg
mov
leave
or
or
or
mov
or
jne
dec
adc
inc
inc
fldl
inc
jae
mov
or
add
stos
hlt
mov
hlt
adc
mov
cmpsb
pop
mov
ficoml
orl
fldcw
rolb
push
mov
and
loope
mov
and
or
xchg
xor
fdivrs
adc
std
pusha
push
inc
dec
or
jo
dec
iret
push
xchg
lea
and
push
sub
gs
arpl
jg
mov
mov
rcr
xor
dec
dec
js
xchg
fsubrl
cltd
mov
and
test
jb
add
xchg
adc
jge
shl
pop
adc
push
mov
pusha
push
push
sbb
lahf
cmp
pop
dec
sarb
xlat
std
out
rclb
pop
fs
mov
sbb
mov
into
xchg
fwait
or
inc
imul
mov
fsubl
movsl
loop
mov
loope
jle
scas
sbb
outsl
mov
lock
loop
insb
fnstcw
adc
notb
test
loop
sbb
lahf
and
jecxz
mov
fwait
pushf
push
xchg
ja
inc
mov
lret
dec
loope
cmp
jns
xor
sub
fs
dec
stos
push
jl
stc
dec
loop
fwait
loop
imull
neg
xchg
dec
es
sbb
mov
adc
sub
or
mov
push
xor
jecxz
and
aam
inc
xchg
jno
repz
aad
leave
fnsave
jno
xchg
xor
mov
xchg
sahf
adc
outsl
inc
scas
aaa
add
xor
fsubr
repz
cmp
shll
fs
lahf
lock
mov
mov
clc
and
xlat
int
dec
stos
lods
inc
push
pop
inc
and
daa
adc
fmulp
inc
cld
mov
or
pop
xchg
mov
xchg
loopne
scas
push
jmp
scas
inc
andl
mov
adc
sub
mov
jnp
jmp
add
fsubrl
test
pop
pop
cmp
cmpsb
mov
out
pop
mov
cmp
push
por
sub
js
cltd
out
popl
movsb
fsubrs
push
mov
enter
xor
pop
inc
repz
cmp
scas
pop
inc
sbb
movsb
pop
add
add
lret
sub
sbb
push
fildl
dec
jmp
sbb
jmp
scas
mov
outsb
arpl
lahf
pop
or
push
out
aam
jo
mov
out
stos
xchg
lret
cmp
fbstp
mov
outsl
lock
addr16
xor
in
xchg
lret
lock
mov
loope
scas
sub
cmpsl
mov
jl
adc
mov
aad
stc
clc
test
mov
xor
pop
mov
inc
sbb
pop
lock
jae
push
or
shlb
std
cmpl
cltd
jl
fwait
out
enter
pop
jp
push
scas
je,pt
lods
push
fmuls
mov
add
add
dec
sub
lods
wrmsr
jbe
test
shr
call
xchg
cltd
mov
sbb
or
and
test
and
fidivrl
sub
jnp
leave
imul
movsb
cmp
adc
outsl
lds
inc
push
dec
inc
xor
ss
adc
fscale
pusha
mov
mov
and
ljmp
sbb
mov
stos
test
fmulp
rclb
cltd
inc
je
mov
fmuls
lods
adc
jmp
xor
sbb
xchg
and
stos
jmp
shr
ljmp
test
and
mov
ljmp
out
xor
mov
cmc
dec
sti
sahf
dec
sbb
dec
jmp
mov
cmc
pushf
cmp
add
bound
and
jg
in
push
repnz
push
loope
sar
adc
sbb
mov
and
mov
xor
jle
mov
ret
pushf
pusha
shl
adc
push
subb
enter
lahf
jecxz
xor
sbbb
arpl
cmp
mov
adc
test
adc
imul
mov
push
jno
imul
or
nop
movsl
lea
popf
dec
int
mov
cli
popf
or
mov
push
xor
cmp
mulb
sbb
rorb
cmpsb
stos
push
or
xor
testl
adc
jne
mov
in
xchg
cli
push
mov
push
bound
out
cmp
clc
out
push
mov
mov
or
nop
addr16
movsb
xchg
sub
lock
mov
push
pop
std
inc
lods
test
clc
mov
mov
sarb
andb
mov
push
xchg
fs
comiss
push
lret
jp
popf
cmp
sbb
shrl
incb
cltd
les
and
fidivs
and
mov
test
jbe,pt
lds
or
loop
jae
scas
fisubs
sti
mov
xor
sbb
imul
mov
dec
mov
sub
mov
pop
mov
mov
js
jle
loope
fisttps
pop
imul
lret
dec
push
add
push
sbb
mov
jle
or
les
into
arpl
adcl
xchg
dec
mov
sbbb
imul
mov
sub
xchg
cmp
imul
inc
shll
stos
loopne
jle
and
ret
rclb
pop
pop
aam
test
mov
das
jle
repnz
aas
jo
and
andb
pushf
cmp
ja
inc
sub
xor
mov
pop
roll
lcall
jne
xchg
add
xor
cmpsb
jo
lcall
ds
mov
ljmp
ficoml
enter
popf
pushf
and
mov
pop
and
fildll
fistl
mov
out
add
sahf
cs
lret
or
or
mov
push
mov
pop
sar
sarb
rcll
cmp
mov
and
repnz
addr16
stc
int
aaa
fiaddl
hlt
sbbb
and
or
inc
cwtl
rclb
cld
sbb
push
cmp
add
xor
nop
imul
mov
push
sbb
xchg
loop
mov
inc
inc
js
jno
in
fwait
pslld
imul
aas
adc
cmp
push
das
clc
jns
ret
out
cmp
outsl
aas
cmp
and
inc
sbb
adc
hlt
push
icebp
addr16
inc
ficomps
adc
mov
js
ss
lahf
sbb
ficomps
mov
test
dec
fildll
fldt
lret
pop
ror
les
mov
jno
ror
xor
inc
sbb
mov
gs
add
data16
xor
into
mov
ret
jmp
insl
or
ficomps
enter
mov
jne
adc
out
outsl
dec
stos
repz
inc
es
add
clc
mov
inc
xor
add
sbb
xchg
inc
xchg
cmpsl
incl
ficoms
mov
repz
dec
mov
aam
mov
mov
sub
jp
je
cli
cmp
iret
gs
or
lods
mov
enter
push
fnstenv
fbld
movsl
adc
test
mov
fiaddl
inc
mov
add
xchg
cltd
insl
pop
mov
sarl
iret
lods
or
lods
sbb
je
fiadds
aaa
adc
sbb
adc
test
out
jae
icebp
mov
jg
aas
gs
sub
iret
loope
fdiv
ret
and
mov
pop
add
jge
pop
in
stc
ret
push
loop
cmp
aas
rclb
pop
aam
mov
jo
xor
add
cltd
pop
jnp
js
mov
fs
fdivl
pop
dec
scas
lret
ds
lea
push
push
rcrl
add
dec
xchg
out
lahf
sbb
push
enter
mov
add
or
loope
xchg
cli
dec
push
aam
add
adc
inc
lea
mov
sete
lcall
cmp
fstps
xor
test
jmp
outsl
shrl
mov
call
xchg
cmp
mov
out
ljmp
ljmp
pop
push
dec
mov
cwtl
pusha
jo
ja
push
in
imul
dec
shll
dec
adc
loop
aaa
pop
cmp
call
jecxz
mov
in
xchg
div
loop
ret
fsubr
scas
jmp
add
mov
lret
and
incl
jmp
xchg
or
lock
adc
jnp
dec
jecxz
mov
mov
sbb
cwtl
icebp
std
imul
bound
xchg
cmpsl
icebp
xor
dec
rcl
arpl
fistl
stos
mov
sub
push
enter
imul
es
lret
call
push
inc
push
and
das
xor
jno
adc
or
jae
dec
sub
pop
ret
int
stos
lret
rcrb
mov
ljmp
ret
scas
sbb
fstl
mov
pop
outsl
add
imul
fdivrs
mov
jb
call
and
js
cmp
cmp
and
xor
and
insl
fwait
nop
lea
sti
and
mov
shr
sahf
mov
pop
jmp
cwtl
fiaddl
test
clc
jnp
adc
sub
xor
test
mov
fdivl
jp
movsl
inc
xchg
repz
fldcw
or
add
adc
push
sti
mov
ds
iret
into
test
aad
rcrl
ret
fbld
and
cmp
mov
adc
sbb
jl
xchg
dec
cmp
adc
test
scas
pop
es
cmpsb
add
or
adc
cmp
adc
dec
xchg
lret
imul
adc
sub
ds
dec
and
or
push
pop
out
js
addr16
jmp
outsb
fcmovnu
shlb
shlb
fstp
in
cmpsb
test
stc
shrl
or
fcoml
or
adcb
mov
lea
pop
mov
aam
push
lods
scas
and
push
das
lahf
test
test
jle
ss
fdivl
shl
cli
xor
pop
out
lcall
xchg
ljmp
imul
mov
lock
pop
jae
adc
stos
xchg
test
adcb
push
inc
outsb
aad
sub
or
fistl
popa
and
add
xlat
test
adc
inc
int
shr
insb
pop
jno
push
enter
pushf
aaa
test
das
fidivrl
dec
lock
xchg
mov
test
inc
popa
push
mov
ljmp
daa
rep
cmp
shr
xchg
add
ret
xor
aam
sub
repz
or
xor
add
cwtl
call
push
jo
int
push
jo
xor
push
notb
mov
fdivs
pop
gs
aaa
out
sub
pop
hlt
pushf
push
pop
out
jmp
stos
daa
ds
ja
addb
ror
jns
std
lock
dec
add
xchg
cmp
sbb
cmpsb
lock
dec
and
inc
push
xor
jmp
das
jmp
pop
adc
and
cmp
fwait
sub
mov
inc
adc
cwtl
push
dec
ss
cmp
and
xchg
mov
and
inc
cmpsl
shrl
xorb
mov
sbb
roll
roll
int
add
out
cwtl
aas
sbb
ja
into
out
stos
pushf
stos
sub
mov
xchg
mov
fdivrs
int
orl
icebp
push
sbb
iret
mov
sub
test
lahf
imul
mov
int
addr16
push
dec
int3
cmpsl
mov
outsl
adc
xchg
jge
mov
test
fimull
insb
lods
dec
lcall
mov
mov
or
sbb
int
popf
mov
xchg
inc
push
sbb
xchg
xor
out
dec
adc
roll
rcr
lret
mov
fucomi
push
cmp
sbb
into
sub
hlt
sbb
mov
fs
mov
mov
or
mov
dec
mov
iret
pop
jle
jnp
aas
cmpsb
shl
enter
push
imul
or
cmp
xchg
imul
inc
fs
cmc
gs
mov
xchg
xchg
mov
xor
mov
sub
imul
sti
dec
call
ljmp
rorb
in
repz
jnp
or
shll
insl
cmp
cs
subl
push
xor
pop
jl
sub
subl
call
mov
adc
cmp
daa
add
sahf
mov
sub
pop
mov
stos
sub
jne
insb
and
pushf
jns
test
add
lea
mov
cmc
dec
mov
mov
movsl
in
jb
sbb
lcall
loop
fisubs
xchg
inc
in
jae
pop
pop
lret
bound
loop
stc
out
sti
cld
pop
les
sub
scas
mov
adc
sbb
dec
jl
loopne
mov
pop
inc
mov
jp
push
test
sbb
mov
test
cmp
jge
in
xor
aad
shll
push
movsl
inc
movsb
sbb
and
cmp
repz
pop
out
dec
sub
and
add
jbe
pop
jb
aam
aam
rorb
sub
dec
xor
jno
loopne
hlt
inc
lods
cmpsl
add
int3
xchg
pop
andb
bound
adcb
cmp
idivb
jbe
rcl
dec
mov
stos
mov
adc
jl
stc
das
enter
lret
movsl
mov
shll
sbbl
lret
inc
and
lret
xor
call
mov
sbb
hlt
jmp
lds
mov
movsl
es
sub
sbb
jnp
sub
add
inc
dec
mov
or
dec
mov
jo
clc
addr16
mov
icebp
pop
pop
pop
out
sub
xor
sbb
and
inc
dec
pop
jg
fs
xchg
mov
jo
xchg
mov
dec
aad
pop
dec
or
call
sbb
dec
cmp
mov
test
fcomps
lret
mov
mov
and
ja
and
scas
adc
mov
jb
int3
daa
jp
ret
jmp
push
xor
jo
loope
ret
ja
aam
or
add
jge
loope
jl
dec
outsb
mov
jbe
and
mov
mov
jne
ffree
dec
rcrb
cmp
add
inc
push
inc
insl
pop
sbb
stos
xor
dec
stc
pushl
mov
cs
mov
repnz
lods
das
adc
rcrl
into
pop
cmp
xchg
enter
sbb
xorl
js
jb
adc
rclb
dec
in
leave
mov
mov
inc
fadd
iret
sbb
cltd
lahf
cmp
call
addr16
into
fldl
pop
push
iret
inc
mov
mov
pop
lret
lret
sub
ja
lret
add
std
jne
cpuid
mov
dec
fcoml
popa
daa
inc
push
rep
dec
adc
andb
les
sub
sbb
shlb
sub
pushf
mov
cmc
xchg
push
pop
in
sub
sub
add
fwait
push
mov
es
adc
out
iret
mov
pop
imul
push
cmp
cmp
add
into
lds
daa
or
outsb
rcrl
push
into
ds
dec
cmp
insl
mov
mov
aad
std
xor
sub
jecxz
in
cmpsl
lcall
rclb
and
dec
mov
cwtl
insb
sub
and
dec
dec
ds
pusha
dec
adc
sub
push
mov
push
cmp
repz
fcompl
cmp
cmp
mov
mov
mov
inc
cmovo
fwait
loope
pop
xchg
jae
inc
cmp
pop
jbe
enter
mov
and
cmpsl
push
pop
popa
mov
jbe
mov
sbb
and
stc
fstp
cmp
mov
mov
jmp
aam
repz
lds
push
mov
push
or
data16
push
enter
pop
jle
scas
rorl
sub
out
mov
xor
fldcw
dec
cmp
pusha
in
imul
add
rcrb
cmpsb
push
xor
sub
mov
xchg
cli
sbb
std
test
cmp
cmp
sbb
mov
pop
cmc
xorl
dec
pop
cmp
std
sarb
adc
aaa
inc
lock
jmp
fdivs
icebp
sti
and
mov
push
jnp
in
xor
les
imul
cmp
cmp
js
inc
push
loope
pusha
lea
call
mov
ss
xchg
sbb
notrack
push
adc
cmp
adc
dec
mov
into
add
xorl
es
movsb
or
ds
pop
mov
cmp
in
sbb
xor
mov
and
arpl
fmul
and
pop
in
mov
jecxz
repnz
fldt
jle
push
mov
fwait
cs
ds
out
imul
mov
sahf
sbb
lret
pop
fldt
jle
push
mov
fwait
cs
ds
out
imul
mov
sahf
sbb
lret
pop
xchg
outsb
xchg
jle
push
mov
xor
stos
ds
ljmp
sbb
lret
push
pop
jmp
cli
push
mov
fwait
scas
sub
icebp
inc
imul
stc
adcl
push
aam
les
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
push
xchg
inc
pop
adc
inc
cmpsl
xor
xor
lds
dec
push
xchg
push
test
push
xchg
inc
in
cmc
and
and
fstl
movsl
inc
xchg
push
test
iret
xchg
xor
add
aad
and
mov
mov
out
ret
gs
loope
xor
and
aad
ds
out
movsb
jle
sbb
xchg
inc
imul
into
lock
cmpsb
lock
mov
dec
ljmp
pop
sub
cli
dec
push
lods
enter
cmp
or
mov
fnstcw
dec
in
pop
and
aam
cmp
inc
mov
movb
bound
movsl
push
jns
in
fsts
xor
sub
les
push
stc
pop
mov
cmpb
aam
stc
dec
inc
mov
xor
sbb
or
mov
mov
xchg
add
adc
cmpsb
jecxz
jo
cwtl
scas
adc
jne
inc
jns
out
cli
stc
mov
test
xchg
inc
in
cmc
and
and
xlat
adc
dec
inc
lea
shll
or
cmp
sub
pusha
mov
dec
mov
xchg
push
jno
adc
cmp
sub
and
cli
xor
and
andb
lds
ja
pop
nop
jge
jo
cs
push
movsl
adc
push
fwait
test
cmp
and
and
aad
lds
jne
inc
xchg
push
test
push
xchg
inc
in
cmc
and
and
aad
lds
jne
inc
xchg
push
test
sub
stos
xchg
push
sub
mov
insb
lahf
xchg
fs
and
pop
int
rorl
mov
sub
insb
push
lcall
or
imulb
arpl
mov
and
sahf
xor
mov
dec
and
in
jecxz
idiv
dec
js
xor
or
mov
xor
lret
clc
xor
jge
es
decl
scas
arpl
jle
jns
or
in
jp
fdivl
mov
stos
inc
xor
bound
push
lahf
push
mov
repz
icebp
xchg
shlb
mov
sub
imul
jns
into
outsb
and
jg
push
inc
mov
mov
mov
rcr
leave
leave
mov
insb
jg
mov
ds
mov
bound
pop
inc
pop
sbb
shl
in
in
jmp
ficoml
shll
popa
mov
and
push
or
and
and
inc
push
pop
mov
mov
out
loopne
mov
xchg
mov
or
pop
dec
inc
cmp
xor
mov
xchg
lahf
mov
xchg
sub
mov
or
dec
les
int
xchg
adc
or
jo
mov
inc
adc
add
test
mov
daa
sub
mov
mov
test
jle
push
or
xchg
and
push
rcr
shlb
loopne
divl
mov
loop
hlt
adc
dec
adc
cmp
testb
pop
add
out
and
pop
adc
jbe
cmpsl
insb
loop
into
push
out
sub
inc
pop
pushf
imul
das
mov
mov
mov
cmp
iret
pusha
cld
fcmovb
rcll
and
lea
test
aad
mov
jp
imul
cltd
lods
dec
cmc
out
test
call
dec
pop
lock
ret
les
fs
xchg
mov
add
push
sub
jo
xchg
gs
fldl
xor
mov
mov
dec
adc
inc
das
mov
lret
push
pop
cmp
add
jns
sub
in
cmp
fcoml
mov
cmpsl
push
test
add
mov
bnd
out
cmp
sbb
lahf
pop
push
outsb
xchg
sti
aas
mov
cmpsb
sbb
or
ret
xor
imul
adc
mov
outsb
or
sarl
sbb
pop
popf
push
jo
push
into
inc
jae
out
outsb
jnp
bound
or
adc
sub
iret
or
outsb
add
and
adc
cmpsb
push
daa
in
insb
mov
add
iret
ja
and
sub
mov
push
lahf
iret
sbb
pop
or
lds
test
aas
xchg
mov
mov
hlt
or
sarl
push
jo
sbb
pop
sbb
addr16
jbe
mov
sub
imul
into
hlt
mov
sti
push
fs
push
inc
mov
lahf
je
pop
fsubrs
xchg
xchg
adc
or
enter
repnz
lods
lcall
cld
pop
testl
sbb
dec
mov
jecxz
mov
outsb
dec
sbb
lcall
test
pop
and
adcl
pop
xor
cs
pusha
lea
xor
inc
cwtl
mov
cmc
pop
pop
mov
add
xchg
movsb
clc
mov
mov
or
repz
lock
scas
xchg
jb
adc
test
cs
dec
pop
xchg
fstpl
arpl
loop
jp
add
jae
add
cmp
ljmp
movsb
lock
cmp
fstpt
push
cpuid
lret
xchg
adc
pop
lret
leave
repnz
aas
jne
inc
or
pop
mov
fdivs
lods
in
iret
popl
push
pushf
pop
or
fwait
scas
sbb
lea
fadds
aad
stos
hlt
dec
icebp
inc
dec
fdivs
mov
fistpll
test
sbb
dec
out
stc
pop
inc
xchg
sahf
jl
mov
es
lcall
mov
jge
dec
test
xchg
sub
mov
sub
xchg
js
ljmp
or
push
sbb
xor
data16
psraw
mov
fcoml
pop
push
push
add
movsl
dec
outsl
loopne
bound
repz
jge
mov
sbb
clc
fisttpll
lods
orl
loopne
sti
jns
sbb
ret
adc
fs
add
sti
pop
xchg
movsb
push
test
lret
xor
rorl
cs
ss
addr16
daa
adc
test
mov
add
push
push
push
add
xchg
shl
in
inc
sub
pop
or
sub
and
call
or
xchg
mov
xchg
pop
jb
cld
xor
push
lcall
outsl
pusha
mov
nop
pushf
outsb
pop
xchg
jmp
in
push
clc
call
outsb
or
out
sbb
lret
lea
sbb
icebp
outsl
inc
mov
std
gs
mov
outsb
loop
jge
js
imul
mov
aas
inc
aaa
mov
insb
ss
shl
xor
cmp
mov
jp
ja
imul
rep
adc
push
pop
cmc
mov
sbb
aas
jne
inc
xchg
jne
roll
mov
test
mov
push
enter
ljmp
pop
mov
cltd
push
stos
cmc
mov
cmpsb
cmp
ljmp
fwait
push
loopne
stos
out
push
mov
sbb
popa
ret
push
in
xchg
call
subl
lahf
loopne
push
std
pop
les
fwait
imul
inc
outsb
mov
adcb
or
and
data16
js
dec
lcall
ljmp
ds
mov
and
jbe
jecxz
insl
mov
mov
inc
jne
cmpsl
ror
scas
and
or
out
xchg
or
scas
adc
fs
cltd
jecxz
test
jle
sbb
jns
mov
dec
push
jno
lea
das
ds
push
in
add
rcrb
sarl
sub
jo
xor
adcl
ret
pop
xchg
clc
cmp
cltd
pushf
nop
pop
fcmovb
test
decl
mov
push
sub
push
push
jl
ret
fwait
sub
loopne
jge
pusha
adc
mov
pop
lret
stos
fimuls
xlat
inc
dec
mov
and
pop
jge
push
mov
and
dec
loopne
inc
add
jb
jae
jp
idiv
cmc
push
out
push
cmpsl
push
mul
push
insl
lret
pop
test
movsl
mov
cli
pop
mov
xchg
inc
push
call
sbb
mov
cmc
fwait
std
test
cmp
cltd
mov
cs
int
jmp
inc
mov
mov
push
or
clc
jns
je
xchg
outsl
aaa
icebp
fucomp
ret
pusha
enter
cld
pop
adc
fcomp
xor
icebp
dec
jne
insb
ljmp
mov
int3
push
push
arpl
fsubr
cmp
and
push
pop
push
lods
test
pop
sub
inc
bound
enter
cli
sub
mov
ljmp
cmc
sub
enter
sti
inc
inc
cmc
sbb
ss
pusha
and
ja
xchg
aad
add
dec
mov
mov
nop
imul
pop
jns
sub
xchg
js
add
xor
out
adc
out
aad
inc
dec
push
push
iret
lods
jne
adc
bnd
jo
dec
lcall
std
lahf
xchg
repnz
inc
mov
imul
daa
mov
ret
or
hlt
or
adc
mov
xor
out
adc
sbb
aas
loopne
pop
xor
sarl
mov
shll
sbb
sbb
jle
and
or
and
xchg
xchg
xchg
pop
fidivrl
cmc
sbbl
loopne
mov
sbb
sub
and
adc
xchg
out
pop
aaa
xchg
idivb
test
sbb
rol
jne
inc
dec
adc
mov
push
push
aad
mov
ss
sub
jecxz
cli
pop
aaa
insb
mov
and
mov
pop
cmp
mov
mov
and
push
loopne
xlat
fidivrs
ss
or
mov
das
xchg
int
sub
and
test
int
popa
bound
pop
push
in
aas
rcl
and
std
lods
push
and
decb
sub
adc
fwait
pop
dec
std
and
int3
scas
into
sub
xor
sub
pusha
inc
stos
lock
add
dec
dec
fistps
arpl
push
mov
fldl
cmp
mov
ds
pop
xor
ljmp
sub
xor
jnp
iret
fstl
shlb
int3
popf
jp
icebp
inc
mov
cs
xchg
popf
popf
mov
pusha
push
mov
inc
in
imul
orb
cmp
push
sbb
out
fs
xchg
xchg
jno
xchg
je
adc
out
xchg
and
scas
mov
mov
arpl
popf
pop
jo
mov
aam
std
mov
out
js
cmpsb
cld
push
mov
popf
xor
repnz
fidivs
cmpsb
inc
rol
inc
popf
inc
push
and
push
mov
jg
mov
or
mov
pop
push
movsb
clc
fisttpll
sub
fbld
pop
add
call
orb
insl
test
cmp
movsb
push
test
dec
jo
add
sub
mov
insb
adc
fucom
roll
or
pop
gs
outsl
or
push
push
ds
and
push
icebp
add
les
data16
movsb
lret
clc
in
dec
ljmp
xor
enter
inc
out
adc
sbb
push
hlt
pop
jno
popa
in
pop
sbb
jmp
jns
dec
je
lcall
mov
hlt
rorb
mov
mov
mov
cmp
cmp
daa
stc
jbe
rolb
cmp
iret
mov
push
push
clc
mov
enter
sahf
arpl
pushf
or
mov
mov
insb
add
bound
adc
push
xchg
mov
and
shlb
inc
pop
ljmp
cwtl
scas
pop
call
inc
cwtl
das
roll
fs
add
sub
enter
int
sbb
sahf
adc
aaa
mov
xchg
cltd
and
or
lret
add
es
aad
adc
aas
js
mov
mov
or
fnstsw
xor
jp
or
outsb
jp
or
scas
lcall
lods
pop
cwtl
rol
inc
pop
imul
outsl
adc
arpl
or
mov
repz
clc
adc
outsb
sbb
mov
aas
inc
sub
sub
or
les
mov
scas
push
in
xor
lds
stos
adc
cmpb
mov
hlt
and
pop
jl
les
jmp
push
dec
scas
out
loope
inc
lds
jg
or
fwait
push
or
fbstp
adc
ret
push
loope
add
cltd
stc
push
mov
push
out
js
ljmp
mov
icebp
std
jo
orl
out
mov
jne
jnp
ds
aas
mov
mov
jp
adc
mov
daa
mov
cmp
jae
lret
xchg
mov
test
popa
sub
sbbb
add
bndstx
push
shrb
pop
and
imul
and
rcrl
pop
aas
jo
dec
adc
inc
ret
out
cltd
and
adc
insb
adc
pop
repnz
mov
pop
jns
lret
pop
cmc
fstl
outsb
dec
bnd
push
lret
out
jl
mov
mov
test
std
addr16
mov
ret
lret
lock
mov
test
aaa
xor
inc
xor
or
sub
fiaddl
loope
push
or
outsb
loop
lret
add
xor
cmp
and
sbb
fildll
mov
or
mov
mov
nop
mov
jnp
shrb
shl
test
or
push
cmp
sbb
ljmp
ja
push
sub
jp
psrad
imul
sub
jae
aam
lods
call
lcall
inc
scas
pop
lock
dec
cld
aaa
cs
cs
add
sbb
cmc
popa
mov
mov
mov
and
jge
push
daa
push
movsb
lcall
sbb
mov
cmp
outsb
popf
jnp
in
filds
clc
lahf
lret
test
sub
pop
inc
lds
cli
jmp
cmpsl
and
cltd
inc
add
inc
mov
jb
sub
mov
mov
ss
lods
xor
nop
sub
negl
jae
ljmp
sbb
test
or
add
push
jb
add
lahf
mov
or
cli
loopne
mov
adc
testb
cltd
mov
adc
inc
inc
dec
inc
ljmp
mov
lret
pop
push
stos
js
push
arpl
cmpsb
mov
aaa
ds
insb
mov
popl
sahf
in
xchg
lret
add
mov
push
mov
daa
pop
mov
aad
in
mov
mov
shll
arpl
xchg
jne
out
je
ljmp
push
in
ret
push
cwtl
xor
push
addb
push
call
pop
mov
mov
lods
js
and
xlat
pop
dec
lcall
repz
sahf
stos
or
std
xchg
pop
mov
sub
inc
gs
xchg
in
les
push
adc
sbb
lds
cmp
mov
push
dec
and
ljmp
cmc
jle
sub
sar
aas
sbb
mov
inc
jp
sar
push
mov
mov
pop
mov
xchg
fs
lret
adc
adc
stc
xchg
cmp
mov
and
sbb
mov
mov
pop
arpl
xor
mov
gs
mov
adc
jns
jo
cmc
std
mov
push
mov
mov
fsubl
stc
das
and
aas
imul
or
dec
xchg
inc
inc
push
scas
cmp
les
mov
ja
mov
pop
push
cmpsb
mov
sti
test
rorb
mov
out
push
pop
mov
lret
das
or
mov
jbe,pn
adc
addb
pushf
mov
hlt
roll
sbb
popf
sbb
adc
ss
xor
pop
mov
sbb
ret
pushf
insb
cmpsb
lods
popaw
adc
bound
movsl
lods
sbbb
sbb
pop
test
outsb
lret
inc
addr16
jmp
clc
rclb
cld
out
xlat
jns
cmpsb
add
cltd
repnz
sbb
in
aaa
test
out
stos
or
ljmp
and
cmp
in
adcb
mov
fidivrs
test
mov
out
sub
dec
pushf
lahf
xor
sbb
mov
jmp
adc
leave
imul
imulb
xor
inc
stc
popf
jecxz
inc
sahf
mov
sbb
enter
into
pop
int3
and
xor
in
imul
xchg
mov
insl
xchg
ss
add
dec
xor
sub
repnz
dec
or
roll
mov
fldenv
jl
rol
pop
gs
pmulhw
pop
cmp
repz
pop
mov
inc
xlat
stc
xchg
repz
lcall
ficompl
mov
cmpsb
add
adc
inc
mov
lahf
out
int3
and
sahf
sbb
inc
adc
adc
loop
mov
push
neg
fistl
lds
mov
cmp
mov
pop
adc
stos
adc
cmpsb
dec
jns
rorb
cmp
hlt
cmp
mov
movsb
fs
testb
orb
aad
sbb
and
movl
movb
lahf
je
inc
dec
jle
fldenv
mov
aaa
jbe
and
lods
test
jecxz
pop
adc
and
jb
enter
mov
int
fs
std
cmp
mov
test
push
mov
push
pop
xor
frstor
pusha
cmp
aas
out
jmp
adc
lret
fbstp
cmp
jle
in
mov
ds
xchg
dec
adc
or
rcll
icebp
jbe
shll
icebp
and
insl
sub
out
cmp
aas
inc
mov
mov
sub
roll
dec
int
sbb
rcll
cmp
dec
push
fdivs
pusha
jb
sub
cmp
sbb
ds
cmp
mov
and
xchg
fbld
and
jmp
xchg
cmp
add
std
sbb
mov
pop
dec
sbb
inc
mov
divl
cmp
sbb
xlat
inc
dec
push
lret
xor
jl
nop
je
loop
cwtl
repnz
sti
stc
pop
sahf
dec
sahf
xchg
fsubp
shl
insl
push
rol
jnp
push
in
mov
fisubl
shll
cld
xor
sub
js
push
mov
and
les
rorb
test
and
mov
add
xchg
scas
sbb
cmp
test
sub
or
into
lret
push
sub
loope
lahf
in
movsl
call
push
adc
loop
sti
pop
mov
push
clc
rcr
sar
xchg
out
or
les
mov
or
push
mov
or
and
sahf
sbbb
rolb
outsl
adc
andb
push
and
daa
movsl
fcmovu
mov
push
xorb
cmp
sub
cwtl
mov
mov
jg
mov
lret
and
and
shl
stos
pop
pop
das
cli
sub
or
insb
and
mov
cli
mov
subl
mov
jno
arpl
mov
and
cmp
jge
cmp
xor
mov
push
pop
sarb
dec
enter
adc
pop
mov
jbe
test
out
outsb
dec
movsl
pop
jb
jo
push
jne
mov
mov
outsb
pop
pop
movsb
lods
lea
dec
pop
cs
cld
cwtl
dec
aas
inc
mov
lds
popa
pop
imul
ja
sub
lock
sbb
sub
xchg
jge,pt
cmp
enter
mull
add
pop
or
scas
repnz
shll
and
fldcw
loopne
dec
cmp
imul
sti
cwtl
xor
or
push
add
inc
out
lea
fdivrs
dec
cmc
push
dec
pop
adc
insb
mov
pop
push
ret
ss
dec
and
ja
pop
lea
lcall
insl
outsl
sahf
shrb
xchg
es
dec
lret
sti
mov
fcmovbe
adcl
mov
fstpt
sbb
inc
xor
xor
lds
jmp
sahf
lret
xchg
jge
jae
dec
aaa
mov
ljmp
jle
lea
test
outsl
dec
imul
jb
lea
jmp
mov
and
push
imul
xor
pop
mov
in
insb
mov
popf
mov
call
je
insl
ror
jg
les
lock
and
xor
xchg
push
or
cli
clc
cli
iret
int
inc
mov
pop
mov
inc
push
aaa
and
call
or
xchg
out
dec
scas
loopne
sbb
or
imul
cmp
aam
adc
lret
stos
aad
inc
cltd
aam
shl
imul
and
in
sub
outsl
popf
or
jo
je
mov
lahf
outsl
xor
or
mov
dec
insb
mov
adc
pop
inc
lret
sbb
std
clc
sti
jecxz
mov
pop
out
je
shl
out
pop
and
and
mov
pop
sub
xchg
outsl
and
mov
pop
sbb
xchg
and
fs
jmp
ss
pop
in
push
xchg
pop
dec
dec
lods
loop
sub
xchg
inc
adc
sbbb
cwtl
ret
and
das
mov
jl
xchg
pop
jbe
ret
jle
les
adc
inc
sbb
pop
cltd
lahf
push
inc
or
popa
mov
rcrl
loopne
in
xchg
cmpl
es
mov
jl
dec
or
inc
sbb
or
jo
fmuls
pop
fcoml
lods
test
daa
sti
xchg
and
mov
mov
mov
adc
jae
sub
addl
push
nop
pop
repz
push
xchg
ds
es
into
cmp
xlat
inc
int
daa
neg
add
dec
rclb
scas
daa
dec
cmp
or
xor
ret
push
stos
je
dec
and
lock
dec
lods
push
inc
mov
rcll
jbe
lret
popf
ret
hlt
pushl
sub
aas
dec
add
clc
aas
std
movsb
out
xor
sbb
mov
test
lret
lahf
test
push
cwtl
push
xor
mov
push
dec
pushf
nop
pop
add
stos
iret
cmpsl
push
sar
addr16
jg
sub
push
mov
fadd
mov
mov
pushf
xchg
adc
js
dec
jp
repnz
mov
dec
scas
adc
push
xchg
inc
in
cmc
and
and
aad
lds
jne
inc
xchg
push
test
push
xchg
inc
in
cmc
and
and
aad
lds
jne
inc
xchg
push
test
dec
xchg
inc
in
cmc
dec
lds
aad
and
aad
int3
gs
movsl
inc
pushf
push
popa
movsb
xchg
mov
test
cmc
and
and
aad
mov
int
fnstsw
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
and
xor
add
adc
test
stos
pop
jmp
test
xchg
sub
pop
hlt
or
jns
imul
adc
fnstenv
stc
push
jmp
test
xchg
sub
hlt
dec
les
imul
adc
fnstenv
stc
push
jmp
call
or
imul
js
lods
pop
decl
dec
cli
lods
or
add
push
jle
pop
mov
xchg
repnz
pop
test
push
fwait
and
cmc
test
imul
cmc
ret
pop
xchg
je
cmp
add
add
decb
push
test
jmp
mov
data16
outsb
mov
popa
fld
adc
sub
sbb
sbb
mov
inc
xchg
dec
fildl
jne
outsl
jmp
cmp
push
adc
add
jmp
or
js
cmp
sbb
jno
mov
xchg
leave
xor
out
sbb
mov
mov
call
mov
je
inc
stc
push
jmp
test
xchg
sub
pop
hlt
dec
les
das
gs
inc
pop
insl
jge
fs
mov
pushf
push
cltd
movsb
jne
pusha
test
inc
in
hlt
xor
fcoms
popa
mov
xor
cmp
push
jmp
xchg
inc
in
lcall
leave
xor
imul
mov
leave
inc
stc
push
jmp
test
xchg
sub
pop
hlt
dec
les
imul
adc
fnstenv
stc
push
jmp
test
xchg
sub
pop
hlt
dec
les
imul
cmp
sbb
fildll
add
outsl
pusha
ja
sbb
ffreep
fdivs
in
loope
fnstsw
and
jmp
or
and
lahf
shrl
mov
test
stc
pop
lret
xor
cmpsl
pusha
jmp
fmulp
js
daa
push
inc
and
pop
scas
aaa
mov
lods
cmp
ret
inc
out
mov
dec
push
mov
pushl
inc
out
dec
jne
xor
mov
jmp
lea
gs
jmp
jnp
pop
lret
int
inc
jmp
pop
xchg
call
jge
mov
cli
ja
movl
or
mov
jae
fistpl
incb
in
icebp
mov
pop
sbb
gs
int
cmp
cmp
pusha
js
fldcw
lcall
jb
mov
in
jne
push
mov
ret
inc
mov
push
and
push
push
dec
fwait
jne
xchg
pop
dec
mov
cld
or
push
push
je
int3
fsts
sar
cmp
mov
pop
or
xor
or
clc
nop
insl
test
adc
cmp
jecxz
int3
mov
and
arpl
stos
pop
stc
cmpsl
pop
mov
jns
pop
mov
and
jg
daa
lods
dec
imul
les
sbbl
into
cld
adc
outsl
cld
adc
adc
mov
in
subl
sub
xchg
mov
mov
sub
mov
js
daa
mov
mov
in
push
cwtl
inc
mov
shl
xchg
push
data16
int3
outsb
push
fldenv
mov
repz
in
rclb
movsl
jmp
jno
dec
push
ss
and
sub
rcrb
mov
push
std
imul
or
add
or
sub
mov
fwait
mov
daa
fsubrl
loopne
dec
pop
jno
call
in
and
daa
xchg
in
mov
repnz
push
test
out
sub
stc
mov
addl
hlt
int
dec
push
test
lret
es
push
sub
out
lcall
aaa
scas
jo
iret
popa
cli
xor
mov
inc
js
or
in
pop
xchg
aad
shr
out
outsb
inc
call
push
mov
cld
adc
ret
add
scas
mov
jae
out
and
aas
movsb
push
xor
ljmp
pop
jbe
and
jge
mov
sub
cmp
push
xor
jb
sbb
aas
and
add
inc
enter
sbb
sub
dec
jp
es
loope
mov
lret
stc
and
shrl
in
rolb
jle
shr
sub
jmp
and
ja
iret
or
xlat
dec
jle
cmpsb
lret
ret
jmp
and
es
stc
fstpl
dec
lcall
popf
fwait
je
inc
xchg
or
bound
inc
pop
mov
xchg
mov
repnz
shrb
nop
jo
xor
cmp
data16
inc
and
adc
or
xor
dec
imul
mov
jne
insl
lret
divl
jnp
mov
jle
mov
lcall
xchg
fistl
xchg
xor
repz
jmp
aad
cmp
adc
adc
jl
or
sub
mov
cld
std
jbe
fisubs
inc
push
lods
sahf
cmp
into
sbb
aas
xor
popa
sti
add
das
xchg
jp
pop
js
adc
push
fcoml
in
mov
push
out
sub
jmp
out
outsb
loop
cmpsl
ja
in
or
pop
jmp
lods
into
xchg
andb
push
outsl
in
sub
dec
dec
rorb
add
popa
push
icebp
push
outsl
movsl
andb
mov
jmp
xor
scas
nop
sub
das
mov
into
or
movsl
aas
loope
jbe
loopne
sub
pusha
sbbl
mov
popa
sahf
fistl
cmp
test
sbb
loope
mov
xchg
pop
push
dec
lods
cmp
shll
add
mov
jne
stos
xchg
popfw
aas
popf
icebp
xchg
dec
inc
hlt
sti
pop
movsl
add
jo
xor
sub
dec
shrl
js
dec
adc
and
mov
mov
cmpsb
or
call
jae
es
push
and
lods
add
out
adc
dec
and
adc
popf
int3
imul
pop
xchg
loope
mov
sbb
jns
test
ss
pushf
inc
es
cmp
add
add
push
pop
jno
sbb
add
outsb
sub
imul
jb
outsb
jo
jns
sbb
imul
test
out
aas
sub
xor
push
les
in
scas
mov
out
dec
fistps
mov
in
dec
movsb
pop
pop
cli
inc
cmp
orl
mov
movsl
jl
mov
stos
cmc
negl
ret
xor
mov
pop
movsl
adc
or
ret
call
pushl
mov
mov
test
insl
test
testl
xchg
stos
test
leave
les
and
repnz
sahf
add
es
jns
jnp
movsb
sbbl
ret
push
jno
adc
movsb
mov
add
cld
mov
popl
or
adc
iret
adc
pop
cmp
ret
test
les
mov
push
adc
adcb
repz
mov
cmp
sbb
subb
out
imul
jp
test
add
test
ret
jecxz
cwtl
inc
jb
lds
inc
and
push
fcmovnu
cmp
shrb
lock
pop
and
ja
xchg
sbb
dec
int
mov
or
sub
sbb
dec
and
loopne
aas
call
pop
mov
fdivs
fstps
stc
fbstp
loop
push
fcomps
mov
jp
fsts
sti
jns
pusha
fidivrs
sbb
das
testl
cmp
sar
adc
ss
add
push
movsl
test
loope
test
sub
cli
mov
mov
bnd
pop
ficomps
sbb
ret
mov
mov
push
cli
add
xor
cld
mov
push
pop
in
cmpl
fs
mov
cld
movsl
inc
jb
out
lea
push
mov
push
icebp
and
int
pop
fcoms
negb
cmpl
xchg
mov
shlb
lock
cli
out
mov
jns
mov
dec
mov
lods
add
dec
jmp
insb
pusha
mov
jg
test
sub
xor
push
push
adc
leave
stos
xchg
in
test
in
addr16
scas
jge
xchg
iret
cmp
mov
arpl
sub
cs
cwtl
imul
test
testl
jle
add
sbb
mov
mulb
adc
sub
in
outsl
sbb
sub
inc
sbb
jo
jle
and
xchg
lock
cmp
jb
fsubrs
dec
and
sbb
mov
or
mov
cmp
rcl
inc
inc
jne
cmp
mov
push
enter
xlat
dec
pop
jb
push
fldenv
sbb
inc
mov
sahf
xchg
dec
ljmp
xchg
fstpl
inc
add
mov
std
ss
mov
aaa
fsin
fiadds
shll
or
arpl
xor
int
pusha
int3
lods
lods
mov
push
out
data16
sbbb
imul
cmp
pop
mov
or
adc
aad
rcrl
xlat
aam
lock
dec
mov
ret
inc
enter
movsl
gs
add
sbb
sub
out
adc
cmc
dec
mov
scas
push
sbb
mov
pop
xchg
cmpsb
imul
mov
or
mul
aad
sub
aad
sub
fcmove
mov
mov
adc
sti
mov
jl
fnstenv
and
adc
cmc
sub
adc
subb
push
cmc
dec
mov
mov
sub
ret
mov
aaa
or
imul
jg
pop
test
cmpsl
lea
cmp
xlat
lea
imul
mov
push
cmp
aad
xor
daa
cmp
dec
fs
lret
fs
daa
jo
mov
jne
mov
dec
push
mov
jl
mov
sbb
xchg
sbb
test
iret
adc
and
push
mov
pushf
push
in
add
das
sbb
adc
mov
mov
sbb
mov
and
inc
or
pop
xchg
xchg
inc
cmpsl
jns
mov
mov
xchg
mov
bound
and
xchg
push
bound
cmp
xor
ds
sbb
jmp
repz
ret
mov
mov
arpl
add
mov
test
mov
and
cvtdq2ps
out
sahf
mov
lret
pop
das
fwait
mov
mov
fldl
lods
and
les
mov
push
loop
and
popf
push
mov
inc
jge
sub
cli
xchg
mov
fidivrs
out
fmuls
xchg
xchg
nop
ret
mov
cltd
mov
negb
addb
mov
jb
ss
lret
fcom
andl
add
loopne
or
sbb
rcrl
push
adc
xchg
or
out
jb
xor
xor
cmp
xchg
js
add
dec
adc
jbe
adc
movsb
jl
test
dec
scas
add
inc
push
iret
fstl
mov
xchg
rorl
pop
xchg
lods
cwtl
out
adcl
data16
mov
cmp
scas
outsb
clc
mov
lds
shlb
or
mov
or
fdiv
mov
jg
xor
mov
mov
pop
push
lahf
dec
xor
and
or
rep
pop
out
test
aas
fidivl
pop
inc
cs
pop
icebp
dec
inc
push
push
mov
je
lcall
dec
cmp
fistpll
stc
and
out
fsubr
mov
mov
bound
sub
xor
add
xorb
xchg
sbb
mov
mov
test
pop
stc
mov
cmp
mov
je
insl
lahf
xchg
lea
lods
rolb
ret
jno
mov
movsb
inc
lret
xor
push
xchg
subl
pop
cmp
sub
ror
xor
jns
mov
mov
lret
cwtl
mov
pop
pop
je
pop
aam
ficoms
sub
or
cmp
mov
pop
sub
cltd
sub
add
popa
push
mov
dec
lods
call
pusha
out
loope
loop
jne
jl
or
mov
mov
and
xchg
mov
mov
sbbb
test
test
jae
std
cmpsl
pop
sbb
push
negl
push
sbb
xchg
push
jmp
or
cmpsb
mov
sti
out
mov
jle
sbb
rol
cmpsb
pop
and
fisttpl
in
clc
xor
mov
jns
pop
mov
jecxz
fwait
push
outsb
cmp
setle
les
sbbb
jl
ret
iret
into
cld
in
lret
jecxz
dec
add
es
and
adc
jg
cwtl
aaa
cmp
inc
outsb
jnp
dec
movsl
cli
inc
outsb
aam
fwait
stos
outsb
pop
xchg
lahf
sbb
aam
adc
jmp
hlt
popa
xor
movsl
pavgw
mov
sbb
cmpsl
mov
daa
pop
and
or
cmpb
xchg
cmpsl
andl
clc
test
cmp
lods
xchg
jle
mov
add
dec
je
mov
jmp
jno
xlat
push
stc
xchg
call
and
and
cmc
jmp
fnstsw
mov
jae
cmp
adc
nop
gs
loopne
movsl
jno
cmp
loopne
ss
sahf
mov
hlt
nop
push
mov
xchg
lret
sbb
adc
imul
jne
push
sub
xlat
and
pop
lods
jge
sub
cmc
and
arpl
icebp
push
mov
imull
clc
pop
inc
pop
fcomi
outsb
je
dec
jl
jecxz
push
ljmp
mov
enter
jnp
inc
imul
cli
scas
push
mov
in
dec
inc
adc
push
jg
sahf
jbe
pop
add
xor
or
lods
adc
sub
adc
ja
lods
or
out
ffreep
push
cmpsl
adc
push
mov
cmc
lods
sbb
pop
cmp
mov
addr16
add
cmp
decl
lods
aas
pop
aad
xchg
stos
mov
mov
and
cmp
sti
or
adc
dec
push
jmp
ljmp
aam
cmpsl
stos
pop
lods
pop
mov
adc
mov
iret
iret
xchg
lea
dec
test
mov
clc
repz
add
out
test
pop
outsl
mov
mov
lret
xorl
adc
mov
aaa
lea
add
aam
aaa
adc
outsl
mov
jne
dec
andb
xchg
push
test
stos
add
stos
adc
jg
je
sbb
lds
scas
mov
in
jbe
je
int
loop
lods
inc
jns
leave
xor
dec
popf
ret
scas
add
inc
xchg
js
rcll
shr
sbb
adc
movsb
and
mov
push
and
dec
cmp
sahf
call
insl
xchg
mov
or
stc
and
inc
shlb
sub
pop
push
aam
push
cmp
mov
test
ret
test
and
hlt
imul
nop
adc
out
aam
mov
jo
inc
nop
mov
inc
cld
push
fs
in
lret
hlt
or
and
xchg
adc
leave
cli
mov
push
insb
adc
sbb
push
movsb
lret
inc
sarl
inc
lret
xor
mov
inc
xor
dec
pop
in
cmp
adc
pop
arpl
leave
adcl
cli
sahf
aad
adc
dec
jo
and
push
out
icebp
jle
cmpsb
loop
and
les
inc
adc
dec
pop
jge
dec
mov
push
push
dec
dec
mov
test
cli
mov
jo
pushf
fcompl
xchg
or
xchg
pop
incb
and
cmpsb
mov
test
jmp
hlt
mov
push
lcall
aam
cltd
push
jo
arpl
addl
inc
fxch
scas
call
fistpll
pushf
shll
mov
roll
or
add
mov
pop
repnz
pushf
rcl
roll
sub
lcall
pop
lret
or
or
movsb
inc
cld
sub
mov
mov
or
adc
test
xchg
cmpl
fstps
jne
rcrl
shll
fnstsw
jmp
jnp
push
sub
shr
push
cs
push
adc
dec
lods
les
pop
and
insb
ret
push
cmp
sbb
push
cltd
push
out
cmp
mov
lret
mov
mov
mulw
inc
mov
call
add
mov
pusha
push
adc
push
xchg
in
nop
add
or
mov
push
jge
sbb
mov
jp
xchg
xchg
or
pop
les
cmpsb
cld
call
test
xchg
mov
ss
push
fisubs
out
cli
lds
pop
sub
jle
es
cmp
test
jmp
inc
out
icebp
popa
and
mov
cmp
and
cwtl
test
inc
test
rcll
mov
lods
or
mov
inc
and
std
mov
adc
lock
sub
xchg
mov
ds
popf
in
jp
fstl
inc
clc
or
xchg
jl
out
insb
push
sbb
adc
xchg
cs
xor
std
xor
fimull
inc
jle
pop
es
mov
xchg
mov
insb
popf
add
mov
ss
pop
sub
sub
int3
and
cmp
jecxz
int
xchg
jge
xor
add
pop
inc
jmp
imul
mov
fbstp
xor
sbb
xchg
les
and
xor
daa
sahf
jmp
lret
inc
jmp
js
xor
imul
ficoml
jns
insb
mov
dec
xchg
lret
sar
add
add
enter
cmpsl
jge
xchg
push
xchg
pop
ret
pop
lea
cmc
test
or
insl
lret
mov
mov
lods
mov
iret
xchg
jge
cs
mov
mov
add
lea
test
mov
js
and
push
mov
pop
jmp
fsubrs
xor
mov
sub
in
add
in
stos
cmp
fldcw
adc
fadd
jge
adc
dec
and
sbb
adc
ljmp
or
cmpl
inc
push
stos
rclb
mov
in
xor
das
pop
mov
xchg
dec
or
xor
jae
add
jp
mov
add
int3
xchg
mov
mov
jecxz
std
adc
std
out
les
in
ficomps
or
pop
mov
fsubl
dec
or
mov
icebp
dec
fmuls
aad
fwait
pushf
mov
stc
mov
sbb
in
add
fcompl
or
push
mov
test
sarw
test
add
je
lea
cmp
push
inc
sub
rol
pusha
inc
push
mov
sub
fidivrs
push
jb
xchg
push
cltd
fwait
mov
icebp
hlt
into
outsb
daa
ljmp
movsb
movb
aaa
je
jmp
pop
pop
sahf
dec
and
hlt
repnz
mov
pop
jbe
insl
lahf
jle
cmp
jbe
sub
sub
mov
and
sbb
jae
jne
mov
aam
and
sbb
iret
add
ljmp
xor
mov
sub
adc
sub
or
mov
ret
std
mov
rcrb
vmovaps
pop
xor
mov
push
cmp
add
stos
mov
icebp
and
in
inc
adc
fsubrl
pop
test
xchg
mov
into
add
leave
push
sti
mov
mov
mov
inc
outsl
les
mov
xchg
pop
imul
sbb
cli
pop
sbb
jle
subb
mov
mov
testl
lret
add
adc
mov
and
add
loop
mov
imul
mov
xchg
sub
mov
jns
xor
addr16
clc
lea
ret
xlat
mov
jae
push
inc
inc
and
fstpl
mov
cmp
pop
sbb
and
out
jnp
fisubs
rcr
popa
sarl
sbb
imul
dec
dec
cmc
sti
pop
jecxz
push
mov
inc
pop
in
mov
fwait
call
lods
cmp
jno
mov
mov
cwtl
outsl
sub
sub
leave
pop
push
test
int
in
xchg
or
lret
adc
sarb
jge
shll
jl
mov
inc
jbe
mov
jle
mov
mov
addb
mov
andb
bound
pushf
nop
gs
ror
mov
repz
das
xchg
hlt
cli
int
je
fsub
ljmp
inc
movsb
pop
divl
roll
push
jecxz
push
in
dec
inc
dec
call
sbb
das
jl
mov
adc
mov
ja
sub
loop
nop
out
aas
push
mov
out
insb
ds
sti
mov
test
pop
jecxz
fisttpll
mov
hlt
pop
aaa
loopne
fwait
cmp
mov
lret
add
cmpsl
push
sub
pop
pop
subl
bound
loop
sbb
shl
je
and
sbbb
adc
pop
xor
lea
int
and
stos
adc
jge
add
xor
mov
push
test
mov
jbe
lds
aam
cli
push
push
sbb
shll
push
cs
je
and
fs
add
adc
ljmp
ja
mov
ja
adc
adc
cltd
fdivr
es
sbb
mov
add
jp
jecxz
mov
sub
aaa
imul
mov
sub
add
pop
cmp
mov
lret
mov
lock
out
sub
int3
or
jge
push
push
fiadds
xchg
enter
lea
push
fdivrs
clc
or
stos
xor
int
cmc
ficompl
adc
fnstenv
stc
push
jmp
test
xchg
sub
pop
hlt
dec
les
imul
adc
fnstenv
stc
push
jmp
test
xchg
sub
pop
hlt
dec
les
imul
je
inc
clc
aam
movsb
sbb
in
hlt
dec
les
imul
adc
fnstenv
jns
push
movsb
out
mov
xchg
roll
daa
lret
aaa
and
adc
add
push
adc
xor
pop
inc
movsb
mov
test
test
in
xlat
les
xor
and
adc
add
je
fs
push
push
inc
cmpsl
mov
movsb
xchg
xor
aam
les
sub
pop
sbb
inc
dec
push
pop
cmpsl
push
xchg
sahf
mul
repnz
mov
mov
push
dec
pop
pusha
jle
push
lret
outsl
aas
pushf
das
lea
jl
das
sub
gs
pushf
ljmp
fidivrs
dec
jns
push
mov
aam
mov
lret
pop
mov
xor
movsl
lea
or
xchg
sub
add
in
in
sub
les
adc
adc
xor
push
mov
in
pop
data16
jnp
cmpsl
negl
aas
pop
pop
scas
je
mov
sub
in
push
push
cwtl
mov
cmp
test
aam
cmp
cmp
les
dec
cld
test
outsb
inc
leave
loopne
repnz
cmp
xchg
add
aad
in
aaa
xor
add
push
addr16
fs
dec
push
pop
cmpsl
lods
mov
xchg
div
aam
mov
inc
adc
sbb
sub
shrl
xlat
fst
fdiv
rcl
popa
cltd
mov
mov
dec
inc
and
fs
add
pop
cmp
add
adc
aad
rol
cli
loopne
adc
mov
inc
inc
jne
jno
sbb
inc
push
push
inc
cmpsl
mov
movsb
xchg
in
aam
les
xor
and
adc
add
je
fs
push
push
inc
cmpsl
mov
movsb
xchg
in
aam
les
xor
mov
mov
test
pop
call
fs
mov
mov
int
stc
data16
cmp
insb
rcll
xor
pop
sbb
roll
insl
push
or
push
push
cmp
ja
addr16
or
push
mov
mov
jmp
daa
les
arpl
jo
nop
stos
or
nop
lods
push
mov
aad
xor
push
notl
jg
sahf
jle
sbb
hlt
and
imul
sbb
ret
mov
xchg
loope
inc
lds
ljmp
inc
js
imul
test
xor
cld
jp
cmp
cltd
cmpsl
push
mov
dec
cmpsb
sub
imul
inc
sub
push
sub
movsb
xor
push
frndint
leave
jnp
mov
cs
jne
inc
in
lea
roll
mov
inc
pop
pop
push
xor
lock
adc
test
mov
push
mov
gs
scas
fsubl
pop
lret
repz
ljmp
dec
jle
push
fnstcw
shl
mov
fneni(8087
pop
and
mov
mov
or
sbb
dec
std
js
sbb
cmp
loopne
dec
daa
stos
fnsave
sub
cwtl
adc
imul
pop
pop
mov
cld
daa
xchg
push
jp
cmp
fwait
data16
cmp
inc
fwait
sahf
fdivl
add
stos
push
scas
addb
sti
fiadds
add
pop
sub
mov
sub
shll
jl
in
lock
test
pusha
orb
pusha
cld
in
push
mov
inc
pop
mov
clc
stos
mov
add
sub
xchg
xchg
sub
or
add
fwait
and
jae
arpl
push
dec
clc
mov
cmp
insl
aaa
shl
push
push
push
jns
inc
xor
dec
cmp
fwait
dec
call
xchg
dec
sub
pop
mov
aad
mov
inc
outsb
dec
mov
andl
fisttps
inc
xor
orb
std
incl
cmp
push
inc
dec
and
bound
push
movlps
out
repz
aam
mov
sarl
insl
cmp
stos
ss
push
popa
pop
ret
cmc
ss
cld
fiadds
loop
call
jp
jp
push
int
ds
ret
lods
dec
popl
pop
jmp
xor
cwtl
and
gs
repnz
loope
sub
or
lods
add
addr16
mov
mov
xor
cli
xor
add
repz
repnz
lea
sub
aam
mov
rorb
mov
int
cli
data16
or
xor
hlt
sub
cs
inc
rcll
push
mov
mov
call
icebp
inc
dec
scas
and
or
adc
xchg
sub
push
outsb
pusha
pop
sub
je
jp
cltd
mov
and
cmp
adc
and
pop
inc
push
inc
imul
cmp
push
mov
add
movsb
pop
addr16
lds
sahf
sbb
aas
sub
shll
adc
test
lcall
or
popa
lret
sbb
decl
push
into
shrb
inc
xchg
mov
xor
negl
jge
out
loop
xor
mov
xchg
or
ss
sub
mov
xchg
adc
xchg
out
pushf
jns
popa
roll
out
and
outsl
fisubl
cmp
out
ds
jg
adc
dec
and
xchg
mov
mov
sbb
fstps
mov
in
xchg
bound
in
push
aaa
and
out
xchg
into
adc
push
push
mov
push
mov
jg
ja
adc
xchg
cmp
jp
call
repnz
cwtl
sub
adcl
mov
fiadds
sbb
das
insb
sbbb
lret
mov
mov
je
adc
mov
sub
xor
pop
inc
pop
xor
jecxz
rcrb
cmpsl
sbb
rcrb
cmp
cmc
loope
mov
mov
out
sbb
sub
test
inc
pop
jne
mov
and
or
add
pop
push
in
in
outsl
dec
pop
mov
in
mov
int
outsl
aad
jg
sub
ds
dec
sbb
test
call
outsb
data16
dec
push
ds
gs
cwtl
stc
cld
in
ret
dec
inc
add
das
sub
icebp
cmp
jp
mov
push
ror
sarl
add
add
push
xchg
stos
xor
add
cld
iret
cmpsl
out
xchg
push
sub
jae
cwtl
dec
mov
push
pop
mov
sub
jmp
add
cmc
stos
sbb
fnstcw
dec
leave
and
mov
or
pop
xchg
adc
sbb
add
popf
ljmp
nop
xchg
mov
mov
xchg
mov
sbb
xor
loop
dec
imul
xor
mov
xor
aad
mov
push
lahf
dec
stos
xchg
fsts
push
ret
cs
mov
sub
sub
push
dec
in
sub
sub
mov
enter
adc
jne
enter
inc
pop
mull
add
test
mov
or
add
fldenv
mov
fdivl
and
push
and
cmp
push
cmp
jne
scas
jbe
or
cmc
test
mov
mov
es
jmp
mov
jb
fsts
pusha
or
jmp
rorb
ljmp
cwtl
pop
xchg
insl
jnp
les
sbb
ret
sub
cmp
mov
arpl
ret
iret
mov
and
rcl
aad
mov
pop
int3
fimuls
adc
icebp
aad
mov
push
cmp
push
gs
push
add
push
fldcw
jle
pop
adc
dec
imul
jnp,pn
or
ja
push
inc
cmpsb
mov
addr16
out
lahf
adc
out
out
sahf
test
outsl
xor
inc
addr16
out
ret
std
ds
sbb
or
test
xlat
add
dec
je
repz
loopne
in
aam
aaa
sbb
cmpsb
addr16
dec
imul
ja
movsb
das
repnz
icebp
mov
sbb
cs
loop
movsb
sub
mov
jmp
add
xor
adc
imul
fistpll
arpl
mov
cmp
add
xchg
xchg
and
jp
push
mov
gs
insb
sbb
sub
std
adc
cltd
mov
idiv
xchg
cmp
and
daa
jl
mov
mov
out
loop
jb
cmp
cmp
inc
or
enter
jl
rol
mov
mov
mov
fisttps
insl
lock
ret
jo
jg
daa
jo
adc
fiaddl
lds
push
scas
loop
clc
adc
push
shl
loop
pop
cmpsl
inc
add
add
or
mov
dec
cmpsl
das
cld
dec
push
xchg
test
ficoms
mov
sti
mov
daa
pop
inc
xchg
in
fdivl
inc
cmp
aam
movsl
mov
out
cltd
subb
cmp
pop
xor
roll
rcrl
sahf
push
push
lea
arpl
cld
jbe
xchg
add
rcl
dec
loope
xor
push
outsb
sub
mov
js
or
inc
sti
or
mov
xor
jbe
divb
jge
dec
sbb
int3
xlat
scas
xor
nop
je
jns
adc
xor
xor
push
std
cmc
cmp
push
push
enter
out
push
mov
mov
in
mov
and
repnz
cmc
mov
jo
fs
addr16
dec
idivl
inc
sub
jns
enter
cmpsl
pop
rclb
popa
mov
fwait
popa
lret
sub
in
jge
sub
cs
jmp
ret
in
into
jmp
dec
fmul
and
cwtl
mov
aam
mov
sub
cli
xor
adc
add
scas
lds
and
ds
fistps
or
incl
fdivs
scas
sarl
adc
stc
or
fwait
push
pop
sbb
adc
aaa
add
outsl
roll
mov
fs
ss
push
stos
imul
cmp
xchg
std
xor
out
mov
xor
xchg
cmc
xchg
lea
out
pop
and
pop
jmp
lea
fdivrp
cmp
popf
lods
bound
fdivs
add
inc
in
cmpsb
fimull
mov
loope
xchg
and
mov
je
mov
ficompl
mov
jnp
loop
lret
in
mov
loop
cmp
mov
fistl
fistpl
pop
mov
fistps
pop
inc
mov
sub
cwtl
mov
daa
and
iret
adc
iret
inc
or
xchg
in
aad
test
jno
pop
mov
mov
or
or
iret
fnstsw
inc
push
jecxz
pop
imul
sahf
outsb
sbb
ret
sbb
repz
aam
jno
sbb
cli
sub
imul
xor
mov
gs
xor
cmpsl
test
test
test
pop
xchg
lock
push
adc
and
mov
movsb
arpl
enter
pusha
cmp
and
popf
shlb
fucomi
sbb
testl
dec
pushf
jle
dec
xchg
mov
int3
sbb
sahf
daa
fldcw
mov
cwtl
fldt
mov
jno
pushf
sub
lea
cwtl
pop
or
andl
stos
jb
sbb
xorb
loop
pop
adc
clc
add
mov
xchg
shl
rcrl
ror
rcrb
pop
mov
mov
dec
xor
pop
xor
into
and
mov
xor
mov
fadds
lds
xor
rorl
mov
jnp
loopne
in
jo
sahf
dec
cmpsl
stc
xchg
fdivrp
xor
push
cwtl
inc
hlt
cltd
insl
lds
sbb
fs
ret
sarl
jnp
mov
loope
adc
les
scas
ret
jnp
iret
add
and
mov
xor
pop
xchg
shld
adc
xchg
sub
push
iret
adc
sub
sub
pushf
testb
push
fidivl
jnp
push
stc
daa
jle
sbbl
push
xor
sahf
push
mov
jl
sbb
sti
repz
push
add
pop
or
dec
jae
sbb
daa
push
adcb
cmp
push
pusha
mov
int
push
lahf
fadd
jecxz
enter
mov
cwtl
mov
fsubs
or
xlat
push
add
sub
fdivrl
retw
and
inc
into
fs
cmpsl
dec
lea
cmc
or
loopne
stc
pop
out
dec
adc
stos
enter
shlb
out
adc
jl
icebp
xchg
dec
fdivrl
jbe
es
dec
sub
movsl
in
jno
cld
add
addr16
mov
movsb
je
sbb
cli
sub
inc
mov
inc
ret
into
xor
je
and
mov
scas
cltd
aas
push
pop
inc
out
das
mov
ja
sbb
movsb
into
into
mov
lcall
out
adc
in
ss
mov
jp
fld
xor
fildl
subl
cmp
cmpsb
sbb
les
int3
xor
sbb
sub
sub
xchg
or
dec
loope
mov
inc
inc
aaa
lahf
mov
pushf
mov
push
pop
or
cmp
daa
jnp
movl
jns
jecxz
jmp
pop
les
xor
sti
xchg
cli
inc
jnp
mov
or
mov
popf
movsl
sarl
in
sti
xchg
dec
mov
addr16
outsl
popa
ret
shl
xchg
or
mov
inc
ds
cmp
xor
mov
dec
mov
cs
out
pusha
iret
mov
test
fcoml
rolb
scas
and
icebp
mov
push
mov
je
out
adc
adc
sbb
cmp
push
and
mov
jns
mov
lahf
ret
inc
stc
lcall
dec
cmp
lods
mov
daa
sarb
in
ss
add
cmp
decl
call
fdivrs
xor
cmp
pop
int
add
jno
fstpt
fistps
jne
fstpt
mov
or
xor
pushl
jbe
jmp
add
and
pop
mov
pop
push
outsb
mov
pop
mov
dec
jnp
test
and
dec
fstps
push
icebp
pushf
fistps
pop
clc
cmpsl
sti
cmpsb
cmp
add
popf
mov
aad
jg
adc
bound
xor
dec
sub
mov
sbb
jge
jmp
lock
push
push
sub
mov
lods
jge
dec
fisubl
mov
pop
push
in
cmp
or
cmp
imul
add
mov
mov
xchg
add
and
xchg
or
inc
cmc
in
add
and
xchg
adc
push
popf
dec
mov
push
ror
scas
push
jecxz
mov
mov
aaa
movsl
mov
or
in
stos
ficomps
stc
xor
adc
cmc
fsubrs
es
xchg
out
enter
sbb
popa
repnz
and
or
repnz
test
mov
mov
out
enter
ret
mov
imul
es
bound
mov
daa
insb
pop
mov
aam
es
negl
fstpt
call
push
call
pop
inc
in
cmpsl
or
push
enter
jmp
loopne
push
fcom
das
fnsave
xchg
aad
mov
jo
add
adc
ret
cmp
sub
jge
insl
ja
add
sub
shrd
sbb
out
jmp
int3
imulb
leave
fsubrl
push
push
push
sub
jmp
jae
movsl
sub
cs
pop
jecxz
push
mov
push
jbe
stc
dec
or
inc
loope
add
stc
les
or
movl
mov
clc
pop
xor
and
xor
jle
test
fs
mov
inc
in
jl
in
sbb
mov
or
dec
pop
cmp
pop
cmpb
repz
mov
cmp
mov
inc
xor
subl
leave
insl
dec
fsubrs
repnz
arpl
fsts
test
scas
xor
sub
lods
jbe
add
lret
dec
push
in
loop
mov
jp
dec
xor
or
mov
lock
sub
rclb
mov
sbb
imul
and
adc
jle
data16
mov
adc
cmc
jl
notl
ljmp
inc
call
add
adc
fwait
sub
data16
and
test
in
mov
loope
cli
cmp
in
jnp
push
test
mov
test
sub
mov
mov
mov
sbb
testb
out
jnp
scas
dec
add
ret
loop
in
pop
mov
mov
sub
call
add
imul
add
add
vpgatherdd
loop
pop
nop
scas
cmpsb
adc
lcall
mov
aaa
mov
cmc
in
lock
ficompl
jecxz
sbb
add
ja
add
lret
xchg
jg
mov
push
push
inc
jbe
fnstsw
insb
int3
loop
cmc
into
cli
repz
cmpsb
sahf
jl
nop
fcom
inc
add
and
dec
cmp
sub
out
and
mov
xlat
mov
movsb
mov
and
sbb
pop
jbe
aad
aaa
mov
inc
mov
xor
mov
jmp
sarb
or
mov
bound
lea
add
inc
cmp
add
cmp
inc
xchg
out
lds
push
pop
icebp
roll
lea
sarl
cwtl
sub
pop
std
xchg
inc
scas
jecxz
jmp
pop
cwtl
or
out
and
mov
addr16
ljmp
adc
xchg
push
mov
or
and
or
mov
ss
arpl
das
pop
inc
cmovns
mov
sar
jmp
xor
repz
aam
push
push
cmp
mov
jo
movsb
adc
seta
int
sub
jbe
jne
mov
ficoms
jl
and
push
add
xchg
loope
push
mov
mov
dec
lcall
inc
adc
fs
sahf
ljmp
shll
mov
sub
xor
ds
adc
cmp
scas
cmpsl
inc
dec
daa
xor
test
xchg
iret
sahf
lret
das
push
adcb
cmc
jg
movsl
jbe
inc
imul
fdivs
lahf
mov
sbb
cltd
dec
pop
sub
dec
fimuls
loop
and
test
add
into
sbbl
addl
mov
xchg
fs
xor
ret
stos
sahf
jg
sub
pushf
dec
std
nop
or
ror
lea
xor
ljmp
pop
in
jge
into
aaa
adc
xchg
push
in
push
jg
outsb
adcb
enter
sahf
adc
push
sub
inc
insb
cmpsl
pop
add
jne
cmp
test
ja
mov
mov
mov
jg
mov
cmpsl
push
xchg
mov
mov
adc
push
xor
nop
mov
xor
pop
pusha
and
scas
ja
xchg
mov
adc
xor
xor
lods
mov
cmp
mov
pop
or
pushf
pop
lds
pop
add
push
and
stos
lea
mov
imul
pushf
into
and
cmp
pop
in
mov
mov
push
loopne
setb
dec
test
mov
rolb
pusha
xlat
ljmp
jns
jl
insb
sahf
inc
sub
inc
mov
cwtl
push
ss
fwait
push
fcom
lahf
xchg
std
paddusb
pop
or
leave
and
xchg
jne
cmp
add
cmc
and
nopl
jno
sbbl
dec
sub
adc
dec
adc
int3
push
sti
jmp
fistpl
int3
sub
lcall
mov
and
and
insl
cmp
imul
imul
in
in
xchg
cmp
jb
push
cmpsl
insb
cmpsb
cmc
bound
or
fwait
mov
mov
cmp
push
adc
or
lods
imul
addr16
push
sub
or
add
mov
enter
mov
mov
aad
pop
jle
aad
inc
shrb
jg
and
adc
jge
imul
ljmp
and
inc
adc
mov
sbb
jmp
mov
adc
fsubp
lods
xor
insl
xchg
mov
push
xchg
push
lock
outsl
cli
data16
xchg
cli
push
mov
mov
add
stc
aaa
cwtl
in
insb
pop
mov
into
movb
rol
jle
incl
cmp
adc
jg
in
adc
das
or
rcll
or
push
or
mov
clc
inc
addr16
mov
daa
andb
inc
xor
dec
or
aaa
aas
fisubrs
add
adc
adc
lcall
xchg
in
mov
lahf
test
in
jb
bound
out
mov
faddl
sbb
push
or
jl
mov
sbb
cli
call
inc
daa
dec
aaa
push
out
inc
mov
mov
in
inc
jns
dec
xor
or
mov
jbe
mov
xchg
imul
cmpb
sbb
lret
pop
jo
sbb
mov
rcr
je
out
test
xchg
les
dec
cmp
xchg
mov
dec
imul
dec
daa
std
jmp
orb
aas
add
fiadds
rcrb
out
mov
pop
add
pop
aam
jmp
sub
mov
ss
inc
xor
je
jecxz
lock
jle
sar
xor
jo
ljmp
cld
out
fmull
mov
mov
jns
mov
cmp
xchg
mov
inc
and
dec
scas
pop
out
and
movsb
movsb
xchg
cltd
cmpsb
sti
les
mov
shrl
add
jne
cmpl
sbb
div
pop
xorb
icebp
das
push
xlat
jb
lcall
sbb
in
jb
outsb
sti
push
lock
mov
loop
repnz
lods
mov
pop
xor
push
aaa
fidivrl
inc
dec
dec
clc
mov
jnp
and
fwait
jge
insb
fnsave
adc
inc
mov
jbe
pushf
out
fdivrp
mov
rcrb
stos
cwtl
rorl
mov
lds
push
mov
dec
cmpsl
outsb
ja
cmp
pop
add
je
fs
push
push
inc
cmpsl
mov
movsb
xchg
in
aam
les
xor
and
adc
add
je
fs
push
push
inc
cmpsl
mov
movsb
xchg
in
aam
les
xor
and
adc
add
je
fs
push
push
inc
cmpsb
mov
movsb
xchg
in
aad
les
xor
and
adc
add
je
fs
push
xlat
inc
pop
mov
push
sub
jl
sbb
sub
cmp
lahf
push
outsb
xchg
or
outsb
pushl
loop
pop
das
mov
sahf
pmaxsw
ljmp
ds
bound
jle
dec
fistps
scas
aas
mov
clflush
outsl
into
sbb
int3
scas
pushf
lahf
jo
push
out
push
fistps
lret
das
out
sti
jne
sub
jb
push
lock
push
jle
xchg
add
lea
rorl
mov
push
fimull
mov
fwait
jo
jl
adc
pop
xlat
lret
push
bound
into
mov
shl
jnp
jnp
or
cmpsl
jb
ds
lahf
insl
and
ret
fistps
scas
push
mov
push
sub
push
repnz
xchg
jle
mov
pop
xor
loopne
pop
adc
faddp
rcrl
push
sbb
cli
dec
mov
cmp
iret
stos
outsl
xchg
mov
mov
jbe
mov
das
popf
dec
mov
push
arpl
test
dec
fisttpll
mov
push
out
dec
iret
push
pop
scas
jg
outsl
cld
pop
fisubs
inc
rorb
mulb
add
pop
lahf
scas
pop
in
pop
jmp
sti
dec
pushf
push
nop
sbb
pop
mov
lods
jl
jg
pop
mov
mov
inc
in
pop
mov
pusha
xchg
sbb
add
cmp
cld
outsl
testl
dec
fistps
scas
aas
mov
pmaxsw
outsl
into
pop
fimuls
mov
push
outsb
jle
dec
fistps
scas
aas
mov
pmaxsw
outsl
into
pop
fimuls
mov
fmulp
mov
mov
dec
jno
xchg
push
sub
ds
pusha
data16
ljmp
push
inc
ret
gs
pop
stos
out
shll
fisttpll
xchg
fdivr
cmp
cmpsb
mov
sub
sub
dec
js
aam
subl
lds
mov
mov
cmp
pop
adc
mov
jae
cmp
dec
pop
popa
push
lods
xchg
jle
dec
js
pop
out
roll
aad
xor
sub
mov
fnstenv
inc
loope
sub
add
roll
xchg
insl
fisubrl
movsl
pop
and
nop
mov
subb
arpl
cs
orl
ja
loope
mov
mov
aas
test
push
mov
leave
aam
jg
sbb
pop
mov
mov
mov
enter
push
cmp
mov
jg
imul
test
arpl
xor
adc
pop
jo
outsl
dec
scas
mov
lret
mov
sub
xor
ljmp
scas
js
movsl
mov
pop
out
scas
xchg
mov
and
pop
mov
adc
shrl
xor
sub
add
dec
jp
rol
push
rorl
fwait
xorl
mov
mov
inc
mov
decl
and
fcomip
cmpsb
sbb
mov
scas
mov
mov
or
jecxz
outsb
in
fidivs
sbb
adc
push
push
adc
in
mov
jl
jne
sbb
sahf
call
addb
clc
mov
popf
fadd
mov
inc
mov
add
mov
loope
stc
lcall
stc
out
loop
add
mov
jg
scas
aas
jl
outsb
add
pop
xchg
cmp
out
adc
cmp
xlat
stos
mov
sti
mov
imul
sbb
popf
std
mov
jg
jecxz
mov
or
dec
rcrl
push
push
fists
fisttpl
xchg
dec
xchg
subb
outsb
hlt
inc
sarb
shrb
jmp
pop
pop
add
int3
dec
dec
scas
dec
add
or
sub
cmpsl
stos
lock
loop
jnp
cmp
jae
pop
pop
mov
mov
addr16
and
cmc
fisubrs
stc
add
or
mov
cmp
iret
inc
lock
xchg
and
xchg
sbb
ljmp
pusha
addb
shl
push
mov
cs
or
pop
mov
and
hlt
or
push
sbb
jae
and
adc
cmpsb
cmpb
popa
mov
xor
aam
mov
inc
inc
adc
out
clc
jmp
push
cwtl
cs
xchg
push
out
push
add
in
pop
ret
inc
inc
add
push
pop
adc
mov
sbb
aas
out
clc
inc
sbb
dec
ljmp
shr
add
inc
notb
push
popa
insl
push
leave
pop
mov
cs
das
pop
inc
jb
xchg
xlat
jecxz
cld
jnp
lock
xchg
push
stos
daa
ljmp
loopne
shlb
pop
leave
dec
test
push
pushf
imul
rorl
fistpll
sbbb
dec
outsb
sub
stc
mov
lods
xchg
mov
js
lcall
pop
mov
sbb
mov
xlat
push
popl
ret
sti
outsb
fld
pop
mov
inc
mov
ds
incl
push
stc
adc
or
dec
sbb
inc
sbb
lret
sub
adc
push
mov
arpl
xchg
mov
or
icebp
mov
xchg
movsl
sub
xchg
inc
ss
mov
jo
jbe
push
jge
stos
lea
scas
mov
mov
sarl
js
imul
inc
push
sar
inc
cs
aam
sub
fidivrl
shl
and
xor
jae
into
add
xchg
inc
bound
push
lods
and
jo
or
lret
fwait
adc
pop
jno
cltd
lahf
sbb
xor
stc
mov
jge
std
jl
sub
cmc
jl
sub
cs
and
ljmp
pop
and
jb
addl
ror
mov
mov
inc
das
pop
push
fistpl
daa
subl
jno
push
add
mov
cltd
dec
popf
lds
in
mov
fsub
pop
mov
test
mov
cmp
mov
repz
push
mov
and
adc
xorl
fildll
aam
jno
cmpsb
mov
ficomps
incl
aas
xorb
pop
mov
scas
int3
sbb
ljmp
mov
pop
xchg
inc
fwait
fs
pop
fnstcw
dec
cmc
popf
lret
in
xor
mov
arpl
xchg
mov
and
sti
in
xor
or
xchg
push
out
daa
add
inc
push
decl
push
sti
xchg
daa
and
loope
out
xor
mov
and
and
lods
jge
loop
adc
cwtl
xor
mov
ret
dec
repz
stos
std
or
lcall
in
push
negl
cmpsb
mov
int
les
mov
lea
mov
push
movsb
or
cwtl
push
hlt
add
cmpsl
jge
mov
popa
xchg
clc
dec
mov
aad
or
daa
imul
jns
fs
sbb
pop
jne
scas
mov
push
cs
jge
sub
xor
pusha
xor
push
int3
or
mov
cwtl
negb
push
int3
aad
pop
push
push
and
and
icebp
jns
sbb
and
out
cmpsb
int3
or
dec
adc
fstps
int3
out
mov
add
sbb
lods
jge
xchg
mov
cmpsb
arpl
imul
jb
shrb
mov
imul
hlt
shr
int
pop
test
jne
add
sub
mov
xchg
pop
in
loopne
push
pop
outsl
push
xchg
pushw
jmp
into
into
inc
pushf
or
movsb
out
out
hlt
push
jl
pop
pop
ja
scas
add
xor
stos
rolb
nop
sbb
jo
adc
sbb
push
pop
cmp
cli
adc
jp
hlt
js
orl
popa
sub
sbb
inc
jge
imul
scas
xchg
shrl
or
push
roll
inc
mov
push
push
jns
cli
or
dec
lock
xchg
shl
hlt
mov
push
xchg
lds
cmpsb
xor
push
rolb
andl
scas
repz
fisubs
jl
adc
sarl
outsl
stc
jns
mov
jns
push
imul
in
pop
cli
xor
out
mov
mov
mov
popa
pusha
shll
mov
sahf
ljmp
cmc
imul
push
push
cmc
cmp
call
push
xchg
shll
call
test
cmpsl
push
scas
daa
mov
out
fildl
fstl
aam
es
and
mov
sub
fistps
lea
pop
xchg
pop
lods
sbbl
call
adc
xor
inc
rcl
ja
cmc
sbb
lret
and
cmpsl
jnp
dec
imul
pop
sub
mov
jge
cld
adc
adc
scas
mov
lods
daa
pusha
xor
jmp
jb
roll
mov
shll
jne
es
pushf
push
retw
mov
mov
stos
lods
mov
loop
pop
and
jns
push
stos
mov
sbb
xchg
in
je
test
js
mov
aas
adc
dec
cltd
das
dec
mov
xchg
jg
xchg
and
add
dec
rcrb
mov
add
push
dec
aaa
pushf
adc
sub
push
imul
push
std
ljmp
mov
sahf
sti
sub
adc
movsl
mov
stos
rclb
shr
xor
and
mov
stos
testl
sbb
or
xor
gs
jl
and
jb
out
inc
dec
js
adc
dec
lock
sbb
cmp
les
das
and
es
sbb
push
mov
mov
push
jl
scas
repz
outsb
sbb
cmp
inc
fwait
das
repnz
cmpsb
sbbb
mov
pop
insb
xchg
jno
inc
mov
test
fcomps
sub
ja
jns
dec
pop
enter
out
out
adc
sbb
aad
insb
add
adc
lcall
negl
mov
cli
cmp
fwait
iret
or
inc
mov
in
iret
addl
out
aam
pusha
dec
mul
push
mov
jg
pop
jno
das
or
sub
adc
out
push
fisttpl
jo
fimull
in
ror
fnsetpm(287
add
cmpsb
sbb
xchg
fidivrl
push
add
push
mov
xchg
lahf
push
cmp
or
lcall
ja
lea
outsb
push
jle
or
pop
push
or
jle
rcrl
xor
adc
mov
ljmp
cmpsb
ljmp
dec
iret
cmp
jg
jle
mov
mov
into
movsb
cs
cmpsl
fsts
sub
push
je
mov
scas
jo
out
push
jns
or
lds
out
xchg
mov
and
push
ds
pop
push
or
fistpll
or
test
cwtl
loopne
xchg
imul
nop
mov
mov
mov
cmp
or
arpl
lahf
jle
es
cld
nop
mov
cltd
nop
mov
add
out
add
push
jmp
jbe
jno
lret
inc
test
mov
mov
sbb
negl
fidivrs
test
xchg
js
ljmp
scas
jbe
scas
push
loop
jns
mov
cs
jge
mov
ret
pop
clc
xor
pop
jecxz
inc
xchg
and
xor
inc
or
enter
inc
push
sbb
add
ror
mov
add
cmp
inc
xor
inc
aas
mov
iret
jl
lret
orb
mov
int3
ss
ljmp
jecxz
dec
add
sbb
loope
jmp
add
mov
repnz
mov
nop
dec
xor
or
sub
fmuls
xor
insl
xchg
mov
dec
mov
dec
test
in
popa
push
test
cmp
adcl
fwait
mov
dec
xor
lea
adc
inc
cltd
insl
lods
je
xor
jae
ds
test
pushf
addr16
push
scas
in
sahf
ss
roll
jl
scas
negl
add
mov
add
imul
pop
dec
or
call
cmp
mov
jbe
sub
and
ret
or
jnp
mov
aas
xorb
enter
sub
and
inc
push
inc
xor
mov
lock
sub
push
xlat
add
ds
out
add
int
aad
and
leave
sbb
loop
jo
mov
rorl
ret
add
movsb
hlt
pop
jmp
sub
fldl
frstor
sar
out
sbb
jo
fcoml
fs
jb
mov
sbb
jne
push
icebp
rcll
inc
sub
sbb
test
aas
lahf
js
hlt
rorl
jae
or
in
lock
pop
ficompl
les
lods
inc
jecxz
in
sbb
test
nop
out
xchg
stc
push
push
jp
jbe
repnz
pop
push
stc
adc
aaa
inc
repz
arpl
orl
nop
addl
xor
out
negb
mov
iret
jl
out
xor
dec
repnz
pop
jno
dec
mov
lahf
dec
clc
adc
icebp
outsb
sub
cli
mov
sub
jbe
inc
popf
add
push
out
fisubl
mov
fildll
pop
test
inc
wrmsr
scas
mov
into
daa
xchg
call
pop
subl
loop
dec
xor
rcr
fsubrs
subb
xchg
shl
pop
mov
test
push
das
imulb
sub
aas
js
int
sbb
pop
cmp
sbb
sti
ret
mov
js
add
xor
lods
push
addr16
dec
test
jmp
mulb
stos
orb
shrb
sbb
pop
push
pop
mov
stos
push
sbb
pushl
ret
outsb
mov
sbb
lds
pop
test
cld
popf
gs
mov
iret
dec
add
dec
dec
add
xchg
push
push
push
arpl
sub
add
push
sbb
jg
jl
in
xor
inc
popf
loopne
mov
cs
cmp
jmp
xor
loopne
adc
xchg
call
cmp
pop
icebp
lds
daa
enter
mov
mov
mov
popl
push
das
aaa
or
mov
dec
leave
int3
pop
pop
cmpsb
mov
jge
test
sub
rcll
sar
out
lods
out
jae
pop
rcll
enter
inc
push
into
scas
and
xchg
insl
lods
mov
or
stos
lret
ja
lret
jae
inc
add
mov
test
xchg
nop
mov
loope
popf
add
mulb
mov
inc
je
inc
dec
roll
dec
push
test
int3
idivl
cli
and
xchg
mov
imulb
mov
xchg
jmp
subb
lods
mov
lret
subl
loope
bound
jnp
shl
das
sarb
aaa
add
cmp
aas
and
icebp
cwtl
imul
pushl
cmc
sub
or
xchg
pop
lret
lret
jne
bound
pop
in
bound
push
outsl
pop
xchg
shll
pushf
movsl
dec
stos
insl
lods
push
cmp
mov
push
mov
add
cltd
mov
test
jle
lds
adc
xor
jmp
mov
adc
in
sub
test
loope
and
clc
xchg
sbb
sbb
inc
add
imul
jecxz
adc
xor
jecxz
mov
lea
ja
add
mov
or
scas
movsb
cmp
sub
addr16
or
into
inc
fisttpl
xchg
cs
sub
pop
adcl
pop
dec
xchg
fiadds
mov
mov
dec
aas
mov
add
pop
push
jb
stc
cmpsb
das
xchg
int
repnz
sub
xor
add
les
mov
sub
mov
pop
mov
or
dec
test
lcall
or
xor
xchg
inc
push
xor
fwait
int3
adc
inc
dec
sbb
mov
fidivl
sbb
mov
jmp
pop
iret
scas
mov
test
adc
lods
xor
push
or
fmull
sbb
gs
pop
leave
mov
and
movl
mov
inc
testb
push
mov
cmpl
and
ljmp
fs
das
lahf
hlt
leave
jp
inc
mov
xchg
dec
jbe
fnstsw
jnp
hlt
movsb
sti
or
hlt
inc
mov
inc
mov
shrb
sbb
add
xchg
dec
nop
mov
and
mov
pop
into
popa
sahf
mov
sarl
or
sbb
cmpsb
adc
data16
int3
icebp
push
push
icebp
pop
insb
add
out
inc
mov
cmp
push
mov
mov
fabs
mov
xor
lods
loopne
dec
cmp
inc
xchg
mov
cmp
xchg
mov
or
sub
xchg
and
lods
outsl
repz
jnp
mov
fsubrs
mov
fmul
mov
mov
outsb
bound
shrl
pusha
inc
and
jecxz
xchg
jmp
inc
pop
sub
or
push
jae
jne
insl
dec
pop
adc
pop
lods
inc
xchg
dec
subb
jno
sbbb
push
out
jmp
adc
ret
hlt
insl
mov
adc
dec
lds
iret
or
and
jg
lock
mov
lods
mov
mov
fs
jecxz
arpl
lahf
outsl
or
lahf
aaa
xlat
imul
aad
je
rcrl
push
lret
add
sbb
jno
fs
daa
ficompl
lea
adc
mov
sub
repnz
popa
shrb
mov
addr16
jns
xchg
push
insb
fists
test
and
inc
jp
push
mov
bound
jp
xor
leave
fstps
cltd
imul
clc
ret
outsl
popf
int
sbb
mov
adc
dec
and
xor
and
aam
jb
addr16
xchg
sub
int3
outsb
jno
dec
adc
adc
fisttpll
movsb
scas
in
mov
and
inc
xchg
cld
inc
stos
sahf
cltd
push
jb
cmp
clc
and
mov
ret
mov
imul
jg
mov
sarl
mov
mov
gs
je
cmp
bnd
mov
jne
gs
call
xlat
lock
mov
aas
and
sub
dec
aas
imul
leave
xor
jno
inc
inc
ja
mov
jno
insl
or
popf
mov
stos
js
cs
shlb
lret
in
into
pop
ds
sbb
movsl
mov
mov
aam
js
push
ret
lods
push
adc
mov
outsb
loop
xchg
dec
fstpl
repz
stos
js
pop
dec
adc
mov
dec
dec
lret
dec
jb
outsl
inc
insb
lods
dec
mov
dec
cmp
adc
xchg
or
in
xor
cltd
cld
aas
fbld
cmp
scas
cli
cli
adc
sti
sbbl
fwait
push
sti
xchg
sbb
inc
or
ret
inc
cwtl
push
cmpsl
sahf
add
sbb
lcall
jecxz
sub
jne
add
ja
ret
mov
gs
in
fdiv
test
mov
inc
inc
inc
fdivr
push
adc
and
shrl
fisubs
movsl
jns
pop
imul
sub
add
xchg
aam
pop
pop
in
inc
xor
mov
imul
es
pop
mov
fs
xchg
mov
xchg
bound
or
inc
inc
pop
sahf
imul
and
adc
or
loop
jl
js
pop
in
pop
or
add
xchg
xor
or
popa
incb
push
push
outsb
sbb
adc
inc
loope
cmpsl
ds
cmc
add
jmp
lods
cmpsb
jp
in
cmpsb
mov
in
stos
popf
inc
outsl
out
frstor
scas
imul
mov
es
loop
movsl
push
jb
clc
aas
mov
jnp
and
push
movsb
fmul
push
or
xor
ss
xor
fwait
push
cmpl
and
xchg
lret
xchg
scas
insl
rcrl
cltd
cwtl
gs
mov
out
loopne
lock
cmp
jp
dec
shrl
movsl
into
cltd
xor
xchg
mov
sub
pop
mov
mov
movsl
loopne
sub
dec
dec
mov
sub
iret
sbb
lahf
push
add
mov
mov
aaa
jno
cmp
mov
jne
cmc
mov
repz
mov
lahf
push
cmpsl
out
or
cmp
mov
ficomps
and
or
fcoml
cmp
ljmp
fmul
adc
or
aad
int3
roll
and
sbb
insl
in
lea
outsl
gs
push
mov
scas
sbb
cltd
xor
lret
movb
jmp
cs
loopne
rcll
fs
in
inc
insl
subb
mov
les
fidivl
addb
and
repz
inc
test
add
jl
insb
inc
movsb
or
and
jae
int
jo
nop
pop
cmp
test
xchg
popf
xor
ljmp
scas
shufps
cmp
jecxz
push
out
bound
pop
test
mov
inc
rcrb
mov
addb
jbe,pt
sub
and
not
push
pusha
push
xor
add
stc
repz
loope
inc
inc
and
inc
and
movsb
iret
add
dec
and
sbb
rorb
mov
mov
lcall
adc
xchg
test
out
out
mov
adc
xor
cld
pop
xchg
jnp
mov
out
das
les
adc
shlb
adc
shlb
xchg
int
mov
add
rcrl
sbbb
inc
adcb
xlat
pop
xchg
mov
sbb
aam
rclb
rcrl
push
dec
adc
sti
push
ja
jmp
outsb
icebp
stc
sub
mov
or
ficomps
or
movsl
mov
dec
lahf
push
outsb
jle
dec
fistps
scas
aas
mov
pmaxsw
outsl
into
pop
fimuls
mov
push
outsb
jle
dec
fistps
scas
aas
mov
pmaxsw
outsl
into
pop
fimuls
mov
push
jle
dec
fistps
das
jle
sahf
pmaxsw
outsl
into
pop
ss
cmp
ds
outsb
ljmp
dec
iret
scas
aas
inc
test
sahf
js
divl
xor
in
in
aad
lds
mov
test
sti
addl
cmp
cs
add
in
in
aad
lds
mov
insb
jne
gs
push
inc
inc
cmp
sbb
sbb
or
in
cmc
in
aad
lds
xchg
mov
add
xor
cmp
inc
jns
jo
jb
mov
mov
dec
pop
xchg
dec
cmp
xchg
cltd
aad
adc
xor
sub
sarl
cmc
movsb
mov
lods
sub
sbb
inc
lcall
cmp
sbb
repz
add
adc
jg
sub
dec
dec
inc
sub
fs
sarl
cwtl
or
std
js
lock
mov
movsl
arpl
insl
lcall
sub
xchg
pusha
or
lods
xor
sub
inc
ds
rol
jl
jl
stos
jo
stos
mov
xor
adc
or
fwait
imul
inc
cli
scas
outsl
pop
test
jne
popa
and
sbb
jns
jg
sbb
or
xor
aad
lds
xchg
xchg
test
je
inc
push
push
inc
and
xor
push
adc
mov
repnz
lock
jl
add
sub
outsb
addr16
pusha
xchg
cltd
lea
shl
lods
loopne
ret
aas
adc
pop
pop
xor
mov
jo
push
cltd
mov
mov
mov
mov
pushf
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
cld
cmc
in
in
aad
lds
mov
pop
push
dec
inc
cmp
sub
sbb
or
cld
cmc
ret
int
mov
into
es
ret
pop
gs
mov
push
xchg
push
js
push
scas
bound
sarb
xchg
dec
inc
pop
inc
jecxz
xchg
pop
push
aas
push
pop
out
jl
inc
sti
repz
jae
test
inc
das
je
lock
gs
loop
xchg
adc
int
add
push
add
insl
mov
mov
addl
mov
daa
or
insb
lods
pop
data16
test
pop
xchg
and
adc
movsb
mov
lcall
fst
sbb
lcall
cmp
sub
cli
adc
les
lods
es
sub
mov
cli
lret
test
mov
mov
jno
or
and
test
in
mov
das
daa
sahf
xor
rorb
jge
cmc
mov
movsl
fptan
push
mov
cwtl
push
add
sub
frstor
adc
and
jnp
lds
outsl
insb
int3
shr
fildll
inc
sbb
fmulp
mov
roll
mov
sbb
pop
xor
sub
sub
aam
xchg
and
lds
es
test
push
or
add
daa
push
orb
test
mov
data16
ljmp
cmp
iret
cmc
pop
xorb
testb
cmp
shlb
add
test
mov
cmp
push
ficompl
xchg
lds
ljmp
pusha
imul
ss
rorb
test
pop
popf
imulb
adc
cmp
inc
adcb
xchg
test
sti
fsqrt
fidivrl
bound
cmpsb
jo
fistpl
xorb
adc
or
outsl
inc
pop
andb
nop
xchg
ljmp
push
dec
mov
insl
jp,pn
mov
jno
jge
inc
mov
mov
add
cs
sbb
push
xor
dec
syscall
jno
pop
scas
nop
es
push
or
mov
jo
imul
mov
pop
in
cmp
frstor
cwtl
jle
jne
inc
mov
pop
int3
cmp
xchg
push
pop
sbb
or
enter
or
out
push
leave
mov
dec
or
cmp
lahf
mov
jmp
sub
jnp
out
ret
jne
rclb
out
sbb
xor
push
shrb
sbb
dec
test
mov
cmpsl
jecxz
insb
cmp
jns
jno
mov
adc
lret
fisubl
mov
popa
out
pop
push
lret
inc
cmp
aas
cli
inc
xor
push
shrl
xchg
cmp
js
pop
aas
lods
push
lahf
or
inc
jl
rcll
cmpsl
clc
mov
pop
add
sbb
inc
popf
xchg
stos
mov
shrb
mov
mov
mov
sbb
out
xor
daa
mov
push
cmpsl
cltd
cmpsb
inc
mov
fldl
xor
or
add
lds
inc
icebp
xor
fst
sbb
orb
sbb
inc
pop
fwait
pop
and
out
mov
fildl
lock
push
xlat
sub
scas
cmp
scas
dec
sbb
sbb
fidivrl
fnstsw
mov
jl
mov
jnp
or
xor
xchg
daa
xchg
mov
bound
pop
ret
sarb
rorb
int
cmpsb
aad
ret
ret
and
jnp
cmp
out
jae
mov
adc
fistpl
push
test
outsl
xlat
ret
xor
xor
pop
cld
frstor
sbb
push
rcr
or
inc
pop
out
mov
sbb
dec
adc
ds
dec
das
loopne
fcoms
sbb
addr16
or
cli
dec
sbb
cmp
cmc
or
add
or
push
cli
xchg
push
push
rclb
icebp
push
mov
sbb
xor
add
ret
mov
adc
inc
mov
out
cli
fabs
inc
stos
push
sub
and
push
sarb
sbb
cs
mov
scas
cli
shrb
xlat
pop
lahf
adc
cwtl
mov
sbb
pop
xchg
rcr
inc
mov
pop
lods
mov
mov
jbe
mov
dec
jl
adcl
adc
pop
sbb
test
rorl
push
mov
mov
stos
inc
pop
cs
inc
adc
dec
cmpsl
js
hlt
dec
xchg
ret
mov
out
cmp
js
pop
push
or
test
es
and
cmc
clc
cmpsb
add
mov
push
dec
lret
scas
test
loop
cmpsb
in
sub
mov
std
push
inc
dec
mov
roll
movsb
cli
sub
mov
push
pop
pop
sub
in
or
fisttpll
jle
ss
xchg
inc
and
mov
rcr
push
sbb
xchg
inc
sbb
aam
cwtl
adc
pop
ret
adc
popf
test
insb
xchg
cmpsl
daa
push
xchg
jb
mov
fwait
mov
sub
jnp
push
int
or
push
inc
insl
adc
or
jb
mov
ret
fwait
pop
mov
jo
inc
xor
stos
pop
leave
sub
das
call
xchg
dec
sbb
adc
ret
imul
push
iret
xor
jae
xchg
dec
dec
pop
inc
mov
out
fstps
in
lret
push
sbb
ds
or
xchg
mov
das
fs
hlt
arpl
fistpl
daa
jecxz
and
mov
jl
or
sbb
mov
ret
jo
arpl
shl
sbb
cld
dec
push
jo
add
test
mov
fwait
pop
mov
repnz
mov
outsl
and
add
test
scas
lret
ud0
push
testl
add
lahf
sbbl
je
push
cmp
ror
dec
std
lods
jg
imul
scas
out
cs
pusha
lcall
cmp
ja
scas
test
mov
xchg
cltd
add
and
inc
mov
xlat
mov
or
jp
jo
mov
xchg
lea
xchg
sbb
add
mov
sub
sub
pop
popa
or
sub
pop
mov
scas
ret
adc
jb
pop
inc
adc
orl
pop
clc
aas
push
nop
dec
lret
dec
lahf
loope
or
inc
or
sub
mov
xchg
testl
das
insb
inc
xchg
adc
sub
dec
cld
repnz
dec
or
add
push
or
mov
aaa
std
lret
mov
sahf
add
mov
mov
dec
jnp
mov
fwait
push
jmp
jle
lods
or
popa
mov
in
aas
pop
mov
out
or
jl
rcrb
mov
xchg
add
not
lods
imul
push
inc
das
pop
jo
inc
testl
mov
inc
pop
mov
sbb
mov
or
test
mov
pop
pop
pop
cmp
jmp
loope
daa
add
push
mov
loop
arpl
cld
adc
sub
fucomi
pop
jge
or
or
add
ret
xor
andl
shrb
loop
test
push
adc
addr16
jmp
mov
pop
or
lcall
inc
enter
mov
stc
sub
push
call
movsb
xchg
cs
in
scas
in
lods
orl
and
repnz
mov
les
xor
mov
scas
lods
scas
dec
xchg
mov
cmp
mov
and
call
cmp
cwtl
arpl
cmpl
call
add
cmp
jo
sahf
mov
push
sbb
lea
repz
mov
or
mov
mov
test
or
aam
pushf
idiv
jno
scas
repz
pusha
sub
xchg
pusha
es
mov
test
jae
adc
push
aaa
into
lcall
sbb
rorb
push
inc
push
jge
jmp
add
dec
iret
lret
cmp
mov
loopne
daa
sub
mov
lret
js
dec
push
inc
mov
xchg
adc
stos
pop
out
dec
xor
mov
vmaxss
scas
xchg
ret
xor
pop
sub
cmpb
rclb
or
push
dec
aaa
iret
push
fs
xchg
cld
xchg
and
idiv
mov
lcall
and
jnp
lods
test
rclb
mov
and
mov
stc
push
lret
shll
and
cmpsb
es
int3
mov
or
push
sub
mov
xorb
out
push
imul
mov
jns
mov
das
ret
and
popf
arpl
sbb
std
sbb
test
cmp
mov
add
lahf
fcomps
xchg
xor
icebp
outsb
je
mov
jae
or
lea
stc
clc
xchg
dec
aam
clc
jo
aaa
or
sbb
sub
loopne
fisubrl
clc
add
jb
loop
pop
push
dec
jae
cmc
lock
sti
jo
movsl
mov
out
ja
incl
or
lret
xchg
outsl
test
mov
cmp
aas
push
inc
jmp
push
jg
xchg
ljmp
stos
cltd
pusha
sbb
sbb
test
cs
push
push
push
mov
mov
fisubl
insl
jns
push
movsb
daa
das
xchg
pop
inc
ds
gs
inc
into
push
int3
movsb
adc
testl
mov
push
sahf
xor
inc
icebp
dec
in
mov
inc
push
faddp
fdiv
shll
div
fdivrs
sub
adc
test
loope
mov
fadd
jns
shlb
adc
xchg
cmc
ret
jle
sub
xlat
mov
adc
add
jae
test
imul
test
notl
rclb
hlt
mov
outsl
ficompl
or
mov
fsubp
inc
pavgb
add
ja
into
lods
fcomps
cmp
mov
add
sub
aas
fwait
outsb
mov
mov
xor
and
sbb
and
cwtl
adc
cmp
cli
testb
adc
js
mov
out
mov
pusha
lret
adc
sbbb
jl
cs
xchg
sub
jne
xlat
push
scas
sbb
push
imul
jne
orl
sbb
stos
inc
sbb
test
sar
into
inc
xchg
adc
xchg
xchg
insl
sub
cli
add
fwait
xlat
int3
push
imul
into
cli
mov
xchg
movsb
loope
jbe
jbe
inc
enter
in
dec
and
pop
xchg
test
xchg
jns
push
cmpsl
popf
xchg
repz
push
mov
and
and
mov
sub
xor
xchg
xchg
pop
aam
cmp
popf
fsubs
ret
ret
push
mov
lea
add
sarb
add
jae
mov
inc
jns
inc
cltd
sub
jbe
movsl
add
sub
cmp
xchg
xor
jns
divb
inc
in
xor
into
ja
mov
and
in
in
mov
data16
in
xor
mov
mov
add
pop
daa
push
xor
sbb
repnz
cmp
stc
mov
add
mov
cmp
js
push
mov
movsb
mov
mov
xor
push
jp
mov
fisubrl
loope
xor
imulb
sbb
dec
insl
andb
cmp
add
add
lcall
jae
lcall
int
cmpsb
into
outsb
ret
cwtl
rcll
inc
outsb
xor
inc
jbe
mul
xlat
rcl
lea
out
cli
pop
aad
dec
pusha
ret
mov
jge
cmp
cmp
or
and
and
mov
mov
rol
xor
test
cmc
psubusb
mov
gs
imul
in
fldcw
andl
in
and
cmp
clc
xorb
jne
and
and
lods
sar
loopne
dec
shll
cld
cmpl
adc
xor
cld
push
mov
inc
mov
mov
fscale
jno
or
cmpsb
push
push
mov
mov
fnstcw
loope
or
mov
inc
es
sub
add
xor
mov
out
dec
pop
ret
sub
insb
fwait
into
jle
test
fbld
fldt
xlat
add
push
jecxz
test
movsbl
and
scas
pop
testl
jecxz
sub
das
fists
rorb
mov
popf
adc
notl
shr
mov
addr16
or
out
pop
pop
mov
bound
mov
or
push
sub
imul
lahf
testb
inc
adc
mov
dec
sbb
xor
and
pop
sub
js
stc
adc
push
stc
adc
inc
gs
dec
pop
arpl
cmp
jns
jae
jp
in
faddl
int3
jl
imul
and
scas
aam
notb
and
add
adc
inc
or
xchg
xchg
sub
leave
and
adc
xchg
mov
push
dec
pop
hlt
cmp
pop
push
out
les
inc
out
sub
sbb
subb
pop
jns
jmp
sbb
dec
popa
mov
imul
loopne
push
inc
adc
mov
int
xchg
mov
mov
scas
lods
fdivrl
aad
xor
mov
and
sarb
sub
fdivr
jle
out
cmpsl
cmp
or
lcall
push
fs
mov
arpl
sbb
popa
test
scas
dec
fs
or
jl
jg
aaa
jnp
test
xor
push
adc
and
ljmp
jnp
mov
cs
add
test
js
into
cltd
xor
sbb
test
aam
inc
xchg
sub
pop
xlat
pop
or
ret
push
icebp
repz
and
ja,pt
andb
jae
fsub
mov
lock
scas
rcrl
dec
fwait
outsl
sub
xchg
push
shr
shrl
cmp
xor
xor
in
cmc
and
int3
cmc
cld
adc
dec
jl
cmpb
mov
scas
inc
hlt
movsl
hlt
cmp
ret
fs
xor
movsb
inc
out
adc
xor
in
mov
push
nop
imul
bound
adc
add
fisttps
or
daa
loopne
add
mov
adc
rcll
mul
fists
xchg
xor
loop
sub
dec
and
dec
lcall
rcll
lcall
jge
dec
leave
out
addr16
mov
xchg
mov
pop
ret
xor
push
fs
add
sbb
pop
or
jge
sub
pop
mov
in
cs
jmp
fldcw
js
push
addb
fimuls
movsl
xor
std
sbb
xor
jecxz
aam
stc
or
xorb
lcall
fs
mov
shll
pop
adc
nop
ljmp
test
mov
jp
movsl
mov
out
inc
add
mov
mov
sar
fs
int
xchg
push
sti
fimull
xchg
pop
cmp
jo
lahf
sbb
popa
fiadds
mov
cmpb
ret
cmc
mov
hlt
fldenv
faddl
addr16
ret
pushf
out
std
xor
and
xchg
lret
mov
dec
and
inc
dec
push
out
rorl
dec
mov
jnp
mov
push
pop
aas
cmp
mov
jecxz
sub
sub
add
xor
scas
test
lods
add
xor
xchg
and
dec
push
ret
pushf
subl
and
push
sti
mov
fs
into
testl
lahf
pop
stc
pusha
dec
out
add
add
or
wbinvd
add
out
xchg
arpl
sbb
or
in
inc
push
mov
dec
sahf
cltd
stos
sbb
scas
fbstp
jnp
push
arpl
mov
mov
ja
sub
std
arpl
in
add
jns
and
xchg
cmpsb
jg
push
add
add
jg
xchg
sbb
dec
inc
xorb
cmc
insb
push
cmpsl
push
in
addr16
in
add
pushf
mov
cmp
icebp
push
imull
arpl
adc
adc
negb
and
push
outsb
nop
or
sbb
enter
inc
dec
add
in
aam
aas
decl
pop
adc
scas
int3
jnp
and
add
xor
or
jle
iret
popa
mov
cli
inc
fcomi
inc
ja
ds
dec
jp
mov
dec
pop
mov
cmp
or
jno
and
faddl
inc
in
cmp
cmovge
pop
outsl
xchg
push
inc
xchg
adc
lret
sarb
scas
inc
mov
jle
dec
das
push
dec
jecxz
inc
hlt
in
fstps
cmp
gs
mov
or
mov
sti
inc
fwait
ret
or
aaa
xchg
aam
or
adc
mov
pop
dec
lea
imul
stos
mov
push
adc
repz
mulb
sub
jnp
stos
xor
add
push
and
inc
stc
in
mov
xchg
ss
add
push
add
adc
jbe
nop
fdivrl
xchg
xorl
cmp
call
mov
mov
scas
das
icebp
ljmp
jnp
iret
fsts
pop
or
mov
stos
cmp
loope
add
cmp
dec
xchg
popa
clc
mov
loopne
andb
addl
mov
sbb
jno
dec
lret
ret
shrb
xor
out
push
out
pop
mov
repz
and
push
pusha
inc
lahf
inc
mov
push
jge
clc
jne
test
xor
icebp
adc
inc
int3
jnp
sbb
mov
int
sub
mov
mov
imul
repz
jo
test
jbe
imul
dec
icebp
into
lahf
sub
push
pusha
sub
ljmp
xchg
add
mov
movsb
xor
xchg
sbb
dec
imul
mov
pop
movsl
or
bound
fbld
push
lods
aam
lret
push
dec
inc
jo
test
sub
sahf
sub
or
inc
into
out
cmpsl
cltd
fcmovbe
roll
or
mov
adcl
mov
pavgb
pop
push
fidivrs
cmp
mov
push
xor
loope,pt
call
and
and
jecxz
inc
outsl
adc
ds
jge
dec
xor
lods
scas
out
sub
xlat
ljmp
add
out
in
pop
mov
loope
inc
in
push
jo
mov
incl
icebp
mov
jae
jg
inc
jecxz
mov
fisubl
dec
add
movsb
mov
pop
jmp
push
xor
sbb
ljmp
push
fsubr
outsl
mov
out
addr16
xor
orb
dec
sbb
jo
mov
pop
and
and
jl
js
rolb
sub
gs
jl
fs
fisttpll
and
lea
test
mov
mov
cli
push
sarl
lcall
icebp
cs
mov
sahf
xor
add
jne
lods
pop
sub
fiadds
fisubl
loop
loope
call
lods
test
pop
mulps
push
int3
adc
inc
pop
adc
or
cmpsl
leave
push
sbb
or
rcrl
push
cmc
pop
nop
dec
stc
mov
xchg
push
call
sbb
rcl
mov
xchg
arpl
lcall
xchg
sti
enter
push
iret
add
scas
xchg
mov
roll
push
hlt
jecxz
jmp
aam
rcll
out
dec
rcrb
push
adc
xlat
fwait
roll
mov
mov
aaa
icebp
out
inc
mov
or
lahf
test
repz
and
fwait
outsl
out
adc
jge
or
scas
xchg
fildll
fldl
push
jmp
in
int
cmpsb
pop
or
loop
xor
imul
mov
leave
scas
inc
mov
adc
adc
mov
loope
in
fdiv
jb
inc
pushf
test
xor
xor
add
push
cmp
sub
lock
push
sub
xchg
xor
hlt
sbb
push
adc
and
xor
test
push
add
gs
add
mov
pusha
mov
in
sarl
shl
popf
mov
ds
xor
push
mov
sub
sbb
mov
ficoms
adc
pop
call
mov
sub
fisubrl
ret
mov
lock
jp
aam
add
xchg
jmp
repz
call
loop,pn
dec
shrl
lret
jns
add
push
xor
adc
in
jl
mov
pop
enter
mov
jnp
andb
leave
pop
fwait
xor
adc
dec
fdivrs
lds
mov
pop
push
dec
inc
cmp
sub
sbb
or
cld
cmc
in
in
aad
lds
mov
pop
push
dec
inc
cmp
sub
sbb
or
cld
cmc
in
in
aad
lds
mov
pop
push
dec
inc
cmp
sub
add
fst
int3
lds
xchg
or
xorl
notb
xor
movsb
ljmp
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
or
fisubrl
ljmp
mov
sti
pop
jmp
fstpt
push
lcall
jnp
imul
cli
dec
xchg
mov
cmp
dec
fstpt
push
lcall
jnp
imul
cli
dec
ljmp
movsl
dec
xchg
push
mov
jb
sub
push
cli
imul
jno
popa
jns
jno
push
repz
pop
sti
pop
push
icebp
mov
out
out
das
push
dec
push
repnz
cmc
push
das
push
dec
add
incb
ret
lcall
and
or
xchg
jp
dec
bound
decl
sarb
sub
jnp
jnp
movsl
nop
and
in
cmc
push
mov
xorl
pop
fidivl
xor
rclb
pop
nop
dec
lret
push
inc
mov
add
jbe
jmp
xchg
les
adc
pop
stos
jmp
sbb
add
rcrl
into
aas
pop
ljmp
lcall
jnp
imul
cli
dec
ljmp
mov
sti
pop
jmp
fstpt
add
inc
lret
jle
outsb
stos
pop
mov
or
clc
pop
out
sahf
sbb
and
lcall
dec
fildll
cmp
xchg
dec
mov
push
test
dec
sahf
xor
dec
test
fimuls
jb
or
jnp
imul
cli
dec
ljmp
mov
sti
pop
jmp
fstpt
push
lcall
jnp
imul
cli
dec
ljmp
mov
sti
pop
jmp
fstpt
push
lcall
mov
jne
test
repz
jb
pop
enter
push
test
repz
rolb
pop
cmc
bound
mov
push
clc
insb
add
pop
movsb
mov
mov
mov
dec
sub
loopne
push
ljmp
arpl
mov
insl
ret
mov
add
stos
mov
add
inc
jnp
enter
ja
pop
out
in
sahf
shrl
and
out
rorb
pushl
insl
and
mov
jbe
dec
es
inc
pop
pop
xor
enter
fwait
jmp
ss
or
aam
pop
pop
adc
lret
gs
dec
push
sbb
mov
dec
push
jle
imul
cmc
lds
jo
pop
jg
or
and
test
test
das
pop
jne
add
in
dec
pop
xor
kmovw
scas
add
xchg
cmpsb
aam
xchg
inc
test
inc
lahf
push
sbb
mov
cwtl
iret
inc
outsl
imul
enter
rcl
sub
jl
cmpsl
bound
add
outsl
xor
adc
mov
pop
and
xor
lods
jecxz
add
and
or
test
in
or
inc
sti
mov
repnz
push
add
xchg
in
and
mov
test
mov
adc
and
mov
sbb
fsubrl
mov
mov
xchg
pop
jno
inc
in
xor
or
mov
mov
xchg
jl
mov
cmp
pop
mov
xchg
cmp
hlt
and
xchg
jo
loopne
enter
jg
std
jno
sahf
cli
push
jge
cmp
jmp
shrb
out
cmpsl
xchg
fcomps
testb
add
orb
fxch
movsl
mov
mov
in
or
icebp
xor
cmp
shlb
les
pop
or
add
jne
iret
or
cmp
mov
int
mov
and
xor
sub
clc
xor
sbb
shll
popa
stc
pop
insb
cmp
out
jg
xor
and
data16
sbb
movsl
jb
call
mov
popa
push
xchg
mov
addr16
mov
movb
jns
fcoms
xor
mov
xor
mov
andb
fld
push
pusha
xchg
ds
out
add
mov
stc
lods
mov
shrb
cwtl
dec
aas
repnz
std
mov
xchg
in
ret
clc
ljmp
mov
sbb
mov
sub
aas
cwtl
xchg
loop
cwtl
jae
xchg
pusha
out
incb
leave
push
mov
lahf
jmp
pop
insl
add
ds
sbb
pop
lret
cld
loopne
stc
cli
por
cmp
cmp
test
mov
and
test
mov
int
or
jg
push
fisttpl
jnp
adc
rorb
jo
bnd
jae
add
jecxz
leave
mov
jns
gs
je
popa
into
mov
jle
cwtl
loopne
inc
shrb
movl
jne
cli
iret
loope
test
xor
fnsave
fisttps
leave
iret
aas
mov
add
cli
inc
push
in
cmpsl
cmpb
fists
inc
subl
popf
mov
pushf
xor
fiadds
out
test
rcll
repz
imul
and
dec
scas
xchg
dec
insl
mov
xor
add
mov
add
imulb
mov
or
pop
and
mov
and
xchg
xchg
fcmovbe
and
cmc
xor
rolb
filds
dec
test
insb
cmc
adc
stc
test
repz
ljmp
rolb
int3
xchg
hlt
fistl
cmpsl
jno
xlat
cmp
inc
add
adc
push
mov
cmpb
xor
jp
pop
cmp
inc
xchg
ds
icebp
mov
ret
int3
mov
push
or
js
ret
sub
lods
mov
and
dec
xlat
xchg
jp
sbb
push
lret
pop
jg
cmp
clc
sub
enter
xchg
add
jbe
repz
int
xchg
int3
inc
dec
in
and
and
jae
rcr
jnp
loopne
cs
push
lea
cltd
or
push
or
mov
dec
stos
jbe
mov
mov
icebp
cmp
out
inc
sub
adc
ljmp
mov
add
cmp
jle
or
pop
shl
arpl
and
scas
add
das
insl
pop
mov
test
out
xchg
inc
jmp
js
mov
mov
sbb
add
push
xor
push
cli
push
mov
adc
loop
or
scas
push
ds
repnz
out
xchg
xor
pop
ficoms
pop
sub
test
out
lods
pushf
and
and
pop
xchg
clc
adc
cli
xlat
shl
push
jno
in
jae,pn
jmp
js
jo
pop
sub
into
jg
mov
fmuls
into
cmp
adc
add
add
push
test
lret
mov
out
sub
mov
daa
adc
rorb
clc
xchg
fnstcw
push
rclb
sbb
aad
sahf
sub
and
mov
jne
add
in
sahf
pop
aaa
add
in
inc
or
stc
sti
mov
int
inc
enter
fwait
dec
in
es
daa
adc
sti
or
xor
add
outsb
dec
out
stc
fildl
pop
sbbl
ja
cli
in
pop
mov
mov
shlb
rolb
scas
std
adc
inc
mov
xor
jbe
push
and
je
push
test
or
sbb
xor
sub
jle
lret
sub
cld
inc
std
movsl
pop
cmp
jne
iret
and
cmp
addr16
test
jge
mov
js
mov
ds
xor
mov
test
in
popa
pop
lcall
jp
lods
aam
pop
jns
xor
les
push
mov
mov
nop
icebp
lret
fnsave
inc
pop
and
bound
cwtl
mov
sbb
pop
insb
sbb
and
jno
lds
or
xor
mov
in
in
inc
les
mov
cmc
cltd
shlb
jae
sti
xchg
mov
int
mov
dec
mov
cmpsl
test
mov
xor
pop
call
mov
cmp
jno
xor
pop
daa
push
in
loopne
xchg
pop
inc
cli
mov
repnz
sub
dec
lods
or
out
jmp
inc
mov
aaa
mov
cltd
sub
sub
jno
mov
aad
cli
out
pusha
push
ret
xchg
push
ds
out
mov
mov
jno
js
lock
pop
mov
imul
fdiv
add
jb
dec
add
cmp
pop
sub
add
repnz
insl
mov
pop
cmc
push
xchg
inc
mov
xor
or
add
jb
lcall
cli
sub
add
mov
jae
adc
adc
je
clc
mov
pop
pop
aam
into
or
mov
stos
add
mov
mov
dec
out
dec
icebp
mov
imul
mov
dec
pusha
add
sbb
out
or
xor
pop
in
ds
fldcw
into
mov
pop
sbb
int3
add
insl
sub
dec
and
push
xor
fstps
jo
loop
ret
adc
fcoml
push
or
push
cwtl
mov
movsl
xor
loope
mov
add
xchg
ja
aas
mov
adc
test
sti
cmp
xchg
mov
mov
inc
xor
int
mov
jg
gs
pop
mov
dec
sarb
mov
imul
and
mov
adc
inc
xchg
in
cmp
adc
ljmp
xchg
jecxz
mov
xor
inc
cmpsl
enter
cmpsl
pop
xchg
xchg
sub
push
lods
pop
nop
push
into
movsb
mov
mov
sti
ljmp
ljmp
stos
pop
sarb
cmc
and
xor
jns
add
pop
aad
push
and
nop
jp
idivl
push
add
cltd
dec
cmpsb
mov
outsb
loop
xchg
push
imul
mov
mov
mov
scas
dec
arpl
dec
xchg
cmp
xchg
mov
sub
push
mov
rolb
dec
adc
je
pop
dec
lahf
mov
or
int3
insb
xchg
pusha
xor
repnz
sbb
adc
and
mov
jmp
and
test
push
mov
mov
push
ljmp
sbb
mov
pop
fs
bound
test
loope
push
jbe
dec
xchg
sub
loop
mov
pop
dec
std
aad
call
inc
xor
xlat
and
pop
cltd
pop
dec
cmp
adc
xor
add
mov
cltd
sub
mov
push
dec
inc
push
mov
lds
stos
cmp
push
adc
nop
jmp
nop
pop
inc
outsb
cmpl
lret
rorb
pop
gs
leave
sub
lahf
lock
jl
lods
push
test
xchg
pop
fisttpl
jns
daa
cs
je
call
sbb
fbld
std
lea
sti
push
lods
mov
adc
scas
pop
or
xlat
xchg
leave
pushf
lock
popa
dec
inc
mov
fimull
jae
fistpl
add
sarl
xor
ds
jge
xchg
cmp
or
pusha
inc
fsubrl
cmpsl
scas
dec
dec
sub
rorl
add
inc
mov
xchg
jl
or
addl
mov
mov
lret
outsl
xorb
mov
das
mov
push
stc
hlt
inc
and
fidivrs
or
scas
inc
mov
sahf
inc
sub
loope
inc
and
mov
or
test
inc
mov
dec
cmpsb
cmp
add
rorl
cmp
and
dec
icebp
inc
mov
dec
sbb
or
aaa
addr16
aaa
dec
xor
push
leave
movl
pusha
int3
sub
inc
aas
lret
cmp
mov
adc
inc
mov
adc
add
mov
test
cmp
push
cmp
arpl
ret
jmp
mov
shlb
cmp
push
adc
cmpsl
movsl
add
sti
and
or
pop
nop
mov
sti
or
fmull
pop
add
ss
imul
fisubrl
hlt
jo
mov
adc
adc
int3
inc
add
sub
rorb
jge
adc
inc
xchg
ret
mov
sbb
push
mov
shlb
aaa
cmp
add
cmpsb
rclb
aad
sbb
pop
fidivrl
xchg
fsubrp
sbb
pop
ret
mov
mov
sarb
notl
push
push
pushf
mov
int
or
leave
data16
jecxz
inc
add
dec
lods
push
out
adc
loope
mov
popa
movsl
xchg
shlb
movsl
adc
inc
pop
test
iret
icebp
push
inc
bound
icebp
cmp
mov
or
xor
test
cmpsb
push
ret
stos
xchg
insl
sub
divl
jae
mov
jns
gs
test
int
push
jp
arpl
sub
inc
cmc
fsubrl
xchg
inc
or
mov
mov
nop
jmp
add
cmc
mov
cmc
jo
in
std
jl
sub
imul
lea
inc
in
adc
outsb
jg
mov
mov
mov
mov
in
push
out
mov
push
xor
ss
inc
movsb
cmp
xor
mov
cmp
cmp
push
dec
ret
scas
cmp
dec
xchg
cmpps
jg
push
sbb
pop
jecxz
lds
sbb
pop
sbb
pop
jg
xlat
cmp
push
out
cli
lahf
lahf
loopne
adc
pushf
shrb
jae
jno
fdivrp
das
fcoms
dec
add
test
roll
dec
and
or
aam
es
mov
std
or
mov
cld
xchg
add
jle
pop
sbb
jne
dec
xor
mov
pop
push
test
jge
lret
xchg
arpl
shrl
mov
bound
ljmp
mov
jl
mov
imul
ss
int3
xor
mov
push
xchg
dec
mov
push
idivl
in
lock
xchg
xchg
pop
lahf
sub
pop
add
call
push
dec
fidivrl
nop
mov
mov
inc
out
pop
push
adc
adc
ret
insl
adc
cmp
aas
xlat
stc
lret
in
cmpsb
cmp
add
jno
pop
sti
in
mov
cmpsl
scas
repnz
test
lods
inc
or
cmc
mov
cs
aam
test
addr16
hlt
cmpb
mov
inc
push
sbb
and
fisttpll
sbb
or
dec
fcoms
loop
cmp
xchg
push
push
jle
mov
cld
popa
aas
jne
mov
aas
fisttpl
inc
pop
test
ficomps
mov
outsb
nop
fadds
daa
jae
cmpsb
push
add
adc
add
and
xchg
dec
das
cmp
fisubrs
push
xchg
cmp
jae
out
add
insl
sbb
dec
inc
ja
push
ret
push
xor
pusha
add
mov
xchg
and
mov
ds
and
ja
mov
lret
and
bound
das
stc
outsl
lret
pop
xchg
sub
insb
mov
test
and
enter
sbb
lret
mov
and
sbb
mov
shrl
jnp
addr16
arpl
sti
add
out
test
gs
mov
sbb
ret
mov
adc
xchg
jns
jns
loopne
adc
xor
loopne
cwtl
inc
mov
inc
xor
rcll
daa
gs
test
adc
cmp
and
jno
stos
mov
cmp
xor
fsubrp
fs
jo
xor
jo
mov
xchg
test
pop
push
insb
leave
xchg
jge
jg
xor
scas
aaa
movsb
dec
dec
aam
movsb
and
jnp
clc
jb
cmpsb
cltd
and
and
cld
and
fists
aam
rorl
add
mov
insb
loope
push
es
cmpl
aaa
add
sbbl
ret
ficompl
ja
std
add
pop
mov
dec
adc
adc
int3
jo
test
push
mov
int
add
inc
lods
pop
popa
jl
dec
pop
insl
xor
cmp
lea
cmp
out
cld
push
dec
inc
std
scas
or
mov
and
int3
test
add
fadds
lret
mov
mov
push
dec
cmp
sbb
mov
test
push
fwait
aaa
daa
lock
pop
arpl
xchg
int3
sbb
scas
test
outsl
popa
imul
dec
or
sub
and
in
repnz
lock
test
mov
fwait
test
cmp
cmp
pop
cmp
sub
fcoms
mov
mov
in
pop
push
xchg
lahf
es
ss
cmp
fsts
jbe
pusha
xor
adc
mov
mov
cmp
aad
xchg
and
pop
mov
fxam
mov
testb
jno
xchg
mov
or
jo
imull
fisttpl
sbbl
sub
mov
outsl
jns
lods
jmp
cmpsb
ret
mov
in
pop
jl
jae
inc
sti
lret
fidivrl
xchg
vpsraw
add
xchg
jle
xchg
mov
jne
into
mov
sub
pop
cmp
sub
in
mov
or
icebp
inc
hlt
ret
stc
dec
xchg
jl
xchg
in
andl
jecxz
pop
test
adc
and
fdivs
lret
shll
shr
jge
jns
mov
cmp
pop
outsl
movsl
lret
movsl
mov
push
fmul
jbe
or
inc
or
pop
and
xchg
stos
lods
out
inc
popf
push
les
cmpsb
lea
aad
adc
cmpsl
add
int
in
movsb
insl
xchg
orl
jb
sbb
rclb
mov
mov
jno
push
in
and
inc
pop
sbb
movsl
inc
pop
aam
and
add
adc
sbb
sub
xchg
into
dec
inc
and
add
pusha
sub
sbb
pop
cltd
dec
sbb
push
sub
das
sar
jnp
stc
fwait
xor
stos
lcall
pusha
mov
cmp
iret
mov
decl
push
xchg
ljmp
loop
mov
xor
add
inc
ja
dec
mov
scas
adc
sub
mov
ficoml
pushf
lods
push
mov
pop
xchg
ret
cmpsl
int
add
adc
mov
inc
jl
lea
fsubrl
fs
pop
das
mov
push
in
rclb
pop
popf
push
and
sbb
inc
jg
mov
test
std
sbb
xchg
incb
popf
outsb
clc
mov
xlat
xchg
addr16
mov
mov
cmp
test
cld
idivl
adc
xor
sub
leave
pop
xor
inc
loope
mov
cmp
loope
sbb
inc
pop
fwait
jno
push
mov
adc
adc
push
jmp
notl
jge
shll
adc
push
fimull
sbb
cmp
or
imul
dec
add
push
mov
jne
push
dec
xor
or
push
add
inc
ud2
iret
jae
fwait
ljmp
or
mov
imul
cmpsb
xchg
cmc
jg
bound
cli
lea
les
int3
test
inc
cmp
inc
sbb
movsb
sbb
jo
add
movsb
sbb
mov
fidivs
push
jmp
sub
push
cmc
mov
cmp
jp
cltd
or
sbb
lods
adc
movsb
push
jne
test
loope
or
jb
repnz
adc
lods
jbe
test
xor
xchg
dec
fnstenv
cmp
stos
push
test
and
das
add
sbb
inc
add
inc
aad
faddl
mov
clc
jecxz
fadds
adc
xchg
xlat
dec
lea
test
sbb
and
fwait
jbe
add
xor
pusha
pop
aad
mov
clc
cmp
inc
fists
shr
jp
in
pushf
xchg
sti
inc
jmp
and
fs
test
add
mov
outsl
shlb
mov
mov
pop
scas
and
lock
pop
and
fistps
mov
dec
push
and
lret
push
lock
inc
ds
das
repnz
insb
repnz
ja
mov
push
cmp
cmp
lock
and
idiv
or
adc
movsl
pushf
or
shrb
pop
mov
add
xchg
hlt
inc
sub
in
or
rcrl
loopne
jl
jl
xlat
mov
dec
jne
push
stc
lahf
add
aaa
cli
push
aam
cmpsl
loop
xchg
cld
mov
dec
pushf
fisttps
movsl
jl
add
mov
xchg
and
xchg
in
ds
fs
pop
loop
je
jl
inc
push
dec
ja
or
mov
out
xor
les
jae
ficoml
sti
testb
sbb
outsl
data16
push
stc
iret
inc
lahf
sbb
jmp
leave
inc
or
xchg
or
inc
es
sbb
cld
scas
scas
mov
jmp
push
shlb
mov
push
xchg
pop
xor
lock
cmp
push
jp
movsb
add
cmp
lock
dec
imul
test
jb
outsl
xor
pop
add
xchg
cmc
adcb
cmp
sbb
lcall
inc
dec
das
jg
mov
mov
add
xor
imul
jae
loope
pop
stos
adc
aad
adc
inc
mov
xor
inc
inc
push
push
xor
mulb
xor
sub
repnz
into
repz
addr16
xor
dec
stos
mov
xorb
fstpt
jae
jecxz
lods
inc
ret
jp
arpl
jno
dec
int3
or
in
push
jae,pn
adc
jo
fs
mov
cwtl
push
push
jp
or
jp
ja
mov
sahf
inc
jo
or
xchg
push
adc
gs
xchg
add
addr16
stos
jb
or
dec
inc
mov
mov
arpl
jge
cmp
push
push
inc
mov
daa
cmp
push
dec
adc
lret
sub
sbb
in
pop
int
and
test
imul
or
sub
fsubp
or
daa
xor
sbb
in
sbb
movsl
dec
inc
test
xor
sbb
in
xchg
sbb
xchg
test
stos
jnp
imul
cli
dec
ljmp
mov
sti
pop
jmp
fstpt
push
lcall
jnp
imul
cli
dec
ljmp
mov
sti
pop
jmp
fstpt
push
lcall
jnp
imul
cli
dec
ljmp
mov
sti
pop
jmp
fstpt
push
lcall
jnp
imul
cli
dec
ljmp
mov
shlb
and
xor
mov
or
sbb
and
pop
cmp
pushf
pop
mov
call
sbb
cmp
or
sbb
dec
popf
sub
movsb
jge
arpl
pop
cli
or
xor
dec
adc
add
push
gs
insl
test
fwait
sub
cmp
or
mov
fisttpll
insl
stos
jg
mov
sahf
mov
jb
cmc
inc
mov
fwait
notb
js
dec
aaa
sub
loope
stos
mov
add
sbb
cmpsb
mov
cmpsl
jmp
fdivs
cmpsb
mov
nop
and
cmp
and
jnp
add
mov
mov
inc
dec
inc
popf
test
test
mov
mov
push
lahf
fnstsw
cs
pop
ja
adc
sbb
loop
push
negl
or
lods
push
sub
and
ljmp
push
lock
and
inc
fisttpll
dec
or
ja
addr16
cmp
aas
std
sub
adc
js
dec
and
mov
dec
lock
or
sub
jge
push
sbb
cmp
sbb
lea
jns
pop
mov
inc
jne
mov
ja
push
out
push
fdivrl
pop
cwtl
pop
clc
js
pop
lods
lahf
sub
cmp
pop
mov
pop
insl
test
mov
sub
enter
sub
cmp
or
sbb
dec
popf
pop
insl
test
mov
sub
enter
sub
sub
sbbb
jecxz
out
xchg
inc
cs
inc
push
or
sbb
add
inc
je
pop
dec
inc
push
int
xlat
or
jne
or
fildll
xor
dec
sbb
push
cli
sub
adc
std
add
jae
push
cmp
jmp
or
adc
mov
mov
mov
sub
shr
push
lods
mov
hlt
xchg
jo
dec
scas
leave
outsb
enter
int3
sbb
pop
test
pop
stc
push
and
hlt
xor
xchg
xchg
pop
cmp
arpl
outsl
shr
push
push
cmp
out
out
aaa
mov
mov
inc
aam
and
aam
sbb
xchg
fs
mov
xchg
mov
or
pushl
popf
push
push
xor
lods
mov
dec
sbb
shl
ljmp
clc
dec
jne,pn
fists
dec
sti
pusha
insl
testl
xlat
dec
mov
jle
mov
nop
adc
add
dec
repnz
test
test
push
aad
das
out
out
out
cli
mov
mov
dec
shrb
pop
inc
insl
adc
sbb
out
xor
lock
cli
xchg
sub
mov
mov
jo
lea
imul
jb
add
les
int
call
out
dec
or
mov
addr16
pop
push
ss
pop
cwtl
mov
repz
mov
in
outsb
jl
mov
movsl
js
cmp
in
mov
stc
ss
push
leave
insl
scas
mov
inc
ds
ja
insl
movsl
push
inc
rorb
dec
insb
sahf
push
inc
pop
push
jns
mov
jl
popa
push
jmp
push
jmp
mov
repz
push
pop
test
and
jo
lock
sbb
pop
movsb
lret
test
xchg
cli
mov
pop
mov
jecxz
or
inc
iret
repz
and
pop
cmp
daa
inc
out
cmp
jb
orb
dec
jno
pop
push
pop
aam
add
pop
mov
aaa
popf
jmp
jb
push
mov
popa
jmp
jne
jae
jnp
mov
mov
pushf
or
mov
sub
test
and
inc
fisubl
dec
out
js
mov
outsb
push
mov
add
jle
in
dec
or
sub
out
xchg
loopne
dec
mov
mov
les
test
push
mov
nop
aam
shlb
sbb
or
pop
mov
add
push
xor
cmp
dec
sub
and
test
outsl
push
or
popa
sub
jae
jne
pop
test
call
mov
mov
movb
xchg
scas
ja
or
xchg
lea
mov
cmp
sub
sbb
sbb
push
lds
loop
push
mov
push
inc
inc
add
jno
xor
lret
sbb
push
xchg
pop
push
rcl
fdivl
add
mov
insb
cmp
dec
shrb
inc
and
retw
mov
jmp
repz
add
adc
xor
xchg
cltd
lahf
in
add
call
rorb
jmp
pop
rsqrtps
sbb
xor
hlt
repz
mov
lods
push
icebp
je
dec
xor
loope
bound
pop
in
mov
or
push
mov
ss
sarb
or
sbb
es
push
cmc
int
push
xor
aad
mov
lcall
ds
icebp
pop
imul
push
cmc
push
sub
sub
push
out
mov
mov
sub
lret
movsb
cs
movsl
pop
fnstenv
aas
icebp
incl
ror
movsb
pop
inc
gs
and
arpl
add
inc
daa
and
inc
int
adc
or
jo
jno
mov
pushf
pop
dec
aam
adc
mov
das
aas
js
add
and
jl
dec
orl
outsb
bound
adc
cmp
fwait
mov
test
scas
inc
pop
es
in
andl
cltd
scas
mov
and
pop
mov
popf
shrl
jns
gs
or
bound
mov
jp
fwait
insl
int3
das
sub
daa
jb
or
test
xchg
out
inc
add
inc
sbb
cmp
scas
pushf
shl
push
xchg
sbb
adc
add
pop
pop
test
xor
cld
sbb
mov
aas
or
push
add
aam
xor
ja
and
xlat
inc
scas
nopl
fdivl
and
mov
mov
int
mov
push
fwait
stos
push
test
sbb
mov
mov
sub
jns
outsl
mov
jo
sbb
out
dec
and
sbb
inc
push
ficoms
popf
orb
mov
loop
cmpsl
in
shrb
out
xchg
insl
leave
mov
jl
sbb
cwtl
sbb
xchg
dec
sub
add
mov
mov
and
movsl
jg
add
push
rolb
xor
mov
sti
gs
mov
pop
out
notb
fisubl
jle
push
adc
adc
mov
les
std
mov
inc
push
dec
jmp
dec
xchg
in
push
xlat
jae
or
jbe
inc
add
call
fbstp
rcll
nop
mov
push
insl
xchg
add
cmp
inc
insl
dec
loop
jno
and
mov
inc
dec
test
dec
sbb
rcl
jae
outsl
sub
inc
scas
repz
xchg
lret
or
push
fidivrl
scas
xchg
addl
jns
or
jmp
xchg
fiaddl
mov
pop
fnstcw
cmp
mov
push
lret
cmp
pop
mov
test
insb
mov
jae
dec
adc
call
fcmovbe
std
add
jns
std
stc
popf
aad
out
cmpsb
loopne
out
xlat
test
test
pop
loopne
and
push
out
xor
rorl
jg
sub
cmp
sub
mov
cmp
mov
xchg
add
bound
mov
pop
int3
lods
cmp
mov
or
ja
fidivrl
nop
sub
imul
fisttpl
mov
xor
lods
xchg
in
sub
rcrb
outsl
mov
rcl
subb
mov
das
dec
movsb
push
sbb
andl
mov
fst
movl
lds
rol
out
dec
loopne
cmpsl
imul
lock
push
pcmpeqb
cld
mov
push
adc
xchg
mov
jne
leave
xchg
jmp
xor
ds
xchg
cmp
stc
pop
ja
and
test
lahf
dec
dec
xchg
bound
mov
cmc
das
test
mov
in
adc
out
rorb
out
sbb
jns
and
arpl
movsb
test
repnz
push
lods
or
pop
loop
mov
and
mov
movsb
pushf
xor
jl
ss
out
add
mov
nop
std
int
repnz
loop
and
add
and
hlt
pop
test
xchg
push
adc
add
pop
shll
cmc
loopne
ret
call
xor
adc
xchg
xlat
loope
xor
cld
pop
je
mov
adc
add
sbb
cmpsl
and
shrb
aam
rcll
out
cmc
dec
mov
popf
fimuls
ds
imul
clc
inc
xchg
ret
pop
fiadds
sbb
inc
movsb
sbb
imul
xor
dec
movsl
shrb
addr16
scas
imul
push
iret
test
pop
dec
inc
lock
adc
sub
jae
dec
sbb
ds
push
addb
jae
push
inc
test
jb
or
es
bound
cwtl
dec
mov
or
sub
fcom
cmp
ss
aam
dec
xor
imul
pop
out
mov
sub
int
inc
add
cmpl
mov
mov
jne
fidivl
adc
in
sub
test
fidivrs
or
sbb
movsb
je
add
mov
sub
sahf
stos
push
sub
sub
and
inc
fidivrs
lahf
push
imul
mov
lock
xchg
mov
mov
aas
pop
add
mov
sbb
sbb
mov
inc
sub
cli
iret
leave
xchg
cltd
adc
cltd
lods
jno
push
outsb
nop
mov
test
inc
push
cmpsb
or
jnp
add
ret
cwtl
test
loopne
int3
fsubrl
mov
xchg
sub
shlb
and
mov
mov
leave
lods
clc
mov
cwtl
jae
sub
jno
mov
adc
in
shl
cli
mov
dec
inc
ja
mov
inc
loope
or
jae
mov
pusha
leave
xor
dec
test
or
mov
inc
ljmp
clc
xor
jno
pop
xchg
das
pop
mov
call
lahf
jg
dec
mov
hlt
mov
or
mov
push
xor
fcmovnbe
jecxz
adc
dec
or
nop
lret
sbb
xor
stc
xchg
pop
and
mov
clc
push
addr16
insb
xchg
in
fwait
icebp
or
in
out
jle
cmc
inc
cwtl
xor
js
ss
jecxz
pusha
xchg
and
mov
xor
imul
pop
jmp
mov
stos
mov
cwtl
sbb
std
lock
mov
add
jne
fisttpll
jns
jle
nop
arpl
adc
inc
pusha
cmp
mov
pop
jo
adc
hlt
rcrb
or
push
nop
in
dec
in
add
clc
dec
sbb
loopne
clc
adc
mov
aad
pop
js
push
test
or
insl
push
push
and
shrl
ss
nop
fsts
cvttps2pi
inc
or
and
loop
sub
out
popa
daa
dec
sbb
out
cmpsl
xor
aaa
xor
enter
push
mov
add
mov
xor
mov
in
mov
add
mov
jecxz
ss
cwtl
mov
mov
inc
xor
icebp
dec
popl
add
in
icebp
xchg
repz
dec
jmp
fbld
loopne
mov
mov
hlt
in
xlat
inc
pop
mov
jle
sub
mov
mov
xchg
jecxz
dec
jbe
sub
mov
mov
mov
out
adc
lcall
mov
sub
xor
add
add
cmp
mov
xor
arpl
je
adc
sub
lret
insb
cmc
insl
lcall
pop
pop
mulb
in
lret
xor
inc
in
jp
ret
mov
jbe
xchg
testl
fwait
jno
xor
and
push
jp
js
outsl
or
jnp
out
cmp
imul
mov
push
sete
stos
dec
test
pop
jg
dec
cli
or
push
movsl
add
test
inc
mov
fdivrs
add
cld
push
sub
orb
cltd
call
xchg
push
mov
inc
cli
add
stc
sub
rcrl
jg
pop
test
xchg
out
imul
push
fmul
imul
inc
dec
inc
mov
xor
rolb
xlat
into
lds
push
or
repz
dec
inc
push
jg
int3
jl
xchg
popf
dec
and
inc
js
inc
nop
ret
inc
jl
mov
adc
push
ffreep
xchg
popa
inc
fiaddl
pop
repnz
rcl
cli
stc
lahf
out
mov
sbb
repz
push
push
jge
mov
dec
jno
xor
movsl
stos
push
pop
call
jg
aaa
or
adc
dec
ja
aas
dec
pop
aam
mov
add
fs
idivl
mov
push
xor
jno
dec
cmp
push
jge
data16
fisttpll
mov
jne
xchg
mov
sub
mov
push
and
iret
in
push
adc
lret
sbb
pop
mov
xchg
test
icebp
shll
loop
xchg
mov
lds
stos
andb
mov
inc
inc
int3
xchg
xchg
pusha
jle
and
sub
fimull
lods
addr16
adc
mov
stos
cmp
jo
cmp
xor
cmp
shll
sbb
aas
dec
cltd
aad
jl
or
pop
movsb
xor
sbb
int
and
jle
sti
mov
xor
pop
cmp
xor
push
inc
ss
push
popa
lret
sbb
add
imul
or
cwtl
inc
jo
cld
fiaddl
mov
les
test
xchg
cli
mov
cs
int3
leave
data16
add
cmp
sahf
sbb
cmc
xchg
test
or
lahf
inc
sub
jae
aam
mov
jno
lcall
inc
mov
add
insb
xchg
jbe
sub
repnz
sbb
popf
ret
ljmp
iret
mov
mov
pop
mov
rcrb
scas
cmp
xor
inc
outsl
lods
andl
adc
mov
ret
dec
adc
mov
addl
sahf
push
imul
ja
shlb
ficoms
cmp
xor
xlat
dec
mov
push
mov
popa
mov
loop
mov
lods
int3
add
sbb
fs
cmp
mov
pop
pushf
xchg
jae
and
cmp
lcall
lret
jecxz
subb
cmp
add
rcll
lds
lods
call
test
test
mov
jne
or
sub
add
pushw
flds
out
or
cmpsl
in
inc
or
cmp
sub
or
idivl
pop
adc
sar
jge
fsubrs
mov
ds
ss
push
dec
call
pop
mov
stos
hlt
out
pop
push
ret
jae
out
mov
push
mov
loope
lea
dec
jns
cmp
mov
aas
and
adc
mov
jmp
sbb
lret
in
sbb
shll
divb
int
mov
pop
add
jbe
sub
cmp
lret
lods
int3
subl
xchg
mov
cwtl
xor
fwait
mov
leave
jg
in
push
mov
mov
sbb
add
hlt
xchg
xchg
or
lret
mov
inc
dec
xor
jg
fs
inc
xchg
push
xchg
imul
mov
movl
dec
pop
rorb
lods
out
jmp
or
in
icebp
jmp
xor
adc
sbb
inc
in
popf
sbbl
cmc
hlt
jmp
mov
dec
testl
ljmp
xchg
xchg
jecxz
push
arpl
mov
add
mov
mov
ret
push
lods
pop
lds
jp
inc
lds
xor
imul
fwait
negb
icebp
jno
imul
jp
sti
inc
jge
xchg
data16
or
mov
cmp
dec
jge
push
scas
sbb
jae
ljmp
icebp
push
loope
cmp
push
sbb
fsts
stos
fcoms
in
out
sahf
fdivr
and
arpl
ret
mov
pop
xchg
adc
ror
cmp
clc
jns
shll
jmp
sub
sbbl
es
jmp
xchg
scas
mov
cld
lods
jb
xlat
addr16
push
xchg
addr16
mov
les
outsb
cmp
sbb
add
les
pop
aas
jae
adc
cmpsl
sub
cmp
xlat
cmp
push
outsb
add
jnp
mov
mov
and
out
cwtl
sbb
pop
and
cmp
sbb
mov
cmpsl
jmp
in
call
rcrb
sbb
lea
shrl
mov
dec
xchg
and
or
mov
add
shll
add
hlt
xor
int3
mov
inc
pop
mov
jne
aas
mov
popf
adc
pop
dec
movsl
scas
ret
test
sarl
mov
pop
pusha
jb
dec
fs
das
push
sub
mov
ret
xchg
clc
push
jnp
lcall
sbb
lods
les
sti
or
jg,pn
aas
gs
add
jl
mov
fildl
mov
scas
cld
out
lock
xchg
insl
mov
das
jb
ja
daa
pusha
or
inc
fbld
push
in
stos
inc
add
js
out
sar
sub
xor
test
sarb
cmp
mov
mov
add
loope
mov
seta
sti
jb
jmp
lods
dec
ret
mov
testl
xchg
outsl
call
into
jecxz
int3
in
lds
and
call
leave
mov
les
cmp
rolb
xchg
lods
inc
addr16
daa
in
push
in
call
push
dec
dec
sbb
jae
add
fwait
outsl
shrb
lods
push
lods
in
push
fisubl
add
loope
xor
or
sub
push
data16
in
daa
mov
out
inc
push
adc
shrb
fadd
xchg
ret
into
mov
mov
sub
jmp
lea
xchg
push
mov
push
je
and
push
mov
push
imul
xor
xor
movsl
mov
cmp
push
std
test
push
ret
lods
sbb
add
cmp
push
mov
inc
mov
cmpsb
and
mov
sbb
push
inc
mov
jle
mov
inc
addr16
jecxz
cwtl
sahf
out
and
lds
and
icebp
pushf
inc
push
cs
jecxz
test
ljmp
rol
gs
xorl
xchg
mov
mull
cltd
enter
push
dec
push
das
mov
int3
insl
pop
pop
sarb
mov
scas
lock
imul
roll
adc
fadds
cld
cmpsl
cmpsl
test
cs
xor
mov
mov
xchg
adc
fcmovnbe
scas
fwait
sar
and
lcall
repnz
nop
cmp
scas
imul
and
lds
sub
cmp
pop
les
idivl
push
adc
out
jp
inc
outsb
inc
inc
imul
jg
sub
add
mov
outsb
aas
adc
adc
repnz
xlat
les
out
int
lock
test
ja
push
lods
ret
subb
sub
mov
ljmp
xchg
js
pusha
cmpsl
mov
test
mov
mov
sbb
nop
or
hlt
clc
cli
das
add
push
outsl
fdivs
and
shlb
scas
sub
outsb
shll
fidivrs
adc
and
cld
and
or
mov
fld
insb
cmp
rcr
jns
xchg
fldl
mov
mov
and
pop
popa
pop
ret
and
inc
xlat
fistl
dec
in
popa
aad
xchg
mov
sub
int3
xlat
rorl
sbb
bswap
rolb
popa
push
add
sbb
push
icebp
sub
js
mov
and
das
push
jg
mov
mov
and
jp
movsl
xor
push
daa
jno
sbb
mov
dec
inc
es
and
push
inc
call
adc
add
aad
cli
enter
daa
pop
sahf
stos
std
rsqrtps
aam
aad
sbb
es
adc
push
sbb
add
es
in
aam
push
adc
mov
xchg
andb
xchg
jl
pop
push
jg
sub
loope
xchg
shll
test
repz
xor
cmpsl
mov
sbb
xchg
sbb
rclb
add
icebp
adc
sub
movsl
scas
xchg
ret
or
ja
rclb
pop
mov
mov
cmp
mov
or
scas
xchg
mov
cmpsl
cmp
test
jp
aad
mov
adc
testb
push
xchg
and
dec
xor
shlb
or
adc
ret
fimuls
push
leave
jbe
int3
loop
add
mov
and
outsb
xchg
pop
jge
push
pop
adc
jl
loop
sub
sub
push
js
xchg
or
daa
out
mov
adc
jmp
pop
xor
cmp
js
cmp
pop
sbb
arpl
mov
mov
mov
mov
xchg
jb
jp
mov
fwait
mov
int
sbb
pop
jb
mov
sbb
sub
adc
cmp
xor
movd
xor
sbbb
popa
dec
inc
movsl
sbb
out
and
and
aas
fidivl
add
add
pop
outsl
sub
repnz
xor
inc
flds
and
jecxz
pop
sub
std
pop
lods
cld
test
adc
inc
and
xchg
jp
pop
and
aad
shlb
jle
xchg
or
gs
js
xlat
dec
inc
inc
aas
and
leave
xchg
sub
insl
jl
lods
movsb
test
sbb
sarl
or
sbb
dec
popf
pop
insl
test
mov
sub
enter
sub
cmp
or
sbb
dec
popf
pop
insl
test
mov
sub
enter
sub
cmp
or
sbb
pushf
pop
imul
and
or
sub
cmp
or
sbb
dec
sbb
adc
mov
pop
pusha
mov
repnz
cmpsl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
in
dec
cmpsl
cmp
stc
and
jge
call
or
add
add
or
pop
add
add
sub
aam
aam
stc
add
add
add
add
pop
add
push
pusha
add
add
pop
add
add
jns
adc
sbb
add
add
add
add
add
lds
sbb
push
add
add
add
movl
sahf
add
add
or
push
add
add
add
mov
add
push
add
add
add
inc
add
mov
add
add
xchg
add
sub
add
add
add
lock
sbb
mov
add
add
add
add
add
add
push
add
add
add
add
leave
add
add
add
cmp
stos
add
add
add
add
and
outsl
add
add
add
add
add
sbb
mov
add
add
add
jle
mov
add
cmp
outsl
add
add
add
add
add
jbe
loopne
pop
add
add
add
add
add
add
add
add
jbe
mov
add
sub
jle
cltd
add
add
outsl
add
add
push
add
sub
and
jbe
jle
inc
add
add
add
add
dec
add
add
push
add
sub
add
add
add
inc
add
add
add
add
add
lods
add
add
sub
add
add
add
add
add
add
mov
add
add
adc
jne
xchg
add
add
add
add
add
add
jne
push
add
add
add
add
add
add
add
add
aam
mov
add
add
push
add
add
adc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
jne
or
movsb
add
add
add
pushf
add
add
add
add
add
add
push
add
add
add
add
jle
inc
add
add
add
add
add
outsl
add
add
add
sub
add
add
pop
add
push
add
add
add
add
add
addl
push
add
add
add
add
sbb
and
jle
loopne
lods
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
adc
jl
add
cmp
inc
add
add
add
add
add
push
add
add
add
add
add
add
push
or
sub
and
mov
inc
add
add
add
pop
add
sub
add
add
in
adc
sbb
mov
mov
pop
add
add
adc
add
add
sub
add
add
add
add
inc
add
add
flds
add
mov
cwtl
lods
popa
jns
mov
mov
or
add
in
mov
in
fistpl
pop
push
fmull
inc
cmp
outsb
ret
cmp
ret
xlat
stos
jmp
and
inc
icebp
xor
mov
lock
or
jmp
call
mov
sbb
sbb
push
stos
lods
xor
cmp
pop
outsl
pop
jp
dec
iret
pushf
movl
rclb
cld
pop
mov
and
cmp
mov
andb
push
addr16
and
loope
add
push
pop
scas
imul
sarb
mov
cmp
outsb
cmpb
lretw
clc
lods
jo
inc
outsb
cld
ret
and
aam
push
enter
daa
mov
push
xchg
mov
pop
fidivrl
stc
push
data16
andl
mov
sub
notb
dec
int
mov
shll
sub
jne
sub
mov
xor
andl
fimuls
pop
bound
mov
ss
push
mov
sbb
iret
mov
push
and
push
add
andb
push
dec
pushf
inc
iret
inc
dec
push
cmpsl
pop
push
sub
and
pop
push
int
pop
ja
push
sub
sbb
rcr
and
jmp
mov
pop
inc
lea
insl
pop
stos
ds
mov
in
lcall
test
clc
or
jnp
fidivrs
outsl
dec
outsb
aaa
ds
ljmp
sub
ret
jnp
and
ds
sub
push
or
add
lock
sbb
xchg
mov
add
mov
inc
push
sbb
pop
fadds
outsb
cmp
inc
cld
cmpsl
and
inc
cmc
gs
lret
int3
push
bnd
aas
xor
dec
jne
sub
nop
mov
pop
add
or
cmp
adc
cltd
pop
add
push
dec
popf
add
fists
add
arpl
xor
cld
jle
stos
jnp
icebp
std
pusha
je
xchg
out
leave
push
pop
ljmp
inc
mov
push
push
stc
xor
mov
mov
cli
ror
adc
add
int
xor
push
sub
imulb
mov
enter
xchg
push
mov
mov
jae
lret
loop
fiadds
ja
out
lret
sahf
test
stc
ljmp
pop
push
out
out
fwait
pop
mov
or
adc
mov
mov
sub
and
sbb
mov
dec
xchg
sbb
mov
icebp
mov
pop
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
