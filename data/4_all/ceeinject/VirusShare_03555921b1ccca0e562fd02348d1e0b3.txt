call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
stos
xlat
dec
mov
das
fsubrp
repz
cmpsl
aaa
bound
inc
arpl
and
aaa
mov
aaa
pop
daa
out
xlat
test
cmpsl
xchg
mov
xchg
ja
imul
add
cmp
out
adc
mov
lcall
addr16
sbb
adc
pop
imul
fs
cmpsb
fwait
xlat
mov
xchg
mov
inc
adcl
lea
jae
fs
out
jb
inc
enter
xlat
mov
mov
out
je
dec
adc
test
mov
mov
lcall
les
das
sbb
lods
repz
inc
mov
mov
mov
mov
or
xchg
xchg
xchg
and
and
push
mov
adcb
call
cmp
or
xchg
pop
push
xor
ret
mov
daa
mov
aam
aaa
pop
push
bound
cmp
jb
sub
outsb
negl
mov
mov
xor
not
out
mov
xchg
push
in
lahf
outsb
dec
jle
movaps
pop
sub
xorl
xchg
fcomi
ret
ss
pop
jae
add
pop
add
out
jg
addb
jmp
in
pop
and
and
adc
gs
addr16
pop
jb
push
push
xchg
xlat
mov
xchg
mov
xchg
ja
inc
ja
addr16
pop
aaa
pop
pop
aaa
pop
daa
out
test
cmpsl
xchg
mov
xchg
ja
inc
ja
addr16
pop
aaa
pop
pop
aaa
pop
daa
out
xor
outsl
jo
in
sbb
sbb
jns
mov
pusha
outsl
mov
mov
movsb
les
movsb
stc
xor
insl
push
test
pusha
mov
and
inc
sbb
mov
sbb
sti
dec
mov
jg
clc
orb
roll
addb
cmpsb
dec
leave
or
inc
aaa
jl
mov
rorl
inc
xlat
fldl
sbb
leave
lret
inc
fldt
fistpl
fsubs
jle
dec
lret
mov
stos
and
pop
js
push
sub
push
mov
sub
ja
adcl
sbb
sub
jb
xchg
lods
in
fstpt
in
notb
cs
mov
cs
and
add
or
bound
lock
cmpsl
xchg
push
in
push
xchg
jle
rcrb
mov
push
add
pop
imul
rolb
pop
mov
push
stos
xchg
inc
lahf
mov
dec
sbb
jo
sbb
cs
inc
xor
mov
loopne
push
pop
mov
adc
out
pop
add
daa
in
mov
les
jb
push
jp
sbb
rclb
ret
pop
enter
xchg
das
push
cmp
push
das
xlat
xor
dec
fnstsw
pop
sbb
jecxz
jg
push
roll
sub
sarl
mov
je
jmp
cpuid
sbb
xchg
cmc
nop
je
mov
sub
cmp
jge
fsubrp
popa
aaa
mov
mov
mov
push
aam
adc
push
clc
mov
adc
xchg
cmpsl
mov
jnp
dec
or
or
sub
dec
push
enter
push
frstor
or
jl
std
into
in
xor
cld
mov
outsb
outsb
fldt
test
cmp
stos
push
stc
dec
mov
add
ret
iret
std
inc
fcoml
or
jae
sbb
sbb
addr16
or
mov
push
fstps
idivb
push
leave
add
add
add
mov
dec
and
fistl
ds
fwait
push
add
in
jns
fstl
xor
js
enter
bnd
insb
mov
add
ret
xor
test
jecxz
scas
sbb
push
or
pop
push
mov
add
xchg
dec
notb
jns
xor
xchg
sarb
dec
inc
aad
lods
aaa
xlat
add
xchg
into
movl
outsl
jae
mov
push
mov
push
sbb
add
and
popf
int
gs
inc
cmp
shrb
decb
xchg
fwait
cld
xchg
lock
popa
mov
test
imul
out
add
shll
adc
jecxz
lret
cmp
push
and
jge
adc
inc
cmc
pop
sbb
push
out
mov
int3
aas
notl
ud2
dec
lea
out
cmc
mov
cmc
pop
jbe
pushf
push
push
popa
sbb
and
cs
lcall
jno
dec
imulb
or
lods
inc
xchg
push
mov
xchg
pusha
sbb
fadd
rorl
aad
gs
mov
adc
roll
add
dec
add
mov
js
lret
mov
xchg
jbe
sbb
push
lret
int3
pop
hlt
or
pop
mov
xor
sbb
adc
sub
movsb
mov
scas
xor
jb
in
outsl
aaa
shll
in
mov
fstp
stos
sahf
xor
stos
inc
or
push
fistps
inc
dec
push
ds
mov
lret
pop
adc
cmp
dec
jecxz
cmp
pop
loopne
orb
push
pop
sub
sti
notb
mov
rcrb
loopne
ret
jb
pop
push
stos
sti
cltd
loope
std
jge
lcall
es
cld
shrb
out
push
mov
pop
mov
mov
push
out
aas
das
out
into
jb
mov
inc
jae
add
jbe
aam
pop
jno
adc
lods
movl
out
push
adc
std
add
xchg
xorl
or
push
xor
ljmp
cmpsb
sti
rcrb
pop
int3
mov
jmp
lcall
xchg
inc
pop
in
bound
mov
out
mov
add
or
and
insb
adc
lcall
and
sar
jmp
ss
jp
in
dec
sub
cld
lcall
adc
push
test
enter
lds
jbe
mov
mov
and
shlb
movsl
adc
ret
mov
or
lret
scas
subl
and
fcompl
cmpsl
push
or
xchg
xchg
push
or
stos
mov
pop
fnsave
add
into
and
std
in
inc
sbb
fldcw
or
fwait
in
inc
mov
sti
and
lods
mov
test
stos
clc
pop
or
xchg
push
mov
add
or
xor
jb
repz
outsl
nop
xchg
rolb
and
cmp
dec
aad
xor
cmpsl
popa
cmpsb
add
lea
pop
ds
movsl
pop
jne
jmp
repz
adc
aam
loopne
sub
notl
mov
fs
fcoml
loop
stos
in
pop
adc
mov
mov
jecxz
add
mov
and
xchg
mov
cmp
js
mov
cmp
sahf
iret
add
rol
pop
icebp
push
add
xchg
pop
jle
test
loopne
mov
add
stc
imul
sbb
jecxz
jb
push
and
hlt
xor
das
nop
movsl
and
test
psubsb
jo
clc
int3
push
sub
jne
mov
int
fs
lret
fiaddl
sub
lret
mov
inc
scas
leave
roll
stos
pop
jmp
xor
or
daa
sbbb
mov
push
jge
and
in
fcomps
mov
testl
fnstsw
jae
lahf
inc
dec
inc
outsl
adc
add
inc
jns
lods
push
mov
and
adc
rorl
adc
fimuls
jl
ljmp
sub
mov
add
dec
test
xchg
mov
mov
jns
mov
xor
cwtl
test
mov
jmp
aad
gs
lret
jg
xchg
fisttpl
mov
mov
aam
mov
adc
or
xchg
mov
lods
loope
popf
hlt
mov
rcrb
mov
rcr
dec
imul
mov
xor
pushf
push
lea
and
in
pop
push
lret
mov
mov
mov
imul
xchg
ja
mov
test
incb
push
lcall
jl
push
cwtl
pusha
sbb
sub
cli
mov
rcll
es
add
nop
leave
test
sbb
imul
pop
insl
arpl
outsb
fwait
push
outsw
xchg
jbe
sub
imul
xor
mov
aaa
aas
lods
gs
pop
arpl
ljmp
dec
mov
bound
fwait
mov
jg
cmp
fchs
jp
pop
or
mov
lcall
push
lock
adcl
test
and
xlat
lods
adc
sti
lods
pop
rcr
icebp
dec
fdivrl
mov
jnp
mov
mov
inc
add
iret
dec
jmp
mov
mov
pop
xchg
in
jo
ds
xchg
dec
mov
rorb
stc
mov
sub
rclb
jmp
mov
sbb
out
cltd
into
sub
adc
ret
cmpb
test
mov
sub
gs
jnp
mull
rclb
and
sub
mov
mov
cmp
mov
clc
sti
jo
fcmovu
xchg
mov
and
aad
pop
gs
push
cld
jns
outsl
or
sbb
shlb
mov
ficomps
loope
pop
and
or
loopne
mov
sub
not
shll
outsl
or
xchg
fldl2e
xchg
subl
cmpsl
adc
lret
inc
icebp
mov
jb
das
dec
fs
stos
pop
inc
jno
out
orl
and
inc
lea
int
inc
add
mov
fidivl
pop
adc
mov
or
pop
fcmovnb
inc
ss
mov
aam
pop
cld
lcall
dec
jg
ja
jb
outsl
into
and
in
rcr
or
movsl
xorl
jnp
jg
cmp
addr16
push
shl
stc
cmp
lcall
push
sbb
sar
jmp
xor
add
mov
push
sub
adc
mov
fdivs
xchg
mov
cmc
cwtl
testb
sti
cs
bound
dec
insl
pop
adc
cwtl
mov
jmp
fistpll
subl
or
call
pop
nop
stos
aam
cmc
pop
gs
xchg
movsb
jo
adc
mov
cltd
xor
ja
cmp
test
scas
sub
mov
mov
fdivrs
pop
mov
in
mov
adc
in
pop
push
lret
aaa
lcall
add
in
ja
sub
mov
jecxz
xchg
loopne
inc
jmp
rolb
std
xchg
cmpsl
std
sbb
and
cwtl
jecxz
cmc
and
dec
pusha
xchg
jnp
fcompl
or
popa
test
mov
pop
dec
cld
mov
adc
pop
jb
jae
cmpsb
mov
ror
jno
xor
scas
push
cmpsb
sti
cmp
lds
jae
loopne
cmp
rolb
fldt
outsl
jnp
cld
ljmp
outsl
imul
insb
push
clc
enter
fcmovb
mov
test
test
or
sbb
mov
dec
mov
arpl
insl
xchg
lcall
or
lds
cmp
lods
sti
sbb
pop
inc
pusha
jge
sbb
ljmp
xor
stos
adc
imul
movsl
in
jbe
out
test
sbb
adc
mov
add
xchg
lret
loop
jle
pop
lods
fstpt
jnp
pusha
aad
sub
sbb
jecxz
jmp
xlat
lods
push
xchg
fbld
sahf
clc
movsl
in
pop
inc
sbb
mov
js
xchg
mov
push
jge
mov
pop
fisubrl
pop
push
or
out
adc
and
push
push
jmp
adc
cld
movl
add
imul
mov
aad
mov
fmul
mov
cmpb
adc
insl
call
sbb
call
movsb
fwait
neg
cmc
and
ret
sub
adcb
call
push
enter
push
push
nop
dec
xlat
data16
or
inc
jmp
enter
stc
push
jg
cltd
incl
fcmovbe
inc
dec
jb
cmp
shrb
jnp
mov
stos
push
mov
in
pop
push
pop
nop
jnp
sbb
pop
test
add
mov
out
testb
xlat
sub
bound
add
push
sarl
jae
cli
sbb
cwtl
pop
jle
dec
mov
les
sub
or
xor
and
and
pop
xor
mov
or
xor
sbb
rclb
mov
es
xor
jle
pop
cli
dec
jmp
mov
in
icebp
aam
mov
loopne
adc
icebp
or
sub
test
outsl
xor
mov
inc
outsl
xchg
jb
into
fstpt
dec
mov
dec
out
sbb
mov
pusha
inc
cld
loopne
fdivrs
movq
and
mov
jno
pop
jecxz
out
jns
mov
and
inc
bound
fwait
into
ljmp
outsl
dec
sbb
and
test
mov
jecxz
push
pop
and
adc
in
call
dec
inc
pop
xchg
popa
test
fcoms
fsubr
xchg
fdiv
daa
divl
sbb
stos
mov
test
push
mov
imul
rol
nop
mov
and
cmpsl
fmul
call
fadd
and
sbb
inc
sbb
movsb
mulb
jo
sarl
loope
adc
inc
pop
cmp
ret
test
ficomps
mov
jge
mov
adc
inc
in
push
scas
shll
adc
out
xchg
cwtl
icebp
aaa
sub
lods
es
xchg
aas
daa
cld
in
in
and
shlb
shll
cli
jl
cltd
mov
or
cmpsb
cmpsl
or
mov
fsubrs
popf
xchg
shlb
dec
outsb
mov
mov
push
mov
mov
push
push
jmp
je
xchg
or
push
nop
add
rclb
cltd
mov
popf
mov
fadds
jmp
aaa
push
enter
mov
je
lds
fcmovnu
gs
lret
and
xchg
push
adc
imul
movsb
ljmp
pop
xor
adc
push
adc
xor
jb
mov
dec
cltd
lock
xorl
call
in
or
jno
lret
mov
inc
and
sub
test
sub
fcmovbe
inc
or
inc
rolb
and
test
out
inc
aam
fwait
sbb
pushf
pushf
and
mov
lock
jp
xchg
loopne
mov
movsl
lret
sbb
add
fmuls
mov
inc
cmp
dec
jl
clc
ljmp
fists
pop
lods
lock
sbb
das
jnp
mov
cs
push
xor
lds
les
push
dec
iret
ret
jmp
mov
movsb
std
aad
rolb
leave
jle
mov
mov
jp
jbe
les
add
popa
xor
les
inc
std
cmp
sbb
mov
stos
add
and
gs
pusha
mov
add
and
xchg
adc
fstl
aad
adcb
push
mov
inc
pop
and
inc
mov
push
adc
outsl
and
cwtl
cmpsl
or
test
xchg
stos
test
mov
jne
insl
and
popf
sbb
inc
mov
int
pop
gs
xor
js
pop
mov
cs
inc
pop
in
mov
pusha
loopne
mov
call
sbb
inc
out
or
xchg
add
lods
jmp
sub
xchg
or
aad
int3
push
pop
movsl
adc
sti
mov
ljmp
cmc
aad
aaa
int
pop
call
lret
js
test
loop
ret
push
fs
cld
cli
ffree
xor
jno
push
xchg
aad
xchg
js
es
and
insl
repnz
push
dec
sub
pop
xor
cmp
pop
xor
hlt
push
push
xor
push
out
aas
inc
das
shlb
out
and
add
mov
je
add
push
outsl
adc
mov
add
cli
push
xchg
pop
add
adc
xchg
cmp
test
aam
iret
shll
pop
cmpb
mov
dec
sbb
stos
add
ficoms
xchg
cmp
call
inc
push
loopw
std
mov
dec
xor
jo
shlb
xor
imul
sbb
int
orb
push
sbb
mov
xchg
js
fbstp
adc
out
test
cwtl
iret
sub
jns
cmpb
add
xchg
sti
xor
xchg
xchg
aaa
gs
mov
cmp
fs
sub
imul
pop
xchg
push
mov
pop
lods
addr16
fistps
ss
dec
sbb
fcompl
adc
jle
mov
push
fstpl
mov
cmp
jns
mov
out
out
dec
out
xchg
loope
fldenv
push
int3
push
out
dec
cld
mov
add
xor
fsubl
shl
push
push
adc
ss
dec
xor
sbb
es
mov
repnz
xor
imul
jbe
mov
dec
push
stos
lods
out
xchg
lds
data16
add
cltd
push
xchg
aam
jp
aad
mov
jo
aam
je
mov
sbb
jbe
sub
jnp
mov
pop
rcrb
inc
sbb
pop
add
call
lods
gs
jecxz
cs
xchg
loop
je
cmc
ja
adc
mov
mov
jbe
aas
mov
enter
sbb
loop
xchg
inc
scas
jge
push
popa
popa
mov
xchg
addr16
mov
dec
and
roll
shr
mov
dec
pop
cmc
add
ficoms
push
mov
test
mov
mov
inc
add
jge
out
and
outsl
and
sbbb
adc
filds
cli
test
mov
xor
push
loopne
fdecstp
jg
and
mov
call
lock
outsb
notl
sbb
sbb
cmp
sbb
pop
aam
mov
lds
mov
test
cli
push
sahf
inc
fstps
test
pop
or
lods
arpl
or
pop
xchg
nop
movsb
xchg
inc
sub
pop
les
fnstsw
fldl
pop
adc
cmp
xchg
mov
and
jl
shrb
xor
adc
int3
pop
loope
or
rorb
adc
mov
aam
xchg
into
push
fimull
dec
mov
dec
dec
mov
cmp
mul
scas
in
pusha
add
push
gs
adc
mov
sbb
scas
sub
fistps
xchg
mov
clc
pop
and
lea
pop
push
lea
pop
jp
icebp
rcr
jbe
jne
push
ja
mov
sub
cmpsb
inc
pop
inc
xchg
rcrb
adc
and
jno
aam
and
pop
push
mov
hlt
xchg
cmp
sub
push
xorb
push
jno
xchg
sti
inc
iret
ficoml
aam
and
clc
cmp
add
negb
inc
ret
cmp
inc
mov
mov
sbb
cmp
jb
subl
repnz
bound
pop
or
cmpsl
cmc
mov
mov
cmp
push
mov
push
std
shl
out
dec
jb
add
and
scas
xchg
mov
inc
inc
cmp
scas
jmp
inc
pop
xchg
dec
dec
jbe
jno
xor
or
and
sub
cwtl
out
cmpsb
out
sub
jecxz
daa
sbb
cmp
test
xchg
das
in
sarl
and
out
pop
adc
pop
dec
cld
jmp
mov
cmp
insl
loop
adc
out
sbb
adc
stos
sub
pop
ret
test
jle
iret
cmpsb
mov
scas
lret
adc
das
aas
add
mov
sbb
mov
fnsave
pop
jmp
popf
ret
adc
jge
mov
mov
lcall
es
jo
add
push
sub
dec
inc
fmull
test
pop
out
xor
jg
imul
pop
imul
addb
pop
leave
dec
loopne
pop
in
test
sti
insl
in
lods
loopne
jmp
sub
pop
dec
nop
push
fstpl
mov
jmp
mov
inc
and
adc
pushf
dec
ss
in
jb
idivb
ss
gs
sbb
add
jmp
inc
repz
mov
pop
iret
add
or
in
test
xor
jns
daa
shrl
pop
xchg
mov
inc
pop
sub
pop
sub
pop
lods
out
lret
pusha
adc
jecxz
adc
ja
out
xlat
jl
add
mov
adc
stos
test
adc
out
jl
leave
stc
ss
andb
test
cmp
xchg
and
lods
inc
mov
repz
es
add
insb
pop
out
jmp
sbb
pop
lcall
mov
push
fisubrl
pop
pop
sub
inc
stos
ficompl
xchg
push
inc
mov
mov
pop
divb
pushl
push
add
dec
movl
sub
insb
and
ja
push
je
adc
xchg
dec
jge
cmpsl
loopne
addr16
mov
mov
adc
repnz
in
mov
push
stos
test
ret
cmc
sbb
mov
es
jmp
xchg
popa
leave
adc
dec
sahf
cli
xor
aam
push
xor
and
lock
in
stos
push
testb
mov
orb
mov
in
fstl
push
push
sbb
aas
jae
fyl2x
loope
mov
push
lret
jl
sub
cmpsb
mov
iret
inc
loop
dec
cwtl
test
lcall
sbb
and
lds
cld
daa
add
les
xlat
pop
lahf
cltd
fcomps
mov
mov
jecxz
jo
fistl
and
pop
imul
mov
in
rcl
push
inc
fnstcw
insb
outsl
pop
fcoml
jne
dec
fistps
je
aam
sub
popa
mov
cs
sub
sub
mov
cmp
inc
fcomps
dec
xor
out
iret
pop
loopne
pop
test
xchg
xchg
mov
pusha
into
lret
jl
sbb
mov
insb
push
in
lcall
mov
test
xchg
push
ja
inc
ja
addr16
pop
aaa
pop
pop
aaa
pop
daa
out
test
cmpsl
xchg
mov
xchg
ja
inc
ja
addr16
pop
aaa
pop
pop
aaa
pop
daa
out
hlt
xlat
not
out
xchg
mov
xchg
ja
dec
ja
arpl
pop
cs
add
daa
and
rcr
ret
dec
repz
cmpsl
xchg
cmpsl
xchg
push
mov
in
ja
adc
mov
pop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
pop
mov
xor
lahf
les
push
cmp
pop
popa
pop
jno
push
ss
mov
notb
cmpsb
shll
pop
and
push
add
mov
mov
testb
fnstenv
or
je
adc
jg
push
pop
pop
push
mov
fsubrs
push
mov
pop
pop
test
stos
push
mov
or
mov
lock
or
cvttps2pi
pop
xor
sti
adc
in
and
inc
into
sbb
pop
xlat
ss
mov
icebp
sub
movsb
push
icebp
xor
jno
mov
mov
sbbl
xor
mov
push
jno
into
loopew
out
out
inc
mov
lret
cmp
cmp
jecxz
outsb
rcrl
lods
and
ss
jbe
push
or
mov
scas
push
insb
xorl
pop
sti
jo
mov
adc
add
push
add
mov
cmpsb
out
testb
fdivs
sub
jbe
push
jns
es
ss
mov
repz
loope
sarl
push
adc
or
and
inc
cmp
fsts
xchg
jecxz
bnd
cmpsb
movsl
into
mov
push
jne
push
dec
adc
jbe
sub
loopne
aam
loopne
in
lea
roll
push
xor
jbe
push
popa
push
jno
inc
ss
mov
notb
cmpsb
shll
add
push
popa
push
jno
inc
ss
mov
movsb
xor
popf
xchg
aam
inc
cmp
cvtps2pd
mov
sbb
cmp
ret
roll
adcb
xor
fidivl
push
mov
xchg
cmp
cmpsl
sbb
sub
add
xchg
inc
jb
fucomip
je
cwtl
pusha
fs
sahf
pop
outsl
push
sbb
mov
iret
add
mov
inc
sbb
adc
adc
lahf
jno
ret
jb
push
inc
mov
ljmp
push
cltd
inc
adc
test
or
dec
jmp
mov
xor
addr16
call
mov
jnp
add
inc
and
mov
in
mov
ljmp
jno
inc
fisttpll
mov
enter
add
mov
ja
cld
jmp
dec
dec
sti
jae
ret
inc
cld
rcl
jp
les
leave
movsl
das
hlt
imulb
pop
icebp
dec
pushf
sub
psrad
movsb
xor
mov
pop
pop
lret
in
stos
dec
add
push
cmpsl
fildl
jecxz
ficoms
in
into
fs
fdiv
insl
fsts
stos
inc
call
mull
shrb
mov
stos
outsl
pop
dec
add
mov
lcall
aas
fists
xchg
jnp
and
gs
orl
test
mov
mov
inc
movsb
out
iret
adc
jmp
xor
in
xor
out
push
popa
call
cld
pop
push
ljmp
inc
jbe
mov
iret
notb
loop
mov
jge
cwtl
or
js
pop
dec
loopne
ss
cwtl
lret
mov
sub
push
adc
xchg
cmc
ljmp
add
pop
mov
push
fwait
popf
jb
divb
int
adc
fsubrl
not
or
fsubrl
jns
add
rol
cs
fildll
daa
cli
mov
into
adc
push
add
xor
call
enter
sub
mov
or
mov
mov
dec
repz
cld
js
daa
mov
push
movb
xchg
pop
xchg
xor
xchg
lret
fsubrs
repnz
lods
xchg
cli
cmpsl
pop
push
or
and
mov
mov
cwtl
sub
mov
pop
mov
mov
xchg
mov
repz
sbb
add
jge
sqrtps
mov
push
test
cmp
inc
push
or
add
xor
adc
pop
dec
out
aad
sahf
rcrb
xorb
adc
and
inc
or
loope
dec
pop
cmp
repnz
pop
jno
fldenv
arpl
and
jecxz
xor
sub
mov
std
clc
ljmp
push
mov
cld
sub
xlat
push
and
inc
outsl
mov
add
test
stos
pop
mov
enter
icebp
jbe
lret
shlb
jge
push
push
scas
push
lcall
jne
mov
movsl
inc
or
or
icebp
cli
jae
outsl
jle
mov
pop
inc
bound
cld
adc
adc
xchg
addb
cmp
lds
xor
or
cmpsb
fisttpl
dec
xor
adc
jne
aad
sahf
mov
fistps
movsl
lret
mov
sub
out
sbb
test
es
arpl
pop
pop
jnp
cmp
inc
xlat
gs
xchg
imul
mov
or
push
xchg
xchg
sbb
add
xchg
in
insl
mov
jle
pop
in
jg
mov
jp
cmpl
dec
xchg
mov
test
orb
jne
aaa
fimuls
push
cwtl
outsl
pushf
cmpsl
push
pop
pop
andb
mov
icebp
dec
mov
outsl
and
fdivp
scas
and
aas
push
jno
sub
lods
jl
adc
daa
mov
sti
adc
cmp
stos
mov
xlat
sbb
inc
mov
cmpsl
popa
cmp
fimuls
xor
bnd
mov
pop
fdivrl
push
call
mov
mov
inc
mov
test
je
hlt
mov
and
rcrl
mov
out
jbe
icebp
push
sub
cmp
xor
xchg
inc
sub
sub
mov
mov
and
cmc
cmp
lcall
stos
int
clc
xchg
jae
adc
mov
or
repz
mov
out
fidivs
test
xchg
insb
shll
push
loopne
cmp
push
outsl
xor
jmp
and
fistps
jae
mov
push
mov
insl
sti
adc
rcrb
mov
lret
das
pop
mov
mov
bound
ja
mov
or
pop
inc
mov
stc
imul
popf
push
insl
mov
add
adc
add
cmp
movl
lret
call
in
lods
sbb
jo
in
in
arpl
or
ret
fcmovbe
xchg
jle
jne
subb
lret
js
lret
jne
fnstenv
adc
cmpsb
arpl
sti
repz
shrl
mov
ds
sbb
mov
sub
les
leave
shlb
test
sbb
or
sbb
fisttpl
scas
cld
lds
icebp
push
adc
push
jmp
in
mov
jge
sarb
dec
lret
mov
mov
fisttpll
xlat
and
bound
or
xor
test
pop
ret
das
add
stos
and
mov
pop
mov
bound
testl
or
ficompl
cmpsb
repz
xchg
cmp
test
das
xor
div
mov
setb
ret
inc
dec
cmp
es
arpl
loopne
movsb
sbb
in
in
imul
lods
inc
pop
dec
or
gs
test
push
push
add
jp
jg
dec
mov
xchg
add
adc
mov
inc
mov
push
push
pop
xor
mov
pop
and
dec
cltd
nop
das
fadd
adc
dec
and
sub
jle
mov
or
mov
outsl
arpl
pop
and
jg
add
mov
mov
xchg
and
fldt
in
or
neg
push
jns
sbb
hlt
cwtl
xchg
or
test
xchg
test
data16
fwait
xor
addl
das
inc
ds
sbb
jmp
popf
cli
xchg
xor
ret
imul
mov
pop
mov
and
add
repz
push
movsl
bound
repz
nop
push
lds
push
dec
xor
lahf
push
or
shll
ljmp
lods
sbb
mov
stc
ja
sub
fwait
loope
pushf
ljmp
popa
repz
icebp
ja
adc
ljmp
pop
xlat
mov
jns
repz
loopne
sbb
xor
mov
fldl
adc
xchg
loop
ficompl
sbb
inc
jl
shll
hlt
gs
sbb
in
sti
adc
int3
out
stc
pop
stos
or
lods
push
adc
jo
mov
pop
mov
stc
sub
mov
andb
outsb
xor
out
sbb
ljmp
cmp
add
cmp
xor
mov
mov
pop
addb
rcll
aad
mov
cmc
sbb
enter
lods
or
mov
push
add
mov
test
xlat
das
aad
mov
mov
push
mov
imul
scas
addr16
sub
adc
repnz
shrl
xor
jae
mov
push
mov
xchg
enter
fdivrl
pop
fists
andl
fs
push
test
sbb
rcr
cmp
movsb
cmpsl
insl
fcompl
sbbl
lods
jg
mov
movsl
pushf
gs
jbe
loop
das
js
cmp
mov
xor
pop
inc
adc
mov
mov
add
dec
sub
clc
rclb
mov
cmp
rcrl
pop
mov
adc
enter
mov
sub
pop
addr16
add
push
repnz
cmp
or
dec
ss
ret
dec
dec
outsb
lahf
mov
fimuls
outsl
and
pop
pushf
dec
mov
mov
and
and
add
push
lds
pop
push
xchg
cmovge
push
sahf
negl
cld
je
clc
aad
enter
mov
dec
add
and
sub
pop
out
aam
movsb
orb
arpl
es
das
push
clc
sub
cmp
xchg
lock
sub
lods
sub
xor
pop
inc
cmpsl
jae
mov
insb
sub
gs
lahf
push
cmp
xor
and
jl
sti
lahf
cmp
jno
pop
aaa
cltd
push
mov
bound
outsl
rolb
leave
inc
mov
test
in
jmp
fcmovnu
push
dec
adc
jnp
lcall
adc
xchg
movsl
mov
loope
mov
adc
adc
push
loop
cli
cmp
cmpsb
push
push
aam
test
out
add
mov
or
sbb
lcall
stos
iret
cmp
jae
mov
push
inc
dec
cld
adc
push
dec
gs
icebp
adc
cmp
cmc
call
imul
cld
icebp
xchg
shlb
xlat
mov
outsl
data16
repnz
jmp
dec
push
dec
push
sbb
cmp
inc
dec
rep
dec
and
insl
xchg
cld
pop
stos
pop
in
leave
push
in
shrl
push
xchg
sbbl
mov
shr
imul
add
pop
sub
inc
jg
loop
sahf
int
xchg
cmp
popf
movb
aad
out
jns
fs
nop
xchg
xchg
jg
mov
div
mov
cmp
xchg
cld
sub
cmp
add
shlb
sbb
ffreep
cmp
fcompl
popa
dec
enter
cmp
sarl
pop
xchg
rolb
mov
mov
jecxz
pop
xchg
cmp
inc
lret
sub
xchg
jecxz
cmp
loopne
adc
xor
cmp
je
insl
insb
stos
arpl
fcomps
push
xor
mov
sub
pop
clc
xor
pop
xchg
xchg
imul
xchg
js
adc
outsb
and
dec
jecxz
repnz
jecxz
ret
hlt
xchg
dec
into
fistps
inc
push
adc
cmp
pop
aam
lds
mov
fbstp
data16
clc
push
pop
inc
xor
pushf
sbb
mov
adc
lret
or
mov
mov
jmp
jnp
pop
clc
sar
orl
lahf
shl
mov
pop
mov
xchg
int3
in
fistpll
in
fsubl
lahf
aam
xchg
loopne
test
sub
stc
xchg
mov
scas
dec
sarl
and
movsl
jnp
xor
bound
cmp
sbb
and
out
xor
movsl
jecxz
jns
in
insb
add
rorl
movsb
je
mov
adc
ja
fisubrl
push
jle
loop
dec
dec
outsb
lcall
mov
jne
dec
inc
cmc
cmpsl
cwtl
gs
das
sub
mov
insb
xchg
pushf
push
shr
test
fwait
leave
fisttpll
out
int3
rclb
hlt
js
std
scas
add
sub
xor
ret
les
inc
sub
ds
pop
hlt
orl
xor
xchg
outsl
js
and
mov
adc
or
sti
jmp
daa
jle
push
cmpsb
loopne
fdivs
fdivs
int3
fldt
or
mov
call
dec
ss
mov
cld
add
cwtl
mov
cltd
dec
repz
xor
add
add
or
lods
mov
inc
fld
mov
adc
imul
fisubl
cmp
sbb
sub
push
pop
sbb
lcall
daa
push
and
xchg
into
out
mov
sbb
push
xchg
popl
aas
and
inc
addl
xchg
addr16
jb
or
sbb
push
ret
les
mov
sub
xchg
fwait
les
nop
jnp
sub
and
push
add
test
sahf
lods
mov
adc
les
mov
dec
dec
scas
out
dec
and
mov
and
leave
cli
repnz
ja
inc
int
xchg
sub
jnp
xor
adc
jbe
mov
jb
or
xor
fwait
sub
jle
adc
ficoml
jno
negl
xor
and
rcr
bound
adc
cmp
call
lcall
push
lret
cmc
pop
lea
or
mov
ja
dec
push
xchg
sbb
leave
sbb
xor
mov
xchg
mov
aaa
sbb
jnp
lock
xchg
addl
test
nop
jns
cli
sub
sbb
sbb
add
jns
call
ficompl
lock
out
rcrl
in
bound
and
lods
filds
hlt
add
aaa
xor
pop
mov
cwtl
aam
dec
test
dec
fdivrs
dec
mov
xor
jp
ja
fcoml
sbb
xlat
clc
je
in
lds
cld
lock
sub
pop
das
sub
mov
pop
cwtl
rorl
testb
mov
fs
xchg
ret
xchg
or
imul
fwait
jp
inc
add
lret
fldl
cltd
push
lahf
and
pop
lock
jg
mov
mov
sub
cmpsb
dec
add
mov
cmp
inc
movsl
hlt
adc
out
loop
xor
jmp
xor
inc
aas
int
data16
jno
jne
add
sub
mov
sub
into
cmpsb
mov
push
fildll
dec
mov
aam
jne
sbb
jns
add
pushf
fcoms
xchg
fbstp
xorl
jl
fsts
negl
scas
mov
push
xchg
cli
dec
and
xchg
add
jnp
mov
inc
or
mov
push
div
inc
mov
xor
pushf
stc
sub
repnz
xor
movsb
stos
mov
pop
out
mov
adc
fstpt
daa
pop
cmc
xor
loopne
mov
in
cmp
add
mov
jo
std
sahf
jle
shll
sbb
mov
mov
popf
out
scas
xchg
adc
stc
mov
pop
daa
andl
jb
fldenv
movsb
cmp
data16
push
les
jecxz
push
xchg
mov
xchg
fldl2e
aad
clc
imul
insl
lea
cwtl
push
mov
xchg
out
loopne
das
mov
or
movsl
xor
inc
sbb
js
lret
jns
pusha
pop
sbb
in
and
add
push
xlat
mov
mov
into
push
scas
push
iret
leave
xchg
int3
ja
jge
inc
in
into
mov
cmp
push
or
xor
push
rorb
push
aas
xchg
pusha
cmp
mov
pop
adc
push
sahf
jbe
int
xchg
jne
dec
push
fsub
orb
inc
andb
lea
sbb
aaa
pop
mov
inc
push
jl
xchg
push
aad
and
rorb
sub
les
add
jle
sbb
push
cmp
lret
pop
sub
test
push
lods
imul
pop
sub
cmc
jg
outsb
or
inc
incb
jge
dec
mov
xlat
mov
rcrb
jnp
and
mov
fildll
stos
cmc
mov
mov
push
inc
mov
minps
mov
xor
sub
sbb
jmp
fmuls
mov
or
popa
jge
lret
push
pop
into
inc
movsb
call
xchg
out
clc
sarl
leave
mov
mov
sbb
push
insb
movl
inc
lock
aad
jmp
imul
or
jbe
or
xor
rclb
nop
dec
arpl
push
js
mov
xor
and
mov
imul
dec
fisttpll
or
or
mov
loopne
bound
inc
mov
fdivs
movb
inc
xchg
sub
mov
test
enter
mov
inc
mov
shrl
mov
test
inc
outsl
add
movsb
push
and
stc
mov
or
bound
scas
dec
pop
push
sbb
mov
xchg
adc
scas
pop
in
scas
mov
fsubl
fs
pop
out
in
cmp
mov
mov
pop
inc
xor
in
sbb
stos
jbe
and
jmp
mov
sub
cld
fwait
inc
rorl
dec
rorl
add
pushf
add
inc
or
loopne
xchg
sub
and
add
fiadds
sub
pop
roll
mov
jns
mov
cmp
data16
pop
mov
sahf
icebp
mov
je
mov
js
shl
jmp
andl
stc
pushf
pushf
mov
lahf
inc
lods
fisubrl
ret
mov
je
filds
dec
sbb
cmpsl
add
push
adc
cmp
dec
sbb
mov
push
je
mov
adc
sub
cld
jbe
decl
xchg
sub
jns,pt
push
mov
push
jb
movsb
pop
imul
insl
push
mov
pop
mov
mov
fucomip
shlb
fisubrs
xchg
and
jl
clc
addl
jmp
cmp
int
ret
and
xbegin
xor
pop
mov
cli
adcl
inc
push
in
es
sub
push
into
jge
or
sbb
outsl
roll
sbb
or
xchg
jl
outsl
dec
push
sbb
test
pop
cmp
sub
inc
lcall
out
in
popa
mov
pop
cmp
jg
mov
add
in
bound
jnp
sbb
cmpb
cmp
std
stos
shrb
je
jno
push
movsb
or
add
mov
mov
rclb
inc
mov
pop
pop
jmp
pop
out
cs
fsts
cmp
sti
xchg
idivb
test
push
clc
adc
push
popa
lds
mov
and
mov
out
mov
cmp
pushf
mov
xchg
inc
fcmovbe
adc
sbb
sbb
imul
movsl
jmp
ja
fwait
cmp
mov
bound
and
jne
sub
lock
scas
mov
filds
adc
sub
fstps
cmp
lods
jecxz
hlt
add
dec
mov
rorl
sub
push
mov
pushf
test
repz
movsb
sub
xchg
cmp
loopne
dec
aam
out
cmp
add
fwait
or
cmp
pop
mov
lret
inc
pushl
scas
cmp
jne
jge
mov
in
lock
loope
clc
fistpll
xchg
inc
fldt
sar
gs
lret
testl
xchg
cmpsl
mov
int3
ret
ret
sbb
xchg
and
xchg
call
pop
popa
mov
subb
jbe
sub
fstpt
xchg
adc
in
flds
pop
sbb
popa
lret
xlat
xchg
add
sub
push
jno
mov
iret
jge
and
stos
push
adc
mov
data16
insl
sbb
lods
out
lods
cmc
mov
mov
imul
les
adc
rorb
lea
mov
aad
dec
and
out
int
sbb
shlb
jbe,pt
pushf
cmpsb
xchg
mov
xchg
push
jecxz
sti
inc
icebp
pop
add
add
mov
and
lock
ret
mov
lret
inc
xchg
mov
in
push
and
pop
pop
sbb
dec
enter
cmp
jo
fldcw
adc
es
jle
sub
add
fistpll
test
adc
mov
in
loope
or
fsubs
movsb
mov
inc
out
and
loope
jnp
push
push
cmp
jae
push
outsb
mov
shr
jecxz
stos
es
and
adc
dec
imul
adc
sub
movsb
push
out
out
mov
jmp
xlat
cmp
out
inc
add
mov
popa
inc
fiadds
paddsb
push
jae
xchg
fistl
mov
adc
and
scas
and
pop
jge
stos
fidivs
cld
jge
mov
notl
rcll
movsb
lods
add
fistl
shl
int
dec
push
pop
dec
inc
testb
and
aas
push
gs
sbb
cmpsb
repz
jnp
add
jle
push
into
mov
pop
push
into
add
dec
inc
and
mov
xchg
fbld
lea
dec
js
ljmp
mov
cmp
mov
push
hlt
lods
sti
pop
push
std
fdivrl
xor
movsl
outsb
and
lods
xchg
add
dec
mov
xchg
sahf
test
push
add
shrl
rcl
cmp
inc
or
fs
cmp
imul
xchg
xchg
icebp
cmpsb
shll
add
push
popa
push
jno
inc
ss
mov
notb
cmpsb
shll
add
push
popa
push
jno
inc
ss
mov
notb
cmpsb
shll
add
push
popa
push
jno
inc
aaa
push
mov
notb
cmpsb
shll
int3
add
jno
sahf
mov
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sahf
not
out
hlt
fwait
mov
xchg
push
insb
push
push
inc
add
push
daa
and
xor
shl
aam
aam
hlt
movb
jecxz
jbe
data16
inc
add
adc
push
int
cld
in
popf
mov
cmpsb
mov
jbe
inc
or
add
sub
jp
jae
jno
mov
lcall
xchg
dec
cmpl
cwtl
or
sub
cmp
negb
in
in
inc
cmpsb
imul
push
jge
lea
cltd
fwait
test
inc
jge
scas
mov
lods
add
add
sti
xchg
push
inc
jbe
addr16
mov
mov
repz
jg
mov
sahf
mov
jo
cmp
fs
sub
andl
fldl
and
sub
mov
cmp
movsb
xchg
jae
test
adc
out
scas
aam
stos
push
pop
sub
mov
and
les
add
les
xor
add
aam
in
jecxz
xchg
mov
cmpsb
movsb
xchg
lods
xchg
dec
data16
insl
inc
sbb
or
and
sub
lahf
adcl
fptan
xor
push
jg
add
jo
inc
fs
arpl
lcall
lock
cli
jecxz
shl
inc
adc
xor
adc
push
addr16
jae
push
lods
mov
mov
mov
mov
movsb
xchg
mov
inc
jbe
fs
je
add
adc
and
xor
not
out
hlt
movb
xchg
fs
je
add
adc
and
xor
notb
into
mov
inc
mov
bound
daa
js
and
xchg
mov
lods
cltd
add
push
fldl
test
inc
or
dec
aam
push
loop
mov
repz
fwait
push
test
inc
in
aas
stos
pop
xor
sbb
lcall
push
in
pushf
cs
aam
sbb
cmp
xchg
scas
lods
mov
aad
stos
xor
sahf
call
cmpsb
dec
and
jo
inc
in
mov
xchg
lea
dec
dec
out
addr16
jg
pusha
sub
orb
sbb
cmp
xchg
mov
mov
out
and
xchg
jns
sti
arpl
shll
or
adc
movsb
int
cmc
mov
push
popa
mov
leave
outsl
adc
sbb
rcrl
call
sub
sarl
adc
out
xor
or
add
push
icebp
push
fidivrs
pop
cld
in
mov
jae
ret
addr16
push
fs
xlat
fists
jbe
lds
mov
dec
add
loopne
sub
mov
addl
cmp
or
fcmovne
dec
decb
mov
aam
push
cmc
push
jnp
add
dec
cmp
stc
dec
pop
push
vmwrite
adc
cwtl
sbb
dec
mov
xchg
push
ljmp
das
ljmp
std
pop
rorb
jno
push
adc
neg
outsb
pop
and
sbb
lds
aaa
mov
inc
or
sbb
inc
pop
adc
int
nop
ljmp
testb
and
pop
jl
out
cmpsb
ss
push
adc
insb
xor
stc
cmp
xchg
sbb
xor
fdivrl
sbb
jle
pop
cld
fstpt
dec
cmpl
mov
sub
push
or
mov
shrl
dec
lds
and
fists
cwtl
sbb
xor
loope
push
nop
sub
or
loop
cmpb
adc
fs
cli
dec
sub
adc
lea
cmpsl
nop
jo
les
dec
dec
pop
mov
lods
mov
dec
test
pop
push
dec
repnz
and
data16
adc
mov
faddp
iret
mov
outsl
pop
test
jne
rorb
fdivr
xchg
mov
xchg
aaa
xchg
fbstp
inc
int
lock
sub
out
push
lds
mov
loop
pop
jp
inc
pop
jne
leave
inc
jo
jg
popa
push
xor
push
or
mov
fs
stos
mov
sub
bound
mov
mov
insl
inc
lret
andl
jnp
pop
xchg
insl
jno
cltd
lods
iret
push
jecxz
std
mov
std
pop
inc
daa
or
adc
mov
sbb
adc
sar
add
or
mov
dec
push
cltd
js
fdivl
gs
xchg
cmp
pop
push
clc
inc
cld
xchg
lock
jle
push
pop
xor
mov
sbb
pushf
lret
mov
rorb
bound
xchg
fdivs
jmp
mov
lods
xor
inc
stos
test
mov
mov
xchg
hlt
popf
lea
xchg
mov
subb
push
or
push
jno
mov
rorl
cmpb
pop
ret
and
test
fwait
sub
cmpsb
dec
push
sub
jne
inc
std
cmp
sbb
xchg
mov
pop
pop
test
cmp
xchg
cltd
ljmp
jge
scas
aas
cltd
sub
pop
mov
pop
push
mov
negb
sbb
daa
sub
pop
inc
loope
mov
xorl
pop
mov
pop
test
nop
xchg
add
push
jbe
fwait
xchg
mov
inc
insl
jl
scas
movsb
aaa
rcrl
loop
pushf
pop
sub
cli
inc
stos
adc
out
fildl
sbb
mov
and
jge
int
xor
dec
lret
jg
out
mov
in
mov
xor
pop
ret
lods
or
aas
in
and
aam
jle
fimuls
mov
dec
jle
xor
fiaddl
xchg
or
push
inc
pop
les
addr16
test
sbbl
xchg
jecxz
mov
ret
jecxz
dec
ss
das
mov
add
outsb
pand
adc
hlt
ja
sbb
jp
push
pop
subb
fcmovnbe
or
bound
es
fldenv
sub
insl
sahf
je
iret
rolb
jb
pusha
push
mov
enter
inc
insl
jb
sarl
int
movsb
mov
push
ss
xchg
sub
out
sbb
add
inc
xor
aas
pop
jno
xchg
in
mov
insb
sbb
cmc
push
inc
lret
xchg
xchg
pop
icebp
bound
icebp
aad
nop
loop
or
mov
and
insl
pop
mov
cmp
xchg
sbb
sub
add
int3
adc
dec
cmp
push
mov
cmpsl
mov
sub
in
lret
push
cmc
in
mov
outsb
pop
ret
scas
int3
inc
shll
sarb
push
push
jns
ffree
dec
gs
iret
add
aaa
cltd
pusha
loopne
gs
aas
fisubrl
jb
psraw
push
lods
jecxz
popf
dec
pop
pop
outsb
inc
popa
add
jp
enter
out
arpl
adc
lea
xchg
dec
push
and
add
pop
rorb
push
add
mov
adc
pusha
mov
add
popf
push
lock
ror
jge
cmp
aad
push
add
ret
mov
pop
sub
or
inc
notb
clc
loope
mov
stc
hlt
mov
enter
sbb
adc
cmp
test
inc
inc
pop
xchg
lret
hlt
mov
xor
data16
xor
inc
inc
out
into
push
add
dec
pushf
shrl
enter
dec
sbb
scas
test
stos
cwtl
mov
out
mov
subl
mov
sbb
ja
jo
mov
shll
sub
imul
add
xor
mov
call
mov
insb
xor
push
loopne
fld
mov
sbb
js
test
pop
movsb
or
imul
ret
inc
std
adc
xor
jnp
mov
cmp
pushf
xchg
popa
push
sub
repnz
xor
pop
sbb
ljmp
cs
mov
pop
dec
or
gs
mov
inc
adc
push
dec
mov
inc
outsb
jg
lods
nop
xchg
dec
jno
dec
xchg
and
arpl
xor
movsl
or
cld
test
rolb
popa
xor
out
lret
inc
fimuls
js
sbb
sbbl
in
sbb
loopne
sub
insl
daa
sub
mov
cld
fnstsw
aam
jae
mov
cltd
xchg
testl
mov
jns
inc
mov
lret
int3
fcmovne
xchg
push
xor
mov
or
or
mov
pop
mov
pmaddwd
dec
xchg
cmc
std
ljmp
pushf
out
adc
pop
pusha
dec
push
dec
xor
shrb
mov
sbb
xchg
ss
in
cmp
xor
clc
icebp
cmp
jge
xchg
cmpsl
add
and
sbb
leave
push
xchg
mov
dec
call
jle
lcall
fistpl
insl
inc
imul
rolb
mov
fdivs
daa
aaa
xor
inc
fstpt
jnp
mulb
adc
shr
or
or
and
xor
sbb
test
cmc
repz
and
adc
sbb
push
lret
jecxz
call
loope
into
inc
xor
lock
sbb
jecxz
adc
push
cmp
nop
aad
adc
sarl
mov
jae
jno
add
mov
adc
outsl
and
bound
push
dec
movsl
cmp
adc
jno
lea
mov
jl
out
mov
mov
jns
mov
xchg
clc
fdivl
or
fwait
cmp
push
xchg
jmp
outsl
jmp
scas
repz
mov
pop
sahf
fdivs
jns
cltd
xchg
dec
mov
filds
pop
cmpsl
mov
and
ljmp
sub
mov
loopne
jns
sbb
lock
pop
mov
sub
jo
cmp
inc
fidivrs
daa
lds
cld
and
addl
inc
pop
sub
push
dec
dec
or
add
xor
pop
inc
clc
nop
loope
inc
push
jle
pop
sbb
push
mov
lds
xchg
sbb
and
imul
aaa
or
and
loope
in
mov
stos
adc
lods
loopne
jmp
xchg
push
cmpsb
dec
push
dec
mov
test
mov
rcrb
push
xor
icebp
xchg
repnz
ljmp
out
loope
rcr
out
out
mov
ja
jmp
push
cmp
testb
lret
cld
jle
bound
add
cld
je
lods
or
mov
arpl
mov
cmp
scas
xchg
mov
cmp
or
mov
fadds
fsubp
xchg
jmp
push
test
push
mov
inc
jl
adc
xchg
xchg
fdivr
xchg
jg
jg
sbb
push
lods
popa
mov
or
mov
popa
in
push
sbb
int
cmc
nop
jg
mov
push
cld
jecxz
mov
gs
mov
pop
lods
sarl
jle
negb
cwtl
gs
sub
mov
subl
jo
jne
xchg
jbe
out
fst
daa
fisttpll
cmp
in
hlt
nop
test
and
inc
aam
mov
xchg
jb
sub
or
loope
enter
xorl
inc
pop
in
adc
jmp
lock
or
push
inc
xor
pop
jne
ljmp
lahf
pop
aad
add
inc
jge
push
ret
cmp
mov
inc
les
clc
cmpl
leave
push
mov
cld
out
pusha
in
add
push
mov
cli
mov
lcall
out
push
xor
and
xchg
lcall
mov
fwait
in
add
xchg
clc
jp
mov
std
mov
dec
or
fbld
addr16
push
mov
mov
add
xor
stc
sub
add
insl
xchg
jne
mov
or
mov
inc
enter
enter
mov
bound
enter
push
dec
rcr
test
movsb
in
clc
fidivl
push
pop
dec
fldl
cwtl
sub
into
jge
mov
fdivr
int
movb
ljmp
mov
mov
lds
inc
mov
adc
test
mov
xchg
xchg
adc
lock
mov
fisubs
lret
jne
gs
dec
jmp
pop
daa
int3
jle
inc
add
arpl
push
shrl
ss
adc
outsb
xor
rsqrtps
xchg
xchg
inc
push
lcall
push
xor
sarb
repz
xchg
lock
sub
xchg
mov
daa
mov
scas
jae
lds
cmp
das
sbb
sbb
scas
cmp
pop
lds
and
cmpsb
sub
add
xorb
loope
mov
pop
sbb
lods
jl
push
mov
ret
cmc
inc
ljmp
xchg
jl
rorb
push
xchg
sub
xchg
dec
mov
push
cmp
push
jne
cmp
test
push
jle
xchg
pop
ret
popa
loopne
xchg
mov
stc
popf
xlat
mov
mov
dec
inc
and
mov
daa
jle
ljmp
mov
out
es
js
pop
and
rolb
xchg
add
lock
lock
push
add
gs
xchg
mov
leave
inc
and
adc
jae
sub
lret
cmp
adc
inc
ret
pop
out
stc
sbb
add
stos
lock
xor
mov
stos
movsb
repnz
shll
mov
dec
pop
pop
mov
and
dec
sahf
pop
movsb
jno
lea
xchg
outsb
push
mov
add
and
mov
fcom
les
push
xchg
pop
adc
push
mov
gs
mov
push
cmpsl
push
out
leave
push
aam
mov
aad
jns
popa
sbb
sarl
cmp
cmp
test
fs
mov
push
in
dec
in
outsl
out
enter
xor
mov
sub
mov
sub
out
cmp
push
and
inc
insl
ficomps
aas
add
xor
xchg
xchg
lods
ja
rorb
cmp
xchg
icebp
mov
xor
scas
mov
dec
popf
push
cld
or
cmp
push
cmp
psllq
and
mov
mov
repnz
adc
sub
inc
xchg
sub
insl
sub
incb
fcompl
scas
insb
push
hlt
xor
aad
int
jp
popf
out
testb
jbe
pop
fwait
sbb
xchg
call
cmpsb
outsl
pop
nop
repz
scas
andb
sbb
stc
adc
xor
push
mov
and
mov
cltd
jbe
popf
adc
sub
xor
outsl
std
stos
push
orb
pop
pop
icebp
arpl
lock
cmpsb
scas
sarb
xchg
pushf
dec
push
xor
xchg
xor
lods
pop
es
mov
jle
out
imul
jbe
add
iret
xor
mov
subl
dec
push
pop
cmc
mov
xchg
sub
pop
mov
das
sub
add
mov
sub
paddsw
push
sti
pop
dec
flds
jp
jnp
incb
dec
xchg
push
leave
cld
sbb
sub
out
fwait
test
jl
stos
push
mov
or
and
lahf
cmpsb
xchg
ja
fucom
fwait
mov
iret
add
sti
out
mov
clc
xor
test
das
fstl
lret
and
divl
and
loope
leave
pop
inc
jbe
daa
cmp
call
push
fs
subb
das
hlt
int
dec
mov
stos
jae
test
sub
add
xlat
push
mov
adc
incb
aam
dec
es
add
icebp
sbb
push
gs
scas
out
xchg
push
shlb
xchg
push
addl
and
pushf
loope
mov
xchg
add
in
insb
push
inc
or
sbb
loop
mov
jnp
lds
imul
sbb
sbb
push
xchg
out
fcoms
sti
insb
add
mov
push
decw
mov
mov
xor
jno
push
xchg
push
sbb
fldt
push
mov
xor
scas
cmp
lret
loopne
ficoms
hlt
cmpsb
mov
inc
push
repnz
cmpsl
subl
sub
icebp
xor
mov
mov
insb
ret
pop
ret
adc
dec
and
js
push
push
sbb
call
fstpt
insb
or
inc
pop
cmpsb
lods
jb
and
leave
pop
mov
mov
xchg
mov
mov
mov
ret
lods
xchg
popf
fsubr
or
xor
xchg
aad
dec
xor
add
sbb
icebp
ds
mov
loopne
les
pop
dec
mov
sub
cmpsb
loopne
sbb
stc
loop
push
test
cwtl
nop
or
mov
lea
jae
movsb
xor
imul
xor
sar
mov
add
movsb
loopne
or
push
test
leave
cld
nop
xor
xchg
rclb
inc
je
jo
mov
sub
xor
adc
inc
xor
andb
pop
xchg
jns
mov
and
popa
test
bnd
mov
loop
sbb
rcll
dec
sub
rcll
sub
jg
pop
ds
dec
imul
push
mov
mov
mov
ljmp
fmuls
mov
js
pop
das
sub
fildl
sub
test
cmp
scas
stos
sub
cmp
dec
pop
sti
xlat
xor
push
sbb
or
aad
imul
mov
and
mov
fnstsw
negl
add
faddl
or
push
jecxz
xor
pop
sbb
xor
push
add
jecxz
push
aas
push
dec
rcrb
rorb
cltd
fcomip
mov
mov
scas
pop
mov
mov
sbb
pop
xchg
insb
inc
push
scas
mov
sbb
repz
inc
sbb
inc
shr
fldcw
loopne
enter
mov
sbb
add
push
sbb
and
xchg
pop
jecxz
dec
add
roll
pop
xchg
int
jg
or
sbb
sbb
push
pop
leave
cs
scas
lret
out
lea
xor
adc
sbb
mov
lret
andb
mov
data16
ds
cwtl
es
fstpt
loop
pushf
and
cmpsl
xchg
inc
pop
xor
lea
data16
xchg
jbe
sub
sub
fistps
fistps
lock
out
xor
cld
mov
daa
adc
cmpsl
or
dec
aaa
minps
push
test
pop
subl
cmpl
adc
xchg
add
ret
mov
xchg
stos
call
lcall
pop
pusha
pop
cmc
cmp
mov
sub
les
std
dec
les
sbb
fwait
xor
lock
mov
repnz
inc
xor
inc
inc
xchg
stos
hlt
enter
out
inc
idivb
pop
or
xor
gs
push
cmc
and
lods
mov
jne
mov
int3
xchg
push
xchg
lock
mov
xor
inc
loope
jae
rorb
lock
add
call
pop
fadds
xchg
in
aas
test
and
sub
push
xchg
testb
cmp
ss
out
loope
aaa
mov
roll
fwait
lcall
mov
mov
xchg
lds
dec
jg
adc
push
cmp
test
clc
mov
daa
adc
jne
into
mov
push
fsts
inc
pop
xchg
jno
test
stc
cmp
or
es
pop
or
xorl
sahf
push
out
jb
imul
addr16
xchg
scas
pop
icebp
inc
or
cmc
sbb
push
push
pusha
jle
insl
and
sub
jmp
sbb
repnz
add
cmp
mov
xchg
cmp
aam
mov
leave
adc
xchg
sub
popf
cmp
int
sbb
add
pushf
ss
cmp
adc
sbb
sub
movsl
mov
jno
cmp
xlat
imul
es
dec
aaa
fcompl
pop
fld
cmp
xchg
lock
cli
jmp
cmp
sub
inc
sahf
or
xchg
iret
and
sbbl
jno
movl
scas
shrb
call
pop
je
or
push
popf
lret
and
mov
shrb
sbb
jo
stc
loope
mov
lods
in
in
int3
cmpsb
cs
xchg
rcll
pop
add
hlt
add
mov
inc
lds
push
shlb
push
mov
test
xchg
loope
jnp
jnp
and
sar
mov
in
pop
daa
jns
cli
mov
ret
jno
mov
sarl
hlt
dec
stos
mov
mov
mov
cltd
and
cli
les
cmpsb
sub
loopne
dec
out
pop
jle
lahf
sbb
cli
sbbb
rcrl
ss
shlb
pop
imul
or
or
test
cmp
jl
data16
stc
add
sbb
cs
pop
ljmp
sti
mov
dec
movsb
add
dec
xor
sarl
or
cmp
mov
cmp
lock
xchg
out
insb
mov
xchg
cmp
aas
cld
adc
sub
push
sub
push
jg
xor
adc
or
push
or
mov
out
and
jge
dec
call
sbb
ljmp
fistps
and
js
add
pop
popf
mov
push
pushf
mov
icebp
sub
shlb
cwtl
ret
mov
or
inc
cld
scas
cltd
pop
and
sub
mov
mov
cmp
cmpsb
xor
ja
cltd
vrsqrtss
loope
into
les
aaa
enter
mov
sub
push
je
push
mov
jl
filds
and
mov
enter
loopne
cld
idivb
xchg
or
movsb
xchg
xlat
stos
outsl
and
data16
adc
int
int3
jmp
mov
mov
and
lahf
icebp
cmp
pop
pop
or
inc
inc
in
pop
ds
ret
pop
jp
push
dec
test
mov
incb
rcr
mov
ja
out
or
or
push
jmp
fadd
or
aam
cmc
xchg
push
mov
lahf
xor
push
scas
pop
sub
or
inc
jecxz
cmp
popa
es
or
lods
jge
cmp
xor
subb
in
mov
rcll
ret
jle
pop
cs
sbb
movsb
mov
lods
xchg
push
jle
lcall
pop
dec
dec
jp
movsl
ljmp
movb
xchg
fs
je
add
adc
and
xor
not
out
hlt
movb
xchg
fs
je
add
adc
and
xor
not
out
hlt
movb
xchg
pushaw
push
je
add
adc
and
add
out
hlt
movb
inc
mov
push
je
jae
pushf
jmp
mov
xchg
out
push
rcrl
cs
fidivs
into
push
push
out
data16
je
push
mov
mov
xchg
outsb
out
testb
fidivs
out
push
sbb
data16
inc
mov
push
scas
mov
mov
out
xor
rcl
ss
add
popf
leavew
sbb
sbb
add
xchg
loopne
mov
testb
je
cmp
scas
outsb
bound
sahf
sti
addr16
aad
pop
and
ror
pop
div
inc
jle
insb
mov
xchg
call
dec
inc
mov
dec
dec
jne
rolb
dec
jb
dec
cwtl
push
movsl
jno
leave
dec
jae,pt
arpl
mov
cmpsl
sahf
cmpsb
pop
dec
outsb
mov
sbb
mull
lods
and
sahf
xor
jmp
jno
push
push
std
testb
or
out
dec
mov
es
lock
cmp
out
sahf
int
mov
sahf
push
repz
sbb
lea
fidivrs
mulb
lahf
and
sub
scas
mov
icebp
push
out
in
scas
aas
pop
or
out
jle
outsb
jbe
mov
rorl
cmp
nop
popa
mov
dec
es
pop
mov
jb
data16
adc
xor
cmp
leave
sbb
psubsw
out
mov
cmp
gs
push
mov
sbb
fimull
ljmp
push
ds
cs
into
push
push
out
data16
jbe
inc
mov
mov
xchg
outsb
out
testb
ds
cs
into
push
push
out
data16
jbe
inc
mov
cltd
cltd
cmp
in
mov
adc
push
jbe
ljmp
sahf
push
sub
fcoms
push
mov
mov
call
or
add
imul
mov
cwtl
movsl
push
scas
sbb
push
fildll
or
je
outsb
pop
icebp
lcall
xchg
mov
or
mov
mov
mov
pop
xchg
pushf
cli
xor
scas
dec
subb
movb
out
or
aas
and
mul
jne
fwait
xchg
clc
jb
jae
andl
mov
js
jmp
inc
or
mov
pushf
sahf
xor
in
mov
leave
sbb
out
xchg
mov
vcvttsd2usi
push
jp
hlt
mov
adc
subb
rep
jmp
negb
scas
ficoml
mov
cmpsl
pop
xchg
scas
mov
out
mov
imul
outsl
jp
or
push
add
or
dec
test
xor
out
repz
mov
lret
pop
ret
subb
shrl
jmp
push
jns
pop
aaa
jno
sub
mov
repnz
xor
push
mov
std
add
mov
mov
arpl
dec
and
cmc
mov
cmpsb
add
lret
jmp
pop
scas
cli
mov
or
fs
and
sbb
popf
rcpps
arpl
in
nop
test
stos
shll
and
stos
dec
ss
nop
pop
in
mov
int
mov
out
mov
mov
arpl
cmpl
lcall
pop
fcmove
rcll
or
or
addl
repnz
mov
sub
aaa
push
orl
pop
call
dec
sbb
dec
lcall
in
adc
in
mov
lds
cmp
fwait
dec
pop
mov
lcall
in
mov
divb
mov
mov
int
clc
pop
xor
adc
jne
mov
lret
and
push
mov
sbb
icebp
fistl
sbb
les
jge
or
sub
dec
lcall
shlb
loopne
cmpsl
inc
jne
xor
cltd
daa
ja
jl
mov
flds
test
fiaddl
iret
fsub
sbb
subb
mov
stc
pop
mov
push
cmpsb
fadds
dec
mov
fs
aad
pushl
scas
test
mov
test
xor
lods
jp
xor
sub
aaa
jne
push
pop
les
clc
in
stos
push
lcall
mov
cmovae
adc
pop
data16
movsb
sbb
jb
pop
test
gs
jo
rcrb
xchg
dec
out
xor
sbb
mov
xchg
jl
xchg
pusha
sub
sbbl
mov
mov
pop
adc
imul
or
and
push
xchg
add
loope
mov
dec
mov
mov
dec
inc
xchg
xchg
out
and
adc
out
mov
pop
stc
sbb
jbe
xchg
pop
or
xchg
xor
sbb
xor
test
lods
push
in
dec
mov
mul
add
enter
imul
ss
cmp
pop
and
enter
pusha
mov
push
daa
xlat
mov
test
mov
push
orb
ficoms
xor
adc
pusha
sti
std
jecxz
lret
outsl
push
inc
push
cmp
push
pop
rorl
arpl
dec
mov
outsl
dec
int
repz
clc
adc
insl
mov
popa
inc
xchg
hlt
sbb
mov
lods
mov
lret
popa
mov
ss
lea
add
lahf
add
and
aaa
xchg
jo
scas
adc
inc
and
and
dec
mov
jle
les
xchg
adc
mov
dec
imul
xor
mov
lea
repz
icebp
add
xor
cltd
jle
pop
sub
lcall
ljmp
xor
push
stc
xchg
clc
inc
in
jle
icebp
lock
pusha
insb
adc
push
lret
int
popa
mov
xchg
loopne
pop
sub
or
stos
jge
fs
subl
psubusw
xor
aad
and
sub
in
lds
pushf
das
inc
lea
arpl
pop
cmp
js
pop
ret
inc
add
xchg
nop
shl
fisttpll
cs
jge
xorb
lds
xor
imul
xor
shlb
jmp
cmp
mov
maskmovq
testl
jne
cld
push
fldcw
cwtl
cltd
fisubrl
sarl
mov
mov
outsl
adc
in
ret
cmp
dec
sbb
subb
pop
out
pop
outsb
jno
popf
or
jmp
in
jmp
jo
ds
and
addr16
insb
sbb
sub
inc
inc
mov
dec
lret
adc
lahf
mov
vpaddsb
es
mov
bound
daa
aad
bound
rcrl
mov
push
sub
ljmp
adc
xorb
mov
and
les
cmpsb
xorl
cmp
lock
fs
clc
adc
jb
adc
push
int3
aam
xor
idivl
popa
push
aad
jg
inc
loop
in
mov
sub
loopne
stos
fistps
out
jmp
add
or
ss
ss
jmp
add
pop
movsb
movb
insb
lods
in
mov
add
xchg
daa
xchg
addr16
repz
xchg
imul
and
sbb
xchg
xor
popf
add
mov
dec
mov
adc
inc
sbb
fisubrs
loope
pop
pop
mov
sahf
inc
mov
xor
daa
mov
cli
mov
scas
data16
pop
push
sbb
inc
cli
mov
inc
lret
sub
sub
jo
adc
add
test
xor
out
scas
sahf
lcall
jp
out
enter
sbb
stos
push
lods
cmp
movsl
or
xchg
sbb
adc
jmp
mov
std
xchg
pop
sub
and
movsb
xor
lret
inc
outsb
mov
inc
mov
bnd
cmp
fsubs
std
push
mov
sub
leave
pop
dec
in
jg
cmp
aaa
loopne
repz
mov
push
add
mov
jecxz
sub
mov
call
jae
sbb
mov
mov
sub
jecxz
nop
subb
mov
sub
leave
adc
or
push
je
cmp
dec
sub
ds
jle
push
xor
mov
cmpsb
not
int
inc
mov
les
sbbl
pushl
cltd
inc
xor
movsb
jle
aad
fimull
loopne
jbe
dec
jno
add
lret
dec
xor
dec
sub
add
push
scas
popa
shl
rcr
lea
cld
aaa
jp
outsb
mov
xchg
dec
icebp
push
jae
int3
ret
inc
cld
push
mov
aas
loope
rcr
pop
rorb
push
xor
or
cltd
aas
fadd
push
lahf
adc
je
std
subb
and
lods
iret
add
sub
loope
shr
cmp
cmpsl
mov
data16
test
pop
pop
push
mov
loopne
addb
imul
sbb
pop
push
pop
or
cmp
xchg
push
sbb
adc
in
push
sbb
adc
orl
xor
pop
inc
xor
nop
sbb
push
dec
lea
aad
clc
cmpsl
push
xor
daa
adc
xchg
fldcw
sbb
sub
dec
jbe
repz
push
push
or
std
inc
cmp
in
xor
or
push
jno
sbb
ja
lods
xchg
ljmp
orl
inc
imul
andl
rol
dec
pop
xor
scas
lret
mov
push
into
js
mov
and
subb
fimuls
test
testl
mov
sbb
jg
mov
lds
lds
mov
sti
inc
push
cmp
les
and
adc
mov
push
loope
sbb
xchg
leave
subb
sbb
xchg
mov
and
mov
sbb
adc
nop
jmp
in
mov
out
ss
mov
jae
nop
scas
enter
adcl
dec
out
push
adc
out
ds
outsl
push
or
mov
cwtl
or
mov
rcrl
inc
cmp
int3
xorl
outsl
mov
add
cwtl
jns
xor
shll
roll
stc
push
mov
testl
sbb
mov
cmp
dec
clc
comiss
gs
inc
shrb
jo
call
lcall
xchg
add
and
add
lods
inc
sar
mov
mov
fisubrs
divb
cmp
push
fs
das
sahf
pop
xchg
sbb
repnz
adc
aad
aaa
clc
cmp
ret
outsl
mov
jg
inc
dec
xchg
and
jns
push
stos
jne
add
lods
jecxz
push
or
fdivrl
cmpsb
nop
incb
xor
aam
iret
cmpsl
bound
xchg
jo
sbb
push
addr16
xor
daa
cmpsl
push
shlb
outsl
lds
rcr
lcall
insb
sub
dec
push
into
xorl
mov
sarb
mov
shl
mov
popa
data16
mov
inc
lock
push
imul
xchg
loop
loope
dec
dec
sub
dec
ss
pusha
xchg
test
sbb
xor
jp
xchg
mov
dec
mov
cmpl
sahf
mov
mov
jne
mov
fisubs
and
fs
jge
pop
inc
mov
sarb
sahf
sbb
xchg
xchg
imul
adc
xor
dec
mov
push
xchg
push
mov
sbb
push
dec
or
jb
lock
insl
mov
or
notb
cmp
outsb
jno
jns
cmp
push
cmp
arpl
movl
push
arpl
insl
pusha
ret
add
mov
shll
xor
ret
cmpsb
std
fisttpll
pop
push
stos
and
push
imul
loopne
push
pop
rclb
stc
ss
xorl
jnp
xchg
shll
fld
xchg
xchg
pusha
adc
pushf
pop
das
jo
xor
sti
push
jae
fwait
mov
fnstcw
pop
test
aam
mov
cmpb
aad
push
add
fs
je
nop
mov
lahf
enter
mov
movsb
adc
out
xchg
xor
xor
and
push
mov
adc
pop
push
add
mov
lret
jle
and
or
xchg
clc
cmp
or
pop
sar
dec
or
ret
jge
sbb
jl
sub
insl
in
push
ss
mov
pop
sbb
stos
sub
inc
jle
push
mov
push
insb
cmpsb
fisubl
lahf
aad
ret
js
inc
fsubp
adc
sti
push
ljmp
pop
inc
or
aaa
jle
scas
jb
jp
icebp
jmp
lods
aas
aad
fwait
outsb
pusha
testl
lahf
adc
push
fs
push
mov
push
mov
sbb
test
mov
and
in
loop
sub
dec
pushf
popf
adc
inc
and
mov
out
mov
cmp
sti
test
fadds
ss
mov
cld
repnz
lock
push
daa
stos
in
mov
xchg
cmp
roll
push
xlat
adc
mov
nop
ss
es
shr
std
add
in
pop
cmp
jne
shrb
sbb
lods
cli
iret
and
loopne
mov
test
xchg
pop
icebp
ficoml
int
sarb
insl
push
push
in
and
scas
jns
jns
je
sub
in
adc
and
cmp
jle
test
lea
push
mov
mov
negl
lret
add
xchg
sub
scas
lret
imul
cld
stos
mov
cs
xor
scas
std
jmp
jle
repz
mov
jmp
xchg
push
and
mov
imul
ds
xchg
adc
and
add
sbb
sahf
scas
mov
sarl
dec
orb
and
movsb
inc
mov
es
dec
xorl
es
inc
push
xchg
test
mov
sbb
push
roll
mov
and
mov
mov
stos
loopne
aam
repz
xchg
and
add
int3
int3
lea
aam
inc
adc
scas
xor
rcrb
jne
or
fldenv
mov
mov
xchg
push
mov
xor
mov
mov
mov
dec
mov
mov
popf
add
dec
test
cmpsl
lret
inc
out
clc
sbbb
pop
add
xchg
mov
cmpsl
das
sbb
and
mov
dec
sbb
loop
and
inc
in
rcl
and
sub
movsl
xlat
mov
push
push
lock
jmp
cmp
arpl
inc
aad
add
add
stos
out
int3
out
imul
popa
dec
fldcw
rep
pop
dec
mov
sahf
xor
jno
mov
inc
lret
sbb
pop
mov
sbb
imul
iret
push
xchg
fstpt
test
push
push
es
jmp
adc
sub
add
rorl
rcll
ret
xor
xchg
roll
fmull
mov
mov
iret
sbb
pop
into
pop
test
les
shrb
sahf
mov
out
cmpsl
psubsw
xchg
cmp
es
repnz
mov
xchg
fmuls
pop
test
sbbb
pop
scas
fstpt
fcomi
fs
or
sbb
xorl
cmp
xchg
insl
lret
mov
shll
in
je
and
lret
std
cmp
dec
jg
mov
jge
sub
jmp
pop
loopne
loop
push
ljmp
dec
ret
aam
xchg
or
sbb
push
add
push
sub
sbb
loopne
insl
xchg
ret
and
mov
mov
outsl
add
test
lods
sbb
xchg
lock
cwtl
dec
xlat
jno
push
mov
jbe
fldlg2
aam
imul
jb
jle
and
sbb
aaa
fildll
fwait
push
mov
adc
ds
insb
and
aas
popa
pop
add
rcr
lret
inc
sub
insl
jno
or
fsts
mov
icebp
icebp
in
and
push
add
loopne
or
loop
les
dec
and
push
cs
ret
or
or
out
mov
sub
lret
aam
and
fimull
aaa
shr
movsb
xchg
js
push
outsb
xchg
pusha
jno
add
jmp
add
pushf
jne
pushf
or
pop
jb
daa
or
cmp
in
jl
arpl
xorl
xor
pop
xor
fmuls
cld
popa
xlat
mov
push
gs
cld
pop
mov
movsb
aaa
add
ja
cli
sbb
decl
xor
punpcklwd
ljmp
push
dec
jg
cmp
fdivs
shr
inc
or
std
loop
add
xchg
inc
adc
and
out
aad
scas
and
or
push
out
iret
pop
outsb
mov
inc
and
out
push
popf
out
xor
xor
xchg
jae
pop
xchg
cld
xor
dec
xchg
test
repnz
cmp
xchg
add
mov
xor
xchg
jmp
addr16
mov
out
mov
cltd
loope
out
mov
sete
aas
or
out
add
or
jns
cmc
lock
hlt
jb
adcb
push
lret
mov
insl
sub
std
divl
movsl
mov
pop
sbb
roll
aaa
dec
ret
repz
and
outsl
and
mov
mov
movsl
mov
or
lcall
std
fs
push
idivl
pop
in
pop
shrb
sbb
roll
push
cmc
mov
iret
jmp
outsl
push
dec
shl
and
int3
or
enter
lods
cmp
rol
pop
call
push
mov
dec
arpl
out
cld
adc
dec
pusha
cld
jmp
ljmp
test
pop
xchg
adc
adc
push
rcrl
mov
jo
jnp
cmp
and
les
jne
jns
and
lcall
or
cmc
mov
xor
and
pop
cmp
and
imul
je
sub
lods
popa
jp
pop
xchg
sub
out
mov
adc
into
dec
jno
scas
add
sbb
push
jnp
jp
js
fldl
xchg
mov
and
popa
daa
rorb
in
hlt
mov
pop
push
clc
and
les
iret
imul
fimuls
repnz
inc
dec
xor
lock
mov
xchg
insb
or
and
and
mov
cmp
lret
fcmove
cmp
push
pop
dec
push
ret
daa
adc
and
inc
test
icebp
sbb
mov
mov
mov
mov
push
add
sub
roll
pop
or
or
dec
mov
dec
out
jg
test
in
add
test
xor
push
pop
inc
addr16
pop
dec
inc
popl
cltd
pusha
jnp
push
sbb
fdiv
sub
fcmovbe
or
inc
mov
sub
xchg
xchg
lret
shrl
jne
pop
outsl
sbb
mov
or
loopne
mul
jp
mov
push
jns
mov
cmp
std
dec
std
adc
fdivl
add
pop
mulb
out
inc
leave
fidivs
jno
jno
subb
es
enter
cwtl
scas
cwtl
cmp
bound
and
leave
pop
cmp
hlt
and
jbe
jge
adc
fistpl
push
cmp
jl
sarl
adc
cmova
ds
adc
cmp
cmp
push
mov
lahf
mov
xchg
test
xorb
xchg
mov
sub
aaa
lods
mov
out
jo
xor
lea
or
daa
or
and
and
lret
ljmp
pop
jns
jnp
int
cmp
or
cmpsb
lds
pushf
and
jns
xchg
sub
shlb
inc
jne
stos
dec
sbb
insl
bound
xchg
adc
dec
sbb
pop
mov
or
jmp
insb
add
mov
jp
sbb
in
jnp
mov
rorb
pop
mov
jb
mov
jb
inc
test
cs
jbe
lea
adc
jl
fmuls
xor
inc
push
rcrb
add
pop
enter
sbb
lret
insb
cwtl
stos
lcall
flds
mov
add
mov
jo
scas
adc
in
clc
fwait
and
xor
inc
cld
popa
int
jle
xchg
leave
and
and
cmp
adc
jno
sub
in
pop
inc
out
clc
dec
int
push
cli
pop
adc
shrb
mov
xchg
es
addr16
dec
adc
test
mov
lds
sub
repnz
ljmp
aas
imul
inc
lfs
add
xorl
test
push
adc
jb
popf
aam
jp
cwtl
mov
mov
fadds
movsb
out
sbb
fchs
out
xorl
ds
push
fiadds
iret
cmc
inc
sti
xor
out
inc
xor
rorl
div
push
pop
jnp
cmp
inc
mov
dec
push
jmp
cmp
cltd
fistpll
popf
jne
pop
push
jecxz
rcrb
sbb
lcall
sbb
mov
jo
insb
adc
mov
sub
push
in
sahf
loop
jl
xor
jmp
adc
pop
mov
daa
mov
jbe
js
mov
mov
std
jg
push
pop
les
push
insb
ljmp
push
xor
dec
or
mov
push
cli
sbbb
jp
inc
outsb
xchg
cmc
in
jle
dec
pop
movsl
mov
ficoms
cmpl
or
sarl
cltd
push
xchg
out
mov
inc
sub
data16
lods
daa
mov
inc
mov
pusha
sahf
cli
push
fwait
sbb
stos
push
xor
xor
je
fistpll
sub
jp
push
lock
or
loop
das
call
mov
imul
rcll
cmc
outsb
xchg
outsb
pop
cmp
cmp
inc
sar
adc
dec
ds
shl
xorl
adcb
fisubl
cmp
sbb
cmc
or
ja
data16
imul
add
pop
movsb
xorb
movsl
ja
mov
cld
mov
jne
int
popf
jbe
js
jmp
cmp
sahf
cmc
scas
push
jmp
jl,pt
int3
test
adc
dec
dec
out
outsl
xor
add
insl
or
inc
lock
add
popa
dec
mov
xchg
outsb
out
testb
ds
cs
into
push
push
out
data16
jbe
inc
mov
mov
xchg
outsb
out
testb
ds
cs
into
push
push
out
data16
jbe
inc
mov
mov
xchg
xchg
outsb
out
mulb
es
ss
push
push
out
data16
ja
inc
sahf
push
scas
cmpsb
pop
mov
xchg
outsl
in
testb
mov
leave
lods
push
cltd
adc
jno
inc
test
loope
shl
rorl
ret
mov
popa
addr16
jbe
pop
xor
and
adc
add
icebp
xlat
loope
shl
roll
mov
inc
jno
popa
addr16
ja
pop
pop
and
adc
add
icebp
xlat
loope
shl
roll
mov
inc
jno
inc
or
ja
pop
gs
push
jg
jb
xorb
dec
xchg
sbb
lods
sbb
es
cwtl
adc
cwtl
mov
inc
je
xor
xor
mov
or
xchg
and
cltd
dec
mov
inc
mov
jo
mov
in
loopne
add
mov
jmp
in
or
and
and
aaa
mov
stc
notl
and
mov
lret
sahf
cltd
aad
mov
movsb
sbb
add
test
mov
orl
sub
repnz
loop
or
call
cmp
and
jl
inc
mov
imul
pusha
cmpsl
xor
xor
adc
icebp
xlat
loope
shl
roll
mov
inc
jno
popa
addr16
ja
pop
xor
and
adc
push
mov
sahf
roll
mov
inc
or
pusha
addr16
xor
inc
push
mov
xorb
in
and
push
sbb
ja
push
pop
jns
dec
inc
inc
outsb
mov
mov
xchg
mov
inc
jno
popa
addr16
ja
pop
xor
and
adc
add
icebp
xlat
loope
shl
roll
mov
inc
jno
popa
addr16
ja
pop
xor
and
adc
add
icebp
repnz
fadds
jns
xchg
dec
dec
push
inc
ret
xor
dec
and
out
mov
or
xchg
jge
scas
push
in
or
inc
push
push
mov
jecxz
pop
aam
push
mov
loop
cmpb
repz
jle
xor
outsb
push
sbb
pop
fnstenv
clc
incb
mov
or
mov
dec
mov
nop
shrb
or
sub
aam
ja
sub
push
push
inc
or
imul
aaa
repz
inc
out
nop
jno
test
mov
cmp
aam
cld
out
pushf
jae
fcomi
cwtl
mov
or
jle
in
mov
std
arpl
clc
sub
ss
push
push
push
sbb
int
shrb
jge
call
mov
sbb
in
aam
sbb
jno
jecxz
sub
lds
jg
xchg
push
int3
push
xchg
mov
add
jp
adc
sbb
add
or
xor
inc
ret
cs
stc
mov
cmp
jnp
test
lds
aad
pop
inc
dec
aad
sbb
inc
insl
push
mov
cmpsl
push
mov
ss
inc
jne
test
adc
in
test
push
insl
stos
setl
ja
ss
jns
out
gs
add
loope
push
dec
nop
inc
fucomip
mov
pusha
iret
lods
into
stos
or
movsb
les
add
mov
cmc
cmpsl
push
and
inc
hlt
mov
scas
dec
mov
inc
daa
ret
and
or
adcb
push
dec
adc
inc
in
sarb
aad
mov
int
jnp
sti
jl
cmp
nop
pop
arpl
add
les
jge
lods
push
int3
mov
lock
fisubrl
sbb
mov
jg
mov
and
jne
dec
dec
loop
add
aad
outsl
push
or
sub
insb
push
in
loopne
inc
add
sbb
ret
ds
popf
frstor
and
dec
sub
mov
std
cli
in
mov
push
sbbl
mov
cmpsl
add
fs
adc
test
pop
adc
mov
inc
jbe
cwtl
or
in
sti
pop
mov
jb
jnp
insl
je
fiadds
jns
lock
dec
cltd
cld
cmp
jns
js
adc
es
cmp
add
jne
mov
sub
cmp
push
add
mov
pop
add
lods
rorl
pop
cli
sarl
sub
out
jae
jg
insl
or
mov
mov
std
pop
lret
data16
negl
sbb
push
xchg
std
hlt
mov
xorl
test
pushf
fistpl
imulb
adc
imul
inc
repnz
mov
cmc
je
insb
data16
inc
cmp
icebp
cmp
mov
cmpsl
mov
test
mov
sub
mov
insb
pop
fimull
adcb
adc
sub
sub
add
imul
and
idiv
xor
xor
pop
push
loope
cli
sarl
mov
in
mov
jp
inc
lock
insl
gs
jl
jle
test
add
hlt
mov
shlb
idiv
inc
dec
cmpsl
sbb
aas
lock
xchg
sub
xchg
test
mov
mov
rclb
test
xchg
push
xchg
jo
push
call
cmpsl
mov
or
xchg
lret
push
adc
sti
stos
jns
xchg
add
jnp
push
out
call
push
sub
pop
fdiv
pop
push
fs
sub
mov
js
xor
cmp
sub
imul
cmp
sarb
nop
clc
cmp
xchg
popa
test
jl
mov
push
jne
dec
and
idiv
add
sti
lea
cmp
mov
test
mov
mov
cmpsl
jmp
push
mov
jl
cmp
iret
cmpsl
xlat
mov
pop
pop
xchg
outsb
lods
xchg
in
insb
cmpsb
xchg
icebp
pop
or
xchg
pop
movd
inc
sub
mov
fstpt
sub
xchg
add
sahf
sbb
lods
pusha
pop
lahf
mov
fdivl
das
imul
insl
fiadds
sub
arpl
sbb
aas
xor
es
mov
je
sahf
fs
sbb
fs
jg
out
cmp
cmpsb
mov
push
inc
sti
dec
dec
pop
fisttpl
mov
mov
cld
aas
cmpsl
in
cmpb
sbb
pop
mov
call
mov
imul
aam
sub
pop
pop
aad
lods
jg
fnstenv
xor
icebp
lcall
pop
jo
out
inc
adc
dec
subb
or
mov
dec
push
or
lods
adc
fwait
insl
inc
aam
inc
mov
inc
mov
mov
sub
gs
xchg
mov
aam
imul
push
lock
and
in
iret
lret
int3
ja
sub
inc
xor
inc
xchg
cmpsl
lahf
sbb
test
pop
inc
ror
cmp
out
xor
test
jne
and
pop
fdivrs
cli
movsb
dec
outsb
popa
cltd
fisubrl
mov
jg
mov
subb
insb
movb
xchg
pop
lahf
push
or
dec
jmp
inc
sub
int3
mov
cwtl
mov
mov
mov
add
mov
cld
fsubl
in
sub
xchg
loope
inc
mov
mov
cli
cmp
stc
imul
stos
sti
jno
pop
daa
in
ja
shl
xor
ret
sbb
lods
cmpsl
loop
test
dec
imul
add
ja
movsl
and
adc
pop
xchg
fisubl
push
mov
insl
iret
dec
mov
pop
in
jnp
pop
scas
pop
mov
cmp
mov
aas
mov
cmp
sub
jg
in
lods
xchg
pop
out
out
xlat
cmp
stos
pop
gs
rcll
ss
pop
loope
roll
push
fadds
jno
sub
push
into
adc
push
imul
xchg
cltd
in
or
cld
jl
gs
jle
mov
mov
movsl
and
xchg
or
outsb
dec
mov
jbe
sbb
push
and
cmp
sub
xchg
xor
jb
scas
or
cmp
lahf
or
fistpl
mov
push
iret
arpl
stos
mov
into
lcall
dec
cmp
ja
dec
lret
sub
inc
xor
pop
jbe
loope
and
stc
ds
ffree
ja
roll
pop
mov
dec
push
cmpsb
rcr
and
data16
dec
push
shrl
rclb
dec
jmp
nop
or
dec
cmpsb
mov
sub
add
cmp
fcompl
or
xchg
shll
movsl
dec
ficoms
sbb
lcall
mov
cmp
in
pop
dec
pop
jbe
outsl
jo
rcr
sbb
js
test
jmp
inc
ds
imul
jp
xor
cmp
push
cmp
cmc
xor
pop
push
or
mov
in
inc
inc
mov
dec
sbb
mov
call
mov
scas
in
xor
ret
adc
ficomps
cltd
dec
in
cmp
data16
jp
pop
xchg
mul
or
sub
icebp
jnp
fbstp
imul
jbe
outsl
push
imul
out
in
mov
pop
adc
rorl
xorl
imul
xor
xor
scas
add
popf
roll
cli
cmpsb
mov
jle
add
mov
xchg
je
cld
and
xchg
cmp
cmp
lcall
jge
dec
out
or
int3
imul
mov
insl
pusha
pop
mov
or
jae
mov
in
inc
sub
fcompl
sahf
leave
push
pusha
and
sarb
cmpsl
in
inc
lret
pop
in
xchg
in
stc
sub
adc
fsubrs
outsl
xchg
aam
leave
jbe
test
pop
dec
into
ss
jl
xor
fcomps
xchg
cmp
int
jecxz
pop
mov
ret
push
lcall
push
lea
push
adc
and
sbb
hlt
push
and
out
rolb
mov
inc
cmp
mov
std
ss
aad
adc
cli
rorl
test
test
ja
sub
stos
cmp
push
test
les
fs
sbb
cmp
mov
ds
iret
cwtl
xor
or
movsb
iret
mov
mov
fstl
hlt
cmp
test
inc
aam
mov
mov
dec
adc
mov
stos
push
mov
inc
lea
fwait
data16
dec
jge
jnp
out
inc
ljmp
ja
shlb
inc
jmp
add
sbb
lods
into
loope
out
dec
push
mov
int
test
mov
daa
loope
mov
dec
inc
inc
es
out
outsl
in
xlat
add
popf
ljmp
xlat
sbb
fldt
mov
cmp
popa
xchg
std
int
dec
cmp
push
in
cmp
pop
cmpl
xorb
std
adc
aad
add
jmp
xor
jo
pop
shlb
lds
bound
cmp
xchg
adc
scas
inc
int
movsl
xchg
jae
stos
mov
mov
and
push
mov
repz
and
in
ja
hlt
xchg
cmp
and
es
jg
lock
push
ffreep
lock
jno
push
dec
in
es
lcall
scas
adc
das
in
xchg
roll
lods
sbb
mov
inc
test
dec
addr16
and
add
mov
pop
test
dec
inc
add
cmp
ljmp
gs
add
cli
dec
xor
mov
pop
push
pusha
adc
outsl
adc
scas
dec
dec
sbb
mov
ljmp
jne
ficoms
and
std
cs
xor
mov
push
jge
xor
mov
das
jbe
sub
test
popf
xlat
pop
or
pop
les
mov
sbb
pop
and
insl
sub
mov
cs
inc
data16
jmp
inc
mov
mov
imul
cmp
hlt
inc
add
pop
or
leave
ficoml
cmpsl
cmp
out
inc
cmp
sbb
shll
cmpsl
sbb
add
ljmp
shlb
push
cmpsl
and
lcall
insl
mov
rolb
and
jl
xor
pop
jno
jns
adc
pop
push
pop
xor
icebp
inc
sqrtps
mov
in
roll
rorl
mov
add
test
sahf
push
stos
fnsave
mov
mov
dec
mov
push
fs
loopne
mov
dec
in
cltd
sbb
aam
hlt
loop
je
or
mov
cs
jge
push
cmpsl
fbld
pop
int
xorb
jle
hlt
push
inc
idiv
push
xor
test
mov
fiaddl
outsl
rcll
shrb
add
and
mov
addr16
xchg
lret
popf
repz
dec
push
mov
xchg
xchg
pop
sub
fnsave
sbb
punpcklbw
cmpsl
mov
out
adc
add
decb
es
and
call
add
push
leave
cs
push
roll
mov
dec
xchg
pusha
inc
int3
jge
jp
add
mov
nop
data16
xor
xchg
lcall
sbb
fdivrl
stc
dec
enter
cmp
dec
cmp
mov
jo
std
push
xlat
leave
les
add
jl
jg
sub
jno
dec
pop
pushf
jnp
and
cmp
stc
jecxz
mov
outsb
icebp
pusha
sti
sub
ljmp
hlt
inc
push
or
mov
loope
es
adc
mov
dec
push
pusha
or
repz
mov
das
repnz
shlb
adc
shr
out
pusha
fsubrs
mov
mov
and
sub
push
jge
mov
dec
movsb
lds
stos
pop
pushf
jae
and
out
inc
xchg
addr16
push
enter
in
xor
jnp
xchg
jns
xor
jp
frstor
jno
mov
ja
and
loop
dec
movsb
or
or
lret
stc
imul
cmp
call
push
mov
loop
mov
dec
outsb
loopne
test
lcall
mov
out
push
icebp
cmpsb
xor
lea
xchg
in
pop
mov
rclb
add
pop
rcr
sbbb
pop
lds
add
fwait
jne
cmpl
test
dec
cli
sbb
sub
loop
xlat
iret
pop
enter
mov
icebp
and
sub
xor
cmpsl
out
and
ret
fbstp
pop
mov
adc
sub
popa
icebp
cmpsl
xchg
jne
push
test
test
xor
cmpb
push
jno
add
shl
mov
jne
push
ret
adc
out
aas
jg
repz
arpl
pop
add
mov
xor
pop
sbb
jns
inc
jnp
sub
and
dec
sbb
push
ja
xlat
inc
and
daa
cmp
mov
and
shr
sub
mov
xor
test
dec
andb
xchg
hlt
push
add
pop
xor
sti
cltd
cmp
sub
clc
inc
xor
push
mov
xchg
add
fsubrs
mov
add
add
jmp
sbb
insl
sti
mov
xchg
add
push
push
out
xor
inc
and
lock
xchg
xchg
fwait
dec
daa
mov
sub
mov
push
dec
mov
and
or
sub
data16
inc
jecxz
xchg
and
inc
push
ret
scas
lea
or
adc
sbb
xchg
lock
aaa
stos
inc
lock
sti
or
push
jae
adc
xor
pop
rclb
test
popa
mov
enter
mov
test
mov
push
mov
pop
cmp
jo
or
dec
ja
dec
inc
jne
pop
fs
pushf
mov
dec
dec
jge
test
dec
push
inc
and
ficoms
loop
lahf
int
sub
jbe
lds
scas
push
jb
and
adc
add
test
fprem
adc
sbb
sar
cmp
cmpsl
inc
int
int3
push
pop
sbb
sub
xchg
sbb
xchg
sbb
out
out
cmpsl
sbb
mov
mov
sub
pop
mov
adc
movsb
repnz
leave
jns
xor
cltd
sbb
insl
popa
sbb
mov
enter
mov
movq
into
out
ret
fcomi
divb
mov
inc
xchg
rcll
outsb
inc
insl
jmp
scas
loope
ja
in
inc
cltd
mov
js
movsl
js
add
pop
cmp
loopne
mov
sbb
cmp
pushf
dec
int
aas
in
sub
das
in
inc
popa
mov
mov
mov
std
repz
mov
ret
pusha
sub
cmp
lods
ret
push
shll
and
fwait
clc
xchg
addl
adc
lods
mov
pop
clc
mov
jmp
sub
dec
add
pop
push
cli
subl
mov
popf
and
pop
aam
pop
push
stc
sbb
jge,pt
imul
dec
shll
andl
ficomps
ss
negl
push
mov
int3
pop
leave
fstp
xor
push
sbb
imul
pop
dec
hlt
cmp
ret
out
fidivs
test
stos
gs
mov
jge
sub
int
jge
cs
push
inc
jp
iret
rep
lcall
xor
repnz
mov
mov
mov
mov
inc
rcrb
xor
jp
xchg
adc
mov
push
inc
and
insb
in
mov
lret
dec
popf
and
aam
outsb
out
fwait
add
iret
imul
fdivr
negb
pushf
push
mov
push
xchg
inc
mov
dec
int3
add
jp
icebp
jp
movsb
aam
xchg
mov
mov
mov
adc
js
add
mov
call
pop
push
cmpsb
movsl
sbb
pop
stc
mov
dec
call
dec
out
out
xor
ficoms
inc
push
mov
imul
cltd
xor
ja
cmc
jmp
orb
and
inc
into
mov
outsb
cli
push
or
lahf
jecxz
fcomp
outsb
jmp
adc
decb
test
mov
pop
jb
fwait
push
lahf
movsl
in
add
or
cmc
cs
push
scas
in
mov
or
and
shl
lock
jg
int
fldl
sbb
pop
cltd
cltd
fidivs
in
js
adc
outsl
dec
std
lcall
fwait
dec
cld
inc
loopne
push
and
fwait
jle
jb
pop
pop
push
in
adc
mov
ljmp
pop
out
xchg
aaa
or
mov
pop
jo
pop
xorb
inc
xor
loop
push
or
sbb
outsl
mov
push
jmp
inc
or
inc
mov
jp
movsl
rorb
add
push
lret
push
aas
or
or
fsubrl
pusha
aas
cwtl
adc
sbb
adc
fwait
sbb
jl
xchg
scas
add
pop
test
out
test
pop
leave
push
jo
sbb
push
addr16
xor
sahf
pop
enter
mov
adc
mov
repnz
popa
dec
xchg
popf
mov
lods
mov
pop
scas
jp
clc
leave
outsb
rcrl
test
stc
jge
xchg
mov
lret
fwait
sbb
inc
fstp
mov
sbb
mov
sbb
negb
or
mov
movl
mov
sahf
call
das
or
or
dec
lock
or
and
in
add
and
fdivs
adc
pop
push
xor
popf
out
add
xor
jno
push
and
addr16
enter
lcall
add
mov
fistl
or
cltd
aad
mov
dec
lds
in
dec
into
cmp
and
lfs
cmp
xor
jl
jae
or
enter
jmp
and
mov
cmp
xchg
jecxz
push
dec
test
inc
daa
jecxz
xchg
fwait
push
xchg
dec
adc
pop
cmp
mov
cmpsl
daa
out
inc
loop
add
xor
repz
clc
aaa
xor
rcr
cmp
jo
decl
xlat
xor
pop
int
or
mov
mov
insb
fmul
fadds
sbb
leave
ret
fcompl
mov
mov
jmp
mov
jno
cmc
mov
inc
mov
sub
adcl
in
adc
sub
mov
dec
jnp
adc
add
decl
add
xor
bound
and
lock
jl
add
mov
cs
mov
xchg
push
jecxz
fbld
dec
fsubl
daa
out
push
ss
sti
into
xor
dec
push
adc
push
mov
stc
jb
in
rcr
inc
ljmp
je
or
mov
inc
iret
sub
js
movb
out
adc
pop
push
dec
popf
mov
pop
insl
adc
jno
loop
sub
inc
and
fdivs
out
cmpsb
sub
mov
inc
or
dec
xor
and
out
aad
mov
inc
aam
add
scas
aaa
pop
xor
and
iret
cmp
out
push
movsl
mov
aaa
sti
lcall
mull
mov
fldl
xchg
daa
adc
hlt
sti
stos
ss
das
mov
shlb
loopne
into
fisubrs
nop
outsb
mov
imul
push
loopne
adc
into
jl
cwtl
stos
scas
jns
dec
push
dec
mov
or
subl
cmc
add
mov
add
mov
inc
cwtl
cwtl
push
sub
mov
fwait
push
ja
xlat
lret
loopne
cmp
xor
pop
rolb
fdivr
mov
adc
sub
imul
mov
adc
dec
outsl
test
pop
sbb
mov
push
fnstenv
stc
ret
ret
add
andb
or
ljmp
jge
out
lods
mov
cmp
push
dec
aam
in
dec
sbb
jo
and
pushf
push
pop
jns
pop
in
test
push
push
cmovbe
ja
mov
inc
imull
dec
mov
push
fiadds
mov
jnp
jp
icebp
pop
push
enter
aaa
sbb
loopne
shll
xor
stos
push
insl
out
mov
mov
cld
lret
mov
movl
adc
in
lea
mov
sarb
xchg
lret
out
test
cmpsl
xchg
mov
inc
jno
popa
addr16
ja
pop
xor
and
adc
add
icebp
xlat
loope
shl
roll
mov
inc
jno
popa
addr16
ja
pop
xor
and
adc
add
icebp
push
loope
shl
roll
xchg
mov
inc
jno
popa
addr16
ja
pop
xor
and
adc
add
icebp
xlat
loope
shl
roll
mov
inc
jno
lret
int
ja
ja
ficoms
inc
pop
jbe
inc
jnp
imul
push
fs
sbb
in
hlt
lret
sti
jmp
fwait
mov
xchg
jbe
inc
jnp
imul
or
cmp
sub
fcomi
stos
sti
jmp
fwait
mov
xchg
xchg
stos
pop
jbe
inc
jnp
imul
or
cmp
sub
jae
lret
mov
mov
cmpsb
faddp
in
leave
ljmp
inc
adc
cmp
fsubl
in
loope
das
cs
ffree
int3
scas
shrl
pop
cmp
imul
cwtl
ss
cli
cmp
jnp
cmp
sub
out
mov
shr
cli
cltd
add
sub
pop
pop
jae
in
int3
jnp
pop
es
cmp
cmpsl
lcall
dec
push
enter
imul
or
push
aam
add
daa
add
mov
jle
sbb
mov
stos
xchg
fstps
push
push
cli
cs
test
daa
pushf
dec
add
sub
mov
ja
inc
xchg
es
int
mov
sbb
mov
lret
mov
jmp
ljmp
xchg
stos
movsl
pop
jbe
inc
jnp
imul
or
cmp
sub
fcomi
lret
sti
jmp
fwait
mov
xchg
adc
add
pop
or
xchg
jnp
mov
xchg
lods
and
idiv
jecxz
out
adc
dec
and
push
jge
inc
dec
push
sub
test
shl
out
fdivrp
sti
add
jbe
add
xor
arpl
or
cmp
sub
fcomi
lret
sti
jmp
fwait
mov
xchg
jbe
inc
jnp
imul
or
cmp
sub
fcomi
lret
sti
jmp
fwait
mov
xchg
pop
add
leave
sub
xlat
les
push
cmp
vpmacssdd
call
jmp
hlt
sarl
dec
sti
sub
cld
jns
xor
bound
inc
ss
lea
jp
cmp
stos
mov
mov
ja
cld
loopne
push
ds
fsubl
pop
pop
lea
dec
pop
inc
xor
in
mov
pop
aam
imul
mov
out
cmp
adc
call
push
shrb
aad
mov
stos
sti
and
into
mov
outsb
pop
jbe
push
jne
idivb
repnz
into
movsl
push
pusha
faddl
stos
and
xchg
outsb
test
roll
leave
dec
cmpsl
in
sub
sbb
jnp
enter
xor
lock
stos
in
shl
mov
sub
add
in
aad
jp
adc
cmp
dec
xchg
jmp
in
fisubrl
inc
push
xor
xor
inc
movsl
pop
rolb
and
xor
outsl
movsl
mov
imul
sub
and
mov
mov
movsb
and
std
jecxz
fs
cld
dec
lea
dec
hlt
dec
imul
mov
repnz
lcall
add
add
movsb
int
outsl
sbb
push
inc
lret
inc
mov
test
inc
and
push
push
fs
insb
dec
int
mov
mov
pop
xchg
cmc
inc
rcl
gs
mov
in
jle
cmp
arpl
push
xchg
mov
cmp
std
fnsave
dec
movsl
loop
inc
inc
mov
xor
pop
fcmovnb
cmp
push
bound
add
leave
andb
push
mov
cmp
sub
jmp
ret
push
imul
popf
ret
mov
les
std
cmp
jne
adc
adc
sub
cltd
scas
divl
adc
xchg
jnp
jns
xchg
aad
add
notb
xchg
outsb
in
xchg
cld
push
or
adcb
int
dec
out
inc
xorb
orl
xchg
push
pop
scas
push
jo
cmp
mov
inc
xor
loope
sbb
icebp
mov
sbb
testb
les
dec
mov
push
insb
push
out
mov
lods
or
cmpsb
daa
or
and
mov
fsubr
mov
mov
outsb
push
hlt
xor
jb
je
push
adc
mov
fidivrs
mov
mov
scas
mov
fadd
ror
mov
add
test
sub
mov
add
cmp
sub
shlb
daa
je
mov
ret
mov
mov
mov
ds
or
sbb
add
dec
shl
xor
std
jns
mov
mov
adc
movsb
add
and
push
repz
fldenv
fcmovne
sbb
pushf
shll
mov
stos
ljmp
ja
push
enter
or
pop
xor
pop
cltd
int3
or
or
fsubrl
inc
mov
movsb
push
call
pop
enter
cmp
sbb
pop
ljmp
mov
out
je
add
mov
mov
cbtw
leave
repnz
dec
outsb
push
inc
out
fdivrs
inc
mov
imul
lcall
nop
nop
jb
fsubrs
sbb
push
push
jae
inc
lods
scas
in
ret
inc
pop
andb
std
mov
push
fisubl
dec
roll
mov
fcmovnbe
jmp
in
sarl
push
mov
cmp
ret
jmp
pop
nop
cltd
xchg
sbb
aas
pop
imul
mov
xchg
xchg
lods
mov
lret
pop
push
inc
es
inc
sbb
mov
jmp
movsl
pop
xchg
and
and
inc
dec
pop
mov
push
ds
icebp
sbb
out
jne
insl
stos
loopne
data16
or
sub
fwait
in
ljmp
fcompl
movsb
mov
dec
mov
scas
xor
inc
xor
cmpsb
dec
push
ljmp
sbb
ror
xchg
xlat
push
repz
jecxz
rclb
loop
cmp
jmp
out
add
pop
test
ficoms
icebp
sbb
ret
nop
sbb
test
ds
or
rolb
inc
mov
jecxz
jb
out
or
xor
cli
lahf
mov
and
mov
mov
adc
sub
sub
xchg
jmp
out
xor
std
add
mov
inc
pop
sbb
out
adc
scas
in
mov
xor
inc
dec
push
push
xor
sub
les
jle
push
cmc
sub
les
or
iret
jo
push
inc
lret
addr16
in
flds
inc
movsl
pop
es
dec
ficoml
imulb
fmuls
xchg
sahf
cmp
dec
shll
or
pop
shrl
mov
cmp
aas
dec
data16
sbb
push
pop
fisttps
loop
scas
fwait
or
lret
inc
in
pop
xor
stos
fwait
std
push
lret
mov
fstpt
xor
sbb
mov
pusha
or
aaa
cmp
loopne
out
std
mov
cmp
lret
arpl
in
lods
in
pop
pushf
stc
std
and
movl
shrl
aad
and
inc
insl
bound
or
cmc
cltd
iret
pop
inc
dec
push
test
add
and
stos
add
outsl
loope
shlb
lret
inc
ret
in
movl
adc
stos
sub
clc
xor
movsb
dec
mov
cmp
pop
pop
idivl
out
out
in
dec
scas
imul
in
out
insb
mov
or
dec
push
aad
xchg
lea
sub
sbb
aas
dec
and
pop
mov
movnti
jo
mov
je
xor
ds
fstpt
xchg
sbb
cmp
scas
std
push
outsl
sti
or
inc
fstl
bound
pop
mov
cld
ja
out
lock
ss
dec
cli
pusha
ljmp
push
mov
movsl
fiadds
inc
adc
inc
testl
in
sahf
or
sub
pop
cmp
sbbb
and
inc
fwait
push
or
mov
xchg
cmp
daa
mov
mov
pop
pop
std
fwait
inc
lods
adc
mov
shrl
xor
fidivl
das
lret
add
ljmp
pop
popa
and
ds
or
mov
outsl
ret
push
cmp
mov
rcll
jo
push
out
lret
inc
mov
call
push
inc
imul
mov
ror
scas
je
cmp
in
fdivrs
inc
mov
rcrl
or
ss
mov
jae
sub
inc
loop
lret
divl
insl
inc
jmp
pop
repnz
pop
scas
dec
jmp
cmp
test
xchg
xchg
pop
decl
sbb
addr16
ds
xchg
adc
test
es
lods
out
jle
mov
sub
jnp
fwait
jnp
arpl
mov
fldcw
cmc
call
fistpll
add
stc
mov
fdiv
push
shl
fdiv
lea
xchg
jg
dec
sub
repz
lods
mov
xchg
mov
fimuls
or
inc
int
je
loop
jnp
mov
test
cmc
mov
test
xor
enter
push
mov
jae
push
fld
mov
add
sub
cmp
stc
in
sub
ljmp
insb
pusha
lock
mulb
adc
dec
rcr
sbb
pop
pop
pop
pop
and
jns
xor
cmp
mov
and
lea
cld
push
add
out
aas
ret
insb
js
inc
faddl
rcll
data16
out
loop
ffreep
das
fst
and
outsl
loopne
cmp
or
push
fldenv
cmp
test
js
stos
xor
xlat
stc
cmc
cmc
sub
out
enter
sbb
mov
mov
clc
testb
mov
dec
imul
pusha
adc
push
hlt
fsubs
mov
arpl
sub
sbb
cmp
adc
sub
je
mov
cmp
int3
mov
pop
js
jmp
aaa
aaa
loop
cwtl
lret
pop
sti
aad
rorb
pop
repz
sbb
adc
sub
fldl
out
out
xor
pop
das
addl
cltd
sbb
xchg
ds
push
mov
pop
adc
inc
cli
in
or
cmpsb
hlt
dec
mov
mov
std
inc
pop
add
sti
mov
sub
jmp
xor
xor
adc
jmp
xchg
jnp
or
js
imul
push
out
aad
outsl
push
icebp
repz
jge
stc
push
insl
cs
enter
jo
and
ret
mov
int
js
sub
rclb
mov
sar
dec
jb
fs
ss
add
mov
push
cmpsl
jmp
cmp
pop
insl
jno
and
cmc
cmp
call
sbb
adc
push
hlt
push
or
push
inc
xchg
iret
movl
xchg
leave
sbb
push
cmp
xlat
add
cmp
dec
mov
fcoms
cmp
mov
ljmp
mov
cmp
sbb
adc
ja
roll
ja
inc
adc
repz
or
nop
add
sahf
sahf
add
in
imul
leave
inc
xor
cmp
inc
adc
ds
mov
test
add
inc
ffree
push
push
outsb
push
inc
push
mov
lock
std
pop
out
fcmovnu
scas
lcall
repz
push
mov
xor
cwtl
lods
jp
stc
jo
out
jae
xchg
adc
lds
nop
mov
fmuls
in
testl
jp
fists
inc
cwtl
shlb
sub
add
lret
inc
jno
push
in
mov
mov
decb
push
divl
pop
dec
push
lock
out
xlat
out
pop
add
mov
icebp
dec
jg
sbb
pop
mov
cmp
mov
and
repz
data16
lods
cli
repz
xchg
or
aad
loope
cmp
push
or
cli
xlat
aam
add
movsb
cltd
inc
cmp
push
xor
pop
enter
inc
pop
fiaddl
jge
cmpsl
gs
loopne
wbinvd
add
test
lcall
stos
xchg
mov
popa
in
dec
fdivs
fsubrs
sbb
or
out
out
inc
in
out
inc
sbb
rol
or
xor
adc
xor
enter
stc
aam
cltd
jp
daa
pop
outsl
orb
ret
mov
iret
data16
inc
ret
pop
popa
and
ja
rorb
sub
pop
adc
push
cmp
mov
adc
aad
mov
leave
add
rcr
fisttps
mov
daa
pop
inc
xor
mov
clc
and
outsb
aas
into
ja
push
jmp
shrb
sub
cwtl
daa
mov
icebp
add
xchg
mov
and
mov
lcall
out
cmp
cld
or
arpl
jns
cmp
jbe
push
mov
and
js
and
mov
negl
inc
mov
mov
inc
pusha
add
mov
mov
nop
cmp
jo
cli
fxch
and
scas
shrl
hlt
xlat
cmp
dec
add
sahf
xchg
popf
push
inc
add
pop
mov
fdivp
pop
scas
ja
sbb
xor
loopne
xchg
mov
mov
lret
imul
inc
cs
bound
inc
cld
jecxz
js
cmp
ret
xchg
jg
ljmp
lds
test
inc
inc
pop
inc
scas
std
psubusw
sub
jnp
pop
lods
out
jge
xor
adc
ss
loop
adc
stos
xchg
jb
jo
adc
aad
inc
test
repnz
mov
pushf
mov
lds
loop
sahf
pop
lahf
xchg
add
lcall
add
fs
fwait
std
lret
cmpsb
pop
cmpsb
adc
cli
nop
es
ss
scas
daa
mov
add
notb
sbb
ja
sbb
popa
pop
jge
movsb
add
mov
jae
mov
sub
xorl
sbb
mull
divb
rolb
cmova
sub
enter
pop
cmpsb
cmp
out
repnz
push
dec
test
lods
repz
cmpb
jo,pn
loop
dec
enter
lret
pop
fistl
mov
ljmp
data16
je
xchg
push
scas
loopne,pn
mov
adc
sub
fists
les
test
inc
pop
dec
add
jle
loop
add
repz
or
and
enter
test
bound
pop
and
and
jmp
mov
push
pop
sbb
inc
jb
push
stos
sub
int
pop
jo
nop
outsl
or
mov
jne
aam
jae
pushf
rcll
std
xchg
arpl
and
sbb
nop
and
in
xchg
dec
inc
lahf
cmp
jle
inc
cmp
push
push
cltd
inc
push
data16
push
std
sub
outsb
cwtl
mov
sbb
lret
jecxz
arpl
into
imul
jecxz
sub
pushf
repnz
cmpl
jmp
fwait
sbb
dec
clc
jmp
sahf
pop
xor
pushf
sub
push
xchg
movsl
mov
xchg
test
stos
dec
scas
and
cmp
push
aam
jmp
rcl
test
dec
sub
bnd
or
leave
stos
cmpsl
rol
fs
jecxz
aaa
addr16
jp
xor
mov
dec
mov
dec
popa
push
out
rcrb
cs
call
adc
inc
dec
pop
movsb
mov
or
dec
andl
jge
nop
in
mov
mull
sub
popa
ss
xlat
bound
rcrl
and
outsl
fwait
inc
cmp
jbe
pop
je
mov
hlt
out
roll
stc
test
mov
frstor
push
outsb
insb
daa
xchg
stos
adc
jmp
hlt
enter
and
sbb
shll
cmpsl
push
pop
lea
fwait
and
xor
cmp
xchg
sbb
xchg
cmpsb
push
sub
xlat
out
out
mov
xorl
pop
outsb
das
ret
mov
xchg
sub
sub
popf
in
fcoml
or
mov
adc
lret
sbb
or
jnp
mov
nop
notb
mov
ret
mov
and
clc
and
jae
sti
in
fidivrs
imul
and
sub
test
adcl
or
mov
out
popa
jmp
cltd
xchg
mov
outsl
out
cmp
cwtl
mov
push
loope
es
mov
fwait
dec
mov
push
fsubl
pusha
sbb
add
mov
sub
mov
test
inc
pushf
push
mov
push
mov
push
leave
xor
jmp
sahf
mov
pop
jno,pt
in
fs
fdivrl
add
jp
aad
lret
lret
add
push
cmp
fiadds
and
pop
pop
dec
arpl
adc
call
mov
daa
fsubs
arpl
nop
pop
add
and
sub
sub
push
sahf
mov
and
fstpt
add
je
push
push
je
xchg
scas
out
and
mov
out
pop
ret
mov
add
xchg
ja
push
sahf
sub
arpl
sarb
into
add
and
pop
jnp
cwtl
xchg
push
mov
cmp
shl
or
sub
push
pop
or
out
pusha
cmp
cs
and
pop
and
aam
pop
or
xor
add
pushf
adc
negb
in
jg
jmp
sub
add
fiaddl
ficomps
sub
or
jge
push
push
jb
jno
rcr
mov
loopne
daa
mov
test
push
std
aam
pop
or
and
out
pop
inc
cld
push
or
mov
xchg
xor
mov
cwtl
stos
test
aad
mov
jge
jno
cmpsl
in
imul
daa
fnstcw
dec
cmc
addr16
mov
arpl
sar
inc
pop
aas
or
daa
adc
inc
mov
movsl
shlb
jbe
popf
mov
js
push
cld
pop
aad
sahf
add
enter
sub
loop
xor
test
and
xlat
or
js
pop
xchg
out
outsb
cwtl
call
sub
mov
jno
xchg
xchg
adc
popa
xchg
xor
xor
bound
sub
pop
push
sub
sbb
pop
dec
pusha
lret
js
loopne
pop
jbe
mov
das
popf
add
fldenv
xchg
sub
stc
xchg
pushw
insb
clc
and
jnp
or
inc
pop
and
sbb
scas
xchg
sbb
mov
pop
sahf
jns
and
daa
xor
dec
and
in
dec
scas
dec
cmp
fistps
ret
lcall
adc
subl
sarl
mov
dec
xlat
mov
icebp
cmpsl
out
loopne
or
pop
add
or
repnz
je
movsl
mov
in
mov
scas
popf
jbe
loope
sbbl
mov
push
add
pop
xchg
jecxz
repz
mov
xchg
sbb
and
stos
push
push
icebp
mov
xchg
mov
stos
popa
out
xor
imul
mov
adc
jl
adc
es
fdivrl
inc
fildl
scas
sub
cld
es
jp
inc
rol
mov
cmp
scas
inc
loopne
pop
jecxz
addr16
pop
cmp
mov
ja
mov
mov
in
pop
shl
mov
imul
sahf
xchg
iret
test
insl
push
cli
icebp
fsts
das
sub
adcl
lret
rolb
sub
mov
out
arpl
xor
cs
scas
ret
scas
cmpsb
xchg
test
xlat
jo
add
add
mov
mov
pop
inc
xor
ret
pop
and
push
in
add
or
dec
aas
ljmp
mov
cmp
jnp
bswap
lret
mov
cmpsl
fdivs
xchg
gs
dec
push
bound
into
outsb
xchg
ret
cmp
xchg
loope
push
cmpsl
dec
in
pop
lods
sbb
cld
adc
jnp
push
or
lods
mov
mov
sti
push
or
dec
sub
shlb
test
jmp
sbb
cmp
popf
pop
push
mov
popf
bound
xchg
xchg
cli
lret
out
lret
push
sbb
into
pop
les
or
dec
push
xor
xor
dec
ja
loopne
sub
xchg
adc
jl
shl
xor
sbb
cld
mov
aas
mov
mov
xchg
fwait
or
int
mov
lock
sub
int
xchg
gs
scas
es
subb
or
in
jne
ret
lods
in
mov
pop
inc
out
mov
adc
imull
out
cs
mov
mov
jb
cld
dec
mov
xchg
ja
push
ror
mov
dec
popa
aam
sbb
dec
mov
dec
les
sub
stc
out
sbb
cmpsb
aam
push
dec
clc
mov
shrb
fucomip
mov
cmp
repz
jl
std
adc
inc
sub
movsl
int
stos
lcall
jb
cwtl
sbb
pop
mov
jge
push
sbb
sub
push
and
inc
dec
pusha
pop
push
into
dec
popf
ret
adc
jmp
and
adc
out
add
repz
and
mov
dec
scas
xchg
push
pop
out
dec
sub
mov
xchg
mov
aam
inc
filds
sbbb
testb
mov
xor
push
testb
lods
mov
inc
jg
jnp
xor
dec
pop
dec
daa
movsl
mov
jle
adc
std
sbb
xchg
test
fnsave
pop
cld
and
add
fdivp
insb
call
nop
mov
movsb
addb
jae
pop
fcomip
inc
ljmp
xor
scas
xchg
push
dec
lods
out
mov
les
push
inc
clc
fnstsw
xor
std
xchg
inc
jns
fs
push
icebp
sti
push
loope
out
inc
or
push
pop
mov
mov
mov
sar
icebp
rclb
fldt
sbb
lahf
mov
or
cltd
stos
int
outsl
push
iret
arpl
shrl
mov
std
movsl
sbb
call
mov
adc
sbb
push
movsb
mov
xchg
test
ret
push
in
pop
add
xor
sbb
in
sub
push
mov
lahf
jno
mov
scas
mov
push
into
inc
outsb
hlt
or
cmp
mov
xor
or
and
ret
fdivrl
add
or
pop
cmp
xchg
ret
push
cmp
xchg
pop
clc
or
add
flds
mov
ret
dec
jns
push
imul
or
cmp
sub
fcomi
lret
sti
jmp
fwait
mov
xchg
jbe
inc
jnp
imul
or
cmp
sub
fcomi
lret
sti
jmp
fwait
mov
xchg
jbe
inc
sti
push
imul
aaa
mov
cmp
sub
pop
test
sti
xlat
jmp
fwait
mov
xchg
jbe
inc
jnp
imul
or
fisttpl
popa
insb
sti
pushf
rcll
je,pt
inc
outsb
push
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lods
dec
mov
push
int3
pop
rcrb
inc
ljmp
dec
stos
pop
cli
insb
mov
push
jp
dec
mov
cmp
or
sbb
sbb
dec
lret
or
pop
mov
xor
outsb
jp
dec
fs
shrb
mov
sbb
aas
cmpsb
inc
mov
fidivrs
out
and
lods
cs
enter
ss
stc
dec
imulb
scas
jae
mov
or
js
pusha
bound
sub
cmp
popa
push
jno
cli
push
push
mov
lods
fnstcw
popf
mov
or
sbb
cmp
cmp
pop
stos
sbb
push
xchg
hlt
jnp
dec
push
dec
xor
fsubrl
adc
cld
dec
or
xor
and
insl
je
mov
mov
lds
ja
sub
lahf
sti
sub
jns
or
call
add
xor
xor
lahf
aas
adc
enter
cmovle
lcall
mov
cmp
or
lret
cli
pop
lret
add
push
mov
in
out
test
mov
outsl
cld
push
xchg
dec
movsb
pop
mov
xor
add
sub
xor
dec
fisttpll
sbb
sbb
dec
xchg
sub
inc
mov
lds
aad
cmp
push
int
out
cs
inc
fdivrl
in
or
sbb
sbb
sub
cmp
dec
stos
pop
mov
mov
jp
dec
mov
cmp
or
sbb
sbb
sub
cmp
dec
stos
pop
mov
mov
outsl
outsb
mov
xor
sbbb
gs
ds
xchg
pop
pushf
roll
loopne
loope
adc
int
stos
mov
nop
pushf
fcompl
mov
mov
cltd
pop
les
sbb
fcmove
out
out
fs
xchg
mov
enter
push
cmp
fdivrl
pusha
jbe
xchg
clc
cld
mov
mov
sti
decl
pop
or
fisttpll
mov
stos
mov
dec
cmp
xchg
xchg
mov
daa
add
movsb
shl
lods
cwtl
rclb
leave
lods
jg
hlt
leave
pop
fwait
mov
adc
notl
into
and
jb
and
pop
lods
jge
add
mov
fwait
bound
sub
rcll
dec
mov
add
and
or
repz
dec
clc
jae
in
cmc
pushf
cli
mov
outsb
dec
mov
xor
push
test
imul
push
sbb
ja
cmp
and
fldcw
jo
mov
sbb
aaa
loopne,pn
aaa
ret
mov
jmp
stc
movb
insb
rolb
enter
out
std
fldpi
xor
mov
incl
decb
jge
add
int
push
inc
aad
sub
mov
adc
in
pop
jge
imul
dec
scas
mov
inc
and
cmp
mov
and
xor
es
call
les
xlat
xchg
jle
into
repz
nop
int
ljmp
in
pop
or
popa
inc
push
fistpl
mov
fwait
test
repnz
popf
fiadds
mov
sahf
mov
fcoml
addr16
inc
sbb
scas
nop
dec
pop
push
push
test
push
jns
iret
or
insl
clc
pop
ljmp
pop
hlt
push
leave
popa
into
sbb
jl
inc
jmp
pop
pusha
movswl
mov
mov
xor
ss
jmp
test
adc
in
inc
ficoms
or
ljmp
je
cmp
xchg
jnp
mov
ret
dec
fstp
std
mov
mov
sbb
add
jmp
push
ljmp
rcrb
fldl
test
pop
sar
pop
xorl
and
add
inc
insl
loop
or
pushf
out
popf
loop
xorl
push
neg
mov
mov
fbld
out
daa
xchg
arpl
push
popf
ret
outsb
pop
adc
repnz
es
insb
cwtl
into
dec
inc
addr16
ja
mov
hlt
jl
fwait
push
pop
std
sub
insl
cs
pop
mov
inc
test
and
or
loopne
xor
cmp
xchg
cmpsb
mov
aad
jg
movsb
sbb
push
push
in
insl
mov
and
xchg
push
lret
sub
adc
xor
leave
mov
loope
fidivs
mov
sub
and
sbb
hlt
inc
jne
mov
popa
cmp
pop
add
mov
in
add
test
bound
stc
sti
test
ja
sbb
inc
jb
xor
jl
sub
push
adc
jne
out
and
aam
popl
icebp
jmp
scas
data16
mov
pop
out
xchg
int
gs
push
ja
xor
adc
cltd
mov
add
or
in
sub
daa
gs
dec
pop
test
out
push
dec
sbb
sub
sbb
sub
or
lods
inc
dec
push
icebp
pop
sbb
lock
jp
inc
imul
icebp
sbb
pop
xchg
in
cs
rcrl
es
push
sbb
jl
mov
daa
loop,pt
jae
int3
scas
sti
mov
dec
xchg
or
in
xor
xor
xchg
cltd
sub
or
lods
stc
leave
dec
inc
pop
bound
outsb
das
pop
stc
shrl
mov
and
imul
fnsave
push
jl
mov
jne
mov
mov
dec
push
fstps
pop
mov
xchg
insb
push
push
lds
adcl
xor
es
sub
lea
xchg
pop
pushf
mov
xor
add
ss
mov
rol
push
imul
dec
rolb
sbb
inc
mov
jl
popf
ss
arpl
sub
incb
lods
cmp
pop
jl
sub
mov
cli
lock
adc
stos
mov
sbb
ss
out
sub
into
aaa
ljmp
adc
outsb
sbb
sbb
aaa
iret
into
cmp
fwait
subb
fstps
nop
scas
in
and
mov
je
sahf
jne
ljmp
in
mov
rcll
push
jmp
xlat
lret
mov
ja
je
dec
stos
cmpsb
jge
into
add
inc
shr
aaa
aad
in
sahf
add
bound
dec
mov
dec
punpckhwd
out
adcl
cmp
sub
mov
stos
jne
test
into
xor
cmp
mul
cmp
in
jle
insb
or
dec
fiadds
stc
dec
or
call
xor
and
cmp
and
add
pop
mov
mov
int
scas
push
lahf
arpl
adc
dec
popf
sbb
ds
xchg
push
aaa
xchg
push
cmpl
fcompl
and
cmp
in
jb
jecxz
gs
xchg
addb
bound
negb
push
cmpl
cmp
inc
in
mull
mov
out
jmp
or
sbb
xchg
mov
stc
mov
mov
jmp
out
cmp
and
das
jl
outsb
sbb
mov
stos
lods
jl
sub
flds
cmc
dec
xchg
sub
sbb
inc
adc
stos
jecxz,pn
jo
popa
push
aad
sbb
push
push
jno
push
xchg
jge
dec
xlat
pop
add
movsb
stc
jge
xchg
testb
add
les
jle
mov
pop
sbb
les
mov
mov
adc
sbb
mov
fidivrl
push
mov
loop
out
fs
push
movsb
lahf
into
sub
adc
mov
sbb
in
xchg
push
into
daa
outsl
push
clc
push
lods
hlt
push
fisubl
add
dec
shll
call
sub
push
or
into
scas
xchg
je
ret
mov
xor
pop
sbb
enter
in
mov
cwtl
lret
flds
into
in
dec
ss
stc
inc
push
rol
mov
xlat
cmp
ret
movsl
or
mov
inc
repnz
sarl
aad
popa
test
cmp
lods
sahf
cmpsl
cld
cmp
dec
pop
pop
pop
mov
iret
lret
mov
push
mov
cld
imul
add
ss
popf
cmp
xor
iret
lea
pop
std
addl
adc
lret
xchg
adc
xor
dec
push
xor
lock
push
pop
das
inc
mov
xchg
mov
pop
push
mov
std
xchg
xchg
bound
sti
jb
push
ljmp
dec
inc
add
push
xchg
jl
out
outsb
les
push
pop
inc
push
or
mov
jge
repz
dec
adc
sub
int3
cmp
cmpl
rorw
mov
inc
xchg
inc
or
cmp
mov
in
adc
or
stos
ret
clc
arpl
pusha
jae
mov
out
pushf
inc
cmp
ljmp
mov
scas
cld
out
bound
popf
stos
push
xchg
adc
sbb
mov
pushf
and
dec
inc
imul
lea
movsl
pop
mov
js
inc
pop
fstps
push
pop
cwtl
test
fstps
pop
jmp
or
lahf
jnp
xor
inc
mov
jbe
adc
push
cmp
xlat
dec
jl
mov
shrb
mov
fst
ret
mov
das
cwtl
and
ljmp
out
push
mov
jl
jbe
push
cmp
sbb
xchg
jmp
dec
dec
mov
xchg
cmp
dec
sbb
xor
outsl
jecxz
inc
cmp
or
sub
xchg
loope
add
mov
sahf
jbe
imul
out
xchg
mov
ja
mov
lds
in
adc
jne
jecxz
push
xchg
inc
in
divl
inc
sub
and
inc
test
jge
xor
dec
dec
jg
repnz
jb
sub
push
sub
mov
push
jp
xor
fsubr
lret
mov
sti
push
jnp
loop
out
lahf
adc
jl
ds
pusha
out
and
pushf
test
adc
arpl
push
cld
xor
inc
bound
pop
movsb
nop
nop
div
inc
popf
sar
arpl
add
dec
push
mov
mov
push
and
mov
leave
out
push
icebp
mov
jp
xor
scas
jnp
push
leave
es
lds
mov
pop
ret
lret
aaa
xchg
test
iret
imul
mov
mov
add
jecxz
sbb
stos
sbb
pop
loopne
jno
push
movsb
clc
cld
ror
jl
nop
xor
aam
sar
and
sbb
push
out
bound
jae
daa
pop
xchg
std
lods
movsb
or
sub
dec
sub
cmpsb
lahf
mov
insb
aas
out
push
out
in
cmp
gs
popa
aam
adc
faddl
in
pusha
int3
push
mov
xchg
dec
dec
pop
and
je
push
jge
out
pop
push
push
lahf
fwait
imull
into
pop
xchg
fisubrs
jbe
leave
pop
sub
cmp
mov
pusha
mov
ret
inc
pusha
cmp
jne
fwait
daa
pop
push
aad
icebp
xchg
jl
std
hlt
js
leave
inc
push
shll
push
shll
loopne
popf
jns
push
jns
add
popf
add
or
mov
mov
mov
out
lahf
cmp
xor
loop
inc
mov
inc
or
mov
push
push
lcall
add
dec
lea
test
or
adc
pop
dec
sahf
xchg
cld
popf
cmp
ja
jle
xchg
pop
stos
lods
mov
in
in
adc
ljmp
mov
pop
mov
cmpsb
sub
das
pushf
dec
adc
cli
imulb
lods
jle
xchg
repz
jno
dec
in
dec
pop
add
into
xchg
andb
mov
insl
sub
cmp
ss
int3
xorb
pop
test
idivb
mov
out
push
jmp
cmp
shr
mov
cmp
outsb
lret
mov
arpl
pop
jo
ret
addr16
xchg
cld
loope
xor
sub
jmp
in
cmpsb
nop
xchg
add
aas
xchg
mov
push
out
and
lock
xor
lret
sub
jle
jg
jmp
repz
cmp
shlb
std
ret
out
fsubl
inc
rolb
mov
xchg
lock
les
inc
cs
add
test
push
mov
jbe
in
mov
mov
jecxz
aad
and
test
filds
insl
lods
icebp
ja
hlt
xchg
outsl
push
fs
push
pop
or
out
sbbb
sti
icebp
popf
inc
mov
mov
push
mov
and
sub
pop
stc
sbb
inc
pop
adc
pop
imul
and
and
xchg
shl
lods
inc
data16
lods
rclb
inc
jbe
rcr
jp
jmp
adc
or
cmpsl
lds
loopne
das
inc
dec
aaa
sar
insb
xor
cmp
out
jae
xor
pop
fiadds
sbb
loop
cmc
orb
insb
add
mov
int3
push
inc
jno
imul
add
xchg
repnz
pop
enter
push
or
xchg
stc
leave
or
loop
and
xchg
push
jmp
std
in
inc
in
es
stos
push
mov
add
jbe
repnz
mov
mov
add
and
inc
clc
sub
movsl
jne
push
inc
mov
xchg
xchg
test
int3
lret
lock
xchg
imul
sbb
push
mov
mov
mov
dec
call
add
fldcw
ret
outsb
adc
and
ljmp
jnp
jp
mov
dec
test
es
push
push
iret
push
inc
pop
outsb
xchg
mov
mov
adc
pop
sbb
pusha
sbb
push
sub
push
clc
xchg
push
aas
dec
les
jnp
insb
pop
mov
loop
fs
xor
ss
lret
cltd
je
and
flds
and
cmpsb
mov
into
mov
fisubrs
aas
sub
sub
sbb
mov
push
sub
cmp
aam
fistl
push
or
sbb
xchg
fucomp
rcrl
fsubrl
xchg
stc
gs
gs
out
jne
or
ja
adc
fidivrl
sbb
outsl
movsl
xor
dec
leave
mov
dec
repnz
pop
push
sbb
push
mov
sbb
in
dec
cmp
pop
push
add
shrb
cli
mov
std
push
add
pop
xchg
xchg
xor
and
in
or
push
std
xchg
jne
scas
xchg
cmp
loope
add
mov
cmc
cld
out
add
leave
ror
cmp
and
inc
jbe
fstpl
imul
or
add
sub
stos
xchg
inc
xlat
out
insl
mov
push
xor
sub
addr16
push
mov
and
push
fdiv
sbb
imul
cmc
scas
xor
jle
gs
mov
jnp
sahf
loop
mov
mov
xchg
js
mov
xchg
adc
fildll
mov
push
xchg
cltd
fistpl
cmpsb
bnd
xor
add
sbb
cmc
mov
mov
push
sarb
mov
or
roll
scas
fwait
out
cmp
hlt
sahf
add
sbb
mov
xchg
ret
ds
iret
mov
adc
ljmp
hlt
imul
mov
pop
insb
test
and
xor
pushf
dec
test
xchg
aam
incl
mov
mov
aam
mov
cld
pop
cmp
ret
inc
mov
lods
or
out
jmp
lret
scas
mov
movsl
addr16
push
fucomip
mov
test
lea
xchg
loopne
lock
loopne
cmp
push
mov
xchg
dec
mov
test
stos
icebp
push
or
fildll
sbb
pop
and
das
mov
mov
aad
mov
jnp
stos
sahf
push
lahf
dec
adc
cmp
xor
insl
add
inc
jae
cmpsl
cltd
loope
pop
mov
mov
fwait
and
into
mov
and
movsb
je
sbb
cmp
das
addr16
xlat
mov
adc
add
adc
in
nop
incl
mov
mov
or
sbb
inc
mov
cltd
imul
cmpsl
and
xchg
test
dec
pop
sbb
mov
out
mov
pop
or
pop
push
push
jns
ret
mov
pop
stc
jl
addr16
adc
icebp
mov
cwtl
stos
sahf
rcrl
and
mov
dec
push
fucomi
mov
add
fsubs
jmp
andl
pop
lret
popa
rorl
pop
xchg
mov
scas
adc
out
cmp
lods
mov
adc
cmp
or
dec
lea
sub
hlt
xor
ja
testb
cmpsl
mov
dec
fidivrl
popa
sbb
jmp
ret
adc
sub
nop
push
fcoml
mov
inc
dec
imul
push
or
mov
mov
push
lods
jae
lds
inc
mov
repz
mov
pop
xchg
mul
and
je
decl
mov
jo
add
lock
cmpsl
jl
gs
add
sbb
leave
add
pop
ja
rolb
mov
mov
jle
push
sarb
fldenv
or
sub
int3
movsb
push
lcall
mov
push
enter
nop
push
clc
sub
gs
pop
popl
jl
jns
mov
movsb
push
pop
inc
scas
call
cmp
int
cmp
lock
mov
scas
dec
sbbl
mov
fwait
push
sbb
or
jg
hlt
mov
lds
outsl
shrb
test
enter
sub
aad
dec
push
jns
xor
and
aas
mov
inc
mov
test
cmp
movsl
mov
jmp
or
aaa
test
leave
push
mov
subl
push
negb
cmp
cmpsl
test
loop
mov
int3
cmpsl
mov
aad
add
in
mov
add
lret
jnp
js
mov
sub
jns
sti
push
loop
imul
out
data16
xlat
add
sysret
add
pushf
sub
xchg
sub
push
pop
xchg
xchg
out
cmp
sbb
adc
jecxz
mov
cltd
push
cwtl
shl
fwait
stc
ljmp
loopne
in
bound
cld
loope
cmp
xchg
ret
pop
js
adc
repz
in
mov
or
iret
push
xchg
mov
aad
into
push
arpl
daa
mov
or
sti
and
scas
and
lret
rorl
sti
ret
xchg
je
mov
in
fs
xor
stc
nop
dec
mov
in
mov
mov
sub
iret
cmpb
xor
fidivrl
into
mov
pop
pop
aam
test
xor
shlb
into
fwait
mov
fndisi(8087
fisttpl
add
lret
dec
pop
adc
jae
push
repz
or
cmp
je
mov
and
and
in
mov
stc
xor
ret
mov
pop
cli
mov
mov
enter
rcr
xchg
mov
xchg
insl
cli
dec
js
adc
popf
pushf
or
rolb
ds
popf
push
lods
adc
pop
xor
nop
adc
imul
push
mov
xor
ds
pushf
gs
int
mov
pop
and
jne
test
mov
push
sbb
lods
fiadds
inc
mov
nop
ja
int3
mov
js
data16
inc
je
and
mov
les
scas
imul
jb
jbe
lods
or
mov
or
sub
into
adc
push
push
cwtl
adc
add
aaa
pop
cwtl
mov
popa
xor
mov
push
sub
xlat
ds
aam
xchg
insb
mov
dec
inc
cmp
xchg
push
shlb
jne
adc
xchg
lea
jle
xchg
mov
pusha
ja
mov
xchg
cli
andb
xor
outsb
pop
nop
xchg
aas
or
sub
mov
scas
lcall
int3
push
push
xchg
and
mov
cmp
mulps
pusha
ret
cltd
jo
fsubr
cmp
stos
jecxz
gs
stc
shlb
notl
lcall
lods
inc
jo
js
loop
nop
sub
pop
enter
add
loop
cmpb
mov
xchg
or
jg
fwait
lcall
add
pop
icebp
sub
add
test
jnp
xor
aad
dec
out
decb
loopne
out
and
add
push
lock
xor
gs
dec
cmc
mov
loopne
cmp
mov
lret
xor
fnstsw
ds
das
mov
xchg
pop
addb
xchg
out
dec
lock
sbb
inc
adc
push
mov
pop
mov
sahf
add
subl
jge
push
jbe
jbe
xor
dec
sub
push
push
and
les
leave
neg
inc
sti
sub
mov
pop
cs
aaa
dec
mov
pop
inc
xchg
sub
jle
mov
out
push
int
mov
loope
dec
inc
imul
jne
je
fadds
cmc
mov
movsb
jae
outsl
notb
aam
nop
lods
loopne
je
loopne
je
pop
fidivs
aad
stos
push
iret
or
in
xchg
pop
jle
fidivl
jnp
jne
pop
mov
fists
xor
push
mov
pushf
fcoms
bound
testl
sub
mov
negl
insb
add
jo
lds
bound
roll
pop
sahf
loopne
and
jmp
fs
cmp
clc
scas
loope
adc
rorl
pop
sub
jle
mov
cmp
jns
sbb
bound
dec
add
jo
jnp
push
push
rcrb
aaa
mov
clc
mov
call
test
cltd
inc
outsl
jb
xor
xchg
or
and
push
jns
leavew
lcall
sbbl
lcall
ss
cs
or
and
sub
call
test
pop
int3
fsubr
sbb
jecxz
inc
pop
leave
mov
dec
out
lock
add
out
jl
fldenv
mov
xor
pop
pop
stos
inc
push
sub
pop
dec
fnstenv
addb
pop
imul
outsb
and
leave
mov
jl
push
jnp
xor
push
clc
aas
cs
data16
inc
xor
cmp
jmp
mov
cmp
or
sbb
sbb
sub
cmp
dec
stos
pop
mov
mov
jp
dec
mov
cmp
or
sbb
sbb
sub
cmp
dec
stos
pop
mov
mov
jp
dec
mov
cmp
or
or
sbb
fmul
cmp
dec
stos
dec
mov
cwtl
push
jp
dec
pushf
pop
int3
sub
mov
or
jecxz
xchg
cmp
cmp
aam
xchg
jne
gs
loop
repnz
test
cmp
push
or
lcall
dec
xor
loop
repnz
sub
frstor
sub
jb
sub
adc
dec
xor
js
test
mov
fcmovu
test
cmpb
and
adc
push
and
xchg
xchg
mov
and
jae
leave
imull
neg
jge
rcr
or
adc
add
pop
cmp
mov
mov
adcb
dec
pop
test
mov
add
imul
inc
inc
loop
addr16
icebp
in
cmp
cmc
clc
ret
jmp
or
std
xchg
std
mov
cmp
popf
sub
pop
add
dec
inc
adc
das
negl
mov
inc
mov
xchg
fsubl
dec
sub
addb
jno
mov
ficoml
sub
and
inc
mov
adc
in
dec
sbb
insb
push
pop
into
and
repnz
xchg
repnz
sub
frstor
sub
dec
jge
insl
cld
pop
cmp
sti
ret
clc
mov
sahf
xchg
daa
movsb
mov
add
and
popa
adc
inc
add
sbb
pop
mov
xchg
call
rcr
int
pop
and
daa
pop
xor
sbb
adc
inc
dec
inc
aam
leave
xor
mov
frstor
sub
jb
add
pop
and
mov
loop
repnz
sub
frstor
sub
jb
add
pop
and
mov
lahf
test
fwait
fs
lea
sub
in
test
jne
xor
arpl
cmp
and
inc
dec
lock
pop
data16
xchg
out
add
xor
pop
aas
ss
pop
ret
push
cltd
vpunpcklwd
pusha
shlb
cltd
ss
into
jno
das
and
mov
xor
push
cmpsb
les
xor
or
jmp
dec
sbb
mov
adc
pop
fwait
jae
idiv
fstps
sti
sub
pop
test
pop
sub
scas
adc
dec
cmp
enter
ret
and
mov
cmp
mov
xchg
or
sub
push
das
enter
xor
sahf
incl
ds
dec
insb
les
mov
sub
mov
dec
inc
push
push
in
sbb
mov
lret
sbb
or
mov
mov
and
in
fsub
test
and
loopne
inc
gs
shlb
std
cmp
sub
insb
mov
int
shll
inc
mov
mov
popf
ja
enter
xchg
loope
xor
insl
fsubrl
xor
lret
mov
decl
roll
adc
xchg
pushf
mov
insl
mov
sahf
daa
cmpsl
dec
fnstcw
stos
mov
mov
mov
pop
sbb
fcomps
cltd
adc
ds
mov
or
adc
xor
jbe
int
sub
inc
dec
out
les
test
into
sbb
pop
xor
inc
hlt
jl
jecxz
je
sbb
xchg
pop
int
mov
or
test
mov
push
out
out
jle
adc
adc
lods
jno
pop
bound
mov
xchg
pop
nop
mov
pop
sub
cwtl
lret
add
movsb
add
add
daa
test
aam
pop
push
js
xchg
icebp
push
mov
stc
mov
or
mov
sub
jnp
adc
bnd
pop
fldcw
xchg
jo
pop
jb
int
add
cmc
mov
add
jnp
insb
cmp
mov
movsl
xchg
cmpsb
jnp
out
cwtl
xchg
mov
add
sbb
xor
mov
xorl
stos
out
mov
mov
cld
mov
mov
insl
xor
sub
lahf
push
xor
sub
movsb
inc
fs
jp
xchg
outsl
enter
mov
inc
jl
out
jmp
mov
xor
jmp
inc
cmp
insb
stc
mov
xor
pop
mov
fcomps
mov
into
sub
push
add
scas
push
cmc
add
mov
scas
mov
fxch
iret
call
sbb
idivl
add
daa
sbb
mov
jg
stc
jecxz
add
push
push
xchg
jg
mov
and
lds
and
and
call
push
and
and
sbb
jle
add
pop
xchg
lock
lea
jb
sbb
xchg
xchg
test
xor
push
int3
nop
aas
mov
cltd
clc
jecxz
xor
inc
inc
sbb
movsl
mov
shlb
mov
imul
mov
test
rcll
dec
cmp
pop
cltd
inc
jo
insl
nop
inc
mov
inc
cmp
stos
mov
and
add
mov
mov
aam
or
push
dec
cwtl
sub
daa
aad
xor
sbb
mov
ret
push
and
xchg
pop
inc
push
push
call
push
lret
mov
adc
mov
sbb
push
dec
das
or
mov
xor
cmp
push
rcl
nop
mov
lock
jle
pop
jae
ja
adc
lock
and
loop
adc
mov
rclb
rcll
das
jp
and
cld
ficoms
cmp
lods
sahf
ljmp
mov
and
roll
jecxz
pop
dec
sbb
cltd
insl
push
sbb
test
inc
mov
push
shrl
imul
push
movsl
test
adcl
push
fildl
hlt
cmp
daa
lods
aad
push
adc
scas
jl
cmp
jno
orl
fadds
sub
jne
mov
sti
incb
dec
adc
addr16
or
roll
push
cld
xchg
inc
popl
push
lds
out
sub
rcrb
int3
stos
pop
fiaddl
or
loop
ret
stos
adc
dec
in
fwait
fnstsw
ror
loopne
ljmp
ljmp
pushf
xchg
cld
leave
insl
scas
in
aam
xchg
xor
imul
out
mov
dec
icebp
dec
mov
aad
aad
cmp
call
stc
gs
js
inc
bound
add
sahf
fst
in
es
lods
sti
or
ds
push
pop
inc
lds
jb
xor
sahf
inc
mov
pushf
pop
jg
sbb
not
push
movsb
std
or
out
icebp
cmp
aam
push
sub
das
shrl
xor
mov
mov
adcl
int
xlat
cs
xchg
lods
mov
cmp
repnz
push
xchg
push
cmpsb
movsb
aas
cltd
jbe
out
lret
cli
push
inc
das
mov
inc
pop
jno
roll
ret
enter
cmp
sbb
or
mov
lret
cmpsb
dec
push
xlat
or
in
sub
ffree
nop
call
mov
or
ret
dec
lods
push
xor
sub
push
insb
jns
icebp
imul
mov
add
aas
leave
subl
xchg
sub
adc
sahf
adc
shlb
aam
stos
stc
outsl
inc
aam
and
and
dec
adc
fbld
pop
test
test
sub
cmp
inc
test
mov
into
push
sar
inc
push
movsb
imul
scas
dec
ret
inc
out
addr16
jno
lods
ja
cltd
inc
mov
aas
mov
sbb
and
mov
mov
sub
cmp
ljmp
add
dec
sub
popf
jle
adc
push
xor
and
ja
inc
pusha
out
rcll
sub
in
test
push
xchg
in
and
adc
push
push
shr
xor
mov
xor
stc
and
daa
push
cmp
std
xchg
and
cmp
mov
push
mov
xchg
repz
mov
lods
xchg
out
push
mov
rorl
cmp
pop
add
inc
lret
in
cmpsb
fimull
fstpl
or
jae
stos
mov
and
xor
stc
inc
mov
cwtl
or
arpl
js
call
cld
jl
je
and
mov
xor
jl
push
dec
movsl
fldcw
lcall
rorl
out
mov
popa
hlt
sbb
bound
imul
jg
xchg
add
cmp
iret
and
sbb
loop
fwait
mov
pushf
sbb
cmp
test
mov
inc
sbb
push
dec
or
and
and
sub
aaa
sub
sahf
arpl
int
outsl
stc
orl
xor
mov
push
test
sbb
push
push
xlat
mov
lods
sub
and
arpl
jns
in
jmp
stc
cmpb
loopne
aaa
clc
xchg
movsb
mov
mov
pushf
mov
pop
add
js
subl
mov
inc
out
ret
cmp
pop
xchg
or
mov
stos
xchg
std
xor
add
je
jbe
int3
data16
out
scas
addr16
pop
clc
aas
cwtl
shr
xorb
inc
js
je
mov
adc
sahf
dec
inc
hlt
pop
js
inc
jl
mov
iret
inc
sub
sbb
or
iret
je
clc
inc
inc
ljmp
sbb
stos
mov
out
enter
inc
not
shr
jg
xchg
aaa
in
int
mov
mov
daa
insl
inc
xchg
pop
pop
mov
mov
xor
adc
xor
cmp
fists
lret
cmpsb
xchg
cmp
lods
pop
out
gs
insl
add
movsb
jl
sar
adc
xor
test
mov
unpcklps
sbb
fstps
fisttps
mov
adc
out
and
inc
cmc
cmp
lcall
dec
xor
sub
mov
push
scas
push
adc
pusha
int3
arpl
inc
gs
gs
and
xor
xor
rorb
and
pusha
xor
cmpsl
out
cmp
pop
decl
popa
push
xor
pop
cmpl
inc
xlat
rcl
push
rcrl
ljmp
outsb
xchg
pop
push
out
lcall
orb
sub
xchg
mov
jp
sub
stos
dec
lret
stos
push
push
sub
aaa
add
inc
or
xor
xchg
dec
insb
push
jg
loope
repnz
pop
xlat
jbe
sbb
xor
sbb
push
sarb
mov
xor
mov
enter
sbb
mov
sahf
daa
scas
xor
pop
mov
movsb
xor
pop
mov
and
out
outsb
dec
call
subb
xchg
mov
test
cs
nop
jle
sahf
mov
lahf
push
clc
push
sub
fmuls
xor
mov
pop
mov
sarb
pop
and
mov
sub
xchg
mov
jne
incb
adc
nop
movsb
mov
add
add
cmpsb
fimuls
mov
imul
push
cmp
je
scas
ljmp
or
mov
ret
cmp
lsl
stos
out
pop
enter
inc
xchg
mov
test
mov
pop
sti
lds
sbb
pusha
add
dec
outsl
add
xchg
push
aam
dec
or
mov
jnp
or
sbb
mov
inc
and
iret
ljmp
aas
and
sub
pop
mov
add
addr16
and
sub
mov
xchg
rorb
popf
std
hlt
cli
std
pop
hlt
sahf
and
daa
xchg
psrad
idivl
adc
add
fcmovbe
stc
jns
xor
fwait
js
mov
add
mov
call
ficomps
aad
in
adc
mov
jbe
cmp
ret
push
adc
test
out
xlat
icebp
inc
pop
mov
lahf
data16
arpl
movsl
push
xor
mov
xchg
shlb
add
popa
push
dec
and
cmp
xchg
repz
inc
test
pop
rep
repnz
pop
cmp
enter
xchg
jge
mov
sub
xchg
and
sub
enter
mov
fimull
xchg
fcmovu
cmp
pop
mov
setae
clc
jl
pop
push
jl
dec
sbbl
xor
outsl
mov
jl
aad
cmpsb
jo
xchg
xor
pushf
pusha
cmpsb
cmp
mov
mov
fists
jbe
xor
lahf
cmp
stc
fistpl
push
cmpsl
push
fnsave
je
mov
xchg
inc
dec
mov
jecxz
loope
inc
je
jmp
mov
jbe
shll
inc
mov
pop
push
ficomps
in
add
movsb
aad
mov
cmpsl
loope
push
jne
push
lods
pop
sbb
sbb
cmp
mov
mov
adc
jge
push
mov
stos
data16
mov
dec
jnp
sahf
fiaddl
xor
js
mov
pop
int
int3
loope
outsl
imul
je
cli
int
pusha
out
mov
fwait
addr16
xchg
lret
lea
fsubs
iret
scas
stos
push
cli
out
es
in
repz
sbb
dec
and
pop
add
inc
shrb
and
sub
pop
xchg
ret
loopne
ret
and
arpl
add
mov
pusha
sti
arpl
push
xchg
xor
repnz
inc
test
cmpsb
pop
adc
fnstsw
cmp
sub
loopne
lret
xchg
cmp
fdiv
shrl
and
sbb
ss
mov
fimuls
push
neg
cmp
pop
mov
inc
push
jge
out
aaa
cltd
das
mov
popf
xor
inc
outsb
jb
pop
jl
inc
mov
inc
cmp
pop
loop
push
roll
stc
inc
aam
adc
jae
push
xorb
mov
lods
scas
adc
jl
lea
sbb
sahf
rorl
jae
fmulp
shrb
aam
cli
imull
addb
xchg
or
loopne
mov
sahf
hlt
ds
push
cmpsl
sub
jl
insl
cltd
in
xchg
movsb
adc
inc
or
lret
mov
rolb
mov
fdivrl
add
shrl
in
enter
cmpsl
or
mov
outsl
std
fstpl
ja
or
roll
scas
aam
pop
int3
xor
sti
int3
leave
xor
cmpb
lock
imul
inc
push
addr16
jno
imul
fidivs
packsswb
inc
sbb
lods
into
popa
and
push
call
xlat
loope
negb
divl
mov
jge
sub
cmp
cwtl
pop
neg
lds
orb
int
xchg
sbb
stos
ret
jmp
mov
mov
lea
mov
out
lock
dec
imul
icebp
sbb
push
sub
xchg
sbb
cmp
jno
cmp
push
adc
mov
mov
ffree
or
dec
push
js
and
imul
inc
jo
jmp
cmp
inc
cmp
scas
int3
ret
pop
mov
cmpsb
dec
push
gs
popf
gs
sti
cld
add
or
loope
nop
mov
mov
fstl
shlb
call
and
xchg
push
dec
cmpsl
mov
das
pop
jo
imul
xchg
sbb
fdivrl
lods
inc
mov
repz
inc
insb
pop
outsl
int3
test
or
shlb
aas
scas
scas
sarb
aas
ret
mov
mov
ja
dec
cmp
sbb
adc
inc
inc
lret
xor
jmp
rorb
sub
mov
repnz
push
stos
xchg
fisttpl
cli
mov
bound
imul
mov
cmpsl
and
inc
shlb
hlt
enter
push
xor
mov
js
xchg
cmpsb
mov
pushf
popf
pop
dec
or
loopne
mov
aas
jnp
mov
stc
xchg
aad
aad
pop
jo
aaa
sub
loopne
addb
add
dec
scas
mov
rol
arpl
stos
and
insl
aad
pop
push
arpl
mov
inc
cmp
add
hlt
xchg
aad
lret
repnz
fldenv
outsb
pop
jl
pop
out
mov
dec
or
mov
dec
adc
int3
or
sub
mov
dec
mov
inc
inc
cmp
ret
ror
std
lret
int
imul
ss
mov
sbb
daa
mov
mov
mov
xorb
test
push
cs
outsl
repnz
imul
jg
fwait
ror
sbb
mov
pop
add
xorb
jne
xor
or
fiaddl
rolb
xchg
or
sub
and
cli
je
sub
insl
push
inc
sbb
imul
roll
dec
outsl
in
out
popf
iret
movl
fmuls
and
pushl
mov
pminsw
mov
aas
or
or
adc
adc
cli
fnstcw
aam
subl
lods
imul
arpl
or
daa
ds
scas
or
pop
pop
lcall
jecxz
push
in
jp
add
movl
out
imul
xlat
push
gs
push
pop
mov
or
dec
fidivrl
push
pop
mov
inc
or
dec
shlb
repnz
sbb
out
test
or
mov
pop
xor
xor
shlb
or
fucomip
push
push
or
insb
dec
jns
sahf
pop
ljmp
sbb
jp
lret
aam
es
fidivrs
cmp
pop
mov
mov
pushf
adc
sub
aas
push
push
and
mov
inc
jmp
mov
fsubrp
inc
sub
rcrl
push
add
lods
xor
pop
and
repz
rol
shl
test
or
pop
popf
lret
adc
or
xchg
cmp
fists
adc
andb
or
and
ret
dec
mov
cmpsb
add
mov
push
shl
fwait
shll
dec
inc
test
inc
loope
aad
aaa
jge
aaa
xor
add
add
jecxz
inc
mov
xor
lock
idiv
pusha
sahf
inc
xor
push
cli
cmp
cmc
push
dec
fdivr
je
push
pop
xchg
rcrl
mov
cmp
xchg
sbb
sti
inc
cmp
aas
jl
test
enter
and
xlat
pop
divb
aas
shl
adc
sub
rorl
cmp
popf
cld
shll
movsl
cwtl
mov
mov
push
int
loopne
jnp
pop
sar
add
cmpsl
or
mov
add
adc
sub
or
test
lods
dec
imull
daa
mov
mov
push
cmpsl
sub
push
push
mov
pop
dec
adc
mov
jbe
fiaddl
pop
adc
sbb
mov
enter
fadd
jge
bound
imul
push
push
xorl
fs
mov
inc
cld
or
outsb
mov
cld
xchg
out
out
jge
cmp
aaa
and
xlat
pop
fldl
lods
xor
dec
or
pop
cmp
cmp
pop
inc
lds
and
imul
daa
stos
xlat
aas
ds
inc
dec
mov
xchg
add
inc
fldt
push
stos
mov
jmp
push
sub
inc
pop
jecxz
in
push
mov
icebp
xor
icebp
sarb
iret
enter
cmp
notl
cs
or
and
sbb
cld
pop
call
test
sub
bnd
mov
sub
or
inc
enter
or
lret
leave
jb
out
cmc
xor
sbb
cmpl
mov
das
mov
or
mov
jns
push
lret
inc
movl
or
jl
jb
adc
pusha
std
push
sbb
jge
xor
test
stos
add
inc
test
aas
jg
cs
or
sbb
xlat
fnsave
arpl
xor
divb
cmp
scas
push
jl
aad
mov
and
ficoml
hlt
lret
pop
cmpl
js
push
loop
inc
leave
outsb
jb
push
negl
testb
push
jne
mov
sub
xchg
sbb
add
mov
pop
stos
call
lods
cmpsb
jno
insl
inc
adc
testl
mov
sbb
pop
push
nop
cmp
xchg
or
dec
bound
insl
pop
jecxz
addl
adc
xchg
push
sti
inc
shlb
xchg
andl
insl
outsl
xchg
sbbl
movsl
pmaxub
jne
cmp
cmc
jmp
mov
loop
add
push
faddp
clc
fcmovu
add
xor
mov
xor
cmp
mov
and
lcall
add
jns
outsl
jge
lods
cmpsl
lret
push
dec
aam
pop
into
cmc
jo
mov
inc
iret
ljmp
sarb
cmp
pop
push
int3
aas
int3
and
popf
les
and
cld
pop
mov
pop
push
es
bswap
imul
repz
mov
je
clc
loopne
orb
mov
popf
or
notb
add
popf
and
fistpll
cmpsb
leave
fwait
inc
xchg
push
sub
cmpsb
sbb
push
test
cmp
sbb
imul
mov
mov
and
repz
outsb
lea
adc
dec
xor
ret
imul
lea
mov
add
js
out
ljmp
nop
aad
bound
mov
js
cwtl
js
jge
jl
sbb
mov
push
int3
test
out
dec
hlt
push
mov
push
cli
vpmuludq
push
pop
and
call
mov
adc
aad
xorb
insl
add
add
xchg
or
pop
mov
or
add
je
ja
int
out
pop
idivl
and
std
pop
ja
lcall
fdivrl
int3
jle
leave
ds
movsb
int
xor
fwait
sarb
xchg
jmp
cmpsb
ficoml
cld
es
xchg
shlb
int
div
subl
cmpb
jg
repnz
sub
frstor
sub
jb
add
pop
and
mov
loop
repnz
sub
frstor
sub
jb
add
pop
and
mov
cli
idiv
sub
frstor
sub
jnp
push
insl
adc
dec
mov
push
lea
frstor
int
cmp
bound
push
pop
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
out
les
lret
cli
push
lods
fs
add
add
pop
add
add
add
pop
push
pop
add
dec
add
flds
adc
popa
add
filds
add
roll
push
add
dec
add
outsl
add
add
inc
add
out
add
add
out
add
leave
add
add
insb
add
add
add
add
add
add
add
add
add
flds
and
fadds
jnp
outsb
add
add
add
add
add
add
add
add
mov
add
in
flds
mov
or
add
add
add
add
add
sub
dec
add
add
jno
push
add
add
add
sbb
adc
inc
add
add
add
flds
les
pop
add
add
fadds
add
outsb
add
add
xchg
add
add
add
add
add
add
add
pop
add
pop
add
add
inc
add
add
in
inc
add
pop
add
add
das
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
insb
add
add
add
jb
pop
add
add
add
add
add
cmp
add
inc
add
add
add
add
add
add
add
xor
dec
add
push
addl
stos
add
add
add
add
xchg
add
add
leave
add
add
add
add
push
addl
push
pop
add
add
mov
add
incl
sbb
add
dec
add
add
add
dec
add
add
add
add
sub
add
and
add
pop
add
add
add
add
add
add
jb
and
add
add
add
add
flds
pop
add
add
rolb
or
mov
add
rolb
addl
cmp
mov
scas
add
add
add
add
add
add
add
add
sub
stc
add
add
add
dec
add
test
addl
addl
push
add
xor
cmp
roll
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
lret
add
mov
add
add
add
add
add
mov
mov
add
add
add
add
add
add
sbb
add
lret
add
add
add
pop
add
add
add
add
add
addl
pop
add
add
cmp
sbb
pop
add
add
pop
add
add
out
add
add
add
add
add
add
add
fwait
add
add
add
add
add
adc
rolb
or
sub
lea
loope
roll
addl
or
test
insb
add
add
add
add
add
add
mov
add
add
add
add
add
addr16
add
add
stc
add
add
add
ret
into
test
pop
out
imul
sbb
pop
cmp
mov
xchg
imul
imul
test
ds
jle
shrl
dec
jnp
xchg
sub
es
aad
repz
loope
inc
out
movsl
xchg
xchg
inc
or
pop
xchg
mov
out
aam
ds
xlat
std
mov
int
push
in
cmpsl
jns
ficomps
and
lcall
sub
xor
add
inc
in
xor
jno
push
out
xor
and
and
inc
mov
dec
mov
out
mov
fwait
add
fildll
and
mov
jl
push
jmp
add
mov
pop
loopne
jle
sbb
imul
imul
push
out
mov
stc
ret
bound
add
cmp
cli
cmp
lods
call
ds
das
cmc
cmp
fdivrs
pop
add
pop
sub
rcl
push
or
ljmp
jl
in
std
in
jnp
pop
nop
push
ret
subl
test
mov
insl
sub
dec
loope
fistpl
mov
sub
or
sbb
scas
sub
ret
mov
push
sub
mov
int3
lret
mov
scas
ds
xchg
sub
inc
movsl
mov
and
or
dec
loop,pn
test
xor
sbb
sub
push
pop
cltd
xor
mov
es
push
xchg
cwtl
aaa
fstl
stos
mov
dec
add
dec
inc
gs
mov
push
inc
push
pushf
pop
insb
jne
xchg
push
cmp
xor
and
xor
lcall
incl
sbb
cmpsl
pusha
add
or
xor
xor
cmp
mov
mov
popf
xorl
mov
aas
mov
arpl
rcll
into
push
or
pop
push
adc
inc
out
hlt
sub
jge
mov
enter
bound
mov
xchg
cltd
cmp
data16
out
lods
addb
ret
mov
cmpsb
cmp
je
leave
std
fildll
sub
mov
mov
push
daa
mov
or
cwtl
aas
repz
sub
jns
xchg
adc
aaa
mov
add
inc
aam
jne
fs
pushf
pushf
fnsave
mov
inc
mov
xor
inc
add
pop
and
push
or
mov
and
jg
arpl
xor
jno
je
cmp
lret
jnp
push
sahf
aaa
ret
jmp
sbb
jb
dec
dec
inc
ljmp
and
inc
roll
fs
add
fbld
inc
jl,pt
out
pop
inc
ja
outsb
int
jmp
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
