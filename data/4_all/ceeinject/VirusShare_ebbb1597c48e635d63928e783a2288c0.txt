call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jae
repz
ret
insl
sarl
inc
xchg
jle
or
jae
inc
in
push
std
and
adc
ret
jge
or
xchg
inc
arpl
jae
and
push
std
and
xor
jecxz
repz
ret
insl
sarl
or
xchg
cmp
and
pop
lret
jl
xchg
ds
add
xchg
sbb
mov
test
and
test
enter
es
loop
push
jle
mov
xchg
clc
mov
and
mov
sbb
ficomps
or
repnz
int3
pop
mov
cmpsl
add
out
arpl
lods
lods
popf
cwtl
repz
subb
add
jecxz
aas
sub
inc
xchg
ret
jae
mov
inc
imul
mov
nop
cmp
mov
sbb
adc
push
stc
jo
pop
popf
xchg
repz
push
cmp
jnp
push
js
fsubl
call
add
repz
ret
insl
sarl
or
xchg
cmp
inc
in
push
std
and
adc
xchg
dec
mov
scas
insl
popf
jge
push
imulb
mov
fsubrl
aaa
mov
jg
outsb
aam
repz
or
push
addl
xchg
movsb
cmp
inc
pushf
push
sti
or
xchg
or
adc
loop
mov
subl
fldl
push
std
and
adc
ret
insl
sarl
or
xchg
cmp
inc
in
push
std
and
adc
dec
addb
icebp
mov
sub
lods
push
cwtl
and
pop
sbb
xor
out
stc
popf
mov
shlb
xorb
dec
push
dec
shlb
xchg
mov
jmp
xor
in
and
add
mov
mov
xor
sub
scas
shlb
jecxz
mov
xchg
aaa
sti
push
inc
insl
dec
pop
jae
pop
rcrl
push
scas
fs
in
fsubs
jb
test
mov
test
push
mov
push
rolb
andb
pop
lahf
add
sbb
xorb
imul
ret
mov
fcmovnu
push
movsl
bound
and
cli
add
inc
arpl
scas
and
add
pop
and
scas
lock
xchg
inc
xchg
xchg
inc
lcall
pop
ljmp
mov
pushf
xlat
dec
cli
es
cmp
adc
or
addr16
pop
inc
push
lret
shlb
stos
mov
fistl
and
fwait
lahf
sbb
cwtl
xchg
out
in
or
pop
outsb
clc
incl
rolb
add
in
clc
mov
sbbl
test
orl
add
pushf
hlt
arpl
pop
fisubrl
mov
in
mov
sbb
aad
int
jbe
or
pushl
xchg
test
push
int3
enter
scas
testb
out
out
decl
scas
es
loope
and
push
enter
mov
je
fs
pop
jnp
xchg
push
movsl
loopne
imull
mov
mov
xchg
xchg
sbb
sub
add
in
rclb
cmp
xlat
jg
jl
test
dec
jno
sbb
leave
out
xchg
std
in
and
xor
stos
adc
leave
sti
out
lds
into
cltd
hlt
cmpl
mov
fmull
mov
popa
inc
mov
das
ss
mov
jmp
pop
js
mov
xchg
movsl
ja
xchg
test
sub
xor
cld
pop
aam
mov
divb
pop
jns
jno
sarl
xchg
insb
into
jp
dec
dec
inc
jnp
outsl
jns
cmpsl
ret
fistpl
mov
sub
shlb
push
fwait
cmpb
push
jae
mov
mov
jmp
shll
insl
add
aas
add
scas
xchg
push
cmp
mov
fcmovnb
nop
lcall
inc
adc
inc
inc
je
inc
cmp
dec
mov
inc
adc
adc
sbb
jp
cwtl
mov
divb
aas
mov
ljmp
sub
sub
push
jno
push
jmp
ja
mov
xlat
xchg
xor
ss
bound
sarb
mov
ds
push
push
gs
insl
sbb
sub
jae
in
jp
inc
dec
icebp
dec
shlb
pusha
imul
xchg
test
stos
fiadds
adcb
add
push
adc
jle
iret
mov
pushf
xchg
aam
pop
mov
jg
pop
add
outsl
jb
repnz
loope
lods
negl
mov
mov
cld
mov
imul
adc
in
cmpsb
add
adc
mov
sbb
aad
adc
cmpsb
inc
das
pop
int
pop
rorb
int
aam
nop
clc
insl
test
mov
mov
aas
cmp
add
xchg
adc
push
hlt
icebp
cmpsl
jae
arpl
add
fldl
xchg
pop
scas
and
testb
iret
outsb
fs
in
and
mov
mov
aaa
mov
sbb
mov
sti
jnp
sahf
jge
dec
push
fcmovb
xor
stc
push
jmp
incl
inc
cmpsb
out
cmp
cmp
pushf
or
fistpll
mov
sti
je
push
cmp
or
mov
data16
cld
ljmp
xchg
cltd
clc
xor
jecxz
mov
out
hlt
or
sbb
aas
ss
jl,pn
jns
cmc
jmp
add
pop
mov
sub
mov
je
adc
insb
mov
sbb
inc
xchg
jnp
mov
or
hlt
bound
fcomps
data16
inc
int
notl
inc
cmp
jbe
sub
das
mov
outsl
jne
adc
movsl
lret
js
jp
mov
adc
out
test
xchg
cmpl
call
in
pop
xchg
inc
fwait
imul
cmp
bound
inc
mov
cli
add
xlat
lcall
mov
mov
and
jb
cmp
cmp
movsb
mov
dec
pop
enter
imul
hlt
cmp
roll
ljmp
pop
cli
insl
jge
stc
jne
inc
lods
dec
mov
std
movsb
fcmove
leave
xlat
or
mov
inc
out
pop
jne
rorb
add
add
lea
test
cli
outsl
ret
push
inc
inc
outsl
dec
add
icebp
adc
call
cmpsl
das
xor
scas
xchg
sub
adc
les
ret
mov
mov
lods
sub
dec
loope
sbb
in
sarb
cmpsl
xchg
jecxz
dec
sbb
lahf
and
and
fwait
and
icebp
outsb
push
dec
insb
sti
push
push
cmp
mov
pushf
stos
jnp
add
ljmp
pop
shl
mov
push
in
mov
or
adc
jbe
xor
lcall
xchg
lahf
je
jl
fnsave
mov
push
imul
mov
mov
mov
cmc
icebp
add
mov
pop
shlb
fucomi
cltd
jge
jge
lods
ret
add
mov
add
xchg
inc
adc
arpl
dec
or
mov
sub
dec
jns
ds
les
jg
test
sub
cwtl
test
fbstp
je
gs
stos
cltd
xlat
cmp
in
inc
stos
sub
or
mov
or
fcmovnbe
cli
shlb
mov
sub
mov
ss
cmpsb
mov
cmc
rolb
les
cltd
popf
ret
in
dec
mov
and
icebp
jno
in
cmpl
mov
cmovne
push
jl
cld
and
shrl
inc
add
gs
aad
jp
fnstsw
mov
cmp
add
lcall
outsl
cli
xlat
jmp
mov
add
outsb
dec
adc
or
orl
or
das
subl
dec
int
dec
sahf
inc
and
movsb
clc
lods
and
and
rorl
inc
push
scas
cs
dec
call
fstps
adc
test
js
push
pop
es
jge
iret
arpl
xchg
xchg
into
dec
cltd
shll
aaa
add
sbb
xchg
push
xchg
lahf
test
pop
or
je
cmp
imul
adc
popf
cmpsl
sbb
shlb
sti
mov
sbb
stc
les
daa
sbb
ret
jge
adc
fs
dec
jne
aaa
xchg
and
orb
add
cli
andb
aam
xor
jnp
mulb
data16
lahf
cmc
stos
test
xchg
adc
jbe
pop
sbb
push
lods
xchg
and
cld
cmp
sbb
add
mov
mov
in
pop
fnstsw
pop
je
ds
aad
mov
sub
sbb
push
sti
pop
insb
sahf
es
sbb
movsb
push
loop
pop
jnp
cmp
xor
jmp
add
leave
or
arpl
in
pop
xor
and
shll
mov
setle
lds
out
insb
in
add
jae
jg
add
stc
arpl
in
sub
xchg
or
inc
mov
cs
out
in
push
stos
int3
aas
cmpsl
xor
gs
jmp
xchg
in
mov
pop
pop
push
jl
sbbb
stos
xchg
leave
stos
jnp
cmp
sahf
xor
das
jbe
nop
adc
gs
xchg
cmp
cmpsl
data16
xchg
mov
popf
add
les
loopne
push
xchg
leave
test
mov
jp
jge
mov
mov
and
adc
mov
xlat
scas
xchg
sarb
adcb
pop
sub
mov
inc
out
andb
inc
or
cmp
sbb
mov
push
or
add
lea
jle
test
movsb
pop
fxch
xor
mov
mov
jno
imul
adc
dec
mov
icebp
fidivrs
mulb
js
cltd
mov
cli
sahf
vmovshdup
xchg
aas
or
into
xchg
cld
in
mov
pop
cmp
and
or
sahf
push
pusha
jbe
mov
sub
in
cmp
dec
cmp
setbe
sahf
call
xchg
mov
loope
pop
icebp
fidivrl
cli
pop
inc
xchg
scas
pop
ljmp
xor
mov
lods
es
rorl
ds
sub
or
pushf
outsl
in
div
adc
popa
jnp
aas
in
cmp
or
pop
lods
jle
inc
or
popa
dec
dec
inc
imul
mov
ficoms
lods
push
mov
repz
into
cltd
and
jge
leave
jb
pop
xor
dec
pusha
hlt
out
push
adc
sahf
sub
dec
enter
jne
fadds
in
mov
hlt
xchg
and
adc
push
or
xor
ds
mov
xchg
and
mov
out
iret
adc
ret
mov
rclb
in
orl
dec
pop
pusha
jg
add
ss
xor
dec
jo
xchg
push
jp
movsl
mov
pop
jbe
int
jl
test
xchg
sub
and
mov
rorl
movsb
mov
aad
ja
test
insb
cmp
adc
movsb
icebp
dec
sub
popf
xor
mov
stos
and
add
aam
out
push
jmp
mov
or
pop
jno
jae
mov
mov
les
cmc
pop
and
dec
imul
iret
mov
and
adcb
xchg
xor
stos
mov
pop
lret
add
pop
and
mov
test
in
add
ja
jo
fldt
push
mov
inc
inc
mov
or
cmp
insb
arpl
sbb
das
mov
cmp
outsb
sub
bound
loop
xchg
adc
cli
push
adc
pop
mov
cmp
icebp
push
rcl
inc
mov
dec
pop
xchg
pop
mov
je
mov
in
data16
xchg
or
cmp
ljmp
jne
fisttpll
mov
pop
lret
mov
lret
jmp
and
dec
xchg
and
or
mov
pop
mov
lret
xchg
stos
xchg
les
scas
stos
mov
or
add
roll
add
stos
scas
orl
xchg
fdivl
push
cltd
push
mov
sbb
push
aam
arpl
push
hlt
outsl
fldl
xchg
mov
daa
dec
adc
in
shrb
pop
int
aam
and
pop
int
aam
sub
shlb
xor
lods
cli
cmp
icebp
ret
addr16
push
fcoms
pop
decl
jmp
mov
adc
xchg
mov
loopne
sbb
dec
mov
lea
push
popf
and
sbbb
sbb
and
jecxz
adc
jae
and
and
int3
das
adc
pop
mov
push
inc
inc
and
and
jmp
adc
mov
mov
in
rol
cmp
push
mov
out
mov
lea
inc
or
cmp
fisttpll
mov
clc
xchg
pushf
mov
mov
je
pusha
adc
cmp
jp
mov
out
les
dec
or
adc
daa
movsb
inc
jns
jge
mov
aam
xor
dec
enter
in
out
orb
adc
mov
bound
dec
lea
mov
push
sti
xlat
stos
int3
fwait
enter
imul
sbb
cmp
mulb
mov
das
out
lods
stos
jnp
or
sbb
or
and
pop
dec
cmc
jg
adc
lock
mov
sbb
mull
daa
mov
pop
lcall
shlb
xor
sub
dec
mov
jbe
adc
orb
in
sarb
push
js
cmp
mov
push
sbb
test
mov
mov
insl
je
and
scas
inc
lock
cmp
cmp
sub
cmp
sarl
or
scas
inc
pop
test
mov
mov
pop
xchg
push
xor
add
mov
enter
push
shl
push
pop
arpl
int
in
sub
movl
push
in
mov
loop
sub
mov
ss
loopne
mov
and
stc
mov
ret
sbb
test
jb
out
outsb
mov
or
xor
jecxz
jmp
and
xor
pop
int3
dec
fisttpl
sbb
ljmp
jmp
jnp
repnz
fisubl
je
dec
lods
and
arpl
xor
outsb
cmpsb
mov
add
pop
push
jle
rcl
stc
pushl
repnz
sbb
outsl
adc
and
in
cwtl
xchg
cmpsl
test
jecxz
test
subl
sahf
jg
mov
mov
sub
adc
adc
mov
inc
iret
xor
jmp
cmp
fwait
or
jns
test
enter
stos
pop
cltd
and
repz
js
test
adc
mov
push
mov
and
pop
mov
adc
les
and
jg
out
sbb
insb
and
loop
cld
adc
shrb
aad
adc
je
jle
inc
push
test
pusha
inc
data16
or
mov
cmp
movsb
addr16
es
ljmp
mov
test
sub
ds
fwait
sti
adc
pop
inc
inc
scas
pop
vphadddq
xlat
xchg
test
xchg
cld
inc
fwait
pop
mov
or
aaa
sbb
movsb
imul
lea
add
aaa
fcomps
fdivrs
scas
cmp
into
pusha
ror
adc
xchg
sbb
daa
mov
inc
sti
jne
xor
cli
xchg
outsb
cltd
push
inc
xchg
or
ss
loope
dec
les
xchg
gs
or
or
and
sarb
inc
stos
int
test
lret
add
fbstp
xlat
imul
pop
xchg
in
add
int3
adc
test
mov
mov
cmp
pop
adc
jmp
cwtl
mov
cli
pop
aam
test
mov
movsb
push
out
cmpsb
nop
lods
add
movsl
not
ljmp
sbb
insb
stos
xor
arpl
mov
xchg
pop
xchg
mov
outsb
adc
sub
int
push
fidivrl
xor
push
and
mov
cltd
mov
or
mov
jle
hlt
add
subl
pop
dec
dec
testl
xor
push
mov
rol
and
clc
jmp
mov
sub
xchg
jno
sub
or
pusha
ffreep
js
loopne
bound
cli
fistpll
popa
fbld
daa
jp
cmp
stos
mov
mov
or
faddl
je
adc
jl
aaa
xchg
and
add
jns
out
nop
loope
mov
sbb
inc
out
into
iret
lcall
jbe
sub
js
mov
adc
sub
insb
je
mov
ja
push
dec
jne
push
mov
pop
pop
out
inc
cwtl
fdivrs
sbb
inc
pop
jmp
jae
imul
push
xchg
inc
mov
mov
shr
sahf
lock
xchg
adc
out
out
push
mov
in
test
je
lods
scas
add
imul
mov
into
push
addb
fsubs
rcrl
mov
into
orl
xchg
das
daa
and
add
lahf
pushf
sbb
push
mov
mov
sub
add
inc
sub
in
xchg
or
add
icebp
orb
insl
andb
xchg
fstps
fisttps
es
inc
outsb
pop
or
pop
and
push
inc
or
mov
pop
gs
cmpb
ljmp
mov
fsubp
jp
pushf
xchg
mov
aam
sub
push
pop
inc
leave
cltd
int
jb
push
int3
cmp
loope
jb
sub
fisttps
or
mov
les
lret
lcall
jb
aad
test
and
and
pop
addr16
clc
aam
jp
sar
stc
int
dec
and
outsl
pop
and
adc
xor
orl
sbb
jp
pop
subl
and
mov
mov
pop
xor
jl
call
mov
in
aad
sbb
xchg
add
xchg
pop
add
lea
sahf
iret
inc
cmc
mulb
es
aaa
xchg
lods
dec
push
int
mov
lea
jmp
das
mul
cmp
ret
inc
jno
xor
or
add
sub
popf
jno
cmpsb
sbb
add
ljmp
testl
sbb
sub
scas
and
push
cli
loope
loopne
pop
mov
and
mov
and
std
enter
xor
add
push
inc
jle
clc
sub
and
xor
push
jbe
push
fcmovnb
sahf
jo
pop
fwait
add
enter
clc
addb
ficompl
mov
dec
or
jle
mulb
cmpsl
adc
jmp
ss
xchg
fidivs
clc
xchg
fucom
inc
inc
pop
ss
mov
in
repnz
jecxz
cwtl
nop
cs
inc
push
imul
rorl
inc
xor
mov
jg
and
lcall
sub
jno
mov
call
jb
add
aad
into
adc
mov
sahf
and
mov
adc
sub
inc
repnz
mov
repz
mov
mov
mov
and
mov
fs
sbbl
xchg
ja
jg
pushf
ds
jno
test
fdivr
jns
and
mov
inc
and
or
adcb
jmp
cmpb
arpl
xchg
pop
xlat
outsl
jp
cmp
jae
cmp
mov
shlb
push
lcall
cld
les
sub
jae
aas
or
sub
sbbb
xorl
mov
xchg
sbb
pop
mov
push
xchg
jnp
or
out
sahf
adc
repz
je
push
adc
xor
pop
out
outsb
icebp
sub
add
cmpsb
sbb
dec
mov
fs
pop
mov
fisubrl
push
int3
test
clc
jle
repz
das
ja
jmp
lods
sbb
ret
call
sub
push
pop
mov
xchg
inc
push
decl
sub
movsb
xchg
scas
mov
dec
inc
pop
adcl
iret
push
jge
lcall
fucom
ljmp
push
mov
cmp
insl
pop
push
sti
mov
push
and
push
xor
add
xchg
xchg
mov
arpl
or
pop
jmp
dec
xchg
adc
cmpl
cld
leave
stc
incl
mov
aaa
jb
push
imul
ds
aaa
cmc
push
xlat
jge
sbb
dec
mov
in
out
pop
cld
ficomps
pop
fstl
outsb
pop
sbb
push
cmp
fs
hlt
in
jmp
sbb
in
mov
or
sbb
jno
fisubrs
aam
fdivr
bnd
mov
dec
test
sahf
mov
lret
sub
ret
or
movsb
or
xor
fmuls
push
add
mov
inc
lret
cli
add
es
mov
xchg
ds
jo
dec
lods
enter
jbe
xchg
dec
xor
pop
nop
ficoms
pop
sbb
sbb
mov
add
outsl
mov
cs
std
push
sbb
mov
mov
dec
ss
pop
mov
es
xchg
addr16
xchg
adc
out
popa
sbb
iret
push
jle
lret
pop
or
jne
mov
fcomi
inc
fwait
ss
push
shrb
dec
call
ficoml
clc
fstpt
add
xchg
add
adc
jp
cmp
dec
inc
inc
adc
lcall
and
cli
dec
jp
sbb
stos
stos
dec
or
and
sbb
lea
clc
push
cmpsl
and
imul
loop
ljmp
clc
or
insl
sarl
or
xchg
cmp
inc
in
push
std
and
adc
ret
insl
sarl
or
xchg
cmp
inc
in
push
std
and
adc
ret
insl
sarl
or
xchg
cmp
inc
in
push
std
and
adc
ret
jge
or
xchg
cmp
jmp
add
in
inc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jo
pusha
popf
push
in
inc
std
test
cltd
icebp
mov
push
rcrb
jge
or
cmp
push
in
inc
std
xor
add
shlb
jge
and
cmp
dec
ja
mov
mov
add
or
cmpxchg
jnp
pop
xlat
pop
sbb
ss
arpl
jl
sbb
mov
shlb
push
sub
and
xchg
push
xchg
inc
jne
leave
mov
loopne
mov
nop
cmpsb
jg
movsl
pushf
test
popa
movsb
fs
pop
shl
dec
pop
dec
call
pop
loope
stc
cmp
int
fstpl
cltd
and
jnp
loope
in
aas
jl
sbb
inc
and
in
and
adc
pushf
pop
insb
lock
lock
es
lea
lea
mov
mov
xor
sub
jecxz
or
mov
repz
nop
roll
push
cltd
inc
std
daa
lea
popf
adc
clc
cmc
enter
test
mov
nop
add
xchg
inc
sub
pop
fadds
cli
lock
mov
mov
lds
pop
in
push
pop
mov
fwait
aas
sahf
xor
adc
push
mov
aas
orl
dec
in
adc
subl
popf
adc
loopne
shrb
jge
or
cmpb
in
inc
std
xor
add
shrb
jge
or
cmpb
nop
xor
pop
ljmp
roll
mov
jmp
fdivs
sub
mov
sbb
or
lods
test
jg
adc
mov
dec
in
and
fs
fld
stos
mov
sbb
pop
fs
int
negb
das
mov
into
mov
sbb
iret
movb
pop
es
dec
addr16
mov
cs
scas
dec
repnz
int
and
insb
push
xor
fs
iret
add
shlb
mov
out
and
add
enter
and
adc
test
xchg
outsl
insl
loopne
loopne
leave
stc
ja
loop
cmp
mov
cmp
push
arpl
fisubrl
sbb
adcb
or
push
mov
sbb
cmp
lret
pop
lods
cmc
test
movsb
pop
dec
arpl
iret
jle
jp
cmp
or
jp
loope
aad
int
idivb
cmp
in
je
or
mov
add
adc
dec
rcrb
push
xchg
mov
leave
sbb
and
sarb
lock
cltd
sbb
icebp
mov
das
bound
rcr
mov
scas
or
cmc
dec
jbe
push
mov
notl
xor
mov
dec
jg
mov
repz
aaa
mov
xor
int3
xor
adc
lds
push
cld
test
fwait
inc
xor
hlt
cmp
jge
outsl
and
fcmovnbe
mov
fcomp
leave
dec
sub
int3
push
jg
fnstsw
ss
scas
push
rcrb
add
push
popa
rcl
pusha
push
jmp
pextrw
test
jmp
xchg
inc
pop
cmp
add
cmpsl
add
scas
fucomi
adc
dec
loop
push
out
pop
mov
push
pop
inc
in
jle
fistps
inc
in
pusha
cwtl
das
adc
sti
loop
and
repz
mov
dec
cmp
bound
pop
xlat
ljmp
outsl
dec
or
jmp
pop
dec
int
jo
cwtl
mov
xchg
mov
dec
and
mov
addl
int3
bound
bound
sbb
sbb
ret
stc
mov
mov
add
jmp
xchg
adcb
enter
jge
lret
insl
and
outsb
fadd
cmp
cmc
fbld
add
dec
mov
xchg
fldcw
lods
jmp
or
cli
testl
scas
aad
sbb
adc
cltd
sarb
adc
dec
repz
xor
mov
dec
movsl
or
pushf
jg
jp
cmpsb
les
negl
sbb
mov
cwtl
scas
jg
xchg
call
cmp
test
fnstenv
sbb
xchg
sarb
sub
and
andl
cmpsl
mov
xor
pop
test
add
mov
inc
and
clc
cmc
lcall
test
and
or
adc
adcb
fildll
jge
xchg
movsl
adc
int
fcoml
pop
dec
ret
in
xchg
repz
mov
push
subb
push
xlat
jge
sti
imul
and
inc
push
aaa
imul
addr16
jp
imul
pushf
hlt
or
inc
xor
cltd
add
call
jns
movl
push
add
pop
icebp
push
fldcw
push
shl
or
std
mov
adc
mov
out
and
dec
or
aas
test
jbe
jge
xchg
xchg
lds
std
sti
or
ljmp
out
rorb
in
push
push
sbb
outsl
orl
nop
and
nop
sub
inc
mov
adc
jns
xor
dec
and
jge
push
dec
or
dec
mov
xchg
add
insl
pop
xchg
lret
gs
adc
dec
add
cmp
fildll
add
test
rclb
ret
mov
sub
inc
dec
stos
or
dec
pushf
imul
or
bound
mov
lds
neg
sbb
fisttpll
mov
insl
and
dec
mov
movsb
jbe
ret
dec
ficompl
sub
mov
fsubrp
mov
notb
stos
pop
ret
mov
inc
push
cmpsl
hlt
mov
rol
and
mov
push
dec
scas
stos
push
xchg
insl
add
test
mov
jmp
mov
and
pop
inc
push
rolb
iret
sbb
sahf
inc
in
jne
mov
mov
incl
std
movsb
sbb
xchg
stc
jmp
add
pop
fwait
push
movsb
lods
imul
jae
xor
test
jb
push
jl
dec
sarl
sbb
das
lret
xor
pop
movsl
out
adc
push
xchg
push
mov
cmp
mov
fstl
sbb
jns
and
cmp
iret
data16
add
cmp
cwtl
add
mov
push
pop
sbb
js
adc
shl
push
iret
pop
gs
sbb
int
fcmovbe
mov
xchg
stos
push
jnp
mov
push
notrack
aam
mov
imul
stos
xor
jge
mov
sbbl
orl
jmp
test
ss
jle
in
push
jecxz
adc
jl
pop
inc
pop
dec
ret
stc
or
mov
pusha
arpl
adc
sub
mov
jae
out
add
out
dec
inc
and
aam
dec
call
fnstenv
cli
cmp
sahf
lds
push
adc
mov
sbb
jge
fmuls
and
sahf
iret
xor
adc
or
xlat
cld
push
sub
std
loope
fiadds
or
das
xor
sub
inc
push
cmp
shll
outsb
iret
inc
shrl
mov
mov
or
sub
mov
push
adc
push
mov
aas
shlb
scas
js
mov
je
mov
xchg
insb
jmp
cli
or
add
xchg
in
push
test
xor
out
fldenv
call
repz
pusha
add
push
mov
push
hlt
mov
sub
dec
adc
aas
xor
xor
mov
push
adc
cvtpi2ps
adc
lock
sti
sbb
aad
add
or
mov
and
and
and
ljmp
sbb
lea
jnp
stos
adc
gs
popf
test
ss
mov
xor
adcl
inc
adc
pop
ret
sarl
mov
jb
cmp
out
or
xchg
cs
adc
push
mov
cmpb
xchg
out
jnp
inc
lret
and
fsts
jb
add
xor
and
dec
orps
mov
ret
cld
inc
arpl
jb
add
in
mov
push
pop
push
popa
inc
adc
sub
mov
out
mov
rcrl
inc
lock
cmpsl
and
mov
cld
xchg
sub
mov
into
pop
into
mov
cld
dec
pop
imul
popf
cmp
jmp
pop
cmpsb
loop
sbb
leave
push
addr16
lret
inc
dec
jno
push
pop
or
sub
sbb
add
popf
popf
cmp
das
jge
pusha
js
stc
inc
sub
sbb
push
lods
pushf
sbb
push
jle
lret
xlat
pusha
ret
frstor
mov
pop
mov
mov
inc
inc
mov
and
or
add
fisttpll
fisubs
sub
or
sub
mov
or
daa
sbb
inc
cmp
push
sbb
push
or
adc
sar
lds
pop
mov
dec
mov
hlt
or
mov
out
mov
pop
push
cmp
cmp
out
aas
int3
pop
jbe
inc
aad
in
adc
loopne
xlat
cli
dec
and
cld
push
cmp
sbb
leave
push
lret
in
das
js
and
lss
sbb
ja
mov
xchg
enter
sahf
xchg
or
jne
add
scas
ret
jmp
sub
jge
jb
jecxz
lods
rol
pusha
mov
ret
add
sub
int3
xor
scas
xor
xor
cld
js
test
push
lods
mov
lcall
enter
pop
popf
sbb
imul
sbb
sub
push
jnp
dec
push
mov
stos
adc
sbb
test
cmpsl
push
pop
mov
pop
push
jp
cmp
inc
out
mov
push
loope
xchg
and
or
cmp
or
repz
insl
xor
nop
jbe
in
nop
insb
rcll
dec
cmp
imul
pop
xchg
add
inc
imul
es
mov
xor
dec
in
and
mov
ja
jp
or
cmc
push
lret
xchg
pop
add
push
popf
enter
fisttpl
movsb
and
dec
std
das
in
in
cmpsb
inc
add
shrl
mov
stos
js
jns
test
sbb
push
out
cmpsl
cmpsb
test
arpl
pop
popa
adc
mov
or
mov
mov
sti
sub
mov
adc
push
mov
push
xchg
cmp
int
xchg
xchg
or
jge
fnstenv
movsb
sub
xlat
orl
jns
fdivrl
mov
scas
jle
jno
xchg
push
add
fistpl
gs
sbb
pop
orb
mov
daa
inc
les
xor
lock
cmp
push
adc
outsb
cmpsl
push
nop
in
add
cltd
aas
movsl
dec
aam
mov
and
test
xchg
jnp
out
lods
jbe
adc
jp
sbb
inc
adc
rorb
cld
enter
fdivrs
mov
in
xchg
sub
dec
xchg
xchg
jp
mov
jecxz
or
out
pop
je
cltd
mov
mov
test
fsts
std
jle
shr
xor
adc
xchg
int
mov
in
inc
popf
push
or
sbb
outsb
sbb
and
rclb
sub
aaa
and
aad
cmp
in
xchg
rcrb
dec
insb
push
or
push
cmp
ja
popa
loop
int3
stos
and
pop
push
pushl
sbb
lods
fildl
sbb
lods
shlb
adc
out
lcall
das
add
and
ja
and
filds
pusha
inc
xchg
dec
popf
loope
inc
mov
cmc
xchg
roll
mov
mov
ds
mov
cmpsb
je
mov
xchg
cmc
inc
pop
mov
in
lret
cltd
inc
xlat
xchg
mov
icebp
push
js
hlt
cltd
jne
gs
iret
dec
addr16
mov
jo
and
sbb
push
or
scas
inc
xor
jp
push
stos
insb
cmpsl
insb
sub
cmp
lcall
cld
add
xchg
mov
sub
add
or
enter
cmp
mov
test
not
je
push
notl
pop
cmp
xlat
enter
pop
jge
ret
push
adc
jl
jo
mov
xchg
push
and
stos
or
leave
pop
or
sbb
cmp
cmp
fdiv
mov
enter
adc
mov
insb
dec
sbbl
int
pop
scas
pop
cmp
dec
xchg
cmp
pop
dec
jg
mov
jbe
jmp
pop
inc
sub
insl
fwait
das
pop
jne
out
das
mov
mov
jns
mov
or
jl
sbb
inc
cmp
pop
in
in
xor
dec
nop
test
pop
cmp
cmp
push
adc
xor
fistpll
adc
popa
sub
test
arpl
mov
sti
stos
xorb
movsl
shrb
shl
outsl
add
rcl
push
in
pop
out
stos
push
js
ja
jge
pop
dec
jns
aaa
out
mov
stos
cmp
daa
rolb
iret
mov
lods
add
shrb
aad
mov
in
sub
icebp
out
pop
into
insl
pop
bound
negl
into
imul
inc
sbb
xchg
loope
dec
and
jecxz
mov
xlat
xlat
loop
rol
or
lea
jae
inc
imul
push
and
xchg
mov
dec
jns
add
adc
mov
comiss
adc
inc
xor
bswap
pushf
flds
jb
ss
popf
xchg
add
jg
or
mov
mov
scas
mov
aaa
inc
in
call
sbb
cli
ljmp
jecxz
jns
loope
lds
or
into
cmp
loop
add
inc
jl
imul
mov
adc
inc
mov
ds
enter
in
int
or
mov
jecxz
sbb
sahf
fdivr
inc
push
mov
loopne
dec
jge
mov
cwtl
scas
mov
icebp
mov
cmp
fisubs
jbe
xchg
gs
sbb
inc
icebp
outsb
xchg
ds
xchg
insb
sub
add
js
cli
bound
add
roll
mov
mov
cs
jae
adc
mov
sub
cmpsl
xchg
int
xchg
pminsw
scas
mov
mov
adc
lods
push
add
jbe
outsl
mov
int3
mov
lret
jb
ja
lods
pusha
ljmp
insb
in
dec
mov
mov
out
push
data16
and
outsb
pop
movsb
jbe
dec
lods
xchg
mov
push
lcall
into
js
xor
call
in
or
cmp
scas
sub
rcl
sbb
cmp
dec
inc
ret
or
dec
mov
sbb
mov
jl
xchg
jo
jno
mov
fwait
mov
leave
mov
pop
cmp
inc
pop
xchg
mov
dec
push
mov
repz
mull
cs
nop
lock
push
sbb
or
cltd
and
lds
mov
adc
pop
rcll
fcmovnbe
shl
mov
lods
sbb
pop
mov
pop
jo
mov
cwtl
leave
inc
mov
cmpsl
popf
arpl
mov
sbb
pop
mov
rcll
mov
sahf
aam
mov
mov
lds
inc
cmp
rcll
jge
add
shlb
cmpsl
fnstsw
push
inc
add
and
cmp
sub
jge
lds
repnz
xchg
push
in
movsl
adc
mov
push
into
mov
xor
rorl
pop
dec
sbbb
sub
mov
pop
push
cmp
fsubrl
arpl
pushf
jecxz
jnp
repz
xor
js
cmc
dec
xor
test
inc
divl
and
aad
or
call
mov
insl
mov
mov
sbb
ja
imul
insl
lcall
jno
xchg
sbb
sub
pop
and
jge
add
sbb
xchg
iret
add
sti
mov
adc
push
inc
add
xchg
popf
adc
test
mov
push
lods
out
pop
popf
out
lret
mov
movsl
scas
jecxz
pushf
in
push
cmp
or
xchg
jnp
stc
out
pusha
xchg
in
pop
and
mov
jmp
addr16
push
or
andb
dec
cltd
xchg
stos
dec
add
xchg
jp
sub
cli
sbb
stos
and
imul
ljmp
adc
rolb
js
xchg
push
scas
popf
fcmovbe
xchg
fldt
push
inc
icebp
xchg
add
mov
fcompl
repz
hlt
std
pushf
push
inc
sub
jne
xor
sbb
sub
mov
fcmovnu
push
call
pusha
mull
sub
and
and
test
into
adc
xlat
dec
xchg
loop
les
push
inc
mov
dec
and
inc
jae
mov
ficomps
pop
pop
cmp
mov
sbb
jmp
xor
sbb
out
push
push
popa
test
dec
fsubrl
mov
pop
fstpl
lahf
mov
mov
rcl
sarb
ds
sbb
push
cli
add
and
cmp
xlat
pop
adc
insl
out
mov
jns
int3
sbb
add
or
push
cmc
fisttps
jge
pop
fnstcw
test
aas
mov
adc
jle
mov
mov
jo
std
xchg
movsb
mov
jecxz
xchg
cmpsb
int3
pusha
int
psubb
outsb
lahf
xor
push
ret
ss
xchg
push
ljmp
pop
ja
cld
std
popf
call
pop
jae
lret
mov
pop
mov
or
ss
ds
aam
push
addr16
lods
pop
inc
das
dec
push
mov
push
into
add
rclb
rcrb
ret
push
in
arpl
sub
arpl
xchg
rcrl
loop
cmp
out
cs
xchg
xchg
add
mov
sub
outsl
push
mov
inc
das
lcall
pop
mov
aaa
add
cmpsl
int
add
rsm
pop
inc
jp
sbb
sbb
xor
mov
dec
cmc
and
mov
inc
js
push
inc
mov
cltd
pop
inc
mov
and
pushf
xchg
cmpsb
insb
fwait
int3
js
mov
jg
lcall
out
pop
cmp
mov
inc
and
mov
les
cmp
sub
out
xlat
lods
outsl
adc
sbb
jmp
push
push
aam
rol
imul
push
jl
pop
jle
mov
adc
and
test
adc
mov
inc
pop
pop
mov
ret
fistps
mov
jecxz
std
leave
mov
xor
fbstp
sbb
sbb
in
sub
add
scas
pop
xchg
push
movsl
ret
addb
popf
fadds
sti
jne
dec
out
jmp
sub
ror
jnp
test
enter
addr16
out
call
add
je
jbe
cwtl
sbb
cld
push
cld
add
stos
movsb
in
scas
dec
mov
adc
lahf
shrl
js
dec
lret
or
mov
or
shr
jnp
lock
cmpsl
xchg
lods
jg
mov
cmp
les
or
push
inc
xor
sub
inc
imul
push
sub
adc
and
xchg
scas
cltd
xor
popf
sbbl
xchg
mov
addb
xor
mov
jecxz
mov
clc
push
jl
fmul
addl
inc
inc
test
jae
sbb
jo
test
fsubs
dec
mov
dec
inc
push
hlt
in
inc
popf
adc
js
xor
test
mov
sub
insb
lahf
ds
bound
mov
in
cwtl
insb
lods
or
xchg
xlat
push
in
int
lods
fnstenv
lahf
and
addr16
push
mov
insl
ljmp
push
out
fidivrs
dec
sbb
shlb
loop
jns
rclb
lahf
pop
cmp
xor
cld
lea
xchg
push
mov
cltd
test
rolb
les
roll
push
fbld
repnz
lahf
mov
mov
dec
mov
es
mov
dec
int3
scas
test
btr
mulps
daa
or
and
sub
lret
inc
out
sub
push
xchg
and
or
shl
mov
pusha
mov
pop
gs
les
out
repz
outsb
and
jle
loope
out
jnp
leave
pop
addr16
and
in
xlat
fxch
cmc
mov
mov
cmpsl
mov
add
ds
stos
cmp
cli
faddl
pop
add
lret
push
jle
adc
rcl
push
jp
dec
mov
rcrb
cmp
cmp
add
lds
enter
out
mov
js
aaa
push
fnstcw
cmp
push
dec
mov
ljmp
mov
aas
loope
xor
mov
mov
rorl
mov
inc
out
sbb
xchg
mul
sub
dec
mov
out
xor
sbb
int
xchg
inc
jl
mov
xchg
and
ret
ficomps
flds
dec
mov
loopne
arpl
pop
pushf
test
fildl
mov
jno
les
sub
fwait
stos
push
into
dec
mov
mov
mov
cmc
out
test
ret
or
sbb
jne
ljmp
mov
dec
lcall
dec
fidivl
dec
jg
push
fwait
jl
pop
mov
jecxz
inc
cld
xchg
pop
pop
sub
in
hlt
xor
cmp
mov
mov
clc
pop
insl
inc
and
xor
xlat
jecxz
jle
outsb
jae
inc
lock
lds
and
fnsave
mov
adc
data16
and
dec
incl
out
cmp
or
push
dec
sbb
ret
mov
pop
adc
mov
in
or
inc
cmp
xchg
adc
pop
jb
or
xchg
sub
xor
pop
cltd
out
lahf
lock
stos
lret
dec
mov
mov
adc
or
fstpl
inc
std
xor
add
shrb
jge
or
cmpb
in
inc
std
xor
add
shrb
jge
or
cmpb
cmc
inc
stc
xor
add
shrb
je
or
fnstenv
bound
push
or
xor
cmpb
pop
idivl
rorb
jne
outsl
push
jg
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sub
or
or
in
pop
and
jae
popa
enter
dec
mov
mov
push
rcrl
test
mov
add
adc
inc
nop
and
mov
jbe
sbb
push
cmp
fwait
inc
loopne
std
jo
and
or
je
or
jno
insb
les
xchg
iret
jae
out
xor
inc
lods
clc
out
int3
push
fcompl
mov
popf
aas
inc
repnz
pop
lds
int3
jae
jnp
adc
jb
mov
mov
cmpsb
jge
push
lods
mov
jne
dec
mov
cwtl
mov
push
mov
push
hlt
jae
mov
xor
xchg
repz
mov
pop
cmp
int3
mov
call
jb
pushf
leave
mov
xor
push
xchg
xlat
lock
ret
fcmovnbe
ret
mov
xor
and
bound
inc
aam
xlat
jae
push
or
xchg
pusha
mov
insl
aas
fwait
xor
gs
pushf
enter
jae
outsb
push
or
sbb
dec
or
inc
outsb
mov
in
add
fwait
cli
push
fsubrs
jl
pusha
lods
pop
xchg
mov
pop
cmpsb
test
jmp
in
addr16
push
sbb
pop
mov
negb
jp
jns
add
scas
iret
push
ljmp
and
sub
in
ret
dec
loopne
xchg
js
dec
rcrl
test
mov
add
jae
arpl
push
fadds
mov
mov
push
rcrl
test
mov
add
jae
arpl
push
fadds
mov
je
xor
scas
cmpsl
push
shlb
cli
mov
repz
dec
jmp
mov
jne
sbb
adc
jle
add
xchg
dec
jmp
stos
repnz
rcrb
pop
shrb
daa
dec
sbb
adc
jge
xadd
shlb
out
and
test
arpl
mov
rclb
daa
mov
neg
jnp
sti
nop
mov
mov
jns
cmpsb
push
mov
xlat
xorl
sub
sub
sub
in
fcoml
into
sub
mov
mov
into
ffree
in
pusha
jp
pop
repz
bound
adc
stc
int
stos
pop
ret
orb
jl
mov
or
repnz
add
pop
xor
outsb
add
cmpsb
jno
mov
aad
lea
sahf
sub
lcall
aad
out
rcrb
push
mov
nop
addr16
scas
inc
cld
cmp
xchg
test
inc
or
lea
loop
lods
sub
pop
in
outsb
push
inc
scas
jae
dec
mov
lret
js
sub
mov
dec
pop
mov
xchg
xor
mov
sub
mov
push
shr
ja
cld
pop
dec
das
cmp
pusha
and
mov
cmpl
pop
and
cwtl
mov
fpatan
bswap
push
or
cmp
loop
xchg
push
out
test
inc
mov
cmp
dec
and
xrelease
pinsrw
mov
stc
fldenv
ds
and
js
std
cwtl
lahf
lahf
lret
cmpsb
lds
fdivrp
cs
aam
aam
xchg
cltd
jne
ss
adc
out
push
lcall
sbb
xchg
es
xor
shlb
rcrl
loopne
adc
cmp
add
adc
or
push
mov
xlat
cmpsb
sahf
popf
adc
data16
loop
and
push
ljmp
lea
xchg
pop
and
fldt
adc
mov
xchg
xor
int
mov
jns
gs
mov
bound
imulb
push
push
dec
sarl
dec
sbb
test
pop
into
xorb
push
xorb
addl
push
ret
movsl
setp
add
sarb
sbb
pop
test
das
fwait
inc
add
adc
popf
and
xor
fistps
add
mov
lods
sub
or
mov
pop
mov
mov
cmp
sub
rcr
popf
loope
loop
mov
insb
and
sub
dec
inc
or
or
insb
sahf
cmp
daa
adc
ret
aam
xchg
push
pop
mov
xor
test
sub
xor
xchg
inc
cmpsl
inc
pop
mov
xor
or
pushf
jmp
je
popf
cmpsl
push
xor
in
popf
lock
ret
pushf
ja
enter
lcall
in
adc
sbb
sbb
aas
gs
movsb
aam
sub
testb
and
dec
lods
push
pop
mov
jl
add
inc
mov
fnstenv
lret
mov
jle
lcall
add
lea
pop
leave
xchg
mov
cmp
in
xchg
loopne
adc
sahf
and
adc
cmpb
lock
negl
fiadds
test
divl
fdivl
push
das
fs
pop
cmp
jns
push
shrb
cmc
and
aad
pop
out
adc
ss
rcrl
cmp
loop
adc
sti
ret
adc
test
and
xchg
fldl
std
fcmovbe
push
adc
repnz
adc
fisubrs
mov
scas
jg
rorb
test
push
xchg
jle
add
jmp
scas
dec
scas
mov
or
or
movsb
push
pop
sub
jg
mov
hlt
fcompp
int
lds
jle
fs
imul
mov
xor
mov
pop
lahf
adc
mov
in
mov
mov
test
adc
lahf
ljmp
incb
xor
push
arpl
sub
rcr
jp
shl
fdivr
jle
orps
cmpsb
xchg
xrstors
push
dec
mov
sbb
insl
scas
push
in
cmp
in
daa
mov
lret
adc
xor
pop
lods
mov
clc
and
sbb
loope
cld
xchg
xorl
into
push
or
enter
xor
sti
or
loopne
adc
jo
jns
dec
mov
adc
dec
mov
xchg
adc
cmpsl
pop
ret
adc
repz
hlt
push
dec
imul
cmp
lcall
sbb
mov
jmp
xor
hlt
popf
jge
cmpb
int
xor
aaa
outsb
lods
fidivl
shll
inc
fs
jl
into
and
mov
cmp
push
and
sub
add
insb
sarl
cwtl
jmp
push
std
shrl
mov
jne
fisttps
jb
mov
xchg
ret
test
dec
push
daa
pusha
adc
ffreep
pop
sti
scas
jle
push
and
xlat
cmc
mov
jg
sbb
je
jnp
shlb
mov
xchg
movsl
xor
scas
or
cmpsb
insl
xor
shlb
push
fwait
sbb
cmpsl
ret
test
push
fnsave
or
lea
sub
xor
adc
push
inc
pop
ret
vaddsubpd
inc
scas
jl
les
jg
mov
and
test
repnz
inc
incb
add
push
and
xchg
and
incl
sbbb
iret
lods
jg
dec
add
xchg
xor
pop
mov
aad
loopne
mov
imul
and
call
push
jo
add
inc
mov
jno
inc
enter
arpl
or
jae
sbb
loope
cmc
lret
js
pop
inc
outsb
insl
inc
add
aas
int3
fisttps
scas
cmpsb
lret
adc
cmp
xor
mov
push
sti
jg
aad
popf
pop
xchg
call
push
enter
cld
mov
mov
jp
aam
scas
jae
mov
faddl
push
xlat
push
dec
sbb
std
insl
sti
add
lcall
mov
and
outsl
sub
xor
jg
pop
push
insb
xor
inc
std
sbb
mov
in
push
lock
jne
push
xchg
mov
nop
xlat
jle
push
push
sti
sub
test
dec
pop
mov
roll
xchg
push
ficoml
sbb
shll
rorl
stos
fidivrs
fnstenv
rcl
pop
add
fwait
lods
sti
repz
adc
popa
jo
mov
cwtl
popf
loope
insl
fsubr
popa
inc
mov
mov
push
mov
mov
testb
icebp
adc
test
adc
cmp
or
mov
pop
aaa
jmp
sbb
xor
and
xlat
push
bound
in
sub
inc
lahf
sub
jnp
and
or
test
ja
hlt
aam
cmp
cmpsl
lds
popf
je
jmp
dec
mov
outsl
jmp
pop
aaa
nop
int
cmp
imul
out
or
enter
dec
adc
adc
repz
dec
inc
jmp
mov
pop
ret
sub
ljmp
or
mov
test
add
arpl
jmp
in
out
and
xchg
loopne
rcr
sub
and
in
aad
addr16
sbb
adc
add
inc
out
cmp
adc
fwait
popf
std
jp
push
lods
push
dec
inc
les
popa
aam
xchg
cmpsl
push
jl
sub
mov
dec
daa
test
call
push
int3
sub
jnp
sub
movsl
adc
mov
loop
mov
das
or
fcoms
out
and
sbb
lods
adc
jg
mov
arpl
pop
loop
fs
int3
inc
ds
pop
pusha
mov
jecxz
lea
iret
ja
mov
sbb
pop
pop
std
mov
inc
fadd
into
fimull
push
hlt
jge
jno
lods
xor
jns
int
adc
pop
mov
add
inc
aaa
hlt
sti
cmp
mov
popa
add
mov
jg
mov
xchg
add
sbb
mov
cmpsl
pop
sub
add
cmpsb
rcll
aad
mov
adc
sub
adc
data16
mov
lret
cli
testb
popf
test
pop
sub
xchg
jb
lret
in
int3
andb
enter
sbb
xchg
frstor
dec
xor
sahf
xor
pop
insl
xchg
repnz
push
push
hlt
scas
add
cmp
jne
aaa
gs
popa
xor
ret
push
cli
add
adc
mov
ror
lahf
fstl
insb
push
push
lods
data16
pop
jbe
out
and
out
pop
outsl
in
ljmp
loop
xor
mov
sarb
enter
fwait
lret
insl
xchg
dec
sbb
loop
xor
not
faddp
and
into
pop
cmp
push
ret
adc
mov
jl
mov
jne
xchg
fdivr
shrb
out
pop
add
popa
mov
call
pop
push
cltd
mov
push
nop
jb
pop
lds
fsubr
in
ljmp
pop
xchg
jmp
fsubr
pop
dec
or
pop
jo
cmpsl
fisttps
imul
ss
jb
sbb
mov
add
xchg
pop
mov
in
test
push
stos
jne
dec
addr16
hlt
add
push
mov
cld
cmp
mov
mov
pushf
test
test
push
and
mov
mov
outsl
fs
popa
push
lahf
or
enter
sbb
push
lret
mov
push
stc
push
cli
cmp
loop
aas
int3
cwtl
ds
jno
inc
jbe
mov
into
repnz
mov
imul
pop
aas
mov
shrl
sub
cmpsb
sbb
and
icebp
lret
pushf
test
adc
mov
jo
xor
mov
xchg
lcall
scas
out
cmc
insb
fwait
adc
imul
jl
xor
stos
adc
rclb
cltd
xchg
add
xor
dec
or
and
aas
lds
pusha
daa
inc
popf
clc
push
pop
dec
loopne
outsl
idiv
inc
sub
pop
add
push
test
ret
orb
jp
mov
xchg
cmp
hlt
sub
int3
xchg
cmp
jnp
bound
cld
loope
mov
stc
xchg
or
aas
hlt
adc
int
cmp
subb
outsl
out
and
lea
cwtl
mov
push
push
movsl
jo
xor
cwtl
stos
in
insl
push
aas
jb
jo
nop
ret
or
inc
cwtl
xor
test
cmp
jmp
sub
mov
out
xor
negl
sbb
out
mov
lods
cmc
pop
xchg
dec
stos
add
imul
pop
daa
stos
rclb
sbb
dec
xor
xchg
pop
imul
push
sbb
data16
lds
popa
push
jge
lahf
sbb
sahf
xchg
fnstenv
dec
jg
sub
fldt
packsswb
sbb
imul
mov
nop
sbb
call
mov
outsb
cmp
clc
in
jmp
sub
push
shl
inc
adc
leave
jle
lret
add
inc
filds
outsl
jl
inc
ds
gs
js
jle
jae
sahf
sbb
sbbb
jg
addb
popa
adc
cmpsb
add
dec
fs
pushf
punpckldq
mov
jge
clc
outsl
dec
and
lock
or
jmp
iret
dec
ret
insb
repnz
into
inc
icebp
sti
pop
pminub
cmp
mov
dec
mov
int3
js
pop
xchg
xchg
xchg
hlt
lds
enter
daa
jecxz
xchg
or
test
outsl
cld
mov
mov
xchg
mov
in
adc
loopne
sbb
dec
mov
adc
dec
cld
mov
xchg
mov
lock
push
les
cmp
bound
push
std
xchg
sub
add
or
and
rorl
addr16
sbb
insb
mov
mov
push
jne
push
mov
les
into
lock
jmp
jne
movsb
mov
fwait
jle
jne
hlt
inc
add
push
lcall
lahf
jo
sub
jge
cli
cmp
outsl
sub
scas
mov
mov
ss
dec
sbb
xchg
loope
sub
loop
fst
mov
fwait
data16
out
xor
mov
jl
lds
xchg
xor
ds
into
pop
push
out
roll
rolb
dec
in
mov
sbb
xchg
mov
into
in
ja
or
pop
push
sub
mov
fidivrs
mov
cld
add
pop
or
dec
xchg
sub
lds
arpl
pop
cmp
push
push
test
mov
push
les
jnp
jnp
popa
mov
inc
jl
iret
push
mov
addr16
pop
data16
sub
jno
movsl
fwait
out
push
dec
xlat
aam
lahf
sbb
add
jp
mov
movsb
pop
sub
adc
push
sar
xchg
outsl
jge
push
xchg
xchg
jo
add
xor
js
scas
lea
pop
into
lcall
push
mov
notl
out
aam
inc
insl
pop
out
jmp
mov
sub
push
lahf
and
out
dec
jl
jne
jns
rcr
arpl
int
sub
jns
adc
movsb
inc
mov
mov
xlat
mov
push
incb
pop
cwtl
aam
push
pop
pop
sub
mov
fdivrl
mov
mov
cmpsb
mov
out
dec
push
pushf
adc
pop
inc
lds
mov
ja
push
jp
inc
cmp
cmp
mov
cmp
xor
push
clc
ret
mov
std
data16
bound
imul
cmpb
xchg
popa
test
inc
and
orb
call
mull
das
pop
inc
and
ja
shlb
push
lcall
mov
cmp
pop
xchg
cmp
out
loop
test
insb
test
mov
xor
xlat
and
jle
or
add
sbb
gs
xchg
and
retw
test
in
ljmp
mov
or
cwtl
mov
push
sbb
and
scas
scas
add
int3
mov
and
cmp
and
mov
push
sahf
sarb
mov
pop
sub
push
mov
inc
mov
aas
mov
cs
pop
push
fisttpl
stos
scas
add
sbb
outsl
loopne
push
call
pop
or
enter
loope
fisubrl
adc
or
lock
jp
imul
call
mov
sbb
cmp
pop
and
into
adcb
mov
mov
pop
xchg
inc
adc
das
push
int3
test
and
mov
fiadds
or
add
cltd
in
and
xor
cmp
mov
pop
ja
lret
push
sub
cmpsb
rclb
cmpsb
cli
imul
push
jle
mov
adc
mov
add
popf
cmp
test
test
xchg
imul
outsb
dec
test
xchg
sub
mov
enter
nop
fsts
repz
mov
mov
outsb
and
sbb
rclb
fstpl
inc
jno
or
and
xor
pop
mov
xchg
fistpll
mov
inc
and
ret
push
hlt
lret
jl
hlt
push
sub
push
xchg
or
idiv
in
cmp
or
cmpsb
pop
nop
mov
xor
jnp
xchg
adc
jns
mov
dec
ret
xor
xchg
fdivrs
pop
sub
pop
cmp
jmp
xchg
sbb
jl
daa
imull
inc
pop
scas
sbb
cmp
jle
push
lods
mov
push
dec
sbb
dec
sbb
mov
jle
mov
stc
dec
and
pop
fistpl
out
xor
repz
mov
fdivrl
inc
dec
aas
cmp
fsubrs
push
mov
stos
std
arpl
enter
aaa
xchg
pusha
pop
out
out
inc
pop
push
inc
bound
ljmp
and
gs
mov
test
push
sbb
lods
inc
int3
jb
cld
push
push
adc
loop
cmp
addr16
jno
push
adc
xchg
subl
out
fcoms
ljmp
lcall
adc
and
pop
pusha
cmpl
push
mov
xchg
pop
xchg
icebp
adc
jae
sbb
jecxz
popf
addr16
cwtl
cmp
push
out
clc
imul
mov
xchg
and
bound
mov
out
lods
push
cmpl
loop
pop
std
xchg
or
in
sub
jge
insl
push
fisttps
jae
bnd
xorb
cmc
outsl
faddl
scas
dec
or
arpl
arpl
add
fnstsw
sbb
popa
and
mov
mov
mov
hlt
pop
and
sti
and
nop
add
pop
or
arpl
and
in
or
es
mov
push
ds
jmp
mov
cmpsl
sub
pushf
xor
mov
cmpsl
and
mov
int3
iret
mov
pop
xor
scas
xor
aam
test
sub
fsubrp
mov
and
dec
sti
outsb
out
mov
push
sub
xchg
dec
mov
xchg
or
jnp
aam
push
test
inc
inc
popf
loopne
and
adc
int
popf
dec
mov
adc
cmpsb
inc
outsb
ja
and
push
mov
call
pop
dec
cmc
jnp
jmp
push
ds
push
arpl
cmp
sub
xor
dec
jmp
pop
sub
imul
icebp
mov
xchg
lahf
mov
sbb
jmp
outsl
pop
push
jp
sub
hlt
xchg
push
loop
out
mov
insb
mov
dec
ss
xchg
aaa
push
inc
sub
sbb
xor
pop
ret
mov
nop
mov
lods
movsb
out
inc
test
mov
int
push
loopne
in
xchg
sbb
insl
and
mov
popa
mov
xchg
sbb
mov
fs
mov
std
inc
xchg
adc
adc
inc
mov
std
mov
test
push
pop
adc
movsl
jge
dec
jnp
jge
flds
xchg
mov
ret
mov
dec
movsl
xchg
cmpsl
outsl
negb
sub
insl
add
mov
mov
mov
test
idivl
inc
into
mov
cmc
bound
fcoml
insb
xor
aad
sub
outsb
sbb
add
mov
test
mov
pop
sbb
fwait
xlat
cmpsl
mov
mov
xor
popf
repnz
pop
pop
push
push
fstpl
ljmp
cmp
in
or
daa
mov
inc
paddw
mov
xchg
mov
cmpsb
pop
pop
addl
adc
push
jl
mov
stos
movsb
sbb
push
sahf
insl
outsb
pop
push
sti
mov
pop
sub
sar
iret
pmaxsw
xor
fwait
sub
pop
mov
fsubrs
mov
xor
test
xchg
clc
sahf
push
stc
mov
outsb
out
pop
leave
shl
es
fld
lea
outsb
dec
loopne
push
lcall
dec
push
lods
or
stc
push
inc
sbbl
test
and
enter
loope
dec
adc
aam
adc
icebp
add
les
fcmovnb
lret
dec
sbb
test
and
mov
sahf
mov
vphaddwd
cmp
fidivrl
or
sbb
out
stos
cld
xchg
hlt
mov
cmp
jno
lods
movsl
xor
das
pop
popf
mov
adc
adc
adc
adc
and
push
dec
sldt
subl
push
jp
test
push
push
push
stos
jp
int3
cmp
pop
cmp
mov
ret
adc
pop
aam
sahf
rol
fstpl
xor
mov
and
xchg
push
jb
add
mov
or
lret
loop
cmp
dec
iret
sub
jge
loopne
pop
sub
xchg
dec
pusha
add
fwait
mov
call
and
adc
sub
mov
push
mov
push
dec
push
setg
popl
dec
int3
dec
or
xlat
call
push
cwtl
or
mov
inc
add
xchg
rcll
sub
jo
aad
gs
popa
jge
sti
sbb
push
loope
mov
dec
and
xchg
cmp
das
addr16
test
pushf
test
lods
lods
stc
pop
cld
mov
std
call
jae
fwait
stos
mov
dec
jg
cmc
jae
loopne
push
adc
xor
repz
das
add
loopne
cmc
movsb
sbb
sbb
dec
rcrl
test
mov
add
jae
arpl
push
fadds
mov
mov
push
rcrl
test
mov
add
jae
arpl
push
fadds
mov
jmp
jmp
cmp
js
dec
rcrl
and
cwtl
add
jae
arpl
jae
inc
cmp
mov
push
push
fadd
test
inc
mov
adc
pushf
aaa
lods
daa
mov
loopne
lock
mov
lret
push
sub
jo
add
in
pop
xor
mov
lock
fidivl
sub
jo
add
adc
pop
xor
mov
lock
and
repnz
cmp
adc
jg
xor
pop
and
loopne
cltd
in
xor
sub
cmp
push
ja
lea
ja
sub
das
and
xchg
or
sbb
xor
sahf
dec
cmc
push
sbb
xor
stos
popa
mov
es
aad
jno
shrl
xchg
cmp
jo
cmc
cmc
add
fwait
shll
in
push
and
fld1
cli
outsl
cli
stc
scas
mov
mov
fst
and
adc
fsubs
push
push
gs
lahf
pop
sarb
mov
in
loop
mov
js
jp
or
iret
cld
inc
sub
fisubl
add
inc
nop
in
cmc
in
inc
mov
pop
xor
sarb
cmp
ljmp
push
xor
jo
add
jb
inc
xor
mov
mov
in
decl
xor
sub
push
xor
push
mov
movsb
ret
sub
in
cli
dec
aaa
dec
sbb
or
dec
cmp
shrb
kmovb
mov
cmp
pusha
sbb
add
push
pop
xor
mov
lock
fidivl
sub
jo
add
push
pop
xor
mov
bound
das
aad
mov
sbb
test
mov
daa
lds
pushf
mov
fstpt
hlt
loope
or
cmp
sbb
scas
int
cli
sahf
pop
cmp
in
xorb
subl
scas
push
dec
ds
ljmp
jle
adc
mov
jp
pop
loop
pop
xor
sbb
xor
fdivl
lret
push
repz
mov
repnz
dec
push
xchg
and
aam
add
pop
or
xor
or
pop
and
iret
dec
rcll
push
leave
jbe
stos
fcoms
dec
xchg
mov
out
dec
ret
and
invd
xchg
lods
add
sbb
call
sub
sbb
sti
or
xlat
xchg
loop
daa
mov
cltd
xor
stos
pop
or
dec
adc
test
push
xchg
mov
mov
add
enter
pushf
std
push
movsb
add
adc
or
insb
mov
sub
arpl
mov
js
fdiv
or
push
xchg
test
xchg
xor
jae
fwait
pushf
test
push
rcr
push
inc
mov
insl
pop
jmp
outsl
add
pop
push
mov
pop
sub
into
ret
stos
mov
faddp
dec
movsl
mov
test
cmp
icebp
xor
inc
push
mov
pop
rcl
xor
inc
loopne
popa
hlt
pop
adc
mov
lret
xchg
lret
jno
sub
in
push
mov
ljmp
fucomip
andb
or
insl
lods
aam
jl
mov
adc
daa
in
repz
cmp
test
scas
orb
flds
mov
in
stos
dec
loope
pop
xor
loopne
jbe
and
daa
sub
inc
cld
and
sbb
aad
add
test
adc
lahf
add
xchg
push
sub
sub
insb
dec
shll
pop
lret
test
out
cli
push
inc
fcomps
scas
cmc
mov
movsl
fdivr
loope
push
and
mov
fcoms
fwait
loope
cmp
push
jg
imul
imul
aaa
xchg
xor
jp
mov
test
scas
mov
pop
sbb
and
sub
sti
in
lea
and
ret
sbb
in
and
bound
jne
loop
enter
dec
rcll
test
or
mov
movsb
pop
and
and
dec
dec
in
inc
fdivrl
shl
rclb
stc
mov
fs
sub
mov
jbe
and
int
xor
lret
fwait
lock
aad
and
in
out
popf
sbb
outsb
or
cmpsl
and
or
mov
cmp
mov
sub
or
sbb
mov
fwait
sbbl
lahf
or
pop
fists
fsubs
das
ss
mov
lock
mov
add
push
or
call
add
cmp
or
sarb
push
mov
sbb
mov
push
pop
loope
out
lcall
movsl
cld
cmp
jo
dec
pop
lds
fdivrp
test
fwait
jmp
pop
fsubl
cmp
mov
mov
mov
xchg
lahf
push
nop
popa
mov
leave
mov
sub
adc
cmc
fmull
mov
xor
fwait
sti
dec
out
pop
xor
add
push
lds
cmpsl
sbb
xchg
inc
subb
clc
and
stos
mov
mov
adc
add
add
push
arpl
push
les
imulb
cmc
test
dec
mov
sub
adc
rcl
inc
jae
cs
jo
scas
mov
add
call
inc
lods
fimull
dec
int
xor
ret
or
js
and
jbe
mov
clc
or
push
add
jle
jle
ja
test
leave
xchg
pop
sbb
adc
xchg
add
cmp
cmpsl
add
adc
inc
dec
in
push
pop
xor
cmp
daa
mov
pop
and
pop
inc
or
shrl
xchg
jne
xor
inc
cmp
mov
pop
les
loop
insb
pop
aaa
inc
cmp
push
fldenv
sbb
add
mov
js
iret
xchg
decl
loopne
test
adc
mov
fdivrl
push
stc
inc
aaa
addl
fdivs
in
jo
add
mov
push
sbb
cmp
xchg
pop
push
dec
dec
mov
cmp
mov
shrl
dec
mov
gs
xchg
add
repz
sarb
adc
cmp
inc
cmpsb
and
push
or
out
push
loop
and
popa
pop
sbb
xchg
mov
xchg
mov
dec
xor
dec
loopne
in
out
cmc
cld
mov
jo
sub
stos
jne
jecxz
ljmp
arpl
cltd
adc
shl
jbe
cltd
out
insb
gs
lcall
fisttpl
cli
push
xor
fs
repz
clc
mov
ss
cwtl
add
sbb
shl
xor
push
pop
xchg
mov
inc
fisttpl
mov
pop
in
sahf
test
pop
fstps
mov
out
andl
mov
push
lahf
pop
push
inc
lds
icebp
outsb
lret
or
icebp
add
popa
cwtl
sub
fs
sbb
aas
jecxz
aam
add
testl
in
daa
lock
ret
adc
push
adc
push
and
inc
mov
adc
or
pusha
lret
cmpsl
xchg
push
add
dec
xor
push
jmp
pop
inc
adc
popf
and
sub
cmp
xchg
mul
je
sbb
adc
push
ja
leave
ret
cmpsl
push
mov
adc
ss
push
in
inc
int
in
adc
loope
jno
push
outsb
testl
loopne
enter
pusha
push
iret
adc
mov
stc
mov
sbb
jle
adc
test
sbb
pop
jg
adc
jbe
lahf
fisubrl
mov
cmp
repnz
cld
jmp
scas
call
out
cmp
leave
sbb
cli
sbb
add
mov
dec
into
mov
addb
cli
sbb
cld
mov
scas
mov
or
jge
ljmp
mov
fildll
xchg
jo
dec
test
xor
int
dec
jge
inc
xchg
std
lods
jmp
adc
in
add
lret
inc
pop
push
lds
imul
and
push
mov
push
cmp
mov
mov
add
pop
mov
or
jmp
lret
cmp
cld
arpl
xchg
add
mull
or
mov
movsl
inc
test
sbb
inc
shl
scas
add
inc
shrl
dec
bound
dec
out
out
cwtl
pop
das
inc
out
and
mov
add
xchg
inc
sahf
adc
jno
fsts
add
out
out
cltd
mov
jb
mov
cmp
and
pop
mov
out
dec
arpl
add
je
mov
push
fcomps
jne
popf
push
mov
loop
addl
arpl
mov
pminsw
dec
popa
and
and
push
sbb
pop
push
sub
sub
je
mov
lock
and
xchg
je
aam
scas
fdivp
mov
rol
xchg
je
push
cmpsl
push
push
in
mov
push
xchg
jnp
pushf
clc
mov
dec
ffree
orl
adc
cmpsl
or
mov
jbe
jg
icebp
cltd
icebp
imul
ja
and
movsl
or
xchg
cmp
inc
mov
sti
pop
std
add
shlb
sub
cmpsl
xor
int
jecxz
lea
push
adc
ljmp
push
movsb
mov
adc
inc
scas
cmp
mov
test
lcall
jmp
mov
push
loope
andl
cmp
sbbb
pop
inc
lds
mov
pop
jo
out
mov
dec
arpl
mov
sub
push
sbb
ljmp
sub
loop
push
mov
out
mov
xchg
xchg
push
fldl
arpl
packsswb
stc
xchg
fcmovnb
jmp
fidivl
xchg
jae,pt
ja
gs
out
and
mov
xchg
sarb
icebp
scas
jle
jns
nop
sub
mov
jbe
add
popf
xor
cmpsl
cltd
xor
push
push
sbb
add
jb
idiv
nop
daa
in
push
lret
push
xchg
ljmp
sub
mov
xchg
out
ljmp
push
mov
mov
movsl
push
cs
sub
mov
aad
mov
rcl
inc
insb
dec
jns
aaa
jg
out
push
mov
std
hlt
lods
mov
repz
lods
pop
lock
mov
arpl
bound
jne
neg
mov
jge
sbb
insb
mov
cmp
jle
add
mov
ret
lods
mov
ds
dec
std
push
aad
shll
mov
xor
lret
jo
test
and
outsl
mov
and
fld
test
inc
cld
dec
mov
pusha
jbe
push
mov
outsb
pop
sbb
xchg
enter
sub
repz
int
inc
std
cmova
outsb
insb
sahf
test
fistps
sub
loop
inc
mov
bound
in
and
cmp
mov
cld
popf
inc
push
lock
lahf
lret
pop
jp
fstpl
fcoms
or
in
bnd
popa
sbb
insb
lcall
mov
or
andl
adc
mov
push
jecxz
push
aas
cs
ja
testl
bound
les
pop
jae
lcall
insl
inc
pop
ss
xor
mov
in
bnd
addl
fcomp
and
mov
push
dec
cmp
dec
xchg
dec
movsb
jno
cwtl
xchg
mov
cmpsb
or
aad
jp
mov
setne
sbb
adc
cmp
andl
adc
insb
popa
mov
gs
push
test
rcl
push
dec
lcall
ficompl
inc
lahf
mov
sbb
cmpsl
outsl
jmp
xor
inc
inc
lret
mov
mov
aas
and
sbb
int3
dec
pop
cmp
cmp
xchg
pop
faddl
fwait
sar
mov
and
jg
mov
mov
mov
out
push
xor
imul
aaa
sbb
xchg
mov
pop
dec
outsl
xchg
sub
aad
gs
push
inc
add
jl
inc
mov
push
mov
fldz
lods
pop
pop
add
mov
inc
fadd
mov
clc
push
sub
jne
stc
outsl
mov
iret
inc
dec
inc
sarb
mov
leave
ds
sub
stc
xor
fwait
in
test
dec
xchg
or
insb
test
adc
push
sub
jae
mov
pop
dec
pop
sbb
stos
lds
mov
xchg
fwait
jp
scas
jp
int
out
int3
push
sbb
add
loop
js
scas
je
sub
xchg
sahf
test
in
arpl
mov
push
adc
mov
dec
push
dec
out
pusha
loope
aas
scas
add
cmp
cmp
cld
add
xor
pop
xchg
xchg
ret
dec
fcom
popf
xchg
gs
jmp
les
dec
int
adc
test
pop
mov
xor
xor
cmc
inc
aaa
adcb
pop
jge
leave
or
mov
jo
add
adc
fld
pop
dec
jle
bound
int3
or
or
lret
icebp
push
pop
std
cwtl
push
data16
jne
les
insl
lods
js
call
pop
add
xchg
adc
cld
scas
fisubrs
pop
push
and
push
cltd
pop
or
repz
data16
rcr
aaa
push
mov
sbb
pop
push
test
lahf
xor
or
ror
sbb
cmc
loop
test
mov
pop
movsl
mov
int
xorb
cld
xchg
cmp
or
lret
mov
lock
mov
out
inc
pop
lods
mov
xchg
push
test
pop
addr16
cltd
mov
roll
jns
push
notb
out
mov
jg
cmp
filds
test
shlb
or
adc
fs
test
xchg
in
stos
notl
out
mov
fmull
cmpsl
add
push
dec
jbe
mov
cltd
mov
mov
dec
lahf
out
sarl
shlb
cmp
test
xor
test
bound
mov
xchg
jno
int3
sub
insl
test
sti
leave
ret
adc
push
mov
sub
mov
call
mov
cwtl
paddq
outsl
out
shrl
or
dec
add
in
cli
jbe
jne
sub
and
inc
xchg
fwait
arpl
rol
inc
adc
jo
repnz
mov
or
xchg
addr16
dec
call
dec
push
or
cmp
adc
lea
mov
xor
cmp
mov
or
mov
jne
aas
pop
pop
jae
decl
cli
mov
scas
je
dec
push
lds
xchg
arpl
imul
nop
addb
adc
enter
shrd
add
jnp
jae
xor
mov
movsb
jbe
mov
adc
sbb
or
xchg
iret
push
scas
jl
les
mov
xchg
mov
xor
pop
xchg
mov
in
mov
sbb
jmp
fsubrp
les
movsl
daa
xchg
fs
scas
jnp
mov
sbb
dec
jg
repz
vmwrite
mov
dec
sbb
test
adc
lahf
fidivrl
movsl
jecxz
inc
test
add
push
pusha
pop
movsl
jne
adc
mov
ja
jmp
jle
sahf
mov
int
add
in
arpl
jmp
and
aas
pop
mov
xchg
jae
mov
orl
xchg
out
leave
push
call
mov
gs
dec
or
mov
repz
pushf
lea
sub
mov
adc
mov
addr16
pop
fmuls
ja
mov
add
sarb
dec
mov
push
pop
ljmp
push
cmpsl
mov
adc
adc
cmp
mov
xor
out
push
jp
and
jb
in
mov
mov
push
stc
out
inc
lods
jnp
movsb
mov
add
cli
push
out
sbb
inc
pop
lods
cwtl
jl
aam
push
jnp
popa
mov
xchg
sub
push
add
in
or
movsl
pop
jbe
loop
popf
cmp
jge
shl
or
xor
js
popa
jge
loopne
fcomp
nop
cmp
cmc
xchg
cmpsb
jp
mov
push
js
pushl
shll
jge
mov
sub
mov
cwtl
jp
cmp
or
pop
dec
and
add
int3
or
sub
lret
iret
jae
mov
pop
test
mov
lock
imul
iret
mov
xor
jge
pop
sub
fwait
push
test
negl
adc
dec
adc
sub
popf
stos
cmpsb
mov
test
mov
dec
sub
push
fsubrl
push
pop
fwait
cmp
imul
lds
cmp
cmpb
cmp
push
add
movsb
mov
and
inc
cld
jmp
adcb
arpl
fdivs
outsl
fldenv
adc
ss
add
shrl
ficoml
outsl
push
pop
add
dec
xor
xor
dec
lret
mov
pushf
arpl
xchg
bound
dec
or
xchg
daa
lods
and
cmpl
cmp
call
xor
cmp
pop
divb
ja
pushf
iret
lods
mov
paddsw
mov
pop
in
push
dec
ret
add
or
jge
sbb
test
cmp
in
adcb
xlat
adc
movsl
mov
lcall
xchg
add
in
fwait
cmp
jg
movsl
out
jno
xchg
cmc
jecxz
repz
xchg
xchg
sub
mov
or
add
pop
out
loopne
sbb
icebp
mov
lds
cmp
pop
cli
jmp
aas
lock
xchg
les
pop
pop
jp
inc
vpaddsb
mov
rcrl
inc
daa
push
add
icebp
subb
cld
adc
pop
xchg
cmp
and
inc
add
insl
sub
add
mov
dec
nop
cmp
jae
jo
imul
sub
test
das
shrl
pop
inc
add
in
sar
pop
fildl
inc
cmp
cld
loope
test
call
aaa
ljmp
test
fcmovbe
repz
and
jmp
mov
lret
mov
dec
imul
cmp
mov
out
sub
icebp
or
adc
rclb
cmpb
cmp
in
jns
orb
sub
gs
aam
insb
bnd
stc
sahf
loopne
cmp
aam
jmp
xchg
push
lds
pop
pusha
das
pop
mov
jmp
fs
add
pop
das
adc
mov
push
int
je
jns
xchg
cmp
cmc
inc
sbb
pop
fisttpll
jmp
jnp
xor
xor
pop
xor
lods
mov
aaa
push
test
add
mov
jge
inc
movsl
pop
sub
int3
movsb
mov
pushl
push
and
jl
aaa
ret
movsb
cmc
pusha
or
xor
pusha
cmp
shl
mov
rcr
into
sub
repnz
sbb
inc
sub
imul
stos
jecxz
outsb
push
or
jnp
test
sbb
outsb
dec
and
into
imul
cld
cmp
jns
sub
les
sub
xor
ljmp
inc
xchg
xlat
popf
sbb
push
mov
mov
push
dec
ja
outsl
xchg
fildll
loop
popa
lea
stos
pop
or
in
mov
mov
aam
mov
cmpsb
sub
push
imul
jo
adc
or
lds
push
adc
subl
loop
popf
out
inc
push
ds
fchs
subl
aam
push
rcl
add
es
popf
sub
shrl
xchg
jp
inc
sub
adc
stos
xlat
daa
jg
add
sub
fwait
je
jno
mov
bound
cs
xchg
pop
enter
std
jo
test
loope
xchg
sahf
xchg
push
mov
inc
mov
xchg
xchg
or
pop
sub
cmpl
pop
popl
test
loope
sahf
sub
inc
mov
mov
or
inc
or
xor
pop
push
mov
push
jmp
sbb
popf
adc
jbe
sbb
inc
ret
lods
popa
stos
jg
add
movsl
nop
xor
mov
xchg
mov
push
push
dec
jo
xorl
jo
sarb
inc
bswap
ja
sbb
dec
sahf
lock
mov
fimuls
fsubl
xchg
insl
pop
sbb
test
daa
xor
adc
mov
insl
cmpsl
orb
ds
inc
sub
repnz
lcall
lret
repnz
xor
sub
xchg
sub
jnp
sbb
pop
mov
dec
mov
and
sub
imul
lds
pop
sub
leave
push
clc
pusha
or
pop
aas
jns
mov
add
cmp
inc
push
mov
push
imul
xchg
lods
push
mov
mov
insb
ja
les
mov
loopne
xlat
in
pop
enter
icebp
jo
adc
loope
push
out
call
add
jge
adc
adc
call
cmpsb
fstpt
pop
pop
mov
lret
mov
inc
inc
mov
sub
pop
sbb
movsl
jb
pop
aaa
mov
sbb
call
roll
mov
mov
add
ss
cwtl
sti
arpl
mov
and
ja
xor
out
jo
cmp
mov
jecxz
jo
mov
xchg
int
movsl
mov
roll
mov
outsb
into
insb
xor
icebp
js
cmp
cmpsb
loop
xor
bound
incl
add
push
clc
mov
sbb
cs
icebp
add
sbb
test
ds
dec
loop
ret
mov
add
add
xchg
xorb
jmp
hlt
out
popa
push
imulb
cmpsb
lock
divb
mov
sbb
loop
add
sti
aaa
loope
jno
loope
push
sub
aaa
fs
mov
aas
pushf
mov
lret
lds
or
xchg
xchg
es
aam
mov
test
cmp
jmp
sbb
lods
mov
lds
jno
stos
movsb
mulb
notl
or
sbb
lea
mov
stos
mov
daa
xchg
mov
test
decl
mov
xchg
fcompl
or
push
test
fistl
dec
shrb
stc
sub
jge
xor
pop
pop
and
imul
call
stos
fistps
nop
ljmp
push
sub
jo
add
push
pop
xor
mov
lock
fidivl
sub
jo
add
push
pop
xor
mov
lock
fidivl
sub
jno
add
push
pop
xor
mov
lock
fidivl
or
sbb
ja
cwtl
adc
lret
cmpsl
into
mov
leave
mov
sahf
push
outsb
pop
jle
dec
aaa
pop
inc
cs
mov
out
xchg
cmpsl
into
mov
scas
xlat
mov
push
outsb
pop
push
or
pop
inc
xor
addr16
ja
pop
out
pop
and
jno
xlat
scas
lahf
mov
pop
jnp
inc
sub
imul
adc
out
mov
jecxz
rorb
push
hlt
lcall
mov
mov
push
inc
fmull
test
and
mov
addl
rol
pop
shl
pop
cli
dec
xlat
mov
in
cmpsl
cmp
mov
and
jb
xchg
call
mov
xchg
icebp
sub
fiaddl
loop
scas
sub
adc
enter
push
shll
xchg
add
push
pop
dec
ja
cmp
mov
sub
mov
sahf
mov
push
ret
add
pop
test
daa
dec
fldt
xor
push
jle
sbb
jle
pop
aaa
pop
ret
stc
and
addr16
mov
xchg
cmpsl
into
fcmovnu
scas
xchg
mov
cmc
outsb
test
dec
sub
cs
ds
adc
and
mov
ret
hlt
rclb
ja
push
sbb
dec
cmp
or
pop
xchg
pop
cld
loopne
jl
scas
out
fimull
push
push
or
pop
xor
ss
cmc
cmpsl
movsb
lods
xlat
cmpsb
idivb
out
negl
daa
dec
aaa
pop
inc
cs
ds
ja
xchg
xchg
cmpsl
into
mov
scas
xlat
mov
pop
outsb
pop
jle
dec
aaa
pop
inc
cs
ds
ja
xchg
push
mov
jl
cltd
mov
add
mov
fwait
rcr
les
or
cwtl
into
loop
fwait
shll
cmp
pop
fldt
dec
cmp
into
fidivs
sub
dec
fisttpl
adc
push
nop
add
push
and
adc
dec
push
test
cmpsb
push
push
sbb
les
jp
jl
xchg
jns
mov
aam
jmp
icebp
out
xchg
out
dec
xchg
mov
pop
notl
xor
subb
and
or
cmc
loop
xor
pop
cmp
mov
cmp
jne
push
sub
es
mov
js
fldl
xchg
loop
sub
push
in
mov
cld
xchg
jne
rol
mov
xor
lret
and
pop
xchg
insl
or
addb
and
push
repz
push
add
sub
mov
or
fstpt
mov
adc
inc
inc
pop
sub
mov
fwait
sub
addb
aaa
aaa
sbb
mov
sub
ret
fdecstp
fucomi
out
lock
inc
xchg
jbe
and
cmp
mov
shrl
or
or
aaa
pop
stos
ds
mov
cwtl
mov
inc
in
dec
push
stos
lcall
inc
stos
sbb
adc
shrl
sub
sahf
in
rol
xor
sub
data16
fsubrl
add
xchg
xorl
divl
xlat
lea
es
cld
or
or
test
jo
or
push
inc
jne
pop
mov
pop
mov
lods
mov
xor
sub
out
fiadds
cwtl
and
clc
arpl
sub
mov
jp
lds
shrl
orb
dec
mov
sbb
jl
jae
orl
or
add
push
js
add
mov
mov
ss
add
sub
or
xor
cmpb
jmp
decl
jnp
adc
sbb
frstor
test
and
jno
mov
jecxz
in
in
mov
pop
mov
adc
jmp
mulb
jno
or
js
xor
push
stc
inc
stos
xchg
mov
adc
jae
jge
inc
outsb
push
hlt
mov
push
fdivr
lret
faddl
dec
outsl
mov
in
mov
jle
jg
jp
call
call
dec
mov
pop
pushf
aam
loopne
shlb
mov
inc
int
and
push
cmp
sbb
mov
popf
dec
mov
add
cltd
inc
push
or
mov
std
ds
mov
jge
sub
call
sub
inc
push
push
inc
jae
xchg
xchg
cmc
or
pop
addr16
or
xchg
ret
lods
mov
int
push
mov
in
mov
sbbb
insb
adc
out
xor
fidivrl
and
cmpsl
mov
sbb
xchg
mov
mov
cmp
arpl
adc
dec
add
push
cmp
call
gs
jns
movsb
jl
cmp
into
jo
mov
mov
enter
xor
cmpsl
xchg
ss
jmp
push
sub
stos
and
ss
mov
and
movsl
pop
push
enter
inc
popa
sbb
xor
lret
push
jl
mov
add
adc
mov
in
lahf
push
data16
and
pop
loop
cmp
inc
ss
call
jp
mov
fs
mov
sub
mov
mov
xor
lea
arpl
call
dec
mov
inc
and
pop
cmc
push
out
fcoml
int3
mov
icebp
dec
ror
in
mov
insl
fincstp
cmpsb
add
sbb
add
push
inc
add
lock
nop
and
fsubl
xchg
sarb
sar
out
imul
imul
pop
inc
xchg
stos
cmc
jae
pop
and
fcoml
push
das
inc
fadds
scas
inc
xor
jae
jno
shl
aad
adc
addl
sbb
test
xchg
and
sbb
jl
stos
jb
ret
dec
mov
push
jnp
es
or
inc
jae
mov
test
dec
scas
pop
jge
out
adc
dec
fcmovne
mov
adc
ljmp
and
jno
mov
xor
loopne
mov
gs
dec
and
sub
ret
ljmp
push
xchg
div
pop
cmp
mov
fsubrs
clc
push
notb
int
push
sti
mov
jno
add
repnz
outsb
mov
in
outsl
ret
mov
jecxz
push
es
sahf
xchg
pop
cmp
jne
mov
aam
xchg
sahf
outsb
pop
sub
icebp
mov
notb
pop
lock
leave
mov
xor
dec
scas
xchg
fucomp
and
gs
or
cs
pusha
xor
lods
les
in
xor
mov
mov
sub
push
ret
jne
vmwrite
ss
mov
or
xchg
sbb
daa
adc
dec
push
cmpsl
mov
gs
cmp
mov
jecxz
jge
push
or
jle
xor
add
mov
dec
aad
xchg
xchg
add
fildll
pusha
nop
js
push
push
pop
adc
cmp
scas
aas
add
inc
test
jmp
popf
sub
cmp
dec
lds
xchg
ret
cmpsb
jne
sub
jl
insl
or
outsl
in
push
not
cli
inc
in
mov
fsubrs
xchg
movsb
shll
dec
mov
add
iret
mov
sub
lods
gs
mov
jne
push
xchg
out
mov
push
stos
pop
repz
pop
xchg
xor
inc
mov
pop
mov
inc
test
out
leave
or
push
outsl
xchg
repz
fdivr
repz
test
mov
movsl
sti
push
test
popa
mov
aas
in
jae
fistps
jecxz
cmp
adc
mov
pop
ljmp
sahf
sti
es
mov
add
mov
push
xchg
cmc
pop
stos
push
pop
ss
mov
call
movsl
scas
push
mov
mov
lods
mov
xchg
rorl
sub
in
dec
imul
xchg
pop
push
pusha
cmp
out
out
inc
or
dec
iret
mov
fwait
push
inc
dec
mov
xchg
iret
addb
inc
rorl
add
jo
cld
xchg
into
int3
or
iret
xchg
ret
test
std
push
push
push
arpl
in
in
rolb
xchg
ljmp
jle
ret
jns
sub
mov
mov
call
inc
jno
std
fimuls
inc
push
int3
stos
push
push
ljmp
push
imul
push
xchg
xchg
push
fsubs
std
sti
xchg
xchg
and
stos
jno
dec
test
push
fists
ja
data16
icebp
mov
cmp
mov
fwait
test
icebp
cmpsb
push
dec
add
push
mov
jne
jbe
inc
xor
mulb
scas
fwait
mov
addl
sub
inc
jmp
test
cmpl
pextrw
add
pop
dec
sahf
push
or
xor
pop
roll
xchg
jno
fcompl
sub
adc
push
cmp
stc
dec
cmp
stos
mov
jg
ret
bound
cmp
leave
mov
ret
xor
add
push
push
nop
adc
lds
inc
jmp
mov
sti
mov
int
adcb
stos
icebp
nop
push
call
fwait
xor
pusha
iret
jns
popf
inc
mov
pusha
outsb
dec
ljmp
subl
push
mov
clc
iret
cmp
push
jae
test
pop
xor
push
andl
test
and
repnz
sbb
das
cld
sub
sbb
mov
or
fs
push
mov
mov
add
cmp
in
movsl
sub
xor
mov
mov
pop
scas
outsb
data16
sub
insl
lods
test
pushf
mov
lods
mov
mov
movl
sbb
cmpsl
je
mov
lds
mov
test
adc
push
sub
mov
mov
cmp
in
xchg
cmpb
cwtl
lea
or
xchg
sub
gs
lock
lds
clc
test
push
xor
or
mov
pop
push
mov
sub
cmp
sbb
test
fcompl
or
lods
mov
pop
inc
dec
in
add
arpl
mov
push
aaa
ds
push
dec
inc
push
or
loop
xor
inc
xchg
hlt
aad
stos
dec
jg
cmpsb
adc
xlat
mov
inc
jae
sbbb
clc
addr16
inc
sub
imul
loopne
dec
pusha
fwait
lahf
sbb
pushf
cmp
fldl
je
fadd
loopne
cmp
or
add
addb
bound
mov
push
dec
dec
xchg
sub
andb
push
roll
nop
ret
xchg
mov
mov
mov
or
push
push
pop
mov
xor
push
pop
ljmp
iret
add
push
xorb
test
int
mov
xchg
push
inc
in
dec
lods
push
inc
sub
andb
sub
and
lock
addr16
adc
ds
aas
fistl
lahf
lea
clc
mov
xlat
nop
jnp
outsl
out
andl
cmp
popa
mov
dec
leave
mov
fnstenv
dec
je
mov
jne
adc
dec
cld
mov
pop
dec
int3
mov
hlt
pop
jle
les
aam
in
out
repnz
dec
in
cmc
or
sub
xlat
inc
sub
insl
mov
jbe
into
cld
mov
stos
xor
sbb
rolb
jae
mov
fst
aas
stc
mov
mov
mov
push
adc
mov
mov
mov
xor
jge
pop
das
pusha
ret
and
cmp
jnp
pop
fcoml
insl
divb
cs
jbe
aas
or
xchg
adc
or
popf
mov
or
out
loop
xchg
cwtl
inc
int3
mov
cmc
leave
add
mov
into
mov
sbb
in
push
add
or
ret
or
lea
int3
xchg
std
add
jecxz
sbb
mov
call
cmp
jb
ficomps
loop
fisubl
and
nop
cmpl
push
movsb
pop
push
lea
pop
gs
dec
jb
movsl
mov
mov
lods
sbb
inc
shrl
dec
test
xor
xor
dec
pusha
add
pop
mov
inc
mov
ret
aad
out
push
int3
ret
or
test
pop
cs
stos
adc
sub
addl
leave
and
xchg
inc
and
pop
or
cld
js
scas
pop
jmp
push
pusha
push
roll
lret
push
ja
jbe
stos
lcall
aad
jecxz
cld
icebp
mov
mov
hlt
push
dec
mov
cltd
lock
inc
add
fs
xchg
insb
into
dec
sub
lock
out
int3
icebp
mov
xor
stc
int3
out
push
xchg
pop
bound
dec
dec
mov
ret
test
inc
shlb
xchg
push
cwtl
ficompl
dec
fimuls
aas
mov
mov
adc
inc
add
out
ja
data16
and
lods
ret
divl
call
inc
mov
xchg
fimull
jmp
sub
cmpsb
cld
cmp
aas
inc
in
dec
push
pop
data16
mov
pop
adc
xchg
fildl
pop
cmp
and
push
sub
push
divl
push
repnz
mov
lret
imul
dec
dec
inc
pusha
icebp
and
scas
or
out
dec
subl
mov
loope
ret
pop
inc
addb
inc
push
inc
jge
pop
sub
int3
call
inc
or
ret
xor
cli
sbb
ja
lret
in
ss
cli
scas
mov
sbb
out
inc
sbb
xor
or
leave
mov
aaa
aas
arpl
inc
mov
rcrl
ret
cmp
xlat
idivl
push
or
rclb
jle
mov
mov
mov
sub
js
sbb
pop
test
shr
cmpsb
pop
jg
test
in
dec
pop
lahf
sti
sti
sbb
pusha
cld
jge
imul
or
pushf
das
ret
mov
xchg
iret
arpl
cmp
decb
cltd
je
mov
mov
and
dec
or
pusha
xchg
shlb
dec
mov
insl
push
mov
push
mov
lret
mov
mov
xor
cs
jb
shr
idivb
adc
sub
mov
or
scas
aas
mov
mov
lds
lret
pop
mov
pushf
lcall
stos
leave
pop
ss
gs
xchg
imul
fwait
push
mov
scas
push
cli
or
mov
dec
pop
xor
data16
sub
sub
pop
mov
jle
out
add
rorl
in
mov
jmp
and
pop
sahf
xor
jae
push
js
jge
mov
js
test
fisubs
sbb
inc
or
mov
inc
pop
dec
jmp
int3
loop
push
cmp
mov
in
dec
jl
notl
inc
std
xchg
jne
addr16
xchg
cmpsb
sbb
andb
xlat
fstl
xacquire
ljmp
mov
xchg
fimull
dec
test
pop
stos
popa
adc
jae
repnz
xchg
push
outsb
ss
mov
xchg
outsb
sub
push
mov
in
jmp
repnz
lret
and
pusha
dec
mov
insl
lods
jmp
in
xchg
adc
js
shlb
add
sub
adc
mov
push
mov
rcrl
xlat
pop
xor
and
xor
pop
popf
dec
gs
enter
cmp
xchg
add
inc
inc
sbb
xchg
cmpsl
loopne
gs
mov
dec
test
jg
or
jo
mov
push
push
scas
mov
jbe
xchg
push
mov
xchg
jno
sub
mov
pop
push
int3
cmp
pop
jg
out
fldenv
loope
inc
rolw
dec
lea
imul
inc
xor
fiaddl
call
or
sub
in
dec
jge
repnz
push
xchg
lock
sbb
arpl
pop
out
out
sahf
aas
sub
gs
test
cmp
insb
lahf
push
fadd
lret
data16
test
sbb
jnp
mov
gs
inc
mov
mov
add
sbb
in
pop
mov
inc
push
xchg
jmp
and
push
dec
jp
fldcw
inc
cmp
xchg
popf
cwtl
and
mov
add
fidivs
or
mov
insb
jmp
pushl
xchg
jg
rol
pop
mov
fmulp
mov
lods
add
popa
andb
xor
add
cld
cmp
jae
fdivrl
dec
xchg
lods
jl
pop
jo
stos
lahf
jbe
cmp
dec
loopne
mov
mov
movsl
shlb
mov
push
lcall
mov
xor
fdivr
lahf
in
or
sub
sub
adc
add
ret
adc
mov
imulb
pop
mov
scas
adc
mov
sub
sub
jne
pop
test
pop
stc
std
insl
int
dec
aam
mov
pop
xlat
stos
int
in
bound
xor
imul
jne
mov
mov
add
dec
push
mov
sti
jg
jne
scas
lret
jecxz
sub
cltd
inc
cmp
xor
mov
popa
cld
in
ret
or
or
mov
xchg
icebp
pop
xor
mov
or
mov
aad
gs
repz
sub
movsl
in
das
testb
mov
lahf
aaa
loope
push
add
and
movsb
jl
les
call
fcomip
pop
clc
js
pop
xchg
test
sbb
stc
sti
mov
mov
dec
jge
mov
nop
adc
out
cmp
arpl
pop
xlat
aam
add
out
movsb
dec
add
and
inc
mov
decl
insl
jg
lods
pop
pop
pop
pop
outsl
mov
mov
insl
cmp
loope
xchg
ds
js
cmp
inc
dec
sub
inc
lcall
loopne
movsb
stos
sub
rorb
movsl
mov
jg
into
mov
jne
lcall
out
lods
fildll
sahf
pop
sbb
fldl
adc
adc
and
adc
jno
mov
pusha
incb
sub
pop
je
dec
loopne
sbb
insl
out
mov
es
cmp
int3
sbb
sti
int
lret
mov
sar
addr16
call
scas
adc
test
xor
or
lods
dec
gs
sarl
test
add
push
xchg
ja
aad
rcrl
jle
xor
mov
xor
mov
stos
xlat
cwtl
dec
and
mov
sub
cltd
arpl
or
mov
mov
repnz
mov
cmpsb
mov
and
jg
xor
leave
loop
stos
lock
mov
imulb
pop
dec
jecxz
pop
shl
mov
outsb
es
sub
xchg
lock
aad
sbb
pop
cmc
test
cmp
stos
dec
sbb
test
pop
sbb
nop
les
inc
in
ja
insl
push
inc
sahf
xor
fistpl
cmpl
jge
dec
fwait
xor
lods
add
push
mov
mov
sti
scas
test
test
push
jge
adc
xchg
test
sbb
inc
out
or
inc
jo
adc
jle
jp
in
or
xlat
je
movb
jo
pop
sub
xor
fisubl
in
out
sbb
cmpsb
inc
jo
sti
sbb
imul
sub
xchg
pushf
sbb
add
pop
push
idiv
lcall
data16
mov
adc
sti
outsb
xchg
pop
xor
arpl
repz
test
loopne
dec
das
add
movsl
add
inc
pushf
pushf
xchg
inc
mov
clc
je
frstor
jecxz
pop
ret
xchg
lcall
sub
ret
inc
sbb
xor
jp
pusha
push
lock
xchg
enter
loope
sbb
and
or
addr16
in
addr16
cmpsl
out
jmp
add
insb
dec
pop
icebp
shlb
mov
add
sub
push
rcr
inc
mov
adc
xor
mov
loope
fnstenv
push
pop
cmp
mov
mov
ja
xchg
imul
xchg
jo
pop
clc
mov
mov
add
stos
dec
pushf
arpl
pop
push
js
adc
jg
xchg
push
jns
inc
jae
fwait
aas
sub
xor
ja
out
test
add
and
sbb
push
lret
icebp
sub
gs
mov
imul
subl
aad
scas
movsl
pop
out
bound
leave
adc
sbbl
mov
mov
daa
xchg
scas
sbb
mov
pop
push
fs
inc
mov
mov
inc
mov
or
cmp
into
aaa
xor
pop
ss
jo
xor
test
test
ret
cmc
push
jp
mov
ja
in
push
dec
out
fnsave
push
sarl
push
and
and
rolb
jge
aaa
ljmp
cli
out
popa
jns
mov
or
enter
gs
xor
add
pushf
inc
or
xchg
mov
sbb
test
mov
lds
lds
jecxz
test
jae
mov
dec
cs
cmp
xchg
sub
and
sarb
push
and
js
jmp
cmpsb
loop
pop
xchg
leave
loope
stos
mov
shlb
aad
inc
loopne
jbe
test
pop
int3
lahf
cld
dec
cmp
xor
push
add
pop
jmp
cmp
jmp
mov
loopne
in
jmp
mov
cli
xchg
jle
mull
pop
pop
push
sbb
pop
jmp
dec
pop
fldl
mov
sbb
jp
je
xor
or
cli
dec
in
cltd
clc
aas
add
mov
lcall
inc
adc
clc
pop
add
push
xchg
and
sbb
mov
jmp
jp
or
push
push
out
addr16
sqrtps
adc
inc
std
imul
push
out
push
lcall
adc
add
decb
imul
push
dec
sbb
pop
imul
jns
imul
sbbl
in
xchg
pop
xchg
bound
fdivs
mov
xchg
jg
insb
lret
in
add
mov
or
cmp
mov
lea
inc
mov
call
out
sbb
adc
mov
dec
mov
sub
js
mov
add
sub
aam
adc
jge
repnz
add
mov
xchg
mov
or
hlt
mov
dec
nop
push
je
int3
xchg
xchg
stos
inc
mov
pushf
push
les
in
mov
ljmp
push
pop
decb
scas
xlat
mov
pop
outsb
pop
jle
dec
aaa
pop
inc
cs
ds
ja
xchg
xchg
cmpsl
into
mov
scas
xlat
mov
pop
outsb
pop
jle
dec
aaa
pop
inc
cs
ds
ja
xchg
xchg
jle
dec
mov
scas
sarl
out
negb
cs
xor
cs
arpl
inc
push
lahf
out
mov
faddp
scas
mov
pop
outsb
call
sub
cmpsb
ffreep
cwtl
icebp
mov
sub
orb
sbb
es
mov
and
push
clc
inc
enter
sub
sbb
dec
lock
loopne
adc
and
xor
nop
enter
sub
sbb
dec
call
fwait
cmp
inc
cwtl
and
adc
pusha
ja
pop
jmp
mov
outsb
mov
mov
xor
jbe
mov
fdivrl
pusha
int
rcll
xchg
pop
js
mov
movsl
push
ja
and
aad
adc
js
xor
pxor
jecxz
or
or
xchg
in
rorb
test
mov
pusha
sub
cmp
dec
lock
add
test
pop
and
shl
fists
add
or
test
popa
call
lock
lret
mov
out
add
cmp
int
jo
lahf
aad
pusha
lret
mov
imul
pop
insl
call
dec
adc
and
jne
lea
cmp
push
jmp
mov
cmp
dec
clc
push
enter
imul
jno
push
pushf
pop
lea
gs
jmp
jo
or
insl
shlb
cmp
mov
imul
arpl
and
add
shll
and
js
dec
lock
loopne
adc
and
push
clc
inc
enter
sub
sbb
dec
lock
loopne
adc
and
push
clc
inc
enter
sub
aaa
mov
in
jp
mov
xchg
sub
sub
sti
inc
lds
call
inc
sbb
imull
cmp
daa
ss
call
and
mov
pop
push
scas
jl
mov
cmc
ja
push
mov
inc
shll
fbstp
inc
dec
sbb
jnp
les
notb
and
je
pusha
inc
fwait
pop
push
push
xchg
fists
aaa
test
xchg
or
adc
cltd
xlat
jnp
xchg
shrl
cmp
xchg
adc
adc
cmp
mov
jmp
sbb
pop
je
into
jp
or
xchg
add
sbb
movsl
xchg
push
aaa
not
xor
cmp
inc
fs
or
mov
jge
hlt
pop
or
scas
cmp
inc
add
loop
jnp
xor
dec
jge
in
shll
filds
sbb
cs
movsl
pushf
aaa
clc
in
mov
ret
mov
mov
lock
mov
insb
and
ss
mov
shl
cmpl
sahf
and
out
std
mov
sub
dec
jb
xlat
mov
jg
repnz
push
data16
fcmovne
mov
aas
pop
addr16
and
in
nop
mov
call
adc
hlt
imul
mov
test
lret
and
pop
cmp
xchg
inc
jae
pop
and
mov
repnz
ror
dec
push
adc
adc
pop
adc
lods
ds
mov
popa
jge
enter
fucomi
out
cmc
jns
jp
movsl
repnz
out
stos
lds
out
enter
icebp
sub
outsl
add
lock
adcl
je
mov
ret
push
mov
adc
test
or
movb
mov
mov
push
push
test
add
jno
loope
xchg
fcomps
sub
rolb
mov
sarb
pusha
pusha
pop
pop
into
mov
mov
mov
mov
mov
mov
incb
or
push
in
arpl
xchg
pop
and
sub
xchg
mov
pop
adc
dec
pop
sbb
mov
int
repz
pop
mov
arpl
sahf
sub
rolb
stos
imul
out
cmpsb
inc
adc
dec
mov
lret
push
add
arpl
in
jo
mov
mov
sbb
in
lret
sbb
xlat
xchg
xor
rorb
mov
gs
out
adc
push
fnsave
sbb
inc
mov
mov
insl
inc
in
out
addb
test
xor
jl
and
xor
movsl
fcomps
fistpll
dec
subl
cmp
and
mov
js
adc
inc
add
ja
sub
mov
cmp
cs
ret
jnp
or
adc
rcl
int
shrl
rorl
idivl
pop
pop
and
cld
out
dec
stos
sbb
jle
and
inc
daa
idiv
lret
adc
dec
insb
sbb
hlt
pop
test
push
or
aad
adc
cmp
xchg
pushf
pop
fisubrl
cmp
add
cs
addps
pop
sbb
jnp
cld
pop
test
xchg
or
pop
cmp
loop
popa
pop
sub
sub
inc
sbb
decb
cmp
out
add
sub
or
mov
pop
jo
adc
jae
xor
std
mov
rolb
sub
aam
mov
or
scas
cli
push
int
sub
shrb
repnz
sub
mov
divl
mov
sbb
mov
dec
mov
sbb
into
cs
movl
fldt
mov
rcr
push
jo
adc
arpl
fisttps
push
jbe
pop
cmp
aad
dec
popf
mov
daa
mov
lock
and
sub
movsl
fstpt
xchg
jp
or
arpl
dec
in
aas
jae
jl
cs
push
repz
rcrl
cmp
sbb
pushfw
repz
pop
or
mov
clc
shll
inc
sbb
jno
imul
or
dec
cmp
daa
mov
mov
lds
jb
gs
test
test
xor
in
mov
test
or
adc
mov
pop
imul
call
or
dec
test
jle
lret
push
cmp
daa
les
jae
lret
cmp
es
xor
scas
leave
jnp
cmp
push
xor
add
lods
pop
xor
jne
psubq
pushf
cltd
out
pushf
adc
or
lods
cmpb
and
sbb
jg
dec
sbb
dec
mov
mov
mov
aad
insb
push
mov
xchg
test
mov
sahf
adc
aas
xchg
sub
lea
outsl
cs
or
incb
jns
test
mov
xchg
xor
cli
aam
sbbl
aam
jmp
lcall
loope
sub
mov
clc
dec
lret
sub
or
adc
faddl
stc
movsb
xor
push
sub
dec
sbb
mov
mov
mul
xlat
test
sarl
adc
add
ret
ja
xchg
lods
jle
ficoms
fdivr
loopne
incb
push
jg
sbb
aad
push
iret
nop
movsl
mov
adcl
push
jbe
inc
xor
mov
mov
lret
xchg
inc
cmp
inc
aas
inc
lret
adc
add
xor
mov
popa
mov
cltd
mov
add
mov
fimuls
cmp
test
dec
flds
lds
cmp
enter
movsl
xchg
loopne
jne
out
lods
push
les
mov
jns
sub
pusha
pushf
mov
push
jb
lock
fstpl
lret
adc
jae
push
out
mov
sbb
rcll
data16
cmpsb
stc
push
popa
fcomi
aas
lock
mov
ret
jmp
sahf
std
sti
fsts
push
mov
hlt
xchg
call
adc
add
jle
jle
dec
or
xor
cmpsb
sahf
into
aam
add
cmpb
or
je
mov
leave
movaps
out
push
in
int3
and
lret
mov
pop
inc
loop
dec
pop
sti
pop
push
push
ljmp
pop
mov
popf
es
push
scas
and
mov
popa
xchg
pushf
std
adc
rcl
xor
jae
daa
xchg
clc
test
xorb
pop
inc
fildl
mov
push
jo
inc
int
add
pushf
lods
mov
push
fbld
jmp
pop
mov
inc
inc
es
outsl
popf
or
outsb
mov
mov
sti
xor
push
lods
adc
fldl
mov
and
test
cmp
or
sub
mov
sub
dec
pop
call
pop
hlt
jbe
add
and
icebp
cmpsb
cmpl
xchg
rol
cmp
in
and
cmp
pop
outsl
pop
sahf
bswap
outsl
xchg
adc
dec
imul
pop
pushf
fistps
mov
ljmp
push
adc
or
or
jo
jge
lds
mov
in
vphaddubw
fisubrl
xor
in
mov
sbb
insl
pop
sti
outsl
in
jmp
push
jge
rcl
sub
mov
lods
or
dec
sahf
push
pop
add
xchg
into
push
psubusw
xchg
leave
pusha
imul
ljmp
std
es
jecxz
inc
mov
movsl
cli
cmpsl
xor
sub
enter
xchg
fidivrl
mov
add
insb
jns
insl
dec
adc
inc
mov
adc
jo
inc
fstpl
fwait
inc
es
sbbl
jo
xchg
dec
gs
out
mov
in
xchg
mov
add
add
xchg
mov
out
ds
pop
mov
pop
and
add
push
or
fisubs
fcoml
inc
js
sbb
stos
bound
pop
out
movsl
cmp
cmp
xchg
xor
xchg
cld
lcall
cmp
mov
lock
xor
inc
jo
fcoms
jecxz
insl
imul
and
shlb
rol
incb
pop
push
push
popa
or
test
xchg
jecxz
pop
cmp
scas
push
aaa
mov
cli
rcrb
pop
pop
test
lea
std
je
xor
or
pop
inc
jge
mov
mov
inc
xorb
lret
fmuls
lcall
ss
push
movsl
je
test
jge
push
jne
bound
jb
cmp
jns
ret
and
mov
mov
test
ret
and
dec
pop
add
dec
sbb
ror
pop
int3
push
les
push
and
testl
mov
inc
mov
sub
aad
pop
outsb
xchg
int
inc
push
pop
jne
xchg
movsb
add
ljmp
ljmp
cmpsl
add
push
out
jns
xchg
mov
and
lock
inc
sbb
mov
fwait
pop
out
jge
or
insb
push
jg
sahf
pop
pop
clc
in
and
outsl
mov
andl
or
fsubrl
pusha
test
movsl
and
test
scas
or
pop
fisubs
popa
adc
sbb
push
mov
popf
fwait
jle
dec
sbb
dec
or
loope
call
add
add
lret
mov
fcmovnu
addr16
std
scas
cmc
scas
imul
and
dec
xor
outsl
push
add
adc
outsb
arpl
aad
adc
push
aam
std
mov
jmp
sbb
pusha
aam
dec
inc
mov
adc
fcom
push
xchg
movsl
stos
mov
and
movsb
in
mov
out
loop
mov
dec
sub
cmp
mov
stc
int
inc
pop
fstp
mov
add
fisttpl
jmp
adc
ret
xchg
stos
stos
arpl
les
ret
pop
cli
imul
adc
outsl
push
sub
ret
push
xor
xor
bound
lods
dec
and
pop
pushw
pusha
lcall
xor
pop
scas
aas
popa
js
popf
je
dec
inc
xorb
int
incl
cli
clc
jmp
lcall
mov
test
mov
movsb
push
stos
push
pop
outsl
repnz
fidivl
addb
popa
dec
mov
jb
cmpsb
jmp
rcl
popf
jo
xchg
fsubrs
push
movsl
dec
std
or
pop
mov
int
jno
je
xchg
and
push
fwait
xchg
push
mov
sbb
out
add
mov
add
int
cmp
xor
adc
or
insb
stos
pop
sarl
lea
mov
andl
or
pop
stc
movsb
xchg
dec
idiv
das
sahf
test
dec
cmp
loope
call
push
inc
das
mov
sbb
pop
out
nop
pop
inc
mov
jnp
xchg
insl
jo
shr
jl
cmp
mov
jns
sub
push
lods
or
jl
inc
push
and
add
xor
es
popa
inc
cmp
mov
xor
cmpl
sahf
push
js
cld
and
mov
sbb
jle
ror
stc
pop
lea
jmp
jecxz
mov
imul
loop
mov
jb
repnz
mov
test
mov
push
and
out
mov
xor
enter
cmpsl
cmp
dec
xor
mov
sarb
mov
loopne
adc
add
pop
rcr
cltd
lds
jne
les
cltd
push
stos
mov
jbe,pn
movsl
fidivl
pop
push
xor
or
orl
outsb
ja
jecxz
into
push
fstps
sahf
shlb
mov
xor
cmp
or
mov
test
and
or
jmp
sbb
sub
mov
sub
xchg
stc
dec
adc
sub
insb
lcall
enter
mov
push
push
sbbb
sub
xor
adc
jns
lea
add
mov
and
ds
dec
jnp
pop
mov
push
repz
jl
push
pop
arpl
je
movsl
jg
inc
jp
push
pop
loope
ficomps
pop
xchg
jo
push
shll
outsl
xor
mov
bnd
out
ret
xchg
repnz
ja
jne
pop
fidivs
shl
out
vpmaxub
jbe
decb
adc
adc
sub
cs
sarb
inc
cmp
add
lcall
inc
xor
cmp
and
arpl
es
cmp
lret
sbb
addr16
scas
add
clc
les
sub
jl
cs
repz
mov
out
or
add
lahf
sub
push
mov
aad
push
out
sub
xchg
fildl
add
xor
rcl
adc
in
daa
jo
inc
outsl
or
xchg
lret
enter
popa
ss
ret
cwtl
xchg
lds
in
rorl
sti
cmp
xchg
cmp
add
sahf
fs
cld
mov
test
xchg
sbb
mov
imul
in
inc
out
xor
sbb
push
repnz
fimull
add
xchg
test
mov
xchg
inc
insl
enter
decl
add
xor
push
pop
push
ss
lods
in
pop
mov
sub
xorb
cli
fwait
movsl
js
push
xlat
jne
mov
out
mov
lock
add
cmpsb
pop
lods
aaa
cmc
out
cli
mov
sti
adc
gs
loope
dec
xor
lods
lds
add
sbb
add
sbb
je
dec
mov
xor
cmp
mov
out
aas
xor
and
scas
sahf
push
cmc
in
out
mov
cmp
mov
and
pop
daa
movsb
inc
mov
mov
scas
mov
or
outsb
sbb
incb
mov
int
aaa
jne
cld
dec
arpl
in
or
shrb
pop
es
mov
in
pop
sub
rolb
inc
leave
dec
jbe
sbb
mov
mov
int3
fucomi
mov
inc
jp
fwait
xchg
jp
and
sbb
mov
call
stc
cli
in
pushl
inc
push
pop
lcall
sub
xor
xchg
movsb
ret
sub
jb
push
adc
jb
int3
cwtl
inc
lret
aas
add
jl
nop
push
pop
es
push
cmp
mov
jb
sti
pusha
dec
rcll
loopne
call
xor
inc
inc
out
mov
sbb
data16
add
fisubrs
inc
mov
cmc
inc
icebp
jp
into
scas
inc
fisttpl
imul
cmp
test
and
lds
push
ret
mov
sbb
test
add
inc
out
popf
popa
add
xchg
adc
mov
sbb
inc
or
mov
popa
mov
test
sti
out
fsubl
out
sbb
xchg
jecxz
xlat
fwait
imull
xorl
xorb
mov
outsl
cmp
push
aam
loope
test
lods
sub
popf
xor
insb
ret
pop
loop
pop
std
mov
orb
jae
or
ljmp
shlb
cmp
push
ljmp
popa
cmp
pushl
lahf
xchg
outsl
aas
es
xor
and
les
std
mov
mov
mov
cmc
pop
and
xchg
dec
jp
repz
jmp
xor
push
gs
arpl
call
sub
mov
shl
pop
xchg
mov
adc
mov
mov
fisubs
push
cmp
aaa
mov
lea
xchg
jmp
xchg
xor
jne
xor
mov
es
adc
jne
pop
and
push
inc
sti
bound
cmc
inc
mov
sub
out
dec
iret
fldenv
mov
sahf
adc
push
shll
enter
mov
outsb
popa
xchg
adc
mov
insb
mov
sbb
jp
daa
fwait
sahf
xor
push
mov
iret
add
outsb
in
sbb
jle
cwtl
add
hlt
jnp
push
mov
mov
stos
ds
shlb
push
adc
push
out
mov
push
je
sahf
lret
cmpsl
xor
pushf
test
inc
adc
lcall
loope
fbstp
xchg
jecxz
rcl
push
mov
inc
add
js
divb
pop
sbb
out
cmp
insl
je
mov
ja
insb
cmpsl
pop
negb
sbb
add
movsb
in
in
int
add
outsb
xor
or
and
sbb
outsl
lahf
mov
daa
inc
jnp
lods
cld
aaa
rorb
or
mov
dec
dec
xchg
test
lret
jl
adc
jecxz
sbb
aad
in
lahf
imul
mov
insb
xchg
push
aaa
ljmp
test
into
stos
jle
imul
pop
xor
mov
cmp
stos
mov
js
mov
sbb
xchg
ja
push
dec
push
push
push
mov
je
loope
cmp
in
dec
add
add
pop
clc
insl
inc
test
sbbb
sub
jl
insl
cmpsb
push
stos
jl
xchg
jbe
mov
imul
xchg
test
jmp
cmp
or
xchg
and
aam
lods
cmp
stos
inc
test
jns
stos
ja
adc
mov
in
fstps
lea
ja
jp
test
inc
cmpsl
push
hlt
loop
test
mov
xor
fwait
aaa
or
sbb
sub
aaa
dec
pop
push
or
adc
cli
mov
xor
lgs
mov
mov
loope
mov
addr16
or
inc
lods
mov
es
in
andb
mov
cmc
xchg
stos
mov
dec
rcll
scas
xor
repnz
push
fidivrl
jle
inc
fs
xchg
test
inc
repnz
lret
cwtl
jl
std
arpl
subl
pop
loopne
pop
mov
dec
repnz
mov
lods
and
loope
inc
bound
pop
pop
inc
out
mov
or
cmp
cmpsl
inc
mov
add
inc
test
jae
mov
ja
xor
inc
pop
in
lret
fstpl
add
repz
jge
sub
sbb
xchg
inc
andl
les
scas
mov
adc
push
cmp
jl
mov
inc
ds
sete
jmp
lds
jae
in
sub
lods
xor
inc
pop
inc
jo
mov
sub
mov
jae
out
pop
pop
fldlg2
insb
inc
xor
rcrl
jmp
addr16
jne
in
adc
xor
cltd
inc
fsubrl
adc
rorl
scas
scas
xchg
orb
imul
das
push
mov
jecxz
ret
pop
fidivs
and
mov
loope
and
add
pop
in
or
sbb
out
xchg
lcall
or
sbb
xchg
rclb
insl
xor
adc
push
ljmp
das
mov
xor
cwtl
pop
mov
cli
into
mov
sub
fistps
mov
mov
testb
imul
sub
shlb
cwtl
fsubrp
add
outsb
fldl
jnp
add
jbe
addr16
mov
rcrl
lret
pop
mov
mov
xor
mov
mov
mov
lcall
fidivrs
dec
stos
mov
sbb
jmp
jae
xchg
xor
icebp
jl,pt
push
xorl
xor
add
sti
push
pavgw
or
mov
cld
sti
xor
imul
and
mov
jne
xor
inc
sti
or
jle
mov
bound
addr16
jmp
dec
pop
stos
aas
xchg
xor
mov
aas
xlat
add
call
mov
fstl
les
aaa
in
popf
das
movsl
inc
call
push
scas
rcll
or
in
jnp
mov
or
fcoms
notl
dec
sub
xchg
push
out
pop
mov
rcll
adc
inc
jmp
sarl
dec
daa
mov
sub
cld
pop
hlt
push
sbb
cwtl
xor
xchg
mov
lahf
jmp
inc
out
push
sbb
pop
cmp
lahf
pop
or
mov
xor
push
mov
gs
jne
mov
lcall
mov
mov
pushl
push
mov
xor
mov
xor
lret
pop
push
out
mov
cmpsb
pop
popa
sbb
xchg
adc
test
inc
dec
or
std
cmpsb
pop
mov
mov
negl
sub
mov
sub
pop
pop
push
into
leave
or
out
lea
xchg
or
fisubl
or
addr16
cli
jno
mov
mov
cwtl
arpl
mov
out
cmc
adc
sbb
mov
scas
cmp
xchg
mov
push
cli
cmp
rol
add
repnz
dec
fistl
xor
lret
aam
xlat
lods
mov
testl
sbb
mov
add
mov
cli
mov
jbe
addb
sarb
dec
lock
loopne
adc
and
push
clc
inc
enter
sub
sbb
dec
lock
loopne
adc
and
push
clc
inc
enter
sub
sbb
dec
lock
test
mov
and
push
clc
inc
enter
sub
sbb
dec
lock
loopne
adc
push
cwtl
fmuls
lahf
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
stos
inc
mov
sbb
inc
fcmovnbe
sub
cmp
or
sbb
movsb
pop
push
stos
inc
mov
adc
add
xor
and
aam
les
orb
sbb
movsb
pop
push
stos
inc
mov
adc
add
xor
and
aam
les
jnp
sbb
cmp
pop
cli
cs
stos
inc
iret
pop
out
push
ja
sub
fistpll
push
aaa
push
outsb
cmp
mov
pop
insb
xchg
mov
fbld
jmp
add
rcl
and
popa
sbb
xchg
lock
pop
cmpsl
lods
mov
in
testl
lret
jmp
lds
push
mov
xor
or
pop
adc
add
adc
lret
mov
sbb
jns,pn
ret
cmp
sub
xor
pop
pop
scas
jmp
add
xor
les
cmp
imull
sbb
mov
stos
jl,pn
xor
add
sub
mov
mov
int3
pop
or
fs
adc
add
xor
and
aam
les
hlt
or
sbb
movsb
sbb
adc
add
js
dec
mov
xchg
inc
rclb
mov
push
in
add
leave
lock
ljmp
push
mov
xor
and
mov
push
mov
mov
adc
movsb
xor
sbb
xchg
xor
and
aam
les
hlt
or
sbb
movsb
pop
push
stos
inc
mov
adc
add
xor
and
aam
les
hlt
or
sbb
movsb
pop
push
stos
loope
iret
jns
dec
into
cs
lea
jmp
mov
sbb
mov
adc
cmp
push
hlt
cmp
dec
add
add
negb
mov
push
pop
mov
loop
aaa
gs
mov
push
gs
cmp
pop
dec
stos
dec
lds
mov
inc
daa
cs
jb
out
xlat
icebp
adc
xchg
fdivrs
loope
cltd
in
jle
leave
or
rclb
add
fsubl
cld
out
rcll
lahf
arpl
inc
aam
push
pop
adc
fcomps
ja
jl
arpl
leave
outsb
ret
iret
or
fwait
in
and
or
jecxz
and
lret
call
or
je
cmpsb
lods
ret
out
or
mov
nop
enter
bound
mov
out
ret
and
pop
mov
push
jae
aas
xor
gs
sub
add
jnp
inc
call
push
mov
mov
pop
rorb
jge
sbb
jae
pop
pop
add
jp
in
add
xorl
lret
aaa
cli
movsl
add
or
and
push
xor
or
fsubl
insb
mov
fwait
sti
jecxz
nop
mov
inc
xchg
loopne
lcall
aam
jb
add
scas
adc
call
fsubrs
jmp
and
cmp
das
or
ljmp
adc
aas
pusha
subb
inc
sbb
ss
gs
loope
inc
push
sub
rcll
fwait
ljmp
xchg
ss
push
int3
sbb
dec
mov
push
push
mov
jns
add
stos
sbb
int3
mov
imul
lcall
pop
mov
imul
pop
mov
stc
dec
fchs
sub
or
outsb
aam
fidivl
xor
xchg
inc
fmuls
or
xor
stos
lods
loop
mov
cmp
mov
push
or
xchg
xlat
push
dec
dec
mov
jp
jle
lret
add
outsb
push
push
in
les
xchg
loopne
stos
sub
xlat
push
mov
outsl
lods
iret
fidivs
dec
pop
mov
das
jg
jns
loop
fstpt
mov
outsb
std
and
mov
movsb
daa
je
push
mov
jg
movsl
pop
repnz
jp
lcall
call
divb
mov
scas
push
pop
outsb
or
shl
inc
in
push
and
aas
mov
xor
dec
push
test
xchg
bound
and
mov
mov
push
jp
sbb
sbb
sbb
imul
outsb
ret
outsl
and
std
mov
sbb
jecxz
ret
les
out
repnz
repz
jb
repnz
jnp
or
mov
cmp
jbe
fwait
ret
cmp
mov
mov
pop
mov
pop
pop
and
pop
mov
js
popf
in
cld
sarb
or
adc
sub
mov
test
jo
inc
insb
or
int3
nop
add
xor
mov
fcmovnu
dec
fwait
and
pop
mov
ja
sbb
and
mov
outsl
sbb
add
dec
dec
push
cs
fnstenv
test
cmp
jnp
mov
inc
stc
movsb
lret
xchg
idivl
xor
push
push
jae
and
jo
in
test
or
dec
push
les
sbb
rol
push
pop
jno
push
loop
jno,pn
jo
add
and
movsb
shlb
push
lret
mov
pop
loope
sub
push
jmp
jmp
nop
sub
pushf
test
jns
or
cli
mov
jp
mov
fcompl
mov
inc
lods
jmp
push
cli
or
push
or
frstor
cld
xor
loop
arpl
sbb
imul
fwait
mov
in
fnstcw
iret
push
orl
adc
sub
dec
sti
pop
and
cld
sbb
xchg
mov
jp
push
imulb
inc
out
sahf
sub
popf
pop
aam
cld
cli
dec
jle
lds
or
stos
enter
push
hlt
dec
mov
nop
push
inc
push
add
fisttpl
filds
les
outsb
and
cltd
push
or
rorb
mov
mov
pop
test
scas
test
push
fldl
xchg
sub
inc
inc
push
fdivl
lahf
imul
fiaddl
test
js
lea
fs
cmc
cmp
sar
clc
sub
in
push
add
cmp
lods
pop
repnz
pop
out
das
stos
lea
shrl
dec
push
fidivrs
into
mov
jmp
sub
add
adc
sbb
sbb
into
sub
insl
dec
pop
dec
aad
ret
cs
rcr
or
add
insl
test
push
mov
xor
or
lods
jne
push
pop
jmp
aad
cltd
mov
inc
in
dec
jge
sub
ja
lock
jb
xor
add
xchg
push
cvttps2pi
mov
pop
out
ljmp
xchg
popa
pop
jne
pop
push
fisubrs
popf
jo
push
stos
push
mov
pop
stos
sbb
fs
and
int
xor
mov
arpl
sbb
jbe
stos
subl
in
add
jbe
les
xchg
mov
mov
inc
ficompl
test
pop
sbb
ret
mov
aam
inc
or
push
inc
aad
inc
inc
jmp
cmp
xchg
ss
and
dec
sbb
xchg
scas
hlt
jge
lret
adc
movsl
dec
das
mov
inc
pop
push
daa
sbb
clc
mov
stos
sub
xor
cmp
pop
dec
rorl
imul
into
or
xchg
sbb
pop
and
lahf
mov
cmp
stc
dec
movsb
sbb
or
into
and
xchg
daa
lea
test
lahf
xchg
rcr
sbb
or
mov
fld
movsb
stos
in
std
adc
outsb
pop
pushf
sbb
xor
pop
fistpl
mov
jl
inc
fisttpl
fcompl
xchg
pop
sub
jmp
stos
ljmp
cmp
in
lahf
repnz
add
xchg
cmp
cmp
rcrb
repz
mov
pop
or
repz
push
gs
insl
das
inc
lret
push
mov
mov
scas
roll
test
sbb
mov
jno
fsubrl
idivl
adc
fwait
lods
mov
aas
xorl
sub
inc
mov
loope
jecxz
lods
xor
icebp
lods
sbb
mov
mov
xchg
loopne
scas
xor
das
in
adc
out
sub
int
aad
fisubs
add
mov
or
xor
lret
jmp
into
jle
jl
in
pushf
push
movsb
rorl
cmpsl
or
shlb
push
cmpsl
xor
pop
cli
scas
mov
add
pop
test
test
sti
rol
lods
sbbl
sbb
push
daa
iret
and
js
mov
cmp
push
add
jo,pn
or
test
cmp
pop
push
testl
pop
test
cmp
cmc
xorb
adc
and
fdiv
ja
jb
ret
call
mov
pop
pushf
es
scas
jg
cmpb
pusha
fcomip
hlt
cs
leave
xorb
inc
xchg
leave
loopne
test
ret
mov
pop
jns
mov
outsb
push
push
leave
in
nop
movsb
idivl
mov
cs
xor
pusha
dec
mov
fistpll
sub
mov
negl
sbb
icebp
mov
loopne
push
fstpt
lret
jae
pop
mov
jl
or
loope
pop
mov
movsb
cmp
fsubrs
ljmp
es
pop
xlat
pop
jp
aam
or
test
outsl
xlat
pop
xor
mov
sub
cli
sbb
push
into
gs
inc
cmp
lock
cmpsl
fwait
jmp
les
xchg
lods
and
cmp
shrl
xor
adc
pop
jle
pop
stos
add
aas
pop
or
iret
adc
scas
mov
loope,pn
test
int
mov
push
aas
xor
jg
xchg
cmpb
es
test
popf
xor
notb
je
ret
mov
fsubrs
jmp
imul
dec
xchg
mov
shlb
cld
ror
sub
mov
cmp
pop
sahf
mov
mov
jae
xor
cs
inc
sub
cwtl
dec
cmpb
and
push
addr16
cmpsb
fwait
cmp
mov
xlat
and
leave
lea
adc
rcll
adc
mov
test
ljmp
and
mov
xlat
dec
and
or
mov
loop
jnp
int3
iret
imul
and
cmp
es
xchg
or
and
imull
fistps
scas
out
dec
or
mov
incl
into
lds
adc
out
fs
sarl
xor
cmp
xor
cmpsl
cmp
dec
dec
out
in
loopw
shl
pop
dec
in
xchg
iret
ljmp
aaa
leave
or
out
mov
sub
sbb
hlt
stos
xor
es
dec
add
lahf
jp
mov
int3
jb
xor
sbb
and
inc
push
xor
lock
icebp
add
daa
in
sub
push
inc
mov
mov
push
ljmp
push
fwait
sbb
int3
jle
fldcw
add
scas
out
mov
dec
cmp
push
repz
hlt
mov
lds
loope
xor
pop
pop
push
adc
dec
dec
cwtl
lahf
ret
mov
idiv
xchg
jecxz
mov
pushf
ret
mov
fsub
hlt
je
push
pop
popl
mov
sar
pop
mov
in
jnp
and
xor
or
sbbb
cmp
aad
mov
movsb
or
jg
mov
sbb
shll
dec
cmp
les
sub
dec
test
jae
into
movsl
imul
jmp
leave
cmp
fists
in
mov
mov
ljmp
push
and
cs
jb
mov
daa
andb
pop
daa
push
pusha
pop
mov
inc
popf
mov
jmp
xor
inc
and
test
jmp
stc
and
scas
shl
adc
and
dec
push
out
sub
inc
sub
insb
jb
dec
adc
mov
enter
cli
pop
in
jno
data16
or
out
ja
fstl
jp
and
mov
and
sbb
mov
shrl
adc
jb
out
xchg
pop
decb
xchg
mov
add
mov
jno
inc
test
dec
es
xchg
cltd
shrl
inc
aaa
adc
gs
dec
push
jb
je
push
push
push
fsts
cmp
stc
dec
lods
xchg
stos
dec
out
fdivrl
dec
and
leave
mov
mov
mov
push
or
loopne
iret
fsubrl
and
rclb
aaa
in
add
fcmovne
fimull
cmpl
cmc
sub
inc
dec
add
js
mov
inc
cli
push
es
inc
loop
or
jae
or
fisttpll
push
jno
das
cmp
mov
cmpsb
jp
dec
and
or
mov
addr16
test
orl
or
shlb
mov
xchg
hlt
clc
jbe
outsb
cli
adc
or
insb
sub
sbb
sub
dec
push
clc
or
cmp
sub
rcll
jne
sub
repz
mov
cld
dec
pop
xor
jbe
testb
inc
or
dec
std
je
mov
cmpl
shlb
mov
es
push
lcall
cwtl
jb
mov
push
xlat
lret
sub
repnz
cltd
movsb
add
cmpsl
repz
jge
jp
cmpsb
xchg
out
inc
jecxz
mov
xchg
sub
sbb
ss
xor
sub
jg
push
and
inc
addr16
xlat
fcomip
or
scas
sub
dec
dec
insb
dec
sbb
mov
cltd
jp
ret
mov
inc
jp
pop
dec
push
mov
pop
xchg
and
mov
mov
push
stc
notb
icebp
or
xlat
test
sti
enter
dec
push
pop
jle
cmp
jb
sti
inc
sahf
jo
mov
cmp
je
mov
dec
mov
push
lock
jo
mov
inc
ror
mov
adc
mov
dec
in
jge
inc
dec
mov
inc
shll
cmp
mov
mov
mov
mov
xor
loope
sahf
mov
ret
lock
or
inc
or
pop
xchg
aad
inc
jns
rcrb
into
test
test
lahf
push
dec
push
push
lods
rcrl
shll
and
ret
arpl
push
pop
lret
fiadds
stc
and
pop
pop
pop
test
push
push
les
jle
iret
mov
push
push
sarb
insb
xchg
or
jmp
aas
test
push
lahf
mov
pop
ds
pop
clc
and
mov
insb
or
lret
repnz
enter
mov
mov
les
mov
iret
hlt
cmp
ljmp
push
popa
lods
daa
xlat
fistl
lret
iret
push
out
addl
nop
loopne
mov
cmpsb
jb
dec
insl
ljmp
imul
movsb
mov
push
and
cli
call
jl
sub
imul
mov
and
jecxz
test
arpl
pop
pop
jmp
roll
stos
xchg
repnz
mov
adc
sbb
xchg
jb
mov
into
pop
cli
mov
lahf
jmp
add
or
dec
into
loope
insl
sub
stos
repz
add
sub
cmpsl
xorb
push
mov
imul
std
adc
or
dec
lret
mov
in
mov
push
pushf
xor
cmp
push
push
push
mov
popf
mov
test
enter
sbb
cmpsb
movsb
mov
std
sbb
out
sbb
jno
call
dec
cld
jl
frstor
pop
or
or
aad
aas
repz
loope
lcall
mov
add
repnz
les
pop
lcall
loope
push
fcom
or
push
xor
ja
mov
xor
inc
xchg
dec
add
gs
bound
fnstsw
mov
scas
fucomip
in
imul
sbb
outsb
cld
xor
inc
imul
imul
xor
loopne
test
hlt
hlt
sbb
fsubp
mov
cmpsb
and
mov
adc
nop
inc
jb
push
and
in
add
pushf
loope
adc
mov
andl
pop
movsb
jmp
roll
inc
loopne
add
mov
push
xchg
popa
push
xchg
out
test
sbb
aaa
jbe
pop
enter
push
out
xchg
sbb
fnstenv
pop
stc
push
or
mov
insl
cwtl
daa
loopne
xchg
adc
mov
pushf
rclb
ret
xor
adc
mov
jns
nop
add
rcll
sub
cmpb
hlt
insb
pop
test
call
fdivrl
cmpsb
xchg
cmp
hlt
mov
cld
cmp
push
out
dec
jbe
rcl
sbb
pop
cltd
pop
xor
mov
ret
icebp
loopne
and
ds
mov
jg
jnp
jne
sub
ret
push
jge
call
movsl
xor
mov
pusha
in
mov
rcrb
and
ret
push
push
pop
push
data16
push
lods
mov
push
mov
out
test
fisttpll
int3
dec
fwait
sbb
fistps
adc
scas
sub
mov
adcb
pop
addr16
psllq
adc
ret
push
addb
mov
out
sar
pop
sbb
pop
or
jbe
sahf
jmp
dec
arpl
xchg
rorl
mov
shll
movsl
into
out
push
daa
mov
and
add
jbe
jo
fs
ret
or
cmpsb
mov
pushf
mov
je
ljmp
test
daa
cli
push
inc
mov
inc
scas
push
adc
cmc
clc
fnsave
out
aad
mov
add
mov
xchg
pop
jbe
lods
je
fxch
gs
or
add
inc
mov
mov
dec
in
cmp
test
mov
and
inc
jnp
flds
and
sbb
popf
clc
dec
pop
cs
jne
out
js
pop
in
pop
jne
fisttps
xor
repnz
iret
mov
gs
imul
std
in
in
lahf
or
movsb
cmp
bound
push
insl
mov
test
dec
dec
inc
adc
pop
vpcmpeqw
push
pop
cmc
cmp
mov
loop
outsl
xor
sti
xchg
movsl
xor
pop
insb
adc
int
cmp
movsl
mov
push
pushf
sub
test
nop
aaa
adc
stc
idivl
cmpsl
roll
std
jmp
cld
add
or
xor
cwtl
xchg
cmp
fdivrs
std
andb
into
rorb
dec
sub
adc
imul
mov
mov
sub
daa
and
jns
nop
or
cmp
mov
ds
enter
cli
mov
sbb
inc
xchg
cmpsl
sbbb
jle
sub
mov
pop
xor
cmp
dec
je
fildll
ss
out
mov
xlat
xchg
nop
lea
dec
das
inc
shrl
pop
pop
xor
out
dec
pop
jno
stos
test
sbb
sub
hlt
sti
cld
or
jb
xor
scas
sub
lock
pop
push
jns
arpl
mov
dec
mov
inc
xor
shll
leave
dec
adc
pop
mov
cmpsl
dec
ss
sbb
scas
movsb
mov
dec
sar
iret
sbb
pop
scas
adc
fbstp
js
sub
cmpsb
mov
push
inc
xchg
lea
hlt
out
xlat
xchg
adc
cli
arpl
loop
movntq
mov
sub
xchg
ret
lcall
lahf
sbb
lock
pop
les
outsb
in
jne
mov
lods
imul
dec
sti
ds
lahf
clc
cmp
mov
lret
ror
cmp
push
lret
in
mov
fwait
lcall
ja
cmc
pushf
insl
pop
les
fmull
mov
fwait
fwait
sbb
lods
sub
xor
subl
jle
dec
fadds
or
adc
push
push
ss
lods
dec
aad
test
ljmp
loop
dec
cmp
movsb
jmp
je
into
test
out
test
xchg
dec
dec
push
mov
ret
nop
xchg
cmp
cmc
jne
in
push
and
call
lock
fwait
dec
push
mov
das
psubq
and
dec
push
jae
jmp
mov
xchg
adc
mov
sbb
or
sub
pop
or
sahf
enter
les
lods
dec
xchg
in
fxch
stos
and
loop
es
push
push
lret
jne
loop
or
lcall
or
lock
lods
gs
loope
das
jg
mov
mov
xchg
arpl
sub
cwtl
mov
out
mov
popa
sbb
jl
clc
push
push
push
fadds
pop
outsb
test
jae
xchg
dec
scas
leave
addr16
ss
mov
mov
das
pop
mov
add
sub
clc
xor
push
aam
sbb
aam
aam
ss
fcompl
or
aam
jp,pn
repz
mov
insl
push
or
ret
adc
jb
sub
lds
cmp
imul
xchg
les
outsb
fistps
and
push
xor
inc
rcll
rol
shl
arpl
mov
lods
xor
xchg
fiadds
and
outsw
call
mov
cmp
add
and
test
dec
pop
andl
in
jecxz
push
repz
sbb
dec
cmp
jae
lods
pop
sub
insb
stos
cld
dec
jl
add
iret
mov
in
clc
push
jp
sarb
push
and
orl
dec
negb
imull
stc
rcrl
adc
fdivl
mov
push
jle
inc
test
push
aam
hlt
sbb
imul
push
cmc
adc
pop
fimuls
int3
iret
xchg
filds
or
xor
sub
cld
fnstsw
jle
inc
cld
ret
inc
out
sbb
xchg
mov
jb
or
dec
imul
ret
inc
lcall
mov
orb
shlb
popa
push
and
jecxz
mov
inc
jae
dec
sbb
push
inc
push
psubusb
pushf
in
dec
imull
mov
adc
add
xor
and
aam
les
hlt
or
sbb
movsb
pop
push
stos
inc
mov
adc
add
xor
and
aam
les
hlt
or
sbb
movsb
pop
push
scas
inc
mov
adc
add
xor
and
aam
les
hlt
or
sbb
movsb
pop
push
stos
inc
mov
adc
add
xor
and
aam
les
jecxz
or
dec
mov
movsb
mov
in
cmc
cmpsl
test
mov
lret
out
cmp
gs
adc
xor
call
cmc
mov
movsl
mov
jb
push
jne
pusha
sub
loope
icebp
aad
in
cmc
mov
movsl
lahf
mov
inc
arpl
add
pop
inc
gs
imul
mov
cmpsb
nop
mov
push
jp
cmpsb
jno
add
test
dec
mov
pusha
adc
pop
icebp
clc
lds
fmuls
push
sbb
inc
aas
mov
xchg
stos
cmpsl
lcall
hlt
popf
test
call
xor
enter
jle
jbe
inc
xchg
push
or
mov
cli
insl
sub
dec
clc
sarb
inc
mov
jo
mov
mov
adc
mov
push
loope
sbb
mov
jp
hlt
cwtl
mov
mov
dec
jne
push
sub
sbb
std
add
das
mov
push
cmpsl
adc
clc
adc
inc
clc
and
call
cmc
test
mov
cwtl
movsl
xchg
mov
inc
jo
inc
gs
jne
add
adc
lds
mov
ret
lcall
dec
sub
es
jge
insl
push
clc
test
lret
mov
hlt
repnz
jp
push
daa
pop
pusha
pop
subl
popa
xchg
test
xchg
mov
xchg
cwtl
movsl
mov
pop
gs
jne
add
or
fsub
enter
test
cwtl
movsl
mov
pop
gs
jne
add
or
orl
rclb
push
sbb
pop
jg
test
jle
sahf
movsl
pop
clc
outsl
sbb
add
and
sub
pop
adc
ds
jno
cmp
mov
je
arpl
addl
pop
push
mov
push
mov
xchg
sub
mov
pop
sub
lea
jle
fnstcw
push
mov
push
jmp
adc
dec
xchg
adc
outsl
xchg
push
jbe
pop
inc
inc
push
std
push
lret
test
mov
loope
pop
les
cs
jg
push
sbb
mov
sbb
sub
hlt
sub
push
sub
cs
xor
shl
into
xchg
rol
adc
fwait
shlb
stos
add
or
xor
mov
inc
das
adcl
xor
mov
scas
mov
shll
shll
jmp
loope
adc
iret
pop
stos
pop
loop
out
movsb
and
mov
dec
mov
sahf
mov
mov
and
pop
xchg
cltd
pop
outsl
sbb
jle
push
jb
pop
adc
addl
dec
mov
rcrb
push
sbb
lods
mov
arpl
xlat
stos
mov
jae
add
jg
decb
out
out
les
mov
jbe
test
sub
jne
inc
daa
dec
adcb
sub
pop
dec
jnp
outsb
inc
into
cltd
ljmp
icebp
pushf
mov
insl
inc
sub
dec
sub
daa
fs
lret
push
fisubrs
into
inc
sbb
cmpsb
stos
insl
call
lods
mov
not
jns
pop
push
fs
fwait
mov
push
shlb
inc
ret
and
popf
mov
dec
clc
cmpsl
nop
mov
pushf
scas
or
fadd
icebp
mov
adc
scas
shll
test
icebp
jmp
insl
cmp
jl
or
mov
sti
cmp
aad
sbb
xlat
xchg
mov
scas
adc
aaa
inc
dec
out
mov
icebp
test
fstl
inc
pop
jecxz
push
test
xor
push
jnp
cmp
fstl
inc
inc
or
addr16
pop
lret
xchg
addl
mov
cmp
mov
xchg
xchg
aad
test
icebp
out
dec
jle
stos
xor
cmp
mov
cmpsb
hlt
or
inc
stos
inc
hlt
add
pop
into
adc
xor
mov
sbb
inc
shll
iret
dec
adc
hlt
into
fidivrs
out
or
inc
sub
xor
shll
mov
jmp
rorb
fnstenv
jae
enter
dec
sbb
push
shll
movsb
fbstp
in
adc
sbb
cmc
ss
xchg
insl
pop
xchg
xor
inc
loope
sub
cs
test
cmp
push
sub
cwtl
push
push
pop
enter
loope
hlt
xor
rolb
mov
sbb
out
mov
popf
das
sbb
sbb
cmp
or
js
testl
mov
cltd
sbb
sub
ret
mov
test
or
out
adc
stc
fildl
clc
inc
push
mov
xchg
cmc
cs
movsb
test
sar
mov
pop
test
inc
aad
cltd
push
test
les
imul
out
add
cmpsb
dec
roll
xchg
movsb
mov
cmp
dec
or
push
ja
call
jg
jecxz,pn
and
and
pop
lcall
mov
or
sbb
sbbb
dec
cli
loopne
push
cmp
out
xchg
sbb
lods
jge
in
out
sub
jne
aam
popa
inc
fs
mov
or
sbb
mov
xor
xor
add
cmp
sbb
cwtl
xor
mov
jmp
loope
mov
xchg
adc
stos
adc
or
push
inc
shlb
movsl
mov
mov
mov
mov
adc
xlat
aam
test
push
in
push
pushf
dec
and
pop
mov
loopne
mov
lock
mov
dec
inc
jnp
sub
leave
adc
or
jns
or
rcll
popf
cli
mov
cmpsl
xchg
push
pop
in
or
mov
and
cmp
pop
and
cwtl
fstl
cli
ret
jl
jbe
sbb
or
aad
dec
icebp
mov
jl
jg
xor
sub
mov
and
xor
int
xchg
sbb
test
rol
inc
lock
pop
sub
loop
ljmp
fs
push
imul
andb
mov
cmp
popf
shr
outsb
enter
push
sbb
inc
arpl
sahf
loop
insl
ljmp
mov
xor
jbe
add
es
lds
or
addr16
add
push
xchg
hlt
mov
cmp
orb
mov
cmp
mov
push
xchg
adc
out
cmpsl
test
test
add
push
cs
jnp
cltd
jle
push
or
shlb
nop
insl
aad
and
jbe
scas
out
jle
push
aas
cmpsl
push
sti
mov
cmp
push
call
lock
inc
adc
aas
adc
fldcw
cmpsb
jle
mov
or
notl
sub
sub
shrb
mov
data16
xorb
and
bound
mov
outsb
mov
sti
and
xor
pop
mov
adc
mov
sbb
js
inc
inc
scas
stos
pushf
push
mov
jle
std
cmp
movsl
xlat
pop
ret
adc
dec
cs
imul
jne
mov
mov
sub
into
in
pop
in
sub
int
dec
data16
jge
mov
dec
daa
pop
sub
les
pop
push
pop
aas
fstl
mov
sbb
les
pop
push
or
jmp
test
in
xchg
dec
mov
rcll
xor
subl
cwtl
sub
sub
scas
cmp
jp
cmpsl
out
arpl
xchg
adc
pop
imul
fwait
mov
loopne
pop
and
push
dec
clc
xor
test
add
stos
sahf
pushf
stc
cld
xor
stos
dec
mov
in
test
mov
lret
gs
xlat
test
out
inc
call
inc
dec
jae
push
sbb
loope
stos
pop
mov
sbb
push
ja
ja
int
inc
push
aad
mov
push
aaa
dec
xchg
aas
ds
outsl
out
mov
mov
pop
dec
lcall
mov
pop
jge
leave
imul
leave
xor
xor
orb
inc
ss
loope
gs
dec
cmp
cld
enter
or
inc
cmp
test
mov
cmpsb
je
sbb
adc
pop
cmp
and
ja
mov
add
xlat
add
adc
fwait
shlb
add
call
mov
cwtl
ret
and
jae
dec
xor
dec
jnp
mov
push
shlb
push
fldenv
popf
inc
cmp
add
les
cmp
mov
cmp
call
cmc
and
pop
xor
adc
mov
add
pop
dec
int
pop
mov
push
fisubs
pop
insb
xchg
lods
mov
push
divl
scas
dec
icebp
popf
mov
cmp
divb
inc
loope
push
int
sti
mov
sub
push
cmp
icebp
mov
xor
cs
shll
cwtl
jo
cmp
push
mov
pop
push
mov
cmpsl
push
data16
mov
lahf
movsl
in
or
adc
xor
insb
jg
movsb
test
lahf
and
loopne
popa
cmp
dec
add
jno
lcall
lock
arpl
daa
xchg
sub
or
sahf
cmpb
sub
lods
push
push
xchg
inc
loop
mov
xchg
fstpl
xchg
inc
sti
subl
insl
repz
iret
add
jno
insb
rorl
loop
xor
mov
mov
jl
bnd
ja
int3
jmp
mov
mull
jns
scas
push
cmp
loopne
and
scas
call
push
lea
xchg
je
into
and
jnp
ret
add
inc
sub
and
push
aam
div
push
mov
jno
fbld
in
mov
rolb
pop
mov
sbb
pop
bound
aam
mul
test
jno
xchg
mov
cmp
push
frstor
popf
lea
mov
fldt
xor
call
ficoml
ljmp
inc
popa
and
xchg
pop
lahf
stos
sub
call
mov
cmp
fistpl
pop
pop
and
xchg
or
fistl
mov
dec
and
hlt
fcomip
lret
jecxz
sbb
jb
cmp
iret
cmpsl
mov
adcb
or
popf
repz
dec
adc
cmc
dec
loop
push
xchg
pop
push
lds
sub
stos
loop
movsb
scas
data16
outsb
cmp
inc
xor
adcb
dec
cmp
mov
cs
test
or
call
fnsave
push
xchg
cli
jno
dec
hlt
cs
xlat
std
hlt
insb
or
xor
mov
adc
jo
adc
lcall
xchg
fcompl
fidivrl
add
repnz
push
xor
les
out
sub
popa
xor
aas
sub
mov
mov
inc
cmpsb
int
pushf
fsts
ss
out
add
inc
loopne
les
cmpsl
repnz
insb
adc
xchg
jge
movsl
rcrb
jp
shlb
adcb
sbb
fwait
cmp
add
add
sbb
pop
ds
repnz
imul
in
cmp
inc
push
lahf
xchg
imul
call
add
add
shrb
insb
aaa
xchg
pop
fisttpl
cmp
int
fwait
and
daa
adc
jbe
inc
sar
mov
imul
mov
cltd
mov
pop
jb
mov
enter
inc
arpl
jbe
inc
inc
dec
repnz
lret
daa
sub
loop
inc
fnstcw
xor
jb
adc
aaa
addr16
add
cld
push
cmp
jne
sbb
call
aas
jmp
aas
jmp
arpl
fstl
sub
jne
xchg
jo
sti
pop
icebp
jg
xchg
or
enter
fimull
mov
scas
ja
cmp
add
inc
scas
cmc
jnp
mov
push
xchg
sbb
andl
adc
int
sub
pop
adc
jns
jb
mov
into
orl
into
adc
insl
iret
test
mov
sbb
mov
push
fisttpll
add
out
loope
inc
sahf
inc
sub
insl
jne
pusha
sub
jno
sbb
dec
outsl
cmpsb
outsl
sbb
pop
int
xchg
cmp
push
das
imul
inc
adc
inc
fdiv
bound
mov
repz
pop
mov
pop
cmpl
fnstsw
add
xchg
stos
sbb
xchg
dec
mov
test
mov
lret
js
adc
mov
js
shll
imul
inc
push
cmp
lret
filds
mov
jge
mov
pop
ret
sub
fisttps
sarb
arpl
lds
hlt
out
xchg
test
loop
not
mov
cmpb
ja
stc
add
xchg
arpl
in
sub
imul
shlb
and
cmp
icebp
aaa
aad
add
xchg
jle
inc
leave
adc
cltd
nop
xchg
dec
ja
out
mov
adc
xor
shll
and
pusha
push
xor
push
dec
fcoml
rcr
inc
imul
mov
popl
push
xor
pop
cmp
xchg
xchg
call
sbb
sub
jne
lods
push
push
pop
cmp
jl
or
cmp
sub
lods
popa
xor
pop
test
shrl
mov
repz
sub
dec
pop
js
js
adc
sub
jne
fs
pop
lea
adc
adc
into
cltd
imull
fnstcw
or
mov
add
clc
ljmp
insb
jecxz
add
int
arpl
sub
stos
cmp
rolb
sbb
push
es
movsb
loope
je
ret
mov
mov
out
cmp
or
daa
cmp
sub
loope
sbb
push
add
insl
jl
test
iret
pop
je
or
xor
rcll
pop
xchg
mov
sbb
dec
ljmp
adc
mov
std
cld
sarb
lret
aam
mov
repz
jmp
fildll
fsts
xor
sbb
sub
mov
cmpsb
ss
xchg
scas
mov
push
in
pushf
imul
addr16
or
xor
xchg
movsb
xor
and
cmpsb
sub
dec
mov
lea
inc
mov
cmc
ret
in
mov
aas
lahf
pop
bound
mov
jecxz
and
jns
scas
mov
xor
out
jle
test
pop
stos
cmpb
xchg
test
shl
push
cmp
mov
pop
or
daa
movsl
mov
in
mov
adc
and
and
mov
push
gs
sahf
dec
std
je
cli
or
and
es
and
arpl
fdivrp
dec
rcl
orl
fldl
fsts
xlat
repnz
sbb
test
and
gs
lret
fwait
int
movsl
mov
das
popf
into
scas
xchg
pop
pushf
or
stos
xchg
ret
addb
mov
adc
icebp
leave
dec
cmp
pop
and
leave
xchg
mov
dec
je
pop
pop
je
aaa
inc
imul
idiv
jo
into
outsl
sbb
cmpsl
mov
adc
out
mov
mov
jg
pop
lret
test
ficoms
pushf
push
jae
fwait
pop
decb
xor
int
push
push
jno
xchg
sub
cmpsl
nop
ss
imul
out
xor
inc
scas
mov
push
insb
mov
fisubl
lods
inc
aaa
and
lods
cli
popa
or
xchg
pop
xor
les
jmp
fadds
sti
in
pop
fldenv
dec
mov
dec
xor
fcoms
fs
sbb
mov
mov
pop
sbb
jbe
rep
stc
rol
scas
std
rcr
and
xlat
jp
xchg
jl
pop
ret
lods
push
outsb
xlat
mov
ret
sub
gs
mov
iret
inc
push
movsl
or
pop
iret
pushf
cmc
sarb
test
xchg
pop
rolb
xchg
sbb
lds
xchg
sbb
sub
shll
mov
jnp
sbb
mov
outsb
lahf
jmp
mov
sub
dec
sbb
mov
mov
cmp
sbb
push
sub
aad
pop
push
fistl
add
loope
cld
inc
ss
dec
add
lods
pop
xor
and
pop
push
mov
fdivr
mov
push
mov
adc
repz
lock
push
stc
jmp
es
pushf
and
push
jb
sub
push
insb
inc
mov
xor
insb
cmpsb
lret
loope
push
repnz
loop
inc
push
decl
mov
jb
daa
sbb
cmp
cmp
xor
push
cld
push
xorps
push
jp
dec
nop
mov
cmc
mov
push
lods
popa
push
or
rolb
push
mov
sub
pop
pop
outsb
repz
neg
lret
push
dec
mov
cmp
mov
popf
stos
xchg
int3
ret
lret
and
imul
outsb
mov
mov
mov
adc
out
dec
mov
add
cmp
nop
fsubs
ja
inc
pop
test
popf
test
das
test
mov
inc
call
xor
mov
js
adc
sub
fcmovnu
lods
sbb
ret
xchg
xchg
fcomip
sarb
mov
mov
ljmp
mov
jo
dec
jne
inc
lods
and
xchg
and
fcos
repz
ljmp
stc
and
xchg
ret
cld
fcoms
out
mov
sub
enter
lret
inc
jmp
xchg
loope
push
popf
mov
sbb
sbb
imul
jo
add
loope
cltd
mov
jns
push
out
imul
sbb
jo
sub
in
pushf
notl
rcll
lods
test
pushf
cmpsb
adc
jp
in
cmpl
jno
rcrb
jns
stc
add
inc
test
jae
ss
sbb
pop
lret
sbb
cmp
popa
jne
movsb
lds
lock
xchg
add
scas
add
xchg
mov
dec
test
test
ret
pop
rorl
sbb
jns
sub
adc
jmp
ss
cmp
fcoml
lea
sub
jbe
ret
mov
adcb
dec
mov
and
sarb
ljmp
lret
mov
sbb
sahf
pop
popa
pop
jg
fst
and
cmp
mov
mov
fisubrs
push
dec
popf
jae
popf
test
sbb
das
xchg
call
inc
or
dec
or
pushf
push
xchg
inc
push
ss
cmp
and
mov
lret
lcall
and
aas
or
xor
popa
inc
fwait
sbb
mov
push
sbb
cmp
scas
dec
pop
pop
fdivl
rcrb
fistps
movsb
sbb
mov
adc
jns
call
out
inc
sub
add
imul
push
call
outsb
stc
pop
xlat
insb
andl
dec
out
pop
push
push
sub
xchg
rcrb
mov
lds
loopne
push
addl
out
ljmp
dec
inc
push
mov
and
repnz
push
mov
decb
sti
lahf
xchg
push
mov
rorl
or
mov
mov
adc
sub
out
xchg
mov
mov
jo
sbb
mov
or
orb
add
pusha
les
push
imull
inc
arpl
xchg
push
movsb
mov
rdtsc
push
jge
add
ds
cmp
xor
push
ds
mov
leave
push
push
cmpsl
push
dec
lds
out
int3
push
add
xlat
cmp
mov
shrb
aaa
add
cmp
jmp
adc
push
sahf
sbb
cmp
mov
lock
aad
jno
mov
or
arpl
jp
inc
test
inc
mov
mov
xor
out
dec
pop
sub
lret
nop
sub
mov
ds
adc
ds
jl
mov
out
mov
mov
inc
or
cmp
inc
mov
hlt
ret
and
dec
xor
in
dec
orl
movsb
aad
xor
sti
mov
std
sub
ds
pop
cmpsl
repz
xor
lea
mov
mov
mov
cwtl
pop
mov
dec
push
mov
das
in
jns
out
push
add
imul
jo
stos
rcll
subb
xchg
cmp
xchg
push
stos
push
jmp
lock
mov
jnp
popa
aaa
pop
inc
pop
fstpl
add
dec
loope
out
mov
xchg
cmp
inc
mov
jp
sbb
lods
mov
fnstsw
adc
mov
sub
out
fcomps
cmp
mov
pusha
lahf
push
inc
popf
int3
sbb
inc
stos
sub
aam
in
xchg
mov
inc
sub
inc
jecxz
sbbl
and
push
loope
push
push
aam
and
inc
fisttpll
ljmp
sbb
push
cmpsl
movsb
sti
bound
cltd
aaa
fwait
imul
and
stos
imulb
cmp
ljmp
push
or
push
movsb
jecxz
int
jle
jl
out
jmp
push
push
pop
push
mov
lods
xchg
pop
mov
ret
mov
add
push
sbb
std
ret
cmp
push
rorb
or
lret
gs
imul
xor
je
dec
sar
adc
mov
ljmp
cld
jns
sbb
sbb
iret
mov
mov
inc
mov
jle
sti
shl
pusha
mov
lcall
inc
loop
xchg
cwtl
dec
pop
mov
movsb
xor
inc
ret
sbb
or
mov
dec
rcl
xor
cwtl
outsl
test
xchg
mov
imul
lret
cli
inc
xor
inc
rcrl
pop
jnp
inc
aas
sbb
pushf
add
mov
dec
push
mov
mov
stos
or
idiv
popa
pop
and
out
or
jl
hlt
arpl
hlt
fsts
sbb
push
scas
mov
push
xchg
dec
jmp
xchg
xchg
jbe,pn
scas
adc
pop
lods
repnz
cmp
pop
xchg
push
add
jp,pn
std
mov
inc
cmp
aad
in
cmc
mov
movsl
mov
pop
gs
jne
add
or
fsub
enter
test
cwtl
movsl
mov
pop
gs
jne
add
or
fsub
enter
test
cwtl
movsl
mov
pop
gs
jne
add
cmp
out
in
cmc
mov
movsl
or
inc
xchg
push
gs
add
mov
lret
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
loope
sub
das
lds
movsl
loope
or
pop
add
add
add
add
push
pop
add
push
add
add
add
add
add
inc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
cmpsl
add
add
push
add
add
xlat
add
add
add
add
add
add
add
add
add
pop
add
movsb
add
mov
lret
add
add
add
add
inc
add
add
add
add
add
dec
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
addb
add
add
add
insb
add
add
add
add
add
add
test
jae
out
add
mov
add
add
add
add
add
add
add
movsb
add
add
pop
add
add
add
add
and
or
add
ljmp
add
mov
or
popf
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
mov
add
add
fiaddl
addb
add
mov
addb
add
add
call
add
add
mov
movsb
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
pop
add
xchg
add
add
add
add
add
mov
add
cmpsl
add
add
add
add
pop
add
add
add
add
add
add
adc
add
lods
add
add
add
add
add
add
add
add
add
add
push
add
add
test
add
add
pop
add
add
add
add
add
lcall
add
add
add
add
add
outsb
add
add
add
add
leave
add
or
movsb
add
add
add
add
outsb
add
add
add
add
add
add
add
xor
add
add
add
add
add
sbb
push
add
and
dec
add
sbb
mov
add
pushf
add
fiaddl
cmpsl
add
add
add
add
jae
pop
add
add
sbb
add
add
add
jae
sub
add
add
add
add
shlb
xlat
les
insl
shr
movb
dec
jno
push
in
insb
mov
jecxz
pop
push
stos
mov
push
lock
fisttps
xchg
inc
fadds
mov
test
pop
mov
into
xchg
push
out
xchg
notl
fwait
das
inc
jne
mov
cmpb
shr
push
sbbl
mov
xchg
fsub
push
daa
out
push
shlb
inc
lret
mov
sub
sahf
bound
add
push
insl
jo
pop
aad
mov
jle
int3
mov
sub
out
xchg
add
test
cs
mov
xor
push
or
xchg
adc
mov
inc
mov
cmp
xor
loopne
xchg
or
cmpsl
pop
mov
popa
pop
xchg
clc
sbb
xor
int3
test
hlt
adc
pop
lock
xchg
pop
mov
js
pop
addr16
mov
add
and
push
mov
test
pushf
sub
or
dec
jl
mov
xor
out
loope
js
mov
sti
ret
push
mov
xor
sub
iret
xor
add
adc
xchg
mov
mov
inc
lock
movsb
pop
mov
ffreep
mov
in
inc
mov
sahf
xlat
test
outsb
js
lds
loop
xor
dec
adc
jo
repz
xchg
sbb
push
inc
mov
daa
decb
and
in
clc
inc
sub
sub
fistpl
les
loopne
rcrb
stos
mov
lea
ja
add
incb
out
stos
inc
mov
js
in
shll
std
jge,pn
mov
aad
push
lret
stc
pusha
xorl
inc
lret
jne
mov
bound
in
pop
xchg
mov
push
mov
and
adc
mov
mov
pop
pop
insb
insb
jae
pop
inc
jo
sub
rol
mov
outsl
incb
cwtl
pop
mov
mov
insl
std
mov
stos
stos
jle
mov
loopne
in
cltd
push
out
lods
mov
enter
fs
and
pop
icebp
sysexit
or
mov
inc
popf
sub
cmp
push
js
sti
lods
adc
in
adc
jge
icebp
fsub
push
pop
out
dec
sti
cmp
in
lods
popf
dec
adc
shrb
lret
gs
add
shlb
inc
clc
lds
rcrl
movsl
movsb
and
xchg
mov
daa
push
mov
xchg
lods
mov
ficomps
bound
test
mov
xchg
in
xor
xchg
push
cmp
sub
inc
outsl
pop
adc
loopne
shrl
push
push
jae
add
push
call
sbb
or
pop
adc
nop
lods
pop
or
xor
das
push
insl
pusha
xlat
fadd
dec
mov
sbb
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
