mov
add
add
add
addr16
mov
call
test
jmp
or
adc
inc
fistps
inc
adc
or
fstps
pop
sub
xchg
xchg
and
mov
test
mov
xchg
loop
push
dec
pop
push
sub
add
movsb
ds
inc
bound
push
sahf
aas
das
xor
mov
test
push
subl
pusha
packssdw
push
stos
jge
sbb
mov
dec
add
daa
sub
mov
xor
in
xlat
in
inc
or
xchg
fs
or
lret
cmp
outsb
mov
pop
test
repz
aas
cltd
mov
andl
ss
xor
xor
jns
adc
push
outsb
pushf
xchg
sbbl
fisubrl
clc
roll
push
jle
lods
xlat
call
cli
or
bswap
test
cmp
imul
fdivs
pop
inc
sbb
aad
sbb
mov
mov
sub
inc
xor
loop,pn
push
fdivs
int
add
nop
push
push
cmpsb
jne
hlt
ljmp
xchg
mov
add
sbb
or
ja
in
hlt
aas
andl
mov
add
iret
test
jnp
inc
inc
cwtl
jns
push
jbe
jmp
loop
arpl
pop
mov
repnz
cwtl
je
mov
mov
push
mov
out
rcrb
repnz
or
mov
cld
fstpt
rcrb
sbb
cltd
pop
push
je
adc
sub
iret
cmpsb
sub
ret
xchg
fstps
lahf
pop
ljmp
jecxz
pop
fldl
and
ret
cmpsl
push
lods
mov
lcall
sbb
std
das
std
jg
repnz
sub
sub
push
jp
cmp
lods
or
dec
daa
pusha
out
push
mov
jle
cmp
push
lods
mov
cmc
jbe
xor
pop
fcmovnb
sub
pop
and
js
pusha
rorl
test
int3
dec
sbb
pop
sub
rolb
and
sbb
xor
ljmp
subl
jmp
imul
aas
out
mov
test
lods
int3
inc
fnstenv
jg
leave
js
mov
xchg
xor
mov
test
addl
cwtl
jb
mov
jp
mov
mov
or
or
sahf
pop
loope
pushf
jecxz
pop
push
outsl
mov
cltd
lods
ds
iret
and
cmpb
aaa
or
dec
mov
fidivrs
mov
jae
orb
xchg
cmp
mov
scas
cmc
and
test
mov
sub
adc
jmp
inc
jl
int3
mov
mov
push
jmp
ja
pop
gs
inc
add
insb
add
push
ret
pop
fstpt
aam
add
push
xchg
jo
xchg
cmp
sbb
mov
lock
mov
mov
mov
mov
or
cld
ljmp
rclb
jno
mov
adc
test
cmp
push
fsubrl
push
adc
jmp
add
mov
mov
loop
test
inc
les
xchg
jnp
test
sahf
xor
test
sbb
jge
dec
sbb
mov
iret
movsl
sub
or
lods
push
inc
iret
mov
jmp
out
push
adc
scas
push
xchg
orl
stos
and
adc
int
sbb
fwait
sbb
shll
test
cmpsl
mov
out
mov
insb
xor
sub
sahf
insb
imul
cmp
rolb
cwtl
mov
dec
jno
shll
cmpl
inc
decb
ljmp
push
or
mov
push
dec
orl
fisubs
pusha
adc
rcrb
push
inc
pop
cmp
mov
leave
jp
jne
adcb
shlb
xchg
mov
xor
and
cmp
pushf
lock
jo
and
xchg
mov
sti
or
inc
mov
leave
push
popa
push
sub
xbegin
inc
shll
cltd
popf
inc
add
xchg
mov
repz
rclb
int
scas
call
xor
xor
das
pop
mov
ret
call
stos
leave
adc
fwait
nop
mov
mov
mov
cmp
movsl
inc
inc
cmc
mov
mov
or
xchg
aas
aad
jne
push
jbe
push
pop
dec
pop
sti
ret
xor
xchg
sub
cmc
fsts
enter
xor
loopne
add
in
bound
fldl
insb
push
xchg
xchg
lret
psllw
mov
mov
loopne
jle
aaa
inc
inc
test
push
push
cld
ja
clc
sbb
jbe
outsb
jns
aam
cs
adc
arpl
inc
outsb
in
ljmp
lods
popf
dec
add
clc
in
ret
js
sbb
outsl
adc
push
and
loope
enter
in
jl
mov
aaa
mov
cli
loope
dec
daa
jae
xor
pop
mov
mov
add
andl
sub
jle
cs
jmp
mov
jb
cmpsb
mov
cmp
xchg
addr16
out
sub
push
lret
push
addr16
mov
fistpll
cmc
adc
cmp
outsb
sarl
es
jge
adc
fwait
add
and
lea
fwait
mov
mov
inc
fs
outsl
xchg
mov
in
movsl
push
addr16
and
ret
rorl
in
shlb
push
lahf
mov
stos
sbbl
xor
xor
test
ss
fnstcw
add
test
enter
add
cwtl
jmp
push
adc
movsl
cmp
mov
add
scas
jp
lret
mov
sbb
outsb
jp
es
pop
sbbb
in
push
push
inc
lret
stos
sti
dec
mov
add
mov
pop
enter
dec
sti
rcl
call
loop
cs
pop
std
movsb
rol
mov
dec
aas
or
shlb
mov
stos
or
leave
adc
rcll
pop
add
mov
jge
mov
dec
pop
push
pusha
mov
sub
testl
fwait
cs
mov
loop
mov
imul
cmpb
push
push
popf
and
and
loop
js
add
sub
mov
cmp
pop
popa
enter
scas
cltd
inc
dec
inc
lea
mov
push
test
sarl
mov
mov
jp
xor
in
add
or
mov
pop
xchg
aas
and
push
push
mov
add
rorb
inc
addr16
enter
test
dec
pop
mov
iret
push
sahf
adc
nop
pop
mov
mov
js
mov
or
add
js
das
sbb
ret
mov
mov
jp
push
int
inc
enter
aam
push
cltd
bound
adc
fildl
jge
add
inc
xor
jecxz
mov
xor
cli
jne
int
mov
add
sub
mov
or
out
mov
jns
sub
push
pop
add
xlat
pop
arpl
xchg
test
cwtl
dec
mov
dec
xchg
cmc
movsl
in
outsl
ljmp
pop
pop
mov
or
addb
test
inc
mov
lods
mov
ficoms
mov
in
mull
mov
mov
mov
gs
mov
je
pop
shl
jnp
xor
ret
leave
popa
ljmp
dec
test
sub
loope
sub
push
mov
das
jle
idivb
shll
mov
mov
or
xchg
ja,pn
push
lret
sbb
sbb
and
push
xor
int
test
or
nop
sbb
xchg
jg
nop
call
shrb
shl
mov
lahf
idivl
into
subb
out
add
mov
adc
jmp
int3
and
lahf
inc
and
out
stos
and
cmp
in
xchg
out
dec
pop
jg
pop
jo
dec
sbbb
fsts
in
pop
das
mov
imul
inc
imul
sbb
test
test
clc
push
jae
or
out
scas
dec
lret
push
out
lret
push
outsl
sub
pop
sbb
fwait
xor
int
sub
inc
mov
mul
mov
std
loopne
mov
adc
or
cwtl
addr16
mov
aad
lock
cmc
mov
xchg
add
cmp
jns
xchg
mov
xchg
daa
inc
add
push
and
mov
xchg
outsb
cmp
out
jne
adc
ljmp
mov
jle
dec
push
or
sub
addr16
jo
inc
dec
or
sbb
repnz
pop
loop
cs
mov
adc
adc
or
xchg
mov
andb
adc
inc
les
stc
aam
sub
mov
mov
xlat
mov
loope
fnstcw
cmp
and
cld
inc
insb
jae
imul
xchg
aas
lret
sub
push
decb
repz
pushf
je
daa
jle
cmpsl
gs
xchg
mov
out
in
orl
lea
jecxz
pop
or
or
mov
push
xchg
mov
dec
dec
mov
pop
stos
je
push
mov
enter
mov
jne
psubb
mov
cmp
imul
data16
andl
and
stos
loopne
aaa
jae
mov
ja
ficoml
fisttps
push
popf
in
popa
xor
add
jne
sub
dec
out
pushf
imul
aaa
sub
lods
rcr
int
pop
fucom
cwtl
les
popa
pop
test
daa
sub
es
xor
dec
pusha
loop
lahf
mov
dec
ss
imul
hlt
enter
mov
test
lea
jg
jne
pop
adc
outsb
es
cmp
adc
lahf
push
jne
pop
sub
jbe
dec
outsb
ljmp
cmp
add
mov
addr16
xor
cmpsb
add
push
xor
int3
mov
loope
test
mov
orb
pop
or
or
lret
pop
fwait
pop
adc
sbb
sub
pop
sub
ds
fidivs
clc
aas
or
div
mov
jecxz
rcl
out
mov
js
cwtl
in
or
jge,pn
inc
pop
sbb
lcall
xlat
jmp
cmovp
stos
pop
jecxz
jmp
inc
xor
push
push
out
sbb
loope
and
insb
inc
hlt
call
jnp
sbb
out
imul
jb
movsb
xor
stos
push
mov
sub
jmp
call
and
fldl
lret
shrb
movsl
ja
rcrl
dec
dec
inc
repnz
adc
sub
aaa
push
sub
add
adcb
push
sbb
xchg
insb
pushf
adc
outsl
fadd
mov
cli
xchg
or
adc
xchg
inc
dec
clc
mov
adc
and
inc
adc
mov
xchg
add
mov
xor
push
ja
loopne
cmp
mov
imul
movsl
mov
int3
mov
dec
cmpsb
mov
adc
in
test
xchg
pop
adc
pop
xor
jge
inc
enter
pop
pop
cmp
jl
fimuls
repnz
or
lcall
aam
jg
imul
or
jle
cli
movsl
xchg
cmp
sbb
inc
or
out
jmp
pop
mov
jb
mov
std
push
lcall
xor
test
cmp
hlt
jbe
inc
jl
or
out
mov
push
rclb
std
stos
rep
shlb
xor
inc
xorl
out
fisttpl
push
bnd
cmp
add
and
cmp
mov
adcb
jbe
add
ret
pop
sbb
fisubs
fcoml
adc
scas
or
fsqrt
addr16
cld
outsb
push
ja
stos
xchg
into
aad
out
dec
push
mov
mov
pop
mov
test
xchg
jns
adc
mov
aas
mov
clc
adc
ficoms
sub
jl
mov
and
xchg
inc
xchg
shl
sarb
sub
dec
in
sbb
in
out
and
mov
fsubrs
out
cwtl
push
mov
and
dec
dec
or
push
cmpsb
icebp
lcall
mov
cltd
sub
push
iret
stos
pop
pop
out
sahf
fstpl
xlat
mov
ud0
pop
les
shl
enter
or
mov
or
out
inc
mov
lds
std
out
push
dec
push
fisttps
xor
in
stos
xor
shll
xchg
rcr
add
shll
test
stos
out
ss
stc
mov
xchg
xchg
lock
bound
and
jnp
xorl
das
stos
aam
rclb
cmpsl
pop
push
dec
cli
fldenv
xor
jge
dec
lods
aaa
sbb
das
scas
ret
into
pop
push
iret
scas
jge
push
stos
ficoml
outsl
mov
sarl
out
pop
data16
scas
mov
dec
lret
hlt
jo
add
cli
push
cwtl
sub
sbb
or
jmp
cltd
sub
or
lret
mov
aam
out
or
xor
loope
fcomps
jl
test
jnp
jbe
or
xlat
mov
xor
pushf
mov
insb
or
lea
ds
dec
pop
or
jle
mov
shlb
dec
push
iretw
lret
out
scas
rol
or
pop
lcall
arpl
arpl
xchg
pusha
sbb
lock
sbb
nop
sub
jb
pop
in
mov
mov
cmpl
lock
inc
fcmovbe
iret
hlt
std
sbb
push
mov
dec
cwtl
ret
imul
cmp
lods
pop
jp
hlt
push
xchg
rclb
daa
add
and
xchg
mov
adcb
scas
insb
mov
cli
dec
and
jecxz
add
inc
mov
dec
xchg
lock
or
ja
xchg
into
xor
jmp
fnstcw
repnz
cld
pop
imul
pop
mov
mov
cmp
mov
and
inc
sbb
das
lods
popa
sub
adc
popa
push
repnz
and
cli
cld
push
adc
push
fisubrs
scas
mov
inc
cmp
fidivrs
sbb
cwtl
arpl
xor
ret
ret
sub
jle
and
cli
aas
mov
or
nop
test
adc
cli
ficompl
or
imul
std
sub
fidivl
loopne
jmp
dec
in
outsb
call
or
andl
fldt
and
filds
mov
inc
ja
mov
pop
lea
cmpsb
js
daa
int3
push
pop
xchg
push
call
fwait
inc
pushf
sub
xor
jo
xchg
mov
sbb
pushf
jb
cmp
inc
push
mov
pop
fbstp
enter
out
dec
xor
adc
push
popa
rcr
sub
ret
sbb
test
fdivrp
adc
and
stos
xchg
iret
jb
adc
in
jle
and
sub
or
test
xlat
fcmovne
lret
dec
bound
loope
mov
or
mov
out
fisttpl
fwait
cmp
repnz
sub
inc
pop
and
xchg
mov
sub
push
cli
xchg
sbb
ret
jp
imul
mov
addr16
hlt
shl
imul
or
repnz
add
inc
add
jb
daa
jle
cmpsl
and
jns
popa
daa
jl
mov
sbb
out
sahf
sub
jge
ss
ljmp
pop
sbbl
sbb
daa
mov
xchg
xor
sub
test
add
push
mov
mov
jmp
pop
xor
xor
jnp
adc
mov
dec
lcall
mov
outsl
adc
lcall
fsubrl
mov
pop
inc
pushf
jg
push
jb,pt
jns
sub
xor
sub
jle
xchg
pop
decl
mov
cmp
mov
pop
cmp
mov
mov
push
and
xor
sarb
and
movsl
push
sub
ss
and
jo
repnz
inc
lods
inc
and
add
dec
push
cwtl
push
xchg
mov
test
iret
jno
outsl
decb
into
dec
adc
xchg
imul
gs
daa
bound
popa
int
add
sub
push
js
xor
imul
xchg
mov
push
je
jle
xchg
jmp
imul
inc
and
hlt
mov
add
adc
test
adc
or
popf
mov
push
pop
lds
ja
jmp
push
fsts
add
lds
jnp
clc
pop
in
mov
lcall
sub
jbe
hlt
mov
or
test
inc
mov
xchg
lea
pop
lret
out
test
xchg
mov
add
push
push
out
inc
push
jnp
ss
out
js
call
push
ja
fisubrs
lahf
out
rcr
add
mov
shll
in
lea
push
in
sbb
inc
gs
push
inc
cmpl
or
mov
shr
push
dec
mov
jno
ret
cmp
out
arpl
dec
xchg
stos
push
fcmovbe
xchg
xchg
xchg
imul
xor
adc
mov
jg
out
xor
push
push
sbb
xor
jmp
in
jmp
add
xchg
gs
into
es
jbe
ret
insb
cwtl
inc
jmp
data16
jb
xor
outsb
nop
shlb
sbb
movsb
stos
mov
add
stc
sub
xor
lret
add
jle
sbbl
pop
dec
push
fnstenv
pop
adc
outsb
xchg
or
jp
fwait
lds
rorb
pop
inc
dec
pop
fwait
imul
adc
pop
outsl
fldcw
push
add
ljmp
mov
ss
jno
out
sbbl
push
ficompl
push
cld
mov
in
sti
rorl
sbb
in
out
fbstp
add
add
push
mov
loope
daa
xchg
aaa
test
inc
push
movsl
inc
push
aam
add
jp
popl
sbb
test
xchg
sbb
pop
mov
cmovl
in
add
shl
jns
sbb
hlt
adc
pop
pop
rclb
incl
lret
into
mov
imul
or
daa
stc
and
fs
and
inc
sbb
xchg
dec
push
push
add
ret
or
push
or
jae
daa
repz
mov
idivl
cmp
imul
sub
xchg
pop
push
inc
jb
out
insb
pop
xor
stc
fstps
lea
sbb
xchg
cmc
fs
xor
imul
jp
and
mov
jl
lock
and
insl
mov
xor
mov
ret
mov
inc
push
adc
mov
icebp
dec
fcoml
pop
fcomi
inc
stos
inc
xchg
mov
push
xchg
push
xor
arpl
loop
mov
xchg
sub
dec
int
insl
adc
scas
les
xor
fistpl
xchg
out
movhps
cld
iret
es
lds
dec
pop
xor
mov
and
pop
cmp
ljmp
mov
aas
pop
ret
inc
mov
xchg
rolb
mov
mov
jp
icebp
sbb
pop
out
mov
and
jno
sbb
mov
mov
and
stos
clc
jo
dec
mov
inc
lds
push
inc
mov
hlt
or
xchg
gs
add
outsl
xor
xchg
sub
lods
jge
sub
loope
sbb
insb
shll
inc
loope
mov
xchg
fwait
in
sub
cmpsb
jl
add
push
insl
jo
jb
add
movsb
xchg
icebp
mov
dec
add
jmp
clc
pop
outsl
mov
scas
push
das
mov
lods
sti
scas
gs
scas
mov
bound
mov
rorb
xor
mov
negb
mov
push
push
pop
jne
cltd
jle,pn
inc
push
insl
adc
or
ret
mov
out
cld
js
dec
and
jb
ja
inc
jle
mov
dec
add
dec
add
push
push
nop
rcl
repz
mov
dec
cmp
mov
xchg
pop
pop
insl
mov
das
push
push
pop
cmpsb
lods
testl
mov
fs
out
int3
pop
pop
push
bound
add
pop
xchg
out
mov
pushl
insb
mov
xchg
adc
cmp
xor
xchg
add
adc
jge
shlb
ret
mov
shl
pop
outsl
mov
cmc
mov
jecxz
jb
lret
loop
push
pushf
clc
mov
daa
lods
xchg
fildl
aas
js
rcrb
ss
neg
sub
mov
out
pushf
mov
xor
hlt
lods
jns
adc
xor
fsubl
and
in
mov
mov
push
pop
pop
xor
xchg
sub
test
cwtl
dec
dec
imul
jl
loopne
pop
mov
enter
loop
and
outsb
dec
add
sbb
lret
cltd
inc
jecxz
mov
and
sub
sub
add
cmpsl
ret
push
pop
clc
sti
adc
lahf
orl
sbb
sbb
xor
and
jecxz
cmp
mov
lea
cmp
and
into
xor
sub
and
mov
inc
andb
add
mov
adc
fs
cwtl
xlat
adcb
mov
jae
cmpsl
xor
es
cmpsb
or
pop
je
imul
add
cli
sbb
out
test
mov
test
add
das
adc
lods
cli
xchg
mov
lret
scas
cwtl
push
gs
sbb
adc
in
mov
mov
cmp
mov
jb
push
clc
sbb
repnz
ss
fisttpll
sub
mov
push
ficoml
mov
mov
decb
mov
jle
mov
bnd
adc
mov
es
loop
sub
and
mov
sbb
pop
out
push
outsl
adc
adc
mov
mov
and
jnp
mov
push
mov
shl
ja
out
outsb
in
dec
mov
aad
daa
popf
scas
cmp
jbe
mov
icebp
adc
das
popa
sub
fsubs
int
dec
jne
sub
pushf
or
hlt
lods
mov
mov
or
inc
or
mov
loope
or
pop
push
loopne
adc
pop
push
sbb
cmp
dec
jne
xor
cs
inc
or
ror
and
sbb
jl
mov
xchg
push
pop
std
shl
cmp
sub
pop
cmp
cmp
pop
lret
mov
dec
fcmovb
lcall
xor
arpl
sbb
mov
addl
ds
and
lds
inc
adc
cmp
iret
lahf
lods
lahf
ret
sub
stos
push
adc
lds
mov
push
push
outsb
test
aad
jno
xchg
ljmp
push
outsb
add
call
dec
adc
mov
sbb
sub
int
movsl
pushf
gs
mov
nop
std
test
shl
mov
mov
int
je
mov
and
out
mov
icebp
shl
sub
push
inc
jb
mov
cmp
adc
sbb
sub
jns
push
ljmp
in
sbb
std
sbb
jl
push
jecxz
push
xor
sbb
fstp
sahf
das
cmp
cmp
insl
sub
divb
mov
lcall
pop
sbb
ds
movsl
out
mov
cltd
mov
movsl
sti
in
pop
cmp
and
insl
cmp
inc
mov
sub
lea
cmc
mov
lock
push
mov
ja
sysret
into
js
mov
lock
mov
dec
xchg
jne
fistpl
insl
sub
pop
jne
adc
xor
cmpsb
mov
cli
hlt
push
incl
enter
and
xchg
inc
imul
popa
or
insb
int
ficomps
sti
inc
cwtl
sbb
pop
aam
inc
add
arpl
scas
pop
dec
xchg
add
es
or
loop
push
cmp
pop
cmp
jmp
xor
int3
mov
and
adc
std
inc
unpckhps
scas
push
lret
nop
push
scas
movsb
inc
lahf
sub
divb
ss
and
fmuls
push
fnstsw
dec
fisttps
sahf
lea
mov
lret
fmull
adc
andb
fsubrl
sub
push
dec
mov
or
frstor
sub
or
rol
adc
mov
loope
ja
xlat
or
fadds
jge
cmpsb
int
inc
mov
hlt
pop
cmpl
int3
lcall
in
and
nop
xchg
lea
sub
push
into
call
es
hlt
dec
push
popa
loopne
push
std
fwait
sti
frstor
sub
bound
call
in
fisubs
mov
pushl
push
js
mov
repnz
pop
dec
dec
pop
scas
cltd
xchg
ljmp
xor
mov
jb
adc
push
addr16
lret
arpl
mov
inc
and
xor
pop
adc
push
mov
dec
iret
mov
faddl
mov
and
sbb
mov
cli
push
push
ja
or
gs
in
pop
inc
push
push
outsl
mov
push
lahf
int3
aas
lahf
inc
mov
or
aad
icebp
push
jnp
insl
mov
xchg
fists
sub
xchg
movsl
cmp
movl
sbb
push
dec
fstpt
addr16
jecxz
pop
in
cmp
push
jecxz
ss
sub
inc
insl
stos
fwait
or
das
loope
cmp
enter
mov
mov
dec
loope
push
mov
cmpsl
pop
sbb
push
fsubrl
mov
cmp
pop
push
jg
sbb
cld
out
fwait
adc
add
xchg
int
xor
rclb
fcoms
fnstcw
mov
dec
data16
insl
xchg
rol
jb
dec
inc
data16
and
ljmp
cwtl
add
jmp
sarl
xor
daa
inc
mov
dec
repz
sbb
xchg
pop
lods
loopne
pop
inc
or
xor
mov
es
xchg
lret
popf
into
adc
mov
test
pop
inc
xchg
xchg
mulb
mov
sbb
in
in
mov
inc
cmpsb
push
flds
rcrb
mov
jnp
call
sbb
xor
aas
xor
sbb
dec
mov
xchg
mov
sbb
or
mov
push
rcrl
hlt
test
dec
mov
inc
mov
imul
pop
outsb
push
shll
xlat
ret
dec
inc
jne
lods
sbb
adc
and
add
repnz
jp
dec
in
sahf
and
fcomps
sub
mov
negl
lcall
inc
or
mov
ret
fstpl
lods
jle
xchg
out
sbb
imul
mov
ja
out
jecxz
pop
sub
test
gs
insb
mov
inc
adc
pop
aad
push
mov
and
mov
push
aaa
jp
loop
int3
cmp
add
dec
out
pop
dec
cmpsb
cmp
je
lock
lock
stc
loope
arpl
ss
sbb
insb
stos
sbb
cmp
push
insb
test
xlat
xor
mov
gs
or
mov
mov
out
inc
mov
cmp
inc
idivb
lahf
xor
insb
push
push
adc
xchg
add
mov
mov
imul
sub
fldl
jae
mov
shrb
jmp
add
lahf
cmp
add
hlt
adc
pop
sbb
sub
jae
or
pop
dec
imul
push
xchg
movsl
pop
test
mov
ss
test
sub
pop
inc
and
and
and
adc
in
sbb
inc
and
int
cld
push
lcall
xchg
inc
jl
sub
mov
or
xchg
mov
fmuls
fidivl
insl
leave
bound
pop
xchg
jns
mov
scas
mov
jo
sbb
jle
push
fcoms
sbb
pop
xor
xor
jnp
lret
es
or
mov
sti
outsl
sub
jmp
adc
add
dec
or
cmp
jno
ret
arpl
sub
push
pop
iret
imul
xchg
sbb
inc
stc
jmp
pop
outsl
cmc
cwtl
in
mov
mov
jl
xchg
cwtl
lds
stos
push
pop
sti
or
xor
mov
push
movsl
and
mov
repz
and
xchg
call
mov
jne
shl
stos
pop
leave
in
jge
icebp
xchg
repnz
clc
lret
call
roll
popf
xor
add
mov
xor
jmp
sbb
mov
or
clc
aaa
jp
jg
jecxz
adc
push
pop
sbb
js
popf
out
popf
clc
ja
pop
cli
mov
and
pop
les
pop
fmul
adc
pop
jae
jg
jmp
sub
fimuls
adc
mov
mov
lgs
sahf
dec
lahf
xor
fsub
push
fwait
testb
and
xor
jb
and
in
jl
pop
rcll
sub
js
aad
inc
insl
aas
test
push
dec
inc
rcrl
inc
lcall
in
push
shrl
movsl
or
xchg
in
mov
xchg
pop
mov
add
jecxz
jecxz
loope
inc
lds
lcall
outsl
scas
jo
dec
sbb
push
cltd
jo
push
scas
pop
jp
fdivrl
pop
inc
xchg
mov
fwait
sarl
adc
in
lahf
loope
lcall
mov
dec
jg
shll
popf
out
cmp
push
lods
movsl
mov
ret
sub
sub
insl
insl
mov
aaa
mov
and
xor
jle
jmp
push
enter
sahf
in
ja
mov
pop
pop
arpl
mov
adc
xor
xchg
mov
mov
xor
lret
testb
dec
inc
or
leave
push
fwait
mov
outsb
push
push
scas
push
xor
xor
lret
cld
inc
fcoms
lcall
loope
xor
pop
repz
and
outsb
cmc
popa
and
lret
rcl
jmp
cltd
sar
lret
stos
imulb
pop
clc
or
test
pop
push
cmp
sub
imulb
mov
lahf
leave
lea
push
scas
push
andb
sub
fwait
sbb
addr16
dec
mov
push
dec
jp
jmp
filds
pop
das
ljmp
mov
dec
loope
push
mov
dec
cld
iret
ret
mov
std
loopne
push
pop
push
mul
and
aam
test
insb
xlat
pop
ja
cwtl
dec
sbb
out
add
pop
cwtl
adc
in
sub
jmp
imul
mull
cmp
in
repz
ljmp
and
and
mov
popl
fildl
and
in
pop
mov
loope
pop
sbb
out
insb
aaa
dec
mov
push
xlat
je
and
xor
push
leave
cmc
mov
push
sub
aam
ja
mov
in
mov
fcoml
out
jns
lds
cwtl
sub
or
push
imul
cltd
aad
scas
loopne
or
xchg
xchg
pop
push
pop
movsl
dec
addb
add
jecxz
mov
ficoms
mov
xchg
sbb
push
jp
add
sti
cmc
cmp
pop
notl
movsb
dec
shr
in
in
enter
mov
fdivrs
adcb
jo
pop
adc
fdivrl
lods
add
sbb
or
mov
dec
cmovae
clc
dec
cmp
ud1
rcll
xchg
std
test
sub
ljmp
jnp
mov
push
pop
loop
pop
jecxz
jo
xchg
ds
int
andl
in
push
sbb
fs
jns
je
dec
fdivr
mov
cltd
xchg
ljmp
fistl
xchg
sub
pusha
mov
inc
add
pop
fwait
dec
sub
sahf
jp
inc
mov
cmp
or
add
add
jns
pushf
jmp
rorb
jecxz
cmp
adc
movntq
cmc
xchg
je
sub
push
arpl
dec
ret
lahf
imul
imul
mov
push
xor
and
adc
in
xor
xchg
mov
sub
bound
fdivr
push
jnp
xchg
add
outsb
push
pop
push
lods
cmp
ret
pop
test
xchg
mov
ret
lret
mov
loopne
dec
mov
and
in
sbb
ljmp
xchg
movsl
cmc
sub
scas
cs
lahf
pxor
dec
fstp
inc
mov
mov
dec
or
pop
lds
mov
call
xchg
and
pop
je
jbe
jns
pop
out
or
cli
mov
pop
rorb
loope
mov
mov
and
sub
lea
gs
and
xor
lret
cmc
add
mov
addb
test
outsb
test
rolb
or
cld
aam
ljmp
fldt
jb
mov
xchg
add
adc
insb
mov
add
jo
adc
xor
mov
and
test
jne
push
cwtl
push
add
add
mov
mov
push
fldl
test
dec
in
lret
jl
clc
aam
sbb
push
cmc
xor
aaa
dec
lds
mov
or
popa
sub
pop
push
icebp
mov
jp
testb
aaa
loopne
test
sub
inc
sbb
mov
xchg
movsb
out
aas
and
mov
stos
dec
fwait
out
xchg
cmp
xchg
lahf
mov
pop
fmuls
imulb
icebp
es
or
mov
pop
rolb
fimuls
repz
xchg
loop
cmp
pusha
xchg
aaa
xchg
adc
dec
call
xchg
push
fdivrs
add
aam
mov
xchg
fcoms
sbb
dec
ficompl
or
cltd
js
cmp
or
adc
enter
loopne
jecxz
mov
mov
inc
add
mov
int3
xlat
cmp
repnz
stos
scas
fldcw
jp
cwtl
add
xor
iret
sub
push
push
out
xchg
stos
ficoms
les
pusha
sub
sub
les
dec
jno
push
and
stc
mov
pop
sbb
lahf
or
cmp
movsb
cmp
pop
sbb
enter
pop
xchg
inc
push
clc
dec
mov
in
sbb
lods
sbb
jmp
or
sahf
outsl
mov
aaa
repz
mov
pop
aas
mov
sti
mov
mov
dec
out
cmpsb
pusha
ljmp
jno
ss
fisubl
adc
fwait
mov
std
mov
xor
lcall
mov
dec
mov
inc
lcall
pop
cmpsl
call
pop
aam
test
inc
cmc
add
and
jmp
popf
stc
xchg
sbb
lock
es
pop
inc
iret
shll
loope
fs
adc
xor
xor
mov
das
adcb
mov
mov
adc
imul
das
mov
pop
enter
adc
xchg
xor
sbb
sub
adc
test
cmp
movsl
adc
std
push
jp
shrl
shll
or
in
outsl
adc
out
inc
cmpsb
xchg
enter
inc
sbb
jp
add
mov
aaa
aaa
jl
int
es
xor
fidivrl
pop
mov
add
push
andb
popf
adc
stos
ret
aaa
xchg
cmc
sbb
push
imul
push
addr16
mov
mov
mov
xlat
dec
icebp
inc
loope
push
xchg
cmp
push
mov
push
pushf
lods
cmc
or
push
fildl
and
insl
shl
pop
and
pop
and
insl
mov
sub
jp
lods
jecxz
inc
lock
push
fnstsw
inc
shlb
inc
scas
push
sti
lret
movsb
pusha
in
bound
pop
daa
push
and
test
xchg
aad
adc
sahf
lods
loope
push
jnp
push
rcll
add
and
jne
dec
cmc
lret
sarb
cmp
mov
xchg
insb
jle
fs
popa
or
leave
repz
push
push
cmp
lds
or
mov
gs
and
push
xlat
xorl
cmp
xor
cmpsl
loop
lock
pop
xchg
and
cmpsl
loop
lods
icebp
out
daa
cli
enter
sbb
push
sbb
pop
mov
popa
mov
movl
cltd
push
mov
stc
clc
pop
or
sbb
scas
ror
arpl
and
and
into
leave
mov
jecxz
fucom
sbb
mov
dec
sti
aam
mov
push
shlb
jecxz
inc
jns
sbb
cmp
pop
mov
cmpsb
cli
into
lahf
xlat
xchg
push
push
es
inc
jo
or
pop
push
arpl
cmp
mov
ss
mov
ffree
aas
loope
int
stc
lea
mov
cld
lods
mov
fcoms
push
shrb
sbb
push
popa
dec
in
inc
icebp
ret
mov
fstl
movsl
fs
gs
icebp
dec
push
sub
adc
dec
mov
push
or
xchg
and
xchg
jmp
out
xor
aam
pop
jbe
in
adc
jge
daa
push
notb
fcompl
addr16
addb
mov
fildll
xchg
xchg
fwait
rep
das
xchg
xchg
xor
mov
adc
or
push
mov
sbb
cltd
xchg
inc
mov
jae
fistpll
imul
mov
fisttpl
cmp
stos
push
jne
push
icebp
xchg
pop
movsb
aas
add
jae
push
lea
adc
das
mov
dec
out
pusha
jnp
ret
push
clc
adcb
inc
jne
mov
or
push
inc
shll
adc
sbb
enter
mov
rolb
mov
outsl
sahf
mov
inc
in
inc
loopne
movsb
clc
mov
xor
movsl
fldt
xchg
mov
pop
push
adcb
inc
lret
push
mov
xor
and
xchg
ret
dec
jl
mov
xchg
cmpsb
aam
xchg
pop
lcall
push
test
out
icebp
add
or
mov
mov
xor
sbb
xchg
in
clc
mov
cmp
inc
fidivl
and
jo
in
out
or
cmp
imul
pop
into
xor
mov
stos
lret
add
aaa
fidivl
push
lds
sbb
xor
push
lods
dec
jecxz
loop
jge
push
xor
out
xor
jo
rcr
pop
xlat
int
test
dec
xlat
rol
push
sub
lret
scas
incb
xor
xchg
jp
sub
fbstp
push
gs
sub
inc
rcr
mov
mov
inc
aam
jns
cld
or
pop
scas
sub
bound
xor
mov
sbb
hlt
push
repnz
push
cwtl
xor
jno
loop
xchg
push
subl
ret
cmc
jg
jecxz
cmp
stc
and
mov
add
sbbb
je
mov
mov
adc
sub
lret
lock
mov
inc
xor
insb
or
and
dec
scas
add
mov
jne
mov
jmp
in
mov
aas
sub
lea
sahf
pop
cmp
out
or
hlt
ret
insb
cld
addr16
pop
pop
jecxz
into
scas
xlat
imul
les
add
add
xor
dec
jnp
jo
adcl
add
push
xchg
movsl
js
adc
jne
loopne
adc
and
stos
mov
in
mov
add
mov
mov
shl
and
repz
rclb
sti
sbb
outsb
lock
xor
inc
dec
xchg
xor
aam
pop
xchg
pop
cmp
cmp
mov
std
lods
jno
cmp
lock
fstpt
xor
fbld
sbb
das
xor
xchg
cmp
cmc
out
mov
pop
stc
jno
xchg
sahf
sub
ret
xor
sub
mov
adc
mov
mov
xor
inc
pop
stos
xor
stc
mov
xchg
and
je
daa
pop
mov
sub
cmp
adc
je
mov
repz
idiv
mov
jae
sub
movsl
sub
repz
or
dec
cwtl
les
orb
cvtps2pd
aam
insl
adc
or
leave
or
in
inc
andl
stos
dec
push
leave
int
mov
ret
pop
jns
push
outsb
sbb
sbb
dec
xlat
sub
cmp
pop
lret
les
cmp
pushf
std
mov
jbe
ret
jecxz
cwtl
cmpsb
gs
imul
lahf
out
in
out
shl
xchg
sti
xchg
int
push
add
int
lods
xchg
jecxz
ljmp
jmp
test
pushf
das
stc
jnp
lock
aas
mov
jg
outsl
jg
fdivrp
pop
push
cmp
push
dec
sbb
add
orl
xchg
sbb
test
js
ficompl
inc
push
sti
mov
mov
xor
je,pn
jp
push
pop
push
js
push
and
popa
fidivl
jns
in
daa
dec
jle
adc
nop
sbb
ficoml
les
mov
pop
adc
lods
cmpsl
adc
arpl
mov
out
es
je
dec
shll
adc
mov
arpl
mull
mov
shlb
xchg
shr
gs
inc
and
scas
in
test
loope
inc
pop
push
scas
arpl
add
not
xchg
popf
adc
cmp
fsubs
sub
scas
repz
cmp
inc
arpl
inc
push
je
jmp
mov
repz
lds
push
shll
xchg
repnz
jl
test
or
imulb
mov
rcrl
stos
dec
push
jge
pop
push
sbb
fwait
popa
add
stos
int3
pop
cmpsl
rclb
mov
pop
test
loop
push
jnp
ror
test
xor
into
cmpsb
aad
cmp
pop
jbe
ficomps
movsl
negl
dec
dec
xchg
cmc
mov
fcoml
icebp
mov
adc
lcall
mov
loopne
mov
or
ret
fldt
lcall
dec
sub
and
push
scas
mov
inc
dec
push
test
cmpsb
sub
sub
lret
add
lret
les
addr16
sarl
out
nop
and
ds
push
cmc
nop
test
dec
mov
andb
pop
std
nop
fimuls
popa
jp
xor
int
aas
in
std
enter
pop
cmpl
cmp
lcall
out
or
js
repz
dec
test
loopne
int3
aas
pop
jmp
mov
bound
js
out
jl
adc
cwtl
pop
and
pop
sub
xchg
outsb
adc
inc
pop
pop
add
je
test
cmp
cmp
scas
mov
or
aaa
dec
mov
in
sub
jno
sbb
push
divl
loop
xor
inc
jne
not
je
mov
mov
mov
pop
adcl
loopne
jns
dec
cmp
xchg
mov
push
jle
cmp
stc
and
and
push
pop
stos
fldl
sbb
xor
hlt
mov
xchg
sbb
push
xchg
fcmovb
inc
inc
sbb
lcall
es
addb
test
repz
jo
mov
pop
xchg
pop
enter
xchg
outsl
ss
mov
js
sub
mov
adc
shrd
sbb
mov
xchg
pop
mov
push
sub
fbstp
sub
pushf
mov
lret
je
andb
out
and
es
xchg
pusha
pop
dec
or
push
pop
pop
adc
adc
enterw
jg
pop
sbb
sub
scas
shlb
add
or
push
mov
inc
mov
out
adcb
sbb
add
mov
hlt
pusha
pop
cld
push
push
lcall
dec
cmp
ja
loopne
ret
and
inc
aaa
mov
insl
fwait
pop
add
fcmovu
pop
daa
sub
in
fistl
cli
mov
rcr
ret
sub
jbe
ret
sbb
and
xor
adcb
jb
xor
xchg
jb
or
dec
ret
fwait
dec
jl
movsb
push
adc
test
inc
cltd
push
leave
or
jno
xor
inc
mov
fsubl
fadd
fisubl
mov
in
mov
inc
gs
and
jnp
loope
inc
xor
cmp
pop
dec
jns
lods
xor
add
jae
pop
pop
lds
dec
test
mov
or
jecxz
xchg
push
out
popa
out
and
xor
cmp
jge
add
add
push
cld
xchg
jecxz
dec
cli
mov
loopne
pushf
fmull
testl
imul
sub
cmpb
or
xchg
mov
nop
or
fsubrs
jp
xorb
mov
ret
push
scas
cwtl
mov
jbe
mov
cli
pop
repz
not
nop
and
out
push
xor
and
hlt
movsl
or
addr16
dec
inc
sub
shlb
cmc
mov
xchg
fwait
cmpsb
inc
out
lret
sub
clc
hlt
cmp
fistpll
add
mov
movsb
mov
jl
jne
mov
jmp
cmp
push
xor
faddl
gs
inc
addr16
scas
inc
sub
fxch
jle
mov
sub
ret
xlat
aad
pop
lret
adcb
cmpsb
cmp
mov
xchg
lret
mov
frstor
ljmp
and
xor
xrelease
xor
stos
outsb
xorb
loopne
cld
rorb
jp
enter
punpcklwd
pop
fistl
pusha
dec
push
xor
push
sti
cmp
sti
mov
fcomps
pop
cs
mov
jmp
lahf
adc
shll
mov
mov
xchg
lea
push
divl
test
pop
subb
push
or
in
adc
inc
pop
arpl
inc
jl
sub
jnp
adc
fdivl
ret
pusha
xlat
add
nop
ss
and
dec
in
adc
into
dec
aas
mov
xchg
scas
bound
loope
adc
stos
mov
repz
adc
pop
ret
cmpsl
repnz
movsl
add
xchg
cmp
scas
loopne
cmpsl
mov
inc
inc
jno
mov
add
inc
loopne
iret
mov
push
es
adc
dec
repz
cld
and
movsb
aaa
call
out
mov
mov
inc
push
sub
mov
ret
pop
dec
pop
push
push
cld
push
add
out
repnz
push
add
mov
jno
jmp
dec
push
lret
pop
push
out
or
mov
xchg
jg
sub
mov
mov
into
notb
inc
pop
sbb
fwait
xor
mov
imul
repz
sti
cmp
pop
mov
sbb
cmp
or
retw
xchg
mov
cmp
cmp
shlb
pop
mov
or
dec
jg
js
and
inc
or
shll
add
push
push
sbb
and
scas
out
inc
dec
xor
and
mov
jo
jns
out
ret
xchg
cmc
mov
sbb
ret
inc
arpl
pop
xor
or
int3
jmp
push
in
adc
in
daa
push
xor
repnz
sti
jo
aam
jle,pn
call
mov
push
cli
cmp
loopne
push
sub
inc
mov
xchg
daa
push
adc
pop
xor
outsb
mov
cld
xchg
dec
sub
xchg
mov
fcompl
aam
int3
fstpl
jp
mov
push
aaa
cmpsl
dec
pop
or
push
sub
xchg
repz
jnp
pop
or
lea
inc
pop
outsl
movsb
sbb
addl
fidivl
sbbl
pop
pop
cmp
dec
adc
cltd
cmp
mov
or
fstps
arpl
shlb
xchg
push
lcall
mov
adc
roll
xor
cld
push
xor
test
pop
mov
push
leave
inc
mov
adc
sbb
loop
scas
popf
shll
test
adc
mov
cmp
inc
add
or
mov
mov
dec
or
repz
mov
fdivp
inc
push
iret
rorl
out
add
rorl
in
pop
mov
aaa
pop
sbb
frstor
cmp
ss
aas
xor
cmp
add
es
pop
push
add
pop
and
pusha
or
cmp
mov
cmp
jo
jae
dec
imul
in
push
test
fdivrs
xor
mov
add
stos
cmp
movsl
adc
adc
leave
ret
aaa
inc
cmpsl
push
or
shl
imul
mov
sub
mov
dec
push
xchg
in
sti
loop
daa
in
inc
into
rclb
and
mov
push
push
xor
es
repz
cltd
or
notl
icebp
jmp
pop
jecxz
mov
fucomip
bound
cmpl
mov
shlb
xchg
push
cmp
inc
ss
stos
mov
pop
jmp
jno
lret
out
sbb
add
xchg
jae
scas
adc
push
dec
pop
hlt
arpl
ja
xchg
repz
rep
ds
fisubl
fiaddl
ds
cmp
ss
aaa
cmp
xchg
add
jo
nop
cmpsl
mov
sub
testl
and
ss
cld
mov
test
cmp
xchg
jae
xchg
cld
mov
mov
daa
data16
cmp
sub
xchg
sbb
imull
lahf
daa
jecxz
or
jae
cwtl
xor
add
jg
rolb
jmp
and
sub
jae
dec
dec
cltd
push
imul
test
test
or
rolb
lods
lods
repnz
pop
jmp
sub
push
dec
icebp
pop
lahf
insb
lods
fnsave
ss
rcrb
xchg
lret
test
adc
inc
stos
dec
cwtl
sub
lock
sahf
rclb
outsl
jg
push
cmp
adc
cli
adc
cld
data16
mov
jne
inc
dec
loop
xchg
sbb
imul
int3
lret
jp
adc
fstl
movntq
xchg
rcrb
sub
mov
mov
lds
inc
mov
adc
xor
out
cmp
xchg
push
cmp
mov
ljmp
push
push
xlat
dec
shl
jmp
arpl
mov
sbb
ret
mov
xchg
dec
mov
and
daa
sub
xchg
cwtl
pop
lds
add
jno
es
cmp
out
mov
jl
test
ljmp
addb
dec
and
imul
jmp
fstp
inc
out
cld
add
sahf
jae
and
mov
test
aaa
xchg
inc
mov
inc
inc
popa
psllw
or
xchg
ja
popf
movsb
popa
push
and
pop
gs
in
addb
ja
add
test
mul
je
aam
and
stc
icebp
cwtl
xchg
jns
in
pop
sub
addr16
mov
add
and
sti
mov
dec
pop
lods
push
in
leave
and
sub
arpl
popf
or
ds
lods
xor
out
cld
mov
jnp
out
xor
fwait
wrmsr
add
sbb
jl
mov
shr
jp
outsl
test
jbe
mov
add
rorl
mov
mov
and
dec
jmp
mov
testl
or
sbb
xchg
outsl
mov
stos
clc
notb
popf
dec
hlt
add
fmulp
push
and
xchg
add
out
cmp
push
jb
sub
sbb
pop
pop
call
inc
push
inc
push
xor
std
hlt
sub
icebp
clc
int3
or
push
xor
aaa
cs
adc
rcrl
mov
mov
bound
lods
insb
cmp
pop
sbb
add
adc
add
in
pop
push
mov
xor
add
das
jmp
imull
push
int
adc
sub
les
xchg
sbb
xchg
pop
divl
adcb
cmp
push
jbe
lahf
aaa
xchg
hlt
xchg
inc
insl
enter
jecxz
jae
mov
jo
testl
mov
push
call
push
mov
arpl
xor
js
sub
jb
or
sbb
stos
ds
cld
sub
gs
mov
iret
inc
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
add
call
imul
adc
fisttpl
add
xchg
fsubr
into
dec
aas
pop
jp
jnp
cmp
jecxz
icebp
repz
rolb
and
into
mov
cmp
cmpsl
daa
pusha
sahf
inc
fs
xchg
test
in
pop
inc
into
xorl
sub
pop
cmp
pop
leave
outsb
in
add
bound
push
mov
mov
into
mov
jb
adc
push
dec
xlat
out
insb
outsb
jne
std
into
mov
insl
ds
push
mov
sub
cmc
push
popf
hlt
xor
sarl
jg
pop
xor
lods
ret
daa
cmp
mov
loop
addb
cmp
xchg
and
aaa
adc
push
cmpsl
jmp
cltd
cwtl
lods
std
sarl
cmpsb
imul
mov
inc
adc
mov
xor
or
mov
stc
sub
sub
fcomps
xchg
mov
xlat
mov
cltd
dec
std
sbb
sbb
lcall
lods
cmp
sub
lock
stc
ret
stos
mov
sub
test
mov
mov
and
xor
and
cmp
add
scas
js
fmul
jle
mov
or
add
ret
movb
shll
test
mov
push
or
hlt
xchg
sub
push
dec
xor
adc
inc
addb
adc
aas
or
out
loopne
sub
xchg
aas
xchg
mov
or
gs
je
mov
test
shlb
loop
shl
cmc
mov
out
xor
stc
or
sbb
adc
mov
inc
push
fsubs
lods
cmp
insl
xor
xor
mov
push
sbb
insb
mov
jecxz
pushl
or
dec
cltd
negb
and
push
xchg
int
or
out
notl
bound
pop
xchg
mov
jb
xchg
lcall
lock
xchg
lret
xor
cmp
push
lock
dec
sub
and
push
pop
rorl
add
mov
and
aaa
jo
pusha
or
sti
sarl
loop
pop
fsubrp
ja
fcmovnbe
mov
pop
fs
sbb
dec
in
dec
jmp
imul
fstp
sub
mov
sahf
es
in
adc
or
sbb
ret
jg
in
pusha
sbb
push
scas
cmp
idivl
cli
xor
sbb
cmp
cltd
pop
mov
into
cmpsb
clc
inc
in
jo
adc
sbb
lcall
daa
mov
mov
xchg
mov
sbbb
lahf
daa
enter
xchg
sub
lret
pop
mov
call
sub
sahf
xchg
lret
mov
or
ucomiss
pop
pushf
ss
fwait
fwait
in
call
jp
mov
xor
mov
inc
fstpt
in
push
mov
adc
cmp
addr16
xor
repz
fisubrl
inc
sahf
mov
data16
push
and
or
les
jg
pop
test
test
repz
mov
inc
aad
inc
sahf
lahf
xor
lds
jg
push
mov
pushf
xor
cmp
xchg
sti
mov
lret
jbe
pusha
cmp
mov
mov
mov
inc
clc
std
pop
inc
xor
cmp
repz
pop
popa
imul
sub
inc
test
or
in
xor
cltd
lods
cltd
mov
std
mov
push
out
jp,pt
nop
fisttpll
fucomp
mov
mov
out
scas
cmp
dec
adc
pop
pop
hlt
inc
lahf
push
test
scas
fnstenv
jge
pop
cltd
ds
loopne
xor
repnz
mov
xchg
xor
cld
es
xchg
das
sub
arpl
and
mov
sahf
mov
mov
xor
insl
pop
cmc
jecxz
leave
in
sub
jo
jg
pushf
aaa
cltd
and
jbe
insb
cmpsb
sahf
jge
cmpsb
fmull
fistpl
mov
nop
movsb
add
bound
xor
xor
rcll
sub
dec
rcll
cmp
mov
and
push
in
adc
cmpsb
jge
stc
xor
iret
add
adc
pop
add
adc
sti
add
sbb
or
sub
push
adc
stos
andl
jbe
cmc
fcomps
sti
scas
xchg
lahf
jmp
into
jne
out
mov
dec
lods
cmp
inc
adc
mov
lcall
dec
clc
sbb
pop
mulb
lret
mov
xchg
insl
sub
js
out
lret
outsb
mov
lods
pop
inc
stos
add
mov
iret
sbb
rclb
dec
dec
push
mov
clc
or
movb
add
enter
aam
aas
das
addr16
xchg
jns
idivb
push
lods
xor
xlat
sysexit
fdivrs
nop
mov
stc
imul
and
cmp
push
orb
xchg
add
push
mov
jb
insb
mov
pop
dec
mov
cmc
stos
jmp
pop
loop
pop
cmp
adc
pop
and
dec
add
sub
pop
push
xchg
lcall
mov
sarl
mov
arpl
mov
inc
inc
inc
adc
addr16
adc
scas
xchg
roll
sbb
ret
cmp
inc
xor
hlt
repnz
cmp
mov
nop
pop
imul
sahf
rorl
mov
push
add
and
mov
das
loop
into
mov
clc
inc
mov
lods
mov
lcall
cmp
push
faddl
das
or
jmp
or
mov
mov
mov
orb
inc
mov
pushf
cmp
dec
mov
iret
aam
xchg
fbld
insl
mov
mov
sbb
cmp
fsubrl
push
imul
stos
dec
lea
and
mov
scas
std
stos
dec
testb
sub
and
xchg
and
jns
pop
in
dec
popa
mov
rcrb
bnd
jl
pop
insb
negl
fdivl
out
pop
scas
mov
jae
mulb
mov
mov
xor
xor
adc
mov
sbb
sub
mov
push
test
insb
xor
ds
cmp
ret
das
lret
ds
enter
aad
mov
test
dec
inc
movsl
or
das
divl
xchg
sub
jb
or
dec
xor
xor
dec
gs
jno
rolw
push
shll
cmpsb
sahf
pushf
testb
or
xchg
repnz
test
mov
out
icebp
lods
fwait
pop
dec
dec
sbb
int3
in
cmp
and
in
and
cmc
pop
push
push
rcll
mov
pop
ljmp
sbb
or
aas
sub
loope
addps
pop
mov
sbbl
pop
lods
rcrl
fsts
dec
das
jl
dec
mov
mov
xchg
sbb
fstpt
xchg
outsl
sbb
and
xchg
dec
sbb
xor
inc
sbb
cmpsl
fwait
vmovd
sub
aad
mov
mov
lahf
aas
xchg
lock
dec
sub
add
xchg
inc
stos
inc
sub
xor
lcall
sahf
jmp
shr
jb
sub
fs
mull
adc
in
inc
mov
clc
xchg
inc
test
add
mov
test
faddp
fst
ljmp
jmp
pop
jle
cmpsl
lock
movsb
mov
out
ljmp
icebp
inc
imull
pop
into
pop
mov
fimull
sub
xchg
xchg
adc
cmc
xchg
jne
sub
adc
sub
xchg
pop
rclb
ds
xchg
movsl
dec
push
and
mov
pop
push
cmp
mov
and
push
sub
mov
sahf
lods
faddl
xchg
cmpsb
dec
inc
pop
leave
stos
jnp
lock
mov
ja
pop
jae
sub
cmpsb
add
add
lret
out
sub
mov
repnz
mov
adc
cmp
fcompl
xchg
or
add
ss
gs
iret
xchg
aam
xor
mov
loop
jnp
fildl
mov
push
push
iret
or
mov
adc
jno
sti
stos
xchg
mov
adc
xor
mov
bswap
dec
and
xchg
or
mov
das
jno
xchg
cmc
in
bound
lods
and
sbb
sarb
lahf
imul
aad
xor
testb
adc
test
jmp
adc
nop
xor
mov
jle
xor
jne
imul
loop
iret
icebp
pusha
aas
mov
and
inc
jmp
push
sub
mov
mov
and
int3
iret
and
test
les
fsin
test
pop
rclb
dec
pop
jo
push
lahf
lahf
mov
jg
dec
mov
dec
fldl
xor
out
sub
dec
sub
ret
xchg
pop
inc
add
fdivl
lds
insb
insl
push
repz
mov
leave
add
adc
inc
call
xor
loop
btr
js
xchg
in
data16
dec
loop
lods
inc
or
nop
mov
add
and
fsubl
inc
ja
je
fistpll
out
fidivs
jp
shlb
mov
call
stos
hlt
shl
pop
dec
jnp
fldl
lods
mov
xor
les
idiv
sbb
ljmp
in
cltd
add
dec
jp
nop
jmp
and
scas
xchg
push
data16
repnz
mov
out
jmp
jmp
jmp
data16
pop
pusha
aaa
das
into
addr16
outsl
outsb
xchg
or
outsl
push
shll
mov
jns
mov
daa
fnstcw
sti
fidivrl
sahf
pop
stc
sbb
test
and
mov
shll
jle
add
mov
push
jbe
xorb
lds
popa
xor
push
lock
dec
sahf
aam
add
pop
mov
rcrl
lods
fistpl
out
jge
mov
sbb
loope
sar
add
sbb
fmull
pop
pop
arpl
rcpps
push
int3
mov
push
imul
push
jle
push
dec
jge
in
push
inc
jnp
ljmp
adc
jns
sbb
dec
cmp
insb
xor
or
pop
mov
mov
loope
into
hlt
add
cmc
or
pop
dec
jo
popa
xchg
mov
or
sahf
sbb
cmc
popf
add
insb
stos
fisttpl
push
inc
adc
inc
jno
movsl
js
clc
iret
xchg
inc
insb
push
imul
adc
push
jno
psrlw
es
mov
pop
aas
jae
sbb
xchg
hlt
sub
mov
jns
lcall
icebp
sub
in
inc
repz
lds
jne
arpl
push
stos
rcrb
jg
mov
addr16
xchg
mov
int
std
aam
lahf
cld
push
add
jo
movb
aam
jle
movsb
mov
add
xor
dec
ljmp
dec
out
insl
imul
jg
cltd
cmpxchg
mov
pop
mov
inc
daa
fiaddl
pushl
and
outsb
push
loopne
inc
test
aas
pop
dec
inc
sbb
fiaddl
mov
icebp
pop
add
int
int3
arpl
mov
xlat
ss
adc
sub
lret
mov
ja
scas
gs
sub
push
mov
scas
aas
and
adc
xchg
fwait
bound
stc
daa
aaa
fdiv
lcall
inc
or
push
sub
sub
ret
int3
or
insl
inc
repz
insl
fmul
ss
lods
mov
cmpsb
xchg
arpl
jp
jne
outsb
fisubrs
or
std
in
icebp
push
jmp
loopne
jb
adc
or
subl
out
add
insl
adc
or
fimull
dec
mov
mov
mov
sub
and
inc
pop
xchg
insl
mov
out
bound
cmp
lods
add
mov
pop
lret
or
nop
and
sbb
sub
jge
xchg
pop
jge
sti
fs
lods
outsl
push
ds
je
mov
cld
cmpl
mov
mov
rcrl
dec
loopne
push
xchg
pop
gs
out
mov
push
mov
mov
jl
not
fildll
mov
add
pop
or
scas
movsb
adc
pop
out
stos
loopne
aaa
cmp
in
mov
pop
and
rol
in
push
rol
inc
sar
xor
testl
dec
xor
xor
fsubrp
add
jb
adc
sub
xor
lahf
push
pop
push
push
push
loopne
push
mov
push
mov
ljmp
and
mov
lcall
mov
lds
lods
dec
pop
in
mov
cmpsl
lcall
mov
lods
and
jne
ss
push
int
xchg
xchg
out
xchg
jecxz
in
lret
pop
xchg
pop
mov
xchg
sub
dec
rcll
fadds
xchg
push
bound
xchg
ret
lcall
movsb
adc
clc
sbb
dec
scas
scas
in
mov
sub
addr16
sub
mov
nop
push
arpl
loop
rolb
cmp
fnstsw
mov
mov
lret
adc
subl
jp
test
add
xor
bound
out
fs
push
test
stos
jmp
cmp
push
loopne
sub
stos
jns
sbb
dec
mov
faddl
incl
cltd
nop
frstor
push
jnp
scas
pop
jbe
mov
mov
out
inc
push
aas
jae
push
and
in
test
sbb
adc
test
pop
cli
in
mov
out
and
xorl
orl
jecxz
pusha
movsb
std
mov
rorl
dec
cmp
int
push
add
iret
push
inc
repnz
fs
xchg
push
shll
notb
pxor
data16
pop
test
mov
mov
jb
jle
clc
pushf
or
sysexit
cmc
xchg
xchg
loope
ds
enter
shrl
mov
sti
iret
xchg
aas
add
add
push
hlt
sbb
nop
xor
stos
enter
cmp
ljmp
xchg
sbb
adc
or
adc
xchg
mov
scas
mov
push
push
ljmp
in
repz
out
xor
ret
iret
fstl
enter
add
inc
out
dec
add
imul
leave
outsl
dec
pop
mov
test
cmp
shrl
push
xchg
pusha
es
les
sahf
dec
sbb
push
adc
cli
cmpsl
or
mov
pop
cmp
push
in
sub
and
ljmp
andb
cli
andb
pop
pop
xchg
mov
dec
out
xchg
in
and
inc
dec
je
adc
decl
xor
les
sbb
cmp
pop
nop
xchg
and
and
ds
leave
pop
push
mov
push
pop
les
cmp
mov
fstps
in
mov
pop
jg
jle
sbb
rolb
adc
pop
gs
cwtl
rcll
shll
ja
pop
sbb
cs
dec
xchg
adc
sub
hlt
xchg
cmc
adc
out
xor
xlat
pop
sbb
xlat
xchg
sub
push
sbb
mov
push
inc
jne
gs
xorl
lods
cmpsb
fisttpl
in
out
aam
outsl
mov
rcrl
push
push
mov
cmp
lods
sub
or
xor
sbb
ljmp
movsb
ljmp
fs
cmp
inc
adc
adc
or
cld
mov
mov
arpl
xor
aad
cmp
mov
jne
xchg
jo
je
cmp
or
int
mov
sarl
or
jb
icebp
lret
sbb
or
aad
subl
fstps
ror
add
xor
dec
xor
mov
jae
mov
fsubrp
pop
out
flds
aad
mov
leave
jnp
xchg
sbb
fsubs
into
mov
cmp
adc
xchg
mov
ud2
cs
mov
pop
fstpt
test
inc
lock
popa
pop
push
pop
lea
mov
dec
jge
jg
mov
jo
lahf
push
adc
mov
and
mov
and
mov
jne
rorl
les
sbb
addl
rcll
jg
or
hlt
sub
lods
push
push
add
negl
jmp
nop
nop
xchg
mov
mov
xor
aas
lret
lods
or
fldl
std
pop
mov
or
scas
jae
push
addb
ret
andl
loop
mov
cmp
mov
sub
int
hlt
sahf
mov
movb
inc
dec
and
shrb
xchg
lcall
xchg
jnp
in
sbb
js
sub
pop
outsb
cmpsb
cmp
jmp
test
adc
mov
inc
jbe
cmp
aas
repnz
cmp
jmp
les
pop
push
dec
les
fildll
jbe
mov
out
mov
mov
std
jp
xchg
insb
and
stc
fistps
scas
lret
cmp
fnstcw
add
xor
adc
insb
gs
fwait
or
insl
jmp
and
sub
sub
lock
cmp
add
xor
dec
mov
xor
sbb
imul
sarb
std
mov
adc
cmp
scas
ljmp
xor
stc
or
push
into
and
and
dec
dec
pop
imul
inc
mov
fs
frstor
gs
mov
lock
mov
xchg
in
jbe
inc
xchg
adc
sub
inc
popa
xchg
call
repz
jg
movsb
push
jnp
push
shlb
fidivrl
lds
jmp
dec
dec
dec
arpl
loopne
outsl
ds
pushf
xlat
es
ss
lret
jae
dec
push
cli
shll
ja
or
xchg
push
loopne
das
jne
in
sbb
ljmp
mov
testb
popa
lahf
jl
jo
pusha
sbb
test
or
lods
sbb
jo
ret
jb
cli
cmc
add
out
loope
jge
jge
arpl
clc
push
sub
and
cmp
and
dec
lret
adc
mov
mov
cmp
and
shr
sbb
sti
cli
pop
sbb
repz
mov
movsb
lahf
jecxz
pop
int3
xchg
adc
shrb
inc
lods
test
pop
lcall
sub
push
xor
jnp
in
dec
sub
imul
xchg
jb
cmp
sub
mov
sbb
dec
xchg
cwtl
jp
cmp
push
sbb
pusha
leave
call
push
dec
mov
mov
mov
or
in
xor
addr16
js
xchg
xor
jb
xor
pop
xchg
sub
push
fmull
pop
and
inc
mov
int3
or
inc
mov
loopne
xchg
and
lods
sub
and
test
mov
lods
jns
rcr
push
fwait
lahf
out
stos
inc
mulb
popa
aad
mov
cmp
aas
int3
sbb
push
jg
bnd
adc
xor
fsts
dec
pop
push
mov
pushf
test
fmuls
in
lahf
aaa
or
repnz
lret
push
insb
push
dec
or
dec
jo
cmp
cmpsb
jle
sar
jb
pop
sub
andb
rol
inc
rclb
ds
lods
in
gs
sarl
xchg
sub
mov
dec
in
ss
cwtl
inc
popfw
xor
lods
mov
mov
fimull
insl
ja
fistl
add
stos
bound
dec
xchg
js
sbb
movsb
mov
js
inc
mov
icebp
or
dec
out
fidivrs
cmp
leave
pop
orl
sarb
fildl
sbb
push
xor
pop
in
mov
ss
adc
mov
mov
and
push
pop
and
bndldx
es
adc
shlb
mov
mov
mov
testb
lea
jne
ljmp
cmc
sbb
jecxz
packuswb
inc
xor
inc
lods
xchg
xchg
sti
aas
sbb
dec
je,pn
std
insb
cs
jp
fldl
or
cmpsl
inc
add
loopne
sbbb
push
ret
pop
sti
cmpsb
ret
ss
pop
mov
out
shrl
mov
fistl
and
inc
aaa
sbb
cmp
fimull
sub
scas
add
adc
cmp
lea
shrb
sbb
out
sbb
inc
bound
xor
notl
cmpsb
ret
mov
or
fwait
pop
dec
mov
enter
bnd
sub
fildl
nop
jge
push
mov
sub
nop
xor
xor
jne
add
push
loopne
push
testb
mov
imul
dec
shrl
call
lods
loope
arpl
lret
lock
and
loop
mov
and
cmpsl
cmpsb
add
adc
fwait
shr
int
ja
lods
cltd
bound
push
clc
lret
jbe
sbb
and
stc
push
movsl
sbb
cmc
lds
not
loop
cmpsl
xchg
xor
nop
pop
adc
mov
fdivrl
jne
icebp
sbb
xor
lahf
sbb
jmp
ss
cmpsl
inc
adcb
call
out
sub
daa
fisttpll
xor
daa
add
pop
scas
add
mov
into
sbb
mov
jns
mov
loop
adc
xchg
ja
inc
push
jg
pusha
shrl
sub
add
cld
int
loope
cmpsl
stc
cmp
push
out
dec
xchg
ret
inc
outsl
and
mov
sahf
pop
and
aas
jb
mov
adc
arpl
jl
jge
jae
out
jecxz
pop
movsl
cmp
fucompp
pop
popf
pusha
loopne
insl
sbb
push
mov
xchg
data16
int
dec
roll
nop
xchg
mov
dec
mov
cltd
adc
fs
out
js
insb
loope
subl
xchg
scas
addr16
ret
xchg
push
xor
fistpl
add
jo
test
lock
popa
mov
int3
lret
aaa
sbb
pop
jecxz
push
push
dec
rol
sub
push
cmpsb
add
ss
sar
push
into
jg
in
sbb
mov
in
inc
or
sub
xor
mov
pop
insb
sub
cmp
push
xor
xchg
push
xchg
lock
loopne
popf
inc
int3
into
loop
fdivs
xchg
mov
push
test
lret
add
mov
imul
rol
push
outsb
int3
fmull
cltd
jnp
push
cmp
ror
cli
mov
cmp
push
sbb
iret
fstl
lea
dec
xchg
adc
iret
pusha
xchg
and
push
test
cmp
push
lahf
xchg
dec
insb
lret
mov
into
add
lods
aam
push
or
addr16
or
fildl
into
ja
jo
push
loopne
push
pop
scas
stos
popa
addr16
xchg
pushf
fildll
sub
cmp
ja
pop
fstps
call
lock
icebp
leave
mov
xchg
cmpsb
push
mov
cld
nop
add
sub
in
xchg
or
fdivs
sbb
mov
aam
sahf
dec
jl
or
sbb
test
inc
mov
sbb
arpl
push
push
and
dec
and
cmpl
or
mov
ss
aad
push
and
fwait
cmp
cmpsl
das
fs
xor
icebp
and
pop
xchg
and
mov
movsl
inc
leave
sub
out
ss
popa
mov
test
je
sbb
es
jo
mov
mov
sahf
push
mov
icebp
pop
xor
inc
iret
mov
aaa
hlt
lret
fwait
mov
jmp
dec
inc
adc
mov
adc
call
xchg
inc
xlat
les
xchg
shlb
cltd
ret
or
mov
pushf
and
mov
xchg
sbbb
imul
mov
sub
push
dec
and
xchg
mov
lods
dec
das
inc
mov
pop
pop
push
dec
ja
pop
push
sbb
xlat
add
sbb
into
pop
jg
mov
cmp
add
ret
xchg
stos
in
or
mov
rcl
jmp
xchg
jo
je
loop
cltd
sbb
xchg
shlb
mov
cmpsl
dec
and
sbb
movsl
mov
dec
xchg
inc
mov
dec
cs
out
addr16
mov
stos
out
add
in
inc
xor
add
lret
sub
ret
loope
mov
rcrb
mov
push
stos
inc
std
mov
adc
adc
stos
popf
sub
pusha
setno
adc
pop
adc
notb
jo
ret
add
jbe
cmc
shl
mov
loopne
sub
cmp
daa
mov
adc
dec
fbstp
xor
lods
pop
movsl
jbe
enter
jb
adc
lcall
dec
aam
out
mov
mov
add
adc
hlt
xlat
xlat
jl
int
adc
stos
out
in
adc
lret
sbb
lahf
lods
cli
push
jo
mov
xchg
pop
sbb
mov
mov
cltd
fldl
pop
push
dec
popf
cmp
push
sub
xlat
jno
jecxz
add
adc
fwait
sub
imul
test
sti
mov
pop
loopne
sbb
push
and
pop
sub
sub
imul
inc
inc
cli
inc
xor
add
into
mov
pop
mov
gs
xor
jne
std
xchg
out
dec
adc
movsb
lahf
js
jmp
push
xor
fs
dec
cmpsl
decb
inc
fwait
outsl
inc
adc
clc
test
xchg
jle
out
xchg
adc
push
arpl
dec
mov
jne
jmp
les
movb
inc
sbb
or
mov
ds
push
std
sub
mov
out
incl
or
dec
fists
jo
in
imul
cld
sub
insb
test
fs
imul
icebp
popa
jl
pop
rcll
sub
xchg
in
dec
out
add
fidivs
in
inc
iret
inc
pop
das
in
scas
and
push
or
faddp
sub
sub
push
nop
call
movsb
sti
mov
mov
and
or
or
jl
inc
dec
mov
sbb
add
arpl
loopne
inc
in
sbb
in
pop
sub
int
cmpsl
sub
fsubl
push
push
rcll
sub
xorb
jns
or
cmp
lcall
sbb
push
data16
pop
pop
mov
pop
push
pop
sbb
pusha
out
call
and
adc
dec
push
inc
or
js
and
ja
ja
jnp
outsl
les
sbb
mov
aas
cmp
call
mov
dec
pop
insb
sbb
test
popa
lock
movsl
sub
mov
fwait
xchg
dec
roll
xor
cmpsl
xor
mov
xchg
mov
jge
inc
cmpsl
bound
xlat
xchg
arpl
out
mov
andb
or
inc
sbb
mov
pop
ret
shll
add
adc
jle
mov
rclb
inc
imul
cmp
xchg
icebp
or
xor
pop
stos
cmp
and
jns
and
decl
icebp
dec
fs
pop
lock
push
iret
cmpl
inc
jecxz,pt
adc
cmp
aas
stos
aam
out
in
inc
je
fxch
sbb
mov
loopne
inc
shlb
add
lret
rcll
jmp
or
xchg
stc
push
popf
mov
xchg
shlb
and
inc
adc
push
fcoml
xor
js
or
mov
cbtw
add
inc
movsb
fnsave
out
sbb
rcll
dec
clc
addr16
push
jae
fwait
shlb
add
ja
dec
mulb
andl
sub
bound
lcall
push
ja
ret
mov
into
xchg
add
daa
in
pop
call
lcall
imul
in
sbb
push
mov
mov
adcb
fsubp
int
add
push
push
cmp
jae
out
out
fnstsw
call
fisttps
sbb
popl
lods
std
or
adc
in
lods
lock
loopne
lods
adc
je
shlb
xor
outsb
inc
cmp
mov
lret
inc
jno
lock
pop
jb
imul
sbb
mov
test
xchg
xor
or
ret
gs
mov
adc
out
push
fs
dec
push
je
pop
pusha
lds
sbbb
push
bound
sub
mov
cmp
mov
xchg
insl
rcrb
ljmp
mov
cld
add
mov
je
jp
jae
adc
push
subb
popf
scas
cmp
mov
push
push
pop
jmp
test
dec
shl
pop
in
add
in
shlb
test
lock
add
cld
or
cltd
int
mov
adc
rcr
push
pop
pop
in
xor
inc
xor
push
sbb
in
cwtl
jb
pop
in
les
adc
dec
xchg
xor
adc
pushf
fisubl
sbb
enter
mov
mov
outsb
xor
or
dec
pop
adcb
fidivl
sub
jge
and
fidivs
roll
cs
enter
aam
or
lret
xor
dec
sbbl
data16
outsl
les
and
push
test
test
and
pop
xor
lds
js
cmp
imul
scas
rcpps
loopne
jbe
fsubrs
push
cmp
mov
mov
sub
cmpsl
mul
add
mov
and
mov
mov
jnp
ds
lahf
add
mov
ret
mov
cli
lahf
push
mov
dec
lea
out
or
push
xor
int
popf
and
push
or
in
sahf
push
push
lods
and
test
daa
jp
cwtl
xor
mov
xor
mov
stos
add
push
sbb
mull
out
mov
mov
jae
sbb
repnz
fmull
imul
adc
aam
int
and
adc
jp
xor
scas
jns
mov
outsl
imul
xchg
loop
fisttps
inc
pop
out
movsb
lea
sbb
sbb
mov
push
in
lahf
or
pop
sub
cmp
mov
mov
sbb
mov
ret
fnstsw
push
movsl
out
cmp
addr16
xchg
push
ja
outsl
cmp
push
mov
nop
shlb
out
ja
icebp
icebp
xchg
aam
enter
mov
or
aas
push
mov
dec
mov
adc
push
imul
jmp
es
adc
cvttps2pi
sub
fstp
mov
outsl
xchg
push
les
pop
cmp
mov
int3
dec
scas
ror
sub
test
add
testl
sbb
int
xabort
roll
or
mov
sar
xor
ja
pop
add
pop
cmc
jecxz
cwtl
inc
add
popa
lds
mov
dec
sbb
test
pop
sarl
cmpl
xchg
mov
pop
mov
dec
jmp
pop
test
pop
aam
push
mov
nop
leave
ficoms
add
xor
fistpl
xor
call
xchg
adc
ret
int
out
xor
jno
hlt
sbb
mov
mov
aad
scas
ret
into
cmp
mov
pop
repz
aam
in
pop
cmc
dec
mov
lret
outsl
scas
loope
add
inc
sub
add
xor
jmp
push
xlat
mov
jbe
and
pop
divb
jle
sbb
sub
jne
lods
push
push
outsl
mov
pop
rcpps
das
push
inc
lahf
jbe
icebp
add
xchg
je
scas
push
fisttpl
inc
pop
cs
xchg
jmp
arpl
lcall
jmp
mov
ret
jbe
sub
cmpsb
fsubrs
jmp
push
rolb
fwait
xchg
outsl
xor
lahf
icebp
out
popf
push
sar
aas
xor
mov
fidivl
jl
xorl
sbb
push
outsl
sbb
dec
jns
cmpsb
mov
mov
jmp
sub
cld
or
bound
ficompl
dec
insl
mov
subps
jbe
enter
add
cmp
rep
cmp
adc
mov
jnp
stos
hlt
je
mov
fistps
clc
mov
lahf
push
lcall
mov
sbb
dec
rol
cvtdq2ps
and
test
xchg
addl
call
xchg
push
cmp
jg
pushf
and
pop
push
adc
imul
mov
insb
or
xor
xchg
pusha
daa
repz
fisttpll
icebp
adc
mov
mov
repz
bound
addr16
aam
xchg
and
fidivs
call
dec
dec
inc
mov
jne
scas
in
sar
fwait
cmp
dec
cmp
jne
repnz
jmp
dec
xlat
sbb
leave
inc
aam
sarb
jp
adc
xchg
adc
insl
xor
ss
lods
lret
ret
mov
mov
and
jmp
sbb
fidivs
decl
std
mov
mov
mov
adc
inc
and
cld
push
cmp
inc
into
jno
lea
idivl
jbe
mov
rcrb
jle
sub
inc
scas
lods
push
adc
cmp
movsb
cmp
imul
pop
or
mov
movsb
dec
jle
test
push
push
or
in
popf
xor
cmp
pusha
mov
xchg
pop
ljmp
push
mov
xor
or
scas
test
xchg
std
and
xor
in
jg
jp
mov
xor
mov
xchg
mov
pop
inc
aaa
pop
popf
lea
sahf
mov
sarb
into
jns
mov
aam
push
aam
add
mov
cmp
fldcw
int
insb
adc
inc
aam
lds
add
loop
mov
push
jl
test
add
out
mov
lea
pop
test
adcb
fcoml
or
out
sbb
movsb
bound
shlb
mov
insl
je
scas
loope
inc
stos
call
xor
inc
mov
mov
jno
or
add
push
mov
mov
mov
sub
mov
push
pop
cld
xchg
inc
scas
mov
push
aam
cmp
es
hlt
xchg
xchg
rol
mov
add
dec
insb
xor
into
inc
data16
daa
mov
sbbb
paddb
or
jb,pt
jp
lret
push
cmp
jb
scas
push
xor
rcrb
scas
in
int3
stos
int3
or
aaa
test
or
jp
pusha
enter
and
pop
xor
fildl
jns
sub
inc
xor
cmp
fnstcw
or
sub
outsl
dec
ja
add
add
loope
cmpsb
cmpsb
out
pop
push
je
fidivrl
js
decl
xchg
mov
cmp
scas
or
push
adc
inc
jne
mov
adc
mov
jle
lods
xor
xchg
dec
repz
fiadds
mov
inc
in
lcall
sbb
fldl
add
xor
push
insl
jle
xchg
sbb
data16
xchg
movsb
jb
mov
and
dec
jmp
test
push
in
or
clc
mov
mov
push
cmp
mov
bound
icebp
xor
insb
test
mov
cmp
mov
pusha
bound
inc
test
mov
add
loop
pop
into
xchg
sbb
add
jge
mov
jle
and
mov
fstl
xor
push
pop
mov
push
cmp
cld
jl
outsl
add
out
mov
pop
imull
xor
jg
sti
in
in
push
loop
loopne
aas
push
into
stos
dec
popf
mov
rcll
aam
cmpsl
xor
sbb
fiaddl
hlt
loope
xchg
add
add
adc
dec
ffree
inc
mov
pop
cltd
repz
das
dec
out
cmpsl
mov
test
inc
pop
ss
mov
dec
dec
jp
icebp
jbe
das
or
pop
insl
rorb
enter
dec
xor
call
ljmp
mov
mov
mov
dec
js
xchg
sbb
les
cmp
lahf
aad
mov
xorl
xor
ja
aas
popf
jge
insb
shlb
ret
test
add
mov
xor
mov
mov
mov
movsl
aas
pushw
repz
cmp
sbb
clc
sub
imul
test
lds
shll
mov
push
cmp
test
or
pop
lret
leave
test
divl
cmovno
xchg
stos
pop
or
xchg
test
jno
cs
cwtl
push
cmp
xlat
test
shll
pop
stos
nop
fdivrl
push
popa
pop
xchg
ljmp
mov
sub
and
std
cmpsb
push
mov
fnsave
adc
mov
testl
xchg
lods
jb
rcll
in
pop
popf
or
or
es
jae
jb
xchg
roll
mov
xchg
push
add
inc
rcrl
or
shrl
testl
mov
mov
mov
loope
clc
int
xrelease
sbb
bound
sbb
fldcw
js
jo
enter
sbb
add
cwtl
pusha
stos
insb
push
push
movsb
hlt
cwtl
bnd
cmpsl
xor
stos
and
cmp
or
test
pop
inc
in
inc
mov
rcll
inc
inc
push
sbb
jle
loop
dec
imul
lock
dec
or
xor
mov
xor
loope
mov
sub
gs
mov
test
std
dec
dec
inc
mov
mov
int3
movsb
enter
mov
out
mov
stos
mov
fidivrs
test
inc
mov
lods
fwait
mov
vpsubusb
aad
sbb
std
dec
mov
ret
jno
pop
push
fwait
scas
adc
adc
fdiv
sahf
dec
jns
lret
dec
cmp
popf
cmp
mov
lret
test
ljmp
loope
sbb
sub
xorl
mov
mov
sbb
out
outsb
or
fwait
mov
jle
ret
outsl
aad
sti
xchg
mov
js
cmp
xor
dec
mov
sub
xor
jge
xlat
shrl
dec
sub
in
shrb
mov
push
xor
mov
and
rcr
ret
les
pop
push
sbb
pop
xchg
inc
cmpsl
mov
jae
sub
loop
jns
mov
cmp
sbbl
iret
push
sbb
fs
enter
pushf
divb
rclb
cmp
mov
fstpt
pop
pop
cwtl
cmp
mov
cmp
adc
xor
xchg
xchg
add
xor
jae
mov
aaa
xchg
inc
pop
pop
pop
es
outsl
sub
in
push
insl
mov
xlat
add
or
jge
cmpsl
jne
icebp
bound
xchg
xchg
addr16
fs
psrad
xor
negb
scas
out
pusha
js
mov
in
cli
daa
popa
mov
jae
pop
or
adc
sub
xchg
int3
clc
frstor
push
mov
fs
fdivrs
sub
enter
andl
lods
lcall
and
mov
incb
lods
repnz
adc
or
imul
add
add
mov
dec
gs
cmp
or
and
jmp
push
sub
test
cmp
imul
add
push
cmc
stc
sti
pop
pop
dec
psubb
push
subl
pop
sub
sub
jnp
xchg
rclb
jg
push
in
cmp
pop
push
jg
inc
push
adc
mov
jge
push
cmp
inc
cmp
leave
out
addr16
insl
jge
imul
sbb
add
mov
jle
mov
in
mov
push
jae
loope
push
push
into
jl
pop
ss
push
xchg
jmp
les
rorb
in
int
cmp
sbb
inc
outsl
pop
rolb
mov
dec
out
fiaddl
ja
subl
in
add
fistl
js
mov
popl
dec
rcrb
test
outsb
push
pop
fwait
sub
mov
sub
insl
test
imul
xor
jge
jl
in
or
dec
out
ja
mov
cmp
js
sar
pop
mov
push
mov
cmp
xchg
lret
mov
sti
xor
dec
fmul
stos
pop
and
and
inc
cmpsb
lds
stc
jmp
pop
xchg
fs
dec
leave
ja
call
in
ficoms
mov
and
xchg
repz
cld
xor
test
out
sarl
mov
in
shlb
les
leave
mov
stc
in
addr16
and
cmp
inc
mov
lock
adc
je
call
jae
imul
or
xchg
jl
addl
ja
aaa
sub
sbb
pop
repnz
mov
cmp
mov
pop
cli
ret
xor
hlt
leave
iret
into
je
mov
pushf
xchg
cmpsb
std
shl
adc
outsb
xor
sub
xor
scas
sbb
mov
xchg
rcr
jle
jge
popf
xchg
leave
fistl
movsb
test
lods
shlb
cmc
jge
fmul
sbb
jle
daa
mov
xchg
mov
gs
in
cmp
inc
inc
mov
and
mov
sbb
mov
mov
rol
fwait
mov
pop
adc
scas
mov
inc
and
sbb
cmpsb
cwtl
push
ds
shlb
test
push
cmp
add
fs
jp
ja
popa
jno
mov
aas
xchg
lret
in
push
jbe
movsl
sahf
shr
adc
jns
inc
sahf
fs
mov
je,pn
in
jb
lds
pusha
test
xor
aas
shlb
ljmp
add
xadd
add
pop
push
ds
test
push
lahf
jg
pop
cmp
cmpsb
out
loop
ss
fwait
shlb
ds
idivb
or
shr
jl
ret
test
in
push
xchg
xchg
pop
sahf
mov
les
xchg
movsl
mov
push
je
ffree
pop
movsb
push
mov
lods
xor
gs
ret
ret
inc
inc
add
or
das
imul
lods
mov
insl
sbb
cli
leave
loop
xchg
inc
cwtl
xchg
lret
jns
mov
lock
pushf
adc
lret
xchg
jno
xor
xchg
adcb
mov
test
shrl
repnz
jmp
mov
add
mov
push
inc
push
in
aaa
in
add
adcb
fs
js
test
out
adc
repz
aaa
je
and
fbld
bound
push
scas
das
icebp
loopne
add
inc
cld
pop
insb
cmc
sahf
jecxz
sub
int
jno
bound
mov
dec
dec
jl
xlat
sub
jge
ror
mov
das
aam
xchg
and
jae
pusha
je
dec
aas
pop
mov
lret
push
inc
in
push
xor
rorb
aad
xor
push
aaa
xor
daa
xchg
xor
popf
aam
aaa
sarl
mov
add
std
sbb
in
mov
jae
pop
bound
roll
imul
psraw
loopne
or
loop
dec
mov
lds
pop
inc
sub
lods
popw
push
fists
cmc
mov
mov
leave
popf
mov
pusha
cmp
mov
cmp
in
sti
push
int
shll
ds
adc
shll
fwait
aad
filds
mov
lahf
mov
mov
sub
xchg
add
dec
shlb
cmp
mov
roll
mov
dec
and
sub
wbinvd
jno
push
mov
jnp
mov
xchg
and
cs
inc
shlb
inc
mov
dec
test
dec
sahf
inc
fstpt
pushf
mov
rcrl
je
stos
pusha
movsb
hlt
cwtl
pop
sub
mov
inc
icebp
popa
jmp
pop
push
dec
test
fs
addr16
sbb
jle
jns
xor
dec
aas
movsb
fwait
into
shll
and
je
loope
fs
nop
pop
out
pop
jecxz
ljmp
add
roll
mov
dec
mov
dec
mov
pop
cltd
mov
cli
jp
add
movsb
mov
xorb
lcall
in
lea
rorl
sti
xchg
inc
push
sub
inc
into
aam
cmpl
ljmp
repz
push
jne
xor
addr16
lods
pop
loop
cmp
cmp
xchg
call
mov
adc
cmpb
aaa
in
mov
in
imul
inc
sbb
inc
test
and
pop
pop
mov
pop
jnp
mov
lock
push
hlt
mov
jbe
or
daa
fwait
outsl
mov
fwait
cmp
jle
add
or
fldenv
stc
stos
out
add
xor
jl
pop
pushf
sbb
sub
pop
mov
dec
mov
jle
push
mov
int3
sbb
jmp
scas
and
sarb
clc
in
jmp
idivb
aam
call
xchg
push
pop
insl
mov
and
aad
mov
push
aaa
push
pushf
adc
xchg
or
mov
mov
enter
xor
jle
test
pop
popa
popa
js
push
rclb
mov
test
mov
or
push
xchg
fwait
cmp
jmp
test
push
sahf
push
sbb
xor
in
inc
fldenv
arpl
iret
aaa
or
popf
neg
lds
loopne
adc
or
leave
cmpsb
inc
xchg
mov
test
bound
mov
mov
dec
mov
movsl
daa
xor
stos
push
jne
loopne
int3
sbb
repz
sbb
mov
gs
jmp
jae
push
clc
test
adc
push
mov
cmc
jmp
ja
pushf
mov
repnz
cmpxchg
sbb
bound
mov
push
sub
sbb
xchg
stos
loopne
fcoml
aaa
and
lock
mov
out
jge
and
dec
jl
inc
test
add
jbe
xchg
jne
mov
int
addr16
adc
rcr
fsubs
jle
fwait
imul
cltd
fstpt
cs
xchg
test
mov
push
in
pop
and
out
repz
ja
lret
dec
mov
sbb
sub
push
popf
push
push
jmp
pop
pop
add
xchg
pop
dec
loop
sbb
sbb
xor
mov
cmp
dec
add
inc
pushf
mov
loope
and
mov
popa
cmpsb
and
push
mov
ja
in
inc
cld
pop
jns
stos
pop
out
aad
pop
flds
or
clc
adc
and
shlb
mov
or
push
loope
test
push
mov
mov
fwait
insb
mov
sbb
add
and
add
mov
dec
push
call
negl
inc
add
mov
orb
pusha
mov
mov
in
push
xor
popl
mov
sub
add
or
adc
sbb
xor
sbb
in
sbb
insb
jp
push
in
cs
mov
mov
xorb
out
push
add
repz
test
cmp
jle
aas
mov
xor
xor
lret
rcll
add
mov
cmp
test
jo
mov
das
jo
je
mov
inc
or
mov
lods
or
pushf
sbb
movsl
cltd
jp
push
arpl
popf
out
fisttps
ret
pop
shl
insl
inc
out
add
daa
lret
or
out
nop
add
sub
add
dec
orb
out
or
adc
sti
rorb
lret
xchg
lahf
movsb
push
insb
js
jmp
into
cmpxchg
es
cltd
mov
fidivrl
xor
into
mov
sarl
call
in
or
aad
or
out
jnp
adc
es
aam
sbb
adc
addr16
sbb
lock
xchg
push
out
dec
cmp
push
std
and
shrb
push
adc
popf
into
icebp
lea
divl
push
sbb
or
test
ja
stc
and
push
sbb
in
push
decb
or
and
or
pop
test
mov
mov
xor
cmpsb
jno
xchg
sbb
ljmp
and
xor
in
mov
mov
movsb
sbb
out
push
fadds
adc
in
xor
pushf
pop
jmp
lret
aam
jl
mov
jne
xor
call
jp
jg
xchg
stos
cmp
or
out
jl
ret
jge
or
movsl
loop
mov
fnstenv
ds
mov
push
out
popa
cs
mov
dec
adc
ds
xchg
sbb
sti
aaa
pop
insl
popa
das
sbb
std
push
inc
xchg
and
sub
cmp
insb
ja
lahf
in
enter
xchg
xchg
outsl
mov
fistps
movb
out
ror
bound
xchg
icebp
inc
cwtl
push
mov
cld
loope
repz
or
into
cmp
sbb
inc
aas
jb
xchg
sti
inc
dec
adc
xor
repnz
fnstenv
cld
lock
cmp
cmp
in
lret
pop
vcmpsd
add
popa
xchg
shlb
pop
fmul
add
adc
popa
add
inc
cmpsb
and
fnsave
repnz
ror
push
dec
fcmovnbe
sbb
mov
push
push
inc
in
dec
add
outsl
jb
iret
sbb
sub
in
xchg
loop
arpl
lret
imulb
les
inc
in
sub
aaa
add
mov
mov
pop
xor
int3
and
cltd
testb
fstl
pusha
mov
cmp
push
sbb
add
adc
cmpsb
outsb
cs
jns
bound
ret
inc
pop
shrl
sbb
jb
lds
popf
mov
xchg
leave
rcr
sub
stos
fidivrs
pop
addr16
testl
push
mov
push
insb
nop
fwait
mov
add
pop
clc
lret
lret
pop
xchg
pop
pop
push
pop
mov
imull
xchg
cmpsl
aad
sbb
pop
mov
ljmp
sub
fsubs
bound
pop
sub
cli
pop
shll
decb
cmp
aas
cmp
adc
or
aam
shl
adc
pop
das
lcall
sbbl
cmp
mov
lar
test
mov
mov
ljmp
in
clc
sti
xchg
adc
out
lods
and
lret
jbe
or
mov
or
push
xor
xor
jo
lds
rcl
shlb
dec
test
sbb
cld
adc
shrl
and
test
mov
sub
mov
in
xchg
sub
aam
cltd
push
and
inc
fistl
daa
neg
or
pop
and
mov
inc
sub
addl
lret
popf
aas
add
pop
push
xchg
stc
sub
adc
icebp
cmp
ror
jnp
push
push
xor
orb
out
in
dec
addr16
sarb
adc
pop
in
lods
shrb
sub
aam
fisttpll
rcrb
insb
stos
repnz
in
xchg
dec
cmp
push
xchg
sbb
testb
dec
sti
imul
mov
or
cwtl
bnd
arpl
xor
cs
pushf
lock
cmp
dec
push
jp,pn
divps
cli
pminsw
movsl
push
and
xor
push
mov
bswap
dec
and
cltd
jmp
ret
cli
push
testb
mull
in
pop
push
rcrb
pop
cld
in
dec
cmp
jb
sahf
xchg
jg
sub
cmpl
inc
fsubr
lock
fcoms
pushf
test
mov
testl
mov
mov
pop
ljmp
and
adc
mov
push
testl
sub
push
mov
add
stc
push
and
or
pop
aam
nop
shrb
stos
sbb
cmp
push
inc
popf
pushf
dec
js
and
mov
jae
xchg
xchg
nop
xchg
mov
sbb
push
rcrb
std
in
or
push
mov
sbb
ret
pop
sbb
sbb
fidivs
jnp
sub
popa
inc
rcrb
fbstp
bound
testl
ljmp
add
in
outsl
ja
add
movsl
gs
or
mov
mov
sbb
or
cmc
mov
hlt
xor
inc
je
inc
mov
pop
insl
inc
fistpll
mov
xor
fistpl
and
pusha
imul
loop
repz
rclb
or
sahf
sbb
jg
scas
mov
dec
sarl
dec
and
das
nop
dec
xchg
je
jmp
xor
imul
add
push
mov
insl
iret
pop
dec
movsb
inc
jne
pop
int
mov
jle
cld
jns
addr16
jp
jne
fistpll
mov
jae
ret
xchg
jnp
add
adc
aas
inc
or
pop
inc
add
cltd
inc
and
mov
inc
iret
iret
sbb
sarb
cmc
ds
sbb
jecxz
pop
push
push
insb
push
sarb
mov
xchg
loop
sahf
mov
cwtl
cmc
decb
lea
push
data16
and
or
cwtl
lds
or
xor
mov
popf
cmc
mov
xor
movsb
lret
push
sub
pop
fidivrs
fldt
rorl
xchg
daa
iret
sub
dec
cmp
shl
mov
push
pop
rdpmc
or
or
mov
arpl
xchg
call
jne
stos
pop
in
xor
mov
test
sub
lcall
add
dec
cwtl
into
add
ficoms
loop
jnp
imul
mov
jp
scas
dec
pop
icebp
mov
pop
shrb
call
jo
mov
movl
loopne
scas
inc
sbb
cld
inc
add
outsb
clc
icebp
leave
je
mov
lret
mov
add
pop
out
adc
mov
test
jnp
fidivrl
xchg
jp
repz
loop
insl
bound
cmp
test
outsl
ss
dec
clc
in
sub
push
in
jg
out
cmp
mov
mov
pusha
loope
adc
popf
stc
or
pop
adc
pop
push
rcl
pop
add
pop
xchg
test
add
pushf
sub
or
jmp
adc
or
mov
repnz
pop
cmpsb
cmp
addr16
sbbb
push
xchg
into
lret
shrb
lods
daa
inc
mov
out
and
xor
jbe
pop
stos
inc
je
adc
push
je
imul
jne
sub
aad
outsl
mov
mov
and
xchg
lds
mov
fwait
adc
inc
ljmp
lret
es
scas
movd
jbe
arpl
dec
mov
or
cmpsl
add
roll
cs
out
xchg
rolb
mov
inc
je
and
mov
testb
in
fwait
test
adc
incl
lret
inc
test
imul
cmpb
inc
vcvtsd2ss
mov
arpl
cmp
arpl
jmp
mov
mov
in
sarb
sub
or
mov
testb
mov
clc
popa
cmp
sub
das
push
sbb
cmpb
add
ja
fistps
mov
pop
shr
sbb
add
and
cwtl
icebp
insl
jae
pop
xchg
mov
outsb
and
inc
mov
arpl
sub
xchg
fldcw
out
aaa
sarl
scas
adc
ret
lods
add
icebp
push
pop
push
xorb
cmp
aad
sub
aam
nop
mov
movsb
push
adc
gs
jnp
jge
xchg
das
movl
xchg
adc
in
in
lahf
pop
stos
and
xor
sub
ds
mov
push
xchg
cld
xor
lods
lret
leave
adcb
outsb
outsb
mov
inc
pop
test
xchg
icebp
out
mov
sti
mov
loope
out
out
cmp
into
sbb
insb
push
cs
mov
mov
insb
push
gs
jne
xchg
lcall
arpl
adc
inc
xor
daa
ss
repnz
inc
push
add
mov
push
dec
or
ret
test
jo
add
xchg
or
lret
clc
and
imul
call
dec
popa
cli
or
fs
sub
leave
into
sbb
jbe
xchg
data16
je
inc
cltd
scas
cli
jmp
sbb
mov
dec
jae
sbb
jno
ds
repz
fisttpl
mov
shrl
outsb
xor
int
ljmp
into
jnp
mov
repnz
xor
jne
or
in
and
out
adc
inc
rorl
xchg
fisttpl
jns
sub
cli
lds
dec
sbb
xor
sbb
and
sub
mov
cwtl
sub
fdivs
popa
fldenv
jge
cmpsb
push
sbb
lahf
jns
cwtl
xor
adc
mov
dec
inc
lea
call
pusha
mov
adc
leave
xchg
pop
cmp
cmpsl
test
jg
jle
rclb
inc
jmp
ljmp
xlat
sarl
lahf
insl
push
aaa
out
in
hlt
lcall
fsubs
inc
mov
mov
sub
cs
mov
xor
lods
mov
sbb
popa
push
jge
add
pop
daa
imul
call
mov
outsb
push
int
cwtl
inc
das
xor
push
mov
and
pop
add
add
int3
ljmp
ret
cmpsl
cmp
sbb
xchg
ljmp
mov
test
cmpsl
xor
push
xor
inc
dec
repnz
loop
jg
ljmp
sub
push
int3
lcall
xor
or
ret
jo
jle
in
divl
or
ljmp
clc
xor
xor
fcompl
lods
pop
cwtl
aam
aas
dec
mov
fdivs
cmpsl
add
jno
ljmp
ljmp
pop
cmp
jb
arpl
repz
mov
aaa
pushl
out
mov
ds
xor
iret
lret
aas
test
push
xchg
movsb
cmp
in
lret
adc
mov
int
push
adc
or
add
inc
mov
mov
pop
mov
mov
pop
mov
adc
pop
and
inc
sbb
mov
repnz
sarl
popf
mul
adc
push
cld
cmp
arpl
and
lahf
push
inc
pop
mov
ds
mov
or
cwtl
fiaddl
cmpsl
add
loop
jae
mov
push
adc
dec
cmp
jne
shrb
lret
xor
mov
fnstsw
ret
aas
adc
aad
push
or
jl
dec
and
sarb
dec
xchg
adc
xchg
aad
jge
mov
cmpsb
ss
sti
mov
mov
inc
push
xlat
pop
pop
inc
fldl
adc
push
and
mov
jg
in
sbb
xor
mov
mov
inc
test
cli
jbe
addl
ljmp
jb
jle
add
and
pop
test
scas
lds
jg
sbb
pop
or
and
sbb
sbb
stc
jnp
lea
cmpsl
arpl
jb
dec
inc
leave
jg
pop
and
cmp
imul
ds
rolb
ret
xor
insb
loop
mov
into
mov
frstor
rorl
mov
rclb
lret
lahf
mov
cli
cmp
jb
sbb
orl
imul
mov
shl
fidivl
jno
inc
mov
sub
lret
lret
xor
sub
sti
in
test
push
add
xchg
push
std
loope
jno
mov
push
mov
cmp
sahf
and
xchg
mov
xor
or
test
pop
cmp
arpl
push
fisttpll
popf
in
jge
adc
mov
fidivs
mov
or
outsl
in
mov
push
cs
aas
aam
stos
ret
hlt
jbe
sti
sbb
and
nop
stos
fcmovne
cmpsb
fwait
xor
inc
xlat
rolb
xor
or
aas
mov
data16
sub
jp
mov
sub
fcomps
or
mov
inc
cld
popa
in
data16
fwait
daa
mov
jno
call
push
les
xchg
loopne
cmc
mov
ret
cmp
outsb
or
pushf
jns
lahf
insl
ret
aas
push
sub
bound
int3
cmc
cltd
sub
dec
jb
test
aam
mov
movsb
mov
arpl
ja
push
pop
data16
pop
push
mulb
and
xor
mov
fisubrs
xchg
popf
fnsave
icebp
cli
data16
inc
int
xchg
out
mov
mov
dec
dec
cmp
cwtl
data16
add
sbb
in
inc
jge
lahf
repz
ss
mov
leave
lcall
pushf
iret
dec
push
mov
outsl
add
pop
jne
cmp
mov
mov
in
mov
lods
cmp
xchg
imul
and
dec
aad
dec
xchg
iret
jns
push
push
daa
push
popf
imul
jo
movl
adc
sub
inc
mov
pop
xchg
inc
loope
jecxz
pop
int3
es
jecxz
insb
push
mov
xlat
test
shll
rcrb
pop
test
ja
pop
mov
xorb
cld
enter
push
fistps
pop
hlt
test
cmpsb
insl
ret
dec
sub
or
push
lods
inc
push
add
cmp
sarl
loop
subl
popa
shl
fwait
xor
cmc
mov
and
jns
aaa
or
decb
inc
bound
test
lahf
cmp
add
sbb
aam
or
and
pusha
outsl
sbb
loope
add
jg
sub
ss
inc
jecxz
fadds
lret
dec
sub
fninit
adc
iret
aam
cmp
and
notl
test
repnz
sub
or
jne
mov
dec
pop
notb
roll
pop
lret
add
jge
popl
insb
in
fwait
inc
mov
inc
jae
push
pop
stos
daa
pushf
cmp
aas
out
jb
push
xor
mov
into
aas
xchg
sbb
dec
xor
les
adc
and
repnz
jmp
jae
and
cwtl
sti
ss
dec
push
in
push
mov
dec
imul
test
leave
inc
fistps
pop
add
out
or
pop
mov
outsb
js
aaa
jmp
mov
loopne
pop
push
ja
adc
repz
scas
and
out
xchg
inc
fwait
repz
jae
movsl
pop
xor
nop
in
push
push
psubq
adcl
mov
inc
repz
mov
std
mov
xchg
mov
add
hlt
fcoms
nop
sahf
push
rolb
fnstenv
loop,pn
sbbb
mov
jge
pusha
mov
addb
add
sub
fbstp
neg
lods
mov
arpl
std
mov
jne
sub
xor
cmp
pop
cli
test
shll
dec
or
dec
imul
sub
or
push
xchg
and
add
mov
pushf
outsl
aad
loope
jo
lds
xor
pop
popf
inc
cmc
lods
hlt
push
rcr
sbb
pusha
dec
dec
dec
add
out
xchg
or
in
inc
mov
movsb
jge
adc
imul
cmpsl
out
mov
mov
or
xchg
jge
insl
mov
loopne
pop
stos
sub
btr
js
test
push
stos
xchg
sbbl
insb
and
in
mov
insl
sbb
jno
fistps
jbe
push
sahf
sbb
cltd
arpl
addr16
jo
dec
mov
adc
insb
out
push
dec
jbe
sbb
pop
cmp
je
cmpsb
mov
push
pusha
xor
push
imul
into
sbb
dec
out
out
movsb
cltd
stos
cmp
imul
jle
xchg
mov
cmpsb
shr
sti
jbe
inc
imul
and
sub
jp
mov
or
lea
sub
sbb
ds
or
and
lds
stos
mov
les
add
daa
stos
gs
sub
push
loopne
mov
push
push
mov
jbe
das
dec
iret
insl
icebp
cmpsl
xchg
in
jbe
push
cmp
sub
pop
and
mov
fnstcw
cmp
dec
stc
push
pop
mov
outsb
cmp
dec
or
mov
pusha
mov
in
fwait
test
mov
inc
dec
and
inc
outsb
sub
pop
in
mov
mulb
xor
dec
rorl
shlb
sti
fwait
out
stos
into
dec
int3
mov
jb
pop
ja
sub
inc
mull
mov
fcoml
cmc
push
fs
dec
in
sub
rorl
arpl
rclb
sti
pop
out
mov
mov
int3
icebp
repz
xchg
cli
hlt
lcall
and
jae
mov
push
lock
adc
iret
imul
push
nop
pop
lock
jne
lock
dec
adc
xchg
test
lret
aam
and
test
cmp
repnz
mov
lock
in
xchg
imul
push
fs
sti
dec
enter
icebp
or
mov
test
mov
dec
sbb
test
sub
adc
int3
sbb
xchg
testb
mov
lret
stos
popa
and
dec
lods
enter
push
sbbl
stos
lock
lods
cmp
or
sbb
xchg
and
mov
dec
lret
inc
jmp
mov
outsl
je
fsubs
or
or
jecxz
fisttpll
mov
push
mov
lahf
push
xor
sub
in
sti
in
xchg
xor
jae
push
stos
push
and
jno
mov
and
add
movsb
mov
add
xchg
mov
loope
js
fdiv
lock
in
pop
lret
leave
push
add
lods
mov
xlat
or
subl
cmpsl
lods
js
stos
mov
bound
pop
addr16
cli
rcrl
scas
fstps
adc
iret
xor
mov
cs
inc
mov
jne
xor
xchg
and
in
or
xor
push
lock
xchg
sub
cli
dec
push
addb
addl
xchg
push
and
mov
dec
cmp
movsl
pop
pop
push
mov
inc
aam
mov
test
aas
decl
test
and
inc
ljmp
cmp
in
test
xchg
int
aad
push
data16
ljmp
popa
test
xchg
data16
cli
xor
popa
pop
xor
nop
stc
push
sbb
and
add
jne
add
jno
test
xor
into
imul
nop
mov
sbb
adc
pop
xchg
sub
jae
nop
sbb
decb
pop
add
add
inc
fidivl
and
stos
mov
inc
cmpsb
mov
mov
test
pop
lret
add
pop
mov
cld
rorb
pop
subb
mov
out
xchg
jno
or
mov
jecxz
out
ss
mov
pop
push
inc
lods
movsb
addb
fidivl
pop
lahf
idivl
stos
gs
add
rcll
cltd
push
dec
mov
shr
into
mov
mov
mov
add
icebp
fs
push
in
out
cmp
pop
insl
cltd
je
cmp
and
or
jne
and
and
push
xor
xchg
and
pop
mov
insb
and
xor
push
popf
cltd
fwait
inc
dec
mov
inc
xchg
xchg
xor
sbb
add
or
push
repnz
xchg
mov
shrb
add
cmp
add
and
lds
inc
xchg
xor
pushl
mov
mulb
mov
dec
test
ja
mov
inc
push
testb
jbe
insb
aad
push
push
mov
pop
divl
cld
ret
leave
push
lock
mov
adc
mov
inc
fidivrl
nop
push
popf
mov
cmpsb
sub
popf
mov
lahf
andl
jge
bound
roll
mov
inc
mov
xor
mov
push
out
inc
push
scas
repnz
pop
iret
jge
dec
pop
xchg
ljmp
cmpsl
mov
in
outsb
dec
decl
fstl
add
fisubrl
popf
shlb
pop
xchg
sahf
add
cwtl
mov
in
add
in
or
pop
test
mov
adc
insb
sub
mov
dec
pop
out
pop
push
push
std
mov
lahf
pop
gs
dec
mov
lret
cmc
pop
mov
test
out
and
mov
jb
lahf
sti
and
sub
mov
cwtl
sti
std
int3
lcall
inc
adc
adc
dec
pusha
lcall
loope
jp
mov
pop
or
push
lret
jmp
xor
cs
mov
pop
adc
lds
sarl
movsb
cmp
xchg
sbbl
les
icebp
jne
subb
sbb
outsl
and
shrb
and
adc
push
mov
push
inc
sbb
jno
shrl
pop
xor
fnstenv
mov
adc
or
sbb
inc
sub
sar
es
adc
je
mov
gs
and
addr16
movsb
frstor
mov
xchg
cwtl
mov
xchg
or
fxch
or
xchg
dec
lret
mov
call
scas
mov
mov
in
xor
repnz
jns
ljmpw
mov
cmpsl
mov
xor
add
xor
mov
stc
xor
sbbl
push
jo
mov
add
pop
and
push
pop
aas
push
mov
jo
clc
fwait
sub
sbb
mov
lods
enter
dec
call
jge
jmp
adc
push
xor
dec
inc
sti
and
inc
jle
sbb
push
gs
stos
cli
push
hlt
sbb
adc
cmc
leave
pop
in
enter
jns
xchg
xchg
mov
lahf
fidivs
in
lret
iret
ret
popf
fidivrl
mov
pusha
mov
movsb
jl
out
add
add
jb
pop
test
dec
mov
sub
pop
decl
lods
stos
sbb
xor
data16
mov
mov
lret
aaa
daa
jp
fs
mov
inc
xchg
sbb
pop
jnp
or
test
movsl
jl
jge
arpl
sub
mov
das
sbb
or
jle
shlb
test
lds
xor
push
push
repnz
add
or
rcrb
int
xchg
push
add
int
notl
pop
sbb
sbb
loop
lods
ljmp
sub
push
fst
pop
je
hlt
addl
add
bound
aam
or
ds
mov
mov
aad
and
fnstenv
push
hlt
push
sub
mov
push
out
xchg
sahf
mov
mov
aaa
pop
cmc
push
jnp
and
or
inc
sub
mov
or
loop
clc
push
xchg
test
packsswb
aaa
inc
sub
cli
daa
mov
shll
xchg
cmp
fs
jno
jl
add
lock
jl
mov
inc
dec
xor
push
test
stc
imul
inc
lods
sub
push
xchg
pop
hlt
adc
push
icebp
dec
or
sarl
scas
push
out
add
aas
jne
das
outsb
mov
xchg
lds
daa
and
lods
mull
xchg
cli
pop
xor
or
mov
cmp
sub
jne
repnz
in
jnp
lret
push
fsubrs
insb
aaa
repz
push
inc
inc
jp
pop
jge
and
jno
cmpsl
push
xorl
iret
mov
mov
and
les
fs
adc
shl
in
mov
nop
jmp
push
push
adc
iret
inc
mov
cmpsl
xchg
les
mov
mov
dec
mov
push
fisubl
imul
mov
iret
pusha
int3
imul
pop
es
addr16
dec
out
jecxz
dec
pop
mov
rorl
sbb
xchg
call
sti
mov
push
xchg
daa
cmp
xor
leave
or
pop
repz
fisubrl
sub
jg
mov
xchg
mov
pop
subl
fdivp
data16
test
cwtl
loop
gs
les
pop
fisttps
aad
in
pop
aas
inc
rcrl
stc
dec
subl
stos
jg
mov
test
sbb
cmp
sbb
into
push
sub
xor
outsb
iret
xchg
inc
push
or
xchg
mov
aad
test
icebp
ffree
roll
lea
movsb
repz
mov
jle
mov
adc
fld
jl
pusha
fiaddl
pop
mov
lahf
mov
push
dec
pcmpgtb
push
mov
inc
or
rol
cmp
xor
ds
lret
or
mov
fs
lret
cld
repnz
and
ds
adc
or
adc
adc
outsl
dec
js
push
jl,pn
jmp
sbb
and
mov
out
fnsave
jmp
pop
cmp
push
pop
jo
mov
sbb
int
jecxz
push
popa
lea
cwtl
cs
dec
sti
into
into
pop
sar
cmpsb
or
xor
adc
fwait
mov
repz
mov
cmpsl
and
nop
test
out
jno
dec
or
cs
dec
out
ret
jae
cmp
andb
inc
inc
mov
push
jle
push
call
pop
xchg
adcl
fmul
js
xchg
arpl
f2xm1
adc
dec
lcall
sbb
push
push
sti
sarl
and
outsb
dec
int3
jo
and
jge
mov
aam
mov
sbb
popa
adcl
mov
movsb
scas
fiadds
lret
jmp
aam
push
or
ss
mov
stc
inc
inc
imul
mov
mov
add
sub
mov
add
xor
xchg
or
pop
inc
xchg
fstpl
cmp
invd
pop
cmc
add
sub
outsb
repnz
nop
xor
push
xchg
test
pop
jle
and
mov
hlt
test
jge
aad
inc
xor
stos
ret
sahf
outsb
pop
adc
sbb
jge
jge
sbb
arpl
and
fwait
sbb
lcall
mov
outsb
mov
popf
je
jg
and
shlb
icebp
mov
inc
lods
inc
test
popa
xor
int3
adc
lods
ret
divb
mov
mov
pusha
jg
js
sbb
out
popa
mov
arpl
jnp
adcl
push
add
pop
fs
data16
xchg
ficoms
cld
dec
add
fldl2t
stos
into
jle
test
insl
fildll
dec
or
push
dec
enter
ret
js
popf
sbb
and
ss
dec
adc
mov
xchg
inc
int3
subl
pushl
adc
enter
push
or
shrl
sbb
out
push
pop
leave
imul
gs
nop
movsb
add
rolb
cwtl
std
movsb
dec
loopne
sti
jnp
sbb
mov
mov
bswap
adc
rcr
fldt
cmp
inc
nop
and
stc
ret
mov
inc
dec
popa
push
scas
shll
stos
gs
cmpsl
jae
sarb
cmpsb
push
and
popf
imull
lock
mov
call
jns
movsb
mov
jmp
push
mov
je
stc
bound
dec
lds
mov
cmp
sbb
push
out
inc
imul
adc
popf
xlat
xor
jmp
mov
in
js
fstpl
jae
sub
cmp
inc
mov
fisttpl
sub
aam
lahf
and
dec
mov
sub
push
dec
jmp
sub
flds
jns
adc
push
jo
or
pop
sbb
stos
psubq
fimull
icebp
ds
pop
fadds
sahf
add
xlat
loop
leave
pop
sub
xor
xor
shlb
sar
test
pusha
dec
mov
mov
jp
pusha
adc
fs
xchg
cmp
pop
notl
psrld
lods
outsl
pop
mov
cmpsl
jno
stc
push
into
jp
xor
call
int
dec
out
insl
out
xchg
pop
jg
mov
lret
flds
popf
add
gs
or
inc
cwtl
xchg
std
push
xchg
fsubs
inc
ficoms
aas
and
xchg
stos
into
or
push
cld
sahf
movsb
imul
loop
out
pop
or
or
xchg
cmp
mov
mov
stc
xchg
push
pop
popa
jle
add
pop
pop
and
pusha
out
push
fnsave
sub
mov
cld
xor
aad
or
jmp
xchg
movsb
ljmp
xchg
shl
cmp
clc
pop
test
sahf
cwtl
push
sub
sub
in
push
pop
mov
cmp
outsb
mov
jecxz
mov
jo
fnstenv
sti
gs
push
pop
cwtl
and
jecxz
ret
dec
or
test
and
lcall
fstl
mov
es
arpl
int3
dec
mov
leave
sahf
push
arpl
xchg
das
pop
jne
push
int
pop
mov
sti
in
xlat
addr16
adc
pop
sub
ret
cmc
es
insl
and
imul
mov
xchg
imul
inc
ret
mov
les
outsb
xchg
jns
outsb
mov
mov
mov
sbb
test
movsb
int
mov
fdivrl
aad
imulb
fnstcw
jp
lods
mov
jg
push
xchg
xor
dec
js
rorl
cli
jno
sbb
ret
leave
jno
xchg
stos
mov
xor
rclb
scas
mov
push
or
nop
mov
xchg
cltd
mov
xchg
mov
repnz
in
mov
add
mov
enter
addr16
imul
xchg
dec
inc
jne
sbb
fbstp
mov
push
mov
sub
xor
mov
xor
xor
jo
imull
aas
dec
dec
int3
out
pop
rclb
hlt
cmc
mov
aad
stc
and
sar
adc
cmp
adc
dec
xor
lods
mov
and
clc
dec
push
cmp
rorl
cmc
mov
push
cmpsb
xchg
jae
fildll
pop
cwtl
adc
mov
ja
ss
pop
shr
jge
loopne
bound
mov
and
mov
ja
mov
mov
sbb
dec
inc
stos
arpl
cmpsl
insb
inc
subb
negb
in
mov
test
insb
stc
pop
sub
mov
push
jge
leave
lods
loope
mov
mov
cmp
xchg
mov
mov
mov
xchg
mov
lods
mov
mov
mov
mov
aam
or
jge
ret
stos
out
and
xor
imul
out
mov
mov
and
outsl
testb
xchg
xchg
fndisi(8087
mov
les
lcall
sbb
in
ds
sbbb
out
push
xlat
out
jnp
mov
cmc
mov
jo
notb
cmpsl
imul
test
cmc
enter
js
hlt
rolb
mov
or
mov
icebp
mov
xor
repz
sbb
das
std
mov
jne
cmp
or
insb
sub
jecxz
sahf
loop
rcl
inc
aaa
fnstcw
sbb
mov
je
vxorps
out
bound
loopne
shl
push
xor
xor
aam
xor
popa
das
leave
sti
sub
int3
lds
and
xchg
fdivl
movsb
jecxz
test
mov
scas
imul
cwtl
pop
sbb
cmp
jae
lret
fisubrl
or
or
cs
out
add
lods
sbb
insb
xor
sub
adcb
inc
cmp
mov
cmpsl
daa
pushf
addb
out
cwtl
icebp
ficoml
je
loop
mov
pop
sub
inc
add
inc
fsubrl
jecxz
dec
fsubrl
and
pop
clc
cmp
out
lret
rcll
push
cli
call
and
add
pop
mov
out
data16
imul
popa
pop
inc
jg
xchg
ds
dec
ret
cltd
cmp
fwait
cmp
out
pop
das
push
cld
lcall
dec
in
pushf
jp
mov
push
lahf
loope
jne
add
cld
jle
inc
push
dec
sti
mov
sbb
dec
stc
ficomps
mov
or
cmc
xchg
lock
mov
mov
cli
push
pop
sub
js
subl
and
test
or
xchg
ret
mov
mov
jmp
push
movsb
adc
mov
mov
xchg
push
xchg
les
sbb
and
shrb
and
outsb
jns
inc
push
mov
push
mov
jmp
out
dec
jno
mov
pop
xor
decl
cmp
sbb
bound
adc
loope
cmp
insb
cwtl
push
stc
mov
icebp
sub
outsl
scas
xchg
add
or
divl
sbb
mov
push
sbb
imul
dec
int3
dec
enter
movl
pop
xchg
cmc
ficompl
movq
or
pop
popa
jno
mov
cwtl
add
mov
and
ficoms
fcoms
icebp
sti
test
lret
jo
and
in
cmp
sti
aaa
or
cmp
sbb
jne
repz
add
sbb
jmp
lods
inc
adc
xchg
mov
mov
and
fmul
sub
ds
pop
mov
push
and
outsb
sub
sbb
stc
jnp
jne
mov
aad
xor
js
jns
mov
aad
xor
cmpsb
cmp
stc
mov
sbb
testb
mov
scas
adc
adc
cmp
dec
push
adc
jnp
mov
int3
ret
in
mov
cmc
pop
xlat
pusha
push
cmp
mov
in
pop
mov
push
mov
loope
call
cwtl
mov
call
add
mov
bound
ficompl
out
jne
push
movsb
pop
das
repnz
or
inc
mov
ljmp
jmp
lahf
pop
push
in
xchg
inc
rorl
arpl
or
mov
fistpll
or
and
stos
push
push
sbb
imul
mov
ja
dec
sub
jl
jnp
mov
sbb
adc
mov
imul
lea
add
jle
imul
pop
sbb
icebp
jge
or
dec
fwait
arpl
ljmp
iret
lock
repnz
mov
lds
negl
mov
pop
aaa
aaa
inc
stos
ja
mov
xchg
push
dec
xchg
dec
cwtl
sbb
jge
lret
dec
mov
gs
xor
mov
insl
adc
movsb
jp
mov
push
daa
sbb
xor
fidivrs
sarb
lret
sub
test
jmp
fldcw
movsb
cmp
dec
xchg
push
sub
cmp
movsl
das
andb
xchg
add
lret
pop
or
dec
push
ss
xchg
repz
add
xchg
je
out
jl
mov
mov
add
lods
inc
shlb
add
das
mov
gs
adc
lea
sbb
xchg
in
sbb
fadd
clc
hlt
fsubr
fwait
mov
fldt
fs
rcrl
mov
enter
lds
mov
jo
out
pop
popf
adc
bound
subl
test
dec
fs
popa
or
nop
ss
ss
push
inc
out
test
or
shlb
pop
mov
sbb
scas
int
xor
pop
jecxz
outsb
std
jo
ret
clc
scas
dec
shrb
leave
inc
cmp
out
mov
sub
jmp
xchg
dec
mov
ret
adc
in
fsubrl
mov
sub
gs
scas
insl
int3
call
push
sub
adc
stos
jl
notl
stos
bound
jecxz
mov
pop
ficompl
fucomp
xchg
and
loope
pop
addr16
into
jb
xchg
dec
mov
stos
add
sbb
push
out
cmp
cmpsb
cmc
ds
lods
fiaddl
fsubrp
push
xchg
hlt
popa
push
inc
push
insb
sti
pop
aaa
or
loop
imul
and
divl
bound
or
xchg
xchg
xchg
aaa
fwait
ds
push
rcll
mov
and
cmp
mov
outsl
cld
push
test
loope
mov
andb
ret
jne
enter
lret
mov
movsl
imul
and
arpl
pop
int3
lret
fwait
es
lahf
mov
xlat
sub
cmp
arpl
adc
clc
pop
pop
push
stos
add
pushf
in
xchg
out
pop
mov
mov
dec
jecxz
repnz
mov
adc
fimuls
mov
mov
xchg
lods
fadd
cmpsb
sbb
insb
pushf
pop
xor
aad
mov
cli
lahf
andl
xchg
shl
sbb
mov
js
nop
sbb
adc
pop
jge
lcall
push
jo
icebp
fsubl
mov
pop
jl
mov
data16
and
insb
mov
loopne
or
nop
push
jle
dec
cmp
das
leave
adc
lret
out
in
sub
sbb
in
in
jge
dec
mov
or
inc
inc
shll
inc
lea
repnz
jg
and
mov
add
and
loope
sub
push
push
inc
adc
cmp
ja
sahf
sbb
pop
jmp
repnz
mov
and
loope
outsl
push
mov
xchg
imul
xchg
sub
or
les
lods
fdivrl
inc
sbb
mov
leave
fldcw
int3
push
add
jecxz
add
jmp
push
inc
adc
mov
fdivs
iret
fdivr
out
xor
mov
jae
cltd
xor
mov
fisubs
int3
into
aad
test
popa
sbb
xlat
lcall
push
fmull
jbe
inc
pop
pop
jno
cmp
sub
jp
xor
cmp
imul
add
push
fdiv
sub
and
cmp
movzwl
ret
adc
enter
movsb
scas
push
cmp
inc
shl
sbb
jge
cmp
int
push
clc
fistl
push
stos
icebp
test
pop
pop
sub
out
clc
inc
mov
add
xor
add
ficompl
mov
dec
enter
and
mov
mov
or
adc
and
test
or
mov
xor
jno
dec
cmpsl
jno
jbe
mov
cltd
push
nop
bound
sbb
clc
rolb
cmpsw
dec
fldl
nop
cmpsb
insl
push
xchg
jae
inc
cs
loope
pop
scas
mull
mov
mov
mov
add
pop
push
adc
ja
cmpsb
fs
push
mov
adc
mov
pop
sbb
pop
rorb
mov
les
adc
arpl
insb
adc
add
cmpsb
movsb
xor
or
in
dec
repz
push
test
aaa
out
pop
sar
popa
adc
sahf
jl
dec
pusha
push
in
std
pop
push
lock
sbb
push
outsb
pop
jle
push
fimuls
cs
inc
push
neg
aas
inc
adc
cmp
test
popa
push
pop
and
imul
std
sahf
jne
notl
push
cmp
js
adc
pop
sub
dec
dec
subb
or
call
aaa
sub
mov
pop
mov
daa
xor
fistps
mov
add
sub
sbb
insl
xchg
jbe
in
pushf
cmp
shlb
shlb
call
inc
mov
or
jne
loop
add
inc
dec
cs
notb
sub
push
sbb
js
jns
xchg
mov
out
xor
inc
iret
xor
cmp
cltd
or
cwtl
jp
pop
mov
mov
sti
jae
es
jnp
xor
sub
testl
cli
sbb
xchg
or
inc
or
dec
ljmp
pop
popa
jb
stos
jae
cmp
adc
push
and
andl
and
xor
sti
fisttpl
dec
arpl
mov
jo
adc
icebp
push
outsb
imul
push
dec
push
adcl
xor
pop
push
mov
clc
sub
aas
cmpl
dec
insb
bound
jg
fisttpl
leave
mov
sbb
pop
push
mov
shlb
push
out
dec
repnz
rcrl
jo
mov
fisttps
adc
mov
mov
and
fdivr
incl
enter
push
cmp
clc
ljmp
xchg
mov
cli
repnz
sbb
adc
push
mov
cmpsb
push
and
jmp
cmp
popf
das
gs
adc
pop
cld
js
pop
or
xlat
add
fwait
pop
shr
in
jmp
jno,pn
inc
js
and
cmpsb
enter
mov
lahf
push
pop
bound
jb
jno
adc
shll
sub
inc
or
dec
add
cmp
notl
jp
push
cmp
popa
jo
dec
in
into
jg
xchg
cmp
test
and
shr
xchg
scas
xor
fidivrs
mov
cmpsb
aam
push
xchg
xor
or
int
pushf
inc
push
ret
sbbl
jae
fimull
inc
lahf
sarb
jbe
mov
int
mov
es
sahf
testl
mov
in
push
pop
jnp
sarb
push
or
fxch
xor
ret
das
dec
jb
sub
and
das
mov
inc
pop
mov
imul
sbb
xchg
fcom
sbb
jecxz
ds
or
sarb
fdivs
push
cmp
inc
xchg
test
and
xor
pop
mov
and
jns
in
xorb
arpl
sub
loop
add
pop
into
cmp
mov
imul
lcall
xchg
enter
dec
arpl
cld
clc
rcrl
insb
ret
xchg
arpl
jbe
lret
jns
pop
shlb
insb
dec
ret
xchg
out
int3
pop
adc
mov
lcall
push
sbb
sbb
outsl
aas
jle
jae
leave
sub
fnsave
inc
stc
mov
js
iret
lret
repz
jl
jb
xchg
sub
cmp
andb
fwait
adc
fists
mov
stos
xlat
push
push
pop
mov
inc
and
aad
xchg
ds
scas
pushf
add
movsb
cmp
xor
or
in
das
push
mov
cmpsl
fadd
push
insl
popa
mov
sub
mov
stc
xchg
mov
pop
das
xchg
mov
dec
pop
pop
mov
jmp
das
sbb
push
pop
add
in
sub
popa
cmc
in
sub
data16
mov
add
ss
ljmp
dec
push
inc
stos
and
fwait
xlat
xchg
cs
ds
leave
jnp
out
inc
xchg
sbb
gs
in
mov
cmp
call
loope
movsb
ss
aas
sti
cli
lret
dec
stc
sbbl
sbb
cmp
sub
loop
and
jne
neg
dec
push
xor
push
into
mov
lret
imul
cmp
push
mov
jge
mov
adc
aaa
cmp
jno
mov
mov
pop
shrl
lahf
lock
mov
fistps
fstpt
adc
inc
sti
xchg
mov
subb
pushf
pop
ds
pop
cmpsl
es
fldenv
fstps
xchg
lcall
add
jle
andl
cmp
jb
add
fistpl
imul
and
int3
jne
xor
movsb
xchg
dec
int3
cs
fs
outsb
bound
jbe
dec
lock
call
push
dec
xor
sbb
insl
enter
test
orb
adc
js
mov
lds
movsl
arpl
and
aaa
push
fists
jl
test
or
test
sbb
cs
dec
inc
loopne
movsb
and
sbb
loopne
and
jne
jno
imull
pop
dec
mov
js
push
mov
inc
adc
ret
scas
xor
sbb
pop
stos
push
lock
add
mov
dec
pop
movsl
stos
sarb
or
mov
pop
iret
daa
rolb
mov
sbb
stc
jecxz
add
mov
repz
rcrl
inc
mov
out
in
jmp
xchg
adc
or
inc
push
pop
fadd
adc
push
in
loopne,pt
pop
sbb
xor
in
sub
pop
aaa
test
mov
in
push
sbb
and
xorl
dec
cli
adc
xor
ficoml
xorl
ljmp
je
mov
pop
dec
xchg
xlat
mulb
pushl
and
lods
int3
fdivrl
std
jne
repnz
lock
cmp
jnp
mov
dec
xchg
jecxz
and
xor
mov
sub
lret
sbb
imul
movsb
pop
mov
pop
sbb
cmp
lods
out
jb
rolb
mov
adc
in
js
add
xchg
in
push
fnstsw
jge
adc
movsb
les
int
cmc
cmpsb
loop
dec
jb,pt
pop
cld
stos
inc
ret
aam
cwtl
xor
dec
notl
xchg
cs
or
mov
inc
fisubrs
aas
dec
shll
or
adc
pop
popa
sub
call
pop
movsl
jg
sbb
in
cltd
loopne
mov
lret
test
in
jb
js
cmp
sub
test
pop
incl
mov
mov
in
inc
add
test
in
cmpsb
or
sub
out
mov
scas
adc
aas
ljmp
xlat
mov
sbb
mov
xchg
jmp
mov
mov
dec
inc
ds
sbb
add
dec
cld
add
hlt
test
cmpsl
int3
and
popa
icebp
or
shlb
jecxz
fadds
mov
ljmp
scas
cmp
mov
out
add
daa
in
mov
outsl
dec
mov
adc
shrl
mov
ficompl
outsb
in
mov
or
ss
mov
mov
ljmp
push
mov
pusha
or
shll
insb
pop
notb
adc
loop
shlb
out
shlb
fstps
add
mov
nop
push
inc
inc
sbb
mov
lret
jb
js
shl
sarb
lock
aaa
jl
mov
add
fcoms
loopne
out
lret
pop
fwait
cwtl
inc
lock
sub
pop
xor
sub
mov
jne
jp
jbe
mov
popf
ficoms
andb
ljmp
push
xor
adc
cmp
aas
jl
dec
and
out
iret
mov
pop
xchg
test
sbb
adc
fcmove
mov
xchg
lods
push
jbe
insl
dec
pop
bound
inc
jnp
int3
ror
pop
cmpsb
mov
scas
add
cmp
or
pop
mov
mov
mov
jne
or
push
notl
jb
mov
xchg
mov
fs
inc
dec
push
popf
js
popa
cmc
add
sbb
rcrl
rol
lcall
mov
xchg
lret
sahf
cmp
adc
addr16
call
dec
jmp
call
movsl
pop
repz
ja
mov
sbb
imul
test
movsb
and
fstps
rclb
fwait
add
stos
sbb
outsb
jmp
xchg
popa
loop
adc
enter
or
jg
rcr
xchg
fcomps
inc
adcb
hlt
sbb
jbe
int3
cmp
or
pop
leave
fidivl
call
xchg
js
and
scas
cltd
mov
pusha
fildl
shrl
cmpsl
ja
ret
xorb
mov
push
sbb
mov
ret
pop
push
les
fwait
jle
jg
mov
loopne
adcl
dec
insl
inc
or
out
sbb
lds
mov
adc
dec
cmp
mov
mov
xor
es
mov
incl
test
mov
mov
sbbl
imul
dec
sahf
sbb
insb
adc
loope
gs
rcrl
movsb
insb
insl
jmp
ss
sub
inc
aam
in
insl
fstpt
dec
and
lods
mov
rcll
mov
xor
push
shlb
aas
shlb
scas
lods
popa
fs
cmp
sar
out
fs
xor
xor
push
pop
jne
fisttpll
stos
xchg
mov
mov
cltd
inc
and
sub
bound
clc
pop
pop
ljmp
xchg
lods
ret
pop
cmp
or
mov
repnz
cwtl
adc
bound
add
scas
and
popf
jno
push
or
mov
fwait
adc
ret
xchg
lcall
iret
push
push
mov
lcall
outsl
add
andb
push
or
lahf
xchg
cld
rcr
mov
insb
jmp
jle
leave
sahf
leave
lcall
sub
mov
fisubrl
inc
dec
mov
cmp
dec
sub
in
leave
scas
int3
mov
sarl
cmp
adc
cli
scas
out
addr16
fldenv
dec
and
jecxz
push
cmp
inc
lods
test
adc
mov
push
loop
gs
mov
sub
xchg
repnz
mov
mov
sub
aas
testl
divb
lret
mov
in
lds
pusha
or
jbe
push
sub
dec
pop
xchg
cltd
nop
push
leave
xor
jb
sbb
repz
aaa
cmp
repnz
pop
int3
mov
cmp
stc
lahf
adc
iret
cmc
xor
adc
inc
and
ds
scas
daa
or
es
int
ds
clc
jno
cmp
les
mov
clc
shlb
jmp
pop
fwait
pop
sbb
adc
out
pop
fucomi
imul
or
leave
cmp
push
push
divps
mov
cmc
and
jne
mov
mov
cmp
sbb
scas
fnsave
jge
ss
int3
iret
pop
sub
scas
sub
cltd
movsl
fiaddl
icebp
out
movsl
insb
dec
jecxz
inc
push
ficomps
fwait
ja
mov
xor
push
xchg
je
and
stos
cltd
lock
out
lock
and
into
fiaddl
adc
ret
add
aad
mov
jne
dec
xchg
gs
inc
push
sbb
out
loopne
imul
stc
sub
pop
dec
push
lods
jl
inc
and
daa
mov
cmp
xor
rorb
fs
xchg
ja
sub
pop
mov
push
or
dec
int
dec
enter
xor
imul
rcr
clc
xchg
icebp
mov
inc
mov
aam
cmc
outsb
pop
mov
mov
and
cmp
cmpsl
mov
sbb
cli
fcomi
sub
cmp
lock
cltd
mov
dec
in
aam
push
nop
mov
pop
out
mov
and
cmp
mov
jmp
aam
mov
jo,pt
dec
adc
xor
xchg
rcrl
ss
push
fisttps
call
pop
adc
push
jne
sti
mov
dec
push
xchg
ss
adc
ss
lds
add
lds
test
out
sub
sbb
add
push
inc
aam
icebp
and
mov
imul
push
push
jnp
js
bnd
adc
adc
das
xor
jne
and
xor
mov
es
fincstp
test
sbb
cmp
cmpsl
dec
xchg
movsl
scas
sahf
mov
xor
inc
dec
pop
inc
xor
add
dec
test
rcrb
outsl
adc
repz
pop
into
lods
shl
ss
mov
jno
add
popl
push
subl
leave
loop
dec
dec
shlb
cmp
shr
mov
mulb
jp
das
pop
dec
mov
mov
mov
and
clc
rorl
mov
fisubrl
pop
insl
ss
ss
cmpsb
jmp
mov
fidivl
nop
fisttpll
adc
add
ficoms
xchg
jmp
xor
adc
stc
out
mov
je
pop
mov
mov
push
inc
iret
sbb
mov
mov
pop
pop
out
adc
iret
and
and
sub
cs
out
jne
dec
add
xchg
popa
sub
popf
bound
jnp
iret
dec
inc
or
scas
out
cmpl
sub
hlt
inc
imul
inc
test
sbb
inc
mov
mov
lret
mov
aam
mov
andb
xchg
incl
cmp
mov
jp
pushf
pusha
lods
stos
mov
cmpb
test
cmp
pop
pop
pop
fildl
aaa
int3
cmp
je
lret
int3
lret
mov
ret
bound
aaa
sahf
adc
shll
jb
sbb
sub
or
pop
rcr
jns
dec
ficomps
or
push
dec
add
das
lea
push
jmp
or
scas
cmp
push
sub
cmpl
rol
bound
or
inc
jnp
ret
leave
mov
sub
fsub
cs
inc
rcrb
pop
adc
add
repnz
shrb
mov
push
xor
aad
jbe
xor
pop
inc
adc
imul
adc
pop
xchg
sbbl
cld
pop
mov
mov
jmp
out
dec
popa
xchg
mov
inc
or
cmp
xchg
aaa
ljmp
pop
add
add
or
sub
stc
pop
cmp
inc
pop
mov
das
iret
mov
adc
hlt
xchg
xor
jl
xchg
lods
std
outsl
cmp
dec
stc
daa
icebp
jno
push
xchg
in
add
pop
xchg
in
fadds
xor
adc
shr
mov
cli
enter
inc
cmc
lcall
cmp
in
jg
sbb
and
clc
fmuls
xchg
je
aas
cld
sbb
sub
clc
or
adcl
dec
add
hlt
cmp
loopne
and
lret
mov
adc
dec
xor
dec
adc
les
inc
jmp
push
scas
ds
xor
mov
fildl
xor
incb
mov
orb
int3
push
outsl
fldcw
movsl
js,pt
mov
pop
fwait
sub
xchg
aam
andb
test
jmp
mov
mov
cmpsb
jp
mov
cmpsb
or
dec
pop
dec
xchg
fnstenv
fwait
das
cmp
in
pop
inc
push
push
jbe
cmp
cmpb
iret
testb
icebp
fsubr
into
test
fucomi
mov
stc
mov
jmp
push
in
adc
mov
mov
or
cmp
pop
mov
add
xchg
jno
or
adc
fwait
or
arpl
adc
lea
and
sub
xchg
mov
mov
gs
mull
add
popa
jae
cli
jae
imulb
fcomps
imul
arpl
dec
popf
and
jle
or
imul
inc
in
lret
jl
mov
iret
pushf
ss
aam
sbb
xor
adc
clc
shlb
adc
stos
or
and
fisttpl
xchg
mov
call
lret
cmpsl
sub
stc
mov
lret
jno
aad
adcl
lods
dec
jo
pusha
mov
push
sahf
shll
in
mov
xor
enter
or
add
insb
dec
xchg
fisttpll
mov
ja
and
cltd
sub
inc
scas
in
push
mov
xor
and
and
cltd
push
push
cli
jb
push
inc
mov
cmp
dec
rol
pop
push
into
lret
dec
test
or
add
sub
sub
jns
filds
or
mov
ret
test
push
bound
and
cmp
rorl
jge
jno
pop
roll
les
imul
or
mov
cltd
sar
scas
mov
push
sbb
mov
call
inc
dec
sub
push
inc
sbb
lock
lret
jecxz
daa
popa
hlt
jmp
jle
fcoms
mov
call
cmp
jl
js
in
push
jl
lea
int
decb
push
sub
sbbl
cwtl
cli
cmp
dec
mov
insl
push
mov
imul
lret
enter
mov
rcll
jmp
sub
sub
mov
dec
mov
push
jp
pop
dec
cwtl
orl
stc
inc
call
fldt
inc
jmp
outsl
and
mov
pop
xor
mov
sbb
aas
test
xchg
je
inc
lods
test
xor
inc
xchg
dec
je
fmuls
inc
dec
and
repnz
stos
setge
inc
fsubrs
pop
adcl
sbb
scas
adc
fs
xchg
repz
cwtl
scas
cli
mov
lock
shlb
add
sub
mov
cld
dec
cltd
movsb
sti
dec
mov
call
aad
add
sysret
or
cmp
xchg
daa
xor
push
cld
xor
xor
xchg
lds
push
sbb
je
ss
repz
leave
dec
je
fsubrs
imul
cs
and
outsl
xchg
inc
nop
add
loopne
cmp
mov
cs
repz
sub
mov
scas
mov
out
lods
hlt
cli
ficompl
and
loopne
mov
sbb
in
fs
mov
ljmp
push
mov
mov
push
sub
sbb
xor
add
ja
ret
fistpll
jbe
sbbl
jl
sti
xchg
popf
lds
jne
jmp
pop
lcall
rcl
pushf
push
mov
out
dec
ret
adcl
dec
and
xlat
movsl
scas
cli
icebp
sub
or
adc
hlt
cli
push
stc
ret
mov
pop
push
mov
imul
mov
fldl
jg
xor
fsubp
or
cmp
xchg
fdivrl
scas
test
iret
arpl
pop
fstps
mov
cmpl
sbb
dec
pop
push
lcall
mov
push
addr16
lcall
push
xchg
loope
out
adc
add
jmp
jnp
into
jb
lret
das
sub
fsubs
mov
mov
cmc
call
mov
loopne
adc
add
or
scas
adc
jle
mov
sub
cmp
dec
fstpt
xor
out
cmp
adc
push
or
mov
dec
notb
sbb
out
mov
adc
sub
hlt
scas
dec
stos
hlt
sti
test
xchg
fbld
push
es
adc
imul
mov
into
pop
or
rcrl
leave
stc
and
daa
out
aad
leave
cmpb
xchg
das
ret
iret
inc
cmovp
clc
outsb
pop
repnz
fists
pop
lret
in
mov
in
pop
scas
cmp
adc
mov
mov
dec
sub
iret
adc
or
mov
cli
hlt
ds
decb
push
lret
inc
into
std
loopne
fdivrs
or
inc
orb
dec
test
or
jle
xchg
mov
dec
push
mov
movb
dec
sbb
xchg
repnz
pushf
jecxz
pop
insl
sahf
inc
mov
push
repz
in
frstor
xor
test
dec
aam
out
outsl
jge
popa
add
push
inc
je
in
repnz
mov
stc
and
xlat
outsl
addb
or
xchg
pusha
jmp
mov
add
pop
repz
scas
lds
xchg
jp
sti
ss
jne
sub
in
movsb
jns
pop
les
adc
mov
dec
dec
dec
sbb
arpl
xor
xlat
lahf
out
mov
mov
xor
cmp
mov
rcrl
stos
jp
sbb
in
and
cmp
stos
cmp
rolb
inc
aas
mov
pop
xchg
sub
je
es
subl
js
aas
lea
cwtl
jle
repnz
sub
lea
fs
scas
jecxz
addl
and
fists
daa
push
mov
lods
adc
adc
inc
sbb
xchg
push
xchg
inc
notb
and
fwait
in
cmp
mov
pushf
xchg
test
repz
xchg
pop
stc
cmp
xchg
cltd
orl
loope
xor
in
jne
ss
fistpl
cmp
popf
notl
hlt
pusha
lods
adc
or
shl
testb
xchg
mov
aad
stos
in
sbb
pop
cli
lods
inc
ss
lods
loope
xlat
iretw
sbb
cmp
sti
ja
push
cltd
scas
mov
add
call
jp
sub
loope
cmp
cmp
cmp
mov
push
clc
dec
mov
sbb
mov
out
mov
fidivrs
out
jecxz
cmp
iret
test
adc
xchg
in
in
pop
adc
mov
popa
or
arpl
insl
pop
mov
inc
push
lcall
xchg
xor
dec
add
xor
jmp
js
pop
inc
repnz
loope
stos
outsl
push
ja
out
mov
mov
mov
pop
mov
lahf
aam
aam
rorb
movsb
js
mov
or
and
data16
dec
mov
mov
ja
pop
mov
push
dec
xchg
sbb
and
je
aas
fdiv
fdivl
inc
lds
mov
out
push
mov
mov
pop
dec
add
inc
ja
push
jle
add
mov
jp
clc
pop
mov
mov
jbe
mov
dec
nop
adc
test
jb
mov
aaa
push
sub
repnz
dec
lea
call
xchg
pop
lret
mov
jge
mov
mov
lcall
sti
lock
push
mov
jl
mov
int3
std
jl
mov
sti
pop
cs
cli
push
aaa
movsl
iret
push
roll
pop
jge
sahf
add
bound
push
js
enter
mov
cmp
cmpsb
aam
xor
cmp
std
pop
call
insb
dec
jl
sub
add
insl
sub
aaa
lahf
stos
jmp
push
sub
test
cmpsl
cmp
imul
adc
in
jns
xchg
mov
in
sbb
insl
sub
sbb
sbb
repz
scas
and
cmpsl
jo
in
int3
or
mov
addr16
pop
ret
adc
in
lds
mov
loop
xchg
out
inc
push
xchg
pop
sub
pop
movzbl
adc
popa
mov
and
mov
mov
dec
jb
adc
rcr
gs
aaa
fwait
repz
lcall
inc
mov
aas
sub
add
mov
push
fiaddl
sti
adc
js
push
and
pop
cmc
cmp
insb
pusha
iret
ds
je
mov
outsl
push
fdivl
divl
add
fdivl
xchg
push
add
ret
or
xchg
dec
in
jae
and
xlat
in
pushf
cmp
sbb
insl
fistpll
xor
pop
add
adc
cmp
dec
mov
sahf
mov
or
or
jmp
inc
fcomps
jge
mov
popf
cs
adc
push
jle,pt
cmpsl
mov
dec
hlt
lret
gs
fs
fildll
mov
mov
sub
aam
loopne
out
push
jp
and
and
inc
xchg
lods
jg
les
mov
loopne
mov
insb
xchg
jnp
add
sbb
ja
mov
loop
jbe
adc
add
push
add
js
pop
out
jae
std
fdivp
push
paddusw
jmp
insl
xchg
rolb
cmpsb
or
push
pop
inc
mov
dec
or
gs
iret
cmp
cmp
cmpsl
rcrb
popf
testb
out
mov
sub
pop
mov
jmp
pop
out
sbb
pushf
subl
movsb
mov
dec
sbb
pop
scas
push
subl
arpl
xor
in
inc
fs
loopne,pn
scas
movsl
xor
mov
adc
shrl
outsl
add
cmp
push
mov
stos
jb
sub
sbb
jle
jmp
sti
jae
lods
aaa
repz
push
xchg
fucomip
adc
fidivl
jmp
push
movsl
push
rorl
ljmp
bswap
jg
repnz
inc
lods
jmp
add
lret
add
cmpl
sbb
xorb
fcomp
sub
data16
push
mov
out
push
aas
cmpsl
push
dec
sub
pop
adcb
cmc
pop
loope
or
mov
lret
test
add
inc
je
inc
in
mov
inc
jae
inc
mov
jg
fimull
insl
jg
or
cltd
and
xchg
pop
mov
movsl
pushw
xor
mov
std
je
cs
subb
sub
cwtl
daa
mov
mov
in
add
inc
dec
test
cmp
adc
ret
stc
mov
scas
mov
or
adc
xor
lds
es
gs
fmulp
insl
add
xchg
push
sub
das
xor
je
sbb
frstor
add
xor
negb
push
rorb
jl
xchg
pop
divl
ja
aam
add
pushf
pop
mov
push
fcomip
outsl
mov
mov
pop
inc
movsb
ljmp
cmpsb
movsl
jno
jmp
inc
push
cmp
std
ja
das
xchg
cmpsb
nop
cmc
lcall
call
adc
jle
test
lcall
jmp
adc
stos
pop
cmp
cmp
push
sahf
xor
xlat
notl
add
scas
sbb
imul
xchg
xadd
aad
adc
fsubrs
scas
push
push
xor
icebp
mov
icebp
dec
pop
mov
rcrb
cld
daa
ficoml
mov
push
cmp
push
mov
out
sub
mov
fistpll
pop
inc
in
pop
dec
inc
xor
std
int
loop
xchg
jg
divl
enter
xchg
out
std
dec
pusha
and
push
sbb
iret
inc
inc
ds
test
cmp
fimull
call
mov
jp
mov
cmpsl
loop
mov
push
popa
mov
or
inc
aam
ja
push
cmp
xchg
testb
lret
sub
into
jmp
sub
pushf
stc
cwtl
push
xor
sub
cmpsb
push
pop
dec
xchg
jg
mov
mov
mov
fsubrs
mov
and
aas
fldenv
pop
lock
leave
shll
out
push
push
mov
in
popa
mov
inc
mov
xchg
add
xlat
das
add
jge
lock
movsl
dec
test
cltd
mov
cmc
inc
shrb
xchg
int
jmp
mov
lock
mov
fcompl
mov
and
iret
inc
mov
pop
movsl
xchg
mov
faddp
fiaddl
push
out
hlt
fadd
cmc
or
in
pop
dec
mov
clc
xchg
xchg
loope
and
into
inc
stos
loope
mov
add
cmp
fisttps
cs
jno
jmp
das
cmc
push
and
mov
ret
lods
add
and
inc
pop
pushf
loopne
pop
inc
jmp
std
cwtl
negl
pop
jmp
imul
stos
fsub
add
lret
fbstp
dec
stc
popa
add
dec
cs
jle
lods
fisubl
pop
es
xchg
addr16
repnz
xor
mov
mov
and
lret
inc
fwait
dec
sub
mov
or
or
gs
mov
aam
sbb
mov
jns
adc
popa
stc
pop
and
insl
mov
inc
adc
lods
enter
fmull
cmp
ds
testl
ljmp
ret
pop
enter
push
stos
in
out
icebp
cld
and
in
int
lock
pop
std
mov
aad
in
ds
scas
or
lods
leave
fxam
sub
mov
mov
jns
mov
mov
jge
stos
lods
cmpsb
push
push
push
and
cwtl
repz
fidivl
add
jl
inc
adc
fwait
bswap
mov
dec
cmp
cmc
daa
fsubs
addr16
ja
add
enter
sbb
pop
mov
gs
or
fcmove
imul
fsubs
pop
in
mov
ret
mov
pop
rclb
pop
mov
cltd
mov
insl
xor
adc
pushf
scas
mov
dec
int3
mov
sub
movsb
andb
mov
jge
cmc
push
jo
and
cmp
pushf
flds
cmc
addr16
mov
ret
or
stc
mov
test
movl
icebp
dec
lret
insb
fwait
push
or
vmulsd
fmull
scas
dec
jo
pop
push
ja
sti
inc
and
hlt
mov
mov
adc
and
movsb
subb
imul
sbb
or
jge
addr16
push
in
ja
sbb
push
inc
jo
mov
mov
fs
lahf
push
mov
das
movsl
jbe
pop
xor
ret
movsl
or
in
adc
and
jp
outsl
inc
loopne
mov
arpl
jno
insl
xchg
iret
mov
testb
mov
and
daa
sbb
push
test
add
push
xor
pop
pop
inc
or
sti
add
xlat
in
mov
cmp
jne
pusha
mov
cmp
mov
test
ljmp
idivb
lret
js
testb
jg
cmp
fstpt
andb
dec
mov
cmpsl
pushf
adc
pop
sbb
sbb
jnp
xor
inc
push
pop
sub
neg
inc
cmp
sbb
push
cmp
es
aas
fmulp
es
sti
cmpsl
dec
aas
inc
clc
or
subl
add
jns
mov
mov
lahf
arpl
mov
data16
std
stos
daa
adc
ja
pop
scas
dec
adc
in
sub
xor
xchg
sbb
fidivs
cli
daa
sbb
dec
sarl
ja
in
inc
aad
lahf
cmp
repnz
cld
jbe
lds
cwtl
push
lcall
mov
std
fmul
cmc
insl
jbe
test
pop
dec
punpckhdq
xchg
or
sub
fsubs
dec
dec
dec
adc
adc
sub
leave
cmp
shll
sbb
mov
add
lcall
arpl
sbb
inc
jg
xor
iret
xchg
sbb
xor
shlb
punpckhdq
pop
xor
sbb
xor
and
lds
add
in
iret
repz
or
rcl
sahf
sbb
or
std
inc
and
scas
adc
rcrl
fs
sti
pop
mov
adc
inc
lret
pop
fisttps
adc
xchg
test
loop
out
pop
sbb
cwtl
mov
and
mov
cli
movsb
pop
jmp
cmp
jne
adc
into
jne
sbb
fmul
xchg
cmpsb
sahf
and
pop
mov
cmp
inc
xchg
cmc
addr16
out
mov
lret
imull
or
mov
dec
sub
aam
cmp
std
mov
push
push
adc
dec
xchg
sti
cld
in
in
jg
xor
add
mov
test
inc
add
xchg
add
adc
jnp
lcall
push
fwait
sbb
jns
cmc
insl
jl
loopne
pop
push
fnsave
loop
inc
xchg
cmc
sti
popf
jae
pusha
addr16
mov
bsf
test
test
out
ja
out
test
fs
fsub
xor
and
mov
pop
mov
in
or
xor
push
out
mov
in
jns
cmp
stos
loopne
push
or
loope
cld
push
insl
sti
jns
mov
inc
repnz
jnp
and
test
inc
clc
loope
xchg
pop
insb
pop
add
push
jg
lock
fcoml
sbb
add
mov
adc
outsb
push
ljmp
popf
xor
sub
in
mov
mov
push
add
xlat
sar
in
mov
cmp
insb
inc
imul
ret
jle
pop
out
dec
push
iret
pop
push
popa
gs
nop
mov
dec
shll
andl
hlt
arpl
outsl
pop
cmp
leave
jl
cmpsl
add
mov
push
cmp
icebp
cmp
js
jg
push
cmp
cltd
and
shlb
xor
test
popa
xchg
lea
push
test
jge
and
mov
test
pop
aas
and
in
test
inc
sbbl
xor
lods
and
popf
out
mov
or
pop
lock
push
lcall
aas
bound
sbb
frstor
data16
mov
cmpsb
mull
push
mov
lods
dec
mov
cmc
inc
cmc
out
fimuls
sbb
hlt
jne
fdivl
bound
push
sbb
notb
lds
in
xlat
std
push
adc
andb
xor
adc
or
jl
arpl
push
lahf
je
jg
jecxz
pop
cmp
xor
fldenv
call
mov
loopne
lock
xchg
pop
dec
popa
scas
lods
mov
mov
xorb
insl
push
imul
int
push
jns
mov
add
xlat
push
xchg
cmp
sub
xor
lds
or
fimull
inc
fnsave
int3
cmp
fucomip
mov
cmpl
fcomi
adc
add
add
insl
arpl
xchg
dec
stc
cmp
add
insl
cmp
flds
aad
jnp
dec
dec
inc
sub
mov
push
in
jmp
pusha
jmp
pop
cmp
push
andb
in
and
dec
inc
cmp
and
adc
pusha
and
jmp
je
sbb
inc
inc
in
mov
add
iret
cmpsl
movsb
push
mov
sbb
add
mov
sarb
adc
mov
stos
add
out
xchg
pop
adc
imul
lea
push
shl
mov
mov
imul
jge
or
pushw
adc
add
test
aas
and
jmp
es
inc
out
and
pop
ja
nop
mov
pop
sub
insb
xchg
sbb
mov
enter
les
xchg
call
add
aaa
xchg
jg
inc
sbbl
mov
insb
dec
cwtl
cmp
inc
and
and
cmc
arpl
adcb
mov
fnsave
out
out
add
bound
cmc
or
rcrb
mov
or
adc
popa
mov
js
push
fisubrl
jnp
repnz
std
mov
ret
dec
idivl
testb
mov
xor
imul
pop
sbb
push
jmp
mov
xchg
push
jmp
inc
fnsave
adc
inc
movsb
ljmp
repz
daa
push
jp
jp
xchg
call
sbb
jecxz
or
decl
xchg
mov
push
lock
insl
outsl
adc
mov
fldenv
xlat
sti
sti
in
ret
sti
sahf
cltd
out
fldl
daa
mov
mov
dec
jae
xchg
xchg
stc
stc
cwtl
out
sub
data16
scas
adc
adc
pop
aas
pusha
dec
xor
jmp
add
mov
pop
sbb
inc
mov
jb
sbb
faddl
cmp
loope
cmc
dec
jns
and
insl
enter
and
leave
ljmp
xor
mov
and
pop
jp
in
into
jb
jmp
xor
or
mov
sar
push
add
cmp
dec
fisubs
mull
es
adc
xor
add
ret
and
idivb
cld
lcall
push
movsb
dec
inc
push
nop
orl
cltd
loopne
or
jle
sbbl
or
add
daa
mov
rcl
std
and
mov
das
dec
push
cmp
xor
add
sbb
loope
aam
xchg
sbb
mov
push
cli
das
push
pop
sub
jecxz
cmp
push
imul
inc
sbb
sbb
or
sbb
mov
adc
fcomps
adc
fnstenv
jno
mov
jp
aad
arpl
pop
js
and
or
inc
rcll
mov
jns
movsl
cmpsl
jns
xor
enter
jnp
repz
bound
insl
pop
xchg
adc
pop
xor
and
scas
call
jne
in
lods
and
addr16
notb
ret
in
or
cs
inc
sbb
push
mov
push
jge
call
fs
pop
mov
jmp
mov
lods
fxch
pop
jbe
sbb
add
jns
xchg
call
mov
jmp
adc
inc
lds
popa
jmp
inc
inc
xchg
cmp
out
test
pop
and
mov
add
jno
lahf
mov
cmc
ret
cmp
inc
outsl
jns
mov
xchg
rorl
xchg
jno
mov
sti
xchg
daa
push
in
sbb
lock
js
movsb
sub
out
shlb
add
fwait
pop
outsb
and
aas
push
pop
fisubrs
stc
sub
insl
add
fmulp
add
or
mov
or
insl
daa
or
adc
roll
push
dec
inc
sbb
daa
xchg
stc
cmp
insb
ret
frstor
xchg
xor
inc
fsubp
jb
cwtl
mov
arpl
lea
cmpsl
jns
movsl
mov
inc
mov
scas
aad
lods
jno
data16
aad
pop
cmp
mov
add
sbb
mov
jmp
ljmp
dec
mov
jo
mov
sub
sar
test
ja
inc
push
xchg
fcom
fiaddl
inc
mov
lret
xor
in
icebp
je
cs
mov
sti
jne
cmp
int
icebp
pusha
push
jb
aam
adc
and
push
or
bound
push
inc
out
out
dec
adc
sub
nop
loope
mov
adc
mov
test
add
aaa
and
cmpsb
arpl
stos
negb
testb
mov
fisubrl
inc
add
cmp
cmpsl
fsubl
sub
xor
adc
xorl
jne
es
or
or
fnstsw
imul
sub
cmp
out
aad
jg
out
cwtl
imul
insl
mov
sahf
stc
call
xlat
scas
dec
pop
push
sbb
xor
xchg
stc
mov
cwtl
inc
flds
sub
jle
pop
repnz
mul
hlt
into
sbb
je
fdivp
jo
addl
das
dec
push
sub
lahf
sbb
fiadds
fiadds
and
jle
inc
jns
lock
or
cmp
btr
int3
cli
cmc
std
adc
add
movsb
ss
outsb
push
shll
popa
and
loope
sbb
pop
add
sti
daa
sub
push
mov
and
mov
xorb
lods
negb
sub
int
sbb
xor
lret
mov
stos
cmp
mov
mov
daa
shlb
out
mov
and
sub
orl
pop
xchg
es
iret
inc
pop
nop
loopne
pop
pop
mov
xor
movsb
pop
and
dec
mov
pop
add
pop
ja
iret
stc
push
ljmp
pop
out
xchg
push
test
out
test
cli
xchg
scas
sbb
cmp
cmp
mov
dec
and
call
pushf
cmp
push
imul
jmp
sub
cmp
pop
fimull
mov
xchg
jg
push
xchg
aas
jne
mov
call
and
jge
loope
dec
push
jg
ret
in
jne
int
mov
ds
cmp
dec
push
nop
xchg
popa
jb
cld
icebp
dec
xchg
adc
and
pop
pushf
adc
adc
pop
mov
pop
cmp
das
inc
ds
mov
fcmovb
loope
iret
xchg
pop
clc
and
orl
push
push
add
in
adc
adc
or
adc
mov
mov
cs
gs
cwtl
fucomip
int
negl
imul
lods
std
jp
arpl
add
ja
loope
sti
and
out
stos
sbb
jg
adc
scas
mov
or
sub
cld
fists
cmp
imul
adc
xchg
shrl
xor
fidivrs
cmc
xor
and
jecxz
sbb
jo
pop
cltd
add
daa
enter
leave
test
pushf
dec
pop
or
jns
cmpb
push
sub
cmp
dec
sbb
test
rcrb
ljmp
sub
mov
or
aas
jp
push
xchg
pop
add
mov
cmp
dec
cltd
xor
adc
sbb
scas
out
mov
bound
mov
enter
mov
add
dec
insb
cmp
repnz
jg
repnz
enter
rol
jae
loop
inc
aaa
sbb
inc
or
dec
mov
mov
jae
lcall
pop
fcoms
sbb
lods
xor
movsb
rorb
fdiv
or
dec
loop
add
fwait
inc
pop
loopne
fwait
adc
and
push
add
je
push
sub
cmp
jae
mov
iret
pop
negl
mov
add
aaa
and
cmp
pop
mov
outsl
cmp
or
fidivs
inc
push
ljmp
jo
pop
cmpsb
test
or
adc
jmp
outsb
fcomps
add
mov
jp
ret
aam
add
pop
jg
jmp
loope
or
fcmovnu
ljmp
or
loopne
push
mov
sbb
cmc
or
sti
push
nop
repz
xor
test
sub
dec
cwtl
jbe
test
in
insb
inc
cmp
test
push
cmp
inc
inc
movsb
jge
sbb
jae
hlt
jbe
push
mov
cld
jne
push
jmp
in
xchg
dec
xlat
out
pushf
xor
jo
pop
arpl
in
aam
out
stos
push
dec
out
or
neg
mov
adc
in
cld
mov
ror
sub
push
popa
and
jae
out
call
sbb
or
add
in
and
push
adc
pop
dec
sbb
pop
outsb
lea
cmp
mov
mov
pusha
lea
andl
es
enter
dec
mov
pop
cld
sub
and
xchg
sub
sbb
jmp
out
jae
cmpsl
or
std
adc
scas
sbb
mov
xchg
pop
popa
dec
fmulp
nop
pusha
mov
mov
or
jae
mov
outsb
push
add
addr16
ds
cmp
adc
ret
pop
pop
ss
jmp
sbb
movsb
sbbl
sub
cmc
push
dec
adc
dec
popf
jmp
test
cmp
adc
lret
lcall
fldenv
incb
adc
dec
into
add
mov
leave
adc
inc
push
dec
mov
cli
aas
arpl
cmp
repz
sti
adc
pop
test
mov
insb
xor
jbe
lahf
lea
push
inc
cltd
popf
jno
cmp
mov
lret
jo
pop
scas
mov
mov
int
jg
jb
jno
stos
je
jge
dec
hlt
adc
sbb
popa
clc
xchg
into
adc
sbb
std
inc
pop
xor
jno
ds
fistl
orl
lock
lret
aaa
push
fs
and
push
lods
es
lods
jno
lret
or
mov
or
mov
ljmp
lret
ret
lret
adc
push
adc
enter
sbb
mov
mov
and
js
iret
mov
enter
loopne
xchg
scas
in
stc
jne
or
icebp
cmp
hlt
dec
adc
aas
mov
adc
adcb
mov
fistps
icebp
jne
cmp
fs
inc
mov
mov
shrl
mov
arpl
jp
cmc
loop
nop
loop
add
mov
jnp
mov
sbb
mov
or
int3
fiadds
cmp
decl
sub
popf
cmp
jbe
xchg
inc
das
sbbb
stc
cmpsb
jo
test
call
sbb
daa
xchg
or
mov
lea
dec
cltd
jae
sarl
sbb
insl
lahf
ds
test
or
inc
int
or
mov
sbb
cmp
jns
jns
aam
cmp
rolb
shll
cmpsl
xor
test
dec
loop
xchg
mull
mov
clc
lock
jge
cld
pop
dec
mov
xchg
mov
xor
bnd
inc
cmpsl
mov
pop
dec
and
int
jae
iret
pop
jno
or
test
fidivrs
mov
xor
aas
jbe
or
fimull
not
aas
sub
and
aam
clc
loope
fmul
ror
push
jmp
aam
ficompl
aas
mov
out
mov
push
inc
and
sbb
scas
push
in
mov
pop
clc
xchg
mov
loope
addr16
inc
push
dec
insl
jb
loope
push
push
fnstsw
xor
mov
dec
add
and
mov
inc
mov
xchg
add
test
rcrb
push
sahf
and
rorb
into
mov
lcall
cmp
mov
jmp
and
add
fdivrs
fs
into
in
xchg
lods
and
xchg
in
insb
adc
inc
cmc
nop
repz
cmp
cmp
in
lds
jne
and
jecxz
cs
adc
frndint
inc
std
and
cmp
cwtl
nop
repnz
int
repnz
data16
xor
leave
and
loope
mov
nop
mov
mov
sbb
xchg
pop
mov
mov
inc
mov
nopl
mov
jl
cli
stc
cmp
xchg
movsl
fcomip
xor
dec
jp
icebp
xchg
int3
fwait
xor
jle
push
mov
mov
lods
lret
dec
shrb
pusha
adc
pop
pusha
jle
mov
sbb
aad
lods
xchg
push
inc
sub
cmpsb
in
add
into
mov
aaa
jmp
mov
push
sarl
mov
divb
sub
or
out
and
xor
adc
sub
adc
mov
test
aaa
scas
xor
enter
lcall
or
or
scas
jnp
nop
and
dec
xchg
sbb
push
xchg
repz
sbb
ficoml
mov
cltd
sbb
or
mov
add
sti
inc
pop
mov
sub
sub
add
mov
cmc
out
js
jb
cmpl
sub
xchg
cs
mov
sahf
fs
cmpsb
push
xchg
add
icebp
push
arpl
jecxz
mov
mov
pop
imul
insl
jg
xchg
ss
add
pop
mov
inc
ret
out
test
sub
in
and
sub
sub
insb
ror
mov
cmp
sahf
mov
lods
adc
and
ljmp
sti
outsl
mov
aaa
aas
xchg
sbbb
add
xchg
sub
int3
in
sbb
cmp
and
push
ret
mov
xorb
into
sti
sbb
addb
sahf
or
nop
mov
out
fstp
xchg
ljmp
xor
mov
call
mov
push
adc
stos
mov
lock
xor
xorb
in
xor
xor
jno
push
aaa
adc
xchg
mov
cmc
cmpsb
jnp
fs
mov
jbe
jnp
popa
sbb
lods
pop
clc
dec
push
sub
ljmp
jb
push
ficomps
fsubrl
pop
push
push
bound
loop
sub
clc
sub
je
sub
and
push
loopne
xor
gs
fldt
aam
inc
xchg
cmp
add
in
in
test
jnp
mov
std
dec
and
fldl
leave
test
push
dec
mov
cmp
shlb
add
dec
imul
scas
cltd
cmp
inc
push
out
pop
pop
subb
jle
xchg
orl
rcl
outsl
movsl
mov
fsubrl
loopne
mov
lahf
int3
out
inc
hlt
jbe
lcall
push
push
mov
mov
mov
ret
adc
aam
xor
dec
sbb
shll
or
enter
dec
lahf
ja
mov
out
std
pop
pushf
in
mov
cs
outsb
cs
sub
rcll
mov
je
jo
mull
jmp
inc
sub
mov
push
jb
outsb
push
adc
dec
icebp
mov
ret
jl
and
out
orb
jno
ja
test
cmp
neg
inc
fisubrl
int3
movsb
cmpb
mov
jo
and
mov
daa
adc
mov
mov
outsb
mov
call
sub
in
add
shlb
lcall
and
pop
cmp
daa
sahf
mov
mov
test
mov
int3
paddd
xchg
push
or
shll
shll
mov
inc
or
cmc
mov
mov
pop
icebp
mov
orl
add
mov
pushf
aam
sbb
sbb
inc
rcrl
mov
fidivs
dec
out
movsb
ret
pop
in
sbb
adc
cld
jae
mov
xor
sbb
mov
sbb
stc
lret
add
sti
xchg
jns
dec
ret
mov
dec
call
add
rcrb
sbb
mov
jo
shll
iret
movsl
bound
mov
cmp
gs
cli
out
or
add
push
out
push
popf
push
cmpsb
mov
setp
mov
aam
shrb
jmp
in
addr16
out
imul
nop
sar
fwait
out
out
xchg
and
adc
mov
sub
push
aam
xor
push
fmul
hlt
sbb
inc
pop
sbbl
mov
xchg
sub
inc
pop
aas
cwtl
inc
or
lret
jmp
into
cmpsb
adc
scas
cs
jge
jns
repz
or
xchg
push
or
mov
adc
sub
cmc
pop
jecxz
xchg
jbe
js
sub
push
call
mov
xchg
mov
inc
jo
push
clc
sbb
sbb
cmp
in
loope
xchg
pop
filds
ret
daa
insl
inc
mov
mov
cmp
adc
jae
out
out
jo
xchg
mov
shr
fcomi
test
int
popf
sub
repnz
cwtl
inc
bound
std
ljmp
into
or
jl
cmp
outsl
test
push
ss
icebp
fwait
imul
pushf
loopne
loopne
xor
jbe
lea
repnz
or
sbbl
add
dec
xchg
mov
inc
push
push
aad
fnstenv
push
push
aas
or
loop
lods
sbb
test
or
pop
bound
xor
movsl
xchg
mov
jb
cmp
mov
and
fstl
insb
and
mov
addl
loopne
popa
loope
mov
repz
cltd
xchg
pop
sbb
loopne
sbb
outsl
xchg
sahf
adc
jno
pop
push
xchg
mov
jo
cwtl
std
outsb
cld
std
cwtl
lds
mov
sbb
cltd
movsb
sub
xor
icebp
pop
sahf
loop
sbb
addb
cmp
and
in
or
sub
jnp
jecxz
or
inc
adc
sbb
out
jo
mov
pop
dec
ret
adc
pop
inc
popf
xchg
aas
mov
scas
leave
add
xchg
or
std
jecxz
pop
data16
xor
nop
add
add
int
in
or
and
lcall
cmp
scas
je
sahf
daa
mov
mov
insb
pop
adc
inc
sbb
ss
cmp
mov
sti
adc
movsl
xor
pop
dec
inc
hlt
outsl
je
xlat
push
dec
push
dec
adc
cmp
lret
adc
into
adc
xchg
fisttps
stc
xor
xor
ss
sub
sbb
adc
ljmp
add
js
cs
hlt
inc
fdivl
ret
cmp
inc
adc
jecxz
cmpsl
or
dec
pop
push
imul
jl
mov
fldcw
mov
in
and
fimuls
jae
cmp
inc
mov
push
fdivp
sub
pop
mov
push
mov
or
push
push
loop
inc
fwait
leave
movsb
fimuls
and
test
mov
lahf
inc
aas
je
and
mov
and
push
movsb
fmull
out
and
lcall
cmp
cmc
sbb
and
inc
or
in
xchg
into
mov
xor
les
jge
jbe
out
dec
daa
imul
outsb
sbb
arpl
data16
inc
dec
lock
pop
mov
add
cmpl
jmp
jl
mov
jo
insl
rolb
ret
lods
mov
ljmp
xchg
js
js
shrl
popa
call
adc
cmp
clc
xchg
adcb
repz
in
inc
or
outsb
push
aaa
or
addr16
cld
adc
sub
or
ficoml
jmp
iret
repz
std
sbb
mov
lea
clc
stos
shrl
iret
sarl
ret
ja
push
adc
sbb
and
pop
adc
std
or
mov
mov
mov
dec
imul
dec
xor
outsb
xlat
or
cmpsl
stc
inc
cmp
fdiv
cmp
cmp
fbstp
xor
adc
out
lds
ret
sub
adc
cmp
jmp
mov
andb
fldcw
in
in
jo
sub
push
loopne
fsubl
pop
popa
jo
push
mov
add
dec
sbb
adc
xchg
lret
mov
pop
ss
push
push
and
movsb
cmp
mov
movsl
inc
dec
and
sbb
adc
popa
sbb
repz
or
imul
cmpsl
mov
jbe
outsl
dec
sub
lea
arpl
iret
pushf
movsb
repz
mov
inc
pop
aas
xchg
dec
les
xchg
jnp
jae
into
daa
shlb
bound
dec
pop
jp
int3
sahf
xchg
jnp
add
cmp
adc
lods
enter
adc
or
ret
sbb
cmp
sar
aad
cmp
mov
cmpsb
sub
addr16
lcall
adc
popf
push
mov
aaa
dec
pop
dec
iret
pop
int
xchg
fldcw
stos
ror
mov
jecxz
jno
add
shrl
lea
mov
test
pop
xlat
subl
testl
xchg
fcom
cmpsb
inc
sub
sbb
in
push
insb
push
les
mov
mov
ret
push
popa
fwait
and
fsubl
gs
das
mov
subl
out
scas
push
xor
mov
gs
cmp
sub
jne
mov
shlb
lock
adc
sbb
dec
stc
push
xor
jge
clc
mov
xchg
cwtl
js
pop
push
mov
pop
push
pushf
outsb
sbb
xchg
or
xchg
add
push
mov
mov
or
dec
sub
sti
jge
sbb
inc
add
and
scas
xor
mov
or
lds
xor
lret
imul
bound
leave
out
sub
sti
insb
mov
mov
sti
js
cmp
add
in
push
sbb
imul
push
push
stc
dec
xchg
jecxz,pn
and
sbb
bound
cmp
je
cmp
orl
popf
push
xor
pop
dec
push
push
movsl
fs
sbbl
mov
adc
jne
or
adcl
cld
dec
and
sti
pop
es
mov
mov
outsb
imul
push
test
mov
inc
clc
and
jl
fstl
daa
mov
sbb
icebp
jmp
jge
ss
xorb
es
mov
jle
xchg
jnp
jb
jae
fucomip
or
cltd
int3
lock
add
mov
jge
inc
bound
and
mov
pop
dec
and
push
lods
test
xor
xlat
bswap
dec
jle
stos
rcrl
push
inc
cmc
popa
out
inc
addr16
dec
or
adc
sbb
pop
sbb
in
cs
loop
imul
out
cmpsb
sbb
addr16
js
roll
pminub
pop
push
xchg
sub
sbb
mov
shlb
xchg
icebp
outsl
arpl
call
ficoms
cli
dec
rclb
test
aas
cmp
or
test
lock
into
xchg
or
or
xor
mov
aam
jne
adc
stos
ret
and
mov
jge
insl
js
jg
divl
mov
cmp
pop
mov
and
fbstp
cmpsb
inc
aad
cmp
sbb
dec
sub
insl
inc
cli
iret
mov
inc
ret
enter
dec
stos
gs
xlat
mov
loope
cmp
pop
icebp
pop
sub
cmpsb
or
push
or
push
lods
xorb
adc
inc
roll
and
aam
sub
xchg
ja
and
xchg
int
mov
cmp
mov
xlat
dec
nop
xchg
test
adc
ljmp
mov
jp
sub
xlat
daa
mov
pop
add
pop
test
inc
test
lock
xchg
xchg
popf
repz
roll
sub
pop
cmpsl
mov
sete
mov
stc
and
aas
sbb
mov
lahf
test
or
mov
jge
adc
mov
loopne
jnp
mov
into
cmc
movsb
loope
adc
inc
dec
xchg
add
xchg
aaa
or
dec
adc
pop
test
repz
jmp
sub
push
sub
imul
adc
scas
xchg
rcrb
cmp
lods
lea
xchg
shll
jecxz
daa
mov
in
test
push
xlat
pop
pusha
scas
push
jmp
add
jo
mov
dec
dec
loopne
hlt
mov
push
ja
mov
mov
add
sub
add
in
jle
outsb
and
nop
mov
in
mov
and
mov
pop
jecxz
mov
in
lds
loop
mov
inc
sarl
inc
ss
stc
and
mov
mov
mov
jne
xor
lds
ficomps
mov
pop
aam
mov
pmulhuw
cmp
add
pop
jecxz
xchg
xchg
jno
or
add
jno
or
es
inc
pop
lea
push
or
cmc
adc
cmpsl
xlat
push
and
aas
arpl
rcl
cli
addr16
and
xchg
add
cmp
out
call
aad
and
pop
lret
addr16
inc
es
sbb
fadds
lcall
fwait
pop
sbb
inc
aad
sub
rclb
add
adc
out
xchg
nop
push
add
popl
imul
sub
push
mov
push
mov
repnz
imul
add
jmp
jg
or
movd
sbb
cli
mov
jno
fsubrs
aas
sub
test
jmp
lods
xchg
sbb
add
in
mov
pop
or
in
and
cmpb
mov
mov
loop
sub
pop
lsl
frstor
pslld
imul
sub
jl
lcall
dec
push
sti
test
inc
jae
in
jecxz
roll
sahf
or
mov
and
push
clc
add
andb
cmp
mov
inc
sbb
dec
leave
sub
cmp
jmp
es
add
jo
cltd
sbb
push
pushf
push
jg
cltd
xchg
adc
daa
icebp
fnstsw
std
sub
out
js
sub
pop
xchg
or
incl
cwtl
lcall
and
repz
lret
ficompl
and
xchg
mov
ficoml
cmp
add
data16
cmp
dec
mov
js
daa
test
adc
mov
das
stos
arpl
xor
jnp
je
sub
rorl
rorb
inc
sbb
pop
out
lock
into
inc
dec
lret
fmuls
mov
push
js
pop
inc
mulb
jle
mov
cmpsb
mov
cmp
or
jmp
and
sbb
and
aaa
pop
sbb
sarl
inc
sbb
xchg
xor
jae
enter
pop
xor
mov
xchg
subb
loope
jg
cmp
inc
jnp
insl
sti
add
push
mov
cltd
cmp
sub
mov
adc
push
jp
fdivrl
xchg
pushf
cmp
sub
cmpsl
test
pop
cmp
sbb
imul
call
mov
jmp
sbb
mov
je
jns
je
in
movsl
and
cmc
orb
cmc
xchg
andb
adc
insb
rol
jns
cmp
xchg
in
and
xchg
pop
les
push
out
in
aaa
test
adc
out
leave
adc
insl
lods
or
loop
pop
ja
shlb
mov
mov
dec
aas
mov
push
cmp
frstor
xor
aad
xor
mov
cmp
cmpsb
push
xor
mov
xchg
mov
xchg
movsb
iret
add
testb
inc
ljmp
jmp
ja
add
scas
repz
loopne
add
dec
xchg
pop
and
add
mul
mov
adc
mov
mov
popf
test
and
scas
xor
lret
adc
mov
and
fwait
dec
cmp
es
and
xchg
add
ret
dec
ficoml
imul
ljmp
dec
adc
scas
jmp
push
push
cld
pop
jae
in
cli
add
sbb
or
insl
adc
lods
cli
movsb
cmp
mov
pop
in
pop
sub
lods
imul
stc
xor
xchg
jle
and
cmc
jmp
mov
sbb
loop
mov
sbb
xor
jnp
mov
in
das
cld
push
sbb
sarl
int3
push
pop
push
repnz
sahf
sbb
or
js
aam
mov
or
fs
cmp
imul
or
add
mov
std
xchg
lret
jg
sbb
stc
shlb
cmp
lret
cmp
mov
inc
fwait
pop
repnz
and
dec
addr16
je
fs
add
inc
push
data16
xlat
mov
push
ja
mov
adc
jmp
decb
jmp
imul
jo
pop
push
jnp
mov
push
out
pop
sub
dec
mov
outsb
jmp
divl
int3
nop
imul
push
mov
add
mov
adc
pop
pusha
aam
loopne
iret
or
mov
test
movsl
xchg
sbb
pop
popa
push
call
sub
int3
call
js
outsl
repnz
mov
jno
ljmp
pop
pusha
sbb
dec
cmpsb
inc
sbb
sub
aam
out
nop
xchg
pop
mov
jle
insb
pop
jmp
lods
imul
pop
dec
dec
imulb
daa
mov
pop
mov
xchg
in
cmp
outsl
rclb
test
test
sbb
or
pop
inc
jae
cs
pop
push
nop
test
stos
cmp
xor
push
cmp
or
lds
pop
push
cmp
push
repz
cltd
jge
mov
xor
fcoms
ret
shrl
cmp
mov
mov
stos
out
and
jo
call
or
sbb
xchg
mov
jae
int
inc
push
xor
outsb
shr
sub
xor
xor
ss
cmp
mov
outsl
int
addr16
mov
pop
shr
nop
sub
xchg
jns
insb
add
adc
mov
std
xlat
popa
cmc
lds
enter
jne
out
push
sbb
in
adc
add
mov
cmp
fildl
cmp
icebp
bound
andb
jno
mov
punpckhdq
lret
lcall
mov
or
incb
xchg
jno
sbb
pop
imul
bound
jp
fstpl
or
arpl
scas
mov
negl
arpl
cwtl
lock
adc
repnz
or
std
cmp
inc
pop
mov
mov
adcb
dec
add
fdivrs
ret
inc
test
fldz
and
and
xor
out
jnp
test
aam
push
aaa
orl
pop
mov
inc
add
push
xchg
loopne
or
aam
insb
jg
mov
mov
jmp
mov
and
mov
outsb
fnstenv
int3
sahf
out
push
das
mov
iret
push
jnp
cmp
scas
vmptrld
imul
pop
in
in
mov
pop
mov
xor
icebp
dec
nop
fstpt
xor
ss
xchg
mov
mov
je
les
fs
add
lds
std
mov
push
xor
aaa
out
mov
test
stos
cmpsb
aam
or
cmp
mov
mov
or
sbb
cmp
dec
jmp
pop
enter
lret
jg
add
mov
cs
jp
not
add
jb
int3
jmp
mov
ret
mov
sub
jae
addr16
xchg
jnp
imul
jg
sbb
sbb
xchg
mov
add
sbb
das
pop
dec
fs
loope
test
int
cmpsl
pop
js
inc
push
push
addr16
out
addb
sbb
adc
packsswb
out
fbld
imul
jle
cmpsb
sbb
ja
xchg
addb
roll
in
outsb
je
sti
fldenv
dec
out
sub
fists
test
mov
cmp
mov
cltd
jg
ss
fnstenv
stc
in
fdivrs
jo
adc
sbb
loope
xchg
dec
mov
mov
arpl
cmc
pusha
cmpsl
fs
add
xchg
mov
and
pop
mov
cld
sub
into
lds
jle
pop
xchg
push
ss
rclb
outsb
outsb
mov
test
stc
unpckhps
jnp
fidivrl
pop
mov
pop
and
mov
push
js
push
pop
lds
sar
das
mov
frstor
cld
xlat
insl
scas
xlat
mov
add
adc
mov
jle
and
and
aad
cli
adc
mov
ss
fmuls
cmp
mov
pop
fucomi
jl
sub
lock
sbb
cmpsb
adc
sub
mov
test
pop
mov
cmp
cmp
outsl
xchg
add
in
popa
xchg
out
pop
lods
mov
xchg
and
jge
inc
cmp
mov
mov
fistl
xchg
jp
gs
insb
prefetch
or
pusha
test
gs
ja
push
cltd
xchg
xchg
mov
lahf
addr16
cmc
mov
in
stc
mov
jb
inc
xchg
jl
call
stos
adc
pop
sub
mov
scas
xor
in
fs
pop
mov
test
pushf
push
adc
and
xchg
cmpsb
xchg
and
jb
ljmp
fbld
or
inc
les
and
push
xchg
sti
into
mov
in
aam
add
mov
push
fiadds
or
mov
fsub
mov
pushf
lcall
inc
es
sbb
aam
dec
xorb
mov
jno
and
aam
rcrb
xchg
popl
xchg
scas
mov
sbb
xorb
loopne
add
dec
outsb
arpl
cwtl
ret
xchg
daa
add
cmc
xchg
push
xor
stos
sahf
outsl
std
push
lahf
pop
ret
xchg
dec
cs
nop
loope
rol
or
popf
loop
ss
fcmovb
scas
in
dec
and
adc
movsb
jbe
dec
pop
sti
cmp
outsb
xor
ret
inc
cmpsb
pop
inc
sbb
test
sbb
or
cmp
out
push
pop
mov
inc
testl
inc
sub
rol
test
jge
mov
lcall
repnz
dec
lea
pop
ret
popf
aam
hlt
mov
push
insl
jae
inc
bound
dec
xor
pop
mov
es
jns
fwait
inc
push
jno
jbe
in
lret
cltd
or
outsl
xlat
fistpll
sbb
xchg
je
lcall
mov
std
add
push
mov
push
and
or
pushf
cli
inc
fildll
fildll
fsubp
bound
adc
enter
jb
js
jo
pop
mov
stos
test
jp
xor
inc
stos
xlat
xlat
push
push
out
xor
push
cli
or
jo
lods
or
lods
inc
xlat
inc
mov
repnz
stos
or
aaa
sbb
dec
fsubl
ror
adc
add
push
push
cmc
sbb
cmpsl
mov
push
cmpl
inc
fnsave
bound
sbb
mov
inc
mov
mov
fildll
cmc
incb
shrb
xchg
lods
xor
jmp
add
mov
into
fsts
sub
cmp
inc
lret
mov
aaa
stc
stos
subb
inc
js
push
mov
int3
sbb
inc
inc
addb
data16
cld
insb
clc
pusha
sbb
mov
lea
push
data16
inc
mov
and
xchg
pop
sahf
push
pop
xor
jbe
mov
mov
imul
test
popf
call
pop
push
mov
cld
call
mov
xor
subb
mov
xchg
xorb
jmp
jnp
and
jb
push
push
xor
jne
xchg
int3
pop
int
int3
mov
lcall
test
pop
and
xor
pop
jmp
inc
repz
aad
dec
mov
shll
push
pop
mov
and
icebp
xchg
add
pop
cli
and
and
dec
cmp
dec
mov
sub
cmp
jp
inc
xorb
push
in
inc
icebp
stos
addr16
push
jo
xchg
in
push
dec
inc
push
add
xchg
mov
mov
imul
imul
cmpsb
bound
mov
int3
xor
jno
call
mov
dec
je
mov
pop
push
fwait
add
mov
movl
mov
adc
insb
stos
or
inc
add
and
xchg
dec
scas
scas
jg
andl
jmp
test
lock
repz
addr16
pop
insb
mov
dec
xorb
cltd
int
clc
xor
lret
or
jne
push
inc
dec
xchg
loop
dec
cmp
add
cmpsl
sbb
fisubl
aas
pop
mov
mov
inc
inc
pop
enter
outsb
ret
or
out
dec
in
dec
xor
sbb
cmp
mov
aam
mov
stos
mov
fisttpll
push
adc
fsubr
mov
inc
dec
add
dec
cltd
pop
daa
dec
mov
movsl
xor
sahf
jne
adc
out
inc
outsb
push
jmp
leave
xor
mov
lock
js
mov
mov
and
mov
or
lret
lahf
jnp
pop
cmpxchg
pop
push
rolb
repz
push
out
test
in
jb
dec
xor
scas
nop
fdivrp
jno
add
xchg
into
sahf
adc
in
mov
pop
bswap
divb
pop
pop
and
rorl
dec
nop
sbb
hlt
andb
xor
sub
jo
int3
cmp
fwait
sti
mov
out
test
movsl
jecxz
push
inc
add
lcall
outsb
mov
das
dec
push
cmp
leave
cmpsb
sbb
test
and
shrl
mov
sahf
int3
int3
or
outsl
dec
adc
das
add
push
sub
aam
mov
fadds
push
imul
aam
leave
xchg
push
sti
or
mov
pop
cmp
jecxz
dec
mov
sbb
pop
imul
push
cmp
sbb
mov
inc
or
in
in
ds
ljmp
pop
add
xchg
mov
int3
pop
dec
popf
xchg
mov
and
mov
jbe
jmp
sub
hlt
sahf
xor
stos
test
mov
ss
mov
jmp
jmp
in
sahf
xchg
aas
stc
xor
leave
repnz
test
test
adcl
aam
sbbb
roll
sub
js
adc
sub
outsb
adc
push
enter
pop
cwtl
dec
mov
lods
insb
popf
insb
movsl
in
pop
pop
outsl
xor
add
je
ljmp
pop
insl
es
js
out
pop
mov
iret
fcomi
dec
shlb
xchg
xchg
fstpt
movsb
leave
or
adc
je
icebp
aam
and
testb
mov
jl
xchg
sbb
jne
push
pop
sbb
ds
and
lcall
mov
out
insb
movsb
cmp
in
nop
push
fsubr
sbb
mov
fstps
f2xm1
xor
pop
pusha
pop
inc
push
sbb
andl
cmpsl
mov
int
or
out
xor
add
in
fstl
jns
fsubrs
lea
push
lcall
les
cmp
into
mov
xchg
sub
pop
inc
fists
es
test
sbb
xor
jne
in
jl
std
pop
cmp
fcmovb
push
xchg
subl
xor
or
mov
dec
fdivrs
roll
mov
push
testb
mov
jl
int
dec
les
out
dec
loop
cmp
cli
inc
cmp
mov
cmp
and
testb
pop
xchg
dec
popf
jl
push
and
sbb
jnp
cmp
rolb
mov
sub
pop
cmpsl
xor
test
cmpsb
cmp
sub
test
push
adcb
fsub
ljmp
imul
or
lahf
aaa
lahf
jp
bound
dec
xchg
adc
pop
push
add
pop
add
mov
fwait
sarl
loop
mov
and
xor
gs
loope
sbb
pusha
cs
dec
cs
arpl
add
js
fidivl
andl
ss
adc
scas
xor
nop
leave
inc
push
bound
jb
in
daa
jg
pop
mov
mov
ja
inc
add
adcb
or
mov
ret
jl
jno
or
cmp
loopne
pop
push
pop
mov
std
ljmp
xchg
push
nop
std
add
pusha
mov
jae
scas
adc
lahf
popa
push
lret
fimuls
jb
imul
or
add
fcoms
pop
aad
mov
pop
jns
cmpxchg
or
dec
push
jp
fwait
pusha
imulb
js
stos
xchg
fsts
call
mov
add
subb
mull
sti
cmp
mov
xor
pusha
shl
mov
jae
jnp
cld
pop
in
roll
clc
xlat
pop
jnp
je
xchg
jle
and
pusha
push
xchg
mov
inc
arpl
scas
cli
inc
in
pop
les
clc
call
imul
inc
popa
and
shl
push
popa
popf
cmpsl
test
cld
das
dec
dec
std
js
pop
insb
xor
jbe
or
sub
xchg
xor
push
adc
lret
push
mov
sbb
pop
push
pop
aam
push
test
adc
jle
xor
xlat
stc
mov
dec
inc
mov
fists
xor
or
fwait
jne
jl
divl
outsb
test
js
xlat
inc
int
repnz
int
sub
cmpsb
xlat
popa
sbb
lods
fistps
mov
mov
insb
cwtl
inc
in
inc
arpl
hlt
mov
add
cmp
ja
xor
sbb
repz
jno
add
mov
sbb
dec
or
int
insl
cmc
lods
shlb
idiv
mov
jns
std
test
notb
xor
mov
repnz
push
cmc
iret
shlb
mov
fwait
xor
ss
arpl
leave
sbb
icebp
mov
xchg
repz
xor
inc
inc
xchg
xchg
in
cmc
vhsubpd
or
cmp
mov
bound
ret
mov
fsts
out
stos
add
sbb
push
add
adc
jns
xor
addl
dec
daa
pop
cs
push
addr16
lcall
clc
dec
jg
out
cwtl
into
out
pop
fsubl
jb
lods
jge
mov
dec
clc
lret
and
dec
push
ljmp
and
adc
cltd
setae
pop
lea
dec
xchg
mov
sub
js
shll
sub
cs
lea
mov
sub
inc
sbb
aas
mov
jbe
repnz
mov
xor
imul
mov
lcall
into
jnp
xchg
outsb
jmp
movsl
pushf
mov
lret
orb
sub
test
gs
sbb
or
ja
clc
fdivs
add
xor
adc
imul
sbb
hlt
fstpt
ficoml
popa
in
sub
mov
mov
xchg
or
repz
movsb
push
outsl
sti
sbb
jne
jb
cmp
push
dec
gs
jno
dec
mov
loope
xor
mov
mov
lods
in
or
cmp
jle
xchg
mov
add
out
nop
mov
xchg
xchg
xor
adcb
in
test
jp
mov
or
cmp
mov
ljmp
or
lods
cmpsb
adc
sub
add
adc
mov
cmp
dec
icebp
pop
arpl
push
ljmp
or
mov
xorl
sbb
aaa
lock
sub
and
add
push
mov
xlat
sarb
sahf
out
xchg
les
xchg
rclb
push
jne
imul
xor
popa
add
in
push
push
adcb
mov
adc
add
mov
mov
inc
or
push
aaa
mov
push
push
sbbb
cmp
xchg
xor
call
fldenv
filds
stc
fistpll
and
and
mov
inc
mov
mov
inc
inc
mov
scas
inc
cmp
imul
mov
pop
imul
sahf
and
mov
scas
and
pushf
xchg
lods
push
adc
pushf
push
xchg
cmp
add
mov
adc
pop
adc
pusha
cmpl
imul
dec
mov
mov
fisttps
out
xchg
sbb
das
sub
or
mov
imul
jl
cmp
pop
cmp
dec
pop
stc
push
subl
adc
movsb
add
aad
rorl
pushf
xchg
cwtl
push
xlat
mov
pop
es
stos
sbb
dec
loopne
test
push
mov
xchg
pop
insl
nop
sub
sarb
mov
pusha
sub
push
dec
fcoml
and
mov
das
cmpsb
int
lahf
das
push
dec
lret
outsl
push
sahf
or
xchg
jno
iret
sahf
ret
dec
jnp
aas
push
add
xchg
dec
ss
int3
out
sti
rolb
cmp
mov
push
scas
fwait
inc
aam
adc
push
cmp
mov
mov
adc
sub
dec
and
ret
add
xchg
and
push
loop
sbb
pop
mov
and
dec
dec
pop
pop
add
cli
nop
adc
imul
push
stc
mov
roll
test
sbb
test
lods
pop
sbb
mov
gs
jb
inc
stc
pop
nop
into
daa
mov
rcl
lahf
int3
sahf
in
pop
idiv
cmp
adc
ret
aam
outsb
hlt
jne
jnp
bound
mov
mov
push
pop
sar
subl
je
or
int
mov
push
lret
xchg
xor
mov
and
push
mov
cmc
cwtl
mov
lods
add
push
pushf
xchg
or
adc
xlat
int3
fisttpll
fnsave
faddl
daa
shrl
sub
and
adc
jae
dec
enter
xorl
pop
adc
fisttpl
pop
scas
popa
mov
xchg
inc
and
call
rorl
rorb
je
jg
test
flds
add
pop
cmc
lret
xchg
stos
xchg
and
imul
mov
sub
xchg
cs
or
pusha
push
pop
sbb
dec
push
arpl
dec
or
mov
enter
inc
lds
inc
mov
push
push
lcall
xor
mov
add
ret
imul
lahf
icebp
xor
cmp
pop
adc
sub
pop
imul
sarb
mov
insb
jmp
outsb
lea
popa
cwtl
pop
inc
cmp
jle
aad
mov
xchg
pop
sub
test
push
lods
bound
imul
call
cmp
push
sbb
test
sbb
cmc
xchg
inc
sbb
cmp
ret
shlb
xor
roll
mov
leave
aam
jl
dec
xchg
mov
push
repz
xor
dec
pop
adc
rcrb
les
cmpsb
xchg
mov
mov
jge
jae
and
xchg
test
mov
outsb
xchg
insl
and
insl
in
mov
sti
mov
leave
xor
adc
in
dec
jne
jae
jnp
js
inc
adc
mov
aas
adc
lret
sub
jle
imul
test
test
imul
leave
pop
push
call
loope
loopne
nop
push
cmc
js
pop
xchg
mov
sbb
js
add
xchg
and
mov
call
xchg
dec
subl
loope
adc
jle
cwtl
jne
ljmp
fnsave
lret
leave
lds
sbb
xor
push
fs
test
cmc
ja
adc
push
movsb
mov
jae
mov
mov
lods
or
clc
mov
stos
int
cmp
cmpsl
dec
leave
imul
loope
adc
and
orl
std
cmc
pop
ljmp
or
outsl
and
dec
int
push
push
inc
xor
add
xor
ss
fsubrs
mov
test
or
data16
shlb
and
in
xchg
xchg
fs
xchg
testb
out
push
insl
fbld
enter
push
mov
loopne
cltd
or
outsl
cmp
push
xor
stc
dec
or
inc
jnp
cmp
push
inc
xor
dec
cmpsl
cs
mov
pop
sub
cli
mov
lock
push
jl
add
inc
out
xchg
ja
add
aas
imul
test
jo
cltd
xchg
push
imul
loop
mov
lret
jbe
shl
cmp
lods
mov
cmp
push
inc
cmp
xor
or
xor
cmp
and
movsl
add
pop
and
iretw
jge
dec
nop
js
mov
mov
stos
mov
dec
adc
lock
nop
pushl
insl
into
rcll
cmpsb
jge
popa
std
xchg
je
imul
mov
or
push
jb
loope
pop
testb
in
test
xchg
test
jb
xchg
mov
jo
adcb
push
xor
or
xor
jae
jg
mov
xor
mov
insb
ret
dec
loope
rorb
mov
fucomi
mov
cld
nop
push
shl
call
pop
jo
jmp
cmpsl
and
xor
sub
mov
push
scas
pop
lret
push
inc
outsl
sahf
sarl
fstp
mov
jp
fistps
push
test
dec
pop
jmp
out
out
inc
sahf
pop
inc
dec
insl
fsubp
cmp
insl
push
dec
jp
adc
push
xlat
jecxz
push
adc
mov
sbb
inc
jns
jno
mov
pop
in
and
inc
inc
aas
sub
add
dec
shlb
fcoml
ret
push
and
add
loopne
pop
insb
and
pop
in
movsl
inc
ljmp
or
push
mov
push
fildl
mov
jns
imul
in
adc
jne
bound
std
jg
sarl
adc
nop
inc
pop
pop
lret
call
loope
dec
push
cmp
in
sahf
pushf
imul
cwtl
mov
jno
or
imul
fidivs
stos
adc
mov
adc
fwait
or
and
repnz
xor
int3
jle
ret
rclb
orb
add
mov
jo
cmpsl
fwait
adc
ss
pop
inc
dec
sbbb
and
mov
jecxz
movsb
in
movsb
and
lods
pusha
dec
sbb
xor
repnz
cwtl
test
in
and
ljmp
jns
pop
cmp
sub
fimull
mov
and
out
dec
add
xrelease
push
add
fadds
xor
fisubl
pop
xchg
xchg
cmpsb
push
unpcklps
ds
mov
gs
add
mov
into
inc
inc
cmp
into
cmp
insb
pop
mov
push
jle
fsub
cmc
mov
pushf
sub
sahf
or
mov
aad
int3
jmp
xchg
ja
lea
and
ljmp
mov
mov
dec
xchg
pop
push
sbb
repz
jg
jns
inc
in
sbb
pop
cmpsl
cbtw
pop
pusha
inc
push
outsb
fwait
pop
gs
and
jnp
in
nop
adc
and
sbb
adcb
push
lock
in
xchg
lds
add
inc
inc
clc
addb
das
add
or
dec
dec
push
and
mov
testb
aad
push
iret
push
cmc
mov
test
dec
xor
xor
sbb
lahf
pop
pusha
inc
popf
and
hlt
and
push
mov
xchg
rorl
xchg
xor
mov
add
aad
cmp
mov
and
scas
xor
repz
arpl
jecxz,pt
push
cmp
fchs
mov
out
xchg
lds
bound
mov
dec
ficomps
push
jle
rcrb
cmp
call
stos
add
or
enter
push
loop
xchg
test
mov
hlt
aad
rorb
outsl
iret
push
jge
add
sub
in
xchg
xchg
and
mov
inc
add
imul
and
pop
imul
mov
imul
jge
pop
sbb
outsl
push
pop
loop
mov
xchg
jb
jg
jbe
dec
xor
ret
outsl
mov
lahf
and
push
jecxz
dec
ljmp
jns
sarb
fnstenv
sbb
iret
pop
into
jnp,pn
pop
clc
adc
push
inc
push
iret
inc
idivl
stos
test
adc
gs
rorl
push
lcall
xor
jno
testl
sbb
push
aam
and
fadds
jl
xchg
hlt
jle
hlt
aaa
test
sub
dec
cmp
and
pop
popl
aam
xchg
sbb
stc
xchg
jae
adc
lods
or
sub
cld
pop
push
stos
dec
jbe
dec
rolb
mov
or
sub
iret
mov
mov
push
add
js
or
les
lds
out
addl
addl
jne
dec
int3
jecxz
cmpsl
inc
repnz
js
cwtl
cltd
mov
jno
mov
push
sbb
xor
mov
mov
push
xor
push
rcrl
mov
dec
dec
lcall
xor
pop
or
add
addl
jns
pop
pop
mov
cmp
xor
cmp
sub
popa
loop
or
scas
arpl
and
mov
xlat
mov
test
mov
and
cmp
inc
xchg
stc
aad
cmpsl
lds
jne
pop
out
in
popf
mov
jmp
and
push
inc
xor
push
mov
lret
lods
jae
and
adc
xlat
enter
in
adc
addl
fcmove
insl
adc
repz
pop
insb
jp
jb
lds
sbb
mov
inc
mov
cmp
scas
cmpl
fnstenv
shl
arpl
mov
ror
mov
imul
dec
pop
test
push
sbb
cmpsb
mov
popf
inc
aad
adc
inc
in
roll
mov
lods
dec
mov
in
insb
cmpsl
inc
or
sbb
push
cmp
mov
mov
dec
add
jge
inc
push
in
adc
xchg
jnp
stos
push
movsl
addr16
outsl
and
or
popf
sub
jmp
nop
or
aam
test
xchg
sbb
pop
cmc
fldl
and
pop
test
iret
mov
mov
mov
dec
mov
fdivrl
ret
pushf
rclb
adc
pop
aaa
push
adc
push
popa
mov
jno
fs
xchg
popf
dec
or
dec
nop
out
out
sub
pop
push
stc
insl
fiadds
aam
or
div
cmp
shlb
cmc
subb
jp
xchg
dec
pushf
mov
movsb
test
mov
aas
mov
or
jle
xor
iret
push
lods
dec
dec
sbb
or
pop
lds
push
push
jne
adc
cmpsl
je
lock
call
mov
cmp
xchg
inc
xchg
data16
mov
out
mov
sbb
jle
clc
inc
or
stos
insl
mov
js
je
test
xor
test
inc
sti
push
lea
adc
mov
dec
mov
dec
mov
and
xchg
push
mov
xor
cltd
mov
or
clc
sbb
test
cld
jno
sbb
in
xchg
jo
and
ret
lock
int
adc
push
dec
fidivrs
sbb
mov
cmpl
lret
dec
jl
xchg
dec
roll
mov
cs
and
mov
jb
das
add
iret
add
cld
int
mov
dec
pop
mov
add
mov
or
add
sbb
mov
xchg
or
sti
fwait
push
jnp
mov
adc
mov
jo
push
dec
pop
sahf
jle
xor
fcoms
out
cwtl
ret
mov
mov
mov
iret
jbe
jb
pop
lret
rclb
pop
outsl
add
or
aad
and
adc
adc
jmp
stos
int
mov
xor
js
movsl
lock
test
push
stos
jge
pop
pop
hlt
mov
aad
imul
jecxz
jne
sub
fwait
adcb
mov
gs
das
xchg
xchg
out
loope
xchg
loope
cli
sahf
das
data16
or
fcomps
idivl
lcall
push
popa
mov
sarb
leave
imul
mov
out
daa
in
mov
fnstsw
lcall
ret
pop
scas
cmpsl
lret
lret
lahf
fsubl
adc
and
jae
mov
cmp
inc
jne
adc
sbb
pop
aad
fistps
push
cwtl
fldenv
sub
imul
fcomp
sti
or
test
pop
scas
xchg
sub
adc
stc
in
cli
lea
cmp
cmp
clc
sbb
cmpsl
xor
lock
xchg
mov
call
or
sbb
cmp
or
sub
les
add
add
xor
loopne
data16
mov
adc
ds
fwait
ss
dec
push
dec
subb
jecxz
mov
xor
lcall
mov
outsl
sti
push
adc
adc
or
das
mov
push
xchg
out
push
mov
movsb
fstl
mov
popf
mov
lcall
inc
out
rcr
mov
call
outsb
push
into
adc
daa
fstpl
ss
fildl
pop
pop
repz
jae
sub
mov
mov
cmpb
add
mov
fwait
adc
not
leave
sbb
out
push
mov
inc
cwtl
nop
lahf
enter
addr16
fistpll
cmp
aaa
xor
enter
or
dec
pop
pop
jnp
sbb
das
mov
shlb
andb
mov
and
sbb
decb
adcb
push
adc
mov
inc
call
nop
inc
sbb
bnd
or
push
jns
mov
ss
xchg
fs
loope
fs
xor
aaa
insb
pop
popa
jp
cmp
ds
push
shll
fisubs
out
ficoms
dec
jp
xchg
stos
test
mov
lret
mov
mov
push
mov
bound
leave
out
test
mov
pop
push
pop
xor
imul
jecxz
mov
or
sub
stos
adc
mov
outsl
xchg
loopne
push
cmp
add
nop
aas
xchg
test
imul
and
into
push
jp
xchg
lret
push
mov
rorb
aas
inc
aam
dec
add
leave
test
lds
xor
jp
xor
mov
pop
or
fiaddl
sbb
sub
xor
mov
sub
cs
cli
stos
shr
pop
add
jmp
xchg
gs
sbbl
dec
xchg
fstl
dec
adcl
dec
xchg
push
adc
js
out
es
fidivl
cs
pop
imul
pop
aam
and
mov
and
pusha
jle
xchg
out
adc
imulb
cmpsl
gs
xchg
sub
and
dec
imul
and
push
pushf
jo
cli
sbb
cmc
cli
add
stc
mov
lret
bound
andb
xorb
lods
push
mov
and
dec
sbb
jnp
sub
add
dec
jg
negl
arpl
or
push
rorb
mov
in
test
test
mov
repz
xor
push
mov
or
pop
or
loopne
sbb
sub
mov
dec
jecxz
lahf
pop
dec
and
add
jg
dec
inc
add
mov
ja
nop
das
xor
sub
sub
rorb
sub
or
cmovns
push
pmaxub
mov
mov
xchg
addr16
cmp
and
scas
in
sahf
jle
lret
pop
test
aaa
inc
es
jbe
mulb
adc
push
pop
outsl
jp
aad
mov
push
cmpsl
mov
dec
push
cmp
push
mov
popf
jns
pop
xchg
ret
jnp
add
fwait
inc
and
lret
loop
sbb
add
cmp
stc
jno
mov
aam
jae
pushf
incb
add
movb
ret
xor
mov
adc
push
cld
inc
sbb
or
jmp
mov
sbb
mov
enter
xchg
inc
cmp
movsl
lcall
popa
push
test
jge
cli
pop
push
popl
outsl
int3
ja
push
gs
push
daa
cmpsl
mov
jae
add
ret
mov
sbb
xchg
andb
sbb
or
sbb
fcompl
mov
icebp
xlat
data16
outsl
add
xchg
int3
ja
testl
sub
rclb
arpl
shll
cltd
hlt
mov
pop
fdivrs
xlat
inc
xchg
and
pop
out
decb
andb
in
loope
mov
mov
mov
mov
xchg
out
mov
cs
fisubl
push
add
mov
xchg
adc
or
pop
or
xor
jbe
call
xchg
cmp
xlat
or
lea
mov
insl
mov
ret
mov
xlat
dec
sub
movsl
nop
mov
pop
xor
pop
sbb
repnz
popa
fiaddl
mov
sub
xchg
fwait
xor
mov
fldcw
js
popf
stos
jge
ds
stos
fstpl
sarl
sbb
inc
fs
push
jno
xor
xchg
and
test
shlb
jnp
or
cmp
aam
lods
fldl
lock
inc
sub
sub
pusha
inc
push
xchg
jmp
xor
jg
addr16
jl
icebp
out
push
add
and
mov
rorb
bound
cs
cmp
arpl
mov
push
mov
sbb
add
xchg
pop
xchg
cmpsb
data16
hlt
and
lret
sbb
stc
sti
test
cli
sbb
aas
out
adc
xchg
cld
fcomps
cmp
outsl
in
push
ds
pop
test
cmp
aaa
inc
lea
dec
insl
add
add
dec
cmp
test
and
sbb
stos
jae
test
repz
dec
test
mov
scas
and
aad
adc
mov
movsb
out
mov
sbb
fxch
cmpsb
push
pop
xchg
cld
jae
dec
int3
sbb
jnp
popf
mov
loop
or
mov
lcall
sbb
mov
mov
pop
popf
xor
adc
cmp
or
test
mov
rcl
push
inc
cmp
mov
cmp
jmp
pop
clc
lea
leave
dec
mov
outsl
xchg
xlat
cmpsb
icebp
rorl
test
xchg
lock
fwait
push
cmp
xchg
movsb
mov
roll
and
cmp
and
dec
push
das
les
and
sahf
push
mov
xor
mov
mov
lods
inc
and
push
jge
cmp
imul
add
stos
sbb
inc
sbb
jns
jge
cmp
dec
fisttpll
inc
cmpsl
pop
pop
cmp
sarl
pop
mov
cmp
sbb
dec
dec
add
inc
cmp
mov
dec
mov
fld
mov
movsl
dec
js
xorl
or
icebp
out
xor
fnstsw
iret
jge
mov
adcb
push
std
fimuls
dec
bound
jle
or
and
inc
test
jle
xchg
iret
daa
cs
hlt
push
dec
pop
lods
sti
xchg
in
mov
sahf
sbb
xor
jp
adc
int
sbb
push
cmp
cmp
sbb
and
sahf
mul
xchg
repnz
mov
push
mov
enter
push
jbe
sbb
rclb
or
in
nop
cmp
push
push
imul
push
jae
mov
mov
or
ljmp
addr16
xchg
or
xor
cmp
fnsave
outsb
cs
cs
xor
test
push
cmpsl
adc
daa
into
cmp
xor
sbb
lret
mov
xor
xchg
push
enter
pushf
ljmp
and
jle
shlb
je
ret
cs
inc
je
cld
or
xchg
xor
or
jg
popl
arpl
push
popa
rolb
dec
jnp
adc
or
jo
add
xchg
xchg
sub
into
push
fnstenv
test
and
std
sub
xlat
xadd
mov
lds
jne
test
call
cmp
mov
xor
stc
mov
aas
jecxz
stc
lret
nop
out
aad
mov
loope
popf
adc
sub
rcll
jge
dec
dec
lods
dec
jmp
stos
mov
int3
cmp
xchg
sub
loopne
cwtl
test
insb
mov
mov
mov
mov
lahf
fldlg2
mov
cwtl
inc
sbb
push
lahf
pop
sbbl
push
dec
pop
nop
clc
xchg
js
lock
aad
jle
shl
mov
inc
xchg
neg
ss
xor
mov
jmp
jl
outsl
ss
jno
imul
arpl
sbbb
sub
in
jecxz
insl
adc
scas
push
fldenv
inc
stos
mov
sarb
jp
pushf
bound
add
sub
sub
xchg
test
neg
lea
xchg
jns
jno
mov
out
nop
adc
mov
mov
or
inc
fcompp
mov
addr16
insl
js
xchg
sub
test
mull
adc
add
shlb
adc
mov
sub
hlt
jl
sbb
stos
push
inc
mov
cli
ds
rolb
js
stos
inc
inc
and
add
xchg
shll
loop
les
js
or
loopne
inc
inc
popa
inc
cmpsl
push
or
mov
nop
sahf
in
jo
mov
cmpsb
push
sbb
mov
pop
in
sbb
ja
add
mov
jb
sub
sbb
in
mov
loop
pop
pop
push
push
arpl
pmaxsw
add
jno
in
arpl
xlat
push
sbb
int3
sahf
ss
icebp
or
push
ret
lahf
cld
mov
rcll
jl
lahf
dec
or
outsl
pop
movsb
call
cmc
dec
pop
mov
jo
mov
lret
mov
es
xor
icebp
ret
push
jmp
xchg
dec
cmp
ja
dec
sbb
aaa
dec
pop
push
fnstenv
or
inc
xchg
fsubs
jae
push
pop
outsb
jl
lret
or
mov
inc
data16
jg
loop
jge
mov
adcl
mov
jbe
inc
outsl
loopne
cwtl
xor
mov
daa
adc
push
cld
jns
iret
repz
push
jg
in
push
mov
xchg
mov
adc
sahf
mov
sbb
dec
in
adc
xchg
fmull
mov
daa
sbb
cmp
push
in
in
in
add
sub
jp,pn
and
lea
jmp
adc
popf
pop
fldcw
std
pop
test
loope
or
cmpsb
push
sahf
jb
sub
test
mov
in
xor
push
mov
xchg
mov
shlb
sbb
pop
mov
icebp
pop
jecxz
fnstcw
sbb
push
xor
pusha
ret
out
lds
aaa
and
mov
add
ret
fstp
push
arpl
ret
cmp
xchg
jmp
mov
int3
xchg
push
push
inc
push
add
test
sbb
lods
cld
and
jle
popf
pop
fwait
sahf
cltd
orl
or
jno
mov
fcomi
in
jae
xchg
movsb
push
mov
fcomps
dec
sub
sar
inc
or
pop
mov
nop
adc
add
mov
lock
and
filds
ret
ss
fcompl
jl
decl
sti
push
in
push
ret
into
jne
mov
test
fimull
pop
push
mov
aad
ficomps
out
mov
sub
or
sub
pop
nop
bound
or
sbb
cli
int3
pop
aam
in
out
adc
fstpl
jo
adc
pop
jne
mov
aad
sti
jnp
jmp
loop
rcrb
decb
enter
add
std
sbb
xchg
inc
mov
loope
sub
ret
jns
fwait
aas
sub
stos
mov
mov
inc
fwait
mov
in
pop
xor
pop
push
in
fs
cmp
pushf
pop
aam
and
jnp
pop
insl
stc
push
in
push
icebp
adc
movsb
call
outsl
mov
cwtl
lds
xor
pop
sbb
fmul
sub
sarl
xor
and
jo
lret
dec
scas
insl
sub
insl
add
add
cmp
cmp
ja
mov
mov
inc
movsl
std
out
icebp
jo
cwtl
int
add
jmp
sub
es
bound
pop
je
jmp
mov
pop
rol
mov
subl
inc
jae
sbb
jnp
int3
cli
test
insb
pop
mov
mov
insl
and
outsb
sub
pop
adcb
and
sub
cmc
cmpsl
xlat
jnp
out
pop
mov
dec
xchg
pushf
xlat
outsl
lock
popa
dec
in
or
xor
mov
leave
mov
lea
or
imul
inc
mov
pop
aam
dec
inc
hlt
in
dec
jae
aas
nop
sbb
xor
cltd
inc
scas
int
cld
dec
jns
jg
popf
pop
adc
or
adc
in
mov
sbb
enter
push
arpl
lahf
aam
xchg
and
scas
jno
mov
out
push
lods
sbb
adc
sub
push
xorl
jp
mov
aad
gs
push
ret
repnz
movsl
adc
mov
xor
adc
cmp
mov
cmpsb
shll
jno
sub
mov
icebp
dec
or
mov
xchg
pop
cmp
imul
cltd
stc
adc
mov
and
cli
pushl
and
lock
push
test
lds
test
outsb
bound
push
pop
js
inc
cltd
adc
scas
sub
shr
xor
jmp
outsl
sbb
inc
jge
out
or
mov
lds
lds
cli
cmp
andb
testl
cwtl
out
jmp
pop
add
ffree
pushf
and
cwtl
lcall
inc
pop
fstp
and
xor
popa
xchg
shl
mov
mov
mov
dec
pop
dec
push
and
push
lret
jmp
orl
ret
mov
outsb
jmp
add
or
adcb
inc
xlat
repnz
or
call
mov
xchg
jnp
addr16
lahf
rcll
popf
aam
fldln2
xor
sub
stc
icebp
sub
push
inc
aad
xor
push
lea
cmp
xchg
xor
add
xor
pop
and
lret
sbb
push
aaa
xchg
or
jae
notl
mov
add
jmp
ss
jno
adc
daa
leave
adc
inc
push
push
test
push
fidivl
imul
inc
inc
jno
popf
xor
aas
inc
xor
mov
xor
and
adc
cmpb
push
xor
iret
push
adc
dec
in
shll
and
and
js
insl
dec
pop
xor
fimull
dec
mov
mov
mov
aaa
xchg
jb
lea
push
decl
notl
adc
addr16
test
push
or
xor
lret
mov
push
cmc
mov
test
aad
inc
mov
popf
or
and
adc
movsl
imul
sti
jl
mov
lcall
add
ret
mov
adc
sub
xor
sbb
aaa
push
push
or
int
fidivs
out
push
mov
lahf
lcall
push
mov
jle
sub
or
push
and
cwtl
jmp
push
dec
pop
mov
jmp
cmpb
mov
mov
mov
pushf
add
addr16
imul
pop
xchg
inc
je
mov
xchg
stc
mov
mov
lcall
inc
xor
fs
fstl
pop
dec
inc
and
out
mov
inc
out
pop
lods
adc
inc
push
dec
inc
jmp
mov
mov
leave
cmpsl
inc
mov
ss
test
xor
xor
ss
imul
hlt
mov
inc
push
xchg
hlt
cmpl
pop
dec
push
sub
mov
inc
gs
shrl
xor
cmc
insl
adcl
cltd
sbb
adc
movb
pop
push
movsb
push
dec
sbb
int
lcall
dec
pcmpeqw
addr16
ss
adc
cld
and
clc
adc
mov
dec
lods
fmuls
add
dec
push
add
jmp
mov
ret
xchg
or
mov
cltd
add
or
xor
int
inc
xchg
lods
stos
push
lea
nop
packssdw
loop
mov
xor
out
repnz
ffreep
shrl
push
cmp
data16
inc
mov
push
aaa
push
push
xor
jecxz
mov
sbb
lea
inc
imul
stos
mov
xchg
xor
jb
and
and
outsl
sub
clc
cmp
adcb
imulb
sahf
cmpb
add
ret
adc
jo
int3
aam
adc
pop
or
inc
pop
mov
inc
ja
cwtl
rcll
out
mov
mov
test
sbb
add
lret
icebp
aaa
scas
xchg
cld
dec
or
sbb
cmc
mov
mov
pop
std
jmp
lock
jno
rol
int
test
stos
push
pop
bound
inc
mov
adc
icebp
inc
imul
test
jp
stos
out
mov
inc
shrb
jne
sahf
mov
dec
pop
jnp
mov
cld
repnz
mov
loopne
add
dec
dec
mov
jbe
and
loopne
jae
mov
adc
rorb
and
ja
push
fwait
mov
stos
and
hlt
imul
mov
push
xchg
jl
sbb
outsb
cmp
xchg
addl
imul
jg
push
enter
fisubs
mov
inc
sbb
jg
mov
ficompl
inc
stc
mov
cmpsl
aaa
xchg
es
jle
mov
inc
scas
jg
cltd
outsl
mov
jg
push
movsl
fstpl
aas
lret
btl
push
test
dec
mov
xchg
int
ficomps
scas
push
stos
mov
cs
das
push
and
loopne
and
cmp
add
push
popf
daa
fisubrl
inc
adc
and
loope
mov
xchg
iret
sub
pop
stos
jae
jae
add
xor
jo
fsubrl
ds
and
popa
data16
cmp
xchg
sti
lea
cli
jns
sub
pop
outsl
xchg
add
je
loop
add
je
lods
jg
push
or
jns
call
push
cmpsl
in
cli
pop
mov
movsb
shrl
in
jecxz
es
cmp
fwait
sarb
lcall
jnp
scas
lcall
jno
mov
mov
repnz
xor
cmp
lea
cld
jbe
fwait
out
arpl
mov
popa
lods
jl
or
xor
dec
or
jo
shll
cmp
sahf
stos
xchg
mov
mov
je
fucomi
dec
sub
sub
add
dec
pop
or
inc
sub
jge
or
pop
hlt
sub
fnstsw
int3
push
and
in
push
das
adc
stc
pop
dec
xchg
inc
mov
ljmp
xor
mov
xchg
inc
pop
pop
push
add
test
mov
jmp
rolb
leave
mov
aad
outsl
or
aas
mov
xlat
in
inc
and
pop
cmp
xlat
mov
clc
fcoms
sahf
lea
add
pop
push
push
fisubrs
cld
push
cli
mov
jb
add
adc
out
jb
jae
vmovsldup
shl
nop
and
jecxz
xchg
mov
aas
stos
fucomip
add
cld
dec
data16
stc
stos
mov
and
mov
cld
mov
xchg
stos
shll
aad
arpl
cmp
out
dec
in
gs
lods
xor
mov
xchg
xor
sbb
mov
aam
loop
or
fisubrl
stos
cmp
sbb
pop
inc
cmc
lret
xchg
and
push
fsubp
jl
xlat
and
dec
and
and
cmpsb
lods
das
out
pusha
outsb
mov
xchg
push
outsb
inc
cli
mov
lahf
int3
xchg
jo
xchg
and
cmc
insb
rol
lcall
lcall
insl
push
xchg
rcrb
sar
pop
movsl
jl
inc
jle
test
pop
push
mov
lahf
dec
mulb
data16
mov
lods
jbe,pt
inc
fdiv
mov
fsts
push
sbb
jmp
ss
insl
jl
sub
cmp
fimuls
dec
adc
test
loopne
enter
pop
xor
mov
cmp
ret
inc
mov
push
xlat
xchg
jle
out
sar
mov
je
bound
or
sub
aaa
jmp
xor
gs
dec
addr16
sub
shrl
lret
add
add
pop
mov
imul
out
mov
and
inc
pop
jle
push
sahf
mov
addr16
lret
xor
push
stos
aas
push
rcrl
and
and
sbb
fbld
cmp
xor
pop
cmpsb
sahf
stos
sti
aaa
aas
push
xor
pop
mov
jae
std
ds
ja
movsl
into
pop
mov
out
mov
addr16
xor
mov
sub
adc
fidivrs
ja
lock
jmp
int3
iret
jno
int3
cmpsl
jle
fwait
mov
fcom
pop
clc
and
in
fisttpll
mov
jae
shlb
mov
adc
addr16
add
and
movsl
mov
jbe
test
fiadds
xchg
fmul
nop
sti
incb
idivb
sbb
sbb
pop
rcll
mov
cmp
jge
dec
mov
je
xchg
mov
arpl
sbb
mov
xchg
hlt
lahf
mov
call
insb
pusha
aad
mov
je
mov
xchg
sbb
pushl
xchg
mov
xchg
inc
test
add
in
or
sarb
data16
ljmp
cli
lcall
lods
mov
or
jbe
push
push
stc
cmp
pusha
ljmp
stos
push
jmp
cmp
fists
popa
jo
dec
ror
in
jae
rorb
mov
and
montmul
cmpsb
inc
shll
lds
sub
sub
ljmp
sbb
mov
pop
dec
in
sub
push
xor
testb
pop
sarl
outsl
aam
cwtl
adc
lcall
xchg
das
fdivrs
enter
add
and
jns
adc
mov
pop
pushf
ljmp
out
in
sub
pop
gs
ret
inc
push
inc
lcall
repnz
stc
mov
pop
mov
and
pusha
xor
mov
mov
or
or
rcrb
lea
or
cwtl
mov
out
cmp
mov
popf
fadd
inc
popf
cmpsl
cmp
xor
outsb
inc
pop
int3
and
xchg
xchg
js
jne
repnz
stos
mov
fcmovnu
xor
loopne
sub
jmp
cli
movhps
mov
jnp
sub
mov
sub
mov
xchg
add
in
movsb
pusha
pop
in
dec
mov
ret
fildll
insb
in
stos
subl
outsl
and
sub
jmp
add
lods
cld
inc
sub
adc
add
mov
xchg
or
jae
adc
mov
and
or
test
and
fs
mov
jae
add
out
sub
fstl
jle
repnz
jne
in
imul
cmp
in
mov
out
jb
in
loopne
add
nop
jnp
lods
ljmp
mov
aaa
jbe
daa
movsb
out
sbbl
ja
pop
out
sbb
inc
out
pop
sbbb
test
or
popf
pop
leave
test
movsb
ss
cmp
mov
dec
mov
pop
push
fnstcw
popa
lock
inc
push
dec
ret
cmp
jmp
or
dec
hlt
frstor
mov
mov
dec
les
or
mov
mov
pushf
adc
cmp
dec
lock
aad
jbe
cmc
cmc
sbb
jp
adc
jae
adc
subl
iret
jns
xchg
fnstsw
push
fcmove
ficomps
sbb
popf
nop
add
jmp
mov
xchg
es
loope
cltd
push
js
jg
and
push
scas
mov
loope
stos
mov
andb
cmpsl
in
xor
add
and
push
scas
lds
and
loop
fiaddl
push
push
pop
mov
lock
add
rcll
inc
xor
cmpsb
imul
mov
shrl
mov
xor
xor
jg
lret
and
dec
xor
dec
add
mov
jmp
mov
sub
jge
mov
imul
aaa
test
mov
js
imulb
arpl
xlat
inc
mov
dec
hlt
push
jmp
push
sar
pop
shlb
lock
stc
pusha
sub
testl
sti
xchg
mov
jp
cld
data16
cmp
leave
into
jge
inc
cltd
xchg
stos
push
cmp
jmp
dec
dec
addb
push
loope
int
add
xchg
and
sub
xor
push
xchg
fistps
subl
mov
jnp
leave
scas
movsl
lock
add
lret
inc
int
xchg
int3
mov
cmpsb
xlat
pop
jns
adc
xchg
lods
inc
mov
adc
mov
sub
mov
mov
push
mov
pop
jbe
or
inc
imul
jg
ret
push
mov
mov
adc
loopne
pusha
inc
mov
mov
scas
dec
test
ja
insb
dec
lds
cmpsb
mov
sub
out
mov
inc
mov
popf
xchg
fistl
pop
push
add
repnz
xchg
sub
mov
sti
pusha
shll
orb
lods
sub
push
dec
in
inc
mov
jns
ss
stos
test
dec
incb
xor
jl
insb
add
pop
or
out
inc
loop
xorb
and
sbbb
inc
push
loope
outsb
test
and
mov
out
fcompl
lahf
cltd
push
jp
loope
push
pop
andl
or
sub
xchg
shll
pop
xchg
fdivr
mov
jl
or
mov
ljmp
xor
lahf
add
into
cltd
divl
mov
stc
jo
testl
inc
icebp
data16
fistpll
testb
mov
insb
imul
lret
in
pop
or
rorl
fisttpll
add
push
xchg
push
aaa
push
mov
int3
push
pusha
add
sub
push
pusha
push
fs
pop
jp
gs
jae
test
test
dec
or
pushf
mov
out
jno
or
jno
decl
and
sub
cltd
loop
pusha
jmp
xchg
push
aaa
bound
mov
adc
aam
or
cld
push
cli
sub
in
push
repz
jecxz
dec
adc
aad
cmp
mov
or
lcall
mov
mov
pop
popf
sub
iret
mov
fwait
push
push
sbb
xchg
sbb
sbbl
fidivrl
popa
out
cmc
test
pop
xor
test
loop
or
mov
ja
inc
jge
adc
roll
lret
dec
int3
mov
jns
movsb
cld
in
into
sarl
test
pop
shrb
loope
pop
test
movsb
inc
in
xor
lods
jno
fucom
add
cmpsl
fildll
jge
or
movsl
adc
sub
mov
sbb
pop
sbb
inc
sbb
into
iret
push
popf
and
clc
inc
vpcmpgtw
mov
out
push
xchg
imul
sti
push
rolb
insl
mov
fidivrl
and
or
inc
lds
inc
fstpt
insl
cwtl
xchg
jp
pop
jmp
mov
fwait
aas
xchg
cmc
or
xor
cmp
add
and
sub
std
and
mov
fbstp
adc
pop
inc
jp
xchg
rcl
ficompl
adc
mov
jge
inc
sbb
sbb
out
ss
lcall
adc
in
daa
shr
adc
push
mov
add
cmp
dec
repnz
cmp
adc
mov
sub
jae
adc
mov
xor
out
jl
pusha
orl
cmp
cmp
cmp
insb
push
mov
mov
push
pop
xchg
xor
sbb
mov
mov
test
add
jl
inc
cmp
cwtl
pop
mov
out
push
xor
lahf
add
dec
das
test
lock
pop
loopne
loop
cmc
lock
sub
bswap
mov
repz
iret
arpl
cmpl
mov
jo
dec
and
cmp
push
sbb
decb
mov
push
push
sbb
mov
adc
push
pop
cmpsb
jbe
gs
or
addb
out
imul
psubb
and
inc
or
mov
fs
mov
pop
jo
popa
std
sahf
pop
movsb
add
add
pushf
movsb
mov
mov
inc
fisubs
arpl
inc
mov
inc
cmp
pop
xor
out
cli
dec
cmp
jge
in
int3
adc
rcrb
fldenv
mov
adcl
sub
cmp
shrl
and
adc
fdivp
rcrl
ja
cld
fdivr
lcall
repnz
pop
xor
aam
xchg
repnz
mov
movb
sbb
push
fisubl
inc
jo
mov
decl
ret
jl
mov
sub
jno
and
sub
into
mov
sub
dec
rcl
movsl
lds
or
sbb
cmpsl
js
add
loope
or
and
and
mov
mov
lea
push
fldl
rcll
xchg
add
push
pop
into
int
xlat
cmpl
sbb
mov
mov
cmp
xchg
push
xchg
fcomps
mov
loopne
int
mov
in
out
xor
and
jnp
cltd
inc
mov
inc
jecxz
inc
push
in
mov
fiaddl
xor
mul
adc
jge
mov
ficomps
pop
sti
je
mov
sbb
js
sbb
out
mov
or
test
sbb
dec
inc
add
mov
adc
adc
popf
xor
sub
lret
outsb
sub
iret
or
push
adc
pop
lock
dec
mov
pusha
pop
add
mov
int
push
aaa
or
sbb
jle
mov
addr16
mov
mov
push
jmp
rorb
fwait
int
popa
and
mov
int3
imul
cmpsl
sbb
or
movsb
cmp
mov
je
mov
sbb
dec
xor
pop
mull
sbb
cmp
cmp
daa
fdivl
push
or
inc
lret
aaa
outsb
push
stos
and
xorb
ficoml
dec
call
fdivs
std
xlat
ret
mov
mov
loope
loop
fnstenv
cs
sub
jne
insl
inc
addr16
add
xor
jne
loope
dec
aam
push
lock
mov
inc
pushl
movsl
adc
xor
mov
push
sbb
jb
mov
cmpsl
push
cmp
lods
je
lret
pop
mov
mov
or
nop
cwtl
sub
inc
mov
cs
rol
shr
xor
popf
push
fcompl
inc
adc
sbb
mov
add
ret
jmp
outsb
sub
movsl
cmp
pop
test
lret
repnz
xchg
imul
cmp
repnz
jbe
mov
clc
clc
je
mov
xor
ljmp
mov
cmpsb
pop
adc
mov
and
ja
mov
scas
or
fisubrs
out
lods
imul
ret
push
and
mov
xchg
sub
and
sub
inc
mov
cmpsl
jnp
xchg
je
adc
dec
hlt
jmp
hlt
push
es
mov
add
leave
aam
ret
adc
jns
and
sub
lret
and
mov
lahf
sarb
cmc
shll
push
out
inc
gs
cmp
mov
fcmovb
xor
push
sbb
adc
adc
inc
or
xlat
jno
and
dec
out
nopl
loopne
aas
mov
mov
bsr
pop
pop
hlt
adc
and
jg
sub
fwait
push
mov
dec
arpl
arpl
lods
sub
jg
xchg
or
xor
pop
or
xlat
leave
cmpb
cmp
mov
aam
aaa
popf
ja
outsl
xchg
shrb
cmovg
out
pop
popa
pop
stc
push
mov
mov
lcall
push
lret
bound
jl
mov
mov
jae
mov
xchg
sub
lea
inc
jne
pusha
mov
imul
mov
pop
sbb
dec
lock
into
and
push
in
lcall
adc
add
lret
or
cmp
outsb
pushl
pop
xor
ret
jbe
add
je
mov
push
lds
jge
cmp
test
jmp
lret
outsb
shr
push
dec
or
adc
out
cmpsb
or
rcrb
adc
pop
stos
cmpsb
sbb
xchg
or
push
ja
sub
fildll
rcll
jns
pop
xchg
jp
out
movsl
add
pop
mov
popa
lods
sub
mov
test
mov
lret
sub
inc
scas
jb
pop
pusha
lret
dec
adc
out
mov
cmp
cmp
xchg
and
mov
inc
pushf
hlt
pop
mov
mov
sub
iret
inc
xchg
ss
jecxz
xchg
sbb
mov
test
dec
dec
mov
iret
mov
sbb
leave
shll
jge
and
fnstsw
cmpl
fwait
and
mov
xchg
xor
in
cli
subl
es
xchg
mov
in
inc
arpl
dec
fldcw
lods
scas
and
push
pushf
mov
sub
scas
jge
jmp
stos
push
clc
std
jecxz
add
pop
mov
jg
scas
mov
dec
mov
sti
pop
inc
cmp
xor
ja
int3
adc
rolb
cmp
mov
sub
fisttpll
jne
or
jae
aaa
mov
pop
adc
pop
shlb
and
leave
jbe
adc
xchg
xchg
fistpl
pop
insb
push
pop
adc
xchg
mov
push
push
inc
inc
mov
xchg
aas
push
jmp
xchg
shl
fcomps
pop
inc
xchg
xchg
sti
mov
fbstp
ds
jle
ja
xor
sbb
xchg
dec
movsb
fidivrl
fistpl
cmpsb
imulb
loope
lods
frstor
and
gs
outsb
in
cmp
sti
mov
scas
and
mov
jge
test
inc
stc
add
inc
jecxz
ss
xor
pop
enter
mov
shrb
movsb
ldmxcsr
movsb
and
sub
sbb
aas
jno
fcmovb
cmp
lret
cltd
ja
out
cmpsl
sub
loopne
sbb
xchg
aam
into
mov
out
xchg
movsb
rcll
xor
out
stc
and
test
cs
mov
xor
mov
and
sub
add
psubd
hlt
test
xor
fs
in
push
cmp
sbb
push
out
movsl
jmp
inc
mov
out
lcall
adc
sub
mov
or
jge
in
mov
add
sub
scas
xorb
jb
jmp
sbb
mov
jg
inc
jb
adc
fnstenv
dec
je
fcomp
lret
hlt
and
std
mov
cld
icebp
insl
fs
xchg
pop
xchg
mov
inc
cmp
movsb
cmpsl
sub
xor
sub
or
and
inc
icebp
cmpsb
and
arpl
insb
hlt
lds
pop
pop
adc
in
fistpl
fcmovnb
arpl
test
aas
and
fninit
push
and
or
adc
jno
jmp
call
int
sub
daa
xor
adcb
mov
dec
adc
xlat
pusha
into
jl
dec
jbe
ja
xorb
cmpsl
dec
popa
jg
add
fs
inc
jecxz
push
mov
mov
mov
cmp
fbstp
out
sbb
cmc
mov
les
mov
call
xor
pop
inc
mov
xor
xchg
test
pop
jecxz
push
fmull
xchg
or
insb
inc
add
sub
nop
sub
jbe
mov
xor
mov
scas
icebp
pop
or
mov
mov
pop
lret
mov
jns
push
jecxz
mov
mov
leave
xor
sbb
or
jnp
repz
jo
cs
sahf
movb
rclb
mov
xor
lds
pop
add
out
cmp
rcl
in
loope
out
xorb
test
jno
inc
out
add
xor
stos
es
xchg
pop
mov
jg
mov
std
lods
pop
xor
int
mov
cmp
or
jecxz
xor
adc
dec
xchg
lret
mov
sbb
sub
lea
cmc
scas
lds
xor
xchg
movsb
and
cwtl
dec
inc
jmp
xor
enter
sahf
repz
jae
pop
mov
or
daa
xchg
mov
data16
sbb
mov
je
push
clc
out
lds
push
popf
loop
lahf
mov
dec
mov
xor
mov
sub
lods
fwait
aad
mov
add
leave
mov
pop
cs
pop
dec
xor
stc
xor
push
cmp
add
xor
ret
or
push
mov
or
in
or
jnp
push
sbb
sbb
in
movsb
les
jnp
sbb
mov
lahf
fsubr
loopne
or
outsl
test
adc
cltd
adc
mov
dec
adc
inc
jb
ret
xorb
lahf
jmp
mov
dec
gs
push
fstpt
into
imul
js
inc
out
mov
out
jne
sub
push
dec
push
shl
leave
push
mov
test
jno
xor
int
stc
fcmovne
cmpb
dec
mov
push
popa
jno
push
mov
mov
cld
outsl
ljmp
jmp
insl
mov
mov
mov
daa
sub
shlb
test
xchg
mov
mov
and
cmp
adc
out
cmp
push
icebp
sub
add
or
pushf
jno
mov
pop
pop
test
fs
call
lcall
mov
pop
aaa
cmc
xor
dec
and
and
into
xor
dec
xlat
and
fiadds
imul
loope
jg
pop
popa
mov
mov
dec
xchg
into
push
ret
movsb
pop
sub
insb
xchg
repnz
rcrb
pop
push
sub
jo
decl
daa
push
or
lea
and
lods
lahf
push
cmp
ret
popf
adc
xchg
scas
cld
mov
fldenv
xor
push
sbb
ret
mov
in
push
add
addr16
cwtl
or
insb
stos
mov
xor
test
mov
lret
and
push
or
lret
xchg
jno
pop
mov
scas
inc
xchg
xor
clc
out
lds
pusha
mov
inc
out
inc
adcb
pop
hlt
lea
cmp
int3
add
jmp
ja
jb
add
pop
adc
and
adc
xor
into
dec
mov
jmp
clc
hlt
test
repz
rcl
ljmp
add
sbb
sbb
xorb
xchg
je
push
data16
loop
jns
ret
sub
sub
xor
bound
std
cmp
ret
lds
divb
xor
pop
inc
in
aam
adc
xchg
mov
xor
jbe
test
lcall
pop
test
fwait
dec
das
int
dec
out
mov
movsb
incb
pop
sbb
jb
mov
mov
loopne
xor
inc
dec
mov
sbb
adc
outsb
in
pop
cld
out
mov
orb
pop
aaa
insl
cmpsl
jb
sbb
xor
sbbb
xchg
mov
aad
rol
and
mov
sub
xchg
outsb
int3
push
mull
ret
movsl
xchg
and
call
shll
inc
ljmp
jecxz
xchg
mov
xchg
sbb
stos
in
mov
or
xor
out
enter
test
xchg
iret
mov
lock
fimuls
and
or
inc
out
adc
xchg
ret
repnz
subb
rolb
pop
aam
add
xor
sub
or
lret
mov
roll
dec
mov
sbb
cltd
or
out
push
jo
dec
test
lock
pop
jp
roll
pop
filds
leave
arpl
and
insl
sarb
jae
mov
shlb
add
shlb
pop
add
pop
shll
xor
hlt
fld
fsubrs
cli
cmp
xchg
xchg
aaa
push
fcmovbe
pop
rorb
xchg
sti
pop
sbb
jle
inc
cmp
fs
inc
mov
sbb
sbb
lahf
jnp
rcll
dec
ret
jbe
bound
outsb
jg
cld
in
hlt
iret
add
xor
add
and
jnp,pt
cmp
loop
mov
daa
out
insl
test
add
rol
ljmp
notb
ds
jmp
dec
lods
adc
sub
inc
add
adc
imulb
andb
hlt
mov
cli
mov
imul
pop
jp
outsb
les
addr16
int3
sub
xlat
icebp
popl
adc
hlt
lret
mov
nop
inc
out
mov
fcoms
test
jl
ds
int3
push
adc
test
sbb
pop
shr
in
sbb
inc
push
mov
xlat
aam
addb
pop
sbb
cmp
fdivrs
push
cmp
mov
out
add
call
cmp
in
or
shll
roll
jge
cli
sahf
add
fcmovbe
cld
shrl
mov
cmp
mov
adc
lods
jmp
dec
shrl
jbe
push
mov
mov
inc
push
imul
jp
je
sub
jb
hlt
test
and
std
sbb
imul
add
xor
in
xor
movsl
filds
cs
dec
negb
pop
push
pop
fwait
cmp
or
mov
inc
sti
ljmp
push
shrl
sbb
lahf
loope
fistl
xlat
and
jmp
jg
cld
std
sbb
movsb
xor
push
jl
rcl
mov
xchg
pop
adcl
out
dec
or
mov
mov
fadd
lods
inc
mov
mov
test
jle
mov
push
scas
out
inc
jne
or
aam
ja
push
xor
pop
dec
fists
outsb
add
into
in
xacquire
loope,pn
test
or
js
fwait
pop
pop
xor
repz
push
lds
ds
push
cli
pop
test
mov
jb
xor
pushf
push
sbb
clc
loop
jge
imulb
mov
and
out
shlb
push
fs
cmpsb
mov
outsb
sbb
inc
xor
les
lahf
pop
ja
fs
outsb
jne
fldl
sbb
aad
stc
in
push
dec
pop
inc
and
int3
xchg
sahf
push
pushf
xchg
arpl
mov
push
dec
stos
cltd
lcall
xabort
jge
aaa
mov
mov
fcoml
or
and
sahf
lret
cmp
int
pop
les
mov
daa
mov
shl
repnz
lret
es
jbe
xor
loopne
icebp
push
sbb
jp
cwtl
mov
sti
jl
or
jecxz
xchg
jmp
mov
sub
xor
and
repnz
ss
gs
push
stc
xchg
movsb
mov
andb
mov
pop
fsubr
sti
and
outsb
cmp
aam
mov
mov
dec
inc
xchg
call
xchg
dec
add
icebp
dec
pop
dec
test
iret
xchg
outsb
dec
lcall
rcrb
int
nop
les
sub
sbb
pop
mov
push
cmp
xchg
and
push
sbbb
pop
jge
int3
xchg
push
pusha
pop
in
sahf
mov
in
push
xor
movsl
out
mov
shl
lahf
or
test
loope
fwait
push
xchg
jg
sub
jmp
gs
xor
stos
mov
xchg
test
cmp
mov
push
repz
lds
sbbb
add
sub
and
test
js
jle
sub
jmp
in
sbb
sahf
jnp
scas
in
mov
cmc
inc
and
out
lods
jo
mov
insb
inc
adc
ss
sub
cmpsl
notb
sahf
scas
jmp
inc
adc
enter
subl
lds
sbb
roll
sub
mov
rcrb
test
lods
and
add
ja
push
push
mov
lock
sub
or
shlb
sbb
scas
adc
hlt
enter
inc
xchg
dec
xchg
xchg
xor
push
addr16
sti
rcll
js
movsl
outsb
jns
jns
mov
ja
sahf
pop
sbb
sub
mov
insb
or
xlat
mov
mov
aaa
lea
fs
ljmp
sub
jnp
iret
adc
mov
add
mov
fcompl
dec
ja
pop
pop
adc
mov
sub
xchg
mov
mov
test
push
fsubrs
mov
ss
mov
arpl
jo
pushf
cmp
arpl
lahf
inc
stos
daa
pushf
repz
testb
mov
push
hlt
mov
add
add
xor
lret
adc
dec
pop
mov
orb
mov
lret
daa
push
jge
xor
or
std
jno
add
cmp
sub
xor
pop
push
lods
insl
push
mov
and
lea
xor
and
jle
sub
and
cmp
mov
aas
and
xchg
ret
cwtl
sub
add
pop
jo
jmp
mov
and
testl
pop
jmp
pop
sbb
repnz
mov
stc
xor
mov
push
inc
pop
fs
repz
pop
inc
dec
jae
mov
imul
nop
or
push
mov
sub
inc
cmp
mov
push
xchg
jbe
aas
shr
mov
jnp
dec
popa
enter
and
inc
lret
push
stos
stos
pop
mov
and
bound
orl
pushf
inc
push
cli
sbb
ds
scas
nop
dec
xchg
mov
pop
lods
mov
mov
push
lret
lock
fcmovnbe
jge
insl
sbb
sbb
pop
xlat
xor
iret
bound
mov
and
inc
outsl
or
inc
inc
mov
int3
inc
out
jle
shlb
imul
push
mov
mov
out
fcmovbe
cmc
jl
test
mov
pop
icebp
mov
out
aaa
push
pop
adc
mov
mov
loopne
push
jnp
mov
xlat
inc
mov
push
pop
dec
shlb
mov
inc
and
pmaddwd
sbbb
or
enter
lea
push
pop
addr16
cli
out
lea
jns
lret
int3
test
pop
ljmp
mov
mov
add
ds
mov
pop
cmpsl
pusha
das
lds
into
pop
hlt
jge
and
push
jns
sub
xchg
pop
cwtl
inc
lahf
xlat
test
mov
pop
mov
rcll
fwait
adc
pop
mov
sbb
cmp
mov
in
adc
pop
dec
std
jnp
insl
movsb
jmp
jle
es
icebp
pusha
sub
mov
mov
mov
mov
lcall
or
cwtl
dec
lock
out
stc
lods
hlt
mov
jne
aad
xchg
incl
jg
xor
cmpsb
xchg
or
xchg
push
add
and
into
jae
rolb
inc
addl
out
adc
pushf
out
pop
fisubl
jne
mov
call
add
xchg
cmpsl
jg
test
jle
scas
xor
push
dec
dec
mov
ret
call
xor
pop
movsb
pop
cltd
dec
mov
cmpsb
jge
scas
fwait
cli
dec
adc
and
enter
leave
movsb
mov
dec
dec
loope
mov
rorb
push
xor
and
pop
ss
aaa
add
lods
push
xchg
loope
iret
jnp
int
add
mov
pushf
in
leave
enter
inc
ja
mov
jp
fisubrs
add
and
dec
xor
mov
cltd
in
enter
mov
movsl
sub
push
jno
iret
cmp
add
divw
testl
inc
fcompl
push
push
ja
aas
pop
es
out
inc
call
cmp
add
pusha
xlat
push
mov
sbb
pop
daa
add
and
aaa
dec
psubq
sbb
aad
lods
jbe
dec
int3
sbb
test
in
xor
xchg
int
aad
rol
ss
inc
repnz
dec
xchg
fdivs
adc
popa
push
cmpsl
lret
popa
jnp
push
jne
loopne
jne
insl
cltd
out
mov
out
pusha
dec
xor
cmp
mov
pop
ljmpw
loope
jge
xor
into
sbb
into
or
cmp
stos
sub
push
arpl
mov
mov
jb
add
popf
arpl
dec
leave
push
dec
xor
sub
mov
xor
cltd
js
stos
mov
add
cmp
and
mov
ljmp
cltd
dec
lahf
pop
gs
ljmp
push
les
xor
pop
ds
dec
outsl
adc
and
repnz
push
shll
inc
xlat
out
add
jne
subb
mov
sub
js
and
es
pop
hlt
xchg
stc
data16
addr16
test
clc
aaa
mov
pop
arpl
xor
adc
cmp
or
cmpl
insl
xor
clc
dec
push
cmpsl
and
fbstp
jnp
loope
scas
mov
cmp
mov
lods
pushf
stos
push
pop
mov
pop
aas
ja
loop
push
negl
daa
mov
xor
sub
inc
jp
fldenv
jns
cs
sti
movsb
movsl
subb
jle
lidtl
mov
movsb
addr16
shl
insb
dec
cmp
jg
nop
imul
push
mull
push
fdivrp
cmpl
mov
or
int
sti
cli
push
arpl
std
sti
mov
jb
sarb
pop
aaa
xor
call
lock
dec
cmc
mov
inc
push
add
ret
inc
setns
sbb
push
int3
push
pop
inc
mov
add
jmp
fisttps
add
ds
ret
hlt
inc
test
add
jge
jge
mov
sub
dec
mov
stos
das
or
cwtl
pop
push
dec
mov
cmc
test
mov
pop
mov
or
int3
pop
mov
pop
aad
dec
movsb
out
jl
dec
xchg
or
fs
and
arpl
cmp
rcr
or
push
mov
lret
inc
dec
or
inc
gs
int
mov
in
out
push
lahf
or
inc
and
inc
and
rcll
mov
pushf
test
sbb
ja
call
cmp
cli
sub
sub
sub
lods
xchg
int3
jg
inc
dec
aam
inc
lock
faddl
mov
daa
outsb
inc
xchg
or
das
dec
jb
add
cmp
lea
cmpsl
dec
adc
xchg
into
es
push
pop
sarl
hlt
dec
adcb
call
stos
xchg
mov
loope
ss
arpl
out
out
dec
addr16
lret
push
sbb
sti
fwait
inc
movsb
lods
stc
cmp
fcompl
cmpsb
das
in
cmp
and
or
imul
fstp
inc
push
dec
pop
imul
loopne
shrb
sbb
in
sub
popa
dec
mov
push
outsl
scas
sti
and
mov
jg,pt
aad
xor
rcl
mov
mov
jae
repnz
insl
lea
hlt
roll
mov
pushf
adc
jge
ds
js
lods
shll
aad
xchg
movsb
aad
je
fnstenv
inc
xchg
mov
sub
xchg
dec
jne
push
push
push
fidivrl
out
lock
cmp
fnstenv
lea
push
sub
xlat
mov
int3
or
inc
popf
cmp
push
loope,pn
mov
out
imul
xorl
sbb
xchg
shll
addr16
gs
or
push
or
push
lret
adc
cmp
sar
or
adcb
cmpl
push
push
fildll
btr
mov
sub
xchg
shl
fsubrs
jns
or
push
jg
pop
inc
pop
xor
jb
and
jae
dec
fwait
sub
jmp
push
fisubrs
mov
inc
sbb
aas
cmp
dec
lea
pop
add
lahf
popf
and
fnsave
push
mov
or
iret
mov
xchg
cmpsl
push
rolb
je
adc
ror
add
out
cmpsb
mul
xchg
xor
sbb
cmpsb
pop
int
or
je
rcrb
pop
sbb
in
mov
sub
cmp
or
pop
mov
roll
and
adc
push
sbb
sahf
xor
and
mov
popa
jno
push
shrb
adcb
and
sahf
cli
inc
js
jle
add
outsl
stos
rolb
stos
jnp
add
popa
jnp
sub
and
sahf
out
into
mov
and
cmp
sbb
lock
push
out
insl
pop
std
dec
inc
ret
jl
mov
out
cli
mov
ds
adc
and
fsubrs
lret
pushf
mov
stc
cmpsl
cli
cmpsl
jo
xchg
cltd
mov
cmc
imul
jle
enter
or
mov
or
inc
inc
repz
jl
ficompl
push
push
mov
inc
loope
mov
sbb
out
repnz
ret
adc
ss
stos
add
cmpsb
call
mov
xchg
test
jmp
pop
jp
test
nop
push
adc
xchg
lods
sbb
sbb
sbb
outsb
add
jne
or
jne
fwait
and
outsl
testb
xlat
int
shrb
out
mov
loopne
xor
addl
adc
or
mov
add
xlat
xor
ss
mov
mov
inc
sahf
ds
xchg
aad
loop
mov
ja
fldenv
cmp
cwtl
or
sbb
iret
pop
mov
push
scas
and
dec
sub
cmp
sbb
adc
cli
jmp
je
pop
testb
in
inc
adc
fisubl
stc
mov
fcoms
fwait
rol
loopne
adc
pop
lret
push
ja
arpl
mov
lds
push
cmp
sub
jl
xchg
add
cmc
dec
pushf
cli
rcll
jne
cmc
jne
es
mov
ret
imul
mov
adc
jp
sti
popf
nop
int3
jbe
shrb
movsl
mov
test
popf
mov
das
fstp
jmp
and
fbstp
mov
pop
mov
mov
scas
in
pop
sahf
fadd
sarl
outsb
mov
clc
out
out
xchg
xor
dec
pusha
divl
mov
jmp
das
rorl
xor
and
cmpsl
sahf
fcomip
push
xchg
stos
int3
adc
jnp
out
inc
out
sub
call
push
xchg
mov
inc
popl
jecxz
das
jae
push
mov
test
sbb
movsl
rorb
lock
pop
fs
push
push
xchg
sti
jle
mov
test
jg
mov
add
jb
dec
arpl
cli
jecxz
cmp
mov
pushf
add
xchg
stos
cltd
ljmp
adc
movl
cmp
jno
jge
in
or
jae
loope
xor
mov
sbb
subb
mov
lahf
sbb
int3
pop
cmp
dec
jmp
push
imulb
scas
in
idivb
sbb
ror
test
mov
push
jbe
adc
sbb
pusha
mov
pop
imul
mov
jp
mov
aaa
nop
fcoml
dec
and
mov
mov
cmp
xchg
fildll
jno
in
dec
loopne
sbb
sbbl
mov
dec
inc
sub
push
sbb
cs
jns
pop
outsb
pop
jno
xchg
dec
push
pop
stc
ja
xor
gs
sbbb
cmc
cmp
data16
fcompl
insb
jb
inc
xor
and
aas
cmp
cmpb
or
popf
ja
inc
mov
mov
and
sbb
daa
nop
sbb
es
cwtl
pop
test
add
ret
fwait
sar
jb
sub
int
push
xor
jo
std
enter
pushf
popa
test
dec
push
sbb
jle
mov
pop
mov
jecxz
mov
adc
test
dec
cmpsl
push
cld
or
xchg
ja
aas
xlat
adc
jmp
xor
lea
in
pop
lcall
rcrl
inc
jge
mov
shr
xlat
stos
sbb
notb
add
inc
mov
jae
mov
sub
repnz
jge
mov
mov
dec
shll
in
xor
fcoms
mov
sbb
pop
lds
dec
and
lds
mov
in
push
add
jnp
and
or
xchg
adcl
or
push
xchg
mov
sub
inc
stos
stos
sbb
adcb
push
xor
jp
inc
jo
ret
mov
popf
sub
sbb
lods
arpl
in
add
imul
iret
push
js
rorb
stos
dec
call
into
mov
push
push
test
cmp
rol
mov
jecxz
lods
aaa
loopne
sub
cmpsl
arpl
lahf
adc
shlb
xor
xchg
cmc
dec
lcall
mov
adc
stos
fsubr
jle
inc
mov
add
dec
pop
mov
fcomps
mov
add
adc
outsl
cmpsb
sub
adc
adc
loopne
and
lret
idivb
rcrl
xchg
cld
sbb
stc
cltd
jge
add
shrb
fchs
cli
push
jno
lahf
push
and
add
es
jo
cmp
fisttps
in
or
push
xor
sti
jecxz
inc
and
pop
iret
adc
test
inc
mov
daa
xchg
jno
lock
push
cmp
inc
lods
hlt
insl
jnp
push
fsubs
ret
hlt
scas
mov
js
jl
mov
or
pop
push
jmp
mov
subb
ret
into
pop
lahf
insl
push
mov
mov
cmp
dec
mov
ret
pusha
test
dec
xchg
pop
cmpb
push
inc
inc
shlb
es
stos
mov
add
in
aas
andb
or
loop
fidivrl
cmp
outsb
mov
nop
adc
xor
sbb
fdivp
xchg
shrb
cmp
test
mov
lret
gs
fcomi
and
int3
in
push
push
lea
jmp
pushf
jnp
iret
jb
pusha
jg
rolb
fbstp
pop
cmpsl
adc
fsubl
imul
adc
jne
loope
add
pop
push
repz
adc
mov
mov
movsl
pushf
mov
gs
insl
push
mov
jbe
scas
cltd
and
daa
dec
push
pushf
pop
or
and
bound
gs
push
xor
push
adcl
gs
scas
pop
jecxz
imul
das
mov
pop
or
sbb
add
push
xchg
add
dec
leave
jne
outsb
mov
imul
xchg
movups
sbb
call
loope
int3
add
jae
mov
push
arpl
dec
xor
rorb
sbb
jae
outsl
push
add
push
or
mov
pop
leave
imul
push
xlat
mov
imul
push
and
idiv
rorl
mov
lods
cs
cmc
add
std
xor
sbb
or
jecxz
lret
lahf
mov
fcmovne
jle
xor
inc
cmpsb
hlt
xorl
rcl
sub
orl
shlb
jl
or
mov
add
iret
aas
sub
inc
xchg
dec
xor
or
xchg
jge
arpl
outsb
xor
lods
subl
rcrb
cli
inc
mov
gs
fcoms
adc
in
in
or
push
nop
jl
nop
pop
std
mov
adc
push
add
mov
ret
mov
mov
es
popf
outsb
mov
pop
arpl
mov
packssdw
pop
mov
stos
je
xlat
into
psllq
or
xchg
cmpsl
ror
inc
push
push
xchg
fwait
sbb
out
mov
adc
sarl
sti
pop
in
mov
outsb
mov
fcompl
add
out
out
adc
mov
test
mov
shll
xchg
sub
sub
addr16
jmp
popf
mov
stos
xchg
stos
dec
lods
pop
sbb
rol
or
das
mov
sbb
push
xchg
das
jle
stc
xchg
xor
or
pusha
cwtl
inc
xadd
add
imul
and
ds
jne
mov
sbb
imul
mov
fdivrs
test
les
xor
mov
cmp
xchg
jns
sbb
sub
jns
adc
data16
inc
mov
test
and
xor
jb
ret
shr
daa
mov
ret
mov
sbb
pop
subb
xchg
push
les
ss
dec
daa
dec
pop
dec
inc
subb
adc
push
mov
ficompl
sbb
clc
scas
push
cli
pop
test
mov
pop
lock
imul
test
ret
xor
xchg
fs
aad
addb
in
push
sahf
sbb
adc
pusha
xchg
in
jp
xchg
inc
mov
mov
je
pop
inc
notb
mov
into
pop
out
inc
aam
or
add
sub
insl
mov
pop
aam
ljmp
test
fidivl
lock
xchg
adc
xchg
add
pop
jns
cmp
sahf
jns,pn
push
dec
cli
jae
add
in
or
repnz
push
pop
inc
es
repnz
add
or
pop
lds
and
sbb
inc
jge
das
push
inc
and
mov
sbb
add
mov
loope
pushf
lret
icebp
popf
test
xchg
bound
cmp
push
mov
shl
mov
add
or
stc
imul
push
cli
cmpb
bound
sti
pop
icebp
fidivrs
cmc
nop
pop
and
dec
push
outsb
push
jnp
mov
mov
aaa
das
cmp
ret
rcr
mov
jnp
cld
notb
notb
mov
add
pop
or
jge
mov
pushf
les
sbb
popa
imul
sbb
pushf
cmpsb
mov
mov
sbb
push
cs
test
dec
pop
mov
adc
mov
stos
sub
test
cli
pop
pop
pop
pop
inc
cmp
mov
mov
jl
loop
pop
cmp
repnz
xchg
push
cmpsl
pop
sbb
push
mov
jo
cwtd
sub
inc
cs
add
push
jecxz
das
ret
pop
or
push
out
pop
and
dec
push
ja
push
inc
pop
mov
pop
xchg
rcr
sub
cmp
movsb
mov
pop
cmp
or
add
out
pop
cwtl
jo
inc
ror
mov
mov
scas
call
negl
or
test
xchg
int3
leave
imul
xor
test
fwait
cmp
mov
mov
sbb
sbb
and
leave
pop
les
xchg
pop
add
mov
xor
xchg
adc
icebp
mov
add
dec
adc
loopne
lods
rcll
xor
dec
mov
idivb
pop
jmp
xorl
push
jbe
mov
cmpsb
lcall
mov
cmp
mov
pop
dec
and
mov
jb
gs
xor
ljmp
test
add
add
lret
out
push
xchg
jg
dec
mov
lods
call
icebp
dec
nop
jge
xor
lods
dec
xchg
insb
xor
cmp
push
adc
add
nop
insb
dec
lea
mov
out
mov
out
jo
pop
mov
testl
jge
add
jns
sbb
inc
ret
out
xorl
es
adc
fildll
mov
ja
xor
cmp
pushf
xchg
push
adc
mov
ds
pop
popf
add
lea
aad
leave
mov
shr
sub
xlat
test
scas
inc
inc
mov
call
xchg
cli
popa
nop
push
cltd
mov
std
inc
jbe
lret
ss
xor
dec
dec
int
xchg
sbb
popf
mov
in
icebp
scas
clc
jmp
push
xchg
and
scas
lds
mov
cmpsb
xchg
loope
sub
dec
pop
test
int3
fidivl
lock
xor
xchg
ds
adc
jp
movsb
in
jmp
aas
adc
pop
mull
outsb
addr16
insb
fwait
test
sbb
push
mov
sub
cmp
xchg
aam
add
cld
jo
std
pushf
iret
aaa
push
push
repnz
mov
jge
lea
mov
cmp
xor
mov
sti
lahf
lock
sub
mov
mov
inc
push
or
mov
dec
out
and
popf
xor
rorl
mov
push
call
pop
in
adc
sbb
stos
jle
popa
jb
stos
xor
data16
rcr
ret
xchg
and
sti
add
jl
sub
test
scas
psadbw
jmp
mov
fwait
cmp
add
adc
lcall
xchg
mov
out
movsb
mov
rclb
dec
shll
lcall
mov
cmc
jo
xchg
mov
xor
pop
add
jno
in
inc
cli
cmc
push
push
jmp
push
mov
adc
mov
pop
adc
sub
pop
cmpsl
out
xchg
xor
stos
movsb
int
fists
pop
xlat
add
push
outsl
popf
rclb
pop
ja
adc
hlt
jp
es
jecxz
sub
pusha
cmp
ficoms
ret
imul
add
fidivl
xchg
out
test
push
out
or
jmp
jg
mov
repnz
lods
and
daa
jmp
mov
mov
ret
jo
and
mov
sahf
push
mov
aad
repz
mov
data16
sbb
mov
aas
jns
lahf
imul
mov
jne
push
out
mov
rolb
roll
cmpl
lods
inc
push
dec
mov
jmp
popa
xor
xchg
add
aaa
fcmove
dec
xlat
dec
jb
rcl
iret
mov
sub
jge
mov
mov
jl
sti
arpl
gs
xchg
stos
outsl
mov
loop
jne
or
addr16
or
sbb
inc
movsl
loope
push
shlb
cli
mov
fldl
xchg
pop
dec
fistl
ret
stc
push
lea
lods
cld
lret
pop
test
test
hlt
cmp
mov
fnstsw
mov
adc
js
jnp
mov
lret
push
dec
les
sub
popa
loope
xchg
imulb
push
incl
notb
mov
xchg
ret
test
js
sbb
stc
pop
jns
push
adc
mov
ljmp
addb
xlat
jmp
mov
xor
ljmp
xor
and
add
arpl
mov
imul
cmpsl
xchg
negb
fs
jle
dec
gs
cmp
gs
mov
xchg
adc
pop
sub
out
xchg
data16
stc
das
xor
ljmp
lret
ljmp
aad
loope
jmp
insb
icebp
mov
xchg
jmp
cmpsb
aad
sbb
rorb
pop
loop
pop
fsubs
cmp
add
or
mov
pop
or
and
cwtl
and
sti
rorb
and
sbb
outsb
rorl
add
in
push
sub
and
inc
inc
push
push
pop
movsl
lcall
inc
jecxz
int
inc
mov
adc
lret
mov
pushf
jns
mov
xlat
pop
cmp
xchg
mov
cmp
sbb
sub
imul
inc
cltd
push
fchs
negl
mov
cmc
add
cmpsl
dec
pop
mov
xlat
out
mov
and
lret
xchg
pop
addr16
dec
mov
jp
sti
sbb
jnp
pop
mov
pop
lds
xchg
lcall
dec
scas
mov
ja
adc
and
cmpsb
mov
aam
xchg
xlat
mov
xor
and
pmaxsw
jb
cmc
push
cltd
jbe
insl
jae
inc
daa
rorl
adc
adc
call
shll
int3
pop
mov
xchg
add
mov
fwait
inc
and
and
hlt
jg
inc
jecxz
in
aaa
pop
add
pop
push
xchg
daa
mov
xchg
dec
icebp
jbe
sti
push
push
dec
jae
fisttps
mov
push
arpl
pushf
jle,pn
loop
mov
addr16
addr16
xchg
test
arpl
pop
and
data16
mov
or
or
dec
jns
jg
in
lock
sub
jp
stc
movsl
cmpsl
push
lds
cmp
gs
sub
xchg
and
and
push
nop
ficompl
sbb
stos
mov
jecxz
jmp
ret
les
push
xchg
lods
orl
imul
gs
cli
cmp
ret
cmpsb
addl
or
idivl
add
sbb
mov
sti
call
cli
adc
out
jecxz
insb
push
mov
mov
mov
enterw
push
push
sbb
sbb
leave
mov
inc
mov
fldt
mov
mov
cmp
add
jnp
xchg
pop
mov
mov
jb
ret
push
inc
sbb
xchg
insl
pop
enter
xchg
jp
or
rcrb
and
inc
loopne
mov
insl
mov
cmp
mov
inc
cmp
cmp
and
push
mov
nop
xchg
aam
out
nop
sbb
mov
xchg
in
jmp
pushf
faddp
xchg
sbb
mov
adc
mov
jle
stos
pop
xchg
pushf
out
ret
xchg
xor
xchg
or
xchg
jo
pop
cli
and
or
push
jg
mov
clc
jecxz
push
or
push
outsl
jle
lds
xchg
mov
sub
or
das
faddl
xchg
in
cmp
pop
outsl
fisttpll
adc
pop
aas
aas
std
xor
bound
hlt
jb
jp
jge
xchg
loope
in
mov
xchg
pop
sub
or
lcall
test
call
mov
add
push
dec
mov
clc
in
out
push
sub
cmp
scas
push
and
inc
imulb
out
aad
push
aam
add
pusha
ljmp
jae,pt
jne
cld
push
cwtl
pop
cmp
push
add
cld
mov
shrl
or
addr16
popf
loopne
aaa
jmp
mov
std
ds
sbb
jae
stos
imul
pop
inc
jl
outsl
daa
xlat
lret
inc
shl
imul
dec
mov
mov
pop
imul
or
out
pop
fsubrl
xchg
fstpt
fisubrs
out
mov
inc
cmpsb
pop
cwtl
jns
repz
loope,pt
sahf
jne
sbb
out
push
lock
xchg
pop
je
lods
das
or
inc
push
les
cmpsl
dec
cmp
xchg
aam
jle
dec
adc
mov
sbb
push
cmp
fldenv
inc
cs
xor
pusha
jp
int
lahf
pushf
adc
pop
dec
mov
mov
cmp
cmp
shlb
mov
pop
add
mov
mov
sub
das
mov
xchg
stos
mov
test
xchg
jp
inc
in
jne
cwtl
out
push
sbb
lods
xor
mov
es
test
sub
add
push
aam
stc
scas
fwait
cmp
pop
fsincos
push
ja
sub
ljmp
in
sahf
xor
aaa
pop
aas
popf
xchg
clc
repz
cmpsl
add
inc
sarb
pop
inc
mov
mov
divl
pop
cmpsl
sbb
and
inc
jle
dec
dec
jnp
call
inc
sub
pop
pusha
adcl
jne
fwait
jbe
loope
xor
pop
scas
hlt
je
xlat
stos
mov
jbe
lods
pop
cmpsl
xor
cld
aaa
jne
enter
repnz
xchg
jl
jmp
pop
jecxz
mov
cmp
test
mov
shrl
ss
push
pop
sti
jns
cwtl
out
push
movsb
xchg
xchg
lods
jo
inc
orb
enter
lds
sub
push
out
popa
push
adc
sar
xchg
adc
outsl
jnp
adc
pop
sub
cmp
icebp
lods
inc
cli
fistl
lods
das
sbb
and
and
imul
push
pop
in
out
in
cmp
xor
gs
stos
cltd
xchg
xchg
mov
cmc
xor
mov
outsl
jns
nop
pop
aaa
inc
xchg
rol
dec
je
push
or
shl
xor
sub
inc
mov
dec
popa
pop
enter
pushf
shll
aam
jge
inc
xchg
mov
mov
rcrl
add
pop
push
pop
jne
mov
mov
jge
fs
fldlg2
pusha
cmc
popa
xchg
or
out
mov
aad
and
jecxz
cmc
adc
pop
adcl
js
xchg
pusha
insb
push
out
mov
stc
mov
cltd
mov
outsl
dec
push
test
in
scas
sub
pop
mov
and
sbb
fcompl
push
xor
inc
sub
leave
mov
jg
xchg
dec
jae
jmp
loope
mov
cmp
push
int
lock
stos
xchg
jbe
and
pusha
push
popa
xchg
pushl
fidivs
add
jmp
mov
into
xchg
stc
cmp
out
je
stos
jge
cmp
aam
jae
lcall
mov
jnp
adc
inc
dec
insl
push
mov
adc
pop
mov
fwait
sub
or
jle
push
sbb
mov
call
int
aaa
fisttpl
pop
xchg
mov
shlb
mov
subl
sahf
stc
imul
adc
pop
std
fstl
repz
hlt
inc
ljmp
push
dec
clc
inc
mov
sbb
das
sub
mov
in
add
or
je
repnz
cmc
shrl
lahf
shrl
xchg
jmp
dec
xchg
jbe
sbb
jge
sub
mov
cmp
mov
dec
inc
lods
rorb
cmpsl
in
dec
nop
adc
lcall
cmc
ds
hlt
aaa
icebp
and
sub
mov
stc
outsb
jecxz
dec
dec
adc
sub
bnd
hlt
daa
or
dec
loop
iret
cmp
loopne
add
jg
xchg
push
test
adc
sub
jb
imul
cmpxchg
dec
aas
outsl
or
pop
pop
mov
dec
inc
lock
leave
mov
add
mov
cmp
inc
add
dec
cmp
push
add
andb
cmp
add
insb
push
rcll
sbb
xor
notl
js
jl
xor
shrl
sub
mov
enter
adcb
fucom
push
jmp
jno
shrb
in
xchg
stos
negb
sbb
sarl
push
sbb
imul
mov
dec
adc
xor
and
mov
rcrl
sarb
xchg
jno
jp
pop
jg
xor
and
sbb
leave
jl
ficoms
push
clc
ljmp
lea
leave
push
cli
idivb
mov
cmp
test
loopne
inc
imull
mov
xor
inc
jmp
or
and
sbb
fisubrl
push
xchg
jge
mov
pushf
dec
dec
test
adc
mov
push
cwtl
leave
push
cli
scas
xor
ficomps
xor
repnz
mov
push
bound
scas
push
in
int3
adc
popf
jp
or
rcrl
xor
mov
jae
aam
sub
inc
aas
mov
repnz
mov
js
dec
loop
shrl
xor
xorb
imul
scas
xchg
nop
test
andl
test
xchg
sub
mov
subb
jae
mov
mov
fstpl
cmp
dec
sub
lret
xchg
mov
jbe
and
xor
mov
xchg
in
outsl
out
ret
lret
jne
pop
mov
les
js
xchg
adc
inc
js
mov
test
clc
in
add
sbb
jne
inc
mov
popa
jp
fwait
popf
push
addr16
out
sub
mov
xor
mov
sbb
stos
fcomp
xor
aaa
xchg
cmp
jmp
mov
mov
adc
jne
leave
mov
jge
out
xlat
bound
repnz
mov
roll
mov
cltd
and
hlt
aad
js
xor
fistps
cmp
xor
fists
fimull
push
mov
lahf
pop
mov
subb
cs
shrb
pop
mov
add
mov
roll
leave
loop
das
dec
test
stos
or
or
loope
dec
fbstp
stc
push
cmp
or
aas
dec
jg
push
jb
popf
aad
mov
sub
mov
sbb
lret
inc
mov
xchg
push
lret
pop
sbb
push
mov
push
xchg
cmc
mov
fwait
xlat
rolb
or
jno
repnz
sti
frstor
or
jne
push
out
xor
inc
cmpl
rcl
fsubr
xlat
inc
cltd
ja
sbb
or
mov
xchg
pop
rolb
gs
jge
cmc
jp
mov
pop
outsl
mov
push
inc
aam
fwait
jle
or
mov
ret
sahf
stc
mov
push
push
mov
pop
mov
mov
cmpsl
xor
mov
les
ja
lea
jbe
jmp
inc
sbb
and
es
int3
jg
stc
jp
stos
dec
inc
repnz
hlt
cltd
push
fstp
adc
mov
arpl
add
fadds
mov
outsb
dec
pop
out
sarb
fs
into
or
and
inc
inc
fcmovnbe
inc
lahf
pop
ret
cmp
sbb
fcmovnb
xchg
cmp
cmp
pop
cmp
mov
ret
push
shl
sbb
xchg
add
pusha
xchg
data16
mov
lods
data16
out
add
stc
jle
stos
daa
inc
xor
xlat
loopne
add
mov
fdivrs
push
outsb
in
adc
or
loope
dec
and
sub
pushf
ljmp
in
cmc
lds
sub
mov
add
pop
pop
jno
out
rcrb
loope
aas
daa
dec
sub
and
fnsave
ss
lret
in
pop
leave
xchg
dec
popa
jb
pop
int
or
lret
enter
cmpsb
xorl
xchg
frstor
gs
out
enter
pop
fs
inc
test
xor
testb
mov
jge
cmpsl
insb
jg
push
das
adc
adc
lods
mov
add
icebp
aam
xchg
mov
roll
mov
call
xor
loopne
repnz
das
movsl
int3
scas
add
xchg
cmp
adc
outsl
gs
ret
pop
lds
cli
xchg
dec
gs
push
icebp
jmp
and
add
sub
push
ret
loopne
xor
insb
jns
xchg
add
lcall
add
xchg
and
enter
mov
aaa
lods
sbb
fyl2x
or
jno
je
ss
or
loope
clc
das
dec
cmp
pusha
cmp
pop
addr16
rorb
mov
mov
in
push
pop
xchg
mov
xchg
aam
sub
jge
sbb
bound
jl
lods
cmpsl
jp
cmpb
sbb
lds
out
pusha
stos
mov
test
dec
xor
jle
add
mov
rorb
pop
fdivrp
mov
push
mov
shll
adc
movsb
dec
inc
call
inc
pop
push
rorb
sahf
jg
inc
lret
sbb
in
pop
test
call
dec
faddl
sbb
xchg
pop
sti
push
cltd
dec
cmpsl
xchg
mov
adc
stos
pop
pop
inc
mov
jp
iret
int3
js
cwtl
data16
and
add
lahf
inc
jl
adc
dec
mov
or
or
dec
cmc
or
xor
rcrl
mov
jo
clc
es
popa
je
or
add
sbb
les
hlt
sbb
dec
or
dec
fsubp
movsb
test
mov
movl
ret
shll
sub
or
dec
jp
pop
loopne
out
mov
insb
push
sbb
imul
mov
push
or
cmp
xchg
adc
or
or
scas
and
pushf
into
shll
jo
std
pop
sbb
push
cmpsb
hlt
add
in
mov
push
call
and
adc
test
push
pushf
push
idivl
push
inc
sbb
pop
sbb
adc
mov
flds
movsl
stc
xchg
imul
shll
shl
ret
test
and
je
mov
xorb
xchg
jp
jnp
pusha
lock
movsl
cs
inc
xchg
cmpsl
and
fbstp
sbb
in
out
mov
lds
popf
xchg
sbb
test
jl
gs
add
inc
cwtl
icebp
push
fiadds
jmp
loope
es
dec
xchg
dec
fcmovbe
mov
pushf
movsl
dec
out
mov
mov
xor
or
inc
mov
and
mov
adc
mov
jl
pusha
repnz
repz
push
or
call
inc
ror
jnp
jg
icebp
fidivrl
mov
aaa
push
sar
icebp
addb
push
in
rcrl
ficoms
pop
jmp
jbe
jb
xchg
fwait
and
mov
sub
sahf
xchg
imul
ss
outsl
lock
adc
mov
aad
jae
adc
or
push
adc
lret
ret
fcom
cli
xchg
xor
mov
roll
pop
adc
inc
add
fxam
clc
lock
xchg
pusha
fwait
out
push
or
jae
pop
lcall
pop
into
jae
xchg
or
popa
int
imul
fldcw
jne
roll
int
repnz
in
cmp
pop
or
int
jo
lods
cmp
mov
mov
and
add
in
or
lock
dec
rcl
popf
and
jecxz
mov
sbb
dec
mov
ja
inc
jmp
ljmp
or
inc
cli
or
xor
jl
mov
adc
insb
push
dec
data16
mov
mov
inc
cmp
push
dec
scas
test
je
cltd
shl
sub
out
ret
xorb
ja
ret
push
lea
ds
mov
adc
mov
xor
push
bound
inc
outsl
clc
cld
dec
pop
jecxz
cld
ret
jne
lods
cld
scas
outsl
repz
inc
xor
orb
sbb
mov
daa
inc
enter
mov
xor
iret
movsb
cld
stos
adc
jg
mov
ret
jecxz
push
cmp
fidivs
push
pop
cli
push
aad
cmp
or
in
and
cmpb
sbbl
jecxz
bound
fs
je
lahf
outsl
shlb
loope
in
mov
fsubp
outsb
push
jge
divl
add
mov
mov
nop
imul
jnp
sahf
mov
push
sub
mov
js
push
xchg
adcl
and
arpl
or
pop
mov
aaa
nop
xorb
aam
mov
insb
jp
repnz
arpl
mov
or
push
push
pop
dec
xor
ja
and
gs
mov
sub
test
sub
jae
add
xchg
cmp
clc
xor
mov
dec
fwait
xchg
ret
adc
xchg
dec
out
lock
aas
int
es
xchg
xchg
xchg
shr
dec
sub
pop
xchg
and
xchg
adc
jb
xlat
loope
jo
xor
mov
mov
ja
pop
jb
cmp
cmpxchg
push
mov
out
outsb
pop
adcb
pop
std
icebp
mov
rorl
sbb
pop
dec
mov
nop
mov
lcall
add
jb
jns
cwtl
fistpl
pop
jle
xchg
lods
lods
mov
jne
lahf
pop
lods
movsb
sbb
dec
sub
sbb
xchg
pop
aas
fwait
inc
sub
mov
mov
daa
cmp
and
xchg
sub
sbb
cld
push
call
sub
adc
adc
adc
out
pop
mov
or
mov
dec
xchg
sub
or
int3
sbbl
xor
cmpsl
xor
pop
pop
xor
in
pop
add
mov
xchg
or
int
sub
sahf
out
repz
or
ss
and
sbb
add
xchg
in
inc
adc
std
mov
push
and
xchg
mov
add
cmp
mov
fsubs
inc
jb
nop
data16
pop
dec
test
bnd
call
imul
cltd
jl
mov
icebp
fucom
daa
adc
or
inc
mov
shrl
popl
bound
test
loop
shlb
js
push
sub
jbe
dec
in
rcll
mov
pop
xor
ret
mov
xor
incb
mov
cli
fimull
movsl
icebp
sub
adc
mov
movsl
dec
pop
and
aaa
sub
insb
addl
and
ss
mov
add
mov
insl
popf
mov
test
jb
aaa
pop
daa
and
and
iret
in
xchg
int
xor
cltd
jnp
imul
daa
arpl
pop
mov
cmp
push
adcl
data16
mov
push
sbb
mov
rorb
in
stos
roll
mov
xlat
stos
movsl
ret
aas
pushf
xchg
lds
dec
movsb
aaa
std
pop
jnp
jb
xor
mov
jb
xor
push
dec
adc
mov
pop
scas
mov
push
add
or
jp
out
aad
jecxz
in
mov
stc
pusha
xlat
push
int
sub
mov
decb
sti
xor
sbb
mov
mov
and
scas
repnz
jo
fidivs
add
xor
push
or
pop
pop
imul
xor
in
and
lods
push
mov
dec
push
mov
aam
mov
lds
sbb
xchg
xchg
movsb
add
mov
push
fldl
or
sbb
jnp
and
les
imulb
jnp
out
iret
push
enter
test
add
stos
lods
cmpsl
addr16
and
clc
mov
gs
bound
mov
jge
fucomp
sbb
mov
and
inc
movsl
xor
pop
or
xchg
nop
popaw
xchg
test
jns
arpl
add
sbb
sub
mov
rcll
push
dec
rdmsr
pop
gs
out
dec
mov
and
cmp
arpl
js
mov
cmp
inc
clc
adc
in
or
pusha
xchg
fdivrs
jae
mov
push
ret
popa
jno
cmp
adc
cs
leave
repz
mov
add
pusha
mov
inc
je
sub
notb
cwtl
scas
fsubp
ja
jmp
inc
fmull
into
roll
sahf
dec
adc
dec
adc
repz
lock
pop
cmp
xor
xchg
mov
lret
lcall
mov
xor
scas
mov
hlt
jne
cmp
pop
adc
fdiv
pop
insb
mov
mov
popf
dec
xchg
dec
ret
mov
cmc
stos
imulb
or
inc
inc
scas
popf
cmc
xchg
mov
dec
lods
out
lahf
inc
cmp
outsl
testl
pop
xchg
imul
adc
push
aam
fcoms
mov
cmp
cmp
es
ss
mov
lcall
mov
and
xorl
push
nop
cwtl
add
pop
pop
sub
cmc
mov
push
or
push
nop
mov
mov
xor
jo
push
and
jmp
cmc
ds
pusha
movsb
mov
imul
or
sub
icebp
adc
add
jecxz
shlb
sub
sub
in
insb
das
in
in
sbb
pop
jmp
mov
sbb
cmp
lahf
cmp
mov
mov
rclb
mov
pop
in
outsl
dec
jle
mov
adc
jo
fisubrs
out
into
data16
and
les
xchg
add
add
pop
push
scas
jnp
xchg
sbb
orb
ffree
flds
mov
stos
imul
mov
out
and
xchg
jb
and
jl
push
or
adc
movsb
and
std
xchg
roll
pusha
movsb
jg
pop
xchg
and
adc
jo
mov
push
hlt
pop
loope
cmp
daa
sub
dec
push
subb
jae
lea
pop
jbe
inc
aad
mov
enter
push
dec
popa
cmpsb
loope
mov
dec
subl
popa
fisubs
loope
xor
je
fiadds
repz
pop
dec
xor
out
mov
insb
xchg
or
adc
adc
jmp
sahf
add
jbe
mov
std
mov
jg
stc
mov
pop
das
ret
pop
out
mov
sbb
movsl
pop
mov
gs
rorb
ljmp
jge
adc
mov
enter
test
cmp
rorb
inc
clc
dec
sub
adc
dec
pop
std
subl
gs
shrl
jp
daa
ja
inc
mov
test
ja
scas
bound
lds
mov
cmp
outsb
pop
mov
mov
cmp
in
mov
jmp
iret
cmpl
rclb
push
rcrb
mov
hlt
cmpsl
and
mov
inc
out
or
jge
mov
mov
test
and
and
xchg
fnsave
pop
cmp
inc
fldt
sub
je
mov
ffree
push
testb
sub
push
and
push
mov
dec
jno
xchg
xlat
je
xor
data16
xchg
ljmp
mov
push
mov
data16
and
xchg
push
and
bound
test
lret
mov
mov
push
sbb
insb
pop
out
in
test
mov
js
sbb
in
pusha
push
jne
xchg
imulb
fists
and
pushf
lock
pop
lds
xchg
in
icebp
fs
dec
cli
pop
scas
testb
mov
mov
sub
inc
je
call
rcl
les
jecxz
dec
mov
sub
add
sub
mov
rclb
dec
or
xchg
add
popf
sbb
jl
mov
adc
mov
mov
add
mov
cltd
pushl
stos
add
mov
shrb
xlat
mov
xor
lock
sbb
cmc
shrb
xchg
addl
mov
pop
xchg
mov
shlb
add
arpl
in
sbb
or
stc
mov
repz
bswap
fmulp
adc
mov
jmp
stos
mov
xor
and
cmp
pop
or
inc
dec
sbbb
sbb
iret
mov
iret
cmp
push
shll
lods
jmp
dec
add
push
je
addr16
jnp
bnd
mov
xchg
insl
pop
insl
push
mov
or
dec
mov
call
aad
xchg
in
pusha
xchg
pop
adc
int
out
pushf
cs
push
mov
push
dec
mov
bnd
dec
mov
jmp
and
adc
ret
cld
fisubs
pop
test
jo
std
and
iret
sbb
jae
push
and
jl
cltd
mov
mov
popa
mov
addr16
cs
cli
enter
xchg
mov
pushf
lahf
mov
movsb
lahf
sarb
fdiv
jae
nop
int
add
scas
sub
dec
cwtl
sahf
es
ds
push
hlt
mov
pop
push
in
push
and
lea
push
xchg
stos
inc
aad
cmp
inc
lea
shlb
mov
xchg
mov
es
pop
es
inc
test
dec
js
clc
xor
stc
adc
cwtl
xchg
icebp
addr16
aam
pop
fnsave
shlb
xchg
lock
es
push
lcall
push
pop
mov
jle
aam
mov
push
sub
xor
jg
stos
cmpsl
add
add
dec
fs
insb
cmp
mov
and
leave
jmp
daa
mov
mov
scas
xor
ljmp
cwtl
sub
push
or
stos
push
outsb
push
jge
movsl
dec
dec
lods
mov
outsb
add
or
lcall
push
adc
js
loopne
inc
loop
dec
inc
mov
test
inc
or
aad
adc
int
mov
or
mov
in
stos
mov
test
add
movsw
addb
xor
test
dec
loopne
lret
mov
and
add
loopne
jae
mov
sub
daa
ss
add
mov
add
pop
add
pop
push
or
cld
iret
pop
fisttpll
daa
xor
xor
and
mov
fwait
dec
pop
daa
hlt
out
dec
inc
sub
dec
xchg
jo
lret
pop
pushf
and
arpl
mov
scas
mov
xlat
and
in
xor
call
mov
sahf
test
dec
filds
inc
jns
xchg
pop
in
in
rcrl
repz
mov
dec
test
add
aas
scas
enter
insb
dec
cwtl
xchg
xchg
xchg
sti
cmp
les
jg
cmpsb
mov
lcall
pop
add
push
sbb
cli
imul
lahf
cli
jg
sbb
or
mov
stos
push
dec
fbld
cmp
rcrl
jmp
jo
fidivrs
rcrb
sbb
push
and
mov
ret
jl
sub
jge
out
hlt
in
jne
fs
adc
lcall
cmp
icebp
mov
pop
loope
pop
and
je
pushf
hlt
outsl
shl
in
and
orl
xchg
adc
jecxz
mov
test
das
jnp
std
in
mov
mov
dec
adc
icebp
xorl
xor
jo
bound
fisttps
and
inc
mov
js
cmc
mov
jns
adc
mov
mov
sahf
cmc
andb
lods
mov
andb
xlat
add
sub
addr16
xchg
shr
stos
xchg
inc
jle
rolb
inc
mov
ss
icebp
out
mov
ficompl
mov
jne
xor
repnz
cltd
clc
lods
in
mov
movsb
mov
fbld
mov
or
repz
jmp
lret
mov
into
cwtl
jbe
and
mov
sahf
movsl
cmc
scas
and
clc
lea
pop
jo
pusha
pop
mov
dec
mov
mov
lea
mov
pop
lock
flds
outsl
fs
lea
popl
mov
and
ret
flds
mov
loopne
mov
xchg
imul
xchg
fwait
push
retw
adc
test
clc
in
dec
mov
cmpsl
jle
and
xlat
roll
sbb
mov
push
scas
adc
and
pop
and
mov
in
sbb
dec
lods
dec
cmc
cli
inc
jmp
and
popa
sti
push
gs
adc
lret
mov
popa
test
outsl
bound
shll
movsl
adc
ror
imul
shrl
int3
push
mov
mov
xor
xor
add
dec
mov
jmp
pop
adc
fisubl
ss
inc
xor
push
loopne
leave
jle
cmp
inc
jo
xchg
sbb
in
jne
xor
cmp
mov
int3
roll
cmpsb
xchg
mov
loopne
fldl
daa
dec
scas
sub
sti
andl
mov
popf
andps
sbbb
movsl
aam
ret
outsl
in
cltd
sub
popf
push
mov
fwait
inc
mov
test
jge
push
xchg
movsb
scas
in
daa
shll
int3
mov
dec
icebp
or
xchg
mov
and
ret
repnz
adc
mov
pop
xchg
dec
and
dec
cwtl
test
pop
jae
push
js
and
icebp
inc
dec
cmpsl
aad
insb
incl
jnp
add
push
cmc
add
pushf
and
dec
pop
add
sub
fsubl
push
popf
jge
adc
stos
xor
inc
jecxz
add
mov
dec
test
int
mov
stc
dec
xchg
sahf
pop
sbb
pop
pusha
jns
xchg
pop
adc
divl
add
lcall
push
and
or
adc
cmpl
jo
add
out
push
mov
in
cwtl
cmpsb
xchg
mov
mov
jl
pop
in
cwtl
dec
hlt
cwtl
ret
test
icebp
popf
movsl
push
sub
rcl
xor
and
mov
sbb
jle
xor
inc
pop
jle
cmpsl
call
aaa
push
inc
data16
ljmp
enter
scas
out
sub
loopne
jg
xor
pop
mov
data16
and
and
pop
ds
sub
mov
cmp
push
mov
or
dec
rcll
xchg
ror
xchg
test
imul
or
aam
jg
adc
enter
subb
repz
pushf
test
rolb
sub
aaa
mov
jnp
testl
movsb
fisubrs
lea
push
popf
arpl
mov
gs
adc
add
sbb
mov
data16
lret
pop
lahf
sbb
inc
lret
xchg
rorl
into
xor
sahf
xchg
orl
fwait
incb
ret
push
dec
or
push
enter
outsl
daa
pop
in
mov
movsb
sub
jns
scas
dec
xor
sti
mov
test
jecxz
ficoms
and
enter
int3
add
push
sub
pop
daa
out
fnstenv
cltd
lods
pop
xchg
sub
pop
aad
adc
pushf
repz
mov
loop
ret
xchg
dec
test
mov
inc
lret
loope
dec
outsl
mov
decb
cld
js
jl
cli
cmp
cmpl
mov
ljmp
jb
inc
add
mov
push
enter
iret
scas
insl
jle
cwtl
mov
loope
mov
into
dec
popa
lea
mov
adc
lret
imul
lods
gs
xchg
and
arpl
outsl
aaa
pop
pop
arpl
add
push
in
ss
mov
push
pop
jae
adc
out
xchg
in
scas
mov
dec
push
ret
xor
cmp
jnp
mov
mov
shll
xchg
in
cmp
push
push
sbb
subb
mov
adc
mov
lods
lea
in
and
sub
iret
jo
int
sbb
lcall
inc
push
sub
into
in
add
push
decb
push
int3
bnd
xor
clc
outsl
pop
sub
pop
in
dec
jmp
pushf
daa
jg
jno
xchg
arpl
xlat
pop
jle
mov
and
fs
jb
ljmp
sbb
jp
pop
push
aad
mov
pop
repz
jge
sub
jecxz
imul
iret
into
fwait
in
lcall
inc
inc
enter
in
test
loope
sub
iret
js
cmp
adc
xor
daa
dec
out
sbb
mov
add
gs
sub
push
lcall
test
sbb
cmp
das
bound
mov
pop
dec
out
cmp
push
jmp
cmp
andb
cmp
addr16
dec
movsb
rorb
push
movsl
xor
xchg
jge
dec
jecxz
jne
jno
adc
or
jp
xor
dec
mull
mov
pop
adc
ret
pop
inc
push
cmpsb
cmp
scas
jno
xchg
std
xlat
cmp
and
mov
adc
repnz
cmp
push
ss
imul
das
inc
and
out
xorl
cmp
pop
ds
addr16
cmp
sub
adc
ds
iret
xor
sbb
add
push
inc
imul
and
lahf
imul
jne
loop
mov
in
mov
gs
mov
pop
lcall
inc
dec
mov
cmp
out
movl
push
aaa
cs
loope
jne
xlat
rclb
loope
popf
movsb
mov
xchg
inc
int
pop
das
in
fdivrl
insl
mov
pop
std
movsb
sbb
lds
mov
loope
push
pop
addr16
loopne
xchg
add
add
cld
inc
push
mov
les
orl
stos
dec
imul
imul
fcmovbe
mov
pushf
mov
push
cli
idivb
or
lock
enter
and
in
data16
pop
mov
cmp
mov
loopne
xor
jle
out
fucomip
dec
add
sub
jnp
fidivrs
mov
int
repz
in
push
std
dec
mov
insl
jae
fcompl
or
cmpsl
push
adc
inc
sbb
adcw
xchg
mov
fwait
pop
pop
inc
cs
mov
mov
sub
jbe
iret
cmp
sub
ss
adc
xor
ret
inc
sahf
cli
iret
xchg
jnp
mov
out
repnz
jp
mov
adc
rolb
xor
sub
pop
movsb
or
xor
mov
loop
xchg
aas
shrb
clc
push
jecxz
and
mov
sbb
jns
pop
divb
push
je
mov
push
nop
push
enter
add
mov
mov
cltd
mov
in
cmpxchg
div
loopne
sub
pop
stc
inc
adc
clc
adc
ja
sub
sbb
mov
jge
test
sub
sbb
sbb
mov
dec
imul
repnz
orl
mov
sub
add
rcll
aam
cmp
or
inc
gs
xchg
and
sbb
sub
mov
xor
mov
into
lds
out
pop
int
test
leave
clc
push
cmpsb
mov
mov
shlb
inc
out
outsb
sbb
mov
sub
shrb
xorb
add
fdivp
fsts
pop
xchg
mov
mov
xor
cmpsl
arpl
rcrb
jbe
adc
or
xchg
mov
cmp
mov
lret
icebp
push
pusha
adc
cltd
std
out
das
jle
jmp
or
dec
fcomps
cmpsl
arpl
js
xor
stos
cmp
jge
add
pop
pop
add
aad
sbb
and
std
dec
push
mov
daa
movl
fwait
sbb
dec
push
cmp
dec
es
cmpsl
test
roll
jbe
jno
sbb
xchg
les
sbbl
jae
sub
push
pusha
test
inc
inc
stos
in
sub
rep
xor
jmp
out
vpsubusb
xchg
shlb
lods
add
insl
scas
jbe
mov
mov
out
inc
sti
push
jg
xchg
adc
pop
push
pop
sbb
imul
xor
imul
xchg
shrl
dec
pop
cli
arpl
in
or
ss
xor
cmp
sbb
cvttps2pi
cwtl
negb
push
add
xchg
or
pusha
jb
mov
sbb
jg
aad
xchg
cmp
mov
in
sbb
pop
add
push
repnz
mov
daa
adc
xor
mov
mov
lods
mov
fisubl
lods
adc
arpl
inc
pop
jno
adc
dec
cld
xchg
mov
out
cmp
inc
and
dec
jg
js
jge
and
jbe
sbb
mov
lahf
scas
push
pop
jne
and
mov
xorl
aad
mov
push
outsl
cmp
or
leave
xchg
lods
js
pop
iret
pusha
jg
pop
hlt
ret
nop
negl
enter
loopne
dec
rep
dec
dec
mov
out
fnstenv
test
fcoms
adc
or
mov
sub
subb
clc
add
sti
idiv
subl
or
inc
or
lret
sbb
ds
movsb
test
out
add
dec
fdivl
mov
ja
jo
shrb
sub
jb
push
jmp
sub
jl
test
jne
sub
mov
xchg
test
mov
sub
fsubr
mov
cwtl
add
pop
lea
test
loop
in
xchg
ret
and
int
dec
dec
ljmp
bound
mov
adc
pcmpeqw
movsb
stc
inc
out
adc
mov
sub
cli
pop
pop
cld
pop
mov
rcll
cmp
mov
or
jle
inc
mov
lahf
xor
dec
jno
fsubrl
lcall
sub
jo
aaa
sbbl
rcr
loopne
cmp
mov
out
cmp
notl
inc
sti
hlt
jnp
dec
lock
bound
cmp
jo
pusha
jae
hlt
in
mov
stc
xor
mov
xchg
push
push
hlt
mov
shrb
sbb
icebp
adc
aam
adc
inc
or
push
fs
fs
ss
xor
mull
shlb
push
pop
je
call
test
xor
loopne
add
loope
and
push
mov
xor
dec
dec
orb
fwait
xchg
dec
or
jo
adc
fbstp
push
je
xor
icebp
aad
bound
push
sbb
push
lods
fsubr
pop
repnz
pop
loopne
jae
loopne
out
cmp
rcrl
test
shll
cld
int
xchg
in
loopne
je
xlat
sbb
mov
ss
inc
push
adc
lret
dec
pop
addr16
test
sarl
dec
adc
and
cltd
push
mov
fsts
xor
call
loop
ja
xlat
xchg
dec
add
int
and
or
inc
lret
cld
adc
fisttps
ret
push
fidivl
fs
dec
popa
dec
aad
mov
fnstenv
sub
std
test
test
xor
loopne
stos
aad
mov
scas
and
aas
dec
scas
add
ja
sbb
dec
ds
cmp
cwtl
lret
sub
test
add
testb
ss
jge
loopne
scas
andl
pop
sub
pop
jns
loop
mov
call
call
pop
js
jge
dec
arpl
ficomps
in
pop
icebp
pop
loopne
mov
add
pop
add
rclb
mov
jmp
push
sbb
repz
sbb
cmp
lahf
add
mov
loop
pop
mov
mov
imul
mov
cld
stc
and
out
fildll
cs
inc
cli
adc
gs
xlat
pop
sbb
pop
dec
xor
push
adc
inc
pop
stos
enter
int
int3
sub
dec
repz
pop
fcom
filds
movl
test
or
stc
sahf
and
idivl
push
mov
mov
pop
cld
dec
clc
adc
lret
jl
lock
scas
lods
adc
add
jmp
xor
repz
jae
jle
pop
dec
xor
enter
scas
or
xor
ds
loope
xchg
ds
cmp
mov
stos
mov
xor
cmp
lock
or
insb
xchg
sub
pop
lcall
and
sarb
fistps
aas
cmc
mov
xchg
and
mov
pop
jo
cmp
adc
mov
xchg
xor
mov
loope
dec
xor
lods
adc
add
push
mov
or
into
in
inc
xchg
inc
mov
cmpsl
cmp
cmpsb
pop
push
movsl
in
adc
xchg
inc
sub
xchg
cmp
cmc
xchg
mov
std
loope
das
in
pushf
test
stos
lock
in
iret
imul
inc
stos
int
dec
stc
aas
arpl
mov
sbb
popa
push
sbb
hlt
movsb
jge
jecxz
adc
mov
xchg
adc
jmp
push
jnp
scas
sub
fistpll
imul
sbb
out
leave
jne
inc
notb
lock
into
mov
mov
mov
scas
mov
jg
fstpt
sub
fcomip
loop
and
ret
add
test
inc
mov
mov
ss
sbb
cmp
pop
xchg
jp
dec
dec
js
dec
push
shll
push
pop
cmp
in
xlat
pop
cmp
fisubrl
arpl
push
mov
xor
mov
or
js
ficomps
aaa
cld
sub
int3
jns
scas
fdivs
jno
xchg
mov
out
imul
std
imul
add
jnp
add
cmp
ja
les
xchg
cmp
fs
les
cmp
aaa
fisttpll
hlt
out
pop
adc
ret
mov
outsl
ja
dec
sub
and
or
ja
into
fadds
movsb
cmc
push
test
add
out
scas
pop
nop
outsb
add
dec
push
dec
callw
inc
loope
pop
xchg
popf
vrsqrtss
push
testb
cli
push
ret
push
sub
inc
ja
xor
cmp
cmp
lahf
mov
imul
push
pop
inc
rclb
int3
call
bound
cmp
pop
icebp
and
ficomps
dec
add
push
jns
inc
outsl
popf
add
in
xchg
dec
je
push
add
mov
imul
pop
sub
faddl
lcall
pop
cmp
push
out
gs
adc
adc
sbb
add
cwtl
dec
jle
pusha
pop
or
sub
xorl
fwait
aam
adc
out
mov
sbb
cmp
cmc
aaa
mov
pop
xchg
add
nop
mov
jne
cwtl
add
mov
sbb
jmp
xlat
mov
xor
ret
jbe
push
out
push
xchg
pop
jmp
fwait
jno
mov
bound
call
cmp
cmc
bound
sub
sbb
pop
ja
adcl
push
data16
aam
aas
mov
into
lea
add
sub
inc
jecxz
int
ss
add
jae
push
jle
xlat
jg
push
mov
pop
popa
mov
aas
pop
xlat
adc
adc
adc
add
mov
std
push
dec
popa
cld
xchg
and
rcll
xchg
sbb
xor
sbb
mov
cmp
movsb
cmp
sbb
out
aam
pop
cltd
cmc
lock
fcomps
pop
sub
pop
or
mov
fdivr
subl
mov
fsubrs
movsb
or
out
sbb
fldcw
xchg
xchg
jno
je
decb
push
les
mov
mov
call
sbb
imul
shll
xlat
out
jae
pusha
dec
ss
mov
sbbb
int3
call
fidivs
and
sbb
push
pop
aad
and
sti
repz
push
outsb
xor
mov
loope
int
and
dec
stos
mov
and
adc
lods
mov
stos
rolb
and
xor
sub
adc
pop
xchg
imul
add
mov
clc
lods
nop
stc
enter
mov
dec
dec
pop
cli
and
sbb
or
push
xchg
xchg
in
jecxz
mov
xchg
pop
es
hlt
push
into
insl
pop
push
out
sub
lods
dec
mov
ds
insl
jo
andb
or
insl
int3
dec
jp
jno
ja
sti
mov
fsubl
push
push
or
lods
sub
sbb
stc
adc
mov
jg
push
push
lods
sahf
pop
movsb
or
xchg
dec
xchg
nop
pop
das
in
add
insb
lock
mov
stos
jne
bound
push
pop
int3
repnz
in
shlb
je
bound
repz
ja
je
and
int
scas
icebp
test
stc
stos
addr16
aad
out
shll
mov
adc
and
sbb
test
adc
inc
clc
outsl
das
and
cmp
pop
xor
test
dec
cwtl
ds
dec
inc
xor
cmc
test
adc
add
xchg
dec
cltd
cmp
xor
sub
xchg
xor
js
xor
ljmp
in
lds
arpl
xchg
mov
jle
clc
dec
cmp
imul
jne
add
rcl
xchg
cmp
notb
pushf
mov
cltd
mov
sarl
into
mov
mov
fimuls
mov
les
mov
sbb
inc
cmpl
repnz
mov
mov
adc
ret
add
fldl
sahf
repnz
orl
movsl
push
fs
and
lock
mov
test
xchg
les
je
mov
pop
and
xchg
out
push
or
lods
sbb
fadds
sbb
xor
mov
fsubs
push
push
sbb
mov
mov
xor
xor
inc
mov
nop
clc
das
dec
ret
les
add
pop
iret
sbb
or
lds
ljmp
and
in
add
xchg
aaa
sub
mov
sar
shrl
std
lret
push
das
adc
daa
mov
cltd
adc
enter
sub
cmp
scas
icebp
mov
cmpsb
fprem1
data16
xor
icebp
int
push
push
mov
mov
enter
sbb
push
pusha
repnz
push
xchg
pop
sbb
mov
aad
mov
mov
adc
int3
xor
xchg
jae
jmp
jae
xor
adc
rcrb
jge
jp
or
dec
popa
xchg
cmp
insl
adc
leave
bound
aam
repz
xchg
jbe
dec
cmp
adc
mov
cmp
mov
imul
imul
cmc
mov
test
or
jmp
push
aad
xor
cmp
inc
mov
xor
dec
mov
js
rolb
stc
cmc
in
subb
push
xchg
mov
test
mov
mov
shl
bnd
nop
pusha
push
enter
icebp
add
lahf
xor
cmp
adc
repnz
jb
mov
mov
jnp
rorb
mov
leave
xchg
call
push
push
jb
adc
fwait
insb
mov
lret
lods
sahf
jmp
je
pop
inc
xlat
popf
enter
dec
xor
enter
shrb
in
cmpsl
mov
push
addl
fists
std
loope
adc
or
pop
pop
push
scas
stc
pop
stos
xchg
sbb
or
fistpll
dec
inc
cmp
dec
dec
sarl
scas
xchg
mov
pop
inc
sbb
fidivrl
mov
cmp
xlat
xchg
push
adc
movsl
sbb
movsb
pop
fisubrs
testb
push
adc
test
cmc
sahf
rcll
in
jp
imul
mov
add
repnz
push
repz
or
and
mov
cmp
imul
push
sub
adc
mov
loopne
dec
pop
jg
mov
adc
jecxz
sub
and
jmp
dec
cmp
xor
aas
in
mov
or
outsl
push
jbe
adc
mov
adc
add
test
cmp
jb
in
mov
das
daa
addr16
push
outsl
int
sub
fiaddl
rolb
insb
or
loope
bound
xor
mov
in
sbb
cmp
and
lret
jg
pop
gs
arpl
rclb
ljmp
inc
xor
fisubs
sbb
lcall
mov
sub
mov
pop
xor
sub
test
xor
pop
jmp
or
shlb
sar
ss
ss
gs
sbb
cs
push
xchg
push
into
movsb
push
jg
xor
out
sbb
cwtl
mov
mov
cmpsb
shrb
insb
clc
popf
inc
gs
subb
and
cmp
lods
in
scas
dec
mov
add
mov
or
push
inc
sbb
or
pop
lds
push
adc
cmp
jb
sti
mov
xchg
and
pop
insl
mov
repz
scas
push
or
pop
aaa
mov
shrl
push
jbe
inc
mov
add
stc
jno
cld
mov
xchg
mulb
test
shll
push
fldl
mov
sub
cmpsb
mov
sub
mov
cmp
lds
mov
xchg
movsl
aas
xchg
xchg
and
mov
test
xor
sbb
jae
add
mov
pushf
jnp
loopne
xlat
lcall
adc
addb
jne
hlt
pop
addl
ret
mov
add
mov
and
dec
sub
data16
or
ljmp
mov
outsb
loop
lret
xorl
pop
mov
inc
cmpb
outsl
dec
fwait
cmp
insl
jne
movsl
iret
and
mov
cmp
mov
call
lret
mov
xchg
pop
pushf
movsw
cmp
mov
pop
sub
cmc
in
push
xchg
xor
adc
clc
das
mov
lret
imul
lds
jl
adc
pop
or
pop
divl
sbb
sub
ret
scas
aam
cmpl
push
or
xor
in
lods
dec
sti
inc
lods
adc
adc
cmp
sub
dec
push
outsb
dec
stos
cmpsl
pop
lcall
ljmp
mov
adcl
rclb
mov
cmp
push
test
push
lds
das
rolb
add
lahf
push
cmp
mov
popf
push
ljmp
sub
or
std
push
lods
xchg
add
gs
push
or
adc
push
pop
lret
test
xchg
mov
mov
out
jle
lret
cmp
inc
leave
jbe
repz
adc
fstps
mov
icebp
lret
lcall
subb
cwtl
jns
shr
inc
sti
mov
xchg
cwtl
sti
xchg
dec
add
stc
aad
call
adc
mov
mov
dec
mov
mov
push
stc
mov
hlt
fiaddl
adc
cld
lret
add
sbb
clc
leave
imul
jns
fs
sub
add
cmp
cmp
sub
movsl
cwtl
aad
jae
sbb
call
mov
jne
jae
cs
test
adc
mov
jb
cmp
movsl
mov
mov
call
cmp
cmp
mov
inc
pop
enter
popa
xor
fisubrs
adc
call
clc
cmp
insb
loop
dec
mov
adc
data16
pop
test
test
adc
mov
pushf
pop
add
and
inc
das
mov
pop
popf
xchg
stc
lret
sbb
adc
mov
jle
rolb
je
sbb
aas
xchg
jb
sub
jae
mov
push
xor
lods
jo
xor
xor
sarb
cmpb
insl
ds
mov
cmpsb
cs
inc
mov
mov
imul
push
gs
bnd
popa
aaa
sbb
add
int
clc
or
aam
mov
dec
and
dec
aam
push
imull
push
xchg
jl
mov
adc
mov
inc
mov
dec
jecxz
inc
dec
add
inc
in
stc
movsb
push
mov
call
xor
xor
xchg
or
fcompl
push
mov
cli
in
pop
divb
jg
mov
push
pop
hlt
ss
aas
andb
sbb
jne
lretw
aas
adc
mov
sbb
pop
push
inc
mov
cmp
xor
inc
bound
mov
jg
mov
dec
mull
adc
in
and
adc
adc
movsb
subl
xor
test
outsw
fsubrl
cmp
sub
push
dec
loopne
push
xchg
cmp
stc
inc
lcall
jne
movsl
mov
jo
sbb
pop
push
add
cmc
jno
inc
or
andb
jg
inc
cmp
or
fldl
fucomp
inc
and
aas
insb
ds
daa
jl
inc
mov
jmp
hlt
shl
repnz
mov
addr16
out
dec
jne
xchg
mov
push
pop
mov
inc
cmp
or
xor
or
shll
mov
and
int
aam
jae
xor
sub
popa
mov
add
mov
call
outsb
jo
pop
sub
sbb
xor
popa
sarb
stos
jne
push
add
xchg
enter
jns
push
and
xor
insl
movsb
aad
clc
mov
sbb
gs
pop
xchg
xor
pop
je
inc
jge
xchg
mov
bound
mov
inc
sub
ret
adc
and
jg
mov
stc
jae
lods
aas
stos
daa
mov
mov
pop
push
das
fs
pop
jmp
xchg
jle
fwait
and
enter
int3
popa
sub
fbld
cmp
addb
gs
into
or
sub
test
fcmove
or
adc
faddl
jb
mov
sub
orb
inc
xor
dec
fidivs
jns
movsl
jg
mov
lds
cmp
adc
insb
ljmp
sbb
or
lahf
pop
xchg
repnz
nop
push
dec
repz
jmp
daa
push
and
and
or
xor
and
repnz
sub
dec
mov
ja
mulb
insl
mov
imul
hlt
inc
aad
inc
outsl
imull
inc
dec
mov
xchg
lret
xor
pop
dec
movsb
cld
jno
adc
xchg
pusha
fdiv
push
mov
jmp
xor
push
jmp
adc
or
int
scas
jnp
repnz
adc
in
mov
xchg
and
pop
das
icebp
pop
inc
mov
sub
adc
mov
mov
sub
xchg
leave
insl
test
rcrb
or
sub
pop
jns
jp
inc
lret
xor
cmp
and
pop
pushf
mov
mov
and
sbbl
xor
lss
add
inc
inc
scas
popf
cwtl
or
loop
out
push
dec
xchg
mov
scas
push
sbb
fmull
loop
fs
les
inc
and
jo
push
xchg
lret
mov
sbb
push
stos
cmp
cld
add
cmp
test
sbb
xlat
jb
push
cltd
mov
movsl
lcall
and
or
repnz
and
lret
or
sub
or
repz
rorl
xor
dec
scas
sbb
inc
jle
outsb
test
dec
dec
mov
mov
mov
std
mov
lret
loopne
add
jne
iret
gs
rcr
sub
shll
iret
sbb
movsb
ljmp
mov
sbb
pop
daa
aas
dec
jecxz
js
pushl
inc
cmp
std
nop
add
jbe
mov
lods
and
mov
mov
lds
add
pop
insb
repz
outsb
dec
sub
push
inc
lock
inc
pop
cmpsb
leave
cli
pop
sbb
fildll
scas
into
adc
add
fsubs
jne
add
out
adc
lret
jo
mov
push
push
push
pop
jp
sar
dec
dec
pop
sub
push
or
adc
imul
cmp
cmp
call
cmpsl
ror
nop
xchg
sarb
xchg
jg
jo
clc
stc
inc
data16
push
or
loope
or
jb
lods
dec
dec
outsl
mov
jle
mov
in
insb
int
adc
scas
jge
xor
repnz
cmp
push
ljmp
sahf
cwtl
scas
xchg
inc
or
repnz
pop
or
loop
fnstenv
fwait
inc
cmp
xor
fucomip
jno
add
cli
cli
popf
cmp
jb
dec
loopne
je
rcll
dec
enter
cli
iret
inc
xchg
sub
pop
jnp
cmp
mov
imull
or
fisttpl
out
add
insb
push
je
sbb
or
ja
shrl
pop
aad
out
clc
push
and
sbb
outsl
lret
bound
lahf
lods
fcmovbe
in
push
jg
pushf
push
jnp
xor
adc
xchg
sahf
cmp
movsl
lret
fwait
test
lods
add
popf
and
jg
mov
in
sub
push
push
mov
dec
popa
pop
push
lea
add
dec
aaa
pop
mov
mov
popa
push
lcall
fsubr
jecxz
test
cmp
leave
test
enter
fistpll
mov
jno
mov
lahf
push
or
dec
push
repnz
push
ffreep
lds
or
cmpsb
sub
push
cs
mov
je
loop
sbb
cmp
fadds
stc
pop
pop
jb
imul
cmp
xchg
push
sbb
push
jp
pop
in
fdivrs
shl
or
dec
adc
sub
add
pusha
sbb
xor
mov
or
into
adc
aaa
inc
push
dec
and
cwtl
inc
cwtl
xchg
repz
push
fnsave
call
lock
pop
sub
cld
or
scas
cs
and
and
addl
push
jae
lret
jp
pusha
loope
xor
repnz
jp
int3
sub
cmp
jl
notb
xchg
in
pop
inc
jg
in
movsl
sahf
movsb
mov
adc
ljmp
faddp
dec
push
sbb
call
sbb
out
jp
outsb
jl
push
jmp
lahf
dec
mov
out
outsb
mov
cmp
bound
jle
jno
sti
xor
jle
in
pop
into
xchg
stos
push
mov
or
stos
push
inc
sahf
xchg
lds
jmp
fcmovnu
xchg
mov
sub
in
pop
lock
xor
pop
cmp
movsl
pusha
dec
mov
inc
jge
pop
push
int3
adc
mov
cli
sub
pop
and
aas
mov
mov
xlat
mov
add
and
hlt
push
sbb
mov
cmp
xchg
push
test
loop
xchg
mov
aaa
and
inc
ret
xchg
xchg
sbb
push
jno
or
push
rol
cmp
std
das
aad
sub
testl
aas
mov
add
stc
push
imul
sub
icebp
gs
aas
jge
mov
pusha
cmpsb
xchg
pusha
pop
leave
dec
lret
icebp
int
sub
nop
jns
mov
pushf
mov
mov
ja
cmp
lods
stos
popf
mov
jbe
or
push
clc
sub
lods
out
loope
push
jbe
xchg
add
shrb
adc
dec
cmp
adc
sbb
fimuls
xchg
and
call
dec
cwtl
iret
add
test
fildll
or
mov
jp
sub
add
and
jge
pop
pop
addl
sub
sbb
test
add
cmp
les
push
push
or
xor
pop
mov
prefetcht2
cmp
adc
aaa
cmp
in
xchg
mov
jnp
add
shr
fcmovbe
aas
loope
rolb
ja
mov
imul
xchg
adc
lret
xchg
enter
dec
int3
movsl
ja
xchg
fistpl
repnz
cltd
mov
xchg
pusha
mov
xchg
notl
loop
insl
cli
stc
dec
pop
xor
aam
mov
popa
fstps
jns
int3
mov
or
mov
addr16
fs
cmp
aam
jle
and
imul
jnp
jb
negb
cmp
mov
insb
xlat
lock
mov
jae
mov
in
push
lret
mov
lret
arpl
out
fcompl
and
test
mov
mov
xchg
cli
out
jae
pop
repz
xlat
testb
call
mov
in
push
clc
xorb
in
adc
insb
icebp
mov
push
xor
cwtl
push
add
test
into
cld
pop
ficoml
sbb
pop
sub
andb
aaa
fldz
test
pop
pop
in
cs
mov
push
xchg
data16
fwait
lahf
cmpsl
pop
in
sbb
and
data16
xorb
int3
adc
insb
shr
sbb
jae
fucom
pop
cli
cmp
jo
pop
and
or
popf
sbb
jmp
lea
cltd
popf
and
push
addr16
jmp
fcoml
mov
dec
aaa
pusha
add
ret
cmp
pushf
outsb
test
dec
sti
sub
clc
std
or
push
subl
data16
xor
jae
xchg
pusha
push
mov
in
and
inc
in
data16
jnp
test
push
cltd
push
stos
fcomp
sahf
add
lds
mov
sub
mov
mov
cmc
inc
cmp
lcall
fcompl
loope
jmp
lcall
clc
push
fisttpll
ljmp
mov
mov
iret
stos
mov
lret
xor
sbb
cmpsl
inc
mov
push
mov
add
mov
add
push
popa
jp
pop
repz
out
rorb
xor
push
xchg
and
insl
add
mov
jo
outsl
aam
xchg
inc
and
push
sbb
xchg
cld
sbb
jnp
sbbb
xor
in
jae
dec
dec
and
pop
fs
lea
mov
inc
aas
imul
in
loope
int
adc
iret
jp
rcrl
in
mov
add
lahf
mov
mov
push
cs
scas
fistpll
push
mov
hlt
jmp
jge
pop
call
inc
xor
es
sub
pop
popf
fdivrl
mov
and
xchg
xlat
inc
negb
sbb
push
cmc
aas
and
lcall
lods
inc
je
add
and
out
outsl
xor
in
inc
daa
pop
push
cmc
mov
jecxz
adc
inc
xchg
sbb
dec
jbe
std
testl
fwait
mov
es
dec
cmpsl
inc
dec
lock
cli
shl
clc
dec
jbe
out
or
xor
push
cld
cmp
push
mov
cwtl
push
scas
add
push
cmp
adc
movsb
cmp
rol
mov
out
xor
jl
mov
lods
lods
mov
or
inc
cwtl
loopne
ret
jno
cmp
xchg
daa
sub
loope
cmp
cmp
fsubl
jb
pop
mov
test
std
pop
call
loope
aaa
dec
add
inc
dec
sub
test
push
sar
dec
movsl
ret
loope
cmp
cld
es
pop
movsl
jae
adc
es
in
inc
shrl
pop
ljmp
adc
out
cmp
lret
out
sbb
or
lods
hlt
cmpsl
test
or
pop
stc
sub
jmp
loopne
ss
sub
inc
inc
ror
ret
xchg
and
push
pushf
inc
pushf
pop
sbb
fdivr
mov
xor
mov
jl
ds
int
ja
xlat
mov
mov
add
test
ds
mov
xlat
fsubp
pop
sbb
pop
cmp
mov
sub
ja
test
jecxz
ror
mov
les
cld
std
adc
pop
jns
dec
or
xchg
enter
or
pop
mov
je
xor
pop
push
pushf
outsb
ds
pushf
cmc
add
sbb
jp
and
xchg
push
add
aad
ja
dec
js
jbe
sahf
fdivrs
scas
fwait
mov
jo
filds
and
pop
cmpsl
pushf
xlat
push
jns
mov
sbb
and
das
cmp
cld
dec
pop
mov
lods
test
repz
add
pop
adc
pop
jae
in
cmp
lods
sub
mov
je
xchg
fidivs
jmp
add
cli
push
mov
rol
add
outsb
push
mov
int3
jmp
in
or
test
fbld
push
sub
addr16
add
or
xchg
mov
dec
sbb
push
stos
jp
pop
mov
sub
push
outsl
mov
push
cltd
inc
movsl
into
pop
xchg
jnp
xor
mov
jne
stos
push
and
mov
and
iret
and
jbe
push
add
scas
int
addr16
jnp
fidivrl
mov
lods
inc
xor
lret
dec
and
add
ds
cmp
and
jl
jmp
pop
call
addb
xchg
xchg
lods
mov
cmp
aaa
cmc
cmc
cld
push
mov
scas
lock
add
and
addr16
mov
stos
aaa
mov
lcall
sbb
sti
std
jle
mov
enter
xchg
mov
leave
cmp
jbe
or
jbe
or
nop
inc
dec
rol
fimull
dec
and
inc
inc
fs
ljmp
imul
xorl
jnp
pop
push
or
mov
ja
sbb
pop
push
cmpsb
sbb
in
push
rcrl
sbb
jne
push
xor
add
sub
out
xchg
cwtl
jo
les
dec
lcall
in
xchg
sarb
fsub
loop
push
adc
mov
mov
sbb
jne
out
mov
xlat
adc
sahf
mov
bound
in
push
and
and
je
jecxz
jbe
pop
push
and
mov
scas
cli
mov
xorb
adc
mulps
mul
mov
adc
mov
fs
jge
mov
xor
pop
subb
cmp
rolb
inc
movsb
mov
xor
push
repz
lret
or
sti
aaa
hlt
mov
and
rclb
pop
inc
adc
sub
shl
jp
xchg
in
cmp
loopne
inc
add
mov
aam
bound
or
aad
sbb
shl
cmp
scas
packssdw
dec
add
clc
in
push
in
jo
push
lcall
outsb
dec
jno
push
iret
pop
adc
inc
mov
icebp
imul
cltd
cmp
dec
notb
fimuls
pop
imul
call
jae
lret
dec
adc
lds
neg
add
push
and
repz
adc
cmp
sarl
xchg
insl
popa
cmp
xchg
mov
jno
popf
test
aas
mov
sub
push
inc
push
sub
dec
adcl
sbb
es
imul
ror
arpl
sub
inc
jnp
popf
mov
xchg
jbe
xchg
jae
mov
push
pop
mov
jnp
cwtl
cld
mov
mov
jne
adc
inc
daa
rclb
loope
xchg
lret
and
vandnps
mov
cmp
dec
in
dec
inc
cwtl
enter
sahf
and
xchg
fwait
jge
outsb
add
push
jo
xchg
jg
inc
insl
mov
or
test
pop
shlb
inc
mov
in
int3
fnstcw
clc
sbb
inc
add
lods
shll
mov
filds
adcb
or
stos
xor
inc
or
or
movntq
out
sbb
dec
gs
and
xchg
push
xor
dec
imul
sbbb
into
cmpsl
pushf
outsb
dec
loopne
cltd
jg
cmpsl
xchg
inc
call
mov
punpckhbw
js
and
in
scas
int3
fdivp
mov
and
xchg
scas
mov
ss
fisubl
push
loope
mov
dec
ficomps
add
xchg
sub
inc
and
int3
or
mov
mov
jg
outsl
aam
or
dec
lahf
xchg
icebp
and
sbb
into
add
jnp
mov
push
push
cmp
fisubs
and
stos
and
lahf
mov
sub
bound
push
sbb
les
sbb
jb
icebp
mov
loop
fdivrs
pop
jns
les
ds
inc
push
mov
sbb
popf
scas
hlt
cli
xor
out
push
test
es
cltd
fistpl
lret
imul
pop
mov
or
and
jmp
dec
push
orl
loop
hlt
adcl
ficoms
sub
and
push
pop
sarl
xlat
movsb
adc
add
mov
mov
rorl
std
xchg
loop
sti
mov
mov
iret
mov
dec
aad
dec
xchg
insb
mov
pop
mov
pop
test
push
mov
add
daa
test
stos
pop
lahf
in
jbe
mov
stc
clc
mov
push
ljmp
stos
push
arpl
add
jg,pn
test
in
ret
adc
mov
pop
dec
hlt
lock
lock
mulb
sbb
insb
shl
into
mov
rcll
pop
fs
push
lock
lcall
loopne
jb
sub
pop
push
aad
in
das
mov
ja
pop
pop
idivb
fisttpll
insl
inc
leave
ror
enter
test
and
fists
xor
andb
xorps
and
mov
mov
into
adc
out
adc
mov
mov
ja
pop
lods
or
movsl
lods
inc
cmp
pop
inc
addb
std
and
pop
sahf
or
ljmp
repnz
scas
jb
pop
add
mov
mov
stos
xor
push
xchg
and
sti
xchg
and
xor
dec
xchg
xchg
je
push
xchg
push
outsl
aaa
inc
cmp
int
mov
in
or
pushl
push
push
push
xor
sarb
lods
push
jg
shl
and
pop
add
and
call
or
fists
testb
mov
pushf
or
jb
mov
into
lret
or
fisttpll
loope
and
adc
test
and
movsb
roll
xchg
or
inc
sub
popf
roll
stos
stc
mov
jnp
scas
cmp
cmp
out
jle
call
movsb
rcrl
xchg
pop
fucomip
aaa
push
popf
cltd
jb
or
mov
mov
scas
nop
sub
in
dec
or
xchg
lds
mov
jecxz
fidivs
push
push
xchg
mov
and
sbb
mov
fstpl
icebp
mov
push
stc
je
leave
sbb
cltd
xchg
insb
mov
lea
ds
mov
mov
fwait
mov
adc
jmp
xlat
aam
fldcw
pop
repnz
out
out
cmp
xchg
lea
push
in
fsubp
xchg
jnp
ret
dec
or
adc
inc
and
leave
jnp
enter
cmp
xor
or
mov
addl
cmp
mov
adc
mov
stc
mov
xchg
push
loope
mov
arpl
xchg
sub
cmp
stos
dec
cli
icebp
aas
imul
mov
push
push
pop
jmp
mov
int
cwtl
inc
idiv
sub
push
cmpsb
add
clc
and
mov
jle
das
sti
aas
or
jbe
mov
out
jae
sbb
pusha
andb
lsl
bnd
xchg
nop
jnp
mov
cwtl
mov
jl
jmp
imul
push
pop
push
ds
mov
hlt
sub
mov
sbb
enter
mov
mov
hlt
aaa
icebp
push
push
ja
mulb
out
push
ror
fdivrp
sub
or
xchg
lds
jp
addl
icebp
lret
mov
sub
add
and
aaa
ja
push
loopne
out
subl
sahf
add
orl
jnp
mov
idivl
icebp
insl
packsswb
add
push
mov
cmp
mov
push
mov
mov
mov
push
clc
das
popl
pop
aas
cmpsl
or
lcall
push
pop
lahf
push
inc
sbb
sub
dec
or
insl
arpl
insl
push
inc
xchg
push
cld
mov
mov
pushf
jecxz
jmp
xor
int
ds
test
xchg
stos
stc
int
add
or
adc
int3
outsb
lods
aas
pop
sti
xchg
sbb
mov
mov
int3
xlat
in
push
cmc
fs
sbb
sbb
hlt
adc
or
mov
std
jno
call
pop
jecxz
adc
insb
xchg
cmpl
push
in
dec
int
int
sub
pop
sbb
push
sbb
mov
lret
and
push
sub
jmp
mov
sbb
pop
repz
xor
push
imul
test
xor
xchg
lods
andb
sbb
ss
jle
call
lods
push
in
stc
movsl
lods
mov
clc
jp
jl
loopne
andb
or
jge
mov
add
jmp
dec
adc
inc
xchg
jne
lock
or
inc
mov
in
aas
mov
push
pusha
and
xchg
fcoms
cmpsb
addb
and
lds
mov
jno
jb
insb
pop
jecxz
mov
into
and
test
lds
adcb
pop
scas
testb
mov
stos
pop
es
jbe
or
xchg
cmp
sbb
xor
scas
sub
mov
mov
pop
in
and
inc
ficoms
xchg
aad
cmp
out
insb
xor
mov
pop
dec
cmpsb
fadd
cld
pushf
out
or
enter
jns
sbb
or
loop
push
das
lods
std
out
push
stos
or
into
jmp
adc
sub
xchg
xlat
dec
sbb
loopne
sub
mov
or
mov
cmp
je
xor
cli
or
jne
in
or
data16
lcall
xor
sbbb
aad
roll
popf
lds
dec
roll
jmp
mov
shrb
shll
jns
cmp
jle
lcall
dec
jmp
mov
shll
es
mov
dec
bnd
negb
or
out
pop
mov
sub
sbb
js
mov
clc
ffree
sti
sub
popa
scas
mov
jo
push
aam
cmp
or
xor
mov
xor
lret
and
andl
mov
test
cli
shlb
or
fs
dec
int3
test
jg
and
push
clc
shlb
pop
push
pop
push
jb
mov
pop
lret
mov
jo
out
mov
movsb
cmp
insb
and
rclb
inc
mov
fstps
into
cmp
into
movsb
imul
xor
add
and
ret
arpl
mov
jo
cmpsl
xor
or
lock
out
adc
insb
mov
cltd
pop
test
xchg
ss
adc
xor
rcr
in
dec
push
xor
sub
or
subl
imul
xor
lcall
jno
jae
out
enter
repnz
xor
pop
sub
xor
notl
fwait
mov
aaa
pop
fcomps
std
js
dec
adc
loopne
pop
xor
sarb
fidivs
ror
out
push
addr16
decb
pop
lret
in
call
rcr
nop
xor
xor
jecxz
and
out
in
push
popa
cmpl
mov
outsl
js
dec
daa
bound
push
xor
push
in
fwait
sub
jl
xor
add
jae
push
jne
clc
or
mov
adc
enter
adcb
nop
ret
loopne
fisttpll
jns
adc
fcmovu
ret
in
dec
xchg
ret
jg
cmc
movsb
cmp
subb
fwait
mov
or
in
xchg
dec
pop
xchg
lock
dec
xor
loopne
mov
repnz
insl
mov
pop
dec
dec
mov
push
mov
fdivrl
inc
jbe
enter
jp
xor
fists
repz
inc
sub
out
push
das
gs
xchg
dec
repnz
jno
mov
addr16
dec
push
hlt
in
inc
mov
inc
cltd
inc
jo
mov
enter
testl
call
or
add
sub
jl
sbb
pop
jne
sub
fidivs
push
jns
mov
aas
jae
pop
sbb
loop
mov
sub
mov
adc
cmp
adc
ret
inc
cmpb
mov
stc
nop
mov
inc
sti
pushf
adc
cmp
repnz
mov
mov
pop
lea
mov
dec
jge
loope
push
aad
lret
inc
je
int
fsubr
xchg
pop
and
daa
ficomps
sbb
jp
fwait
adcl
je
mov
mov
fcomi
leave
negb
test
sub
imul
mov
nop
cwtl
mov
lods
and
out
or
sub
mov
sbb
sub
aad
xor
pop
aad
rorb
loopne
or
dec
lea
mov
dec
push
and
xchg
ret
adc
mov
push
mov
push
insb
ja
cmc
lahf
jns
dec
or
push
cs
imul
xorl
sub
add
and
movsl
or
cmp
mov
dec
push
xor
lds
shrl
sti
cmpsb
push
mov
inc
adc
lret
jge
insb
xorl
scas
sub
jbe
cmc
lock
jge
jmp
mov
adc
mov
ds
pop
dec
scas
in
push
pushf
in
fdivs
outsl
add
pop
cwtl
outsb
adc
push
or
cmp
les
scas
jo
js
xchg
into
jp
mov
pop
inc
jnp
jl
out
inc
adc
cmc
inc
lds
popa
sub
pop
mov
into
les
adc
inc
jge
dec
dec
std
or
mov
popf
xorb
sbb
popa
mov
adc
in
sub
adc
popa
inc
dec
inc
popf
addl
lea
test
repnz
push
scas
push
negl
negl
out
repz
decl
mov
test
addr16
in
data16
scas
inc
daa
sub
mov
cmpl
subl
inc
std
mov
pop
jno
sub
fwait
mov
sti
jp
pop
out
sti
dec
fistps
mov
inc
dec
stos
sbb
dec
xchg
mov
popf
cli
or
cltd
mov
popf
mov
jb
dec
and
cmp
jp
mov
shll
or
out
mov
fnstsw
jae
js
repnz
jno
gs
lret
cli
cmp
mov
cmpsl
out
in
or
mov
lock
adc
xorb
jmp
or
xor
fsubs
lcall
fimuls
and
out
and
fucomp
scas
aam
mov
daa
inc
dec
into
lret
or
aaa
sbb
jecxz
scas
ret
js
stc
jae
xchg
lret
ffreep
mov
jns
into
and
sbb
leave
sbb
mov
xchg
push
ss
mov
dec
scas
jno
add
sbb
mov
inc
jle
pop
out
ja
cmp
ljmp
dec
inc
lcall
aad
mov
lods
and
ret
psrlq
pop
mov
or
sub
mov
mov
ret
mov
in
mov
repnz
leave
xchg
scas
jle
mov
xor
dec
add
jp
stos
or
dec
scas
cmp
mov
psubb
pushf
xchg
daa
iret
arpl
loopne
dec
jne
mov
aam
popa
mov
loope
ss
inc
or
mov
inc
inc
push
lea
lcall
jo
xlat
push
mov
fistpl
mov
mov
repz
jecxz
cmp
lods
popf
inc
dec
sbb
loop
rclb
nop
sub
adc
adc
dec
cs
hlt
loope
cli
lock
out
mov
stos
fiadds
cwtl
in
mov
in
mov
mov
sub
cmp
out
and
cmp
mov
cmc
push
cmpsl
lds
sbb
clc
mov
pop
push
movsb
or
into
outsb
testl
xor
jg
movsl
push
enter
dec
and
xlat
push
shlb
call
stos
add
hlt
mov
mov
rolb
enter
mov
into
cmp
fs
xchg
ret
mov
inc
sbb
sbb
shll
push
mov
fsubl
in
stos
xor
fldt
loope
fs
lock
or
pop
mov
ss
call
aad
and
repnz
push
xlat
lods
divb
loop
test
or
mov
loop
xlat
imul
jmp
pop
lret
and
add
cld
ds
orl
ds
adc
roll
test
out
mov
ror
clc
stos
cmp
pop
jge
adc
insb
jne
dec
ljmp
fldt
dec
fadds
add
cmp
jge
xor
dec
add
jnp
push
xchg
mov
in
mov
add
inc
sbb
inc
outsl
pop
fstl
xor
out
lods
out
and
test
or
outsb
shlb
aam
sti
aas
mov
mov
adc
rolb
daa
inc
imul
or
stc
fsubs
cmpsb
aaa
push
subl
movsl
popa
mov
add
lds
adc
popa
ljmp
repz
or
jns
pop
pop
cmp
fiadds
xchg
cwtl
stos
lret
xchg
sub
pop
push
cld
sub
or
sahf
imul
mov
mov
xlat
xlat
fxch
jb
je
fst
pop
call
mov
push
inc
or
add
mov
adc
push
mov
pop
popf
adcb
cmp
pop
push
aad
mov
pop
and
in
in
mov
fistpll
and
cmpb
jne
or
jmp
sbb
lret
popf
dec
mul
xchg
neg
fwait
dec
dec
ror
pop
je
inc
stos
mov
pop
les
xlat
push
cmp
add
inc
loope
adc
idiv
out
dec
inc
xlat
adc
jl
jle
jle
mov
sbb
test
sbb
and
sub
test
loop
and
ljmp
out
xchg
lea
movsb
stc
cmp
out
sub
imul
mov
xchg
ret
orl
jmp
mov
sub
mov
dec
fstpl
in
ja
cwtl
and
xchg
cmp
pop
pop
dec
daa
sbb
dec
hlt
subb
pop
dec
mov
mov
lcall
ljmp
mov
adc
insl
fnsave
pop
inc
mov
inc
cmp
movsb
cmpl
adc
cmp
add
in
dec
out
rclb
jb
mov
aaa
stos
sti
out
insl
cmp
adc
out
xor
jo
push
clc
xchg
push
mov
cld
test
daa
clc
mov
nop
pop
aad
mov
push
notl
push
mov
cs
bound
xor
dec
je
adc
jbe
nop
dec
mov
iret
repz
xchg
cmp
mov
xorb
dec
mov
mov
sub
cmpsl
cmpb
xor
or
xor
push
push
push
ss
cmp
push
cmp
adc
pop
mov
pop
fildl
cmp
push
mov
adcb
out
lods
adc
movsl
rcrb
pop
mov
jae
jno
mov
testl
out
stc
shl
jae
push
lret
lds
popa
mov
mov
leave
scas
shll
xchg
push
lret
xor
xchg
dec
push
mov
inc
cs
or
mov
inc
cli
adc
sub
repnz
push
jecxz
xchg
clc
aaa
movb
xchg
imulb
xchg
sti
xchg
scas
or
movsb
sub
or
data16
out
loopne
sahf
pop
and
jo
jo
shlb
sub
and
cmpsb
adc
stc
push
mov
call
inc
mov
sub
and
jge
sub
insb
push
addb
xchg
or
mov
mov
push
bound
mov
sub
jo
jmp
mov
pop
push
add
orb
push
cmpsb
xchg
mov
sbb
xchg
fistpl
fldcw
call
ljmp
fisubrl
repz
xor
flds
push
outsb
push
inc
ds
das
xor
mov
xchg
lcall
gs
test
mov
outsl
mov
dec
sub
lea
sub
int3
mov
hlt
and
jo
push
xor
mov
sbb
dec
cmpsl
dec
hlt
xchg
iret
push
jmp
and
sbb
xchg
cmpsb
dec
fwait
or
in
jp
dec
cmc
arpl
mov
sub
add
mov
mov
cli
lock
cmp
xchg
xchg
sub
rcrl
xchg
add
out
fwait
sbb
push
lret
dec
sbb
inc
mov
jno
fsubl
lock
inc
fldl
pushf
outsl
pop
iret
mov
ljmp
inc
scas
or
mov
jno
jno
in
sbb
sbb
stc
stc
faddp
inc
xor
loop
sub
push
mov
or
movsl
pop
jo
pop
insl
lods
push
push
fistl
sub
inc
test
fnsetpm(287
mov
out
xchg
scas
push
adc
cltd
mov
int
mov
inc
push
jge
push
cmp
divb
sub
ljmp
pop
es
dec
adc
pop
cwtl
cmp
cmp
test
jno
adc
push
pop
push
repnz
mov
loopne
shr
jl
dec
aaa
gs
sahf
cld
xchg
push
jl
out
arpl
enter
sti
rcll
pop
mov
inc
das
mov
push
jns
loop
notl
and
fs
push
fwait
fs
in
dec
inc
sbb
ret
xchg
cmp
inc
aas
inc
pop
scas
sbb
cld
mov
lock
add
sbb
sub
sbb
imulb
mov
push
xor
idivb
adc
mull
push
mov
sbb
lcall
std
pop
pop
fcoms
and
subl
dec
jo
mov
fisubl
mov
das
jo
loop
push
out
jl
adc
sub
divl
cltd
imul
call
arpl
dec
loope
or
push
in
int3
jae
loopne
sub
out
andb
adc
fiaddl
inc
mov
pop
stc
mov
jecxz
add
dec
pop
push
or
and
pushl
roll
stos
sbb
cld
dec
fisubrl
pop
das
lea
notl
push
sbb
int3
push
add
ja
lea
adc
adc
adc
fimull
sub
sub
dec
push
int3
pushf
fnstcw
xchg
jl
out
dec
jae
idivl
cmc
inc
test
sarb
and
sbb
int3
mov
out
inc
dec
sub
fwait
rcll
add
cld
add
jg
ret
sbb
es
dec
pop
jmp
cmpsl
dec
pop
je
out
popf
xchg
cmp
pop
sub
enter
dec
cmc
pop
dec
test
xchg
push
ljmp
jnp
adc
movsl
mov
sub
roll
jns
pop
xor
popa
aas
adc
add
imul
xor
in
and
out
ja
pop
or
test
out
jo
out
out
bnd
mov
sub
cld
int3
insb
lahf
mov
scas
sub
and
adc
inc
cmpsl
push
adc
ffreep
daa
movsb
shll
sub
adc
and
inc
sub
cmp
sbb
cs
mov
xor
pop
cmp
loop
dec
testl
cmp
enter
mov
xchg
sbb
idivl
sbb
cmp
iret
mov
in
leave
fs
lods
fwait
mov
pusha
ds
pop
pop
pushl
jns
testb
idivl
jecxz
dec
mov
sbbb
enter
lea
cmpsl
repnz
pop
xor
add
or
push
gs
push
push
adc
fisubl
mov
imul
mov
xchg
xchg
les
dec
fiadds
int
mov
lea
int
xlat
addb
fucom
adc
cli
inc
fdivs
cmp
mov
mov
shll
sti
lea
ja
jno
adc
jnp
enter
adc
pop
out
daa
cmp
jle
sub
gs
push
sbb
inc
mov
xor
sub
addr16
gs
jge
jno
xchg
test
cltd
jne
fbstp
leave
push
jo
xlat
push
dec
loopne
add
mov
fidivl
cmp
cld
or
out
pop
jns
nop
call
or
das
arpl
add
repnz
test
xchg
mov
stc
loope
popa
sub
cli
sub
les
mov
xor
cmp
jg
push
mov
stc
outsb
xor
mov
push
lock
cli
jg
push
rorl
pop
and
fstps
mov
pop
and
sahf
js
mov
mov
pop
cmp
xor
push
dec
out
xchg
fldcw
cmp
out
mov
push
push
push
sbb
arpl
std
sbb
ja
pop
add
lods
push
call
ficoml
mov
fistpl
mov
sub
adc
pop
stc
gs
pop
je
icebp
pop
jbe
dec
inc
jmp
out
cmpsl
push
loop
daa
std
pop
clc
or
pop
test
mul
sbb
lea
xchg
mov
inc
push
lret
push
test
outsb
fsubrs
jle
mov
orb
movsb
cs
fsubl
mov
pop
sub
mov
ja
cmp
inc
xor
mov
cltd
and
notl
out
sarb
imul
mov
out
push
jb
aas
adc
dec
orb
mov
test
cltd
add
mov
fnstcw
stc
inc
mov
jl
out
mov
in
jmp
xor
lahf
mov
mov
pop
sbb
and
mov
mov
inc
dec
cmp
test
ja
ror
pop
lea
arpl
adc
sahf
enter
jle
add
mov
pop
pop
aas
xor
jp
mov
negb
lret
push
dec
xlat
out
pop
fs
ret
push
movsb
repnz
push
or
hlt
jbe
fisttpl
into
in
lahf
xchg
clc
ret
jbe
or
adc
fs
pop
push
je
fnsave
pop
ret
lahf
dec
add
cmpsl
push
sbb
jmp
loope
sti
xchg
aas
in
jbe
pop
cli
mov
cmc
shrl
jle
pop
or
popf
ja
ljmp
js
mov
mov
jmp
std
loop
cmp
add
mov
push
sbb
add
arpl
cli
pop
jecxz
jl
mov
pop
cmpsb
pusha
iret
cld
pusha
lahf
push
inc
addr16
popa
jnp
xchg
add
out
pop
js
and
xchg
mov
mov
add
out
outsb
mov
icebp
cmp
mov
das
dec
adc
or
pop
push
imul
das
mov
mov
into
mov
clc
xor
nop
inc
xor
dec
pop
and
dec
xor
out
clc
mov
dec
mov
js
jb
cld
push
cmp
add
lods
jmp
push
add
mov
push
push
ss
adc
push
in
outsl
jp
jge
stc
mov
inc
fmul
mov
sbb
mov
or
and
xchg
mov
fldenv
js
cmc
lahf
cwtl
dec
pop
mov
call
cmp
repz
jnp
cmp
iret
adc
or
dec
movsb
repnz
xor
aas
pushf
lock
enter
in
leave
lea
or
repz
ret
loope
fistps
incb
dec
stos
stos
aam
or
pop
call
stos
xor
push
push
xchg
aas
pop
xchg
popf
xchg
mov
push
ds
dec
cmp
std
inc
test
or
stos
aad
sbbl
outsb
push
fildll
push
pop
ss
add
push
stos
xchg
xchg
movsb
lret
icebp
mov
aam
cmp
push
push
pop
sub
add
dec
xchg
leave
jo
sub
push
or
add
push
jle
fldz
or
sti
loop
jae
and
ds
dec
mov
jmp
sahf
inc
jbe
lea
sub
stos
js
and
adc
pop
cmp
mov
cmp
cmp
in
repnz
push
xor
pop
pop
inc
mov
push
mov
lret
jmp
sub
popa
cmp
jne
inc
test
cld
pop
nop
dec
adc
pop
cmpsl
addr16
pop
adc
inc
rcrl
pop
xor
mov
sub
mov
cltd
mov
inc
inc
cli
adc
test
push
repnz
cltd
fcompl
sarl
test
int
fsubl
sub
pop
inc
jae
mov
and
enter
out
pop
popa
inc
fldenv
mov
jmp
xchg
test
mov
and
jbe
stc
fs
stos
pusha
mov
jnp
in
rclb
mov
jl
adc
xor
mov
jne
xchg
xlat
test
test
sbbl
adc
dec
adc
inc
mov
idivb
inc
daa
xchg
int3
inc
test
or
sahf
out
ljmp
in
inc
enter
fsubs
enter
add
lea
xor
pop
jbe
jecxz
add
inc
or
sub
fwait
mov
pop
mov
jmp
push
mov
pop
es
xchg
dec
add
xchg
sbb
daa
jle
add
jmp
xlat
add
jb
xchg
cs
push
rcr
pop
xchg
or
mov
lcall
or
bound
mov
lret
test
pop
fidivs
add
jecxz
push
or
pop
test
jp
into
jb
inc
sbb
and
mov
movsb
inc
lods
jbe
call
hlt
fmul
aaa
call
pop
testb
xchg
pop
cmp
int
cmp
jp
dec
addb
cwtl
mov
adc
add
lcall
xchg
inc
dec
push
xor
mov
mov
out
cmp
sbb
cmp
lahf
push
repnz
xor
mov
sbb
xchg
out
popf
mov
ds
and
sub
inc
inc
das
lret
inc
scas
xchg
pop
inc
sbb
or
cmc
jl
dec
and
out
stos
xor
inc
jmp
cmpsl
mov
out
mov
dec
test
das
leave
stc
pop
mov
xchg
in
stos
pop
xchg
or
inc
fisubs
add
mov
xchg
xchg
adc
stos
bound
js
nop
push
fsubr
pop
or
psllw
fidivrl
aas
sub
inc
cs
jbe
cmp
mov
inc
iret
cli
gs
mov
aam
xchg
adc
cwtl
mov
pop
push
push
test
sub
sub
movsl
mov
push
fdivrs
pop
and
mov
cld
out
enter
jmp
xchg
fwait
xchg
add
or
fs
fldl
lock
lret
and
fcompl
push
xlat
das
xor
sbb
jnp
mov
cmc
shlb
adc
sub
in
sub
je
movb
out
mov
xchg
sbb
push
adc
add
jecxz
popf
enter
popa
cli
movsb
dec
cmp
jle
jnp
loope
xchg
dec
pop
and
sbb
outsb
xor
jb
pushf
daa
mov
fadds
std
xor
mov
sbb
mov
les
fcomi
ljmp
aaa
sub
sarl
mov
jno
lea
out
sbb
lcall
xor
es
and
sbb
dec
outsl
xorl
fs
popa
xchg
xchg
pusha
mov
gs
jle
out
add
inc
outsl
fldcw
mov
jg
and
aaa
aad
mov
jecxz
jp
leave
add
pusha
adc
repz
out
mov
incl
loopne
movaps
mov
lret
mov
lcall
pop
adc
fistps
movsb
jbe
outsl
mulb
cmp
sbb
rcrl
mov
jb
adc
dec
mov
sarl
aaa
mov
ja
cli
movsb
fwait
lods
or
loopne
lret
pop
fwait
in
fcomps
imul
sub
std
cld
sti
mov
sarb
daa
je
and
jb
retw
outsl
filds
stc
loopne
hlt
test
or
repz
out
add
push
rcrb
loopne
pop
mov
push
jmp
pop
sbbb
push
xchg
test
dec
je
mov
xchg
inc
xchg
jnp
adc
pop
xchg
and
mov
rorl
adc
sbbl
lcall
scas
push
ret
int3
sar
mov
sahf
dec
mov
nop
sti
or
repz
sti
push
fiaddl
arpl
addl
sahf
test
jle
imul
push
rcrb
ret
mov
or
outsb
mov
mov
and
sbb
jge
pusha
ljmp
push
in
test
adc
fsubs
push
fisttpl
call
stc
fcomps
xchg
lret
stos
sub
shr
test
pop
mov
or
aas
jnp
add
mov
jmp
popa
insl
or
fistps
push
push
push
int3
or
fldcw
pop
xchg
add
push
outsb
cmpsl
or
xor
jae
sbb
or
and
rcl
shll
push
popf
xchg
lock
aam
popa
push
movsb
add
xchg
jmp
insl
in
inc
loope
sbbb
jle
or
inc
jno
xor
dec
stc
push
aad
push
and
cmp
pusha
sbbl
repnz
ja
enter
xchg
int3
lret
and
clc
insl
cmpsl
addb
xor
mov
jmp
xchg
xchg
loope
jle
sbb
leave
mov
and
mov
aad
lret
jbe
push
xchg
or
dec
sti
loopne
fidivrs
sbbl
add
scas
mov
mov
inc
xchg
andl
into
lods
dec
sub
cmove
loop
or
popa
in
xor
adc
mov
decl
push
jb
loop
enter
imul
jg
or
and
push
pop
lock
fsubrl
pop
in
or
push
pop
sbb
dec
inc
mov
in
mov
and
rorl
enter
sub
loopne
iret
fldcw
clc
cmp
iret
fwait
xor
mov
pop
int3
les
popa
and
pop
adc
pushf
mov
in
cmp
xchg
ja
mov
fstps
pop
mov
jecxz
in
inc
push
popf
and
push
jns
push
in
xor
inc
fimuls
lret
xchg
pusha
lods
adc
mov
ret
mov
verw
aas
out
out
lret
arpl
pop
aam
jb
aad
dec
jecxz
ja
fnstcw
das
dec
xchg
add
xor
xor
jb
xor
sbb
mov
xchg
inc
push
adc
or
and
jg
test
push
dec
in
gs
cmp
and
scas
imulb
stos
dec
popf
insb
push
sarl
scas
in
aas
stos
arpl
xchg
loopne
pop
sbb
ss
cli
mov
aad
test
mov
cmc
test
lcall
fs
xor
sbb
stos
pop
xchg
xchg
jle
lea
sbbb
ret
sub
mulb
arpl
mov
insl
lods
jb
and
jns
inc
ljmp
push
jp
or
lcall
ss
fidivs
sub
mov
sarb
sub
shll
std
jae
sbb
dec
cmp
stos
inc
push
adc
xchg
mov
inc
js
cmp
mov
mov
cmpl
xchg
adc
mov
pop
xchg
bound
out
addr16
scas
jae
lods
ja
mov
jle
addl
sub
js
ds
mov
aaa
cmp
cmp
sbb
subb
mov
mov
pop
push
push
and
in
mov
mov
or
cmp
xor
test
call
jbe
and
xchg
movsl
mov
cmp
in
into
sbb
bound
or
inc
rcrb
sahf
mov
dec
imul
adc
inc
test
or
cmp
stc
mov
sti
fbld
cwtl
jg
jne
or
notb
jnp
jmp
cmpsb
xlat
ret
xchg
mov
mov
icebp
shl
sbb
pop
pop
push
xor
or
icebp
inc
fcoml
aad
mov
pop
in
lret
pop
shlb
mov
mov
std
or
andb
mov
push
add
mov
movl
mov
jo
testb
lds
push
idivb
mov
jbe
sub
daa
dec
stos
xorl
fdivrs
fsts
push
cmp
jnp
icebp
or
sbb
jmp
jno
rclb
cmc
sti
paddusw
add
add
add
add
mov
add
sbbb
add
pusha
add
addb
add
add
add
add
add
add
add
mov
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
dec
add
in
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
or
add
rolb
pop
add
add
add
add
add
add
add
inc
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
insb
ret
jl
add
nop
ret
mov
add
add
ret
add
add
lcall
add
ret
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
std
bound
push
addr16
inc
adc
cmpsl
jmp
cbtw
or
imul
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
dec
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
push
push
jmp
cwtl
sub
je
subl
adc
pusha
cld
adc
js
jmp
and
inc
nop
stos
and
inc
pop
leave
push
and
fwait
fwait
std
fldcw
add
sbb
loope
std
in
or
rclb
imul
test
adc
dec
rcrb
xor
xor
mov
xchg
orl
or
mov
pusha
imulb
push
add
les
cs
jno
sbb
add
jmp
bound
test
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
push
add
add
xchg
mov
ds
sub
incb
sti
sub
dec
add
lods
outsl
sbb
sbb
sti
fwait
add
add
pop
aas
dec
push
mov
xchg
pushf
cmp
push
add
mov
xchg
xchg
insl
adc
mov
push
mov
mov
add
push
ljmp
or
lret
stc
es
adc
add
stos
packsswb
in
test
add
mov
sub
add
clc
rorl
call
jb
sub
fmuls
lea
sub
je
mov
inc
pushf
mov
aas
test
inc
adc
mov
jmp
dec
add
shrl
data16
or
outsb
lea
add
pushf
inc
mov
adc
loopne
jg
sti
push
jno
add
cmp
ja
test
repz
arpl
dec
hlt
mov
cmp
xchg
push
pushf
adcb
lea
jb
pop
aad
xchg
jb
mov
lock
rclb
enter
in
jne
mov
inc
add
cltd
push
sbb
add
adc
rcrl
inc
xchg
cltd
negl
cmp
loop
mov
push
pop
stc
and
sbb
push
push
call
xchg
push
cmp
cld
clc
cld
push
sti
inc
enter
fldcw
mov
orb
or
pop
mov
loope
jecxz
pop
pop
push
loopne
test
sbb
or
adc
mov
and
or
les
xor
push
adc
scas
rorb
bnd
adc
dec
dec
bound
aas
or
xor
ss
mov
jl
addr16
push
mov
int
jae
xchg
cmp
lds
pop
inc
sub
xor
outsl
pop
xor
xchg
movsb
xor
scas
dec
lar
das
mov
jmp
and
lret
inc
sbb
or
in
dec
adc
xor
cld
pop
add
sub
outsl
das
fisubrs
add
sbb
sub
xor
add
jnp
add
jae
test
sbb
mov
jnp
ljmp
pop
sub
int3
into
ret
mov
lods
sbb
in
test
mov
je
push
cwtl
or
dec
cmp
xchg
and
call
test
add
pop
std
testb
pop
and
stc
sub
add
jmp
or
or
popf
daa
inc
and
testl
call
sub
cs
insb
xchg
int
inc
mov
or
add
orb
leave
popa
icebp
mov
in
or
cmp
sbb
jnp
adc
sbb
jne
stc
lahf
mov
push
addb
mov
lea
push
xchg
xor
popf
test
jmp
nop
pop
dec
or
cmp
push
aas
and
push
test
mov
inc
xor
lds
fisubs
js
add
loopne
icebp
add
test
ret
mov
nop
js
nop
add
mov
jecxz
shlb
sbb
mov
bswap
cmpsb
dec
roll
inc
or
pop
pop
pop
sub
ret
xchg
inc
cld
imul
sub
loopne
push
add
lret
push
call
and
ret
ror
sti
and
push
push
jne
ret
pop
push
pop
xchg
pop
add
jmp
popa
addl
outsb
leave
push
adc
int3
int3
pushf
inc
sbbb
pop
ret
je
dec
ja
mov
in
sub
push
clc
lods
cmp
xchg
bound
or
sub
cvtdq2ps
incb
mov
vxorps
incb
add
push
push
clc
and
sti
ret
shr
jg
bnd
add
pop
dec
pop
and
jmp
xchg
jbe
jae
shll
adc
sbbb
popa
ret
jmp
push
and
nop
mov
push
sbb
call
push
xor
add
je
les
xor
pop
jmp
mov
ud2
mov
adc
out
cmp
xchg
insb
dec
cld
inc
ds
adc
testb
xorb
movzbl
sub
pop
dec
je
dec
mov
xor
sub
ret
and
or
rclb
xchg
inc
push
push
add
cli
jae
cmc
int3
inc
jmp
enter
mov
cmp
sub
sub
dec
inc
pop
xor
or
js
ret
aam
push
push
mov
inc
pop
ret
aas
add
jbe
push
push
call
lds
push
push
mov
in
xchg
pop
std
cmc
xor
int
inc
mov
sbb
jae
push
jge
sub
rorl
mov
add
pop
movsl
sub
push
mov
push
sbb
movsb
push
in
roll
stos
loop
adc
cmp
inc
cmp
ret
sub
mov
call
inc
add
lock
push
dec
push
xchg
fsubl
sub
lea
outsb
inc
dec
sub
loope
dec
mov
pop
xchg
and
jl
dec
add
mov
sub
push
dec
lahf
or
and
push
push
testb
in
loope
adc
inc
je
mov
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
icebp
movl
sub
pushf
dec
mov
fiaddl
stos
inc
or
push
nop
dec
add
lock
andb
pop
sub
and
or
dec
or
push
test
and
push
push
push
es
call
sbb
mov
ret
adc
dec
or
adc
adc
mov
adc
inc
testb
xchg
leave
xchg
aas
daa
mov
rclb
je
in
test
cmp
jmp
and
fdivrl
mov
push
adc
rcrb
testb
xor
popa
mov
jg
pushf
push
inc
or
sub
add
out
push
inc
pop
cmp
ret
pop
outsl
pop
dec
stos
jb
add
inc
inc
lods
jmp
adc
mov
scas
repz
xor
icebp
mov
call
and
or
add
xor
pop
movsl
xchg
or
bound
andb
cmp
mov
jl
sbb
rcrl
cmp
cltd
push
lea
cmp
aad
or
add
sbb
and
inc
xor
and
inc
test
shrb
mov
lea
jp
sti
xor
push
pop
cmpsb
hlt
lret
jo
add
pusha
insl
jae
in
addl
arpl
add
and
mov
adc
and
jne
in
rclb
icebp
popf
cmp
lahf
fs
arpl
insb
repnz
in
je
bound
ss
fs
inc
jno
rolb
cltd
andb
insb
and
xchg
xor
sub
jne
xchg
xor
push
dec
fistpll
inc
outsl
js
xorl
push
je
adc
imul
fsubrs
js
imul
pusha
cwtl
push
icebp
sti
orl
inc
stc
je
ljmp
orps
je
mov
arpl
rorb
inc
sbb
addr16
and
jo
and
adc
xchg
inc
imul
inc
pop
cmp
xor
dec
outsb
mov
inc
jecxz
addr16
hlt
sub
mov
jnp
push
xchg
outsl
push
cmp
xchg
testb
or
inc
testl
xchg
lock
sub
inc
or
xor
stos
cltd
mov
sbb
and
dec
and
dec
xor
lahf
push
cmp
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
aam
add
pushf
daa
add
mov
add
mov
ret
sub
add
add
inc
add
ret
and
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
mov
rolb
or
add
sbbb
sbb
add
cwtl
add
lods
add
shrl
add
mov
iret
add
add
add
dec
out
mov
