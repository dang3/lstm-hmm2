call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
and
test
clc
mov
popf
fists
sub
dec
sub
jl
or
sbb
in
cltd
cld
test
lods
fnstcw
insb
sbb
cmp
cmp
sbb
in
sbb
das
int3
jg
fldcw
pushf
or
and
pop
pop
imul
sbb
in
mov
xor
pushf
jge
cli
jg
jo
sub
dec
mov
xchg
sub
sub
dec
aad
in
mov
cltd
push
es
ret
xchg
shl
sbb
dec
rcrb
in
enter
hlt
loopne
stc
mov
test
sti
test
popf
mov
sbb
dec
pushf
mov
aam
lcall
std
aam
in
enter
lods
call
pop
dec
imul
jg
insb
jl
xchg
push
sbb
lods
pop
inc
lods
jae
lret
dec
jge
mov
outsl
mov
or
cltd
add
int
test
insb
inc
add
icebp
xchg
loope
sub
pop
int3
rcrl
sub
imul
int3
aad
leave
lods
popf
mov
sti
insb
mov
daa
pop
sub
cmp
or
pop
sti
sub
lcall
cwtl
in
push
and
and
inc
sbb
lods
adc
mov
jecxz
pushf
xor
pop
adc
xor
inc
cmp
sbb
cmp
mov
clc
test
rcr
jmp
insb
sbb
cmp
pop
cmp
or
sbb
in
cltd
cld
test
lods
fnstcw
insb
sbb
cmp
pop
cmp
or
sbb
in
pop
jmp
test
stos
mov
popf
loop
jne
mov
fldl
lret
std
lret
scas
test
lahf
cmp
lret
inc
mov
or
enter
lods
pop
mov
repnz
mov
inc
test
ret
and
jbe
cmpl
cmp
mov
shll
add
xchg
repnz
mov
pop
repnz
lret
xchg
lock
mov
bound
in
cmp
pop
dec
xchg
or
imul
aam
sarb
push
xchg
xchg
jle
gs
or
insb
das
popl
call
mov
fisttps
scas
pop
sahf
adc
cs
sub
int3
push
adc
xchg
in
or
mov
inc
adc
ljmp
xchg
ficomps
ss
ror
and
xchg
jge
pusha
jae
lods
je
stos
popa
xchg
mov
lahf
jge
out
lods
scas
xchg
xor
mov
pop
add
sbb
ret
jbe
xor
add
jl
mov
test
adc
fadds
das
mov
stos
or
push
sub
addr16
std
inc
xchg
bound
insb
xchg
inc
mov
mov
cli
cmp
mov
popf
ficompl
jle
cmp
inc
and
lahf
shrl
pop
fisttpl
in
mov
out
imul
mov
stos
cld
insl
mov
cli
dec
das
lods
inc
inc
out
xor
xchg
and
in
lock
mov
push
or
out
xchg
arpl
dec
mov
push
sub
mul
push
aad
pop
dec
add
fisubrl
das
dec
daa
insl
cli
jmp
push
mov
xor
in
sar
mov
xor
mov
fidivl
push
or
jne
pop
setno
pop
mov
mov
fneni(8087
mov
in
push
test
pop
push
mov
fistps
xor
mov
mov
push
rep
jns
mov
sahf
push
cmp
clc
jge
lret
or
xchg
std
negb
out
clc
out
jecxz
xchg
lea
mov
mov
nop
ja
mov
jle
pushf
xlat
lea
das
iret
lods
jb
cli
arpl
push
mov
jl
in
pop
xchg
or
jnp
pop
pop
std
inc
ret
jecxz
or
call
lret
mov
fiadds
mov
pop
enter
in
jbe
inc
imul
sbb
push
push
out
add
xlat
jnp
sub
dec
out
insl
xchg
std
cs
mov
sub
fsts
pop
movsl
add
rcl
and
or
mov
mov
cltd
pusha
addr16
and
xor
xchg
out
negl
std
and
cmp
xor
out
lret
call
mov
data16
fwait
shr
jp
adc
xor
imul
shl
pop
sti
inc
adcl
out
shr
sti
call
daa
push
jg
lret
jne
pop
daa
imul
cli
push
mov
or
push
sub
lods
jns
and
test
lea
dec
mov
adc
pusha
scas
mov
xlat
xchg
mov
dec
sub
cmp
nop
jmp
mov
mov
hlt
pop
add
in
fdivs
out
call
aas
out
cmp
xchg
repnz
lahf
out
inc
cmpsl
daa
inc
movsb
call
pop
push
jno
arpl
push
imul
push
loop
cs
fidivs
sub
dec
hlt
sub
add
mov
fucomip
push
xchg
aad
mov
mov
sub
mov
mov
push
and
adc
push
cmpsb
jl
cmc
mov
xor
mov
inc
push
xchg
rol
outsb
call
cltd
sbb
je
fsubr
push
inc
mov
or
mov
repnz
and
jo
ss
inc
in
cmp
or
dec
in
test
loope
test
xchg
std
push
mul
and
add
push
pop
mov
in
sti
dec
pusha
xor
jae
jnp
xor
addl
push
pop
mov
out
or
add
out
movsb
jg
popl
mov
addl
out
pop
inc
adc
cmp
dec
movl
inc
add
xor
or
test
hlt
push
cmpsl
cmc
scas
mov
mov
ja
or
daa
jbe
notb
jo
sahf
insb
negb
scas
xchg
pop
inc
inc
and
jecxz
mov
jbe
cli
or
jecxz
add
mov
repz
shlb
es
xorb
xchg
mov
cmp
and
add
dec
xchg
fstps
jmp
and
lahf
pop
mov
mov
or
mov
cld
or
cmp
and
cmp
adc
sbb
dec
cmp
xchg
cwtl
adc
pop
rorl
adc
mov
jnp
jno
clc
or
mov
xchg
int
adc
cmp
xchg
stc
adc
insl
sbb
repz
mov
stos
stos
nop
mov
or
and
add
mov
or
arpl
mov
dec
hlt
lcall
int3
in
mov
sub
testb
jle
ret
and
ja
cmpsl
and
pop
das
or
je
int
mov
inc
je
inc
loop
ss
jae
mov
ljmp
mov
in
or
jecxz
jno
rcr
pop
xor
mov
mov
fs
sub
out
call
and
dec
cld
ret
xchg
bound
aam
adc
cli
mov
fisttps
add
xchg
fs
das
jnp
addr16
fisttpl
test
out
rcrb
outsb
lret
les
sbb
mov
lahf
inc
mov
insb
repnz
push
jp
mov
pushf
mov
inc
cwtl
mov
test
xchg
je
rol
push
addr16
frstor
rclb
add
jl
mov
mov
daa
and
rorb
pop
xor
xor
ficompl
push
lods
subb
dec
loopne
xchg
push
stc
mov
push
jle
rcl
arpl
mull
mov
outsb
pusha
incb
jbe
xchg
xor
fnsave
inc
lcall
jb
movsl
mov
jb
js
rol
adc
sbb
push
ss
arpl
loope
dec
je
rcll
pop
cmc
mov
push
push
jl
sub
mov
mov
movsl
sub
int
es
repz
lods
ud1
popf
outsl
mov
xor
add
dec
mov
jmp
mov
sahf
shrl
in
pop
pop
push
add
xor
lods
cli
mov
pop
pop
insl
pop
es
sti
cmp
cmp
adc
repz
ret
pop
or
sbb
insl
mov
xchg
cmp
and
movb
push
and
jnp
outsb
xlat
movl
add
xorb
movsb
outsb
ljmp
dec
ficomps
dec
sbbb
pop
jns
adc
push
and
or
sub
loop
pop
cvtps2pi
std
inc
rorl
ja
daa
je
loope
mov
mov
pusha
xlat
lds
mov
in
cmp
xor
mov
push
adc
jmp
in
cwtl
test
sbb
add
inc
dec
out
mov
pop
push
pop
pop
aas
xchg
pop
xchg
sub
sub
cmp
jl
repz
xor
outsl
jecxz
add
push
mov
out
mov
clc
orl
loope
xchg
adc
mov
test
push
out
fnstsw
adc
mov
test
pop
adc
adc
out
fwait
sbb
xchg
push
movsl
insl
mov
jb
push
mov
out
mov
lcall
dec
adc
mov
cmpsb
nop
mov
maxps
js
xchg
mov
cmc
push
int3
add
in
sbb
pusha
test
ja
lcall
loopne
jo
pop
fwait
mov
divb
adc
add
xchg
sub
adcb
insl
lahf
lods
or
bound
out
rol
paddw
and
adc
shlb
je
cwtl
mov
js
fnstsw
xor
arpl
mov
inc
inc
push
and
xchg
outsb
mov
inc
dec
insl
dec
cli
inc
jge
mov
outsb
ljmp
pusha
sbb
xor
out
inc
mov
shr
push
rcrl
int
inc
add
dec
jb
std
sub
mov
push
dec
xchg
push
jnp
fists
stos
cmpsb
mov
cmpsb
push
push
inc
mov
mov
clc
into
js
inc
push
add
cmp
and
and
fnsave
xor
js
cmpsb
les
sub
lods
les
xchg
andl
pop
lods
fld
inc
repz
jl
cmp
xchg
cmp
or
pop
push
imulb
add
insl
test
mov
insl
jae
clc
cmp
sbb
jo
adc
cltd
movsl
inc
shll
mov
mov
mov
fsts
adc
pop
or
fcmovnu
sub
sbb
sbb
or
movsl
sbb
je
lea
jecxz
add
push
pop
jb
cmpsb
push
lea
repnz
cmpsb
mov
jns
adc
jl
pop
push
cmp
pushf
and
dec
movsb
leave
into
out
or
test
addl
ret
jle
inc
fdivl
xor
mov
fisubrs
fstps
lcall
lods
and
lahf
add
adc
pop
cmp
aas
rcrl
addb
ja
or
daa
icebp
push
push
mov
orb
adc
lret
mov
ret
repnz
xor
sarl
sub
std
imull
mov
cmp
movsl
mov
push
shlb
cmp
int
aam
inc
outsb
sahf
lret
mov
and
jnp
fidivs
push
jmp
inc
or
xchg
and
pop
fists
inc
loope
dec
arpl
popl
mov
movsb
fs
or
in
lahf
daa
bound
mov
stos
pop
xor
les
push
add
nop
sub
loop
icebp
ds
adc
xchg
and
jp
ret
cmp
mov
dec
adc
cmp
in
stos
xchg
jb
insl
jle
daa
scas
jl
push
cltd
add
call
inc
popa
lock
xor
xchg
mov
xchg
imul
dec
jp
sub
in
xchg
pop
outsb
pop
or
cmpsb
mov
mov
inc
lahf
jne
pop
pop
outsl
dec
lret
movsb
js
rclb
dec
xchg
popa
pop
jno
cmc
pop
in
lret
into
rclb
cmpsb
mov
jno
loopne
lret
mov
aaa
fsubrl
cmp
ret
ret
loope
sbb
add
jne
js
push
mov
incl
je
std
mov
shrl
inc
lds
mov
inc
or
push
push
enter
enter
ds
mov
in
scas
mov
lock
mov
jmp
and
in
sub
inc
xchg
popa
aaa
mov
faddl
mov
mov
mov
int3
loope
mov
xor
sbb
pusha
jmp
in
iret
pop
insb
cmp
out
lock
lds
outsl
inc
arpl
push
sbb
add
fcomps
jbe
iret
or
jae
mov
jns
xor
cmp
enter
push
xchg
addr16
mov
sahf
popa
cmp
adc
jno
pop
sbb
jmp
inc
pop
push
cmpsb
or
addb
inc
je
and
sti
mov
mov
mov
mull
mov
test
popa
xor
lock
xchg
and
out
sub
int3
mov
aas
les
mov
call
inc
inc
gs
add
sar
cs
jmp
js
mov
outsb
sbb
stos
arpl
xchg
inc
jl
push
inc
in
sbb
inc
enter
mov
out
movsl
ret
sub
fbld
aas
mov
sub
cmp
ss
stos
insb
add
fsub
add
int3
scas
xorl
stc
loop
mov
cli
lcall
int3
dec
lock
adc
cmp
daa
js
dec
out
push
dec
mov
les
or
jbe
mov
xchg
dec
jnp
sahf
fldenv
add
es
mov
push
mov
push
rolb
mov
lahf
out
int3
cli
popa
inc
scas
enter
and
popfw
fdivrl
nop
xchg
mov
pushf
jle
mov
stos
jmp
data16
push
push
xchg
sub
sbb
jge
sbb
and
jle
repnz
mov
andb
into
cmp
dec
mov
mov
imul
xor
call
sahf
icebp
add
mov
mov
mov
xor
aad
icebp
shlb
and
mov
sbb
fisttpll
bound
shl
cwtl
loope
add
loop
and
lret
icebp
fidivrs
jns
mov
ret
nop
daa
ss
push
cmp
xchg
sbb
lea
mov
ds
pop
pusha
cmp
call
xchg
test
xchg
in
imul
insb
sub
cs
and
stos
adc
lods
test
int
push
sbb
cwtl
repnz
xchg
rcl
pop
add
mov
xlat
sbb
push
hlt
ja
imul
jge
xor
enter
jmp
jl
cltd
loopne
in
or
jo
lret
ret
mov
movsl
sahf
repnz
int
and
mov
adc
mov
mov
sub
xor
mov
fbstp
jmp
call
xchg
jmp
jmp
jns
push
mov
inc
out
xorb
pusha
sub
adc
push
pop
mov
xchg
into
pop
lods
fs
inc
push
and
in
sbb
dec
je
bound
pop
cmpsl
stc
jbe,pt
notl
fs
aas
jecxz
int3
sub
mov
and
xlat
sub
pop
mov
jmp
stos
mov
arpl
insl
lahf
mov
mov
or
js
xchg
into
fsubs
xchg
dec
and
mov
jmp
add
or
adc
mov
aas
cmp
push
xchg
xor
popa
mov
dec
xchg
sbb
or
sbb
push
movl
lret
sub
xchg
pop
mov
adc
mov
lods
test
fistl
pop
adc
dec
pop
push
dec
and
inc
dec
lock
cmp
xor
inc
adc
mov
popa
cmp
mov
enter
lds
xor
dec
les
xchg
cltd
adc
inc
std
mov
xchg
xchg
push
pushf
jge
push
jns
imul
fsubrs
jb
and
pop
das
adc
pop
std
lret
fmull
xor
hlt
add
xchg
lret
xor
or
xlat
sub
in
fnstenv
adc
mov
cmpb
jo
outsb
inc
bound
fabs
mov
rorb
jmp
pop
add
lret
push
jl
ljmp
mov
dec
bnd
fidivs
cld
cs
lahf
push
mov
into
add
inc
les
mov
fcoml
lods
fcomi
push
movsb
mov
rorl
xchg
or
pop
hlt
repnz
pop
fsts
and
insl
stc
sahf
sub
adc
fnsave
stc
aam
lret
or
xor
gs
imul
addb
sub
dec
pusha
cmp
nop
ss
cltd
mov
sahf
mov
xor
mov
xchg
mov
in
jecxz
lcall
cmpsb
push
mov
push
dec
push
fidivrs
and
lock
icebp
mov
decb
cli
mov
adc
cmpl
xlat
push
mov
dec
icebp
loopne
or
pop
jmp
push
add
mov
mov
mov
sbb
push
jge
cmp
out
out
mov
xchg
stos
popf
pop
mov
xchg
into
int
xchg
push
mov
rolb
adc
sbb
mov
or
stos
or
std
xchg
jmp
aad
and
movsb
mov
jle
push
lds
test
movsb
push
jmp
xor
mov
inc
inc
dec
stc
fstps
dec
repz
xlat
mov
adc
subl
cmpsb
push
addr16
ret
mov
stos
bound
xchg
push
fcoms
addr16
lret
out
lret
push
jb
in
mov
fistpll
xchg
frstor
das
cwtl
fistps
cltd
movsl
inc
imul
daa
cli
cltd
psraw
dec
ljmp
xor
mov
jg
sub
xchg
adc
xor
mov
pop
mov
and
mov
in
loope
push
out
fists
rorb
iret
fisubs
pop
repz
xlat
and
xchg
and
jb
xor
lcall
test
xchg
shll
push
lret
enter
adc
inc
aas
int
and
jl
ret
in
hlt
call
insb
sbb
movsl
nop
xlat
xchg
nop
pop
jns
push
cmp
lcall
mov
jae
dec
int
loop
dec
mov
mov
sbb
mov
jge
cmpsb
pop
xchg
daa
loope
adc
cmpsb
lock
and
mov
lret
lods
imul
addr16
aas
sbb
jo
sub
clc
pop
ds
pop
imul
cmpsl
pop
pop
test
sbb
shll
xor
and
add
jbe
ljmp
and
ret
fsts
mov
out
mov
iret
adc
mov
adc
out
pop
adc
xchg
mov
pop
cmp
aam
cli
lock
mov
mov
mov
cmp
cli
mov
stos
dec
lcall
jnp
call
lods
inc
mov
jmp
push
push
mov
inc
xlat
mov
test
js
subb
pop
push
cmpl
inc
aam
lods
test
pop
negl
popa
dec
jg
jge
inc
sti
push
mov
xor
dec
sbb
inc
rcll
hlt
cmp
adcb
ja
xchg
or
ja
fs
ret
into
xor
fistps
ljmp
push
lds
push
xor
test
pop
pushf
dec
sub
jne
jo
and
sub
jmp
jns
and
fstpt
out
sahf
aas
push
xchg
dec
adc
aaa
lea
sar
and
enter
xor
sub
repnz
inc
xchg
cltd
aas
pusha
lea
rclb
mov
jle
cmp
push
mov
inc
mov
push
xor
push
faddl
cltd
fs
pop
ds
in
sub
jle
fwait
lcall
inc
dec
aam
in
jb,pn
cwtl
stos
repz
fwait
lahf
es
mov
repnz
push
cmp
popf
out
sub
xchg
aaa
pop
push
out
sbb
inc
repz
xchg
cmc
fmuls
sti
mov
fwait
sub
mov
enter
mov
xor
movsl
test
stc
je
out
popa
pop
lods
lret
pop
and
add
adc
xchg
fcoml
int
and
add
fstpt
xchg
mov
xor
xchg
or
xchg
add
icebp
mov
cwtl
shll
dec
jecxz
cmc
xchg
movsb
in
shrb
sti
push
mov
lods
andb
aam
cmovns
sub
enter
rorl
push
sti
es
test
xchg
outsl
loopne
or
inc
fadd
in
adcb
pop
fwait
cvtdq2ps
pop
imul
push
outsl
and
xlat
mov
xlat
pop
fmull
xchg
in
and
xor
repz
mov
xchg
push
jle
adc
xchg
add
out
xchg
inc
xor
pop
je
xchg
das
inc
push
vcvttps2uqq
arpl
push
inc
jge
or
or
push
pop
pop
push
pop
jb
inc
mov
mov
sahf
in
lcall
push
cltd
sbb
pop
inc
lea
and
fistl
jmp
xlat
inc
sub
pop
jmp
ds
dec
ficompl
mov
pop
outsl
pushf
sbb
icebp
or
jnp
shl
sahf
mov
repz
bound
mov
cmp
clc
pop
xor
cmp
and
and
and
xchg
lea
cs
daa
scas
dec
push
or
sub
inc
ss
out
dec
mov
mov
sbb
in
or
lock
add
sub
mov
negl
arpl
and
mov
or
mov
enter
sbb
icebp
sub
or
popa
ror
push
lock
sbb
jmp
add
xchg
pop
bound
popf
fistl
scas
sub
or
imul
and
mov
xchg
cmpsl
add
push
int
arpl
pop
dec
jecxz
aaa
sub
mov
dec
jmp
and
inc
sti
fcomp
clc
stc
push
pop
imul
push
inc
and
sar
stos
stc
imul
movsl
mov
movsl
fmul
lods
fnstcw
insb
sbb
cmp
pop
cmp
or
sbb
in
cltd
cld
test
lods
fnstcw
insb
sbb
cmp
pop
cmp
or
sbb
call
mov
mov
or
dec
cmp
cmp
or
sbb
in
mov
and
xchg
fmul
lods
leave
cmp
or
arpl
xchg
out
orl
movsb
rol
xchg
repz
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sbb
sub
pop
fiadds
aad
imul
fstps
lret
stc
jle
outsb
jge
or
pop
fimuls
jns
imul
fdivrs
test
dec
stc
cmp
outsb
mov
mov
sub
addr16
imul
rcrl
cs
mov
outsb
ja
inc
sarl
roll
pop
sbb
mov
cmpb
pushf
cltd
leave
vpcmpeqd
lods
cmc
enter
fsubrs
hlt
clc
in
outsl
idiv
icebp
cmp
push
mov
stc
cs
aas
out
dec
pushf
dec
dec
aas
ret
or
jno
pop
add
jecxz
icebp
lods
test
mov
adc
or
cmpsb
fisttps
xchg
adc
rcll
xor
mov
sub
jno
cmp
bnd
insl
mov
shr
pushf
dec
leave
mov
and
jno
fcom
push
cmpsb
stos
mov
push
stos
imul
push
dec
lcall
sahf
pop
mov
mov
xor
jns
iret
out
pop
push
adc
iret
ds
cs
pop
ret
dec
lret
jle
pop
jo
jnp
dec
xlat
push
ss
into
or
jnp
jp
push
int3
push
nop
jl
das
push
sahf
insb
mov
dec
fdivl
xchg
sub
mov
fstpt
pop
roll
cmp
test
jne
fstpl
jp
or
dec
into
jns
imul
mov
pop
leave
dec
stc
jle
outsb
sbb
sub
jns
imul
mov
pop
leave
dec
stc
jle
outsb
sbb
jmp
jb
or
lock
jp
fisubl
sub
inc
pop
pusha
rcrl
jg
add
inc
mov
int3
mov
and
out
dec
lock
push
push
mov
inc
adc
xchg
mov
sub
add
cmp
lret
sbb
cmpsb
outsb
sbb
pop
shlb
pop
push
lahf
subl
sub
fldl
fisttps
in
push
ja
fidivrl
stc
mov
aaa
je
push
and
cmp
mov
sub
test
mov
jl
push
lcall
mov
push
fs
push
dec
jecxz
sub
add
aam
jp
sub
and
mov
sub
mov
mov
cmp
mov
push
jle
pop
insb
lods
fcomi
sbb
add
into
xlat
xchg
cmp
jge
adc
in
push
jge
test
pop
in
adc
inc
or
fildl
xchg
cmp
pop
dec
dec
xchg
xor
das
push
in
cmc
and
pop
or
fisttpl
mov
jbe
pop
stos
test
aas
push
cmpsl
rclb
ret
add
daa
fiadds
das
popa
pop
sbbl
fs
jb
cmp
add
incl
sub
adc
mov
cmp
fsubrl
pushf
loope
aas
inc
mov
int3
jns
fs
xchg
dec
stos
sub
adc
and
outsb
sub
add
xor
cmp
iret
std
test
les
in
xchg
pop
or
frstor
fnstenv
fcmovu
mov
lea
jne
outsl
xor
pop
setnp
adc
mov
shrb
mov
xor
inc
pop
nop
and
pop
scas
insl
dec
into
popa
rcrl
sbb
por
out
and
sbb
in
pushl
les
ret
insb
push
lcall
and
stc
jne
mov
jne
sub
push
pop
xchg
inc
mov
outsb
xor
sti
out
leave
sbb
mov
cmp
mov
insb
ds
int3
cmpsl
lret
dec
mov
xchg
scas
and
popa
andb
fwait
mov
fstpt
jb
xchg
inc
ret
ret
scas
mulb
adc
jns
or
stos
xor
push
dec
jb
xchg
loopne
xchg
stc
push
jp
cli
bts
fsubp
xchg
push
inc
ljmp
push
aam
jp
add
je
mov
imul
lcall
loopne
mov
shr
fisubl
outsb
int3
mov
dec
inc
mov
mov
mov
les
push
mov
fcoml
subl
leave
lahf
push
sahf
push
sub
stc
ret
ret
inc
sub
daa
cmp
xor
addr16
sub
hlt
adc
addr16
fistpll
cmp
hlt
inc
xor
daa
add
fucom
fisubl
andl
aad
xchg
cmpl
call
adc
xor
movsb
insb
xorb
and
lods
mov
das
shll
lea
or
call
stc
incb
mov
fmull
xchg
aam
mov
push
fwait
shlb
adc
fsin
jb
leave
test
clc
xor
jnp
cmp
out
or
hlt
into
xor
mov
pushf
outsl
lods
out
lock
mov
push
cmp
sbb
pushf
adc
and
imul
push
out
inc
mov
xchg
mov
fstpl
pop
mov
mov
jnp
jl
inc
mov
or
sub
leave
push
or
ds
jge
mov
push
leave
jno
sbb
xlat
sub
inc
adc
lcall
sbb
mov
inc
jnp
lock
call
nop
lock
seto
xor
movsb
sti
test
push
cmp
sub
imul
sub
sub
lods
cwtl
jle
adc
jns
notb
in
dec
mov
aam
inc
aam
push
sbb
arpl
movsb
cld
mov
loope
dec
and
int
push
addr16
cmp
outsl
sbb
sbb
and
dec
mov
mov
bound
rcrb
nop
push
push
jb
outsb
faddl
and
dec
aam
sbb
test
mov
sbb
xlat
and
mov
sbb
dec
inc
pop
lea
aas
cli
ss
xor
or
shll
lods
test
scas
jge
sbb
xlat
cmp
orl
push
hlt
div
mov
scas
cmpsb
adc
and
xlat
sbb
jecxz
cld
inc
adc
pop
js
sti
mov
jmp
pop
mov
cmpsb
inc
sbb
xchg
inc
xchg
clc
mov
ss
push
add
push
fstpt
dec
mov
popf
clc
pop
mov
sub
jmp
push
pusha
sbb
stos
out
pop
iret
add
jne
push
add
push
xchg
int3
int3
out
imul
fdivl
jge
or
cmp
add
repz
adc
dec
aam
repz
adc
sbb
and
sbb
fildll
ja
sbb
shll
out
popa
mov
push
push
dec
outsl
leave
dec
add
mov
jbe
sub
xor
mov
sub
sbb
sub
call
frstor
lods
aas
aad
mov
jo
arpl
xor
push
cwtl
adc
out
out
jg
xchg
icebp
mov
fimuls
push
nop
mov
scas
loop
pop
or
outsb
inc
dec
mov
hlt
gs
test
rcrb
xchg
mul
adc
mov
or
pop
inc
mov
push
jecxz
sub
mov
fisttpl
out
loopne
adc
lea
rolb
push
inc
xchg
outsb
out
jl
sbb
inc
inc
shl
das
repz
ljmp
daa
push
sbb
fisubrl
sub
fsubrl
shrb
xor
data16
ror
adc
aas
push
xor
fdivl
mov
rcr
adc
mov
test
inc
dec
aaa
fcmovu
mov
pop
in
pop
cmp
loop
xchg
inc
mov
sub
cmp
je
dec
mov
cmp
enter
out
adc
mov
cmpsb
jno
push
repz
xchg
sub
and
jge
add
loopne
ret
or
ss
movsb
iret
sbb
pop
shll
sub
sub
je
inc
rcll
loop
jns
adc
in
notl
adc
pop
out
cmp
lret
push
sarb
sbb
jp
push
iret
lock
pop
jo
mov
insb
jno
sbb
push
mov
je
xchg
shrb
loope
mov
cwtl
icebp
shrb
ss
sbb
push
clc
cli
leave
jmp
dec
dec
fwait
jge
pop
mov
jl
das
cmp
jle
pusha
jp
inc
fiadds
push
jbe
push
jle
cmc
popa
lcall
sbb
pushf
insb
push
sub
loop
scas
jbe
js
fcomps
frstor
push
xor
sbb
xor
out
sub
sub
cmc
jp
or
shrl
sbb
jns
fstps
clc
or
adc
pop
lcall
loope
shlb
mov
rcl
jmp
mov
push
inc
push
sub
dec
push
or
push
pop
les
jl
mov
xor
and
add
jnp
pop
ret
daa
xchg
insb
sahf
out
sbb
sbb
xchg
push
dec
out
and
fwait
incb
cli
mov
pop
lahf
leave
jmp
and
mov
jne
gs
adc
pop
mov
or
pop
lds
jo
mov
dec
icebp
mov
mov
sahf
mov
jb
fwait
cs
stos
xorl
mov
repz
xor
dec
and
lock
cltd
fsubrs
mov
mov
in
xor
sbb
in
test
test
sbb
jecxz
cmc
adcl
out
fbstp
out
mov
nop
mov
stos
adc
xchg
inc
push
jg
jecxz
lds
daa
adc
mov
xchg
mov
test
mov
xchg
test
sbbl
jp
mov
or
lahf
jo
insb
imul
cmp
mov
js
jns
pop
popf
xchg
mov
repz
xchg
sbb
jl
out
cmpsl
sub
in
ja
insl
push
push
push
xchg
or
lret
lret
jmp
addb
xchg
int3
jb
out
in
push
shll
mov
imul
das
stos
mov
mov
adc
fldl
out
mov
adc
into
sti
int3
jnp
jb
mov
out
dec
jae
add
adc
dec
mov
or
mov
je
push
jb
imul
push
int3
sarl
push
in
dec
adc
lock
push
inc
out
addb
repz
int
cmp
mov
cli
arpl
in
mov
rcl
xorl
fdivrs
xorl
dec
xchg
and
jae
ja
ja
aam
loop
out
lcall
pusha
out
push
ds
mov
xchg
mov
out
mov
xchg
mov
push
sbb
jns
mov
mov
daa
inc
mov
sahf
or
dec
xor
sbb
loope
push
adc
imul
mov
jp
add
push
movsl
jo
dec
push
adc
xor
jecxz
push
cs
mov
jbe
jp
jo
sbb
dec
rcrl
mov
mov
jp
rep
scas
xchg
pop
ret
mov
dec
dec
out
lock
dec
add
aas
pop
push
into
lods
push
mov
enter
or
push
repnz
pcmpgtw
inc
cmp
pop
sbb
mov
mov
cltd
and
andl
popf
and
inc
daa
pop
cmp
imul
pop
iret
loope
std
jae
mov
push
pop
loopne
mov
inc
xlat
jae
setp
sub
push
js
cmp
int3
in
lret
sbb
rol
sub
push
dec
test
pop
jge
gs
xor
idivb
sub
and
jp
divl
mov
sbb
push
das
inc
sub
add
xchg
je
sub
stos
cmp
push
add
in
xor
mov
ret
xor
sbb
add
enter
aam
push
insb
rorb
push
jne
cmp
outsb
jp
mov
jb
add
icebp
dec
je
aas
mov
rorl
and
mov
xchg
push
mov
aad
loopne
mov
mov
or
fwait
ret
xchg
mov
cli
lods
shll
gs
and
mov
pop
push
mov
fimull
outsb
xchg
mov
sbb
dec
subb
jb
es
lods
movsb
cmp
testl
addb
mov
fdivl
cmpsl
mov
adc
inc
adc
add
es
arpl
push
in
test
mov
sti
int3
out
lds
ret
sbb
ja
mov
aas
int
dec
lds
sub
and
repz
fidivl
loope
ljmp
cmp
adc
incl
in
push
pop
sarb
shll
je
mov
and
icebp
popl
je
dec
notb
sub
dec
insb
mov
movsl
pusha
mov
push
cmc
dec
xchg
mov
imul
enter
ss
lcall
cmp
jb
cmpsb
push
test
inc
cs
mov
in
jmp
lods
idivb
repnz
das
lods
push
push
lahf
cmp
fsub
stos
cmp
add
cmp
cld
lret
push
xor
jno
lret
pushf
xor
js
inc
cs
fadd
lcall
push
jns
outsl
imulb
cmp
loope
mov
cmp
mov
je
pop
push
std
sti
mov
leave
xchg
leave
xchg
pop
rcrl
add
out
inc
mov
mov
push
mov
arpl
sub
xchg
and
pop
aam
aam
xchg
int
mov
jmp
popa
negb
and
pop
adc
loope
cli
ficoml
cmp
mov
flds
xor
iret
sahf
cmpsb
dec
insl
pop
call
fiaddl
stc
ljmp
pop
mov
or
sub
fcoml
jo
in
inc
aaa
xor
not
push
mov
xchg
test
mov
cmp
xchg
xor
dec
cmp
mov
dec
dec
mov
fisttpl
icebp
std
int
ljmp
rorl
pusha
outsl
mov
hlt
call
ja
inc
rcl
sub
ds
jb
test
outsb
movsb
fldenv
sub
mov
sbb
mov
aaa
ret
fdivl
imul
lds
jno
xorb
shlb
clc
and
cmpsb
shr
mov
hlt
inc
ljmp
xlat
out
add
xor
notb
xchg
sub
dec
mov
xor
add
loopne
cmp
js
pop
and
sbb
pop
pop
dec
fistl
sbb
jge
mov
mov
jno
icebp
xchg
test
mov
add
xor
je
inc
dec
aam
mov
inc
test
popa
fidivl
lock
mov
stc
mov
mov
insl
sub
and
inc
adc
mov
movsl
or
push
aaa
xorb
or
shrb
mov
clc
mov
mov
mov
mov
add
push
clc
inc
sub
jns
inc
aas
jnp
adc
out
or
cmpsb
pop
data16
mov
movsl
dec
jge
pop
pop
aas
into
nop
out
pop
xor
lcall
daa
dec
push
call
clc
sbbl
and
sbb
xchg
lcall
dec
and
test
xchg
inc
sbb
mov
sbb
js
cmp
leave
fwait
pop
lock
jnp
testl
int
lods
mov
mov
inc
sarl
mov
popf
fldcw
in
flds
mov
jb
lea
cmpsl
js
loop
sahf
cmp
adc
or
mov
add
mov
daa
ret
inc
loope
cltd
roll
icebp
shll
mov
fldl
and
mov
pop
pop
pop
fwait
xchg
es
jmp
sti
imulb
push
and
mov
jp
cmp
lock
stos
in
sbb
xchg
xchg
jne
pop
ds
mov
addr16
mov
add
outsb
ret
cmp
push
xchg
outsl
cmp
or
adc
xlat
rol
jmp
fs
orb
pop
mov
jne
shlb
pop
inc
xchg
add
inc
inc
push
cwtl
push
xchg
sbb
daa
test
dec
testl
cmp
inc
cmp
enter
iret
shll
in
lods
and
mov
not
push
sbb
shlb
xor
incl
enter
or
loopne
das
js
mov
mov
jns
ret
mov
in
shll
sbb
test
mov
sbb
sbb
push
adc
popa
in
sbb
xor
in
inc
rclb
rorl
leave
xchg
mov
dec
cmp
ffreep
push
adc
inc
fsubl
mov
push
push
loopne
and
jmp
xor
fs
mov
lret
cli
hlt
cld
jge
out
mov
xlat
push
roll
iret
sbbb
repz
call
cmp
cmp
out
pop
out
aad
stc
fbstp
push
push
mov
add
jae
aas
mov
mov
ja
clc
rorb
mull
mov
mov
mov
outsl
mov
ljmp
arpl
xor
and
jmp
and
mov
mov
shlb
fildll
xchg
lea
adc
pop
clc
aaa
jnp
iret
or
lock
fnstenv
div
push
dec
ret
push
cmpsl
push
popl
jge
rcl
push
fstpl
lock
jecxz
iret
xchg
or
lea
fisttpll
pop
cmp
hlt
outsl
mov
jnp
addr16
jb
fstpl
jmp
inc
push
lock
stc
test
dec
mov
addl
push
enter
outsl
andl
inc
int3
push
or
push
adc
mov
movsl
dec
fisttps
mov
sbb
or
stos
cli
add
repnz
lea
ljmp
mov
adc
sub
ja
inc
daa
sub
sahf
mov
daa
jno
in
mov
les
mov
out
pop
lods
push
dec
add
mov
pop
arpl
dec
rorb
out
sbb
xchg
rorl
lea
mov
ss
cli
ror
mov
cmp
pusha
jmp
divb
hlt
add
xor
test
scas
adc
aam
inc
mov
imul
cli
or
mov
pop
push
cwtl
xor
repz
aam
fucomip
cltd
or
sahf
lahf
scas
popf
ret
dec
sti
sbbl
sahf
nop
add
push
in
fisubl
aas
icebp
dec
jno
and
mov
xchg
push
int
sub
dec
mov
jmp
jne
js
add
std
mov
add
xchg
jno
mov
mov
icebp
neg
hlt
repz
lret
sub
insb
into
push
nop
push
xchg
and
mov
cli
in
add
inc
repnz
lcall
cmp
cltd
pop
mov
adc
pop
jp
nop
pop
shrl
jl
lods
pop
sbb
insb
dec
mov
inc
lods
dec
cmp
jle
push
push
xchg
sahf
rclb
loope
jle
lods
int
shll
jnp
adc
mov
mov
test
sub
fmull
adc
cmp
lret
dec
cwtl
movsl
popf
jmp
dec
mov
inc
push
je
lret
rcrb
adc
adc
filds
push
inc
adc
scas
repz
fwait
inc
test
aaa
mov
or
xchg
es
inc
in
fwait
add
jge
sbb
push
and
xchg
data16
clc
sti
mov
insb
outsl
leave
sbb
test
sbb
scas
lea
sti
xchg
cmpb
dec
lods
ds
outsl
mov
test
jae
inc
jae
ds
or
out
jb
rorb
xchg
fildll
aad
sbb
scas
xlat
out
adc
push
outsl
mov
and
cs
jbe
pop
lahf
pop
stos
ja
or
mov
cmovnp
aad
jecxz
mov
in
lcall
ds
inc
jns
adc
mov
cmp
push
sarl
and
icebp
xorl
mov
fnsave
loopne
mov
sub
scas
jns
addr16
repz
fucom
and
xchg
test
cwtl
fcmove
mov
andl
int3
mov
into
adcl
jbe
and
pop
sbb
sahf
sub
scas
sbb
and
pop
jb
and
jne
lcall
lahf
iret
lret
mov
fyl2xp1
add
movsl
add
mov
mov
jp
jle
adc
mov
outsl
pop
adc
icebp
aas
arpl
lcall
aad
mov
scas
fcmovnbe
nop
lods
jnp
jecxz
mov
jbe
sub
and
repnz
dec
sti
ret
dec
and
mov
inc
jns
insb
maskmovq
divl
lret
sbb
xor
and
les
xchg
das
fucom
out
dec
add
lods
aas
or
fsubl
cmp
jmp
loope
cmpsb
gs
cmp
cmpsb
fstpt
mov
aam
leave
dec
loop
cmp
push
repnz
cmc
pop
inc
sahf
out
xor
jmp
sub
fidivrl
jae
test
jbe
fs
jns
orb
movsl
mov
lds
sbb
movsb
xorb
mov
lcall
das
push
dec
scas
pop
cmp
int3
xor
fwait
mov
cmp
push
inc
mov
adc
mov
movsb
aad
mov
sbb
mov
jne
imul
push
and
mov
adc
mov
nop
xor
nop
das
fldt
push
js
incb
incb
loop
or
dec
test
cmove
jno
popf
arpl
call
jno
ja
imul
icebp
mov
jno
push
sub
dec
test
push
test
sub
cmp
jg
add
sub
jmp
jmp
sahf
lahf
or
sub
aam
test
in
lret
adc
pop
inc
mov
fldln2
movsb
cmp
imul
jle
pusha
es
inc
insb
icebp
push
jbe
and
xchg
lret
mov
sub
jns
imul
mov
pop
leave
dec
stc
jle
outsb
sbb
sub
jns
imul
mov
pop
leave
dec
stc
jle
outsb
sbb
sub
jns
test
push
dec
ds
dec
stc
jle
outsb
or
mov
pop
into
jns
jmp
movsb
adc
test
mov
adcl
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
rorb
mov
pusha
das
jo
inc
jg
outsl
xor
dec
adc
rorb
filds
das
push
imul
jg
outsl
xor
dec
adc
push
out
mov
outsb
iret
mov
mov
and
pop
ja
pop
adc
mul
scas
sahf
in
mov
test
pushf
xor
std
arpl
lret
pop
adc
fdivrl
rolb
dec
xor
adc
push
add
imul
ror
inc
add
xchg
sub
repz
add
cmc
push
fiaddl
mov
and
aas
in
inc
cmc
loopne
gs
add
xor
rorb
jmp
mov
cmpsl
outsl
aas
lahf
aas
and
and
iret
pop
call
fistpl
cmc
xchg
mov
inc
test
cmc
fimuls
shll
xchg
xor
and
ljmp
inc
insb
outsl
pusha
inc
sbb
mov
outsb
iret
pop
add
xchg
loope
scas
add
mov
iret
adc
out
mov
push
nop/reserved
outsl
enter
jle
mov
lock
sub
xchg
aam
fistpll
sub
sbb
inc
sbb
jno
movsl
fnsave
mov
out
iret
cld
pop
add
dec
aaa
sbb
jl
popa
dec
jnp
mov
mov
nop
mov
filds
das
jo
inc
jg
outsl
xor
dec
adc
rorb
filds
das
jo
inc
jg
outsl
xor
dec
adc
arpl
xchg
data16
fistl
pop
sbb
inc
fisubs
sahf
xchg
cmp
cmc
test
lret
xor
add
rolb
int3
aaa
fsubrl
sbb
test
mov
nop
or
dec
mov
movsl
or
inc
pop
gs
mov
lahf
shl
repz
jecxz
push
sub
outsb
pop
hlt
mov
jo
sbb
je
pop
mov
push
jecxz
sar
mov
out
scas
push
mov
int3
dec
popf
mov
aas
dec
mov
adc
push
rcl
push
outsb
dec
mov
ss
adc
cmp
inc
outsb
shlb
xchg
adc
xchg
les
xchg
push
push
pop
popa
add
cmpsl
push
repnz
inc
stos
jb
mov
xlat
or
pop
jecxz
dec
cmc
test
jnp
mov
add
sarl
add
fiadds
adc
ljmp
or
pop
iret
loop
push
inc
add
loopne
cmp
xor
mov
es
rorb
enter
test
mov
mov
loop
scas
dec
into
adc
jmp
pop
in
in
outsb
cmp
popa
push
add
jns
mov
push
sub
xor
lea
jp
aam
cmp
shlb
ficompl
adc
xor
or
sar
cmc
inc
mov
lock
push
inc
lahf
push
cli
mov
push
push
repnz
add
jl
insl
cmp
xor
imul
sub
jl
pop
mov
out
mov
loop
jge
pop
stos
stc
mov
mov
outsb
aaa
out
das
test
loop
jae
xchg
pop
lret
clc
mov
popa
xlat
fdivl
cmp
stos
xlat
in
lcall
rcrl
xchg
jb
sbb
sahf
push
das
mov
das
jns
jl
add
push
jns
ret
imul
xor
adc
stos
rcrl
mov
aam
push
pushf
jle
pop
cmp
mov
cmp
mov
mov
push
ss
loopew
push
stos
cld
ret
or
nop
sarl
iret
inc
jg
inc
sbb
sub
pop
daa
dec
mov
enter
adc
mov
inc
mov
push
inc
shl
add
inc
cld
xchg
mov
arpl
pop
push
cwtl
mov
push
adc
ficomps
xor
notb
xor
xchg
fistps
iret
and
pop
lcall
mov
andb
fdivs
jo
sbb
jl,pt
outsb
fistl
sbb
xchg
adc
sub
ficoms
mov
fwait
in
lea
xchg
sbb
cmp
les
and
jb
or
dec
mov
fbstp
xchg
cli
xor
sub
or
add
cld
xor
add
pop
adc
movhps
fisubrs
iret
pop
xor
int3
mov
mov
lds
jns
inc
andl
stos
mov
inc
out
jge
xchg
test
loop
or
ds
lods
mov
and
orl
out
lahf
xchg
mov
fstl
sub
sbb
adc
ds
int
adc
xchg
popf
lret
xchg
mov
bound
mov
mov
stc
popa
sbb
and
mov
js
cmpsb
xor
push
repz
loope
jb
xor
pushf
imul
pop
mov
fdivrs
mov
mov
inc
and
or
mov
dec
in
fidivrl
inc
or
xor
ficoml
int
mov
shr
mov
stos
shrl
sub
xchg
mov
into
sar
pop
scas
icebp
jmp
jmp
jns
and
cmp
mov
cmp
push
jbe
mov
xor
or
xlat
pop
push
jge
jecxz
mov
gs
fldt
roll
add
imul
repnz
outsb
ror
inc
jle
fs
push
and
or
jl
xchg
adc
xchg
xor
pusha
pop
scas
pop
jbe
loopne
push
mov
inc
mov
jg
stos
dec
fldcw
push
nop
jbe
sub
aaa
mov
cli
bound
xor
mov
inc
movsl
out
call
sub
jle
dec
aad
xor
push
hlt
adc
dec
cmp
dec
call
shll
rcl
cmpsl
clc
in
push
push
fnsave
js
push
xchg
stos
lock
mov
paddusb
or
mov
pop
sbb
sbb
lds
std
lods
out
mov
leave
out
lock
adc
mov
mov
add
movsl
mov
in
mov
adc
cmpsb
lods
mov
scas
mov
pop
adc
mov
outsb
fs
inc
dec
cltd
daa
mov
in
mov
push
push
push
or
cld
push
hlt
adc
sahf
lcall
cld
test
dec
int
sbb
add
jb
fstp
dec
fwait
je
sbb
push
xchg
stos
push
scas
xchg
out
sbb
pop
in
jne
fimull
ret
pop
std
call
xor
sub
mov
adc
xor
adc
add
mov
icebp
jmp
mov
daa
mov
mov
aad
lods
pop
xchg
adc
pop
movsb
push
rclb
push
cli
adc
fcompl
xchg
add
mov
sbb
or
jo
mov
sub
pop
fldt
cvttps2pi
stos
jno
icebp
out
daa
shrb
add
sbbl
mov
or
lret
pop
inc
cmp
push
pusha
not
dec
push
rcll
fistl
mov
std
adc
dec
arpl
les
adc
ficoms
pop
push
fstl
cmp
insb
xor
movsb
dec
cmp
rcl
pop
sbb
repz
jbe
aaa
jp
rcr
mov
imul
shrb
sbb
push
mov
fldt
gs
xchg
or
xchg
shrb
jge
sarb
cmp
movl
dec
add
repz
cld
push
push
xlat
test
inc
push
nop
inc
js
pop
dec
call
and
cltd
nop
aaa
repz
iret
int3
mov
loopne
cli
cmp
jmp
scas
inc
xor
and
in
mov
adc
xlat
clc
sti
adc
push
nop
inc
cmp
xchg
ljmp
fidivrs
mov
les
lods
mulb
or
jmp
pop
mov
sarl
adcl
mov
scas
mov
dec
cld
xlat
jnp
in
in
movq
inc
addb
jg
int3
aam
out
in
pushf
std
es
daa
insl
xchg
dec
mov
push
and
push
mov
jg
mov
pop
cmp
pop
hlt
and
mov
xchg
stos
clc
dec
xor
in
mov
push
imul
push
out
jae
mov
mov
jae
cmc
loope
or
call
lds
cmp
add
lods
idivl
stos
xchg
test
and
jnp
lods
mov
inc
ss
dec
jb
imul
retw
lahf
insl
test
rolb
daa
sub
icebp
out
mov
pop
pop
sub
mov
out
aaa
cmpsl
jbe
fdivs
mov
mov
mov
jae
sbbl
popf
fwait
xchg
stos
push
push
mov
inc
fmuls
mov
push
dec
lods
mov
enter
push
aad
repnz
and
and
pop
repnz
insb
mov
xchg
adc
cld
xchg
les
xlat
cltd
rclb
dec
out
movsb
test
xchg
xor
push
repnz
negb
add
cmp
scas
andl
cld
orl
sarb
push
add
xchg
and
negl
std
push
lcall
mov
pop
pusha
fildl
xchg
xor
mov
ss
repnz
inc
jmp
mov
adc
mov
aad
cmp
pop
mov
push
sub
sub
mov
and
test
push
cmp
pop
fcompl
jecxz
inc
gs
sti
jl
addr16
insb
into
lret
push
adc
lea
inc
scas
outsl
sbb
dec
mov
insl
lds
loope
ss
sub
jo
insl
rcrb
nop
jns
dec
in
pop
fbstp
mov
ret
xchg
call
push
lea
and
loope
cmc
data16
lahf
or
sbb
sub
addl
test
push
shrb
clc
mov
or
es
into
pusha
shrb
xchg
test
push
dec
push
stos
and
inc
mov
daa
jae
adc
jecxz
push
int
ljmp
lods
jmp
ret
imul
cmp
je
popa
vorps
or
imul
mov
je
xchg
mov
shlb
jns
mov
subb
fnstsw
jnp
ja
and
lret
scas
jmp
lea
push
jbe
mov
add
in
xchg
fnclex
mov
cwtl
sti
push
lahf
aam
scas
out
push
insb
pop
push
jb
mov
or
push
mov
dec
and
jae
movaps
mov
jno
dec
xchg
movb
daa
push
cwtl
adc
shrb
iret
mov
cltd
jg
xchg
push
add
add
push
cmp
add
scas
addr16
dec
dec
aas
shrb
icebp
sub
xor
fdivs
adc
inc
cmp
jg
fdivs
loope
cmp
push
not
cli
je
add
sbb
mov
mov
jmp
add
jmp
mov
out
pop
sarb
cltd
test
sub
negb
ret
popa
inc
or
jl
mov
sub
orb
jle
sbb
sbb
in
das
or
mov
jmp
mov
push
cmpsl
mov
adc
les
mov
mov
xorl
bound
adc
jo
sub
jl
push
popf
xchg
cmc
push
cmp
pop
setge
cld
mov
sti
cmp
fsubr
jmp
in
adc
cld
fisubl
in
aaa
les
movsb
int3
loop
pop
pop
leave
popf
popf
pusha
sbb
shrl
pop
into
and
push
xor
addr16
mov
cs
jb
int3
jg
sbb
clc
repz
and
cmp
icebp
cmp
cli
movsb
jbe
cli
popf
hlt
lcall
inc
cmp
movsb
jno
xchg
push
pop
stc
adcb
lods
movsl
loop
push
int
clc
adc
sbb
andl
ljmp
add
shr
and
jl
test
xchg
add
testb
bound
fidivrl
lock
dec
push
sub
lret
or
outsb
neg
adc
aam
out
sub
mull
dec
push
xor
mov
and
mov
insl
sub
out
sbb
subl
ljmp
push
mov
pusha
add
jge
loop
mov
jbe
xor
rcrl
ret
inc
outsb
loopne
mov
shlb
add
js
xchg
pop
inc
inc
andl
add
ret
pop
jl
data16
adc
cli
sbb
jmp
and
pop
outsl
jmp
les
clc
fwait
daa
mov
ljmp
mov
pop
sbb
mov
outsb
sarl
inc
in
movsb
loope
inc
jne
xchg
or
aaa
dec
cmp
clc
mov
scas
pusha
xor
fistps
loopne
hlt
mov
in
or
xchg
adc
push
push
fldt
dec
mov
and
jl
call
in
add
mov
pop
pop
std
out
xchg
jmp
jb
outsb
inc
js
inc
pusha
rcll
leave
vmwrite
or
int
cmp
jne
mov
xor
push
xchg
ss
push
or
daa
movb
and
out
pop
mov
pushf
cmc
xor
or
data16
imul
pop
sbb
adc
dec
aas
ret
dec
cmp
out
ret
pop
and
push
add
cld
push
jle
and
jl
out
repnz
lcall
adc
iret
negl
add
fwait
or
cmp
addb
cmp
sbb
add
in
sbb
in
push
fsub
and
cmpsb
mov
mov
and
nop
or
jle
insb
push
les
iret
loope
pop
mov
testb
cs
xlat
fistpll
jo
and
test
xchg
dec
dec
pop
mov
dec
testb
loope
dec
or
add
in
dec
mov
sbb
fwait
inc
jnp
cmp
sub
sbb
mov
out
pop
scas
adc
xchg
xor
ja
lcall
lea
xor
mov
imull
dec
sbb
sbb
jge
les
loop
lods
in
pop
sbb
clc
arpl
pop
ret
je
dec
rcl
movsl
mov
mov
xchg
sbb
lcall
xor
or
and
sub
repz
movsb
jbe
movsb
sub
jb
das
rorb
mov
stc
or
sub
aas
xchg
push
dec
inc
dec
dec
gs
loop
rclb
cli
mov
or
inc
fs
adc
mov
rorl
aam
lcall
jp
subb
out
or
dec
out
stos
and
andl
std
or
inc
insb
inc
test
mov
imul
ljmp
xchg
in
fwait
pop
divb
ljmp
sub
mov
call
lret
jmp
out
in
iret
sahf
ret
xor
or
and
sbb
movb
ret
fwait
fs
aas
add
das
mov
jno
sbb
mov
mov
dec
fs
fs
adc
leave
out
sbb
mov
loope
ret
adc
dec
sti
sbb
lcall
es
add
cmp
fdivl
jne
nop
or
das
cmp
push
dec
mov
jno
sti
mov
notl
icebp
sbb
jbe
cltd
movsb
xchg
outsb
dec
iret
push
hlt
add
dec
jnp
pop
pop
xor
in
icebp
out
push
daa
cmp
sub
shlb
imul
test
cli
xor
sub
movsl
jl
movsb
xchg
test
in
inc
ret
push
sarb
pop
or
sbb
pop
jmp
or
ret
es
cli
sub
iret
cli
imul
test
leave
push
shll
jne
lods
insb
mov
mov
stc
cmp
cmp
in
dec
shll
sarb
sub
iret
cmp
cmc
sbb
loop
add
jnp
or
sub
or
mov
and
out
cmp
xlat
fbstp
push
movsl
movsb
mov
aas
and
adc
xor
xor
jmp
jmp
xchg
mov
test
inc
mov
addb
cmc
dec
xor
dec
push
jg
mov
jle
and
sti
xor
cwtl
stos
xor
jno
gs
ja
mov
les
adc
inc
int3
rolb
mov
in
mov
cmc
xchg
jno
pop
fxch
lea
in
fnsave
aam
mov
and
outsb
cwtl
and
outsl
movsb
xchg
mov
mov
push
sbb
jp
cmpsb
aas
sbb
dec
jl
je
lret
mov
sub
popf
push
sbb
sbb
xor
bound
js
pop
dec
insl
mov
out
push
stos
jmp
mov
jo
ds
packsswb
mov
movsl
pop
xorl
rcrl
stos
mov
push
sbb
mov
lods
movsl
cmp
insl
push
cs
aad
popf
aam
and
inc
jp
add
xchg
or
dec
or
inc
sti
sti
into
imul
cmpsb
mov
adc
test
fwait
sahf
dec
lcall
js
stc
sbb
test
cmp
in
or
and
fisttpl
test
sti
jp
rclb
in
or
add
gs
push
fs
jmp
cmp
ficompl
xor
push
lds
int
mov
or
pop
imul
add
sbb
nop
pop
jno
jl
fwait
push
js
add
jo
cmp
jne
jg
xchg
pop
cmpsb
dec
leave
mov
mov
mov
stos
popa
fistl
xchg
xchg
xchg
push
sub
mov
inc
pop
xchg
xchg
dec
jge
xchg
jnp
repnz
xchg
ss
leave
cmp
xchg
mov
pop
sub
jle
mov
jae
pop
sub
xor
mov
adc
dec
sbb
cmc
clc
jg
leave
cmpsl
ret
jne
push
mov
imul
repz
in
xchg
jb,pt
fcomp
cmp
inc
sbb
orl
js
add
sbb
or
jne
hlt
push
int
mov
lret
ss
push
repz
pop
cmp
cmp
add
mov
inc
push
mov
aam
jle
inc
mov
scas
and
sub
adc
shrl
add
movsb
mov
dec
das
scas
popf
xor
xor
popf
sbb
popf
das
stc
stos
pop
lret
shrl
shrl
sbb
inc
push
ja
mov
aad
inc
jl
gs
adc
in
cmp
lret
pop
insl
fwait
out
add
jne
mov
or
sbb
into
or
pop
cld
xchg
xchg
dec
sub
gs
jmp
fistpl
lahf
gs
fildl
mov
mov
stos
js
cmp
push
pop
mov
pop
xlat
aad
push
sub
iret
cmp
je
insl
popf
lret
dec
sub
outsl
fstp
ret
inc
sarl
push
dec
mov
dec
leave
aaa
push
rcl
lock
push
test
test
call
mov
inc
ss
fisttpll
into
ficoml
insb
cmp
out
mov
jnp
sub
add
aad
inc
cmp
aaa
add
lock
lahf
adc
inc
and
sbb
sbb
in
dec
push
arpl
out
sub
repnz
pop
pop
mov
call
addr16
out
ljmp
cmp
int
mov
in
pusha
lods
xlat
mov
push
or
sub
jp
dec
fdivrs
cmp
stos
push
mov
xlat
test
cmp
and
loopne
divl
jnp,pt
sub
mov
dec
inc
sbbb
pop
test
dec
mov
jne
inc
aad
add
push
ljmp
cmp
jecxz
push
ror
cmpsl
adc
mov
adc
cmp
aaa
cmp
andl
mov
cmc
push
nop
pop
jno
add
xlat
jmp
inc
add
fdivl
or
mov
inc
ficoml
xchg
or
arpl
sbb
and
arpl
dec
xorb
inc
mov
add
enter
and
mov
mov
add
add
pop
lret
sbb
add
in
inc
mov
int
inc
pop
dec
xlat
or
mov
push
iret
test
sbb
nop
jge
pusha
sbb
cmp
inc
xor
inc
and
push
lds
xchg
and
ss
adc
adc
mov
loop
jle
cmp
push
xchg
adc
jmp
mov
int
xchg
lea
icebp
mov
xchg
jecxz
cmpsl
fidivs
and
mov
movsb
sbb
cli
aad
pop
mov
and
addr16
adcl
rclb
jge
clc
or
xchg
xchg
mov
hlt
jge
add
mov
dec
lret
dec
mov
je
arpl
adc
nop
int
lret
inc
jbe
sbb
mov
scas
push
sbb
dec
mov
mov
pop
or
jne
int3
mov
rcll
stos
fstpl
outsl
lods
and
sub
fwait
xor
mov
push
sub
stc
push
ds
xlat
hlt
inc
insb
fdivrs
cmp
mov
or
sbb
jne
or
lods
jl
out
pop
adc
jne
rcr
idivl
lret
movl
cmp
sub
out
dec
pop
rorb
das
mov
cmp
mov
lcall
cltd
dec
or
xor
mov
xchg
test
movb
loope
in
fadds
pusha
rcl
and
inc
ds
fs
inc
stos
enter
je
pushf
cwtl
inc
xchg
outsl
pushf
cltd
bound
pushf
jge
sbb
inc
xchg
mov
loop
dec
push
testl
and
mov
mov
xchg
lret
push
mov
lret
mov
fdivs
ds
adc
fs
jne
or
into
ret
fdivl
arpl
aas
mov
loopne
sbb
dec
add
into
je
jno
sbb
icebp
mov
in
daa
aad
pop
adc
je
sbb
int3
mov
push
sub
inc
rcll
cmp
arpl
stos
fbld
mov
mov
das
dec
ds
sarb
lods
sar
mov
iret
nop
aas
pusha
das
jo
inc
jg
outsl
xor
dec
adc
rorb
filds
das
jo
inc
jg
outsl
xor
dec
adc
mov
out
sbb
or
aas
mov
jg
outsl
xor
dec
adc
rorb
filds
iret
nop
aas
lahf
das
fidivl
test
iret
mov
fsubp
mov
cli
ret
mov
in
mov
sahf
bound
dec
bound
pop
out
cmp
sub
lret
ret
lcall
js
bound
jb
push
xor
or
cmp
sub
jl
or
pusha
ficompl
mov
cwtl
jb
imul
dec
outsl
insb
popa
dec
imul
loop
sahf
test
pop
jae
cmp
mov
lcall
ret
sbb
or
or
mov
adc
bound
push
mov
test
mov
jne
mov
addr16
loop
fwait
mov
mov
icebp
jo
popf
pop
add
xchg
int
idivb
in
and
repnz
dec
ljmp
andb
fisttps
stos
push
test
imul
jmp
adc
adc
cmpb
jp
popf
sbb
cwtl
jo
pop
lahf
imul
xor
pmullw
jns
lret
lea
popf
sbb
jb
dec
repnz
add
push
loop
rorb
mov
cmp
jp
dec
js
push
sub
cmp
adc
sbb
sbb
cmpsb
xchg
aas
iret
out
iret
out
in
push
sbb
and
sub
pop
pop
inc
gs
addr16
repnz
loop
mov
rolb
rol
cltd
jo
bound
pop
sub
pop
push
push
push
or
add
test
ret
mov
stos
jb
bound
jp
push
sbb
or
cmp
sub
lret
ret
lcall
jb
bound
jp
push
sbb
or
cmp
sub
fisubl
pushf
mov
mov
pop
adc
jne
mov
xchg
mov
bound
fwait
ss
sub
aad
adc
push
adc
lret
cmp
cwtl
loopne
and
rorl
in
and
lret
mov
daa
sarb
dec
add
lods
imul
aad
pop
js
les
gs
bound
stc
daa
test
mov
test
pop
pop
roll
push
mov
stc
pop
lea
and
out
cmp
mov
into
mov
jno
or
inc
add
lret
xchg
lds
jbe
imul
inc
or
fidivrs
shrd
and
fwait
loope
xor
outsb
in
es
or
outsl
ljmp
loop
ja
sub
aas
pop
jb
mov
test
mov
cmpsl
lock
jg
dec
cmpsl
mov
mov
bsr
aas
inc
or
loopne
pop
frstor
scas
repnz
mov
adc
movsb
push
xchg
pushf
ror
je
push
adc
das
rcll
xor
call
test
cmp
out
xchg
sub
and
sahf
fisubrs
pop
cmp
out
adc
jnp
das
pop
fdivp
pop
mov
or
mov
hlt
dec
rcrl
pop
js
cmp
and
cli
lret
lret
push
fdivl
ret
push
sarb
jae
enter
pop
ja
jmp
in
adc
sarl
xlat
inc
xchg
push
ljmp
cmp
xchg
in
pop
xor
andl
xchg
jmp
mov
leave
in
es
std
in
std
xor
out
ja
xor
jns
ljmp
aaa
test
sub
jns
push
mov
add
das
xchg
push
nop
outsl
daa
dec
mov
sahf
and
mov
add
scas
mov
xor
cmc
and
je
push
aam
test
lcall
mov
mov
dec
mov
dec
sbb
icebp
fdivrs
je
dec
mov
hlt
push
mov
in
std
mov
inc
lcall
push
add
nop
or
add
lea
nopl
mov
xchg
sub
sub
and
inc
xor
inc
data16
jne
sub
xchg
adc
push
pop
ljmp
jg
lds
hlt
cmc
push
lods
mov
cltd
ljmp
pop
xor
jo
aad
inc
loop
lcall
rcr
lcall
pop
movsb
je
sbb
adc
out
inc
addl
sarb
mov
fisubs
loope
mov
mov
xlat
loope
jg
das
inc
xor
and
push
xor
pop
mov
sbb
sete
in
dec
inc
adc
inc
scas
lea
push
mov
ja
insb
xchg
daa
test
and
push
xor
fisttpl
scas
jg
aam
adc
fcmove
sahf
inc
daa
push
sub
addr16
pop
mov
in
pop
mov
cmp
inc
mov
sub
add
nop
push
mov
dec
lahf
inc
xlat
and
push
cmp
sub
jge
xor
push
cltd
cmp
pop
movsb
jp
shlb
es
pop
xchg
out
cmp
sub
loope
dec
push
std
in
jmp
jbe
sub
or
insb
pop
mov
test
mov
ret
mov
enter
fildl
shll
sbb
fisubl
or
xorb
mov
push
sub
xchg
imul
or
inc
pop
dec
xchg
xor
into
or
mov
cli
and
pop
mov
xor
inc
jnp
loope
gs
dec
shll
xchg
mov
repz
xchg
loop
setae
jge
mov
rcll
cmp
bound
xchg
int3
fisttpl
push
sub
rcrl
ja
inc
dec
scas
mov
iret
loope
daa
shll
jb
shrl
cmp
lea
icebp
lret
sub
stos
adc
push
mov
adc
inc
fcomip
mov
ds
add
push
ljmp
jne
adc
outsl
xchg
mov
int
pushf
xchg
ret
cmp
add
push
push
dec
mov
sub
jge
inc
pop
pusha
outsb
pop
lds
and
shrl
rcrb
cwtl
xchg
mov
xchg
mov
loop
xchg
jg
jge
hlt
in
dec
cli
gs
sahf
fidivrs
lahf
repnz
lods
std
int
fucomip
js
mov
cmpsl
xchg
pop
pusha
inc
clc
mov
adc
enter
pop
cmpsl
fidivs
mov
mov
aaa
daa
call
js
test
or
xchg
jg
mov
sub
lcall
xchg
rcrb
xor
jae
sub
shrl
shl
mov
out
test
mov
pusha
loope
hlt
pop
es
adc
mov
adc
out
arpl
jmp
cwtl
sub
fnstenv
test
dec
xor
pop
pop
inc
stos
fs
stc
cmp
bound
sub
xchg
ja
jnp
sahf
inc
push
mov
jb
fstl
dec
push
fstpt
jbe
mov
sbb
fdivrl
aas
andb
in
scas
mov
in
insb
jmp
cmp
push
notb
fs
cld
xchg
jp
jno
xchg
xchg
inc
rcrb
push
divb
or
push
cmp
aas
or
sbb
rcll
int
inc
jg
xlat
in
outsb
iret
and
mulb
ret
dec
insl
cld
inc
add
mov
mov
mov
stos
mov
mov
jnp
sbb
lahf
jb
inc
leave
xor
pop
scas
scas
jle
inc
loop
xor
mov
out
idivb
notb
sbb
push
pop
mov
inc
pusha
sbb
outsb
fists
mov
adc
rcrl
dec
imul
xchg
mov
fwait
mov
jmp
loop
test
stos
cmpsb
add
arpl
xchg
cmpsl
repz
in
jbe
jmp
dec
scas
jno
lds
mov
pop
cwtl
adc
xchg
clc
mov
dec
les
adc
imul
cltd
lods
sub
movsl
loope
push
sbb
ljmp
xchg
mov
lds
shl
push
push
inc
jmp
sti
cmp
mov
inc
lods
xchg
arpl
mov
fisubl
roll
mov
dec
andl
into
jl
add
out
xchg
xchg
test
mov
std
loope
mov
push
clc
inc
xlat
pop
adc
push
mov
daa
stos
lods
xchg
push
das
lods
movb
insb
stos
jmp
mov
cld
mov
ficomps
dec
rcr
call
xor
add
loope
xchg
jmp
cmc
xor
cmp
mov
add
andl
mov
loopne
gs
jmp
mov
mov
cmp
mov
inc
dec
rol
xor
adc
cmp
xchg
inc
fsubl
push
mov
arpl
ss
xchg
sti
enter
jle
pop
xchg
cmp
adc
shlb
outsl
movsl
les
dec
test
jnp
fdivrs
and
jl
mov
push
mov
movsb
and
sbb
push
sti
dec
movsb
shlb
sub
shll
sub
and
repz
andl
scas
fstpl
addr16
cmpsl
add
xor
into
xlat
pop
inc
or
and
and
jno
je
scas
dec
jp
sbb
jae
push
jns
stc
out
push
mov
lock
adc
add
xor
jl
or
int
cs
mov
mov
jo
push
sbb
cltd
ficomps
pop
mov
mov
and
xor
jno
fildl
popf
shll
stc
hlt
jno
std
js
dec
xlat
xor
and
sahf
xlat
adc
cmp
dec
fldl2t
xchg
aad
in
dec
lret
inc
xchg
dec
add
fs
xchg
incb
fdiv
dec
stc
jp
and
mov
push
mov
int
popf
stc
cmp
mov
repz
sub
fisttpl
xchg
pusha
mov
cmp
lea
mov
mov
jmp
subl
mov
stos
inc
cs
push
mov
xlat
jb
out
sub
cmpb
leave
loopne
jmp
je
push
mov
add
adc
cmp
fistl
push
cwtl
imul
xchg
xchg
cs
test
cmp
mov
ss
xor
repz
lea
stos
pop
dec
pusha
mov
mov
adc
mov
cmp
lock
out
sub
sub
push
fldl
shrb
xor
fwait
and
in
sub
repz
adc
loopne
jl
mov
cmpsl
cld
cmp
cli
add
inc
nop
mov
dec
push
mov
dec
lcall
sub
cli
in
xchg
jns
adcl
iret
ja
les
cwtl
test
mov
leave
fwait
jg
rorb
mov
pop
adc
movsl
out
cwtl
add
mov
and
pop
cmp
dec
jmp
push
xchg
add
movsl
jg
imul
adc
gs
xchg
push
push
arpl
outsl
push
jp
outsl
sbb
pushf
inc
inc
jmp
and
outsb
sub
js
or
pushf
hlt
mov
adc
jo
ss
dec
mov
lock
add
xor
jns
mov
hlt
inc
dec
aaa
mov
cmp
cwtl
adc
pushf
rolb
clc
scas
sub
dec
pop
xchg
enter
mov
cld
add
dec
bound
cli
inc
add
xchg
jns
int
push
push
loopne
fsubp
repz
jle
inc
cwtl
mov
jnp
int3
das
xchg
or
inc
cmp
cmc
call
or
aam
inc
sbb
pop
cmp
push
lahf
cmp
popf
pop
iret
xor
call
popa
movsb
fidivl
xor
jle
dec
pop
or
shr
cmp
mov
test
jp
test
es
out
mov
es
and
push
subb
pop
sarl
and
add
xchg
popa
inc
movsb
mov
sub
mov
test
js
inc
xchg
mov
aad
inc
mov
pop
mov
cmc
cmp
sub
mov
aad
xchg
rorl
push
mov
add
lods
jnp
pop
adc
scas
insl
pop
xor
ret
pop
cmp
ror
xchg
jmp
mov
mov
addr16
mov
sub
xchg
inc
roll
xchg
jmp
outsb
lods
jp
je
xchg
repz
dec
jge
xchg
imul
clc
mov
mov
pusha
fwait
cmc
mov
mov
outsb
fisubrs
shlb
push
jle
test
cmpsl
in
cli
lret
xor
sbb
or
daa
cmp
pusha
sbb
clc
movsl
push
lret
adc
aaa
xorl
sbb
mov
jle
inc
mov
sbb
movsb
pop
scas
adc
cmpsb
pushf
cltd
fsubl
pop
into
push
jb
scas
pop
rcrb
and
cld
jno
rcrl
push
lds
jns
imul
jecxz
push
daa
cmp
test
cmp
inc
jg
sbb
xor
lods
cld
lea
sahf
jle
jns
xchg
dec
push
xor
push
push
neg
call
inc
icebp
imul
and
pop
push
dec
and
adcl
fildl
gs
shlb
mov
and
mov
test
dec
dec
dec
mov
dec
aam
mov
jnp
movsl
popa
inc
sbb
fdivl
in
cmp
mov
sti
push
repnz
xchg
imul
lcall
stos
lret
stos
dec
sub
xchg
xchg
repz
mov
dec
mov
dec
cli
pop
jnp
add
dec
sbb
mov
push
pop
sbb
cmp
fnsave
ret
add
mov
fisubl
lds
loopne
lret
xchg
sbb
jnp
lret
adc
add
sbb
gs
scas
mov
sbb
aad
push
pop
push
inc
leave
aas
jae
stos
fwait
and
cmc
cwtl
ret
add
dec
cmp
mov
xor
sbbb
inc
repnz
xchg
das
inc
adc
std
sbb
in
mov
je
push
inc
dec
fdiv
sbb
adc
mov
scas
popa
jge
inc
out
mov
dec
sbb
std
mov
inc
push
ss
sbb
xchg
and
add
pandn
jmp
ljmp
ljmp
rcl
scas
sub
iret
add
and
push
stos
adc
repz
or
filds
add
iret
jp
lea
xchg
lret
int
flds
cli
adc
enter
or
jnp
push
cltd
out
adcb
mov
push
out
lcall
jecxz
fcoml
lcall
jno
mov
pop
shr
inc
push
jns
fwait
push
or
pop
lret
lock
dec
cmp
ss
ljmp
popa
pop
sub
push
test
xchg
and
or
cmp
stc
insl
gs
mov
xor
shlb
lahf
sub
addb
sbb
xchg
cld
enter
pusha
cmpsb
pop
popa
scas
fbstp
add
out
in
js
cli
addb
out
lahf
cmp
outsb
iret
repz
setne
stos
fsubl
adc
hlt
icebp
push
int3
fisubl
fs
mov
ficomps
adc
cmp
fnstcw
addr16
icebp
data16
into
xor
loopne
mov
ljmp
and
dec
movb
pop
pop
call
xor
or
fbstp
loopne
push
and
and
mov
fnsave
addr16
jl
call
and
sub
inc
add
iret
mov
lcall
lcall
mov
xor
mov
dec
sbb
int
pop
sbb
loopne
pusha
outsl
call
xor
pop
insb
mov
loope
in
sub
jge
sbb
aam
repnz
fstpl
xchg
int3
leave
shrl
pop
and
xrelease
mov
mov
stos
xchg
pop
test
testl
out
cltd
pop
mov
xchg
push
pop
push
jno
outsl
pusha
mov
mov
ficomps
sbb
sarb
test
mov
les
mov
in
cmp
inc
cltd
xchg
xor
hlt
lods
sbb
rsqrtps
lock
sahf
repz
cmp
test
nop
push
les
mov
mov
add
dec
or
and
test
dec
mov
jge
cmp
stos
lahf
cmp
gs
dec
jo
and
mov
movsb
popf
xor
jnp
outsb
out
xchg
inc
mov
dec
sbb
scas
add
mov
add
mov
or
add
lret
jl
push
mov
jge
stos
or
je
stc
lods
jg
pop
sub
aam
adc
lods
mov
sbb
mov
mov
mov
insb
dec
inc
sbb
mov
xor
xor
ret
shlb
cmpsb
mov
push
cmc
pushf
aad
push
sub
cmc
adc
xor
push
mov
stos
ds
push
lods
arpl
jae
add
not
dec
in
add
inc
test
sbb
movsb
jo
or
mov
outsb
popf
repnz
sub
or
in
cltd
subl
addl
cltd
sbb
inc
ficompl
sub
mov
xor
xchg
or
and
mov
dec
sarl
lods
clc
mov
mov
sub
nop
imul
cmp
fwait
xchg
and
jl
test
clc
mov
mov
xchg
push
pusha
xchg
or
mov
mov
out
pop
ja
inc
xlat
fisttpl
orb
sahf
xor
xor
jbe
es
test
and
mov
rolb
mov
and
or
insb
add
scas
xchg
test
cmpsl
xor
xchg
jl
mov
xchg
cs
aam
ds
pop
movsl
mov
jmp
icebp
push
sub
push
stos
addr16
push
fnsave
orl
stos
insb
test
insb
in
imul
pop
cltd
lods
subl
ret
pcmpgtb
pop
adc
mov
push
mov
icebp
xor
inc
pop
scas
ja
lahf
push
push
enter
lods
xorb
arpl
xor
jbe
jp
and
jp
pop
adc
dec
or
aad
mov
add
or
loope
pop
imul
cmp
or
and
push
aad
sar
cmp
mov
aad
mov
test
adc
mov
outsb
mov
data16
movsl
mov
adc
test
and
and
pop
int
sarb
pushf
mov
dec
inc
jecxz
mov
lds
lret
cmpl
pushl
or
push
loope
sbb
add
out
mov
cmp
pop
jmp
cmp
jle
out
movsb
cld
xor
sbb
jnp
stos
rcl
dec
sub
mov
and
jg
or
push
inc
push
push
sub
sbb
xor
aam
cmp
pop
aas
rcrl
push
mov
add
pop
xchg
and
cmp
repz
loop
mov
sub
imul
jg
add
pop
sub
push
test
jb
lret
xchg
lahf
xor
pop
cmp
mov
push
push
pop
stc
pop
rcrb
add
adc
loop
jl
mov
ret
into
sti
es
js
imulb
sub
mov
addr16
insl
sub
imul
or
xchg
outsb
cli
jp
or
outsb
call
xchg
push
scas
mov
aas
adc
addb
and
push
sub
pop
mov
pop
mov
cmp
xchg
fiaddl
sahf
mov
xor
test
popa
or
push
fwait
loopne
inc
dec
flds
push
mov
pop
lret
and
push
shl
mov
sahf
or
ss
ljmp
and
call
mov
jnp
data16
xchg
fildl
mov
and
outsl
xchg
decl
icebp
addr16
sbb
into
test
jo
mov
fsubrp
mov
mov
clc
mov
add
movsl
test
aaa
mov
pcmpeqb
push
stc
dec
lret
or
xchg
cs
xlat
xor
fiaddl
mov
xchg
fs
sbb
aam
fldl
mov
or
fwait
or
mov
inc
fidivs
dec
push
push
jno
aam
outsb
pop
jmp
loopne
sub
inc
add
lock
mov
jno
sahf
ss
jnp
and
and
int3
mov
clc
add
adc
pop
cmp
adc
push
test
bound
dec
and
adc
or
and
inc
jbe
lret
dec
adc
dec
lods
push
mov
jmp
mov
int3
es
sbb
cmovge
jle
sahf
add
pop
sbb
lods
inc
and
xchg
in
jg
inc
pop
ja
dec
aaa
xor
leave
lret
fbstp
inc
dec
mov
int3
int
lret
int
int3
imulb
xorb
je
cmp
add
outsb
lock
jge
idivl
push
sub
xchg
xchg
stos
or
or
mov
test
mov
stos
out
mov
shrl
lret
mov
xchg
jne
les
add
repnz
test
movsb
imul
lock
loopne
xor
lahf
dec
clc
andb
sahf
mov
add
mov
or
cmc
pop
out
push
daa
pop
jge
inc
pavgb
fistpl
or
cmp
loop
sub
gs
ret
push
cmpsb
dec
xor
aaa
cmp
rorb
dec
xchg
sub
pop
lds
mov
pop
mov
lahf
mov
enter
mov
shlb
push
mov
jle
jno
push
ret
inc
in
pusha
sbb
adc
out
sub
xchg
cmpsb
mov
aas
jp
or
xorps
scas
aad
loop
inc
lock
fs
lea
test
popf
xchg
jno
scas
ret
or
ret
and
fistps
mov
notb
cld
mov
stos
xchg
dec
adc
out
stos
bnd
movsl
pushf
and
mov
jp
int3
lret
dec
imul
pop
scas
es
ljmp
pop
dec
movsb
ds
dec
dec
mov
ja
lds
divl
dec
jecxz
bound
lret
xchg
icebp
iret
fisubl
pop
add
push
adc
push
push
scas
clc
mov
imul
jo
sbb
sti
fbstp
lahf
das
clc
and
pop
inc
out
sbb
fwait
mov
stos
cmpsb
or
push
pop
data16
xchg
xchg
fdivs
aad
dec
pop
js
mov
outsl
scas
xor
mov
jb
ret
lcall
jb
bound
jp
push
sbb
or
cmp
sub
lret
ret
lcall
jb
bound
jp
push
sbb
or
cmp
sub
fsubp
shl
ret
lcall
jb
bound
jp
arpl
push
or
xor
into
ds
cs
ret
lcall
lea
inc
sbb
in
inc
std
push
insl
sarl
dec
icebp
pop
loope
nop
pop
mov
out
out
decl
jno
popa
lods
adc
and
jge
dec
icebp
pop
loope
xchg
cmp
in
push
std
inc
int
frstor
je
add
sarl
dec
icebp
pop
loope
xchg
cmp
mov
mov
push
into
pop
into
push
hlt
push
sbb
xor
and
push
out
xchg
movsb
and
sub
sub
cwtl
ss
into
adc
mov
or
cmp
sub
jo
xor
mov
jo
rcll
daa
and
js
out
dec
push
bound
call
sahf
lods
out
ss
insl
pop
pop
aam
in
mov
nop
ret
mov
jo
sub
and
std
add
and
adc
ds
rcrb
sbb
mov
inc
mov
std
inc
cmp
rcll
xlat
ja
mov
or
push
mov
sahf
dec
add
push
dec
xor
rorl
loope
xchg
cmp
mov
int
frstor
adc
addr16
push
mov
dec
push
cmc
aam
aad
and
adc
gs
inc
call
mov
sbb
dec
shlb
dec
out
lahf
xor
xor
je
xchg
in
divl
nop
jge
or
orl
jno
popa
lods
adc
and
jge
dec
icebp
pop
loope
xchg
cmp
mov
int
frstor
adc
and
sbb
rcrb
iret
add
addb
cs
repnz
push
mov
ja
shll
push
fisubl
and
and
adc
and
mov
push
lods
outsl
popa
mov
loope
mov
mov
mov
stc
nop
stos
mov
sub
mov
sbb
roll
fdivl
inc
mov
arpl
repz
pop
ss
ret
rcrl
divb
iret
dec
dec
sub
in
adc
or
jecxz
aam
call
leave
xchg
leave
inc
insb
cmp
pusha
push
ja
leave
mov
mov
sub
mov
mov
data16
add
rcl
call
inc
into
jl
rcr
repnz
lret
in
fs
push
sub
xchg
or
aad
jns
das
test
mov
dec
jns
mov
cmpsl
sbb
jl
cmp
nop
push
cmp
pop
roll
mov
sbb
imul
jge
sar
xchg
shl
sub
cmpb
cmc
mov
sar
pop
loope
loop
add
pushf
push
mov
jns
sub
mov
push
sbb
cwtl
iret
or
bnd
in
out
xor
into
sti
scas
xor
outsl
dec
xor
ret
call
popa
add
ss
cmp
cmp
dec
jp
mov
addr16
xchg
xor
rorl
add
test
packssdw
inc
test
int3
out
cltd
pop
pusha
xor
dec
jg
cmp
xchg
sbb
ficoms
ret
in
mov
jb
scas
stos
ret
es
inc
push
xchg
dec
adc
stos
out
jmp
sbb
push
xchg
or
and
stc
jp
fmuls
mov
cli
hlt
roll
sub
es
sarl
jnp
xchg
push
sbb
out
cmc
fsubr
je
add
adc
and
push
adc
jb
imul
inc
xor
mov
mov
cltd
inc
xchg
dec
stos
aaa
int
jno
movsb
inc
outsl
pop
fsubr
pop
xchg
xor
add
push
inc
icebp
jbe
inc
fidivrl
sbb
call
mov
sbb
xor
je
lea
daa
pop
add
jmp
jnp
push
or
cmpsl
fimuls
nop
das
jmp
push
stos
sub
popf
jge
cmp
dec
mov
pop
mov
pop
fisubs
gs
mov
jge
fiadds
scas
scas
aam
sbb
inc
cmpsl
xchg
and
push
outsb
stos
add
loopne
seta
repnz
pop
insl
aad
loopne
scas
push
and
daa
add
or
sub
xchg
and
push
adc
stos
cmpsl
and
jo
mov
test
les
gs
push
push
xchg
js
dec
and
vandnps
test
movsb
outsb
call
add
lds
inc
push
jmp
inc
scas
test
and
popf
out
cmpl
pop
sub
ja
into
pop
jp
pop
xchg
sarl
dec
insb
mov
pop
push
shll
sub
outsl
lea
popf
cmc
bound
orl
inc
pop
loope
mov
and
cmp
xadd
dec
add
lahf
ss
ret
dec
adc
push
add
add
sub
test
jae
push
cmp
cs
xor
sar
mov
and
inc
jne
adc
psrlq
shl
mov
icebp
sbb
repz
in
mov
fwait
inc
rorl
in
add
sbb
and
rclb
movsl
cmpsb
fsubl
mov
sbb
pushf
adc
jle
sbb
clc
icebp
dec
loop
ret
mov
xrelease
aas
mov
mov
sbb
rcrl
stos
mov
idivb
cs
in
jecxz
shll
dec
loope
das
mov
sbb
pop
fistpll
push
jmp
call
jbe
addl
out
lcall
pop
add
sbb
dec
cwtl
sbb
pop
push
push
popf
movsb
insb
loopne
mov
cmp
sbb
not
iret
iret
pushf
push
push
inc
daa
stos
xor
or
int
jb
xor
mov
icebp
es
arpl
xor
cmp
fiaddl
test
arpl
dec
cmpsb
mov
cmp
fidivrs
jns
add
inc
stos
enter
pusha
inc
ffree
push
imul
push
pushf
cmpsb
jnp
mov
jns
arpl
pushf
stos
and
aaa
lods
push
mov
mov
fmuls
fsubr
xchg
xor
mov
loope
cmp
sub
pushf
dec
push
push
popf
inc
xor
scas
mov
push
out
sub
dec
pop
hlt
addr16
repz
add
jae
cwtl
mov
hlt
inc
jno
push
orb
fistpl
mov
mov
adc
fcompl
mull
cmpsb
cmpsl
test
icebp
pop
mov
loope
mov
add
push
les
push
testl
rcll
jg
scas
fisubrl
xchg
les
loopne
mov
pop
cld
bound
or
mov
movsl
sbb
fmul
out
int3
cmp
out
aad
ja
lea
shl
lret
dec
jg
out
sub
mov
cmpb
std
cld
mov
dec
test
xchg
cwtl
pop
pop
pusha
bound
and
xchg
js
pushf
shlb
xchg
pop
push
and
stos
mov
mov
pop
aaa
outsl
push
fildl
std
sbb
and
pop
sub
sbb
in
xchg
lahf
ret
cmpsb
icebp
fwait
mov
out
mov
gs
fsts
out
sbb
or
js
in
mov
movsl
in
mov
mov
rorb
mov
xchg
xor
mov
cmc
lahf
test
mov
mov
mov
sub
dec
xchg
jno
ficompl
stos
adc
fdivrl
cmp
xchg
mov
lds
imul
lods
mov
push
add
es
aas
stc
push
dec
das
ja
push
jb
notl
pop
adc
lock
shr
xchg
lret
iret
push
ljmp
cmp
into
cmpsl
es
inc
xchg
add
std
mov
or
sarl
jb
aas
cs
out
sub
cmc
xchg
hlt
xor
in
push
dec
xchg
lods
dec
in
or
mov
adc
call
out
call
js
fisubrl
enter
xchg
jl
fwait
inc
jns
jl
bound
int
int3
sub
dec
jle
mov
lret
pop
scas
es
in
jmp
repnz
js
add
shl
cmp
out
jno
xor
aam
rol
jge
push
das
add
push
cmp
dec
adc
jp
push
mov
or
addr16
popa
movsb
gs
add
push
insb
mov
int
pop
lahf
out
cltd
or
mov
or
in
out
adc
mov
add
xor
outsl
movsb
adc
imul
inc
arpl
out
add
pop
in
xchg
cmpl
addr16
add
mov
pop
dec
fdivrs
push
test
dec
mov
and
adc
test
dec
inc
pop
test
adc
adc
push
hlt
scas
pop
inc
jle
mov
test
popf
add
outsl
add
mov
icebp
jmp
xchg
or
loop
jo
push
mul
idivb
pop
lret
lock
mov
mov
test
enter
inc
les
or
push
test
pop
sbb
pop
repnz
orl
or
lret
xlat
call
fidivs
push
mov
pop
cli
ja
pop
cli
xor
cli
hlt
dec
cs
dec
mov
mov
lcall
or
rorb
clc
fisttpll
xchg
or
mov
insl
sbb
sub
outsb
push
xor
movsb
vpunpckldq
out
out
dec
cmpsl
xor
mov
mov
jne
loopne
fs
clc
pop
outsl
mov
aas
sbbb
es
fcomps
ja
sbb
push
mov
push
jnp
mov
xor
cmp
cmp
xchg
test
add
xor
adc
push
push
jg
cmp
in
pop
inc
sbb
jbe
pop
shl
cs
cwtl
pop
xchg
and
jb
jno
adc
sub
pop
push
leave
cmc
inc
jae
add
es
adc
mov
stos
xchg
mov
cmp
test
cs
rclb
xor
xchg
sbb
ja
mov
aaa
cs
fiadds
sar
xchg
xor
aas
jp
adc
xchg
lods
shll
fwait
adc
push
mov
fdivr
mov
jecxz
xchg
jnp
adcl
sbb
xchg
ja
and
push
xchg
lds
iret
dec
shl
fwait
addl
int3
pop
outsl
mov
test
fs
stc
adc
push
je
or
adc
movsl
and
ret
mov
pop
sbb
cld
inc
sub
leave
fwait
ret
add
outsl
jmp
movb
mov
mov
fmull
and
addb
pop
mov
cmp
jmp
call
orb
dec
stos
xorb
rcrl
loope
mov
lds
mov
sbb
std
inc
out
cli
mov
push
pop
lds
roll
aas
jmp
mov
inc
inc
adc
mov
or
adc
add
cmp
adc
inc
xchg
fistpl
fsubs
cld
test
shlb
rorl
mov
add
fs
push
sub
sub
js
int3
sbb
xchg
adc
data16
push
test
or
addb
cs
or
aam
lods
out
dec
scas
out
jmp
nop
pop
gs
shl
call
test
out
out
inc
jg
insb
dec
pop
shl
and
xchg
or
mov
cmp
frstor
xchg
insl
aas
dec
out
jecxz
pop
xor
aaa
cld
push
jl
jbe
icebp
fildll
cmp
cmp
test
push
dec
lds
scas
pop
cmp
push
shl
mov
rorb
inc
push
popf
jmp
push
rcrb
sbb
ja
pusha
xchg
lret
push
add
mov
ja
push
jecxz
repz
aam
shll
jb
mov
jl
push
adc
shll
mov
mov
notl
add
repnz
test
xor
cmp
aaa
mov
dec
pop
popa
rolb
mov
cmp
xchg
lcall
push
push
xchg
pop
or
xchg
sbb
cwtl
and
imul
cmp
scas
dec
pop
stos
ret
ja
xchg
cmp
lcall
test
stos
xadd
icebp
mov
roll
add
rcr
fwait
xchg
jo
nop
jbe
mov
ja
jmp
xchg
rcrb
les
adcb
mov
mov
lret
mov
jo
dec
mov
sub
inc
ja
fcmovne
mov
push
mov
call
add
repz
cmp
hlt
stc
mov
and
outsl
jmp
outsb
sti
pop
dec
fbld
sar
out
insb
mov
daa
and
fnsave
loope
aam
clc
add
in
xchg
clc
das
adc
cli
divb
outsb
daa
mov
lret
and
mov
rcll
push
mov
mov
clc
das
lea
sub
or
gs
jae
or
add
movsb
cmpsb
icebp
sub
stc
mov
and
mov
dec
mov
mov
lahf
sbbb
and
out
fwait
andb
mov
pop
or
sahf
jg
pop
inc
mov
sub
dec
inc
inc
inc
dec
dec
fildl
sahf
sbbb
sub
cmp
lcall
std
inc
jno
inc
mov
mov
pop
into
mov
std
mov
out
add
add
fistl
push
and
stc
test
mov
xchg
int3
call
decl
dec
xor
out
aad
int
or
sbb
jbe
dec
sarb
mov
es
and
hlt
fdivl
bound
sbb
test
pop
fcmovnb
adc
je
in
lahf
pop
xor
adc
js
sub
mulb
out
stc
push
or
sub
jns
lret
aaa
sbb
xchg
sbb
sarl
xor
lret
enter
clc
dec
sbb
mov
test
leave
rorb
mov
sub
xor
adc
fwait
nop
inc
sub
push
repz
mov
adc
ret
in
out
xor
in
out
stc
pop
mov
ret
push
mov
xlat
pop
push
cmp
stos
dec
inc
ds
fmul
lahf
mov
call
out
jp
jnp
in
xchg
push
pop
xlat
ss
xlat
icebp
lea
test
fwait
std
in
aaa
aad
jo
mov
sbb
jl
pushf
aad
push
add
xor
push
lods
mov
lcall
mov
scas
xor
add
stc
cltd
test
xchg
lods
loope
sbb
cmp
js
mov
push
js
jns
in
repnz
jno
xor
shlb
fs
pushf
loopne
mov
mov
cmpsb
stos
or
jmp
hlt
cmp
or
cmp
sbb
addr16
lret
pop
mov
rcll
lds
loopne
dec
jg
inc
fsubrp
mov
lret
fsub
gs
jno
addr16
cwtl
repz
aas
lret
decl
shll
or
loope
mov
cmp
lret
inc
fisubs
cmp
and
fisttpll
xor
into
add
xlat
lds
xor
call
xor
push
pop
mov
adc
ret
imul
roll
imul
test
nopl
je
sbb
mov
mov
mov
sbb
xchg
xor
or
inc
xchg
inc
arpl
dec
gs
lods
and
test
jnp
cld
add
push
add
leave
mov
popa
lcall
or
jns
dec
gs
addr16
push
cmp
xchg
in
adc
ret
inc
je
sbb
out
lods
hlt
lcall
roll
mov
sarl
inc
inc
enter
xor
sti
pusha
push
adc
jno
test
dec
xor
inc
mov
je
add
ret
cli
cmpsb
in
adc
fistpl
shrb
fbstp
inc
stos
xchg
adc
push
lods
xchg
cltd
xchg
cld
ret
loop
cmp
sbb
sbb
loop
or
sar
arpl
jp
add
rcl
data16
jmp
dec
mov
out
and
mov
outsb
mov
sub
in
pop
pop
mov
leave
dec
sti
xor
pop
xchg
ss
cs
mov
mov
popf
push
or
jge
cmp
ds
addl
pop
push
into
sbb
adc
out
and
xchg
mov
test
insb
fistl
dec
rcrb
test
movl
das
insb
push
ljmp
push
jb
mov
push
sbb
jb
stc
mov
stc
shrb
insl
loope
or
imul
scas
pop
jl
sti
jno
pop
add
mov
sub
popa
add
adc
nop
cmc
sub
or
rol
icebp
and
pusha
sbb
enter
inc
sbb
ss
es
fmuls
jne
sahf
xor
and
sub
push
les
pop
outsl
mov
lds
adc
les
push
mov
loop
test
in
aas
cmpsl
stos
xor
call
pushf
into
inc
test
out
insl
or
push
push
mov
mov
in
push
jecxz
jmp
das
cmp
add
dec
xchg
fnstcw
cmc
sub
mov
add
sbb
mov
dec
shlb
cmp
xor
pop
jno
xchg
into
jle
sub
mull
das
les
mov
sub
push
pop
sahf
divl
pop
int3
push
mov
pop
cmc
ficoms
mov
loope
adc
call
loopne
sub
cmp
lods
seto
cld
sti
sbb
loopne
test
sbb
push
addr16
jnp
xlat
popf
jno
outsl
stos
sbb
inc
xchg
in
adc
nop
pop
insb
inc
jne
lods
jle
xlat
shlb
adc
pop
fs
push
daa
mov
add
mov
sub
lret
movsb
sbb
loopne
sub
fscale
pusha
call
cmpsl
or
mov
pop
aad
mov
inc
sbb
push
dec
mov
ficoms
or
inc
add
icebp
das
lods
es
mov
add
xor
movsb
pushf
not
and
push
adc
xor
lret
sbb
in
or
cmp
sub
dec
sti
jge
dec
sub
mov
out
popa
popf
xchg
lret
cmp
les
dec
std
mov
push
xchg
stos
push
stos
addr16
outsb
xor
xor
test
int
jb
decb
push
adc
jne
dec
mov
jo
in
add
enter
js
stos
cmp
or
jo
jge
ljmp
push
mov
inc
lock
sti
dec
fwait
jl
sub
out
pop
xchg
sar
push
inc
sub
cltd
jno
and
outsl
push
inc
aad
out
lods
mov
call
sub
add
push
fwait
inc
hlt
inc
and
shrl
inc
pop
stos
dec
test
fldcw
aam
fldenv
xchg
aad
add
jae
cmp
repnz
cmp
ljmp
mov
sub
sub
inc
out
mov
pop
mov
cmpsl
jg
fidivl
push
sahf
push
dec
sub
cmp
and
into
dec
mov
mov
jg
push
popf
xor
mov
xlat
lahf
ret
repnz
xor
je
push
inc
aam
lret
cwtl
xchg
sbb
xchg
dec
dec
adc
das
mov
cld
movsb
insl
cltd
dec
sbb
test
fwait
out
mov
insb
es
insb
jmp
xor
test
lods
pushf
mov
sahf
icebp
ss
mov
xor
sbb
call
lahf
je
mov
ret
push
dec
std
or
test
lret
notl
out
mov
ds
xor
je
fpatan
pop
pop
testb
ss
ret
mov
les
xorl
xor
push
pop
and
subl
jne
fs
addb
push
add
sub
or
out
jmp
loopne
test
inc
dec
outsl
imul
stos
scas
insb
movsl
cs
lds
pop
xchg
addr16
stc
mov
inc
push
cmp
lret
jne
pop
sub
andl
jnp
popl
test
outsl
dec
mov
pop
inc
into
lcall
mov
dec
xsaves
lret
sbb
jae
adc
xchg
pop
lahf
sub
and
std
xor
mov
jno
scas
imul
cwtl
mov
xor
in
aaa
cmp
cmp
mov
push
jmp
dec
and
sbbb
sub
cld
test
xor
divl
arpl
icebp
xchg
mov
popf
xor
fwait
lret
xchg
in
mov
mov
cmp
cwtl
push
jnp
cmp
cmpsl
sub
arpl
stos
push
xor
call
loopne
xchg
xchg
push
jbe
das
stos
cmpsl
inc
mov
add
jno
ja
cmp
imul
xorl
icebp
add
add
enter
loop
xchg
or
stos
fs
push
mov
leave
std
jb
push
sahf
and
cmp
out
inc
aaa
push
dec
flds
xchg
sarl
int3
dec
push
cli
adcb
xchg
mov
loop
cmpl
test
lea
lock
push
sub
add
dec
pusha
cmp
test
fldenv
or
xchg
mov
inc
cmc
mov
jp
leave
lret
push
mov
addr16
inc
xchg
xchg
roll
or
insb
add
xor
adc
cmp
inc
pop
push
scas
mov
mov
arpl
cmpsb
fmuls
and
enter
lret
push
outsl
xchg
mov
jecxz
and
repnz
inc
push
je
adcl
aaa
lock
mov
and
testl
inc
arpl
mov
nop
outsl
pop
mov
test
andl
call
rcrl
dec
pop
push
enter
xchg
mov
mov
hlt
xchg
push
mov
lret
out
lea
mov
imul
scas
xor
cmp
sbb
dec
jmp
sbb
xor
adc
rep
bts
out
or
faddp
mov
sub
jmp
jb
pop
loope
xchg
cmp
mov
int
frstor
adc
and
jge
dec
icebp
pop
loope
xchg
cmp
mov
int
frstor
adc
and
jge
dec
icebp
pop
loope
xchg
cmp
or
push
std
inc
int
fsubl
adc
and
jge
dec
icebp
pop
loope
xchg
cmp
popa
adc
jmp
jno
push
ficompl
fidivs
push
daa
mov
mov
orl
xchg
push
xchg
outsb
out
xlat
pop
pop
aaa
scas
daa
mov
ja
addr16
push
into
inc
fidivs
xchg
aaa
or
pop
aaa
mov
mov
ja
addr16
inc
les
jnp
push
imull
mov
mov
scas
inc
xlat
pop
cli
imul
push
mov
mov
or
mov
mov
add
dec
push
clc
bound
inc
mov
push
jmp
sub
push
das
cmp
shll
cld
mov
sbb
mov
repz
xchg
mov
fwait
cmpsl
jle
jle
mov
pop
aaa
daa
mov
push
into
jb
rclb
and
imul
cmpsl
adcl
pop
divl
jle
into
addr16
sahf
add
pop
mov
cli
push
movsb
push
sbb
xchg
mov
aam
mov
aam
pop
inc
push
loopne
push
sub
scas
push
cmpsl
cmp
inc
dec
sti
scas
daa
test
ja
addr16
push
xlat
inc
mov
cmpsl
es
pop
xchg
divl
imul
lret
push
mov
ja
adc
mov
inc
ret
pop
pushl
add
sub
push
inc
mov
ja
and
das
stos
adc
pop
xchg
jp
pop
negb
adc
out
daa
fstpt
imul
andb
into
inc
fidivs
push
xchg
imull
jle
dec
pop
aaa
scas
daa
mov
ja
addr16
push
into
inc
fidivs
push
xchg
imull
jle
dec
pop
aaa
scas
add
mov
gs
mov
mov
mov
push
pop
arpl
ficompl
pop
dec
xchg
fidivl
pop
mov
fs
arpl
jecxz
jb
jp
jno
inc
movsb
addb
nop
mov
aaa
cli
push
std
test
mov
sbb
fwait
cltd
imul
push
lods
sbb
mov
adc
xchg
and
std
mov
jbe
pop
or
pop
insb
cmp
fbstp
mov
pop
sub
loopne
sarl
sbbl
mov
bound
xor
pop
jno
stos
mov
mov
les
loope
and
xlat
shll
lahf
stc
pop
jmp
xchg
fs
dec
fs
cli
pop
mul
lods
and
roll
inc
scas
xor
cmp
add
lock
mov
das
and
push
add
int3
movsl
push
jnp
mov
cs
xor
sbb
add
inc
daa
mov
insb
mov
push
outsb
push
mov
loop
imul
xor
fistpl
fmul
sti
jb
sbb
jae
gs
xchg
pop
pop
loop
into
mov
mov
add
ds
mov
mull
sub
xchg
adc
lds
sub
lahf
and
inc
push
fbstp
rorl
pusha
pop
mov
mov
jl
inc
pop
in
mov
shl
pop
xorb
fidivl
movsl
jo
ljmp
ret
xlat
jecxz
pushf
jbe
push
test
mov
scas
cs
add
sbb
into
sub
arpl
mov
je
xor
test
jae
out
xor
sbb
sub
shrl
pop
stos
ja
movsb
insl
dec
dec
cwtl
ja
dec
and
adc
das
in
push
sub
lret
in
push
and
mov
sub
pop
mov
xor
daa
sub
adc
mov
sbb
ret
and
push
fcomps
dec
jo
lods
cli
xlat
je
mov
cmp
dec
jl
loope
int3
cmp
hlt
fdivl
mov
clc
lret
sbb
call
xor
inc
adc
sub
pop
pusha
cld
xchg
mov
push
stc
in
dec
test
data16
ljmp
mov
int
and
cwtl
or
add
pusha
enter
popa
mov
jge
jo
pop
inc
test
push
cmpsl
jbe
shlb
loopne
inc
adc
push
mov
xchg
sub
dec
sti
mov
cmpsl
mov
iret
shll
rcrb
inc
out
cltd
inc
pushf
add
and
fiaddl
push
dec
cmp
jmp
std
hlt
fsubrl
add
xor
and
inc
sbb
sbb
xor
sbb
andb
ds
cli
repnz
mov
jne
imul
cmc
ret
hlt
xlat
iret
dec
cmpsb
inc
or
sub
ss
fs
pusha
and
jle
jge
ror
adc
bound
std
mov
lods
sbb
mov
ss
call
jg
sbb
lea
hlt
or
xlat
in
jo
push
or
xor
inc
cmp
pop
sub
dec
fwait
jne
jmp
std
or
xchg
jnp
cmp
jbe
mov
dec
lds
dec
mov
aam
es
cmp
mov
mov
or
andl
mov
scas
push
push
jns
test
and
jbe
dec
sti
loop
loopne
rol
aad
push
xor
je
push
rclb
and
pop
cltd
cmc
mov
xchg
sub
jecxz
loope
mov
imul
rcrl
mov
jne
sub
ss
xor
stc
mov
shl
sub
or
test
lcall
cmpb
dec
jnp
inc
ljmp
xchg
in
lds
push
sub
sbb
rol
movsl
enter
add
xor
cmp
aam
call
sbb
js
bound
push
add
bound
sti
ficompl
dec
stos
mov
mov
or
push
mov
and
adc
ja
clc
and
lret
add
push
aas
fcompl
mov
pop
ss
roll
in
cltd
dec
roll
addr16
fdivrl
push
lds
cs
mov
sbb
or
andb
lahf
pusha
jp
jnp
pop
xor
sbb
mov
lret
in
jne
add
test
ret
mov
hlt
or
add
ret
adc
push
pop
xor
orl
adc
cmp
and
xchg
ret
int3
filds
adc
das
add
pop
push
or
pop
xor
jbe
xchg
test
stc
in
subb
push
ja
adc
testb
pop
jmp
and
mov
sti
jnp
test
pop
inc
fimull
insb
or
and
je
pop
clc
stos
jo
push
push
ja
sbb
sti
mov
dec
add
insl
cld
movb
orl
ljmp
je
lds
aaa
xor
adc
dec
into
icebp
pushl
push
mov
mov
cld
aaa
shrl
push
inc
loopne
imul
bound
movsl
sbb
dec
out
sti
xor
das
aas
pop
xchg
cmp
mov
cmpsl
cli
cmpsl
aam
push
addr16
mov
pusha
jl
icebp
mov
pushf
pushf
les
mov
pop
and
jne
and
and
xor
aam
lea
mov
sti
cltd
xchg
mov
cltd
inc
aam
sub
jae
push
push
outsl
gs
cmpsb
push
lret
xchg
mov
adc
push
cld
clc
sbb
jge
in
fcoml
iret
adc
mov
mov
orb
push
aas
xor
cld
sub
mov
push
dec
mov
xchg
jns
xchg
xor
sti
dec
cmp
mov
mov
jle
or
adc
lret
cmp
lods
sbb
jno
jecxz
lds
mov
sub
in
test
mov
sti
dec
test
xlat
scas
test
ret
sub
fsubrs
imul
subl
cltd
sahf
inc
cld
hlt
dec
insl
inc
insb
and
fmuls
xchg
xchg
push
popa
bound
daa
jns
dec
xor
xor
dec
xor
dec
sub
aad
adc
pop
nop
or
out
stc
sahf
loop
xchg
cli
cmpb
stos
es
negb
outsl
xchg
push
lods
mov
jbe
std
pushl
push
cmp
lods
ljmp
adc
repnz
pop
jnp
pop
dec
fnstenv
add
fisttps
outsl
sarl
ja
movsb
in
jb
mov
inc
sbb
cmp
test
daa
xor
cmp
push
popl
sti
dec
cmc
push
shrl
cmpsb
dec
in
iret
fs
xchg
jl
mov
fldl
mov
aas
add
popf
mov
xlat
aam
lahf
lock
dec
lret
out
movsb
jns
inc
ja
int3
push
xchg
scas
push
sahf
fisttps
daa
dec
lcall
push
ficomps
aaa
loopne
ficoms
es
mov
rcl
enter
stos
xchg
aad
pop
shll
xchg
add
inc
sti
out
dec
mov
mov
cmp
in
mov
fstps
xor
clc
cmp
lcall
or
bound
cmp
cmp
insb
mov
or
stc
out
imul
xor
add
leave
sub
fisubs
sub
mov
out
and
push
shrb
jge
jbe
imul
jno
jo
or
sbb
fwait
mov
out
cmpsl
lods
lock
adc
test
pop
pop
add
lods
jno
xor
mov
cmp
mov
mov
inc
insb
mov
mov
mov
add
ds
push
fs
pop
sahf
loopne
adc
inc
arpl
adc
lahf
add
scas
jge
push
cmp
jecxz
data16
pop
push
add
push
shl
pop
inc
jg
mov
push
shlb
lods
popa
leave
jbe
push
push
arpl
lods
imul
aam
jecxz
push
mov
adc
ljmp
adc
inc
lea
andl
popa
cs
mov
inc
lahf
lret
not
push
or
push
sbb
out
pusha
scas
dec
lea
test
mov
rcrl
pop
adc
cli
ds
push
cli
adc
pop
test
sub
jno
and
pop
xchg
flds
fwait
jo
dec
stos
push
add
jnp
xchg
and
rcr
out
sbb
sarl
gs
sbb
popf
aaa
cmp
xor
addb
jbe
add
std
inc
das
cmp
jp
jne
sahf
cmp
fiadds
mov
mov
xchg
xchg
stos
push
add
pop
iret
into
mov
test
icebp
lahf
test
dec
xchg
jge
bound
or
xchg
jnp
jne
imul
sub
aad
push
daa
cmp
inc
mov
mov
cvttps2pi
js
mov
add
loopne
lcallw
test
shrl
or
int3
fs
sbb
jo
and
movsl
shl
jno
and
sbb
or
dec
add
gs
xor
pop
aaa
xchg
sbb
mov
cld
or
fdecstp
xchg
fidivrs
add
jp
cmpsl
aam
sub
mov
pop
sub
stc
insb
sti
cmp
popa
test
outsb
push
lds
cmpsl
in
lods
out
push
imul
add
inc
aas
rcll
xor
faddl
jmp
xor
jle
movsl
xchg
inc
shrl
in
sti
shlb
jmp
call
arpl
mov
repz
or
clc
es
inc
inc
and
test
test
jmp
inc
xor
lock
aad
scas
mov
shll
xchg
pop
mov
lahf
call
dec
lds
push
mov
jle
sbb
fs
pop
pop
int
sub
mov
add
leave
mov
push
mov
mov
mov
cltd
in
and
cmp
int3
fstpt
cmp
out
gs
dec
lods
lods
xor
loop
loope
push
inc
in
mov
push
out
xchg
or
adc
sahf
sub
outsl
out
into
mov
and
dec
out
and
and
imul
mov
popf
int3
insb
mov
in
out
sbb
cmp
ja
div
dec
jge
loope
loope
jne
sti
fnsave
imul
fcmovu
adc
pop
add
jg
mov
jecxz
enter
outsb
dec
jle
js
cmp
cmp
dec
mov
jno
sbb
pop
jae
stos
test
inc
xor
mov
push
jp
jle
and
add
insl
je
rolb
pop
jbe
jp
inc
inc
dec
and
imul
dec
enter
add
scas
xlat
inc
sti
pop
adc
fisttpll
push
out
pop
pop
sahf
fnstenv
pop
dec
pop
dec
lods
add
xchg
dec
lock
lods
ret
stc
lods
enter
dec
ret
in
pusha
adc
push
lock
mov
fimull
xchg
xchg
and
sub
insl
sarl
cmc
fnstenv
and
std
sbb
inc
lods
sbb
lahf
mov
loope
add
shl
idivb
pop
jecxz
out
mov
aad
dec
icebp
fst
push
xor
mov
xchg
jmp
lods
push
inc
sbb
daa
mov
in
sahf
mov
push
fs
hlt
leave
and
adc
add
mov
aaa
sub
int
mov
dec
jb
mov
mov
test
bound
cmp
rorl
add
or
jnp
mov
inc
push
dec
add
push
les
pop
xchg
or
sti
pop
jecxz
cmpsb
lock
push
adc
xchg
lock
adc
andb
push
fwait
pop
ret
add
jl
pop
mov
mov
mov
adc
mov
loope
cmp
fsts
xchg
aas
sub
jb
out
loopne
in
adc
inc
or
inc
shll
dec
dec
jmp
adc
jge
stos
scas
xchg
loope
lea
add
xchg
pop
imull
xor
jl
aam
or
into
mov
ljmp
outsb
jno
adc
lods
and
test
inc
mov
xchg
sarb
mov
int
sub
and
xlat
xor
aaa
mov
shll
lods
mov
and
aas
leave
or
in
jnp
inc
lcall
sbb
mov
int
shll
xor
pop
add
mov
pop
rolb
scas
mov
ss
ds
sti
adc
pop
shlb
loopne
mov
mov
dec
xchg
insl
pop
cmp
test
mov
xor
mov
ljmp
and
inc
test
push
faddl
aaa
popa
mov
test
std
addr16
loop
adc
inc
inc
into
dec
cmp
sub
and
dec
mov
hlt
pop
push
lcall
mov
movsb
cld
push
mov
dec
or
sbb
pop
or
mov
js
or
mov
int3
es
push
add
add
nop
test
jge
fistpl
out
dec
jle
sbb
inc
sbb
jae
adc
addr16
js
movsl
mov
je
sbb
jb
cmp
pop
pusha
cmp
push
sbb
imul
fwait
inc
outsb
cmp
cmp
orl
outsl
into
sub
rcr
movsb
pop
sub
pop
enter
fisubs
inc
loop
movsl
bound
mov
imul
xchg
cmc
cmp
jb
mov
test
ret
sbbb
insl
hlt
fnstenv
pop
fldl
ret
sub
xor
hlt
fs
push
aas
pop
sti
jb
mov
or
mov
mov
pop
mov
pop
jle
xchg
adc
xchg
cmp
sbb
outsb
cwtl
stos
dec
pop
loopne
scas
les
aas
sbb
mov
xlat
xchg
push
jg
pop
into
jbe
cld
rcl
pop
rolb
test
ss
int
in
flds
xchg
in
dec
push
xchg
mov
pop
jnp
xorl
or
mov
mov
lods
rorb
fld
js
testb
mov
pusha
nop
mov
push
gs
mov
and
xor
xor
stos
lock
fmul
xor
fnstsw
jmp
stc
push
test
xlat
sub
data16
mov
jecxz
movsb
gs
mov
movsl
ja
push
pusha
cmc
test
loop
loope
or
iret
jg
pop
mov
cmp
repz
mov
rorl
mov
xor
and
and
rolb
push
sbb
xchg
mov
xor
or
aad
mov
push
pop
sbb
push
xchg
mov
sub
test
in
ljmp
repz
js
jge
and
fildll
test
pop
lret
lahf
mov
leave
sub
pop
decl
test
rclb
push
adc
or
adc
scas
xchg
adc
pop
mov
xor
lcall
shr
mov
loopne
in
mov
mov
dec
out
sub
lock
idivl
cwtl
stos
sub
pop
jle
add
dec
xlat
sub
adc
in
rolb
mov
jecxz
xlat
lret
aam
cmp
and
fidivl
outsb
cmpsb
cmp
subl
or
mov
add
sub
insb
push
ret
pop
push
or
incb
mov
adc
pop
arpl
mov
ds
cmp
inc
or
adc
push
and
cmpsb
test
sub
mov
movsl
push
scas
fdivrl
ja
rorb
popf
pop
mov
or
shll
xor
mov
pop
jp
sahf
jnp
jg
xchg
adc
or
mov
fcomps
add
mov
xor
mov
pop
jbe
sbb
push
nop
in
lock
aas
mov
hlt
movsb
mov
test
lcall
adc
rorl
lds
push
and
and
xor
orb
push
fiadds
int3
rcrl
je
mov
add
xlat
icebp
das
cli
sub
push
xor
jge
sahf
sarb
mov
mov
js
ret
jl
lret
pop
daa
adc
push
in
inc
enter
hlt
xor
mov
add
loope
pop
adc
js
in
mov
cmpsb
adc
repnz
testl
cmp
dec
rcr
pop
or
inc
and
loop
xorl
push
mov
mov
movsl
sahf
popf
idivl
and
sbb
mov
mov
bnd
sub
scas
sbb
cld
enter
mov
and
inc
inc
outsb
xor
push
inc
inc
mov
pop
ret
pushf
cmpsl
pop
and
incl
mov
fmulp
lea
addr16
outsl
xlat
stos
dec
sub
into
in
dec
outsb
or
cmp
xchg
mov
nop
mov
mov
aad
aam
popf
adc
cltd
filds
lea
cmpsl
das
cmp
xchg
fdivrs
adc
ljmp
divps
sub
mov
fildl
nop
repz
popa
cmc
mov
or
mov
pop
out
and
repnz
ret
cmp
lret
xor
inc
fmull
jecxz
cwtl
sbb
sbb
icebp
xchg
popf
pop
sub
and
xchg
sbb
mov
adc
jbe
cmp
aam
mov
hlt
lahf
xchg
in
cmp
push
pop
mov
cmpsb
dec
fdiv
popf
es
out
push
mov
adc
xor
pop
or
mov
incl
dec
push
jb
mov
lds
xlat
cmc
rorb
pop
test
movsb
or
mov
ret
idivl
cmpsl
clc
jp
xor
lds
iret
lahf
lea
pop
hlt
insl
and
push
pminsw
enter
cmp
lret
add
stc
stc
in
mov
mov
mov
cmp
rolb
pop
mov
pop
push
ret
and
pushf
test
stos
mov
pop
arpl
jmp
mov
push
in
insl
and
into
mov
fimuls
xchg
into
mov
int
clc
mov
cmpsl
cld
in
cmp
shl
aas
test
dec
daa
pop
roll
sub
bnd
or
popa
in
mov
push
xor
mov
push
shlb
fiadds
push
jl
xor
add
insl
andb
gs
cmpl
sbb
push
fwait
mov
mov
mov
add
shr
pop
mov
xor
sub
ja
inc
out
in
add
inc
inc
ljmp
jp
rclb
jbe
push
xchg
mov
arpl
insl
fmuls
mov
in
dec
mov
decl
loope
cmovnp
mov
cld
mov
and
mov
and
inc
insl
loopne
movsl
xor
jl
mov
adc
mov
mov
push
fs
pop
mov
dec
mov
dec
xchg
mov
pushf
jl
pop
incl
mulb
inc
stos
shrl
mov
inc
mov
inc
scas
daa
pop
jl
xor
push
arpl
cs
arpl
sbb
hlt
incb
leave
lock
mov
jge
mov
mov
fdivrp
add
inc
xchg
js
adcb
fdivr
xchg
shrb
jg
imul
inc
mov
mov
lahf
inc
rclb
and
sti
das
xor
in
fcomip
jmp
sbb
lcall
gs
enter
jb
repnz
popa
cld
or
xor
out
add
mov
sub
pop
insl
xor
fimuls
out
les
nop
xchg
jbe
into
test
ds
pushf
insl
dec
sub
and
inc
push
popf
mov
in
iret
mov
imul
aad
jmp
mov
push
out
dec
loopne
mov
in
sarl
dec
xchg
cs
add
outsl
add
adc
push
sub
pop
mov
xchg
sub
xchg
scas
sbb
push
and
shll
push
nop
push
pop
mov
roll
stc
js
fildl
scas
sbb
mov
test
sbb
dec
cwtl
loopne
dec
cmp
jae
aaa
stos
loop
adc
jno
nop
orb
and
jo
jecxz
cmpsb
mov
dec
push
addb
dec
cltd
push
andl
dec
insb
lds
rclb
inc
jo
fdiv
addr16
jno
sbb
sub
mov
ret
test
rorb
sbb
jl
enter
inc
sbb
mov
mov
mov
push
sub
pop
lea
mov
ja
addr16
push
into
inc
fidivs
push
xchg
imull
jle
dec
pop
aaa
scas
daa
mov
ja
addr16
push
into
inc
fidivs
push
xchg
imull
jle
dec
pop
aaa
scas
cmpsl
mov
imul
addr16
push
into
fidivs
push
xchg
imull
jle
dec
pop
aaa
scas
daa
mov
ja
addr16
push
into
inc
fidivs
push
xchg
out
andl
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
icebp
jns
imul
jne
dec
jecxz
mov
jo
popa
jmp
xor
add
rcrl
dec
mov
mov
jno
stc
popa
jmp
xor
adc
call
pop
cmp
or
inc
lret
cmp
dec
notl
cwtl
or
dec
loop
mov
xor
lcall
cld
and
jo
push
loope
add
mov
add
lea
lods
int3
mov
pusha
adc
sbb
dec
jb
and
pop
es
sahf
imul
add
lock
dec
sbb
push
dec
lcall
cli
push
pusha
push
fs
mov
push
lcall
cmp
les
mov
sub
cmpsl
movsl
push
es
leave
ljmp
sbb
add
xchg
dec
or
mov
dec
mov
in
mov
je
jb
adc
clc
imul
cmp
or
jns
dec
fstps
sub
add
popf
jge
sub
movl
orb
xor
inc
int3
arpl
insb
sahf
sbb
or
cmp
dec
fstl
gs
jo
insl
xor
add
iret
gs
cmp
test
sub
stc
popa
jmp
xor
add
rcrl
dec
mov
mov
or
popa
jmp
xor
add
outsb
mov
mov
dec
ret
xchg
xchg
inc
dec
push
adc
jb
cltd
pop
lods
lret
sub
outsl
shlb
js
fdivl
sbb
insl
call
jae
xor
adc
add
jo
mov
add
ss
sub
sub
sub
nop
stc
push
aaa
dec
cmp
fildl
xchg
mov
sarb
aas
daa
dec
loopne
flds
out
loope
ret
sub
xor
sbb
lahf
int
push
mov
dec
unpckhps
jg
fadds
push
mov
push
mov
push
fiaddl
xchg
rclb
outsb
add
mov
dec
sti
orl
jecxz
movsl
test
insb
sub
push
mov
mov
inc
int
push
in
jl
jmp
cmp
es
int3
cld
lret
pop
out
mov
xchg
mov
jecxz
into
jne
loopne
test
jp
sub
push
ds
test
dec
push
hlt
outsb
cmpsl
hlt
jl
push
rcr
repnz
or
popa
shll
test
mov
xchg
pop
or
adc
mov
out
dec
test
sbb
mov
or
sbb
rcl
sub
int
dec
cmp
xchg
adc
add
addr16
dec
out
stc
xor
in
or
cmpsb
mov
imul
adc
pusha
mov
loopne
ja
inc
pop
or
or
inc
mov
jl
cmp
add
out
ret
leave
test
scas
out
stos
leave
adc
je
mull
mov
xor
jmpw
push
fisubrs
adc
mov
outsl
or
xchg
sbb
pushf
jns
mov
xor
cld
jp
push
ss
into
push
lret
and
test
push
aad
out
inc
mov
loopne
outsb
dec
clc
jmp
data16
lods
fildll
push
xor
mov
ror
xchg
outsl
ljmp
mov
xchg
jbe
xor
sub
and
lahf
addl
xchg
add
pop
les
adc
dec
xchg
jge
jno
and
inc
fists
pushf
ljmp
shr
mov
sbb
dec
push
dec
push
insb
jecxz
sbb
jb
insl
les
dec
mov
out
jge
adc
pop
cld
lds
add
jg
frstor
stos
hlt
in
xor
test
add
mov
push
jg
hlt
adc
mov
xchg
and
repnz
test
shrb
pop
push
sub
sbb
iret
fs
iret
or
push
jecxz
hlt
xor
adc
dec
es
pop
push
scas
int3
mov
insl
jo
test
pop
es
sub
sbb
jmp
data16
jecxz
push
add
fldcw
mov
jmp
xor
imul
cltd
ret
shrb
iret
adcl
xor
sbb
cmpsl
or
and
cmp
cmp
lea
xor
insl
pop
push
shl
pushf
insl
icebp
and
lahf
sti
and
sub
fwait
inc
aas
bound
push
xlat
push
negb
ret
arpl
je
and
testl
mov
fldenv
cmp
and
fdivl
inc
ja
inc
mov
add
adcl
aam
cmp
mov
mov
mov
push
in
cmp
push
shlb
int3
push
sbb
test
roll
rclb
fsub
dec
ljmp
shlb
imul
or
mov
xchg
mov
xor
int
pop
mov
mov
or
lret
pop
sahf
push
cmpsl
push
mov
comiss
push
and
push
mov
test
mov
pop
outsb
pop
sbb
xlat
cmc
mov
outsb
and
daa
ds
movsl
xchg
sbb
sub
sub
mov
in
adc
fstpt
lcall
stos
and
mov
pop
jg
ljmp
add
push
pminsw
push
adc
aas
xchg
xchg
out
or
rorl
adc
pop
loop
je
dec
mov
shlb
push
or
cmpsb
sbb
insb
es
pop
cmpl
sbb
cwtl
hlt
js
push
cwtl
adc
les
jne
sub
hlt
inc
cld
stos
and
imul
repz
or
outsl
lds
pop
jecxz
int3
sbb
cmc
sbb
push
aam
pop
xchg
fwait
inc
mov
and
mov
outsl
in
sub
xor
cmp
cli
and
aas
pop
shrb
in
shrl
cmp
stos
mov
mov
scas
movsl
cmp
inc
adc
xor
dec
cli
sarb
mov
aaa
push
lcall
jle
popa
jge
fwait
cmp
lret
lret
ljmp
les
sbb
cmpsl
cwtl
fwait
cmpl
div
xor
lods
pop
mov
push
ds
in
fiadds
jl
ss
addb
in
dec
shll
hlt
cwtl
xor
push
dec
movsb
shlb
stc
cmp
jnp
push
xchg
jg
adc
dec
sub
mov
push
xor
daa
xchg
push
and
add
ret
sub
loop
pop
mov
mov
stos
cld
pop
je
xorb
push
sub
lcall
sbb
push
sbb
adc
jo
add
xor
lods
imul
lock
inc
lcall
jle
xchg
jnp
pop
repnz
mov
jbe
push
movsl
shl
rep
pushf
pop
mov
je
mov
pop
xchg
jg
mov
add
mov
inc
pop
aam
pusha
lea
add
mov
xor
rcrl
decb
stos
rcll
in
inc
adc
push
xchg
shr
jg
jns
and
fistps
sbb
fstp
push
ficompl
sub
push
adc
das
add
lds
or
cmpsl
pop
insb
and
mov
sub
enter
mov
lahf
call
aam
cmpsb
pop
imul
ljmp
push
leave
lcall
insl
loopne
rclb
sbb
adc
mov
subl
push
or
stos
fstpt
pop
das
idivb
push
pop
int
push
mov
outsl
ljmp
xor
inc
add
dec
mov
addr16
into
push
inc
movsl
xchg
sub
sub
pop
cltd
and
scas
aad
xchg
adc
cltd
jno
mov
sbb
jne
pusha
xor
xor
movsl
jle
fs
pop
jl
nop
fwait
pusha
outsb
xlat
icebp
fstpt
and
clc
mov
mov
mov
pusha
iret
jmp
ja
test
pop
mov
jnp
in
rcll
push
or
xor
leave
mov
imul
dec
mov
adc
push
cltd
data16
jb
dec
push
mov
fsubr
loopne
in
or
sub
adc
lahf
shrb
mov
cltd
daa
insb
out
xor
pop
addr16
pop
cld
addr16
xchg
adc
lds
aaa
cmp
dec
test
xor
push
adc
rclb
push
dec
or
daa
and
xor
xchg
xlat
jb
call
lods
push
movsl
or
xchg
mov
adc
imul
sbb
pop
pop
int3
push
push
xchg
cmp
add
out
push
imul
push
add
out
test
inc
dec
push
cmpsb
xor
out
dec
ss
inc
int3
mov
sahf
faddp
mov
ror
out
fwait
add
aas
outsl
lods
aam
jp,pn
in
les
je
out
add
jae
mov
jno
push
cmp
out
adc
add
mov
sbbb
adc
xor
aam
pop
idivb
dec
outsb
pushl
jno
cmp
push
sahf
sub
xor
push
sbb
fxch
adc
lock
push
loope
fmull
leave
jle
das
sbb
push
cmp
fsts
je
sahf
push
shlb
mov
pop
xchg
push
jbe
notl
js
jnp
addl
dec
cltd
xchg
adc
stos
cld
cltd
pop
mov
das
insl
mov
insl
iret
cld
scas
and
jecxz
inc
mov
adc
bound
ret
mov
xchg
inc
mov
push
ljmp
push
jp
hlt
dec
pop
sub
stc
xor
push
aaa
mov
pusha
inc
dec
movsb
push
mov
sbbb
outsb
popf
fists
ficoms
inc
test
mov
dec
icebp
std
inc
int3
push
cmc
test
push
dec
outsb
push
stos
jmp
les
outsl
repz
jo
lods
push
sbb
call
push
xor
mov
xor
fisttps
loop
pop
jg
push
loopne
hlt
and
insl
out
lods
push
cmp
sbb
nop
mov
cli
test
lods
orl
shr
and
adcl
mov
popa
shrb
adcb
movsl
lds
lcall
dec
mov
insb
ja
xor
into
inc
lock
jns
loope
mov
mov
mov
and
push
and
xor
xor
ret
movsb
pop
mov
femms
lret
fs
dec
inc
insl
xchg
add
xor
frstor
sbb
and
cmpsl
sbb
jmp
in
pop
jno
and
in
test
xchg
and
mov
ljmp
fldcw
inc
fprem1
leave
ret
loopne
imull
mov
imul
pop
insl
insl
adc
test
aam
aam
adc
pop
sarb
push
fs
in
and
sbb
aam
xchg
xor
ja
aad
push
push
jns
push
ret
xlat
or
add
adc
ljmp
aaa
movsb
repz
cs
xlat
mov
xchg
test
dec
cmp
outsb
sbb
loope
sub
mov
aas
or
mov
or
aad
lcall
insb
scas
add
push
sub
mov
ror
jge
xchg
aam
fcmovnu
and
pop
daa
sbb
mov
xor
lret
mov
mov
lcall
xor
jo
loope
inc
mov
cld
inc
or
jmp
stos
push
mov
pop
fwait
cmc
cmp
xor
ror
fdivl
insl
aas
xchg
mov
pop
mov
and
mov
andl
in
adc
mov
lahf
jnp
sub
mov
add
mov
outsl
cmp
jno
mov
jbe
lods
leave
push
cmc
insb
sbb
mov
rclb
stc
xchg
pop
lea
xchg
divl
repz
xchg
cmpsl
mov
pop
into
pushf
rcll
mov
jns
out
xchg
inc
jp
orb
inc
psrad
outsb
test
xor
int
xchg
aas
divl
popf
adc
cmp
stos
add
xor
popa
fstps
xchg
mov
mov
daa
push
mov
fdivl
leave
jne
outsl
mov
icebp
cmp
sar
in
rcl
mov
jae
sub
mov
aas
xor
push
stos
mov
shl
push
jecxz
les
mov
mov
push
popf
pcmpeqw
jbe
push
adcb
xor
mov
cmp
out
push
push
cwtl
xchg
add
rorb
jnp
movsb
xor
jl
mov
push
jle
cmp
shll
mov
jnp
sub
sub
insl
mov
xor
xchg
shlb
add
pop
clc
bnd
mov
aad
gs
js
jl
mov
int3
cmpsb
cmp
cmp
mov
dec
lcall
mov
and
jle
testl
jbe
dec
dec
add
hlt
xor
mov
xor
scas
add
cmp
xor
pop
mov
movzwl
mov
and
scas
decb
adc
add
inc
add
jg
popf
or
addr16
and
push
push
sarb
movsl
jecxz
jnp
push
jecxz
inc
test
sub
cmp
test
test
pop
pop
nop
fadds
sub
mov
mov
xchg
sub
ret
daa
and
stos
push
ret
inc
push
sti
mov
pushf
fcoml
push
xchg
js
outsb
es
shr
mov
xchg
and
jne
into
daa
jmp
scas
jne
orl
dec
mov
scas
sub
jnp
fidivl
sbb
xlat
dec
lret
inc
mov
lds
aad
nop
mov
cmpsb
or
test
cmpsl
jne
mov
lods
jg
call
push
repnz
in
movl
dec
out
cmp
xlat
sbb
or
push
cltd
or
pushf
daa
clc
cmc
jl
xor
cmp
and
mov
clc
cmp
ficoms
sub
pop
les
xchg
mov
add
xor
sbb
les
cmp
lea
lds
test
sub
jnp
loop
adc
mov
mov
mov
xor
cmp
dec
mov
test
loope
aas
stos
add
int3
xchg
in
adc
imul
ret
pop
cmp
cmp
push
stos
adc
test
mov
lret
lock
or
jns
sbb
shrl
gs
mov
push
cld
rcl
sub
push
mov
adc
pop
pop
out
mov
fsubl
ljmp
mov
js
addr16
leave
arpl
mov
bound
add
inc
cld
ret
in
movsl
and
scas
mov
test
cmpsb
out
jg
dec
jecxz
out
jp
xor
sarl
mov
pop
mov
mov
sub
jno
push
sub
fwait
lock
popf
rolb
loope
icebp
push
mov
add
out
fcmovb
xor
push
adc
jno
ljmp
sub
ds
xor
shlb
test
in
jns
pop
fcoms
imul
cmpsb
scas
jno
faddl
jl
dec
push
daa
push
movsb
repz
addr16
ret
mov
push
push
xchg
cmp
ljmp
add
mov
scas
ss
pop
inc
shlb
sub
jb
je
jp
lcall
mov
push
or
ret
jae
ja
ds
mov
cs
lods
or
inc
add
frstor
sbb
push
mov
and
pop
insl
lock
data16
cmp
fdivl
mov
daa
push
imul
mov
or
ds
scas
test
sbb
sbb
dec
dec
push
ljmp
addb
jp
push
and
fadd
cmp
fsubs
hlt
jns
mov
sub
push
leave
jge
xchg
xor
sbb
cmpb
les
inc
je
movsl
dec
push
jnp
icebp
mov
push
xchg
cmp
sbb
inc
je
jg
and
rcrb
and
or
push
or
inc
push
lret
jns
ljmp
xor
icebp
xchg
mov
lcall
add
je
and
mov
popf
sbb
ret
pop
jae
xchg
adc
add
shll
and
add
jge
mov
mov
sbb
pop
and
push
jo
shll
je
push
sbb
movsl
in
inc
scas
aas
jns
mov
faddl
inc
call
sub
aas
enter
pop
cmp
fsubrs
shll
adc
hlt
in
mov
add
pop
out
ja
push
cld
outsl
cmp
mov
jg
fstps
dec
lods
add
flds
add
ja
mov
lea
xor
rol
mov
pop
jecxz
fsubrl
in
push
ret
add
sub
adc
sub
jmp
mov
ljmp
loop
lock
adc
mov
adc
mov
jbe
jle
dec
pushf
push
or
pop
shll
lcall
clc
lret
jle
or
lods
les
loop
fistpll
xchg
mov
pop
mov
daa
ja
fisubrl
fbld
and
mov
cmp
outsl
and
sbb
fidivrl
pop
add
dec
out
mov
push
and
xor
filds
xchg
xchg
cli
add
mov
xchg
mov
mov
cs
in
dec
nopl
xor
cmp
bnd
cmpl
movsl
dec
fbstp
scas
das
push
aas
sub
cs
lds
scas
loop
je
outsl
inc
pop
sub
sub
mov
xchg
inc
and
adc
mov
test
dec
jecxz
mov
xchg
dec
enter
xchg
and
mov
inc
std
ja
aad
movsb
xchg
gs
mov
xlat
aad
pop
repnz
mov
fwait
int
inc
loop
mov
fidivrs
push
pop
jge
mov
mov
jns
cmp
rcr
dec
lret
ret
pop
pop
mov
xchg
mov
pop
js
shll
scas
mov
divb
movl
jns
xor
pusha
ss
or
mov
sbb
add
sbb
pop
jno
test
cs
pop
stc
mov
je
inc
xchg
imul
sti
rcrl
mov
sbb
push
cmpsb
push
clc
frstor
cli
and
jmp
out
cmpsb
push
jbe
jmp
push
mov
mov
and
xor
ds
add
scas
adc
inc
mov
insl
lods
test
and
xchg
jp
in
je
mov
fdiv
ja
cwtl
or
test
pop
loopne
dec
cmp
jnp
inc
divb
mov
cwtl
push
adc
orb
mov
and
dec
movsb
adcb
push
sbb
sbb
and
cmp
mov
ud1
inc
lods
jmp
insb
pop
mov
mov
scas
movsl
mov
or
mov
out
stos
mov
cs
out
inc
scas
fwait
jnp
lcall
repnz
xchg
mov
sti
jp
add
pop
aad
adc
daa
fdivrs
jecxz
xorl
sub
pop
mov
aaa
xor
pushf
repnz
cmp
inc
out
add
in
jnp
addr16
or
mov
cmc
sbb
push
sbb
cmp
inc
adc
fnstsw
loope
or
push
lods
inc
sbb
es
xlat
and
out
jge
out
push
push
sub
cmp
and
jne
dec
rep
and
cmp
fsub
shrb
pop
out
add
lods
and
xchg
xchg
lods
insl
pop
dec
loope
aas
ret
xor
or
mov
popf
push
jno
sti
sub
jle
push
insl
orl
xor
and
shld
movq
in
je
xchg
imul
cmp
fdivl
ljmp
push
popf
cwtl
in
lods
loope
push
ret
xor
and
sbb
icebp
rcl
and
mov
fstl
inc
xchg
xor
add
push
jg
or
push
dec
pop
in
add
mov
adc
push
pop
lea
mov
sbb
pop
inc
dec
orb
sbbl
loope
sub
add
jg
mov
jns
adc
pop
mov
fistl
fistps
data16
push
sbbb
inc
ja
pop
dec
fwait
push
sub
ds
lds
std
pushf
insl
test
xor
ljmp
push
mov
xor
sbb
pop
leave
xchg
pop
and
mov
push
adc
or
adc
fdivrs
adc
fs
dec
pusha
test
pusha
ja
mov
push
and
mov
mov
testb
lods
ljmp
dec
divl
xchg
mov
mov
ja
mull
test
into
mov
lea
mov
pop
mov
stc
cwtl
mov
add
leave
adc
sbb
test
pop
xchg
mov
and
pop
xchg
adc
ret
roll
jle
pushf
adc
dec
jns
and
sub
pop
inc
sahf
jg
js
repz
mov
daa
ds
mov
sub
cmc
ds
out
xchg
test
mov
mov
dec
clc
mov
sarl
fildll
jp
push
orl
push
jne
dec
xor
fimuls
leave
outsl
sbb
leave
mov
xchg
inc
mov
sbb
jnp
pop
out
jl
xor
cwtl
adcl
adc
bound
dec
lcall
fsubrl
fcmovb
jg
clc
sub
cs
test
cmp
and
mov
push
enter
stc
xlat
cmp
sub
sbb
dec
push
cmpb
cmc
sbbl
xchg
xchg
lods
push
inc
cmpsl
lcall
or
data16
in
push
push
xchg
pop
and
dec
mov
imul
sbb
jno
and
hlt
leave
je
add
adc
outsl
shll
push
mov
cmp
inc
mov
mov
fisttpll
sub
inc
out
jb
imul
cmp
or
popa
jmp
xor
add
rcrl
dec
mov
mov
or
popa
jmp
xor
add
rcrl
dec
mov
mov
or
popa
jmp
xor
add
rcrb
dec
mov
mov
or
flds
inc
xor
jbe
adc
pop
and
imul
enter
test
mov
in
adc
pop
and
or
adc
cltd
stc
test
cmpsl
mov
in
or
sbb
sub
cmp
insl
sbb
xchg
stc
cmpsb
test
mov
mov
xchg
mov
pop
jns
add
popf
sbb
dec
cli
enter
cmpsb
movsl
sub
adc
cmp
jne
and
insb
lcall
push
pop
push
mov
fwait
addl
cmp
fidivs
cmp
xchg
test
pop
pop
jo
jl
cmc
fsubl
imul
adc
loopne
jne
jnp
dec
xor
dec
jmp
xchg
cmc
xchg
nop
xchg
sbb
dec
push
rcll
or
cltd
dec
fstps
xlat
rcl
or
pushaw
xchg
ljmp
leave
fcomip
loopne
je
xor
mov
std
mov
jecxz
add
dec
sub
and
or
jl
xchg
stc
popf
leave
lods
fnstcw
out
cltd
in
adc
pop
inc
push
pop
and
sbb
cli
dec
test
mov
in
in
mov
jl
insb
cmp
push
pop
or
add
mov
sarb
fsts
push
add
push
jne
gs
mov
movsl
test
cmc
cltd
in
adc
pop
and
or
gs
mov
movsl
test
cmc
cltd
in
adc
or
pop
fidivs
fstpt
in
jp
or
jns
lods
test
test
out
push
xchg
mov
pop
pushf
ficompl
xchg
add
loop
jle
jge
add
gs
scas
mov
lcall
jne
push
stc
clc
jg
jecxz
sub
scas
cmpb
imul
cld
push
filds
xlat
jmp
pop
dec
mul
ret
xchg
jg
push
ret
or
mov
push
in
and
mov
aas
mov
xchg
call
stc
mov
arpl
ja
sti
ds
fmull
mov
pop
xor
push
or
nop
dec
mov
rcrl
rcrb
call
mov
push
adc
in
sti
out
mov
mov
movsb
dec
jl
pop
push
arpl
setge
in
dec
sub
sahf
scas
cltd
cltd
xchg
mov
mov
mov
lock
es
jge
mov
scas
xor
fildl
rol
pop
leave
mov
mov
jb
mov
mov
mov
mov
add
ret
add
mov
sbb
addl
js
xlat
adc
mov
mov
bound
and
dec
jne
adc
in
jns
xor
add
inc
rcrl
xor
insb
lock
or
or
inc
fs
mov
nop
and
arpl
mov
push
ja
pop
inc
jb
mov
out
mov
in
cmpsl
sub
sti
pop
in
pusha
dec
mov
jecxz
test
inc
fnstenv
sarl
pushf
leave
cmc
repz
mov
movsb
cltd
cmpsb
inc
xlat
mov
xchg
dec
pop
popf
cmc
cmpsl
xlat
cmp
mov
andb
lahf
sbb
mov
ret
rorl
inc
adc
xor
xchg
nop
jnp
sub
dec
cltd
notl
sub
pop
jno
sbb
push
ret
jl
push
push
out
stc
xchg
sbb
ja
mov
out
daa
add
inc
adc
pushf
sub
mov
sbb
pusha
scas
loopne
xchg
je
inc
and
pushf
pop
fidivs
out
add
push
inc
mov
lret
or
adcb
cmpsb
or
xchg
xchg
xchg
pop
jae
sub
es
xor
repnz
jmp
jns
jl
push
sti
inc
lock
aam
mov
adc
loope
cli
adc
xchg
out
jns
lods
push
mov
pop
dec
sub
and
dec
loopne
dec
inc
aaa
adc
mov
add
int
pop
xor
pop
das
ds
cld
pop
jg
ret
xchg
jl
xlat
test
notl
push
or
jae
mov
cmp
mov
jo
mov
lds
push
xor
sbb
mov
gs
lret
sub
adc
sbb
in
leave
cmpsl
scas
fnstcw
cwtl
adc
mov
pop
fnstenv
or
out
pusha
sub
push
scas
jbe
stc
jnp
dec
or
mov
cs
hlt
push
pop
adc
hlt
sub
jmp
xor
mov
mov
sbb
ja
pop
loope
decl
adc
mov
jg
fmuls
adc
inc
jno
sbb
adcl
jne
dec
iret
insb
and
rorl
inc
test
out
push
rol
push
cmp
ljmp
sarl
int3
fisttpl
in
out
cmp
loope
sbb
jecxz
cld
je
fidivrl
imul
dec
mov
aad
flds
add
push
mov
jge
scas
out
imull
mov
adc
mov
sbb
jno
movsb
mov
movsb
add
pusha
xchg
cmpsl
std
inc
cmpsb
stos
pop
scas
ret
xchg
jl
outsb
int
mov
fisttpl
cld
loope
sbb
rclb
pop
cltd
fwait
push
dec
mov
xor
pop
fwait
cmp
rorb
or
movl
shll
repnz
loopne
int
scas
shll
dec
xor
fwait
pop
dec
dec
clc
and
xchg
xchg
in
inc
fisubl
popf
mov
ss
jbe
ss
hlt
in
ret
jg
jae
and
xor
jb
mov
or
iret
add
pop
je
xchg
addr16
mov
pop
push
and
pop
out
mov
rcrl
pushf
jo
pop
inc
or
jge
jns
jno
scas
inc
rcll
pop
ja
dec
mov
out
pop
mov
or
cmp
cmp
add
add
nop
sub
xchg
jns
mov
movsb
sub
mov
lock
ljmp
insb
aaa
movsl
inc
lock
or
cwtl
cltd
aaa
fsubrs
jae
pop
sub
jge
adc
cmp
pop
cmpsb
sub
stos
fwait
mov
mov
push
outsb
psubw
jl
pop
mov
fistps
jbe
aas
ss
pop
and
sarl
dec
mov
es
mov
testl
mov
pop
out
xchg
pop
or
loop
fsubl
cmp
stc
xor
loope
sub
mov
mov
cmpb
out
jb
ficompl
adc
xchg
cmp
insb
and
sahf
orl
adc
fidivl
out
push
mov
sahf
lock
push
mov
push
sbbl
adc
mov
add
fs
xchg
and
shll
mov
cmp
cltd
into
pop
mov
mov
pop
je
sub
popf
xor
mov
xchg
dec
jg
stos
inc
mov
xchg
pop
push
adc
pop
sub
cmp
xchg
mov
insb
inc
pause
loopne
add
bound
mov
cmp
cmpsb
loop
sbb
jae
pop
dec
sti
std
mov
aas
idivb
pop
lcall
adc
loop
lods
cmp
jl
add
jmp
dec
push
ret
lcall
xorl
fdiv
insb
test
adc
jg
and
movsb
push
in
jecxz
aad
nop
test
lds
fs
xor
push
lods
add
jae
lret
adcb
dec
inc
pop
pop
shlb
xchg
push
dec
lret
mov
cmpsb
pop
mov
movsl
pop
push
test
sub
sahf
lods
lret
mov
jns
mov
push
mov
jns
fs
scas
push
sbb
jmp
inc
fwait
jp
cmp
ds
and
sbb
cmp
scas
int3
push
and
cmp
out
ficompl
lret
daa
and
sub
add
not
jns
repnz
ss
mov
sbb
ret
pop
imul
popa
outsb
push
pusha
fildl
test
out
jp
ljmp
outsl
adc
mov
rorl
or
fwait
sub
inc
push
mov
mov
pushf
sub
ja
cmp
cmpsb
jge
pop
lds
sbb
push
lds
xlat
insl
mov
pop
stos
or
inc
sub
popf
xchg
push
pop
sahf
cmp
mov
ja
pop
xchg
out
sub
mov
jb
arpl
roll
jl
jae
js
and
scas
xor
lock
or
mov
insl
dec
sub
and
pop
mov
cmp
repnz
pushf
pushf
dec
mov
pop
out
mov
cmp
add
add
jne
and
push
mov
je
hlt
pop
mov
jmp
sub
dec
shlb
dec
add
sbb
or
ret
cmp
lock
fmull
mov
mov
aas
pop
or
and
aad
sub
fiadds
pop
lds
or
outsb
push
fbstp
rclb
fcompl
lret
jmp
xchg
xchg
jo
clc
addr16
sbbb
das
sub
pop
iret
jl
push
cmp
andl
loope
paddusb
scas
xlat
lcall
pop
dec
cmpsl
xor
ror
ficomps
test
push
call
ljmp
aaa
sarb
or
push
popa
add
out
jae
or
lret
sub
jecxz
sbb
cs
fwait
dec
xchg
jle
outsb
frstor
mov
fistpll
xchg
inc
jle
cltd
xor
lcall
das
pop
ljmp
dec
js
nop
adc
sub
pop
out
int3
cld
dec
adc
jmp
jl
stc
pop
inc
jecxz
rclb
aam
jmp
dec
int3
loope
fnstcw
mov
movsb
xlat
jno
mov
xchg
add
add
or
sub
or
stos
jg
insl
inc
mov
mov
sbb
mov
and
sub
in
in
fcompl
push
rcll
mov
mov
lret
pop
lods
push
push
add
enter
fs
sub
push
push
jecxz
lahf
iret
dec
or
out
jp
popf
pop
xchg
xor
mov
inc
mov
or
xchg
and
ss
inc
xchg
fs
xlat
ja
push
data16
mov
leave
push
push
mov
cmp
or
fcompl
sbb
sbb
sti
loopne
and
sub
testb
lds
mov
pop
dec
sub
in
popf
dec
ss
imul
jbe
xchg
imul
pop
xor
mov
xchg
out
cmp
fstl
push
lcall
push
or
mov
dec
mov
xchg
and
add
jns
xchg
push
cltd
inc
lret
or
pop
sub
and
mov
movsb
xor
mov
adc
jae
cmpsb
cli
jns
sub
and
scas
xchg
sub
inc
mov
aas
lret
xchg
or
rcl
push
xor
rclb
insl
scas
add
cmp
test
and
sub
or
xor
leave
and
daa
jecxz
inc
push
dec
int3
out
mov
out
jne
fcmovbe
push
bswap
repnz
jp
inc
and
repz
cld
xor
mov
fisubrs
or
inc
pop
imul
pop
iret
mov
call
xchg
lret
repz
or
and
iret
lods
mov
mov
popa
mov
and
es
mov
fstp
pop
push
ret
inc
ss
mov
popf
iret
mov
dec
sbb
std
movsl
cmp
push
xlat
out
roll
xor
fstl
cmp
pop
push
out
and
xchg
stc
lret
add
xchg
ss
mov
outsl
adc
iret
out
mov
pop
icebp
add
cmc
mov
mov
bound
cmp
jbe
jmp
jp
in
adc
subb
mov
xor
pop
js
stos
ljmp
push
xorb
out
and
xchg
xchg
lcall
test
mov
or
in
xor
sarl
add
fcomps
push
mov
enter
fisttps
cmpl
lret
icebp
push
pushf
cmp
push
xor
ret
mov
sbb
adc
iret
in
dec
sub
pop
std
cmc
iret
xchg
mov
and
sarb
jl
call
pop
movsb
lods
popf
sarb
repnz
mov
pop
sbb
push
lods
faddp
fistl
mov
sarb
fwait
aad
mov
add
pop
js
xor
outsl
add
outsl
mov
rclb
add
or
iret
repz
movsb
cmp
xchg
mov
jge
ds
movsl
pop
mov
ja
in
in
in
inc
aam
sbb
cmp
dec
popw
leave
sti
xlat
imul
repnz
pop
cmp
mov
lahf
popa
sbb
sbb
push
repz
movsb
jg
push
lret
bound
nop
add
cmpsl
mov
lret
mov
xchg
jp
iret
sbb
add
loopne
or
cltd
xchg
xlat
ds
ret
add
cwtl
pusha
clc
inc
sbb
testb
cmc
std
scas
stos
js
mov
out
scas
sub
inc
ss
call
out
fadd
les
xor
fistps
movsl
adc
orb
pop
jmp
add
aas
std
cwtl
push
pop
xlat
xlat
arpl
adc
hlt
roll
add
adc
fdivrs
hlt
shlb
sti
ss
test
jg
std
aaa
aas
fs
test
pop
incl
sub
add
push
and
cld
jnp
xchg
sub
aam
or
movsl
lahf
sbb
hlt
xor
lret
and
ror
add
pop
ret
adc
loopne
inc
pop
arpl
jnp
stos
add
aas
and
je
inc
cmc
push
mulb
xchg
mov
add
jge
lret
add
add
cmp
bound
das
lock
and
dec
out
ret
scas
and
push
fstp
movsl
or
leave
inc
mov
sahf
push
adc
mov
mov
test
mov
xchg
ljmp
add
icebp
sarl
push
xchg
int
insl
inc
orb
dec
or
pop
add
sbb
pushf
sarb
sbb
pop
out
cld
pop
loopne
shl
xorb
or
in
nop
mov
add
mov
inc
aas
add
es
lods
jge
adc
fadds
adc
icebp
jae
mov
stc
in
movsb
arpl
inc
jge
and
add
sbb
mov
pop
fistps
cwtl
push
or
sub
outsb
movsl
and
stc
leave
inc
cmp
icebp
push
cmp
xchg
xchg
test
sti
lret
sti
mov
mov
dec
inc
xor
enter
sbb
repz
adc
xor
orl
sbb
out
mov
stos
xlat
in
inc
pushw
dec
cmpsl
xchg
ret
push
jp
cld
arpl
pop
jns
mov
mov
movsb
int3
push
jecxz
add
inc
and
rcll
and
test
lods
jae
lcall
lea
ss
scas
mov
jns
das
int3
xchg
inc
mov
test
sbb
ja
xor
repnz
stos
fucom
repnz
loopne
mov
sbb
add
repnz
mov
aaa
in
dec
add
out
rcr
xchg
dec
pop
ficompl
daa
cmc
inc
lcall
cmp
mov
std
adcb
push
test
pmaxsw
or
addr16
xor
lcall
mov
ficompl
mov
dec
jb
jno
movsb
fcoml
dec
filds
inc
test
adc
mov
stos
outsb
fisubl
outsl
stos
repnz
and
clc
pop
out
mov
nop
mov
out
in
pop
pop
mov
dec
imul
pop
push
cld
xchg
stc
or
lcall
xchg
cmc
pop
sbb
xchg
stos
lods
cmp
or
movsb
mov
jp
in
and
ret
ds
popa
push
pop
jbe
std
mov
mov
fisubl
call
cmp
subl
jmp
pop
xor
jo
mov
cmpsb
fstp
mov
lcall
cmp
movsb
mov
test
jmp
push
fs
sar
dec
inc
xlat
xor
cwtl
outsl
clc
jecxz
ljmp
int
fidivl
dec
test
adc
mov
fwait
loop
jge
mov
jnp
and
fsubs
pop
lahf
stos
sub
adc
ds
repz
sub
pop
jo
in
xchg
mov
push
push
sub
mov
into
js
out
aam
and
cwtl
cmp
push
pop
aam
nop
mov
mov
inc
xor
lcall
ljmp
xor
movsl
pop
push
and
dec
stc
sti
xor
test
insb
fisttpll
xchg
sbb
mov
mov
mov
popa
sub
loop
out
and
xchg
imul
inc
push
jg
cwtl
add
subl
xchg
sbb
jmp
sbb
ja
jmp
stos
mov
repz
xchg
insl
cmp
cmpsl
cmp
loope
icebp
jo
stos
aaa
xchg
loope
jo
push
call
movsb
push
xor
sub
arpl
xor
dec
dec
push
xchg
les
jns
dec
jmp
fwait
adc
jbe
pop
push
sub
dec
sub
repz
ljmp
xchg
and
jb
inc
pop
data16
out
ljmp
xchg
gs
insl
inc
dec
xor
mov
into
stc
add
inc
jge
push
jecxz
ja
je
or
int3
sti
stc
fisubrl
add
mov
cld
mov
adc
clc
fstl
mov
or
sti
sti
push
cmp
sbb
outsb
push
pop
lods
lret
lret
jmp
repz
add
pop
lcall
xchg
sti
bound
xor
loop
sub
jno
pop
shrb
pusha
pop
inc
scas
rcll
in
jmp
xchg
or
leave
sub
add
and
cld
sub
fucomi
mov
sub
push
rcll
xor
pop
push
xchg
jbe
mov
fsubr
lock
xchg
and
inc
fs
sbb
in
adc
mov
clc
cli
scas
repnz
lock
fisubrs
aas
js
add
xor
xchg
sub
addr16
adcl
mov
xchg
add
mov
aad
int3
inc
xor
mov
jbe
xchg
imull
lahf
arpl
and
pop
into
out
and
jg
repz
jecxz
stos
data16
fwait
ja
dec
test
lods
mov
daa
lock
pop
orl
mov
pop
sub
mov
fs
mov
aaa
mov
int3
adc
cmp
test
push
inc
push
ja
scas
xlat
or
jg
mov
xchg
das
push
outsl
push
push
loope
pushl
inc
push
xchg
push
xor
pushf
aad
xchg
adc
mov
jg
cmp
pop
aaa
addb
inc
insb
pop
mov
xchg
and
pop
jecxz
sub
in
insl
and
inc
scas
mov
jl
stos
fwait
les
loopne
add
or
push
out
xlat
mov
jbe
icebp
push
xor
cli
xor
cwtl
cli
pop
out
ljmp
or
movsl
xchg
cmp
mov
mov
mov
inc
adc
fstl
daa
into
mov
push
xor
add
add
vmread
sub
xor
shll
cmpsl
into
jne
shlb
xchg
rclb
fadd
adc
fsubs
mov
ja
mov
pop
dec
mov
and
bound
dec
outsb
movsl
scas
fimuls
mov
push
mov
push
adc
ret
jae
jle
cli
xchg
flds
or
jecxz
je
lea
fwait
pushf
fwait
push
xor
or
mov
clc
sbb
bound
sub
rcr
in
movsl
scas
mov
leave
adc
stos
and
stc
cmc
push
and
jmp
loope
dec
jmp
sbb
gs
cltd
pop
stos
push
mov
in
push
imul
add
adc
in
xor
sub
stos
fxam
jp
mov
ds
outsb
xchg
xor
clc
loopne
je
sbb
dec
psraw
push
stos
sub
imul
inc
mov
add
cmpsl
imul
pop
imul
fisubs
or
jmp
fildl
xchg
mov
dec
lods
mov
push
test
popf
imul
rorl
loop
out
xor
js
xchg
icebp
ds
pop
pop
dec
insl
out
adc
inc
jno
iret
sub
jmp
hlt
lret
mov
or
xchg
or
dec
movsl
add
inc
insl
jge
dec
sbb
push
iret
fsubs
mov
repz
xchg
fldenv
mov
inc
rcrb
loop
ja
add
cmp
test
mov
jns
adc
or
fs
cmp
dec
sbb
xchg
addl
xchg
xor
adc
or
cltd
mov
int3
or
sub
xchg
add
sti
adc
mov
movsl
mov
test
dec
or
stc
jp
iret
in
das
mov
push
lock
scas
mov
fcmovb
insb
mov
lfs
fnstcw
add
mull
mov
popf
mov
idivb
movsb
test
call
adc
stos
pop
inc
adc
xor
lods
sub
fmuls
xchg
or
rcrb
rclb
mov
xchg
ja
es
test
mov
fistpl
imull
dec
mov
out
push
push
jge
inc
inc
mov
jle
pop
lods
loope
jge
cmp
jbe
fstpt
xlat
dec
loope
jae
or
decb
xchg
andl
js
fidivrl
adc
mov
das
mov
bound
ss
jg
in
pop
popf
ret
add
or
fiadds
mov
fbstp
test
adc
and
add
sub
inc
or
gs
mov
movsl
test
cmc
cltd
in
adc
pop
and
or
gs
mov
movsl
test
cmc
cltd
in
adc
pop
and
or
gs
mov
mov
mov
cwtl
loope
adc
dec
xor
sub
inc
or
movsl
jmp
mov
rcr
pop
xor
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
imul
mov
or
add
add
pop
add
add
and
jp
sub
pop
add
movsb
add
add
add
add
stc
add
add
test
out
mov
xchg
add
add
add
add
add
insl
add
add
push
add
add
pop
add
add
add
add
add
add
add
add
mov
push
add
add
add
add
push
add
add
jns
xor
dec
add
add
add
add
add
pop
add
add
add
add
add
add
add
lea
jbe
add
out
jno
dec
add
add
add
add
mov
add
add
fldl
jl
scas
add
add
and
xchg
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
jl
jns
dec
add
and
addb
add
add
add
add
add
add
addb
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
or
add
add
daa
add
dec
add
add
lahf
add
add
sub
in
in
cmpsb
add
add
add
out
add
add
cmp
cmp
jno
dec
add
stos
add
mov
jns
movsb
add
xchg
add
add
insl
add
add
add
dec
add
add
dec
add
add
add
mov
and
cmc
add
add
jl
ret
add
and
dec
add
add
add
add
add
jle
sub
mov
add
add
sub
in
addb
add
add
add
add
add
jne
enter
jl
data16
xor
push
mov
sahf
add
xchg
add
add
add
add
add
add
add
add
add
jg
push
add
add
out
add
add
add
add
scas
add
add
add
mov
xor
sti
add
pushf
add
add
filds
xchg
add
add
add
add
add
add
mov
add
add
insl
add
add
add
dec
add
push
add
and
movsb
add
add
add
add
add
add
dec
add
add
add
mov
xchg
add
add
sbb
roll
add
addb
add
add
cmp
jl
filds
jg
inc
add
in
cwtl
add
add
add
add
add
dec
add
add
ret
add
mov
add
add
add
jae
sub
enter
cltd
add
add
sub
mov
add
or
in
in
cmp
pop
add
xchg
add
add
mov
add
add
add
add
add
add
add
jecxz
loop
push
cwtl
add
add
jns
cmp
xchg
out
inc
xchg
aad
lods
sahf
mov
dec
dec
jnp
sarl
movsb
sahf
push
add
pop
sub
pop
inc
jae
sbb
lods
mov
xor
dec
ror
jmp
dec
call
int
aam
pop
cmp
sub
mov
fstps
cmp
pop
mov
ret
jmp
xor
adc
sbbl
out
jp
mov
int
adc
fdivrs
sahf
popl
or
mov
add
inc
cmp
out
popf
xor
add
mov
enter
push
in
das
pop
es
popa
and
jnp
or
dec
sub
stos
and
sbb
fdivrs
jmp
dec
dec
cmpsb
inc
data16
jns
popf
push
jae
and
or
push
inc
int
outsb
or
stos
mov
rcll
mov
mov
push
cmp
std
insl
mov
arpl
mov
push
adcb
faddl
notb
and
sbb
mov
sarb
pop
jno
test
aad
and
scas
leave
mov
mov
cmp
repnz
and
out
fldenv
push
mov
out
aad
xchg
or
inc
je
pop
je
cwtl
xchg
es
fmuls
fs
cmp
mov
popf
mov
and
imul
das
or
int
aad
mov
jns
mov
iret
add
lahf
adc
sbb
mov
push
fiadds
imul
pop
call
test
push
je
and
scas
and
iret
and
push
int
test
loop
or
cmp
mov
lcall
movsl
test
sbb
jns
mov
icebp
in
aaa
fidivrl
xchg
push
mov
test
dec
ret
mov
mov
dec
pop
cli
ss
decl
dec
pop
movsl
inc
out
and
ss
jbe
mov
in
sub
decw
dec
or
mov
jbe
xchg
or
out
into
mov
addb
icebp
sbb
lea
pop
push
xchg
std
jecxz
pusha
sbb
stos
jb
jno
cmp
pop
cmp
inc
pop
mov
sbb
add
cli
adc
jge
xor
jmp
xlat
push
mov
pop
pop
fisttpl
lods
push
shll
cmp
sub
push
fadds
push
xor
sbb
es
movsl
inc
mulb
push
cmp
inc
in
pop
mov
out
cmp
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
