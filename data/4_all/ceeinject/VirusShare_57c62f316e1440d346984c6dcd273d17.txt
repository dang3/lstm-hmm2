call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
pop
iret
add
ss
mov
push
mov
xor
es
push
filds
iret
aas
out
pop
movzbl
jg
pop
xchg
es
scas
js
inc
lea
push
filds
iret
sub
ss
pop
add
cmpsb
data16
ja
inc
jle
jbe
or
mov
fwait
popa
lods
jne
mov
pop
xchg
jp
push
xchg
mov
gs
fwait
int
in
pop
arpl
aaa
mov
aas
mov
out
push
dec
pop
out
pop
pushf
mov
inc
fwait
push
test
lahf
mov
xchg
das
mov
cmpsb
mov
inc
push
ds
xlat
inc
loop
mov
scas
test
pop
stos
push
in
pop
mov
loopne
pop
mov
pop
jg
sub
inc
pusha
mov
push
and
fbstp
sbb
sub
push
jnp
mov
into
daa
mov
ss
test
std
incl
jae
jae
out
sub
arpl
adc
pop
mov
sahf
lds
inc
jo
xlat
es
push
leave
lds
out
push
stos
movzbl
outsl
xchg
pop
ds
test
pop
xchg
push
out
notl
lds
test
nop
pop
xchg
jp
push
jge
push
test
out
pop
shlb
scas
push
fwait
daa
ljmp
inc
mov
xchg
insb
or
and
sub
jge
lret
daa
lret
sub
arpl
aad
cmpsb
jnp
dec
repz
cmpsb
outsl
xchg
pop
xchg
mov
inc
jmp
out
push
filds
iret
idivb
out
pop
movzbl
outsl
xchg
pop
xchg
mov
inc
jmp
out
push
filds
iret
idivb
and
cwtl
cltd
or
notb
xlat
push
jno
cltd
fsubs
xchg
mov
dec
sbb
push
inc
sbb
xor
lock
add
fucomp
jo
inc
cltd
movb
dec
mov
roll
push
ficompl
lret
enter
lcall
test
outsl
daa
loopne
rolb
jmp
sti
stos
loope
je
out
out
repz
mov
mov
ret
int3
jge
imul
ror
imul
mov
pop
cmc
jae
push
inc
inc
enter
mov
sub
int3
xchg
jne
fcoms
addr16
inc
pusha
inc
push
clc
gs
ss
iret
push
call
sbb
cmpsb
sahf
cmp
sbb
push
mov
push
std
insb
pop
std
mov
repz
pop
add
sbb
iret
xchg
and
mov
lods
cmpsb
xor
fcompl
leave
cmp
and
dec
in
shlb
adc
fs
push
mov
pushf
sbb
dec
mov
imul
add
cld
push
push
jmp
adc
jns
inc
push
imul
int3
ret
ret
scas
fwait
jae
loop
sarl
mov
pop
jmp
push
repz
sub
sti
push
enter
repz
sahf
pop
xlat
popf
imul
pusha
cli
cld
mov
push
enter
or
dec
das
add
push
and
push
ljmp
enter
mov
popl
mov
repz
and
leave
push
fldenv
lds
divl
sbb
or
push
jmp
aad
das
xchg
ss
aaa
cli
into
jb
pop
cmp
loop
dec
push
xchg
loopne
aas
ret
dec
fucom
jbe
pop
daa
jne
bound
in
jbe
adc
loop
pop
repnz
aaa
xor
outsb
dec
push
dec
mov
jg
jne
aas
leave
ss
cltd
adc
pop
add
or
cld
leave
rcrb
or
mov
pop
int
imul
sbb
repnz
cltd
mov
int3
adc
mov
or
fadds
shlb
xor
sbb
outsb
push
in
icebp
scas
lods
and
mov
fisubl
fisubrl
mov
leave
aaa
imul
add
insl
sub
mov
sbbb
and
mov
mov
or
dec
nop
inc
pop
sbb
jnp
pop
push
cmp
or
lret
mov
add
in
mov
and
subb
fnstsw
bound
popf
jb
ljmp
ret
sbb
and
jecxz
xchg
pop
jg
repz
loopne
ret
ljmp
dec
mov
xchg
lret
push
jb
xor
inc
sub
test
adc
addr16
sub
and
sub
psrlq
jns
lock
jbe
popa
roll
dec
mov
mov
xchg
mov
cmp
fwait
sbb
outsb
stc
popa
mov
cmc
jns
add
into
push
pop
es
aam
cmp
out
adc
cmc
mov
sbb
add
mov
sbb
xor
cli
push
ss
loop
mov
pop
inc
cld
mov
lods
add
add
imul
jns
push
test
mov
scas
fnstsw
mov
mov
fnsave
jecxz
sti
xor
ret
adc
les
lds
imul
xor
rep
ljmp
push
xor
xor
mov
push
xchg
xor
data16
and
stos
mov
mov
push
nop
test
loop
stos
hlt
push
hlt
mov
jb
adc
outsl
in
jb
push
lcall
or
and
xor
cmp
xor
mov
es
mov
jge
jbe
push
dec
movsl
lcall
pusha
fstl
aaa
add
das
fsubs
jnp
enter
arpl
or
insb
in
adc
mov
insl
imul
ret
jge
push
mov
mov
pop
pushf
sbb
jns
inc
orb
jo
lods
pop
mov
loopne
sbb
test
mov
cmpsl
push
je
es
xchg
sbb
movl
js
mov
aaa
rcrl
cmpb
test
sbb
inc
loope
insl
cmpsb
arpl
jb
cwtl
mov
mov
jns
xor
das
and
insb
cltd
cmp
enter
push
xor
mov
divl
push
jne
insl
inc
pop
xchg
push
add
sub
mov
sub
ljmp
mov
scas
adcl
jbe
js
addr16
xchg
scas
fidivl
fdivp
add
movsl
aaa
mov
jnp
jo
mov
dec
call
dec
jbe
rcrl
les
dec
xlat
sub
adc
xchg
cltd
aaa
rcrl
cmpsl
xchg
cmp
push
mov
loope
fstpt
jne
xchg
mov
pop
and
imul
xchg
sub
and
inc
or
roll
and
add
icebp
gs
inc
push
mov
jbe
andl
aas
or
ds
lret
jl
fisttpll
inc
adc
cmp
mov
pop
add
push
pop
sub
std
and
jb
dec
cli
gs
jno
sub
jne
fimuls
adc
xor
push
cld
push
mov
adc
hlt
cmpsl
lds
or
cmpsb
pop
pop
jecxz
pop
pusha
and
test
push
mov
stc
cmc
rcrb
inc
imul
cmp
aaa
dec
mov
mov
test
mov
bound
pop
aad
adc
dec
mov
xchg
add
data16
loop
push
add
test
jle
mov
dec
mov
fcoms
mov
ss
test
cmpsb
das
lea
daa
push
notb
sub
cli
adc
xchg
mov
pusha
push
insb
pop
pop
insl
add
nop
mov
mov
repnz
and
pop
or
loope
cmc
pop
mov
sub
int
movsb
sub
sbb
pop
ljmp
jnp
out
loopne
std
lret
or
hlt
add
jecxz
sub
inc
hlt
xorl
mov
test
repz
sub
test
mov
xchg
jne
adc
jnp
out
add
or
js
sti
sbb
add
fstps
out
out
outsl
mov
push
xchg
insl
pop
dec
je
sbb
and
lret
mov
inc
add
mov
and
loop
arpl
jo
lock
pop
and
es
sbb
lahf
pop
add
dec
loop
leave
sub
into
fidivl
lods
imul
movsb
push
out
fwait
pop
daa
mov
fidivl
fildll
inc
in
scas
imul
cmp
cwtl
adc
cmp
dec
xchg
lret
cmp
mov
dec
inc
adc
enter
stos
mov
enter
movsb
loopne,pt
jne
xor
jnp
into
movsb
adc
test
jbe
int
dec
pop
mov
jmp
aad
cltd
sub
idivb
fwait
jae
push
xchg
adc
jnp
ret
call
inc
in
dec
sti
roll
leave
stc
or
popa
and
enter
pop
push
xor
pop
xchg
xor
cmc
movsl
into
xchg
inc
pop
shl
popw
roll
insl
pop
push
ja
rcl
stc
bound
mov
repz
in
add
cmpsb
mov
mov
mov
popf
mov
repnz
mov
mov
mov
or
fcom
fsts
jns
pop
mov
adc
jmp
fwait
into
cmc
sahf
flds
loope
jp
push
sarl
sbb
and
int
pop
in
jne
push
inc
test
mov
push
jbe
pop
imul
mov
push
pop
call
cmpsb
jecxz
pop
ss
push
dec
rorl
mov
mov
cmc
aaa
das
shrl
mov
out
pop
mov
push
and
test
mov
push
fnstsw
into
je
shll
and
bnd
push
xchg
aaa
pop
inc
xchg
push
pop
pop
cltd
mov
jo
sub
int3
sub
or
cltd
push
adc
and
les
pusha
push
call
test
into
mov
inc
sbb
les
ss
leave
jecxz
addl
mov
and
sahf
xor
and
aad
jg
test
add
test
jne
into
mov
mov
fwait
dec
adc
aam
sbb
daa
mov
xor
shrb
int
xor
outsl
dec
mov
insb
icebp
mov
in
mov
add
fsubl
test
push
cmp
scas
mov
test
in
frstor
jmp
mov
out
loopne
and
cmpb
into
stos
ljmp
adc
jo
xchg
decb
insb
test
pop
xor
std
out
mov
inc
pop
mov
ror
out
int3
neg
mov
adc
stos
inc
sbbb
fcmovnb
pop
int3
mov
and
js
jmp
pop
mov
das
test
cld
jne
imul
out
js
mov
idiv
bound
xchg
pop
jg
adc
arpl
mov
add
loop
cmp
mov
xchg
imul
shrb
inc
cmpsb
add
jae
jg
xor
mov
and
pop
aam
inc
enter
push
jle
pop
leave
rolb
mov
into
mov
daa
xor
imulb
add
shr
xchg
jnp,pt
fimuls
lcall
dec
dec
pop
adc
cmp
lahf
insb
xchg
rorb
decb
js
sub
rcll
mov
mov
and
pop
add
dec
and
cmp
pop
lahf
xor
mov
mov
lods
dec
adc
xor
push
sub
ljmp
sub
xor
fwait
shll
cmp
stc
or
jns
in
push
xor
daa
push
push
mov
pop
jbe
outsb
leave
inc
xor
push
add
sbb
ss
loopne
lret
cmpsb
mov
inc
mov
pop
mov
scas
pushf
loop
fs
out
push
sbb
clc
push
fadd
dec
ja
ret
push
push
stos
push
dec
popa
hlt
in
pop
sbb
push
shll
vmwrite
adc
mov
ljmp
mov
jmp
mov
xchg
and
xchg
cmp
dec
rclb
inc
outsb
push
enter
xor
mov
and
ja
dec
out
fnstenv
lahf
lea
insb
and
mov
ret
aad
iret
gs
testl
sub
mov
lock
hlt
adc
push
inc
rcr
mov
inc
roll
ss
rcll
adc
lahf
loope
int3
mov
insl
mov
dec
mov
push
add
mov
std
loope
cli
test
pop
push
xor
daa
mov
mov
xor
or
adc
std
mov
jbe
push
in
inc
mov
xor
sahf
in
adc
orl
adc
add
jnp
pop
aam
push
sub
cld
das
inc
pusha
fsubr
fsubl
lds
std
push
addr16
add
jno
add
in
pop
nop
inc
mov
xor
int
fcmovb
mov
test
roll
movsl
loop
aaa
xchg
inc
sbb
add
jmp
and
pop
out
xorb
hlt
test
jp
xor
mov
pop
pop
and
out
scas
push
add
icebp
cli
mov
cmp
inc
arpl
das
insb
les
je
pop
scas
sbb
fiaddl
xchg
fdivrs
out
scas
sbb
pop
cmpsl
jl
dec
push
push
lea
icebp
aas
xchg
stc
xor
ja
mov
jo
sub
inc
lods
pop
mov
outsl
sbb
les
out
pop
sbb
stc
xor
bound
sub
jae
out
jne
or
xor
push
imul
fldenv
cmpsl
shll
cmp
sub
jl
clc
out
mov
mov
jg
mov
out
mov
xor
out
pop
out
inc
xchg
dec
andb
fildll
xor
cmpb
stc
lods
ftst
subl
sub
lea
and
bts
jp
pop
out
mov
lods
imul
mov
xchg
cltd
push
addl
xlat
pop
lods
iret
bound
jp
sahf
sbb
dec
mov
add
imul
jo
sarb
fisttpl
scas
gs
std
push
dec
je
jno
sbb
or
mov
and
push
stos
gs
jb
rol
insb
loopne
mov
mov
dec
xor
test
andl
sti
in
rcl
dec
adc
imul
shl
cmpsl
mov
leave
movsb
movsl
mov
adc
sti
sub
and
in
dec
mov
rorl
mov
xor
xor
pop
mov
add
mov
or
aad
xchg
and
dec
xlat
and
dec
xchg
sub
cmp
stos
push
sub
inc
lret
xor
add
mov
fcompl
data16
push
inc
mov
sbb
pop
subb
pushl
lret
cltd
cmp
sub
in
mov
aaa
daa
adc
jmp
aas
inc
mov
push
push
insl
cld
outsb
inc
aam
and
into
call
shr
and
arpl
add
cli
pop
xor
dec
xlat
xor
test
test
std
shl
leave
out
clc
lcall
push
adc
into
push
imul
sbb
sbb
shlb
xor
pop
mov
sbb
insb
nop
lcall
fs
pop
push
pop
adc
lock
into
int
cli
lcall
push
ret
mov
cwtl
nop
xor
ds
cmp
aas
pop
popf
cmp
mov
icebp
inc
rcrb
sub
int3
jb
and
adc
jge
jae
and
sub
hlt
mov
lcall
aas
add
push
inc
je
push
daa
mov
xor
push
and
mov
inc
push
incb
popa
lret
fld
adc
repz
jecxz
and
loope
mov
pop
idivb
sub
andl
xor
int3
xor
lds
movsl
mov
out
out
in
xor
jb
cld
mov
inc
sub
cli
shll
in
out
inc
leave
repz
lahf
mov
xor
hlt
sub
in
fcmovne
jg
add
jge
fdivl
sbb
dec
daa
xor
sti
cmpsl
testl
sbb
push
hlt
dec
sub
ja
sub
inc
inc
popa
data16
int
cmpb
cmp
xchg
jge
out
das
fidivs
cmp
das
xchg
or
std
es
subl
pop
fdiv
xor
push
je
fistpll
sub
jmp
mov
xlat
push
inc
hlt
pop
adc
int
out
or
jnp
sbb
leave
sub
mov
movsl
xor
mov
pop
rcrb
mov
rcr
jmp
insl
movsl
cmc
xchg
cmp
push
out
in
inc
lods
xchg
mov
and
mov
das
push
repz
lds
outsb
inc
xor
fcoms
sub
jge
add
xchg
mov
xchg
and
xor
dec
adc
subb
cltd
outsl
lret
bound
mov
mov
jnp
sub
mov
mov
cmp
out
cmc
push
fcomps
inc
stc
xor
out
stc
adcb
cmp
pushf
out
cmp
cmp
pop
jecxz
mov
sub
cmc
enter
js
icebp
cmp
fwait
jbe
mov
int
push
lahf
mov
dec
xor
mov
test
or
nop
lahf
cmc
pop
or
xor
rorb
adc
in
pop
out
popa
dec
frstor
jmp
rcl
push
mov
es
mov
jecxz
adc
mov
xchg
xchg
fisttpl
inc
sbb
shrl
mov
out
test
adc
test
sarb
call
sub
aaa
leave
xor
dec
stos
arpl
mov
inc
test
mov
out
adc
mov
jp
mov
outsb
inc
xchg
lcall
inc
mov
pop
rolb
add
cmpsb
shr
xchg
push
add
sub
jg
dec
mov
jae
mov
test
jb
jbe
cmp
xchg
sbbl
mov
pop
lret
das
aam
hlt
mov
enter
sbb
mov
int
xchg
adc
dec
movsl
int
push
jns
mov
sub
push
rol
mov
xchg
dec
lods
push
cmp
insl
adc
jle
iret
loope
lods
add
inc
cld
xchg
sub
dec
sub
in
dec
out
cmpsl
mov
inc
sbb
dec
or
and
sahf
add
test
lahf
adc
or
or
jmp
shll
in
and
ja
jae
cmp
cmp
out
fwait
rcll
sbb
mov
insl
xchg
bound
lret
jl
aam
mov
adc
dec
decb
sbb
push
test
pop
imul
cltd
inc
fwait
add
push
aam
xchg
lret
cmpsl
mov
adc
insb
and
mov
in
and
lds
jnp
sbb
mov
and
loopne
and
jge
lea
notb
inc
add
leave
mov
pop
push
push
jp,pt
push
shrb
js
data16
push
adc
fs
mov
jns
pop
mov
dec
cmp
push
repz
lahf
outsb
test
lcall
sub
pop
mov
or
adc
lds
ffreep
xchg
sub
mov
ss
xchg
jno
cmp
bound
ficomps
data16
js
aaa
jb
dec
fadds
fs
pop
jecxz
clc
fdivs
inc
jns
add
push
std
in
stc
mov
leave
jo
fxch
movsb
mov
xchg
sub
xchg
mov
test
or
sbb
ds
mov
xchg
test
incb
mov
leave
lods
cmpsl
fmull
adc
jg
out
addl
cmp
ret
pop
push
or
jae
mov
xor
mov
mov
adc
outsl
mov
fcompl
jbe
jle
mov
sub
inc
or
mov
or
sub
xchg
lea
mov
enter
popa
mov
loop
add
daa
les
mov
inc
cld
aaa
in
dec
stos
repnz
lret
adc
mov
into
mov
add
dec
sar
rcr
jne
jnp
cmp
lahf
stos
insl
xchg
inc
and
or
mov
pop
imul
dec
out
mov
xchg
sarb
addr16
xlat
pusha
enter
mov
enter
cmp
ret
jmp
rcr
cltd
fdivs
dec
cmpsb
outsb
jle
repz
mov
int
fs
pushf
outsl
cmp
call
ret
inc
jge
jbe
sub
cmp
or
push
adc
adcb
popa
sub
bound
push
aad
in
pop
les
jmp
jo
out
aaa
dec
and
push
cmc
cmp
call
sub
fcoml
int
ss
and
push
ret
aaa
add
mov
dec
mov
adc
mov
cmp
lds
mov
xor
jbe
cmp
xchg
pop
rcrl
or
pop
js
push
pushf
xor
pop
int3
sbb
pop
inc
pop
movsl
or
dec
js
xor
mov
arpl
imul
sahf
mov
sub
aaa
es
cmp
jae
out
sbb
mov
ds
ds
inc
mov
rclb
inc
adc
int
xor
push
imul
dec
lods
sbb
scas
mov
daa
push
xor
std
push
mov
dec
das
jbe
jno
pushl
jl
sub
test
push
push
icebp
cmovbe
inc
lret
enter
jle
adc
cmpsl
mov
aam
mov
mov
sub
pop
scas
out
sub
and
and
ds
jp
adc
jo
mov
lret
lock
xor
shll
pop
shrb
or
sbb
sub
sahf
fsts
dec
cwtl
xchg
fs
rclb
jb
cmp
cmpsb
xlat
mulb
cli
xor
lea
push
repnz
ficompl
ss
pop
xor
cmp
jecxz
pushf
xchg
arpl
divl
mov
add
and
out
div
push
call
adc
fiaddl
mov
arpl
sub
sub
insl
mov
in
xor
js
mov
or
lea
lahf
rcl
hlt
mov
add
cwtl
rolb
push
mov
push
mov
popf
inc
jp
ss
pop
sti
call
std
cmp
lret
add
push
ja
sbbl
movzbl
outsl
xchg
pop
xchg
mov
inc
jmp
out
push
filds
iret
idivb
out
pop
movzbl
outsl
xchg
pop
xchg
mov
inc
jmp
out
push
filds
iret
idivb
in
pop
movzwl
outsl
xchg
pop
xchg
mov
inc
mov
aas
out
adc
ss
out
cmp
sub
out
movzbl
outsl
xchg
pop
push
jbe
cltd
add
inc
ja
nop
jmp
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cwtl
push
mov
jne
fistl
and
push
imul
cmp
sub
pop
xchg
dec
test
jnp
call
inc
xlat
jne
fistl
jmp
sbb
or
pop
hlt
sub
sbb
dec
test
imul
jne
lds
jmp
jg
sub
push
nop
dec
mov
sarl
fldcw
shlb
shl
sbb
xor
fildll
shlb
push
cmp
fs
cmpsb
scas
push
sbb
lock
outsl
popa
ja
ja
cmp
cs
jbe
scas
in
lds
mov
test
fidivrs
xchg
hlt
gs
into
test
cmpsl
mov
lret
repz
fsub
dec
aad
les
repz
dec
push
mov
inc
fsub
push
pop
pusha
inc
xor
lret
add
sbb
or
mov
test
jp
imul
mov
push
jo
pusha
and
cmp
outsb
in
dec
xchg
sbb
inc
fs
push
mov
pop
and
sub
xadd
test
aad
mov
pop
rclb
mov
adc
dec
and
dec
cmc
sbb
adc
imul
push
stc
cmp
xor
and
push
movsl
jno
push
jmp
sbb
dec
xchg
sub
and
rcl
out
sub
cmp
scas
inc
push
bound
mov
xchg
push
mov
lock
adc
sub
notl
push
ficoml
clc
sbb
sti
xor
or
cmp
sub
pop
xchg
dec
test
imul
jne
fistl
jmp
sbb
or
cmp
sub
pop
xchg
dec
test
imul
sbb
adc
and
jb
clc
fistpl
add
imulb
sbb
xor
dec
aad
mov
pop
inc
mov
mov
idivl
lret
push
or
sub
dec
cmp
cltd
xchg
in
push
pop
fs
aam
lock
jns
mov
fidivl
dec
dec
lcall
cmp
pop
inc
mov
clc
es
pusha
jb
jno
out
add
stos
mov
inc
push
subl
push
add
movsb
or
jg
mov
cli
xchg
out
push
imul
jo
jbe
mov
pop
gs
inc
fs
test
mov
xlat
pop
mov
orb
xchg
mov
cmp
pop
lods
sbb
lahf
js
or
mov
scas
aam
rol
push
inc
out
mov
lcall
mov
cmp
and
ja
jnp
in
test
jmp
inc
jnp
test
imul
pop
xor
and
shr
push
sbb
fs
imul
jmp
jl
test
mov
sbb
lret
aas
mov
cmp
adc
adc
inc
iret
sub
mov
loope
cwtl
xlat
icebp
mov
fnsave
popa
stc
je
and
fiaddl
addl
push
mov
arpl
xchg
xlat
add
lds
daa
and
inc
stos
pop
in
out
cs
mov
push
sahf
xor
repz
inc
mov
outsb
pop
out
rcrb
sarb
xor
divl
mov
add
jnp
loope
leave
add
push
pop
shlb
pop
pop
ret
je
sbb
or
jp
mov
scas
daa
cli
sub
mov
mov
iret
cmp
repnz
sub
arpl
push
adcb
mov
data16
jae
gs
inc
jne
lea
cmp
iret
outsb
xor
inc
inc
inc
fdivl
enter
call
fdivrp
or
dec
mov
add
das
jo
and
cwtl
lcall
adc
stc
lods
mov
adc
ret
push
roll
flds
daa
push
push
idivl
sub
add
or
jle
xor
mov
fnstsw
ror
test
std
inc
leave
ret
in
fwait
and
mov
sub
mov
xlat
jne
cmpsb
aas
std
or
push
ficoml
jle
xor
int
lret
test
inc
shl
cmp
xor
popf
jp
push
sbb
cmp
mov
jl
mov
into
push
enter
jne
loopne
in
fwait
dec
lret
or
jecxz
loop
dec
xchg
dec
adc
in
pusha
add
les
test
out
aam
cmp
ja
jmp
cmp
mov
inc
cs
sbb
pop
mov
dec
cltd
mov
cwtl
cwtl
jecxz
mov
fsubr
mov
cwtl
rclb
sbb
pop
dec
add
movsb
push
ljmp
std
push
fsubl
mov
sub
sahf
mov
inc
les
push
sbb
int3
fsubrs
push
ljmp
add
xchg
jge
dec
in
jb
mov
popf
adc
repnz
lods
jp
in
rcll
or
xchg
addr16
inc
mov
mov
and
ret
popa
pop
mov
pop
inc
aas
sbb
and
mov
clc
sbb
pop
enter
adc
sbb
repnz
imul
and
push
push
add
iret
test
mov
dec
mov
cld
movsl
cmp
iret
xor
pop
mov
mov
dec
push
jge
out
and
jge
imul
fiadds
loop
dec
stc
mov
dec
mov
mov
hlt
jmp
dec
jno
sbb
adc
dec
mov
xor
clc
aad
mov
pushf
pop
xchg
cmp
ljmp
mov
out
orl
dec
das
cmp
fiadds
xchg
sub
push
outsb
sbbl
or
ret
les
gs
mov
lods
out
mov
jp
insl
cmc
sti
insl
movsl
aaa
fdivs
hlt
pop
cmp
cmp
mov
and
add
lods
outsl
mov
subl
call
inc
mov
xchg
dec
cltd
scas
leave
fistps
fwait
push
dec
les
rclb
je
lea
cmp
es
or
cmp
pop
insb
cmp
adc
lahf
das
add
mov
loope
or
dec
subb
aad
push
stos
fistpl
push
xor
xchg
pop
shlb
jne
adc
test
ljmp
xchg
mov
cmc
arpl
xor
addl
stc
lret
cltd
into
lret
jnp
sub
sub
rolb
cltd
shrl
fs
test
sub
js
xchg
aam
movsb
lcall
push
aas
mov
loope
mov
inc
repz
dec
mov
jo
mov
in
sar
stc
rorl
in
pop
into
aam
jecxz
xchg
fadd
mov
jl
rep
aaa
and
jnp
outsb
pop
lea
movsl
out
sbb
add
enter
pop
js
mov
stc
int
negb
jns
pop
sbb
or
bound
sub
inc
test
push
jmp
jecxz
sbb
fists
loopne
rep
jmp
into
loopne
addr16
ljmp
iret
xchg
cmp
adc
xor
aaa
out
pop
insb
cmp
cld
fsts
neg
inc
imul
sbb
adc
ljmp
adc
fs
cmp
pop
push
push
cmpsb
test
mov
or
mov
mov
mov
decl
loope
mov
and
pushf
jmp
cmpsl
dec
and
sub
xor
pop
push
jo
out
fwait
mov
fidivs
cwtl
fisubrl
sbb
mov
fiadds
xchg
int3
cmpsl
sub
add
ficompl
jp
xlat
sbbb
outsb
inc
pop
mov
loopne
stc
ss
sarl
insl
in
pusha
std
pop
and
sbb
and
or
pop
jno
roll
aaa
sbb
push
es
xchg
or
stc
fldenv
fisubs
mov
push
cs
mov
lahf
lods
adc
push
jnp
cld
add
dec
pop
or
lahf
jg
jb
dec
imul
shll
mov
pop
inc
ds
cld
fdivs
push
das
pop
xchg
aas
sub
inc
fisttpl
iret
mov
fdivs
pushf
ret
ja
push
movsb
js
jbe
adc
nop
cmp
out
rclb
push
mov
pop
push
bound
subb
lds
xchg
ds
push
dec
dec
out
test
mov
mov
mov
pop
cwtl
inc
icebp
je
cmp
outsb
loope
push
xsave
out
repnz
incb
cmp
add
fldt
push
dec
fldcw
mov
std
sbb
xor
pop
into
jg
dec
ret
data16
xchg
popa
fisttpl
inc
xchg
cmc
mov
mov
push
out
js
xchg
and
popa
cmpsl
stos
sub
jle
outsl
mov
mov
sub
push
or
mov
mov
mov
jle
shrb
mov
out
dec
mov
mov
xchg
aam
aaa
test
adc
adc
pop
hlt
xor
mov
int3
repz
pop
and
rcrl
or
and
add
shl
lock
lock
push
sbb
aam
inc
xor
push
adc
mov
sbb
out
push
add
mov
bsr
ret
and
adc
pop
dec
mov
push
pop
sub
mov
nop
data16
mov
sbb
aad
inc
jo
fistps
in
xor
adc
jns
adc
mov
mov
ret
sbb
scas
test
cltd
add
stos
fnstcw
test
test
add
es
jmp
into
adc
lock
adc
inc
loope
sub
jns
imul
lods
adc
js
push
mov
lahf
push
cmp
in
notl
dec
cmc
mov
sar
sarl
pop
outsl
call
daa
cli
maxps
push
inc
add
adc
sub
xor
and
aas
rcrb
mov
mov
jle
adc
das
repz
mov
add
pop
inc
out
out
fmuls
out
insl
loopne
insb
and
xchg
stc
push
xchg
psubusw
pusha
dec
sahf
rol
dec
add
sbb
cmp
repz
jo
jg
sbb
mov
movsb
arpl
jae
aad
aam
mov
push
mov
push
cli
push
call
jmp
or
lods
lret
pop
inc
sub
mov
roll
stos
sbb
cmp
rcrw
add
inc
add
jns
pop
in
or
inc
in
fnstcw
fucomp
iret
shll
jg
cmpsl
sbb
addb
mov
and
outsb
movsb
subb
enter
inc
xchg
insl
test
popf
pusha
addl
jmp
inc
lock
mov
mov
mov
mov
mov
dec
aad
and
repz
sahf
imul
add
out
pop
les
mov
jae
mov
ret
jmp
xor
popa
repz
test
nop
dec
push
cltd
cmpsl
loopne
cli
lods
jecxz
testl
aam
or
dec
fisttpll
mov
push
pop
insb
xchg
mov
push
sub
int
and
push
mov
inc
aas
cltd
gs
mov
int
mov
push
add
jb
fdivs
cmp
add
sbb
popf
int
lahf
test
test
daa
mov
frstor
fwait
jbe
xchg
xor
pop
mov
imull
xchg
push
insb
repz
insl
cs
ret
and
jle
mov
pushf
clc
xchg
mov
ss
imul
xchg
and
mov
test
shlb
nop
ljmp
cs
dec
jmp
sub
add
out
cmc
lods
cs
xchg
pushf
fcomps
push
inc
dec
and
roll
push
movsl
loopne
mov
push
in
add
inc
lahf
mov
pushf
mov
sbb
dec
out
sbb
test
rol
ss
push
jb
push
fwait
xlat
stc
sbb
push
sbb
pop
xchg
and
and
sub
cmp
inc
sub
xchg
sub
orl
mov
jne
inc
in
nop
xchg
or
mov
mov
and
xchg
push
out
dec
push
sub
aad
fdivrl
rcll
aam
ja
das
add
adc
stos
mov
mov
fcoml
dec
roll
push
jl
mov
xor
mov
sub
cltd
popf
mov
cmp
add
pop
gs
dec
inc
and
push
mov
mov
add
in
xchg
push
and
or
push
pop
and
or
in
in
sub
in
jg
pop
mov
cmp
das
mov
xchg
shrl
fwait
sub
jo
clc
push
fiadds
cmp
pusha
popf
fwait
xchg
mov
xchg
xlat
xor
lcall
pop
imul
outsb
mov
mov
mov
mov
out
dec
scas
jg
into
mov
addr16
arpl
hlt
adc
enter
ror
add
pop
and
aaa
and
jecxz
lret
cld
les
popa
cmpsl
movsb
sbb
jnp
sub
addr16
imul
popa
or
movsl
test
and
jae
xchg
cmc
push
dec
and
test
popa
movsl
mov
ret
loop
mov
push
mov
add
xor
pop
shll
push
jle
test
xor
sbb
sub
imul
mov
push
pop
jmp
iret
lea
filds
shlb
mov
xacquire
xchg
mov
push
dec
jge
push
or
stc
adc
dec
fmull
ljmp
insl
loop
or
sub
scas
pand
jo
add
mov
shlb
loope
add
pop
hlt
fdivl
adc
jno
inc
jl
mov
sbb
push
sbb
fimull
jg
cwtl
test
divb
mov
mov
or
mov
xlat
ret
inc
sbb
and
scas
mov
inc
lret
jmp
lock
sub
js
mov
pop
cmp
push
adc
pushf
lock
rcr
inc
cmp
and
sub
push
pop
imul
xchg
stc
xchg
sbb
dec
aaa
inc
dec
xchg
and
in
xor
jle
inc
dec
add
lahf
pop
xchg
push
pop
lret
sub
daa
test
enter
shrl
sub
pop
ja
or
mov
push
test
in
cmp
notb
dec
popl
in
dec
push
adc
or
jbe
mov
lcall
mov
cmp
popa
ret
and
sbb
aam
dec
scas
addr16
shrb
cltd
mov
or
movb
sarl
sbb
pop
popa
xchg
arpl
sahf
bound
cld
xchg
or
fcom
ja
sysexit
mov
sub
ljmp
cmc
pop
popf
jmp
push
lret
xchg
mov
rorb
jo
fdiv
jl
dec
and
jne
fsts
add
or
pop
mov
je
adc
mov
mov
cmp
cmp
pop
ret
mov
data16
mov
push
jecxz
in
stc
mov
rcrb
es
imul
push
out
test
and
jbe
add
nop
mov
xchg
add
inc
jecxz
aam
add
mov
and
fiadds
pop
aas
inc
or
xchg
push
inc
scas
addr16
test
fistl
in
andl
xor
mulb
imul
mov
xor
fdivs
push
mov
shrl
out
imul
mov
ficoml
sbb
mov
pop
pusha
inc
adc
lret
inc
call
xor
cmpsb
sbb
xchg
fisubl
cmp
pop
mov
adc
or
mov
lcall
inc
andb
test
aas
mov
pop
mov
aam
mov
or
bound
fwait
scas
cmp
mov
daa
dec
cmp
dec
sub
sbb
add
mov
rol
cmp
hlt
inc
adc
dec
mov
xchg
mov
pop
mov
inc
jbe
and
or
sub
daa
loop
xchg
jle
mov
pop
fbld
sbb
mov
jecxz
push
adc
test
add
and
and
je
negl
xlat
addr16
mov
cltd
pop
daa
cmp
inc
imul
dec
pushf
push
imul
or
push
mov
cmp
mov
mov
ja
outsb
push
jmp
pusha
cmp
cld
nop
mov
xchg
jmp
decl
bound
jno
pop
or
daa
and
mov
mul
sahf
shll
adc
mov
lods
std
ret
mov
out
shrb
or
gs
push
xchg
test
push
orb
gs
dec
pop
stc
fbld
pop
dec
push
in
mov
push
xlat
xlat
ret
pop
xor
cwtl
lret
loop
push
stos
adcl
aaa
cmp
cld
lea
aad
shrl
pop
lret
insl
pop
add
dec
lret
pop
pop
enter
dec
in
mov
dec
pop
cmp
cltd
push
pop
imul
cmp
cld
dec
jp
push
jno
std
xor
sbb
or
xchg
loopne
dec
pminsw
pop
fs
sahf
repz
cmp
jge
mov
stos
xor
mov
sbb
jmp
aad
aas
cld
dec
add
lea
test
not
jmp
pop
sbb
popl
sarb
shr
push
sbb
and
jbe
mov
ljmp
inc
xlat
movsb
jo
cld
cs
cwtl
or
jno
lahf
and
jnp
call
xlat
inc
mov
roll
insl
xchg
push
pop
ss
leave
jno
scas
repnz
cs
push
ja
xor
dec
cld
inc
sbb
jb
scas
jp
jns
add
movsl
mov
cli
or
push
cmp
mov
push
lcall
inc
mov
pop
push
lods
xchg
loop
hlt
ror
test
dec
scas
adc
mov
out
test
xlat
xchg
cltd
imul
or
popa
mov
aam
mov
stos
sbb
hlt
cmp
add
mov
inc
mov
jne
inc
and
add
rsqrtps
call
mov
outsl
es
mov
pop
shll
decb
lret
ljmp
loopne
sub
std
adc
cmc
pop
sub
lret
stos
popf
mov
xor
dec
fsubs
lret
in
int
movsl
sub
inc
insl
mov
rclb
mov
and
adc
pop
ljmp
loope
insl
xlat
or
stc
cmpsb
cmc
or
add
jecxz
stos
dec
mov
cmp
add
add
push
push
outsl
popa
xchg
sub
fstps
outsl
lods
mov
sbb
outsl
scas
outsb
sub
dec
in
and
clc
inc
xor
jns
mov
sbb
sub
sub
int3
mov
and
push
idivl
and
pushf
sub
test
lahf
jne
lcall
lods
test
sbb
sbb
sbb
inc
xchg
pop
mov
repnz
outsb
ljmp
cltd
and
ja
mov
xor
test
xorb
add
ss
cmp
push
cmp
outsb
sub
xchg
fistpll
adc
mov
sub
lds
mov
aad
popa
jge
and
sub
sar
and
pop
cmc
ss
mov
adc
xchg
cwtl
movsb
enter
movsl
or
in
push
in
sub
mov
push
rcrl
or
xlat
cmp
push
outsl
jbe
scas
dec
jge
aaa
and
out
cmp
cmp
and
pop
cmp
and
xchg
std
out
je
rcl
xor
or
mov
in
icebp
cmpsl
scas
mov
dec
xchg
mov
cmp
mov
into
cmp
add
jno
xor
push
mov
rolb
push
outsl
mov
iret
push
cs
int
sub
dec
loope
cld
mov
mov
imul
cmp
jno
mov
or
adc
cmpsl
mov
jno
bound
dec
or
cld
push
jbe
outsb
pop
fwait
mov
pop
adc
mov
daa
and
hlt
rcl
outsl
lret
or
test
ficoms
mov
mov
or
out
mov
pop
cmpsl
sbb
mov
mov
sbb
xchg
sbb
push
ljmp
repz
mov
xlat
sti
inc
xchg
loope
push
xchg
daa
xchg
fisubl
pop
xor
push
dec
jl
cld
mov
in
popa
xchg
mov
push
add
xchg
adc
and
enter
pop
pop
loop
mov
lahf
xor
pop
add
adc
dec
lahf
pop
xor
xchg
or
ljmp
xchg
arpl
lods
jl
movsl
pop
rorl
xchg
cltd
mov
jae
rorl
xlat
mov
lea
cmp
mov
std
js
jne
rol
pop
mov
dec
or
cli
scas
movsb
pop
or
adc
stc
daa
jmp
repz
mov
mov
and
leave
imul
fstps
and
xlat
xchg
mov
xchg
sub
and
test
and
add
scas
mov
adc
out
movsl
popf
adc
push
push
xlat
lods
xchg
xchg
sbb
fstpl
xchg
jno
mov
sbb
sub
push
dec
data16
pop
sbbb
sub
fisttps
mov
mov
push
sbb
je
adc
cmp
and
inc
xor
inc
adc
pop
lds
pop
orl
and
push
mov
ja
fs
adc
xchg
loopne
fmull
dec
data16
adc
mov
sbb
push
jmp
loopne
or
push
xor
daa
filds
adc
mov
push
jmp
sarl
adc
stc
dec
mov
mov
mov
and
jg
lret
lods
in
xlat
mov
dec
push
es
loop
jo
jge
inc
nop
or
aaa
jnp
fstpl
insb
mov
out
lea
pop
jne
sub
dec
mov
mov
jmp
xchg
insl
mov
dec
testb
add
outsl
jns
pop
aam
leave
sbb
and
inc
cld
jne
fistl
jmp
sbb
or
cmp
sub
pop
xchg
dec
test
imul
jne
fistl
jmp
sbb
or
cmp
sub
pop
xchg
dec
test
imul
jne
gs
adc
sub
lret
cmc
sub
pop
xchg
pop
test
andl
jne
fistl
imul
aad
outsl
xchg
cmc
sub
test
pop
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
inc
push
test
mov
jge
push
popf
aas
leave
ret
cmp
sub
sbb
or
pop
mov
inc
mov
jb
add
adc
fnstenv
mov
loop
cld
or
sbb
test
sbb
or
cmp
xor
icebp
dec
mov
cs
add
sub
cmp
fcoml
adc
vmovupd
xchg
imul
dec
mov
adcl
xor
xor
cmpsl
cltd
cmpsl
mov
sti
jns
jno
sbb
js
stos
mov
mov
xor
shrl
inc
xchg
mov
lods
ficoml
imul
mov
std
stc
adc
dec
sarl
sub
cmc
jge
xchg
xchg
sub
filds
lret
std
fisttpll
lods
outsl
rol
leave
ret
cmp
fiadds
or
xchg
push
stos
jns
adc
mov
push
cltd
cmp
lahf
out
adc
js
xchg
mov
mov
jb
adc
add
dec
fstpt
jmp
lcall
daa
cs
test
jno
je
outsl
mov
lods
ret
insb
xchg
insl
xchg
pusha
adcb
sbb
sub
clc
add
mov
movsl
sbbl
subb
and
daa
out
ds
push
leave
sbb
dec
popf
adc
and
xor
ret
sub
sbb
or
pop
mov
inc
mov
jb
add
adc
and
xor
ret
sub
sbb
or
pop
mov
inc
mov
add
and
xchg
inc
push
jg
mov
ljmp
incl
imul
mov
popa
pop
stc
shl
out
push
cli
jle
cmp
cmp
mov
ret
cli
or
jnp
je
cmpl
in
bound
cltd
pop
int3
sarl
adc
cmp
inc
ret
mov
lahf
push
nop
mov
jbe
ror
mov
fimuls
add
inc
inc
sub
jg
cmp
fstps
push
and
leave
daa
jae
sub
fstpt
push
test
lea
push
lods
in
std
dec
adc
mov
inc
jmp
ja
cli
ja
repnz
das
shrl
mov
lahf
rcr
cmp
icebp
add
gs
ficompl
sub
rcrb
mov
sbb
sub
ja
adc
lods
dec
out
jmp
inc
lods
imulb
and
mov
cwtl
shll
scas
or
xor
push
mov
movsl
add
adc
rol
mov
mov
mov
popa
and
sub
lcall
mov
mov
xor
lahf
cmc
sub
push
lds
shlb
sbb
mov
cli
and
xor
sarl
mov
jl
cmc
adc
pushw
lock
lahf
lret
cs
cld
pusha
mov
add
ror
ret
add
js
dec
sub
mov
add
stos
bound
push
pop
arpl
xchg
inc
lret
jne
jns
mov
inc
or
sub
mov
lcall
test
insl
in
push
xchg
fiadds
jnp
ds
dec
iret
mov
lret
push
std
xchg
call
mov
repz
xor
movsb
stos
lods
dec
or
mov
mov
mull
adc
stos
cmpb
xor
lret
outsl
pop
mov
xchg
push
cmp
test
cld
imul
fstps
fdivl
lahf
sub
lock
ret
or
push
inc
insb
aaa
hlt
pop
dec
sahf
or
adc
das
cld
adc
out
hlt
lret
xchg
imul
sub
out
fistpll
pop
cwtl
adc
das
in
rcrb
packssdw
jb
outsl
dec
or
cmpsl
xchg
sbb
sbb
rorl
xchg
and
dec
aaa
sbb
dec
mov
xchg
mov
mov
popa
sbb
mov
push
pushf
cwtl
sti
or
xor
jb
aas
ret
jecxz
xlat
and
lret
and
loop
xchg
sub
sbb
cli
loopne
inc
push
pushl
nop
sbb
test
mov
and
cmc
popf
sahf
add
xrelease
popa
nop
fsubl
ss
pop
shlb
divb
xchg
lods
sbb
add
mov
rclb
lods
pusha
xchg
and
jmp
dec
movsl
rcl
inc
insb
sbb
lock
cwtl
pop
and
push
xor
lods
cwtl
sub
push
adc
cmp
mov
jp
and
xchg
pushf
inc
mov
mov
mov
cltd
lcall
cmpb
cmpl
add
adc
popf
mov
pop
pop
jecxz
mov
mov
push
jl
push
lods
aaa
jmp
fs
jg
pop
scas
mov
adc
sub
sbb
push
lcall
clc
out
sbb
cmp
add
xor
inc
mov
popa
pushf
push
lods
adc
xlat
dec
xchg
addr16
mov
jl
cmp
fnstcw
sbb
std
xchg
sahf
and
imul
movsl
mov
je
gs
out
leave
dec
nop
mov
subb
divb
cmp
loopne
repnz
outsb
add
xchg
xchg
gs
dec
mov
xor
decb
adc
pop
mov
insl
icebp
punpcklbw
fsubp
bound
xor
xor
addr16
mov
arpl
outsb
jmp
imul
roll
addr16
mov
cmp
cltd
in
insb
pop
and
fbstp
xchg
pop
inc
scas
mov
push
sbb
jns
loopne
jge
mov
push
ljmp
loop
idivb
mov
repnz
jbe
mov
out
fucomi
pop
mov
xchg
sbb
leave
sbb
push
jnp
mov
aas
mov
sub
ljmp
sub
ret
hlt
aad
lret
aaa
test
lds
mov
jne,pn
xor
lcall
push
inc
repz
and
pop
lahf
shlb
mov
cmp
shlb
xchg
cmp
jns
add
aam
cld
sbb
add
mov
sub
add
movsl
pop
dec
inc
loope
dec
xchg
jge
jnp
push
mov
jle
dec
xchg
ret
aaa
push
lret
ds
cmp
clc
xor
push
cltd
pop
pop
aam
adc
out
jp
jbe
jnp
rcrb
dec
sbb
adc
sbb
into
xor
xchg
hlt
jl
sub
jle
fwait
testl
mov
add
ret
es
jmp
xchg
push
push
in
inc
cltd
xlat
notl
ss
mov
cmp
mov
imul
mov
dec
lea
xchg
arpl
sub
icebp
mov
fisubs
out
push
xchg
enter
dec
in
push
dec
add
loopne
push
push
sbb
mov
push
rcr
mov
xchg
mov
test
cmp
push
sbb
cmc
lock
and
sbb
in
pushw
cwtl
pop
mov
test
sbbl
cmp
nop
loop
pop
fiadds
mov
mov
cmpsl
add
sahf
aaa
clc
sahf
stos
xlat
repz
xchg
mov
shll
inc
aas
jb
fs
cltd
jl
movsb
sub
and
gs
mov
pop
sub
icebp
pop
nop
in
mov
fmulp
adc
jae
pop
adc
stos
ja
inc
cmp
xchg
xor
jb
mov
mov
and
clc
subl
movntps
cmp
insb
repz
push
popa
les
push
adc
mov
jbe
mov
rcrb
int
bound
scas
adc
fsubp
ret
inc
in
sbb
mov
mov
pushf
mov
xor
fiadds
ficoms
loopne
ja
into
cmp
lods
sbb
mov
lods
pop
lods
or
inc
movsl
dec
xor
cmc
jmp
sbb
ljmp
jno
adc
lods
push
pop
xor
adc
sahf
inc
out
xor
ret
aaa
pop
mov
adc
out
or
imull
cld
xchg
sub
adc
jg
mov
add
cmp
cmc
shll
out
xor
ds
lcall
pop
or
mov
cwtl
out
adcb
cmp
mov
pusha
xchg
xor
adc
mov
je
cmp
repz
pop
mov
fstpt
inc
dec
insb
out
dec
test
mov
push
sti
daa
push
int
mov
mov
pop
or
testb
cld
push
nop
call
addr16
loope
push
data16
pop
sub
rol
ficomps
ficompl
sbb
pop
sysenter
icebp
pushf
pop
mov
imul
jp
lock
ret
stos
and
ret
mov
test
leave
lds
je
dec
std
or
daa
rcl
cmp
dec
push
cmp
mov
loope
lret
add
jne
hlt
gs
jmp
or
es
sub
jae
push
xor
jbe
gs
dec
adc
xor
in
sub
or
mov
bound
aaa
jns
scas
fcmovb
jae
xchg
mov
cli
cmp
es
jmp
mov
lods
aad
shll
mov
push
cmp
mov
jmp
negb
lds
and
push
je
hlt
inc
push
pop
fnsave
dec
mov
sbb
cli
jge
mov
lods
fs
insl
fldcw
xor
push
mov
adc
stc
loop
mov
lahf
pop
jmp
mov
cmp
xchg
inc
out
fisttps
jae
add
das
loop
pop
ret
cmp
popl
mov
hlt
mov
jno
imul
ficoms
jno
mov
out
push
or
jae
adc
stc
xor
xor
adc
cs
push
xor
nop
mov
cs
inc
shrb
dec
je
fldenv
into
mov
iret
xchg
pop
mov
adc
adc
sbb
loope
aam
jno
pusha
fists
frstor
mulps
fnsave
pop
jbe
ret
fucomp
aas
das
sbb
push
out
adc
pop
and
mov
aad
sbb
mov
xor
xchg
idivb
mov
xlat
and
js
and
fsubrs
je
mov
mov
inc
push
mov
push
mov
cmpsl
mov
js
inc
and
jmp
lret
sub
es
pop
mulb
mov
mov
xlat
add
jo
call
rcrl
mov
mov
stc
or
pop
xchg
dec
adc
ljmp
mov
cld
lcall
jl
popf
sub
dec
leave
sbb
inc
hlt
andl
inc
xchg
pop
movsb
mov
cmp
sub
mov
pop
shl
adc
clc
push
ret
test
xchg
push
stos
test
dec
jb
jb
cmpsl
sbb
outsl
sub
into
push
in
mov
pop
fists
push
arpl
fnsave
lods
cmp
sbb
daa
xor
sbb
sbb
lock
xor
adc
or
mov
popa
add
repz
in
jbe
push
stos
sub
xor
pop
in
test
mov
mov
inc
jl
test
mov
imul
dec
sbb
add
cltd
inc
add
in
es
popa
fisubrs
mov
call
mov
mov
enter
cli
and
nop
xor
hlt
fisubrs
jbe
sti
mov
cmp
pop
cmpl
mov
sub
repz
push
add
pop
aad
insb
or
jns
xchg
xchg
lahf
and
jmp
aam
sub
mov
test
push
testl
fistl
push
fisttps
hlt
nop
stc
rorb
imul
aas
mov
ljmp
and
mov
loope
pop
dec
mov
dec
jmp
stc
fistpll
loopne
push
lods
add
ret
add
dec
mov
ret
cmpsb
xor
mov
mov
or
xor
push
push
xchg
or
decb
popf
popa
lret
decb
mov
mov
pop
or
mov
pusha
test
jnp
pop
or
sbb
jp
jo
andb
add
cmp
sbb
pop
and
aad
test
pusha
push
in
imul
stos
mov
pop
mov
clc
sub
pop
out
mov
dec
or
pop
test
jb
xchg
xor
jle
add
sahf
jae
aam
fs
test
lea
adc
sub
hlt
push
or
jl
mov
lret
sysexit
pop
pop
sub
mov
test
or
fcmovne
push
push
iret
jecxz
push
daa
hlt
jnp
push
pusha
add
cltd
or
mov
mov
or
jmp
dec
and
add
xchg
xlat
jb
xchg
mov
cmp
jae
mov
lcall
pop
pop
scas
outsb
ffreep
repnz
mov
dec
hlt
pushf
add
mov
mov
add
mov
nop
je
leave
inc
xlat
xchg
push
xchg
imull
sub
bound
repz
fs
xor
lahf
push
outsb
sti
xchg
lahf
mov
mov
mov
arpl
push
in
push
jge
in
mov
shlb
jge
sbb
adc
mov
mov
mov
and
mov
xlat
shr
mov
sbb
aas
cmp
push
mov
push
pusha
add
xor
insl
add
adc
dec
pop
push
dec
adc
xchg
cmp
mov
cmp
jae
xor
lcall
jns
iret
or
ficomps
loopne
in
rorb
outsl
and
inc
fnstsw
enter
dec
es
jg
ret
mov
xchg
add
lret
jmp
aam
fcomip
cmp
xor
xor
dec
imul
pop
fbld
outsb
dec
dec
sahf
mov
pop
test
cmpsb
enter
sbb
xlat
jmp
push
test
jo
pusha
add
sbb
jecxz
lods
outsb
cmp
and
mov
outsl
int3
mov
cmp
add
or
sub
dec
cmp
enter
add
or
sbbl
icebp
cmc
xor
push
dec
jno
daa
lods
pop
rorl
add
pop
cltd
pop
in
and
adc
ret
jge
mov
mov
cmp
mov
xchg
test
mov
jl
xorb
loopne
and
cmp
sbb
and
int
mov
inc
mov
xchg
xlat
mov
jo
leave
jge
test
in
mov
inc
popa
mul
test
orb
mull
and
pop
aam
fwait
insl
das
inc
imul
in
cld
orl
rcll
xchg
jg
jecxz
enter
inc
stos
lret
push
lret
xor
fnstcw
jecxz
rcr
jecxz
mov
mov
or
test
inc
mov
in
js
add
js
cwtl
dec
xchg
xchg
imul
and
inc
jo
ljmp
and
enter
adc
imulb
push
pop
sub
xchg
dec
mov
fsubl
pusha
inc
jge
cmp
pop
into
in
add
fs
outsl
push
ret
loope
mov
xor
sbb
imulb
xor
push
test
mov
and
jmp
int3
mov
sbb
mov
push
in
pop
in
loop
xchg
test
add
int3
sub
adc
cmp
icebp
push
dec
ret
sub
inc
mov
cld
lock
xchg
cmpl
rorb
mov
cld
sbb
push
adc
sbb
jb
xlat
xchg
loopne
enter
cmp
icebp
in
pusha
enter
mov
xor
lea
sbb
inc
or
std
pop
pop
xchg
mov
mov
xor
push
pop
dec
or
lahf
push
mov
xchg
sbb
sub
sbb
out
pop
inc
imul
fldt
inc
std
push
cmpsb
jg
adc
ret
sbb
jmp
cmpsb
and
cmp
xchg
pushf
nop
negb
lahf
push
movsb
mov
repz
cmpsb
lea
inc
hlt
push
mov
pop
dec
outsl
pop
sbb
scas
fidivrl
rcrl
add
push
sub
pop
sahf
and
mov
fwait
aas
mov
and
out
repnz
mov
mov
and
int3
and
mov
cmp
cmpsb
mov
aaa
pushf
jg
lea
iret
out
cmp
add
les
les
insb
and
xchg
in
enter
add
add
pop
mov
movsb
push
imull
and
mov
nop
sub
lods
in
lock
stc
add
fildll
lahf
pop
popa
and
dec
xchg
iret
xchg
mov
in
sahf
xchg
ror
sub
push
sub
adcl
pop
cmpsb
fcomps
push
pop
daa
and
iret
sti
pop
and
fldt
insb
push
sahf
imul
cmp
xchg
sub
sub
call
fdivrl
dec
add
mov
sbb
add
imul
andb
sub
test
divl
cmpsl
sub
mull
push
xchg
mov
out
nop
dec
cmc
and
and
cmp
push
mov
scas
dec
mov
jecxz
popf
lret
pop
xchg
xor
push
es
jae
repnz
insb
insl
mov
cltd
xchg
loope
fwait
lea
xor
xor
shrl
cmp
pop
popf
subb
negb
adc
popf
adc
fmuls
push
xor
or
nop
cmp
mov
outsl
fstps
pop
push
mov
push
push
out
test
dec
mov
insb
mov
dec
mov
lret
xor
outsl
fld
adc
lds
je
sub
mov
lock
aam
dec
adc
pop
sbb
in
in
ljmp
outsl
sub
lock
dec
int3
ljmp
ljmp
jl
test
xchg
and
push
mov
jp
sub
negb
int3
pop
add
sbb
outsb
lea
fldl
lcall
inc
clc
rcrb
and
fcomi
es
mov
orb
mov
test
cmpb
mov
dec
imul
in
les
sbb
sub
in
push
adc
lea
mov
or
push
xor
adc
and
lds
inc
push
mov
cld
push
loop
rorb
fisubrs
mov
repz
and
fcoms
xchg
xchg
int3
jge
add
ljmp
push
pop
mov
les
push
pushl
sbbb
inc
sbb
sbb
or
vpsubsb
xchg
mov
jp
cmp
mov
inc
jl
fsubrp
repnz
repnz
ret
mov
dec
mov
mov
and
dec
orl
xor
pushl
lods
inc
adc
add
andl
dec
xor
xchg
jecxz
imul
push
pop
pop
sub
inc
ret
xor
rorl
xchg
scas
movsb
cmpsb
bound
fwait
mov
insb
jne
sbb
or
es
dec
push
fildll
jnp
gs
jle
ffree
jbe
push
sub
pop
testl
cmp
cld
test
inc
mov
mov
mov
jge
and
fidivrs
ds
mov
leave
add
jmp
mov
inc
fadds
and
pop
ret
out
jmp
dec
push
out
push
out
mov
cs
fadd
sbb
cltd
xor
and
jle
xchg
daa
jns
lcall
mov
and
movsb
xor
int3
test
stc
movsb
cmp
adc
pop
movl
divb
xchg
dec
jb
xchg
inc
ss
loop
aaa
inc
dec
aam
loope
sub
cltd
mov
xchg
ret
pcmpgtb
sub
cmc
adc
mov
movsb
pop
push
enter
or
lcall
jg
add
sub
push
xchg
jnp
std
or
test
rclb
les
mov
scas
in
xchg
dec
xchg
aad
hlt
lock
fwait
mov
inc
subb
or
aas
mov
adc
sbb
pop
push
rol
jbe
adc
loope
push
dec
mov
rcrl
mov
hlt
pop
stc
test
sub
aaa
add
jne
sub
push
std
insb
repz
sub
ljmp
sbb
mov
pop
mull
sub
sbb
mov
ja
movsb
push
sahf
jle
xor
adc
test
jecxz
dec
pop
mov
xchg
xchg
sub
push
sbb
push
es
push
adc
out
pusha
adc
rcrl
mov
jl
ss
rcr
sub
or
adc
dec
mov
lret
add
mov
mov
or
jns
jp
xchg
imulb
xlat
aaa
and
cld
out
dec
test
imul
pop
insl
mov
lcall
xlat
pop
fisttpl
jl
push
jne
push
shlb
pop
int
inc
sahf
fbstp
mov
movsb
scas
icebp
ret
xor
cwtl
adc
lea
dec
add
jle
xlat
cmp
clc
arpl
push
mov
jns
ljmp
mov
mov
movsl
out
andl
fbstp
adc
stos
lret
or
repz
pop
sarl
push
adc
or
adcl
scas
divb
std
inc
fdivrs
shrl
mov
cmp
mov
or
pop
aad
inc
pop
xor
aaa
inc
jecxz
sbb
movsb
jle
aaa
lahf
xchg
pop
ret
jbe
adc
fcmovbe
add
sub
lea
mov
lret
in
cmpsl
repz
dec
jge
call
add
push
out
or
js
enter
mov
cmp
popf
and
iret
sbb
cwtl
add
jmp
push
add
and
popf
divb
mov
and
std
cmp
add
inc
cltd
sbb
gs
adc
mov
mov
fcom
out
imul
pop
push
imul
sbb
xchg
bound
jo
aaa
jbe
mov
fs
clc
mov
lret
outsl
into
gs
fstps
ret
mov
sarb
test
add
adc
and
xor
ret
sub
sbb
or
pop
mov
inc
mov
jb
add
adc
and
xor
ret
sub
sbb
or
pop
mov
inc
mov
jb
add
adc
fnstenv
leave
ret
sub
sbb
or
jns
dec
inc
mov
jb
add
adc
mov
sub
jle
icebp
sbb
sbb
or
cmp
sub
push
cmp
sbb
or
cltd
push
mov
jae
arpl
adc
inc
stc
xor
and
rorl
ret
cmp
sub
pop
xchg
dec
cmpl
mov
int
test
add
xor
and
rorl
ret
cmp
sub
pop
xchg
dec
cmpl
mov
lret
arpl
push
xchg
push
rorl
mov
xchg
pop
nopl
inc
repnz
inc
pop
dec
push
push
jno
cli
xor
adc
ljmp
movsb
sbb
imul
jb
lahf
stos
outsl
out
cmpsl
and
sub
es
mov
xor
movb
pop
les
add
xchg
cltd
xchg
jecxz
inc
jbe
mov
pushf
int3
sub
pop
sub
ret
test
pop
xchg
pop
xchg
xchg
repz
pusha
cltd
push
xor
pushf
daa
inc
mov
add
dec
jge
push
and
inc
jl
dec
push
inc
test
fcmovne
inc
sbb
cld
jae
push
xor
jle
leave
xchg
mov
js
es
lods
jecxz
inc
ja
arpl
in
enter
andl
cmp
sub
pop
xchg
dec
cmpl
mov
mov
adc
add
xor
gs
mov
dec
movsl
xor
sub
fdivrs
lea
ficompl
mov
inc
sbb
dec
mov
mulb
mov
clc
and
popf
insb
mov
dec
jo
insl
mov
xchg
xchg
pop
decl
jns
imul
fsts
leave
add
xor
and
rorl
ret
cmp
sub
pop
xchg
dec
cmpl
mov
mov
adc
add
xor
and
shrl
adcl
shl
dec
incb
push
cmp
jo
dec
fildll
fisttps
and
jle
scas
icebp
sbb
push
imul
enter
inc
test
insl
cmp
adc
lea
dec
mov
adc
aaa
repnz
sub
ja
test
cmp
dec
and
addr16
or
clc
icebp
cltd
je
push
pusha
sbb
lahf
in
dec
push
loope
icebp
jne
aas
leave
xchg
mov
inc
push
out
out
push
lods
daa
dec
scas
rorl
lock
push
mov
pop
push
sbb
adcl
xchg
lds
in
jbe
cmp
test
orl
popf
enter
ds
cmpb
mov
cmpsl
inc
rclb
pop
gs
ss
pop
lret
enter
lahf
sub
inc
push
pop
mov
lods
ret
out
sbb
inc
movsb
mov
stos
rol
dec
push
jg
insl
cmp
ret
sahf
jge
mov
cmp
xchg
jle
sti
pop
gs
in
fsubr
in
lds
push
fdivl
jae
adc
sbb
dec
lret
mov
sub
shrl
aam
xchg
sub
gs
pusha
ljmp
shl
mov
pop
icebp
sbb
cltd
adc
cltd
and
sar
mov
fsubs
push
lock
ljmp
pop
and
adc
mov
pusha
frstpm(287
aaa
jne
lods
sahf
jno
dec
adc
dec
add
nop
push
push
rorb
stos
int3
dec
xchg
ss
insl
sub
fs
test
or
ss
rcll
mov
pop
call
mov
insl
call
das
popa
jo
sbb
fidivrs
adc
int
mov
addr16
dec
outsl
fs
sub
xchg
mov
cmp
sbb
testl
xor
and
nop
jmp
scas
dec
pop
pop
fnstsw
nop
int3
cmpsl
test
pop
movsl
sbb
aas
rclb
push
enter
scas
and
outsl
cmpsb
pop
jle
cmp
xchg
jg
mov
notl
and
insl
insl
pop
cmpsl
aam
push
in
imul
fsubrl
lock
mov
daa
xchg
ret
push
jb
leave
test
test
mov
ds
mov
push
sub
push
sar
mov
insb
repz
push
or
dec
ss
div
xchg
lcall
sti
pop
je
enter
fsts
mov
push
fidivl
and
push
inc
sarl
aad
mov
mov
push
dec
leave
jle
push
push
sub
pop
in
xor
dec
mov
xor
in
test
test
inc
andl
dec
mov
stos
jns
xor
mov
adc
repnz
gs
fdiv
std
movsl
sbb
sub
outsl
sub
push
ljmp
jb
inc
pop
sbb
icebp
push
add
loop
in
adc
test
xchg
mov
mov
shrl
mov
xor
in
dec
add
mov
sub
push
ret
and
jb
scas
push
das
add
fisubrs
push
daa
add
jo
cld
aaa
pop
fidivrs
sub
out
das
mov
cld
scas
rcr
aas
xchg
ret
inc
or
dec
adc
ja
jg
adc
aas
push
div
enter
pop
hlt
ret
jmp
jno
push
pushf
adc
push
stos
daa
jg
jp
stc
stc
sub
mov
shrl
das
movsb
rcrb
js
jae
xor
movsb
cmp
repz
push
test
sbb
mov
lods
shl
cs
mov
imul
mov
es
scas
jb
xor
dec
lods
popa
mov
ret
dec
cmp
or
into
in
and
adc
and
cmp
dec
movsl
push
cmp
arpl
xchg
dec
subl
jbe
mov
out
xlat
push
or
popf
mov
inc
pop
orb
stos
and
jl
leave
dec
xchg
mov
iret
gs
cmc
mov
int
or
test
aaa
adc
movsb
adc
repz
lret
mov
jp
xchg
or
pop
lods
sbb
xchg
lds
mov
in
pop
xor
push
mov
jnp
pop
fwait
stc
je
in
enter
inc
pop
in
add
mov
leave
adcl
test
pop
lods
pop
inc
push
xchg
mov
pop
cmp
or
rol
inc
add
push
lock
hlt
in
aam
dec
adc
jo
dec
jno
adc
inc
sbb
cmp
mov
repz
aam
icebp
mov
test
rcrb
rcrl
out
push
clc
shll
xlat
xor
movsb
fldenv
lds
lock
pop
xchg
sbb
push
daa
cmc
sub
subb
addr16
out
cwtl
popf
xchg
jb
ds
jg
jl
push
and
cmp
jge
xlat
lds
lods
sbb
jp
loop
mov
rcrl
xor
mov
push
cwtl
xchg
imul
dec
xor
mov
sbb
sbb
xor
xor
xchg
out
and
sahf
lret
xor
fwait
mov
push
push
cmp
jne
imul
adc
je
or
call
mov
lea
in
leave
jmp
pop
sub
sbb
jge
jp
push
xchg
ds
fcmovne
btr
or
and
mov
rorb
push
and
adc
add
push
push
mov
cmc
push
xchg
pop
cwtl
inc
cmpl
jle
mov
repz
add
push
dec
or
xorb
jp
pop
adc
dec
and
ljmp
pushf
dec
or
mov
push
mov
enter
or
dec
hlt
psubsb
ret
pop
aam
mov
ret
out
dec
push
int
inc
sub
jl
cmp
adc
lcall
ftst
xchg
add
push
ret
inc
sub
jp
outsb
lahf
test
cli
imul
test
addl
ljmp
clc
mov
mov
and
call
fsubrl
aad
ja
mov
and
in
mov
xor
es
cmp
and
ljmp
cmc
mov
les
jl
fiaddl
loopne
jecxz
mov
pop
xor
xor
and
clc
out
push
cmp
dec
addr16
je
push
sahf
sub
adc
inc
pop
and
inc
mov
or
mov
daa
clc
daa
mov
repnz
rol
pop
mov
push
push
hlt
pop
cwtl
dec
jns
and
movsl
jbe
mov
xor
and
ss
ficoms
scas
fdiv
and
call
scas
lds
add
jb
adc
loope
shll
lret
xor
push
aam
mov
dec
pop
mov
int3
jae
outsl
mov
xor
scas
testl
leave
mov
jno
mov
pushf
stos
ret
and
cmp
and
cmp
push
std
mov
cmp
xchg
int
mov
pushl
stos
adc
fiadds
aas
lret
sbb
outsb
xor
cmp
dec
jmp
pusha
lahf
test
clc
mov
cmp
dec
cmp
sub
cmp
or
loope
inc
jae
mov
mov
add
aad
aas
lock
aam
cwtl
pop
bound
loop
mov
xchg
mov
and
pop
xor
movsb
xchg
movsb
inc
xchg
jge
icebp
inc
mov
aad
std
cmp
pop
sbbb
cmp
jnp
leave
cmp
mov
out
add
pop
push
lret
test
adc
ret
in
push
pushf
in
inc
cmpsl
xor
fcomi
movsb
sub
mov
jbe
mov
jnp
inc
lods
test
stos
pop
gs
mov
movsl
popa
ljmp
dec
adc
ja
push
scas
mov
and
pop
fldpi
movsb
jb
outsl
and
cltd
jo
inc
stc
mov
xor
shrl
xchg
inc
mov
add
repnz
sbb
movsb
inc
xor
pop
and
sub
fidivs
xorl
lret
fiaddl
xchg
and
mov
push
cmpsl
fs
fidivrl
movnti
out
cmpl
into
mov
sahf
cmp
popf
or
rcrb
out
or
ja
push
pop
sbb
notb
xlat
addr16
out
adc
xor
shr
into
sub
jne
scas
mov
xchg
loop
mov
and
dec
lods
sbb
xor
inc
mov
scas
loop
mov
lcall
or
je
cli
scas
push
mov
sbb
sub
mov
adc
outsl
stos
and
int3
outsl
add
pushl
out
fbstp
stos
outsl
sub
adc
push
fs
hlt
cwtl
rolb
pop
mov
dec
push
mov
mov
sbb
mov
mov
and
pushf
mov
jns
ss
push
dec
adc
ds
rcrb
and
sub
popa
mov
lahf
pop
sub
push
jne
pop
cmpsl
xor
lcall
mov
dec
mov
jmp
push
push
mov
mov
jg
std
pop
fwait
inc
ret
aad
add
jno
xchg
inc
jns
jne
xchg
mov
pop
ret
movsb
test
cltd
fists
stc
test
int3
lods
jbe
and
cmp
mov
in
xor
sub
adc
cltd
cmpsb
ljmp
jl
lret
stos
or
lea
mov
mov
dec
mov
mov
xor
lcall
notb
inc
out
jb
mov
and
data16
incb
in
data16
mov
roll
adc
mov
pop
lds
mov
xor
add
imul
push
dec
insl
fisubrl
cwtl
sub
imul
das
jl
pop
in
in
cmp
or
jnp
and
addr16
push
jmp
lea
or
dec
cmp
test
dec
mov
sbb
and
leave
push
push
mov
cmpsl
fstps
leave
arpl
xor
mov
and
or
repz
insl
aad
xor
cld
push
bndldx
dec
cli
movsl
es
mov
ss
dec
pop
cmc
mov
mov
loope
push
cmp
in
imul
push
adc
jo
sbb
cwtl
push
sub
rcrl
push
nop
dec
or
mov
je,pt
inc
push
iret
pop
fs
add
add
and
jne
pop
aaa
sub
lret
sub
push
testb
shr
jmp
xchg
xchg
icebp
lcall
lret
je
xchg
roll
sbb
int3
xchg
or
dec
mov
pop
fsts
push
sub
mov
and
push
inc
jl
xchg
xchg
cmp
and
cmp
in
dec
shlb
test
stc
and
sbb
enter
xor
lahf
aas
sbb
xchg
pop
push
mov
jecxz
mov
ret
ja
jne
adc
jne
dec
jbe
mov
mov
cmc
push
popf
test
inc
dec
sbb
popa
ja
jo
mov
xlat
aad
or
sarl
xchg
lea
inc
pop
ficoml
cltd
gs
lds
ja
pop
and
dec
stos
ds
out
xor
xor
std
and
test
pop
popf
and
outsb
add
rep
mov
xchg
aas
cld
adc
mov
movsl
shll
adc
lcall
pop
fisubl
imul
mov
lock
mov
push
push
lret
or
rcrl
fdivrs
push
jne
push
aaa
pop
jns
and
sub
mov
cmp
fsts
addl
pop
dec
xchg
mov
mov
sarb
shll
sub
fildl
ljmp
jmp
xchg
dec
adc
mov
cmpsl
sarb
test
xchg
arpl
mov
out
fbld
sub
popf
pusha
pop
cmp
xor
in
add
sub
fs
fcomps
lods
enter
add
mov
fldt
adc
pop
ret
addb
fsubrl
and
or
and
inc
xchg
in
jae
ds
ss
test
jmp
sub
hlt
and
add
std
iret
xchg
mov
scas
daa
jo
rcr
stos
icebp
push
mov
push
or
xor
push
pop
insb
sbb
add
xchg
ljmp
xor
mov
push
popa
push
cs
sub
ret
jecxz
jl
push
shrb
sti
adc
mov
cs
stc
pop
push
jns
ds
in
loopne
dec
mov
es
scas
ret
out
adc
fsts
mov
repnz
push
sbb
jg
mov
sbb
mov
jno
xlat
jb
movsb
or
cltd
fcmovu
test
mov
push
popf
or
outsb
sbb
sub
cmp
mov
icebp
mov
movb
or
sti
inc
movsl
mov
mov
jecxz
adc
cli
pop
or
loopne
cmc
mov
jp
push
arpl
xor
cli
adc
jge
push
jg
mov
pop
mov
clc
test
push
bound
adc
add
push
lds
inc
into
loopne
mov
sahf
arpl
scas
leave
jp
repz
ja
stc
pop
mov
lret
pop
xor
mov
add
mov
jns
daa
lea
test
imul
cwtl
lret
pop
icebp
cmpb
inc
xchg
dec
xor
sub
push
inc
inc
shrb
test
scas
filds
sub
and
xor
or
mov
sbb
ljmp
cli
clc
push
sbb
cmp
sbb
fisubs
pop
sub
push
stos
in
adc
lods
outsb
and
je
adc
xor
dec
and
into
jge
xchg
out
in
popa
add
ljmp
aam
or
out
cwtl
add
sbb
xchg
test
call
cmp
pop
mov
stos
jl
loop
pop
sbb
pop
mull
pop
pop
xlat
movl
or
mov
or
xor
cld
or
rcrl
mov
or
scas
ds
ss
sub
and
std
mov
mov
int3
pop
push
xor
mov
sbbl
ficomps
mov
cmp
fmull
or
fmul
cmp
mov
or
jno
inc
inc
xor
cmpl
push
clc
push
pop
mov
sub
fcompl
ss
ljmp
pop
hlt
xchg
cmp
je
mov
inc
jp
pop
dec
sub
dec
sub
rcr
movsb
xlat
lods
sbb
fstpl
fadds
sti
mov
cmp
dec
jl
fistpll
fmull
push
rcll
ljmp
mov
sub
shrl
adc
das
std
fistpl
push
xlat
in
and
push
sbb
jmp
mov
push
cld
cmp
inc
cmpsb
and
in
pop
fdivrs
or
push
cmp
cmpsl
and
jbe
cld
pop
out
out
add
lahf
out
jle
arpl
inc
rcl
pop
cmp
sub
mov
push
and
stos
aad
mov
jle
notb
inc
adc
jae
fdivrl
dec
adc
cmc
sahf
xor
int3
repz
pop
or
mov
push
mov
loope
cmc
in
ret
pop
push
push
mov
jmp
push
sbb
negl
cmpsb
repnz
stos
roll
lcall
out
jp
dec
push
push
mov
out
stc
out
lods
fnstcw
in
lahf
lcall
sub
sbbl
sbb
into
rorb
xchg
aas
cld
pop
mov
mov
adc
cmp
add
push
iret
stos
aas
out
pcmpeqb
je
add
aas
lock
dec
xchg
dec
mov
push
sarl
xchg
xchg
sti
add
lahf
or
rolb
sub
iret
xor
add
int3
stos
adc
mov
rorl
aas
loop
cs
add
push
mov
icebp
cmpsl
jns
mov
pop
nop
mov
popa
and
bound
shr
cmp
sub
scas
in
pusha
lahf
daa
ret
and
in
cmp
inc
cmp
fnstsw
addr16
mov
dec
in
in
lea
cmpsb
jmp
jns
pop
mov
nop
loope
add
ljmp
adc
cltd
xor
add
sti
pop
aam
jl
sarb
inc
xor
mov
push
sbb
inc
in
loope
inc
or
inc
fimuls
scas
fs
mov
mov
inc
sub
push
insb
cmp
fisubrs
sbb
adcb
xchg
je
das
dec
and
int
sub
adcl
lcall
repz
adc
in
shrl
stos
push
jns
pop
xchg
mov
lock
sub
sti
sub
enter
cmpsb
sti
sub
loopne
sbbb
jecxz
jb
cld
push
jl
sbb
jle
lcall
test
call
lods
cld
pop
sbb
mov
dec
movsb
push
cli
xor
faddp
insl
inc
loopne
mov
movsl
add
sub
or
cmp
mov
stos
shrl
loopne
imul
popa
add
mov
into
jne
lret
lret
fstps
or
repnz
test
mov
sub
push
jbe
fs
subl
pop
movsl
rcr
xchg
dec
mov
pop
push
adc
mov
leave
loopne
add
jle
lods
movsl
push
mov
aas
sti
pop
imul
cs
repnz
mov
fwait
mov
xor
nop
or
cwtl
lods
jge
addr16
ss
fs
popa
mov
je
cmp
fldl
mov
lea
fisttpll
mov
ja
and
or
jns
stc
stos
mov
int3
pop
push
loope
rcrl
push
test
lock
pop
push
lret
jecxz
aam
insb
and
push
stc
jl
push
jmp
or
xchg
lds
mov
or
dec
das
iret
in
sub
mull
out
push
xchg
and
xor
mov
sarl
push
sub
loopne
test
ret
mov
aaa
pop
mov
xchg
js
sub
scas
add
mov
jl
sub
shrl
jne
cmpsl
imul
scas
inc
add
inc
cmpsl
cmpsb
fsubrl
pop
dec
pop
pop
jp
cmp
loop
fwait
xchg
add
push
lret
mov
add
jb
or
lahf
lcall
iret
lods
data16
mov
aad
jae
jnp
dec
adcl
sub
push
push
insl
dec
inc
adc
sbb
push
out
lods
jnp
push
push
pusha
mov
mov
imul
push
sete
call
test
pushf
sbbl
dec
mov
sbb
cmp
xchg
adc
leave
xchg
out
cmp
arpl
es
into
add
push
test
jmp
mov
push
stos
mov
in
jne
daa
xchg
out
cmp
stos
fistl
dec
cmp
push
outsl
dec
sub
out
cmpsb
loope
loope
stos
aaa
inc
pop
jge
adc
pop
mov
lods
mov
dec
imul
mov
movsl
adc
dec
jns
mov
xchg
jno
in
jle
xchg
or
icebp
inc
pop
pop
sbb
push
cmpsb
adc
lods
outsl
xor
jle
pop
mov
cmp
aas
dec
adc
jno
xchg
popa
sub
scas
cmp
pop
and
push
sar
gs
ret
sti
push
mov
imul
movb
cmpl
adc
gs
dec
testl
test
fwait
je
ds
push
repnz
jmp
dec
aad
push
adc
test
enter
dec
andnps
fsubl
add
cmp
mov
pop
cmp
or
mov
adc
test
es
adc
and
je
addr16
pop
pop
int
lea
mov
sbb
xchg
inc
scas
fdivrs
xchg
push
faddl
cmp
ljmp
loopne
mov
repnz
pop
repz
add
pop
sbb
jge
inc
fldt
ret
jmp
mov
xchg
mov
adc
ret
mov
lds
jae
scas
dec
sbbb
and
rorl
out
in
cmp
lahf
jns
dec
notl
scas
mov
loop
fidivrl
xchg
ja
ds
or
sbb
clc
js
cwtl
ja
dec
xchg
cmp
outsb
push
repnz
cmp
mov
out
mov
mov
mov
ret
inc
repnz
pop
xchg
dec
cmpl
mov
mov
adc
add
xor
and
rorl
ret
cmp
sub
pop
xchg
dec
cmpl
mov
mov
adc
add
xor
and
xlat
or
cmp
sub
pop
xchg
dec
cmpl
mov
mov
adc
add
xor
and
rorl
ret
cmp
sub
pop
xchg
dec
add
imul
test
cld
push
int3
push
fadd
dec
inc
pop
jne
gs
arpl
cmp
lret
jmp
sti
xchg
mov
push
dec
inc
pop
je
gs
or
cmp
lret
lds
xchg
mov
mov
jne
gs
or
cmp
arpl
fistl
in
hlt
xchg
fxch
mov
cmp
clc
into
icebp
push
aas
push
push
sar
mov
adc
loop
jns,pn
sbb
and
adc
or
mov
and
and
ljmp
mov
adc
pushf
add
adc
push
xlat
aad
xchg
and
sub
push
sub
loopne
xchg
pop
inc
fcoms
mov
or
sbb
movsb
and
mov
adc
stos
jne
movsl
push
scas
ss
mov
test
or
mov
movsl
adc
cmp
fwait
in
xor
lods
fldl
decl
int
int
jecxz
sub
push
pop
mov
movsb
mov
jne
gs
or
cmp
lret
jmp
sti
xchg
mov
shlb
and
pop
sbb
sub
push
addr16
sbb
inc
imul
cmpl
or
pop
add
or
popa
jg
pop
pop
cmp
mov
lock
mov
or
add
push
or
cmp
lret
jmp
sti
xchg
mov
mov
jne
gs
or
cmp
lret
jmp
sti
xchg
mov
mov
clc
fnstenv
cmp
push
cmpsl
inc
push
sar
ret
test
mov
sahf
stos
fldl
stos
nop
dec
in
pop
loopne
ss
cmpsl
lret
jno
addr16
out
inc
sahf
test
pop
xor
mov
push
ret
ss
addr16
dec
jo
cmc
popf
in
andl
test
jg
jecxz
mov
jbe
fwait
push
push
loopne
and
pop
xchg
and
frstor
orb
or
push
in
dec
rclb
add
into
movl
xchg
jl
int3
add
popa
inc
pop
mov
dec
rorb
mov
sti
mov
in
repnz
cwtl
aas
mov
addb
lret
notb
adc
test
nop
mov
and
push
jnp,pn
push
cmp
and
insl
push
or
pop
fs
fst
sar
aad
xchg
test
and
adc
addb
out
lret
sub
fcomip
add
fldcw
xor
xchg
inc
mov
adc
jns
lds
xchg
dec
pop
ja
clc
cmp
stos
pop
jecxz
jmp
out
push
adc
sub
popa
data16
dec
jne
and
add
or
dec
daa
ret
pop
push
pop
std
and
aas
mov
or
inc
adc
xchg
pop
pop
mov
notb
dec
subl
mov
mov
add
repnz
add
mov
jae
pop
push
hlt
or
sti
mov
shrl
ja
sbb
and
jnp
adc
test
fwait
mov
movl
stc
out
adc
xchg
jecxz
inc
xor
mov
jnp
xchg
mov
lret
test
insl
lods
xchg
lods
cs
gs
cld
mov
hlt
in
divl
jl
filds
das
and
jnp
les
lcall
gs
gs
cld
fcoms
push
sub
push
xchg
orl
adc
sbb
sub
inc
sbb
sbbb
shr
cwtl
jge
dec
inc
mov
sub
jne
adc
cmp
test
push
add
jae
das
in
cwtl
lods
pusha
and
aam
mov
or
daa
adc
xor
mov
xchg
push
loope
call
jge
xor
and
inc
out
sub
lcall
lds
outsl
popa
jne
jae
int3
in
pop
jne
push
insb
test
pop
mov
xor
lcall
or
call
sbb
mov
mov
jmp
xchg
mov
sahf
lea
mov
mov
lock
jmp
sub
mov
fs
sub
and
sbb
lcall
or
mov
mov
fs
ja
in
aas
cmp
enter
inc
dec
aaa
cs
shl
mov
divl
lea
pop
lds
cs
adc
pop
mov
add
popa
insl
jbe
and
pop
dec
jnp
pop
lahf
jmp
add
outsb
fadd
or
mov
push
pop
adc
xor
loope
sbb
fcomip
dec
ret
sbb
lret
add
lock
xchg
mov
jge
sbb
popa
insl
cmp
jmp
pusha
lret
or
and
outsl
push
aam
push
fsts
shl
fistpll
mov
les
xchg
inc
mov
mov
jo
movsl
stc
cmp
lods
data16
icebp
aad
int
sub
adc
dec
cmpsl
and
pop
and
xor
jns
push
jle
or
test
iret
repz
jle
push
inc
xchg
or
dec
xor
sbb
add
iret
in
pop
lea
xchg
inc
push
and
push
mov
ret
jae
cwtl
jnp
adc
jno
test
mov
popa
aad
movb
out
mov
lcall
addr16
cld
je
mov
lods
cmpsb
aas
movsb
ss
and
int
scas
jmp
and
aad
movsl
jb
jl
lcall
lds
into
jb
and
mov
cmpsb
xchg
xchg
or
jb
call
and
jmp
add
leave
mov
andb
sub
icebp
jmp
sub
int
add
fmull
jmp
sbb
mov
hlt
fsubs
jl
or
cmpb
cmpb
xor
adcb
ljmp
cwtl
add
inc
xlat
xchg
push
and
jl
add
push
loop
mov
in
mov
in
mov
cli
mov
mov
cltd
stos
mov
out
cwtl
in
mov
mov
sub
xchg
mov
mov
cmp
rcrb
fs
jmp
xchg
imul
xchg
jl
jnp
sub
into
outsb
adc
sbb
jecxz
pop
lret
lahf
mov
jmp
out
push
add
push
lock
lcall
dec
lcall
mov
loop
fidivl
sahf
arpl
sbb
xor
or
rcrl
out
imul
fcmovnb
jl
mov
xchg
jmp
inc
fistpl
add
enter
pop
or
sub
mov
cli
adc
xor
jns
push
xchg
sub
fs
mov
or
jge
jl
push
adc
in
sbb
fstpl
ljmp
mov
mov
addb
mov
or
pop
xchg
inc
daa
sub
jno
sub
sahf
mov
and
jp
or
inc
fcoml
aad
pop
jae
inc
xor
arpl
test
cmp
ss
fucomi
push
test
lret
mov
xchg
iret
adc
cli
aam
aam
in
jg
ja
dec
jnp
pop
pop
or
scas
mov
mov
xchg
dec
push
fstpt
jp
xchg
xchg
or
fs
insb
cld
pop
out
loope
in
sti
fiadds
or
mov
jmp
out
inc
loopne
pop
and
dec
xchg
mov
dec
sbb
adc
cwtl
fdivrl
or
and
sahf
add
xor
dec
fimull
cld
or
repnz
jmp
jo
xlat
not
pop
int3
xor
xor
sbb
stos
mov
dec
adc
xchg
xor
sti
mov
int3
mov
xchg
dec
fistpl
lods
inc
cmc
addr16
adc
nop
les
pop
into
mov
sbb
fwait
sub
or
sti
fsubp
xchg
xchg
add
mov
fmul
je
inc
int3
cld
mov
testb
inc
sub
jbe
scas
pop
pop
mov
in
push
xchg
cmp
shrl
mov
ja
mov
jmp
icebp
push
push
add
jno
dec
negb
cmp
adc
cmp
dec
sbb
movsl
dec
push
cmpl
ljmp
adc
icebp
mov
ret
and
repz
shl
sbb
testl
cmp
fisttpll
lret
pusha
mov
mov
and
dec
push
cmpsl
sbb
push
or
outsb
xchg
cmp
adc
xchg
iret
xor
push
rep
test
mov
pop
lods
push
adc
xchg
das
pop
cwtl
jns
sbb
nop
xchg
push
mov
and
jbe
jle
clc
enter
loop
jo
adc
shlb
inc
dec
rolb
cmp
jmp
inc
add
or
add
adc
out
jbe
push
mov
xor
popa
les
jns
mov
fstps
in
cli
jge
fimuls
xorl
adc
jp
pop
out
xchg
movsl
lahf
loope
mov
sarb
in
sbb
divl
inc
outsb
and
add
out
or
xchg
mov
fists
cld
test
xchg
outsl
cmp
or
pushf
adc
dec
pop
aad
push
imul
bound
mov
xchg
jno
popa
push
sbb
mov
bound
sbb
adc
or
xor
xchg
in
test
jl
iret
jnp
xchg
ret
jbe
jbe
cmpsb
cmp
jae
and
in
sub
cmp
xchg
jne
mov
repnz
mov
pop
ret
mov
xchg
outsb
movsl
pop
popf
orl
jo
ja
cld
ja
lods
push
sub
pop
cmc
adc
xchg
pop
cli
in
cwtl
mov
jge
subl
fs
mov
hlt
jmp
ret
mov
pop
repnz
nopl
xor
xor
scas
loope
pop
mov
mov
inc
jp
test
jecxz
mov
stos
in
xchg
rcl
arpl
je
mov
push
mov
out
inc
cmp
pop
jne
mov
mov
pop
lret
ffreep
outsl
push
sbbl
xchg
push
roll
rolb
and
mov
mov
out
dec
add
mov
jp
cwtl
frstor
pop
cwtl
jns
cwtl
daa
iret
and
lret
add
lret
das
ror
sahf
daa
sub
jns
cltd
out
fnstenv
nop
addr16
lahf
sub
or
insb
mov
or
popf
inc
insb
pop
sbb
mov
or
stos
dec
push
push
mov
sub
fstps
inc
sbb
adc
and
leave
out
cli
cld
stos
inc
out
mov
stos
and
pop
pop
std
adc
cmpsb
mov
dec
test
jp
mov
mov
lock
or
cmpsb
pop
mov
cld
cmp
mov
mov
cmp
cmpl
fisttps
inc
cli
lock
cltd
movsl
or
jge
dec
in
in
pop
mov
xor
out
cwtl
clc
cltd
sub
pusha
push
xchg
cmp
test
mov
iret
shlb
jnp
ds
add
into
mov
or
into
push
mov
lock
lcall
adc
push
sbb
inc
adc
jl
add
imul
jmp
mov
in
popf
jns
leave
mov
int3
sarb
popf
push
xor
push
xchg
pop
sub
inc
xchg
sbb
jl
push
sbb
lods
mov
insl
cmpsb
fidivrs
lahf
fs
mov
lret
aas
mov
subb
inc
push
and
push
outsl
insl
shll
jecxz
push
lret
int
inc
adc
add
dec
mov
mov
cli
dec
cmovle
sarl
mov
fstpt
std
pop
js
inc
mov
sbb
mov
add
cmp
daa
stos
mov
gs
push
cmpsl
js
pop
jb
jae
imul
and
sbb
loop
pop
test
sub
bound
xchg
xor
add
sub
decb
add
dec
int3
add
add
mov
data16
out
js
repz
loope
or
pop
sbb
sub
and
or
mov
and
jge
rol
cmpsb
xchg
mov
jne
js
sub
jle
icebp
inc
inc
pop
mov
aaa
hlt
or
pushw
xchg
divl
inc
pop
loopne
loop
int3
dec
popf
push
mov
insl
mov
push
shll
loop
pop
stos
or
sti
gs
mov
add
dec
sbb
int
outsb
inc
arpl
or
push
shl
shl
pop
jp
or
int
loop
or
and
addb
mov
sahf
test
xlat
sbb
cmpb
pop
sub
sbb
out
insl
jl
int3
fdivrl
pop
in
mov
adc
rorl
arpl
movsl
mov
mov
pop
push
dec
mov
movsb
jmp
sub
cmp
xchg
cli
scas
ljmp
xchg
ljmp
xchg
cltd
jg
sbb
arpl
outsl
ja
jae
lahf
cmp
pop
xchg
add
in
adc
cmp
sbb
xor
test
nop
pop
sub
sub
fadds
gs
jg
lods
sbb
je
xchg
pop
jge
ret
mov
jo
in
ret
xor
sbb
xchg
jl
scas
lods
cmpsb
pusha
daa
lahf
scas
cmp
xchg
in
pop
sbbb
test
mov
mov
lock
or
inc
rolb
mov
shr
repz
push
mov
pop
jp
dec
movsb
sub
or
sub
fs
insl
mov
mov
sbb
xlat
lahf
add
dec
lds
lret
dec
jns
scas
rol
jle
xor
add
outsl
pop
jo
lcall
mov
xchg
ror
xlat
mov
mov
push
push
xor
jno
xor
hlt
cmpsb
push
push
xchg
mov
ror
inc
test
sub
sub
faddl
loopne
cli
out
test
xor
xchg
scas
xchg
jnp
adc
xor
outsl
mov
xchg
test
les
cmpsl
cmpsb
xchg
xor
mov
add
out
stos
loopne
je
xor
xor
mov
test
dec
mov
and
add
sti
fdivrl
pop
push
lods
decl
int
ljmp
mov
pop
js
adc
mov
sub
jae
test
cmc
fs
or
imul
bnd
das
stos
inc
cli
das
das
xchg
out
cs
shrl
jns,pn
pop
cld
xchg
jb
outsl
mov
inc
push
sub
inc
push
adc
adc
cmpl
xchg
loop
mov
xchg
enter
data16
in
xchg
ret
bound
cmp
int3
and
lahf
sbb
les
adc
fldt
mov
fwait
in
mov
jns
mov
and
stos
cmp
rcrl
sbb
jl
sub
cli
mov
xor
clc
ss
jno
cmc
int
lock
leave
lahf
adc
out
int
clc
add
daa
test
push
sub
push
shl
scas
adc
decb
or
and
xlat
into
mov
cmpsb
mov
inc
inc
mov
aam
mov
adc
or
lds
shll
ds
push
jecxz
jmp
repz
and
pop
fsubr
xor
mov
xor
mov
imulb
and
mulb
and
cltd
pop
inc
sub
push
sbb
push
jmp
pop
divb
xlat
mov
pop
or
das
addr16
ja
out
sarl
add
cmpsl
out
idiv
or
sbb
push
dec
mov
inc
inc
xchg
push
rolb
das
loop
adc
adc
xorl
dec
lods
movsb
sahf
outsl
push
xor
mov
jecxz,pt
ret
jmp
xor
dec
sub
sbb
and
push
lods
mov
ss
or
xchg
cmc
add
aad
int3
repz
adc
dec
outsb
fwait
lahf
pop
stos
mov
xor
rcrb
push
dec
lods
or
xor
aam
scas
cmp
sbb
mov
push
pop
pusha
xorl
inc
add
cmp
and
sub
lock
lods
es
dec
fldenv
les
test
mov
push
lds
repnz
mov
xor
add
icebp
rcll
outsl
sahf
int
lock
stc
ficoms
cmp
mov
or
adc
pushf
das
add
stos
repnz
nop
clc
jnp
mov
add
jp
mov
int3
push
mov
sub
pop
or
fsts
and
pop
and
mov
pop
sbb
fisttpl
add
cli
fwait
out
mov
shrb
dec
mov
jo
xor
and
arpl
mov
ljmp
dec
push
push
mov
dec
subl
sbb
dec
clc
pop
mov
popf
add
adc
ja
cwtl
je
std
jnp
test
dec
and
adc
subb
ret
mov
jp
jns
mov
shrb
cmp
sbb
out
cltd
mov
push
pop
loop
setp
imul
loopne
jns
int3
cmp
jb
je
lods
mov
xchg
loope
cli
sbb
sarl
movsb
out
add
mov
jmp
mov
cmc
mov
daa
mov
lock
mov
or
fchs
aas
pop
mov
in
popf
cmp
stos
inc
stos
cltd
in
loop
and
aaa
inc
pop
sbb
insb
cmp
dec
push
cld
fstps
jg
stc
mov
mov
ficomps
cmp
inc
scas
daa
or
mov
xchg
or
jns
pop
cwtl
fisubs
cld
mov
fcom
add
decb
shl
int3
movsl
add
dec
cmp
push
xor
cld
mov
out
cmp
adc
shll
out
and
jl
push
ret
fimull
xchg
sbbb
inc
jmp
movsb
and
or
inc
cmpsl
push
imul
push
cmp
inc
jnp
sbb
scas
ficoml
inc
jnp
lret
mov
pop
fdiv
jbe
jle
movsl
mov
in
call
shlb
shlb
mov
imul
jle
inc
imul
pusha
push
data16
inc
mov
sub
outsb
es
jmp
sbb
cmp
and
mov
sub
and
call
dec
jecxz
dec
out
cmpb
fstpt
dec
mov
pop
adc
je
mov
add
push
inc
repz
cmpsb
cmp
jo
cmp
sar
push
lock
mov
fidivrs
mov
inc
lds
xor
or
add
enter
cwtl
sub
dec
inc
stos
cli
or
mov
mov
inc
jne
subb
add
adc
loopne
and
mov
cmp
insb
dec
sub
jno
shlb
cmpl
ficoml
movups
push
sahf
rcrl
adc
push
lock
pop
sbb
inc
loop
scas
push
clc
dec
add
cmp
mov
dec
iret
int
loopne
lods
sbb
mov
mov
mov
ret
lods
xchg
popa
push
loopne
in
clc
cltd
mov
pop
cld
cli
inc
rol
repnz
int
es
insb
push
sbb
and
rcll
mov
jbe
sub
test
fdivrl
shr
mov
mov
xor
dec
or
sti
in
inc
rcl
nop
fidivrl
push
pop
scas
push
leave
loop
sub
shlb
pop
pop
xchg
ja
lret
test
rcr
adc
add
lock
mov
mov
mov
inc
adc
adc
cwtl
mov
cmp
jecxz
jo
out
js
mov
movsb
pop
sub
push
adc
pop
sahf
faddp
lock
mov
movsl
add
add
packsswb
adc
and
or
std
or
push
sub
adc
push
dec
xor
sbb
stc
and
mov
xlat
inc
adcl
jae
cmc
inc
add
mov
bound
out
test
dec
push
push
lcall
pop
mov
inc
jnp
adcl
sarl
sbb
pop
dec
cmc
fisubl
sub
pop
jge
out
or
push
inc
dec
pop
or
inc
clc
dec
je
push
stos
pop
rcrl
movsl
movsb
std
movsl
fidivrl
xcrypt-ecb
repz
call
dec
and
les
push
fadds
pop
pop
fdivrs
cmp
sti
out
cmp
xor
fwait
push
subb
jo
sub
orb
jb
jmp
lahf
pop
fnstenv
jle
sbb
stos
push
adc
push
jbe
mov
arpl
and
stos
popf
mov
xor
push
mov
jle
das
or
mov
dec
or
mov
sub
icebp
pop
fisubs
ret
loop
xchg
xchg
mov
pop
les
int3
lock
mov
ja
out
sbb
mov
inc
or
pop
add
popf
in
and
mov
test
xlat
data16
test
jle
jno
lds
daa
xchg
lds
add
outsb
mov
ret
sahf
or
sti
sub
pop
xor
divb
push
addr16
adcb
push
push
dec
lods
or
push
mov
adc
test
or
fdivrs
loopne
cmpsb
mov
or
or
fstl
insb
xchg
orb
xchg
adc
test
sbbl
insl
leave
imul
out
lods
repz
pop
movsl
shl
and
inc
outsl
push
lret
mov
add
mov
or
in
mulb
jbe
inc
loop
sbbb
adc
push
mov
add
mov
and
jnp
fwait
cmp
and
lods
out
pusha
inc
fisttpll
ja
push
sbb
es
negl
fildll
lret
mov
lds
xor
sbb
pusha
mov
ret
jnp
push
add
aam
cmpb
pop
cmp
jg
pop
cld
and
icebp
fs
jbe
pop
into
imul
or
cmp
lret
jmp
sti
xchg
mov
mov
jne
gs
or
cmp
lret
jmp
sti
xchg
mov
mov
jne
gs
or
cmp
dec
jmp
sti
xchg
mov
mov
je
gs
or
cmp
lret
lds
jmp
mov
add
inc
fbstp
out
xchg
mulb
es
outsl
push
pop
jbe
data16
push
das
inc
fbstp
out
xchg
scas
mov
jg
outsl
push
pop
sbb
data16
push
das
inc
fbstp
out
xchg
scas
pop
ss
add
pop
and
cmp
stos
lds
xchg
pop
and
xchg
aad
push
jne
push
jbe
xor
xor
add
adc
lahf
testb
jecxz
ret
add
scas
imul
stos
xchg
cld
cmpsb
or
pop
data16
lock
loope
pop
stos
outsl
dec
ljmp
shrl
fcomip
call
shl
push
jo
out
scas
cmp
xchg
nop
out
jbe
cwtl
pop
movsb
inc
mov
dec
idivb
adc
pusha
jle
outsl
inc
mov
inc
push
jmp
data16
jecxz
aaa
sub
xchg
mov
add
sbb
mov
jne
out
add
xor
sbb
iret
cmpsb
call
out
scas
pop
ss
es
outsl
push
pop
jbe
data16
push
das
das
mov
xchg
test
rclb
sub
or
sub
xor
pop
or
repz
xchg
lcall
sub
inc
outsl
arpl
sbb
push
add
mov
in
jecxz
fmuls
pop
ss
es
outsl
push
pop
jbe
data16
push
das
inc
fbstp
out
xchg
scas
pop
ss
es
outsl
push
pop
jbe
data16
push
das
inc
fbstp
nop
inc
dec
cmpb
pop
xor
push
add
test
in
in
sahf
daa
ljmp
out
int
mov
int3
pop
ja
pop
outsl
mov
sahf
xchg
jb
cmp
cmp
mov
adc
out
ja
add
inc
push
mov
ficoms
lcall
jmp
cmpsb
mov
ficomps
mov
daa
test
mov
lret
loope
sti
rclb
and
mov
mov
push
subl
jno
xchg
cmp
sti
icebp
aaa
mov
sbb
adc
test
and
jnp
repnz
pop
xchg
ret
clc
mov
pushf
lods
cli
aaa
jno
adc
inc
mov
or
push
lods
loop
sub
cmp
pop
cwtl
jp
cmp
cmpsl
lret
xchg
addb
les
push
pop
xor
cmpsb
shll
and
xchg
shrb
movsb
push
xor
fs
dec
popa
fldl
xchg
jp
repnz
clc
jns
lds
inc
mov
shll
in
push
insb
mov
fildll
dec
js
push
jbe
or
inc
ret
fs
test
adc
nop
pop
dec
mov
jbe
sti
mov
jns
xchg
dec
cmp
jno
das
cmpb
or
loopne
data16
insl
pushf
adc
icebp
rsqrtps
push
push
mov
sub
divps
mov
dec
test
fsts
pusha
inc
fistpll
push
and
stc
push
das
lods
adc
aad
push
push
mov
mov
mov
je,pt
scas
add
sub
and
call
fldcw
mov
inc
cmpsb
mov
push
cltd
enter
shlb
loopne
rcrl
mov
push
repnz
lods
mov
bound
test
out
ror
lds
out
cmc
pop
add
xchg
add
mov
sub
ljmp
aad
pop
insb
les
mov
bound
lcall
xchg
push
out
mov
push
mov
rolb
int
adc
stos
jae
in
fiadds
pop
fstl
and
or
mov
test
popf
mov
xor
xchg
dec
xchg
pop
push
adc
std
jnp
pushl
rcl
push
jbe
or
fidivl
fwait
inc
les
std
add
test
push
aad
movsl
mov
mov
push
imul
mulb
test
xor
mov
cmpb
aad
cmp
mov
mov
jmp
ss
inc
push
inc
push
lcall
add
mov
sahf
sub
and
sbb
outsb
dec
ret
mov
lcall
rolb
sbb
in
out
fucomip
inc
and
mov
sub
and
xor
and
in
push
dec
xchg
clc
insb
mov
xchg
pop
lock
cmp
jle
popa
push
push
scas
and
enter
insb
or
xor
lahf
cmp
adc
xchg
dec
dec
fbstp
in
ljmp
shl
out
cmp
mov
cmpsb
xor
xor
xchg
lods
mov
jge
add
pop
sub
fsubrl
pop
mov
and
cmp
rclb
and
cs
mov
andnps
xor
and
fisubrl
repnz
mov
frstor
mov
and
push
cmc
sub
popf
cmp
ljmp
cmp
cltd
jmp
jecxz
scas
lahf
mov
push
cmp
mov
popa
fisubs
jb
fidivs
add
vphadduwd
and
mov
imul
push
imulb
fcmove
and
lock
dec
xchg
push
adc
pop
popa
enter
shl
mov
adc
sbb
pop
sub
lods
sbb
xchg
jae
shrb
ficoms
and
jl
std
xchg
rclb
in
std
push
nop
sub
test
xchg
mull
pop
adc
jno
pop
fwait
rcrl
lds
xchg
adc
popa
push
sub
sbb
sbb
jns
jns
push
pop
push
loop
mov
in
loope
jo
call
rcrl
jmp
cltd
fwait
mov
fisubs
xorl
insb
dec
ret
add
adc
add
mov
cwtl
movsb
test
lret
mov
xor
pop
popf
cmpsb
fisubrs
push
aad
sub
ret
outsl
dec
cmp
repnz
enter
cmc
inc
xor
lds
sbb
dec
or
inc
std
dec
fistpl
ja
aas
cmp
jl
dec
jne
sbb
scas
add
stos
pop
mov
in
push
or
int
push
inc
mov
lea
leave
cmp
outsl
inc
fucomi
test
pusha
out
and
outsl
pop
sbb
ds
mov
mov
jo
adc
movsb
stos
push
loope
pop
mov
mov
jmp
add
fisubrs
jecxz
daa
mov
addb
jl
xchg
es
int
add
inc
sbb
add
mov
and
jl
dec
data16
push
and
jns
ljmp
jp
inc
loope
mov
inc
stc
int
or
push
shll
aas
cmpsl
add
push
jnp
mov
adc
repnz
push
push
sbb
into
mov
jle
dec
call
int
push
imul
or
dec
fwait
ja
movq
cmc
lock
mov
xor
dec
inc
cs
jae
push
scas
loope
sbb
pop
in
dec
jmp
or
in
adc
sub
lods
repnz
inc
add
push
lock
idivl
or
add
push
cwtl
push
and
fbstp
adc
sub
xchg
fcmove
mov
stc
popf
pushf
push
aad
jno
js
mov
mov
jmp
inc
fsts
paddd
dec
cmp
into
adc
in
push
and
xchg
stos
mov
outsb
out
add
je
jns
mov
aam
mov
cli
push
mov
or
sbb
movnti
leave
add
cmp
sub
inc
rorl
cmp
insl
lods
xor
das
pusha
ja
inc
fcom
adc
or
and
lret
pop
divl
pop
fmull
cs
pop
sbb
lods
pop
pop
negl
nop
andl
fs
cltd
jb
fists
cwtl
or
mov
insb
pushf
push
push
mov
push
or
fnstcw
stos
adc
clc
cli
mov
xor
and
jmp
outsb
dec
inc
sahf
pop
loope
aas
rorl
inc
sbb
fisubrl
das
bound
mov
pop
push
sbb
sbb
cltd
iret
jmp
dec
daa
in
data16
cmpb
imul
stc
iret
arpl
stos
fs
and
dec
ja
js
adc
add
icebp
cwtl
lea
inc
xchg
cmp
cmpsl
lods
mov
loop
mov
pop
pop
pusha
adc
add
mov
lahf
movsl
jge
push
sbb
stos
test
cmp
test
jbe
ss
mov
add
loopne
lahf
popf
in
or
and
aad
mov
mov
adc
push
daa
xor
mov
xchg
out
jne
mov
cmp
fwait
in
mov
gs
repnz
out
lcall
jge
test
sbb
xchg
jl
dec
xor
repz
lods
fstpl
xor
jbe
jmp
mov
aaa
cmpb
jecxz
cmp
aaa
sbb
inc
inc
insb
pop
jne
dec
sahf
sub
aam
rcl
loop
pushf
xchg
xchg
mov
out
aad
pushf
mov
scas
sub
or
stos
mov
cld
setg
fwait
and
mov
xchg
push
pop
int3
mov
insb
insb
inc
pop
dec
pop
rcrb
push
mov
dec
cmp
in
jnp
push
lahf
mov
mov
int3
popa
mov
jmp
push
push
push
in
push
adc
xor
jl
in
mov
and
sbb
lds
jp
movsb
push
lods
jbe
sbb
cwtl
loopne
and
insb
pusha
inc
sbb
pusha
adc
ljmp
fwait
movsb
pop
fstpt
xor
push
and
jl
and
jp
call
cmpsl
push
loop
sbb
rclb
push
popf
push
push
pop
add
fidivrs
xor
je
pop
push
jne
loope
cmp
lret
cmpsl
dec
mov
mov
adc
mov
scas
fbstp
push
ret
pop
xor
push
inc
lea
mov
mov
sbb
adc
pop
ret
sub
arpl
xchg
mov
mov
hlt
and
push
cmp
push
into
xchg
xchg
mov
adc
mov
push
inc
xor
stos
dec
push
scas
sbb
pop
notb
pusha
dec
out
jae
cmp
inc
sub
pop
or
int3
movsb
sbb
mov
pusha
jo
cmpsb
arpl
fmuls
mov
andl
inc
cmp
fistl
movsl
das
nop
ret
in
clc
mov
aaa
subl
and
pop
push
add
sub
inc
sub
es
add
xchg
and
cmp
mov
mov
sub
scas
iret
and
lods
aaa
push
fcmovnu
lods
data16
xor
dec
xlat
je
mov
xor
inc
jnp
jmp
cmc
mov
out
ret
shll
cli
out
out
cmp
hlt
sub
mov
sbb
sub
jnp
ljmp
fwait
or
iret
call
jmp
lds
and
mov
ret
sbb
add
sbb
fisubs
loope
std
inc
test
sub
jmp
and
cmpsb
xchg
xchg
cmp
pop
mov
mov
idivb
in
xchg
imul
out
repz
and
cmp
jne
mov
cmp
jnp
dec
xchg
adc
adc
mov
jo
ja
add
xchg
lret
mov
pushf
cmp
int3
out
dec
out
enter
cmp
adc
xor
js
sub
rorb
jb
inc
and
or
rcrb
fcmove
stos
int3
iret
ljmp
add
cli
fimull
nop
mov
les
inc
popa
fnstcw
inc
sbb
adc
push
sbb
cmp
sahf
repnz
into
jae
xor
test
movsb
sarb
out
int3
hlt
cmc
fidivrs
aam
test
pusha
cmp
jae
or
or
mov
imul
gs
sti
or
cmp
dec
cld
jl
fwait
sbb
jl
cmc
inc
inc
rcl
mov
out
fsubr
nop
cmp
xchg
rol
fwait
movsl
inc
arpl
mov
loopne
fwait
pop
sahf
inc
xchg
mov
mov
sub
cmpb
lcall
test
scas
xchg
cli
jp
fdivl
aaa
pop
mov
pop
cmp
out
push
push
ret
sahf
mov
mov
xchg
test
push
out
pop
lret
or
cmpsl
push
ret
jno
mov
mov
nop
inc
fdivrs
ret
roll
fcomps
pop
xlat
in
test
lds
call
dec
cmp
mov
mov
inc
ds
or
jmp
jp
adc
pop
xlat
negb
dec
mov
ret
negb
cmpb
pop
and
xchg
jl
fsts
stos
and
loopne
loop
xchg
mov
dec
adc
mov
lods
outsb
mov
rcll
and
cmp
xchg
mov
xchg
inc
filds
add
adc
sti
and
xor
and
nop
test
notb
mov
popf
sarl
mov
jne
or
fdivrs
cmp
or
loope
inc
hlt
loop
into
jl
into
adc
dec
xor
mov
aas
lcall
repnz
mov
push
lds
adc
dec
jb
adc
mov
sbb
jns
aaa
or
nop
sbb
rcl
push
dec
sahf
fiaddl
fs
sub
or
push
mov
lcall
add
stos
mov
jne
cwtl
pop
cmp
lcall
lods
sarb
cmp
mov
stc
cmp
push
mov
hlt
fbld
cli
pop
daa
pop
lcall
outsb
adc
adc
scas
dec
dec
leave
int3
das
outsl
cmp
int
push
inc
subl
int
negb
xor
pop
push
nop
cmp
cmp
mov
test
aaa
push
add
add
inc
mov
jg
mov
repnz
add
push
jb
stos
pop
dec
scas
loope
or
cmp
dec
push
cmp
mov
popf
in
jle
push
jns
les
repnz
clc
mov
or
dec
rcr
mov
fldcw
pop
in
mov
lock
imul
daa
dec
jno
inc
shlb
pushf
notl
jae
dec
jl
and
fdivrs
ret
add
sub
rorl
push
and
icebp
popa
jmp
roll
popa
cli
mov
xchg
adc
xchg
pushf
pop
jp
lods
push
push
lcall
push
lods
mov
cmp
lods
les
xchg
sarb
xchg
pop
jae
fdivp
add
fdiv
cmpsl
je
test
and
les
pop
sbb
sbb
mov
and
flds
data16
setae
rclb
in
pusha
or
jge
mov
or
in
std
or
fistps
cmc
push
dec
xor
sbb
lret
clc
aad
xchg
jge
mov
ljmp
das
or
sbb
jnp
lods
adc
jl
es
xchg
pusha
shlb
adc
jle
repnz
fidivs
push
call
sbb
rolb
fistpl
push
pop
cwtl
lahf
aad
xchg
into
add
stos
mov
mov
loope
mov
pop
xchg
cmc
sub
imul
test
push
pop
xor
or
pusha
push
stos
mov
int3
lods
and
cs
pop
nop
mov
mov
mov
xchg
sbb
push
sahf
in
sub
lods
add
push
and
das
arpl
push
nop
addl
sub
lock
je
cli
cmpsl
in
xchg
test
jp
fs
mov
pop
call
and
inc
push
pushf
repnz
add
ljmp
out
rolb
inc
sbb
push
dec
push
lock
out
lret
or
pop
or
mov
jnp
jg
ja
push
idivl
aaa
mov
mov
imul
cmpsl
aad
sbb
in
pop
mov
xchg
pusha
cmp
or
mov
xor
insb
cmpb
lahf
seto
outsb
sub
test
mov
xchg
jno
gs
mov
ss
movsb
cmp
insl
cmc
xchg
inc
scas
and
cld
jnp
xchg
icebp
jge
cmpl
cmpsw
addr16
cmp
add
push
repnz
dec
cmp
xchg
jp
mov
in
call
cwtl
xor
adc
jmp
and
and
cmc
pop
jnp
pop
aad
sub
icebp
scas
adc
cmp
imul
push
sub
jbe
adc
fimuls
mov
negl
mov
pop
jp
cld
incl
fs
fnstcw
push
add
dec
pop
fisubrs
push
sub
dec
ja
sarl
test
aad
in
call
xchg
aas
sbb
vcvtsi2ss
dec
jmp
dec
lods
jl
loope
or
mov
mov
pop
add
xchg
xor
daa
xor
inc
cmp
pop
test
lds
mov
pop
gs
mov
dec
insb
add
xor
and
push
fs
or
pop
mov
cmp
stos
es
push
push
shlb
xchg
iret
bound
xor
cli
mov
and
movsb
hlt
int
add
xchg
push
xlat
dec
ficomps
out
aas
cmp
inc
lcall
pop
dec
mov
rolb
test
nop
and
shl
lods
jge
mov
mov
cltd
cli
xchg
jp
cs
rcrb
aaa
mov
xlat
incl
iret
vmwrite
and
popa
fs
cmpsl
cltd
popf
sti
fs
mov
dec
test
mov
shlb
repnz
arpl
add
pop
adc
data16
shll
mov
lock
pushf
adc
aas
xchg
mov
in
sub
scas
cltd
sti
sbb
adc
inc
dec
add
scas
mov
shlb
xchg
cmp
scas
in
jbe
cmpsl
add
fcoms
pop
xor
or
stos
xor
fwait
add
imul
inc
adc
test
std
inc
mov
xor
cmpsl
lock
js
cmp
std
sub
sbb
sub
call
loopne
fs
or
push
fs
jbe
push
xchg
and
std
jbe
xchg
imul
mull
lds
mov
jecxz
dec
andl
pop
xchg
cmp
aaa
jb
add
mov
insl
shlb
cwtl
fldt
mov
pop
fdivl
add
scas
jmp
ljmp
mov
jecxz
xchg
xchg
cmp
shr
inc
mov
or
jno
gs
ret
shlb
jbe
adc
cmp
mov
mov
loope
push
xchg
into
inc
inc
or
negl
adc
in
jns
adc
pusha
xchg
xor
call
or
test
aad
xor
ljmp
mov
jmp
jno
inc
jl
push
loopne
add
mov
call
sti
mov
mov
and
aam
pusha
push
ljmp
xlat
pop
popfw
leave
lods
lret
loope
jne
aaa
repz
call
jnp
add
shll
cwtl
push
ljmp
outsb
xor
mov
in
sub
std
xor
out
popa
int
addr16
push
xchg
fwait
lcall
adc
xorl
xchg
mov
sub
ret
push
pop
push
xor
sub
gs
jno
lcall
mov
pop
mov
pop
paddsw
adc
lea
outsl
pop
xor
dec
xor
imul
arpl
sbb
adc
xchg
shrl
mov
cwtl
cld
add
mov
jns
or
cmp
pop
mov
loope
mov
bound
popf
lea
lret
pushf
sahf
or
jmp
orb
sub
sub
insb
jae
dec
xchg
sub
sub
mov
pop
gs
push
mov
adc
dec
test
lods
or
mov
dec
inc
jmp
pop
xor
in
or
dec
mov
jg
fmulp
xor
or
pop
cmpsb
mov
cli
cmp
jne
jb
repz
pop
xor
inc
mov
sub
mov
jnp
push
addr16
scas
mov
jns
addr16
ror
push
scas
shrb
jmp
ljmp
sar
mov
arpl
repz
movsb
and
mov
xchg
lcall
xchg
mov
rorb
add
inc
mov
cmpsl
insb
aas
sub
fisttpll
les
test
mov
cwtl
out
std
mov
in
pop
sub
pop
xor
jecxz
testl
add
xchg
int
xor
call
inc
loop
fidivrs
jb
adc
imulb
ficoml
cwtl
in
in
jo
jne
lcall
fld
mov
xor
mov
mov
enter
sub
mov
inc
lcall
ret
shlb
mov
jnp
cltd
insl
xor
dec
xchg
fistps
dec
gs
scas
mov
pop
jae
push
insb
test
lds
mov
jno
mov
jg
std
and
enter
sahf
lcall
sbb
imul
jb
fadds
inc
cli
popf
lock
jbe
fisubs
jg
pop
xor
adc
cmp
js
xor
ja
ret
mov
iret
pop
adc
cmpsb
lea
sbb
dec
xor
cmp
daa
and
shl
mov
cmp
fstpt
aam
repz
ds
jmp
and
or
cmp
clc
mov
sub
icebp
mov
sarl
in
mull
jno
or
xor
inc
repnz
loope
pop
mov
push
ffree
rcr
and
dec
loopne
popa
mov
andb
lea
lahf
ret
outsb
cmpsl
push
push
cmp
cmpsb
shll
mov
xor
sbb
ss
cmpsb
rclb
out
scas
pop
ss
es
outsl
push
pop
jbe
data16
push
das
inc
fbstp
out
xchg
scas
pop
ss
es
outsl
push
pop
jbe
data16
push
das
inc
fbstp
out
xchg
scas
pop
ss
es
outsb
push
pop
jbe
ds
das
inc
fbstp
out
xchg
das
mov
push
outsl
jno
incb
mov
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
xor
das
mov
shll
sub
jnp
imul
loope
loope
adc
and
push
jmp
popa
cmp
or
pop
icebp
dec
loope
or
cmp
dec
jmp
fldt
jnp
jb
mov
jnp
add
cmpsl
and
push
xor
xor
xchg
mov
idivl
cmp
std
or
and
mov
jmp
and
adc
mov
or
lods
jmp
mov
inc
jo
sahf
inc
push
add
jg
sbb
push
sarl
dec
loope
inc
stos
add
xor
sbbl
scas
jle
push
popa
pop
test
jle
inc
sub
jnp
je
mov
and
sbbl
icebp
dec
push
inc
push
push
loope
xor
ljmp
lret
in
insb
nop
fistl
sub
lret
icebp
ja
stos
push
fwait
and
inc
fldt
js
mov
cltd
sbb
imul
icebp
dec
test
je
add
xor
and
pop
cltd
das
mov
clc
dec
stc
sbb
jae
jp
imul
imul
and
and
or
sbb
or
jp
add
test
push
stos
fs
push
out
mov
jmp
popa
cmp
or
pop
icebp
dec
loope
adc
and
push
jmp
popa
cmp
or
pop
icebp
dec
loope
adc
xor
int
mov
ljmp
sbb
mov
inc
and
and
add
cmc
add
arpl
ffreep
jo
mov
adc
dec
xor
xchg
test
inc
movsb
jns
or
sbb
push
adcb
dec
dec
sahf
lock
lods
je
mov
js
test
adc
outsb
pop
cwtl
fidivrl
mov
gs
cmp
loopne
test
mov
cmp
loopne
out
cmpsl
mov
push
pop
inc
or
cmp
popa
movb
data16
inc
imul
mov
shrl
icebp
div
mov
push
jae
cli
inc
mov
or
dec
out
adc
cmc
jmp
arpl
cld
mov
add
fisttpll
xchg
pop
jmp
add
cld
movsl
jge
std
mov
dec
outsb
add
fisubrs
dec
scas
and
dec
add
outsb
mov
mov
ror
xchg
cmpsl
sub
addr16
mov
push
jp
xor
or
pop
imul
and
add
fs
sahf
fistpll
xor
xor
stos
or
inc
mov
es
xchg
les
xor
jge
pop
loope
push
inc
pop
push
jmp
xchg
mov
fcmovne
jp
adc
cmpsb
pop
aad
jl
mov
fs
pop
sub
lea
and
add
std
jnp
fiadds
mov
fimull
jno
and
xchg
sub
xchg
test
aaa
jmp
mov
out
pop
pop
jo
push
xchg
mov
cmp
jae
adc
adc
in
ret
jmp
icebp
xchg
inc
pop
mov
push
push
jnp
mov
push
repz
sub
std
mov
sub
test
test
in
and
adc
test
jg
psubd
mov
add
shl
push
stos
sub
jae
mov
inc
fmull
stc
and
nop
mov
popf
mov
mov
lcall
popa
cltd
and
insl
pop
movsb
in
inc
loopne
popl
loopne
dec
ficompl
sub
or
push
ds
dec
add
mov
sub
dec
addl
inc
in
bound
pop
cmpsl
adc
mov
insl
mov
push
shlb
lods
pusha
xor
adcl
mov
dec
jb
js
out
sub
jp
mov
rclb
out
xlat
pop
adc
inc
scas
das
add
jecxz
inc
add
push
outsl
sbbl
imul
outsl
std
dec
jecxz
popf
adc
in
pop
jmp
or
lock
and
int
inc
push
cmp
adc
daa
fmul
adc
jne
test
pop
mov
adc
cmp
movsl
pusha
arpl
xchg
push
sub
rep
jmp
xchg
sub
bswap
out
test
push
prefetch
ss
mov
movsl
lock
addr16
fnstenv
cmp
jb
push
ja
mov
jg
je
push
mov
adc
lret
int3
sbb
adc
inc
loope
cli
aaa
adc
and
rolb
repnz
mov
lea
inc
in
sbb
sti
sbb
pop
pop
ret
fsts
adc
stos
nop
adc
lcall
popa
lret
cmp
mov
cmc
sub
push
fimuls
loope
dec
inc
das
in
aad
push
aas
cmp
out
cmc
push
mov
adc
mov
ret
sbbl
icebp
iret
pop
imul
fwait
daa
jne
jb
add
push
xor
xor
mov
jbe
adc
push
push
jl
fcoms
test
roll
push
xor
sbb
mov
add
pushf
stc
scas
dec
pminsw
push
fnsave
sbbl
sbb
or
sbb
mov
out
lods
test
cmp
imul
cmp
fucom
loop
pop
and
pop
jns
lea
pushf
or
dec
cmpsl
cld
xor
mov
aas
out
xor
orb
popl
and
in
xlat
inc
push
pop
pop
mov
xor
movsl
and
fistpl
push
fcoml
push
les
aas
lret
pop
xchg
dec
in
inc
in
fisttpll
push
xchg
xchg
imul
aad
fists
mov
jns
stc
jb
jb
les
adc
into
fbstp
test
outsl
jbe
stc
sbb
popl
push
xchg
ds
xchg
mov
inc
mov
lcall
scas
xchg
adc
push
xchg
lahf
cmc
mov
sar
ret
push
test
mov
stc
sbb
or
cwtl
xchg
jle
cmc
push
sub
fisttpl
or
out
cli
pop
leave
out
mov
lret
roll
jp
clc
lahf
ljmp
movsl
int3
sbb
or
and
adc
mov
mov
sub
dec
jnp
int3
lea
clc
adc
dec
iret
xchg
into
ffree
sub
sub
inc
xor
jns
test
shrl
xchg
push
clc
hlt
sub
fwait
jl
or
xchg
and
lea
repz
insb
cmp
insl
xor
pop
and
mov
lea
mov
inc
xlat
push
jo
sahf
jae
pop
fsub
fadds
and
es
ds
scas
sbb
arpl
mov
hlt
xor
jecxz
mov
fiaddl
adc
inc
repnz
into
inc
push
lret
pop
cmp
nop
stos
mov
aam
inc
inc
rcrb
ret
pop
dec
pop
push
cmpsb
in
pop
pop
jmp
add
sub
jo
fdivrl
inc
pop
inc
popf
stos
call
jle
insl
or
dec
out
clc
loopne
jge
lods
filds
loopne
push
fnstenv
test
jne
fcoml
call
negb
and
cmp
mov
pop
bound
pop
in
cmp
jbe
cwtl
scas
jg
fs
xchg
test
inc
sub
out
and
pop
mov
xchg
add
sub
mov
mov
mov
fcoml
aad
decb
dec
add
icebp
dec
idivb
jns
jne
push
pop
inc
rcrb
cmp
clc
call
or
sbb
inc
icebp
add
inc
xchg
out
int
lret
jbe
xor
push
pop
das
jne
data16
std
outsl
aam
mov
ds
or
mov
repz
adc
test
pop
out
or
mov
in
scas
and
add
insl
sub
xchg
ja
dec
inc
inc
loop
scas
movsb
jb
inc
insl
dec
aam
cltd
inc
push
add
push
jo
adc
js
add
inc
jmp
xchg
cs
leave
fsts
lock
xor
xchg
ja
imul
mov
pop
clc
cmpsl
test
std
sub
in
adc
xchg
xchg
mov
jno
cmp
and
rcr
loope
ret
out
sarb
cltd
je
ja
pop
or
outsb
mov
jecxz
jmp
aaa
add
test
jp
xchg
dec
sti
inc
lret
push
pop
sbb
push
mov
sub
mov
or
jg
mov
xor
adc
sbb
push
call
ja
push
push
idivl
imul
adc
dec
ret
mov
aam
adc
lret
adc
sub
adcb
aas
jp
lahf
shlb
outsb
fidivl
pop
in
pop
int
xor
aad
xor
iret
aas
int3
or
scas
mov
js
out
xor
push
loope
rep
fldenv
iret
fcomp
jns
push
js
add
inc
inc
cmc
add
out
call
movsl
in
sub
cmp
int
scas
loope
lods
shrb
dec
mov
or
movsl
test
cmpsb
and
jg
sbb
mov
out
jno
jne
sbb
addr16
sti
stos
stos
out
dec
pusha
jl
push
mov
jmp
add
dec
sti
movsl
jnp
adc
and
ret
inc
sbb
adc
stc
or
xorl
and
dec
mov
or
sbb
pusha
and
mov
out
test
adc
sbb
cmp
pop
xchg
movsl
nop
push
and
into
loop
nop
imul
inc
sbb
push
dec
xor
mov
hlt
mov
xchg
test
jecxz
daa
xchg
jg
xor
icebp
push
mov
imul
sub
imul
add
sub
shll
push
ss
mov
jecxz
sbb
stc
andl
xchg
insb
dec
inc
mov
popa
je
or
xchg
outsl
jno
pop
inc
pushf
mov
into
jno
dec
push
push
sbb
cli
fmull
mov
or
es
sbb
jno
push
pop
push
push
fwait
shl
bound
lods
das
das
clc
rclb
nop
mov
mov
cmp
sub
push
leave
xor
dec
dec
lcall
ret
dec
and
insl
or
cltd
sbb
push
sti
dec
enter
lds
or
inc
stos
addr16
or
mov
mov
ds
cld
pushf
mov
jnp
dec
ja
xchg
fs
sub
jns
cs
adc
sub
shrb
fcompl
inc
lcall
cmc
sbb
lods
push
ss
ss
popa
ja
outsb
loope
push
xor
test
pop
sub
xor
gs
dec
rol
outsb
fnsave
inc
outsl
push
jecxz
add
test
fisttpll
cmpsb
and
push
cwtl
in
js
leave
and
inc
decl
rolb
insb
sub
xor
movsb
inc
incb
in
pop
addb
roll
inc
inc
cmp
scas
jge
mov
fwait
inc
push
sub
jb
inc
or
pop
pop
test
ljmp
mov
movsl
pop
pop
test
jne
dec
sub
pop
and
subl
jne
daa
jl
adc
xchg
pop
fcmove
jo
cmpsb
ds
adc
pop
lret
xor
popa
bound
cld
jnp
push
push
and
cltd
frstor
dec
and
orb
sarl
arpl
add
cmp
mov
push
clc
bound
and
adc
sbb
dec
scas
adc
mov
push
sbb
test
pop
in
mov
xor
test
arpl
arpl
jae
je
mov
xchg
sti
add
outsl
fbld
push
dec
notl
or
push
xchg
push
loopne
adc
add
jbe
bound
mov
adc
subl
js
in
fs
sarb
jl
sarb
pop
xlat
popf
ficoml
roll
out
or
loope
mov
inc
xchg
xchg
in
push
repnz
add
cmp
jmp
enter
cli
lea
or
pop
adc
addr16
out
testl
pop
repnz
mov
hlt
xor
mov
in
pop
and
hlt
clc
outsb
test
and
lret
fwait
aaa
add
xor
pop
xchg
in
lcall
pop
loopne
mov
nop
sarl
in
dec
sub
sbb
xchg
pop
ds
jge
push
cmp
adc
adc
aas
aad
stos
stos
pusha
jl
inc
ja
sti
dec
jp
push
cltd
mov
push
or
rcr
lret
ljmp
enter
mov
sahf
sbb
dec
lds
inc
and
cltd
pop
lea
pop
push
cmp
mov
out
jge
int
jge
jae
mov
push
or
outsb
add
pop
loopne
push
mov
push
in
sbb
and
sub
sub
out
daa
insl
push
or
subb
mov
pop
scas
push
push
push
dec
dec
sbb
fiadds
mov
repnz
stos
lds
std
cmp
hlt
mov
ds
andb
pushl
lds
fwait
and
mov
mov
mov
xor
mov
xor
inc
push
imul
mov
cmc
dec
pop
pop
repnz
mov
cmp
pusha
popa
loope
loop
inc
and
lock
push
enter
mov
nop
mov
rolb
and
imul
pop
adc
jge
lea
stos
pusha
xchg
mov
or
out
pop
mov
cmpsl
out
outsl
cmp
popa
les
mov
pop
repnz
inc
into
mulb
sbbb
fdivp
mov
or
mov
into
in
fsubrl
cmp
fmuls
xor
mov
push
fnstcw
sub
push
mov
cld
xchg
fisubl
push
nop
add
loopne
dec
pop
fwait
popa
mov
in
mov
ret
scas
or
loope
sub
cmp
mov
lds
mov
int3
andb
jns
mov
pop
les
mov
fidivs
outsb
xor
stc
mov
std
cmpsb
sub
out
xchg
stos
push
push
push
lret
push
and
mov
push
or
ljmp
xor
inc
call
adc
pop
xchg
or
je
stc
aas
loop
xchg
shr
enter
addr16
movsb
inc
pop
lods
cld
lea
imul
fs
dec
push
test
jge
push
scas
push
dec
mov
cmp
pop
insl
in
sbb
daa
out
das
adc
jnp
jo
fsubrl
mov
push
jnp
div
add
je
mov
insl
sti
adcl
out
enter
stos
pop
loope
mov
adc
lcall
cli
es
jmp
sbb
fldl
xor
dec
mov
push
pop
popa
and
sbb
push
das
ljmp
pushf
out
sub
jb
adc
fldlg2
fiaddl
negb
cli
call
into
adcb
dec
insl
xchg
insl
xlat
pop
push
lret
or
pop
loope
xor
pop
loope
hlt
sbb
in
daa
js
daa
mov
sbb
jge
push
xchg
or
add
mov
xor
mov
mov
fcmovnb
cmp
cmp
das
repz
mov
dec
insb
js
into
jmp
or
mov
sub
sub
enter
xor
and
loop
cmp
popf
sahf
mov
in
or
jbe
jnp
out
pop
shll
push
jecxz
cmp
idivl
insb
xchg
scas
dec
mov
jge
xchg
xor
cld
jp
in
pop
xlat
cmp
test
gs
sbb
xchg
pop
into
cld
gs
leave
popf
sbb
ret
cs
bound
mov
cmpsb
xchg
jg
scas
je
out
clc
add
ja
loopne
mov
ret
stos
xor
jp
xor
cmpb
push
dec
js
xchg
mov
test
loope
push
cli
lea
fs
jg
mov
mov
nop
mov
loop
inc
cwtl
imul
fs
pop
inc
js
add
sahf
mov
push
push
inc
pop
add
and
push
xchg
push
jae
mov
pop
negl
pop
jp
jbe
mov
xchg
dec
call
fcmovbe
lds
mov
pop
mov
and
cs
push
cmp
dec
and
into
lret
cmp
pop
jbe
idivl
int
fwait
cmp
notb
testb
inc
cmp
scas
jbe
xchg
data16
add
xchg
loop
rclb
cmp
mov
push
add
adc
jg
pop
mov
scas
xchg
aad
stos
mov
xor
pop
xor
sbb
je
adc
hlt
jp
pop
and
xchg
xchg
cmp
rcr
dec
cmpsb
inc
inc
cmp
repnz
or
std
je
add
mov
xor
sub
jl
or
mov
push
or
bound
sub
add
add
outsl
mov
fbld
sbb
nop
or
push
cmp
or
imul
xchg
mov
fwait
lret
pop
jge
fsubrl
fisubl
mov
jae
jbe
dec
dec
jecxz
out
inc
jecxz
es
push
cwtl
xchg
nop
in
fmuls
mov
cltd
mov
fsubrp
ret
dec
jmp
cmp
insl
jl
sbb
cmp
jnp
adc
jp
negb
daa
addl
adc
mov
adc
jg
adc
rorl
lret
jbe
out
hlt
ret
adc
mov
pop
sub
and
jecxz
add
test
push
or
mov
mov
pop
jns
mov
and
xchg
movsb
jae
jne
aas
and
gs
mov
loopne
fisubl
inc
mov
cltd
sahf
in
mov
lods
xchg
push
lret
sub
dec
imul
sbb
xchg
adc
jne
call
inc
lret
sub
adc
pop
sahf
xchg
rorb
cmp
call
rorl
mov
inc
add
out
adc
popf
dec
ror
jae
int3
fcompl
push
mov
xchg
dec
test
enter
loop
xlat
mov
inc
in
add
mov
add
add
insb
mov
fsubrl
jb
mov
add
scas
xchg
repz
stos
sbb
inc
test
imul
test
repnz
or
push
sbb
stos
test
test
push
std
inc
jne
xchg
cmp
jl
adc
xor
outsl
mov
mulb
cmp
sub
cmp
lret
icebp
pusha
sub
cmpsb
jnp
lahf
bnd
sub
xchg
or
int
mov
xchg
jmp
adc
repz
in
in
out
enter
mov
cli
push
shlb
inc
mov
jecxz
rorl
arpl
xchg
aad
addb
out
push
inc
ljmp
ret
icebp
mov
mov
xchg
sub
xor
and
or
lret
or
popa
sub
movsl
xor
cmp
fwait
aad
and
cmp
stos
mov
leave
insl
dec
inc
inc
cltd
push
les
or
int
dec
jecxz
xor
fistpl
and
jnp
out
int3
inc
pusha
inc
pop
sub
mov
lea
dec
lods
dec
shlb
xchg
xor
cmpsl
shll
call
adc
xchg
insl
idivb
pop
int
cld
icebp
mov
out
xchg
cmpsb
xchg
xor
sbb
mov
cmpsl
icebp
in
cmp
cmp
dec
pusha
in
sbb
push
mov
ds
pop
jp
sarb
jge
adc
test
repz
mov
pop
imul
mov
pop
arpl
mov
adc
mov
dec
ret
adc
push
stos
sbb
dec
sti
and
testl
mov
sub
rcrb
repnz
xor
mov
hlt
mov
repz
scas
je
push
cltd
pop
aas
scas
jmp
xor
jns
xchg
sbb
and
xorb
jecxz
sahf
dec
sbb
fldlg2
fdivl
fists
hlt
inc
daa
adc
inc
fisubrs
mov
push
pusha
fwait
jno
mov
push
inc
scas
fdivp
pusha
aaa
mov
lcall
sbb
sbb
add
mov
add
pop
mov
push
lahf
mov
xor
loop
cmp
and
push
pop
dec
adc
js
popa
sub
inc
and
scas
ss
faddl
mov
fnsave
add
and
lcall
hlt
or
pop
sbb
notl
daa
jg
int
out
sbb
rep
mov
dec
jno
mov
cwtl
mov
adc
scas
mov
movsl
call
jb
pop
xchg
rorl
out
aas
xchg
push
xchg
enter
or
aas
inc
adc
mov
cmpsb
xor
fwait
adc
gs
mov
sbb
mov
fists
sub
test
lahf
pop
nop
adc
test
and
pop
mov
pop
xor
ret
lret
sahf
sbb
jae
lods
insb
dec
lods
pusha
loope
fsts
popa
popl
mov
outsb
inc
test
jp
xor
sub
sub
adc
imul
jg
sti
lahf
and
imul
enter
dec
inc
cld
lds
pop
dec
sbb
mov
dec
dec
or
jne
inc
pop
in
shr
data16
inc
cmp
xor
mov
push
mov
lods
inc
mov
pop
xchg
rorb
jmp
and
lods
mov
or
xlat
cld
mov
sub
xor
es
int
sarb
sub
fldz
inc
fidivrs
mov
xchg
ret
add
xor
loop
scas
mov
and
push
sub
jmp
loopne
ret
mov
or
pop
adc
pop
int
pusha
aaa
popf
xor
aas
mov
sar
push
sbb
test
xchg
mov
push
jae
and
adc
iret
add
loopne
or
xchg
mov
in
adc
cmp
xor
lds
xchg
sbb
xchg
data16
dec
stos
xchg
movsl
cmc
addl
add
lahf
sbbb
sbb
jo
mov
mov
xor
scas
pop
popf
stos
lods
jno
mov
test
mov
xchg
icebp
dec
dec
sti
stos
arpl
nop
mov
cmp
sbb
mov
mov
push
nop
sbb
sti
push
jmp
popa
cmp
or
pop
icebp
dec
loope
adc
and
push
jmp
popa
cmp
or
pop
icebp
dec
loope
adc
add
xor
inc
popa
cmp
or
pop
lock
loope
adc
and
push
jmp
popa
cmp
or
or
sub
cmp
add
mov
sbb
inc
fcompl
sbb
cmp
push
dec
cwtl
dec
test
mov
cmp
sub
rorl
lret
sbb
data16
push
push
pop
arpl
jae
add
adc
fisttpl
sarb
dec
lahf
dec
mov
ds
sub
dec
fnstenv
sti
add
and
imul
and
pop
shr
nop
ja
mov
movsb
xor
pop
jnp
jnp
hlt
push
lret
pop
loop
adc
xor
add
out
daa
pop
faddl
push
jecxz
xor
xor
test
and
sbb
mov
stos
sub
fs
insb
mov
fwait
lods
loopne
fcompl
call
out
lea
cmp
pop
fcom
sti
xchg
inc
add
pop
mov
and
inc
dec
sti
lret
fldcw
sub
add
sub
out
enter
and
cmc
mov
fucom
push
fistpl
xor
add
ljmp
test
mov
or
adc
cmp
xor
or
mov
sub
add
je
mov
jo
dec
sub
paddq
data16
popf
inc
mov
mov
out
aaa
ficomps
adc
dec
ficomps
fldt
outsl
lcall
fldcw
insl
mov
pop
clc
pop
lret
or
jns
push
les
arpl
clc
fisttpl
lret
sbb
sub
cmp
push
dec
cwtl
jnp
imul
call
lret
sbb
sub
cmp
push
mov
and
add
scas
daa
roll
mov
lods
daa
scas
cmp
mov
push
in
cmc
xchg
je
in
fnsave
push
jg
pop
ror
mov
nop
stc
jns
sti
or
sub
push
test
mov
mov
cmpl
aas
stos
xchg
shrb
lret
sub
sbb
mov
jl
adc
jecxz
xchg
sub
inc
stos
imul
sbb
insb
int3
and
mov
popa
daa
call
or
jle
lret
mov
lret
mov
fcom
and
push
sbb
dec
xor
and
add
adc
stos
dec
aas
adc
mov
xor
mov
inc
ret
cli
sbb
xor
inc
fisttpl
sahf
pop
insb
add
mov
push
repz
jle,pn
xor
aaa
jp
xchg
call
and
inc
leave
jmp
lahf
sbb
arpl
icebp
sbb
pop
and
pop
imul
cwtl
jb
sbbl
mov
enter
sbb
adc
jl
lret
cs
jmp
lods
push
or
xor
fwait
test
add
xchg
test
imul
sub
mov
subb
mov
lods
icebp
dec
pushf
adc
push
bound
fisttpl
mov
xchg
xchg
inc
addl
mov
mov
nop
lea
xchg
or
outsb
pop
jge
movsl
sub
aaa
shl
dec
push
scas
mov
cmp
mov
mov
pop
loope
stc
jmp
vdivss
dec
xor
sub
mov
lret
repz
test
jnp
sub
cmp
sub
jnp
jo
add
push
adc
push
xchg
test
jo
jae
fnsave
mov
lahf
or
mov
push
cs
in
scas
cmp
jg
adc
adc
mov
mov
imul
gs
notb
cltd
std
mov
inc
adc
mov
ljmp
or
fmull
pusha
xor
and
notl
xorl
and
mov
imul
stc
ss
iret
daa
pop
push
ss
repz
fcompl
push
les
jno
js
and
add
sbb
pop
shll
sahf
jnp
repnz
and
add
xlat
daa
fldenv
sub
out
std
nop
dec
in
sub
in
int3
mov
mov
pop
jle
sbb
jge
mov
leave
nop
das
dec
cmp
cld
push
lcall
ljmp
pop
dec
int3
scas
add
mov
inc
mov
pop
sti
adc
cmp
and
pop
mov
adc
hlt
into
sub
pop
mov
test
jmp
std
aaa
repnz
and
das
jp
icebp
pop
mov
mov
sti
xchg
mov
mov
in
jne
cmpsl
int3
inc
adc
and
xchg
xchg
sub
imul
sub
xchg
loopne
xor
xor
cmpsl
xchg
mov
pop
hlt
dec
pop
lret
ret
or
int
adc
aaa
mov
or
jp
pop
idiv
lret
ret
in
sti
push
sub
adcb
outsl
jecxz
pop
jle
and
dec
pusha
outsb
out
adc
mov
aaa
and
jge
rcrb
sbb
movsb
pop
jg
add
vmovaps
icebp
mov
push
sbb
push
insb
sbb
mov
ret
push
jnp
ss
dec
lcall
jae
outsb
dec
mov
loopne
popf
shl
pop
aam
lds
xor
sub
out
xor
shlb
aaa
loopne
add
mov
dec
sub
in
iret
xchg
dec
scas
jnp
js
mov
daa
dec
inc
scas
add
sti
mov
mov
stc
jl
or
adc
in
filds
mov
adc
fdivs
jno
stos
mov
mov
push
loop
and
scas
jge
mov
or
das
popa
dec
insb
sahf
sbb
or
aam
mov
fadd
adc
cmp
loopne
out
add
cmp
sti
bound
jmp
or
outsl
mov
dec
mov
scas
fnstcw
mov
lcallw
mov
repz
lahf
pusha
inc
enter
mov
or
mov
in
and
je
cmc
jnp
xor
fcoml
push
shlb
sbb
xor
mov
push
push
and
push
mov
push
es
xchg
je
loop
and
orl
xor
dec
push
mov
push
add
scas
stos
roll
xchg
pop
cmpsb
cld
push
xchg
cs
imul
and
jbe
mov
in
gs
cmp
xchg
jg
mul
inc
dec
xor
jg
cmp
test
ja
lahf
jecxz
jns
mov
jbe
popa
ja
cld
mov
in
mov
mov
lods
ja
mov
arpl
xchg
push
out
or
fdiv
sbb
sub
pushf
jbe
clc
adc
jne
push
sbb
xchg
add
sbb
arpl
mov
jns
test
int
fsubrs
mov
fcompl
dec
cmp
xor
lret
push
dec
lods
mov
cs
ret
test
xchg
inc
lahf
or
sub
mov
cli
iret
mov
ret
loope
arpl
jnp
xchg
fcompl
sbb
fisubrs
dec
or
sarb
insl
add
mov
and
mov
call
jae
gs
dec
lret
cld
sbbl
out
movsb
sub
inc
xchg
sub
pushf
std
adc
and
cmp
sub
data16
mov
inc
push
scas
xor
jo
in
fisubl
sub
sti
in
arpl
decb
sbb
rorl
mov
push
dec
xchg
je
mul
cmp
scas
popa
inc
inc
mov
pusha
xchg
xchg
rolb
mov
push
fiaddl
insb
jnp
pop
mov
pop
xchg
repnz
lahf
sbb
lret
lea
mov
dec
enter
push
mov
jmp
sub
pop
repnz
push
jo
jg
inc
jl
sub
test
cmp
mov
shr
enter
faddl
mov
mov
inc
fisttpll
movsb
out
cmc
mov
aaa
jle
lods
pop
aad
and
inc
mov
lcall
ret
mov
adc
lock
pop
ret
cld
mov
mov
addr16
sub
or
adc
popa
cmp
nop
mov
pusha
ret
out
xchg
lods
sub
mov
dec
imul
cmpsl
stos
xor
ljmp
sub
stos
call
adc
cmp
dec
xor
and
out
or
sbb
add
sub
or
bound
fldl
aas
pop
mov
mov
rcl
subb
into
mov
inc
jbe
mov
sbb
xchg
push
call
mov
xor
mov
lret
inc
mov
push
imul
in
or
cmp
sub
iret
or
sbb
call
aad
mov
popf
inc
add
cld
icebp
xor
or
sub
jg
mov
sub
cmp
dec
rcrb
xor
out
ret
adc
in
clc
clc
dec
pop
or
pop
js
add
jne
cmp
mov
popf
pushf
fnstenv
adc
lods
loop
bound
jns
push
pop
mov
movsl
and
js
lret
xor
sbb
inc
jb
pop
or
cwtl
test
inc
outsb
imul
and
sbb
mov
jg
xchg
mov
jns
imul
popf
push
adc
xlat
sahf
sub
cld
cltd
push
dec
inc
jo
arpl
mov
add
sub
mov
fdivrl
jbe
mov
mulb
jl
les
mov
out
mov
lods
fsubrp
enter
ss
cmp
aaa
mov
xor
roll
push
ficomps
pop
adc
or
les
cli
sbb
cmpsl
pushf
xchg
popa
movsl
mov
sub
or
mov
xchg
and
or
sbb
xchg
dec
mov
pop
cwtl
shll
repz
cmp
and
cmpsb
mov
cmpl
dec
mov
sbb
loope
jo
pop
inc
fadd
imul
adc
xorb
in
scas
addr16
and
nop
mov
mov
nop
mov
cmp
or
mov
xchg
out
xchg
fadd
lret
out
imul
mov
ja
pushf
dec
jae
adc
xlat
outsl
in
xchg
or
int
cli
jb
xchg
iret
sub
popf
mov
dec
jbe
cltd
mov
shlb
sahf
push
dec
sub
jg
mov
test
sahf
cmp
dec
cmp
lods
loope
xchg
outsb
lahf
arpl
lods
mov
in
cmc
pusha
sub
addr16
cltd
push
sbb
add
jle
fsubs
fstl
flds
sub
adc
loopne
jne
sbb
fmuls
sub
test
add
es
jmp
rclb
mov
andb
mov
lret
adc
mov
addr16
ds
cmp
jg
ljmp
xlat
enter
cmp
loopne
and
xchg
lret
inc
cld
ret
shlb
scas
loope
xor
int
xchg
fnstsw
punpckldq
ror
aad
mov
shrl
mov
outsl
inc
xlat
adc
decl
jnp
jl
notb
jl
xlat
xchg
cwtl
pusha
pop
mov
lcall
push
dec
loope
lret
jbe
or
testb
jne
xchg
into
lret
dec
into
int
mov
pop
pop
jmp
mov
mov
pop
pop
xor
das
cmpsl
rorl
popa
data16
stc
in
sti
push
frstor
fldl2e
jg
inc
not
loop
jnp
fnstsw
mov
dec
jg
mov
cld
dec
ret
cmp
mov
popf
push
or
stos
adc
sbb
xchg
push
in
lods
cmpsb
sbb
xchg
orb
shrb
cmpsb
lret
out
stos
mov
xchg
les
dec
xchg
subl
fmull
test
xchg
mov
rcrb
jo
gs
les
repz
add
addr16
xlat
xor
sahf
sub
mov
pop
cmp
enter
or
jae
testb
mov
pop
push
pop
xor
ficoms
movb
cli
mov
mov
xor
cmp
push
cmpsb
lods
cmp
in
xor
popf
imulb
push
dec
pop
mov
pop
fisubs
lahf
scas
mov
push
adc
cwtl
roll
push
or
pop
adc
push
pop
jl
ljmp
xlat
or
sub
daa
jno
enter
ret
icebp
cld
movl
cmp
pop
rol
fstpl
cmpsl
sub
jmp
insb
and
fidivrs
xchg
pop
lds
sbb
pop
jge
sub
pop
xor
sub
lahf
cmp
pop
push
mov
jne
repz
mov
cmp
dec
xchg
repz
pop
dec
adc
mov
aad
sbb
xchg
or
mov
cmp
mov
and
das
and
sbb
inc
sbb
fstpl
pop
mov
xor
arpl
push
jge
sub
fnstsw
pop
outsb
fs
xor
or
fidivrl
adc
dec
mov
paddsw
lret
icebp
addb
push
icebp
shrb
sub
xor
add
xlat
dec
xchg
mov
xchg
out
dec
movsl
sahf
cmp
in
dec
flds
or
jl,pn
fsubrs
lods
repnz
push
cmpsl
mov
daa
mov
jnp
fildll
mov
and
sub
push
cmp
ret
cmp
call
mov
mov
mov
nop
cwtl
adc
mov
add
sbb
jl
mov
inc
mov
sub
imul
clc
aas
lcall
lods
nop
xor
ficomps
xchg
loopne
pusha
xchg
cmp
push
mov
pop
cmp
jg
adc
shlb
mov
push
dec
dec
mov
enter
pop
stc
test
test
fildl
fadds
aaa
dec
sahf
mov
cmpsb
fsubrs
pusha
push
and
lcall
fsub
mov
or
call
lcall
inc
dec
push
repnz
das
ja
popf
mov
sbb
or
dec
jle
and
sbb
lock
sbb
je
pslld
mov
pop
ficoms
rcl
mov
sti
or
lea
adc
or
adc
push
mov
sbb
dec
inc
das
or
sbb
sub
adc
pop
mov
sbb
arpl
fdivs
loope
pop
fdivrs
sti
ficoms
nop
and
inc
mov
sub
in
jg
je
fldt
dec
ljmp
dec
dec
xor
mov
stos
and
in
push
mov
dec
aam
jge
cld
inc
enter
inc
mov
test
dec
xorb
lods
jle
xchg
clc
mov
and
loopne
lods
mov
inc
push
jbe
addb
ret
mov
jno
ljmp
gs
adc
pop
and
xchg
repnz
or
xchg
je
and
mov
push
incl
rcr
addb
sbb
inc
cmpsb
ret
dec
dec
push
dec
sub
shrl
mov
sub
inc
lods
sahf
pop
cmp
addr16
cmp
call
pop
cli
pusha
xor
add
mov
rcr
add
mov
sub
divps
cmp
js
pop
xor
sarb
sbb
daa
inc
jg
mov
fldl
inc
dec
das
sbb
inc
mov
cmc
or
add
inc
adc
inc
scas
mov
lock
cmp
pop
push
jmp
and
scas
jnp
jl
add
cwtl
test
fdivrs
cmp
out
cmpl
sqrtps
inc
aas
mov
adc
jg
add
stc
decl
xchg
inc
inc
ja
push
lret
mov
sub
and
mov
jae
inc
les
fnstsw
sub
push
in
enter
push
repz
or
mov
add
xor
push
cmp
cmpsl
shll
cs
mov
shll
inc
push
xchg
popa
mov
test
leave
cmc
mov
cmp
sti
rorb
lret
insl
xor
repnz
sbb
in
cli
jp
decl
pop
cmp
clc
mov
insb
iret
nop
adc
mov
lods
jbe
ljmp
inc
std
mov
xchg
fbstp
push
test
jns
inc
sbb
sbb
cmp
sbb
cwtl
and
xor
int3
mov
hlt
stos
sarl
push
jg
pop
aas
cli
scas
out
pop
cmp
mov
rolb
jns
in
mov
icebp
jp
push
test
sti
xlat
cmc
xlat
sbb
or
push
orl
int
mov
and
rolb
je
mov
jmp
or
sub
decb
cmp
mov
cmp
roll
mov
pop
je
add
movsb
pop
dec
and
xor
cmp
mov
in
inc
inc
push
adc
dec
call
mov
sbb
cmpl
and
movzbl
xchg
inc
cli
subl
shrl
adc
stos
pop
mov
pop
iret
dec
cmp
xorl
cwtl
aad
mov
int3
std
dec
sbb
pop
sbb
ds
addr16
jbe
inc
fildl
jp
in
imull
sti
mov
mov
add
lods
pop
mov
mov
cmp
ljmp
or
jecxz
xchg
dec
lods
ljmp
aad
xchg
fcomps
cs
dec
popf
jge
cmp
rdtsc
insb
sbb
fisubrs
xchg
push
inc
push
dec
pop
cwtl
ds
push
and
cld
repnz
mov
jp
out
xor
hlt
insl
das
dec
mov
mov
jno
xchg
aam
xchg
test
and
mov
orb
jge
movsb
fwait
xor
mov
mov
les
sub
imul
xor
sub
clts
fdivl
scas
loop
push
ljmp
ljmp
add
test
mov
pop
cmp
shll
xor
lcall
xchg
add
dec
adc
pop
es
ds
leave
pop
aaa
jg
pop
icebp
cmpb
stos
mov
and
add
in
adc
inc
test
ljmp
adc
jge
popa
mov
mov
test
std
outsl
out
dec
fcom
ljmp
inc
mov
cmc
arpl
mov
fsubrl
push
jne
mov
ret
addl
push
insb
sbb
mov
xor
and
lret
xor
add
pusha
addr16
fmul
xorl
aaa
lods
push
xchg
lcall
addb
fistpll
sub
cmpb
rcr
and
xchg
or
fcmovb
pop
testl
test
test
mov
test
mov
sbb
lret
cmpsl
rolb
es
mov
mov
mov
rcr
xchg
mov
mov
pop
hlt
xlat
je
xor
call
repnz
pop
xor
movsb
cmp
in
adc
fwait
pop
sarb
jnp
sahf
inc
dec
insl
lret
pop
insl
mov
push
xchg
in
push
adc
test
leave
add
mov
jae
icebp
cmpsl
inc
adc
mov
xchg
hlt
add
push
jmp
mov
test
sub
mov
mov
rdtsc
repnz
test
push
adc
pop
add
mov
lret
sarb
mov
push
jno
lret
lcall
mov
das
inc
mov
lcall
jbe
loop
push
jg
push
sub
sbb
incb
cmp
cmpsb
sahf
pop
push
or
mov
pop
inc
mov
push
int
ret
mov
adc
xchg
test
pop
je
outsl
stos
repz
f2xm1
and
mov
mov
sbb
and
addr16
shlb
ret
jb
adc
test
mov
pop
inc
adc
ljmp
stos
xor
jbe
mov
or
mov
jg
sub
into
jg
ss
lret
iret
cmp
xchg
xor
xchg
adc
fcoml
bound
push
fnstenv
adc
aaa
pop
imul
or
adc
push
les
jg
and
push
scas
cmp
jp
mov
insl
ljmp
pop
or
jb
in
xchg
adc
fstpl
adc
das
pop
mov
imul
out
test
enter
dec
loopne
adc
inc
ds
fdivs
out
mov
mov
xchg
out
mov
mov
les
lods
add
nop
pushf
inc
out
sahf
dec
jg
and
scas
push
pop
inc
aam
xor
sub
scas
fistpll
fsubs
mov
push
enter
or
out
fwait
mov
cmpsb
xchg
or
mov
mov
test
loopne
aas
rcrb
push
and
mov
mov
iret
cmp
inc
sbb
xchg
loop
xor
hlt
and
inc
js
sti
test
sbb
clc
adc
push
adc
add
aaa
jecxz
pop
inc
test
push
push
decb
push
mov
adc
aas
jo
scas
mov
push
dec
popa
or
das
out
popf
xchg
ja
icebp
inc
xchg
push
mov
jge
xlat
sahf
mov
sbb
mov
jae
daa
das
andb
nop
dec
bound
pop
sbbl
add
or
mov
mov
push
push
cmc
cmp
out
pop
add
sbb
in
pop
loope
test
in
jecxz
jb
mov
dec
shll
test
jne
dec
dec
mov
adc
push
jge
scas
pop
cmp
popf
xchg
shlb
dec
and
push
in
sub
push
mov
pop
rclb
jmp
jbe
cmp
mov
shrb
jns
mov
xlat
cmp
jb
inc
stos
lret
rcrb
xor
dec
cmp
dec
mov
in
add
mov
popa
xchg
pop
stos
sub
add
aas
and
mov
movsb
fdivrp
lods
cmpl
adc
pusha
movsl
pop
and
and
jmp
out
mov
mov
filds
lods
imul
call
lret
sbb
sub
cmp
push
dec
cwtl
jnp
imul
call
lret
sbb
sub
cmp
push
dec
xchg
jnp
imul
sub
fisttpl
lret
sbb
sub
xor
popa
lcall
dec
imul
enter
push
xor
push
sub
dec
in
xor
and
add
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
negb
sbb
ss
mov
add
add
pop
or
add
add
add
cld
add
add
add
add
jns
rolb
add
add
add
pop
add
add
popf
add
add
add
add
add
pop
add
add
add
add
push
add
add
add
mov
mov
test
dec
add
mov
ltr
add
add
add
add
int3
add
lds
mov
add
add
mov
add
add
add
filds
mov
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
push
add
add
add
or
and
or
add
pop
add
add
or
sbb
add
adc
lds
jl
mov
xchg
add
add
add
add
mov
imul
mov
add
add
mov
add
add
add
add
icebp
add
add
add
add
add
add
add
loop
mov
mov
add
add
adc
fadds
cld
add
add
pop
add
add
add
add
add
mov
add
xchg
add
add
add
addb
add
add
add
add
mov
es
add
cld
add
add
add
add
add
cmp
pop
add
add
add
add
add
add
add
mov
add
add
add
rolb
add
add
jae
xchg
add
add
add
add
add
pop
add
flds
aad
or
xchg
add
add
add
aad
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
pop
add
add
add
add
add
add
mov
add
add
add
rolb
add
add
mov
pop
add
add
add
add
add
add
add
add
add
add
aad
rolb
mov
add
popf
add
add
add
or
add
add
xchg
add
add
add
add
add
pop
add
popf
add
add
add
add
add
add
add
mov
mov
add
add
add
add
add
in
add
add
add
add
stos
add
add
add
add
add
add
add
sbb
cmp
fiadds
add
add
mov
jo
add
xchg
add
add
add
add
add
xchg
add
pop
add
add
add
add
mov
gs
add
add
xor
jle
jp
add
ja
cmpsb
add
add
add
dec
add
add
ret
add
add
add
and
jle
pop
add
add
add
incb
jbe
inc
add
add
add
lods
add
insl
add
add
xchg
str
add
add
add
add
jns
insl
add
add
add
in
add
sub
add
add
add
sub
push
add
add
mov
es
incb
xchg
dec
negb
cmp
addr16
ret
sub
fwait
dec
sub
out
int3
and
imul
xor
rcl
ja
cltd
jbe
ds
in
xor
notb
push
xchg
mov
adc
adc
loop
sbb
pop
dec
sbb
aad
mov
mov
in
das
dec
imul
dec
ficoml
sbb
mov
jle
sahf
cmp
jae
stos
mov
aaa
mov
mov
inc
inc
aad
enter
mov
adc
sbbl
mov
jae
cmp
inc
ljmp
jecxz
repnz
out
leave
movsl
jno
inc
jg
test
addr16
mov
push
xor
imul
test
cmpsl
inc
xchg
push
ja
adc
decb
xor
push
jle
push
into
icebp
add
jb
in
or
jns
xorb
jmp
sbb
lds
out
std
loope
sub
add
jmp
mov
pushf
adc
mov
pushf
std
cmp
and
in
ficompl
push
and
and
and
mov
xor
les
cmp
xor
xchg
rcrl
pop
lret
iret
xchg
sub
test
adc
lods
mov
cmp
or
daa
push
xchg
mov
dec
mov
in
jae
push
dec
cmp
jns
loope
enter
push
and
jo
lret
aam
mov
lock
mov
cmc
and
xchg
out
out
imul
mov
xor
push
ret
inc
sarb
cmp
mov
sub
leave
sbb
inc
pop
mov
mov
xchg
or
scas
sbb
insl
pop
in
or
enter
lcall
cmpsb
xor
sub
push
fs
mov
movsl
repnz
and
dec
dec
cmc
rcrb
mov
orl
sbbb
dec
ja
popf
arpl
sahf
push
dec
sbb
sti
and
sub
jno
rorb
push
xor
les
inc
and
mov
mov
cmp
xor
add
repz
mov
repz
pusha
add
jle
aaa
sbb
mov
and
xchg
addr16
ret
pusha
repnz
jecxz,pn
cmp
cli
adc
push
in
or
mov
push
fs
cmpb
js
sbb
cmp
mov
iret
je
lcall
xlat
sub
test
testb
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
