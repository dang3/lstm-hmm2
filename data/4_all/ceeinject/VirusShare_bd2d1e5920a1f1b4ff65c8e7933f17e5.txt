call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lods
lea
jae
jecxz
fidivrs
and
or
jecxz
xchg
or
mov
lea
arpl
adc
std
xor
push
pop
rorl
jecxz
cld
dec
cmpl
mov
movsl
aas
in
cli
cmp
lods
pop
nop
jb
add
push
movl
icebp
push
ret
ss
xor
out
cmc
jns
xor
mov
jne
std
popf
fadds
push
mov
adc
decl
div
xchg
ret
repz
sbb
mov
adc
inc
hlt
imul
out
xchg
cmc
test
pop
repnz
insl
jle
outsb
mov
jae
mov
xchg
popf
push
pop
arpl
adc
imul
gs
cmp
xchg
push
jl
pop
test
jge
jb
in
lea
or
and
xor
jecxz
rorb
xchg
pop
jge
repnz
pop
pusha
push
inc
sbbb
repnz
ret
sti
popf
xchg
pop
jl
mov
daa
pop
push
lea
int
xlat
add
jmp
adc
stos
inc
mov
je
out
add
inc
fdivs
leave
dec
mov
pop
addb
or
mov
cld
sub
sbb
or
popf
push
lea
fcoms
scas
inc
test
pop
test
pop
mov
xchg
js
pop
test
ret
ds
or
add
lods
add
xor
and
repz
cmpl
mov
mov
adc
add
xor
and
repz
cmpl
mov
in
lds
mov
and
mov
xor
jle
ret
xchg
sbb
icebp
std
xchg
jo
sar
lock
imul
scas
test
stos
jns
out
cli
add
sbb
dec
cmp
movsl
inc
dec
jbe
aad
test
pop
test
imul
inc
arpl
dec
or
push
cld
xor
mov
mov
test
or
ds
decl
stc
and
inc
inc
fs
cmp
jno
xlat
cmp
and
rcll
add
xorl
inc
scas
adc
out
jl
dec
insb
mov
addr16
jne
mov
mov
ja
xor
std
lea
and
cwtl
cmc
out
ret
adc
insb
shrl
lea
gs
out
mov
les
fs
notb
rcrb
jecxz
push
jns
xchg
mov
mov
insb
jl
mov
insb
fwait
testl
mov
popa
add
push
xchg
out
roll
inc
push
push
rorl
shll
flds
dec
out
dec
jp
test
iret
call
and
rorb
xor
cmpsl
stc
out
push
xchg
test
repz
ljmp
lretw
lock
addr16
lret
daa
pop
mov
icebp
sub
imul
mov
call
fs
mov
loopne
sti
jecxz
xchg
enter
jl
lret
pop
xor
js
add
jne
inc
fwait
sub
sub
sbbl
jmp
fmull
jae
test
and
xchg
adc
mov
jp
xchg
mov
or
cwtl
jb
jge
xchg
test
lcall
popf
mov
rorl
scas
or
mov
fcomi
sbb
mov
push
mov
sbb
rcll
insl
ret
es
dec
add
xor
mov
hlt
cmp
pop
push
popa
sahf
out
jb
jae
xchg
and
aam
and
or
movsl
mov
ja
jg
call
jl
sahf
pop
dec
lea
enter
fwait
rorl
notl
pusha
ljmp
or
inc
add
pop
mov
add
lcall
push
xchg
mov
lods
lahf
repnz
cmp
cmp
popf
jo
outsl
fs
hlt
mov
sahf
outsb
rcl
popf
push
xchg
mov
rcrb
fdivr
sub
dec
push
daa
or
sbb
pop
dec
dec
sahf
and
enter
in
push
jno
imul
shlb
adc
sbb
ret
roll
pop
faddl
cmp
xor
add
jnp
fst
in
cmp
xchg
or
dec
or
inc
add
gs
dec
sbb
loop
and
addl
and
movsb
aad
out
arpl
sahf
fisttpll
mov
and
jbe
cmp
das
ret
pop
xchg
int
jge
test
adc
xor
int3
mov
testb
sub
mov
dec
and
bound
cmp
scas
imul
and
dec
or
jne
filds
and
dec
fwait
mov
aas
test
xor
cmp
ret
sti
xchg
mov
ja
arpl
test
push
les
xorb
mov
orb
cmp
int3
mov
hlt
push
pop
cmp
mov
clc
popa
adc
mov
inc
in
cltd
cmp
dec
pushf
jecxz
ja
jno
mov
dec
mov
mov
dec
sti
adc
cmp
pop
jecxz
addr16
cmp
aad
cmp
imul
push
fistpll
mov
add
mov
lods
data16
arpl
cs
jns
lock
inc
mov
out
mov
mov
mov
mov
cld
dec
mov
push
mov
dec
test
push
fistpl
sbb
sbb
addr16
js
pop
pop
les
in
mov
sub
xchg
std
xor
addr16
push
fs
or
inc
out
xor
aas
xchg
ja
fadds
addr16
test
inc
hlt
jmp
rcl
cld
add
out
in
in
jnp
pop
dec
adc
pop
cmp
sub
mov
lods
sub
cmp
mov
cmp
xor
mov
add
or
ja
push
imul
std
mov
leave
mov
mov
shll
sbb
and
xchg
pop
push
mov
test
and
and
insl
call
sub
add
repz
ss
ficomps
jmp
enter
movsl
es
mov
cmc
dec
ficoml
xorl
pop
cltd
add
mov
and
mull
push
mov
jg
fwait
enter
add
ret
jmp
pop
cld
xor
mov
test
es
ret
xor
mov
cmp
or
pop
sbb
idivb
sbb
adc
xchg
enter
lds
je
or
xor
mov
dec
stc
sbbb
pop
push
mov
je
add
and
fnstcw
xor
mov
lea
dec
add
rcrl
stc
adc
in
xor
mov
std
mov
mov
addr16
add
inc
add
or
sub
xchg
push
xor
dec
sbb
mov
out
fstpl
push
ficoml
cli
add
das
mull
mov
iret
lods
pop
mov
inc
out
scas
ret
pop
mov
push
shll
rolb
cmp
pop
pop
jge
stos
das
dec
cmp
mov
sbb
mov
daa
mov
pop
or
dec
sarl
pop
inc
out
cmc
mov
fadds
xlat
sbb
in
cmc
out
adc
mov
std
jle
insl
ret
scas
fimuls
movsl
movsl
ret
leave
add
xchg
fs
mov
jbe
dec
xor
push
insl
push
dec
mov
stc
popa
popf
and
sti
out
roll
stos
scas
into
loope
cmpsb
and
fwait
aad
call
jno
mov
or
mov
mov
push
mov
fsub
pushf
mov
cltd
sbb
js
fsubs
dec
jb
sahf
clc
sarb
mov
decl
arpl
inc
ret
jl
lds
pop
cmp
pop
stos
sbb
addr16
in
push
cs
hlt
test
jmp
xor
loope
xchg
push
sbb
mov
jge
subl
dec
cmp
outsl
xor
and
test
mov
push
or
pushf
in
and
xchg
out
cmp
movsl
xlat
jge
mov
add
add
lret
das
mov
sub
sub
shll
push
sub
adc
jp
mov
aam
movsb
test
inc
xchg
cmp
insl
outsb
out
nop
out
xchg
xchg
or
mov
push
pop
lcall
pop
ljmp
mulb
movsb
lret
outsl
jle
mov
mov
xchg
or
xlat
pusha
ljmp
leave
xchg
bound
cmp
aaa
adc
mov
sub
xor
dec
push
jns
xorb
call
mov
mov
pop
mov
inc
test
sub
pop
insl
push
roll
xchg
xchg
cmc
lcall
mov
and
xlat
pusha
sahf
aas
repz
hlt
lods
decb
inc
pop
inc
cmp
xlat
sti
cmc
inc
mov
fcmovb
mov
pop
add
cmp
and
lock
sub
dec
xchg
int3
popf
ja
and
sub
nop
mov
pushw
mov
push
sub
jnp
mov
sarl
rep
adc
loopne
xchg
aaa
call
lds
mov
fdivrs
hlt
stc
and
fbstp
push
add
sub
adc
adc
pop
jle
popa
sahf
jnp
xchg
mov
lea
cmp
mov
xor
stos
fdivrl
mov
shrb
dec
cs
mov
cmp
xor
mov
int
outsl
in
shr
xchg
lret
out
scas
into
push
push
loope
push
and
pop
add
mov
pushf
inc
mov
xchg
roll
lahf
adc
scas
es
aaa
ret
and
stos
pop
mov
dec
pushf
pop
fsubrs
bswap
mov
fs
in
add
push
mov
dec
test
sbb
push
jae
jo
lahf
push
cmp
jecxz
bound
pop
mov
addr16
loopne
sti
mov
xchg
mov
mov
loope
mov
inc
jp
jl
xchg
mov
jb
pop
clc
call
sysret
es
push
pop
xor
xchg
aam
dec
and
sub
mov
orb
scas
dec
and
push
push
fmul
jb
pop
adc
cltd
sahf
out
test
cmp
mov
pop
insl
dec
shll
dec
std
loopne
mov
adc
jg
das
push
sub
xor
push
sbbb
shrb
push
push
aad
ja
test
push
pusha
loope
sub
pop
movsb
sub
pop
cld
dec
mov
jne
xlat
add
into
fldt
mov
stc
jae
insb
pop
and
and
lcall
dec
cli
aad
or
fwait
sbb
outsb
shlb
sbb
jle
or
mov
jae
dec
call
js
repz
xor
or
inc
mov
xchg
xor
data16
fwait
mov
fmull
int
adc
stc
and
in
jbe
sti
xlat
push
inc
mov
cmp
mov
pop
xchg
dec
test
pop
ljmp
mov
cmp
imul
mov
xchg
jno
aam
mov
dec
adc
fucomi
push
xor
xchg
out
popa
and
cltd
lea
mov
push
xchg
and
and
and
mov
ja
xor
push
out
test
dec
arpl
loop
stc
nop
jae
ficoms
jo
les
inc
sbb
lret
in
inc
rcrb
movsl
std
cmp
and
mov
sahf
ljmp
adc
add
xchg
mov
leave
dec
movsb
leave
jge
mov
or
cmp
sub
mov
mov
push
xor
and
pop
icebp
and
xor
ret
and
rorl
push
sbb
shrb
xor
push
movsb
inc
cmp
mov
xchg
sub
jae
aad
es
push
sbb
sbb
pop
cmpsb
add
adc
pop
dec
stc
frstor
dec
xor
stos
mov
add
movsb
push
out
out
inc
cli
cmc
mov
cmp
xor
jae
in
rcrl
xchg
cmp
push
pop
icebp
pop
push
mov
mov
dec
loop
pop
aas
shrb
mov
push
loopne
andl
xchg
mov
shlb
or
bound
das
fsubl
jp
add
jp
adc
pusha
mov
addr16
lock
ljmp
data16
inc
fnstsw
mov
pop
cmp
and
in
insb
ljmp
xchg
xchg
jns
orb
xor
sub
cltd
xchg
cs
fbstp
repnz
push
jo
mov
mull
add
cmp
not
dec
loop
jle
popf
stc
popf
mov
fsts
pop
jle
pop
xchg
cmp
dec
mov
cld
push
cmpsb
adc
sbb
pop
sub
mov
mov
pop
ljmp
roll
int3
jecxz
adc
fcmovne
jno
rorb
repnz
mov
cltd
dec
hlt
insb
lret
mov
jnp
mov
das
loope
dec
and
je
js
xchg
pop
fsubl
push
test
out
aas
mov
scas
andl
jne
pop
xchg
addr16
mov
jno
enter
dec
cmp
stos
inc
xor
loopne
cmp
push
sbb
sbb
fisttpll
call
mov
mov
loopne
inc
pop
test
nop
pop
xor
aam
popf
jb
xor
inc
out
shr
push
adc
push
in
push
cmp
in
scas
cs
insl
inc
loopne
lahf
addl
lret
mov
stc
xchg
xchg
pop
loope
fimull
add
nop
leave
xchg
ds
scas
xchg
sbb
jno
cmp
xor
pmulhw
mov
popa
push
out
insl
icebp
fcomp
jmp
sub
lock
movsl
xchg
xor
push
imul
aad
fidivrl
xor
or
push
or
adc
testb
inc
inc
flds
dec
in
aas
repnz
add
stc
lret
push
mov
mov
sbb
shll
je
les
out
push
push
lock
push
cmp
mov
jns
pop
xor
sbb
mov
out
cmpsb
test
pushf
push
out
xor
ljmp
jp
add
std
jg
push
into
xchg
lcall
lahf
push
pop
xor
xchg
sub
inc
inc
inc
cmp
shlb
dec
mov
inc
sub
mov
ss
mov
sub
shlb
dec
jbe
fbstp
jno
aam
inc
aaa
movsb
sbb
or
icebp
sub
addr16
dec
jns
or
test
jbe
frstor
add
or
lods
adc
es
push
sub
shll
fildll
and
leave
fdiv
imul
push
dec
push
pop
addr16
imul
cli
dec
and
mov
aas
dec
loop
sahf
add
xor
movsb
xchg
lock
sahf
or
jl
jb
lea
mov
mov
xor
les
das
or
call
add
dec
lods
scas
inc
pop
inc
sub
test
mov
std
enter
pop
push
test
mov
lds
lret
out
shll
jmp
rcll
ret
je
jmp
add
sti
xchg
or
push
mov
cld
ljmp
scas
adc
inc
testb
push
sub
pop
inc
fisubrl
jmp
and
aaa
pop
mov
mov
mov
arpl
call
pop
test
dec
jns
pop
mov
sub
out
inc
out
dec
or
inc
icebp
add
dec
mov
push
fwait
pop
mov
fisttpll
scas
ja
flds
and
push
push
fldl2t
stos
into
int
repnz
iret
cmp
lea
pushf
not
mov
mov
push
ret
les
dec
adcb
mov
test
pop
sub
cs
add
stos
adcl
fs
or
add
rcll
jnp
orb
cmpsl
outsl
jmp
in
lahf
jns
pop
mov
jmp
xchg
xor
movsl
or
xchg
mov
xor
add
daa
mov
jge
adc
jmp
push
dec
pop
adc
insb
addl
adc
ja
and
xchg
mov
mov
cli
lods
daa
pop
xor
cmp
jb
loop
xchg
dec
cmp
repz
jle
idivb
inc
shr
orl
pop
mov
enter
sbb
aas
repnz
sbb
mov
int
pop
or
addr16
pop
mov
mov
or
pop
mov
in
adc
push
inc
fidivrl
aas
das
dec
daa
movsb
sarb
jl
test
negl
mov
dec
mov
int3
lret
pop
mov
es
movsb
rorb
inc
jbe
lret
popf
imul
je
and
movsb
pop
jb
fidivl
sbb
xor
inc
lcall
insl
pop
nop
lods
add
aad
icebp
mov
push
dec
mov
fwait
testl
sahf
push
jp
js
adc
pusha
inc
test
sub
bound
mov
decl
dec
pop
jno
mov
jne
add
stos
fcoms
scas
mov
fwait
out
call
aaa
xor
decb
scas
out
loopne
icebp
dec
mov
mov
push
and
push
and
jmp
imul
lea
jecxz
cmp
or
stc
verw
sub
jle
out
lods
insl
mov
jle
cmp
mov
add
mov
out
inc
aam
jecxz
jp
inc
push
scas
mov
pushl
pop
je
jg
roll
jae
ret
mov
pop
imul
in
sarb
stos
mov
mov
fists
adc
loop
daa
shrb
popa
mov
push
popf
push
push
mov
gs
test
insl
pop
cltd
xlat
repz
sub
js
push
mull
ret
in
and
cmp
fidivrs
leave
push
arpl
pop
dec
cmc
loop
adc
lretw
ret
sub
xchg
mov
loopne
ljmp
and
and
and
stos
ja
cs
fmulp
add
xchg
insb
mov
jge
lahf
dec
pushf
cmpsl
fmulp
cwtl
lret
sarl
arpl
jnp
mov
mov
fwait
clc
movsl
mov
jmp
or
in
cmpl
inc
test
sub
jb
xchg
mov
pop
xchg
movsb
push
addb
jae
or
test
cs
pop
ljmp
cmp
pop
xor
sbb
lods
sbb
mov
xchg
stos
sub
ja
inc
in
and
xor
in
xorl
adc
in
call
jo
cmp
xlat
fstpl
orl
mov
jg
lret
ss
mov
jp
mov
fistps
push
or
leave
xchg
test
sbb
mov
adc
mov
or
mov
jecxz
xor
xchg
popf
loop
mov
xor
fists
dec
arpl
xor
movsb
pop
xchg
or
clc
aad
sub
mov
lcall
ja
jnp
pop
mov
lret
jb
and
scas
and
xchg
std
aad
sti
ss
js
jg
int
stc
lahf
cmc
out
cmpsb
ret
les
adc
data16
outsl
mov
or
ss
dec
testl
jb
cmp
stos
push
icebp
pop
mov
inc
jo
mov
insb
fmul
in
fists
std
hlt
push
mov
xchg
in
js
add
dec
adc
pop
cmpsl
or
icebp
sahf
mov
stos
jl
divb
negl
mov
bound
or
xlat
push
jb
imulb
lahf
lret
mov
pop
pop
mov
jg
in
push
stos
fsubp
jns
adc
rcrb
hlt
xchg
notb
mov
addr16
mov
clc
arpl
mov
bound
pop
rcll
jno
sbb
test
loopne
xor
sub
or
xlat
cmpsb
cltd
pop
in
in
jb
push
aam
sbb
fnstcw
roll
adc
xchg
adc
dec
and
mov
cmp
arpl
mov
lea
xor
xchg
rcll
xchg
jge
pop
pop
pop
push
clc
fistps
mov
fmuls
mov
xor
push
into
xchg
mov
fnstenv
jo
adc
push
push
call
adc
mov
jmp
cltd
pop
sbb
faddl
test
sti
lock
mov
push
jb
imul
push
jbe
add
xor
jo
cmpsl
xor
xlat
push
push
dec
sub
pop
lods
xor
jg
mov
cmc
cmp
arpl
mov
cwtl
hlt
inc
jnp
pop
jge
adc
fbld
push
shlb
pop
ret
sbb
js
dec
ja
rclb
pcmpeqb
jmp
sub
in
rclw
adc
sub
mov
mov
ja
stc
aam
ljmp
push
scas
cmp
fisttpl
cld
fdivrl
lcall
cli
pop
loope
xchg
es
and
inc
xchg
xor
xchg
sub
dec
sbb
inc
and
and
push
xchg
shll
stc
push
dec
adc
aad
sub
dec
inc
roll
in
lds
test
push
or
sbb
or
cmp
cmpsb
outsb
gs
jne
adc
dec
xor
js
clc
out
xor
shl
nop
jle
mov
and
and
arpl
pop
jne
cmp
out
outsl
std
outsl
mov
std
aas
movsl
loope
and
outsb
and
push
adc
stos
repz
jg
mov
in
mov
aaa
rep
aam
xor
adc
aas
jmp
sbb
push
cmp
leave
xor
pop
inc
mov
sbb
sbb
mov
mov
xlat
scas
cmpsb
jl
js
insb
and
out
inc
jp
sub
cli
bound
sub
imul
icebp
push
pusha
and
rorb
orb
aaa
jb
sub
ficomps
mov
jl
xor
in
and
das
xor
mov
arpl
jmp
mov
sub
sbbl
push
iret
pop
test
dec
mov
inc
aaa
lahf
push
ret
push
ljmp
imul
outsb
sub
xorl
dec
lods
sbb
test
clc
mov
dec
fwait
inc
lret
loopne
xorl
lods
mov
inc
push
pop
lods
arpl
adc
add
xor
and
repz
cmpl
mov
mov
adc
add
xor
and
repz
cmpl
mov
mov
adc
stos
std
xor
and
repz
cmpl
mov
mov
fstl
int
jge
insl
and
sub
imul
dec
xchg
pop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
jmp
iret
neg
sti
icebp
rcl
fdivrl
jg
dec
jbe
push
das
push
jg
pop
out
jmp
iret
neg
xchg
mov
inc
outsl
push
jg
dec
jbe
push
das
pop
aas
es
pop
out
jmp
iret
neg
xchg
mov
inc
push
jne
push
aas
adc
jge
pop
gs
pop
mov
mov
out
lahf
xor
mov
sub
or
test
sub
sub
xchg
inc
pop
sbbl
rcr
pop
cwtl
dec
mov
out
push
mov
packuswb
cmp
mov
mov
clc
inc
xor
mov
push
clc
scas
inc
xorl
popf
or
lock
adc
and
scas
imul
xchg
push
outsl
fdivp
mov
add
or
jns
mov
pop
jo
leave
inc
sub
jmp
std
insb
push
out
jp
push
ss
cli
push
pop
fmul
or
add
add
sbb
loop
inc
lret
loope
xor
add
iret
neg
xchg
mov
inc
outsl
push
jg
dec
jbe
push
das
push
aas
es
pop
mov
mov
dec
ljmp
adc
inc
push
inc
inc
lea
mov
mov
mov
lret
jecxz
repz
xor
xor
sbb
jbe
icebp
inc
jae
dec
jp
jno
mov
xchg
stos
ret
ret
xchg
mov
inc
outsl
push
jg
dec
jbe
push
das
push
aas
es
pop
out
jmp
iret
neg
xchg
mov
inc
outsl
push
jg
dec
jbe
push
das
push
aas
es
pop
out
mov
jnp
mov
push
push
test
cmc
jbe
mov
das
add
insl
sbb
xchg
sti
int3
or
lret
icebp
loope
xor
mov
int3
scas
inc
fcomp
scas
cld
sti
outsl
inc
pop
cmp
out
xor
scas
dec
cmpsl
pop
dec
aad
clc
sub
imul
add
xor
and
outsl
and
dec
cmpb
dec
lahf
mov
xorb
dec
imul
pop
xchg
mov
ret
cli
ja
lret
nop
movsb
xchg
xchg
fcoml
jne
dec
sbb
and
push
int
mov
fidivl
dec
addr16
mov
sbb
jecxz
shll
mov
xchg
sbb
adc
mov
adc
and
xchg
call
cmc
dec
mov
out
or
mov
adcb
test
jg
fbld
loope,pt
into
test
into
jmp
dec
pop
mov
icebp
test
inc
adc
cmp
push
sbb
jnp
jmp
mov
cmp
pop
pop
int3
fsubrs
and
and
pop
sub
push
add
jmp
rclb
movsl
pop
orb
mov
pop
in
ljmp
mov
pop
sbb
sbb
sub
movsb
xor
dec
and
jg
mov
adc
push
incl
or
pop
cld
enter
or
jno
sbb
fs
sbb
in
add
or
xchg
rcll
mov
or
mov
xchg
clc
rcrl
add
lods
adc
jae
arpl
rcrb
pop
ret
mov
jl
sub
inc
rolb
pop
cmpsb
arpl
sbb
gs
rcrb
adc
jns
movsl
jmp
and
pop
add
jmp
push
sbb
jle
ja
xlat
ret
sbb
mov
mov
pop
adc
ss
adc
jae
fists
inc
outsb
push
shrb
dec
cmp
jecxz
mov
pop
sarb
movsl
das
inc
cmp
jb
rol
jecxz
push
sub
push
mov
out
inc
mov
fimull
test
sbb
jo
adc
insb
loope
leave
push
jge
pusha
jns
out
mov
jno
cmpsl
movsl
inc
inc
pop
pop
repnz
imul
sub
add
aas
jle
hlt
shlb
fdivrl
cmovno
lret
xlat
fstpl
mov
mov
xor
lea
call
add
test
sub
or
cmp
ljmp
xor
mov
add
mov
add
fisttpl
or
insl
in
fstpl
sub
add
pop
incl
icebp
pop
xchg
stos
cmp
dec
dec
cmp
cli
gs
fsin
movsl
rorl
adc
pop
mov
xchg
sub
fcoms
icebp
pop
dec
mov
push
in
call
inc
nop
xchg
test
jns
mov
decl
sub
mov
imul
add
leave
daa
cmp
sbb
mov
iret
push
mov
movsl
ja
fists
js
xchg
inc
data16
lcall
jnp
movl
test
cwtl
in
xchg
lods
movsl
or
add
rcrl
adcb
insl
and
add
jp
pusha
sub
aam
pop
fistpl
js
ja
cmp
xchg
mov
pop
test
clc
cmpsl
fcoms
cmp
xchg
dec
mov
push
add
ret
dec
cmp
lea
sub
xchg
stos
or
ds
xchg
shrl
mov
insb
and
pop
or
xlat
mov
pusha
cmpb
jmp
imul
and
stos
pop
shlb
adc
sub
lods
add
sub
jno
and
cmc
les
repz
icebp
adc
ja
cmpsl
sbb
aaa
and
pop
adc
enter
adc
lods
push
fstps
mov
dec
sub
in
psrad
jge
and
or
jle
adc
jne
iret
fsub
cmp
arpl
mov
jno
jg
push
xchg
dec
jp
pop
push
lahf
and
xchg
outsb
sbb
sbb
fs
dec
or
fucomi
aad
pop
push
push
push
adc
pop
ss
shll
and
and
sub
inc
mov
dec
add
jecxz
cltd
xchg
insl
dec
imul
adc
call
popf
fwait
pop
push
dec
addr16
inc
aad
orb
in
sbb
lock
pop
fsts
sub
out
mov
movsl
xchg
fstpl
inc
sub
ja
cmp
lea
cmp
pop
inc
test
cwtl
push
sbb
std
out
mov
jo
inc
xor
xchg
add
bound
push
xchg
fildll
mov
mov
sbbb
xor
add
or
add
into
data16
lock
jb
inc
dec
dec
jo
andl
xchg
jns
xchg
movsb
inc
xor
push
inc
daa
cmp
movsl
sarl
les
test
cwtl
or
into
mov
add
aad
add
jp
loope
fldcw
aad
jmp
into
and
dec
sbb
mov
in
pop
out
and
fwait
ss
lods
popa
mov
mov
lods
lcall
dec
mov
ret
aas
pop
mov
sub
and
cwtl
sub
jmp
mov
mov
and
sarb
int
sbbl
pop
xchg
in
inc
cmp
es
pop
push
lcall
inc
inc
and
lret
test
push
mov
cmp
les
cmovns
push
insb
test
mov
incb
sub
xor
aam
ret
pusha
adc
pop
adc
and
mov
or
and
and
mov
movsb
insl
pushl
or
mov
fidivs
sbbl
fwait
mov
jns
neg
lea
jmp
jnp
xchg
inc
int3
loope
jge
cli
js
fstps
fistl
lea
rcl
push
add
add
outsb
mov
push
cmp
mov
lahf
sub
ret
and
fwait
and
inc
pushf
mov
neg
add
fnsave
enter
lret
iret
bound
dec
test
jbe
mov
dec
ljmp
xorb
cltd
jg
mov
cld
jno
ja
out
mov
aaa
lret
pop
or
sub
sub
lcallw
shll
mov
cmpb
add
add
lcall
ficomps
je
shll
push
in
out
int3
rol
push
mov
arpl
test
repz
cmc
lods
mov
add
and
pop
xor
pop
stc
out
pop
mov
das
mov
jmp
inc
in
aaa
out
loop
xchg
int
cmp
shll
jmp
inc
je
mov
sbb
xchg
inc
inc
dec
stos
repz
adc
cmpb
dec
push
push
in
insl
fldenv
test
loope
ja
push
mov
jge
movl
test
fwait
and
add
dec
pop
inc
iret
inc
pop
adc
jbe
lcall
je
test
cmp
cmp
out
stc
cmpsb
xchg
xchg
out
movsl
xchg
in
jno
cmp
push
cmpsb
out
pop
xchg
testb
mov
mov
jge
sub
mov
add
setnp
ds
mov
cmpsb
xor
or
add
lock
lret
imul
outsl
xor
pop
mov
mov
push
mov
adc
ds
pop
ds
lods
add
cmpsl
push
sbb
test
xchg
cwtl
xorb
sub
push
mov
nop
mov
lods
xchg
sar
push
mov
jg
mov
mov
dec
in
cmp
jge
out
ds
jge
lock
mov
and
scas
jle
cwtl
sub
add
negb
imul
rclb
pop
rcll
push
adc
clc
mov
stc
mov
jbe
rorl
repnz
push
dec
fisubs
and
cmc
movsb
bound
xchg
aaa
push
sbb
loop
cmp
and
popf
and
xchg
sahf
setge
push
sub
mov
add
inc
enter
ret
fistps
loopne
xchg
pop
cwtl
mov
adc
loopne
mov
xorl
push
loopne
adc
and
cmp
jbe
pop
aad
les
jae
dec
icebp
loope
pop
sbb
insb
xchg
cmp
rorl
pop
outsl
xchg
clc
adc
inc
mov
xchg
or
cli
cmc
push
shll
pop
xor
mov
push
loope
rorb
sbb
in
rorl
jno
push
iret
mov
xchg
sbb
jno
cmpsb
jg
inc
int3
leave
mov
dec
mov
dec
ret
xor
mov
je
nop
xchg
xchg
mov
xor
or
aaa
lds
sti
pop
pop
xor
xor
inc
adc
cld
das
test
sub
dec
add
in
in
xchg
lea
addr16
scas
push
inc
jbe
push
jae
xor
push
hlt
sbb
int
enter
push
add
loop
or
mov
sub
test
shrl
lods
mov
ja
sbb
or
dec
mov
stc
cmpb
cmp
fsubs
stc
sub
decb
testl
aam
jo
out
mov
test
movsb
lods
jl
push
push
sub
scas
div
add
sbb
add
sub
jg
inc
test
inc
imul
mov
mov
mov
jp
aad
mov
out
orb
or
mov
push
add
mov
push
stos
jnp
fists
or
mov
loope
jl
insb
inc
pop
aaa
ss
dec
cmp
push
aam
insb
mov
sahf
jmp
jle
adc
sub
fmull
icebp
adc
fidivl
bound
aad
arpl
outsl
dec
ror
les
test
stos
addr16
mov
xor
jno
loope
push
sub
push
or
jmp
inc
dec
and
hlt
inc
inc
sbb
add
cmp
mov
fadd
orl
sbb
int
jge
imul
loopne
inc
push
sbb
xchg
int3
test
pop
xchg
jno
jno
add
pop
pusha
sub
pop
mov
dec
ret
out
xor
insl
lods
std
sbb
into
or
shr
sbb
sbb
leave
adc
xor
xor
cld
sbb
mov
sbb
inc
loopne
or
xchg
fwait
icebp
lcall
int3
ds
sahf
xchg
pop
xchg
push
and
js
inc
das
xchg
cmp
mov
loopne
xchg
faddl
sub
jno
jmp
sub
push
mov
sbb
xchg
icebp
daa
mov
sub
jmp
xchg
movb
rolb
movsl
sub
jmp
xor
sti
bound
push
iret
push
fsubrs
in
xor
xor
or
push
fs
sti
call
inc
mov
fidivrl
aas
mov
daa
mov
mov
dec
add
pop
xor
and
cmpsb
std
ret
stos
mov
cmp
mov
mov
out
sub
outsl
test
subl
popf
fcmovne
adc
repnz
aad
jg
lret
cli
pop
aam
test
add
sub
mov
stos
mov
adc
call
stos
sub
xor
es
fs
push
jns
test
dec
arpl
dec
push
adc
out
lods
adc
adc
mov
lods
lcall
mov
mov
js
and
scas
js
int3
mov
add
fcomps
gs
jb
nop
rolb
aad
mov
mov
test
push
mov
add
gs
outsb
adc
ret
or
jns
cwtl
push
lods
and
ret
pop
loop
mov
lods
push
shl
mov
mov
arpl
aad
cld
or
insb
inc
andb
jb
add
dec
push
inc
cltd
popf
fnstcw
fsubrp
lret
adc
aas
pop
or
call
add
enter
push
outsb
or
js
push
dec
jg
jecxz
dec
outsl
scas
xor
jecxz
pop
jne
xchg
fsubrs
testl
jnp
mov
test
fwait
in
sti
pop
push
ss
sub
pop
push
jg
orl
inc
inc
jl
mov
arpl
ret
jecxz
lods
add
mov
add
stos
rcll
xchg
orl
xor
sti
xor
cltd
add
jmp
movsl
jo
test
into
rolb
sbbl
out
pop
lret
add
enter
and
xchg
jge
cmp
repz
pushf
leave
mov
jne
sbb
mov
xor
shlb
sbb
mov
jno
sbb
dec
repz
push
or
aam
lock
mov
inc
or
pusha
add
bound
repz
test
mov
dec
pop
out
xchg
push
cmp
push
inc
or
mov
bnd
jp
push
push
aad
adc
or
ljmp
out
bound
push
fistpl
lahf
push
insl
lock
mov
mov
fs
lret
push
pop
xor
mov
fcomps
add
out
inc
nop
push
daa
pop
dec
dec
add
dec
movb
iret
lcall
ja
in
imul
mov
mov
xchg
stc
iret
les
pop
adcl
cs
loop
mov
push
shll
clc
daa
rolb
daa
test
sub
xchg
cmc
aad
lahf
test
insb
cwtl
or
cmp
sub
mov
mov
fadd
sbb
sahf
pop
mov
mov
fldenv
test
test
dec
mov
jno
dec
cmp
pop
test
icebp
jno
mov
shl
lods
mov
xchg
add
or
inc
ljmp
sarb
add
test
test
mov
push
scas
dec
dec
ret
fcoml
lds
jns
ret
add
icebp
lock
or
push
push
push
lods
jmp
and
mov
sbb
mov
cmpsl
xor
hlt
sub
mov
pop
xchg
and
test
push
add
jmp
mov
jecxz
jmp
imul
not
mov
dec
mov
push
pushf
jecxz
test
pop
dec
cmc
pusha
int3
push
into
dec
jno
cld
cmpsl
dec
mov
push
dec
cmp
jne
lds
loope
inc
xchg
sbb
iret
ret
filds
fs
push
or
movsb
lahf
mov
mov
pop
or
sub
clc
dec
add
lods
adc
inc
lcall
push
mov
sahf
add
jle
cld
fwait
lds
inc
xlat
cmpsb
psllw
adc
arpl
insb
mov
jns
scas
or
cmp
mov
dec
sbb
adcb
mov
sub
sbb
pop
sub
cld
mov
in
xchg
les
test
lds
cmp
leave
mov
jp
mov
fwait
js
or
pop
jecxz
data16
cli
mov
or
cmpsb
mov
and
lret
fldt
and
cld
sbb
jns
std
cmp
aam
jg
jmp
pop
and
sub
mov
sbb
or
add
test
call
pusha
jbe
shll
sub
pop
nop
aas
les
mov
sbb
aam
sti
sub
hlt
icebp
sahf
xor
dec
push
inc
icebp
scas
push
into
setno
mov
pushf
and
fistpll
stc
in
push
or
jle
sbb
xchg
push
jbe
pop
xor
push
imul
lcall
idivb
dec
or
cld
jl
push
fnsaves
scas
mov
adc
sbb
mov
xchg
cmp
ret
lds
push
dec
pop
add
cmp
xchg
daa
rcl
lret
repnz
sbb
pusha
lcall
out
cwtl
lods
fldcw
mov
dec
in
push
cmp
shll
sbb
ds
cmp
in
rolb
mov
sub
hlt
xchg
pop
gs
push
mov
mov
jae
rcrb
setno
ds
test
lods
xlat
xor
add
xchg
and
daa
mov
scas
icebp
cmp
out
lods
in
fnstsw
sub
push
push
pop
sbb
outsl
cld
push
clc
ret
jb
jne
xchg
pop
mov
repnz
ss
pop
mov
std
fwait
mov
mov
push
mov
mov
push
sbb
daa
mov
pop
mov
test
out
cmp
mov
mov
hlt
xor
sub
mov
jg
pop
in
mov
dec
fwait
push
lcall
test
dec
sbb
aaa
inc
out
inc
pop
leave
repnz
xor
addr16
mov
stos
mov
mov
xchg
sbb
movsb
push
xchg
adc
dec
mov
dec
shr
pusha
mov
and
sub
les
dec
mov
call
es
aam
cmp
sub
jl
dec
xor
cltd
cli
testl
push
inc
inc
cmc
dec
int3
push
dec
aam
inc
or
sbb
outsl
inc
out
sub
push
repnz
or
in
fadds
push
pop
jg
adc
dec
xchg
out
adc
mov
adc
push
adc
lcall
js
test
mov
xchg
stos
inc
dec
or
inc
lret
enter
xor
pop
adc
arpl
and
pop
xlat
repnz
mov
cmp
xor
ds
jnp
aad
push
add
push
cmpsl
xor
pop
bound
cmp
aaa
shr
push
push
loope
addl
in
popf
out
sub
pushf
mov
movsb
mov
add
fmull
dec
pop
or
add
les
mov
call
cmp
mov
scas
int3
inc
and
mov
mov
in
shrb
adc
jb
push
jle
aaa
push
es
imul
je
fcmovnbe
sbb
fisubrl
lods
jg
cmp
cmp
scas
jbe
adc
xor
nop
dec
rcl
out
sarl
xchg
push
or
clc
dec
pop
sub
orl
push
sti
dec
mov
mov
xchg
test
pop
test
mov
inc
ss
xchg
outsb
xchg
jle
dec
sub
mov
shlb
imul
dec
add
jmp
roll
rcll
mov
jmp
cltd
imul
das
test
mov
mov
mov
inc
jnp
scas
pop
rcll
push
rolb
mov
sbb
sbb
iret
or
fstpl
adc
add
arpl
mov
int3
mov
fcom
mull
ret
aad
lds
imul
mov
inc
jp
push
test
or
lahf
fmull
shl
jle
jo
fs
and
push
sbb
dec
xchg
dec
popf
jo
sarl
fildl
or
mov
movsb
aad
ret
inc
pop
add
inc
inc
jecxz
lahf
mov
movsl
arpl
sahf
iret
bswap
loope
cmp
cltd
pushf
or
popf
inc
inc
jle
lcall
jge
cmp
push
inc
imul
ljmp
sahf
andb
fimull
xchg
sbb
mov
jns
out
sub
dec
int
xchg
popa
sub
insl
fwait
or
push
adc
mov
clc
cmpsl
loopne
xchg
out
inc
js
push
lret
xchg
mov
lcall
pop
push
or
and
js
mov
or
icebp
mov
fisttpll
xchg
xchg
flds
xorl
push
cmpsb
inc
cmp
imul
inc
mov
das
sarl
mov
cmp
shl
cli
add
in
js
add
push
pop
push
nop
inc
lret
movsl
or
popa
xor
sbb
mov
in
jl
jge
push
adc
mov
aas
inc
mov
addr16
and
sahf
jnp
pop
dec
popa
adcl
mov
shll
fsts
sahf
mov
push
sbb
pop
out
cmc
adc
or
sub
shr
dec
inc
add
mov
test
fwait
sbb
push
dec
rolb
out
cld
sbb
es
rorb
cmpsb
movsb
or
insl
fnsave
ljmp
lcall
and
mov
fdivrl
jge
ds
xor
add
cmp
push
adc
and
mov
mov
repz
js
ret
xchg
cwtl
cwtl
mov
jl
in
fldl
outsb
and
add
xchg
fistl
gs
mov
cmp
dec
or
dec
ss
filds
and
pushf
ret
jg
rcll
jno
shlb
xchg
lahf
and
cmpsl
movsl
ret
pop
dec
sti
fldenv
pop
outsl
cmp
insb
push
xor
lret
leave
fxch
neg
xchg
mov
inc
outsl
push
jg
dec
jbe
push
das
push
aas
es
pop
out
jmp
iret
neg
xchg
mov
inc
outsl
push
jg
dec
jbe
push
das
push
aas
es
pop
jmp
jmp
iret
neg
xchg
mov
inc
outsl
push
jle
dec
ja
push
cs
aas
daa
pop
out
jmp
iret
neg
xchg
ss
mov
dec
jbe
jno
sahf
rcr
into
loopne
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
arpl
push
popf
xchg
test
in
push
fucom
sub
rcrl
xchg
dec
xchg
pop
arpl
push
popf
and
xor
add
adc
repz
fstpl
orl
pop
jp
push
pop
lea
cmp
sub
sbb
adc
cli
test
cmp
mov
aas
les
lods
sbb
inc
loop
int3
jo
xor
ret
fldenv
or
stos
stos
mov
pop
inc
mov
cmp
or
add
vcmpneq_oqss
sub
xchg
sbbl
scas
mov
adc
sub
shll
mov
or
sti
int
loopne
insb
dec
mov
bound
ja
fsubr
xor
cld
inc
adc
push
repnz
pop
pop
mov
or
incb
or
call
jecxz
xor
fstpl
mov
jl
adc
cmp
fcompl
sbb
mov
js
mov
stos
lods
push
inc
lea
xor
and
add
or
cli
sub
lret
insl
stos
jge
dec
xchg
xor
ret
es
hlt
push
adcl
jecxz
lahf
dec
mov
mov
mov
dec
sbb
lods
adc
dec
movsl
xor
mov
insb
xchg
jb
push
fcoms
cmc
sub
or
das
in
clc
imul
std
add
adc
jecxz
repz
mov
dec
xchg
pop
arpl
push
popf
and
xor
add
adc
jecxz
repz
mov
dec
xchg
pop
arpl
and
dec
and
add
mov
das
xchg
into
fcomps
out
lret
cmp
inc
xor
repnz
cmpl
push
shrl
testl
test
cld
outsb
enter
pushf
add
rol
pop
std
sbb
jmp
leave
movsb
adc
mov
mov
scas
mov
jp
in
and
ljmp
or
push
push
and
mov
loope
sub
hlt
in
add
mov
lcall
inc
insl
movsb
hlt
fistpl
lock
repz
push
lock
dec
popf
xchg
push
mov
lds
inc
mov
popf
or
mov
adc
sub
dec
lahf
cld
out
dec
push
test
jg
je
fsubs
call
lds
cli
je
sbb
outsb
xchg
xorb
fstpt
mov
xor
mov
fs
adc
popf
jbe
jle
cmp
xchg
and
std
daa
fmuls
lret
lods
in
adc
mov
mov
sbb
inc
test
adc
repz
sbb
sbb
nop
or
mov
cltd
pop
xchg
das
scas
xor
fdiv
decl
sahf
cmp
pop
xchg
sbb
jnp
dec
sti
push
pusha
dec
pusha
push
jmp
mov
out
popa
outsb
sti
and
mull
sti
movsl
jno
xchg
and
mov
add
push
jge
mov
call
jmp
sbbl
cs
xor
cmc
fisttpll
sarb
int
fwait
nop
stos
cmp
add
pop
pop
xchg
cwtl
adc
outsb
mov
and
insl
sub
hlt
outsb
pop
mov
inc
cld
xor
mov
push
or
or
add
jo
cmp
es
mov
test
xchg
popl
repz
push
popa
addr16
and
mov
cmp
mov
push
imul
sub
in
rcl
enter
mov
xchg
pop
inc
imul
fnstenv
xchg
ffreep
dec
hlt
sub
or
test
out
mov
add
shlb
arpl
mov
dec
push
pop
frstor
pop
jbe
push
xchg
cmpsl
daa
add
movl
stc
sub
repz
xlat
test
or
lret
sub
inc
jge
pop
insb
incl
lret
push
mov
and
mov
es
xlat
lds
outsb
pop
lret
jb
mov
iret
cli
mov
pop
push
out
sbb
popf
insl
pop
lods
test
es
testl
test
jo
or
add
pop
sbb
sti
arpl
sub
cs
stc
test
arpl
jns
sbb
sbb
cmp
sub
data16
bound
inc
cmpsb
stos
mov
rorl
mov
cmpsl
lret
mov
icebp
and
and
xor
cmpsl
mov
add
or
daa
sbb
fisttps
xchg
fs
pop
sub
rorb
lods
sub
inc
fstp
icebp
out
cmpsl
adc
jle
pushf
jae
push
mov
jae
imul
xor
gs
sub
dec
or
mov
pop
push
adc
dec
jmp
jne
mov
dec
jge
into
cmp
adc
xchg
mov
mov
mov
lret
add
xor
adc
stos
xchg
inc
cmp
pop
dec
scas
dec
dec
cmc
mov
lahf
mov
xchg
jno
fidivrs
jbe
xor
call
push
sub
lds
xchg
cltd
rcll
adc
cmpsl
data16
pop
add
adc
movsl
fs
add
scas
add
ljmp
les
pop
sbb
or
add
cs
xchg
mov
cld
xor
mov
icebp
mov
and
cmpsb
jg
out
ljmp
cwtl
ret
ret
xor
fisubrs
into
pop
fimuls
jb
fcoms
adc
dec
out
pop
enter
sub
xchg
mov
pop
outsb
lret
adc
jg
in
and
test
xor
cmpsb
mov
xor
repz
lahf
fisubrs
pop
inc
inc
xchg
cmp
lods
movb
lcall
push
jnp
rcl
pop
fistl
inc
mov
and
cmp
jmp
pusha
xchg
or
in
jae
out
test
and
out
out
js
inc
out
push
std
pop
pushf
bound
jns
dec
adc
or
cmp
int3
xchg
lret
ret
enter
sub
adc
test
aaa
js
out
adc
insb
jnp
bound
lock
sbb
fdivrp
ljmp
iret
xchg
sub
lahf
adc
roll
pop
movsb
push
xor
sbb
cs
movsl
adc
enter
fs
mov
mov
imul
fwait
lcall
rolb
and
or
je
cmp
cmp
and
add
sub
dec
mov
sbb
inc
movsl
cmp
jno
imul
mov
test
push
pop
add
test
test
mov
xacquire
pop
add
xchg
icebp
cmpsl
xor
and
xor
mov
fsub
nop
xor
shll
imul
xchg
mov
das
jnp
outsb
or
mov
and
cmp
rolb
adc
push
add
or
call
add
mov
ret
inc
rorl
ds
cmc
inc
repnz
mov
pop
dec
xorl
push
mov
xor
outsb
test
cwtl
inc
sti
out
and
fdivrp
jb
aam
imul
scas
mov
mov
fdivr
mov
mov
and
sub
mov
out
je
lahf
stc
xor
ljmp
adc
sub
rol
mov
mov
dec
mov
mov
jmp
push
push
lock
out
inc
inc
jb
dec
mov
xchg
push
out
sbbb
mov
jo
andl
mov
cmp
mov
gs
lea
pop
outsb
imul
push
out
push
fsubrs
dec
test
orl
cmc
add
divl
sub
xlat
dec
or
cmp
jl
ja
icebp
sahf
out
jnp
movsl
mov
arpl
hlt
sbb
cli
imul
cmpsb
push
jle
lea
mov
ret
cmp
xor
add
xor
push
jbe
imul
add
push
xor
aaa
sbb
lahf
and
pop
clc
inc
inc
loop
sbb
push
add
jns
mov
call
dec
adc
dec
jo
inc
xchg
sub
xchg
mov
jnp
push
enter
lahf
rcll
clc
and
cmp
mov
jle
xchg
jecxz
add
icebp
pop
call
test
dec
add
fldcw
sub
ret
mov
pop
xor
xchg
fwait
add
jle
xchg
dec
adc
repz
dec
pop
add
ds
pop
dec
lcall
dec
or
scas
sbb
dec
pushf
inc
xchg
movsb
arpl
xor
imulb
xor
hlt
sub
stos
stos
inc
inc
lret
idivb
popa
ret
test
cmpsl
fdivrs
pushf
testb
push
int3
je
lock
inc
inc
insl
cmp
add
jmp
sti
sbb
arpl
stos
out
scas
push
scas
cwtl
bound
cmp
mov
pop
inc
ja
repz
pop
and
mov
jg
xchg
mov
jnp
inc
or
or
cmp
outsb
jmp
or
je
pop
and
fiadds
rolb
sub
insb
aad
sbb
xchg
ret
or
std
into
sub
push
clc
std
aam
movsl
jne
and
lds
pop
leave
dec
adc
fwait
outsb
loope
shrl
outsb
sbb
pop
sub
xlat
cwtl
and
mov
cld
jno
frstor
pop
cmp
imul
pop
and
popf
mov
mov
lods
outsl
imul
xchg
insl
rcl
addb
jbe,pt
in
inc
or
mov
cmp
out
call
lret
mov
cs
loop
fnstcw
or
dec
ja
ss
jmp
mov
test
out
stos
loop
xchg
add
mov
scas
xchg
mov
mov
fldt
sti
mov
rcrl
xor
cli
js
mov
icebp
int3
movl
test
jg
dec
dec
pop
mov
mov
in
xchg
sarb
js
int
fcom
fldl
and
out
bound
out
or
sarb
js
mov
sub
pop
sbb
add
aad
sbb
or
jmp
arpl
xor
mov
inc
into
push
xchg
adc
jne
jbe
xlat
mov
cmp
jmp
adc
sbb
sbb
mov
pop
mov
into
les
fdivrl
or
pop
icebp
je
pushf
sar
in
push
notb
cmpsb
add
aaa
cltd
fsubr
mov
std
xchg
in
cltd
inc
loop
cwtl
dec
pop
xor
sub
pusha
cmp
push
in
sbbb
jno
mov
mov
mov
add
push
sbb
sub
dec
mov
xor
shrb
sbb
mov
sbb
bts
fs
lock
inc
xor
pop
sbb
adc
sbb
adc
outsl
jbe
mov
and
aad
pop
jp
lods
xor
push
mov
push
pop
test
shrb
imul
mul
clc
divl
scas
and
pop
xchg
sbb
outsb
cwtl
mov
fimull
or
js
popa
or
lea
cmp
dec
jecxz
mov
jg
mov
push
cwtl
sbb
mov
outsb
out
mov
adc
daa
xor
adc
push
in
cld
cmp
test
lea
mov
fadds
cld
jmp
inc
push
repnz
scas
xchg
xchg
dec
cli
jne
jecxz
aaa
lahf
sbb
pop
mov
push
sub
cltd
imul
pop
cmp
shl
add
test
lret
inc
push
data16
xchg
in
fbld
stos
int
mov
repz
arpl
loopne
pop
adc
adc
aaa
add
out
push
push
mov
sbb
fs
xor
dec
mov
mov
aam
pop
pop
push
sub
adc
xchg
ljmp
pop
lahf
int
push
inc
in
pop
jmp
stos
leave
xor
ja
dec
mov
lea
dec
ficomps
push
nop
test
jecxz
sbb
or
movsl
pop
je
dec
dec
dec
frstor
js
cwtl
cmp
xchg
mov
pop
or
fcoml
leave
in
inc
xor
or
sahf
add
jle
scas
cmp
cmp
xor
sbb
jns
pushf
sub
push
jbe
mov
les
cmp
sbb
inc
cmc
jmp
push
jecxz
cmp
xor
sbb
mov
sub
dec
push
and
or
fildl
inc
lret
xor
xor
cmc
imul
test
cmp
ret
adc
jne
out
inc
push
add
inc
add
mov
mov
movsb
popf
ret
fistps
sbb
fcoms
outsl
xor
mov
ljmp
cmc
add
sbb
sub
dec
scas
push
arpl
montmul
cmpsb
add
data16
jl
mov
das
or
mov
mov
pop
inc
or
rcl
cmpb
dec
xor
xchg
push
bound
mov
sub
inc
add
pop
lahf
pusha
ss
fwait
dec
fcom
inc
loop
imul
push
data16
sub
xchg
je
jge
xor
out
xor
pop
add
les
loopne
std
out
stos
pop
fnop
jbe
addr16
and
cld
data16
popf
cmpl
rcrl
leave
sarb
scas
lods
pushl
cs
cs
or
xor
xor
in
xchg
and
push
lret
popa
push
adcb
fs
xchg
ficoms
addr16
jb
cmpsb
xchg
pop
fstps
xlat
mov
out
xchg
jbe
sub
dec
scas
iret
dec
inc
pop
lret
out
xlat
fcmovnbe
call
adc
jns
xchg
push
sahf
push
test
push
or
mov
or
sbb
dec
adc
add
jp
jl
mov
stos
in
cs
rcll
out
cmpsb
rcl
pusha
rolb
mov
inc
cmc
xor
fmull
cmc
xor
out
sbb
sbb
cvtpi2ps
sbb
mov
push
mov
mov
lret
sbbb
jg
jmp
xchg
jg
iret
mov
push
xchg
pop
cld
nop
pop
cmp
xchg
daa
leave
add
push
sbb
shll
mov
jbe
rolb
inc
mov
adc
jmp
lahf
or
incb
ljmp
loopne
xlat
cmp
inc
cli
or
addr16
je
cmp
fistpl
adc
pop
or
ret
mov
or
add
iret
dec
test
outsb
lcall
popa
stc
daa
adc
push
mov
inc
jo,pt
idivb
hlt
add
aaa
and
daa
popa
js
lret
mov
ror
clc
mov
push
sub
cmp
xchg
xchg
xchg
out
stos
mov
call
lahf
xchg
push
push
ljmp
jnp
pusha
add
ljmp
jmp
and
inc
and
pusha
mov
iret
push
push
fisubl
xor
in
push
outsl
mov
or
das
cs
xor
mov
out
sti
sub
dec
jo
out
mov
inc
subb
pop
out
xor
pop
add
pop
rcpps
aam
dec
cmp
repz
jle
adcb
fwait
xor
pop
or
nop
popl
inc
push
lret
stc
jbe
mov
pop
sbb
int
sbb
sub
jae
jmp
jae
inc
dec
ffreep
stos
sub
jg
fmull
jb
and
getsec
pop
addr16
aas
enter
and
and
out
adc
and
int
insb
push
mov
pusha
gs
push
bnd
mov
dec
xor
xchg
out
sbb
dec
icebp
std
pop
sub
or
xor
lahf
fwait
or
dec
sbb
sub
iret
in
xchg
pop
and
pop
divb
mov
mov
cmp
gs
mov
inc
cmpsl
loope
out
sub
mov
test
jmp
jnp
cwtl
inc
scas
lret
push
movsb
add
push
adc
jne
int
xchg
into
pop
enter
fstl
jb
sub
jb
inc
stc
aas
andl
fiaddl
fwait
inc
aad
imul
repz
xor
adc
loop
jmp
clc
imul
outsb
pop
and
addr16
pusha
push
nop
mov
out
push
push
ffreep
stc
std
cmp
fstpl
xchg
shrl
setl
repz
fs
mov
lds
jne
in
and
mov
sar
repz
xor
fwait
ret
dec
ss
jl
rcrl
sub
cli
pop
ret
and
pop
cli
xor
in
movsb
mov
push
loop
xlat
jmp
push
push
xchg
testl
sbb
inc
add
pop
mov
dec
jmp
mov
push
xor
roll
and
xor
popa
add
testl
rep
pop
iret
cld
adc
pop
sub
in
scas
cmp
sti
scas
outsl
fs
test
cmp
jae
jmp
push
imul
xor
sbb
cli
mov
xor
push
cmp
inc
sub
lret
dec
dec
faddl
cmp
repnz
sub
in
ja
fs
push
int
mov
mov
mov
daa
inc
in
pop
jnp
nop
cmp
lock
daa
adc
mov
adc
dec
xor
or
ffreep
mov
call
sbb
push
xchg
in
push
cmpsl
adc
movsb
push
pop
fucomp
bound
outsl
lret
test
push
out
sub
mov
fdivl
ljmp
imul
xchg
pop
ljmp
and
jle
mov
mov
fadds
cmp
insl
push
test
out
adc
sarb
push
mov
outsb
or
mov
jne
gs
mov
test
pop
out
adc
and
add
sbb
faddl
jl
xchg
xor
icebp
dec
mov
rolb
pop
out
adcb
insl
xor
push
cmpsb
dec
pop
loop
pop
sub
pop
xchg
fs
adc
cmp
sti
adcb
add
xchg
mov
in
shll
mov
dec
mov
outsl
mov
mov
fstps
or
rcr
jl
cmpb
dec
insb
mov
mov
inc
jg
and
imul
ds
jno
jle
or
aas
jle
xchg
dec
aas
js
aas
jno
movsl
adc
leave
push
sbbb
push
lcall
adc
mov
fwait
movsl
cmc
sub
pop
ret
sub
jecxz
pop
push
dec
add
inc
clc
inc
psubq
or
cmp
xorl
fwait
insb
add
and
ss
cmc
xor
pop
dec
insb
mov
cmpsb
add
and
int3
xchg
push
jge
shrb
popa
jecxz
ret
test
insl
inc
fsub
fadds
mov
fidivrs
dec
inc
shrl
cmp
pop
dec
and
pop
jg
xor
mov
in
shrl
xchg
sbb
in
sub
push
cmp
mov
dec
inc
push
jmp
loope
and
int
or
cli
ds
jle
mov
dec
loope
int3
clc
insb
mov
xor
mov
cmp
xchg
aam
add
pop
jno
std
pop
es
in
push
push
sbb
mov
pop
loope
jae
dec
int3
gs
insl
add
insl
xchg
xor
lret
mov
cmpsl
cmp
add
sti
shl
in
add
insl
cmp
mov
or
enter
dec
or
push
push
addr16
dec
push
leave
stc
into
call
cld
fidivl
adc
lea
nop
adc
les
dec
aas
dec
std
mov
les
lock
outsl
xlat
adc
cmp
nop
nop
jg
or
into
cmpsb
mov
xor
mov
push
fisubrs
test
out
push
pop
clc
pop
jbe
in
fcmovnbe
jbe
sahf
pop
mov
mov
es
xorl
dec
and
movsl
mov
add
ret
pop
pop
imul
mov
adc
or
mov
lcall
fdivrl
or
sahf
sub
jne
inc
mov
rol
stos
ds
int3
lock
call
cld
sbb
movsl
cmpsl
push
addl
scas
xchg
inc
jle
sbb
mov
popf
fwait
outsl
lret
lods
sbb
fistpl
mov
adc
xchg
das
fisubrl
fidivrs
mov
aaa
enter
pop
pusha
dec
mov
sub
inc
popa
dec
push
cmp
sub
test
popf
pop
mov
or
outsl
mov
push
and
xor
pop
in
pop
jecxz
gs
sub
dec
adc
inc
or
cmpsb
dec
sub
shrl
ret
aaa
add
mov
imul
mov
adc
or
sti
xchg
adc
lds
in
dec
ret
lods
aaa
into
add
jae
push
inc
fcoms
movsb
dec
ds
hlt
adc
in
and
fs
jg
or
bound
xchg
lock
xor
xor
push
mov
mov
sub
add
xchg
jno
xchg
adc
scas
xor
and
jmp
shl
adc
pop
inc
push
pop
idiv
testl
xor
loop
xor
ljmp
repz
out
out
ja
add
push
sub
hlt
cmp
jle
inc
inc
push
jno
test
sbb
testl
lahf
mov
rclb
mov
and
inc
jne
aad
cmp
add
xlat
mov
jl
push
inc
pop
jecxz
push
mov
cs
push
roll
sbb
push
mov
mov
into
cltd
dec
jb
nop
sarl
in
scas
out
pop
and
shl
adc
shlb
inc
mov
inc
pop
es
bound
and
push
push
lret
jnp
outsb
cmp
and
cs
xchg
je
push
insb
push
sbb
pop
out
xlat
mov
add
cmp
test
mov
movsl
loop
cld
repz
hlt
xor
imull
out
out
cmp
jbe
and
dec
cld
jns
mov
add
add
stos
ja
fildll
mov
push
adc
xchg
dec
cwtl
jecxz
pop
mov
add
clc
mov
in
xchg
cmp
rcll
fcmovne
push
adc
mov
cmp
sub
lret
push
or
xor
aam
jb
pop
mov
cmp
fcoms
movsl
mov
test
pop
pushf
push
addr16
idivb
daa
shlb
mov
mov
mov
and
xor
add
adc
jecxz
repz
mov
dec
xchg
pop
arpl
push
popf
and
xor
add
adc
jecxz
repz
mov
dec
xchg
pop
arpl
push
popf
and
xor
int
fucom
lods
repz
mov
dec
xchg
pop
arpl
push
popf
and
xor
or
fstpl
shrl
in
cmpb
add
sbb
imul
dec
sub
jp
or
shlb
mov
jbe
stos
lock
and
jnp
or
pusha
sub
or
fcmovnbe
jecxz
sti
shlb
mov
and
xor
pusha
and
or
clc
rorl
mov
scas
fstps
sbb
inc
push
add
loop
test
cli
inc
inc
dec
and
test
rclb
dec
lods
cwtl
aad
mov
nop
imul
les
mov
stos
aas
sahf
and
idiv
and
mov
out
loop
fistpl
lret
pop
ljmp
test
jl
dec
adc
outsl
mov
inc
pop
inc
sub
dec
cmpb
adc
cli
ds
mov
lcall
or
ljmp
mov
cmp
dec
loope
mov
clc
in
pushl
stos
mov
pop
sti
cmp
cwtl
cli
mov
cmc
xchg
cld
jecxz
fsubp
inc
cwtl
rcrl
adc
pop
xor
or
pusha
sub
or
jae
jmp
shlb
mov
mov
jns
inc
pop
push
pop
sub
sbb
pop
xor
xchg
stos
ret
dec
fcompl
movsb
fbld
jo
push
pop
push
pop
cmp
pusha
inc
jo
in
xchg
scas
loope
cmc
lret
movsl
les
imul
xor
inc
inc
push
sbb
jo
or
mov
fwait
loopne
lock
and
jnp
or
pusha
sub
or
mov
fwait
loopne
lock
fwait
push
adc
lcall
add
test
mov
dec
insl
popa
and
repz
cmp
fstps
mov
cwtl
xchg
sub
pop
lahf
icebp
jmp
xor
fadd
push
adc
repz
clc
push
jno
iret
fldl
fsubrp
xchg
orl
sbb
jle
nop
es
add
leave
and
push
xchg
and
or
cmp
shrl
fcomps
lods
cmpb
add
adc
and
fdivl
imulb
or
pop
stc
lcall
push
fnsave
mov
fmuls
jl
inc
aas
stc
add
xor
add
jle
lfs
jno
je
ljmp
push
repnz
adc
mov
mov
leave
mov
decb
scas
adc
pop
insb
and
mov
inc
cli
in
std
jge
mov
or
andb
mov
inc
test
fcompl
add
fidivl
das
mov
sbb
jmp
in
push
test
std
cmp
adc
cmp
leave
jecxz
sub
push
add
test
lds
lock
xchg
mov
cmp
mov
sub
pop
movsl
out
fstl
add
loopne
lret
sub
aad
loop
int3
or
xor
in
inc
aad
jae
adc
loop
shrl
push
cmp
jne
icebp
or
mov
movsl
lret
cld
icebp
daa
cmp
sbbl
mov
push
ljmp
pushf
in
lcall
xlat
pop
fbld
shl
or
push
xchg
das
loope
cmpsb
adc
xlat
jnp
test
xchg
mov
mov
nop
pusha
jb
or
lcall
stc
push
cli
xor
mov
sub
mov
movsl
lods
mov
cmc
pop
push
popf
fldenv
data16
lcall
ja
int
fucom
es
les
jl
lods
adc
loopne
xchg
in
inc
fimull
xchg
scas
std
mov
mov
xchg
lahf
negb
dec
popf
xor
add
jmp
mov
cli
adc
sarb
adc
cmp
mov
fistpl
xorl
push
mov
icebp
push
push
mov
xor
pop
pop
in
test
sbb
cmc
adc
in
ljmp
cli
add
push
fwait
cltd
sbb
ret
jno
into
cmp
inc
push
imul
mov
push
fnstenv
jae
pop
and
mov
shl
sbb
inc
mov
mov
sbb
std
mov
lcall
lcall
mov
rorb
bound
inc
hlt
rcl
xlat
xchg
add
adc
adc
inc
es
mov
mov
mov
in
outsl
push
test
mov
cli
add
xchg
gs
add
jno
push
inc
aad
adc
lahf
sub
pop
jnp
out
adc
imul
sbb
leave
push
leave
iret
push
insl
xor
lahf
mov
or
lds
lret
xlat
repnz
aam
ror
pop
xchg
ret
adc
cld
pop
inc
jg
jns
ss
cmc
inc
sbb
push
jno
pop
mov
inc
push
lcall
andb
repnz
sarl
or
jle
ja
and
pop
decb
fimull
dec
rcrb
push
push
mov
sar
sub
fcoml
inc
test
inc
fsubl
jp
int3
jnp
inc
and
aam
dec
adc
leave
cmpl
fmul
xorb
fstpt
or
test
pop
mov
xchg
jne
jg
ret
and
mov
in
mov
cmp
xlat
sti
cmpsl
cmp
loope
sbb
mov
sti
mov
pop
popa
mov
cmp
stc
and
sbb
inc
icebp
fidivrs
outsl
push
fnstenv
scas
xchg
fwait
jno
icebp
pop
inc
sub
mov
into
mov
mov
in
sbb
push
jecxz
and
and
dec
push
mov
sbb
jb
test
and
mov
pop
jmp
cmpsb
pop
add
push
insb
sub
repz
cmc
loopne
mov
aas
mov
das
into
filds
xchg
or
dec
ficoml
mov
test
ret
jnp
inc
stos
jb
and
push
loope
pop
pusha
xor
testl
mov
mov
xchg
fmuls
cltd
lahf
mov
fmull
lcall
cwtl
cmp
mov
mov
inc
push
push
sbb
rolb
dec
mov
cmp
mov
loopne
adc
jl
xchg
inc
je
in
mov
adc
jb
xchg
aaa
lret
pop
adc
pop
adc
cmpsb
or
ficoms
outsl
mov
iret
jmp
xchg
aas
pushf
lret
pop
in
mov
mov
test
or
test
mov
jo
cmp
cmp
cmpsb
shlb
divl
xchg
jge
dec
inc
cli
mov
push
add
out
aam
and
mov
sbb
int
cmp
xchg
mov
cmc
aad
xor
mov
sbb
insl
lea
adc
mov
sbb
dec
lods
push
jno
push
mov
and
mov
mov
mov
sub
sahf
xchg
ljmp
es
jl
inc
xchg
in
in
das
into
rorb
rolb
mov
mov
cld
sub
ficompl
mov
cmc
cmpb
pop
ja
jnp
mulps
clc
adc
movsl
jnp
dec
pusha
dec
icebp
stc
xor
test
mov
mov
jo
shlb
data16
pushf
pop
rclb
push
add
rolb
mov
xchg
mov
cmp
out
adc
fadds
out
arpl
push
and
cwtl
pop
pop
scas
ret
test
gs
lds
mov
mov
rcll
icebp
es
test
jp
xchg
out
rorl
pop
ficompl
jne
ds
test
ja
xorl
sbb
inc
ret
push
in
les
mov
xchg
mov
or
push
test
mov
push
daa
add
push
mov
mov
nop
sbb
dec
mov
inc
mov
cmc
push
cmp
shll
mov
cmpsl
aad
mov
and
and
test
test
and
mov
mov
cwtl
nop
pushf
fidivl
mov
push
pop
jne
inc
rorl
and
ret
sub
push
cmpsb
add
mov
lahf
mov
test
sbb
sbb
aam
test
adc
jbe
aaa
enter
mov
mov
xchg
xchg
sub
jns,pn
mov
insb
mov
jae
and
rorl
or
jne
and
aas
pop
xor
or
aam
cmc
push
outsl
das
adc
fsubrs
xlat
cmp
push
xchg
jno
lcall
sbb
jne
insl
shll
je
out
xor
jle
subl
xorl
in
adc
pop
pop
in
test
fnstsw
lret
push
lds
adc
ret
lcall
dec
jae
stos
cwtl
in
or
fisubrs
pop
xor
sbb
lahf
add
ljmp
je
les
xchg
dec
leave
or
add
fmuls
lds
shlb
xor
mov
pop
ret
mov
jne
and
in
out
push
fwait
aas
xchg
into
clc
iret
dec
sbbb
ss
lods
or
jnp
rcl
popa
and
daa
jnp
cmp
dec
cmpsl
int3
fs
pop
ljmp
sbb
outsb
sbb
jl
lahf
fisubl
ljmp
sahf
mov
xchg
mov
and
mov
popf
sub
orb
inc
sti
or
or
mov
and
jno
or
mov
push
dec
std
je
inc
sub
adc
sub
mov
jno
fsubr
imul
dec
sbb
sar
out
scas
addr16
cltd
iret
mov
test
or
push
ret
pop
mov
test
pop
movsb
fwait
and
loopne
pop
add
sub
xchg
leave
rorb
pop
cmp
and
outsb
add
or
out
fs
repnz
lods
cmc
cmp
inc
sub
or
arpl
cmc
push
jg
mov
pushf
iret
into
arpl
xchg
rolb
cmp
add
cs
mov
cs
enter
fcompl
or
dec
jne
inc
aad
mov
xchg
loope
jo
mov
jae
int
jmp
and
or
adc
gs
jle
jns
and
or
iret
in
and
lahf
popf
sub
sub
pop
roll
cmp
xchg
pop
or
xor
movsb
mov
je
testb
testb
mov
arpl
xor
adc
clc
movsl
jo
jg
push
cmp
pop
push
ja
lcall
or
test
pop
push
aaa
iret
or
sahf
or
pop
mov
push
mov
inc
sbb
pop
pop
repz
pop
pcmpgtd
int3
or
mov
xchg
stc
sub
popl
and
pop
inc
jp
in
mov
cmp
dec
dec
sbb
sti
int3
xchg
incb
sti
mov
sbb
adcl
jbe
nop
in
cmpsb
into
mov
pop
jge
mov
xchg
pop
aad
cmp
pop
shlb
fsts
shll
loope
push
out
std
or
aam
leave
lock
dec
dec
cmpb
push
sahf
cltd
and
pop
ljmp
or
jecxz
sbb
push
test
mov
ret
pop
and
fiaddl
mov
inc
mov
jmp
fistps
cmp
jnp
push
or
jno
in
and
ja
fmull
shlb
insl
std
push
nop
mov
mov
out
aaa
in
cmp
xorb
js
jge
nop
fiaddl
adc
int3
inc
daa
push
in
mov
adc
sti
jb
or
lock
je
mov
ds
idivb
and
pop
cmp
ret
mov
cltd
or
mov
sub
loop
ja
add
fisubl
dec
push
xor
arpl
xlat
dec
pop
clc
cmp
xchg
mov
data16
addr16
and
xchg
aad
imul
xchg
sbb
pop
sbb
loope
and
in
outsl
mov
add
add
inc
and
insl
cs
ret
hlt
dec
push
mov
and
lods
jecxz
lods
icebp
pop
inc
pop
inc
movsl
in
outsb
outsl
mov
xor
mov
adc
mov
adc
mov
cmp
xchg
inc
sbb
lods
dec
cli
in
push
xor
imul
push
mov
jae
xchg
notl
mov
dec
lock
sahf
add
iret
addl
mov
pop
mov
lds
cmp
and
dec
iret
pop
shll
stos
adc
sti
ret
insl
xor
lahf
xor
mov
add
cltd
jmp
addr16
sub
jno
jmp
jae
in
hlt
aad
cld
popa
loope
movsb
enter
bound
leave
cmp
popf
xchg
cli
jo
sbb
and
inc
repz
call
xor
cmp
int
fistps
jecxz
push
fisttpl
mov
lea
scas
push
mov
dec
adc
subps
jae
add
dec
test
loope
mov
mov
ljmp
mov
jno
mov
insl
pop
fldcw
cmp
daa
pop
xor
mov
sub
jmp
lret
imul
dec
sarl
icebp
roll
jp
sbb
jp
xchg
sti
push
mov
or
push
mov
adc
lret
in
fidivrl
sub
fdiv
fs
aaa
mov
sahf
lret
push
sbb
scas
icebp
push
insl
and
push
mov
pop
lods
jae
dec
int
push
mov
jae
push
or
jecxz
sub
sub
add
xor
mov
pop
dec
and
or
mov
pop
xor
mov
es
cmp
mov
mov
sbb
mulb
pop
xor
pop
push
cmp
ret
mov
dec
mov
jbe
xor
popa
out
ja
cmp
negl
mov
shl
xor
sub
fldcw
add
xchg
cmpsb
cld
pop
jbe
mov
fs
daa
popf
dec
sub
loopne
jg
lea
fidivrl
add
sahf
jnp
jns
mov
cwtl
xor
pop
push
je
call
nop
jmp
cmp
jmp
and
jae
inc
fisubrl
fsubr
jnp
adc
mov
adc
mov
and
leave
cmp
mov
sbb
sahf
xor
xchg
cmpsl
int
sub
mov
fcomps
dec
mov
xchg
in
leave
sub
cmp
insl
mov
lret
aaa
or
pop
ret
pop
push
test
pop
push
sbb
ljmp
in
mov
xchg
pop
pop
mov
jecxz
lds
adc
inc
mov
pop
cmp
mov
xchg
mov
jge
faddl
subl
sarl
mov
mov
out
je
push
imul
add
pop
repz
arpl
sub
xorb
mov
repz
fistl
inc
mov
repz
gs
arpl
pop
and
cmp
lahf
lock
in
jp
scas
enter
mov
and
add
pop
cmp
stos
add
enter
dec
inc
shlb
push
adc
mov
and
fwait
sbb
dec
cmp
icebp
int
push
push
push
fwait
jno
dec
mov
sbbb
jnp
movsb
cmc
fbstp
in
adc
sahf
idivl
inc
enter
mov
out
push
orb
xor
xlat
mov
repnz
call
mov
inc
push
add
inc
mov
mov
inc
or
in
mov
push
xlat
push
or
roll
sbb
cmp
xor
pop
ficoms
dec
add
sub
int
add
cltd
xor
jno
and
insb
sub
loop
jle
iret
push
imul
dec
mov
jae
push
imul
inc
call
loope
fldl
add
cmp
cmc
pusha
jnp
jb
pop
jno
pop
aad
fs
js
adc
mov
adc
adc
cmpsl
jmp
out
mov
mov
sub
pop
xchg
mov
pushf
fcoms
and
sub
test
mov
or
out
or
sub
push
jno
popf
lds
sahf
adc
sbb
repnz
rep
ss
xchg
sub
pop
xor
imul
test
push
fisubl
test
orb
lock
xchg
lods
xor
mov
mov
or
stc
outsl
test
in
into
dec
out
and
push
dec
pop
ret
mov
mov
mov
flds
lret
mov
jne
std
inc
add
sub
dec
out
inc
mov
sub
les
sub
push
call
fs
cwtl
and
test
jo
sbb
js
sbb
fistl
add
sub
fidivl
lds
mov
movsl
xchg
lds
mov
and
js
stos
pop
lea
sub
add
shrb
xor
and
imul
push
adc
inc
dec
push
fmul
loopne
int3
lds
test
add
push
scas
mov
fcomi
sahf
xlat
call
sarl
scas
pop
mov
jbe
stos
shrb
xchg
stc
pop
cmp
adc
xor
and
les
cmp
jg
push
repnz
mov
pop
popf
lea
push
lods
jg
add
mov
mov
mov
cs
test
es
sub
mov
or
xchg
sbb
je
stos
push
push
inc
repnz
jo
subb
je
xor
incl
lock
sbb
xor
pop
js
test
jns
or
ja
std
in
in
sub
ja
movsl
xor
nop
call
sub
popa
cs
pop
dec
mov
imul
jnp
mov
add
imul
inc
sbb
jnp
sahf
imul
mov
mov
pop
mov
sbb
jmp
adc
or
mov
add
pop
jmp
sbb
imul
jmp
repnz
outsl
xor
and
cli
arpl
jle
clc
fxch
aad
cmp
xor
add
cmp
push
sahf
aas
and
fstpt
cmp
dec
cmc
jne
add
add
xlat
fiaddl
mov
outsb
sbb
adc
jecxz
sti
mov
shll
pop
lret
fs
rolb
adc
loopne
inc
lea
cli
add
dec
push
fdivl
and
cmc
adc
adc
push
lret
in
mov
mov
push
mov
stos
and
lds
and
jl
movsl
aaa
jp
push
sbbb
pop
nop
push
stos
inc
or
sub
ss
test
sub
pop
jbe
or
arpl
adc
cmpsl
dec
pop
mov
addr16
mov
pop
mov
add
jbe
cmpsl
adc
imul
xor
xchg
push
and
sub
aas
rclb
je
lcall
test
insb
ds
mov
inc
int
adc
lods
and
test
es
sub
inc
hlt
iret
xlat
loop
test
mov
and
mov
or
cmp
mov
in
dec
sti
lahf
dec
adc
jle
mov
pcmpeqb
sub
or
sub
push
lea
push
int
jb
subl
divb
lds
mov
xchg
pop
call
popa
imul
insb
and
jmp
mov
test
push
out
int3
inc
cmp
or
sbb
sub
ljmp
movsb
push
push
push
stos
jg
ret
mov
dec
adc
imul
bound
ret
mov
mov
inc
lds
xor
js
pop
mov
jmp
pop
fldt
cs
push
rcll
rcll
daa
shlb
repnz
insl
fidivrs
push
in
inc
es
data16
dec
repz
ret
nop
ja
cli
das
out
cmp
inc
mov
sbb
cs
mov
xor
ds
pop
jo
sub
sub
xor
mov
adc
ss
repz
test
pop
shlb
out
mov
mov
inc
fistpll
pushf
orb
cmp
pop
and
popa
adc
lahf
ficoml
mov
add
dec
das
aas
cmp
xchg
or
mov
or
cli
mov
jo
xor
icebp
xlat
into
sub
pusha
xor
jb
cmp
rorb
and
xchg
adc
imul
pusha
cmp
pop
mov
test
daa
add
popf
int3
sub
fdivs
mov
and
jno
xor
dec
pop
call
aaa
sbb
mov
aam
in
nop
ljmp
lods
adc
popf
jmp
aam
mov
pop
mov
rcll
in
fldcw
jmp
lret
inc
insl
push
jbe
inc
adc
movsb
stos
addr16
pop
mov
aas
adc
or
pop
shrl
adc
xchg
push
lret
pop
inc
imul
clc
jns
movsl
pop
aam
pop
cli
adc
ds
sub
or
repnz
das
xchg
aaa
sub
orl
push
pop
fsts
sub
dec
jne
or
jecxz
int
scas
push
iret
int3
rcrb
lods
ljmp
pop
rorl
inc
daa
xchg
iret
push
adc
dec
fisubs
pop
push
sti
pusha
and
inc
cmp
popf
xchg
notb
push
mov
cli
loopne
push
dec
cmp
mov
cmp
ds
arpl
aad
push
and
mov
xor
test
cltd
xor
or
mov
push
sbb
fwait
push
cli
push
mov
sar
add
mov
push
pop
sbb
sub
repnz
fisubs
jg
jo
pop
cmp
call
orb
mov
push
xlat
nop
lods
in
bound
xchg
sub
and
mov
xchg
outsb
sub
add
sbb
pop
out
or
jo
inc
push
adc
mov
dec
pop
push
rcll
xor
sub
sbb
in
in
mov
arpl
push
push
pop
and
fdivrp
repz
aam
out
add
outsb
xor
or
pusha
sub
or
mov
fwait
loopne
lock
and
jnp
or
pusha
sub
or
mov
fwait
loopne
lock
and
jg
or
pusha
das
jo
or
fbld
rcrb
add
xor
inc
or
pusha
stos
jo
xorb
or
mov
mov
pop
jecxz
rorl
ret
and
aaa
adc
and
xor
add
jo
into
push
nop
xchg
not
loopne
lock
add
adc
pop
xor
ja
inc
pusha
push
or
mov
not
loopne
lock
add
adc
inc
pop
push
pop
pusha
push
jo
adcb
xchg
test
dec
jae
pop
pop
dec
jle
arpl
push
popf
jmp
sti
loopne
test
fsubrs
enter
rol
shrl
xchg
dec
inc
not
lret
jp
hlt
ret
outsl
add
stos
sbb
loopne
mov
jb
add
scas
dec
rorb
fs
xchg
stc
xchg
loopne
aad
rorb
gs
sti
inc
pop
xor
or
addr16
jecxz
push
mov
jg
outsl
add
push
sbb
imull
ljmp
daa
jo
mov
int3
or
push
xchg
faddl
xchg
not
aas
loopne
push
fadds
jmp
cwtl
mov
xchg
mov
push
pop
arpl
loopne
in
add
pop
and
xor
pusha
icebp
jo
subb
scas
sar
cmc
loopne
cltd
dec
add
push
jae
outsl
xor
and
push
and
stc
in
loop
repnz
cltd
mov
push
push
jne
inc
jbe
push
sub
sbb
or
adc
lret
in
xchg
out
aad
scas
cwtl
shrl
inc
pop
pop
push
inc
push
xor
ja
inc
pusha
push
jo
xorb
out
not
loopne
lock
add
adc
and
xor
ja
inc
pusha
push
jo
xorb
out
not
loopne
lock
add
repnz
lahf
mov
into
imul
push
adc
pop
jno
arpl
leave
mov
dec
nop
ror
lcall
add
inc
mov
push
das
mov
rcr
fs
sbbl
popa
push
loope
jle
cmc
mov
and
push
xor
push
repz
mov
clc
dec
mov
mov
hlt
push
cmpsl
jl
fwait
push
shll
sub
dec
and
fwait
out
push
pop
in
push
add
fldcw
dec
mov
jle
xor
jmp
pop
mov
mov
nop
xchg
inc
mov
push
xchg
repz
xchg
orl
mov
arpl
mov
mov
sub
test
aad
dec
mov
mov
enter
fildl
mov
sbb
movsb
in
divb
sbb
iret
ja
rclb
divl
std
mov
sub
addl
mov
popa
or
lret
dec
mov
outsl
adc
inc
mov
push
cmp
fistl
scas
les
push
or
rcrl
adcb
add
cli
cmp
push
or
incl
jnp
mov
pop
pop
sub
dec
jp
sbb
aad
gs
out
pop
push
test
mov
inc
cmp
push
or
pop
loop
outsl
push
xchg
iret
ljmp
xchg
mov
cld
xor
stc
and
jle
out
jg
jle
cmp
test
adcl
je
aam
mov
cmp
add
mov
fisubrl
pop
jmp
mov
push
mov
mov
cli
lcall
lsl
outsb
out
lock
and
outsl
xor
fs
lods
and
out
iret
js
push
jl
xor
adc
call
movl
and
xor
div
pop
xchg
pop
cmp
scas
addr16
and
cmpsb
test
cmp
jp
mov
sub
popf
loopne
ds
ret
outsl
sti
nop
jmp
int3
push
jno
mov
in
xchg
repz
cmc
xlat
pop
mov
popa
pop
test
jns
mov
mov
dec
inc
and
mov
mov
sti
rclb
ja
jb
mov
mov
cmp
movsl
movl
pop
push
xchg
sbb
mov
rcrl
mov
xchg
ss
ljmp
mov
inc
insl
sbb
or
roll
in
imul
sbb
lds
mov
std
test
ret
rolb
sub
push
mov
mov
in
push
inc
jno
cmpsb
push
mov
mov
andl
xor
xor
jmp
insb
adc
addl
mov
and
and
push
stos
icebp
jb
enter
data16
push
jp
les
sbb
popa
dec
pop
enter
fwait
test
xor
or
xorl
fs
popf
inc
or
push
sub
sub
call
test
dec
sub
cmp
adc
pop
pop
in
popf
or
push
xor
insb
movsb
pushf
mov
add
pushf
paddb
mov
add
mov
adc
mov
ljmp
cld
out
call
popf
xor
fbstp
adcl
test
fisttpll
fistpll
or
sbb
mov
xor
enter
shrl
int
cs
fwait
dec
stc
jne
nop
scas
mov
jl
pushf
pop
inc
shlb
inc
insb
mov
inc
add
pop
bound
ljmp
outsl
xchg
loop
push
sub
mov
aas
xchg
loopne
pop
add
arpl
bswap
cmp
mov
cli
fsubl
jbe
lret
xor
sub
je
sahf
and
and
call
and
lahf
jle
test
daa
fwait
sbb
sti
repz
cmpsl
or
repnz
es
adc
or
dec
cmp
cmp
mov
pushf
dec
xor
or
jge
cmp
mov
aam
sub
dec
cs
push
pop
dec
pop
lea
or
mov
dec
push
xor
cmp
in
fisttpll
bound
jae
test
mov
inc
and
shr
in
ret
mov
mov
add
subl
jo
mov
cli
in
iret
js
inc
lret
subb
jmp
int3
mov
sub
aad
dec
and
and
inc
fistpll
scas
push
and
push
cltd
or
sbb
fdivrs
dec
mov
cmp
push
movl
dec
cmp
mov
enter
add
out
pop
mov
add
or
dec
stos
sbb
cmpsl
sub
fcoml
and
sbb
testl
mov
xchg
cwtl
mov
scas
xchg
xchg
popf
xchg
cmpsl
pop
push
sub
daa
or
xor
jge
loop
mov
test
cli
out
out
cli
in
push
inc
or
ja
adc
cmc
pop
xor
mov
jp
imul
aam
adc
xchg
mov
push
scas
stos
stos
adc
mov
and
data16
and
iret
mov
cltd
addl
mov
xchg
adc
dec
mov
sbb
inc
jne
xor
lods
or
std
sub
subb
pop
jns
mov
aas
adc
cmp
or
pop
rcrl
clc
pusha
cwtl
cmp
cs
jb
loope
mov
cmp
mov
mov
inc
xlat
pop
xchg
adcl
aam
icebp
dec
adc
sub
mov
insl
sub
xor
sbb
int
sub
scas
mov
dec
aad
inc
cmp
iret
mov
fdivl
pop
mov
pop
ljmp
cwtl
dec
out
push
sub
in
pop
jle
aaa
ss
insl
in
fwait
nop
pop
push
fsubl
sbb
inc
dec
repnz
jne
sub
cld
mov
push
and
cmp
pop
je
aad
popa
dec
xchg
ficoml
arpl
in
mov
sub
adc
adc
in
pop
shlb
dec
cwtl
sahf
inc
cmpsb
pop
iret
cld
jnp
add
lods
pop
push
push
jl
fwait
and
mov
roll
and
xor
in
movsl
add
dec
jnp
sub
dec
adc
xchg
adc
js
add
cwtl
jae
xchg
xlat
adc
add
and
mov
les
and
call
jmp
pushf
enter
xchg
bound
in
mov
arpl
addb
mov
enter
scas
fistps
inc
jg
adc
das
lock
inc
lods
jp
lret
fdivrs
cmp
ret
ficomps
mov
pop
cmp
outsb
push
mov
jecxz
jg
pop
sarb
mov
push
aaa
jp
pop
imul
aam
dec
sahf
cs
in
mov
rcrl
sbb
rcll
add
push
mov
mov
enter
addl
lea
repz
mov
out
sub
adc
mov
incb
mov
pop
jo
andb
loopne
inc
call
imul
out
lods
jmp
out
sahf
and
lods
mov
movsb
and
cmp
inc
xor
inc
psraw
push
rcll
push
pushf
cmpl
push
icebp
outsb
loop
imul
xchg
jbe
stos
adc
repnz
js
jl
push
push
dec
clc
lret
cmpsl
fiaddl
and
je
cmp
loopne
js
mov
mov
adc
jne
mov
imulb
repz
icebp
lea
add
shll
jne
addb
arpl
adc
push
scas
fistpll
arpl
rcl
imul
sbb
mov
jae
jl
testb
push
scas
pop
push
mov
sub
loope
sbb
sub
inc
dec
sub
roll
mov
cwtl
icebp
pop
mov
ljmp
xor
sbb
dec
arpl
cmp
popa
leave
clc
cli
lcall
or
in
stos
push
fisttpl
inc
xor
mov
test
out
and
icebp
xadd
dec
xchg
test
movsl
cwtl
cmp
jmp
jo
hlt
cmp
sub
pop
push
aam
push
clc
cmc
ljmp
imull
data16
mov
ret
xchg
test
data16
xor
push
shlb
leave
xchg
jbe
sbb
aaa
cmpsl
flds
js
add
mov
jnp
fstpt
into
adc
call
fstpl
sub
dec
mov
mov
sbb
lds
jecxz
and
add
adc
pop
lret
jl
sub
add
loopne
cmpsb
mov
testl
jg
pop
dec
aaa
sti
or
lret
dec
ljmp
lods
adc
jl
push
dec
outsl
ret
push
shll
outsl
push
pop
sbb
or
pop
andl
popw
push
xor
and
push
mov
es
clc
mov
inc
cmp
jg
shrb
cmc
lcall
aam
sbb
dec
inc
out
mov
pop
cmp
rcrb
cmp
pushf
hlt
pop
or
loop
mov
in
mov
test
std
inc
fcmovnu
addr16
sbb
xchg
push
push
pop
dec
xor
or
cltd
jno
lea
push
xchg
jmp
adcb
mov
out
in
push
adc
adc
es
cwtl
mov
repnz
xor
pop
cli
ds
fildll
fs
push
scas
movsb
iret
popa
aad
out
aad
jecxz
mov
shll
call
jb
mov
adc
int3
in
outsl
xchg
stc
cmp
outsb
fdivs
sub
jg
sub
and
je
dec
cmp
push
xchg
cmp
mov
test
fcmovu
dec
ds
pushf
fcmovbe
hlt
sarb
ret
das
or
sbbb
addb
mov
cmp
lret
inc
into
inc
sub
xor
stos
pop
cmp
test
decl
jo
iret
loope
mov
push
jno
add
mov
ljmp
add
test
jge
and
sti
mov
mov
jle
add
adc
clc
add
repz
mov
jne
loopne
push
test
dec
mov
ficompl
or
xor
pop
inc
xlat
jb
inc
jecxz
pop
cmpsl
push
push
dec
std
stc
repz
or
sti
dec
in
add
sbb
xlat
cmp
xor
mov
clc
dec
sbb
cli
testb
shl
stos
mov
fistps
xor
push
roll
xchg
push
push
imul
cmpl
add
dec
aas
push
inc
ficompl
cmp
in
stos
ss
xor
sub
push
std
dec
push
and
sbb
mulb
jmp
shrd
add
and
jmp
outsb
jmp
jbe
push
clc
mov
fdivrs
call
test
jb
or
hlt
stos
or
or
loope
rolb
jbe
hlt
ficompl
mov
sbb
dec
or
xchg
jne
pop
ret
pusha
pusha
add
mov
push
jb
jle
test
jl
fcmove
jne
inc
push
into
nop
lahf
jecxz
inc
dec
sbb
loop
xor
cmp
daa
int
rcr
repnz
jns
mov
ljmp
lahf
jae
popa
roll
test
pop
dec
mov
or
mov
push
lahf
mov
xchg
xchg
and
lret
in
xor
pop
lea
decl
in
test
pushf
mov
mov
lods
add
repnz
mov
sbb
int3
inc
dec
fs
sbb
inc
gs
xlat
add
jae
jno
mov
je
mov
out
arpl
xchg
adc
jo
lea
adc
lret
in
jle
mov
mov
imul
sub
xlat
inc
imull
dec
nop
in
pop
in
pop
push
es
pop
or
xchg
cmp
pop
div
mov
cld
xadd
dec
jl
jg
mov
adc
jo
sbb
xchg
sub
test
stos
iret
mov
mov
add
mov
or
pop
adc
sbb
jl
outsb
adc
pop
pop
test
mov
mov
jmp
fisttpll
cmp
rep
xor
pop
out
mov
mov
fs
mov
rclb
pushf
loopne
es
and
dec
dec
enter
in
hlt
add
outsl
pop
cmp
sub
jle
dec
daa
ss
imul
sbb
mov
mov
jl
and
lea
fcmove
scas
je
aam
adc
stc
iret
arpl
aam
invd
lcall
sub
sbb
sub
aam
icebp
mov
pop
lock
lcall
inc
daa
cwtl
mov
lods
sti
sub
pop
pop
dec
outsb
mov
call
mov
adc
mov
lret
mov
ljmp
nop
inc
jb
aam
lds
insl
push
sar
xor
imul
loope
mov
mov
push
xchg
mov
inc
lods
xchg
int3
add
jecxz
mov
aas
imul
xchg
movl
mov
sbb
cmp
out
scas
in
fsubrl
movsl
data16
add
out
out
sbb
inc
daa
loopne
mov
add
xor
mov
xor
jmp
shlb
cmpsb
jnp
push
jle
jle
fstps
mov
loop
loop
jle
pop
ljmp
pop
add
pop
push
jmp
mov
loop
xor
add
cli
mov
pop
cs
and
mov
cwtl
pop
cmp
dec
ss
movl
aam
cmp
adc
mov
call
call
pop
sbb
inc
cld
push
scas
and
or
mov
jne
ss
pop
sar
out
gs
mov
and
xchg
cmp
sub
lods
pop
mov
sbb
mov
jnp
sub
int3
lret
cmp
sbb
insb
jp
dec
mov
inc
fbld
mov
sub
outsl
test
and
jns
push
pop
cli
adcb
int3
enter
pop
inc
daa
pop
sub
lods
pop
int
aam
test
cld
adc
mov
dec
lret
xor
addr16
je
sti
jl
pop
icebp
lret
daa
add
xor
aas
jbe
test
mov
shrl
adc
call
cmpsb
sbb
cmp
shll
clc
push
pop
aas
xchg
mov
adc
jno
and
adc
sub
lret
lock
xchg
popf
negb
repz
mov
mov
mov
push
mov
mov
lea
cmp
push
add
add
dec
nop
lods
and
mov
add
push
dec
inc
insb
mov
leave
push
test
mov
adc
xchg
adc
mov
pop
outsl
dec
es
test
rclb
sbb
jp
int
sub
jae
mov
loope
jns
cmpsb
aaa
mov
dec
aas
jg
mov
test
clc
jo
dec
or
xor
in
cs
or
jbe
add
in
aaa
xchg
add
sub
mov
dec
pop
sub
dec
popf
and
aaa
adc
repz
mov
mov
adc
insb
sbb
add
mov
cmp
sub
cwtl
aas
dec
gs
aam
rclb
es
push
ret
pop
cwtl
adc
dec
or
add
insl
imul
scas
stos
test
int
imul
pop
xlat
push
imul
dec
xchg
mov
popf
shlb
lods
cmp
cmpsb
jmp
stc
jb
cmc
mov
rcl
fwait
lret
cmp
xchg
mov
shll
insl
mov
xor
daa
mov
inc
dec
inc
sbb
stos
pop
jnp
out
sbb
pop
test
pop
xchg
add
push
pop
fnstcw
pop
mov
pop
xchg
pop
jecxz
add
out
lcall
sahf
dec
filds
test
xor
dec
pop
add
es
jmp
inc
add
in
cmpsb
int
repnz
or
inc
jns
fdivl
pop
nop
push
cmp
mov
jmp
mov
loopne
cltd
out
sbb
cli
insl
xchg
adc
sub
repz
sbb
std
jle
rolb
dec
mov
dec
cmpsb
adc
push
insl
sbb
sub
aas
outsl
mov
xchg
adc
iret
popa
nop
stos
push
daa
cmp
sbb
cmpsb
outsl
xchg
xor
xchg
pop
mov
mov
fistl
jbe
pop
lahf
mov
cmp
ljmp
push
cmp
aas
xchg
xor
sbb
fsubs
mov
pop
scas
adc
sbb
sub
adc
inc
cli
pop
push
mov
outsl
xor
xor
push
enter
jge
or
jg
xorb
push
imul
jp
push
push
cltd
popf
cs
cmp
and
push
loopne
xlat
mov
insb
leave
mov
sub
fnsave
push
xor
popa
arpl
ret
push
lods
mov
hlt
cmp
lock
cmp
cmpsl
ret
xor
and
add
and
icebp
inc
sbb
ds
fcmovu
cmp
or
inc
mov
add
stc
sub
ret
jge
shrb
inc
adc
stos
sbb
cli
xchg
and
cltd
dec
or
mov
cmp
fdivp
leave
movsb
in
sbb
cmc
mov
enter
xchg
lea
mov
xlat
mov
test
outsl
ret
cwtl
ret
add
adc
xchg
xchg
cld
mov
mov
call
jae
sub
adc
xchg
jae
es
lock
sahf
mov
bswap
and
and
mov
cmc
and
jb
hlt
setle
aaa
icebp
add
xchg
aad
imul
mov
mov
sub
outsl
in
add
pop
dec
addl
loop
push
scas
push
scas
xchg
mov
xor
pop
pop
sbb
ljmp
fsubrl
sub
xchg
mov
or
dec
imul
hlt
jl
dec
mov
insb
ret
dec
sub
push
dec
mov
lods
pusha
pop
out
imul
sbb
mov
in
add
mov
out
mov
loopne
push
xchg
ret
out
shll
das
inc
cld
pop
in
rcl
repz
sbb
jp
dec
jmp
lods
adc
xlat
stos
xchg
jbe
shlb
ljmp
pop
adc
cmp
push
repz
lcall
rorb
dec
xchg
mov
daa
ret
hlt
gs
ficoms
push
or
shll
dec
add
inc
pop
imulb
mov
in
movsb
lea
cltd
mov
xor
cmp
jo
mov
push
movsl
or
xchg
mov
outsb
dec
xor
mov
push
inc
add
mov
adc
xchg
xor
pusha
mov
imul
cmp
pop
jns
popa
mov
movsb
mov
jl
incl
jae
xor
lock
ret
cmc
xchg
mov
scas
mov
rolb
jns
adc
mov
mov
xchg
xchg
pusha
push
fs
out
add
pushf
sbb
enter
cmc
je
out
mov
sbbb
int3
das
fstp
in
sub
int3
mov
and
nop
pop
inc
cli
out
stc
sub
jge
push
cmp
testb
sub
mov
faddl
push
pop
pop
out
mov
popa
fldcw
xor
add
les
mov
testb
xchg
push
daa
jecxz
daa
mov
add
jmp
fdivl
out
xchg
cld
dec
orb
mov
ds
mov
mov
xchg
cmc
js
xor
xor
adc
ficoms
mov
mov
mov
scas
out
jl
pop
xchg
sub
aas
pop
sub
test
pop
cmp
mov
mov
xchg
call
jp
mov
add
cmp
lods
add
add
pop
fidivs
loop
adc
cwtl
adc
test
rolb
scas
push
outsl
out
jae
movsb
or
popa
arpl
testb
inc
lret
jo
mov
rcll
and
pop
mov
adc
mov
lods
and
xchg
ja
sub
hlt
mov
ljmp
sbb
nop
add
inc
lcall
mov
bound
or
jno
insl
dec
ja
dec
movsl
repz
cmp
clc
lea
and
push
and
pop
mov
imul
call
outsb
push
sbb
push
dec
inc
jg
fwait
out
cmp
jnp
sub
leave
jge
shll
xchg
std
add
inc
add
adc
pop
xor
ja
inc
pusha
push
jo
xorb
out
not
loopne
lock
add
adc
and
xor
ja
inc
pusha
push
jo
xorb
out
not
loopne
lock
add
adc
pop
xor
inc
ja
inc
pusha
xchg
jo
xorb
out
out
loopne
lock
imul
and
xor
addr16
inc
pusha
xlat
jo
orb
mov
jg
cmp
sub
mov
mov
xor
fwait
enter
xchg
jbe
push
inc
or
imul
mov
mov
stc
mov
cmpsb
fsts
sub
jbe
inc
mov
push
dec
push
mov
into
mov
stc
scas
jmp
pushf
cmp
or
ja
dec
sub
daa
push
out
int
cltd
mov
bound
or
inc
pop
std
out
nop
push
enter
sub
or
dec
pop
icebp
stos
and
push
cmp
xor
imulb
xchg
les
or
mov
push
loop
push
repz
sbb
leave
ret
sub
adc
cmp
dec
push
mov
mov
ficoms
leave
jns
lods
cltd
out
arpl
ficompl
pop
jns
jbe
mov
mov
pushf
adc
pop
xchg
stos
or
dec
stc
inc
stc
push
push
pop
add
push
lods
leave
or
fnstenv
inc
and
gs
sbb
leave
push
jne
test
fdivr
mov
cmpsb
sub
dec
or
imul
clc
xchg
fucom
lock
loopne
stc
loopne
enter
jmp
pop
dec
push
sbb
jno
js
imul
mov
out
cmpsb
in
stc
lds
pop
vmread
sbb
or
xor
mov
xor
in
mov
jmp
xchg
jbe
sbb
inc
jns
imul
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
mull
ret
xor
outsb
dec
loopne
or
std
dec
sbb
mov
inc
jnp
popf
pushf
cmp
mov
sbb
sub
cmp
jae
data16
scas
mov
cld
inc
insl
icebp
aam
repz
pop
pop
scas
mov
orb
sub
or
or
enter
mov
mulb
mov
fldl
sub
jne
int3
xchg
mov
mov
ja
inc
jns
dec
jnp
iret
cmp
add
add
mov
fmulp
mov
sar
repz
call
and
data16
or
lcall
stos
lahf
cmp
sbb
push
js
cmp
xor
sbb
dec
fcmovnb
jnp
sahf
lret
and
ds
adc
dec
pushf
push
and
lahf
fmuls
addl
and
aam
dec
xor
ret
mov
sbb
imul
ja
xlat
test
mov
and
jecxz
dec
dec
and
ret
dec
xlat
mov
mov
outsl
jnp
sbb
fistps
mov
inc
arpl
ficoms
dec
lcall
movsl
aad
cmp
stos
push
das
cmc
push
insb
pop
push
scas
push
ret
testl
add
int3
imull
std
xor
adc
decb
pushf
push
repnz
inc
outsb
fdivl
fdivr
fidivrl
xchg
aam
cmp
inc
pop
cmp
mov
pusha
cmpsb
fdivrs
jbe
mov
jmp
lock
cmp
loope
xor
sbb
xchg
filds
jne
call
sub
rsm
iret
movsb
mov
mov
jecxz
pop
movsb
inc
or
push
shlb
cmp
or
scas
lcall
fidivs
aad
dec
ljmp
xor
repnz
ss
sub
or
in
mov
mov
sbbb
les
xchg
dec
push
fdivrl
cs
pop
aaa
bound
hlt
rcrl
push
rcr
mov
call
or
and
dec
aaa
sbb
movsb
jmp
sbb
aad
dec
push
scas
std
ret
popf
jmp
jp
stos
sub
push
hlt
sub
hlt
ds
popa
push
sub
mov
arpl
jne
inc
pop
outsb
mov
stos
xchg
lods
pop
xchg
scas
jnp
movsb
jae
cli
pop
cmp
mov
sub
xor
mov
fcomps
movsb
popf
in
ret
dec
dec
pop
daa
push
jns
cmpsb
add
mov
pop
inc
sahf
bound
loopne
xor
sub
fs
addr16
mov
xchg
xor
mov
mov
in
pop
sbb
push
pop
pop
push
out
sub
fs
jns
jp
jnp
in
or
mov
or
xchg
add
jae
aad
rcrl
cmpsl
push
outsl
nop
xor
in
loop
sbb
inc
pop
jbe
lock
aaa
fs
xor
sti
xor
adc
and
and
xor
cs
test
cmp
decl
aas
outsb
push
outsb
popa
sub
dec
orl
mov
jmp
in
or
cwtl
xchg
jmp
jae
jmp
push
mov
lods
push
das
sbb
xchg
cld
stos
xor
sbb
sub
or
mov
add
shll
fstl
xchg
pop
das
popa
lret
es
sbb
adc
sub
dec
adc
insl
jo
jl
insl
mov
stos
cmp
loop
xchg
adc
sbb
scas
cmpl
aad
aad
fistps
sbb
or
in
out
imul
jns
mov
jl
pop
movsb
or
xlat
and
mov
mov
mov
bound
mov
dec
pushf
mov
ret
push
dec
jnp
mov
ljmp
sbb
or
int
push
xchg
test
pop
das
dec
xor
push
mov
sbb
out
fs
push
push
aam
xchg
push
popf
jg
cwtl
sub
jle
pop
xlat
call
push
movsl
outsb
roll
sub
xchg
inc
mov
popl
ss
xchg
iret
jo
mov
and
scas
negl
arpl
adc
test
lcall
sub
jle
rorb
mov
in
add
fs
and
xchg
jae
loop
fcomps
pop
xchg
fxch
or
sub
aaa
in
fistps
lret
mov
jp
xor
mov
sbb
jle
dec
faddl
adc
sbb
xchg
jae
mul
fcomps
xor
sar
mov
cmp
xor
and
adc
lds
in
inc
push
addl
nop
bnd
js
adc
repz
test
ljmp
inc
xchg
rclb
stos
mov
in
iret
int3
sub
and
hlt
outsl
icebp
loop
add
fcmovnb
pop
popf
xor
push
enter
loopne
roll
mov
pop
lret
lea
enter
mull
mov
pop
xchg
pop
int3
test
shll
jnp
inc
imull
cwtl
mov
xlat
cmp
aas
rolb
setne
or
inc
lahf
adcl
sub
imull
jae
mull
sub
gs
in
lahf
sub
das
dec
das
xchg
lea
jbe
dec
sti
stos
xchg
std
daa
add
jmp
adc
and
imul
movsb
cld
cmpsl
cmc
aaa
add
in
adc
xlat
xlat
imul
jb
sub
jle
xchg
push
xor
cmp
mov
adc
shrl
aaa
inc
mov
sub
adc
mov
adc
and
mov
imul
jb
stc
inc
xor
add
out
movsl
mov
sahf
inc
xor
pop
push
sub
in
nop
xchg
or
mov
inc
fdiv
inc
mov
dec
fimull
or
sub
pop
cmp
jae
movb
sbb
testb
cmp
push
cmp
mov
pop
add
mov
sbb
mov
repz
pop
adc
and
in
mov
mov
push
stos
mov
or
push
xor
pop
add
mov
push
test
push
adc
std
popf
cmp
and
ret
mov
outsb
jmp
cmp
jg
adc
cld
outsl
or
jle
xor
and
loop
mov
mul
lods
add
cmp
cli
enter
sbb
shlb
and
or
mov
and
nop
and
shr
inc
mov
leave
filds
popl
push
dec
shl
outsb
nop
adc
movsl
xor
or
iret
xor
and
cltd
lea
aaa
adc
mov
add
mov
xor
mov
xchg
inc
mov
pop
pop
fnsave
pop
in
add
mov
xlat
sub
lods
jge
in
loopne
mov
pop
pop
xchg
mov
pusha
and
cmp
sahf
sub
pusha
stc
stos
pop
sbb
insb
push
je
sub
push
stos
lret
test
out
sti
mov
shlb
cmp
jb
cmp
push
lcall
and
jno
divb
pop
jg
push
xchg
jle
push
or
arpl
aaa
jl
mov
sbb
test
push
aad
mov
jno
and
popa
lds
xchg
ret
inc
or
push
test
lcall
push
iret
jbe
inc
test
and
rorl
mov
cltd
cmp
mov
xchg
out
ret
rcll
mov
outsb
inc
inc
imul
mov
dec
dec
jnp
xor
jl
mov
ds
pusha
aas
add
mov
out
cmpl
sub
add
sub
xchg
mull
lret
xchg
mov
ds
out
lret
lret
pop
lods
lock
mov
popf
inc
mov
jbe
inc
inc
add
mov
jne
mov
add
push
stos
and
and
hlt
add
dec
push
aad
aas
scas
hlt
ficomps
hlt
jg
jnp
std
jo
lds
mov
mov
test
push
cmp
aam
xor
shr
sbb
push
fwait
sbb
mov
mov
jo
inc
test
dec
stc
sbb
lods
cld
jo
jl
mov
repz
adc
dec
or
loope
jno
sysenter
ss
aam
lock
ljmp
push
inc
roll
jno
mov
mov
jle
ja
add
dec
in
adc
or
outsb
mov
popf
add
std
rcrb
xchg
or
test
inc
mov
or
mov
jl
inc
jge
xchg
aaa
mov
outsb
push
dec
sbb
xchg
xchg
das
jbe
icebp
mov
arpl
cltd
mov
jo
imul
aad
mov
pusha
insb
jne
jno
xchg
xor
lahf
les
push
stc
add
inc
xor
jg
stos
hlt
add
daa
pop
xor
test
sbb
das
xchg
push
pop
fiadds
mov
mov
dec
sub
out
daa
addr16
loop
inc
or
fisubl
xchg
xchg
cmp
mov
push
sub
mov
jp
add
mov
mov
sarl
ljmp
clc
push
in
dec
or
jmp
pop
jp
xor
jb
es
in
es
xchg
out
mov
push
mov
out
addr16
or
or
loop
adc
jae
int
fistps
ss
test
sbb
rclb
adc
sbb
inc
lock
add
push
out
dec
in
push
xchg
jbe
mov
popf
mov
xchg
aad
aaa
mov
movsl
and
ds
out
rcrl
dec
and
xchg
fiaddl
or
dec
fisubl
adc
rcll
lret
scas
and
or
mov
lahf
adc
shrb
push
ds
cmp
cmp
popa
cmp
inc
pop
int3
imul
cs
pop
aaa
xchg
jge
cmp
outsl
jge
mov
dec
mov
mov
pop
arpl
pop
jb
out
dec
xchg
lock
push
xor
push
bswap
inc
or
scas
pop
dec
inc
por
shrl
xorl
pop
or
cwtl
push
pop
xor
jo
and
inc
xchg
cld
adc
arpl
sbb
add
popa
test
pop
push
and
jo
and
not
cmpsb
lret
ret
repz
icebp
push
fsubrl
xor
loope
mov
adc
fisttpll
scas
sbb
sub
scas
jae
xor
or
movsb
cmp
daa
loopne
jl
mov
sahf
cmp
pusha
in
icebp
sbb
mov
daa
mov
xor
inc
lds
xor
cmc
stos
inc
mov
push
ss
push
xor
dec
popa
in
push
adc
pop
inc
or
sbb
in
lea
cmp
inc
xor
leave
xchg
into
lods
and
stos
push
adc
jge
call
dec
mov
sbb
lods
xchg
and
dec
jnp
mov
mov
movsl
jge
mov
sub
rclb
das
lds
cmp
fcmovnbe
jmp
js
pop
mov
inc
iret
push
sub
aas
pop
jmp
pop
push
mov
xor
loop
cmc
fwait
adc
stc
mov
xchg
mov
xor
add
dec
int
push
mov
cli
push
int
fs
cmp
negb
xorl
bound
stos
fisubs
test
outsl
loop
mov
dec
pop
test
sub
dec
out
stc
xor
jb
add
push
dec
scas
pop
aaa
cmp
daa
das
or
test
mov
into
or
insl
fdivs
push
push
xchg
push
jle
repnz
iret
lods
jae
lds
lret
pop
hlt
mov
mov
jle
mov
mov
push
es
cmp
mov
out
rcll
sbb
js
divl
push
mov
push
arpl
dec
adc
push
filds
sub
and
adc
sbb
pusha
push
dec
adcb
dec
es
cmp
adc
dec
addr16
pop
sbb
mov
sub
mov
nop
and
addr16
cmp
jbe
into
push
ret
rcrb
inc
gs
xchg
fucom
lahf
fnstsw
testl
xchg
pop
sub
das
and
loopne
movl
sbb
or
cltd
in
arpl
das
push
mov
incb
mov
lahf
sbb
rcrl
push
ja
pop
add
inc
jle
cmp
lods
testl
jno
push
pushf
loopne
inc
cmpsb
mov
in
frstors
call
sbb
sub
pop
lea
mov
xor
sub
dec
or
insb
adcl
dec
xlat
or
movsl
test
movsl
lods
test
repz
pop
sbb
jns
adc
aaa
mov
js
ss
shl
mov
fildll
jge
adc
bound
inc
loope
les
or
test
dec
push
mov
icebp
mov
arpl
pop
outsb
insl
stos
xchg
popa
pop
push
dec
loopne
jg
sub
xchg
pop
or
dec
movsl
mov
inc
popa
lds
stos
movsb
scas
push
lock
call
enter
lret
push
xor
out
push
sahf
xchg
aaa
pushf
call
lcall
and
lock
xor
cs
inc
cmp
xchg
xchg
into
sub
mov
xor
loop
test
arpl
add
adc
neg
adc
adc
fnstenv
js
stos
imul
fsubr
je
out
mov
in
ljmp
sub
inc
aam
push
lods
mov
mov
inc
icebp
fidivrs
xchg
sub
adc
stos
add
outsb
data16
mov
inc
iret
mov
clc
lods
jbe
add
sub
bound
push
pop
and
dec
pop
push
adcb
mov
add
das
jnp
ret
xor
cmpsl
dec
cmp
cmc
mov
push
cmp
xchg
imulb
mov
hlt
hlt
jae
lret
daa
sub
xchg
popw
scas
and
inc
cs
movb
mov
mov
sub
or
je
push
fstl
mov
lea
lods
xchg
or
sub
xor
pop
cmp
lock
pop
cmpb
into
cmpsl
push
sub
inc
inc
push
stos
inc
inc
xchg
xor
repz
mov
mov
std
dec
jle
call
std
mov
mov
fdivrs
cmpsl
int3
sbb
mov
and
mov
push
scas
mov
je
or
scas
daa
out
sub
movsl
aaa
mov
jge
push
xor
push
sbb
nop
push
dec
dec
add
push
popa
clc
cmc
rcrb
push
jg
enter
jmp
lea
mov
or
or
or
sub
push
and
add
pushf
xor
fcoms
pop
mov
mov
jle
arpl
inc
pop
pop
inc
fdivrl
shrl
push
pop
bound
push
imul
outsb
mov
jecxz
mov
xchg
jmp
xchg
cmp
inc
mov
enter
jmp
imul
data16
add
pop
push
cmpsb
lcall
fnstenv
aas
lret
std
sbb
xlat
call
and
outsb
in
fildll
add
inc
lahf
mov
das
lock
or
sub
add
and
jns
aaa
jmp
fildl
push
pop
cwtl
je
jmp
js
mov
xchg
repnz
lea
jle
mov
sub
stos
ds
push
lahf
mov
jno
push
xchg
inc
pop
and
and
mov
xor
andb
cmpsw
mov
inc
dec
loopne
repnz
xor
out
sub
cli
pop
push
and
sbb
inc
add
dec
mov
sbb
in
xchg
jo
roll
xchg
xchg
jo
xchg
scas
and
leave
inc
sbb
lret
or
sahf
sbb
adc
lcall
pop
test
lcall
gs
sbb
inc
sbb
aas
dec
jl
test
jl
cmp
scas
adc
add
nop
stos
data16
out
scas
imul
gs
clc
das
mov
fisubrs
mov
mov
pop
sbb
shl
ret
xchg
jne
xchg
inc
push
sub
sti
inc
out
jl
pop
lcall
rorb
xchg
cwtl
cli
mov
lahf
ret
adc
lea
fwait
mov
push
dec
cmpsl
add
adc
aaa
cld
icebp
xor
movsl
mov
xchg
dec
pop
cmpsb
lock
mov
stc
hlt
push
push
rcrb
xchg
es
mov
push
inc
mov
loope
jge
cli
mov
push
cmp
add
subb
arpl
jle
push
cld
aam
add
mov
xchg
daa
mov
inc
and
adc
test
mov
inc
fucom
cmpsl
scas
loope
rorl
fxch
mov
ds
scas
and
add
xchg
shl
add
ja
ret
call
js
in
inc
push
add
adc
leave
pop
pop
pop
mov
into
add
lds
xchg
out
int3
push
shll
ljmp
push
and
cmp
sbb
psubsb
mov
test
lahf
add
xchg
in
mov
mov
mov
sti
mov
add
pop
out
push
out
cltd
fisttpl
int
mov
ficoms
xor
add
fdivrs
sti
lock
jb
mov
lods
int
pusha
xchg
jns
out
rorb
int3
sbb
or
sub
sahf
xchg
fsubs
inc
cmpsb
and
addr16
or
lods
daa
pop
sub
xchg
int3
push
pop
aas
out
pushf
sbb
cmp
jl
das
push
int
sub
stc
sbbb
add
lods
lods
popa
inc
unpcklps
ja
lret
cmp
and
adc
lahf
call
cs
lods
pop
dec
int3
stos
int
das
xor
ss
stc
je
xor
jo
sbb
push
repnz
xor
jg
push
jecxz
mov
lret
sti
mov
ss
inc
imul
cmp
xor
dec
sbbb
dec
xchg
cmpsb
jmp
pop
dec
std
daa
dec
lret
dec
cmc
popf
mov
pop
ja
pop
test
inc
popa
mov
movsb
in
mov
iret
mov
mov
cmc
stos
mov
push
push
and
int3
ljmp
or
push
addr16
stos
push
pop
jbe
into
popa
int
pop
adc
cmp
inc
mov
dec
cltd
ret
in
test
sbb
fistpll
push
push
stc
or
lods
or
sbb
jmp
insb
fs
outsb
adc
ret
orb
sbbb
and
and
pop
sub
pop
jg
inc
dec
jmp
sbb
dec
xchg
in
test
jb
fstpt
aas
cmp
pop
fsubrs
cli
nop
push
mov
rolb
stc
xor
and
mov
xchg
hlt
xchg
insl
sub
hlt
mul
ljmp
sahf
or
call
push
mov
fisubrs
mov
mov
aaa
mov
push
xchg
mov
lds
shr
dec
das
adc
enter
or
dec
pop
mov
call
out
and
xchg
sbb
scas
sub
outsl
sbb
pushf
daa
repz
inc
mov
js
shl
adc
lret
xor
call
push
add
es
and
js
or
arpl
pusha
out
loope
xchg
add
push
shrb
pop
shr
enter
movsl
cmp
or
fsts
jle
push
jecxz
xor
lret
hlt
rcl
push
lods
jp
dec
xor
imul
addb
addl
idivb
mov
lds
dec
push
loope
pop
stc
scas
pop
lret
in
enter
jmp
lods
dec
jle
mov
dec
xchg
les
xchg
sub
cmp
pop
loop
mov
inc
rolb
addr16
ljmp
hlt
iret
mov
add
mov
jge
xor
or
fldl
movsb
stc
loopne
mov
push
push
or
nop
test
shl
mov
push
add
aaa
jne
inc
sbb
and
cmp
je
out
fiaddl
inc
test
mov
mov
push
pusha
mov
push
jno
lret
and
and
or
mulb
push
adc
xchg
add
xchg
pusha
aas
dec
lcall
out
cmpsl
pusha
stos
dec
add
js
pop
sub
dec
inc
xchg
cwtl
arpl
xchg
adc
neg
cltd
out
cmp
cmpsb
fsts
sub
push
or
imul
mov
mov
stc
mov
cmpsb
fsts
sub
push
or
imul
mov
mov
jns
jmp
xchg
jbe
sbb
inc
jns
imul
mov
mov
stc
mov
cmpsb
fsts
sub
mov
or
or
cmp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
addr16
orb
popa
adc
sub
or
pop
cli
lret
imul
mov
jp
dec
stc
pop
popf
cli
adc
lcall
jns
imul
mov
xor
data16
rep
sbb
sub
inc
sti
pop
lret
cmp
imul
stc
dec
fsubrl
loope
aas
or
pop
push
cltd
ret
mov
sub
mov
jmp
es
insl
add
mov
stc
cmp
ficoms
cs
divl
jno
outsl
cmp
dec
mov
jp
sub
or
or
ds
ljmp
adc
jns
sub
movl
imul
pop
insb
mov
movsb
addr16
int3
filds
jbe
inc
fcmovu
xchg
sbb
mov
push
ljmp
pop
cli
pop
lcall
std
cmc
inc
mov
insb
iret
clc
mov
arpl
jno
test
sbb
jbe
push
ds
dec
stc
loop
pop
sbb
adc
test
mov
push
lret
push
dec
fdivl
fisttpl
test
xchg
cmp
cmp
xchg
dec
mov
lock
dec
lret
add
sbb
xchg
insl
sti
insb
out
pop
imulb
cltd
sub
sbb
jp
pop
in
das
ljmp
stos
sbb
sub
pop
cli
dec
lret
imul
mov
jp
dec
stc
pop
jmp
mov
lcall
jns
imul
ds
stos
es
adc
imul
orb
lods
and
jle
imul
mov
cmp
sub
inc
lcall
pusha
push
or
cwtl
xor
or
and
dec
mov
mov
mov
iret
push
xor
dec
iretw
arpl
and
roll
inc
jl
ljmp
dec
mov
mov
es
in
stos
mov
imul
mov
push
popf
adc
sbb
imul
out
les
jnp
rcr
push
loop
out
adc
shll
ret
cmp
mov
mov
push
arpl
adc
cmp
mov
lock
cltd
sbb
lcall
add
mov
push
aaa
xchg
push
push
repz
fdivrp
pop
sub
sub
sbbb
or
dec
jp
pop
cmp
xchg
xchg
jb
imul
nop
call
jns
adc
roll
repnz
out
push
sbb
add
push
iret
adc
stos
adc
daa
fnsave
adc
sub
and
insl
add
out
or
scas
ja
add
lret
jecxz
notb
clc
in
push
pop
fisttps
loope
mov
out
daa
sub
cmpsb
imul
pop
push
dec
scas
or
test
pop
outsl
mov
ljmp
inc
addr16
or
sub
and
sub
add
cmp
sbb
das
push
jnp
cmp
xor
cmpsb
mov
pop
mov
sub
dec
push
fistpl
outsl
mov
aaa
inc
pop
shl
in
mov
daa
iret
xchg
xchg
mov
cwtl
nop
dec
inc
jmp
dec
jb
xor
mov
fdivl
cmpsb
pusha
xchg
int
sub
notl
dec
sub
stos
mov
outsl
adc
dec
and
pop
mov
pop
into
push
push
mov
sbb
insl
xchg
aas
loop
outsb
ret
sbb
xor
les
movsb
loopne
jbe
hlt
jnp
lahf
sbb
js
mov
push
xchg
popf
fs
clc
and
jnp
das
pusha
lcall
lret
jo
sub
mov
push
call
inc
sahf
xor
or
jge
arpl
stos
repz
aaa
adc
ret
fadd
add
loope
fstps
sbb
sub
mov
pop
leave
lret
cmp
imul
mov
push
push
sti
fsubl
les
and
cmc
push
scas
cmc
xchg
add
pop
dec
popf
ss
test
inc
cmp
mov
jbe
faddl
dec
xor
mov
stc
scas
aam
mov
push
test
sbb
rcll
inc
jl
or
inc
pop
inc
sahf
sbb
and
test
pop
add
jmp
dec
stc
je
mul
sub
test
cmpsl
cltd
das
sub
mov
shlb
les
push
pop
mov
xor
out
pop
sub
test
add
repz
out
add
int3
sub
inc
adc
cmpb
imul
mov
sub
ret
jb
lret
mov
fcoms
fmuls
dec
out
sti
pusha
dec
repz
mov
sbb
pop
mov
sub
pop
jmp
std
jb
cmp
inc
xor
push
out
in
xchg
xchg
loopne
das
mov
scas
ja
ja
jns
int3
cmp
xchg
and
or
ljmp
lods
test
test
pop
cmpsl
daa
lea
mov
movsl
adc
sbb
outsl
or
inc
jmp
dec
mov
xchg
int3
sbb
cmp
jmp
stos
fisubl
aad
es
cmp
pushf
xor
pop
incb
in
cs
sbb
mov
sbb
mov
sahf
add
mov
cvtps2pi
clc
xchg
dec
iret
cltd
test
push
mov
push
pop
movsb
jno
xchg
arpl
mov
rclb
mov
push
adc
sub
enter
andb
les
test
pusha
jnp
scas
dec
je
mov
mov
jae
out
push
movsb
lret
inc
cmp
loopne
dec
xor
adc
std
enter
mov
mov
xor
insb
mov
fwait
fs
jnp
pop
test
and
xor
push
and
lock
push
inc
rolb
roll
out
out
mov
in
packssdw
mov
enter
push
add
movsl
xchg
pop
std
lods
mov
rorb
jmp
inc
mov
sub
dec
cs
cltd
lock
push
rol
inc
mov
fs
shl
addr16
dec
je
push
push
xchg
test
fwait
push
mov
xchg
jmp
sub
adc
add
aad
enter
popa
cmpl
testb
stc
std
jbe
lcall
mov
sarl
and
aad
adc
inc
add
mov
or
stos
sbb
add
adc
lds
pmaddwd
cs
out
insb
dec
out
adc
pushf
out
cli
jb
stc
jecxz
sbb
pop
push
sub
dec
bound
sbb
dec
fistpll
test
dec
mov
cmpb
lock
jae
jae
icebp
xchg
xchg
enterw
jecxz
repz
cltd
mov
jmp
pop
sti
pop
inc
mov
lds
dec
rclb
les
test
into
stos
add
mov
mov
call
call
jae
cmp
loope
mov
pop
sbb
xor
addr16
xchg
xor
adcb
or
sub
hlt
pop
mov
outsl
stos
jl
cmp
addl
mov
cmp
pop
lret
sbb
out
jno
xchg
out
loope
pop
pop
mov
incl
pop
xchg
das
mov
aaa
jecxz
adc
xchg
insb
dec
in
arpl
adc
cmp
inc
iret
xchg
movsb
shrb
js
pop
out
dec
jno
insl
adc
and
jb
aad
dec
sbb
pusha
xchg
or
inc
cwtl
inc
out
int
sti
int3
xor
popa
nop
lahf
aad
dec
imul
in
dec
pop
lahf
lock
stos
mov
fld1
mov
fbld
adc
jp
xchg
icebp
or
icebp
xor
fwait
repnz
push
push
loope
sbb
scas
mov
mov
fildl
add
adc
sub
popf
xchg
push
imul
xchg
push
ljmp
mov
cmp
ds
mov
movl
or
filds
sti
nop
xchg
lret
and
sahf
ja
in
jmp
sbb
test
xchg
ss
push
xor
mov
add
lods
xchg
push
cld
lcall
leave
shlb
pop
mov
es
loop
sbb
lds
push
cwtl
fnsave
ret
sbb
gs
cmpl
mov
jns
sbb
pop
and
ret
mov
mov
adc
lods
std
pop
mov
sbb
bound
nop
push
sbb
sti
lock
xor
xor
lea
sbb
xor
mov
sbb
jmp
sbb
je
lock
shlb
mov
mov
add
xchg
movd
push
jbe
pop
jno
push
pop
in
and
mov
fwait
mov
push
enter
cld
rol
lds
cmp
push
sti
xlat
jge
lret
cwtl
loop
jmp
push
icebp
or
js
mov
dec
shll
or
inc
sub
rol
int3
jle
mov
sub
fmull
mov
and
addr16
jae
mov
pop
ret
cmpsl
add
jo
or
into
shl
data16
jno
push
push
mov
ret
into
pop
mov
xor
pop
lcall
push
cmp
js
sub
push
clc
lea
clc
cltd
ja
jo
sub
mov
pop
sahf
pop
sahf
adc
js
loope
sbb
add
push
jnp
push
inc
pop
loope
test
jl
idivl
push
mov
inc
scas
push
dec
push
icebp
fnstsw
inc
mov
inc
inc
add
xor
in
cld
push
pop
adc
mov
dec
test
addr16
mov
and
push
push
add
mov
popf
std
cld
jp
xchg
and
iret
mov
arpl
lea
out
pop
test
sub
jo
xchg
sbb
movsl
data16
pop
cltd
stos
out
mov
fstpl
cmp
jle
mov
inc
mov
xor
pop
mov
jb
lods
mov
push
dec
jbe
xor
lahf
cltd
lret
es
push
sub
push
movsb
mov
cmp
ljmp
sub
nop
in
cs
add
add
xchg
adc
mov
jae
mov
sbb
sbb
pop
jbe
jge
iret
push
scas
icebp
out
ljmp
add
rorb
pusha
mov
inc
sub
clc
addr16
push
or
xor
pop
adc
test
ret
les
mov
loop
push
sti
mov
cmp
outsb
push
inc
icebp
mov
push
jnp
rol
popa
mov
pop
jle
scas
fcomps
in
push
bound
and
adc
jp
mov
mul
xchg
add
inc
clc
mov
cli
and
sbb
sub
inc
call
les
mov
lods
out
lea
mov
pop
scas
push
out
mov
sbb
xor
mov
mov
mov
data16
add
cmpl
jl
shll
pop
dec
test
das
ljmp
lds
fldt
xchg
ds
loopne
jb
faddl
pop
and
stos
lock
cli
out
mov
sub
lds
inc
cmp
cli
out
fcmovu
ss
stc
pop
cmpl
sub
and
dec
mov
push
push
pusha
popf
jmp
mov
insl
push
adc
pop
stos
or
jo
cmp
dec
lds
ret
dec
xchg
js
aas
push
popf
push
cmp
in
ret
out
add
push
mov
aaa
pop
mov
out
ljmp
xor
inc
dec
pop
icebp
inc
les
std
int3
jne
adc
sub
or
mov
push
lds
repz
push
mov
lret
in
fwait
cmp
jl
nop
cmpsl
xchg
lret
iret
test
sbb
scas
mov
shrb
sbb
fcompl
push
dec
cmp
mov
sbb
jo
or
add
jno
xchg
jno
mov
adc
cld
arpl
dec
aaa
cmp
inc
sub
jno
fstps
or
sub
inc
scas
fxch
call
xlat
dec
popf
xchg
stos
add
jne
out
cmp
xor
ds
mov
fstpt
push
lds
mov
mov
clc
adc
cwtl
mov
mov
scas
aad
pop
pop
mov
scas
clc
dec
popf
pop
sti
dec
sub
adc
sar
out
add
pop
fsubs
dec
mov
mov
mov
dec
loope
adc
cli
xchg
jbe
jg
pop
out
sub
nop
adc
xor
push
aad
gs
xor
or
cmp
push
fadds
hlt
adc
push
mov
imul
xchg
ret
ds
in
pop
mov
inc
mov
fnsave
jns
mov
cmp
out
or
fidivs
movsl
inc
cmpsb
sub
icebp
xor
jmp
arpl
add
imul
cmp
or
popf
and
mov
jmp
xchg
int3
jae
arpl
xor
dec
fistps
shrb
or
inc
sbb
and
cmp
pop
jno
jle
adcl
mov
test
sub
mov
fdivs
and
add
inc
pusha
mov
mov
mov
icebp
rcrl
in
ja
fwait
fs
inc
int3
sar
rclb
shlb
les
dec
cmpsl
xlat
push
lods
cli
push
jmp
mov
in
mov
int3
add
jae
pop
sub
sub
mov
mov
dec
mov
and
lods
pop
cli
adc
jmp
enter
pop
movsl
xchg
jge
push
push
iret
cmpl
leave
sbb
push
xor
sbb
xor
cmpsl
jmp
or
mov
fs
mov
inc
repnz
sarb
cmp
fstps
out
add
jno,pn
mov
jp
pop
mov
addr16
arpl
push
movb
vpextrw
ja
jg
jb
xchg
cmc
mov
mov
lock
fisubrs
adc
in
mov
xchg
test
aaa
ret
repnz
or
hlt
jnp
aad
sbb
jnp
cld
push
lahf
jae
pop
pushl
adc
xor
mov
loop
int
add
jg
push
push
lds
cmp
jbe
dec
jb
pop
sub
scas
jg
es
mov
push
andl
je
dec
adc
dec
ret
and
shll
mov
rolb
xchg
out
xor
shrl
ret
add
jecxz
pop
rcll
cmp
sub
out
enter
lods
xchg
aas
jno
xor
aam
rcr
stc
mov
fidivl
push
or
jae
scas
repz
das
add
dec
loopne,pn
std
mov
or
frstor
and
decb
std
icebp
imul
and
push
or
mov
mov
push
into
mov
sub
inc
jae
mov
inc
jl
fistpll
es
shl
fcoms
push
pop
sub
jne
hlt
jg
mov
jp,pt
jecxz
pop
cmp
xchg
fwait
pusha
mov
or
outsb
mov
es
inc
dec
xorl
mov
mov
fistpll
loope
mov
xchg
cmp
popf
movsl
cmc
mov
mov
push
jge
rorb
icebp
insb
pushf
xor
sbb
mov
cmp
in
xor
cmp
es
pop
enter
hlt
loope
std
fcmovu
loopne
cmp
cwtl
lahf
sub
mov
mov
adc
xchg
subb
in
lods
loope
insb
pop
ljmp
shll
and
aaa
loopne
add
push
dec
shl
imul
sbb
pop
jbe
enter
std
leave
pop
pop
push
pop
or
inc
xchg
ljmp
push
js
inc
dec
jg
or
fisttpll
mov
jnp
inc
hlt
mov
jo
rcrb
pop
pop
jmp
sbb
negb
mov
bound
cmp
add
cmp
pop
add
insl
add
inc
inc
sbb
ljmp
sub
testb
xor
int
push
xchg
or
mov
cmp
popl
lret
cld
aam
sub
cmp
push
lcall
push
jp
pop
adc
test
lea
xchg
push
mov
mov
push
inc
xlat
push
cwtl
out
sbb
push
push
mov
idivl
dec
out
xlat
or
adc
not
push
sbb
dec
stos
fnstenv
mov
aam
mov
clc
push
test
and
xor
sbb
ret
push
call
fmulp
roll
mov
daa
nop
ss
int
fxch
lret
push
out
push
stos
mov
mov
mov
pop
inc
cmp
fstpt
les
push
notb
sbb
mov
dec
andb
mov
jmp
rol
lret
and
pop
sbb
test
jecxz
sbb
mov
jnp
movsb
mov
xchg
sbb
icebp
sub
xchg
and
jp
xchg
pop
out
mov
mov
xchg
aas
add
add
add
mov
xor
cmc
mov
xchg
dec
sbb
je
sub
int
add
lock
sahf
leave
les
adc
push
hlt
mov
xor
xchg
out
mov
fbld
push
loope
xor
fwait
das
in
inc
pushf
std
std
sbb
mov
les
sahf
sub
inc
in
sub
mov
xchg
dec
jecxz
push
imul
inc
data16
mov
or
jno
hlt
sub
or
in
or
jmp
iret
fistl
fadds
inc
cmc
push
test
cmp
and
sbb
idivl
in
mov
mov
pop
fisubs
cs
pusha
enter
xchg
add
ljmp
lods
cmc
mov
pop
je
sub
sti
out
dec
cli
loope
jp
pop
or
cmpsb
out
rol
push
sub
aaa
push
sahf
and
out
sbb
sub
call
out
fstps
xchg
push
or
mov
or
ss
or
cmp
xchg
mov
and
or
das
popa
mov
js
aaa
mov
push
rorl
test
inc
stos
or
stc
out
mov
jbe
push
stos
test
and
xchg
pop
jnp
sub
jns
rcr
xor
push
mov
idivb
lea
cmp
ret
adc
aaa
push
repz
sbb
sbb
stos
sub
adc
repz
cli
sub
out
xlat
add
cmp
xor
sub
addb
out
andb
jno
movsl
ljmp
hlt
rorb
sbb
cwtl
daa
aam
push
jno
lods
fisubrs
fcoml
push
clc
out
leave
jmp
testl
mov
jns
inc
and
mov
sbb
out
out
mov
mov
iret
test
push
sbb
testl
sub
xchg
into
orl
mov
stc
mov
lods
cmpsb
cli
mov
sub
fs
cmp
jp
scas
and
mov
test
pop
cs
jg
shlb
stc
dec
push
pop
cs
inc
dec
add
fdivrs
sub
inc
fstps
xor
mov
fidivl
xabort
aam
push
mov
pop
leave
mov
fdivs
pop
lods
adc
jle
ret
add
mov
xor
mov
dec
fistpl
cmc
sbb
mov
mov
mov
out
xchg
mov
std
sbb
ja
into
inc
push
sarl
sbb
cmpsb
and
les
lret
inc
ficoms
mov
aaa
repnz
pop
mov
and
lcall
ficoml
xor
jae
mov
jp
fmuls
insl
fildl
inc
cmp
inc
mov
or
pop
loopne
cs
in
lock
icebp
or
sbb
shll
mov
imul
mov
dec
sbb
cld
mov
lret
fildl
inc
ret
lods
idivb
daa
push
adc
xchg
adc
pop
shr
pushf
sub
and
test
cmp
lods
sti
adc
push
push
sbbb
mov
add
push
shrl
jns
addr16
sarl
mov
and
jmp
mov
xchg
scas
into
sahf
test
in
push
or
sbb
movsl
cmp
jge
mov
cmpsl
pop
jle
cmpsb
in
push
cmpl
scas
fwait
imul
rcr
fmul
adc
rclb
cmc
fwait
outsb
lods
or
pushf
inc
jg
inc
inc
outsb
fsubr
jno
or
fwait
sahf
lods
or
sahf
je
push
fadd
cmp
fisubl
dec
push
mov
enter
out
push
cmc
xchg
or
inc
xchg
cmp
adc
xchg
enter
ljmp
dec
in
enter
mov
push
pushf
pop
inc
adc
cmp
mov
loope
xchg
mov
sbb
mov
cmp
das
into
sub
stc
filds
add
cli
cmp
mov
das
xchg
or
out
scas
jecxz
xor
jns
movsl
clc
lcall
arpl
arpl
clc
mov
lods
imul
mov
jns
cltd
out
popf
jo
idivl
inc
pop
repz
fs
lret
shr
dec
jo
jecxz
roll
adc
mov
mov
les
movsb
es
mov
mov
jnp
mov
add
lods
pusha
mov
push
sbb
popa
xchg
push
lds
xchg
inc
mov
jg
stos
rcll
sbb
inc
fwait
aad
adc
mov
test
jl
sbb
or
xlat
xor
dec
stos
add
loop
mov
outsl
or
add
stc
pusha
leave
add
mov
and
adc
jge
inc
movsb
xor
sbb
pushf
push
enter
out
outsb
mov
fidivrs
in
popl
js
fidivs
lock
ds
inc
mov
xor
xchg
jbe
mov
call
inc
pop
dec
sbb
pusha
test
mov
mov
insb
push
mov
dec
inc
dec
in
es
add
add
ret
mov
test
mov
imul
cmpsb
loope
rcrl
lock
test
cld
out
aam
adc
mov
mov
jp
dec
stc
pop
jmp
mov
lcall
jns
imul
mov
jp
dec
stc
pop
jmp
mov
lcall
jns
imul
mov
jle
dec
stc
pop
jmp
cmpl
sub
into
jge
insl
xor
xor
dec
stc
fisubrl
stos
sbb
and
lcall
push
and
jbe
inc
jecxz
sub
mov
push
push
pop
inc
cld
jb
arpl
adc
and
repnz
jecxz
xchg
xorl
push
mov
notb
arpl
adc
add
shll
jbe
inc
jecxz
xchg
xorl
push
mov
aad
mov
push
adc
dec
loope
sub
push
mov
pushf
mov
adc
gs
or
popf
pop
das
xchg
ret
fs
push
xchg
data16
fistl
mov
pushf
idivb
out
mov
in
cmp
fcmovnb
push
jbe
mov
xchg
adcb
fst
aad
out
mull
pop
ret
mov
jmp
arpl
push
lldt
push
mov
or
mov
mov
push
and
sub
mov
lods
mov
mov
mov
jecxz
cmp
inc
cmc
imul
aas
ret
pusha
jns
pop
jae
dec
mov
lods
out
repnz
mov
sub
add
xor
ret
jbe
inc
jecxz
xchg
xorl
push
mov
divb
arpl
adc
and
cmpsl
xchg
lahf
pop
lods
pop
shlb
inc
hlt
arpl
bound
xchg
icebp
out
sbb
pop
cmpsb
rorb
pop
hlt
push
repz
sbbb
push
stos
xor
mov
fstpt
add
push
test
jo
arpl
cmp
movsl
daa
in
and
rclb
ss
mov
divb
arpl
adc
and
repz
jecxz
xchg
xorl
push
mov
divb
arpl
adc
and
jle
mov
loopne
mov
inc
negb
call
adc
push
ret
xchg
outsb
fdivrs
stos
popf
mov
in
aas
or
or
mov
out
add
jno
or
inc
mov
jl
cmp
mov
test
popf
fsubp
pushf
pushl
test
push
movb
cmp
adc
pusha
mov
dec
ja
push
cs
adc
enter
jns
arpl
sbb
and
mov
aaa
push
xchg
pop
jae
arpl
stos
hlt
sbb
push
out
sbb
xchg
push
jl
lods
cmp
pop
mov
mov
pop
sbb
lea
mov
pop
das
inc
fwait
int3
arpl
and
out
push
mov
xchg
stc
or
daa
sbb
pop
orb
mov
mov
ret
iret
push
xchg
cli
mov
incl
jbe
mov
mov
in
inc
filds
shlb
es
and
jne
icebp
pushf
cltd
in
shl
lahf
cmpsl
or
sbb
jae
sbb
insl
xor
repz
mov
xchg
pop
sbb
ljmp
pop
dec
cs
mov
cmp
fsubs
fidivl
or
push
inc
jecxz
imul
and
pushf
and
shll
rclb
cmp
jbe
in
imul
and
repz
lret
jno
mov
movsb
jo
xor
test
repnz
mov
les
mov
cwtl
les
adc
pop
xor
inc
pop
push
pusha
aaa
inc
xchg
aaa
lods
roll
ficoms
dec
sbb
neg
mov
arpl
jo
dec
sbb
stc
cs
pushf
mov
arpl
jmp
dec
in
cmp
push
or
sbb
fimuls
sub
call
in
jecxz
gs
sti
bnd
and
jnp
mov
rcrb
jmp
adc
sub
aaa
rorl
dec
rdtsc
push
mov
js
xor
or
pop
gs
sti
ret
mov
inc
mov
shlb
ljmp
xor
jmp
xor
lcall
xchg
dec
xor
adc
push
cltd
adc
ja
cltd
xchg
inc
mov
push
imul
adc
inc
out
movsl
inc
lcall
or
mov
mov
fdivp
inc
sub
in
in
mov
inc
jbe
test
shll
popa
movsl
sub
or
sti
fcmovnbe
adc
xchg
or
ljmp
lahf
mov
cwtl
sbb
mov
cmp
xor
mov
sbb
leave
dec
clc
jp
push
cs
adc
jae
dec
pop
jnp
xchg
mov
int3
jecxz
inc
into
lret
xchg
shr
cmp
movsl
stc
bound
adc
lock
insl
sbb
push
outsl
rorb
jnp
pushf
mov
xchg
mov
mov
jo
or
sub
dec
and
and
pop
pop
xor
inc
out
dec
push
leave
and
aaa
icebp
out
adc
sub
push
sbb
loope
mov
aam
shlb
stos
stos
xorl
dec
dec
and
push
mov
push
fdiv
jns
cmp
inc
and
dec
adc
jecxz
rclb
dec
or
add
jns
iret
es
dec
xor
stos
aas
leave
add
jb
pop
jmp
shr
fnstsw
shrb
sub
pop
in
cmp
inc
mov
or
jns
mov
nop
mov
bound
xlat
aam
lock
shlb
xor
and
lock
repz
pusha
aad
decl
cmc
sbb
lods
jecxz
xchg
push
mov
cmp
sti
add
cmp
mov
dec
aaa
jle
push
push
rcr
dec
mov
and
mov
jle
fcoms
scas
in
in
push
aam
test
cmp
arpl
adc
es
inc
or
mov
inc
aad
mov
mov
lret
adc
ret
pop
test
fsubl
sbb
lods
xchg
mov
test
mov
cmc
nop
mov
add
leave
xchg
mov
or
ljmp
sbb
push
sub
xlat
enter
lcall
inc
pop
out
pop
aam
or
push
cltd
mov
mov
fldcw
xchg
test
js
add
lds
into
dec
movsl
inc
out
or
bound
icebp
mov
ja
inc
xchg
int3
daa
add
lods
sub
mov
mov
test
mov
push
inc
movsb
call
inc
mov
cwtl
xchg
icebp
push
and
cmp
cmp
xor
sahf
jmp
sub
loope
jb
loopne
repnz
ret
mov
arpl
repnz
add
push
rorl
pop
in
dec
mov
inc
mov
movsb
lret
xchg
jg
das
mull
das
into
or
xor
jno
mov
dec
pop
mov
dec
mov
cmpsl
mov
imul
test
aad
lds
aad
into
add
jecxz
testb
test
push
clc
mov
loope
loopne
cltd
stos
psubq
stc
sbbb
push
out
cmpsb
divps
jae
dec
push
jl
jmp
call
xchg
push
stos
addb
inc
or
mov
hlt
cmp
enter
das
xchg
adc
sbb
or
scas
adc
xchg
and
xchg
or
scas
push
fidivrl
nop
cmp
mov
xchg
mov
pop
xchg
jae
dec
stos
clc
mov
fcomps
clc
test
mov
rclb
aam
add
enter
fildll
push
lret
test
cs
repnz
cmp
inc
cmp
dec
lea
cs
aas
push
xchg
loopne
mov
mov
cmpsb
xchg
enter
fisttpl
push
test
inc
icebp
pop
loope
in
sub
lds
lret
dec
lods
scas
mov
aaa
mov
cwtl
shrl
sub
add
not
dec
test
ja
jmp
shrl
cmp
push
pop
mov
idivb
mov
mov
jle
pop
dec
xor
insl
and
stos
fldl
cld
dec
xor
xchg
out
in
ret
mov
lods
mov
and
cmc
mov
sbb
outsl
push
inc
mov
pop
cmp
or
stos
sbb
and
jbe
and
mov
in
xchg
push
rcrl
lahf
and
js
nop
pop
mov
dec
clc
mov
add
out
pop
jb
dec
xorl
dec
stos
jl
call
or
stos
jae
push
test
mov
sub
icebp
popa
test
sbb
gs
mov
imul
sahf
adc
nop
sar
mov
jne
fs
aaa
xor
jns
sbb
push
notb
mov
mov
sbb
scas
sbb
hlt
lahf
dec
inc
repnz
cltd
inc
push
mov
sbb
pop
jnp
ror
insl
int3
mov
cmp
mov
cmp
ret
pop
push
pop
mov
sbb
testb
das
mov
into
pop
enter
popf
add
xchg
push
out
scas
out
out
dec
push
clc
push
insl
cwtl
or
aad
hlt
lahf
fstpt
sub
orl
mov
lock
push
inc
repnz
mov
sub
cmc
gs
push
iret
xchg
lret
sub
outsl
stos
lcall
fnstenv
pop
fnstenv
cmp
cld
sub
ffreep
insb
enter
sbb
ljmp
dec
insl
mov
sub
shl
mov
test
cmpsl
js
or
call
imul
push
cmp
jne
int3
jb
inc
jae
xlat
xor
ljmp
jecxz
aad
clc
push
lods
fisubrs
dec
xchg
mov
repnz
int
push
out
add
dec
imul
cmp
dec
mov
fdivp
or
or
dec
mov
xor
movsl
xchg
adc
dec
lahf
aaa
or
pop
cmc
ret
xlat
or
xchg
rcrb
or
lods
fiadds
jae
outsb
adc
or
jle
mov
push
push
jp
push
daa
adc
ds
enter
daa
out
fwait
mov
mov
and
in
les
mov
imul
push
addr16
test
inc
loope
sub
ljmp
ljmp
sub
mov
jl
mov
mov
orb
dec
xchg
lret
aam
fcoms
or
xchg
jg
or
pusha
mov
lods
sub
pop
push
mov
or
and
or
enter
mov
iret
rorb
scas
jle
enter
xchg
jbe
aad
inc
or
dec
dec
sti
sbb
lret
dec
aaa
arpl
loopne
pusha
xchg
mov
add
add
jno
jge
jne
inc
stc
add
xchg
or
lock
in
pop
add
mov
les
popf
aad
xchg
mov
pop
fcmovu
imul
mov
adc
jno
sbb
mov
xor
cwtl
adc
inc
xsavec
xchg
inc
mov
push
das
inc
jnp
mov
cmp
movsl
or
call
mov
or
sbb
jg
stos
pusha
or
testl
pusha
mov
inc
std
in
lahf
int3
push
or
and
daa
js
and
adc
xchg
mov
adc
ret
subb
inc
pop
rolb
lods
dec
adc
mov
ret
repnz
mov
stos
adcb
idivl
mov
ss
out
xchg
mov
pushf
shrl
mov
or
jo
out
shlb
lock
cmp
push
jbe
pop
lret
or
ret
cmp
daa
jno
and
ret
push
clc
xchg
scas
sbb
sub
insl
out
or
xlat
lods
mov
lret
or
add
mov
mov
pop
jbe
movq
cwtl
xchg
jecxz
and
cmpsl
jo
dec
pop
in
nop
or
lds
xor
imul
movsb
xchg
mov
cmpsb
pushf
push
or
lea
sbb
aam
sbb
mov
rclb
cmp
and
cmp
es
fwait
das
gs
imull
rcrl
lods
add
jno
nop
inc
pop
xor
sub
push
scas
addr16
mov
jl
inc
mov
dec
jg
sbb
pop
cmpl
add
les
fs
dec
enter
sbb
jo
movsb
sahf
jbe
sbb
or
cmp
movb
sub
mov
push
cmp
xchg
stos
filds
lcall
lret
in
or
mov
ret
adc
sbb
sbb
push
dec
push
pop
inc
clc
and
repnz
imul
fs
xor
push
pushf
lds
sbb
shll
or
pushf
cli
mov
sub
imul
hlt
add
sub
notl
jp
dec
cld
scas
ja
cmpsb
inc
jl
leave
adc
xchg
mov
lahf
xor
jb
insl
stos
xor
cli
sbb
movsb
gs
pop
pushf
les
ret
pop
adc
movsb
inc
mov
leave
dec
cltd
cltd
jo
outsl
xor
into
jb
xchg
or
inc
pop
cmpsl
cwtl
xlat
and
hlt
out
call
ror
mov
loopne
cld
cmp
cwtl
jno
data16
ja
mov
arpl
xor
mov
into
push
addb
shrl
mov
sahf
jns
xchg
clc
ret
push
xchg
or
insb
lea
das
push
or
icebp
in
jbe
xor
jge
adc
loopne
sbb
jmp
push
dec
out
pusha
dec
jbe
add
inc
add
dec
sub
dec
mov
divb
add
test
jp
mov
push
mov
add
cwtl
add
loop
aas
push
das
jecxz
xor
lcall
cmp
lahf
sub
sahf
inc
ss
dec
jno
lds
push
stos
fisttps
add
fst
push
dec
xor
lret
or
pop
dec
push
leave
dec
and
mov
call
jp
outsl
aad
stos
push
mov
leave
add
enter
sbb
daa
scas
std
into
jge
repnz
repz
sahf
dec
mov
fsubl
cltd
fldl
leave
mov
daa
mov
inc
out
mov
shlb
xor
jge
scas
ret
mov
mov
lea
aam
xchg
xor
push
inc
jno
cmp
mov
xor
imul
roll
jb
mov
rorb
fwait
sub
xor
popa
in
push
mov
negb
fnstenv
xchg
iret
mov
lret
movsb
test
adc
xor
cltd
iret
jne
es
mov
fstpl
sub
or
adcl
adc
mov
movsb
mov
mov
data16
jo
push
movsl
push
clc
lret
push
sti
decb
fsubr
sub
and
mov
sti
mov
ss
aam
icebp
and
jbe
orl
loopne
pop
ja
and
test
push
sti
cmp
pop
jle
fistpll
les
ss
dec
rolb
xchg
push
mov
push
mov
sub
cltd
sbb
sub
pop
inc
mov
jne
cmp
call
adc
adc
test
inc
mov
loopne
pop
xor
shlb
test
or
fisubs
vmovlpd
mov
out
ret
cltd
adc
sbbb
fsubrs
daa
xchg
aas
fdivl
sbb
iret
fst
inc
mov
jg
inc
inc
loopne
int
jmp
stc
lret
cmp
xchg
int
dec
lret
mov
mov
ret
sbb
out
dec
sub
mov
pop
call
pushf
sarb
stos
cmpl
mov
aas
xchg
jle
lahf
adc
in
pop
jae
jl
jecxz
mov
adc
or
int3
cmp
xchg
pop
out
addr16
and
push
dec
cld
jns
sbb
sbb
and
jmp
pop
imul
lret
out
fwait
sti
loopne
popa
int
arpl
adc
addr16
xchg
sub
xor
mov
push
pop
and
pusha
and
jmp
inc
out
pop
cmc
dec
ss
xsha1
cmpsb
iret
mov
mov
pop
cmpsl
pop
push
loop
cmp
jl
divb
add
mov
adc
pusha
add
pop
lods
jae
push
nop
lods
xchg
mov
xor
dec
or
into
mov
mov
call
test
push
xchg
push
nop
mov
dec
shlb
cmp
pop
std
mov
out
mov
insl
jecxz
scas
in
inc
int3
icebp
dec
out
xor
roll
xchg
adc
xchg
push
pop
imul
fisttpl
push
aas
lahf
inc
ljmp
insl
pushf
movsl
xor
or
add
xchg
dec
dec
mov
sub
sbb
adc
lea
or
jns
push
loopne
sti
xchg
pop
pop
sbb
dec
rolb
test
ss
inc
inc
xor
jns
repnz
fwait
adc
push
jae
push
push
inc
xor
sub
push
inc
repz
pop
cwtl
aad
mov
adc
or
ret
and
cmpl
or
and
int3
mov
cld
pop
aas
pop
lahf
mov
dec
in
push
mov
mov
stos
jmp
sub
and
sub
add
insb
out
push
push
in
out
stos
orb
and
clc
test
fwait
jnp
out
imul
mov
xchg
repz
aam
or
fsubrl
popf
inc
push
push
lahf
inc
sub
sbb
fs
cld
dec
popa
cmc
push
pop
dec
out
or
sub
push
out
xchg
divb
sub
stc
dec
pop
loop
inc
xor
jge
jb
shrl
xor
xchg
shlb
mov
pop
or
push
mov
and
add
xchg
int3
inc
xlat
push
cmp
sub
mov
add
sbb
sti
sbb
int
std
pop
loopne
mov
push
int
cltd
cmc
idivb
or
mov
xchg
jle
lret
push
sub
xor
test
pop
mov
push
jmp
jb
das
inc
push
mov
push
xor
cmp
clc
addl
cmp
out
and
xchg
add
add
lods
in
pusha
nop
add
mov
aad
adc
xor
mov
scas
iret
je
push
mov
lret
cld
mov
lds
inc
adc
movsl
mov
jae
jbe
adc
mov
fistpl
enter
push
test
jle
inc
mov
xchg
fcomip
ja
fisubrl
arpl
or
adc
jmp
stos
das
shlb
cld
pop
mov
dec
lods
cmpsb
adcl
adc
add
mov
stos
xor
push
int
pop
pop
out
lahf
pop
jns
sub
addb
jge
cmp
xor
shll
add
hlt
incl
pop
pop
sub
idivb
rolb
subb
jg
jo
lahf
or
clc
sub
pop
rclb
xor
sbb
outsb
inc
ljmp
stc
repz
jp
lods
fnsave
mov
pop
sbb
les
mov
stos
pop
mov
popa
test
push
pop
sub
sub
mov
das
ljmp
xor
pop
in
adc
pop
pop
push
roll
outsl
xor
sub
mov
inc
jmp
cmp
adc
mov
push
dec
jnp
and
adc
sbb
loop
daa
outsb
scas
inc
ja
js
add
xchg
xor
leave
mov
push
ficoml
add
and
xor
insb
push
pop
les
xchg
dec
imul
test
lea
mov
or
loop
dec
cmp
pop
cmp
cwtl
shrb
cmp
popa
addr16
popa
xor
fstpt
int3
pop
inc
xor
aaa
clc
dec
and
mov
popf
xchg
iret
pop
and
je
add
stos
mov
cmpsl
fisubs
divl
cmpsl
pshufw
pop
sti
mov
and
popf
mov
stos
inc
xor
mov
or
dec
inc
insb
sub
nop
and
sbb
push
ret
lea
divb
lret
sub
popa
jmp
mov
repnz
int
xor
mov
clc
movsl
pop
test
mov
test
test
push
dec
cmp
inc
cmp
push
idivw
mov
push
pop
test
movntq
mov
add
push
sub
inc
inc
pop
int3
leave
push
movsb
je
ret
mov
jmp
in
push
nop
mov
xchg
pop
ljmp
push
das
jmp
dec
mov
enter
insb
adc
add
xlat
negl
out
iret
add
mov
inc
push
shr
test
sub
test
cmpsl
icebp
into
mov
ja
jbe
cld
jno
cmp
mov
shl
mov
mov
addr16
je
les
in
lret
frstor
dec
push
outsl
or
adc
scas
xlat
dec
push
push
jo
adc
ja
js
ror
movsl
pusha
mov
dec
adc
push
jl
inc
and
dec
andb
fcoml
dec
dec
pop
jo
icebp
ds
daa
xchg
daa
ds
jmp
fisubl
dec
rcll
inc
and
adc
jno
shr
or
add
push
jb,pn
dec
movsb
jb
push
sbb
std
xchg
outsb
enter
add
fldl
cmpb
xchg
jg
cmpsl
rcll
mov
adc
loopne
fsts
push
jl
in
and
test
cli
push
mov
mov
les
sub
adc
cmp
sbb
out
addr16
insl
mov
push
sub
cmp
and
push
shll
enter
cs
or
fs
jns
push
pushf
mov
inc
rcll
arpl
or
adc
sub
out
push
xchg
fidivs
xorb
jno
loope
or
sub
gs
gs
mov
sarb
jl
push
mov
push
popf
repz
mov
cs
xchg
mov
lds
xor
sbb
mov
cmc
outsb
aas
cmp
xlat
decb
sub
xchg
mov
test
xor
out
rolb
cwtl
popf
enter
xchg
imulb
xor
fcmovbe
xor
adc
test
loop
popl
fisubl
call
push
shrb
jo
cmp
sbb
cli
outsl
scas
sbb
jne
inc
icebp
mov
sbbl
push
sahf
cmc
pop
sbb
popa
jp
inc
arpl
pop
out
mov
sbb
loopne
cmpsl
mov
pop
pop
mov
fwait
mov
push
ja
fld
cs
mov
sbb
mov
loopne
stos
int
cmp
pop
enter
or
adc
jo
arpl
pop
fiaddl
sub
nop
inc
cmc
pushf
test
and
lea
mov
cmpsb
or
xchg
sbb
mov
jbe
inc
jecxz
xchg
xorl
push
mov
divb
arpl
adc
and
repz
jecxz
xchg
xorl
push
mov
divb
arpl
adc
and
repz
jecxz
xchg
xorl
push
mov
divb
arpl
adc
and
repnz
jecxz
xchg
xorl
push
mov
pop
fld
arpl
int3
jns
imul
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
mov
pop
sti
loope
pop
add
add
add
push
add
or
testl
push
push
push
push
enter
or
add
xor
hlt
add
jae
outsl
add
ret
add
sbb
adc
arpl
into
add
mov
add
add
add
add
add
add
loope
cwtl
add
add
add
inc
add
add
add
add
pop
push
add
or
add
add
add
add
add
add
add
push
add
add
add
add
mov
add
and
adc
add
xor
xor
rolb
inc
add
ret
add
add
add
push
add
add
inc
add
add
sbb
adc
xor
pop
add
add
add
add
add
add
add
ja
lcall
add
adc
xor
xor
movsb
add
add
add
add
add
add
add
add
add
jns
or
inc
add
add
add
add
or
add
add
add
hlt
add
add
jbe
fiadds
add
mov
add
add
add
add
add
add
add
fldl
aas
add
je
roll
ljmp
add
add
add
pop
add
mov
pop
add
add
str
add
xor
popl
push
add
add
add
add
and
adc
adc
dec
add
add
add
add
call
add
and
cmpsb
add
add
add
pop
add
add
add
add
add
faddl
dec
add
and
push
add
testl
add
xor
add
add
add
push
pop
add
add
add
push
add
mov
pop
add
add
add
or
lahf
add
and
mov
add
add
add
pop
add
add
add
add
add
add
add
dec
add
xor
cmp
sbb
popa
add
add
add
xchg
add
add
add
add
add
add
faddl
arpl
fiadds
add
add
add
inc
add
push
add
add
add
add
add
jno
add
rolb
enter
test
loope
jns
xchg
add
cmpsl
add
add
mov
add
imul
push
add
add
add
add
add
cs
add
add
add
add
add
mov
add
rolb
add
mov
int3
add
add
inc
add
push
add
add
imul
add
sahf
add
add
add
push
add
xor
aad
addb
add
cltd
add
push
add
jge
lahf
add
add
jl
add
jae
xor
xor
push
add
add
pusha
add
add
push
add
add
add
add
xor
aad
add
add
push
add
add
push
add
add
add
add
jg
aas
or
dec
cld
inc
lret
data16
and
ljmp
lods
cmc
imul
loop
stos
fbld
mov
or
jo
xor
push
fadds
xor
mov
push
jbe
push
int
jnp
mov
arpl
push
int3
cltd
js
and
xor
lret
jo
adc
and
rclb
pushf
clc
out
lds
dec
mov
icebp
xor
cmp
data16
jo
mov
pop
mov
adc
fildl
andb
jne
pop
dec
idivb
jge
outsl
cmp
repz
shl
sbb
das
jns
add
mov
sti
fcomip
ds
daa
out
dec
into
sub
test
scas
outsl
adc
in
mov
leave
cli
insl
xchg
mov
outsl
xor
popa
gs
lods
dec
lcall
rcrl
ja
sub
mov
test
xor
lea
pop
test
and
lods
out
js
pushf
push
sbb
ret
sub
fisubrs
cmp
ret
sbb
xchg
jbe
inc
repnz
push
jl
lea
dec
imull
fs
push
dec
add
mov
sbb
jmp
mov
fisttps
and
mov
push
inc
fistpl
lds
jmp
rcr
xor
xchg
xor
out
fstpl
pop
test
shlb
or
or
aaa
cwtl
int3
or
ret
int3
xchg
push
lods
adc
dec
jne
jp
mov
and
scas
jp
inc
jb
sub
mov
cmc
cmp
lea
mov
cld
mov
push
xchg
or
inc
mov
arpl
mov
push
mov
fisubrs
push
ljmp
mov
mov
mov
xor
jge
ja
xchg
inc
cmp
sbb
xchg
mov
and
or
inc
cwtl
icebp
mov
inc
je
outsb
pusha
pop
lds
js
mov
pop
mulb
lahf
int3
xchg
es
data16
mov
bound
scas
ret
cli
loop
mov
mov
test
arpl
push
dec
jo
cmp
jmp
mov
in
cmp
jae
xchg
jl
or
pop
jnp
ret
pop
gs
pop
mov
sbb
xchg
ret
out
leave
mov
mov
bound
add
push
pop
mov
andl
sub
rclb
sub
dec
and
cmp
lahf
shlb
sub
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
