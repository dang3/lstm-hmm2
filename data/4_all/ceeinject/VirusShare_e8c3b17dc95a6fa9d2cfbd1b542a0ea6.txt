ljmp
jae
pop
cmp
push
jae
push
cmp
lret
bound
jae
mov
cmp
popf
aaa
jae
push
cmp
cmp
popa
cmp
sbb
jae
shlb
clc
lahf
aaa
jae
cmp
fdivs
jae
cwtl
cmp
mov
cmp
inc
cmp
into
aaa
jae
add
jae
add
jae
cwtl
cmp
jno
jae
xchg
cmp
pusha
cmp
jnp
jae
aas
aaa
jae
cwtl
ss
shll
push
ja
jae
push
cmp
xchg
cmp
les
jae
push
cmp
xchg
cmp
dec
aaa
jae
mov
cmp
cltd
ss
pop
cmp
xchg
cmp
xchg
cmp
cwtl
ss
jbe
jae
inc
cmp
mov
cmp
add
jae
jbe
jae
pop
aaa
jae
jne
jae
push
cmp
push
cmp
ret
aaa
jae
data16
push
cmp
or
jae
lds
jae
or
jae
xchg
cmp
in
jae
cmp
jae
lahf
aaa
jae
mov
cmp
ja
jae
add
jae
add
jae
imul
jae
add
jae
dec
cmp
sti
cmp
xor
cmp
cltd
cmp
ja
jae
insl
cmp
mov
aaa
jae
push
cmp
imul
mov
nop
cmp
imul
jae
xchg
cmp
insb
cmp
sbb
jae
sbb
jae
in
cmp
sbb
jae
sbb
jae
xchg
cmp
sbb
jae
sbb
jae
xchg
cmp
fidivrl
jae
popf
aaa
jae
imul
jae
add
inc
add
add
pop
add
add
inc
add
out
inc
add
add
lret
or
add
inc
add
or
add
add
add
adc
dec
add
add
out
inc
add
out
inc
add
lock
add
icebp
inc
add
repnz
add
repnz
add
repnz
add
repnz
add
repnz
add
repnz
add
repnz
add
repz
add
repz
add
hlt
inc
add
cmc
inc
add
cmc
inc
add
testl
cmp
add
stc
inc
add
stc
inc
add
stc
inc
add
inc
add
cld
inc
add
cld
inc
add
std
inc
add
inc
add
inc
add
add
inc
add
inc
add
incl
clc
incl
xchg
add
cltd
add
xor
add
add
fildl
inc
add
inc
add
inc
add
add
iret
add
fiadds
inc
add
add
jg
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
inc
add
or
sti
or
pop
or
rorl
add
or
aas
or
lods
or
adc
inc
add
inc
add
add
add
or
rorl
inc
add
or
add
or
add
add
add
add
add
add
xor
inc
add
add
add
adc
and
add
push
cmovae
adc
cmovae
repz
inc
adc
inc
adc
push
adc
imul
inc
add
inc
add
inc
add
inc
add
adc
rcll
inc
add
inc
add
pop
inc
add
sbb
movsl
sbb
stos
sbb
mov
sbb
adc
inc
add
sbb
cmc
sbb
sbb
inc
add
sbb
add
sbb
add
sbb
dec
inc
add
add
add
lods
inc
pop
add
add
and
adc
inc
add
and
push
add
add
add
pop
sub
pop
sub
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
call
add
add
add
xor
add
cmp
add
add
add
dec
pop
fisttpl
or
dec
mov
or
add
add
add
add
add
and
inc
outsl
jb
arpl
imul
and
add
add
int3
xor
add
std
dec
sbb
and
scas
fbstp
movsb
into
js
test
adc
add
dec
lods
xor
or
stos
add
xchg
out
ret
add
push
add
add
or
inc
cmp
dec
push
add
cmp
dec
push
add
add
inc
add
add
jmp
add
gs
push
add
pop
jmp
adc
add
add
add
add
add
add
insb
dec
dec
inc
cmp
add
add
add
insb
je
add
add
inc
dec
imulb
add
add
add
add
add
add
cmp
add
add
add
add
ret
add
je
add
je
add
rol
rol
push
lret
inc
inc
addb
add
and
sti
incl
pusha
andb
andb
lock
push
sti
push
sti
push
sti
push
sti
push
sti
jmp
add
add
sti
incl
and
and
mov
andb
andb
inc
rolb
pusha
pusha
inc
add
inc
inc
add
add
add
add
add
mov
rolb
andb
andb
addb
and
add
inc
rolb
add
addb
inc
and
incl
inc
fadd
rol
lock
push
sti
incl
inc
lock
and
and
and
inc
pusha
andb
lock
push
sti
jmp
lock
push
sti
incl
add
sti
incl
rolb
addb
andb
inc
shlb
andb
inc
inc
inc
add
add
add
add
add
add
add
mov
shlb
andb
andb
inc
add
inc
andb
pusha
and
pusha
inc
and
inc
and
andb
andb
incl
inc
lock
jmp
rolb
lret
lret
and
lret
add
sti
push
sti
inc
add
and
mov
addb
add
mov
andb
mov
inc
add
mov
rolb
pusha
inc
shlb
add
inc
add
inc
inc
add
add
add
add
add
addb
and
andb
andb
shlb
add
rolb
pusha
add
addb
andb
pusha
inc
and
inc
add
inc
and
incl
and
push
sti
push
sti
inc
fadd
shlb
inc
pusha
andb
lock
lret
lret
inc
pusha
andb
addb
and
and
mov
andb
shl
and
add
and
and
and
and
mov
andb
addb
inc
inc
inc
add
add
add
add
add
add
add
add
andb
andb
andb
pusha
add
addb
add
add
add
inc
add
add
and
add
addb
andb
push
sti
incl
inc
lock
inc
fadd
push
sti
inc
mov
addb
and
rolb
and
sti
incl
pusha
rolb
and
and
and
mov
inc
mov
inc
and
and
mov
addb
pusha
and
pusha
and
pusha
and
addb
add
add
add
add
add
add
pusha
and
andb
andb
pusha
and
andb
addb
inc
addb
inc
and
add
add
inc
inc
inc
shlb
mov
push
sti
push
sti
push
sti
push
sti
jmp
inc
shlb
cmpsb
lock
andb
pusha
lock
push
sti
push
sti
incl
loopne
and
add
fadd
inc
andb
loopne
and
and
and
mov
shlb
pusha
inc
shlb
inc
add
add
add
add
add
add
add
pusha
inc
rolb
pusha
and
andb
addb
inc
inc
and
inc
and
inc
pusha
inc
inc
pusha
inc
addb
pusha
add
mov
rolb
push
sti
push
sti
push
sti
incl
shl
jmp
shlb
inc
and
pusha
lock
inc
add
pusha
mov
and
and
and
sti
incl
rolb
inc
and
mov
movsb
mov
shlb
andb
mov
inc
inc
add
add
add
add
add
add
mov
shlb
pusha
and
pusha
and
add
inc
andb
pusha
add
addb
incl
pusha
inc
inc
pusha
rolb
add
inc
pusha
rol
addb
inc
inc
addb
pusha
inc
rolb
and
and
sti
incl
add
loopne
and
add
sti
incl
rolb
shlb
addb
inc
shlb
pusha
and
addb
and
add
addb
inc
rolb
andb
add
addb
and
pusha
add
addb
and
mov
inc
pusha
inc
addb
add
addb
pusha
and
incl
add
shl
inc
add
and
sti
inc
add
andb
inc
shlb
mov
addb
add
and
and
add
and
mov
shlb
pusha
and
andb
andb
pusha
add
andb
mov
rolb
andb
pusha
add
pusha
and
pusha
inc
andb
inc
and
shlb
addb
and
addb
andb
mov
add
add
add
and
and
addb
and
push
sti
incl
rolb
shlb
sti
incl
pusha
shlb
mov
addb
inc
and
inc
shlb
and
add
and
and
add
inc
inc
rolb
mov
rolb
mov
rolb
pusha
pusha
andb
rolb
andb
add
shlb
add
inc
and
shlb
addb
and
addb
andb
mov
inc
and
andb
and
inc
pusha
and
addb
and
pusha
and
inc
rol
rol
incl
mov
and
sti
incl
pusha
andb
and
and
and
mov
movsb
mov
inc
mov
shlb
rolb
inc
add
addb
andb
rolb
pusha
and
andb
addb
addb
addb
mov
rolb
inc
add
mov
andb
rolb
addb
add
pusha
rolb
mov
rolb
and
rolb
and
andb
andb
andb
rol
rol
rol
rol
rol
rol
incl
addb
lock
push
sti
push
sti
push
sti
inc
add
and
sti
push
sti
incl
incl
inc
shlb
shlb
shlb
andb
addb
and
pusha
inc
rolb
addb
and
andb
addb
inc
add
add
add
add
add
add
add
addb
and
addb
pusha
rolb
addb
inc
rolb
andb
add
add
inc
rolb
andb
rol
rol
rol
rol
rol
rol
rol
rol
add
and
inc
pusha
rolb
and
and
and
push
sti
jmp
lock
inc
fadd
inc
mov
shlb
shlb
shlb
andb
lock
inc
add
pusha
pusha
rolb
pusha
inc
shlb
addb
and
add
addb
inc
add
add
add
add
add
addb
inc
rolb
inc
add
inc
andb
rolb
and
andb
add
inc
add
inc
add
shlb
addb
and
rol
rol
rol
rol
rol
rol
rol
rolb
inc
inc
pusha
rolb
sti
incl
pusha
inc
mov
lock
push
sti
inc
mov
shlb
shlb
shlb
rolb
add
sti
jmp
shlb
addb
inc
shlb
pusha
inc
inc
inc
add
andb
inc
add
add
add
add
add
add
add
and
mov
rolb
and
inc
and
rolb
add
movsb
mov
inc
add
andb
rolb
rol
rol
rol
rol
rol
rol
rol
rol
rol
mov
addb
sti
incl
inc
lock
incl
push
sti
jmp
movsb
mov
lock
lret
and
add
and
add
inc
pusha
rolb
pusha
inc
rolb
mov
rolb
inc
add
add
add
add
addb
inc
add
add
mov
pusha
and
andb
addb
and
add
add
and
rolb
andb
add
rolb
andb
rol
rol
rol
rol
rol
rol
rol
rol
mov
andb
fadd
lock
incl
shl
push
sti
jmp
movsb
mov
addb
and
and
and
and
sti
inc
mov
addb
mov
addb
andb
andb
mov
inc
inc
add
add
pusha
and
add
add
pusha
rolb
addb
add
pusha
inc
inc
and
rolb
inc
pusha
pusha
shlb
pusha
inc
andb
rol
rol
rol
rol
rol
rol
rol
rol
rol
mov
lock
push
sti
push
sti
incl
addb
mov
andb
sti
inc
mov
addb
inc
inc
addb
lret
andb
and
push
lret
incl
addb
inc
rolb
add
add
add
add
add
push
sti
inc
mov
lock
incl
inc
add
add
and
sti
incl
inc
incl
add
inc
rol
rol
rol
rol
rol
rol
rol
rol
rol
incl
pusha
movsb
mov
add
add
add
lock
incl
pusha
addb
sti
push
sti
incl
inc
mov
rol
shlb
sti
push
sti
incl
addb
addb
addb
sti
push
sti
push
sti
push
sti
push
sti
incl
add
sti
push
sti
jmp
add
add
incl
add
mov
movsb
mov
lock
incl
add
add
add
addb
rol
rol
rol
rol
rol
sar
incl
inc
lock
incl
addb
addb
addb
addb
addb
addb
addb
pusha
mov
and
pusha
shl
incl
and
lret
pusha
inc
inc
mov
add
add
jmp
andb
mov
lock
push
sti
push
sti
incl
inc
addb
mov
lock
push
sti
incl
add
andb
mov
rol
rol
rol
rol
rol
rol
rol
rol
rol
push
sti
incl
pusha
add
add
add
add
rolb
sti
incl
inc
mov
inc
inc
and
and
inc
andb
addb
add
addb
sti
inc
mov
movsb
mov
addb
fadd
incl
inc
andb
andb
push
sti
push
sti
incl
incl
add
addb
mov
movsb
mov
add
add
sti
inc
rol
rol
rol
rol
rol
rol
push
sti
incl
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
and
and
and
and
inc
inc
inc
shlb
mov
addb
addb
addb
addb
incl
addb
addb
addb
sti
push
sti
push
sti
incl
pusha
andb
push
sti
push
sti
push
sti
push
sti
incl
push
sti
incl
add
sti
jmp
inc
and
rol
rol
rol
rol
rol
rol
rol
incl
incl
addb
addb
addb
addb
addb
addb
addb
sti
push
sti
inc
add
and
sti
incl
inc
shlb
push
sti
incl
addb
addb
addb
shlb
add
addb
pusha
pusha
andb
pusha
pusha
andb
sti
push
sti
push
sti
push
sti
push
sti
push
sti
incl
push
sti
incl
add
incl
add
add
add
incl
add
rol
rol
rol
rol
rol
rol
push
sti
incl
add
addb
addb
addb
addb
addb
addb
sti
incl
inc
andb
lock
incl
push
sti
incl
inc
incl
inc
rcr
incl
addb
addb
addb
addb
addb
addb
addb
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
inc
fadd
lock
push
sti
push
sti
push
sti
push
sti
incl
mov
sti
push
sti
incl
add
add
add
rol
rol
rol
sti
inc
rol
rol
inc
rol
push
sti
push
sti
push
sti
incl
addb
addb
addb
addb
addb
sti
push
sti
push
sti
inc
mov
lock
push
sti
inc
andb
incl
pusha
inc
inc
and
add
add
shlb
mov
andb
mov
mov
add
movsb
mov
movsb
mov
andb
mov
andb
mov
movsb
mov
movsb
mov
rol
rol
rol
rol
rol
rol
rol
rol
inc
rol
rol
jmp
lock
inc
fadd
lock
incl
addb
incl
inc
inc
inc
inc
inc
and
sti
incl
pusha
rolb
addb
push
sti
push
lret
inc
add
incl
addb
mov
lock
inc
rol
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
incl
mov
sti
push
sti
inc
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
addb
push
sti
push
sti
push
sti
incl
inc
incl
inc
lock
incl
incl
inc
lock
incl
pusha
lock
push
sti
incl
inc
lock
mov
rol
inc
pusha
inc
movsb
mov
push
sti
push
sti
push
sti
inc
fadd
lock
inc
fadd
push
sti
push
sti
push
sti
push
sti
push
sti
inc
fadd
lock
inc
fadd
lock
push
sti
incl
xor
push
sti
push
sti
push
sti
inc
rol
add
rol
rol
rol
rol
rol
rol
inc
rol
rol
sti
push
sti
inc
fadd
lock
push
sti
push
sti
push
sti
inc
fadd
lock
push
sti
push
sti
inc
mov
lock
push
sti
push
sti
push
sti
push
sti
incl
xor
cmpsb
rol
rol
inc
rol
rol
rol
mov
push
sti
push
sti
push
sti
push
sti
inc
fadd
push
sti
inc
rol
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
incl
push
sti
inc
rol
rol
rol
rol
rol
rol
rol
rol
inc
rol
rol
push
sti
incl
push
sti
push
sti
push
sti
incl
inc
lock
push
sti
incl
inc
lock
incl
incl
push
sti
push
sti
push
sti
push
sti
push
sti
incl
inc
inc
inc
and
rolb
incl
inc
lock
incl
inc
shlb
push
sti
push
sti
incl
inc
lock
incl
incl
pusha
lock
push
sti
push
sti
inc
fadd
rcr
lock
push
sti
inc
fadd
lock
incl
inc
fadd
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
and
lock
push
sti
push
sti
incl
inc
lock
push
sti
push
sti
incl
pusha
andb
rolb
add
sti
incl
pusha
inc
inc
pusha
inc
inc
pusha
inc
and
inc
xor
push
sti
inc
shlb
pusha
inc
inc
pusha
inc
inc
inc
shlb
inc
inc
inc
inc
inc
inc
inc
pusha
add
inc
inc
inc
addb
andb
andb
addb
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
incl
add
sti
jmp
lock
push
sti
push
sti
inc
rol
add
rol
rol
rol
rol
rol
rol
inc
fadd
rcr
lock
push
sti
inc
mov
lock
push
sti
push
sti
incl
addb
addb
addb
and
inc
addb
inc
and
and
inc
pusha
rol
add
add
add
pusha
shlb
mov
shlb
sti
incl
addb
andb
andb
andb
andb
inc
and
push
sti
push
sti
push
sti
push
sti
incl
add
add
sti
incl
add
push
sti
push
sti
push
sti
push
sti
push
sti
inc
rol
rol
rol
rol
rol
push
sti
push
sti
push
sti
incl
inc
inc
inc
pusha
inc
and
add
and
and
sti
incl
loopne
mov
inc
inc
addb
inc
inc
mov
mov
shlb
and
loopne
add
addb
shlb
shlb
rolb
shlb
add
add
sti
push
sti
inc
fadd
lock
incl
add
add
add
add
add
add
incl
push
sti
push
sti
incl
add
add
add
inc
rol
push
sti
push
sti
incl
pusha
lock
incl
cmpsb
andb
addb
and
and
and
addb
inc
add
inc
and
inc
inc
mov
inc
addb
shlb
inc
xor
incl
and
mov
add
inc
inc
pusha
inc
pusha
pusha
add
lock
inc
mov
inc
and
and
add
and
pusha
pusha
lock
incl
inc
incl
add
add
add
add
sti
incl
add
sti
incl
push
sti
push
sti
push
sti
push
sti
incl
and
addb
addb
inc
inc
rolb
andb
inc
loopne
add
inc
add
inc
and
inc
inc
mov
inc
addb
inc
inc
addb
inc
inc
mov
and
and
and
inc
addb
add
addb
inc
pusha
inc
inc
addb
inc
and
add
pusha
inc
lock
push
sti
incl
add
add
add
add
add
add
inc
inc
inc
add
add
sti
incl
push
sti
push
sti
push
sti
incl
and
lock
andb
pusha
andb
inc
and
and
and
inc
and
inc
add
add
rolb
add
addb
inc
inc
add
mov
add
mov
add
addb
add
pusha
add
add
inc
inc
inc
movsb
mov
rol
inc
inc
pusha
inc
inc
addb
inc
and
pusha
inc
inc
pusha
pusha
push
sti
incl
add
sti
incl
add
add
add
inc
inc
inc
add
sti
push
sti
incl
push
sti
push
sti
incl
addb
andb
mov
inc
and
inc
loopne
and
inc
pusha
loopne
and
inc
add
inc
add
add
loopne
and
inc
inc
add
add
add
add
add
rolb
addb
mov
and
and
mov
rol
rol
rol
lock
sti
incl
addb
inc
and
incl
inc
inc
pusha
and
and
add
add
pusha
inc
inc
add
add
sti
push
sti
push
sti
jmp
inc
and
loopne
inc
loopne
inc
rolb
loopne
and
shlb
pusha
inc
pusha
and
inc
inc
pusha
and
pusha
inc
and
and
inc
add
addb
add
inc
add
inc
add
add
rolb
inc
inc
add
add
add
rolb
loopne
inc
add
and
add
loopne
and
inc
and
add
mov
and
and
incl
add
xor
incl
pusha
add
addb
inc
fadd
lock
incl
and
add
add
add
add
add
sti
push
sti
push
sti
push
sti
incl
pusha
rolb
loopne
inc
loopne
inc
rolb
rolb
add
add
inc
mov
add
andb
and
inc
and
inc
and
inc
and
addb
and
inc
add
inc
add
inc
and
add
rolb
inc
inc
add
add
add
add
add
and
add
loopne
and
inc
and
inc
add
add
rolb
mov
inc
add
rol
mov
lret
shlb
mov
sti
incl
and
inc
push
sti
incl
add
addb
push
sti
push
sti
push
sti
incl
pusha
addb
andb
pusha
add
pusha
inc
rolb
rolb
inc
andb
rolb
inc
inc
loopne
inc
shlb
addb
inc
add
inc
and
inc
add
addb
and
inc
add
inc
add
inc
inc
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
rolb
add
addb
addb
inc
inc
add
rol
addb
add
add
andb
pusha
and
inc
fadd
inc
rol
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
incl
inc
add
inc
add
inc
inc
loopne
inc
rolb
addb
inc
andb
rolb
inc
inc
loopne
inc
inc
add
add
add
add
add
rolb
inc
add
add
add
incl
add
add
add
add
add
add
add
add
add
incl
add
add
incl
and
add
mov
add
inc
mov
rol
addb
addb
addb
addb
addb
addb
addb
pusha
and
sti
push
sti
incl
inc
lock
push
sti
push
sti
push
sti
push
sti
push
sti
incl
and
pusha
add
inc
add
inc
inc
shlb
addb
inc
mov
inc
rolb
and
loopne
inc
inc
add
add
add
add
add
add
add
addb
addb
addb
incl
inc
addb
inc
inc
add
add
loopne
inc
add
add
add
add
incl
add
add
incl
and
add
mov
add
inc
mov
rol
addb
addb
addb
addb
addb
addb
addb
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
incl
add
loopne
add
pusha
inc
rolb
addb
inc
loopne
add
and
loopne
inc
inc
add
add
add
add
add
add
add
inc
addb
addb
addb
addb
addb
incl
add
add
add
add
add
add
add
incl
add
add
incl
and
add
loopne
and
and
inc
rolb
addb
add
addb
addb
addb
addb
addb
addb
addb
addb
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
incl
add
add
add
add
add
pusha
inc
rolb
add
loopne
add
and
add
add
add
add
add
add
add
add
add
inc
addb
addb
addb
addb
addb
addb
incl
add
add
add
incl
add
add
loopne
and
add
loopne
and
inc
and
inc
and
and
inc
inc
add
add
and
addb
addb
addb
pusha
pusha
add
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
push
sti
incl
add
sti
incl
add
add
add
loopne
add
inc
inc
loopne
add
and
loopne
add
and
loopne
inc
inc
add
add
add
add
add
add
add
inc
addb
addb
addb
addb
add
add
add
add
incl
loopne
and
add
loopne
and
add
loopne
and
inc
add
inc
inc
loopne
add
inc
add
add
add
add
mov
addb
addb
addb
addb
addb
addb
push
sti
push
sti
inc
fadd
push
sti
push
sti
push
sti
push
sti
incl
add
add
add
add
add
add
add
incl
add
and
loopne
add
and
loopne
inc
loopne
inc
inc
add
add
add
add
add
add
rolb
addb
addb
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
and
inc
and
inc
and
inc
and
inc
and
add
mov
inc
add
add
add
add
add
add
mov
addb
addb
addb
addb
jmp
incl
add
push
sti
push
sti
push
sti
push
sti
incl
add
add
add
sti
incl
add
incl
inc
inc
add
add
add
incl
add
and
loopne
add
and
inc
inc
loopne
inc
inc
add
add
add
add
add
add
inc
addb
addb
addb
addb
addb
addb
addb
andb
andb
andb
inc
and
andb
inc
and
inc
and
inc
add
add
add
add
add
add
addb
inc
and
inc
inc
jmp
movsb
mov
rcr
push
sti
push
sti
push
sti
push
sti
incl
add
add
add
add
add
add
add
incl
add
add
incl
add
add
loopne
inc
loopne
inc
loopne
inc
shlb
add
add
pusha
add
addb
add
add
add
add
addb
addb
addb
addb
addb
shlb
addb
addb
addb
inc
add
inc
add
add
add
add
add
add
add
add
add
pusha
addb
andb
andb
push
sti
push
sti
push
sti
jmp
lock
incl
add
add
sti
push
sti
push
sti
push
sti
incl
add
add
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
and
inc
add
add
add
pusha
add
inc
addb
inc
addb
addb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
addb
addb
inc
inc
add
add
add
add
add
add
add
inc
addb
shlb
addb
push
sti
push
sti
incl
add
sti
incl
add
add
sti
push
sti
incl
add
sti
push
sti
push
sti
incl
add
add
incl
inc
inc
add
add
incl
add
add
incl
add
add
incl
add
add
loopne
inc
loopne
inc
rolb
and
add
andb
and
and
add
add
inc
add
inc
rolb
rolb
rolb
rolb
incl
add
add
incl
add
add
rolb
rolb
rolb
addb
addb
inc
inc
add
add
add
add
add
add
add
add
addb
rolb
shlb
addb
push
sti
push
sti
inc
fadd
lock
push
sti
incl
add
sti
incl
add
sti
push
sti
push
sti
push
sti
push
sti
push
sti
incl
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
loopne
inc
loopne
inc
shlb
and
and
pusha
addb
inc
add
inc
rolb
inc
mov
add
rolb
incl
add
add
incl
add
add
incl
add
add
rolb
rolb
rolb
addb
shlb
rolb
inc
inc
add
and
add
inc
inc
add
add
add
shlb
rolb
rolb
rolb
rolb
push
sti
push
sti
incl
add
sti
incl
add
add
add
add
add
add
add
sti
inc
fadd
lock
push
sti
incl
incl
add
add
incl
add
add
incl
add
add
loopne
inc
loopne
inc
loopne
inc
loopne
inc
loopne
inc
loopne
add
add
add
addb
inc
add
inc
rolb
inc
add
inc
rolb
rolb
rolb
incl
add
and
incl
add
and
inc
inc
add
add
inc
inc
add
add
add
inc
inc
add
and
rolb
rolb
inc
inc
add
add
rolb
inc
inc
add
add
shlb
rolb
rolb
rolb
lock
push
sti
push
sti
incl
add
add
add
add
add
add
add
sti
push
sti
push
sti
push
sti
push
sti
incl
incl
add
add
incl
add
add
incl
add
add
inc
add
and
add
and
and
pusha
add
add
add
addb
inc
add
add
add
and
inc
pusha
rolb
rolb
rolb
shlb
shlb
inc
inc
add
add
add
add
inc
inc
add
add
add
shlb
rolb
inc
inc
add
add
add
add
add
add
inc
inc
add
add
rolb
addb
lock
push
sti
push
sti
push
sti
incl
add
add
add
add
add
add
add
add
fadd
lock
push
sti
push
sti
incl
loopne
add
and
loopne
add
and
loopne
add
and
loopne
add
and
incl
add
add
and
inc
add
add
add
inc
inc
add
add
add
add
inc
add
and
add
rolb
rolb
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
push
sti
incl
add
add
add
add
add
add
add
add
add
sti
push
sti
inc
fadd
incl
and
and
and
and
and
and
loopne
add
and
loopne
add
add
and
inc
add
add
add
inc
inc
add
shlb
add
rolb
add
add
shlb
rolb
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
incl
and
sti
push
sti
incl
inc
addb
addb
inc
inc
add
inc
addb
inc
inc
add
add
add
sti
incl
shl
push
sti
push
sti
incl
pusha
inc
shlb
pusha
inc
shlb
pusha
inc
shlb
inc
add
inc
add
and
loopne
inc
loopne
inc
shlb
inc
add
and
inc
pusha
inc
add
add
shlb
add
shlb
rolb
add
add
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
fadd
push
sti
incl
inc
addb
add
inc
inc
add
add
add
add
add
sti
push
sti
inc
rol
sti
push
sti
push
sti
incl
and
and
and
and
and
and
loopne
add
inc
add
inc
add
and
loopne
inc
loopne
add
add
add
inc
inc
add
shlb
and
add
rolb
add
addb
addb
inc
inc
add
add
add
add
add
add
add
sti
push
sti
incl
add
add
add
add
add
add
add
add
and
incl
add
push
sti
incl
inc
addb
addb
inc
inc
add
add
add
add
sti
push
sti
push
sti
push
sti
incl
mov
shlb
pusha
inc
and
and
and
and
loopne
add
and
loopne
inc
loopne
inc
loopne
inc
rolb
add
add
inc
add
inc
addb
inc
andb
add
inc
and
shlb
add
addb
inc
add
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
add
add
inc
inc
add
add
and
add
lock
incl
inc
addb
addb
addb
add
lock
push
sti
inc
shlb
pusha
rol
shlb
and
and
and
and
and
and
loopne
inc
loopne
inc
loopne
add
inc
inc
loopne
inc
shlb
add
and
add
andb
and
mov
inc
and
add
add
and
pusha
mov
add
inc
and
inc
inc
add
add
sti
incl
add
add
fadd
rcr
lock
incl
add
inc
inc
add
add
add
add
add
add
and
lock
push
sti
push
sti
push
sti
inc
fadd
rcr
add
rol
lock
inc
mov
lock
addb
shlb
cmpsb
rol
addb
addb
addb
addb
addb
addb
inc
rolb
rolb
inc
mov
add
add
inc
inc
add
andb
and
mov
add
add
and
and
inc
inc
add
add
add
incl
add
inc
inc
add
fadd
lock
push
sti
push
sti
incl
add
lock
incl
add
inc
inc
lock
push
sti
incl
and
add
lock
push
sti
push
sti
inc
fadd
lock
push
sti
inc
fadd
rcr
jmp
push
lret
lret
pusha
add
shlb
cmpsb
andb
add
add
add
mov
inc
add
add
shl
rol
add
add
add
inc
andb
add
add
add
inc
and
inc
add
inc
add
shlb
add
add
incl
add
lock
push
sti
incl
add
and
and
add
add
sti
incl
add
incl
add
sti
incl
add
rcr
add
add
sti
push
sti
push
sti
push
sti
inc
fadd
rcr
rcr
movsb
mov
push
sti
push
sti
inc
shlb
add
add
add
addb
addb
addb
addb
addb
inc
mov
inc
and
and
and
mov
andb
inc
mov
mov
inc
add
inc
add
inc
add
inc
add
inc
mov
fadd
add
add
sti
incl
loopne
loopne
and
lock
incl
add
lock
push
sti
incl
and
pusha
xor
push
sti
push
sti
push
sti
push
sti
push
sti
inc
fadd
push
lret
shlb
incl
inc
inc
inc
inc
lock
push
sti
incl
and
addb
addb
addb
inc
mov
inc
and
and
and
mov
add
inc
inc
add
inc
mov
mov
add
add
and
and
inc
andb
add
lock
push
sti
incl
loopne
loopne
and
lock
push
sti
push
sti
incl
add
inc
and
add
add
and
and
add
inc
and
addb
sti
push
sti
push
sti
push
sti
inc
fadd
lock
push
lret
rolb
jmp
inc
inc
inc
inc
inc
inc
inc
inc
pusha
inc
and
andb
add
add
add
push
push
cmp
push
pop
xchg
add
or
add
add
inc
add
add
add
add
add
add
add
lds
mov
shlb
mov
pop
insl
outsb
js
jne
je
ja
jb
push
jns
addr16
ja
jae
outsb
jae
dec
push
pop
and
xor
adc
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
add
add
add
add
add
adc
adc
or
add
add
add
add
add
adc
add
add
or
add
add
add
add
adc
add
add
add
add
add
int
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
jns
add
add
add
add
add
add
add
xor
jno
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
jo
ja
push
cmp
xor
jno
add
adc
icebp
inc
or
adc
outsl
push
nop
cmp
cmp
xchg
adcb
add
push
cmp
add
add
fistl
adc
dec
std
xchg
dec
jno
add
add
push
add
mov
xchg
mov
jp
add
push
add
mov
xchg
mov
add
jp
add
push
add
mov
xchg
mov
add
jp
add
push
add
xchg
adc
add
pop
add
add
push
add
nop
push
adc
add
or
push
add
fiadds
aad
push
in
push
xchg
push
xchg
push
cmp
push
push
outsl
or
push
push
add
add
nop
dec
adc
add
push
add
add
add
add
nop
dec
adc
adc
push
add
outsl
inc
insl
add
js
add
add
add
nop
jp
cmp
pop
mov
add
pop
add
add
add
imul
or
mov
pop
or
add
add
push
add
std
add
push
nop
inc
adc
dec
cmp
jp
add
adc
dec
or
dec
adc
ds
adc
leave
add
add
jp
add
pop
xchg
dec
jmp
mov
add
mov
or
add
nop
dec
sub
mov
add
xchg
mov
add
add
jp
add
add
add
outsl
push
pop
arpl
adc
push
add
add
daa
pop
add
add
add
add
add
add
add
add
add
jns
ja
push
push
js
add
jns
je
jp
push
data16
jno
inc
add
push
dec
push
cmp
xor
jno
add
fcoml
add
add
push
add
add
add
gs
add
add
add
xor
jno
inc
jno
push
jnp
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
imul
add
add
add
jns
jae
data16
outsb
push
push
imul
jns
je
add
add
jns
push
ja
push
push
je
jle
add
add
ja
jp
jno
jno
je
dec
jge
add
add
add
pop
insl
ja
imul
push
jns
add
add
pop
push
pop
insl
ja
imul
push
jns
add
add
push
jns
push
je
push
push
je
jle
add
add
add
js
jb
pop
insl
ja
imul
add
add
push
jns
push
ja
push
add
add
add
jno
push
je
push
je
jle
add
add
add
jns
je
jb
jae
push
outsb
jae
inc
add
add
add
jae
jno
aaa
xor
jno
add
add
add
imul
xchg
add
or
add
add
inc
add
add
add
add
add
add
add
in
add
adc
mov
pop
insl
outsb
js
jne
je
ja
jb
push
jns
addr16
ja
jae
outsb
jae
dec
push
pop
and
xor
adc
sub
add
dec
lock
dec
lock
dec
lock
dec
lock
push
lock
inc
lock
dec
lock
dec
lock
dec
lock
add
add
add
add
push
dec
add
add
add
add
adc
adc
or
add
add
add
add
add
adc
add
add
or
add
add
daa
jnp
add
add
adc
adc
add
adc
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
jmp
adc
add
add
add
add
add
ja
add
pop
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
xor
add
lahf
xor
add
xor
add
std
xor
add
jg
add
add
add
xor
add
cltd
xor
add
add
xor
add
add
cmp
jae
je
imul
jno
fisubrs
ja
je
jae
je
imul
jno
imul
jl
jno
imul
jl
jno
imul
jl
addr16
outsl
push
jb
pop
mov
ss
adc
pop
and
add
dec
adc
add
or
dec
and
add
es
cmp
pop
push
or
jge
je
jae
je
imul
mov
adc
fbld
loope
int3
xchg
fmull
xchg
iret
add
lcall
and
or
mov
imul
jl
jno
imul
jl
jno
imul
jl
and
sub
je
imul
insb
jae
imul
jno
imul
jl
jno
imul
jl
xor
push
imul
imul
jno
imul
jl
jno
imul
je
jae
je
imul
jno
jbe
push
imul
push
imul
sahf
imul
imul
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
data16
ja
je
jae
je
imul
jno
imul
jl
jno
imul
sbb
je
imul
test
jo
imul
jno
imul
jl
xor
push
imul
push
imul
push
imul
push
movl
imul
push
jge
jl
andb
ja
je
test
imul
mov
imul
jge
es
ljmp
mov
xchg
mov
jg
xorl
icebp
out
xchg
mov
jae
imul
sahf
lahf
xchg
cmp
test
lahf
insb
dec
test
out
into
lahf
lahf
xchg
cmp
pop
cwtl
sub
out
in
cwtl
xchg
cmp
cmp
xchg
inc
jl
jno
cmpsb
adc
js
cwtl
jg
jns
ja
mov
test
out
sbb
lock
xchg
mov
jo
xor
sub
sub
aas
or
imul
leave
xchg
mov
xchg
addr16
xor
inc
inc
inc
test
je
inc
push
sub
cmpsl
and
ja
je
jae
je
jp
ja
test
andl
ja
je
jae
je
jnp
ja
test
andl
ja
je
jae
je
jnp
ja
test
je
imul
jno
imul
jl
adc
push
jno
aam
push
fldl
imul
jo
jno
je
push
imul
push
imul
push
sbb
and
sub
mov
xor
sbb
mov
or
sysret
adc
jl
sub
or
adc
movlps
push
sbb
or
adc
je
push
sbb
inc
pop
or
inc
add
je
je
bndldx
and
adc
or
sub
das
sub
push
sbb
je
cmp
cmp
sbb
or
pop
xor
je
sbb
and
push
pop
syscall
or
xorb
or
xor
push
adc
sub
inc
adc
adc
or
or
adc
push
sub
cmp
inc
xor
push
and
je
imul
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
imul
jl
jno
repnz
push
jns
push
ja
push
add
jp
push
insl
ja
imul
pop
insl
ja
imul
push
jns
add
jns
insl
ja
imul
push
jns
add
outsb
jns
push
ja
push
push
je
jle
add
jp
jno
jno
je
dec
jge
add
jno
imul
jns
jae
data16
outsb
push
push
imul
jns
je
add
push
jae
jno
aaa
xor
jno
add
jno
push
je
jne
push
js
jp
imul
xor
pop
dec
push
pop
pop
inc
push
das
add
inc
push
pop
das
add
pop
inc
push
dec
das
add
pop
pop
pop
dec
push
popa
dec
je
jns
je
pop
push
xor
push
jnp
push
outsb
js
popa
dec
jae
jb
jne
jae
add
dec
jp
ja
jae
pop
js
ja
pop
push
jns
add
aas
popa
imul
xor
push
push
outsb
jns
ja
add
push
jno
xor
jno
je
push
add
ja
jns
dec
outsb
jno
add
jns
dec
je
outsb
jae
inc
add
insl
jno
data16
xor
jno
pop
insl
push
jno
jge
push
add
push
jno
aaa
xor
jno
pop
ja
jnp
ss
jno
add
jl
jno
imul
inc
push
push
dec
inc
pop
inc
add
add
js
ja
data16
add
data16
dec
outsb
jno
dec
jge
js
js
add
data16
xor
jno
pop
outsb
jg
je
push
push
je
ja
push
add
push
push
je
ja
push
add
push
je
ja
push
add
imul
jp
push
add
je
push
push
je
jle
add
data16
dec
outsb
jno
inc
add
jne
add
dec
jae
outsb
ja
jae
push
jns
data16
data16
inc
add
je
jp
push
outsb
jno
push
data16
inc
add
imul
data16
inc
add
data16
push
je
inc
add
cmp
xor
jno
add
icebp
push
or
outsl
push
pop
cmp
xchg
addb
add
or
stos
nop
dec
adc
sbb
stos
nop
pop
inc
insl
in
inc
add
cmp
mov
add
add
nop
inc
xor
add
mov
xchg
dec
loope
aad
inc
add
add
mov
xchg
dec
loope
rcrl
add
add
mov
xchg
dec
loope
lods
sbb
push
add
push
add
mov
xchg
dec
loope
cltd
sbb
push
add
push
add
mov
xchg
dec
loope
mov
inc
add
add
mov
xchg
dec
loope
jns
inc
add
add
xchg
push
icebp
cmp
push
xchg
push
test
pop
outsl
or
pop
add
add
add
add
add
add
outsl
inc
insl
add
js
add
add
add
nop
adcb
mov
add
pop
add
add
add
imul
or
mov
nop
dec
adc
dec
inc
add
add
push
add
std
add
push
nop
inc
adc
dec
cmp
jp
add
adc
dec
or
dec
adc
ds
adc
mov
add
add
pop
xchg
dec
aad
or
mov
add
mov
or
add
nop
dec
sub
mov
add
xchg
mov
add
add
add
add
outsl
push
pop
arpl
adc
cmp
jp,pt
sbbl
adc
nop
lret
sahf
cld
sbbb
dec
adc
dec
inc
jp
sub
enter
inc
add
add
jp
in
push
nop
cmc
outsl
pop
insl
in
inc
add
add
fmuls
mov
add
add
add
add
pop
insl
pop
push
add
in
dec
or
add
push
add
in
sbb
push
stc
mov
sub
add
into
enter
mov
pop
pop
xchg
dec
add
push
add
insl
push
sbb
add
test
dec
icebp
inc
sbb
add
sbb
add
sbb
add
add
or
jp
xchg
dec
std
push
xchg
dec
mov
outsl
add
sbb
add
sbb
lds
cmp
xchg
jp
add
xchg
dec
mov
in
ret
add
jp
dec
mov
or
add
add
add
cmp
arpl
enter
add
add
add
add
adc
mov
inc
add
jns
outsl
add
add
inc
add
outsl
add
add
add
jns
outsl
add
add
inc
add
add
add
jp
push
in
xor
mov
inc
add
add
lds
push
in
push
or
add
add
lds
push
in
or
add
inc
add
lds
push
in
cli
or
add
fs
arpl
mov
in
loopne
add
push
add
outsl
pop
insl
std
sbb
add
add
xor
add
loopne
loope
inc
add
add
bound
in
sbb
add
or
inc
add
dec
add
in
add
add
lds
ret
add
lea
add
clc
mov
mov
xchg
mov
add
add
sub
dec
cmc
outsl
or
dec
add
in
arpl
add
adc
sbb
test
in
add
pop
push
add
pop
outsl
pop
outsl
pop
pop
pop
xchg
mov
add
add
add
sbb
std
add
cmp
lock
xchg
push
jmp
jmp
jp
push
add
sbb
sbb
sbb
mov
add
add
add
add
xchg
mov
add
add
sub
insl
mov
add
gs
arpl
jp
lret
dec
add
in
mov
add
lea
in
cmpsl
or
mov
add
fwait
or
mov
adc
add
arpl
enter
xchg
or
outsl
pop
pusha
xchg
push
leave
pop
insl
or
inc
add
add
add
inc
add
add
fisttps
add
inc
add
sbb
fldln2
lret
or
rcrl
in
mov
pop
insl
mov
push
loope
lods
or
lods
sbb
int
sahf
or
popf
sbb
fucomp
pop
pop
insl
lea
jmp
add
jge
inc
add
jo
add
insl
sbb
in
popa
or
pop
sbb
cmc
in
push
or
loope
inc
add
add
or
push
sbb
sbb
aad
sub
add
add
insl
test
inc
add
outsl
or
movsl
or
das
inc
add
add
or
pop
insl
subl
dec
stc
outsl
or
jns
add
or
add
outsl
or
data16
mov
push
pop
xchg
dec
jmp
or
mov
xchg
dec
cmc
pop
pop
push
in
inc
or
xchg
dec
icebp
outsl
push
push
in
xor
or
xlat
or
add
outsl
or
pop
or
mov
push
pop
xchg
dec
jmp
or
mov
xchg
dec
cmc
pop
pop
push
in
cld
pop
add
xchg
dec
icebp
outsl
push
push
in
out
pop
add
add
add
xchg
dec
sub
outsl
or
roll
add
ds
sub
inc
add
add
add
inc
int3
jns
or
push
add
sbb
inc
add
push
add
add
add
inc
int3
jns
push
xchg
dec
loope
push
push
in
mov
add
test
add
lds
add
add
scas
outsl
inc
cmp
pop
xchg
ret
add
clc
mov
mov
xchg
mov
push
insl
and
dec
stc
outsl
or
inc
pop
add
add
add
sub
mov
xchg
dec
std
outsl
or
daa
pop
add
add
add
dec
aad
push
push
in
adc
leave
cmp
push
add
cmp
sub
jns
add
and
dec
leave
insl
sbb
and
inc
add
in
in
add
mov
or
cmp
cmp
cmp
inc
add
push
push
in
ret
push
add
inc
add
cmp
inc
add
inc
sub
add
inc
add
add
mov
and
cmp
inc
add
add
inc
add
stos
imul
mov
add
add
incb
add
sbb
test
subl
push
in
push
push
add
mov
insl
test
pop
insl
add
xchg
dec
int
or
in
xor
add
push
add
adc
mov
xchg
mov
push
xchg
dec
shrl
push
in
push
push
add
xchg
mov
dec
sub
add
cld
add
cmp
pop
pop
pop
pop
pop
xchg
mov
add
add
sbb
add
adc
sbb
adc
jp
insl
test
inc
add
add
add
lds
add
sub
imul
add
insl
subl
push
in
xchg
add
sbb
add
sbb
inc
add
pop
push
add
in
push
push
add
in
dec
push
add
in
inc
push
add
in
cmp
add
in
xor
add
in
sub
add
in
and
add
in
sbb
add
in
adc
add
in
or
add
in
add
leave
in
stc
add
cmp
lds
into
adc
out
add
nop
icebp
push
pop
nop
jp
nop
lret
pop
in
push
in
add
pop
mov
sbbl
push
add
nop
jge
mov
or
dec
jp
xchg
push
add
mov
pop
mov
nop
dec
add
dec
adc
xor
dec
or
adc
mov
add
in
addb
pop
fs
enter
push
pop
pop
pop
nop
adcb
pop
in
imul
push
outsl
inc
pop
push
add
xor
or
sbb
add
xor
aam
inc
nop
nop
cmc
out
pop
clc
stos
nop
iret
mov
or
test
adc
out
add
nop
sbb
xchg
dec
or
int
xor
push
or
adc
adc
push
adc
dec
adc
rcl
rcl
rcl
rcl
add
pop
adc
pop
adc
dec
adc
xchg
push
cmc
out
in
add
mov
out
iret
add
add
rcll
add
add
add
add
add
add
out
stos
add
add
rcl
rcl
shll
add
inc
add
add
add
add
add
jns
inc
add
or
inc
add
add
add
add
add
lea
inc
add
xchg
sub
push
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
xor
add
lahf
xor
add
xor
add
std
xor
add
jg
add
add
add
xor
add
cltd
xor
add
add
xor
add
jns
ja
push
push
js
add
jns
je
jp
push
data16
jno
inc
add
js
ja
jb
outsb
inc
add
dec
push
jp
insb
push
push
ja
js
jae
add
je
push
data16
jno
add
outsb
jns
dec
outsb
jno
add
push
jns
dec
outsb
jno
inc
add
jns
outsb
jno
inc
jns
ja
addr16
push
inc
add
push
push
push
outsb
jno
inc
add
jns
je
jb
jae
push
outsb
jae
inc
add
imul
data16
inc
add
outsb
ja
jp
jno
ja
jns
push
dec
push
push
dec
push
cmp
xor
jno
add
insb
dec
jno
js
push
push
add
insb
push
jp
ja
pop
data16
push
jge
add
push
push
jne
jae
push
dec
jge
add
push
dec
cmp
xor
jno
add
push
jno
jge
push
add
push
cmp
xor
jno
adc
inc
pop
inc
pop
push
inc
pop
inc
pop
add
inc
aaa
inc
pop
inc
push
inc
pop
dec
inc
pop
add
fs
jge
dec
ja
jb
dec
data16
jno
ja
inc
add
jne
je
je
add
jge
jns
add
ja
jns
add
dec
push
pop
xor
jno
add
add
add
add
add
add
add
add
add
or
add
add
test
add
add
add
pop
add
add
test
add
add
add
lea
add
add
add
add
add
add
or
push
add
mov
add
add
or
push
add
lds
add
add
add
cmp
add
add
cwtl
pop
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
outsl
jb
insl
push
xor
jns
push
ss
xor
jns
add
add
add
add
push
pop
xchg
add
or
add
add
inc
add
add
add
add
add
add
add
in
add
adc
mov
pop
insl
outsb
js
jne
je
ja
jb
push
jns
addr16
ja
jae
outsb
jae
dec
push
pop
and
xor
adc
sub
add
jg
jnp
jp,pn
jp,pn
cs
outsb
add
jl
cs
outsl
cld
jns,pn
cs
outsb
clc
cmpl
jo
outsl
jl,pn
adcl
jp,pn
std
cs
jnp
cs
add
cs
add
cs
outsb
push
cs
add
add
add
add
add
pop
push
adc
syscall
add
imul
add
add
xor
inc
add
add
add
add
add
add
or
add
add
adc
adc
add
adc
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
jns
jge
add
add
add
add
add
add
add
xor
data16
add
add
add
add
add
add
inc
add
data16
add
push
add
add
add
add
add
inc
add
jb
xor
pop
add
add
add
add
add
add
xor
jne
add
add
add
add
add
add
add
xor
jne
add
pop
add
add
or
add
add
add
push
je
add
add
add
popa
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
in
push
cld
mov
push
call
adc
add
leave
insl
cmpsb
mov
in
cli
sti
fnstsw
jo
pop
add
or
pop
add
enter
out
nop
incb
add
add
and
add
add
dec
mov
test
cs
mov
or
les
add
add
sub
add
sub
add
aas
xor
sbb
and
mov
pop
add
sub
in
mov
pop
add
sub
adc
sbb
mov
movl
cmpsb
xlat
adc
and
pop
add
add
sbb
add
gs
imul
or
add
or
fmuls
add
mov
jae
imul
pop
add
sub
xchg
imul
pop
add
imul
and
add
xlat
cmp
adc
fldt
lret
or
add
dec
sti
adc
adc
cli
mov
imul
dec
adc
insl
xor
add
add
xchg
push
add
push
cmp
xchg
ficompl
in
fisttpll
inc
jl
jne
sbb
mov
inc
add
addr16
adc
test
push
enter
and
mov
sub
xchg
pop
or
and
jns
or
dec
push
add
out
or
push
add
sbb
in
push
or
jb
mov
scas
add
mov
dec
shr
mov
adc
cmp
xchg
rcr
in
mull
push
xchg
scas
scas
push
dec
sbb
ret
jo
cmc
or
lret
adc
adc
add
add
jp
aad
cwtl
pop
leave
mov
andl
and
arpl
mov
lods
test
cmp
shufps
push
adc
lahf
sub
xor
dec
jge
mov
test
xor
add
lds
out
fstpl
add
inc
mov
dec
push
add
in
cmp
push
add
add
adc
lods
testl
syscall
add
pop
mov
inc
xchg
imul
add
xchg
xlat
mov
sbb
or
in
xor
xlat
nop
cmp
dec
xchg
add
sbb
jmp
xorl
shl
mov
adc
xor
mov
stos
imul
and
cmp
int3
or
and
cli
inc
in
scas
adc
xlat
syscall
add
xor
push
imul
push
mov
out
xor
add
inc
nop
or
test
rorl
xchg
imul
sti
push
add
out
xchg
test
insl
lret
xor
cli
gs
dec
sbb
sti
cli
push
add
in
pop
cld
push
add
and
pop
add
int3
or
mov
shl
int3
or
add
ficoms
add
push
add
sbb
add
sbb
stos
std
and
lods
inc
pop
add
cmp
int3
dec
sub
gs
ljmp
sub
out
add
xor
imul
and
add
std
imul
or
ds
out
repz
add
add
pop
mov
mov
dec
sahf
sbb
insl
jnp
sbb
cmp
pusha
push
push
lcall
inc
repnz
pop
out
xor
add
int
add
push
decb
imul
adc
sub
push
add
add
push
add
add
push
add
fists
mov
add
add
add
add
or
pop
insl
ljmp
mov
sub
adc
imul
fisubl
or
aad
xlat
lds
pop
cli
cmp
or
std
mov
pop
pop
add
dec
sti
push
push
pop
jg
cmpsl
sub
pop
mov
fistpl
stos
test
arpl
imul
subl
push
in
sar
cmp
pop
dec
adc
mov
sbb
cli
data16
adc
jne
or
test
mov
push
addr16
out
dec
mov
push
loopne
mov
out
mov
lds
sub
pop
xor
pop
imul
or
sbb
or
imul
push
sub
or
lea
pop
add
xor
add
std
imul
xchg
imul
xor
add
sub
ret
mov
sub
add
add
pop
add
jae
frndint
dec
ja
mov
xchg
ret
ret
enter
or
dec
sub
popf
imul
mov
xchg
dec
sub
and
add
cmp
cli
movsb
notl
mov
cltd
push
add
add
pop
adc
cli
call
add
out
in
gs
pop
add
add
mov
mov
or
sub
adc
ja
pop
add
sbb
add
xchg
lea
or
imul
and
add
xlat
imul
imul
adc
aad
imul
popf
mov
push
insl
mul
dec
mov
cmc
xlat
std
or
mov
in
push
xor
add
fimuls
clc
mov
mov
xchg
lahf
pusha
ds
add
xchg
mov
ljmp
into
rolb
cmpsl
push
das
bound
pop
mov
sub
scas
mov
cmc
xor
lret
divl
add
and
push
mov
out
cmp
pop
jne
data16
pop
outsb
jae
je
add
adc
iret
and
add
jmp
imul
xchg
and
add
xchg
imul
pop
add
add
and
mov
pop
add
jae,pt
ds
or
xchg
adc
pop
cmp
push
in
flds
jecxz
push
shlb
lea
or
jae
lret
inc
out
shlb
pop
add
adc
mov
roll
add
adc
cmp
dec
sub
mov
ds
insl
sbb
add
or
pop
add
xor
in
fimuls
add
xor
and
push
ss
idiv
mov
iret
add
mov
mov
lahf
out
lcall
or
or
add
add
in
xor
add
gs
cmp
push
sbb
jae
jo
insl
jecxz
test
mov
jns
and
and
rcr
lcall
add
push
pop
push
sub
add
fistpl
pop
or
xchg
add
xor
rcll
popf
jle
jns
popa
je
aam
lock
mov
arpl
sti
repz
inc
mov
sub
je
das
outsl
shrb
imull
jmp
pop
ds
push
sbb
and
dec
or
fnsetpm(287
mov
add
push
je
jp
push
outsb
jno
push
data16
inc
add
and
xor
pop
add
rcrb
xchg
and
ljmp
add
push
std
add
xchg
add
push
add
adc
mov
adc
into
imul
nop
push
or
mov
or
imul
out
mov
nop
inc
imul
test
pop
or
int3
mov
or
add
mov
push
add
sahf
out
dec
mov
xchg
imul
stos
inc
push
imul
imul
arpl
mov
loopne
gs
or
add
out
ljmp
xor
jo
imul
add
mov
sti
or
sub
inc
dec
mov
mov
add
andl
lret
push
cmp
movsl
and
dec
notl
add
roll
dec
xor
fs
jbe
shr
movsb
shrb
adc
fwait
mov
jbe
cli
mov
xchg
push
into
iret
cmpsb
xor
sti
shl
mov
ret
jg
xchg
hlt
push
clc
mov
sub
aam
jo
scas
pop
push
cld
sub
shl
push
stos
mov
daa
fstpt
and
sar
fisttpl
iret
fldcw
xor
xchg
loopne
dec
ret
lcall
insl
test
sbb
ret
call
push
mov
rorb
inc
aad
aad
jns
or
es
add
int
push
add
add
test
stos
pop
imul
packssdw
ljmp
cmp
icebp
or
loope
xlat
vucomisd
adc
mov
and
int
mov
sti
lret
loopne
mov
cs
xchg
dec
std
in
xlat
add
add
call
shr
fcoms
xchg
mov
mov
in
mov
lret
or
int
dec
sub
pop
add
dec
push
add
mov
mov
or
mov
fwait
push
add
and
add
adc
and
pop
add
je
xor
out
outsb
pop
pop
add
pop
add
add
add
mov
sub
imul
sti
add
cli
std
xlat
cmc
out
add
add
mov
xchg
imul
sub
add
adc
add
push
lea
sub
popf
push
add
add
call
jae
pop
add
das
adc
cmp
dec
call
mov
fldt
sbb
mov
mov
or
push
adc
stos
and
mov
dec
in
scas
or
inc
loop
pop
sahf
inc
outsl
popa
dec
inc
push
cmp
dec
stos
neg
cmp
mov
cmp
cli
ja
pop
cs
mov
push
fsts
fstps
cltd
xor
loopne
aam
cld
in
cmc
mov
add
mov
in
cmp
add
dec
adc
sbb
pop
add
pusha
std
xor
inc
ror
sub
subl
sub
add
mov
pop
add
and
lret
dec
pop
add
pushf
imul
out
push
incl
add
xchg
lea
pop
add
add
adc
and
push
add
insl
repz
sub
test
dec
test
addr16
cli
loopne,pn
mov
icebp
test
imul
pop
add
adc
shr
push
add
add
sub
ror
or
sbb
imul
add
add
orl
add
imul
sub
in
push
cli
push
add
add
adc
push
jmp
imul
sub
add
lret
out
add
add
decb
sub
gs
pop
add
add
add
cmp
imul
and
dec
sub
repz
or
lods
mov
adc
add
push
fisubrl
mov
int3
pushf
rcrl
fcmovb
imul
dec
add
push
mov
in
arpl
pop
add
icebp
in
xchg
adc
or
add
or
enter
hlt
or
xor
test
and
int3
daa
out
out
xchg
jne
popa
call
and
imul
loope
jmp
clc
hlt
mov
or
sbbl
adc
push
jae
inc
inc
in
out
mov
jns
add
iret
and
mov
xchg
and
cld
lods
rorb
sbb
popa
add
imul
push
xchg
imul
cli
add
outsb
xlat
syscall
add
pop
add
out
xor
mov
xor
lds
cmp
lds
mov
pop
pushf
loope
into
addr16
pop
jmp
sbbb
dec
cmp
pop
mov
jne
xchg
or
shlb
orl
bound
inc
lods
addb
loop
jbe
push
sbb
stos
daa
cmp
enter
nop
ljmp
jmp
ret
lods
cltd
mov
sbb
cmp
sub
in
mov
mov
inc
sbb
xor
clc
rcr
and
sub
adc
clts
bound
jbe
jecxz
repz
mov
sub
mov
pop
gs
outsb
call
arpl
mov
pop
sub
negb
mov
mov
pop
loope
arpl
pop
imul
nop
jns
inc
imul
jno
dec
imul
sub
out
add
push
pop
add
sti
mov
push
ljmp
andb
cs
sbb
add
cld
dec
adc
pop
cmpl
adc
into
jecxz
mov
std
xor
cmp
enter
mov
push
fistl
add
mov
sub
cmp
stos
int
into
andl
loope
repnz
sub
bound
inc
push
sti
mov
mov
call
fildll
out
gs
in
in
fwait
incl
add
xor
add
add
pop
dec
lock
mov
pushf
pop
adc
mov
shlb
xchg
fdivs
jp
clc
mov
dec
imull
dec
pop
push
fstpl
scas
adc
ds
cmpsl
scas
pop
gs
loope,pt
sbb
adc
pop
mov
pop
jnp
in
in
jns
movsl
xor
add
mov
jns
add
pop
mov
xchg
mov
sti
bnd
gs
or
aad
or
fiadds
mov
addr16
in
push
inc
jbe
clc
mov
mov
jmp
rolb
shll
repz
ret
fcmovnbe
inc
js
cwtl
sub
movb
test
insl
push
outsl
mov
out
dec
loopne
sbb
ds
sbbl
sbb
movl
stc
and
aas
pop
add
imul
push
add
add
imul
inc
test
inc
add
icebp
cld
lret
outsb
in
js
fwait
pop
sbb
movsb
arpl
or
dec
mov
push
or
dec
mov
out
mov
sub
jne
std
add
or
sub
add
call
gs
pop
in
insl
xchg
imul
push
pop
add
or
leave
sbb
add
std
std
xchg
and
add
mov
mov
or
imul
sub
add
push
add
or
aad
fldcw
int
and
imul
add
push
add
inc
insl
mov
lock
popf
push
jno
dec
out
fdivr
mov
in
inc
push
lods
jnp
ljmp
push
andl
jnp
call
inc
pop
mov
jecxz
fcmovnbe
testl
mov
fcompl
popf
adc
adc
mov
mov
scas
sbb
test
mov
out
sub
add
adc
add
pop
add
ja
leave
sti
push
std
out
mov
add
mov
mov
add
xchg
mov
mov
arpl
pop
xchg
imul
popl
add
sar
mov
out
push
or
push
je
dec
add
xchg
lea
int3
dec
sub
sarl
add
xchg
imul
adc
add
imul
sub
mov
jns
or
or
xor
dec
sub
add
pushf
lds
imul
xchg
or
xor
adc
add
and
pop
sub
add
out
testl
out
xchg
dec
stc
int3
mov
data16
negl
and
lds
cwtl
add
jge
rolb
mov
pop
stos
or
fldenv
cmp
fmuls
ja
jp
gs
aam
lds
xchg
loopne
repnz
xlat
ds
pop
mov
rcrb
mov
xlat
popf
and
pushf
ds
popa
cltd
mov
and
inc
pop
fs
dec
push
icebp
shlb
and
mov
sbbl
sbb
insl
dec
aaa
or
aaa
pop
dec
jmp
push
or
cmc
lods
rclb
xchg
jecxz
das
insl
dec
and
inc
stos
stos
popf
dec
aam
lea
pop
inc
imul
inc
mov
and
fs
out
jle
mov
scas
daa
mov
mov
and
xorb
jns
jo
dec
dec
pop
bound
xlat
mov
push
std
xor
jle
aas
cli
outsb
or
fmul
insl
shlb
pushf
pushf
mov
ret
sub
lret
sbb
push
mov
or
mov
mov
lea
add
lret
dec
sub
lea
or
test
xchg
imul
push
pop
add
push
int
adc
repnz
movsb
mov
add
push
add
adc
fsts
pop
add
gs
nop
and
push
enter
in
mov
sub
sar
jecxz
jmp
subl
push
nop
jp
imul
mov
mov
leave
gs
in
nop
and
add
mov
adc
mov
push
add
out
imul
mov
sbb
add
mov
pop
add
xlat
enter
xchg
xor
repnz
imul
push
sub
mov
adc
out
adc
enter
add
mov
insb
mov
add
and
mov
repnz
fsubr
cmc
imul
jne
pop
or
sub
dec
idivl
adc
push
rorb
fdivl
inc
mov
xor
shr
push
xchg
and
into
xor
lcall
pop
and
andb
lock
out
and
pop
jnp
test
and
pop
scas
gs
fadds
mov
add
loopne
data16
flds
es
loopne
fidivrs
jae
mov
xor
aad
or
test
add
sub
xor
add
adc
xor
add
mov
mov
or
adc
aad
out
int
push
add
sbb
in
std
hlt
add
out
pop
repz
lea
or
mov
jbe
pop
add
mov
adc
dec
adc
add
int3
daa
cmp
iret
imul
imul
imul
mov
xlat
cli
mov
in
sbb
add
insl
inc
shrb
sbb
add
divl
inc
fsts
pop
mov
popf
arpl
jbe
lods
push
nop
xor
fwait
out
push
arpl
ret
stos
xor
xor
push
out
pop
xchg
dec
mov
xor
push
mov
mov
xor
inc
pushf
rcl
insl
jno
jecxz
and
fwait
dec
cli
push
jae
jecxz
fists
popa
or
outsl
inc
ret
rcl
gs
sbb
adc
pop
jecxz
pop
mov
mov
jl
jecxz
jae
mov
xlat
jno
pop
rcr
jle
xchg
or
sbb
fcomp
icebp
xchg
lods
leave
repnz
dec
inc
repz
sub
cmpsl
jns
mov
das
jb
mov
and
add
out
mov
shrl
stos
scas
push
es
xor
pop
pop
into
xchg
test
shlb
mov
inc
adc
and
lods
fsubrs
insb
test
push
mov
inc
mov
cmp
iret
inc
sbb
fwait
inc
iret
mov
mov
and
xchg
fstpt
jns
jmp
push
xor
pop
scas
or
imul
inc
pop
out
and
arpl
add
adc
pop
add
sti
lret
lahf
adc
xor
in
dec
add
sub
mov
gs
imul
pop
add
jl
adc
xchg
imul
pop
add
sub
insl
aam
mov
sub
addb
sub
imul
pop
add
movsl
imul
sub
or
mov
pop
add
adc
cmc
arpl
xchg
imul
mov
add
mov
mov
in
pop
imul
imul
sub
jecxz
nop
jg
cli
add
sub
insl
scas
push
inc
cli
push
int3
cli
cmp
cli
in
cli
or
add
and
lods
sub
dec
dec
sub
int
dec
add
or
or
jns
or
jns
adc
adc
xor
mov
push
rcr
cmc
test
lcall
adc
ss
mov
fmul
mov
or
dec
jecxz
mov
push
jge
sbb
movsb
push
sarl
adc
fbld
add
mov
scas
pop
pop
add
stos
dec
mov
jns
aam
mov
lods
cli
push
sbb
add
sbb
loopne
rcrl
fidivs
inc
bound
sbb
add
add
add
sub
in
popl
add
test
add
cmp
out
out
repnz
add
dec
sub
adc
lds
mov
pop
inc
add
jns
cmp
insl
sti
inc
out
adc
add
cli
and
out
es
fcompl
js
fmuls
addr16
pop
popf
pop
and
mov
das
or
dec
adc
repnz
icebp
ss
sarb
sub
arpl
lahf
je
xchg
inc
jns
cmp
icebp
xor
mov
push
dec
add
dec
inc
mov
or
les
adc
xlat
std
cmp
imul
pusha
imul
gs
push
stos
xchg
mov
push
pop
arpl
jmp
cld
bound
rsm
outsl
mov
and
stc
popf
loopne
dec
or
je
adc
adc
dec
andb
cmp
fisubrs
push
pusha
pop
mov
daa
hlt
xor
out
enter
insl
mov
sub
mov
pushf
inc
cli
inc
dec
jg
add
out
movsb
pop
inc
mov
pop
test
push
out
fidivrl
xchg
pushf
jmp
rclb
mov
add
push
mov
aad
nop
pop
inc
mov
fists
xchg
test
test
add
sub
arpl
pop
mov
andb
adc
xchg
xchg
jae
xchg
jge
lea
push
or
popa
pop
push
mov
mov
ja
fs
cmp
stc
sbb
in
xchg
das
sub
pop
sub
or
mov
add
orl
sbb
jb
cs
lock
cmpsb
add
cld
push
cld
je
adc
sub
out
add
cmp
fildl
rorl
pop
lahf
sub
and
sbb
imulb
movl
inc
mov
mov
lret
dec
add
ss
mov
jbe
test
mov
add
and
test
jl
jp
inc
cli
adc
mov
movsb
xor
mov
or
xor
dec
and
jo
mov
sub
std
out
jle
sbb
xor
sbb
jo
jne
add
std
cltd
loope
ss
neg
inc
add
adc
cmp
inc
fcompl
jo
call
mov
sub
add
dec
outsb
lea
lods
jl
push
sub
cmc
jae
dec
sbb
int3
cmp
jge
xchg
outsb
cld
data16
pusha
std
std
mov
jnp
out
ss
dec
push
add
fwait
in
mov
js
inc
cli
cmp
xor
fildll
xchg
lcall
js
insl
outsb
mov
mov
sub
roll
popa
xor
fists
movsl
or
cmpsb
pop
sbbl
jl
pop
out
inc
clc
push
cwtl
add
add
or
jg
sub
repz
sub
pop
lret
add
pop
mov
jl
jnp
insl
sbb
add
bt
jle
pop
cmp
push
roll
rcrl
push
orb
mov
or
add
xchg
in
pop
pop
das
xor
mov
and
fs
sarl
aas
insb
into
xchg
inc
hlt
add
inc
fsubrs
stc
xchg
add
add
aas
addb
jle
xor
data16
sbb
push
inc
ja
add
xor
pop
negl
mov
xchg
sbb
rcll
leave
insl
adc
test
dec
xchg
add
xchg
sub
rorl
addb
push
fidivs
cmp
add
fbstp
shl
mov
add
test
jne
loope
lret
add
fnstenv
and
stc
add
inc
shl
ljmp
faddl
cmc
mov
cmp
adc
sbb
inc
movb
pop
movsb
stos
pushf
xor
cmp
push
add
pop
add
cli
adc
jl
jns
sub
inc
mov
or
pop
mov
xor
and
daa
scas
adc
xor
loopne
in
xchg
scas
das
xchg
lcall
add
mov
clc
sbbb
cmp
pop
sbb
pop
insb
aas
sbb
xchg
mov
add
add
sbb
shrb
sbb
and
push
add
pop
add
sbb
loop
cltd
lret
dec
mov
add
repz
sbb
push
xor
cmp
test
pop
fwait
add
test
add
jmpw
call
fs
out
in
push
add
cmp
add
mov
js
dec
or
jmp
in
sarl
mov
aad
pop
les
or
paddd
ror
test
inc
xchg
xchg
push
jb
orb
sub
add
dec
pop
movsb
das
ret
add
fimuls
les
ficompl
or
popf
mov
cltd
add
std
repz
jns
xor
int
sub
fnstenv
daa
mov
or
mov
mov
mov
pop
inc
cmpsb
imul
add
jnp
int
adc
xchg
mov
fists
cmp
xor
mov
add
ss
scas
les
sbb
pop
or
xor
dec
inc
ret
or
jb
addb
cmc
shl
pop
add
fldl
in
add
in
insl
add
mov
mov
pop
mov
add
jns
jl
push
rcr
arpl
xchg
data16
mov
fwait
xor
das
lods
int3
stos
sbb
ja
vmread
ret
ss
or
add
jnp
stos
sbb
add
lcall
xchg
push
ds
aad
inc
add
dec
and
pop
cli
add
mov
call
std
aaa
movsb
or
roll
and
xchg
lods
cmc
ljmp
shrb
pop
add
pop
insl
mov
fs
cld
gs
jne
dec
or
push
jl
js
add
jmp
in
mov
add
dec
sbb
push
outsl
pop
adc
adc
add
and
orb
mov
stc
pop
mov
inc
jo
adc
loopne
xor
fadds
xor
movzwl
add
sub
mov
sub
es
add
or
xchg
add
mov
push
adc
loope
push
into
dec
lods
cmp
sub
jnp
sbb
push
add
in
or
add
xchg
xchg
or
cmc
xor
or
jns
push
and
add
insl
jb
inc
cld
jg
pop
es
push
add
push
jle
push
and
dec
add
jb
xchg
fisttpll
ja
pop
pop
sbb
add
dec
popf
cwtl
cli
inc
lret
imulb
cmpl
push
out
sub
cmp
orb
mov
ljmp
lcall
add
xchg
repz
rcl
pop
fldenv
inc
adc
jge
lret
mov
ja
or
inc
ret
cmp
add
mov
repz
cld
roll
or
and
pop
add
cltd
scas
fsubl
imul
ret
jo
dec
arpl
lret
imul
sbb
push
cmp
adc
add
int3
or
ret
fstpl
xor
movl
cmp
xchg
xor
pusha
add
les
out
shll
dec
dec
or
xor
mov
in
xorb
mov
shlb
lods
mov
or
jle
xchg
rolb
and
gs
mov
mov
mov
xchg
mov
push
add
std
in
jg
jl
xchg
adc
mov
mov
cmp
jl
mov
xchg
add
mov
mov
movsb
lods
int
dec
add
pushf
ret
and
mov
out
mov
inc
idiv
add
xchg
mov
xor
das
and
aas
mov
inc
mov
xchg
add
subl
add
jle
imul
aad
pop
std
and
test
sub
or
imul
and
std
xchg
jae
enter
mov
add
inc
repz
inc
sub
or
xchg
jno
test
enter
gs
mov
xchg
cmp
pop
add
out
sbb
mov
nop
sub
insb
popa
adc
jbe
jl
std
mov
mov
add
mov
add
mov
or
in
xchg
cmp
adc
mov
dec
add
mov
mov
sbb
cld
mov
push
adc
sub
add
push
add
scas
sbb
dec
data16
je
cli
hlt
dec
filds
xor
out
mov
jns
mov
cmp
jne
inc
sub
cs
cmp
std
add
int3
test
xor
jnp
mov
inc
mov
mov
add
call
movsl
cli
clc
das
dec
sbb
xchg
ss
add
cwtl
sub
push
mov
cld
pop
dec
adc
lock
in
enter
push
sarl
lcall
outsl
and
jae
add
xchg
lock
add
lahf
int3
lods
cld
push
in
les
mov
lcall
inc
ret
sahf
dec
imul
ret
add
insl
daa
mov
sub
jg
push
lds
add
dec
mov
pop
cld
cli
sbb
movsb
xor
sbb
adc
aas
jnp
daa
into
push
mov
xchg
std
insb
jge
ret
xor
xlat
je
cmc
adc
sub
clc
sub
les
push
idivb
dec
lods
repz
add
xor
add
cmp
and
out
rcll
stc
xchg
push
pop
sub
jne
jae
cmp
fsub
cld
mov
push
sub
jnp
xchg
rorb
outsl
inc
dec
js
inc
fwait
cmpsb
pop
sub
add
and
jns,pt
outsb
loopne
lods
sub
sub
xor
push
in
add
outsl
mov
xchg
pop
cmp
and
cli
mov
div
sbbb
jb
cmc
lret
iret
sub
xorb
ss
dec
fsts
pop
lods
dec
add
jmp
lea
vmread
xor
add
negb
cwtl
test
mov
insb
fisttps
jle
cmc
shlb
or
in
cld
aas
dec
sar
mov
jbe
and
shlb
xchg
and
fstl
sub
pop
cmp
mov
mov
pop
getsec
mov
jne
pusha
enter
sbb
sub
imul
in
jne
pop
sbb
pushf
mov
xchg
xor
pop
adc
clc
xchg
out
or
mov
xor
sbb
dec
sbb
pop
sub
or
add
add
nop
and
ja
and
std
xchg
stc
cmpsl
add
sar
mov
add
and
jb
cltd
fstps
pop
gs
mov
mov
pusha
dec
mov
stos
movsb
mov
mov
add
aaa
pop
shr
cmpsb
negl
mov
out
sahf
repnz
out
das
pop
xchg
ljmp
add
xor
jp
mov
and
pushf
loopne
push
cmp
push
xor
je
adc
inc
add
mov
pop
pusha
mov
mov
mov
inc
addr16
in
sub
add
xchg
repnz
lds
add
and
mov
add
add
pop
test
jbe
dec
add
lock
into
ds
push
pop
sbb
push
daa
das
int3
add
or
xchg
dec
jp
lock
test
inc
mov
mov
jmp
pop
lock
add
movsl
jne
outsb
xchg
cmc
add
dec
adc
fldl
addr16
ret
ret
add
cs
add
or
pop
das
mov
or
leave
sbb
push
mov
lret
cld
jbe
std
pushf
in
push
or
add
jg
subb
repnz
mov
push
jecxz
mov
leave
fs
fdivrl
inc
adc
pop
add
xchg
es
jnp
mov
out
fildl
call
inc
inc
insl
mov
mov
pusha
xchg
ss
cmpsb
and
outsl
add
mov
jl
inc
stc
sub
jnp
sbb
addr16
scas
cmpsl
test
sbb
popa
xor
push
push
loop
outsl
dec
add
stc
add
inc
dec
add
push
pop
loop
lret
jo
frstor
cwtl
iret
clc
sarb
dec
cmp
sbb
into
xor
adc
mov
int
and
add
cld
add
popa
outsb
and
outsl
loope
add
push
and
mov
add
lret
fidivrl
mov
rcr
stos
stc
xor
mov
jmp
cltd
sbb
xchg
mov
in
rcrl
aas
mov
mov
jge
sub
loopne
add
fimull
cmpsl
rcl
sbb
or
sbb
pop
sub
dec
scas
test
adc
pop
and
out
andl
push
fsts
mov
adc
out
insl
pop
add
in
loop
loope
test
mov
pop
shll
mov
jl
sub
cmpl
sbb
pushf
lret
inc
sbb
cs
stc
jne
cwtl
mov
jl
aas
sbb
and
add
jae
push
insl
inc
loop
add
cmp
mov
cmp
fwait
add
dec
lahf
leave
pop
lods
hlt
pop
dec
add
inc
in
add
adcl
inc
and
jecxz
mov
add
mov
cmpsb
das
inc
lock
add
mov
or
xor
les
inc
xor
add
jnp
adc
cmpsl
adc
fbld
cmp
push
add
ds
sti
enter
sub
add
inc
mov
and
lods
test
insb
leave
inc
push
mov
ficompl
cs
add
popa
xlat
jbe
sub
mov
arpl
daa
negb
insl
imul
mov
test
movsl
repz
cld
jo
lds
add
push
jl
pushf
cs
cmpl
movsb
xchg
or
rorl
push
mov
jp
sbb
lcall
dec
sub
sbb
mov
and
int3
and
sub
jnp
sub
dec
and
das
into
pop
fwait
icebp
inc
or
out
lcall
das
arpl
jl
in
out
int
dec
pop
or
inc
jnp
sbb
cli
push
cmp
pop
add
dec
jle
sti
sti
lock
in
or
jge
cld
loope
mov
and
add
fwait
cld
hlt
mov
mov
popa
add
insl
and
push
jp
sbb
mov
xchg
add
inc
fiadds
loop
fwait
dec
js
lret
xor
sub
xor
pushf
mov
std
bound
lcall
add
inc
xor
add
insb
or
cmp
clc
call
add
jnp
jnp
test
dec
fcmovb
loop
es
sub
sub
or
add
lods
push
sub
add
bound
fwait
cwtl
jmp
imul
fldt
frstor
or
pop
adc
popf
jbe
add
adc
jmp
add
dec
mov
fists
aad
mov
push
jg
ljmp
add
mov
clc
sbb
in
das
jmp
fs
jnp
add
mov
mov
int3
jne
add
gs
or
sub
mov
das
addr16
add
in
ret
imul
jno
cltd
mov
adc
push
dec
mov
push
sti
pop
jle
sbb
in
and
sub
jp
ds
faddp
adc
xor
cwtl
jnp
lret
in
sub
divb
gs
mov
add
and
xchg
or
inc
xor
in
popf
imul
inc
dec
add
jno
and
dec
cmc
sbb
sbb
int3
arpl
mov
rep
xchg
in
add
jl
add
imul
sbb
fbld
add
xchg
imul
mov
sub
inc
fcmovnu
mov
js
fimull
mov
repnz
cmp
mov
jl
in
xchg
subb
mov
add
repnz
sti
data16
and
jnp
jle
in
scas
dec
add
lahf
jl
inc
push
les
aaa
movsl
pop
add
xchg
add
pop
cmp
sbbl
pusha
int
inc
or
add
add
out
pop
push
xor
jg
pop
adc
xchg
ss
xchg
mov
mov
into
add
aam
cs
cltd
dec
sub
cmc
mov
stos
xchg
icebp
jl
js
cmp
jge
repz
shll
data16
cli
dec
mov
add
jg
sub
sub
bound
xchg
mov
int
mov
mov
pop
xor
mov
sahf
add
adc
faddl
sbb
into
jo
sbb
jl
and
aam
sbb
push
std
sbb
out
add
nop
icebp
faddl
stc
xchg
cmp
pop
jmp
add
pop
testb
xchg
clc
add
stos
mov
add
out
enter
aaa
sbb
gs
mov
fucom
xchg
pop
add
inc
sub
das
jb
addr16
or
pop
push
jnp,pn
fcompl
and
std
fmul
push
or
lcall
imul
adc
mov
fistl
pop
pop
mov
jns
mull
leave
or
je
out
push
jns
shr
adc
jns
loopne
cmp
push
sub
add
xor
mov
push
jb
fs
pop
dec
jge
add
shl
mov
adc
sbb
fists
sub
cld
test
ret
sbb
xchg
cmpsb
aam
inc
aas
pushf
add
imul
cld
mov
fiadds
test
adc
nop
int3
jns
add
shrb
imul
std
mov
and
test
cmp
mov
add
add
pop
sbb
lcall
insb
xchg
add
int
pop
sbb
or
popa
inc
jnp
xor
test
xchg
add
push
nop
shll
mov
pop
push
xlat
jnp
sub
dec
add
jnp
push
ljmp
add
jge
adc
bnd
enter
mov
and
iret
xlat
icebp
pop
sub
adc
mov
mov
add
mov
test
or
or
mov
cs
imul
test
bndldx
leave
add
or
int3
aaa
add
or
lods
add
mov
jns,pn
pop
loope
movsb
gs
pop
push
stc
mov
add
and
mov
scas
mov
lcall
sub
inc
test
pop
xor
je
lods
das
mov
xor
lret
lahf
mov
push
push
xor
adc
dec
fstpt
or
cmp
andl
lcall
rorl
jmp
sub
sbb
in
arpl
fnstsw
out
js
xchg
aam
filds
mov
sahf
sbb
mov
xor
sbb
shll
bound
cltd
mov
test
outsb
sbb
fistpl
push
pop
sbb
in
cmp
addb
shl
cltd
pop
and
cmpl
inc
sbb
sub
add
jae
mov
jns
pop
enter
loop
mov
add
outsb
jno
ss
sbb
dec
push
jo
sbb
push
pop
inc
adc
mov
jp
iret
enter
jmp
push
stos
mov
test
outsl
cld
add
fdivrs
dec
jne
cmpsl
mov
sbb
roll
js
arpl
push
fcmovne
inc
test
jl
dec
cmpl
add
adc
imul
add
mov
dec
add
xchg
xor
das
jae
add
xor
add
imul
dec
sub
pop
mov
int
sbb
icebp
adc
mov
push
mov
cmp
into
pop
lock
cmp
add
xchg
int3
xor
add
xchg
scas
pop
add
xlat
sub
icebp
cmpsb
jne
out
mov
test
xchg
int
add
mov
sbb
and
fcmovu
dec
lahf
push
sbb
out
pop
xabort
mov
cmp
loop
ljmp
add
sbb
pop
out
rolb
xor
mov
mov
inc
and
add
rcrl
int3
in
cld
stc
sbb
sub
fmuls
mov
add
stos
push
cmp
add
inc
add
or
rcrb
ret
jge
movsb
dec
jns
jl
lahf
add
sarl
insl
je
add
mov
jbe
mov
lret
push
enter
js
lcall
pusha
shll
push
lahf
and
test
popa
sub
loop
adc
decb
loopne
adc
jmp
std
js
bound
xor
add
jb
fadds
cmpsb
lret
push
mov
push
adc
das
adc
mov
fildl
in
mov
icebp
add
cltd
sbb
xor
push
pop
jl
shll
fs
js
pop
sbb
jl
and
mov
orl
mov
ret
push
mov
sbb
add
push
mov
ret
ds
lea
and
dec
nop
cmp
out
leave
pusha
in
mov
cmp
inc
dec
inc
mov
gs
push
pop
xor
pop
std
push
jecxz
add
repz
jmp
add
in
dec
inc
in
add
mov
pop
movsl
jl
es
loope
push
adc
enter
in
and
pusha
icebp
mov
push
mov
jae
rcrb
jg
mov
jle
add
stc
add
imul
pop
call
mov
arpl
adc
jnp
clc
cmp
sub
sbb
mov
jnp
mov
xchg
cmpl
pop
push
or
push
cmpb
add
sub
sbb
sub
jae
insb
mov
add
push
imul
or
sti
out
repz
pop
or
pop
xor
add
cs
xor
add
xor
mov
push
bound
xor
cld
cmpsb
cs
add
mov
test
aad
sub
bound
xor
lock
aam
sub
testl
cmpsl
pop
dec
xchg
sub
xchg
pop
add
inc
popf
addb
cmp
push
decb
adc
inc
pop
stc
adcb
dec
lahf
repnz
push
mov
int3
sub
popa
pop
hlt
cs
lcall
mov
rolb
and
gs
push
in
pop
add
mov
xor
add
aad
or
scas
xchg
push
mov
lds
jmp
insl
xor
or
test
add
push
add
mov
and
ss
insb
add
fidivrl
adc
cmpsb
fists
add
dec
xor
push
mov
fsubrs
ja
cld
push
mov
xchg
add
popf
call
mov
hlt
fwait
jno
adc
popa
lret
es
add
lahf
push
icebp
sbb
adc
cmp
lods
scas
add
sub
imul
movups
repnz
lcall
stos
dec
jl
xchg
pop
test
dec
and
sbb
add
cmp
jl
test
add
cmp
push
in
adc
mov
sbb
test
mov
sub
rolb
or
pop
sub
fbstp
lret
pop
out
xor
push
cmp
pop
cli
jne
add
aas
fldcw
inc
dec
push
mov
add
push
cmp
add
xchg
lods
out
pop
cmpb
xchg
and
or
push
xchg
add
add
cmp
fiaddl
lret
out
ds
or
and
add
mov
rolb
dec
jbe
inc
lahf
jg
add
mov
rolb
mov
int
ja
pop
add
add
outsb
and
pop
adc
jle
mov
repnz
and
ja
cmpsw
add
in
pop
insl
jns
xchg
xor
cli
add
mov
xchg
jne
js
push
and
lahf
aas
daa
add
sub
test
stc
mov
es
jp
cmp
popf
cli
bound
xor
sbb
mov
cmpsl
dec
loop
out
or
je
out
aaa
add
mov
ja
and
mov
or
add
add
lret
dec
outsb
in
jns
add
ljmp
dec
inc
cmp
enter
xchg
in
xor
pop
lret
fistpll
add
dec
imul
sbb
add
jae
filds
fistpl
lock
rclb
pop
mov
insb
add
mov
sbb
fdivrl
add
cmpsb
rorl
in
enter
cmp
mul
je
xlat
sahf
inc
xor
sbb
sub
add
or
dec
jnp
lret
adc
jae
add
adc
leave
daa
imul
dec
xor
mov
mov
mov
add
mov
xchg
sbb
add
or
enter
sbb
xor
add
adcl
pop
add
sub
out
fiaddl
jge
int3
push
daa
jns
and
addl
xor
push
mov
inc
stos
fisubrl
dec
xor
insb
adc
push
ljmp
mov
sbb
add
xor
gs
lock
add
dec
jmp
ljmp
lods
add
enter
mov
imul
pop
xor
daa
imul
arpl
lea
xchg
add
push
mov
adc
add
popf
jge
add
xchg
das
insb
and
scas
movsl
dec
dec
add
outsl
sarb
sti
push
jnp
jp
pop
jns
pop
jnp
shrb
sub
cld
test
cs
add
dec
in
xor
lret
fstpt
dec
cmp
pop
add
jae
mov
stc
scas
arpl
movb
pop
ljmp
mov
xor
push
test
sbbl
inc
sbb
ret
data16
repnz
or
mov
jg
mov
addr16
popf
jmp
adc
adcb
or
aam
bound
inc
jnp
lret
mov
inc
pushf
mov
mov
sub
adc
ja
adc
notb
and
sbb
invd
pop
outsb
lods
sbb
mov
inc
add
pop
jne
inc
jl
inc
fcomp
cmp
jb
jbe
daa
and
jle
add
xchg
mov
add
adc
in
sbb
jge
hlt
inc
ds
xlat
imul
sbb
decb
pop
jle
test
cmp
mov
popa
adc
push
dec
mov
add
or
int3
nop
inc
and
scas
sbb
inc
icebp
xlat
jp
add
rclb
add
pop
mov
jae
inc
or
inc
cmpsl
add
lahf
xor
sahf
popf
movsb
aam
push
or
pop
add
ret
add
mov
xchg
jnp
pop
or
lods
push
prefetch
movsb
stc
xor
ret
xchg
xor
add
adc
movb
test
cmc
insl
add
push
or
lock
out
sbbb
cmp
movsl
mov
loopne
jl
jns
mov
xchg
push
mov
arpl
sub
jp
sub
add
in
mov
ds
add
ljmp
add
andl
cmc
loopne
movsb
mov
lret
ret
lahf
repz
jnp
sub
sub
add
inc
fldt
jns
jle
fisubrl
mov
mov
add
stos
adc
jmp
cmpsb
sub
add
outsl
mov
add
roll
or
jnp
xchg
sbb
sbb
dec
outsb
rorl
iret
mov
out
and
stc
xchg
xor
lret
imul
push
dec
mov
inc
nop
jmp
nopl
hlt
ja
call
shll
popa
push
and
add
pop
inc
lret
add
js
pushf
data16
fs
shrb
and
pop
xor
inc
jl
jecxz
and
push
adc
dec
add
hlt
pop
cwtl
test
nop
sbb
shlb
add
imul
pop
add
cmp
cmp
fsub
add
dec
jbe
add
and
cld
cli
fiaddl
cmp
jl
or
inc
dec
add
mov
add
stos
jns
cmp
push
pop
lret
jg
add
fldl
out
mov
lahf
in
inc
lret
daa
and
jne
mov
sub
and
fnstenv
ja
cs
icebp
daa
cmc
rorb
in
sbb
hlt
call
add
inc
lret
andb
and
push
cli
loop
xor
add
or
ss
adc
sub
mov
pop
imul
or
sti
int
into
out
or
adc
pusha
xlat
enter
popa
std
rcr
mov
sbb
add
loope
mov
mov
pop
mov
call
sub
in
ficomps
jnp
jp
push
sub
mov
inc
and
add
push
mov
rcrl
fists
mov
loope
sbb
pop
rcrb
push
aas
incb
add
mov
lods
sub
gs
call
out
mov
push
test
cmc
add
jae
pop
ret
add
fildl
and
add
daa
sub
das
dec
cltd
fwait
inc
sub
add
loopne
shll
imul
test
cltd
add
es
pop
pop
add
cmpsb
pop
cli
js
mov
sub
cmp
xor
add
pop
adc
or
shlb
add
cmp
adc
jno
rcrl
add
mov
add
pop
cmp
fs
rclb
add
popf
stos
sahf
jmp
pusha
inc
and
or
pushf
and
js
out
jge
in
and
mov
inc
pop
iret
outsl
add
xor
or
stos
fdivr
pop
or
sub
add
aaa
jns
jb
or
pop
add
adc
cli
or
sbb
xor
aam
add
inc
les
lcall
mov
xchg
sti
inc
mov
jb
and
mov
in
mov
shrb
add
test
mov
inc
sbb
lahf
jl
xchg
push
cmpsb
mov
add
subb
push
jo
jno
arpl
inc
add
mov
int
xor
jbe
jno
imul
addr16
inc
jae
jle
xor
je
jne
mov
xlat
sbb
mov
mov
leave
sti
inc
pop
sarb
movsl
add
add
and
add
and
in
scas
ficoml
or
fisttpll
cld
fwait
pusha
lahf
adc
aaa
or
data16
add
mov
mov
mov
loop
cmp
scas
jg
pop
push
add
test
sub
or
add
mov
dec
sti
cmpsb
mov
stc
leave
mov
test
cltd
pop
mov
scas
mov
jnp
add
jne
mov
stc
jb
sub
xchg
cltd
mov
fisttpl
addr16
push
add
add
dec
rcr
testb
cmp
std
or
int
cld
inc
jbe
ss
add
cmc
add
lds
dec
cmp
sub
mov
sbb
add
xchg
in
xchg
push
es
std
repnz
sub
fcoms
jbe
add
inc
mov
cld
sub
and
or
dec
lea
adc
loope
pop
jb
add
push
xchg
mov
pop
or
add
loope
add
lds
hlt
inc
jae
sub
clc
jne
cmp
pop
movsb
and
jb
popa
add
jns
imul
mov
or
add
xchg
std
inc
mov
shll
adc
pop
rol
and
sbb
mov
pusha
mov
add
fcos
jno
les
add
movsb
out
jl
jle
add
cmpsb
push
mov
and
add
imul
ja
push
add
adc
mov
pop
or
adc
in
gs
arpl
out
add
sbb
add
xchg
ds
push
mov
icebp
dec
add
test
cmp
jmp
lahf
sti
fnstenv
jp
mov
mov
orl
sbb
add
or
cwtl
jg
add
pop
push
and
add
dec
lods
mov
add
xor
inc
int
int3
cmpsl
inc
arpl
das
popa
aas
lret
fldenv
cmpsb
inc
jecxz
rcrb
or
push
mov
ja
lea
loope
fstpl
stos
mov
outsb
adc
dec
cmc
inc
adc
std
idivb
xor
mov
xchg
add
mov
pop
jno
jl
out
add
sbb
les
and
dec
sbb
fs
pop
or
push
sub
mov
xor
cmp
les
mov
aas
add
jns
sbb
jge
ficoms
add
push
add
dec
dec
push
movaps
and
xchg
and
push
jnp
in
and
lcall
test
dec
pusha
push
add
ret
imul
xor
push
add
leave
test
mov
add
jb
sbb
test
in
xchg
add
mov
mov
incb
push
lds
in
pslld
shrw
add
mov
fildl
mov
adc
cld
and
cmp
sbb
lret
ret
or
aaa
mov
dec
call
mov
mov
add
push
rorb
stc
add
push
notb
sahf
inc
sub
mov
pop
add
push
lods
xchg
add
in
add
fwait
loopne
jp
xchg
incb
das
clc
mov
add
push
loope
sti
bound
cmp
std
out
add
rorl
stc
inc
xor
add
ljmp
add
mov
jnp
pop
xchg
hlt
pop
add
fildll
mov
pop
add
movb
jb
addr16
das
or
xchg
or
loop
movsl
jle
mov
add
aas
add
iret
push
and
lods
ja
sub
test
sub
pop
enter
stos
pushf
sbb
add
dec
or
jmp
gs
adc
mov
dec
repz
dec
lret
push
call
xchg
add
xchg
xchg
sahf
scas
dec
fbstp
iret
inc
add
sbb
xor
add
in
sbb
out
mov
jp
ret
push
dec
syscall
xchg
add
jae
lahf
lret
adc
and
std
imul
testl
mov
jecxz
jo
movsb
pop
stos
scas
add
push
in
bound
push
jne
pop
mov
lret
fidivs
add
dec
pop
jbe
imul
in
sbb
add
adc
std
mov
dec
or
jle
ret
and
pop
pop
add
mov
shlb
fstl
mov
add
inc
sahf
movsl
and
loope
sub
mov
in
sbb
stos
xchg
std
mov
gs
jne
js
ret
mov
jp
pop
out
sbb
xchg
mov
std
add
inc
cwtl
das
sub
adc
lods
insl
mov
popf
or
imul
sub
add
pop
jge
inc
daa
movsb
sub
test
cwtl
ds
add
clc
jp
push
int
pop
add
mov
pop
pop
sarl
mov
and
add
jnp
fsubs
xor
lods
mov
ljmp
add
test
cmpsb
cltd
lea
outsl
ja
ljmp
jp
sub
mov
movsl
pavgb
mov
add
sub
sbb
in
adc
dec
xor
adc
test
jnp
ret
in
xor
push
jo
mov
clc
ja
pop
mov
jne
pop
xchg
movsl
dec
int3
insl
iret
pop
scas
mov
lods
stos
jns
or
fimuls
push
adc
jnp
push
es
add
std
call
sub
dec
pop
testl
addr16
pop
ss
add
adc
sbb
aad
push
mov
jmp
sub
imul
xchg
push
adc
jne
add
in
bound
mov
mov
jbe
xchg
jns
out
jmp
scas
xchg
inc
cmp
repnz
lret
jl
push
xlat
add
jo
cli
sbb
adc
cmpl
sbb
lret
add
sub
mov
jo
push
push
outsb
and
add
clc
pop
cld
ja
xlat
iret
aad
adc
ljmp
mov
outsb
xchg
add
sbb
add
adc
in
cmc
mov
add
lcall
sbb
add
icebp
cmp
inc
leave
fiadds
push
cmpsb
jb
jmp
mov
mov
mov
adc
mov
aam
fisubs
ret
add
and
mov
adc
xchg
xchg
lret
add
mov
mov
or
mov
pushf
fidivl
mov
pop
cmp
cmc
push
and
fcoml
test
mov
jne
add
or
pop
fldl
sbb
pop
das
jle
add
xor
pop
aas
push
test
mov
or
inc
ret
adc
lods
inc
add
arpl
mov
movsl
pop
subl
dec
mov
mov
dec
sub
mov
repz
add
out
add
pop
adc
imulb
mov
dec
sub
arpl
push
cmp
sbb
xchg
leave
std
push
out
out
xor
lea
pop
inc
adc
std
in
outsb
lahf
lods
mov
insb
jp
jns
inc
add
add
mov
and
jle
push
jg
jno
cli
jne
jmp
or
inc
add
sbb
lret
cmp
or
decl
cmpsl
out
xor
das
mov
mov
or
pop
add
add
js
cmp
pop
and
cltd
cwtl
into
add
std
and
stos
or
xchg
mov
xor
ljmp
fstpt
xor
ds
adc
in
out
sbb
mov
rorl
push
cmpsb
ja
ret
sar
mov
adc
add
jb
or
fdivr
push
push
add
pop
jmp
jl
pop
push
ja
insb
jne
test
push
or
mov
mov
cmc
dec
or
add
lds
int3
fdivrl
push
repz
add
aad
testl
or
push
add
mov
push
nop
inc
push
jle
add
pop
insl
inc
lahf
flds
jbe
xor
fcoml
fs
sti
and
pop
mov
add
pusha
or
loope
sub
ret
sbb
add
cmp
add
jmp
in
jnp
iret
mov
sub
shlb
mov
add
imul
cmc
sahf
pop
or
push
jb
add
cmp
test
movsb
jnp
push
insl
insb
sub
jno
add
sub
inc
ljmp
add
sub
and
mov
push
push
jnp
movsl
inc
outsl
mov
add
cmp
enter
test
imul
xor
scas
push
sub
mov
jg
lds
ror
jnp
pop
mov
push
adc
cs
add
cmp
jnp
add
ret
sub
loope
ret
repz
push
mov
sbbl
pop
lods
ds
mov
in
jnp
scas
and
mov
push
pop
incb
cld
dec
das
data16
loopne
add
adcb
xchg
adc
add
sub
add
sub
mov
cld
add
ret
mov
mov
inc
push
mov
add
std
shlb
ljmp
mov
ret
loop
or
jecxz
or
sub
enter
xchg
nop
add
addr16
mov
add
push
lea
sti
push
lret
push
gs
daa
add
cmp
pop
dec
sbb
jo
jnp
push
lds
icebp
add
push
flds
arpl
push
stos
jl
rorl
jp
dec
mov
push
pop
jmp
loope
inc
cmp
je
ds
loop
sti
daa
fwait
inc
mov
adc
iret
pop
and
sbb
inc
mov
xlat
fcompl
xchg
pop
cli
dec
dec
jne
pop
mov
jbe
xchg
cmpsl
sub
nop
and
dec
stc
ja
push
std
lods
incl
in
mov
negb
add
adc
add
fisubs
in
xor
mov
xorl
sub
mov
call
xor
add
ds
pop
mov
xchg
lahf
add
push
sbb
push
ret
xorb
xchg
pop
fcmovb
cmp
pop
sub
cli
std
cltd
xchg
jnp
mov
jb
cmpb
addr16
ljmp
subb
fnsave
dec
add
in
sbb
add
das
sub
andl
mov
add
stos
sub
jecxz
pop
inc
add
mov
aaa
jne
rclb
inc
stc
mov
pusha
add
pusha
jmp
cmp
sub
push
add
js
or
in
add
int
mov
and
cmp
repnz
les
je
and
push
subl
jge
add
ficoml
call
push
daa
sub
out
or
lahf
add
subl
add
es
pop
clc
lock
jnp
ficompl
fistl
or
xor
inc
lock
js
jle
in
push
cmp
aaa
push
stos
xchg
push
and
fbld
lahf
repnz
add
cmp
mov
mov
sbb
add
cmp
push
mov
lret
mov
add
iret
data16
lret
orb
movsb
mov
cmpl
test
je
aam
pusha
add
xchg
xor
sub
stos
add
pop
jbe
add
mov
popa
fisubrs
adcl
outsl
ss
jecxz
fimuls
aam
jno
add
push
fdivs
sub
ss
dec
xor
int3
add
add
inc
sbb
mov
lods
push
or
jp
push
or
inc
out
es
addr16
push
dec
jmp
pop
fwait
jge
xor
mov
mov
jbe
cmp
or
push
inc
cltd
jg
cld
xor
xor
add
cld
jle
jne
dec
push
lahf
or
add
and
mov
jle
sub
mov
jbe
jge
repnz
hlt
and
xor
mov
shll
push
add
pop
mov
jns
add
in
aad
dec
js
insl
dec
pusha
add
xchg
fdiv
ds
sub
jnp
popf
dec
roll
push
push
add
push
pop
dec
add
dec
pop
dec
xchg
jns
sahf
popf
sub
dec
adc
add
mov
dec
xchg
jg
cmp
in
add
insl
mov
jl
test
jae
ja
testb
mov
jne
in
imul
xchg
lods
gs
dec
mov
cwtl
sbb
add
cmc
fisttpll
in
mov
leave
pop
int3
imul
jb
lcall
xor
jne
sbb
push
imul
dec
and
add
jae
lds
fiadds
pusha
clc
and
add
adc
jg
es
popl
add
and
mov
arpl
jle
jecxz
mov
in
into
ds
sub
mov
cmp
leave
and
jnp
xchg
mov
pop
lds
mov
popf
out
sub
cli
fidivrl
leave
mov
dec
dec
sahf
test
jp,pt
arpl
aam
or
and
cltd
sbb
sti
mov
xchg
and
out
mov
mov
aas
push
mov
leave
mov
jae
mov
jle
addr16
mulb
add
fsub
adc
cmpsl
stos
inc
sbb
shrl
into
or
add
inc
adc
inc
iret
ss
mov
sbb
add
loope
xchg
daa
idivb
fwait
popa
add
adc
jle
add
sub
sbb
add
cmp
add
cli
lahf
ret
add
andb
sub
fiaddl
outsl
sarb
in
pop
cli
mov
xor
sbb
roll
dec
imul
aas
jne
test
mov
outsl
sldt
pop
jl
lods
fsubrs
or
daa
js
pop
jo
pop
inc
inc
add
push
xchg
jnp,pn
jecxz
dec
sub
popf
fsubr
add
imul
roll
in
push
or
adc
adc
mov
das
faddp
cmp
add
sub
lahf
in
pop
fcoms
into
xor
cmpb
in
div
jbe
fwait
nop
cmp
sbb
adc
lea
xchg
mov
pop
pop
fsubs
push
mov
inc
bound
dec
pusha
xor
sbbb
arpl
xor
enter
cmc
pop
cmp
push
jno
icebp
daa
adc
fdiv
push
push
mov
adc
add
or
gs
call
shl
add
jmp
sub
hlt
mov
xchg
and
arpl
cmpsl
lock
push
sbb
fstps
add
xchg
lds
add
lea
jns
adc
and
sbb
mov
xor
cmpsl
out
lahf
jp
mov
add
jl
js
and
fldcw
test
add
mov
bound
mov
frstor
loope
add
sbb
jns
mov
nop
sub
inc
add
sub
mov
jne
aam
add
sbb
lcall
add
ret
mov
subl
mov
add
leave
cmp
pusha
push
sti
push
out
popa
repnz
or
jg
pop
pop
add
inc
out
add
testb
push
add
push
xchg
xchg
cwtl
add
mov
int3
mov
pop
add
pop
mov
add
aad
into
scas
mov
pop
and
fwait
mov
cli
add
push
faddl
in
add
mov
test
or
sbb
push
call
add
mov
add
repnz
jecxz
fidivrs
add
loopne
jge
push
dec
push
fildll
icebp
add
mov
and
add
push
pusha
add
fiadds
cld
jecxz
sbb
jae
add
sub
icebp
inc
sbb
or
insl
add
sub
jo
das
mov
adc
pop
xchg
data16
jl
inc
add
or
out
loope
mov
push
sbbb
sbb
add
adc
enter
data16
add
mov
aas
imul
or
xor
push
or
add
add
jnp
push
inc
jecxz
add
imul
add
iret
fmuls
pushf
lods
push
loop
or
sahf
xorl
dec
aad
cld
loopne
mov
fidivrs
and
bnd
scas
out
add
rcrl
add
int3
xor
dec
ja
das
jns
imul
loopne
fildl
push
ljmp
jl
daa
notl
aam
mov
jl
lods
lcall
sbb
add
push
inc
xor
scas
xchg
add
sbb
cli
fdivrl
sub
mov
mov
out
and
or
mov
cmp
movsb
int3
and
add
adc
mov
pop
sub
cmc
int
cmpsb
das
fadds
and
xor
in
fs
jp
ds
mov
jge
jle
std
mov
add
fs
popa
push
subl
fldenv
ret
icebp
xchg
arpl
out
add
xchg
pop
mov
add
scas
lcall
and
jno
sbb
add
out
jo
fdivrs
dec
sbb
shrl
ja
add
mov
add
xor
pop
ret
nop
jmp
sbbl
dec
pop
movsb
xchg
mov
xor
mov
adc
push
loopne
in
add
movsl
mov
jl
and
pop
add
popf
jmp
pop
fmull
ljmp
inc
pusha
cli
and
loopne
add
push
jne
cmpb
daa
cmp
fidivrs
mov
mov
cli
jnp
sub
dec
adc
sti
cli
xchg
repz
add
clc
shlb
inc
cmp
pop
sub
add
push
add
test
add
pop
dec
mov
addb
andl
add
mov
mov
call
repz
das
outsb
stc
mov
mov
xor
add
push
lods
and
add
xchg
in
stos
adc
inc
stos
jae
and
jnp
mov
mov
xor
adc
jp
mov
aam
imul
sahf
inc
movsb
fstl
cmc
in
int3
lds
js
and
add
jb
or
add
mov
pop
push
aas
pop
aam
movsl
cli
dec
pop
xchg
add
lods
test
pop
out
inc
mov
pop
sub
mov
jecxz
imul
popa
push
mov
mov
cmc
cmp
loope
adc
sbb
bound
scas
push
pop
data16
add
fwait
jb
push
test
cmp
pop
sbb
inc
add
dec
out
fistpll
xchg
mov
mov
or
sub
push
fsubl
out
lods
ss
jp
in
adc
hlt
add
pop
push
dec
test
add
lret
push
mov
add
or
add
cmpsl
bound
mov
mov
mul
inc
add
pop
add
jns
or
mov
mov
call
shlb
jmp
cmp
lahf
fistpll
test
in
dec
push
add
cmpsl
shll
cmp
jl
mov
in
aam
sbb
jl
lods
cmpsl
insb
or
pop
gs
mov
adc
and
das
in
sub
xor
fstpl
xchg
mov
das
jp
pop
mov
adc
cmp
adc
jb,pn
sbb
mov
xchg
aas
jge
pop
mov
or
inc
loopne
jb
mov
icebp
dec
inc
jecxz
cwtl
adc
sarb
std
add
sub
cmc
mov
mov
add
push
test
jl
jne
cmp
cmp
bnd
lds
and
add
ud1
add
mov
je
pushf
cli
mov
cmp
xor
and
xchg
imul
out
inc
arpl
hlt
cmpsl
mov
mov
and
popf
cltd
mov
adc
enter
add
cmp
pop
push
ss
cld
loop
rcl
in
and
inc
fnstsw
or
das
mov
addb
in
mov
int3
add
mov
cmp
outsl
lea
fisubs
xor
movl
adc
cmpsl
dec
lret
jno
arpl
push
in
fs
cld
lods
jne
aad
add
jmp
mov
sbb
ds
cld
mov
mov
mov
add
es
cli
mov
sbb
je
mov
add
sbb
cmp
adc
add
rcrb
push
nop
sub
in
mull
push
add
sar
inc
std
xor
sbb
push
mov
aaa
pusha
sbb
loopne
fs
xchg
scas
mov
in
mov
mov
rcl
mov
pop
arpl
sbb
mov
sub
jb
scas
ret
sub
ficoml
hlt
rorl
decb
jmp
sti
into
xchg
push
insb
add
gs
cli
xchg
sarb
adc
sbb
cld
inc
pop
clc
sbb
pop
mov
add
das
add
jmp
cs
into
mov
push
xchg
push
jl
mov
add
dec
lret
add
fisubrl
mov
xchg
ret
call
loop
negb
mov
xchg
push
popa
clc
pop
loope
add
fildl
mov
outsb
leave
sbb
incl
ret
push
popa
mov
inc
jno
add
test
fdivr
fidivs
cs
cli
leave
inc
push
sbb
cld
into
xor
lahf
sar
or
movl
sbb
or
faddl
arpl
push
pop
jno
add
ds
bound
into
push
jnp
sub
mov
aas
jmp
mov
mov
xchg
push
push
pushf
dec
add
int
out
add
adc
cmp
push
lret
pop
and
std
loopne
mov
and
pop
icebp
int3
cmp
into
pop
cmp
add
xor
inc
xchg
add
mov
mov
and
ja
mov
ret
call
push
add
in
repnz
rclb
add
in
imulb
mov
mov
mov
mov
in
xchg
adc
aaa
aas
cmpsb
jns
jne
test
sub
out
jl
mov
mov
push
jne
out
test
hlt
sbb
xchg
daa
aas
jnp
lods
mov
sub
add
push
xor
add
addr16
or
outsl
stos
add
hlt
in
sub
add
sbb
jecxz
rorl
and
sti
lcall
add
sahf
cmp
adc
pusha
and
arpl
decl
dec
push
or
js
pop
mov
xchg
push
fidivrs
in
add
mov
gs
lea
sti
out
jp
inc
add
pop
lret
fildl
lahf
pop
pop
inc
out
dec
int3
jl
xor
add
add
add
mov
dec
xor
test
repz
ja
adc
gs
pushf
sub
add
inc
add
aam
or
rcll
das
insl
push
mov
pop
jb
inc
xor
xor
sub
addr16
add
fdivr
out
mov
mov
in
add
daa
or
add
add
repnz
cmc
and
stc
mov
sbb
inc
add
mov
mov
push
sbb
xchg
insl
popa
enter
aam
add
sbb
rcrb
outsl
push
lock
imul
xchg
add
add
push
dec
stc
inc
imul
push
mov
cmp
mov
or
mov
in
cmp
lods
fxch
icebp
sbb
dec
xchg
sbb
jle
lcall
adc
pop
pop
sahf
xchg
cli
insl
jnp
cli
mov
adc
mov
add
out
insl
jnp
push
and
cmp
sbb
or
mov
xor
xor
sub
dec
add
jmp
repz
or
sbb
sub
and
repnz
add
lcall
cld
jle
mov
and
and
lahf
add
mov
xchg
cltd
fisubs
sub
es
sbb
dec
add
pop
out
stos
sub
mov
pop
jecxz
out
mov
or
rorb
dec
pop
sub
mov
cmp
lcall
push
pop
andb
push
add
sub
shll
cmp
jns
ds
mov
mov
mov
jnp
mov
add
mull
mov
mov
jecxz
sub
xorb
out
xor
dec
jmp
adc
mov
add
ljmp
and
jmp
or
shl
mull
add
push
iret
mov
and
stos
stc
pusha
pop
out
or
jmp
add
jecxz
push
and
cli
cmc
push
adc
pop
mov
stc
outsb
loopne
pop
imull
dec
sub
add
cmp
push
out
xchg
popa
xchg
add
aad
pop
ljmp
xchg
jmp
in
lahf
repnz
jnp
cmp
hlt
lds
sti
jg
mov
sbb
loope
add
xor
arpl
in
cmp
fcoml
push
andl
sub
test
xor
xchg
cmpsb
push
add
xchg
std
cmp
add
and
mov
popf
inc
mov
lock
inc
fcomps
pushf
pop
das
fs
cld
add
das
or
mov
lea
enter
in
or
inc
imul
outsl
mov
pop
loope
scas
jl
inc
lds
pop
add
xchg
pop
hlt
jns
fbld
pop
adc
dec
imul
mov
add
add
in
jb
xlat
into
sti
cld
int3
pop
out
ret
xor
stos
sbb
pop
sbb
dec
add
xor
les
adc
or
push
mov
xor
pop
add
mov
lds
das
mov
sti
mov
rolb
scas
mov
in
pop
mov
or
cmp
dec
sbb
add
jl
pushf
lahf
push
cld
imul
mov
int3
dec
add
dec
push
mov
daa
icebp
cmp
dec
nop
add
inc
scas
insb
add
jnp
add
hlt
popa
fdivs
pop
cld
in
les
fbstp
push
jae
add
and
jo
pop
shl
xchg
cs
sahf
cmpl
jl
jno
mov
inc
add
sub
or
and
push
repz
mov
jnp
mov
ret
xchg
js
mov
rorl
std
fistpl
push
jp
fcomp
push
sbb
push
adc
add
pop
mov
adc
add
pop
or
idivl
test
sbbb
inc
add
push
shll
push
out
and
sbb
cltd
pop
jmp
cmp
dec
fwait
cltd
jnp
push
xchg
jge
xor
test
dec
shlb
jmp
dec
add
add
aaa
mov
lods
pop
jb
mov
push
fidivl
bound
sub
and
lods
mov
add
push
dec
sub
lock
shll
add
xlat
je
sbb
xor
add
outsl
out
loope
or
mov
mov
cmp
mov
xlat
add
push
xchg
aaa
dec
fsubrp
add
popf
std
in
mov
pushf
mov
sub
jnp
mov
xchg
push
cmpsb
and
sbb
mov
push
sbb
inc
sbb
pop
in
mov
xchg
je
cmc
jmp
pop
mov
or
movsb
add
ret
test
inc
mov
mov
jg
ja
push
add
das
inc
fidivrs
and
push
mov
pop
lods
push
jge
scas
sbb
mov
lods
mov
or
cmp
add
mov
dec
lcall
or
add
xchg
and
rcl
jp
mov
sarl
mov
mov
sub
add
sbbb
add
mov
pop
pop
add
arpl
mov
or
ja
lods
stos
sbbl
scas
jns
mov
mov
test
inc
shlb
insb
insl
inc
add
adcl
stos
daa
xor
add
aaa
dec
add
mov
jnp
divb
mov
lods
in
lret
add
in
xor
lahf
sub
inc
lahf
ret
imul
pop
and
mov
in
jg
les
sbb
sbb
cli
xor
or
sbb
pushf
mov
movsl
cs
rorl
xchg
mov
mov
add
iret
pop
and
leave
clc
add
sbb
int
jle
pop
test
ss
fbld
jnp
mov
shll
or
adc
mov
push
push
lds
mov
inc
faddp
or
or
jns
jl
fcompl
inc
xor
lret
hlt
mov
out
sub
mov
dec
mov
mov
lock
lahf
xchg
adc
cmp
aam
push
add
shlb
add
jne
jecxz
std
les
mov
add
xor
add
mov
loopne
mov
cmp
loope
and
push
aas
sahf
jbe
fisubs
sbb
mov
gs
or
dec
mov
push
xchg
fs
repz
sbb
insl
xor
int
add
pop
xchg
call
imul
and
add
ljmp
sbbb
add
scas
jae
xchg
rolb
mov
sub
mov
pushf
push
pop
or
add
adc
add
jecxz
out
out
roll
or
jle
ljmp
iret
xor
sahf
jl
pop
inc
repnz
imul
or
fmull
jg
mov
or
fdivl
ljmp
sbb
cmp
loopne
in
add
mov
mov
decl
pop
jp
add
adc
test
stc
les
pop
dec
scas
sbb
jnp
push
mov
or
mov
sahf
xchg
jnp
cmp
insb
movsl
add
cmp
push
cld
push
sub
add
hlt
add
mov
iret
xor
outsl
inc
cmc
jne
add
lods
push
in
ss
sbb
adc
es
add
mov
cs
add
lcall
mov
hlt
rorl
jnp
inc
es
sub
add
ds
mov
or
adc
push
and
jmp
sbb
mov
std
test
adc
mov
fldcw
mov
xor
addb
or
cmp
xchg
mov
add
pop
push
das
lods
stos
add
sbb
and
cmp
mov
cmc
jmp
stc
jnp
leave
inc
or
fmulp
adc
lcall
jnp
pop
inc
mov
add
mov
sbb
filds
cmpsb
fmull
mov
rcrl
cld
lret
add
inc
fistl
rcl
sbb
cs
loop
divb
sbb
mov
dec
arpl
mov
add
sbb
lahf
sub
pop
imul
arpl
mov
push
cmp
add
adc
imul
popf
lahf
push
cmp
dec
jmp
push
movsb
add
mov
xchg
mov
cltd
and
xchg
pop
inc
ffree
xlat
jne
or
movsb
dec
jg
lret
fwait
mov
fsubrl
sbb
cmp
jns
push
inc
mov
pusha
add
cld
stos
mov
and
xchg
das
inc
add
jl
add
mov
outsl
or
add
cltd
pop
and
cmp
enter
fwait
xor
cmpl
and
adc
push
int3
mov
scas
fisttps
and
insl
add
xchg
push
cmp
mov
inc
faddl
push
or
add
pop
outsl
dec
mov
out
pop
push
mov
dec
rolb
mov
loopne
leave
sahf
js
test
jle
sub
cmc
jns
outsb
xchg
or
filds
adc
mov
adc
testb
dec
add
aad
imul
jmp
cmp
jae
iret
mov
add
addr16
xor
sti
int3
cmp
add
and
cld
pop
outsb
dec
mov
dec
rcrl
mov
stc
ja
dec
mov
mov
sbb
xor
sub
dec
popl
or
cwtl
pop
cmp
sbb
xor
int3
add
inc
push
gs
cmp
xchg
adc
add
pop
enter
sbb
cmpsl
jo
pushf
add
xchg
or
lock
and
push
add
and
repnz
int3
dec
enter
and
add
lea
data16
or
into
add
xchg
in
cmpsb
lcall
sahf
jno
add
jns
sbb
mov
insl
cmpsb
mov
pop
cmp
add
loopne
adc
and
aas
adc
fmull
mov
dec
insb
jl
mov
jecxz
mov
mov
add
push
sub
mov
pop
shll
adc
add
adc
int
add
adc
mov
and
fiaddl
adc
xor
test
jge
into
aad
adc
jmp
lods
movl
pusha
mov
popf
lods
es
mov
pop
and
xchg
mov
incl
add
mov
ret
je
and
lcall
mov
mov
hlt
popf
mov
add
adc
mov
xlat
or
lods
push
cmpsl
popl
mov
mov
aam
cmc
pop
jbe
scas
cmp
lods
stos
add
std
add
push
push
dec
jns
ss
shll
mov
dec
jne
push
movsl
sbb
jge
pop
cltd
push
mov
sbb
lahf
and
push
cmpsl
ret
pop
push
mov
jbe
popf
pusha
lock
push
in
pop
sub
and
push
or
testb
adc
loop
inc
fbstp
inc
popa
dec
or
jnp
mov
mov
mov
jp
in
add
sub
sbb
pop
ss
mov
sbb
fiadds
jne
mov
sar
or
in
adc
mov
sbb
mov
inc
pop
xor
in
xchg
imul
lret
fildl
xchg
std
aad
test
push
sar
addr16
dec
rclb
jp
jns
jb
ret
sbb
pop
add
dec
xor
loope
pusha
test
jb
lldt
mov
testl
sub
cmpsl
cs
mov
mov
js
mov
mov
mov
sbb
sub
out
cld
push
push
stc
fnstcw
imul
cwtl
cmp
jl
fstpt
out
adc
adc
data16
fstp
mov
add
xor
add
add
loope
dec
rorb
jl,pt
jns
fldl
test
push
add
add
or
pop
jno
cmc
test
add
test
sbb
push
xchg
push
enter
cs
and
ret
gs
lea
sbb
add
jl
repz
subb
int3
pop
imul
add
lock
pushf
in
inc
stc
lret
ss
aad
push
out
ss
or
xchg
fiadds
push
imul
pop
inc
arpl
add
add
sbb
mov
addb
push
and
icebp
in
lea
add
push
call
js
pop
insb
cld
jl
test
mov
pop
add
lret
into
mov
sbb
imul
cld
lods
mov
mov
and
bound
add
push
icebp
pop
shrl
add
adc
add
lods
imul
push
leave
jecxz
in
jnp
dec
xlat
ret
lcall
add
inc
lret
xor
sbb
jmp
push
and
push
lcall
add
jge
repz
pop
in
add
cmp
cmc
pop
ss
and
push
fisubl
pop
and
mov
enter
insb
lret
jg
mov
dec
inc
add
decl
in
or
icebp
das
pop
clc
cld
inc
jg
pop
jno
pop
add
out
sub
add
ja
sub
repnz
cmpsl
push
cmp
dec
jg
dec
sbb
popf
mov
scas
filds
test
cs
add
notl
out
or
insb
js
xor
mov
int
rolb
scas
mov
loop
and
das
add
jle
loopne
stos
push
and
add
popa
ret
push
inc
mov
jnp
jno
orl
mov
dec
adc
pop
jne
mov
rclb
mov
inc
add
pop
adc
jo
dec
mov
outsb
mov
or
pop
cmp
divb
mov
sti
lea
add
mov
cmp
pop
outsb
pushf
jmp
jnp
fstpl
sti
leave
jl
movsl
pop
mov
pop
jmp
adc
add
jnp
pop
dec
push
int3
psubd
add
cld
jb
cmovae
add
pusha
iret
cmp
testl
xchg
cmp
mov
adc
stc
insb
pop
xor
add
testb
add
call
xchg
cmp
pop
mov
repnz
add
shrb
les
in
xchg
insb
adc
add
incl
xchg
add
scas
sub
inc
repnz
ret
xor
sub
aaa
testb
xor
adc
push
out
jns
loop
sbb
loope
or
mov
mov
sti
mov
int
push
dec
lea
lods
jae
int
and
xchg
adc
mov
push
jl
fs
cmc
cmp
sub
pop
push
sahf
inc
add
push
or
xchg
bnd
xchg
pop
pushf
je
or
mov
dec
insl
xorl
addr16
jo
xchg
sbb
inc
jnp
pop
mov
pop
pop
add
sub
xchg
pop
inc
push
out
cmp
js
fldl
dec
fcomi
call
cld
sbb
fcoml
cmp
lea
jns
xor
dec
add
push
push
shr
cwtl
mov
pop
xlat
push
test
mov
cmp
jl
push
sbb
add
add
subb
inc
and
arpl
inc
lcall
add
in
btr
xor
mov
add
mov
sub
mov
xor
pop
add
add
pop
outsb
or
ds
push
add
gs
out
push
mov
add
and
sar
sbb
xorb
mov
pop
xor
inc
incl
cld
jl
adc
sarb
add
jo
xchg
lahf
xchg
sub
test
add
jnp
fimull
or
pop
and
push
rol
xchg
in
and
sbb
rolb
xchg
mov
inc
add
fs
add
adc
and
stos
stos
xchg
and
aaa
mov
jo
cltd
jl
mov
push
sub
jb
pop
xor
lret
add
pop
mov
cli
mov
icebp
add
adc
mov
lods
xchg
dec
add
jb
adc
add
add
and
fnstsw
int
mov
gs
adc
repz
fs
sbb
insl
xlat
call
and
push
ret
mov
xchg
xor
aaa
jnp
xchg
cltd
add
add
and
jns
shlb
addr16
xchg
xor
lods
dec
std
ja
and
cmc
lret
pop
push
sub
lret
xor
cmp
mov
mov
ret
push
stos
lock
add
sbb
add
cmp
inc
andb
inc
sub
pop
add
xor
adc
lret
ud2
test
sbb
jno
push
sub
in
ljmp
and
add
es
dec
mov
sbb
loopne
jnp
add
lret
sarl
push
push
addr16
pop
inc
bound
mov
push
inc
hlt
shlb
iret
sbb
stos
std
mov
and
and
les
xchg
sbb
movsl
mov
mov
mov
sahf
dec
scas
mov
adc
sbb
and
dec
hlt
jnp
pop
mov
jg
mov
jecxz
mov
xor
pop
cwtl
clc
push
sub
rorb
pop
sbb
add
mov
loopne
mov
pop
xchg
fmuls
jnp
std
and
incb
sub
lods
out
jne
mov
sub
dec
inc
jne
daa
jg
test
add
cmp
add
jbe
or
push
fs
inc
leave
xor
lea
pop
insb
fbld
push
adc
int3
fs
mov
xchg
sub
add
cmpsl
das
scas
cwtl
ds
adc
push
mov
push
cwtl
xor
mov
jbe
repz
ss
or
and
test
sub
push
lds
add
mov
sbb
in
pop
adc
fldcw
dec
ret
mov
dec
push
add
outsb
cmpps
je
fcompl
add
cmp
xor
ret
xor
jnp
mov
je
inc
or
ret
cmc
loope
call
mov
dec
pop
push
in
jecxz
flds
std
lds
icebp
xchg
xor
sahf
outsl
add
mov
shlb
mov
sub
push
int3
jl
mov
pop
add
rolb
cld
and
mov
and
or
dec
enter
aas
xchg
pop
sbb
test
mov
add
popa
mov
sti
add
xchg
ss
pavgw
fnsave
add
roll
sahf
repz
jge
outsb
lcall
push
jmp
xchg
and
js
ss
mov
xor
sub
in
mov
lahf
add
inc
ss
orl
push
pop
and
in
add
cmp
out
out
cmp
aaa
cmp
xor
pop
data16
adc
leave
das
dec
test
cwtl
shr
lret
cmp
ss
mov
int3
sub
push
mov
insl
movsl
mov
aaa
add
ljmp
mov
add
xchg
add
cmc
push
insb
pop
sti
xchg
dec
add
filds
icebp
push
aas
js
mov
jo
push
cltd
cmp
add
mov
movsb
add
decl
popa
loopne
cmp
and
icebp
adc
mov
push
adcb
lock
hlt
push
add
mov
add
add
sub
or
mov
mov
ret
sub
xor
rorl
pushf
mov
or
rol
fistpl
mov
icebp
jmp
test
mov
xor
lea
into
lods
xchg
fsubrl
loope
cli
popa
jb
gs
xchg
mov
testb
dec
jmp
in
jp
add
cmp
pusha
and
add
push
jo
daa
mov
push
loopne
pop
or
inc
in
pop
and
inc
mov
sahf
adcl
xor
jne
add
std
call
cmp
imull
out
addb
jl
fdivr
enter
sub
pop
into
add
add
std
push
movsl
cmp
sub
sub
test
push
in
pop
sbb
or
cli
scas
lods
js
pop
pop
push
add
lret
jnp
pushf
movsb
in
aam
sbb
test
jge
push
jg
test
ja
xor
jb
or
mov
fists
mov
pop
testl
dec
ljmp
xchg
cltd
rorl
cmc
push
sub
sub
cmc
pop
add
jl
dec
add
or
mov
cmp
push
aad
jl
cltd
and
push
sbb
test
mov
jecxz,pn
lods
stos
add
add
sbb
or
cmp
inc
jbe
push
mov
pusha
add
adc
sub
sbb
jp
add
push
push
orl
fildl
sar
aad
mov
inc
dec
add
aas
insb
add
lahf
sub
lahf
addb
dec
adc
movsl
rorl
mov
sub
add
in
jecxz
add
clc
adc
add
aaa
pop
dec
jns
aam
add
inc
push
jns
es
pop
sahf
sub
mov
pop
leave
or
jns
int
jb
aam
sbb
loopne
add
ss
add
fcoms
sbb
pop
add
and
add
in
iret
cld
xchg
ficoms
cltd
jns
and
hlt
add
fldenv
xor
add
pop
pushf
cmpsl
pop
into
dec
stos
add
sub
jmp
rclb
inc
outsl
sarb
add
jnp
pmaxub
push
adc
addr16
or
sti
or
jo
jge
pop
cmc
mov
push
aaa
xchg
xchg
jl
push
ret
sbb
adc
or
shll
roll
cwtl
loope
pop
std
dec
fucomip
jl
jb
ljmp
add
inc
pop
jae
popf
dec
add
xchg
pop
mov
mov
adc
inc
pop
cmp
mov
and
movb
sub
jo
or
sbb
fiaddl
cltd
add
into
insb
lods
xor
push
roll
loopne
pop
addr16
and
dec
jecxz
jb
add
push
sarl
scas
cli
insl
sub
mov
outsl
cmp
clc
xchg
pop
and
sub
xor
fsubl
ss
xor
pop
inc
cmp
push
add
adc
sbb
aas
push
pop
add
std
popf
imul
adc
nop
sahf
add
xchg
shrb
out
add
or
inc
add
mov
decl
sbbl
lods
cmp
test
xor
xchg
cld
mov
shrl
ficomps
lcall
std
leave
push
js
jnp
adc
add
inc
jmp
dec
add
adc
sbb
push
cmp
adc
jmp
dec
pop
add
lds
sbb
popa
add
or
repz
scas
mov
cld
lock
pop
scas
push
fildl
mov
add
rolb
notl
popa
cmpb
sub
packsswb
lret
jns
clc
stos
mov
push
std
lock
add
or
ret
or
xor
push
mov
adc
add
test
jb
daa
mov
lret
or
iret
adc
loop
pop
dec
inc
std
rclw
mov
cmp
xchg
add
mov
xor
cmp
jne
gs
mov
mov
js
test
jno
inc
dec
sbb
loope
add
and
iret
ljmp
daa
cmpsl
sub
cmp
or
fadd
sbb
fiaddl
lea
jb
add
mov
mov
lcall
xchg
add
add
rcrl
cwtl
sbb
push
or
mov
xchg
enter
sbb
fcomps
lret
test
sub
pop
sbb
dec
add
pop
ss
cmp
hlt
push
and
int3
xor
jnp
pop
out
call
cmp
repz
add
add
push
cld
xor
subb
mov
mov
or
stos
add
int
cmp
or
sbb
jl
outsl
test
dec
sub
dec
sbb
sti
adc
mov
add
or
das
lds
pushf
sbb
inc
add
push
popf
mov
daa
stos
mov
mov
addr16
mov
xchg
mov
sbb
mov
add
dec
inc
test
test
stos
repnz
xor
add
fsubrs
jmp
jae
add
add
lcall
mov
ret
rcrl
pop
xor
icebp
rorl
mov
sub
js
dec
mov
dec
push
push
add
pop
and
add
addl
push
or
dec
fs
mov
add
xor
jae
cld
cmp
or
sub
xor
push
inc
lock
shl
dec
sahf
movb
add
push
xchg
add
jbe
ret
inc
and
inc
add
and
adcb
stc
lsl
push
scas
or
call
aaa
add
mov
pop
jae
fwait
xor
imul
jb
aaa
or
add
and
mov
xor
or
jg
into
mov
fsincos
sub
add
mul
loope
cmp
xchg
rclb
das
test
and
fnstsw
mov
call
add
stos
icebp
cli
shrb
movb
add
shll
arpl
je
jnp
inc
cld
in
loopne
ljmp
add
fnstcw
ljmp
push
xchg
mov
jnp
inc
sbb
mov
and
cmpsb
cld
hlt
ficoms
das
ss
mov
cli
lahf
or
roll
push
daa
fs
lret
jns
fistl
insb
addr16
sbb
add
adc
int3
inc
xchg
add
push
shrb
mov
push
jmp
jl
sbb
sbb
sub
iret
add
jo
test
gs
mov
bound
xchg
arpl
das
sar
push
aam
push
cld
mov
cmp
js
xchg
movsb
adc
xchg
sub
cmpsl
sahf
pop
imul
aam
jb
push
jnp
data16
inc
push
and
mov
inc
xor
sbb
xchg
jns
fadds
sub
adc
jb
mov
arpl
out
lret
xchg
mov
fsubl
push
pusha
add
lret
or
cmpsb
in
jnp
ret
pop
xchg
cmp
push
lock
testb
js
outsl
ret
out
cmpsl
add
sbb
sub
dec
imul
add
add
enter
gs
outsb
xor
push
fsubrs
leave
lock
pop
add
fwait
cs
lods
sbb
cld
cmpsl
jmp
push
push
adc
pushf
testl
push
loopne
ret
add
xlat
dec
jb
or
lock
das
jg
cmp
jge
je
xor
mov
sub
pop
jmp
jle
int3
in
xor
mov
mov
pop
push
mov
add
xor
cmc
test
adc
mov
adc
jl
xchg
jnp
fildll
cmp
or
push
adc
fiadds
test
push
cs
in
add
sbb
jmp
aaa
push
pop
scas
test
sub
scas
bound
inc
push
add
es
lods
mov
pop
sub
sub
or
popa
add
shll
mov
sub
or
cltd
mov
out
mov
arpl
loop
xor
add
pop
and
mov
and
jl
outsl
mov
ljmp
add
test
inc
mov
sbb
jb
add
cmp
dec
in
ss
sbb
cs
jmp
outsl
scas
push
push
add
out
stos
lds
dec
es
push
sub
mov
nop
inc
cmc
cmp
or
pop
jmp
sbb
dec
mov
add
lret
add
jmp
pop
add
cmp
ret
into
add
and
inc
xor
inc
jl
aam
or
pop
fimuls
fnsave
push
and
jle
jnp
inc
popl
insb
insl
push
test
outsl
and
sbb
dec
pusha
add
jo
mov
jno
pop
ja
je
jb
cmc
mov
movsb
outsb
add
jl
fisubrl
cld
or
lret
icebp
xchg
cld
inc
dec
adcb
push
add
rolb
add
pop
mov
cld
ret
les
inc
mov
test
add
repz
or
adcb
lret
loopne
cli
cld
push
iret
imulb
xchg
xlat
cld
int3
movb
jns
lods
sarl
sub
les
add
sbb
bnd
add
xchg
aad
outsl
pop
jnp
ror
daa
sahf
jns
jne
add
mov
and
lea
popf
push
cs
cmp
adc
or
dec
add
sub
and
out
and
fisubrl
out
int
cmc
xchg
sbb
dec
and
push
jns
mov
xor
repnz
add
rorb
int
mov
mov
dec
inc
sub
pop
ds
js
mov
mov
inc
add
inc
mov
sbb
dec
cld
push
jnp
pop
in
aam
and
sti
rolb
jne
popa
and
insl
shll
out
add
pusha
loope
push
gs
in
add
lods
and
add
daa
and
movsb
xchg
add
jl
orl
je
repz
scas
sahf
fsubrl
add
xchg
mov
dec
out
sub
cs
mov
adc
push
push
cmpsl
add
or
or
in
clc
nop
cwtl
xchg
add
or
inc
pop
add
cmp
imul
cmc
push
xchg
dec
jg
pop
jl
jae
cltd
fdivrl
sbb
aas
sarb
jne
dec
or
inc
imul
gs
out
pop
in
and
in
add
ret
cld
mov
mov
xor
cmp
roll
ja
inc
inc
push
inc
mov
mov
inc
mov
add
push
hlt
add
pop
fwait
pop
outsl
aad
sbb
aam
dec
lret
jl
xchg
dec
add
hlt
rorl
dec
lret
xlat
insl
pop
add
pop
stos
insl
inc
dec
or
and
add
mov
push
fdivrl
sbb
mov
sbb
push
pop
std
lods
add
mov
int3
into
outsb
sbb
adc
stc
add
std
add
adc
mov
or
pop
fstpl
imul
adc
xor
pop
or
out
push
cmp
xchg
test
arpl
std
push
out
cld
jge
xlat
inc
jb
cmpsb
pop
lea
push
arpl
jbe
pop
cs
aam
repnz
and
mov
jl
js
call
dec
mov
mov
fdivr
stos
das
repnz
add
in
jnp
push
add
clc
pusha
arpl
stos
loopne
mov
cs
cli
jge
xor
mov
fwait
cmp
in
xchg
inc
aad
mov
pop
cmp
cltd
inc
mov
cli
mov
mov
sub
sub
fcomi
cmp
push
jne,pn
loopne
jnp
inc
jno
and
sbb
orb
inc
push
arpl
mov
push
outsl
push
dec
cld
sbb
add
mov
xchg
add
test
sbb
sbb
out
pop
add
roll
pavgw
stc
lods
ds
mov
lds
int3
jmp
mov
xchg
jl
jl
lcall
add
xchg
and
push
pop
sbb
daa
repnz
mov
pextrw
mov
mov
inc
add
adc
add
cmp
dec
jge
lahf
inc
xor
mov
add
jl
xor
xchg
lret
sarb
add
sub
mov
add
mov
stc
mov
xchg
add
sbb
adc
push
addl
out
pusha
add
adc
ret
arpl
pop
and
pusha
addb
xlat
repnz
enter
xchg
lods
insl
sahf
pushf
rcr
jmp
sub
dec
mov
cmp
mov
pop
cmp
xchg
add
pop
mov
pop
xchg
mov
xor
lods
mov
xor
push
jp
bound
pushf
hlt
outsb
out
out
dec
lds
addl
mov
and
rcrb
lock
adc
adc
aam
inc
add
mov
sub
pop
popf
fdivrl
mov
hlt
pop
ds
add
lret
lahf
push
add
dec
movsl
sbb
and
mov
sti
add
mov
push
cmp
jl
ja
push
inc
leave
add
enter
push
fs
hlt
mov
scas
jmp
or
or
movsl
fiaddl
rcrb
add
stos
push
adc
add
ss
ds
push
pushf
out
mov
fs
pop
dec
pop
jb
inc
loopne
add
lahf
mov
jne
inc
xor
push
pop
loopne
add
push
dec
into
add
lret
pop
jne
add
mov
ljmp
lods
or
rclb
icebp
cli
add
inc
sbb
test
dec
jnp
loopne
pop
insl
adc
add
mov
negl
movsl
std
cmpsl
imul
or
pop
stos
ja
or
add
jb
jo
pushf
or
shrl
flds
add
add
mov
adc
cmc
add
in
push
call
repz
pop
jno
mov
je
adc
xor
mov
xchg
xchg
xchg
and
add
and
in
cmp
jae
push
add
addr16
mov
sti
pop
add
xor
ss
lock
nop
adc
lret
int3
and
jmp
imul
mov
sbb
pusha
repz
adc
mov
mov
iret
pop
xchg
push
fistps
aas
add
inc
repnz
sti
add
mov
orl
stos
jae
lods
sub
xor
jne
insl
cmp
inc
lcall
push
add
out
hlt
lock
xor
xor
mov
imul
add
dec
xorb
nop
imul
add
cmpsb
out
xor
mov
cmp
mov
pop
xlat
loop
lcall
loope
and
xchg
insb
repnz
aas
or
jnp
bound
cltd
cmp
add
movb
icebp
mov
cld
sub
nop
inc
movsb
sbb
add
dec
test
push
icebp
xor
or
add
and
mov
inc
arpl
sbb
sahf
out
sbb
sub
pushf
or
xor
fimuls
pop
inc
mov
mov
jae
lcall
ret
fcmovnu
cs
add
mov
shll
cli
lods
fldl
adc
dec
add
pop
cmp
jp
movsl
cld
call
mov
jle
jp
mov
xchg
add
out
bnd
rorb
negb
int3
add
fidivrs
dec
add
mov
xor
inc
jo
popa
add
xor
pushf
aaa
out
jl
paddq
sti
xchg
imul
xchg
jno
call
add
jmp
test
jae
add
call
out
cmp
dec
in
xchg
jno
cmp
push
dec
loope
je
add
add
cmpsb
jno
or
fwait
icebp
push
scas
add
ror
add
sub
loopne
push
sbb
mov
xlat
mov
add
cmp
dec
leave
cmpsb
scas
jne
sti
test
jns,pt
jl
pop
inc
push
push
cld
repz
cmp
dec
xchg
and
into
push
jno
pop
cld
push
cmp
and
sub
mov
scas
fsubrp
xchg
mov
int
lods
mov
jl,pn
or
sub
nop
push
lahf
adc
insl
orb
cmp
mov
je
cmp
sarl
mov
aad
cld
fcmovnbe
sbb
add
push
mov
mov
inc
inc
jmp
mov
pop
iret
incb
stos
cmp
fwait
add
push
jnp
in
mov
sbb
and
add
rolb
aas
aad
aaa
cmp
push
sbb
movsl
sbb
testb
push
lods
iret
out
xchg
add
lods
roll
jl
aad
negl
jmp
test
js
notb
fs
popa
add
cld
ljmp
sub
add
scas
lcall
outsb
ret
fisubl
add
mov
xor
add
cmp
inc
adc
js
xchg
outsl
xchg
mov
add
pop
addl
jnp
sub
ret
add
add
mov
jg
imul
fs
aam
into
mov
add
sbb
popf
aas
jecxz
in
ds
jg
sti
hlt
enter
add
lea
push
or
xor
sub
dec
int3
shld
imul
jae
bound
je
adc
jge
pop
rcrb
add
push
jnp
out
mov
cmpsb
mov
jg
out
rcrl
dec
inc
xchg
popa
dec
add
mov
mov
dec
sti
std
insl
mov
add
ja
sub
repz
sbb
sahf
add
push
xor
bnd
dec
pop
mov
sbb
sbb
xor
cld
jecxz
jl
fmuls
add
mov
cld
loop
insl
into
add
mov
add
dec
cmp
add
inc
and
mov
cmpsl
fmull
stc
vpmaxub
push
insl
loope,pn
inc
subb
fisttpll
outsl
sbb
out
cltd
xor
xor
and
jp
arpl
scas
add
pop
mov
lds
push
push
fnstenv
in
mov
fisubrs
pop
loopne
movb
insb
lcall
adc
ret
xchg
xor
jns
pop
or
adc
jno
nop
std
cwtl
cli
cmc
outsb
sbb
call
mov
mov
ret
xchg
stos
adc
push
push
mov
lret
sarl
inc
push
xchg
xor
add
sub
jns
push
cmp
pop
pop
push
cmp
fildl
out
sub
sub
add
mov
aaa
add
ss
mov
mov
jbe
sub
popf
mov
adc
or
dec
mov
pop
sub
es
add
test
ljmp
lds
shll
add
enter
gs
jg
xor
push
push
outsb
adc
or
sub
rclb
add
push
leave
enter
insb
shrl
push
push
or
mov
mov
popa
pop
jmp
iret
push
jmp
test
or
into
lahf
add
xor
jl
daa
fdivl
add
mov
mov
inc
test
xor
dec
call
hlt
push
inc
dec
insl
push
sbb
dec
fstps
popa
and
sub
adc
cmp
test
add
cmp
jnp
hlt
cmp
loop
add
mov
jl
pop
ss
mov
lods
xlat
stos
popf
xorb
mov
xchg
call
push
ltr
mov
into
add
jb
nop
inc
jle
cld
cmc
xchg
sub
xor
xor
jg
add
sbb
jnp
mov
xchg
dec
mov
add
inc
loope
xchg
paddusw
ret
lahf
icebp
movsl
pop
pusha
and
mov
push
aas
imul
test
fadd
jns
rclb
xchg
cmp
adc
mov
jl
mov
pop
ss
scas
dec
add
cmp
add
adc
or
and
pop
xchg
subb
cmp
adc
popa
gs
sbb
movsb
and
ret
mov
add
mov
out
cld
andl
mov
pop
adc
in
inc
lds
adc
mov
add
loop
pop
and
addb
ret
add
or
mov
add
lcall
mov
je
push
add
xchg
cmp
loop
rolb
testb
divl
jle
out
sub
icebp
cltd
add
sahf
mov
xor
cmpsl
mov
pop
xchg
shrl
pop
sbb
or
fcmovb
repz
add
lds
in
in
mov
movsb
test
inc
jbe
divl
pop
add
pop
pop
lea
dec
ret
mov
nop
push
les
add
aaa
mov
mov
pop
cs
adc
cmpsl
psrlq
out
inc
fcomps
xor
dec
in
js
jnp
mov
in
add
sub
add
nop
mov
jp
or
je
add
rorb
add
inc
jnp
pop
subl
inc
mov
adc
test
add
addr16
test
stos
cmp
sub
repnz
subb
ret
add
mov
push
bound
outsl
add
xchg
repz
lea
inc
aam
inc
mov
mov
add
popf
pop
sbb
jg
jg
add
aam
jecxz
mov
ljmp
in
call
sub
cld
xchg
inc
pop
pop
sbb
loope
mov
stc
sti
adc
xchg
dec
fcomp
cld
mov
imul
lret
mov
mov
dec
out
jne
xor
add
pop
mov
loope
shll
mov
sub
adc
sbb
add
fucompp
cmp
pop
sarb
sbb
pop
xorl
mov
mov
inc
test
and
push
mov
xor
or
xor
mov
test
dec
cmp
cld
aaa
fwait
repz
jp
or
push
in
leave
dec
add
cld
add
loopne
jge
jl
xor
add
jns
sub
xchg
pop
xchg
mov
xor
lds
inc
sbbb
imul
adc
xchg
add
sub
ret
test
xor
push
mov
or
aas
jnp
es
ja
pushf
xchg
mov
int3
mov
or
or
sarl
flds
dec
add
add
sbb
lods
jecxz
les
repnz
xchg
inc
and
pop
add
inc
xchg
rcrl
movsl
add
test
repz
sbb
cli
ljmp
jl
imul
insl
push
jo
add
into
gs
mov
add
add
jbe
addr16
add
and
or
add
xchg
mov
add
aam
and
shll
jne
popa
add
push
jo
mov
lret
rolb
adc
fimuls
add
mov
add
pop
iret
cld
push
adc
movsb
dec
cli
dec
add
jg
mov
xor
add
jbe
sub
into
add
out
xchg
cmp
jnp
xchg
add
push
or
jl
push
shlb
mov
xor
pop
imul
jae
push
int
add
xor
add
dec
mov
clc
mov
or
movsl
push
jns
pop
mov
and
or
addr16
cld
stos
fs
xor
add
mov
add
mov
test
ja
cli
mov
pusha
aaa
insl
jl
addl
outsb
movb
xlat
mov
or
mov
jnp
adc
nop
sbb
addr16
pop
leave
cwtl
pop
sub
aad
jg
push
in
or
insl
and
mov
rcr
jb
addr16
lret
sub
incb
or
sub
test
push
aaa
sti
ds
mov
mov
add
in
xor
push
dec
loopne
add
sbb
sahf
das
fisttpll
push
mov
cld
xor
add
add
out
fsubrs
jecxz
mov
add
shlb
repz
jo
xor
jb
sbb
ds
loop
sub
mov
rcll
aas
add
movsl
int3
mov
in
jnp
test
sub
add
das
out
rcrl
enter
push
mov
lods
stc
add
icebp
inc
lea
incb
lret
popf
and
mov
inc
add
dec
or
add
lods
dec
in
push
sub
push
sub
jbe
mov
rorb
mov
add
push
xchg
pop
jnp
stos
cmp
not
jp
mov
dec
add
ss
in
add
mov
cld
add
dec
cli
inc
aas
cltd
mov
mov
ret
mov
or
add
ret
pop
das
sbb
mov
and
jle
scas
ljmp
in
cmp
outsl
cs
clc
xor
arpl
adc
rorb
int3
aaa
test
xchg
ret
insl
dec
sarl
or
mov
imul
aad
cmp
add
jbe
sub
jae
push
cmc
push
lods
jle
push
pusha
lods
xchg
fwait
outsb
insl
mov
xchg
add
cltd
cld
shr
pop
dec
sbb
add
sub
add
mov
pop
mov
ret
adc
lcall
add
verr
xchg
and
dec
test
xor
push
push
fcomps
imul
mov
and
push
andb
das
stos
daa
push
data16
imul
bound
or
popf
cltd
je
aas
movsb
ret
lcall
fisttpll
push
stc
lret
cld
xchg
cwtl
gs
movsl
dec
xchg
cmc
mov
xchg
scas
sub
xchg
es
mov
add
icebp
xlat
cmp
divl
nop
outsb
jle
xorl
fnstsw
ss
outsb
popa
sbb
adc
pop
sahf
testl
dec
cld
fstp
mov
adc
or
roll
push
xchg
mov
mov
sbb
and
or
add
mov
cmpb
inc
jl
push
xor
dec
in
cltd
call
ret
add
and
xorl
pop
add
mov
add
inc
jo
jmp
mov
sti
aas
jl
lcall
loope
xor
testb
std
jne
adc
aam
fidivs
fcoms
mov
jns
add
ret
lods
sbb
and
repz
add
nop
mov
lods
in
mov
cmp
xchg
pop
lds
jb
adc
mov
aad
jne
aaa
test
or
insb
rolb
add
in
jb
xchg
add
push
incb
push
dec
mov
ret
sarb
cmp
xor
dec
xor
pop
pextrw
daa
shrl
or
lret
loope
add
mov
sub
pop
add
clc
test
or
fwait
test
out
xchg
push
jb
add
and
pcmpeqd
jnp
repnz
insl
jmp
cmc
sahf
cld
addr16
lret
pop
xor
add
jmp
je
add
push
sub
and
push
cltd
pop
adc
adc
rcr
mov
mov
cwtl
insb
mov
inc
enter
add
inc
add
sbb
cmpsl
add
das
fsubr
mov
push
out
pop
mov
jnp
add
insl
mov
pushf
jb
push
and
aam
or
fldl
mov
ja
adc
xchg
loopne
add
outsb
mov
scas
xor
sub
add
rorb
inc
cwtl
inc
mov
add
sahf
mov
fldenv
jge
add
jecxz
into
mov
jp
call
jnp
mov
movb
jmpw
das
adc
gs
leave
dec
call
mov
shll
sub
push
sub
jae
inc
add
push
adc
inc
gs
lcall
jne
add
out
add
cmc
mov
rorb
sbb
jl
inc
loop
jbe
sbb
clc
inc
add
add
mov
push
jns
aaa
clc
sub
xchg
bound
sub
adc
dec
push
and
cmp
lret
stos
add
ss
xor
cmc
xor
jns
repz
shll
pop
outsb
or
mov
xchg
sub
leave
cld
add
adc
inc
add
add
xchg
repnz
cwtl
pop
lahf
adc
cmpsl
push
mov
jnp
sbb
add
addr16
inc
jge
aas
sbb
sub
iret
xchg
add
cmc
mov
sub
jnp
lret
push
cmpsl
lea
popf
jbe
xchg
test
sub
mov
movsl
imul
cltd
mov
sbbl
add
nopl
mov
rolb
push
decb
xor
pop
cld
mov
inc
xchg
xor
enter
repnz
ret
push
mov
mov
xchg
xchg
cmovns
adc
add
mov
add
addr16
fiaddl
push
sub
push
out
lods
and
dec
fmul
push
inc
test
and
mov
add
orl
cld
mov
mov
add
jnp
outsl
xlat
stos
out
jb
add
das
inc
fildll
mov
mov
push
jmp
push
jle
or
push
adc
push
mov
add
repz
add
mov
xchg
xchg
cld
jbe
sub
clc
incl
pop
mov
or
test
ljmp
jns
nop
fsubl
mov
add
or
je
adc
mov
inc
inc
loop
mov
cli
cmp
mov
add
and
add
enter
test
orl
adc
mov
in
add
call
fnstcw
lahf
sbb
pushf
xor
and
pop
adc
call
cmpsb
sti
incb
lds
inc
insb
sub
push
cmc
rcrl
jo
inc
jl
test
pop
lock
or
jns
sub
xchg
xor
lcall
pusha
add
xchg
mov
dec
mov
and
mov
adc
and
xchg
add
rcrb
cmpsl
pop
jbe
je
jge
and
xor
movl
or
add
mov
out
jl
mov
outsl
inc
sub
js
jecxz
push
adc
jnp
dec
rol
call
pop
jp
sbb
lcall
nop
movsl
rcrl
jno
mov
push
faddl
and
mov
pop
sub
mov
xorl
cwtl
add
cld
pop
out
or
loopne
mov
inc
pusha
pop
or
imul
xchg
ja
pusha
add
into
out
mov
add
or
repz
or
jnp
dec
xchg
or
cmp
mov
push
cli
shl
inc
adc
stc
add
out
icebp
add
fwait
or
ljmp
hlt
in
outsb
lods
loop
sbb
sub
dec
int
dec
insl
pop
xchg
cltd
add
sub
fwait
je
mov
add
dec
xor
fs
in
insl
push
pop
leave
pop
sub
mov
imul
aas
add
fwait
xchg
aad
adc
xchg
sub
shll
enter
push
add
loope
add
mov
push
push
or
pop
push
mov
dec
mov
cmp
xor
pop
and
xchg
scas
adc
fwait
add
mov
jnp
cmp
lds
mov
mov
add
pop
js
aad
arpl
das
fmul
add
out
mov
sub
pop
fsubp
add
out
dec
xchg
scas
jge
in
inc
xor
adc
xor
jns
and
sbb
inc
add
mov
ss
and
stos
imul
sti
in
mov
push
cld
jnp
rclb
rolb
popa
or
add
lcall
sti
xor
shll
int3
mov
and
xchg
add
shlb
push
clc
xor
addr16
or
dec
mov
lret
jnp
push
clc
xor
or
add
and
std
add
mov
loop
push
int
imul
popa
sub
adc
testb
push
add
outsb
mov
and
push
xchg
add
popa
pop
cmpsb
out
stos
dec
add
call
add
in
inc
ss
add
adcl
in
mov
jb
mov
mov
mov
pop
jnp
xor
sarl
add
or
fnsave
push
movsl
or
push
cmp
mov
sbb
add
dec
and
jne
mov
rolb
or
pusha
adc
cmp
ja
std
in
aad
loope
sbb
mov
cmp
cs
std
nop
das
sar
add
stos
dec
add
xor
cmp
xor
jnp
and
mov
pop
fnsave
loop
scas
je
pusha
pop
arpl
push
lcall
cmp
bnd
add
sbb
fstps
outsb
test
rolb
add
xlat
mov
sub
sti
push
sub
adc
jns
aaa
std
das
xchg
add
arpl
adc
imul
cwtl
jbe
notb
icebp
mov
stos
cltd
sbb
or
loope
dec
mov
push
iret
imul
mov
sub
jnp
push
sti
pop
ret
push
xor
sub
sbb
xor
jns
sahf
mov
dec
xchg
rcll
jns
clc
inc
stos
add
sbb
int3
pop
addr16
in
add
sbb
xor
and
call
jge
push
pusha
mov
jmp
lods
mov
sub
add
jae
mov
adc
adcb
inc
decb
inc
cmp
jl
add
insl
stc
cli
inc
push
pop
jle
lea
outsb
push
push
and
add
clc
repz
jns
andl
adc
mov
lea
les
sub
popf
data16
cvtps2pd
loope
insb
adc
rorl
inc
add
ds
fiadds
aaa
and
insl
jge
cld
pop
testl
out
xor
fimuls
rcll
mov
mov
jno
cs
jo
sbb
mov
fildl
lahf
mov
mov
cmpsb
je
or
add
rol
dec
push
cmp
cli
cmp
jge
sbb
movb
stc
pop
hlt
xor
xor
repz
test
int
cmc
call
inc
dec
shld
scas
push
cmpsb
andb
sbb
daa
ret
icebp
jg
adc
iret
jge
fsubrp
xchg
mov
add
jbe
xchg
out
and
jp
inc
mov
push
cmp
pop
adc
cmp
icebp
xchg
mov
add
in
push
add
xor
add
insl
push
add
sbb
mov
mov
push
sbb
lea
mov
popf
insl
or
lods
enter
sahf
push
add
cmp
pop
test
pop
sub
rcr
and
mov
xchg
insb
lock
xor
pop
dec
pcmpgtd
outsl
es
gs
xlat
or
in
and
push
adc
add
jecxz
out
incl
test
aaa
sbb
and
cmp
or
popa
stos
mov
inc
lds
add
les
jb
mov
add
movsl
mov
and
add
sub
cmp
add
or
ds
jnp
xchg
add
jg
cs
jns
adc
adc
out
jl
sbb
dec
mov
imul
xor
lret
lahf
sbb
test
cltd
roll
fs
add
xor
add
int3
icebp
in
jnp
push
in
inc
mov
outsl
add
pop
xchg
in
test
aas
sub
adc
in
add
negb
cld
sub
sub
xlat
or
nop
mov
sbb
add
out
es
mov
add
jne
add
add
mov
inc
jae
cmp
push
push
pop
nop
xchg
popa
pop
jb
or
add
dec
call
pop
or
pop
push
data16
push
add
std
call
jl
and
xchg
lock
scas
in
inc
movsl
push
jns
rolb
jnp
jns
dec
xor
xor
movsb
mov
stos
or
imul
gs
push
adc
test
sti
cmp
add
jl
popa
popf
hlt
scas
cmp
cs
out
popf
sbb
mov
sub
addr16
push
jne
cwtl
pop
xchg
clc
test
dec
add
iret
fldcw
jo
sarl
mov
pop
add
std
pop
mov
aam
mov
sub
add
hlt
ret
cld
pop
mov
push
or
test
pushf
aaa
jo
out
mov
test
xor
adcl
shll
cs
jo
out
dec
adc
idiv
sbb
pushf
sahf
jno
pushf
je
add
add
push
xchg
sub
testb
fistpl
lods
loopne
add
sub
jns
jo
add
pop
repnz
mov
add
in
test
lea
dec
stc
push
or
aam
cmp
jnp
ss
or
or
xorl
test
ds
lods
inc
add
scas
fldenv
push
and
adc
jnp
add
mov
pop
mov
push
jno
gs
mov
pop
dec
lret
popf
divl
aas
add
test
add
imul
add
mov
outsb
add
add
test
add
aad
and
push
leave
daa
cmp
mov
xchg
stos
sbb
mov
test
stos
arpl
pop
cmpsb
mov
lret
mov
enter
jnp
adc
arpl
add
sub
popl
pop
loope
mov
jno
and
mov
mov
test
mov
sub
adc
cmp
insb
inc
mov
hlt
aam
dec
pop
pop
add
in
and
push
cmpsb
outsb
aaa
push
mov
roll
jecxz
cltd
sti
in
out
sub
pop
push
lret
add
sbb
add
bnd
and
sti
and
fdivl
lea
mov
pop
jmp
in
add
fs
jo
scas
push
sbb
ffree
jl
je
dec
test
pop
sub
iret
inc
jmp
or
jnp
stos
test
cmp
fstpl
inc
add
mov
xchg
mov
sbb
es
imul
testl
push
ljmp
push
aaa
outsb
cmpsl
insb
sahf
jnp
dec
mov
mov
roll
mov
shlb
mov
sbb
loop
push
mov
test
jnp
cld
pop
aad
dec
push
xor
ljmp
cmp
out
xor
add
mov
pop
cmc
clc
pop
push
movb
mov
dec
fnsave
jl
lcall
dec
adc
add
pushf
imul
add
lock
mov
or
add
pop
mov
movsl
clc
nop
je,pn
push
loopne
mov
add
subl
pop
cmpsb
adc
fimull
fwait
adc
repz
insb
cmpsl
push
mov
jge
mov
sbb
add
jns
pop
or
inc
leave
add
pop
xor
add
ljmp
jnp
mov
or
lcall
xorl
cmp
test
add
and
loope
jns
rclb
cmc
mov
jne
loopne
sbb
sub
sti
test
lret
push
lock
push
cmp
test
stos
xor
xor
imul
je
cs
pop
inc
add
sahf
push
mov
stos
add
adc
jne
push
push
jnp
arpl
loopne
or
add
jl
mov
cmp
gs
mov
add
adc
cwtl
dec
pop
jle
aam
pop
inc
cmp
add
or
dec
push
call
or
cs
jecxz
add
gs
add
xchg
lods
push
jnp
fwait
mov
and
lea
fiadds
dec
jle
mov
jne
sarl
cli
test
xchg
inc
sbb
adc
mov
sbb
push
inc
int3
and
push
adc
add
pop
stos
orb
std
mov
loope
xchg
movsb
mov
stos
out
jae
iret
xchg
outsb
or
nop
cmc
xor
leave
add
or
cmp
pop
jl
imul
or
jae
out
or
cmc
cmp
xchg
inc
ret
and
adc
clc
dec
fidivs
inc
xor
push
dec
xor
push
out
sbb
pusha
jp
icebp
cmp
addr16
mov
pop
aam
scas
jne
add
add
cli
movsb
add
xchg
xor
mov
fstl
mov
out
sarb
aam
popa
mov
lcall
jbe
into
sub
movsb
push
pop
add
mov
cwtl
sub
push
std
fiadds
arpl
addl
rorl
pop
mov
stc
cmc
sbb
int3
out
sbb
in
cmp
pop
push
sahf
sub
xchg
mov
out
push
repnz
add
add
mov
sbb
pop
pushf
or
jns
adc
add
inc
xchg
jl
push
and
jge
adc
add
sbb
cmpsb
lahf
push
add
gs
add
push
outsl
xchg
fidivs
xlat
jl
jl
in
cli
in
adc
fs
sbb
add
jbe
push
cmpb
sub
sbb
mov
rcrl
sbb
add
jbe
push
insb
mov
inc
mov
add
push
push
cmp
fs
cmc
mov
jle
xor
int
and
dec
cld
fwait
pop
inc
shrb
mov
push
int3
add
sbb
or
dec
dec
lock
pop
je
stc
cld
movsb
icebp
ljmp
aad
pop
mov
add
sbb
sbb
adc
push
pop
lock
cmp
adc
ljmp
jb
and
inc
or
sub
decl
mov
inc
adc
mov
lret
loopne
add
add
cmp
fnstenv
dec
popf
sbb
test
and
js,pn
add
fwait
aad
inc
push
mov
add
dec
mov
jne
jnp
pushf
sbb
jl
mov
mov
insl
loop
add
lret
lds
scas
aam
lods
push
js
sbb
popf
add
ja
xchg
add
mov
mov
mov
push
out
adc
add
ret
pop
xchg
aaa
call
add
scas
inc
mov
push
cmp
mov
lcall
sub
pop
out
add
add
sbb
movsb
and
rcrl
xor
mov
and
mov
fbld
fwait
test
xorb
insl
imul
sti
stos
mov
std
movsb
roll
js
out
in
push
inc
iret
ljmp
std
jg
add
gs
repz
add
stos
mov
into
xor
cmp
sub
aad
add
lods
movsb
aaa
xchg
cmp
scas
push
shlb
sbb
pop
jns
jl
mov
fsubrl
or
push
andl
int
adc
mov
andb
imul
stos
leave
inc
add
lret
add
mov
adc
xchg
ret
jnp
add
mov
xchg
xor
imul
or
enter
mov
pusha
or
movl
outsb
xor
mov
pop
xlat
in
inc
dec
pop
push
add
jle
ret
push
add
sub
add
inc
add
sub
outsl
test
mov
ds
adcl
dec
out
cwtl
adc
adc
sbb
dec
pushl
add
insl
test
fbstp
add
mov
gs
sbb
and
push
int
movsb
lahf
mov
cs
dec
add
adc
mov
sti
xchg
test
mov
loopne
sbb
or
push
add
fstps
scas
mov
sbb
loop
xor
scas
lock
pop
add
and
popf
pop
jecxz
add
mov
lret
or
jnp
or
cmp
pop
scas
mov
idivb
add
cmp
mov
fistps
clc
adc
shufps
nop
mov
add
cmp
add
shrb
pop
add
lcall
cld
clc
mov
mov
sti
add
lods
nop
dec
mov
fldcw
or
dec
pop
xlat
or
and
lret
cltd
icebp
mov
dec
mov
lods
jle
sti
pop
ja
or
or
les
sbb
sub
mov
adc
shrb
and
sub
cmpsb
sub
and
fldl
fistl
push
sbb
pop
jb
xor
or
imulb
mov
sbb
and
fnstsw
out
repnz
mov
enter
sub
sbb
add
mov
inc
mov
and
and
jnp
sub
out
and
enter
sbb
popf
mov
mov
xchg
mov
or
es
pop
fwait
jmp
xor
mov
popa
mov
gs
test
or
sub
push
mov
incl
out
jge
dec
mov
cli
mov
dec
out
sbb
fs
inc
enter
cli
mov
gs
jnp
xchg
push
sahf
add
in
mov
movsl
insb
loop
in
sub
add
cli
out
mov
add
fmull
adc
je
pop
push
das
cmc
test
xchg
lods
jl
aas
lea
or
dec
orl
enter
add
aas
push
adc
and
mov
push
xchg
xchg
jge
or
cld
lods
fcomps
pop
addr16
and
mov
bound
cmp
adc
sbb
jo
mov
imul
out
inc
xor
pushf
jns
stos
inc
negl
and
push
pop
pop
mov
adc
in
aaa
loop
mov
and
sbb
jmp
notl
gs
xlat
sub
and
negb
jp
sbb
ja
add
bound
add
cmp
lret
jp
pop
loop
je
mov
dec
xchg
lock
xor
add
outsl
push
cltd
pop
out
rcrl
cmp
ret
inc
cmp
xor
rolb
mov
addl
icebp
mov
dec
in
dec
inc
mov
dec
mov
push
or
add
cmovno
int3
add
add
xor
mov
jl
nop
fstps
jecxz
les
pop
or
sbb
sbb
inc
jno
sub
pop
mov
insb
push
out
add
add
cmp
inc
lds
rorb
xchg
fs
xchg
xchg
ds
add
cld
mov
fimull
inc
idiv
pushf
push
xor
sbb
add
and
mov
add
mov
stc
ret
shll
dec
dec
push
xor
add
xchg
sti
addb
gs
push
add
mov
int
clc
rcll
push
add
outsb
sarb
imul
jne
xlat
sbb
jnp
xor
add
add
sahf
repnz
inc
adc
add
jbe
popa
sbb
iret
add
dec
lock
mov
test
cmpsl
mov
add
cmpsb
das
in
xor
pop
aas
push
sub
bound
xor
int3
inc
dec
jno
push
xor
or
xchg
dec
insl
iret
aam
or
sbb
mov
inc
mov
jg
ss
add
jl
das
add
jecxz
sahf
adc
push
mov
push
jnp
and
add
ret
inc
addb
cmc
xor
add
test
jg
adc
and
cmp
jo
sti
xor
add
fnstenv
in
and
jg
pop
xorl
push
das
mov
jl
add
ds
aas
cmp
out
fadds
mov
xchg
int
xchg
or
ja
bound
mov
sbb
lret
push
aaa
inc
sub
xchg
sub
fnstenvs
popf
icebp
add
adc
push
outsb
sbb
add
mov
iret
adc
cmp
sbb
in
sub
ja
lret
call
mov
or
rclb
int3
iret
cmp
aaa
jnp
and
dec
xchg
add
popa
push
stos
sub
jne
sbb
lcall
mov
sbb
cmp
sahf
add
sarb
fdivrp
adc
xchg
scas
jp
jb
mov
aas
fcmovnu
xlat
fbld
cld
idiv
mov
or
repnz
add
or
cli
mov
cmp
sbb
and
std
push
jp
dec
jmp
jp
push
mov
mov
adc
daa
or
fldenv
or
add
stc
shlb
xchg
ljmp
lret
pushf
jb
push
hlt
mov
ljmp
push
add
add
dec
add
xchg
mov
stos
insl
xor
xchg
xchg
or
add
out
pop
jnp
mov
ret
sub
jo
mov
adc
outsl
push
add
pop
arpl
add
add
or
ret
cld
jmp
and
lds
adc
mov
test
mov
inc
pushf
rcrb
popa
test
sbb
out
jp
ftst
and
inc
and
sbb
sub
mov
jo
jnp
xchg
sub
xchg
and
mov
sbbl
lcall
cmp
xor
aas
out
add
test
add
adc
cltd
xchg
or
xchg
add
sub
add
cmp
adc
test
jb
sbb
add
scas
sub
xchg
fmull
add
in
loope
cmpsb
adc
add
test
clc
add
inc
cmp
sbb
jp
shr
push
push
add
pop
pusha
pop
add
orl
das
lret
push
and
dec
mov
adc
mov
dec
xchg
popf
cmpb
lret
sbb
or
adc
insb
add
repnz
popf
xor
cmpsw
push
adc
xor
call
dec
mov
out
or
mov
push
repz
ss
add
jns
mov
jp
rolb
add
hlt
add
mov
jg
mov
add
in
cmp
push
icebp
in
pop
mov
lahf
jl
inc
mov
andl
fucom
and
jmp
out
sahf
pop
das
jl
dec
jge
in
and
add
jb
das
add
sub
lods
fcoml
add
xor
xchg
add
movsl
adc
add
cltd
push
stos
icebp
lcall
pop
imul
mov
inc
and
test
xchg
add
xchg
add
aad
jmp
popa
add
faddl
adc
pop
push
lea
add
sbb
pop
stos
ret
add
repz
jge
sub
add
sbb
pop
pop
lods
cmp
pushf
jmp
and
btr
mov
in
or
xor
outsl
mov
and
cli
xor
sub
adc
mov
ss
add
inc
mov
or
cmpsb
xor
jne
or
fldl
lret
imul
mov
ljmp
loope
cld
or
xor
pop
mov
mov
ja
jl
adc
pop
dec
ljmp
sbb
rcrb
add
inc
mov
xor
and
rolb
sub
shlb
push
adc
mov
jle
into
or
inc
jae
jo
jg
loope
lahf
movb
fisttpll
mov
inc
mov
arpl
mov
mov
in
outsb
push
or
push
cmp
in
and
fs
lcall
daa
lret
xchg
aam
xor
jne
add
mov
mov
ror
sub
jp
xor
add
adc
jo
lret
sub
sbb
pop
add
sarb
fmull
push
add
ret
pusha
jecxz
das
xchg
sbb
cld
insb
pop
mov
and
pop
add
mov
sahf
in
pop
add
jnp
dec
push
cmp
scas
and
lock
fisubrs
repz
nop
mov
mov
add
cmp
subl
gs
mov
jmp
lea
cmc
pop
dec
jnp
push
pop
mov
loopne
mov
rcll
xorb
mov
jge
xor
into
sbb
cmp
bound
push
dec
sub
xchg
add
in
data16
and
add
push
in
add
fidivrl
cmpl
sub
movsb
aaa
add
push
std
call
out
js
adc
ds
lret
push
testl
pop
push
mov
cmc
std
sub
lds
push
dec
pop
mov
ljmp
jge
add
ficomps
push
out
mov
lods
sbb
mov
movsb
add
xor
movsl
loop
sbb
pushf
xor
in
add
aaa
sbb
test
and
outsb
cmp
rcll
mov
mov
xchg
int
pusha
xor
test
add
loopne
add
lret
cmp
lds
test
cld
ret
push
dec
xchg
xchg
inc
or
leave
add
mov
in
loope
movsl
lods
sbb
dec
das
xchg
insl
add
paddq
fstpl
cwtl
sub
iret
add
dec
and
inc
add
mov
test
fcompl
jecxz
mov
xchg
adc
shl
jle
mov
and
push
sar
imul
sbb
jmp
jns
jae
add
sti
sub
pushf
leave
notb
xor
mov
add
pop
mov
mov
insl
add
sbb
andb
push
rol
out
add
and
add
or
push
mov
cmp
and
cmpsb
lock
repz
sbb
adc
pop
xchg
adc
mov
insl
jns
sub
daa
lcall
stc
push
sub
repnz
sub
lock
add
pushf
les
scas
xchg
add
mov
sub
decb
pusha
cmpsl
mov
cmpsb
stc
loopne
dec
mov
sbb
push
addl
out
mov
xor
popf
push
pop
and
sbb
add
cltd
lods
adc
fld
xor
dec
add
jp
jge
cmpsl
insb
xchg
or
lods
jno
jecxz
inc
mov
pusha
cld
push
inc
push
lret
push
testb
mov
and
mov
movsl
add
mov
sbb
jnp
xor
mov
lea
add
push
out
mov
dec
mov
lds
jnp
adcb
bound
sub
les
cld
jo
push
shlb
add
inc
or
pop
xlat
pop
add
out
js
add
pop
push
add
adc
jecxz
mov
jno
mov
sub
ret
je
daa
or
sub
adc
mov
cmp
out
cmp
dec
cwtl
jae
rorl
loopne
mov
pop
rcl
mov
add
movb
mov
or
insl
adc
add
mov
rcrb
jns
dec
mov
and
mov
mov
cmc
shrb
fstl
out
push
movsb
xor
jp
int3
add
insb
cltd
sub
cli
fndisi(8087
jl
call
add
jle
pushl
imul
idivl
je
jmp
fistpl
enter
push
pop
add
push
shll
cmp
adc
xor
js
fwait
push
ljmp
incl
push
cmp
arpl
xor
push
xor
ss
sbb
in
dec
xchg
mull
push
or
jg
xchg
jle
out
fisubrl
pop
xor
scas
ss
pushf
and
mov
rolb
into
xchg
mov
iret
hlt
jnp
jp
sub
sub
dec
dec
xor
dec
cs
pop
int
dec
add
xor
fcmovnbe
add
test
ss
xor
mov
sbb
insb
mov
add
add
outsl
mov
jl
add
mov
add
test
bound
fwait
lahf
or
push
add
sti
into
jl
mov
xchg
paddsb
pop
scas
movsb
add
out
jl
sub
ss
dec
mov
jns
mov
lahf
lock
inc
seta
push
mov
imul
xchg
jecxz
scas
cs
btc
imul
add
in
or
xor
ret
jecxz
sbb
pop
jmp
mov
push
add
int
add
loopne
xor
repz
lods
sbbw
mov
sbb
add
sahf
dec
ja
sar
xorb
xchg
movsb
or
cli
add
mov
mov
xor
inc
inc
and
adc
cmpl
push
or
daa
pop
fdivp
sub
push
cltd
inc
scas
mov
add
sub
add
stc
cmp
loope
jae
mov
invd
loopne
pop
jecxz
cltd
jo
insl
pop
sbb
add
add
cmp
ljmp
cmp
or
not
mov
ja
add
pop
inc
add
and
pop
add
and
jno
sub
test
jle
mov
movsl
mov
fucom
xchg
pop
xor
stos
rorb
inc
pop
jl
xor
ja
dec
push
sbb
add
sub
mov
pop
imul
sti
jnp
cli
cmp
xchg
add
jb
shlb
mov
mov
iret
mov
cld
adc
cmp
pop
cs
repz
sub
and
icebp
cmpsb
mov
or
std
stos
das
mov
jno
js
push
dec
repz
xorl
jmp
dec
cli
add
jb
loopne
cmp
mov
hlt
jne
mov
adc
addr16
lods
add
insb
clc
lock
fs
scas
mov
add
jbe
or
dec
add
jge
test
int
outsb
mov
sbb
pop
lahf
mov
adc
jbe
inc
popf
xchg
xor
mov
int3
inc
mov
adc
cmpb
stos
jl
lds
xchg
or
or
inc
lods
jne
adc
xchg
push
pop
ffreep
out
cvtpi2ps
out
push
xor
rolb
jae
in
scas
mov
and
aad
lret
jbe
sub
sub
add
mov
xorb
out
repnz
add
aas
std
fisttpl
in
add
hlt
mov
sbb
add
addr16
mov
push
icebp
lds
hlt
or
and
add
movsb
xorb
cli
idiv
push
out
cmp
pop
or
test
mov
and
jle
cmc
popf
push
xchg
jns
stc
sti
mov
or
add
jecxz
push
jg
push
movsl
add
sahf
fldcw
mov
dec
add
call
jne
jl
jnp
lret
mov
mov
roll
or
xor
jmp
mov
adc
or
testb
inc
loop
xchg
jo
push
pop
cwtl
ss
pop
ret
fwait
xor
out
hlt
je
cli
fstl
imul
add
pop
xor
mov
add
mov
xlat
or
popl
jno
xor
cld
cs
dec
ret
pop
and
sub
or
mov
add
es
push
add
mov
shll
mov
cmp
and
scas
aad
push
cmp
mov
and
insl
add
iret
scas
daa
add
neg
add
mov
xchg
xchg
and
adc
inc
sbb
call
mov
cld
mov
pop
aas
icebp
fnstcw
fidivs
sub
jb
add
mov
sub
jns
sbb
inc
adcl
mov
dec
adc
xchg
mov
pop
fdecstp
inc
arpl
bnd
iret
adc
mov
jg
adc
add
stc
sahf
add
inc
mov
mov
sub
mov
loop
inc
mov
adc
lds
or
dec
mov
cmp
cmp
xchg
jae
jnp
dec
push
stos
add
lock
fwait
inc
xor
mov
test
inc
add
pop
icebp
popa
adc
dec
or
add
mov
jnp
mov
pop
bnd
mov
lds
mov
inc
pop
xor
and
das
push
sub
add
add
pop
inc
add
pop
ret
add
cli
pop
mov
nop
and
call
test
fmul
cltd
add
mov
sub
add
and
cmp
int3
cld
popa
adc
andl
mov
mov
stos
xchg
mov
mov
push
xchg
insb
mov
aaa
pop
pop
movsl
push
out
add
push
stos
hlt
cmp
add
fbld
add
clc
sub
add
pop
cld
je
sbb
roll
lcall
pop
mov
dec
mov
bound
cmp
push
pop
mov
or
scas
cli
fwait
adc
and
jbe
fs
cs
mov
xchg
add
std
ljmp
mov
adc
jbe
scas
cld
les
aaa
jo
jp
add
add
stos
pusha
pop
xchg
jns
fwait
add
sbb
xchg
add
jl
enter
ss
pusha
dec
push
lds
lcall
rcrl
cmp
ja
push
and
mov
das
scas
pop
sbb
cmc
adc
ss
jnp
xlat
fnstenv
lahf
cli
jno
mov
or
outsl
adc
adc
xchg
imul
mov
adc
lahf
roll
lock
pop
repnz
es
add
sbb
adc
leave
adcl
cmpb
ret
in
push
jecxz
repz
sub
icebp
jle
pop
mov
sbb
pop
in
push
andb
mov
push
dec
jae
add
cmp
adc
add
rol
cltd
jl
sub
fwait
pop
jle
inc
add
pop
ljmp
loope
push
or
jb
cmpl
rcrb
sub
add
cwtl
pop
icebp
outsl
sbb
insl
add
insb
mov
scas
arpl
xor
pop
or
xor
xchg
faddl
call
or
scas
jae
mov
sub
push
mov
xchg
dec
adc
mov
push
or
paddsw
lcall
cli
cmp
pop
pop
pop
stc
cmp
test
call
add
jns
jno
xchg
mov
pop
add
arpl
aaa
add
fisubs
add
enter
xor
sub
push
lds
insl
popa
add
pop
jne
cltd
cmp
test
jae
mov
lods
cwtl
lods
jp
andnps
mov
sub
add
imul
pop
inc
jnp
out
xchg
mov
xor
push
cmc
cmpl
out
and
add
mov
lret
cld
cwtl
outsb
aam
add
add
cltd
inc
shrl
xchg
add
adc
aaa
or
sbb
add
shlb
xor
mov
add
inc
in
int3
out
sbb
jl
fsubs
fisttps
mov
add
lds
inc
lret
std
sub
cmp
add
sbb
add
dec
cmp
and
add
outsl
mov
faddl
lret
mov
fstps
xor
add
stos
sbb
mov
add
jae
pop
sbb
mov
cmp
js
xchg
jp
add
leave
pop
mov
xchg
loopne
scas
mov
sbb
mov
mov
add
push
xor
ljmp
scas
daa
and
mov
imul
lret
mov
adcl
add
mov
jmp
sbb
push
pop
inc
jge
jbe
lds
cld
cltd
ljmp
loop
sbb
mov
gs
mov
push
adc
push
ret
jne
mov
cli
jbe
mov
mov
inc
and
jae
cli
adc
add
mov
push
mov
jnp
add
push
jge
add
mov
insl
adc
or
imul
jge
jecxz
sbb
sarb
sub
movsl
std
xchg
jno
pop
add
jl
and
mov
in
adc
flds
enter
test
push
lods
std
inc
inc
test
lea
fiaddl
movsb
pop
xchg
xchg
mov
push
jno
jns
pop
jge
and
dec
jns
repz
gs
in
or
mov
push
mov
add
je
popl
lea
js
add
inc
or
cmp
packuswb
repnz
sbb
sar
jg
pop
inc
add
pop
out
out
mov
aam
ja
mov
add
adcb
push
lahf
xchg
jl
jp
cltd
mov
jl
cmp
adc
stc
add
sahf
push
cli
sub
xor
out
push
int3
jnp
jl
stc
cmp
scas
dec
push
push
rorb
lds
mov
add
repz
repnz
lcall
lds
jl
loop
add
aas
or
data16
fistpll
jmp
lcall
mov
sarl
sbb
add
push
hlt
mov
call
xor
mov
enter
mov
or
fwait
jle
and
jl
dec
xor
sbbb
add
dec
xor
jecxz
add
mov
fdivs
pop
and
dec
mov
mov
add
sbb
leave
pop
add
out
and
shl
pusha
add
nop
dec
out
loope
icebp
add
leave
out
and
add
inc
fsubs
mov
sbb
add
push
pop
cmp
jecxz
shlb
xor
add
mov
stc
inc
fiaddl
mov
shrl
sbbl
cmp
sti
mov
push
push
clc
or
or
and
jl
sub
sbb
inc
sbb
mov
pop
cmc
push
jo
jno
in
andl
cld
fptan
leave
jp
add
mov
stos
mov
pop
mov
fwait
addr16
mov
into
push
out
or
repnz
mov
lods
add
shrl
dec
div
add
adcl
jl
jnp
rclb
adc
ret
lods
mov
xchg
or
xchg
nop
cltd
xor
les
addr16
lcall
dec
fstp
testb
cmpb
xlat
mov
pop
mov
fildl
add
xor
sbb
sbb
pushl
int3
sub
jae
mov
mov
fldcw
enter
inc
push
insl
sub
out
jae
ret
insb
mov
gs
shll
mov
iret
fdivrp
lods
hlt
sub
sbb
fisubl
lock
xchg
add
add
ja
cmpl
lods
mov
mov
add
or
jecxz
adc
add
lret
push
add
xor
ss
es
daa
pop
cld
subb
test
jl
jne
test
cwtl
or
in
jae
das
cli
cmp
mov
sahf
lods
ds
xchg
sbb
sbb
and
movsl
and
cs
cli
add
cwtl
cmpsb
xor
jmp
ja
xchg
incb
loopne
mov
scas
cs
mov
and
mov
iret
mov
lcall
inc
jb
cmp
jl
int3
enter
push
gs
add
pop
movsl
roll
cmp
mov
clc
adc
add
enter
mov
mov
push
and
cmpsb
mov
jecxz
push
xor
insb
fwait
jne
dec
jle
pop
adc
arpl
rol
repz
pop
lcall
xchg
jl
lods
lock
sub
add
jno
fstpl
ret
scas
jl
add
stos
std
add
add
and
pop
mov
lret
lods
inc
cmpsl
cmp
loop
scas
xor
pusha
add
daa
stos
jge
cmp
add
mov
jnp
aam
or
dec
je
or
cmc
dec
es
or
jo
add
xchg
sbb
int
ret
mov
testl
inc
mov
fnstsw
rolb
dec
inc
and
jl
mov
test
pusha
sbb
std
scas
sti
jne
mov
insl
lock
into
ds
stc
xor
in
in
push
jae
lret
dec
or
clc
sbbb
xorl
in
xchg
jno
add
and
inc
pop
adc
dec
jnp
push
sti
lcall
jl
lret
std
cltd
jbe
pop
outsb
sbb
and
inc
cmc
movsl
inc
and
mov
inc
rorb
outsl
fnsave
imul
lea
add
loop
jno
sbb
pop
inc
dec
hlt
or
testb
or
pop
js
xor
add
test
or
add
lods
pop
mov
mov
insb
xchg
sti
mov
add
mov
scas
test
jg
ds
pusha
cmp
inc
mov
add
mov
aaa
add
leave
stc
dec
mov
add
stos
push
sti
jle
sub
add
testb
add
stos
pop
imul
movb
xchg
cli
pusha
jno
lea
mov
hlt
push
rcrl
xor
mov
jns
insb
mov
jg
dec
inc
mov
nop
std
dec
fidivrl
lea
and
lret
adc
add
out
sub
mov
outsl
pushf
add
insb
in
pusha
lds
push
cs
xchg
dec
mov
mov
mov
sub
pop
loop
pusha
add
das
sbb
jbe
jns
cmp
scas
add
push
sub
xor
sahf
sbb
sbb
mov
jnp
mov
shlb
jl
and
das
sub
or
lahf
insl
add
mov
jmp
iret
shlb
and
roll
jl
xor
mov
pop
add
pop
adc
loopne
stc
cmp
push
mov
push
sub
pushf
roll
push
lods
cmp
std
lods
mov
iret
pop
xor
inc
sbb
xchg
mov
les
dec
add
mov
outsl
cs
or
outsb
stc
lods
insb
lea
jno
push
add
es
inc
iret
imull
cmp
jo
sti
out
cmp
jne
icebp
insl
in
xor
jp
sbb
stos
add
ja
xchg
scas
xor
mov
lock
sarb
sub
sti
xchg
jmp
dec
and
add
arpl
and
das
or
jle
lret
movsb
leave
es
pop
and
adc
push
lahf
and
pop
push
push
cli
adc
sbb
and
cmp
cmc
jg
xor
pop
mov
test
popl
pand
insb
jne
imul
stc
xor
cmc
add
neg
fwait
jl
int3
stos
lret
push
xor
imul
jl
add
mov
dec
mov
ficomps
cmp
stc
test
push
cmc
adc
jl
leave
mov
pop
fisttpll
sti
movsb
mov
jp
sbb
add
inc
jnp
xor
dec
stc
jae
lret
push
xchg
add
xlat
push
in
xchg
and
push
xor
jne
daa
jmp
cmp
test
mov
cld
mov
xchg
insb
adc
xchg
inc
sub
sbb
dec
iret
push
fstps
mov
cli
sbb
jle
add
movsl
test
xor
mov
dec
movzbl
cmc
outsb
nop
movsl
sbb
or
adc
add
push
pop
add
adc
mov
mov
inc
pop
fsincos
outsl
clc
ret
or
jl
xchg
out
mov
adc
mov
sub
rcll
mov
xchg
cmp
and
add
test
cmp
inc
sub
mov
mov
lea
das
inc
add
sbb
pop
data16
jge
or
jecxz
incl
jne
sub
es
test
jnp
test
xor
adc
iret
cmc
xchg
inc
fistps
push
or
mov
add
loop
aaa
add
lcall
aad
sub
xlat
addb
and
in
pop
jns
sbb
aad
xchg
dec
imul
sub
xchg
cmp
mov
int
hlt
mov
add
inc
and
mov
xchg
lods
dec
jne
std
ja
cmp
ret
xor
add
add
into
stos
add
pop
adc
mov
jle
dec
add
adc
mov
sub
xchg
add
push
shrb
lods
add
mulb
mov
ret
cld
xchg
push
in
jecxz
or
and
and
add
push
cmpsb
movsb
add
jne
push
or
inc
sub
xor
add
xchg
and
mov
dec
sbb
leave
add
scas
cmp
scas
lods
test
pop
out
sqrtps
add
mov
incl
push
jae
and
sbb
mov
mov
mov
nop
cmpsb
test
inc
and
pop
repnz
push
cltd
sti
lods
or
lods
inc
ret
mov
decb
or
pusha
aaa
mov
sub
push
scas
or
add
xchg
xor
add
add
mov
jge
jle
add
push
dec
test
aas
add
lea
mov
sub
sub
enter
push
int3
pop
or
lds
push
adc
lods
subl
sbb
out
xor
inc
inc
je
add
jg
dec
mov
mov
push
adc
mov
rcrb
test
jnp
loope
test
testb
inc
inc
cld
in
fs
loop
pop
push
out
enter
subb
mov
pop
add
cld
add
jnp
pop
aas
jp
and
cmp
loopne
dec
pop
ss
test
sbb
int3
inc
add
ds
cmp
and
add
sahf
xor
pop
imull
sbb
pop
cmp
into
or
dec
xlat
and
mov
inc
mov
or
mov
jae
add
imul
mov
lods
sub
cmp
pop
daa
lcall
test
adc
ret
lds
add
mov
iret
fbld
add
test
mov
int3
aam
sbb
add
daa
jne
dec
ret
mov
sbb
mov
add
lds
or
add
scas
aaa
add
sahf
test
stos
adc
pop
inc
dec
push
add
sti
sbb
pop
subl
sbb
aaa
jo
sub
push
enter
push
and
add
scas
in
push
lret
ss
xchg
or
adc
arpl
cltd
aam
or
add
jae
cmpsl
in
mov
pop
cld
aas
leave
repnz
mov
mov
scas
jg
fwait
and
jl
fxch
in
ss
add
mov
popa
add
shlb
cld
dec
roll
add
int3
jle
add
inc
wrmsr
sti
mov
or
jg
inc
xor
std
lock
fiadds
loop
insb
add
jl
enter
fldln2
dec
mov
sub
imul
cld
sarb
xorb
ror
or
push
xor
into
sbb
cmp
lods
imul
mov
add
adc
shl
addr16
jnp
adc
inc
cmp
dec
jmp
and
aad
cmp
js
inc
add
sbb
add
movb
decb
and
dec
add
bound
pop
cmp
test
cmp
inc
and
aam
rorl
and
imul
movsb
pop
lods
and
pusha
inc
lock
vmread
add
lds
cld
add
mov
inc
add
cltd
rolb
mov
inc
fstpl
movsb
push
inc
lock
inc
mov
jae
add
aas
add
inc
xlat
iret
or
fucomip
lods
jle
sbb
jge
insl
cld
sbb
shlb
and
jp
outsb
aam
mov
cmp
xor
repnz
out
add
lret
cmp
cmp
push
add
fwait
xchg
outsl
cmp
dec
repnz
into
lock
add
pusha
popa
add
imul
sub
xchg
outsb
add
jo
cs
popa
sbb
mov
adc
ljmp
mov
lret
add
out
mov
cmp
repz
add
jnp
bound
add
xor
add
push
adc
cmp
add
inc
das
pop
add
in
test
xor
es
icebp
scas
mov
mov
jb
mov
daa
add
imul
jl
push
sub
in
std
push
add
push
ficomps
sub
add
ljmp
sahf
sbb
add
addr16
inc
adc
or
in
fldl
hlt
push
sub
je
xor
or
push
mov
add
in
lret
cltd
adc
jg
das
jge
pop
lahf
js
sub
inc
add
shrl
rclb
cs
xor
test
test
jns
pop
jp
adc
lods
cmp
in
cli
xlat
ds
add
inc
insb
mov
mov
imul
ret
jb
stos
test
or
and
mul
dec
xor
mov
inc
imul
cmp
jae
xor
pop
inc
in
add
and
xchg
iret
mov
mov
and
mov
push
or
xchg
les
push
aad
jne
mov
dec
or
sbb
addr16
jl
push
adc
sbb
inc
xchg
add
push
loope
xor
hlt
es
sti
stc
xchg
xchg
add
daa
xchg
inc
ja
mov
mov
pop
mov
and
imul
adc
mov
movsb
rorl
xor
mov
jbe
sahf
pop
pop
lds
adc
int
lret
dec
xor
fnstcw
sar
push
pop
test
jbe
int
ficoml
xchg
cmc
test
add
sbb
fiadds
scas
out
in
les
outsb
cmp
adc
jp
arpl
mov
mov
ss
add
push
pop
pop
or
sbb
bound
sahf
mov
add
pop
in
add
xchg
stc
inc
scas
xor
jnp
movb
nopl
fisttps
out
mov
lret
mov
and
cmpsl
leave
cld
test
idivl
xor
jl
std
imul
inc
aas
or
cs
adc
rcrb
scas
pushf
ficomps
xchg
sub
inc
mov
xchg
add
call
push
shrl
jb
pusha
sub
clc
and
lock
xor
push
add
adcb
scas
add
mull
inc
push
hlt
pop
sarl
adc
loope
add
add
mov
sbb
or
cmpsl
pop
int3
xor
sub
cmpsb
pusha
add
mov
popf
mov
fcompl
hlt
jp
dec
dec
std
jmp
stc
mov
cwtl
lods
sti
cld
call
lods
jl
fnsave
add
xchg
mov
mov
loope
fs
movsl
scas
subl
aad
dec
mov
in
mov
pop
adc
cmp
lahf
jns
movsl
sbb
adc
jnp
ret
mov
lods
jle
outsl
add
sub
test
mov
adc
add
dec
lock
shll
mov
push
add
pop
fwait
jno
dec
push
xchg
mov
cmp
pop
ss
insl
test
xor
cmp
sbb
inc
and
add
dec
jae
pusha
push
imul
aad
mov
xchg
mov
jnp
lret
pushf
push
popa
test
jmp
in
mov
xchg
testb
dec
mov
pop
test
pop
inc
mov
or
or
mov
dec
das
add
sbb
dec
add
cs
inc
and
lods
adc
xchg
mov
sub
mov
add
add
xor
dec
xorl
ret
jl
xchg
sbb
add
mov
cwtl
add
adc
push
sbb
imul
ja
cmp
xor
push
or
sti
fwait
push
sub
add
les
push
jo
add
je
or
fnsetpm(287
rclb
ja
clc
mov
ret
loope
pop
shr
mov
add
cmpsb
and
dec
lock
dec
jns
xchg
dec
outsl
jns
je
xchg
repnz
sbb
push
jnp
popa
daa
insl
jg
repz
or
xchg
out
adcl
popf
mov
inc
out
movsb
pusha
xchg
add
adc
imul
mov
pop
mov
dec
add
cltd
out
fwait
sti
adc
mov
sbb
add
int3
arpl
in
inc
cmp
mov
lods
dec
cld
mov
jbe
sbb
stos
enter
in
add
push
jmp
out
pop
faddl
push
ret
lods
lea
es
dec
add
add
bound
jno
sub
add
cs
in
add
jne
pop
sbb
add
jmp
add
and
xchg
push
push
lds
sbb
jmp
push
add
idiv
sub
pusha
mov
xchg
ljmp
pop
arpl
outsb
mov
add
ret
add
lds
lahf
lret
sti
nop
ss
dec
pusha
lods
add
pop
pushf
lcall
jbe
iret
sti
jns
cli
jne
scas
jne
cld
lcall
adc
cld
cmp
loope
mov
int3
pop
mov
xor
jne
mov
add
and
outsl
cmp
enter
mov
bound
pop
xor
mov
and
xchg
mov
sub
jnp
int
adc
sbb
pusha
mov
or
sbb
inc
add
clc
popf
dec
xor
jl
aaa
or
movsl
cmp
pop
pop
inc
pop
mov
pushf
jo
and
add
daa
jnp
jnp
mov
popa
sbb
add
push
mov
mov
test
andl
sub
dec
pop
outsl
jnp
jecxz
add
push
arpl
ret
mov
out
repnz
std
jle
or
andb
add
cmp
aaa
mov
lret
jmp
movsb
js
inc
push
dec
mov
mov
fsubrs
les
sti
popf
mov
xor
lods
je
push
add
xor
shlb
ljmp
arpl
andb
scas
xchg
add
jb
cwtl
push
or
outsl
mov
add
jns
xorl
lds
and
and
mov
test
dec
shrb
and
mov
add
pop
mov
fidivrs
outsl
or
add
xchg
jo
jnp
and
mov
mov
pop
inc
fistpll
pop
loop
pushf
xchg
or
ret
jge
aam
verw
stos
sarl
xchg
imul
xor
push
sbb
test
fstl
adcl
push
jl
push
sahf
fbld
sbb
cmp
adc
and
jl
insl
imull
jg
add
add
mov
data16
push
push
rorl
or
add
clc
pop
mov
mov
outsb
push
les
scas
add
test
dec
lods
dec
pop
cmp
mov
jg
xor
and
push
pushf
add
rorl
fdivl
imul
add
in
outsb
fwait
pusha
jmp
sub
aaa
adc
out
ds
popf
lret
or
xchg
add
mov
sbb
popf
jns
xchg
js
sbb
aaa
outsl
add
loope
mov
outsb
repz
jg
dec
sub
push
add
test
jge
cmpb
jb
inc
push
mov
cli
cmp
mov
xchg
icebp
out
pop
fcompl
je
add
mov
cld
push
xor
and
mov
mov
imul
xor
add
rcl
mov
call
dec
and
cld
sbb
jo
mov
aas
add
mov
xchg
dec
jle
add
test
add
shl
testb
stos
xchg
sti
add
adc
jb
add
sbb
and
push
std
pop
cs
ja
sbb
sahf
mov
repz
inc
mov
push
mov
es
dec
test
add
pop
pop
xchg
pshufw
xor
or
xor
test
add
sbb
push
cltd
rcl
add
test
push
jg
add
test
sub
jae
add
ja
adc
out
add
jno
fwait
ror
clc
pop
add
push
in
add
mov
mov
dec
pop
pushf
add
ret
adc
xchg
mov
mov
arpl
cmp
sti
xor
std
add
cmpsb
ret
leave
xor
add
insl
push
negb
cmp
add
stos
into
pop
push
add
sub
inc
ja
arpl
stos
sahf
aam
add
shll
xchg
cmp
iret
insb
inc
add
mov
jl
xor
into
movsl
inc
imul
outsb
int3
movsl
or
cmc
add
imul
insl
popf
cmp
pop
imul
stc
mov
inc
jmp
push
gs
outsb
jnp
sub
int
cmc
add
mov
push
mov
add
pop
sub
call
divb
jns
ret
pop
dec
mov
rolb
adc
push
mov
jne
mov
xchg
mov
test
sub
rcrl
cmp
lret
or
cmc
lods
fwait
cwtl
sbb
out
fiadds
jnp
orl
add
mov
in
sbb
xor
addr16
mov
xor
mov
mov
mov
add
cmc
jp
or
xchg
push
dec
push
dec
push
out
adc
cmp
imul
out
sbb
jns
xchg
add
xchg
cmpsb
inc
jmp
mov
or
incl
sub
dec
and
lahf
mov
sti
inc
and
adc
sub
lods
cld
cmc
test
and
shll
icebp
int
mov
pop
lods
add
mov
inc
pop
mov
test
jecxz
sbb
pop
lods
add
xor
lea
les
rclb
psubsw
imul
hlt
into
push
lods
xchg
sub
clc
add
sbb
scas
dec
dec
sarl
mov
cmpsb
aad
ret
push
jle
pop
sub
dec
xor
in
scas
cmc
mov
sbb
in
mov
mov
scas
mov
xchg
ljmp
sbb
sub
or
scas
mov
movsb
add
push
or
push
xchg
call
sbb
push
pop
cmp
pop
leave
jne
cs
iret
cmp
add
pop
sbb
pop
jmp
push
add
arpl
jnp
in
ljmp
mov
sub
fisubl
xor
mov
push
mov
lock
xchg
mov
jnp
inc
sub
or
jnp
dec
adc
scas
add
jnp
xchg
sub
js
lods
jns
vcvtsd2ss
gs
pop
xchg
insb
add
popa
enter
xchg
inc
add
ja
loopne
mov
fisubrl
push
add
aam
in
das
out
sbb
ja
pop
add
xlat
dec
je
call
pop
and
imul
iret
adc
sbb
stos
sbb
add
push
dec
fstps
les
pusha
hlt
cmp
mov
ret
jmp
jne
in
sbb
mov
add
mov
mov
xchg
mov
fstp
pop
fisubs
xchg
inc
dec
push
jl
xor
cmp
inc
add
push
es
cmp
sub
shll
cld
lock
sub
repz
les
call
push
fdivs
add
cs
or
dec
push
jnp
inc
dec
enter
or
xor
or
pop
sti
add
jno,pt
xchg
jo
push
add
fstps
cld
shrb
adc
xor
mov
test
sti
add
add
jb
ret
mov
sub
sbb
ret
test
test
or
add
jno
cmpsl
mov
push
imul
lods
sahf
pop
jp
loop
jl
std
pop
add
fildl
adc
sbb
add
bound
cmp
pop
jl
sub
jecxz
and
mov
add
add
add
pusha
in
adc
mov
push
lret
fcmovb
dec
mov
das
jae
sbb
add
cld
sti
test
inc
lock
mov
in
sbb
push
out
jnp
incb
mov
pminub
movsb
add
je
es
bound
cld
add
scas
ret
adc
add
arpl
ss
mov
adcl
divl
jle
add
and
add
dec
xor
xlat
jbe
push
out
in
add
inc
pop
xchg
es
pop
lods
mov
ds
fs
or
or
jge
out
sbb
repz
inc
xchg
in
sub
xor
bound
mov
ljmp
jns
jnp
or
ret
cld
inc
sbb
mov
mov
pop
shlb
jge
jb
jle
rorb
push
daa
insb
js
pusha
leave
push
lock
mov
mov
pop
sbb
xchg
imul
iret
push
dec
addl
pop
aam
mov
sbb
les
add
jno
stc
ljmp
bound
or
sbb
dec
add
ficompl
adc
ss
cmpsl
daa
cmp
ret
xor
pop
pop
out
push
pop
xor
jg
fs
xlat
inc
add
out
repz
adc
int3
mov
add
mov
iret
dec
add
mov
cltd
mov
mov
popl
ljmp
stc
cmc
call
dec
adc
nop
add
xchg
adc
add
mov
push
add
mov
lock
inc
jle
add
jp
gs
sub
les
xor
lret
shlb
sahf
movsb
lahf
dec
sub
pop
sub
jns
push
in
adc
xchg
inc
add
jnp
cmp
iret
lcall
jnp
or
jp
jb
andb
mov
in
daa
icebp
test
mov
and
fdivrl
add
xchg
push
or
adc
inc
sbb
pop
mov
cmpsl
rcr
std
add
filds
mov
and
push
add
or
fdivs
mov
adc
jne
jns
sbb
mov
jge
sahf
nop
add
mov
lcall
inc
jbe
jge
add
xor
es
mov
pop
mov
lock
fldl
cmc
add
stos
cld
test
or
push
inc
jge
cld
add
xchg
stc
cmp
or
jl
sub
cmc
pop
cmp
fldenv
daa
jp
add
pusha
mov
add
or
sub
add
test
mov
lock
in
and
xor
adc
mov
add
mov
fwait
test
rcrl
push
jo
nop
rclb
add
mov
xor
test
shrb
jnp
fimull
mov
xlat
data16
xchg
inc
add
daa
mov
xor
xchg
inc
add
outsb
int3
rclb
jns
mov
mov
push
jle
fdivrl
add
repnz
sbb
leave
test
das
jnp
imul
push
lods
pop
pop
fadds
add
push
sbb
add
gs
imul
jns
mov
loop
adc
cmp
push
pushf
or
or
mov
inc
mov
jge
scas
aam
add
sub
or
mov
std
jl
arpl
testl
mov
out
or
add
ja
mov
jo
stos
add
fistpll
incl
mov
mov
sub
sbb
mov
jge
dec
dec
push
sbb
gs
jmp
xchg
bswap
fstpl
add
jb
sbb
xchg
jl
pop
in
inc
cmc
add
cld
faddl
and
call
outsb
add
jb
js
es
mov
push
flds
sbb
xor
aad
mov
std
pushf
paddusb
add
aaa
subb
add
lds
lock
add
sub
add
mov
add
daa
mov
pop
test
out
and
cmp
rolb
push
ret
cmpb
xor
sti
and
lods
mov
xchg
das
adc
imul
jle
jnp
addb
xor
insl
pop
pop
add
icebp
aaa
add
cmpsb
mov
jne
xor
mov
int3
inc
mov
mov
push
sub
rcrl
dec
iret
cld
imul
movsl
push
mov
sbb
adc
xchg
xchg
dec
aam
jb
add
xor
fistps
es
andb
add
push
sub
insb
mov
sub
xchg
sti
ret
mov
sbb
jnp
daa
fldl
mov
out
sbb
das
lods
add
xor
and
insb
popa
into
sub
push
add
or
adc
or
pop
add
pop
inc
sahf
test
mov
aaa
xchg
dec
inc
push
pop
xchg
add
pop
ret
adc
add
insl
jns
sbb
mov
xor
add
inc
mov
cld
dec
in
fisubrl
jne
cmp
sbb
lods
mov
inc
sub
mov
adc
hlt
daa
std
adc
add
push
xor
inc
xor
add
psubusw
mov
pusha
jae
xor
adc
jmp
and
cs
jle
add
int3
mov
mov
cwtl
sbb
fnstenv
add
add
dec
and
jbe
lret
add
mov
out
mov
aad
or
roll
cli
inc
addb
outsb
mov
mov
xchg
xchg
scas
inc
jns
xor
or
pop
nop
mov
test
sahf
ds
xchg
lcall
and
std
xor
mov
sti
out
in
add
bswap
sbb
rolb
gs
inc
jae
jns
add
fiadds
cmp
jne
iret
add
aas
push
jp
mov
cs
jg
push
jle
dec
cmp
mov
or
add
call
in
add
add
xor
jne
jl
sub
hlt
aam
mov
mov
and
add
hlt
sbb
cld
ljmp
add
add
lahf
paddsw
add
pushf
pop
cmp
cld
mov
or
inc
pop
jo
mov
xor
lods
jecxz
add
xor
dec
ljmp
add
adc
idivb
pop
mov
push
sbb
adc
add
push
push
add
dec
xchg
out
and
lret
mov
jnp
movsb
repz
das
shr
add
pop
adc
jmp
add
repz
xor
xchg
dec
dec
add
aas
pop
fnstsw
scas
outsl
pop
mov
and
cmc
repz
pop
cmpsl
outsb
jo
inc
rol
loopne
jl
nop
mov
cltd
jl
mov
mov
jb
add
lods
or
out
mov
add
adc
or
and
cmp
jne
cld
fwait
push
faddl
mov
cmp
outsb
or
mov
pop
adc
or
call
jns
add
clc
mov
mov
inc
aad
sbb
add
pop
aas
dec
push
or
jns
cs
sub
fldcw
jns
add
add
mov
add
ret
bound
add
jo
gs
inc
mov
daa
cmp
mov
jnp
arpl
cmp
add
test
add
xor
inc
sub
add
xchg
cmp
add
lods
mov
movb
addr16
xor
dec
xor
or
popf
rcrb
cmc
mov
xor
lods
psrlq
imul
jne
sub
cmc
mov
out
cmpsl
aad
jge
mov
add
rorl
inc
fs
nop
sub
cmc
mov
daa
sub
mov
mov
adc
repz
outsb
inc
mov
sub
clc
mov
xor
add
xchg
outsb
out
pop
mov
and
add
jl
aaa
fists
rcrl
imul
sub
es
sub
jmp
fstpl
adc
xor
out
outsl
cmp
mov
add
in
or
add
add
add
bound
ret
daa
cmpsb
pop
sub
sbb
push
cmp
or
ljmp
xchg
enter
adc
push
xor
pop
xchg
push
add
test
std
clc
sbb
hlt
repnz
mov
and
cmp
fdivs
adcb
dec
sbb
je
pop
xchg
into
shll
lock
push
add
sub
sbb
mov
cmp
sbb
xor
popl
cltd
add
fnsave
pusha
out
add
ret
pop
dec
stos
sar
mov
ret
call
sbb
pop
lds
sahf
aas
imul
mov
add
xor
sbb
add
shr
cmp
sbb
add
cld
fnstenv
inc
cli
test
popf
jmp
sub
dec
pop
faddl
gs
jnp
sub
xlat
xor
mov
arpl
inc
and
add
mov
mov
pop
xchg
add
or
xchg
popa
xlat
xor
inc
add
add
sub
aam
aad
scas
mov
mov
outsl
add
mov
rcrb
add
mov
arpl
xchg
je
inc
mov
negl
sub
in
aaa
jp
test
add
xlat
lahf
std
test
shrb
mov
sti
xor
scas
add
insl
dec
shlb
add
or
stc
out
stos
xchg
cli
inc
int
sbb
popa
mov
mov
iret
sarl
ja
mov
and
mov
test
and
jmp
jae
push
pop
sbb
scas
or
pop
enter
sub
adc
es
add
pop
mov
add
les
iret
and
add
add
lock
mov
mov
fdiv
fs
xchg
sbb
fcomip
add
lret
add
dec
push
mov
fildl
lods
sahf
fwait
and
gs
popf
or
adc
sbb
stc
mov
xchg
fnstsw
hlt
pop
movsb
std
add
jae
sbb
gs
addr16
movl
fistl
cmp
xchg
ror
pushf
xor
test
add
data16
mov
jne
sbb
and
sbb
jecxz
sarb
dec
int
out
adc
sbbl
jnp
ret
fcmovnb
mov
std
in
mov
add
jne
shl
inc
jl
jo
test
loop
fcompl
push
mov
and
and
xchg
xor
mov
sub
mov
sahf
popf
jg
mov
cwtl
shrl
in
jl
das
sarb
gs
mov
jp
call
xorl
mov
xchg
add
adc
add
mov
lret
stos
fcompl
in
mov
mov
add
dec
lds
add
in
loope
add
mov
testl
aam
pop
dec
sub
mov
aad
imul
mov
and
sbb
cmpsb
aaa
fildl
mov
mov
fimuls
test
adc
cwtl
inc
js
inc
enter
dec
jno
add
lods
out
lea
push
add
pop
loope
sahf
add
inc
cmp
or
add
add
movsl
mov
xlat
mov
fisubrl
mov
xor
push
push
fwait
into
adc
movsb
add
push
sub
dec
lret
fadd
jmp
jnp
cmc
int
xchg
or
add
xchg
aam
mov
les
jg
jb
xchg
ss
fs
xchg
dec
push
push
cltd
add
fdivr
rcll
out
jnp
add
mov
adc
add
int3
rorl
lcall
mov
rorb
xchg
adc
pop
arpl
mov
add
out
and
popa
in
mov
or
cltd
mov
xchg
flds
in
mov
stc
mov
mov
loope
xor
insb
lret
sbb
pop
push
aaa
test
push
mov
xchg
enter
mov
jb
rolb
jg,pt
add
mov
adc
push
fwait
add
sub
test
or
adcl
mov
cmpsl
add
sub
aas
jp
mov
dec
sbb
xchg
mov
adc
pop
les
sbb
push
xchg
sbb
add
dec
call
add
fucomi
jg
and
mov
cmc
imul
pushf
inc
jp
jns
push
sub
mov
test
pop
mov
roll
xchg
push
movl
test
add
inc
inc
fidivrl
sub
pop
ja
add
fdivrl
xorb
or
ret
imul
cmp
fisttpll
dec
cmpsb
mov
mov
push
jnp
roll
or
sbb
xor
addl
cs
leave
lods
and
iret
jle
add
stos
or
sbb
dec
fiadds
add
mov
inc
movsl
hlt
cmp
ss
pop
adc
push
int
out
gs
sub
mov
add
adc
lock
add
pushf
in
add
lods
loop
jge
add
xchg
inc
das
cmpsb
inc
mov
mull
jmp
xor
lock
cmp
pop
cmp
xor
dec
je
rolb
pushf
mov
testl
cs
push
jecxz
xor
add
fwait
lcall
sbbl
shrl
imul
add
repz
jnp
lods
dec
xchg
js
lock
xor
jge
pop
push
stc
pushf
into
incl
lcall
faddl
add
push
and
lods
outsb
jns
push
hlt
sahf
add
push
ss
add
addr16
and
sbb
push
push
sub
mov
and
mov
imul
jno
cwtl
add
push
out
pop
lock
testb
and
repz
cli
pop
ss
out
cmc
xor
cs
in
movsb
add
jmp
enter
dec
inc
mov
or
outsb
push
out
sub
inc
enter
push
popl
xor
mov
pop
xchg
icebp
jnp
pushf
orl
push
xchg
add
cs
jl
loop
test
dec
sbb
pop
inc
mov
push
andb
ret
imul
cltd
push
arpl
add
fmull
in
adc
jae
or
and
mov
subb
xor
mov
mov
fs
sub
push
stc
add
add
mov
and
push
call
sub
add
call
rcr
add
jecxz
into
clc
fidivrs
add
ret
mov
das
add
outsl
and
orl
testl
nopl
je
rep
in
cli
das
add
push
subb
xchg
add
inc
or
sbb
pop
popf
jl
aad
or
sbb
jns
add
dec
add
sub
or
inc
xchg
mov
jge
or
loope
sbb
lods
jmp
jmp
dec
xchg
insb
adc
enter
fldenv
or
daa
add
adc
pop
push
mov
enter
mov
add
pop
mov
add
les
imul
ljmp
rorb
fldenv
lods
lahf
pop
cmc
add
loopne
jbe
mov
jl
xor
cmpsl
leave
mov
hlt
and
add
or
mov
das
icebp
pop
sbb
xchg
std
pop
pop
cld
add
cltd
push
in
jl
jecxz
fildll
out
std
and
aas
cmp
outsl
add
add
dec
sub
jnp
loopne
loop
js
nop
adc
cld
jb
pop
test
add
out
lahf
xor
add
mov
add
push
inc
cmp
dec
cld
xchg
push
insl
movsb
mov
cmpsb
or
and
cmp
add
outsb
add
push
push
jl
dec
sbb
adc
mov
inc
xchg
arpl
mov
and
mov
jecxz
mov
sti
or
sbb
add
jnp
cmp
lcall
fstpl
cmc
outsb
leave
mov
add
mov
xchg
add
mov
aaa
mov
xchg
push
cwtl
or
mov
icebp
aam
pop
cmp
test
and
push
pop
add
inc
scas
sti
test
lea
xchg
mov
nop
pop
cli
icebp
push
add
enter
insl
add
jns
mov
imul
add
bsr
pop
or
mov
in
sbb
mov
cmpsl
add
stos
jbe
adc
add
aad
pop
add
jno
push
add
adc
ss
and
mov
mov
aad
mov
push
xlat
mov
fcmovu
add
inc
pop
insl
jno
add
test
dec
push
les
sbb
loopne
add
sbb
mov
mov
bndldx
pop
scas
cld
mov
sub
inc
sbb
push
gs
and
fsts
stos
sub
add
mov
adc
mov
lret
popa
stos
call
and
std
adc
inc
mov
lock
pushf
lcall
repnz
iret
std
push
or
adc
adc
addb
jnp
pusha
insb
int3
mov
cmp
mov
das
xchg
ss
push
sbb
add
into
cmp
mov
mov
jns
dec
add
aas
add
mov
lods
push
pop
or
testl
jb
add
aas
add
sub
xchg
xor
xchg
add
imul
jge
sbb
jnp
or
adc
add
addl
loopne
iret
mov
mov
cltd
sahf
or
nop
scas
inc
divb
xchg
mov
add
push
mov
aaa
out
cmp
insb
test
addr16
out
jno
push
jo
add
shll
stos
pop
pop
or
add
out
loope
cli
jp
or
rolb
add
pop
mov
clc
mov
mov
bound
lods
pushf
add
mov
in
pop
out
je
addr16
addb
sbb
bnd
sarl
mov
lods
inc
pop
jns
xchg
add
in
fisubrs
add
mov
cli
cli
movsl
add
and
cli
and
push
pop
lret
lret
sbb
add
into
arpl
repz
jl
add
mov
cmpsb
js
cmp
mov
mov
lds
xchg
mov
jmp
jge
dec
dec
mov
add
cmp
xchg
jo
jns
push
sub
jnp
mov
cmpsl
add
orb
cli
cmp
inc
rcl
testb
jns
stc
lcall
popa
adc
xorl
and
mov
loopne
call
jbe
fcmovb
sbb
jo
loopne
sbb
add
ss
push
or
and
push
add
sub
add
imul
ja
outsl
and
arpl
repz
dec
mov
inc
lret
fisttpl
test
test
push
std
add
push
sarb
xchg
push
sbb
push
lock
xor
mov
or
in
cmpsl
movsl
xchg
mov
sub
rcrb
or
shrb
sbb
iret
out
outsb
sarl
mov
add
cmpsb
loop
aad
mov
pop
jecxz
cwtl
add
push
push
cmpb
sub
mov
mov
jnp
mov
pop
fwait
adc
adc
outsb
add
das
cltd
stc
sbb
je
mov
stos
inc
pop
lods
cmpsb
add
push
jnp
in
cmp
fs
add
repnz
repz
add
aaa
cltd
or
test
fcmove
cmp
mov
rol
add
mov
jmp
js
sbb
pop
mov
mov
mov
sub
in
cld
adc
pushf
adc
and
repnz
xlat
mov
in
insl
rorb
push
scas
push
cmc
mov
ljmp
in
popf
add
jecxz
pop
test
pop
and
push
sbb
mov
fidivrs
dec
sub
fiaddl
adc
sub
movsl
jl
cmc
inc
push
outsl
sub
aam
xchg
test
pop
sahf
shr
jnp
add
les
mov
add
adc
push
jns
lahf
gs
inc
and
call
jle
sub
sar
movsb
xchg
imul
add
and
fdivrl
add
inc
jo
xchg
adc
cld
add
callw
jle
iret
cld
push
clc
fldcw
add
or
push
insl
lret
pop
sbb
test
ljmp
andl
lock
sub
cmp
cli
fnstsw
loope
lods
add
jns
jns
je
pusha
jnp
inc
jns
adcb
add
mov
adc
mov
mov
mov
stos
inc
add
and
jnp
mov
jb
in
pop
daa
push
inc
or
fcomp
or
or
lock
mov
lcall
jnp
xor
test
dec
lret
sarl
mov
xor
mov
push
adcl
out
ja
testl
add
out
mov
add
ds
ja
in
add
arpl
pop
cmp
sub
dec
std
add
int
gs
xchg
pop
cmpsb
push
fdivl
mov
das
add
pop
cmp
lods
add
sarl
shrl
xchg
jnp
fmull
push
and
fcmovb
pop
lods
movsb
adc
sbb
add
call
add
stos
jl
clc
sbb
testl
pop
cli
xor
add
pushl
mov
cmp
mov
sub
gs
and
jl
popf
add
add
clc
call
stc
repnz
cmp
sub
popa
cltd
jg
insb
pop
adc
sbb
jne
roll
jne
xor
mov
add
fisubrs
lods
sbb
jle
stos
and
mov
or
mov
int3
push
cmp
testl
scas
jae
nop
xorl
jnp
test
je
xor
sbb
sarb
add
in
gs
xor
lods
sbb
mov
or
adc
add
mov
faddl
add
loop
jp
icebp
int3
add
shlb
out
pop
push
or
and
outsb
and
pop
leave
add
sbb
jbe
negl
loop
ss
mov
mov
sub
sbb
push
inc
fstpl
adc
sahf
dec
xchg
sbb
jg
dec
movsl
sbb
aaa
sbbl
cmpsl
cwtl
popw
jmp
mov
jmp
sub
jg
add
xor
fwait
insb
sbb
out
and
xchg
jl
cmp
addr16
fs
xchg
or
jne
xchg
add
shrb
pop
icebp
ss
sahf
lret
jb
sub
add
int
sbbb
mov
jmp
into
test
mov
pop
and
idivl
dec
fldl
scas
lret
push
outsl
jle
or
mov
jne
fsubrp
in
addr16
pop
fwait
mov
add
push
xchg
add
cwtl
lods
jl
stos
add
add
insb
mov
add
xor
int3
cmpsl
cltd
push
mov
inc
addb
cmp
sub
dec
mov
jg
add
mov
add
pop
or
push
rcrb
and
pop
jae
pusha
adc
mov
jg
add
push
addr16
lea
xor
cmovne
popf
sbb
cmp
add
movsl
sub
jecxz
jmp
dec
xor
jne
xor
add
addr16
add
mov
mov
ljmp
mov
push
stos
add
or
into
imul
mov
xor
xor
dec
cwtl
jb
push
mov
out
ror
lret
js
pop
mov
mov
sahf
cld
sub
and
pop
add
int
sahf
cwtl
and
push
mov
hlt
push
add
cld
and
cltd
jo
add
and
fwait
mov
push
add
push
sbb
xor
jae
add
mov
pop
xorb
aas
mov
xor
mov
imul
dec
sahf
int3
add
insb
push
xor
stos
cwtl
or
pop
jge
icebp
adc
js
jnp
sti
xchg
out
adc
dec
cld
add
cmp
sub
or
cmp
jecxz
xchg
aad
test
out
punpcklwd
jge
adc
add
fidivrl
xchg
mov
cmc
jmp
and
icebp
lds
or
rclb
fidivl
adc
les
nop
sarl
or
add
jl
add
fcoms
dec
mov
xor
dec
add
fiadds
testl
jns
outsb
or
and
jne
data16
inc
cltd
mov
adc
mov
inc
jl
push
jge
mov
insb
hlt
leave
adc
aaa
or
push
dec
mov
cwtl
push
int
sahf
test
fadds
js
jge
push
pop
jmp
sarl
adc
ds
popa
jl
add
adc
sub
das
jo
fcoml
push
cmp
xor
inc
and
adc
adc
or
pop
xchg
cli
in
outsl
mov
jl
test
stc
hlt
push
add
pusha
cmp
mov
mov
xchg
cmp
mov
add
and
add
jle
push
imul
cmc
push
ja
rcrb
mov
push
mov
inc
aas
add
xchg
cmp
jnp
es
xchg
mov
mov
sbb
lcall
xchg
hlt
outsl
sub
push
add
add
faddl
push
adc
out
and
push
add
adc
add
sbb
stos
and
jnp
ljmp
mov
xor
add
ss
push
insl
dec
lcall
push
subps
xchg
outsb
popf
in
dec
add
stc
jp
dec
js
inc
cli
aam
mov
aas
sbb
add
sbb
mov
adc
rolb
add
jle
xorb
stos
add
mov
std
in
and
out
fisubrs
mov
xchg
repz
add
sbb
fsubrs
inc
adc
fsubl
and
adc
pop
mov
xchg
lods
pop
sub
xor
adc
add
mov
pop
add
lds
mov
xchg
jnp
cmp
mov
adc
add
push
ljmp
mov
xlat
leave
into
or
int3
add
js
int
popf
and
cmc
sbb
movsl
add
hlt
imul
push
mov
addl
jo
sub
in
mov
clc
fidivs
mov
cmc
rcl
insb
imul
pop
add
add
sbb
lock
stos
add
pusha
into
in
cmpps
scas
push
mov
mov
test
jle
loope
test
push
add
add
jp
mov
add
in
sbb
dec
add
cmp
push
xor
ltr
push
sub
add
xchg
lods
sub
mov
nop
add
xchg
push
jnp
mov
dec
adc
add
mov
cs
pop
add
aaa
dec
mov
and
mov
stc
mov
add
inc
jb
lret
mov
mov
or
repz
pushf
pop
out
dec
call
xor
mov
insl
mov
inc
add
push
pop
inc
lods
cmp
cld
jne
stos
rorb
mov
push
idivb
push
xchg
scas
add
adc
sbbl
lret
jg
inc
cmp
test
je
cli
and
adc
add
xor
mov
and
cli
mov
sti
fistps
jae
dec
add
testb
add
cmc
scas
aam
bound
add
xchg
mov
xor
ss
add
divb
loope
add
das
push
mov
add
dec
and
mov
adc
call
push
mov
hlt
mov
mov
imul
in
xor
or
mov
into
xor
adc
pop
movsb
adc
mov
in
es
add
dec
shlb
je
mov
push
cmc
sub
pop
jle
sub
pop
sbb
ljmp
jge
ror
test
add
roll
in
pop
inc
imul
sbb
mov
nop
daa
adc
add
shrb
mov
sbbl
nop
dec
jp
add
ficomps
repnz
ret
pop
jl
push
aam
repz
jno
outsl
mov
sbb
add
pop
in
mov
jns
or
test
movb
push
mov
xor
scas
jle
fxch
mov
out
and
in
mov
lea
into
jbe
jmp
xor
insl
inc
xchg
adc
add
jp
popf
jns
pop
add
pop
mov
and
lods
add
sbb
jl
shl
mov
pop
add
mov
mov
and
sub
mov
add
push
int
add
das
out
rcr
jne
jnp
fmull
mov
and
cmp
dec
jl
cltd
clc
lods
bound
dec
xor
push
cld
cmp
insb
rol
aas
in
add
ret
xchg
pushf
adc
push
sbb
shlb
add
add
jle,pn
pop
hlt
sahf
lret
cmp
lock
xchg
insb
pusha
mov
or
xor
out
roll
pusha
xchg
push
pop
inc
mov
or
xor
and
leave
lea
cmc
sbb
jno
lahf
add
push
inc
add
testb
add
jnp
mov
and
adc
cmp
mov
xchg
push
mov
cmp
mov
icebp
rolb
jns
aas
sub
adc
add
sub
out
mov
add
out
cli
adc
push
fs
cmp
aaa
or
add
and
mov
or
jno
mov
sub
out
adc
add
xchg
jnp
rcrb
add
or
jmp
jl
lcall
lcall
sub
cli
mov
add
jmp
hlt
mov
add
es
stos
add
sbb
add
add
lea
negl
or
sti
inc
cwtl
jmp
cmpsl
loopne
out
repnz
adc
int
mov
ficoml
add
sbb
cmpsb
mov
cwtl
outsb
sti
mov
mov
sbb
mov
jae
lds
push
xchg
add
xchg
inc
jmp
mov
pop
loopne
mov
sbb
rclb
add
testb
stos
jg
outsl
fmull
sti
pop
jmp
ltr
je
xchg
jno
mov
mov
stos
adcb
shll
dec
fcmovnbe
mov
push
je
out
insl
outsb
arpl
add
jmp
cltd
mov
roll
jne
out
loope
lods
insl
xor
pop
nop
inc
inc
jl
fisttpl
rol
jge
mov
outsb
daa
pop
push
add
jns
scas
pop
xchg
xor
cmp
movsl
lds
data16
inc
or
lcall
stos
add
ljmp
add
mov
inc
lds
push
pop
fs
xor
xchg
add
mov
lret
jge
mov
xor
lods
or
pop
pop
loopne
mov
sub
imull
and
xchg
fidivl
lods
pop
aam
add
sahf
repnz
std
or
push
dec
jo
add
gs
insl
mov
cmpsb
add
movsb
repnz
add
negl
loop
jae
mov
cmp
mov
lds
dec
inc
mov
push
jae
add
nop
ret
shll
dec
es
xor
add
pop
dec
lds
add
mov
push
add
fiadds
divb
or
add
enter
sarb
push
mov
sbb
cmpsb
add
jle
ja
mov
lods
mov
inc
adc
sarl
or
cltd
enter
push
jge
sbb
out
dec
cmpsb
add
inc
cld
lods
mov
and
ds
adc
add
sbb
push
or
and
push
call
xor
aad
add
int
mov
cmp
pop
dec
js
addb
fsubl
inc
add
pop
or
mov
push
adc
ret
add
mov
jg
add
push
push
lods
pop
outsb
sbb
js
hlt
add
mov
movntps
add
xlat
ds
cli
add
loope
jmp
mov
loop
pop
add
movsl
je
gs
ret
push
dec
roll
cmp
push
aad
inc
add
inc
lods
sbb
fistl
repz
test
pop
xor
pop
cmp
lret
mov
sub
xor
push
cld
les
sbb
outsl
add
push
inc
jb
lret
pusha
push
test
add
inc
or
xlat
enter
scas
stc
inc
cld
and
xchg
jb
push
or
sbb
test
add
sub
in
add
pop
mov
jmp
int
xor
dec
jno
sub
arpl
inc
popf
jp
mov
dec
out
xchg
cltd
pavgw
add
dec
movsl
jb
cmp
pop
cmp
xchg
or
idivl
insl
insl
aaa
sbb
fistl
add
adc
cmp
in
xlat
push
add
into
pop
dec
sub
mov
add
sub
or
movsb
aam
popf
je
scas
xor
sbb
xchg
in
add
jnp
add
xlat
cmp
mov
jg
mov
mov
add
insb
sbb
into
cmp
ss
repnz
mov
add
mov
mov
out
iret
pop
add
out
mov
lods
in
add
ja
aas
add
dec
jl
and
stos
mov
orl
add
leave
ficoms
cmp
lret
add
inc
xor
into
cmpl
xlat
sub
and
and
insl
add
cmpl
mov
je
push
fidivrs
test
scas
cwtl
add
fadds
mov
add
dec
or
inc
popf
push
pop
jle
icebp
dec
and
sub
dec
lods
xchg
insl
ss
call
test
add
dec
popl
mov
jo
das
sti
fmull
add
subb
cmp
data16
sbb
push
and
nop
test
loop
add
imul
add
pop
je
add
arpl
pushf
call
outsb
stos
add
scas
or
insb
xchg
test
ror
add
in
je
sub
les
inc
cmp
and
scas
cmp
sbb
push
dec
insb
inc
jl
push
sbb
shlb
add
inc
js
sub
pop
add
jbe
rcrl
inc
sbb
gs
dec
add
xor
mov
dec
add
adc
in
sbb
sbb
outsl
add
add
adc
sbb
out
add
mov
mov
push
roll
add
repnz
or
add
arpl
icebp
setp
add
dec
mov
loopne
add
jle
adc
cmpsl
stc
add
cpuid
adc
test
dec
pop
jns
mov
adc
cld
test
and
or
imul
jmp
pop
dec
popa
pop
pop
repz
clc
mov
jno
adc
add
in
xchg
lret
popa
add
xor
and
test
jmp
fistps
add
pop
cmc
adc
xchg
jo
cli
leave
xchg
in
jnp
jnp
push
call
or
movsl
dec
xchg
icebp
push
add
insb
xchg
ss
push
adc
xor
daa
add
mov
test
add
mov
add
sub
mov
scas
or
imul
inc
jne
xchg
push
cmp
lea
cmpsb
inc
dec
lock
ficoml
jg
fsubs
dec
mov
flds
mov
xchg
xchg
pop
addl
orl
aad
mov
outsl
push
add
pop
fstpt
repnz
xchg
pop
dec
imul
loopne
sub
fdivrs
mov
inc
int3
icebp
xchg
xor
shlb
iret
addb
mov
rcll
jns
dec
inc
pop
adc
dec
insb
in
fwait
ss
or
push
pop
andl
test
outsb
mov
add
push
mov
test
mov
movsl
push
dec
mov
jl
sub
push
dec
add
out
hlt
add
loope
push
mov
add
xor
or
ss
das
fisttpll
pop
int3
dec
sub
add
add
lods
scas
je
mov
out
or
sub
mov
mov
dec
sbbb
imul
add
add
pusha
xlat
xor
add
pop
sbb
dec
cmp
dec
add
pop
out
repnz
cmc
inc
add
jns
add
inc
cmp
idivb
scas
out
int3
lahf
sbb
enter
cli
add
dec
movb
dec
add
cmc
mov
push
jne
lret
test
cld
xchg
push
sbb
add
push
xchg
outsb
pop
insb
sbb
mov
lock
cmp
clc
add
add
shrb
add
popf
or
ret
add
lret
cli
mov
add
mov
outsb
dec
add
in
arpl
into
push
xchg
sbb
lods
cs
mov
inc
bound
cmpl
rcrb
sub
movsb
dec
jp
xor
fs
mov
add
ficomps
or
call
lea
and
jp
stos
mov
sbb
mov
add
adc
push
inc
es
add
jg
rcrb
jmp
pop
loope
add
cmp
icebp
sub
push
pop
pop
jmp
cltd
add
or
cmc
add
dec
iret
outsb
cmp
pop
push
mov
and
add
xor
fdivrs
mul
jbe
inc
or
aaa
add
xchg
mov
mov
and
iret
sarl
in
add
into
add
push
mov
jns
mov
jnp
data16
push
add
mov
ss
sti
ror
sbb
enter
sub
push
loope
outsb
imul
mov
mov
add
cmp
rolb
outsb
adc
pop
jl
cltd
gs
jb
pop
je
xchg
in
cld
or
push
xor
or
fstpl
mov
mov
inc
sub
add
sahf
fdivp
movsl
call
jg
mov
rcll
out
mov
mov
jecxz
call
pop
aas
sahf
enter
movsb
stc
cmp
sbb
adc
out
xor
out
xchg
scas
fstps
add
jb
jbe
add
and
pushf
and
xchg
leave
stos
shrb
cmp
jnp
lods
jne
pop
cmp
cld
add
push
mov
notl
out
inc
or
loop
xor
js
add
mov
shll
dec
jl
loope
adc
cld
xor
xor
add
pop
ds
dec
or
pop
add
shlb
add
testl
dec
jbe
imul
std
inc
or
call
mov
inc
add
pop
lret
push
add
mov
test
bnd
or
aas
scas
add
pop
es
push
mov
dec
out
inc
inc
test
cld
sbb
mov
icebp
xor
adc
add
fbld
sub
cmpsl
out
std
mov
out
scas
sub
icebp
mov
add
cwtl
movsl
loopne
filds
loope
mov
sub
int
les
aaa
add
push
cmova
fisubrl
out
xlat
mov
or
pop
xorb
pop
test
jbe
add
fs
sub
jmp
orl
out
add
jg
jecxz
add
lahf
bound
push
add
cmpsl
das
pop
mov
loope
mov
sub
push
jp
add
lds
repnz
push
add
andl
lods
test
imul
push
add
out
add
jecxz
cmpsb
or
sbb
pop
clc
add
push
push
xor
jg
add
rclb
dec
push
nop
adc
lds
cwtl
add
ss
out
xchg
mov
fsubp
sub
xor
mov
popa
add
mov
or
mov
ja
jnp
test
pusha
aaa
pusha
xor
push
int3
fldl
cld
pop
cli
push
xor
pusha
shll
and
add
das
cmp
add
subl
repnz
movsl
mov
in
cmp
or
jo
cld
add
inc
icebp
xor
daa
andb
ja
incb
mov
sbb
inc
outsl
mov
roll
mov
arpl
cmp
jbe
std
clc
cld
add
push
pop
pop
adc
sbb
pop
pusha
or
mov
xchg
mov
cmpsl
add
les
add
int3
xor
mov
cmc
out
pop
and
roll
and
mov
sbb
jb
cld
in
ficoms
loope
sbb
sub
dec
add
clc
dec
dec
jle
lock
or
test
jge
aas
xchg
xor
add
xor
mov
sub
fists
jbe
mov
cmpsl
ret
icebp
sahf
mov
rorb
push
ret
mov
ja
sbb
xchg
add
mov
scas
mov
pop
js
jl
out
adc
and
xchg
xchg
pop
add
add
test
push
mov
jecxz
scas
je
jp
sbb
sub
add
inc
jnp
nop
cmp
add
adcl
inc
lds
adc
movsl
hlt
mov
aam
add
lds
mov
sar
xchg
mov
repz
or
sbb
add
jecxz
rcl
lcall
test
addr16
jne
test
or
adc
out
add
add
aam
movsb
add
ja
cld
out
imul
adc
add
lret
pop
push
mov
jns
mov
mov
mov
addb
jb
lods
mov
or
test
jl
xchg
push
jbe
jl
das
cmp
jg
add
testl
mov
jne
mov
divl
push
adc
mov
jns
sub
add
push
imul
fisttpl
and
mov
xor
or
jno
fistl
or
add
iret
ds
xor
xor
add
popw
cmp
jecxz
jg
mov
mov
or
xchg
scas
aas
stc
int
sbb
push
or
jp
dec
aam
lds
sarl
add
dec
xor
jle
and
ret
call
mov
jp
jno
xchg
filds
inc
add
int3
mov
add
push
pop
inc
das
sub
jp
rcl
jge
iret
jl
push
js
mov
sub
lahf
test
rorb
xchg
cs
loope
jae
jl
mov
push
dec
sahf
lods
test
cli
sti
jbe
mov
xor
sub
cmpl
lahf
jl
fwait
sub
mov
jnp
or
xor
add
scas
rcll
add
scas
jns
add
push
and
add
in
shrl
cmp
mov
cmp
repz
or
scas
xor
pop
jno
sub
xchg
and
pop
add
jns
push
add
test
call
stos
add
addr16
cmc
test
lods
stos
xchg
add
and
push
jno
mov
jae
mov
mov
mov
cld
cmp
cmc
stc
inc
paddsw
sbb
movsl
sbb
and
jbe
adc
into
cmpsl
int
bnd
sbb
fisubrl
pop
sbb
or
cld
sarl
adc
jmp
es
insl
shrb
adc
inc
jle
lea
pop
mov
mov
mov
lods
xor
add
sahf
dec
add
inc
or
mov
das
mov
call
cs
shlb
add
mov
pop
add
cmp
add
push
add
jno
lods
lods
int3
add
xchg
adc
mov
je
mov
push
xor
fnstsw
lods
xlat
popf
push
cmp
jbe
outsl
faddp
cmp
add
lret
adc
jb
out
out
pop
daa
sbb
lods
sbb
aaa
inc
or
and
xor
mov
mov
cmp
out
loopne
std
or
cwtl
fdivrl
test
push
dec
fucom
add
dec
das
in
idivl
cmp
jae
xor
jnp
pop
mov
cmp
divl
mov
icebp
adc
ss
or
jae
jl
pop
ja
je
jl
push
dec
not
aam
jge
das
jge
pop
mov
outsl
out
fidivrl
add
inc
pop
shl
push
and
sti
mov
stc
fldenv
inc
or
mov
adc
add
icebp
imul
jge
lret
jle
xor
dec
out
filds
es
loop
push
add
leave
and
add
push
in
adc
ret
push
rclb
adc
cmpsl
pop
ja
dec
lods
addr16
pusha
sub
pop
imul
lahf
dec
sub
add
cltd
divb
mov
aam
inc
pusha
test
cmpb
dec
mov
and
or
les
and
jmp
loope
fnstcw
fildl
push
xor
sbbb
mov
leave
cmp
inc
outsb
dec
popa
out
js
pop
add
movsb
xor
pop
xor
adc
and
sub
jl
data16
push
aam
lods
enter
in
dec
std
pop
jo
adc
jnp
or
inc
add
jg
stos
movsb
mov
flds
popa
lahf
jl
addr16
repnz
sbb
dec
mov
add
add
cmp
inc
xlat
movsl
imul
jns
sbb
std
jnp
nopl
push
aaa
add
xor
out
loop
cli
sbb
inc
test
outsl
scas
adc
sbb
neg
lret
add
into
xor
je
pusha
and
pop
inc
sahf
sbb
sub
outsb
sub
or
jbe
jl
mov
xor
data16
mov
xchg
lock
mov
stc
lods
inc
sbb
adc
movsl
adc
test
repz
call
fsubrp
mov
xor
or
enter
cmc
repnz
sub
jb
mov
jle
cmpsb
stos
push
cld
add
in
bnd
add
movsb
sbb
cltd
inc
leave
or
std
notl
fidivrl
sti
add
int
add
cmp
and
aaa
mov
cld
lods
inc
and
dec
add
cmp
or
add
mov
aad
testb
add
jp
ret
out
xchg
lret
les
dec
fldenv
jnp
mov
sub
hlt
faddl
cmp
stos
add
mov
inc
nop
or
insl
ret
dec
inc
sbb
add
cltd
and
test
jb
jns
outsb
mov
mov
dec
jge
add
and
xor
loopne
cld
jns
push
jle
add
push
adcl
std
add
stos
sbb
add
repnz
add
cmp
clc
cmpsl
inc
or
xchg
add
pop
or
lret
les
add
and
sar
test
imul
or
mov
cli
in
mov
add
shll
pop
popa
and
jnp
bound
outsl
or
cwtl
sahf
ud1
int
jmp
xchg
cmc
call
aas
fnsave
push
add
mov
xchg
popa
sbb
dec
add
data16
inc
add
fimuls
lret
add
jns
popa
andl
je
and
es
cld
gs
fisttpl
nop
add
cli
mov
pop
xor
inc
xor
cmp
sbb
mov
push
lods
or
into
jge
or
cmpsb
mov
sub
or
xor
add
inc
out
div
mov
cli
ret
inc
sub
mov
mov
insl
orl
jnp
dec
mov
stos
add
cli
adcb
or
and
loopne
sbb
push
pop
pop
cmp
scas
shlb
xchg
popf
xchg
mov
test
push
add
xor
jns
pop
lock
adc
mov
insl
add
orl
movsb
push
loop
sbb
push
out
jmp
insb
jbe
cmp
add
scas
loop
add
loope
iret
mov
xor
pusha
xchg
xor
int
and
dec
das
xchg
jae
cld
pop
movups
xchg
popf
ljmp
stc
push
add
sahf
jno
sbb
repz
add
fsubr
mov
lret
pop
outsb
mov
push
fwait
inc
aas
add
in
pusha
add
inc
notl
lods
jl
repz
std
pop
int3
add
push
fs
add
int3
rorl
add
add
mov
xchg
pop
std
fadd
jg
add
dec
in
dec
jnp
nop
outsl
dec
roll
rcrb
add
icebp
loopne
ljmp
push
add
scas
sarb
jl
inc
in
mov
dec
cmc
push
mov
iret
jl
inc
stos
sti
aas
mov
push
lahf
sbb
mov
pop
add
inc
adc
mov
sarl
gs
jns
scas
push
and
dec
cli
leave
mov
pop
stos
xchg
add
clc
lods
popa
mov
sub
sbb
movsl
add
bound
inc
pop
and
inc
add
and
mov
cmp
jl
mov
insb
adc
clc
push
std
xor
add
sub
mov
cld
sub
inc
filds
sub
pop
in
js
mov
add
iret
dec
push
pop
jge
movsl
add
lahf
scas
add
jb
das
loop
lret
add
jno
cltd
insb
cmp
xor
fcmovnbe
imul
xchg
fdivrs
push
cmp
jge
xor
push
nop
add
add
sarb
addl
rorl
ds
pop
mov
xor
add
sub
repz
ret
lds
xchg
aam
aad
lcall
ds
fidivs
add
jno
sbb
cld
push
bnd
pushf
cmp
sbb
dec
jmp
jnp
mov
pop
pusha
lds
or
mov
fists
xor
xchg
dec
pop
mov
sub
add
dec
adc
ss
repnz
ljmp
arpl
rcrl
add
sbb
adc
idivl
jno
cmp
pop
cld
jecxz
push
push
sbb
cmc
jmp
lods
jle
add
bound
lds
and
xchg
test
and
adc
out
jecxz
sub
xor
loopne
mov
push
push
icebp
mov
sub
sbb
aaa
addr16
stc
pop
add
leave
xor
adc
test
add
cmpsl
cltd
xor
shll
fwait
push
add
sub
cmp
cmp
movsl
mov
push
xor
add
inc
fsts
push
jg
and
jo
jns
bound
pop
pop
cli
cmp
inc
cltd
mov
or
add
mov
xchg
add
adc
add
sbb
mov
es
shl
inc
out
daa
jb
test
fbld
pextrw
add
notrack
imul
push
cmp
scas
jne
or
xor
add
fcompl
idivl
popa
hlt
push
les
push
sbb
mov
incl
add
sbb
clc
adc
push
sbb
bound
sbb
cmp
popf
add
adc
mov
sahf
int3
jg
addr16
insb
jns
xor
sub
sub
ds
movsb
pop
and
das
xchg
xor
pop
add
dec
cli
fnstcw
gs
fisttpll
jns
or
lock
jne
les
add
add
js
out
popf
ret
das
inc
hlt
mov
cmp
cmpl
outsb
add
and
lret
mov
pop
lahf
xchg
add
cltd
xor
lret
jmp
daa
jle
shll
jl
pop
adc
cmpsb
shr
jle
add
or
int
sub
ret
pop
pop
sahf
hlt
daa
enter
adc
mov
push
outsb
push
fdivrl
mov
mov
sbb
add
jge
in
jl
adc
das
lods
add
push
jl
jle
int
jae
push
add
ljmp
dec
dec
test
and
ss
loop
pop
push
mov
scas
aaa
loopne
scas
mov
aam
mov
out
test
xchg
xchg
add
cmp
inc
mov
fistpl
xor
ss
cmp
fdiv
shll
pop
jmp
movsb
push
roll
into
popa
sbb
dec
test
addb
loop
or
mov
fisttps
cld
push
sbb
jb
jmp
movsb
xor
cmp
in
rorb
cmp
hlt
ret
push
dec
push
insl
clc
xchg
adc
mov
sbb
add
inc
shll
and
or
icebp
cld
jge
xor
fdiv
push
jge
decl
push
ja
sub
add
enter
jae
das
add
mov
fdivl
inc
shl
adc
sub
cmp
bswap
cld
cmp
inc
mov
dec
in
lcall
sbb
xchg
pop
push
popf
mov
mov
aam
inc
mov
and
xor
aam
loope
pusha
aad
cld
mov
or
or
add
fildll
call
sub
aam
inc
scas
repz
xor
jns
mov
add
sbb
add
xor
shrb
sti
lods
hlt
test
mov
into
add
inc
xorl
std
lahf
rclb
pop
jp
mov
dec
add
popf
pusha
add
fistpl
xchg
mov
jae
hlt
sub
outsb
or
adc
std
mov
cld
add
das
dec
inc
outsl
add
or
sub
xor
cltd
pop
jg
mov
enter
push
insb
add
imul
add
adc
inc
loopnew
stos
popf
cli
ret
stc
jnp
lcall
in
cmp
add
pop
faddl
pop
inc
or
cmp
clc
sbb
lret
loopne,pt
push
add
cli
mov
lcall
es
xchg
add
stc
add
lahf
sub
fisttpl
sub
pop
sub
mov
mov
arpl
cmp
mov
js
je
xchg
daa
cld
mov
test
push
insl
test
cltd
mov
int3
push
adc
add
ds
pop
insb
das
lea
lret
js
add
jp
pop
je
sbb
cmp
lds
movsl
or
in
arpl
vandnps
mov
out
xor
in
mov
pop
aaa
push
or
add
inc
out
pop
jno
xor
adc
jge
insb
sub
jmp
sbb
mov
mov
mov
nop
mov
scas
pop
andl
mov
add
jge
or
inc
mov
xchg
jnp
sahf
xor
call
movsl
cld
scas
shrb
jle
scas
add
enter
clc
daa
stos
daa
jnp
mov
or
add
std
mov
add
jbe
add
cwtl
push
jne
movsl
xchg
mov
inc
xor
or
mov
roll
dec
rorb
shr
add
inc
stc
xchg
add
push
cmp
dec
call
shrd
jl
lret
sti
xor
jp
mov
adc
xchg
lea
mov
shlb
lods
push
add
mov
fisubrl
jae
cld
sub
push
cld
dec
xor
loope
cli
stos
loopne
xor
xchg
add
cmpsl
push
sahf
mov
push
add
or
test
mov
out
jg
add
push
mov
scas
jl
mov
adc
dec
adc
inc
cmp
pop
sbb
in
nop
cmp
xor
sti
dec
inc
lcall
cmp
sbb
jmp
adc
jnp
into
or
movsb
and
das
std
cmp
cltd
mov
test
xor
jnp
xchg
jp
out
and
or
pop
lods
repz
shrl
outsl
jl
mov
imul
xchg
pop
les
xor
pop
sub
fisubrs
xor
adc
push
cs
add
or
mov
imull
in
add
sub
xor
add
data16
popa
add
out
das
jb
mov
or
aas
add
sub
push
mov
arpl
adc
pop
add
rorb
mov
cs
and
push
std
sbb
js
lock
adc
or
test
add
mov
add
inc
outsl
mov
fidivrl
xor
inc
popf
sub
cld
pop
jb
dec
adc
add
lret
imul
mov
cld
hlt
out
cltd
incb
int
leave
cmp
mov
xor
loope
ds
mov
and
xchg
add
movb
cli
mov
cmp
scas
jnp
sarl
sub
and
dec
adc
xchg
fs
pop
mov
sub
in
inc
jmp
test
xchg
out
add
or
cmp
maskmovq
push
dec
add
mov
cmp
inc
shrl
or
lret
cmp
imul
pop
add
mov
mov
adc
add
mov
jo
pop
out
fnstenv
add
frstor
movsb
aas
jne
add
iret
jle
mov
dec
mov
and
lahf
rorb
xchg
aas
adc
and
push
out
pop
aaa
ret
cmp
push
cs
int3
push
inc
or
sbb
insl
add
adc
movsb
mov
and
add
mov
sahf
fiadds
cmp
sti
xchg
in
jo
loopne
sbb
icebp
rcrl
inc
sbb
aas
adc
pushl
xor
sub
fcmovne
mov
jnp
push
mov
mov
add
mov
push
das
fisttps
pop
or
test
outsl
pop
aam
adc
imul
stos
je
mov
add
in
test
pop
stos
adc
sbb
jp
and
addb
mov
or
add
and
clc
push
mov
cmp
xchg
hlt
popf
in
add
jbe
push
mov
lods
orb
and
dec
add
xor
jns
mov
sbb
add
fdivrp
es
sbb
dec
pop
movsl
mov
lret
retw
fs
in
add
mov
add
jmp
mov
cmp
pop
xor
rcll
and
jle
mov
stos
xchg
jp
cmp
inc
mov
mov
leave
pop
or
aaa
sbb
ljmp
cmp
add
push
roll
mov
call
lods
jg
push
mov
js
jnp
add
js
cld
test
dec
jmp
cmp
mov
enter
js
adc
lret
cmpsl
das
cmp
repnz
pop
add
es
ficoms
mov
std
pop
add
dec
ds
sbb
loope
data16
out
push
inc
popf
insb
pushf
inc
push
xchg
or
jne
sysexit
test
add
mov
mov
pop
jns
add
mov
add
lods
push
ja
mov
mov
imul
jl
je
xchg
pop
or
add
xor
std
pushl
pop
mov
xor
add
mov
xor
insl
push
movsl
addr16
in
or
inc
mov
mov
or
and
adc
jae
dec
sbb
mov
add
outsl
sbb
add
add
mov
mov
pop
xor
dec
inc
xor
mov
xchg
pop
add
mov
ror
add
mov
jno
sarl
jbe
lea
add
test
add
mov
sbb
jns
mov
pop
lods
mov
add
xchg
fs
pop
push
and
push
add
and
insl
icebp
pop
cmp
cs
loop
andb
add
cmpsl
inc
and
xor
pop
scas
add
clc
adc
enter
xchg
dec
mov
push
and
lret
lds
sbbb
add
movsl
mov
add
outsl
icebp
mov
inc
roll
gs
iret
test
add
std
or
sti
je
outsb
fidivrs
daa
mov
lods
add
jl
stos
jmp
insl
or
mov
dec
je
movsb
cmp
mov
add
inc
loopne
aad
jle
mov
sub
outsb
mov
or
and
not
jns
mov
jnp
add
cmpsb
pushf
sarl
fwait
mov
hlt
cmp
push
push
mov
xchg
xor
insb
fdivl
add
mov
jno
shl
sbb
cltd
movsl
push
add
mov
sbb
nop
xchg
sub
inc
int3
mov
popf
daa
add
gs
or
pop
pop
add
xchg
shl
push
mov
xchg
js
inc
call
inc
xor
xchg
xor
lock
lcall
mov
push
loope
adc
imul
pop
flds
mov
out
daa
sbb
mov
scas
cmp
add
inc
cmp
push
mov
pop
sbb
xor
movsl
jp
cmp
push
int
popl
loopne
pop
nop
add
ljmp
sub
xadd
jbe
sub
add
mov
cs
add
and
sbb
call
mov
outsb
sbb
rclb
xchg
push
stos
popa
add
adc
sub
inc
add
jbe
adc
lds
js
inc
jmp
movb
sbb
jns
jnp
mov
or
jmp
in
pop
sbb
adc
dec
xchg
mov
pop
jns
fdivr
add
push
sbb
jg
jns
orl
bound
mov
jp
jl
pop
xlat
push
push
sbb
adc
ja
jo
lahf
or
xor
sti
push
cmp
lods
mov
inc
mov
push
add
push
les
pop
lret
jl
push
xchg
pop
in
lahf
inc
call
js
cmp
shl
jg
mov
jb
cltd
dec
repz
sbb
xor
lret
or
push
jl
mov
mov
add
ret
pop
jge
outsl
test
mov
in
test
aas
imul
xchg
mov
jge
std
pop
cmc
xchg
add
sti
into
sbb
add
lahf
jne
xchg
daa
xchg
aas
xor
aam
xor
andb
imul
add
aad
pop
xor
movsl
xchg
int
push
sub
pop
sbb
fisttpll
add
push
cmp
jnp
cld
add
xor
sbb
enter
sbb
push
fstl
xor
adc
lahf
adc
sbb
and
sub
dec
iret
lea
and
push
mov
out
jnp
sub
and
xor
aad
mov
loopne
add
outsb
int
dec
sub
lret
call
subb
sbb
xchg
add
mov
sub
mov
xchg
call
lahf
sbb
add
add
xchg
das
dec
inc
and
sbb
imul
xchg
pop
mov
xor
ret
mov
popa
jle
jne
sbb
jo
inc
add
sbb
jns
stc
mov
dec
inc
popa
jmp
add
mov
add
leave
sbb
div
hlt
add
jb
aas
add
lahf
xor
mov
add
sbb
cmp
xchg
add
sti
mov
dec
scas
incb
and
dec
aaa
mov
jl
jb
fidivrl
jnp
jo
sbb
push
dec
lret
mov
sub
in
sti
mov
xor
mov
xlat
or
imul
jle
repz
add
add
inc
xor
roll
jmp
notl
dec
in
add
mov
push
repz
fnstsw
stos
mov
pop
addb
xor
sbb
jbe
loopne
mov
mov
fcmovu
add
pop
and
roll
fmul
call
hlt
add
fstpl
stos
add
test
imul
das
iret
enter
add
push
or
xchg
jl
into
cmpsb
add
push
lock
sarb
xor
add
leave
adc
and
add
adcl
ss
and
bound
pop
in
dec
sbb
xchg
jb
cwtl
gs
jge
jge
iret
or
add
mov
add
pop
test
add
mov
cmovno
push
cmp
mov
add
mov
rcl
add
cmp
cmp
ds
jns
and
aaa
addl
mov
mov
outsb
lea
add
pop
int
sbb
xchg
xchg
inc
pusha
je
add
jmp
fldl
sub
js
mov
add
shlb
add
push
jle
cld
dec
or
sub
int3
and
pop
add
sub
das
std
jnp
scas
pop
out
add
loope
mov
sahf
sbb
inc
fsubs
xchg
push
add
mov
aas
mov
add
or
sbb
mov
xor
adcl
jle
lea
repnz
enter
pop
jae
insl
mov
pop
jnp
stos
test
dec
fcompl
clc
pop
je
add
push
scas
inc
outsl
pop
fistps
pcmpeqd
adc
jl
inc
ds
jecxz
dec
dec
sbb
dec
inc
push
sbb
jns
push
rolb
add
test
sub
xchg
lea
fldl
cwtl
jno
mov
add
out
jns
dec
pop
push
outsb
push
sub
test
insl
jl
aam
inc
cmp
jmp
out
ficomps
gs
aaa
mov
outsl
pop
movsl
jl
mov
sbb
add
cwtl
jns
sub
jg
sub
add
leave
mov
sub
lods
add
pop
cmpsl
insb
popa
je
scas
leave
inc
add
push
aaa
xor
jno
cmc
imul
shr
inc
ss
inc
sub
orb
stos
repnz
mov
out
pop
roll
mov
sub
ret
negl
add
pushf
mov
and
in
dec
push
cmp
add
lds
mov
jmp
dec
aad
adc
push
cmp
sub
xor
into
sub
xor
out
mov
scas
cmpsl
add
xchg
fnsave
pop
stc
add
fdivp
add
enter
shlb
sbbl
faddl
enter
dec
lret
cld
push
rcr
xchg
xchg
add
cmp
popf
cmp
add
cmp
pop
imulb
sbb
insl
or
add
repnz
jmp
call
dec
add
lds
add
andl
add
pop
mov
cli
test
fistpl
or
fiaddl
insl
mov
mov
add
outsb
andb
test
out
out
push
scas
in
insb
sbb
lcall
pop
xchg
lods
incl
jl
mov
mov
inc
add
mov
add
add
inc
push
jnp
int3
and
inc
add
je
ret
sbb
add
pop
lea
arpl
stc
aad
int
add
mov
faddl
stos
and
sbb
lahf
testl
cmpsb
mov
inc
add
adc
dec
add
test
add
and
jg
adc
scas
mov
sbb
and
jle
stc
pop
hlt
cmp
loopne
insb
add
add
bound
sbb
and
popl
inc
cli
dec
or
shr
jnp
movsb
lret
mov
out
jne
add
shld
fwait
and
scas
and
sub
sbb
mov
call
add
push
adc
cwtl
aad
or
int
add
mov
flds
adc
mov
cld
stos
jnp
push
aam
movl
add
in
pop
cmpsb
data16
scas
push
pop
add
add
and
scas
mov
fists
pminub
stos
out
or
in
scas
add
loopne
push
add
movb
ss
add
fldt
or
pop
lods
inc
xlat
aas
lret
inc
or
in
add
fmul
jmp
add
clc
cltd
enter
cli
add
xlat
xchg
out
pop
int3
mov
aaa
inc
adc
das
jp
mov
add
mov
stos
add
xor
in
xchg
call
and
sub
pop
add
and
pop
jp
and
in
and
adc
shrb
adc
jecxz
cmp
mov
inc
xor
and
add
aas
add
fistl
and
bsf
push
push
pop
shrl
add
std
jns
sbb
jns
movsl
outsl
pop
adc
addl
mov
sbb
ret
loopne
cmpsb
mov
mov
sbb
pushf
mov
and
jp
jl
in
fldl
push
ret
fwait
mov
lret
cmc
push
add
xchg
repnz
jge
add
loopne
jnp
cli
call
sub
mov
inc
add
lods
gs
jg
add
push
and
mov
sbb
pop
add
mov
lds
sbb
cmp
das
add
lock
or
shll
sub
cmc
jno
subb
pop
jl
cwtl
sbb
mov
into
orl
stc
sub
xor
xchg
jns
fyl2x
pushf
popl
leave
add
jnp
mov
repnz
fwait
inc
xchg
or
sbb
hlt
pop
add
add
mov
push
push
pop
mov
jbe
xchg
mov
mov
add
sbb
pop
pop
cmp
xor
mov
movsl
inc
add
sti
jl
lret
adc
add
mov
dec
les
push
or
pop
sbb
dec
sbbl
ss
pop
jl
and
cld
movsb
cmp
repz
add
call
push
data16
jnp
sub
test
shl
out
xor
dec
xchg
out
jne
xchg
mov
cmp
cltd
mov
scas
dec
mov
mov
xor
ficomps
push
add
lods
stc
int3
loop
jnp
daa
arpl
sub
dec
sahf
push
pop
add
cmp
int3
nop
adc
repnz
lahf
outsb
jnp
pusha
xor
push
rcrb
add
push
sbb
dec
mov
xchg
xor
out
fcmovnbe
jne
icebp
push
or
inc
push
push
jnp
enter
insl
add
sar
adc
or
loope
add
adc
push
add
pop
sub
or
nop
adc
dec
sbb
cmc
or
mov
in
dec
jg
add
lods
cmp
add
cmp
mov
add
mov
adc
push
dec
leave
mov
sbb
add
mov
out
test
divw
add
sub
push
pop
mov
es
addr16
fiadds
jae
lret
pop
inc
add
add
inc
std
pop
sbb
repz
das
daa
mov
mov
scas
add
movsb
and
push
fcomps
push
cmp
pop
insl
jb
leave
movsl
sub
nop
outsl
cmp
jbe
adc
mov
push
jno
out
fld
into
pop
jns
sub
dec
leave
inc
sub
scas
rolb
sbb
mov
cmpsl
sti
jae
lods
outsl
cmpsb
mov
ss
cld
mov
xor
data16
mov
xor
sbb
add
push
shrl
pop
inc
add
lret
sbb
imul
pop
cwtl
les
test
add
fucom
lcall
jo
cwtl
pop
push
add
or
outsb
xchg
inc
and
pop
out
daa
pop
jnp
cli
add
shr
scas
not
sub
jnp
fiadds
jbe
pop
movsl
cmpsb
jle
mov
cmc
dec
mov
sub
cld
pop
aam
cmpb
lods
or
and
push
xor
or
cmpl
imul
jno
push
jb
or
jecxz
inc
and
pop
inc
stos
mov
dec
cmp
repnz
lea
and
or
and
cmpsb
xchg
pop
popf
add
mov
inc
jno
cld
push
fimull
sbb
adc
dec
in
adc
push
je
cld
add
mov
aad
les
sti
pop
mov
or
jbe
dec
scas
cli
mov
test
repnz
inc
or
hlt
pop
push
out
add
jle
je
mov
loop
loopne
or
xchg
add
imul
jl
es
pop
xor
sahf
cmp
bound
fcmovu
in
jnp
push
or
or
mov
or
add
ficoml
clc
in
test
add
leave
push
jbe
sbb
add
mov
mov
add
decb
add
js
mov
outsb
adc
cmp
jb
or
arpl
adc
stos
mov
push
in
xor
sbb
add
add
in
add
das
popa
inc
add
mov
sti
mov
sbb
scas
test
cld
mov
or
call
paddq
pop
push
movsb
pop
loope
xchg
add
cmp
cmp
sar
mov
and
add
jno
cmpsb
mov
test
add
sub
les
mov
cmpsl
jns
data16
fidivs
pop
add
mov
cmp
out
dec
lods
and
mov
add
cmc
add
pop
inc
add
out
lcall
fldenv
rol
std
negl
nop
cmpsl
ja,pn
cmp
pop
jne
push
jne
testl
scas
outsl
add
daa
gs
add
insb
dec
jl
dec
and
imul
rcrl
ja
add
and
sub
sahf
jl
hlt
inc
push
sbb
adc
rolb
xchg
jo
leave
xchg
xchg
add
mov
arpl
sub
das
movsb
out
xchg
fwait
and
jnp
lods
mov
insl
pushf
inc
add
shlb
push
dec
rorb
xor
pop
cmpsl
movl
adc
pushf
ficoms
in
testb
mov
shl
gs
scas
or
aam
adc
sbb
mov
inc
add
test
outsl
es
jno
cli
add
lahf
mov
dec
add
je
cwtl
int3
push
aas
orb
nop
add
orl
pop
mov
insl
loopne
or
cmp
add
cmc
into
inc
add
fstpl
jmp
inc
cs
call
ds
das
roll
sub
push
adc
sbb
add
sub
xchg
jl
inc
cwtl
push
or
add
mov
rcll
test
inc
cs
ss
sahf
mov
cmp
add
pop
pop
dec
xor
pop
dec
jl
xor
or
cmp
dec
adc
pop
shrl
cmp
lds
and
jg
scas
test
scas
ds
add
cwtl
ja
outsb
movsl
call
mov
sbb
mov
cwtl
daa
jge
push
and
mov
lret
pop
ret
testl
das
mov
adc
sub
imul
cmpsb
mov
or
std
push
add
in
lds
jg
sti
add
out
shlb
push
insl
mov
cmp
repz
pop
inc
inc
in
push
movsl
xlat
outsb
fmuls
adcl
std
xchg
fwait
sarb
arpl
gs
dec
add
mov
push
add
bnd
add
pusha
popf
mov
xorl
and
sub
mov
xlat
jnp
cld
xor
mov
in
data16
xchg
add
jb
js
ss
rolb
jns
enter
jns
jg
cmpsl
adc
adc
and
leave
std
mov
cmp
negl
ja
xchg
add
cmpsb
add
xor
loop
popa
adc
and
repz
push
pop
jnp
adc
inc
and
pop
aaa
add
push
dec
push
add
stc
ljmp
push
and
imul
incb
pop
pop
in
sahf
adc
test
bound
fnstsw
scas
xor
lods
or
insl
add
push
pusha
ds
les
icebp
in
js
xchg
sub
mov
shl
add
imul
push
cli
movsl
inc
or
pop
jg
inc
xor
xchg
leave
and
adc
add
in
insb
or
mov
lret
popa
out
push
inc
adc
add
inc
stos
lahf
jmp
out
insb
inc
xor
insl
jle
push
lcall
push
ficompl
outsb
add
dec
dec
jg
imul
cli
lcall
push
or
das
ret
jl
mov
lret
test
add
outsl
sub
add
lret
daa
inc
xlat
add
fsubrl
out
in
cld
or
dec
xchg
jae
roll
cmpsb
fwait
test
and
data16
add
and
or
lds
cmp
mulb
jnp
aam
dec
mov
and
test
stos
scas
sbb
mov
jge
enter
daa
sub
jmp
adc
sbb
or
mov
mov
sub
aad
add
push
js
outsb
add
scas
popf
inc
pop
ja
jb
js
jnp
push
bound
rclb
push
add
imul
sub
sarb
sub
cmp
add
stc
mov
mov
lods
add
push
mov
add
je
jle
fdivrs
icebp
sahf
push
mov
or
sbb
rolb
in
add
bnd
or
mov
adc
jmp
cmpsb
adc
mov
dec
push
movsl
pop
sub
push
cld
loope
mov
or
xchg
in
dec
repz
rcll
xor
lret
in
mov
add
inc
sbb
inc
sbb
dec
enter
adc
add
pushf
dec
call
ret
movl
dec
les
cmp
imul
xchg
scas
dec
lock
inc
add
std
loopne
arpl
jmp
jge
add
rolb
lock
enter
das
andb
fists
sub
ljmp
push
cld
pop
dec
dec
mov
pushf
cwtl
add
fnstsw
jmp
das
dec
jo
loope
add
imul
shll
add
scas
hlt
cld
notb
add
lcall
add
filds
push
dec
shll
push
mov
inc
and
xlat
jne
jp
loopne
mov
lock
movsb
jno
xor
mov
dec
add
mov
push
mov
and
sub
inc
push
into
sub
add
mov
mov
test
push
mov
loope
push
xor
add
std
sahf
lods
pusha
mov
inc
leave
popa
and
int3
mov
adc
mov
scas
mov
scas
add
mov
loop
dec
push
sbb
lret
test
add
fsubs
in
ja
mov
add
add
or
cld
push
xor
xorl
mov
sahf
shll
out
add
dec
jae
add
mov
xchg
push
rcl
inc
setp
fdiv
push
lods
pop
pop
mov
and
add
or
xchg
mov
push
das
xor
lahf
adc
test
jns
add
add
sbb
and
arpl
nop
loope
add
stos
or
sub
mov
lret
pop
push
xor
add
repz
add
xor
add
jmp
popf
push
jb
jno
xor
fstl
jo
add
pop
aaa
les
xor
dec
pop
call
or
add
pushf
sahf
mov
jecxz
into
mov
sbb
inc
add
mov
fstps
add
icebp
in
fwait
and
inc
add
add
cs
add
dec
inc
leave
cmpsl
aas
dec
add
and
mov
dec
out
add
mov
pop
insl
repnz
cld
xor
mov
xchg
addr16
cmp
inc
mov
mov
mov
lds
mov
sbb
mov
sbb
ret
mov
ss
ret
dec
out
pop
rcrb
dec
pop
sbb
add
and
push
cld
xor
xor
loop
pop
mov
jg
bound
clc
add
mov
sbb
adc
mov
sub
and
loop
jmp
inc
in
cltd
xor
xchg
js
push
sub
rolb
mov
fimull
jo
xor
movsb
fwait
rcrb
or
subl
inc
mov
and
imul
add
addr16
lock
ja
pop
push
jne
add
cli
mov
jno
dec
sbb
sahf
mov
sub
in
pop
cmp
loope
dec
xor
cmp
sbb
mov
int3
cmp
shll
xchg
jb
aas
cld
jmp
cmp
mov
pop
add
xor
mov
shlb
push
es
add
mov
push
add
dec
push
outsl
out
fdivrp
icebp
add
testl
shrl
mov
fwait
cld
cld
insb
call
inc
sbb
or
ret
jecxz
or
adc
xor
cmp
add
out
ds
arpl
mov
sbb
cmp
pusha
add
jb
jnp
dec
inc
xchg
jg
cltd
or
or
mov
sub
jecxz
lods
addr16
outsb
insb
jge
xor
pop
fdivs
fsts
lds
sub
sub
call
pusha
and
daa
addl
push
cmpb
push
mov
dec
fwait
jne
or
mov
cld
add
nop
fstps
inc
or
add
imul
sbb
push
bsr
test
clc
add
inc
mov
push
and
sti
xchg
jle
in
add
pop
pusha
xor
xchg
repz
xor
clc
rolb
rcr
jno
int3
mov
aaa
ficoml
cmp
xor
mov
jl
test
jl
sub
push
cmp
cmp
outsl
push
mov
stc
sti
lods
int3
jle
mov
sti
mov
or
cld
mov
inc
decl
dec
lea
insl
add
jmp
pop
lock
lds
inc
mov
insl
add
rorl
xchg
add
in
ljmp
pop
add
stos
ja
adc
aad
inc
dec
jae
mov
sbb
clc
push
fdivl
mov
and
jg
mov
inc
cld
dec
sub
sub
mov
inc
fmul
push
dec
lods
jns
icebp
lea
sbb
or
subb
pop
add
add
pushf
aaa
dec
loop
add
outsl
jecxz
xor
mov
out
fnstenv
dec
das
dec
cs
popf
sbb
dec
cmc
mov
push
sbbl
cmp
sbb
ja
xor
dec
pop
mov
and
int3
push
inc
jnp
pop
ds
push
mov
push
cmp
and
cmp
call
push
lret
pop
push
sub
add
mov
icebp
out
sub
mov
mov
jge
add
pop
add
add
repz
pop
mov
dec
icebp
loop
sbb
jns
lahf
in
gs
xlat
cmp
hlt
insb
push
jle
enter
leave
mov
test
ret
mov
int3
scas
add
adc
cld
mov
inc
add
and
pop
adc
or
jle
xlat
and
data16
adc
aaa
pop
mov
mov
cld
leave
nop
mov
adc
insl
add
and
insb
fcomps
mov
and
mov
imul
fistpl
lcall
xchg
add
imul
es
imull
cli
test
jbe
push
cld
pop
test
loope
mov
mov
add
pushf
mov
add
and
add
loop
scas
add
push
loopne
xor
jb
mov
loop
enter
cmp
jbe
dec
push
cmc
jne
popl
ret
sbb
jns
insb
add
ss
test
sbb
adc
sbb
pop
out
add
sub
add
xchg
movsb
stos
sbb
pushf
adc
or
xorl
add
out
insb
lcall
add
cld
mul
sub
xorb
cwtl
jns,pt
js
ss
lods
rcl
aaa
cmpb
pop
mov
pop
add
je
pop
stos
pop
xchg
add
aas
loope
pop
ja
or
jbe
mov
adc
xlat
xor
test
rolb
jmp
add
push
mov
ret
test
push
ss
mov
push
push
sbb
out
add
cs
xchg
clc
or
in
inc
xchg
mov
stos
clc
jg
sbb
add
ja
mov
mov
outsb
insl
aad
add
cmp
dec
inc
add
out
add
push
loop
fwait
gs
movsb
adc
mov
call
pop
shr
dec
fstl
xchg
pop
pushw
test
xlat
cli
lock
sbb
add
cmp
fmull
sub
mov
xor
sbb
call
jge
adc
out
mov
cmp
push
inc
sbb
ret
jbe
or
jne
mov
popa
aaa
das
jae
or
mov
add
loop
stc
cld
sbb
jnp
lahf
dec
pop
xor
lods
add
js
pop
add
test
aam
mov
cmpsl
mov
ja
cwtl
xor
add
push
cmp
jp
test
pop
faddp
inc
sbb
mov
pop
add
enter
cmp
fimuls
subl
jno
add
add
xor
pushf
jl
cmp
sbb
sub
daa
push
add
pop
mov
mov
cmp
mov
add
mov
test
add
test
out
add
insl
dec
or
pop
inc
sbb
sub
jno
push
jmp
mov
repz
outsb
roll
ja
push
fimull
pop
push
shlb
and
les
jmp
add
loopne
add
push
or
aad
jae
push
je
adc
jb
test
add
jbe
ss
or
scas
jp
mov
fistl
add
adc
push
mov
add
in
add
and
inc
ljmp
jge
mov
sub
insb
jp
movsl
loope
add
mov
add
fildl
mov
push
popf
jb
inc
loopne
add
orl
xchg
sahf
mov
adc
cli
cwtl
lret
pushl
js
xchg
dec
pop
mov
jnp
mov
jo,pn
sub
push
add
ret
xchg
andb
sub
jmp
jnp
popa
inc
jne
xor
add
add
fdivs
cmp
inc
cmc
jb
xchg
sbb
rolb
add
mov
cld
gs
andl
mov
popl
xchg
add
icebp
daa
cmpsl
fcomps
imul
movb
and
add
pop
xchg
jp
sub
aaa
rcll
and
push
mov
sbb
add
fcoml
rolb
out
push
xlat
pusha
mov
sbb
sbb
int3
in
outsb
push
xchg
cmpsl
mov
data16
orl
andl
jl
jl
gs
cmpsb
or
push
mov
cmp
add
aas
mov
mov
dec
jl
ds
lcall
aam
jno
stos
cmp
mov
loope
or
leave
out
jbe
add
sahf
cwtl
lods
and
add
lsl
mov
in
pop
lahf
imul
pop
mov
cs
jecxz
pop
testl
lcall
mov
push
scas
add
mov
into
stc
jne
dec
sub
mov
call
ret
js
push
xor
mov
or
sub
sbb
add
sub
mov
and
inc
jae
pop
jns
add
sub
sbb
add
cmove
inc
mov
lea
cs
xchg
test
add
aad
add
jb
cmc
pop
cwtl
mov
add
and
adc
in
lea
lret
sub
es
cmp
aam
push
sbb
add
test
cli
subl
cmp
cltd
xchg
jg
out
add
loopne
jb
xor
add
dec
xor
pop
fnstsw
clc
adc
daa
add
mov
dec
mov
mov
divl
iret
add
and
sub
lahf
sub
mov
int
fstpl
mov
cld
orb
or
popf
insb
adc
mov
xor
xlat
int
call
pop
add
mov
int
dec
movsb
sbb
push
scas
cmc
add
dec
js
shr
jno
add
lret
mov
xchg
imul
add
jnp
and
add
roll
ficoms
test
push
cld
daa
xchg
ja
lcall
xchg
xor
and
jae
push
cltd
push
sbb
inc
adc
add
cmp
sahf
ss
arpl
add
jbe
outsb
mov
ficomps
xchg
movsl
aam
fwait
sub
fldcw
leave
or
das
mov
sbb
fiadds
scas
fdivrl
mov
push
shrl
xchg
mov
push
hlt
cmp
pushf
cmp
lcall
pop
add
pop
ja
pushf
mov
ljmp
xchg
add
sub
dec
popf
ja
cmpl
inc
js
or
js
cmp
lret
jnp
adc
jns
repz
pop
sbb
cmp
mov
inc
mov
ror
mov
test
adc
inc
mov
adc
scas
insl
popa
mov
fimull
cmp
int3
and
sbb
popa
cld
lcall
cmp
sbb
add
mov
xchg
inc
mov
push
jb
or
jp
fimuls
stc
dec
push
aaa
push
add
test
mov
jge
cmp
dec
pusha
movl
mov
in
inc
sbb
add
roll
jns
hlt
add
push
loop
and
sbb
adc
or
pop
add
shll
inc
fisubl
sub
adc
mov
stos
push
pop
xor
mov
or
das
mov
add
imul
adc
xchg
jo
fcomi
sbb
add
push
lret
insl
clc
cmp
loop
mov
pop
add
add
add
mov
sti
add
loop
divb
mov
cld
std
mov
sahf
or
and
push
aas
jmp
xlat
cmp
dec
sbb
or
mov
test
jo
mov
add
pusha
and
mov
dec
inc
xor
sub
push
push
test
repnz
out
cmp
jl
jbe
fists
lods
sti
inc
add
push
int3
comiss
lods
sbb
add
in
idiv
push
add
movl
in
and
cmpl
ss
out
cmpsb
xor
add
imul
dec
pop
push
pop
cmpsb
rolb
lahf
sub
outsb
pop
and
out
repz
pop
cld
mov
jmp
pop
fwait
add
dec
adc
test
adc
sub
cmp
loopne
jnp
addr16
sub
sbbl
out
inc
mov
add
add
bswap
adc
mov
add
xor
jmp
add
cli
adc
xchg
mov
mov
icebp
adcl
movsl
cmpsb
push
pushf
dec
jg
add
jno
inc
mov
mov
cmc
popa
mov
into
add
mov
sahf
cmp
inc
cmc
in
or
lcall
or
ss
repz
cmp
mov
enter
rcl
or
push
pop
fidivrl
jle
fs
add
and
cmp
mov
or
pop
leave
and
inc
add
bound
xchg
mov
jnp
xor
jno
or
hlt
cld
dec
int
and
push
addl
stos
jl
lea
in
mov
into
adc
fs
cmpsl
add
sarb
es
in
fiadds
aam
rorb
add
outsl
jno
jnp
pushf
movsl
shrd
int
jmp
xor
inc
cmc
xchg
pop
adc
pop
rorl
mov
dec
add
xor
sub
popf
hlt
ss
inc
add
lret
or
fcompl
dec
cld
in
xchg
jb
push
insl
and
inc
mov
jno
xlat
stc
fxch
int3
js
xchg
add
mov
rolb
inc
icebp
xchg
mov
push
xor
cmc
push
inc
les
popf
lea
add
sbb
in
loop
ss
pop
hlt
inc
cltd
mov
add
out
aad
xchg
outsl
jl
adc
jmp
jnp
pop
jb
aas
or
add
ret
jmp
adc
push
add
daa
xchg
cltd
add
xchg
inc
mov
mov
clc
push
adc
or
pop
hlt
jne
cmp
xchg
jns
aad
sub
xchg
in
dec
pop
mov
test
sub
xchg
mov
jmp
lret
add
sbb
or
add
ret
mov
dec
jne
in
sub
shlb
adc
push
mov
enter
lods
pop
cmp
cmp
sar
xor
aas
out
mov
jns
scas
mov
jmp
add
pushf
cmp
mov
in
cmp
popa
incb
cmpsl
or
fidivrl
xchg
jp
xchg
mov
jbe
dec
dec
inc
mov
cmp
mov
or
push
dec
jo
dec
add
cmp
mov
ficompl
xchg
pop
mov
jg,pn
jnp
dec
shlb
push
hlt
scas
test
sbb
push
jle
enter
std
cmp
sub
jl
push
into
dec
scas
and
sub
add
stc
enter
push
mov
idivb
xor
add
push
mov
and
mov
outsl
inc
stos
xlat
ror
add
adc
add
cwtl
ja
cmc
adc
cmpsb
cld
push
out
imulb
mov
dec
mov
mov
mov
cmpsb
imul
addr16
shll
add
inc
imul
cld
out
mov
add
dec
adc
xchg
mov
push
inc
cli
inc
add
dec
dec
into
in
xchg
mov
add
cmp
add
dec
sbb
in
add
push
lea
cmp
adc
or
xchg
jecxz
jg
scas
lcall
sbb
or
xchg
int3
mov
ja
mov
add
in
push
xchg
sbb
pop
popf
add
cmp
add
jno
cmp
repnz
jb
adc
or
and
add
xor
cld
lahf
mov
movsl
xor
addb
int3
push
bound
sub
mov
or
not
jmp
fiaddl
dec
icebp
jge
ret
jecxz
cmc
loop
test
inc
in
jns
pop
in
xor
cld
jnp
sti
mov
sub
push
fwait
mov
add
and
js
add
adc
pushf
rorl
pop
push
mov
pop
cmp
loope
call
shll
das
and
sarb
mov
pop
add
pushf
into
pop
jnp
cmp
jl
out
fildl
addr16
cmp
pop
sti
ljmp
xchg
icebp
inc
jns
add
shll
int3
add
js
inc
add
test
mov
loope
sbb
dec
add
mov
test
stc
out
mov
lods
xchg
fsubrl
xchg
mov
fstp
push
in
xor
jne
inc
iret
sub
sbb
inc
and
lahf
cmc
outsl
movsl
pop
jns
in
sub
loope
ss
lea
fs
mov
mov
add
add
sahf
imul
dec
adc
cli
add
daa
mov
dec
ret
pop
in
aas
outsb
xchg
icebp
inc
xor
xor
or
mov
test
xchg
je
add
mov
fidivrs
fwait
xchg
cmp
shll
aaa
push
icebp
dec
daa
and
add
fldl
cmpsl
mov
add
in
mov
add
std
outsb
dec
or
add
repnz
dec
cld
sti
pushf
int3
sbb
or
mov
add
inc
je
imul
js
leave
add
adc
pop
jbe
pop
add
dec
or
xor
rorl
scas
sbb
out
adc
cmp
jle
repz
ljmp
cli
rolb
inc
xor
mov
xchg
xor
aad
int3
fwait
jns
pop
add
and
push
inc
daa
addb
mov
pusha
cmp
mov
daa
adc
repz
mov
insb
jb
out
lret
enter
mov
mov
frstor
mov
fwait
add
aad
jmp
push
jnp
add
push
xor
push
pusha
scas
mull
xchg
or
xor
adc
push
out
fldcw
or
dec
lea
pop
scas
add
ss
aam
cli
loope
enter
jnp
adc
add
fistpl
fnstsw
insb
jp
jle
jge
add
test
stos
and
mov
scas
mov
popf
push
pop
pop
je
add
push
pop
push
stos
cmp
negl
int3
add
inc
stc
and
and
rorl
add
or
or
into
mov
cld
inc
mov
negl
or
aad
sbb
test
pusha
mov
daa
inc
jnp
pop
in
ss
cmp
jbe
loopne
sbb
cld
push
add
mov
scas
dec
std
je
add
pop
cli
imul
push
mov
ss
popf
in
add
cmc
mov
push
pop
push
jle
xchg
mov
in
dec
lods
test
jmp
add
lret
adc
push
adc
les
add
pop
jg
seta
std
idivl
ret
inc
inc
loopne
add
int3
jbe
add
jg
mov
sub
add
push
sbb
insb
and
add
push
jge
outsl
fimull
add
adc
fldl
sub
lret
mov
xchg
push
pop
cld
mov
mov
push
add
mov
jl
xchg
scas
sar
pop
ljmp
xor
jnp
mov
pop
pop
das
adc
or
ja
dec
out
jl
pusha
loop
sti
call
pop
movsl
sbb
sbb
push
inc
fstps
jo
lcall
and
sub
psubusb
jne
dec
jnp
or
gs
popa
cli
adc
in
push
add
lods
push
push
clc
pop
pop
addr16
lcall
and
add
mov
repz
sub
das
movsl
fidivs
lods
in
mov
dec
jp
jmp
movsb
add
ja
sbbl
jns
stos
mov
or
cwtl
add
into
lods
insl
dec
add
and
cmp
fdiv
cmpsl
xchg
pop
popf
cmc
dec
movsl
inc
sbb
jo
jns
xlat
pop
add
push
fldl
mov
lahf
inc
mov
or
add
cmp
mov
push
sbb
fbld
add
popa
add
das
fs
xchg
push
sbb
inc
imul
cmp
aas
add
push
xchg
movsl
popf
pushf
mov
add
outsb
je
aaa
sbb
add
not
cwtl
das
popf
push
add
stos
dec
pop
jns
int3
ret
jp
sub
dec
mov
pop
pop
cmpsl
mov
jbe
mov
cmp
int
stc
pop
iret
je
add
jae
xchg
clc
test
les
pop
xchg
ret
mov
lds
imul
mov
and
aam
sbb
cli
add
repz
xchg
mov
and
sbb
push
sub
sbb
sti
test
adc
mov
cmp
add
push
push
sub
mov
cmc
insb
scas
adc
or
imul
and
sbb
dec
add
es
and
dec
ss
enter
mov
or
subb
iret
addr16
in
jmp
xchg
inc
push
adc
add
out
faddl
cmp
scas
and
jecxz
fmuls
ss
lods
xchg
sub
rcrb
clc
add
das
lock
add
mov
arpl
call
pop
push
push
in
add
cld
sub
repnz
jns
int
push
sbb
fisubs
add
dec
enter
sub
roll
jg
cmp
pop
dec
addb
das
add
xor
push
mov
js
addr16
push
sar
loopne
ss
fldenv
dec
iret
stc
lock
xchg
add
push
pop
sub
add
scas
imulb
aad
add
loope
mov
mov
fs
push
jl
ljmp
pop
add
push
mov
mov
lock
mov
mov
xchg
in
push
add
pop
inc
ds
jns
adc
push
and
or
xchg
outsb
add
test
adc
xor
orl
call
cmp
xor
loop
or
sbb
add
shlb
push
adc
push
add
leave
sbb
inc
fimull
xchg
cmp
or
xor
jl
and
pop
mov
rclb
lea
dec
fwait
add
int3
sub
mov
outsl
ja
jge
loope
sbb
leave
shlb
fists
mov
push
mov
in
mov
filds
xor
add
pop
mov
mov
adc
movsb
jp
addr16
mov
and
adc
add
jge
push
sbb
inc
add
and
add
xchg
cmp
sub
xlat
incb
clc
lods
icebp
pop
mov
jg
in
pop
mov
outsl
fstpl
mov
sbb
arpl
or
mov
fnstenv
popf
addb
and
lea
sbb
cmp
lods
xchg
pop
add
sbb
aaa
xor
fdivl
push
jl
cmp
addr16
mov
shl
das
jle
mov
aad
out
adcl
insl
inc
arpl
outsl
stc
push
dec
test
add
jge
fiaddl
sbb
mov
dec
jnp
adc
xchg
add
cld
pop
add
jp
cmc
add
out
cmp
clc
pop
lcall
ds
shll
add
cmpb
mov
xchg
rclb
arpl
push
xchg
inc
add
stos
stc
jmp
add
pushl
jb
sbb
push
ja
add
in
mov
pop
add
ljmp
pusha
sbb
sbb
ds
add
mov
xor
pop
add
mov
or
add
lock
cmpl
dec
or
mov
iret
cmc
test
sti
pop
or
or
add
adc
dec
jl
sbb
and
jecxz
flds
jne
repnz
add
insl
push
sub
mov
out
add
cmp
aaa
pushf
add
cmpsb
mov
loop
nop
add
and
iret
add
push
pop
mov
jl
push
xchg
or
sbb
ja
add
jecxz
outsl
popf
add
add
pop
lods
aaa
dec
jne
cld
jnp
or
roll
mov
scas
jne
sbb
incl
stos
ds
lods
dec
jns
cld
das
addl
add
loop
dec
leave
aas
mov
mov
mov
xchg
fldl
dec
add
repz
and
repnz
divb
jl
cli
arpl
jmp
jae
stos
inc
dec
cmp
icebp
push
outsb
push
or
sbbb
mov
push
add
mov
sbb
int3
ret
add
add
rol
sub
dec
fildl
lret
mov
pop
cs
xlat
sub
pop
jle
adc
aas
int3
or
push
add
xchg
cmovle
mov
dec
mov
jge
add
shll
fs
jmp
pop
cmp
push
lahf
in
je
std
and
ja
and
call
bound
pop
sahf
cltd
push
fnstsw
push
mov
sub
cld
inc
std
inc
sub
cmpsb
ret
in
sbb
add
sub
dec
sbb
idivb
rolb
mov
ror
add
ja
sbb
push
shlb
mov
add
ret
insb
add
lcall
sub
lea
add
mov
fistl
fcoml
add
daa
adc
add
xlat
mov
rcrl
xchg
add
push
loope
jnp
push
lret
out
imul
cmc
outsl
mov
xor
sahf
mov
adc
mov
pop
popf
lock
add
mov
add
stc
jg
add
xlat
je
dec
shl
add
and
mov
comiss
adc
mov
arpl
xorb
push
add
mov
cmp
and
add
mov
pmaxub
cmp
xor
jo
and
add
fiadds
pop
dec
sbb
lahf
pop
add
in
jl
jb
jnp
lcall
into
xor
popf
xchg
pop
pop
mov
jns
adc
iret
add
out
add
clc
pop
add
xor
add
mov
add
outsl
xor
sahf
mov
xor
xchg
pop
cmp
dec
xchg
incb
pop
outsb
add
das
dec
sbb
rclb
add
rcll
test
insb
std
mov
add
push
mov
add
mov
sbb
mov
scas
icebp
sub
xor
add
mov
cli
dec
mov
std
jb
xchg
xchg
scas
add
in
push
das
fcomip
aad
rcl
pusha
int3
add
xacquire
and
sahf
cmp
inc
adc
xor
add
push
and
jnp
xchg
pop
leave
aas
bound
add
add
orb
add
add
push
nop
sbb
inc
cmpb
add
sti
shlb
adc
jne
int3
adc
iret
movsb
mov
xchg
add
dec
mov
add
data16
push
mov
popa
jae
popf
ja
xchg
cmp
and
jp
jge
ds
mov
mov
add
push
je
pop
mov
add
adc
addb
in
mov
add
cmp
int3
add
jns
aas
dec
shll
add
mov
dec
sti
rorb
icebp
nop
sub
jbe,pn
jnp
mov
xchg
lock
sti
sbb
pusha
sub
in
sub
hlt
fcoml
or
push
xor
xor
push
in
mov
fildl
dec
mov
arpl
and
mov
inc
mov
rorb
in
in
add
mov
dec
add
mov
out
pop
cmp
icebp
insl
add
sarl
add
stos
arpl
outsb
xor
mov
pusha
sbb
adc
mov
std
lcall
cs
dec
sbb
dec
sti
sub
imul
and
bound
push
das
out
sbb
mov
sub
push
and
cmpsl
xchg
mov
jb
or
jl
test
sub
push
add
add
xchg
rolb
adc
scas
mov
in
or
mov
dec
inc
add
aas
ffreep
add
lcall
pop
les
int
add
scas
mov
add
jmp
xor
mov
inc
jge
pop
and
mov
cs
xchg
es
sbb
add
sub
add
std
push
out
dec
push
jnp
cmp
shlb
scas
pop
or
sub
mov
add
add
sbb
mov
sub
xchg
fdivl
in
pop
std
jge
or
add
or
or
pop
es
sub
mov
add
ss
data16
cmp
ret
push
insb
lahf
jg
fimuls
add
push
lods
adc
incl
jp
push
or
add
in
cmp
and
xchg
arpl
adc
or
cmp
outsb
sbb
add
pop
xor
cwtl
sub
jg
repz
xchg
test
cmpsl
add
bound
in
sbb
jmp
pop
das
cmc
mov
subl
and
add
dec
sbb
dec
add
jecxz
sti
add
mov
mov
mov
add
and
pop
pop
jmp
fs
adc
or
popa
add
mov
addl
jno
jg
mov
mov
insb
sbb
imul
xchg
push
add
decl
add
adc
dec
sbb
test
or
or
mov
repz
lret
or
add
xchg
pop
lahf
gs
add
dec
xchg
add
cmp
push
call
pop
jp
repz
pop
outsb
testb
mov
mov
mov
test
add
mov
xchg
inc
cmpsb
mov
add
out
lock
xor
or
pop
fwait
mov
add
cmc
popf
pop
out
inc
sbb
dec
mov
mov
mov
jl
add
scas
jge
mov
mov
mov
jp
mov
xchg
das
jecxz
jno
jns
xlat
mov
fsubrp
jnp
dec
pop
shll
mov
add
push
xor
addr16
shrb
add
xabort
mov
loopne
imul
cmpl
dec
xor
jl
jp
dec
imul
mov
lock
xor
test
add
out
in
mov
add
cld
adc
jae
aas
test
cmpb
imulb
jl
pop
ret
push
test
add
dec
mov
inc
in
stc
repz
dec
sub
je
stos
aaa
push
cmpsb
cs
sarl
push
mov
cmp
mov
cld
mov
sbb
xor
clc
push
add
pushf
adcl
pop
mov
jno
es
popf
pop
sbb
mov
dec
orl
test
lcall
out
ficompl
cmc
pop
inc
xchg
jne
sub
dec
test
xchg
insl
cmc
mov
loopne
aas
pop
jns
fcmove
scas
imul
sbb
mov
xlat
add
fadds
jg
xchg
imul
in
lock
add
dec
mov
aaa
jp
xlat
lcall
sbbb
lods
jnp
adc
xlat
push
rorl
mov
cld
loop
add
mov
in
loope
pop
divb
mov
and
rclb
addl
fmull
ja
shlb
ss
test
in
sbb
or
mov
stos
sub
add
stos
dec
mov
push
faddl
inc
out
out
and
pop
outsl
cmc
inc
add
outsb
je
lds
inc
les
push
inc
fstpt
add
stos
pushf
lock
sbb
cmp
dec
pop
adc
push
add
loopne
inc
mov
sahf
add
xchg
outsl
outsb
and
leave
add
add
movb
lcall
cld
orl
pop
in
das
sahf
pusha
sbb
xor
sbb
rcll
ljmp
cmp
orb
or
push
imull
inc
add
sub
or
aam
mov
das
xchg
ret
fstpt
inc
mov
std
jmp
negb
jno
push
adc
test
jbe
push
push
jns
mov
scas
add
cmp
add
imul
adc
fwait
rep
test
fmuls
lahf
mov
rolb
roll
mov
mov
hlt
daa
cmp
add
pop
or
jns
les
and
and
pop
lahf
xchg
or
pop
xchg
and
push
rcrb
xchg
loop
mov
sbb
add
adc
or
leave
inc
cld
nop
push
data16
add
fwait
cmpsl
dec
sbb
jl,pt
das
rorl
add
mov
push
xchg
jl
fs
sbb
fadds
es
add
test
inc
bound
xor
adc
pminub
inc
xor
pop
push
add
rcl
cmp
inc
dec
ret
cmp
je
shr
or
add
xorl
or
xchg
icebp
add
ret
inc
sub
adc
mov
cli
xor
lcall
cmpsb
cmp
repnz
sbb
add
push
ret
scas
bswap
int
pop
jge
cld
mov
jmp
std
jl
push
inc
add
add
pop
adc
lret
daa
push
add
sbb
imul
addr16
nop
pop
mov
cs
sbb
dec
sub
daa
sbb
aas
mov
xor
add
xor
fsubrl
push
in
iret
mov
ja
push
cmp
test
incl
test
js
add
pop
movsl
xchg
cmpl
movsl
add
cmpsl
cmp
add
mov
arpl
popf
jp
dec
ficoml
stos
js
xchg
insb
push
inc
add
mov
inc
add
repnz
mov
mov
xor
repz
das
pop
cmp
sub
dec
add
xchg
stos
or
addb
fwait
mov
sahf
hlt
cmp
aaa
jl
and
rcll
shl
adc
sarb
and
jmp
adc
xor
jnp
outsl
iret
mov
pop
add
add
popa
mov
add
push
out
jne
sahf
and
add
in
mov
mov
jo
add
and
mov
das
out
add
out
dec
push
loopne
add
int
fldt
mov
mov
std
add
rcr
dec
pop
int3
mov
jno
les
aas
or
subl
mov
shr
add
inc
scas
sub
addb
lahf
cmc
push
xchg
leave
mov
cmpsb
push
jae
jmp
cmc
mov
daa
fcomip
add
inc
xchg
flds
addr16
shl
xor
cmp
pusha
cmpsl
add
loop
pop
xchg
in
arpl
mov
mov
add
mov
and
inc
dec
cmpsl
xchg
jns
shll
fisubrl
xchg
add
pop
lods
sti
cltd
jno
sbb
cmp
sub
push
addr16
mov
jo
sub
pop
cld
out
mov
add
xchg
sbb
incl
sbb
out
addr16
out
outsl
mov
add
into
add
sbb
mov
fs
fwait
push
xchg
sub
roll
cld
mov
mov
add
cmp
lcall
dec
sbb
out
insl
push
sub
add
mov
cmp
lock
incb
and
adc
add
aam
pop
push
ss
add
out
out
and
add
mov
ficompl
mov
ja
pop
inc
scas
pop
and
xchg
in
outsl
add
xchg
jmp
cwtl
sarb
add
cld
call
jae
add
add
pop
push
jle
add
mov
adc
in
sarl
shlb
add
pop
inc
hlt
xchg
pusha
jmp
fists
insl
fcoms
dec
mov
std
int3
cmp
movaps
pusha
add
lret
add
int
scas
out
adc
add
or
add
fistl
cmp
lock
push
ror
test
cmp
fists
add
push
xlat
cmp
add
mov
add
rcrb
mov
jge
and
inc
leave
gs
jbe
fs
repz
ret
and
mov
add
mov
mov
sahf
notb
ret
push
stos
push
loopne
add
incb
jb
or
sub
sbb
addr16
add
stos
imul
adc
sbbb
add
sarb
dec
mov
and
jb
jnp
gs
sbb
adc
push
mov
pop
xor
pop
fldenv
scas
add
lods
ret
inc
sbb
add
mov
outsb
pop
jge
sub
cmp
mov
lea
inc
rclb
loop
roll
pop
mov
jnp
pop
or
fs
idivb
sbb
push
sbb
mov
testb
adc
pop
stos
fdivrl
cmp
add
into
mov
aam
leave
push
add
test
mov
jae,pt
or
sar
sbb
and
les
push
sbb
mov
adc
ljmp
pusha
jb
push
sub
adc
test
cmp
dec
sbb
mov
sbb
or
jle
add
mov
out
jns
fidivrl
movsl
popf
sbb
cld
sub
mov
imul
shl
int3
fwait
lea
stc
add
or
add
pop
pop
out
xorb
dec
mov
xchg
insb
insl
paddsb
mov
add
sbb
push
add
pop
stc
hlt
pusha
jl
repz
mov
insb
add
aam
xchg
stos
push
ret
dec
xchg
cld
and
or
je
lods
into
add
ss
adc
sub
lods
fimull
dec
push
mov
shlb
loopne
sbb
jmp
jae
cmpb
out
mov
mov
mov
add
xchg
inc
add
mov
stos
pop
pop
cmp
popa
add
xchg
jg
xlat
mov
inc
add
push
inc
mov
lahf
mov
js
sbb
outsl
clc
add
sub
ffreep
xor
lahf
mov
cwtl
ss
jnp
enter
add
cmc
rcrl
sbb
mov
dec
add
dec
sub
or
stos
xchg
pop
mov
xor
cmc
dec
add
sub
pop
cmp
adc
xchg
int3
jb
sahf
and
jge
lret
shll
outsb
dec
inc
inc
sti
mov
add
cmp
in
lret
jnp
pop
adc
mull
mov
dec
dec
add
and
add
data16
inc
sub
and
icebp
lods
les
push
add
aaa
sbb
jo
popf
jno
loopne
mov
sbb
push
pop
or
in
ja
jmp
aas
and
popf
cmc
arpl
adc
int
and
or
and
gs
ret
push
sbb
sub
mov
bound
cmc
cld
movl
add
sub
pop
pop
clc
das
loope
sbb
outsb
mov
mov
sti
dec
scas
push
dec
add
push
jl
lret
xchg
cmp
inc
add
push
shrb
dec
xlat
subl
and
outsb
enter
or
call
sbb
jg
sbb
jb
js
xchg
mov
add
xor
add
mov
into
xor
sbbb
aaa
fdivr
inc
push
and
or
and
mov
aad
mov
mov
fidivs
add
jns
inc
repnz
pop
xchg
jnp
or
xor
sbb
add
ficompl
push
sbb
xchg
add
pusha
movsl
mov
ljmp
push
es
test
xlat
jp
jle
add
or
sti
and
imul
xchg
shlb
in
push
or
push
sub
mov
push
fdivl
sti
or
icebp
addr16
adc
jle
ret
pop
mov
in
jmp
xor
dec
add
push
adc
icebp
mov
add
lret
in
add
xor
jmp
jl
or
sbb
addb
xchg
scas
pop
pop
mov
sbb
fwait
mov
stc
push
aad
jnp
add
mov
adc
jg
fisubrs
dec
or
add
lock
test
jae
stos
aad
jbe
mov
cmp
ljmp
adc
jnp
mov
mov
fdivrs
jno
fs
add
cmp
push
mov
xor
sbb
imul
jecxz
int3
enter
and
loope
inc
lock
data16
sti
lods
mov
cmp
mov
pop
mov
scas
push
sahf
sbb
pop
add
mov
xor
jg
icebp
cld
ja
jne
dec
sbb
mov
pop
in
dec
pop
in
rclb
cli
jae
adc
and
movl
inc
push
add
ljmp
pop
das
fucomi
das
jg
sbb
jecxz
xor
xor
out
leave
test
add
js
roll
jbe
scas
movsl
ret
push
and
stc
insb
fs
pusha
jnp
cmp
icebp
inc
xchg
mov
mov
mov
js
lock
dec
lret
je
shrb
add
loop
sbb
les
rclb
mov
sub
and
cmpl
sub
xchg
jbe
fld
shlb
cli
cltd
in
ljmp
in
std
popa
sbb
ja
iret
jg
add
mov
add
or
movb
jno
dec
mov
int3
add
jmp
cli
push
push
mov
jnp
leave
and
into
cli
add
and
jns
cmpsb
add
insb
out
jbe
xor
add
push
mov
fs
shll
xor
cmp
mov
divb
mov
js
test
push
jae
adc
sahf
mov
out
movsb
sub
mov
ficoml
jmp
add
pop
mov
pop
ret
mov
repz
jl
mov
mov
jnp
add
ja
add
cwtl
inc
xchg
in
sti
sbb
mov
inc
cld
stos
jg
xor
and
out
xchg
dec
add
jae
addb
fidivrl
mov
add
add
ja
cwtl
pop
sbb
popa
adc
inc
fisubrs
out
or
mov
sbb
and
test
fnstenv
mov
cmp
sub
inc
sbb
in
fildll
out
sbb
out
xchg
xor
push
cld
inc
rclb
add
fcompl
std
jmp
adc
add
pop
xor
movsb
add
popa
pop
je
mov
or
ja
push
xchg
lods
dec
test
ret
mov
setbe
jnp
mov
lret
pusha
add
xor
loop
cmp
mov
jle
jp
lea
add
pslld
cld
imul
jbe
insl
push
mov
push
subb
mov
jl
mov
das
in
xchg
pop
sub
lds
and
int3
sti
xor
das
clc
sbb
gs
rcll
ret
bound
and
stc
fldln2
orl
nop
rcr
adc
jno
ret
popf
mov
mov
and
fwait
add
in
ds
ficoml
ljmp
lock
sbb
in
mov
fs
dec
or
sub
ja
dec
mov
mov
and
fwait
mov
sbb
cmp
cs
fs
jl
nop
inc
xlat
mov
jecxz
dec
add
jo
loopne
stos
and
mov
adc
add
push
mov
add
pop
jns
icebp
or
lret
and
daa
and
cwtl
push
xor
sub
xchg
insl
mov
add
aad
test
daa
mov
jns
pusha
outsl
jle
mov
ss
dec
iret
sbb
fadds
enter
xor
js
inc
mov
imul
iret
fsub
sub
cld
ret
inc
cmpsl
sahf
cmp
incb
jns
aas
mov
mov
xchg
dec
or
add
jnp
pop
hlt
pop
imul
mov
fsubrs
dec
test
sub
mov
cmp
fstpl
jl
xlat
jg
lret
and
pushf
call
add
lahf
jno
add
shll
add
loop
mov
int
add
ss
pusha
add
nop
mulb
xor
mov
cmc
stos
mov
inc
sbb
lahf
addl
shrl
mov
jmp
fdivs
add
stc
sub
daa
dec
and
or
add
cmp
push
hlt
push
dec
movsbl
mulb
xchg
mov
cmpsl
aas
add
xchg
mov
xor
subb
add
rep
insb
xchg
lcall
test
xchg
jmp
and
jbe
mov
pop
xor
xor
push
add
jae
das
jnp
cmpsl
popa
aam
scas
aas
push
cli
movsb
xchg
add
scas
or
mov
hlt
or
lods
dec
add
mov
push
ret
cmpsb
cmp
mov
add
sub
out
imul
fiaddl
pushf
icebp
pop
add
dec
adc
xchg
cli
out
jl
jg
push
lcall
insl
add
xchg
sbb
sti
cmp
push
jp
add
shrl
daa
xchg
mov
enter
pop
sub
add
in
inc
xor
adc
add
jecxz
jmp
add
out
sti
repnz
add
adc
in
inc
sbb
inc
sbb
cmovo
popa
test
add
xchg
inc
add
sub
adcb
and
mov
sbb
daa
cld
xchg
subb
sub
push
or
mov
mov
sti
insl
loope
scas
addr16
sub
movsb
nop
pusha
ss
or
addl
test
sub
arpl
jnp
idivb
fstps
mov
lahf
adc
jl,pn
xor
pop
aas
inc
push
std
pop
xchg
loope
movsb
add
add
mov
sbb
movsl
xchg
pop
add
add
pop
jo
mov
in
cmpsb
mov
inc
pop
stos
push
cld
insl
ds
xor
cld
add
mov
aam
sub
pusha
add
enter
xchg
lods
insl
add
sub
mov
lret
xor
in
cmp
rclb
jns
popa
add
sub
pop
and
pop
pop
fs
xchg
test
cltd
add
enter
push
add
add
jno
and
mov
into
lea
pop
adc
pusha
jnp
sub
testl
ja
pop
iret
mov
sbb
add
out
sub
dec
push
inc
cli
loopne
add
sarl
mov
jge
inc
or
repz
add
rcl
push
xorb
push
and
mov
mov
inc
cmp
hlt
xchg
ds
mov
dec
add
sarl
loopne
pop
inc
cmp
sub
cld
xor
fsubrl
add
mov
xchg
jl
movsl
jmp
jae
enter
push
out
mov
or
roll
repnz
push
lock
dec
xchg
add
ret
scas
mov
jg
jne
stos
mov
lds
mov
decl
push
add
mov
in
ret
sub
add
jl
inc
cmp
out
fstpt
xchg
mov
add
pop
mov
out
fisttpll
add
clc
repnz
xor
push
iret
dec
cwtl
aas
into
sub
inc
sbb
fwait
lock
sub
pop
add
insl
mov
push
pop
pushf
pop
scas
notb
ficoml
addr16
xchg
or
mov
nop
push
popf
cwtl
lods
dec
add
sbb
cmp
inc
mov
or
lea
jecxz
adc
xchg
dec
pop
cld
outsl
mov
or
cld
cli
test
and
sub
mov
enter
and
ja
int
add
gs
je
aam
leave
addr16
or
int
jb
nop
add
and
lcall
cld
mov
stc
pusha
fxch
and
lds
xor
xchg
sub
or
push
dec
or
jb
js
popf
add
adcl
cmp
aaa
push
inc
les
call
jne
jbe
mov
mov
add
sti
jnp
imul
pushf
cmpsb
es
outsb
add
jnp
ss
and
jne
je
push
inc
cmpl
pop
jo
data16
decb
cmc
aam
or
fsubrl
add
test
daa
test
pusha
push
add
pop
cmp
call
in
in
dec
roll
test
movsb
je
jmp
insb
jl
ja
shrb
nop
pop
cmp
xor
jno
ljmp
push
dec
aam
add
rcrb
cmp
xor
mov
jp
add
inc
add
mov
sarb
adc
inc
xor
sub
fidivrs
add
leave
enter
add
xor
jl
gs
or
add
push
push
xchg
adc
push
stc
inc
jnp
fldenv
pusha
push
add
loope
ret
xor
or
sub
loope
add
ljmp
cmp
and
mov
adc
sbb
out
add
test
shrb
or
mov
cmp
test
adc
sbb
into
xchg
pop
pop
adc
test
sub
add
mov
int
adc
add
sti
and
into
xchg
cmp
push
dec
test
add
jmp
movl
loope
cld
sbb
cmpsl
sbb
jb
in
stos
mov
add
lods
cltd
es
or
xchg
mov
dec
mov
ss
outsb
je
dec
pop
and
out
xchg
add
mov
aad
add
in
inc
or
push
cmpsb
pop
mov
pop
add
cmp
add
xchg
insl
aad
jne
call
jo
ret
add
shrl
stc
repz
fstps
add
mov
cmc
sbb
out
add
xor
pusha
xorb
sbb
sub
push
fs
outsl
mov
sub
or
dec
loopne
xor
testl
repnz
adc
jb
test
and
daa
dec
mov
movsl
sbb
mov
push
mov
push
add
dec
loop
imul
fiaddl
cld
lcall
add
sbb
dec
popf
lods
cltd
add
mov
or
test
add
loop
and
add
cli
push
xchg
insb
pusha
add
out
push
clc
or
std
add
sbb
cwtl
insl
cmc
fistps
add
jmp
dec
cmp
mov
pop
popa
push
pop
add
fadds
movsb
push
add
es
cmp
and
add
jp
push
pop
sub
jmp
fcoms
add
fwait
cmp
out
lahf
add
shlb
mov
adc
or
dec
stc
jecxz
inc
mov
shrl
mov
mov
mov
fisubl
jbe
aaa
push
and
loope
jne
repz
sahf
ss
mov
mov
add
pop
push
outsl
xchg
jns
add
popf
cmp
cltd
sbb
add
add
js
dec
jmp
add
outsb
sub
cmp
dec
push
xor
das
das
fidivrs
jg
dec
shl
adc
mov
and
jl
lahf
push
cmp
adc
mov
push
repnz
cld
ljmp
ss
mov
jl
jnp
lret
adc
cwtl
add
ja
sti
js
add
fwait
div
xchg
cmp
fs
pusha
xchg
dec
mov
cs
inc
inc
call
sbb
test
lahf
clc
cli
loop
add
orl
enter
xor
jo
xor
stc
cmpsl
ret
add
fidivrl
lcall
les
add
mov
mov
xor
add
and
jge
test
ljmp
push
ds
push
cmp
imul
cld
xchg
fsub
sarb
or
add
pop
dec
xor
ret
push
sbb
add
daa
dec
mov
jl
dec
push
xlat
imul
cli
inc
add
stc
xor
inc
dec
rclb
ja
add
hlt
jp
sarl
xchg
xchg
cmc
xor
add
mov
loope
xchg
data16
repz
popa
add
pusha
pop
outsl
fistps
shr
mov
add
incl
xor
add
fdivrl
lea
fidivs
sti
loopne
rcrb
movl
push
dec
dec
sbb
jl
loop
mov
data16
mov
mov
clc
mov
pop
pop
mov
and
cmpsb
sub
repnz
add
imul
xor
dec
jl
ljmp
ss
sub
imul
icebp
gs
out
les
movsb
pop
sbb
dec
inc
jmp
add
cmpsl
dec
add
or
lea
push
mov
xor
test
or
test
daa
loop
stos
push
fcmovbe
add
std
in
and
mov
cld
mov
outsb
stc
jnp
add
jmp
mov
ljmp
mov
sub
mov
push
dec
stc
insl
or
add
shrb
xor
iret
inc
xlat
loopne
add
lahf
jns
int3
loope
lcall
shll
add
loop
mov
mov
sbb
pop
add
jne
into
mov
jecxz
inc
add
das
sbb
xor
add
mov
insl
sbb
sbb
push
stos
add
fimull
inc
cmp
jo
repz
pop
loope
add
cmp
jnp
andl
adc
into
push
push
lahf
add
movsl
mov
xlat
add
les
jne
jecxz
imul
or
add
jnp
outsl
addr16
mov
mov
jns
inc
or
adcb
lcall
mov
add
xchg
jo
icebp
xor
call
add
iret
or
xadd
std
insb
and
je
clc
adc
jo
adc
jns
scas
insl
lcall
jnp
test
stos
mov
add
scas
stos
mov
loope
add
adc
jp
dec
dec
test
das
xchg
jne
add
adc
out
shlb
add
fs
cltd
mov
dec
cltd
sbb
mov
mov
or
or
es
out
int3
sbb
aas
add
test
sbb
inc
mov
test
jecxz
or
jnp
cld
or
lea
dec
in
data16
add
add
mov
ret
inc
add
push
push
rorl
test
mov
das
nop
pop
add
jne
cmp
xchg
insl
xchg
add
dec
clc
dec
test
sbb
hlt
adc
add
icebp
loopne
leave
int
add
lcall
cmc
repnz
movsl
sbb
push
pop
add
leave
inc
xor
xor
sub
mov
in
add
cmpsb
shll
and
movsl
outsl
test
pushf
sub
add
in
xchg
push
add
push
ja
cmp
movsl
shll
push
je
mov
pop
sub
cld
sbb
pop
rcr
mov
lock
in
push
push
lcall
cmp
mov
cmp
cmpsl
fs
xchg
add
adc
dec
add
add
cmp
ss
sbb
xor
repz
xchg
lcall
ret
add
call
insl
push
dec
sbb
pop
push
or
add
jmp
jge
add
xor
adc
sub
fisubl
xor
pop
mov
pop
call
mov
inc
cmp
aas
aaa
cs
dec
sbb
inc
pop
fistps
mov
jge
push
mov
movsb
xor
pop
jo
sub
pop
mov
imul
cmpsb
adc
pop
cmpsl
add
inc
lcall
cmp
pop
xor
xor
mov
cs
mov
adc
add
and
daa
xor
mov
fidivrl
sub
cld
mov
pop
fdivr
xchg
cmp
xor
push
inc
jg
push
std
push
fldl
lret
jle
inc
add
xor
xor
add
dec
pop
dec
add
lret
jmp
imul
das
movsb
lret
xor
push
mov
sub
std
mov
mov
sbb
rorb
mov
ret
adc
sbb
aaa
adc
ja
or
mov
pop
fcomip
add
loop
in
push
sti
add
jb
jo
jge
dec
add
cmpsl
mov
mov
push
mov
fnsave
cmp
inc
in
fsubrs
jle
mov
sbbb
or
cli
imul
iret
pushf
out
jnp
imul
xor
mov
cmp
jo
inc
jne
mov
repz
add
push
lods
add
rcrb
enter
sub
jmp
mov
jns
decb
aad
and
lea
or
jge
out
leave
testb
adc
dec
add
and
sbb
addr16
in
add
mov
insb
add
ds
dec
mov
test
mov
lods
jnp
jae
jne
push
add
aam
inc
add
cmp
xor
push
xor
add
addr16
movb
mov
dec
vmovups
fadds
leave
or
add
imul
add
sarb
jbe
sbb
cltd
pop
fisubrs
lret
es
pop
ds
add
mov
sub
mov
lret
sub
add
pusha
shlb
mov
mov
inc
xchg
das
push
adc
mov
cmp
scas
add
fs
pop
lret
fiaddl
test
insl
daa
push
cmpsb
jecxz
pop
xchg
jnp
and
sbb
test
jne
xchg
stc
aam
add
push
sti
cmp
out
mov
fnstenv
lahf
push
mov
loopne
push
dec
add
pop
cmpsb
icebp
push
xchg
imul
dec
or
mov
stos
dec
push
fcmovnu
xchg
mov
stc
push
aas
add
cmpsl
in
or
test
or
push
jne
outsb
mov
movb
in
jmp
fistpll
cmpsb
or
loope
cmc
das
mov
jae
sub
test
sbb
adc
mov
je
std
mov
add
jp
xor
jno
xchg
lock
stos
jae
xchg
adc
sbb
fistps
adc
lods
push
mov
add
in
ret
lock
pop
addr16
inc
xor
and
adc
and
sti
ret
outsl
or
adc
fs
adc
in
cmp
dec
adc
popf
add
mov
xchg
add
pop
data16
dec
add
imul
xor
pop
xchg
xchg
add
jns
pop
add
sub
add
sbb
hlt
xor
lods
mov
daa
jl
cmp
adc
inc
in
inc
and
cmp
je
sti
push
int3
cmp
and
enter
sbb
test
jge
mov
lcall
callw
dec
mov
mov
lods
int3
out
mov
stos
fidivl
mov
xor
aas
ret
dec
push
xor
jne
loop
or
inc
data16
xor
dec
or
sbb
mov
fcompl
add
gs
repnz
outsb
dec
in
call
jl
sahf
movsb
std
lret
jnp
cld
leave
push
jecxz
test
rorl
mov
in
out
inc
das
add
xchg
aas
int3
addr16
mov
cli
mov
ret
and
mov
add
loop
leave
xchg
inc
outsl
push
nop
orb
adc
push
pop
or
lods
add
push
or
lds
dec
mov
mov
mov
add
addr16
inc
mov
pop
repz
dec
ja
cs
aas
add
or
push
push
loopne
pop
popa
jge
add
inc
div
into
cli
mov
dec
add
and
add
sti
cmp
inc
pop
decb
add
pop
loopne
andl
xchg
pop
stos
add
in
mov
lea
mov
loop
jl
cltd
dec
pop
jmp
dec
lods
in
add
enter
mov
jnp
loop
jmp
popl
out
mov
pushf
inc
jne
sub
inc
xchg
adc
insl
data16
cwtl
es
jl
sbb
xchg
or
arpl
outsb
cmp
jecxz
xchg
or
add
cld
pop
bound
mov
pop
add
xchg
inc
jbe
fiadds
das
push
xor
mov
push
psadbw
iret
cli
daa
adc
jbe
test
add
adc
mov
add
push
mov
mov
add
divl
cmp
jb
sar
mov
arpl
pop
ret
xor
or
jle
xchg
cltd
aam
fimuls
out
out
sub
in
jmp
popa
inc
add
push
ficomps
addb
pop
dec
inc
clc
aam
inc
jns
in
or
or
inc
add
stos
and
mov
out
mov
inc
testb
in
jae
mov
jl
add
adc
inc
inc
pop
cwtl
add
mov
mov
push
xor
or
in
cs
cmpsl
cmp
jl
cld
test
push
into
add
incb
jo
push
jl
or
fbstp
xor
sbb
fsubr
add
lods
xchg
mov
dec
out
loop
enter
inc
push
shlb
test
mov
add
lea
xlat
ja
rolb
ret
add
add
cmp
sub
push
xchg
mov
scas
inc
push
add
xchg
aam
dec
xorb
mov
fldenv
scas
stos
dec
mov
or
repz
push
sub
push
dec
test
and
sub
and
add
out
mov
mov
mov
lods
xchg
adc
test
push
addl
adc
xor
add
mov
shll
aas
jge
dec
mov
xor
loop
stos
jns
add
lcall
insl
outsl
or
sbb
addr16
inc
xchg
and
out
inc
xchg
dec
pop
add
cwtl
adc
mov
fsubp
decb
addb
dec
nop
xchg
jge
sub
fidivs
outsl
mov
roll
pop
mov
int
cld
int3
ret
data16
call
pop
inc
push
mov
xor
dec
xor
add
adcl
jnp
xchg
sub
fnstsw
in
add
shll
adc
jp
test
add
adc
addb
push
and
jecxz
mov
xchg
add
adc
pop
dec
out
add
mov
das
pusha
dec
in
xchg
rcrb
pop
sub
jl
sbb
fisubl
inc
or
dec
pop
or
in
or
rol
icebp
dec
jns
mov
repnz
push
xchg
xchg
js
test
jl
call
or
jne
push
movb
les
inc
test
adc
cmp
filds
or
add
call
test
fcmovb
push
lea
or
pop
icebp
and
in
jo
mov
shll
cmpsl
add
cmpsb
lret
fisubrs
lret
in
ret
dec
mov
push
sbb
cld
not
jge
cmpsl
cli
mov
pop
add
jnp
call
sbb
lret
and
and
pop
mov
mov
je
scas
mov
popa
outsl
xchg
scas
add
cli
stos
xor
xchg
aam
push
sbb
adc
add
les
pop
cmp
push
das
jne
mov
add
repnz
mov
cmpb
cld
aam
prefetcht2
push
mov
adc
sub
inc
mov
insb
jo
jnp
cmp
sbb
jnp
add
push
or
add
dec
push
outsl
pop
int3
jns
lret
xor
outsb
add
push
pop
dec
jp
mov
add
pop
dec
daa
dec
or
pop
or
cmp
add
inc
rcr
xor
inc
or
sti
cmpsb
cld
addr16
loope
or
mov
lcall
int3
nop
fnstcw
add
or
daa
cmp
fwait
add
addl
add
cwtl
and
add
out
rolb
sub
mov
ss
add
mov
mov
sbb
lahf
dec
cld
ds
faddl
mov
pop
sub
pop
sbb
clc
das
jne
data16
pop
sarb
mov
inc
pop
popf
mov
or
sbb
mov
cmp
push
sbb
xorl
inc
shll
popa
or
xor
mov
idivl
andb
int
subb
cmp
lds
xchg
add
rorb
sbb
or
ffree
outsb
and
out
popf
fdivl
fistl
out
add
out
popf
mov
add
cmpsb
pop
adc
in
sbb
sbb
jno
hlt
xchg
add
in
js
sub
ljmp
xor
sub
inc
pop
mov
mov
add
lret
or
out
jle
arpl
add
cmp
movsl
cmc
lea
fdivs
fucomi
jns
pop
lds
jae
pop
inc
jecxz
sub
cmc
out
in
xchg
add
cmp
and
mov
or
lret
xor
or
test
add
imul
repz
popf
and
orb
sub
jbe,pn
insl
addl
aaa
xor
sub
add
push
test
sbb
loopne
sbb
das
es
sbb
inc
sbb
jl
xchg
std
mov
xchg
jg
rcrb
movsl
sbb
sbb
mov
lea
sub
inc
add
add
sahf
jbe
and
mov
shll
dec
mov
adc
jecxz
test
movsl
sbb
add
add
xchg
dec
or
jae
xchg
fcmovb
adc
mov
jl
add
sub
pop
rcrb
fisubrl
fbld
add
xor
jmp
lock
add
outsb
mov
mov
mov
push
lods
pop
sbb
push
data16
sahf
test
add
aad
mov
inc
imull
in
sub
filds
cmp
popf
fcomps
pop
fwait
push
xor
lock
cmc
xchg
add
sub
ret
xchg
add
push
mov
jmp
andb
mov
xor
cmp
mov
push
out
jge
stc
jno
dec
lock
xchg
add
in
ja
shrl
loope
or
add
mov
mov
test
div
push
and
lea
or
add
in
outsb
stos
sbb
jns
popf
add
add
xlat
jno
rorb
arpl
out
addr16
mov
mov
pusha
or
lahf
cli
jecxz
in
movb
gs
cmc
jmp
leave
push
sub
fstpt
push
pop
std
and
jnp
lock
fwait
aam
mov
add
inc
int
mov
xchg
andl
sub
sbb
icebp
nop
int3
mov
add
push
adc
push
cld
inc
sub
dec
aad
sub
out
jo
es
dec
fiaddl
repnz
popa
fs
roll
nop
add
out
shrl
sub
cld
inc
mov
sbb
ret
xor
test
jg
xor
and
add
lods
aas
cli
jl
test
sti
ds
sbb
or
xchg
cmc
and
mov
cmpsb
add
pop
cmp
test
jno
and
idivw
fs
xor
jmp
push
sbb
cltd
mov
sub
movsb
add
nop
sub
out
xchg
mov
leave
sahf
pusha
add
lods
xor
add
add
sbb
jl
jo
adc
stc
jns
pop
cmp
cmp
dec
sbb
add
call
add
push
fdivr
lds
add
add
jmp
dec
add
hlt
and
or
fwait
mov
sbb
push
add
xchg
dec
iret
fnstsw
pusha
cmp
add
xchg
loope
cmp
sbb
jbe
daa
data16
add
sub
mov
aam
cs
test
lret
dec
int3
clc
xchg
push
add
lea
mov
sbb
aad
pusha
out
push
push
sbb
or
stc
add
xchg
inc
out
cmp
notb
not
sbb
add
sub
add
sarl
loop
mov
push
sbb
pop
cmpsb
clc
xchg
dec
add
xor
sub
push
mov
or
sbb
sbb
cmp
or
sbb
dec
pop
push
add
sarb
add
clc
sbb
outsl
inc
jle
pusha
hlt
sbb
int
mov
add
test
jnp
push
incl
mov
scas
push
dec
add
push
and
cmp
shrb
ficoml
imul
jmp
sub
sbb
pop
gs
mov
icebp
int
xchg
xchg
or
jns
sub
sbb
mov
iret
adc
jl
mov
jo
int
inc
sbb
add
pop
fistps
in
add
bound
adc
mov
add
outsb
adc
sub
std
pop
out
jo
jns
jle
cld
cmp
add
mov
aas
inc
or
sbb
cmc
lods
addb
xor
lret
outsb
test
jnp
sahf
test
cmp
cmpsb
and
push
cvtdq2ps
cmp
cli
test
or
xlat
out
mov
add
mov
xchg
jnp
cmpsb
jg
mov
sub
fdivrs
xor
sub
in
add
sbb
scas
push
rcrb
int
ss
dec
icebp
aas
jmp
cld
nop
sti
insb
repnz
or
in
test
xchg
stos
add
pusha
aaa
enter
mov
mov
ret
sub
fadds
iret
add
ljmp
and
movsl
sub
push
adc
jns
xchg
es
jo
jno
pop
mov
ret
jle
and
add
or
inc
add
mov
xor
dec
jo
fbstp
dec
jmp
add
xchg
mov
add
fistpll
add
and
mov
add
lret
and
jl
mov
xchg
lret
ficomps
lahf
and
xor
push
adc
pop
ja
flds
add
adc
pop
add
mov
xor
out
mov
add
ljmp
adcl
jnp
cmpsl
mov
lods
jl
scas
flds
mov
roll
lds
cld
je
dec
dec
das
sbb
inc
pop
pop
jmp
shll
cmp
and
mov
sub
ret
add
and
sub
pop
push
outsb
repz
xor
add
xchg
add
sub
add
cwtl
sbb
clc
fs
push
dec
imul
pop
adc
into
mov
pop
jae
pusha
sarl
push
movl
loope
pop
pop
mov
add
fistps
mov
push
shrb
faddl
arpl
movsb
adc
and
inc
push
dec
dec
cli
pop
push
pusha
insl
roll
or
inc
mov
add
jno
enter
addl
ljmp
add
repnz
in
sub
pop
stc
sub
add
xor
dec
mov
xchg
ss
push
lods
lea
mov
dec
es
in
cmp
inc
mov
fcoml
mov
xor
push
add
pop
orb
or
mov
aam
neg
stos
addl
dec
sbb
add
imul
adc
add
add
jae,pn
es
adc
ljmp
and
xor
ret
cmp
pusha
mov
dec
add
imul
data16
and
mov
rclb
push
dec
iret
push
or
add
arpl
inc
cmpsl
lock
pop
sub
cli
adc
push
dec
testl
stos
adc
xchg
xchg
es
dec
pop
flds
xor
xchg
out
mov
sub
inc
inc
int3
push
or
ss
loopne
sub
or
pop
lcall
jg
add
stc
in
add
mov
mov
adc
sbb
jns
xchg
mov
faddl
xor
mov
js
sbb
mov
xor
xchg
mov
push
pop
loopne
add
and
jmp
jle
jns
fnstenv
fdiv
or
sub
ja
push
stos
clc
pop
adcb
jnp
ret
jne
xchg
dec
pop
sub
or
jnp
mov
addr16
fidivrs
lret
in
popf
cld
add
pop
add
pop
lcall
lea
ja
jns
add
movb
adc
lahf
jecxz
call
mov
mov
sbb
jns,pn
and
and
loope
clc
popf
int
insl
or
pop
and
jae
pop
jne
mov
or
arpl
lahf
rolb
pop
or
lea
idivl
xchg
jp
jg
add
add
mov
lods
add
std
push
inc
gs
ret
sbbl
call
addr16
cmpsb
mov
sub
add
andl
jmp
mov
xchg
test
push
imul
add
mov
inc
sti
cld
sbb
pop
xor
mov
in
and
fwait
push
push
add
jne
or
add
inc
add
push
jle
add
pop
jo
add
or
das
faddl
mov
imull
push
cmp
add
lret
jae
adc
add
scas
call
imul
add
add
lds
xchg
adc
cli
add
ss
pop
mov
repnz
lods
pop
add
popl
cwtl
inc
imul
mov
jbe
sbb
jp
xor
hlt
jns
sbb
mov
lock
cltd
dec
enter
jmp
xor
icebp
or
popa
push
add
in
sbb
pop
movsb
add
stc
cld
dec
jge
shr
arpl
push
sti
add
jecxz
mov
pop
xchg
dec
add
aas
pop
cmp
sbb
add
adc
mov
xchg
add
int
in
stos
jge
add
jae
in
inc
sbb
lds
loopne
add
decb
adc
add
mov
push
mov
in
jne
nop
sub
cmp
sbbl
cmp
mov
add
jb
push
xorl
ss
stc
test
mov
addl
sbb
xchg
out
jmp
push
add
mov
xchg
ja
stc
push
add
dec
jmp
lahf
add
inc
pop
adc
sbb
jge
or
ret
mov
lret
add
inc
mov
fiadds
jae
mov
into
jbe
add
push
xchg
inc
sub
fdivs
pop
rcrb
or
mov
out
and
mov
das
and
push
clc
orl
add
fadds
rcr
jnp
and
xor
cltd
xorb
sbb
xor
clc
add
xchg
test
add
fsubrs
std
xchg
mov
jns
or
jp
data16
in
push
xchg
dec
adc
daa
dec
sahf
test
pop
mov
imul
adc
movsb
xor
test
add
add
sbb
add
sbbb
and
push
add
js
loop
mov
in
pop
and
ret
sahf
rolb
imul
into
push
jp
or
es
fbstp
add
mov
add
xchg
cmp
sbb
enter
ret
loope
jns
and
cmc
stos
and
add
mov
add
xor
stos
mov
add
xchg
fucom
add
cmc
jbe
jl
movsl
add
inc
jo
nop
sarl
xor
fsubrs
add
je
mov
in
hlt
jmp
popa
sbb
jne
test
mov
mov
lahf
or
iret
lea
jmp
lods
add
mov
mov
add
lods
cmp
mov
lahf
pop
sub
add
jmp
xchg
add
cwtl
mov
add
aam
arpl
xchg
pop
inc
std
nop
mov
sub
out
cmp
jmp
jno
insl
insb
jmp
mov
pusha
or
add
jle
fsubs
inc
cmp
add
and
mov
hlt
cmp
or
mov
inc
sahf
insb
add
test
mov
or
cs
add
sbb
cld
xchg
arpl
fld
mov
lahf
imul
faddl
sbb
pop
xor
pusha
ltr
loopne
jbe
adc
sti
in
out
scas
add
or
add
lcall
or
xor
inc
pop
int3
pop
add
pop
xor
popf
stc
jecxz
mov
out
sub
sti
add
xchg
xchg
enter
test
sub
jge
loopne
pop
xor
daa
push
or
and
mov
test
outsb
int
lds
add
or
push
jmp
sub
mov
shrb
cmpb
mov
pop
xchg
xchg
dec
cmc
mov
cld
cli
adc
and
sti
gs
add
ret
cmc
iret
adc
adc
push
pop
mov
lea
jbe
or
inc
add
push
mov
add
bound
dec
loopne
add
lret
and
add
icebp
shll
adc
clc
test
xchg
rcrl
into
repnz
scas
loope
inc
jnp
mov
inc
sbbl
add
jae
add
pop
adc
shll
mov
cmp
jns
mov
movsl
sub
pop
ljmp
sbb
addr16
jnp
outsl
negb
push
lahf
add
fs
xchg
add
js
sub
add
shl
lea
jns
stos
jp
and
stc
add
mov
xor
jmp
mov
lods
sub
call
mov
xchg
out
jl
imul
fwait
lcall
push
int3
bnd
xor
outsl
add
inc
je
ret
push
add
cmpsb
sbb
repz
lcall
pop
daa
mov
push
push
cltd
movsl
aad
sbb
mov
add
mov
stos
ret
enter
pop
ss
aad
shll
inc
pop
add
lock
icebp
data16
mov
and
gs
jne
push
jl
filds
or
das
ljmp
jb
subl
add
sbb
xor
sahf
pop
leave
aas
std
add
jb
push
inc
adc
sti
jl
push
andb
mov
sub
add
mov
sti
add
shlb
daa
xchg
out
or
mov
dec
test
push
lds
jnp
les
cmc
jns
lock
adc
hlt
xor
inc
popa
add
cld
xchg
mov
call
test
test
ljmp
pop
ss
leave
testb
xchg
add
fsubs
pusha
xchg
jge
cld
inc
enter
sub
and
mov
adc
mov
xchg
hlt
cld
xchg
jl
gs
cld
xor
xchg
push
pop
fildl
inc
cmp
lret
sbb
xchg
mov
out
jns
sbb
lahf
pushf
lock
gs
pop
mov
add
push
cmp
std
js
add
test
sbb
outsb
xlat
jo
aad
cld
out
mov
fwait
sub
add
mov
add
pop
out
cmp
ljmp
jo
mov
or
lods
sub
fnsave
cmp
pop
xor
hlt
iret
dec
fcompl
inc
jp
adc
int
push
sti
popf
mov
cltd
cld
test
loope
pop
pop
pop
ret
jb
fdivrl
dec
lods
or
fcomp
adc
insb
faddl
xchg
add
or
ret
inc
stc
idivb
add
add
cmp
xchg
and
or
add
fiaddl
pusha
add
mov
sub
ret
inc
or
pop
test
jg
loopne
add
cmp
push
notb
add
mov
and
lahf
cmpsb
jno
int
sahf
daa
sub
mov
inc
dec
cld
jl
mov
leave
lods
push
pusha
sbb
push
and
add
hlt
sbb
add
rorb
insl
cld
cwtl
mov
mov
or
jl
add
cmp
les
lock
add
jl
lret
xchg
jmp
loop
popa
test
inc
jnp
jne
into
jbe
cld
repnz
add
es
idivl
jl
add
push
push
pop
add
ror
lcall
lods
jo
or
mov
xor
loope
rclb
jns
xchg
cmp
test
jne
cmc
pop
inc
aas
add
lcall
add
shrl
and
mov
or
pop
stos
mov
in
add
pop
std
incb
xchg
xlat
stos
out
push
dec
stos
dec
add
xchg
loopne
push
cmp
add
and
test
daa
jnp
add
repnz
mov
insl
xchg
insb
add
enter
and
cmp
mov
add
xor
add
xor
pop
aam
mov
add
jae
cmc
out
adc
mov
mov
jnp
shll
or
cld
jg
sbbl
xchg
or
mov
push
lods
mov
ja
add
push
add
and
pop
lahf
cmc
mov
sti
mov
fsubrl
inc
dec
and
leave
add
adc
add
jl
addb
outsb
pop
pop
icebp
xchg
jecxz
add
mov
outsl
jge
or
inc
scas
push
pop
pop
add
mov
mov
and
in
std
cmp
incl
jae
inc
add
in
mov
mov
jmp
shrl
cmc
dec
mov
or
fldcw
fwait
mov
jp
push
mov
xor
ja
mov
movsl
arpl
xchg
push
mov
cli
out
pop
push
xor
push
add
pop
rorb
pop
insl
push
jp
pop
dec
jno
mov
add
cmp
mov
mov
sub
inc
xlat
pop
std
cmc
dec
imul
ja
mov
data16
lret
xchg
add
stos
enter
outsb
into
add
mov
mov
sahf
inc
leave
ss
pop
add
gs
out
jno
add
xchg
pop
mov
repnz
and
lea
or
pop
jg
aad
iret
les
pop
fildl
sti
jo
xchg
pop
mov
xlat
sti
in
pop
add
lock
or
addb
lods
mov
mov
je
repz
stos
ror
mov
rcrb
outsl
adc
add
cmpsb
fisubs
das
and
mov
jbe
aad
dec
jnp
lods
add
mov
and
jp
add
adc
pop
add
sbb
xor
outsl
sahf
sbb
and
sub
xor
ss
mov
bound
pop
add
add
sbb
add
inc
push
test
mov
mov
cmp
sbb
and
lcall
ds
enter
xchg
flds
sbb
xchg
out
into
insb
sbb
bsr
mov
inc
add
fsub
sbb
testb
mov
cli
dec
jl
cmpsb
pop
xchg
test
sbb
nop
shrb
dec
or
inc
jp
push
pop
jne
pop
loop
fsubl
out
imul
in
xchg
sbb
or
test
cmc
rolb
jle
fnstcw
out
add
dec
pop
test
add
push
rolb
imul
or
mov
loopne
and
arpl
pop
enter
mov
roll
mov
push
sub
add
cmpsl
fidivl
out
mov
add
mov
pop
adc
sbb
hlt
bound
sub
cmc
test
shll
add
xor
rolb
adc
add
fdivl
cs
add
mov
testl
ja
jnp
sub
aas
insl
add
jns
push
stos
jno
jge
add
int
rcll
cli
mov
fcoml
sub
mov
or
js
add
sbb
insw
sahf
adc
cmc
andps
add
in
in
sub
add
jl
movl
cmp
ljmp
fwait
in
pop
push
sub
mov
ljmp
cmpsl
cld
dec
and
add
add
arpl
pop
cmpsb
femms
repz
or
mov
nop
sub
into
repz
xchg
shlb
cmpsl
sbb
jne
fdivl
les
sbb
sbb
outsl
add
stos
testb
xor
push
insl
lcall
add
dec
sub
out
inc
insl
add
xchg
imul
outsb
add
add
add
cs
aam
inc
or
adc
call
add
mov
incb
rcrb
pop
pop
mov
sti
fcom
sarb
sub
mov
cs
push
lret
dec
sub
cmp
out
pop
imul
js
data16
push
je
inc
add
adc
frstor
add
add
sbb
add
imul
imul
or
lret
dec
sub
outsb
insl
fdivl
lret
test
jns
sbb
or
call
add
add
and
jnp
add
push
mov
xchg
imul
insl
add
sti
fst
int
add
imul
aad
push
call
add
mov
push
repz
imul
imul
push
in
push
add
jecxz
fistl
sub
sub
jbe
sti
imul
push
add
mov
sub
or
xchg
imul
gs
stc
scas
add
gs
imul
test
xor
xchg
imul
mov
inc
add
out
rolb
add
xorl
int3
dec
sub
cmp
inc
add
bound
xor
add
or
or
imul
popf
add
lea
sub
test
or
xchg
imul
popf
add
inc
test
add
add
adc
or
aam
mov
inc
imul
andb
fisttps
daa
mov
xor
sub
pop
jge
pop
inc
mov
push
jge
add
shrb
dec
pop
aas
iret
or
hlt
inc
adc
data16
call
mov
mov
sti
inc
addr16
dec
adc
out
push
std
insl
mov
cmp
mov
or
xlat
out
adc
nop
push
or
xchg
add
add
xchg
add
add
shll
xchg
testb
pop
cmpsl
or
icebp
scas
pusha
mov
mov
push
nop
scas
addr16
xchg
repnz
xor
pop
ror
lcall
fcmovnb
sti
daa
js
sub
sub
dec
cltd
fisubs
loop
scas
fisttps
add
push
inc
jne
test
push
push
push
pop
arpl
pop
xor
cld
mov
imul
push
add
imul
test
xlat
jnp
add
lock
xorl
pushf
cmp
out
dec
pop
fdivrl
sbb
cmp
mov
call
les
lods
jle
sahf
out
cmp
daa
dec
gs
loope
and
aas
pop
add
mov
movsb
std
je
shl
xor
sbb
sub
hlt
out
xchg
ret
xchg
cld
cmp
sbb
sbb
aad
push
xchg
out
stos
mov
js
push
mov
xor
dec
add
or
out
cmp
push
ret
repz
or
adc
int3
pop
add
xlat
syscall
add
incb
movl
mov
or
xchg
imul
add
clc
test
add
repnz
or
push
inc
xchg
lds
push
int3
xor
dec
dec
mov
stos
add
inc
fwait
push
sub
mov
mov
sub
leave
xchg
out
push
loop
fisttpl
push
cli
and
xchg
xchg
leave
cli
gs
subb
inc
enter
sbb
outsl
adc
inc
dec
jo
lcall
inc
adc
in
sbb
repz
add
insb
loopne
fnsave
sbb
pushf
imul
les
pop
jmp
outsb
lret
sub
add
cli
xor
push
sub
jo
jmp
lock
and
xchg
mov
mov
inc
inc
fdiv
mov
inc
pop
sbb
ret
pop
test
sbb
cmp
jp
test
std
mov
gs
imul
sbb
add
scas
add
or
int3
dec
sub
jmp
xchg
imul
add
mov
or
sub
cli
inc
inc
out
pushf
or
add
adc
out
insb
add
in
enter
imul
jl
gs
nop
jns
or
ret
sub
lret
or
jno
jns
xor
insl
mov
mov
push
mov
push
insl
fdivp
inc
and
xchg
imul
add
sbb
cmp
cli
mov
imul
insl
push
mov
mov
cli
imul
imul
sub
data16
add
out
inc
insb
add
mov
jns
dec
lret
dec
sub
mov
dec
jg
add
sbb
add
aaa
pop
and
pop
outsl
xchg
aaa
pop
sub
adc
repz
add
fdivr
xchg
jmp
lcall
out
dec
mov
xchg
jg
xchg
sub
outsb
push
incb
cld
mov
imul
mov
jmp
xor
or
mov
inc
cmp
sbb
loopne
pop
lea
or
xor
dec
out
pop
adc
jbe
push
inc
cmp
xchg
sbb
jecxz
push
inc
repnz
gs
push
into
lret
dec
sub
mov
sub
out
imul
jl
add
fists
mov
sbb
pop
ja
adc
cwtl
arpl
add
mov
and
fwait
mov
neg
pop
xchg
push
xlat
outsb
sti
aad
lcall
in
test
inc
push
cmc
inc
mov
imul
arpl
mov
clc
lret
imul
mov
es
or
sub
inc
xchg
inc
dec
es
call
fisubs
stc
xchg
push
cltd
push
mov
jno
mov
pop
je
fnstcw
pop
inc
dec
les
sbb
cvtdq2ps
loopne
fstps
cmp
fcoml
adc
add
add
outsb
dec
jb
es
lret
aaa
mov
mov
enter
shlb
jecxz
mov
mov
pop
mov
pop
shlb
jge
inc
or
and
data16
inc
stos
sbb
dec
popf
cmp
flds
mov
and
dec
xor
jnp
pop
cmp
rcr
inc
mov
int3
aam
ret
sahf
inc
xchg
push
dec
sub
sbb
jmp
mov
cmpsl
mov
outsl
bound
and
fcmovnb
testb
sub
mov
inc
lret
or
jno
jns
inc
dec
add
or
or
sub
add
add
add
in
dec
mov
add
add
sub
mov
xchg
cmc
adc
clc
test
popa
adc
rorb
mov
fisubrs
fldt
rorl
mov
lret
or
mov
mov
adc
hlt
or
xchg
dec
sub
xchg
jge
stc
aad
test
or
in
cmp
out
pop
jge
add
dec
sub
inc
dec
add
mov
inc
mov
push
add
dec
push
add
sub
int
aad
enter
push
mov
or
mov
sub
in
fists
insl
inc
jmp
and
cmc
mov
add
inc
dec
add
in
loopne
add
mov
xchg
imul
pop
add
lret
dec
add
movsb
imul
popf
adc
lds
adc
leave
adc
leave
xchg
or
inc
add
add
push
adc
into
pop
add
sub
mov
or
jns
sbb
or
lret
mov
sub
dec
add
or
inc
pop
out
mov
add
mov
insl
not
add
cli
std
add
dec
sub
in
adc
adc
frstor
adc
imul
imul
gs
xchg
add
out
mov
add
fimull
adc
insl
movsb
repz
cmp
outsb
xchg
out
adc
jnp
aas
fistpl
mov
adc
pushf
push
sbbl
into
xchg
gs
popa
dec
lret
lock
push
dec
jb
outsb
sbb
cmp
dec
lret
cmpsb
mov
outsb
ljmp
push
mov
add
mov
es
xchg
dec
push
scas
out
iret
lcall
popa
cld
add
mov
aad
gs
mov
add
movsb
loope
leave
test
add
sbb
bound
xchg
push
jo
xchg
ficomps
shll
popf
sub
stos
sarl
pop
xchg
cltd
int3
mov
pop
add
push
lock
sarl
and
fidivrl
icebp
cli
sub
xor
stos
mov
fdivs
aas
call
idivl
sub
or
ror
pusha
pop
std
stos
push
sub
cmp
mov
shl
xor
call
sbb
xchg
xchg
and
outsb
jns
ja
push
xchg
imul
add
push
imul
imul
nop
jg
imul
or
test
push
int3
imul
imul
imul
imul
nop
ja
out
add
add
jo
add
mov
imul
sub
xchg
adc
cli
mov
mov
mov
add
xor
add
in
mov
add
and
lods
add
adc
xchg
mov
add
in
jg
gs
adc
or
ljmp
pop
push
sub
push
dec
push
cmp
xor
jno
mov
lds
and
xchg
imul
xchg
nop
adc
mov
mov
imul
mov
repnz
or
xchg
imul
add
sbb
add
in
jmp
add
jae
gs
jno
inc
lret
dec
sub
lds
mov
jbe
xchg
loop
jns
push
push
add
sub
out
cmp
add
inc
add
out
js
add
xchg
imul
xchg
gs
mov
mov
push
arpl
aas
mov
push
ret
inc
cwtl
lahf
sbb
sahf
jecxz
aas
xchg
jge
aaa
cmp
aas
cli
lcall
ja
fmulp
xor
pop
jg
dec
dec
sub
lea
xchg
pusha
movsb
enter
imulb
mov
xor
jo
push
dec
xchg
addl
push
ja
scas
fwait
dec
test
inc
arpl
call
add
inc
sub
jl
add
push
gs
imul
add
out
pop
add
xor
addl
out
gs
add
add
adc
lods
test
addr16
pop
add
push
gs
mov
out
scas
test
add
adc
cmp
jmp
clc
push
mov
outsb
fnstcw
jl
push
and
and
sub
push
dec
testb
addb
js
mov
xor
jns
faddp
fldl
push
enter
insl
fsubs
ror
lock
sub
sbb
hlt
lods
push
push
insb
cs
mov
push
or
clc
pop
cli
or
mov
leave
xchg
cli
jae
aaa
cmc
cli
xor
and
mov
sub
or
jl
jo
mov
and
add
adc
and
test
and
pusha
lahf
sub
movsb
fbld
cmp
repnz
loop
insb
and
push
inc
and
mov
add
leave
and
aaa
fldt
cmp
lods
add
cmpsb
cwtl
or
cltd
mov
fistl
xlat
adc
mov
decl
cmp
pop
add
mov
in
cmp
clc
jnp
bound
xchg
mov
fisubl
cwtl
insl
sub
mov
sar
cmp
xor
sahf
jge
push
pop
pop
mov
rcl
in
lods
push
pop
arpl
pop
es
cld
push
adc
fdecstp
sbb
add
mov
mov
mov
cs
cli
xchg
sub
fcomps
mov
sub
jge
sarb
clc
ss
mov
mov
daa
sub
sub
ljmp
lods
dec
sbb
cmp
dec
mov
out
push
and
jl
dec
cmp
scas
xor
add
es
cmpsl
mov
scas
jp
jnp
xor
adc
cmp
sub
jl
inc
adc
push
sbb
pushl
iret
pop
xchg
or
pop
push
int3
cmp
and
add
repnz
mov
repz
cwtl
add
imul
sub
insb
fiadds
add
stc
pop
add
or
aad
jmp
add
in
sbb
dec
repnz
icebp
xchg
or
jmp
pushf
sub
frstor
imul
jecxz
jbe
cmc
out
or
jae
or
or
daa
enter
roll
les
jbe
add
sbb
in
inc
jmp
call
jnp
sarl
xor
pop
xchg
add
outsb
and
jmp
push
stc
inc
dec
call
lods
jp
adc
cmpsb
add
lret
jns
cmpsl
inc
aaa
nop
adc
add
sub
dec
xor
mov
dec
sub
and
jp
arpl
inc
outsb
pop
mov
push
or
add
js
and
mov
bound
sub
xchg
daa
ficoml
add
push
loopne
add
sub
std
jle
add
add
jo
adcl
jns
mov
sub
sub
enter
incl
mov
arpl
leave
sbb
adcl
mov
mov
in
jo
cmp
subb
je
popf
add
push
aam
add
lret
cmpsl
in
into
add
xchg
cmc
aam
cmp
lahf
sub
jne
push
cltd
add
add
push
pusha
scas
add
lahf
adc
xor
lods
cltd
aaa
mov
fdivr
nop
lahf
xchg
xchg
clc
dec
sbb
insl
add
push
push
jmp
cmp
lock
aad
mov
mov
fwait
cmp
das
inc
sbb
and
cs
jno
sbb
or
mov
and
and
stos
dec
jp
inc
icebp
mov
xor
ja
adc
inc
jne
dec
push
test
dec
xor
adc
push
push
jne
movsb
inc
insb
test
cmp
xchg
and
jb
jnp
cmpsl
mov
es
cs
adc
pusha
sbbb
jle
adc
xchg
aaa
mov
xchg
cmp
sbb
lret
jns
xchg
shll
roll
push
inc
fcomps
add
sbb
jbe
daa
aas
xor
andl
xchg
imul
addb
add
and
dec
mov
int3
lea
out
push
pop
add
insl
xlat
sti
and
mov
sub
lds
jge
jns
cmp
adc
push
ret
and
mov
in
mov
movl
lea
fdivrl
mov
icebp
sbb
mov
cmp
or
jge
aas
lret
movsl
or
lock
test
mov
fsubs
mov
and
int3
pushf
and
jmp
data16
movsl
call
aad
insl
xchg
cld
into
pop
mov
stos
mov
outsl
in
push
pop
add
xor
push
jns
or
sub
add
mov
aam
aas
mov
ret
dec
aaa
sub
and
xor
push
clc
int3
mov
push
in
fmuls
test
in
aaa
cmp
cmp
cmp
mov
or
cmp
cs
dec
mov
xor
add
int3
das
std
fbld
sub
jp
fs
aad
dec
add
xchg
lea
ret
test
popf
jl
mov
mov
testb
test
dec
aad
lods
mov
pop
pop
stos
jge
mov
mov
lea
xchg
or
fwait
or
cmp
mulb
cmp
push
cs
sbb
dec
sbb
cmpl
xchg
jp,pn
jbe
lret
cmp
pop
xor
jno
and
rep
push
cmp
xor
gs
insb
jns
dec
cmc
das
mov
imul
rorl
cmp
lcall
push
mov
in
stc
adc
sbb
cmp
mov
xor
jbe
cli
xor
sbb
jns
mov
push
mov
mov
adc
scas
movsb
cmp
xor
xor
ret
enter
pushf
mov
adc
add
cltd
cmp
jnp
cmp
mov
out
inc
add
aas
jl
jg
cmpsl
mov
cld
cmp
or
jns
inc
adc
push
inc
mov
and
or
lcall
fisubl
sub
ret
fdivs
mov
xor
dec
adc
push
mov
pop
push
xor
push
ret
fimull
movsl
add
adc
or
cmp
cld
mov
pop
sub
dec
xchg
push
sti
scas
and
bound
repnz
mov
pop
adc
das
ret
cmp
inc
insb
inc
add
aam
sbb
fstpt
mov
ljmp
scas
imulb
popa
mov
mov
sub
mov
mov
ds
roll
insl
js
insb
int3
pop
popf
or
das
push
insb
cwtl
pop
mov
mov
dec
or
les
lock
lock
call
loop
cmp
lods
shrb
xor
pop
mov
clc
or
adc
jmp
aam
popf
cmp
sub
stc
ss
jns
aaa
popa
lret
ret
in
or
ret
stc
sub
mov
xchg
inc
pop
mov
fcomps
and
jns
push
mov
and
das
lds
mov
hlt
fwait
and
ret
rorb
or
mov
jae
xor
xor
jns
or
inc
pop
push
lds
add
js
lds
pop
decb
mov
daa
fs
ret
cmp
es
jbe
or
add
cld
sbb
jg
sub
mov
and
cwtl
lcall
pop
test
jae
xorb
mov
shlb
adc
cld
imul
pcmpeqw
push
sbb
ss
xor
fwait
dec
cli
mov
outsb
mov
mov
dec
mull
cli
xor
inc
xor
test
mov
out
xchg
movsb
sahf
aaa
pop
lret
or
mov
sub
mov
jo
jo
mov
lcall
xchg
pop
xor
mov
sub
cmp
mov
out
je
cmp
addr16
mov
sbb
pushf
fldcw
cwtl
fs
ret
test
push
cmp
or
in
add
xor
lahf
pop
lret
adc
xchg
mov
js
sbb
or
mov
push
ds
xchg
divl
sub
in
sti
mov
or
mov
ss
mov
test
sub
or
or
bound
out
pop
inc
fstpt
dec
out
fists
loopne
dec
fmull
sbb
shll
add
lret
inc
ret
ds
cmc
negb
cmp
pop
jmp
cli
pusha
out
xor
cwtl
xchg
cmp
jg
and
pusha
add
sbb
or
aam
dec
or
in
pop
cmp
daa
cmpb
add
lds
outsl
cmp
pop
lret
cmp
sub
mov
je
xchg
aaa
in
insb
lahf
jecxz
push
xor
lahf
repz
mov
int3
leave
jnp
adc
add
jns
dec
int
and
adc
inc
int3
and
aas
or
ret
pop
jae
lret
mov
cmp
inc
negb
int
xor
xor
jl
mov
fsubs
mov
cld
fnstenv
iret
mov
aad
mov
pop
es
jl
and
xchg
fistpl
sbb
mov
adc
add
outsb
xor
daa
add
scas
sub
cmp
xor
call
sub
jl
pop
lret
insl
scas
test
sub
and
ret
incb
xor
std
repz
in
pop
dec
xor
sbb
cmp
repz
sbb
sbb
and
cmp
and
xor
mov
mov
sub
sbb
mov
cmp
pop
lea
hlt
addr16
out
int
mov
xor
xchg
pushf
idivb
push
outsb
push
ret
ljmp
call
movsb
push
int3
jns
xor
dec
adc
push
mov
xor
cmp
in
faddl
ret
into
out
xor
push
shl
pop
addr16
xlat
sbb
ds
lcall
out
sub
add
inc
and
fsubl
adc
scas
std
movsb
and
cwtl
or
fxtract
cwtl
mov
jge
mov
sti
leave
sub
adc
out
push
out
outsl
xchg
rcrl
cmp
js
cmp
or
mov
test
inc
mov
mov
mov
jl
jg
push
sub
stc
sub
pushf
jg
sbb
std
mov
scas
sbb
and
push
xor
std
and
inc
sub
ljmp
popf
in
cmp
mov
lods
or
mov
movsl
scas
in
cmp
dec
fnsave
mov
ljmp
stc
pusha
sub
pop
xchg
and
jle
mov
fwait
add
sbb
outsl
dec
out
push
sarb
xor
jmp
cwtl
ljmp
mov
out
stos
adc
or
push
js
lods
ret
push
dec
sbb
inc
jo
sub
daa
sbb
addr16
hlt
jns
outsl
test
mov
sub
inc
xchg
jmp
jp
addr16
jns
mov
cmp
push
adc
pop
xchg
mov
mov
mov
inc
movsl
pop
fcmove
ret
push
sbb
mov
mov
gs
inc
adc
shr
mov
fcoml
and
cli
dec
add
adc
cmpsl
rep
sub
mov
mov
sub
mov
and
or
fisubrs
mov
into
fdivs
or
push
bound
fadds
movb
mov
xor
frstor
inc
stc
loope
in
stos
inc
in
sub
or
mov
in
cmpsl
push
jno
sub
lcall
hlt
scas
ss
and
mov
inc
xchg
jae
aaa
jno
mov
lea
xorb
lods
cmpb
mov
ret
lock
xor
shrl
inc
mov
and
sbb
xlat
mov
insl
sub
daa
dec
xor
ljmp
and
xchg
or
lods
sub
aas
shrb
cmp
xchg
jo
and
push
mov
mov
mov
out
mov
test
cmpsl
ret
ret
enter
jge
fcmove
mov
imul
xor
push
or
sub
cli
out
lret
cmpsl
movsb
sub
pop
sahf
divl
pop
inc
ds
fcmove
cmp
or
jns
push
fwait
jge
jns
int3
cld
flds
imul
dec
fstpt
jmp
push
mov
mov
test
cmp
add
mov
mov
data16
push
sub
sbb
jne
jle
loope
pop
and
push
cmpsb
xor
lea
xchg
movsl
jecxz
outsl
add
jnp
inc
jl
add
movsl
xlat
fimull
sbb
popf
and
ljmp
mov
xor
lcall
sti
lods
in
inc
movsb
repz
push
inc
cli
xchg
pop
mov
add
dec
jmp
enter
sbb
xor
fucomi
sub
xor
push
fiaddl
cli
jno
repz
sbb
add
aam
xor
js
push
jle
cmp
cmc
inc
or
xor
sbb
leave
fnstcw
mov
mov
inc
sub
test
or
mov
sub
push
inc
fisubs
push
cmp
icebp
mov
inc
jo
and
push
add
dec
and
ret
mov
push
mov
sub
mov
fiaddl
in
inc
and
cmp
or
mov
mov
lock
fsts
pushf
enter
out
cmp
shrb
in
scas
xor
xchg
sbb
dec
inc
fcmovnb
adc
mov
mov
mov
ret
test
sbb
pop
lock
sbb
pop
adc
repnz
sti
and
cmp
sub
mov
mov
xchg
mov
repz
mov
cmp
add
or
outsb
sbb
rol
outsb
and
push
add
lods
xor
clc
mov
mov
sub
dec
hlt
sub
pushf
pop
test
sti
push
mov
pusha
ljmp
mov
ret
pop
in
cmpsl
mov
or
and
je
outsb
push
ja
or
jns
pushf
mov
cmp
inc
aad
mov
mov
and
jne
add
add
add
sub
repz
sub
xchg
xor
add
cwtl
test
inc
push
aas
mov
fidivs
adc
lret
mov
dec
lods
hlt
push
repz
inc
dec
adcb
cltd
mov
jp
rcr
xchg
sbb
test
outsb
pop
adc
lret
mov
jge
adc
cmp
imul
and
pop
lahf
lret
out
xor
add
pop
enter
js
lods
jecxz
outsb
jp
jb
mov
into
inc
xor
cs
cmp
sbb
cmp
pop
mov
daa
cli
lcall
pop
stos
std
mov
inc
or
sar
and
imul
repnz
les
sbb
add
std
in
pop
lods
aad
and
ljmp
adc
fisubl
ret
and
adc
sub
cmp
sbb
fdivrs
mov
and
repz
jg
aaa
subb
sub
adc
test
inc
cld
ds
mov
xor
mov
outsb
enter
aaa
subb
add
repz
jae
xchg
sbb
push
fbld
sbb
dec
adc
mov
xchg
cmp
pop
push
push
add
and
sbb
ret
mov
or
mov
add
out
push
cmc
mov
ljmp
ret
negl
repz
xchg
hlt
xor
lret
jbe
cmp
xor
push
xor
out
push
jg
adc
mov
inc
in
test
leave
cmp
test
cmp
rol
push
fmuls
sub
sbb
das
or
test
mov
mov
inc
in
aad
call
int3
pop
pop
jle
stos
call
or
or
mov
icebp
test
lods
adc
lcall
mov
sbb
xor
xchg
mov
mov
sub
or
mov
pushf
mov
cmp
ja
aas
jle
inc
pop
jb
sbb
movsl
cmp
mov
mov
xchg
dec
stos
lods
mov
push
push
fadd
int3
jle
jmp
vmovaps
sub
add
add
xor
ret
and
sub
add
nop
cmp
ljmp
push
cli
jns
push
inc
imul
pop
clc
fldcw
mov
repz
mov
ret
movsb
adc
jmp
xor
and
cmp
or
sbb
lcall
adc
jno
pop
lahf
jno
ficompl
cmp
pop
mov
sub
add
popf
cmp
shll
aaa
dec
cli
cmp
call
or
cmp
or
adc
sbb
in
adc
cmp
cmpsl
les
xor
push
xchg
mov
adc
les
aad
adc
mov
or
or
sbb
dec
movsb
dec
fcomps
xor
in
cld
and
and
adc
int3
loopne
shl
out
movsb
xor
jmp
mov
xor
and
add
sbb
pushf
jae
sub
stos
dec
imul
jns
sub
push
sbb
dec
push
lea
aam
movsl
xor
inc
xchg
mov
ja
mov
testb
lahf
enter
add
into
or
cmpb
cwtl
jmp
sbb
scas
scas
mov
gs
mov
xor
dec
pop
and
cwtl
ljmp
xlat
xor
push
adc
es
in
and
in
sbbb
inc
push
sbb
jecxz
arpl
in
imul
call
jl
sub
jb
lcall
sub
jne
rol
repnz
push
mov
cmp
fs
inc
sbb
sarl
or
and
pop
sub
mov
jne
cli
sub
mov
cmp
fiadds
sbb
movsb
lds
xor
repnz
ljmp
mov
cli
test
cli
dec
or
clc
fcomi
cld
cli
add
xor
arpl
out
repnz
jnp
add
in
inc
mov
stos
sub
cs
sbb
stos
jg
shl
push
push
xchg
push
lret
push
xor
por
xchg
jae
push
xchg
das
mov
ret
pop
out
cmp
and
inc
jp
mov
dec
std
std
mov
xchg
js
mov
enter
dec
imul
out
or
mov
dec
sub
pop
dec
icebp
add
fdivrl
or
inc
inc
mov
push
xor
jo
push
and
jne
and
inc
pushf
orl
and
ret
cld
pop
jne
filds
and
ret
and
xor
mov
sub
lock
fstps
sbb
mov
pop
push
lret
ljmp
ljmp
or
pop
add
mov
lds
xor
xor
out
sub
cmpsl
pop
sbb
add
into
repnz
in
jmp
scas
or
mov
cltd
lds
divl
sti
cltd
dec
stc
inc
stc
push
insl
or
and
dec
cmpsl
mov
loope
loop
adcl
stos
adc
pop
pop
es
push
lcall
sbb
loop
jae
xchg
hlt
xorb
and
fmul
lret
xchg
push
sbb
mov
ds
in
add
dec
inc
sub
push
js
ret
mov
sub
sahf
das
fcoms
mov
inc
orl
jo
std
jno
jl
inc
mov
push
pop
sbb
mov
imul
jg
mov
cmp
or
shrb
scas
stos
or
pop
ja
add
cmp
jo
mov
add
repz
mov
repnz
aaa
mov
xor
call
data16
sub
push
cwtl
mov
fstps
inc
jle
push
xor
enter
int3
cli
test
adc
sbbl
int
repz
cmp
sbb
aad
movsb
push
and
lcall
jne
mov
sub
and
dec
lret
dec
leave
jo
pop
jne
fwait
leave
mov
jbe
int
cmp
movsb
pushf
xor
cmpsb
stos
andl
fidivrl
cmc
cmp
shrl
jge
jg
add
add
sbb
sarb
imul
movsl
xchg
aam
ret
push
fnstcw
insl
mov
xor
ljmp
jns
test
dec
flds
xchg
dec
pop
sub
popf
test
or
sbb
mov
ljmp
cmp
mov
sub
enter
jg
test
dec
mov
mov
int
mov
push
shlb
cmp
pushf
add
add
call
mov
ret
shrb
arpl
int3
mov
push
rcll
shlb
mov
jle
mov
xor
sbb
nop
ret
or
inc
test
and
and
xchg
loope
aad
daa
dec
daa
cmp
mov
lock
fisubrs
sbb
xchg
in
adcl
jg
jp
and
push
push
cwtl
xor
dec
les
push
dec
imul
sarb
mov
xor
adc
clc
pop
nop
xchg
scas
insb
testb
fistl
cmp
setb
mov
cmpsl
add
sub
inc
testb
xchg
pop
cmp
clc
fs
test
imull
xor
sub
mov
repnz
jo
xchg
test
or
mov
push
jge
fstpt
mov
in
push
in
adc
mov
test
mov
xchg
ret
sbb
adc
ja
xor
test
jmp
aad
nop
loope
cmp
inc
call
pop
shlb
sbb
jle
push
fldt
push
cld
push
sbb
fimull
push
and
sbb
xor
mov
hlt
sub
into
push
fldenv
daa
mov
popa
js
movsl
and
push
in
jl
jmp
mov
jecxz
lock
mov
cmp
insl
or
imul
loop
sahf
mov
or
adc
jo
loope
in
outsl
repnz
and
xor
hlt
sub
mov
out
xor
cmp
in
pop
mov
lods
jle
mov
cmp
ret
repnz
mov
das
hlt
sbb
cmpsb
sub
lock
aaa
mull
lcall
cld
xor
mov
out
aam
xor
in
or
repz
enter
sbb
aam
cmp
xchg
adc
push
cli
cmp
xor
cmp
xor
jmp
jne
sarb
repnz
cli
pop
in
and
insl
sub
xchg
es
lods
pop
xor
xor
and
das
aam
cmp
add
sub
add
xchg
das
sbb
or
subl
das
std
or
xor
mov
nopl
pushf
adc
lcall
xor
pushf
add
cmp
and
lret
sub
xor
cmp
add
cmp
movsb
push
test
or
leave
add
xor
adc
repz
sbb
xchg
xor
daa
repnz
xor
sbb
mov
fcoms
and
imul
aam
and
sub
sbb
adc
sbb
add
add
cwtl
mov
xor
and
sbb
pushf
call
ljmp
mov
call
xor
sub
xor
lret
xor
add
sbb
sbb
icebp
mov
cmp
xor
xor
mov
in
add
cmp
cmp
lds
test
or
rol
out
imull
jmp
lea
addr16
or
int
and
lea
out
and
and
and
cmp
mov
sub
test
mov
int3
cmp
scas
repz
inc
std
and
lds
push
enter
and
mov
outsl
es
aaa
idivb
ja
mov
jl
adc
mov
cmp
xchg
mov
xlat
jle
mov
or
ret
jg
cwtl
movl
pop
pop
push
and
xor
ret
pop
and
and
arpl
sbb
mov
std
sbb
xor
mov
lds
les
outsl
jge
add
outsb
cmp
cwtl
insl
jnp
cs
xor
inc
xchg
xor
sbb
cmpb
dec
sub
add
dec
xor
add
and
cmp
loopne
fwait
add
cmpsl
cld
das
jg
add
jp
adc
and
mov
jnp
mov
add
stc
xor
and
mov
sbbl
cmp
xchg
std
cmc
faddl
clc
pop
sub
or
mov
mov
xchg
lcall
ds
sbb
jg
ret
add
fdivrl
aaa
ljmp
mov
ds
daa
aad
in
outsb
hlt
mov
aad
repz
xor
in
cwtl
cmp
xlat
cli
jne
ds
lahf
aas
add
or
lock
mov
mov
mov
aam
pop
cmpb
mov
shlb
idivl
in
xor
fadds
js
sbb
filds
jbe
lret
and
sarb
movsb
jbe
rolb
inc
sbb
dec
clc
icebp
mov
insl
fdivrp
push
jl
pop
out
mov
xor
js
ret
add
or
jge
or
xor
push
pop
sbb
add
mov
imul
dec
scas
fidivs
cmp
mov
jl
xor
pop
cmp
jecxz
add
mov
sbb
ljmp
adc
pop
jp
jl
rcrb
mov
xor
mov
fwait
dec
jg
lcall
jns
or
mov
and
jge
jmp
cmc
xor
outsb
clc
sarl
add
mov
orb
cli
add
cmpl
in
jp
push
shlb
cmp
lahf
lcall
mov
lahf
cmp
inc
mov
js
xor
cmp
js
sub
and
fldenv
ret
mov
sbb
jnp
fstps
pop
mov
mov
mov
fldl
fnstcw
out
mov
data16
ja
push
xor
aaa
mov
bound
pop
cmp
cmp
push
std
addr16
add
sub
gs
sahf
in
aaa
sbb
lret
mov
sbb
lds
jbe
sub
dec
xchg
sahf
jbe
or
aas
dec
or
or
outsl
daa
lcall
inc
cmp
and
cmp
jno
rclb
push
pop
mov
ss
and
repz
in
inc
push
sbb
movsl
inc
shl
mov
cmp
cli
sub
inc
pushl
fdivrs
or
roll
data16
cmp
inc
sbb
jg
sub
repz
aas
lods
into
and
sbb
mov
mov
enter
mov
repz
popa
push
mov
add
int
cmp
loop
xor
test
cld
mov
aaa
xor
jecxz
imul
or
sbb
fisubrl
add
in
fsts
es
cld
sub
and
or
cmp
movd
and
push
xor
jne
dec
pop
sbb
lea
mov
inc
sub
pop
mov
test
in
mov
xchg
sbb
mov
push
mul
cs
mov
lcall
gs
jae
imul
int3
mov
push
lcall
mov
pushf
test
push
out
mov
adc
pop
mov
cld
nop
pop
scas
ret
fst
mov
sbb
repnz
mov
add
roll
adc
ss
add
add
add
and
scas
sbb
cmpsl
pop
incl
psllw
or
call
jp
cmp
pusha
cltd
adcb
add
call
outsl
or
lds
mov
aas
push
xchg
cmpsl
loopne
das
je
xchg
push
lret
sub
jns
neg
popf
fsubrl
stos
mov
test
sahf
testl
shlb
stos
mov
lret
jno
mov
sub
jg
inc
xchg
fstps
cs
je
pop
dec
mov
dec
idiv
pushf
cmpsl
scas
test
mov
fsubl
pop
mov
in
mov
lods
call
xchg
popf
in
in
pop
lret
jnp
into
mov
xchg
hlt
xchg
push
imul
add
shlb
pop
cld
insb
pop
sbb
and
dec
rcll
ds
jp
test
push
pop
push
pop
push
sbb
mov
cmc
lea
push
inc
push
pop
mov
inc
std
add
rcll
repz
jno
or
add
fcoml
dec
or
sbbl
and
lods
cwtl
jp
adc
ljmp
xchg
add
jecxz
adc
cmp
mov
push
arpl
or
xor
cmc
sub
adc
mov
push
aaa
cltd
ret
xchg
push
push
push
lods
cli
add
jae
xor
xchg
or
jno
dec
lds
push
addr16
or
mov
aam
pop
sbb
push
xor
mov
addr16
les
adc
jo
loop
out
ljmp
mov
dec
dec
sub
cwtl
sub
fstpt
xchg
xor
xor
dec
sbb
js
lahf
xor
mov
decl
mov
sti
ja
add
adc
adc
add
xor
add
fwait
add
and
stc
add
add
sub
mov
data16
pop
add
pop
push
cs
sbb
leave
sub
pop
add
outsb
add
pop
jg,pn
loope
lret
sub
jns
jle
xchg
cmp
sbb
xor
jmp
bound
push
cmp
aam
mov
jmp
mov
xor
or
cmp
dec
sbb
inc
pop
mov
pop
lods
jle
mov
adc
cwtl
ret
cli
stos
lcall
pop
repnz
push
lock
sub
ss
mov
sub
nop
enter
mov
push
xchg
sahf
popf
sub
lods
sbb
ja
adc
icebp
inc
sbb
xchg
iret
pushf
dec
enter
inc
mov
cmpb
push
cmc
cmpsl
adcb
jnp
or
push
bound
aad
lock
mov
ret
pop
jl
mov
mov
push
add
pushf
lahf
push
add
inc
int3
jle
pop
and
add
cltd
inc
fsubrl
lret
arpl
jns
inc
int
add
xchg
mov
xchg
js
or
fidivrs
add
sbb
pop
jl
lock
fdivrs
xchg
cli
and
and
inc
mov
jae
cmp
mov
cmp
jnp
iretw
push
adc
xor
dec
jp
cli
mov
in
scas
push
icebp
mov
lret
inc
out
movsl
sub
loop
push
xor
mov
push
int
in
dec
mov
mov
movsb
je
and
sbb
adc
sub
imul
js
inc
movsl
cli
fdivl
cld
fcompp
push
clc
mov
aaa
mov
fisttpl
jo
sub
mov
mov
jp
imul
and
sub
cmp
int
sbb
inc
jmp
xor
mov
aam
cmp
cmp
ss
repnz
addl
add
jbe
es
ret
cmp
sbb
jg
scas
mov
cld
sti
outsb
pop
js
sub
sub
xchg
adc
inc
hlt
xor
in
sbb
pop
mov
lds
xor
subl
push
and
pop
cli
rcll
add
adc
insl
or
les
jl
adc
push
lock
add
pop
sub
jge
cmc
ljmp
mov
adc
cmp
inc
add
mov
lods
repz
cmp
mov
sub
mov
mov
mov
data16
sbb
fstpt
mov
add
and
mov
invd
xlat
pop
dec
sbb
mov
push
movb
add
and
inc
aam
cmp
pop
or
in
jmp
adc
pusha
scas
jbe
jnp
lret
enter
andb
arpl
inc
or
pop
mov
mov
rcl
mov
pop
add
mov
out
lea
fmull
mov
inc
cmpsb
sbb
xchg
mov
arpl
sub
cmp
and
xor
mov
fiaddl
je
sarl
cld
cmp
cmpsl
inc
mov
cli
inc
out
lock
cld
repz
mov
sar
add
and
xor
add
ljmp
jle
push
aas
pop
add
aaa
scas
frstor
enter
xchg
iret
jl
mov
out
cmp
push
fdivrs
cmpb
arpl
stc
ficomps
lcall
and
pop
fdivs
std
aaa
hlt
add
push
sub
or
inc
aam
testl
sub
jnp
or
add
stc
je
adc
out
subb
inc
pop
rolb
mov
incb
es
add
loop
aad
push
xadd
add
pop
in
outsl
out
lods
adc
pop
iret
jmp
or
ja
sub
add
icebp
add
iret
cmp
add
fisttps
sub
std
jnp
test
jle
jns
push
sbb
dec
pop
add
jns
pop
adc
data16
add
and
sbb
lret
incb
push
add
enter
dec
insb
jl
into
adc
roll
jns
jbe
sbb
out
cld
test
lods
shll
add
push
lods
testb
call
out
ss
and
gs
cmc
mov
call
mov
ret
data16
les
es
divb
repz
push
xchg
test
js
aam
push
xchg
add
insl
xlat
lea
mov
push
mov
stos
xchg
in
cltd
cld
mov
movl
int
mulb
inc
imul
outsb
push
xor
das
and
inc
lock
add
cmp
push
xor
fwait
divb
push
sub
inc
js
pop
inc
push
jnp
rorb
fiadds
sbb
xchg
cmp
sub
pop
ret
imul
mov
add
pop
test
aas
or
pop
sbb
js
or
js
mov
push
push
push
add
iret
fildl
jge
xchg
stc
xor
mov
push
icebp
repnz
fyl2xp1
fdivl
mov
ret
rcrl
push
out
cmp
pextrw
ss
dec
movsb
ja
ret
into
sbb
dec
aam
pcmpgtb
inc
push
les
pop
push
jle
add
outsl
sub
addr16
mov
dec
mov
pop
mov
negl
xor
int
adc
aad
add
in
sarl
mov
sub
sbb
mov
mulb
jns
or
adc
cmp
xlat
cmc
cmp
or
xchg
pop
xchg
push
push
adc
sub
sar
imul
dec
les
js
mov
cld
ss
sahf
sub
add
enter
scas
fsubr
rcll
pop
jbe
cmp
add
mov
imul
and
fistpl
mov
aas
sub
add
insb
jl
repnz
dec
out
hlt
adc
mov
cmpsb
or
movzwl
mov
mov
lds
fs
pop
sub
clc
or
mov
mov
cmp
dec
adc
jp
out
mov
mov
cmp
mov
mov
mov
xor
add
daa
add
ja
dec
add
stos
cmpsl
stc
mov
xor
movsl
pusha
scas
rclb
mov
bound
add
aas
add
mov
cld
xchg
adc
dec
sbb
das
mov
movsb
cld
pop
roll
pop
or
pop
xor
outsb
and
inc
sub
pop
or
scas
xor
mov
inc
mov
or
cmp
jp
repnz
add
pop
rcll
out
int3
out
sti
mov
and
daa
adc
pop
adc
pop
adc
cmp
dec
repnz
jge
mov
mov
or
add
fdivrl
pusha
roll
sahf
cs
repnz
xchg
cmp
cld
or
fidivl
sub
faddl
xor
push
mov
scas
xor
popl
pop
ret
cs
and
xchg
add
loop
pop
mov
add
leave
popa
mov
lea
dec
add
xchg
addr16
rcll
xchg
mov
rclb
add
fidivrs
lods
lret
outsb
pop
add
outsb
push
mov
push
mov
and
mov
mov
loop
cmp
hlt
xor
jbe
test
test
fdivrl
fistpll
mov
push
jbe
dec
lods
and
adc
and
int
gs
dec
dec
and
mov
push
inc
aam
mov
lret
cs
popf
sbb
cli
sub
pop
sub
add
jne
jno
int3
xchg
push
lcall
es
mul
cmpsl
mov
jae
add
pop
push
push
add
dec
adc
test
sbb
cmp
sub
xor
aad
adc
and
mov
and
pop
inc
mov
mov
jg
pop
and
jge
lret
popl
jge
dec
cmp
js
xlat
pushf
in
stc
cld
add
ja
sub
in
xor
out
mov
roll
js
add
std
daa
lahf
ja
popf
or
jp
sbb
sbb
xchg
add
outsl
fsubrl
add
pop
and
outsb
mov
add
push
xor
test
and
cltd
jnp
insb
sub
xor
fildl
jge
mov
popw
sbb
cmp
mov
stos
inc
out
mov
add
pop
mov
cmpsb
cmp
jg
cmp
hlt
in
ret
sub
lods
sbb
ret
inc
cli
push
and
adc
cmp
inc
cld
dec
sbb
xchg
outsl
jb
push
xchg
fwait
in
repz
hlt
scas
add
xchg
dec
cmp
leave
fcompl
shl
jnp
xor
mov
in
mov
insl
loope
adc
adc
fmull
mov
sub
fs
ja
mov
dec
push
into
xchg
ss
xor
xchg
jns
or
push
test
stos
sub
js
pop
popf
mov
cmp
push
sbb
jnp
jp
mov
xchg
fldcw
sub
jo
inc
mov
popf
and
and
mov
pushf
loop
ret
in
add
jno
dec
jp
mov
xchg
or
adc
jl
add
sahf
fsubrs
stos
int
and
add
pop
sub
mov
lock
adc
jge
add
mov
add
outsl
mov
push
add
stos
jns
mov
xchg
adc
mov
mov
sub
sbb
mov
pop
movb
push
mov
cmc
mov
xchg
add
sub
mov
lcall
adc
fbstp
pop
cmp
push
sahf
add
and
add
adc
in
and
mov
scas
ror
filds
or
pop
inc
test
adc
mov
aas
repz
cmpsl
add
lahf
adc
push
add
aaa
stos
es
add
or
pop
bound
mov
adc
xor
mov
cli
pushf
jmp
lds
push
pushf
sub
adcb
push
push
jg
and
cmpsb
adc
cmp
fwait
imul
icebp
ret
xchg
jo
jmp
test
sub
cli
mov
aad
rclb
inc
stos
add
sub
and
insb
cs
pop
iret
sti
xorl
xor
fcmovbe
cmp
aas
shlb
pop
js
insl
jnp
rclb
into
xchg
mov
jns
scas
mov
add
idiv
jge
mov
lret
mov
lahf
shrl
xor
and
insl
sbb
jg
add
in
arpl
cs
sbb
cmp
int3
rcll
cmp
sub
imul
pop
orb
in
add
in
cmp
fwait
adc
xor
pop
dec
xor
inc
rclb
es
lds
add
add
xorb
pop
nop
fidivrs
addr16
movsl
jmp
pop
es
pop
je
fcoms
add
shrl
push
subl
jno
inc
add
cli
js
mov
xor
aas
jne
ret
clc
aaa
sti
testb
cmp
out
fwait
lea
sub
sti
mov
xor
lahf
int3
idivb
add
cmp
adc
cmp
xchg
or
lock
mov
sub
fadds
lock
cmpb
cmp
int3
mov
jmp
imul
sbb
pop
icebp
cmp
mov
mov
testb
mov
out
mov
ljmp
rcr
cpuid
stos
cmpb
xor
je
in
daa
idiv
add
cmp
sub
sbb
xor
sbb
repnz
fldl
ds
lods
in
mov
test
mov
push
xor
or
adc
lock
not
cmp
movsl
jge
xor
mov
int3
mov
out
mov
fcomps
sub
pop
fsubrs
inc
or
sbb
je
xor
in
mov
mov
pop
shlb
mov
add
call
mov
jl
dec
jb
cmp
cmp
subl
cwtl
push
mov
mov
fdivs
sub
pop
and
aaa
icebp
sub
xor
in
sbb
in
imul
in
call
sarb
inc
mov
pop
mov
test
sub
cmp
push
shlb
cmp
fidivrl
and
lods
sbb
pop
sub
or
mov
je
push
mov
xor
sub
and
bound
jae
xchg
pop
jge
cmp
or
lds
idivl
movups
leave
call
mov
aaa
xor
add
inc
sub
cwtl
and
aaa
movsl
sub
call
cmp
fstpt
fmuls
negb
mov
mov
jo
cmpsl
mov
negl
xchg
mov
js
sub
and
cmp
pop
sub
fadd
mov
sbb
call
scas
inc
cmp
or
push
fdivl
jo
mov
and
lret
sbb
cmpsl
xor
lea
cmp
aaa
jbe
add
mov
fdivl
cs
push
cli
add
test
sub
xlat
sbb
subb
inc
icebp
es
xchg
jle
mov
add
or
arpl
jmp
pop
pop
les
sub
mov
popa
and
xchg
add
xchg
ret
xor
pop
mov
jp
sahf
mov
mov
jecxz
cmp
adc
mov
cld
stos
push
jecxz
pop
xor
daa
lea
fdivs
push
mov
add
into
push
repnz
jecxz
rolb
fnstsw
cmpsb
inc
mov
add
ret
hlt
jnp
push
es
or
loope
out
add
fsubl
cs
add
or
pop
adcl
test
aam
ret
push
cwtl
push
push
xlat
add
inc
mov
mov
je
ficompl
pop
mov
mov
add
xchg
movb
sub
ffree
dec
aad
xor
fucomip
add
xchg
add
sub
inc
int
cwtl
shrb
test
movsb
push
ss
outsl
loopne
bound
add
adc
and
jbe
imul
pop
sbb
leave
add
pop
add
scas
pushl
cmp
lret
pop
addb
push
mov
jns
or
pushaw
in
dec
rcrl
xor
popl
mov
push
push
mov
aaa
fnstcw
fst
or
lahf
jo
add
sbb
adc
jl
shr
xchg
dec
xor
push
mov
mov
dec
fiadds
mov
daa
insl
adc
je
loopne
sbb
cmpsl
add
sbb
shl
and
aam
nop
add
clc
sub
or
add
mov
pop
test
sbb
xchg
xor
sti
cld
xchg
lods
adc
outsb
add
add
jg
add
scas
mov
ss
pop
add
xchg
in
mov
xchg
jo
add
cmp
jb
negb
add
iret
pop
mov
in
or
jnp
imull
cld
xchg
and
flds
push
xchg
pusha
call
xchg
jnp
mov
jle
add
fwait
sti
sub
je
add
adc
push
jmp
add
jl
sbb
fisttpl
push
jae
inc
int
pop
pop
or
in
xor
add
pop
push
test
inc
push
xchg
push
idivb
sbb
repz
cmpsb
mov
addb
enter
loopne
adc
mov
dec
or
mov
cmp
jbe
lock
cld
inc
fcmovu
adc
call
outsb
push
fldenv
jl
mov
jnp
and
mov
addr16
jae
rcll
mov
sub
pop
or
and
sahf
in
mov
arpl
das
push
jbe
cmc
and
data16
mov
adc
sar
xor
or
mov
test
or
sub
add
ss
pop
jno
or
dec
ret
inc
xor
xchg
fstps
dec
scas
ret
push
mov
mov
lret
jg
or
aad
pop
std
orl
outsb
sub
mov
add
pusha
int3
jmp
in
fwait
push
fldl
jbe
or
sub
imul
ss
dec
loope
and
mov
sub
jo
cld
add
jns
and
dec
jnp
push
rcrb
adc
cmp
xchg
add
add
mov
push
xchg
mov
mov
adc
je
movsb
sbb
mov
dec
sbb
sti
cmpsl
adc
mov
inc
add
add
add
and
stos
add
mov
mov
ret
shrl
mov
mov
test
ret
popf
sbb
dec
mov
pop
and
cli
cmp
jns
idiv
div
pop
ret
push
and
push
sub
and
sti
mov
fadds
movsl
ret
push
ja
add
mov
popa
jl
inc
dec
dec
hlt
sub
jle
adc
add
inc
or
sub
hlt
inc
cmp
rorl
mov
sti
dec
pop
fisubrl
lret
cltd
loopne
push
mov
jae
mov
mov
xor
add
ret
push
jae
sar
push
pop
scas
mov
daa
imul
mov
or
test
cld
mov
jne
add
sbb
push
sbb
mov
test
mov
inc
icebp
adc
or
aad
or
icebp
and
adcb
push
mov
insb
mov
mov
push
jmp
cld
mov
and
andb
pop
ret
popf
mov
add
and
addb
pop
pusha
or
jge
mov
ja
cmp
stos
rcrl
sti
push
stos
outsl
cwtl
loop
out
lret
cmp
xor
mov
add
sub
inc
add
gs
push
adc
add
mov
jbe
pop
movsb
add
test
adc
scas
add
popa
rcrb
pop
test
pop
cmp
add
cld
lcall
xchg
ss
mov
int3
imul
mov
loopne
push
sbb
and
and
mov
cmpsl
aad
mov
push
nop
mov
sbb
in
dec
lea
test
inc
cld
aam
lahf
outsl
scas
cmc
filds
mov
in
test
xchg
add
jmp
mov
lods
fdivs
add
mov
daa
adcl
adc
rorb
test
jl
xor
jno
test
nop
in
add
add
mov
addl
popa
fucomp
dec
sub
sbb
or
fnstenv
das
jne
add
push
sbb
and
int
adc
cmp
stos
dec
sbb
js
ljmp
add
add
leave
xchg
mov
lret
xchg
roll
ret
ss
sub
test
cmp
int
das
jo
pop
push
adc
inc
mov
out
inc
or
dec
push
add
sbb
add
sub
dec
out
add
pop
push
xlat
pop
dec
add
dec
fldt
mov
js
mov
jb
pusha
xor
push
cld
imul
pop
or
js
icebp
jnp
test
mul
jge
sub
jge
mov
movsl
lds
pushf
cli
mov
mov
rcrl
jno
cmpsl
call
std
adc
mov
dec
jnp
ja
sbb
xor
sub
push
adc
inc
mov
scas
test
fsub
add
cmp
mov
fdivl
loopne
ds
inc
fdivrl
test
pop
mov
sbb
jecxz
repz
cmp
das
lds
xchg
push
sub
aaa
jns
pop
les
push
or
add
xchg
in
movsb
scas
loope
sbb
add
pop
add
sub
jecxz
mov
push
sub
jp
call
call
insb
adc
push
orl
lahf
and
loope
mov
cmc
xor
xor
add
push
cmpb
add
das
pop
scas
inc
imul
outsb
inc
add
lcall
push
out
cmc
les
and
add
bound
push
enter
xor
mov
fldl
push
adc
push
test
cltd
add
sub
mov
mov
fiadds
inc
aad
subl
data16
jae
add
sbb
cmp
outsl
or
cmp
and
cmpsb
sbb
adc
ja
add
in
or
mov
xchg
mov
mov
ds
rolb
adc
xor
cld
push
add
cmp
dec
std
jnp
ret
mov
pop
pop
xchg
lea
das
inc
sbb
and
xchg
in
add
push
icebp
jle
add
out
dec
fwait
cmp
jb
sbb
or
lods
push
inc
add
sbb
subl
and
aaa
xor
add
clc
mov
fwait
jmp
cmovb
incb
cmp
repz
add
add
mov
addr16
aam
test
sarb
push
xlat
add
bound
lods
inc
pop
imul
or
vmsave
jns
lds
ret
nop
jmp
int3
inc
xchg
adc
lods
jl
xchg
imul
add
mov
dec
add
pop
es
sbb
dec
add
lcall
lea
xor
mov
xchg
mov
adcl
mov
cmp
cmp
cmc
arpl
or
inc
movsl
jl
test
sub
fsts
hlt
dec
inc
add
sub
adc
pop
in
mov
jae
and
cmc
cmpl
sub
shll
xchg
mov
ss
mov
sti
rcrb
or
jg
daa
mov
and
adc
ret
dec
adc
xor
push
rolb
ret
push
fmull
stos
xor
push
cmp
add
int3
rol
faddl
sub
add
mov
cld
nop
scas
push
adc
xor
and
aam
xchg
xor
mov
jne
mull
xchg
hlt
cld
movsb
mov
dec
xor
aaa
inc
fsubrl
ds
std
pop
pop
add
in
adc
in
out
mov
adc
lret
bound
add
push
pop
jl
lahf
mov
sbb
ss
cmp
pop
mov
cmpsb
or
lahf
js
mov
stos
pop
xor
jp
xchg
jmp
adc
cmp
addl
stos
fldenv
outsl
cld
dec
divl
pop
inc
cmp
inc
pop
add
arpl
adc
sbbl
add
daa
lods
mov
nop
mov
cmp
mov
inc
or
xchg
lcall
imul
mov
push
sbb
xor
or
das
bound
push
lods
cld
pop
add
outsl
int3
jmp
repnz
fwait
addr16
ss
xchg
pop
cltd
inc
ret
adcb
jge
jnp
repnz
adc
or
fwait
mov
push
or
add
xchg
or
xor
dec
add
imul
add
pop
jp
add
inc
cmp
xchg
add
jle
cmp
adc
aam
popa
add
arpl
jnp
add
pusha
ljmp
insb
mov
lret
add
dec
add
fsubrp
loopne
and
decb
out
in
popf
mov
sti
inc
mov
and
jmp
test
repz
lea
xor
outsl
push
add
incb
xchg
mov
cli
dec
xchg
in
movb
stos
fmull
sbb
mov
hlt
test
add
cmpsl
add
mov
push
fidivrl
movsb
add
mov
ffreep
sahf
imul
jb
mov
test
inc
mov
mov
ret
jbe
or
xlat
dec
push
pop
add
dec
arpl
cwtl
jecxz
inc
cmp
das
jns
push
jp
nop
mov
ret
jg
xchg
sahf
add
test
xchg
call
js
sub
jmp
add
out
test
fsubr
rorl
xor
cmp
loope
stos
aad
ret
shll
mov
inc
nop
call
adc
sbb
test
cmp
push
add
push
out
js
sub
in
movsl
pop
fmuls
jp
pop
cltd
add
push
jo
or
mov
sub
mov
in
mov
iret
inc
lret
mov
cmp
dec
cmp
jle
cmc
or
icebp
das
add
hlt
jmp
sarb
add
xor
out
mov
outsb
xor
mov
aad
test
out
lahf
mov
pusha
testl
cld
jp
cmp
xor
dec
add
and
xchg
loope
xchg
rcl
icebp
scas
leave
addb
test
fcmovnb
mov
sbb
lds
aam
cmp
add
fistps
ja
andb
cmpsb
or
cmp
out
movsb
popa
lock
inc
jb
lcall
mov
sub
daa
cmp
mov
mov
adcb
ja
mov
xor
enter
mov
jbe
hlt
and
hlt
jo
leave
inc
lods
cmp
fdivl
jns
pushf
cwtl
shll
ret
or
pop
jns
cmp
out
stos
iret
adc
xchg
ja
push
mov
and
or
imul
nop
jo
imul
jp
out
fxch
jp
pusha
test
fidivrl
sbb
push
mov
ljmp
cmp
test
jbe
movsl
push
xchg
mov
cmp
call
or
jg
push
in
sub
mov
dec
stos
or
or
int3
in
mov
out
ja
fadds
les
test
popa
adc
xor
mov
fdivs
pop
or
mov
jno
or
data16
and
cmp
and
scas
dec
js
xchg
je
pop
sbb
add
hlt
es
add
jbe
adc
test
dec
sub
or
add
cli
jns
xor
or
and
add
sub
in
add
lahf
cli
scas
pop
or
push
pop
add
fsubrs
or
fnstsw
xor
or
add
xchg
jne
stos
out
lret
sub
sub
mov
xor
insl
ss
inc
iret
mov
mov
pop
outsb
and
mov
jg
pop
xor
push
cwtl
sarl
insl
add
mov
jecxz
xlat
lret
out
out
jae
or
push
jo
mov
pop
dec
add
pop
sbb
add
ror
or
xchg
nop
add
push
sub
adc
add
mov
in
add
inc
jb
loopne
cmp
or
std
mov
insl
and
or
add
addb
add
adc
sub
cmpsl
cmp
scas
jae
or
xor
in
xchg
cmp
mov
icebp
mov
out
cli
lret
xor
ret
add
cmc
and
push
dec
add
js
push
push
jnp
popa
add
jno
jb
mov
mov
lea
jg
push
mov
dec
jle
add
into
divb
cs
sbb
sub
int
lret
jb
addb
fdivrs
outsl
insl
fildll
rorb
push
add
in
test
imul
stos
cmpsb
mov
add
cli
xor
iret
jl
test
dec
sbb
and
jnp
cmc
test
and
js
lahf
cld
push
cmp
inc
lcall
add
std
push
mov
ret
cmp
dec
push
sbb
adc
adc
dec
mov
xchg
fstpt
int3
jmp
cs
jne
fwait
outsl
sub
jb
jl
inc
shll
sbb
sbbl
dec
xor
cmc
fs
add
dec
add
insb
or
xlat
xor
xchg
fsubrl
out
or
mov
mov
add
ret
push
cmp
xchg
jge
mov
pop
fcoms
dec
xor
aam
adc
dec
dec
mov
mov
xor
fnstcw
and
std
xchg
pop
xchg
add
subb
aaa
and
stos
push
dec
sbb
push
cmp
add
dec
or
lcall
and
jnp
mov
pop
jae
jle
addr16
add
sub
push
data16
and
mov
ss
dec
sbb
add
xor
add
xchg
mov
leave
out
jg
das
sahf
push
add
nop
enter
cmp
mov
imul
cmp
add
xor
cmpsb
aaa
sub
cld
adc
xor
add
inc
cmp
mov
adc
std
jb
push
xchg
add
sbb
cmpsl
push
add
adc
jne
push
sub
mov
push
xchg
jbe
xchg
and
cltd
add
dec
sarb
ret
add
fwait
lcall
negl
pusha
pop
mov
jb
or
pop
and
dec
adc
jl
pop
cmp
push
mov
xchg
out
int
add
inc
in
fbld
dec
jge
jl
pop
mov
daa
insl
sbb
add
in
fsub
mov
repz
sub
push
cli
sub
sub
xlat
cltd
fs
xor
std
ss
add
mov
cltd
es
sub
fcmovb
dec
mov
jmp
loopne
mov
ret
gs
insl
jle
cld
cmp
dec
or
mov
push
stos
sub
mov
rcrl
scas
and
push
add
movsb
addl
stos
clc
inc
ficompl
iret
mov
mov
cmp
daa
or
cmp
mov
sub
repz
insb
dec
test
jp
add
adcb
cli
mov
test
mov
add
cwtl
add
es
xor
mov
icebp
jge
mov
call
incl
out
int3
lret
sbb
add
loopne
cmpsl
sbb
mov
xor
lcall
mov
adc
cmpsl
flds
add
xchg
enter
pop
pop
cmp
sbb
sub
or
mov
leave
add
test
nop
jl
xchg
mov
pop
cmp
sub
or
lret
inc
or
nop
fucom
cld
pop
inc
pop
dec
mov
lcall
xchg
xor
inc
cmpsb
adc
movsb
mov
xchg
into
jge
mov
stc
and
push
push
mov
fnstenv
mov
mov
ljmp
inc
mov
movsb
fists
pop
add
int
xor
call
js
adc
inc
aaa
dec
sub
or
or
cmpsb
out
mov
fisubrs
cmc
lea
mov
mov
leave
call
ffree
imull
xor
fnstsw
add
xchg
shr
or
sti
idivb
mov
xor
cld
mov
add
arpl
add
nop
imul
xor
add
add
push
ss
scas
imul
clc
rolb
lcall
sbb
cmp
ljmp
icebp
pop
jns
sahf
dec
jnp
ss
cld
lods
cmp
xor
cld
push
or
add
add
fisubl
jae
and
fdivr
dec
sbb
out
sahf
jp
rcrl
add
mov
test
xchg
testb
cmpl
roll
sub
inc
push
ljmp
cmpl
push
push
ret
sahf
sbb
cmp
jns
repnz
jecxz
jo
subb
cmp
testb
ficoms
dec
mov
and
fwait
inc
es
xchg
sub
cwtl
cmp
dec
je
je,pt
xor
mov
mov
loope
cs
pushf
mov
test
int3
jbe
mov
jg
add
stos
popl
sub
or
or
sub
jbe
mov
push
jne
dec
mov
push
cmp
outsb
pusha
daa
or
movsb
pop
fistps
sbb
adc
push
mov
and
cs
pop
sub
xor
push
jmp
or
repz
dec
cli
mov
ret
dec
inc
jno
mov
fdivs
es
and
adc
shl
pop
sbb
mov
loopne
popa
ret
data16
jnp
cmpsl
cld
orl
fdivr
lock
pop
in
push
lods
push
test
and
fildl
pop
mov
out
jo
scas
push
add
addr16
jae
lds
push
outsl
outsb
das
test
es
fs
loop
popa
imul
dec
pop
dec
dec
dec
push
inc
les
mov
inc
lahf
add
xchg
scas
dec
aad
jnp
outsb
push
jae
sub
mov
fistps
test
dec
xor
enter
cld
scas
cmp
testl
lock
insb
std
sub
out
fs
and
pop
std
sbb
mov
push
sub
mov
les
sbb
sub
or
add
mov
mov
and
xor
cmp
mov
movsl
and
ss
scas
xchg
pop
jp
dec
xor
mov
cmp
add
xor
mov
cs
add
xor
mov
mov
test
insb
out
sbbl
mov
outsl
cld
xchg
sar
std
decb
sub
sub
add
or
lret
cs
pop
imul
adc
fcmovnb
push
out
stos
inc
add
loopne
shrb
add
imul
adc
fmull
lret
xor
xchg
imul
cmp
sti
loope
xlat
cmp
aad
imul
or
or
adc
loope
mov
add
out
push
push
add
in
in
in
add
push
add
add
sub
sub
add
and
aas
push
add
mov
add
push
jb
outsb
jae
ja
js
insl
sub
add
stc
in
out
adc
add
ficompl
adc
in
sub
ror
adc
aad
inc
adc
mov
add
incb
fstpl
lea
sub
or
push
lret
mov
or
xchg
ficoml
add
add
imul
cld
fsubrl
int3
nop
jg
imul
sti
lret
mov
xor
add
push
pop
mov
int3
or
movsb
inc
nop
jno
or
jns
sub
std
push
mov
add
enter
clc
leave
insb
inc
nop
inc
xor
lcall
sbb
xchg
and
fs
inc
mov
lahf
out
lcall
push
cmp
lahf
in
lahf
xlat
fwait
xor
mov
jo
into
push
mov
pushf
insl
cs
stos
movsl
mov
mov
mov
pop
cmpsl
and
incl
into
xchg
adc
xchg
push
sub
lret
cmpsb
sbbb
xchg
repz
jnp
mov
pop
mov
jo
sar
cmp
shl
pop
stc
enter
imul
sbb
add
mov
mov
in
fisttpl
add
xor
dec
cmp
cmc
push
imul
pop
xlat
imul
imul
aad
mov
xor
int3
push
xlat
fst
lds
or
leave
aam
add
mov
ljmp
mov
lds
jnp
xchg
imul
aaa
add
mov
adc
add
xor
push
mov
sub
xchg
imul
or
shlb
decb
syscall
add
push
int3
dec
sub
repz
ret
insl
mov
loop
insl
push
pop
mov
sub
out
pop
sbb
add
push
jae,pt
and
jecxz
aaa
push
xchg
cmpsb
dec
dec
add
mov
add
xor
jo
mov
dec
sbb
sbb
cmpsl
add
scas
aam
sbb
or
lods
pop
outsl
push
dec
lods
outsb
mov
cmp
sub
test
add
or
movsl
outsb
out
push
add
add
lods
outsb
mov
add
stc
sub
outsb
ret
add
pushf
cld
movsl
outsb
pop
sbb
add
sbb
stos
outsb
mov
push
add
cltd
int3
stos
outsb
movb
idiv
stc
stos
outsb
push
push
add
stc
mov
add
pop
cld
fistpl
outsb
test
or
test
push
add
add
movsl
outsb
lds
icebp
add
pop
add
add
pop
lods
outsb
cmp
add
sti
sbb
movsl
outsb
test
add
add
stos
outsb
loope
add
clc
xchg
add
add
dec
add
add
repnz
stos
outsb
mov
add
call
lods
outsb
jno
add
add
movsl
outsb
adc
in
add
shll
add
movntq
add
sub
add
loope
sbb
movsl
outsb
and
add
cld
iret
add
add
push
int3
stos
outsb
push
add
test
outsb
adc
mov
inc
rep
outsb
repz
mov
or
movsl
outsb
pop
add
ljmp
add
xchg
add
add
push
stc
adc
stos
outsb
jb
add
clc
push
add
mov
add
hlt
cld
mov
add
adc
jns
or
add
gs
add
sub
cmp
add
add
imul
fildll
cld
imul
jle
xchg
lret
imul
imul
adc
fcomp
cld
in
xchg
int
nop
jg
std
std
mov
in
mov
add
mov
les
cmp
adc
xchg
or
inc
add
and
imul
sub
or
jbe
add
or
jns
dec
push
add
adc
shrb
pop
adc
add
in
add
adc
push
call
adc
hlt
imul
imul
mov
sub
divl
sbb
daa
pop
je
xchg
imul
add
or
pop
cmp
lret
dec
add
popa
sub
nop
cmp
add
add
xchg
imul
xor
add
in
adc
add
adc
ss
inc
inc
into
jg
add
xor
pop
xchg
xor
jmp
jp
bound
daa
jo
aam
xchg
add
fldcw
shlb
push
xlat
hlt
inc
xchg
test
stos
andl
jbe
inc
test
mov
loop
fsubrp
shll
and
jp
push
popf
insl
sbb
cmpsl
popa
inc
pop
loop
mov
gs
std
out
jl
add
insl
mov
dec
add
int3
dec
sub
lods
dec
add
add
imul
add
add
scas
sti
fxch
dec
add
add
cli
sti
and
int3
arpl
jbe
jmp
push
mov
sbb
int3
mov
xchg
out
dec
or
out
aas
mov
pop
mov
and
idiv
xchg
add
repnz
sti
pop
cli
add
push
ja,pt
out
insl
mov
xchg
add
dec
add
insl
push
insl
dec
mov
adc
inc
mov
arpl
adc
add
add
std
imul
sub
mov
in
mov
sub
add
data16
ss
mov
dec
call
inc
push
sbb
js
mov
pushf
mov
push
fdivrp
insl
lahf
adc
sti
sub
loopne
mov
push
and
push
mov
clc
xlat
cmp
sbb
sub
or
loopne
sti
ss
jp
add
xchg
add
repz
mov
stos
jg
test
dec
sbb
push
js
call
rol
lea
inc
mov
lret
ficoml
mov
shl
push
es
and
test
test
cmp
loop
add
lret
or
fs
jge
add
sbb
out
add
add
testl
leave
push
or
aaa
mov
lods
adc
jb
fstl
arpl
mov
outsl
pop
xor
cmp
jb
push
push
dec
or
imulb
aas
cmpl
mov
mov
mov
je
in
adc
divl
push
cli
pmaxub
dec
in
lea
adc
xor
out
xchg
or
mov
dec
sub
push
add
or
cmp
add
mov
cltd
jnp
jg
push
jp
andb
pop
addl
sbb
cmp
dec
lahf
sub
fimull
add
fsts
imul
pusha
mov
jge
ret
jbe
pop
pop
dec
addr16
push
arpl
mov
dec
sub
cld
xchg
imul
and
fdivr
add
insl
inc
fs
in
jp
add
mov
mov
test
cmp
int
cli
imul
pop
mov
pop
test
ficompl
adc
cmc
or
mov
add
imul
or
jmp
gs
imul
sub
in
or
add
add
cmc
or
in
int3
push
xlat
std
xor
ds
xor
push
pop
add
inc
lret
or
fdivrp
fadds
and
lcall
enter
xchg
add
gs
stos
add
mov
pop
test
add
shl
in
fcompl
add
add
loopne
push
xor
cmc
and
notl
add
mov
adc
shlb
add
cmpsl
push
add
xchg
cmp
loope
test
stc
pushf
mov
lret
adc
insl
add
fstpl
add
int3
or
cltd
sub
add
mov
add
or
add
out
loope
add
xchg
mov
inc
cwtl
lret
dec
add
adc
clc
sbb
add
and
adc
lds
ret
lds
add
add
in
add
sub
or
mov
or
cmp
mov
cmp
jecxz
add
adc
add
sub
add
gs
movsl
lods
add
imul
mov
imul
in
dec
das
add
insl
insb
sub
int3
dec
sub
sbb
xor
imul
sub
xchg
add
dec
push
add
adc
sbb
pop
adc
aad
ret
fists
in
popa
sbb
adc
lds
pusha
outsb
mov
pop
sub
pop
xchg
aaa
fiaddl
ret
ja
fbld
cli
cmpsl
cmp
or
jnp
mov
imul
repz
pop
fld
repz
mov
movsl
dec
subb
jecxz
ret
fcmovu
xlat
lret
adc
ljmp
bswap
stos
out
imull
add
xlat
and
addr16
add
fsub
insl
inc
jmp
and
sub
add
movsb
xchg
or
dec
add
add
in
push
pop
add
mov
out
lods
adc
add
dec
push
cmp
xor
jno
nop
inc
xchg
std
cmp
cmp
add
incb
into
test
addr16
incl
add
lret
rcrl
xchg
test
push
dec
sbb
sub
lods
stc
test
ud2
dec
mov
xor
nop
lock
idivl
and
jnp
inc
mov
rcr
pop
push
jne
mov
in
xchg
fsubs
cmp
fistl
xor
sub
cmp
stc
lods
add
jle
outsl
or
push
lock
cmp
xor
shrb
cltd
pop
iret
in
adc
inc
enter
scas
imul
or
insl
and
mov
push
iret
insl
or
sbb
add
push
adc
ds
xchg
lret
rolb
fsts
mov
aaa
jnp
sbb
and
sbb
sbb
and
jo
pop
imul
pushf
cld
inc
loopne
sbb
sbb
mov
push
repnz
cmpsl
mov
sbb
mov
and
pop
stos
mov
addl
sbb
adcb
lods
xchg
lods
call
dec
xor
mov
fsubrp
mov
out
loope
test
xchg
lahf
xchg
push
movsb
add
jl
xor
std
call
dec
nop
jns
xor
sub
pop
xchg
imul
add
sub
add
add
aad
imul
sub
add
imul
mov
sub
out
test
std
mov
in
fstl
cmc
push
std
imul
or
or
mov
add
or
imul
mov
in
outsb
pop
add
pop
sub
dec
enter
imul
push
popa
leave
mov
pop
push
es
ror
aam
inc
and
or
mov
fstp
xor
pop
inc
dec
mov
lea
in
inc
lock
pop
out
es
or
sbb
sub
nop
jb
push
or
daa
mov
cld
loop
mov
insl
stos
es
aas
gs
rcll
roll
jg
imul
out
outsb
imull
lods
fnstcw
bound
loope
dec
stos
into
aas
mov
xor
out
out
les
mov
lods
fadds
pop
icebp
dec
adc
mov
repz
decb
fidivs
insl
sub
adc
inc
jp
xchg
scas
cld
jge
jmp
jo
ret
bound
adc
mov
dec
cli
sarl
cli
out
repnz
out
cmp
sub
push
mov
aaa
sti
loop
jnp
icebp
aam
cmp
js
insl
inc
cmp
dec
add
gs
imul
adc
add
dec
add
add
push
je
jp
push
data16
jno
inc
add
or
js
add
out
daa
gs
imul
pop
push
leave
jbe
jnp
and
cmpsl
ret
enter
pop
push
push
daa
repz
xchg
add
addl
fs
or
rcrb
adc
cmpsl
mov
push
xor
sub
fs
jp
gs
sbb
xchg
sub
push
pusha
in
adc
xchg
push
pop
pop
dec
push
arpl
imul
sub
xchg
add
imul
add
sbb
add
pop
insl
pop
test
mov
out
cmp
add
sub
lea
add
insl
sbb
and
movsb
dec
add
inc
adc
mov
movsl
or
push
jge
jne
popf
dec
sub
ret
and
jnp
jp
inc
jns
cmp
mov
cltd
inc
pop
sarb
daa
sub
add
ds
mov
and
mov
jno
mov
dec
je
fldcw
jg
mov
jne
mov
mov
std
pop
mov
in
sbb
or
sub
adc
jp
add
jecxz
adc
fscale
in
iret
sbb
test
push
jecxz
int3
or
ret
pop
xchg
imul
add
mov
and
sub
loopne
mov
sub
in
faddl
test
sub
xor
jl
jge
jmp
int3
or
fisubrl
pop
fldenv
sub
mov
jge
cld
pop
or
jns
ds
nop
notl
jns
fidivl
xor
scas
mov
cmp
jbe
add
jg
pop
xchg
and
push
fs
mov
and
pop
mov
and
cmp
sub
insl
cmp
int
push
mov
insl
cmp
in
ret
imul
add
push
ss
fiaddl
mov
in
scas
jne
cmp
xor
lods
and
push
push
push
push
ret
mov
cld
push
cmp
and
arpl
pop
ljmp
mov
test
add
xor
enter
cli
out
lock
sahf
mov
scas
push
dec
sbb
sbb
shrb
sub
add
jmp
in
xor
add
in
mov
jmp
xor
fsub
insb
mov
pop
sti
xorb
adc
in
dec
or
pop
or
outsl
and
or
pop
lahf
jge
jne
inc
adc
scas
cmpsl
hlt
mov
jnp
dec
mov
dec
in
sbb
scas
sti
decl
sub
dec
xor
aaa
mov
pop
jl
sub
add
add
es
xlat
adc
mov
sub
xor
sub
adc
add
std
inc
test
cs
dec
add
pop
out
or
add
cli
mov
divl
add
in
mov
sbb
mov
mov
jbe
xchg
xor
fwait
sub
stos
lret
imul
dec
cmp
jae
stc
hlt
sub
or
fstp
xchg
add
mov
fisttpll
xchg
lock
pop
add
pop
sbb
dec
xchg
pop
dec
adc
mov
neg
sar
bound
xchg
out
ret
adc
cmp
pop
jno
cmp
or
das
ja
mov
and
sbb
sbb
pop
mov
xor
pop
bound
shl
xor
stos
notb
jmp
push
sub
lret
or
orl
add
imul
mov
out
loopne
add
mov
adc
out
imul
js
add
and
and
dec
push
pop
xor
jno
insl
inc
repnz
add
sub
adc
mov
add
add
imul
push
gs
repnz
add
add
ljmp
ljmp
aad
push
pop
mov
fistl
sub
loop
jmp
mov
xor
sbb
les
mov
and
shl
pop
lea
call
dec
mov
loopne
addb
push
adcl
push
stos
outsl
xor
je
mov
int
inc
mov
imul
add
loope
test
jl
aam
inc
arpl
xor
xor
push
pop
xor
fdivr
push
jb
ret
add
out
test
dec
and
ret
nop
ret
xchg
push
je
repz
cmpsl
dec
rol
ja
jb
and
ret
xor
cmpsl
cmp
push
stc
lret
cmpsb
imul
or
prefetchnta
sbb
sti
lret
scas
add
sub
sub
xor
push
sbb
add
and
add
add
sbb
add
cmp
or
fistl
or
push
sbb
add
cmp
add
push
mov
add
dec
lods
or
add
jns
data16
jno
je
add
xchg
imul
add
mov
dec
sbb
mov
or
gs
loope
fistps
mov
fadd
aas
mov
add
jns
lock
inc
movsl
loopne
inc
shl
imull
sti
sti
outsl
push
add
add
ljmp
push
adc
adc
jl
and
mov
imul
sub
jp
out
jmp
add
sub
add
adc
lds
insl
jnp
sti
sti
aad
mov
sub
mov
xchg
enter
add
outsb
ja
jp
jno
ja
jns
push
gs
imul
add
add
in
mov
add
add
mov
add
aas
imul
cmp
mov
or
imul
sub
jns
sub
sub
sti
and
outsb
dec
add
xor
cmp
ds
arpl
addr16
adc
das
push
ret
cmp
jmp
or
adc
push
dec
push
xchg
data16
push
mov
and
push
addb
dec
pop
pushf
and
hlt
dec
sbb
roll
dec
sbb
pop
pop
mov
dec
mov
cmp
std
sub
adc
ja
inc
jno
mov
fistps
call
cmc
std
adc
mov
sub
cmc
shrl
mov
lcall
inc
mov
popa
xor
push
dec
mov
inc
add
ficoms
jl
jmp
cmpsb
xchg
xchg
xor
out
adc
loope
cmp
ja
sub
lock
ja
sub
into
mov
inc
xor
xor
mov
pop
loop
xor
stc
fninit
inc
mov
ja
pop
xor
mov
iret
mov
ret
push
scas
sbb
cmpb
push
inc
lods
push
sbb
pushl
cmp
xor
sub
add
imul
push
imul
or
fsubp
inc
sbb
test
xchg
adc
xchg
cmp
jecxz
movsl
nop
jns
or
or
sti
lahf
lea
sub
mov
fwait
add
in
push
sbb
popa
sub
lret
or
sub
and
add
out
addb
add
bnd
or
pop
inc
sub
fistl
ljmp
xlat
mov
in
out
or
outsb
cli
scas
inc
dec
fwait
pusha
icebp
xchg
pushf
adc
mov
popf
rcrb
sbb
inc
push
negl
out
jl
or
lods
xchg
or
scas
mov
mov
loopne
insb
dec
addr16
ljmp
cli
push
int3
xor
push
scas
arpl
inc
push
jge
sub
inc
add
cmp
add
gs
or
pop
cli
out
cwtl
adc
add
and
jne
push
insl
test
add
inc
and
push
add
add
pusha
mov
loop
insb
jns
scas
push
mov
mov
xor
xchg
mov
lea
xor
pop
lea
push
mov
popf
loope
repnz
lret
test
push
jmp
jae
mov
add
mov
and
mov
add
sub
gs
nop
subl
nop
jno
or
jns
xor
icebp
imul
nop
jno
xor
cmp
xlat
lea
or
jns
gs
imul
push
dec
add
call
adc
add
adc
hlt
adc
int
sti
aad
xor
cli
insl
push
dec
sbb
add
sub
mov
and
add
in
int3
cwtl
add
imul
mov
out
push
adc
jmp
in
xchg
cmp
and
mov
jb
add
out
pop
add
cltd
cmp
add
addr16
pusha
cmp
pop
cld
sub
cmp
sar
sub
pop
jl
or
out
cld
insl
pop
pop
fnstsw
sbb
lods
jl
pop
xor
daa
call
dec
cmp
inc
fwait
add
fnsave
add
mov
in
stos
sub
or
mov
adc
cmp
adc
pop
inc
xor
jnp
xchg
imul
jns
jmp
es
in
xorb
mov
lahf
sub
jnp
pusha
insl
push
jge
pop
fiaddl
pusha
bound
adc
cmp
inc
test
mov
imul
in
jl
add
pop
gs
sbb
sbb
lret
mov
xor
cld
or
aaa
enter
cmp
mov
cwtl
rcrb
insb
add
sbb
fs
aam
cmp
sub
mov
packssdw
sbb
jl
mov
mov
test
xor
addr16
in
or
ret
xor
sbb
pop
xor
push
fwait
mov
fwait
jmp
add
fildll
test
xlat
insl
cmp
jb
sbb
jns
jp
out
sbb
cmp
adc
cmp
clc
orl
add
dec
xchg
hlt
add
lods
cmp
pop
jle
lock
les
insb
hlt
add
in
xorl
mov
add
bound
mov
lret
add
mov
cmp
cmp
fcom
mov
add
ja
sub
mov
push
out
mov
cmp
in
cmp
mov
adc
lock
pop
das
out
ss
repnz
notl
pop
cwtl
cmp
ljmp
lea
pop
cli
sub
imul
inc
outsl
add
inc
cld
in
sub
or
jo
pop
int3
data16
inc
arpl
stos
cmp
outsl
stos
leave
jbe
fildll
outsb
jb
fisubl
cld
xchg
fwait
mov
fdivrl
mov
flds
fisubrl
aaa
out
jo
push
mov
xor
sbb
jnp
gs
neg
xchg
xor
sub
cmp
sbb
loop
pop
cmp
xor
jl
xor
dec
pop
call
xorl
xor
sub
fdivrp
xor
jmp
sbb
xor
push
sarb
je
lahf
pop
sbb
xchg
pop
jns
xor
pop
sub
cmp
and
add
xor
sub
mov
mov
decl
add
into
xor
mov
cmp
or
hlt
add
push
arpl
push
hlt
push
jle
add
mov
dec
and
rorl
and
dec
xchg
push
fmull
or
add
mov
adc
or
insb
or
add
fbstp
or
cmp
pop
xchg
jo
or
add
sbb
sub
sbb
add
and
fwait
xor
mov
jp
stos
aam
int
out
aaa
cs
scas
push
cmp
cmpsb
popf
jnp
stos
mov
fldl2t
loopne
mov
sub
mov
repnz
dec
cmp
clc
scas
push
es
xchg
sti
lret
fsubrs
repz
repnz
cmp
cmp
jge
or
cmpb
mov
and
lea
sub
xlat
das
xchg
repz
xor
stos
int3
or
mov
cld
aas
xor
mov
sbb
adcb
push
das
cmpsb
add
or
mov
add
or
add
cs
fstpt
add
fdivr
jne
ljmp
mov
add
cmp
add
jns
inc
mov
std
hlt
or
decl
mov
dec
aas
mov
cld
push
cmp
or
sahf
sub
mov
xchg
mov
jo
xor
pop
cmp
je
xor
js
aaa
ja
cmc
cmp
outsb
or
test
sub
jo
sbb
lods
jp
push
hlt
outsb
imull
cmp
add
rclb
shr
mov
sbb
fsubrs
cmp
jg
inc
dec
scas
push
mov
ficoml
out
xor
mov
jmp
arpl
add
add
hlt
add
jne
test
push
jge
std
pop
std
cltd
cmp
adc
add
add
clc
add
les
sbb
mov
add
aam
xor
xchg
add
clc
push
sbb
neg
adc
sub
fsubs
and
mov
add
or
xchg
jbe
pusha
sub
aaa
mov
pop
push
sbb
push
inc
adc
outsb
jns
fstps
cmp
cmp
lahf
cmp
add
sub
cmp
out
pop
or
add
pop
in
inc
inc
xchg
lea
lret
call
inc
in
add
and
loope
movsb
adc
xor
scas
insb
hlt
lods
pop
addr16
or
loop
mov
dec
ja
adc
cmpsb
sub
add
push
jl
mov
adc
mov
pop
xor
and
ret
dec
or
add
sub
mov
inc
xor
fildl
stos
cli
xor
cmc
das
test
pushf
lahf
cmp
leave
sub
std
sub
jp
cmp
icebp
loop
and
movsl
leave
xchg
jnp
xchg
loop
jbe
aaa
andb
cmp
stos
mov
sarb
fldl
cs
nop
add
jns
or
mov
sbb
or
hlt
and
jo
test
pop
ja
fdivl
or
pushf
nop
jbe
and
es
cmp
xor
xchg
mov
mov
lock
sbb
jmp
add
cmp
insb
adc
and
dec
xorl
jb
adc
mov
adc
cmp
sbb
cmp
subb
popf
dec
jno
lock
fldl
sbb
or
jg
cmp
and
jge
inc
push
fcmove
cwtl
lss
dec
jbe
inc
mov
jne
push
push
mov
sbb
sbb
inc
jl
jp
je
or
and
or
pusha
aaa
dec
adc
jecxz
cmp
ss
sahf
insl
faddp
idivb
cmp
insl
inc
ret
push
cmp
dec
out
pop
mov
or
xor
mov
add
jb
int3
cmc
inc
sti
jl
fisubrl
add
cmp
add
mov
or
outsl
dec
add
insb
mov
cmp
es
push
cmp
ss
fstl
imul
cmp
cmp
fcoml
cltd
roll
faddl
pusha
mov
sbb
hlt
push
sbb
test
pusha
loopne
push
mov
enter
inc
cwtl
inc
lods
push
ds
cwtl
jl
jnp
loopne
push
test
fbstp
lods
scas
hlt
mov
lods
cmp
sbb
inc
sub
addr16
sbb
fidivrl
fldenv
jbe
inc
pop
sbb
ret
push
jb
sub
je
fstps
loope
lock
xchg
xor
jno
sbb
in
cwtl
ss
cmp
cmp
lret
sbb
cs
cmpl
ret
enter
ficompl
in
inc
add
jl
roll
pusha
sub
dec
pop
sub
cmp
mov
in
add
cwtl
mov
jne
dec
mov
or
cld
sbb
xor
in
rorl
js
stos
jns
iret
lret
pusha
ljmp
js
push
dec
sub
sbb
dec
fldenv
cmp
push
test
lcall
push
std
pop
jns
adc
and
push
mov
pusha
jbe
fisttpl
sbb
jle
aaa
pop
push
inc
test
and
movsl
inc
push
mov
add
call
mov
ljmp
aad
jecxz
lcall
jns
sub
aam
xor
ret
mov
pop
mov
arpl
sbb
cmp
das
mov
xor
adc
movsb
inc
hlt
push
loop
cmpsb
leave
xchg
cmp
cmp
fsubrs
pushw
aaa
jo
xchg
or
or
fdivrl
pop
sbb
mov
lods
out
or
mov
testb
cmp
movsb
scas
mov
repnz
mov
negl
sub
fists
add
pop
fistpll
jns
cmp
out
cmp
adc
jne
mov
jmp
pop
mov
cwtl
daa
mov
movsb
cmp
scas
jg
push
or
or
push
stos
mov
push
xlat
shll
cmc
aas
push
fdivp
mov
dec
mov
sti
fisubrl
mov
pop
mov
jnp
add
mov
js
adc
or
mov
cmp
pop
ret
inc
xor
mov
adcb
and
cmp
imul
loope
dec
jmp
or
cli
div
cmp
add
sar
in
add
sbb
mov
adc
pop
movsl
or
mov
mov
jo
xor
pop
adc
add
out
xorb
in
hlt
mov
jae
push
inc
jbe
repnz
addr16
mov
dec
mov
fstps
insl
cld
xchg
mov
or
lods
mov
mov
mov
pop
push
or
ljmp
stos
jp
lock
lods
stos
stos
pop
sub
and
outsb
adc
mov
and
jmp
jns
out
mov
fsubs
psubd
ljmp
cld
shll
cmc
mov
sub
and
aam
mov
sbb
repz
pop
add
inc
dec
test
mov
push
mov
pop
stc
pushw
cmp
insl
cmpsl
add
xor
adc
jbe
sub
push
sub
adc
push
test
add
inc
sbb
cmc
cmp
cmpb
and
inc
add
sub
sbb
lds
and
lock
cmp
pop
inc
xor
push
adc
mov
pop
jbe
cmp
out
sbb
cmp
addr16
mov
das
lods
cmp
xor
and
sbb
stos
dec
js
mov
mov
cmpb
mov
or
jno
jg
pop
and
outsb
jns
inc
mov
xor
mov
cmpsl
push
sub
cmpsl
dec
push
imul
mov
rcl
xor
cli
pop
cmpb
add
or
fistps
movsb
ss
mov
push
into
imul
sti
dec
cmp
or
sub
add
int3
jl
add
mov
cld
into
sbb
lcall
add
pop
insl
push
je
imul
jp
push
and
addr16
jno
push
and
insl
push
imul
and
and
data16
and
xor
pop
insl
cmpsb
scas
jo
insl
inc
ja
dec
add
cmp
mov
lods
mov
lahf
and
push
jp
mov
or
sub
in
xchg
mov
fdivs
push
push
lea
fildll
xor
scas
cltd
xlat
jge
cmpsb
std
sub
stc
ret
xor
stos
int
mov
out
roll
dec
scas
icebp
hlt
test
mov
xchg
and
movsl
mov
insl
scas
mov
push
push
shlb
pop
xchg
mov
cmp
imul
or
adc
repz
push
adc
cld
and
mov
add
popa
sub
cmp
ror
sbb
in
outsl
push
add
test
mov
out
add
add
insl
jb
sbb
add
mov
sub
add
lret
sub
push
push
jp
push
dec
insb
loopne
cltd
popa
sub
movsb
icebp
int
fadds
pop
arpl
popf
pop
test
xchg
dec
std
jl
push
adc
imul
imul
add
mov
out
call
adc
loopne
cld
mov
test
into
mov
adc
call
in
dec
repnz
out
rorb
nop
add
add
std
sub
outsb
adc
add
int
ficoml
pop
inc
js
jmp
lcall
lea
xchg
stc
sbb
sarb
out
xchg
xor
dec
std
test
mulb
cmp
jge
bound
fcmovu
jns
fdivl
outsl
xchg
mov
sti
inc
mov
adc
push
sbbb
sbb
cmp
loopne
aam
in
cli
sti
add
mov
pop
adc
imul
adc
sbb
cs
out
mov
imul
push
add
add
push
push
inc
les
xchg
jae
pop
das
outsl
push
jbe
push
scas
mov
ja
or
loope
xchg
cmpsl
ret
add
ss
movsb
cmp
pop
clc
popa
push
cmp
ficompl
cmp
sbb
sub
cwtl
scas
iret
inc
nop
gs
shlb
in
and
push
add
push
packsswb
push
mov
popf
dec
inc
add
out
mov
cmp
xchg
dec
sub
or
lea
sub
scas
inc
add
dec
add
and
ret
add
or
scas
stc
add
mov
mov
inc
mov
xor
jns
test
loop
cmpsb
xor
and
jne
addr16
add
pop
xor
adc
pop
mov
jle
es
xor
jmp
in
adc
pop
outsb
into
lock
subb
sbb
out
movsl
dec
cs
mov
sbb
jecxz
fwait
cli
mov
adc
fistpl
add
add
xchg
imul
add
insl
shrb
sbb
add
jbe
xchg
imul
incb
add
ret
enter
or
gs
imul
add
xchg
xor
add
pop
mov
imul
adc
rcll
lret
adc
fisubs
or
ret
jns
adc
lods
lea
add
push
in
or
add
loopne
enter
inc
sub
or
and
adc
adc
xlat
in
and
fisttpll
add
or
shr
add
cmp
add
xchg
imul
xor
lea
sub
jns
or
lds
push
sti
fsts
inc
into
add
xchg
dec
sub
xchg
imul
out
add
add
add
adc
adc
inc
sub
enter
mov
adc
test
add
imul
gs
fldln2
movsb
lock
gs
in
add
add
mov
inc
jne
xor
sub
pushf
rcl
clc
xchg
push
lcall
mov
lahf
fdivrp
in
add
or
cmp
cmp
push
shrb
and
sbb
or
push
lahf
and
xor
ret
lods
push
add
mov
jne
xlat
mov
pop
push
push
xchg
repnz
sbb
test
ret
jb
and
add
iret
bound
jb
sbb
imul
add
sub
push
gs
imul
add
mov
add
ret
std
nop
jg
pop
cli
gs
int3
int3
or
jg
jo
out
dec
out
add
cmp
add
sbb
cld
leave
in
int
js
rclb
inc
pop
insb
jnp
lret
mov
adc
test
dec
icebp
push
mov
mov
xchg
rcll
lds
jmp
xchg
sub
repnz
insb
and
pop
pop
clc
subb
gs
inc
cmp
das
sbb
sbb
aaa
mov
test
clc
std
imul
outsl
insb
test
mov
loop
ljmp
dec
jb
ss
sbb
lods
aam
faddl
lods
inc
xor
lret
adc
fisubs
mov
adc
in
loopne
cmp
fbld
fs
mov
push
adc
repz
or
jbe
jo
ds
mov
fldenv
add
or
and
lock
mov
lea
dec
sub
inc
mov
ja
sti
aam
jecxz
popa
pop
into
daa
jnp
adc
inc
loope
mov
and
test
fildll
jmp
mov
jbe
loop
xor
jae
outsl
imul
add
clc
mov
icebp
add
sub
inc
or
adc
loop
inc
aaa
inc
mov
jmp
stc
add
imul
mov
push
xchg
imul
or
in
add
gs
insl
push
dec
sub
lea
or
dec
out
lcall
lret
or
mov
or
imul
add
xchg
imul
or
push
imul
imul
imul
imul
nop
push
sub
out
xor
int3
or
popa
sub
xchg
add
in
adc
pop
jmp
in
mov
add
filds
add
lret
in
dec
icebp
add
insl
movl
add
push
in
mov
add
jno
xor
clc
cmp
xchg
sbb
mov
loope
ja
xchg
dec
es
mov
or
je
jne
loope
jb
sbb
push
rclb
imul
mov
mov
and
clc
xor
je
xchg
sti
dec
jle
fiadds
loopne
lods
push
xchg
adc
mov
mov
cwtl
subb
add
out
shrl
movsl
add
push
mov
cmpsb
dec
mov
ljmp
push
xchg
or
insl
loopne
and
fwait
xor
outsb
xlat
syscall
add
xlat
push
insl
outsb
sti
add
add
sub
dec
sub
ficoms
hlt
out
add
adc
mov
fcomip
imul
inc
add
cmp
push
add
or
leave
call
jmp
push
xor
out
mov
repnz
loop
hlt
xor
xor
scas
jb
arpl
add
sbb
or
lock
test
leave
and
mov
jl
fdivrl
push
into
mov
in
cli
push
add
lahf
ss
fwait
mov
mov
mov
enter
inc
lcall
in
mov
mov
adc
enter
add
insl
or
lcall
xchg
imul
sbb
add
push
add
cmp
sarb
js
push
and
mov
mov
sbb
cmp
cmp
xchg
or
xor
adc
out
fsub
pop
cmpsl
push
sub
push
jnp
aam
jbe
sbb
fmulp
and
and
nop
push
mov
adc
xchg
add
dec
leave
clc
and
insb
cltd
xchg
lods
repnz
out
pop
push
add
or
add
pop
std
mov
in
sbb
add
nop
jno
or
add
xor
cmp
add
lret
dec
sub
dec
mov
adc
call
imul
adc
cs
mov
adc
incl
call
ret
in
aad
xor
out
add
add
mov
fs
sub
xchg
or
ss
mov
lods
lret
push
popa
cmp
cmp
or
repz
sub
pop
mov
pushf
insb
dec
pop
mov
xchg
pop
cltd
sub
inc
jbe
notl
fs
scas
jo
frstor
and
bound
inc
cmp
fadd
push
stos
pop
push
jp
loopne
dec
test
push
scas
mov
clc
mov
jmp
in
xor
jo
add
in
mov
add
nop
subl
add
insl
inc
and
sub
movsl
fldl
add
out
in
and
adc
dec
les
xchg
pop
or
adc
ja
out
or
add
inc
imul
mov
out
cmpsb
add
add
jl
add
insl
sti
call
add
xchg
imul
add
imul
cs
js
add
mov
fsubs
xchg
imul
jmp
gs
imul
add
gs
into
mov
add
mov
add
jb
add
jecxz
xor
xchg
pop
stos
dec
stos
fists
daa
dec
cmp
push
or
dec
aaa
repz
rcl
pop
cmc
test
stos
cmp
push
pushf
lods
mov
test
lea
pop
inc
adc
jl
movsl
stc
push
jns
sbbb
cli
jns
jno
aas
sbb
push
sbb
mov
push
or
ret
mov
pop
sub
cmc
xor
push
les
imul
add
sub
xor
imul
sub
and
imul
add
insl
ljmp
add
and
add
add
sbb
add
cmp
or
fistl
or
push
sbb
add
cmp
add
push
mov
add
dec
lods
or
add
data16
dec
jnp
jae
inc
add
adc
jmp
xchg
cmp
in
pop
std
add
int3
dec
sub
sbb
in
out
add
imul
add
mov
xlat
cmc
mov
sti
fstl
adc
hlt
loopne,pn
out
mov
xor
and
lret
sub
jle
mov
inc
adc
aam
or
add
or
aad
or
pop
inc
add
in
or
mov
lea
adc
add
add
mov
add
pusha
sbb
add
add
wbinvd
add
push
add
add
add
jo
or
add
pop
or
js
or
add
mov
add
cwtl
sbb
add
add
wbinvd
add
add
add
add
add
xor
sub
xchg
imul
add
lcall
add
inc
xor
in
fldt
adc
imul
fldenv
dec
sub
mov
mov
add
mov
sub
mov
mov
pop
or
jb
push
xor
pop
lcall
lea
int
outsb
xchg
pop
inc
dec
inc
divb
inc
hlt
in
dec
mov
cli
pusha
xor
popf
ja
insl
ret
or
js
mov
inc
mov
cmpb
popf
mov
add
iret
cmpsb
mov
cmp
gs
std
sbb
in
push
sarb
and
fisubrl
cmp
insl
mov
fistps
cmp
out
mov
adc
mov
adc
imul
sub
cmp
int3
dec
sub
pop
sti
fldenv
mov
pop
inc
add
add
and
lcall
dec
outsb
jno
and
jp
jns
imul
outsb
js
jne
je
ja
jb
insl
data16
addr16
jae
jb
jae
jne
jno
jns
imul
push
outsb
jns
js
outsb
jae
push
jns
imul
jp
and
ja
push
and
and
and
jns
jl
ja
and
je
push
add
or
adc
enter
lds
adc
enter
in
mov
sbb
shlb
aam
cmp
inc
in
cltd
add
lcall
data16
mov
aas
jno
or
mov
adc
sbb
sub
xchg
in
xor
pop
adc
sarb
clc
in
push
pop
pop
mov
mov
xchg
imul
jle
add
mov
rolb
add
imul
adc
enter
pop
pop
inc
add
add
clc
movsb
mov
inc
in
cli
js
jns
lds
roll
pushf
test
pop
enter
int
cmp
add
or
adcl
pushf
enter
loope
and
add
cmp
insb
cmpsb
in
mov
cmpsb
in
fs
jnp
cmp
and
dec
inc
roll
lds
xchg
pop
push
mov
lods
mov
push
xchg
sti
xor
xor
mov
push
pushf
xor
pop
adc
mov
notb
or
add
imul
out
fabs
add
pop
insl
push
jne
je
push
jp
push
push
jns
jle
jne
outsb
jae
and
je
jno
and
addr16
jno
push
and
insl
push
imul
and
and
data16
and
xchg
imul
jmp
pop
mov
add
or
sub
out
test
add
std
mov
leave
sub
inc
flds
add
push
in
repz
add
fldenv
add
rclb
jl
add
add
add
mov
xchg
imul
add
add
add
flds
add
cmpsb
out
lcall
add
insl
inc
sbb
add
int3
dec
sub
loope
dec
and
inc
adc
outsb
ja
jp
jno
ja
push
in
jl
add
insl
xlat
in
in
test
add
shrb
or
xchg
fidivl
fistpl
inc
outsb
push
in
mov
xor
mov
mov
mov
outsb
mov
jl
fdivrl
mov
sbb
lret
pushw
in
ja
adc
or
mov
imul
fdivs
call
lret
fwait
pop
aam
inc
inc
in
add
and
das
mov
xchg
adc
jg
and
ljmp
inc
sub
dec
in
add
cmp
xor
incb
sbb
gs
ds
add
cli
imul
sti
aad
sti
or
orl
xor
les
loop
cmp
fstpt
xchg
xor
mov
int
dec
movsb
scas
cmp
call
nop
xor
inc
pop
mov
and
sbb
jnp
stos
cmpsl
sti
fisttpll
loop
stos
arpl
push
in
xor
movsb
or
nop
add
lret
and
in
xchg
cmc
in
fnstenv
in
enter
sbbb
push
add
mov
ret
arpl
outsl
push
mov
inc
outsb
lahf
add
cmp
nop
rorb
ret
add
in
lcall
sub
xchg
push
pushf
mov
adc
jbe
mov
sbb
int3
xchg
test
push
xor
les
sub
mov
dec
sbb
imul
add
imul
sub
out
lret
add
mov
xor
and
add
outsl
mov
xor
popf
imul
leave
or
bound
stos
mov
lds
dec
sti
push
shrb
lock
sbb
lret
sub
sbb
mov
mov
mov
cmp
cmp
repz
sbb
imul
inc
stos
out
mov
add
ja
fcoml
and
pop
cmp
or
xchg
dec
stc
dec
lock
call
add
imul
sub
mov
sub
cmp
mov
dec
lret
dec
sub
mov
jns
xor
sbb
leave
push
pop
mov
sti
int3
xchg
mov
pop
mov
jns
or
test
mov
in
add
or
mov
imul
add
test
or
mov
add
shrb
sbb
add
inc
je
and
scas
daa
add
cmp
sti
xchg
and
jmp
testl
mov
lds
fdivr
jle
or
xor
pop
adc
xchg
daa
outsb
out
sbb
cmp
out
divl
lds
mov
cwtl
movb
lods
loopne
sti
loope
add
mov
lret
add
sbb
push
mov
movsl
repnz
std
add
pop
dec
aaa
sub
adc
addr16
rolb
decl
test
loopne
or
test
clc
and
mov
inc
pop
pop
das
jns
fadd
aas
out
sbb
lods
jno
pop
push
push
push
fisubs
mov
push
icebp
xchg
mov
pop
pop
das
js
jb
shll
pop
pop
insl
cs
loope
int
fsubp
ret
js
dec
popa
jl
adc
repnz
sub
sub
add
lds
lahf
jnp
iret
adc
pop
fldenv
addr16
jno
lahf
jnp
jmp
pop
push
or
clc
adc
fldenv
fsubrl
inc
mov
je
imul
and
popf
or
push
pop
stc
insb
movsb
push
fbstp
outsb
mov
and
fistpll
fidivrl
sub
cs
add
out
pop
repz
imul
push
gs
xchg
imul
add
mov
out
push
in
add
lcall
sti
jbe
push
out
nop
in
enter
xor
jmp
loope
loope
loop
jg
push
pop
mov
jmp
out
mov
xchg
ret
mov
mov
cli
ja
dec
pop
ja
insb
adc
dec
push
add
push
in
cltd
sti
ror
int3
out
jge
test
cs
rcrl
mov
and
pop
adc
pop
sbb
mov
xor
fistl
xchg
aad
sbb
gs
xchg
aad
repz
outsl
cs
testb
cmc
ffreep
fldl
das
mov
lock
xchg
mov
sub
mov
imull
repnz
xchg
cmp
mov
std
inc
jg
dec
cmp
ret
pop
cmp
inc
aaa
cld
xor
xor
test
repnz
mov
test
pop
push
pop
mov
ss
mov
and
dec
repnz
add
sub
fsubl
addr16
xlat
cmp
adc
add
fwait
test
lods
adc
dec
shlb
adcl
cmp
subb
std
and
out
and
add
rclb
mov
xchg
movsb
push
addr16
sbb
jg
cmp
mov
mov
stc
in
pop
jns
sub
aas
into
insb
in
jnp
jecxz
push
popa
into
ljmp
in
ljmp
push
fs
loope
xor
int
insb
inc
cltd
sub
xor
and
xchg
push
push
insl
fdivr
and
repnz
or
sub
aaa
xchg
imul
cli
add
cli
insl
jg
mov
mov
sub
add
imul
mov
xlat
xlat
std
sbb
in
clc
flds
add
or
movsl
sbb
add
in
test
rolb
in
sbb
add
xor
adc
jo
and
sub
lds
xor
pusha
mov
rol
call
addb
sbb
bound
into
in
mov
lea
arpl
cmp
inc
bound
xchg
pop
push
push
shrb
in
sub
ret
out
push
mov
adc
push
adc
inc
std
cltd
and
shll
movsl
fadds
stc
lds
xchg
pusha
inc
jo
test
mov
xchg
lret
out
or
inc
inc
or
clc
shrb
fucomi
jge
arpl
out
or
inc
inc
or
mov
and
push
or
and
jnp
xchg
call
adc
add
xchg
popa
hlt
add
xor
cmp
xor
inc
lret
jle
or
sbb
bound
test
adc
dec
sub
jbe
add
xor
add
xchg
or
inc
add
sub
sub
pop
out
cmpsl
js
add
adc
lret
cs
out
pop
jne
add
dec
sub
in
cmp
add
dec
in
in
jnp
add
lds
mov
sub
cmp
add
insl
psubsb
add
test
xor
inc
sbb
enter
lcall
sub
dec
cmpsb
add
outsl
rorb
fiaddl
push
das
push
out
mov
lods
call
ja
repnz
out
xchg
jmp
mov
xchg
popa
sub
lea
adc
add
fisubrl
add
push
aad
pushf
les
xchg
repz
adcl
and
pop
and
divl
add
fildl
or
cmpsb
lret
dec
dec
push
loopne
dec
xchg
addb
js
or
into
xor
inc
adc
lds
mov
mov
je
jno
and
scas
mov
sbb
sbb
mov
xchg
adc
inc
enter
lret
ret
insl
stos
adc
or
pop
pop
push
pushf
sbb
push
dec
add
fmuls
mov
pop
aad
mov
paddb
add
mov
push
faddl
add
add
add
xchg
xor
add
pop
out
lock
inc
aam
xlat
fdivr
mov
cli
mov
push
add
sub
mov
xor
jmp
adc
in
adc
aad
in
sti
aad
aad
int
int3
push
or
in
xor
add
mov
sub
ret
lock
imul
mov
mov
sub
mov
out
ljmp
int3
or
sub
add
jp
cmpsb
insb
fs
cmp
jl
mov
mov
mov
mov
testl
push
mov
inc
ja
cmp
ljmp
dec
mov
rcrl
stc
add
jns
jo
jle
push
cltd
adc
sbb
inc
inc
xor
jle
or
shrb
pop
dec
mov
push
mov
xchg
lret
adc
pop
mov
push
mov
xchg
lahf
xchg
cld
lret
pop
movsb
sub
gs
or
faddl
add
cmp
out
jmp
add
or
add
sub
in
cs
add
dec
dec
dec
cmp
xor
jno
add
out
cmp
add
insl
pop
cli
and
xchg
and
loop
icebp
jmp
adc
ss
ret
icebp
and
iret
cmpsb
mov
dec
lods
mov
adc
sbb
add
les
int
xchg
mov
into
popf
mov
mov
pop
pop
fdivs
push
lods
pushf
mov
insl
sub
clc
das
xchg
adc
jmp
shlb
sbb
and
fs
dec
fists
fsubrl
sub
mov
cli
iret
fcmovu
push
imul
inc
les
sbb
sub
xchg
fs
sbb
addl
push
mov
cmp
aas
pop
rolb
jae
rcl
lret
dec
add
mov
add
mov
add
or
or
add
mov
push
push
hlt
cmpsl
lret
dec
lcall
mov
xchg
push
inc
pop
mov
cmpb
and
pop
je
xor
ja
cmc
fbld
jp
data16
sbb
pop
hlt
jno
aad
mov
sbb
xor
in
add
adc
adc
out
xchg
and
lods
adc
add
or
lret
add
cmp
xchg
imul
hlt
add
gs
leave
repnz
gs
std
mov
cli
pop
ds
pop
lret
or
mov
adc
mov
add
sti
lret
add
sub
sub
call
xchg
imul
hlt
add
mov
inc
lcall
or
add
test
inc
mov
push
xchg
xchg
xor
movsl
imul
sti
fidivrs
add
sub
mov
dec
sub
fwait
add
pop
gs
std
divl
add
or
and
inc
or
adc
nop
dec
std
cli
cli
imul
in
add
add
outsb
xlat
syscall
add
add
lret
or
and
sub
out
mov
add
insl
jo
sbb
add
in
mov
add
enter
mov
adc
inc
xor
aad
xor
mov
subl
jbe
jg
inc
mov
fbld
jl
push
clc
inc
add
mov
jbe
sub
ljmp
lds
out
shll
pop
mov
mov
inc
sub
js
mov
dec
sbb
out
movsb
push
movb
divb
xorb
loop
jne
mov
hlt
insl
pop
cmpsl
sbb
mov
cmpsb
pop
push
cli
aam
sub
leave
adc
add
lds
insl
ret
pop
mov
and
cmp
ret
into
pushf
xchg
imul
out
add
add
adc
enter
out
add
mov
fdivl
jbe
add
mov
adc
out
pause
jne
imul
mov
out
xchg
xchg
shll
outsl
push
lret
imul
mov
inc
nop
pop
jge
adc
in
cli
mov
mov
add
test
or
pop
sbb
sub
add
out
mov
add
mov
xchg
imul
movl
in
pop
add
add
cmc
imul
nop
jns
xor
imul
add
push
mov
inc
push
scas
mov
mov
jmp
mov
test
dec
or
icebp
cmc
cmpsb
add
repz
arpl
movntq
popf
push
in
sbb
mov
cmp
and
aad
rcr
lahf
sbb
test
xchg
lahf
pop
dec
fcmove
ret
repz
jb
jmp
in
push
xchg
mov
fdivr
nop
dec
cltd
sahf
into
mov
mov
andb
push
xchg
jbe
insb
and
pop
fildl
sbb
xchg
in
pop
pop
cmp
ficompl
lock
into
cwtl
repz
pop
stos
mov
outsl
mov
loope
repnz
out
ja
jne
incl
mov
mov
out
scas
adc
daa
pop
push
pop
lea
dec
sbb
xchg
pusha
mov
pusha
dec
ljmp
rorb
inc
and
jno
and
dec
sub
popa
sub
gs
dec
add
pop
lret
add
add
imul
jle
add
or
out
or
add
xchg
imul
icebp
add
adc
in
or
add
pushf
sub
add
pop
xchg
imul
cmc
add
mov
std
xor
add
mov
or
cmp
dec
sub
cmp
lea
sub
lahf
xchg
imul
roll
add
add
xchg
gs
sti
cltd
mov
in
mov
cwtl
lds
add
add
xchg
inc
lcall
aaa
and
aam
mov
lret
or
xchg
add
sub
in
hlt
add
insl
inc
ss
and
inc
adc
mov
sbb
add
insl
inc
mov
push
add
mov
out
imul
add
popf
std
sbb
add
adc
and
lret
or
xchg
gs
das
rolb
add
dec
or
dec
jl
mov
dec
insl
fucom
jg
add
push
xchg
dec
add
dec
dec
sub
imul
sub
jp
push
sub
out
icebp
adc
mov
pop
adc
notl
add
sbb
insl
cmp
mull
imul
add
sub
pop
add
add
add
leave
sti
fsts
lret
movsb
push
in
cmpsl
adc
add
dec
adc
mov
add
or
in
add
and
add
sub
add
add
mov
out
mov
add
cmp
add
std
imul
inc
mov
add
in
repz
and
imul
cwtl
lret
adc
lret
nop
jns
sub
out
adc
lret
nop
pop
sub
xchg
imul
push
add
imul
mov
adc
push
xchg
pushf
jl
jecxz
nop
pop
sub
mov
adc
insl
inc
int
mov
push
int
adc
int
into
xor
add
gs
xchg
add
notb
add
push
jl
mov
out
jge
add
or
or
imul
add
sub
push
imul
scas
sbb
imul
imul
xlat
shrl
dec
add
or
add
enter
leave
xchg
mov
mov
add
add
jns
sbb
pop
syscall
add
adc
cli
imul
sti
or
jp
cli
std
inc
adc
lret
int3
or
in
insl
fdivrl
dec
mov
out
imul
test
mov
pop
cli
mov
or
sbb
add
pop
out
cld
sbb
or
mov
imul
sub
sub
inc
or
add
add
imul
xchg
imul
add
mov
fnsave
aad
fadd
imul
ss
imul
in
int
add
or
cmp
xchg
imul
add
add
add
or
std
ds
std
mov
or
xchg
or
xchg
or
add
sub
fsubr
cld
or
mov
out
xor
add
xchg
imul
add
add
enter
add
mov
or
imul
pop
out
std
push
add
sub
mov
sub
cmpsb
fstl
mov
subl
imul
arpl
icebp
or
icebp
nop
dec
add
or
or
rcrb
add
gs
imul
add
mov
sub
xchg
imul
add
fsub
add
or
call
dec
mov
mov
sub
popl
mov
xchg
dec
add
dec
mov
std
xchg
imul
add
imul
imul
add
or
add
add
mov
imul
std
insl
cwtl
mov
dec
popf
incb
or
leave
cmpsb
out
in
sti
add
add
or
lds
add
mov
sbb
add
push
frstor
insl
jmp
in
mov
fsubrl
stc
mov
pop
insl
adc
adc
imul
imul
les
sti
adc
loopne
pop
add
add
nop
jno
or
nop
pop
sub
sub
gs
sub
sub
dec
add
sub
out
rorl
out
adc
rcr
rcl
int
pop
add
cmc
mov
pop
push
adc
lds
add
loop
cmc
sbb
fstl
xor
pop
or
imul
adc
mov
or
add
add
xlat
sti
aad
mov
sti
xlat
std
in
push
pop
add
mov
cmp
xchg
imul
add
imul
nop
dec
add
imul
push
imul
imul
movsb
lea
and
sub
adc
rorb
add
insl
roll
cwtl
xchg
imul
add
add
imul
sub
add
push
or
in
cmp
add
jmp
imul
mov
or
cmp
sub
cmp
sysret
add
push
or
enter
pop
cli
imul
and
add
mov
pop
mov
in
pop
pop
add
jns
inc
xchg
dec
add
adc
ficoml
leave
push
add
enter
push
imul
adc
insl
jnp
mov
imul
add
or
or
cmpsb
sub
sbb
or
ficoms
iret
adc
add
xchg
dec
add
pop
sub
xchg
imul
add
sub
mov
cld
pop
add
cmp
lea
sub
iret
add
xlat
add
mov
xlat
lret
xor
imul
imul
imul
adc
lds
in
push
imul
adc
nop
sbb
imul
cmp
ds
pop
add
mov
xchg
add
jecxz
add
add
sbb
dec
sub
int3
dec
sub
push
cmp
ljmp
jns
cmp
test
inc
out
rolb
sub
in
xchg
adc
gs
pop
add
adc
lds
adc
in
push
imul
mov
mov
pop
imul
sub
out
daa
incb
add
pop
add
add
imul
sbb
mov
out
sub
insl
iret
dec
push
loopne
out
sub
add
sub
mov
pop
lret
or
adc
test
and
add
xlat
adc
decl
iret
xlat
fadd
rorb
sti
dec
cmp
enter
push
imul
xchg
lds
mov
fcmovb
sti
or
add
test
or
fcom
fisttpl
or
imul
out
loop
add
add
ja
imul
popf
mov
add
or
xchg
imul
add
or
mov
pop
imul
sub
cli
mov
jnp
insl
mov
inc
xor
add
add
lret
cmc
adc
gs
movsb
nop
dec
add
or
or
fsubs
movsl
or
add
xchg
dec
add
imul
add
add
add
imul
or
lea
or
dec
sub
mov
out
xchg
adc
or
shrb
sbb
int3
dec
sub
xor
add
add
dec
add
ret
add
adc
or
out
add
add
or
or
cld
add
or
or
or
or
xchg
xchg
pop
gs
adc
add
pop
sub
or
xchg
imul
add
fistpll
sti
aad
mov
cmp
aad
adc
fildll
iret
xchg
aad
sub
or
out
test
add
or
xchg
imul
add
add
lea
in
popl
or
fmuls
add
dec
cld
fsubrl
mov
imul
inc
add
dec
sub
out
push
syscall
add
mov
dec
add
imul
add
imul
mov
lahf
ficoml
add
add
stos
or
add
sub
imul
into
xlat
into
test
pop
push
pop
imul
pop
imul
out
mov
add
or
sub
lea
sub
jns
or
adc
mov
syscall
add
add
subl
inc
cli
mov
add
or
je
int3
dec
sub
pop
pusha
imul
sub
das
lea
imul
add
or
adc
orb
add
push
or
ret
fisubrs
and
in
js
add
add
fcos
imul
add
in
imul
mov
or
lret
imul
cli
mov
in
add
add
nop
dec
or
scas
sbb
adc
notl
pop
in
dec
adc
jno
sub
aam
out
xchg
mov
push
dec
add
imul
add
add
add
add
xchg
imul
add
add
in
sbb
add
into
or
adc
fmull
adc
imul
nop
subl
packssdw
clc
arpl
mov
shrl
fildl
nop
dec
add
incb
or
adc
in
mov
pop
imul
or
sub
fsubr
lea
sub
test
or
dec
sub
leave
mov
pop
insl
xor
mov
xchg
imul
sbb
xchg
mov
xchg
dec
add
sub
out
pop
push
add
imul
adc
mov
jo
mov
out
add
add
add
add
or
push
sub
xchg
imul
add
add
mov
sub
sub
add
add
xlat
out
pop
push
add
sub
gs
ljmp
imul
add
imul
aad
imul
adc
out
adc
out
sbb
push
ss
push
ss
cwtl
add
inc
clc
xchg
lcall
iret
out
inc
adc
lea
or
jns
push
xchg
dec
add
insl
lret
or
rcll
dec
add
or
mov
lea
adc
out
cmp
lods
stc
add
adc
packssdw
add
sub
add
in
std
push
int
adc
std
adc
out
push
imul
mov
cli
out
insb
add
add
rol
fsts
dec
push
mov
imul
jg
xchg
imul
add
add
sbb
mov
test
mov
lds
movb
push
inc
xor
cld
fnstsw
xchg
dec
test
hlt
sbb
hlt
or
sbb
mov
or
add
add
imul
push
imul
imul
pop
mov
test
arpl
dec
or
xchg
or
mov
xchg
dec
add
xchg
imul
add
out
cmp
add
add
sub
add
arpl
add
lea
add
add
in
imul
add
add
or
setb
or
fmull
add
cmp
imul
imul
sub
jae
scas
adc
or
adc
adc
out
jne
xchg
adc
std
mov
gs
out
sbb
add
fildl
add
nop
pop
add
in
je
add
or
add
mov
in
adc
std
pop
nop
dec
add
sub
push
push
nop
pop
or
lret
sub
imul
add
in
aaa
std
add
imul
and
xchg
mov
nop
dec
add
add
pop
sub
mov
lret
dec
sub
sub
or
imul
sub
add
unpcklps
decb
loopne
int
pusha
imul
imul
imul
imul
ss
adc
pop
xchg
lahf
cli
pop
shll
out
testl
aad
int3
dec
sub
popf
leave
bound
or
or
cld
mov
cli
popa
outsl
inc
add
sub
scas
ljmp
imul
add
add
adc
cwtl
incb
add
enter
sub
push
mov
or
imul
adc
or
cmp
cwtl
push
add
cli
aad
mov
pop
out
nop
adc
sub
add
dec
add
push
pop
mov
imul
insl
cmpsb
mov
inc
std
xlat
in
mov
add
add
gs
or
cmp
fsubs
imul
clc
add
mov
lret
dec
sub
das
lret
dec
sub
inc
gs
imul
add
xlat
aad
cld
aad
adc
sti
fildll
pop
add
nop
mov
pop
gs
xor
sub
dec
add
aad
xchg
imul
add
xchg
xchg
xchg
xchg
sbb
adc
xlat
jecxz
ss
mov
or
add
add
dec
sub
pop
sbb
icebp
stc
add
in
sub
add
imul
imul
jp
lea
adc
mov
or
cmp
push
xchg
imul
add
in
sbb
add
lret
dec
sub
mov
imul
dec
sub
xchg
imul
add
in
mov
pop
in
mov
repnz
incb
adc
adc
add
or
jne
inc
jl
sbb
mov
mov
xchg
jbe
add
mov
add
push
add
jnp
pop
insl
sub
pop
sub
dec
int3
or
sbb
push
insl
adc
xor
lea
or
xchg
or
out
push
stc
add
in
js
add
in
or
push
lea
adc
dec
sub
popl
mov
add
nop
dec
add
int
push
jne
lea
or
das
out
faddl
add
popf
cmp
in
imul
test
mov
repnz
jns
or
add
or
or
sub
add
jns
or
test
fisttps
testl
dec
add
ret
xlat
add
xlat
imul
imul
add
imul
adc
cmp
xlat
or
int3
lea
movl
sub
mov
pop
mov
add
mov
push
imul
in
lea
add
sub
imul
add
imul
out
gs
add
and
imul
sub
daa
push
xchg
imul
add
or
bound
xor
add
and
mov
jns
or
sub
dec
or
add
ficoml
stos
incl
add
cmpsl
imul
mov
adc
imul
add
xlat
nop
pop
add
add
decb
test
test
jmp
scas
adc
aad
imul
sub
add
aad
inc
imul
nop
dec
add
sbb
lds
imul
adc
add
nop
pop
or
cli
gs
aad
out
inc
or
push
mov
add
or
add
dec
add
imul
add
insl
adcl
enter
std
decb
sub
add
imul
xlat
jnp
imul
add
pop
cli
std
out
sub
add
imul
add
adc
or
add
adc
out
cld
incl
add
add
mov
nop
jns
push
imul
imul
adc
enter
lret
hlt
adc
enter
incl
ds
mov
rorl
imul
mov
adc
adc
mov
or
inc
out
mov
mov
and
adc
aaa
xchg
imul
add
mov
add
push
cmc
add
pop
lea
sub
add
sub
cmp
xchg
imul
add
dec
add
sbb
jle
cli
or
int3
dec
sub
scas
mov
pop
mov
adc
clc
pop
sub
or
sub
fsubs
jns
or
aam
add
mov
out
cmp
add
nop
jb
mov
sub
add
fcmovne
dec
sub
add
dec
or
or
xchg
aad
out
ja
add
clc
test
pop
jo
subl
fildl
imul
jns
xor
add
cmp
inc
out
sar
add
add
sti
fldcw
shr
adc
imul
push
pop
gs
pop
ds
add
imul
add
lret
or
dec
xchg
imul
add
imul
imul
xor
imul
xor
fadd
int
adc
in
jne
add
out
loope
add
aam
xchg
dec
sub
gs
mov
add
mov
or
mov
or
or
cmp
dec
clc
add
sti
aad
vunpcklpd
mov
mov
add
std
cli
xor
out
jo
add
mov
or
add
out
adc
pop
add
sub
or
sub
or
cmp
dec
sub
inc
repnz
xchg
imul
add
popf
int3
or
imul
add
mov
or
lea
cmp
add
dec
add
adc
jno
add
imul
sub
sub
xor
sti
lret
daa
std
sub
fisubrl
imul
push
out
test
mov
nop
dec
add
pop
in
mov
dec
or
adc
add
sub
cmp
mov
cmp
pop
mov
push
out
paddb
add
cld
leave
push
push
imul
in
push
incb
add
adc
sub
imul
sub
out
testl
dec
mov
add
push
push
add
rcll
mov
push
add
pop
add
mov
xchg
imul
add
out
leave
incl
add
enter
clc
in
stc
clc
add
gs
lret
dec
sub
mov
out
adc
add
sti
add
mov
and
imul
imul
mov
sub
ficoml
cmp
add
mov
add
adc
add
mov
out
ds
in
sbb
add
adc
dec
add
or
sbb
daa
sti
add
mov
xlat
in
fadds
add
lret
or
mov
clc
add
add
mov
in
add
add
in
sub
add
insl
xchg
pop
pop
in
jns
xor
mov
xchg
imul
add
imul
imul
or
iret
imul
test
inc
insl
lods
mov
test
icebp
nop
pop
add
add
stos
cli
mov
or
mov
mov
std
xchg
xchg
sbb
test
push
lea
in
arpl
add
cmp
sub
add
add
mov
add
mov
in
jl
add
imul
add
imul
dec
sub
xchg
imul
add
in
push
stc
add
gs
push
add
add
dec
add
lds
out
xor
add
adc
loop
add
jb
mov
out
sbb
add
imul
mov
mov
imul
mov
adc
enter
sub
jb
outsb
xchg
imul
add
out
cs
add
in
dec
add
cli
cli
popf
adc
call
dec
cltd
in
imul
out
xor
insl
mov
adc
notl
xlat
iret
in
es
add
mov
dec
pop
or
out
pop
add
add
push
mov
xchg
dec
add
sbb
inc
out
xchg
add
mov
out
int3
add
add
push
add
or
add
mov
add
incb
or
sti
testl
leave
imul
cmp
sub
xor
add
iret
in
enter
mov
insl
cmp
sub
imul
testb
mov
xchg
imul
add
mov
or
xor
fwait
inc
pusha
imul
add
imul
lock
nop
pop
or
mov
or
add
test
mov
nop
subl
adc
nop
jns
sbb
jns
sbb
sub
sub
clc
repz
mov
add
sub
jmp
cmp
out
repnz
add
sbb
imul
xlat
notl
cmpsl
nop
pop
or
gs
mov
or
mov
addr16
imul
cmc
add
imul
movsl
repz
lret
dec
sub
int
out
add
add
std
add
sti
loope
int
mov
mov
imul
adc
inc
out
add
nop
pop
sub
xchg
imul
cmpsb
xor
js
add
mov
pop
imul
les
or
sub
mov
add
imul
adc
out
popf
sti
aad
rclb
mov
sbb
jecxz
leave
mov
imul
imul
test
jmp
xlat
nop
sbb
std
gs
mov
or
add
std
imul
cli
std
or
in
dec
add
add
jns
or
dec
sub
mov
out
out
repnz
in
outsb
std
add
insl
test
pop
in
mov
in
fcomip
add
add
adc
push
add
add
or
in
mov
movsb
lret
or
fs
imul
add
imul
imul
sti
int3
add
lret
nop
pop
add
mov
pop
icebp
add
in
in
out
add
gs
arpl
sub
cmpsl
jb
mov
out
mov
mov
mov
xor
mov
inc
xchg
dec
add
inc
sub
jns
or
dec
sub
inc
repz
xchg
imul
add
gs
mov
mov
adc
imul
add
imul
nop
dec
add
or
testb
push
or
add
mov
adc
dec
add
out
in
out
add
sti
aad
or
add
in
cmpsl
cli
add
in
lahf
in
add
adc
clc
adc
aam
dec
add
lret
out
add
mov
cmp
jge
mov
sub
mov
cmp
xor
add
cmc
test
push
imul
lret
or
test
mov
cmp
out
or
add
lds
into
adc
imul
nop
pop
or
fimuls
test
data16
push
or
add
enter
stc
add
gs
sub
push
push
add
sub
inc
xchg
imul
add
cld
enter
pop
mov
pop
out
cwtl
testb
xchg
imul
incl
add
dec
add
add
addl
add
mov
sub
dec
add
ja
lret
dec
sub
push
out
mov
jns
inc
xchg
dec
add
insl
pop
pop
aam
add
adc
push
out
mov
push
dec
jl
decb
add
jl
hlt
dec
jl
cli
dec
jl
or
mov
dec
jl
adc
jge
dec
jl
add
or
dec
jl
add
jl
cmc
dec
jl
add
push
dec
jl
hlt
dec
jl
add
jl
stc
dec
jl
add
decl
or
popa
decl
push
dec
jl
or
add
dec
jl
add
jl
push
dec
jl
std
dec
jl
push
dec
jl
cld
dec
jl
or
pusha
or
dec
jl
or
dec
jl
testl
add
or
jl
add
add
add
push
dec
jl
add
cmc
dec
jl
stc
dec
jl
sti
dec
jl
add
testl
pop
dec
jl
add
jl
cmc
dec
jl
std
dec
jl
or
mov
add
dec
jl
or
inc
add
jl
or
movsl
testl
pop
dec
jl
or
pusha
testb
dec
jl
clc
dec
jl
or
xor
sti
dec
jl
testl
add
jl
sti
dec
jl
add
or
roll
dec
jl
sti
dec
jl
testl
decl
sti
dec
jl
hlt
dec
jl
cli
dec
jl
add
sti
dec
jl
add
hlt
dec
jl
add
jl
sti
dec
jl
add
jl
cmc
dec
jl
adc
insb
sti
dec
jl
decb
cld
dec
jl
or
dec
jl
add
jl
or
jp
dec
jl
sti
dec
jl
clc
dec
jl
add
cld
dec
jl
sti
dec
jl
cld
dec
jl
or
js
dec
jl
cld
dec
jl
cmc
dec
jl
add
jl
or
insb
sti
dec
jl
or
xchg
or
jl
push
dec
jl
sti
dec
jl
add
jl
clc
dec
jl
testl
add
jl
push
dec
jl
or
insb
sti
dec
jl
add
testb
dec
jl
add
std
dec
jl
add
or
mov
cld
dec
jl
or
xchg
or
xor
dec
jl
push
dec
jl
hlt
dec
jl
cli
dec
jl
cli
dec
jl
hlt
dec
jl
hlt
dec
jl
add
dec
jl
add
add
add
dec
jl
repz
jl
add
adc
jns
dec
jl
push
dec
jl
add
or
dec
jl
or
test
dec
jl
cli
dec
jl
or
adc
dec
jl
add
adc
mov
dec
jl
or
dec
jl
add
add
jl
or
jl
or
dec
jl
or
sbb
dec
jl
testb
dec
jl
or
roll
dec
jl
cli
dec
jl
clc
dec
jl
add
jl
stc
dec
jl
or
jo
dec
jl
testl
or
dec
jl
clc
dec
jl
cld
dec
jl
add
or
sar
dec
jl
decl
cli
dec
jl
or
addr16
dec
jl
or
mov
or
add
dec
jl
or
pusha
testb
dec
jl
cld
dec
jl
clc
dec
jl
stc
dec
jl
or
movl
dec
jl
or
mov
dec
jl
testb
dec
jl
or
xor
testl
or
into
or
xchg
or
jl
cld
dec
jl
or
pusha
testb
dec
jl
add
or
jns
dec
jl
cld
dec
jl
push
dec
jl
or
addr16
dec
jl
testl
add
jl
or
adc
add
or
jo
dec
jl
add
add
or
xor
testl
or
jns
dec
jl
add
testl
loop
add
adc
cmc
adc
aad
and
insl
mov
pusha
pop
imul
adc
adc
pop
imul
ret
imul
imul
imul
insl
add
mov
nop
jns
xor
int3
out
pop
in
add
int3
or
mov
mov
sub
jp
in
or
add
xchg
imul
out
add
mov
pop
mov
lret
or
add
push
loop
add
sub
sub
test
imul
add
mov
or
gs
jbe
push
call
mov
add
mov
add
sub
add
xchg
dec
sub
decb
or
or
xchg
imul
add
adc
imul
adc
aad
fstl
negl
and
or
fwait
ljmp
insb
out
test
add
mov
imul
push
pop
xchg
imul
icebp
add
insl
sub
xchg
or
add
imul
test
fldt
mov
cmp
jae
orl
mov
xchg
inc
jb
mov
int3
in
test
add
imul
or
mov
xlat
out
nop
pop
add
imul
mov
pop
mov
dec
sub
in
jbe
add
mov
inc
pop
mov
cmp
incb
add
std
incb
add
dec
add
fadds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
loop
ss
add
add
divb
dec
aaa
sarl
cmp
or
pusha
ds
add
add
cmp
add
add
cmp
ds
ds
add
add
xor
add
add
cmp
or
dec
xor
xchg
movl
add
sbb
inc
cmp
cmp
pop
add
add
xor
mov
or
cld
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
cmp
pop
add
dec
add
dec
add
fs
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
jns
ja
outsb
add
dec
add
push
dec
add
je
add
add
cmp
xor
add
sbb
add
jb
jb
push
jae
jns
js
add
add
je
jb
jne
add
jle
push
add
push
add
add
insl
add
jns
js
add
add
dec
add
push
dec
add
push
add
outsb
add
add
add
dec
add
push
pop
add
js
outsb
add
add
add
dec
add
push
ja
jae
add
push
add
push
add
add
push
insb
add
dec
add
jle
ja
outsb
add
jns
add
add
ja
outsb
add
jns
and
add
ss
add
add
push
insb
add
pop
add
imul
jo
js
add
add
push
add
insb
add
add
dec
add
push
jae
add
push
add
add
push
jge
push
add
add
ja
outsb
add
jns
push
inc
add
jno
imul
push
add
imul
add
push
add
add
jno
jl
add
push
and
add
js
and
add
add
add
ja
je
imul
push
ja
js
outsb
add
add
add
xor
xor
add
add
pop
add
push
add
jp
outsb
add
add
add
add
dec
add
push
dec
add
je
add
add
pop
add
jae
js
jno
add
outsb
add
add
or
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
pop
push
inc
dec
dec
dec
push
dec
push
inc
dec
dec
dec
push
dec
pop
add
add
add
add
sldt
push
dec
dec
imul
add
addl
add
add
incl
add
push
add
add
add
add
add
add
fs
add
add
add
inc
add
add
add
loop
add
add
jb
std
dec
sbb
and
scas
fbstp
movsb
adc
add
inc
les
add
add
add
push
inc
add
add
xor
add
or
or
add
inc
add
lock
add
decl
add
add
add
add
add
add
add
add
inc
add
inc
add
add
add
add
addb
add
add
add
xor
arpl
imul
arpl
imul
add
add
loopne
add
add
add
inc
add
sub
and
add
or
add
adc
add
inc
inc
add
add
add
cmp
pop
add
jae
add
jae
pop
add
add
add
jo
jo
inc
add
je
popa
add
add
arpl
popa
add
add
add
jo
pop
add
push
add
add
bound
jo
add
or
inc
add
add
add
loopne
add
add
add
incl
add
add
inc
add
inc
inc
add
add
rcr
add
fiadds
add
add
mov
add
add
fiadds
add
add
fcomp
inc
add
add
add
fiadds
add
add
fcomp
inc
add
add
filds
adc
inc
add
add
add
sub
enter
fsub
inc
add
pop
add
add
add
loope
add
incl
add
add
add
add
add
sub
clc
loope
add
incl
adc
cmp
add
je
inc
add
add
add
filds
js
sub
test
inc
add
add
add
or
add
add
pop
loopne
add
loop
add
add
add
inc
add
loopne
add
loopne
add
loopne
add
add
add
fiadds
dec
fiadds
fs
inc
add
inc
add
inc
add
inc
add
filds
dec
fiadds
fs
inc
add
inc
add
inc
add
loopne
add
filds
dec
fiadds
fs
inc
add
inc
add
inc
add
add
add
iret
or
add
add
add
adc
add
subl
jmp
subl
jmp
subl
jmp
add
add
add
add
inc
add
jmp
add
incl
add
add
inc
add
or
jle
lcall
add
add
cmp
inc
add
add
or
add
add
add
add
add
inc
add
push
jecxz
add
add
insb
loope
add
incl
add
add
add
xor
add
add
gs
push
add
into
js
test
adc
add
addr16
nop
lahf
subl
pop
std
dec
sbb
and
scas
fbstp
movsb
jp
sbb
inc
mov
aad
mov
dec
lods
xor
or
stos
add
xchg
inc
outsl
jb
add
add
cs
push
add
xor
inc
cmp
outsl
addr16
insl
and
insb
gs
dec
imul
je
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
add
add
inc
add
add
add
add
add
add
add
loop
add
inc
add
inc
inc
add
dec
lods
xor
or
stos
add
xchg
inc
xor
dec
inc
xor
imul
dec
lods
xor
or
stos
add
xchg
dec
xor
inc
cmp
add
add
add
add
imul
or
add
push
gs
dec
push
xor
or
add
and
and
add
add
add
add
add
add
add
add
inc
add
add
aam
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
je
dec
push
xor
mov
inc
add
inc
add
add
loopne
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
outsl
add
mov
inc
add
add
add
in
inc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
insl
xor
inc
dec
dec
je,pn
je
add
add
add
inc
insb
popa
arpl
dec
imul
inc
add
add
clc
inc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
dec
add
cmp
push
add
xor
and
push
add
xor
add
add
cld
jecxz
add
inc
add
add
add
lods
xor
or
stos
add
xchg
push
add
add
aaa
add
cmp
xor
imul
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
mov
or
add
dec
add
cmp
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jns
lods
xor
or
stos
add
xchg
adc
add
inc
add
insl
add
push
add
cmp
xor
add
add
add
add
pop
add
add
add
add
add
js
add
add
add
add
add
inc
add
add
add
add
add
push
add
add
or
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
mov
incl
add
add
add
or
add
push
add
dec
add
add
add
sbb
add
pop
add
insl
add
add
xor
inc
add
dec
add
add
add
add
add
push
add
add
add
add
add
sbb
add
add
xchg
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
add
add
xchg
add
or
add
add
add
add
inc
add
add
add
arpl
dec
add
arpl
inc
add
arpl
dec
add
add
add
cmp
bound
add
add
xor
push
dec
add
insb
add
data16
dec
add
add
add
add
add
imul
add
add
add
add
add
xor
xor
add
add
add
add
cmp
add
or
add
add
cmp
outsb
add
add
add
add
add
add
xor
inc
add
dec
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
sub
add
jns
and
dec
add
cmp
outsb
add
cmp
jae
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
push
cmp
jb
add
jbe
popa
push
popa
jb
insl
jo
jno
add
pop
pop
jbe
popa
push
popa
jb
outsb
add
jbe
popa
inc
outsl
outsl
insb
push
popa
jb
jne
insb
add
add
pop
pop
jbe
popa
push
popa
jb
bound
pop
pop
jbe
popa
push
popa
jb
imul
popa
push
popa
jb
outsb
je
pop
pop
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
push
bound
outsb
add
jbe
popa
push
cmp
je
xor
add
add
jbe
popa
push
popa
jb
jae
dec
je
add
pop
pop
jbe
popa
push
je
push
outsl
push
outsb
imul
add
jbe
popa
inc
popa
je
push
popa
jb
add
add
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
outsb
add
add
pop
pop
jbe
popa
push
je
push
outsl
inc
outsb
jae
add
pop
pop
jbe
popa
inc
outsb
gs
je
inc
outsl
jne
fs
jb
outsl
jb
add
add
jbe
popa
push
popa
jb
outsl
jb
gs
add
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
dec
xor
jb
push
popa
jb
add
pop
pop
jbe
popa
push
popa
jb
outsl
jo
add
add
pop
pop
jbe
popa
dec
xor
jb
popa
jb
add
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
popa
jb
outsl
jb
outsb
imul
push
popa
jb
fs
jbe
popa
push
je
push
popa
jb
popa
insb
add
pop
pop
jbe
popa
push
jne
dec
ja
gs
add
pop
pop
jbe
popa
inc
imul
add
pop
pop
jbe
popa
inc
gs
ja
gs
add
pop
pop
jbe
popa
inc
gs
ja
gs
add
pop
pop
jbe
popa
push
je
inc
insl
jo
pop
pop
jbe
popa
inc
gs
add
add
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
push
popa
jb
outsl
jbe
add
jbe
popa
inc
imul
add
pop
pop
jbe
popa
inc
jb
gs
bound
imul
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
inc
popa
je
pop
pop
jbe
popa
dec
xor
popa
jb
add
jecxz
add
inc
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
popa
jb
popa
je
pop
pop
jbe
popa
push
jb
outsb
je
bound
add
pop
pop
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
popa
jb
outsl
jbe
add
add
pop
pop
jbe
popa
dec
outsb
inc
jb
outsl
jb
add
add
jbe
popa
push
gs
jns
je
insl
inc
jb
outsl
jb
pop
pop
jbe
popa
inc
jb
inc
outsl
outsb
jae
jb
arpl
add
jbe
popa
inc
jb
outsl
jb
jbe
jb
insb
outsl
ja
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
push
je
dec
outsl
jbe
add
add
pop
pop
jbe
popa
dec
outsb
push
je
add
pop
pop
jbe
popa
push
je
inc
outsl
jo
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
gs
add
add
jbe
popa
dec
jb
jae
insb
je
push
bound
add
add
add
dec
fiadds
incl
add
add
add
add
add
add
inc
add
add
add
ljmp
insb
ljmp
dec
add
add
add
call
incl
add
add
add
incl
add
add
add
loope
add
inc
inc
add
add
add
inc
add
add
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
mov
lea
xor
push
push
mov
mov
mov
mov
mov
mov
call
cmp
fnclex
jge
mov
push
push
push
push
call
jmp
mov
cmp
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
flds
fsubs
mov
push
cmpl
jne
fdivs
jmp
pushl
call
fnstsw
test
jne
fstps
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
lea
push
push
call
test
fnclex
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
lea
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
lea
push
push
mov
mov
call
test
fnclex
jge
push
push
push
push
call
flds
fsubs
mov
push
cmpl
jne
fdivs
jmp
pushl
call
fnstsw
test
jne
fstps
push
call
test
fnclex
jge
push
push
push
push
call
lea
call
mov
test
jne
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
mov
mov
lea
call
mov
push
push
push
call
mov
mov
lea
call
push
push
call
lea
mov
call
test
jle
mov
sub
jo
push
push
call
mov
lea
call
jmp
mov
lea
call
mov
test
jne
push
push
call
mov
push
push
mov
call
test
fnclex
jge
push
push
push
push
call
movl
fwait
push
jmp
lea
call
lea
call
ret
mov
lea
call
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
jmp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
movl
mov
and
mov
mov
and
mov
movl
mov
mov
mov
push
call
movl
push
push
lea
push
call
push
push
lea
push
call
push
push
lea
push
call
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
movl
mov
cmpl
jne
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
push
call
mov
call
cmpl
je
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
push
mov
push
call
call
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
push
push
mov
push
call
call
jmp
jmp
movl
mov
movl
movl
push
call
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
movl
lea
push
call
lea
lea
call
movl
movl
movl
lea
lea
call
push
push
lea
push
lea
push
lea
push
call
movl
movl
movl
movl
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
lea
push
lea
push
call
push
mov
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
lea
call
movl
mov
lea
call
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
cmpl
jne
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
jmp
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
cmpl
jne
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
jmp
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
cmpl
jne
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
push
push
call
mov
lea
call
push
mov
push
call
mov
lea
call
push
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
movl
mov
push
push
push
push
call
movl
push
call
sub
jo
push
lea
push
call
lea
push
call
mov
lea
call
lea
call
movl
push
lea
push
push
call
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
push
push
call
neg
sbb
neg
neg
mov
lea
call
movswl
test
je
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
movl
push
mov
push
mov
push
push
call
mov
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
mov
movswl
mov
cmpl
ja
mov
jmp
jmp
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
jmp
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
jmp
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
jmp
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
jmp
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
movl
push
mov
add
jo
push
lea
push
push
call
movl
push
lea
push
push
call
movl
push
lea
push
push
call
movl
push
call
movl
movl
movl
lea
lea
call
lea
push
lea
push
call
lea
lea
call
lea
call
movl
lea
mov
lea
push
lea
push
mov
mov
mov
push
call
movl
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
push
mov
push
mov
push
push
push
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
movl
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
push
push
mov
push
mov
push
push
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
movl
movl
movl
lea
push
lea
push
lea
push
call
push
call
mov
lea
call
push
push
push
push
call
lea
call
lea
call
movl
push
lea
push
push
call
movl
push
call
movl
lea
push
lea
push
call
push
call
lea
call
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
push
push
call
neg
sbb
inc
neg
mov
lea
call
lea
call
movswl
test
je
movl
movl
movl
lea
lea
call
movl
movl
movl
lea
push
lea
push
lea
push
call
mov
lea
call
movl
movl
movl
movl
movl
movl
movl
lea
push
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
movl
movl
movl
lea
push
lea
push
lea
push
lea
push
call
push
lea
push
call
mov
lea
call
movl
lea
push
call
mov
movl
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
movl
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
mov
lea
call
lea
call
movl
lea
lea
call
movl
movl
movl
lea
push
lea
push
lea
push
lea
push
call
push
lea
push
call
mov
lea
call
lea
call
movl
movl
movl
lea
push
lea
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
lea
push
call
mov
lea
call
movl
lea
push
lea
push
lea
push
call
push
call
mov
movl
lea
lea
call
lea
push
lea
push
push
call
add
movl
movl
movl
lea
push
lea
push
call
movswl
test
je
movl
movl
movl
lea
lea
call
movl
lea
push
lea
push
lea
push
call
mov
cmpl
jne
movl
lea
mov
lea
push
lea
push
mov
mov
mov
push
call
movl
lea
mov
lea
push
lea
push
mov
mov
mov
push
call
movl
movl
cmpl
jae
movl
jmp
call
mov
movl
cmpl
jae
movl
jmp
call
mov
mov
add
push
mov
add
push
mov
push
lea
push
call
push
call
call
mov
push
lea
push
call
lea
call
movl
call
movl
fwait
push
jmp
lea
push
lea
push
lea
push
lea
push
push
call
add
lea
push
lea
push
push
call
add
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
push
lea
push
push
call
add
lea
call
lea
mov
lea
push
push
call
lea
call
lea
mov
lea
push
push
call
lea
call
lea
mov
lea
push
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
push
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
incl
clc
incl
cltd
add
cmp
inc
add
add
call
int3
int3
int3
push
mov
sub
push
mov
push
mov
mov
call
push
push
push
mov
movl
movl
movl
movl
movl
push
call
movl
lea
push
call
lea
push
call
lea
push
lea
push
call
sub
fstpl
mov
mov
mov
push
call
lea
push
lea
push
call
sub
fstpl
mov
mov
mov
push
call
fldl
fcompl
fnstsw
test
jne
movl
jmp
movl
mov
neg
mov
lea
push
lea
push
push
call
add
movswl
test
je
movl
cmpl
jne
push
push
call
movl
jmp
movl
push
mov
mov
push
push
call
add
movl
lea
push
call
lea
lea
call
movl
lea
push
lea
push
call
movl
movl
lea
push
lea
push
call
movl
movl
lea
push
lea
push
call
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
movl
lea
lea
call
movl
lea
push
lea
push
call
movl
movl
lea
push
lea
push
call
movl
movl
lea
push
lea
push
call
lea
push
lea
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
lea
push
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
add
movl
lea
push
lea
push
call
movswl
test
je
movl
movl
jmp
movl
movl
movl
mov
mov
movl
lea
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
call
mov
lea
call
movl
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
cltd
mov
idiv
mov
movl
lea
push
lea
push
call
fildl
fstpl
fldl
cmpl
jne
fdivl
jmp
pushl
pushl
call
fnstsw
test
jne
call
cltd
mov
idiv
mov
movl
lea
push
lea
push
call
mov
cltd
mov
idiv
mov
movl
lea
push
lea
push
call
movl
movl
lea
lea
call
push
push
lea
push
lea
push
lea
push
call
movl
movl
movl
movl
lea
lea
call
push
push
lea
push
lea
push
lea
push
call
movl
movl
movl
movl
lea
lea
call
push
push
lea
push
lea
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
call
push
lea
push
call
push
lea
push
lea
push
lea
push
call
push
lea
push
call
mov
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
movl
mov
mov
push
push
call
cmp
jg
movl
mov
cmpl
je
mov
mov
cmpw
jne
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jae
movl
jmp
call
mov
mov
mov
jmp
call
mov
mov
mov
mov
mov
movzbw
cmp
jge
movl
mov
cmpl
je
mov
mov
cmpw
jne
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jae
movl
jmp
call
mov
mov
mov
jmp
call
mov
mov
cmpl
je
mov
mov
cmpw
jne
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jae
movl
jmp
call
mov
mov
mov
jmp
call
mov
mov
mov
mov
mov
movzbw
mov
sub
jo
call
mov
mov
mov
mov
mov
jmp
movl
mov
cmpl
je
mov
mov
cmpw
jne
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jae
movl
jmp
call
mov
mov
mov
jmp
call
mov
mov
cmpl
je
mov
mov
cmpw
jne
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jae
movl
jmp
call
mov
mov
mov
jmp
call
mov
mov
mov
mov
mov
movzbw
sub
jo
call
mov
mov
mov
mov
mov
movl
mov
add
jo
mov
jmp
movl
movl
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
mov
movl
mov
lea
call
lea
call
movl
mov
push
push
call
test
jne
movl
movl
movl
movl
movl
movl
movl
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
mov
jmp
movl
movl
movl
lea
push
lea
push
lea
push
call
mov
lea
call
movl
lea
push
lea
push
lea
push
call
mov
cmpl
jne
jmp
movl
mov
push
push
call
test
jne
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
mov
lea
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
mov
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
lea
call
lea
call
jmp
movl
mov
push
push
call
test
jne
movl
cmpl
jne
push
push
call
movl
jmp
movl
mov
mov
mov
push
push
push
call
push
mov
mov
mov
push
call
fnclex
mov
cmpl
jge
push
push
mov
push
mov
push
call
mov
jmp
movl
fwait
push
jmp
lea
call
lea
call
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
lea
push
lea
push
push
call
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
xor
mov
mov
pop
pop
pop
mov
pop
ret
jmp
call
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
and
mov
and
push
mov
mov
call
lea
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
lea
fstps
lea
movl
movl
call
mov
mov
push
lea
mov
push
lea
push
lea
push
push
movl
call
lea
lea
movl
movl
call
push
lea
push
lea
push
lea
push
push
call
lea
push
lea
push
push
movl
movl
call
mov
lea
lea
push
lea
push
push
call
lea
push
lea
push
push
call
push
call
mov
lea
call
lea
lea
push
lea
push
lea
mov
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
lea
push
lea
push
push
lea
push
push
movl
call
lea
lea
push
lea
push
push
push
call
add
mov
fwait
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
lea
call
ret
mov
push
mov
call
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
lea
lea
xor
lea
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
call
lea
lea
lea
push
push
mov
mov
call
lea
lea
call
lea
lea
lea
push
push
mov
mov
call
lea
lea
call
mov
lea
lea
movl
mov
call
lea
lea
push
push
movl
movl
call
test
je
lea
lea
mov
mov
call
mov
lea
lea
push
lea
push
lea
push
lea
push
push
movl
mov
movl
mov
movl
mov
movl
mov
movl
mov
call
lea
push
lea
push
push
call
push
lea
push
call
lea
push
lea
push
push
call
mov
push
lea
push
call
lea
push
lea
push
push
call
push
lea
push
call
lea
push
push
call
mov
lea
call
lea
lea
push
push
push
call
add
lea
lea
movl
mov
call
lea
lea
push
movl
mov
movl
movl
push
lea
push
call
lea
push
push
call
test
je
lea
lea
movl
mov
call
lea
lea
push
lea
push
push
movl
mov
call
lea
push
push
call
mov
lea
call
lea
lea
push
lea
push
lea
push
lea
push
push
movl
mov
call
lea
push
push
call
push
lea
push
call
lea
push
push
call
lea
push
push
call
mov
lea
call
lea
call
lea
lea
push
lea
push
lea
push
push
movl
mov
movl
mov
movl
mov
movl
mov
movl
mov
call
lea
push
push
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
push
lea
lea
push
push
call
lea
push
push
call
push
lea
push
call
mov
lea
call
lea
call
lea
lea
push
lea
push
lea
push
push
movl
mov
movl
mov
call
push
lea
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
lea
push
push
call
push
lea
lea
push
lea
push
push
call
lea
push
push
call
mov
lea
call
lea
lea
push
push
push
call
add
movl
movl
mov
lea
lea
push
lea
push
push
mov
movl
mov
call
push
lea
lea
push
lea
push
push
call
lea
push
push
call
push
lea
lea
push
lea
push
push
call
push
lea
push
call
mov
lea
call
lea
lea
push
push
push
call
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
lea
lea
push
lea
push
push
call
push
lea
lea
push
lea
push
push
call
mov
push
lea
push
call
lea
push
lea
push
lea
push
push
call
lea
push
push
call
push
call
test
jne
lea
push
call
fstpl
fwait
push
jmp
lea
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
mov
mov
mov
pop
mov
mov
mov
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
in
sub
add
lcall
adc
add
sub
add
sub
add
sub
add
sub
add
cmp
add
adc
add
push
sub
add
sub
add
add
push
sub
add
add
je
add
mov
add
lcall
add
add
shrb
add
push
add
and
add
hlt
sub
add
sub
add
sub
add
sub
add
add
push
add
addb
add
add
add
test
add
sub
add
add
aam
add
in
add
hlt
sub
add
sub
add
sub
add
inc
sub
add
insb
sub
add
nop
sub
add
mov
add
les
add
out
add
clc
sub
add
sbb
add
es
cmp
add
pop
add
sbbb
add
push
add
push
add
test
add
cmp
add
mov
add
les
add
aam
add
call
add
or
add
add
adcb
add
and
add
xor
add
inc
das
add
push
das
add
add
andb
subb
andb
add
add
jl
add
mov
add
pushf
das
add
imul
sbbb
add
lods
das
add
and
add
mov
add
and
add
shrb
add
das
add
fsubrl
add
in
das
add
cld
das
add
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outsb
add
add
pop
pop
jbe
popa
push
popa
jb
outsl
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
push
popa
jb
outsl
jbe
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
outsb
add
add
pop
popa
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
gs
bound
imul
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
je
inc
popa
je
add
pop
pop
jbe
popa
push
gs
jns
je
insl
inc
jb
outsl
jb
add
pop
pop
jbe
popa
dec
jb
jae
insb
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
push
popa
jb
jae
dec
add
add
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
push
popa
jb
outsl
jb
outsb
imul
bound
outsb
inc
jb
outsl
jb
add
add
fs
imul
imul
popa
fs
imul
xor
imul
jbe
popa
push
popa
jb
jae
dec
je
add
pop
pop
jbe
popa
inc
outsl
outsl
insb
push
popa
jb
jne
insb
add
add
pop
inc
dec
jae
outsb
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
inc
imul
add
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
inc
outsb
gs
je
inc
outsl
jne
fs
jb
outsl
jb
add
add
jbe
popa
push
popa
jb
bound
add
pop
pop
jbe
popa
inc
gs
add
add
jbe
popa
push
je
inc
insl
jo
add
pop
pop
jbe
popa
inc
jb
inc
outsl
outsb
jae
jb
arpl
add
add
jbe
popa
push
jne
dec
ja
gs
add
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
jno
add
pop
pop
jbe
popa
push
jb
outsb
je
bound
add
inc
insb
insb
inc
jne
arpl
outsb
inc
popa
insb
insb
add
add
fs
data16
je
outsb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
inc
dec
jae
jb
add
add
jbe
popa
push
popa
jb
outsb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outsb
je
jb
popa
arpl
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
inc
js
gs
dec
popa
outsb
fs
gs
add
add
jbe
popa
push
je
push
outsl
push
outsb
imul
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
push
popa
jb
imul
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
inc
gs
ja
gs
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
popa
insb
add
add
pop
pop
jbe
popa
push
bound
outsb
add
add
jbe
popa
push
popa
jb
popa
je
add
pop
pop
jbe
popa
inc
gs
ja
gs
add
add
pop
pop
jbe
popa
inc
popa
je
push
popa
jb
add
add
dec
insb
outsl
add
add
pop
pop
jbe
popa
inc
jb
outsl
jb
jbe
jb
insb
outsl
ja
add
add
jbe
popa
inc
imul
add
pop
pop
jbe
popa
dec
gs
add
add
jbe
popa
dec
outsb
push
je
add
add
pop
pop
jbe
popa
push
popa
jb
outsb
je
add
pop
popa
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outsl
jo
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
pop
jbe
popa
push
cmp
jb
add
add
fs
imul
add
pop
pop
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
push
popa
jb
insl
jo
jno
add
pop
pop
jbe
popa
push
popa
jb
fs
add
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
je
push
outsl
inc
outsb
jae
add
add
pop
pop
jbe
popa
push
popa
jb
outsl
jo
add
add
pop
inc
dec
popa
je
outsb
add
add
jbe
popa
push
je
dec
outsl
jbe
add
add
pop
pop
jbe
popa
dec
xor
jb
popa
jb
add
pop
pop
jbe
popa
push
cmp
je
xor
add
add
insb
insb
insl
jne
add
add
dec
je
outsb
add
add
pop
pop
jbe
popa
push
popa
jb
outsl
jb
gs
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
dec
xor
jb
push
popa
jb
