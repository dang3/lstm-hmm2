call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmc
cwtl
in
aad
lds
lock
loopne
jne
or
inc
sub
js
push
aad
lds
xchg
clc
test
jne
or
cmp
xor
js
push
aad
lds
xchg
clc
test
jne
gs
es
imul
or
pop
sbb
in
cmpsb
fdivl
or
sti
jle
mov
mov
jg
pop
xor
mov
and
and
sahf
hlt
jae
andl
sub
cwtl
xor
adc
sti
xchg
or
dec
dec
jmp
mov
call
fmuls
imulb
pop
lods
jnp
xchg
imul
fnstenv
mov
fadd
arpl
lret
or
adc
add
std
push
push
fsubrs
mov
inc
int3
sbb
jns
cmp
sbb
and
lret
push
push
insl
and
cmp
sub
cmpsl
and
adc
cwtl
in
aad
lds
xchg
clc
test
jne
or
inc
sub
js
cs
mov
mov
mov
popf
les
ss
sub
xor
push
or
test
leave
out
xchg
test
adc
fs
add
jno
addr16
cmp
mov
movsl
enter
call
push
cmp
xor
js
push
aad
lds
xchg
clc
test
jne
or
inc
sub
js
push
outsb
dec
loope
outsl
sbb
lcall
arpl
outsb
mov
mov
mov
push
out
movsb
xchg
scas
jp
or
lods
sbb
or
call
mov
add
xor
out
fsubs
roll
dec
cld
ficomps
in
xlat
inc
stos
xor
sbb
addr16
xor
push
inc
adc
add
lock
adc
dec
mov
xchg
aaa
mov
divb
insb
aas
jp
test
xor
fs
cmp
xor
jo
sub
jmp
addr16
push
jns
imul
pop
repz
pop
xor
ljmp
mov
test
imul
sub
out
outsb
mov
mov
push
scas
and
jg
idivb
cmp
mov
push
adc
jp
sub
mov
jnp
dec
jb
dec
push
adc
push
out
addb
repz
cltd
int
rcr
aas
jb
xor
sbb
repz
pop
inc
dec
fwait
push
lcall
pop
mov
lods
sub
dec
fdivl
fucomip
jecxz
pmaxub
xor
out
xchg
cmp
add
ljmp
mov
stc
fisubl
mov
cmp
cmp
test
cmp
repnz
sbb
popf
inc
out
scas
push
movsl
enter
push
in
sti
sbb
pop
pop
fwait
mov
lods
out
ret
jmp
xor
push
sbb
inc
loopne
cmc
jmp
std
fistl
and
pop
cmp
xor
enter
or
aaa
mov
and
cmpb
cltd
push
push
mov
jnp
inc
jmp
test
sti
mov
hlt
jno
cmp
daa
test
dec
inc
outsb
pop
mov
mul
pop
mov
iret
xor
inc
insl
inc
sbb
mov
mov
xchg
aam
aad
loop
pop
data16
sbbb
and
scas
mov
xor
adc
scas
repz
mov
jno
les
lods
cmp
std
jbe
jns
test
aad
cmp
daa
aaa
insb
scas
rcrl
push
rolb
scas
mov
es
cli
sub
xor
adc
or
xlat
or
cmp
mov
out
and
fucomi
cli
scas
dec
int
adc
orb
dec
dec
jae
rcrb
enter
iret
add
pusha
cmp
jg
sarb
ret
or
jl
mov
pop
push
inc
or
adc
xchg
xlat
and
or
xor
sub
sbb
pop
cmp
add
lods
sbb
add
inc
ljmp
scas
or
xlat
mov
test
sub
push
movsl
jg
insl
cs
pop
mov
mov
cs
sbb
in
mov
js
test
push
rcll
mov
or
sbb
test
in
inc
icebp
lahf
dec
cmpl
mov
or
out
in
imul
inc
sbb
dec
iret
and
daa
sahf
fwait
jl
push
xchg
bswap
cmp
aaa
jecxz
xchg
insl
lret
xchg
mov
fwait
inc
jbe
je
out
sub
and
stos
sub
das
fildll
cmp
jno
iret
mov
punpckhwd
xor
fstps
pop
mov
inc
fwait
mov
lret
jb
sti
es
movsl
notb
fwait
push
fsubs
ljmp
dec
shl
mov
std
paddsb
or
adc
orb
mov
sub
test
add
cmpl
loop
pop
pop
sbb
or
loopne
and
das
mov
std
scas
das
sbb
xor
ret
mov
and
cltd
cmp
hlt
aad
add
enter
and
imul
lcall
int
xor
nop
leave
dec
inc
test
and
jns
adc
cmp
pop
sarb
into
xor
popf
mov
push
popf
mov
mov
out
setno
and
push
or
adc
movsb
fwait
call
push
in
movsb
das
mov
xor
test
xchg
and
dec
cmp
lcall
mov
insl
addb
into
data16
popl
enter
push
rclb
mov
je
js
movsl
sub
and
stos
cmp
ret
jne
insl
xor
pusha
cmp
and
test
pop
or
aaa
or
aas
cmp
push
pop
je
dec
xor
mov
mov
imull
aaa
insl
ss
xchg
call
xchg
xor
add
fs
sbb
jl
loope
cmpb
ror
jecxz
rol
mov
dec
repz
test
xchg
push
cwtl
pop
mov
nop
add
pushf
int3
pop
movsl
add
xor
push
dec
out
icebp
add
mov
aaa
jmp
fsubrl
jo
scas
jae
notl
pop
lahf
or
bound
mov
cmp
std
pushf
jae
lock
addb
pop
add
adc
add
fucomp
or
enter
std
insb
adc
lret
jae
and
mov
mov
push
mov
cmc
sbb
dec
add
andl
stos
and
push
roll
push
popa
push
js
insl
mov
pop
negl
sbb
xchg
or
mov
inc
fistl
jb
jns
and
cwtl
push
push
mov
fsubrl
outsb
bound
push
sub
cld
outsl
imul
and
sub
or
movsb
roll
dec
leave
jns
aam
dec
iret
push
jl
sub
push
jno
ss
sbbb
shr
xor
aam
push
loop
ljmp
inc
jae
ret
jle
xchg
mov
mov
pop
mov
mov
cwtl
push
mov
fildl
call
mov
cmc
stc
insb
out
data16
mov
out
dec
icebp
push
fwait
stos
pop
sub
pcmpeqw
iret
or
adc
lahf
ljmp
and
xor
mov
shll
push
sub
notl
adc
mov
mov
cmp
out
mov
rorb
cld
cmp
jge
xchg
popa
insb
in
and
xor
cwtl
sti
addl
or
or
movsb
mov
addr16
cmc
or
int
mov
scas
mov
loopne
cmp
and
movl
test
scas
nop
outsl
mov
cli
mov
enter
xchg
popa
xchg
addl
xchg
cli
and
mov
xchg
sbb
cld
in
gs
or
lahf
fiaddl
xor
fs
mov
mov
mov
loope
add
sbb
inc
xchg
sub
mov
dec
cmc
mov
sub
inc
inc
out
cmp
pop
sahf
mov
mov
fwait
jle
bound
or
xchg
add
pop
sbb
add
push
dec
mov
mov
xchg
xchg
mov
stos
clc
push
lahf
ljmp
push
and
add
imul
cmp
push
sub
inc
add
fidivs
lret
inc
rcl
and
je
mov
xchg
cmp
push
cli
cltd
cmp
js
ss
aad
arpl
roll
push
pop
lods
out
push
adc
xor
jg
lret
or
inc
scas
imull
jmp
jns
and
lock
daa
subl
addr16
popf
int
adc
xchg
js
jp
inc
adc
repz
ficoms
jmp
sub
test
pop
lock
mov
insl
sbb
aad
or
pop
aad
mov
jmp
cltd
add
mov
loop
test
fcoms
shl
fmul
xor
movb
inc
mov
fwait
inc
jb
stos
pop
adc
shll
lcall
pushf
xchg
xchg
ret
gs
and
das
out
sbb
clc
xchg
cwtl
dec
xchg
jne
push
lods
mov
in
cmp
scas
cmpsb
jle
sub
mov
out
inc
cmpb
jl
outsb
pop
loopne
test
out
loopne
and
loope
icebp
hlt
jl
pop
mov
rcrl
sub
mov
rcll
stc
lret
sub
xchg
cmpsl
add
sub
mov
aam
int
or
adc
ljmp
idivb
loope
xchg
mov
sbb
sub
push
dec
pop
sbb
or
jge
jg
adc
push
xor
cmpsl
mov
sahf
pop
subb
lods
rcrb
push
push
cmpl
insl
hlt
subb
jno
ljmp
cmp
push
movsl
movsb
les
mov
sbb
mov
popa
sbb
cmp
icebp
xor
adc
call
cmpsb
pop
jle
dec
in
push
sub
lss
push
xchg
inc
fsubs
mov
and
fdivrp
icebp
pop
xchg
jno
mov
sbb
out
mov
lea
push
inc
jg
bnd
xchg
js
into
mov
cmpsb
or
aad
mov
aaa
test
mov
insl
imull
gs
shll
mov
ss
mov
mov
mov
push
aad
inc
jle
imul
pop
lsl
rcl
sbb
mov
insb
inc
adc
pop
cmc
mov
es
jp
int
ds
jo
cld
dec
aam
sbb
sbb
pop
or
ljmp
mov
sub
out
fidivs
and
leave
adc
mov
push
mov
jne
mov
inc
shrb
loopne
mov
ja
mov
jno
ss
jne
sub
jo
xor
xchg
js
fstps
out
dec
jge
cmp
aaa
add
xchg
imul
sti
mov
mov
je
inc
outsb
xchg
jle
std
push
jmp
ljmp
sub
cli
add
bound
cmp
mov
into
movsb
test
shrl
ficoms
xor
je
jl
fsubp
aam
sar
js
dec
pop
push
ljmp
lret
xchg
pop
jne
fs
jmp
push
iret
in
lret
and
mov
mov
lret
fwait
cld
mov
dec
mov
sbb
push
mov
mov
jge
mov
js
arpl
into
ds
jnp
jge
es
loope
js
and
push
or
or
dec
add
adcb
insl
mov
push
sub
push
sub
pop
and
xchg
xchg
inc
mov
pop
pop
js
inc
pop
icebp
loopne
xorb
and
iret
lcall
push
outsl
pop
jno
imul
jb
mov
mov
movsb
jmp
inc
scas
fisttps
shlb
jne
and
jmp
mov
inc
fidivs
push
add
cld
pop
adc
cmp
ds
popf
cs
fistpl
dec
dec
jae
insb
pop
ja
stos
aad
aam
pop
add
fst
pop
push
mov
pop
scas
xchg
push
xchg
push
push
outsl
cwtl
or
imul
cmp
and
repz
dec
clc
scas
scas
popa
pop
stos
loop
inc
aam
adc
sub
mov
fisubl
cltd
and
and
ret
cwtl
ja
jne
divb
iret
mov
xor
pop
xchg
push
xchg
je
add
mov
in
rorl
hlt
xchg
fstp
cmp
sti
push
xchg
xchg
mov
sbb
inc
push
push
loope
outsl
mov
loope
cs
or
mov
and
inc
xchg
adc
ds
vprotw
or
xor
cmpsb
mov
rcrl
push
jbe
or
or
mov
clc
fwait
jno
sbb
mov
pusha
je
dec
fstps
lds
int
cltd
jns
jae
repnz
repnz
dec
ficoms
mov
fdivl
add
dec
add
dec
sbb
icebp
sub
jb
xchg
jle
lock
in
pop
xchg
and
notl
adcl
shll
jbe
mov
cmp
fsts
sub
mov
mov
fwait
sub
add
repz
add
scas
mov
cltd
into
leave
test
mov
call
mov
cli
cmc
and
clc
pop
rcrl
pop
test
es
cli
cmp
out
and
int
ret
daa
jmp
push
cli
pop
shrb
shlb
mov
xlat
lcall
mov
arpl
test
lods
add
and
push
pop
stos
mov
shlb
or
dec
ret
sbb
mov
xchg
imul
and
adc
cmp
shll
mov
insl
fimull
mov
mov
iret
shrb
push
push
push
movsb
fs
pop
lret
loope
sub
inc
cmp
ret
mov
dec
arpl
and
add
pop
xlat
and
cli
cmp
mov
cmp
sarb
xor
xor
jg
fstps
lods
ja
insl
rcll
xchg
lahf
arpl
call
xchg
repz
lods
imul
pop
xor
push
jns
add
and
scas
or
in
jg
mov
cmpsl
add
test
and
mov
mov
ss
mov
addr16
rcr
clc
jb
hlt
adc
sbbb
dec
xchg
dec
cmp
stc
push
or
or
cld
repz
pop
mov
andl
mov
push
add
inc
xor
out
rcr
pusha
ds
jg
mov
inc
inc
pop
pop
test
aaa
aam
adc
pop
out
adc
adc
les
inc
ljmp
call
mov
scas
das
mov
mov
mov
mov
stos
adcb
xor
lods
or
shrb
or
cmp
sub
cmpsl
and
les
mov
inc
nop
imul
and
lret
lret
lods
jle
xor
bound
push
mov
ret
xlat
dec
push
fwait
dec
lcall
movsl
mov
scas
dec
bound
shl
loopne
mov
push
je
inc
dec
pop
cmp
fldl
pop
dec
adc
sahf
and
ss
lods
loope
adc
add
cmpsl
xchg
xchg
pop
inc
jns
test
cli
aaa
int3
dec
movaps
aam
in
fsubl
adc
lcall
fcoms
leave
dec
push
xchg
pop
daa
mov
dec
fdivr
sub
pushf
sbb
enter
adc
popf
sarl
fsubs
sub
push
aas
lds
dec
inc
shrb
xor
xchg
xor
adcl
sarb
jne
xor
mov
das
sub
out
cmp
loop
pop
and
jns
mov
pop
loope
add
push
pop
push
daa
test
insb
or
mov
outsb
lahf
repz
adc
mov
mov
call
clc
pop
jne
mov
sahf
push
pop
cmp
push
adc
mov
cmp
jnp
ss
xor
loope
xor
adc
mov
aad
and
jmp
mov
sbb
push
jp
testl
push
js
push
fstpt
xchg
add
or
mov
shll
mov
bound
push
outsl
or
movsl
ficoml
leave
pop
into
out
cli
in
add
gs
xchg
fwait
fwait
push
ret
das
xor
xchg
fadd
shr
aaa
rcl
pop
lea
pop
sub
nop
or
mov
jbe
mov
lcall
dec
push
mov
or
push
mov
push
mov
dec
inc
fildll
or
imul
andl
adc
mov
sar
xorps
push
mov
movl
inc
push
pop
shlb
lods
mov
cmp
mov
sbb
push
dec
push
mov
adc
pop
stc
outsb
outsl
jno
adc
cli
sbb
push
adc
xchg
dec
test
jge
rorl
stos
shlb
cmp
mov
jbe
sub
xor
sbb
mov
xchg
mov
cmp
sub
es
adc
cmp
stos
loopne
hlt
jge
cmp
sar
movl
je
jae
xchg
cmpl
cld
fsts
ret
jp
mov
pmulhw
adc
inc
mov
sub
rcr
arpl
aam
cmp
and
jg
lock
cmp
bound
add
popf
sub
add
shr
rcll
imul
iret
out
outsl
sti
sub
xor
mov
ljmp
add
cmpsl
cmpsl
icebp
and
add
adc
pop
scas
and
xor
and
jo
mov
jae
or
ud2
ss
lret
push
in
mov
mov
pop
imul
pop
cmp
hlt
out
add
jo
pushf
dec
loopne
ss
or
push
jne
jb
cmp
mov
and
aas
pop
pop
stos
repnz
mov
lret
scas
outsb
sub
scas
lcall
fcoms
adc
out
hlt
push
inc
sub
insl
out
clc
stos
cltd
push
mov
rcrl
data16
outsb
clc
sub
fnstcw
inc
mov
push
and
aaa
sbb
cmp
push
xor
and
adc
stc
cmp
icebp
xor
arpl
mov
cmp
push
std
jp
lcall
lods
popa
stos
outsl
sbb
adc
jb
std
int
das
add
bound
dec
lret
js
cmp
sbb
fs
inc
adc
jae
xor
lds
je
out
inc
add
mov
sub
pop
imul
pop
ret
scas
mov
arpl
ds
ss
add
mov
aaa
push
jne
test
lret
addr16
sub
mov
outsb
pop
pop
mull
div
rorl
mov
xchg
jmp
sbb
mov
mov
negl
mov
rcrl
sarl
xlat
jg
lods
jmp
popf
movsb
sub
cmp
mov
mov
iret
pop
test
sbbb
mov
mov
jp
xchg
mov
add
sbb
adc
cmp
decl
mov
inc
or
arpl
sub
lods
add
xchg
arpl
inc
popa
mov
ja
insl
ror
lret
mov
xor
or
dec
jns
inc
int3
or
lret
ss
jne
ret
adc
xchg
push
inc
ja
in
mov
mov
cmp
nop
mov
loopne
in
add
cmp
lcall
jmp
xchg
int
inc
in
xchg
sub
add
ja
xchg
fmul
mov
js
mov
jmp
push
sub
lds
mov
sbb
imull
popa
sub
cli
pop
pop
insl
hlt
out
xchg
cmp
and
mov
xor
repz
hlt
iret
mov
test
lea
sub
out
add
movsb
xor
insl
sub
mov
pop
out
std
add
scas
sbb
adc
mov
pop
loopne
rclb
sti
cmp
aaa
pop
addl
sbb
push
popf
adc
in
inc
arpl
mov
fbstp
fsts
test
push
mulb
xor
jb
lock
negl
lret
mov
out
mov
or
jb
jle
mov
pop
repnz
push
jg
xor
outsl
call
in
in
mov
mov
inc
aad
sbb
notb
addr16
push
and
jp
test
jmp
mov
out
dec
or
jae
and
loopne
sbbb
loope
or
xchg
sbb
push
xchg
jnp
lds
xchg
sahf
out
jmp
sub
insl
jo
loop
iret
decl
sub
pop
dec
call
xlat
or
je
pop
imul
cmpsb
sbb
inc
test
insl
pop
cwtl
push
fidivrs
adc
mov
ret
sbb
or
mov
push
shll
jno
xchg
out
mov
daa
daa
call
fdivrl
mov
shlb
rolb
lods
adc
bound
adc
sahf
lds
scas
movsb
daa
xor
jge
dec
sbb
pop
popa
or
mov
shrb
lcall
fldenv
dec
out
mov
sarb
jg
ja
aaa
xor
cmp
add
and
test
xchg
xchg
dec
push
sbb
sub
int
sub
je
pop
lods
mov
add
and
js
lods
bound
std
popa
pop
adc
cli
add
mov
jle
iret
leave
xor
mov
dec
mov
movsl
enter
call
push
cmp
xor
js
push
aad
lds
xchg
clc
test
jne
or
inc
sub
js
push
aad
lds
xchg
stc
test
jne
or
inc
sub
js
push
aad
lds
js
pop
jne
mov
inc
shrb
xchg
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
add
adc
and
xor
in
fisttpl
test
cwtl
andb
js
dec
mov
shrb
cmp
or
sbb
call
xor
inc
test
mov
subb
mov
inc
sarb
loopne
lock
call
xor
inc
test
mov
subb
int3
cmp
outsl
xchg
data16
imul
mov
mov
fstpt
loope
pop
or
test
sub
mov
iret
pop
mov
orb
pop
pop
dec
cmp
sub
icebp
mov
jge
push
call
inc
fmulp
mov
cs
ds
cmc
mov
cmp
lock
dec
loopne
or
in
jo
or
int3
fidivrl
arpl
lds
lcall
push
sbb
push
xor
loop
mov
and
jnp
cmp
insl
out
jne
fdivrs
jo
xorb
jns
sub
cwtl
dec
nop
sub
movsl
or
int3
call
xor
inc
test
mov
subb
mov
sub
cmp
or
jno
in
fs
inc
int
roll
jb
adcb
jns
sub
rcrb
jno
push
lea
inc
lods
pop
fadds
adc
cld
in
roll
sbb
cmp
adc
or
push
mov
subb
mov
sub
cmp
or
sbb
call
xor
inc
test
mov
subb
mov
sub
cmp
or
sbb
call
pop
sbb
pop
xchg
testl
mov
add
and
std
xchg
das
push
sub
sub
push
xor
mov
test
xor
stos
roll
testb
lods
xchg
ds
aas
add
sbb
jae
jnp
aas
push
pop
mov
pop
xchg
insb
mov
or
add
or
scas
scas
cmpsb
in
mov
ds
xchg
or
add
push
loopne
icebp
or
clc
lock
call
fisubl
dec
inc
into
shrb
xor
roll
repnz
sub
mov
inc
sbb
dec
out
adc
jg
mov
xor
pusha
mov
jbe
mov
mov
mov
dec
pop
cld
sbb
stos
cltd
roll
push
clc
enter
cld
mov
int
hlt
mov
rclb
xchg
aad
aaa
mov
inc
cmpsb
pop
pop
and
lds
pop
xor
cmp
std
or
sbb
nop
push
xchg
mov
std
cmpsl
aad
push
pop
out
hlt
cmpsl
lods
pop
sar
cmp
mov
aas
xor
jns
bound
sub
movsl
ljmp
out
stc
push
mov
jge
jae
xchg
pop
inc
mov
dec
sti
cmp
sub
or
mov
cmp
ja
mov
mov
sbb
pop
pop
sahf
rcrb
cwtl
mov
pop
ja
cltd
shll
insb
jbe
adc
or
pusha
sbb
lret
cltd
out
jle
inc
xchg
inc
mov
jne
cmp
scas
cmpsb
inc
mov
dec
mov
xor
rolb
sbb
les
inc
leave
mov
cltd
inc
iret
pop
mov
stos
lcall
dec
add
dec
mov
xor
pop
sbb
mov
add
jae
sbb
sbb
jge
daa
xchg
test
add
test
imul
stos
dec
test
mov
sbb
jno
push
and
xor
cmpb
push
mov
jmp
pushf
shrl
add
sbb
jb
cmp
imul
sub
dec
and
xchg
cmp
sbb
in
mov
mov
push
lock
cs
mov
inc
test
dec
adc
cld
xchg
imul
repz
cld
mov
push
mov
mov
ret
cmp
int3
stos
cld
sbb
sbb
iret
dec
mov
inc
outsb
fs
jmp
aad
xchg
cmp
imul
xor
or
repz
inc
sbb
xchg
adcb
ret
add
popa
loope
sbb
mov
lret
sub
out
mov
ljmp
mov
inc
or
xorb
dec
pusha
les
std
cmpsb
jne
pushf
mov
int3
add
pop
ret
pop
cmp
rcr
sub
jbe
sbb
les
les
mov
pusha
xchg
sub
add
push
bound
mov
pusha
std
mov
int
push
cmp
mov
mov
fs
xchg
pop
lock
jg
sbb
and
lock
out
clc
aad
insl
and
push
xor
fdivl
inc
jp
add
outsb
add
icebp
push
loopne
fcompl
imul
xchg
fnstenv
dec
sub
rorl
xor
andl
adc
sbb
hlt
enter
imul
push
rcrb
sbb
test
loop
mov
or
cld
ret
imul
pop
test
jmp
pop
mov
daa
clc
mov
adc
sub
je
in
outsb
xor
sub
or
xchg
call
cltd
mov
push
cs
mov
adc
test
push
inc
dec
js
les
and
sahf
jg
cld
mov
retw
sbb
pop
sub
pop
gs
iret
xchg
test
adc
dec
in
js
add
dec
cmp
mov
shl
cs
push
adc
xor
lods
mov
ljmp
lods
sarb
aam
insl
rorb
xor
cs
pop
push
push
xchg
loope
aas
sub
jle
add
loop
test
repz
xor
sbb
lea
dec
sbb
push
iret
insl
popa
js
push
lret
inc
cwtl
lret
test
inc
dec
daa
mov
mov
push
lret
cmp
sub
or
jnp
cmpsl
out
scas
mov
popf
or
fsubr
scas
rolb
je
and
jbe
adc
sbb
and
jl
daa
test
pop
test
xor
jno
hlt
xchg
cmp
and
dec
push
lock
repz
inc
in
ds
jmp
cmp
rorl
jg
or
fadd
mov
xorb
mov
mov
inc
ss
gs
fsubrs
out
push
cmp
lods
ret
fldenv
cmpsb
and
jmp
das
dec
repz
insl
push
pop
jne
adc
je
jl
mov
or
ror
xchg
ja
and
adc
add
jecxz
mov
and
jg
jg
mov
or
pop
jmp
in
sbb
xlat
sub
sub
cs
xor
cmp
test
sub
xlat
loopne
pop
stc
rcrl
xchg
sbb
push
adc
dec
rorl
xchg
mov
fnsave
insl
imul
xchg
rclb
jno
fmull
mov
jge
mov
jo
aaa
dec
xor
leavew
pcmpeqd
dec
jne
insl
movl
aam
adc
into
fiaddl
xchg
inc
imul
arpl
jmp
jg
xorl
jge
sub
push
xorl
clc
dec
enter
xor
dec
mov
insb
xlat
repnz
testl
jbe
mov
jne
adc
cmpl
mov
fbstp
inc
adc
xchg
add
pop
std
loope
fdivrs
loop
push
add
roll
mov
leave
stc
movb
into
inc
aaa
shll
mov
fstps
dec
jbe
jp
jns
rep
loope
pop
out
mov
push
cwtl
fs
cs
test
out
or
cwtl
sub
iret
mov
pop
mov
out
sub
sub
sub
leave
mov
sub
sub
rolb
clc
lock
test
test
sub
lods
aas
sub
inc
mov
sbb
int
pop
adc
arpl
inc
add
out
bound
xchg
xor
dec
pop
or
shlb
movsb
lret
pop
js
dec
in
mov
sbb
xchg
adc
aas
add
jmp
aaa
inc
ja,pn
dec
fwait
lods
pop
pop
push
pop
adcl
cmp
jo
test
pop
pop
jo
mov
addb
in
orl
jp
stos
xlat
icebp
out
mov
push
movsb
jo
mov
adc
imul
push
pop
and
cmp
lods
scas
adc
aaa
js
ds
dec
les
test
mov
sbb
xchg
push
push
ljmp
lret
lods
push
and
stc
loope
cmp
imul
hlt
jne
pop
jge
roll
push
add
cmp
cmp
scas
sub
insb
jno
fistl
bnd
cs
mov
orl
sti
cmp
sbb
popf
scas
sub
and
stc
push
scas
dec
stos
or
mov
push
add
shll
mov
inc
mulb
jl
sbb
pushf
std
ljmp
pop
int3
add
out
pushf
neg
xchg
mov
lret
sahf
dec
dec
mov
shrb
scas
popf
lea
lds
sub
xlat
loop
adc
push
loopne
mov
xchg
pop
pop
sub
push
add
rep
xorb
and
mov
jns
or
scas
pop
repnz
fstps
lcall
daa
mov
sub
ret
dec
mov
mov
dec
and
pusha
movsb
mov
frstor
xchg
mov
inc
jnp
cmpsb
lcall
sub
push
jl
inc
dec
cmovs
icebp
cmp
lcall
xor
test
jge
loope
loope
mov
xchg
jmp
jle
enter
jne
pop
add
mov
jno
xor
mov
shl
xor
aad
add
inc
out
out
lret
push
dec
jg
jb
cs
xchg
hlt
gs
mov
add
mov
lods
insb
xorb
jg
pop
sub
jb
adc
sub
inc
cmp
fadds
push
add
scas
pop
xor
and
ljmp
inc
pop
xchg
jg
jb
jae
push
scas
jmp
outsl
pop
pusha
call
mov
mov
dec
pop
xchg
inc
adc
xchg
cli
notb
mov
lcall
into
aaa
jne
sti
jg
dec
adc
xorl
daa
js
mov
rcrb
and
mov
xor
fcomp
fwait
hlt
lds
jo
pop
dec
jno
push
cld
leave
loop
jne
jns
jle
adc
inc
pop
add
dec
or
push
jns
sub
mov
lret
test
cmp
lea
popf
leave
pop
mov
movsb
cmpb
sub
cltd
icebp
shlb
mov
arpl
into
mov
mov
lods
cmpsl
lods
jbe
xor
or
xchg
cmp
pusha
pop
inc
lds
add
sbb
inc
out
cmpsb
xor
cwtl
push
negb
sbb
jne
lret
gs
lods
in
cs
mov
lds
cmp
pop
scas
inc
xchg
mov
mov
insb
hlt
sbb
lahf
loop
lcall
and
mov
jmp
jge
sahf
mov
xchg
push
adc
fcmove
fcmovne
push
fst
icebp
outsb
rclb
lahf
testl
jg
lods
bound
movsb
sarb
cli
dec
jnp
inc
ret
ljmp
jnp
inc
stos
ret
daa
pushl
add
testl
lea
cs
xchg
test
in
inc
sub
int
jl
jne
ret
sbbl
mull
insb
jo
addr16
pop
dec
enter
xlat
dec
cmp
shlb
xchg
sub
xorl
mov
push
pushf
ret
mov
mov
stc
xor
roll
les
addl
pop
ss
adc
sbb
mov
push
jecxz
xchg
shlb
push
cmp
out
mov
into
xor
inc
xchg
mov
mov
sub
cmpsl
mov
aas
inc
test
fnstsw
pop
cmp
xor
xchg
or
and
shlb
insb
aad
sti
jo
mov
fs
mov
aas
jns
insl
repnz
ss
outsl
push
mov
roll
and
leave
or
in
ja
test
shlb
jae
inc
sub
jb
outsl
iret
mulb
pop
xor
dec
push
dec
xor
xchg
aad
ja
mov
mov
sub
jle
mull
fs
push
mov
ret
sub
cmpsl
insl
ljmp
or
mov
aas
or
fdivrl
les
in
sbb
cmpsb
and
popf
fnstcw
pop
push
add
popa
movsb
add
cltd
adc
mov
int3
andl
inc
push
mov
jnp
cmp
pop
push
addr16
jne
pop
push
dec
push
bound
push
jbe
cmpsl
addr16
xor
call
mov
pop
ror
out
mov
mov
mov
fldcw
fstpt
outsb
dec
and
repz
xchg
loopne
lret
jae
mull
xlat
sub
pop
dec
pop
inc
cmp
xchg
push
mov
stc
orb
mov
xlat
cltd
pop
sub
daa
test
mov
xchg
lcall
inc
cmc
cmpsl
sti
loope
jmp
repnz
das
mov
repz
fmulp
stos
mov
xchg
jb
insl
subb
fisttps
mov
lret
mov
insb
faddl
xchg
test
sub
ljmp
daa
popa
jle
push
mov
daa
daa
rorl
cltd
inc
js
lcall
aam
jmp
loop
pop
out
xor
jge
cmc
pushf
dec
nop
incl
pusha
jae
mov
sbb
adc
mulb
mov
push
pop
es
jg
jne
or
mov
xchg
scas
call
dec
ss
into
mov
mov
push
sub
testb
js
les
fbstp
push
jnp
rclb
stos
dec
sbb
aaa
sub
xorl
add
xchg
mov
jecxz
jo
jbe
imul
leave
les
pusha
or
dec
pop
add
and
sbb
sub
call
push
cmpsl
and
push
xchg
cs
xchg
aaa
imul
rclb
jecxz
rcll
insl
mov
sti
ljmp
jnp
fistpl
je
test
shl
cmc
subl
pop
cmpsl
mov
jge
mov
das
pop
cmpsl
lret
jmp
jnp
cmp
cltd
scas
mov
jne
leave
jo
cmp
loope
fists
mov
inc
cmc
adc
lds
cmp
or
stc
test
inc
vmwrite
in
aaa
cmp
rcrl
sbb
iret
cmp
jmp
gs
sbb
mov
repz
lcall
push
lods
cmp
mov
mov
stos
fnstcw
adc
filds
pop
jp
test
push
dec
cmp
add
push
call
and
loope
add
add
mov
ret
rol
sbb
jns
mov
push
faddl
push
mov
pop
mov
cmpsl
pop
cli
mulb
test
xchg
mov
inc
push
cmp
mov
mov
les
lods
cli
leave
push
and
loop
ret
xor
fldcw
add
cs
dec
mov
and
jns
mov
ret
mov
cmp
movsl
pusha
mov
fsubs
hlt
popa
fsubrs
in
out
popf
cltd
cmc
aaa
stos
push
and
pop
mov
int3
xchg
aaa
in
add
sahf
pop
loop
lcall
mov
sbb
call
fidivrl
and
push
pop
test
es
mov
cmp
jno
cmp
cmp
shrb
mov
pop
sarl
clc
shll
dec
into
and
dec
nop
dec
jmp
jmp
ds
mov
xchg
int
xor
aam
in
shlb
movl
adc
dec
jmp
xchg
ucomiss
mov
inc
shlb
push
pop
les
mov
pop
in
int
push
fs
sbb
mov
lret
fsubs
sahf
jge
cmc
movsl
xlat
ljmp
jl
pop
mov
ret
mov
sahf
or
mov
hlt
pop
mov
pop
mov
cwtl
insl
push
inc
movsb
and
cmpsb
xor
sub
sbb
in
cmp
pop
push
adc
mov
jnp
js
scas
testl
sarb
lock
dec
in
dec
mov
ret
xchg
jl
mov
inc
pop
ja
ret
jnp
xchg
adc
jne
jo
pusha
push
outsb
pop
add
xchg
mov
loopne
xchg
jbe
cwtl
stos
es
mov
jo
stos
push
mov
call
scas
sahf
dec
cmp
or
dec
dec
out
clc
add
mov
inc
jne
jo
mov
gs
repnz
addb
in
sbb
xor
mov
sbb
mov
or
sub
jb
sub
jg
call
mov
lods
push
stos
xlat
filds
dec
adc
add
adc
xor
inc
jle
jno
adc
mull
mov
rcr
loop
mov
dec
stc
mov
imul
mov
out
pop
stos
scas
lds
inc
lahf
mov
xor
adc
mov
scas
adc
enter
push
adc
mov
aas
cli
inc
mov
xchg
jns
xchg
cmpsb
in
xchg
adc
loope
inc
ficompl
add
aad
fwait
scas
test
es
xchg
push
sub
and
sahf
std
adcb
adc
sbb
xchg
adc
mov
ljmp
test
lock
shlb
les
jns
jmp
push
sbb
push
dec
lahf
divb
mov
or
cltd
pop
sahf
xchg
lcall
or
test
aam
mov
cli
xor
pop
loopne
push
fadd
pop
sarb
mov
ljmp
fsubs
out
sbb
mov
ss
mov
jmp
xchg
dec
lods
and
mov
addb
popf
push
sahf
in
mov
mov
adc
daa
sbb
cmpsl
into
aad
int3
rorl
rcr
das
inc
pop
cltd
mov
popf
push
push
jbe
pop
xchg
xor
rcrl
cmp
sub
int3
mov
imul
lret
mov
xchg
push
cmpsl
or
sub
ss
xchg
mov
inc
ljmp
jb
mov
dec
inc
cli
stc
inc
inc
iret
xor
mov
mov
add
in
daa
push
lret
cmp
movb
adc
and
sbb
mov
or
jno
cli
jae
dec
inc
leave
stc
scas
nop
cltd
rol
sbb
jp
lds
fs
add
repnz
imul
cmpsb
imul
jmp
mov
adc
in
jl
out
push
xlat
cmp
mov
popf
ljmp
sbb
pop
push
or
sub
cwtl
stos
xor
mov
out
inc
pop
add
push
and
int3
mov
imul
or
int
clc
push
out
sbb
insl
js
arpl
sub
push
frstor
xor
dec
push
inc
add
xor
xchg
divb
xor
lret
dec
leave
shrl
test
pop
mov
icebp
js
mov
xor
bound
jg
ds
sahf
mov
ret
loope
stc
lahf
or
lea
mov
loop
into
jg
lret
mov
cli
loopne
out
sarb
pop
lods
outsl
jns
cmpsl
lret
cli
ret
xchg
jb
out
dec
int
jbe
sub
inc
pop
pop
out
mov
shlb
xchg
push
inc
paddsb
pop
adc
and
dec
fcoms
cltd
jno
icebp
xchg
inc
adc
sti
nop
cli
int3
pop
loop
xor
addb
dec
and
pop
mov
in
dec
push
popa
xchg
andb
mov
testl
roll
add
mov
mov
inc
push
add
add
pop
pop
outsb
or
iret
lods
sub
push
daa
dec
loopne
xchg
xchg
mulb
xchg
shrl
fisubrl
loopne
cmc
ds
jno
cmp
lods
je
mov
fyl2x
iret
cwtl
test
stc
sti
and
inc
es
jmp
cmp
cs
inc
dec
cli
inc
clc
and
add
stos
movsb
pop
fisubs
pop
lods
repz
sti
push
ss
aaa
sbb
loop
clc
mov
sti
mov
or
mov
ss
xor
rolb
test
ret
add
pop
mov
lock
out
frstor
clc
jle
xor
cmp
aas
adc
lods
fwait
and
das
cld
jne
addr16
mov
jecxz
push
xor
mov
cmc
mov
andb
dec
sub
and
in
je
js
in
push
cmp
fdivs
mov
popa
pop
pushf
fs
inc
jbe
into
push
sbb
jge
push
pop
pop
inc
mov
lods
jno
xchg
pop
rcll
mov
out
and
dec
jmp
and
pop
pop
imul
fs
sysret
push
mov
jmp
sbb
aaa
imul
lods
sub
mov
mov
fwait
and
mov
fldl
scas
ss
mov
in
sbb
xchg
es
or
pop
sub
hlt
arpl
mov
adc
mov
adc
dec
inc
mov
cmp
sbb
sbb
jns
mov
dec
push
fs
jle
mov
and
xlat
jg
xchg
in
mov
jg
mov
shlb
mov
fiadds
xor
test
loope
adc
push
stc
mov
mov
fbstp
jbe
pop
aam
test
nop
add
sub
outsl
nop
pop
pop
xor
daa
insl
xor
add
jne
mov
fs
jecxz
push
add
jne
xchg
clc
mov
mov
loopne
push
cmpl
lret
les
ret
sbb
mov
sub
data16
inc
mov
push
or
movsb
xor
daa
and
ret
add
jae
nop
lds
xchg
fs
aaa
clc
and
xor
inc
test
mov
subb
mov
sub
cmp
or
sbb
call
xor
inc
test
mov
subb
mov
sub
cmp
or
sbb
call
xor
shrb
cwtl
subb
mov
sub
cmp
or
sbb
call
xor
inc
test
mov
subb
or
das
mov
mov
out
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
mov
jg
outsb
hlt
xor
rcrl
sub
cmp
dec
sbbl
mov
push
test
add
adc
and
xor
ret
sbb
sub
cmp
dec
loop
inc
imul
mov
or
cmp
sub
and
jmp
xchg
pop
icebp
dec
shrb
sub
adc
test
out
mov
add
xor
in
cmpsl
les
lods
sbbl
adc
inc
leave
mov
out
adc
inc
xchg
cmp
icebp
icebp
push
add
les
mov
repz
ret
ds
and
fnsave
pop
mov
xchg
ljmp
push
push
mov
shll
xchg
xchg
cs
sbb
pop
outsb
xchg
sub
fcmovnu
jns
mov
sahf
inc
xchg
ss
in
adc
dec
adc
movsb
movsb
mov
sbb
fstps
mov
popa
mov
popa
inc
mov
dec
sbb
mov
fxtract
push
loope
rorb
in
pop
jnp
dec
inc
cltd
inc
test
add
adc
cmp
sub
fstps
leave
sub
cmp
dec
cltd
pop
xchg
jns
in
and
push
out
pusha
pushl
push
mov
xchg
pop
jns
jl
pop
mov
sahf
iret
in
sbb
or
or
cmp
push
lret
je
jb
and
jle
push
xchg
cmp
add
adc
out
add
add
insl
fsts
jmp
rcrl
sub
cmp
dec
sbbl
mov
push
test
add
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
xor
bound
cmp
je
popf
data16
imul
push
test
xor
call
sbb
push
push
mov
in
in
sub
popf
dec
dec
fisttpll
sbb
push
das
add
test
lcall
sbb
ret
sbb
add
cmc
das
sbb
fs
enter
in
cwtl
adcl
lret
addr16
cld
sub
sub
sbb
sbb
dec
mov
jae
sub
rolb
cmpsb
and
aad
sbb
dec
rcll
cmp
movsl
je
add
dec
mov
aad
inc
add
sbb
jns
inc
nop
popa
clc
inc
inc
out
pop
cmp
sub
or
scas
lahf
loope
decl
sbb
ficompl
cli
stos
int
test
push
repz
mov
mov
dec
jmp
pop
dec
dec
arpl
push
cwtl
je
inc
aam
lahf
sbb
out
scas
andl
js
fwait
jno
lea
lret
pop
jae
ret
dec
pop
ffree
clc
movsb
add
mov
mov
out
pusha
movsl
or
daa
lods
hlt
push
bnd
push
adc
jnp
icebp
imul
sbb
xchg
imul
imulb
pop
movsb
test
lcall
iret
dec
fisubl
and
dec
lcall
in
out
sti
dec
dec
in
xchg
cmc
je
pop
xchg
scas
add
repz
mov
dec
cmpsl
mov
in
stc
pop
stos
cmpsl
add
mov
pop
pop
lcall
ds
xchg
add
cmpsl
add
ds
mov
lock
fwait
js
pop
sub
jp
pop
jecxz
dec
in
sub
and
les
sub
repnz
jp
mov
divb
call
jp
mov
push
hlt
add
sub
adc
jp
adc
test
lcall
lods
das
fwait
test
jg
sbb
shrb
sub
fldcw
dec
sbb
loope
fidivrl
test
push
ret
imul
sub
mov
cs
jne
and
repz
and
out
mov
notl
cmpsl
jp
cwtl
out
icebp
popa
adc
dec
lahf
rorl
pop
or
enter
daa
mov
jo
jbe
lcall
clc
test
dec
loope
cmp
sub
sub
mov
or
adc
push
test
pushf
push
mull
int3
cs
pushf
sub
daa
mov
imul
adc
inc
sbb
sahf
movl
out
imul
xchg
xorb
add
mov
pushf
jecxz
mov
push
push
adc
jnp
dec
subb
in
xchg
dec
sbbl
dec
fsubp
fisttpll
or
push
ljmp
ret
addr16
scas
sbb
outsb
les
jbe
dec
out
stc
imul
mov
int
pushf
lds
push
pop
mov
dec
mov
insl
popa
mov
ret
nop
sub
pop
outsl
andb
adc
or
mov
jmp
xchg
inc
mov
decb
subb
jae
mov
test
pop
clc
sarb
mov
jp
cs
dec
orb
inc
xor
rcrb
pop
pop
lods
jne
cmp
xchg
les
cs
cmp
bound
jge
inc
push
adc
inc
int3
xchg
loop
fs
jo
xchg
hlt
push
jae
adcb
jge
or
aaa
gs
adc
hlt
mov
cltd
cmpsb
scas
pop
xchg
push
ret
mov
xor
lea
in
pop
cmp
stc
iret
out
daa
fidivl
fistpll
pop
mov
and
or
pop
dec
mov
fsubs
nop
push
add
iret
test
stos
jae
ret
pusha
test
sbb
inc
or
mov
push
loop
lret
int3
stc
mov
mov
lods
pop
add
or
pop
inc
sub
stos
sbb
cmp
mov
cltd
cmp
push
adc
add
andl
jne
mov
xlat
jnp
push
fdivl
and
in
push
lret
xchg
mov
sbb
sub
and
aad
xchg
mov
push
das
and
rol
jo
jmp
pop
and
rolb
sub
jecxz
mov
filds
imul
mov
or
repz
pop
les
stos
push
popa
xor
jbe
lds
data16
jl
sub
cmp
stos
mov
or
scas
dec
das
pushl
aas
fidivrs
ret
mov
ficoml
out
fldcw
enter
test
cltd
add
pop
cld
in
in
mov
xlat
push
push
ja
sbb
movsl
negb
mov
decb
adc
sti
pusha
mov
aas
movsl
filds
aam
and
and
imul
cwtl
cli
in
mov
xchg
lods
dec
rcll
xlat
jmp
inc
jl
fwait
adc
ficompl
pop
jp
jns
and
adc
call
int3
xor
cmp
jae
iret
xchg
mov
xchg
lods
aad
arpl
inc
ja
xor
scas
insl
xor
iret
outsb
fs
jmp
iret
fidivrs
std
pop
hlt
sti
outsb
in
inc
fsubrl
xchg
cli
insb
test
imul
mov
push
inc
sbb
test
cmp
ja
js
test
dec
cmp
ja
inc
cld
jo
lcall
adc
jp
xlat
mov
repz
scas
ljmp
rcl
sbb
jb
and
popf
mov
or
rcrb
push
push
adc
inc
arpl
inc
lods
pop
in
mov
mov
sbb
sbb
call
sbb
mov
ja
xchg
sbb
pop
xchg
push
jnp
adc
pop
and
insb
xchg
push
sub
inc
loop
into
rcr
mov
and
pop
pop
call
inc
lret
fisubs
ds
pushw
cmc
js
xchg
jl
add
and
bound
sbb
xchg
inc
push
rorb
cmp
pop
adc
mov
xchg
cltd
push
dec
add
add
movsb
es
mov
jnp
in
xchg
shl
jne
test
lcall
pop
mov
lods
mov
es
lret
mov
add
sub
loope
imul
xchg
stos
sbb
data16
push
and
ret
adc
test
lret
cmc
lods
dec
call
xor
sarl
xchg
cmpsb
in
xchg
shlb
adcl
in
aaa
fidivs
cmpsl
and
ljmp
loop
add
outsb
pop
or
out
jmp
add
mov
mov
xor
aam
xor
ret
sub
stos
inc
push
in
cli
cmp
stc
mov
ror
vpshlq
cmpsl
sub
insl
lock
cmp
fmulp
xor
push
mov
aam
mov
adc
xchg
mov
popa
lods
pop
imul
xchg
dec
fcmovne
push
push
push
lcall
mov
sbb
jno
lods
lret
out
imul
fldl
testb
xchg
mov
loopne
in
dec
xchg
aad
adc
mov
ljmp
fs
and
fists
cmp
out
dec
jp
das
and
hlt
jo
fiaddl
lods
es
mov
cmpsb
dec
pop
mov
mov
rcrl
insb
sbb
push
push
insb
out
lcall
inc
push
sbb
scas
sub
push
mov
add
outsb
sub
icebp
stos
sub
fdivr
jl
testb
add
pop
inc
orb
mov
dec
mov
outsl
jl
stos
dec
or
pop
stos
std
pop
dec
and
leave
jp
iret
and
add
sbb
testl
xchg
xchg
or
loopne
sahf
xor
out
sub
nop
mov
xchg
sub
and
into
add
push
in
push
mov
or
nop
movsl
orb
jns
push
sbb
mov
icebp
sub
mov
imul
inc
mov
shl
and
dec
sahf
cld
cli
imul
shll
jmp
cmc
sahf
fdivr
stos
dec
sub
add
adc
je
mov
imul
dec
xchg
mov
js
pusha
jno
invd
mov
addl
fisttps
cmp
and
add
or
ret
jge
clc
adc
lahf
dec
sbb
mov
mov
lods
btr
nop
jmp
gs
cli
pop
xor
cmpsb
sbb
enter
add
insb
xchg
add
mov
inc
adc
lahf
jle
ja
inc
jecxz
mov
fcoms
gs
xor
inc
mov
pop
mov
adc
hlt
mov
add
xchg
xor
cmp
aad
shr
inc
push
lods
js
inc
cwtl
int
popa
int
loope
pop
mov
mov
in
jnp
out
jp
lret
xchg
leave
mov
loopne
inc
outsl
outsb
add
push
adcl
or
push
mov
jmp
popf
iret
and
cwtl
into
bound
cmp
jp
mov
ss
inc
aad
ljmp
and
mov
sbb
xor
fstl
gs
jmp
repz
and
pop
add
outsb
ret
stc
and
imul
jno
jne
and
and
movsl
jns
sub
pusha
nopl
out
inc
fcoms
lods
out
idivl
lock
dec
repz
jmp
push
les
xlat
je
add
and
lds
xchg
lret
add
sub
inc
call
xchg
xchg
daa
stos
mov
loopne
testl
fsubrl
xchg
cmpb
shlb
cmc
adc
xchg
popa
int3
mov
xor
mov
push
sahf
into
ds
outsb
rcrb
jecxz
add
jne
xlat
ficomps
shrb
jns
lcall
adc
adc
mov
mov
jp
mov
cmpps
xchg
xor
test
adc
mov
adc
cmpsb
out
xlat
mov
ja
xchg
int3
sahf
and
insb
subl
lea
xor
pop
pop
jne
mov
cmp
mov
fildl
and
ja
call
subl
in
lods
pushf
aas
jo
jbe
stos
sub
incb
inc
xchg
adc
icebp
mov
dec
cmpsl
xchg
lcall
cmp
push
nop
sub
test
hlt
push
insl
cltd
mov
adc
and
in
pop
adcl
cwtl
pop
and
loopne
scas
cmpl
mov
xorb
sub
dec
ss
dec
fcmove
fdivr
repz
add
stos
pusha
cmpsl
mov
xchg
xchg
nop
push
rolb
adcl
xchg
aaa
mov
idivb
shr
or
cmpsl
sub
mov
mov
fs
das
xchg
jmp
stos
cmpsb
sbb
cmovne
xor
push
addr16
push
js
nop
mov
jle
stos
into
int
addr16
dec
repnz
adc
mov
aad
in
call
mov
cmp
or
std
daa
push
xchg
sub
cmc
adc
xor
and
jbe
cmpsb
pop
sbb
pop
push
xor
clc
mov
and
sbb
movb
xchg
sbb
mov
jbe
adc
fbstp
in
cltd
out
daa
adc
xlat
scas
faddp
or
mov
std
data16
jo
or
mov
dec
jg
mov
sub
jmp
iret
sub
data16
insb
mov
js
adc
negb
jmp
cmpsl
fimuls
test
pop
mov
int
push
or
ficompl
sbb
mov
pop
mov
xchg
or
in
inc
jne
and
fdivrp
les
jecxz
test
sbb
xor
sbb
rorl
lahf
xlat
mov
pop
adc
pop
push
add
int3
dec
jne
mov
or
xchg
jb
mov
xor
leave
push
out
push
stos
fisttps
jb
mov
cmp
xchg
popa
into
and
xchg
xchg
data16
fistpl
loop
into
fsubrs
push
decl
sbb
bnd
or
arpl
call
jge
outsb
jle
push
push
push
negl
add
adc
mov
stos
add
jmp
cmp
fstpt
test
aaa
ret
dec
stos
sbb
insl
andl
xchg
ljmp
outsb
cltd
pop
pop
jae
adc
jo
pusha
jns
shrl
dec
sarb
dec
add
aam
in
push
test
or
sbb
pop
sub
and
inc
adc
fdivrl
gs
punpckhdq
jle
in
or
leave
ret
jp
push
mov
pop
xchg
xchg
jne
aad
leave
mov
pop
test
jg
xchg
push
sub
inc
xor
adc
ds
xor
aam
cmp
push
or
jbe
dec
lret
pop
aas
fcoml
aas
dec
rclb
cmp
add
push
or
in
rorl
in
push
push
mov
push
lods
stos
pop
dec
sar
shr
movsb
dec
fidivl
addr16
jmp
and
xor
dec
cltd
mov
dec
pop
add
rcl
enter
jp
jo
cmp
dec
xsave
cmpsl
out
lret
ret
or
mov
ds
pop
mov
testb
xchg
cld
imulb
add
cmp
scas
pop
adc
loopne
cmpsb
nop
pusha
movsl
loopne
sahf
adc
es
cli
in
xchg
jo
mov
orb
hlt
xor
into
daa
cmp
add
adc
mov
adc
ror
inc
mov
cltd
aas
push
call
add
push
push
iret
into
dec
mull
cmpb
xchg
lret
mov
mov
cltd
out
xchg
shrl
imul
fnsave
jns
push
xchg
ret
push
icebp
cmp
adc
mov
mov
movb
xor
addr16
push
fcmovnb
rol
jno
add
xchg
bound
sub
cmp
dec
ljmp
js
sbb
push
pusha
fiadds
sbb
xchg
sbb
dec
imul
xor
sbb
cmc
out
xchg
push
pop
hlt
pushf
dec
xchg
push
inc
lea
call
repnz
mov
push
mov
xchg
dec
mov
inc
in
push
mov
pop
cli
test
push
arpl
jp
int
mov
insl
mov
mov
ds
leave
mov
out
push
pop
adc
ficoms
or
jp
orb
add
push
ds
mov
shlb
repnz
xor
aaa
sbb
dec
xchg
loop
popf
loop
mov
imul
jno
push
pop
loope
sahf
sub
mov
notb
in
addb
jbe
adc
cld
jae,pn
shlb
push
adcb
aam
stc
adc
or
daa
add
dec
jb
pusha
sbb
pop
lock
es
or
ja
cmp
push
cld
push
in
sub
sti
negb
lea
lods
cltd
push
inc
xor
xchg
fdivr
loop
sbb
cmp
push
pop
sbbb
pushf
sub
dec
adc
mov
mov
mov
into
mov
or
inc
shlb
sub
mov
cmc
out
or
push
cmp
and
and
dec
mov
push
movsl
add
decb
pop
stos
mov
dec
mov
pop
fwait
add
hlt
push
hlt
pop
shrl
dec
mov
lods
adc
push
popa
ret
popa
and
dec
aam
imul
cmp
in
scas
ret
mov
dec
pop
fs
cmp
and
sarb
jl
movb
icebp
pop
mov
adc
pop
pop
std
or
mov
pop
out
lea
add
prefetch
sub
aas
rcrl
out
inc
pop
sub
loopne
into
sbb
sbb
pop
cmc
adc
hlt
xchg
xchg
imul
inc
fisttpll
sub
xchg
fidivl
pop
push
pop
push
cmp
cmpl
jne
fisubrs
ja
jmp
inc
cld
scas
pop
in
push
outsb
or
or
sbbb
lcall
pop
out
push
orl
popf
movsl
dec
imul
aaa
ss
fabs
sbb
ljmp
add
lret
les
dec
sub
push
ljmp
cmp
xor
data16
fisttps
push
jnp
adc
lods
scas
sub
mov
lock
repz
shl
scas
or
or
inc
outsb
sbbl
test
aad
push
mov
push
pop
push
addr16
dec
fwait
jns
push
mov
shll
pop
jecxz
add
ja
fs
out
outsb
mov
mov
inc
push
popf
push
leave
push
pop
or
add
xchg
mov
inc
popa
or
or
and
ret
aam
lds
push
jnp
cs
lds
sbbb
xchg
jp
ljmp
inc
lods
jge
ljmp
pop
stos
pop
xchg
push
pop
push
or
sub
std
call
notb
sahf
sub
xchg
lahf
icebp
subb
sub
jle
jbe
gs
xlat
dec
and
outsb
xor
and
ss
adc
pop
test
xchg
pop
ret
repz
loopne
and
insb
pop
xchg
jnp
adc
pusha
cmpsb
fsubrs
pusha
jb
dec
aad
lahf
outsl
arpl
jno
sub
int
adc
xchg
repnz
mov
nop
xor
pusha
test
fs
add
into
mov
push
repz
xor
orb
jns
lcall
and
ja
ljmp
push
sbb
daa
push
mov
out
xchg
in
ds
aam
add
push
xorb
push
or
pop
pop
fucomip
stos
std
jne,pn
and
out
stc
arpl
sti
rcrl
out
movsl
shll
aas
jmp
imull
mov
lahf
push
mov
jge
dec
inc
lea
adc
mov
rorl
push
xchg
gs
jle
sub
nop
cmpsl
cmp
iret
and
dec
outsb
call
outsl
adc
push
mov
fldcw
mov
and
lret
mov
jp
nop
xor
mov
sub
mov
fisttps
outsb
outsb
mov
das
inc
div
dec
adc
mov
push
mov
sub
ja
inc
push
mov
aam
xchg
xchg
insl
cmp
in
mov
cld
ret
dec
ljmp
jns
negl
ds
xchg
out
fmull
mov
xor
sub
rclb
jb
xchg
adc
adc
lcall
xchg
fnstsw
dec
add
sub
push
pop
pop
mov
mov
pop
jae
jg
dec
add
dec
mov
popa
or
lods
pop
mov
sbb
in
fiadds
fstl
or
fnstsw
fistpl
popf
lods
jg
sbb
insb
test
clc
enter
jne
js
mov
popa
jbe
adcl
pop
test
jb
dec
pushf
pusha
add
repnz
mov
outsl
sbb
mov
sbb
xor
lcall
sbb
push
jne
inc
inc
xor
mov
out
neg
bound
add
fxch
inc
and
in
addb
dec
adc
iret
mov
jmp
pop
push
gs
cltd
dec
scas
mov
sub
cmpsl
sub
fsubs
arpl
sbb
cmp
out
xchg
es
jmp
pushf
mov
loopne
insl
pop
fidivrs
pop
sahf
jbe
dec
loop
jg
mov
bound
lock
fwait
jbe
sbb
push
pusha
repnz
loopne
lret
adc
pop
adc
fsubs
lea
mov
jmp
sub
cs
or
jb
xor
jmp
inc
or
int3
cmp
mov
ds
pusha
adc
push
push
sbb
outsl
cmpsb
jb
sarl
jecxz
and
les
dec
arpl
push
or
adc
mov
pop
aas
sbb
xor
inc
cmp
ret
pop
insb
mov
inc
jg
cmc
xor
or
insl
ret
bound
cmpsb
rcrb
pushf
and
scas
sahf
loopne
shlb
sbb
data16
ds
xchg
imul
and
aaa
push
xchg
xchg
sbb
or
out
pop
sub
jmp
test
or
jnp
rol
pop
xchg
cmc
test
mov
push
arpl
add
scas
jl
scas
bound
push
mov
mov
ja
or
lock
cmpsl
push
inc
cmp
push
pop
mov
xor
or
xchg
rcll
adc
arpl
out
xchg
clc
xor
jo
mov
push
xchg
mov
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
push
test
add
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
push
test
add
adc
and
xor
rcrl
sub
cmp
dec
sbbl
mov
push
test
add
adc
jns
test
jnp
loope
xchg
or
outsb
xchg
pop
orl
pop
sahf
pmaxsw
mov
out
ss
bound
push
lahf
outsb
jle
dec
fisttps
lret
das
loop
sahf
pmaxsw
jg
pop
fidivrs
cs
scas
outsl
lahf
push
lea
dec
fistps
push
es
ss
inc
pop
lock
ja
inc
ficoms
mov
jnp
add
lods
add
mov
push
adc
cmc
mov
push
fwait
xchg
mov
pop
jle
dec
and
inc
aas
inc
movsl
push
push
sbb
movd
inc
dec
push
mov
loop
xchg
lahf
and
push
mov
mov
hlt
mov
adc
ds
sbb
push
jo
pop
cmp
fbld
jb
shrb
jb
adc
jg
sub
lret
ds
mov
add
and
push
mov
add
mov
push
daa
push
inc
mov
ss
jle
mov
push
dec
push
shlb
out
test
cmc
pop
lret
jmp
sbb
pusha
ljmp
fstpl
cmc
sub
aas
mov
sahf
jg
outsl
into
pop
js
call
xchg
xchg
es
idivl
into
aas
int3
pop
cli
jp
push
jge
push
mov
shrb
imul
in
daa
mov
mov
cld
insb
jmp
jg
and
sub
lret
lea
adc
daa
mov
shrb
out
jnp
dec
mov
pop
fimuls
mov
push
outsb
jle
dec
fistps
scas
aas
mov
pmaxsw
outsl
into
pop
fimuls
mov
push
outsb
jle
dec
fistps
scas
aas
sbb
cwtl
pop
or
mov
es
insl
xchg
sub
xchg
clc
or
cmc
xchg
scas
inc
push
jo
and
mov
mov
inc
adc
jae
inc
int
je
jp
insb
outsl
adc
leave
xor
xchg
repnz
daa
and
or
lods
adc
sbb
jae
jns
mov
hlt
inc
sub
sub
in
add
jg
xchg
notl
push
xor
pusha
enter
fmul
test
jmp
ss
nop
int
sti
mov
push
inc
sub
pop
in
push
and
jge
popl
negl
jno
mov
icebp
jnp
into
xchg
push
mov
ficomps
cvtps2pd
cs
and
xor
sub
cli
inc
jp
sub
adc
mov
mov
adc
cmp
fidivl
cmp
in
cmp
lret
scas
mov
out
or
ror
push
icebp
dec
inc
add
arpl
xor
and
dec
imul
jo,pt
cli
jmp
inc
push
push
mov
out
nop/reserved
and
outsl
int
aam
jecxz
out
or
jae
in
jp
ja
mov
and
jge
sti
int3
in
inc
jne
and
fimuls
jmp
ret
mov
mov
daa
arpl
imul
int3
int3
xor
dec
frstor
sub
stos
sbb
xor
into
mov
jg
outsl
das
bound
jmp
xchg
fmull
xor
mov
popf
or
test
cld
aaa
cmc
mov
imul
outsl
pop
pop
mov
xchg
sbb
psllw
repz
jecxz
imul
pop
je
in
jae
mov
ret
mov
xchg
pusha
movsl
fwait
xchg
int3
std
adc
push
adc
clc
xor
sub
ss
adc
jge
push
dec
adc
outsb
pop
cmp
lock
mov
mov
mov
mov
out
jecxz
push
sbb
dec
pushl
pop
jp
mov
scas
cmc
sbb
xor
inc
stc
dec
sahf
mov
and
leave
dec
sbbl
xchg
push
push
gs
cmp
nopl
sub
mov
cltd
popa
add
sbb
int3
addr16
push
cwtl
mov
popf
pop
ljmp
adc
pop
push
imulb
aaa
lret
loope
int
popf
push
in
imul
bound
jecxz
add
xlat
incl
inc
repnz
bound
insl
fstps
sbb
popl
iret
xchg
jp
outsb
jl
inc
insb
push
iret
sbb
or
mov
cltd
xor
adc
fldlg2
je
dec
cs
dec
loopne
loope
or
cwtl
inc
les
sarl
pop
jns
cwtl
loop
cmpsb
mov
or
pop
sub
pop
fsubrl
jl
and
int3
jnp
outsb
cmp
js
sub
adc
loope
xor
sub
and
push
cld
xor
pop
sub
or
stc
push
dec
leave
push
sub
push
sub
xor
inc
scas
test
pusha
lds
into
and
mov
mov
pop
scas
jg
or
subl
add
cmp
dec
inc
out
popf
scas
js
cmp
sbb
repz
push
add
les
gs
add
jns
rclb
pop
jnp
movsb
lret
push
push
daa
mov
aad
adc
mov
inc
xor
cmpsl
sub
ret
pop
gs
xor
pop
mov
out
xchg
push
ret
push
xor
pop
add
lcall
aas
loop
mov
into
jbe
xchg
loopne
fucompp
mov
iret
shr
test
mov
dec
pop
push
dec
imul
xchg
mov
subb
les
popa
cmp
pop
insl
jmp
jno
sbbl
ret
mov
iret
jbe
xchg
test
imul
and
push
ss
aas
sub
mov
sub
xchg
dec
stos
mov
or
mov
repz
mov
ror
pop
insl
cmc
bound
repnz
jecxz
cmp
inc
jne
sub
lcall
mov
popf
dec
jl
outsl
add
mov
lret
lea
xchg
test
xor
aam
pop
ja
adc
js
xor
jl
aas
mov
test
test
idivb
icebp
ds
loope
outsb
add
aad
sbb
inc
cmpsl
pop
jmp
push
mov
jg
ss
mov
pusha
jbe
jle
fbstp
and
out
aad
mov
test
mov
pusha
test
rol
dec
push
mov
test
scas
add
ss
cmp
adcl
inc
call
inc
mov
call
ret
in
dec
mov
inc
insl
mov
push
pushf
add
jne
sarb
inc
jecxz
les
lret
cmp
mov
icebp
mov
stos
sar
and
pop
mov
bound
lret
jbe
jle
pop
or
sbb
xor
aaa
push
inc
ret
iret
mov
sbb
pop
inc
pop
test
loope
push
lcall
insb
mov
dec
pop
mov
cmp
add
insl
jmp
sbb
daa
inc
mov
out
and
inc
adc
xchg
das
mov
push
adc
lea
clc
add
push
negb
rcl
dec
fwait
inc
int
push
fs
cmc
inc
jns
in
xchg
aaa
pop
mov
stos
mov
test
fistpl
mov
test
push
lock
push
cmp
bound
imul
and
ret
dec
xor
out
push
mov
dec
testl
lods
scas
pop
dec
dec
jle
or
cmp
inc
mov
xlat
sub
adc
fwait
push
xchg
aaa
push
stc
sahf
movsb
pop
adc
insl
push
inc
pop
shll
add
cmpsl
lret
push
stc
push
adc
push
mov
xchg
sub
pop
out
idiv
push
and
lea
sub
pop
hlt
xor
roll
shrl
sbb
or
mov
icebp
aaa
mov
cmc
push
lret
cmp
push
mov
mov
out
or
cmp
jo
in
sbb
push
inc
xlat
xchg
jbe
inc
jle
fwait
lcall
push
pop
cmp
sub
dec
sub
ss
arpl
push
outsb
bound
sbb
rcll
jae
adc
outsb
jp
xchg
std
in
inc
insl
dec
out
jge
push
test
and
cmpl
mov
lods
cwtl
xor
movsw
icebp
adc
dec
inc
lods
clc
dec
int
and
out
push
and
sub
scas
add
dec
hlt
mov
dec
dec
or
lods
pop
sti
clc
cmp
ret
add
inc
sbb
enter
and
aad
ret
dec
call
jle
addl
iret
jb
lea
mov
mov
push
sahf
loopne
stos
shr
sub
int
dec
push
or
mov
cmp
rcrl
aaa
bound
mov
ljmp
push
mov
enter
fdivl
movsl
jle
cmpsl
lahf
icebp
mov
fldcw
hlt
sbb
test
mov
push
aad
loop
inc
adc
push
lret
sub
jnp
loopne
sti
mov
insb
lret
call
xor
cld
and
pop
iret
push
xchg
ss
repnz
xchg
cli
enter
adc
pop
or
sahf
repnz
jge
mov
adc
xor
push
rcr
mov
mov
mov
xchg
lret
addr16
add
test
and
jnp
sarb
jne
pop
into
call
lock
jge
mov
in
out
leave
push
adc
movsb
sbb
ds
and
inc
cld
or
sbb
ja
add
clc
xor
xlat
lock
sbb
sbbb
mov
lock
and
pop
scas
mov
jmp
repz
popa
cmpsl
push
rcrl
mov
lock
mov
lea
sbb
adc
mov
clc
mov
ljmp
mov
xchg
xchg
pushf
sbb
push
push
xlat
test
popf
xchg
cld
xchg
fs
push
icebp
jl
inc
add
push
mov
or
insb
pop
inc
jge
adc
in
adc
add
insb
adc
aas
adc
fisubs
and
test
fs
or
out
cld
lock
jae
mov
roll
or
dec
mov
movsb
movsl
dec
ja
arpl
cmpl
jno
clc
dec
push
in
lods
sub
dec
mov
mov
pop
jmp
xchg
pop
add
inc
or
inc
int3
shlb
hlt
cmp
mov
lret
fs
into
mov
push
popf
fidivrs
mov
test
jne
pop
std
hlt
lods
outsb
dec
sahf
int3
mov
test
add
ror
jb
cs
adcb
lods
sub
sub
rorl
push
fistl
aas
sarb
xchg
leave
les
cmp
arpl
testl
fdiv
icebp
or
xchg
jno
mov
stos
popf
push
fcmovne
dec
pop
outsb
dec
mov
pop
addr16
outsb
jnp
in
jne
sub
aad
out
jnp
mov
lcall
popa
repnz
loop
xchg
sarl
mov
xchg
xchg
mov
push
bound
scas
imul
out
sub
bound
sar
loopne
dec
adc
lret
lahf
ret
fdivl
pushf
loopne
cmpsb
addr16
insb
repz
and
mov
shll
cmp
and
xchg
roll
ret
or
add
sub
mov
or
fbld
dec
mov
jge
icebp
in
sbb
lcall
cmp
xchg
cmpsl
daa
in
cmp
lea
scas
xor
adc
jmp
push
mov
enter
inc
pop
xchg
mov
mov
sbb
das
int3
cmp
pop
ja
mov
popf
jb
mov
add
sub
cmpsl
sbb
cmp
xchg
mov
dec
popa
jns
out
outsl
xchg
cld
out
or
int
push
testb
scas
aaa
flds
fistl
dec
jno
in
pusha
xchg
cmc
repnz
je
or
cmpl
int3
ret
popf
mov
mov
fcmovnbe
push
adc
in
pop
pop
loope
imul
jb
jne
popa
inc
mov
js
loopne
add
imul
call
mov
lcall
pop
cmp
or
xor
lcall
mov
jge
outsl
xor
lods
aam
inc
pop
add
enter
jbe
bndstx
pop
ret
cli
pop
inc
sub
jb
mov
iret
push
sbb
adc
inc
jecxz
rcr
cmp
push
cmpsl
dec
enter
pop
daa
loop
and
push
lret
mov
movsl
jmp
mov
cmc
lret
loope
gs
out
dec
dec
jae
and
jcxz
call
orb
test
mov
fwait
inc
pop
sub
push
cli
add
sbb
push
pop
mov
pop
in
cld
loope
adc
jg
fdivs
out
mov
movsb
fbld
jbe
arpl
ret
inc
or
ljmp
cmovo
xor
scas
xor
adc
dec
aaa
sbb
fldt
fnstsw
mov
jbe
sub
rep
sub
js
mov
cmp
je
or
mov
mov
cltd
rclb
add
push
hlt
pop
out
xchg
mov
dec
sbb
pop
jnp
push
adc
aam
add
js
ret
out
shrb
mov
outsl
sahf
pushf
inc
mov
xchg
and
lods
ljmp
stos
outsl
pop
mov
aad
mov
test
mov
bound
mov
loopne
inc
mov
mov
pop
pusha
cmp
mov
cld
sbb
sahf
pop
xor
test
cmp
xchg
aad
out
or
dec
iret
xor
mov
xlat
cmpsb
and
cmp
lcall
das
xchg
xor
mov
mov
mov
jg
cmpsb
add
lods
out
or
lods
and
sahf
nop
mov
mov
jl
jno
inc
daa
cwtl
cs
cmpsl
fwait
or
andl
jb
mov
in
daa
rcll
mov
int
out
jmp
dec
imul
and
inc
xchg
adc
xor
sub
je
ljmp
rcr
sahf
xchg
sbb
xchg
pop
mov
dec
xchg
rcrl
mov
and
cmp
fcmovne
jns
and
jg
sbb
dec
rol
inc
dec
fisttpll
fcoms
xchg
mov
mov
add
lock
sarl
adc
imul
mov
pusha
sub
mov
lock
je
in
sbb
dec
mov
arpl
fs
push
imul
ljmp
push
lcall
mov
push
xchg
xchg
pop
outsl
xchg
lret
push
inc
aas
inc
call
out
xor
cltd
pop
pop
pop
imul
xchg
fisttps
or
fwait
out
leave
xor
test
into
inc
sarb
out
push
mov
adcl
mov
push
clc
cmp
jmp
fwait
sbb
add
fimull
sub
sbb
mov
popf
push
pop
pusha
punpckhbw
rclb
mov
imul
out
lahf
imul
or
sub
mov
call
adc
out
data16
pop
andb
leave
cmp
xor
sbb
dec
mov
inc
test
rcrl
add
stos
gs
lcall
add
movsl
daa
sbb
testb
outsl
mov
cmp
shlb
repnz
pop
ret
jmp
mov
pop
popa
roll
inc
in
xchg
leave
jae
das
ror
shll
sbb
je
roll
jns
inc
and
add
rcrb
loopne
jnp
pop
cld
xchg
push
jne
mov
mov
push
aam
mov
lahf
ja
shlb
xchg
test
pop
ds
mov
pushf
sub
es
cmp
fildl
repnz
cmp
xchg
loopne
mov
pop
mov
daa
xor
inc
imul
jae
xchg
add
and
cltd
enter
push
mov
ds
frstor
fwait
jecxz
fbstp
and
inc
pusha
cmp
mov
or
loop
xchg
fstps
jp
mov
sub
int3
or
jns
cmpsl
loop
addr16
imul
dec
xchg
dec
push
push
nop
push
xchg
push
jne
repz
rolb
addr16
call
sbb
rcrb
or
movntq
into
inc
inc
adc
les
mov
adc
xlat
cld
in
fiadds
adc
hlt
aam
sub
cmp
inc
icebp
jae
fcomp
add
repz
fistps
or
cli
fisttps
dec
xchg
cld
dec
fiaddl
movsb
dec
add
sahf
dec
lock
xchg
icebp
push
imul
xor
ret
pop
stos
mov
cmp
icebp
arpl
test
mov
ja
mov
ljmp
addr16
aad
jge
jbe
ret
cmp
ss
aam
mov
sub
cli
xor
mov
call
test
sub
push
cmp
aam
mov
cmpsl
and
stc
adc
sbb
ljmp
insb
sbb
dec
mov
push
xchg
pop
push
and
jp
add
leave
dec
add
sarl
inc
sub
adc
xor
inc
sub
mov
mov
adc
dec
jne
xchg
xchg
pop
testl
test
jecxz
pop
xchg
out
mov
notb
jle
cmc
icebp
scas
mov
mull
hlt
push
add
push
dec
xor
fistpll
bound
add
fnstcw
pusha
cld
cli
xlat
lret
idivl
sub
cmp
add
or
or
int
xor
jbe
scas
inc
out
addr16
add
lcall
lcall
std
iret
out
adc
adc
bound
mov
xor
mov
xchg
insl
jne
sub
push
jg
lret
das
adc
in
xchg
lret
xor
int
jle
int3
pop
push
inc
ret
in
cltd
and
or
push
enter
scas
popf
xchg
mov
js
loope
add
mov
mov
mov
out
pop
dec
jne
pusha
and
cs
xchg
test
jp
add
pop
dec
pop
loopne
add
pop
dec
cmpsl
cltd
movsb
dec
mov
mov
in
mov
or
hlt
mov
ret
scas
push
pop
sbb
inc
and
push
mov
or
out
add
pop
push
movsb
js
mov
mov
inc
mov
int
push
enter
fsts
mov
add
fsubp
mov
std
push
xchg
cs
pop
dec
add
mov
xchg
sub
mov
dec
inc
lret
and
icebp
addr16
call
jae
ljmp
sbb
cs
mov
fsubrs
cli
in
mov
sub
aas
and
test
adc
scas
cmpsl
push
into
add
data16
sbb
sub
adc
inc
aad
inc
rcr
mov
jge
dec
cmp
jle
mov
mov
xor
lods
mov
xchg
gs
data16
outsb
je
push
and
xchg
dec
fstl
mov
imul
shlb
iret
jmp
fildll
insb
xor
mov
insb
add
or
repz
pop
xchg
inc
dec
or
xchg
bound
test
push
lahf
jl
push
jl
add
sbb
jecxz
lods
shll
xor
xlat
sarb
mov
sub
sub
ja
stos
mov
cmp
push
or
es
mov
pop
in
loopne,pn
es
mov
pop
imul
lea
icebp
es
movsb
xchg
les
outsl
loop
mov
arpl
lods
sub
sbb
repnz
and
add
mov
loop
pusha
push
cmp
scas
or
pop
fstl
xor
dec
notb
arpl
cmp
iret
hlt
mov
lcall
mov
and
dec
fbld
add
cli
in
jne
push
je
clc
mov
movsl
out
jmp
pop
pushf
lods
lret
clc
sbb
insl
leave
add
jae
in
daa
cld
mov
push
mov
ja
in
inc
lds
sbbb
mov
push
imul
xchg
lcall
jno
in
jae
ja
add
lods
loop
adc
dec
sahf
ljmp
fdivrl
in
into
arpl
rcrb
aaa
mov
jno
xchg
data16
inc
inc
pop
xchg
dec
xor
xchg
xchg
dec
inc
outsb
mov
pusha
stos
enter
repz
xor
and
das
push
pop
mov
push
adc
les
es
sbb
into
cmpsb
enter
in
mov
arpl
push
test
sarl
sub
push
psubusw
cli
js
and
xor
mov
iret
pop
jo
jg
jp
andl
pop
cmp
push
mov
add
add
out
mov
addr16
stc
push
mov
scas
arpl
inc
mov
nop
orl
test
sub
test
vmwrite
rcl
insl
xor
push
jge
fcoms
in
int3
inc
std
sahf
fs
in
inc
jecxz
mov
sti
jg
push
mov
jbe
cmp
aad
inc
jo
movsb
cmc
lcall
sbb
leave
adc
in
out
call
cmp
sbb
push
sub
ds
pop
cmp
data16
sahf
les
les
int
jbe
jo
pop
out
xlat
arpl
cld
daa
jb
sub
sub
xlat
jns
or
adc
xchg
mov
fcmovnu
jbe
aas
inc
lods
dec
or
mov
xor
mov
aas
inc
addr16
ja
mov
or
dec
fndisi(8087
test
jle
jns
dec
jmp
pushf
enter
push
popa
mov
in
adc
inc
mov
popa
ss
mov
enter
addb
xlat
mov
movsb
jae
int3
push
sahf
or
ret
or
sarb
jl
inc
dec
movsb
mov
or
inc
jns
push
xchg
loop
scas
push
xchg
mov
icebp
movsb
fisttps
or
xchg
pushf
dec
cmp
mov
lcall
jmp
addr16
mov
ss
mov
icebp
loop
mov
mov
xor
ficomps
xchg
dec
mov
cmp
sub
mov
mov
push
mov
test
movsl
out
punpckhwd
out
push
pop
dec
xor
icebp
add
mov
out
aam
and
adc
out
xlat
inc
lock
pop
pop
call
pop
sahf
pmaxsw
outsl
into
pop
fimuls
mov
push
outsb
jle
dec
fistps
scas
aas
mov
pmaxsw
outsl
into
pop
fimuls
mov
push
outsb
jle
dec
fistps
scas
aas
mov
out
pop
sahf
movd
outsl
into
pop
push
dec
cs
push
mov
outsb
out
dec
sub
sbb
outsl
into
pop
pop
cs
push
clc
sbb
nop
mov
mov
push
adc
jb
push
jge
add
test
rclb
andb
and
and
bound
jb
add
push
and
mov
loop
repnz
shl
ret
mov
inc
cmp
bound
jb
add
dec
and
push
sar
xchg
repnz
scas
std
mov
inc
and
jnp
lahf
icebp
pusha
clc
mov
ficompl
outsl
ja
inc
pop
sbb
stos
int3
jo
adc
rclb
add
lea
mov
sub
jecxz
jg
divl
mov
xchg
rcrl
inc
bound
mov
pop
sub
or
cmpsb
push
jns
add
jecxz
xor
repz
mov
add
mov
sbb
mov
jbe
mov
xchg
pop
sub
shll
ja
and
mov
mov
ds
test
xchg
loop
pop
pop
cmp
rcl
and
into
ja
lahf
mov
push
shrb
repz
ret
mov
inc
and
bound
arpl
jns
push
and
stos
ret
mov
lcall
mov
inc
push
jbe
sbb
outsb
push
adc
cs
cmpsl
mov
mov
jecxz
loope
mov
and
bound
add
dec
or
xor
xor
xchg
loope
stc
mov
or
add
add
or
arpl
push
and
mov
mov
repnz
shll
and
bound
jb
add
push
and
mov
mov
repnz
shll
loopne
dec
shrb
pop
into
dec
scas
in
pop
sbb
popf
and
mov
mov
dec
jno
xchg
outsb
mov
in
sbb
stos
movb
jecxz
add
andl
xchg
sub
xchg
adc
test
mov
inc
xchg
inc
js
popf
jecxz
jp
mov
xorb
out
aas
sub
or
daa
mov
rorl
outsl
sbb
iret
mov
loope
sti
std
sti
mov
xchg
insl
pop
mov
out
and
sahf
jae
xchg
ss
sub
unpckhps
test
mov
int3
insl
std
and
movsb
ss
dec
jmp
stc
and
or
jae
fidivrl
jge
lock
mov
fadd
test
push
xchg
pop
mov
mov
and
mov
dec
mov
dec
faddl
out
sub
cmc
mov
sub
sbb
cmp
add
movsl
into
jae
mov
loop
push
dec
nop
cmpl
pop
mov
sbb
stos
xchg
push
stos
dec
lea
das
daa
inc
mov
arpl
cs
sbb
xor
xorl
test
repnz
int
jbe
or
or
push
xchg
and
lds
cmp
es
fdivp
jne
push
test
out
scas
sub
adc
int
enter
fidivs
out
or
imul
mov
and
cmovg
and
cld
jl
push
mov
aad
mov
mov
clc
call
imul
dec
mov
das
fwait
xor
mov
sub
sahf
sbb
insl
mov
inc
rclb
outsl
xor
aaa
leave
out
lret
cmp
iret
xor
lret
int
pop
lods
mov
popl
mov
push
data16
gs
clc
int
mov
rorl
cltd
jno
mov
out
inc
cs
sbb
es
cmpsb
xor
jmp
add
fcomi
cltd
cmpb
jb
mov
leave
mov
jle
movb
orb
mov
jle
rorl
or
clc
inc
and
nop
or
inc
imul
jae
mov
icebp
in
fs
sub
inc
dec
imul
imul
adc
mov
dec
pop
imul
and
shl
sbb
dec
sub
test
insb
stos
aaa
xchg
pop
dec
mov
xor
cmpsl
push
in
xchg
sub
dec
scas
mov
adc
out
adc
fs
scas
cwtl
pushw
mov
or
sahf
inc
push
sub
ljmp
push
jl
cmpsl
fcmovne
scas
aaa
nop
fidivl
cmp
ret
xchg
ja
aas
out
lea
das
inc
add
mov
push
mov
sbb
cltd
adc
xlat
aas
mov
or
jl
popf
xor
cmp
sub
mov
cmpsb
jecxz
mov
lods
and
inc
add
rorb
xor
push
movsl
outsl
and
nop
aas
movsb
je
bound
repz
xchg
cli
cmp
andb
insb
inc
lods
fwait
std
mov
pusha
test
shl
shlb
icebp
mov
shll
loop
call
pop
push
ds
pop
leave
icebp
ss
fists
icebp
cmpsl
cmp
ljmp
sbb
and
cmp
jge
out
add
call
stos
pop
sbb
mov
in
gs
pop
add
sbb
sub
fsubs
ja
and
dec
test
xchg
xor
jb
jmp
xchg
push
cmpsb
repnz
inc
add
lcall
sbb
pop
pop
pop
in
fistpll
es
out
mov
jmp
loopne
into
mov
jne
adc
sbb
in
and
fnstcw
jns
xor
pop
xchg
xchg
add
shrl
jp
loope
dec
arpl
icebp
lahf
icebp
repz
insb
sub
fwait
outsb
sarl
xchg
jne
jle
scas
jg
push
xchg
mov
mov
das
in
push
lods
imul
bound
stos
sbb
dec
in
std
adc
les
cmp
push
push
daa
mov
mov
inc
loope
pop
fsts
xchg
xor
lret
pop
add
aad
cwtl
addl
lret
jne
pop
popa
mov
mov
jns
adc
loopne
pop
jecxz
mov
push
sub
xor
inc
repz
ret
nop
adc
pop
sub
pushf
or
xchg
sbb
jle
stc
mov
pop
rcll
out
bound
cwtl
pusha
adc
dec
sbb
mov
movsb
or
xchg
sub
sahf
in
and
sbb
loope
cmp
push
mov
mul
mov
gs
out
xor
in
push
adc
imul
leave
pop
jmp
xchg
mov
pop
push
stc
ds
jne
daa
cli
nop
xchg
mov
adc
adc
jns
sarl
into
rcrl
and
enter
pop
xor
fs
xchg
xor
cmp
adc
push
fiadds
jmp
mov
fwait
pushf
adc
inc
fwait
mov
leave
dec
orb
scas
dec
repnz
mov
lds
ljmp
and
fisttps
lods
lahf
aad
ret
pop
sub
push
pushf
fs
mov
mov
sbb
fidivl
out
daa
les
stos
push
ds
mov
pop
adc
and
dec
mov
fucomp
stos
sti
xchg
push
sbb
daa
fdivs
cmp
jp
sbb
ja
fcompl
stos
andl
iret
mov
imul
inc
fucomp
cmp
pop
cmp
imul
or
ret
mov
ljmp
lods
out
fsubr
stos
mov
pop
pushl
testl
and
jmp
sbb
inc
sahf
sarb
aad
jo
and
push
mov
pop
sub
mov
inc
sub
mov
add
mov
mov
jg
push
push
cmp
movsl
icebp
and
jbe
std
inc
fwait
add
iret
mov
and
lods
test
fistpl
pop
cmp
fildll
insl
cmp
sbb
outsl
push
icebp
das
cmpsl
lods
mov
cs
js
mov
adc
mov
mov
arpl
cli
sahf
scas
mov
xchg
xchg
scas
mov
shll
lods
testl
jmp
adcl
pop
dec
pop
hlt
int3
push
push
mov
mov
or
add
mov
cmc
and
cmp
cmp
daa
bound
and
loope
adc
fimull
sub
mov
sarl
leave
inc
test
dec
add
jecxz
push
push
pop
jo
pop
push
push
sti
imul
sbb
movnti
cld
nop
sar
popa
xchg
scas
xor
lock
cmpsl
rcrb
fidivs
dec
ret
mov
dec
adcl
sarl
dec
aad
aad
sbb
mov
daa
repnz
stos
xor
lret
cli
das
dec
shrl
pop
or
mov
jge
mov
js
fadd
enter
mov
pop
xchg
fwait
lret
cwtl
and
icebp
pop
divl
xchg
fsubrl
lds
repz
xchg
ja
ljmp
shlb
push
jecxz
inc
outsl
mov
in
movsl
xor
xchg
ljmp
inc
mov
lds
and
hlt
movsl
popf
aaa
out
add
dec
test
pop
pop
mov
xchg
or
aam
sub
dec
es
xor
and
shlb
push
push
cltd
adc
lods
idivb
and
xor
jae
cmc
sbb
xor
movsb
mov
jp
pop
outsb
jl
stc
call
mov
pop
pop
bound
test
add
popf
cli
mov
enter
mov
pop
rcrl
and
jg
fucomp
cmp
pop
mov
or
push
dec
xchg
addr16
cld
jbe
ds
mov
jnp
mul
out
adc
or
test
xor
mov
iret
scas
mov
jp
mov
adc
int
mov
stos
insb
sbb
fnstcw
and
xchg
aaa
adc
mov
pushf
testl
pop
adc
dec
mov
adc
pop
jns
push
aaa
insb
cltd
or
cmp
cld
loope
add
outsb
imul
jbe
dec
mov
outsb
or
inc
js
inc
sub
sbb
pop
adc
das
xorb
dec
imul
hlt
fmull
jmp
xchg
or
jae
pop
ror
and
inc
push
ret
cmpb
lea
add
xor
ficoms
loop
arpl
clc
aas
dec
pop
hlt
xchg
je
ja
sbb
push
sbb
popa
or
xchg
pop
dec
ja
adc
scas
add
add
push
ror
inc
test
sbb
in
pop
cmp
out
int
dec
adc
inc
repz
ficompl
insl
fdivl
xor
jae
movsb
loopne
aad
jae
and
out
insb
loope
add
testl
sbb
sarb
andl
sbb
pop
mov
xchg
scas
les
ja
push
loop
popf
mov
adc
clc
cli
mov
mov
stos
enter
mov
mov
cmp
daa
lret
inc
push
push
std
enter
and
jo
sbb
xchg
sub
pusha
mov
xchg
ret
jg
lret
shll
mov
mov
in
ret
mov
adc
xor
inc
sti
lock
adc
sbb
inc
sbb
ret
enter
add
clc
adc
xor
in
mov
pop
divb
mov
xor
nop
fdivrl
pop
int3
mov
test
mov
pusha
xchg
icebp
pop
int3
nop
pop
inc
push
push
or
aas
call
push
inc
fwait
lahf
sbb
pop
inc
icebp
xor
dec
or
push
scas
add
mov
mov
push
add
xchg
mov
jae
into
mov
ss
out
adc
jmp
jnp
int3
mov
add
repz
test
bound
mov
jno
fs
jp
inc
cmp
imul
mov
xlat
leave
pop
mov
ss
rclb
inc
sbb
sub
rcrb
adc
rcrl
jns
test
add
fwait
mov
or
jb
push
imul
shl
hlt
jns
push
inc
mov
in
xorl
gs
in
imul
ds
cmp
mov
and
sbb
movsb
dec
mov
ljmp
sbb
sbb
and
xor
lock
push
sub
pusha
push
or
rcll
scas
insl
popf
iret
mov
pop
fcoml
jno
or
roll
out
les
add
jecxz
dec
inc
jl
dec
pop
and
imul
ret
out
and
mov
xchg
imul
xchg
adc
push
adc
fsubr
xchg
loop
dec
mov
test
jge
or
adc
int3
rorl
sub
popf
dec
fs
pop
ljmp
fisubs
call
adc
lods
ss
push
pop
fildll
sub
dec
decl
jecxz
in
add
inc
jae
inc
mov
pop
movl
stos
and
xor
or
add
inc
ljmp
jl
cmp
push
jg
mov
lock
je
adc
or
out
nop
and
imul
shlb
sbb
sbb
jae
in
add
test
xchg
scas
push
inc
cwtl
loop
ss
shlb
push
in
adc
inc
fcmovne
sarb
shrb
push
pop
test
inc
dec
int3
jge
pop
dec
mov
jnp
cld
jp
mov
fisubs
lret
mov
pcmpgtb
fwait
pop
xlat
stos
dec
mov
push
out
rcrl
jbe
clc
cmp
sbb
mov
sub
out
adc
fstps
into
outsl
mov
pushf
jmp
and
jo
into
pop
pop
fisttps
dec
stc
ja
lock
int
bound
mov
inc
lds
pop
add
or
dec
sbb
lret
dec
xchg
mov
or
fsubs
hlt
inc
mov
sbb
add
cmp
adc
aam
xor
movsb
arpl
or
push
jo
fildl
mov
test
xor
lcall
sub
imul
mov
pop
clc
dec
fisttps
ss
mov
adc
insb
jnp
test
int
fwait
adc
adc
test
dec
ds
push
repz
repz
adc
sub
filds
xchg
xchg
push
and
adc
rcl
in
sub
ja
adc
fbstp
or
in
daa
jmp
cmp
xchg
arpl
and
leave
or
or
testb
add
test
cmp
dec
mov
adc
mov
cmpsl
push
enter
add
inc
and
insl
jmp
loope
mov
aam
mov
and
and
sbb
ss
lods
stos
cmp
data16
mov
cmpb
jmp
dec
jo
mov
jp
int
out
stos
cmp
cwtl
xchg
push
aas
lea
mov
loop
mov
or
push
mov
ret
cmp
cmpsl
je
cs
sub
and
or
lea
enter
pop
loop
gs
imul
mov
lret
sub
xchg
inc
push
hlt
mov
mov
or
clc
cltd
xor
jnp
aaa
mov
mov
and
sti
jl
sub
adc
sar
xchg
aas
sub
lcall
int3
inc
xor
js
test
fwait
incl
jno
pop
imul
fs
add
and
adc
inc
mov
inc
xchg
fcomip
std
pop
loop
inc
in
pop
and
mov
ljmp
out
jmp
jb
cmp
inc
test
mov
das
pop
ljmp
mov
xor
in
adc
stc
out
lds
inc
lds
add
or
inc
sbb
outsb
ja
mov
aad
mov
stos
popf
daa
sub
popa
push
fcompl
inc
aaa
imul
lea
mov
clc
je
stos
std
mov
pop
insw
push
pop
and
rcr
mov
mov
dec
push
fmuls
xchg
shr
add
xor
inc
mov
cmp
inc
xor
or
int
aam
adc
push
mov
dec
in
imul
push
notl
notl
loop
aam
sub
jl
xchg
push
js
outsl
lea
or
daa
outsl
bound
add
stos
xchg
lds
xor
inc
mov
sbb
loop
mov
test
mov
pop
jge
cltd
sbb
sbb
lds
push
das
adc
mov
lods
xchg
jge
cmp
scas
shrb
and
pop
xchg
pusha
lock
in
jnp
jo
cli
int
jecxz,pt
testb
shl
push
mov
pop
add
adc
jp
cmp
outsb
xchg
jnp
cmp
lret
fdivl
or
ficoms
pop
mov
xchg
loope
or
cmp
stc
cld
mov
mov
int3
movsb
mov
inc
adc
lock
push
sub
jbe
mov
push
rcr
pop
shr
add
inc
mov
sub
ss
cmpsl
mov
iret
leave
pop
cmc
adc
sbb
jecxz
mov
int3
dec
or
mov
mov
iret
repz
sbb
xor
cmc
mov
ljmp
jne
sub
cwtl
or
lret
sub
clc
sbb
imul
mov
movsl
imul
fdivrs
xchg
cmpsl
jecxz
dec
sbb
mov
cld
clc
mov
popf
dec
lret
mov
leave
mov
or
cmp
fldt
sbb
rorb
iret
push
sub
push
ret
or
cmpsl
loopne
test
add
lock
aaa
inc
pop
cmpsl
bound
push
je
cmc
mov
push
mov
aad
pop
pop
xchg
loope
call
imul
cmp
jmp
mov
mov
lret
insb
in
aad
cmp
inc
inc
inc
sbb
xchg
mov
pop
sub
adc
sub
mov
mov
pop
jbe
xchg
inc
lds
jae
popf
js
dec
xchg
mov
insb
repnz
and
insb
leave
sub
jp
insl
mov
cltd
sub
xor
pop
cltd
add
sbb
push
dec
and
cltd
ds
dec
push
mov
sbb
fsts
or
inc
inc
mov
sub
push
ret
pop
ret
and
mov
adc
lds
fistps
push
adc
mov
jns
xchg
pop
mov
dec
pop
in
mov
stos
test
pop
outsb
xchg
and
cs
loope
popa
inc
mov
sbb
push
mov
and
test
jge
loope
fbstp
fisubl
mulb
loopne
pop
jp
inc
mov
rclb
cmp
sbb
aaa
in
mov
or
icebp
jbe
jmp
inc
test
addr16
ja
outsb
xchg
cmpsb
and
ret
sbb
fdiv
repnz
pop
dec
stos
nop
in
dec
mov
pop
push
or
nop
roll
fmul
fbld
mov
daa
inc
xchg
fadds
push
dec
push
imul
testb
mov
xor
gs
leave
xlat
and
out
out
addr16
nop
sahf
pop
cmp
jg
push
xor
movl
out
cmpsb
or
loopne
pop
pop
xchg
les
sub
sbb
aas
fwait
cmc
fiadds
inc
and
jp
cmp
jle
ret
gs
push
mov
pop
sahf
or
xchg
sub
and
stc
xor
mov
mov
movsl
stos
or
loope
jnp
push
adc
and
mov
cmc
mov
cmc
cmp
es
icebp
xor
out
rorb
or
jmp
les
das
dec
jmp
daa
pusha
arpl
mov
push
pushf
push
stos
out
cmp
or
js
dec
scas
aam
cli
pop
lods
sbb
shrl
push
in
call
sbb
rcrl
test
jo
sub
push
ja
les
sub
push
imul
dec
ja
jge
fs
loop
mov
pushf
imul
jmp
dec
add
jge
xor
jg
inc
loopne
dec
popa
pop
rclb
xchg
loope
imul
lods
daa
mov
sti
mov
sub
jne
ret
add
movsl
mov
inc
mov
out
enter
push
xor
cwtl
leave
fstps
push
aas
mov
inc
popf
scas
mov
movsb
das
cmpsb
lahf
popl
in
jae
cli
clc
mov
adc
cmpsb
push
pop
movl
mov
test
or
mov
fisubrs
adc
dec
dec
nop
std
jb
add
ljmp
out
iret
or
ljmp
pop
jns
lret
dec
push
fisttps
pop
add
dec
xorb
or
push
shrb
add
incb
data16
sar
inc
jmp
jb
sbb
or
mov
or
push
push
arpl
mov
mov
push
dec
jb
push
mov
push
std
cltd
mov
out
mov
fisubl
xor
xor
lods
xadd
and
push
cmp
and
mov
sub
test
mov
pop
addr16
cwtl
call
fidivs
pand
pop
sub
out
push
push
sbb
mov
adc
sbb
cmc
lretw
cltd
push
movl
xor
inc
and
push
sub
add
pop
outsb
pop
lcall
cmp
rcrb
jl
dec
ljmp
mov
pop
aam
cmc
push
test
mov
pushl
or
sub
pop
cwtl
dec
push
push
push
jmp
or
push
cmp
mov
mov
inc
out
bound
cmp
test
lods
add
sub
push
daa
out
and
mov
cs
jnp
imul
aam
push
movl
pop
push
jg
xor
lret
repz
mov
jp
lods
mov
add
add
enter
out
xchg
dec
enter
les
inc
pop
jge
incb
insl
shr
cli
push
or
scas
and
aam
pusha
and
andb
test
xorb
jle
rorb
mov
ds
xchg
xchg
pop
aas
sbb
icebp
mov
movsb
addr16
mov
xor
adc
mov
mov
xlat
enter
clc
mov
jmp
dec
loop
pop
lret
aam
cltd
push
adc
mov
lods
je
jno
jge
jno
adc
pushf
inc
adc
lret
lret
adc
jle
fnstsw
loope
rol
push
push
bound
jb
add
push
and
mov
mov
repnz
shll
and
bound
jb
add
push
and
mov
mov
repnz
shll
and
adc
add
add
push
and
mov
mov
repnz
shll
pop
push
and
add
shll
ret
xor
js
loop
test
cmp
dec
sbb
outsl
lds
mov
shll
into
fbstp
inc
call
and
mov
cmc
outsl
lds
shld
cmp
test
loope
fists
inc
icebp
push
scas
inc
mov
cmc
ja
xlat
push
cltd
pop
mov
imul
mov
xchg
jb
pop
repz
adc
outsl
mov
sbbb
out
cltd
clc
dec
dec
data16
xchg
mov
into
outsb
mov
imul
inc
mulb
fbld
imulb
in
lock
fistpll
sti
int3
negb
push
cwtl
call
jb
popl
mov
in
aad
insl
lock
push
fst
jle
push
lcall
jo
lahf
lret
mov
sbb
lock
xchg
iret
sbb
orb
ja
lahf
xor
adc
ljmp
sub
loop
ss
aaa
imul
mov
int3
lret
mov
add
sbb
es
notl
sbb
mov
mov
cmc
or
jns
in
aas
lock
and
cmp
dec
cli
inc
fldl
and
arpl
pop
xchg
jmp
stc
mov
mov
xor
fstpt
mov
mov
xchg
pop
mov
rcrl
das
test
xchg
iret
fbstp
inc
call
and
mov
cmc
outsl
lds
shld
mov
test
xchg
iret
fbstp
inc
call
and
mov
and
data16
arpl
fsubrp
movsl
lahf
sbb
je
lret
and
push
into
cs
fwait
mov
sbb
adc
js
mov
gs
sub
mov
inc
adc
mov
adc
dec
lret
cmp
xchg
cld
daa
and
lahf
push
xchg
xchg
inc
sub
mov
sub
stos
js
enter
das
sbb
stc
movsl
js
cmpb
test
lret
cltd
ss
lods
sbb
pop
push
xchg
rolb
jecxz
ljmp
push
cli
cmp
push
jne
idiv
les
ret
fwait
test
loop
jl
scas
data16
and
jmp
mov
xor
xchg
cmpb
leave
add
sti
fwait
or
add
or
adc
sub
fsubl
sahf
mov
adcb
jmp
pop
fbstp
push
mov
ja
decl
je
mov
push
pop
shrl
adc
push
call
nop
or
cmp
loope
xchg
xor
sbb
sbb
jnp
stos
sbb
jo
jecxz
pop
lcall
mov
add
outsb
fists
push
fdiv
mov
add
shrb
inc
fs
fidivs
jns
jo
scas
ds
es
mov
mov
add
push
fadds
and
dec
push
je
leave
xchg
cld
push
int3
mov
lcall
push
icebp
lahf
mov
in
push
cmp
nop
lret
mov
test
mov
cmp
push
mov
mov
cld
scas
arpl
mov
and
jle
jecxz
and
movsl
repz
lock
cmp
xchg
xlat
cltd
xor
xchg
pop
lds
jb
jno
aam
iret
mov
sbb
dec
js
adc
mov
iret
mov
jo
inc
pop
inc
jae
pop
or
sub
test
in
ficompl
adc
xchg
pop
sub
test
xor
scas
or
test
testl
sbb
lock
imul
dec
lock
adc
outsb
js
les
push
pop
jb
adc
imul
mov
fxch
loope
add
testl
sti
and
jns
mov
clc
or
stos
sbb
sbb
std
inc
mov
fwait
add
icebp
cmp
sub
jle
in
cmp
repz
stos
or
shlb
aam
cmp
jle
scas
pop
in
pusha
ret
outsl
hlt
outsl
data16
cmpb
cmp
js
movsl
push
adc
mov
call
fldl
insb
mov
clc
pop
fdivs
cmpsl
mov
hlt
ljmp
jl
lea
data16
dec
and
in
lods
push
or
ror
sete
js
sub
inc
sub
out
sbbb
orb
loopne
mov
push
ja
repnz
int
scas
shrl
test
imul
jbe
mov
sbb
push
ret
and
scas
pushf
movsl
rorb
xchg
in
xor
jbe
cli
mov
icebp
inc
orl
rcl
aam
mov
sub
cld
cmp
mov
loope
jl
ror
cmp
adc
mov
outsb
fcmovnbe
jnp
lcall
pusha
jbe
mov
test
jp
push
add
inc
adc
int3
add
jae
cli
push
adc
cmp
popa
or
mov
lahf
movsb
out
jmp
fldenv
mov
fisttpl
fdivl
pop
push
nop
add
ret
lea
jb
lods
in
add
loop
dec
sub
fld
add
andb
imul
jmp
leave
dec
repz
and
xor
pop
mov
rorl
notb
shrl
fstp
fcmove
ss
stc
xor
lea
add
and
aaa
and
js
mov
xchg
pop
cmpsl
int3
lds
pusha
icebp
ljmp
inc
fs
mov
inc
xor
jnp
jl
mov
call
inc
pop
mov
cmpsl
cmp
jmp
jne
repnz
pop
cmc
test
mov
and
pop
pop
adc
mov
fbstp
ret
mov
movsb
addl
add
shr
xchg
push
pop
inc
daa
mov
insb
pop
sbb
repz
add
or
inc
inc
jge
add
sub
push
sbb
inc
fcmovnu
push
scas
int
in
mov
pop
mov
adc
loopne
cli
nop
xchg
sub
repnz
idivb
dec
push
add
ja
or
mov
xor
mov
stos
xorl
jecxz
mov
sbb
clc
mov
out
pop
aam
cmp
and
sbb
xchg
sbb
outsl
das
jae
insl
dec
sarl
shlb
push
push
add
inc
cmp
or
mov
mov
cltd
push
out
jl
mov
sub
cmpsb
mov
bound
mov
dec
cs
stc
mov
jbe
call
adc
fdiv
and
inc
jecxz
fsubrs
xlat
adcl
lods
lahf
fbld
cmp
pop
fcoml
or
xor
push
jecxz
cmc
cmp
pusha
sbb
sbb
popf
sbb
int
std
jecxz
orl
push
inc
mov
ja
rolb
out
jns
insl
xlat
sahf
dec
push
shlb
and
jno
add
das
fdivl
sub
js
cmp
pusha
jne
stc
cmp
push
xor
ds
push
jbe
mov
mov
adc
jno
push
gs
push
add
xchg
rclb
sbb
pop
xchg
das
jmp
adc
xchg
and
cwtl
test
scas
js
adc
enter
adc
out
dec
ret
jno
dec
fisubrs
stc
loop
mov
add
mov
and
and
std
dec
in
mov
mov
mov
pop
ljmp
hlt
test
mov
pusha
xchg
das
gs
scas
inc
dec
test
imulb
adc
push
dec
inc
in
or
daa
ljmp
lcall
test
fdivrp
scas
xor
fdiv
imulb
xchg
push
xchg
or
dec
repz
iret
push
and
sbb
repnz
sub
int
ljmp
xchg
pop
popa
pop
test
push
mov
add
or
test
and
mov
add
and
jl
dec
incb
stc
les
push
insl
mov
scas
hlt
mov
xchg
adcl
mov
and
dec
or
mov
je
fcomps
lds
addr16
orb
stc
sbb
xor
rolb
out
loope
adc
adcb
fidivrs
mov
mov
gs
sbb
aam
hlt
sbb
mov
pop
pop
cmp
sub
jae
mov
sbb
lret
push
cmp
lock
add
pop
cmc
cld
aaa
jge
mov
jp
jmp
lret
push
dec
push
mov
popf
mov
xor
test
das
les
push
lahf
sub
sbb
stc
pop
lds
loop
jecxz
inc
fcoml
lret
stos
pushf
imul
xlat
aam
fmull
pop
cmp
pop
push
mov
adc
je
js
inc
stos
or
adc
mov
mov
mov
ss
mov
sbb
andl
xchg
pop
aad
int3
lods
arpl
sbb
shll
mov
ficoml
sbb
outsl
in
add
in
aas
inc
mov
les
sub
xchg
idivb
push
fmul
xor
xchg
test
xchg
jge
stc
pop
sti
xor
ja
mov
rcll
dec
pop
inc
sub
adc
add
pop
pop
mov
test
jmp
mov
push
or
xor
gs
mov
repz
push
pop
cmp
or
add
int3
lahf
xor
lret
mov
jg
xchg
cmc
imul
out
sub
or
mov
loop
sar
out
or
std
idivl
sub
jne
out
mov
stos
and
cmc
mov
push
pop
inc
or
push
jmp
mov
mov
sahf
push
xor
jno
enter
inc
mov
mov
scas
cmpsb
push
fwait
int3
and
jp
aam
orl
xchg
lcall
xchg
js
xchg
jg
and
lahf
outsb
add
rcr
sub
push
xchg
mov
push
rcrb
adc
loope
push
clc
sub
push
jmp
cmc
pop
jo
inc
fxch
push
test
adc
ljmp
mov
ds
mov
icebp
rcll
sarl
xchg
inc
jle
scas
cmp
repnz
dec
jno
or
dec
dec
aaa
std
cmp
mov
test
add
fs
shl
inc
mov
inc
push
pop
lods
outsl
xchg
mov
dec
mov
repnz
lods
mov
mov
sbb
ret
xor
cmpsl
pusha
push
cmpsb
lock
sub
pop
lret
adc
add
sub
inc
push
dec
dec
cli
popf
xchg
sbb
stos
lock
pop
or
aas
js
hlt
bound
and
outsb
mov
fldt
mov
pop
jp
or
push
push
aam
and
cmp
dec
jbe
dec
pop
dec
pop
fcmovne
sub
push
sbb
into
sub
scas
cmp
mov
pop
inc
sub
fwait
loopne
jno
mov
out
mov
push
sub
rcll
mov
push
lahf
bound
mov
mov
into
push
push
mov
test
es
andl
inc
lahf
leave
xor
rcrl
sti
les
sbb
mov
dec
or
jnp
hlt
mov
scas
add
icebp
fisttps
fldl
sub
pop
ds
scas
mov
movsb
sar
push
mov
mov
sahf
jg
imul
imul
outsl
faddl
inc
call
cld
inc
xorl
jbe
scas
mov
jle
mov
out
and
mov
add
and
ja
in
sub
loope
xchg
or
sbb
push
sar
inc
inc
rcr
lret
dec
cmp
out
shlb
and
out
stos
outsb
sub
pop
mov
imul
push
sub
xor
mov
cli
jp
jae
imull
mov
add
sahf
daa
dec
jae
shll
or
push
jns
xchg
flds
dec
test
xor
xor
mov
gs
std
lods
imul
sbb
mov
cmpsb
xchg
mov
mov
mov
adc
cli
clc
mov
jno
inc
test
mov
dec
inc
ror
sub
mov
ljmp
cmpb
inc
jmp
dec
pop
sub
lret
lds
adc
cmpl
mov
push
sub
xchg
mov
aam
mov
out
subb
dec
shlb
das
inc
and
mov
mov
mov
out
and
pushf
jg
sub
aas
jmp
adc
push
insl
jnp
add
mov
mov
repz
xor
cs
pop
popf
sub
cli
outsb
gs
xchg
or
jae
fwait
push
push
loop
mov
rorb
inc
xor
bound
pop
in
cs
icebp
outsl
push
loop
push
adc
xchg
cwtl
rol
pop
sar
sbb
outsb
xor
fs
scas
mov
pop
outsb
ret
lock
aas
ficompl
test
sbb
adc
xor
mov
mov
mov
sub
mov
xor
shl
lret
or
lods
je
push
mov
sbb
dec
mov
xlat
sbb
int3
adc
in
insl
lret
mov
add
rcl
cmpl
jnp
imul
dec
sti
sub
daa
dec
pusha
test
sbb
xchg
inc
clc
inc
idivl
push
nop
jno
negb
popf
cmp
aaa
jmp
and
add
shll
xchg
lret
icebp
sbb
in
xchg
inc
rcrb
mov
nop
mov
push
jmp
sub
xchg
fnstenv
pop
sub
dec
pop
xchg
adc
and
pusha
es
pop
sub
imul
xchg
adc
aad
xchg
mov
jnp
dec
fisttps
fnstenv
in
cmp
or
jo
or
aaa
mov
nop
jnp
sbb
xchg
in
insl
jae
out
leave
push
ja
pop
ja
sbb
sub
pop
pop
ficompl
push
ljmp
ja
es
mov
ret
xlat
ficomps
adc
cmp
mov
ja
mov
addr16
jno
cmp
pop
fistl
mov
push
pop
inc
mov
pop
sbb
out
mov
scas
popf
mov
xlat
pusha
push
push
and
inc
cmpsl
jecxz
pusha
adc
pop
xchg
add
push
adc
xor
jbe
jle
xchg
add
iret
mov
pop
pushf
loop
sub
ljmp
adc
dec
xor
hlt
xor
cld
jns
jle
mov
or
test
pop
sti
movsb
dec
lods
cs
js
nop
pop
inc
mov
scas
pop
aam
call
or
jle
adc
jnp
push
cli
cmp
xor
add
jl
inc
mov
inc
arpl
inc
xchg
mov
notl
mov
outsl
xchg
add
inc
std
out
pop
dec
jl
sbb
pop
mov
sbb
fadds
loop
add
in
into
stc
inc
push
adc
mov
leave
ljmp
mov
or
pop
mov
rorl
arpl
dec
jmp
lods
sbb
scas
cmc
adc
push
add
xchg
inc
cld
cmp
inc
in
mov
fdivrs
jge
mov
mov
jp
movb
popf
pop
lret
adc
mov
inc
add
paddd
jnp
mov
dec
jo
shr
mov
hlt
leave
aam
push
jecxz
jp
adc
aaa
scas
cmpsb
enter
mov
mov
inc
sub
push
inc
mov
adc
lea
pop
scas
push
push
xchg
inc
mov
cmp
lock
cli
add
xchg
inc
xor
xchg
sub
mov
rolb
mov
xchg
test
fsubl
fwait
dec
sarl
fists
clc
nop
lods
sub
sub
cmc
and
push
loope
dec
adcl
scas
fwait
test
push
cwtl
lret
push
lahf
jb
gs
adc
sub
cmpl
in
mov
lock
popf
jmp
push
cmp
aas
leave
jnp
dec
and
stc
add
adc
mov
ret
mov
sahf
and
mov
in
mov
sahf
out
inc
je
call
call
push
xchg
mov
imull
outsb
jmp
push
mov
mov
dec
ja
xchg
cmp
lock
and
mov
movsb
xchg
adc
push
add
xor
sub
popf
lcall
push
sbb
nop
push
pop
mov
nop
in
pusha
out
xchg
inc
lret
stc
je
loop
push
mov
mov
sub
mov
or
xor
mov
loop
adc
mov
xor
xchg
dec
jnp
mov
out
cmp
cltd
fcomps
imul
and
daa
fstpl
pushf
adc
and
scas
enter
add
or
xchg
jg
notl
sti
repz
cmp
jb
xchg
inc
lret
mov
je
push
cmp
fs
les
sti
push
bound
mov
jge
int3
sub
adc
sub
jns
loope
ret
and
add
bswap
ds
popf
cli
subl
add
fimuls
ret
jmp
mov
sub
sbb
dec
and
adc
rcll
mov
dec
ss
ror
sub
ret
mov
call
pop
out
aad
inc
daa
and
push
stos
int3
enter
jno
mov
mov
hlt
cmp
lret
jbe
xor
or
adc
popa
movsl
inc
pop
lock
call
lds
scas
div
div
insl
cwtl
loopne
or
cwtl
fldenv
roll
ret
mov
dec
pop
inc
imul
das
cli
scas
popa
adc
jo
insl
mov
inc
xor
pop
hlt
sbb
or
mov
xchg
aaa
xchg
and
inc
mov
icebp
fsubl
sbb
xchg
test
xchg
daa
xor
mov
filds
mov
jno
jle
sub
fnstenv
jl
hlt
ds
mov
out
jg
aam
leave
jno
xchg
outsb
and
dec
out
mov
leave
test
or
jbe
ja
push
aaa
out
push
mov
popa
push
xlat
lds
pop
push
pop
scas
jecxz
mov
fidivrs
std
jnp
and
pop
and
shrb
aad
jno
call
aas
mov
jo
pusha
push
add
pop
pop
stc
pusha
imul
push
sti
cmp
cmp
dec
push
in
sub
fcomps
push
xchg
xchg
cltd
and
jge
add
ljmp
jns
cwtl
xlat
push
or
push
hlt
mov
shr
fcompl
adc
mov
sti
nop
jg
cmp
rorb
pop
jp
jne
mov
bound
fs
sbb
leave
dec
xchg
mov
add
icebp
into
cmp
js
addr16
cmp
pop
mov
dec
andl
cmc
or
packsswb
or
mov
xchg
add
movb
sbb
subb
in
pusha
in
inc
bound
xchg
jg
xchg
cmpsb
orb
sub
mov
push
lret
cmpb
push
inc
mov
inc
push
mov
call
sub
flds
dec
sbb
push
mov
in
stos
jecxz
enter
jmp
aaa
sub
dec
outsb
clc
rolb
pop
into
xor
pop
mov
sub
jg
inc
fsubl
mov
mov
mov
xor
xchg
lds
adc
call
lods
sub
jmp
dec
jbe
shrl
xor
adc
push
insb
add
repz
repz
mov
test
popf
inc
jbe
rolb
cmp
hlt
cmp
jle
and
and
lods
jae
int
jle
out
add
push
adc
insb
and
pop
cltd
aad
inc
cmpsb
mov
movsb
xchg
jae
push
in
std
push
xchg
loope
and
std
xor
xchg
cmp
sarb
aam
lret
sub
in
jecxz
sbb
ret
int
push
dec
sbb
mov
faddl
je
push
icebp
mov
mov
int
inc
dec
std
inc
icebp
push
lahf
lock
cwtl
and
cmpsl
imul
sub
mov
call
fwait
andb
cmp
adc
out
cmpsb
ret
lret
mov
dec
sbb
loope
movsb
xor
int3
xchg
dec
shlb
sbb
jae
mov
add
and
icebp
imull
xchg
or
mov
push
stos
or
das
dec
lock
inc
mov
pusha
test
xor
rorb
sbb
xchg
aad
fcoml
xchg
in
in
int3
mov
xchg
ja
sub
cmpl
loop
jecxz
push
jo
aas
hlt
hlt
icebp
add
imul
sahf
test
pop
std
mov
int
out
scas
dec
jmp
jnp
mov
inc
and
gs
imul
or
pop
mov
fdivp
insb
rcrl
push
pop
stos
in
or
sbb
pop
jo
fdivr
mov
outsl
stos
xor
ja
pop
jns
insl
cmpsb
clc
add
pop
sarl
lea
xor
xor
adc
in
rol
test
dec
fcoms
xchg
or
ret
addr16
shll
fisubrs
dec
inc
shrb
xor
push
in
mov
inc
inc
push
mov
pop
cmp
daa
cs
cmpsl
outsb
push
outsb
mov
insl
cmp
mov
jmp
fldcw
push
daa
sbb
hlt
sub
dec
decl
pop
inc
xlat
test
aas
mov
fsubrp
in
fwait
stc
push
push
mov
pop
jge
mov
mov
mov
xchg
test
push
lahf
jo
repz
cs
mov
pop
inc
aad
jg
movsb
or
pusha
movsb
pusha
scas
test
and
adc
xchg
adc
divl
sub
jno
mov
mov
sbb
mov
mov
xor
mov
ret
inc
push
call
in
test
jg
shld
mov
test
xchg
iret
fbstp
inc
call
and
mov
cmc
outsl
lds
shld
mov
test
xchg
iret
fbstp
inc
call
and
mov
mov
shld
sbb
iret
mov
call
and
mov
cmc
outsb
lds
or
add
and
inc
inc
jmp
clc
lods
pop
lret
inc
ljmp
add
add
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
mov
repnz
xorb
and
or
jge
insl
jb
jb
cmpb
ret
in
loop
repnz
inc
sbb
push
insb
bound
cmpb
ret
in
loop
repnz
add
cmovae
bound
cmp
xor
sbb
fsubr
iret
loop
dec
inc
repnz
ffreep
leave
cmpl
inc
dec
cmc
sbb
mov
repz
in
frstor
push
xchg
sub
sarl
mov
aaa
push
mov
lods
dec
rorl
mov
and
xchg
add
sub
cld
adcl
inc
xor
fcmovb
std
in
add
repnz
rcl
and
fimull
jb
js
jg
insl
push
icebp
arpl
add
repnz
push
cmp
xor
das
cmp
lea
and
test
mov
sbb
inc
std
cmp
sub
mov
cmp
pop
jae
fnstsw
mov
cld
shr
loop
repnz
add
sub
sbb
or
jl
insb
bound
idivb
int
mov
xchg
mov
dec
dec
push
jl
or
sub
cs
sub
rcl
rcl
cli
out
cmpsl
mov
mov
push
pop
jg
pop
jnp
pop
or
and
xor
insl
sbb
std
mov
hlt
or
in
loop
repnz
add
sub
sbb
or
jl
insb
bound
cmpb
ret
in
loop
repnz
add
sub
sbb
or
jl
insb
bound
cmpb
mov
fldcw
mov
sub
outsb
outsl
fildl
add
dec
imul
je
orl
add
sub
pop
and
fmull
add
enter
ja
ret
lcall
jg
push
xor
adc
fistps
jns
nop
mul
stos
sbb
stc
cmp
inc
adc
xor
inc
cmpsb
xchg
mov
inc
mov
push
imul
mov
or
cltd
mov
pop
push
sbb
jno
scas
idivb
jge
leave
jle
bound
sub
jg
hlt
cmpsb
in
lods
xor
pop
mov
in
or
fs
arpl
mov
lret
mov
add
xchg
sub
shlb
push
cltd
push
pop
cld
inc
jl
jae
push
push
je
mov
lods
cld
add
xchg
inc
incl
jecxz
mov
rorb
int
mov
mov
sub
dec
mov
mov
mov
add
ret
mov
xor
fists
adc
xor
ds
roll
aas
jl
sub
pop
jp
and
xor
insl
fmuls
dec
inc
bound
int3
jno
outsb
popf
and
clc
pop
mov
inc
xchg
std
fisubs
push
arpl
jae
sub
sub
pushf
test
jge
rcrl
add
je
xchg
push
jmp
dec
inc
movsb
cmp
mov
clc
push
mov
cwtl
mov
adc
in
mov
adc
testl
push
xchg
add
vaddsd
bound
scas
addl
jle
sub
fnstenv
cmp
ljmp
dec
movsb
jne
dec
in
and
dec
cmp
push
inc
xchg
xlat
repnz
xor
in
fstpl
flds
in
cld
repz
incb
fnstsw
je
insl
push
or
push
popa
cmp
xor
lods
scas
mov
in
jmp
mov
inc
xchg
xchg
xchg
outsb
pop
fstpt
mov
xchg
sub
nop
testl
dec
push
sub
in
or
xor
btcl
mov
sub
or
rcl
fmul
add
rolb
aas
push
test
js
sbb
jg
lret
lret
movsl
adcl
ja
loope
scas
push
sbb
ss
add
nop
mov
sbb
repnz
add
sub
jmp
adc
mov
lret
cli
ljmp
and
mov
ror
scas
fistl
movsb
adc
sahf
das
cmpsl
push
jecxz
push
sarb
lock
je
nop
fcoms
add
mov
les
dec
lods
sahf
loopne
out
hlt
adc
push
sub
jbe
dec
jle
jp
jae
push
stc
xor
mov
xchg
adc
and
jle
das
push
xchg
mov
mov
mov
ljmp
in
shl
cmc
jns
pop
test
xlat
add
fildll
adc
push
mov
call
test
cmpsl
ljmp
das
je
mov
sbb
lret
sub
fidivs
mov
loope
jno
dec
pop
mov
sti
mov
mov
rcrb
leave
push
xlat
rcrb
shlb
xchg
and
mov
shr
scas
jecxz
nop
xlat
push
dec
nop
nop
dec
sti
xor
in
daa
inc
sti
adc
pop
daa
or
cli
lret
insb
push
pop
and
sub
outsl
push
test
test
jge
shlb
fdivl
mov
fwait
insl
cmp
fstpl
test
out
fwait
xor
dec
xor
inc
movsl
cmp
mov
sbb
aad
out
jb
and
fsubp
popf
repz
sub
sbb
loop
arpl
addr16
icebp
adc
mov
lock
jp
data16
into
jl
lods
and
scas
or
pushf
das
bnd
ljmp
xchg
je
sbb
test
js
pop
pushl
imul
sbbb
ja
push
jp
fsub
cltd
pop
test
and
sbb
dec
lcall
push
or
xorb
rep
push
shll
mov
cld
pop
shrl
je
jbe
inc
sub
inc
sbb
or
cmove
xor
pop
out
hlt
popa
loope
xor
in
in
mov
clc
jne
nop
lcall
push
inc
mov
arpl
addr16
ja
daa
inc
mov
jp
fildll
push
pushf
addr16
xchg
iret
jb
test
fidivrl
push
jg
loope
cmpsl
mov
jne
xor
adc
mov
mov
adc
or
sar
adc
je
mov
clc
adc
cwtl
aas
loope
out
pop
inc
in
and
cld
and
clc
mov
and
roll
add
rcrb
sar
out
push
jae
xchg
loope
daa
xchg
int3
xor
sbb
add
push
inc
cld
dec
mov
sub
out
js
mov
pushf
fstp
inc
mov
dec
das
pop
sub
jmp
fbstp
in
aam
shll
sub
mov
xlat
dec
addb
add
mov
lahf
das
je
push
out
adc
xchg
push
jno
lods
les
test
out
cmp
fistpll
mov
insl
push
adc
std
jp
dec
mov
pop
pop
or
loopne
insl
cmp
das
jmp
bound
pop
sbb
sub
ss
mov
mov
jne
sbb
xchg
rorb
mov
lea
mov
dec
mov
fcompl
mov
mov
inc
subb
call
sahf
push
pop
lods
movsb
mov
sub
pushf
call
adc
push
mov
fwait
and
jg
inc
lcall
out
and
sub
out
mov
push
ret
mov
adc
in
mov
daa
push
jmp
call
rolb
jecxz
inc
lret
cld
arpl
xchg
mov
je
and
js
loope
xchg
ret
rcrb
jmp
je
sub
inc
out
pushw
movlps
fdiv
xor
jno
ljmp
mov
cmp
movsb
shlb
mov
push
bound
lcall
pop
push
xor
fucomip
xor
pop
push
stos
sub
out
mov
cmc
stc
dec
cltd
inc
jo
and
jle
jle
mov
lock
ret
fs
adc
mov
test
cmp
arpl
add
or
mov
mov
push
jb
ror
cmp
das
addr16
out
sub
and
in
and
scas
inc
icebp
or
in
mov
fiadds
dec
or
or
mov
pop
mov
rorl
fwait
sub
je
lock
jecxz
xchg
cli
lcall
add
test
mov
push
les
leave
jg
jbe
loop
test
mov
call
sbb
rcr
xor
arpl
rclb
lsl
sbb
mov
test
nop
mov
cwtl
pop
inc
pop
js
icebp
iret
test
bound
sub
cmp
mov
cli
ljmp
push
xor
pop
mov
pusha
daa
mov
pop
sbb
xchg
enter
inc
shlb
jb
mov
sbb
mov
enter
scas
push
scas
lret
call
mov
fmull
ror
or
test
shlb
adc
lcall
movsl
cmpb
daa
mov
ljmp
gs
and
shlb
adc
cltd
test
iret
xor
cmp
incl
add
test
jge
lds
outsl
add
xor
xchg
xchg
lock
aas
pushf
add
add
xor
cmp
xor
iret
jae
mov
jo
or
push
ret
inc
inc
out
aad
ss
leave
push
inc
push
outsb
in
mov
jae
cmpsb
mov
stos
into
cmpsl
jle
jo
inc
and
roll
pop
pushf
sti
xchg
jmp
jl
jne
lcall
aad
mov
in
mov
push
bound
add
adc
js
xchg
xchg
in
inc
jp
jmp
or
pop
das
push
or
outsl
xchg
xchg
gs
mov
lods
cld
leave
sbb
repz
cmp
inc
daa
repnz
xchg
xor
and
mov
sub
out
icebp
orb
nop
xchg
or
inc
pop
push
xor
in
xchg
pop
push
pop
iret
stc
lret
mov
inc
ljmp
testl
adc
in
pop
mov
ss
mov
adc
outsb
cmpb
lret
in
xor
ja
imul
mov
loop
dec
loope
fimull
jne
dec
and
dec
dec
popa
mov
mov
js
mov
cmp
cmpsl
push
jns
push
push
je
adc
leave
sbb
into
test
in
dec
jge
pop
je
add
xor
dec
mov
ljmp
inc
call
mov
fwait
mov
in
into
clc
aad
mov
sahf
ret
sbb
stos
or
mov
outsl
pop
insl
pop
testl
dec
cmc
aas
scas
js
addr16
lods
add
cld
test
into
and
add
sub
or
ljmp
ds
mov
cmpl
mov
mov
jno
dec
mov
mov
mov
dec
in
clc
fs
lret
adc
and
xor
xchg
dec
ss
aam
bound
jbe
ficoms
ss
in
and
in
fmul
mov
lods
dec
cmpsb
dec
int
sbb
out
inc
push
cli
push
push
lret
dec
mov
cmp
sub
insb
or
movsb
aad
loop
sub
adcl
mov
push
aas
fcoml
aam
nop
dec
pop
cmp
xlat
call
loope
pop
mov
call
ret
cs
xchg
fistl
add
in
xor
cmp
and
rcl
pusha
loop
jmp
imul
test
xor
jecxz
xor
mov
inc
xor
mov
mov
add
pop
mov
dec
cld
push
mov
mov
mov
rcr
push
cmpsl
inc
xchg
dec
jg
fadds
daa
icebp
test
je
adc
mov
ret
xchg
aas
rcrb
mov
out
clc
mov
bndldx
add
pop
add
ds
in
arpl
xor
ja
xchg
test
add
mov
and
fists
daa
sub
pop
mov
sahf
or
push
add
imul
inc
fs
xchg
mov
sbb
sbb
mov
pop
and
mov
or
adc
shrl
arpl
mov
add
popa
mov
shrl
dec
mov
out
adc
push
xchg
pop
jl
pop
aad
clc
adcl
jb
hlt
push
test
and
and
sahf
mov
dec
loopne
mov
dec
stc
testl
mov
and
das
sbb
bound
cmpsl
sub
pop
loop
push
adc
cmp
ds
into
inc
clc
add
jmp
sbb
aam
and
xor
push
mov
arpl
rcrl
cmp
sbb
dec
mov
push
pusha
inc
or
lods
mov
dec
icebp
nop
cld
pushf
and
and
push
dec
push
cli
stos
loop
cmp
fdivs
stos
xchg
movsb
stos
or
rcrb
dec
loopne
jo
mov
fldz
rcrl
test
mov
mov
das
repz
clc
and
or
jae
hlt
mov
cmp
or
out
aam
mov
sub
jmp
xchg
push
fneni(8087
pop
jne
iret
inc
mov
push
xchg
xor
cmp
push
xor
popa
add
imul
mov
std
jb
jae
shld
cli
dec
leave
repnz
lret
fisubrs
or
imul
test
fstps
xor
fstpt
or
aam
inc
repz
ja
nop
and
mov
push
mov
data16
pop
das
fisttpl
fsubrl
scas
adc
je
stos
mov
sub
pop
push
dec
add
std
sbb
lret
mov
and
lret
fstpl
int
adc
dec
cmp
mov
cmp
pop
arpl
mov
sub
mov
mov
lods
cmp
dec
ret
adc
rol
lea
cwtl
add
fsubrs
cltd
cmp
insb
ret
pushf
add
jbe
sbb
push
std
and
add
xor
jecxz,pt
mov
les
and
aam
cmp
je
mov
dec
sbbl
push
outsl
inc
fnsave
stos
insb
ret
pop
inc
sbbl
cmp
ds
fnstcw
add
movsb
mov
ss
int
fstps
stc
sahf
xchg
sbb
jbe
lds
loop
dec
lea
cmc
mov
fprem
imul
ror
mov
icebp
sbb
dec
jns
in
imul
sub
insb
movb
in
push
stos
or
cmpsl
nop
mov
fistpll
xchg
push
pop
clc
mov
adc
jb
into
je
fs
pop
mov
inc
in
fwait
dec
jle
xor
push
xor
cmpsl
xchg
mov
rolb
jp
cmp
mov
xorb
in
cld
sub
inc
mov
repz
add
xor
mov
shll
cmc
insl
movsl
cmp
inc
and
sbb
mov
xchg
xchg
mov
insb
movsl
fisubs
push
jl
stos
pop
mul
ret
repnz
subb
xchg
adc
fs
fdivrs
fisttps
cmp
jae
jne
jl
loop
mov
lods
or
sbb
adc
mov
lret
pop
repnz
lods
rorl
icebp
imul
divl
xor
enter
fmuls
add
test
xor
xchg
push
fsubrs
insb
push
imul
mov
lahf
mov
cmpsb
sbb
stos
call
scas
and
jp
ret
jne
inc
sub
mull
lds
sub
push
ds
cmpsb
test
adcb
leave
jbe
mov
hlt
or
push
ljmp
pop
imul
in
xchg
fidivs
iret
mov
fwait
push
mov
mov
cmp
aas
je
loope
inc
adc
outsb
sub
andb
cmpsl
shl
dec
mov
and
and
lret
lods
mov
dec
dec
imul
add
jp
cmp
cmpsl
aaa
into
xor
lret
mov
lds
data16
lahf
jno
lods
mov
std
fnsave
and
jge
icebp
aam
mov
inc
aaa
imul
push
push
mov
inc
ftst
test
in
cwtl
dec
lret
loope
stc
push
sub
lret
jg
pop
rcrl
sbb
push
xor
inc
scas
data16
mov
jge
fimuls
popa
and
pop
cmp
adc
sub
mov
add
sarb
dec
add
popf
jbe
ljmp
mov
mov
pusha
xchg
mov
stos
and
mov
outsb
into
sub
test
cmpsl
cmp
mov
jmp
or
add
mov
lods
orl
fcomi
jae
xchg
ret
scas
mov
jecxz
push
xchg
dec
pop
loop
incb
inc
loope
fsubrs
lds
nop
ja
fwait
loopne
push
rcrb
jne
mov
jecxz
sbb
xor
jnp
mov
pop
adc
push
push
mov
inc
sbb
cmp
enter
jge
push
push
mov
mov
dec
test
cli
xchg
sub
xor
stos
cmpsl
ljmp
testl
xchg
push
das
cli
mov
lods
fisubl
rcrl
ja
cmp
mov
jmp
sub
push
pop
inc
xor
jno
jmp
shll
cmpsl
cmp
mov
mov
mov
add
popa
je
popa
inc
ja
pop
sti
pop
and
pushf
mov
ja
push
subl
hlt
aaa
mov
push
pop
cltd
scas
shl
lds
or
xchg
movsl
inc
incl
jge
mov
xor
cli
cli
aaa
dec
pop
fistps
aad
xor
jecxz
cmpsb
enter
aas
adc
pop
xchg
or
outsb
jge
lahf
mov
shl
lret
outsb
xor
ja
mov
or
add
fsubl
sysenter
pop
mov
mov
stos
shll
xor
xor
jnp
arpl
js
addr16
add
and
je
pop
jb
xchg
js
mov
mov
mov
or
push
aas
movsb
inc
xor
arpl
dec
cs
mov
std
pop
sbb
cmp
rcr
loop
inc
int3
add
cmp
enter
pop
pushf
repnz
jle,pn
aad
cltd
and
mov
fdivs
mov
leave
jmp
arpl
pop
cmp
mov
pop
push
jb
out
lret
into
mov
sahf
test
adc
mov
jns
sub
in
sub
sub
lcall
pop
test
out
adc
add
and
pop
stos
ret
or
mov
repz
dec
pop
lock
mov
xor
aad
repnz
imul
fnsave
and
inc
pop
fsubl
popa
cmc
shll
imul
mov
pop
cwtl
test
dec
out
sub
out
es
xchg
sbbl
push
jmp
cmpsl
movsl
fbstp
mov
xor
cld
fsubr
int
cwtl
dec
loopne
mov
cmp
add
add
xor
push
mov
ret
xor
addr16
xlat
sti
loop
mov
test
rorl
stc
push
cmp
stos
xchg
test
sbb
cs
loopne
mov
push
mov
mov
adc
inc
dec
popa
ljmp
test
out
xchg
sub
nop
sbbl
pop
shlb
test
clc
xchg
xchg
rdmsr
dec
pop
gs
cmp
iret
sbb
lret
test
mov
cmp
jns
js
lahf
dec
push
xor
ja
neg
sbb
jae
add
xchg
xchg
bound
test
int3
ss
into
add
sarb
pop
ffree
xor
imul
sahf
notb
push
dec
pop
push
int
mov
xor
imul
scas
push
mov
xchg
xchg
aas
out
add
mov
sbb
lret
imul
subb
jb
cli
xchg
lods
sub
sub
and
jo
adc
jmp
ret
add
in
je
in
out
cmpsl
adc
notb
out
xchg
sub
adc
mov
sub
push
scas
mov
iret
ds
fs
ss
mov
jge
and
fxch
out
pushf
mov
aad
xchg
ficoms
xchg
xor
inc
xor
int
popa
out
call
push
scas
jge
push
sub
call
rcl
rcrl
adc
movsl
stos
idivb
nop
sub
stc
aad
nop
notl
icebp
adc
add
or
call
daa
jmp
fistpl
xor
push
xchg
lahf
and
push
aad
or
cld
inc
dec
xchg
nop
mov
mov
pop
es
adc
fs
sar
fcom
pop
ljmp
stc
push
and
dec
mov
je
dec
and
imul
fdiv
push
loope
cwtl
inc
sti
push
adc
jle
add
movsb
pop
xchg
in
fcmovb
stos
or
movsl
and
arpl
ja
imul
shll
jnp
xchg
adc
jae
js
mov
lea
mov
jge
int
cmp
mov
test
mov
inc
add
mov
adc
and
fs
jbe
inc
add
push
rorb
xchg
scas
ja
push
pop
cwtl
jbe
inc
cmp
notb
repz
adc
jecxz
and
jne
and
pop
jo
pop
xchg
jns
std
xchg
inc
pop
mov
imul
sub
fsubrs
jge
inc
stc
in
movsl
test
sbb
call
sub
scas
stos
jle
fsubrl
sub
mov
out
test
in
xchg
inc
sti
sbb
xchg
inc
rclb
sub
or
inc
test
pop
rcll
stc
cltd
pop
shrl
cwtl
inc
inc
and
adc
xchg
mov
dec
loopne
mov
in
adc
sbb
sbb
pop
out
shrb
cld
shr
loop
repnz
add
sub
sbb
or
jl
insb
bound
cmpb
ret
in
loop
repnz
add
sub
sbb
or
jl
insb
bound
cmpb
ret
in
loop
repnz
add
sub
sbb
or
jl
insb
bound
cmpl
ret
in
loop
repnz
cmp
xchg
hlt
ficoml
sbb
cld
mov
ret
sbb
dec
mov
cmpsb
les
jb
push
xchg
daa
test
mov
movsb
adc
bnd
rclb
add
xor
and
test
jb
dec
in
xchg
or
xor
les
pop
mov
cli
sbb
test
xchg
and
push
ret
jo
jbe
cmpsb
fs
xchg
adc
xor
daa
push
out
sti
add
dec
cli
sarl
std
xchg
pop
pop
loope
xor
sub
pop
jge
insl
push
popf
cmp
adc
adc
pop
add
push
stos
je
in
pushf
dec
jne
inc
jb
leave
xchg
arpl
bound
inc
sbb
sti
aad
loop
repnz
xor
adc
inc
es
shl
xchg
in
sbb
aaa
xchg
shll
jnp
xchg
xchg
adc
xchg
and
addr16
test
in
rcrl
mov
cld
inc
mov
fstl
cmc
xchg
in
adc
ja
out
mov
outsb
inc
shlb
rclb
inc
mov
sbbb
inc
cli
outsb
hlt
push
lcall
loop
popf
xor
jno
daa
testl
movsb
out
xor
gs
movsb
int3
mov
mov
mov
pop
jmp
mov
xchg
adc
xor
addr16
es
ja
add
and
mov
andb
les
inc
in
xchg
and
push
loop
bnd
rclb
add
xor
and
aam
les
inc
in
xchg
and
push
loop
movsb
fdivrl
imul
sub
cmp
add
pop
mov
pop
pop
mov
test
in
mov
push
pushf
push
cmpl
je
enter
scas
fwait
hlt
jecxz
dec
xchg
add
stos
int3
stos
cmp
jb
adc
bound
mov
sbb
xchg
rep
cmp
push
xlat
adc
ds
pop
cmpsl
dec
adc
imul
shll
inc
lret
mov
xlat
shl
fdiv
push
pop
addr16
mov
xchg
lret
inc
cmp
jne
push
das
pop
mov
dec
push
lret
iret
cli
cmpsl
imul
fwait
pop
jnp
out
sbb
lds
mov
push
mov
jp
mov
mov
fwait
cmp
dec
in
mov
les
outsl
divl
cwtl
lret
sub
shrb
pushw
out
shrl
cmp
add
cmpsl
stos
aas
pushf
pop
jnp
rcrl
jnp
in
or
push
sbb
xorb
scas
push
test
push
enter
leave
arpl
daa
fisubrs
aam
adc
ja
enter
pop
stc
jge
jmp
inc
and
cld
adc
adc
or
rorl
out
mov
and
scas
rcr
and
insw
mov
sub
mov
cli
lods
movsl
cmc
rclb
daa
sbb
test
mov
popa
adc
testb
lods
loop
adc
jecxz
sub
scas
mov
test
movntq
out
outsl
adcb
rorl
fwait
mov
cmp
fwait
push
cmpl
push
push
mov
and
inc
inc
cwtl
sbbb
cmp
sbb
sahf
call
mov
sub
dec
or
mov
or
mov
cld
jp
inc
divl
sbbl
adcl
xchg
in
pop
push
test
mov
lret
popf
mov
adc
nop
xor
mov
xchg
fcmovnu
movsl
scas
mov
pop
out
push
mov
dec
or
cmpsl
ss
cmp
xor
mov
roll
mov
dec
mov
test
push
subb
lods
xor
outsl
inc
jnp
mov
je
lret
loop
or
shlb
cmp
push
mov
or
in
shl
push
cmpsl
or
jns
pop
add
les
mov
sbb
mov
ficoms
call
imul
lods
pop
add
lret
ficoms
lock
imul
sub
sbb
popf
mov
xchg
packuswb
mov
xorb
inc
popl
loopne
repz
loop
inc
ret
sub
jb
or
divb
xchg
xor
test
scas
hlt
imulb
stos
test
lret
movsl
cs
fmull
mov
fstl
lret
sahf
arpl
xchg
dec
sti
jecxz
out
jnp
daa
jb
mov
jl
stc
push
jg
in
popa
mov
into
les
jne
test
jne
jno
xchg
sbbl
hlt
jmp
imul
adc
ja
or
jp
gs
adc
sub
xchg
in
sarb
es
xor
cmp
addr16
sbb
andl
dec
mov
in
jge
jmp
mov
xchg
pop
outsb
fisubrl
cmpsl
sti
jnp
leave
xchg
gs
dec
and
cwtl
iret
cmpsb
lret
insl
push
push
inc
push
inc
jge
mov
shlb
dec
adc
push
mov
push
test
int
test
shrl
mov
out
and
xor
leave
in
dec
lods
sbb
mov
xchg
shlb
aam
cltd
outsl
addl
jae
das
cmp
or
fidivs
mov
jmp
jecxz
pop
xor
shll
sub
js
call
and
inc
cmp
add
or
js
inc
mov
jmp
imul
lea
pushf
mov
aas
aad
adc
cmpsl
adc
jbe
xchg
in
xchg
aas
negb
dec
cmp
dec
and
fistl
mov
jb
dec
add
leave
cmp
push
fstpl
imul
push
popf
sbb
outsl
xor
cs
mov
setnp
jmp
les
add
and
jmp
pop
jno
daa
pushl
cwtl
jnp
push
inc
cmp
imul
push
out
es
mov
roll
inc
movsb
dec
test
xchg
mov
add
jl
push
xchg
jb
shl
push
movsb
hlt
add
lock
add
add
fdivrs
xchg
stos
ds
mov
in
scas
xchg
inc
inc
subl
mov
mov
sub
mov
mov
xor
xchg
add
arpl
rorb
xor
rcll
mov
enter
cmc
xchg
lock
int
cli
pop
dec
mov
fcoms
sub
and
adc
repnz
ficomps
enter
int3
test
gs
cs
rorb
xchg
sbb
sub
push
and
arpl
lahf
or
or
mov
add
mov
sbb
push
push
fbstp
mov
popf
imul
lret
cs
ja
outsl
popf
push
loop
push
xor
cld
loop
adc
dec
test
rorb
mov
sub
jnp
dec
jb
fisubrl
sbbb
push
loope
push
mov
ds
outsl
loopew
in
jg
jns
xor
sub
or
or
push
das
add
in
xlat
push
pusha
mov
mov
mov
hlt
dec
cltd
cmp
sbb
add
fimull
jnp
dec
jns
movsb
mov
mov
fists
fwait
xor
dec
pop
iret
xor
dec
loopne
fildll
jg
js
cmpsb
sbb
dec
stc
das
add
xor
jns
dec
add
xor
and
lahf
pop
mov
lret
xchg
enter
add
sbb
add
xchg
dec
jne
jg
aad
dec
mov
out
test
cmp
shlb
pusha
jne
cwtl
adc
lcall
inc
add
jb
mov
arpl
dec
or
dec
pop
and
test
mov
jno
jle
getsec
popa
jp
aaa
or
or
les
xor
dec
pop
insb
push
js
loop
cmp
push
and
and
stos
arpl
xor
popa
inc
cmp
jl
mov
adc
sub
xor
push
sbb
js
scas
dec
jno
ljmp
idivb
hlt
ret
add
jae
scas
push
push
inc
scas
mov
sti
lods
inc
repnz
adc
mov
add
pop
inc
jmp
xchg
mov
icebp
fwait
pop
pop
and
push
xor
xlat
das
loop
iret
data16
cmpsb
retw
test
add
mov
daa
adc
andb
cmp
loope
inc
cmpsb
mov
cmp
cld
lret
clc
ja
mov
inc
daa
repz
ss
mov
sub
lea
lea
in
test
jmp
sub
add
jecxz
mul
add
test
sbb
sbb
sub
jb
pop
or
fdiv
popf
and
sub
movsl
leave
sbb
inc
das
and
int
les
loopne
iret
dec
lea
xchg
xor
push
shll
xchg
js
leave
scas
stos
ds
aaa
mov
inc
ds
mov
aad
lock
lock
xchg
push
mov
pop
adc
es
or
aam
push
xchg
test
jnp
jl
add
cmc
xchg
cli
jecxz
or
jo
adc
dec
cmp
aad
in
pop
icebp
cmp
jecxz
push
adc
sub
mov
or
jae
adc
adcb
cmpb
iret
sbb
shrb
lahf
mov
scas
xchg
cmp
jbe
add
icebp
fildl
xor
cmp
movsl
mov
out
repnz
dec
xor
lret
inc
sbb
fistps
sub
xchg
out
cmp
and
add
lea
jbe
test
popa
jl
adc
and
xor
dec
out
int
pop
stc
sarb
cmp
in
or
inc
cli
jecxz
test
idivb
es
lds
jne
inc
mov
jae
jecxz
mull
dec
test
test
repnz
stos
cmp
das
aad
rcll
mov
jg
sar
xlat
xlat
adc
add
mov
push
mov
or
cli
rolb
dec
mov
scas
pushf
dec
jle
jge
idivl
or
dec
cld
sub
cmp
fsub
test
test
cli
mov
out
fwait
popf
ficomps
sub
jno
mov
xchg
xlat
mov
test
movsb
mov
push
repnz
mov
xlat
mov
mov
cmp
cmpl
sbb
jg
add
insl
out
cmp
inc
cli
add
stos
xor
test
int3
mov
pop
mov
mov
shll
scas
ds
mov
sbbb
pop
jg
jne,pn
pop
scas
and
mov
mov
sti
and
ror
push
aaa
and
sub
push
rcrl
and
in
mov
enter
push
fcomip
out
mov
xchg
push
mov
mov
cmp
test
lds
call
fidivrl
fiaddl
add
mov
nop
flds
cmp
leave
scas
cli
inc
sub
inc
pop
lcall
mov
pop
fsubl
jne
dec
out
add
pop
sub
adc
cmp
or
cmp
adc
pop
fwait
das
mov
sub
aam
push
inc
push
and
add
in
daa
idiv
mov
test
sbb
pop
mov
cmpsl
xchg
sbb
jle
fstpl
pop
push
jl
push
lret
adc
cmp
shlb
sbb
sarb
lret
pop
sbb
jb
and
jns
mov
mov
scas
mov
imul
insb
out
and
jl
mov
inc
fstpt
iret
xor
shlb
sub
cwtl
mov
scas
sub
inc
add
sub
or
aam
sub
or
aad
pop
xor
cltd
mov
jbe
rcrl
inc
push
xor
in
mov
xchg
sbb
push
ljmp
ja
or
lods
std
cmpsl
pop
push
mov
daa
insl
in
mov
xchg
movntps
fcmovnu
lds
int3
les
sti
stc
inc
xchg
test
jl
mov
dec
adc
ljmp
aad
jno
sub
rcrb
lret
out
inc
in
stc
clc
add
push
nop
mov
add
cmpsl
in
cmp
mov
test
into
dec
jmp
add
xchg
push
mov
shll
cli
add
mov
jns
pop
mov
js
hlt
push
cli
fwait
mov
cmp
test
aam
lcall
iret
mov
add
mov
cld
sub
xor
jb
xchg
jge
mov
pushf
push
and
leave
out
jge
enter
out
test
mov
push
push
or
mov
inc
std
dec
sbb
jne
in
xchg
mov
clc
std
xor
pop
fidivl
lret
dec
cmp
adc
je
or
push
mov
shlb
push
test
pushf
mov
fildl
cld
sub
ss
dec
inc
gs
mov
push
add
inc
movsl
getsec
jle
or
out
div
arpl
sbb
scas
lock
adc
inc
je
fsubs
aaa
in
cmp
shlb
fbstp
jno
push
andb
mov
push
ja
mov
cld
fsub
xchg
cltd
data16
mov
aad
scas
test
mov
mov
mov
jmp
dec
sbb
aas
in
lock
inc
xchg
add
mov
jnp
lods
add
dec
in
and
sbb
push
mov
sbb
daa
cmp
mov
push
sub
daa
les
cmpsl
mov
inc
jecxz
or
mov
in
pop
mov
sar
xchg
subl
popf
cmpsb
push
les
dec
mov
hlt
mov
push
dec
sahf
xor
loope
ja
xchg
sbb
movsb
sub
adc
dec
ljmp
inc
pop
pop
arpl
and
test
loope
and
or
mov
leave
loop
mov
mov
and
xchg
mov
or
jecxz
mov
cs
hlt
mov
and
sarl
movsb
push
lea
mov
faddp
and
aaa
icebp
lret
sub
aaa
push
mov
das
clc
jne
pop
stos
shl
rcll
or
ljmp
or
enter
and
lret
xor
daa
or
lcall
lods
test
dec
std
pop
inc
clc
xor
rclb
or
bound
dec
add
imul
cmc
hlt
loopne
faddl
lret
push
pusha
sub
in
pusha
xlat
dec
mov
imul
ret
and
out
cmp
mov
xor
pop
lock
xchg
out
fs
pop
fcmovnb
out
ds
and
lcall
loope
and
pop
rclb
cmp
jno
lcall
push
pop
repz
lcall
xor
mov
inc
mov
les
or
pop
shll
inc
inc
frstor
icebp
push
and
push
and
pop
inc
les
jbe
sbb
pop
inc
insb
sbb
cmp
fdivp
xorb
dec
icebp
sub
pop
mov
mulb
or
decl
jno
pop
mov
pop
pop
push
sbb
cmp
mov
fwait
push
fsubs
outsb
push
in
por
shlb
data16
test
hlt
fldenv
rolb
addr16
mov
sub
outsb
ret
sti
ficoms
and
fstl
add
sub
push
shr
pop
jp
or
cmp
dec
fmul
xchg
jns
inc
aas
test
lret
sub
push
adc
pop
mov
mov
adc
daa
xchg
xlat
mov
psubsb
and
jb
cli
xchg
jmp
pop
jo
mov
sub
nop
and
ja
and
and
dec
or
push
inc
fildll
das
inc
ja
mov
fidivl
ret
and
adc
cli
ds
aaa
and
loope
scas
push
jecxz
scas
test
xor
loope
popf
lods
push
int
xlat
jge
mov
jge
add
sub
sbb
cmp
push
sbb
mov
adc
fdivrp
pop
xchg
mov
inc
pop
sbb
shl
lods
pop
std
sbb
bound
ret
add
push
sub
movb
push
jg
outsb
sub
inc
ljmp
ret
inc
dec
pop
ret
std
cmp
test
mov
movsl
and
mov
mov
stos
fwait
rol
xchg
or
jno
dec
fs
jb
sub
adc
jno
stc
inc
sub
jb
xchg
insb
sub
test
aad
in
into
cmpsl
fcompl
inc
and
xchg
insl
xor
or
or
movsl
inc
loop
mov
les
pop
stos
dec
inc
mov
xchg
stc
push
dec
ror
sub
xorl
movsl
mov
push
bound
cli
lcall
stos
aas
push
ret
ror
mov
dec
insl
mov
xchg
insl
es
cmp
xor
stc
lock
jge
xchg
pop
fidivrl
jo
or
lock
or
int
sbb
lret
je
icebp
or
loop
shrb
testl
dec
push
pmullw
mov
loope
outsl
mov
test
xchg
int3
jmp
arpl
lret
popa
out
addr16
inc
sbb
adc
aaa
lods
call
lahf
and
test
pop
cld
and
inc
push
mov
imul
popa
test
sub
cmpsb
cwtl
hlt
push
nop/reserved
fwait
out
shll
js
clc
push
mov
cld
test
sbb
ds
fsubr
repz
and
frstor
dec
xchg
or
pop
jnp
cmc
clc
aad
movsl
fsubrl
bound
inc
dec
mov
jp
aaa
mov
cmp
cwtl
rol
dec
mov
out
jno
mov
push
mov
int3
call
or
xchg
test
scas
cmpsb
addr16
lods
adc
jge
add
add
inc
in
jo
mov
fstpt
pavgb
outsl
aad
adc
lds
add
mov
cld
outsl
fsubs
cmpsb
cmc
ret
lret
xchg
lahf
or
xlat
sbb
jle
push
mov
jecxz
pop
xor
hlt
mov
loop
aam
imul
jmp
add
push
sub
sub
lret
or
dec
loopne
xor
inc
mov
push
jae
adc
cld
sbb
cmc
jge
fbld
cmpsb
add
ret
jae
add
inc
xor
cmc
loop
test
and
ss
or
loope
sub
push
jb
ds
push
add
call
mov
insb
mov
add
xchg
mov
push
add
clc
pop
clc
js
xchg
ret
adc
mov
outsl
loop
lcall
stos
jp
pop
xor
enter
jne
inc
xchg
mov
xchg
loope
bound
in
aam
andb
sahf
test
aaa
stos
inc
mov
or
cmpsl
shlb
pop
mov
sbb
or
jb
mov
fdivrs
xor
sub
mov
adc
or
rcll
mov
outsl
rolb
inc
xor
into
inc
arpl
dec
fimuls
cmpsl
aaa
and
daa
sub
cld
in
mov
test
arpl
push
mov
jne
push
dec
jge
push
xor
std
add
scas
xchg
sbb
dec
pop
mov
push
cmp
imul
lcall
push
test
pop
leave
pop
inc
hlt
adc
into
xchg
adc
fbld
addb
js
add
pop
mov
mov
mov
push
int3
je
pop
or
jno
paddq
pop
vpmaxsw
sbb
fwait
adcl
mov
sbb
lret
out
leave
pushf
pop
pop
fucomip
dec
scas
sub
cmp
xlat
addr16
out
sti
dec
xchg
push
stos
jno
subl
addb
push
fwait
or
pop
mov
lret
adc
insl
push
add
jno
sub
test
orb
cmc
filds
sbb
xchg
rcll
lods
or
pop
cmp
fsubr
fisubl
addr16
in
imul
aam
push
out
mov
xchg
push
sti
not
fcomip
loope
movsb
xor
inc
movsl
mov
arpl
call
test
data16
fs
fldt
in
mov
push
dec
ja
xlat
pop
pushf
loop
adc
orl
cmpsb
push
push
mov
xor
lret
pop
add
popf
or
andb
ret
test
rolb
lahf
mulb
inc
dec
pop
xchg
cwtl
sarl
rcl
jl
pop
inc
mov
and
lret
jg
mov
shll
cltd
sbb
out
pop
testb
mov
jo
or
inc
fsub
aas
adc
jecxz
jmp
pop
xorb
in
jmp
stc
mov
push
jne
lcall
mov
idivl
sbb
inc
int3
shr
sti
outsb
out
test
cmc
or
mov
fxtract
sti
cwtl
in
scas
popf
cmp
fcmovu
pop
push
jge
pop
dec
push
and
cmp
ficompl
push
adc
or
inc
js
stos
sub
cld
rcll
std
sub
scas
leave
fwait
sub
loope
loope
pop
sub
and
dec
push
fs
js
cmp
cmpl
and
or
jno
test
sub
inc
jne
imul
pop
cmp
xchg
lds
pop
mov
add
das
ljmp
lret
lods
add
das
arpl
dec
stos
imul
cld
gs
sbb
fdivrs
push
pop
sahf
pop
dec
xor
sub
xor
ljmp
repz
leave
fcoml
xchg
xchg
pop
pop
in
and
xchg
dec
push
mov
sbb
sub
inc
or
adc
xor
inc
in
cwtl
cmp
cmpsl
add
aaa
int3
lcall
dec
loopne
enter
out
leave
out
xchg
pushf
push
leave
repnz
test
cltd
inc
cmp
sti
adc
imul
js
adc
add
xor
and
aam
les
inc
in
xchg
and
push
loop
bnd
rclb
add
xor
and
aam
les
inc
in
xchg
and
push
out
cld
fisubl
mov
and
jbe
inc
loopne
xchg
es
xor
push
push
xchg
adc
adc
xor
movsb
push
aam
cmp
pop
inc
in
jecxz
or
dec
jp
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
xor
pop
ljmp
dec
or
add
or
add
add
add
inc
add
add
add
add
add
add
add
add
jbe
xchg
add
flds
sbb
dec
add
add
pop
add
add
add
xlat
add
add
jbe
mov
mov
rolb
mov
push
add
mov
popa
add
add
add
mov
jbe
xchg
push
add
add
push
rolb
add
ljmp
add
cmpsb
add
add
add
add
popf
add
add
add
add
xchg
add
dec
add
nop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
push
add
add
add
dec
add
add
add
dec
add
aaa
add
add
add
add
scas
add
add
add
popa
add
add
pop
add
add
add
add
add
add
add
mov
cmp
test
add
add
add
loopne
cmp
add
add
add
add
add
add
popf
add
mov
pop
add
add
add
add
sbb
add
add
inc
add
add
push
add
add
add
add
add
jbe
add
sbb
add
add
add
add
add
add
dec
add
add
add
add
mov
add
add
add
add
flds
dec
add
add
mov
cmp
flds
dec
add
add
add
insl
add
add
add
pop
add
add
add
push
add
add
rolb
push
add
add
add
add
add
add
dec
add
add
add
add
add
add
or
add
add
add
add
add
add
add
mov
pop
add
arpl
cmp
pusha
add
add
add
add
add
add
add
addb
add
inc
add
dec
add
add
add
add
add
addl
add
add
hlt
add
add
add
add
add
add
add
add
add
in
dec
add
add
rolb
aad
mov
sahf
add
add
add
inc
add
pop
add
add
add
add
add
adc
xchg
add
add
add
add
add
add
rolb
test
add
add
add
add
sbb
push
add
add
add
push
add
add
add
add
add
or
add
add
jge
inc
add
pop
add
add
add
add
add
add
mov
icebp
add
pusha
add
add
add
insb
add
add
add
add
dec
add
in
add
xchg
add
add
add
add
stos
add
pop
add
add
add
add
add
add
addb
add
add
add
add
mov
add
insb
ljmp
je
rorb
cmp
rolb
vunpckhps
jo
adc
jne
fs
dec
fisttpl
sahf
fadd
and
cld
mov
cmc
idivb
notl
arpl
bnd
cmp
inc
cmp
adc
mov
jl
and
andnps
jge
lods
into
dec
inc
lcall
dec
xor
gs
pop
clc
push
jae
and
xchg
cli
dec
mov
mov
scas
sbb
loopne
ja
add
stos
or
vpunpcklqdq
or
xchg
jmp
dec
pop
jae
shll
addb
push
xchg
mov
dec
ja
or
int3
movsb
rolb
push
test
xchg
rcr
cmp
aaa
inc
mov
fbld
data16
outsb
ret
xchg
insl
insl
icebp
in
mov
jle
jnp
jbe
inc
mov
data16
inc
xor
sbb
js
fwait
pop
mov
add
scas
xchg
mov
std
push
sub
add
bound
aam
loopne
mov
inc
pop
iret
mov
clc
out
mov
or
ret
fdivs
add
or
loopne
mov
mov
add
cmp
iret
das
jmp
aad
and
test
pop
jp
jle
jg
mov
adc
imul
add
clc
push
into
mov
jp
mov
call
sub
movsb
stc
bound
pop
jae
push
adc
mov
dec
sbb
shrb
jl
ret
push
mov
jl
and
out
cld
and
push
fcmovb
pop
mov
insl
cmp
fsub
fdivrl
test
xchg
sub
repz
jno
aad
repz
adc
outsl
sarb
or
loop
mov
stos
dec
xchg
aam
cmp
call
mov
js
pop
pop
xor
test
dec
cli
popa
int
out
mov
ja
mov
jb
and
and
pop
inc
inc
daa
mov
enter
lea
mull
std
mov
daa
int
into
das
jmp
ja
and
leave
sub
mov
aaa
cmp
insl
les
xor
in
or
ljmp
adc
das
imul
cltd
cmpsl
ds
ror
pop
mov
test
lret
dec
xchg
sbb
pop
aaa
push
pop
faddl
std
arpl
xchg
pop
bnd
inc
sbb
and
dec
and
xchg
xor
in
cmp
xor
and
mov
insb
imul
test
data16
cmpsb
add
cli
add
jbe
sbb
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
