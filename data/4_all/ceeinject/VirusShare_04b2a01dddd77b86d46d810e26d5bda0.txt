call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
mov
push
sahf
jbe
in
pop
sub
call
inc
enter
cmp
push
rcrl
test
mov
add
push
fadds
test
mov
jbe
sbb
push
leave
pop
fcmovne
rcrb
add
pop
test
mov
enter
or
cmp
mov
adc
pop
int3
lods
fcompl
in
loopne
sbb
pop
lds
dec
pop
mov
leave
or
hlt
movsb
xor
push
daa
or
dec
jge
jge
push
in
cmpsl
cmp
inc
movsl
imul
lods
cwtl
test
popa
mov
inc
hlt
loope
mov
xchg
sarl
mov
pop
ds
icebp
data16
pop
and
sahf
leave
fcmovnu
sub
mov
popa
xchg
shl
sbb
mov
add
push
aam
xlat
mov
out
xchg
lret
xchg
add
xor
and
push
jae
outsb
mov
sbbl
loope
enter
sub
cmp
or
jbe
push
fsubs
jl
pusha
addb
push
cmp
pop
lods
test
jmp
in
inc
std
outsb
lcall
sub
leave
pop
mov
add
or
inc
mov
inc
xchg
add
and
lock
les
dec
hlt
cmp
pop
shrl
cwtl
add
jno
popa
enter
sub
sbb
dec
rcrl
test
mov
add
jno
popa
enter
sub
fcoms
es
cli
sub
cmpsl
dec
dec
jmp
mov
jne
sbb
adc
test
cmp
ret
dec
dec
push
jo
test
ret
fldt
jecxz
stc
dec
sbb
popa
jmp
lods
cmp
out
ljmp
lds
gs
bound
xlat
insl
ja
sbb
jne
daa
xchg
sbb
push
push
xor
dec
leave
pusha
out
int
push
int3
xor
nop
and
dec
roll
xchg
lods
and
into
std
inc
rol
mov
orl
xchg
jo
test
ljmp
push
adc
pop
aad
aam
test
lcall
xchg
push
in
mov
mov
mov
pushf
jmp
xchg
push
testl
push
pop
pop
xchg
test
inc
jp
jg
pop
in
and
loope
cmp
ret
and
sub
pop
pop
int
popf
leave
lds
rolb
pop
imul
fxch
cmp
cs
popa
in
subl
and
ret
bound
jae
movsb
push
push
jb
lods
mov
or
jno
mov
cwtl
xor
mov
psubb
in
pop
outsb
repz
pop
loopne
push
push
or
mov
lret
das
dec
cmc
add
mov
sti
mov
or
imul
cltd
cmp
idivl
add
loope
jle
push
mov
aam
cmp
mov
in
es
pop
jl
xor
mov
dec
pop
fcompl
cltd
arpl
gs
and
fwait
mov
mov
sbb
in
clc
lds
jo
lret
repnz
scas
add
mov
loope
pop
dec
out
or
in
aaa
or
pop
mov
fs
cmp
cmp
xor
lcall
aas
push
pop
fsubl
mov
fs
outsl
fmul
adc
mov
test
fsubs
lds
mov
call
rclb
inc
cmpsb
sbb
and
mov
pop
mov
das
inc
jbe
jbe
mov
mov
ja
push
ljmp
sbb
pop
rcll
rcll
out
jl
inc
dec
cmp
xlat
icebp
popa
out
push
add
add
cs
cmp
xchg
stos
enter
test
fildll
mov
pop
mov
mov
push
pushf
add
xchg
ret
jo
mov
jo
mov
inc
cmc
movsl
into
jl
xchg
popf
cli
rcll
pop
adc
sub
popa
sti
shlb
stos
dec
imul
jg
and
hlt
jb
adc
int3
jne
push
pop
jecxz
filds
test
in
xchg
je
stos
adc
mov
sti
ljmp
sbb
pop
jns
mov
mov
insl
add
or
jl
dec
mov
imul
bound
xor
adc
push
pop
mov
inc
loope
daa
notl
jno
mov
mov
push
cmp
jmp
gs
mov
cwtl
call
out
popa
rcrl
aaa
push
pop
loope
push
sbb
dec
adc
imul
ret
push
movsl
sbb
mov
and
mov
dec
mov
repz
sub
mov
gs
mov
out
cmp
dec
fadds
push
popf
and
cmp
adc
inc
les
test
pushf
ret
jmp
jns
repz
push
or
push
testl
cmpsl
es
mov
sbb
imul
std
orl
test
cmpsl
int
xchg
lods
movsb
adc
xor
in
lock
push
cmp
jne
jb
push
cmpsl
push
or
sbb
data16
mov
push
fs
insl
inc
jle
mov
adc
jae
and
fisubl
je
jne
out
icebp
jg
nop
adc
dec
jg
cmpl
in
push
xor
notb
jle
or
mov
sbb
mov
sti
ss
std
in
ss
add
pop
push
in
scas
aam
ficoms
jg
jle
ljmp
fwait
in
push
int3
cmc
ds
add
sub
or
and
push
sbb
mov
mov
or
pop
pop
loope
mov
mov
xor
ja
push
into
out
push
push
insl
mov
sub
subb
adc
push
test
jno
mov
pusha
mov
dec
aaa
test
lret
mov
pop
jmp
cmp
mov
je
loope
aaa
ljmp
iret
fdivrp
insl
pop
jo
dec
out
push
push
bswap
xchg
cwtl
mov
movsb
xchg
push
sbb
jmp
aas
push
cltd
xchg
mov
dec
add
xor
adc
iret
movsb
inc
ret
pop
movsb
and
flds
cmp
dec
sbb
mov
mov
mov
out
inc
mov
mov
mov
mov
push
in
pop
mov
mov
mov
push
lods
add
sub
jbe
pop
icebp
adcb
pop
int
cmc
jmp
add
in
out
rcr
outsb
cmc
popf
jecxz
push
xor
stc
aad
lods
or
fidivrl
and
jae
divb
fwait
xchg
ljmp
loop
das
xchg
add
xchg
mov
xor
cmpl
iret
negl
and
cmp
mov
nop
cmc
xlat
imul
pushf
jle
ficoml
nop
out
fistps
mov
frstor
out
pop
push
pop
out
jmp
dec
iret
adc
int3
jne
cmp
sub
mov
dec
or
or
mov
adc
pushf
mov
jge
mov
cmp
mov
cld
cmc
push
ljmp
in
stos
call
aad
aam
pop
mov
push
sbb
jle
push
nop
outsb
cwtl
and
mov
jae
mov
dec
cmpsl
sub
dec
nop
ret
out
adc
inc
inc
cwtl
dec
js
sbb
fst
and
dec
cmp
sahf
jbe
andb
xor
pop
cmpl
into
mov
inc
arpl
jno
mov
outsl
adcl
sbb
gs
out
fnsave
std
sub
out
xchg
jb
xchg
dec
lcall
push
sbb
sbb
xchg
jae
leave
xor
push
add
jl
jp
sbb
add
add
sub
pop
sub
daa
jmp
xchg
push
mov
fidivl
repz
test
push
dec
data16
addb
mov
jo
jo
jl
ss
xor
and
or
mov
mov
test
fcoms
and
sbb
lds
push
fwait
xlat
out
sahf
dec
fwait
adc
stos
lret
mov
ss
bound
mov
stc
inc
shl
cs
call
add
xor
jge
js
aas
jno
or
cmc
je
fidivrl
jl
insb
push
cmpsl
sbb
xchg
mov
pop
cmpb
dec
pop
or
and
push
shlb
mov
aam
push
fldcw
and
xlat
jns
fbstp
repnz
sbb
jne
loope
mov
mov
ret
xor
pusha
sbb
mov
cld
out
popf
dec
jns
mov
mov
mov
and
push
andl
sbb
jecxz
push
dec
cs
add
call
xor
sbb
sub
enter
aaa
push
inc
push
icebp
lahf
pusha
ret
mov
out
outsl
out
jae
pushf
mov
or
mov
ret
stos
cld
repnz
inc
in
dec
or
cld
lods
mov
xchg
aaa
iret
js
cmp
mov
jge
outsl
lea
xchg
push
fadd
loopne
les
out
mov
loop
sti
mov
add
subl
add
pop
lods
xchg
dec
je
das
push
lods
mov
or
mov
insb
outsb
mov
lcall
loop
add
push
in
and
mov
shl
mov
push
dec
popa
sbb
dec
pusha
scas
inc
stos
popf
iret
mov
push
and
sub
gs
mov
and
into
inc
jae
adc
rcrb
mov
mov
cmp
sarb
pop
stos
cmp
sub
pop
fisttps
sbb
push
or
mov
orl
repnz
push
rorl
icebp
popf
cwtl
xor
ret
jae
xchg
gs
lods
push
xor
ljmp
cmp
test
xchg
scas
outsl
mov
adc
add
or
es
notb
mov
xor
add
mov
jl
popa
add
mov
cmpsb
loopne
push
les
push
test
loop
rolb
iret
and
and
cmpsb
popf
out
adc
inc
std
push
stos
pop
stc
sti
xor
mov
sub
out
sti
mov
xor
loope
inc
jg
and
mov
push
jle
mov
test
mov
push
jnp
movsl
xlat
push
mov
sbb
shll
clc
and
enter
insl
cltd
add
cltd
jnp
mov
sub
cli
adc
int
xor
popf
xchg
std
ret
rol
pop
sub
cmp
mov
gs
fisubl
xor
pop
add
sti
pop
and
pusha
mov
or
and
pop
mov
out
sbb
scas
dec
inc
and
ret
cwtl
xchg
filds
mov
dec
inc
mov
pop
mov
xchg
movsb
sub
test
push
test
cli
ja
adc
arpl
cmpsb
int
push
repz
fbstp
xor
jp
aad
push
aaa
stos
sub
movsl
outsl
sti
scas
mov
or
mov
ret
nop
push
mov
test
imul
push
pop
jmp
sbb
arpl
dec
cmp
stos
push
dec
mov
les
das
repz
movsl
fistps
xchg
test
jecxz
data16
cld
stos
ror
jecxz
pop
adcb
push
push
and
sub
inc
dec
out
popf
and
ret
hlt
ja
add
fidivs
shlb
jnp
push
pop
popa
add
ret
xchg
mov
xchg
jo
cmp
lods
cmpsb
loope
js
popf
sub
fcomp
mov
call
rorb
clc
cmpsb
cli
pop
xchg
test
fldt
sub
jmp
iret
in
out
fwait
push
cwtl
lahf
adc
sbb
iret
mov
mov
mov
shll
sub
ret
lahf
add
les
ds
cmpsl
and
mov
xchg
xlat
je
push
mov
mov
inc
mov
push
bound
ds
pop
or
sub
cwtl
and
data16
push
push
xchg
xor
js
jl
mov
scas
jge
sbb
sahf
lea
mov
mov
cmpsb
sbb
jge
push
mov
sbb
push
sub
xchg
cmpsl
add
stc
jb
fs
lods
cmpsl
or
fwait
rcrb
jno
fsincos
rcr
mov
sub
jmp
push
mov
inc
and
ret
pop
mov
pop
out
ficomps
test
xor
aam
in
imul
pop
mov
xchg
cmp
test
cmp
xor
jl
std
mov
loop
and
ss
dec
hlt
int3
xchg
pop
or
adc
mov
push
je
mov
hlt
sbb
xchg
and
and
aaa
nop
add
addr16
fucomi
jmp
int
jns
mov
jecxz
pusha
ds
push
js
or
xchg
int
xchg
xchg
data16
rcl
mov
mov
mov
cmp
je
fisubs
inc
lcall
and
cmp
stos
or
test
int
pusha
add
add
popl
ret
gs
mov
pop
icebp
push
xchg
cmp
sub
xchg
outsl
dec
je
out
in
shlb
push
clc
xchg
adc
lock
add
andl
and
sub
jp
call
andl
cli
ficompl
mov
adc
sbb
ret
or
ljmp
push
pop
or
je
xor
loopew
push
pop
loop
lods
push
aas
push
frstor
xchg
sub
and
jg
into
imul
mov
push
lcall
or
repnz
push
pop
xchg
addl
xor
xchg
inc
or
jge
adc
inc
test
mov
std
inc
filds
add
push
stos
push
dec
mov
in
or
push
push
and
movsl
or
xchg
hlt
pop
inc
test
cmp
push
xchg
jle
push
add
sub
adc
sbb
cmp
insl
xchg
filds
scas
addr16
jbe
mov
xchg
cli
push
mov
inc
ret
pusha
mov
inc
and
pop
cmp
cmc
jg
push
adc
scas
repnz
adc
mov
imulb
mov
repnz
mov
and
cmpsl
push
fs
mov
pop
shr
sbb
jp
test
int3
cmp
mov
loope
test
cmp
ret
lds
jne
pop
mov
xlat
in
cmp
adc
sub
gs
add
loope
xor
je
mov
jbe
hlt
push
mov
adc
mov
mov
mov
lret
and
mov
out
push
imul
jo
xchg
sbb
mov
fisubs
aam
jmp
pop
sub
cmpsb
popf
or
es
inc
add
xchg
shll
mov
sub
inc
lcall
mov
mov
imul
testb
or
pop
into
mov
add
xchg
out
movsl
jo
lds
enter
or
sbb
inc
xchg
pop
das
mov
xchg
jl
cmpsb
push
nop
pop
push
sub
ret
sarl
dec
adc
xchg
sub
xchg
imul
mov
or
fstpl
scas
scas
cltd
adc
stc
inc
adc
mov
lcall
cmp
adc
sbb
jb
mov
iret
mov
mov
xchg
jne
xchg
adc
rorb
xor
or
outsl
fmuls
xchg
add
xchg
push
insb
mov
loope
pushf
pushl
adcb
out
movsb
divl
lret
pop
fwait
or
push
imul
aam
imul
loop
andb
ljmp
lds
add
mov
arpl
xor
fdivrl
fcompl
add
aam
inc
sub
ret
ds
cmc
loop
jmp
adc
and
mov
into
out
lcall
inc
daa
sbb
out
dec
mov
fstps
imul
call
jmp
inc
out
into
inc
and
add
adc
rcr
adc
adc
xchg
mov
imul
mov
cmp
ftst
dec
sub
cltd
mov
dec
in
sub
ja
mov
inc
mov
push
mov
jns
rcll
cmpl
pop
lret
mov
push
addr16
or
mov
gs
mov
in
nop
push
sarl
inc
xchg
push
ja
mov
push
ss
mov
xchg
fmul
sbb
cld
mov
xor
jo
sbb
jmp
scas
sub
xor
inc
or
jb
cmp
das
aas
inc
int
mov
dec
arpl
sub
push
push
into
and
out
and
cli
mov
or
adc
sbb
mov
dec
mov
sbb
sub
or
jg
cmpb
fwait
pop
jle
jg
cs
test
adc
loopne
push
xchg
out
mov
call
mov
call
adc
adcl
xchg
enter
xchg
test
and
add
fs
xchg
lds
pop
fnstenv
or
jns
adc
mov
mov
cmp
rcr
push
adcl
icebp
ret
jecxz
inc
push
je
mull
ret
inc
stos
mov
jp
mov
cmp
push
push
into
mov
subl
or
lds
pop
mov
fsubs
iret
das
cld
maskmovq
idivl
jge
dec
mov
inc
mov
push
cli
mov
das
lret
out
mov
jl
jno
or
jge
addr16
push
cli
sbb
fcompl
outsl
lahf
jecxz
repz
cltd
dec
lds
out
hlt
addl
test
popa
xor
jb
mov
lods
dec
mov
cmp
lods
xchg
push
fistps
aam
les
or
lds
call
pop
das
shll
data16
outsl
inc
xchg
add
mov
testl
pop
adc
jns
lcall
xor
and
fsubl
dec
icebp
xchg
mov
out
push
mov
adc
pushf
out
insl
das
imul
mov
stos
fcmovb
repz
inc
aad
xchg
shrl
push
lret
fsubl
fsubrl
xchg
imull
test
lods
dec
mov
mov
dec
push
sahf
sbb
lea
data16
aad
je
sti
lahf
jo
adc
pop
push
add
dec
das
mov
fucomip
inc
mov
or
sub
add
into
cmp
addr16
jo
dec
leave
push
cli
rcrb
inc
lds
std
clc
into
mov
lock
xchg
sub
shll
or
xchg
mov
addr16
pop
lcall
fwait
xchg
add
and
dec
xchg
xchg
push
mov
sub
cmpsl
in
xchg
int
cmc
aad
and
mov
push
daa
xchg
pusha
outsb
movsb
popf
inc
dec
sub
xor
pushf
bound
jge
bnd
daa
lock
js
lea
pushf
sub
cmc
or
or
dec
push
jbe
rcrl
ljmp
sub
push
xor
inc
adc
fsubrs
js
xor
cmc
adcb
fstpl
jp
mov
ret
jae
push
or
je
inc
daa
dec
fistl
imul
std
ss
out
mov
sub
ret
dec
jb
sbb
dec
push
leave
mov
push
movsb
sub
orl
sar
arpl
mov
mov
push
jle
in
mov
xchg
mov
addr16
push
mov
ret
loopne
popf
loope
scas
mov
jg
lods
inc
mov
ja
cltd
aas
js
sbb
jge
sub
sub
jne
imul
push
or
sti
lret
inc
sub
mov
xor
adc
adc
stc
sub
hlt
push
sbb
imulb
add
pop
inc
popf
sahf
push
sub
sbb
testb
stos
movsb
push
mov
insb
push
or
xchg
insb
lods
repnz
outsl
mulb
loopne
lcall
cmp
test
out
mov
adc
out
or
ds
pusha
outsb
and
sub
orb
cmpsb
sub
hlt
xor
jbe
add
pop
aaa
testb
adc
push
xor
insb
jl
xchg
xlat
or
ds
aam
push
clc
push
loop
inc
lea
je
pusha
cs
adc
cmc
cwtl
xchg
mov
xchg
pop
inc
mov
mov
sbb
xchg
mull
inc
orb
push
jle
call
cli
shrb
mov
mov
imul
or
int
pop
and
fidivl
test
mov
sbb
fs
lods
insl
mov
push
daa
jmp
pop
xchg
in
pop
lret
in
add
adc
testb
mov
xchg
ss
jge
arpl
dec
adc
test
mov
ret
sbb
mov
pop
call
dec
enter
xchg
fidivrl
mov
jg
mov
and
sub
adc
std
aaa
jo
cbtw
in
loopne
mov
pop
inc
gs
rorb
imul
lods
outsl
shlb
addl
inc
xor
lods
pop
jns
and
outsb
test
pop
dec
test
int
pop
pop
mov
add
aaa
jo
cmpsb
lahf
sbb
ret
fbld
or
lods
mov
xor
faddl
mov
divb
test
lcall
jo
jg
sub
cld
xchg
jmp
inc
shlb
inc
call
scas
popf
popa
lea
dec
sub
jbe
popf
mov
jge
nop
sub
and
inc
mov
dec
mov
repz
jg
cld
jecxz
pop
pop
push
gs
pop
sub
xchg
bound
loope
rclb
or
sub
in
repnz
adc
mov
cmp
mov
jmp
lds
add
or
dec
pop
sub
aad
cmc
aaa
xchg
cmpsl
jmp
cld
inc
push
cli
lret
adc
push
xorb
es
jp
cmp
pop
cwtl
mov
push
jmp
dec
add
and
enter
xor
aad
pop
xchg
aaa
lods
popa
nop
cmpl
das
popf
dec
lcall
stos
fsubrl
adc
sbb
loop
stos
rorb
cmp
lods
outsl
cmp
mov
in
loopne
mov
push
xchg
in
xchg
push
rcrl
test
mov
add
jno
popa
enter
sub
sbb
dec
rcrl
test
mov
add
jno
popa
enter
sub
sbb
dec
rcrl
and
cwtl
add
jno
popa
enter
cmp
mov
push
rcr
shrl
cwtl
jbe
stc
jo
aaa
scas
daa
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
xlat
dec
sti
add
mov
xchg
sub
inc
jge
outsl
daa
dec
pop
dec
pop
mov
xlat
std
mov
cmpsl
fstl
sub
inc
jge
pop
daa
pop
pop
dec
pop
movsb
divl
in
cmc
cmpsl
lds
push
inc
inc
and
add
jns
je
test
scas
popf
mov
in
mov
mov
sahf
push
aas
jne
insb
aaa
test
outsl
in
xor
mov
and
pop
lea
inc
repz
pop
mov
inc
notl
outsb
mov
imul
push
shr
and
and
mov
push
ljmp
cmpsb
and
int3
jns
mov
sub
repnz
xorb
sbb
and
add
cmc
cs
std
cmp
sub
std
inc
test
mov
jb
push
jb
add
vcmpss
pusha
scas
pop
push
cmp
je,pt
pop
dec
adc
out
xlat
ljmp
xchg
xor
inc
gs
jne
inc
pop
dec
outsb
shl
enter
stc
mov
mov
nop
ror
sarl
xor
jge
or
outsb
and
xchg
int3
xor
std
xchg
fucomi
jmp
sahf
jecxz
cmp
push
sbb
pop
push
sub
push
icebp
movsl
in
mov
in
cmpsl
fstl
sub
inc
jge
insl
daa
pop
pop
dec
pop
mov
xlat
std
mov
cmpsl
fstl
sub
inc
jge
insl
daa
pop
pop
dec
pop
mov
cmp
add
fistps
or
sbb
insl
cld
icebp
pop
adc
xchg
cmp
jmp
mov
daa
sub
cmp
jbe
movsl
adc
mov
js
mov
pop
or
jl
or
pop
mov
int3
jge
jb,pn
push
orl
pop
mov
in
xchg
sub
mov
icebp
in
xchg
add
xchg
lret
mov
sbbb
shlb
shlb
xor
out
pop
xchg
and
sahf
or
jbe
mov
sarb
add
jge
int3
cli
pop
test
std
dec
adcl
roll
aad
test
mov
and
sbb
adc
pop
in
es
push
outsb
mov
enter
nop
mov
xchg
pop
daa
adc
mov
add
pushf
inc
ja
mov
xor
inc
ds
das
stos
mov
inc
adc
shll
jp
pop
push
add
jno
test
subb
pop
mov
or
fcompl
sbb
mov
lret
xchg
lcall
idivb
xor
cmp
js
mov
inc
loope
lret
mov
aaa
push
add
or
ds
js
movsb
cltd
nop
loop
push
icebp
inc
jmp
pop
int3
jg
add
dec
fidivrl
cmovl
xchg
xorb
cmp
fwait
xlat
shlb
mov
mov
add
cld
popa
add
pushf
xchg
pop
add
push
es
iret
mov
mov
xlat
sahf
idivb
inc
rclb
enter
scas
xchg
jo
mov
stos
xchg
rcrl
ffree
and
pop
fildll
das
cmp
jb
adc
mov
jno
pop
decl
mov
mov
or
dec
popf
pop
xor
xor
fimull
xchg
rcll
notl
loopne
mov
mov
xchg
testl
push
lcall
sub
test
inc
fdivrl
sbb
test
test
xor
pop
sub
daa
push
inc
sub
or
and
mov
js
dec
inc
pop
out
in
and
out
nop
or
mov
jno
shlb
in
aas
sbb
mov
push
stos
repz
js
pop
insb
rcl
mov
scas
lret
or
mov
aam
ds
cmc
dec
add
inc
sbb
cmp
nopl
xchg
and
call
jbe
ljmp
repz
dec
xchg
push
sbb
add
or
dec
xchg
pop
cltd
arpl
icebp
vmovdqu
fisubl
push
ret
push
add
nop
mov
pop
and
dec
adc
mov
insb
or
pop
dec
loopne
or
les
push
icebp
inc
inc
jo
cwtl
sti
ret
sarb
jge
sbb
inc
inc
xchg
jne
ja
ja
pop
in
jne
push
out
mov
movsb
imul
lods
loope
in
mov
push
push
and
stos
mov
mov
dec
mov
inc
add
inc
cs
orl
test
out
cmp
push
xchg
leave
rorb
mov
cmp
das
scas
fsubl
jne
negb
inc
cltd
scas
or
call
push
adc
stos
jbe
sti
sub
sbb
xchg
pusha
xchg
sbb
xor
push
outsl
or
inc
in
rcll
data16
jle
sub
popf
and
jae
sahf
stos
jb
adc
mov
and
in
xchg
lcall
rcll
mov
xor
cmp
ficoms
leave
push
push
cmp
scas
inc
inc
xchg
cmpsb
loop
cli
and
cwtl
jae
dec
jge
push
inc
xchg
pop
aad
pop
xlat
imul
add
and
outsb
mov
daa
ret
mov
push
cmp
hlt
cmpsb
std
pusha
pop
xor
ds
cmp
mov
xor
nop
nop
or
rorl
jecxz
pop
adc
adc
push
scas
sbb
mov
ret
inc
mov
fidivl
push
jns
stos
ficoml
sub
ret
and
add
sbb
ret
xchg
or
cltd
jae
jno
xchg
push
mov
jbe
mov
ret
xchg
push
popf
arpl
fs
add
dec
aam
dec
inc
jno
dec
jbe
dec
jo
lock
adc
push
into
cmp
test
sahf
cmp
add
dec
cmp
movb
xor
out
cmp
insl
inc
mov
fcompl
out
pop
in
dec
mov
mov
les
lods
cmp
cltd
cmp
std
inc
push
xor
jg
iret
pop
in
cmp
div
mov
jp
pop
xchg
pop
ror
sbb
xor
mov
jnp
mov
jne
test
dec
daa
cmp
es
pop
movsb
xchg
sbb
pop
enter
fisttpl
push
insb
push
sbb
jl
stos
jne
dec
add
lcall
adc
mov
xor
pop
jp
leave
roll
jo
adc
scas
jnp
sub
add
inc
mov
aad
sbb
xor
jp
push
push
dec
add
and
xchg
jge
leave
inc
and
push
xor
lds
out
mov
stos
popl
test
pusha
ljmp
dec
out
xchg
and
xor
ljmp
rolb
or
inc
dec
lea
cmp
or
dec
adc
ja
adcl
outsl
testb
xchg
inc
arpl
jo
add
mov
mov
and
shlb
nop
jp
fisttpl
mov
adc
mov
push
stos
jecxz
sub
cmp
loop
adcl
sub
loope
bound
arpl
lods
addl
push
rorb
fst
fimull
leave
fwait
rorb
das
std
push
fcoml
mov
mov
sbb
cmp
sbb
sbb
xor
outsl
sub
push
inc
mov
mov
pop
hlt
fiaddl
lods
in
sbb
sub
das
shlb
push
xchg
jmp
push
std
lea
push
aas
and
adc
mov
mov
cmpsb
and
lss
outsl
xchg
std
sbb
test
xor
pop
stos
mov
int
cmp
mov
or
imul
movsl
cmp
sub
push
outsl
jae
sbb
mov
cmp
xchg
inc
in
pop
pop
popf
push
mov
adc
inc
adc
push
js
lock
pop
jne
sbb
fwait
dec
rcrb
aas
fwait
mov
xchg
fs
fwait
push
loopne
sub
adc
fnstenv
dec
or
inc
adc
cmc
mov
mov
int
stos
jp
lods
sub
icebp
loope
je
inc
adc
cmp
push
negl
adc
adc
add
imul
xlat
movsb
ret
cld
movsb
xchg
nop
push
and
dec
mov
bswap
jge
ja
das
into
xchg
jbe,pn
shll
test
mov
pop
std
cs
push
xor
sub
and
add
scas
adc
mov
xor
xlat
xor
stos
mov
mov
stos
add
aas
dec
xchg
xlat
test
push
pop
mov
pop
jns
sbb
pop
pop
and
pop
or
aam
outsb
call
stos
xor
inc
ret
or
stos
sbb
cmp
cmp
lods
dec
cmpsl
inc
jno
inc
retw
add
inc
pop
or
in
out
pop
lret
mov
jmp
jbe
cmc
jae
push
fcomip
cld
aas
icebp
cmpsl
pop
pop
cmc
out
nop
aas
or
cmp
not
and
or
pop
cmpsb
mov
and
adc
ss
mov
lea
or
push
repnz
int
ljmp
push
mov
insl
xchg
jne
sub
sub
shrl
cmp
stos
lret
cmpl
add
add
or
dec
dec
cmpsb
sbbl
movsl
adc
lret
xchg
jb
cmp
aam
or
pop
jmp
shl
lret
or
cli
mov
mov
mov
xchg
adcb
lcall
or
push
outsl
pop
sahf
mov
pop
iret
fimuls
scas
jecxz
xor
into
jo
and
out
push
adc
xchg
idiv
sub
movsb
mov
adcb
negb
mov
xchg
cli
pop
dec
fsubs
sbb
xchg
shll
test
and
fistps
pop
aam
iret
in
add
aas
cmp
adc
add
mov
dec
or
adc
mov
xor
arpl
fnstcw
mov
sbb
shr
pop
or
lea
sbb
inc
cltd
test
fidivl
mov
ja
aas
add
inc
fiaddl
inc
sub
into
push
xchg
adc
lods
mov
pushfw
movsl
bound
adc
add
dec
stos
mov
addb
flds
scas
add
outsb
sahf
outsb
adc
mov
xlat
mov
sub
lea
and
daa
add
and
and
inc
jae
frstor
bound
sbb
outsb
fld
push
cld
xchg
fisubrl
push
mov
in
test
jl
jecxz
inc
adc
test
mov
xchg
jnp
stos
shr
sbb
loopne
push
mull
pop
adc
dec
icebp
iret
jbe
ret
mov
fistl
xchg
mov
enter
je
stos
jl
xchg
stos
push
xor
dec
rol
cwtl
paddusw
in
inc
mov
cs
inc
mov
lcall
stc
jl
push
jp
xlat
pop
xchg
rolb
repz
sbb
out
jp
xor
repz
sbb
mov
jo
cmp
jg
xor
sahf
mov
out
lret
in
xor
iret
pop
xchg
sbb
mov
dec
stc
pop
xchg
in
push
sbbl
ja
daa
pop
pop
decl
mov
xchg
xchg
xchg
push
adc
ss
testb
and
sub
lea
cmp
ret
dec
popa
adc
lods
cmpsb
ss
mov
or
idivb
jne
and
ja
test
mov
ljmp
inc
insb
imul
and
pop
push
ds
ror
loop
adc
sub
inc
add
je,pn
dec
inc
es
push
rcll
cmp
cmp
push
mov
shll
xchg
inc
xchg
pop
mov
xor
ret
or
or
mov
pop
push
out
gs
jnp
add
cmp
jp
lahf
fildll
je
sub
and
das
pop
cwtl
call
jb
sarl
nop
mov
outsl
xlat
les
xchg
in
xor
push
sub
pusha
ret
mov
faddl
fwait
aad
int
jl
push
nop
dec
inc
dec
sbb
push
push
lahf
lds
push
adc
loopne
push
cmpsl
jg
out
mov
int3
or
insb
pop
mov
sbb
push
add
mov
mov
fistpl
jmp
xor
inc
mov
add
lcall
mov
cs
mov
stos
xchg
lods
push
outsb
push
mov
fcmovb
jecxz
ds
sbb
inc
ja
adc
sbb
test
jne
sbb
pop
shl
ss
mov
fsubs
shlb
cli
inc
in
imul
or
inc
xchg
movsl
addl
sbb
sbb
fisubrl
fs
dec
xchg
and
jb
inc
jo
add
fwait
xchg
movl
xor
xor
dec
xorl
cwtl
aaa
std
adc
xchg
xchg
inc
pop
aam
dec
or
sub
adc
xchg
stc
mov
xor
in
inc
push
inc
jns
data16
lods
lret
mov
mov
xchg
xor
adc
fildll
ret
stos
orl
adc
iret
jnp
push
mov
mov
jge
insb
mov
jbe
mov
pop
popf
mov
test
pop
fistpl
push
movsb
mov
inc
test
and
mov
outsb
nop
add
mov
rcr
adc
cmp
jmp
push
push
or
enter
mov
mov
in
cmp
mov
lcall
movsb
sub
in
sbb
in
test
mov
pop
inc
sbb
xchg
xchg
jmp
xor
rcl
mov
mov
mov
das
or
rolb
mov
sub
lcall
in
adc
jne
jmp
mov
xchg
ret
dec
sbb
push
punpckhbw
je
scas
jge
inc
adc
inc
add
xor
xchg
push
lea
out
stos
xorl
dec
push
fsubl
sub
in
and
mov
nop
or
enter
push
scas
test
iret
loopne
enter
test
ljmp
fimuls
push
cmp
pop
mov
enter
xchg
mov
hlt
stc
icebp
jae
cmp
cwtl
sbb
and
pop
insl
sbbb
popf
xchg
les
push
mov
aas
inc
out
cli
or
aaa
mov
lods
jmp
arpl
add
push
xchg
ss
rclb
ret
mov
push
arpl
test
ja
addl
mov
arpl
roll
popf
cmpsb
pop
push
cmp
xchg
add
movl
xor
shll
adc
mov
cwtl
xlat
pop
movsl
fcmovb
loop
jge
shlb
in
outsb
dec
sbb
jl
jge
das
out
mov
cmp
js
sarl
mov
xchg
sbb
out
insb
out
mov
mov
out
jg
loope
xor
sahf
rcll
lods
ror
cmp
sub
pop
dec
imul
leave
xchg
add
sub
xor
inc
stos
insl
adc
shrl
pop
xor
sub
pusha
pop
test
lock
int3
sub
xlat
inc
sbb
popa
dec
roll
clc
jne
sahf
pop
jno
cmp
movsl
ljmp
pop
imul
add
out
loop
adc
add
and
adc
loopne
mov
mov
and
les
repnz
int3
inc
test
into
imul
aam
insl
testb
inc
cwtl
lahf
hlt
push
mov
xor
add
jo
lds
or
cli
sbbb
pmaxub
nop
fsubrl
rcrl
push
xor
xchg
mov
repz
sbb
xchg
movsb
shl
rol
push
pop
clc
adc
lahf
aad
mov
add
cmp
add
xchg
pop
outsb
std
fsubr
mov
dec
in
ljmp
jg
sub
cmp
test
fsubrl
aam
cwtl
inc
mov
sub
jno
or
rclb
mov
xor
jl
lret
cwtl
movsb
ret
push
movsb
std
push
bound
sub
xchg
ret
xchg
lahf
loop
mov
xchg
lds
xchg
popl
sbb
test
mov
rclb
xor
xor
dec
scas
mov
mov
sti
mov
mov
std
enter
in
mov
jnp
push
xchg
aas
jbe
jns
jo
cmp
cmp
jmp
or
sub
inc
stos
orl
inc
sbb
jmp
les
adc
scas
lods
pushf
sub
xchg
leave
sub
jmp
inc
aam
sbb
mov
and
or
daa
cwtl
dec
cmp
cli
mov
mov
clc
scas
or
popf
popa
cmp
inc
inc
mov
rcr
mov
idivb
outsb
insl
repnz
mov
dec
cmp
iret
out
add
add
mov
cmp
lret
std
sbb
lds
add
dec
movsl
mov
dec
das
jo
add
idivl
cld
fiadds
xchg
js
pop
lret
cmpsb
or
js
dec
mov
shlb
xchg
stos
iret
mov
mov
dec
add
mov
cmpsb
sbb
das
push
stc
fstpl
xor
mov
jne
mov
rcll
xchg
jmp
mov
fdiv
push
mov
or
mov
push
and
lahf
js
out
pushf
dec
push
jae
je
and
pop
pop
and
cmp
imul
xchg
sbb
mov
pusha
arpl
pop
pop
sbb
out
dec
sub
icebp
shll
testb
mov
inc
pop
in
aas
add
push
mov
movsb
sbb
cmp
xchg
dec
ror
pop
iret
mov
int
mov
add
in
add
mov
les
imul
popf
adc
and
or
cltd
out
cmpsb
and
xchg
test
icebp
jmp
fisttpll
cmpsl
and
or
add
in
test
xchg
test
ljmp
nop
in
mov
std
cmp
fldt
lock
pop
inc
cltd
push
adc
jl
push
push
add
or
jb
jne
xlat
out
jno
in
rcrl
lret
cmpsl
mov
sub
xchg
ja
push
mov
cmp
inc
imul
sub
lahf
adc
jl
mov
cmc
insl
call
call
scas
fists
mov
push
pop
rclb
mov
clc
push
sbb
movsb
mov
push
xchg
xor
in
xchg
push
push
push
inc
int3
hlt
adc
adc
or
scas
fwait
cmpsl
cmp
sub
in
sub
test
push
or
loope
push
pop
jl
mov
add
imul
inc
and
dec
fwait
mov
mov
std
clc
rolb
xor
add
cmpsb
gs
jo
inc
pushf
hlt
inc
outsb
les
mov
aaa
sub
push
add
lock
addl
xchg
adc
add
outsl
and
test
test
aam
mov
xor
sbb
jno
adc
jb
ret
pop
mov
arpl
inc
inc
das
movsb
scas
std
add
dec
adc
rcrl
mov
xor
xor
xor
int3
add
mov
mov
adc
sbb
xchg
or
mov
jae
push
bound
adc
adc
outsl
fiaddl
fistps
stos
mov
in
mov
xor
test
aam
sti
cmc
push
mov
mov
pusha
in
addr16
adcb
stc
repz
xchg
pushf
sbb
sbb
pop
and
leave
and
xchg
and
lods
pop
jno
movsl
mov
add
pop
filds
arpl
pop
daa
add
test
stos
push
icebp
and
neg
cltd
prefetch
push
jbe
mov
popl
je
lcall
and
mov
ljmp
or
ja
adc
testl
mov
push
nop
ljmp
push
pushf
daa
or
xchg
push
dec
mov
cmpsb
dec
adc
mov
sub
clc
push
pop
jb
sbb
cmp
mov
mov
sub
dec
xor
jp
dec
ds
cmpb
push
insl
lahf
push
int3
push
iret
xchg
mov
sub
mov
mov
out
adc
push
jl
push
nop
push
testl
push
push
icebp
shlb
test
fcomps
push
addr16
fcmovu
sbb
xor
adc
or
pop
or
xor
lods
xor
xor
fmuls
out
mov
je
sub
and
inc
push
loopne
aam
pop
pop
jle
lods
cmpl
xor
or
aam
ficompl
test
lahf
cltd
jnp
or
cmp
jmp
pushf
push
in
pop
xor
jle
fcoms
fidivs
lret
sub
ja
sbb
jmp
inc
cmp
jg
stc
popf
jne
scas
push
mov
pop
rol
sub
xorb
lds
inc
nop
inc
dec
call
mov
mov
lock
xlat
jb
mov
sub
inc
and
test
fldt
je
jno
rolb
mov
shlb
jl
dec
and
gs
mov
adc
mov
cmp
out
push
jecxz
add
inc
add
inc
or
xlat
fstl
mov
popl
mov
inc
icebp
int
pop
jmp
jg
push
or
repz
insl
cld
outsl
pop
fdiv
sbb
repz
test
mov
cmp
aas
cmpsb
mov
inc
add
insl
xchg
aaa
pop
std
sti
jg
sub
nop
inc
sub
insl
or
jb
and
popl
lahf
jb
inc
roll
scas
mov
cmp
mov
rcr
jbe
leave
cmp
gs
mov
lock
mov
std
mov
cmpsl
fstl
sub
inc
jge
insl
daa
pop
pop
dec
pop
mov
xlat
std
mov
cmpsl
fstl
sub
inc
jge
insl
daa
pop
pop
dec
pop
mov
xlat
std
mov
cmpsl
fstl
sub
inc
jge
insb
daa
pop
pop
dec
pop
mov
xlat
pushl
dec
xchg
ja
int
push
or
fsubs
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
pop
faddl
in
aaa
cld
daa
ss
mov
addr16
sub
mov
cmpsl
or
out
out
pop
faddl
in
aaa
cld
daa
mov
inc
lods
ja
add
xchg
mov
sub
cmp
int3
pop
faddl
in
aaa
cld
daa
mov
inc
lods
ja
addr16
xchg
pop
movsb
or
xchg
jne
or
push
nop
mov
lods
inc
pop
in
mov
int
pop
jnp
in
sub
mov
or
pop
cltd
pop
mov
lret
leave
in
cmp
icebp
mov
jecxz
and
les
jecxz
popf
loopne
sbb
mov
lods
leave
movsb
dec
xchg
or
cmp
fdivr
scas
jp
sub
lcall
mov
inc
dec
jg
xchg
js
jno
and
dec
daa
cmp
ss
xlat
and
mov
fcoml
and
sub
pop
test
lahf
ret
pop
xor
fcoml
mov
insb
sbb
std
jp
mov
mov
js
sbb
sub
pop
faddl
in
aaa
cld
daa
mov
inc
lods
ja
addr16
xchg
pop
xchg
cmpsl
or
sbb
sub
cmp
mov
jbe
iretw
adc
xor
adc
adc
out
sahf
add
sbb
js
push
addb
adcb
mov
jmp
and
dec
push
repnz
adc
sbb
inc
mov
push
jl
and
push
fcompl
gs
inc
lods
ja
addr16
xchg
pop
xchg
cmpsl
or
sbb
sub
cmp
int3
pop
faddl
in
aaa
cld
daa
mov
inc
lods
ja
addr16
xchg
pop
xchg
cmpsl
or
sbb
sub
cmp
int3
pop
fldcw
popa
pop
scas
loopne
mov
dec
sbbl
cltd
out
lds
jo
mov
lods
xor
jmp
and
fnstenv
ss
xor
inc
or
jmp
add
enter
inc
shlb
insb
add
fimuls
pop
mov
js
jg
dec
fdivp
and
sbbl
fbstp
jmp
cs
imul
cli
imul
jp
pop
je
adc
aas
pop
mov
xor
and
pushf
add
or
sbb
mov
enter
xchg
dec
mov
stc
es
gs
pop
int3
cmp
adc
addr16
mov
sbb
fstpl
or
lret
pop
and
stc
pusha
pusha
xor
les
lods
jae
lock
addl
and
dec
and
or
lahf
out
fwait
pop
mov
mov
lahf
cmpsl
push
std
mov
test
or
pusha
bound
pop
push
out
jo
pusha
mulb
xchg
push
adc
xchg
adc
cmpsb
add
and
enter
sub
in
jg
adc
push
jnp
fbld
sbb
nop
jg
mov
and
test
aam
es
sahf
pop
jecxz
lahf
lret
dec
mov
sti
fistps
lcall
xor
inc
dec
xchg
pop
js
aas
jnp
add
ret
mov
dec
nop
mov
xlat
scas
in
inc
adc
repz
dec
in
lret
fwait
in
arpl
shrl
and
repz
shl
and
add
mov
fs
jae
addb
xchg
inc
push
lret
enter
pusha
pop
mov
test
push
cmp
add
in
loop
rclb
insl
cli
fsubr
and
jge
and
ss
jp
jne
or
jl
cld
scas
stc
fstpl
mov
pop
mov
push
ret
push
or
sbb
aas
pushf
sub
rcrl
inc
adc
cmp
mov
push
hlt
pop
ret
sub
pushf
mov
add
mov
cmp
sbbl
call
inc
or
cmp
pop
dec
inc
push
pop
sti
sbb
sub
ljmp
mov
xchg
push
jl
xchg
add
sti
xor
lods
cmpsb
xchg
or
add
out
test
mov
outsl
mov
out
xor
sub
mov
ljmp
mov
les
adc
mov
mov
enter
xchg
cmp
sub
adc
pop
mov
sub
jg
jno
push
mov
fdecstp
sbb
cmp
jne
add
mov
cmc
dec
subb
xchg
mov
mov
or
mov
out
cmp
pop
cmp
test
mov
xchg
into
push
mov
outsl
orl
repnz
xchg
aas
xchg
cmp
jnp
pop
sub
pusha
insl
push
add
sub
nop
rcrl
fwait
xor
adc
or
ds
xchg
push
adc
and
jno
xchg
clc
sbb
pop
popf
mov
inc
xchg
xor
mov
jae
int
filds
push
push
dec
cmp
push
les
or
ret
push
lds
rcrb
aam
and
mov
jp
and
add
jnp
ja
mov
mov
sarl
xor
test
cmc
mov
or
rorb
fcomip
insl
ret
ljmp
cmp
jo
xchg
jo
add
jl
add
mov
imul
repnz
clc
inc
repz
jb
xchg
das
imul
int3
lea
leave
out
stos
jle
std
rcr
nop
stc
mov
aaa
sbbl
ljmp
ja
mov
adc
dec
test
and
mov
sub
and
outsl
or
icebp
pop
mov
testb
add
dec
je
ret
orb
addb
shll
jae
mov
notb
or
push
sbb
pop
mov
pop
jno
int
sbb
lods
or
sub
xor
mov
aas
movsb
sub
jg
rep
add
mov
repnz
lock
test
jl
push
mov
lods
pop
and
jno
adc
pusha
mov
mov
rclb
sbb
into
rcrl
hlt
imul
mov
jo
loopne
sub
pushf
imul
jle
arpl
mov
in
mov
icebp
pop
adc
push
dec
lcall
and
mov
pop
aad
out
pop
pushf
jnp
aam
test
sbb
arpl
leave
add
cmp
mov
pop
inc
sbb
push
in
adc
cmp
out
jo
mov
ja
sub
adc
ret
scas
adc
sbb
sbb
cltd
movsb
aad
sub
arpl
sbb
aad
cltd
dec
inc
loope
jp
pushf
inc
adc
sub
faddl
shlb
fisubrl
fidivs
push
or
lock
mov
cmp
out
fnsave
mov
push
push
pop
dec
mov
sub
xchg
xchg
lea
dec
inc
fcmovu
sbb
cmp
jnp
add
fwait
inc
fists
adc
aam
cwtl
loope
int
sub
insl
mov
xorb
movsb
loop
and
ror
out
sbb
ja
mov
std
cmpsb
cmp
mov
test
cltd
add
push
leave
dec
xchg
stos
imul
test
inc
inc
mov
into
repnz
lret
and
cmp
add
xchg
jbe
in
pop
fwait
adc
cmp
push
add
lret
mov
dec
and
or
pop
aad
outsl
dec
out
adc
lea
add
sti
int
aas
mov
pop
and
sbb
mov
adc
daa
dec
add
insl
or
test
scas
loopne
jg
rorl
jp
fldl
sbb
fwait
aad
pushf
cs
pop
mov
enter
movsl
fbld
dec
mov
sbb
pop
int
mov
and
leave
daa
std
ja
pop
sbb
push
mov
mov
push
icebp
jp
jl
shlb
int
dec
jge
shrl
cmp
imul
fcomps
cld
das
insl
or
adc
xchg
test
and
jo
fadds
mov
or
in
dec
mov
push
xchg
aaa
fdivs
clc
dec
rolb
outsl
lret
push
in
cmc
cmp
sti
mov
dec
stc
frstor
les
xor
in
loopne
cmpsl
mov
in
lds
xor
test
inc
loop
push
cmp
cmp
insb
aaa
lods
xchg
aaa
sub
fcompl
add
arpl
adc
loopne
add
outsl
xor
cmp
inc
add
push
idivl
mov
sub
test
or
cltd
jnp
call
adc
jns
lcall
push
int
add
inc
jo
addr16
xor
stos
inc
cltd
fsubrp
fbld
xchg
mov
adc
sbb
stos
mov
xchg
cmp
std
enter
jo
enter
dec
cmp
test
ja
in
stc
sbb
rcrl
ds
lret
sub
insl
std
cmp
sbb
movl
cmc
ljmp
sub
inc
mov
sbbl
xchg
jg
cmp
test
subb
xchg
addl
daa
and
pop
ljmp
add
ja
insb
and
scas
stc
and
leave
pop
add
out
or
push
mov
jbe
jmp
xchg
setl
pop
ret
xchg
pop
stos
lret
jle
test
stos
rorl
sbb
into
outsb
inc
dec
jo
cmp
cli
addl
arpl
push
fs
xchg
mov
jo
in
fimuls
aaa
scas
loop
push
pop
inc
subb
cmp
lahf
mov
rcr
pop
rorl
inc
lret
mov
fnstsw
loop
in
call
adc
push
lock
leave
mov
lods
das
lret
inc
inc
pop
jp
xchg
push
cli
push
mov
or
ror
xor
pop
dec
pop
mov
fsubp
hlt
mov
ljmp
xorl
xchg
in
fbld
pop
mov
sbbb
hlt
push
lods
push
aad
test
bound
push
cmp
pop
mov
sub
ljmp
aam
mov
add
outsb
sub
inc
int3
into
ja
or
in
out
imul
push
xchg
sub
push
pop
xchg
cmpsb
jns
jno
scas
inc
fcmovb
lret
and
inc
jg
sub
int
add
leave
pusha
popa
mov
daa
push
stc
rorb
push
insb
and
das
push
mov
inc
pop
loop,pt
roll
cmp
in
push
mov
cmpsb
cmpsb
push
sub
repnz
sbb
and
jp
scas
mov
ja
icebp
pop
jno
scas
or
or
pop
jo
rcrb
push
shr
pop
fwait
sub
lahf
push
cld
xchg
ss
sbb
pop
pop
sub
sub
aas
ret
jbe
scas
xchg
orl
mov
cmp
pop
rorb
in
jne
lea
cmp
pop
or
jg
xchg
loop
and
cltd
xor
push
jne
push
pop
xchg
push
mov
sahf
dec
sub
cmp
and
fpatan
leave
mov
jmp
sbbl
addr16
sbb
add
lret
inc
scas
cltd
mov
sub
pop
pop
mov
mov
iret
aam
push
adc
pop
ret
rcrl
popa
cmc
mov
mov
push
jb
inc
je
test
sub
dec
call
push
cld
es
push
cltd
ret
adc
sbb
jle
aaa
lahf
mov
rorl
mov
ds
or
dec
jmp
sub
mov
into
dec
sbb
or
or
mov
fs
pop
pop
sub
mov
sarb
lret
cmc
cmp
adc
je
push
and
mov
inc
mov
jmp
xor
ror
or
adc
mov
jae
push
push
aaa
dec
ds
push
jns
mov
cmp
sub
cmpsb
loop
xchg
cwtl
adc
test
sti
xchg
or
and
mov
mov
pusha
xor
stos
mov
cmpl
call
jmp
add
nop
lret
cld
sub
cmp
lods
mov
int3
lret
stos
inc
ficompl
xor
js
xchg
out
int
pop
jb
xchg
pop
aam
xchg
adc
and
xchg
jo
xchg
push
cmp
movsl
cmp
mov
aam
adc
das
pop
and
lahf
or
lret
jmp
mov
or
pop
sbb
ret
mov
sahf
bound
xchg
adc
scas
movsl
sbb
data16
lds
data16
ljmp
mov
fnstsw
cld
lahf
pop
pushf
mov
mov
out
faddl
push
sbbl
ss
xor
adc
mov
mov
icebp
adc
mov
adc
push
sub
xor
lahf
jb
and
iret
pushf
dec
dec
btc
sub
push
and
lds
cmpsb
ret
sarl
sub
sbb
push
fistl
roll
pop
push
cld
mov
xchg
jecxz
sbb
fistpl
mov
mov
mov
or
mov
mov
cmp
cmpxchg
jno
int
push
or
mulb
sbb
addl
decb
fstp
int3
sbb
cmp
mov
popl
sti
mov
lahf
mov
add
add
repz
or
jne
mov
in
test
xchg
adc
inc
cmp
addl
xchg
aad
sbb
ds
push
and
in
dec
in
mov
inc
shlb
push
xor
cltd
imul
and
and
ja
sbb
rclb
shll
inc
rcr
and
jecxz,pt
pop
xor
mov
mov
aas
mov
add
cwtl
jl
mov
fwait
repnz
mov
dec
in
cmp
xchg
pop
dec
or
push
loope
mov
imul
or
mov
scas
in
sahf
in
ret
clc
in
xor
daa
repnz
adc
cwtl
sahf
je
sub
lods
adc
push
fisubs
push
mov
mov
fdivr
push
and
push
lods
mov
push
push
cmp
adc
lcall
subb
inc
scas
cmp
jecxz
mov
rcr
out
sub
testl
hlt
mov
mov
icebp
cmp
mov
mov
cmpsb
dec
add
push
mov
push
xlat
or
int
and
ret
add
cmpsl
sahf
xchg
jne
xor
pop
jo
pop
aas
xor
pop
pop
fcoms
jge
aaa
inc
fldt
xor
hlt
pushf
adcb
inc
adc
xchg
cmpsl
int
add
fimuls
mov
and
call
jmp
cli
outsb
jo
or
mov
jne
inc
aaa
xor
test
out
rcr
mov
xor
test
push
cmp
ret
aad
push
jle
and
insl
sbb
cmp
cmp
aaa
xor
pop
jns
stc
out
sbb
adc
pop
jo
pop
mov
mov
int3
loop
ds
out
out
inc
pop
aaa
lea
and
ss
insb
mov
mov
mov
inc
lcall
scas
es
adc
mov
pop
sbb
aam
dec
jmp
rcl
in
icebp
sub
pushf
xor
das
cmp
pop
and
pop
and
pop
pop
mov
sbb
icebp
cmc
adc
push
sub
das
clc
int3
push
mov
push
mov
popf
jns
mov
lahf
js
pop
sti
push
adc
mov
mov
or
or
rolb
mov
add
ficoms
push
cmpl
and
mov
in
int
mov
mulb
cwtl
test
in
cmpsl
outsl
xor
imul
gs
dec
or
pop
iret
sub
testb
call
sbb
mulb
out
sahf
fsubr
fsubrs
lods
mov
lahf
sahf
clc
bound
sub
imul
xor
or
hlt
rorl
inc
hlt
mov
mov
lock
sub
pusha
inc
ljmp
pop
inc
lcall
mov
cmp
fdivr
cmc
jg
loop
iret
lahf
mov
cltd
push
dec
add
loop
or
shrb
fsts
xchg
ret
stc
stos
insb
dec
addr16
mov
xor
cltd
inc
lcall
call
lcall
xchg
xor
sahf
insl
rclb
xor
gs
or
sub
aam
jmp
xchg
xor
pop
and
insb
sbb
std
jno
cmp
cmpsl
dec
ret
test
mov
arpl
mov
mov
call
xor
decb
inc
mov
movsb
mov
xor
jmp
out
lds
mov
ficompl
in
push
jae
outsl
push
fstp
enter
push
sbb
das
mov
pop
hlt
movsb
dec
cmp
div
xchg
addr16
jle
push
push
cmc
jmp
sbb
add
cld
cmpsl
iret
xchg
sbb
outsl
outsl
pusha
cmpb
rcrl
and
dec
dec
cmpsl
sub
or
xchg
mov
xor
lods
and
aad
xchg
push
jnp
ror
fs
outsb
ret
aaa
inc
push
or
cld
mov
cmp
pusha
movsb
jmp
test
repnz
jno
iret
mov
xor
mov
pop
insl
fadd
pop
and
inc
and
in
push
xlat
lods
jb
xor
mov
or
gs
lret
aad
xor
sbb
jp
test
mov
push
icebp
testl
out
pop
inc
push
scas
pop
lds
pop
push
fs
jecxz
fsubl
fwait
xor
insl
cs
mov
jno
out
inc
inc
dec
push
or
lds
int3
dec
jl
addr16
stos
cmp
testb
ja
not
push
mov
lock
push
jb
scas
add
fstps
mov
push
xor
and
add
jmp
xchg
aaa
test
pop
sbb
bound
fisubl
cmpsl
movsb
or
cmp
sbb
jnp
test
test
int
mov
add
das
psubw
js
dec
aaa
dec
jle
push
jo
pop
js
sbb
les
repnz
leave
mov
xlat
insl
shll
test
xchg
pop
push
inc
push
loope
test
jge
lcall
push
nop
inc
stc
or
mov
sbb
push
dec
or
sbb
faddl
jg
jmp
leave
xor
ret
jle
xor
roll
roll
in
jmp
or
outsb
jns
xor
jmp
jl
daa
adc
int3
jb
incl
imul
es
pop
fwait
int3
fstl
cmp
js
cmpsb
rcrb
mov
mov
rol
pop
ss
sub
out
mov
add
add
nop
xor
fwait
mov
jnp
or
mov
movsb
sbb
das
xchg
jmp
bound
ds
pushf
test
jno
mov
popa
push
aaa
mov
idiv
xor
outsb
mov
mov
loope
pushf
mov
fwait
mov
vmovd
lods
cmp
imul
push
xlat
sbb
insl
add
inc
test
je
dec
inc
sub
inc
cmp
out
pop
out
push
into
out
popf
jl
dec
push
fwait
andb
leave
insb
add
push
sahf
mov
adc
inc
and
ror
sbb
ficompl
cwtl
xor
pop
mov
jnp
mov
stc
mov
ror
aad
xchg
stc
sub
xor
dec
fnstcw
mov
int
stos
xor
mov
adc
or
ja
lds
push
fwait
jae
arpl
mov
out
shll
cmpsl
outsb
inc
mov
out
mov
rorb
jae
dec
mov
pop
out
int3
jno
mov
rcrb
iret
cmp
add
out
sub
lret
and
or
jge
cli
mov
xor
mov
jb
iret
xchg
test
xor
aas
sbb
pop
cmp
les
fdiv
je
add
ds
cmc
outsb
int
cmp
icebp
or
sbb
mov
loop
ret
out
add
ss
sarl
cld
sarb
pop
mov
xor
inc
fdivrp
cmp
jno
or
in
inc
mov
xor
outsl
mov
pop
jns,pn
and
cmpsb
push
mov
jmp
rep
sahf
mov
add
rclb
and
cmc
or
int3
hlt
xor
push
shrl
insb
sarb
test
ja
fs
mov
push
fbld
idivl
or
xchg
sub
lahf
cmpsb
cmpsl
repnz
lret
inc
dec
mov
adc
jne
sbb
sbb
imul
xor
push
and
cld
lret
mov
test
aas
ss
sub
add
iret
call
adc
push
out
pop
push
xlat
pop
mov
xchg
jae
gs
pop
dec
cwtl
fs
jecxz
ror
div
repz
icebp
loopne
ja
in
scas
mov
fs
sub
mov
neg
aam
dec
shl
jl
or
insl
movsl
loope
daa
xchg
add
xchg
in
mov
push
js
movsl
sbb
push
push
sarb
popa
aad
xchg
and
xor
stos
or
fnstcw
sarb
dec
push
cmp
dec
addb
lock
insl
mov
shl
es
adc
xchg
orb
fdivl
cld
lods
jp
add
sub
sbb
and
out
and
cmp
ljmp
into
lds
in
ja
pop
fs
ret
cwtl
inc
imul
mov
js
lea
push
mov
daa
pop
ss
pop
mov
jo
jae
xchg
enter
or
fwait
cmp
dec
push
mov
pop
in
xor
iret
dec
scas
mov
jl
mov
addr16
dec
xlat
mov
or
inc
lea
sbb
dec
lcall
sub
je
aaa
mov
div
mov
movsb
aas
insl
jnp
stc
push
imul
pushf
mov
mov
or
jg
enter
mov
pop
hlt
jmp
or
add
rorl
insl
or
in
mov
adc
mov
mov
call
add
pop
inc
gs
inc
icebp
mov
or
fimuls
cmpsb
imul
adc
movsb
inc
pop
xor
cltd
scas
dec
sbb
xchg
int
adc
jb
das
xor
test
incl
and
sub
mov
cmc
dec
or
out
call
mov
loope
mov
adcl
cmpsb
and
mov
out
pusha
shlb
adc
stc
adc
pop
int
add
movaps
dec
cmpsb
pop
push
dec
mov
inc
ljmp
ss
data16
cld
daa
mov
inc
lods
ja
addr16
xchg
pop
xchg
cmpsl
or
sbb
sub
cmp
int3
pop
faddl
in
aaa
cld
daa
mov
inc
lods
ja
addr16
xchg
pop
xchg
cmpsl
or
sbb
sub
cmp
int3
pop
faddl
in
aaa
cld
daa
mov
inc
lods
ja
addr16
xchg
pop
xchg
cmpsl
or
sbb
sub
cmp
pop
in
aaa
cld
daa
mov
inc
lods
ja
cmpsl
dec
xchg
pop
sub
jnp
xchg
cmp
or
sbb
mov
ljmp
stos
iret
rcrl
dec
xor
push
sbb
cld
cmp
push
fisubl
ljmp
ret
stos
cmpsl
pop
das
dec
xor
add
sbb
or
inc
sub
mov
ljmp
fldt
adc
jp
data16
imul
xchg
out
lret
out
hlt
fisubrl
mov
xor
push
cmp
stc
nop
jle
pop
cmp
xchg
fwait
sbb
mov
push
push
mov
addr16
mov
push
add
fsubl
push
out
in
in
pop
sub
and
inc
fdivs
mov
int3
les
fadd
lock
mov
and
test
in
mov
inc
ljmp
jl
rcrb
ret
ret
pop
int
cld
dec
sahf
in
idivb
mov
mov
out
and
mov
push
jecxz
xchg
popa
or
adc
and
jnp
sbb
dec
push
inc
ret
or
pop
cmp
in
es
or
test
xchg
lcall
lret
dec
sub
push
sbb
imul
sub
mov
div
loope
xchg
fildll
dec
xor
pop
push
jbe
push
arpl
sub
aas
fxch
mov
cld
fsub
out
mov
push
dec
push
cmp
adc
pop
jae
and
daa
mov
scas
mov
out
lcall
rcrl
dec
xor
push
sbb
jae
inc
sub
mov
ljmp
ret
stos
rcrl
dec
xor
push
sbb
jae
inc
sub
mov
into
xchg
inc
push
mov
xor
cmp
mov
jo
xchg
das
sbb
mov
cmp
xchg
in
mov
mov
sti
imul
jae
pop
fwait
xchg
cmp
pushf
mov
in
push
jge
push
mov
sbb
ja
pusha
pop
sub
inc
dec
lock
jnp
xchg
push
push
loopne
sahf
ljmp
xchg
push
jne
sahf
mov
adc
lods
mov
fisubrs
sbb
mov
jg
insl
xor
sub
stos
jne
je
fcmovnb
gs
movsb
mov
xorl
addr16
xor
pop
adc
inc
jg
test
xor
imul
lret
xchg
mov
push
push
icebp
test
jp
cmpsb
cmpsb
jmp
mov
fs
stos
addr16
cmp
xor
faddl
jns
ljmp
dec
xor
push
stc
jp
inc
sbb
shl
daa
aaa
mov
push
dec
insl
inc
addr16
jecxz
xchg
inc
cmp
adc
mov
adc
rorb
jg
add
cmc
addb
ja
jmp
xor
dec
push
and
fldl
out
jmp
xchg
push
repnz
addr16
mov
mov
test
cmpsb
mov
mov
pop
add
dec
mov
loop
mov
pop
adc
sub
or
icebp
push
add
sbb
sub
xchg
mov
sub
dec
jecxz
lock
adc
scas
int3
mov
cmpl
shrl
dec
sar
jns
subl
push
jns
inc
imul
mov
mov
dec
std
ja
cmpxchg
pop
push
out
mov
mov
insl
add
add
rcl
jge
movsl
cmp
pop
jl
pop
dec
push
ret
sbb
aaa
aaa
testb
clc
add
pop
fsubl
popa
arpl
shll
xor
cmpsb
mov
shrb
adc
outsb
lret
and
mov
outsb
lcall
add
jbe
cld
test
insb
into
movw
gs
sbb
adc
ljmp
addr16
outsb
mov
lods
addb
pop
sbb
mov
stos
fidivl
mov
leave
pop
xrelease
xor
mov
sbb
sbb
pop
lods
add
cs
xchg
rcll
cmp
push
jl
cmpsl
push
adc
jb
cmp
subb
sub
mov
lds
arpl
xor
cmp
outsl
sub
les
mov
pusha
sbb
mov
dec
outsl
sar
mov
xchg
out
push
dec
andb
cmp
jb
ror
add
bnd
test
call
movsl
mov
cmp
and
and
popa
jp
push
rcll
inc
in
pushf
mov
jnp
loop
cs
fsubr
mov
jle
mov
and
add
push
push
arpl
cmp
test
mov
push
inc
sub
adc
shlb
mov
push
sahf
and
aaa
inc
stos
sti
jl
dec
fwait
xchg
mov
push
pop
int3
cmpsl
addr16
mov
lock
in
pop
sbb
jg
dec
mov
hlt
stos
jecxz
fcmove
pop
and
mov
pop
jns
out
and
fnstsw
icebp
out
xor
xchg
add
repz
xchg
aaa
icebp
add
int3
xor
dec
fcmovne
jg
insl
fidivs
jmp
dec
ljmp
mov
and
orl
inc
arpl
mov
mov
das
push
add
pop
inc
stos
lret
lods
jnp
dec
mov
jecxz
sub
or
mov
les
jbe
lock
sarb
test
cmc
mov
in
orb
sub
pop
pop
mov
lea
mov
mov
sub
mov
fisttpll
rol
arpl
push
test
int3
push
push
push
aas
pop
xor
cld
xor
jb
popf
adc
sbb
push
xor
jl
dec
cltd
icebp
mov
mov
mov
or
jns
cmp
pushf
mov
and
add
clc
out
mov
sbb
sub
insl
adc
xchg
or
movsl
add
xor
xchg
popa
call
mov
dec
mov
rcrl
inc
fwait
add
ret
cs
sub
sub
fsubr
adcb
inc
faddl
ss
mov
cld
inc
and
icebp
lahf
xor
aad
pop
mov
pop
iret
xchg
xchg
mov
cmpsl
xchg
jp
mov
lds
jnp
std
orl
jp
inc
sarl
cmc
ja
pop
pop
or
mov
push
xlat
testb
jmp
mov
cmpsb
cmp
or
cmp
cmovns
cmp
ljmp
sar
add
xor
js
xor
jbe
add
cld
dec
sub
aad
gs
bound
mov
mov
int3
arpl
movsl
sti
add
push
pop
cmc
push
out
scas
scas
insl
push
pusha
sahf
loope
cmp
cmp
and
test
xchg
insl
jbe
imul
ret
jge
lcall
movsb
add
stc
or
pop
adc
sbb
fcoms
popf
pop
mov
les
jl
xor
fdivrl
push
and
stos
test
push
mov
data16
cli
cmp
push
hlt
into
mov
arpl
outsb
adc
adc
pop
sbb
lea
mov
cwtl
hlt
pop
shll
sbb
sbbl
std
jmp
popf
dec
out
jns,pn
jle
sbb
push
nop
pop
push
cltd
lods
popa
fisubrl
rolb
jo
or
sub
xor
xlat
andl
mov
inc
nop
jmp
cs
or
mov
cmp
mov
push
pop
enter
and
xchg
dec
inc
loop
loopne
enter
inc
inc
into
es
subb
pop
rcrl
icebp
rcrl
shrl
sbb
cmp
and
in
or
aam
push
aad
mov
mov
push
out
xchg
jl
mov
mov
adc
mov
aad
xor
sub
movsl
mov
insl
fadds
aas
xor
sub
aam
lret
add
repz
int
aaa
cmp
daa
mov
outsl
adc
fs
mov
jle
xchg
or
stc
nop
jnp
mov
cmp
pop
into
xor
outsb
xchg
outsb
imul
mov
test
push
mov
and
push
jg
ret
repnz
ret
mov
daa
mov
aas
jl
or
xchg
xor
and
cmp
jo
cmp
mov
xchg
dec
adc
stc
jmp
push
stos
dec
lret
aas
js
mov
pop
or
fnstsw
data16
inc
push
sub
and
jno
mov
inc
enter
lret
pushf
inc
test
xor
dec
or
popa
fcomps
mov
sbb
loope
sar
push
or
fwait
jno
ljmp
mov
rcll
mov
add
fcompl
popf
inc
pop
scas
pop
out
xchg
rcrl
adc
lds
gs
push
fisttps
gs
pop
add
adc
adc
out
push
scas
sbb
lahf
adc
daa
jmp
mov
addr16
adc
pop
cmp
xchg
mov
push
pop
inc
dec
lahf
lret
cmp
jbe
out
fmull
and
lret
sub
jb
in
fiadds
lahf
xchg
sbb
aaa
xchg
push
adc
pop
into
stos
les
mov
mov
dec
fnstcw
mov
mov
cli
mov
mov
loop
pop
or
lea
in
pop
and
sbb
rorl
cmp
sub
push
cwtl
scas
mov
inc
xor
ds
pushf
mov
lock
fs
push
sub
xor
lods
in
jg
int
pop
addr16
aas
es
ds
sbb
jg
xchg
and
jnp
dec
sbb
inc
jmp
int
fnstcw
jbe
mov
les
mov
xor
push
mov
js
testb
sbb
inc
pop
jns
iret
scas
insb
pop
adc
das
pushf
mov
into
mov
pushf
mov
mov
fadds
and
push
enter
mov
xor
dec
push
pop
call
xor
jbe
mov
push
xchg
rcrl
nop
xchg
in
adc
fcmovbe
xor
mov
and
shr
dec
add
stos
popa
sarl
push
cmp
daa
xor
nop
push
aaa
ja
enter
mov
pop
pop
jo
push
xor
dec
mov
adc
dec
dec
add
rcll
mov
in
jp
outsb
jnp
enter
xchg
popf
fdivrl
test
or
loop
inc
add
in
mov
inc
add
rolb
icebp
sub
insl
mov
fldl
lahf
cld
test
mov
mov
andb
inc
push
jmp
add
shl
shrl
cmpsl
jb
fincstp
mov
push
sbb
les
outsb
xchg
add
fidivs
mov
dec
inc
push
push
cmp
sbb
cmpsl
lods
cmpsl
xchg
mov
mov
pop
pop
jmp
sbb
jmp
into
test
cmp
aas
adc
fmull
cmpps
int3
js
in
lret
jne
pop
xchg
lds
mov
mov
imul
loopne
mov
mov
scas
xchg
aaa
or
sbb
movsb
sub
cli
out
test
fiadds
sub
outsl
lea
leave
sbb
adcl
mov
push
aad
shr
lcall
xor
mov
insl
test
cmpsl
sti
jg
cmpsl
pop
fs
mov
lea
cmc
pop
mov
rep
sbb
cwtl
pop
fidivrl
or
fistl
movsb
pop
jo
mov
mov
xor
fwait
in
pusha
push
mov
sub
adcb
loope
testl
js
or
adc
mov
es
push
xchg
cmp
inc
orb
mov
push
xor
push
cmp
xor
push
loope
inc
gs
sarl
loopne
addr16
inc
or
xlat
pop
in
movsl
xor
sbb
in
and
fisubs
xor
add
pop
aad
dec
pop
in
jns
cmp
xchg
cmpsl
lcall
jno
pop
aas
cmp
pop
and
mov
pop
stos
inc
sub
ret
stos
out
jmp
add
xor
inc
pop
inc
push
sbb
inc
lcall
or
jecxz
lock
mov
mov
mov
in
ret
fildll
pusha
fimull
mov
dec
mov
lods
add
mov
xor
inc
pusha
pop
fs
scas
dec
scas
cmp
sbb
rep
xor
mov
mov
sbb
jns
bound
xchg
hlt
lret
mov
pop
or
les
and
push
ret
mov
add
call
push
adc
add
imul
in
sbb
sub
mov
iret
cmpb
inc
dec
cvtps2pi
adc
je
int3
lret
mov
out
xor
push
add
fwait
sbb
mov
es
or
lea
ret
mov
jecxz
jl
popa
and
ss
xchg
es
in
aad
push
outsb
leave
mov
sbb
rorb
sbb
inc
sbb
mov
sti
hlt
mov
iret
sub
jno
jne
sbb
cmpsl
lahf
push
ja
lahf
mov
sub
pop
adc
lea
mov
aaa
test
push
and
jno
repnz
je
outsl
popf
sqrtps
inc
out
lods
xchg
je
add
unpcklps
push
jg
push
dec
xor
mov
in
jp
lods
lea
push
roll
addr16
loope
ficoms
jg
lcall
dec
cmovle
xchg
mull
add
aaa
sub
mov
add
mov
mov
pop
push
stos
jg
mov
mov
jns
push
sbb
jmp
pop
in
cmc
or
dec
dec
repz
fistpll
mov
bound
pop
dec
ljmp
inc
lret
loop
or
sti
push
push
fnsave
sub
gs
jp
into
mov
imul
sahf
clc
insb
dec
push
mov
push
jg
dec
push
in
insb
push
in
repz
lcall
repz
daa
inc
xchg
xchg
out
test
es
mov
cmpsl
lods
adc
lods
lcall
pop
fisubl
mov
aas
mov
jns
mov
jg
aam
push
inc
dec
stos
jo
mov
dec
nop
mov
cld
out
aad
cld
jg
inc
xor
sbb
fnstcw
and
mov
out
idivl
pop
roll
loope
add
cmp
ljmp
pop
stc
clc
cli
dec
arpl
clc
dec
es
dec
pop
nop
inc
jmpw
inc
and
das
and
or
pop
out
fwait
clc
xchg
outsb
mov
cli
xor
inc
xor
fneni(8087
xchg
out
sahf
sysexit
inc
aas
cld
add
sbbl
or
xor
cltd
test
ffree
mov
arpl
xor
xor
dec
pop
js
mov
test
out
push
mov
out
test
addr16
mov
xor
fsubrl
adc
mov
mov
jecxz
lret
fidivs
push
into
sahf
xor
dec
ja
sub
stc
cmp
jae
xor
sti
and
insl
mov
xchg
jb
popa
data16
mov
outsl
mulb
stos
dec
out
ret
lret
xchg
mov
cwtl
movsl
inc
cmc
sub
out
insb
pop
and
xorl
imul
je
mov
or
aas
clc
call
movsl
clc
mov
push
xor
dec
leave
mov
cmp
sbb
sub
das
dec
int
cltd
sbb
add
nop
frstor
js
fisttps
xor
xor
dec
es
out
nop
cmpsb
into
cmpsb
out
xor
hlt
mov
insb
fstps
xchg
ret
outsb
sarl
mov
inc
add
and
dec
stc
xchg
cmc
fsubrl
popa
mov
push
push
xor
cwtl
movsl
nop
push
leave
add
dec
call
xchg
je
and
pop
add
push
jle
fnstsw
pop
xchg
loope
addr16
aad
or
fiaddl
jno
add
lea
pop
fmull
xchg
dec
xchg
cmp
pop
rcr
popa
jmp
pop
sbbl
js
mov
jmp
movsl
mov
in
inc
add
movsl
pop
in
inc
fwait
xchg
dec
pop
cmc
outsb
ret
cmpsl
js
lahf
les
dec
xchg
xchg
push
scas
lods
cmp
aas
mov
sarb
pop
lahf
push
jg
inc
xor
jae
int
push
dec
cmp
jp,pn
pusha
pop
std
xchg
cs
xor
loopne
ds
xor
jg
mov
mov
outsl
dec
out
inc
cmpb
or
add
add
arpl
mov
in
and
xchg
push
int
lret
adc
into
push
jns
loope
push
xchg
xchg
fcoml
inc
mov
push
adc
inc
or
in
and
cs
mov
push
adc
jno
lds
sbb
mov
nop
xchg
jecxz
das
mov
inc
or
or
stc
sub
out
or
adc
pop
daa
pop
sbb
push
dec
lods
imul
mov
leave
movsl
out
dec
fs
out
dec
cmpsb
sti
mov
lret
pmaxsw
les
mov
sub
scas
jmp
inc
insl
mov
push
loope
icebp
inc
stc
je
iret
jg
push
jge
nop
pop
dec
cmp
repz
stos
hlt
lods
out
in
push
leave
xor
pop
idivb
andl
xchg
lret
dec
push
sub
cmp
hlt
and
in
adc
push
in
aaa
and
out
sbbl
psadbw
mov
jmp
test
lods
icebp
jmpw
inc
jns
jg
notl
push
mov
adc
push
inc
int3
cmp
ss
cmp
inc
jns
popf
sub
cmpsb
sbb
fsts
xor
fwait
ror
shrb
dec
or
adc
daa
inc
ja
rol
lods
pop
inc
es
shlb
cwtl
xor
outsb
test
add
ja
inc
cli
or
aas
ja
fistps
cmpsb
mov
decl
cmpsl
outsl
repnz
fidivs
pop
dec
pop
repnz
adc
aam
add
ss
xor
mov
lods
lahf
in
jnp
test
cmpsl
lods
mull
scas
bound
adc
xchg
lcall
push
pop
lret
loope
xchg
xchg
rol
push
mov
and
cmp
jl
sbb
addr16
jno
push
cld
pop
fadd
push
movsb
ret
roll
ret
ret
sbb
adc
aam
push
and
sub
push
xor
lds
bound
adc
inc
dec
cli
adc
imul
pop
dec
jno
cli
or
mov
into
xchg
movsl
lods
mov
sub
aaa
mov
xor
jmp
inc
je
or
call
imul
mov
lods
mov
pushf
ljmp
xchg
shlb
aas
mov
cmpsl
jne
pop
imul
mov
xchg
jp
mov
jl
fcomi
xchg
push
jle
xor
xor
mov
scas
loope
dec
pop
addb
shll
or
cmpb
into
mov
aas
inc
mov
adc
push
cmc
daa
dec
lret
lds
mov
fsubs
js
clc
xchg
iret
int3
inc
push
setl
adc
decl
sahf
call
push
push
fdiv
lds
mov
bound
std
pop
and
add
push
mov
pop
aas
mov
xchg
mov
int
push
hlt
imul
or
pop
add
dec
lods
loop
sbb
mov
repnz
xchg
and
push
dec
xor
and
test
mov
xor
lods
das
sahf
and
sti
mov
dec
ja
jge,pn
sub
outsl
popa
and
fdivrs
sbb
dec
mov
cmp
rcll
inc
xchg
ret
insl
lods
mov
mov
mov
mov
mov
push
cmp
or
leave
call
test
orb
xchg
mov
jmp
pop
xchg
dec
cwtl
and
outsl
sbb
roll
adc
subl
sbb
rorb
les
ret
add
pop
sbb
and
sub
int3
adc
rcl
arpl
mov
xchg
mov
adc
iret
xchg
imul
cld
std
mov
mov
cmp
and
dec
mov
adc
sub
movsb
sub
jbe
xor
xchg
xchg
ss
aad
mov
mov
fstps
loopne
sti
je
into
sub
bound
mov
mov
nop
or
or
cli
cmc
pop
mov
movsb
fnstcw
outsb
mov
outsl
xchg
loopne
jo
scas
leave
dec
add
push
jae
stos
push
addb
jb
and
int3
test
std
dec
das
jmp
push
push
inc
scas
mov
cmp
fidivl
fbld
mov
ret
push
pusha
mov
add
sub
pop
and
mov
push
fldenv
insl
dec
xchg
cwtl
cli
fadds
ja
xor
mov
loop
dec
push
mov
add
mov
aad
pop
mov
outsl
add
rolb
mov
sti
lcall
es
or
repz
popf
out
jmp
dec
lds
andl
lods
push
movsl
ljmp
loope
mov
test
pop
pusha
jae
or
icebp
lret
out
icebp
add
sub
sbb
xor
mov
xor
lcall
fildl
dec
inc
dec
push
loope
jb
xor
pop
cld
mov
sahf
out
mov
std
sbb
adc
faddl
push
mov
sbb
fsubrs
mov
in
cmpsb
sbb
push
fidivrs
xrelease
repnz
mov
jne
add
pop
xor
or
jp
mov
xchg
inc
fstl
inc
dec
into
adc
dec
add
dec
outsb
sub
movsb
add
aaa
sbb
sub
push
jns
iret
rep
inc
jg
mov
incl
in
pop
int3
imul
shld
push
mov
xor
and
pop
loope
popf
push
fwait
adc
rorl
xlat
cmc
mov
ljmp
ret
stos
rcrl
dec
xor
push
sbb
jae
inc
sub
mov
ljmp
ret
stos
rcrl
dec
xor
push
sbb
jae
inc
sub
mov
ljmp
ret
stos
rcrl
dec
xor
push
sbb
jae
inc
sub
cmpsl
lret
xchg
xchg
lcall
adc
dec
cltd
rolb
push
insl
jmp
or
cmp
sub
mov
jns
push
fsubrl
or
push
jmp
jmp
test
mov
jns
or
sbb
sub
cmp
ret
cmp
cmp
test
sbb
jno
popa
sti
adc
add
leave
cmp
lea
cs
fisubrl
shrb
cmp
pop
in
and
repnz
sbb
or
mov
shlb
pop
adc
popa
mov
mov
imul
and
xor
ret
push
loop
pop
xor
xor
aad
hlt
and
mov
adc
sub
es
jbe
fcoml
cltd
mov
repnz
or
rcrl
int
loop
or
push
push
xor
pusha
or
in
cmp
xor
push
es
std
stc
std
and
cwtl
js
push
inc
shrb
hlt
pop
mov
xchg
push
leave
lods
adc
outsb
es
lret
clc
addr16
adc
mov
lea
outsb
lea
std
add
sub
and
cmp
loopne
xchg
inc
addl
or
sbb
subb
push
mov
mov
std
add
sub
and
sti
pop
jmp
out
jnp
jge
ja
inc
mov
dec
pop
fstps
dec
mov
fnstcw
mov
dec
or
jns
jno
sbb
sub
cmp
leave
cmp
stc
or
test
mov
jns
or
sbb
sub
cmp
leave
cmp
stc
or
test
mov
adc
lcall
out
stos
push
pop
mov
cltd
xor
add
jg
adc
xchg
cmp
mov
or
add
cmp
xor
dec
dec
scas
fstps
and
mov
lret
add
adc
in
cmpsl
inc
fstl
sahf
push
out
or
jmp
mov
xchg
mov
inc
fwait
pushf
inc
les
xchg
aad
test
mov
popa
add
jecxz
pop
jnp
jae
and
inc
adc
out
clc
data16
mov
cwtl
aas
not
movsb
jmp
out
testl
in
cmp
jg
insl
lea
in
cmpsl
pop
cwtl
pop
sbb
outsl
test
adc
mov
mov
sbb
xor
dec
push
push
pop
sub
xor
mov
mov
aaa
daa
mov
pop
pusha
stos
adc
enter
cwtl
cmp
shlb
inc
mov
loopne
adcb
imull
inc
add
ja
popf
or
out
mov
shll
push
push
jno
fwait
pusha
xchg
xchg
sub
stos
sbb
faddl
push
push
xchg
mov
jbe
das
stos
clc
insb
sbb
repnz
cld
and
stc
cmp
lahf
je
popa
popw
push
and
bound
lret
or
fs
or
fwait
notl
mov
xchg
inc
mov
mov
out
inc
adc
jbe
adc
shll
imul
inc
fwait
pop
std
xor
mov
mov
inc
aad
call
xor
pop
mov
or
out
test
add
sahf
dec
sar
nop
jle
add
xchg
les
xchg
xchg
iret
fiadds
fprem
rcrl
in
pop
fistl
fdivrp
popf
dec
and
dec
xchg
andb
cli
jne
add
test
mov
cmpsb
dec
or
orl
sbb
xor
mov
loope
arpl
imul
aaa
mov
int3
into
cmp
mov
movsb
adc
cmp
jmp
das
pop
xor
xchg
movsl
pop
loopne
push
and
fbld
cmp
daa
inc
les
cmc
dec
dec
pushf
or
imul
cmpsb
fdivs
fwait
mov
dec
enter
dec
adc
aas
push
mov
cmp
mov
xchg
xor
inc
dec
into
cld
call
mov
jp
clc
jge
stos
mov
mov
in
jecxz
ljmp
xchg
fmulp
or
sbb
and
aaa
push
pop
mov
pop
into
adc
mov
push
sub
fsts
nop
inc
push
test
icebp
adc
inc
sti
xchg
mov
icebp
lret
mov
popa
sub
mov
shll
loop
push
lods
pop
sti
pop
and
sub
xlat
sbb
sbbb
sahf
repnz
push
lock
outsl
adc
ror
mov
aam
testb
push
add
or
xchg
lahf
sub
adc
mov
adc
push
into
cmpsl
jmp
mov
loop
incl
mov
scas
ret
add
push
int3
dec
enter
inc
lea
int
stc
push
in
popf
and
outsl
add
adc
lahf
stos
cmpsl
lea
pop
inc
xchg
insl
roll
add
and
xor
add
call
cmp
and
adc
push
or
add
pushf
inc
mov
insb
dec
popf
mov
in
jle
add
mov
subl
sub
mov
dec
push
arpl
push
xchg
iret
mov
shr
imul
js
mov
xchg
sub
in
jae
aaa
xchg
push
pop
push
cmp
jns
pop
pop
hlt
das
sub
inc
popf
or
dec
fwait
mov
and
in
lds
mov
push
mov
leave
fadd
dec
mov
and
icebp
add
int
jns
pop
inc
push
daa
xchg
push
push
bound
jecxz
fldcw
orb
sub
stos
out
jnp
idivb
mov
xor
sub
sub
aas
jne
roll
push
mov
mov
inc
inc
mov
add
cli
or
jecxz
sbb
js
push
mov
xor
movsl
pushf
les
lock
jne
xlat
outsl
int
in
dec
cmp
test
jae
cwtl
aam
jo
mov
inc
aad
xchg
push
sbb
jp
mov
stos
sbb
fbld
mov
cwtl
sub
push
int
mull
les
dec
pop
xchg
adc
lods
out
lahf
mov
mov
aaa
je
lcall
lods
sub
jmp
int
mov
sbbl
cmpsb
pop
clc
dec
sbb
sub
mov
mov
pusha
cmpsb
cltd
loop
dec
adc
inc
mov
stos
sbb
insl
cld
or
mov
dec
xchg
jne
clc
imul
das
pop
xchg
pop
daa
jg
mov
push
call
and
pop
outsl
cmp
fildll
cmp
inc
inc
add
jne
aaa
leave
sub
inc
aam
je
xchg
sar
loop
sub
xor
push
push
out
push
sbb
jb
adc
call
sub
xlat
hlt
lea
push
push
mov
subps
push
int
dec
and
fldenv
cmp
fnstsw
loope
xorl
adc
xlat
jg
mov
dec
pop
adc
idivb
call
xor
mov
cld
jb
out
enter
jl
aad
push
inc
cli
pusha
push
mov
lret
in
enter
test
ja
arpl
jno
divl
stc
ss
out
xchg
sub
sub
fldl
lock
fs
mov
sbb
add
lods
nop
inc
loope
push
les
loop
and
repnz
bound
fwait
test
cmpsb
in
xchg
pop
fdiv
fs
mov
dec
and
mov
cmp
pop
test
mov
test
mov
test
movsb
cld
data16
pop
or
orb
cmp
lea
movsb
scas
test
mov
push
dec
mov
mov
aad
mov
xchg
mov
in
push
clc
push
lock
cmp
lods
lret
jae
sub
shr
mov
insl
xchg
mov
movsl
outsl
xchg
xor
or
aad
cmp
lcall
cmp
or
inc
mov
or
push
imul
dec
add
fwait
mov
mov
sub
in
jecxz
call
xchg
aam
inc
mov
mov
shrb
arpl
jae
add
mov
push
fnstenv
jo
fcmovne
cld
outsb
adc
push
int
icebp
lods
xlat
push
xlat
mov
jbe
mov
adc
les
push
xchg
xor
xchg
mov
data16
adc
xchg
movsl
sbb
xor
ror
jb
int
std
mov
mov
rcr
ss
jae
lods
pop
mov
mov
int
aam
push
or
xor
das
lea
xchg
clc
imul
and
fimuls
sbb
adc
bound
pop
add
mov
and
in
adc
int3
mov
jmp
adc
mov
in
cmpsb
cli
adc
scas
shl
lret
cmp
dec
sub
dec
mov
les
mov
movsl
sbb
frstor
imull
enter
cld
jecxz
stos
xor
jmp
cmp
movb
fwait
sub
in
cld
loop
pop
mov
jg
mov
jb
insb
cli
sti
inc
jecxz
dec
sbb
add
test
pusha
addl
and
adc
rcrb
push
test
icebp
xor
cmp
push
inc
nop
jbe
lea
imulb
lea
fisttpll
call
aaa
jmp
test
mov
adc
movsb
dec
dec
dec
popf
repnz
shll
jmp
inc
sti
sbb
xchg
cld
ret
aad
sub
dec
lods
call
xor
mov
mov
adc
jp
adc
mov
pushf
and
pop
or
cmp
aas
imul
addr16
dec
sub
add
inc
movsb
movsl
imul
jne
aam
adc
xor
jo
jne
push
sbb
adc
add
rolb
dec
pop
repz
dec
sbb
xchg
pop
je
aas
jmp
mov
cmp
mov
cmp
loop
mov
js
mov
or
imul
sub
adc
mov
dec
aad
push
mov
pop
xchg
jl
loope
test
cmp
lcall
outsb
mov
xchg
or
and
add
shlb
or
gs
mov
xchg
shlb
outsl
xor
jae
dec
in
push
cmp
test
mul
and
xchg
or
subl
push
fnsave
jb
adc
outsb
jg
jl
cmc
sub
inc
inc
pop
xchg
push
bound
xor
xor
and
sub
mov
xor
loope
repz
cmp
inc
mov
xor
or
or
sub
xchg
jle
loop
repnz
push
imul
emms
je
add
mov
mov
movsb
and
dec
xchg
sahf
lret
loop
jb
adc
or
test
push
pop
fdivrl
push
loope
fisubl
int
fwait
inc
and
xor
dec
aam
dec
xchg
movsl
inc
jmp
jae
xchg
in
or
pop
das
pop
in
push
call
iret
push
sbb
mov
jge
scas
clc
jae
xor
cli
stos
cld
addr16
movl
sbb
jbe
pop
jbe
test
enter
pusha
out
and
inc
sub
fsubrl
cmpl
ja
mov
jecxz
int
in
mov
test
jne
in
push
lods
lcall
pop
inc
loope
mov
cmp
inc
mov
imul
adc
fldl2t
cmp
leave
call
cli
dec
or
int
or
call
add
sbb
ja
cld
jb
mov
imul
int
subb
xchg
popf
or
pop
xor
in
push
mov
sti
cwtl
jno
dec
xchg
pop
mov
les
test
sbb
xchg
popf
fdiv
ds
mov
push
aad
push
fstpl
outsl
mov
das
mov
cmp
divl
outsb
in
sbb
shll
add
ret
jno
pop
out
xchg
sti
or
inc
mov
in
adc
sahf
jbe
in
in
add
push
les
addr16
mov
cmp
jns
add
or
mov
loopne
sub
xor
mov
push
adc
clc
sub
fstpl
xor
add
and
andl
push
in
aaa
iret
mov
xchg
adc
adc
pop
and
and
jae
out
nop
and
lock
cmpsb
lea
or
pop
fsts
jmp
push
repz
or
mov
lahf
or
ret
rorl
mov
xchg
xor
addl
mov
mov
insl
or
dec
in
dec
sbbb
adc
incl
pop
mov
fisttpll
std
jmp
dec
xchg
xor
imul
jge
add
ret
in
mov
mov
dec
aam
push
cmp
ret
dec
stos
leave
movsl
int
push
inc
dec
sbb
shll
leave
shr
ret
popf
lahf
jg
mov
jno
hlt
jl
pop
cmc
nop
inc
mov
scas
dec
cmp
jb
fwait
fwait
stos
aam
out
xchg
or
daa
xchg
cwtl
fbstp
sub
adc
mov
decl
or
xlat
pop
pop
fiaddl
dec
pusha
sub
mov
jle
adc
pusha
shrb
mov
aad
pushf
jle
mov
sahf
psubusw
or
pop
icebp
ja
and
dec
or
nop
iret
xchg
rorb
mov
xor
outsl
out
cmp
repz
aas
dec
adc
adc
ret
stos
push
stc
xchg
daa
inc
jo
mov
sub
pop
loope
xchg
adc
cmp
xchg
cs
sub
mov
mov
movsl
leave
sbb
push
es
push
adc
out
push
push
je
inc
mov
cmp
jecxz
fwait
loopne
xor
rcll
mov
mov
pop
lock
mov
sbb
and
mov
mov
std
popf
xor
leave
and
pop
arpl
push
lds
dec
outsl
lock
mov
mov
xlat
mov
popa
loop
ljmp
jae
aas
mov
mov
aas
dec
sbb
jo
cmp
sub
and
jecxz
stc
or
cld
movsb
and
inc
add
dec
aam
sub
pop
in
aad
fcmovu
xchg
mov
test
sahf
add
mov
xor
sub
ret
cmp
jecxz
xor
fdivp
mov
in
pop
or
xchg
int3
dec
push
cli
mov
aam
test
jb
pop
jge
cwtl
rcl
jle
inc
mov
xchg
add
test
jne
xchg
mov
mov
aas
pop
roll
mov
icebp
rcr
mov
jl
lcall
push
pushf
xchg
lock
xor
addl
sbb
add
lods
adc
push
sahf
xchg
xor
inc
mov
push
iret
das
mov
sub
test
sub
insb
xchg
faddl
jbe
xchg
pop
jns
sub
mov
mov
js
push
movl
push
lock
or
cwtl
out
sbb
or
addr16
push
mov
mov
scas
repnz
sbb
loope
dec
rcrb
dec
sub
mov
push
xchg
movaps
xchg
negl
xor
xor
out
fsubs
cli
inc
gs
fwait
ja
test
std
ds
movsl
ret
shl
pop
jg
dec
rolb
mov
cmp
into
daa
sarl
lret
std
mov
mov
and
push
mov
jns
inc
push
xchg
test
inc
xor
pop
xor
sub
hlt
call
xchg
inc
xorb
jle
adc
jae
mov
scas
lret
mov
lds
popf
sub
dec
cli
dec
and
mov
clc
mov
lcall
lea
rcr
sbb
pop
cli
sbb
dec
dec
or
and
rclb
add
jp
iret
mul
mov
sub
mov
sub
push
lahf
shlb
enter
mov
shl
mov
adc
adc
jno
xlat
rorl
add
rclb
loopne
arpl
data16
adc
out
insb
shlb
and
sahf
inc
cmp
xor
rorb
je
stc
cvtps2pi
inc
xor
inc
nop
xor
sbb
sbb
ss
cmpsb
fmulp
pop
fucomi
xor
mov
adc
out
xchg
push
inc
adc
in
mov
rcll
into
and
lahf
mov
and
pop
xor
arpl
push
out
bound
clc
sub
jge
aad
push
or
and
and
xor
das
cwtl
xor
dec
out
sbb
inc
into
dec
int
call
out
stc
mov
mov
cmp
xchg
jae
dec
mov
fs
or
ljmp
sub
inc
xchg
ja
in
sbbb
test
insb
test
mov
and
mov
test
sbb
pop
xor
lods
cltd
imul
insb
sahf
std
and
dec
mov
stc
and
pop
jp
sbb
imull
daa
mov
das
dec
jp
or
push
imul
pop
lds
shll
ffree
ja
mov
adc
push
dec
mov
outsl
ss
jl
dec
mov
mov
scas
add
mov
push
frstor
out
gs
out
pop
jle
mov
fsubrs
test
movsl
dec
std
mov
or
les
dec
stos
addr16
mov
out
test
cmp
push
enter
aad
mov
mov
xor
add
filds
add
movsb
dec
mulb
rclb
repz
fcoml
pop
or
int
arpl
lea
dec
test
std
insl
cmp
pop
dec
fstpl
xchg
stos
test
xchg
in
xchg
and
dec
adc
stc
or
insl
push
pushf
test
adc
sbb
inc
decl
lea
cltd
and
push
popl
in
popf
cwtl
arpl
and
fdivrp
and
adc
fldenv
inc
ds
sbb
lods
push
add
inc
subb
push
jge
dec
ret
loop
xchg
repnz
das
and
mov
lcall
loop
lahf
outsl
daa
out
fiaddl
cs
out
outsb
mov
xlat
or
popa
stos
mov
ds
imul
push
pop
fwait
pusha
and
sbbl
cld
jnp
in
push
ja
fsubs
inc
aaa
mov
mov
cmp
adc
movsl
mull
ja
mov
mov
mov
mov
sbb
add
sub
sahf
and
lret
mov
dec
shll
or
dec
push
inc
push
and
mov
or
arpl
or
jmp
xchg
push
cmp
inc
sub
imul
jp
lods
mov
dec
add
add
popa
inc
mov
sbb
imul
sbb
jae
lods
popa
mov
jne
sub
jno
das
shrl
out
mov
jmp
cs
cmpsb
mov
movsb
repz
xor
or
jno
pusha
test
incb
xchg
dec
test
mov
dec
popa
rcrb
lret
mov
cmp
jno
and
into
push
mulb
and
add
or
ret
dec
xchg
add
adc
mov
es
sub
push
jns
outsl
mov
pop
ror
mov
data16
lahf
push
sbb
mov
lock
mov
subb
pop
cmp
test
adc
in
ror
out
jnp
in
cld
fcoml
sti
pop
xchg
adc
mov
xchg
lods
push
sub
lds
or
pop
add
sbb
mov
push
dec
xchg
stc
add
add
mov
jb
in
lods
cmp
outsl
mov
dec
aad
dec
daa
or
je
ds
cmpl
dec
mov
jns
sbb
sbb
xor
mov
add
jb
pop
adc
mov
pusha
push
shr
mov
mov
lods
dec
push
shrb
lret
mov
xor
cmp
lods
xor
mov
xchg
fcomi
sahf
sti
jecxz
aad
roll
popf
push
cmp
jg
or
popf
push
dec
sub
adc
adc
jne
jne
fistps
out
dec
mov
addr16
jmp
ljmp
std
xor
push
mov
rcl
adc
xor
out
bound
xchg
sar
push
std
push
lods
cmp
lods
sub
sub
pop
add
ljmp
pushl
repnz
inc
pushf
push
pop
lds
clc
scas
leave
pusha
daa
xor
lret
das
mov
cli
and
fdivrp
pop
pop
mov
xchg
out
jno
mov
popa
pop
pop
sbb
jle
sbb
fmuls
inc
and
ds
pop
add
jge
pushf
outsl
pop
mov
push
test
mov
sub
jmp
sbb
mov
addr16
dec
mov
xor
pop
pop
xchg
sbb
cmp
fistl
test
popl
inc
push
lcall
push
sti
mov
lret
mov
pop
dec
mov
mov
mov
xor
mov
ljmp
enter
jae
mov
ret
mov
rolb
cli
inc
sbb
out
or
inc
jg
dec
add
mov
push
mov
cmp
lcall
inc
pop
pop
test
ret
mov
mov
push
fwait
insl
loopne
test
out
fcompl
inc
js
fdivl
clc
pop
jmp
adc
add
aas
shll
adc
mov
adc
inc
dec
pop
fildl
jecxz
mov
test
push
mov
pop
xor
mov
jne
loopne
mov
sbb
shlb
push
mov
mov
out
push
addl
xchg
pop
dec
sbb
or
das
fsubs
mov
jns
jb
nop
nop
scas
in
ret
xchg
ja
mov
pop
fs
mov
popf
add
push
mov
notl
jge
clc
push
mov
cmp
sti
xchg
dec
pop
loope
mov
test
sub
and
sub
and
jecxz,pn
push
gs
imul
jnp
xor
iret
inc
and
mov
cwtl
jns
or
sbb
sub
cmp
leave
cmp
stc
or
test
mov
jns
or
sbb
sub
cmp
leave
cmp
stc
or
test
mov
jns
or
sbb
leave
cmp
sub
sbb
popf
insl
test
pop
insl
dec
pop
jns
int
std
sbb
test
ret
inc
sbb
adc
pop
cltd
dec
mov
push
cmpsl
dec
stos
and
or
cmp
sub
jns
imul
push
leave
cmp
sub
fcomps
enter
call
dec
mov
cltd
dec
mov
push
leave
cmp
sub
fsubs
jmp
mov
sub
sbb
imul
add
pop
pop
or
cli
mov
pop
repnz
jle
pop
add
mov
mov
xchg
or
cmc
shl
movsb
inc
imul
cltd
mov
out
jns
xchg
cmpsl
mov
pop
adc
lds
fiaddl
ja
data16
imul
cmp
jmp
cmp
outsl
mov
fdiv
fldenv
sub
sbb
pop
enter
inc
xchg
dec
or
push
out
sub
les
mov
or
arpl
enter
inc
js
cmp
jno
mov
or
xor
insb
lahf
out
sbb
cmp
fstpt
fwait
cltd
dec
mov
push
leave
cmp
sub
fcomps
enter
call
dec
mov
hlt
sub
ljmp
out
jge
mov
lods
cltd
test
lods
pusha
mov
inc
push
xor
xor
sti
fmuls
fdivrs
sbb
inc
out
xchg
insl
jmp
test
inc
outsl
ss
rorl
pop
aas
leave
dec
std
ds
fstpl
or
cmp
sub
fcomps
enter
call
dec
mov
cltd
dec
mov
push
leave
cmp
sub
fcomps
enter
call
dec
mov
cltd
sub
sbb
fildll
mov
imul
int
bound
sbb
xchg
aam
and
pop
inc
lret
jecxz
outsl
std
xchg
or
shr
inc
lahf
aad
lcall
clc
nop
lods
les
add
sbb
mov
mov
mov
enter
mov
cld
shll
mov
xor
cmp
xchg
mov
push
sub
mov
cmp
rcl
pop
ret
cmp
stc
xchg
lahf
xchg
jno
pop
mov
add
jns
icebp
stos
adc
sahf
bnd
mov
xchg
insl
popa
and
in
mov
fdivrp
xor
ret
fcomps
jns
call
divb
inc
xchg
out
adc
push
push
int3
xor
cmp
cmp
mov
adc
mov
sahf
jo
mov
aad
fwait
sar
mov
ret
pop
out
and
sbb
inc
push
xlat
sub
ljmp
push
add
pop
fnsave
cmp
hlt
push
jbe
push
aaa
add
sahf
outsl
cwtl
xor
loope
inc
test
mov
lahf
adc
xlat
fwait
adc
push
rol
stos
add
repnz
fmull
pop
pop
xor
loopne
shll
out
add
stc
sbb
cmp
push
in
xor
ljmp
repz
clc
addr16
xor
xor
cwtl
add
mov
jge
int
or
add
cmp
jmp
cmpw
div
add
loop
push
sbb
mov
push
push
xlat
movsb
adc
push
shrb
mov
jle
inc
repnz
push
dec
cmp
pop
fdivl
xchg
out
aad
pop
push
fildl
sbb
aam
push
insl
inc
fisubrl
mov
cmpsb
xor
fcmovnu
jmp
ror
std
ja
addr16
sub
push
fidivrl
gs
pop
ds
cs
stos
sar
notb
scas
push
jae
std
mov
cmp
lahf
loope
aas
negb
shlb
lret
out
mov
mov
xchg
mov
pop
jge
sarl
movsl
sbb
ret
test
mov
mull
fmulp
test
test
push
dec
jmp
testb
jl
inc
pop
lock
adc
test
leave
sbb
daa
xchg
push
xchg
pop
je
test
loop
sbb
cmp
scas
subl
pop
xor
lret
mov
cmp
mov
mov
push
push
movsl
or
repz
sub
cmp
popa
es
aas
mov
test
arpl
xor
push
scas
xchg
push
mov
add
cbtw
cltd
cmp
cmp
loopne
addl
xor
mov
bound
sub
mov
ss
in
not
mov
ret
gs
push
sub
lock
xor
dec
lods
cmpsl
cli
or
xchg
sub
out
fisubl
lahf
cmp
pop
lods
push
pusha
mov
mov
sbb
cli
adc
fidivrs
jae
lcall
adcl
aad
sub
test
dec
loope
dec
insl
xor
cs
decb
and
mov
sbb
lret
xlat
lahf
fcoml
pop
mov
push
shll
fdiv
add
jle
insb
push
jo
inc
divps
jmp
sar
int3
imul
clc
pop
push
inc
mov
mov
pop
cmpsb
popf
cmpsb
sub
fs
int
sub
arpl
and
stc
leave
es
shlb
push
mov
adc
gs
push
or
out
out
mov
xchg
in
ljmp
mov
add
rolb
jbe
mov
push
sbb
xchg
jl
xchg
jmp
es
jae
sbb
test
ret
cmpsb
out
rcl
push
sbbb
mov
mov
lret
movsl
adc
sbb
pusha
sub
xor
mull
dec
into
nop
xchg
mov
std
dec
ss
sbbb
jb
cmp
outsl
std
fwait
jno
xorb
aaa
pushaw
mov
arpl
test
mov
inc
cmc
loop
cld
frstor
out
dec
or
daa
jge
leave
pop
add
or
flds
in
sbbl
test
imulb
or
push
or
mov
gs
std
test
sbb
inc
push
in
daa
sahf
mov
out
ss
adc
jg
pop
or
in
push
fdivrs
dec
dec
test
and
call
lcall
leave
xchg
sti
inc
imul
fmulp
ret
nop
dec
shrl
or
and
cmp
push
sub
hlt
int3
sub
cltd
subb
inc
sti
add
xor
es
push
dec
sbb
fwait
mov
pop
addr16
pop
test
ret
and
mov
adc
stos
fs
cmp
add
mov
std
out
mov
xchg
stc
dec
pop
cmpsl
lret
scas
mov
lods
mov
mov
test
jle
mov
cli
adc
or
jae
sti
mov
gs
mov
xlat
imul
aas
int
push
test
mov
shrb
push
cltd
gs
fldt
pop
test
mov
stos
inc
mov
inc
dec
inc
lret
mov
and
cmp
filds
pop
xor
test
je
ret
push
and
addr16
cmp
jp
outsl
push
sub
push
icebp
jbe
repz
jle
or
lret
add
inc
add
mov
push
test
stos
mov
sub
test
cmpl
sub
movsl
mulb
fisttpll
push
pop
jo,pn
or
mov
mov
mov
mov
inc
jns
dec
dec
cmp
popf
mov
inc
lock
dec
pop
lock
xchg
fldl
movsb
test
insl
push
dec
mov
enter
fwait
jb
imul
movsb
mov
orb
or
adc
sbb
leave
jae
out
iret
mov
insl
push
inc
cmp
jg
sbb
adc
inc
into
xlat
dec
imull
cmp
cmc
mov
out
cmpb
aad
in
xor
sti
idivb
jecxz
fisubl
add
xchg
cmp
ja
pusha
mov
jge
sahf
mov
xchg
rcrb
inc
cmp
push
scas
mov
push
shrb
stc
lock
push
mov
push
inc
xlat
sahf
jbe
dec
std
enter
sbb
or
adc
popa
mov
ret
mov
inc
sbb
or
loope
jb
mov
jl
pusha
arpl
mov
inc
cmp
mov
or
xchg
mov
icebp
inc
dec
shrb
and
aad
fsubs
loope
xchg
clc
out
fwait
lods
xchg
xor
cmp
test
pusha
cwtl
es
cld
movsb
cli
dec
push
add
loop
xor
fisttps
ljmp
inc
push
not
lods
and
call
popf
les
stc
icebp
xor
aam
jle
iret
aaa
push
xchg
aaa
fcoms
mov
adc
sub
shr
test
xor
sbb
int3
adc
sbbb
loopne
movsb
xor
popa
in
cs
and
mov
adc
out
jmp
outsb
mov
pushf
clc
outsl
push
xchg
jl
roll
or
fisubs
test
outsb
xchg
int
adc
sbb
cmpsl
dec
js
inc
mov
mov
push
xor
rorb
dec
push
add
and
out
out
jle
xor
jmp
xchg
sbb
bound
ja
popa
add
xor
adc
rol
nop
inc
movsb
fists
sti
xchg
adc
mov
and
lea
cmp
enter
dec
add
xchg
cmp
ret
mov
es
or
sarl
add
and
adc
adc
roll
dec
pop
subl
mov
cmc
inc
xchg
and
incb
fistpll
adc
mov
sbb
out
cmc
pop
jecxz
jge
xor
and
mov
repz
dec
adc
mov
inc
pop
xchg
pusha
loop
pushf
pop
je
adc
jl
pop
push
icebp
int
dec
mov
push
std
push
jmp
cmp
pushf
imul
es
push
jo
mov
dec
push
jl
xor
mov
xchg
loop
jg
jg
stc
dec
in
add
xor
imul
xchg
dec
pop
jns
mov
mov
popf
outsb
inc
jno,pt
out
imul
ret
cmc
stc
push
pop
cmp
sub
xchg
aam
jno
and
sub
and
and
bound
add
inc
mov
inc
dec
xchg
add
out
arpl
and
sub
push
fidivrl
or
leave
inc
jne
jns
dec
addr16
clc
cmp
nop
in
lock
fnstcw
sub
out
pop
cmp
mov
sbb
xor
gs
in
in
sbb
lret
xchg
sbb
sub
mov
and
mov
test
xor
sub
pop
lods
fdivs
xchg
mov
fists
mov
pop
mov
sar
mov
shlb
cli
mov
push
js
xchg
int
cmp
cmp
testb
xchg
inc
les
or
nop
fdiv
xchg
sbb
lds
xlat
cwtl
lret
xor
push
add
push
bound
or
adc
movsb
dec
sti
cmp
mov
lods
outsb
inc
dec
jecxz
call
xor
repz
outsb
or
dec
sub
ror
pop
cmpsb
push
test
push
shr
or
adc
ljmp
and
xchg
sub
aas
int3
mov
dec
jle
ret
loope
insb
dec
je
xchg
fcomps
and
and
inc
test
adc
xor
or
mov
mov
xchg
enter
mov
jo
fsubrp
outsb
pushf
aas
test
dec
inc
push
loope
and
sub
xlat
fdivrs
add
ror
xchg
push
dec
into
hlt
shl
jo
cmp
dec
push
jns
lret
icebp
mov
push
call
repnz
sahf
mov
dec
mov
push
push
sahf
push
lods
xor
dec
or
orb
dec
and
sbb
es
and
leave
cmp
or
jbe
xchg
dec
dec
mov
or
fs
mov
test
or
sti
scas
scas
cmp
adc
jp
push
dec
xor
mov
fsubrs
xor
jp
xor
pop
frstor
push
inc
movl
rol
aas
stos
fwait
mov
mov
movsl
sbb
addr16
or
popa
popa
repz
and
inc
lods
push
mov
jb
dec
mov
aam
bound
xchg
in
popf
push
enter
dec
jmp
pmaxub
or
or
xchg
adc
testb
mov
mov
nop
leave
lods
xlat
inc
stos
xor
fadd
jle
xchg
sbb
push
xchg
xchg
movsb
bnd
fcmovu
insb
ss
pop
js
xchg
arpl
sbb
adc
jecxz
mov
jge
repnz
inc
dec
lret
mov
lret
xor
add
xlat
push
addl
pop
cmp
lods
je
out
imul
gs
jp
scas
sub
bnd
or
and
mov
or
xchg
pop
pop
imul
push
or
pop
int
cmc
cmp
or
xchg
das
ss
jno
push
cmp
in
xlat
xor
cmpsl
aam
cmp
and
in
mov
ret
push
int
and
in
add
repnz
xchg
dec
ret
out
mov
in
insl
mov
cltd
pop
out
arpl
fs
leave
ja
out
out
add
dec
cmp
and
ljmp
in
ffree
stc
jb
sub
jmp
mov
sub
sub
mov
xchg
push
mov
das
mov
mov
pop
jle
dec
xor
ror
mov
push
loope
nop
xchg
loop
cld
xchg
nop
cli
xor
aad
lods
shlb
inc
pop
jmp
stc
dec
pop
add
pop
push
jae
repz
ret
add
pop
enter
sbb
jns
subl
les
and
cmpsb
imul
into
pop
inc
aaa
les
jmp
pop
push
push
fidivs
outsb
dec
std
outsb
sar
sti
cmp
and
lock
lcall
rcrb
in
lods
pop
mov
testb
dec
scas
mov
xorl
cmpsb
mov
jae
rorl
sub
mov
add
cs
and
mov
loop
push
out
cmpl
xchg
cmpb
push
mov
jle
cmp
daa
int3
sbbl
dec
arpl
push
lea
roll
sbb
out
pop
mov
sbb
lret
out
repnz
or
and
sub
cld
jmp
ret
test
xor
jo
xchg
enter
das
imul
xchg
mov
je
dec
pop
sub
push
sbb
mov
insb
jecxz
sub
add
loope
pushf
out
push
daa
js
shlb
subl
stos
insb
rep
adc
arpl
jecxz
icebp
in
dec
ret
xor
pushf
push
iret
dec
mov
sbb
movsl
xor
ss
sbb
ljmp
bound
lock
punpckhdq
lret
test
repnz
jp
add
dec
jae
adc
into
and
mov
idivb
enter
cmpsl
push
dec
jge
push
and
loop
lds
lahf
fisttpl
or
mov
push
jecxz
aaa
iret
mov
dec
xchg
repz
stos
repnz
das
rcll
jmp
fsubr
out
or
bound
gs
pop
pop
or
movsl
pushl
adc
sbb
loop
and
rcrl
push
sbbb
movsl
pop
mov
cli
sbb
sahf
and
lods
cwtl
mov
in
das
cmpsl
bound
pop
cmpsb
jle
filds
jbe
adc
mov
and
xor
js
cwtl
or
dec
into
je
push
es
minps
mov
mov
sbb
popf
cmpsb
xchg
cli
jmp
mov
mov
js
scas
movsb
jno
sub
push
mov
fistl
pop
or
lahf
pop
jge
aaa
push
pop
pop
jns
pop
insl
and
aas
repz
xor
or
xor
addr16
jmp
div
int
jp
stos
cmp
xor
xchg
ljmp
nop
xor
cmpsb
xchg
ss
mov
or
cmp
cld
out
mov
data16
dec
jns
sarb
mov
mov
icebp
or
out
icebp
es
cld
pop
mov
jge
dec
sti
fdiv
stc
in
xchg
mov
jecxz
sahf
adc
les
jae
add
mov
lods
mov
fsubrs
enter
add
loopne
rorb
in
fnstsw
sbbl
mov
sub
dec
stos
sub
jmp
dec
popf
dec
mov
test
and
xchg
cs
bound
jecxz
cmp
xchg
dec
fistpll
out
ret
add
out
rcl
pop
inc
call
fiadds
pop
je
mov
xor
xor
push
dec
scas
test
sub
lcall
loopne
inc
pusha
add
mov
loopne
or
adc
repz
pop
andw
cmp
enter
jns
inc
flds
cld
mulb
mov
pop
ret
mov
or
jb
xor
fwait
mov
insb
shl
mov
jne
jmp
xchg
and
cld
clc
push
enter
test
std
xor
int
fcmovb
pushf
clc
pop
mov
das
popa
es
mov
or
dec
pop
jne
ret
push
xor
push
lahf
arpl
arpl
sbb
cmc
jbe
or
das
jge
scas
je
outsl
jae
shr
insb
loopne
sar
inc
sbb
ss
movsb
adc
nop
test
cmpl
mov
jle
jnp
das
outsl
push
mov
cmp
iret
pop
loope
lret
sbb
mov
and
in
lahf
pop
and
adc
into
outsb
cld
xchg
or
pop
cmc
or
push
or
push
ja
data16
mov
push
mov
int
mov
jge
je
lret
cmpsl
jb
test
lahf
inc
loope
adc
or
icebp
push
push
adc
jmp
dec
lods
dec
jl
aad
pop
push
enter
and
dec
add
push
out
adc
push
test
jp
ds
lret
fldl2e
mov
out
mov
js
outsb
cmpb
insb
push
sahf
mov
sbb
jbe
push
sbb
jecxz,pn
cmp
out
mov
in
and
cmc
into
xor
sar
mov
mov
or
int3
out
insl
xor
lret
mov
out
loop
aas
sbb
sarl
mov
sbb
pop
jmp
xchg
add
lock
insl
dec
mov
fsubrs
cmc
and
or
lods
dec
into
adc
popf
ja
daa
pop
int
push
sbb
fcoms
push
pop
lds
push
out
and
lea
cltd
mov
movsl
mov
adc
js
rcrb
aad
aaa
jge
mov
gs
mov
lahf
xchg
pusha
inc
jae
addb
push
xchg
lock
mov
push
push
xor
in
notb
sub
xchg
cmp
lcall
inc
mov
insl
call
jno,pn
insb
negl
jns
sbb
insl
test
scas
lods
lar
cmpsb
stc
out
sbbl
shl
lret
pop
mov
je
and
mov
pop
push
jnp
jae
pop
cs
sub
cltd
add
cmp
xor
insb
loopne
jbe
repnz
outsl
ror
cmp
sub
inc
jp
out
push
fsubrl
mov
movl
mov
fisubl
jnp
or
movsb
pcmpgtb
pop
mov
jnp
inc
mov
push
pop
add
or
inc
sbbb
adc
mov
jne
cmp
add
mov
dec
add
jb
cmp
fstpl
dec
jb
popf
jmp
sub
jne
movswl
test
rcll
lods
dec
das
call
mov
add
dec
pushf
ds
cwtl
mov
mov
jo
mov
cmpsl
popa
jg
popf
movsl
xchg
repz
enter
dec
inc
push
adc
sub
fdivrl
test
fcmovne
mov
and
lret
lds
pushf
std
jmp
cmp
xor
add
popf
fldcw
push
in
xor
xchg
mov
fs
xchg
sbb
add
addr16
test
insb
pop
mov
pushf
lock
pop
mov
adc
jns
inc
ss
xorl
or
lahf
bound
ret
nop
sbb
out
cld
lret
xorl
pop
mov
mov
stos
stos
mov
mov
jns
loope
inc
dec
xor
gs
mov
sub
ds
sbb
xchg
cmp
jno
or
lods
sub
call
pop
push
call
push
data16
jg
sbb
xor
inc
inc
ljmp
lcall
rcrl
sub
cmpsb
and
sub
add
int3
xchg
popa
or
int3
scas
movsl
enter
push
cmp
adc
mov
and
cmp
shll
add
or
dec
in
mov
lock
mov
int3
mov
scas
dec
scas
mov
lret
addl
outsl
addr16
fsts
sub
inc
hlt
xor
int
fcomps
ret
gs
mov
lret
xor
jge
out
lret
xchg
sbb
add
incb
cmp
mov
mov
out
leave
cmp
add
or
popf
mov
cltd
aas
jl
mov
sbb
dec
dec
gs
mov
mov
or
add
mov
jnp
adc
xor
pop
hlt
sbb
into
pop
mov
pop
mov
mov
in
and
fisttpll
adc
cltd
out
syscall
mov
mov
icebp
jo
mov
sahf
enter
sbb
push
sahf
hlt
inc
into
dec
cmp
mov
stos
add
les
cmp
ds
sub
aad
test
or
js
jno
fdivl
lcall
outsl
pushf
cmp
push
mov
cmp
add
sbbl
call
ja
xor
jge
lcall
pushf
sbb
xchg
xchg
xchg
js
add
pop
sub
and
nop
cmpsb
sbb
fistps
sbb
popf
fcoms
or
add
ret
jb
fistpl
pop
or
cmp
fdivrs
out
rcll
mov
xor
fstps
mov
mov
push
or
aaa
mov
out
call
rclb
sbb
int3
loop
movsb
xchg
scas
sbb
xchg
mov
jo
lds
cmpsl
imul
cmc
jge
ret
mov
push
leave
cmp
sub
fcomps
enter
call
dec
mov
cltd
dec
mov
push
leave
cmp
sub
fcomps
enter
call
dec
mov
popf
dec
mov
push
leave
cmp
sub
fstps
enter
jmp
dec
mov
cltd
dec
mov
push
dec
mov
out
mov
out
roll
mov
xchg
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
push
loop
push
jp
add
jae
pop
pop
push
daa
lcall
out
xchg
lcall
push
pop
inc
push
jp
or
sbb
sub
cmp
lcall
out
xchg
incb
nop
push
fiaddl
ja
sbb
push
pop
push
aaa
ret
jg
mov
call
or
sbb
sbb
in
in
cmp
stc
dec
fxch
in
jno
push
push
fisttps
mov
or
cwtl
pop
xchg
in
add
mov
cmp
loop
imul
aaa
negb
cmovp
cmp
sbbb
lret
mov
and
sbb
pop
inc
pop
dec
in
cmovb
les
mov
in
sub
mov
pop
std
cwtl
js
dec
inc
sub
mov
mov
cmc
push
cltd
adc
jb
or
mov
jns
lcall
rcrl
adc
sahf
xchg
mov
mov
cli
out
sbbb
jns
pop
inc
push
push
or
pop
pop
sub
andb
xlat
dec
xor
in
ljmp
into
cmp
sub
cs
adc
fs
pop
cmp
ja
mov
mov
lahf
fwait
mov
fidivs
rolb
ja
adc
inc
inc
dec
daa
repnz
fwait
mov
xchg
xchg
mov
hlt
in
sti
idivl
push
imul
pop
sbb
sub
cmp
lret
ljmp
xchg
push
pop
inc
push
jp
or
sbb
sub
cmp
lret
ljmp
xchg
push
sahf
push
ret
and
jne
dec
dec
pop
loope
xor
and
add
or
bound
xchg
shlb
out
notl
push
jb
jle
xor
and
flds
push
hlt
stc
int
gs
push
clc
popa
inc
inc
in
das
push
ja
mov
sahf
xor
fs
outsb
lea
push
cmp
push
sahf
mov
xchg
adc
and
outsb
xchg
lods
or
in
daa
push
pusha
je
or
scas
dec
shll
xchg
adc
iret
jae
xor
ds
enter
negl
jp
and
mov
rclb
std
mov
in
mov
fcompl
and
push
lahf
push
xor
test
mov
js
enter
mov
or
jg
mov
out
ror
jne
inc
mov
fsub
sahf
stos
stc
int
sbb
sub
jb
pop
xor
xor
mov
fwait
cs
subb
mov
cwtl
mov
in
push
pop
push
in
xchg
aam
repnz
fists
subl
mov
scas
add
jecxz
add
xchg
jb
ds
aam
pop
add
test
ljmp
sub
pop
xor
dec
cmpsl
lods
notl
mov
dec
orl
xchg
loope
cmp
cli
mov
fchs
in
push
mov
cmp
mov
scas
test
fldl
es
xchg
cltd
fdivs
dec
shrl
xor
addr16
pop
mov
add
dec
scas
xor
mov
xchg
dec
mov
data16
jns
mov
adc
popfw
push
inc
inc
aaa
test
mov
jo
xor
cmc
xchg
push
dec
das
das
pop
ret
scas
xlat
sbb
jmp
hlt
leave
fisttpll
fisttps
xor
xchg
push
cmpsl
ljmp
mov
adc
adcb
pop
mov
sbb
loop
pop
ss
pop
push
inc
je
xor
pop
push
ja
push
out
in
push
or
lret
aam
je
cmp
pusha
mov
popa
and
lret
dec
jmp
or
pushf
sub
in
lods
cmp
jno
stos
into
hlt
sub
push
ret
sub
outsb
test
mov
rclb
shrb
cmp
into
jno
icebp
gs
pop
pop
sbb
add
mov
xor
clc
leave
adc
mov
mov
mov
ret
jne
cld
adc
jp
adc
rclb
and
sub
mov
jmp
stc
xlat
push
mov
sbb
jo
loop
and
je
xlat
jae
aas
outsb
pop
sti
push
ror
and
xorb
fistps
lods
aas
push
cmpsl
adc
orb
push
adc
sub
mov
punpckhbw
pop
xchg
cmp
mov
mov
and
adc
cmp
cltd
jmp
xor
arpl
pop
decb
dec
movl
xchg
adcl
xchg
and
ficoms
clc
fsubr
xor
sahf
andl
sub
lahf
cmp
add
popa
lock
fimuls
cmp
pop
adc
push
insl
gs
fs
sbb
lcall
mov
call
divl
sbb
mov
pop
inc
xor
lea
out
jbe
inc
add
mov
adc
fldcw
or
in
mov
cmp
out
fwait
movsb
push
jmp
or
xor
aad
sbb
rclb
mov
inc
add
xchg
push
clc
push
std
add
or
pusha
leave
mov
sub
dec
push
jb
sub
loop
mov
ret
push
add
in
cmpb
mov
mov
test
ds
sub
or
mov
aas
sti
mov
add
or
ds
pop
movsb
xor
ret
scas
mov
cli
and
lods
mov
xchg
or
outsl
inc
mov
movsb
push
sahf
add
cmpsb
dec
fcompl
out
cs
push
dec
sbb
push
clc
dec
sbb
sub
insl
pop
out
rorl
int
lahf
mov
adc
test
movsl
add
push
cmp
jo
cmpsb
gs
sub
pushf
cmpsl
cli
icebp
test
int
mov
shlb
push
jno
cmc
mov
imul
mov
mov
in
jge
ret
in
xchg
movsl
dec
in
pop
lcall
or
in
xchg
ret
pop
addr16
fsubs
sti
leave
push
sub
mov
xchg
addl
loope
jge
or
push
sbb
out
call
dec
fsub
lea
jns
mov
push
movsl
xchg
push
push
fsubs
aaa
mov
arpl
and
xchg
mov
dec
clc
out
sbb
mov
mov
fwait
data16
lea
push
lahf
adc
mov
mov
shlb
leave
and
std
mov
sub
xor
adc
leave
xchg
in
or
fisubl
add
jno
call
idivl
push
lret
aad
shll
xorl
jb
xchg
jno
inc
fcomps
imul
out
pop
xchg
orb
xchg
cmp
adc
and
push
rcl
lea
pop
lret
sub
and
pop
pop
adc
and
nop
mov
adc
lods
lods
push
aad
sbb
icebp
pop
or
aad
push
insl
inc
mov
ret
pusha
push
aad
pop
adc
das
pop
jg
adc
push
cmp
xlat
je
jecxz
movsl
inc
and
adc
cmpsb
add
pop
pop
mov
movsl
add
repnz
outsl
popf
nop
jp
rcrb
enter
popf
xchg
fdivl
loope
xchg
aas
xor
mov
jle
outsl
dec
xchg
sbb
sti
int
jno
xchg
pop
jmp
inc
pusha
test
mov
scas
roll
jmp
loop
add
add
rcrl
test
lock
and
push
dec
xlat
and
cmp
clc
mov
ficomps
insb
cmp
pop
andb
jle
fistl
lret
jb
xor
movsl
pop
in
sbb
fnstsw
sub
push
sbb
lcall
jae
dec
adc
int3
lods
dec
shrb
or
into
mov
pop
dec
lret
ret
lods
xchg
shrb
test
shr
push
inc
outsl
out
shlb
sbb
fs
in
mov
insl
xchg
into
jns
jo
pop
cmp
popf
daa
xchg
dec
cmc
push
rorb
xchg
cmpsl
bt
inc
lea
es
negl
mov
xchg
inc
inc
mov
sub
dec
push
and
pop
shll
jmp
push
icebp
add
sbb
scas
lods
jae
jp
dec
add
lret
jecxz
jecxz
imul
adc
pusha
out
xor
bound
std
nop
jno
dec
inc
fsubl
mov
test
pop
lret
sbb
add
test
lods
inc
fidivrl
ljmp
push
fs
xchg
popa
rcrl
out
jae
lahf
jo
push
lock
push
enter
sbb
dec
push
jmp
ret
lods
mov
rep
inc
jl
pop
cmpsl
cwtl
mov
dec
daa
out
ljmp
add
sti
sahf
movsb
push
out
mov
lods
sub
sbb
ret
dec
aaa
add
adc
or
sti
imul
pop
pop
mov
sbb
inc
dec
cmpl
arpl
imul
sbb
or
lds
pop
jnp
pop
xchg
xor
cld
mov
cmp
ja
xor
inc
xorl
mov
sti
scas
push
push
adc
mov
nop
mov
out
lret
aaa
pushf
jbe
je,pt
sbb
xchg
sub
jbe
mov
test
std
sub
shll
mov
std
mov
pop
jae
mov
or
mov
add
fbstp
shl
aam
pop
mov
pop
dec
cmp
inc
std
lods
push
enter
and
addr16
mov
dec
hlt
aad
fcoms
out
test
push
cmp
daa
ficoms
cmp
mov
insb
cltd
add
pusha
adc
and
add
rorb
add
not
fisubs
je
lock
mov
out
and
in
xchg
or
jp
dec
faddp
mov
lods
daa
icebp
jae
jp
push
cld
jmp
test
pop
pop
scas
das
bound
or
negl
mov
xbegin
insl
cld
push
mov
js
fiaddl
inc
push
lea
movb
adc
out
jns
leave
lcall
xor
sbb
xchg
lds
arpl
fidivrl
addr16
sahf
hlt
push
mov
ja
scas
push
cmpsl
sbb
daa
mov
mov
out
mov
loope
mov
es
clc
test
mov
sub
pop
enter
mov
or
mov
std
mov
mov
inc
rorb
inc
mov
adc
fsubl
mov
mov
jge
or
xchg
mov
ret
subl
jbe
in
adc
mov
pop
sbb
data16
addl
shr
cmp
and
mov
out
jae
into
or
adc
repnz
or
shll
and
lods
and
push
test
mov
aam
or
fdivl
mov
adc
sub
orl
cmc
pop
sbb
jo
adc
inc
mov
mov
push
idivl
mov
out
andb
xor
cmp
sarb
mov
addr16
and
and
push
mov
outsb
xor
dec
and
test
mov
sbb
mov
ja
inc
mov
pop
fisubrs
fcomps
insl
loope
jbe
jp
push
xor
inc
adc
out
daa
lcall
cli
mov
mov
inc
popa
push
adc
hlt
jge
notl
jmp
call
loop
mov
mov
adc
out
es
rclb
push
mov
or
push
cmpsl
fisubrs
test
jg
mov
sub
inc
clc
clc
mov
ret
in
inc
and
lea
or
add
push
mov
pop
xor
cltd
dec
lea
jge
test
pop
jge
ss
fdiv
pop
jno
ljmp
shrb
ja
xor
jle
xor
fisubs
sbb
cmp
imul
fwait
cwtl
icebp
xor
or
lock
and
ret
das
jbe
aad
mov
adc
dec
pop
aas
enter
or
test
jg
test
dec
sahf
cmp
popa
adc
stos
sub
lcall
xchg
mov
lahf
popa
arpl
mov
and
adc
xor
jle
xacquire
xchg
aam
fcoml
mov
lahf
loop
xchg
lds
and
adc
jecxz
addr16
dec
leave
rep
jnp
fstpl
jne
scas
fildll
rorl
mov
cmp
pop
mov
jno
jg
ljmp
adc
repz
and
in
jnp
push
roll
xchg
mov
fsts
xor
mov
xchg
xor
mov
aas
cmp
mov
mov
outsb
lods
mov
cmpsb
mov
das
in
push
roll
pop
outsl
xor
adc
add
mov
pop
es
push
iret
jmp
aaa
inc
mov
jg
lock
pop
fildll
dec
je
jle
popa
push
push
jo
lock
bound
mov
adc
addr16
mov
movsl
adc
in
inc
js
ds
cmpsl
add
xchg
xor
xlat
in
sbb
push
cld
cmp
or
jmp
push
jno
add
bound
bound
sub
jne
push
insl
nop
mov
sarb
xor
ret
pop
stos
push
mulb
sbb
push
or
mov
mov
pop
push
inc
push
push
mov
in
int3
stc
popa
sbb
add
sub
pop
jb
pop
sbb
pop
or
js
daa
jl
cmp
gs
cmc
les
out
cmp
in
dec
sbb
mov
dec
ficoms
fisttpl
lret
test
test
ret
xor
sbb
mov
or
or
test
xlat
lret
cld
xor
lds
popa
sbb
cmc
addr16
xchg
in
sbb
pop
jmp
sub
pop
mov
jns
lods
fidivs
push
sbb
inc
xchg
pushf
jnp
sbb
loop
and
dec
push
mov
pop
pop
pop
movsl
pop
aaa
cmp
jecxz
test
pop
jns
int
pop
in
bound
cmp
sub
add
inc
popa
push
fstpt
xor
xor
sub
adc
je
int3
fisttpll
push
jb
or
lods
jmp
mov
dec
push
mov
lock
psubusb
rorl
cmpsl
pop
aaa
pop
dec
imul
pop
jge
xor
ds
pop
je
cmp
sub
sbb
ss
xchg
test
iret
fstpl
adc
xlat
shl
lds
scas
aam
push
mov
cli
lds
imul
icebp
xlat
xchg
icebp
and
sti
inc
arpl
mov
pop
jmp
lea
cs
sub
test
mov
jo
cmp
gs
bound
sahf
pop
xchg
call
mov
push
mov
lea
movsb
ret
and
sub
fstpt
vandps
jno
adc
mov
sbb
dec
mov
xchg
add
rorb
cli
dec
xchg
add
cwtl
sahf
sbb
cli
pop
or
es
and
cmp
in
add
mov
fistpl
out
jg
leave
mov
fidivrl
xor
sbb
in
pop
sub
out
mov
push
add
dec
sbb
ret
scas
mov
aad
pop
ror
push
cmpsb
or
cld
add
je
lea
insl
lret
pop
pop
mov
into
jo
inc
gs
inc
insb
xor
stc
cltd
pop
loope
jae
dec
test
iret
sub
sub
cmpl
addps
xorl
add
jg
jecxz
pop
jnp
js
xchg
out
adc
sub
mov
xor
stos
pop
cmp
cltd
add
ret
xor
addb
jg
fstpt
mov
cld
andl
mov
aaa
inc
insl
arpl
jmp
ret
and
pop
outsb
ret
mov
repnz
mov
xchg
push
push
sarl
dec
cmp
stc
jae
cmp
xor
or
add
mov
or
mov
daa
in
or
cmp
ret
sahf
sbb
test
dec
sbb
sbb
outsl
push
mov
sahf
fwait
mov
push
push
js
jne
push
cmp
test
pop
push
adc
test
mov
test
add
lahf
pop
out
jae
addl
stc
outsl
sbb
mov
jle
sbb
jbe
loopne
mov
pop
lods
sub
ret
pop
sbb
dec
mov
imul
aaa
rcr
inc
jle
or
cld
xor
lcall
mov
dec
push
push
pop
loopne
sbb
shl
sbb
cmp
xchg
shlb
xchg
or
movsb
pushf
rorl
lahf
iret
stos
lcall
sub
jbe
xchg
cmp
mov
push
jb
sti
in
pmullw
or
icebp
ret
imul
pop
jmp
dec
push
mov
add
dec
and
inc
punpcklbw
outsb
test
and
sti
shlb
rcll
scas
out
nop
movsb
sbb
je
pop
out
rcl
int3
mov
add
pop
mov
notb
xor
popa
mov
mov
lea
adc
test
mov
loop
dec
adcl
sti
lret
in
repnz
cmp
jo
xchg
mov
lret
xchg
call
leave
add
call
int3
sub
inc
lods
negl
outsb
inc
or
xchg
xchg
int
repz
xor
adc
pop
jle
inc
bound
stos
lds
push
imul
or
inc
sub
adc
insb
or
cld
das
mov
sub
mov
mov
sub
fnstsw
testb
sbb
cmp
jo
push
push
mov
push
fs
aad
xor
sub
mov
or
push
sarb
icebp
xchg
aas
or
rcll
sahf
mov
jg
or
pusha
mov
insb
sahf
insb
push
insl
adc
pushf
adc
adc
inc
sub
xlat
add
sub
inc
int
add
subb
xchg
cmpsl
fmuls
xchg
jle
rcr
xchg
test
dec
out
out
dec
movsl
adc
test
xchg
xlat
pop
xlat
leave
sbb
rorl
cmpsl
movsb
and
into
and
insb
xor
mov
pop
mov
call
push
jecxz
add
out
push
test
fcoml
mov
insl
lods
and
or
mov
dec
out
pushl
add
scas
cmp
mov
xchg
fidivs
jbe
arpl
pop
test
popf
xchg
cmp
mov
pushf
scas
ljmp
addr16
shr
stos
or
mov
mov
data16
cmc
push
push
cmp
nop
js
insl
add
ficompl
cld
mov
dec
mov
mov
mov
jp
cmpsl
mov
push
lock
lcall
in
scas
fnstenv
xchg
push
jg
xlat
dec
lahf
push
repnz
icebp
imul
ss
xlat
mov
sbb
jo
and
pop
jmp
push
lds
pop
stos
mov
jmp
clc
into
xor
mov
mov
or
push
xor
push
sub
dec
mov
pusha
xchg
cmp
addr16
sub
out
xchg
fs
int3
adc
imul
daa
enter
xchg
mov
lock
or
inc
cmp
gs
xor
lahf
ja
mov
lods
mull
dec
daa
andb
sub
xchg
fildll
mov
mov
rclb
dec
and
fcoms
xchg
dec
ss
sub
jg
outsl
sub
dec
scas
and
mov
add
fstpt
pop
jae
xor
dec
add
pop
je
jp
jne
cmp
pusha
push
mov
and
cmpsb
sbb
xor
pop
sub
bound
sar
sub
inc
enter
in
xor
outsb
imul
out
sbb
mov
dec
jge
cmpsb
cmpsb
jno
push
adc
cli
add
ret
jne
clc
jno
or
add
sub
dec
lea
dec
pop
add
jo
cmp
jbe
fisttpl
sarl
mov
mov
test
lock
scas
inc
loopne
test
sub
lea
mov
mov
pop
pop
sub
iret
ds
pop
dec
es
int
fidivl
cld
push
mov
xchg
cli
sti
cmp
push
mov
mov
jge
mov
pop
ret
sub
pop
push
cli
sub
jmp
sub
iret
outsl
out
cs
sbb
bound
cmp
aad
aad
aad
aaa
sub
cmp
repz
js
idivl
in
ficoml
mov
int
rorl
push
loop
jno
mov
les
cmp
and
sub
inc
push
notl
pop
cmpsb
int3
mov
dec
das
jnp
xchg
pop
inc
in
xchg
js
jb
xchg
or
lods
cmp
repnz
out
shrb
pop
xor
jl
ret
push
inc
xor
sub
xor
and
push
mov
mov
daa
lock
or
and
jbe
insl
cmc
dec
mulps
inc
sub
cmp
std
gs
and
xor
dec
sub
adc
mov
and
xchg
mov
inc
pop
xor
ljmp
insl
pop
pop
aas
pop
fiadds
iret
enter
sbb
cltd
xchg
dec
mov
sbb
cwtl
lea
cmovge
inc
stos
mov
pop
popf
push
in
repnz
sub
jmp
test
fsub
mov
pop
add
orl
jnp
adc
and
sbbl
push
lods
sbb
lcall
push
js
divl
pop
and
pop
fldt
push
or
popa
sub
or
mov
add
mov
cs
cmp
loop
cmpsb
or
ds
adc
scas
xor
and
add
xor
fdivrl
lods
insl
push
ret
rcll
stc
push
enter
sbb
inc
nop
cli
cmc
cs
or
sbb
sub
cmp
lret
ljmp
xchg
push
pop
inc
push
jp
or
sbb
sub
cmp
lret
ljmp
xchg
push
pop
jp
jp
or
push
xchg
aaa
cmp
into
push
fcmovb
jecxz
out
xchg
addl
push
jbe
loop
push
or
or
sub
mov
insl
inc
idiv
nop
std
pop
adc
dec
inc
pop
lahf
xchg
leave
adc
mov
or
stc
push
jmp
pop
mov
outsl
mov
pop
scas
dec
fistpll
iret
movsl
lcall
out
jge
stc
bswap
aas
fldcw
leave
lahf
dec
test
lahf
jmp
imul
imul
adc
es
push
xchg
mov
or
add
mov
push
inc
mov
jle
rclb
out
mov
inc
or
fsubrl
xlat
repnz
jecxz
push
cmc
and
iret
aad
pop
adc
fmull
fldenv
cwtl
loop
iret
js
insb
mov
push
adc
sbbb
pop
insb
aas
push
out
inc
setns
test
lahf
mov
scas
icebp
clc
cmp
inc
jp
out
notb
in
inc
xor
cld
jno
fisubl
outsl
sbbl
iret
insb
jl
stos
or
stos
pop
stc
mov
ljmp
bound
and
sbb
pop
out
cmc
dec
stc
incl
ret
cltd
out
or
mov
cmp
sub
ret
out
mov
jg
das
aas
leave
das
sbbl
outsl
out
sub
imul
dec
mov
insb
pop
mov
push
mov
sbb
sub
cli
cmp
sub
cmp
insb
fists
sbb
pushf
pop
mov
pop
jmp
sbb
cli
das
rorb
ret
sub
sbb
or
stc
psubsw
fldcw
leave
pop
mov
outsl
mov
pop
scas
dec
fistpll
iret
sub
sbb
or
stc
psubsw
fldcw
leave
pop
mov
outsl
mov
cli
andb
int
adc
sbb
cmp
cmpl
ds
dec
xlat
fs
add
outsb
mov
imul
and
jp
jp
jae
ret
out
out
ljmp
out
xchg
jg
xchg
xchg
jge
fdivs
cmp
jle
outsl
push
cmp
mov
and
sarb
adc
or
adc
shll
int
out
jg
mov
inc
mov
lcall
repnz
jb
dec
xlat
out
mov
sub
xchg
sub
int
jbe
cltd
xor
jp
movsl
jns
shll
rcll
add
das
loopne
pop
dec
jmp
jns
js
ret
test
sub
test
mov
lock
push
and
lret
iret
push
and
ret
xor
in
or
mov
insl
jnp
add
dec
mov
mov
loop
inc
or
or
lea
clc
add
cmpsl
sbb
outsl
push
lods
addr16
mov
in
mov
inc
pop
pop
adc
mov
pop
dec
adc
pop
jb
loop
rol
out
daa
cmpsl
jns
movsl
fidivs
xchg
test
xchg
push
add
call
pushf
dec
ficoml
xlat
fiadds
gs
dec
arpl
iret
ja
sub
jge
es
inc
pop
and
les
flds
nop
push
add
cld
cld
roll
mov
in
call
lock
cltd
testl
push
ss
jge
xchg
pop
mov
add
popf
mov
lahf
cli
sbb
adc
push
les
leave
int
xor
div
mov
cmc
pop
nop
pop
mov
push
inc
arpl
sti
ds
jp
pop
mov
xchg
rcrb
push
mov
sub
clc
dec
xor
jbe
andl
pop
sbb
sbb
mov
out
cmc
sub
pop
shll
inc
repz
jle
pop
es
or
cmp
add
mov
pop
aas
cwtl
mov
insl
adc
arpl
mov
dec
test
bound
cmp
adc
sti
add
and
sbbl
sbb
rcr
sub
push
jmp
outsl
std
or
mov
mov
sub
cmp
icebp
push
negb
add
mov
xlat
imul
out
fiadds
loop
mov
ss
test
and
mov
lea
lods
pop
push
cmc
stos
cmp
cli
gs
pop
cmp
sub
scas
test
cmp
fildll
fbld
mov
lods
inc
sbb
cld
aad
imul
dec
aas
aas
mov
mov
adc
insb
inc
xchg
jmp
or
mov
xchg
inc
dec
lock
pop
or
sub
movsl
and
adc
push
xor
rcrl
cld
lcall
out
jo
or
adc
pop
cmc
imul
cmp
imul
jno
pushf
jns
sub
pushf
pop
pop
xor
into
push
arpl
mov
pop
int
iret
push
push
scas
push
bound
xor
pop
out
inc
or
repz
pop
leave
jp
pop
fcoms
inc
inc
rorl
add
xor
data16
mov
fwait
test
mov
aaa
push
push
or
insb
mov
sbb
setb
sbb
cwtl
leave
std
cmpb
ret
in
or
pop
jg
ds
lahf
mov
js
sub
jg
mov
jl
nop
mov
movsl
mov
aad
stos
and
test
sbb
shr
hlt
pop
test
xchg
cmp
fbstp
push
xchg
or
inc
fs
jb
xchg
cli
in
add
pop
fists
pushf
nop
loopne
add
push
loope
aas
clc
fsubrl
dec
add
je
push
push
xchg
fdivrs
pop
or
js
mov
mov
repnz
pushf
adc
dec
cmp
pop
dec
push
add
in
bound
mov
cmp
into
sbb
orl
rorb
add
sub
imul
int3
shll
inc
push
ret
sub
movsl
int3
scas
jnp
adc
xchg
jmp
push
adc
outsb
xchg
fidivl
test
and
xchg
xchg
scas
nop
sarb
cmp
cmove
adc
pop
cmovg
nop
mov
pusha
popf
stc
cwtl
xor
mov
or
jecxz
cmpsb
push
scas
pop
jo
mov
popa
add
mov
lcall
sbb
and
cltd
sbb
lahf
mov
jns
mov
imul
or
hlt
fcmovne
scas
test
or
pop
fisubs
sub
pop
sbb
lcall
mov
push
dec
xchg
and
pop
fldcw
rcrb
jb
inc
add
test
ret
xchg
mov
mov
movsl
pop
sti
jb
ja
call
das
mov
jbe
pop
movsl
mov
jl
shll
loop
mov
xor
ljmp
mov
or
gs
pushf
cmp
ljmp
shll
or
dec
or
ljmp
test
adc
sbb
bound
inc
sub
push
and
add
enter
mov
mov
inc
inc
in
popa
lea
lock
cwtl
cmp
test
imul
cwtl
cli
pop
or
mov
ret
mov
dec
je
jae
adc
adc
cltd
adc
je
push
cmp
mov
popf
sub
repz
lods
loope
jno
lods
mov
jle
mov
sbb
push
add
sbb
inc
lock
andl
repz
mov
daa
rcr
repnz
fbld
mov
out
daa
mov
negb
sub
popa
insb
add
in
push
inc
enter
imul
pop
stos
ss
stos
mov
mov
pop
out
imul
or
push
imul
outsl
lret
imul
pop
repz
sbb
push
push
or
hlt
dec
mov
xchg
movsb
cld
pop
arpl
mov
mov
add
sbb
and
mov
inc
inc
leave
aam
pusha
fidivs
aaa
and
movsb
std
js
add
cltd
js
aas
dec
cltd
pop
jge
lods
adc
mov
jbe
cwtl
movsb
mov
xor
jle
cmp
add
mov
ds
js
mov
mov
and
jle
mov
dec
jmp
fldl
scas
sbb
aad
fidivs
scas
inc
xorps
mov
in
test
andb
in
and
pop
fscale
and
mov
push
mov
test
arpl
push
mov
stos
enter
mov
ret
in
test
dec
movsb
cmpsb
add
loop
xchg
into
fnsave
cmp
cmp
pusha
pusha
dec
mov
pop
inc
iret
mov
rcrb
stc
leave
sbb
sbb
and
iret
pop
dec
mov
fcomp
in
xor
loope
adc
push
ljmp
push
outsb
mov
ds
push
daa
popa
xor
add
hlt
out
mov
fcomps
push
and
cwtl
cli
sub
cmc
add
dec
adc
rcrl
in
js
xchg
ljmp
or
enter
pusha
and
cltd
std
xchg
outsl
mov
aam
roll
or
inc
push
dec
fs
xchg
push
mov
sbb
js
aaa
outsl
inc
cwtl
int
rol
jae
pop
push
push
sub
cmp
sbb
xchg
test
je
push
into
inc
or
dec
imul
mov
jmp
rclb
inc
sub
xchg
and
add
enter
mov
fs
xor
mov
scas
add
icebp
jb
inc
pop
and
sub
xor
dec
and
push
aam
rep
mov
std
sub
mov
int
and
aas
ss
dec
std
inc
imul
push
stc
pop
pop
or
push
add
xchg
adc
add
pop
mov
xchg
adc
add
insl
out
push
mov
cmp
in
add
pusha
mov
push
push
cmpl
jge
and
mov
scas
int
jl
icebp
add
stos
pop
enter
dec
nop
adc
add
cmp
loopne
sub
insb
jg
sahf
repz
xchg
es
popa
sub
fwait
mov
jle
mov
mov
jmp
or
ja
mov
push
dec
xor
ljmp
adc
pop
and
adc
lods
sbb
push
loopne
jno
shr
clc
and
pop
leave
int3
mov
rclb
jbe
fcmovne
cli
xor
mov
int3
sub
sub
adc
pop
xlat
cmpsb
hlt
daa
sti
mov
add
mov
fidivrl
out
xchg
dec
enter
push
jns
pop
and
ds
aas
dec
dec
pushf
inc
insl
call
bnd
sub
in
pushf
int3
mov
jg
nop
adc
add
gs
ror
rcrb
outsb
cwtl
movsb
cli
lret
out
inc
imul
sub
addr16
je
out
scas
xchg
cs
add
addr16
dec
cmp
hlt
addb
sbb
inc
lahf
mov
sub
leave
ds
rorb
fwait
idivb
js
insl
push
push
xor
pop
xlat
mov
lret
xchg
fistps
mov
in
adc
cmpb
enter
pop
and
int
and
mov
jbe
inc
push
leave
xor
repnz
adc
rcr
xor
out
mov
sub
cmp
faddl
pusha
je
mov
push
stc
push
clc
dec
aas
pop
pusha
cltd
imul
jne
cmpsb
fs
xchg
mov
xor
push
stc
push
or
je
imul
inc
cs
jg
push
lock
fcoml
inc
mov
int3
inc
into
inc
stos
pop
div
jne
aaa
jle
jno
sti
addr16
dec
fs
lahf
loope
push
jno
push
lret
mov
jnp
je
int3
xchg
iret
in
pop
loop
cwtl
popa
xor
xchg
in
add
cltd
xchg
stc
xor
dec
fistl
idiv
loopne
movsb
jecxz
aam
mov
pop
hlt
xorl
or
aam
or
adcl
dec
mov
repnz
clc
ss
push
xchg
pop
push
push
pop
pop
cmp
mov
stc
shl
dec
mov
jg
test
jle
cli
jge
lods
inc
daa
push
roll
shll
pusha
fs
ljmp
push
call
add
aas
adc
mov
mov
lds
sub
loop
sub
ja
ds
jno
call
adc
sarl
add
or
lods
add
pop
and
imul
dec
lds
clc
fisttpl
pop
dec
push
push
pop
push
ja
pop
xor
sahf
xor
repnz
push
hlt
mov
pop
xchg
and
inc
nop
popa
fs
xor
and
xchg
jnp
mov
pop
mov
pop
iret
ret
ret
sbb
cs
std
mov
xchg
mov
add
gs
out
cmpsb
or
insl
push
in
imul
or
lcall
dec
dec
pusha
jg
ds
dec
push
daa
dec
pop
mov
xor
mov
nop
push
mov
and
xor
adc
int3
je
in
repnz
insl
mov
jno
repnz
fs
xor
inc
mov
inc
out
mov
scas
dec
shll
cmp
push
xor
cmc
xchg
jne
scas
jge
xorb
sub
insb
xchg
mov
lock
xchg
cmc
loope
lret
mov
pop
mov
cwtl
shll
lds
mov
lcall
lods
decl
or
inc
popf
int
mov
aas
xor
aaa
jmp
stc
fwait
jmp
out
mov
cmp
pusha
xor
sahf
imul
es
out
dec
jne
subb
mov
dec
pop
mov
mov
ret
lahf
cltd
cmp
add
push
insb
sbb
pusha
popf
repz
xchg
das
in
into
jecxz
pop
push
sar
mov
mov
popa
arpl
and
outsb
pushf
movl
or
aad
loopne
dec
cltd
aad
mov
or
ljmp
sbb
int
mov
jp
adc
test
pop
mov
cmp
sysenter
xchg
pop
push
decl
cwtl
adc
sti
xchg
fs
inc
or
pop
mov
mov
cli
jmp
mov
sub
into
add
mov
sub
pop
mov
notb
and
pop
mov
mov
xchg
add
test
mov
fidivs
aad
jns
divl
xchg
pop
push
dec
ds
jmp
adc
negl
and
xchg
jb,pn
in
lcall
sbb
mov
sub
sbb
pushf
xchg
js
adc
sbb
mov
sbbb
dec
jb
imul
test
sub
aam
push
xchg
es
iret
test
cmp
lds
test
aam
push
movsb
adc
push
cmp
ljmp
stos
stos
popf
fyl2x
xlat
ja
arpl
add
iret
or
std
pop
push
test
cld
pop
rolb
push
ja
shl
xor
aad
into
ss
or
adc
adc
cmp
nop
adc
imul
inc
inc
adc
add
inc
xchg
popa
lods
in
lods
icebp
cmp
mov
fisubrs
notl
mov
mov
es
lea
mov
int3
imul
pop
jno
xor
push
sbb
loopne
aaa
movsl
or
push
mov
pop
mov
push
pop
pop
dec
fistpll
jo
ds
push
inc
cmpsl
testl
loope
stc
addl
push
mov
push
sub
shr
sub
rcl
test
pop
jb
pop
fnsave
insl
test
out
repz
dec
jl
cmpsb
pusha
jne
ja
movsb
dec
pushf
popa
mov
inc
adc
or
lods
mov
test
addr16
xchg
jl
fistps
mov
xor
leave
cmp
push
push
sti
or
sub
aaa
cli
arpl
push
sbb
ljmp
lahf
pop
ja
scas
ljmp
leave
jae
jge
fbld
pop
dec
mov
add
ja
and
int
repnz
sub
xchg
push
pop
int3
sub
dec
testb
cmp
test
ds
mov
pop
jge
jge
mov
cmp
loop
outsb
push
xchg
pop
push
loopne
adc
sub
fisttps
pop
jae
mull
jae
test
xchg
and
jl
mov
int3
xchg
push
in
loopne
test
call
arpl
test
loop
cmp
call
rcl
sti
mov
mov
out
and
and
jns
adc
lret
icebp
push
popa
jp
inc
lds
in
mov
or
cmp
fs
lock
je
inc
out
push
xor
sbb
hlt
std
dec
sub
mov
cmp
out
aam
mov
cli
pop
rorl
sub
cli
call
lret
push
out
loopne
es
rcll
jl
add
xchg
sbb
jp
pop
clc
lahf
loop
push
jae
mov
icebp
addr16
call
test
aam
mov
aam
mov
cwtl
inc
enter
sbb
das
push
cmp
and
pop
mov
outsl
fstl
jecxz
jle
mov
jmp
mov
out
in
in
push
xchg
pop
mov
cs
push
push
xchg
xlat
repnz
cmp
mov
jne
xchg
lods
pusha
faddp
popf
adc
test
jno
shrb
fwait
testl
lds
xor
push
stc
mov
xchg
dec
jmp
or
mov
scas
aaa
xchg
sbb
or
jmp
jae
mull
ja
int3
sbb
pop
pop
out
call
cwtl
sub
cmpsb
push
cmp
lcall
test
scas
jno
sub
in
ljmp
dec
xchg
sub
push
xchg
ljmp
stos
sbb
pop
and
iret
add
add
mov
jne
leave
mov
hlt
call
enter
push
xchg
jno
lock
xchg
nop
fbstp
xor
daa
popf
inc
nop
push
insl
push
mov
fs
in
mov
push
ds
mov
mov
jnp
fcmovbe
pop
fsubrl
xchg
fbstp
imul
in
dec
mov
lock
dec
pop
mov
cmpl
and
ffree
xchg
xchg
xor
pop
xorb
pop
pop
pushf
mov
adc
cmp
cmp
test
out
aad
fwait
pop
loopne
xchg
int3
data16
mov
cmp
or
mov
mov
fsubrs
pop
out
fdivrl
out
sarl
fmull
or
pop
aad
dec
outsl
stos
mov
sub
pusha
adc
push
adc
mov
jns
push
fidivs
mov
jno
sub
jg
gs
lock
pushf
mov
test
sub
lods
xchg
outsb
sti
loop
mov
push
pop
outsb
jl
inc
push
popf
fs
pop
popf
jg
mov
insb
inc
enter
jmp
xchg
mov
neg
sbb
stc
cmp
xor
movsb
into
bound
xchg
fdiv
add
fsubs
mov
add
jbe
xchg
fsubr
int3
add
out
arpl
sub
arpl
sbb
xchg
jmp
sti
scas
clc
lods
xchg
jb
test
in
cmc
cmp
adc
sub
mulb
outsl
pop
adc
test
ss
push
lahf
cmp
mov
aad
mov
mov
inc
push
dec
xor
sub
jne
push
pop
or
mov
and
xor
aam
xor
int
push
sbb
mov
andb
lcall
jo
jl
incl
andl
aas
and
inc
xor
jg
adc
mov
push
sbb
mov
imul
leave
inc
and
cwtl
dec
mulb
lods
fsubrs
ret
mov
cs
mov
jg
mov
mov
das
sbb
xor
sarl
pop
std
mov
shlb
pop
mov
leave
jge
jno
dec
mov
cmc
adc
push
jns
adc
adcl
cmpsl
pop
pusha
push
sbb
dec
ss
das
fcom
or
and
notl
sbb
into
dec
push
mov
sub
jo
dec
inc
mov
fstpl
pop
rorb
push
and
sbb
jo
mov
sbb
ljmp
sti
clc
gs
into
fists
out
xor
inc
notl
sub
mov
ja
xlat
mov
repz
rcrl
popa
push
ss
mov
inc
cltd
dec
cmp
jle
jnp
push
jns
mov
enter
outsb
outsl
cld
sub
and
mov
add
ja
lahf
jl
inc
mov
out
adc
push
push
jnp
mov
adc
daa
mov
test
sbb
jmp
push
push
mov
outsl
dec
cli
jbe
sbb
sub
cmp
and
xchg
adc
mov
sbb
insl
push
gs
sub
jnp
xchg
mov
pop
call
push
cmpb
scas
add
pop
hlt
nop
inc
xchg
fldl
xchg
lock
push
les
cmp
dec
jmp
mov
push
mov
sub
lds
movsb
cmp
push
loope
lahf
cltd
or
rorl
loope
adcl
jmp
jmp
inc
sub
nop
mov
adc
sahf
push
pop
pop
pop
inc
inc
inc
fistl
push
fsubs
fiaddl
aad
xchg
ljmp
orb
lea
data16
fimull
nop
fstpt
pop
in
fcompl
dec
jns
jge
sub
jo
push
fisubrs
daa
loop
idivl
ficompl
mov
negl
cmp
cmpsl
mov
int
and
in
adc
sub
push
shlb
jge
sub
sbb
stos
inc
fisttpll
mov
jle
jns
mov
pusha
push
xor
xor
lock
das
lods
addr16
jecxz
sahf
insb
scas
stos
outsl
mov
dec
xor
pop
int3
fcoms
xchg
prefetch
mov
rcl
xchg
mov
pop
adc
sahf
sbb
dec
and
cmp
stos
jbe
mov
jae
in
ret
pop
mov
adc
add
loopne
push
jle
iret
dec
adc
pop
popf
ds
cwtl
addr16
inc
xchg
dec
add
lods
ss
pusha
fisttps
mov
pushf
cwtl
inc
inc
cmc
pushf
jne
test
inc
and
push
xchg
pop
out
jp
fwait
int3
jg
divb
xchg
imul
mov
out
sub
rol
jmp
jbe
leave
push
xchg
sbb
shll
sub
in
ds
dec
js
les
jge
loopne
in
jecxz
repz
dec
cwtl
imul
sbb
or
stc
psubsw
fldcw
leave
pop
mov
outsl
mov
pop
scas
dec
fistpll
iret
sub
sbb
or
stc
psubsw
fldcw
leave
pop
mov
outsl
mov
and
cmp
and
jmp
pop
mov
outsl
mov
pop
scas
dec
fistpll
iret
sub
cltd
out
or
push
cmovae
xor
push
pcmpgtd
jbe
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
dec
into
fldcw
pop
cwtl
mov
sbb
pop
pop
add
push
or
add
pop
inc
add
add
add
dec
add
add
add
or
add
pop
test
sbb
ja
jne
mov
or
xor
add
push
add
loop
out
or
add
or
add
add
xor
sahf
add
add
add
leave
add
add
cmp
inc
add
mov
popa
add
add
xor
test
addb
add
addb
add
mov
inc
add
add
add
addl
add
add
push
add
add
filds
pop
add
jne
mov
movsl
add
add
add
add
data16
or
or
add
push
add
xchg
movsb
add
add
add
mov
popa
add
add
add
dec
add
jecxz
lods
add
add
add
add
add
push
add
add
mov
mov
adc
add
js
cmp
jo
lcall
add
test
popa
add
add
pop
pop
add
cmp
lods
add
sub
cmp
push
add
dec
add
add
adc
add
add
add
add
or
add
push
add
add
add
cwtl
add
add
add
in
add
add
dec
add
add
mov
add
add
add
adc
add
add
add
add
add
or
sub
mov
add
add
ret
add
add
sbb
faddl
pop
add
pop
push
add
add
sbb
push
add
popf
add
add
mov
add
lret
add
leave
add
leave
add
add
adc
rolb
movsb
add
xor
add
add
add
add
add
add
add
add
dec
add
mov
add
add
add
filds
xor
add
add
add
or
arpl
dec
add
mov
mov
cmpsb
add
hlt
add
add
add
add
add
int3
add
add
add
add
add
jbe
inc
add
dec
add
add
add
add
roll
mov
or
add
add
jne
stc
add
add
add
add
push
add
add
xchg
xchg
add
mov
add
push
lret
add
add
inc
add
add
add
add
lret
add
xchg
add
add
add
add
add
xchg
mov
inc
add
add
add
add
add
add
add
cmp
mov
lods
add
add
jecxz
jo
lea
add
test
pop
add
or
adc
test
jge
dec
add
add
add
add
add
lods
add
add
add
add
add
mov
add
add
add
add
inc
add
cmp
movsl
add
add
add
add
lods
add
add
add
add
movl
in
add
add
ret
fidivl
mov
push
dec
push
arpl
or
mov
rcll
mov
push
sub
imul
pop
and
loop
pop
repnz
sbb
stos
push
push
daa
mov
or
mov
icebp
test
xor
jle
pop
mov
stos
jmp
mov
lods
fistl
aam
push
rcrl
das
mov
subl
xor
and
xor
pop
aaa
add
adc
bound
xchg
mov
fisubl
jne
inc
jae
sub
sbb
rorb
loopne
clc
cmp
xchg
pop
mov
inc
sub
movsl
aad
arpl
inc
gs
mov
fdivrl
lret
cmp
or
xchg
jmp
and
push
sbb
aam
sbb
add
pop
dec
mov
adc
pop
adc
cli
enter
dec
push
xor
cmpsl
xor
sub
add
cmp
mov
jb
inc
jmp
hlt
mov
jns
lcall
push
push
les
mov
xlat
pusha
jbe
pop
xor
arpl
cmp
sbb
loopne
adc
mov
sub
add
and
fnstsw
je
cld
lret
sub
push
mov
loopne
ds
inc
sbbb
in
xor
push
fldt
sub
js
add
test
dec
stos
rorb
adc
xor
in
push
jmp
lea
scas
inc
inc
inc
jge
dec
xor
inc
push
sub
mov
cltd
push
jne
adc
sarl
daa
test
cmpsb
test
mov
adc
cmp
inc
aas
cli
push
inc
and
adc
xchg
jp
aad
ret
inc
mov
pop
or
int3
mov
mov
je
sbb
push
jno
sbb
int3
push
xchg
int3
jno
push
in
ljmp
out
adc
insb
adc
and
mov
mov
adc
xchg
ret
lcall
int3
loop
push
sub
adcl
fnstsw
jg
int3
push
push
xor
lret
xlat
adc
pop
sub
test
and
push
push
push
jae
je
shll
adc
pop
inc
scas
nop
mov
lret
in
aas
test
sub
cld
loop
xchg
cmp
mov
popa
enter
pop
out
loopne
outsb
popf
sbb
push
adc
mov
in
in
jge
mov
aas
test
int
and
fmul
pop
inc
mov
sbb
adc
ror
fmull
fmuls
rolb
cmp
xchg
push
dec
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
