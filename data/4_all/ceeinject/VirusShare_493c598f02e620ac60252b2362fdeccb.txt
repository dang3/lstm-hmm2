call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
arpl
xchg
push
adc
andl
xor
mov
mov
jmp
jecxz
rcr
shll
and
adc
add
jle
dec
push
pop
xor
mov
sahf
lcall
mov
fadds
jle
ss
bound
rol
call
cmpsb
mov
shrl
dec
dec
imul
pop
cltd
popf
mov
sbb
or
out
lahf
and
xchg
mov
gs
add
xchg
inc
icebp
jno
jne
imul
and
push
dec
jle
cs
or
pop
cmp
lretw
inc
and
sbb
or
shll
cmp
icebp
inc
xor
dec
mov
dec
stos
pop
mov
sahf
movsb
popa
jge
lock
push
fstpt
and
icebp
inc
fiadds
pop
push
inc
outsb
loop
mov
push
popf
sbbl
icebp
ds
icebp
add
loop
adc
leave
outsb
sahf
cltd
imul
push
mov
into
inc
sbb
xchg
jb
outsb
jno
popa
dec
mov
rcrl
push
addl
scas
pop
arpl
dec
push
jo
add
aas
and
idiv
in
in
call
mov
je
pusha
dec
jo
and
push
pop
push
and
sub
imul
hlt
repnz
mov
lahf
stos
pop
addr16
bound
adc
pop
inc
scas
mov
mov
out
icebp
loope
rcr
shrl
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
loope
rcr
shrl
cli
mulb
call
cmp
in
jno
leave
test
xchg
insl
icebp
mov
xchg
jns
mov
lds
cmp
push
notl
push
pop
dec
lea
xchg
pop
jne
mulb
dec
or
xchg
fucomi
out
push
mov
cmp
aad
cld
movsb
bound
cmp
cs
mov
hlt
pop
cmp
lds
addr16
outsl
add
cmpl
rorl
gs
sti
out
mov
jmp
test
outsb
mov
loope
lods
mov
out
pusha
int
lret
sbb
les
rolb
js
rcl
cmc
sbb
int3
addr16
cmpsb
ror
loopne
push
jl
add
sbb
lea
into
mov
inc
dec
xchg
mov
aad
push
lock
push
rorb
inc
lret
pop
aad
dec
cmp
inc
jb
shll
dec
stc
lret
movsl
fidivrl
cli
xorl
sarl
dec
imulb
xchg
or
lods
scas
repnz
push
inc
sub
mov
pop
cmpsl
xor
sbb
fucomi
ffreep
ja
mov
inc
push
lret
sbbl
xadd
mov
push
push
test
push
popa
push
jle
insb
xor
xchg
lock
adcl
push
push
push
mov
adcb
inc
adc
mov
xchg
cmp
push
dec
fsubl
jae
fs
push
out
icebp
cmp
mov
call
pop
ficoms
fcmovbe
loop
es
in
xchg
jg
inc
dec
pop
bound
lahf
mov
test
mov
mov
repz
inc
filds
pop
daa
kmovb
mov
jb
jb
add
rclb
stc
cltd
fnstcw
mov
outsb
jg
sarb
lcall
xorl
add
cmc
jbe
pushf
test
and
pop
aam
lds
cs
int3
hlt
fildl
mov
jnp
fldcw
adc
test
and
sbb
clc
lods
iret
mov
dec
fsub
bound
adc
pop
les
mov
add
leave
mov
insl
rorb
in
adcb
jle
fcmovbe
dec
mov
adc
jno
fmul
sahf
sub
outsl
mov
sahf
push
and
push
or
add
inc
fbld
dec
mov
add
fstl
mov
loopne
xor
mov
push
sti
outsl
ljmp
mov
jle
fiaddl
mov
pop
add
push
and
lret
mov
and
jmp
icebp
gs
out
jae
mov
lret
insl
mov
mov
stos
into
add
pusha
fnstenv
jmp
push
std
jecxz
xor
or
mov
push
cmc
inc
in
leave
inc
pop
mov
sbb
insl
out
test
push
push
or
arpl
sbb
sub
imul
sbb
sarb
imul
mov
lret
and
push
outsb
sub
or
add
mov
enter
mov
pop
jae
gs
adcb
cld
in
mov
add
fsts
pop
and
mov
in
xor
rcrl
test
nop
data16
xlat
rorb
jne
dec
mov
aad
mov
int
clc
ud0
ror
mov
push
cli
imul
xchg
imul
push
and
mov
mov
aam
xchg
dec
int3
pop
hlt
pop
dec
test
icebp
and
je
icebp
rolb
sbb
pop
xchg
add
inc
sti
jle
xor
test
cltd
cmp
cs
and
push
cld
jp
and
jae
popf
cmp
sub
aam
iret
inc
ja
jmp
hlt
jb
xchg
ret
adc
fistpl
jg
inc
pushf
mov
ja
es
aad
mov
test
mov
ret
sbb
adc
adc
cmpsb
xor
xor
out
sbbl
push
mov
push
sub
cmp
inc
lock
xor
dec
and
hlt
rcrl
mov
push
imul
push
inc
or
mov
sub
ljmp
cmp
sbb
or
xchg
roll
dec
adc
pushf
movsl
or
cmpsb
xchg
outsl
je
movsl
cld
mov
sbb
sbb
sbb
mov
dec
inc
pop
xchg
jge
leave
push
cmp
mov
dec
inc
test
fldt
daa
loopne
and
mov
push
sub
mov
inc
es
cmpsl
cmpsl
loope
cmpsl
cmpsb
int
shlb
dec
xor
cmp
outsl
call
orb
stos
fidivs
cmp
inc
xchg
ror
mov
repz
ficompl
and
pop
je
fcomps
dec
bound
mov
inc
inc
xchg
inc
push
jp
and
ret
lods
popf
xchg
gs
xchg
push
push
jno
idivl
int3
test
xor
enter
enter
orb
xchg
test
push
dec
jmp
test
mov
movsb
jbe
leave
mov
popa
or
test
jge
jb
and
dec
jae
test
sbb
xor
adc
repnz
and
dec
add
inc
nop
sahf
leave
lahf
clc
aam
xor
jp
push
dec
sub
push
cs
mov
cmp
std
out
movsb
xor
push
dec
xor
rol
filds
mov
test
out
xchg
dec
ja
in
adc
pop
xor
popa
sarl
pop
out
out
cmpb
subl
add
mulb
jmp
popa
mov
insl
mov
push
test
das
dec
js
xor
xor
mov
movsb
mov
adc
popa
incb
out
sub
xor
pop
lock
jne
mov
inc
inc
loope
sti
js
adc
aad
cmp
cmp
sbb
pop
push
loopne
scas
shll
inc
popf
mov
call
ret
cltd
sub
outsl
sti
leave
xor
out
inc
lods
loope
xchg
pop
pop
jle
sar
sub
loope
mov
psubsw
fisubs
jmp
aam
js
or
sub
xchg
xchg
rclb
sbb
mov
push
and
mov
vunpckhps
scas
sbb
cmpsl
sub
in
jbe
movsl
xor
mov
add
push
in
pop
push
loope
cltd
xor
ss
adc
inc
xlat
adc
leave
sbb
dec
setnp
ss
fwait
jp
shrl
xor
popf
adc
fidivrs
ss
add
test
out
inc
aad
jge
mov
jmp
aas
cmp
cmp
aad
lock
scas
push
cltd
adc
stos
mov
mov
out
int3
xchg
or
ret
pop
outsb
sub
sub
div
jmp
jbe
test
in
clc
mov
insl
push
mov
push
cmp
lea
das
push
cmp
gs
push
push
xchg
rorl
adc
fdivp
mull
mov
test
int3
aam
repz
fdivl
mov
movsb
imul
push
shrl
inc
lods
cmp
or
push
adc
imul
mov
out
frstor
mov
xchg
and
repnz
jnp
xchg
pandn
incl
pop
enter
mov
add
mov
inc
ror
mov
fisttpl
rorb
push
mov
frstor
cmpl
sub
mov
popf
mov
pop
jp
adc
sti
out
sahf
mov
sahf
jns
adc
sbb
pop
inc
ds
push
dec
pop
add
xor
push
popf
jp
dec
hlt
lods
stos
cwtl
test
mov
mov
mov
pop
icebp
pop
dec
mov
xor
mov
mov
imul
push
push
adc
mov
jp
or
push
out
adc
and
add
lock
scas
out
xchg
jge
rolb
mov
setnp
test
shll
inc
add
repz
cmp
icebp
add
imul
psubsb
xor
and
xchg
adc
pop
mov
pop
repnz
lods
jp
nop
out
imul
inc
fisubrl
mov
and
pop
jl
ret
mov
les
add
cmp
xchg
jnp
les
jae
hlt
adc
cmp
cli
mov
pop
adc
out
dec
aam
fwait
cmp
xor
mov
mulb
jmp
sti
ljmp
inc
rorb
subl
test
inc
pop
ficompl
pop
mov
mov
cltd
pop
xor
hlt
push
test
sub
sub
mov
ror
mov
ror
pusha
add
mov
lret
call
push
sub
push
sbb
cmp
iret
mov
cmpsb
sbb
cli
sub
jb
call
lret
jmp
or
jnp
dec
aam
jp
and
jge
inc
xor
add
shll
add
bound
push
dec
lret
add
int
push
lods
xchg
sbb
cs
push
je
xor
adc
xor
cltd
test
inc
into
and
add
in
sbb
mov
stc
xor
jns
aam
mov
xor
stc
pop
jge
push
lret
cmp
mov
xchg
push
in
pusha
push
ljmp
add
shr
push
mov
fnsave
jnp
sbb
sbb
and
inc
daa
cmp
adc
repz
pop
or
and
fcmovbe
sarl
out
scas
adc
add
adc
mov
mov
int3
icebp
push
inc
xor
dec
ljmp
inc
enter
popf
enter
dec
adc
or
pop
in
cmpsl
fwait
mov
cld
sbb
mov
outsl
cmp
cmc
fistpll
mov
jnp
sbb
lea
add
dec
loop
dec
in
sahf
clc
outsl
ja
xchg
adc
gs
or
jmp
sbb
adc
xchg
xor
sti
ja
push
lret
clc
and
pushf
sahf
aam
call
cwtl
hlt
and
mov
stos
shrl
jne
sbb
pop
or
jns
push
mov
xchg
scas
shll
clc
rcrb
mov
xchg
adc
pushf
xor
sub
notb
mov
mov
adc
adc
jp
inc
add
and
rcl
in
decb
pop
mov
stc
call
int3
mov
test
insl
adc
push
dec
xchg
cmovb
dec
fxch
sbb
icebp
xlat
in
fsubrs
inc
xchg
push
add
aam
rolb
xor
in
into
jg
mov
xlat
dec
in
cmp
enter
push
or
lahf
inc
scas
mov
or
or
sbb
mov
testb
add
inc
mov
fisttpll
bound
mov
sahf
mov
nop
pop
insb
stc
mov
outsb
loopne
out
mov
pop
inc
adc
add
jle
inc
pop
fcomps
int3
cld
scas
mov
sub
fadds
into
inc
arpl
xchg
jmp
cmp
cmp
mov
adcb
aaa
dec
aad
outsb
cltd
in
fdivl
inc
popf
xchg
lret
out
sub
adc
hlt
enter
outsl
mov
sahf
cmpsl
jg
mov
iret
push
cmp
and
add
in
inc
test
sahf
jns
cmp
arpl
jbe
fisttpl
inc
or
inc
jmp
dec
bndstx
mov
sub
addb
enter
inc
xchg
addr16
mov
sbb
sub
push
jae
adc
sub
lret
arpl
in
aas
pop
mov
mov
mov
lods
js
bound
jns
daa
push
fwait
inc
les
stos
decb
ds
jnp
lahf
out
sbb
add
add
lods
clc
mov
sbb
cltd
sbb
or
movsb
arpl
cld
pusha
push
jo
fwait
enter
popa
add
jo
out
push
jnp
mov
push
pop
mov
push
jnp
cmp
mov
scas
rcl
stos
xor
cltd
dec
pop
mov
pop
ja
cwtl
aad
repz
jmp
inc
mov
jns
jae
pop
cmpsb
stos
pop
fsts
or
in
jl
lods
sbbl
xlat
outsl
loop
lret
cmp
add
xchg
fs
sbb
jmp
movsl
xchg
or
or
aaa
ljmp
xchg
imul
pop
into
add
mov
out
inc
xor
sbb
pop
pop
dec
filds
xchg
and
and
bound
das
mov
aad
cs
outsb
aam
fcomi
cmp
movsl
sbb
test
fs
cmpb
pushf
xor
mov
mov
jmp
loopne
jo
mov
ljmp
scas
adc
daa
out
or
xchg
jmp
fidivs
lret
jbe
pop
iret
xchg
xor
psubsb
add
out
lcall
or
cli
in
ret
stc
and
aad
push
xchg
mov
mov
sub
in
lret
xchg
divl
fbstp
and
xor
xchg
cld
and
sbb
lahf
scas
pop
push
jp
lahf
jae
fdivrl
in
popf
mov
shrb
mov
push
mov
repz
dec
les
xor
out
add
das
add
mov
xchg
cmp
sub
cmc
outsb
outsl
cmp
xchg
or
or
ja
jns
jb
test
push
sbb
sub
test
pop
xchg
sub
push
std
hlt
push
mov
into
int3
jb
xor
repnz
ds
addr16
test
push
inc
es
incl
dec
pushf
add
push
popf
cwtl
cltd
xchg
nop
and
fwait
or
xor
repz
sbb
dec
in
std
xchg
xchg
dec
or
out
fbstp
jb
je
sahf
test
mov
sqrtps
adc
mov
sbb
mov
xchg
ds
stos
cli
mov
lods
fwait
aaa
and
xor
cmp
add
in
and
ljmp
inc
jmp
and
out
cmp
cwtl
mov
dec
ja
and
mov
out
pop
jne
jmp
adc
fdivl
scas
jne
addr16
mov
mulb
push
xor
and
cmp
push
movsl
mov
loopne
fldcw
iret
push
icebp
out
xor
mov
push
scas
idivb
sub
inc
sbb
shll
xchg
cmp
dec
testb
cld
scas
xor
mov
mov
hlt
dec
lret
jmp
add
sub
sarb
adc
lret
and
push
and
add
dec
adc
inc
addr16
scas
ss
out
fnstcw
sarb
nop
pop
aad
dec
aad
add
stos
iret
lret
pusha
bound
dec
in
sub
lock
dec
jnp
rcl
ret
xchg
inc
pop
fidivrl
in
jmp
roll
and
loopne
movsl
mov
imul
inc
pop
jg
inc
icebp
jbe
leave
fcompl
jge
xchg
cmp
dec
push
xor
xor
fidivs
sti
in
jp
orb
outsb
leave
fisttpll
mov
movsl
pop
sti
mov
push
jno
dec
test
inc
xchg
inc
dec
pop
mov
mov
mov
sbb
in
jo
or
bound
sbb
adc
xor
out
in
call
xlat
mov
and
push
icebp
fldln2
jge
xlat
fistl
mov
fucom
ret
into
loop
rclb
pop
cmp
add
movsl
loope
xchg
xchg
xchg
mov
push
loope
cmpl
pop
jecxz
jne
add
pusha
push
out
and
hlt
sbb
arpl
arpl
add
les
fidivl
pushf
push
lret
dec
outsb
pop
pop
and
sbb
lock
idivb
outsl
cmp
xlat
dec
jnp
arpl
or
sub
insl
adc
popf
and
jmp
mov
adc
testl
or
dec
or
push
aaa
mov
int
lock
aaa
icebp
add
mov
adc
hlt
fildl
inc
stc
popf
fstp
xchg
shrb
jge
idivl
addb
popf
mov
cld
xor
sub
or
sub
andb
xorb
sub
fdivrp
addr16
pop
dec
hlt
cmp
outsb
iret
dec
popf
and
lahf
sub
push
xor
sub
arpl
sub
or
adc
popa
pop
jl
adc
out
xchg
adc
sbb
mov
test
or
mull
sub
pop
inc
sub
add
push
scas
add
pop
xchg
enter
xor
ret
mov
in
aas
push
icebp
arpl
adc
cmc
mov
aam
adc
in
popl
sbb
lods
das
icebp
adc
test
or
loope
inc
inc
nop
fucom
mov
les
push
cld
outsl
repz
cld
jge
cmp
nop
popa
push
mov
push
test
add
push
mov
lods
xlat
pop
sahf
dec
rol
fwait
lea
pop
pop
shlb
into
punpcklwd
ret
pop
daa
test
xor
inc
mov
xor
inc
outsb
sbb
mov
dec
outsl
push
mov
test
mov
jmp
inc
movsl
sub
es
add
ja
aaa
or
xchg
cmp
lcall
stc
es
mov
mov
pop
pop
xorl
sti
mov
jne
xchg
mov
push
shll
imul
lahf
lock
xor
xchg
lahf
xchg
jns
push
in
ljmp
cmpsl
inc
in
mov
xchg
cld
mov
jge
lahf
xor
mov
jns
jecxz
ljmp
lea
cld
mov
inc
scas
jns
scas
aas
mov
ja
cmp
movsb
mov
dec
adc
mov
dec
jp
cmp
imul
imul
test
inc
cmc
pop
pop
sbb
pop
xor
jl
and
adc
lea
cltd
xchg
bound
sbbl
or
int
pushf
pushf
call
jle
fcmovb
xor
test
xor
call
mov
aam
in
mov
test
push
rorl
mov
cmpl
fs
nop
dec
popa
xchg
dec
xchg
jg
mov
mov
je
jg
mov
mov
cmp
shr
stc
lcall
or
out
hlt
fadd
inc
test
cmp
mov
pop
hlt
int3
or
sbb
mov
sbbb
mov
pop
inc
loop
mov
lcall
xchg
dec
loop
fs
loop
in
mov
mov
cmp
jb
out
jns
xchg
dec
adc
in
add
aas
fnstsw
mov
pushf
sbb
inc
repnz
scas
loop
scas
pop
jecxz
lods
dec
xor
stc
push
insl
jbe
inc
call
out
mov
xchg
popf
loopne
movsb
mov
push
sbb
mov
ficomps
repnz
pusha
in
sub
push
cmovbe
inc
test
sub
and
xor
sbb
push
adc
jnp
push
cmpsl
mov
imulb
add
idiv
call
sbb
js
test
or
dec
sti
fcoml
or
rorl
push
int3
mov
or
xor
gs
call
mov
jecxz
mov
add
ficompl
dec
es
cmpsb
in
std
dec
repz
pop
push
push
fs
mov
lea
out
sbb
and
push
xor
shll
fisttpll
int
jle
jle
rorl
pop
stos
ss
cmp
rcr
pop
je
leave
outsl
and
cmp
lock
xchg
ss
stos
int3
push
jb
aam
jl
jmp
push
insl
loopne
dec
mov
cmpsb
ss
shr
aad
dec
test
mov
jg
sub
inc
xorl
icebp
dec
add
push
pushf
mov
sub
ja
xchg
mull
push
mov
adc
pop
mov
cmc
mov
addl
sbb
out
stos
sub
adc
sub
push
adc
dec
pushf
push
pop
dec
sub
sub
push
dec
fbld
gs
addl
mov
sbb
inc
cmpsb
leave
in
jne
ss
mov
loopew
inc
cwtl
sub
imul
or
push
lahf
inc
xchg
push
movsl
hlt
lcall
sti
jne,pt
push
shll
sbb
cmp
cld
jnp
jb
jp
push
cmpb
daa
inc
mov
jmp
or
fs
xor
push
jo
loope
orb
push
sub
cmp
das
in
test
lea
sub
inc
jae
and
jge
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
loope
rcr
shrl
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
icebp
loope
rcr
shrl
cmp
add
jp
dec
push
pop
inc
stos
imul
loope
icebp
out
shll
adc
xchg
add
outsb
popa
dec
rcr
inc
scas
dec
inc
or
sahf
negb
and
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
cmpsb
dec
mov
xchg
stos
jg
sbb
inc
cltd
push
int3
push
pushf
data16
jbe
inc
lods
push
dec
cmpsb
dec
mov
xchg
out
idivb
sub
es
ss
push
cs
pushf
or
push
inc
cmpsb
push
mov
xchg
out
mulb
cmp
fsubl
adc
mov
shll
sub
and
xor
add
cmovge
pop
daa
lds
xor
and
mov
mov
jl,pt
jl
repz
into
in
adc
adc
jb
data16
shll
scas
nop
push
out
or
sbb
xor
arpl
jbe
ret
imul
jecxz
xchg
pushf
scas
out
cmp
not
lods
sub
call
xorb
cld
dec
inc
push
mov
sbb
dec
outsb
int3
jg
lods
cmp
aam
xor
stc
in
adc
xor
push
test
and
xchg
loope
mov
into
pop
xchg
and
xor
in
add
and
pushf
cmpsb
dec
mov
xchg
or
push
idivb
xor
ss
cmc
push
test
jbe
inc
mov
das
mov
or
addb
pop
int3
aaa
mov
lock
leave
sbb
rcrl
jecxz
xchg
push
scas
imul
stc
or
ja
adc
sbb
insb
repz
sub
fsubl
int3
ss
push
in
push
pushf
data16
inc
lods
push
pop
cmpsb
dec
mov
xchg
out
idivb
sub
fsubl
int3
ss
push
in
push
pushf
data16
inc
lods
push
pop
cmpsb
fisubs
xchg
and
orl
repnz
mov
jae
mov
add
dec
les
jle
mov
bound
lea
and
leave
or
and
out
sbb
dec
add
rolb
dec
aam
je
rcr
mov
jae
and
push
push
lea
jno
add
leave
scas
or
add
inc
lcall
into
mov
cmpsl
test
jl
test
cmp
jns
out
movsb
mov
mov
and
xchg
cli
out
sbb
cmpsl
ja
lret
sub
les
xchg
sub
mov
mov
scas
jbe
jl
popa
fcoml
imulb
xor
in
pop
inc
jp
push
dec
sahf
mov
fsts
jns
push
pusha
push
and
lahf
pop
sbbb
call
fwait
xchg
aad
push
lods
ret
lock
je
cmp
mov
es
mov
setns
dec
repz
call
mov
mov
pop
pop
pop
addr16
out
jbe
ds
rorl
xor
dec
push
clc
fcoms
cmp
xor
lods
subl
call
mov
std
push
lods
xor
jge
outsb
mov
daa
adc
ja
je
pop
dec
or
fistpl
mov
jno
inc
inc
and
scas
xor
xor
mov
cmpsl
hlt
mov
dec
in
jbe
int3
dec
mov
inc
pop
fldt
push
out
push
sub
sbb
xchg
pop
mov
pop
iret
xchg
sbb
jge
jl
or
dec
imul
fidivl
sbb
xchg
mov
jmp
xor
aaa
lret
ja
in
adc
mov
in
stos
push
imul
mov
add
cmp
pop
cwtl
mov
xchg
or
popa
pop
dec
insl
add
mov
cmp
out
mov
fildll
mov
ss
sti
shrb
je
sub
aam
jb
xlat
jbe
xchg
jbe
ret
out
and
cmp
mov
movb
loope
dec
jl
mov
mov
popf
loop
adc
inc
push
inc
cmpsb
mov
adc
push
hlt
pushf
lods
loope
es
or
fwait
sbb
cmp
iret
aad
jnp
add
add
movsl
arpl
add
mov
xchg
jecxz
or
das
jp
or
lock
xlat
xor
mov
jo
rorl
sub
xor
in
lods
xchg
outsl
dec
mov
pop
out
mov
inc
cltd
pop
jg
lea
out
dec
cmpsb
push
inc
dec
andl
cltd
adc
or
lret
lea
sub
mov
insb
mov
psubusw
rorl
jge
cld
in
dec
sub
stos
sahf
stos
leave
sahf
incl
push
push
push
sbb
scas
in
scas
add
and
or
stos
inc
adc
push
jg
push
in
stos
or
bound
push
sub
and
mov
pop
sbb
sti
in
daa
shll
testw
divb
adc
lahf
add
cmp
fstpl
neg
cld
pop
cmp
xchg
ficomps
mov
push
add
andb
insl
mov
in
insl
cs
pop
pop
pushf
mov
and
ret
push
xchg
cwtl
adc
and
inc
outsb
jo
jnp
xchg
cmpsb
in
mov
xor
dec
and
sub
xor
js
std
jecxz
dec
jne
decb
mov
xchg
bound
ds
inc
pop
jle
jne
std
mov
jbe
push
lods
sbb
clc
sti
test
xorb
imul
popa
xchg
lret
add
rolb
in
jp
lret
test
sub
sti
jne
xor
add
pop
jle
fcmovnb
or
jmp
sub
das
xchg
adc
jecxz
fisubs
and
out
sbb
pop
fwait
and
sbb
push
es
iret
push
jns
mov
adc
cmp
jb
fdivs
data16
push
rorb
adc
or
and
inc
ret
xor
jge,pn
inc
mov
cmp
push
adc
pop
lret
sbb
enter
pop
popf
arpl
cmp
sbb
xor
loope
outsl
push
jno
and
daa
nop
stc
jp
je
or
inc
mov
out
inc
cmp
jno
add
cmp
fcoml
aas
lea
jecxz
sub
int3
push
and
das
add
ds
cwtl
inc
sti
fwait
stos
fiaddl
out
mov
mov
and
pop
mov
xchg
aaa
bound
shl
mov
jbe
push
mov
fisttps
dec
pushf
mov
mov
xchg
push
ljmp
adc
outsl
test
jne
fnstcw
mov
fldpi
sbb
sbb
or
xor
or
adc
aad
push
pop
in
sub
push
xorb
sub
clc
sti
jno
ret
lret
mov
mov
popa
push
gs
insl
pop
push
call
sar
pop
dec
repz
mov
movsl
xor
xchg
test
shlb
cltd
add
sbb
test
cmp
std
cmc
insl
jne
sbb
mov
imul
aad
dec
add
or
xchg
cld
dec
fcompp
xor
fucomi
lret
iret
push
and
cmp
fiaddl
xchg
sub
jmp
sbb
push
sbbl
lods
jo
rcrb
imul
pop
cmc
xchg
lods
dec
movsb
test
cmp
xchg
movsl
stos
addb
push
push
cmp
je
mov
std
rcrb
pop
or
jmp
mov
sub
lret
xorl
inc
jne
mov
pop
hlt
adc
pop
jecxz
mov
xor
rolb
addr16
movsl
pop
add
sub
mov
or
mov
inc
ljmp
xchg
fadd
ds
mov
mov
adc
loopne
bnd
jmp
xor
std
movsl
addl
pop
stos
xchg
push
pusha
fstpl
xchg
sbb
cmpsl
aas
mov
fcomi
lcall
pop
add
push
xchg
jle
add
rcr
imul
andb
dec
mov
dec
xor
add
imul
inc
fstpt
hlt
aaa
in
cmp
in
popa
sub
daa
and
out
mov
jae
inc
scas
xor
xchg
push
frstor
push
pop
and
test
mov
mul
xchg
and
imul
mov
lret
cmp
es
nop
and
cmp
and
call
leave
int
add
scas
adc
cmp
and
stos
sbb
push
les
pop
sub
imul
les
jae
in
sbb
and
scas
adc
jno
lods
add
sahf
dec
jnp
mov
bound
je
scas
jecxz
arpl
adc
sbb
ret
inc
add
outsl
and
cli
stos
inc
pop
inc
sub
xor
xor
xchg
fwait
jb
xchg
and
push
pop
decl
and
insl
leave
lahf
sub
dec
or
push
sbb
sbb
imul
jb
sbb
jns
shll
mov
mov
lea
lods
test
or
pusha
mov
push
jl
sbb
popf
jns
out
test
jl
pop
stos
shlb
mov
popf
jecxz
outsl
scas
aaa
adc
pcmpeqb
inc
jp
mov
mov
adc
repnz
js
push
fcomps
add
cmp
int
or
jbe
pop
cmpsb
fdivl
sbb
dec
push
cmp
xor
sub
or
pop
xorb
sub
lret
pop
mov
dec
cmp
dec
push
test
lock
daa
and
pop
mov
inc
pop
mov
xlat
pop
push
int3
push
or
xor
inc
push
sbb
push
out
cmp
dec
fs
popa
and
mov
dec
jo
jl
cmpsb
sbb
cmp
jp
push
add
stos
dec
imul
push
cmp
or
cmp
inc
jo
lods
xor
mov
popf
lea
scas
adc
sbb
fnstcw
xor
add
jae
and
fidivrl
rcll
inc
and
dec
or
push
stos
jmp
js
cmpsl
pop
leave
lret
pop
shll
or
in
lret
and
cmp
dec
into
test
in
and
iret
lock
lahf
add
jp
mov
roll
pop
lahf
daa
gs
cwtl
jle
test
push
sbb
xchg
or
popa
lods
out
dec
pop
push
fnsave
pop
orb
ret
data16
jbe
mov
adc
pop
daa
jae
mov
and
leave
nop
inc
xchg
xor
repz
dec
or
fmuls
or
sbb
and
mov
out
ljmp
shrb
sub
popa
xchg
test
adc
lea
inc
mov
lock
mov
jnp
pop
dec
sbb
push
sub
out
xor
lahf
mov
into
sbb
xor
inc
test
inc
mov
jae
push
mov
jne
sbb
mov
stc
out
mov
daa
gs
xor
xor
inc
dec
cmp
dec
loop
jno
push
mov
mov
lret
ss
cmp
adc
cmp
lret
mov
cmp
push
pop
subb
xor
aad
cs
stos
or
jno
dec
mov
xchg
hlt
fidivrs
mov
push
push
outsl
hlt
add
push
adc
dec
into
outsl
inc
fnsave
adc
int
cmp
sbb
jle
xor
adcb
xchg
stc
xchg
sub
xchg
in
js
arpl
push
cmp
sub
call
sbb
cwtl
or
ds
jl
pop
sarb
push
dec
cltd
fdiv
cli
and
xlat
mov
out
mov
leave
in
jb
lahf
jge
jb
divb
mov
inc
dec
jno
cmp
pop
push
jb
pop
pop
mulb
stos
stos
mov
loope
mov
dec
inc
sbb
loop
xor
add
cwtl
xor
stos
mov
pushf
add
gs
inc
push
xor
pop
into
ljmp
aas
bound
nop
cmp
adcl
das
mov
pop
je
push
jl
push
add
loopne
sbb
xor
pop
adc
mov
clc
xor
cs
mov
test
mov
or
mov
out
push
dec
insb
out
xlat
lock
jnp
mov
fadds
mov
fnstenv
adc
mul
jnp
dec
lahf
sahf
scas
inc
push
sub
inc
movsl
pushf
cmp
in
mov
pusha
aad
aam
clc
mov
repnz
push
mov
xor
leave
fcmovbe
push
dec
js
rolb
lret
jecxz
lock
lret
dec
popf
nop
push
les
rorl
not
pop
xchg
test
test
aad
sub
mov
fwait
mov
cmpsl
das
loop
jge
scas
push
bound
cmpsb
lret
leave
bound
mull
sbb
cwtl
shrb
mov
cwtl
test
dec
pushf
imul
leave
sub
add
ror
push
sub
add
movsb
sub
mov
or
pop
inc
insb
addl
sbb
daa
test
fcmovnb
cmp
pop
scas
imul
lods
insb
xor
test
arpl
or
mov
rep
mov
repnz
lret
pushf
stos
pushf
jle
cmp
push
adc
clc
jmp
jae
lret
test
icebp
sahf
scas
in
mov
adc
pop
adc
subl
mov
movsb
cmp
mov
xchg
decl
nop
insl
lea
insl
negb
push
xor
dec
sbb
lcall
or
cmpsl
xchg
cmpl
es
mov
mov
ror
das
jns
enter
shl
add
xor
dec
push
aaa
sub
jbe
mov
push
addr16
popf
andl
pop
sub
lret
js
mov
mov
js
push
or
push
inc
dec
sub
inc
jmp
cmpsb
shlb
arpl
call
stos
mov
push
cmp
jno
js
ss
add
js
movsl
inc
negl
pusha
in
xor
cmc
mov
jge
scas
lea
lods
cmc
lods
ljmp
pushf
test
xor
mov
push
shlb
and
outsl
mov
mov
mov
sbb
dec
sbb
cmpsl
fdivl
lds
daa
insl
in
fcomps
lret
sbb
into
add
push
mov
push
mov
or
push
insl
jne
mov
add
sbb
cmpsb
pop
xchg
in
inc
mov
push
shll
lcall
paddusb
shlb
test
mov
or
jl
xchg
sahf
push
aam
mov
sub
int3
lret
nop
add
pop
out
and
jne
jns
dec
js
rorb
pushf
lcall
cs
out
sahf
movsb
rep
jp
stos
add
int
lcall
aad
in
out
jae
cmp
mov
add
packssdw
jl
push
jnp
repz
into
or
mov
pop
add
in
sbb
add
mov
and
xlat
imul
cmc
pop
and
mov
cwtl
ror
ljmp
xor
xor
aaa
dec
sub
xchg
sbb
sub
in
xchg
iret
mov
stos
dec
call
out
arpl
mov
call
rclb
pop
pop
lret
test
xor
sbb
les
dec
mov
icebp
mov
jge
mov
insb
imul
nopl
cs
or
push
sbb
mov
mov
push
lcall
xchg
insl
rol
xchg
rcl
push
sub
ljmp
mov
sbb
mov
test
ss
mov
fnstenv
clc
and
xlat
lds
push
pop
dec
loopne
xor
jo
movsl
push
mov
movsb
adc
dec
and
dec
add
insb
mov
xor
std
mov
xchg
xchg
out
ret
xor
jne,pt
mov
cmp
add
mov
mov
mov
jbe
popa
hlt
jge
push
fdivs
inc
ja
out
mov
rcll
adcb
fcoms
popa
fstpl
inc
inc
stos
lea
cmc
inc
inc
data16
add
int
in
dec
push
xor
lods
sub
xlat
xlat
call
movsl
stc
push
ja
enter
pop
dec
pop
adc
js
pop
int3
jbe
mov
aam
jae
inc
icebp
push
mov
pop
mov
outsl
and
mov
test
je
sbb
movsb
ficomps
xor
sub
js
cltd
pop
pop
adc
std
mov
enter
xchg
in
cmp
jle
push
test
sbb
mov
xchg
jne
mov
add
ds
sbb
pop
data16
pushf
inc
xlat
add
inc
outsb
sti
xchg
sbb
ja
xchg
loope
xchg
pop
push
mov
leave
mov
xor
stos
ds
idivb
ljmp
enter
stos
rcrb
in
loopne
sub
xchg
in
fdivrs
sti
int
roll
in
dec
or
loop
dec
mov
rcrb
pextrw
test
xor
mov
jmp
sub
out
pop
push
lret
mov
not
nop
adc
xchg
decb
test
loopne
add
ds
popa
inc
jbe
mov
pop
inc
int3
jle
xor
imul
out
mov
jbe
jb
sarl
pop
test
hlt
mov
push
cmp
fldz
test
dec
mov
ret
lock
inc
ja
jb
xorl
ja
out
xor
nop
push
adc
ss
jo
dec
cmp
inc
mov
sbb
or
adc
cmpsb
lods
dec
insl
or
cltd
push
into
xchg
out
mov
movsl
dec
sub
xchg
fs
arpl
into
mov
jne
fistps
mov
into
cmp
insl
lea
pop
test
xchg
cli
sub
arpl
sub
cmc
xchg
sbb
pop
lcall
gs
xchg
jno
jae
repz
xor
mov
fwait
xchg
pop
negb
adc
push
xor
lea
xchg
das
icebp
lea
lods
aam
sub
pop
fs
xor
or
adc
sub
hlt
xorl
xorl
sub
aaa
xor
fwait
fs
cli
loop
das
pop
push
push
and
cs
sbb
repz
mov
and
and
test
leave
cmp
push
xchg
jo
pop
jb
lds
out
mov
loop
jge
rorl
sub
inc
movsl
or
sbb
int
xor
call
inc
xor
rorl
xor
imul
pop
xor
mov
xchg
xchg
insb
pushl
lret
dec
push
shll
jmp
push
out
jl
or
ja
and
push
cmc
cmpsb
addb
push
jae
mov
jne
sub
xchg
or
dec
fimuls
into
mov
mov
add
lods
jbe
loopne
and
inc
test
rclb
cmp
push
ret
movl
cltd
inc
in
scas
outsl
jnp
cs
nop
sbb
rorb
movsb
cmc
pop
mov
xchg
ljmp
add
dec
jecxz
push
div
mov
jp
sbb
imul
push
stos
inc
xchg
int
sub
lret
xchg
sub
xchg
aad
dec
xchg
mov
lahf
or
into
sbb
add
lahf
adc
mov
pop
repz
lcall
gs
dec
fisubrs
bound
mov
loopne
xchg
inc
push
dec
test
adc
cmp
xchg
out
jno
xchg
cltd
dec
push
push
arpl
xorl
cwtl
add
lds
scas
arpl
inc
lcall
push
xchg
jnp
mov
xchg
lret
and
cltd
mov
arpl
es
push
icebp
mov
pop
in
addr16
jge
mov
in
sbb
mov
xchg
sti
inc
out
fisttpl
fstps
mov
mov
sbb
cltd
dec
int
aaa
jge
orl
out
cld
test
stos
sbb
test
loop
shll
add
pop
mov
outsb
mov
test
cli
fsubr
push
push
jbe
jno
mov
mov
sti
mov
aaa
stos
mov
inc
jg
stos
dec
adc
adc
xchg
leave
sbb
inc
mov
mov
fisttpll
pop
lret
or
push
out
out
xor
lret
mov
aad
xor
gs
inc
xchg
jp
sbb
jo
dec
stc
jnp
pushf
inc
adc
lcall
fimuls
inc
aaa
lods
or
lahf
sbb
int
pusha
rorl
xchg
sets
ljmp
inc
je
xchg
movsb
mov
or
xor
dec
leave
xchg
pop
imul
mov
and
lcall
ds
dec
loop
or
and
fbstp
inc
mov
std
das
in
dec
icebp
lods
int
call
and
mov
call
mov
sarl
or
add
insl
sub
cmpsb
hlt
push
sbb
pop
cmpsb
int3
mov
xchg
xchg
mov
push
cs
ja
cld
xchg
mov
neg
lods
xchg
cmp
or
divb
xchg
mov
xlat
out
jp
out
sbb
pop
aaa
dec
mov
bound
fadds
and
xchg
ds
mov
xorl
cs
inc
push
lds
jbe
xor
loope
in
test
sarl
push
imul
scas
push
test
adc
out
pop
int
data16
jnp
rcll
and
jmp
pop
push
sub
jg
das
in
imul
cmp
adc
sub
cmp
data16
out
lea
jecxz
pop
and
les
ss
mov
xor
loop
in
mov
pop
sub
fimull
cwtl
inc
lea
test
xchg
in
ret
fldl
xor
push
movsb
in
jmp
mov
cmp
cmp
xchg
sbb
pop
sti
mov
jnp
rcrl
clc
mov
cmpl
jp
jne
repz
adc
test
cmc
jge
test
pusha
fimuls
gs
movsb
inc
ja
gs
push
mov
int3
clc
and
xchg
push
sbb
clc
je
cmp
je
addl
mov
pop
stos
pop
and
and
clc
fcmovne
movb
mov
dec
pop
inc
movb
sub
jecxz
int3
cmp
lods
dec
icebp
iret
inc
ja
popf
sbb
xchg
pop
jmp
xor
mov
mov
leave
mov
xor
fmuls
sbb
or
cmp
sub
fsubl
int3
ss
push
in
push
pushf
data16
inc
lods
push
pop
cmpsb
dec
mov
xchg
out
idivb
sub
fsubl
int3
ss
push
in
push
pushf
data16
inc
lods
push
pop
cmpsb
dec
mov
xchg
out
idivb
sub
fsubl
int3
ss
push
in
push
pushf
data16
inc
popf
push
push
xchg
out
idivb
xor
out
add
inc
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aas
push
das
push
pop
es
lret
inc
add
or
mov
cmpsb
mov
in
xlat
iret
test
aas
push
das
push
pop
es
jg
outsl
push
pop
dec
adc
cmpsl
xorl
es
ss
pop
es
ss
ja
inc
dec
jbe
xchg
incl
cwtl
adcl
jns
sub
outsl
mov
cmp
xlat
std
testl
xor
dec
mov
push
push
outsl
fcmovnu
out
cmp
jno
scas
decl
rclb
in
hlt
dec
icebp
mov
mov
push
xchg
cmpsl
mov
adc
fildll
cmp
mov
add
xor
pusha
addb
mov
jp
imul
xchg
iret
imulb
mov
cmp
aaa
mov
sbbl
out
and
iret
add
lock
and
mov
out
or
push
ss
pop
es
push
push
jbe
xchg
mov
not
mov
push
dec
outsl
jp
jnp
or
or
adc
dec
add
cmc
jmp
pushl
mov
jp
outsb
jg
adc
sbb
cld
jecxz
in
ror
jmp
stos
mov
jae
addr16
aaa
je
push
pop
dec
jbe
xchg
mov
out
iret
idivb
push
das
push
pop
es
jg
outsl
push
pop
dec
jbe
xchg
mov
out
iret
idivb
push
add
mov
mov
aad
xor
mov
xchg
popa
add
mov
test
std
pop
fisubrl
hlt
in
in
rclb
std
push
push
or
loopne
pushf
cmp
xor
cltd
jae
dec
add
mull
cmp
sbb
in
ret
add
pop
and
leave
imul
and
push
in
push
xor
dec
mov
shlb
jecxz
enter
xchg
cmp
add
js
aam
xchg
aam
pop
xor
xchg
cmp
push
shlb
pop
sbb
outsb
or
das
stc
test
mov
popa
cs
movsl
adc
je
mov
adc
jp
jne
mov
add
sbb
jbe
leave
loope
pop
add
arpl
jb
adc
outsb
leave
jg
movsb
add
inc
clc
aaa
nop
push
insl
nop
ljmp
dec
and
push
pop
inc
adc
rcl
pop
jae
xchg
ja
fdivrs
jne
mov
push
inc
in
pop
int3
adc
pop
dec
pop
sahf
aaa
call
mov
xlat
and
jle
jle
and
loop
fcoml
decb
call
lods
rcr
pop
mov
mov
outsb
xchg
lahf
dec
jl
sahf
ds
jbe
add
fidivl
lahf
loop
push
js
loopne
xor
mov
sub
inc
mov
xchg
add
cmpb
ret
les
cmp
mov
inc
push
add
mov
aad
cmc
popf
add
dec
ljmp
clc
out
shrb
pop
jge
fsubp
pop
mov
lods
sbb
sbb
pop
scas
mov
sub
pushf
mov
mov
test
inc
sbb
jbe
and
loope
xor
out
nop
ret
sti
in
icebp
or
int
cmp
ljmp
mov
cwtl
inc
jb
inc
call
fidivs
dec
in
mov
and
mov
loopne
xor
bound
test
jmp
push
mov
addr16
aad
outsb
mov
ret
mov
test
lret
push
sbb
aaa
push
mov
fcomip
push
and
repz
dec
add
rcl
jnp
enter
push
dec
hlt
rorl
lahf
add
sub
int3
push
push
jmp
dec
int
nop
sub
mov
popf
push
cltd
sbb
insl
mov
add
pop
dec
adc
pusha
aas
lahf
and
fwait
jmp
jmp
lea
mov
mov
adcb
je
js
sbb
addr16
mov
in
adc
xchg
popa
fidivl
mov
dec
pop
pusha
cmp
insl
pop
pop
imul
add
jg
sbb
rclb
and
rorl
cmp
xor
adc
push
loopne
add
in
je
out
sub
mov
sti
cmc
xor
pop
out
pop
cmpsb
xor
mov
xchg
xor
or
leave
into
mov
pop
and
sbb
push
push
int3
fs
xor
sbb
push
dec
pop
ret
shrl
ss
daa
in
mov
sbb
mov
xor
push
shr
push
xchg
jne
insl
mov
jno
xorb
inc
add
iret
pop
lret
sub
popf
xor
mov
inc
call
mov
inc
lahf
es
jp
xchg
dec
cmp
mov
jns
cmpl
shrb
fsubs
imulb
and
push
addb
sub
pop
inc
cmp
mov
sub
and
sub
or
xorb
sbb
mov
add
lock
mov
pop
scas
dec
mov
iret
popa
add
inc
das
mov
jmp
repz
pop
adc
enter
setbe
xor
test
adcl
push
jmp
insl
addr16
mov
jp
xchg
out
sub
out
sahf
jle
popf
xorb
push
cmpsb
mov
ljmp
jo
aas
xor
sub
adc
xor
js
movsb
pop
dec
js
sahf
inc
stc
mov
ret
in
cmp
mov
or
out
xchg
mov
sbb
mov
daa
xor
stos
lcall
js
mov
adc
mov
cmc
jbe
mov
xchg
sub
cmp
mov
test
xchg
lahf
xchg
dec
dec
int3
or
test
xchg
push
push
push
mov
push
add
add
repnz
movsb
push
jns
cmpsl
repnz
mov
pop
pop
push
adc
and
mov
popa
addr16
movsb
mov
sbb
jno
loope
fstps
dec
xchg
dec
mov
xor
dec
insb
pop
xor
or
xchg
das
enter
movsl
jp
sbb
push
mov
cmpl
jno
rcll
outsl
mov
cli
test
push
inc
mov
add
jge
cmp
pushf
mov
aam
or
ret
insb
cmc
ds
sub
inc
lea
xchg
push
loope
lods
clc
ljmp
fsin
in
popa
sbb
in
std
mov
cmpsb
inc
out
sbb
inc
xchg
inc
push
imul
ds
js
call
fldcw
popf
inc
sbb
cmpsb
xchg
movsl
ds
mov
movsl
and
jmp
pop
test
ret
mov
test
mov
jne
int3
push
int3
ret
loop
mov
hlt
and
or
das
add
jnp
xor
adc
jb
out
sbb
test
inc
pop
dec
nop
bound
aam
lods
imul
push
notl
sbb
pop
cmpl
sahf
or
inc
push
dec
sub
mov
pop
sub
pop
sub
mov
cmp
in
jmp
and
adc
jae
addl
insb
pop
pop
xchg
xor
out
xchg
cmp
pusha
adc
jne
pop
sbb
imul
mov
jae
out
enter
insb
mov
in
pushf
mov
les
fldt
roll
pop
lock
inc
mov
or
lods
push
adc
mov
fcmove
xchg
hlt
in
or
pop
inc
adc
aas
mov
and
add
hlt
or
roll
sub
imul
jecxz
cltd
dec
cmp
push
lds
ror
popf
aaa
repnz
push
je
popa
cmp
xor
mov
pop
std
movsl
cmp
les
or
aas
xchg
loope
jo
xor
out
in
inc
mov
jns
jl
pop
ret
cld
or
sahf
or
ljmp
aaa
pop
lock
push
or
loope
add
sarb
mov
adc
and
iret
jp
dec
test
mov
imul
mov
leave
jmp
int
push
adc
sub
les
ret
xor
aad
pop
decl
push
rol
jmp
mov
jnp
fcomps
iret
xchg
test
dec
push
in
jl
aam
negl
cltd
xor
in
or
cmp
popf
stos
lcall
into
iret
jecxz
pop
lret
xor
jo
inc
xchg
pandn
das
in
insb
lahf
mov
mov
into
cmp
movsb
je
cmpsl
jae
ret
add
aad
jmp
mov
mov
mov
test
pop
lods
add
fldl
jmp
outsb
inc
lods
dec
test
call
pop
mov
push
mov
push
cmp
push
test
testl
sbb
imul
xor
pop
lret
data16
and
lock
in
push
lret
in
stos
push
lret
and
mov
scas
dec
or
out
sub
pop
repz
xchg
fidivs
insl
mov
dec
add
into
das
push
frstor
push
rolb
jmp
jne
popf
sub
mov
pop
jmp
push
xlat
inc
cmp
aam
mov
ftst
stos
arpl
push
nop
fidivs
mov
adc
push
cmc
cs
mov
int3
flds
in
jp
lret
jno
sahf
test
cmp
movsl
icebp
sbb
scas
iret
sbb
cmp
xchg
cli
je
push
icebp
cmp
lahf
mov
jge
sbb
fstpl
mov
pusha
scas
add
jnp
lret
dec
int
insb
outsb
int3
xchg
or
mov
xchg
jmp
sbb
jecxz
aas
jmp
and
cmc
xchg
push
sub
mov
sbbl
and
mov
or
popf
imul
jo
mov
cmpsl
call
test
faddl
jnp
clc
fs
adc
mull
and
add
cmp
aaa
aaa
inc
mov
adc
dec
jne
fisubrs
mov
subb
add
out
aam
xlat
mov
mov
repz
inc
mov
push
adc
outsl
push
xor
loope
or
ficomps
aam
les
sbb
pop
aad
lea
lret
movsb
scas
cld
push
shlb
cmp
adc
and
or
mov
popa
jae
push
out
jno
and
xor
aam
cmp
pop
lret
mov
iret
and
xor
inc
xchg
ds
add
ret
cmc
xorl
leave
jbe
fwait
dec
les
or
push
xchg
aam
add
testb
lret
in
in
lret
jno
sbb
cli
adc
push
lret
bound
xorl
fdiv
xchg
bound
or
mov
or
arpl
out
inc
pop
out
mov
cs
add
sahf
xchg
push
jae
pop
pop
test
shl
xor
outsb
daa
xchg
mov
inc
ja
or
lret
ja
das
mov
out
mov
mov
mov
lea
shl
sbb
mov
push
mov
jno
mov
rcrb
sbb
mov
outsb
lea
mov
test
push
pop
enter
mov
or
sbb
enter
dec
sub
xchg
imul
enter
iret
lods
or
jmp
sbb
out
mov
in
daa
js
add
mov
or
fnstenv
subl
in
std
bound
loopne
addr16
cmp
mov
jbe
adc
xor
cmp
or
ss
sti
ss
xchg
lcall
pop
mov
mov
cmp
lods
and
add
xchg
jo
dec
fucomip
dec
rol
sbb
jb
fcomps
insl
dec
cmp
mov
dec
shrb
or
push
lock
sbb
roll
into
push
fisttps
push
ret
push
clc
xchg
imul
jne
xor
cmp
push
js
inc
jns
mov
loopne
adc
mov
test
ficoml
movsl
out
xor
movsb
mov
aaa
in
pop
jo
xor
cmpsl
inc
and
shrl
pop
cmpsl
fwait
xor
fsubl
mov
mov
sub
push
shl
xor
loop
sub
ljmp
out
push
sub
adc
es
in
jo
adc
pop
sarb
xchg
add
push
leave
mov
xchg
test
mov
dec
roll
pop
jmp
flds
enter
divl
mov
notl
add
ds
out
add
push
xchg
mov
out
call
pushf
xchg
push
es
ret
lret
test
cmp
jnp
repz
jns
stos
dec
in
inc
cltd
cmp
or
sbb
xorb
les
mov
push
rcll
adc
lods
inc
pop
mov
xor
fmuls
mov
sbbb
aam
repz
je
jmp
sarb
cmp
int
jecxz
shrl
es
ret
loopne
and
adc
clc
jbe
mov
dec
or
insb
out
dec
cs
leave
setb
mov
dec
das
adc
inc
sub
xchg
arpl
lock
lret
out
push
inc
imul
stc
out
and
pop
cmp
fisubl
sarb
inc
rcrl
mov
sti
out
jmp
pop
mov
mov
stc
dec
push
cltd
mov
jg
jp
dec
icebp
cli
aas
mov
movsl
stc
insl
incb
fists
add
cs
rcrb
ja
outsb
pop
imul
mov
mov
pop
cli
mov
aam
gs
les
outsl
test
data16
and
push
sti
sbb
inc
jno
repnz
mov
aad
adc
dec
lea
shl
enter
movsl
mov
jne
jbe
daa
push
and
in
or
int3
in
in
jae
sub
addl
call
dec
mov
loopne
fmuls
xchg
jnp
sbb
pop
out
add
mov
mov
outsb
dec
or
cmp
jbe
inc
mull
mov
mov
scas
or
jp
push
and
pop
lahf
cs
or
ftst
jmp
aaa
cli
fmuls
push
shrb
dec
out
and
cmc
and
dec
mov
cmp
in
swapgs
pusha
in
pop
xchg
negb
ficomps
int
cmc
mov
push
imul
xlat
ret
daa
mov
aad
out
xchg
outsl
add
mov
outsl
mov
or
mov
outsl
mov
cmp
push
fcompl
mov
jle
or
push
add
cs
das
cmp
add
in
xor
sbb
into
xchg
inc
cmp
add
pop
mov
jecxz
cmp
movsb
mov
sbb
mov
in
pop
cwtl
adc
dec
mov
loope
in
sbb
test
int3
fmulp
xchg
or
inc
jae
mov
mov
lock
dec
sub
dec
lock
xor
or
and
cmp
ret
mov
mov
in
testl
push
dec
mov
pavgw
fsubrl
push
sbb
aad
inc
nop
inc
inc
lods
lahf
dec
cmpsl
mov
mov
mov
pusha
aas
sti
pandn
and
or
daa
jo
addb
mov
gs
aaa
rcrl
sbb
imul
dec
in
outsb
xor
sti
or
jecxz
or
jge
ror
or
js
or
imul
push
xchg
cmpsb
adc
push
fsubrl
push
or
stos
addr16
mov
cmp
push
adc
js
movsl
paddusb
pop
imul
add
xchg
add
add
arpl
inc
shrb
add
ret
cmp
pop
xchg
or
and
rorb
daa
mov
into
dec
push
xchg
jbe
sar
dec
mov
das
mov
jmp
repz
das
sbb
jnp
bound
cmp
xor
push
lock
out
out
das
inc
sub
data16
inc
test
fistpl
test
adc
inc
shrl
and
test
mov
dec
ja
push
loop
mov
aad
cmp
lret
push
push
adc
pop
and
jnp
jge
xor
and
xor
jbe
orl
aam
push
cltd
and
dec
adc
dec
pop
in
popf
out
dec
mov
mov
test
scas
popf
jnp
pop
xchg
ljmp
and
clc
sar
icebp
jb
nop
xor
test
fldt
add
or
pop
adc
in
movsl
jl
mov
pushf
inc
test
xchg
hlt
push
idivb
jno
mov
and
mov
dec
int
imul
js
mov
or
imul
sub
mull
xor
jg
loopne
cmp
mov
pop
xchg
outsb
jmp
mov
sti
cli
pop
mov
inc
push
push
or
arpl
lret
sbb
mov
jo
idivb
sti
push
dec
mov
insb
cmpsb
jle
aam
mov
imul
push
mov
iret
cs
push
out
lds
into
lock
pop
mov
rcrl
test
addr16
jge
jno
into
test
ljmp
push
push
adc
xor
sub
add
and
jbe
testb
dec
lret
ja
lret
out
stos
orl
fwait
push
inc
ljmp
addr16
iret
jle
js
inc
mov
mov
jp
cmp
pushf
adc
lock
dec
sar
pop
lds
or
leave
xchg
dec
xorb
fsubrl
or
mov
loopne
xorl
les
dec
rep
add
add
pushf
andb
lret
add
std
fst
stc
outsl
fimull
cltd
jl
mov
mov
push
add
push
rorl
aad
cmp
jbe
enter
shll
inc
test
cld
push
enter
inc
test
call
popa
enter
push
popf
leave
and
cmp
push
out
testl
sti
jae
xchg
cmp
cld
sbb
sub
sub
dec
jmp
sbb
popa
push
push
repz
and
cmp
mov
ret
dec
xor
popl
mov
test
inc
imul
je
bound
test
jg
fs
js
sub
adc
out
xchg
lods
cmpsl
xor
mov
xchg
cmp
cs
rolb
out
jo
popf
xlat
inc
jmp
subl
cmc
loopne
pop
mov
loope
les
xlat
ret
dec
sbb
sbb
sahf
adc
push
movsl
push
sarb
add
push
cli
pop
jge
incl
cmp
jbe
imul
mov
loope
mov
mov
pop
outsb
dec
rcrl
xor
stc
lods
jge
inc
out
js
mov
mov
jne
push
xabort
cmpsl
xlat
mov
loopne
add
arpl
testl
pop
cli
adc
ja
jns
mov
imul
outsl
nop
mov
inc
cld
sub
inc
pop
test
pop
add
push
fidivl
pop
cwtl
or
push
aaa
and
ja
xchg
mov
push
es
ret
mov
cmp
dec
push
xchg
jb
xlat
lea
insb
fucom
sub
xchg
jnp
xor
cs
add
mov
bound
dec
xchg
sbb
push
loope
xlat
pmullw
mov
mov
lds
or
xor
nop
mulps
push
repz
ja
xchg
sub
sub
nop
cli
mov
push
mov
sub
sub
jg
aam
sbb
xlat
xchg
push
je
dec
fstpt
das
jp
xor
pop
aam
notb
lods
rorl
sub
outsb
xchg
dec
cmp
mov
sbb
pop
das
test
test
fmull
gs
push
icebp
outsb
jbe
adc
cld
pop
mov
jge
xor
rorb
out
sub
xlat
pop
imul
lock
push
jmp
jmp
adc
dec
pop
outsl
sti
fcmovnu
mov
into
lods
push
inc
pop
mov
push
jbe
stos
aaa
into
jmp
jae
jae
cmp
testl
cs
and
cmp
mov
xchg
int3
mov
pop
test
fsubr
push
in
je
incb
xlat
imul
add
sahf
xchg
lock
mov
cmpsb
sbb
aam
mov
lock
mov
dec
lock
xchg
push
into
aas
int3
pop
pusha
mov
xchg
insb
sahf
fwait
scas
cmp
mov
jnp
push
adc
js
jno
hlt
sub
or
dec
mov
inc
fisubrl
aaa
fidivrl
arpl
insl
lret
adc
aam
push
or
lds
loope
loopne
ja
sti
jno
pop
arpl
es
insb
das
testb
sbb
xor
dec
lahf
cltd
sub
fistps
xchg
imul
push
adc
inc
or
outsb
and
xorb
inc
test
outsb
push
out
sub
add
sub
stos
in
or
mov
ss
push
or
jnp
sbb
int3
aam
ss
das
idivb
xorl
sub
add
and
push
out
cmp
imul
and
cld
add
mov
push
jp
test
aaa
lahf
sub
jae
jns
sub
pusha
lea
jbe
fisubl
xchg
shlb
mov
aad
ret
in
sarb
inc
mov
repz
ja
shlb
dec
jp
mov
sbb
iret
inc
mov
adc
mov
mov
sub
mov
add
cltd
cld
cltd
sub
mov
pop
xchg
xor
inc
jnp
idivb
test
jecxz
aam
lahf
or
xor
shlb
or
clc
ret
adc
jg
outsl
push
pop
dec
jbe
xchg
mov
out
iret
idivb
push
das
push
pop
es
jg
outsl
push
pop
dec
jbe
xchg
mov
out
iret
idivb
push
das
push
pop
es
jg
outsl
push
pop
dec
jbe
xchg
mov
out
int
aas
push
sub
ss
outsl
push
fbld
mov
xchg
xor
dec
sub
sbb
or
shrb
xchg
testb
mov
sbb
aaa
xchg
inc
cmpb
mov
adc
jmp
ss
es
sub
sbb
or
jns
imul
cltd
jle
cmp
jmp
cmp
add
insb
or
pop
mov
mov
pop
mov
inc
xchg
inc
cmpsl
inc
xchg
dec
xchg
movsl
xorl
mov
fcomp
mov
dec
lea
leave
int
jno
mov
sbb
dec
mov
inc
test
jbe
push
add
pop
mov
and
bnd
jg
inc
pop
std
mov
ja
cwtl
test
loop
loope
sub
jae
or
pop
cmpb
dec
sub
sub
addr16
addr16
add
pop
movb
cmp
or
sbb
movsl
imul
sbb
hlt
xchg
stos
jl
adc
sub
cmp
addl
aam
dec
cmpsl
out
add
mov
inc
pushf
fimull
cmc
pop
sub
sbb
imul
cltd
je
pop
stc
sub
call
js
pop
test
jns
sbb
cmp
adc
icebp
add
mov
nop
dec
cmpb
jns
sub
and
sbb
fwait
and
push
clc
pop
xchg
mov
mov
es
mov
mov
cmpsb
mov
jbe
data16
push
jmp
es
sub
sbb
or
jns
imul
cltd
jbe
data16
push
jmp
es
or
test
imul
sbb
bnd
cwtl
mov
pop
cmp
xchg
xor
js
rol
xlat
sub
xlat
out
stc
cwtl
movsl
mov
and
sbb
bound
xor
sarl
js
xchg
or
in
rcr
or
mov
push
mov
shrl
pop
sub
in
inc
pop
mov
lods
inc
and
lock
sub
push
addr16
pop
inc
aas
xor
xchg
jl
push
mov
jbe
aad
data16
xchg
leave
scas
add
loope
out
stos
pop
push
jmp
daa
jno
aas
fsubp
clc
push
data16
inc
vpackuswb
cmc
data16
mov
cmp
pop
mov
pop
cmp
stos
mov
clc
dec
push
rorl
cli
in
les
sbbb
fimuls
sbb
add
xchg
cmpb
xchg
pop
lds
mov
cmc
mov
je
cmp
data16
out
int3
mov
sub
cmp
inc
fcoms
je
icebp
cmc
xor
and
aam
xchg
loopne
dec
pusha
pop
mov
or
insl
mov
adcl
ja
ds
or
test
sbb
jne
dec
xor
push
or
dec
sub
sbb
iret
mov
mov
jb
sub
cltd
adc
cmp
sbb
out
pop
scas
jecxz
daa
or
bound
add
jae
lret
mov
lcall
pop
dec
into
and
and
ret
cwtl
mov
adc
adc
and
mov
pop
pop
xchg
jge
loop
inc
inc
adc
push
aaa
loopne
int3
mov
dec
xor
or
xchg
and
fidivrl
mov
xchg
lea
and
mov
syscall
jo
sbb
add
scas
int
aad
push
mov
sbb
ja
pop
cmp
mov
mov
je
inc
out
imul
fisubl
xor
mov
mov
xlat
inc
test
inc
mov
push
mov
xchg
and
mov
push
or
sub
pop
enter
test
inc
js
std
cld
mov
jns
arpl
mov
pop
cmp
repz
movsb
scas
into
mov
pop
addr16
push
es
arpl
in
lret
test
adc
adc
push
aad
sbb
inc
pop
adc
in
es
mov
das
mov
popf
fwait
mov
push
enter
inc
cmp
loope
sbb
push
lea
jmp
sti
rcl
pop
ljmp
pusha
dec
cmp
xchg
lret
aas
mov
inc
in
subb
hlt
nop
sbb
insl
mov
in
inc
or
addr16
pushf
loop
gs
mov
in
inc
mov
ja
adc
pop
loopne
fs
xchg
sti
sti
add
scas
clc
xchg
xor
ljmp
ss
ret
add
js
sahf
pop
cmp
inc
push
insl
xor
fnsave
mov
aas
pop
mov
sub
ljmp
sub
mov
xchg
loope
mov
scas
aad
cmpsl
xchg
std
outsb
pop
jbe
mov
int3
in
mov
xor
fnstenv
xchg
loopne
outsl
xchg
aas
or
leave
clc
hlt
loop
lods
outsl
push
subl
pop
or
lret
stos
aaa
shrl
mov
and
rcl
mov
lods
test
pop
and
cmpsl
lea
popf
aad
into
scas
imul
outsb
les
jb
xchg
mov
mov
insl
cmpsb
jle
daa
aam
fdivr
adc
and
rcll
insl
pop
insb
cmc
jns
mov
xor
rcll
push
out
int
mov
nop
rorl
push
filds
sti
mov
fisubs
aas
mov
mov
add
fists
and
pop
imul
xchg
js
lret
leave
les
rorb
jecxz
pop
je
outsb
mov
in
push
stos
mov
jns
push
popa
cwtl
test
leave
pop
stos
je
rorb
dec
lea
xlat
xlat
jmp
jno
push
mov
pop
dec
loopne
les
cli
lods
xorb
sbb
lods
pop
mov
pop
sbb
loop
movsl
movsl
adc
mov
into
arpl
push
std
lods
dec
cmc
hlt
lret
bound
mov
fcoml
ljmp
imul
xchg
inc
mulb
push
dec
divb
lods
mov
push
pop
testl
clc
stos
dec
jecxz
gs
cmp
push
push
xchg
xor
iret
pop
add
das
add
inc
in
xlat
jle
je
bound
loop
mov
ja
and
cmpsb
insl
mov
leave
jne
mov
lds
jmp
xchg
sbb
pop
jbe
push
mov
or
int
rcl
sbbb
push
into
mov
in
lds
out
and
es
adc
std
or
or
dec
rorl
and
fistpl
imul
or
and
fsubs
adc
mov
repnz
cmpsb
sub
or
aaa
pop
pop
lock
in
ds
fldpi
icebp
lock
sub
out
lods
loopne
mov
push
mov
or
or
inc
rcr
cmpb
xchg
lods
adc
movsl
sbb
lcall
loope
and
shl
sahf
mov
push
test
xchg
iret
jg
stc
into
fadds
adc
out
inc
mov
sub
je
ljmp
push
mov
adc
stos
jo
icebp
sub
jmp
mov
stos
jno
enter
pusha
xchg
stos
outsb
test
stc
xchg
or
jle
xor
mov
inc
movsb
scas
aaa
fisubs
mov
out
xchg
std
and
outsb
inc
loop
jge
pop
iret
dec
mov
or
ss
xchg
fs
mov
dec
push
inc
int3
push
adc
cmp
loop
cmc
adc
rorb
cli
push
inc
pop
add
push
nop
addr16
pusha
das
leave
dec
cmp
rorl
adc
xchg
jno
adc
iret
cmp
lcall
je
xchg
jg
xor
notl
or
jbe
cmp
les
cwtl
out
mov
cmp
mov
xchg
pop
add
mov
scas
xchg
testl
inc
adc
cmpsb
xor
dec
sbb
cmpsb
sub
pushf
mov
adc
sub
inc
daa
repz
fcompl
inc
mov
jle
adc
sub
inc
push
fdivl
aad
shlb
inc
pop
pushf
int3
xchg
mov
cmp
and
jb
addr16
and
mov
imul
push
repnz
push
sbb
mov
sbb
sahf
dec
jbe
pushf
sub
pop
lods
xor
or
jge
scas
cmp
pushf
insb
pop
ret
push
push
inc
add
stc
push
mov
push
sbb
mov
xchg
lret
iret
das
icebp
fidivl
mov
pop
aam
push
push
lock
lret
das
lret
leave
cs
xor
cmpps
pushf
push
pop
aaa
mov
fldenv
adc
and
bound
pop
pop
int
add
lret
repz
add
test
int
lock
push
data16
xor
push
jmp
dec
inc
aaa
je
scas
cmp
push
lds
jg
jne
xchg
jnp
nop
inc
les
lds
adc
and
sti
int3
xchg
out
notl
mulb
cs
push
sti
add
add
into
in
loope
dec
push
jmp
cmp
mov
dec
sbb
lock
pop
and
mov
jae
icebp
out
inc
dec
push
mov
popl
mov
mov
int3
rorb
xor
sbb
je
gs
mov
loopne
add
popa
sub
jmp
and
dec
scas
push
jg
mov
loopne
and
movsb
sarl
xor
and
xor
je
movsl
mov
fbld
insl
pop
jmp
or
dec
jne
push
pusha
push
and
out
mov
call
out
icebp
les
stos
jecxz
imul
mov
mov
imul
and
mov
lcall
cwtl
dec
daa
or
mov
jo
jle
call
xchg
pop
ss
bound
mov
sub
test
xchg
das
jnp
sbb
lock
rorb
or
test
ret
inc
pop
mov
xchg
ret
or
jbe
pop
addr16
xchg
or
fsubrs
push
xchg
adc
hlt
loopne
add
sbb
and
cli
stos
mov
adc
pop
mov
insl
dec
jo
push
loope
lods
cmp
add
rolb
and
dec
int3
cmp
addr16
fcmovb
ss
dec
int3
mov
xchg
jnp
lods
insl
or
or
int
cmpsl
cltd
pop
mov
dec
in
mov
loop
ret
ret
int
cwtl
add
mov
mov
fisubl
shlb
sub
pop
push
fsubs
sbb
out
lds
mov
roll
jb
mov
sbb
orb
mov
fwait
repnz
cmpsl
jae
push
or
mov
pop
xchg
scas
cmp
and
icebp
xor
pop
xchg
pop
mov
ja
jae,pt
xor
mov
xchg
or
jge
stc
sbb
dec
jnp
popl
andl
dec
sub
or
push
dec
test
into
xor
icebp
adc
mov
cld
fstl
mov
popa
pop
xchg
ret
out
add
cmpsl
pop
push
push
dec
mov
mov
out
pop
pop
cmc
add
mov
or
lahf
push
jne
cmc
xchg
inc
jl
in
js
pop
add
add
shlb
mov
jg
sarl
pop
dec
or
and
mov
aas
ss
mov
jnp
jbe
jb
add
arpl
sbb
sbb
mov
pop
dec
jo
sbb
sbb
out
and
repz
stos
sbb
out
push
insl
rorb
cmp
jle
fstps
push
ss
jmp
int
mov
movsb
icebp
push
aas
ds
or
stos
orl
popa
lds
and
push
mov
test
addr16
inc
add
lods
imul
xorl
xchg
js
in
mov
out
fldt
pop
xchg
test
movsl
lret
enter
mov
xchg
adc
lret
fldcw
ss
ret
gs
out
jmp
push
xchg
xchg
pop
mov
lods
addl
sti
pop
or
adc
pop
subb
aad
pop
test
pop
and
repz
loope,pt
stc
fsubrl
mov
stc
pop
xchg
aaa
mov
or
jb
sahf
cmpsb
dec
inc
das
cmp
aam
pop
clc
sbb
in
and
rcl
fidivl
or
pop
mov
shr
insb
fs
and
cltd
xor
enter
jg
xor
inc
mov
out
cmp
test
inc
notb
stc
mov
popa
mov
dec
femms
xchg
bound
outsl
das
stos
arpl
js
push
mov
lcall
lret
int3
push
jecxz
xchg
push
faddl
stos
inc
les
ljmp
stc
inc
ret
js
sbb
jb
int
add
inc
xor
shl
andl
loop
and
in
inc
mov
xchg
xchg
decl
xor
pop
leave
and
cltd
fnstenv
repz
pop
test
pop
mov
or
sub
push
int3
lock
push
cmp
cli
jbe
movsb
xchg
lret
cmpsl
or
lock
pop
cmp
jle
stos
filds
out
scas
repz
mov
outsb
xor
lcall
loope
fs
iret
rcr
mov
pushf
test
sbb
mov
pop
and
mov
out
xchg
into
cmp
jle
add
jae
test
push
push
dec
stc
add
leave
outsb
pop
in
inc
jp
outsl
ja
push
or
mov
fisttpl
pop
hlt
adc
cmp
add
ret
jno
mov
dec
hlt
jecxz
fnstenv
push
add
testb
sub
dec
adc
sbb
roll
pop
dec
daa
ljmp
dec
inc
cld
out
push
in
stos
inc
push
es
xor
in
lret
fucomi
sub
pop
lock
and
xchg
sub
pop
jle
cli
jp
pop
insl
cld
and
stos
sbb
cmp
jno
inc
jg
sbb
ret
dec
mov
leave
mov
outsl
dec
jg
pushf
mov
jmp
bound
jl
dec
inc
leave
ljmp
gs
insb
fcomi
jbe
aas
and
lret
mov
mov
jns
jnp
lahf
adc
push
push
push
mov
mov
jb
dec
sahf
push
mov
pop
add
jbe
inc
lgs
xorl
push
fcoms
int
cwtl
lret
loope
xor
xchg
sub
inc
lods
test
inc
arpl
sahf
pop
push
xor
jl
mov
and
pop
es
and
loop
loope
or
cmpsl
stos
pusha
rcrb
popf
int
push
stc
outsl
mov
jo
mov
xchg
movsl
sub
out
add
push
adc
stos
push
push
cmp
adc
xchg
cmp
add
dec
xor
sbb
fs
rcll
outsl
push
mov
jl
sbb
xor
inc
ds
lret
dec
aam
fdivs
cwtl
scas
jg
fs
mov
clc
sub
test
or
sub
test
pop
jnp
add
test
out
inc
push
scas
or
sbb
popa
inc
and
call
mov
mov
out
inc
shll
in
jp
stc
jns
ret
cmpl
mov
push
gs
mov
ret
add
mov
loope
adc
jle
sbb
mov
ret
ljmp
popa
cli
enter
jae
mov
ret
dec
stos
in
test
dec
icebp
lret
xor
xchg
js
fiadds
dec
mov
push
cmpsb
sub
mov
test
xchg
sti
and
sti
lea
xlat
inc
push
and
std
cmp
mov
adc
and
and
jg
mov
xor
inc
hlt
mov
aam
or
fwait
popa
and
sub
test
or
xor
mov
loopne
add
inc
sbbb
fistl
jo
mov
shll
cmc
and
lea
and
xchg
mov
div
mov
dec
shll
xchg
inc
cmp
fsubl
pop
loopne
addr16
mov
inc
hlt
push
pop
jne
mov
or
push
adc
std
sarb
dec
jbe
sub
movsl
cmp
sub
fdivl
push
rcll
gs
aas
pop
je
adc
loope
xchg
push
andl
sbb
lcall
int
add
push
stos
mov
lods
push
rcrl
in
fimuls
mov
pop
ja
ljmp
movsl
fnsave
lcall
cmp
adc
pop
call
cmp
push
sub
jl
filds
andl
push
fcmovb
sahf
lret
ret
fisubs
lahf
push
ret
xchg
and
xor
mov
out
in
cmpb
inc
jns
xchg
push
mov
xchg
insb
pop
or
xor
mov
jbe
sub
aas
dec
push
push
add
lock
mov
mov
cli
mov
out
out
mov
xchg
aad
add
add
enter
pop
xchg
movsl
inc
mov
std
xor
mov
pop
or
add
mov
mov
sbbl
push
mov
and
mov
xor
insb
lret
clc
cmp
xor
xchg
in
subb
lds
adc
push
xchg
sbbl
imul
cwtl
add
add
mov
jp
mov
adc
shr
inc
nop
dec
std
cmp
lods
sub
or
and
sub
push
clc
aaa
add
mov
dec
and
inc
xor
sti
inc
mov
subl
cmpsl
lcall
cmp
and
lock
lcall
and
xor
addb
enter
orb
les
inc
jecxz
mov
inc
es
lcall
jmp
sbb
mov
int
or
cwtl
addb
arpl
xor
call
je
cmc
and
pop
loopne
add
repz
out
data16
sbb
lahf
fstpl
out
and
stos
inc
sbb
icebp
pop
mov
pop
jecxz
or
mov
inc
dec
mov
rcrl
xchg
adc
int3
int
int3
aam
rclb
add
mov
push
sbb
mov
mov
push
rorl
scas
adc
push
dec
add
cltd
xchg
shll
inc
xor
or
sub
fisttpll
rcll
jb
dec
ficomps
out
sub
jne
xor
mov
push
inc
sar
pop
int3
fs
fwait
nop
ror
sarb
jge
lock
das
jno
cmpsb
fwait
sbbl
push
push
jg
xchg
dec
sub
xchg
mov
icebp
popa
fldenv
sub
mov
das
xchg
dec
cmp
out
lea
inc
pushf
jp
jge
xchg
int3
or
movsl
or
pushf
popf
push
adc
roll
rorl
fwait
xchg
sahf
out
stc
lret
or
outsl
sub
lea
rclb
lahf
pushf
lock
pop
ret
repz
mov
xchg
mov
pop
stc
mov
cltd
cwtl
inc
push
push
adc
icebp
in
add
push
and
adc
lea
inc
jmp
fistl
cwtl
mov
or
jno
les
ret
push
icebp
pop
leave
adc
pop
pop
mov
push
test
cmpsl
sbb
ljmp
mov
sbb
xorb
scas
sbb
mov
sbb
ljmp
repnz
inc
xchg
mov
aas
daa
and
jae
xor
ret
in
mov
inc
lods
and
xchg
mov
sbb
mov
jle
popa
cmp
push
mov
repz
inc
fisubl
aaa
andb
pop
mov
mov
and
testl
mov
es
icebp
mov
notl
mov
add
cmc
fstps
push
inc
paddb
sub
mov
imul
pusha
daa
jb
fcmovnb
sub
decb
push
mov
add
or
pop
inc
add
mov
jecxz
push
repz
jno
aaa
jmp
xlat
dec
push
pop
stos
jb
jo
faddl
call
push
popa
xchg
int3
jle
and
mov
xor
das
mov
jns
popf
cmpsb
jle
aas
mov
test
mov
aaa
fs
xchg
fildll
daa
pop
movsb
out
push
testb
jb
jmp
dec
aad
leave
cmp
lea
shrl
or
inc
add
sub
add
and
xchg
sti
jb
mov
pop
push
pop
jo,pn
add
ret
cld
jl
mov
fadds
push
xchg
cmp
mov
xorb
mov
dec
or
push
mov
jmp
inc
lock
negb
cs
dec
sarl
popf
sbb
ja
push
inc
and
pop
or
fcompl
pop
test
sub
scas
xchg
dec
out
cwtl
adc
jb
icebp
mov
xor
sub
cld
sbb
sbb
and
jge
icebp
fstps
pop
stos
pop
enter
mov
int
cmp
mov
inc
enter
mov
xor
sahf
popf
out
cltd
jp
adc
mov
ljmp
dec
movups
xor
cmc
ja
adc
or
cmpb
scas
jmp
mov
scas
or
mov
pop
xchg
aaa
sahf
aas
and
mov
mov
mov
dec
arpl
into
dec
mov
ret
jge
dec
mov
push
outsl
cmp
fwait
cmp
movsl
fs
pop
testl
push
ret
gs
data16
pop
jmp
imul
aaa
mov
aad
negb
mov
movsl
pop
mov
jnp
mov
mov
fwait
pop
xchg
sbb
push
cld
mov
inc
insb
imul
int
xorb
mov
sub
lret
pop
cmpsb
imul
into
mov
sbb
out
mov
rclb
jecxz
add
imul
movsl
jecxz
out
pop
mov
movsb
scas
jmp
pop
xor
mov
and
jmp
imul
sub
out
in
pop
idiv
mov
sub
aaa
in
sbb
or
jns
imul
cltd
jbe
data16
push
jmp
es
sub
sbb
or
jns
imul
cltd
jbe
data16
push
jmp
es
test
loop
xchg
imul
mov
jbe
outsl
stc
adc
push
fnstcw
leave
ret
sub
sbb
or
pop
ss
mov
in
xor
adc
dec
mov
sbb
sbb
mov
pushf
js
mov
cwtl
sub
pop
cwtl
js
js
mov
cwtl
sbb
dec
fcomps
push
sbb
dec
enter
call
cwtl
sbb
dec
fcomps
push
sbb
dec
fcomps
sub
pop
clc
clc
or
aam
mov
cltd
adc
fwait
mov
out
inc
iret
int3
add
arpl
xor
add
leave
mov
cmpsl
bound
jge
out
jno
mov
mov
cmpsl
push
pusha
call
cltd
into
cmpsl
push
int3
pop
push
shll
stc
or
data16
js
enter
pop
cmp
sbb
dec
hlt
dec
or
fimuls
test
or
jne
addr16
lods
lds
dec
shlb
pusha
int
cltd
js
cmp
in
jmp
cwtl
loopne
sub
pop
adc
into
mov
mov
cmp
pop
sub
std
jns
xlat
or
cmp
dec
fcomps
push
sbb
dec
enter
call
fmul
les
jle
daa
mov
or
stos
icebp
inc
pop
cmp
adc
add
dec
fistl
sub
outsl
lods
sub
cmpb
jne
push
pop
aam
cmpsl
sub
pop
mov
lret
pop
cwtl
dec
mov
pop
call
mov
cwtl
sub
pop
fsubrs
js
mov
cwtl
sbb
dec
fcomps
push
sbb
dec
enter
call
popf
or
mov
aas
or
pop
xchg
inc
pop
stos
repz
jp
les
jl
in
push
leave
push
pop
pushf
mov
add
pop
or
xor
cmp
xor
cmp
das
jecxz
ret
xchg
push
cwtl
sti
jg
cwtl
lret
cld
out
lods
jnp
dec
int3
into
cmpsl
arpl
divl
mulb
sub
mov
jl
push
sub
sub
mov
xor
and
adc
or
adc
stos
inc
loope
fwait
out
mov
inc
push
and
stos
sbb
mov
ret
das
loop
cmp
insb
pop
gs
mov
push
sub
push
test
mov
push
imul
mov
adc
sub
insb
push
add
adc
stos
pop
hlt
mov
sbb
push
pushf
add
icebp
ljmp
negl
cmpsb
inc
cmpsl
xchg
mov
outsl
pop
test
rol
push
xchg
cwtl
sbb
ret
push
lea
sub
sub
jns
jmp
xchg
mov
test
or
mov
jecxz
fldenv
outsl
or
setb
outsl
shlb
jo
std
xlat
psrlq
sbb
pop
dec
repz
dec
std
mov
ja
mov
repnz
stc
mov
pop
push
stos
jo
inc
mov
addr16
xor
sbb
mulb
aaa
or
xchg
and
push
mov
push
push
xchg
bound
mov
cs
xor
in
scas
pop
and
ss
mov
adc
mov
popa
mov
stos
sbb
mov
rorb
repnz
test
inc
stos
jnp
mov
testb
pop
mov
sub
inc
sbb
incb
shlb
int3
adc
pop
pop
orb
enter
in
inc
lods
xchg
int3
dec
xchg
movsb
dec
lahf
add
mov
leave
lods
or
adc
push
addb
ret
mov
movsl
inc
inc
ss
outsl
jmp
jp
sbb
inc
shll
cmp
call
arpl
pop
adc
push
repnz
out
pop
cmc
test
xor
adc
sti
iret
cmp
adc
jg
inc
lods
jge
test
mov
and
mov
ja
imul
fcomp
pop
lds
pop
test
mov
jae
inc
xchg
mov
mov
ret
add
mov
sbb
aad
pusha
cld
jo
mov
mov
in
sbb
inc
adc
in
pmulhw
gs
push
mov
pop
rcrb
mov
fcmovu
mov
mov
or
and
insb
xchg
ret
mov
repnz
dec
push
loope,pt
lea
cmp
add
jnp
lcall
adc
movl
jg
mov
push
aas
cli
and
in
add
icebp
mov
or
pop
cmp
xor
add
xor
leave
out
or
loopne
adc
aam
mov
hlt
pop
add
imul
push
je
lcall
add
icebp
dec
ret
aas
rep
arpl
adc
adc
xchg
push
push
mov
inc
call
fisubrl
enter
loope
out
rep
mov
pop
or
and
in
or
push
push
cmp
rorl
dec
mov
ds
jno
jnp
aad
pop
sar
subb
nop
push
in
push
mov
adc
push
sti
leave
lock
stos
in
cld
inc
test
push
in
cltd
ret
pop
lods
in
aam
popa
je
pop
pop
push
sub
pop
divl
shrl
adc
push
ja
jle
push
mov
lods
or
mov
clc
cwtl
lods
sub
push
pop
popf
pushl
int3
outsl
and
and
jbe
mov
in
add
add
cmp
cmp
int3
sbb
data16
sahf
pop
in
fsts
xchg
xchg
or
xor
js
mov
dec
jno
scas
jb
les
test
cmp
fildl
movl
pop
out
sbb
add
adc
mov
push
mov
cmpb
mov
jl
out
jno
clc
dec
sub
frstor
jo
lret
call
xchg
pop
mov
cmp
in
or
push
pop
adc
in
mov
adc
addb
scas
dec
sbb
sub
insb
das
inc
addl
and
ss
inc
enter
add
jo
ds
dec
out
lods
dec
add
xor
sbbl
mov
add
xlat
rep
xlat
test
pop
dec
mov
mov
add
popf
jg
mov
lret
cli
test
or
add
andl
xchg
push
xor
dec
push
push
rcrl
sti
push
mov
in
xchg
iret
outsb
loop
jecxz
push
cmp
and
shl
sbb
dec
out
jo
pop
xor
aaa
je
adc
cmpb
push
aad
mov
add
enter
and
lret
cld
xchg
dec
inc
notl
push
lods
dec
fidivl
xor
adc
hlt
mov
aam
aas
fcmovb
sbb
rcl
mov
in
mov
std
fildl
jg
dec
sbb
mov
mov
cmpsb
adcb
xchg
enter
lahf
adcb
mov
mov
popf
inc
lret
and
jno
sub
cmc
inc
push
imul
movl
es
scas
and
fs
cltd
aaa
inc
xchg
xchg
cld
pop
push
jge
push
lret
mov
clc
addr16
mov
xchg
test
inc
pop
inc
push
or
sub
insl
mov
jge
mov
xchg
loopne
js
mov
insl
loop
push
icebp
adc
out
mov
mov
sub
and
enter
xor
cld
sub
fnsave
xchg
mov
pop
push
xchg
adc
pop
jns
nop
cmc
jmp
lock
dec
push
loopne
or
mov
sub
roll
sbb
xor
jo
aam
loope
ret
fistl
arpl
es
or
inc
or
add
and
xor
adc
dec
inc
xor
scas
fisubs
sahf
fcomp
cmpsb
divl
roll
into
sub
dec
addr16
divl
jecxz
mov
and
lret
lods
outsb
and
sbb
fmuls
call
loop
mov
adc
stos
imull
push
add
and
jnp
scas
cs
jecxz
ljmp
xchg
inc
jo
aam
movl
idivl
in
into
fmul
movl
dec
lds
xlat
test
xchg
ds
inc
lcall
jmp
pusha
adc
pop
imul
repnz
rolb
lds
push
mov
add
mov
xor
sub
bound
pop
lods
hlt
fimuls
cmpsb
push
ret
clc
int3
fwait
mov
xor
push
mov
insl
repz
xor
and
outsl
je
xorl
fdivrp
rolb
push
xor
xorb
ror
and
mov
add
jp
push
jecxz
add
or
andb
sub
push
mov
inc
xor
insb
or
imul
notl
fdivr
call
inc
pop
jl
and
jae
lods
in
jecxz
jle
out
sahf
in
sbb
mov
push
and
shrl
sub
mov
dec
jns
sub
or
adc
cmp
inc
scas
mov
out
mov
sbb
dec
pop
pop
fidivrl
dec
sub
in
pop
fistl
subl
and
or
ret
ret
outsb
xchg
mov
and
movsl
orb
push
sbb
pop
add
jbe
mov
dec
adc
xchg
fwait
adcl
jmp
pop
hlt
stos
mov
incb
mov
cmp
mov
inc
xor
fists
dec
dec
pop
iret
iret
dec
inc
jecxz
mov
add
les
push
imul
shl
inc
mov
lea
dec
xor
gs
mov
out
mov
inc
push
jnp
inc
pop
cs
sbb
fildl
xor
es
cltd
mov
outsl
jnp
jbe
into
mov
jg
cmp
test
mov
cmpsb
outsl
inc
fdivrs
push
fisttpll
call
sarb
roll
dec
adc
mov
movl
xchg
inc
jno
mov
mov
cwtl
mov
enter
mov
int
sub
pop
sub
fdivp
adc
loopne
or
cltd
mov
loope
ja
sub
push
lcall
sub
sbb
aam
and
xchg
inc
adc
dec
sbbb
addl
xchg
or
sub
sbb
xchg
jne
xor
lret
jmp
int3
in
rcll
out
ss
movsl
add
rolb
repz
leave
mov
xchg
shufps
and
push
jmp
jno
sub
test
popa
fiaddl
cmpsb
mov
jle
push
sbb
push
xchg
mov
lret
mov
xlat
mov
add
push
push
fcmovnu
outsl
xchg
xor
outsl
mov
arpl
popa
popf
mov
pop
popf
mov
sbb
push
jmp
cmpl
lcall
pop
push
push
js
loopne
stc
mulb
cmp
mov
push
sbbb
xor
imul
push
mov
mov
shlb
mov
cmp
push
dec
pop
xor
fimuls
shlb
push
mov
sbb
jbe
cmc
rclb
sbb
jp
mov
dec
pusha
cltd
mov
cli
dec
or
inc
cmp
aad
mov
hlt
mov
add
xchg
out
cmp
jbe
inc
iret
in
dec
mov
push
out
dec
inc
mov
dec
xchg
daa
popl
inc
pop
cmp
repz
aas
ja
pop
jne
push
lods
push
sub
call
sar
and
cmp
jp
push
out
inc
inc
lods
andl
ret
cmp
scas
ret
mov
lods
lcall
push
cmpsl
ret
inc
in
je
xor
push
push
jne
roll
mov
stos
mov
push
mov
ret
scas
push
gs
jg
adc
pop
fmuls
mov
inc
outsb
scas
mov
aas
adc
nop
inc
and
jl
repz
mov
loopne
test
je
mov
adc
mov
sbb
int
jmp
subps
jl
pop
mov
cld
push
or
cmc
mov
or
loop
call
test
push
add
push
jecxz
xchg
pop
fsub
inc
sub
popa
mulb
adc
cltd
and
ret
je
lret
fucomp
cltd
jl
lds
pop
jl
pop
ss
xchg
or
loopne
std
mov
into
or
iret
movsl
nop
mov
stos
in
mov
dec
ror
das
cmc
mov
bound
mov
shlb
xchg
jae
js
shlb
add
push
in
cmp
pop
enter
push
sahf
inc
ljmp
add
out
aas
add
rcrb
addb
fistpll
fistps
bound
jl
xor
push
mov
cmp
sub
mov
jns
and
cmpsl
loopne
repz
cld
xchg
loopne
popf
xlat
sbb
dec
fisubrs
aad
dec
push
adc
add
addr16
daa
cs
pop
js
in
push
mov
pop
insb
xlat
mov
daa
jne
inc
shlb
call
inc
inc
cmpsb
push
xlat
insb
out
stos
ret
call
xchg
lret
in
or
pop
mov
out
shr
dec
jbe
mov
ja
jg
decb
push
xor
xor
fs
push
cmp
test
lea
add
idivl
jmp
lret
mov
mov
addb
int
stos
jne
add
or
test
xchg
pop
addl
mov
pop
cmp
mov
mov
shl
sbb
mov
lods
cmp
leave
dec
xor
push
xchg
shll
loope
bound
or
das
movsl
mov
and
pop
mov
pop
sub
xchg
and
ret
jae
arpl
mov
and
push
int3
outsb
mov
xor
pop
dec
in
add
out
enter
mov
insb
movsb
mov
fdivp
jp
mov
mov
inc
call
push
inc
push
sbb
dec
aad
push
je
dec
fldenv
loope
add
pop
cmp
clc
ja
repz
mov
mov
in
movsl
push
mov
xor
divl
outsb
lret
and
and
addr16
popf
xchg
in
or
and
daa
sbb
adcl
int
out
or
add
repnz
dec
xorb
les
xchg
add
adc
sbb
push
sti
xchg
sub
sub
aas
out
sbbb
popa
rcr
adc
insb
jo
or
lret
xor
sbb
scas
das
js
jb
push
xchg
cmp
sbb
insl
mov
mov
js
push
lods
je
ljmp
jmp
insl
enter
jmp
or
sub
mov
aad
mov
or
scas
fldl
pop
cld
inc
pushf
push
push
jbe
inc
lret
iret
mov
dec
cmpsb
popf
pusha
in
aad
xor
nop
mov
adc
pop
inc
pop
cli
mov
not
lods
adc
test
fimull
sub
jmp
sahf
pop
sub
xor
stc
mov
les
mull
dec
push
movsl
int3
cmc
dec
in
loop
push
fwait
mov
int3
cmp
test
inc
pop
shlb
int
push
enter
iret
jbe
mov
subb
mov
dec
xchg
dec
lods
out
aas
les
xor
or
jne
dec
sahf
dec
pop
cmp
or
mov
sbb
cmc
mov
enter
dec
testl
jp
pop
mov
mov
test
aaa
lcall
sti
in
add
out
add
mov
xor
sbb
pop
mov
push
iret
mov
mov
pop
das
or
sbb
sub
mov
pop
jp
xor
fldenv
pop
inc
inc
ss
out
jae
aaa
push
add
sub
lods
sbb
in
mov
mov
add
fcomps
jb
andl
push
in
rorb
mov
lds
lcall
cmp
es
xlat
and
lods
dec
xchg
insl
call
stc
and
dec
cmc
add
add
aam
dec
ljmp
lahf
cmc
rorl
aaa
mov
push
push
adc
mov
pop
and
or
cmp
das
dec
flds
out
ja
fcomp
and
dec
push
fldcw
out
xor
lds
test
rcr
pop
jne
mov
testb
imul
lock
pushf
inc
out
dec
mov
mov
sub
pop
jecxz
pushf
xor
jo
add
pop
faddp
jl
dec
sub
mov
pop
jmp
inc
cwtl
adc
lret
addl
mov
jmp
test
pop
xor
jae
inc
scas
sbb
xchg
fstp
aad
inc
movsl
mov
outsb
in
lcall
sarb
push
sbb
cld
sub
mul
cmp
adc
mov
nop
rorb
adc
sbb
aas
pop
add
sbb
rcrl
mov
into
adc
ljmp
test
pop
aad
imul
call
add
and
loope
mov
mov
jnp
cltd
jae
hlt
in
dec
mov
mov
sbb
cmp
imul
enter
jecxz
cmpsl
mov
in
push
enter
xor
or
adc
mov
jg
push
sbbl
int3
movsl
mov
std
cwtl
int
scas
pushf
jns
sbb
dec
inc
dec
popa
shr
sbb
push
inc
imul
sbb
repz
jo
push
popa
sub
adc
mov
cmpsb
push
inc
mov
jg
add
fiadds
push
push
pusha
popl
push
jp
xor
adc
dec
cmpsl
mov
dec
lret
data16
add
and
in
cld
add
pusha
shlb
add
fbstp
xchg
andb
xor
bsr
fisttpl
stos
iret
xchg
in
mov
mov
xchg
rorb
jno
aaa
mov
adc
repz
sub
call
or
adcb
call
std
adc
faddl
mov
and
inc
xor
notl
cmp
aas
lods
jns
cmpsb
test
jecxz
jmp
ja
rcr
test
pop
imul
push
int3
inc
mov
xor
out
ret
inc
or
or
rorl
loop
pop
jnp
movsl
jg
adc
cwtl
pop
repnz
fidivs
je
aad
or
adc
xchg
jecxz
ret
add
dec
fstl
push
adc
push
inc
and
mov
orl
pop
cmpsl
pop
jg
aaa
cmpl
jne
arpl
movl
movsl
jl
sbb
pop
pop
frstpm(287
jnp
sbb
ret
push
ds
insl
loop
push
add
addl
and
sbb
and
je
push
les
jns
out
mov
aad
popf
arpl
popa
lcall
push
push
inc
test
mov
cmp
pop
jmp
mov
dec
addl
inc
shll
and
pop
mov
mov
es
ds
jae
cmp
por
dec
rolb
leave
daa
cli
jae
loopne
xchg
into
icebp
push
push
lds
push
sub
mov
addl
shrb
mov
jecxz
dec
mov
inc
int
or
sub
test
out
push
aas
cmp
loopne
stc
or
rorl
cwtl
mov
aad
xchg
ja
sbb
jns
jae
or
push
sbb
push
mov
or
push
xchg
ret
mov
lods
data16
push
sub
nop
test
xor
aad
mov
cwtl
popf
mov
rol
dec
rol
mov
mov
or
mov
in
adc
inc
sub
fcmovnbe
clc
not
frndint
jne
mov
mov
jge
aam
jb
addr16
sub
out
cmpsb
in
jmp
fs
pop
inc
xchg
in
not
and
push
dec
ss
in
in
adcl
loop
icebp
inc
je
addl
mov
les
sbb
sti
int
mov
adc
in
shll
out
push
pop
xchg
imul
mov
ja
out
jle
fs
les
jg
and
mov
cmp
int
push
in
cld
jge
push
imul
fdivl
stos
dec
lret
pop
insl
test
cmp
lock
ja
xor
jne
jbe
jmp
ja
mov
cmp
add
cli
mov
mov
lods
in
pop
cmp
jno
mov
dec
std
mov
xor
je
fadds
ret
inc
lock
fmul
adc
movsb
xor
mov
lods
adc
sbb
mov
out
add
sar
pop
mov
pop
push
lcall
stc
and
lds
lret
outsl
in
jae
push
sbb
mov
cltd
in
fildll
test
fs
xchg
inc
and
cmpsb
ret
mov
addr16
shrb
roll
lret
out
ret
scas
dec
inc
jecxz
sbb
test
pop
dec
add
mov
xor
mov
lret
imull
push
sub
xor
test
jbe
lds
xor
loopne
aam
push
and
mov
adc
push
imul
icebp
mov
inc
add
lcall
dec
inc
cmpsl
int3
enter
mov
pop
fadds
or
push
mov
jg
inc
push
mov
sbb
sbb
int
add
push
mov
test
push
scas
and
bnd
jmp
xor
fdivs
jo
das
and
popa
push
jg
sbbb
jg
les
xchg
xor
hlt
fldt
push
roll
inc
pop
addr16
fldenv
lods
inc
pop
cmp
stc
leave
mov
pop
ljmp
imull
in
pop
mov
or
test
xchg
mov
mov
pop
push
shl
dec
xor
call
call
jg
sti
pop
mov
popl
jecxz
mov
inc
fsubrl
or
nop
xchg
in
or
das
xchg
sbb
jns
and
inc
hlt
and
mov
push
push
out
fisttpll
dec
loop
fistpll
cmp
pushf
add
js
mov
shrb
lods
decl
lcall
into
sub
pop
call
mov
cwtl
sub
pop
fsubrs
js
mov
cwtl
sbb
dec
fcomps
push
sbb
dec
enter
call
cwtl
sbb
dec
fcomps
imul
cltd
sub
pop
fsubrs
jns
mov
cltd
sbb
dec
fcomp
call
ja
xor
inc
shlb
xchg
pop
xchg
repz
arpl
push
ret
inc
mov
xor
jecxz
roll
xor
add
rcll
inc
mov
mov
add
arpl
xor
add
rcll
inc
mov
mov
add
inc
jecxz
mov
ret
xor
push
int3
push
loope
addl
stos
adc
or
mov
xchg
je
sub
fwait
inc
inc
pop
and
ds
outsl
adc
out
sbb
sarb
inc
ret
push
rorb
mov
movsb
mov
out
jno
pop
push
fsubr
int
jbe
inc
adc
xor
add
repz
loopne
lahf
les
xor
pushf
cmp
sub
mov
mov
pop
jmp
mov
mov
ds
outsl
push
or
fisubrs
add
mov
push
iret
in
pushf
jmp
inc
sub
xor
es
ret
sub
xlat
cmpsb
jo
aam
add
rcll
inc
mov
mov
add
arpl
push
roll
xor
add
xchg
sbb
arpl
pop
int3
and
pop
pop
push
add
push
test
xchg
jae
test
popa
mov
xorb
jnp
inc
movb
mov
cs
lods
rolb
jp
imul
xchg
cmp
and
repz
push
roll
xor
add
rcll
inc
mov
mov
add
arpl
push
roll
xor
add
dec
loope
add
call
ret
insl
sbb
rclb
mov
sbb
cmpsb
das
in
xchg
mov
cmp
sub
mov
lahf
jg
or
pop
xchg
xchg
add
imul
cmp
and
or
inc
sbb
dec
neg
stos
in
daa
adc
mov
pop
bound
add
sbb
je
add
pop
repnz
xor
mov
stos
cmp
decb
dec
sub
ds
es
insb
fstps
sbb
movsb
cmp
sarb
add
and
dec
jmp
jae
ret
and
into
and
add
aam
or
scas
sbb
test
sbb
jecxz
mov
sbb
sub
add
pop
test
inc
push
movsb
fisubrs
mov
mov
into
cmp
mov
inc
push
sbb
filds
or
cmp
dec
mov
sti
inc
ficompl
sti
shl
xchg
icebp
mov
jg
ss
test
gs
add
enter
and
out
loop
cmc
cmc
push
mov
fmul
pop
ja
out
pop
xchg
xchg
movsb
mov
aaa
sbb
notl
pop
pop
lret
pop
bound
out
add
dec
cmp
jae
imul
imul
decb
adc
fisubrl
es
cmp
inc
arpl
popf
loope
and
lret
inc
jge
sbb
sub
dec
scas
fwait
cmpsl
sub
lods
hlt
into
fndisi(8087
ds
stc
nop
vmread
daa
xor
xchg
mov
div
cld
sarl
lock
sub
or
test
mov
outsb
popf
jo
sub
pop
jmp
push
mov
pop
test
imul
jns
fdivl
xchg
cmp
fst
cmp
fs
pusha
fisubrs
pop
xor
push
mov
mov
fwait
fs
adc
dec
in
dec
dec
dec
adc
ljmp
or
in
xlat
xchg
mov
addr16
test
inc
fiaddl
ljmp
push
push
mov
out
cmp
mulb
scas
jl
mov
dec
aam
adc
xchg
mov
xchg
ret
push
mov
frstor
js
fwait
cmp
cmp
mov
add
xchg
mov
loope
or
pop
jo
adc
mov
lods
mov
mov
in
fistl
and
add
xor
js
inc
jnp
fisubs
adc
gs
mov
lock
imul
sbb
mov
bnd
dec
ss
in
pop
mov
pop
cmp
popf
mov
fmul
xchg
cli
mov
out
ja
clc
leave
or
mov
xchg
inc
dec
fmull
and
fwait
and
or
outsl
adc
in
mov
lcall
jl
mov
mov
mov
enter
jae
cmc
xchg
leave
push
insl
scas
incb
fldt
inc
imul
imul
aaa
push
inc
cld
jno
adc
fwait
les
fldenv
jge
mov
cmp
lock
clc
inc
bnd
scas
push
js
dec
mov
call
ret
dec
xchg
adc
mov
xchg
scas
fcmovne
fisttpl
pushf
adc
stc
inc
xor
mov
cmp
in
inc
sub
loopne
rcr
ret
sbb
popa
mov
fsubs
les
cmpsl
push
popf
cmpsb
imul
pushf
rorl
push
neg
btsl
jg
repz
jbe
jle
out
loope
dec
test
add
jge
daa
js
clc
xchg
sub
add
pushf
jl
cmp
mov
mov
dec
repnz
lds
clc
or
pusha
ret
pop
xor
in
xor
xor
dec
push
imul
clc
rdtsc
mov
add
int3
push
mov
push
in
fs
cmp
xchg
sbb
jle
icebp
les
test
xor
out
xchg
and
adc
lret
mov
fs
xlat
iret
inc
lock
enter
and
repz
sub
push
cmp
orl
cmp
jge
int3
sub
fisttpll
pop
cmp
rolb
nop
sbb
shll
in
outsl
sub
cmp
mov
testb
or
or
call
or
jo
ret
ds
lods
jl
subl
dec
cmc
fistps
or
sub
test
adc
xor
test
cmp
sahf
lret
sbb
mov
mov
adc
inc
clc
mov
lods
pop
daa
add
dec
jg
inc
ss
imull
cs
mov
sbb
lcall
pop
cmp
inc
inc
call
repnz
ds
popf
pushf
lret
xchg
xor
sbb
jnp
xorl
jbe
or
mov
ljmp
mov
push
push
rol
pop
push
fcmovnbe
mov
leave
push
sbb
ret
mov
aam
mov
negb
adc
pushf
outsl
fldcw
lods
addr16
sub
pop
jne
pop
hlt
jge
dec
pop
je
pop
fistpll
pop
push
subl
je
jge
sub
shrb
cwtl
js
outsl
cs
dec
pop
mov
cmpsl
dec
and
push
xchg
lods
dec
lahf
leave
loopne
aad
push
sub
push
or
push
aad
add
and
and
inc
and
sbb
jne
in
push
popf
fwait
in
sub
pop
lret
jae
divl
insb
push
pop
push
int
add
pusha
xchg
mov
stos
push
cmpsl
leave
lods
orb
loopne
jl
daa
and
sarl
fldl
pop
pop
aaa
inc
and
sub
enter
lock
cmpb
repz
inc
sbb
jmp
dec
loop
dec
fs
pushf
push
push
or
fnstenv
xchg
test
cwtl
xchg
mov
push
mov
inc
lret
ret
out
sub
and
mov
ror
sbb
sub
pop
or
and
push
movb
add
fs
xor
add
loop
xchg
insl
shlb
or
data16
pop
mov
in
inc
jo
shll
outsb
cld
out
add
fldenv
jne
daa
in
scas
dec
jecxz
mov
mov
sbbb
movsl
add
out
and
pop
sbb
sti
xor
test
sbb
adc
sbb
fnstsw
inc
or
mov
inc
fstpt
test
sti
inc
sub
pop
arpl
mov
adc
add
enter
mov
dec
jne
daa
call
es
inc
mov
mov
test
into
cmp
cmpsl
repz
sti
jnp
negl
and
test
out
loop
fs
stos
arpl
inc
dec
mov
inc
inc
mov
loope
add
xor
addr16
outsl
dec
into
mov
jge
xchg
lods
fcoms
dec
mov
cmpsb
popa
xor
jge
and
mov
inc
cmp
popf
lds
cmp
mov
nop
dec
adc
shll
cmc
xlat
pushf
jle
sub
inc
mov
stc
xchg
cmpsl
pop
shll
push
loop
test
daa
cltd
test
mov
mov
add
in
test
loopne
mov
xchg
frstor
mov
stc
xor
aas
pop
sub
popf
in
pop
lock
pushf
or
push
movsl
insl
out
je
jo
lea
ret
mov
fdivr
sbb
jno
fidivs
sti
mov
xlat
pop
fiadds
idivb
adc
mov
xchg
lock
mov
fsubrp
inc
stos
xor
rclb
subb
test
enter
and
adc
mov
fistps
insl
in
imul
adc
xor
sbb
adc
fstl
imul
cmpsb
and
inc
popa
repnz
mov
xor
popf
jecxz
mov
xor
repnz
ljmp
arpl
leave
outsl
sub
cltd
sbb
pop
jmp
add
dec
das
hlt
sbb
scas
insb
and
fcmovnb
jmp
cmp
bound
mov
xchg
js
or
loop
popf
xor
jmp
sbb
ret
into
rsqrtps
insl
ds
jae
pop
fcom
insb
sbb
lcall
sub
xchg
test
pop
sub
testb
jnp
gs
aaa
cli
xchg
jg
lds
out
push
and
pusha
xchg
cli
or
sarl
sahf
jl
mov
repnz
imul
pop
rcrl
movq
xor
cmp
inc
xor
xchg
dec
sbbb
imull
xchg
push
adc
cltd
add
adc
out
mov
sub
out
jo
gs
lods
or
pusha
mov
mov
fcoml
add
leave
popf
in
mov
sti
test
pop
sub
push
mov
lahf
rorl
and
jmp
popf
mov
jg
fs
push
das
insb
mov
lret
fistps
jb
or
popa
adc
insb
jne
pop
push
or
add
dec
xor
and
inc
aam
or
jmp
cld
ja
aad
xchg
imul
mov
cmp
test
scas
or
aaa
jge
and
mov
jle
dec
inc
leave
cld
dec
aam
adc
popf
mov
lret
loope
xchg
mov
jp
or
loop
mov
pop
or
and
mov
loope
outsl
int
mov
or
cmp
mov
inc
mov
cmp
dec
push
in
cmp
mov
sub
mov
popf
fimull
mov
arpl
sbb
jno
out
sti
dec
mov
sub
sub
xor
stc
sub
mov
xor
inc
enter
jbe
mov
xchg
inc
jle
adc
lcall
mov
outsl
inc
xor
outsl
push
add
popa
ret
xchg
out
repz
xchg
push
xlat
stos
aam
ljmp
ficomps
leave
sbb
add
pop
adc
push
loope
es
ret
mov
dec
cmp
push
cmp
sbb
out
mov
cmp
mov
mov
xchg
cmp
stc
mov
loopne
mov
inc
scas
shll
out
inc
fxch
sbbl
lret
fst
sti
iret
mov
jl
cmp
dec
ret
lcall
push
push
mov
cmp
and
mov
sub
mov
aam
xchg
aas
movsl
sub
xor
mov
mov
and
mov
dec
xlat
xor
cmc
lea
andb
add
leave
jo
cmp
push
loop
xchg
xor
xchg
imul
pop
add
adc
xor
lea
sub
pop
xchg
aam
lds
std
inc
decb
out
pop
mov
cmp
lods
nop
jmp
jo
sub
cmpsb
imul
push
xchg
adc
inc
push
lret
mov
adcb
clc
movsb
repnz
sbb
std
movsb
test
push
loope
nop
lcall
aaa
jle
out
pop
cmpl
push
bound
sub
xchg
push
popf
push
inc
sbb
fs
mov
leave
cmpsl
aaa
cs
mov
push
es
jns
ja
jp
fcmovbe
sbb
mov
push
test
or
mov
push
fnstsw
mov
inc
push
pmuludq
sbb
cmpsb
jp
arpl
lahf
jae
sarl
mov
fcoml
xor
pop
jae
and
mov
pop
vhsubps
fsts
and
scas
dec
cmpsb
test
dec
idivb
sub
cwtl
aas
bnd
push
adc
pop
and
icebp
xor
pop
push
cwtl
and
pop
out
adc
xor
mov
rolb
mov
add
mov
pop
stos
mov
testb
ret
xchg
xchg
xor
arpl
in
stos
addr16
sub
pop
popf
push
addr16
ja
xor
adc
out
mov
push
sti
out
jecxz
jo
test
stos
xor
pop
ja
jmp
flds
fidivrl
or
stos
add
jns
shl
sbb
sub
xchg
loop
pop
pop
xchg
fildl
jo
xor
xchg
add
fstp
sbb
test
sub
and
fwait
stc
cmpsb
xor
xor
lret
jmp
out
pop
pop
shll
dec
repnz
add
clc
fadds
imul
jnp
loope
call
call
sbb
adc
add
inc
xor
mov
sub
iret
push
pop
add
mov
sub
je
adcb
stc
ljmp
and
cli
and
incl
push
dec
add
imul
movsl
clc
fsubrs
jle
enter
push
mov
jb
sbb
data16
psubusb
fwait
xchg
icebp
out
adc
xchg
sbb
cmpsb
ds
cli
fstpl
mov
adc
cli
add
dec
and
sahf
test
or
xlat
pop
pop
add
stos
add
pop
jne
mov
sbb
pop
adc
rcrl
leave
sbb
in
cmc
mov
jnp
popa
movsb
cmc
push
js
fstpt
cltd
clc
arpl
pop
xchg
push
daa
pop
dec
xor
cli
sbb
xchg
or
cmp
mov
dec
aad
xor
cmp
ljmp
bound
sub
xchg
movsb
lret
frstor
mov
aam
aad
stos
push
push
int3
sub
or
outsb
xchg
pop
cld
mov
push
sbb
pop
dec
out
dec
adcb
pop
sub
xor
in
sub
inc
movsb
outsb
cmp
popl
fs
cmp
cmp
loope
pop
mov
mov
mov
xorl
mov
dec
into
stos
jg
and
jl
sub
push
mov
xchg
cmpl
std
scas
es
dec
pop
inc
xchg
lods
xor
and
push
and
xchg
sbb
mov
mov
jns
into
test
push
scas
lret
xor
addr16
push
or
xor
sbb
pop
bnd
sub
add
cmovns
add
popa
jp
sti
dec
or
cmp
pop
pop
divps
pop
cmp
push
push
jnp
daa
cmp
jecxz
xchg
push
scas
ja
jb
jae
repnz
in
popf
sub
shll
sarb
mov
bound
sbb
jo
out
push
sbb
xorl
cmp
add
or
mov
adc
xor
adc
pop
add
mov
and
inc
ficoms
cli
mov
sbbb
xchg
je
bound
in
out
jo
xchg
lds
pop
pushf
pop
icebp
inc
ljmp
sub
ss
dec
push
inc
rcrb
hlt
inc
decl
mov
lret
mov
dec
add
subl
inc
movsl
rcrb
inc
mov
stos
pop
cli
xor
adc
lds
subl
cmpsl
add
cltd
fildl
cmp
lahf
push
popa
clc
into
xchg
dec
sub
movl
sarb
mov
jmp
sub
jnp
cmpb
lds
pop
sbb
and
inc
in
xor
add
out
outsb
and
dec
cmp
mov
rolb
loopne
jo
pop
and
arpl
out
mov
outsl
int3
pop
and
cmc
dec
out
mov
lahf
add
addl
loop
pop
cli
or
lcall
bound
push
xchg
push
aam
adc
arpl
clc
aas
mov
and
ret
repnz
loopne
push
sub
enter
fwait
sub
dec
out
pushf
jmp
cltd
mov
sbbl
sub
push
jne
inc
xor
mov
nop
cmp
loopne
inc
mov
imul
mov
jnp
jp
sbb
shrb
mov
fsubr
add
and
sbb
inc
fistps
push
pop
inc
fisttpll
fistpll
mov
and
dec
xor
movsb
sub
pusha
lds
mov
stos
decw
dec
fdivs
push
subl
inc
push
imul
je
roll
adc
dec
sub
mov
ds
in
std
pop
jle
out
sub
pop
cmp
test
push
mov
xor
jg
in
mov
pop
sahf
mov
neg
sub
and
push
mov
jl
imul
loop
pop
jmp
mov
adc
daa
mov
xchg
or
ret
test
js
dec
sbb
int
int3
push
xor
sub
loope
mov
in
out
je
lret
insb
test
xor
mov
and
and
stos
lret
push
or
es
dec
inc
call
fdivs
orl
popf
mov
inc
fs
mov
mov
mov
test
rolb
pop
mov
jns
cmp
xor
enter
movsl
mov
mov
push
dec
enter
xchg
push
adc
rolb
int3
lret
push
test
in
and
pop
das
scas
movsb
ret
add
test
les
xor
xchg
jle
inc
mov
decl
sbb
push
jg
mov
sbbb
in
pop
test
jne
ja
ret
dec
sub
movsl
shll
ljmp
adc
js
test
dec
inc
xchg
in
hlt
aaa
shl
or
add
cmc
mov
xor
mov
cmovnp
mov
out
cmpsl
mov
cltd
fcomps
hlt
push
shll
mov
inc
mov
push
dec
mov
mov
sub
jnp
sbb
jns
iret
and
shlb
or
lcall
push
mov
push
enter
imul
pushf
sbb
cs
mov
jns
pop
mov
cmc
mov
inc
push
jle
mov
pop
pop
adc
adc
sub
jae
mov
dec
out
mov
push
lret
out
add
sub
adc
adcl
out
mov
xchg
popf
fld
or
int3
cmp
outsl
lock
xor
or
cmpsl
popf
leave
cli
jne
lcall
call
xor
add
pop
repz
sbb
mov
xchg
ljmp
test
sbb
xchg
loop
mov
out
imul
push
fsubrs
or
pop
cs
pushf
mov
popf
leave
push
popa
testl
pushf
or
repnz
clc
mov
push
mov
sbb
dec
mov
out
xor
rcrb
lock
push
xor
mov
loopne
outsb
inc
nop
test
adc
inc
mov
pushf
push
xor
pop
out
out
inc
adc
pop
stos
fdivrs
inc
in
mov
jae
mov
cltd
xchg
ret
push
xor
iret
sub
adc
pop
mov
lcall
sti
mov
xor
js
cld
inc
stos
aaa
pop
dec
sub
mov
inc
enter
popf
inc
inc
lock
fstpl
out
ja
mov
push
adc
push
repnz
push
imul
adc
add
xor
cwtl
cli
mov
repnz
pop
repnz
stos
jmp
mov
je
orl
mov
push
push
jecxz
xchg
add
roll
stos
xchg
jbe
lds
mov
dec
mov
gs
mov
mov
mov
push
loopne
movsl
mov
lret
sbb
sub
fimull
xor
pop
mov
bound
aad
mov
push
xor
out
push
inc
mov
addr16
cs
shrb
fcomp
stc
cltd
pushf
mov
jo
xor
movsl
pop
sub
loopne
jg
push
adc
insb
cltd
je
dec
adc
xor
imul
lods
mov
gs
addr16
lock
or
dec
sahf
movsl
idivl
or
mov
lahf
and
jle
dec
icebp
loope
aas
icebp
ret
pusha
xchg
mov
jecxz
cmp
and
adc
notb
push
or
dec
push
jo
inc
mov
ficoml
xchg
dec
xchg
arpl
push
cmpsl
xor
cld
push
jl
roll
pop
out
adc
jno
dec
cltd
adc
imul
cs
push
jg
mov
int
icebp
sub
mov
fisttps
popa
or
and
loopne
or
xorl
je
dec
mov
lock
add
jg
sub
mov
out
test
out
sti
add
vcmpps
lsl
scas
xchg
dec
aam
lds
nop
jge,pn
mov
xchg
dec
xchg
mov
lcall
sahf
sbb
xor
and
dec
out
add
iret
jl
xchg
jne
mov
cmp
xor
fnstenv
enter
jp
movsb
jbe
adc
push
bound
imull
scas
stc
cmp
xor
xchg
cmp
push
pop
outsb
arpl
push
ret
inc
mov
mov
add
arpl
push
roll
xor
add
rcll
inc
mov
mov
add
arpl
push
roll
xor
add
rcl
ret
inc
mov
mov
add
arpl
push
roll
xor
add
rcll
inc
mov
mov
add
inc
mov
cmp
jl
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
stc
sahf
ljmp
add
pop
mov
loope
std
pop
rorl
cmp
sbb
mov
lret
and
adc
push
cmp
dec
sarl
sub
orl
jno
pop
adc
cmp
sub
dec
lret
xor
fisttps
push
xchg
xchg
popa
cmpsb
sbb
xor
stos
call
cmp
jg
sub
push
cmp
xor
dec
lods
xchg
stos
sub
pop
mov
cltd
mov
sbb
shll
in
xor
imulb
ja
xor
fs
dec
jge
push
sub
ss
xor
popa
inc
add
out
jnp
push
fisubs
mov
vcvtsi2ssl
or
sti
add
mov
and
adc
adc
jmp
sarl
sub
addl
xchg
fildl
lcall
mov
in
aam
shll
or
ficoml
dec
pop
and
xor
stc
lock
jb
and
xchg
add
jno
inc
mov
aad
les
insl
mov
cmp
dec
int3
inc
loop
subl
test
stos
push
rcll
add
fistpll
cwtl
cmp
inc
roll
jae
dec
hlt
xchg
and
and
dec
stos
xor
loope
icebp
pop
rorl
mov
or
fiaddl
push
mov
add
icebp
pop
rorl
mov
or
sbb
inc
jne
inc
push
hlt
mov
cltd
lcall
into
cwtl
ret
lods
lods
xchg
pop
and
ljmp
inc
dec
out
es
mov
mov
or
dec
push
ret
fwait
std
mov
mov
mov
in
test
lea
sbb
add
xchg
stos
sub
inc
imul
das
mov
xor
adc
outsb
push
loop
sub
dec
cld
sarl
push
dec
fsts
lock
popf
push
cmp
xchg
add
mov
jecxz
mov
sbb
pop
test
inc
inc
mov
xor
and
cmp
add
lret
clc
pop
faddl
dec
mov
in
push
inc
cmpsb
push
dec
sbb
dec
sarb
pop
lea
sub
push
xchg
xchg
cmpsl
mov
and
sbb
inc
inc
jp
repnz
ret
scas
scas
adc
jae
bound
je
mov
addr16
sub
rcrb
imul
or
ds
sbb
adc
loopne
dec
mov
xor
push
jae
push
add
fadd
js
xchg
and
dec
pop
test
mov
subb
sub
repnz
mov
popf
into
fwait
mov
mov
repnz
mov
ljmp
or
mov
nop
pop
jge
xchg
add
stos
and
mov
xor
mov
add
adc
in
shll
cld
cmc
repnz
jmp
ficoms
sbb
pusha
dec
js
jmp
xchg
inc
popf
mov
cmp
pusha
orb
scas
inc
lret
jae
lcall
or
das
ret
jns
jae
outsb
pop
outsb
xchg
loop
cmc
jp
sar
in
mov
add
lods
add
push
cmp
aas
nop
in
fisttps
inc
fldenv
call
push
push
and
and
xor
lahf
cmp
lcall
into
ret
push
xor
insl
test
aam
jg
nop
push
mov
insb
shlb
lods
add
sti
aad
cmp
push
sub
divl
push
jb
pop
outsl
xor
cmpsl
xchg
nop
pop
xor
xchg
mov
cwtl
add
pop
rep
dec
jbe
sub
xor
mov
dec
jmp
mov
sub
fisttpll
xor
xor
sub
cmp
cli
enter
push
ja
jo
cltd
and
cwtl
pop
xchg
push
mull
imul
call
sbb
sti
mov
lods
imul
orl
mul
add
scas
pop
insl
aam
mov
xchg
out
dec
dec
push
xchg
xchg
test
pop
or
popf
gs
incl
xchg
add
or
icebp
shrb
insl
stos
sbb
jb
dec
lock
sub
pop
je
inc
lods
mov
push
push
loope
test
lds
insl
sub
and
lcall
stos
lea
inc
inc
push
push
inc
ret
sbb
pop
pop
leave
dec
mov
cmpb
dec
nop
fldt
in
mov
adc
iret
mov
add
xchg
cmpsb
inc
push
lcall
arpl
sbb
leave
jp
dec
push
mov
xlat
incb
aas
or
sub
mov
push
je
pop
test
xor
fnstsw
xchg
cmp
out
std
idiv
or
xchg
scas
lcall
stos
stos
out
dec
roll
cmc
and
mov
in
test
test
sti
push
pusha
int3
mov
lret
jecxz
mov
sbb
mov
nop
cs
xchg
dec
inc
insl
sbbl
sti
cwtl
sti
push
fldcw
fcompl
bound
pop
or
push
push
inc
cmp
push
mov
or
push
xrelease
frstor
mov
out
pop
testl
xchg
cli
lret
fwait
dec
fcomip
enter
jmp
imul
iret
loope
add
pop
or
sub
mov
jbe
cmp
cli
jle
dec
stos
and
mov
andl
imul
mov
rolb
and
and
inc
inc
dec
xor
mov
cs
lahf
sub
imul
xor
cmp
inc
pop
movsl
and
mov
mov
mov
adc
pop
push
flds
das
mov
insb
sub
cmp
inc
push
dec
test
cmpsl
jno
sub
daa
sub
aaa
enter
fbstp
int
mov
addl
push
std
pop
xchg
enter
jge
test
jle
mov
mov
ljmp
push
xor
test
je
sub
cmp
bound
mov
mov
and
jg
stos
das
sub
dec
es
and
and
stc
mov
mov
sbbb
push
aaa
cmp
adc
xor
mov
lods
push
into
fimuls
add
xor
add
std
lods
test
scas
cwtl
js
push
inc
jmp
and
xchg
inc
adc
les
adc
mov
inc
dec
xchg
orl
incl
cmp
push
or
sbb
jno
push
push
mov
pop
outsl
shrl
xchg
push
xchg
add
sub
cmpsl
dec
cmp
and
lods
push
mov
mov
stos
fcomip
incb
nop
lock
xchg
add
sbb
xchg
mov
jae
push
mov
xor
popf
ret
mov
xlat
fcmovne
call
mov
out
les
jge
push
pop
or
and
pop
add
imul
fbstp
cmc
dec
dec
fs
add
mov
outsl
mov
into
imul
shr
mov
xchg
test
mov
cmp
sahf
notb
push
add
jae
cmpsl
cmpl
pop
mov
pop
inc
repnz
sub
push
pop
je
mov
adc
dec
arpl
popf
mov
jns
and
or
add
xchg
pop
clc
and
ret
jb
lcall
push
incl
shl
std
mov
lret
mov
jns
dec
adc
jb
mov
xchg
or
sahf
mov
mov
ficoms
inc
into
ret
mov
jb
xchg
je
ljmp
mov
jle
add
add
jge
xchg
push
jmp
or
scas
std
push
mov
pop
ss
mov
push
add
andb
mov
fiadds
in
sub
fwait
adc
xchg
ret
je
dec
sti
add
jb
inc
and
pop
movsl
cld
cmpsl
push
mov
aad
fcomps
lods
popa
cmp
mov
sub
test
pop
sbb
mov
outsl
xchg
clc
rclb
stc
add
jl
push
dec
fistpl
cmc
ljmp
jo
mov
aaa
lret
lock
popa
and
ss
enter
pop
dec
pop
jbe
out
loopne
mov
xchg
xor
sub
mov
push
fwait
or
out
dec
inc
cmpsl
dec
stos
addr16
fsubrs
sahf
add
sbb
lods
pop
out
push
rcr
dec
sbb
push
std
dec
ffreep
xor
loop
mov
nop
out
lcall
push
lret
stc
mov
inc
insl
mov
imul
push
lods
in
add
es
add
pop
jbe
sti
cld
jae
dec
lahf
loopne
das
rcl
xchg
test
adc
pusha
js
loope
inc
jae
shlb
in
xchg
add
test
leave
pop
cltd
repz
fdivrl
cmp
inc
cltd
sub
cmp
stos
and
fldl
add
sbb
sahf
daa
pcmpeqw
into
pop
sub
pop
and
cmc
pop
sub
icebp
in
sbb
rcr
cltd
and
mov
or
push
inc
inc
jo
sub
ret
dec
adc
cmp
rcl
cwtl
jp
adc
and
repnz
loope
and
dec
adc
mov
test
or
jmp
mov
decl
lods
fldenv
pop
sbb
mov
inc
lcall
xchg
dec
mov
fbld
xchg
jl
mov
lock
adc
adc
add
sub
pop
inc
pop
arpl
mov
or
in
or
xchg
pop
mov
pop
sub
cmp
adc
fistl
movsl
test
dec
andb
dec
int
mov
push
icebp
dec
mov
pop
xchg
jle
insb
daa
popa
ret
jmp
movsl
dec
pop
mov
jmp
xchg
popa
ret
push
out
pop
ja
inc
dec
insb
cmp
mov
mov
cmc
or
jg
xchg
inc
idivb
imul
push
xlat
arpl
fnstenv
out
and
sub
jge
imul
dec
subb
or
repnz
loope
int3
pop
icebp
xchg
inc
popa
lcall
sub
push
stc
pusha
mov
icebp
pop
orl
add
popf
pop
pop
inc
push
aaa
jns
rorb
xchg
insl
lods
mov
cmp
or
outsl
xchg
or
cmp
call
ss
xor
jecxz
outsl
sub
jecxz
sbb
mov
dec
sub
cmp
pop
mov
xor
mov
jl
dec
jle
fnsetpm(287
leave
inc
fwait
pop
faddl
lret
and
jp
testb
cwtl
jg
jae
roll
pop
jae
sub
cmp
sbb
push
aaa
jp
mov
mov
int
jne
sbb
inc
lahf
mov
jle
push
push
bound
ljmp
arpl
orl
insl
mov
mov
cwtl
xchg
xor
mov
xchg
stc
lea
dec
jle
les
stc
ljmp
ret
xor
fwait
pop
ljmp
ffreep
sbb
mov
mov
xor
xchg
or
test
mov
pop
pusha
adc
jmp
jl
mov
shlb
loope
stos
adc
push
mov
lock
push
shrl
repnz
and
mov
cltd
imul
dec
adc
xor
fmuls
movl
addr16
mov
or
test
imul
jbe
sub
imul
jge
cmpsl
je
clc
movsl
dec
out
movsl
sbb
sub
adc
in
sahf
dec
mov
cmc
mov
adc
and
iret
inc
leave
push
enter
aas
test
addb
int3
daa
xchg
cli
adc
lret
push
mov
fisttpll
in
in
test
pop
andl
push
roll
out
xchg
cmp
popf
loope
movb
icebp
jg
hlt
test
and
adc
adc
out
and
xchg
push
ret
out
jmp
lret
repnz
sub
movsb
mov
lret
xor
sbb
inc
lahf
mov
mov
cwtl
lret
dec
mov
cmp
pop
or
into
sbb
inc
les
jbe
push
out
gs
loopne
scas
scas
and
push
or
data16
push
sub
jp
jns
cmp
fidivrs
sub
stc
mov
xchg
imul
in
mov
mov
push
mov
cmp
daa
popa
filds
sti
out
mov
enter
jmp
jp
and
jg
xchg
sbb
mov
jmp
or
mov
pop
arpl
movsb
stos
jecxz
frstor
inc
sahf
ret
mov
pop
dec
mov
scas
dec
test
loopne
push
sub
es
jg
inc
or
adc
ja
mov
add
cwtl
mov
les
push
and
inc
leave
mov
imul
dec
and
cmp
cmpsb
lds
mov
sar
adcl
mov
aad
hlt
insl
dec
cwtl
out
dec
add
mov
adc
adc
sub
jmp
insl
jo
adc
cmp
aad
test
imul
jnp
insb
mov
fistpl
out
icebp
nop
clc
cmp
loopne
xchg
pop
mov
inc
inc
out
ficompl
cmp
repnz
mov
jg
test
repnz
or
inc
push
ret
pop
pop
cmpsb
xchg
lods
nop
dec
mov
insb
mov
inc
shll
shr
xor
mov
xchg
mov
push
aam
jle
enter
mov
mov
pop
into
sbb
fisttps
das
mov
mov
daa
pop
enter
or
mov
xor
je
or
cwtl
adc
or
mov
inc
sbb
jne
jecxz
hlt
lret
data16
adc
dec
lds
adc
pop
stc
xchg
ficoms
imul
lods
test
dec
aam
mov
jns
leave
in
xlat
push
mov
movsb
loopne
fldt
mov
jno
gs
js,pn
lods
jl
dec
imul
std
mov
in
filds
js
xchg
fimull
or
mov
and
sub
mov
test
add
outsl
add
hlt
mov
in
pop
mull
xchg
js
mov
jno
add
mov
jae
xchg
inc
leave
or
imul
xor
jbe
scas
add
cmp
pop
pop
xchg
inc
fstl
leave
jne
xchg
inc
mov
xchg
shrl
xchg
and
push
push
dec
test
xor
stos
or
push
in
ds
sbb
xchg
xchg
addr16
fwait
sub
push
cmp
mov
outsl
jg
push
cmp
outsl
lea
and
sbb
cltd
or
cmp
inc
fsubp
scas
mov
jbe
mov
xchg
int3
mov
sbb
lods
rep
repz
popa
repz
imull
jg
ret
xchg
push
shrl
push
xchg
sbb
std
je
int3
cmp
cmp
pop
stc
and
lea
adc
add
adc
add
movsl
add
push
movsl
adc
cli
divl
dec
js
lret
ret
imul
jmp
cmpsl
sbb
mov
lahf
and
jo
addr16
jmp
jmp
inc
into
or
jne
lods
adc
and
test
cmp
jns
fsubl
je
sbb
xchg
in
sbb
nop
xchg
mov
xchg
cmp
ret
call
and
int3
mov
inc
xchg
and
pop
and
sbb
in
aad
icebp
sbb
dec
xchg
cli
aam
add
movlhps
in
lcall
stc
out
mov
out
cmp
cmpl
jnp
jl
cmp
pop
pop
orl
sub
pushl
sarl
jge
loopne
fcmovu
lea
mov
xchg
push
jle
sbb
lea
mov
inc
outsb
call
popa
pop
fwait
rclb
es
jl
cmpl
gs
test
xchg
xor
cmp
cmp
cmpsl
rolb
and
fistl
and
cmp
cmp
popa
cld
sub
inc
adc
or
mov
in
xrelease
out
pushf
subl
fstps
push
xchg
in
push
mov
mov
les
addr16
fcmove
jle
mov
test
mov
lahf
sbb
aas
inc
rorl
mov
popa
sub
enter
scas
xchg
fmul
inc
lret
jno
dec
xor
jo
push
ficompl
rcr
push
ret
inc
cmc
sbb
sbb
mov
mov
bndldx
in
xor
push
std
lret
insb
das
jmp
cltd
stos
out
sbb
in
xchg
xor
vcvtsd2si
mov
xor
mov
dec
and
push
jge
adcb
xchg
jl
ret
or
sbb
push
int
into
std
adc
or
cmc
pop
ja
mov
in
imul
in
mov
das
sub
pop
cmpsb
sbb
mov
sbb
in
leave
and
ss
or
lret
mov
xor
lods
push
push
insb
cmp
push
lcall
sarb
shrl
cltd
gs
xchg
xlat
setnp
pop
subb
cmp
int
push
pop
inc
cli
mov
lods
cwtl
mov
gs
into
xchg
push
test
loop
cmpsl
xor
in
adc
je
adc
xor
inc
jmp
fwait
out
cmpsl
dec
sahf
aad
add
adc
dec
test
mov
push
push
push
hlt
mov
mov
pop
mov
xchg
addr16
and
mov
inc
mov
stos
jle
test
insl
ficoml
push
in
inc
out
imul
leave
jmp
mov
sbb
popf
sbb
icebp
sbb
dec
dec
mov
clc
adc
into
cmpb
pop
cmp
out
cld
cmpsl
or
loope
add
xchg
icebp
inc
cld
add
mov
pop
pusha
das
add
mov
inc
in
roll
sahf
punpckhbw
inc
loopne
test
fstp
mov
aaa
jmp
lods
and
mov
lods
lds
xchg
arpl
and
test
rclb
pop
loope
les
push
adc
pop
in
dec
ja
inc
mov
enter
and
repz
les
xchg
jno
rorl
cltd
stc
jecxz
mulb
into
mov
mov
fists
and
ret
push
sbb
insl
fst
mov
lods
mov
mov
sbb
lret
out
pcmpeqd
xchg
mov
out
adc
es
mov
sub
jmp
divl
outsb
test
rcrl
fbld
xchg
stc
lock
jnp
sti
push
and
add
mov
rcr
imul
mov
and
fmuls
sbb
and
pusha
fdivrl
rorb
jp
into
jae
push
lods
sahf
pop
xchg
loop
je
mulb
xchg
sub
call
movsl
and
xchg
popf
sub
repz
insb
dec
pop
adc
push
filds
inc
jge
cmpsb
xchg
shlb
ss
or
lcall
pop
js
mov
push
scas
dec
into
out
lods
jae
scas
fucom
xor
jp
and
in
sbb
lahf
cmp
xor
push
clc
fcomps
clc
into
popa
adc
fstl
lret
and
sbb
mov
clc
cld
ss
cmp
pop
hlt
adc
outsl
scas
addl
push
jns
and
test
push
cli
or
ret
lret
aam
das
jle
push
imul
cmc
ret
xchg
arpl
ret
push
add
insl
out
lcall
into
jb
push
lahf
fcmove
adc
inc
lcall
pusha
cmp
fdivp
cmp
xor
push
arpl
sahf
push
sub
addl
adc
mov
pushf
lods
jl
mov
jmp
cmp
and
dec
dec
addr16
stos
leave
jnp
ss
add
xlat
add
mov
ret
outsb
stc
repnz
pop
and
je
lret
std
jl
inc
lds
gs
push
cmp
jle
adc
stc
pop
stc
popf
pop
sbb
jb
out
mov
inc
cs
jnp
popa
cmpsl
mov
adcb
ds
mov
pop
stos
xor
cmp
sub
fwait
add
je
imul
pop
and
lcall
outsl
das
pop
jno
ficoml
call
lahf
jmp
xchg
lds
and
pop
les
mov
dec
cs
mov
movsb
lret
stos
sub
stos
int3
push
adc
and
fdivs
mov
loope
lods
mov
push
xor
push
or
jns
repnz
xchg
adc
pop
in
mov
mov
mov
sbb
jge
fcmovbe
mov
inc
inc
xchg
pop
mov
vmread
nop
xor
xor
imul
frstpm(287
dec
lods
mov
dec
xchg
or
stos
or
pop
mov
and
sbb
xchg
call
xor
xchg
jle
add
rorb
push
lahf
packssdw
cwtl
mov
pop
xlat
sub
lret
repnz
stc
inc
outsb
ret
or
lret
rorb
decb
rolb
xchg
mov
lret
dec
out
movsb
xlat
cmp
mov
and
pop
mov
mov
push
sub
add
repz
shll
mov
ret
push
dec
push
mov
es
sbbb
mov
vmovhpd
bound
dec
pop
cmp
fistl
mov
repz
iret
cli
movsb
sbb
jg
xchg
sti
mov
out
xchg
ja
sbb
or
mov
push
movsb
jae
push
loop
icebp
jecxz
push
push
rolb
push
ds
test
sbb
cmp
shrb
pop
cmpsl
lods
xor
push
and
xchg
inc
leave
pop
jmp
xchg
pop
add
daa
cmpb
mov
cmp
aad
inc
add
xchg
xchg
pandn
leave
xor
gs
pop
loop
addr16
sbb
mov
pop
les
or
aad
sub
stos
cwtl
bnd
push
add
push
arpl
fnsave
and
mov
andl
arpl
cmp
fwait
or
push
out
sub
cmp
push
mov
add
icebp
pop
rorl
mov
or
fiaddl
push
mov
add
icebp
pop
rorl
mov
or
mov
and
adc
push
stos
rorl
mov
loop
out
popa
mov
addb
mov
add
adc
xchg
pop
lock
sub
outsb
shrb
jns
dec
loop
pushf
xchg
repnz
xlat
pusha
sbb
inc
clc
jb
leave
adc
and
repnz
loop
xchg
sub
insl
push
in
stc
push
leave
fsts
fildl
mov
shlb
pusha
repnz
loop
xchg
xor
add
inc
fiaddl
mov
lods
jp
popa
int
sti
dec
negb
sub
ds
cmp
ljmp
mov
push
adc
mov
imul
mov
notb
push
insb
pop
lcall
pop
out
jns
popa
sub
dec
adc
jp
push
int3
mov
dec
inc
push
jmp
or
mov
mov
push
mov
fcoml
mov
or
jge
pushf
push
or
pushl
inc
push
in
xchg
push
xor
mov
mov
sub
mov
mov
push
bound
jmp
lahf
stos
add
sub
mov
shrl
inc
pushf
dec
or
dec
add
daa
es
lahf
mov
imul
sub
add
inc
loope
shlb
adc
and
xchg
sub
cmp
sub
pop
xlat
gs
adc
push
mov
jbe
jbe
roll
mov
mov
sub
ja
jge
sub
popf
inc
pushf
xor
mov
mov
sub
cmpb
or
stc
jb
fsts
test
and
repnz
loop
xchg
sub
sbb
inc
stc
jb
fsts
test
and
dec
into
pop
dec
mov
mov
add
fwait
pop
mov
repz
sub
inc
xor
daa
je
lcall
shlb
adc
mov
push
push
ja
jle
mov
arpl
jge
ljmp
popa
fcmove
pop
mov
push
je
bound
bound
jae
aad
leave
ret
add
mov
ds
cmpsb
cmp
shlb
js
sbb
push
mov
mov
cld
roll
pop
adcl
jg
lret
mov
in
jecxz
loopne
mov
xor
dec
sub
ret
adc
leave
and
addr16
iret
je
lret
cmp
adc
ss
rcl
ret
mulb
ret
mov
xor
push
xlat
mov
fcmovnb
lcall
pop
adc
sti
fidivl
pop
cmp
mov
jp
ja
xor
lock
outsb
xor
gs
pop
sbb
dec
mov
out
dec
sbb
mull
fimull
mov
out
aad
xor
aam
aam
inc
inc
mov
add
and
ror
xchg
cld
lahf
push
outsl
inc
fmuls
mov
into
repnz
fbld
nop
sub
push
and
out
cld
cmp
pop
xchg
andb
or
test
cmp
testb
xchg
sbb
or
das
lret
in
pop
incl
imul
lock
lret
and
jno
inc
pop
mov
inc
xor
pop
mov
jns
stos
add
pop
arpl
fwait
in
and
sarl
sub
jl
dec
lds
data16
sbb
push
mov
stos
stos
cmpsb
pop
out
movsb
lds
cmp
cwtl
push
add
imul
mov
sub
icebp
std
fisttpl
test
pop
add
cmp
shrl
cmp
mov
sbb
sub
push
jmp
push
lods
xchg
and
and
lock
adc
lock
xchg
mov
dec
adc
sti
mov
int
dec
out
scas
insl
add
or
testl
fldt
or
in
push
xor
subb
std
mov
nop
mov
movsb
mov
int
sahf
mov
sbb
pop
and
xchg
mov
mov
movsb
scas
cmc
int
push
mov
mov
lret
fidivrl
sahf
lods
lret
dec
or
loopne
mov
xor
jge
xchg
jg
mov
aaa
mov
loopne
xor
dec
xchg
mov
std
inc
pop
xchg
sub
in
jle
sarb
mov
aas
aad
or
mov
sub
popa
out
out
xchg
mov
inc
push
pop
insb
cmp
lock
fstpt
push
inc
xlat
xlat
aas
xchg
xchg
popa
sub
mov
mov
and
mov
mov
jle
mov
xor
sbb
push
push
jne
pop
js
dec
shll
jne
lret
sbb
add
insl
orl
and
loopne
adc
push
sub
repnz
ret
daa
shl
out
cmp
ret
in
jns
aam
mov
mov
pop
inc
or
push
jmp
outsl
push
lret
lds
les
push
mov
shll
sub
mov
adc
push
xchg
call
enter
mov
andl
ds
mov
mov
in
bt
push
addr16
xchg
jecxz
push
test
sub
loope
xor
cmp
xor
sbb
dec
inc
stos
stc
add
sub
mov
push
data16
mov
push
cld
jns
cmc
insl
inc
mov
push
pop
in
cmpsl
add
add
jmp
push
pop
add
add
sarb
push
loop
dec
push
pop
mov
ja
or
or
cwtl
fldcw
outsb
add
insl
mov
arpl
add
cwtl
jae
xadd
test
sub
inc
add
add
cmc
jne
jl
in
pushf
sti
add
subl
ret
into
imul
addr16
pusha
in
mov
fdivl
icebp
sub
jecxz
jo
negl
out
es
sub
fstl
inc
mov
ror
pushl
jns
stos
ja
shr
pop
int3
xchg
jnp
cmpl
add
fidivl
or
and
and
loop
sbb
mov
cmp
mov
out
mov
cmpb
stos
jl
or
pop
push
int3
mov
test
dec
dec
int3
inc
sub
jns
inc
push
and
popf
in
jmp
into
jns
dec
negl
fidivl
call
mov
bound
sbb
xchg
or
test
aas
or
aaa
sub
mov
fcom
adc
dec
dec
outsl
add
cmp
dec
cmpsl
cmc
push
ficoms
leave
repz
pop
stos
cmp
mov
es
scas
fists
popf
lret
add
cmp
jl
or
popa
or
aaa
outsb
sahf
sub
fiadds
push
add
pop
je
cltd
shr
adc
jecxz
cld
sti
pop
mov
inc
pop
rcrl
dec
aad
mov
out
add
int3
inc
adc
jle
sub
sub
loop
dec
push
addl
out
mov
pop
lock
cmp
push
repz
into
jl
cwtl
sbb
js
sbb
jmp
push
cmp
dec
fcompl
fisubs
fdivl
std
mov
std
pop
or
jns
fwait
sbb
push
rorl
dec
fimull
sbb
jo
sub
and
sbb
test
loope
cli
pop
dec
out
fsubr
dec
rolb
ds
lock
mov
push
cmp
mov
pop
movsl
sahf
dec
add
adc
ja
das
nop
push
pusha
adc
jno
or
inc
cmc
dec
pop
cwtl
out
and
sbb
scas
jmp
jle
mov
push
cmp
sub
xchg
shl
ja
inc
jns
jae
sub
and
cmc
lcall
pop
mov
adc
fadds
std
push
add
movsb
push
jl
mov
inc
insb
jns
arpl
jp
ss
inc
imul
cmp
out
movsb
push
or
and
jb
int
setl
sbb
subb
out
add
jl
adc
cmp
and
xchg
pop
sub
mov
into
shlb
cli
js
pop
pop
push
out
push
xchg
ret
es
push
or
cmpsl
das
jecxz
outsl
pop
inc
lret
xor
cltd
jb
pusha
mov
imul
push
sbb
mov
add
iret
adcl
out
jmp
sbb
sbb
in
cltd
jae
xor
scas
lock
jb
adc
aad
ja
cwtl
xor
pop
xacquire
mov
sub
jmp
and
scas
mov
xchg
add
stc
mov
ret
pop
xor
out
out
int
dec
pop
sub
add
add
faddl
sti
dec
je
aam
les
out
fwait
popa
out
mov
mov
or
repz
jb
stos
pop
mov
addr16
mov
lds
leave
ja
ljmp
sub
imul
mov
mov
inc
sub
mov
fnstenv
xchg
add
xorb
pop
incb
sti
push
inc
cmp
stos
xlat
adc
mov
test
sub
aaa
bound
xor
loop
add
jg
or
fsubrl
popl
xor
cmp
sbb
cmp
arpl
call
adc
in
leave
stos
mov
mov
in
adcb
mulb
inc
and
js
stc
mov
mov
pop
outsb
xchg
or
push
call
jmp
pop
dec
std
inc
xchg
inc
aam
pop
ret
fnop
loope
push
xchg
push
idivl
testb
adc
rcrb
clc
jo
jno
cmc
pop
mov
pop
loop
shll
cmp
shll
test
cmp
sahf
call
mov
cmpsl
adc
sub
adc
pop
inc
popf
xor
and
push
ljmp
xchg
xor
shlb
pushf
psubw
in
ret
jno
jl
cmp
iret
add
nop
sbbl
xlat
mov
mov
out
ds
mov
in
fwait
in
add
dec
out
cmp
jmp
xor
es
adc
cmpsl
pop
bound
scas
and
and
les
dec
pop
adc
std
test
divb
loop
cmp
ds
std
mov
inc
out
sbb
in
aaa
outsb
fsts
cmp
adc
pop
xlat
mov
jnp
lock
aas
ret
mov
pop
ret
aaa
and
push
push
push
sbb
ds
nop
clc
mov
test
mov
xor
enter
test
cli
scas
int3
andl
pop
pop
loop
fwait
pusha
dec
insb
dec
push
outsb
aas
icebp
mov
inc
sub
jb
push
xchg
pop
ret
outsb
adcl
push
dec
imul
push
dec
fiadds
popf
les
filds
hlt
lods
loopne
imul
dec
xor
test
cmp
xchg
seta
add
fidivs
sti
loop
jecxz
stos
xchg
xchg
fmul
movsb
mov
sbb
sbb
js
cwtl
xchg
sti
jo
test
lods
cs
sub
call
mov
notb
test
lea
fcoml
cmp
and
mov
lods
sbb
fstpl
scas
cmp
cmp
or
adc
cmpsl
or
cli
jno
xchg
es
jecxz
cmpb
mov
mov
enter
stos
push
int3
test
mov
sub
hlt
xor
lock
aad
push
repz
loope
roll
xor
ljmp
loope
dec
sub
cmp
addr16
cld
add
fmuls
jmp
add
orb
add
or
add
aas
iret
push
add
rcl
adc
loopne
mov
cmpsl
cmp
ja
xorb
cltd
and
lcall
cltd
sbb
data16
ss
lds
inc
ficomps
sbbb
dec
mov
add
scas
fidivrl
nop
out
jno
xchg
mov
dec
mov
stos
mov
mov
cld
and
push
testl
add
aad
mov
fisubrl
cmp
lds
xor
into
fcmovnbe
cmp
sti
mul
push
gs
jb
or
je
sbb
pop
jbe
xor
xchg
repz
ja
int3
jb
incb
and
xchg
scas
pop
mov
iret
bound
lahf
aaa
push
ret
pop
loopne
mov
or
int
sub
rcll
pushf
inc
and
cmpsb
jle
int
xor
test
or
mov
leave
push
xchg
jmp
cmp
xlat
sub
pop
xor
sub
mov
push
scas
inc
out
testb
mov
movb
mov
in
sarb
mov
xchg
outsb
xchg
roll
pop
andb
push
sub
loop
lret
imul
jbe
jge
outsb
jge
in
sbb
xlat
pushf
mov
inc
xchg
or
shll
repnz
pop
mov
push
cmp
std
rcrb
push
adc
mov
mov
in
pop
lret
ds
inc
xchg
dec
inc
ss
aas
sub
xchg
jbe
sub
orb
xor
sbb
mov
push
loopne
out
xlat
ljmp
cld
jb
mulb
scas
add
aas
jae
jbe
jno
inc
in
fnstcw
jb
rcr
adc
dec
push
ficompl
sub
data16
popa
push
cld
inc
sbb
out
sbb
pop
or
xor
shll
ljmp
shrb
sub
and
adc
xchg
lret
mov
fdivrl
and
or
push
stos
pop
mov
testl
mov
sub
in
dec
fs
jl
and
push
sub
sub
test
out
xchg
loopne
hlt
push
xchg
out
xor
iret
inc
add
mov
sbbb
into
cmp
repnz
ljmp
aam
adc
aas
push
call
cmp
in
mov
fisubrs
lret
dec
jge
push
cmp
flds
mov
mov
icebp
sbb
sti
jne
mov
bound
aas
stos
add
dec
clc
into
xor
xchg
jno
movsl
aad
mov
cltd
dec
rcll
in
stc
out
fs
std
icebp
cld
adc
pusha
cltd
pushf
jne
mov
jae
pop
push
leave
sub
das
dec
insb
push
shl
add
dec
fldenv
fsubr
push
loop
and
or
scas
or
pop
pop
cmp
in
sbb
idiv
or
inc
in
sbb
stos
or
stos
cmp
fwait
jl
ljmp
sub
push
mov
add
mov
into
jo
lods
subb
fisubs
xchg
mov
shrl
xchg
sbb
lret
in
jno
lds
or
push
inc
sbb
mov
shlb
pop
sbb
les
cmp
push
sbb
adc
xchg
push
xor
out
cmpsb
addl
mull
test
mov
fldl
xchg
dec
pop
jle
mov
bound
orb
hlt
lret
xor
and
ret
cltd
push
pop
xchg
inc
ret
sarl
or
inc
mov
xor
lcall
mov
cmp
rorl
sub
loopne
mov
movsl
sti
mov
lret
sti
leave
inc
and
push
sub
aad
mov
gs
pop
int
cmpb
scas
paddusb
push
jecxz
stos
mov
pop
loopne
pop
lods
push
imul
inc
jns
jp
mov
cmp
mov
xchg
push
cli
pop
pop
jg
mov
popa
inc
mov
into
pop
and
test
les
sub
lret
rep
testb
out
inc
dec
or
loope
xlat
in
fs
pop
sub
and
jno
dec
mov
jl
push
call
cld
jb
dec
fcomp
mov
sti
pop
adc
incl
xlat
gs
jge
scas
adc
cld
fwait
out
js
ss
cmpb
cwtl
fs
adc
imul
xchg
aam
cmpsl
sarb
mov
pop
push
scas
xor
sbb
cmc
mov
dec
jae
mov
lds
loope
int3
into
das
mov
mov
sub
jg
dec
mov
mov
loopne
in
mov
and
push
add
mov
pop
addr16
xor
xchg
arpl
imul
mov
push
xor
mov
cmp
daa
inc
clc
mov
je
jae
adc
inc
faddl
mov
in
cwtl
mov
loop
sub
dec
fnstcw
push
sub
shr
divb
adc
pop
bound
loopne
xor
cmpsb
in
enter
push
scas
xchg
mov
shll
testl
xor
cmpsb
test
sub
stos
add
push
outsl
ja
add
xor
xor
mov
cmp
bound
inc
add
ret
pusha
inc
mov
add
jno
aam
cmp
incl
xor
and
adc
test
adc
mov
cs
adc
cli
cmpsl
outsl
mov
icebp
fdecstp
not
dec
pop
daa
fdivrp
mov
shl
push
add
icebp
lahf
adc
and
sub
push
in
inc
push
lcall
xchg
jecxz
xor
mov
aam
sub
stos
hlt
shlb
je
aad
dec
mov
imul
pop
test
loopne
lret
stc
imul
dec
sub
lret
loopne
daa
shl
mov
mov
cmp
aaa
jb
sub
add
add
jmp
pop
movsl
sbb
icebp
pushf
push
cmp
jb
xor
fsubr
push
push
jo
sbb
push
jmp
fisttps
push
rorb
xchg
sbb
rcr
adc
or
sbb
mov
push
lret
jg
sahf
add
pop
xor
call
sbb
jge
jbe
popf
lods
inc
insl
movsl
adc
repz
sbb
jecxz
cs
xor
mov
loop
dec
pop
dec
hlt
hlt
shlb
pop
jge
dec
add
les
and
sahf
mov
jae
pop
sub
ja
lea
and
jne
inc
pop
dec
hlt
or
into
pop
xchg
cld
insl
add
mov
incb
repnz
pop
xchg
jle
adcb
in
xchg
push
mov
in
icebp
fdivs
sahf
daa
sbb
cmpb
sub
loop
test
mov
sbb
cmp
dec
movsl
icebp
fcmovnb
aam
cmp
jecxz
adc
mov
mov
bnd
inc
adc
mov
mov
ret
and
sahf
lea
dec
mov
int
xor
xor
clc
fsubl
xor
lret
jge
loope
pushf
ds
fwait
loopne
adcb
or
lea
jns
scas
iret
or
inc
int
add
stos
stos
cs
sarb
inc
pop
mov
lock
pop
dec
imul
dec
add
iret
xchg
sbb
mov
push
fcom
jne
lea
sub
push
iret
shl
gs
cmp
or
add
adc
jne
sbb
jge
cmp
aas
scas
push
adc
push
bound
lea
xchg
lret
sarl
jbe
inc
sbb
mov
dec
repnz
mov
lods
cltd
nop
adc
sub
mov
and
mov
ret
aam
pop
in
out
js
sbb
push
dec
loope
and
inc
pop
mov
jle
and
scas
xchg
xorl
mulb
lcall
sub
addr16
shrl
inc
mov
sbb
jecxz
aaa
cmpl
sbb
and
mov
fsub
push
in
jge
push
sbb
inc
sbb
adc
and
test
sub
lret
es
or
sbbl
inc
mov
and
pop
jns
xchg
sbb
cmc
out
xadd
xchg
jae
pushf
mov
lea
std
cmovnp
data16
lcall
or
jno
lods
mov
mov
subb
xlat
mov
xorb
cmpl
or
xchg
sbb
pushf
into
and
or
xchg
xor
into
lea
inc
loop
scas
mov
lods
loop
adc
out
rcrl
nop
test
out
xorl
sbb
xchg
lods
lcall
mov
push
repnz
imul
call
pusha
bound
cmp
dec
scas
pop
jnp
dec
lock
pop
mov
dec
shl
and
mov
clc
sbb
popf
test
inc
stos
add
lret
cli
aad
nop
iret
xor
fs
outsl
xor
ret
orl
je
or
jb
jae
popf
xlat
inc
push
inc
or
sar
addl
cmpsb
testl
in
nop
ret
pusha
imul
inc
pop
cs
pop
xor
leave
and
mov
pop
add
mov
mov
out
cmp
sbb
inc
imul
sar
xchg
in
in
mov
add
sbb
mov
push
repz
lcall
ret
push
aaa
nop
aaa
pop
fnstsw
imull
rcr
mov
xchg
pop
in
cli
test
cmp
daa
outsb
mov
outsb
ss
int
loop
inc
pushf
int
mov
add
imulb
lds
decl
mov
mov
cmp
pop
movsb
dec
mov
pushf
test
mov
and
pop
jp
shlb
lret
into
and
push
xchg
test
mov
int
jg
add
dec
imul
sti
or
mulb
cmp
jmp
pop
jecxz
xchg
sbb
mov
sahf
jle
sub
sub
das
mov
dec
add
push
das
xchg
jae
adc
insb
jne
shlb
fucom
outsb
cmpsl
ror
cmc
mov
inc
idivl
fiaddl
clc
outsb
insl
repnz
jne
or
scas
test
das
cld
in
mov
je
addr16
stc
shl
lcall
mov
adc
test
pop
or
cmpsl
rcrl
fnstenv
fsubrp
popf
add
testb
cmc
adc
and
fucomi
sarl
es
push
sub
xor
push
sahf
jmp
or
xor
add
inc
ljmp
in
mov
mov
loop
push
mov
jle
mov
sub
addl
lods
nop
outsl
in
in
push
or
rcr
cmp
jne
rclb
frstor
in
sbb
mov
je
push
sbb
xchg
and
and
pop
in
pop
daa
jno
cs
movsb
sbb
push
nop
mov
fistpll
push
hlt
push
pop
cld
leave
adc
fnstsw
cld
pushl
imulb
pop
dec
loop
xchg
sub
sbb
inc
stc
jb
fsts
test
and
repnz
loop
xchg
sub
sbb
inc
stc
jb
fsts
test
and
repnz
loop
xchg
sub
sbb
inc
stc
jb
fstl
test
and
repnz
loop
xchg
sub
fsts
inc
push
fmul
bound
int
fucom
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cs
mov
cmp
fisubs
lods
cmp
add
add
or
add
pop
add
add
add
add
add
add
add
add
roll
inc
add
add
jno
lcall
add
add
add
add
dec
add
add
popa
add
das
add
add
add
bound
add
cmpsl
add
add
aaa
add
add
sbb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
aad
cmp
xchg
add
add
add
add
add
cmp
roll
push
add
add
add
js
aad
mov
mov
add
add
add
add
push
add
add
add
add
add
add
jmp
add
add
cmp
cmp
push
add
mov
lds
ds
add
pop
add
insb
add
mov
addl
add
ds
add
add
add
add
add
roll
lea
flds
aaa
add
movsb
add
add
in
add
addl
arpl
loopne
pop
add
add
mov
flds
inc
add
add
add
add
add
add
add
movsb
add
add
add
add
add
add
add
lock
add
add
mov
in
outsl
add
add
add
lock
add
gs
add
add
add
add
add
cmp
outsl
add
pusha
add
add
jmp
add
js
aad
add
mov
add
add
add
add
add
cmp
addl
sub
and
add
add
add
add
add
add
add
addb
add
pop
add
add
add
jge
jecxz
incl
int3
add
add
sbb
sub
add
add
add
add
and
add
add
add
push
add
add
add
add
adc
add
add
roll
or
add
add
add
add
xlat
add
add
add
bound
test
aad
mov
add
add
mov
inc
add
inc
add
jmp
add
add
add
flds
das
add
add
add
add
add
es
add
add
add
add
add
add
test
push
add
mov
cmp
cmp
daa
add
leave
add
add
pop
add
add
add
add
bound
push
add
add
add
add
test
add
add
jmp
add
add
add
add
sub
add
add
ret
add
add
add
dec
add
add
add
mov
dec
add
add
or
push
add
jl
sbb
ss
add
insb
add
cmp
add
bound
jne
pop
add
add
add
add
xor
add
add
mov
sbb
add
add
add
addl
add
jnp
fs
push
pop
js
fidivrl
push
sub
sbb
neg
sbb
inc
ja
push
cmpsb
jbe
inc
jae
stos
shlb
pop
ret
dec
jg
lret
sub
inc
push
jl
imul
and
adc
mov
xchg
push
cli
pop
insl
mov
shll
insb
or
aad
sub
push
mov
or
je
jb
mov
stc
sbb
pop
out
subl
nop
mov
int3
sbb
or
aam
filds
add
arpl
push
jp
xor
jmp
std
adc
scas
lcall
xchg
aas
inc
rorb
and
and
fwait
jnp
and
inc
mov
scas
lcall
push
mov
jp
xor
jge
pop
push
out
in
xor
out
fidivs
jl
nop
xchg
sbb
arpl
mov
scas
dec
fnstsw
sbb
or
insl
mov
adc
push
lahf
xor
mov
xchg
add
jae
pop
adc
popa
fmul
rorb
dec
fs
jne
sub
sbb
push
mov
sbb
or
jg
aam
or
inc
fbstp
pop
jb
jne
dec
add
mov
stos
nop
negb
pusha
add
mov
loope
in
fwait
movsl
add
mov
push
mov
adc
sbb
ja
xchg
sarl
fadd
dec
jg
inc
ljmp
arpl
fstpl
ficoms
add
and
incb
ds
inc
dec
out
mov
dec
mov
stc
mov
sub
int
mov
dec
cmpsl
stos
mov
jbe
cmp
sti
insb
cmc
and
mov
nop
push
pop
int3
loopne
mov
repnz
jle
fldt
int
xchg
aas
jae
add
pop
add
faddp
imul
dec
fs
add
adc
sbb
dec
fldl
popf
adc
dec
ljmp
adc
ja
jle
jmp
pop
xor
xor
ret
xor
pop
cmpsb
mov
sbb
push
inc
cmp
cmpsl
mov
mov
xchg
cmp
int3
push
jo
and
test
xchg
xor
inc
and
movsb
test
push
add
pop
xchg
sub
mov
mov
pop
push
lock
repz
repz
lahf
repz
push
adc
cli
and
ss
fldenv
mov
ret
mov
sahf
pop
mov
icebp
mull
outsb
insb
popf
inc
mov
cmc
mov
sarl
mov
mov
mov
lods
leave
or
mov
push
leave
test
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
