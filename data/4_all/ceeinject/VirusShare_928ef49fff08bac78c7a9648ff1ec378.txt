call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
repnz
mov
mov
push
xchg
xlat
loopne
mov
mov
inc
push
xor
and
add
add
repnz
not
mov
mov
mov
mov
push
dec
dec
push
xor
adc
adc
add
jmp
sti
xor
pop
fisubl
mov
push
or
jne
push
dec
je
jb
mov
mov
loope
mov
push
hlt
in
cltd
mov
add
mov
lret
pop
jae
sbb
sub
jns
imul
mov
xor
std
pop
or
lahf
test
jno
es
sbb
int
addr16
pushw
iret
test
aad
lret
add
repz
negb
ret
dec
mov
xchg
sbbl
jecxz
xchg
addr16
and
mov
cmp
sub
mov
push
inc
movsb
and
mov
lret
and
push
adc
xchg
mov
push
dec
jmp
mov
das
nop
adc
dec
jno
adc
add
sti
shlb
mov
xchg
xchg
fimuls
pop
push
sbb
fmuls
push
add
out
cltd
mov
mov
roll
fcmovnu
repz
and
es
pusha
jb
jg
mov
mov
fdivp
mov
movsl
xor
pop
add
add
imul
xchg
xchg
mov
mov
ljmp
jb
bound
inc
inc
push
xor
and
adc
add
repnz
not
mov
mov
mov
xchg
jb
bound
inc
inc
push
xor
and
adc
add
repnz
mov
faddp
sarb
sub
or
xlat
pop
ret
jbe
pop
pop
insb
insl
xor
aaa
fwait
xor
sbb
fldt
push
pop
lods
mov
jns
ja
push
xchg
ss
cmp
inc
push
movsb
dec
or
loope
cmp
mov
call
mov
shrl
sub
aad
cs
push
jle
dec
loopne
fisubrs
inc
jbe
and
in
jns
inc
dec
jecxz
lods
in
xchg
repz
sarb
lret
or
lcall
enter
dec
fidivrl
adc
test
mov
mov
and
adc
sub
aam
push
cld
movl
jecxz
movsl
xor
arpl
pop
adc
inc
or
aas
or
xlat
cwtl
push
push
push
inc
daa
and
pextrw
xor
dec
xchg
in
xchg
ljmp
push
jnp
push
test
pop
lods
in
dec
repnz
or
incl
xor
pop
inc
or
call
jne
jge,pn
test
or
sub
incb
jp
sub
xor
roll
fstps
mov
das
mov
adc
xorb
decl
vmwrite
xor
jecxz
cltd
dec
mov
aad
jp
and
jle
or
jbe
fadds
loop
xor
das
add
dec
callw
dec
outsb
movsl
adc
cmp
test
dec
pop
std
push
jno
lds
rcr
ljmp
push
push
xchg
add
add
xchg
xchg
cli
adc
idiv
cs
push
mov
dec
jg
lret
jno
push
cmpsl
and
mov
cmpsl
das
enter
mov
xor
push
lock
pop
jbe
xchg
mov
inc
xor
out
jae
loope
or
xor
jne
sub
jp
inc
jne
sbb
push
push
pop
lret
repnz
sbb
cld
inc
lahf
mov
mov
push
cld
adc
cmpsl
jbe
scas
mov
addr16
daa
pop
inc
aas
jmp
xor
bound
fadds
push
cli
pop
or
mov
mov
pop
mov
loop
xchg
rorb
inc
adc
pop
mov
add
dec
add
lock
jo
das
popa
fwait
pop
and
and
lret
imul
out
inc
mov
push
pushfw
fs
stos
xor
mov
js
jecxz
in
ljmp
in
pushf
es
inc
cmpsb
leave
fidivrl
ret
fidivl
mov
cs
pushf
jne
and
xchg
and
pushf
sbb
inc
pop
out
inc
test
les
pop
cmc
std
fsubs
inc
movsl
movsl
push
ss
xor
fdiv
test
pop
movb
push
inc
sbb
sbb
cmp
push
ret
jmp
xchg
mov
out
inc
add
mov
flds
fcmove
cmpsl
mov
push
xor
xor
sub
in
sub
lret
fldcw
mov
mov
lds
and
sbb
movb
xor
inc
inc
lock
xor
inc
sbb
ret
mov
and
sti
xor
cmp
xchg
or
push
cltd
pop
mov
and
test
xchg
cmp
push
xchg
repnz
movsb
dec
add
and
ss
enter
lcall
or
pop
ljmp
cmp
fildl
notb
call
shlb
or
add
std
lcall
push
xchg
sbb
add
sub
push
cmpsl
sub
inc
loope
add
and
sarl
xor
outsb
pop
pop
sbb
mov
mov
jbe
or
pusha
or
add
jb
pop
xchg
or
fwait
pop
outsl
add
insl
xchg
mov
ret
ret
inc
in
mov
rol
push
imul
es
adc
mov
jo
push
mov
fsts
sbb
sub
jb
push
push
mov
xor
and
dec
inc
and
pushf
nop
mov
add
clc
pop
loope
cld
idivb
jg
xchg
nop
mov
xchg
add
femms
gs
outsb
int
adc
mov
out
jg
or
mov
fidivrl
inc
outsl
sti
adc
repz
sbb
fsubs
in
mov
out
in
lahf
mov
inc
push
js
push
shr
xchg
outsb
dec
mov
adc
cmp
dec
jne
imul
sub
jae
loopne
out
lods
stos
es
inc
stos
mov
inc
xchg
aam
dec
sbb
in
push
lahf
jno
lea
popa
mov
jnp
dec
xchg
mov
push
push
sub
jle
xchg
std
push
arpl
out
out
cmp
lret
pop
ds
sub
jle
loope
adc
mov
scas
shll
cli
or
and
faddl
sub
iret
fnstcw
movsb
or
cmp
push
stos
cmp
repz
pusha
rcll
rcrl
jmp
mov
icebp
ljmp
or
mov
lcall
inc
dec
mov
fidivs
xchg
dec
jmp
push
aad
add
les
pop
fdivl
stos
daa
jne
push
push
cmc
push
mov
sub
hlt
out
stos
subl
jae
pop
mov
ljmp
arpl
test
adc
xchg
cli
scas
lahf
add
aaa
es
add
dec
mov
aam
add
pop
sub
jmp
js
jge
loopne
stos
and
mov
in
outsl
fs
cltd
sbb
or
push
mov
cs
arpl
mov
or
insb
sub
add
add
data16
inc
jnp
in
imul
fbstp
mov
stos
sbb
lret
stc
jge
and
push
leave
adcl
pop
test
sbb
scas
popf
sub
in
iret
lahf
fistps
cmpsb
xorl
jg
add
and
inc
mov
dec
loop
int3
fdiv
cmp
jbe
adc
fs
xchg
cmpl
dec
jo
mov
stos
xlat
mov
dec
mov
jns
push
js
cmp
xchg
jns
jecxz
in
mov
icebp
mov
out
gs
sbb
repz
xor
mov
fwait
jno
stos
add
dec
adc
inc
in
pusha
subl
mov
cmp
cwtl
mov
pop
bound
sub
cmp
xlat
mov
and
or
pop
push
test
inc
movsb
mov
loope
cld
cmp
cld
repz
mov
push
mov
mov
jecxz
xchg
cwtl
cld
jb
clc
in
shrl
mov
xchg
jns
xchg
jb
adc
mov
stos
stos
sbb
sbb
adc
pusha
adc
lods
xor
js
push
inc
test
int
ljmp
adc
mov
sti
and
icebp
or
adc
sub
ds
dec
add
adc
stos
cs
fbld
bound
dec
jne
or
pop
sub
jns
mov
and
and
ret
test
test
mov
data16
dec
cmpl
aaa
xor
cmpsb
and
xlat
gs
jle
ficoms
ljmp
int
or
inc
add
bound
frstor
jo
cmp
and
cmp
dec
fisubl
add
sbb
lock
jne
outsl
sub
mov
mov
sbb
lret
mov
jb
enter
shrb
pop
xchg
pusha
dec
jb
add
xor
dec
loope
xchg
xorb
inc
and
dec
mov
jg
icebp
inc
out
xor
mov
mov
sbb
cmp
mov
ds
push
out
push
out
push
xor
movsb
pslld
out
jo
int
xchg
dec
repz
xor
add
mov
in
push
andb
std
jns
shrb
push
aas
jo
push
inc
test
divl
jp
inc
push
in
shl
xorb
inc
push
in
mov
jg
sub
fsubs
fbstp
cmp
push
arpl
mov
jecxz
mov
mov
xor
and
cwtl
dec
ss
pushf
stc
imul
mov
das
and
rclb
sub
ror
hlt
pop
jp
arpl
push
lret
pop
dec
add
ret
push
js
cltd
add
fstpt
loope
xchg
ror
stos
js
xchg
jl
out
mov
pushl
stc
inc
rcrb
inc
in
pop
pop
cmpl
imul
add
mov
sbb
push
lahf
divl
stos
in
add
pop
les
cmpsb
fwait
bound
cmp
mov
sbb
push
cmp
pop
rolb
daa
imul
pop
pop
pop
xchg
mov
sbb
jbe
sub
xor
jge
es
pusha
sbb
or
addr16
add
jmp
iret
jae
mov
out
inc
jns
jp
loop
jbe
and
cmpsb
test
or
sbb
xor
xor
insl
cmp
and
sarb
add
push
imul
inc
sub
call
mov
jnp
in
inc
dec
pusha
mov
add
adc
out
xlat
imul
iret
xchg
imull
repnz
loopne
nop
sbb
adc
cmpsl
mov
xchg
inc
test
hlt
mov
notl
push
mov
iret
loop
xchg
xchg
pop
mov
sarl
xchg
dec
adc
enter
rcrb
ljmp
sbb
ret
sbbb
and
popa
xor
inc
inc
sbb
pop
out
adc
add
pop
aam
jne
adc
add
scas
sbb
aad
js
fdivs
mov
push
cmpsl
push
call
mov
in
mov
mov
pop
pusha
adcl
dec
fwait
loopne
loope
hlt
add
sub
push
fsts
jns
fwait
cltd
dec
loope
outsb
mov
leave
pop
sti
or
daa
add
add
out
xor
dec
iret
xor
shr
in
aas
fwait
test
popf
adc
imul
fcomp
mov
mov
and
pop
add
xchg
jmp
add
daa
jle
xchg
pop
loope
fnstenv
pop
test
cmc
ja
stos
inc
xor
mov
inc
int
jg
inc
jbe
mov
cmpsl
icebp
dec
fmuls
divl
and
das
dec
lock
xchg
sub
fisubrl
xchg
cmpsb
cmp
in
rorb
jns
stos
cmpsl
shll
cmpsb
imul
fwait
and
clc
cmpsb
lret
and
test
xor
dec
mov
jbe
push
push
scas
sti
xchg
inc
xchg
aam
ret
sub
insl
out
dec
int
fadd
pop
jg
test
adc
out
xor
out
cmp
lods
jo
and
cmp
fs
mov
inc
xchg
subl
test
mov
or
orb
stc
int3
dec
sahf
mov
or
xor
xchg
add
fwait
sbb
lret
aad
sub
and
mov
mov
imul
shrl
xchg
outsl
scas
pop
and
andb
fs
xchg
or
dec
sub
ljmp
sbb
mov
fldt
sbb
fildll
aaa
mov
scas
fsubrs
add
add
and
fs
lock
mov
pop
in
dec
mov
and
sahf
xlat
push
loopne
mov
faddp
jbe,pn
pop
int
lods
repz
mov
xor
add
jbe
push
outsl
push
add
pop
aas
lea
cmp
add
inc
pop
or
aam
mov
push
pop
push
std
int3
mov
cmp
out
mov
mov
dec
jo
dec
iret
clc
sub
gs
imul
lret
testb
cmp
sbb
mov
mov
mov
lock
inc
mov
fdivrp
bound
adc
add
pop
shlb
dec
push
dec
adc
imul
mov
cmpb
shlb
sub
and
insb
add
lret
sub
cmp
filds
out
jnp
sub
mov
and
lea
pop
adc
xor
outsb
mov
loope
cmp
lods
cmc
or
mov
lret
xchg
jne
push
mov
arpl
addb
adc
das
lea
push
lds
leave
out
loope
int3
push
insl
popa
inc
sbb
pushf
push
je
sti
push
mov
inc
add
inc
pop
in
xor
aas
pop
sbb
clc
push
push
scas
je
push
frstor
cld
aaa
mov
aad
xchg
repz
pop
ret
aas
jecxz
cmp
dec
inc
xor
push
insl
push
inc
pop
rorl
loope
mov
push
out
sub
adc
push
jb
and
int3
enter
setbe
mov
mov
push
add
push
jo
cltd
sbb
test
int3
js
ds
out
mov
fwait
sub
arpl
fcompl
sub
dec
das
pop
mov
leave
dec
ret
add
aad
xor
or
cltd
jnp
dec
mov
fildll
hlt
jle
int3
pop
push
test
add
jo
mov
sbb
jl
mov
out
lret
xchg
mov
movsb
and
jmp
or
mov
ja
xorl
jbe
loopne
push
sub
jne
jo
cmp
mov
shll
sbb
add
and
jbe
and
stc
sbb
push
lret
ret
xor
jg
mov
pop
cmpsl
aam
mulb
pop
push
dec
in
dec
mov
iret
pop
idiv
dec
add
add
cmp
cltd
adc
inc
out
fildl
fcomps
movsb
lea
int3
jae
jnp
sar
pop
xor
lahf
scas
rorb
clc
outsl
inc
cli
cmp
mov
jno
xlat
sbbl
iret
out
gs
jmp
das
sti
movsb
hlt
rclb
je
inc
outsb
je
jae
cltd
cmovbe
decl
pop
es
push
test
sti
scas
rcr
dec
pop
pop
imul
scas
inc
sbb
jle
sbbb
mov
xchg
outsl
push
xchg
pop
int3
movsl
cmp
sbb
sbbl
movsl
jmp
cmpsb
push
ds
daa
cmp
aad
lcall
outsb
stos
mov
jg
mov
inc
mov
addr16
roll
sub
jnp
xchg
lds
rcrl
daa
sbb
pushf
xor
js
and
mov
outsb
sub
fcoms
cli
cmpl
jb
nop
cmp
and
popa
jmp
out
lret
adc
adc
ret
add
and
loopne
sbbl
pop
xor
mulb
test
repnz
cltd
nop
jmp
stos
imul
inc
push
int3
das
jne
add
xchg
or
push
xorb
push
jmp
cmpb
mov
data16
cmp
insb
and
add
je
adc
xchg
cltd
lea
std
aad
loopne
adc
sub
cmpsl
fcmovnb
test
push
jno
loopne
cwtl
mov
orl
orb
loop
aaa
pop
add
jo
adc
insb
jb
cmp
mov
mov
cmpsb
and
pop
imulb
cmc
mov
je
loope
xor
popl
jecxz
cld
or
and
jo
repz
pop
sti
mov
sarl
or
cwtl
inc
ret
stc
or
lahf
mov
push
jbe
lds
loope
mov
pushf
in
ja
das
je
mov
xchg
mov
dec
fdivrs
fisttpl
movsb
dec
mov
lcall
adc
cmpsb
arpl
pop
out
orl
mov
jmp
jg
in
pop
xchg
das
bound
pop
and
cmpb
sbb
popf
js
flds
add
iret
adc
push
aam
in
push
xor
inc
push
data16
or
mov
lahf
jl
and
pop
orb
mov
fldl
jnp
test
push
pop
test
jb
ds
rorb
popa
mov
mov
jnp
inc
xor
xchg
mov
out
enter
cwtl
fistpl
outsl
xor
sub
ljmp
xchg
sbb
inc
inc
mov
sub
adc
pop
inc
dec
cmp
adc
push
repnz
shrb
rcrl
fbld
xor
pop
cmpsl
cmc
cmp
add
mov
test
enter
dec
pop
push
mov
and
pushf
adc
outsl
dec
add
sub
subb
shrl
ljmp
or
orl
or
je
pop
adcb
jmp
push
mov
xor
pop
loop
test
pop
iret
insl
repz
sbb
es
push
cmc
dec
sub
roll
or
arpl
xchg
mov
push
repnz
stos
outsb
xor
xchg
push
decb
pusha
mov
adc
pop
mov
mov
js
nop
and
iret
push
jno
push
xchg
outsb
sbb
leave
mov
sarl
mov
out
cmpsl
mov
jo
add
outsl
mov
cmc
pop
mov
movsb
scas
stc
sarb
add
dec
jmp
rcrl
test
ds
fistpll
xchg
sbb
rcrl
pop
ret
and
div
push
es
xchg
mov
inc
dec
loope
and
jle
cwtl
cli
rcr
jecxz
adc
pop
jnp
sar
fucom
out
mov
call
xchg
rcrl
movsb
mov
adcb
sahf
mov
mov
popa
mov
or
popf
mov
push
fistl
sub
mov
scas
jae
adcb
add
pop
xor
and
in
js
insl
xor
and
xor
test
xor
jmp
lods
sub
repz
mov
lcall
and
imul
data16
inc
shlb
mov
or
lea
jg
mov
jmp
stos
je
imull
lock
sahf
jns
or
sub
mov
imul
loope
fbld
loope
sub
es
mov
out
rcrl
adc
addr16
shrl
loope
shll
out
lret
rcll
int
loope
dec
xor
js
add
cmpsl
ljmp
mov
out
stos
repz
and
out
push
js,pn
faddl
mov
fists
adc
push
inc
mov
shll
cmpsl
push
test
and
leave
mov
call
mov
ret
lahf
test
mov
shll
adc
or
cmp
push
xchg
insl
stc
fwait
lret
mov
in
ja
lods
push
int
mov
cld
push
xlat
sbb
xchg
push
out
outsb
mov
xchg
aas
pop
xlat
out
push
pop
adc
mov
scas
adc
pop
dec
jo
pushf
jno
push
ret
lret
dec
shl
adc
sbb
push
dec
in
in
jle
or
mov
xchg
and
pushf
sub
aad
cmpl
hlt
pop
xchg
aam
xor
push
xor
inc
sub
aaa
das
mov
dec
sbb
jecxz
imul
inc
addr16
in
pop
icebp
cld
mov
insl
inc
sub
sub
shrl
pop
jg
pop
sbb
std
ja
add
shl
mov
xchg
xor
sti
rcrb
fsubrs
sbb
mull
scas
jb
fists
stc
adc
shrl
insb
jne
sbb
fwait
cmp
add
inc
popa
sti
pop
iret
sub
and
aas
sub
xlat
andl
insl
in
lret
or
int3
adc
clc
test
test
push
jo
and
mov
mov
test
sbb
add
ret
sbbl
pop
mov
adc
in
cmp
mov
mov
sbb
testl
sbb
out
les
cmpl
test
cmp
xor
dec
mov
jecxz
js
pop
movb
cmpsb
mov
scas
jns
push
mov
das
negl
scas
adc
jle
icebp
imul
mov
or
out
or
push
nop
sbb
iret
sbb
xchg
or
cmp
ljmp
cmp
and
add
mov
cmp
mov
aas
cmc
lock
and
mov
lret
fcomps
fidivrs
rolb
sbb
pop
insl
pop
mov
jge
loop
sbb
pop
ljmp
pushf
xchg
repz
mov
inc
mov
pop
data16
pop
decb
movsl
lock
shl
lods
out
sub
push
inc
add
mov
out
fwait
push
pusha
fcoml
lods
pushf
out
insl
ja
sbb
mov
jg
pushf
aad
adc
xor
mov
push
mov
pop
pop
lret
xor
lods
dec
outsb
jae
in
or
jns
xor
outsb
jg
loop
mov
aad
jmp
and
fadd
ret
cmpsb
mov
xchg
jb
bound
inc
inc
push
xor
and
adc
add
repnz
not
mov
mov
mov
xchg
jb
bound
inc
inc
push
xor
and
adc
add
repnz
clc
rcr
ret
cmpsb
mov
xchg
jb
bound
inc
inc
pop
xor
and
adc
add
repnz
adc
and
xchg
mov
mov
push
lea
inc
and
stos
dec
in
jle
outsb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
add
xor
cmp
fistps
in
cmc
jp
push
pop
mov
mov
inc
stos
push
lcall
adc
cmp
sub
sbb
or
mov
movsl
dec
mov
inc
stos
push
lcall
adc
cmp
or
jbe
or
das
shlb
or
and
xor
xor
pop
inc
in
xchg
mov
das
loopne
pop
dec
jno
inc
and
pcmpeqw
add
lods
aaa
mov
in
cmc
loopne
xchg
imul
sbb
mov
mov
dec
lahf
fistl
xchg
idivb
lds
sbb
lret
jp
test
mov
jo
and
add
adc
mov
scas
sub
and
test
jg
inc
test
jp
jne
mov
je
xor
lahf
sbb
sub
xchg
test
int
push
inc
sbb
inc
pop
fildl
jge
dec
sbb
insl
in
and
sub
dec
jbe
stos
push
lcall
adc
cmp
sub
sbb
or
jp
push
pop
movsl
dec
repz
inc
fisubrs
and
xor
inc
cwtl
popa
mov
mov
int3
sbb
push
cmp
or
fildll
iret
cmp
sub
scas
push
mov
mov
or
sarb
filds
push
cmc
add
or
fisubl
sub
sbb
or
jp
push
pop
movsl
dec
mov
inc
stos
push
lcall
adc
cmp
sub
sbb
or
jp
push
pop
movsl
dec
mov
inc
jge
or
xchg
xor
rorl
sbb
sbb
sbb
mov
inc
dec
adc
jb
sarb
pop
adc
push
sub
icebp
out
pop
jnp
pop
lcall
pushf
orl
lods
cli
and
sub
cmc
inc
push
inc
or
jp
add
or
jne
pop
iret
push
mov
loopne
jbe
sarl
xchg
lds
jns
dec
das
aam
in
stos
add
dec
pushl
mov
add
cmp
shlb
lds
inc
fiadds
mov
xchg
inc
lods
in
in
das
adc
repz
lea
push
cli
jno
cmp
out
cmc
jns
mov
sbb
and
aad
outsl
inc
sbbb
or
dec
ret
aas
mov
mov
add
mov
test
fsubl
orb
sub
xor
maxps
fisubrs
popf
sub
cmp
cld
shll
push
loopne
pop
cmc
add
pop
lret
rcrl
or
mov
outsl
sub
sahf
cmc
rcll
sub
js
pop
jge
jne
orl
ds
andl
push
es
mov
outsb
or
xor
sarl
inc
push
dec
xchg
pop
out
in
add
sub
rclb
pop
mov
sub
ljmp
std
sub
cmp
add
and
js
push
or
mov
push
mov
cmp
test
data16
dec
push
add
mov
xchg
xchg
mov
push
and
push
dec
push
or
iret
test
mov
adc
jae
or
arpl
cltd
daa
out
mov
sti
or
xor
stc
fs
mov
repnz
jo
pop
lahf
mov
jge
inc
pop
mov
adc
mov
daa
inc
hlt
fucom
and
inc
sub
es
inc
into
mov
add
sbb
adc
xchg
decb
outsb
rorl
jg
dec
push
mov
adc
mov
jp
das
insb
lods
movsb
je
std
sbb
jg
adc
leave
cwtl
push
push
lods
jnp
jbe
add
loop
and
push
aam
sbb
cmp
aam
and
push
xor
sar
adc
jmp
jbe
mov
push
adc
pop
pop
add
jnp
jl
jg
popf
andb
pop
dec
cmp
data16
add
jl
pushl
pop
rolb
bound
sbb
shrl
gs
cltd
add
ret
pop
or
sub
push
fimull
mov
mov
jns
push
cltd
mov
std
je
lods
dec
popa
xchg
mov
dec
push
mov
call
dec
and
clc
sbb
and
lret
xchg
sbb
adcl
imul
sbb
add
mov
xor
mov
inc
mov
xor
jae
lcall
scas
loop
shr
xor
pop
mov
test
test
jnp
aad
ret
xchg
fwait
mov
xor
hlt
xor
pop
pop
lock
ljmp
aas
dec
and
ficoml
mov
inc
outsl
adc
loop
adc
push
and
and
stc
mov
xchg
lds
test
sarb
and
mov
sub
test
imul
daa
jp
cmpl
test
xchg
int3
xor
jmp
icebp
mov
adc
gs
pop
push
mov
mov
sbb
push
stos
negb
jg
mov
ss
and
andl
int3
dec
or
repz
jbe
dec
mov
das
iret
movsb
sub
push
iret
out
jns
in
dec
mov
gs
notb
push
fadd
js
arpl
push
or
cmp
stc
pop
sbb
dec
inc
inc
mov
popf
cwtl
neg
test
mov
xchg
and
sahf
sarb
adc
mov
cmp
incb
or
sbb
jmp
inc
and
or
and
out
sbb
fmul
jmp
cmp
out
push
test
inc
dec
push
out
add
add
mov
dec
pop
icebp
in
incl
or
add
sub
xchg
stos
jmp
rcr
xor
test
add
scas
repnz
lods
or
adcl
cmp
insb
std
mov
jns
stos
pop
pop
xchg
stos
lea
sub
jne
lret
mov
and
jecxz
pushf
fs
shrb
sbb
test
scas
pop
das
in
inc
mov
pop
xrelease
mov
add
sarl
dec
int
in
test
cmp
outsl
clc
sbb
jbe
mov
out
push
into
pop
repnz
push
jo
fdivrl
dec
stc
fldenv
movsb
pop
add
mov
mov
fs
push
ds
ret
cwtl
divl
inc
mov
dec
dec
je
sub
imul
sbb
pop
int
xchg
loope
fistpl
ds
jp
mov
jecxz
jmp
loop
sbb
pop
lea
aas
jbe
ja
pop
push
sbb
jl
jmp
pop
or
dec
push
iret
jo
mul
or
inc
mov
inc
jo
gs
cmc
push
shll
mov
loope
xchg
popaw
sub
dec
xor
addr16
push
hlt
aas
sbb
xor
pop
insl
dec
sub
fsin
ror
js
ljmp
aad
cltd
das
ds
in
mov
jo
cmp
sbb
clc
sub
xor
in
lods
xor
inc
aam
ficompl
mov
adc
int
pop
pop
adcl
pop
imul
lock
pusha
jl
in
jae
rcrl
dec
jecxz
aad
sbb
stc
leave
addr16
add
add
scas
xchg
js
xorl
in
jmp
lret
cld
push
int3
cmp
mov
aad
pop
loopne
pop
cmpsb
mov
cmpb
lds
incb
das
xor
pop
add
push
jp
je
cmp
lret
inc
pushf
and
jg
sub
adc
frndint
mov
gs
ja
jbe
ret
pop
and
sahf
ret
in
ljmp
xchg
push
repnz
inc
loope
in
mov
lret
inc
adc
daa
add
test
mov
jge
rcl
jecxz
push
pop
xor
xor
sub
sbb
sub
aad
xchg
fistpll
push
out
or
mov
mov
mov
cltd
ret
add
clc
hlt
push
mov
adc
cs
mov
pop
cmp
cld
xchg
pop
mov
test
jae
push
jmp
push
out
mov
incb
sbb
out
sbb
and
movsb
shll
jge
rolb
aam
dec
pop
call
cmp
leave
jmp
or
lock
push
fistpl
sahf
clc
hlt
add
lahf
in
adc
stc
mov
out
ds
mov
fimull
lea
sub
push
sbb
mov
fstpt
int
outsb
mov
cmpsb
fcomps
xchg
xchg
and
or
js
arpl
mov
fidivrs
imulb
shll
cmpsb
jecxz
push
mov
rolb
lahf
push
fidivs
in
adcl
push
add
push
mov
add
cmpsb
mov
adc
inc
fucom
sbb
and
fincstp
or
aad
mov
or
fcomi
pop
push
sbb
fcoml
insb
aam
dec
sub
dec
in
in
push
pop
add
std
dec
pusha
xor
int3
pop
cltd
xor
dec
int3
cmp
cmp
push
rcr
lods
rcl
inc
stc
mov
int
sub
dec
mov
pop
in
iret
xchg
or
shr
add
pushw
scas
or
lahf
xchg
nop
mov
gs
lods
out
cltd
mov
cmp
adc
cld
mov
in
xor
addl
xor
sti
push
xor
jns
dec
adcl
mov
aam
mov
mov
out
or
add
loope
cld
enter
and
data16
loope
lods
jl
lret
adc
cwtl
and
xchg
fisttps
jmp
mov
mov
outsb
sbb
lea
sbb
addr16
hlt
and
out
js
push
dec
mov
jl
xor
js
popa
xchg
sbb
daa
dec
mov
dec
jne
aaa
je
jb
test
hlt
push
nop
into
lock
jb
mov
insl
fists
rolb
dec
pop
mov
fsubs
mov
or
mov
inc
pop
xor
in
push
mov
pushf
lds
xchg
testb
icebp
ret
inc
or
sub
and
cmp
push
scas
lret
cmc
inc
inc
inc
sbb
rclb
shl
adc
sub
pmaddwd
ror
push
das
sub
add
sub
cld
sbb
pop
fwait
int3
mov
rorb
cmpsl
jmp
insb
daa
mov
mov
and
rcrb
dec
jl
mov
cltd
repz
fwait
jnp
iret
jbe
push
loope
subb
mov
mov
iret
fcmovnu
push
repnz
stc
dec
or
sbb
push
pop
or
jo
mov
xchg
add
adc
inc
lea
lcall
sub
mov
aad
xor
popa
push
cmp
leave
mov
xchg
sbb
outsb
inc
cmp
xchg
in
ret
xchg
and
movsl
sti
out
lock
xchg
xchg
shll
push
stc
leave
mov
cmpsl
gs
push
mov
mov
test
xchg
or
adcl
pop
fldcw
mov
xor
cmp
add
sahf
jmp
sub
adc
lods
daa
cltd
insl
xchg
mov
nop
dec
fwait
xlat
cmp
je
psllq
test
pop
shrb
and
inc
lods
ret
int3
inc
and
mov
enter
iret
addr16
lds
dec
adc
clc
fwait
inc
daa
pop
inc
adc
aam
or
je
aas
sahf
in
enter
jp
sub
cli
adc
dec
std
push
mul
lahf
xorb
cmpb
in
pop
xchg
sbbl
mov
ret
in
sub
jo
push
xlat
jae
and
xor
or
inc
mov
fcoms
push
pop
in
xor
mov
mov
sbb
inc
leave
adc
sub
mov
push
cmp
lahf
movsb
cmc
mov
xchg
pusha
clc
sub
push
jnp
mov
cmp
inc
sub
pop
cmpsl
iret
fwait
adc
jae
fs
aas
gs
fcmovnb
js
push
mov
sbb
add
orb
sub
rorl
cmp
xchg
leave
jnp
mov
pop
xor
ret
lea
fisubrl
sub
imul
lods
ss
lock
xchg
insl
daa
add
mov
jae
enter
and
orb
insb
sbb
fsts
or
push
scas
or
and
test
ficoml
pop
pop
dec
mov
fnstsw
repnz
jns
testb
scas
jmp
push
inc
mov
cmc
cs
sub
cwtl
push
into
inc
popf
pop
push
cmp
pop
std
inc
in
ret
add
loop
sbb
or
add
mov
xchg
into
aas
lret
test
mov
mov
dec
aaa
iret
scas
das
imul
test
ja
mov
ljmp
test
xor
lea
cltd
js
jecxz
cmpsl
push
sub
jg
sub
adc
fbstp
pop
shr
and
push
inc
cli
adc
iret
iret
mov
repnz
mov
mov
mov
pop
inc
rcrl
jmp
push
xor
xor
fdivr
movsb
push
and
enter
sahf
shll
ficoms
adc
push
fs
insl
inc
sbb
inc
xchg
aad
mov
les
in
idivb
xor
or
dec
sub
or
cltd
inc
mov
pop
iret
sti
into
push
mov
mov
pop
je
in
sub
ss
mov
dec
jmp
xchg
fcmovu
in
test
aaa
mov
cmc
cmp
notb
cmpsb
and
xchg
popa
stc
mov
or
test
push
fstl
jg
pop
push
pop
cwtl
imul
pusha
add
jle
jecxz
es
xchg
dec
call
or
push
fnstenv
adc
mov
push
xor
and
imul
mov
lcall
inc
xchg
int
mov
xlat
pop
imul
mov
pushf
int3
out
cmp
sbb
sbb
or
int3
or
pop
adc
cltd
pop
or
repnz
pushf
dec
fldenv
movsl
in
clc
or
cmp
repz
jno
inc
fldenv
pop
cmc
data16
pop
add
mov
rorl
daa
shrl
js
out
sbb
es
dec
out
cwtl
outsl
fs
ja
jne
test
mov
mov
cmpsl
and
xchg
xor
leave
push
lcall
out
xchg
sub
add
jp
sub
push
fwait
mov
movsl
std
or
js
js
xor
outsl
pop
mov
mov
stos
fmul
gs
notb
mov
loopne
and
imul
jp
sbb
push
pushf
jmp
ret
or
addr16
jnp
jo
ffree
mov
mov
faddl
nop
ret
xchg
fisttpll
movsl
pop
push
lea
aas
push
popa
xchg
test
or
stos
movsl
mov
enter
push
pop
inc
add
test
adc
mov
jne
or
push
cmc
data16
roll
mov
aaa
jns
fisubrs
mov
lds
std
jo
decb
ret
adc
cwtl
cmp
out
insb
aaa
data16
bnd
push
cmp
mov
jno
out
mov
inc
sub
jp
mov
enter
gs
insl
mov
aam
pop
push
xchg
nop
jle
or
inc
das
mov
hlt
inc
int3
xor
xchg
xor
and
mov
sub
pop
jmp
stos
rorl
sbb
lock
nop
sub
lods
inc
mov
push
into
jne
inc
jmp
in
fistps
in
xchg
ret
pop
gs
cltd
and
shlb
sbb
scas
pushf
xchg
jg
pop
xor
adc
or
pop
dec
fsubrl
jp
sbb
cltd
push
addl
mov
pushf
subl
std
mov
je
jo
js
or
cmp
idiv
call
lock
test
pop
jne
lret
stc
lea
out
sbb
dec
aad
decb
dec
add
mov
idivl
cmp
ja
lock
in
pop
aaa
sahf
popa
add
jae
sub
jbe
mov
into
aaa
push
in
call
mov
sarl
xchg
je
sub
lea
rorl
jae
popf
stos
sbb
pop
popa
and
data16
fld
les
inc
dec
lds
fiadds
xchg
sbb
stos
inc
cmp
jne
or
or
lret
add
adc
cmpsb
push
popa
jl
lods
jb
push
push
test
lcall
adc
movb
dec
repz
jmp
adc
pop
mov
bound
xchg
mov
mov
mov
dec
movsl
clc
arpl
xchg
dec
das
sub
mov
push
jb
xchg
sbb
xor
and
jge
inc
sub
aaa
sub
adc
lahf
mov
jmp
mov
lcall
pop
shl
rol
leave
sub
test
shrl
fcmove
popl
xchg
insl
cmp
insl
nop
out
jecxz
shll
imul
jle
mov
mov
icebp
mov
ficomps
testl
mov
sti
pop
xchg
jl
jo
jge
cmc
jle
push
orb
mov
fmul
jl
das
gs
cli
inc
ljmp
out
fistl
mov
es
or
cld
test
sbb
xlat
and
and
lret
mov
stc
mov
xor
clc
popa
mov
insb
or
cmp
add
mov
iret
and
add
call
push
push
repz
jg
fimull
in
sbb
pushf
mov
dec
jns
cmp
mov
test
sbb
mov
std
cld
xchg
or
or
jg
jp
push
aam
mov
dec
jae
mov
mov
inc
add
stc
jl
and
jg
mov
adc
xchg
ss
adc
andl
out
push
xchg
adc
inc
cltd
daa
jecxz
push
ret
lds
and
adc
push
add
fbstp
add
movsb
sbb
pop
xchg
cmp
pop
jne
and
jl
insl
pop
xchg
scas
fistl
sbbb
dec
lcall
loopne
xor
hlt
out
mov
sbb
pop
pop
jg
push
lret
loopne
xor
dec
xchg
inc
adc
mov
mov
xchg
icebp
adc
ds
mov
std
mov
push
xchg
adc
imul
xor
scas
jecxz
les
jbe
dec
loope
aas
pusha
dec
inc
jo
testl
daa
hlt
sub
test
mov
inc
fdiv
mov
lcall
add
sbb
sar
xor
xchg
cmpsb
pop
inc
in
fucomip
inc
out
mov
das
insb
cmpsl
push
clc
sbb
movsl
insb
xor
leave
out
sbb
pop
xchg
mov
cld
cmp
fwait
mov
divb
orl
imul
or
ljmp
jnp
hlt
rcrb
xor
inc
lret
fwait
xor
mov
out
repnz
mov
outsb
fnstcw
mov
and
in
int
xchg
pop
push
xchg
mov
pop
sbbl
les
in
lahf
xor
add
iret
sahf
dec
inc
and
xlat
ja
loopne
rol
adc
lds
stos
lock
and
cltd
jbe
sub
rcrl
or
es
aad
lcall
ss
cmp
arpl
jp
mov
xchg
imul
hlt
fistpl
xorl
fldl
push
jecxz
sub
adc
lods
xchg
cmp
sbb
dec
lock
xor
jno
cltd
out
scas
sbb
push
dec
xchg
jb
fs
dec
push
int
ret
dec
sahf
adc
cwtl
pop
ficomps
cmp
xchg
arpl
inc
sub
shll
out
adc
je
push
add
imul
enter
lods
xor
lods
cmpsb
iret
sbb
ljmp
cmp
pop
xorl
add
or
enter
mov
sub
cwtl
in
fdivrl
outsb
and
push
mov
int3
cld
mov
ds
xor
dec
inc
outsl
sbb
cwtl
jns
cmpsl
push
fldt
or
cld
dec
mov
adc
xlat
pop
push
popf
pop
or
xchg
fwait
pop
cli
sub
imul
sbbb
pop
jmp
sbb
jge
adc
cmc
data16
cmp
jp
shrb
lret
add
pop
test
sub
sub
adc
sbb
pop
test
jno
or
push
bnd
lret
stos
inc
lret
mov
hlt
xchg
lea
jno
fcmovnb
jecxz
mov
adc
and
pusha
lock
mov
mov
fimuls
cltd
ret
icebp
hlt
test
pop
dec
je
add
mov
stos
rcll
pop
lods
lods
pop
mov
jns
loop
roll
mov
scas
or
fdivs
lods
ja
cltd
inc
sbb
jnp
mov
mov
cmpsl
std
pop
aas
stc
mov
xchg
xchg
movsl
sub
push
enter
int3
inc
jo
add
mov
push
push
push
into
push
jno
sti
rcll
stc
mov
mov
lret
xchg
push
jle
imul
inc
add
pop
xor
dec
cld
lcall
aas
mov
xchg
test
mov
push
mov
in
in
sbb
mov
sbb
add
bound
xor
xchg
aad
mov
test
inc
outsb
sti
mov
jecxz
or
insl
repz
sbb
je
jnp
pop
leave
sub
test
shrb
dec
sub
pop
pop
aaa
pop
jo
dec
cwtl
lock
lods
jbe
imul
pop
xor
pop
sbb
in
mov
xchg
push
andl
inc
sbb
fs
fcmovnb
jnp
repz
or
adc
popf
and
pop
pop
cmpsb
xor
rcrb
scas
cltd
push
nop
out
aam
fadds
cwtl
mov
add
cmpsl
ret
arpl
xchg
popa
add
push
jno
fidivs
mov
mov
mov
push
movsl
pop
mov
test
loopne
push
bound
lret
test
push
movsl
adc
fcomps
int3
push
mov
imul
in
push
into
mov
sti
insb
push
fwait
mov
add
lret
lds
aad
in
cmc
jp
push
pop
movsl
dec
mov
inc
stos
push
lcall
adc
cmp
sub
sbb
or
jp
push
pop
movsl
dec
mov
inc
sub
mov
add
dec
xor
sbb
or
jp
push
pop
movsl
dec
mov
inc
stos
push
lcall
adc
cmp
sub
in
orb
sbb
pop
cmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cld
jge
xchg
fsubl
lret
mov
jg
outsb
push
pop
xor
inc
sub
sbb
or
cld
sub
fsubl
lods
rcrb
insb
adc
xor
sub
jb
fwait
in
xchg
fdivrl
lods
lret
mov
jl
dec
sub
sub
cmp
pop
cmp
xor
jb
orb
mov
sti
or
pop
xor
dec
fs
cmpsl
outsb
hlt
sahf
dec
sub
fists
shll
sub
dec
mov
push
loope
mov
sub
dec
bound
add
adc
jmp
xchg
rcrl
ret
rorb
mov
push
cmpsl
push
lahf
pushf
or
cld
ror
xchg
pop
mov
push
adc
mov
loope
mov
adc
scas
mov
xor
loop
cs
mov
repz
fs
addr16
xor
bound
out
xor
clc
daa
xor
fcomps
lods
aaa
es
adc
fistpl
in
test
mov
test
ret
pushf
sti
mov
jl
insb
or
sub
sub
sbb
or
cltd
out
xchg
lcall
mov
or
or
ja
pop
mov
bound
cli
cwtl
xchg
mov
mov
loopne
xchg
sahf
push
jnp
jae
push
dec
jno
xor
jne
popw
fwait
ret
in
negl
scas
lods
rcrb
insb
adc
xor
sub
sbb
or
cld
sub
fsubl
lods
rcrb
insb
adc
xor
sub
sbb
or
cld
orb
insb
lcall
int3
pop
adc
iret
xchg
mov
ds
dec
mov
cld
cmpsl
icebp
mov
leave
xchg
outsl
cmp
sahf
int
mov
add
arpl
enter
or
sbb
xchg
xchg
movsb
jne
or
pop
push
xor
push
cwtl
add
push
mov
adc
mov
imul
fdivs
lret
dec
mov
jg
lods
sbb
test
ret
xchg
jle
gs
aam
loopne
hlt
fdiv
push
das
xor
lds
or
adc
dec
mov
fidivl
and
lods
aas
jbe
test
jns
jg
mov
mov
loope
fsubrs
mov
push
xchg
int
pop
imul
inc
xor
mov
push
sbb
adc
mov
sbb
sbb
or
lods
out
repnz
leave
fcmovnb
out
push
mov
sub
into
repz
stos
fiaddl
rol
ss
push
loope
in
sbb
sub
ds
mov
ss
lods
addr16
and
test
push
dec
ret
aam
pop
aaa
out
in
lret
into
sahf
ds
cmpsb
sbb
pop
shrl
mov
dec
jecxz
ret
or
test
lea
xchg
call
sbb
mov
lock
jne
movsb
fnstenv
shl
movb
test
jb
pop
xchg
stos
push
adc
pop
push
repz
xchg
and
bound
push
stos
mov
inc
xchg
aaa
xchg
xchg
cmp
push
cmpsl
fisubs
or
fcmovbe
dec
dec
cmc
lret
push
pusha
sbb
xor
lods
fwait
loope
inc
movsb
cmpsl
in
ja
cld
fwait
jb
inc
lcall
mov
test
aas
hlt
repnz
jne
lds
and
sub
push
clc
mov
sub
call
les
xchg
pop
cmp
pop
push
out
xor
push
lret
out
outsl
pusha
push
sbb
insb
aad
pop
jno
dec
xor
mov
and
and
je
dec
push
pop
push
ret
add
lret
rcll
into
icebp
jb
int
push
xchg
mov
jmp
out
add
test
jl
fdivrl
push
loop
dec
faddl
scas
mov
das
mov
dec
popa
mov
cmpb
mov
in
dec
bound
jae
adc
mov
testb
sub
sbb
loopne
pop
or
loop
xor
call
arpl
jl
sub
push
sub
nop
mov
repz
in
imul
push
xchg
jl
xchg
rcrl
cmc
inc
lds
popf
ss
mov
mov
in
xchg
sub
push
call
xchg
cmp
out
jge
int
cltd
mov
push
pusha
bound
mov
rol
sub
lahf
hlt
fcmovb
jle
dec
fcomp
pusha
aaa
xchg
int
dec
rcll
nop
push
lahf
jno
mov
jp
mov
pop
dec
pop
adc
inc
clc
mov
lahf
mov
aas
adc
decb
aas
xchg
dec
es
insl
cld
lods
xor
leave
add
int
lret
cmp
pop
imul
sti
dec
jno
push
int
into
jmp
cmpsb
cld
jecxz
cmc
mov
push
nop
jno
push
mov
pop
loop
jmp
imul
scas
xchg
pop
addl
leave
or
bound
cld
mov
mov
or
jmp
jmp
sbb
pop
jno
int
mov
pop
lcall
adc
dec
int
mov
das
or
mov
lret
aaa
dec
adc
adc
aam
movsb
or
ds
sub
lahf
jge
xorl
adc
mov
fstpt
in
pop
fistps
add
es
xor
shl
add
cmp
lods
mov
xchg
mov
lock
sub
incl
xchg
xor
js
sub
and
insb
pop
dec
lock
aas
sbb
xlat
in
adc
and
xchg
fmull
lds
mov
push
jg
divb
inc
cmp
jne
in
add
push
ss
mov
in
cmpsl
movsb
push
push
loop
mov
dec
fistpll
add
ret
jns
cld
mov
popf
mov
xchg
adc
mov
and
int3
fcmovnbe
pop
nop
mov
orb
mov
pop
mov
pop
cmp
lret
pop
cwtl
pop
jns
sti
jecxz
and
or
lods
stc
xor
lcall
xor
sub
mov
jb
jp
aas
push
sub
jns
sbb
jae
adc
add
rorb
aam
and
in
and
mov
dec
out
or
in
jbe
stos
mov
ljmp
lret
loope
sbb
xchg
addr16
fwait
dec
mov
aad
add
aam
and
nop
dec
mov
xchg
mov
lea
inc
pop
adc
mov
mov
iret
movsl
mov
jg
fs
scas
iret
mov
insb
lret
jo
dec
mov
push
inc
lret
mov
in
xchg
jecxz
mov
xor
cmp
mov
shl
xchg
stos
loope
or
jecxz
mov
xlat
insb
fldenv
lcall
int3
and
mov
push
mov
leave
and
in
or
mov
movsl
sub
ss
fwait
push
shrl
adc
fdivrp
aam
leave
in
jge
or
mov
dec
test
pop
adc
mov
nop
shll
xor
adc
loopne
in
push
add
and
push
xor
push
out
sub
movsl
sub
mov
mov
mov
mov
stc
call
rorl
cmc
xor
mov
es
in
xor
inc
cmp
pop
xchg
and
mov
xlat
int3
icebp
inc
mov
movsb
nop
scas
mov
pop
or
ficompl
fistl
fistpl
mov
hlt
and
dec
and
popf
jo
lods
and
ljmp
mov
sub
shll
rclb
dec
sbb
adc
rcrl
lret
mov
lea
xchg
imul
fisttpll
pop
pop
xor
testl
mov
cmp
sub
xor
cmc
subb
out
jb
popa
fdiv
push
xchg
cmp
dec
cs
add
jmp
xchg
lret
dec
pop
inc
push
mov
dec
popa
adc
jmp
lods
xchg
movsb
push
nop
add
popa
xchg
sub
in
add
subb
and
jp
inc
cmpsb
leave
and
pushf
int
push
fdivrl
ss
jne
xcrypt-ofb
cmpsl
scas
or
xlat
lds
dec
jno
and
push
loopne
fsubl
xchg
mov
inc
inc
sbb
mov
push
sub
push
lahf
xlat
cmp
shlb
jae
jnp
test
mov
lds
nop
mov
ja
inc
stc
fwait
adc
loopne
mov
dec
or
mov
jnp
dec
mov
mov
out
push
sar
stos
and
xor
and
push
push
lcall
sbb
repz
push
int3
jne
sub
and
out
sbb
in
adc
mov
mulb
int
cmp
shll
mov
jle
mov
mov
jle
adc
add
iret
mov
mov
jle
or
lds
sbb
or
incb
mov
add
in
cmp
sbb
xchg
movl
push
lods
inc
adc
outsb
fnsetpm(287
subb
jl
adc
mov
test
adc
les
rorb
int3
mov
pop
inc
xchg
mov
jo
mov
sub
sahf
add
dec
sarl
xchg
out
popl
push
cmc
adc
repnz
sbb
dec
pop
lods
bound
xchg
mov
fisttps
test
mov
dec
jns
out
or
das
cmp
clc
mov
and
or
stc
lock
incl
sbb
mov
bound
adc
inc
daa
push
mov
mov
push
aad
xor
mov
gs
ret
loope
jnp
lret
cmovp
pop
sub
sbb
xchg
mov
inc
imul
mov
iret
cltd
adc
sbb
mov
pop
js
dec
repz
lahf
fmull
iret
sti
cmc
pushf
or
dec
ljmp
pop
or
outsb
popa
orb
fiadds
xor
aaa
mov
push
dec
test
out
cmc
fnstsw
nop
out
cmpsl
xchg
adc
and
cs
mov
imul
repnz
aas
aam
cwtl
out
or
or
clc
pop
arpl
mov
ja
dec
cld
cld
or
pop
jbe
sub
popa
nop
js
mov
xor
push
mov
xor
sbb
shrl
jl
jge
add
leave
jns
adc
cwtl
and
int
ret
cmp
jp
add
lods
out
aam
cmpsl
subb
sahf
dec
or
popa
pop
mov
in
das
cltd
and
or
js
lock
add
es
xchg
mov
in
cmp
fs
xchg
les
popa
mov
push
dec
push
push
mov
test
fsubrp
mov
xor
out
add
scas
pop
pop
aaa
imul
jle
ljmp
mov
sarl
je
insl
stos
push
movsl
cmp
stc
mov
fstpt
and
push
push
adc
jae
sub
xlat
hlt
adc
ja
mov
and
leave
cmp
test
pop
jp
inc
sbb
out
test
cmp
jmp
inc
sub
fdivrs
xor
mov
lods
xchg
scas
cwtl
dec
jp
or
or
xor
movsb
imul
or
das
push
cli
sbb
fidivrl
xchg
movsb
dec
lahf
cli
scas
cmp
pop
les
cs
push
ret
mov
mov
inc
sbb
push
imul
bnd
fistl
ds
xor
outsb
dec
mov
insb
imul
lods
sbb
dec
cli
sub
mov
fstl
xlat
xchg
or
cltd
dec
dec
outsl
push
sbb
mov
add
scas
fidivrs
imul
js
das
out
ret
into
adc
xor
inc
pop
jae
ja
cmpsb
cmp
inc
add
mov
jge
mov
pop
mov
mov
pop
repz
and
fdivrl
fcompl
xor
fisttps
push
mov
scas
in
pop
xchg
push
adc
sbb
loop
inc
pop
std
jle
xchg
xor
xrelease
ret
sti
imull
cmp
jg
push
stos
lds
cmpl
mov
rcr
mov
popa
lds
inc
mov
out
imul
mov
andl
push
aad
mov
arpl
jp
daa
push
repz
pop
mov
ss
test
icebp
les
movsl
jl
aam
and
ja
notb
into
fisubrl
cli
jmp
or
pop
das
add
flds
out
shlb
pop
and
pop
mov
imul
je
mov
mov
mov
punpckhbw
fiadds
cwtl
addb
addr16
ret
mov
ficomps
movsl
inc
add
or
cmp
repz
movsl
add
add
mov
test
cld
pop
int3
sub
jnp
add
mov
mov
cld
add
shl
cmpsb
or
fcompl
cmp
lods
sbb
push
addr16
pop
aad
je
xchg
lock
les
mov
popa
add
add
loop
lcall
subl
fildll
test
xchg
mov
icebp
add
ja
mov
ret
adc
int3
lcall
xchg
subl
int3
or
scas
jne
icebp
nop
nop
add
xor
in
jecxz
test
jl
sbb
sbb
sbb
ljmp
fwait
inc
push
insb
into
cmc
in
insl
mov
inc
jne
dec
sti
subl
xchg
xchg
push
jb
bound
mov
test
aad
pushf
je
cmpsb
ret
leave
outsb
pop
dec
cmp
mov
push
mov
lods
sub
dec
cltd
jno
lock
push
pop
iret
lods
test
xor
int3
shll
ficompl
int
and
xor
add
or
jecxz
push
mov
mov
push
test
call
movsb
pushf
outsl
dec
fimuls
lds
mov
inc
dec
fcomp
dec
scas
sub
pop
pusha
or
pusha
pushf
nop
aaa
lcall
sbb
cmpsb
jmp
sahf
ss
lret
sbb
mov
cmp
pop
fimull
dec
add
push
or
mov
or
popf
inc
push
cmp
test
sahf
sub
add
mov
rol
dec
int
lahf
or
dec
push
test
xor
add
loopne
add
inc
aaa
push
xchg
mov
shlb
pushf
int3
jns
mov
cmp
fwait
sti
inc
std
sahf
mov
jns
adc
bound
movb
cli
adc
cmp
pop
jmp
mov
xor
cs
dec
adc
rcrb
push
mov
mov
mov
pop
arpl
fstpt
dec
push
xchg
pushf
push
adc
ror
cmp
or
ljmp
sti
test
rorl
xchg
mov
pop
call
adc
or
cmp
jmp
mov
jno
xor
fldl
mov
xchg
cmp
lret
mov
mov
jge
pop
xor
test
inc
aas
lock
int3
cli
lahf
mov
xor
adc
testl
sti
pusha
daa
fldt
fstpt
aam
lret
and
shl
js
loopne
movsb
pop
aas
ja
inc
insb
xchg
leave
shr
push
incb
sub
scas
in
dec
mov
enter
mov
cld
sarb
fildll
and
fs
sbb
sub
daa
pop
pop
sbb
cli
inc
adc
adc
sbb
ret
test
popf
mov
lret
mov
push
lds
sbb
ret
daa
mov
or
push
inc
pop
mov
lcall
mov
fwait
imull
inc
negl
int
test
mov
mov
and
or
sub
adc
cli
dec
imull
ja
cmpsl
clc
adcb
or
sub
sub
adc
dec
jns
or
scas
or
ret
xor
xchg
mov
inc
sahf
daa
aad
mov
out
push
sahf
int
adc
sub
mov
cld
push
loope
cmp
xchg
ss
xor
mov
popl
push
pop
aad
adc
jmp
adc
cld
pop
push
adc
out
mov
icebp
push
cmp
gs
add
test
mov
add
pop
mov
into
mov
pop
cmc
and
pop
or
mov
pop
ja
push
mov
and
sbbb
pop
inc
ffreep
or
cmpsb
subl
popa
xchg
push
pop
loope
sbb
xchg
pop
repz
push
push
inc
push
loop
dec
clc
aad
dec
inc
push
aaa
scas
mov
push
xchg
mov
xchg
adcl
dec
out
lods
mov
lahf
mov
xor
dec
jle
lock
cmp
pop
scas
mov
out
pop
scas
leave
inc
cltd
clc
inc
add
and
push
aad
cmp
mov
jnp
and
fdiv
mov
lret
add
out
and
push
mov
pop
jb
bound
lods
cltd
pop
scas
stos
testl
xor
ljmp
fs
ja
dec
jmp
jmp
cld
xor
push
dec
in
pop
flds
cmp
pop
scas
mov
leave
pop
jmp
jmp
daa
adc
stos
xchg
out
ret
dec
and
cmpsb
push
jb
push
push
xor
int
cli
jae
out
js
ds
pop
std
mov
mov
lret
mov
push
pop
fwait
test
inc
mov
fsubrl
and
or
pop
scas
mov
orl
jno
shll
mov
mov
mov
fs
gs
pop
push
sbb
cmp
and
repz
sbb
inc
mov
jns
jecxz
sub
frstor
int3
mov
nop
push
rcrb
mov
sub
sub
add
daa
ds
popf
stos
adc
add
cmp
push
xor
insl
mov
int
pop
popf
and
push
xchg
push
pop
mov
icebp
je
ret
int
andb
test
push
push
dec
sub
popa
into
fldl
loopne
sub
popf
fsub
fs
sbb
bound
xchg
xchg
jg
mov
es
test
xor
popf
push
xor
add
pop
adc
imul
rclb
repz
fs
push
push
cmpsl
rclb
mov
or
cmc
mov
pop
xchg
dec
es
jb
pop
adc
les
pop
dec
inc
pusha
adc
rorl
leave
lcall
pop
shlb
mov
sub
div
test
jl
dec
pop
stc
daa
fcom
pop
addr16
pop
faddl
bound
popa
jnp
mov
fcmovb
popa
or
aaa
jns
jl
push
sbb
loope
push
dec
adc
pop
adc
xchg
sbb
int3
pop
test
fidivrs
lds
bound
mov
dec
sub
call
pop
sub
or
pusha
in
adc
fdivrs
push
fwait
roll
les
sbb
out
mov
add
mov
mov
lea
xchg
jbe
dec
inc
xor
fsubrl
mov
sbb
notl
cs
stos
push
lcall
ljmp
mov
pop
or
xorl
les
test
out
pop
mov
xchg
mov
int3
fwait
jb
pop
ret
xor
jmp
cli
jg
repz
jge
ja
push
popa
les
popa
push
fisubrl
mov
mov
cltd
nop
stos
xchg
mov
jb
push
sub
cli
mov
sub
pop
icebp
hlt
adcb
divl
loope
movsb
js
fildll
xor
scas
mov
push
adc
add
ret
shll
pop
sub
mov
xlat
xor
cmp
orb
testb
mov
aas
inc
mov
dec
xchg
jmp
cld
shll
test
cld
cmp
inc
icebp
mov
xchg
stos
cmp
gs
scas
sbbl
popa
mov
mov
pop
dec
cld
cmp
call
arpl
inc
cltd
or
fstl
push
int
or
xor
dec
js
aam
in
jmp
out
dec
test
pop
fcmovnb
cmp
push
fcomip
sub
adc
push
mov
clc
cs
cmp
dec
sub
cmc
xor
ds
stos
mov
movsl
sub
cmpsb
mov
push
mov
sahf
or
clc
rcll
lea
cmc
mov
mov
xchg
jb
push
ss
fistl
fstl
repnz
and
ljmp
aam
dec
stos
jl
xchg
xchg
mov
in
adc
gs
jmp
adc
fucom
cmp
push
pop
inc
sbb
dec
pop
sti
enter
lods
sahf
test
std
cld
rorl
jo
loope
stos
xor
fstps
ss
aas
adc
mov
jae
test
mov
xchg
pop
mov
sahf
pop
jp
mov
sub
aad
sarb
cld
jne
inc
inc
jno
xchg
inc
xchg
sbb
jns
out
movsl
mov
xor
push
insl
in
rcll
xchg
sbb
imul
cmp
ljmp
mov
xchg
ss
or
mov
cmp
mov
int3
into
mov
shlb
test
push
add
daa
out
and
jbe
inc
inc
pop
mov
xor
sub
shl
out
lea
rcl
sbb
push
mov
add
mov
imul
inc
cmc
lret
pop
rolb
nop
daa
stc
out
lds
fldcw
cmp
jp
mov
es
push
xchg
out
ja
loop
gs
sti
aam
sub
cmp
add
or
stc
sti
popf
cmpsl
ljmp
notl
xor
pop
aad
int
test
sbb
rolb
xchg
and
scas
int
or
jnp
fwait
mov
push
jg
stc
test
ljmp
leave
aad
jecxz
icebp
fiadds
jne
mov
test
push
xchg
mov
sbb
jecxz
out
lahf
pushf
dec
mov
inc
jle
test
mov
mov
xchg
inc
cli
sbbl
sub
ja
int3
iret
in
pusha
hlt
mov
rol
test
repz
rclb
mov
adc
inc
xchg
xchg
jecxz
int3
mov
ret
pushf
loop
bnd
insb
adc
xor
sub
sbb
or
cld
sub
fsubl
lods
rcrb
insb
adc
xor
sub
sbb
or
cld
sub
fsubl
lods
rcrb
insb
adc
xor
sub
sbb
sub
fsubl
lods
rcrb
or
addl
mov
dec
lret
in
hlt
lea
xorb
pop
mov
mov
ret
and
add
adc
pusha
inc
jo
push
bound
mov
mov
icebp
rol
loop
mov
add
adc
adc
popa
jno,pn
inc
bound
mov
mov
icebp
rol
loop
repnz
xor
pusha
push
je
add
sbb
shl
mov
int
shll
imul
addr16
jmp
dec
insl
pop
in
push
jmp
cmp
hlt
shlb
loopne
push
dec
ljmp
pop
aaa
pushf
push
pushf
inc
mov
and
mov
mov
lock
lret
dec
adc
push
jnp
fists
push
ret
lret
mov
mov
popa
fst
and
imul
add
and
testb
repnz
or
pop
rorl
pop
push
fstl
xor
sbb
bound
pop
or
cmp
cmp
pop
mov
adc
inc
je
pushf
daa
adc
bound
incb
xchg
mov
ret
shl
repnz
xor
add
adc
popa
inc
jno
inc
bound
aad
cmc
shr
mov
xchg
mov
dec
jnp
adc
jne
adc
sbb
div
fnstenv
rorl
imul
push
sub
push
adc
sbb
loop
mov
mov
loop
repnz
xor
add
adc
popa
inc
jno
inc
bound
mov
mov
icebp
rol
loop
repnz
xor
add
adc
popa
inc
jno
inc
bound
mov
dec
ret
jo
mov
cmp
ss
mov
pushf
rcrb
cmc
and
gs
cmp
scas
mov
mov
cwtl
xchg
sti
and
jae
repz
adc
movsb
test
int
addl
push
stos
test
jge
sahf
stos
jmp
into
movsl
mov
or
jmp
push
push
inc
push
int3
sub
dec
and
xchg
lcall
out
push
push
push
inc
sahf
iret
sbb
inc
sbb
rcrl
imul
mov
mov
in
sbb
lock
out
es
lahf
and
pusha
inc
iret
daa
and
movsb
ljmp
iret
std
or
std
fstl
int
xchg
xor
mov
outsb
mov
xor
sub
or
sbb
das
mov
xor
sub
sub
push
ret
mov
imul
into
push
scas
push
mov
mov
xchg
icebp
mov
test
fs
and
cmp
mov
inc
xor
psubw
mov
cmc
mov
aas
push
outsl
and
jo
dec
ret
push
cmp
sub
lret
cld
popf
xchg
xchg
les
lds
sbb
andb
out
insb
cmp
mov
pusha
xor
daa
int
out
mov
out
cmp
es
push
lds
push
and
mov
and
jge
sbb
notl
and
outsb
testb
inc
jecxz
cmpsb
dec
imul
xchg
sbb
mov
or
lods
mov
mov
ds
loop
stos
into
insl
sub
dec
or
int3
sbb
jbe
hlt
dec
mov
pop
loopne
lahf
loopne
or
push
jnp
xchg
cmp
arpl
jo
inc
fs
js
ficoms
negb
cmpsb
fists
repz
cmp
jae
xor
stc
push
jl
test
cld
stos
scas
je
or
lock
dec
fwait
mov
int3
pushf
jns
fstpt
cmp
insb
jns
pop
test
push
rorl
sbb
and
or
ljmp
stos
shrl
out
out
sbb
xchg
cli
out
and
sub
stos
ret
je
mov
pop
cmovno
xchg
or
push
or
addps
cmp
or
pop
sub
jbe
jmp
jo
fld
pushf
inc
cltd
outsl
mov
out
cmp
add
jmp
sar
loope
sub
cwtl
fists
or
mov
adc
das
out
subl
cmp
sahf
flds
or
je
mov
pop
xlat
cli
lods
or
adc
les
mov
inc
dec
js
clc
pop
repz
cmp
pop
movsb
and
cli
and
insb
add
int
lock
imul
lea
fcomp
dec
xchg
push
sbb
stos
in
mov
xor
or
xchg
ror
ficomps
cmpsb
test
decb
jae
mov
mov
xor
jle
addps
pop
or
in
cmp
push
xor
faddl
decb
fsubrl
xchg
and
popf
ljmp
out
in
mov
cli
pushf
mov
push
movsb
xchg
popf
push
mov
ja
fadds
fcmovne
mov
dec
jge
dec
cmc
push
xor
pop
fcoml
lret
pop
clc
sti
sbb
dec
xchg
lahf
xor
dec
xor
rorb
and
cld
pop
push
test
out
data16
dec
and
lahf
stc
jnp
les
jae
cmp
mov
mov
out
shlb
fs
inc
sub
outsl
sub
and
cmp
and
push
and
inc
jbe
mov
xchg
cmp
xchg
aad
out
or
out
dec
xchg
mov
push
push
mov
adc
push
rclb
pop
leave
add
ja
lret
int3
mov
negl
or
xlat
fisubrl
jl
cmp
aam
test
jl
fildl
dec
mov
mov
dec
scas
xchg
inc
mov
hlt
jo
push
movsl
repz
xchg
call
dec
lock
add
push
add
or
cmp
cld
enter
xorl
xor
jl
jl
push
adc
iret
test
inc
pop
lods
int
mov
shlb
or
test
xchg
dec
jp
or
push
dec
or
mov
lods
cmpsl
subl
sti
pusha
and
jl
scas
dec
mov
insb
push
aas
dec
stos
ficompl
movl
inc
inc
negb
mov
dec
add
cmp
sbb
xor
mov
dec
add
mov
imul
xchg
ret
fidivrs
inc
mov
sbb
sahf
lds
mov
cld
mov
mov
sbb
inc
fmuls
jne
ret
aaa
lds
dec
pop
stos
add
scas
repnz
ror
adc
push
dec
popf
fistps
sahf
mov
mov
adc
stc
inc
das
fs
jbe
subl
jmp
add
gs
or
mov
jp
and
stos
lahf
dec
cld
repnz
cmp
fsubrl
dec
adc
je
fdiv
mov
int3
mov
mov
mov
adc
cli
push
pop
cmp
push
pop
inc
orl
repnz
or
fwait
sbb
iret
pushf
sub
adc
imul
xchg
jmp
test
mov
jnp
inc
mov
sub
lock
arpl
ljmp
and
mov
sbb
sub
cmp
pop
addr16
inc
and
and
push
cmpsb
jno
push
push
add
pop
jns
repz
data16
ds
fcoms
icebp
push
lret
mov
xchg
loop
lahf
popf
lret
or
loopne
mov
flds
xor
outsl
adc
insb
adcw
push
testl
or
test
fisubl
push
divl
push
popa
adc
add
mov
push
ret
add
xor
xchg
mov
push
pop
test
mov
fildl
xchg
roll
xchg
sub
test
fdivs
xchg
lods
movsl
leave
dec
xor
fs
outsb
pop
inc
scas
and
jne
cmp
mov
test
pop
shl
sti
insb
lret
xchg
into
xchg
pusha
cmp
sub
stos
push
aas
fists
sub
cwtl
push
and
jl
mov
push
call
sub
adc
jle
shl
xlat
cli
xchg
xor
sub
push
mov
mov
inc
dec
adcl
cmc
nop
negl
aas
out
mov
sub
clc
out
push
push
loope
add
dec
lcall
bound
ret
outsb
aaa
mov
sahf
fsubrl
imul
in
ds
pop
inc
dec
insl
enter
fs
push
lcall
cmp
out
adc
call
jmp
pop
fnstsw
not
mov
jbe
or
aaa
fs
jo
cmc
inc
arpl
aas
or
pop
dec
pop
movsb
fwait
inc
dec
sub
sub
inc
push
xchg
cli
dec
cmpsb
pop
repz
movd
aad
jno
dec
mov
stos
loope
mov
int3
or
push
dec
js
ret
pop
pop
adc
push
xor
cs
cli
shlb
push
and
int
cmp
daa
rcrb
dec
fs
pop
push
and
clc
mov
mov
xchg
xchg
dec
sub
mov
mov
push
mov
mov
fdivs
stos
mov
push
les
mov
cmp
xchg
ljmp
pop
add
xlat
mov
lahf
repnz
sub
in
cmp
jecxz
jne
inc
aas
jge
clc
xchg
stos
shrl
lcall
hlt
cmp
pop
adc
adc
adc
cmc
adcb
xor
enter
stos
insl
mov
sbb
add
adc
xchg
fs
jmp
test
push
loop
adc
add
mov
mov
sarl
shrl
call
out
sub
lea
cltd
sub
popw
xor
fst
mov
add
mov
push
leave
sti
subb
mov
imul
sub
add
dec
or
leave
pushf
es
jnp
mov
mov
mov
inc
jns
sub
cs
and
and
loope
push
fsin
xchg
into
out
cli
cmpsl
mov
xor
adc
lret
add
xor
cmp
rcr
test
icebp
in
push
stos
enter
push
xchg
test
pop
insl
dec
outsb
imul
sub
sahf
stc
mov
aaa
lock
or
into
aam
cmp
jecxz
test
mov
out
pop
xor
pop
pop
fmuls
ret
adc
repnz
jno
mov
sbbb
sbb
sbb
xchg
pushf
cltd
cmp
dec
cmp
add
pop
scas
repnz
xor
mov
fistl
es
mov
arpl
lock
test
add
push
rcr
jns
fbld
pop
out
pop
clc
dec
shr
sub
mov
add
repnz
xchg
call
mov
jno
out
jmp
jb
leave
and
push
mov
mov
nopl
cli
pusha
jnp
jae
and
sub
lcall
int3
push
repnz
mov
cmc
imul
lcall
aaa
mov
jp
jg
inc
cmp
outsb
jmp
xchg
outsl
incb
or
ss
cld
push
pop
jmp
sub
lds
or
out
pop
out
adc
pop
pop
sub
cmpsb
fs
xor
sbb
in
xor
pop
jl
xchg
fdiv
in
cmc
das
add
xchg
or
and
arpl
xor
and
ret
sub
mov
xor
add
mov
xchg
jne
mov
xor
scas
xchg
jns
mov
stos
jne
stos
dec
xorps
push
fstl
pushf
pop
inc
jecxz
jb
insb
sub
and
loop
arpl
add
dec
out
clc
flds
mov
fstl
pop
out
insl
xor
xor
repz
arpl
dec
mov
add
js
setae
mov
and
cltd
outsl
xchg
int3
lcall
xchg
xchg
in
lock
xor
push
or
in
adc
mov
pop
cmp
lods
sub
pop
mov
out
cmp
ret
call
enter
icebp
in
repz
mov
jmp
dec
jae
mov
mov
loop
jb
push
mov
mov
or
mov
sahf
push
cltd
jecxz
mov
clc
xor
push
cmc
call
mov
jne
fcoms
mov
and
mov
test
xchg
mov
push
add
push
ror
jb
lea
clc
mov
xor
cmp
pop
and
dec
imul
sub
jg
das
fidivs
inc
ja
sbb
cmc
pop
std
je
jmp
mov
adc
mov
mov
lea
dec
fisttps
and
push
xor
xor
cmp
std
nop
test
enter
xor
out
add
adc
mov
scas
je
shl
shrb
fcos
pop
mov
or
jle
add
hlt
daa
lahf
xor
jle
cltd
dec
jb
inc
jb
roll
ljmp
dec
inc
out
xchg
popf
sub
dec
sub
pushf
dec
mov
adc
pop
pop
aaa
jnp
add
jecxz
stc
test
xchg
scas
dec
xlat
in
lahf
shrl
mov
pushf
sub
lock
ss
xlat
sbb
xchg
push
ds
outsb
or
cs
pusha
push
adc
clc
pop
push
or
call
scas
dec
call
cli
cmp
dec
jecxz
adc
mov
paddw
xchg
xlat
insl
lcall
outsl
dec
lret
or
pop
and
aad
leave
clc
inc
xlat
add
mov
aad
fsubrs
out
shll
mov
jb
movsb
stos
scas
stc
add
inc
push
push
lahf
xchg
outsb
scas
enter
enter
adc
or
inc
pop
pop
adc
movsl
pusha
addb
pop
mov
jg
es
dec
stos
cli
cwtl
mov
or
shll
mov
sub
jns
cmp
cmpsb
and
and
out
or
sar
pop
mov
add
fcoms
mulb
xor
push
cwtl
nop
lods
movsb
add
and
or
bound
pop
cmp
pop
sbbl
jo
movsb
pusha
add
push
enter
popa
jl
jl
pop
f2xm1
cmp
adc
fs
je
and
xor
and
mov
mov
xchg
ret
imul
jbe
and
adc
adc
dec
add
daa
repz
arpl
test
repz
adc
add
fidivrl
mov
fs
out
or
lea
fwait
pop
mov
sub
and
outsb
lcall
clc
sub
jbe
ficoml
lret
arpl
fildl
sarl
test
pusha
sbb
jbe
jecxz
push
imul
filds
rcll
out
pop
daa
subl
and
rcrl
mov
xchg
addb
fiaddl
and
sbb
popa
lea
test
movsb
enter
xlat
int3
push
ret
xchg
mov
movsl
push
daa
testb
dec
jle
pop
inc
adc
lds
repnz
pop
mov
cmp
push
add
ret
in
adc
addl
mov
sbb
dec
jnp
mov
jmp
jb
lea
xor
loope
sub
stc
pushf
cmp
push
pop
mov
andb
add
stc
xchg
xchg
arpl
aam
fs
cmp
jecxz
sti
cs
test
aam
rorb
push
lret
lret
pop
mov
ret
lcall
inc
fs
ja
mov
inc
loop
sarb
test
jg
lret
jmp
and
xchg
or
rcrl
mov
scas
sbb
cwtl
dec
push
fcmovne
mov
scas
fs
dec
push
and
sub
sub
inc
out
dec
ljmp
repz
sbb
ret
pop
cmp
mov
mov
out
call
lret
gs
sub
xchg
imul
jmp
inc
and
icebp
push
cld
pop
or
or
pop
fisttpl
jge
push
lods
xchg
mov
out
addr16
pop
dec
add
add
sub
fsts
lret
mov
ficoms
dec
xchg
popf
out
fisttpll
mov
in
insl
cwtl
cli
xor
mov
or
pop
cltd
xchg
inc
xchg
and
ds
pushf
push
ret
aam
cmp
or
sbb
mov
dec
insl
jno
xchg
jae
push
jge
ljmp
jg
jle
adc
push
xchg
push
out
jge
ljmp
call
cld
fsubr
jmp
adc
or
mov
mov
add
lods
pop
jl
add
cltd
mov
adc
cmpsb
icebp
mov
int
adc
xchg
jbe
dec
pop
and
loop
lret
sbb
iret
mov
ds
mov
dec
adc
setl
cmc
pop
fistl
add
das
or
mov
in
ss
jno
mov
push
add
loope
add
mov
add
push
or
scas
cmp
shll
inc
or
movsb
outsl
fcoms
aaa
pop
stc
sbb
xchg
sub
xchg
mov
cld
sbb
leave
das
dec
push
das
daa
push
push
dec
jo
or
push
popa
mov
ljmp
dec
push
int
jp
dec
mov
js
fsqrt
sub
daa
ljmp
jbe
xor
in
or
mov
out
and
fstpl
mov
jns
adc
xchg
lds
dec
cwtl
pop
pop
popf
xchg
mov
test
scas
lods
mov
jns
out
add
sub
shrb
jge
sbb
pop
pop
cmp
push
cmpsb
enter
jno
notl
rcrl
mov
pop
sub
xchg
cli
insb
lods
insl
mov
adc
aaa
adc
or
aad
loope
lea
mov
in
mov
aaa
icebp
loopne
inc
mov
add
pop
lods
imul
sub
test
fists
int
mov
in
insb
jae
mov
aam
test
ljmp
inc
pusha
lods
or
daa
mov
or
leave
mov
fsubrs
jb
xchg
mov
xor
sbb
sub
dec
outsb
cmpsl
add
loopne
adc
stos
aas
mov
scas
loopne
lahf
push
insl
jns
mov
jbe
jo
fmull
dec
push
loop
xchg
popl
and
mov
rcll
gs
mov
adc
add
jp
mov
test
cltd
int3
mov
pusha
popf
add
xor
sti
sbb
pop
jbe
int
pop
imul
shrl
sub
test
xchg
inc
jg
fcmovb
mov
in
decb
movsb
icebp
or
push
fsubl
xchg
jno
pusha
btcl
loope
xor
pushf
mov
sti
aaa
repnz
rcrb
cmpsl
xor
dec
xchg
inc
roll
out
adc
aam
add
xchg
add
xor
xchg
shrl
fdivs
cwtl
jne
or
lods
adc
xor
shll
sub
push
jmp
out
lods
popa
lahf
cld
insl
shl
adc
xchg
aaa
pop
in
cmpb
dec
hlt
cmp
mov
push
dec
stos
mov
imul
or
daa
pushf
mov
adc
pop
mov
pop
or
in
cmp
mov
lcall
push
jge
cmpsb
sbb
mov
es
push
mov
adc
dec
pop
mov
cmp
shll
sbb
pop
xor
popa
div
inc
lret
sbb
out
dec
or
xor
lret
push
imul
push
dec
push
push
ficompl
cli
jge
pop
pushf
mov
inc
rcr
dec
call
in
mov
sbb
inc
call
push
or
jle
or
lret
and
ja
aas
or
and
pop
enter
mov
or
add
push
in
daa
pop
aas
lds
xor
cmp
sti
jns
sub
sti
fdivl
std
mov
outsl
mov
inc
or
jno
seta
push
xchg
xor
or
dec
xor
inc
sbb
pop
xor
fidivs
inc
jecxz
movsb
sbbb
int3
lcall
popa
and
cmp
xor
ss
inc
push
stos
sbb
mov
sbb
xchg
loope
mov
xchg
adc
mov
popa
imul
lods
add
sub
inc
incl
pop
push
jbe
inc
lret
cli
dec
enter
dec
outsl
mov
cmp
sbb
mov
xor
add
mov
xchg
loopne
pop
cmpsb
jle
cld
xchg
push
mov
sbb
rorl
pushf
mov
mov
out
mov
adc
adc
fs
push
add
add
mov
fcompl
mov
dec
aas
inc
mov
xor
mov
mov
shr
mov
leave
outsl
fnstenv
jge
add
aaa
je
test
cltd
and
pop
or
movntps
pop
mov
xchg
fldl
dec
int
add
inc
fldl
mov
add
rcll
insl
inc
cmp
pop
repnz
mov
lds
int
xor
fisttps
sbb
mov
adc
sub
mov
int3
les
insb
add
jne
inc
push
push
lahf
outsb
icebp
cmp
sahf
shrl
sub
or
lret
sbb
push
add
pop
jg
repnz
js
clc
pop
jb
add
add
xor
inc
int
test
arpl
jo
stos
data16
dec
mov
push
xchg
mov
rol
jg
mov
jge
or
sub
sbb
jmp
mov
or
cmp
xor
nop
sbb
or
mov
lock
and
mov
out
dec
or
xlat
mov
push
ja
dec
js
and
stos
cmp
push
jl
or
incl
push
inc
add
movsbl
insb
or
jno
popa
mov
outsl
incb
sub
movsb
jge
dec
xchg
enter
sti
dec
inc
stc
dec
jnp
jl
jbe
mov
inc
xchg
cli
sbb
icebp
jns
clc
pop
fisubrl
popa
cmpsl
leave
ss
movsb
xchg
jo
pop
mov
mov
fwait
pop
sub
loopne
lcall
daa
rcr
scas
pop
hlt
jl
test
ds
sub
dec
cmp
mov
dec
mov
nop
and
popf
mov
in
push
mov
jge
sub
xor
push
xchg
fldenv
icebp
rol
loop
repnz
xor
add
adc
popa
inc
jno
inc
bound
mov
mov
icebp
rol
loop
repnz
xor
add
adc
popa
inc
jno
inc
bound
mov
mov
icebp
rol
loop
repnz
xor
add
adc
popa
inc
jno
inc
bound
mov
mov
icebp
rol
loop
repnz
xor
push
lret
mov
jp
xchg
shll
shlb
add
arpl
adc
jne
test
xchg
jecxz
ret
mov
lds
cmpl
xorl
ljmp
mov
stc
mov
in
jae
push
inc
sbb
outsb
cmp
adc
addl
loopne
repnz
pop
mov
push
fwait
scas
lcall
fcomps
and
repz
outsb
test
call
or
sub
dec
mov
and
popl
jmp
jle
jecxz
lcall
in
addl
nop
add
push
mov
inc
repz
mov
or
jnp
orl
cli
or
adc
leave
mov
jo
push
ljmp
divb
nop
sub
cmc
jnp
pushf
add
cltd
push
and
sti
mov
inc
jecxz
pushf
mov
push
subb
jae
test
mov
inc
sub
repz
xor
aam
mov
aas
lcall
xor
cmp
adc
xchg
mov
cmpsl
fwait
xlat
mov
mov
pop
inc
arpl
push
sub
and
data16
shl
mov
rcll
mov
cltd
jno
arpl
inc
ss
push
adc
add
lcall
lret
mov
xor
add
inc
xor
adc
jne
test
xchg
shll
mov
cmc
jae
arpl
xor
push
adc
jne
test
inc
mov
stos
cltd
pushf
pop
imulb
fstpt
lods
inc
je
daa
xchg
inc
push
icebp
scas
lcall
and
add
fstpt
repnz
imul
cltd
nop
push
mov
out
xchg
in
adc
push
sti
test
jae
shl
and
mov
out
mov
mov
cwtl
and
mull
xchg
inc
add
test
sub
arpl
and
adc
fsubs
mov
xor
pop
notb
rcrb
mov
cmpsb
push
or
aas
xor
mov
sbb
cmp
sbb
lods
push
arpl
xchg
insl
or
push
fmul
sub
inc
scas
inc
popf
lahf
pop
xor
popa
mov
jmp
jle
test
dec
aas
pop
and
bnd
shrb
xchg
xchg
lock
push
loope
gs
jl
jmp
sub
inc
xor
imul
in
cmp
xchg
loope
and
loope
jae
imul
sahf
or
inc
or
in
rclb
or
mov
in
pusha
push
sarl
jg
add
fsts
mov
enter
cmpsb
rorl
adc
aas
xchg
cmp
cmp
ja
sub
or
pop
ficoml
hlt
push
adc
icebp
std
add
repnz
ds
xchg
push
xchg
jp
jno
sbb
jle
xchg
jecxz
mov
or
cmp
in
xor
cmp
aad
push
jl
rorb
sub
pop
cmp
decb
cmp
cwtl
sbb
sub
sbb
aas
or
rcll
scas
cmc
shll
jo
dec
pop
mov
test
add
fists
in
outsl
scas
ror
xor
dec
sub
jnp
fisubs
sub
pop
outsl
inc
daa
test
loope
repz
int
sub
push
push
or
and
mov
into
push
orl
dec
ja
sbb
xchg
int3
pop
and
xor
sbb
jno
mov
xor
adc
jp
xor
and
dec
sbb
inc
jp
test
xor
lahf
pop
cld
dec
push
cmpsl
xchg
push
js
test
pushf
aam
test
mov
out
lea
stc
ret
jno
mov
jge
cltd
adc
xor
pop
filds
jnp
dec
dec
out
lea
add
xor
inc
sub
mov
xorb
mov
sar
xchg
fwait
rorl
shlb
fnstcw
dec
push
push
sbb
jle
sub
jl
or
test
sbb
mov
push
cmpsl
mov
rcl
test
adc
jge
rclb
dec
lahf
mov
in
lret
push
out
xor
lods
mov
out
shr
or
rclb
cmp
xchg
loope
fldln2
push
cld
je
or
add
mov
mov
setb
add
iret
xchg
dec
inc
jo
pop
int
xor
cmp
fst
push
dec
jecxz
adc
jnp
xchg
xchg
or
std
sarl
mov
fsts
dec
ja
sbb
repnz
cmp
out
pop
gs
and
dec
or
dec
dec
mov
xor
gs
cli
enter
cmp
mov
adc
jno
fnstsw
ljmp
ljmp
xchg
in
addr16
sbb
aam
mov
cs
loop
xor
mov
movsb
xor
mov
test
pop
loop
add
mov
negl
and
test
pushf
clc
movsl
jne
out
mov
aad
xor
nop
xchg
pop
int
dec
inc
mov
xchg
push
sub
sub
sbb
out
in
xchg
mov
cld
sbb
sub
out
out
mov
or
adc
loopne
rclb
inc
jne
mov
mov
mov
lea
mov
mov
stos
add
sbb
xchg
xor
sub
xchg
cmpsb
sbb
lock
sub
mov
and
dec
mov
ficoml
hlt
xchg
sbb
xor
xor
fnsave
add
adc
add
insl
xchg
sub
jns
daa
mov
push
push
push
cmp
pop
mov
daa
pop
fistpll
insl
dec
pop
insb
mov
or
ss
mulb
mov
rcrl
sahf
fxch
and
xchg
sahf
test
das
push
adc
push
dec
movsb
add
clc
dec
mov
sub
aad
pop
inc
pop
clc
loopne
ss
adc
in
lcall
dec
pushl
addr16
int
jg
inc
xchg
pop
and
arpl
fiadds
popf
push
adc
in
adc
in
pop
ljmp
adc
jmp
cmc
mov
sarb
insl
scas
xor
pop
clc
push
add
and
fmul
mov
fldl
leave
adc
mov
je
mov
icebp
jbe
jno
repnz
shll
mov
movsl
push
les
mov
inc
push
je
or
shlb
or
shrl
and
sarl
mov
cmp
shll
mov
daa
out
xor
call
ror
add
sarb
sbb
mov
xchg
popa
test
aas
mov
lock
mov
jecxz
in
push
mov
jns
adc
out
sub
mov
pop
mov
movsl
sbb
lahf
testl
sbb
xor
imul
sub
lahf
and
ret
inc
mov
jge
pusha
push
mov
aas
pop
xor
js
adc
sar
ret
insl
push
popa
jle
insb
xlat
dec
imul
ficoms
ror
xlat
mov
cwtl
lods
in
loop
ds
push
lock
and
cmp
sbb
inc
ljmp
stc
stc
std
mov
push
adcl
push
je
mov
xchg
lock
fstpt
cmp
rorb
xlat
addr16
cwtl
cmc
cmp
pop
mov
xor
cmc
mov
imul
sub
out
dec
dec
idiv
jmp
mov
jne
ror
mov
or
pushf
sbb
and
add
lret
sub
dec
ja
test
xor
aad
pushf
push
adc
dec
pop
jb
push
jnp
in
sarl
js
xor
in
jbe
mov
pop
outsb
repnz
in
mov
xchg
dec
test
mov
loop
js
jo
or
jl
cmp
and
pushf
push
les
sti
mov
mov
jo
jo
fstpt
jle
xchg
adc
cld
inc
shlb
mov
sub
shll
insb
or
xchg
push
test
sahf
cmpsb
stos
xchg
mov
mov
sub
mov
mov
lds
insl
add
adc
data16
xchg
nop
pop
mov
fsubrs
inc
add
loope
pop
sbb
pop
loopne
mov
add
jbe
bound
push
inc
gs
xchg
sbb
cmp
jl
push
inc
movsl
jmp
fcoml
or
mov
out
sahf
and
cmpb
ss
addl
add
ret
repnz
mov
xor
and
sbb
test
cmp
xor
cld
bound
mov
add
mov
popf
test
mov
in
cmp
out
enter
mov
xchg
adc
jecxz
leave
rcrl
push
cmp
scas
push
ret
int
xlat
sti
mov
mov
mov
and
cmc
cld
push
jg
xchg
add
dec
mov
mov
xchg
inc
pop
loop
mov
aas
add
and
pop
xlat
mov
adc
mov
cltd
es
xchg
lret
icebp
mov
xlat
xchg
addr16
push
pop
inc
cli
jg
jl
mov
inc
push
and
adc
mov
xchg
dec
test
and
repnz
cmpsb
ja
lahf
pop
jle
bound
jmp
adc
adc
mov
popa
fsub
and
int3
sub
frstor
movl
cmp
dec
dec
out
cmp
inc
mov
loopne
rcr
cmpsl
aad
push
mov
dec
iret
out
xchg
jmp
jecxz
push
aaa
mov
add
fisttps
cli
pop
negl
fldcw
mov
and
mov
mov
push
inc
movsl
mov
in
sbb
cs
addb
daa
jb
or
mov
cld
jmp
repz
add
cmp
pop
sbb
sysret
mov
add
testb
ds
in
pop
dec
xchg
scas
adc
adc
and
sbb
xchg
lods
and
aaa
dec
cwtl
fstps
fs
push
fiadds
inc
nop
or
mov
lahf
inc
ja
clc
push
hlt
es
jb
rolb
push
sub
repz
xchg
push
xor
jle
mov
fildll
sbb
jg
outsl
xor
pop
pop
sub
mov
jge
push
mov
aaa
hlt
sahf
sub
xchg
cmc
pop
addr16
es
dec
out
inc
lret
push
loope
sbb
fisubrs
repnz
icebp
lock
sbb
psrlq
push
jae
sbb
clc
aad
lods
mov
lret
cmp
pop
sub
sub
pop
cmp
je
push
mov
adc
and
push
mov
lret
mov
testl
dec
jns
or
divl
testb
fistpll
and
sti
push
stos
fcompl
xchg
xor
cmp
fcmovne
int3
xcrypt-cbc
cmpsl
push
cmp
int3
xor
sub
pop
out
mov
test
mov
sbb
mov
fs
mov
fcompl
int
paddsb
mov
je
inc
pop
cmp
or
cs
repnz
lea
adc
pusha
inc
repnz
adc
push
iret
aam
pop
push
nop
iret
push
lods
lock
mov
daa
jp
adc
pop
pop
testb
push
fbstp
pushf
in
adc
or
test
je
in
pop
push
cmpsl
push
arpl
outsl
adcb
and
iret
arpl
rorb
inc
das
sbb
movb
sbb
stos
jb
xor
in
int3
push
mov
add
enter
xchg
sub
leave
lea
cs
mov
testl
mov
add
xor
cwtl
push
icebp
sub
push
and
dec
fidivrl
xchg
inc
mov
xchg
add
jo
dec
cld
into
jns
dec
stos
lret
lods
es
jmp
dec
fdivrp
xchg
adc
mov
or
fsubs
fs
xchg
lret
mov
stos
movsl
fwait
test
jecxz
sbb
jmp
inc
adc
aam
in
xlat
mov
jecxz
jbe
mov
sti
or
or
sbb
inc
icebp
lcall
jo
push
mov
xchg
pop
mov
jp
add
dec
ret
cmp
adc
sahf
cmp
popa
test
cmp
sar
out
addr16
outsb
sbb
pop
sub
pop
call
or
lods
test
cmp
mov
stc
fstpt
xchg
xor
push
add
mov
lods
mov
fdivl
hlt
insl
jne
daa
mov
mov
sub
sub
xor
mov
out
fdivp
pushf
sub
push
cli
sahf
rorl
out
cmp
stc
cs
jne
outsl
dec
aas
pop
xchg
pop
xlat
add
out
pop
es
pop
mov
mov
push
fiaddl
out
adc
push
jno
jbe
pusha
std
outsb
scas
adc
cmp
lock
loop
pusha
push
push
ret
std
sbb
jno
roll
cmc
xchg
mov
pop
push
xlat
add
ret
sbb
ljmp
add
movsl
jne
adc
lret
mov
shlb
xlat
jge
clc
dec
add
push
stos
jle,pt
sbb
scas
outsb
and
or
push
jmp
pop
js
cli
div
and
js
pop
cmp
out
jecxz
imul
add
je
cmp
mov
push
movsl
xchg
das
test
aas
adc
pop
scas
addr16
mov
xlat
sti
je
test
int3
scas
decl
pop
ss
mov
jno
inc
ret
add
push
jae
dec
ret
lcall
add
popa
popa
pop
add
int
cwtl
push
inc
dec
repnz
ss
sub
mov
adc
push
xchg
jmp
fmull
jg
lds
aad
test
lcall
jmp
fldt
movsl
mov
in
clc
das
data16
sub
mov
mov
out
sbb
pop
sbb
icebp
rol
and
into
jbe
cltd
lds
fstps
in
shll
call
cmp
adc
push
pop
sub
out
lret
cmpsb
inc
cmp
sbb
loopne
mov
add
in
xchg
mov
dec
mov
jp
insb
sahf
push
xor
xchg
add
sti
cmp
stc
sbb
jne
pop
out
mov
movsl
and
mov
fdivs
push
xchg
adc
out
jecxz
data16
loopne
or
into
and
daa
fucomp
out
faddl
add
jno
rcl
mov
xor
mov
mov
push
scas
sub
mov
stos
clc
push
push
and
pushf
sbb
ja
fsubrs
jmp
inc
mull
add
sbb
pushf
inc
add
pop
and
dec
sub
mov
test
sub
daa
cli
cmp
push
cli
cmp
push
inc
push
pop
mov
inc
dec
lret
jmp
jg
and
push
nop
inc
sub
mov
cmp
or
aad
adc
inc
faddp
jg
andl
sbb
cmp
xor
mov
insb
pop
adc
push
leave
xchg
fstps
hlt
scas
out
lcall
cld
mov
mov
add
pop
add
dec
rclb
fwait
addr16
mov
sarb
pop
cltd
push
inc
sti
aad
dec
add
xchg
out
out
sbb
jle
fsub
and
xor
outsl
push
rol
les
hlt
or
xchg
mov
lock
xlat
rolb
cli
sbb
pop
andl
cmp
stos
jle
jo
int
repz
or
cmpsb
aam
pop
pop
jnp
pop
xlat
popa
ficoml
icebp
loop
push
sbb
mov
mov
shlb
inc
idivl
into
nop
ret
sti
mov
daa
repz
mov
mov
adc
outsb
mov
ss
or
bound
int
out
xor
mov
daa
movsl
cmp
fdivrp
cltd
ret
insl
mov
jmp
sub
push
insb
inc
cli
insb
push
sahf
movsl
std
or
sub
cmp
cmpsl
mov
mov
xchg
add
jge
pop
mov
or
cwtl
xor
inc
jle
leave
repz
cmp
cmp
ljmp
sbb
adc
push
jno
cli
pop
cmp
ret
cmp
jns
pop
pusha
sarl
rcrb
mov
stc
loope
add
inc
je
and
aaa
mov
jmp
xchg
cmp
std
mov
and
xchg
mov
mov
ds
dec
inc
adc
jae
test
xchg
out
xchg
ss
in
addr16
popf
scas
push
mov
pop
shrl
mov
add
fdivrp
mov
test
imul
mov
imul
push
xchg
cmpsb
mov
xchg
and
sbb
or
insb
sbb
mov
push
sbb
and
adc
mov
pushf
mov
int
pusha
mov
push
inc
cmp
adc
fabs
dec
jp
mov
in
pop
aad
les
scas
cmp
cmp
das
emms
push
loop
popf
fldt
lahf
jb
jae
sbb
push
mov
fimuls
imul
xor
jno
sub
mov
je
push
cmp
popa
xchg
pop
fists
adc
xor
in
aad
stos
outsb
aad
sbb
xchg
push
out
fsubrs
cmp
push
pop
add
and
pop
call
aas
fmull
xchg
dec
or
mov
scas
push
cmc
add
adc
inc
popf
xchg
xchg
pop
cld
lret
icebp
loop
mov
insb
or
call
jne
cli
mov
mov
hlt
loopne
mov
das
mov
fisubrl
adc
mov
scas
dec
mov
or
add
nop
pop
fildll
push
test
nop
lock
outsb
test
mov
cmp
roll
or
nop
aas
mov
add
leave
dec
jne
jnp
adc
jmp
es
cs
mov
cmp
xchg
jno
cs
out
xor
int3
cld
outsl
ja
or
dec
cmp
lcall
pop
mov
mov
arpl
cli
mov
and
inc
aaa
sbb
addr16
xchg
lret
add
cmp
rcll
xchg
mov
push
adc
or
xchg
xchg
lods
xchg
lds
les
clc
cld
enter
gs
inc
addb
call
stos
and
nop
push
ret
push
les
mov
mov
dec
test
lds
sbb
mov
jne,pn
jle
and
fstpt
mov
dec
mov
mov
push
fbstp
pop
xor
mov
jbe
cmp
mov
or
or
orl
cwtl
jnp
aam
adc
xor
insb
mov
add
adc
fistps
add
movsb
xchg
enter
jge
jge
in
pop
xchg
pusha
push
bound
dec
or
sub
lret
shll
and
pop
loop
loopne
movsl
sub
or
fldenv
sub
mov
cltd
xor
jle
mov
pop
pusha
in
call
nop
cmp
jb
cmc
gs
in
mov
mov
fsubr
lahf
scas
dec
mov
movsl
pop
sti
pop
inc
pop
add
adc
lret
jle
scas
xchg
or
mov
xchg
loope
loopne
push
jnp
aas
sbb
jnp
mov
pop
cmp
mov
cmp
pop
inc
xor
clc
inc
in
inc
jo
push
int
adc
pop
pushl
mov
subl
dec
and
sahf
push
fwait
mov
add
and
daa
add
xor
addr16
les
xchg
jno
fwait
mov
popa
adc
fdivl
inc
and
cmpsb
and
cs
sahf
push
sbb
clc
jo
dec
loopne
dec
test
xlat
lea
shrl
mov
popf
cmp
ret
jno
hlt
outsl
in
addb
cltd
jno
dec
mov
aas
xor
clc
gs
jmp
pop
xchg
mov
mov
dec
push
lock
ljmp
jno
push
test
andb
mov
test
mov
test
xor
cs
jecxz
and
in
ja
in
push
paddusw
xor
js
mov
in
rolb
mov
ljmp
xchg
mov
fcmovu
in
mov
stc
popf
add
inc
pushl
dec
xchg
jno
lods
jb
jno
fildl
in
jle
cmp
lds
sub
inc
lahf
mov
add
push
mov
and
or
jo
sti
mov
inc
cs
pop
std
or
mov
in
or
stos
mov
test
ljmp
adc
xchg
adc
hlt
push
mov
in
inc
adc
rcl
xchg
daa
push
sub
pop
mov
mov
xor
and
stos
into
popa
test
and
int
ljmp
mov
mov
cli
stos
sub
ret
push
cmp
xor
push
xorps
lods
push
jb
sub
imul
jb
orb
mov
sbb
fwait
push
jge
jecxz
adc
cmpsb
push
add
inc
pop
popa
inc
fimull
push
nop
fldt
pop
cwtl
push
lahf
test
xor
ret
sub
jns
stos
pushf
lahf
jp
mov
pop
inc
lods
and
ljmp
popf
test
scas
scas
push
pusha
test
lahf
mov
loopne
push
mov
jl
iret
jnp
add
ds
and
pop
repz
dec
and
add
pop
out
inc
arpl
pop
cmpl
cmp
mov
push
cmp
ja
cmp
out
adc
popf
js
out
push
nop
jp
in
in
sub
inc
xchg
xchg
xlat
call
sub
mov
push
cs
bound
lods
outsb
enter
stos
mov
inc
mov
add
mov
adcl
stos
mov
je
into
jmp
push
outsl
lret
in
leave
xlat
adc
je
mov
aas
stos
sub
dec
xchg
ja
ret
mov
lds
cmc
jae
arpl
xor
push
adc
jne
test
xchg
shll
mov
cmc
jae
arpl
xor
push
adc
jne
test
fst
ffree
mov
lds
cmc
jae
arpl
xor
push
adc
jne
test
xchg
in
ret
mov
lds
cmc
mov
pushf
mov
inc
int
stos
in
lcall
xchg
addl
mov
cmpsl
shll
and
xor
add
adc
bound
push
inc
inc
push
mov
mov
xchg
repnz
repz
ret
and
xor
add
jb
bound
inc
inc
push
mov
mov
xchg
repnz
repz
ret
sbb
sub
sbb
add
sbb
sub
sti
mov
lock
and
cmp
lock
clc
data16
push
inc
stc
fs
add
addr16
fcomps
data16
iret
xor
les
xchg
lea
mov
gs
je
ljmp
sub
xor
dec
int
push
push
inc
aaa
mov
mov
xchg
loop
jecxz
sub
es
std
and
mov
or
push
mov
dec
clc
push
mov
or
cmp
test
data16
add
mov
ljmp
push
add
lcall
sub
lock
fmull
ljmp
xchg
sub
mov
adcb
ret
ret
and
xor
add
adc
bound
inc
inc
adc
test
stos
mov
cmpsb
andl
insl
outsb
jge
push
or
push
rcll
mov
sar
ret
les
ret
data16
push
inc
jg
or
sbb
ss
cmp
sti
testl
shll
and
xor
add
adc
bound
inc
inc
push
mov
mov
xchg
repnz
repz
ret
and
xor
add
adc
bound
inc
inc
push
mov
pop
cmpsb
sub
inc
sub
dec
in
xchg
sbbb
sti
dec
shll
xchg
mov
push
rcrl
xor
mov
and
cmc
pop
cltd
inc
int3
adc
clc
divb
repnz
into
loopne
or
jnp
loopne
rorb
or
in
mov
mov
mov
xchg
xchg
cmpsb
mov
rcrb
lods
aaa
or
push
aaa
inc
sbb
pop
repz
lcall
pop
cmpsl
or
mov
std
push
mov
xchg
xchg
adc
jo
or
repz
mov
xchg
int3
aam
and
cltd
add
mov
cld
lea
aad
or
xor
stos
aaa
cwtl
cmp
xor
pop
pushf
lahf
mov
push
add
xor
insl
nop
add
mov
and
or
lcall
int3
lea
pushf
mov
das
sub
outsb
icebp
stos
in
fmull
aam
push
add
mov
pusha
sub
sbb
ror
and
inc
sub
push
adc
in
les
repnz
rol
test
addr16
dec
mov
mov
sahf
or
lods
lret
adc
and
xchg
inc
mov
sbbl
imul
inc
dec
jb
shlb
mov
cmp
pop
inc
inc
out
test
cmp
shlb
mov
cmp
aas
int
cwtl
int3
xor
mov
bound
jl
sub
es
test
cmp
mov
mov
mov
sub
inc
and
cli
cli
xchg
and
and
add
dec
rclb
movsb
sub
insb
xor
insb
inc
ljmp
pop
rorl
pop
xchg
imul
test
sbb
adc
das
cmp
into
insl
out
es
jb
and
int3
pop
fstpt
stc
loopne
xchg
push
in
jecxz
lcall
movsl
jge
test
cs
repnz
mov
push
lret
mov
repnz
cli
ss
push
popa
repnz
cmpsb
cmp
cmp
cmp
insb
inc
jl
rol
pop
test
pop
arpl
scas
dec
outsb
movsl
inc
or
fcmovnu
cld
or
add
xlat
pop
mov
arpl
push
mov
mov
aaa
jecxz
pop
cltd
add
fstpt
mov
leave
inc
or
sti
fs
into
dec
pop
mov
aas
stos
cltd
jg,pn
ret
sbb
push
inc
pop
pop
lret
pop
pop
xchg
mov
pop
shlb
scas
mov
cmp
sbb
jne
sbb
lahf
lods
rcrl
enter
mov
cmpsl
dec
setp
in
fldenv
insl
jnp
icebp
mov
dec
push
add
add
or
jl
pop
jnp
lds
xor
cmp
jge
mov
sub
jecxz
inc
jno
pop
mov
xlat
leave
add
push
cmp
inc
dec
test
mov
mov
lret
fs
frstor
adc
leave
jge
fmull
xor
sbb
lods
push
cmp
and
pop
pop
push
cmp
loop
push
add
dec
pop
inc
gs
sbb
in
and
cmp
adc
das
inc
mov
movsl
jb
cmc
mov
mov
pop
call
mov
sbb
pop
mov
in
lahf
inc
mov
sbb
mov
cmpsl
movsbl
jmp
data16
decl
stc
outsb
rorb
lea
das
sbb
mov
fwait
ljmp
test
pop
dec
dec
push
aaa
ljmp
in
fstpt
inc
jl
mov
dec
cltd
rcrb
and
sbb
pop
loop
mov
and
lret
mov
cmp
inc
shll
inc
push
leave
mov
stos
sbb
roll
popa
insb
test
push
mov
xlat
cltd
lcall
xchg
lret
and
aas
fldenv
inc
adc
movsb
test
cmp
adc
test
pop
jmp
and
xchg
movsl
mov
cwtl
mov
aad
xor
inc
addb
les
jnp
add
negl
orl
push
cmpsl
add
scas
adc
addr16
cmp
repz
outsb
ja
pushf
mov
rcrb
xchg
jmp
pop
xchg
addl
push
test
cli
inc
ljmp
scas
cmp
pop
sub
or
xor
xor
add
jp
dec
xor
mov
jp
cwtl
ss
mov
or
mov
xchg
aas
xor
subl
aas
push
add
dec
in
xlat
sbb
or
inc
add
pop
shlb
cmp
test
adc
mov
ficomps
mov
push
shrb
loope
sub
lock
pop
les
sbb
int3
rep
fwait
movsl
cld
je
pushf
subl
push
notl
daa
add
stos
es
addl
dec
sbb
push
ja
inc
inc
mov
jb
pop
lock
jg
sarb
daa
dec
xor
lods
sub
js
mov
jmp
mov
fs
out
imul
popf
mov
xor
mov
ss
mov
push
push
cmp
mov
loope
lahf
jns
jbe
cmpb
inc
sbb
adc
adc
push
sub
cmp
push
xchg
adc
dec
sti
cmp
iret
push
mov
idiv
fildl
test
pop
mov
mov
add
add
cwtl
sbb
aam
adc
loop
in
mov
call
loope
imul
cli
out
mov
sub
test
pushf
pushl
adc
inc
mov
adc
outsl
rolb
subb
sub
inc
sti
adc
sub
daa
inc
cld
scas
or
lcallw
or
push
lret
sbb
iret
push
jbe
sub
inc
insb
pop
jle
xchg
or
cmc
cmc
subl
mov
or
pop
clc
dec
jno
in
test
xor
data16
std
adc
dec
xchg
jae
int3
dec
adc
adc
jbe
mov
cmp
lods
rcr
int3
jmp
xor
xchg
mov
sub
test
add
pop
subl
inc
fisubrl
push
in
inc
ret
xor
scas
fcmove
xor
jg
xor
out
xchg
inc
stos
mov
mov
test
cmp
std
mulb
mov
lods
sti
jg
sbb
sahf
inc
gs
cmp
movsl
out
cmp
cwtl
dec
adc
cmp
mov
test
add
mov
fwait
mov
xchg
sbbb
jne
add
or
mov
mov
inc
icebp
insl
stc
or
mov
inc
repz
inc
or
dec
mov
divl
jae
pop
out
xor
rcl
push
fdivrs
mov
push
lret
daa
adc
divb
mov
xor
xor
xchg
xor
push
mov
movsl
stos
pop
push
call
adc
mov
iret
pushf
sub
test
inc
xchg
inc
loopne
dec
ror
push
and
lods
push
or
adc
adcb
mov
pop
movsl
ljmp
pusha
int
and
inc
jp
cwtl
loop
xchg
fs
xchg
lret
and
aad
pop
rcrl
in
xchg
scas
or
add
lcall
fs
fldcw
cmp
andl
clc
fsubr
call
movsb
adc
sti
fbld
pushf
rcrb
je
imul
shr
mov
stc
adc
mov
cmc
pop
out
insb
cld
insl
push
aas
sub
pop
add
clc
in
xchg
imul
add
shll
sbb
movsb
clc
popl
sbb
cmpsb
push
add
test
sahf
nop
xchg
add
jae
aam
std
push
bnd
add
push
add
pop
lret
fs
xor
lcall
dec
xor
popa
mov
cmp
pop
into
lret
xchg
push
cmp
in
dec
movsb
jp
pop
xchg
shrl
lock
imul
inc
test
jns
sbb
rcrl
in
mov
adc
push
popa
sbb
clc
iret
sub
into
jbe
cmp
into
push
pushf
push
ret
ja
lods
or
inc
insl
cmp
and
inc
gs
out
lods
lret
in
mov
cmpsb
xchg
and
xlat
push
es
idivb
aas
xchg
popa
mov
test
aam
hlt
hlt
push
mov
shr
lods
inc
call
mov
xchg
sahf
mov
cmp
xchg
mov
cmp
out
stc
cmp
ds
cmp
mov
and
pop
sahf
icebp
lods
jnp
jb
jg
jp
push
inc
push
pop
xorl
in
jg
ljmp
cmc
xor
push
lahf
dec
jno
or
mov
ja
nop
nop
jp
scas
cmp
in
leave
mov
jne
mul
add
dec
mov
imul
in
out
pop
lea
mov
fdivl
or
dec
notl
inc
inc
mov
lcall
ss
pushf
or
cmp
insl
aam
cwtl
sti
inc
scas
ficoml
fidivs
adc
leave
mov
dec
sbbb
pusha
mov
je
testb
imul
adc
adc
mov
xor
lods
out
test
push
sbb
and
cld
pop
stos
push
clc
mov
test
sahf
leave
mov
add
and
lods
xchg
mov
js
sti
test
push
pop
adcl
fbld
jle
pop
rcrl
cld
subl
push
mov
push
pop
sub
sub
clc
xlat
mov
add
cmp
movsl
jno
jno
adcl
lret
aam
jecxz
lret
ss
jecxz
test
sarb
aam
and
sbb
scas
js
cmpsl
sub
or
pop
push
fs
or
mov
sbb
dec
addr16
out
addr16
in
push
xor
inc
leave
mov
leave
aam
jmp
adc
lcall
inc
mov
lahf
subb
insl
bound
add
fcmovnb
daa
fistpll
and
popf
mov
inc
lret
xchg
icebp
pusha
cs
cmp
mov
mov
pop
and
cmpps
fldcw
or
popf
xchg
or
lret
push
xorl
nop
cmc
lahf
sbb
jnp
out
sub
sbb
jae
add
mov
dec
mov
jmp
xor
loopne
xor
cs
cltd
xchg
push
ret
jl
ljmp
sub
pop
ljmp
rclb
jge
push
and
or
push
jle
subb
hlt
xchg
sahf
daa
rorb
pop
insl
inc
adc
nop
daa
or
test
bound
inc
pusha
xor
sub
sbb
ficompl
lcall
adc
stos
jno
and
addr16
fisubrs
dec
mov
int
out
and
stos
cwtl
insb
ucomiss
test
clc
xor
mov
test
cwtl
jbe
dec
sti
addr16
unpcklps
into
aas
loop
mov
jl
and
decb
jp
pop
repnz
fcoms
outsl
pop
dec
mov
jp
int3
xor
push
jmp
movl
aas
sahf
add
cmp
mov
xor
punpcklwd
pop
movsb
mov
into
lea
fnstenv
xchg
mov
pop
icebp
mov
sub
xchg
filds
xlat
sub
and
arpl
adc
jecxz
xchg
out
stos
addr16
pop
cltd
push
in
pop
in
mov
cmp
sahf
movsb
je
mov
insb
rorl
test
and
dec
pop
and
xor
aas
mov
movsl
mov
xor
cmpsl
mov
in
lcall
add
push
pop
stos
mov
loope
xorl
ret
sbb
popa
mov
xorb
inc
lods
dec
ficoml
andl
mov
cmpsl
movsb
mov
fdivs
jo
xor
push
dec
test
hlt
add
xchg
scas
lds
sbb
adc
mov
andl
pop
rcrl
fmuls
jmp
dec
pushf
jno
push
xor
int3
sub
inc
xchg
fbld
cmp
mov
nop
pop
lret
inc
mov
or
ja
push
xchg
int3
hlt
sbb
lcall
lods
xor
jbe
mov
stc
movsl
push
xchg
add
cs
test
sarb
pop
inc
es
push
int3
lahf
ret
movsl
push
push
or
jmp
mov
ret
in
xchg
mov
sub
inc
lahf
add
inc
mov
lahf
mov
fisubl
insb
mov
out
mov
jnp
and
push
mov
call
jo
sub
sub
push
lret
fstpl
sub
popf
pop
push
popa
aas
cmpl
dec
xchg
fs
mov
loopne
xchg
clc
push
sub
add
cmpb
adc
mov
fwait
push
repnz
lods
lods
loope
hlt
xchg
xchg
inc
xchg
int3
fsubrl
rol
lcall
test
scas
fwait
js
ret
add
std
mov
into
test
jno
outsb
adc
pop
fsubrp
push
or
jge
mov
cmp
add
push
out
jns
cmp
mov
in
jbe
cmpl
aad
dec
lcall
cmc
in
cltd
pop
dec
add
mov
in
and
ret
enter
insl
push
incb
adc
in
gs
cmp
mov
jge
push
popf
stc
or
adc
xor
mov
sti
shll
jo
dec
dec
jnp
les
push
xchg
inc
sbb
imul
fnstcw
iret
aaa
addr16
in
stos
aam
sbbl
std
cmp
pop
mov
fcoml
int3
mov
inc
and
and
xor
sbb
stos
fwait
mov
jmp
jle
and
test
cmp
inc
push
imul
pop
pop
fisttps
xchg
out
hlt
fcmovnbe
and
loope
out
imul
stc
mov
ret
popf
sbb
jae
js
loopne
mov
pop
push
inc
or
loop
repz
les
popf
or
or
mov
lahf
fistps
xor
mov
or
cmpsl
cmpsb
div
aaa
push
fwait
pushf
add
sbb
int3
loop
sbb
popa
scas
jl
mov
repz
and
test
inc
mov
add
aaa
cmp
out
and
rorb
pop
lods
aas
dec
mov
repz
and
inc
div
push
xor
and
adc
mov
rol
mov
lret
mov
aad
or
iret
jecxz
pop
es
mov
push
cmp
inc
mov
jno
jb
aas
scas
xchg
xchg
add
add
shrl
pop
lret
mov
insl
pop
mov
cmp
mov
mov
dec
cmp
inc
sahf
lret
in
pop
mov
mov
in
cmp
or
push
mov
push
xchg
aaa
arpl
icebp
into
mov
sub
fidivl
jmp
shlb
imul
mov
repz
or
adc
jb
fisubs
aad
mov
add
aas
dec
pop
xchg
mov
xchg
pop
leave
ret
flds
imul
push
and
jle
fstps
inc
mov
pop
in
lea
push
in
add
in
mov
mov
shrb
xchg
divl
addr16
mov
in
clc
fsubl
and
xor
mov
fwait
rol
xchg
sub
sahf
fdivs
mov
ja
adc
fcoml
mov
mov
pushf
adc
int3
daa
adc
scas
jns
sub
xchg
and
adc
addl
jecxz
mov
pusha
mov
sbb
cld
sub
enter
test
outsl
fidivs
mov
lods
subb
das
jg
mov
iret
jae
cmp
aas
sbb
sub
pop
je
sahf
hlt
sub
shlb
or
jle
clc
mov
mov
or
aas
fistpl
fldt
lds
into
ret
or
nop
outsb
lahf
rcrb
mov
dec
mov
sub
pop
fldt
pop
push
sub
inc
in
dec
out
mov
sub
ja
outsb
aad
pop
xchg
pop
fildll
out
sbb
sub
cmp
xor
clc
inc
xchg
cwtl
sub
pop
sbb
inc
fcoms
imul
mov
inc
mov
insb
or
ficomps
sbb
adc
dec
pop
movsl
iret
sahf
cmpsl
movsl
shll
in
mov
bound
adc
dec
sub
jp
out
mov
adc
xor
xchg
rcll
ds
and
jge
scas
mov
sub
mov
imulb
or
mov
into
out
mov
push
test
lret
xor
orl
insb
test
mov
push
push
mov
shl
mov
test
push
jle
dec
sbb
cmp
loope
icebp
mov
les
cmp
in
adc
loopne
adc
xor
lret
jl
xchg
or
out
fdivrl
das
repnz
aaa
pop
data16
repz
mov
nop
xchg
jno
test
mov
push
aaa
xor
add
fsubl
jge
or
xor
pop
sbb
cltd
inc
bound
ret
jmp
push
mov
rsm
cld
lahf
int
pop
pushf
mov
repz
pop
pop
mov
mov
inc
cli
sbb
pop
fwait
js
bound
adc
inc
cmpsl
xchg
adc
or
cmp
cmc
scas
mov
push
scas
jl
ret
ja
lret
sbb
mov
push
xchg
jo
xchg
sub
std
mov
adc
and
fadd
jns
inc
jns
sbb
ds
inc
sbb
mov
pop
test
dec
add
mov
or
shll
aam
mov
ficompl
cwtl
scas
pop
adc
repnz
jne
repnz
mov
mov
mov
mov
sub
sbb
daa
xor
add
push
jp
fcmovnbe
ficompl
mov
or
mov
stos
and
mov
dec
sti
add
dec
nop
movsb
and
and
sysenter
sub
jbe
push
out
cmp
addr16
ret
xor
out
push
xchg
arpl
push
mov
mov
or
adc
mov
jo
leave
push
mov
std
cmp
in
adc
cli
outsb
out
lock
xor
and
shr
add
mov
and
jae
jge,pt
xchg
dec
sbb
sbb
lock
cli
pop
addb
mov
pop
scas
sub
pop
imul
sub
cmp
inc
sbb
sub
dec
cmp
jbe
and
and
fcmovnb
xchg
repz
push
aam
and
add
orb
pop
xor
in
jb
push
or
mov
imul
fwait
xchg
mov
xchg
sbb
int
push
jb
jo
test
in
ljmp
cmp
mov
std
sbb
inc
cmp
popw
outsl
xor
outsl
cmc
insb
ret
jno
xorb
cmp
addr16
jae
stc
xchg
mov
inc
sbb
jb
nop
and
rorl
push
pop
bound
mov
jb
les
stos
cli
mov
or
dec
rcrb
ds
cmpsb
cmp
iret
add
dec
cli
sbb
add
xchg
xchg
out
pop
pusha
popf
fidivrs
pop
arpl
cmpsl
stc
loopne
dec
jno
es
lret
pop
out
mov
repnz
sbb
stos
stos
push
mov
movl
test
push
mov
cmp
mov
pop
dec
xor
inc
hlt
jnp
pop
pop
aam
psubsw
dec
mov
xor
xchg
into
lods
pop
add
daa
mov
mov
std
sbb
fisttpll
inc
subb
push
adc
xchg
orl
mov
sbb
sub
inc
xchg
js
xor
push
aaa
fsubs
test
orb
and
xchg
sti
mov
in
dec
sbb
adc
add
ret
jae
lods
into
dec
inc
sub
mov
sub
sub
xorb
lock
add
ss
mov
mov
jg
enter
inc
popa
jb
sbb
sbb
nop
popa
mov
adc
and
and
popf
mov
dec
sbb
sbb
aam
adc
dec
daa
rcrb
aad
xor
cld
imull
mov
mov
add
inc
jnp
mov
loop
movl
ret
and
xor
add
adc
bound
inc
inc
push
mov
mov
xchg
repnz
repz
ret
and
xor
add
adc
bound
inc
inc
push
mov
mov
xchg
repnz
repz
ret
and
xor
add
adc
bound
inc
inc
push
mov
mov
xchg
repnz
jae
inc
ret
fsubl
cltd
mov
jmp
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
rolb
push
mov
outsl
cmpsb
js
pop
xorb
aas
out
negl
dec
adc
outsl
mov
inc
push
mov
pop
iret
pop
jmp
out
aaa
dec
movzwl
out
negl
sub
inc
inc
xorps
imul
daa
pop
aaa
pop
outsl
arpl
pop
orl
ret
or
sbb
fiadds
or
or
es
rorb
sub
or
xor
or
scas
pop
jne
adc
xlat
xchg
mov
and
fwait
das
repnz
out
jp
repnz
mul
out
pop
lahf
inc
mov
mov
fistpl
lock
daa
rorl
mov
pop
xor
ficoml
aam
stos
cli
ja
push
xor
test
enter
mov
shr
dec
push
sbb
outsl
mov
push
dec
add
cmp
rcrb
aaa
lods
xchg
dec
imul
sbb
sbb
or
jp
push
xlat
out
not
imull
neg
xchg
dec
push
cmp
push
mov
pop
mov
jmp
push
aaa
in
popf
xlat
out
xor
aas
xchg
jg
or
in
sub
push
sti
push
rcrl
imul
jle
dec
mov
ss
in
movsl
sub
lahf
inc
pop
push
clc
addr16
xchg
push
pushf
aaa
daa
mov
inc
cwtl
sub
sub
or
cs
push
mov
adc
daa
out
aaa
pop
aas
out
negl
dec
xchg
jg
outsl
mov
inc
push
mov
pop
iret
pop
jmp
out
aaa
pop
aas
out
negl
dec
xchg
jg
outsl
mov
inc
dec
push
pop
aad
xor
pop
mov
pop
and
lock
je
xchg
adc
popa
push
inc
sahf
lds
cltd
fdiv
xchg
sbb
adc
lret
stos
push
mov
or
jo
nop
lahf
adc
pop
inc
clc
fnstcw
in
sub
hlt
fistps
je
daa
dec
xor
outsl
iret
mov
xor
cmp
mov
mov
push
in
sbb
mov
push
jo
rcll
mov
pop
ss
mov
or
add
cli
inc
aas
cmp
jbe
mov
cwtl
and
inc
shl
cmp
shll
pop
sti
testb
negb
or
jns
rcr
je,pt
ficoml
outsb
jle
int
nop
add
cmp
mov
ret
into
sbb
inc
cmp
scas
in
dec
xchg
add
push
jns
outsb
loope
fwait
insb
imul
adc
mov
pop
adc
inc
add
and
mov
sahf
jbe
pop
loopne
mov
mov
div
mov
stos
sbb
fstl
addr16
xchg
xor
cs
pop
aaa
sub
lret
xchg
xchg
pop
aam
push
pop
fs
pop
adc
dec
clc
lock
xchg
ss
pusha
jo
js
std
pusha
inc
pushf
les
hlt
pushl
jae
and
in
xchg
rcrb
sbb
dec
imul
xor
adc
hlt
repnz
sbb
push
in
dec
inc
aas
and
clc
shrl
lea
or
pop
stos
pop
mov
cmc
inc
and
in
movsl
ja
cltd
fdivrs
and
xchg
mov
dec
cmp
fsubl
and
add
shll
into
icebp
je
nop
popf
int
mov
or
aaa
push
push
jl
mov
mov
dec
xchg
das
scas
pushf
fiaddl
inc
inc
loope
push
mov
scas
xor
push
icebp
sbb
sub
dec
mov
ja
jns
pusha
leave
pop
cmpsl
mov
aad
pushfw
mov
xchg
leave
imul
sub
add
inc
jmp
jmp
lahf
push
mov
js
fbstp
mov
push
dec
mov
loopne
fsubrs
xlat
mov
jmp
xor
movsl
in
lea
loopne
dec
fstl
xlat
jge
pop
sub
rcrl
mov
xor
divb
mov
push
outsb
shl
insl
cmp
cltd
nop
sbb
loopne
jno
pop
fidivrl
imull
movsb
or
hlt
mov
ljmp
mov
enter
push
sbb
xchg
lahf
xor
mov
enter
dec
pop
cmp
xchg
out
lcall
idivl
inc
movsl
aad
mov
dec
fiadds
push
lcall
enter
imul
push
adc
adc
shr
ficomps
nop
sub
cltd
pop
mov
pop
add
pop
pushf
mov
add
mov
shll
and
in
fwait
mov
jbe
xor
xlat
inc
mov
pop
add
test
push
rcl
loopne
cmpsb
push
mulb
or
mov
add
fdivl
lods
insl
es
and
lret
mov
push
pop
fcompl
sub
sti
fadds
repz
rcrl
repz
mov
repz
push
test
arpl
push
scas
scas
jl
aaa
mov
lds
cmp
ret
inc
inc
int3
rcll
inc
jbe
mov
dec
jl
inc
push
sbb
std
lret
shlb
cmp
cld
cmp
cmp
and
and
movsl
cmpsb
test
pop
sub
push
mov
pop
jl
push
sti
dec
scas
push
icebp
mov
fs
mov
cmpsb
popa
cmp
dec
sub
sub
mov
loope
pop
test
add
repz
test
arpl
mov
jb
in
pop
repz
cmp
lahf
mov
jae
leave
xchg
nop
repnz
add
sbbb
mul
mov
fiaddl
sub
pop
stos
loop
popf
insl
out
xor
jmp
pushf
inc
mov
jns
cld
bound
jmp
insb
push
lret
or
mov
dec
cmp
loope
aaa
cmp
dec
inc
dec
mov
pop
dec
fcmovnbe
loopne
xor
dec
xchg
fisttpll
addb
aas
sbb
and
stos
ret
jle
sahf
ret
ret
xchg
pop
or
adc
daa
hlt
xchg
jnp
out
imul
inc
shrl
mov
ljmp
jp
inc
bound
jns
push
lods
push
mov
lcall
loope,pn
push
out
jge
fs
and
int
mov
sub
mov
inc
repz
arpl
ret
in
scas
jb
std
aas
xchg
inc
adc
and
mov
mov
xorl
pushf
popa
sahf
dec
mov
insl
jne
pcmpgtw
andl
out
flds
pminsw
aam
lahf
adc
pushf
mov
mov
test
shlb
addl
push
insb
addr16
mov
outsb
imul
mov
add
lret
sub
jmp
clc
inc
in
scas
dec
sub
push
outsb
icebp
xchg
arpl
cmp
sub
add
dec
sub
mov
pop
int3
push
mov
push
cmp
inc
in
xchg
clc
rsqrtps
push
cli
mov
insb
or
jge
jno
xchg
stos
mov
jmp
sbbb
lock
mov
adc
jecxz
cwtl
dec
aaa
mov
mov
dec
xor
cld
test
ljmp
jne
and
int3
flds
rcll
addr16
sbb
popf
and
sbb
mov
cmpl
lahf
jl
lret
lods
rolb
pusha
jo
das
fcomps
cmp
jmp
test
mov
daa
adcl
jecxz
jle
xchg
jns
dec
stc
aas
imul
pop
mov
push
lahf
push
bound
das
sbb
add
mov
and
inc
addr16
pop
sub
sub
cli
shrl
icebp
cltd
rclb
test
sbb
push
aam
aad
xor
int
int
add
xchg
scas
adcl
pop
shlb
imul
aaa
sub
mov
sbb
rorl
mov
mov
mov
out
nop
cli
xor
or
mov
pop
std
sub
pop
dec
adc
shl
mov
cmp
jcxz
aad
movsl
or
sub
jae
loopne
jmp
jbe
mov
ret
rcrb
xchg
sbb
fdivr
pop
icebp
cmp
mov
xchg
pop
push
popf
add
push
test
fwait
adc
jns
pop
leave
popf
dec
mov
leave
mov
and
dec
lcall
arpl
sahf
sub
sub
adc
loope
push
mov
push
push
mov
cmovb
pop
std
data16
movsb
fnstcw
outsb
or
adc
ret
jle
or
mov
cmpsb
pop
cmp
mov
repz
lods
sbb
addr16
push
out
pop
insl
and
adc
ficomps
push
mov
sar
and
popl
pusha
inc
mov
or
sub
jns
stos
or
insl
call
in
cli
leave
out
push
mov
pop
rclb
rclb
sub
push
cmp
lock
and
xorb
push
imul
cmp
loop
cwtl
cvtps2pd
cld
in
lds
xor
cmp
insb
dec
aas
sbb
imul
mov
das
clc
xchg
pop
sub
cld
lds
mov
pushf
pusha
fisubrs
adc
cmp
xchg
dec
in
xchg
repnz
or
js
das
outsb
mov
xor
insb
gs
xchg
enter
loop
in
xor
fistl
pop
mov
mov
and
lret
test
adc
sub
mov
mov
cli
lea
mov
adc
pop
push
testl
pop
jo
push
les
adc
cmp
iret
xchg
popl
add
cmp
push
add
sub
mov
dec
mov
and
mov
mov
cmc
sbb
mov
sub
cmp
push
inc
or
std
mov
or
push
sub
push
loopne
movsl
adc
xchg
xchg
mov
fs
cmp
xchg
pop
mov
xor
jmp
stc
jb
sbb
push
lds
test
or
and
cmp
cmp
adc
es
shufps
xchg
mov
ret
dec
pop
cmpsb
fisttps
mov
mov
push
sub
dec
sbb
das
dec
cmp
jns
push
mov
je
mov
dec
add
xchg
testb
stos
jno
push
fcmovne
inc
cmp
lods
rcl
mov
pusha
jl
popa
mov
add
into
push
xlat
mov
xor
xchg
test
mov
pusha
push
lahf
loop
in
fbstp
mov
push
and
add
adc
inc
das
fs
int
jmp
cmp
movsb
sahf
ja
cmp
xlat
pop
add
xor
mov
cmp
pushl
pop
lds
push
xchg
inc
cmp
adc
insb
push
or
sbb
in
icebp
dec
hlt
jcxz
jle
call
add
pop
lock
loope
int
test
add
cmp
mov
xchg
in
mov
jmp
icebp
push
cmp
scas
movsl
sub
repnz
or
mov
fnsave
loope
psubsb
and
jecxz
mov
pop
jecxz
stos
mov
ficompl
xchg
dec
sub
mov
and
mov
jge
lods
lock
test
rol
jnp
icebp
jmp
dec
dec
stos
pop
sbb
sub
push
sbb
push
mov
pop
pop
outsb
mov
add
and
mov
ret
enter
jb
jne
lahf
lahf
mov
and
lret
cmpsb
pop
iret
ss
imul
dec
jno
and
fistl
test
add
mov
in
adc
and
loope
add
fs
sub
addr16
arpl
insb
sahf
xor
inc
xor
test
pop
inc
mov
movsb
fldl
inc
stos
cs
push
jb
xchg
aam
mov
cld
push
hlt
imul
mov
push
fsub
push
inc
lahf
fiaddl
enter
sbb
je
push
pop
fcompl
sbb
imul
push
jge
ljmp
jb
fidivrs
xor
push
clc
cli
stc
repz
xor
push
dec
loope
inc
dec
fstps
in
shll
lret
xor
add
mov
xchg
sub
pop
jge
in
mov
ss
clc
addb
mov
inc
dec
test
mov
in
adc
ljmp
pusha
mov
repz
inc
les
cmp
add
pop
insl
test
aad
mov
cmc
adc
arpl
in
pop
rorb
jb
push
mov
fdivl
xchg
les
in
ss
aas
rorl
pusha
enter
xor
fcoml
dec
jmp
iret
loope
cmpsl
fdivrp
imul
incl
shlb
adc
pushf
pop
and
mov
jg
cmp
xchg
or
imul
fisttpl
lods
in
in
ret
push
cld
and
test
or
stos
or
pop
test
enter
mov
imul
mov
mov
lods
adc
xchg
orl
sub
dec
sbb
int
inc
mov
cltd
mov
shll
cmp
into
test
mov
inc
lret
jmp
fwait
jae
push
push
andl
fs
add
loopne
add
jns
push
xchg
icebp
lret
pop
mov
jecxz
fistpl
and
sbb
enter
dec
jmp
cmp
xor
xor
and
cmp
fwait
xorl
xor
test
lods
test
movsb
cmp
push
or
sub
xor
adc
js
test
and
loope
dec
sbb
aad
or
dec
cmc
mov
sub
andnps
addl
test
bound
cmp
nop
mul
pop
lahf
xchg
les
outsl
ja
jnp
test
in
xor
into
pop
mov
addr16
adc
les
xchg
add
or
shlb
lret
aaa
sahf
xchg
aaa
mov
movsl
xchg
or
add
test
mov
pop
inc
mov
pop
dec
popa
stos
imul
std
dec
mov
mov
aad
inc
mov
pop
repnz
adc
test
dec
jmp
fcmovbe
orb
imul
mov
push
push
mov
sub
cs
xor
push
push
pusha
pop
iret
popf
jnp
ret
mov
adc
pusha
jmp
xor
pop
or
ret
or
loopnew
inc
popa
mov
sub
xor
insl
sti
movsl
fwait
loopne
jae
mov
inc
insl
arpl
push
xchg
movsl
scas
mov
xchg
jns
arpl
sahf
pop
lahf
push
test
or
mov
out
lcall
insl
rol
mov
sti
ret
xlat
scas
repnz
cwtl
fs
loope
jae
cmp
jmp
jecxz
sub
les
pop
mov
and
in
mov
in
subb
test
or
cmp
fistpl
mov
ret
pop
dec
sub
arpl
movsl
jg
mov
inc
sub
xor
stos
jno
mov
or
push
mov
jae
mov
dec
xchg
push
subl
pusha
jbe
xchg
dec
mov
adc
in
cmp
add
pop
lock
stos
ds
mov
sbb
xchg
cmp
in
out
repz
aad
je
adc
xchg
sbb
dec
rcll
aas
pop
mov
fdivrl
mov
or
popf
adc
loopne
ret
xor
pop
mov
jae
nop
jno
ds
iret
adc
cltd
and
add
or
ficomps
cli
ds
cmpsl
jge
jno
sbb
cld
fists
sahf
ficompl
cltd
mov
push
out
push
cmp
cmp
out
rorl
cmpsb
xchg
repz
inc
xor
call
rolb
shl
pop
mov
in
and
cltd
sbb
pop
nop
ret
mov
mov
ljmp
sbb
mov
dec
dec
or
aas
notl
sbb
inc
or
gs
aaa
adc
into
push
mov
sub
lss
or
fisubrl
sbb
dec
mov
push
mull
std
shll
jne
mov
mov
dec
test
negl
cmpsl
jl
xor
push
idiv
jecxz
mov
femms
movsb
sub
sub
lret
mov
pop
mov
xchg
and
pop
pop
cmp
repz
sbbl
ret
call
ficomps
out
outsb
push
and
inc
sti
loope
push
je
or
mov
lods
add
mov
repnz
push
jge
add
lahf
repz
push
jl
lods
jo
xchg
test
inc
cli
dec
mov
or
or
pop
push
repnz
in
xor
mov
fwait
xor
lods
pop
and
outsb
and
sbb
and
add
cmp
stos
ja
stc
add
pop
xchg
mov
fnstcw
xorb
sub
sub
jne
jns
push
mov
adc
mov
pop
jle
dec
insb
inc
push
and
ret
pop
push
push
data16
xor
mov
test
movsl
jne
xchg
mov
jge
lods
data16
arpl
stc
pop
sbb
sti
inc
adc
mov
sub
sub
rorb
fimuls
cli
sbb
das
iret
in
pop
fs
pop
inc
inc
and
mov
inc
idivl
in
sarb
test
xor
fwait
mov
das
cld
push
es
mov
ds
push
aam
cmp
sub
adc
cs
push
and
je
or
int
daa
dec
scas
into
adc
inc
xchg
imul
jo
lret
shl
incl
xor
insb
xchg
add
or
cli
scas
mov
in
dec
imul
xor
fcoml
ret
mov
pop
cltd
pop
clc
test
negb
xchg
roll
mov
xor
push
enter
sahf
data16
outsb
jno
add
jne
out
and
sbb
and
mov
cwtl
dec
ss
icebp
xchg
pusha
aad
cmp
push
adc
fldcw
imul
cs
call
push
sub
rcrl
dec
mov
push
lret
cmc
test
lds
xchg
les
push
mov
insb
xor
inc
lahf
call
jecxz
repz
inc
jle
lahf
cmp
push
push
xor
jmp
movsl
inc
sti
popa
ljmp
cmp
xchg
mov
jle
sahf
rcrb
push
ficoms
mov
rcrb
mov
sub
cltd
shl
insb
mov
cltd
pop
sahf
dec
add
sbb
cmpsl
fisttpll
jge
out
and
fwait
outsb
arpl
cmp
cld
ss
add
fisubs
pop
dec
lds
lods
mov
iret
aam
cmpsl
push
push
stc
and
int3
mov
push
into
in
imul
xchg
cmp
jg
inc
add
ja
lahf
pop
out
and
pop
add
or
fisttpll
adc
daa
sub
fisubrl
fnsave
leave
ja
in
ret
inc
jmp
xchg
std
repnz
lds
or
pop
pusha
ja
in
jbe
filds
push
mov
fdivrs
outsb
cmp
nop
xchg
adc
mov
xor
inc
imul
xchg
jns
roll
daa
jne
xor
push
inc
sbb
pop
das
mov
icebp
mov
mov
mov
adc
lret
cmp
add
stos
push
iret
inc
mov
lret
sarl
insl
fldl
out
pop
sbb
and
in
testl
outsb
push
bound
adc
sti
adc
ja
dec
aas
sti
xor
je
pop
in
jae
mov
fwait
pop
inc
xchg
fwait
jns
jg
push
sub
xchg
in
test
jae
in
pop
jb
dec
hlt
adc
jne
mov
je
add
push
scas
loop
push
cltd
jecxz
je
add
enter
int3
push
push
xchg
fst
mov
sarb
mov
inc
sub
imul
xchg
test
jmp
jecxz
cmp
dec
mov
les
mov
jo
jp
xorb
rcr
fdivrp
push
stc
mov
pop
ret
push
xor
in
push
cwtl
sub
mov
push
insl
inc
and
pop
leave
sbbb
mov
cli
add
daa
pop
hlt
dec
lahf
daa
idiv
outsb
pop
dec
inc
repnz
stos
sbb
adc
push
push
xor
mov
sarl
lcall
xor
rcr
push
ficomps
cld
adc
xchg
lcall
ficompl
andb
adc
pop
push
leave
nop
dec
mov
cmp
inc
push
mov
mov
icebp
imul
mov
sbb
xor
xchg
stc
jnp
cmc
sbb
ret
adcb
xchg
dec
in
in
rcrl
bound
push
pop
ret
in
sub
push
pop
hlt
inc
shr
adc
ss
pop
and
ljmp
sbb
lret
mov
pusha
dec
fistps
fbstp
mov
and
aad
sbb
push
iret
scas
ss
mov
sahf
inc
movsb
roll
mov
xor
or
lcall
int3
aad
inc
stos
push
mov
mov
and
cmpsb
shlb
jbe
jl
insb
cmp
aam
ret
lea
dec
outsl
push
or
inc
adc
mov
push
xor
gs
jno
cmp
subb
jbe
adc
or
insl
andb
scas
push
jmp
rolb
mov
mov
add
fcompl
mov
sarl
jne
movsl
mov
inc
push
add
jle
test
aas
ds
sbb
test
fnstcw
add
xor
ficoms
stos
cwtl
add
mov
xchg
subb
fucomip
xchg
pop
inc
jl
lods
add
icebp
test
xchg
sti
daa
jmp
or
dec
jle,pn
cmp
add
sub
mov
ret
add
nop
nop
cmpsl
aas
inc
jg
add
or
xchg
pop
inc
jl
or
and
pop
inc
and
inc
push
mov
cmp
dec
les
mov
ret
loope
add
imul
jnp
pop
or
mov
divb
ja
pop
iret
pop
jmp
out
aaa
pop
aas
out
negl
dec
xchg
jg
outsl
mov
inc
push
mov
pop
iret
pop
jmp
out
aaa
pop
aas
out
negl
dec
xchg
jg
outsl
mov
inc
mov
scas
out
ja
pop
lret
xchg
jmp
out
aaa
sbb
xlat
ss
negl
push
xchg
jnp
pop
mov
inc
mov
ja
pop
fists
jmp
outsl
aaa
pop
lock
out
subb
push
sub
sbb
push
je
out
pop
push
mov
lcall
outsl
lret
cmp
push
jp
dec
out
pop
mov
das
lcall
outsl
fidivrl
xchg
enter
ret
sbb
push
negl
into
setns
push
decl
add
adc
out
or
jae
outsb
pop
jp
nop
or
adc
aad
push
aad
pop
cmp
mov
aam
nop
fiadds
pop
adc
inc
mov
xlat
add
loope
jg
rclb
and
hlt
jg
or
mov
fsubrl
cld
pop
lahf
inc
lcall
outsl
out
not
push
pusha
out
push
imul
xchg
iret
jp
mov
pop
jp
out
mov
mov
jae
fcmove
nop
fisubrl
or
pusha
sub
lret
xchg
pslld
mov
cmp
mov
filds
xor
cli
aad
cmpsl
jmp
push
in
xchg
inc
xchg
jp
out
outsl
scas
cltd
addr16
shlb
mov
jno
insb
mov
dec
out
cld
out
mov
cld
ss
mov
jne
jle
lret
add
sbbl
pusha
jmp
pop
cwtl
sub
addr16
idivb
jnp
add
pop
xchg
mov
jnp
jp
dec
loop
xchg
aas
xchg
pop
mov
push
lahf
imul
cli
cmp
jp
dec
out
pop
ljmp
das
lcall
outsl
fidivrl
cmp
push
jp
dec
out
pop
ljmp
das
lcall
outsl
fidivrl
pushf
mov
sub
mov
and
clc
loopne
xchg
dec
jecxz
aaa
mov
ja
push
pushf
adc
jl
mov
fsubs
xchg
xlat
idivb
loope
stc
ret
push
aaa
adc
xchg
xchg
mov
mov
sub
push
ja
out
mov
sub
ds
insl
add
and
call
aas
popa
mov
mov
cmp
cmp
pop
cmc
ficompl
add
push
pop
lret
out
xchg
adc
fidivrs
mov
clc
lcall
je
and
push
adc
sbb
pop
push
mov
pushf
push
adc
scas
jecxz
jmp
popf
mov
sbb
cwtl
insb
push
jae
cmp
dec
repz
inc
push
push
mov
cmp
mov
pusha
imul
into
dec
add
xor
scas
dec
ret
stos
push
and
subb
pushf
cmp
lds
data16
mov
loop
test
sti
lret
mov
mov
jle
in
stos
adc
cmpsb
push
adc
cmp
lods
fucompp
sub
inc
mov
sbb
aaa
add
mov
push
shrb
cld
aas
insl
lea
mov
sbb
scas
fwait
ljmp
add
in
xor
pop
jno
clts
mov
pop
mov
xchg
sub
sbb
mov
mov
subl
mov
clc
or
popf
sahf
test
jbe
adc
sub
lods
mov
add
dec
adc
push
sbb
jge
push
mov
xor
xlat
mov
stos
pushf
fdivs
pop
and
push
insl
inc
dec
jmp
fiadds
cmp
jle
dec
mov
mov
ret
std
inc
and
inc
ja
test
jb
jae
jge
movsb
pop
adc
test
repz
inc
inc
mov
mov
enter
in
bound
outsl
inc
in
or
pushf
in
ds
jno
and
mov
and
jbe
add
pop
jp
lods
loop
jmp
icebp
stc
sbb
sbb
into
mov
mov
sbbb
pop
ret
ret
xchg
sbb
lock
cltd
and
icebp
or
in
rorl
add
inc
outsl
mov
xor
xor
shll
adc
arpl
push
push
mov
idiv
lock
in
and
sbb
xlat
out
push
ljmp
jae
jne
movsb
cmp
ret
xor
popf
or
xchg
cmp
fsubl
pop
cwtl
inc
nop
push
lock
fisubrl
or
in
mov
roll
hlt
inc
cmp
push
push
cs
add
push
das
jg
dec
fldl
pop
shll
dec
fistpll
lods
pop
cmp
push
jns
mov
xchg
subb
lods
sub
int
xchg
jecxz
xchg
or
loopne
mov
push
mov
push
scas
lock
testb
jg
xchg
fucomi
inc
ss
push
mov
out
adc
cltd
add
sbb
ja
mov
clc
std
cmp
out
dec
addr16
mov
push
sub
xor
add
xchg
fcmovnb
xchg
out
scas
jmp
arpl
sub
out
lods
sub
sub
xlat
fistpll
mov
lahf
test
ficoms
idivl
loopne
scas
inc
push
mov
loope
pop
les
jae
loope
lods
mov
push
and
push
lret
scas
jns
je
jne
and
push
loop
jp
add
push
jge
fcoms
outsl
or
push
xchg
pop
cmpb
nop
mov
and
inc
push
rcrl
adc
stos
sub
inc
and
mov
loop
mov
mov
ss
cmp
jmp
mov
outsb
xor
dec
xlat
divl
or
lret
mov
insb
pop
pop
pop
ret
pop
mov
andl
mov
mov
fcompl
push
fs
sbb
cltd
sbb
je
popf
stos
pop
or
xor
ljmp
add
das
adc
pop
lret
mov
pop
and
mov
push
cmp
jle
push
sbb
daa
pop
call
sti
test
repz
repz
lcall
aam
imul
lea
and
enter
stos
bound
and
sbb
xchg
xchg
and
cmp
pushf
lahf
mov
stc
jecxz
jno
cmp
pop
addr16
mov
leave
imul
jno
push
cmc
popf
loopne
js
cli
popa
loopne
mov
gs
test
and
test
push
push
push
shrl
mov
inc
cs
imulb
pop
popf
and
aaa
pop
test
icebp
mov
mov
iret
insl
js
cld
jg
push
pop
jl
lret
cmpsb
jne
stos
jmp
jnp
mov
addr16
bound
add
pop
cld
cmp
stc
hlt
iret
sahf
xchg
js
inc
dec
adc
xlat
cmp
pop
imul
add
sub
xchg
mov
data16
add
inc
das
arpl
std
push
mov
push
sub
push
pop
add
mov
add
fidivs
mov
lret
es
shl
add
push
push
inc
jg
xor
movsl
mov
push
movb
cld
data16
mov
push
or
push
test
lea
repnz
push
enter
pop
cmc
inc
jbe
pop
sbb
ss
cmc
ror
jno
mov
loopne
or
mov
jecxz
pop
adc
jno
jp
fs
in
dec
sub
mov
cwtl
roll
lods
bound
repz
out
mov
icebp
dec
je
sarl
loope
push
mov
cmpsb
sub
adc
jmp
loopne
jbe
sbb
sub
js
jge
cmpsb
inc
inc
das
xor
adcl
jmp
push
xchg
dec
push
cwtl
cs
push
mov
pop
jecxz
and
je
out
repnz
add
dec
jle
shrl
mov
sbb
imul
stos
jl
cltd
or
aas
jns
out
sub
stos
inc
arpl
xchg
pop
push
lods
rcrl
out
jo
stc
outsb
xor
test
mov
sub
in
or
ja
js
data16
inc
xchg
ds
and
inc
es
es
test
into
inc
int
cmc
aad
sub
lods
push
xor
addl
scas
sbb
icebp
cmp
enter
sti
sbb
lock
fidivrl
ficomps
xlat
aaa
mov
inc
sbb
cs
jns
jne
sbb
movsl
sbb
add
fxam
sarb
mov
push
out
mov
out
xlat
popa
hlt
cli
mov
add
loop
ret
stos
jge
icebp
mov
std
hlt
adc
add
cmc
dec
xor
xor
popf
jb
jecxz
cli
or
pcmpeqd
fcmovb
xlat
loop
xchg
inc
sbb
int
ffreep
test
cmp
filds
aaa
mov
sub
inc
pop
ja
jecxz
pop
add
popa
adc
cs
mov
and
std
ljmp
addl
in
les
pop
add
xlat
mov
les
les
test
fucomip
mov
gs
mov
fstps
fldcw
sbb
jl
sub
jmp
icebp
popf
pop
mov
loop
mov
xor
jmp
fs
add
ret
mov
push
add
mov
dec
insb
sub
aam
lods
out
lods
push
or
mov
and
mov
test
mov
cs
mov
cmp
lret
orb
push
mov
mov
mov
or
xchg
jno
mov
popf
lret
dec
push
cltd
pop
sub
std
jl
cmpsb
je
mov
pop
xchg
mov
mov
xor
cmp
dec
popa
jbe
push
dec
pushf
int
jp
adc
xchg
cwtl
dec
cmp
cltd
or
insl
ss
arpl
push
adc
inc
addr16
lret
jge
or
out
bound
hlt
leave
fistpl
or
jmp
imul
inc
mov
mov
and
sbb
jmp
pop
gs
dec
xor
lods
mov
mov
aam
add
push
add
movsl
add
dec
das
pop
push
cs
not
sbb
jno
add
andl
add
mull
cmpsb
inc
frstor
push
adc
rolb
xor
push
cmpsb
out
ljmp
mov
mov
xor
add
add
pop
insb
mov
push
hlt
iret
sbb
push
or
mov
inc
add
into
or
je
icebp
mov
cmp
das
mov
lret
ror
mov
adc
icebp
or
lock
cmp
or
inc
mov
push
or
jl
fsts
mov
les
jp
daa
mov
in
je
in
int
inc
dec
mov
mov
icebp
push
add
jbe
mov
loop
or
sbb
pop
fbstp
test
popa
fwait
sbb
mov
xchg
das
lret
leave
dec
lahf
loope
jge
stos
cmpsl
or
mov
add
jp
jno
or
adc
pop
sti
add
and
ds
and
cmc
daa
mov
aam
push
test
subb
dec
sub
hlt
mov
mov
and
iret
inc
push
xor
nop
inc
dec
add
lret
pop
ret
xchg
xchg
outsl
out
pop
pop
lock
jne
aaa
mov
in
imul
add
xchg
and
mov
mov
pushf
push
mov
out
cwtl
and
movsb
addr16
push
jle
add
gs
lret
es
aam
test
push
xchg
or
cltd
cmp
cmp
mov
test
lret
test
outsb
sub
arpl
or
mov
inc
add
sub
enter
call
iret
mov
shrl
xchg
ja
pop
jp
mov
dec
push
dec
jge
pop
std
or
sub
sbb
jle
jnp
mov
push
iret
fisubl
stos
fdivrp
ret
pusha
ljmp
scas
jbe
mov
mov
inc
jnp
in
sti
mov
mov
adc
dec
ficomps
cwtl
scas
jmp
push
or
aas
mov
add
cmp
adc
jecxz
mov
inc
xor
mov
stos
notb
int
hlt
xchg
push
aaa
cltd
add
mov
xchg
rcll
out
bound
jl
add
mulb
imul
push
repz
popa
cmp
pop
mov
fs
mov
xor
push
push
notl
dec
stos
push
jns
sahf
or
imul
and
mov
testl
and
push
push
pop
sub
ja
jb
dec
fdivr
jnp
psrld
movsw
je
and
loop
jmp
inc
mov
push
loopne
into
mov
xchg
xor
or
jecxz
or
outsl
mov
lods
clc
add
push
vshufpd
push
sbb
sbb
mov
xor
shlb
pop
add
stos
mov
jl
xlat
and
xor
adc
adc
fs
andb
jae
cmpsl
int3
cmpsl
and
gs
dec
add
cmp
test
cmp
sahf
push
mov
lahf
and
lcall
xlat
sub
add
int
mov
xchg
test
push
push
loope
jbe
pop
ret
insl
sbb
outsl
sbb
cltd
sbb
or
cmp
push
enter
pop
xor
jecxz,pn
adc
popf
repz
notb
jne
add
xchg
jle
inc
dec
pop
pop
lods
lahf
sub
shl
outsl
repnz
xchg
jb
push
ret
and
mov
stos
mov
inc
rdtsc
cli
sub
adc
jb
fisttpl
jmp
lcall
fnsave
xchg
push
popa
dec
ljmp
lods
sub
mov
xchg
out
push
in
xchg
lea
jns
and
fwait
push
push
push
xor
pop
lods
sbb
jnp
lock
rcl
jne
sahf
cmpsl
jbe
mov
jne
mov
les
dec
or
cmp
cmp
testb
cmp
adc
and
or
mov
sti
mov
sarb
jae
lret
xchg
mov
adc
or
and
daa
int3
xchg
inc
cmp
add
mov
xor
push
fstps
std
je
les
jle
fildl
jne
lds
imul
int
jge
mov
aas
cmpsl
ret
sbb
jp
xor
sti
lods
lds
loop
sti
jo
push
or
dec
pop
into
addl
xchg
adc
call
dec
dec
mov
add
jge
stos
jg
out
dec
ds
add
popf
arpl
push
push
add
iret
out
and
add
int
cmc
es
push
aam
xchg
sub
cmp
imul
nop
les
insb
mov
je
fisttps
lcall
lods
jae
out
ret
push
adcl
sahf
xlat
int
pop
les
mov
iret
fcoms
add
fists
xorl
xchg
andl
aaa
iret
gs
in
mov
fwait
loope
fistpll
mov
dec
cli
mov
pop
aas
sbb
mov
lods
int
movsl
mov
xor
scas
mov
rol
adcl
rcl
push
sbb
das
es
pop
fadd
faddl
jle
in
popf
dec
mov
xchg
clc
notl
mov
sti
mov
out
add
sub
mov
xor
imul
jne
xlat
cmp
jns
cmc
pop
cmpb
andps
sbb
ds
sub
push
jbe
loop
sti
pop
xor
lods
mov
add
dec
ret
mov
lea
jns
add
hlt
imul
fs
inc
out
fistps
mov
push
dec
fnsave
sahf
jle
sub
movsl
lret
int
and
mov
gs
repz
in
sub
in
ss
push
dec
inc
mov
adc
mov
mov
repz
outsl
cli
pop
popa
cmpsb
and
out
or
shrb
fdivrs
divl
xor
add
xchg
mov
jmp
and
jmp
lds
mov
or
inc
les
cmp
addr16
das
int3
cwtl
lcall
sti
fwait
cld
push
stc
xor
mov
mov
je
xor
xchg
jecxz
bnd
mov
stos
seto
mov
push
test
js
out
xchg
add
in
jnp
xor
adc
sbb
lahf
test
data16
fisubl
adc
addb
clc
inc
cld
std
dec
pop
jbe
adcb
inc
jbe
mov
mov
mov
push
loopne
cmp
roll
incb
repnz
daa
fistpll
mov
sbb
dec
dec
adcb
mov
cld
push
jmp
jnp
mov
leave
out
fisubl
out
jp
pop
xlat
andl
pop
stos
mov
mov
leave
adcl
hlt
je
sti
push
dec
add
fsubp
sub
sbb
bndstx
int
jne
inc
call
mov
mov
push
inc
cld
mov
and
and
das
imul
leave
pop
jne
loop
sbb
sub
test
mov
mov
in
cwtl
call
push
jno
pop
outsb
sbb
dec
pusha
cmp
in
jnp
mov
test
mov
cmp
adc
or
pop
xor
repz
add
inc
add
mov
jge
imul
mov
inc
ret
into
addb
sbb
push
sbb
pop
xor
or
lea
add
lods
mov
dec
mov
push
inc
pop
push
inc
cld
les
jae
pop
setnp
xchg
push
push
sbb
pop
insb
ror
gs
pushf
test
mov
mov
add
cs
cmp
ja
jno
and
js
add
pop
lret
xor
iret
sbb
lret
hlt
outsl
int3
aas
stos
imul
inc
scas
aaa
cmp
mov
insl
es
inc
dec
and
mov
pcmpeqw
xchg
jno
pusha
lds
pop
jl
add
mov
lret
sbb
push
mov
test
lea
push
pop
xor
std
or
dec
xlat
sarb
fwait
sbb
dec
sbb
fisttpl
repz
jle
aam
jl
mov
pop
movsb
adc
andb
pop
dec
repz
xchg
popa
loopne
lds
jns
and
mov
cmp
icebp
mov
and
filds
faddl
lahf
and
push
inc
int3
andl
xchg
mov
pop
das
xchg
test
xchg
add
xchg
jmp
aas
addb
mov
stos
addr16
dec
pop
sbb
jns
pop
bound
cwtl
jmp
stc
sti
int3
xchg
adc
addr16
out
cmpsl
push
mov
scas
test
pop
lahf
test
add
mov
cmc
lods
lret
pop
mov
mov
mov
inc
pop
mov
or
enter
add
add
lds
jo
xchg
dec
ret
cs
pop
into
jmp
jns
outsl
cmp
mov
mov
std
js
je
and
add
fdivs
jns
stos
push
push
jge
and
push
mov
aad
dec
xor
push
xchg
sti
lcall
xchg
pop
push
inc
popf
pop
add
cmpsb
aaa
xorb
and
sbb
add
pop
loop
mov
cmpb
lahf
xchg
dec
sbb
and
aas
jb
mov
idivb
cltd
stos
rolb
and
lret
mov
insb
adc
std
and
jmp
insl
cmp
cmp
cmpsb
sub
pop
adc
pop
stos
or
sbb
dec
jmp
sub
sbb
repnz
jb
ja
sbb
xchg
orl
cltd
mov
in
push
push
jb
jno
jno
or
mov
out
movsl
test
push
aam
xchg
cmc
mov
call
das
push
aad
lods
adc
and
data16
pop
inc
jns
sub
xor
imul
xchg
rorb
dec
dec
iret
lock
inc
in
nop
aas
stos
cwtl
sub
jle
ret
daa
push
and
popa
test
xchg
cltd
sbb
mov
aaa
adc
pusha
push
js
xchg
push
or
inc
add
lret
inc
jg
lds
sarb
xor
lcall
xchg
fisubl
push
cmp
insl
andl
mov
je
sahf
shll
cmp
jl
mov
add
popa
jnp
dec
mov
arpl
jb
or
xor
cs
arpl
xchg
jno
push
movsl
popa
jne
sub
push
mulb
outsb
addb
sub
rcl
iret
jae
test
add
test
sarb
push
addr16
xor
aad
repz
cmp
cmpsb
jne
xor
jg
pop
xor
mov
push
cmpsl
jbe
cltd
cmp
aad
hlt
mov
into
js
mov
cmpl
and
call
sbb
outsl
or
sbb
mov
mov
ja
jecxz
int
push
lea
inc
bt
push
enter
xchg
sti
mov
shll
jl
push
fstpl
cmp
inc
sub
cmpsl
mov
mov
clc
mov
adc
subl
dec
pusha
push
les
inc
ljmp
xchg
mov
adc
sahf
pop
fimuls
subb
push
lahf
jmp
jns
xchg
outsl
xlat
mov
leave
dec
ficoms
aaa
test
xchg
mov
mov
pop
sub
or
cmpsb
sbb
out
test
pop
jb
lods
xlat
lahf
push
jb
xchg
sbb
aam
fistpl
test
cmp
dec
int
dec
and
jp
ljmp
dec
lea
inc
pop
sbb
mov
mov
inc
lret
orl
fsubrp
inc
push
in
jp
dec
icebp
sbb
jge
orl
cmpsb
andb
lret
test
xchg
fnstenv
rcrb
into
addr16
push
test
pop
add
ja
mov
loope
aaa
jmp
insb
cmp
mov
add
dec
cwtl
movsl
jns
xorb
bound
jb
sbb
loope
xchg
clc
xlat
mov
mov
mov
mov
stos
xor
adc
jo
push
cmp
in
ljmp
cmc
gs
and
jge
pop
lahf
add
shlb
lcall
fwait
add
inc
negb
dec
mov
in
pusha
int
push
out
sahf
mov
push
mov
in
stos
cmp
insl
jb
jecxz
sbb
sub
js
ret
mov
sbb
push
dec
sub
sete
movl
js
icebp
mov
xchg
mov
jbe
dec
xchg
xchg
mov
scas
sbb
dec
out
pop
ljmp
das
lcall
outsl
fidivrl
cmp
push
jp
dec
out
pop
ljmp
das
lcall
outsl
fidivrl
scas
sbb
dec
out
lcall
das
lcall
imul
mov
push
stos
cmp
dec
out
fidivrl
stos
cmovne
popf
jb
xor
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lahf
repnz
mov
mov
add
or
add
add
add
add
add
pop
add
xor
mov
addb
add
pusha
add
add
ja
dec
add
add
add
aaa
add
add
add
lea
aaa
add
sub
cmp
mov
repnz
add
add
add
add
add
add
add
stc
add
add
add
dec
add
add
add
add
mov
inc
add
cmp
mov
add
outsb
add
add
aam
sub
sub
xchg
add
add
add
test
mov
xchg
add
add
add
add
add
lret
add
add
add
add
aad
outsl
add
flds
inc
add
mov
lea
or
xor
add
jbe
add
jns
jge
xchg
add
add
add
add
add
add
add
add
rolb
add
inc
or
add
outsl
add
add
movsl
add
or
add
add
add
add
add
add
ret
add
add
roll
jns
pop
add
mov
add
add
add
add
pop
add
add
js
and
add
jns
int3
add
lea
mov
add
xchg
add
add
add
add
add
add
dec
add
add
cmp
roll
aam
xor
sahf
add
add
add
add
add
add
add
int3
add
roll
sahf
add
adc
dec
add
add
add
or
jl
cmp
add
jbe
xchg
add
add
add
add
lea
aam
or
insl
add
add
add
add
add
cmp
inc
add
xchg
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
sub
loop
adc
add
roll
data16
add
add
add
add
in
add
aam
pop
add
int3
add
add
add
lret
add
add
add
add
add
mov
ret
add
add
aaa
add
add
add
add
add
add
pop
add
add
add
add
jns
pusha
add
add
incb
pop
add
dec
add
out
add
add
pop
add
add
add
add
gs
mov
clc
add
sbb
outsb
add
gs
xor
nop
add
add
add
dec
add
add
add
add
add
add
mov
add
add
add
add
mov
add
roll
loop
dec
add
xor
add
repnz
or
inc
add
xchg
xor
fiaddl
inc
add
add
add
add
add
add
in
add
add
add
add
cmp
sub
or
mov
mov
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
add
lret
xor
xchg
ja
ljmp
inc
lahf
mov
xchg
pmovmskb
ret
push
add
jmp
inc
add
int3
int
ljmp
scas
rol
or
xor
addr16
in
xor
dec
aaa
lcall
inc
and
adc
repnz
dec
adc
pop
xchg
das
inc
jb
xchg
sbbl
mov
xchg
lret
test
mov
add
jnp
mov
push
lock
inc
icebp
cmp
dec
jb
inc
pop
nop
cmp
sbb
jmp
fcoms
in
adc
movsb
xchg
scas
cltd
scas
dec
push
leave
pop
inc
adc
cmc
adc
mov
add
call
inc
adc
mov
jbe
setg
int3
fnstenv
into
sub
pop
and
fisubrl
push
pop
inc
pop
adc
xchg
xchg
test
loope
mov
add
jmp
cmp
sub
popf
xor
cld
xor
sti
testl
adc
push
jl
bound
sahf
cmp
xchg
call
es
lods
xor
add
cld
xor
cmp
jbe
mov
mov
outsl
mov
jecxz
iret
mov
stc
sbb
loope
cs
inc
fmuls
pushf
push
shr
scas
mov
sti
cltd
pop
push
ret
mov
in
mov
cmp
jp
mov
or
outsb
lret
jge
pop
and
bound
dec
sub
lahf
jbe
outsl
cmp
cld
add
in
ret
outsb
fs
push
mov
mov
shr
push
dec
leave
sbb
xor
arpl
pop
cmp
testb
int3
loopne
inc
and
stc
dec
and
sub
mov
push
push
lahf
hlt
sbb
fwait
mov
cmpsb
shll
das
dec
sub
call
push
or
jle
dec
push
lds
mov
out
inc
jge
jge
scas
adcb
cmpsl
in
jne
jge
rcrb
cmp
mov
fcompl
lcall
subb
int
cmp
daa
and
add
mov
jo
dec
test
add
sub
arpl
rcrl
xchg
aas
out
jnp
xchg
pushf
pop
repnz
sbb
loopne
xchg
ss
jae
imul
dec
mov
daa
cwtl
mov
mov
push
xchg
ret
in
mov
ds
mov
cmp
pop
mov
lods
mov
shlb
cs
adc
sub
inc
push
push
testl
push
push
cmp
ljmp
push
adc
mov
adc
xor
push
sbb
or
adc
jb
xlat
or
sbb
inc
je
bound
sbb
lahf
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
