fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
mov
arpl
sub
out
insb
dec
push
jp
add
lods
rcr
mov
sub
xchg
in
sbbl
arpl
xor
adc
decl
fadd
int3
mov
sbb
or
cmp
sub
pop
sub
or
repz
movsl
xlat
fsub
sub
aas
or
jo
jl
xlat
sti
insb
loop
lock
in
sbb
xlat
std
rcl
pop
sub
jae
jmp
pop
inc
inc
shl
in
sbb
jmp
andl
and
xor
hlt
arpl
cltd
out
or
sbb
mov
sbb
repz
ljmp
sbb
test
pushf
sbb
rclb
xor
pushf
insb
xchg
inc
dec
cmp
lahf
es
insb
out
loope
repz
outsl
lods
cmp
mov
inc
push
jl
insb
imul
stc
sbb
sub
jns
adc
in
or
mov
test
xchg
pop
mov
sub
cmp
fwait
int3
inc
std
xchg
in
test
or
cmp
sub
pop
xor
adc
repz
mov
stos
int3
mov
push
bound
pop
xor
inc
cmp
data16
pushf
jecxz,pt
xlat
enter
andb
sbb
dec
and
xor
insl
jl
adc
into
xchg
xchg
mov
rcll
repz
and
aaa
or
sbb
adc
repz
mov
mov
mov
sbb
or
cmp
sub
pop
xor
adc
repz
mov
mov
mov
sbb
or
aam
inc
das
mov
cwtl
sbb
push
pop
aas
lret
icebp
xchg
fldl
pusha
loop
dec
jl
out
testl
xchg
cmp
repz
stos
push
stc
nop
fdiv
sub
xchg
xchg
aam
out
and
add
je
decl
push
fisubrl
mov
dec
dec
push
and
cmpsb
jb
sbb
xchg
fwait
popa
push
pop
aaa
mov
inc
adc
add
test
leave
jo
lea
out
bound
xchg
lea
jecxz
fbld
std
mov
mov
cmp
pop
hlt
out
mov
mov
out
icebp
js
cmp
cmp
jae
lea
mov
ljmp
or
lds
je
mov
fs
push
dec
xchg
repz
lcall
in
test
pop
rcl
adc
push
mov
pushf
adc
lret
rolb
sub
adc
xchg
std
dec
mov
lock
mov
mov
add
fistpll
jno
sub
push
xchg
jge
add
inc
xchg
mov
lcall
mov
pushf
scas
add
cmp
push
jge
out
clc
add
js
test
fisttpll
scas
fwait
push
int
inc
mov
call
cmp
sarl
ljmp
pop
mov
ret
mov
and
xchg
sti
lods
in
push
push
call
or
jmp
and
jbe
js
add
clc
dec
sahf
in
pop
push
pop
jge
test
repz
icebp
adc
mov
imul
std
lret
mov
fcomps
repnz
jne
lock
push
das
jb
cmp
mov
jp
dec
inc
das
adc
call
mov
sub
dec
xchg
sub
cs
ret
fildl
xlat
cmc
mov
mov
mov
fisubrs
hlt
mov
insl
and
mov
in
ss
test
xchg
xchg
aad
notb
mov
add
or
outsb
or
mov
jae
sub
and
push
in
ja
push
int3
cmp
aam
mov
shll
sbb
and
adc
leave
lock
sub
inc
mov
out
cmp
mov
mov
decb
sbb
push
mov
inc
out
xor
cmp
jae
divb
mov
push
cmp
xchg
mov
pop
adc
sbb
mov
imul
std
lret
cmp
mov
mov
notb
inc
push
gs
cli
mov
rclb
les
outsb
out
pop
cmp
orl
ja
pop
or
mov
mov
and
in
cmp
xor
ret
ds
add
jp
pushl
scas
shrl
movsl
sbb
repnz
jns
test
sbb
int3
dec
out
and
inc
fnstsw
lret
mov
dec
add
mov
lods
enter
add
gs
pop
cmp
enter
repnz
pop
add
cmp
cmpsb
pop
push
cmp
lods
pop
into
mov
cmpsl
ret
fcmovne
jmp
or
sub
int3
pop
pop
in
jno
loopne
push
pop
subb
mov
sub
shlb
movsl
jmp
in
sbb
ss
sbb
and
push
xlat
mov
lret
push
iret
and
xchg
and
sub
mov
insl
or
dec
and
stos
ljmp
jb
test
rcll
lret
push
adc
mov
dec
xor
mov
pop
xchg
cmc
out
in
cltd
fldcw
jle
les
adc
or
pop
push
mov
outsb
sti
lcall
ret
cld
mov
shl
std
cmp
adc
shlb
cmp
ret
out
flds
ret
push
cmpsb
pop
push
jbe
mov
outsl
cwtl
out
lea
fcoml
pop
aad
jge
add
ljmp
mov
and
fimuls
cmp
sub
mov
pushf
jae
inc
ficoml
lods
dec
bound
inc
loopne
nop
dec
stos
push
ja
out
lea
jp
pop
insb
pop
cmpl
sbb
loope
outsl
xor
push
mov
shll
lea
pop
jne
mov
mov
shrb
or
add
call
and
scas
cwtl
mov
stos
pop
sub
daa
jns
jl
or
insl
mov
lds
lods
mov
mov
scas
js
jne
scas
in
adc
adc
jno
or
cmp
clc
js
std
push
test
aad
nop
test
aas
insl
push
and
jg
pusha
sbb
rcr
cmpl
jmp
mov
mov
dec
xchg
jmp
inc
mov
ljmp
sbb
arpl
mov
push
gs
mov
dec
inc
mov
push
and
xchg
push
nop
fwait
stc
dec
xchg
icebp
cmp
push
sbb
push
xchg
push
insl
mov
xchg
add
icebp
mov
mov
popf
insl
shl
jae
imul
adcb
inc
mov
clc
repz
push
xchg
or
in
xlat
pop
adc
rcr
in
mov
fwait
and
mov
sahf
or
ret
gs
sbb
jne
rcl
ljmp
sbbb
fs
push
jp
adcb
mov
lea
fwait
repnz
rolb
movsl
mov
xor
shll
cmp
inc
jp
fwait
sbbb
push
xchg
scas
jne
clc
jp
lahf
loopne
fstl
shl
shll
xchg
outsb
sub
mov
mov
sbb
repnz
cmp
fst
cmpsl
lahf
jle
push
mov
push
xor
add
cmpsb
cmpsl
mov
adc
xchg
pop
out
jge
mov
push
ret
pop
lods
shlb
clc
add
in
push
incb
sbb
sbbb
repnz
mov
jno
fwait
sbb
imul
stos
in
xchg
jg
leave
pop
lds
xorl
jl
sbb
jl
jbe
fmull
cmp
stos
pop
out
bound
gs
inc
xor
push
mov
and
int3
int3
push
cmpsb
lret
jle
mov
jge
repnz
shll
lret
test
jno
mov
ss
xlat
jb
mov
pop
dec
pop
xchg
adc
inc
lea
sub
pop
loop
dec
cmp
xchg
test
jg
and
ljmp
mov
in
sbb
pusha
jl
dec
cmp
pop
push
dec
lods
enter
jp
sub
pop
hlt
call
dec
sub
and
std
mov
fisubl
mov
adc
icebp
lock
push
push
jg
ds
sub
mov
push
das
flds
add
fs
shufps
inc
jge
push
cmp
aas
popa
xchg
cwtl
pop
ljmp
adc
dec
jp
push
test
test
jo
sarl
and
mov
popa
pop
pop
inc
pop
dec
inc
mov
inc
xor
mov
xor
es
xor
roll
or
mov
fistpl
and
outsl
xor
jnp
push
cs
lea
mov
into
rcrl
lods
loopne
ljmp
pop
decb
dec
jl
mov
and
daa
lock
cld
push
push
insb
sub
add
xchg
or
cmpsb
frstor
mov
cmp
mov
push
xlat
adc
mov
sub
and
sbb
jnp
mov
push
sahf
clc
sbb
hlt
gs
ja
icebp
out
sbb
les
stc
jae
outsl
jbe
and
jb
or
sbbb
fmuls
mov
cld
outsl
jae
cmp
ljmp
xchg
mov
sbbb
inc
das
jle
mov
sbb
out
xlat
shrb
popf
leave
cmp
adc
iret
stc
ss
pop
and
cwtl
or
pop
daa
ret
stos
data16
jno
orl
mov
rolb
cmp
and
fsubrs
adc
mov
mov
add
mov
or
or
rorl
in
xchg
mov
or
les
xor
dec
push
sbb
sub
adc
xchg
adc
xlat
pop
lcall
test
or
pushf
mov
mov
rcrb
sub
and
mov
or
or
mov
jl
and
fldl
pop
pop
insb
out
enter
push
jnp
test
pusha
push
add
mov
jg
aaa
push
push
imul
dec
pop
outsl
jbe
mov
test
jge
in
jge
mov
insl
subb
sti
insb
ds
mov
dec
mov
decb
bound
add
inc
dec
xor
imul
aas
dec
lods
mov
and
cmpsb
in
popl
fistpll
xchg
frstpm(287
mov
pop
mov
cwtl
outsl
ljmp
xchg
int3
mov
xchg
fbld
ljmp
loope
int3
gs
push
std
jp
aas
mov
test
ret
mov
lea
sbb
jg
into
pushl
aad
dec
mov
jecxz
clc
sbb
add
pop
push
push
sbb
fsubr
fcomps
sub
adc
mov
movsb
push
data16
ret
test
mov
pop
adc
adc
cmpb
js
nop
adc
repz
jl
or
or
ja
jge
jae
icebp
das
dec
mov
and
subb
inc
jl
fwait
push
ret
test
test
outsb
cmp
cmp
xchg
push
aaa
add
je
fdivp
enter
test
mov
xchg
aad
scas
pop
jg
mov
aaa
dec
lods
jl
mov
xchg
mov
fwait
rcr
aad
inc
lea
add
xchg
out
mov
xor
xchg
xor
in
inc
in
clc
sarb
stc
lret
mov
jo
pushl
pop
jae
xor
pop
mov
orb
mov
or
jo
sbb
mov
jg
mov
inc
in
mov
fistpll
and
shufps
fbstp
test
pusha
ret
jle
push
mov
mov
mov
loope
cmp
outsl
xchg
mov
dec
enter
push
lods
cmp
nop
xchg
pop
jno
test
xchg
sbb
fwait
xor
popa
mov
aaa
mov
lret
int
xor
xchg
insb
test
cmp
addr16
lahf
fstpt
ss
push
movsb
test
inc
xchg
mov
jb
cltd
or
push
adc
push
cmp
jo
or
pop
sbb
push
push
outsl
das
nop
cmp
nop
mov
js
dec
mov
div
jecxz
insl
movsb
lret
and
scas
jmp
test
dec
adc
mov
fs
inc
lea
out
dec
mov
push
inc
subl
dec
cld
ret
jl
sbb
cmc
mov
or
cmc
mov
sub
dec
add
mov
sub
and
sahf
xchg
std
pop
or
or
push
cmc
jl
or
push
pop
push
imul
xor
lea
out
mov
fstpt
movsl
mov
adcl
stc
mov
mov
xchg
addr16
push
dec
sarb
clc
jno
rorl
cmc
aam
div
mov
jp
outsb
jbe
jnp
pop
sarb
mov
mov
into
lea
lea
inc
ret
xchg
lahf
fwait
and
int3
std
xchg
imul
jecxz
jmp
testb
dec
pop
jne
mov
cmp
lock
pop
outsb
hlt
test
pop
xchg
lret
mov
out
cmpsl
lahf
cli
and
ror
shr
insb
xchg
lock
fisubrl
je
enter
js
imul
and
rcrb
icebp
sbb
xchg
sub
add
fsub
sbb
dec
or
inc
mov
sahf
push
lds
mov
add
pop
jecxz
out
loopne
inc
fs
xor
mov
shl
in
mov
xchg
sub
inc
xchg
addr16
jo
xor
fucomp
fidivl
imul
mov
repz
aas
xchg
addb
cltd
sbb
mov
jg
jb
shll
pushf
imul
lea
inc
rcl
repz
data16
mov
lods
mov
into
or
mov
sbb
insb
lcall
sub
mov
xorb
dec
out
pop
adcb
mov
add
inc
ret
add
jge
mov
stc
mov
fstpl
fisubrl
ja
out
push
enter
idiv
jmp
xchg
popa
lock
aas
or
shll
pusha
je
fadd
outsb
aas
call
inc
mov
mov
imul
cmp
pop
clc
icebp
mov
pop
xor
sarb
and
xlat
jmp
push
cs
cmp
or
jge
cmp
add
mov
shlb
in
mov
in
push
lea
push
call
jmp
int3
imul
jb
repnz
sbb
and
dec
pop
dec
fwait
or
jo
lea
xlat
mov
add
loop
subl
fdivrs
cmp
pop
dec
out
fcos
cmp
mov
mov
and
in
gs
mov
clc
mov
push
loopne
and
adc
dec
xor
add
xor
cmp
mov
mov
rcpps
rorl
jp
into
xor
scas
push
adc
shlb
clc
inc
lds
aaa
loop
std
cmc
cmpsl
inc
fcomip
in
jno
jmp
ret
cmp
loop
imul
iret
and
into
jl
mov
ret
push
xor
negl
es
insl
adc
mov
cmp
ja
test
jo
fdiv
jge
lahf
xchg
cli
hlt
rorl
shll
ret
or
mov
push
add
pop
cmc
sub
adc
xchg
mov
lret
add
mov
xchg
test
mov
xchg
movsl
inc
ret
aad
out
sub
push
mov
jle
sbb
mov
adc
out
add
dec
mov
ja
and
jge
sub
cwtl
lahf
dec
pusha
mov
repz
push
add
out
shrl
aad
and
xchg
xor
cmpsb
jmp
stos
push
sbb
insb
pop
push
pop
lcall
aam
nop
or
push
rclb
shl
pop
les
es
cwtl
xchg
adc
and
xchg
sbb
and
inc
push
mov
cltd
adc
adc
scas
adc
cld
fnstcw
jnp
notb
xor
or
icebp
add
mov
rolb
jne
mov
in
jle
dec
lock
movsb
mov
mov
push
leave
orb
or
aaa
lods
mov
ja
inc
xchg
sbb
xorb
lds
jne
hlt
add
pushf
clc
mov
jo
rorl
dec
std
mov
dec
mov
rorb
jae
pop
push
std
mov
push
pop
jne
es
lods
test
pop
sub
mov
push
stc
xchg
and
dec
cmc
aam
pop
jbe
mov
ja
xchg
push
dec
cmpb
add
dec
mov
shl
into
xchg
rolb
divb
mov
xor
sbb
nop
xchg
sbb
jo
or
push
fdiv
stos
shl
sbb
or
xor
repz
push
ss
rolb
fisubs
repz
push
push
sbb
sti
jge
push
cs
fwait
jecxz
popf
and
jmp
sbb
adcl
push
inc
sub
rcl
es
arpl
loop
add
add
imul
jno
jo,pt
fdivrl
ficoms
xor
mov
mov
rcrb
addl
cmp
jge
imull
arpl
dec
inc
add
lcall
jne
gs
jmp
xor
les
std
fildll
fs
enter
cld
shll
lret
fwait
dec
add
test
ficompl
pop
scas
into
adc
jmp
push
clc
dec
lret
cmp
sbb
popf
xchg
popf
fdivrp
gs
repnz
cmpsl
adc
pop
repz
stc
adc
les
push
jmp
scas
les
lds
pop
daa
arpl
fcompl
in
andb
or
jne
dec
or
mov
cmp
arpl
mov
nop
jecxz
cltd
xor
dec
scas
jne
adc
or
aaa
cmp
hlt
add
pop
pusha
jge
sbb
cwtl
shrl
imul
push
or
cmp
mov
jae
push
repz
add
fnstsw
shrl
sub
into
dec
push
mov
add
inc
jb
jo
pop
das
flds
cmp
imul
push
and
mov
lock
loopne
popa
cmp
dec
push
movsb
push
mov
sub
cmc
adc
fstps
daa
inc
pop
rcrl
jne
daa
xchg
inc
ja
rol
xor
cmp
aaa
lock
imul
add
add
es
fs
sahf
pop
sub
scas
lock
int3
cmp
stc
dec
pop
imul
sub
out
lods
insb
xchg
pop
call
das
cwtl
mov
popf
sti
bound
movb
and
imul
adc
lds
into
call
mov
ja
mov
int3
xorb
mov
popf
push
and
gs
pop
add
les
xchg
sub
dec
jae
ret
repnz
sub
pop
ret
jp
push
or
jmp
mov
popf
dec
popf
xor
pusha
xlat
adc
movsl
js
adcl
push
movsl
pop
movsl
or
inc
cmpsb
dec
pop
clc
jecxz
cmovae
mov
lcall
mov
inc
js
cmp
mov
sbb
sti
fisubl
jge
adc
xchg
mov
mov
mov
daa
sub
nop
cmp
or
or
mov
fwait
sbb
adc
frstor
jae
jae
shll
xchg
cld
push
fildl
or
ficompl
jmp
mov
movsl
aam
pop
movsb
xlat
out
mov
cwtl
and
mov
cs
jmp
pushf
aaa
js
pop
mov
xchg
pop
sbb
addr16
fnstenv
arpl
ror
sbb
pusha
mov
inc
jp
lea
fimuls
mov
repz
mov
iret
aas
adc
mov
mov
hlt
mov
add
pushl
jge
lret
in
int3
cwtl
mov
sub
lods
popa
push
imul
pop
and
aad
repz
sbb
ja
inc
inc
sbb
test
push
xchg
call
pop
xchg
rclb
gs
sub
fwait
imul
push
lock
jp
shrl
or
aam
xchg
idivl
ja
cli
xor
movsb
andb
mov
mov
test
arpl
xchg
out
iret
push
mov
adc
jle
in
cmc
out
inc
scas
push
movsb
xchg
or
dec
subb
xchg
jno
inc
mov
mov
in
sub
mov
push
nop
stos
les
adc
xor
and
cwtl
stos
push
lea
jle
aaa
push
shll
inc
cltd
xor
scas
nop
mov
in
ret
pop
cli
imull
call
jg
jno
jecxz
scas
nop
ds
mov
hlt
js
xchg
mov
fdivs
mov
stc
pop
into
bound
pop
adc
adc
ret
sbb
ja
stos
in
inc
es
lret
jmp
adc
mov
mov
call
dec
mov
push
scas
out
mov
jns
ss
add
cmp
repz
mov
adc
in
jmp
loope
push
lea
aaa
cmp
les
in
pop
push
adc
sarl
push
jp
or
gs
lds
es
orl
dec
cld
jo
mov
loop
push
gs
add
or
testb
fadds
out
push
sbb
sub
xor
pop
jl
rolb
jmp
mov
adc
scas
jno
xchg
push
insb
idivl
xor
cld
and
xchg
mov
and
cli
inc
les
repnz
inc
stc
out
ljmp
ret
dec
mov
push
xor
mov
loopne
inc
sbb
js
cmp
call
add
dec
add
cmp
cmp
xor
mov
push
adc
pop
or
xchg
jae
arpl
int3
add
in
mov
into
xchg
cmp
das
mov
scas
shrl
and
aam
aam
sub
int
call
pop
xchg
popa
sbb
inc
les
jno
into
fidivrl
hlt
jge
outsl
addb
pop
dec
jp
push
pop
jg
sbb
ret
sbb
arpl
test
cmp
icebp
xchg
repz
fstpt
xor
or
movsl
xor
addb
xchg
pop
xor
fnstcw
repnz
cld
les
in
aaa
in
sti
data16
ja
imul
sub
pop
xor
adc
repz
mov
mov
mov
sbb
or
cmp
sub
pop
xor
adc
repz
mov
mov
mov
sbb
or
cmp
sub
pop
xor
adc
repz
mov
mov
mov
sbb
push
sub
pop
xor
adc
repz
shrl
add
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
jns
inc
clc
mov
dec
and
imul
sbb
inc
cmp
jmp
loopne
shrb
and
imul
sbb
inc
cmp
inc
cwtl
sti
jmp
inc
shlb
ss
jo
pshufw
mov
pushf
imulb
mov
popa
mov
fninit
cltd
stos
pop
cmp
popa
xchg
mov
xor
enter
inc
fimull
push
sti
mov
or
in
add
imul
sub
fsubl
xlat
xor
mov
addr16
sub
hlt
jo
pushf
sbb
inc
sub
stc
movsb
inc
jns
roll
and
and
or
fcmovnb
inc
push
fsubrl
jl
lods
clc
fcompl
sbb
dec
adc
pusha
sbb
or
xlat
clc
jg
bswap
loop
and
enter
lods
xor
push
popa
xor
sub
jns
mov
repz
lock
shlb
cmp
iret
cmp
push
sub
fcompl
hlt
xlat
cmp
negb
cmovl
sbb
add
pop
fisttps
fcompl
xchg
aad
sub
movups
push
jo
or
dec
and
aad
int3
sahf
cld
mov
loopne
shrb
and
imul
sbb
inc
cmp
jmp
loopne
shrb
and
imul
sbb
inc
cmp
dec
repz
adc
repnz
sbb
or
mov
mov
xor
jmp
and
cli
xchg
sub
push
xchg
jne
enter
std
ja
and
fdivrp
leave
js
xlat
xchg
ss
push
pop
push
add
mov
and
jb
xor
adc
stos
xlat
sti
cmc
add
pop
loope
xor
adc
inc
dec
pushf
mov
fadds
dec
mov
hlt
pop
jae
sbb
pusha
add
pop
inc
lahf
pusha
dec
push
jp
xchg
inc
incl
cmp
push
test
or
rcl
bound
mov
inc
jp
aaa
and
dec
mov
outsb
fstpl
jp
dec
fildll
jae
addr16
inc
imul
adc
or
and
push
rclb
dec
gs
pop
inc
sub
loop
mov
sub
jnp
lea
mov
lods
insl
jae
add
sub
in
adc
mov
cmp
out
dec
jno
loop
push
adc
stos
call
adc
stos
adc
je
es
cmp
lahf
cmp
and
iret
or
xchg
fwait
cwtl
pushl
xor
xchg
stos
sub
pusha
loope
mov
addl
sub
xchg
andl
enter
cmpsl
add
cmp
push
js
jecxz
mov
push
cmpsb
adc
jnp
es
mov
lret
shl
mov
sub
pop
dec
push
push
push
mov
cmpsl
inc
insl
in
cmp
cmpl
xor
xor
stc
in
sub
movsl
bound
aas
rorb
lods
decb
push
push
std
cs
add
push
dec
inc
rcrl
bound
lea
pop
cmp
fstl
sahf
fildll
adc
mov
jne
mov
sub
sbb
add
or
jns
lock
int
test
pop
jle
push
jge
sub
or
dec
or
push
mov
xchg
test
xchg
sahf
fsubl
pop
stc
pop
punpcklbw
push
lods
pop
test
push
out
add
outsb
jge
and
das
outsb
pop
mov
sub
push
mov
pop
daa
and
gs
pop
dec
dec
sub
mov
loopne
pushf
daa
push
jmp
dec
fnstsw
adc
or
shrl
mov
pop
imul
outsb
pop
or
mov
pop
aam
dec
pushf
hlt
xchg
outsl
mov
inc
and
xchg
and
add
cs
aas
add
sub
pop
stos
mov
sbb
lcall
frstor
xchg
outsb
mov
movb
pop
add
daa
jo
sub
in
pop
ret
adc
je
lods
ret
ds
inc
popa
jle
repnz
mov
aam
push
iret
xchg
sub
call
xchg
adc
xchg
leave
daa
jl
ss
mov
xor
add
enter
mov
and
jmp
fcmovnb
pusha
std
enter
call
or
xchg
pop
sahf
add
rolb
daa
shlb
es
daa
mov
lahf
fmul
sub
ret
lcall
stc
adc
dec
adc
out
jg
mul
mov
repz
push
loope
repnz
in
int3
or
pop
cli
xchg
sbb
mov
mov
ljmp
in
test
add
loope
aas
xor
push
adc
arpl
out
into
fadd
xor
arpl
movsl
ficoml
and
mov
fucomip
js
cmp
mov
aam
xchg
mov
sbb
repz
jg
in
cmpsl
sbb
sub
popf
into
adc
push
and
or
ret
sub
xchg
shr
mov
mov
adc
test
mov
jb
ja
push
js
xchg
add
or
inc
mov
xor
xchg
xor
dec
pop
xchg
ss
push
stos
fstpl
cmp
jg
or
scas
push
dec
inc
nop
mov
pop
cld
cli
cmc
jg
lods
inc
adc
nop
mov
push
test
jmp
sub
xor
stos
jne
sbb
pop
jl
cli
adc
aas
push
and
rclb
push
lret
xor
xlat
stos
and
pusha
incl
mov
cmp
lea
test
ret
xchg
pop
leave
and
add
dec
push
cltd
out
mov
loope
jl
jmp
or
pop
popf
enter
or
fmull
jnp
mov
mov
in
xchg
fistps
push
jnp
cmpsl
insb
dec
movsl
pop
sbbb
dec
neg
mov
sub
movsl
jmp
push
out
mov
in
orps
hlt
out
push
xchg
pop
popf
mov
lds
pop
jp
lock
out
outsb
xor
pop
and
push
mov
push
fcom
pop
clc
dec
addl
xlat
fwait
rcr
pop
xchg
adc
pop
fsts
dec
notl
daa
rcrl
clc
xor
ss
jl
jle
mov
pop
cmp
xor
cmpsl
xchg
js
dec
aam
loope
xchg
adc
mov
mov
in
leave
and
mov
test
push
mov
aam
stos
js
fistl
es
push
std
cli
mov
or
das
pusha
xchg
pushf
and
push
fnstcw
in
in
jl
xchg
xchg
dec
dec
test
cli
cmp
cmc
mov
mov
lea
incl
mov
imul
cmpsl
push
jl
mov
or
fimull
insb
je
jnp
cs
aas
xor
sub
std
or
cmp
pop
xchg
or
cmp
test
insb
faddl
pop
pop
jns
test
outsl
xchg
stos
xor
xchg
xor
in
sbb
js
xchg
ror
sub
hlt
in
add
andb
popl
push
jmp
in
test
inc
stc
push
add
int3
sbb
pop
sub
xchg
pop
fisttps
add
ret
push
jl
add
mov
out
fucomp
xchg
clc
repz
call
push
pop
xchg
dec
add
fisttps
jae
pop
push
and
push
inc
scas
lcall
jns
sti
iret
xchg
adcb
pop
shll
stos
ret
jecxz
clc
jle
cmp
sbb
cmp
inc
pop
test
enter
jbe
mov
sub
inc
fistps
jns
xchg
js
and
inc
dec
mov
sub
lods
mov
pop
push
fisttps
orl
xlat
mov
sbb
cli
jge
pop
popa
loope
push
pop
in
push
adc
cs
jnp
jo
mov
pop
cmpsl
adc
mov
mov
stos
lea
inc
cmp
xchg
push
pop
icebp
int3
cli
jecxz
dec
aas
jbe
cmp
ja
or
loope
loope
jmp
xchg
mov
iret
jo
adc
loop
std
pop
jmp
xor
insl
mov
fwait
stos
xchg
adc
movsb
xchg
je
cmp
mov
call
out
xor
lods
ja,pt
stos
test
rcrl
dec
int
or
inc
fsubr
test
cmp
jbe
fidivrl
ret
dec
mov
sbb
aad
xchg
in
fbld
iret
pop
push
lds
jecxz,pt
bound
sub
push
adc
jle
xchg
mov
shlb
xchg
outsb
pop
les
icebp
pop
push
xchg
cmc
fsubrs
lahf
mov
aam
jb
enter
insb
add
in
jl
dec
pop
pop
lock
shll
cmp
imulb
aaa
lods
xchg
mov
add
mov
nop
cmp
cmp
int3
cmp
fcomi
sbb
sar
cmp
push
and
mov
lret
push
xlat
pop
mov
lods
and
cli
fdivr
icebp
into
hlt
ret
gs
jno
imul
ror
mov
sti
push
push
add
imul
inc
ret
fmull
pop
mov
movsb
outsl
movsl
dec
pushf
divb
mov
cltd
mov
dec
adc
shll
xor
push
data16
dec
pop
notl
adc
push
lds
lcall
sbb
pop
mov
sbb
mov
xor
xlat
lret
insb
mov
sbb
insl
jns
daa
cmp
mov
ficompl
pop
push
inc
cmp
xlat
gs
pushf
pushf
lods
adc
stos
imull
xor
fldcw
aas
or
sub
adc
adc
jmp
adc
sub
mov
daa
fadds
sub
icebp
add
mov
pusha
xchg
shrb
xchg
cs
roll
mov
lret
mov
ja
xchg
movsb
lods
xor
inc
xor
mov
aad
test
sbb
jg
in
sub
add
loop
imul
sbb
fucomip
and
inc
push
mov
adc
add
jge
cld
inc
bound
inc
scas
aad
xchg
jmp
jecxz
int
mov
sub
sahf
inc
mov
imul
negb
add
mov
fs
dec
jbe
cld
xchg
sub
push
pop
or
push
pusha
in
gs
pop
lahf
mov
mov
jp
sub
pop
inc
push
jbe
push
fiadds
addr16
jl
adc
out
xchg
xor
or
and
mov
add
xchg
adc
ss
jns
cmpsb
mov
jmp
aam
sbb
out
adc
cmp
mov
lea
xor
jle
in
addr16
arpl
js
shrl
addr16
cwtl
dec
adc
shl
and
sbb
aad
xchg
nop
imul
mov
fs
inc
inc
mov
push
push
jns
mov
xor
aam
inc
addl
pop
shl
cmpsb
dec
adc
dec
cwtl
push
aam
or
mov
mov
add
scas
or
adc
xchg
repnz
mov
inc
shlb
inc
adc
gs
lahf
xchg
fistpll
add
icebp
jmp
dec
lds
das
sti
push
fwait
insb
dec
xor
mov
andb
aaa
mov
xor
cmp
xor
ljmp
xchg
jg
fs
sbb
jae
fmulp
sahf
mov
icebp
and
aad
mov
adc
popa
cmc
inc
lret
sub
in
shll
adc
rcrl
icebp
fdivs
loop
or
xor
pop
pop
jo
mov
out
sahf
loop
inc
jns
jge
mov
adc
loopne
sub
lcall
ljmp
inc
or
jl
sub
out
mov
adc
pop
and
jb
push
and
sahf
fmuls
fimuls
jl
mov
out
add
pop
pop
in
xchg
sbb
rcrl
cmpsl
jmp
push
cld
jmp
inc
xchg
lods
xor
ficompl
cmc
hlt
out
ror
xlat
iret
movsb
imul
int3
sbb
lock
push
sbb
inc
out
ljmp
sbb
icebp
daa
sbb
mov
push
subb
movsb
pop
inc
xchg
inc
xchg
shll
aas
adc
rclb
cmovne
rcl
lds
js
add
mov
jne
mov
dec
adc
jno
or
cmp
jmp
idivl
arpl
clc
mull
test
cltd
xchg
lods
pop
out
jbe
and
or
dec
sub
das
push
xchg
loope
sbb
fstpt
imul
fimull
mov
mov
push
push
push
mov
scas
clc
or
xor
and
xor
mov
xlat
xchg
pushf
cli
sub
and
jge
mov
xchg
cld
sbb
inc
clc
jl
stc
cmp
adc
bnd
popf
movsb
and
mov
cmpsb
mov
jge
lret
xlat
fwait
lds
lods
or
mov
in
hlt
jo
sbb
ss
jmp
std
add
push
and
rol
jg,pn
and
jnp
repz
divb
jle
ret
lcall
lcall
xor
and
push
inc
bound
ret
cmc
mov
dec
push
testb
dec
or
mov
sub
mov
hlt
sti
stos
out
fs
cmp
mov
sub
xchg
shrl
xchg
mov
and
mov
arpl
or
test
jb
mov
mov
cmpl
mov
or
mov
lcall
cwtl
fldt
fldcw
jns
cmp
or
mov
rcll
mov
pop
xor
push
popf
test
nop
jecxz
nop
out
and
push
cs
mov
mov
pop
popf
jbe
and
xor
jmp
push
adc
adc
sbb
in
cmp
cmpsl
fs
rorl
in
popa
iret
lds
in
ret
pop
in
xor
mov
dec
push
adc
mov
or
fwait
stos
test
lea
adc
cmpsl
cmp
adc
lahf
insl
stos
jo
in
pushf
xchg
cmp
sbb
ror
jg
mov
push
aam
scas
and
xchg
jge
insl
jle
push
stc
sub
push
cwtl
leave
jecxz
mov
js
dec
xchg
out
adc
adc
popf
xlat
in
sbb
addb
fcmovnb
add
mov
pop
inc
xchg
dec
cmc
shlb
xor
in
loope
sub
mov
jg
and
push
sti
sub
xchg
repz
mov
out
cwtl
or
hlt
xor
ds
inc
mov
xor
rclb
jmp
loopne
iret
mov
lds
das
ds
insb
int3
mov
jmp
sub
add
ja
aad
dec
adc
pop
jl
cmpsl
shlb
xor
mov
pop
movsb
movsb
inc
jne
ret
adc
les
shrb
ljmp
xchg
sub
std
movsb
mov
and
pushf
xchg
jo
sub
std
test
lahf
and
rolb
jmp
ds
in
fwait
std
into
xchg
fsubrl
inc
xchg
pop
in
notb
cmp
data16
andb
xchg
ja
mov
imul
lock
push
into
sub
rcrl
or
mov
orl
gs
or
adc
xchg
mov
movsl
jae
jne
xchg
sbb
and
cs
loop
into
inc
imul
adc
sbb
mov
lcall
mov
cmp
clc
sahf
mov
mov
pop
movsl
jp
cmpsb
mov
mov
or
adc
jg
sysretw
push
mov
mov
jns
xor
sub
push
jne
sub
add
cmpsl
xchg
aam
cld
rcrl
inc
cmp
jmp
mov
fsubp
or
nop
jae
aaa
sbb
jbe
fcomip
popf
mov
mov
test
add
scas
and
nop
xlat
insb
xchg
aam
dec
fwait
lock
ds
xchg
xchg
xchg
in
adc
ficoml
js
mov
mov
daa
cs
pushf
push
pop
mov
outsl
fisubl
loope
adc
test
repnz
repz
jns
ljmp
sbb
or
push
nop
jns
dec
sub
dec
imul
and
pop
out
stos
int3
pop
in
flds
mov
sub
test
adc
dec
mov
sub
hlt
stos
pop
push
mov
test
ljmp
test
jl
cmpb
cmp
andb
out
and
imul
shll
bound
inc
pop
or
scas
or
pushl
pop
testb
add
imul
and
adc
hlt
fcmovu
faddl
cs
pop
pop
leave
mov
sahf
push
pop
add
dec
xchg
in
sbb
daa
ljmp
and
push
popa
xlat
jbe
arpl
add
pop
sbb
stos
pop
push
mov
in
fcomps
or
push
das
insl
sbb
push
loopne
pop
insl
mov
test
fldenv
adc
loopne
xor
fsub
aad
xor
popa
inc
or
ror
push
movsl
xor
and
fstps
mov
ds
xchg
jge
push
ficoml
cmpl
ds
das
imul
mov
ret
pop
lret
add
mov
jmp
ja
mov
xlat
fwait
dec
fdivs
shlb
pop
sub
arpl
sbb
push
in
xor
xchg
cmc
into
dec
cld
cmp
lds
lds
sub
or
push
xchg
push
out
adc
dec
mov
insb
add
js
ss
sbb
jne
aam
cmp
or
pusha
ss
pop
xor
fwait
add
cli
movsb
cmp
xchg
mov
hlt
adc
xor
xor
cmp
mov
mov
mov
js
mov
jae
jno
add
test
sub
fisttpll
js
scas
xor
pop
mov
adc
sub
in
sub
dec
mov
mov
into
fisttpl
bound
sbb
imul
clc
mov
pop
pusha
shlb
mov
pop
int
inc
push
xchg
loop
push
push
jae
or
sub
scas
cmp
mov
mov
pop
add
add
inc
push
sbb
mov
or
gs
add
ljmp
dec
int
repnz
and
outsb
adc
xlat
sbb
and
and
jle,pt
xchg
imul
sub
arpl
jmp
out
test
in
std
cs
mov
push
imul
xchg
sti
xor
fst
push
mov
rorl
mov
lea
jns
cwtl
fldenv
mov
sahf
mov
adc
stos
int3
sbb
pop
movsl
in
and
daa
dec
aam
adc
xchg
mov
push
inc
sarb
sbb
lods
scas
lahf
sbb
xor
stos
icebp
push
ret
jecxz
lock
mov
cmc
cmpsl
movsl
add
nop
pop
rcrl
fs
cmpl
add
xchg
or
cmp
fldt
fcmovbe
fdivl
add
sbb
dec
push
lea
jo
daa
adc
add
jg
xor
push
dec
jmp
jmp
pushf
dec
fidivrs
imul
fldcw
dec
mov
adc
pop
or
sti
xor
mov
or
push
xchg
in
inc
sahf
std
stos
adc
cmp
dec
insl
aaa
cmpb
sbb
call
sub
fisubrl
pushf
insb
cmp
pop
movsb
loope
aad
call
fstl
aam
stos
mov
mov
fidivs
mov
or
jmp
loopne
cmp
insl
xchg
dec
imul
les
clc
xor
icebp
icebp
imul
int3
and
sti
adc
jbe
es
adc
xchg
data16
pop
outsb
test
mov
jle
sbb
dec
imul
dec
inc
in
push
test
and
fidivl
jp
or
inc
les
jnp
xchg
cmp
push
mov
enter
inc
sbb
cmp
ret
in
add
std
cs
xor
push
mov
lret
sbb
pop
jnp
fimuls
jbe
test
xlat
loopne
scas
sub
arpl
mov
sbb
xchg
shl
imul
mov
dec
and
fimuls
sub
jnp
scas
out
mov
in
ficomps
aad
mov
push
jg
mov
dec
loop
mov
inc
stos
fwait
lahf
cmpsl
inc
lret
andw
xor
push
popa
add
xlat
std
ret
or
out
and
dec
dec
int
cmp
adc
into
rorb
mov
sub
popa
rorl
sbb
jb
aam
fstpl
inc
or
pop
ds
mov
rclb
fst
hlt
int
add
addr16
and
mov
pop
inc
out
cmp
addr16
inc
mov
push
dec
push
das
test
aam
mov
roll
add
push
dec
mov
or
dec
addb
lgs
fildll
adc
adc
div
lods
aas
fisubrl
xor
cmp
mov
adc
push
inc
out
stos
or
lret
adc
xchg
sbb
or
sub
xchg
inc
pop
mov
es
adc
xchg
inc
enter
push
insb
jle
sbb
ret
stos
push
repnz
adc
out
mov
rcll
clc
nop
xlat
jb
outsb
xor
sbb
add
sub
cmp
xchg
xor
xorb
push
xor
pushf
sbb
push
adcb
mov
xchg
out
add
aad
pop
xchg
movsl
pop
fiaddl
int3
cmp
ror
pop
idivl
dec
push
mov
fsubrs
inc
jl
ret
or
mov
or
dec
sub
test
lea
aas
ficoml
lcall
cltd
shrb
and
imul
sbb
inc
cmp
jmp
loopne
shrb
and
imul
sbb
inc
cmp
xchg
cmp
mov
xor
test
and
imul
sbb
inc
cmp
jmp
loopne
push
sub
iret
mov
repz
sub
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmpps
das
loop
repnz
subl
or
sbb
scas
bound
adc
xor
xor
ret
das
loop
repnz
sbbb
mov
lahf
push
jb
fists
out
and
xor
ret
das
loop
repnz
sbbb
mov
lahf
jno
pop
xchg
sbb
inc
mov
inc
inc
mov
mov
jge
mov
inc
scas
addr16
cmp
addr16
fnstsw
ret
mov
gs
fistpl
sub
lods
and
lret
lcall
out
mov
adc
dec
pop
adc
jno
inc
cmc
push
push
fs
outsl
std
push
mov
push
pop
idivl
xchg
xchg
stos
pop
push
mov
cltd
divl
adc
xor
add
inc
sbb
push
jge
repz
lahf
mov
ss
push
fldl
cmovp
shl
fwait
daa
les
mov
sahf
sbb
inc
cmc
push
push
pop
cli
repz
inc
out
and
shrb
loop
repnz
sbbb
mov
lahf
push
scas
bound
adc
and
je
ret
dec
mov
push
out
ds
into
xor
add
push
stos
push
or
insl
mov
or
xor
outsl
cmc
jg
ljmp
and
inc
jmp
cmpl
xchg
mov
pop
xchg
outsl
mov
lahf
push
scas
bound
adc
and
xor
ret
das
loop
repnz
sbbb
mov
lahf
push
scas
bound
adc
and
xor
ret
xchg
lea
xor
cmc
pusha
push
out
call
movsl
inc
popa
outsb
jns
cltd
data16
mov
dec
pop
cmpsb
jmp
add
testl
dec
add
dec
push
mov
xor
in
or
xchg
mov
lods
movsb
xlat
fbld
push
addl
jno
roll
inc
or
cmp
jle
cld
aas
repz
repnz
mov
clc
ja
lods
daa
cmpsb
int
dec
sub
inc
xchg
subl
loope
lds
lock
or
mov
addb
pop
rorb
das
sbb
fdivrl
jecxz
mov
pop
xor
jns
fildll
push
push
bnd
inc
mov
sahf
pop
mov
insb
mov
xchg
fdivrs
jmp
lea
lcall
mov
test
lret
inc
adc
and
push
scas
dec
and
shr
dec
sahf
mov
or
inc
mov
mov
dec
dec
xor
xchg
or
arpl
or
es
pop
add
repnz
mov
aam
andb
lcall
mov
pop
aas
int3
adc
idivl
inc
dec
mov
adc
or
or
xor
jbe
cltd
loopne
nop
push
xor
add
inc
es
aam
sbb
and
fildl
cwtl
loope
sbb
int
mov
test
ds
gs
mov
enter
outsl
add
jnp
mov
push
inc
fsubrs
decl
inc
subl
sti
imul
adc
adc
mov
icebp
scas
imul
ret
cli
jo
loope
jo
dec
dec
push
add
mov
call
dec
ja
in
sub
imul
leave
pop
scas
push
or
fnstcw
mov
jae
or
fnsave
outsb
sub
andl
dec
out
scas
sub
outsb
push
lods
out
fmul
scas
popa
inc
mov
es
stc
cmp
les
ret
xchg
xchg
sbb
sarl
and
adc
dec
and
ss
and
outsl
or
cmpsb
push
dec
rcl
lds
xchg
adc
clc
mov
xor
jns
repnz
aam
lahf
jo
shll
pop
cmp
and
andb
mov
mov
push
outsl
mov
inc
movups
add
ds
je
mov
and
out
cmp
mov
gs
ret
insl
test
sbb
scas
add
gs
in
or
add
mov
inc
in
les
int3
hlt
mov
add
inc
dec
cs
mov
inc
add
cmpl
mov
jge
icebp
jge
push
sub
aad
mov
leave
xlat
rcrb
addr16
pop
pop
imul
add
or
mov
push
popf
in
in
lds
mov
inc
in
cmc
sbb
clc
addr16
jns
sahf
dec
sbb
xchg
popf
enter
or
stos
jb
jg
xchg
jno
out
out
rcll
into
sbb
mov
xchg
les
lahf
xor
adc
inc
xchg
push
mov
or
sub
push
ja
out
push
add
ss
cmp
js
sbb
or
cli
or
insl
push
cmpsl
and
arpl
push
cld
pop
push
add
test
das
xchg
idivb
cli
jp
xchg
int
out
hlt
mov
inc
sbb
pop
pop
movsb
imul
cmpl
adc
cmp
mov
xchg
adc
in
jbe
push
jmp
adc
pop
in
xor
fsubrs
mov
dec
stos
lods
ljmp
in
in
lcall
scas
mov
xchg
add
dec
iret
repz
push
xchg
stos
jg
or
lock
cwtl
jecxz
xchg
loopne
sti
add
pop
lds
sub
mov
cmp
int
sbb
pop
fildl
mov
or
test
or
je
sbb
mov
aaa
jb
in
xchg
xlat
lods
xchg
roll
mov
cmp
sbb
mov
gs
sub
cmp
and
ljmp
pop
lods
xchg
or
jecxz
sub
insl
pop
xor
fisubs
andb
in
xlat
jp
jecxz
dec
ret
push
test
mov
sub
jns
into
mov
xor
mov
mov
pop
bound
das
push
push
int3
mov
dec
ss
cmp
add
adc
cmp
or
sub
pop
aam
sbbb
jle
mov
pop
cmpsl
sar
jg
push
adc
jecxz
test
sbb
fs
sbb
inc
cmp
fnsave
mov
and
and
jecxz
push
int3
cmp
xor
push
mov
xchg
jp
sub
add
arpl
mov
lea
jb
xchg
xor
stos
adcl
lea
mov
std
outsb
fwait
mov
xor
outsl
lods
sbb
js
in
inc
push
pop
or
mov
ss
adc
inc
in
mov
mov
mov
cmp
mov
rclb
cmp
cmp
sub
pop
fwait
xor
xchg
pop
jl
ret
scas
fwait
mov
mov
push
addb
and
jg
or
scas
xor
jbe
outsb
fwait
movq
jb
pop
in
inc
xor
enter
lea
fs
out
scas
loope
and
push
loope
jne
inc
scas
pop
and
in
int3
insb
cs
ljmp
xchg
scas
xor
cmpsb
and
gs
mov
mov
xlat
loop
bound
call
imul
dec
inc
cltd
adc
int3
cli
jae
sub
movsb
cmp
and
sbb
arpl
loope
enter
mov
pop
or
je
xlat
and
cmc
hlt
xor
arpl
fcomps
cmp
mov
dec
xchg
push
adc
cmp
rcrb
mov
xchg
cld
mov
cld
out
jp
and
xchg
cli
sub
pop
inc
je
call
mov
shl
jge
lahf
loopne
cmp
fiadds
lret
pop
inc
rcl
arpl
fbstp
jmp
jge
cmp
adc
and
mov
cs
and
mov
hlt
jmp
mov
fidivs
adc
dec
imull
or
scas
mov
insl
and
into
enter
movb
add
fwait
into
cmpsb
out
fcoml
mov
inc
out
std
mov
lret
stc
jb
lret
in
xchg
mov
pop
pop
jecxz
mov
lods
incb
ud0
jo
shll
jg
inc
lods
loop
cwtl
or
dec
cld
rorl
pop
movsb
lods
or
sahf
sub
cmpsb
mov
cmp
pop
mov
inc
cmpsl
dec
dec
add
sahf
div
sub
sbb
adc
add
pop
cmc
push
pop
pop
jo
sahf
int3
push
push
ja
xchg
out
pop
or
pushf
imul
gs
add
rcr
mulb
lcall
lret
lea
movsb
sub
stos
cwtl
ja
mov
xchg
scas
fisubs
js
popf
cmp
adc
dec
xor
fisttps
dec
or
or
mov
xor
inc
std
dec
mov
mov
out
aam
dec
jl
push
arpl
inc
inc
fcoms
cltd
mov
les
inc
rorl
wbinvd
loopne
push
repz
mov
push
rorb
jmp
push
or
call
dec
fistl
inc
lcall
inc
in
mov
gs
ret
stos
nop
and
arpl
pop
sub
inc
cmc
je
hlt
or
mov
push
xor
enter
pop
cmp
cmp
mov
lahf
pushf
sub
adc
jmp
mov
cwtl
push
sahf
sbbl
fwait
mov
loopne
addl
and
in
mov
jo
jl
fimuls
xor
push
cmp
jnp
xor
popf
out
xor
xchg
inc
int3
xor
out
mov
xchg
out
adcb
cmp
out
add
sub
test
cwtl
pop
sbb
mov
pop
aam
cmp
dec
pop
mov
xchg
loope
imul
test
xor
and
cs
jb
or
js
push
dec
cmp
mov
jmp
icebp
addr16
push
lcall
cmp
inc
outsb
add
and
loopne
bound
icebp
add
fsts
enter
stc
rorl
xchg
jae
das
mov
and
or
test
jae
mov
and
fcomps
and
js
rep
bound
dec
sbb
pop
adc
andb
loope
push
es
aam
dec
inc
int
push
adc
adc
jnp
mov
shrb
cmp
lds
mov
loop
sub
inc
les
outsb
icebp
xor
xlat
orl
ds
lods
out
and
inc
ljmp
and
jne
js
xchg
stc
ljmp
into
dec
add
lret
in
mov
jo
mov
test
enter
xlat
or
loop
fwait
sub
push
lret
rcrl
fisubl
lds
dec
lods
in
fdivs
jecxz
mov
out
pop
addr16
loope
mov
inc
push
jae
mov
and
iret
push
shr
cmp
jp
fldl
push
pop
cli
repz
fsubr
shlb
push
cld
movsb
mov
push
daa
ja
int3
cmp
ds
xor
jl
sub
mov
mov
jl
or
int3
mov
xchg
inc
sar
or
mov
ja
movl
out
lock
adc
insl
jle
pop
cmp
add
adcl
push
dec
aad
xchg
dec
sub
ret
jne
popa
addr16
push
cmp
repz
vpmadcsswd
test
bound
decb
xchg
movb
pop
arpl
daa
std
je
mov
sarb
imul
inc
int
sub
mov
rorb
push
movsl
mov
cmp
mov
add
jne
aaa
push
xchg
popa
int3
dec
mov
fwait
jle
test
inc
mov
xchg
push
ss
in
or
push
sub
cmc
pop
push
jno
int
or
rolb
icebp
cmpl
test
xchg
mov
cmp
mov
and
repz
cltd
xor
ja
in
loopne
faddl
adc
jae
rcrl
out
fsubrl
out
inc
sub
cmp
adc
movl
xor
push
inc
jp
inc
leave
movsb
loope
jns
and
lea
pop
movsl
add
cmpsb
pop
inc
fnstsw
dec
lahf
jns
lret
popa
xchg
loop
jl
and
pushl
insb
cmpsl
imul
mov
jo
repz
mov
push
rcl
sbb
inc
inc
mov
and
adc
jg
call
mov
in
mov
mov
es
movsb
aas
insl
ss
pop
and
pop
inc
popl
ret
pop
aam
adcb
nop
js
sbb
inc
pop
mov
add
enter
or
jns
push
les
inc
push
push
imul
enter
jns
ret
fbstp
loop
aad
pop
fildl
outsb
jae
mov
cwtl
mov
mov
lods
push
xchg
cmp
das
push
jl
mov
pop
inc
insb
frstor
xlat
push
out
outsb
xor
cmp
inc
insl
inc
jle
mov
dec
das
or
ss
xor
sbb
mov
cli
test
ds
mov
lods
int
aam
pop
push
aam
sub
cmp
inc
sbb
test
inc
int3
notb
adc
cmp
rorb
sbb
jbe
outsl
insb
push
scas
notb
cli
xchg
and
fdiv
sub
jg
fiaddl
lds
sbb
sar
mov
adc
ljmp
nop
out
out
cli
jbe
add
ss
addl
loop
pop
lods
xchg
inc
mov
fisubrl
repnz
outsb
cmp
push
mov
xchg
and
scas
popf
in
imul
sar
xor
jp
mov
addr16
jl
daa
inc
fdivl
adc
rep
xor
and
sbb
push
and
mov
sub
dec
js
lock
jmp
inc
mov
leave
aad
pop
inc
and
push
sbb
dec
nop
addr16
mov
dec
adcl
popa
jmp
into
das
xchg
push
pop
outsb
ljmp
pop
xor
jb
mov
stc
ficomps
clc
and
in
sub
std
sub
in
xchg
mov
mov
sub
hlt
stc
es
andb
or
bound
cmc
cmpsl
mov
sbb
xchg
cmpsl
inc
adc
mov
jmp
mov
jge
scas
mov
inc
sub
jmp
add
add
aas
cmp
or
pop
push
mov
dec
icebp
pushf
xor
cmpsb
out
push
lock
fsub
pop
adc
dec
add
cmp
and
jbe
push
or
and
cmp
xchg
sbb
ss
xchg
push
dec
push
add
enter
add
or
je
sub
mov
inc
sub
mov
mov
pusha
and
mov
mov
jb
into
scas
xchg
inc
and
mov
clc
dec
jg
pop
xor
jp
stos
push
out
movsb
jno
ret
sbb
xchg
push
fs
jmp
xor
sbb
out
test
out
stos
jge
xlat
js
sub
push
lea
sbb
shrl
mov
adc
add
test
pop
test
jl
out
xor
sbb
adc
push
mov
push
push
nop
sbb
sti
in
dec
and
sar
xor
pop
dec
aam
outsl
inc
inc
jno
hlt
stos
dec
imul
xor
scas
cld
lock
add
das
shrb
and
les
pop
mov
hlt
jnp
shl
sub
sbb
lods
imul
xchg
or
rol
jbe
loop
add
and
dec
rol
pop
xchg
imul
fst
js
enter
pop
xor
jmp
and
bound
or
push
adc
or
inc
dec
pop
dec
addr16
cmpsb
jb
dec
push
xchg
cmp
or
jbe
stos
hlt
insl
or
js
sub
aas
ret
dec
mov
sub
or
je
and
sub
mov
xor
jle
or
shrl
jne
in
les
fcompl
dec
cmp
test
or
pop
cli
inc
mov
cmpsb
inc
inc
xor
movsb
int
fsubrs
add
and
push
nop
je
sub
das
out
push
sahf
stc
adc
push
or
in
pop
add
nop
push
or
sub
dec
lcall
mov
repz
pop
dec
test
sub
mov
sub
call
cld
inc
xchg
orb
frstor
bound
mov
pop
jne
fimuls
pushf
mov
subb
inc
mov
push
in
roll
outsl
sub
in
push
pop
lea
cmpsl
ret
pop
adc
add
mov
sbbl
loope
xchg
mov
dec
mov
call
shll
add
ss
lret
mov
loope
fnstsw
jbe
test
and
sti
leave
mov
add
stos
xchg
jmp
pop
scas
sbb
pusha
sub
imul
dec
dec
insb
ret
shll
xlat
rorb
fmul
not
jo
cmpb
ljmp
dec
adc
ds
xchg
mov
fs
leave
and
jge
mov
stc
bound
adc
lds
les
mov
or
cmp
xchg
cltd
fstpt
add
test
out
sbb
pop
adc
aaa
mov
mov
or
add
lahf
outsl
mov
jns
dec
inc
inc
inc
fcmovne
fidivrl
lea
cwtl
jae
test
xor
nop
jbe
mov
sahf
pusha
cmp
out
xchg
divb
lret
adc
jno
mov
popf
adc
je
push
push
xchg
out
cmc
mov
out
fwait
jns
mov
mov
jecxz
inc
pusha
gs
cmp
aas
cmc
jbe
movsl
jb
xor
ret
xor
ficoms
cmp
loope
mov
xchg
movsl
cmc
add
jp
stos
cli
add
es
cmp
push
repnz
in
hlt
sub
loop
cmovnp
pop
daa
arpl
mov
stos
icebp
addr16
in
mov
inc
rclb
fwait
jo
fcoml
sti
adc
aaa
pop
mul
or
mov
gs
fistl
cld
push
push
insb
fdivs
jns
aaa
and
mov
and
fwait
shl
push
or
leave
std
pushf
push
and
je
pop
leave
jb
mov
mov
ret
cli
add
cmpsl
ds
or
xor
xchg
sub
and
mov
sub
cli
sbb
and
xor
cmp
repz
test
rcrl
roll
adc
pop
sbb
ljmp
adc
jo
cmp
movsb
test
pushf
pop
sbb
jbe
lock
mov
and
pop
sahf
in
out
push
std
mov
imull
ret
sub
sbb
call
shll
jmp
hlt
cmp
dec
mov
push
cmp
std
or
icebp
loop
pop
aaa
movsb
sub
enter
mov
stos
stos
mov
aas
ffreep
cld
inc
out
sbb
shll
xorl
sub
mov
js
jbe
in
fcmovnb
sbb
pop
pusha
sbbb
pop
adc
mov
jle
ret
mov
mov
pushf
xor
xor
push
cs
push
cld
data16
and
jno
into
aam
inc
rorl
mov
cmc
add
mov
aas
push
pop
data16
out
or
js
jge
jb
aad
pop
mov
into
cmc
sarb
je
xor
mov
les
test
or
dec
mov
shlb
iret
sub
or
pop
pusha
std
pop
cli
jb
sbb
call
mov
repz
mov
jns
cmp
adcl
jne
cli
or
aad
jno
pushf
add
mov
fbstp
das
jnp
pop
pop
in
out
aad
or
xchg
inc
adc
xor
cmpsb
xor
inc
rorw
cmp
xor
movsl
pop
sub
bound
lea
jge
jecxz
mov
xchg
cmp
push
lea
cwtl
cmp
xor
sub
sbb
mov
mov
jecxz
pop
push
daa
adc
jns
adc
mov
pop
adc
enter
dec
repz
and
push
pop
sub
jno
cmp
dec
adc
jns
popf
adc
int3
notb
cmpsb
cli
ret
cmp
shlb
mov
jecxz
jns
sbb
jne
fidivrs
es
xchg
pop
nop
pop
cltd
aad
ja
add
divl
push
mov
mov
inc
nop
jns
imul
cs
sub
cmp
dec
jns
psadbw
leave
xorl
sar
inc
mov
cli
mov
aaa
pop
js
jp
loop
je
fnstsw
sub
pop
xchg
daa
and
and
pop
in
shrl
lret
in
pusha
cmp
mov
inc
das
or
pop
loop
cmp
out
addr16
imul
mov
sarl
loop
mov
sub
daa
add
ret
lea
lret
sub
xor
pop
or
shlb
rcrb
cmp
add
xchg
lds
push
cmp
add
test
jecxz
mov
gs
movsl
mov
aas
pusha
test
aad
outsb
out
pop
popa
sarb
mov
or
or
sbb
xchg
inc
mov
pop
pop
jle
fisubs
cmpsl
dec
out
fnstenv
outsb
nop
cmp
pushf
ja
test
jge
push
fbld
sahf
ljmp
scas
test
icebp
bound
cmp
cmp
sbb
imulb
xor
sbb
cmp
sahf
xchg
mov
and
sahf
popa
sub
mov
loope
push
insb
add
iret
mov
sbb
icebp
lods
and
dec
notl
and
pop
les
movsl
cmp
movsl
mov
jns
xor
or
push
or
push
pushf
jae
ljmp
dec
fcoml
in
lahf
mov
bound
jp
lea
cltd
mov
test
ljmp
xchg
movl
dec
pop
aam
jecxz
xchg
dec
mov
xor
fdivs
jecxz
jo
add
sarl
jno
push
adcb
jecxz
sub
seta
aas
repnz
sbbb
mov
lahf
push
scas
bound
adc
and
xor
ret
das
loop
repnz
sbbb
mov
lahf
push
scas
bound
adc
and
xor
ret
das
loop
repnz
sbbb
mov
lahf
push
scas
bound
adc
and
xor
ret
das
loop
repnz
sbbb
mov
lahf
clc
add
mov
adc
add
dec
mov
jl
add
mov
leave
iret
cmp
sub
sbb
or
mov
test
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
test
or
sbb
sub
cmp
int3
pop
pushl
imul
dec
cmp
adc
sub
fidivl
jl
sbb
pop
add
mov
sar
andb
xorl
aad
shll
dec
adc
add
fstpt
in
mov
lods
ss
outsb
xor
out
arpl
stc
leave
xlat
cld
sbb
leave
lea
pop
das
cmpsb
mov
test
cwtl
jnp
fs
jecxz
jne
cmp
cmp
push
cmp
out
neg
sub
pop
and
push
jmp
stc
cmp
shlb
mov
int
aam
popa
in
cmp
mov
sub
pop
mov
push
push
cwtl
cmp
xor
dec
mov
cltd
cmp
iret
popf
imul
mov
jl
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
jp
fistpll
iret
imul
mov
or
fstl
leave
fcmovne
sub
clc
sub
setns
imul
cld
gs
stc
push
lds
daa
sub
pop
in
sbb
dec
xchg
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
test
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
mov
fdivrl
jl
mov
in
roll
dec
movsl
push
lods
cmp
aad
xlat
in
mov
in
pusha
mov
loope
pop
xchg
pop
push
test
inc
jp
jle
sub
clc
test
jbe
stos
ljmp
sub
adc
ds
inc
jge
push
pop
lahf
imulb
daa
or
pop
das
js
cmc
mov
adc
js
pushf
negb
xor
push
push
test
arpl
repz
xor
sbb
lahf
cwtl
pop
adc
arpl
fldcw
inc
arpl
pop
and
lds
fcoml
mov
xchg
or
fnstsw
pop
cmp
into
aas
clc
fs
fiadds
push
dec
inc
mov
mov
or
jnp
out
pop
fdivl
fimuls
sahf
jmp
daa
add
mov
cli
dec
sbbl
sbbl
es
push
arpl
addb
std
inc
mov
lock
mov
mov
push
fwait
jne
gs
cmp
mov
sub
or
and
add
mov
pop
out
movsl
lahf
outsb
jbe
inc
sub
sbb
std
and
jge
out
cmp
dec
jl
lret
push
insb
fiadds
jno
pop
jb
imul
fyl2xp1
dec
lods
dec
add
sar
and
pop
pop
and
add
mov
loope
pop
cmpsb
js
mov
push
stc
test
mov
jp
loopne
mov
gs
into
cwtl
fsubr
out
es
fwait
add
stos
and
rclb
dec
lock
or
testl
mov
int3
loopne
lds
incb
incb
outsb
mov
jno
or
cmp
mov
mov
mov
mov
mov
xchg
push
push
clc
xlat
fisttpl
jnp
mov
adc
sbb
movsl
xor
pusha
cmp
je
fdivrs
cs
sarb
sub
shlb
sub
mov
sbb
mov
mov
xor
fiaddl
imul
shll
cmp
adc
lds
pop
std
scas
lahf
push
mov
mov
aaa
loop
in
loope
cmpsl
push
out
stc
jg
loopne
add
inc
pop
ljmp
jl
flds
xchg
enter
add
sub
repz
pop
push
lea
int3
jge
xchg
jg
xchg
pop
or
dec
dec
push
cmp
daa
test
outsb
pop
leave
push
aad
add
inc
lret
je
mov
rcrl
sub
mov
lea
je
inc
mov
pop
mov
ffreep
cmpsb
lcall
mov
lret
int
push
xchg
sub
pop
rcrb
mov
and
addb
out
or
fs
sbb
adc
and
out
mov
xchg
mov
lret
pop
data16
shl
into
outsb
xchg
jo
jae
and
push
test
mov
mov
mov
sub
sbb
adcl
mov
jae
inc
cmp
inc
dec
stos
icebp
aaa
ljmp
mov
xchg
lret
jns
adc
repnz
rorb
nop
ficompl
aaa
std
movsl
mov
sti
popa
pop
out
and
les
pop
pushf
clc
enter
jbe
xchg
cmp
sbb
sbb
pop
fsts
ss
lock
xchg
sub
dec
jne
pop
mov
fincstp
jnp
not
cmp
popf
fiaddl
ljmp
dec
push
xchg
mov
icebp
testb
std
cmpsl
dec
int
jmp
mov
pop
dec
mov
cmp
test
inc
out
fwait
std
inc
xchg
aad
mov
jp
jle
mov
fcomps
ja
push
xor
enter
pop
jg
jno
mov
sbb
adc
js
and
popf
mov
mov
popf
lcall
pop
jg
fadds
lret
nop
xchg
push
fdivrl
shl
pop
cmp
cmpsb
stos
and
popa
adc
pushl
pop
es
add
loop
mov
dec
icebp
mov
dec
icebp
out
inc
das
cmpsb
inc
repz
cmp
mov
xchg
stos
lcall
or
icebp
xor
and
cmpsl
push
jo
xchg
inc
arpl
cmp
xor
sbb
mov
jb
mov
and
sbb
xchg
push
in
imul
push
jmp
call
adc
or
cmc
adc
sbb
orl
adc
and
mov
fldz
mov
xchg
mov
or
sub
mov
cmp
cmc
add
mov
adc
dec
fisubrl
xchg
cli
add
and
and
dec
mov
mov
and
jne
daa
bound
pushf
jb
jmp
cli
cmp
mov
movsb
and
in
les
cmc
std
or
jl
xor
push
jp
or
jno
xorl
aaa
scas
aas
enter
inc
sbb
jae
fidivl
add
add
sbb
inc
out
sbb
sbb
pop
or
loopw
dec
div
sub
pop
lods
dec
xchg
ljmp
push
xor
out
int3
jl
adc
lret
std
pop
xchg
fisubrs
mov
and
scas
in
leave
lea
dec
sbb
and
dec
lock
vcvttsd2si
inc
xor
inc
out
mov
maskmovq
imull
inc
push
cs
lret
push
cltd
imul
lret
data16
jl
in
xchg
sub
fiadds
push
dec
stos
jg
mov
sbb
inc
xor
and
js
lea
sub
xor
lret
and
pop
mov
outsl
mov
stc
push
sbb
in
dec
jnp
mov
pusha
es
rorb
jb
lahf
or
jmp
cli
in
xchg
test
dec
cmp
test
in
or
daa
sbb
xor
mov
gs
cmp
mov
jmp
sub
dec
pop
pop
mov
inc
test
imul
mov
sub
add
dec
call
xchg
jg
push
mov
outsb
cmp
fldt
xchg
lea
stos
or
mov
xchg
lret
scas
jge
cmpl
or
popf
aaa
cmc
ss
popf
sbb
gs
mov
mov
enter
insb
sahf
mov
test
std
dec
imul
add
add
movsl
adc
xchg
push
mov
pop
xchg
into
lock
mov
adc
ficoml
mov
dec
or
jecxz
add
pop
sub
mov
cmp
aaa
fisubrl
int3
cltd
mull
xorb
mov
andl
subl
mov
mov
aam
xor
sub
mov
fwait
xor
dec
stos
or
iret
in
xchg
dec
aam
push
jb
jno
jmp
out
outsb
daa
es
loope,pn
out
dec
add
mov
xor
xor
outsb
int
out
cmp
mov
adc
gs
test
int3
gs
sub
sbb
pop
mov
dec
inc
inc
cmp
push
push
and
pop
adc
lods
inc
push
sub
cmp
jl
jne
adc
mov
mov
jmp
jns
add
movsl
sub
inc
mov
push
ret
mov
add
pop
or
mov
pop
xor
clc
dec
push
mov
jnp
pop
sti
clc
insl
movsb
loop
test
mov
push
cmc
ja
xchg
mov
push
pop
aas
sti
jno
adc
fisubs
jno
xor
sub
push
xor
cmpsb
data16
rcrb
es
xchg
imul
into
fisttpll
popl
push
out
add
stos
push
stos
inc
arpl
inc
cmp
xor
xor
sbb
addb
std
and
in
aam
pop
inc
ss
pop
repnz
outsl
stos
flds
rcrl
pop
loope
in
cmp
outsl
mov
aas
mov
ja
mov
ds
leave
orb
inc
emms
rorl
push
les
jecxz
shll
sub
inc
xchg
add
cli
inc
leave
inc
mov
add
repnz
gs
aaa
add
pop
movsb
jp
testl
les
cmpsb
sub
ja
push
bnd
pop
or
xchg
jne
push
ljmp
xchg
cli
inc
adc
movsl
pop
in
clc
mov
fwait
jge
xchg
mov
add
imul
mov
andl
imul
bound
pop
mov
sbb
xchg
sbb
mov
arpl
cmp
bnd
mov
mov
mov
outsb
xchg
in
pop
les
mov
sti
or
in
std
int
std
push
out
adc
xchg
arpl
scas
lahf
cmpsl
xor
scas
push
lahf
fcompl
inc
jl
adc
jne
out
pop
mov
cltd
cmp
mov
xchg
in
or
das
jns
stc
push
mov
pop
xlat
mov
mov
lds
dec
cmp
jb
or
loop
xor
test
pop
mov
es
add
mov
ss
mov
sub
mov
mov
push
ret
xor
cmp
scas
dec
scas
ret
lea
jnp
movsl
pop
mov
jae
repnz
xor
or
sbbl
das
push
cmp
adcl
sahf
lods
in
xchg
imul
sub
nop
jo
popf
push
mov
aad
lcall
sbb
add
into
or
rorl
adc
sub
adc
or
ss
std
sbb
and
jg
mov
or
ds
mov
push
add
dec
xor
xor
lods
ja
lret
js
scas
icebp
xchg
aad
repz
cmp
shrb
mov
pop
fildl
sbb
cmp
cld
std
out
mov
cmc
jnp
xchg
jbe
enter
leave
lods
outsl
aam
ljmp
loope
fwait
gs
popa
push
out
movsl
xchg
cmp
shrl
push
push
hlt
fsubrs
imul
cltd
and
fnsave
sarb
adcl
les
lods
cmc
push
dec
inc
xlat
xor
sub
popf
cmc
add
jg
add
aaa
cld
or
add
repz
lret
std
push
ret
mov
int
stc
jo
mov
cmp
cwtl
sub
xorl
daa
leave
mov
bound
push
lods
add
lcall
lret
and
test
sar
sub
mov
shll
ja
imul
or
pop
push
sub
push
adc
jmp
xor
testl
xor
add
lods
mov
jno
push
setp
or
sub
icebp
loope
mov
pop
leave
inc
xchg
cld
dec
xchg
fistpll
adc
jmp
mov
popf
sub
ret
jo
jb
dec
jmp
push
addr16
popa
jmp
pop
push
mov
mov
test
ss
insb
sub
mov
push
pop
dec
dec
in
or
or
mov
mov
push
jle
xchg
repz
push
add
sbb
lret
inc
cld
fdivr
mov
lahf
xor
fwait
jns
or
into
psubusb
addl
inc
push
or
sub
mov
cmp
sub
add
push
dec
fistps
les
sbb
nop
inc
mov
fbstp
jge
xchg
mov
je
add
mov
mov
mov
enter
add
sub
dec
xor
dec
loope
mov
sahf
inc
xchg
fiaddl
mov
fistpl
xchg
push
rcll
cs
scas
loop
push
mov
jno
shl
mov
jno
cmp
mov
addl
sbb
ss
es
filds
mov
gs
movsb
insl
aam
movb
adc
add
adc
shll
jl
fimull
mov
hlt
lret
loop
pop
mov
addr16
mov
div
or
push
push
arpl
add
or
xor
sub
mov
mov
xchg
inc
insb
pop
jae
add
jae
enter
mov
push
cmp
js
sbb
icebp
mov
fsts
ficompl
xor
stos
dec
js
inc
outsb
inc
aas
dec
jge
sub
push
movsl
imul
sbb
movsl
or
leave
xchg
arpl
aam
mov
cwtl
sbb
sub
loopne
mov
ficoml
pop
aaa
sub
testl
das
xor
and
add
in
mov
xchg
mov
mov
mov
xchg
add
scas
popa
sbb
mov
mov
je
mov
arpl
add
adc
xor
inc
fst
pop
lods
mov
call
add
ds
and
add
jb
enter
pop
gs
add
mov
inc
mov
sbb
jb
or
and
and
sub
mov
mov
mov
lret
das
jg
jbe
jae
out
sbb
loop
scas
jl
or
inc
rclb
outsb
mov
fabs
cltd
ja
outsl
cltd
stos
jno
pop
cmp
jbe
fisttpl
push
call
out
daa
add
jo
cmc
pop
ja
dec
ds
int
and
xor
jno
push
sub
scas
xchg
repz
push
inc
or
add
jp
loop
mov
arpl
inc
int
test
lock
add
inc
loop
aad
mov
fcoml
pop
jp
cmp
test
stos
jo
stc
jg
xchg
jb
add
bswap
jne
bound
push
cmc
xchg
iret
scas
loop
sbb
push
rcll
inc
cmp
mov
mov
or
xchg
lahf
je
cld
or
pop
or
mov
ret
push
jnp
sbb
mov
lahf
aam
fwait
push
out
xlat
arpl
mov
out
pop
gs
fwait
sub
and
sub
test
scas
inc
push
or
mov
xor
dec
orl
ret
lds
pop
add
pop
sbb
in
mov
out
fists
adc
movsb
mov
popf
xor
fdivs
mov
icebp
lret
js
inc
lds
adc
stos
push
xor
rclb
push
ss
sub
adc
jo
out
mov
add
scas
fisttpl
xor
fistpll
fsubl
ja
pop
shlb
inc
pop
hlt
jge
sub
pop
lret
scas
stos
les
dec
and
rorb
mov
xchg
or
add
loop,pn
and
inc
mov
movsb
mov
mov
lret
dec
iret
push
rol
xchg
rclb
push
gs
xlat
out
sti
sarb
jns
push
jno
mov
shrb
dec
in
bnd
mov
adc
cld
xchg
fs
xchg
ds
insl
add
xor
fldenv
jne
xchg
xchg
jp
cli
sarb
or
ds
jmp
pop
lds
movsb
inc
adc
stc
insb
push
cwtl
push
lea
pop
mov
loopne
test
stos
push
inc
shlb
mov
icebp
cli
lods
inc
jne
mov
add
pop
sahf
mov
loop
movb
stc
inc
cmp
in
lods
jge
pop
push
les
jns
aam
test
shll
mov
inc
sub
stc
rcll
adc
xchg
negl
in
shrl
lcall
int3
pushf
sbb
dec
ficomps
cli
and
or
rolb
icebp
mov
or
jae
inc
test
dec
arpl
out
fdivrs
xchg
mov
mov
test
movsb
pop
push
pop
stos
sbbb
jo
jae
pop
ljmp
mov
repnz
add
fldt
and
inc
test
rclb
cmp
aam
jno
or
xor
pusha
mov
push
mov
and
mov
clc
mov
addr16
mov
lods
ret
xchg
jl
pop
xor
iret
shll
mov
sub
dec
notl
add
xor
push
imul
fists
or
popa
push
xchg
addb
mov
sarb
icebp
xor
sbb
loope
aaa
push
add
jns
push
sbb
jp
data16
arpl
iret
mov
loopne
stc
xor
sub
cmc
dec
and
fpatan
xor
adc
in
rorb
rcll
xor
add
js
lahf
clc
lock
cld
sub
testb
xor
stc
mov
decb
mov
mov
or
push
adc
xchg
mov
arpl
cmpb
hlt
ret
xor
shlb
movsb
xlat
cmp
das
fistpll
repz
push
leave
lods
sub
mov
pop
aad
in
lods
lret
sarb
sbb
not
sbb
mov
idiv
lahf
adc
jmp
fwait
jb
cmp
mov
mov
shlb
nop
in
mov
xor
jmp
sbb
xchg
mov
sub
push
insb
push
pusha
popa
iret
cmpsl
jb
xchg
imul
hlt
clc
cmp
jle
jl
cmpsl
mov
lret
fsubr
in
sbbl
outsb
sbb
int3
push
pop
int
mov
xchg
sbb
inc
and
jl
or
adc
bound
sti
push
mov
data16
imulb
jmp
leave
pop
in
sub
cmp
mov
xchg
sbbb
daa
popf
mov
add
mov
jp
cmpsb
and
stos
mov
cmp
push
xor
cmp
adc
push
dec
inc
in
mov
ret
test
mov
or
push
outsl
imull
fcoml
loope
idivl
xchg
pushf
xchg
shrl
adc
loop
inc
sbb
scas
sbb
add
or
js
fisubrl
aaa
xlat
dec
inc
in
pop
lret
pop
jo
push
sbb
into
pusha
inc
mov
rcrb
fcmovnb
inc
daa
loope
cmp
scas
sahf
mov
sub
scas
lcall
push
std
leave
sub
je
jmp
stos
ds
inc
into
mov
in
pop
flds
xchg
add
je
mov
mov
mov
adc
cmp
mov
test
cld
imul
jmp
or
or
addr16
dec
test
or
inc
push
mov
push
mov
out
into
sarb
lea
mov
jg
idiv
mov
mov
add
int
sub
xor
insb
xchg
push
push
pop
sti
gs
jns
lahf
xchg
scas
adc
lahf
nop
test
adc
js
cmp
cltd
mov
aaa
jmp
icebp
scas
mov
int3
jmp
fwait
lret
ss
stos
test
or
lock
mov
in
xor
sub
fs
fisubs
outsl
xchg
mov
repz
mov
data16
lcall
dec
bound
adc
cwtl
dec
mov
lods
int
daa
jne
jo
les
sbb
aad
aaa
xchg
mov
push
fisttps
mov
daa
ret
adc
daa
xor
arpl
pop
leave
lock
cmp
adc
mov
xor
inc
idivl
lds
cwtl
dec
scas
dec
fidivl
ljmp
cli
mov
xchg
shrl
shlb
xchg
in
fistpll
pop
call
mov
xchg
push
jge
xchg
adc
xor
lods
or
mov
xchg
add
or
xlat
mov
add
movsb
sub
dec
popf
sti
sub
add
lret
dec
jmp
hlt
ja
fdivrl
lcall
adc
cmpsb
and
inc
mov
fisubrl
loope
cmc
scas
push
mov
push
cltd
mov
sub
stos
lea
loope,pt
out
loop
xlat
in
int
pop
cmp
jl
sub
mov
aam
int3
or
cmp
sub
xor
cmp
icebp
mov
scas
xchg
jae
or
and
aas
stos
pop
or
jo
xchg
push
add
lret
div
sbb
mov
push
push
cmp
addr16
outsl
inc
repz
dec
icebp
enter
dec
addl
insb
shl
test
cs
or
cmpb
out
lret
rcrb
sub
sbb
adc
into
outsl
and
in
sbb
mov
mov
push
jle
xchg
adc
fmuls
and
push
aad
mov
js
insl
mov
xor
rorb
push
clc
xor
mov
xchg
icebp
repz
lret
adc
movb
mov
mov
ret
mov
into
xchg
movsl
cmpsb
jge
jo
xor
jecxz
or
push
cmpsl
and
push
mov
addb
mov
incb
xchg
jo
ljmp
in
and
out
cmp
lods
xlat
sub
sub
cltd
rcll
or
cmp
sub
jle
jno
push
dec
fldl
popf
ja
jno
and
in
imul
inc
adc
clc
popf
mov
out
sbb
repnz
push
test
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
test
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
test
or
sbb
leave
int
fsubrl
in
sbb
or
mov
test
or
sbb
lods
pop
mov
addl
jle
icebp
adc
push
cmpsb
inc
mov
inc
push
push
ss
es
imul
fcmovb
shlw
add
mov
inc
push
push
pop
popa
es
add
jbe
xor
loope
icebp
xchg
add
mov
inc
hlt
push
movsb
popa
jno
add
adc
xor
imul
mov
inc
dec
push
ss
dec
and
inc
repnz
sti
dec
xor
jmp
inc
sbb
test
cli
shll
add
sti
daa
jmp
pusha
sub
cs
pop
jl
hlt
lcall
sbb
inc
xchg
xor
jle
push
ffree
cmp
mov
addb
lret
rcl
lods
lret
add
mov
xchg
sub
outsb
negl
cmp
mov
mov
add
xor
mov
cmp
jecxz
xchg
xchg
insl
push
pop
ljmp
pop
fmuls
mov
movsl
mov
sarl
icebp
push
lock
xchg
xchg
push
divb
push
push
ss
es
add
adc
shlb
rcrl
loope
icebp
sahf
or
fdivrs
je
inc
or
cmp
adc
outsl
popaw
xchg
movsb
aad
rorl
test
lahf
mov
arpl
popa
inc
add
dec
and
push
xor
icebp
mov
ficomps
lahf
les
add
jne
add
and
xchg
roll
add
mov
inc
push
push
ss
es
add
jbe
xor
loope
icebp
add
mov
inc
mov
ss
int
lods
sbb
idiv
and
aad
lea
jb
xchg
das
xlat
inc
stos
and
pop
fidivl
adc
ret
jb
fisubrl
mov
jmp
sbb
push
icebp
push
pop
jge
movsl
loopne
inc
pop
imul
test
sub
loopne
mov
iret
xchg
mov
sbb
xor
loope
stc
icebp
iret
fcmovu
xlat
xor
mov
dec
jns
mov
and
pop
add
in
fsubl
jecxz
add
imul
xchg
shlb
cmpsb
mov
xchg
movsb
std
xchg
xor
data16
cmpsb
iret
mov
add
jecxz
iret
jns
ret
call
imul
test
cltd
add
xchg
loop
addb
cmp
adc
xor
dec
lahf
or
rcrl
rclb
inc
loopne
test
sbb
dec
insb
outsb
or
mov
test
scas
jne
cmpsl
dec
loopne
dec
or
popf
mov
test
jg
mov
add
mov
dec
mov
add
mov
sbb
adc
push
push
repz
jl
add
pop
rorb
mov
mov
mov
adc
sbb
inc
mov
mov
push
xor
push
push
inc
addb
mov
sub
cmc
out
jnp
sbb
iret
xchg
inc
and
mov
iret
xchg
mov
pop
mov
push
mov
imul
aaa
iret
rcrl
cmp
imul
stos
iret
shlb
pop
cmp
popa
testl
jmp
push
cvtps2pi
pop
js
xor
cmpsb
inc
sbb
push
inc
in
mov
inc
mov
xor
stos
jecxz
lods
and
icebp
dec
or
push
adc
lods
out
test
mov
in
aas
aaa
cmp
pop
std
faddl
cld
pop
lods
adc
pop
xchg
add
jbe
ret
test
xchg
jae
cmpsl
pop
shlb
sub
clc
mov
xor
flds
xchg
adc
dec
add
test
mov
sbb
fidivrs
sahf
test
xor
aaa
iret
in
inc
jecxz
int3
inc
daa
lods
fs
pop
mov
lahf
mov
jbe
sub
dec
push
gs
addr16
pop
jmp
pop
adc
aam
push
push
jg,pt
daa
jp
leave
and
popa
test
daa
lcall
sahf
aad
adc
jbe
jge
sbb
ret
sub
shlb
lods
xor
or
sahf
data16
xchg
dec
push
shll
sbb
cmp
push
repnz
rclb
mul
and
or
inc
sub
inc
xchg
mov
neg
sahf
out
cmp
or
pop
cmp
js
rcrb
jo
stos
cmp
sahf
mov
pop
or
jmp
xor
pop
clc
cmc
mov
and
loop
scas
cmp
xchg
lret
stc
xchg
test
add
xor
aam
jmp
xor
sti
dec
shll
inc
int
cmpb
js
fdivl
lock
aas
mov
cmpsb
sub
jo
addb
jecxz
jno
scas
mov
jecxz
loope
cmp
movsw
xchg
insl
xor
daa
subb
push
sub
leave
sti
cltd
rcrl
lods
pmulhuw
and
jno
bound
les
add
fs
out
sarl
outsl
mov
and
mov
loopne
dec
cmp
xchg
inc
out
pushf
inc
test
gs
xchg
mov
xor
aas
cmpsl
scas
mov
insb
fwait
stc
jns
push
push
sbb
pop
es
sbb
sub
shl
cmp
add
test
sub
ss
jge
sub
cli
mov
or
addr16
adc
or
das
xchg
xor
lods
add
and
add
mov
pop
out
cld
loopne
mov
aaa
push
adc
xor
aam
sahf
cmp
es
pop
pop
xchg
jge
mov
xchg
xchg
loopne
xchg
mov
and
stos
mov
mov
cmp
dec
push
sbb
cmp
je
leave
cs
inc
mov
push
lea
lods
test
cmpsb
sub
sbb
pop
lock
into
or
pop
lods
sbb
pop
or
enter
pop
cmp
sbb
incb
push
dec
mov
stos
or
jnp
push
jl
clc
push
sbb
cmpsl
out
jnp
mov
loop
test
es
mov
jecxz
jp
fists
dec
push
cli
lret
lock
xchg
push
jno
mov
into
pop
ljmp
test
vmovdqa
pop
mov
lods
scas
std
and
stos
call
jmp
push
hlt
pop
adc
jo
xchg
stos
xor
cmp
jge
mov
mov
mov
or
in
mov
in
mov
and
incl
mov
sahf
add
jmp
repz
mov
mov
int3
xorl
push
stos
inc
test
cmp
mov
xchg
sub
movsb
add
mov
xor
clc
in
xlat
mov
loopne
push
push
ss
test
ret
pusha
pop
adcb
sbb
outsb
cmp
dec
in
jnp
adc
dec
into
es
mov
jmp
ret
stos
sub
dec
jle
mov
pop
fsubrs
repnz
sub
vmovlps
mov
fwait
lods
std
ret
test
pop
cmp
jg
and
fmull
jle
pop
pop
jns
dec
sbb
out
out
imul
icebp
add
std
push
stc
and
in
inc
push
ljmp
ljmp
lahf
push
mov
dec
aad
loop
mov
push
xor
jp
popf
out
mov
nop
sbb
dec
add
inc
pop
dec
jo
and
ja
sub
testb
cmp
aaa
sbb
mov
repz
addr16
jg
xchg
cmp
inc
addr16
ret
inc
or
mov
roll
push
bound
inc
out
and
push
xchg
cltd
je
call
lds
outsb
adc
inc
add
dec
out
or
rcrb
jne
sti
sub
jbe
test
or
cwtl
scas
mov
dec
cmp
mov
dec
push
sub
jae
sahf
fs
push
cmp
adcl
out
scas
and
pushl
inc
shlb
jp
dec
push
fldl
rcll
xchg
cwtl
cmp
adcb
pop
xor
pop
ss
movsb
inc
cmp
bound
pushf
adc
dec
sahf
mov
or
pop
mov
fmul
jge
hlt
rorb
cld
setle
dec
sub
movsb
jbe
int3
dec
dec
mov
ljmp
jle
test
iret
and
dec
stc
arpl
mov
mov
es
jecxz
mov
test
or
icebp
sub
stos
cmc
jns
loop
jne
and
mov
mov
or
cmp
rorl
mov
cltd
pop
mov
mov
jno
stc
fistpl
sbb
rclb
jne
lahf
push
into
fwait
push
sarl
je
mov
imul
and
fdivrl
in
ja
std
dec
jno
pop
and
or
andl
mov
std
and
adcl
cltd
mov
mov
es
ficompl
jge
cmc
lods
push
pop
movsl
loopne
sbb
popf
fistpll
adc
inc
repz
lret
dec
cmp
mov
mov
cmpsl
in
arpl
cwtl
jmp
xor
adc
xor
loopne
cmp
mov
ret
ret
xor
sub
stos
mov
mov
jo
ljmp
ret
cmp
pop
jb
sbb
cld
clc
ret
sub
and
push
cmp
pop
pop
sub
daa
std
js
lds
rcll
bswap
js
push
or
dec
xchg
and
jg
push
jecxz
inc
loop
shll
loop
imul
jbe
daa
mov
rcrb
mov
pushf
insb
fwait
aas
sti
cwtl
mov
inc
xchg
imul
add
lret
add
jecxz
fwait
and
loopne
xchg
cmpsb
cli
popa
mov
mov
fwait
jl
mov
jae
mov
stos
addr16
inc
and
icebp
jp
xchg
ror
xorb
neg
push
mov
dec
fnstenv
lds
jl
xor
mov
pop
stc
stos
lods
sub
ret
in
sub
cmc
mov
repnz
push
mov
mov
cmp
mov
mov
sub
lahf
int
sti
add
sub
or
call
or
xor
into
pushf
xchg
or
sbb
out
sub
push
xor
rorb
sub
sub
ret
sbb
adcb
loop
cmp
jl
daa
inc
inc
idivb
mov
sti
xor
mov
cld
xchg
push
adc
dec
sub
pop
lret
jbe
into
aaa
xlat
push
test
fimuls
push
nop
jb
push
and
lock
aad
inc
jnp
and
cmp
cmp
insl
push
movl
cmpb
fcmovne
or
jl
mov
jb
sub
ret
bound
fisttps
cld
cmp
xchg
lods
cwtl
int
mov
iret
jae
mov
mov
ja,pn
gs
bound
sahf
xchg
fsub
mov
sbb
push
data16
into
imul
imul
push
xor
adc
mov
rclb
jnp
pop
les
push
cmp
imul
ds
inc
dec
daa
js
push
test
jns
mov
pop
dec
xor
std
push
sbb
xchg
out
out
lcall
es
fadd
inc
dec
and
mov
and
cmpsb
or
push
xchg
gs
sbb
mov
sub
sub
mov
pop
cmpsl
jb
and
mov
mov
gs
inc
popl
out
jne
dec
push
lds
ss
jno
mov
into
loopne
negb
mov
xor
jg
enter
xorb
in
push
cs
inc
outsb
mov
fs
mov
or
mov
stos
test
lcall
orb
sbb
aas
scas
aad
or
imul
fstpt
test
ret
test
das
mov
lods
cmp
sti
loope
mov
mov
mov
mov
jecxz
das
fidivrl
cmpsl
mov
jg
mov
xchg
imul
stos
sbbb
data16
mov
inc
mov
arpl
pop
lods
mov
push
test
into
mov
cli
dec
nop
mov
loope
fcomps
lea
js
les
dec
inc
rorb
fstpl
imul
aam
lock
out
dec
jno
xor
test
inc
mov
bound
inc
push
xlat
js
cs
pop
fidivs
popf
push
loope
dec
jle
fdivl
sbb
pop
fwait
push
push
shll
icebp
adc
add
or
or
mov
sub
add
or
xchg
aam
pop
insb
mov
sbb
outsl
dec
push
pop
pop
jb
aad
mov
aam
inc
xor
dec
or
outsl
fstpl
push
pop
xor
dec
outsb
and
sub
sbb
push
cmp
or
ror
mov
inc
or
dec
cmp
lret
push
loop
push
out
mov
jne
ret
bound
pop
pop
add
leave
mov
fimull
sub
cmc
es
add
in
out
jnp
mov
mov
rcr
test
sub
xchg
lods
jmp
jmp
neg
jg
mov
xor
xchg
je
inc
fists
jb
out
bound
pop
in
push
out
imul
jmp
imul
jns
xor
test
dec
sbb
int3
pop
lret
movsb
sbb
fdivrp
in
scas
lock
je
fcoms
andb
ss
and
mov
outsl
shrb
cmp
ljmp
and
push
mov
jge
sub
inc
xchg
sub
scas
and
push
jae
pop
in
cli
push
jp
jle
int3
push
push
mov
adc
mov
test
dec
cmp
mov
rcrl
adc
mov
into
cs
mov
insw
sbb
inc
out
xor
xlat
cmp
call
sbb
dec
in
fisttpl
or
scas
inc
pop
imul
scas
or
movsl
mov
mov
fiaddl
mov
stos
packuswb
fadd
push
lods
gs
jg
or
jge
cmp
xor
dec
movsl
test
fdivl
pop
sahf
cmpsb
dec
outsl
ret
mov
pusha
cmpsl
dec
dec
out
mov
outsb
lret
jb
mov
mov
ljmp
dec
mov
mov
cli
add
mov
stos
xchg
shll
out
xchg
fwait
jnp
out
aas
les
or
pop
xor
xchg
pushf
sbb
xor
enter
lods
push
jne
pop
ror
ror
test
jmp
andps
cmp
adc
in
shrl
pop
repz
dec
mov
cmpsb
fcompl
mov
cmp
loopne
rcll
cmp
stos
daa
cmpsl
xor
data16
xchg
mov
xchg
pop
mov
fwait
cmp
mov
sbb
loop
xchg
and
push
rclb
or
sub
fnstenv
dec
jbe
pop
pop
mov
xchg
lret
xor
insb
iret
push
out
sub
inc
mov
inc
add
add
aam
aad
lods
xchg
add
add
jp
inc
into
hlt
jns
in
insl
push
lds
or
and
xor
cli
fistps
mov
sbb
jg
dec
mov
lret
insl
add
pushf
es
xor
addb
cmp
push
lock
push
in
mov
sbb
sbb
ficompl
test
in
cli
test
rorl
test
xor
push
insb
pop
icebp
pop
cmp
in
jno
sub
test
mov
lcall
lret
mov
in
out
inc
sub
sbb
enter
add
xlat
sbb
xchg
mov
mov
push
lret
sub
mov
fsubrs
loope
mov
repz
cmp
lds
jmp
dec
cmc
shll
out
fwait
xchg
xchg
pop
sti
jne
cmp
jmp
jne
mov
out
cmpb
movsl
jge
xchg
xchg
loop
test
aad
ljmp
mov
push
dec
lods
mov
icebp
lahf
cmc
sub
pop
or
cmp
repz
xlat
adc
jae
test
ljmp
pusha
xor
out
push
or
push
arpl
and
aas
push
ss
js
cmpl
mov
out
inc
sbb
lahf
pushf
sarl
inc
xorb
clc
insl
or
adc
mov
or
mov
popf
test
xor
mov
jg
stc
cmp
sbb
mov
sub
lods
gs
popf
push
loop
sub
mov
adc
push
mov
popf
shl
mov
rcrb
lock
test
fwait
incb
scas
fdivrp
mov
xchg
mov
inc
cli
mov
addr16
dec
mov
mov
xchg
adc
add
xchg
and
dec
mov
je
gs
stos
sub
adcl
jp
pushf
inc
or
or
xchg
cmp
shlb
cld
xor
and
int
lcall
inc
push
mov
es
stc
mov
int3
les
jg
jb
pop
lret
xchg
stc
push
fcoms
loopne
push
pushf
scas
jle
repnz
inc
sub
add
mov
jno
cmc
mov
dec
adc
es
mov
jge
loope
sbb
jg
push
mov
sub
inc
das
push
mov
inc
jp
cmp
sub
out
xor
js
jne
cmp
mov
dec
outsl
imul
imul
addr16
mov
shl
pop
fidivs
loop
sub
insl
mov
cmp
or
xor
xchg
xchg
faddl
in
js
jno
xor
jbe
lods
cld
sahf
arpl
dec
push
nop
movsb
mov
out
or
dec
add
mov
add
adc
les
and
outsb
out
add
pop
sbb
push
cld
sub
cmp
xchg
lods
mov
jns
push
inc
push
inc
je
mov
mov
loopne
inc
les
add
jo
dec
dec
ret
sub
sub
insb
lahf
mov
mov
loopne
add
adc
mov
adc
rcl
fmulp
mov
xchg
andl
mov
adc
lea
sti
fdivrs
loop
sub
addr16
lahf
mov
out
mov
lahf
sub
mov
adc
cld
adc
int3
int3
and
or
pop
dec
jecxz
sbb
fwait
xor
cmpsl
int3
and
ret
rol
pop
pop
data16
mov
insl
shll
and
out
ljmp
mov
jl
sub
leave
aad
out
je
icebp
pusha
or
popa
arpl
repz
mov
xor
loopne
hlt
shl
push
roll
jge
cld
gs
xchg
jb
jno
mov
mov
aas
push
rcll
sbb
sbb
mov
call
xchg
xor
cmp
push
mov
jle
xor
mov
mov
and
push
insl
enter
dec
insb
shll
xlat
je
cs
fnstenv
push
sbb
inc
cwtl
add
dec
dec
jmp
sahf
popf
xor
nop
or
xchg
jns
je
mov
mov
push
ficomps
push
aam
mov
sub
lret
nop
test
pop
sbb
adc
push
mov
lcall
in
insb
fildll
xchg
test
fistpll
push
adc
in
and
mov
mov
pop
xchg
dec
mov
jns
adc
stc
in
dec
cmc
hlt
pushf
mov
imul
lcall
insl
repnz
push
push
or
sbb
enter
cld
xor
jns
add
xor
add
pop
fisttps
ja
mov
into
xorb
dec
push
scas
ljmp
repz
push
sti
jmp
stos
xchg
mov
jno
icebp
adc
push
jmp
jno
adc
cmp
push
or
in
jmp
int
jg
xor
out
xchg
add
cmp
pop
push
push
push
sub
sahf
scas
sbb
in
les
and
into
jl
adc
push
xchg
icebp
cs
test
push
int
jae
stos
shlb
sub
pusha
out
loope
fs
mov
in
or
pop
clc
or
mov
adcl
mov
int3
adc
xor
xor
mov
mov
sub
out
xor
cwtl
pop
xorl
jo
mov
bound
or
pop
sbb
clc
popa
jp
ss
jg
test
sub
cmp
repnz
scas
mov
xchg
mov
or
jb
sbb
push
loope
lock
push
mov
cli
lcall
cmc
imul
cmp
int3
xchg
and
dec
xor
icebp
jne
aad
push
mov
mov
pop
jle
mov
lods
adc
xor
std
aad
push
aaa
ljmp
roll
test
inc
addr16
out
pop
int3
int
push
inc
testl
pop
inc
mov
call
shll
cmp
mov
call
insl
iret
pushf
vmaskmovdqu
stc
testl
inc
xchg
inc
jg
or
std
and
sub
nop
lea
outsb
fidivrs
mov
jnp
in
xchg
and
mov
icebp
es
es
and
jb
mov
and
adc
addb
add
mov
jno
and
js
cmpsb
incb
adc
xchg
je
cwtl
scas
mov
clc
and
xor
out
xlat
mov
daa
inc
lods
mov
fidivl
pop
mov
pusha
add
adcl
jnp
pop
adc
popa
sbb
mov
push
mov
xor
aam
ja
inc
mov
mov
add
ds
inc
jge
or
out
aas
xchg
sub
test
lds
rorl
xor
sbb
pop
and
push
cmpsl
nop
add
lea
in
adc
pop
fisttpl
xchg
int3
xchg
sub
adc
mov
or
add
xchg
mov
loop
adcl
mov
xlat
lcall
sbb
testl
xchg
lret
sbb
mov
pop
pushf
fdivp
pop
xor
lret
int3
fcomps
add
jle
sub
ja
xchg
or
sbbb
pop
out
xchg
aaa
subb
sbb
mov
push
inc
stos
cmp
fstl
stos
in
sub
adc
dec
data16
mov
inc
popa
movsb
cmp
xorl
cmp
dec
xchg
jnp
popa
add
cli
leave
cmp
pop
outsl
arpl
lahf
xchg
jno
es
add
jbe
xor
loope
icebp
add
mov
inc
push
push
ss
es
add
jbe
xor
loope
icebp
add
mov
inc
rcll
es
add
jbe
cmpsb
xor
loope
icebp
adc
mov
inc
pop
push
insb
popa
push
jno
add
jbe
out
xchg
sarl
loope
xchg
pop
sbb
outsl
sbb
mov
add
pushf
or
and
in
pusha
std
pusha
or
mov
mov
insl
lock
lea
popf
add
xor
nop
in
jo
pusha
or
test
mov
insl
call
mov
and
adc
pusha
push
nop
jns
sub
aas
sbb
test
in
fwait
push
mov
jl
mov
stc
cmp
xchg
shll
pop
mov
pop
ds
jp
push
push
and
xor
fcoml
pop
outsl
adc
movb
or
xchg
leave
shrb
mov
pusha
or
mov
nop
push
dec
add
test
pop
add
call
xlat
fbstp
add
or
test
popa
int
ret
lock
cmp
mov
lret
add
jne
and
jo
lahf
lock
loop
out
mov
imul
jge
ficoml
insl
adc
and
push
xor
rcll
mov
insl
jmp
popf
sbb
dec
fstl
jo
add
cmc
imul
or
js
lds
cmp
mov
orb
movsl
dec
mov
das
mov
imul
arpl
and
add
inc
rcll
add
loopne
adc
and
push
fldl
jo
pusha
or
mov
mov
insl
lock
lea
popf
add
push
fldl
jo
pusha
or
xchg
adc
xchg
cli
xchg
dec
sub
hlt
adc
pop
xor
sub
pop
fidivs
dec
popa
pop
jp
cwtl
add
sub
cmp
mov
and
and
imul
cmp
fiadds
pop
int3
sbb
push
popa
xchg
xchg
loope
insb
lds
xlat
mov
outsl
cmp
cmp
mov
leave
mov
pop
lahf
sub
dec
inc
xor
mov
xchg
adc
add
sub
into
nop
fildll
nop
icebp
xor
xchg
inc
push
out
mov
je
pop
push
cmp
pop
jbe
leave
loope
dec
daa
adc
lods
stos
xlat
clc
lret
loopne
aam
pop
and
aaa
mov
jp
ds
adc
mov
pop
xchg
sarb
out
in
xchg
inc
mov
and
popf
xchg
xor
sub
lods
sub
out
mov
and
jnp
push
push
mov
stos
jp
outsl
pop
into
sbb
sarb
iret
sub
loopne
stos
push
movsb
adc
mov
nop
fsubrp
fmull
xchg
loope,pn
fdivrs
push
das
pop
pop
dec
sbb
dec
sub
pop
ret
push
cmpb
cs
pop
or
mov
mov
sbb
pop
adc
jns
shlb
jecxz
jp
das
sub
push
and
mov
inc
push
shrb
mov
cli
out
mov
cmp
xor
pop
std
dec
fldcw
dec
lock
pop
push
and
and
add
mov
pop
shlb
andl
inc
jno
imul
xchg
xor
adc
subl
xchg
cli
jb
out
aad
popa
addl
mov
outsb
out
in
outsl
xchg
fsubp
jmp
mov
btc
sub
jp
add
js
das
sub
sub
cmp
pop
fistl
xchg
push
daa
adcl
lret
xor
outsl
cmp
js
lods
mov
or
cmpl
jg
idivl
test
outsl
xor
mov
call
out
ljmp
and
dec
mov
sbb
xor
mov
jno
stos
movsl
loope
movsb
push
xor
push
adc
loop
aaa
leave
xchg
lret
cmp
sbb
lcall
scas
xor
out
mov
pop
sbb
test
setb
daa
cmc
adc
gs
push
test
cmp
out
test
push
inc
sbbb
pushf
pop
cltd
cmpsb
push
aaa
and
roll
jp
pop
outsb
pop
xchg
pop
mov
movsb
pop
push
adc
imul
imul
int
aam
add
inc
lea
insl
xor
or
jnp
pop
jb
bnd
stos
imul
dec
push
imul
aam
sub
repz
int3
lahf
lcall
je
push
aaa
pop
daa
in
sub
je
push
xor
mov
mov
int
cmp
imul
cwtl
in
sbb
fidivrs
mov
scas
mov
push
es
enter
repz
test
aam
test
roll
pop
and
pusha
repz
inc
jecxz
or
fsubp
push
repnz
lret
mov
dec
stos
mov
xor
xlat
cmp
mov
shlb
in
pop
mov
dec
mov
cmp
sub
or
mov
jnp
pop
mov
arpl
jno
push
ja
rcr
sbb
push
dec
mov
notl
mov
outsl
push
sub
or
mov
mov
push
xchg
mov
popa
ja
lcall
std
add
mov
and
mov
stos
mov
pop
in
mov
fistpl
cli
repnz
rol
std
ljmp
jg
fcmove
popa
xlat
int
sbb
stc
lcall
shll
iret
mov
xor
add
adc
mov
xchg
hlt
in
push
jle
push
sbbl
xchg
mov
push
cld
jl
xlat
jg
push
pop
jle
mov
cmp
aad
mov
mov
mov
movsb
fmull
cmc
in
insl
and
xchg
jae
inc
lret
fcomps
dec
std
and
sub
dec
mov
movsb
sbb
popa
jb
inc
inc
js
adc
ret
pop
shll
sbb
leave
inc
bound
cmpsb
in
jnp
push
jg
cmp
ja
sti
add
cmp
andl
out
xor
icebp
pop
sub
shll
adc
shll
sub
mov
push
out
pushf
insl
sub
cmpsb
and
cwtl
je
jp
fcoml
mov
mov
fidivrs
inc
lret
mov
push
ss
imul
out
cmp
rcl
xor
fwait
dec
mov
pop
and
push
adc
xchg
fs
jg
pop
sub
xchg
sub
mov
lods
or
cwtl
out
pop
cmpsl
repz
rcrl
mov
sub
in
outsb
orb
es
pop
mov
mov
loop
mov
push
cmp
add
jge
xlat
inc
inc
lods
and
sbb
test
mulb
push
mov
movsb
or
jnp
test
jns
jp
jg
cld
pop
or
fs
nop
mov
sbb
jmp
mov
and
cmp
and
xchg
mov
pop
xchg
ret
cmpl
test
xlat
test
pop
mov
incb
xchg
scas
inc
fs
mov
add
xor
mov
push
jecxz
out
or
aad
leave
aam
loope
fcmovne
sbb
cmp
xchg
nop
imul
rcrl
fistps
nop
inc
sbb
adc
mov
aad
movsb
sarb
xchg
lret
mov
int
lret
push
and
xchg
and
xchg
cmp
mov
push
or
out
dec
cmp
xchg
ja
xchg
rol
insb
fcoml
ret
mov
leave
inc
mov
sarl
cltd
roll
push
out
cwtl
sbb
cld
ss
insl
inc
push
mov
dec
popf
add
cmp
xor
cmp
js
mov
nop
pop
test
pop
dec
out
int3
lods
and
hlt
xchg
dec
xlat
sub
cmc
add
leave
or
sbb
mov
movb
push
in
sbbb
xchg
and
lret
stos
int3
pop
fwait
xor
sub
cmpl
out
inc
sti
ret
jecxz
xchg
sbb
scas
mov
cmpsb
sbb
in
test
mov
dec
mov
loop
and
stos
into
push
punpckldq
dec
aas
jmp
jae
imul
addl
sub
pushf
mov
shrl
ja
xor
and
and
sbb
push
xchg
pop
nop
push
jns
mov
push
iret
nop
adc
ret
mov
lods
into
test
and
dec
xchg
cmp
pop
push
xchg
mov
or
or
sbb
enter
or
jns
fcmovnb
in
out
xor
and
xor
push
or
jg
push
scas
pop
adcb
sub
sub
leave
push
push
adcb
pop
mov
and
sub
dec
in
insl
dec
scas
and
mov
push
cmp
xor
jno
repz
push
cmp
fwait
fs
push
mov
mov
lret
add
push
daa
jno
xor
ss
inc
jnp
insb
cld
jl
jne
outsb
cmp
sbb
mov
test
mov
push
xorb
or
and
sbb
sub
repnz
cli
push
lret
popf
rorb
inc
jecxz
xchg
into
cmp
daa
test
mov
lods
roll
les
push
xor
fwait
xor
inc
stos
leave
push
mov
xor
xchg
sub
iret
loop
aad
jns,pn
fs
pop
jae
out
push
pop
jle
sub
dec
sbb
dec
push
mov
bound
mov
addr16
shl
loope
movsl
imul
and
movsb
xchg
jg
jle
icebp
mov
sub
test
ljmp
lock
fsubp
repnz
adc
int3
sbbb
jno
jp
mov
stos
or
push
add
adc
int
add
cmp
shr
push
sub
inc
faddl
pusha
loopne
nop
jge
cmp
xchg
jo
cltd
imul
idivb
int
sub
into
dec
cld
cld
lret
enter
sub
popa
icebp
and
pop
mov
mov
inc
lock
shl
ror
pop
bound
mov
sub
push
jae
lahf
out
icebp
jnp
shrl
loop
mov
push
or
lret
xchg
lods
je
cld
and
mov
xor
lret
outsb
repz
ja
sbb
je,pn
jnp
neg
xor
push
jecxz
aaa
and
lret
scas
into
test
test
scas
and
fadd
mov
enter
xchg
mov
movsl
adc
shlb
xchg
add
pop
xor
mov
dec
fidivl
fisubs
movsb
pop
dec
pop
or
orl
xchg
mov
lods
insb
jecxz
popf
mov
xor
int
push
clc
subl
out
inc
add
and
push
test
cmp
repz
fistpll
push
rcrl
addb
and
xor
std
pop
add
lock
pxor
insl
adc
jo
jecxz
clc
insb
in
mov
leave
jl
and
push
sub
test
dec
cmp
in
ljmp
or
pusha
add
hlt
sbb
div
ss
fstpl
push
or
neg
sbb
jae
jbe
stos
iret
fstpl
ficoml
push
adc
cs
mov
xchg
mov
fs
mov
iret
in
outsl
mov
xor
mov
pop
push
pushf
imul
mov
cld
jb
imul
pop
jnp
xchg
fisttpll
and
test
xor
adc
push
sub
and
callw
in
mov
and
dec
pop
lds
es
shr
int3
imul
xchg
ss
xor
dec
mov
xlat
out
divl
jo
in
fsubl
jmp
cwtl
xor
pop
daa
insb
out
sahf
mov
push
adc
mov
dec
lret
insb
popf
or
xchg
inc
cmp
lock
fisubrs
js
mov
mov
sub
sbb
pop
rorl
push
or
ret
mov
outsb
xor
sbb
fisubs
stos
mov
stos
inc
in
mov
jno
xchg
rorb
aaa
sahf
fwait
xchg
pop
push
dec
in
add
xchg
gs
pushf
or
sub
push
cwtl
aam
stos
dec
sahf
cmpsb
arpl
sbb
cmp
sar
stc
jb
and
repz
adc
jb
popf
nop
mov
add
in
notl
add
out
push
pop
jmp
in
xchg
loop
pop
push
std
dec
push
mov
inc
orl
lea
jecxz
jne
dec
add
jno
mov
outsl
daa
cmp
mov
jmp
pop
sbb
stos
and
daa
scas
outsb
fcmovnu
stos
movsl
testb
cwtl
imul
mov
lods
sub
inc
jle
xor
mov
in
addb
adc
aas
sub
hlt
push
popf
xchg
xchg
sti
jne
lods
into
mov
mov
xor
es
push
lahf
xor
btc
lea
inc
faddl
mov
pop
add
std
dec
mov
push
dec
mov
add
sbb
lahf
call
lods
inc
jecxz
jns
cmp
mov
fbstp
and
aaa
dec
into
mov
outsl
out
cmp
dec
adc
fwait
es
and
nop
xchg
dec
xchg
lcall
pop
sbb
jmp
lods
mov
test
xor
dec
xor
mov
sbb
notb
push
push
xor
adc
sub
call
stos
push
push
cmpb
popa
cmp
dec
fwait
lea
push
and
and
sbb
mov
aaa
mov
arpl
push
lock
push
sub
sbb
negl
add
fidivrs
out
in
lods
lret
int
or
ss
mov
jno
pop
arpl
lcall
adc
mov
sbb
inc
cmpsb
popf
iret
push
aam
lret
enter
sub
cs
push
dec
sub
inc
into
popa
dec
mov
push
xor
and
xor
cmp
pop
mov
shll
push
fucomi
xor
push
jns
fnstenv
jg
push
xor
or
push
xlat
in
jns
cmp
inc
and
out
movsl
and
orl
out
nop
or
loopne
fldenv
sub
xchg
fsubp
fnsave
pusha
fildll
pushf
xlat
cltd
sbb
pcmpgtb
inc
mov
xor
lret
scas
ljmp
in
sbb
sbb
cmp
shlb
lret
aaa
add
or
cmpsb
cmpsl
std
iret
outsl
fs
cmp
xorb
or
add
sbb
jbe
sub
scas
jno
sub
bound
sahf
in
lcall
pusha
pop
push
inc
adc
mov
clc
pushf
mov
stc
test
inc
cmpsl
rcrb
and
insl
push
push
or
fistl
push
stc
push
sub
nop
inc
or
aam
sub
cmp
shrl
mov
cmpsl
push
mov
and
test
mov
inc
sub
jle
and
dec
adc
xchg
test
nop
or
mov
mov
mov
ficompl
popf
jae
imul
shll
sbb
insl
mov
jnp
repz
jne
out
scas
aaa
mov
roll
sub
divb
xchg
sahf
gs
test
push
sub
and
call
shlb
ffreep
sbb
outsb
ss
dec
cli
mov
and
test
dec
shlb
ljmp
ret
mov
dec
jecxz
adc
inc
inc
je
push
scas
sub
push
mov
sub
push
cmp
icebp
mov
je
cmpsl
add
lock
pop
repnz
xchg
mov
cmp
xor
out
or
jle
lods
cmp
mov
pusha
adc
or
aaa
adc
add
mov
into
rol
les
sahf
xor
jno
cwtl
mov
scas
or
pavgb
js
lcall
adc
mov
lea
in
xchg
in
mov
mov
mov
sub
mov
push
popa
jmp
out
lods
push
pop
shrl
das
xor
push
inc
sub
cltd
add
mov
fisubs
push
in
adc
les
repz
dec
mov
call
dec
xchg
mov
mov
jno
adc
inc
fnsave
frstor
inc
test
push
loop
jbe
xchg
enter
insb
adc
rcl
enter
add
ds
inc
or
lods
ret
outsl
das
in
cmpsb
shll
orl
dec
outsl
jae
inc
shlb
iret
pop
fistpl
sub
stos
jmp
xchg
add
pause
push
xlat
fisubrs
icebp
jmp
xor
popf
mov
dec
push
sub
out
or
orl
inc
out
or
mov
and
push
int3
popf
cmpsl
repz
mov
je
stc
cmp
mov
mov
popf
sahf
dec
pop
les
xor
jg
in
lret
pushf
divb
sarl
push
dec
rolb
push
out
or
jne
xchg
cmp
in
and
cmp
lock
mov
sarl
scas
lods
pusha
mov
pop
stos
sub
inc
xchg
sahf
dec
mov
rcrl
pop
lock
ret
push
inc
add
mov
outsl
inc
stos
ja
jp
ret
jmp
mov
je
dec
cmc
idivl
xchg
adc
daa
dec
stos
fnsave
outsb
and
in
mov
sti
xchg
cmp
push
dec
inc
inc
pop
add
decb
sbb
or
xor
mov
sub
std
andl
loopne
push
or
push
or
push
faddl
ret
cs
push
xchg
xchg
jns
hlt
inc
adcl
and
andl
mov
aad
inc
cmp
fs
daa
outsb
js
hlt
nop
dec
out
pop
aam
push
lret
lds
mov
jo
pushf
rol
out
adc
je
je
dec
enter
pop
sub
lret
push
sbb
or
dec
or
adc
imul
pop
ret
sub
ja
jp
lret
stos
xchg
xchg
mov
sub
and
cmp
and
mov
sub
dec
sbb
test
pop
fdivrl
imul
pop
sarl
cmp
push
mov
xchg
sbb
lahf
add
cmc
shlb
into
ficomps
push
dec
das
pop
jp
sbb
loopne
mov
ljmp
jge
xor
imul
leave
jne
gs
xor
mov
loopne
xor
xor
je
jle
adc
xor
lods
push
in
sti
jecxz
mov
sbb
popf
inc
adc
inc
mov
icebp
jle
pop
loopne
xchg
int
cmpl
rep
mov
push
ret
xor
movsb
cs
out
jnp
xchg
test
sub
pop
push
pusha
and
dec
and
stc
cli
jmp
sbb
pop
loope
mov
jae
ret
dec
addr16
aaa
outsl
xor
and
push
inc
jne
cmp
sbb
pop
stc
das
dec
mov
clc
and
aas
insl
push
push
enter
test
cwtl
repz
in
pushl
outsl
cmpl
or
or
pushf
jno
test
jp
mov
and
mov
xchg
dec
and
pop
xchg
xchg
cmp
dec
xor
sbb
clc
ret
sub
arpl
xor
ss
mov
test
icebp
inc
inc
cltd
fimull
pop
or
mov
cmp
pushf
cmc
int
pop
andb
in
int3
lds
push
outsl
or
les
insl
push
inc
jnp
ret
pop
in
jmp
daa
push
mov
nop
mov
xor
in
mov
inc
and
leave
mov
repz
daa
adcl
fs
add
inc
cli
mov
and
repz
subl
sbb
les
es
xor
out
mov
lar
stos
add
inc
dec
and
aas
mov
lods
lcall
fnsave
add
xchg
out
fistpl
aas
cli
scas
mov
sbb
ret
imul
xor
and
aas
bound
push
adc
cmpsb
ljmp
rdmsr
shlb
mov
cli
jge
int3
das
xchg
imul
dec
nop
cmp
fadd
xchg
xor
roll
push
sar
sti
int3
cwtl
imul
aam
mov
jne
and
cmpsl
fwait
mov
orl
ret
int
mov
roll
cli
aad
jb
leave
dec
push
jno
and
cmpsb
into
out
push
aaa
ds
movb
mov
cmp
or
inc
je
mov
xor
or
into
sahf
mov
mov
js
int
xchg
shl
loope
xlat
out
mov
add
dec
add
out
jp
jns
ljmp
push
fsubs
mov
mov
pop
cmpsl
lea
xor
lods
dec
pop
pop
repnz
pop
adc
cmp
test
mov
hlt
jg
adc
iret
sbb
cmp
fwait
icebp
aad
cwtl
bsr
or
dec
xor
or
cmp
jle
mov
test
lods
fnstsw
push
cmp
cmp
and
push
and
mov
addl
dec
ljmp
sti
push
sub
cmp
iret
cmpb
pop
mov
cs
orl
movsl
jne
test
add
push
int3
jne
jg
mov
lods
in
fsub
pop
sbb
xor
xor
sub
inc
popf
div
mov
pop
repz
pop
jno
test
clc
scas
mov
les
mov
call
sbb
add
jno
hlt
jecxz
and
jns
and
imul
aad
add
cld
sti
mov
pop
inc
push
and
sbb
rcrb
sti
add
cmp
push
cmpsl
mov
das
dec
jno
inc
loopne
popf
sub
or
enter
fs
xchg
add
push
repnz
push
lock
loope,pt
imul
fildl
jge
xchg
aas
sarb
and
jns
pop
dec
movsl
adc
ret
hlt
ds
test
mov
sar
mov
rcll
push
out
imul
dec
lret
push
inc
pop
inc
lods
lods
mov
lods
lret
mov
movsb
repnz
mov
cs
fmul
inc
fstps
stos
push
push
mov
jb
ret
or
lods
xlat
mov
test
subb
mov
insl
lock
lea
popf
add
push
fldl
jo
pusha
or
mov
mov
insl
lock
lea
popf
add
push
fldl
jo
pusha
or
mov
mov
insl
lock
loopne
adc
and
push
fldl
jno
pusha
or
mov
mov
insl
lock
lea
popf
stos
pop
xor
mov
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
stos
and
shll
mov
out
shlb
popa
pop
push
adc
xor
inc
popa
mov
out
loope
loope
shll
sbb
xor
push
push
adc
call
ds
test
mov
jno
push
cmp
pop
insb
xor
push
aad
imull
sub
mov
lods
filds
fstpl
fwait
push
aas
icebp
xchg
rcl
dec
jbe
pop
pop
popa
sbb
mov
fisttpl
push
jbe
std
out
mov
jl
loope
cwtl
std
add
mov
scas
jae
sahf
add
and
fs
mov
mov
test
xchg
xor
mov
jns
cmpl
fistpl
fsts
call
imul
and
sahf
inc
inc
les
fwait
and
aaa
stc
stc
adc
imul
sub
jno
stos
cmc
mov
inc
scas
repnz
pop
icebp
sub
adc
mov
push
xor
loope
rcl
mov
les
pushw
mov
sub
mov
addb
aad
int3
mov
add
subl
cmp
sbb
mov
ret
fadd
xchg
iret
xchg
jae
popa
popa
adc
xor
push
or
popa
add
pop
cwtl
not
je
enter
mov
hlt
jno
popa
adc
and
xor
inc
and
add
loope
shll
aam
in
hlt
jno
popa
adc
and
xor
inc
and
add
and
mov
test
dec
fxch
pop
dec
adc
mov
mov
sbb
lods
xchg
out
dec
push
cmp
jmp
inc
repnz
pop
jecxz
mov
stos
xchg
cpuid
imul
rorl
add
repz
aam
insl
cmp
mov
leave
out
aad
dec
mull
xor
inc
aad
call
inc
mov
in
fimuls
jbe
lods
push
or
lahf
in
sub
mov
add
dec
cmp
leave
fsub
hlt
ljmp
mov
inc
sub
fists
dec
add
sbb
fdivr
nop
iret
addr16
add
jge
lds
pop
repz
cltd
lods
sub
ss
lahf
cmp
jb
mov
aaa
arpl
out
mov
jl
sub
test
ret
addb
mov
inc
movsl
sti
aam
mov
in
fimuls
and
ljmp
push
and
stos
mov
push
sub
and
imul
lea
cmpsl
push
dec
int
icebp
loope
xlat
hlt
push
pop
adc
or
incb
popf
pushf
cmp
insb
shrl
cs
push
xor
aaa
push
mov
call
push
sub
daa
test
stc
js
and
pop
xor
aaa
sbb
jle
push
cmc
cmpsb
and
and
das
repnz
adc
in
shll
bound
adcl
cwtl
ja
push
aam
pop
rcrb
popf
push
js
or
shrb
test
imul
mov
sbb
loop
push
mov
push
and
mov
jno
movsl
jb
sub
repnz
or
pop
fmuls
inc
test
ljmp
dec
in
push
adc
pop
loope
sub
shll
dec
sub
dec
add
xor
pop
mov
push
and
sub
into
push
jne
jns
fs
mov
fsubs
push
imul
clc
xchg
loope
stos
mov
sub
adc
xchg
pop
sbb
rol
push
mov
push
das
test
push
je
dec
leave
push
add
out
mov
add
pop
mov
mov
mov
and
scas
pop
sbb
mov
ret
scas
or
shrb
jbe
cmpsl
test
cmp
cmp
dec
jle
jae
dec
inc
xchg
bound
rolb
inc
jl
xchg
fstpl
pop
lcall
mov
aaa
dec
lods
or
sahf
sti
js
dec
fadds
shr
lds
std
xchg
jl
pop
adc
fadds
shrl
inc
dec
fldl
push
jmp
mov
jmp
fcomps
mov
or
out
popa
shl
js
inc
mov
test
imul
rcrb
sti
xchg
clc
inc
int3
or
xchg
lea
mov
lret
ret
inc
mov
int
adc
dec
push
jno
inc
stos
test
add
lret
aam
mov
jne
push
pop
add
outsl
push
pop
insl
or
out
dec
xchg
movsb
stos
cmp
data16
xor
sbb
xchg
jns
sub
xchg
fmull
ret
mov
and
sub
arpl
in
cmp
mov
mov
inc
add
adc
les
adc
inc
cs
and
test
in
lcall
int3
xor
clc
into
mul
pop
shl
cli
adc
std
xchg
hlt
aaa
sub
gs
in
outsb
push
stos
cmpsb
imul
test
sub
push
jnp
inc
mov
mov
fwait
pop
mov
lods
cmp
mov
adc
pop
rorl
pop
or
sbb
nop
xchg
in
fisubs
inc
mov
jl
jno
clc
aas
xchg
fstps
inc
push
lods
ss
push
lods
icebp
xchg
xchg
xor
mov
sub
or
je
adc
push
jae
cli
mov
movsb
cmp
bound
dec
adc
or
dec
out
sti
dec
ljmp
ficompl
rcll
jo
stos
into
adc
loopne
lea
les
fisubrl
xor
lods
sarb
js
mov
inc
sbb
mov
cli
dec
int
mov
shl
or
add
dec
cmpsb
pop
shrb
lcall
ss
pop
call
insb
jg
rorb
adc
ja
push
xor
xor
add
adc
push
and
mov
push
stos
jle
xchg
mov
das
and
fiaddl
mov
mov
xchg
sbb
div
sarl
xchg
push
das
xchg
fisttpl
mov
jg
lods
aas
stos
or
aaa
sub
ja
or
outsl
dec
inc
insb
xor
cmp
push
stos
push
jmp
jo
and
xchg
add
hlt
jns
fisubrl
cmp
dec
xor
pusha
jmp
jg
mulb
xchg
outsl
outsl
inc
mov
jo
xor
or
adc
es
push
mov
mov
movsb
call
popf
pop
fsubrl
aad
pop
ljmp
push
mov
sbb
jl
outsl
mov
fcomip
xchg
mov
sbb
insb
sbb
mov
mov
pop
push
test
in
arpl
popa
mov
dec
stos
jnp
in
push
pushf
jb
xchg
inc
push
filds
stos
push
ss
push
or
sub
rolb
outsl
pushl
sbb
roll
mov
and
pop
adc
cltd
dec
mov
push
cmp
iret
sub
rcrl
fcoms
push
popa
mov
sbb
adc
cs
jo
outsl
fs
out
movsl
dec
inc
ljmp
jl
aad
or
sbb
push
shrb
add
jo
mov
add
cli
fcomp
loopne
mov
imul
mov
and
sbb
in
shlb
push
lds
movsb
sbb
xchg
adcl
inc
cld
push
fwait
pop
inc
aam
mov
imul
dec
fidivs
lea
inc
add
cvtpi2ps
rorl
nop
scas
jmp
sub
mov
insb
dec
mov
lods
fbstp
mov
sub
push
jns
push
jne
jno
test
mov
dec
pop
fimull
ss
xor
xor
repz
adc
stos
and
xchg
ss
sub
call
insb
add
fstpt
enter
xor
ja
dec
test
in
mov
add
sbb
stc
push
scas
arpl
pop
xchg
pop
repz
fdivs
mov
insb
jle
jge
sbb
push
inc
xchg
ret
fldt
mov
das
mov
add
add
jb
pop
mov
jne
and
add
ja
fstl
lcall
shll
fidivrl
or
jo
nop
push
movsl
and
fisttpl
jb
sbb
movsb
stos
mov
imul
mov
ficompl
mov
push
insb
jno
aam
dec
outsb
and
push
lret
loop
and
popa
xchg
push
or
mov
out
inc
stc
pop
xchg
mov
sahf
cmpsb
dec
imul
mov
cli
dec
es
fildll
cmp
xor
xor
and
push
loop
stc
adc
inc
xor
jecxz
jb
jp
xorb
xchg
or
fxch
mov
dec
fsubrl
sub
hlt
dec
sub
faddl
jne
rorl
leave
cmp
mov
xchg
and
repnz
sar
out
test
ss
dec
xchg
xor
daa
mov
dec
scas
xchg
dec
rorl
sti
push
cmpsl
cmpsb
and
hlt
pop
xchg
sbb
arpl
aaa
pop
shll
inc
mov
inc
pop
push
jp
xchg
xchg
xchg
mov
push
mov
insl
fdivs
movsl
enter
loope
cwtl
jae
or
shl
mov
sbb
push
clc
int3
inc
mov
mov
jl
cs
lock
mov
sub
cwtl
push
fnsave
ljmp
push
or
dec
adc
loope
push
and
jecxz
inc
mov
ss
push
pop
fcoml
outsb
icebp
xchg
fdivr
pop
mov
sbb
mov
mov
or
dec
test
dec
and
xchg
leave
sbb
lea
call
subl
nop
add
shrl
popf
sub
jecxz
inc
pop
lret
push
xor
fndisi(8087
and
repz
sbbb
adc
mov
jno
mov
das
loop
xchg
pop
frstor
ret
in
aaa
xchg
movsb
dec
sub
mov
dec
or
enter
mov
mov
jle
out
or
dec
mov
cli
fisubl
repz
ljmp
loop
and
lds
cmc
inc
loope
cltd
jmp
popf
orl
mov
jae
mov
xor
cmp
arpl
std
je
sbb
lcall
sub
cmc
sbb
mov
loop
push
push
xchg
jnp
int3
push
and
stc
inc
jne
into
arpl
fnstenv
mov
int3
pop
pop
or
rcll
shrb
rcl
test
jge
and
push
stos
dec
clc
pop
pop
stc
je
or
cli
aad
jo
ja
cmp
call
ss
test
xchg
out
outsl
cld
xchg
test
inc
dec
mov
fildl
cwtl
fsubl
xchg
jo
movsl
inc
icebp
and
ss
sarb
or
mov
test
lods
test
mov
and
add
test
dec
jo
dec
loop
data16
sbb
cmp
and
pop
jecxz
aam
mov
jge
fs
aas
je
jo
int3
in
outsl
dec
movsl
mov
jbe
repz
jns
add
out
pop
and
sub
pop
xor
or
stos
test
fsubs
jl
repz
fwait
xchg
jl
mov
jg
shrl
imul
test
lods
insb
cmpl
jns
in
mov
inc
lods
jbe
in
and
je
rcrl
adc
and
icebp
xor
mov
dec
xchg
mov
fisttpll
clc
sub
cli
por
xchg
pop
les
sub
mov
add
sti
in
stos
lret
ret
or
cmp
popa
or
adc
adc
cmc
inc
out
std
cmp
or
hlt
add
add
and
lret
out
data16
scas
arpl
sub
enter
js
shrl
push
sbb
or
cmpsl
addr16
addl
movsb
push
xor
cmp
sub
xor
adc
sbb
imull
cmp
lahf
roll
movsl
mov
xor
je
sbb
push
mov
cmp
pop
stc
sahf
add
jge
pop
fimuls
es
mov
std
jb
in
add
adc
clc
movsl
dec
ret
punpckldq
dec
rorl
fistl
cmp
pop
inc
or
push
mov
jge
fcompl
adc
imul
xor
outsb
test
bound
or
movsl
iret
push
dec
int
xor
cmp
jb
movsb
stos
sub
lods
mov
mov
mov
xchg
ret
inc
loopne
mov
push
ja
sbb
int3
adc
jle
lahf
out
arpl
fmul
lods
push
rcrl
jb
jl
inc
jecxz
pusha
mov
test
sarb
jmp
movsl
push
lret
outsl
pop
mov
push
in
mov
sub
xchg
push
roll
imul
cmpsb
push
and
divb
xor
xchg
int3
jmp
dec
shr
mov
bound
cmpsl
call
push
pcmpgtw
inc
ret
fidivs
push
cli
sub
inc
cltd
xor
out
adc
xor
int3
jbe
cltd
xchg
dec
cs
lods
dec
mov
cmp
fimull
lods
xor
adc
mov
sbb
or
sti
daa
jl
pop
pop
mov
cmpsb
dec
adc
or
sub
mov
sub
inc
pop
mov
mov
std
jp
inc
popf
push
stos
jmp
jle
mov
daa
inc
push
arpl
cltd
xchg
sbb
shll
cmc
das
mov
pop
mov
pand
pop
pop
lret
ss
xchg
sub
xchg
xchg
fucom
out
and
jae
mov
inc
xchg
jns
push
mov
xor
jecxz
inc
mov
jbe
xchg
ss
fwait
cs
xorl
push
and
jno
pop
xor
mov
xlat
jno
mov
loope
and
and
fsubrp
mov
xor
leave
push
and
pop
or
out
add
ljmp
inc
ds
stc
aas
mov
mov
mov
add
push
add
inc
imul
pop
jnp
aas
mov
lret
jp
insb
das
push
jns
lahf
mov
sbbb
imul
and
mov
loopne
lods
adc
pop
ljmp
testb
jns
call
adc
push
repnz
jno
sub
les
movsb
sub
xor
mov
sub
inc
int
add
or
or
sub
aaa
or
jbe
xor
xchg
xlat
mov
fwait
lods
scas
gs
dec
loop
pop
and
pop
stos
jo
fs
aas
mov
mov
cmp
std
mov
fldt
and
inc
imul
xchg
scas
es
outsb
clc
or
cmp
mov
mov
test
insb
subb
lcall
stc
test
cmp
int3
ret
in
insl
inc
sub
sub
test
lds
xchg
int
movsl
pop
pop
lds
in
mov
cld
insl
jecxz
pop
insl
cmc
sahf
sub
shl
and
inc
or
sbb
icebp
push
jle
call
dec
mov
pop
fstps
dec
jg
pop
stc
lods
sub
imul
rclb
shrb
jge
cmp
fwait
push
dec
lea
mov
aad
out
push
out
push
mov
lods
lret
cmp
es
in
mov
sti
jb
sbb
es
lahf
mov
dec
aam
sti
data16
imul
mov
out
cltd
xorl
inc
add
icebp
imul
scas
testl
xchg
mov
ds
push
mov
sahf
dec
and
push
or
ret
sbb
andl
dec
adc
decb
cmp
add
pusha
pop
fxam
fisttpll
sub
mov
insb
sbb
sti
and
pop
out
pop
xor
mov
push
jnp
jecxz
inc
rcl
push
les
jp
xor
aas
and
cwtl
cmpsl
xchg
pop
mov
jbe
jp
sub
imul
jle
stos
fwait
sbb
pop
or
cmp
insl
das
shlb
mov
and
pop
mov
arpl
add
dec
mov
push
sub
movsb
outsb
mov
jno
sub
fwait
add
push
sbb
fldl
cmp
fnsave
jo
imul
pop
sub
jmp
xor
movsl
push
xchg
add
mov
or
or
outsb
push
fcompl
jo
lret
scas
add
mov
jo
out
enter
mov
add
pusha
cmp
push
adc
sbb
jl
cld
ret
pop
aad
cli
push
add
xor
mov
cmp
hlt
dec
sbb
dec
pop
ja
dec
and
mov
cli
stos
loop
fwait
hlt
add
repz
or
scas
aad
sbb
jle
pop
cwtl
aad
outsb
cmc
or
mov
inc
out
inc
push
scas
sbb
imul
mov
imul
popf
push
iret
cld
xor
xchg
sahf
jns
xor
iret
rolb
jnp
cmpsb
mov
jo
sbb
xchg
call
popf
push
dec
jle
cwtl
pop
in
and
loop
hlt
and
mov
mov
pop
sbb
das
sub
mov
mov
test
push
jecxz
mov
jno
nop
xchg
lret
jbe
imul
aam
or
inc
movsb
fistps
xlat
pop
pop
imul
inc
push
push
daa
or
pushf
cmc
testb
mov
iret
orl
arpl
in
mov
mov
mov
ret
inc
ret
add
sub
sub
xchg
int
jg
add
mov
lahf
inc
popa
pop
pop
rcll
test
and
mov
in
fnstcw
xchg
addr16
frstor
adc
sbb
xchg
int3
mov
jns
loop
or
stos
fistl
js
sbb
push
jae
dec
or
call
cli
out
andb
pop
outsb
rcr
cmp
jmp
xor
cmc
or
in
jbe
test
adc
ljmp
or
call
push
mov
fisubrs
push
insb
push
fstpl
iret
fs
enter
nop
jmp
pop
xor
xchg
jg
mov
xor
add
add
stc
push
xchg
xchg
jo
fsts
das
outsl
mov
inc
pop
xor
out
jns
or
sarl
mov
ss
nop
ret
mov
adc
insl
movsb
in
and
mov
mov
pusha
rcll
xor
subl
outsb
cmp
cs
cmp
hlt
aaa
add
or
int
xchg
mov
pop
test
sub
lods
jno
in
mov
cmp
cmp
ja
pop
lods
jo
and
mov
lea
cmpsl
in
out
popf
and
inc
mov
pusha
sarl
add
loopne
in
daa
or
sub
push
pop
mov
add
lds
not
pop
jecxz
pop
jnp
rcrb
push
dec
fsub
sti
pusha
leave
sbb
and
cmp
adc
adcb
xchg
mov
lret
inc
fcoml
cmp
mov
pushw
jbe
xchg
in
filds
cltd
addb
mov
add
lea
test
lds
cmpl
loop
ds
js
imul
idiv
jo
dec
add
nop
loop
movsl
movsb
test
repnz
scas
sbb
out
push
orl
cld
jb
cmp
add
mov
loopne
bound
data16
or
dec
je
add
in
leave
and
adc
cmp
fwait
imul
and
loopne
insb
enter
cwtl
sbb
mov
xchg
stc
xlat
add
pop
test
ficoml
jl
add
add
out
data16
xchg
mov
pop
mov
mov
xchg
inc
mov
fs
stc
adc
jl
jmp
or
lds
jo
fisubrs
popf
out
push
cmpl
xchg
adc
cmp
pop
std
fcmovu
push
push
leave
cmp
sub
lds
xor
xor
pop
data16
outsl
clc
cmp
cmp
sahf
cmpsb
in
xor
pushf
xchg
pop
loope
push
ror
mov
mov
data16
ljmp
push
testl
mov
fmull
xlat
shrl
cwtl
xchg
fbstp
out
cmc
add
cltd
xlat
in
aad
pop
sbb
fnstsw
aas
or
mov
push
cltd
adc
jbe
int3
sbb
lahf
jl
jmp
movsl
xchg
push
sbb
push
xor
int3
mov
pop
movsl
data16
clc
ss
pop
pop
cli
xor
pop
cmp
arpl
fstpt
scas
or
pop
int
sub
test
xor
cmp
cmc
shll
add
lods
mov
mov
leave
adc
or
leave
scas
jae
mov
or
das
push
cmp
xchg
pop
cwtl
mov
pop
loopne
pop
loope
pop
loop
push
mov
adc
pop
and
pop
add
pop
mov
sub
xchg
call
sub
xlat
lret
push
jle
aad
test
sbb
and
es
int3
mov
ss
push
jecxz
mov
or
mov
stos
loopne
repnz
fwait
jne
mov
in
add
stos
inc
mov
fcos
adc
jmp
or
loope
push
ja
sarl
inc
xchg
xchg
lret
cmp
cld
jl
and
fwait
loopne
lea
pop
dec
mov
enter
insl
rcll
imul
lods
repnz
xchg
fs
inc
daa
repnz
push
xchg
loope
xlat
in
repz
insl
add
xchg
cmp
ret
dec
jle
lcall
and
inc
popf
fidivrl
call
icebp
sbb
sti
into
imul
xor
and
pushf
cmp
push
roll
inc
idivl
testb
lods
pop
or
shrl
leave
push
push
cmovg
call
lret
inc
push
ret
test
popa
movsb
in
dec
pop
bound
xchg
lea
mov
hlt
jno
popa
adc
and
xor
inc
and
add
loope
shll
aam
in
hlt
jno
popa
adc
and
xor
inc
and
add
loope
sarl
mov
jno
popa
adc
inc
cmp
adc
nop
lds
jo
inc
shl
les
xor
sti
sahf
mov
inc
cmp
sub
sbb
or
clc
fwait
call
jge
or
daa
mov
mov
dec
idivb
jecxz
rcrl
ret
or
clc
and
adc
add
jae
arpl
jecxz
mov
dec
repz
xchg
rcrl
ret
or
clc
mov
enter
test
cwtl
mov
dec
cmc
sub
sub
insb
mov
jnp
mov
mov
clc
cwtl
lods
push
adc
sbbb
xor
jge
cmp
stos
je
sub
sub
aaa
or
xchg
insb
dec
push
loope
sbb
arpl
xor
adc
adc
daa
imul
cs
in
add
or
outsb
sub
popf
pushf
mov
mov
push
lahf
jb
pushf
test
cmpsb
xchg
xchg
sbb
test
cmp
adc
mov
fidivrs
mov
loopne
pop
repnz
insb
cmpsl
orb
sub
jge
gs
enter
mov
mov
cmp
cmp
jnp
sbb
sbb
adc
outsl
enter
test
cwtl
sti
mov
xor
pop
popf
dec
xchg
cmp
sub
sbb
test
sbb
fisubs
add
imul
jnp
dec
cmpsl
popa
test
popf
stos
lea
enter
in
icebp
xor
mov
loop
testb
sub
cmpsb
dec
andb
adc
ss
arpl
mov
mov
dec
repz
sub
sbb
or
clc
and
adc
add
jae
arpl
mov
mov
dec
repz
sub
sbb
or
clc
out
mov
int3
or
xor
daa
lret
adc
mov
pop
sub
mov
xchg
sbb
sbb
dec
jl
cmp
mov
pushf
push
jecxz
inc
push
outsl
orb
outsl
xchg
xchg
adc
lret
mov
aad
pushf
cld
xor
ljmp
notl
pop
rolb
cmp
jae
lret
pop
popa
push
outsb
push
mov
or
int
lea
pushw
and
xor
or
fidivrl
xor
cmc
mov
in
insl
cmc
mov
jae
popl
mov
shrl
dec
lea
cmp
jne
cmp
mov
or
mov
lahf
mov
das
adc
repnz
inc
int3
xor
jge
dec
mov
push
and
inc
div
sub
inc
push
data16
pop
or
in
jns
data16
push
gs
or
bound
cmp
fcomps
leave
pop
rcl
mov
ja
shll
cmpsl
push
add
mov
and
jp
fxch
insb
jns
ficompl
push
lods
dec
cmpsl
fbstp
mov
cmp
mov
out
mov
push
add
aas
xor
fnstcw
mov
fildl
xorl
sbb
inc
lods
mov
inc
aam
gs
inc
cmp
movsb
inc
incl
pop
add
inc
repnz
cmp
mov
push
scas
out
xor
mov
cmp
push
mov
cld
push
roll
arpl
lahf
roll
into
adc
lcall
mov
inc
push
push
ret
pop
rcrl
jnp
cli
pop
sbb
fstp
jae
scas
mov
add
adc
pop
xor
divl
xchg
in
dec
pop
mov
enter
cmp
dec
aam
popa
mov
mov
xor
arpl
enter
mov
mov
popf
push
dec
cmp
mov
adc
dec
in
out
pop
and
inc
and
jmp
out
jge
inc
jo
push
shll
fwait
in
stos
outsl
and
loopne
inc
test
stc
and
sub
iret
dec
testb
out
cmp
xor
test
daa
in
dec
and
loop
mov
dec
push
and
into
ficomps
cmp
decb
cmp
insl
int3
mov
jne
test
mov
icebp
into
cwtl
mov
std
ret
pop
ljmp
pop
scas
shlb
das
push
or
mov
inc
out
add
mov
pop
mov
or
add
jbe
pusha
fdivl
pop
je
and
sti
mov
and
andl
lahf
xor
add
mov
inc
movsb
and
push
aam
stos
popf
rolb
hlt
aam
ljmp
js
scas
xchg
flds
jno
pop
sahf
dec
lret
orb
or
add
mov
sub
out
insb
ljmp
dec
dec
xchg
sbb
adc
mov
mov
jnp
enter
pop
mov
mov
push
gs
lds
icebp
sarl
ficompl
adc
lods
ja
mov
mov
push
push
pop
es
sub
xchg
or
addr16
mov
aam
loope
ret
mov
push
mov
push
jne
leave
mov
ficompl
hlt
test
or
andb
outsb
stc
adc
add
mov
jmp
rorb
pop
xchg
mov
pusha
pop
gs
je
xor
or
jmp
aaa
iret
les
call
daa
or
mov
ds
in
imul
lahf
xor
movsl
inc
xlat
stos
stos
xor
dec
jle
outsb
pushl
mov
adc
and
aas
xlat
movsl
imul
pop
jge
out
and
fildl
ljmp
jne
jg
inc
icebp
lods
shlb
mov
mov
jb
leave
mov
fidivrs
pop
adc
rcll
fsub
mov
push
add
push
xor
nop
popf
ficomps
pop
fistl
mov
and
xchg
mov
adc
mov
jo
xchg
xor
jmp
dec
xchg
xchg
lock
out
add
jl
movsl
adc
inc
mov
dec
pop
inc
insl
pop
pop
xor
fildl
pmulhw
in
nopl
movsb
pop
inc
or
add
sbb
popl
xchg
and
jge
push
fsts
lret
mov
xor
lods
jmp
loope
ret
xchg
repz
sti
in
push
or
adc
sbb
ljmp
repz
aas
cltd
out
fdivs
popa
adc
sbb
jmp
sbb
movsb
sahf
and
adc
push
jmp
das
stc
and
push
or
in
out
sub
push
add
xlat
sbb
ret
fsubl
mov
movsl
mov
add
dec
mov
push
xlat
push
stc
mov
mov
hlt
sub
movsl
andb
add
xor
xchg
repz
pop
inc
xor
ss
sti
mov
add
mov
sub
add
adc
rcrl
add
inc
sub
addr16
push
jmp
jle
fisttps
imul
lret
hlt
sbb
xor
fs
mov
mov
iret
insb
ret
fs
insb
xchg
jbe
sbb
out
mov
in
jmp
pop
push
sub
add
adc
loope
testl
out
mov
inc
cld
fisubl
cli
sbb
stos
scas
nopl
adc
sbb
push
pushf
je
inc
jo
cmp
mov
popa
adc
lods
enter
jnp
je
xchg
xchg
in
push
out
pop
mov
int
pop
faddl
inc
addr16
out
mov
sub
add
insb
ljmp
out
xor
clc
cmc
pop
rclb
lea
add
movsl
stc
fdivrl
into
push
pop
push
sub
sub
inc
cmc
lock
dec
gs
xchg
mov
dec
xchg
push
lahf
test
sub
cmc
je
repnz
leave
repnz
stos
adc
mov
test
jns
xor
into
daa
sar
xchg
xchg
icebp
loope
mov
arpl
sub
or
dec
mov
or
stos
cmp
jecxz
or
imul
sbb
bound
inc
out
nop
dec
loope
or
push
stos
xchg
test
scas
xchg
into
pop
xchg
sub
jmp
dec
subl
pop
or
das
push
stc
pop
inc
jmp
push
push
mov
push
ja
inc
lods
imul
pop
ss
test
out
jmp
lods
jo
repz
inc
mov
sub
cwtl
enter
sub
jg
test
sub
aam
insb
aaa
aas
mov
and
aaa
xchg
popf
inc
mov
or
negb
movsb
iret
outsb
mov
stc
fmul
stc
lds
inc
and
xlat
pop
push
outsb
lock
imull
add
mov
or
sub
cmp
movq
mov
adcb
call
jmp
insb
out
aas
adc
fists
push
sti
xchg
dec
add
out
leave
dec
inc
pop
sbb
push
mov
inc
outsb
xor
push
in
fdivrs
and
xor
aaa
das
add
repz
jle
push
imul
xor
mov
add
mov
and
jge
out
and
dec
or
push
out
icebp
push
lret
inc
bound
outsl
mov
addb
mov
push
mov
ljmp
shlb
or
pop
jle
cmp
mov
lds
sub
cmc
and
xor
xchg
fcomps
mov
push
add
dec
mov
jns
test
aam
out
xor
add
out
bnd
notl
jo
sbb
and
xchg
das
scas
add
xorb
adc
mov
out
pop
push
into
inc
mov
mov
or
pop
inc
inc
mov
rclb
and
jne
aad
cld
in
dec
cs
outsb
push
jb
outsl
pop
pushl
mov
cmpsl
pushf
inc
in
or
push
int3
xchg
pushf
xchg
sbb
lds
scas
pop
repnz
cmp
imul
or
push
clc
inc
xor
mov
adc
stos
popf
cld
ficompl
idivl
imul
xor
and
aam
push
negb
cmp
lcall
test
push
pop
mov
mov
or
movsb
arpl
pop
cmp
pop
push
stc
dec
divl
in
iret
ds
test
pop
add
add
mov
iret
es
mov
mov
push
cmp
mov
ja
push
jecxz
and
push
xchg
mov
out
lods
and
sbb
xor
imul
inc
mov
in
int3
xchg
xchg
inc
lods
pop
push
sub
dec
pop
dec
icebp
shlb
and
loope
or
add
push
sub
leave
sub
jl
jo
push
rcrl
lcall
lods
int3
rcll
cmp
sub
insb
xchg
mov
outsl
dec
mov
inc
adc
cmp
dec
fidivs
inc
mov
out
adc
jl
adc
push
pop
or
jmp
sub
lods
fsubrp
sub
sti
je
iret
xor
shll
push
mov
ret
mov
mov
lods
pop
xor
out
lods
push
fdivrl
sub
mov
movl
sub
lahf
fyl2xp1
inc
sbb
popf
cmp
jne
ret
dec
dec
les
push
pop
cmp
out
test
or
push
scas
dec
mov
add
xlat
push
hlt
mov
and
jp
test
cld
xor
jae
test
add
ds
cltd
insb
addr16
hlt
push
pop
fsubp
fs
pop
mov
insl
es
xor
pop
adc
shlb
mulb
sub
pop
pop
std
push
xchg
ljmp
js
je
fcmove
or
out
sub
jae
pop
lcall
sub
jno
rolb
cli
cmp
mov
mov
push
pop
addr16
repnz
std
aas
mov
jl
test
sbb
es
int3
add
mov
sbb
pop
sub
or
dec
lcall
imul
test
adc
or
sbb
or
out
jns
fiadds
dec
decb
jae
sti
testl
into
push
std
jns
fsubrs
push
inc
dec
cmpsl
mov
lock
imul
movsb
jbe
arpl
cli
fcomps
js
cmp
jnp
iret
cwtl
pop
cwtl
sbb
fstp
push
mov
push
insl
leave
cmp
fistps
jecxz
xor
loopne
dec
fimull
sbb
mov
lods
push
insl
dec
rcr
fucomp
imul
lods
das
data16
inc
inc
jae
cmp
xchg
mov
mov
xchg
xchg
sub
gs
movsb
test
ss
mov
lods
sub
scas
mov
daa
jp
dec
lods
add
mov
sbb
dec
mov
dec
loope
test
roll
pop
enter
lock
outsb
movsb
popf
mov
add
add
lret
rep
mov
xor
subl
testb
mov
sub
outsl
mov
fisubrs
mov
xchg
dec
sub
clc
xchg
dec
mov
std
sub
out
mov
mov
inc
sarl
sbb
mov
cvtpi2ps
inc
aas
dec
pusha
mov
fisubrl
scas
adc
push
xchg
addr16
add
or
jp
mov
aas
imul
jb
ljmp
mov
add
cmp
push
sbb
roll
xlat
jge
adc
and
inc
cmp
lea
jae
jl
and
dec
xchg
cltd
mov
in
insl
and
out
mov
jns
shl
jg
shlb
shll
sbb
ja
shl
push
bound
inc
daa
or
fldcw
or
std
mov
das
insl
adc
inc
outsl
dec
cld
pop
popf
rclb
fldenv
stos
stc
lods
stos
adc
imull
mov
adc
sbb
xor
lods
jg
xchg
pop
movsl
ret
pusha
push
push
out
loop
mov
scas
or
aam
xchg
sahf
xchg
sti
sbb
je
adcb
sbb
out
pop
in
jg
mov
aas
xor
sub
xor
sbb
push
push
and
pusha
flds
clc
mov
sub
mov
fxch
mov
pop
js
dec
and
cld
dec
roll
sbb
cmpsl
pop
in
stos
rorb
jmp
outsl
add
and
clc
inc
mov
inc
out
dec
jnp
in
push
xor
inc
jb
lea
ficompl
popf
dec
test
jb
in
insl
iret
xor
xor
into
cmp
testb
dec
lret
sbb
adc
ja
mov
jo
mov
jae
mov
sti
in
cmp
std
dec
cli
jb
addr16
imul
xchg
jae
inc
adc
addr16
inc
mov
mov
push
and
out
mov
xchg
xchg
in
pushf
push
xchg
xor
dec
pop
inc
sbb
sub
addr16
test
cmpsl
sub
repnz
addr16
mov
push
lret
dec
jg
ds
xchg
mov
xchg
lcall
std
sub
gs
jp
or
int
aas
inc
loop
mov
outsl
pop
jae
bound
jl
mov
mov
mov
pop
repnz
out
rorb
orb
add
xchg
jo
dec
adc
adc
push
repnz
std
jo
roll
jp
js
test
aas
cmp
adc
pop
sbb
or
leave
xor
scas
push
mov
mov
xchg
repnz
addr16
jl
out
mov
xchg
cmp
pop
div
cmp
ret
pop
dec
adc
inc
mov
sub
dec
daa
xor
xlat
dec
mov
mov
mov
pop
fwait
jmp
push
pop
xchg
mov
adc
dec
loopne
popf
repz
lock
adc
inc
or
push
jnp
cwtl
cmp
aaa
sbb
repz
pusha
jge
cmp
cli
stos
jl
xchg
mov
dec
push
dec
or
pop
repz
lret
and
sarl
icebp
adc
call
es
subb
or
ret
and
pop
cmpsl
cmc
lcall
jp
and
xor
rclb
gs
ds
cmp
jge
jge
fsubrp
int
sbb
rorb
ficompl
addr16
sub
adc
dec
ds
add
push
push
pusha
xor
pop
mov
aad
cmp
mov
sub
out
or
mov
dec
mov
call
mov
mov
jg
pop
fsubs
mov
pop
jns
int3
add
add
dec
xchg
xchg
fwait
pop
and
imul
ljmp
or
fcoml
xchg
jle
fstps
ss
repz
movsl
data16
push
xor
push
adc
jmp
lds
xlat
inc
mov
inc
xchg
inc
push
xchg
lahf
cld
xchg
xor
insl
into
push
lds
arpl
mov
hlt
cmp
inc
adc
repz
xor
cmpsb
bound
in
test
jg
fs
sub
pop
stos
mov
push
sub
xor
insl
xor
xor
push
lahf
mov
das
sar
push
add
dec
jl
mov
push
pop
call
xor
xchg
sbb
daa
pop
sub
mov
js
fcomps
sub
enter
sbb
in
clc
sbb
cmp
lret
iret
jecxz
mov
lea
inc
leave
test
rcrb
lods
rorl
and
adcl
xor
pop
jecxz
pop
add
pop
scas
rolb
pop
into
int3
ret
xchg
sbb
xor
testl
add
into
xchg
sbb
js
adc
xor
push
xchg
sub
add
mov
xchg
ljmp
pop
inc
pop
stos
mov
mov
ds
jmp
pop
ret
or
dec
cmp
xchg
scas
mov
push
cmc
sbb
and
mov
mov
pop
icebp
ficompl
sbb
pop
psubusw
outsl
push
xor
dec
jbe
pop
daa
jg
xor
mov
mov
cwtl
jae
xchg
xor
push
mov
clc
xchg
enter
or
sbb
mov
das
mov
fsts
or
mov
lret
outsb
and
pusha
mov
mov
xor
mov
mov
lods
dec
sarb
xor
jns
test
in
inc
dec
or
arpl
jae
aad
xchg
popa
or
push
add
lods
adcb
scas
dec
int
pop
push
dec
fildl
inc
scas
loopne
sbb
xchg
pushf
mov
sbb
dec
decb
mov
or
pop
cs
sub
mov
adc
cmp
pusha
mov
shrl
jle
xchg
test
jo
mov
out
mov
sbb
mov
dec
ret
arpl
add
add
popf
cs
rcl
dec
repz
push
jg
mov
pop
push
lret
or
or
test
mov
ret
pop
cmp
cmpsb
outsl
sbb
adc
lret
jmp
insb
pop
mov
insl
imul
cmpb
jl
xor
push
scas
jbe
push
push
adc
movsl
aad
pop
lahf
and
dec
inc
popf
or
adc
jmp
jno
adc
dec
push
ret
pusha
es
pop
jge
mov
jnp
enter
jnp
icebp
xor
add
add
adc
mov
and
xchg
insb
addr16
pop
sbb
das
lret
sbb
jnp
cmpsl
mov
dec
sahf
lea
sub
in
imul
mov
rol
ret
std
repz
mov
es
inc
mov
push
pop
je
call
and
and
fmuls
rcl
mov
bound
or
fsubl
cmp
lahf
inc
std
inc
aas
rclb
sahf
mov
lds
xchg
lcall
mov
adc
outsl
pushf
aam
mov
cmpsl
inc
aad
inc
cmp
and
cmpsb
int
or
fisttps
adc
jne
cmp
adc
dec
adc
je
cmpsl
or
es
mov
setbe
popf
dec
jge
adc
jl
or
cmpsb
movsb
inc
cmpb
push
mov
and
sti
negb
or
sub
push
out
cld
and
int3
test
push
pop
je
popf
or
push
push
push
test
inc
mov
xor
and
sub
insb
dec
pop
idivb
cmp
and
test
mov
gs
xchg
add
insl
push
fnstsw
cmp
fs
jnp
insl
and
sub
add
xchg
add
and
lods
rolb
add
mov
sbb
mov
mov
pop
ficoms
gs
out
adc
pop
imul
inc
sub
dec
jg
aad
lods
fnstcw
dec
or
movsl
fwait
push
cmc
and
xor
call
adc
xchg
and
xchg
sar
adc
shll
popf
xor
add
lods
fsubs
es
lods
out
mov
mov
aad
loopne
stos
enter
cwtl
mov
jb
lock
mov
or
out
push
in
mov
pop
mov
shlb
xchg
mov
push
mov
sbb
mov
scas
mov
mov
cmp
and
in
dec
fwait
and
sub
push
cs
cmp
insb
sub
les
subl
xchg
mov
mov
mov
add
jb
mov
rclb
cmc
push
sub
mov
aad
popf
jno
sti
jnp
and
adc
push
cmc
sbb
push
ljmp
cmpsl
sub
into
mov
into
mov
push
movsb
in
inc
arpl
aad
loope
ja
ljmp
dec
pop
sti
sub
xor
pop
aas
in
mov
and
icebp
mov
dec
call
mov
add
stos
stos
mov
lods
rorl
pusha
xor
adc
insb
and
mov
jo
or
sbb
mov
test
aad
dec
inc
push
js
negb
sbb
add
out
lock
add
mov
outsb
sti
add
aad
mov
cmp
inc
outsb
ret
xchg
cs
int3
sarl
ljmp
es
dec
ljmp
adc
sub
push
fistpll
add
scas
aaa
and
neg
mov
xor
popa
mov
adc
and
repnz
xor
icebp
fistpll
call
dec
fidivrl
jbe
cld
lret
xchg
nop
outsb
inc
imul
pop
mov
dec
xchg
fdivs
push
outsl
or
cmp
mov
ja
xor
das
fcomps
enter
test
cwtl
inc
mov
pop
orl
jecxz
rcrl
ret
or
clc
and
adc
add
jae
arpl
mov
mov
dec
repz
sub
sbb
or
clc
and
add
add
jb
addr16
cwtl
inc
mov
pop
xchg
cmp
sub
sbb
or
clc
psubsb
mov
ret
mov
pop
cmpl
mov
xlat
sub
cmp
xor
push
or
mov
or
mov
or
add
add
add
or
push
add
cmp
add
add
add
add
add
add
add
add
add
add
add
lea
testl
xor
outsb
add
pop
or
sub
jecxz
les
and
inc
add
add
add
add
add
sub
inc
add
add
add
add
mov
cmp
addb
add
add
jecxz
dec
add
add
pop
add
loope
mov
mov
jnp
test
les
jge
mov
add
insb
add
add
add
adc
popa
add
add
add
outsl
add
add
add
add
adc
cmpsb
add
add
push
add
jnp
push
add
add
add
repz
add
add
jp
repz
add
or
verr
add
add
add
testl
ljmp
add
sbb
sbb
sbb
mov
jge
and
sub
or
lret
add
add
add
add
add
or
sbb
testl
xor
outsb
add
aas
add
add
xor
cmp
leave
add
pusha
add
add
dec
add
add
add
add
add
insl
add
sbb
dec
add
cmp
repz
add
pop
cmp
imul
add
cmp
add
add
and
js
dec
add
add
mov
add
add
add
add
add
add
add
push
add
add
add
add
lock
add
add
add
add
outsl
add
mov
les
inc
add
add
add
add
add
add
call
add
add
add
push
jecxz
mov
add
add
add
lea
sahf
add
add
add
mov
sub
mov
add
xor
mov
inc
add
fwait
add
add
ljmp
add
push
add
add
add
add
outsl
add
add
add
add
or
add
cmp
fildl
xor
mov
mov
and
pop
add
add
add
add
add
xor
sub
add
adc
add
xchg
xchg
add
add
add
add
sbb
popa
add
add
add
add
add
add
add
add
inc
add
add
add
add
repz
pop
test
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
or
and
push
add
rolb
add
add
add
add
cmp
adc
jbe
scas
add
add
add
jb
addr16
add
push
add
sahf
add
pop
add
add
ljmp
add
add
add
add
add
add
add
mov
add
outsl
add
add
out
add
add
add
add
mov
mov
jae
lcall
add
add
add
add
outsb
add
add
add
add
add
pop
add
add
outsl
add
jge
or
cmp
aaa
add
add
push
add
add
add
lock
aam
dec
mov
xchg
jae
nop
stc
inc
xor
imul
or
push
out
and
jl
sub
fcoms
sarl
arpl
jmp
lcall
fwait
dec
mov
mov
or
xchg
mov
xchg
hlt
jno
pop
or
movsl
clc
mov
adc
das
cmp
addl
inc
sub
push
jl
jg
sarb
add
dec
imul
mov
sub
or
cmp
ficomps
and
movsl
add
push
mov
pop
push
aad
mov
mov
inc
jno
xor
andl
push
cld
sub
inc
adc
or
sbb
int
repnz
pop
daa
insb
pop
loop
ret
fwait
call
fbstp
outsl
adc
outsb
repz
mov
add
add
xchg
xor
mov
into
xor
jge
mov
dec
xchg
mov
xor
in
inc
push
testb
push
ja
pop
pushf
mov
inc
cwtl
test
imul
aad
popa
add
dec
mov
in
into
mov
jo
mov
add
add
or
mov
sbb
lods
pop
outsb
lcall
sahf
cli
gs
sub
mov
sub
pop
repz
outsb
addl
dec
xor
lcall
fstpt
int
shl
lahf
push
and
notl
lods
cmp
ret
cmp
push
rolb
jno
jmp
mov
mov
jle
out
dec
repnz
jp
popa
popf
in
dec
inc
mov
or
cli
jmp
and
push
ljmp
cltd
pop
push
jns
cmpb
loope
push
or
xchg
std
out
das
insl
dec
ss
jne
mov
ret
fdivrs
pop
jle
int3
or
stc
outsl
in
test
test
push
sbb
movsb
cli
pop
pushf
mov
movsb
mov
insb
sub
mov
cmpb
in
jp
xor
in
adc
xchg
repz
mov
mov
sbb
xchg
dec
jmp
jbe
sub
nop
sbb
addr16
lock
dec
or
mov
mov
jo
movsb
shll
mov
xchg
sub
jo
jl
push
xor
ret
sbb
jno
ljmp
out
cmp
fildll
test
outsb
inc
sub
vpsrld
shll
cmp
inc
jge
movsl
pop
scas
mov
sub
insl
pop
or
adc
xchg
push
lods
mov
adc
mov
jge
add
mov
push
jmp
adc
push
ja
xor
mov
add
inc
addr16
add
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
